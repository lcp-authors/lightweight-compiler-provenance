
../repos/charybdis/authd/.libs/authd:     file format elf32-littlearm


Disassembly of section .init:

000114fc <.init>:
   114fc:	push	{r3, lr}
   11500:	bl	1196c <sprintf@plt+0x48>
   11504:	pop	{r3, pc}

Disassembly of section .plt:

00011508 <sigemptyset@plt-0x14>:
   11508:	push	{lr}		; (str lr, [sp, #-4]!)
   1150c:	ldr	lr, [pc, #4]	; 11518 <sigemptyset@plt-0x4>
   11510:	add	lr, pc, lr
   11514:	ldr	pc, [lr, #8]!
   11518:	andeq	lr, r1, r8, ror #21

0001151c <sigemptyset@plt>:
   1151c:	add	ip, pc, #0, 12
   11520:	add	ip, ip, #122880	; 0x1e000
   11524:	ldr	pc, [ip, #2792]!	; 0xae8

00011528 <strerror@plt>:
   11528:	add	ip, pc, #0, 12
   1152c:	add	ip, ip, #122880	; 0x1e000
   11530:	ldr	pc, [ip, #2784]!	; 0xae0

00011534 <rb_helper_loop@plt>:
   11534:	add	ip, pc, #0, 12
   11538:	add	ip, ip, #122880	; 0x1e000
   1153c:	ldr	pc, [ip, #2776]!	; 0xad8

00011540 <abort@plt>:
   11540:	add	ip, pc, #0, 12
   11544:	add	ip, ip, #122880	; 0x1e000
   11548:	ldr	pc, [ip, #2768]!	; 0xad0

0001154c <rb_event_addish@plt>:
   1154c:	add	ip, pc, #0, 12
   11550:	add	ip, ip, #122880	; 0x1e000
   11554:	ldr	pc, [ip, #2760]!	; 0xac8

00011558 <getsockname@plt>:
   11558:	add	ip, pc, #0, 12
   1155c:	add	ip, ip, #122880	; 0x1e000
   11560:	ldr	pc, [ip, #2752]!	; 0xac0

00011564 <rb_ignore_errno@plt>:
   11564:	add	ip, pc, #0, 12
   11568:	add	ip, ip, #122880	; 0x1e000
   1156c:	ldr	pc, [ip, #2744]!	; 0xab8

00011570 <rb_connect_tcp_ssl@plt>:
   11570:	add	ip, pc, #0, 12
   11574:	add	ip, ip, #122880	; 0x1e000
   11578:	ldr	pc, [ip, #2736]!	; 0xab0

0001157c <rb_connect_tcp@plt>:
   1157c:	add	ip, pc, #0, 12
   11580:	add	ip, ip, #122880	; 0x1e000
   11584:	ldr	pc, [ip, #2728]!	; 0xaa8

00011588 <memcmp@plt>:
   11588:	add	ip, pc, #0, 12
   1158c:	add	ip, ip, #122880	; 0x1e000
   11590:	ldr	pc, [ip, #2720]!	; 0xaa0

00011594 <__libc_start_main@plt>:
   11594:	add	ip, pc, #0, 12
   11598:	add	ip, ip, #122880	; 0x1e000
   1159c:	ldr	pc, [ip, #2712]!	; 0xa98

000115a0 <rb_event_delete@plt>:
   115a0:	add	ip, pc, #0, 12
   115a4:	add	ip, ip, #122880	; 0x1e000
   115a8:	ldr	pc, [ip, #2704]!	; 0xa90

000115ac <rb_setselect@plt>:
   115ac:	add	ip, pc, #0, 12
   115b0:	add	ip, ip, #122880	; 0x1e000
   115b4:	ldr	pc, [ip, #2696]!	; 0xa88

000115b8 <rb_get_fd@plt>:
   115b8:	add	ip, pc, #0, 12
   115bc:	add	ip, ip, #122880	; 0x1e000
   115c0:	ldr	pc, [ip, #2688]!	; 0xa80

000115c4 <__gmon_start__@plt>:
   115c4:	add	ip, pc, #0, 12
   115c8:	add	ip, ip, #122880	; 0x1e000
   115cc:	ldr	pc, [ip, #2680]!	; 0xa78

000115d0 <vsnprintf@plt>:
   115d0:	add	ip, pc, #0, 12
   115d4:	add	ip, ip, #122880	; 0x1e000
   115d8:	ldr	pc, [ip, #2672]!	; 0xa70

000115dc <rb_socket@plt>:
   115dc:	add	ip, pc, #0, 12
   115e0:	add	ip, ip, #122880	; 0x1e000
   115e4:	ldr	pc, [ip, #2664]!	; 0xa68

000115e8 <fclose@plt>:
   115e8:	add	ip, pc, #0, 12
   115ec:	add	ip, ip, #122880	; 0x1e000
   115f0:	ldr	pc, [ip, #2656]!	; 0xa60

000115f4 <fgets@plt>:
   115f4:	add	ip, pc, #0, 12
   115f8:	add	ip, ip, #122880	; 0x1e000
   115fc:	ldr	pc, [ip, #2648]!	; 0xa58

00011600 <rb_strtok_r@plt>:
   11600:	add	ip, pc, #0, 12
   11604:	add	ip, ip, #122880	; 0x1e000
   11608:	ldr	pc, [ip, #2640]!	; 0xa50

0001160c <strchr@plt>:
   1160c:	add	ip, pc, #0, 12
   11610:	add	ip, ip, #122880	; 0x1e000
   11614:	ldr	pc, [ip, #2632]!	; 0xa48

00011618 <rb_dictionary_foreach_cur@plt>:
   11618:	add	ip, pc, #0, 12
   1161c:	add	ip, ip, #122880	; 0x1e000
   11620:	ldr	pc, [ip, #2624]!	; 0xa40

00011624 <strcasecmp@plt>:
   11624:	add	ip, pc, #0, 12
   11628:	add	ip, ip, #122880	; 0x1e000
   1162c:	ldr	pc, [ip, #2616]!	; 0xa38

00011630 <calloc@plt>:
   11630:	add	ip, pc, #0, 12
   11634:	add	ip, ip, #122880	; 0x1e000
   11638:	ldr	pc, [ip, #2608]!	; 0xa30

0001163c <rb_helper_child@plt>:
   1163c:	add	ip, pc, #0, 12
   11640:	add	ip, ip, #122880	; 0x1e000
   11644:	ldr	pc, [ip, #2600]!	; 0xa28

00011648 <sendto@plt>:
   11648:	add	ip, pc, #0, 12
   1164c:	add	ip, ip, #122880	; 0x1e000
   11650:	ldr	pc, [ip, #2592]!	; 0xa20

00011654 <htons@plt>:
   11654:	add	ip, pc, #0, 12
   11658:	add	ip, ip, #122880	; 0x1e000
   1165c:	ldr	pc, [ip, #2584]!	; 0xa18

00011660 <fopen@plt>:
   11660:	add	ip, pc, #0, 12
   11664:	add	ip, ip, #122880	; 0x1e000
   11668:	ldr	pc, [ip, #2576]!	; 0xa10

0001166c <memset@plt>:
   1166c:	add	ip, pc, #0, 12
   11670:	add	ip, ip, #122880	; 0x1e000
   11674:	ldr	pc, [ip, #2568]!	; 0xa08

00011678 <freeaddrinfo@plt>:
   11678:	add	ip, pc, #0, 12
   1167c:	add	ip, ip, #122880	; 0x1e000
   11680:	ldr	pc, [ip, #2560]!	; 0xa00

00011684 <strrchr@plt>:
   11684:	add	ip, pc, #0, 12
   11688:	add	ip, ip, #122880	; 0x1e000
   1168c:	ldr	pc, [ip, #2552]!	; 0x9f8

00011690 <rb_write@plt>:
   11690:	add	ip, pc, #0, 12
   11694:	add	ip, ip, #122880	; 0x1e000
   11698:	ldr	pc, [ip, #2544]!	; 0x9f0

0001169c <__assert_fail@plt>:
   1169c:	add	ip, pc, #0, 12
   116a0:	add	ip, ip, #122880	; 0x1e000
   116a4:	ldr	pc, [ip, #2536]!	; 0x9e8

000116a8 <rb_strlcpy@plt>:
   116a8:	add	ip, pc, #0, 12
   116ac:	add	ip, ip, #122880	; 0x1e000
   116b0:	ldr	pc, [ip, #2528]!	; 0x9e0

000116b4 <strtoull@plt>:
   116b4:	add	ip, pc, #0, 12
   116b8:	add	ip, ip, #122880	; 0x1e000
   116bc:	ldr	pc, [ip, #2520]!	; 0x9d8

000116c0 <rb_dictionary_foreach_next@plt>:
   116c0:	add	ip, pc, #0, 12
   116c4:	add	ip, ip, #122880	; 0x1e000
   116c8:	ldr	pc, [ip, #2512]!	; 0x9d0

000116cc <free@plt>:
   116cc:	add	ip, pc, #0, 12
   116d0:	add	ip, ip, #122880	; 0x1e000
   116d4:	ldr	pc, [ip, #2504]!	; 0x9c8

000116d8 <rb_string_to_array@plt>:
   116d8:	add	ip, pc, #0, 12
   116dc:	add	ip, ip, #122880	; 0x1e000
   116e0:	ldr	pc, [ip, #2496]!	; 0x9c0

000116e4 <rb_read@plt>:
   116e4:	add	ip, pc, #0, 12
   116e8:	add	ip, ip, #122880	; 0x1e000
   116ec:	ldr	pc, [ip, #2488]!	; 0x9b8

000116f0 <rb_strcasecmp@plt>:
   116f0:	add	ip, pc, #0, 12
   116f4:	add	ip, ip, #122880	; 0x1e000
   116f8:	ldr	pc, [ip, #2480]!	; 0x9b0

000116fc <getaddrinfo@plt>:
   116fc:	add	ip, pc, #0, 12
   11700:	add	ip, ip, #122880	; 0x1e000
   11704:	ldr	pc, [ip, #2472]!	; 0x9a8

00011708 <rb_dictionary_foreach_start@plt>:
   11708:	add	ip, pc, #0, 12
   1170c:	add	ip, ip, #122880	; 0x1e000
   11710:	ldr	pc, [ip, #2464]!	; 0x9a0

00011714 <ntohs@plt>:
   11714:	add	ip, pc, #0, 12
   11718:	add	ip, ip, #122880	; 0x1e000
   1171c:	ldr	pc, [ip, #2456]!	; 0x998

00011720 <rb_inet_pton_sock@plt>:
   11720:	add	ip, pc, #0, 12
   11724:	add	ip, ip, #122880	; 0x1e000
   11728:	ldr	pc, [ip, #2448]!	; 0x990

0001172c <strlen@plt>:
   1172c:	add	ip, pc, #0, 12
   11730:	add	ip, ip, #122880	; 0x1e000
   11734:	ldr	pc, [ip, #2440]!	; 0x988

00011738 <rb_current_time@plt>:
   11738:	add	ip, pc, #0, 12
   1173c:	add	ip, ip, #122880	; 0x1e000
   11740:	ldr	pc, [ip, #2432]!	; 0x980

00011744 <rb_dictionary_delete@plt>:
   11744:	add	ip, pc, #0, 12
   11748:	add	ip, ip, #122880	; 0x1e000
   1174c:	ldr	pc, [ip, #2424]!	; 0x978

00011750 <memcpy@plt>:
   11750:	add	ip, pc, #0, 12
   11754:	add	ip, ip, #122880	; 0x1e000
   11758:	ldr	pc, [ip, #2416]!	; 0x970

0001175c <rb_free_rb_dlink_node@plt>:
   1175c:	add	ip, pc, #0, 12
   11760:	add	ip, ip, #122880	; 0x1e000
   11764:	ldr	pc, [ip, #2408]!	; 0x968

00011768 <rb_close@plt>:
   11768:	add	ip, pc, #0, 12
   1176c:	add	ip, ip, #122880	; 0x1e000
   11770:	ldr	pc, [ip, #2400]!	; 0x960

00011774 <strtol@plt>:
   11774:	add	ip, pc, #0, 12
   11778:	add	ip, ip, #122880	; 0x1e000
   1177c:	ldr	pc, [ip, #2392]!	; 0x958

00011780 <sigaddset@plt>:
   11780:	add	ip, pc, #0, 12
   11784:	add	ip, ip, #122880	; 0x1e000
   11788:	ldr	pc, [ip, #2384]!	; 0x950

0001178c <strcpy@plt>:
   1178c:	add	ip, pc, #0, 12
   11790:	add	ip, ip, #122880	; 0x1e000
   11794:	ldr	pc, [ip, #2376]!	; 0x948

00011798 <atoi@plt>:
   11798:	add	ip, pc, #0, 12
   1179c:	add	ip, ip, #122880	; 0x1e000
   117a0:	ldr	pc, [ip, #2368]!	; 0x940

000117a4 <rb_dictionary_destroy@plt>:
   117a4:	add	ip, pc, #0, 12
   117a8:	add	ip, ip, #122880	; 0x1e000
   117ac:	ldr	pc, [ip, #2360]!	; 0x938

000117b0 <bind@plt>:
   117b0:	add	ip, pc, #0, 12
   117b4:	add	ip, ip, #122880	; 0x1e000
   117b8:	ldr	pc, [ip, #2352]!	; 0x930

000117bc <rb_lib_log@plt>:
   117bc:	add	ip, pc, #0, 12
   117c0:	add	ip, ip, #122880	; 0x1e000
   117c4:	ldr	pc, [ip, #2344]!	; 0x928

000117c8 <strstr@plt>:
   117c8:	add	ip, pc, #0, 12
   117cc:	add	ip, ip, #122880	; 0x1e000
   117d0:	ldr	pc, [ip, #2336]!	; 0x920

000117d4 <rb_init_prng@plt>:
   117d4:	add	ip, pc, #0, 12
   117d8:	add	ip, ip, #122880	; 0x1e000
   117dc:	ldr	pc, [ip, #2328]!	; 0x918

000117e0 <rb_dictionary_retrieve@plt>:
   117e0:	add	ip, pc, #0, 12
   117e4:	add	ip, ip, #122880	; 0x1e000
   117e8:	ldr	pc, [ip, #2320]!	; 0x910

000117ec <rb_outofmemory@plt>:
   117ec:	add	ip, pc, #0, 12
   117f0:	add	ip, ip, #122880	; 0x1e000
   117f4:	ldr	pc, [ip, #2312]!	; 0x908

000117f8 <__ctype_b_loc@plt>:
   117f8:	add	ip, pc, #0, 12
   117fc:	add	ip, ip, #122880	; 0x1e000
   11800:	ldr	pc, [ip, #2304]!	; 0x900

00011804 <fprintf@plt>:
   11804:	add	ip, pc, #0, 12
   11808:	add	ip, ip, #122880	; 0x1e000
   1180c:	ldr	pc, [ip, #2296]!	; 0x8f8

00011810 <rb_dictionary_add@plt>:
   11810:	add	ip, pc, #0, 12
   11814:	add	ip, ip, #122880	; 0x1e000
   11818:	ldr	pc, [ip, #2288]!	; 0x8f0

0001181c <rb_set_time@plt>:
   1181c:	add	ip, pc, #0, 12
   11820:	add	ip, ip, #122880	; 0x1e000
   11824:	ldr	pc, [ip, #2280]!	; 0x8e8

00011828 <malloc@plt>:
   11828:	add	ip, pc, #0, 12
   1182c:	add	ip, ip, #122880	; 0x1e000
   11830:	ldr	pc, [ip, #2272]!	; 0x8e0

00011834 <sigaction@plt>:
   11834:	add	ip, pc, #0, 12
   11838:	add	ip, ip, #122880	; 0x1e000
   1183c:	ldr	pc, [ip, #2264]!	; 0x8d8

00011840 <rb_helper_read@plt>:
   11840:	add	ip, pc, #0, 12
   11844:	add	ip, ip, #122880	; 0x1e000
   11848:	ldr	pc, [ip, #2256]!	; 0x8d0

0001184c <rb_inet_ntop_sock@plt>:
   1184c:	add	ip, pc, #0, 12
   11850:	add	ip, ip, #122880	; 0x1e000
   11854:	ldr	pc, [ip, #2248]!	; 0x8c8

00011858 <rb_dictionary_find@plt>:
   11858:	add	ip, pc, #0, 12
   1185c:	add	ip, ip, #122880	; 0x1e000
   11860:	ldr	pc, [ip, #2240]!	; 0x8c0

00011864 <rb_dictionary_create@plt>:
   11864:	add	ip, pc, #0, 12
   11868:	add	ip, ip, #122880	; 0x1e000
   1186c:	ldr	pc, [ip, #2232]!	; 0x8b8

00011870 <memmove@plt>:
   11870:	add	ip, pc, #0, 12
   11874:	add	ip, ip, #122880	; 0x1e000
   11878:	ldr	pc, [ip, #2224]!	; 0x8b0

0001187c <rb_accept_tcp@plt>:
   1187c:	add	ip, pc, #0, 12
   11880:	add	ip, ip, #122880	; 0x1e000
   11884:	ldr	pc, [ip, #2216]!	; 0x8a8

00011888 <rb_helper_write@plt>:
   11888:	add	ip, pc, #0, 12
   1188c:	add	ip, ip, #122880	; 0x1e000
   11890:	ldr	pc, [ip, #2208]!	; 0x8a0

00011894 <rb_event_add@plt>:
   11894:	add	ip, pc, #0, 12
   11898:	add	ip, ip, #122880	; 0x1e000
   1189c:	ldr	pc, [ip, #2200]!	; 0x898

000118a0 <rb_get_random@plt>:
   118a0:	add	ip, pc, #0, 12
   118a4:	add	ip, ip, #122880	; 0x1e000
   118a8:	ldr	pc, [ip, #2192]!	; 0x890

000118ac <rb_make_rb_dlink_node@plt>:
   118ac:	add	ip, pc, #0, 12
   118b0:	add	ip, ip, #122880	; 0x1e000
   118b4:	ldr	pc, [ip, #2184]!	; 0x888

000118b8 <snprintf@plt>:
   118b8:	add	ip, pc, #0, 12
   118bc:	add	ip, ip, #122880	; 0x1e000
   118c0:	ldr	pc, [ip, #2176]!	; 0x880

000118c4 <rb_listen@plt>:
   118c4:	add	ip, pc, #0, 12
   118c8:	add	ip, ip, #122880	; 0x1e000
   118cc:	ldr	pc, [ip, #2168]!	; 0x878

000118d0 <strncmp@plt>:
   118d0:	add	ip, pc, #0, 12
   118d4:	add	ip, ip, #122880	; 0x1e000
   118d8:	ldr	pc, [ip, #2160]!	; 0x870

000118dc <recvfrom@plt>:
   118dc:	add	ip, pc, #0, 12
   118e0:	add	ip, ip, #122880	; 0x1e000
   118e4:	ldr	pc, [ip, #2152]!	; 0x868

000118e8 <setsockopt@plt>:
   118e8:	add	ip, pc, #0, 12
   118ec:	add	ip, ip, #122880	; 0x1e000
   118f0:	ldr	pc, [ip, #2144]!	; 0x860

000118f4 <strpbrk@plt>:
   118f4:	add	ip, pc, #0, 12
   118f8:	add	ip, ip, #122880	; 0x1e000
   118fc:	ldr	pc, [ip, #2136]!	; 0x858

00011900 <strcmp@plt>:
   11900:	add	ip, pc, #0, 12
   11904:	add	ip, ip, #122880	; 0x1e000
   11908:	ldr	pc, [ip, #2128]!	; 0x850

0001190c <exit@plt>:
   1190c:	add	ip, pc, #0, 12
   11910:	add	ip, ip, #122880	; 0x1e000
   11914:	ldr	pc, [ip, #2120]!	; 0x848

00011918 <__errno_location@plt>:
   11918:	add	ip, pc, #0, 12
   1191c:	add	ip, ip, #122880	; 0x1e000
   11920:	ldr	pc, [ip, #2112]!	; 0x840

00011924 <sprintf@plt>:
   11924:	add	ip, pc, #0, 12
   11928:	add	ip, ip, #122880	; 0x1e000
   1192c:	ldr	pc, [ip, #2104]!	; 0x838

Disassembly of section .text:

00011930 <.text>:
   11930:	mov	fp, #0
   11934:	mov	lr, #0
   11938:	pop	{r1}		; (ldr r1, [sp], #4)
   1193c:	mov	r2, sp
   11940:	push	{r2}		; (str r2, [sp, #-4]!)
   11944:	push	{r0}		; (str r0, [sp, #-4]!)
   11948:	ldr	ip, [pc, #16]	; 11960 <sprintf@plt+0x3c>
   1194c:	push	{ip}		; (str ip, [sp, #-4]!)
   11950:	ldr	r0, [pc, #12]	; 11964 <sprintf@plt+0x40>
   11954:	ldr	r3, [pc, #12]	; 11968 <sprintf@plt+0x44>
   11958:	bl	11594 <__libc_start_main@plt>
   1195c:	bl	11540 <abort@plt>
   11960:	ldrdeq	lr, [r1], -r8
   11964:	andeq	r1, r1, ip, lsr sp
   11968:	andeq	lr, r1, r8, ror r7
   1196c:	ldr	r3, [pc, #20]	; 11988 <sprintf@plt+0x64>
   11970:	ldr	r2, [pc, #20]	; 1198c <sprintf@plt+0x68>
   11974:	add	r3, pc, r3
   11978:	ldr	r2, [r3, r2]
   1197c:	cmp	r2, #0
   11980:	bxeq	lr
   11984:	b	115c4 <__gmon_start__@plt>
   11988:	andeq	lr, r1, r4, lsl #13
   1198c:	andeq	r0, r0, ip, ror #2
   11990:	ldr	r0, [pc, #24]	; 119b0 <sprintf@plt+0x8c>
   11994:	ldr	r3, [pc, #24]	; 119b4 <sprintf@plt+0x90>
   11998:	cmp	r3, r0
   1199c:	bxeq	lr
   119a0:	ldr	r3, [pc, #16]	; 119b8 <sprintf@plt+0x94>
   119a4:	cmp	r3, #0
   119a8:	bxeq	lr
   119ac:	bx	r3
   119b0:			; <UNDEFINED> instruction: 0x00030fb8
   119b4:			; <UNDEFINED> instruction: 0x00030fb8
   119b8:	andeq	r0, r0, r0
   119bc:	ldr	r0, [pc, #36]	; 119e8 <sprintf@plt+0xc4>
   119c0:	ldr	r1, [pc, #36]	; 119ec <sprintf@plt+0xc8>
   119c4:	sub	r1, r1, r0
   119c8:	asr	r1, r1, #2
   119cc:	add	r1, r1, r1, lsr #31
   119d0:	asrs	r1, r1, #1
   119d4:	bxeq	lr
   119d8:	ldr	r3, [pc, #16]	; 119f0 <sprintf@plt+0xcc>
   119dc:	cmp	r3, #0
   119e0:	bxeq	lr
   119e4:	bx	r3
   119e8:			; <UNDEFINED> instruction: 0x00030fb8
   119ec:			; <UNDEFINED> instruction: 0x00030fb8
   119f0:	andeq	r0, r0, r0
   119f4:	push	{r4, lr}
   119f8:	ldr	r4, [pc, #24]	; 11a18 <sprintf@plt+0xf4>
   119fc:	ldrb	r3, [r4]
   11a00:	cmp	r3, #0
   11a04:	popne	{r4, pc}
   11a08:	bl	11990 <sprintf@plt+0x6c>
   11a0c:	mov	r3, #1
   11a10:	strb	r3, [r4]
   11a14:	pop	{r4, pc}
   11a18:			; <UNDEFINED> instruction: 0x00030fb8
   11a1c:	b	119bc <sprintf@plt+0x98>
   11a20:	push	{fp, lr}
   11a24:	mov	fp, sp
   11a28:	sub	sp, sp, #16
   11a2c:	str	r0, [fp, #-4]
   11a30:	str	r1, [sp, #8]
   11a34:	ldr	r0, [fp, #-4]
   11a38:	cmp	r0, #2
   11a3c:	bge	11a58 <sprintf@plt+0x134>
   11a40:	ldr	r0, [pc, #216]	; 11b20 <sprintf@plt+0x1fc>
   11a44:	add	r1, pc, r0
   11a48:	ldr	r2, [fp, #-4]
   11a4c:	movw	r0, #67	; 0x43
   11a50:	bl	12bfc <sprintf@plt+0x12d8>
   11a54:	b	11b0c <sprintf@plt+0x1e8>
   11a58:	ldr	r0, [pc, #180]	; 11b14 <sprintf@plt+0x1f0>
   11a5c:	ldr	r0, [pc, r0]
   11a60:	ldr	r0, [r0]
   11a64:	ldr	r1, [sp, #8]
   11a68:	ldr	r1, [r1, #4]
   11a6c:	bl	117e0 <rb_dictionary_retrieve@plt>
   11a70:	str	r0, [sp, #4]
   11a74:	movw	r1, #0
   11a78:	cmp	r0, r1
   11a7c:	bne	11a9c <sprintf@plt+0x178>
   11a80:	ldr	r0, [pc, #148]	; 11b1c <sprintf@plt+0x1f8>
   11a84:	add	r1, pc, r0
   11a88:	ldr	r0, [sp, #8]
   11a8c:	ldr	r2, [r0, #4]
   11a90:	movw	r0, #67	; 0x43
   11a94:	bl	12bfc <sprintf@plt+0x12d8>
   11a98:	b	11b0c <sprintf@plt+0x1e8>
   11a9c:	ldr	r0, [fp, #-4]
   11aa0:	sub	r0, r0, #2
   11aa4:	ldr	r1, [sp, #4]
   11aa8:	ldr	r1, [r1, #4]
   11aac:	cmp	r0, r1
   11ab0:	bge	11ad4 <sprintf@plt+0x1b0>
   11ab4:	ldr	r0, [pc, #92]	; 11b18 <sprintf@plt+0x1f4>
   11ab8:	add	r1, pc, r0
   11abc:	ldr	r0, [sp, #4]
   11ac0:	ldr	r2, [r0, #4]
   11ac4:	ldr	r3, [fp, #-4]
   11ac8:	movw	r0, #67	; 0x43
   11acc:	bl	12bfc <sprintf@plt+0x12d8>
   11ad0:	b	11b0c <sprintf@plt+0x1e8>
   11ad4:	ldr	r0, [sp, #4]
   11ad8:	ldr	r0, [r0, #8]
   11adc:	ldr	r1, [sp, #8]
   11ae0:	ldr	r1, [r1, #4]
   11ae4:	ldr	r2, [fp, #-4]
   11ae8:	sub	r2, r2, #2
   11aec:	ldr	r3, [sp, #8]
   11af0:	add	r3, r3, #8
   11af4:	str	r0, [sp]
   11af8:	mov	r0, r1
   11afc:	mov	r1, r2
   11b00:	mov	r2, r3
   11b04:	ldr	r3, [sp]
   11b08:	blx	r3
   11b0c:	mov	sp, fp
   11b10:	pop	{fp, pc}
   11b14:	andeq	lr, r1, ip, lsr #14
   11b18:	andeq	ip, r0, r6, ror #28
   11b1c:	andeq	ip, r0, sp, ror #28
   11b20:	andeq	ip, r0, pc, asr lr
   11b24:	push	{fp, lr}
   11b28:	mov	fp, sp
   11b2c:	sub	sp, sp, #40	; 0x28
   11b30:	str	r0, [fp, #-4]
   11b34:	str	r1, [fp, #-8]
   11b38:	ldr	r0, [fp, #-4]
   11b3c:	cmp	r0, #2
   11b40:	bgt	11bc4 <sprintf@plt+0x2a0>
   11b44:	movw	r0, #0
   11b48:	str	r0, [fp, #-16]
   11b4c:	ldr	r0, [fp, #-16]
   11b50:	cmp	r0, #256	; 0x100
   11b54:	bcs	11bc0 <sprintf@plt+0x29c>
   11b58:	ldr	r0, [pc, #212]	; 11c34 <sprintf@plt+0x310>
   11b5c:	ldr	r0, [pc, r0]
   11b60:	ldrb	r1, [fp, #-16]
   11b64:	mov	r2, r1
   11b68:	ldr	r3, [pc, #200]	; 11c38 <sprintf@plt+0x314>
   11b6c:	ldr	r3, [pc, r3]
   11b70:	add	r1, r3, r1, lsl #2
   11b74:	ldr	r1, [r1]
   11b78:	str	r1, [fp, #-12]
   11b7c:	movw	r3, #0
   11b80:	cmp	r1, r3
   11b84:	str	r0, [sp, #20]
   11b88:	str	r2, [sp, #16]
   11b8c:	beq	11bac <sprintf@plt+0x288>
   11b90:	ldr	r0, [fp, #-12]
   11b94:	movw	r1, #0
   11b98:	and	r1, r1, #255	; 0xff
   11b9c:	str	r0, [sp, #12]
   11ba0:	mov	r0, r1
   11ba4:	ldr	r1, [sp, #12]
   11ba8:	blx	r1
   11bac:	b	11bb0 <sprintf@plt+0x28c>
   11bb0:	ldr	r0, [fp, #-16]
   11bb4:	add	r0, r0, #1
   11bb8:	str	r0, [fp, #-16]
   11bbc:	b	11b4c <sprintf@plt+0x228>
   11bc0:	b	11c28 <sprintf@plt+0x304>
   11bc4:	ldr	r0, [pc, #100]	; 11c30 <sprintf@plt+0x30c>
   11bc8:	ldr	r0, [pc, r0]
   11bcc:	ldr	r1, [fp, #-8]
   11bd0:	ldr	r1, [r1, #4]
   11bd4:	ldrb	r1, [r1]
   11bd8:	mov	r2, r1
   11bdc:	ldr	r3, [pc, #88]	; 11c3c <sprintf@plt+0x318>
   11be0:	ldr	r3, [pc, r3]
   11be4:	add	r1, r3, r1, lsl #2
   11be8:	ldr	r1, [r1]
   11bec:	str	r1, [fp, #-12]
   11bf0:	movw	r3, #0
   11bf4:	cmp	r1, r3
   11bf8:	str	r0, [sp, #8]
   11bfc:	str	r2, [sp, #4]
   11c00:	bne	11c08 <sprintf@plt+0x2e4>
   11c04:	b	11c28 <sprintf@plt+0x304>
   11c08:	ldr	r0, [fp, #-12]
   11c0c:	ldr	r1, [fp, #-8]
   11c10:	ldr	r1, [r1, #4]
   11c14:	ldrb	r1, [r1]
   11c18:	str	r0, [sp]
   11c1c:	mov	r0, r1
   11c20:	ldr	r1, [sp]
   11c24:	blx	r1
   11c28:	mov	sp, fp
   11c2c:	pop	{fp, pc}
   11c30:	andeq	lr, r1, ip, asr #11
   11c34:	andeq	lr, r1, r8, lsr r6
   11c38:	andeq	lr, r1, r8, lsr #12
   11c3c:			; <UNDEFINED> instruction: 0x0001e5b4
   11c40:	push	{fp, lr}
   11c44:	mov	fp, sp
   11c48:	sub	sp, sp, #40	; 0x28
   11c4c:	str	r0, [fp, #-4]
   11c50:	str	r1, [fp, #-8]
   11c54:	ldr	r0, [fp, #-4]
   11c58:	cmp	r0, #3
   11c5c:	bge	11c78 <sprintf@plt+0x354>
   11c60:	ldr	r0, [pc, #204]	; 11d34 <sprintf@plt+0x410>
   11c64:	add	r1, pc, r0
   11c68:	ldr	r2, [fp, #-4]
   11c6c:	movw	r0, #67	; 0x43
   11c70:	bl	12bfc <sprintf@plt+0x12d8>
   11c74:	b	11d24 <sprintf@plt+0x400>
   11c78:	ldr	r0, [fp, #-8]
   11c7c:	ldr	r0, [r0, #4]
   11c80:	mov	r1, #0
   11c84:	mov	r2, #16
   11c88:	bl	116b4 <strtoull@plt>
   11c8c:	str	r1, [sp, #20]
   11c90:	str	r0, [sp, #16]
   11c94:	cmp	r1, #0
   11c98:	beq	11cbc <sprintf@plt+0x398>
   11c9c:	b	11ca0 <sprintf@plt+0x37c>
   11ca0:	ldr	r0, [pc, #136]	; 11d30 <sprintf@plt+0x40c>
   11ca4:	add	r1, pc, r0
   11ca8:	ldr	r0, [fp, #-8]
   11cac:	ldr	r2, [r0, #4]
   11cb0:	movw	r0, #67	; 0x43
   11cb4:	bl	12bfc <sprintf@plt+0x12d8>
   11cb8:	b	11d24 <sprintf@plt+0x400>
   11cbc:	ldr	r0, [pc, #104]	; 11d2c <sprintf@plt+0x408>
   11cc0:	ldr	r0, [pc, r0]
   11cc4:	ldr	r1, [fp, #-8]
   11cc8:	ldr	r1, [r1, #8]
   11ccc:	ldrb	r1, [r1]
   11cd0:	mov	r2, r1
   11cd4:	ldr	r3, [pc, #92]	; 11d38 <sprintf@plt+0x414>
   11cd8:	ldr	r3, [pc, r3]
   11cdc:	add	r1, r3, r1, lsl #2
   11ce0:	ldr	r1, [r1]
   11ce4:	str	r1, [fp, #-12]
   11ce8:	movw	r3, #0
   11cec:	cmp	r1, r3
   11cf0:	str	r0, [sp, #12]
   11cf4:	str	r2, [sp, #8]
   11cf8:	bne	11d00 <sprintf@plt+0x3dc>
   11cfc:	b	11d24 <sprintf@plt+0x400>
   11d00:	ldr	r0, [fp, #-12]
   11d04:	ldr	r1, [sp, #16]
   11d08:	ldr	r2, [fp, #-8]
   11d0c:	ldr	r2, [r2, #8]
   11d10:	str	r0, [sp, #4]
   11d14:	mov	r0, r1
   11d18:	ldrb	r1, [r2]
   11d1c:	ldr	r2, [sp, #4]
   11d20:	blx	r2
   11d24:	mov	sp, fp
   11d28:	pop	{fp, pc}
   11d2c:	andeq	lr, r1, r0, ror #9
   11d30:	andeq	ip, r0, sp, asr #23
   11d34:	andeq	ip, r0, r2, asr #23
   11d38:	andeq	lr, r1, r8, asr #9
   11d3c:	push	{fp, lr}
   11d40:	mov	fp, sp
   11d44:	sub	sp, sp, #40	; 0x28
   11d48:	movw	r2, #0
   11d4c:	str	r2, [fp, #-4]
   11d50:	str	r0, [fp, #-8]
   11d54:	str	r1, [fp, #-12]
   11d58:	bl	11e58 <sprintf@plt+0x534>
   11d5c:	ldr	r0, [pc, #212]	; 11e38 <sprintf@plt+0x514>
   11d60:	add	r0, pc, r0
   11d64:	ldr	r1, [pc, #208]	; 11e3c <sprintf@plt+0x518>
   11d68:	add	r1, pc, r1
   11d6c:	movw	r2, #0
   11d70:	str	r2, [fp, #-16]
   11d74:	ldr	r3, [fp, #-16]
   11d78:	ldr	lr, [fp, #-16]
   11d7c:	str	lr, [sp]
   11d80:	movw	ip, #256	; 0x100
   11d84:	str	ip, [sp, #4]
   11d88:	str	ip, [sp, #8]
   11d8c:	str	ip, [sp, #12]
   11d90:	bl	1163c <rb_helper_child@plt>
   11d94:	ldr	r1, [pc, #152]	; 11e34 <sprintf@plt+0x510>
   11d98:	ldr	r1, [pc, r1]
   11d9c:	str	r0, [r1]
   11da0:	ldr	r0, [r1]
   11da4:	movw	r1, #0
   11da8:	cmp	r0, r1
   11dac:	bne	11dd8 <sprintf@plt+0x4b4>
   11db0:	ldr	r0, [pc, #152]	; 11e50 <sprintf@plt+0x52c>
   11db4:	add	r1, pc, r0
   11db8:	ldr	r0, [pc, #148]	; 11e54 <sprintf@plt+0x530>
   11dbc:	ldr	r0, [pc, r0]
   11dc0:	ldr	r0, [r0]
   11dc4:	bl	11804 <fprintf@plt>
   11dc8:	movw	r1, #1
   11dcc:	str	r0, [sp, #20]
   11dd0:	mov	r0, r1
   11dd4:	bl	1190c <exit@plt>
   11dd8:	bl	1181c <rb_set_time@plt>
   11ddc:	bl	11e58 <sprintf@plt+0x534>
   11de0:	ldr	lr, [pc, #96]	; 11e48 <sprintf@plt+0x524>
   11de4:	add	r0, pc, lr
   11de8:	ldr	lr, [pc, #92]	; 11e4c <sprintf@plt+0x528>
   11dec:	ldr	lr, [pc, lr]
   11df0:	mov	r1, lr
   11df4:	bl	11864 <rb_dictionary_create@plt>
   11df8:	ldr	r1, [pc, #68]	; 11e44 <sprintf@plt+0x520>
   11dfc:	ldr	r1, [pc, r1]
   11e00:	str	r0, [r1]
   11e04:	bl	142e4 <sprintf@plt+0x29c0>
   11e08:	bl	12e0c <sprintf@plt+0x14e8>
   11e0c:	movw	r0, #0
   11e10:	movw	r1, #1
   11e14:	bl	117d4 <rb_init_prng@plt>
   11e18:	ldr	r1, [pc, #32]	; 11e40 <sprintf@plt+0x51c>
   11e1c:	ldr	r1, [pc, r1]
   11e20:	ldr	r1, [r1]
   11e24:	str	r0, [sp, #16]
   11e28:	mov	r0, r1
   11e2c:	movw	r1, #0
   11e30:	bl	11534 <rb_helper_loop@plt>
   11e34:	andeq	lr, r1, r4, lsl #8
   11e38:	strdeq	r0, [r0], -r4
   11e3c:	ldrdeq	r0, [r0], -r4
   11e40:	andeq	lr, r1, r0, lsl #7
   11e44:	andeq	lr, r1, ip, lsl #7
   11e48:	andeq	ip, r0, fp, lsr #20
   11e4c:	muleq	r1, r8, r3
   11e50:	andeq	ip, r0, ip, lsr #20
   11e54:	ldrdeq	lr, [r1], -ip
   11e58:	push	{fp, lr}
   11e5c:	mov	fp, sp
   11e60:	sub	sp, sp, #176	; 0xb0
   11e64:	movw	r0, #0
   11e68:	str	r0, [sp, #168]	; 0xa8
   11e6c:	movw	r0, #1
   11e70:	str	r0, [sp, #36]	; 0x24
   11e74:	add	r0, sp, #36	; 0x24
   11e78:	add	r0, r0, #4
   11e7c:	bl	1151c <sigemptyset@plt>
   11e80:	add	lr, sp, #36	; 0x24
   11e84:	add	lr, lr, #4
   11e88:	str	r0, [sp, #32]
   11e8c:	mov	r0, lr
   11e90:	movw	r1, #13
   11e94:	bl	11780 <sigaddset@plt>
   11e98:	add	r1, sp, #36	; 0x24
   11e9c:	add	r1, r1, #4
   11ea0:	str	r0, [sp, #28]
   11ea4:	mov	r0, r1
   11ea8:	movw	r1, #14
   11eac:	bl	11780 <sigaddset@plt>
   11eb0:	add	r1, sp, #36	; 0x24
   11eb4:	add	r1, r1, #4
   11eb8:	str	r0, [sp, #24]
   11ebc:	mov	r0, r1
   11ec0:	movw	r1, #5
   11ec4:	bl	11780 <sigaddset@plt>
   11ec8:	add	r1, sp, #36	; 0x24
   11ecc:	add	r1, r1, #4
   11ed0:	str	r0, [sp, #20]
   11ed4:	mov	r0, r1
   11ed8:	movw	r1, #28
   11edc:	bl	11780 <sigaddset@plt>
   11ee0:	movw	r1, #28
   11ee4:	str	r0, [sp, #16]
   11ee8:	mov	r0, r1
   11eec:	add	r1, sp, #36	; 0x24
   11ef0:	movw	r2, #0
   11ef4:	bl	11834 <sigaction@plt>
   11ef8:	movw	r1, #13
   11efc:	str	r0, [sp, #12]
   11f00:	mov	r0, r1
   11f04:	add	r1, sp, #36	; 0x24
   11f08:	movw	r2, #0
   11f0c:	bl	11834 <sigaction@plt>
   11f10:	movw	r1, #5
   11f14:	str	r0, [sp, #8]
   11f18:	mov	r0, r1
   11f1c:	add	r1, sp, #36	; 0x24
   11f20:	movw	r2, #0
   11f24:	bl	11834 <sigaction@plt>
   11f28:	ldr	r1, [pc, #40]	; 11f58 <sprintf@plt+0x634>
   11f2c:	add	r1, pc, r1
   11f30:	str	r1, [sp, #36]	; 0x24
   11f34:	movw	r1, #14
   11f38:	str	r0, [sp, #4]
   11f3c:	mov	r0, r1
   11f40:	add	r1, sp, #36	; 0x24
   11f44:	movw	r2, #0
   11f48:	bl	11834 <sigaction@plt>
   11f4c:	str	r0, [sp]
   11f50:	mov	sp, fp
   11f54:	pop	{fp, pc}
   11f58:	andeq	r0, r0, r8, lsr #2
   11f5c:	push	{fp, lr}
   11f60:	mov	fp, sp
   11f64:	sub	sp, sp, #32
   11f68:	str	r0, [fp, #-4]
   11f6c:	ldr	r0, [pc, #180]	; 12028 <sprintf@plt+0x704>
   11f70:	add	r1, pc, r0
   11f74:	ldr	r0, [fp, #-4]
   11f78:	movw	r2, #16384	; 0x4000
   11f7c:	bl	11840 <rb_helper_read@plt>
   11f80:	str	r0, [fp, #-12]
   11f84:	cmp	r0, #0
   11f88:	ble	12020 <sprintf@plt+0x6fc>
   11f8c:	ldr	r0, [pc, #152]	; 1202c <sprintf@plt+0x708>
   11f90:	add	r0, pc, r0
   11f94:	ldr	r1, [pc, #148]	; 12030 <sprintf@plt+0x70c>
   11f98:	add	r1, pc, r1
   11f9c:	movw	r2, #10
   11fa0:	bl	116d8 <rb_string_to_array@plt>
   11fa4:	str	r0, [fp, #-8]
   11fa8:	ldr	r0, [fp, #-8]
   11fac:	cmp	r0, #1
   11fb0:	bge	11fb8 <sprintf@plt+0x694>
   11fb4:	b	11f6c <sprintf@plt+0x648>
   11fb8:	ldr	r0, [pc, #116]	; 12034 <sprintf@plt+0x710>
   11fbc:	ldr	r0, [pc, r0]
   11fc0:	ldr	r1, [pc, #116]	; 1203c <sprintf@plt+0x718>
   11fc4:	ldr	r1, [pc, r1]
   11fc8:	ldrb	r1, [r1]
   11fcc:	mov	r2, r1
   11fd0:	ldr	r3, [pc, #104]	; 12040 <sprintf@plt+0x71c>
   11fd4:	ldr	r3, [pc, r3]
   11fd8:	add	r1, r3, r1, lsl #2
   11fdc:	ldr	r1, [r1]
   11fe0:	str	r1, [sp, #16]
   11fe4:	ldr	r1, [sp, #16]
   11fe8:	movw	r3, #0
   11fec:	cmp	r1, r3
   11ff0:	str	r0, [sp, #12]
   11ff4:	str	r2, [sp, #8]
   11ff8:	beq	1201c <sprintf@plt+0x6f8>
   11ffc:	ldr	r0, [pc, #52]	; 12038 <sprintf@plt+0x714>
   12000:	add	r1, pc, r0
   12004:	ldr	r0, [sp, #16]
   12008:	ldr	r2, [fp, #-8]
   1200c:	str	r0, [sp, #4]
   12010:	mov	r0, r2
   12014:	ldr	r2, [sp, #4]
   12018:	blx	r2
   1201c:	b	11f6c <sprintf@plt+0x648>
   12020:	mov	sp, fp
   12024:	pop	{fp, pc}
   12028:	andeq	pc, r1, r4, ror r0	; <UNPREDICTABLE>
   1202c:	andeq	pc, r1, r4, asr r0	; <UNPREDICTABLE>
   12030:	andeq	pc, r1, r0, lsr #32
   12034:	andeq	lr, r1, ip, lsr #3
   12038:			; <UNDEFINED> instruction: 0x0001efb8
   1203c:	strdeq	lr, [r1], -r4
   12040:	muleq	r1, r4, r1
   12044:	push	{fp, lr}
   12048:	mov	fp, sp
   1204c:	sub	sp, sp, #8
   12050:	str	r0, [sp, #4]
   12054:	movw	r0, #1
   12058:	bl	1190c <exit@plt>
   1205c:	sub	sp, sp, #4
   12060:	str	r0, [sp]
   12064:	add	sp, sp, #4
   12068:	bx	lr
   1206c:	push	{fp, lr}
   12070:	mov	fp, sp
   12074:	sub	sp, sp, #32
   12078:	str	r0, [fp, #-8]
   1207c:	str	r1, [fp, #-12]
   12080:	str	r2, [sp, #16]
   12084:	str	r3, [sp, #12]
   12088:	movw	r0, #160	; 0xa0
   1208c:	bl	12180 <sprintf@plt+0x85c>
   12090:	str	r0, [sp, #8]
   12094:	ldr	r0, [fp, #-12]
   12098:	cmp	r0, #2
   1209c:	bne	120b8 <sprintf@plt+0x794>
   120a0:	ldr	r0, [sp, #8]
   120a4:	movw	r1, #52	; 0x34
   120a8:	str	r1, [r0, #8]
   120ac:	movw	r0, #1
   120b0:	str	r0, [sp, #4]
   120b4:	b	120f4 <sprintf@plt+0x7d0>
   120b8:	ldr	r0, [fp, #-12]
   120bc:	cmp	r0, #10
   120c0:	bne	120dc <sprintf@plt+0x7b8>
   120c4:	ldr	r0, [sp, #8]
   120c8:	movw	r1, #54	; 0x36
   120cc:	str	r1, [r0, #8]
   120d0:	movw	r0, #28
   120d4:	str	r0, [sp, #4]
   120d8:	b	120f0 <sprintf@plt+0x7cc>
   120dc:	ldr	r0, [sp, #8]
   120e0:	bl	121d8 <sprintf@plt+0x8b4>
   120e4:	movw	r0, #0
   120e8:	str	r0, [fp, #-4]
   120ec:	b	1216c <sprintf@plt+0x848>
   120f0:	b	120f4 <sprintf@plt+0x7d0>
   120f4:	ldr	r0, [pc, #124]	; 12178 <sprintf@plt+0x854>
   120f8:	add	r0, pc, r0
   120fc:	ldr	r1, [pc, #120]	; 1217c <sprintf@plt+0x858>
   12100:	ldr	r1, [pc, r1]
   12104:	ldr	r2, [r1]
   12108:	ldr	r3, [r1, #4]
   1210c:	adds	ip, r2, #1
   12110:	adc	lr, r3, #0
   12114:	str	ip, [r1]
   12118:	str	lr, [r1, #4]
   1211c:	ldr	r1, [sp, #8]
   12120:	str	r3, [r1, #148]	; 0x94
   12124:	str	r2, [r1, #144]	; 0x90
   12128:	ldr	r1, [sp, #16]
   1212c:	ldr	r2, [sp, #8]
   12130:	str	r1, [r2, #152]	; 0x98
   12134:	ldr	r1, [sp, #12]
   12138:	ldr	r2, [sp, #8]
   1213c:	str	r1, [r2, #156]	; 0x9c
   12140:	ldr	r1, [sp, #8]
   12144:	ldr	r2, [sp, #8]
   12148:	str	r1, [r2]
   1214c:	ldr	r1, [sp, #8]
   12150:	str	r0, [r1, #4]
   12154:	ldr	r0, [fp, #-8]
   12158:	ldr	r1, [sp, #8]
   1215c:	ldr	r2, [sp, #4]
   12160:	bl	1447c <sprintf@plt+0x2b58>
   12164:	ldr	r0, [sp, #8]
   12168:	str	r0, [fp, #-4]
   1216c:	ldr	r0, [fp, #-4]
   12170:	mov	sp, fp
   12174:	pop	{fp, pc}
   12178:	andeq	r0, r0, r0, lsr #2
   1217c:	andeq	lr, r1, r4, lsr #1
   12180:	push	{fp, lr}
   12184:	mov	fp, sp
   12188:	sub	sp, sp, #8
   1218c:	str	r0, [sp, #4]
   12190:	ldr	r1, [sp, #4]
   12194:	movw	r0, #1
   12198:	bl	11630 <calloc@plt>
   1219c:	str	r0, [sp]
   121a0:	ldr	r0, [sp]
   121a4:	movw	r1, #0
   121a8:	cmp	r0, r1
   121ac:	movw	r0, #0
   121b0:	moveq	r0, #1
   121b4:	mvn	r1, #0
   121b8:	eor	r0, r0, r1
   121bc:	eor	r0, r0, r1
   121c0:	tst	r0, #1
   121c4:	beq	121cc <sprintf@plt+0x8a8>
   121c8:	bl	117ec <rb_outofmemory@plt>
   121cc:	ldr	r0, [sp]
   121d0:	mov	sp, fp
   121d4:	pop	{fp, pc}
   121d8:	push	{fp, lr}
   121dc:	mov	fp, sp
   121e0:	sub	sp, sp, #8
   121e4:	str	r0, [sp, #4]
   121e8:	ldr	r0, [sp, #4]
   121ec:	movw	r1, #0
   121f0:	cmp	r0, r1
   121f4:	movw	r0, #0
   121f8:	movne	r0, #1
   121fc:	mvn	r1, #0
   12200:	eor	r0, r0, r1
   12204:	eor	r0, r0, r1
   12208:	tst	r0, #1
   1220c:	beq	12218 <sprintf@plt+0x8f4>
   12210:	ldr	r0, [sp, #4]
   12214:	bl	116cc <free@plt>
   12218:	mov	sp, fp
   1221c:	pop	{fp, pc}
   12220:	push	{fp, lr}
   12224:	mov	fp, sp
   12228:	sub	sp, sp, #96	; 0x60
   1222c:	str	r0, [fp, #-4]
   12230:	str	r1, [fp, #-8]
   12234:	ldr	r0, [fp, #-4]
   12238:	str	r0, [fp, #-12]
   1223c:	add	r0, sp, #31
   12240:	movw	r1, #0
   12244:	and	r1, r1, #255	; 0xff
   12248:	movw	r2, #53	; 0x35
   1224c:	bl	1166c <memset@plt>
   12250:	movw	r0, #42	; 0x2a
   12254:	strb	r0, [sp, #31]
   12258:	ldr	r0, [fp, #-12]
   1225c:	movw	r1, #0
   12260:	cmp	r0, r1
   12264:	bne	12280 <sprintf@plt+0x95c>
   12268:	ldr	r0, [pc, #380]	; 123ec <sprintf@plt+0xac8>
   1226c:	add	r1, pc, r0
   12270:	movw	r0, #67	; 0x43
   12274:	bl	12bfc <sprintf@plt+0x12d8>
   12278:	movw	r0, #2
   1227c:	bl	1190c <exit@plt>
   12280:	ldr	r0, [fp, #-8]
   12284:	movw	r1, #0
   12288:	cmp	r0, r1
   1228c:	bne	12294 <sprintf@plt+0x970>
   12290:	b	1237c <sprintf@plt+0xa58>
   12294:	ldr	r0, [fp, #-12]
   12298:	ldr	r0, [r0, #8]
   1229c:	cmp	r0, #52	; 0x34
   122a0:	str	r0, [sp, #24]
   122a4:	beq	122bc <sprintf@plt+0x998>
   122a8:	b	122ac <sprintf@plt+0x988>
   122ac:	ldr	r0, [sp, #24]
   122b0:	cmp	r0, #54	; 0x36
   122b4:	beq	122e8 <sprintf@plt+0x9c4>
   122b8:	b	12358 <sprintf@plt+0xa34>
   122bc:	ldr	r0, [fp, #-8]
   122c0:	ldrh	r0, [r0, #4]
   122c4:	cmp	r0, #2
   122c8:	bne	122e4 <sprintf@plt+0x9c0>
   122cc:	add	r1, sp, #31
   122d0:	ldr	r0, [fp, #-8]
   122d4:	add	r0, r0, #4
   122d8:	movw	r2, #53	; 0x35
   122dc:	bl	1184c <rb_inet_ntop_sock@plt>
   122e0:	str	r0, [sp, #20]
   122e4:	b	12378 <sprintf@plt+0xa54>
   122e8:	ldr	r0, [fp, #-8]
   122ec:	ldrh	r0, [r0, #4]
   122f0:	cmp	r0, #10
   122f4:	bne	12354 <sprintf@plt+0xa30>
   122f8:	add	r1, sp, #31
   122fc:	ldr	r0, [fp, #-8]
   12300:	add	r0, r0, #4
   12304:	movw	r2, #53	; 0x35
   12308:	bl	1184c <rb_inet_ntop_sock@plt>
   1230c:	ldrb	r1, [sp, #31]
   12310:	cmp	r1, #58	; 0x3a
   12314:	str	r0, [sp, #16]
   12318:	bne	12350 <sprintf@plt+0xa2c>
   1231c:	add	r0, sp, #31
   12320:	add	r1, r0, #1
   12324:	str	r0, [sp, #12]
   12328:	str	r1, [sp, #8]
   1232c:	bl	1172c <strlen@plt>
   12330:	ldr	r1, [sp, #8]
   12334:	str	r0, [sp, #4]
   12338:	mov	r0, r1
   1233c:	ldr	r1, [sp, #12]
   12340:	ldr	r2, [sp, #4]
   12344:	bl	11870 <memmove@plt>
   12348:	movw	r0, #48	; 0x30
   1234c:	strb	r0, [sp, #31]
   12350:	b	12354 <sprintf@plt+0xa30>
   12354:	b	12378 <sprintf@plt+0xa54>
   12358:	ldr	r0, [pc, #136]	; 123e8 <sprintf@plt+0xac4>
   1235c:	add	r1, pc, r0
   12360:	ldr	r0, [fp, #-12]
   12364:	ldr	r2, [r0, #8]
   12368:	movw	r0, #67	; 0x43
   1236c:	bl	12bfc <sprintf@plt+0x12d8>
   12370:	movw	r0, #2
   12374:	bl	1190c <exit@plt>
   12378:	b	1237c <sprintf@plt+0xa58>
   1237c:	ldr	r0, [fp, #-12]
   12380:	ldr	r0, [r0, #152]	; 0x98
   12384:	movw	r1, #0
   12388:	cmp	r0, r1
   1238c:	beq	123d8 <sprintf@plt+0xab4>
   12390:	add	r0, sp, #31
   12394:	ldr	r1, [fp, #-12]
   12398:	ldr	r1, [r1, #152]	; 0x98
   1239c:	ldrb	r2, [sp, #31]
   123a0:	cmp	r2, #42	; 0x2a
   123a4:	movw	r2, #0
   123a8:	movne	r2, #1
   123ac:	ldr	r3, [fp, #-12]
   123b0:	ldr	r3, [r3, #8]
   123b4:	ldr	ip, [fp, #-12]
   123b8:	ldr	ip, [ip, #156]	; 0x9c
   123bc:	and	r2, r2, #1
   123c0:	str	r1, [sp]
   123c4:	mov	r1, r2
   123c8:	mov	r2, r3
   123cc:	mov	r3, ip
   123d0:	ldr	ip, [sp]
   123d4:	blx	ip
   123d8:	ldr	r0, [fp, #-12]
   123dc:	bl	121d8 <sprintf@plt+0x8b4>
   123e0:	mov	sp, fp
   123e4:	pop	{fp, pc}
   123e8:			; <UNDEFINED> instruction: 0x0000c6bd
   123ec:	andeq	ip, r0, r1, lsl #15
   123f0:	push	{fp, lr}
   123f4:	mov	fp, sp
   123f8:	sub	sp, sp, #24
   123fc:	str	r0, [fp, #-8]
   12400:	str	r1, [sp, #12]
   12404:	str	r2, [sp, #8]
   12408:	movw	r0, #160	; 0xa0
   1240c:	bl	12180 <sprintf@plt+0x85c>
   12410:	str	r0, [sp, #4]
   12414:	ldr	r0, [fp, #-8]
   12418:	ldr	r1, [sp, #4]
   1241c:	add	r1, r1, #12
   12420:	bl	11720 <rb_inet_pton_sock@plt>
   12424:	cmp	r0, #0
   12428:	bne	12440 <sprintf@plt+0xb1c>
   1242c:	ldr	r0, [sp, #4]
   12430:	bl	121d8 <sprintf@plt+0x8b4>
   12434:	movw	r0, #0
   12438:	str	r0, [fp, #-4]
   1243c:	b	12514 <sprintf@plt+0xbf0>
   12440:	ldr	r0, [sp, #4]
   12444:	ldrh	r0, [r0, #12]
   12448:	str	r0, [sp]
   1244c:	ldr	r0, [sp]
   12450:	cmp	r0, #2
   12454:	bne	12468 <sprintf@plt+0xb44>
   12458:	ldr	r0, [sp, #4]
   1245c:	movw	r1, #82	; 0x52
   12460:	str	r1, [r0, #8]
   12464:	b	1249c <sprintf@plt+0xb78>
   12468:	ldr	r0, [sp]
   1246c:	cmp	r0, #10
   12470:	bne	12484 <sprintf@plt+0xb60>
   12474:	ldr	r0, [sp, #4]
   12478:	movw	r1, #83	; 0x53
   1247c:	str	r1, [r0, #8]
   12480:	b	12498 <sprintf@plt+0xb74>
   12484:	ldr	r0, [sp, #4]
   12488:	bl	121d8 <sprintf@plt+0x8b4>
   1248c:	movw	r0, #0
   12490:	str	r0, [fp, #-4]
   12494:	b	12514 <sprintf@plt+0xbf0>
   12498:	b	1249c <sprintf@plt+0xb78>
   1249c:	ldr	r0, [pc, #124]	; 12520 <sprintf@plt+0xbfc>
   124a0:	add	r0, pc, r0
   124a4:	ldr	r1, [pc, #120]	; 12524 <sprintf@plt+0xc00>
   124a8:	ldr	r1, [pc, r1]
   124ac:	ldr	r2, [r1]
   124b0:	ldr	r3, [r1, #4]
   124b4:	adds	ip, r2, #1
   124b8:	adc	lr, r3, #0
   124bc:	str	ip, [r1]
   124c0:	str	lr, [r1, #4]
   124c4:	ldr	r1, [sp, #4]
   124c8:	str	r3, [r1, #148]	; 0x94
   124cc:	str	r2, [r1, #144]	; 0x90
   124d0:	ldr	r1, [sp, #12]
   124d4:	ldr	r2, [sp, #4]
   124d8:	str	r1, [r2, #152]	; 0x98
   124dc:	ldr	r1, [sp, #8]
   124e0:	ldr	r2, [sp, #4]
   124e4:	str	r1, [r2, #156]	; 0x9c
   124e8:	ldr	r1, [sp, #4]
   124ec:	ldr	r2, [sp, #4]
   124f0:	str	r1, [r2]
   124f4:	ldr	r1, [sp, #4]
   124f8:	str	r0, [r1, #4]
   124fc:	ldr	r0, [sp, #4]
   12500:	add	r0, r0, #12
   12504:	ldr	r1, [sp, #4]
   12508:	bl	14648 <sprintf@plt+0x2d24>
   1250c:	ldr	r0, [sp, #4]
   12510:	str	r0, [fp, #-4]
   12514:	ldr	r0, [fp, #-4]
   12518:	mov	sp, fp
   1251c:	pop	{fp, pc}
   12520:	andeq	r0, r0, r0, lsl #1
   12524:	strdeq	sp, [r1], -ip
   12528:	push	{fp, lr}
   1252c:	mov	fp, sp
   12530:	sub	sp, sp, #40	; 0x28
   12534:	str	r0, [fp, #-4]
   12538:	str	r1, [fp, #-8]
   1253c:	ldr	r0, [fp, #-4]
   12540:	str	r0, [fp, #-12]
   12544:	movw	r0, #0
   12548:	str	r0, [fp, #-16]
   1254c:	ldr	r1, [fp, #-12]
   12550:	cmp	r1, r0
   12554:	bne	12570 <sprintf@plt+0xc4c>
   12558:	ldr	r0, [pc, #360]	; 126c8 <sprintf@plt+0xda4>
   1255c:	add	r1, pc, r0
   12560:	movw	r0, #67	; 0x43
   12564:	bl	12bfc <sprintf@plt+0x12d8>
   12568:	movw	r0, #2
   1256c:	bl	1190c <exit@plt>
   12570:	ldr	r0, [fp, #-8]
   12574:	movw	r1, #0
   12578:	cmp	r0, r1
   1257c:	bne	12584 <sprintf@plt+0xc60>
   12580:	b	12654 <sprintf@plt+0xd30>
   12584:	ldr	r0, [fp, #-12]
   12588:	ldr	r0, [r0, #8]
   1258c:	cmp	r0, #82	; 0x52
   12590:	bne	125d4 <sprintf@plt+0xcb0>
   12594:	ldr	r0, [fp, #-12]
   12598:	add	r0, r0, #12
   1259c:	str	r0, [sp, #20]
   125a0:	ldr	r0, [fp, #-8]
   125a4:	add	r0, r0, #4
   125a8:	str	r0, [sp, #16]
   125ac:	ldr	r0, [sp, #20]
   125b0:	ldr	r0, [r0, #4]
   125b4:	ldr	r1, [sp, #16]
   125b8:	ldr	r1, [r1, #4]
   125bc:	cmp	r0, r1
   125c0:	bne	125d0 <sprintf@plt+0xcac>
   125c4:	ldr	r0, [fp, #-8]
   125c8:	ldr	r0, [r0]
   125cc:	str	r0, [fp, #-16]
   125d0:	b	12650 <sprintf@plt+0xd2c>
   125d4:	ldr	r0, [fp, #-12]
   125d8:	ldr	r0, [r0, #8]
   125dc:	cmp	r0, #83	; 0x53
   125e0:	bne	1262c <sprintf@plt+0xd08>
   125e4:	ldr	r0, [fp, #-12]
   125e8:	add	r0, r0, #12
   125ec:	str	r0, [sp, #12]
   125f0:	ldr	r0, [fp, #-8]
   125f4:	add	r0, r0, #4
   125f8:	str	r0, [sp, #8]
   125fc:	ldr	r0, [sp, #12]
   12600:	add	r0, r0, #8
   12604:	ldr	r1, [sp, #8]
   12608:	add	r1, r1, #8
   1260c:	mov	r2, #16
   12610:	bl	11588 <memcmp@plt>
   12614:	cmp	r0, #0
   12618:	bne	12628 <sprintf@plt+0xd04>
   1261c:	ldr	r0, [fp, #-8]
   12620:	ldr	r0, [r0]
   12624:	str	r0, [fp, #-16]
   12628:	b	1264c <sprintf@plt+0xd28>
   1262c:	ldr	r0, [pc, #144]	; 126c4 <sprintf@plt+0xda0>
   12630:	add	r1, pc, r0
   12634:	ldr	r0, [fp, #-12]
   12638:	ldr	r2, [r0, #8]
   1263c:	movw	r0, #67	; 0x43
   12640:	bl	12bfc <sprintf@plt+0x12d8>
   12644:	movw	r0, #2
   12648:	bl	1190c <exit@plt>
   1264c:	b	12650 <sprintf@plt+0xd2c>
   12650:	b	12654 <sprintf@plt+0xd30>
   12654:	ldr	r0, [fp, #-12]
   12658:	ldr	r0, [r0, #152]	; 0x98
   1265c:	movw	r1, #0
   12660:	cmp	r0, r1
   12664:	beq	126b4 <sprintf@plt+0xd90>
   12668:	ldr	r0, [fp, #-12]
   1266c:	ldr	r0, [r0, #152]	; 0x98
   12670:	ldr	r1, [fp, #-16]
   12674:	ldr	r2, [fp, #-16]
   12678:	movw	r3, #0
   1267c:	cmp	r2, r3
   12680:	movw	r2, #0
   12684:	movne	r2, #1
   12688:	ldr	r3, [fp, #-12]
   1268c:	ldr	r3, [r3, #8]
   12690:	ldr	ip, [fp, #-12]
   12694:	ldr	ip, [ip, #156]	; 0x9c
   12698:	str	r0, [sp, #4]
   1269c:	mov	r0, r1
   126a0:	and	r1, r2, #1
   126a4:	mov	r2, r3
   126a8:	mov	r3, ip
   126ac:	ldr	ip, [sp, #4]
   126b0:	blx	ip
   126b4:	ldr	r0, [fp, #-12]
   126b8:	bl	121d8 <sprintf@plt+0x8b4>
   126bc:	mov	sp, fp
   126c0:	pop	{fp, pc}
   126c4:	andeq	ip, r0, lr, asr #8
   126c8:	strdeq	ip, [r0], -r0
   126cc:	sub	sp, sp, #4
   126d0:	str	r0, [sp]
   126d4:	ldr	r0, [sp]
   126d8:	movw	r1, #0
   126dc:	str	r1, [r0, #156]	; 0x9c
   126e0:	ldr	r0, [sp]
   126e4:	str	r1, [r0, #152]	; 0x98
   126e8:	add	sp, sp, #4
   126ec:	bx	lr
   126f0:	push	{fp, lr}
   126f4:	mov	fp, sp
   126f8:	sub	sp, sp, #40	; 0x28
   126fc:	str	r0, [fp, #-4]
   12700:	str	r1, [fp, #-8]
   12704:	ldr	r0, [fp, #-8]
   12708:	ldr	r0, [r0, #4]
   1270c:	bl	12830 <sprintf@plt+0xf0c>
   12710:	str	r0, [fp, #-12]
   12714:	ldr	r0, [fp, #-8]
   12718:	ldr	r0, [r0, #8]
   1271c:	ldrb	r0, [r0]
   12720:	strb	r0, [fp, #-13]
   12724:	ldr	r0, [fp, #-8]
   12728:	ldr	r0, [r0, #12]
   1272c:	str	r0, [sp, #20]
   12730:	mov	r0, #2
   12734:	str	r0, [sp, #16]
   12738:	ldrb	r0, [fp, #-13]
   1273c:	mov	r1, r0
   12740:	cmp	r0, #52	; 0x34
   12744:	str	r1, [sp, #12]
   12748:	beq	1277c <sprintf@plt+0xe58>
   1274c:	b	12750 <sprintf@plt+0xe2c>
   12750:	ldr	r0, [sp, #12]
   12754:	cmp	r0, #54	; 0x36
   12758:	beq	12774 <sprintf@plt+0xe50>
   1275c:	b	12760 <sprintf@plt+0xe3c>
   12760:	ldr	r0, [sp, #12]
   12764:	sub	r1, r0, #82	; 0x52
   12768:	cmp	r1, #2
   1276c:	bcc	127c0 <sprintf@plt+0xe9c>
   12770:	b	12800 <sprintf@plt+0xedc>
   12774:	movw	r0, #10
   12778:	str	r0, [sp, #16]
   1277c:	ldr	r0, [pc, #164]	; 12828 <sprintf@plt+0xf04>
   12780:	add	r2, pc, r0
   12784:	ldr	r0, [sp, #20]
   12788:	ldr	r1, [sp, #16]
   1278c:	ldr	r3, [fp, #-12]
   12790:	bl	1206c <sprintf@plt+0x748>
   12794:	movw	r1, #0
   12798:	cmp	r0, r1
   1279c:	bne	127bc <sprintf@plt+0xe98>
   127a0:	ldrb	r2, [fp, #-13]
   127a4:	movw	r0, #0
   127a8:	str	r0, [sp, #8]
   127ac:	movw	r1, #0
   127b0:	and	r1, r1, #1
   127b4:	ldr	r3, [sp, #8]
   127b8:	bl	128a0 <sprintf@plt+0xf7c>
   127bc:	b	1281c <sprintf@plt+0xef8>
   127c0:	ldr	r0, [pc, #92]	; 12824 <sprintf@plt+0xf00>
   127c4:	add	r1, pc, r0
   127c8:	ldr	r0, [sp, #20]
   127cc:	ldr	r2, [fp, #-12]
   127d0:	bl	123f0 <sprintf@plt+0xacc>
   127d4:	movw	r1, #0
   127d8:	cmp	r0, r1
   127dc:	bne	127fc <sprintf@plt+0xed8>
   127e0:	ldrb	r2, [fp, #-13]
   127e4:	movw	r0, #0
   127e8:	str	r0, [sp, #4]
   127ec:	movw	r1, #0
   127f0:	and	r1, r1, #1
   127f4:	ldr	r3, [sp, #4]
   127f8:	bl	128a0 <sprintf@plt+0xf7c>
   127fc:	b	1281c <sprintf@plt+0xef8>
   12800:	ldr	r0, [pc, #36]	; 1282c <sprintf@plt+0xf08>
   12804:	add	r1, pc, r0
   12808:	ldrb	r2, [fp, #-13]
   1280c:	movw	r0, #67	; 0x43
   12810:	bl	12bfc <sprintf@plt+0x12d8>
   12814:	movw	r0, #2
   12818:	bl	1190c <exit@plt>
   1281c:	mov	sp, fp
   12820:	pop	{fp, pc}
   12824:	ldrdeq	r0, [r0], -r4
   12828:	andeq	r0, r0, r8, lsl r1
   1282c:	andeq	ip, r0, r9, ror #2
   12830:	push	{fp, lr}
   12834:	mov	fp, sp
   12838:	sub	sp, sp, #16
   1283c:	str	r0, [fp, #-4]
   12840:	ldr	r0, [fp, #-4]
   12844:	bl	1172c <strlen@plt>
   12848:	add	r0, r0, #1
   1284c:	bl	11828 <malloc@plt>
   12850:	str	r0, [sp, #8]
   12854:	ldr	r0, [sp, #8]
   12858:	movw	lr, #0
   1285c:	cmp	r0, lr
   12860:	movw	r0, #0
   12864:	moveq	r0, #1
   12868:	mvn	lr, #0
   1286c:	eor	r0, r0, lr
   12870:	eor	r0, r0, lr
   12874:	tst	r0, #1
   12878:	beq	12880 <sprintf@plt+0xf5c>
   1287c:	bl	117ec <rb_outofmemory@plt>
   12880:	ldr	r0, [sp, #8]
   12884:	ldr	r1, [fp, #-4]
   12888:	bl	1178c <strcpy@plt>
   1288c:	ldr	r1, [sp, #8]
   12890:	str	r0, [sp, #4]
   12894:	mov	r0, r1
   12898:	mov	sp, fp
   1289c:	pop	{fp, pc}
   128a0:	push	{fp, lr}
   128a4:	mov	fp, sp
   128a8:	sub	sp, sp, #24
   128ac:	str	r0, [fp, #-4]
   128b0:	and	r0, r1, #1
   128b4:	strb	r0, [fp, #-5]
   128b8:	str	r2, [sp, #12]
   128bc:	str	r3, [sp, #8]
   128c0:	ldr	r0, [sp, #8]
   128c4:	str	r0, [sp, #4]
   128c8:	ldr	r0, [sp, #4]
   128cc:	movw	r1, #0
   128d0:	cmp	r0, r1
   128d4:	beq	128e4 <sprintf@plt+0xfc0>
   128d8:	ldr	r0, [sp, #12]
   128dc:	cmp	r0, #0
   128e0:	bne	128fc <sprintf@plt+0xfd8>
   128e4:	ldr	r0, [pc, #164]	; 12990 <sprintf@plt+0x106c>
   128e8:	add	r1, pc, r0
   128ec:	movw	r0, #67	; 0x43
   128f0:	bl	12bfc <sprintf@plt+0x12d8>
   128f4:	movw	r0, #2
   128f8:	bl	1190c <exit@plt>
   128fc:	ldr	r0, [fp, #-4]
   12900:	movw	r1, #0
   12904:	cmp	r0, r1
   12908:	beq	1291c <sprintf@plt+0xff8>
   1290c:	ldrb	r0, [fp, #-5]
   12910:	and	r0, r0, #1
   12914:	cmp	r0, #0
   12918:	bne	12948 <sprintf@plt+0x1024>
   1291c:	ldr	r0, [pc, #100]	; 12988 <sprintf@plt+0x1064>
   12920:	add	r1, pc, r0
   12924:	ldr	r0, [pc, #96]	; 1298c <sprintf@plt+0x1068>
   12928:	ldr	r0, [pc, r0]
   1292c:	ldr	r0, [r0]
   12930:	ldr	r2, [sp, #4]
   12934:	ldr	r3, [sp, #12]
   12938:	bl	11888 <rb_helper_write@plt>
   1293c:	ldr	r0, [sp, #4]
   12940:	bl	121d8 <sprintf@plt+0x8b4>
   12944:	b	12978 <sprintf@plt+0x1054>
   12948:	ldr	r0, [pc, #48]	; 12980 <sprintf@plt+0x105c>
   1294c:	add	r1, pc, r0
   12950:	ldr	r0, [pc, #44]	; 12984 <sprintf@plt+0x1060>
   12954:	ldr	r0, [pc, r0]
   12958:	ldr	r0, [r0]
   1295c:	ldr	r2, [sp, #4]
   12960:	ldr	r3, [sp, #12]
   12964:	ldr	ip, [fp, #-4]
   12968:	str	ip, [sp]
   1296c:	bl	11888 <rb_helper_write@plt>
   12970:	ldr	r0, [sp, #4]
   12974:	bl	121d8 <sprintf@plt+0x8b4>
   12978:	mov	sp, fp
   1297c:	pop	{fp, pc}
   12980:	andeq	ip, r0, r2, lsr #3
   12984:	andeq	sp, r1, r8, asr #16
   12988:	andeq	ip, r0, r2, asr #3
   1298c:	andeq	sp, r1, r4, ror r8
   12990:	andeq	ip, r0, pc, asr #3
   12994:	push	{r4, r5, fp, lr}
   12998:	add	fp, sp, #8
   1299c:	sub	sp, sp, #640	; 0x280
   129a0:	ldr	r2, [pc, #392]	; 12b30 <sprintf@plt+0x120c>
   129a4:	ldr	r2, [pc, r2]
   129a8:	str	r0, [fp, #-12]
   129ac:	strb	r1, [fp, #-13]
   129b0:	movw	r0, #0
   129b4:	str	r0, [sp, #88]	; 0x58
   129b8:	ldr	r0, [r2]
   129bc:	cmp	r0, #0
   129c0:	bne	129f0 <sprintf@plt+0x10cc>
   129c4:	ldr	r0, [pc, #364]	; 12b38 <sprintf@plt+0x1214>
   129c8:	add	r1, pc, r0
   129cc:	movw	r0, #67	; 0x43
   129d0:	bl	12bfc <sprintf@plt+0x12d8>
   129d4:	ldr	r0, [pc, #344]	; 12b34 <sprintf@plt+0x1210>
   129d8:	add	r2, pc, r0
   129dc:	ldr	r0, [fp, #-12]
   129e0:	ldrb	r1, [fp, #-13]
   129e4:	bl	12d20 <sprintf@plt+0x13fc>
   129e8:	movw	r0, #2
   129ec:	bl	1190c <exit@plt>
   129f0:	movw	r0, #0
   129f4:	str	r0, [sp, #84]	; 0x54
   129f8:	ldr	r0, [pc, #316]	; 12b3c <sprintf@plt+0x1218>
   129fc:	ldr	r0, [pc, r0]
   12a00:	ldr	r1, [sp, #84]	; 0x54
   12a04:	ldr	r0, [r0]
   12a08:	cmp	r1, r0
   12a0c:	bge	12ae0 <sprintf@plt+0x11bc>
   12a10:	add	r1, sp, #31
   12a14:	ldr	r0, [pc, #296]	; 12b44 <sprintf@plt+0x1220>
   12a18:	ldr	r0, [pc, r0]
   12a1c:	ldr	r2, [sp, #84]	; 0x54
   12a20:	ldr	r3, [pc, #300]	; 12b54 <sprintf@plt+0x1230>
   12a24:	ldr	r3, [pc, r3]
   12a28:	add	r2, r3, r2, lsl #7
   12a2c:	str	r0, [sp, #20]
   12a30:	mov	r0, r2
   12a34:	movw	r2, #53	; 0x35
   12a38:	bl	1184c <rb_inet_ntop_sock@plt>
   12a3c:	ldrsb	r1, [sp, #31]
   12a40:	cmp	r1, #0
   12a44:	str	r0, [sp, #16]
   12a48:	bne	12a78 <sprintf@plt+0x1154>
   12a4c:	ldr	r0, [pc, #248]	; 12b4c <sprintf@plt+0x1228>
   12a50:	add	r1, pc, r0
   12a54:	movw	r0, #67	; 0x43
   12a58:	bl	12bfc <sprintf@plt+0x12d8>
   12a5c:	ldr	r0, [pc, #228]	; 12b48 <sprintf@plt+0x1224>
   12a60:	add	r2, pc, r0
   12a64:	ldr	r0, [fp, #-12]
   12a68:	ldrb	r1, [fp, #-13]
   12a6c:	bl	12d20 <sprintf@plt+0x13fc>
   12a70:	movw	r0, #2
   12a74:	bl	1190c <exit@plt>
   12a78:	ldr	r0, [pc, #208]	; 12b50 <sprintf@plt+0x122c>
   12a7c:	add	r2, pc, r0
   12a80:	add	r0, sp, #31
   12a84:	str	r0, [sp, #12]
   12a88:	str	r2, [sp, #8]
   12a8c:	bl	1172c <strlen@plt>
   12a90:	add	r0, r0, #1
   12a94:	str	r0, [sp, #24]
   12a98:	ldr	r0, [sp, #88]	; 0x58
   12a9c:	add	r2, sp, #95	; 0x5f
   12aa0:	add	r0, r2, r0
   12aa4:	ldr	r2, [sp, #88]	; 0x58
   12aa8:	movw	lr, #540	; 0x21c
   12aac:	sub	r1, lr, r2
   12ab0:	ldr	r2, [sp, #8]
   12ab4:	ldr	r3, [sp, #12]
   12ab8:	bl	118b8 <snprintf@plt>
   12abc:	ldr	r1, [sp, #24]
   12ac0:	ldr	r2, [sp, #88]	; 0x58
   12ac4:	add	r1, r2, r1
   12ac8:	str	r1, [sp, #88]	; 0x58
   12acc:	str	r0, [sp, #4]
   12ad0:	ldr	r0, [sp, #84]	; 0x54
   12ad4:	add	r0, r0, #1
   12ad8:	str	r0, [sp, #84]	; 0x54
   12adc:	b	129f8 <sprintf@plt+0x10d4>
   12ae0:	ldr	r0, [sp, #88]	; 0x58
   12ae4:	cmp	r0, #0
   12ae8:	bls	12b0c <sprintf@plt+0x11e8>
   12aec:	ldr	r0, [sp, #88]	; 0x58
   12af0:	mvn	r1, #0
   12af4:	add	r0, r0, r1
   12af8:	str	r0, [sp, #88]	; 0x58
   12afc:	add	r1, sp, #95	; 0x5f
   12b00:	add	r0, r1, r0
   12b04:	movw	r1, #0
   12b08:	strb	r1, [r0]
   12b0c:	ldr	r0, [pc, #44]	; 12b40 <sprintf@plt+0x121c>
   12b10:	add	r2, pc, r0
   12b14:	add	r3, sp, #95	; 0x5f
   12b18:	ldr	r0, [fp, #-12]
   12b1c:	ldrb	r1, [fp, #-13]
   12b20:	and	r1, r1, #255	; 0xff
   12b24:	bl	12c84 <sprintf@plt+0x1360>
   12b28:	sub	sp, fp, #8
   12b2c:	pop	{r4, r5, fp, pc}
   12b30:	ldrdeq	sp, [r1], -r0
   12b34:	ldrdeq	fp, [r0], -ip
   12b38:	ldrdeq	fp, [r0], -r6
   12b3c:	andeq	sp, r1, r8, ror r7
   12b40:	andeq	ip, r0, sp, lsr #28
   12b44:	andeq	sp, r1, r8, ror #14
   12b48:	andeq	fp, r0, r7, ror pc
   12b4c:	andeq	fp, r0, r2, ror pc
   12b50:	andeq	fp, r0, sp, ror #30
   12b54:	andeq	sp, r1, ip, asr r7
   12b58:	push	{fp, lr}
   12b5c:	mov	fp, sp
   12b60:	sub	sp, sp, #8
   12b64:	strb	r0, [fp, #-1]
   12b68:	bl	14430 <sprintf@plt+0x2b0c>
   12b6c:	mov	sp, fp
   12b70:	pop	{fp, pc}
   12b74:	sub	sp, sp, #8
   12b78:	push	{r4, r5, fp, lr}
   12b7c:	add	fp, sp, #8
   12b80:	sub	sp, sp, #536	; 0x218
   12b84:	str	r3, [fp, #12]
   12b88:	str	r2, [fp, #8]
   12b8c:	str	r0, [fp, #-12]
   12b90:	str	r1, [fp, #-16]
   12b94:	add	r0, fp, #8
   12b98:	str	r0, [sp, #12]
   12b9c:	add	r0, sp, #16
   12ba0:	ldr	r2, [fp, #-16]
   12ba4:	ldr	r3, [sp, #12]
   12ba8:	mov	r1, #512	; 0x200
   12bac:	bl	115d0 <vsnprintf@plt>
   12bb0:	ldr	r1, [pc, #60]	; 12bf4 <sprintf@plt+0x12d0>
   12bb4:	add	r1, pc, r1
   12bb8:	add	r3, sp, #16
   12bbc:	ldr	r2, [pc, #52]	; 12bf8 <sprintf@plt+0x12d4>
   12bc0:	ldr	r2, [pc, r2]
   12bc4:	add	lr, sp, #12
   12bc8:	ldr	r2, [r2]
   12bcc:	ldr	ip, [fp, #-12]
   12bd0:	str	r0, [sp, #8]
   12bd4:	mov	r0, r2
   12bd8:	mov	r2, ip
   12bdc:	str	lr, [sp, #4]
   12be0:	bl	11888 <rb_helper_write@plt>
   12be4:	sub	sp, fp, #8
   12be8:	pop	{r4, r5, fp, lr}
   12bec:	add	sp, sp, #8
   12bf0:	bx	lr
   12bf4:	andeq	fp, r0, r7, asr #30
   12bf8:	ldrdeq	sp, [r1], -ip
   12bfc:	sub	sp, sp, #8
   12c00:	push	{r4, r5, fp, lr}
   12c04:	add	fp, sp, #8
   12c08:	sub	sp, sp, #536	; 0x218
   12c0c:	str	r3, [fp, #12]
   12c10:	str	r2, [fp, #8]
   12c14:	str	r0, [fp, #-12]
   12c18:	str	r1, [fp, #-16]
   12c1c:	add	r0, fp, #8
   12c20:	str	r0, [sp, #12]
   12c24:	add	r0, sp, #16
   12c28:	ldr	r2, [fp, #-16]
   12c2c:	ldr	r3, [sp, #12]
   12c30:	mov	r1, #512	; 0x200
   12c34:	bl	115d0 <vsnprintf@plt>
   12c38:	ldr	r1, [pc, #60]	; 12c7c <sprintf@plt+0x1358>
   12c3c:	add	r1, pc, r1
   12c40:	add	r3, sp, #16
   12c44:	ldr	r2, [pc, #52]	; 12c80 <sprintf@plt+0x135c>
   12c48:	ldr	r2, [pc, r2]
   12c4c:	add	lr, sp, #12
   12c50:	ldr	r2, [r2]
   12c54:	ldr	ip, [fp, #-12]
   12c58:	str	r0, [sp, #8]
   12c5c:	mov	r0, r2
   12c60:	mov	r2, ip
   12c64:	str	lr, [sp, #4]
   12c68:	bl	11888 <rb_helper_write@plt>
   12c6c:	sub	sp, fp, #8
   12c70:	pop	{r4, r5, fp, lr}
   12c74:	add	sp, sp, #8
   12c78:	bx	lr
   12c7c:	andeq	fp, r0, r8, asr #29
   12c80:	andeq	sp, r1, r4, asr r5
   12c84:	sub	sp, sp, #4
   12c88:	push	{r4, sl, fp, lr}
   12c8c:	add	fp, sp, #8
   12c90:	sub	sp, sp, #548	; 0x224
   12c94:	str	r3, [fp, #8]
   12c98:	str	r0, [fp, #-12]
   12c9c:	strb	r1, [fp, #-13]
   12ca0:	str	r2, [fp, #-20]	; 0xffffffec
   12ca4:	add	r0, fp, #8
   12ca8:	str	r0, [sp, #20]
   12cac:	add	r0, sp, #24
   12cb0:	ldr	r2, [fp, #-20]	; 0xffffffec
   12cb4:	ldr	r3, [sp, #20]
   12cb8:	mov	r1, #512	; 0x200
   12cbc:	bl	115d0 <vsnprintf@plt>
   12cc0:	ldr	r1, [pc, #80]	; 12d18 <sprintf@plt+0x13f4>
   12cc4:	add	r1, pc, r1
   12cc8:	add	r2, sp, #24
   12ccc:	ldr	r3, [pc, #72]	; 12d1c <sprintf@plt+0x13f8>
   12cd0:	ldr	r3, [pc, r3]
   12cd4:	add	lr, sp, #20
   12cd8:	ldr	r3, [r3]
   12cdc:	ldr	ip, [fp, #-12]
   12ce0:	ldrb	r4, [fp, #-13]
   12ce4:	str	r0, [sp, #16]
   12ce8:	mov	r0, r3
   12cec:	str	r2, [sp, #12]
   12cf0:	mov	r2, ip
   12cf4:	mov	r3, r4
   12cf8:	ldr	ip, [sp, #12]
   12cfc:	str	ip, [sp]
   12d00:	str	lr, [sp, #8]
   12d04:	bl	11888 <rb_helper_write@plt>
   12d08:	sub	sp, fp, #8
   12d0c:	pop	{r4, sl, fp, lr}
   12d10:	add	sp, sp, #4
   12d14:	bx	lr
   12d18:	andeq	fp, r0, r9, asr #28
   12d1c:	andeq	sp, r1, ip, asr #9
   12d20:	sub	sp, sp, #4
   12d24:	push	{r4, sl, fp, lr}
   12d28:	add	fp, sp, #8
   12d2c:	sub	sp, sp, #548	; 0x224
   12d30:	str	r3, [fp, #8]
   12d34:	str	r0, [fp, #-12]
   12d38:	strb	r1, [fp, #-13]
   12d3c:	str	r2, [fp, #-20]	; 0xffffffec
   12d40:	add	r0, fp, #8
   12d44:	str	r0, [sp, #20]
   12d48:	add	r0, sp, #24
   12d4c:	ldr	r2, [fp, #-20]	; 0xffffffec
   12d50:	ldr	r3, [sp, #20]
   12d54:	mov	r1, #512	; 0x200
   12d58:	bl	115d0 <vsnprintf@plt>
   12d5c:	ldr	r1, [pc, #80]	; 12db4 <sprintf@plt+0x1490>
   12d60:	add	r1, pc, r1
   12d64:	add	r2, sp, #24
   12d68:	ldr	r3, [pc, #72]	; 12db8 <sprintf@plt+0x1494>
   12d6c:	ldr	r3, [pc, r3]
   12d70:	add	lr, sp, #20
   12d74:	ldr	r3, [r3]
   12d78:	ldr	ip, [fp, #-12]
   12d7c:	ldrb	r4, [fp, #-13]
   12d80:	str	r0, [sp, #16]
   12d84:	mov	r0, r3
   12d88:	str	r2, [sp, #12]
   12d8c:	mov	r2, ip
   12d90:	mov	r3, r4
   12d94:	ldr	ip, [sp, #12]
   12d98:	str	ip, [sp]
   12d9c:	str	lr, [sp, #8]
   12da0:	bl	11888 <rb_helper_write@plt>
   12da4:	sub	sp, fp, #8
   12da8:	pop	{r4, sl, fp, lr}
   12dac:	add	sp, sp, #4
   12db0:	bx	lr
   12db4:			; <UNDEFINED> instruction: 0x0000bdb8
   12db8:	andeq	sp, r1, r0, lsr r4
   12dbc:	push	{fp, lr}
   12dc0:	mov	fp, sp
   12dc4:	sub	sp, sp, #16
   12dc8:	ldr	r2, [pc, #52]	; 12e04 <sprintf@plt+0x14e0>
   12dcc:	add	r2, pc, r2
   12dd0:	ldr	r3, [pc, #48]	; 12e08 <sprintf@plt+0x14e4>
   12dd4:	ldr	r3, [pc, r3]
   12dd8:	str	r0, [fp, #-4]
   12ddc:	strb	r1, [fp, #-5]
   12de0:	ldr	r0, [r3]
   12de4:	ldr	r1, [fp, #-4]
   12de8:	ldrb	r3, [fp, #-5]
   12dec:	str	r1, [sp, #4]
   12df0:	mov	r1, r2
   12df4:	ldr	r2, [sp, #4]
   12df8:	bl	11888 <rb_helper_write@plt>
   12dfc:	mov	sp, fp
   12e00:	pop	{fp, pc}
   12e04:	andeq	fp, r0, r7, asr sp
   12e08:	andeq	sp, r1, r8, asr #7
   12e0c:	push	{fp, lr}
   12e10:	mov	fp, sp
   12e14:	ldr	r0, [pc, #160]	; 12ebc <sprintf@plt+0x1598>
   12e18:	add	r0, pc, r0
   12e1c:	ldr	r1, [pc, #156]	; 12ec0 <sprintf@plt+0x159c>
   12e20:	add	r1, pc, r1
   12e24:	bl	11864 <rb_dictionary_create@plt>
   12e28:	ldr	r1, [pc, #128]	; 12eb0 <sprintf@plt+0x158c>
   12e2c:	add	r1, pc, r1
   12e30:	ldr	lr, [pc, #124]	; 12eb4 <sprintf@plt+0x1590>
   12e34:	add	lr, pc, lr
   12e38:	ldr	r2, [pc, #120]	; 12eb8 <sprintf@plt+0x1594>
   12e3c:	ldr	r2, [pc, r2]
   12e40:	str	r0, [r2]
   12e44:	mov	r0, r1
   12e48:	mov	r1, lr
   12e4c:	movw	r2, #0
   12e50:	movw	r3, #1
   12e54:	bl	1154c <rb_event_addish@plt>
   12e58:	ldr	r1, [pc, #72]	; 12ea8 <sprintf@plt+0x1584>
   12e5c:	ldr	r1, [pc, r1]
   12e60:	ldr	r2, [pc, #68]	; 12eac <sprintf@plt+0x1588>
   12e64:	add	r2, pc, r2
   12e68:	str	r0, [r2]
   12e6c:	mov	r0, r1
   12e70:	bl	1302c <sprintf@plt+0x1708>
   12e74:	ldr	r0, [pc, #40]	; 12ea4 <sprintf@plt+0x1580>
   12e78:	ldr	r0, [pc, r0]
   12e7c:	bl	1302c <sprintf@plt+0x1708>
   12e80:	ldr	r0, [pc, #24]	; 12ea0 <sprintf@plt+0x157c>
   12e84:	ldr	r0, [pc, r0]
   12e88:	bl	1302c <sprintf@plt+0x1708>
   12e8c:	ldr	r0, [pc, #8]	; 12e9c <sprintf@plt+0x1578>
   12e90:	ldr	r0, [pc, r0]
   12e94:	bl	1302c <sprintf@plt+0x1708>
   12e98:	pop	{fp, pc}
   12e9c:	ldrdeq	sp, [r1], -ip
   12ea0:	andeq	sp, r1, ip, ror #5
   12ea4:	andeq	sp, r1, r4, lsl r3
   12ea8:	andeq	sp, r1, r4, lsr r3
   12eac:	andeq	r2, r2, ip, lsl #3
   12eb0:	andeq	fp, r0, r4, lsl sp
   12eb4:	andeq	r0, r0, r8, lsr #1
   12eb8:	andeq	sp, r1, r4, lsr #6
   12ebc:	andeq	fp, r0, r3, lsl sp
   12ec0:	muleq	r0, ip, r0
   12ec4:	sub	sp, sp, #8
   12ec8:	str	r0, [sp, #4]
   12ecc:	str	r1, [sp]
   12ed0:	ldr	r0, [sp]
   12ed4:	ldr	r1, [sp, #4]
   12ed8:	sub	r0, r0, r1
   12edc:	add	sp, sp, #8
   12ee0:	bx	lr
   12ee4:	push	{fp, lr}
   12ee8:	mov	fp, sp
   12eec:	sub	sp, sp, #40	; 0x28
   12ef0:	str	r0, [fp, #-4]
   12ef4:	bl	11738 <rb_current_time@plt>
   12ef8:	ldr	lr, [pc, #284]	; 1301c <sprintf@plt+0x16f8>
   12efc:	ldr	lr, [pc, lr]
   12f00:	str	r0, [sp, #20]
   12f04:	ldr	r0, [lr]
   12f08:	sub	r1, fp, #16
   12f0c:	bl	11708 <rb_dictionary_foreach_start@plt>
   12f10:	ldr	r0, [pc, #264]	; 13020 <sprintf@plt+0x16fc>
   12f14:	ldr	r0, [pc, r0]
   12f18:	ldr	r0, [r0]
   12f1c:	sub	r1, fp, #16
   12f20:	bl	11618 <rb_dictionary_foreach_cur@plt>
   12f24:	str	r0, [fp, #-8]
   12f28:	movw	r1, #0
   12f2c:	cmp	r0, r1
   12f30:	beq	13014 <sprintf@plt+0x16f0>
   12f34:	ldr	r0, [fp, #-8]
   12f38:	bl	133b8 <sprintf@plt+0x1a94>
   12f3c:	ldr	r0, [pc, #224]	; 13024 <sprintf@plt+0x1700>
   12f40:	ldr	r0, [pc, r0]
   12f44:	ldr	r0, [r0]
   12f48:	str	r0, [sp, #16]
   12f4c:	ldr	r0, [sp, #16]
   12f50:	movw	r1, #0
   12f54:	cmp	r0, r1
   12f58:	beq	12ff4 <sprintf@plt+0x16d0>
   12f5c:	ldr	r0, [sp, #16]
   12f60:	ldr	r0, [r0]
   12f64:	str	r0, [sp, #12]
   12f68:	ldr	r0, [fp, #-8]
   12f6c:	ldr	r1, [sp, #12]
   12f70:	ldr	r1, [r1, #12]
   12f74:	bl	142bc <sprintf@plt+0x2998>
   12f78:	str	r0, [sp, #8]
   12f7c:	ldr	r0, [fp, #-8]
   12f80:	ldr	r1, [sp, #12]
   12f84:	ldr	r1, [r1, #12]
   12f88:	bl	13ac4 <sprintf@plt+0x21a0>
   12f8c:	tst	r0, #1
   12f90:	beq	12fe0 <sprintf@plt+0x16bc>
   12f94:	ldr	r0, [sp, #12]
   12f98:	ldr	r0, [r0, #40]	; 0x28
   12f9c:	movw	r1, #0
   12fa0:	cmp	r0, r1
   12fa4:	beq	12fe0 <sprintf@plt+0x16bc>
   12fa8:	ldr	r0, [sp, #8]
   12fac:	cmp	r0, #0
   12fb0:	ble	12fe0 <sprintf@plt+0x16bc>
   12fb4:	ldr	r0, [sp, #8]
   12fb8:	ldr	r1, [sp, #20]
   12fbc:	cmp	r0, r1
   12fc0:	bge	12fe0 <sprintf@plt+0x16bc>
   12fc4:	ldr	r0, [sp, #12]
   12fc8:	ldr	r0, [r0, #40]	; 0x28
   12fcc:	ldr	r1, [fp, #-8]
   12fd0:	str	r0, [sp, #4]
   12fd4:	mov	r0, r1
   12fd8:	ldr	r1, [sp, #4]
   12fdc:	blx	r1
   12fe0:	b	12fe4 <sprintf@plt+0x16c0>
   12fe4:	ldr	r0, [sp, #16]
   12fe8:	ldr	r0, [r0, #8]
   12fec:	str	r0, [sp, #16]
   12ff0:	b	12f4c <sprintf@plt+0x1628>
   12ff4:	ldr	r0, [fp, #-8]
   12ff8:	bl	1353c <sprintf@plt+0x1c18>
   12ffc:	ldr	r0, [pc, #36]	; 13028 <sprintf@plt+0x1704>
   13000:	ldr	r0, [pc, r0]
   13004:	ldr	r0, [r0]
   13008:	sub	r1, fp, #16
   1300c:	bl	116c0 <rb_dictionary_foreach_next@plt>
   13010:	b	12f10 <sprintf@plt+0x15ec>
   13014:	mov	sp, fp
   13018:	pop	{fp, pc}
   1301c:	andeq	sp, r1, r4, ror #4
   13020:	andeq	sp, r1, ip, asr #4
   13024:	andeq	sp, r1, r8, ror #4
   13028:	andeq	sp, r1, r0, ror #2
   1302c:	push	{fp, lr}
   13030:	mov	fp, sp
   13034:	sub	sp, sp, #32
   13038:	ldr	r1, [pc, #408]	; 131d8 <sprintf@plt+0x18b4>
   1303c:	add	r1, pc, r1
   13040:	str	r0, [fp, #-4]
   13044:	ldr	r0, [r1, #8]
   13048:	cmp	r0, #0
   1304c:	bls	13098 <sprintf@plt+0x1774>
   13050:	ldr	r0, [pc, #404]	; 131ec <sprintf@plt+0x18c8>
   13054:	add	r0, pc, r0
   13058:	ldr	r0, [r0]
   1305c:	ldr	r0, [r0]
   13060:	ldr	r1, [fp, #-4]
   13064:	str	r0, [r1, #12]
   13068:	ldr	r0, [pc, #388]	; 131f4 <sprintf@plt+0x18d0>
   1306c:	add	r0, pc, r0
   13070:	ldr	r1, [r0]
   13074:	str	r0, [fp, #-12]
   13078:	mov	r0, r1
   1307c:	ldr	r1, [fp, #-12]
   13080:	bl	13580 <sprintf@plt+0x1c5c>
   13084:	ldr	r0, [pc, #356]	; 131f0 <sprintf@plt+0x18cc>
   13088:	add	r0, pc, r0
   1308c:	ldr	r0, [r0]
   13090:	bl	1175c <rb_free_rb_dlink_node@plt>
   13094:	b	130f0 <sprintf@plt+0x17cc>
   13098:	ldr	r0, [pc, #316]	; 131dc <sprintf@plt+0x18b8>
   1309c:	add	r0, pc, r0
   130a0:	ldr	r0, [r0]
   130a4:	cmp	r0, #32
   130a8:	beq	130c0 <sprintf@plt+0x179c>
   130ac:	ldr	r0, [pc, #300]	; 131e0 <sprintf@plt+0x18bc>
   130b0:	add	r0, pc, r0
   130b4:	ldr	r0, [r0]
   130b8:	cmn	r0, #1
   130bc:	bne	130d4 <sprintf@plt+0x17b0>
   130c0:	ldr	r0, [pc, #288]	; 131e8 <sprintf@plt+0x18c4>
   130c4:	add	r1, pc, r0
   130c8:	movw	r0, #87	; 0x57
   130cc:	bl	12bfc <sprintf@plt+0x12d8>
   130d0:	b	131d0 <sprintf@plt+0x18ac>
   130d4:	ldr	r0, [pc, #264]	; 131e4 <sprintf@plt+0x18c0>
   130d8:	add	r0, pc, r0
   130dc:	ldr	r1, [r0]
   130e0:	add	r2, r1, #1
   130e4:	str	r2, [r0]
   130e8:	ldr	r0, [fp, #-4]
   130ec:	str	r1, [r0, #12]
   130f0:	ldr	r0, [fp, #-4]
   130f4:	ldr	r0, [r0, #56]	; 0x38
   130f8:	movw	r1, #0
   130fc:	cmp	r0, r1
   13100:	beq	13158 <sprintf@plt+0x1834>
   13104:	ldr	r0, [fp, #-4]
   13108:	ldr	r0, [r0, #56]	; 0x38
   1310c:	str	r0, [fp, #-8]
   13110:	ldr	r0, [fp, #-8]
   13114:	ldr	r0, [r0]
   13118:	movw	r1, #0
   1311c:	cmp	r0, r1
   13120:	beq	13154 <sprintf@plt+0x1830>
   13124:	ldr	r0, [pc, #212]	; 13200 <sprintf@plt+0x18dc>
   13128:	ldr	r0, [pc, r0]
   1312c:	ldr	r0, [r0]
   13130:	ldr	r1, [fp, #-8]
   13134:	ldr	r1, [r1]
   13138:	ldr	r2, [fp, #-8]
   1313c:	bl	11810 <rb_dictionary_add@plt>
   13140:	str	r0, [sp, #16]
   13144:	ldr	r0, [fp, #-8]
   13148:	add	r0, r0, #12
   1314c:	str	r0, [fp, #-8]
   13150:	b	13110 <sprintf@plt+0x17ec>
   13154:	b	13158 <sprintf@plt+0x1834>
   13158:	ldr	r0, [fp, #-4]
   1315c:	ldrb	r0, [r0, #48]	; 0x30
   13160:	cmp	r0, #0
   13164:	beq	13198 <sprintf@plt+0x1874>
   13168:	ldr	r0, [pc, #136]	; 131f8 <sprintf@plt+0x18d4>
   1316c:	ldr	r0, [pc, r0]
   13170:	ldr	r1, [fp, #-4]
   13174:	ldr	r2, [r1, #52]	; 0x34
   13178:	ldrb	r1, [r1, #48]	; 0x30
   1317c:	mov	r3, r1
   13180:	ldr	ip, [pc, #124]	; 13204 <sprintf@plt+0x18e0>
   13184:	ldr	ip, [pc, ip]
   13188:	add	r1, ip, r1, lsl #2
   1318c:	str	r2, [r1]
   13190:	str	r0, [sp, #12]
   13194:	str	r3, [sp, #8]
   13198:	ldr	r0, [fp, #-4]
   1319c:	ldr	r0, [r0, #24]
   131a0:	movw	r1, #0
   131a4:	cmp	r0, r1
   131a8:	beq	131bc <sprintf@plt+0x1898>
   131ac:	ldr	r0, [fp, #-4]
   131b0:	ldr	r0, [r0, #24]
   131b4:	blx	r0
   131b8:	str	r0, [sp, #4]
   131bc:	ldr	r0, [pc, #56]	; 131fc <sprintf@plt+0x18d8>
   131c0:	ldr	r2, [pc, r0]
   131c4:	ldr	r0, [fp, #-4]
   131c8:	ldr	r1, [fp, #-4]
   131cc:	bl	136bc <sprintf@plt+0x1d98>
   131d0:	mov	sp, fp
   131d4:	pop	{fp, pc}
   131d8:			; <UNDEFINED> instruction: 0x00021fb8
   131dc:	andeq	r1, r2, r4, ror #30
   131e0:	andeq	r1, r2, r0, asr pc
   131e4:	andeq	r1, r2, r8, lsr #30
   131e8:	ldrdeq	fp, [r0], -lr
   131ec:	andeq	r1, r2, r0, lsr #31
   131f0:	andeq	r1, r2, ip, ror #30
   131f4:	andeq	r1, r2, r8, lsl #31
   131f8:	andeq	sp, r1, r4, lsr r0
   131fc:	andeq	ip, r1, r8, ror #31
   13200:	andeq	sp, r1, r0, rrx
   13204:	andeq	sp, r1, ip, lsl r0
   13208:	push	{fp, lr}
   1320c:	mov	fp, sp
   13210:	sub	sp, sp, #40	; 0x28
   13214:	ldr	r0, [pc, #376]	; 13394 <sprintf@plt+0x1a70>
   13218:	ldr	r0, [pc, r0]
   1321c:	ldr	r0, [r0]
   13220:	sub	r1, fp, #16
   13224:	bl	11708 <rb_dictionary_foreach_start@plt>
   13228:	ldr	r0, [pc, #360]	; 13398 <sprintf@plt+0x1a74>
   1322c:	ldr	r0, [pc, r0]
   13230:	ldr	r0, [r0]
   13234:	sub	r1, fp, #16
   13238:	bl	11618 <rb_dictionary_foreach_cur@plt>
   1323c:	str	r0, [sp, #20]
   13240:	movw	r1, #0
   13244:	cmp	r0, r1
   13248:	beq	13290 <sprintf@plt+0x196c>
   1324c:	ldr	r0, [sp, #20]
   13250:	bl	133b8 <sprintf@plt+0x1a94>
   13254:	ldr	r0, [pc, #336]	; 133ac <sprintf@plt+0x1a88>
   13258:	add	r2, pc, r0
   1325c:	ldr	r0, [pc, #332]	; 133b0 <sprintf@plt+0x1a8c>
   13260:	add	r3, pc, r0
   13264:	ldr	r0, [sp, #20]
   13268:	mvn	r1, #0
   1326c:	bl	133d8 <sprintf@plt+0x1ab4>
   13270:	ldr	r0, [sp, #20]
   13274:	bl	1353c <sprintf@plt+0x1c18>
   13278:	ldr	r0, [pc, #308]	; 133b4 <sprintf@plt+0x1a90>
   1327c:	ldr	r0, [pc, r0]
   13280:	ldr	r0, [r0]
   13284:	sub	r1, fp, #16
   13288:	bl	116c0 <rb_dictionary_foreach_next@plt>
   1328c:	b	13228 <sprintf@plt+0x1904>
   13290:	ldr	r0, [pc, #260]	; 1339c <sprintf@plt+0x1a78>
   13294:	ldr	r0, [pc, r0]
   13298:	ldr	r0, [r0]
   1329c:	str	r0, [fp, #-4]
   132a0:	ldr	r0, [fp, #-4]
   132a4:	movw	r1, #0
   132a8:	cmp	r0, r1
   132ac:	beq	132c0 <sprintf@plt+0x199c>
   132b0:	ldr	r0, [fp, #-4]
   132b4:	ldr	r0, [r0, #8]
   132b8:	str	r0, [sp, #12]
   132bc:	b	132cc <sprintf@plt+0x19a8>
   132c0:	movw	r0, #0
   132c4:	str	r0, [sp, #12]
   132c8:	b	132cc <sprintf@plt+0x19a8>
   132cc:	ldr	r0, [sp, #12]
   132d0:	str	r0, [fp, #-8]
   132d4:	ldr	r0, [fp, #-4]
   132d8:	movw	r1, #0
   132dc:	cmp	r0, r1
   132e0:	beq	13360 <sprintf@plt+0x1a3c>
   132e4:	ldr	r0, [fp, #-4]
   132e8:	ldr	r0, [r0]
   132ec:	str	r0, [sp, #16]
   132f0:	ldr	r0, [sp, #16]
   132f4:	ldr	r0, [r0, #28]
   132f8:	movw	r1, #0
   132fc:	cmp	r0, r1
   13300:	beq	13310 <sprintf@plt+0x19ec>
   13304:	ldr	r0, [sp, #16]
   13308:	ldr	r0, [r0, #28]
   1330c:	blx	r0
   13310:	ldr	r0, [pc, #144]	; 133a8 <sprintf@plt+0x1a84>
   13314:	ldr	r1, [pc, r0]
   13318:	ldr	r0, [fp, #-4]
   1331c:	bl	13580 <sprintf@plt+0x1c5c>
   13320:	ldr	r0, [fp, #-8]
   13324:	str	r0, [fp, #-4]
   13328:	ldr	r0, [fp, #-4]
   1332c:	movw	r1, #0
   13330:	cmp	r0, r1
   13334:	beq	13348 <sprintf@plt+0x1a24>
   13338:	ldr	r0, [fp, #-4]
   1333c:	ldr	r0, [r0, #8]
   13340:	str	r0, [sp, #8]
   13344:	b	13354 <sprintf@plt+0x1a30>
   13348:	movw	r0, #0
   1334c:	str	r0, [sp, #8]
   13350:	b	13354 <sprintf@plt+0x1a30>
   13354:	ldr	r0, [sp, #8]
   13358:	str	r0, [fp, #-8]
   1335c:	b	132d4 <sprintf@plt+0x19b0>
   13360:	ldr	r0, [pc, #60]	; 133a4 <sprintf@plt+0x1a80>
   13364:	ldr	r0, [pc, r0]
   13368:	ldr	r0, [r0]
   1336c:	movw	r1, #0
   13370:	str	r1, [sp, #4]
   13374:	ldr	r2, [sp, #4]
   13378:	bl	117a4 <rb_dictionary_destroy@plt>
   1337c:	ldr	r0, [pc, #28]	; 133a0 <sprintf@plt+0x1a7c>
   13380:	add	r0, pc, r0
   13384:	ldr	r0, [r0]
   13388:	bl	115a0 <rb_event_delete@plt>
   1338c:	mov	sp, fp
   13390:	pop	{fp, pc}
   13394:	andeq	ip, r1, r8, asr #30
   13398:	andeq	ip, r1, r4, lsr pc
   1339c:	andeq	ip, r1, r4, lsl pc
   133a0:	andeq	r1, r2, r0, ror ip
   133a4:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   133a8:	muleq	r1, r4, lr
   133ac:	strdeq	fp, [r0], -pc	; <UNPREDICTABLE>
   133b0:	strdeq	fp, [r0], -pc	; <UNPREDICTABLE>
   133b4:	andeq	ip, r1, r4, ror #29
   133b8:	sub	sp, sp, #4
   133bc:	str	r0, [sp]
   133c0:	ldr	r0, [sp]
   133c4:	ldr	r1, [r0, #460]	; 0x1cc
   133c8:	add	r1, r1, #1
   133cc:	str	r1, [r0, #460]	; 0x1cc
   133d0:	add	sp, sp, #4
   133d4:	bx	lr
   133d8:	push	{r4, r5, r6, sl, fp, lr}
   133dc:	add	fp, sp, #16
   133e0:	sub	sp, sp, #592	; 0x250
   133e4:	str	r0, [fp, #-20]	; 0xffffffec
   133e8:	str	r1, [fp, #-24]	; 0xffffffe8
   133ec:	str	r2, [fp, #-28]	; 0xffffffe4
   133f0:	str	r3, [fp, #-32]	; 0xffffffe0
   133f4:	add	r0, fp, #8
   133f8:	str	r0, [sp, #60]	; 0x3c
   133fc:	add	r0, sp, #64	; 0x40
   13400:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13404:	ldr	r3, [sp, #60]	; 0x3c
   13408:	mov	r1, #512	; 0x200
   1340c:	bl	115d0 <vsnprintf@plt>
   13410:	ldr	r1, [pc, #280]	; 13530 <sprintf@plt+0x1c0c>
   13414:	ldr	r1, [pc, r1]
   13418:	add	r2, sp, #60	; 0x3c
   1341c:	ldr	r1, [r1]
   13420:	ldr	r3, [fp, #-20]	; 0xffffffec
   13424:	ldr	r3, [r3]
   13428:	ldr	lr, [fp, #-24]	; 0xffffffe8
   1342c:	cmn	lr, #1
   13430:	str	r0, [sp, #56]	; 0x38
   13434:	str	r2, [sp, #52]	; 0x34
   13438:	str	r1, [sp, #48]	; 0x30
   1343c:	str	r3, [sp, #44]	; 0x2c
   13440:	beq	13464 <sprintf@plt+0x1b40>
   13444:	ldr	r0, [fp, #-20]	; 0xffffffec
   13448:	ldr	r0, [r0, #464]	; 0x1d0
   1344c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13450:	add	r0, r0, r1, lsl #4
   13454:	ldr	r0, [r0]
   13458:	ldrb	r0, [r0, #20]
   1345c:	str	r0, [sp, #40]	; 0x28
   13460:	b	13470 <sprintf@plt+0x1b4c>
   13464:	movw	r0, #42	; 0x2a
   13468:	str	r0, [sp, #40]	; 0x28
   1346c:	b	13470 <sprintf@plt+0x1b4c>
   13470:	ldr	r0, [sp, #40]	; 0x28
   13474:	ldr	r1, [fp, #-20]	; 0xffffffec
   13478:	add	r1, r1, #440	; 0x1b8
   1347c:	ldr	r2, [fp, #-20]	; 0xffffffec
   13480:	add	r2, r2, #376	; 0x178
   13484:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13488:	movw	ip, #0
   1348c:	cmp	r3, ip
   13490:	str	r0, [sp, #36]	; 0x24
   13494:	str	r1, [sp, #32]
   13498:	str	r2, [sp, #28]
   1349c:	bne	134b0 <sprintf@plt+0x1b8c>
   134a0:	ldr	r0, [pc, #140]	; 13534 <sprintf@plt+0x1c10>
   134a4:	add	r0, pc, r0
   134a8:	str	r0, [sp, #24]
   134ac:	b	134b8 <sprintf@plt+0x1b94>
   134b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   134b4:	str	r0, [sp, #24]
   134b8:	ldr	r0, [sp, #24]
   134bc:	ldr	r1, [pc, #116]	; 13538 <sprintf@plt+0x1c14>
   134c0:	add	r1, pc, r1
   134c4:	add	r2, sp, #64	; 0x40
   134c8:	ldr	r3, [sp, #48]	; 0x30
   134cc:	str	r0, [sp, #20]
   134d0:	mov	r0, r3
   134d4:	ldr	ip, [sp, #44]	; 0x2c
   134d8:	str	r2, [sp, #16]
   134dc:	mov	r2, ip
   134e0:	ldr	r3, [sp, #36]	; 0x24
   134e4:	ldr	lr, [sp, #32]
   134e8:	str	lr, [sp]
   134ec:	ldr	r4, [sp, #28]
   134f0:	str	r4, [sp, #4]
   134f4:	ldr	r5, [sp, #20]
   134f8:	str	r5, [sp, #8]
   134fc:	ldr	r6, [sp, #16]
   13500:	str	r6, [sp, #12]
   13504:	bl	11888 <rb_helper_write@plt>
   13508:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1350c:	cmn	r0, #1
   13510:	beq	13520 <sprintf@plt+0x1bfc>
   13514:	ldr	r0, [fp, #-20]	; 0xffffffec
   13518:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1351c:	bl	13be4 <sprintf@plt+0x22c0>
   13520:	ldr	r0, [fp, #-20]	; 0xffffffec
   13524:	bl	139ec <sprintf@plt+0x20c8>
   13528:	sub	sp, fp, #16
   1352c:	pop	{r4, r5, r6, sl, fp, pc}
   13530:	andeq	ip, r1, r8, lsl #27
   13534:	andeq	fp, r0, r8, asr #12
   13538:	andeq	fp, r0, r0, lsl r7
   1353c:	push	{fp, lr}
   13540:	mov	fp, sp
   13544:	sub	sp, sp, #8
   13548:	str	r0, [sp, #4]
   1354c:	ldr	r0, [sp, #4]
   13550:	ldr	r1, [r0, #460]	; 0x1cc
   13554:	mvn	r2, #0
   13558:	add	r1, r1, r2
   1355c:	str	r1, [r0, #460]	; 0x1cc
   13560:	ldr	r0, [sp, #4]
   13564:	ldr	r0, [r0, #460]	; 0x1cc
   13568:	cmp	r0, #0
   1356c:	bne	13578 <sprintf@plt+0x1c54>
   13570:	ldr	r0, [sp, #4]
   13574:	bl	13954 <sprintf@plt+0x2030>
   13578:	mov	sp, fp
   1357c:	pop	{fp, pc}
   13580:	push	{fp, lr}
   13584:	mov	fp, sp
   13588:	sub	sp, sp, #8
   1358c:	str	r0, [sp, #4]
   13590:	str	r1, [sp]
   13594:	ldr	r0, [sp, #4]
   13598:	movw	r1, #0
   1359c:	cmp	r0, r1
   135a0:	beq	135a8 <sprintf@plt+0x1c84>
   135a4:	b	135c8 <sprintf@plt+0x1ca4>
   135a8:	ldr	r0, [pc, #244]	; 136a4 <sprintf@plt+0x1d80>
   135ac:	add	r0, pc, r0
   135b0:	ldr	r1, [pc, #240]	; 136a8 <sprintf@plt+0x1d84>
   135b4:	add	r1, pc, r1
   135b8:	ldr	r2, [pc, #236]	; 136ac <sprintf@plt+0x1d88>
   135bc:	add	r3, pc, r2
   135c0:	movw	r2, #235	; 0xeb
   135c4:	bl	1169c <__assert_fail@plt>
   135c8:	ldr	r0, [sp]
   135cc:	movw	r1, #0
   135d0:	cmp	r0, r1
   135d4:	beq	135dc <sprintf@plt+0x1cb8>
   135d8:	b	135fc <sprintf@plt+0x1cd8>
   135dc:	ldr	r0, [pc, #204]	; 136b0 <sprintf@plt+0x1d8c>
   135e0:	add	r0, pc, r0
   135e4:	ldr	r1, [pc, #200]	; 136b4 <sprintf@plt+0x1d90>
   135e8:	add	r1, pc, r1
   135ec:	ldr	r2, [pc, #196]	; 136b8 <sprintf@plt+0x1d94>
   135f0:	add	r3, pc, r2
   135f4:	movw	r2, #236	; 0xec
   135f8:	bl	1169c <__assert_fail@plt>
   135fc:	ldr	r0, [sp, #4]
   13600:	ldr	r0, [r0, #8]
   13604:	movw	r1, #0
   13608:	cmp	r0, r1
   1360c:	beq	13628 <sprintf@plt+0x1d04>
   13610:	ldr	r0, [sp, #4]
   13614:	ldr	r0, [r0, #4]
   13618:	ldr	r1, [sp, #4]
   1361c:	ldr	r1, [r1, #8]
   13620:	str	r0, [r1, #4]
   13624:	b	13638 <sprintf@plt+0x1d14>
   13628:	ldr	r0, [sp, #4]
   1362c:	ldr	r0, [r0, #4]
   13630:	ldr	r1, [sp]
   13634:	str	r0, [r1, #4]
   13638:	ldr	r0, [sp, #4]
   1363c:	ldr	r0, [r0, #4]
   13640:	movw	r1, #0
   13644:	cmp	r0, r1
   13648:	beq	13664 <sprintf@plt+0x1d40>
   1364c:	ldr	r0, [sp, #4]
   13650:	ldr	r0, [r0, #8]
   13654:	ldr	r1, [sp, #4]
   13658:	ldr	r1, [r1, #4]
   1365c:	str	r0, [r1, #8]
   13660:	b	13674 <sprintf@plt+0x1d50>
   13664:	ldr	r0, [sp, #4]
   13668:	ldr	r0, [r0, #8]
   1366c:	ldr	r1, [sp]
   13670:	str	r0, [r1]
   13674:	ldr	r0, [sp, #4]
   13678:	movw	r1, #0
   1367c:	str	r1, [r0, #4]
   13680:	ldr	r0, [sp, #4]
   13684:	str	r1, [r0, #8]
   13688:	ldr	r0, [sp]
   1368c:	ldr	r1, [r0, #8]
   13690:	mvn	r2, #0
   13694:	add	r1, r1, r2
   13698:	str	r1, [r0, #8]
   1369c:	mov	sp, fp
   136a0:	pop	{fp, pc}
   136a4:	andeq	fp, r0, r9, lsr #24
   136a8:	andeq	fp, r0, r4, lsl r7
   136ac:	andeq	fp, r0, r8, lsr #14
   136b0:	andeq	fp, r0, sl, lsr r7
   136b4:	andeq	fp, r0, r0, ror #13
   136b8:	strdeq	fp, [r0], -r4
   136bc:	push	{fp, lr}
   136c0:	mov	fp, sp
   136c4:	sub	sp, sp, #16
   136c8:	str	r0, [fp, #-4]
   136cc:	str	r1, [sp, #8]
   136d0:	str	r2, [sp, #4]
   136d4:	ldr	r0, [fp, #-4]
   136d8:	movw	r1, #0
   136dc:	cmp	r0, r1
   136e0:	beq	136e8 <sprintf@plt+0x1dc4>
   136e4:	b	13708 <sprintf@plt+0x1de4>
   136e8:	ldr	r0, [pc, #276]	; 13804 <sprintf@plt+0x1ee0>
   136ec:	add	r0, pc, r0
   136f0:	ldr	r1, [pc, #272]	; 13808 <sprintf@plt+0x1ee4>
   136f4:	add	r1, pc, r1
   136f8:	ldr	r2, [pc, #268]	; 1380c <sprintf@plt+0x1ee8>
   136fc:	add	r3, pc, r2
   13700:	movw	r2, #143	; 0x8f
   13704:	bl	1169c <__assert_fail@plt>
   13708:	ldr	r0, [sp, #8]
   1370c:	movw	r1, #0
   13710:	cmp	r0, r1
   13714:	beq	1371c <sprintf@plt+0x1df8>
   13718:	b	1373c <sprintf@plt+0x1e18>
   1371c:	ldr	r0, [pc, #236]	; 13810 <sprintf@plt+0x1eec>
   13720:	add	r0, pc, r0
   13724:	ldr	r1, [pc, #232]	; 13814 <sprintf@plt+0x1ef0>
   13728:	add	r1, pc, r1
   1372c:	ldr	r2, [pc, #228]	; 13818 <sprintf@plt+0x1ef4>
   13730:	add	r3, pc, r2
   13734:	movw	r2, #144	; 0x90
   13738:	bl	1169c <__assert_fail@plt>
   1373c:	ldr	r0, [sp, #4]
   13740:	movw	r1, #0
   13744:	cmp	r0, r1
   13748:	beq	13750 <sprintf@plt+0x1e2c>
   1374c:	b	13770 <sprintf@plt+0x1e4c>
   13750:	ldr	r0, [pc, #196]	; 1381c <sprintf@plt+0x1ef8>
   13754:	add	r0, pc, r0
   13758:	ldr	r1, [pc, #192]	; 13820 <sprintf@plt+0x1efc>
   1375c:	add	r1, pc, r1
   13760:	ldr	r2, [pc, #188]	; 13824 <sprintf@plt+0x1f00>
   13764:	add	r3, pc, r2
   13768:	movw	r2, #145	; 0x91
   1376c:	bl	1169c <__assert_fail@plt>
   13770:	ldr	r0, [fp, #-4]
   13774:	ldr	r1, [sp, #8]
   13778:	str	r0, [r1]
   1377c:	ldr	r0, [sp, #8]
   13780:	movw	r1, #0
   13784:	str	r1, [r0, #4]
   13788:	ldr	r0, [sp, #4]
   1378c:	ldr	r0, [r0]
   13790:	ldr	r2, [sp, #8]
   13794:	str	r0, [r2, #8]
   13798:	ldr	r0, [sp, #4]
   1379c:	ldr	r0, [r0]
   137a0:	cmp	r0, r1
   137a4:	beq	137bc <sprintf@plt+0x1e98>
   137a8:	ldr	r0, [sp, #8]
   137ac:	ldr	r1, [sp, #4]
   137b0:	ldr	r1, [r1]
   137b4:	str	r0, [r1, #4]
   137b8:	b	137e0 <sprintf@plt+0x1ebc>
   137bc:	ldr	r0, [sp, #4]
   137c0:	ldr	r0, [r0, #4]
   137c4:	movw	r1, #0
   137c8:	cmp	r0, r1
   137cc:	bne	137dc <sprintf@plt+0x1eb8>
   137d0:	ldr	r0, [sp, #8]
   137d4:	ldr	r1, [sp, #4]
   137d8:	str	r0, [r1, #4]
   137dc:	b	137e0 <sprintf@plt+0x1ebc>
   137e0:	ldr	r0, [sp, #8]
   137e4:	ldr	r1, [sp, #4]
   137e8:	str	r0, [r1]
   137ec:	ldr	r0, [sp, #4]
   137f0:	ldr	r1, [r0, #8]
   137f4:	add	r1, r1, #1
   137f8:	str	r1, [r0, #8]
   137fc:	mov	sp, fp
   13800:	pop	{fp, pc}
   13804:	andeq	fp, r0, fp, lsr r6
   13808:	ldrdeq	fp, [r0], -r4
   1380c:	andeq	fp, r0, r8, lsr r6
   13810:			; <UNDEFINED> instruction: 0x0000bab5
   13814:	andeq	fp, r0, r0, lsr #11
   13818:	andeq	fp, r0, r4, lsl #12
   1381c:	andeq	fp, r0, r6, asr #11
   13820:	andeq	fp, r0, ip, ror #10
   13824:	ldrdeq	fp, [r0], -r0
   13828:	push	{fp, lr}
   1382c:	mov	fp, sp
   13830:	sub	sp, sp, #32
   13834:	str	r0, [fp, #-4]
   13838:	ldr	r0, [fp, #-4]
   1383c:	ldr	r0, [r0, #56]	; 0x38
   13840:	movw	r1, #0
   13844:	cmp	r0, r1
   13848:	beq	1389c <sprintf@plt+0x1f78>
   1384c:	ldr	r0, [fp, #-4]
   13850:	ldr	r0, [r0, #56]	; 0x38
   13854:	str	r0, [fp, #-8]
   13858:	ldr	r0, [fp, #-8]
   1385c:	ldr	r0, [r0]
   13860:	movw	r1, #0
   13864:	cmp	r0, r1
   13868:	beq	13898 <sprintf@plt+0x1f74>
   1386c:	ldr	r0, [pc, #216]	; 1394c <sprintf@plt+0x2028>
   13870:	ldr	r0, [pc, r0]
   13874:	ldr	r0, [r0]
   13878:	ldr	r1, [fp, #-8]
   1387c:	ldr	r1, [r1]
   13880:	bl	11744 <rb_dictionary_delete@plt>
   13884:	str	r0, [fp, #-12]
   13888:	ldr	r0, [fp, #-8]
   1388c:	add	r0, r0, #12
   13890:	str	r0, [fp, #-8]
   13894:	b	13858 <sprintf@plt+0x1f34>
   13898:	b	1389c <sprintf@plt+0x1f78>
   1389c:	ldr	r0, [fp, #-4]
   138a0:	ldrb	r0, [r0, #48]	; 0x30
   138a4:	cmp	r0, #0
   138a8:	beq	138dc <sprintf@plt+0x1fb8>
   138ac:	ldr	r0, [pc, #140]	; 13940 <sprintf@plt+0x201c>
   138b0:	ldr	r0, [pc, r0]
   138b4:	ldr	r1, [fp, #-4]
   138b8:	ldrb	r1, [r1, #48]	; 0x30
   138bc:	mov	r2, r1
   138c0:	ldr	r3, [pc, #136]	; 13950 <sprintf@plt+0x202c>
   138c4:	ldr	r3, [pc, r3]
   138c8:	add	r1, r3, r1, lsl #2
   138cc:	movw	r3, #0
   138d0:	str	r3, [r1]
   138d4:	str	r0, [sp, #16]
   138d8:	str	r2, [sp, #12]
   138dc:	ldr	r0, [fp, #-4]
   138e0:	ldr	r0, [r0, #28]
   138e4:	movw	r1, #0
   138e8:	cmp	r0, r1
   138ec:	beq	138fc <sprintf@plt+0x1fd8>
   138f0:	ldr	r0, [fp, #-4]
   138f4:	ldr	r0, [r0, #28]
   138f8:	blx	r0
   138fc:	ldr	r0, [pc, #68]	; 13948 <sprintf@plt+0x2024>
   13900:	ldr	r1, [pc, r0]
   13904:	ldr	r0, [fp, #-4]
   13908:	bl	13580 <sprintf@plt+0x1c5c>
   1390c:	ldr	r0, [fp, #-4]
   13910:	ldr	r0, [r0, #12]
   13914:	str	r0, [sp, #8]
   13918:	bl	118ac <rb_make_rb_dlink_node@plt>
   1391c:	ldr	r1, [pc, #32]	; 13944 <sprintf@plt+0x2020>
   13920:	add	r2, pc, r1
   13924:	ldr	r1, [sp, #8]
   13928:	str	r0, [sp, #4]
   1392c:	mov	r0, r1
   13930:	ldr	r1, [sp, #4]
   13934:	bl	136bc <sprintf@plt+0x1d98>
   13938:	mov	sp, fp
   1393c:	pop	{fp, pc}
   13940:	strdeq	ip, [r1], -r0
   13944:	ldrdeq	r1, [r2], -r4
   13948:	andeq	ip, r1, r8, lsr #17
   1394c:	andeq	ip, r1, r8, lsl r9
   13950:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   13954:	push	{fp, lr}
   13958:	mov	fp, sp
   1395c:	sub	sp, sp, #8
   13960:	ldr	r1, [pc, #56]	; 139a0 <sprintf@plt+0x207c>
   13964:	ldr	r1, [pc, r1]
   13968:	str	r0, [sp, #4]
   1396c:	ldr	r0, [r1]
   13970:	ldr	r1, [sp, #4]
   13974:	ldr	r1, [r1]
   13978:	bl	11744 <rb_dictionary_delete@plt>
   1397c:	ldr	r1, [sp, #4]
   13980:	ldr	r1, [r1, #464]	; 0x1d0
   13984:	str	r0, [sp]
   13988:	mov	r0, r1
   1398c:	bl	139a4 <sprintf@plt+0x2080>
   13990:	ldr	r0, [sp, #4]
   13994:	bl	139a4 <sprintf@plt+0x2080>
   13998:	mov	sp, fp
   1399c:	pop	{fp, pc}
   139a0:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   139a4:	push	{fp, lr}
   139a8:	mov	fp, sp
   139ac:	sub	sp, sp, #8
   139b0:	str	r0, [sp, #4]
   139b4:	ldr	r0, [sp, #4]
   139b8:	movw	r1, #0
   139bc:	cmp	r0, r1
   139c0:	movw	r0, #0
   139c4:	movne	r0, #1
   139c8:	mvn	r1, #0
   139cc:	eor	r0, r0, r1
   139d0:	eor	r0, r0, r1
   139d4:	tst	r0, #1
   139d8:	beq	139e4 <sprintf@plt+0x20c0>
   139dc:	ldr	r0, [sp, #4]
   139e0:	bl	116cc <free@plt>
   139e4:	mov	sp, fp
   139e8:	pop	{fp, pc}
   139ec:	push	{fp, lr}
   139f0:	mov	fp, sp
   139f4:	sub	sp, sp, #16
   139f8:	str	r0, [fp, #-4]
   139fc:	ldr	r0, [fp, #-4]
   13a00:	ldrb	r0, [r0, #452]	; 0x1c4
   13a04:	tst	r0, #1
   13a08:	beq	13a10 <sprintf@plt+0x20ec>
   13a0c:	b	13ab8 <sprintf@plt+0x2194>
   13a10:	ldr	r0, [fp, #-4]
   13a14:	movw	r1, #1
   13a18:	strb	r1, [r0, #452]	; 0x1c4
   13a1c:	ldr	r0, [fp, #-4]
   13a20:	ldr	r0, [r0, #456]	; 0x1c8
   13a24:	cmp	r0, #0
   13a28:	bls	13ab8 <sprintf@plt+0x2194>
   13a2c:	ldr	r0, [pc, #140]	; 13ac0 <sprintf@plt+0x219c>
   13a30:	ldr	r0, [pc, r0]
   13a34:	ldr	r0, [r0]
   13a38:	str	r0, [sp, #8]
   13a3c:	ldr	r0, [sp, #8]
   13a40:	movw	r1, #0
   13a44:	cmp	r0, r1
   13a48:	beq	13ab4 <sprintf@plt+0x2190>
   13a4c:	ldr	r0, [sp, #8]
   13a50:	ldr	r0, [r0]
   13a54:	str	r0, [sp, #4]
   13a58:	ldr	r0, [sp, #4]
   13a5c:	ldr	r0, [r0, #36]	; 0x24
   13a60:	movw	r1, #0
   13a64:	cmp	r0, r1
   13a68:	beq	13aa0 <sprintf@plt+0x217c>
   13a6c:	ldr	r0, [fp, #-4]
   13a70:	ldr	r1, [sp, #4]
   13a74:	ldr	r1, [r1, #12]
   13a78:	bl	13ac4 <sprintf@plt+0x21a0>
   13a7c:	tst	r0, #1
   13a80:	beq	13aa0 <sprintf@plt+0x217c>
   13a84:	ldr	r0, [sp, #4]
   13a88:	ldr	r0, [r0, #36]	; 0x24
   13a8c:	ldr	r1, [fp, #-4]
   13a90:	str	r0, [sp]
   13a94:	mov	r0, r1
   13a98:	ldr	r1, [sp]
   13a9c:	blx	r1
   13aa0:	b	13aa4 <sprintf@plt+0x2180>
   13aa4:	ldr	r0, [sp, #8]
   13aa8:	ldr	r0, [r0, #8]
   13aac:	str	r0, [sp, #8]
   13ab0:	b	13a3c <sprintf@plt+0x2118>
   13ab4:	b	13ab8 <sprintf@plt+0x2194>
   13ab8:	mov	sp, fp
   13abc:	pop	{fp, pc}
   13ac0:	andeq	ip, r1, r8, ror r7
   13ac4:	push	{fp, lr}
   13ac8:	mov	fp, sp
   13acc:	sub	sp, sp, #8
   13ad0:	str	r0, [sp, #4]
   13ad4:	str	r1, [sp]
   13ad8:	ldr	r0, [sp, #4]
   13adc:	ldr	r1, [sp]
   13ae0:	bl	141d0 <sprintf@plt+0x28ac>
   13ae4:	cmp	r0, #1
   13ae8:	movw	r0, #0
   13aec:	moveq	r0, #1
   13af0:	and	r0, r0, #1
   13af4:	mov	sp, fp
   13af8:	pop	{fp, pc}
   13afc:	push	{fp, lr}
   13b00:	mov	fp, sp
   13b04:	sub	sp, sp, #24
   13b08:	str	r0, [fp, #-4]
   13b0c:	str	r1, [fp, #-8]
   13b10:	ldr	r0, [fp, #-4]
   13b14:	ldr	r1, [fp, #-8]
   13b18:	bl	13be4 <sprintf@plt+0x22c0>
   13b1c:	ldr	r0, [fp, #-4]
   13b20:	ldr	r0, [r0, #456]	; 0x1c8
   13b24:	cmp	r0, #0
   13b28:	bne	13b48 <sprintf@plt+0x2224>
   13b2c:	ldr	r0, [fp, #-4]
   13b30:	ldrb	r0, [r0, #451]	; 0x1c3
   13b34:	tst	r0, #1
   13b38:	bne	13b48 <sprintf@plt+0x2224>
   13b3c:	ldr	r0, [fp, #-4]
   13b40:	bl	13c24 <sprintf@plt+0x2300>
   13b44:	b	13bd8 <sprintf@plt+0x22b4>
   13b48:	ldr	r0, [pc, #144]	; 13be0 <sprintf@plt+0x22bc>
   13b4c:	ldr	r0, [pc, r0]
   13b50:	ldr	r0, [r0]
   13b54:	str	r0, [sp, #12]
   13b58:	ldr	r0, [sp, #12]
   13b5c:	movw	r1, #0
   13b60:	cmp	r0, r1
   13b64:	beq	13bd8 <sprintf@plt+0x22b4>
   13b68:	ldr	r0, [sp, #12]
   13b6c:	ldr	r0, [r0]
   13b70:	str	r0, [sp, #8]
   13b74:	ldr	r0, [sp, #8]
   13b78:	ldr	r0, [r0, #44]	; 0x2c
   13b7c:	movw	r1, #0
   13b80:	cmp	r0, r1
   13b84:	beq	13bc4 <sprintf@plt+0x22a0>
   13b88:	ldr	r0, [fp, #-4]
   13b8c:	ldr	r1, [sp, #8]
   13b90:	ldr	r1, [r1, #12]
   13b94:	bl	13ac4 <sprintf@plt+0x21a0>
   13b98:	tst	r0, #1
   13b9c:	beq	13bc4 <sprintf@plt+0x22a0>
   13ba0:	ldr	r0, [sp, #8]
   13ba4:	ldr	r0, [r0, #44]	; 0x2c
   13ba8:	ldr	r1, [fp, #-4]
   13bac:	ldr	r2, [fp, #-8]
   13bb0:	str	r0, [sp, #4]
   13bb4:	mov	r0, r1
   13bb8:	mov	r1, r2
   13bbc:	ldr	r2, [sp, #4]
   13bc0:	blx	r2
   13bc4:	b	13bc8 <sprintf@plt+0x22a4>
   13bc8:	ldr	r0, [sp, #12]
   13bcc:	ldr	r0, [r0, #8]
   13bd0:	str	r0, [sp, #12]
   13bd4:	b	13b58 <sprintf@plt+0x2234>
   13bd8:	mov	sp, fp
   13bdc:	pop	{fp, pc}
   13be0:	andeq	ip, r1, ip, asr r6
   13be4:	push	{fp, lr}
   13be8:	mov	fp, sp
   13bec:	sub	sp, sp, #8
   13bf0:	str	r0, [sp, #4]
   13bf4:	str	r1, [sp]
   13bf8:	ldr	r0, [sp, #4]
   13bfc:	ldr	r1, [sp]
   13c00:	movw	r2, #2
   13c04:	bl	141f8 <sprintf@plt+0x28d4>
   13c08:	ldr	r0, [sp, #4]
   13c0c:	ldr	r1, [r0, #456]	; 0x1c8
   13c10:	mvn	r2, #0
   13c14:	add	r1, r1, r2
   13c18:	str	r1, [r0, #456]	; 0x1c8
   13c1c:	mov	sp, fp
   13c20:	pop	{fp, pc}
   13c24:	push	{fp, lr}
   13c28:	mov	fp, sp
   13c2c:	sub	sp, sp, #8
   13c30:	ldr	r1, [pc, #64]	; 13c78 <sprintf@plt+0x2354>
   13c34:	add	r1, pc, r1
   13c38:	ldr	r2, [pc, #60]	; 13c7c <sprintf@plt+0x2358>
   13c3c:	ldr	r2, [pc, r2]
   13c40:	str	r0, [sp, #4]
   13c44:	ldr	r0, [r2]
   13c48:	ldr	r2, [sp, #4]
   13c4c:	ldr	r2, [r2]
   13c50:	ldr	r3, [sp, #4]
   13c54:	add	r3, r3, #440	; 0x1b8
   13c58:	ldr	ip, [sp, #4]
   13c5c:	add	ip, ip, #376	; 0x178
   13c60:	str	ip, [sp]
   13c64:	bl	11888 <rb_helper_write@plt>
   13c68:	ldr	r0, [sp, #4]
   13c6c:	bl	139ec <sprintf@plt+0x20c8>
   13c70:	mov	sp, fp
   13c74:	pop	{fp, pc}
   13c78:			; <UNDEFINED> instruction: 0x0000afb1
   13c7c:	andeq	ip, r1, r0, ror #10
   13c80:	push	{fp, lr}
   13c84:	mov	fp, sp
   13c88:	sub	sp, sp, #48	; 0x30
   13c8c:	str	r0, [fp, #-4]
   13c90:	str	r1, [fp, #-8]
   13c94:	ldr	r0, [fp, #-4]
   13c98:	cmp	r0, #6
   13c9c:	bge	13cbc <sprintf@plt+0x2398>
   13ca0:	ldr	r0, [pc, #184]	; 13d60 <sprintf@plt+0x243c>
   13ca4:	add	r1, pc, r0
   13ca8:	ldr	r2, [fp, #-4]
   13cac:	movw	r0, #67	; 0x43
   13cb0:	bl	12bfc <sprintf@plt+0x12d8>
   13cb4:	movw	r0, #3
   13cb8:	bl	1190c <exit@plt>
   13cbc:	ldr	r0, [fp, #-8]
   13cc0:	ldr	r0, [r0, #4]
   13cc4:	ldr	r1, [fp, #-8]
   13cc8:	ldr	r1, [r1, #8]
   13ccc:	ldr	r2, [fp, #-8]
   13cd0:	ldr	r2, [r2, #12]
   13cd4:	ldr	r3, [fp, #-8]
   13cd8:	ldr	r3, [r3, #16]
   13cdc:	ldr	ip, [fp, #-8]
   13ce0:	ldr	ip, [ip, #20]
   13ce4:	ldr	lr, [fp, #-4]
   13ce8:	cmp	lr, #6
   13cec:	str	r0, [fp, #-12]
   13cf0:	str	r1, [fp, #-16]
   13cf4:	str	r2, [fp, #-20]	; 0xffffffec
   13cf8:	str	r3, [sp, #24]
   13cfc:	str	ip, [sp, #20]
   13d00:	ble	13d14 <sprintf@plt+0x23f0>
   13d04:	ldr	r0, [fp, #-8]
   13d08:	ldr	r0, [r0, #24]
   13d0c:	str	r0, [sp, #16]
   13d10:	b	13d24 <sprintf@plt+0x2400>
   13d14:	ldr	r0, [pc, #64]	; 13d5c <sprintf@plt+0x2438>
   13d18:	add	r0, pc, r0
   13d1c:	str	r0, [sp, #16]
   13d20:	b	13d24 <sprintf@plt+0x2400>
   13d24:	ldr	r0, [sp, #16]
   13d28:	ldr	r1, [fp, #-12]
   13d2c:	str	r0, [sp, #12]
   13d30:	mov	r0, r1
   13d34:	ldr	r1, [fp, #-16]
   13d38:	ldr	r2, [fp, #-20]	; 0xffffffec
   13d3c:	ldr	r3, [sp, #24]
   13d40:	ldr	ip, [sp, #20]
   13d44:	str	ip, [sp]
   13d48:	ldr	lr, [sp, #12]
   13d4c:	str	lr, [sp, #4]
   13d50:	bl	13d64 <sprintf@plt+0x2440>
   13d54:	mov	sp, fp
   13d58:	pop	{fp, pc}
   13d5c:	muleq	r0, r3, r0
   13d60:	andeq	sl, r0, ip, asr #30
   13d64:	push	{fp, lr}
   13d68:	mov	fp, sp
   13d6c:	sub	sp, sp, #96	; 0x60
   13d70:	ldr	ip, [fp, #12]
   13d74:	ldr	lr, [fp, #8]
   13d78:	str	r0, [fp, #-4]
   13d7c:	str	r1, [fp, #-8]
   13d80:	str	r2, [fp, #-12]
   13d84:	str	r3, [fp, #-16]
   13d88:	ldr	r0, [fp, #-4]
   13d8c:	mov	r1, #0
   13d90:	mov	r2, #16
   13d94:	str	lr, [fp, #-44]	; 0xffffffd4
   13d98:	str	ip, [sp, #48]	; 0x30
   13d9c:	bl	116b4 <strtoull@plt>
   13da0:	str	r1, [fp, #-28]	; 0xffffffe4
   13da4:	str	r0, [fp, #-32]	; 0xffffffe0
   13da8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13dac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13db0:	orr	r0, r0, r1
   13db4:	cmp	r0, #0
   13db8:	beq	13dd0 <sprintf@plt+0x24ac>
   13dbc:	b	13dc0 <sprintf@plt+0x249c>
   13dc0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13dc4:	cmp	r0, #0
   13dc8:	beq	13dd4 <sprintf@plt+0x24b0>
   13dcc:	b	13dd0 <sprintf@plt+0x24ac>
   13dd0:	b	140bc <sprintf@plt+0x2798>
   13dd4:	ldr	r0, [pc, #744]	; 140c4 <sprintf@plt+0x27a0>
   13dd8:	ldr	r0, [pc, r0]
   13ddc:	mov	r1, #468	; 0x1d4
   13de0:	str	r0, [sp, #44]	; 0x2c
   13de4:	mov	r0, r1
   13de8:	bl	14228 <sprintf@plt+0x2904>
   13dec:	str	r0, [fp, #-20]	; 0xffffffec
   13df0:	ldr	r0, [fp, #-20]	; 0xffffffec
   13df4:	bl	133b8 <sprintf@plt+0x1a94>
   13df8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13dfc:	ldr	r1, [fp, #-20]	; 0xffffffec
   13e00:	str	r0, [r1]
   13e04:	ldr	r0, [sp, #44]	; 0x2c
   13e08:	ldr	r0, [r0]
   13e0c:	ldr	r1, [fp, #-20]	; 0xffffffec
   13e10:	ldr	r1, [r1]
   13e14:	bl	11858 <rb_dictionary_find@plt>
   13e18:	movw	r1, #0
   13e1c:	cmp	r0, r1
   13e20:	bne	13e48 <sprintf@plt+0x2524>
   13e24:	ldr	r0, [pc, #672]	; 140cc <sprintf@plt+0x27a8>
   13e28:	ldr	r0, [pc, r0]
   13e2c:	ldr	r0, [r0]
   13e30:	ldr	r1, [fp, #-20]	; 0xffffffec
   13e34:	ldr	r1, [r1]
   13e38:	ldr	r2, [fp, #-20]	; 0xffffffec
   13e3c:	bl	11810 <rb_dictionary_add@plt>
   13e40:	str	r0, [sp, #40]	; 0x28
   13e44:	b	13e64 <sprintf@plt+0x2540>
   13e48:	ldr	r0, [pc, #632]	; 140c8 <sprintf@plt+0x27a4>
   13e4c:	add	r1, pc, r0
   13e50:	ldr	r2, [fp, #-4]
   13e54:	movw	r0, #67	; 0x43
   13e58:	bl	12bfc <sprintf@plt+0x12d8>
   13e5c:	movw	r0, #3
   13e60:	bl	1190c <exit@plt>
   13e64:	ldr	r0, [fp, #12]
   13e68:	mov	r1, #0
   13e6c:	mov	r2, #16
   13e70:	bl	116b4 <strtoull@plt>
   13e74:	ldr	r2, [fp, #-20]	; 0xffffffec
   13e78:	str	r0, [r2, #4]
   13e7c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13e80:	add	r0, r0, #8
   13e84:	ldr	r2, [fp, #-8]
   13e88:	str	r1, [sp, #36]	; 0x24
   13e8c:	mov	r1, r2
   13e90:	movw	r2, #54	; 0x36
   13e94:	bl	116a8 <rb_strlcpy@plt>
   13e98:	ldr	r1, [fp, #-12]
   13e9c:	str	r0, [sp, #32]
   13ea0:	mov	r0, r1
   13ea4:	bl	11798 <atoi@plt>
   13ea8:	ldr	r1, [fp, #-20]	; 0xffffffec
   13eac:	strh	r0, [r1, #62]	; 0x3e
   13eb0:	ldr	r0, [fp, #-8]
   13eb4:	ldr	r1, [fp, #-20]	; 0xffffffec
   13eb8:	add	r1, r1, #64	; 0x40
   13ebc:	bl	11720 <rb_inet_pton_sock@plt>
   13ec0:	str	r0, [sp, #28]
   13ec4:	ldr	r0, [fp, #-20]	; 0xffffffec
   13ec8:	ldrh	r0, [r0, #64]	; 0x40
   13ecc:	cmp	r0, #2
   13ed0:	bne	13eec <sprintf@plt+0x25c8>
   13ed4:	ldr	r0, [fp, #-20]	; 0xffffffec
   13ed8:	ldrh	r0, [r0, #62]	; 0x3e
   13edc:	bl	11654 <htons@plt>
   13ee0:	ldr	lr, [fp, #-20]	; 0xffffffec
   13ee4:	strh	r0, [lr, #66]	; 0x42
   13ee8:	b	13f00 <sprintf@plt+0x25dc>
   13eec:	ldr	r0, [fp, #-20]	; 0xffffffec
   13ef0:	ldrh	r0, [r0, #62]	; 0x3e
   13ef4:	bl	11654 <htons@plt>
   13ef8:	ldr	lr, [fp, #-20]	; 0xffffffec
   13efc:	strh	r0, [lr, #66]	; 0x42
   13f00:	b	13f04 <sprintf@plt+0x25e0>
   13f04:	ldr	r0, [fp, #-20]	; 0xffffffec
   13f08:	add	r0, r0, #192	; 0xc0
   13f0c:	ldr	r1, [fp, #-16]
   13f10:	movw	r2, #54	; 0x36
   13f14:	bl	116a8 <rb_strlcpy@plt>
   13f18:	ldr	r1, [fp, #8]
   13f1c:	str	r0, [sp, #24]
   13f20:	mov	r0, r1
   13f24:	bl	11798 <atoi@plt>
   13f28:	ldr	r1, [fp, #-20]	; 0xffffffec
   13f2c:	strh	r0, [r1, #246]	; 0xf6
   13f30:	ldr	r0, [fp, #-16]
   13f34:	ldr	r1, [fp, #-20]	; 0xffffffec
   13f38:	add	r1, r1, #248	; 0xf8
   13f3c:	bl	11720 <rb_inet_pton_sock@plt>
   13f40:	str	r0, [sp, #20]
   13f44:	ldr	r0, [fp, #-20]	; 0xffffffec
   13f48:	ldrh	r0, [r0, #248]	; 0xf8
   13f4c:	cmp	r0, #2
   13f50:	bne	13f6c <sprintf@plt+0x2648>
   13f54:	ldr	r0, [fp, #-20]	; 0xffffffec
   13f58:	ldrh	r0, [r0, #246]	; 0xf6
   13f5c:	bl	11654 <htons@plt>
   13f60:	ldr	lr, [fp, #-20]	; 0xffffffec
   13f64:	strh	r0, [lr, #250]	; 0xfa
   13f68:	b	13f80 <sprintf@plt+0x265c>
   13f6c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13f70:	ldrh	r0, [r0, #246]	; 0xf6
   13f74:	bl	11654 <htons@plt>
   13f78:	ldr	lr, [fp, #-20]	; 0xffffffec
   13f7c:	strh	r0, [lr, #250]	; 0xfa
   13f80:	b	13f84 <sprintf@plt+0x2660>
   13f84:	ldr	r0, [fp, #-20]	; 0xffffffec
   13f88:	add	r0, r0, #376	; 0x178
   13f8c:	ldr	r1, [pc, #320]	; 140d4 <sprintf@plt+0x27b0>
   13f90:	add	r1, pc, r1
   13f94:	mov	r2, #64	; 0x40
   13f98:	str	r1, [sp, #16]
   13f9c:	bl	116a8 <rb_strlcpy@plt>
   13fa0:	ldr	r1, [fp, #-20]	; 0xffffffec
   13fa4:	add	r1, r1, #440	; 0x1b8
   13fa8:	mov	r2, #11
   13fac:	str	r0, [sp, #12]
   13fb0:	mov	r0, r1
   13fb4:	ldr	r1, [sp, #16]
   13fb8:	bl	116a8 <rb_strlcpy@plt>
   13fbc:	ldr	r1, [pc, #276]	; 140d8 <sprintf@plt+0x27b4>
   13fc0:	ldr	r1, [pc, r1]
   13fc4:	lsl	r1, r1, #4
   13fc8:	str	r0, [sp, #8]
   13fcc:	mov	r0, r1
   13fd0:	bl	14228 <sprintf@plt+0x2904>
   13fd4:	ldr	r1, [pc, #244]	; 140d0 <sprintf@plt+0x27ac>
   13fd8:	ldr	r1, [pc, r1]
   13fdc:	ldr	r2, [fp, #-20]	; 0xffffffec
   13fe0:	str	r0, [r2, #464]	; 0x1d0
   13fe4:	ldr	r0, [fp, #-20]	; 0xffffffec
   13fe8:	movw	r2, #1
   13fec:	strb	r2, [r0, #451]	; 0x1c3
   13ff0:	ldr	r0, [r1]
   13ff4:	str	r0, [fp, #-36]	; 0xffffffdc
   13ff8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13ffc:	movw	r1, #0
   14000:	cmp	r0, r1
   14004:	beq	1408c <sprintf@plt+0x2768>
   14008:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1400c:	ldr	r0, [r0]
   14010:	str	r0, [fp, #-40]	; 0xffffffd8
   14014:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14018:	ldr	r1, [fp, #-20]	; 0xffffffec
   1401c:	ldr	r1, [r1, #464]	; 0x1d0
   14020:	ldr	r2, [r0, #12]
   14024:	add	r1, r1, r2, lsl #4
   14028:	str	r0, [r1]
   1402c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14030:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14034:	ldr	r1, [r1, #12]
   14038:	bl	14280 <sprintf@plt+0x295c>
   1403c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14040:	ldr	r0, [r0, #32]
   14044:	ldr	r1, [fp, #-20]	; 0xffffffec
   14048:	str	r0, [sp, #4]
   1404c:	mov	r0, r1
   14050:	ldr	r1, [sp, #4]
   14054:	blx	r1
   14058:	tst	r0, #1
   1405c:	bne	14064 <sprintf@plt+0x2740>
   14060:	b	140b4 <sprintf@plt+0x2790>
   14064:	ldr	r0, [fp, #-20]	; 0xffffffec
   14068:	ldrb	r0, [r0, #452]	; 0x1c4
   1406c:	tst	r0, #1
   14070:	beq	14078 <sprintf@plt+0x2754>
   14074:	b	1408c <sprintf@plt+0x2768>
   14078:	b	1407c <sprintf@plt+0x2758>
   1407c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14080:	ldr	r0, [r0, #8]
   14084:	str	r0, [fp, #-36]	; 0xffffffdc
   14088:	b	13ff8 <sprintf@plt+0x26d4>
   1408c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14090:	movw	r1, #0
   14094:	strb	r1, [r0, #451]	; 0x1c3
   14098:	ldr	r0, [fp, #-20]	; 0xffffffec
   1409c:	ldr	r0, [r0, #456]	; 0x1c8
   140a0:	cmp	r0, #0
   140a4:	bne	140b0 <sprintf@plt+0x278c>
   140a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   140ac:	bl	13c24 <sprintf@plt+0x2300>
   140b0:	b	140b4 <sprintf@plt+0x2790>
   140b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   140b8:	bl	1353c <sprintf@plt+0x1c18>
   140bc:	mov	sp, fp
   140c0:	pop	{fp, pc}
   140c4:	andeq	ip, r1, r8, lsl #7
   140c8:	andeq	sl, r0, r3, lsr #30
   140cc:	andeq	ip, r1, r8, lsr r3
   140d0:	ldrdeq	ip, [r1], -r0
   140d4:	andeq	sl, r0, ip, asr fp
   140d8:	andeq	r1, r2, r0, asr #32
   140dc:	push	{fp, lr}
   140e0:	mov	fp, sp
   140e4:	sub	sp, sp, #24
   140e8:	str	r0, [fp, #-4]
   140ec:	str	r1, [fp, #-8]
   140f0:	ldr	r0, [fp, #-4]
   140f4:	cmp	r0, #2
   140f8:	bge	14118 <sprintf@plt+0x27f4>
   140fc:	ldr	r0, [pc, #196]	; 141c8 <sprintf@plt+0x28a4>
   14100:	add	r1, pc, r0
   14104:	ldr	r2, [fp, #-4]
   14108:	movw	r0, #67	; 0x43
   1410c:	bl	12bfc <sprintf@plt+0x12d8>
   14110:	movw	r0, #3
   14114:	bl	1190c <exit@plt>
   14118:	ldr	r0, [fp, #-8]
   1411c:	ldr	r0, [r0, #4]
   14120:	mov	r1, #0
   14124:	mov	r2, #16
   14128:	bl	116b4 <strtoull@plt>
   1412c:	str	r1, [sp, #4]
   14130:	str	r0, [sp]
   14134:	ldr	r0, [sp]
   14138:	ldr	r1, [sp, #4]
   1413c:	orr	r0, r0, r1
   14140:	cmp	r0, #0
   14144:	beq	1415c <sprintf@plt+0x2838>
   14148:	b	1414c <sprintf@plt+0x2828>
   1414c:	ldr	r0, [sp, #4]
   14150:	cmp	r0, #0
   14154:	beq	1417c <sprintf@plt+0x2858>
   14158:	b	1415c <sprintf@plt+0x2838>
   1415c:	ldr	r0, [pc, #96]	; 141c4 <sprintf@plt+0x28a0>
   14160:	add	r1, pc, r0
   14164:	ldr	r0, [fp, #-8]
   14168:	ldr	r2, [r0, #4]
   1416c:	movw	r0, #67	; 0x43
   14170:	bl	12bfc <sprintf@plt+0x12d8>
   14174:	movw	r0, #3
   14178:	bl	1190c <exit@plt>
   1417c:	ldr	r0, [pc, #72]	; 141cc <sprintf@plt+0x28a8>
   14180:	ldr	r0, [pc, r0]
   14184:	ldr	r0, [r0]
   14188:	ldr	r1, [sp]
   1418c:	bl	117e0 <rb_dictionary_retrieve@plt>
   14190:	str	r0, [sp, #12]
   14194:	movw	r1, #0
   14198:	cmp	r0, r1
   1419c:	bne	141a4 <sprintf@plt+0x2880>
   141a0:	b	141bc <sprintf@plt+0x2898>
   141a4:	ldr	r0, [sp, #12]
   141a8:	bl	133b8 <sprintf@plt+0x1a94>
   141ac:	ldr	r0, [sp, #12]
   141b0:	bl	139ec <sprintf@plt+0x20c8>
   141b4:	ldr	r0, [sp, #12]
   141b8:	bl	1353c <sprintf@plt+0x1c18>
   141bc:	mov	sp, fp
   141c0:	pop	{fp, pc}
   141c4:	andeq	sl, r0, r4, lsr #22
   141c8:	andeq	sl, r0, sl, lsr fp
   141cc:	andeq	fp, r1, r0, ror #31
   141d0:	sub	sp, sp, #8
   141d4:	str	r0, [sp, #4]
   141d8:	str	r1, [sp]
   141dc:	ldr	r0, [sp, #4]
   141e0:	ldr	r0, [r0, #464]	; 0x1d0
   141e4:	ldr	r1, [sp]
   141e8:	add	r0, r0, r1, lsl #4
   141ec:	ldr	r0, [r0, #12]
   141f0:	add	sp, sp, #8
   141f4:	bx	lr
   141f8:	sub	sp, sp, #12
   141fc:	str	r0, [sp, #8]
   14200:	str	r1, [sp, #4]
   14204:	str	r2, [sp]
   14208:	ldr	r0, [sp]
   1420c:	ldr	r1, [sp, #8]
   14210:	ldr	r1, [r1, #464]	; 0x1d0
   14214:	ldr	r2, [sp, #4]
   14218:	add	r1, r1, r2, lsl #4
   1421c:	str	r0, [r1, #12]
   14220:	add	sp, sp, #12
   14224:	bx	lr
   14228:	push	{fp, lr}
   1422c:	mov	fp, sp
   14230:	sub	sp, sp, #8
   14234:	str	r0, [sp, #4]
   14238:	ldr	r1, [sp, #4]
   1423c:	movw	r0, #1
   14240:	bl	11630 <calloc@plt>
   14244:	str	r0, [sp]
   14248:	ldr	r0, [sp]
   1424c:	movw	r1, #0
   14250:	cmp	r0, r1
   14254:	movw	r0, #0
   14258:	moveq	r0, #1
   1425c:	mvn	r1, #0
   14260:	eor	r0, r0, r1
   14264:	eor	r0, r0, r1
   14268:	tst	r0, #1
   1426c:	beq	14274 <sprintf@plt+0x2950>
   14270:	bl	117ec <rb_outofmemory@plt>
   14274:	ldr	r0, [sp]
   14278:	mov	sp, fp
   1427c:	pop	{fp, pc}
   14280:	push	{fp, lr}
   14284:	mov	fp, sp
   14288:	sub	sp, sp, #8
   1428c:	str	r0, [sp, #4]
   14290:	str	r1, [sp]
   14294:	ldr	r0, [sp, #4]
   14298:	ldr	r1, [r0, #456]	; 0x1c8
   1429c:	add	r1, r1, #1
   142a0:	str	r1, [r0, #456]	; 0x1c8
   142a4:	ldr	r0, [sp, #4]
   142a8:	ldr	r1, [sp]
   142ac:	movw	r2, #1
   142b0:	bl	141f8 <sprintf@plt+0x28d4>
   142b4:	mov	sp, fp
   142b8:	pop	{fp, pc}
   142bc:	sub	sp, sp, #8
   142c0:	str	r0, [sp, #4]
   142c4:	str	r1, [sp]
   142c8:	ldr	r0, [sp, #4]
   142cc:	ldr	r0, [r0, #464]	; 0x1d0
   142d0:	ldr	r1, [sp]
   142d4:	add	r0, r0, r1, lsl #4
   142d8:	ldr	r0, [r0, #4]
   142dc:	add	sp, sp, #8
   142e0:	bx	lr
   142e4:	push	{fp, lr}
   142e8:	mov	fp, sp
   142ec:	bl	142f4 <sprintf@plt+0x29d0>
   142f0:	pop	{fp, pc}
   142f4:	push	{fp, lr}
   142f8:	mov	fp, sp
   142fc:	sub	sp, sp, #16
   14300:	bl	165c4 <sprintf@plt+0x4ca0>
   14304:	movw	lr, #0
   14308:	str	lr, [fp, #-4]
   1430c:	str	r0, [sp, #8]
   14310:	ldr	r0, [pc, #232]	; 14400 <sprintf@plt+0x2adc>
   14314:	ldr	r0, [pc, r0]
   14318:	ldr	r1, [fp, #-4]
   1431c:	ldr	r0, [r0]
   14320:	cmp	r1, r0
   14324:	bge	1435c <sprintf@plt+0x2a38>
   14328:	ldr	r0, [pc, #248]	; 14428 <sprintf@plt+0x2b04>
   1432c:	add	r0, pc, r0
   14330:	ldr	r1, [fp, #-4]
   14334:	ldr	r2, [pc, #240]	; 1442c <sprintf@plt+0x2b08>
   14338:	add	r2, pc, r2
   1433c:	add	r1, r2, r1, lsl #2
   14340:	movw	r2, #0
   14344:	str	r2, [r1]
   14348:	str	r0, [sp, #4]
   1434c:	ldr	r0, [fp, #-4]
   14350:	add	r0, r0, #1
   14354:	str	r0, [fp, #-4]
   14358:	b	14310 <sprintf@plt+0x29ec>
   1435c:	ldr	r0, [pc, #160]	; 14404 <sprintf@plt+0x2ae0>
   14360:	add	r0, pc, r0
   14364:	ldr	r0, [r0]
   14368:	movw	r1, #0
   1436c:	cmp	r0, r1
   14370:	bne	143f8 <sprintf@plt+0x2ad4>
   14374:	ldr	r0, [pc, #144]	; 1440c <sprintf@plt+0x2ae8>
   14378:	add	r3, pc, r0
   1437c:	ldr	r0, [pc, #140]	; 14410 <sprintf@plt+0x2aec>
   14380:	ldr	r0, [pc, r0]
   14384:	ldrh	r0, [r0]
   14388:	movw	r1, #2
   1438c:	movw	r2, #0
   14390:	bl	115dc <rb_socket@plt>
   14394:	ldr	r1, [pc, #108]	; 14408 <sprintf@plt+0x2ae4>
   14398:	add	r1, pc, r1
   1439c:	str	r0, [r1]
   143a0:	movw	r1, #0
   143a4:	cmp	r0, r1
   143a8:	bne	143b0 <sprintf@plt+0x2a8c>
   143ac:	b	143f8 <sprintf@plt+0x2ad4>
   143b0:	ldr	r0, [pc, #104]	; 14420 <sprintf@plt+0x2afc>
   143b4:	add	r2, pc, r0
   143b8:	ldr	r0, [pc, #100]	; 14424 <sprintf@plt+0x2b00>
   143bc:	add	r0, pc, r0
   143c0:	ldr	r0, [r0]
   143c4:	movw	r1, #1
   143c8:	movw	r3, #0
   143cc:	bl	115ac <rb_setselect@plt>
   143d0:	ldr	r0, [pc, #64]	; 14418 <sprintf@plt+0x2af4>
   143d4:	add	r0, pc, r0
   143d8:	ldr	r1, [pc, #60]	; 1441c <sprintf@plt+0x2af8>
   143dc:	add	r1, pc, r1
   143e0:	movw	r2, #0
   143e4:	movw	r3, #1
   143e8:	bl	11894 <rb_event_add@plt>
   143ec:	ldr	r1, [pc, #32]	; 14414 <sprintf@plt+0x2af0>
   143f0:	add	r1, pc, r1
   143f4:	str	r0, [r1]
   143f8:	mov	sp, fp
   143fc:	pop	{fp, pc}
   14400:	andeq	fp, r1, r0, ror #28
   14404:	andeq	r0, r2, r4, lsr #25
   14408:	andeq	r0, r2, ip, ror #24
   1440c:	andeq	sl, r0, r2, lsl #22
   14410:	andeq	fp, r1, r0, lsl #28
   14414:	andeq	r0, r2, r8, lsl ip
   14418:			; <UNDEFINED> instruction: 0x0000aaba
   1441c:	andeq	r0, r0, r4, lsl r8
   14420:	andeq	r0, r0, ip, ror #15
   14424:	andeq	r0, r2, r8, asr #24
   14428:	andeq	r0, r2, r0, ror #25
   1442c:	ldrdeq	r0, [r2], -r4
   14430:	push	{fp, lr}
   14434:	mov	fp, sp
   14438:	ldr	r0, [pc, #56]	; 14478 <sprintf@plt+0x2b54>
   1443c:	add	r0, pc, r0
   14440:	ldr	r0, [r0]
   14444:	bl	11768 <rb_close@plt>
   14448:	ldr	r0, [pc, #32]	; 14470 <sprintf@plt+0x2b4c>
   1444c:	add	r0, pc, r0
   14450:	ldr	lr, [pc, #28]	; 14474 <sprintf@plt+0x2b50>
   14454:	add	lr, pc, lr
   14458:	movw	r1, #0
   1445c:	str	r1, [lr]
   14460:	ldr	r0, [r0]
   14464:	bl	115a0 <rb_event_delete@plt>
   14468:	bl	142f4 <sprintf@plt+0x29d0>
   1446c:	pop	{fp, pc}
   14470:			; <UNDEFINED> instruction: 0x00020bbc
   14474:			; <UNDEFINED> instruction: 0x00020bb0
   14478:	andeq	r0, r2, r8, asr #23
   1447c:	push	{r4, r5, fp, lr}
   14480:	add	fp, sp, #8
   14484:	sub	sp, sp, #272	; 0x110
   14488:	str	r0, [fp, #-12]
   1448c:	str	r1, [fp, #-16]
   14490:	str	r2, [fp, #-20]	; 0xffffffec
   14494:	ldr	r0, [fp, #-12]
   14498:	movw	r1, #0
   1449c:	cmp	r0, r1
   144a0:	beq	144a8 <sprintf@plt+0x2b84>
   144a4:	b	144c8 <sprintf@plt+0x2ba4>
   144a8:	ldr	r0, [pc, #84]	; 14504 <sprintf@plt+0x2be0>
   144ac:	add	r0, pc, r0
   144b0:	ldr	r1, [pc, #80]	; 14508 <sprintf@plt+0x2be4>
   144b4:	add	r1, pc, r1
   144b8:	ldr	r2, [pc, #76]	; 1450c <sprintf@plt+0x2be8>
   144bc:	add	r3, pc, r2
   144c0:	movw	r2, #412	; 0x19c
   144c4:	bl	1169c <__assert_fail@plt>
   144c8:	add	r0, sp, #4
   144cc:	ldr	r1, [fp, #-12]
   144d0:	movw	r2, #256	; 0x100
   144d4:	bl	116a8 <rb_strlcpy@plt>
   144d8:	add	r1, sp, #4
   144dc:	str	r0, [sp]
   144e0:	mov	r0, r1
   144e4:	movw	r1, #255	; 0xff
   144e8:	bl	14510 <sprintf@plt+0x2bec>
   144ec:	add	r0, sp, #4
   144f0:	ldr	r1, [fp, #-16]
   144f4:	ldr	r2, [fp, #-20]	; 0xffffffec
   144f8:	bl	145d4 <sprintf@plt+0x2cb0>
   144fc:	sub	sp, fp, #8
   14500:	pop	{r4, r5, fp, pc}
   14504:	strdeq	sl, [r0], -r7
   14508:	strdeq	sl, [r0], -r9
   1450c:	strdeq	sl, [r0], -r7
   14510:	push	{fp, lr}
   14514:	mov	fp, sp
   14518:	sub	sp, sp, #16
   1451c:	str	r0, [fp, #-4]
   14520:	str	r1, [sp, #8]
   14524:	ldr	r0, [fp, #-4]
   14528:	movw	r1, #46	; 0x2e
   1452c:	bl	1160c <strchr@plt>
   14530:	movw	r1, #0
   14534:	cmp	r0, r1
   14538:	bne	145c0 <sprintf@plt+0x2c9c>
   1453c:	ldr	r0, [pc, #132]	; 145c8 <sprintf@plt+0x2ca4>
   14540:	ldr	r0, [pc, r0]
   14544:	ldrsb	r0, [r0]
   14548:	cmp	r0, #0
   1454c:	beq	145bc <sprintf@plt+0x2c98>
   14550:	ldr	r0, [fp, #-4]
   14554:	bl	1172c <strlen@plt>
   14558:	str	r0, [sp, #4]
   1455c:	ldr	r0, [pc, #104]	; 145cc <sprintf@plt+0x2ca8>
   14560:	ldr	r0, [pc, r0]
   14564:	bl	1172c <strlen@plt>
   14568:	ldr	lr, [sp, #4]
   1456c:	add	r0, r0, lr
   14570:	add	r0, r0, #2
   14574:	ldr	lr, [sp, #8]
   14578:	cmp	r0, lr
   1457c:	bcs	145b8 <sprintf@plt+0x2c94>
   14580:	ldr	r0, [fp, #-4]
   14584:	ldr	r1, [sp, #4]
   14588:	add	r2, r1, #1
   1458c:	str	r2, [sp, #4]
   14590:	add	r0, r0, r1
   14594:	movw	r1, #46	; 0x2e
   14598:	strb	r1, [r0]
   1459c:	ldr	r0, [fp, #-4]
   145a0:	ldr	r1, [sp, #4]
   145a4:	add	r0, r0, r1
   145a8:	ldr	r1, [pc, #32]	; 145d0 <sprintf@plt+0x2cac>
   145ac:	ldr	r1, [pc, r1]
   145b0:	bl	1178c <strcpy@plt>
   145b4:	str	r0, [sp]
   145b8:	b	145bc <sprintf@plt+0x2c98>
   145bc:	b	145c0 <sprintf@plt+0x2c9c>
   145c0:	mov	sp, fp
   145c4:	pop	{fp, pc}
   145c8:	andeq	fp, r1, r8, lsr ip
   145cc:	andeq	fp, r1, r8, lsl ip
   145d0:	andeq	fp, r1, ip, asr #23
   145d4:	push	{fp, lr}
   145d8:	mov	fp, sp
   145dc:	sub	sp, sp, #16
   145e0:	str	r0, [fp, #-4]
   145e4:	str	r1, [sp, #8]
   145e8:	str	r2, [sp, #4]
   145ec:	ldr	r0, [fp, #-4]
   145f0:	movw	r1, #0
   145f4:	cmp	r0, r1
   145f8:	beq	14600 <sprintf@plt+0x2cdc>
   145fc:	b	14620 <sprintf@plt+0x2cfc>
   14600:	ldr	r0, [pc, #52]	; 1463c <sprintf@plt+0x2d18>
   14604:	add	r0, pc, r0
   14608:	ldr	r1, [pc, #48]	; 14640 <sprintf@plt+0x2d1c>
   1460c:	add	r1, pc, r1
   14610:	ldr	r2, [pc, #44]	; 14644 <sprintf@plt+0x2d20>
   14614:	add	r3, pc, r2
   14618:	movw	r2, #425	; 0x1a9
   1461c:	bl	1169c <__assert_fail@plt>
   14620:	ldr	r0, [sp, #8]
   14624:	ldr	r1, [fp, #-4]
   14628:	ldr	r3, [sp, #4]
   1462c:	movw	r2, #0
   14630:	bl	15b08 <sprintf@plt+0x41e4>
   14634:	mov	sp, fp
   14638:	pop	{fp, pc}
   1463c:	muleq	r0, pc, r7	; <UNPREDICTABLE>
   14640:	andeq	sl, r0, r1, lsr #15
   14644:	andeq	sl, r0, r2, lsl r9
   14648:	push	{fp, lr}
   1464c:	mov	fp, sp
   14650:	sub	sp, sp, #8
   14654:	str	r0, [sp, #4]
   14658:	str	r1, [sp]
   1465c:	ldr	r0, [sp]
   14660:	ldr	r1, [sp, #4]
   14664:	movw	r2, #0
   14668:	bl	14674 <sprintf@plt+0x2d50>
   1466c:	mov	sp, fp
   14670:	pop	{fp, pc}
   14674:	push	{fp, lr}
   14678:	mov	fp, sp
   1467c:	sub	sp, sp, #16
   14680:	str	r0, [fp, #-4]
   14684:	str	r1, [sp, #8]
   14688:	str	r2, [sp, #4]
   1468c:	ldr	r0, [sp, #4]
   14690:	movw	r1, #0
   14694:	cmp	r0, r1
   14698:	bne	146d0 <sprintf@plt+0x2dac>
   1469c:	ldr	r0, [fp, #-4]
   146a0:	bl	15b88 <sprintf@plt+0x4264>
   146a4:	str	r0, [sp, #4]
   146a8:	ldr	r0, [sp, #4]
   146ac:	add	r0, r0, #292	; 0x124
   146b0:	ldr	lr, [sp, #8]
   146b4:	mov	r1, lr
   146b8:	movw	r2, #128	; 0x80
   146bc:	bl	11750 <memcpy@plt>
   146c0:	movw	r0, #256	; 0x100
   146c4:	bl	15d68 <sprintf@plt+0x4444>
   146c8:	ldr	r1, [sp, #4]
   146cc:	str	r0, [r1, #420]	; 0x1a4
   146d0:	ldr	r0, [sp, #4]
   146d4:	add	r0, r0, #21
   146d8:	ldr	r2, [sp, #8]
   146dc:	movw	r1, #256	; 0x100
   146e0:	movw	r3, #0
   146e4:	bl	14704 <sprintf@plt+0x2de0>
   146e8:	ldr	r0, [sp, #4]
   146ec:	movw	r1, #12
   146f0:	strb	r1, [r0, #20]
   146f4:	ldr	r0, [sp, #4]
   146f8:	bl	15c78 <sprintf@plt+0x4354>
   146fc:	mov	sp, fp
   14700:	pop	{fp, pc}
   14704:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14708:	add	fp, sp, #28
   1470c:	sub	sp, sp, #348	; 0x15c
   14710:	str	r0, [fp, #-32]	; 0xffffffe0
   14714:	str	r1, [fp, #-36]	; 0xffffffdc
   14718:	str	r2, [fp, #-40]	; 0xffffffd8
   1471c:	str	r3, [fp, #-44]	; 0xffffffd4
   14720:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14724:	ldrh	r0, [r0]
   14728:	cmp	r0, #2
   1472c:	bne	147f8 <sprintf@plt+0x2ed4>
   14730:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14734:	str	r0, [fp, #-52]	; 0xffffffcc
   14738:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1473c:	add	r0, r0, #4
   14740:	str	r0, [fp, #-48]	; 0xffffffd0
   14744:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14748:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1474c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   14750:	ldrb	r3, [r2, #3]
   14754:	ldr	r2, [fp, #-48]	; 0xffffffd0
   14758:	ldrb	r2, [r2, #2]
   1475c:	ldr	ip, [fp, #-48]	; 0xffffffd0
   14760:	ldrb	ip, [ip, #1]
   14764:	ldr	lr, [fp, #-48]	; 0xffffffd0
   14768:	ldrb	lr, [lr]
   1476c:	ldr	r4, [fp, #-44]	; 0xffffffd4
   14770:	movw	r5, #0
   14774:	cmp	r4, r5
   14778:	str	r0, [fp, #-60]	; 0xffffffc4
   1477c:	str	r1, [fp, #-64]	; 0xffffffc0
   14780:	str	r3, [fp, #-68]	; 0xffffffbc
   14784:	str	r2, [fp, #-72]	; 0xffffffb8
   14788:	str	ip, [fp, #-76]	; 0xffffffb4
   1478c:	str	lr, [fp, #-80]	; 0xffffffb0
   14790:	bne	147a4 <sprintf@plt+0x2e80>
   14794:	ldr	r0, [pc, #1028]	; 14ba0 <sprintf@plt+0x327c>
   14798:	add	r0, pc, r0
   1479c:	str	r0, [fp, #-84]	; 0xffffffac
   147a0:	b	147ac <sprintf@plt+0x2e88>
   147a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   147a8:	str	r0, [fp, #-84]	; 0xffffffac
   147ac:	ldr	r0, [fp, #-84]	; 0xffffffac
   147b0:	ldr	r1, [pc, #1004]	; 14ba4 <sprintf@plt+0x3280>
   147b4:	add	r2, pc, r1
   147b8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   147bc:	str	r0, [fp, #-88]	; 0xffffffa8
   147c0:	mov	r0, r1
   147c4:	ldr	r1, [fp, #-64]	; 0xffffffc0
   147c8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   147cc:	ldr	ip, [fp, #-72]	; 0xffffffb8
   147d0:	str	ip, [sp]
   147d4:	ldr	lr, [fp, #-76]	; 0xffffffb4
   147d8:	str	lr, [sp, #4]
   147dc:	ldr	r4, [fp, #-80]	; 0xffffffb0
   147e0:	str	r4, [sp, #8]
   147e4:	ldr	r5, [fp, #-88]	; 0xffffffa8
   147e8:	str	r5, [sp, #12]
   147ec:	bl	118b8 <snprintf@plt>
   147f0:	str	r0, [fp, #-92]	; 0xffffffa4
   147f4:	b	14b90 <sprintf@plt+0x326c>
   147f8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   147fc:	ldrh	r0, [r0]
   14800:	cmp	r0, #10
   14804:	bne	14b8c <sprintf@plt+0x3268>
   14808:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1480c:	str	r0, [fp, #-56]	; 0xffffffc8
   14810:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14814:	add	r0, r0, #8
   14818:	str	r0, [fp, #-48]	; 0xffffffd0
   1481c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14820:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14824:	ldr	r2, [fp, #-48]	; 0xffffffd0
   14828:	ldrb	r2, [r2, #15]
   1482c:	and	r3, r2, #15
   14830:	ldr	r2, [fp, #-48]	; 0xffffffd0
   14834:	ldrb	r2, [r2, #15]
   14838:	asr	r2, r2, #4
   1483c:	ldr	ip, [fp, #-48]	; 0xffffffd0
   14840:	ldrb	ip, [ip, #14]
   14844:	and	ip, ip, #15
   14848:	ldr	lr, [fp, #-48]	; 0xffffffd0
   1484c:	ldrb	lr, [lr, #14]
   14850:	asr	lr, lr, #4
   14854:	ldr	r4, [fp, #-48]	; 0xffffffd0
   14858:	ldrb	r4, [r4, #13]
   1485c:	and	r4, r4, #15
   14860:	ldr	r5, [fp, #-48]	; 0xffffffd0
   14864:	ldrb	r5, [r5, #13]
   14868:	asr	r5, r5, #4
   1486c:	ldr	r6, [fp, #-48]	; 0xffffffd0
   14870:	ldrb	r6, [r6, #12]
   14874:	and	r6, r6, #15
   14878:	ldr	r7, [fp, #-48]	; 0xffffffd0
   1487c:	ldrb	r7, [r7, #12]
   14880:	asr	r7, r7, #4
   14884:	ldr	r8, [fp, #-48]	; 0xffffffd0
   14888:	ldrb	r8, [r8, #11]
   1488c:	and	r8, r8, #15
   14890:	ldr	r9, [fp, #-48]	; 0xffffffd0
   14894:	ldrb	r9, [r9, #11]
   14898:	asr	r9, r9, #4
   1489c:	ldr	sl, [fp, #-48]	; 0xffffffd0
   148a0:	ldrb	sl, [sl, #10]
   148a4:	and	sl, sl, #15
   148a8:	str	r0, [fp, #-96]	; 0xffffffa0
   148ac:	ldr	r0, [fp, #-48]	; 0xffffffd0
   148b0:	ldrb	r0, [r0, #10]
   148b4:	asr	r0, r0, #4
   148b8:	str	r0, [fp, #-100]	; 0xffffff9c
   148bc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   148c0:	ldrb	r0, [r0, #9]
   148c4:	and	r0, r0, #15
   148c8:	str	r0, [fp, #-104]	; 0xffffff98
   148cc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   148d0:	ldrb	r0, [r0, #9]
   148d4:	asr	r0, r0, #4
   148d8:	str	r0, [fp, #-108]	; 0xffffff94
   148dc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   148e0:	ldrb	r0, [r0, #8]
   148e4:	and	r0, r0, #15
   148e8:	str	r0, [fp, #-112]	; 0xffffff90
   148ec:	ldr	r0, [fp, #-48]	; 0xffffffd0
   148f0:	ldrb	r0, [r0, #8]
   148f4:	asr	r0, r0, #4
   148f8:	str	r0, [fp, #-116]	; 0xffffff8c
   148fc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14900:	ldrb	r0, [r0, #7]
   14904:	and	r0, r0, #15
   14908:	str	r0, [fp, #-120]	; 0xffffff88
   1490c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14910:	ldrb	r0, [r0, #7]
   14914:	asr	r0, r0, #4
   14918:	str	r0, [fp, #-124]	; 0xffffff84
   1491c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14920:	ldrb	r0, [r0, #6]
   14924:	and	r0, r0, #15
   14928:	str	r0, [fp, #-128]	; 0xffffff80
   1492c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14930:	ldrb	r0, [r0, #6]
   14934:	asr	r0, r0, #4
   14938:	str	r0, [fp, #-132]	; 0xffffff7c
   1493c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14940:	ldrb	r0, [r0, #5]
   14944:	and	r0, r0, #15
   14948:	str	r0, [fp, #-136]	; 0xffffff78
   1494c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14950:	ldrb	r0, [r0, #5]
   14954:	asr	r0, r0, #4
   14958:	str	r0, [fp, #-140]	; 0xffffff74
   1495c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14960:	ldrb	r0, [r0, #4]
   14964:	and	r0, r0, #15
   14968:	str	r0, [fp, #-144]	; 0xffffff70
   1496c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14970:	ldrb	r0, [r0, #4]
   14974:	asr	r0, r0, #4
   14978:	str	r0, [fp, #-148]	; 0xffffff6c
   1497c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14980:	ldrb	r0, [r0, #3]
   14984:	and	r0, r0, #15
   14988:	str	r0, [fp, #-152]	; 0xffffff68
   1498c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14990:	ldrb	r0, [r0, #3]
   14994:	asr	r0, r0, #4
   14998:	str	r0, [fp, #-156]	; 0xffffff64
   1499c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   149a0:	ldrb	r0, [r0, #2]
   149a4:	and	r0, r0, #15
   149a8:	str	r0, [fp, #-160]	; 0xffffff60
   149ac:	ldr	r0, [fp, #-48]	; 0xffffffd0
   149b0:	ldrb	r0, [r0, #2]
   149b4:	asr	r0, r0, #4
   149b8:	str	r0, [fp, #-164]	; 0xffffff5c
   149bc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   149c0:	ldrb	r0, [r0, #1]
   149c4:	and	r0, r0, #15
   149c8:	str	r0, [fp, #-168]	; 0xffffff58
   149cc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   149d0:	ldrb	r0, [r0, #1]
   149d4:	asr	r0, r0, #4
   149d8:	str	r0, [fp, #-172]	; 0xffffff54
   149dc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   149e0:	ldrb	r0, [r0]
   149e4:	and	r0, r0, #15
   149e8:	str	r0, [fp, #-176]	; 0xffffff50
   149ec:	ldr	r0, [fp, #-48]	; 0xffffffd0
   149f0:	ldrb	r0, [r0]
   149f4:	asr	r0, r0, #4
   149f8:	str	r0, [fp, #-180]	; 0xffffff4c
   149fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14a00:	str	r0, [fp, #-184]	; 0xffffff48
   14a04:	movw	r0, #0
   14a08:	str	r0, [sp, #188]	; 0xbc
   14a0c:	ldr	r0, [fp, #-184]	; 0xffffff48
   14a10:	str	r1, [sp, #184]	; 0xb8
   14a14:	ldr	r1, [sp, #188]	; 0xbc
   14a18:	cmp	r0, r1
   14a1c:	str	sl, [sp, #180]	; 0xb4
   14a20:	str	r3, [sp, #176]	; 0xb0
   14a24:	str	r2, [sp, #172]	; 0xac
   14a28:	str	ip, [sp, #168]	; 0xa8
   14a2c:	str	lr, [sp, #164]	; 0xa4
   14a30:	str	r4, [sp, #160]	; 0xa0
   14a34:	str	r5, [sp, #156]	; 0x9c
   14a38:	str	r6, [sp, #152]	; 0x98
   14a3c:	str	r7, [sp, #148]	; 0x94
   14a40:	str	r8, [sp, #144]	; 0x90
   14a44:	str	r9, [sp, #140]	; 0x8c
   14a48:	bne	14a5c <sprintf@plt+0x3138>
   14a4c:	ldr	r0, [pc, #324]	; 14b98 <sprintf@plt+0x3274>
   14a50:	add	r0, pc, r0
   14a54:	str	r0, [sp, #136]	; 0x88
   14a58:	b	14a64 <sprintf@plt+0x3140>
   14a5c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14a60:	str	r0, [sp, #136]	; 0x88
   14a64:	ldr	r0, [sp, #136]	; 0x88
   14a68:	ldr	r1, [pc, #300]	; 14b9c <sprintf@plt+0x3278>
   14a6c:	add	r2, pc, r1
   14a70:	ldr	r1, [fp, #-96]	; 0xffffffa0
   14a74:	str	r0, [sp, #132]	; 0x84
   14a78:	mov	r0, r1
   14a7c:	ldr	r1, [sp, #184]	; 0xb8
   14a80:	ldr	r3, [sp, #176]	; 0xb0
   14a84:	ldr	ip, [sp, #172]	; 0xac
   14a88:	str	ip, [sp]
   14a8c:	ldr	lr, [sp, #168]	; 0xa8
   14a90:	str	lr, [sp, #4]
   14a94:	ldr	r4, [sp, #164]	; 0xa4
   14a98:	str	r4, [sp, #8]
   14a9c:	ldr	r5, [sp, #160]	; 0xa0
   14aa0:	str	r5, [sp, #12]
   14aa4:	ldr	r6, [sp, #156]	; 0x9c
   14aa8:	str	r6, [sp, #16]
   14aac:	ldr	r7, [sp, #152]	; 0x98
   14ab0:	str	r7, [sp, #20]
   14ab4:	ldr	r8, [sp, #148]	; 0x94
   14ab8:	str	r8, [sp, #24]
   14abc:	ldr	r9, [sp, #144]	; 0x90
   14ac0:	str	r9, [sp, #28]
   14ac4:	ldr	sl, [sp, #140]	; 0x8c
   14ac8:	str	sl, [sp, #32]
   14acc:	ldr	ip, [sp, #180]	; 0xb4
   14ad0:	str	ip, [sp, #36]	; 0x24
   14ad4:	ldr	ip, [fp, #-100]	; 0xffffff9c
   14ad8:	str	ip, [sp, #40]	; 0x28
   14adc:	ldr	ip, [fp, #-104]	; 0xffffff98
   14ae0:	str	ip, [sp, #44]	; 0x2c
   14ae4:	ldr	ip, [fp, #-108]	; 0xffffff94
   14ae8:	str	ip, [sp, #48]	; 0x30
   14aec:	ldr	ip, [fp, #-112]	; 0xffffff90
   14af0:	str	ip, [sp, #52]	; 0x34
   14af4:	ldr	ip, [fp, #-116]	; 0xffffff8c
   14af8:	str	ip, [sp, #56]	; 0x38
   14afc:	ldr	ip, [fp, #-120]	; 0xffffff88
   14b00:	str	ip, [sp, #60]	; 0x3c
   14b04:	ldr	ip, [fp, #-124]	; 0xffffff84
   14b08:	str	ip, [sp, #64]	; 0x40
   14b0c:	ldr	ip, [fp, #-128]	; 0xffffff80
   14b10:	str	ip, [sp, #68]	; 0x44
   14b14:	ldr	ip, [fp, #-132]	; 0xffffff7c
   14b18:	str	ip, [sp, #72]	; 0x48
   14b1c:	ldr	ip, [fp, #-136]	; 0xffffff78
   14b20:	str	ip, [sp, #76]	; 0x4c
   14b24:	ldr	ip, [fp, #-140]	; 0xffffff74
   14b28:	str	ip, [sp, #80]	; 0x50
   14b2c:	ldr	ip, [fp, #-144]	; 0xffffff70
   14b30:	str	ip, [sp, #84]	; 0x54
   14b34:	ldr	ip, [fp, #-148]	; 0xffffff6c
   14b38:	str	ip, [sp, #88]	; 0x58
   14b3c:	ldr	ip, [fp, #-152]	; 0xffffff68
   14b40:	str	ip, [sp, #92]	; 0x5c
   14b44:	ldr	ip, [fp, #-156]	; 0xffffff64
   14b48:	str	ip, [sp, #96]	; 0x60
   14b4c:	ldr	ip, [fp, #-160]	; 0xffffff60
   14b50:	str	ip, [sp, #100]	; 0x64
   14b54:	ldr	ip, [fp, #-164]	; 0xffffff5c
   14b58:	str	ip, [sp, #104]	; 0x68
   14b5c:	ldr	ip, [fp, #-168]	; 0xffffff58
   14b60:	str	ip, [sp, #108]	; 0x6c
   14b64:	ldr	ip, [fp, #-172]	; 0xffffff54
   14b68:	str	ip, [sp, #112]	; 0x70
   14b6c:	ldr	ip, [fp, #-176]	; 0xffffff50
   14b70:	str	ip, [sp, #116]	; 0x74
   14b74:	ldr	ip, [fp, #-180]	; 0xffffff4c
   14b78:	str	ip, [sp, #120]	; 0x78
   14b7c:	ldr	ip, [sp, #132]	; 0x84
   14b80:	str	ip, [sp, #124]	; 0x7c
   14b84:	bl	118b8 <snprintf@plt>
   14b88:	str	r0, [sp, #128]	; 0x80
   14b8c:	b	14b90 <sprintf@plt+0x326c>
   14b90:	sub	sp, fp, #28
   14b94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14b98:	andeq	sl, r0, r1, lsr #8
   14b9c:	andeq	sl, r0, r2, lsr #7
   14ba0:	andeq	sl, r0, r9, ror #12
   14ba4:	andeq	sl, r0, lr, lsr r6
   14ba8:	push	{fp, lr}
   14bac:	mov	fp, sp
   14bb0:	sub	sp, sp, #8
   14bb4:	str	r0, [sp, #4]
   14bb8:	str	r1, [sp]
   14bbc:	ldr	r0, [sp, #4]
   14bc0:	ldr	r1, [sp]
   14bc4:	bl	14c1c <sprintf@plt+0x32f8>
   14bc8:	cmp	r0, #0
   14bcc:	beq	14bd4 <sprintf@plt+0x32b0>
   14bd0:	b	14bbc <sprintf@plt+0x3298>
   14bd4:	ldr	r0, [pc, #24]	; 14bf4 <sprintf@plt+0x32d0>
   14bd8:	add	r2, pc, r0
   14bdc:	ldr	r0, [sp, #4]
   14be0:	movw	r1, #1
   14be4:	movw	r3, #0
   14be8:	bl	115ac <rb_setselect@plt>
   14bec:	mov	sp, fp
   14bf0:	pop	{fp, pc}
   14bf4:			; <UNDEFINED> instruction: 0xffffffc8
   14bf8:	push	{fp, lr}
   14bfc:	mov	fp, sp
   14c00:	sub	sp, sp, #8
   14c04:	str	r0, [sp, #4]
   14c08:	bl	11738 <rb_current_time@plt>
   14c0c:	bl	16420 <sprintf@plt+0x4afc>
   14c10:	str	r0, [sp]
   14c14:	mov	sp, fp
   14c18:	pop	{fp, pc}
   14c1c:	push	{r4, r5, fp, lr}
   14c20:	add	fp, sp, #8
   14c24:	sub	sp, sp, #232	; 0xe8
   14c28:	sub	sp, sp, #1024	; 0x400
   14c2c:	str	r0, [fp, #-16]
   14c30:	str	r1, [fp, #-20]	; 0xffffffec
   14c34:	movw	r0, #0
   14c38:	str	r0, [sp, #200]	; 0xc8
   14c3c:	str	r0, [sp, #196]	; 0xc4
   14c40:	movw	r0, #128	; 0x80
   14c44:	str	r0, [sp, #184]	; 0xb8
   14c48:	ldr	r0, [fp, #-16]
   14c4c:	bl	115b8 <rb_get_fd@plt>
   14c50:	add	r1, sp, #208	; 0xd0
   14c54:	add	lr, sp, #56	; 0x38
   14c58:	movw	r2, #1036	; 0x40c
   14c5c:	movw	r3, #0
   14c60:	str	lr, [sp]
   14c64:	add	lr, sp, #184	; 0xb8
   14c68:	str	lr, [sp, #4]
   14c6c:	bl	118dc <recvfrom@plt>
   14c70:	str	r0, [sp, #192]	; 0xc0
   14c74:	ldr	r0, [sp, #192]	; 0xc0
   14c78:	cmp	r0, #0
   14c7c:	beq	14c8c <sprintf@plt+0x3368>
   14c80:	ldr	r0, [sp, #192]	; 0xc0
   14c84:	cmn	r0, #1
   14c88:	bne	14c98 <sprintf@plt+0x3374>
   14c8c:	movw	r0, #0
   14c90:	str	r0, [fp, #-12]
   14c94:	b	15100 <sprintf@plt+0x37dc>
   14c98:	ldr	r0, [sp, #192]	; 0xc0
   14c9c:	cmp	r0, #12
   14ca0:	bgt	14cb0 <sprintf@plt+0x338c>
   14ca4:	movw	r0, #1
   14ca8:	str	r0, [fp, #-12]
   14cac:	b	15100 <sprintf@plt+0x37dc>
   14cb0:	add	r0, sp, #208	; 0xd0
   14cb4:	str	r0, [sp, #204]	; 0xcc
   14cb8:	ldr	r0, [sp, #204]	; 0xcc
   14cbc:	ldrh	r0, [r0, #6]
   14cc0:	bl	11714 <ntohs@plt>
   14cc4:	ldr	lr, [sp, #204]	; 0xcc
   14cc8:	ldr	r1, [lr]
   14ccc:	ldr	r2, [lr, #8]
   14cd0:	ldrh	r3, [lr, #4]
   14cd4:	orr	r0, r3, r0, lsl #16
   14cd8:	str	r1, [lr]
   14cdc:	str	r0, [lr, #4]
   14ce0:	str	r2, [lr, #8]
   14ce4:	ldr	r0, [sp, #204]	; 0xcc
   14ce8:	ldrh	r0, [r0, #4]
   14cec:	bl	11714 <ntohs@plt>
   14cf0:	ldr	r1, [sp, #204]	; 0xcc
   14cf4:	ldr	r2, [r1]
   14cf8:	ldr	r3, [r1, #4]
   14cfc:	ldr	lr, [r1, #8]
   14d00:	bfc	r3, #0, #16
   14d04:	orr	r0, r3, r0
   14d08:	str	r2, [r1]
   14d0c:	str	r0, [r1, #4]
   14d10:	str	lr, [r1, #8]
   14d14:	ldr	r0, [sp, #204]	; 0xcc
   14d18:	ldrh	r0, [r0, #8]
   14d1c:	bl	11714 <ntohs@plt>
   14d20:	ldr	r1, [sp, #204]	; 0xcc
   14d24:	ldr	r2, [r1]
   14d28:	ldr	r3, [r1, #4]
   14d2c:	ldr	lr, [r1, #8]
   14d30:	bfc	lr, #0, #16
   14d34:	orr	r0, lr, r0
   14d38:	str	r3, [r1, #4]
   14d3c:	str	r2, [r1]
   14d40:	str	r0, [r1, #8]
   14d44:	ldr	r0, [sp, #204]	; 0xcc
   14d48:	ldrh	r0, [r0, #10]
   14d4c:	bl	11714 <ntohs@plt>
   14d50:	ldr	r1, [sp, #204]	; 0xcc
   14d54:	ldr	r2, [r1]
   14d58:	ldr	r3, [r1, #4]
   14d5c:	ldrh	lr, [r1, #8]
   14d60:	orr	r0, lr, r0, lsl #16
   14d64:	str	r3, [r1, #4]
   14d68:	str	r2, [r1]
   14d6c:	str	r0, [r1, #8]
   14d70:	ldr	r0, [sp, #204]	; 0xcc
   14d74:	ldrh	r0, [r0]
   14d78:	bl	1513c <sprintf@plt+0x3818>
   14d7c:	str	r0, [sp, #200]	; 0xc8
   14d80:	movw	r1, #0
   14d84:	cmp	r1, r0
   14d88:	bne	14d98 <sprintf@plt+0x3474>
   14d8c:	movw	r0, #1
   14d90:	str	r0, [fp, #-12]
   14d94:	b	15100 <sprintf@plt+0x37dc>
   14d98:	add	r0, sp, #56	; 0x38
   14d9c:	bl	151bc <sprintf@plt+0x3898>
   14da0:	str	r0, [sp, #52]	; 0x34
   14da4:	ldr	r0, [sp, #52]	; 0x34
   14da8:	cmn	r0, #1
   14dac:	bne	14dbc <sprintf@plt+0x3498>
   14db0:	movw	r0, #1
   14db4:	str	r0, [fp, #-12]
   14db8:	b	15100 <sprintf@plt+0x37dc>
   14dbc:	ldr	r0, [sp, #52]	; 0x34
   14dc0:	ldr	r1, [sp, #200]	; 0xc8
   14dc4:	ldr	r1, [r1, #288]	; 0x120
   14dc8:	cmp	r0, r1
   14dcc:	beq	14df8 <sprintf@plt+0x34d4>
   14dd0:	ldr	r0, [pc, #820]	; 1510c <sprintf@plt+0x37e8>
   14dd4:	add	r0, pc, r0
   14dd8:	ldr	r1, [sp, #52]	; 0x34
   14ddc:	ldr	r2, [pc, #832]	; 15124 <sprintf@plt+0x3800>
   14de0:	add	r2, pc, r2
   14de4:	add	r1, r2, r1, lsl #2
   14de8:	ldr	r2, [r1]
   14dec:	add	r2, r2, #3
   14df0:	str	r2, [r1]
   14df4:	str	r0, [sp, #48]	; 0x30
   14df8:	add	r0, sp, #208	; 0xd0
   14dfc:	ldr	r1, [sp, #200]	; 0xc8
   14e00:	ldr	r2, [sp, #204]	; 0xcc
   14e04:	ldr	r3, [sp, #192]	; 0xc0
   14e08:	add	r3, r0, r3
   14e0c:	str	r0, [sp, #44]	; 0x2c
   14e10:	mov	r0, r1
   14e14:	mov	r1, r2
   14e18:	ldr	r2, [sp, #44]	; 0x2c
   14e1c:	bl	15378 <sprintf@plt+0x3a54>
   14e20:	cmp	r0, #0
   14e24:	bne	14e34 <sprintf@plt+0x3510>
   14e28:	movw	r0, #1
   14e2c:	str	r0, [fp, #-12]
   14e30:	b	15100 <sprintf@plt+0x37dc>
   14e34:	ldr	r0, [sp, #204]	; 0xcc
   14e38:	ldrb	r0, [r0, #3]
   14e3c:	and	r0, r0, #15
   14e40:	cmp	r0, #0
   14e44:	bne	14e58 <sprintf@plt+0x3534>
   14e48:	ldr	r0, [sp, #204]	; 0xcc
   14e4c:	ldrh	r0, [r0, #6]
   14e50:	cmp	r0, #0
   14e54:	bne	14f5c <sprintf@plt+0x3638>
   14e58:	ldr	r0, [sp, #204]	; 0xcc
   14e5c:	ldrb	r0, [r0, #3]
   14e60:	and	r0, r0, #15
   14e64:	movw	r1, #2
   14e68:	cmp	r1, r0
   14e6c:	beq	14ea0 <sprintf@plt+0x357c>
   14e70:	ldr	r0, [sp, #204]	; 0xcc
   14e74:	ldrb	r0, [r0, #3]
   14e78:	and	r0, r0, #15
   14e7c:	movw	r1, #4
   14e80:	cmp	r1, r0
   14e84:	beq	14ea0 <sprintf@plt+0x357c>
   14e88:	ldr	r0, [sp, #204]	; 0xcc
   14e8c:	ldrb	r0, [r0, #3]
   14e90:	and	r0, r0, #15
   14e94:	movw	r1, #5
   14e98:	cmp	r1, r0
   14e9c:	bne	14ed8 <sprintf@plt+0x35b4>
   14ea0:	ldr	r0, [pc, #632]	; 15120 <sprintf@plt+0x37fc>
   14ea4:	add	r0, pc, r0
   14ea8:	ldr	r1, [sp, #52]	; 0x34
   14eac:	ldr	r2, [pc, #628]	; 15128 <sprintf@plt+0x3804>
   14eb0:	add	r2, pc, r2
   14eb4:	add	r1, r2, r1, lsl #2
   14eb8:	ldr	r2, [r1]
   14ebc:	add	r2, r2, #1
   14ec0:	str	r2, [r1]
   14ec4:	ldr	r1, [sp, #200]	; 0xc8
   14ec8:	str	r0, [sp, #40]	; 0x28
   14ecc:	mov	r0, r1
   14ed0:	bl	1542c <sprintf@plt+0x3b08>
   14ed4:	b	14f50 <sprintf@plt+0x362c>
   14ed8:	ldr	r0, [sp, #204]	; 0xcc
   14edc:	ldrb	r0, [r0, #3]
   14ee0:	and	r0, r0, #15
   14ee4:	movw	r1, #3
   14ee8:	cmp	r1, r0
   14eec:	bne	14f1c <sprintf@plt+0x35f8>
   14ef0:	ldr	r0, [pc, #548]	; 1511c <sprintf@plt+0x37f8>
   14ef4:	add	r0, pc, r0
   14ef8:	ldr	r1, [sp, #52]	; 0x34
   14efc:	ldr	r2, [pc, #552]	; 1512c <sprintf@plt+0x3808>
   14f00:	add	r2, pc, r2
   14f04:	add	r1, r2, r1, lsl #2
   14f08:	ldr	r2, [r1]
   14f0c:	movw	r3, #4
   14f10:	sdiv	r2, r2, r3
   14f14:	str	r2, [r1]
   14f18:	str	r0, [sp, #36]	; 0x24
   14f1c:	ldr	r0, [sp, #200]	; 0xc8
   14f20:	ldr	r0, [r0, #424]	; 0x1a8
   14f24:	ldr	r0, [r0, #4]
   14f28:	ldr	r1, [sp, #200]	; 0xc8
   14f2c:	ldr	r1, [r1, #424]	; 0x1a8
   14f30:	ldr	r1, [r1]
   14f34:	str	r0, [sp, #32]
   14f38:	mov	r0, r1
   14f3c:	movw	r1, #0
   14f40:	ldr	r2, [sp, #32]
   14f44:	blx	r2
   14f48:	ldr	r0, [sp, #200]	; 0xc8
   14f4c:	bl	15514 <sprintf@plt+0x3bf0>
   14f50:	movw	r0, #1
   14f54:	str	r0, [fp, #-12]
   14f58:	b	15100 <sprintf@plt+0x37dc>
   14f5c:	add	r0, sp, #208	; 0xd0
   14f60:	ldr	r1, [sp, #200]	; 0xc8
   14f64:	ldr	r2, [sp, #204]	; 0xcc
   14f68:	ldr	r3, [sp, #192]	; 0xc0
   14f6c:	add	r3, r0, r3
   14f70:	str	r0, [sp, #28]
   14f74:	mov	r0, r1
   14f78:	mov	r1, r2
   14f7c:	ldr	r2, [sp, #28]
   14f80:	bl	15554 <sprintf@plt+0x3c30>
   14f84:	str	r0, [sp, #188]	; 0xbc
   14f88:	ldr	r0, [sp, #188]	; 0xbc
   14f8c:	cmp	r0, #0
   14f90:	beq	150c4 <sprintf@plt+0x37a0>
   14f94:	ldr	r0, [sp, #200]	; 0xc8
   14f98:	ldrb	r0, [r0, #20]
   14f9c:	cmp	r0, #12
   14fa0:	bne	1504c <sprintf@plt+0x3728>
   14fa4:	ldr	r0, [sp, #200]	; 0xc8
   14fa8:	ldr	r0, [r0, #420]	; 0x1a4
   14fac:	movw	r1, #0
   14fb0:	cmp	r0, r1
   14fb4:	bne	14ff8 <sprintf@plt+0x36d4>
   14fb8:	ldr	r0, [pc, #344]	; 15118 <sprintf@plt+0x37f4>
   14fbc:	add	r0, pc, r0
   14fc0:	ldr	r1, [sp, #52]	; 0x34
   14fc4:	ldr	r2, [pc, #356]	; 15130 <sprintf@plt+0x380c>
   14fc8:	add	r2, pc, r2
   14fcc:	add	r1, r2, r1, lsl #2
   14fd0:	ldr	r2, [r1]
   14fd4:	add	r2, r2, #1
   14fd8:	str	r2, [r1]
   14fdc:	ldr	r1, [sp, #200]	; 0xc8
   14fe0:	str	r0, [sp, #24]
   14fe4:	mov	r0, r1
   14fe8:	bl	1542c <sprintf@plt+0x3b08>
   14fec:	movw	r0, #1
   14ff0:	str	r0, [fp, #-12]
   14ff4:	b	15100 <sprintf@plt+0x37dc>
   14ff8:	ldr	r0, [sp, #200]	; 0xc8
   14ffc:	add	r0, r0, #292	; 0x124
   15000:	ldrh	r0, [r0]
   15004:	cmp	r0, #10
   15008:	bne	15028 <sprintf@plt+0x3704>
   1500c:	ldr	r0, [sp, #200]	; 0xc8
   15010:	ldr	r0, [r0, #420]	; 0x1a4
   15014:	ldr	r1, [sp, #200]	; 0xc8
   15018:	ldr	r1, [r1, #424]	; 0x1a8
   1501c:	movw	r2, #28
   15020:	bl	145d4 <sprintf@plt+0x2cb0>
   15024:	b	15040 <sprintf@plt+0x371c>
   15028:	ldr	r0, [sp, #200]	; 0xc8
   1502c:	ldr	r0, [r0, #420]	; 0x1a4
   15030:	ldr	r1, [sp, #200]	; 0xc8
   15034:	ldr	r1, [r1, #424]	; 0x1a8
   15038:	movw	r2, #1
   1503c:	bl	145d4 <sprintf@plt+0x2cb0>
   15040:	ldr	r0, [sp, #200]	; 0xc8
   15044:	bl	15514 <sprintf@plt+0x3bf0>
   15048:	b	15094 <sprintf@plt+0x3770>
   1504c:	ldr	r0, [sp, #200]	; 0xc8
   15050:	bl	159c8 <sprintf@plt+0x40a4>
   15054:	str	r0, [sp, #196]	; 0xc4
   15058:	ldr	r0, [sp, #200]	; 0xc8
   1505c:	ldr	r0, [r0, #424]	; 0x1a8
   15060:	ldr	r0, [r0, #4]
   15064:	ldr	lr, [sp, #200]	; 0xc8
   15068:	ldr	lr, [lr, #424]	; 0x1a8
   1506c:	ldr	lr, [lr]
   15070:	ldr	r1, [sp, #196]	; 0xc4
   15074:	str	r0, [sp, #20]
   15078:	mov	r0, lr
   1507c:	ldr	lr, [sp, #20]
   15080:	blx	lr
   15084:	ldr	r0, [sp, #196]	; 0xc4
   15088:	bl	15ac0 <sprintf@plt+0x419c>
   1508c:	ldr	r0, [sp, #200]	; 0xc8
   15090:	bl	15514 <sprintf@plt+0x3bf0>
   15094:	ldr	r0, [pc, #120]	; 15114 <sprintf@plt+0x37f0>
   15098:	add	r0, pc, r0
   1509c:	ldr	r1, [sp, #52]	; 0x34
   150a0:	ldr	r2, [pc, #140]	; 15134 <sprintf@plt+0x3810>
   150a4:	add	r2, pc, r2
   150a8:	add	r1, r2, r1, lsl #2
   150ac:	ldr	r2, [r1]
   150b0:	movw	r3, #4
   150b4:	sdiv	r2, r2, r3
   150b8:	str	r2, [r1]
   150bc:	str	r0, [sp, #16]
   150c0:	b	150f8 <sprintf@plt+0x37d4>
   150c4:	ldr	r0, [pc, #68]	; 15110 <sprintf@plt+0x37ec>
   150c8:	add	r0, pc, r0
   150cc:	ldr	r1, [sp, #52]	; 0x34
   150d0:	ldr	r2, [pc, #96]	; 15138 <sprintf@plt+0x3814>
   150d4:	add	r2, pc, r2
   150d8:	add	r1, r2, r1, lsl #2
   150dc:	ldr	r2, [r1]
   150e0:	add	r2, r2, #1
   150e4:	str	r2, [r1]
   150e8:	ldr	r1, [sp, #200]	; 0xc8
   150ec:	str	r0, [sp, #12]
   150f0:	mov	r0, r1
   150f4:	bl	1542c <sprintf@plt+0x3b08>
   150f8:	movw	r0, #1
   150fc:	str	r0, [fp, #-12]
   15100:	ldr	r0, [fp, #-12]
   15104:	sub	sp, fp, #8
   15108:	pop	{r4, r5, fp, pc}
   1510c:	andeq	r0, r2, r8, lsr r2
   15110:	andeq	pc, r1, r4, asr #30
   15114:	andeq	pc, r1, r4, ror pc	; <UNPREDICTABLE>
   15118:	andeq	r0, r2, r0, asr r0
   1511c:	andeq	r0, r2, r8, lsl r1
   15120:	andeq	r0, r2, r8, ror #2
   15124:	andeq	r0, r2, ip, lsr #4
   15128:	andeq	r0, r2, ip, asr r1
   1512c:	andeq	r0, r2, ip, lsl #2
   15130:	andeq	r0, r2, r4, asr #32
   15134:	andeq	pc, r1, r8, ror #30
   15138:	andeq	pc, r1, r8, lsr pc	; <UNPREDICTABLE>
   1513c:	sub	sp, sp, #16
   15140:	ldr	r1, [pc, #112]	; 151b8 <sprintf@plt+0x3894>
   15144:	add	r1, pc, r1
   15148:	str	r0, [sp, #8]
   1514c:	ldr	r0, [r1]
   15150:	str	r0, [sp, #4]
   15154:	ldr	r0, [sp, #4]
   15158:	movw	r1, #0
   1515c:	cmp	r0, r1
   15160:	beq	151a4 <sprintf@plt+0x3880>
   15164:	ldr	r0, [sp, #4]
   15168:	ldr	r0, [r0]
   1516c:	str	r0, [sp]
   15170:	ldr	r0, [sp]
   15174:	ldr	r0, [r0, #12]
   15178:	ldr	r1, [sp, #8]
   1517c:	cmp	r0, r1
   15180:	bne	15190 <sprintf@plt+0x386c>
   15184:	ldr	r0, [sp]
   15188:	str	r0, [sp, #12]
   1518c:	b	151ac <sprintf@plt+0x3888>
   15190:	b	15194 <sprintf@plt+0x3870>
   15194:	ldr	r0, [sp, #4]
   15198:	ldr	r0, [r0, #8]
   1519c:	str	r0, [sp, #4]
   151a0:	b	15154 <sprintf@plt+0x3830>
   151a4:	movw	r0, #0
   151a8:	str	r0, [sp, #12]
   151ac:	ldr	r0, [sp, #12]
   151b0:	add	sp, sp, #16
   151b4:	bx	lr
   151b8:	strdeq	pc, [r1], -r0
   151bc:	push	{fp, lr}
   151c0:	mov	fp, sp
   151c4:	sub	sp, sp, #40	; 0x28
   151c8:	str	r0, [fp, #-8]
   151cc:	ldr	r0, [fp, #-8]
   151d0:	str	r0, [fp, #-16]
   151d4:	ldr	r0, [fp, #-8]
   151d8:	str	r0, [sp, #16]
   151dc:	movw	r0, #0
   151e0:	str	r0, [sp, #12]
   151e4:	ldr	r0, [pc, #384]	; 1536c <sprintf@plt+0x3a48>
   151e8:	ldr	r0, [pc, r0]
   151ec:	ldr	r1, [sp, #12]
   151f0:	ldr	r0, [r0]
   151f4:	cmp	r1, r0
   151f8:	bge	15358 <sprintf@plt+0x3a34>
   151fc:	ldr	r0, [sp, #12]
   15200:	ldr	r1, [pc, #360]	; 15370 <sprintf@plt+0x3a4c>
   15204:	ldr	r1, [pc, r1]
   15208:	add	r0, r1, r0, lsl #7
   1520c:	str	r0, [sp, #8]
   15210:	ldr	r0, [sp, #8]
   15214:	str	r0, [fp, #-12]
   15218:	ldr	r0, [sp, #8]
   1521c:	str	r0, [sp, #20]
   15220:	ldr	r0, [sp, #8]
   15224:	ldrh	r0, [r0]
   15228:	cmp	r0, #2
   1522c:	str	r0, [sp, #4]
   15230:	beq	152d0 <sprintf@plt+0x39ac>
   15234:	b	15238 <sprintf@plt+0x3914>
   15238:	ldr	r0, [sp, #4]
   1523c:	cmp	r0, #10
   15240:	bne	15340 <sprintf@plt+0x3a1c>
   15244:	b	15248 <sprintf@plt+0x3924>
   15248:	ldr	r0, [sp, #8]
   1524c:	ldrh	r0, [r0]
   15250:	ldr	r1, [fp, #-8]
   15254:	ldrh	r1, [r1]
   15258:	cmp	r0, r1
   1525c:	bne	152cc <sprintf@plt+0x39a8>
   15260:	ldr	r0, [fp, #-12]
   15264:	ldrh	r0, [r0, #2]
   15268:	ldr	r1, [fp, #-16]
   1526c:	ldrh	r1, [r1, #2]
   15270:	cmp	r0, r1
   15274:	bne	152c8 <sprintf@plt+0x39a4>
   15278:	ldr	r0, [fp, #-12]
   1527c:	add	r0, r0, #8
   15280:	ldr	r1, [fp, #-16]
   15284:	add	r1, r1, #8
   15288:	mov	r2, #16
   1528c:	bl	11588 <memcmp@plt>
   15290:	cmp	r0, #0
   15294:	beq	152b8 <sprintf@plt+0x3994>
   15298:	ldr	r0, [fp, #-12]
   1529c:	add	r0, r0, #8
   152a0:	ldr	r1, [pc, #204]	; 15374 <sprintf@plt+0x3a50>
   152a4:	ldr	r1, [pc, r1]
   152a8:	mov	r2, #16
   152ac:	bl	11588 <memcmp@plt>
   152b0:	cmp	r0, #0
   152b4:	bne	152c4 <sprintf@plt+0x39a0>
   152b8:	movw	r0, #1
   152bc:	str	r0, [fp, #-4]
   152c0:	b	15360 <sprintf@plt+0x3a3c>
   152c4:	b	152c8 <sprintf@plt+0x39a4>
   152c8:	b	152cc <sprintf@plt+0x39a8>
   152cc:	b	15344 <sprintf@plt+0x3a20>
   152d0:	ldr	r0, [sp, #8]
   152d4:	ldrh	r0, [r0]
   152d8:	ldr	r1, [fp, #-8]
   152dc:	ldrh	r1, [r1]
   152e0:	cmp	r0, r1
   152e4:	bne	1533c <sprintf@plt+0x3a18>
   152e8:	ldr	r0, [sp, #20]
   152ec:	ldrh	r0, [r0, #2]
   152f0:	ldr	r1, [sp, #16]
   152f4:	ldrh	r1, [r1, #2]
   152f8:	cmp	r0, r1
   152fc:	bne	15338 <sprintf@plt+0x3a14>
   15300:	ldr	r0, [sp, #20]
   15304:	ldr	r0, [r0, #4]
   15308:	cmp	r0, #0
   1530c:	beq	15328 <sprintf@plt+0x3a04>
   15310:	ldr	r0, [sp, #20]
   15314:	ldr	r0, [r0, #4]
   15318:	ldr	r1, [sp, #16]
   1531c:	ldr	r1, [r1, #4]
   15320:	cmp	r0, r1
   15324:	bne	15334 <sprintf@plt+0x3a10>
   15328:	movw	r0, #1
   1532c:	str	r0, [fp, #-4]
   15330:	b	15360 <sprintf@plt+0x3a3c>
   15334:	b	15338 <sprintf@plt+0x3a14>
   15338:	b	1533c <sprintf@plt+0x3a18>
   1533c:	b	15344 <sprintf@plt+0x3a20>
   15340:	b	15344 <sprintf@plt+0x3a20>
   15344:	b	15348 <sprintf@plt+0x3a24>
   15348:	ldr	r0, [sp, #12]
   1534c:	add	r0, r0, #1
   15350:	str	r0, [sp, #12]
   15354:	b	151e4 <sprintf@plt+0x38c0>
   15358:	movw	r0, #0
   1535c:	str	r0, [fp, #-4]
   15360:	ldr	r0, [fp, #-4]
   15364:	mov	sp, fp
   15368:	pop	{fp, pc}
   1536c:	andeq	sl, r1, ip, lsl #31
   15370:	andeq	sl, r1, ip, ror pc
   15374:	ldrdeq	sl, [r1], -r8
   15378:	push	{r4, r5, fp, lr}
   1537c:	add	fp, sp, #8
   15380:	sub	sp, sp, #288	; 0x120
   15384:	str	r0, [fp, #-16]
   15388:	str	r1, [fp, #-20]	; 0xffffffec
   1538c:	str	r2, [fp, #-24]	; 0xffffffe8
   15390:	str	r3, [fp, #-28]	; 0xffffffe4
   15394:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15398:	add	r0, r0, #12
   1539c:	str	r0, [sp, #8]
   153a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   153a4:	ldrh	r0, [r0, #4]
   153a8:	cmp	r0, #1
   153ac:	beq	153bc <sprintf@plt+0x3a98>
   153b0:	movw	r0, #0
   153b4:	str	r0, [fp, #-12]
   153b8:	b	15420 <sprintf@plt+0x3afc>
   153bc:	add	r3, sp, #12
   153c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   153c4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   153c8:	ldr	r2, [sp, #8]
   153cc:	movw	ip, #256	; 0x100
   153d0:	str	ip, [sp]
   153d4:	bl	16a14 <sprintf@plt+0x50f0>
   153d8:	str	r0, [sp, #4]
   153dc:	ldr	r0, [sp, #4]
   153e0:	cmp	r0, #0
   153e4:	bgt	153f4 <sprintf@plt+0x3ad0>
   153e8:	movw	r0, #0
   153ec:	str	r0, [fp, #-12]
   153f0:	b	15420 <sprintf@plt+0x3afc>
   153f4:	add	r0, sp, #12
   153f8:	ldr	r1, [fp, #-16]
   153fc:	add	r1, r1, #21
   15400:	bl	116f0 <rb_strcasecmp@plt>
   15404:	cmp	r0, #0
   15408:	beq	15418 <sprintf@plt+0x3af4>
   1540c:	movw	r0, #0
   15410:	str	r0, [fp, #-12]
   15414:	b	15420 <sprintf@plt+0x3afc>
   15418:	movw	r0, #1
   1541c:	str	r0, [fp, #-12]
   15420:	ldr	r0, [fp, #-12]
   15424:	sub	sp, fp, #8
   15428:	pop	{r4, r5, fp, pc}
   1542c:	push	{fp, lr}
   15430:	mov	fp, sp
   15434:	sub	sp, sp, #16
   15438:	str	r0, [fp, #-4]
   1543c:	ldr	r0, [fp, #-4]
   15440:	ldrb	r1, [r0, #277]	; 0x115
   15444:	movw	r2, #255	; 0xff
   15448:	add	r1, r1, r2
   1544c:	strb	r1, [r0, #277]	; 0x115
   15450:	and	r0, r1, #255	; 0xff
   15454:	cmp	r0, #0
   15458:	bgt	15494 <sprintf@plt+0x3b70>
   1545c:	ldr	r0, [fp, #-4]
   15460:	ldr	r0, [r0, #424]	; 0x1a8
   15464:	ldr	r0, [r0, #4]
   15468:	ldr	r1, [fp, #-4]
   1546c:	ldr	r1, [r1, #424]	; 0x1a8
   15470:	ldr	r1, [r1]
   15474:	str	r0, [sp, #8]
   15478:	mov	r0, r1
   1547c:	movw	r1, #0
   15480:	ldr	r2, [sp, #8]
   15484:	blx	r2
   15488:	ldr	r0, [fp, #-4]
   1548c:	bl	15514 <sprintf@plt+0x3bf0>
   15490:	b	1550c <sprintf@plt+0x3be8>
   15494:	ldr	r0, [fp, #-4]
   15498:	ldrb	r0, [r0, #20]
   1549c:	mov	r1, r0
   154a0:	cmp	r0, #1
   154a4:	str	r1, [sp, #4]
   154a8:	beq	154e8 <sprintf@plt+0x3bc4>
   154ac:	b	154b0 <sprintf@plt+0x3b8c>
   154b0:	ldr	r0, [sp, #4]
   154b4:	cmp	r0, #12
   154b8:	beq	154d0 <sprintf@plt+0x3bac>
   154bc:	b	154c0 <sprintf@plt+0x3b9c>
   154c0:	ldr	r0, [sp, #4]
   154c4:	cmp	r0, #28
   154c8:	beq	154e8 <sprintf@plt+0x3bc4>
   154cc:	b	15508 <sprintf@plt+0x3be4>
   154d0:	ldr	r0, [fp, #-4]
   154d4:	add	r1, r0, #292	; 0x124
   154d8:	ldr	r2, [fp, #-4]
   154dc:	movw	r0, #0
   154e0:	bl	14674 <sprintf@plt+0x2d50>
   154e4:	b	1550c <sprintf@plt+0x3be8>
   154e8:	ldr	r0, [fp, #-4]
   154ec:	ldr	r1, [r0, #420]	; 0x1a4
   154f0:	ldr	r2, [fp, #-4]
   154f4:	ldr	r0, [fp, #-4]
   154f8:	ldrb	r3, [r0, #20]
   154fc:	movw	r0, #0
   15500:	bl	15b08 <sprintf@plt+0x41e4>
   15504:	b	1550c <sprintf@plt+0x3be8>
   15508:	b	1550c <sprintf@plt+0x3be8>
   1550c:	mov	sp, fp
   15510:	pop	{fp, pc}
   15514:	push	{fp, lr}
   15518:	mov	fp, sp
   1551c:	sub	sp, sp, #8
   15520:	ldr	r1, [pc, #40]	; 15550 <sprintf@plt+0x3c2c>
   15524:	add	r1, pc, r1
   15528:	str	r0, [sp, #4]
   1552c:	ldr	r0, [sp, #4]
   15530:	bl	162e4 <sprintf@plt+0x49c0>
   15534:	ldr	r0, [sp, #4]
   15538:	ldr	r0, [r0, #420]	; 0x1a4
   1553c:	bl	15ac0 <sprintf@plt+0x419c>
   15540:	ldr	r0, [sp, #4]
   15544:	bl	15ac0 <sprintf@plt+0x419c>
   15548:	mov	sp, fp
   1554c:	pop	{fp, pc}
   15550:	andeq	pc, r1, r0, lsl fp	; <UNPREDICTABLE>
   15554:	push	{r4, r5, fp, lr}
   15558:	add	fp, sp, #8
   1555c:	sub	sp, sp, #424	; 0x1a8
   15560:	str	r0, [fp, #-16]
   15564:	str	r1, [fp, #-20]	; 0xffffffec
   15568:	str	r2, [fp, #-24]	; 0xffffffe8
   1556c:	str	r3, [fp, #-28]	; 0xffffffe4
   15570:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15574:	add	r0, r0, #12
   15578:	str	r0, [sp, #44]	; 0x2c
   1557c:	ldr	r0, [fp, #-20]	; 0xffffffec
   15580:	ldrh	r0, [r0, #4]
   15584:	cmp	r0, #0
   15588:	ble	155ec <sprintf@plt+0x3cc8>
   1558c:	ldr	r0, [sp, #44]	; 0x2c
   15590:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15594:	bl	16b20 <sprintf@plt+0x51fc>
   15598:	str	r0, [sp, #36]	; 0x24
   1559c:	cmp	r0, #0
   155a0:	bge	155b0 <sprintf@plt+0x3c8c>
   155a4:	movw	r0, #0
   155a8:	str	r0, [fp, #-12]
   155ac:	b	159bc <sprintf@plt+0x4098>
   155b0:	ldr	r0, [sp, #36]	; 0x24
   155b4:	add	r0, r0, #4
   155b8:	ldr	r1, [sp, #44]	; 0x2c
   155bc:	add	r0, r1, r0
   155c0:	str	r0, [sp, #44]	; 0x2c
   155c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   155c8:	ldr	r1, [r0]
   155cc:	ldr	r2, [r0, #4]
   155d0:	ldr	r3, [r0, #8]
   155d4:	sub	ip, r2, #1
   155d8:	pkhbt	r2, ip, r2
   155dc:	str	r1, [r0]
   155e0:	str	r2, [r0, #4]
   155e4:	str	r3, [r0, #8]
   155e8:	b	1557c <sprintf@plt+0x3c58>
   155ec:	b	155f0 <sprintf@plt+0x3ccc>
   155f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   155f4:	ldrh	r0, [r0, #6]
   155f8:	cmp	r0, #0
   155fc:	movw	r0, #0
   15600:	str	r0, [sp, #20]
   15604:	ble	15620 <sprintf@plt+0x3cfc>
   15608:	ldr	r0, [sp, #44]	; 0x2c
   1560c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15610:	cmp	r0, r1
   15614:	movw	r0, #0
   15618:	movcc	r0, #1
   1561c:	str	r0, [sp, #20]
   15620:	ldr	r0, [sp, #20]
   15624:	tst	r0, #1
   15628:	beq	159b4 <sprintf@plt+0x4090>
   1562c:	add	r3, sp, #49	; 0x31
   15630:	ldr	r0, [fp, #-20]	; 0xffffffec
   15634:	ldr	r1, [r0]
   15638:	ldr	r2, [r0, #4]
   1563c:	ldr	ip, [r0, #8]
   15640:	mov	lr, r2
   15644:	bfc	lr, #0, #16
   15648:	sub	lr, lr, #65536	; 0x10000
   1564c:	uxth	r2, r2
   15650:	orr	r2, r2, lr
   15654:	str	r1, [r0]
   15658:	str	r2, [r0, #4]
   1565c:	str	ip, [r0, #8]
   15660:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15664:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15668:	ldr	r2, [sp, #44]	; 0x2c
   1566c:	movw	ip, #355	; 0x163
   15670:	str	ip, [sp]
   15674:	bl	16a14 <sprintf@plt+0x50f0>
   15678:	str	r0, [sp, #36]	; 0x24
   1567c:	ldr	r0, [sp, #36]	; 0x24
   15680:	cmp	r0, #0
   15684:	bge	15694 <sprintf@plt+0x3d70>
   15688:	movw	r0, #0
   1568c:	str	r0, [fp, #-12]
   15690:	b	159bc <sprintf@plt+0x4098>
   15694:	ldr	r0, [sp, #36]	; 0x24
   15698:	cmp	r0, #0
   1569c:	bne	156ac <sprintf@plt+0x3d88>
   156a0:	movw	r0, #0
   156a4:	str	r0, [fp, #-12]
   156a8:	b	159bc <sprintf@plt+0x4098>
   156ac:	b	156b0 <sprintf@plt+0x3d8c>
   156b0:	movw	r0, #0
   156b4:	strb	r0, [sp, #304]	; 0x130
   156b8:	ldr	r0, [sp, #36]	; 0x24
   156bc:	ldr	r1, [sp, #44]	; 0x2c
   156c0:	add	r0, r1, r0
   156c4:	str	r0, [sp, #44]	; 0x2c
   156c8:	ldr	r0, [sp, #44]	; 0x2c
   156cc:	add	r0, r0, #10
   156d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   156d4:	cmp	r0, r1
   156d8:	bcc	156e0 <sprintf@plt+0x3dbc>
   156dc:	b	159b4 <sprintf@plt+0x4090>
   156e0:	ldr	r0, [sp, #44]	; 0x2c
   156e4:	bl	16ce8 <sprintf@plt+0x53c4>
   156e8:	str	r0, [sp, #40]	; 0x28
   156ec:	ldr	r0, [sp, #44]	; 0x2c
   156f0:	add	r0, r0, #2
   156f4:	str	r0, [sp, #44]	; 0x2c
   156f8:	ldr	r0, [sp, #44]	; 0x2c
   156fc:	bl	16ce8 <sprintf@plt+0x53c4>
   15700:	ldr	lr, [sp, #44]	; 0x2c
   15704:	add	lr, lr, #2
   15708:	str	lr, [sp, #44]	; 0x2c
   1570c:	ldr	lr, [sp, #44]	; 0x2c
   15710:	str	r0, [sp, #16]
   15714:	mov	r0, lr
   15718:	bl	16d34 <sprintf@plt+0x5410>
   1571c:	ldr	lr, [fp, #-16]
   15720:	str	r0, [lr, #16]
   15724:	ldr	r0, [sp, #44]	; 0x2c
   15728:	add	r0, r0, #4
   1572c:	str	r0, [sp, #44]	; 0x2c
   15730:	ldr	r0, [sp, #44]	; 0x2c
   15734:	bl	16ce8 <sprintf@plt+0x53c4>
   15738:	str	r0, [sp, #32]
   1573c:	ldr	r0, [sp, #44]	; 0x2c
   15740:	add	r0, r0, #2
   15744:	str	r0, [sp, #44]	; 0x2c
   15748:	ldr	r0, [sp, #40]	; 0x28
   1574c:	cmp	r0, #1
   15750:	str	r0, [sp, #12]
   15754:	beq	1577c <sprintf@plt+0x3e58>
   15758:	b	1575c <sprintf@plt+0x3e38>
   1575c:	ldr	r0, [sp, #12]
   15760:	cmp	r0, #12
   15764:	beq	1590c <sprintf@plt+0x3fe8>
   15768:	b	1576c <sprintf@plt+0x3e48>
   1576c:	ldr	r0, [sp, #12]
   15770:	cmp	r0, #28
   15774:	beq	15814 <sprintf@plt+0x3ef0>
   15778:	b	159a0 <sprintf@plt+0x407c>
   1577c:	ldr	r0, [fp, #-16]
   15780:	ldrb	r0, [r0, #20]
   15784:	cmp	r0, #1
   15788:	beq	15798 <sprintf@plt+0x3e74>
   1578c:	movw	r0, #0
   15790:	str	r0, [fp, #-12]
   15794:	b	159bc <sprintf@plt+0x4098>
   15798:	ldr	r0, [sp, #32]
   1579c:	cmp	r0, #4
   157a0:	beq	157b0 <sprintf@plt+0x3e8c>
   157a4:	movw	r0, #0
   157a8:	str	r0, [fp, #-12]
   157ac:	b	159bc <sprintf@plt+0x4098>
   157b0:	ldr	r0, [fp, #-16]
   157b4:	add	r0, r0, #292	; 0x124
   157b8:	str	r0, [sp, #28]
   157bc:	ldr	r0, [fp, #-16]
   157c0:	add	r0, r0, #292	; 0x124
   157c4:	ldrh	r0, [r0]
   157c8:	ldr	r1, [fp, #-16]
   157cc:	add	r1, r1, #292	; 0x124
   157d0:	strh	r0, [r1]
   157d4:	ldr	r0, [sp, #28]
   157d8:	movw	r1, #2
   157dc:	strh	r1, [r0]
   157e0:	ldr	r0, [sp, #28]
   157e4:	ldr	r1, [sp, #44]	; 0x2c
   157e8:	ldrb	r2, [r1]
   157ec:	strb	r2, [r0, #4]
   157f0:	ldrb	r2, [r1, #1]
   157f4:	strb	r2, [r0, #5]
   157f8:	ldrb	r2, [r1, #2]
   157fc:	strb	r2, [r0, #6]
   15800:	ldrb	r1, [r1, #3]
   15804:	strb	r1, [r0, #7]
   15808:	movw	r0, #1
   1580c:	str	r0, [fp, #-12]
   15810:	b	159bc <sprintf@plt+0x4098>
   15814:	ldr	r0, [fp, #-16]
   15818:	ldrb	r0, [r0, #20]
   1581c:	cmp	r0, #28
   15820:	beq	15830 <sprintf@plt+0x3f0c>
   15824:	movw	r0, #0
   15828:	str	r0, [fp, #-12]
   1582c:	b	159bc <sprintf@plt+0x4098>
   15830:	ldr	r0, [sp, #32]
   15834:	cmp	r0, #16
   15838:	beq	15848 <sprintf@plt+0x3f24>
   1583c:	movw	r0, #0
   15840:	str	r0, [fp, #-12]
   15844:	b	159bc <sprintf@plt+0x4098>
   15848:	ldr	r0, [fp, #-16]
   1584c:	add	r0, r0, #292	; 0x124
   15850:	ldrh	r0, [r0]
   15854:	ldr	r1, [fp, #-16]
   15858:	add	r1, r1, #292	; 0x124
   1585c:	strh	r0, [r1]
   15860:	ldr	r0, [fp, #-16]
   15864:	add	r0, r0, #292	; 0x124
   15868:	str	r0, [sp, #24]
   1586c:	ldr	r0, [sp, #24]
   15870:	movw	r1, #10
   15874:	strh	r1, [r0]
   15878:	ldr	r0, [sp, #24]
   1587c:	ldr	r1, [sp, #44]	; 0x2c
   15880:	ldrb	r2, [r1]
   15884:	strb	r2, [r0, #8]
   15888:	ldrb	r2, [r1, #1]
   1588c:	strb	r2, [r0, #9]
   15890:	ldrb	r2, [r1, #2]
   15894:	strb	r2, [r0, #10]
   15898:	ldrb	r2, [r1, #3]
   1589c:	strb	r2, [r0, #11]
   158a0:	ldrb	r2, [r1, #4]
   158a4:	strb	r2, [r0, #12]
   158a8:	ldrb	r2, [r1, #5]
   158ac:	strb	r2, [r0, #13]
   158b0:	ldrb	r2, [r1, #6]
   158b4:	strb	r2, [r0, #14]
   158b8:	ldrb	r2, [r1, #7]
   158bc:	strb	r2, [r0, #15]
   158c0:	ldrb	r2, [r1, #8]
   158c4:	strb	r2, [r0, #16]
   158c8:	ldrb	r2, [r1, #9]
   158cc:	strb	r2, [r0, #17]
   158d0:	ldrb	r2, [r1, #10]
   158d4:	strb	r2, [r0, #18]
   158d8:	ldrb	r2, [r1, #11]
   158dc:	strb	r2, [r0, #19]
   158e0:	ldrb	r2, [r1, #12]
   158e4:	strb	r2, [r0, #20]
   158e8:	ldrb	r2, [r1, #13]
   158ec:	strb	r2, [r0, #21]
   158f0:	ldrb	r2, [r1, #14]
   158f4:	strb	r2, [r0, #22]
   158f8:	ldrb	r1, [r1, #15]
   158fc:	strb	r1, [r0, #23]
   15900:	movw	r0, #1
   15904:	str	r0, [fp, #-12]
   15908:	b	159bc <sprintf@plt+0x4098>
   1590c:	ldr	r0, [fp, #-16]
   15910:	ldrb	r0, [r0, #20]
   15914:	cmp	r0, #12
   15918:	beq	15928 <sprintf@plt+0x4004>
   1591c:	movw	r0, #0
   15920:	str	r0, [fp, #-12]
   15924:	b	159bc <sprintf@plt+0x4098>
   15928:	add	r3, sp, #49	; 0x31
   1592c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15930:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15934:	ldr	r2, [sp, #44]	; 0x2c
   15938:	movw	ip, #355	; 0x163
   1593c:	str	ip, [sp]
   15940:	bl	16a14 <sprintf@plt+0x50f0>
   15944:	str	r0, [sp, #36]	; 0x24
   15948:	ldr	r0, [sp, #36]	; 0x24
   1594c:	cmp	r0, #0
   15950:	bge	15960 <sprintf@plt+0x403c>
   15954:	movw	r0, #0
   15958:	str	r0, [fp, #-12]
   1595c:	b	159bc <sprintf@plt+0x4098>
   15960:	ldr	r0, [sp, #36]	; 0x24
   15964:	cmp	r0, #0
   15968:	bne	15978 <sprintf@plt+0x4054>
   1596c:	movw	r0, #0
   15970:	str	r0, [fp, #-12]
   15974:	b	159bc <sprintf@plt+0x4098>
   15978:	b	1597c <sprintf@plt+0x4058>
   1597c:	add	r1, sp, #49	; 0x31
   15980:	ldr	r0, [fp, #-16]
   15984:	ldr	r0, [r0, #420]	; 0x1a4
   15988:	movw	r2, #256	; 0x100
   1598c:	bl	116a8 <rb_strlcpy@plt>
   15990:	movw	r1, #1
   15994:	str	r1, [fp, #-12]
   15998:	str	r0, [sp, #8]
   1599c:	b	159bc <sprintf@plt+0x4098>
   159a0:	ldr	r0, [sp, #32]
   159a4:	ldr	r1, [sp, #44]	; 0x2c
   159a8:	add	r0, r1, r0
   159ac:	str	r0, [sp, #44]	; 0x2c
   159b0:	b	155f0 <sprintf@plt+0x3ccc>
   159b4:	movw	r0, #1
   159b8:	str	r0, [fp, #-12]
   159bc:	ldr	r0, [fp, #-12]
   159c0:	sub	sp, fp, #8
   159c4:	pop	{r4, r5, fp, pc}
   159c8:	push	{fp, lr}
   159cc:	mov	fp, sp
   159d0:	sub	sp, sp, #16
   159d4:	str	r0, [fp, #-4]
   159d8:	ldr	r0, [fp, #-4]
   159dc:	movw	r1, #0
   159e0:	cmp	r0, r1
   159e4:	movw	r0, #0
   159e8:	movne	r0, #1
   159ec:	mvn	r1, #0
   159f0:	eor	r0, r0, r1
   159f4:	eor	r0, r0, r1
   159f8:	tst	r0, #1
   159fc:	bne	15a3c <sprintf@plt+0x4118>
   15a00:	ldr	r0, [pc, #156]	; 15aa4 <sprintf@plt+0x4180>
   15a04:	add	r0, pc, r0
   15a08:	ldr	r1, [pc, #152]	; 15aa8 <sprintf@plt+0x4184>
   15a0c:	add	r1, pc, r1
   15a10:	ldr	r2, [pc, #148]	; 15aac <sprintf@plt+0x4188>
   15a14:	add	r3, pc, r2
   15a18:	ldr	r2, [pc, #144]	; 15ab0 <sprintf@plt+0x418c>
   15a1c:	add	r2, pc, r2
   15a20:	movw	ip, #878	; 0x36e
   15a24:	str	r2, [sp, #4]
   15a28:	mov	r2, ip
   15a2c:	ldr	ip, [sp, #4]
   15a30:	str	ip, [sp]
   15a34:	bl	117bc <rb_lib_log@plt>
   15a38:	b	15a40 <sprintf@plt+0x411c>
   15a3c:	b	15a60 <sprintf@plt+0x413c>
   15a40:	ldr	r0, [pc, #108]	; 15ab4 <sprintf@plt+0x4190>
   15a44:	add	r0, pc, r0
   15a48:	ldr	r1, [pc, #104]	; 15ab8 <sprintf@plt+0x4194>
   15a4c:	add	r1, pc, r1
   15a50:	ldr	r2, [pc, #100]	; 15abc <sprintf@plt+0x4198>
   15a54:	add	r3, pc, r2
   15a58:	movw	r2, #878	; 0x36e
   15a5c:	bl	1169c <__assert_fail@plt>
   15a60:	movw	r0, #132	; 0x84
   15a64:	bl	15d68 <sprintf@plt+0x4444>
   15a68:	str	r0, [sp, #8]
   15a6c:	ldr	r0, [fp, #-4]
   15a70:	ldr	r0, [r0, #420]	; 0x1a4
   15a74:	ldr	lr, [sp, #8]
   15a78:	str	r0, [lr]
   15a7c:	ldr	r0, [sp, #8]
   15a80:	add	r0, r0, #4
   15a84:	ldr	lr, [fp, #-4]
   15a88:	add	lr, lr, #292	; 0x124
   15a8c:	mov	r1, lr
   15a90:	movw	r2, #128	; 0x80
   15a94:	bl	11750 <memcpy@plt>
   15a98:	ldr	r0, [sp, #8]
   15a9c:	mov	sp, fp
   15aa0:	pop	{fp, pc}
   15aa4:	muleq	r0, fp, r4
   15aa8:	andeq	r9, r0, r1, lsr #7
   15aac:			; <UNDEFINED> instruction: 0x000094ba
   15ab0:	andeq	r9, r0, r3, ror #9
   15ab4:	andeq	r9, r0, r8, asr #9
   15ab8:	andeq	r9, r0, r1, ror #6
   15abc:	andeq	r9, r0, sl, ror r4
   15ac0:	push	{fp, lr}
   15ac4:	mov	fp, sp
   15ac8:	sub	sp, sp, #8
   15acc:	str	r0, [sp, #4]
   15ad0:	ldr	r0, [sp, #4]
   15ad4:	movw	r1, #0
   15ad8:	cmp	r0, r1
   15adc:	movw	r0, #0
   15ae0:	movne	r0, #1
   15ae4:	mvn	r1, #0
   15ae8:	eor	r0, r0, r1
   15aec:	eor	r0, r0, r1
   15af0:	tst	r0, #1
   15af4:	beq	15b00 <sprintf@plt+0x41dc>
   15af8:	ldr	r0, [sp, #4]
   15afc:	bl	116cc <free@plt>
   15b00:	mov	sp, fp
   15b04:	pop	{fp, pc}
   15b08:	push	{fp, lr}
   15b0c:	mov	fp, sp
   15b10:	sub	sp, sp, #24
   15b14:	str	r0, [fp, #-4]
   15b18:	str	r1, [fp, #-8]
   15b1c:	str	r2, [sp, #12]
   15b20:	str	r3, [sp, #8]
   15b24:	ldr	r0, [sp, #12]
   15b28:	movw	r1, #0
   15b2c:	cmp	r0, r1
   15b30:	bne	15b50 <sprintf@plt+0x422c>
   15b34:	ldr	r0, [fp, #-4]
   15b38:	bl	15b88 <sprintf@plt+0x4264>
   15b3c:	str	r0, [sp, #12]
   15b40:	ldr	r0, [fp, #-8]
   15b44:	bl	15c08 <sprintf@plt+0x42e4>
   15b48:	ldr	lr, [sp, #12]
   15b4c:	str	r0, [lr, #420]	; 0x1a4
   15b50:	ldr	r0, [sp, #12]
   15b54:	add	r0, r0, #21
   15b58:	ldr	r1, [fp, #-8]
   15b5c:	movw	r2, #256	; 0x100
   15b60:	bl	116a8 <rb_strlcpy@plt>
   15b64:	ldr	r1, [sp, #8]
   15b68:	ldr	r2, [sp, #12]
   15b6c:	strb	r1, [r2, #20]
   15b70:	ldr	r1, [sp, #12]
   15b74:	str	r0, [sp, #4]
   15b78:	mov	r0, r1
   15b7c:	bl	15c78 <sprintf@plt+0x4354>
   15b80:	mov	sp, fp
   15b84:	pop	{fp, pc}
   15b88:	push	{fp, lr}
   15b8c:	mov	fp, sp
   15b90:	sub	sp, sp, #8
   15b94:	str	r0, [sp, #4]
   15b98:	movw	r0, #428	; 0x1ac
   15b9c:	bl	15d68 <sprintf@plt+0x4444>
   15ba0:	str	r0, [sp]
   15ba4:	bl	11738 <rb_current_time@plt>
   15ba8:	ldr	lr, [sp]
   15bac:	str	r0, [lr, #280]	; 0x118
   15bb0:	ldr	r0, [sp]
   15bb4:	movw	lr, #3
   15bb8:	strb	lr, [r0, #277]	; 0x115
   15bbc:	ldr	r0, [sp]
   15bc0:	movw	lr, #4
   15bc4:	str	lr, [r0, #284]	; 0x11c
   15bc8:	ldr	r0, [sp, #4]
   15bcc:	ldr	lr, [sp]
   15bd0:	str	r0, [lr, #424]	; 0x1a8
   15bd4:	bl	15dc0 <sprintf@plt+0x449c>
   15bd8:	ldr	lr, [pc, #36]	; 15c04 <sprintf@plt+0x42e0>
   15bdc:	add	r2, pc, lr
   15be0:	uxth	r0, r0
   15be4:	ldr	lr, [sp]
   15be8:	str	r0, [lr, #12]
   15bec:	ldr	r0, [sp]
   15bf0:	ldr	r1, [sp]
   15bf4:	bl	15e14 <sprintf@plt+0x44f0>
   15bf8:	ldr	r0, [sp]
   15bfc:	mov	sp, fp
   15c00:	pop	{fp, pc}
   15c04:	andeq	pc, r1, r8, asr r4	; <UNPREDICTABLE>
   15c08:	push	{fp, lr}
   15c0c:	mov	fp, sp
   15c10:	sub	sp, sp, #16
   15c14:	str	r0, [fp, #-4]
   15c18:	ldr	r0, [fp, #-4]
   15c1c:	bl	1172c <strlen@plt>
   15c20:	add	r0, r0, #1
   15c24:	bl	11828 <malloc@plt>
   15c28:	str	r0, [sp, #8]
   15c2c:	ldr	r0, [sp, #8]
   15c30:	movw	lr, #0
   15c34:	cmp	r0, lr
   15c38:	movw	r0, #0
   15c3c:	moveq	r0, #1
   15c40:	mvn	lr, #0
   15c44:	eor	r0, r0, lr
   15c48:	eor	r0, r0, lr
   15c4c:	tst	r0, #1
   15c50:	beq	15c58 <sprintf@plt+0x4334>
   15c54:	bl	117ec <rb_outofmemory@plt>
   15c58:	ldr	r0, [sp, #8]
   15c5c:	ldr	r1, [fp, #-4]
   15c60:	bl	1178c <strcpy@plt>
   15c64:	ldr	r1, [sp, #8]
   15c68:	str	r0, [sp, #4]
   15c6c:	mov	r0, r1
   15c70:	mov	sp, fp
   15c74:	pop	{fp, pc}
   15c78:	push	{r4, r5, fp, lr}
   15c7c:	add	fp, sp, #8
   15c80:	sub	sp, sp, #1056	; 0x420
   15c84:	add	r1, sp, #28
   15c88:	str	r0, [fp, #-12]
   15c8c:	movw	r0, #0
   15c90:	str	r0, [sp, #24]
   15c94:	mov	r0, r1
   15c98:	movw	r2, #0
   15c9c:	and	r2, r2, #255	; 0xff
   15ca0:	str	r1, [sp, #12]
   15ca4:	mov	r1, r2
   15ca8:	movw	r2, #1024	; 0x400
   15cac:	str	r2, [sp, #8]
   15cb0:	bl	1166c <memset@plt>
   15cb4:	ldr	r0, [fp, #-12]
   15cb8:	add	r0, r0, #21
   15cbc:	ldr	r1, [fp, #-12]
   15cc0:	ldrb	r2, [r1, #20]
   15cc4:	movw	r1, #1
   15cc8:	ldr	r3, [sp, #12]
   15ccc:	ldr	lr, [sp, #8]
   15cd0:	str	lr, [sp]
   15cd4:	bl	16e70 <sprintf@plt+0x554c>
   15cd8:	str	r0, [sp, #24]
   15cdc:	cmp	r0, #0
   15ce0:	ble	15d60 <sprintf@plt+0x443c>
   15ce4:	add	r0, sp, #28
   15ce8:	add	r1, sp, #28
   15cec:	str	r1, [sp, #16]
   15cf0:	ldr	r1, [fp, #-12]
   15cf4:	ldrh	r1, [r1, #12]
   15cf8:	ldr	r2, [sp, #16]
   15cfc:	ldr	r3, [r2]
   15d00:	ldr	ip, [r2, #4]
   15d04:	ldr	lr, [r2, #8]
   15d08:	bfc	r3, #0, #16
   15d0c:	orr	r1, r3, r1
   15d10:	str	ip, [r2, #4]
   15d14:	str	r1, [r2]
   15d18:	str	lr, [r2, #8]
   15d1c:	ldr	r1, [fp, #-12]
   15d20:	ldrb	r2, [r1, #278]	; 0x116
   15d24:	movw	r3, #1
   15d28:	add	r2, r2, r3
   15d2c:	strb	r2, [r1, #278]	; 0x116
   15d30:	ldr	r1, [sp, #24]
   15d34:	ldr	r2, [fp, #-12]
   15d38:	ldrb	r2, [r2, #278]	; 0x116
   15d3c:	bl	15f80 <sprintf@plt+0x465c>
   15d40:	str	r0, [sp, #20]
   15d44:	ldr	r0, [sp, #20]
   15d48:	cmn	r0, #1
   15d4c:	beq	15d5c <sprintf@plt+0x4438>
   15d50:	ldr	r0, [sp, #20]
   15d54:	ldr	r1, [fp, #-12]
   15d58:	str	r0, [r1, #288]	; 0x120
   15d5c:	b	15d60 <sprintf@plt+0x443c>
   15d60:	sub	sp, fp, #8
   15d64:	pop	{r4, r5, fp, pc}
   15d68:	push	{fp, lr}
   15d6c:	mov	fp, sp
   15d70:	sub	sp, sp, #8
   15d74:	str	r0, [sp, #4]
   15d78:	ldr	r1, [sp, #4]
   15d7c:	movw	r0, #1
   15d80:	bl	11630 <calloc@plt>
   15d84:	str	r0, [sp]
   15d88:	ldr	r0, [sp]
   15d8c:	movw	r1, #0
   15d90:	cmp	r0, r1
   15d94:	movw	r0, #0
   15d98:	moveq	r0, #1
   15d9c:	mvn	r1, #0
   15da0:	eor	r0, r0, r1
   15da4:	eor	r0, r0, r1
   15da8:	tst	r0, #1
   15dac:	beq	15db4 <sprintf@plt+0x4490>
   15db0:	bl	117ec <rb_outofmemory@plt>
   15db4:	ldr	r0, [sp]
   15db8:	mov	sp, fp
   15dbc:	pop	{fp, pc}
   15dc0:	push	{fp, lr}
   15dc4:	mov	fp, sp
   15dc8:	sub	sp, sp, #8
   15dcc:	sub	r0, fp, #2
   15dd0:	movw	r1, #2
   15dd4:	bl	118a0 <rb_get_random@plt>
   15dd8:	ldrh	r1, [fp, #-2]
   15ddc:	movw	lr, #65535	; 0xffff
   15de0:	cmp	r1, lr
   15de4:	str	r0, [sp]
   15de8:	bne	15df0 <sprintf@plt+0x44cc>
   15dec:	b	15df4 <sprintf@plt+0x44d0>
   15df0:	b	15df4 <sprintf@plt+0x44d0>
   15df4:	ldrh	r0, [fp, #-2]
   15df8:	bl	1513c <sprintf@plt+0x3818>
   15dfc:	movw	lr, #0
   15e00:	cmp	r0, lr
   15e04:	bne	15dcc <sprintf@plt+0x44a8>
   15e08:	ldrh	r0, [fp, #-2]
   15e0c:	mov	sp, fp
   15e10:	pop	{fp, pc}
   15e14:	push	{fp, lr}
   15e18:	mov	fp, sp
   15e1c:	sub	sp, sp, #16
   15e20:	str	r0, [fp, #-4]
   15e24:	str	r1, [sp, #8]
   15e28:	str	r2, [sp, #4]
   15e2c:	ldr	r0, [fp, #-4]
   15e30:	movw	r1, #0
   15e34:	cmp	r0, r1
   15e38:	beq	15e40 <sprintf@plt+0x451c>
   15e3c:	b	15e60 <sprintf@plt+0x453c>
   15e40:	ldr	r0, [pc, #276]	; 15f5c <sprintf@plt+0x4638>
   15e44:	add	r0, pc, r0
   15e48:	ldr	r1, [pc, #272]	; 15f60 <sprintf@plt+0x463c>
   15e4c:	add	r1, pc, r1
   15e50:	ldr	r2, [pc, #268]	; 15f64 <sprintf@plt+0x4640>
   15e54:	add	r3, pc, r2
   15e58:	movw	r2, #143	; 0x8f
   15e5c:	bl	1169c <__assert_fail@plt>
   15e60:	ldr	r0, [sp, #8]
   15e64:	movw	r1, #0
   15e68:	cmp	r0, r1
   15e6c:	beq	15e74 <sprintf@plt+0x4550>
   15e70:	b	15e94 <sprintf@plt+0x4570>
   15e74:	ldr	r0, [pc, #236]	; 15f68 <sprintf@plt+0x4644>
   15e78:	add	r0, pc, r0
   15e7c:	ldr	r1, [pc, #232]	; 15f6c <sprintf@plt+0x4648>
   15e80:	add	r1, pc, r1
   15e84:	ldr	r2, [pc, #228]	; 15f70 <sprintf@plt+0x464c>
   15e88:	add	r3, pc, r2
   15e8c:	movw	r2, #144	; 0x90
   15e90:	bl	1169c <__assert_fail@plt>
   15e94:	ldr	r0, [sp, #4]
   15e98:	movw	r1, #0
   15e9c:	cmp	r0, r1
   15ea0:	beq	15ea8 <sprintf@plt+0x4584>
   15ea4:	b	15ec8 <sprintf@plt+0x45a4>
   15ea8:	ldr	r0, [pc, #196]	; 15f74 <sprintf@plt+0x4650>
   15eac:	add	r0, pc, r0
   15eb0:	ldr	r1, [pc, #192]	; 15f78 <sprintf@plt+0x4654>
   15eb4:	add	r1, pc, r1
   15eb8:	ldr	r2, [pc, #188]	; 15f7c <sprintf@plt+0x4658>
   15ebc:	add	r3, pc, r2
   15ec0:	movw	r2, #145	; 0x91
   15ec4:	bl	1169c <__assert_fail@plt>
   15ec8:	ldr	r0, [fp, #-4]
   15ecc:	ldr	r1, [sp, #8]
   15ed0:	str	r0, [r1]
   15ed4:	ldr	r0, [sp, #8]
   15ed8:	movw	r1, #0
   15edc:	str	r1, [r0, #4]
   15ee0:	ldr	r0, [sp, #4]
   15ee4:	ldr	r0, [r0]
   15ee8:	ldr	r2, [sp, #8]
   15eec:	str	r0, [r2, #8]
   15ef0:	ldr	r0, [sp, #4]
   15ef4:	ldr	r0, [r0]
   15ef8:	cmp	r0, r1
   15efc:	beq	15f14 <sprintf@plt+0x45f0>
   15f00:	ldr	r0, [sp, #8]
   15f04:	ldr	r1, [sp, #4]
   15f08:	ldr	r1, [r1]
   15f0c:	str	r0, [r1, #4]
   15f10:	b	15f38 <sprintf@plt+0x4614>
   15f14:	ldr	r0, [sp, #4]
   15f18:	ldr	r0, [r0, #4]
   15f1c:	movw	r1, #0
   15f20:	cmp	r0, r1
   15f24:	bne	15f34 <sprintf@plt+0x4610>
   15f28:	ldr	r0, [sp, #8]
   15f2c:	ldr	r1, [sp, #4]
   15f30:	str	r0, [r1, #4]
   15f34:	b	15f38 <sprintf@plt+0x4614>
   15f38:	ldr	r0, [sp, #8]
   15f3c:	ldr	r1, [sp, #4]
   15f40:	str	r0, [r1]
   15f44:	ldr	r0, [sp, #4]
   15f48:	ldr	r1, [r0, #8]
   15f4c:	add	r1, r1, #1
   15f50:	str	r1, [r0, #8]
   15f54:	mov	sp, fp
   15f58:	pop	{fp, pc}
   15f5c:	andeq	r8, r0, r3, ror #29
   15f60:	andeq	r8, r0, ip, ror lr
   15f64:	andeq	r8, r0, r0, ror #29
   15f68:	andeq	r9, r0, sp, asr r3
   15f6c:	andeq	r8, r0, r8, asr #28
   15f70:	andeq	r8, r0, ip, lsr #29
   15f74:	andeq	r8, r0, lr, ror #28
   15f78:	andeq	r8, r0, r4, lsl lr
   15f7c:	andeq	r8, r0, r8, ror lr
   15f80:	push	{fp, lr}
   15f84:	mov	fp, sp
   15f88:	sub	sp, sp, #64	; 0x40
   15f8c:	ldr	r3, [pc, #652]	; 16220 <sprintf@plt+0x48fc>
   15f90:	add	r3, pc, r3
   15f94:	str	r0, [fp, #-8]
   15f98:	str	r1, [fp, #-12]
   15f9c:	str	r2, [fp, #-16]
   15fa0:	ldr	r0, [r3]
   15fa4:	add	r0, r0, #1
   15fa8:	str	r0, [r3]
   15fac:	movw	r0, #0
   15fb0:	str	r0, [fp, #-20]	; 0xffffffec
   15fb4:	ldr	r0, [pc, #616]	; 16224 <sprintf@plt+0x4900>
   15fb8:	ldr	r0, [pc, r0]
   15fbc:	ldr	r1, [fp, #-20]	; 0xffffffec
   15fc0:	ldr	r0, [r0]
   15fc4:	cmp	r1, r0
   15fc8:	bge	160fc <sprintf@plt+0x47d8>
   15fcc:	ldr	r0, [pc, #608]	; 16234 <sprintf@plt+0x4910>
   15fd0:	add	r0, pc, r0
   15fd4:	ldr	r1, [fp, #-20]	; 0xffffffec
   15fd8:	ldr	r2, [fp, #-16]
   15fdc:	add	r1, r1, r2
   15fe0:	sub	r1, r1, #1
   15fe4:	ldr	r2, [pc, #592]	; 1623c <sprintf@plt+0x4918>
   15fe8:	ldr	r2, [pc, r2]
   15fec:	ldr	r2, [r2]
   15ff0:	sdiv	r3, r1, r2
   15ff4:	mls	r1, r3, r2, r1
   15ff8:	str	r1, [fp, #-24]	; 0xffffffe8
   15ffc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16000:	ldr	r2, [pc, #568]	; 16240 <sprintf@plt+0x491c>
   16004:	add	r2, pc, r2
   16008:	add	r1, r2, r1, lsl #2
   1600c:	ldr	r1, [r1]
   16010:	cmp	r1, #0
   16014:	str	r0, [fp, #-28]	; 0xffffffe4
   16018:	beq	16060 <sprintf@plt+0x473c>
   1601c:	ldr	r0, [pc, #544]	; 16244 <sprintf@plt+0x4920>
   16020:	ldr	r0, [pc, r0]
   16024:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16028:	ldr	r2, [pc, #536]	; 16248 <sprintf@plt+0x4924>
   1602c:	add	r2, pc, r2
   16030:	ldr	r1, [r2, r1, lsl #2]
   16034:	str	r0, [sp, #32]
   16038:	mov	r0, r1
   1603c:	bl	16264 <sprintf@plt+0x4940>
   16040:	mov	r1, r0
   16044:	ldr	r2, [sp, #32]
   16048:	sdiv	lr, r2, r0
   1604c:	mls	r0, lr, r0, r2
   16050:	cmp	r0, #0
   16054:	str	r1, [sp, #28]
   16058:	beq	16060 <sprintf@plt+0x473c>
   1605c:	b	160ec <sprintf@plt+0x47c8>
   16060:	ldr	r0, [pc, #464]	; 16238 <sprintf@plt+0x4914>
   16064:	ldr	r0, [pc, r0]
   16068:	ldr	r1, [pc, #476]	; 1624c <sprintf@plt+0x4928>
   1606c:	ldr	r1, [pc, r1]
   16070:	str	r0, [sp, #24]
   16074:	mov	r0, r1
   16078:	bl	115b8 <rb_get_fd@plt>
   1607c:	ldr	r1, [fp, #-8]
   16080:	ldr	r2, [fp, #-12]
   16084:	ldr	lr, [fp, #-24]	; 0xffffffe8
   16088:	ldr	r3, [pc, #448]	; 16250 <sprintf@plt+0x492c>
   1608c:	ldr	r3, [pc, r3]
   16090:	add	r3, r3, lr, lsl #7
   16094:	mov	lr, r3
   16098:	ldrh	r3, [r3]
   1609c:	cmp	r3, #2
   160a0:	movw	r3, #0
   160a4:	moveq	r3, #1
   160a8:	tst	r3, #1
   160ac:	movw	r3, #16
   160b0:	moveq	r3, #28
   160b4:	movw	ip, #0
   160b8:	str	r3, [sp, #20]
   160bc:	mov	r3, ip
   160c0:	str	lr, [sp]
   160c4:	ldr	ip, [sp, #20]
   160c8:	str	ip, [sp, #4]
   160cc:	bl	11648 <sendto@plt>
   160d0:	ldr	r1, [fp, #-12]
   160d4:	cmp	r0, r1
   160d8:	bne	160e8 <sprintf@plt+0x47c4>
   160dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   160e0:	str	r0, [fp, #-4]
   160e4:	b	16214 <sprintf@plt+0x48f0>
   160e8:	b	160ec <sprintf@plt+0x47c8>
   160ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   160f0:	add	r0, r0, #1
   160f4:	str	r0, [fp, #-20]	; 0xffffffec
   160f8:	b	15fb4 <sprintf@plt+0x4690>
   160fc:	movw	r0, #0
   16100:	str	r0, [fp, #-20]	; 0xffffffec
   16104:	ldr	r0, [pc, #284]	; 16228 <sprintf@plt+0x4904>
   16108:	ldr	r0, [pc, r0]
   1610c:	ldr	r1, [fp, #-20]	; 0xffffffec
   16110:	ldr	r0, [r0]
   16114:	cmp	r1, r0
   16118:	bge	1620c <sprintf@plt+0x48e8>
   1611c:	ldr	r0, [pc, #264]	; 1622c <sprintf@plt+0x4908>
   16120:	add	r0, pc, r0
   16124:	ldr	r1, [fp, #-20]	; 0xffffffec
   16128:	ldr	r2, [fp, #-16]
   1612c:	add	r1, r1, r2
   16130:	sub	r1, r1, #1
   16134:	ldr	r2, [pc, #280]	; 16254 <sprintf@plt+0x4930>
   16138:	ldr	r2, [pc, r2]
   1613c:	ldr	r2, [r2]
   16140:	sdiv	r3, r1, r2
   16144:	mls	r1, r3, r2, r1
   16148:	str	r1, [fp, #-24]	; 0xffffffe8
   1614c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16150:	ldr	r2, [pc, #256]	; 16258 <sprintf@plt+0x4934>
   16154:	add	r2, pc, r2
   16158:	add	r1, r2, r1, lsl #2
   1615c:	ldr	r1, [r1]
   16160:	cmp	r1, #0
   16164:	str	r0, [sp, #16]
   16168:	bne	16170 <sprintf@plt+0x484c>
   1616c:	b	161fc <sprintf@plt+0x48d8>
   16170:	ldr	r0, [pc, #184]	; 16230 <sprintf@plt+0x490c>
   16174:	ldr	r0, [pc, r0]
   16178:	ldr	r1, [pc, #220]	; 1625c <sprintf@plt+0x4938>
   1617c:	ldr	r1, [pc, r1]
   16180:	str	r0, [sp, #12]
   16184:	mov	r0, r1
   16188:	bl	115b8 <rb_get_fd@plt>
   1618c:	ldr	r1, [fp, #-8]
   16190:	ldr	r2, [fp, #-12]
   16194:	ldr	lr, [fp, #-24]	; 0xffffffe8
   16198:	ldr	r3, [pc, #192]	; 16260 <sprintf@plt+0x493c>
   1619c:	ldr	r3, [pc, r3]
   161a0:	add	r3, r3, lr, lsl #7
   161a4:	mov	lr, r3
   161a8:	ldrh	r3, [r3]
   161ac:	cmp	r3, #2
   161b0:	movw	r3, #0
   161b4:	moveq	r3, #1
   161b8:	tst	r3, #1
   161bc:	movw	r3, #16
   161c0:	moveq	r3, #28
   161c4:	movw	ip, #0
   161c8:	str	r3, [sp, #8]
   161cc:	mov	r3, ip
   161d0:	str	lr, [sp]
   161d4:	ldr	ip, [sp, #8]
   161d8:	str	ip, [sp, #4]
   161dc:	bl	11648 <sendto@plt>
   161e0:	ldr	r1, [fp, #-12]
   161e4:	cmp	r0, r1
   161e8:	bne	161f8 <sprintf@plt+0x48d4>
   161ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   161f0:	str	r0, [fp, #-4]
   161f4:	b	16214 <sprintf@plt+0x48f0>
   161f8:	b	161fc <sprintf@plt+0x48d8>
   161fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   16200:	add	r0, r0, #1
   16204:	str	r0, [fp, #-20]	; 0xffffffec
   16208:	b	16104 <sprintf@plt+0x47e0>
   1620c:	mvn	r0, #0
   16210:	str	r0, [fp, #-4]
   16214:	ldr	r0, [fp, #-4]
   16218:	mov	sp, fp
   1621c:	pop	{fp, pc}
   16220:	strheq	pc, [r1], -r0	; <UNPREDICTABLE>
   16224:			; <UNDEFINED> instruction: 0x0001a1bc
   16228:	andeq	sl, r1, ip, rrx
   1622c:	andeq	lr, r1, ip, ror #29
   16230:	andeq	sl, r1, ip
   16234:	andeq	pc, r1, ip, lsr r0	; <UNPREDICTABLE>
   16238:	andeq	sl, r1, ip, lsl r1
   1623c:	andeq	sl, r1, ip, lsl #3
   16240:	andeq	pc, r1, r8
   16244:	andeq	pc, r1, r0, lsr #32
   16248:	andeq	lr, r1, r0, ror #31
   1624c:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   16250:	strdeq	sl, [r1], -r4
   16254:	andeq	sl, r1, ip, lsr r0
   16258:			; <UNDEFINED> instruction: 0x0001eeb8
   1625c:	andeq	lr, r1, r8, lsl #29
   16260:	andeq	r9, r1, r4, ror #31
   16264:	sub	sp, sp, #12
   16268:	str	r0, [sp, #4]
   1626c:	ldr	r0, [sp, #4]
   16270:	sub	r0, r0, #1
   16274:	cmp	r0, #3
   16278:	str	r0, [sp]
   1627c:	bhi	162d0 <sprintf@plt+0x49ac>
   16280:	add	r0, pc, #8
   16284:	ldr	r1, [sp]
   16288:	ldr	r2, [r0, r1, lsl #2]
   1628c:	add	pc, r0, r2
   16290:	andeq	r0, r0, r0, lsl r0
   16294:	andeq	r0, r0, ip, lsl r0
   16298:	andeq	r0, r0, r8, lsr #32
   1629c:	andeq	r0, r0, r4, lsr r0
   162a0:	movw	r0, #3
   162a4:	str	r0, [sp, #8]
   162a8:	b	162d8 <sprintf@plt+0x49b4>
   162ac:	movw	r0, #9
   162b0:	str	r0, [sp, #8]
   162b4:	b	162d8 <sprintf@plt+0x49b4>
   162b8:	movw	r0, #27
   162bc:	str	r0, [sp, #8]
   162c0:	b	162d8 <sprintf@plt+0x49b4>
   162c4:	movw	r0, #81	; 0x51
   162c8:	str	r0, [sp, #8]
   162cc:	b	162d8 <sprintf@plt+0x49b4>
   162d0:	movw	r0, #243	; 0xf3
   162d4:	str	r0, [sp, #8]
   162d8:	ldr	r0, [sp, #8]
   162dc:	add	sp, sp, #12
   162e0:	bx	lr
   162e4:	push	{fp, lr}
   162e8:	mov	fp, sp
   162ec:	sub	sp, sp, #8
   162f0:	str	r0, [sp, #4]
   162f4:	str	r1, [sp]
   162f8:	ldr	r0, [sp, #4]
   162fc:	movw	r1, #0
   16300:	cmp	r0, r1
   16304:	beq	1630c <sprintf@plt+0x49e8>
   16308:	b	1632c <sprintf@plt+0x4a08>
   1630c:	ldr	r0, [pc, #244]	; 16408 <sprintf@plt+0x4ae4>
   16310:	add	r0, pc, r0
   16314:	ldr	r1, [pc, #240]	; 1640c <sprintf@plt+0x4ae8>
   16318:	add	r1, pc, r1
   1631c:	ldr	r2, [pc, #236]	; 16410 <sprintf@plt+0x4aec>
   16320:	add	r3, pc, r2
   16324:	movw	r2, #235	; 0xeb
   16328:	bl	1169c <__assert_fail@plt>
   1632c:	ldr	r0, [sp]
   16330:	movw	r1, #0
   16334:	cmp	r0, r1
   16338:	beq	16340 <sprintf@plt+0x4a1c>
   1633c:	b	16360 <sprintf@plt+0x4a3c>
   16340:	ldr	r0, [pc, #204]	; 16414 <sprintf@plt+0x4af0>
   16344:	add	r0, pc, r0
   16348:	ldr	r1, [pc, #200]	; 16418 <sprintf@plt+0x4af4>
   1634c:	add	r1, pc, r1
   16350:	ldr	r2, [pc, #196]	; 1641c <sprintf@plt+0x4af8>
   16354:	add	r3, pc, r2
   16358:	movw	r2, #236	; 0xec
   1635c:	bl	1169c <__assert_fail@plt>
   16360:	ldr	r0, [sp, #4]
   16364:	ldr	r0, [r0, #8]
   16368:	movw	r1, #0
   1636c:	cmp	r0, r1
   16370:	beq	1638c <sprintf@plt+0x4a68>
   16374:	ldr	r0, [sp, #4]
   16378:	ldr	r0, [r0, #4]
   1637c:	ldr	r1, [sp, #4]
   16380:	ldr	r1, [r1, #8]
   16384:	str	r0, [r1, #4]
   16388:	b	1639c <sprintf@plt+0x4a78>
   1638c:	ldr	r0, [sp, #4]
   16390:	ldr	r0, [r0, #4]
   16394:	ldr	r1, [sp]
   16398:	str	r0, [r1, #4]
   1639c:	ldr	r0, [sp, #4]
   163a0:	ldr	r0, [r0, #4]
   163a4:	movw	r1, #0
   163a8:	cmp	r0, r1
   163ac:	beq	163c8 <sprintf@plt+0x4aa4>
   163b0:	ldr	r0, [sp, #4]
   163b4:	ldr	r0, [r0, #8]
   163b8:	ldr	r1, [sp, #4]
   163bc:	ldr	r1, [r1, #4]
   163c0:	str	r0, [r1, #8]
   163c4:	b	163d8 <sprintf@plt+0x4ab4>
   163c8:	ldr	r0, [sp, #4]
   163cc:	ldr	r0, [r0, #8]
   163d0:	ldr	r1, [sp]
   163d4:	str	r0, [r1]
   163d8:	ldr	r0, [sp, #4]
   163dc:	movw	r1, #0
   163e0:	str	r1, [r0, #4]
   163e4:	ldr	r0, [sp, #4]
   163e8:	str	r1, [r0, #8]
   163ec:	ldr	r0, [sp]
   163f0:	ldr	r1, [r0, #8]
   163f4:	mvn	r2, #0
   163f8:	add	r1, r1, r2
   163fc:	str	r1, [r0, #8]
   16400:	mov	sp, fp
   16404:	pop	{fp, pc}
   16408:	andeq	r8, r0, r5, asr #29
   1640c:			; <UNDEFINED> instruction: 0x000089b0
   16410:	andeq	r8, r0, r4, asr #19
   16414:	ldrdeq	r8, [r0], -r6
   16418:	andeq	r8, r0, ip, ror r9
   1641c:	muleq	r0, r0, r9
   16420:	push	{fp, lr}
   16424:	mov	fp, sp
   16428:	sub	sp, sp, #40	; 0x28
   1642c:	ldr	r1, [pc, #388]	; 165b8 <sprintf@plt+0x4c94>
   16430:	add	r1, pc, r1
   16434:	str	r0, [fp, #-4]
   16438:	movw	r0, #0
   1643c:	str	r0, [sp, #20]
   16440:	str	r0, [sp, #16]
   16444:	ldr	r1, [r1]
   16448:	str	r1, [fp, #-8]
   1644c:	ldr	r1, [fp, #-8]
   16450:	cmp	r1, r0
   16454:	beq	16468 <sprintf@plt+0x4b44>
   16458:	ldr	r0, [fp, #-8]
   1645c:	ldr	r0, [r0, #8]
   16460:	str	r0, [sp, #12]
   16464:	b	16474 <sprintf@plt+0x4b50>
   16468:	movw	r0, #0
   1646c:	str	r0, [sp, #12]
   16470:	b	16474 <sprintf@plt+0x4b50>
   16474:	ldr	r0, [sp, #12]
   16478:	str	r0, [fp, #-12]
   1647c:	ldr	r0, [fp, #-8]
   16480:	movw	r1, #0
   16484:	cmp	r0, r1
   16488:	beq	16584 <sprintf@plt+0x4c60>
   1648c:	ldr	r0, [fp, #-8]
   16490:	ldr	r0, [r0]
   16494:	str	r0, [fp, #-16]
   16498:	ldr	r0, [fp, #-16]
   1649c:	ldr	r0, [r0, #280]	; 0x118
   164a0:	ldr	r1, [fp, #-16]
   164a4:	ldr	r1, [r1, #284]	; 0x11c
   164a8:	add	r0, r0, r1
   164ac:	str	r0, [sp, #16]
   164b0:	ldr	r0, [fp, #-4]
   164b4:	ldr	r1, [sp, #16]
   164b8:	cmp	r0, r1
   164bc:	blt	1651c <sprintf@plt+0x4bf8>
   164c0:	ldr	r0, [pc, #244]	; 165bc <sprintf@plt+0x4c98>
   164c4:	add	r0, pc, r0
   164c8:	ldr	r1, [fp, #-16]
   164cc:	ldr	r1, [r1, #288]	; 0x120
   164d0:	ldr	r2, [pc, #232]	; 165c0 <sprintf@plt+0x4c9c>
   164d4:	add	r2, pc, r2
   164d8:	add	r1, r2, r1, lsl #2
   164dc:	ldr	r2, [r1]
   164e0:	add	r2, r2, #1
   164e4:	str	r2, [r1]
   164e8:	ldr	r1, [fp, #-4]
   164ec:	ldr	r2, [fp, #-16]
   164f0:	str	r1, [r2, #280]	; 0x118
   164f4:	ldr	r1, [fp, #-16]
   164f8:	ldr	r1, [r1, #284]	; 0x11c
   164fc:	ldr	r2, [fp, #-16]
   16500:	ldr	r3, [r2, #284]	; 0x11c
   16504:	add	r1, r3, r1
   16508:	str	r1, [r2, #284]	; 0x11c
   1650c:	ldr	r1, [fp, #-16]
   16510:	str	r0, [sp, #8]
   16514:	mov	r0, r1
   16518:	bl	1542c <sprintf@plt+0x3b08>
   1651c:	ldr	r0, [sp, #20]
   16520:	cmp	r0, #0
   16524:	beq	16538 <sprintf@plt+0x4c14>
   16528:	ldr	r0, [sp, #16]
   1652c:	ldr	r1, [sp, #20]
   16530:	cmp	r0, r1
   16534:	bge	16540 <sprintf@plt+0x4c1c>
   16538:	ldr	r0, [sp, #16]
   1653c:	str	r0, [sp, #20]
   16540:	b	16544 <sprintf@plt+0x4c20>
   16544:	ldr	r0, [fp, #-12]
   16548:	str	r0, [fp, #-8]
   1654c:	ldr	r0, [fp, #-8]
   16550:	movw	r1, #0
   16554:	cmp	r0, r1
   16558:	beq	1656c <sprintf@plt+0x4c48>
   1655c:	ldr	r0, [fp, #-8]
   16560:	ldr	r0, [r0, #8]
   16564:	str	r0, [sp, #4]
   16568:	b	16578 <sprintf@plt+0x4c54>
   1656c:	movw	r0, #0
   16570:	str	r0, [sp, #4]
   16574:	b	16578 <sprintf@plt+0x4c54>
   16578:	ldr	r0, [sp, #4]
   1657c:	str	r0, [fp, #-12]
   16580:	b	1647c <sprintf@plt+0x4b58>
   16584:	ldr	r0, [sp, #20]
   16588:	ldr	r1, [fp, #-4]
   1658c:	cmp	r0, r1
   16590:	ble	165a0 <sprintf@plt+0x4c7c>
   16594:	ldr	r0, [sp, #20]
   16598:	str	r0, [sp]
   1659c:	b	165ac <sprintf@plt+0x4c88>
   165a0:	ldr	r0, [fp, #-4]
   165a4:	add	r0, r0, #600	; 0x258
   165a8:	str	r0, [sp]
   165ac:	ldr	r0, [sp]
   165b0:	mov	sp, fp
   165b4:	pop	{fp, pc}
   165b8:	andeq	lr, r1, r4, lsl #24
   165bc:	andeq	lr, r1, r8, asr #22
   165c0:	andeq	lr, r1, r8, lsr fp
   165c4:	push	{fp, lr}
   165c8:	mov	fp, sp
   165cc:	sub	sp, sp, #8
   165d0:	ldr	r0, [pc, #64]	; 16618 <sprintf@plt+0x4cf4>
   165d4:	ldr	r0, [pc, r0]
   165d8:	movw	r1, #0
   165dc:	str	r1, [r0]
   165e0:	bl	16620 <sprintf@plt+0x4cfc>
   165e4:	ldr	r1, [pc, #40]	; 16614 <sprintf@plt+0x4cf0>
   165e8:	ldr	r1, [pc, r1]
   165ec:	ldr	r1, [r1]
   165f0:	cmp	r1, #0
   165f4:	str	r0, [sp, #4]
   165f8:	bne	16608 <sprintf@plt+0x4ce4>
   165fc:	ldr	r0, [pc, #24]	; 1661c <sprintf@plt+0x4cf8>
   16600:	add	r0, pc, r0
   16604:	bl	168c4 <sprintf@plt+0x4fa0>
   16608:	movw	r0, #0
   1660c:	mov	sp, fp
   16610:	pop	{fp, pc}
   16614:	andeq	r9, r1, ip, lsl #23
   16618:	andeq	r9, r1, r0, lsr #23
   1661c:	andeq	r8, r0, sl, ror #18
   16620:	push	{fp, lr}
   16624:	mov	fp, sp
   16628:	sub	sp, sp, #176	; 0xb0
   1662c:	ldr	r0, [pc, #628]	; 168a8 <sprintf@plt+0x4f84>
   16630:	add	r0, pc, r0
   16634:	ldr	r1, [pc, #624]	; 168ac <sprintf@plt+0x4f88>
   16638:	add	r1, pc, r1
   1663c:	bl	11660 <fopen@plt>
   16640:	str	r0, [sp, #28]
   16644:	movw	r1, #0
   16648:	cmp	r0, r1
   1664c:	bne	1665c <sprintf@plt+0x4d38>
   16650:	mvn	r0, #0
   16654:	str	r0, [fp, #-4]
   16658:	b	1689c <sprintf@plt+0x4f78>
   1665c:	b	16660 <sprintf@plt+0x4d3c>
   16660:	add	r0, sp, #32
   16664:	ldr	r2, [sp, #28]
   16668:	movw	r1, #128	; 0x80
   1666c:	bl	115f4 <fgets@plt>
   16670:	movw	r1, #0
   16674:	cmp	r0, r1
   16678:	beq	16888 <sprintf@plt+0x4f64>
   1667c:	ldr	r0, [pc, #556]	; 168b0 <sprintf@plt+0x4f8c>
   16680:	add	r1, pc, r0
   16684:	add	r0, sp, #32
   16688:	bl	118f4 <strpbrk@plt>
   1668c:	str	r0, [fp, #-8]
   16690:	movw	r1, #0
   16694:	cmp	r0, r1
   16698:	beq	166a8 <sprintf@plt+0x4d84>
   1669c:	ldr	r0, [fp, #-8]
   166a0:	movw	r1, #0
   166a4:	strb	r1, [r0]
   166a8:	add	r0, sp, #32
   166ac:	str	r0, [fp, #-8]
   166b0:	bl	117f8 <__ctype_b_loc@plt>
   166b4:	ldr	r0, [r0]
   166b8:	ldr	lr, [fp, #-8]
   166bc:	ldrb	lr, [lr]
   166c0:	mov	r1, lr
   166c4:	add	r0, r0, lr, lsl #1
   166c8:	ldrh	r0, [r0]
   166cc:	and	r0, r0, #8192	; 0x2000
   166d0:	cmp	r0, #0
   166d4:	str	r1, [sp, #24]
   166d8:	beq	166ec <sprintf@plt+0x4dc8>
   166dc:	ldr	r0, [fp, #-8]
   166e0:	add	r0, r0, #1
   166e4:	str	r0, [fp, #-8]
   166e8:	b	166b0 <sprintf@plt+0x4d8c>
   166ec:	ldr	r0, [fp, #-8]
   166f0:	ldrb	r0, [r0]
   166f4:	cmp	r0, #0
   166f8:	bne	16700 <sprintf@plt+0x4ddc>
   166fc:	b	16660 <sprintf@plt+0x4d3c>
   16700:	ldr	r0, [fp, #-8]
   16704:	ldrb	r0, [r0]
   16708:	cmp	r0, #35	; 0x23
   1670c:	beq	16720 <sprintf@plt+0x4dfc>
   16710:	ldr	r0, [fp, #-8]
   16714:	ldrb	r0, [r0]
   16718:	cmp	r0, #59	; 0x3b
   1671c:	bne	16724 <sprintf@plt+0x4e00>
   16720:	b	16660 <sprintf@plt+0x4d3c>
   16724:	ldr	r0, [fp, #-8]
   16728:	str	r0, [fp, #-12]
   1672c:	bl	117f8 <__ctype_b_loc@plt>
   16730:	ldr	r0, [r0]
   16734:	ldr	lr, [fp, #-8]
   16738:	ldrb	lr, [lr]
   1673c:	mov	r1, lr
   16740:	add	r0, r0, lr, lsl #1
   16744:	ldrh	r0, [r0]
   16748:	and	r0, r0, #8192	; 0x2000
   1674c:	cmp	r0, #0
   16750:	movw	r0, #0
   16754:	str	r1, [sp, #20]
   16758:	str	r0, [sp, #16]
   1675c:	bne	16778 <sprintf@plt+0x4e54>
   16760:	ldr	r0, [fp, #-8]
   16764:	ldrb	r0, [r0]
   16768:	cmp	r0, #0
   1676c:	movw	r0, #0
   16770:	movne	r0, #1
   16774:	str	r0, [sp, #16]
   16778:	ldr	r0, [sp, #16]
   1677c:	tst	r0, #1
   16780:	beq	16794 <sprintf@plt+0x4e70>
   16784:	ldr	r0, [fp, #-8]
   16788:	add	r0, r0, #1
   1678c:	str	r0, [fp, #-8]
   16790:	b	1672c <sprintf@plt+0x4e08>
   16794:	ldr	r0, [fp, #-8]
   16798:	ldrb	r0, [r0]
   1679c:	cmp	r0, #0
   167a0:	bne	167a8 <sprintf@plt+0x4e84>
   167a4:	b	16660 <sprintf@plt+0x4d3c>
   167a8:	ldr	r0, [fp, #-8]
   167ac:	add	r1, r0, #1
   167b0:	str	r1, [fp, #-8]
   167b4:	movw	r1, #0
   167b8:	strb	r1, [r0]
   167bc:	bl	117f8 <__ctype_b_loc@plt>
   167c0:	ldr	r0, [r0]
   167c4:	ldr	lr, [fp, #-8]
   167c8:	ldrb	lr, [lr]
   167cc:	mov	r1, lr
   167d0:	add	r0, r0, lr, lsl #1
   167d4:	ldrh	r0, [r0]
   167d8:	and	r0, r0, #8192	; 0x2000
   167dc:	cmp	r0, #0
   167e0:	str	r1, [sp, #12]
   167e4:	beq	167f8 <sprintf@plt+0x4ed4>
   167e8:	ldr	r0, [fp, #-8]
   167ec:	add	r0, r0, #1
   167f0:	str	r0, [fp, #-8]
   167f4:	b	167bc <sprintf@plt+0x4e98>
   167f8:	ldr	r0, [pc, #180]	; 168b4 <sprintf@plt+0x4f90>
   167fc:	add	r1, pc, r0
   16800:	ldr	r0, [fp, #-8]
   16804:	str	r0, [fp, #-16]
   16808:	ldr	r0, [fp, #-16]
   1680c:	bl	118f4 <strpbrk@plt>
   16810:	str	r0, [fp, #-8]
   16814:	movw	r1, #0
   16818:	cmp	r0, r1
   1681c:	beq	1682c <sprintf@plt+0x4f08>
   16820:	ldr	r0, [fp, #-8]
   16824:	movw	r1, #0
   16828:	strb	r1, [r0]
   1682c:	ldr	r0, [pc, #132]	; 168b8 <sprintf@plt+0x4f94>
   16830:	add	r1, pc, r0
   16834:	ldr	r0, [fp, #-12]
   16838:	bl	116f0 <rb_strcasecmp@plt>
   1683c:	cmp	r0, #0
   16840:	bne	16860 <sprintf@plt+0x4f3c>
   16844:	ldr	r0, [pc, #116]	; 168c0 <sprintf@plt+0x4f9c>
   16848:	ldr	r0, [pc, r0]
   1684c:	ldr	r1, [fp, #-16]
   16850:	movw	r2, #256	; 0x100
   16854:	bl	116a8 <rb_strlcpy@plt>
   16858:	str	r0, [sp, #8]
   1685c:	b	16884 <sprintf@plt+0x4f60>
   16860:	ldr	r0, [pc, #84]	; 168bc <sprintf@plt+0x4f98>
   16864:	add	r1, pc, r0
   16868:	ldr	r0, [fp, #-12]
   1686c:	bl	116f0 <rb_strcasecmp@plt>
   16870:	cmp	r0, #0
   16874:	bne	16880 <sprintf@plt+0x4f5c>
   16878:	ldr	r0, [fp, #-16]
   1687c:	bl	168c4 <sprintf@plt+0x4fa0>
   16880:	b	16884 <sprintf@plt+0x4f60>
   16884:	b	16660 <sprintf@plt+0x4d3c>
   16888:	ldr	r0, [sp, #28]
   1688c:	bl	115e8 <fclose@plt>
   16890:	movw	lr, #0
   16894:	str	lr, [fp, #-4]
   16898:	str	r0, [sp, #4]
   1689c:	ldr	r0, [fp, #-4]
   168a0:	mov	sp, fp
   168a4:	pop	{fp, pc}
   168a8:	andeq	r8, r0, r4, asr #18
   168ac:	andeq	r8, r0, r2, lsr #31
   168b0:	ldrdeq	r9, [r0], -r7
   168b4:	andeq	r8, r0, r9, lsl #15
   168b8:	andeq	r8, r0, r8, asr r7
   168bc:	andeq	r8, r0, fp, lsr #14
   168c0:	andeq	r9, r1, r0, lsr r9
   168c4:	push	{r4, sl, fp, lr}
   168c8:	add	fp, sp, #8
   168cc:	sub	sp, sp, #72	; 0x48
   168d0:	ldr	r1, [pc, #292]	; 169fc <sprintf@plt+0x50d8>
   168d4:	ldr	r1, [pc, r1]
   168d8:	str	r0, [fp, #-12]
   168dc:	ldr	r0, [r1]
   168e0:	cmp	r0, #10
   168e4:	blt	168ec <sprintf@plt+0x4fc8>
   168e8:	b	169f4 <sprintf@plt+0x50d0>
   168ec:	ldr	r0, [pc, #268]	; 16a00 <sprintf@plt+0x50dc>
   168f0:	add	r1, pc, r0
   168f4:	add	r0, sp, #36	; 0x24
   168f8:	mov	r2, r0
   168fc:	str	r0, [sp, #28]
   16900:	mov	r0, r2
   16904:	movw	r2, #0
   16908:	and	r2, r2, #255	; 0xff
   1690c:	str	r1, [sp, #24]
   16910:	mov	r1, r2
   16914:	movw	r2, #32
   16918:	bl	1166c <memset@plt>
   1691c:	movw	r0, #0
   16920:	str	r0, [sp, #40]	; 0x28
   16924:	movw	r0, #2
   16928:	str	r0, [sp, #44]	; 0x2c
   1692c:	movw	r0, #5
   16930:	str	r0, [sp, #36]	; 0x24
   16934:	ldr	r0, [fp, #-12]
   16938:	ldr	r1, [sp, #24]
   1693c:	ldr	r2, [sp, #28]
   16940:	add	r3, sp, #32
   16944:	bl	116fc <getaddrinfo@plt>
   16948:	cmp	r0, #0
   1694c:	beq	16954 <sprintf@plt+0x5030>
   16950:	b	169f4 <sprintf@plt+0x50d0>
   16954:	ldr	r0, [sp, #32]
   16958:	movw	r1, #0
   1695c:	cmp	r0, r1
   16960:	bne	16968 <sprintf@plt+0x5044>
   16964:	b	169f4 <sprintf@plt+0x50d0>
   16968:	ldr	r0, [pc, #148]	; 16a04 <sprintf@plt+0x50e0>
   1696c:	ldr	r0, [pc, r0]
   16970:	ldr	r1, [pc, #144]	; 16a08 <sprintf@plt+0x50e4>
   16974:	ldr	r1, [pc, r1]
   16978:	ldr	r2, [pc, #140]	; 16a0c <sprintf@plt+0x50e8>
   1697c:	ldr	r2, [pc, r2]
   16980:	ldr	r3, [r2]
   16984:	ldr	ip, [pc, #132]	; 16a10 <sprintf@plt+0x50ec>
   16988:	ldr	ip, [pc, ip]
   1698c:	add	r3, ip, r3, lsl #7
   16990:	ldr	lr, [sp, #32]
   16994:	ldr	r4, [lr, #16]
   16998:	ldr	lr, [lr, #20]
   1699c:	str	r0, [sp, #20]
   169a0:	mov	r0, r3
   169a4:	str	r1, [sp, #16]
   169a8:	mov	r1, lr
   169ac:	str	r2, [sp, #12]
   169b0:	mov	r2, r4
   169b4:	str	ip, [sp, #8]
   169b8:	bl	11750 <memcpy@plt>
   169bc:	ldr	r1, [sp, #12]
   169c0:	ldr	r2, [r1]
   169c4:	lsl	r2, r2, #7
   169c8:	ldr	r3, [sp, #8]
   169cc:	ldrh	r2, [r3, r2]!	; <UNPREDICTABLE>
   169d0:	strh	r2, [r3]
   169d4:	ldr	r2, [sp, #20]
   169d8:	ldr	r3, [r2]
   169dc:	add	r3, r3, #1
   169e0:	str	r3, [r2]
   169e4:	ldr	r3, [sp, #32]
   169e8:	str	r0, [sp, #4]
   169ec:	mov	r0, r3
   169f0:	bl	11678 <freeaddrinfo@plt>
   169f4:	sub	sp, fp, #8
   169f8:	pop	{r4, sl, fp, pc}
   169fc:	andeq	r9, r1, r0, lsr #17
   16a00:	muleq	r0, r8, r6
   16a04:	andeq	r9, r1, r8, lsl #16
   16a08:	andeq	r9, r1, ip, lsl #16
   16a0c:	strdeq	r9, [r1], -r8
   16a10:	strdeq	r9, [r1], -r8
   16a14:	push	{fp, lr}
   16a18:	mov	fp, sp
   16a1c:	sub	sp, sp, #32
   16a20:	ldr	ip, [fp, #8]
   16a24:	str	r0, [fp, #-4]
   16a28:	str	r1, [fp, #-8]
   16a2c:	str	r2, [fp, #-12]
   16a30:	str	r3, [sp, #16]
   16a34:	ldr	r0, [fp, #-4]
   16a38:	ldr	r1, [fp, #-8]
   16a3c:	ldr	r2, [fp, #-12]
   16a40:	ldr	r3, [sp, #16]
   16a44:	ldr	lr, [fp, #8]
   16a48:	str	lr, [sp]
   16a4c:	str	ip, [sp, #8]
   16a50:	bl	16a8c <sprintf@plt+0x5168>
   16a54:	str	r0, [sp, #12]
   16a58:	ldr	r0, [sp, #12]
   16a5c:	cmp	r0, #0
   16a60:	ble	16a80 <sprintf@plt+0x515c>
   16a64:	ldr	r0, [sp, #16]
   16a68:	ldrb	r0, [r0]
   16a6c:	cmp	r0, #46	; 0x2e
   16a70:	bne	16a80 <sprintf@plt+0x515c>
   16a74:	ldr	r0, [sp, #16]
   16a78:	movw	r1, #0
   16a7c:	strb	r1, [r0]
   16a80:	ldr	r0, [sp, #12]
   16a84:	mov	sp, fp
   16a88:	pop	{fp, pc}
   16a8c:	push	{r4, r5, fp, lr}
   16a90:	add	fp, sp, #8
   16a94:	sub	sp, sp, #288	; 0x120
   16a98:	ldr	ip, [fp, #8]
   16a9c:	add	lr, sp, #13
   16aa0:	str	r0, [fp, #-16]
   16aa4:	str	r1, [fp, #-20]	; 0xffffffec
   16aa8:	str	r2, [fp, #-24]	; 0xffffffe8
   16aac:	str	r3, [fp, #-28]	; 0xffffffe4
   16ab0:	ldr	r0, [fp, #-16]
   16ab4:	ldr	r1, [fp, #-20]	; 0xffffffec
   16ab8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16abc:	mov	r3, lr
   16ac0:	movw	lr, #255	; 0xff
   16ac4:	str	lr, [sp]
   16ac8:	str	ip, [sp, #4]
   16acc:	bl	17124 <sprintf@plt+0x5800>
   16ad0:	str	r0, [sp, #8]
   16ad4:	cmn	r0, #1
   16ad8:	bne	16ae8 <sprintf@plt+0x51c4>
   16adc:	mvn	r0, #0
   16ae0:	str	r0, [fp, #-12]
   16ae4:	b	16b14 <sprintf@plt+0x51f0>
   16ae8:	add	r0, sp, #13
   16aec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16af0:	ldr	r2, [fp, #8]
   16af4:	bl	17424 <sprintf@plt+0x5b00>
   16af8:	cmn	r0, #1
   16afc:	bne	16b0c <sprintf@plt+0x51e8>
   16b00:	mvn	r0, #0
   16b04:	str	r0, [fp, #-12]
   16b08:	b	16b14 <sprintf@plt+0x51f0>
   16b0c:	ldr	r0, [sp, #8]
   16b10:	str	r0, [fp, #-12]
   16b14:	ldr	r0, [fp, #-12]
   16b18:	sub	sp, fp, #8
   16b1c:	pop	{r4, r5, fp, pc}
   16b20:	push	{fp, lr}
   16b24:	mov	fp, sp
   16b28:	sub	sp, sp, #16
   16b2c:	str	r0, [sp, #8]
   16b30:	str	r1, [sp, #4]
   16b34:	ldr	r0, [sp, #8]
   16b38:	str	r0, [sp]
   16b3c:	ldr	r1, [sp, #4]
   16b40:	add	r0, sp, #8
   16b44:	bl	16b78 <sprintf@plt+0x5254>
   16b48:	cmn	r0, #1
   16b4c:	bne	16b5c <sprintf@plt+0x5238>
   16b50:	mvn	r0, #0
   16b54:	str	r0, [fp, #-4]
   16b58:	b	16b6c <sprintf@plt+0x5248>
   16b5c:	ldr	r0, [sp, #8]
   16b60:	ldr	r1, [sp]
   16b64:	sub	r0, r0, r1
   16b68:	str	r0, [fp, #-4]
   16b6c:	ldr	r0, [fp, #-4]
   16b70:	mov	sp, fp
   16b74:	pop	{fp, pc}
   16b78:	push	{fp, lr}
   16b7c:	mov	fp, sp
   16b80:	sub	sp, sp, #32
   16b84:	str	r0, [fp, #-8]
   16b88:	str	r1, [fp, #-12]
   16b8c:	ldr	r0, [fp, #-8]
   16b90:	ldr	r0, [r0]
   16b94:	str	r0, [sp, #16]
   16b98:	ldr	r0, [sp, #16]
   16b9c:	ldr	r1, [fp, #-12]
   16ba0:	cmp	r0, r1
   16ba4:	movw	r0, #0
   16ba8:	str	r0, [sp, #4]
   16bac:	bcs	16bd4 <sprintf@plt+0x52b0>
   16bb0:	ldr	r0, [sp, #16]
   16bb4:	add	r1, r0, #1
   16bb8:	str	r1, [sp, #16]
   16bbc:	ldrb	r0, [r0]
   16bc0:	str	r0, [sp, #12]
   16bc4:	cmp	r0, #0
   16bc8:	movw	r0, #0
   16bcc:	movne	r0, #1
   16bd0:	str	r0, [sp, #4]
   16bd4:	ldr	r0, [sp, #4]
   16bd8:	tst	r0, #1
   16bdc:	beq	16ca0 <sprintf@plt+0x537c>
   16be0:	ldr	r0, [sp, #12]
   16be4:	and	r0, r0, #192	; 0xc0
   16be8:	cmp	r0, #0
   16bec:	str	r0, [sp]
   16bf0:	beq	16c18 <sprintf@plt+0x52f4>
   16bf4:	b	16bf8 <sprintf@plt+0x52d4>
   16bf8:	ldr	r0, [sp]
   16bfc:	cmp	r0, #64	; 0x40
   16c00:	beq	16c2c <sprintf@plt+0x5308>
   16c04:	b	16c08 <sprintf@plt+0x52e4>
   16c08:	ldr	r0, [sp]
   16c0c:	cmp	r0, #192	; 0xc0
   16c10:	beq	16c74 <sprintf@plt+0x5350>
   16c14:	b	16c84 <sprintf@plt+0x5360>
   16c18:	ldr	r0, [sp, #12]
   16c1c:	ldr	r1, [sp, #16]
   16c20:	add	r0, r1, r0
   16c24:	str	r0, [sp, #16]
   16c28:	b	16b98 <sprintf@plt+0x5274>
   16c2c:	ldr	r0, [sp, #16]
   16c30:	mvn	r1, #0
   16c34:	add	r0, r0, r1
   16c38:	bl	1786c <sprintf@plt+0x5f48>
   16c3c:	str	r0, [sp, #8]
   16c40:	cmp	r0, #0
   16c44:	bge	16c60 <sprintf@plt+0x533c>
   16c48:	bl	11918 <__errno_location@plt>
   16c4c:	movw	lr, #90	; 0x5a
   16c50:	str	lr, [r0]
   16c54:	mvn	r0, #0
   16c58:	str	r0, [fp, #-4]
   16c5c:	b	16cdc <sprintf@plt+0x53b8>
   16c60:	ldr	r0, [sp, #8]
   16c64:	ldr	r1, [sp, #16]
   16c68:	add	r0, r1, r0
   16c6c:	str	r0, [sp, #16]
   16c70:	b	16b98 <sprintf@plt+0x5274>
   16c74:	ldr	r0, [sp, #16]
   16c78:	add	r0, r0, #1
   16c7c:	str	r0, [sp, #16]
   16c80:	b	16c9c <sprintf@plt+0x5378>
   16c84:	bl	11918 <__errno_location@plt>
   16c88:	movw	lr, #90	; 0x5a
   16c8c:	str	lr, [r0]
   16c90:	mvn	r0, #0
   16c94:	str	r0, [fp, #-4]
   16c98:	b	16cdc <sprintf@plt+0x53b8>
   16c9c:	b	16ca0 <sprintf@plt+0x537c>
   16ca0:	ldr	r0, [sp, #16]
   16ca4:	ldr	r1, [fp, #-12]
   16ca8:	cmp	r0, r1
   16cac:	bls	16cc8 <sprintf@plt+0x53a4>
   16cb0:	bl	11918 <__errno_location@plt>
   16cb4:	movw	lr, #90	; 0x5a
   16cb8:	str	lr, [r0]
   16cbc:	mvn	r0, #0
   16cc0:	str	r0, [fp, #-4]
   16cc4:	b	16cdc <sprintf@plt+0x53b8>
   16cc8:	ldr	r0, [sp, #16]
   16ccc:	ldr	r1, [fp, #-8]
   16cd0:	str	r0, [r1]
   16cd4:	movw	r0, #0
   16cd8:	str	r0, [fp, #-4]
   16cdc:	ldr	r0, [fp, #-4]
   16ce0:	mov	sp, fp
   16ce4:	pop	{fp, pc}
   16ce8:	sub	sp, sp, #12
   16cec:	str	r0, [sp, #8]
   16cf0:	ldr	r0, [sp, #8]
   16cf4:	str	r0, [sp]
   16cf8:	ldr	r0, [sp]
   16cfc:	ldrb	r0, [r0]
   16d00:	uxth	r0, r0
   16d04:	lsl	r0, r0, #8
   16d08:	ldr	r1, [sp]
   16d0c:	ldrb	r1, [r1, #1]
   16d10:	uxth	r1, r1
   16d14:	orr	r0, r0, r1
   16d18:	str	r0, [sp, #4]
   16d1c:	ldr	r0, [sp, #8]
   16d20:	add	r0, r0, #2
   16d24:	str	r0, [sp, #8]
   16d28:	ldr	r0, [sp, #4]
   16d2c:	add	sp, sp, #12
   16d30:	bx	lr
   16d34:	sub	sp, sp, #12
   16d38:	str	r0, [sp, #8]
   16d3c:	ldr	r0, [sp, #8]
   16d40:	str	r0, [sp]
   16d44:	ldr	r0, [sp]
   16d48:	ldrb	r0, [r0]
   16d4c:	lsl	r0, r0, #24
   16d50:	ldr	r1, [sp]
   16d54:	ldrb	r1, [r1, #1]
   16d58:	lsl	r1, r1, #16
   16d5c:	orr	r0, r0, r1
   16d60:	ldr	r1, [sp]
   16d64:	ldrb	r1, [r1, #2]
   16d68:	lsl	r1, r1, #8
   16d6c:	orr	r0, r0, r1
   16d70:	ldr	r1, [sp]
   16d74:	ldrb	r1, [r1, #3]
   16d78:	orr	r0, r0, r1
   16d7c:	str	r0, [sp, #4]
   16d80:	ldr	r0, [sp, #8]
   16d84:	add	r0, r0, #4
   16d88:	str	r0, [sp, #8]
   16d8c:	ldr	r0, [sp, #4]
   16d90:	add	sp, sp, #12
   16d94:	bx	lr
   16d98:	sub	sp, sp, #16
   16d9c:	str	r0, [sp, #12]
   16da0:	str	r1, [sp, #8]
   16da4:	ldr	r0, [sp, #12]
   16da8:	strh	r0, [sp, #6]
   16dac:	ldr	r0, [sp, #8]
   16db0:	str	r0, [sp]
   16db4:	ldrh	r0, [sp, #6]
   16db8:	asr	r0, r0, #8
   16dbc:	ldr	r1, [sp]
   16dc0:	add	r2, r1, #1
   16dc4:	str	r2, [sp]
   16dc8:	strb	r0, [r1]
   16dcc:	ldrh	r0, [sp, #6]
   16dd0:	ldr	r1, [sp]
   16dd4:	strb	r0, [r1]
   16dd8:	ldr	r0, [sp, #8]
   16ddc:	add	r0, r0, #2
   16de0:	str	r0, [sp, #8]
   16de4:	add	sp, sp, #16
   16de8:	bx	lr
   16dec:	sub	sp, sp, #16
   16df0:	str	r0, [sp, #12]
   16df4:	str	r1, [sp, #8]
   16df8:	ldr	r0, [sp, #12]
   16dfc:	str	r0, [sp, #4]
   16e00:	ldr	r0, [sp, #8]
   16e04:	str	r0, [sp]
   16e08:	ldr	r0, [sp, #4]
   16e0c:	lsr	r0, r0, #24
   16e10:	ldr	r1, [sp]
   16e14:	add	r2, r1, #1
   16e18:	str	r2, [sp]
   16e1c:	strb	r0, [r1]
   16e20:	ldr	r0, [sp, #4]
   16e24:	lsr	r0, r0, #16
   16e28:	ldr	r1, [sp]
   16e2c:	add	r2, r1, #1
   16e30:	str	r2, [sp]
   16e34:	strb	r0, [r1]
   16e38:	ldr	r0, [sp, #4]
   16e3c:	lsr	r0, r0, #8
   16e40:	ldr	r1, [sp]
   16e44:	add	r2, r1, #1
   16e48:	str	r2, [sp]
   16e4c:	strb	r0, [r1]
   16e50:	ldr	r0, [sp, #4]
   16e54:	ldr	r1, [sp]
   16e58:	strb	r0, [r1]
   16e5c:	ldr	r0, [sp, #8]
   16e60:	add	r0, r0, #4
   16e64:	str	r0, [sp, #8]
   16e68:	add	sp, sp, #16
   16e6c:	bx	lr
   16e70:	push	{fp, lr}
   16e74:	mov	fp, sp
   16e78:	sub	sp, sp, #144	; 0x90
   16e7c:	ldr	ip, [fp, #8]
   16e80:	str	r0, [fp, #-8]
   16e84:	str	r1, [fp, #-12]
   16e88:	str	r2, [fp, #-16]
   16e8c:	str	r3, [fp, #-20]	; 0xffffffec
   16e90:	ldr	r0, [fp, #-20]	; 0xffffffec
   16e94:	movw	r1, #0
   16e98:	cmp	r0, r1
   16e9c:	str	ip, [sp, #4]
   16ea0:	beq	16eb0 <sprintf@plt+0x558c>
   16ea4:	ldr	r0, [fp, #8]
   16ea8:	cmp	r0, #12
   16eac:	bge	16ebc <sprintf@plt+0x5598>
   16eb0:	mvn	r0, #0
   16eb4:	str	r0, [fp, #-4]
   16eb8:	b	170d0 <sprintf@plt+0x57ac>
   16ebc:	add	r0, sp, #32
   16ec0:	ldr	r1, [fp, #-20]	; 0xffffffec
   16ec4:	mov	r2, #0
   16ec8:	str	r2, [r1, #4]
   16ecc:	str	r2, [r1]
   16ed0:	str	r2, [r1, #8]
   16ed4:	ldr	r1, [fp, #-20]	; 0xffffffec
   16ed8:	str	r1, [fp, #-24]	; 0xffffffe8
   16edc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16ee0:	ldr	r2, [r1]
   16ee4:	ldr	r3, [r1, #4]
   16ee8:	ldr	ip, [r1, #8]
   16eec:	bfc	r2, #0, #16
   16ef0:	str	r3, [r1, #4]
   16ef4:	str	r2, [r1]
   16ef8:	str	ip, [r1, #8]
   16efc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16f00:	ldr	r2, [r1]
   16f04:	ldr	r3, [r1, #4]
   16f08:	ldr	ip, [r1, #8]
   16f0c:	bic	r2, r2, #7864320	; 0x780000
   16f10:	str	r3, [r1, #4]
   16f14:	str	r2, [r1]
   16f18:	str	ip, [r1, #8]
   16f1c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16f20:	ldr	r2, [r1]
   16f24:	ldr	r3, [r1, #4]
   16f28:	ldr	ip, [r1, #8]
   16f2c:	orr	r2, r2, #65536	; 0x10000
   16f30:	str	r3, [r1, #4]
   16f34:	str	r2, [r1]
   16f38:	str	ip, [r1, #8]
   16f3c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16f40:	ldr	r2, [r1]
   16f44:	ldr	r3, [r1, #4]
   16f48:	ldr	ip, [r1, #8]
   16f4c:	bic	r2, r2, #251658240	; 0xf000000
   16f50:	str	r3, [r1, #4]
   16f54:	str	r2, [r1]
   16f58:	str	ip, [r1, #8]
   16f5c:	ldr	r1, [fp, #-20]	; 0xffffffec
   16f60:	add	r1, r1, #12
   16f64:	str	r1, [fp, #-28]	; 0xffffffe4
   16f68:	ldr	r1, [fp, #8]
   16f6c:	sub	r1, r1, #12
   16f70:	str	r1, [fp, #8]
   16f74:	str	r0, [sp, #28]
   16f78:	ldr	r1, [fp, #-20]	; 0xffffffec
   16f7c:	ldr	r2, [sp, #28]
   16f80:	add	r3, r2, #4
   16f84:	str	r3, [sp, #28]
   16f88:	str	r1, [r2]
   16f8c:	ldr	r1, [sp, #28]
   16f90:	add	r2, r1, #4
   16f94:	str	r2, [sp, #28]
   16f98:	movw	r2, #0
   16f9c:	str	r2, [r1]
   16fa0:	add	r0, r0, #80	; 0x50
   16fa4:	str	r0, [sp, #24]
   16fa8:	ldr	r0, [fp, #8]
   16fac:	sub	r0, r0, #4
   16fb0:	str	r0, [fp, #8]
   16fb4:	cmp	r0, #0
   16fb8:	bge	16fc8 <sprintf@plt+0x56a4>
   16fbc:	mvn	r0, #0
   16fc0:	str	r0, [fp, #-4]
   16fc4:	b	170d0 <sprintf@plt+0x57ac>
   16fc8:	add	r3, sp, #32
   16fcc:	ldr	r0, [fp, #-8]
   16fd0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16fd4:	ldr	r2, [fp, #8]
   16fd8:	ldr	ip, [sp, #24]
   16fdc:	str	ip, [sp]
   16fe0:	bl	170dc <sprintf@plt+0x57b8>
   16fe4:	str	r0, [fp, #-32]	; 0xffffffe0
   16fe8:	cmp	r0, #0
   16fec:	bge	16ffc <sprintf@plt+0x56d8>
   16ff0:	mvn	r0, #0
   16ff4:	str	r0, [fp, #-4]
   16ff8:	b	170d0 <sprintf@plt+0x57ac>
   16ffc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17000:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17004:	add	r0, r1, r0
   17008:	str	r0, [fp, #-28]	; 0xffffffe4
   1700c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17010:	ldr	r1, [fp, #8]
   17014:	sub	r0, r1, r0
   17018:	str	r0, [fp, #8]
   1701c:	ldr	r0, [fp, #-16]
   17020:	strh	r0, [sp, #22]
   17024:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17028:	str	r0, [sp, #16]
   1702c:	ldrb	r0, [sp, #23]
   17030:	ldr	r1, [sp, #16]
   17034:	add	r2, r1, #1
   17038:	str	r2, [sp, #16]
   1703c:	strb	r0, [r1]
   17040:	ldrb	r0, [sp, #22]
   17044:	ldr	r1, [sp, #16]
   17048:	strb	r0, [r1]
   1704c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17050:	add	r0, r0, #2
   17054:	str	r0, [fp, #-28]	; 0xffffffe4
   17058:	ldr	r0, [fp, #-12]
   1705c:	strh	r0, [sp, #14]
   17060:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17064:	str	r0, [sp, #8]
   17068:	ldrb	r0, [sp, #15]
   1706c:	ldr	r1, [sp, #8]
   17070:	add	r2, r1, #1
   17074:	str	r2, [sp, #8]
   17078:	strb	r0, [r1]
   1707c:	ldrb	r0, [sp, #14]
   17080:	ldr	r1, [sp, #8]
   17084:	strb	r0, [r1]
   17088:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1708c:	add	r0, r0, #2
   17090:	str	r0, [fp, #-28]	; 0xffffffe4
   17094:	mov	r0, #1
   17098:	bl	11654 <htons@plt>
   1709c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   170a0:	ldr	r2, [r1]
   170a4:	ldr	lr, [r1, #4]
   170a8:	ldr	r3, [r1, #8]
   170ac:	bfc	lr, #0, #16
   170b0:	orr	r0, lr, r0
   170b4:	str	r2, [r1]
   170b8:	str	r0, [r1, #4]
   170bc:	str	r3, [r1, #8]
   170c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   170c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   170c8:	sub	r0, r0, r1
   170cc:	str	r0, [fp, #-4]
   170d0:	ldr	r0, [fp, #-4]
   170d4:	mov	sp, fp
   170d8:	pop	{fp, pc}
   170dc:	push	{fp, lr}
   170e0:	mov	fp, sp
   170e4:	sub	sp, sp, #24
   170e8:	ldr	ip, [fp, #8]
   170ec:	str	r0, [fp, #-4]
   170f0:	str	r1, [fp, #-8]
   170f4:	str	r2, [sp, #12]
   170f8:	str	r3, [sp, #8]
   170fc:	ldr	r0, [fp, #-4]
   17100:	ldr	r1, [fp, #-8]
   17104:	ldr	r2, [sp, #12]
   17108:	ldr	r3, [sp, #8]
   1710c:	ldr	lr, [fp, #8]
   17110:	str	lr, [sp]
   17114:	str	ip, [sp, #4]
   17118:	bl	17cf4 <sprintf@plt+0x63d0>
   1711c:	mov	sp, fp
   17120:	pop	{fp, pc}
   17124:	push	{fp, lr}
   17128:	mov	fp, sp
   1712c:	sub	sp, sp, #56	; 0x38
   17130:	ldr	ip, [fp, #8]
   17134:	str	r0, [fp, #-8]
   17138:	str	r1, [fp, #-12]
   1713c:	str	r2, [fp, #-16]
   17140:	str	r3, [fp, #-20]	; 0xffffffec
   17144:	mvn	r0, #0
   17148:	str	r0, [sp, #16]
   1714c:	movw	r0, #0
   17150:	str	r0, [sp, #12]
   17154:	ldr	r0, [fp, #-20]	; 0xffffffec
   17158:	str	r0, [sp, #24]
   1715c:	ldr	r0, [fp, #-16]
   17160:	str	r0, [fp, #-24]	; 0xffffffe8
   17164:	ldr	r0, [fp, #-20]	; 0xffffffec
   17168:	ldr	r1, [fp, #8]
   1716c:	add	r0, r0, r1
   17170:	str	r0, [sp, #28]
   17174:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17178:	ldr	r1, [fp, #-8]
   1717c:	cmp	r0, r1
   17180:	str	ip, [sp, #4]
   17184:	bcc	17198 <sprintf@plt+0x5874>
   17188:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1718c:	ldr	r1, [fp, #-12]
   17190:	cmp	r0, r1
   17194:	bcc	171b0 <sprintf@plt+0x588c>
   17198:	bl	11918 <__errno_location@plt>
   1719c:	movw	lr, #90	; 0x5a
   171a0:	str	lr, [r0]
   171a4:	mvn	r0, #0
   171a8:	str	r0, [fp, #-4]
   171ac:	b	17418 <sprintf@plt+0x5af4>
   171b0:	b	171b4 <sprintf@plt+0x5890>
   171b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   171b8:	add	r1, r0, #1
   171bc:	str	r1, [fp, #-24]	; 0xffffffe8
   171c0:	ldrb	r0, [r0]
   171c4:	str	r0, [sp, #20]
   171c8:	cmp	r0, #0
   171cc:	beq	173e8 <sprintf@plt+0x5ac4>
   171d0:	ldr	r0, [sp, #20]
   171d4:	and	r0, r0, #192	; 0xc0
   171d8:	cmp	r0, #0
   171dc:	str	r0, [sp]
   171e0:	beq	17208 <sprintf@plt+0x58e4>
   171e4:	b	171e8 <sprintf@plt+0x58c4>
   171e8:	ldr	r0, [sp]
   171ec:	cmp	r0, #64	; 0x40
   171f0:	beq	17208 <sprintf@plt+0x58e4>
   171f4:	b	171f8 <sprintf@plt+0x58d4>
   171f8:	ldr	r0, [sp]
   171fc:	cmp	r0, #192	; 0xc0
   17200:	beq	172e4 <sprintf@plt+0x59c0>
   17204:	b	173cc <sprintf@plt+0x5aa8>
   17208:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1720c:	mvn	r1, #0
   17210:	add	r0, r0, r1
   17214:	bl	1786c <sprintf@plt+0x5f48>
   17218:	str	r0, [sp, #8]
   1721c:	cmp	r0, #0
   17220:	bge	1723c <sprintf@plt+0x5918>
   17224:	bl	11918 <__errno_location@plt>
   17228:	movw	lr, #90	; 0x5a
   1722c:	str	lr, [r0]
   17230:	mvn	r0, #0
   17234:	str	r0, [fp, #-4]
   17238:	b	17418 <sprintf@plt+0x5af4>
   1723c:	ldr	r0, [sp, #24]
   17240:	ldr	r1, [sp, #8]
   17244:	add	r0, r0, r1
   17248:	add	r0, r0, #1
   1724c:	ldr	r1, [sp, #28]
   17250:	cmp	r0, r1
   17254:	bcs	17270 <sprintf@plt+0x594c>
   17258:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1725c:	ldr	r1, [sp, #8]
   17260:	add	r0, r0, r1
   17264:	ldr	r1, [fp, #-12]
   17268:	cmp	r0, r1
   1726c:	bcc	17288 <sprintf@plt+0x5964>
   17270:	bl	11918 <__errno_location@plt>
   17274:	movw	lr, #90	; 0x5a
   17278:	str	lr, [r0]
   1727c:	mvn	r0, #0
   17280:	str	r0, [fp, #-4]
   17284:	b	17418 <sprintf@plt+0x5af4>
   17288:	ldr	r0, [sp, #8]
   1728c:	add	r0, r0, #1
   17290:	ldr	r1, [sp, #12]
   17294:	add	r0, r1, r0
   17298:	str	r0, [sp, #12]
   1729c:	ldr	r0, [sp, #20]
   172a0:	ldr	r1, [sp, #24]
   172a4:	add	r2, r1, #1
   172a8:	str	r2, [sp, #24]
   172ac:	strb	r0, [r1]
   172b0:	ldr	r0, [sp, #24]
   172b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   172b8:	ldr	r2, [sp, #8]
   172bc:	bl	11750 <memcpy@plt>
   172c0:	ldr	r0, [sp, #8]
   172c4:	ldr	r1, [sp, #24]
   172c8:	add	r0, r1, r0
   172cc:	str	r0, [sp, #24]
   172d0:	ldr	r0, [sp, #8]
   172d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   172d8:	add	r0, r1, r0
   172dc:	str	r0, [fp, #-24]	; 0xffffffe8
   172e0:	b	173e4 <sprintf@plt+0x5ac0>
   172e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   172e8:	ldr	r1, [fp, #-12]
   172ec:	cmp	r0, r1
   172f0:	bcc	1730c <sprintf@plt+0x59e8>
   172f4:	bl	11918 <__errno_location@plt>
   172f8:	movw	lr, #90	; 0x5a
   172fc:	str	lr, [r0]
   17300:	mvn	r0, #0
   17304:	str	r0, [fp, #-4]
   17308:	b	17418 <sprintf@plt+0x5af4>
   1730c:	ldr	r0, [sp, #16]
   17310:	cmp	r0, #0
   17314:	bge	1732c <sprintf@plt+0x5a08>
   17318:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1731c:	ldr	r1, [fp, #-16]
   17320:	sub	r0, r0, r1
   17324:	add	r0, r0, #1
   17328:	str	r0, [sp, #16]
   1732c:	ldr	r0, [fp, #-8]
   17330:	ldr	r1, [sp, #20]
   17334:	and	r1, r1, #63	; 0x3f
   17338:	lsl	r1, r1, #8
   1733c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17340:	ldrb	r2, [r2]
   17344:	and	r2, r2, #255	; 0xff
   17348:	orr	r1, r1, r2
   1734c:	add	r0, r0, r1
   17350:	str	r0, [fp, #-24]	; 0xffffffe8
   17354:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17358:	ldr	r1, [fp, #-8]
   1735c:	cmp	r0, r1
   17360:	bcc	17374 <sprintf@plt+0x5a50>
   17364:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17368:	ldr	r1, [fp, #-12]
   1736c:	cmp	r0, r1
   17370:	bcc	1738c <sprintf@plt+0x5a68>
   17374:	bl	11918 <__errno_location@plt>
   17378:	movw	lr, #90	; 0x5a
   1737c:	str	lr, [r0]
   17380:	mvn	r0, #0
   17384:	str	r0, [fp, #-4]
   17388:	b	17418 <sprintf@plt+0x5af4>
   1738c:	ldr	r0, [sp, #12]
   17390:	add	r0, r0, #2
   17394:	str	r0, [sp, #12]
   17398:	ldr	r0, [sp, #12]
   1739c:	ldr	r1, [fp, #-12]
   173a0:	ldr	r2, [fp, #-8]
   173a4:	sub	r1, r1, r2
   173a8:	cmp	r0, r1
   173ac:	blt	173c8 <sprintf@plt+0x5aa4>
   173b0:	bl	11918 <__errno_location@plt>
   173b4:	movw	lr, #90	; 0x5a
   173b8:	str	lr, [r0]
   173bc:	mvn	r0, #0
   173c0:	str	r0, [fp, #-4]
   173c4:	b	17418 <sprintf@plt+0x5af4>
   173c8:	b	173e4 <sprintf@plt+0x5ac0>
   173cc:	bl	11918 <__errno_location@plt>
   173d0:	movw	lr, #90	; 0x5a
   173d4:	str	lr, [r0]
   173d8:	mvn	r0, #0
   173dc:	str	r0, [fp, #-4]
   173e0:	b	17418 <sprintf@plt+0x5af4>
   173e4:	b	171b4 <sprintf@plt+0x5890>
   173e8:	ldr	r0, [sp, #24]
   173ec:	movw	r1, #0
   173f0:	strb	r1, [r0]
   173f4:	ldr	r0, [sp, #16]
   173f8:	cmp	r0, #0
   173fc:	bge	17410 <sprintf@plt+0x5aec>
   17400:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17404:	ldr	r1, [fp, #-16]
   17408:	sub	r0, r0, r1
   1740c:	str	r0, [sp, #16]
   17410:	ldr	r0, [sp, #16]
   17414:	str	r0, [fp, #-4]
   17418:	ldr	r0, [fp, #-4]
   1741c:	mov	sp, fp
   17420:	pop	{fp, pc}
   17424:	push	{r4, sl, fp, lr}
   17428:	add	fp, sp, #8
   1742c:	sub	sp, sp, #64	; 0x40
   17430:	str	r0, [fp, #-16]
   17434:	str	r1, [fp, #-20]	; 0xffffffec
   17438:	str	r2, [fp, #-24]	; 0xffffffe8
   1743c:	ldr	r0, [fp, #-16]
   17440:	str	r0, [fp, #-28]	; 0xffffffe4
   17444:	ldr	r0, [fp, #-20]	; 0xffffffec
   17448:	str	r0, [fp, #-32]	; 0xffffffe0
   1744c:	ldr	r0, [fp, #-20]	; 0xffffffec
   17450:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17454:	add	r0, r0, r1
   17458:	str	r0, [sp, #36]	; 0x24
   1745c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17460:	add	r1, r0, #1
   17464:	str	r1, [fp, #-28]	; 0xffffffe4
   17468:	ldrb	r0, [r0]
   1746c:	str	r0, [sp, #28]
   17470:	cmp	r0, #0
   17474:	beq	177c0 <sprintf@plt+0x5e9c>
   17478:	ldr	r0, [sp, #28]
   1747c:	and	r0, r0, #192	; 0xc0
   17480:	cmp	r0, #192	; 0xc0
   17484:	bne	174a0 <sprintf@plt+0x5b7c>
   17488:	bl	11918 <__errno_location@plt>
   1748c:	movw	lr, #90	; 0x5a
   17490:	str	lr, [r0]
   17494:	mvn	r0, #0
   17498:	str	r0, [fp, #-12]
   1749c:	b	17858 <sprintf@plt+0x5f34>
   174a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   174a4:	ldr	r1, [fp, #-20]	; 0xffffffec
   174a8:	cmp	r0, r1
   174ac:	beq	174ec <sprintf@plt+0x5bc8>
   174b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   174b4:	ldr	r1, [sp, #36]	; 0x24
   174b8:	cmp	r0, r1
   174bc:	bcc	174d8 <sprintf@plt+0x5bb4>
   174c0:	bl	11918 <__errno_location@plt>
   174c4:	movw	lr, #90	; 0x5a
   174c8:	str	lr, [r0]
   174cc:	mvn	r0, #0
   174d0:	str	r0, [fp, #-12]
   174d4:	b	17858 <sprintf@plt+0x5f34>
   174d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   174dc:	add	r1, r0, #1
   174e0:	str	r1, [fp, #-32]	; 0xffffffe0
   174e4:	movw	r1, #46	; 0x2e
   174e8:	strb	r1, [r0]
   174ec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   174f0:	mvn	r1, #0
   174f4:	add	r0, r0, r1
   174f8:	bl	1786c <sprintf@plt+0x5f48>
   174fc:	str	r0, [sp, #24]
   17500:	cmp	r0, #0
   17504:	bge	17520 <sprintf@plt+0x5bfc>
   17508:	bl	11918 <__errno_location@plt>
   1750c:	movw	lr, #90	; 0x5a
   17510:	str	lr, [r0]
   17514:	mvn	r0, #0
   17518:	str	r0, [fp, #-12]
   1751c:	b	17858 <sprintf@plt+0x5f34>
   17520:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17524:	ldr	r1, [sp, #24]
   17528:	add	r0, r0, r1
   1752c:	ldr	r1, [sp, #36]	; 0x24
   17530:	cmp	r0, r1
   17534:	bcc	17550 <sprintf@plt+0x5c2c>
   17538:	bl	11918 <__errno_location@plt>
   1753c:	movw	lr, #90	; 0x5a
   17540:	str	lr, [r0]
   17544:	mvn	r0, #0
   17548:	str	r0, [fp, #-12]
   1754c:	b	17858 <sprintf@plt+0x5f34>
   17550:	ldr	r0, [sp, #28]
   17554:	and	r0, r0, #192	; 0xc0
   17558:	cmp	r0, #64	; 0x40
   1755c:	bne	175cc <sprintf@plt+0x5ca8>
   17560:	ldr	r0, [sp, #28]
   17564:	cmp	r0, #65	; 0x41
   17568:	beq	17584 <sprintf@plt+0x5c60>
   1756c:	bl	11918 <__errno_location@plt>
   17570:	movw	lr, #22
   17574:	str	lr, [r0]
   17578:	mvn	r0, #0
   1757c:	str	r0, [fp, #-12]
   17580:	b	17858 <sprintf@plt+0x5f34>
   17584:	ldr	r1, [fp, #-32]	; 0xffffffe0
   17588:	ldr	r2, [sp, #36]	; 0x24
   1758c:	sub	r0, fp, #28
   17590:	bl	17910 <sprintf@plt+0x5fec>
   17594:	str	r0, [sp, #20]
   17598:	cmp	r0, #0
   1759c:	bge	175b8 <sprintf@plt+0x5c94>
   175a0:	bl	11918 <__errno_location@plt>
   175a4:	movw	lr, #90	; 0x5a
   175a8:	str	lr, [r0]
   175ac:	mvn	r0, #0
   175b0:	str	r0, [fp, #-12]
   175b4:	b	17858 <sprintf@plt+0x5f34>
   175b8:	ldr	r0, [sp, #20]
   175bc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   175c0:	add	r0, r1, r0
   175c4:	str	r0, [fp, #-32]	; 0xffffffe0
   175c8:	b	1745c <sprintf@plt+0x5b38>
   175cc:	b	175d0 <sprintf@plt+0x5cac>
   175d0:	ldr	r0, [sp, #24]
   175d4:	cmp	r0, #0
   175d8:	ble	177bc <sprintf@plt+0x5e98>
   175dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   175e0:	add	r1, r0, #1
   175e4:	str	r1, [fp, #-28]	; 0xffffffe4
   175e8:	ldrb	r0, [r0]
   175ec:	strb	r0, [sp, #35]	; 0x23
   175f0:	ldrb	r0, [sp, #35]	; 0x23
   175f4:	bl	17b7c <sprintf@plt+0x6258>
   175f8:	cmp	r0, #0
   175fc:	beq	17658 <sprintf@plt+0x5d34>
   17600:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17604:	add	r0, r0, #1
   17608:	ldr	r1, [sp, #36]	; 0x24
   1760c:	cmp	r0, r1
   17610:	bcc	1762c <sprintf@plt+0x5d08>
   17614:	bl	11918 <__errno_location@plt>
   17618:	movw	lr, #90	; 0x5a
   1761c:	str	lr, [r0]
   17620:	mvn	r0, #0
   17624:	str	r0, [fp, #-12]
   17628:	b	17858 <sprintf@plt+0x5f34>
   1762c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17630:	add	r1, r0, #1
   17634:	str	r1, [fp, #-32]	; 0xffffffe0
   17638:	movw	r1, #92	; 0x5c
   1763c:	strb	r1, [r0]
   17640:	ldrb	r0, [sp, #35]	; 0x23
   17644:	ldr	r1, [fp, #-32]	; 0xffffffe0
   17648:	add	r2, r1, #1
   1764c:	str	r2, [fp, #-32]	; 0xffffffe0
   17650:	strb	r0, [r1]
   17654:	b	177a4 <sprintf@plt+0x5e80>
   17658:	ldrb	r0, [sp, #35]	; 0x23
   1765c:	bl	17cb4 <sprintf@plt+0x6390>
   17660:	cmp	r0, #0
   17664:	bne	17764 <sprintf@plt+0x5e40>
   17668:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1766c:	add	r0, r0, #3
   17670:	ldr	r1, [sp, #36]	; 0x24
   17674:	cmp	r0, r1
   17678:	bcc	17694 <sprintf@plt+0x5d70>
   1767c:	bl	11918 <__errno_location@plt>
   17680:	movw	lr, #90	; 0x5a
   17684:	str	lr, [r0]
   17688:	mvn	r0, #0
   1768c:	str	r0, [fp, #-12]
   17690:	b	17858 <sprintf@plt+0x5f34>
   17694:	ldr	r0, [pc, #456]	; 17864 <sprintf@plt+0x5f40>
   17698:	add	r0, pc, r0
   1769c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   176a0:	add	r2, r1, #1
   176a4:	str	r2, [fp, #-32]	; 0xffffffe0
   176a8:	mov	r2, #92	; 0x5c
   176ac:	strb	r2, [r1]
   176b0:	ldrb	r1, [sp, #35]	; 0x23
   176b4:	movw	r2, #34079	; 0x851f
   176b8:	movt	r2, #20971	; 0x51eb
   176bc:	umull	r1, r3, r1, r2
   176c0:	ldr	ip, [pc, #416]	; 17868 <sprintf@plt+0x5f44>
   176c4:	add	ip, pc, ip
   176c8:	ldrb	r3, [ip, r3, lsr #5]
   176cc:	ldr	lr, [fp, #-32]	; 0xffffffe0
   176d0:	add	r4, lr, #1
   176d4:	str	r4, [fp, #-32]	; 0xffffffe0
   176d8:	strb	r3, [lr]
   176dc:	ldrb	r3, [sp, #35]	; 0x23
   176e0:	umull	r2, lr, r3, r2
   176e4:	lsr	lr, lr, #5
   176e8:	mov	r4, #100	; 0x64
   176ec:	mls	r3, lr, r4, r3
   176f0:	movw	lr, #26215	; 0x6667
   176f4:	movt	lr, #26214	; 0x6666
   176f8:	smmul	r3, r3, lr
   176fc:	asr	lr, r3, #2
   17700:	add	r3, lr, r3, lsr #31
   17704:	ldrb	r3, [ip, r3]
   17708:	ldr	ip, [fp, #-32]	; 0xffffffe0
   1770c:	add	lr, ip, #1
   17710:	str	lr, [fp, #-32]	; 0xffffffe0
   17714:	strb	r3, [ip]
   17718:	ldrb	r3, [sp, #35]	; 0x23
   1771c:	mov	ip, r3
   17720:	movw	lr, #52429	; 0xcccd
   17724:	movt	lr, #52428	; 0xcccc
   17728:	umull	lr, r4, r3, lr
   1772c:	lsr	r4, r4, #3
   17730:	add	r4, r4, r4, lsl #2
   17734:	sub	r3, r3, r4, lsl #1
   17738:	add	r0, r0, r3
   1773c:	ldrb	r0, [r0]
   17740:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17744:	add	r4, r3, #1
   17748:	str	r4, [fp, #-32]	; 0xffffffe0
   1774c:	strb	r0, [r3]
   17750:	str	ip, [sp, #16]
   17754:	str	r2, [sp, #12]
   17758:	str	r1, [sp, #8]
   1775c:	str	lr, [sp, #4]
   17760:	b	177a0 <sprintf@plt+0x5e7c>
   17764:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17768:	ldr	r1, [sp, #36]	; 0x24
   1776c:	cmp	r0, r1
   17770:	bcc	1778c <sprintf@plt+0x5e68>
   17774:	bl	11918 <__errno_location@plt>
   17778:	movw	lr, #90	; 0x5a
   1777c:	str	lr, [r0]
   17780:	mvn	r0, #0
   17784:	str	r0, [fp, #-12]
   17788:	b	17858 <sprintf@plt+0x5f34>
   1778c:	ldrb	r0, [sp, #35]	; 0x23
   17790:	ldr	r1, [fp, #-32]	; 0xffffffe0
   17794:	add	r2, r1, #1
   17798:	str	r2, [fp, #-32]	; 0xffffffe0
   1779c:	strb	r0, [r1]
   177a0:	b	177a4 <sprintf@plt+0x5e80>
   177a4:	b	177a8 <sprintf@plt+0x5e84>
   177a8:	ldr	r0, [sp, #24]
   177ac:	mvn	r1, #0
   177b0:	add	r0, r0, r1
   177b4:	str	r0, [sp, #24]
   177b8:	b	175d0 <sprintf@plt+0x5cac>
   177bc:	b	1745c <sprintf@plt+0x5b38>
   177c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   177c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   177c8:	cmp	r0, r1
   177cc:	bne	1780c <sprintf@plt+0x5ee8>
   177d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   177d4:	ldr	r1, [sp, #36]	; 0x24
   177d8:	cmp	r0, r1
   177dc:	bcc	177f8 <sprintf@plt+0x5ed4>
   177e0:	bl	11918 <__errno_location@plt>
   177e4:	movw	lr, #90	; 0x5a
   177e8:	str	lr, [r0]
   177ec:	mvn	r0, #0
   177f0:	str	r0, [fp, #-12]
   177f4:	b	17858 <sprintf@plt+0x5f34>
   177f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   177fc:	add	r1, r0, #1
   17800:	str	r1, [fp, #-32]	; 0xffffffe0
   17804:	movw	r1, #46	; 0x2e
   17808:	strb	r1, [r0]
   1780c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17810:	ldr	r1, [sp, #36]	; 0x24
   17814:	cmp	r0, r1
   17818:	bcc	17834 <sprintf@plt+0x5f10>
   1781c:	bl	11918 <__errno_location@plt>
   17820:	movw	lr, #90	; 0x5a
   17824:	str	lr, [r0]
   17828:	mvn	r0, #0
   1782c:	str	r0, [fp, #-12]
   17830:	b	17858 <sprintf@plt+0x5f34>
   17834:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17838:	add	r1, r0, #1
   1783c:	str	r1, [fp, #-32]	; 0xffffffe0
   17840:	movw	r1, #0
   17844:	strb	r1, [r0]
   17848:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1784c:	ldr	r1, [fp, #-20]	; 0xffffffec
   17850:	sub	r0, r0, r1
   17854:	str	r0, [fp, #-12]
   17858:	ldr	r0, [fp, #-12]
   1785c:	sub	sp, fp, #8
   17860:	pop	{r4, sl, fp, pc}
   17864:	andeq	r7, r0, r4, lsl r9
   17868:	andeq	r7, r0, r8, ror #17
   1786c:	sub	sp, sp, #16
   17870:	str	r0, [sp, #8]
   17874:	ldr	r0, [sp, #8]
   17878:	ldrb	r0, [r0]
   1787c:	strb	r0, [sp, #3]
   17880:	ldrb	r0, [sp, #3]
   17884:	and	r0, r0, #192	; 0xc0
   17888:	cmp	r0, #192	; 0xc0
   1788c:	bne	1789c <sprintf@plt+0x5f78>
   17890:	mvn	r0, #0
   17894:	str	r0, [sp, #12]
   17898:	b	17904 <sprintf@plt+0x5fe0>
   1789c:	ldrb	r0, [sp, #3]
   178a0:	and	r0, r0, #192	; 0xc0
   178a4:	cmp	r0, #64	; 0x40
   178a8:	bne	178fc <sprintf@plt+0x5fd8>
   178ac:	ldrb	r0, [sp, #3]
   178b0:	cmp	r0, #65	; 0x41
   178b4:	bne	178f0 <sprintf@plt+0x5fcc>
   178b8:	ldr	r0, [sp, #8]
   178bc:	ldrb	r0, [r0, #1]
   178c0:	str	r0, [sp, #4]
   178c4:	cmp	r0, #0
   178c8:	bne	178d4 <sprintf@plt+0x5fb0>
   178cc:	movw	r0, #256	; 0x100
   178d0:	str	r0, [sp, #4]
   178d4:	ldr	r0, [sp, #4]
   178d8:	add	r0, r0, #7
   178dc:	movw	r1, #8
   178e0:	sdiv	r0, r0, r1
   178e4:	add	r0, r0, #1
   178e8:	str	r0, [sp, #12]
   178ec:	b	17904 <sprintf@plt+0x5fe0>
   178f0:	mvn	r0, #0
   178f4:	str	r0, [sp, #12]
   178f8:	b	17904 <sprintf@plt+0x5fe0>
   178fc:	ldrb	r0, [sp, #3]
   17900:	str	r0, [sp, #12]
   17904:	ldr	r0, [sp, #12]
   17908:	add	sp, sp, #16
   1790c:	bx	lr
   17910:	push	{fp, lr}
   17914:	mov	fp, sp
   17918:	sub	sp, sp, #48	; 0x30
   1791c:	str	r0, [fp, #-8]
   17920:	str	r1, [fp, #-12]
   17924:	str	r2, [fp, #-16]
   17928:	ldr	r0, [fp, #-8]
   1792c:	ldr	r0, [r0]
   17930:	str	r0, [fp, #-20]	; 0xffffffec
   17934:	ldr	r0, [fp, #-12]
   17938:	str	r0, [sp, #24]
   1793c:	ldr	r0, [fp, #-20]	; 0xffffffec
   17940:	ldrb	r0, [r0]
   17944:	and	r0, r0, #255	; 0xff
   17948:	str	r0, [sp, #12]
   1794c:	cmp	r0, #0
   17950:	bne	1795c <sprintf@plt+0x6038>
   17954:	movw	r0, #256	; 0x100
   17958:	str	r0, [sp, #12]
   1795c:	ldr	r0, [sp, #12]
   17960:	add	r0, r0, #3
   17964:	movw	r1, #4
   17968:	sdiv	r0, r0, r1
   1796c:	str	r0, [sp, #8]
   17970:	ldr	r0, [sp, #12]
   17974:	cmp	r0, #99	; 0x63
   17978:	ble	17988 <sprintf@plt+0x6064>
   1797c:	movw	r0, #3
   17980:	str	r0, [sp, #4]
   17984:	b	179a8 <sprintf@plt+0x6084>
   17988:	ldr	r0, [sp, #12]
   1798c:	cmp	r0, #9
   17990:	movw	r0, #0
   17994:	movgt	r0, #1
   17998:	tst	r0, #1
   1799c:	movw	r0, #2
   179a0:	moveq	r0, #1
   179a4:	str	r0, [sp, #4]
   179a8:	ldr	r0, [sp, #4]
   179ac:	add	r0, r0, #6
   179b0:	ldr	r1, [sp, #8]
   179b4:	add	r0, r1, r0
   179b8:	str	r0, [sp, #8]
   179bc:	ldr	r0, [fp, #-12]
   179c0:	ldr	r1, [sp, #8]
   179c4:	add	r0, r0, r1
   179c8:	ldr	r1, [fp, #-16]
   179cc:	cmp	r0, r1
   179d0:	bcc	179e0 <sprintf@plt+0x60bc>
   179d4:	mvn	r0, #0
   179d8:	str	r0, [fp, #-4]
   179dc:	b	17b5c <sprintf@plt+0x6238>
   179e0:	ldr	r0, [pc, #384]	; 17b68 <sprintf@plt+0x6244>
   179e4:	add	r1, pc, r0
   179e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   179ec:	add	r0, r0, #1
   179f0:	str	r0, [fp, #-20]	; 0xffffffec
   179f4:	ldr	r0, [fp, #-12]
   179f8:	bl	11924 <sprintf@plt>
   179fc:	ldr	r1, [fp, #-12]
   17a00:	add	r0, r1, r0
   17a04:	str	r0, [fp, #-12]
   17a08:	ldr	r0, [sp, #12]
   17a0c:	str	r0, [sp, #16]
   17a10:	ldr	r0, [sp, #16]
   17a14:	cmp	r0, #7
   17a18:	ble	17a60 <sprintf@plt+0x613c>
   17a1c:	ldr	r0, [pc, #340]	; 17b78 <sprintf@plt+0x6254>
   17a20:	add	r1, pc, r0
   17a24:	ldr	r0, [fp, #-12]
   17a28:	ldr	r2, [fp, #-20]	; 0xffffffec
   17a2c:	ldrb	r2, [r2]
   17a30:	and	r2, r2, #255	; 0xff
   17a34:	bl	11924 <sprintf@plt>
   17a38:	ldr	r1, [fp, #-12]
   17a3c:	add	r0, r1, r0
   17a40:	str	r0, [fp, #-12]
   17a44:	ldr	r0, [sp, #16]
   17a48:	sub	r0, r0, #8
   17a4c:	str	r0, [sp, #16]
   17a50:	ldr	r0, [fp, #-20]	; 0xffffffec
   17a54:	add	r0, r0, #1
   17a58:	str	r0, [fp, #-20]	; 0xffffffec
   17a5c:	b	17a10 <sprintf@plt+0x60ec>
   17a60:	ldr	r0, [sp, #16]
   17a64:	cmp	r0, #4
   17a68:	ble	17abc <sprintf@plt+0x6198>
   17a6c:	ldr	r0, [pc, #252]	; 17b70 <sprintf@plt+0x624c>
   17a70:	add	r1, pc, r0
   17a74:	ldr	r0, [fp, #-20]	; 0xffffffec
   17a78:	add	r2, r0, #1
   17a7c:	str	r2, [fp, #-20]	; 0xffffffec
   17a80:	ldrb	r0, [r0]
   17a84:	strb	r0, [sp, #23]
   17a88:	ldr	r0, [fp, #-12]
   17a8c:	ldrb	r2, [sp, #23]
   17a90:	ldr	r3, [sp, #16]
   17a94:	movw	ip, #8
   17a98:	sub	r3, ip, r3
   17a9c:	movw	ip, #255	; 0xff
   17aa0:	lsl	r3, ip, r3
   17aa4:	and	r2, r2, r3
   17aa8:	bl	11924 <sprintf@plt>
   17aac:	ldr	r1, [fp, #-12]
   17ab0:	add	r0, r1, r0
   17ab4:	str	r0, [fp, #-12]
   17ab8:	b	17b20 <sprintf@plt+0x61fc>
   17abc:	ldr	r0, [sp, #16]
   17ac0:	cmp	r0, #0
   17ac4:	ble	17b1c <sprintf@plt+0x61f8>
   17ac8:	ldr	r0, [pc, #156]	; 17b6c <sprintf@plt+0x6248>
   17acc:	add	r1, pc, r0
   17ad0:	ldr	r0, [fp, #-20]	; 0xffffffec
   17ad4:	add	r2, r0, #1
   17ad8:	str	r2, [fp, #-20]	; 0xffffffec
   17adc:	ldrb	r0, [r0]
   17ae0:	strb	r0, [sp, #23]
   17ae4:	ldr	r0, [fp, #-12]
   17ae8:	ldrb	r2, [sp, #23]
   17aec:	asr	r2, r2, #4
   17af0:	and	r2, r2, #15
   17af4:	ldr	r3, [sp, #16]
   17af8:	movw	ip, #4
   17afc:	sub	r3, ip, r3
   17b00:	movw	ip, #15
   17b04:	lsl	r3, ip, r3
   17b08:	and	r2, r2, r3
   17b0c:	bl	11924 <sprintf@plt>
   17b10:	ldr	r1, [fp, #-12]
   17b14:	add	r0, r1, r0
   17b18:	str	r0, [fp, #-12]
   17b1c:	b	17b20 <sprintf@plt+0x61fc>
   17b20:	ldr	r0, [pc, #76]	; 17b74 <sprintf@plt+0x6250>
   17b24:	add	r1, pc, r0
   17b28:	ldr	r0, [fp, #-12]
   17b2c:	ldr	r2, [sp, #12]
   17b30:	bl	11924 <sprintf@plt>
   17b34:	ldr	r1, [fp, #-12]
   17b38:	add	r0, r1, r0
   17b3c:	str	r0, [fp, #-12]
   17b40:	ldr	r0, [fp, #-20]	; 0xffffffec
   17b44:	ldr	r1, [fp, #-8]
   17b48:	str	r0, [r1]
   17b4c:	ldr	r0, [fp, #-12]
   17b50:	ldr	r1, [sp, #24]
   17b54:	sub	r0, r0, r1
   17b58:	str	r0, [fp, #-4]
   17b5c:	ldr	r0, [fp, #-4]
   17b60:	mov	sp, fp
   17b64:	pop	{fp, pc}
   17b68:			; <UNDEFINED> instruction: 0x000075b6
   17b6c:	ldrdeq	r7, [r0], -r7	; <UNPREDICTABLE>
   17b70:	andeq	r7, r0, lr, lsr #10
   17b74:	andeq	r7, r0, r3, lsl #9
   17b78:	andeq	r7, r0, lr, ror r5
   17b7c:	sub	sp, sp, #12
   17b80:	str	r0, [sp, #4]
   17b84:	ldr	r0, [sp, #4]
   17b88:	sub	r0, r0, #34	; 0x22
   17b8c:	cmp	r0, #58	; 0x3a
   17b90:	str	r0, [sp]
   17b94:	bhi	17ca0 <sprintf@plt+0x637c>
   17b98:	add	r0, pc, #8
   17b9c:	ldr	r1, [sp]
   17ba0:	ldr	r2, [r0, r1, lsl #2]
   17ba4:	add	pc, r0, r2
   17ba8:	andeq	r0, r0, ip, ror #1
   17bac:	strdeq	r0, [r0], -r8
   17bb0:	andeq	r0, r0, ip, ror #1
   17bb4:	strdeq	r0, [r0], -r8
   17bb8:	strdeq	r0, [r0], -r8
   17bbc:	strdeq	r0, [r0], -r8
   17bc0:	andeq	r0, r0, ip, ror #1
   17bc4:	andeq	r0, r0, ip, ror #1
   17bc8:	strdeq	r0, [r0], -r8
   17bcc:	strdeq	r0, [r0], -r8
   17bd0:	strdeq	r0, [r0], -r8
   17bd4:	strdeq	r0, [r0], -r8
   17bd8:	andeq	r0, r0, ip, ror #1
   17bdc:	strdeq	r0, [r0], -r8
   17be0:	strdeq	r0, [r0], -r8
   17be4:	strdeq	r0, [r0], -r8
   17be8:	strdeq	r0, [r0], -r8
   17bec:	strdeq	r0, [r0], -r8
   17bf0:	strdeq	r0, [r0], -r8
   17bf4:	strdeq	r0, [r0], -r8
   17bf8:	strdeq	r0, [r0], -r8
   17bfc:	strdeq	r0, [r0], -r8
   17c00:	strdeq	r0, [r0], -r8
   17c04:	strdeq	r0, [r0], -r8
   17c08:	strdeq	r0, [r0], -r8
   17c0c:	andeq	r0, r0, ip, ror #1
   17c10:	strdeq	r0, [r0], -r8
   17c14:	strdeq	r0, [r0], -r8
   17c18:	strdeq	r0, [r0], -r8
   17c1c:	strdeq	r0, [r0], -r8
   17c20:	andeq	r0, r0, ip, ror #1
   17c24:	strdeq	r0, [r0], -r8
   17c28:	strdeq	r0, [r0], -r8
   17c2c:	strdeq	r0, [r0], -r8
   17c30:	strdeq	r0, [r0], -r8
   17c34:	strdeq	r0, [r0], -r8
   17c38:	strdeq	r0, [r0], -r8
   17c3c:	strdeq	r0, [r0], -r8
   17c40:	strdeq	r0, [r0], -r8
   17c44:	strdeq	r0, [r0], -r8
   17c48:	strdeq	r0, [r0], -r8
   17c4c:	strdeq	r0, [r0], -r8
   17c50:	strdeq	r0, [r0], -r8
   17c54:	strdeq	r0, [r0], -r8
   17c58:	strdeq	r0, [r0], -r8
   17c5c:	strdeq	r0, [r0], -r8
   17c60:	strdeq	r0, [r0], -r8
   17c64:	strdeq	r0, [r0], -r8
   17c68:	strdeq	r0, [r0], -r8
   17c6c:	strdeq	r0, [r0], -r8
   17c70:	strdeq	r0, [r0], -r8
   17c74:	strdeq	r0, [r0], -r8
   17c78:	strdeq	r0, [r0], -r8
   17c7c:	strdeq	r0, [r0], -r8
   17c80:	strdeq	r0, [r0], -r8
   17c84:	strdeq	r0, [r0], -r8
   17c88:	strdeq	r0, [r0], -r8
   17c8c:	strdeq	r0, [r0], -r8
   17c90:	andeq	r0, r0, ip, ror #1
   17c94:	movw	r0, #1
   17c98:	str	r0, [sp, #8]
   17c9c:	b	17ca8 <sprintf@plt+0x6384>
   17ca0:	movw	r0, #0
   17ca4:	str	r0, [sp, #8]
   17ca8:	ldr	r0, [sp, #8]
   17cac:	add	sp, sp, #12
   17cb0:	bx	lr
   17cb4:	sub	sp, sp, #8
   17cb8:	str	r0, [sp, #4]
   17cbc:	ldr	r0, [sp, #4]
   17cc0:	cmp	r0, #32
   17cc4:	movw	r0, #0
   17cc8:	str	r0, [sp]
   17ccc:	ble	17ce4 <sprintf@plt+0x63c0>
   17cd0:	ldr	r0, [sp, #4]
   17cd4:	cmp	r0, #127	; 0x7f
   17cd8:	movw	r0, #0
   17cdc:	movlt	r0, #1
   17ce0:	str	r0, [sp]
   17ce4:	ldr	r0, [sp]
   17ce8:	and	r0, r0, #1
   17cec:	add	sp, sp, #8
   17cf0:	bx	lr
   17cf4:	push	{r4, r5, fp, lr}
   17cf8:	add	fp, sp, #8
   17cfc:	sub	sp, sp, #288	; 0x120
   17d00:	ldr	ip, [fp, #8]
   17d04:	add	lr, sp, #13
   17d08:	str	r0, [fp, #-16]
   17d0c:	str	r1, [fp, #-20]	; 0xffffffec
   17d10:	str	r2, [fp, #-24]	; 0xffffffe8
   17d14:	str	r3, [fp, #-28]	; 0xffffffe4
   17d18:	ldr	r0, [fp, #-16]
   17d1c:	mov	r1, lr
   17d20:	movw	r2, #255	; 0xff
   17d24:	str	ip, [sp, #8]
   17d28:	bl	17d6c <sprintf@plt+0x6448>
   17d2c:	cmn	r0, #1
   17d30:	bne	17d40 <sprintf@plt+0x641c>
   17d34:	mvn	r0, #0
   17d38:	str	r0, [fp, #-12]
   17d3c:	b	17d60 <sprintf@plt+0x643c>
   17d40:	add	r0, sp, #13
   17d44:	ldr	r1, [fp, #-20]	; 0xffffffec
   17d48:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17d4c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17d50:	ldr	ip, [fp, #8]
   17d54:	str	ip, [sp]
   17d58:	bl	18304 <sprintf@plt+0x69e0>
   17d5c:	str	r0, [fp, #-12]
   17d60:	ldr	r0, [fp, #-12]
   17d64:	sub	sp, fp, #8
   17d68:	pop	{r4, r5, fp, pc}
   17d6c:	push	{fp, lr}
   17d70:	mov	fp, sp
   17d74:	sub	sp, sp, #64	; 0x40
   17d78:	str	r0, [fp, #-8]
   17d7c:	str	r1, [fp, #-12]
   17d80:	str	r2, [fp, #-16]
   17d84:	movw	r0, #0
   17d88:	str	r0, [sp, #16]
   17d8c:	str	r0, [sp, #20]
   17d90:	ldr	r0, [fp, #-12]
   17d94:	str	r0, [fp, #-24]	; 0xffffffe8
   17d98:	ldr	r0, [fp, #-12]
   17d9c:	ldr	r1, [fp, #-16]
   17da0:	add	r0, r0, r1
   17da4:	str	r0, [fp, #-28]	; 0xffffffe4
   17da8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17dac:	add	r1, r0, #1
   17db0:	str	r1, [fp, #-24]	; 0xffffffe8
   17db4:	str	r0, [fp, #-20]	; 0xffffffec
   17db8:	ldr	r0, [fp, #-8]
   17dbc:	add	r1, r0, #1
   17dc0:	str	r1, [fp, #-8]
   17dc4:	ldrb	r0, [r0]
   17dc8:	str	r0, [sp, #28]
   17dcc:	cmp	r0, #0
   17dd0:	beq	181f0 <sprintf@plt+0x68cc>
   17dd4:	ldr	r0, [sp, #20]
   17dd8:	cmp	r0, #0
   17ddc:	beq	1803c <sprintf@plt+0x6718>
   17de0:	ldr	r0, [sp, #28]
   17de4:	cmp	r0, #91	; 0x5b
   17de8:	bne	17edc <sprintf@plt+0x65b8>
   17dec:	ldr	r0, [fp, #-8]
   17df0:	movw	r1, #93	; 0x5d
   17df4:	bl	1160c <strchr@plt>
   17df8:	str	r0, [sp, #32]
   17dfc:	movw	r1, #0
   17e00:	cmp	r0, r1
   17e04:	bne	17e20 <sprintf@plt+0x64fc>
   17e08:	bl	11918 <__errno_location@plt>
   17e0c:	movw	lr, #22
   17e10:	str	lr, [r0]
   17e14:	mvn	r0, #0
   17e18:	str	r0, [fp, #-4]
   17e1c:	b	182e0 <sprintf@plt+0x69bc>
   17e20:	ldr	r0, [sp, #32]
   17e24:	add	r1, r0, #2
   17e28:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17e2c:	sub	r2, fp, #8
   17e30:	str	r0, [sp, #12]
   17e34:	mov	r0, r2
   17e38:	sub	r2, fp, #20
   17e3c:	sub	r3, fp, #24
   17e40:	ldr	ip, [sp, #12]
   17e44:	str	ip, [sp]
   17e48:	bl	186a8 <sprintf@plt+0x6d84>
   17e4c:	str	r0, [sp, #16]
   17e50:	cmp	r0, #0
   17e54:	beq	17e78 <sprintf@plt+0x6554>
   17e58:	ldr	r0, [sp, #16]
   17e5c:	str	r0, [sp, #8]
   17e60:	bl	11918 <__errno_location@plt>
   17e64:	ldr	lr, [sp, #8]
   17e68:	str	lr, [r0]
   17e6c:	mvn	r0, #0
   17e70:	str	r0, [fp, #-4]
   17e74:	b	182e0 <sprintf@plt+0x69bc>
   17e78:	movw	r0, #0
   17e7c:	str	r0, [sp, #20]
   17e80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e84:	add	r1, r0, #1
   17e88:	str	r1, [fp, #-24]	; 0xffffffe8
   17e8c:	str	r0, [fp, #-20]	; 0xffffffec
   17e90:	ldr	r0, [fp, #-8]
   17e94:	add	r1, r0, #1
   17e98:	str	r1, [fp, #-8]
   17e9c:	ldrb	r0, [r0]
   17ea0:	str	r0, [sp, #28]
   17ea4:	cmp	r0, #0
   17ea8:	bne	17eb0 <sprintf@plt+0x658c>
   17eac:	b	18230 <sprintf@plt+0x690c>
   17eb0:	ldr	r0, [sp, #28]
   17eb4:	cmp	r0, #46	; 0x2e
   17eb8:	beq	17ed4 <sprintf@plt+0x65b0>
   17ebc:	bl	11918 <__errno_location@plt>
   17ec0:	movw	lr, #22
   17ec4:	str	lr, [r0]
   17ec8:	mvn	r0, #0
   17ecc:	str	r0, [fp, #-4]
   17ed0:	b	182e0 <sprintf@plt+0x69bc>
   17ed4:	b	17ed8 <sprintf@plt+0x65b4>
   17ed8:	b	17db8 <sprintf@plt+0x6494>
   17edc:	ldr	r0, [pc, #1032]	; 182ec <sprintf@plt+0x69c8>
   17ee0:	add	r0, pc, r0
   17ee4:	ldr	r1, [sp, #28]
   17ee8:	bl	1160c <strchr@plt>
   17eec:	str	r0, [sp, #32]
   17ef0:	movw	r1, #0
   17ef4:	cmp	r0, r1
   17ef8:	beq	1802c <sprintf@plt+0x6708>
   17efc:	ldr	r0, [pc, #1004]	; 182f0 <sprintf@plt+0x69cc>
   17f00:	add	r0, pc, r0
   17f04:	ldr	r1, [sp, #32]
   17f08:	sub	r0, r1, r0
   17f0c:	movw	r1, #100	; 0x64
   17f10:	mul	r0, r0, r1
   17f14:	str	r0, [sp, #24]
   17f18:	ldr	r0, [fp, #-8]
   17f1c:	add	r1, r0, #1
   17f20:	str	r1, [fp, #-8]
   17f24:	ldrb	r0, [r0]
   17f28:	str	r0, [sp, #28]
   17f2c:	cmp	r0, #0
   17f30:	beq	17f54 <sprintf@plt+0x6630>
   17f34:	ldr	r0, [pc, #952]	; 182f4 <sprintf@plt+0x69d0>
   17f38:	add	r0, pc, r0
   17f3c:	ldr	r1, [sp, #28]
   17f40:	bl	1160c <strchr@plt>
   17f44:	str	r0, [sp, #32]
   17f48:	movw	r1, #0
   17f4c:	cmp	r0, r1
   17f50:	bne	17f6c <sprintf@plt+0x6648>
   17f54:	bl	11918 <__errno_location@plt>
   17f58:	movw	lr, #90	; 0x5a
   17f5c:	str	lr, [r0]
   17f60:	mvn	r0, #0
   17f64:	str	r0, [fp, #-4]
   17f68:	b	182e0 <sprintf@plt+0x69bc>
   17f6c:	ldr	r0, [pc, #900]	; 182f8 <sprintf@plt+0x69d4>
   17f70:	add	r0, pc, r0
   17f74:	ldr	r1, [sp, #32]
   17f78:	sub	r0, r1, r0
   17f7c:	movw	r1, #10
   17f80:	mul	r0, r0, r1
   17f84:	ldr	r1, [sp, #24]
   17f88:	add	r0, r1, r0
   17f8c:	str	r0, [sp, #24]
   17f90:	ldr	r0, [fp, #-8]
   17f94:	add	r1, r0, #1
   17f98:	str	r1, [fp, #-8]
   17f9c:	ldrb	r0, [r0]
   17fa0:	str	r0, [sp, #28]
   17fa4:	cmp	r0, #0
   17fa8:	beq	17fcc <sprintf@plt+0x66a8>
   17fac:	ldr	r0, [pc, #840]	; 182fc <sprintf@plt+0x69d8>
   17fb0:	add	r0, pc, r0
   17fb4:	ldr	r1, [sp, #28]
   17fb8:	bl	1160c <strchr@plt>
   17fbc:	str	r0, [sp, #32]
   17fc0:	movw	r1, #0
   17fc4:	cmp	r0, r1
   17fc8:	bne	17fe4 <sprintf@plt+0x66c0>
   17fcc:	bl	11918 <__errno_location@plt>
   17fd0:	movw	lr, #90	; 0x5a
   17fd4:	str	lr, [r0]
   17fd8:	mvn	r0, #0
   17fdc:	str	r0, [fp, #-4]
   17fe0:	b	182e0 <sprintf@plt+0x69bc>
   17fe4:	ldr	r0, [pc, #788]	; 18300 <sprintf@plt+0x69dc>
   17fe8:	add	r0, pc, r0
   17fec:	ldr	r1, [sp, #32]
   17ff0:	sub	r0, r1, r0
   17ff4:	ldr	r1, [sp, #24]
   17ff8:	add	r0, r1, r0
   17ffc:	str	r0, [sp, #24]
   18000:	ldr	r0, [sp, #24]
   18004:	cmp	r0, #255	; 0xff
   18008:	ble	18024 <sprintf@plt+0x6700>
   1800c:	bl	11918 <__errno_location@plt>
   18010:	movw	lr, #90	; 0x5a
   18014:	str	lr, [r0]
   18018:	mvn	r0, #0
   1801c:	str	r0, [fp, #-4]
   18020:	b	182e0 <sprintf@plt+0x69bc>
   18024:	ldr	r0, [sp, #24]
   18028:	str	r0, [sp, #28]
   1802c:	b	18030 <sprintf@plt+0x670c>
   18030:	movw	r0, #0
   18034:	str	r0, [sp, #20]
   18038:	b	181b0 <sprintf@plt+0x688c>
   1803c:	ldr	r0, [sp, #28]
   18040:	cmp	r0, #92	; 0x5c
   18044:	bne	18054 <sprintf@plt+0x6730>
   18048:	movw	r0, #1
   1804c:	str	r0, [sp, #20]
   18050:	b	17db8 <sprintf@plt+0x6494>
   18054:	ldr	r0, [sp, #28]
   18058:	cmp	r0, #46	; 0x2e
   1805c:	bne	181a8 <sprintf@plt+0x6884>
   18060:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18064:	ldr	r1, [fp, #-20]	; 0xffffffec
   18068:	sub	r0, r0, r1
   1806c:	sub	r0, r0, #1
   18070:	str	r0, [sp, #28]
   18074:	ldr	r0, [sp, #28]
   18078:	and	r0, r0, #192	; 0xc0
   1807c:	cmp	r0, #0
   18080:	beq	1809c <sprintf@plt+0x6778>
   18084:	bl	11918 <__errno_location@plt>
   18088:	movw	lr, #90	; 0x5a
   1808c:	str	lr, [r0]
   18090:	mvn	r0, #0
   18094:	str	r0, [fp, #-4]
   18098:	b	182e0 <sprintf@plt+0x69bc>
   1809c:	ldr	r0, [fp, #-20]	; 0xffffffec
   180a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   180a4:	cmp	r0, r1
   180a8:	bcc	180c4 <sprintf@plt+0x67a0>
   180ac:	bl	11918 <__errno_location@plt>
   180b0:	movw	lr, #90	; 0x5a
   180b4:	str	lr, [r0]
   180b8:	mvn	r0, #0
   180bc:	str	r0, [fp, #-4]
   180c0:	b	182e0 <sprintf@plt+0x69bc>
   180c4:	ldr	r0, [sp, #28]
   180c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   180cc:	strb	r0, [r1]
   180d0:	ldr	r0, [fp, #-8]
   180d4:	ldrb	r0, [r0]
   180d8:	cmp	r0, #0
   180dc:	bne	18160 <sprintf@plt+0x683c>
   180e0:	ldr	r0, [sp, #28]
   180e4:	cmp	r0, #0
   180e8:	beq	18128 <sprintf@plt+0x6804>
   180ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   180f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   180f4:	cmp	r0, r1
   180f8:	bcc	18114 <sprintf@plt+0x67f0>
   180fc:	bl	11918 <__errno_location@plt>
   18100:	movw	lr, #90	; 0x5a
   18104:	str	lr, [r0]
   18108:	mvn	r0, #0
   1810c:	str	r0, [fp, #-4]
   18110:	b	182e0 <sprintf@plt+0x69bc>
   18114:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18118:	add	r1, r0, #1
   1811c:	str	r1, [fp, #-24]	; 0xffffffe8
   18120:	movw	r1, #0
   18124:	strb	r1, [r0]
   18128:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1812c:	ldr	r1, [fp, #-12]
   18130:	sub	r0, r0, r1
   18134:	cmp	r0, #255	; 0xff
   18138:	ble	18154 <sprintf@plt+0x6830>
   1813c:	bl	11918 <__errno_location@plt>
   18140:	movw	lr, #90	; 0x5a
   18144:	str	lr, [r0]
   18148:	mvn	r0, #0
   1814c:	str	r0, [fp, #-4]
   18150:	b	182e0 <sprintf@plt+0x69bc>
   18154:	movw	r0, #1
   18158:	str	r0, [fp, #-4]
   1815c:	b	182e0 <sprintf@plt+0x69bc>
   18160:	ldr	r0, [sp, #28]
   18164:	cmp	r0, #0
   18168:	beq	1817c <sprintf@plt+0x6858>
   1816c:	ldr	r0, [fp, #-8]
   18170:	ldrb	r0, [r0]
   18174:	cmp	r0, #46	; 0x2e
   18178:	bne	18194 <sprintf@plt+0x6870>
   1817c:	bl	11918 <__errno_location@plt>
   18180:	movw	lr, #90	; 0x5a
   18184:	str	lr, [r0]
   18188:	mvn	r0, #0
   1818c:	str	r0, [fp, #-4]
   18190:	b	182e0 <sprintf@plt+0x69bc>
   18194:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18198:	add	r1, r0, #1
   1819c:	str	r1, [fp, #-24]	; 0xffffffe8
   181a0:	str	r0, [fp, #-20]	; 0xffffffec
   181a4:	b	17db8 <sprintf@plt+0x6494>
   181a8:	b	181ac <sprintf@plt+0x6888>
   181ac:	b	181b0 <sprintf@plt+0x688c>
   181b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   181b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   181b8:	cmp	r0, r1
   181bc:	bcc	181d8 <sprintf@plt+0x68b4>
   181c0:	bl	11918 <__errno_location@plt>
   181c4:	movw	lr, #90	; 0x5a
   181c8:	str	lr, [r0]
   181cc:	mvn	r0, #0
   181d0:	str	r0, [fp, #-4]
   181d4:	b	182e0 <sprintf@plt+0x69bc>
   181d8:	ldr	r0, [sp, #28]
   181dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   181e0:	add	r2, r1, #1
   181e4:	str	r2, [fp, #-24]	; 0xffffffe8
   181e8:	strb	r0, [r1]
   181ec:	b	17db8 <sprintf@plt+0x6494>
   181f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   181f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   181f8:	sub	r0, r0, r1
   181fc:	sub	r0, r0, #1
   18200:	str	r0, [sp, #28]
   18204:	ldr	r0, [sp, #28]
   18208:	and	r0, r0, #192	; 0xc0
   1820c:	cmp	r0, #0
   18210:	beq	1822c <sprintf@plt+0x6908>
   18214:	bl	11918 <__errno_location@plt>
   18218:	movw	lr, #90	; 0x5a
   1821c:	str	lr, [r0]
   18220:	mvn	r0, #0
   18224:	str	r0, [fp, #-4]
   18228:	b	182e0 <sprintf@plt+0x69bc>
   1822c:	b	18230 <sprintf@plt+0x690c>
   18230:	ldr	r0, [fp, #-20]	; 0xffffffec
   18234:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18238:	cmp	r0, r1
   1823c:	bcc	18258 <sprintf@plt+0x6934>
   18240:	bl	11918 <__errno_location@plt>
   18244:	movw	lr, #90	; 0x5a
   18248:	str	lr, [r0]
   1824c:	mvn	r0, #0
   18250:	str	r0, [fp, #-4]
   18254:	b	182e0 <sprintf@plt+0x69bc>
   18258:	ldr	r0, [sp, #28]
   1825c:	ldr	r1, [fp, #-20]	; 0xffffffec
   18260:	strb	r0, [r1]
   18264:	ldr	r0, [sp, #28]
   18268:	cmp	r0, #0
   1826c:	beq	182ac <sprintf@plt+0x6988>
   18270:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18274:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18278:	cmp	r0, r1
   1827c:	bcc	18298 <sprintf@plt+0x6974>
   18280:	bl	11918 <__errno_location@plt>
   18284:	movw	lr, #90	; 0x5a
   18288:	str	lr, [r0]
   1828c:	mvn	r0, #0
   18290:	str	r0, [fp, #-4]
   18294:	b	182e0 <sprintf@plt+0x69bc>
   18298:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1829c:	add	r1, r0, #1
   182a0:	str	r1, [fp, #-24]	; 0xffffffe8
   182a4:	movw	r1, #0
   182a8:	strb	r1, [r0]
   182ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182b0:	ldr	r1, [fp, #-12]
   182b4:	sub	r0, r0, r1
   182b8:	cmp	r0, #255	; 0xff
   182bc:	ble	182d8 <sprintf@plt+0x69b4>
   182c0:	bl	11918 <__errno_location@plt>
   182c4:	movw	lr, #90	; 0x5a
   182c8:	str	lr, [r0]
   182cc:	mvn	r0, #0
   182d0:	str	r0, [fp, #-4]
   182d4:	b	182e0 <sprintf@plt+0x69bc>
   182d8:	movw	r0, #0
   182dc:	str	r0, [fp, #-4]
   182e0:	ldr	r0, [fp, #-4]
   182e4:	mov	sp, fp
   182e8:	pop	{fp, pc}
   182ec:	andeq	r7, r0, ip, asr #1
   182f0:	andeq	r7, r0, ip, lsr #1
   182f4:	andeq	r7, r0, r4, ror r0
   182f8:	andeq	r7, r0, ip, lsr r0
   182fc:	strdeq	r6, [r0], -ip
   18300:	andeq	r6, r0, r4, asr #31
   18304:	push	{fp, lr}
   18308:	mov	fp, sp
   1830c:	sub	sp, sp, #64	; 0x40
   18310:	ldr	ip, [fp, #8]
   18314:	str	r0, [fp, #-8]
   18318:	str	r1, [fp, #-12]
   1831c:	str	r2, [fp, #-16]
   18320:	str	r3, [fp, #-20]	; 0xffffffec
   18324:	movw	r0, #1
   18328:	str	r0, [sp, #8]
   1832c:	ldr	r0, [fp, #-8]
   18330:	str	r0, [sp, #20]
   18334:	ldr	r0, [fp, #-12]
   18338:	str	r0, [fp, #-24]	; 0xffffffe8
   1833c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18340:	ldr	r1, [fp, #-16]
   18344:	add	r0, r0, r1
   18348:	str	r0, [sp, #28]
   1834c:	movw	r0, #0
   18350:	str	r0, [fp, #-28]	; 0xffffffe4
   18354:	str	r0, [sp, #32]
   18358:	ldr	r1, [fp, #-20]	; 0xffffffec
   1835c:	cmp	r1, r0
   18360:	str	ip, [sp]
   18364:	beq	183c4 <sprintf@plt+0x6aa0>
   18368:	ldr	r0, [fp, #-20]	; 0xffffffec
   1836c:	add	r1, r0, #4
   18370:	str	r1, [fp, #-20]	; 0xffffffec
   18374:	ldr	r0, [r0]
   18378:	str	r0, [sp, #24]
   1837c:	movw	r1, #0
   18380:	cmp	r0, r1
   18384:	beq	183c0 <sprintf@plt+0x6a9c>
   18388:	ldr	r0, [fp, #-20]	; 0xffffffec
   1838c:	str	r0, [fp, #-28]	; 0xffffffe4
   18390:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18394:	ldr	r0, [r0]
   18398:	movw	r1, #0
   1839c:	cmp	r0, r1
   183a0:	beq	183b8 <sprintf@plt+0x6a94>
   183a4:	b	183a8 <sprintf@plt+0x6a84>
   183a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   183ac:	add	r0, r0, #4
   183b0:	str	r0, [fp, #-28]	; 0xffffffe4
   183b4:	b	18390 <sprintf@plt+0x6a6c>
   183b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   183bc:	str	r0, [sp, #32]
   183c0:	b	183cc <sprintf@plt+0x6aa8>
   183c4:	movw	r0, #0
   183c8:	str	r0, [sp, #24]
   183cc:	movw	r0, #0
   183d0:	str	r0, [sp, #12]
   183d4:	ldr	r0, [sp, #20]
   183d8:	ldrb	r0, [r0]
   183dc:	str	r0, [sp, #16]
   183e0:	ldr	r0, [sp, #16]
   183e4:	and	r0, r0, #192	; 0xc0
   183e8:	cmp	r0, #192	; 0xc0
   183ec:	bne	18408 <sprintf@plt+0x6ae4>
   183f0:	bl	11918 <__errno_location@plt>
   183f4:	movw	lr, #90	; 0x5a
   183f8:	str	lr, [r0]
   183fc:	mvn	r0, #0
   18400:	str	r0, [fp, #-4]
   18404:	b	1869c <sprintf@plt+0x6d78>
   18408:	ldr	r0, [sp, #20]
   1840c:	bl	1786c <sprintf@plt+0x5f48>
   18410:	str	r0, [sp, #4]
   18414:	cmp	r0, #0
   18418:	bge	18434 <sprintf@plt+0x6b10>
   1841c:	bl	11918 <__errno_location@plt>
   18420:	movw	lr, #22
   18424:	str	lr, [r0]
   18428:	mvn	r0, #0
   1842c:	str	r0, [fp, #-4]
   18430:	b	1869c <sprintf@plt+0x6d78>
   18434:	ldr	r0, [sp, #4]
   18438:	add	r0, r0, #1
   1843c:	ldr	r1, [sp, #12]
   18440:	add	r0, r1, r0
   18444:	str	r0, [sp, #12]
   18448:	ldr	r0, [sp, #12]
   1844c:	cmp	r0, #255	; 0xff
   18450:	ble	1846c <sprintf@plt+0x6b48>
   18454:	bl	11918 <__errno_location@plt>
   18458:	movw	lr, #90	; 0x5a
   1845c:	str	lr, [r0]
   18460:	mvn	r0, #0
   18464:	str	r0, [fp, #-4]
   18468:	b	1869c <sprintf@plt+0x6d78>
   1846c:	ldr	r0, [sp, #4]
   18470:	add	r0, r0, #1
   18474:	ldr	r1, [sp, #20]
   18478:	add	r0, r1, r0
   1847c:	str	r0, [sp, #20]
   18480:	ldr	r0, [sp, #16]
   18484:	cmp	r0, #0
   18488:	bne	183d4 <sprintf@plt+0x6ab0>
   1848c:	ldr	r0, [fp, #-8]
   18490:	str	r0, [sp, #20]
   18494:	ldr	r0, [sp, #20]
   18498:	ldrb	r0, [r0]
   1849c:	str	r0, [sp, #16]
   184a0:	ldr	r0, [sp, #16]
   184a4:	cmp	r0, #0
   184a8:	beq	185bc <sprintf@plt+0x6c98>
   184ac:	ldr	r0, [sp, #24]
   184b0:	movw	r1, #0
   184b4:	cmp	r0, r1
   184b8:	beq	185bc <sprintf@plt+0x6c98>
   184bc:	ldr	r0, [sp, #20]
   184c0:	ldr	r1, [sp, #24]
   184c4:	ldr	r2, [fp, #-20]	; 0xffffffec
   184c8:	ldr	r3, [sp, #32]
   184cc:	bl	18ae8 <sprintf@plt+0x71c4>
   184d0:	str	r0, [sp, #12]
   184d4:	ldr	r0, [sp, #12]
   184d8:	cmp	r0, #0
   184dc:	blt	1854c <sprintf@plt+0x6c28>
   184e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184e4:	add	r0, r0, #1
   184e8:	ldr	r1, [sp, #28]
   184ec:	cmp	r0, r1
   184f0:	bcc	184f8 <sprintf@plt+0x6bd4>
   184f4:	b	18658 <sprintf@plt+0x6d34>
   184f8:	ldr	r0, [sp, #12]
   184fc:	mov	r1, #192	; 0xc0
   18500:	orr	r0, r1, r0, lsr #8
   18504:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18508:	add	r2, r1, #1
   1850c:	str	r2, [fp, #-24]	; 0xffffffe8
   18510:	strb	r0, [r1]
   18514:	ldr	r0, [sp, #12]
   18518:	asr	r1, r0, #31
   1851c:	add	r1, r0, r1, lsr #24
   18520:	bic	r1, r1, #255	; 0xff
   18524:	sub	r0, r0, r1
   18528:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1852c:	add	r2, r1, #1
   18530:	str	r2, [fp, #-24]	; 0xffffffe8
   18534:	strb	r0, [r1]
   18538:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1853c:	ldr	r1, [fp, #-12]
   18540:	sub	r0, r0, r1
   18544:	str	r0, [fp, #-4]
   18548:	b	1869c <sprintf@plt+0x6d78>
   1854c:	ldr	r0, [fp, #8]
   18550:	movw	r1, #0
   18554:	cmp	r0, r1
   18558:	beq	185b8 <sprintf@plt+0x6c94>
   1855c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18560:	ldr	r1, [fp, #8]
   18564:	mvn	r2, #3
   18568:	add	r1, r1, r2
   1856c:	cmp	r0, r1
   18570:	bcs	185b8 <sprintf@plt+0x6c94>
   18574:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18578:	ldr	r1, [sp, #24]
   1857c:	sub	r0, r0, r1
   18580:	cmp	r0, #16384	; 0x4000
   18584:	bge	185b8 <sprintf@plt+0x6c94>
   18588:	ldr	r0, [sp, #8]
   1858c:	cmp	r0, #0
   18590:	beq	185b8 <sprintf@plt+0x6c94>
   18594:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18598:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1859c:	add	r2, r1, #4
   185a0:	str	r2, [fp, #-28]	; 0xffffffe4
   185a4:	str	r0, [r1]
   185a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   185ac:	movw	r1, #0
   185b0:	str	r1, [r0]
   185b4:	str	r1, [sp, #8]
   185b8:	b	185bc <sprintf@plt+0x6c98>
   185bc:	ldr	r0, [sp, #16]
   185c0:	and	r0, r0, #192	; 0xc0
   185c4:	cmp	r0, #192	; 0xc0
   185c8:	bne	185d0 <sprintf@plt+0x6cac>
   185cc:	b	18658 <sprintf@plt+0x6d34>
   185d0:	ldr	r0, [sp, #20]
   185d4:	bl	1786c <sprintf@plt+0x5f48>
   185d8:	str	r0, [sp, #16]
   185dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   185e0:	add	r0, r0, #1
   185e4:	ldr	lr, [sp, #16]
   185e8:	add	r0, r0, lr
   185ec:	ldr	lr, [sp, #28]
   185f0:	cmp	r0, lr
   185f4:	bcc	185fc <sprintf@plt+0x6cd8>
   185f8:	b	18658 <sprintf@plt+0x6d34>
   185fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18600:	ldr	r1, [sp, #20]
   18604:	ldr	r2, [sp, #16]
   18608:	add	r2, r2, #1
   1860c:	bl	11750 <memcpy@plt>
   18610:	ldr	r0, [sp, #16]
   18614:	add	r0, r0, #1
   18618:	ldr	r1, [sp, #20]
   1861c:	add	r0, r1, r0
   18620:	str	r0, [sp, #20]
   18624:	ldr	r0, [sp, #16]
   18628:	add	r0, r0, #1
   1862c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18630:	add	r0, r1, r0
   18634:	str	r0, [fp, #-24]	; 0xffffffe8
   18638:	ldr	r0, [sp, #16]
   1863c:	cmp	r0, #0
   18640:	bne	18494 <sprintf@plt+0x6b70>
   18644:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18648:	ldr	r1, [sp, #28]
   1864c:	cmp	r0, r1
   18650:	bls	1868c <sprintf@plt+0x6d68>
   18654:	b	18658 <sprintf@plt+0x6d34>
   18658:	ldr	r0, [sp, #24]
   1865c:	movw	r1, #0
   18660:	cmp	r0, r1
   18664:	beq	18674 <sprintf@plt+0x6d50>
   18668:	ldr	r0, [sp, #32]
   1866c:	movw	r1, #0
   18670:	str	r1, [r0]
   18674:	bl	11918 <__errno_location@plt>
   18678:	movw	lr, #90	; 0x5a
   1867c:	str	lr, [r0]
   18680:	mvn	r0, #0
   18684:	str	r0, [fp, #-4]
   18688:	b	1869c <sprintf@plt+0x6d78>
   1868c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18690:	ldr	r1, [fp, #-12]
   18694:	sub	r0, r0, r1
   18698:	str	r0, [fp, #-4]
   1869c:	ldr	r0, [fp, #-4]
   186a0:	mov	sp, fp
   186a4:	pop	{fp, pc}
   186a8:	push	{fp, lr}
   186ac:	mov	fp, sp
   186b0:	sub	sp, sp, #88	; 0x58
   186b4:	ldr	ip, [fp, #8]
   186b8:	str	r0, [fp, #-8]
   186bc:	str	r1, [fp, #-12]
   186c0:	str	r2, [fp, #-16]
   186c4:	str	r3, [fp, #-20]	; 0xffffffec
   186c8:	movw	r0, #0
   186cc:	str	r0, [fp, #-24]	; 0xffffffe8
   186d0:	ldr	r1, [fp, #-8]
   186d4:	ldr	r1, [r1]
   186d8:	str	r1, [fp, #-28]	; 0xffffffe4
   186dc:	str	r0, [sp, #44]	; 0x2c
   186e0:	str	r0, [sp, #40]	; 0x28
   186e4:	str	r0, [sp, #36]	; 0x24
   186e8:	str	r0, [sp, #32]
   186ec:	str	r0, [sp, #28]
   186f0:	str	r0, [sp, #44]	; 0x2c
   186f4:	str	r0, [fp, #-40]	; 0xffffffd8
   186f8:	ldr	r0, [fp, #-12]
   186fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18700:	sub	r0, r0, r1
   18704:	cmp	r0, #2
   18708:	str	ip, [sp, #20]
   1870c:	bge	1871c <sprintf@plt+0x6df8>
   18710:	movw	r0, #22
   18714:	str	r0, [fp, #-4]
   18718:	b	18ad8 <sprintf@plt+0x71b4>
   1871c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18720:	add	r1, r0, #1
   18724:	str	r1, [fp, #-28]	; 0xffffffe4
   18728:	ldrb	r0, [r0]
   1872c:	cmp	r0, #120	; 0x78
   18730:	beq	18740 <sprintf@plt+0x6e1c>
   18734:	movw	r0, #22
   18738:	str	r0, [fp, #-4]
   1873c:	b	18ad8 <sprintf@plt+0x71b4>
   18740:	bl	117f8 <__ctype_b_loc@plt>
   18744:	ldr	r0, [r0]
   18748:	ldr	lr, [fp, #-28]	; 0xffffffe4
   1874c:	ldrb	lr, [lr]
   18750:	mov	r1, lr
   18754:	add	r0, r0, lr, lsl #1
   18758:	ldrh	r0, [r0]
   1875c:	and	r0, r0, #4096	; 0x1000
   18760:	cmp	r0, #0
   18764:	str	r1, [sp, #16]
   18768:	bne	18778 <sprintf@plt+0x6e54>
   1876c:	movw	r0, #22
   18770:	str	r0, [fp, #-4]
   18774:	b	18ad8 <sprintf@plt+0x71b4>
   18778:	ldr	r0, [fp, #-20]	; 0xffffffec
   1877c:	add	r0, r0, #4
   18780:	str	r0, [fp, #-32]	; 0xffffffe0
   18784:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18788:	ldr	r1, [fp, #-12]
   1878c:	cmp	r0, r1
   18790:	movw	r0, #0
   18794:	str	r0, [sp, #12]
   18798:	bcs	187b4 <sprintf@plt+0x6e90>
   1879c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   187a0:	ldr	r1, [fp, #8]
   187a4:	cmp	r0, r1
   187a8:	movw	r0, #0
   187ac:	movcc	r0, #1
   187b0:	str	r0, [sp, #12]
   187b4:	ldr	r0, [sp, #12]
   187b8:	tst	r0, #1
   187bc:	beq	189d8 <sprintf@plt+0x70b4>
   187c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   187c4:	ldrb	r0, [r0]
   187c8:	strb	r0, [fp, #-33]	; 0xffffffdf
   187cc:	mov	r1, r0
   187d0:	cmp	r0, #47	; 0x2f
   187d4:	str	r1, [sp, #8]
   187d8:	beq	18884 <sprintf@plt+0x6f60>
   187dc:	b	187e0 <sprintf@plt+0x6ebc>
   187e0:	ldr	r0, [sp, #8]
   187e4:	cmp	r0, #93	; 0x5d
   187e8:	bne	18890 <sprintf@plt+0x6f6c>
   187ec:	b	187f0 <sprintf@plt+0x6ecc>
   187f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   187f4:	cmp	r0, #0
   187f8:	beq	1884c <sprintf@plt+0x6f28>
   187fc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18800:	movw	r1, #0
   18804:	cmp	r0, r1
   18808:	bne	18818 <sprintf@plt+0x6ef4>
   1880c:	movw	r0, #22
   18810:	str	r0, [fp, #-4]
   18814:	b	18ad8 <sprintf@plt+0x71b4>
   18818:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1881c:	add	r1, sp, #44	; 0x2c
   18820:	movw	r2, #10
   18824:	bl	11774 <strtol@plt>
   18828:	str	r0, [sp, #28]
   1882c:	ldr	r0, [sp, #44]	; 0x2c
   18830:	ldrb	r0, [r0]
   18834:	cmp	r0, #93	; 0x5d
   18838:	beq	18848 <sprintf@plt+0x6f24>
   1883c:	movw	r0, #22
   18840:	str	r0, [fp, #-4]
   18844:	b	18ad8 <sprintf@plt+0x71b4>
   18848:	b	1884c <sprintf@plt+0x6f28>
   1884c:	ldr	r0, [sp, #36]	; 0x24
   18850:	cmp	r0, #0
   18854:	beq	18874 <sprintf@plt+0x6f50>
   18858:	ldr	r0, [sp, #40]	; 0x28
   1885c:	lsl	r0, r0, #4
   18860:	and	r0, r0, #255	; 0xff
   18864:	ldr	r1, [fp, #-32]	; 0xffffffe0
   18868:	add	r2, r1, #1
   1886c:	str	r2, [fp, #-32]	; 0xffffffe0
   18870:	strb	r0, [r1]
   18874:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18878:	add	r0, r0, #1
   1887c:	str	r0, [fp, #-28]	; 0xffffffe4
   18880:	b	189dc <sprintf@plt+0x70b8>
   18884:	movw	r0, #1
   18888:	str	r0, [fp, #-24]	; 0xffffffe8
   1888c:	b	189c4 <sprintf@plt+0x70a0>
   18890:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18894:	cmp	r0, #0
   18898:	beq	18904 <sprintf@plt+0x6fe0>
   1889c:	bl	117f8 <__ctype_b_loc@plt>
   188a0:	ldr	r0, [r0]
   188a4:	ldrb	lr, [fp, #-33]	; 0xffffffdf
   188a8:	mov	r1, lr
   188ac:	add	r0, r0, lr, lsl #1
   188b0:	ldrh	r0, [r0]
   188b4:	and	r0, r0, #2048	; 0x800
   188b8:	cmp	r0, #0
   188bc:	str	r1, [sp, #4]
   188c0:	bne	188d0 <sprintf@plt+0x6fac>
   188c4:	movw	r0, #22
   188c8:	str	r0, [fp, #-4]
   188cc:	b	18ad8 <sprintf@plt+0x71b4>
   188d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   188d4:	movw	r1, #0
   188d8:	cmp	r0, r1
   188dc:	bne	18900 <sprintf@plt+0x6fdc>
   188e0:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   188e4:	cmp	r0, #48	; 0x30
   188e8:	bne	188f8 <sprintf@plt+0x6fd4>
   188ec:	movw	r0, #22
   188f0:	str	r0, [fp, #-4]
   188f4:	b	18ad8 <sprintf@plt+0x71b4>
   188f8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   188fc:	str	r0, [fp, #-40]	; 0xffffffd8
   18900:	b	189c0 <sprintf@plt+0x709c>
   18904:	bl	117f8 <__ctype_b_loc@plt>
   18908:	ldr	r0, [r0]
   1890c:	ldrb	lr, [fp, #-33]	; 0xffffffdf
   18910:	mov	r1, lr
   18914:	add	r0, r0, lr, lsl #1
   18918:	ldrh	r0, [r0]
   1891c:	and	r0, r0, #4096	; 0x1000
   18920:	cmp	r0, #0
   18924:	str	r1, [sp]
   18928:	bne	18938 <sprintf@plt+0x7014>
   1892c:	movw	r0, #22
   18930:	str	r0, [fp, #-4]
   18934:	b	18ad8 <sprintf@plt+0x71b4>
   18938:	ldr	r0, [pc, #420]	; 18ae4 <sprintf@plt+0x71c0>
   1893c:	add	r0, pc, r0
   18940:	ldr	r1, [sp, #40]	; 0x28
   18944:	lsl	r1, r1, #4
   18948:	str	r1, [sp, #40]	; 0x28
   1894c:	ldrb	r1, [fp, #-33]	; 0xffffffdf
   18950:	add	r0, r0, r1
   18954:	ldrb	r0, [r0]
   18958:	ldr	r1, [sp, #40]	; 0x28
   1895c:	add	r0, r1, r0
   18960:	str	r0, [sp, #40]	; 0x28
   18964:	ldr	r0, [sp, #36]	; 0x24
   18968:	add	r0, r0, #4
   1896c:	str	r0, [sp, #36]	; 0x24
   18970:	ldr	r0, [sp, #32]
   18974:	add	r0, r0, #4
   18978:	str	r0, [sp, #32]
   1897c:	ldr	r0, [sp, #32]
   18980:	cmp	r0, #256	; 0x100
   18984:	ble	18994 <sprintf@plt+0x7070>
   18988:	movw	r0, #22
   1898c:	str	r0, [fp, #-4]
   18990:	b	18ad8 <sprintf@plt+0x71b4>
   18994:	ldr	r0, [sp, #36]	; 0x24
   18998:	cmp	r0, #8
   1899c:	bne	189bc <sprintf@plt+0x7098>
   189a0:	ldr	r0, [sp, #40]	; 0x28
   189a4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   189a8:	add	r2, r1, #1
   189ac:	str	r2, [fp, #-32]	; 0xffffffe0
   189b0:	strb	r0, [r1]
   189b4:	movw	r0, #0
   189b8:	str	r0, [sp, #36]	; 0x24
   189bc:	b	189c0 <sprintf@plt+0x709c>
   189c0:	b	189c4 <sprintf@plt+0x70a0>
   189c4:	b	189c8 <sprintf@plt+0x70a4>
   189c8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   189cc:	add	r0, r0, #1
   189d0:	str	r0, [fp, #-28]	; 0xffffffe4
   189d4:	b	18784 <sprintf@plt+0x6e60>
   189d8:	b	189dc <sprintf@plt+0x70b8>
   189dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   189e0:	ldr	r1, [fp, #-12]
   189e4:	cmp	r0, r1
   189e8:	bcs	189fc <sprintf@plt+0x70d8>
   189ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   189f0:	ldr	r1, [fp, #8]
   189f4:	cmp	r0, r1
   189f8:	bcc	18a08 <sprintf@plt+0x70e4>
   189fc:	movw	r0, #90	; 0x5a
   18a00:	str	r0, [fp, #-4]
   18a04:	b	18ad8 <sprintf@plt+0x71b4>
   18a08:	ldr	r0, [sp, #28]
   18a0c:	cmp	r0, #0
   18a10:	ble	18a7c <sprintf@plt+0x7158>
   18a14:	ldr	r0, [sp, #28]
   18a18:	add	r0, r0, #3
   18a1c:	mvn	r1, #3
   18a20:	and	r0, r0, r1
   18a24:	ldr	r1, [sp, #32]
   18a28:	cmp	r0, r1
   18a2c:	beq	18a3c <sprintf@plt+0x7118>
   18a30:	movw	r0, #22
   18a34:	str	r0, [fp, #-4]
   18a38:	b	18ad8 <sprintf@plt+0x71b4>
   18a3c:	ldr	r0, [sp, #32]
   18a40:	ldr	r1, [sp, #28]
   18a44:	sub	r0, r0, r1
   18a48:	str	r0, [sp, #24]
   18a4c:	ldr	r0, [sp, #40]	; 0x28
   18a50:	ldr	r1, [sp, #24]
   18a54:	movw	r2, #8
   18a58:	sub	r1, r2, r1
   18a5c:	lsl	r0, r0, r1
   18a60:	and	r0, r0, #255	; 0xff
   18a64:	cmp	r0, #0
   18a68:	beq	18a78 <sprintf@plt+0x7154>
   18a6c:	movw	r0, #22
   18a70:	str	r0, [fp, #-4]
   18a74:	b	18ad8 <sprintf@plt+0x71b4>
   18a78:	b	18a84 <sprintf@plt+0x7160>
   18a7c:	ldr	r0, [sp, #32]
   18a80:	str	r0, [sp, #28]
   18a84:	ldr	r0, [sp, #28]
   18a88:	cmp	r0, #256	; 0x100
   18a8c:	bne	18a98 <sprintf@plt+0x7174>
   18a90:	movw	r0, #0
   18a94:	str	r0, [sp, #28]
   18a98:	ldr	r0, [fp, #-16]
   18a9c:	ldr	r0, [r0]
   18aa0:	movw	r1, #65	; 0x41
   18aa4:	strb	r1, [r0]
   18aa8:	ldr	r0, [sp, #28]
   18aac:	ldr	r1, [fp, #-20]	; 0xffffffec
   18ab0:	ldr	r1, [r1]
   18ab4:	strb	r0, [r1]
   18ab8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18abc:	ldr	r1, [fp, #-8]
   18ac0:	str	r0, [r1]
   18ac4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18ac8:	ldr	r1, [fp, #-20]	; 0xffffffec
   18acc:	str	r0, [r1]
   18ad0:	movw	r0, #0
   18ad4:	str	r0, [fp, #-4]
   18ad8:	ldr	r0, [fp, #-4]
   18adc:	mov	sp, fp
   18ae0:	pop	{fp, pc}
   18ae4:	andeq	r6, r0, fp, ror r6
   18ae8:	push	{fp, lr}
   18aec:	mov	fp, sp
   18af0:	sub	sp, sp, #56	; 0x38
   18af4:	str	r0, [fp, #-8]
   18af8:	str	r1, [fp, #-12]
   18afc:	str	r2, [fp, #-16]
   18b00:	str	r3, [fp, #-20]	; 0xffffffec
   18b04:	ldr	r0, [fp, #-16]
   18b08:	str	r0, [sp, #20]
   18b0c:	ldr	r0, [sp, #20]
   18b10:	ldr	r1, [fp, #-20]	; 0xffffffec
   18b14:	cmp	r0, r1
   18b18:	bcs	18d38 <sprintf@plt+0x7414>
   18b1c:	ldr	r0, [sp, #20]
   18b20:	ldr	r0, [r0]
   18b24:	str	r0, [sp, #24]
   18b28:	ldr	r0, [sp, #24]
   18b2c:	ldrb	r0, [r0]
   18b30:	cmp	r0, #0
   18b34:	movw	r0, #0
   18b38:	str	r0, [sp, #12]
   18b3c:	beq	18b78 <sprintf@plt+0x7254>
   18b40:	ldr	r0, [sp, #24]
   18b44:	ldrb	r0, [r0]
   18b48:	and	r0, r0, #192	; 0xc0
   18b4c:	cmp	r0, #0
   18b50:	movw	r0, #0
   18b54:	str	r0, [sp, #12]
   18b58:	bne	18b78 <sprintf@plt+0x7254>
   18b5c:	ldr	r0, [sp, #24]
   18b60:	ldr	r1, [fp, #-12]
   18b64:	sub	r0, r0, r1
   18b68:	cmp	r0, #16384	; 0x4000
   18b6c:	movw	r0, #0
   18b70:	movlt	r0, #1
   18b74:	str	r0, [sp, #12]
   18b78:	ldr	r0, [sp, #12]
   18b7c:	tst	r0, #1
   18b80:	beq	18d24 <sprintf@plt+0x7400>
   18b84:	ldr	r0, [fp, #-8]
   18b88:	str	r0, [fp, #-24]	; 0xffffffe8
   18b8c:	ldr	r0, [sp, #24]
   18b90:	str	r0, [sp, #28]
   18b94:	ldr	r0, [sp, #28]
   18b98:	add	r1, r0, #1
   18b9c:	str	r1, [sp, #28]
   18ba0:	ldrb	r0, [r0]
   18ba4:	str	r0, [sp, #16]
   18ba8:	cmp	r0, #0
   18bac:	beq	18d04 <sprintf@plt+0x73e0>
   18bb0:	ldr	r0, [sp, #16]
   18bb4:	and	r0, r0, #192	; 0xc0
   18bb8:	cmp	r0, #0
   18bbc:	str	r0, [sp, #8]
   18bc0:	beq	18bd8 <sprintf@plt+0x72b4>
   18bc4:	b	18bc8 <sprintf@plt+0x72a4>
   18bc8:	ldr	r0, [sp, #8]
   18bcc:	cmp	r0, #192	; 0xc0
   18bd0:	beq	18cc0 <sprintf@plt+0x739c>
   18bd4:	b	18ce8 <sprintf@plt+0x73c4>
   18bd8:	ldr	r0, [sp, #28]
   18bdc:	mvn	r1, #0
   18be0:	add	r0, r0, r1
   18be4:	bl	1786c <sprintf@plt+0x5f48>
   18be8:	str	r0, [sp, #16]
   18bec:	ldr	r0, [sp, #16]
   18bf0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18bf4:	add	lr, r1, #1
   18bf8:	str	lr, [fp, #-24]	; 0xffffffe8
   18bfc:	ldrb	r1, [r1]
   18c00:	cmp	r0, r1
   18c04:	beq	18c0c <sprintf@plt+0x72e8>
   18c08:	b	18d08 <sprintf@plt+0x73e4>
   18c0c:	b	18c10 <sprintf@plt+0x72ec>
   18c10:	ldr	r0, [sp, #16]
   18c14:	cmp	r0, #0
   18c18:	bls	18c74 <sprintf@plt+0x7350>
   18c1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c20:	add	r1, r0, #1
   18c24:	str	r1, [fp, #-24]	; 0xffffffe8
   18c28:	ldrb	r0, [r0]
   18c2c:	bl	18d58 <sprintf@plt+0x7434>
   18c30:	ldr	r1, [sp, #28]
   18c34:	add	lr, r1, #1
   18c38:	str	lr, [sp, #28]
   18c3c:	ldrb	r1, [r1]
   18c40:	str	r0, [sp, #4]
   18c44:	mov	r0, r1
   18c48:	bl	18d58 <sprintf@plt+0x7434>
   18c4c:	ldr	r1, [sp, #4]
   18c50:	cmp	r1, r0
   18c54:	beq	18c5c <sprintf@plt+0x7338>
   18c58:	b	18d08 <sprintf@plt+0x73e4>
   18c5c:	b	18c60 <sprintf@plt+0x733c>
   18c60:	ldr	r0, [sp, #16]
   18c64:	mvn	r1, #0
   18c68:	add	r0, r0, r1
   18c6c:	str	r0, [sp, #16]
   18c70:	b	18c10 <sprintf@plt+0x72ec>
   18c74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c78:	ldrb	r0, [r0]
   18c7c:	cmp	r0, #0
   18c80:	bne	18ca8 <sprintf@plt+0x7384>
   18c84:	ldr	r0, [sp, #28]
   18c88:	ldrb	r0, [r0]
   18c8c:	cmp	r0, #0
   18c90:	bne	18ca8 <sprintf@plt+0x7384>
   18c94:	ldr	r0, [sp, #24]
   18c98:	ldr	r1, [fp, #-12]
   18c9c:	sub	r0, r0, r1
   18ca0:	str	r0, [fp, #-4]
   18ca4:	b	18d4c <sprintf@plt+0x7428>
   18ca8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18cac:	ldrsb	r0, [r0]
   18cb0:	cmp	r0, #0
   18cb4:	beq	18cbc <sprintf@plt+0x7398>
   18cb8:	b	18b94 <sprintf@plt+0x7270>
   18cbc:	b	18d08 <sprintf@plt+0x73e4>
   18cc0:	ldr	r0, [fp, #-12]
   18cc4:	ldr	r1, [sp, #16]
   18cc8:	and	r1, r1, #63	; 0x3f
   18ccc:	lsl	r1, r1, #8
   18cd0:	ldr	r2, [sp, #28]
   18cd4:	ldrb	r2, [r2]
   18cd8:	orr	r1, r1, r2
   18cdc:	add	r0, r0, r1
   18ce0:	str	r0, [sp, #28]
   18ce4:	b	18d00 <sprintf@plt+0x73dc>
   18ce8:	bl	11918 <__errno_location@plt>
   18cec:	movw	lr, #90	; 0x5a
   18cf0:	str	lr, [r0]
   18cf4:	mvn	r0, #0
   18cf8:	str	r0, [fp, #-4]
   18cfc:	b	18d4c <sprintf@plt+0x7428>
   18d00:	b	18b94 <sprintf@plt+0x7270>
   18d04:	b	18d08 <sprintf@plt+0x73e4>
   18d08:	ldr	r0, [sp, #24]
   18d0c:	ldrb	r0, [r0]
   18d10:	add	r0, r0, #1
   18d14:	ldr	r1, [sp, #24]
   18d18:	add	r0, r1, r0
   18d1c:	str	r0, [sp, #24]
   18d20:	b	18b28 <sprintf@plt+0x7204>
   18d24:	b	18d28 <sprintf@plt+0x7404>
   18d28:	ldr	r0, [sp, #20]
   18d2c:	add	r0, r0, #4
   18d30:	str	r0, [sp, #20]
   18d34:	b	18b0c <sprintf@plt+0x71e8>
   18d38:	bl	11918 <__errno_location@plt>
   18d3c:	movw	lr, #2
   18d40:	str	lr, [r0]
   18d44:	mvn	r0, #0
   18d48:	str	r0, [fp, #-4]
   18d4c:	ldr	r0, [fp, #-4]
   18d50:	mov	sp, fp
   18d54:	pop	{fp, pc}
   18d58:	sub	sp, sp, #8
   18d5c:	str	r0, [sp]
   18d60:	ldr	r0, [sp]
   18d64:	cmp	r0, #65	; 0x41
   18d68:	blt	18d88 <sprintf@plt+0x7464>
   18d6c:	ldr	r0, [sp]
   18d70:	cmp	r0, #90	; 0x5a
   18d74:	bgt	18d88 <sprintf@plt+0x7464>
   18d78:	ldr	r0, [sp]
   18d7c:	add	r0, r0, #32
   18d80:	str	r0, [sp, #4]
   18d84:	b	18d90 <sprintf@plt+0x746c>
   18d88:	ldr	r0, [sp]
   18d8c:	str	r0, [sp, #4]
   18d90:	ldr	r0, [sp, #4]
   18d94:	add	sp, sp, #8
   18d98:	bx	lr
   18d9c:	push	{fp, lr}
   18da0:	mov	fp, sp
   18da4:	sub	sp, sp, #64	; 0x40
   18da8:	str	r0, [fp, #-4]
   18dac:	str	r1, [fp, #-8]
   18db0:	str	r2, [fp, #-12]
   18db4:	sub	r0, fp, #24
   18db8:	movw	r1, #0
   18dbc:	and	r1, r1, #255	; 0xff
   18dc0:	movw	r2, #12
   18dc4:	bl	1166c <memset@plt>
   18dc8:	ldr	r0, [fp, #-12]
   18dcc:	ldr	r0, [r0, #8]
   18dd0:	bl	193a4 <sprintf@plt+0x7a80>
   18dd4:	str	r0, [sp, #32]
   18dd8:	ldr	r0, [sp, #32]
   18ddc:	ldrb	r0, [r0]
   18de0:	cmp	r0, #42	; 0x2a
   18de4:	bne	18dec <sprintf@plt+0x74c8>
   18de8:	b	18f84 <sprintf@plt+0x7660>
   18dec:	ldr	r0, [pc, #500]	; 18fe8 <sprintf@plt+0x76c4>
   18df0:	add	r1, pc, r0
   18df4:	ldr	r0, [sp, #32]
   18df8:	sub	r2, fp, #28
   18dfc:	bl	11600 <rb_strtok_r@plt>
   18e00:	str	r0, [sp, #24]
   18e04:	ldr	r0, [sp, #24]
   18e08:	movw	r1, #0
   18e0c:	cmp	r0, r1
   18e10:	beq	18f80 <sprintf@plt+0x765c>
   18e14:	movw	r0, #72	; 0x48
   18e18:	bl	19414 <sprintf@plt+0x7af0>
   18e1c:	str	r0, [sp, #20]
   18e20:	movw	r0, #0
   18e24:	str	r0, [sp, #16]
   18e28:	movw	r0, #2
   18e2c:	str	r0, [sp, #12]
   18e30:	ldr	r0, [sp, #24]
   18e34:	str	r0, [sp, #8]
   18e38:	ldr	r0, [sp, #8]
   18e3c:	ldrb	r0, [r0]
   18e40:	cmp	r0, #0
   18e44:	beq	18ef4 <sprintf@plt+0x75d0>
   18e48:	ldr	r0, [sp, #8]
   18e4c:	ldrb	r0, [r0]
   18e50:	cmp	r0, #46	; 0x2e
   18e54:	bne	18e90 <sprintf@plt+0x756c>
   18e58:	ldr	r0, [sp, #16]
   18e5c:	add	r0, r0, #1
   18e60:	str	r0, [sp, #16]
   18e64:	cmp	r0, #3
   18e68:	ble	18e84 <sprintf@plt+0x7560>
   18e6c:	ldr	r0, [pc, #388]	; 18ff8 <sprintf@plt+0x76d4>
   18e70:	add	r1, pc, r0
   18e74:	movw	r0, #67	; 0x43
   18e78:	bl	12bfc <sprintf@plt+0x12d8>
   18e7c:	movw	r0, #3
   18e80:	bl	1190c <exit@plt>
   18e84:	movw	r0, #1
   18e88:	str	r0, [sp, #12]
   18e8c:	b	18ee0 <sprintf@plt+0x75bc>
   18e90:	bl	117f8 <__ctype_b_loc@plt>
   18e94:	ldr	r0, [r0]
   18e98:	ldr	lr, [sp, #8]
   18e9c:	ldrb	lr, [lr]
   18ea0:	mov	r1, lr
   18ea4:	add	r0, r0, lr, lsl #1
   18ea8:	ldrh	r0, [r0]
   18eac:	and	r0, r0, #2048	; 0x800
   18eb0:	cmp	r0, #0
   18eb4:	str	r1, [sp, #4]
   18eb8:	bne	18edc <sprintf@plt+0x75b8>
   18ebc:	ldr	r0, [pc, #304]	; 18ff4 <sprintf@plt+0x76d0>
   18ec0:	add	r1, pc, r0
   18ec4:	ldr	r0, [sp, #8]
   18ec8:	ldrb	r2, [r0]
   18ecc:	movw	r0, #67	; 0x43
   18ed0:	bl	12bfc <sprintf@plt+0x12d8>
   18ed4:	movw	r0, #3
   18ed8:	bl	1190c <exit@plt>
   18edc:	b	18ee0 <sprintf@plt+0x75bc>
   18ee0:	b	18ee4 <sprintf@plt+0x75c0>
   18ee4:	ldr	r0, [sp, #8]
   18ee8:	add	r0, r0, #1
   18eec:	str	r0, [sp, #8]
   18ef0:	b	18e38 <sprintf@plt+0x7514>
   18ef4:	ldr	r0, [sp, #16]
   18ef8:	cmp	r0, #0
   18efc:	ble	18f24 <sprintf@plt+0x7600>
   18f00:	ldr	r0, [sp, #16]
   18f04:	cmp	r0, #3
   18f08:	bge	18f24 <sprintf@plt+0x7600>
   18f0c:	ldr	r0, [pc, #220]	; 18ff0 <sprintf@plt+0x76cc>
   18f10:	add	r1, pc, r0
   18f14:	movw	r0, #67	; 0x43
   18f18:	bl	12bfc <sprintf@plt+0x12d8>
   18f1c:	movw	r0, #3
   18f20:	bl	1190c <exit@plt>
   18f24:	ldr	r0, [sp, #12]
   18f28:	ldr	r1, [sp, #20]
   18f2c:	str	r0, [r1]
   18f30:	ldr	r0, [sp, #20]
   18f34:	add	r0, r0, #4
   18f38:	ldr	r1, [sp, #24]
   18f3c:	movw	r2, #53	; 0x35
   18f40:	bl	116a8 <rb_strlcpy@plt>
   18f44:	ldr	r1, [sp, #20]
   18f48:	ldr	r2, [sp, #20]
   18f4c:	add	r2, r2, #60	; 0x3c
   18f50:	str	r0, [sp]
   18f54:	mov	r0, r1
   18f58:	mov	r1, r2
   18f5c:	sub	r2, fp, #24
   18f60:	bl	1946c <sprintf@plt+0x7b48>
   18f64:	ldr	r0, [pc, #128]	; 18fec <sprintf@plt+0x76c8>
   18f68:	add	r1, pc, r0
   18f6c:	movw	r0, #0
   18f70:	sub	r2, fp, #28
   18f74:	bl	11600 <rb_strtok_r@plt>
   18f78:	str	r0, [sp, #24]
   18f7c:	b	18e04 <sprintf@plt+0x74e0>
   18f80:	b	18f84 <sprintf@plt+0x7660>
   18f84:	ldr	r0, [sp, #32]
   18f88:	bl	195d8 <sprintf@plt+0x7cb4>
   18f8c:	ldr	r0, [fp, #-12]
   18f90:	ldr	r0, [r0, #4]
   18f94:	bl	11798 <atoi@plt>
   18f98:	and	r0, r0, #3
   18f9c:	strb	r0, [sp, #31]
   18fa0:	ldr	r0, [fp, #-12]
   18fa4:	ldr	r0, [r0]
   18fa8:	ldr	lr, [fp, #-12]
   18fac:	ldr	r1, [lr, #12]
   18fb0:	ldrb	r2, [sp, #31]
   18fb4:	sub	r3, fp, #24
   18fb8:	bl	19620 <sprintf@plt+0x7cfc>
   18fbc:	movw	r1, #0
   18fc0:	cmp	r0, r1
   18fc4:	bne	18fe0 <sprintf@plt+0x76bc>
   18fc8:	ldr	r0, [pc, #44]	; 18ffc <sprintf@plt+0x76d8>
   18fcc:	add	r1, pc, r0
   18fd0:	movw	r0, #67	; 0x43
   18fd4:	bl	12bfc <sprintf@plt+0x12d8>
   18fd8:	movw	r0, #3
   18fdc:	bl	1190c <exit@plt>
   18fe0:	mov	sp, fp
   18fe4:	pop	{fp, pc}
   18fe8:	andeq	r6, r0, fp, ror #5
   18fec:	andeq	r6, r0, r3, ror r1
   18ff0:	andeq	r6, r0, r7, asr r2
   18ff4:	andeq	r6, r0, r7, asr r2
   18ff8:	andeq	r6, r0, sp, ror #4
   18ffc:	ldrdeq	r6, [r0], -r9
   19000:	push	{fp, lr}
   19004:	mov	fp, sp
   19008:	sub	sp, sp, #16
   1900c:	str	r0, [fp, #-4]
   19010:	str	r1, [sp, #8]
   19014:	str	r2, [sp, #4]
   19018:	ldr	r0, [sp, #4]
   1901c:	ldr	r0, [r0]
   19020:	bl	1974c <sprintf@plt+0x7e28>
   19024:	str	r0, [sp]
   19028:	ldr	r0, [sp]
   1902c:	movw	r1, #0
   19030:	cmp	r0, r1
   19034:	bne	19054 <sprintf@plt+0x7730>
   19038:	ldr	r0, [pc, #36]	; 19064 <sprintf@plt+0x7740>
   1903c:	add	r1, pc, r0
   19040:	ldr	r0, [sp, #4]
   19044:	ldr	r2, [r0]
   19048:	movw	r0, #87	; 0x57
   1904c:	bl	12bfc <sprintf@plt+0x12d8>
   19050:	b	1905c <sprintf@plt+0x7738>
   19054:	ldr	r0, [sp]
   19058:	bl	19958 <sprintf@plt+0x8034>
   1905c:	mov	sp, fp
   19060:	pop	{fp, pc}
   19064:	andeq	r6, r0, r6, ror #3
   19068:	push	{fp, lr}
   1906c:	mov	fp, sp
   19070:	sub	sp, sp, #16
   19074:	str	r0, [fp, #-4]
   19078:	str	r1, [sp, #8]
   1907c:	str	r2, [sp, #4]
   19080:	bl	19c28 <sprintf@plt+0x8304>
   19084:	mov	sp, fp
   19088:	pop	{fp, pc}
   1908c:	push	{fp, lr}
   19090:	mov	fp, sp
   19094:	sub	sp, sp, #16
   19098:	str	r0, [fp, #-4]
   1909c:	str	r1, [sp, #8]
   190a0:	str	r2, [sp, #4]
   190a4:	ldr	r0, [sp, #4]
   190a8:	ldr	r0, [r0]
   190ac:	bl	11798 <atoi@plt>
   190b0:	str	r0, [sp]
   190b4:	ldr	r0, [sp]
   190b8:	cmp	r0, #0
   190bc:	bge	190dc <sprintf@plt+0x77b8>
   190c0:	ldr	r0, [pc, #48]	; 190f8 <sprintf@plt+0x77d4>
   190c4:	add	r1, pc, r0
   190c8:	ldr	r2, [sp]
   190cc:	movw	r0, #67	; 0x43
   190d0:	bl	12bfc <sprintf@plt+0x12d8>
   190d4:	movw	r0, #3
   190d8:	bl	1190c <exit@plt>
   190dc:	ldr	r0, [pc, #16]	; 190f4 <sprintf@plt+0x77d0>
   190e0:	add	r0, pc, r0
   190e4:	ldr	r1, [sp]
   190e8:	str	r1, [r0]
   190ec:	mov	sp, fp
   190f0:	pop	{fp, pc}
   190f4:	andeq	r7, r1, ip, asr #26
   190f8:	strdeq	r6, [r0], -r6	; <UNPREDICTABLE>
   190fc:	push	{fp, lr}
   19100:	mov	fp, sp
   19104:	sub	sp, sp, #16
   19108:	ldr	r0, [pc, #92]	; 1916c <sprintf@plt+0x7848>
   1910c:	ldr	r0, [pc, r0]
   19110:	ldr	r0, [r0]
   19114:	add	r1, sp, #8
   19118:	bl	11708 <rb_dictionary_foreach_start@plt>
   1911c:	ldr	r0, [pc, #76]	; 19170 <sprintf@plt+0x784c>
   19120:	ldr	r0, [pc, r0]
   19124:	ldr	r0, [r0]
   19128:	add	r1, sp, #8
   1912c:	bl	11618 <rb_dictionary_foreach_cur@plt>
   19130:	str	r0, [sp, #4]
   19134:	movw	r1, #0
   19138:	cmp	r0, r1
   1913c:	beq	19160 <sprintf@plt+0x783c>
   19140:	ldr	r0, [sp, #4]
   19144:	bl	19298 <sprintf@plt+0x7974>
   19148:	ldr	r0, [pc, #36]	; 19174 <sprintf@plt+0x7850>
   1914c:	ldr	r0, [pc, r0]
   19150:	ldr	r0, [r0]
   19154:	add	r1, sp, #8
   19158:	bl	116c0 <rb_dictionary_foreach_next@plt>
   1915c:	b	1911c <sprintf@plt+0x77f8>
   19160:	bl	19c28 <sprintf@plt+0x8304>
   19164:	mov	sp, fp
   19168:	pop	{fp, pc}
   1916c:	andeq	r7, r1, r4, asr r0
   19170:	andeq	r7, r1, r0, asr #32
   19174:	andeq	r7, r1, r4, lsl r0
   19178:	push	{fp, lr}
   1917c:	mov	fp, sp
   19180:	sub	sp, sp, #24
   19184:	ldr	r1, [pc, #248]	; 19284 <sprintf@plt+0x7960>
   19188:	add	r1, pc, r1
   1918c:	str	r0, [fp, #-8]
   19190:	ldr	r0, [r1, #8]
   19194:	cmp	r0, #0
   19198:	bne	191cc <sprintf@plt+0x78a8>
   1919c:	ldr	r0, [pc, #228]	; 19288 <sprintf@plt+0x7964>
   191a0:	ldr	r0, [pc, r0]
   191a4:	ldr	r1, [fp, #-8]
   191a8:	ldr	r0, [r0, #12]
   191ac:	str	r0, [sp, #12]
   191b0:	mov	r0, r1
   191b4:	ldr	r1, [sp, #12]
   191b8:	bl	13afc <sprintf@plt+0x21d8>
   191bc:	movw	r0, #1
   191c0:	and	r0, r0, #1
   191c4:	strb	r0, [fp, #-1]
   191c8:	b	19274 <sprintf@plt+0x7950>
   191cc:	ldr	r0, [fp, #-8]
   191d0:	bl	19ce0 <sprintf@plt+0x83bc>
   191d4:	ldr	r0, [pc, #180]	; 19290 <sprintf@plt+0x796c>
   191d8:	ldr	r0, [pc, r0]
   191dc:	ldr	lr, [fp, #-8]
   191e0:	ldr	r1, [r0, #12]
   191e4:	movw	r0, #16
   191e8:	str	lr, [sp, #8]
   191ec:	str	r1, [sp, #4]
   191f0:	bl	19414 <sprintf@plt+0x7af0>
   191f4:	ldr	r1, [sp, #8]
   191f8:	str	r0, [sp]
   191fc:	mov	r0, r1
   19200:	ldr	r1, [sp, #4]
   19204:	ldr	r2, [sp]
   19208:	bl	19d00 <sprintf@plt+0x83dc>
   1920c:	ldr	r0, [pc, #120]	; 1928c <sprintf@plt+0x7968>
   19210:	add	r1, pc, r0
   19214:	ldr	r0, [fp, #-8]
   19218:	bl	19d30 <sprintf@plt+0x840c>
   1921c:	tst	r0, #1
   19220:	beq	19268 <sprintf@plt+0x7944>
   19224:	ldr	r0, [pc, #104]	; 19294 <sprintf@plt+0x7970>
   19228:	add	r1, pc, r0
   1922c:	ldr	r0, [fp, #-8]
   19230:	bl	19d30 <sprintf@plt+0x840c>
   19234:	tst	r0, #1
   19238:	beq	19268 <sprintf@plt+0x7944>
   1923c:	ldr	r0, [fp, #-8]
   19240:	bl	19d98 <sprintf@plt+0x8474>
   19244:	tst	r0, #1
   19248:	bne	19264 <sprintf@plt+0x7940>
   1924c:	ldr	r0, [fp, #-8]
   19250:	bl	19f1c <sprintf@plt+0x85f8>
   19254:	movw	r0, #1
   19258:	and	r0, r0, #1
   1925c:	strb	r0, [fp, #-1]
   19260:	b	19274 <sprintf@plt+0x7950>
   19264:	b	19268 <sprintf@plt+0x7944>
   19268:	movw	r0, #1
   1926c:	and	r0, r0, #1
   19270:	strb	r0, [fp, #-1]
   19274:	ldrb	r0, [fp, #-1]
   19278:	and	r0, r0, #1
   1927c:	mov	sp, fp
   19280:	pop	{fp, pc}
   19284:	andeq	fp, r1, r0, asr #29
   19288:	strdeq	r6, [r1], -r0
   1928c:	andeq	r6, r0, pc, asr #1
   19290:			; <UNDEFINED> instruction: 0x00016fb8
   19294:	muleq	r0, r7, r2
   19298:	push	{fp, lr}
   1929c:	mov	fp, sp
   192a0:	sub	sp, sp, #8
   192a4:	ldr	r1, [pc, #20]	; 192c0 <sprintf@plt+0x799c>
   192a8:	add	r1, pc, r1
   192ac:	str	r0, [sp, #4]
   192b0:	ldr	r0, [sp, #4]
   192b4:	bl	1a844 <sprintf@plt+0x8f20>
   192b8:	mov	sp, fp
   192bc:	pop	{fp, pc}
   192c0:	andeq	r6, r0, lr, lsl #2
   192c4:	push	{fp, lr}
   192c8:	mov	fp, sp
   192cc:	sub	sp, sp, #8
   192d0:	ldr	r1, [pc, #20]	; 192ec <sprintf@plt+0x79c8>
   192d4:	add	r1, pc, r1
   192d8:	str	r0, [sp, #4]
   192dc:	ldr	r0, [sp, #4]
   192e0:	bl	1a844 <sprintf@plt+0x8f20>
   192e4:	mov	sp, fp
   192e8:	pop	{fp, pc}
   192ec:	strdeq	r6, [r0], -ip
   192f0:	push	{fp, lr}
   192f4:	mov	fp, sp
   192f8:	sub	sp, sp, #16
   192fc:	ldr	r2, [pc, #148]	; 19398 <sprintf@plt+0x7a74>
   19300:	ldr	r2, [pc, r2]
   19304:	str	r0, [fp, #-4]
   19308:	str	r1, [sp, #8]
   1930c:	ldr	r0, [fp, #-4]
   19310:	ldr	r1, [r2, #12]
   19314:	bl	1a068 <sprintf@plt+0x8744>
   19318:	str	r0, [sp, #4]
   1931c:	ldr	r0, [sp, #4]
   19320:	movw	r1, #0
   19324:	cmp	r0, r1
   19328:	beq	1933c <sprintf@plt+0x7a18>
   1932c:	ldr	r0, [sp, #4]
   19330:	ldrb	r0, [r0]
   19334:	tst	r0, #1
   19338:	beq	19340 <sprintf@plt+0x7a1c>
   1933c:	b	19390 <sprintf@plt+0x7a6c>
   19340:	ldr	r0, [pc, #84]	; 1939c <sprintf@plt+0x7a78>
   19344:	add	r1, pc, r0
   19348:	ldr	r0, [fp, #-4]
   1934c:	bl	19d30 <sprintf@plt+0x840c>
   19350:	tst	r0, #1
   19354:	beq	1938c <sprintf@plt+0x7a68>
   19358:	ldr	r0, [pc, #64]	; 193a0 <sprintf@plt+0x7a7c>
   1935c:	add	r1, pc, r0
   19360:	ldr	r0, [fp, #-4]
   19364:	bl	19d30 <sprintf@plt+0x840c>
   19368:	tst	r0, #1
   1936c:	beq	1938c <sprintf@plt+0x7a68>
   19370:	ldr	r0, [fp, #-4]
   19374:	bl	19d98 <sprintf@plt+0x8474>
   19378:	tst	r0, #1
   1937c:	bne	19388 <sprintf@plt+0x7a64>
   19380:	ldr	r0, [fp, #-4]
   19384:	bl	19f1c <sprintf@plt+0x85f8>
   19388:	b	1938c <sprintf@plt+0x7a68>
   1938c:	b	19390 <sprintf@plt+0x7a6c>
   19390:	mov	sp, fp
   19394:	pop	{fp, pc}
   19398:	muleq	r1, r0, lr
   1939c:	muleq	r0, fp, pc	; <UNPREDICTABLE>
   193a0:	andeq	r6, r0, r3, ror #2
   193a4:	push	{fp, lr}
   193a8:	mov	fp, sp
   193ac:	sub	sp, sp, #16
   193b0:	str	r0, [fp, #-4]
   193b4:	ldr	r0, [fp, #-4]
   193b8:	bl	1172c <strlen@plt>
   193bc:	add	r0, r0, #1
   193c0:	bl	11828 <malloc@plt>
   193c4:	str	r0, [sp, #8]
   193c8:	ldr	r0, [sp, #8]
   193cc:	movw	lr, #0
   193d0:	cmp	r0, lr
   193d4:	movw	r0, #0
   193d8:	moveq	r0, #1
   193dc:	mvn	lr, #0
   193e0:	eor	r0, r0, lr
   193e4:	eor	r0, r0, lr
   193e8:	tst	r0, #1
   193ec:	beq	193f4 <sprintf@plt+0x7ad0>
   193f0:	bl	117ec <rb_outofmemory@plt>
   193f4:	ldr	r0, [sp, #8]
   193f8:	ldr	r1, [fp, #-4]
   193fc:	bl	1178c <strcpy@plt>
   19400:	ldr	r1, [sp, #8]
   19404:	str	r0, [sp, #4]
   19408:	mov	r0, r1
   1940c:	mov	sp, fp
   19410:	pop	{fp, pc}
   19414:	push	{fp, lr}
   19418:	mov	fp, sp
   1941c:	sub	sp, sp, #8
   19420:	str	r0, [sp, #4]
   19424:	ldr	r1, [sp, #4]
   19428:	movw	r0, #1
   1942c:	bl	11630 <calloc@plt>
   19430:	str	r0, [sp]
   19434:	ldr	r0, [sp]
   19438:	movw	r1, #0
   1943c:	cmp	r0, r1
   19440:	movw	r0, #0
   19444:	moveq	r0, #1
   19448:	mvn	r1, #0
   1944c:	eor	r0, r0, r1
   19450:	eor	r0, r0, r1
   19454:	tst	r0, #1
   19458:	beq	19460 <sprintf@plt+0x7b3c>
   1945c:	bl	117ec <rb_outofmemory@plt>
   19460:	ldr	r0, [sp]
   19464:	mov	sp, fp
   19468:	pop	{fp, pc}
   1946c:	push	{fp, lr}
   19470:	mov	fp, sp
   19474:	sub	sp, sp, #16
   19478:	str	r0, [fp, #-4]
   1947c:	str	r1, [sp, #8]
   19480:	str	r2, [sp, #4]
   19484:	ldr	r0, [fp, #-4]
   19488:	movw	r1, #0
   1948c:	cmp	r0, r1
   19490:	beq	19498 <sprintf@plt+0x7b74>
   19494:	b	194b8 <sprintf@plt+0x7b94>
   19498:	ldr	r0, [pc, #276]	; 195b4 <sprintf@plt+0x7c90>
   1949c:	add	r0, pc, r0
   194a0:	ldr	r1, [pc, #272]	; 195b8 <sprintf@plt+0x7c94>
   194a4:	add	r1, pc, r1
   194a8:	ldr	r2, [pc, #268]	; 195bc <sprintf@plt+0x7c98>
   194ac:	add	r3, pc, r2
   194b0:	movw	r2, #143	; 0x8f
   194b4:	bl	1169c <__assert_fail@plt>
   194b8:	ldr	r0, [sp, #8]
   194bc:	movw	r1, #0
   194c0:	cmp	r0, r1
   194c4:	beq	194cc <sprintf@plt+0x7ba8>
   194c8:	b	194ec <sprintf@plt+0x7bc8>
   194cc:	ldr	r0, [pc, #236]	; 195c0 <sprintf@plt+0x7c9c>
   194d0:	add	r0, pc, r0
   194d4:	ldr	r1, [pc, #232]	; 195c4 <sprintf@plt+0x7ca0>
   194d8:	add	r1, pc, r1
   194dc:	ldr	r2, [pc, #228]	; 195c8 <sprintf@plt+0x7ca4>
   194e0:	add	r3, pc, r2
   194e4:	movw	r2, #144	; 0x90
   194e8:	bl	1169c <__assert_fail@plt>
   194ec:	ldr	r0, [sp, #4]
   194f0:	movw	r1, #0
   194f4:	cmp	r0, r1
   194f8:	beq	19500 <sprintf@plt+0x7bdc>
   194fc:	b	19520 <sprintf@plt+0x7bfc>
   19500:	ldr	r0, [pc, #196]	; 195cc <sprintf@plt+0x7ca8>
   19504:	add	r0, pc, r0
   19508:	ldr	r1, [pc, #192]	; 195d0 <sprintf@plt+0x7cac>
   1950c:	add	r1, pc, r1
   19510:	ldr	r2, [pc, #188]	; 195d4 <sprintf@plt+0x7cb0>
   19514:	add	r3, pc, r2
   19518:	movw	r2, #145	; 0x91
   1951c:	bl	1169c <__assert_fail@plt>
   19520:	ldr	r0, [fp, #-4]
   19524:	ldr	r1, [sp, #8]
   19528:	str	r0, [r1]
   1952c:	ldr	r0, [sp, #8]
   19530:	movw	r1, #0
   19534:	str	r1, [r0, #4]
   19538:	ldr	r0, [sp, #4]
   1953c:	ldr	r0, [r0]
   19540:	ldr	r2, [sp, #8]
   19544:	str	r0, [r2, #8]
   19548:	ldr	r0, [sp, #4]
   1954c:	ldr	r0, [r0]
   19550:	cmp	r0, r1
   19554:	beq	1956c <sprintf@plt+0x7c48>
   19558:	ldr	r0, [sp, #8]
   1955c:	ldr	r1, [sp, #4]
   19560:	ldr	r1, [r1]
   19564:	str	r0, [r1, #4]
   19568:	b	19590 <sprintf@plt+0x7c6c>
   1956c:	ldr	r0, [sp, #4]
   19570:	ldr	r0, [r0, #4]
   19574:	movw	r1, #0
   19578:	cmp	r0, r1
   1957c:	bne	1958c <sprintf@plt+0x7c68>
   19580:	ldr	r0, [sp, #8]
   19584:	ldr	r1, [sp, #4]
   19588:	str	r0, [r1, #4]
   1958c:	b	19590 <sprintf@plt+0x7c6c>
   19590:	ldr	r0, [sp, #8]
   19594:	ldr	r1, [sp, #4]
   19598:	str	r0, [r1]
   1959c:	ldr	r0, [sp, #4]
   195a0:	ldr	r1, [r0, #8]
   195a4:	add	r1, r1, #1
   195a8:	str	r1, [r0, #8]
   195ac:	mov	sp, fp
   195b0:	pop	{fp, pc}
   195b4:	andeq	r5, r0, fp, lsl #17
   195b8:	andeq	r5, r0, r4, lsr #16
   195bc:	andeq	r5, r0, r8, lsl #17
   195c0:	andeq	r5, r0, r5, lsl #26
   195c4:	strdeq	r5, [r0], -r0
   195c8:	andeq	r5, r0, r4, asr r8
   195cc:	andeq	r5, r0, r6, lsl r8
   195d0:			; <UNDEFINED> instruction: 0x000057bc
   195d4:	andeq	r5, r0, r0, lsr #16
   195d8:	push	{fp, lr}
   195dc:	mov	fp, sp
   195e0:	sub	sp, sp, #8
   195e4:	str	r0, [sp, #4]
   195e8:	ldr	r0, [sp, #4]
   195ec:	movw	r1, #0
   195f0:	cmp	r0, r1
   195f4:	movw	r0, #0
   195f8:	movne	r0, #1
   195fc:	mvn	r1, #0
   19600:	eor	r0, r0, r1
   19604:	eor	r0, r0, r1
   19608:	tst	r0, #1
   1960c:	beq	19618 <sprintf@plt+0x7cf4>
   19610:	ldr	r0, [sp, #4]
   19614:	bl	116cc <free@plt>
   19618:	mov	sp, fp
   1961c:	pop	{fp, pc}
   19620:	push	{fp, lr}
   19624:	mov	fp, sp
   19628:	sub	sp, sp, #40	; 0x28
   1962c:	str	r0, [fp, #-8]
   19630:	str	r1, [fp, #-12]
   19634:	strb	r2, [fp, #-13]
   19638:	str	r3, [sp, #20]
   1963c:	ldr	r0, [fp, #-8]
   19640:	movw	r1, #0
   19644:	cmp	r0, r1
   19648:	beq	19668 <sprintf@plt+0x7d44>
   1964c:	ldr	r0, [fp, #-12]
   19650:	movw	r1, #0
   19654:	cmp	r0, r1
   19658:	beq	19668 <sprintf@plt+0x7d44>
   1965c:	ldrb	r0, [fp, #-13]
   19660:	cmp	r0, #0
   19664:	bne	19674 <sprintf@plt+0x7d50>
   19668:	movw	r0, #0
   1966c:	str	r0, [fp, #-4]
   19670:	b	1973c <sprintf@plt+0x7e18>
   19674:	ldr	r0, [fp, #-8]
   19678:	bl	1974c <sprintf@plt+0x7e28>
   1967c:	str	r0, [sp, #16]
   19680:	movw	lr, #0
   19684:	cmp	r0, lr
   19688:	bne	196c4 <sprintf@plt+0x7da0>
   1968c:	movw	r0, #800	; 0x320
   19690:	bl	19414 <sprintf@plt+0x7af0>
   19694:	str	r0, [sp, #16]
   19698:	ldr	r0, [sp, #16]
   1969c:	str	r0, [sp, #12]
   196a0:	bl	118ac <rb_make_rb_dlink_node@plt>
   196a4:	ldr	lr, [pc, #156]	; 19748 <sprintf@plt+0x7e24>
   196a8:	add	r2, pc, lr
   196ac:	ldr	lr, [sp, #12]
   196b0:	str	r0, [sp, #8]
   196b4:	mov	r0, lr
   196b8:	ldr	r1, [sp, #8]
   196bc:	bl	1946c <sprintf@plt+0x7b48>
   196c0:	b	196d0 <sprintf@plt+0x7dac>
   196c4:	ldr	r0, [sp, #16]
   196c8:	movw	r1, #0
   196cc:	strb	r1, [r0, #784]	; 0x310
   196d0:	ldr	r0, [sp, #16]
   196d4:	ldr	r1, [fp, #-8]
   196d8:	movw	r2, #256	; 0x100
   196dc:	bl	116a8 <rb_strlcpy@plt>
   196e0:	ldr	r1, [sp, #16]
   196e4:	add	r1, r1, #256	; 0x100
   196e8:	ldr	r2, [fp, #-12]
   196ec:	str	r0, [sp, #4]
   196f0:	mov	r0, r1
   196f4:	mov	r1, r2
   196f8:	movw	r2, #512	; 0x200
   196fc:	bl	116a8 <rb_strlcpy@plt>
   19700:	ldrb	r1, [fp, #-13]
   19704:	ldr	r2, [sp, #16]
   19708:	strb	r1, [r2, #768]	; 0x300
   1970c:	ldr	r1, [sp, #20]
   19710:	ldr	r2, [sp, #16]
   19714:	add	r2, r2, #772	; 0x304
   19718:	str	r0, [sp]
   1971c:	mov	r0, r1
   19720:	mov	r1, r2
   19724:	bl	197d4 <sprintf@plt+0x7eb0>
   19728:	ldr	r0, [sp, #16]
   1972c:	movw	r1, #0
   19730:	str	r1, [r0, #796]	; 0x31c
   19734:	ldr	r0, [sp, #16]
   19738:	str	r0, [fp, #-4]
   1973c:	ldr	r0, [fp, #-4]
   19740:	mov	sp, fp
   19744:	pop	{fp, pc}
   19748:	andeq	fp, r1, r0, lsr #19
   1974c:	push	{fp, lr}
   19750:	mov	fp, sp
   19754:	sub	sp, sp, #16
   19758:	ldr	r1, [pc, #112]	; 197d0 <sprintf@plt+0x7eac>
   1975c:	add	r1, pc, r1
   19760:	str	r0, [sp, #8]
   19764:	ldr	r0, [r1]
   19768:	str	r0, [sp, #4]
   1976c:	ldr	r0, [sp, #4]
   19770:	movw	r1, #0
   19774:	cmp	r0, r1
   19778:	beq	197bc <sprintf@plt+0x7e98>
   1977c:	ldr	r0, [sp, #4]
   19780:	ldr	r0, [r0]
   19784:	str	r0, [sp]
   19788:	ldr	r0, [sp]
   1978c:	ldr	r1, [sp, #8]
   19790:	bl	11624 <strcasecmp@plt>
   19794:	cmp	r0, #0
   19798:	bne	197a8 <sprintf@plt+0x7e84>
   1979c:	ldr	r0, [sp]
   197a0:	str	r0, [fp, #-4]
   197a4:	b	197c4 <sprintf@plt+0x7ea0>
   197a8:	b	197ac <sprintf@plt+0x7e88>
   197ac:	ldr	r0, [sp, #4]
   197b0:	ldr	r0, [r0, #8]
   197b4:	str	r0, [sp, #4]
   197b8:	b	1976c <sprintf@plt+0x7e48>
   197bc:	movw	r0, #0
   197c0:	str	r0, [fp, #-4]
   197c4:	ldr	r0, [fp, #-4]
   197c8:	mov	sp, fp
   197cc:	pop	{fp, pc}
   197d0:	andeq	fp, r1, ip, ror #17
   197d4:	push	{fp, lr}
   197d8:	mov	fp, sp
   197dc:	sub	sp, sp, #8
   197e0:	str	r0, [sp, #4]
   197e4:	str	r1, [sp]
   197e8:	ldr	r0, [sp, #4]
   197ec:	movw	r1, #0
   197f0:	cmp	r0, r1
   197f4:	beq	197fc <sprintf@plt+0x7ed8>
   197f8:	b	1981c <sprintf@plt+0x7ef8>
   197fc:	ldr	r0, [pc, #316]	; 19940 <sprintf@plt+0x801c>
   19800:	add	r0, pc, r0
   19804:	ldr	r1, [pc, #312]	; 19944 <sprintf@plt+0x8020>
   19808:	add	r1, pc, r1
   1980c:	ldr	r2, [pc, #308]	; 19948 <sprintf@plt+0x8024>
   19810:	add	r3, pc, r2
   19814:	movw	r2, #324	; 0x144
   19818:	bl	1169c <__assert_fail@plt>
   1981c:	ldr	r0, [sp]
   19820:	movw	r1, #0
   19824:	cmp	r0, r1
   19828:	beq	19830 <sprintf@plt+0x7f0c>
   1982c:	b	19850 <sprintf@plt+0x7f2c>
   19830:	ldr	r0, [pc, #276]	; 1994c <sprintf@plt+0x8028>
   19834:	add	r0, pc, r0
   19838:	ldr	r1, [pc, #272]	; 19950 <sprintf@plt+0x802c>
   1983c:	add	r1, pc, r1
   19840:	ldr	r2, [pc, #268]	; 19954 <sprintf@plt+0x8030>
   19844:	add	r3, pc, r2
   19848:	movw	r2, #325	; 0x145
   1984c:	bl	1169c <__assert_fail@plt>
   19850:	ldr	r0, [sp, #4]
   19854:	ldr	r0, [r0]
   19858:	movw	r1, #0
   1985c:	cmp	r0, r1
   19860:	bne	19868 <sprintf@plt+0x7f44>
   19864:	b	19938 <sprintf@plt+0x8014>
   19868:	ldr	r0, [sp]
   1986c:	ldr	r0, [r0]
   19870:	movw	r1, #0
   19874:	cmp	r0, r1
   19878:	bne	198cc <sprintf@plt+0x7fa8>
   1987c:	ldr	r0, [sp, #4]
   19880:	ldr	r0, [r0]
   19884:	ldr	r1, [sp]
   19888:	str	r0, [r1]
   1988c:	ldr	r0, [sp, #4]
   19890:	ldr	r0, [r0, #4]
   19894:	ldr	r1, [sp]
   19898:	str	r0, [r1, #4]
   1989c:	ldr	r0, [sp, #4]
   198a0:	movw	r1, #0
   198a4:	str	r1, [r0, #4]
   198a8:	ldr	r0, [sp, #4]
   198ac:	str	r1, [r0]
   198b0:	ldr	r0, [sp, #4]
   198b4:	ldr	r0, [r0, #8]
   198b8:	ldr	r2, [sp]
   198bc:	str	r0, [r2, #8]
   198c0:	ldr	r0, [sp, #4]
   198c4:	str	r1, [r0, #8]
   198c8:	b	19938 <sprintf@plt+0x8014>
   198cc:	ldr	r0, [sp]
   198d0:	ldr	r0, [r0]
   198d4:	ldr	r1, [sp, #4]
   198d8:	ldr	r1, [r1, #4]
   198dc:	str	r0, [r1, #8]
   198e0:	ldr	r0, [sp, #4]
   198e4:	ldr	r0, [r0, #4]
   198e8:	ldr	r1, [sp]
   198ec:	ldr	r1, [r1]
   198f0:	str	r0, [r1, #4]
   198f4:	ldr	r0, [sp, #4]
   198f8:	ldr	r0, [r0]
   198fc:	ldr	r1, [sp]
   19900:	str	r0, [r1]
   19904:	ldr	r0, [sp, #4]
   19908:	movw	r1, #0
   1990c:	str	r1, [r0, #4]
   19910:	ldr	r0, [sp, #4]
   19914:	str	r1, [r0]
   19918:	ldr	r0, [sp, #4]
   1991c:	ldr	r0, [r0, #8]
   19920:	ldr	r2, [sp]
   19924:	ldr	r3, [r2, #8]
   19928:	add	r0, r3, r0
   1992c:	str	r0, [r2, #8]
   19930:	ldr	r0, [sp, #4]
   19934:	str	r1, [r0, #8]
   19938:	mov	sp, fp
   1993c:	pop	{fp, pc}
   19940:	ldrdeq	r5, [r0], -r2
   19944:	andeq	r5, r0, r0, asr #9
   19948:	andeq	r5, r0, pc, asr #19
   1994c:	andeq	r5, r0, r3, ror #19
   19950:	andeq	r5, r0, ip, lsl #9
   19954:	muleq	r0, fp, r9
   19958:	push	{fp, lr}
   1995c:	mov	fp, sp
   19960:	sub	sp, sp, #8
   19964:	str	r0, [sp, #4]
   19968:	ldr	r0, [sp, #4]
   1996c:	ldr	r0, [r0, #788]	; 0x314
   19970:	cmp	r0, #0
   19974:	ble	19988 <sprintf@plt+0x8064>
   19978:	ldr	r0, [sp, #4]
   1997c:	movw	r1, #1
   19980:	strb	r1, [r0, #784]	; 0x310
   19984:	b	199a8 <sprintf@plt+0x8084>
   19988:	ldr	r0, [pc, #32]	; 199b0 <sprintf@plt+0x808c>
   1998c:	add	r1, pc, r0
   19990:	ldr	r0, [sp, #4]
   19994:	bl	199b4 <sprintf@plt+0x8090>
   19998:	ldr	r1, [sp, #4]
   1999c:	str	r0, [sp]
   199a0:	mov	r0, r1
   199a4:	bl	195d8 <sprintf@plt+0x7cb4>
   199a8:	mov	sp, fp
   199ac:	pop	{fp, pc}
   199b0:			; <UNDEFINED> instruction: 0x0001b6bc
   199b4:	push	{fp, lr}
   199b8:	mov	fp, sp
   199bc:	sub	sp, sp, #16
   199c0:	str	r0, [sp, #8]
   199c4:	str	r1, [sp, #4]
   199c8:	ldr	r0, [sp, #4]
   199cc:	movw	r1, #0
   199d0:	cmp	r0, r1
   199d4:	beq	199dc <sprintf@plt+0x80b8>
   199d8:	b	199fc <sprintf@plt+0x80d8>
   199dc:	ldr	r0, [pc, #148]	; 19a78 <sprintf@plt+0x8154>
   199e0:	add	r0, pc, r0
   199e4:	ldr	r1, [pc, #144]	; 19a7c <sprintf@plt+0x8158>
   199e8:	add	r1, pc, r1
   199ec:	ldr	r2, [pc, #140]	; 19a80 <sprintf@plt+0x815c>
   199f0:	add	r3, pc, r2
   199f4:	movw	r2, #287	; 0x11f
   199f8:	bl	1169c <__assert_fail@plt>
   199fc:	ldr	r0, [sp, #8]
   19a00:	movw	r1, #0
   19a04:	cmp	r0, r1
   19a08:	beq	19a10 <sprintf@plt+0x80ec>
   19a0c:	b	19a30 <sprintf@plt+0x810c>
   19a10:	ldr	r0, [pc, #108]	; 19a84 <sprintf@plt+0x8160>
   19a14:	add	r0, pc, r0
   19a18:	ldr	r1, [pc, #104]	; 19a88 <sprintf@plt+0x8164>
   19a1c:	add	r1, pc, r1
   19a20:	ldr	r2, [pc, #100]	; 19a8c <sprintf@plt+0x8168>
   19a24:	add	r3, pc, r2
   19a28:	movw	r2, #288	; 0x120
   19a2c:	bl	1169c <__assert_fail@plt>
   19a30:	ldr	r0, [sp, #8]
   19a34:	ldr	r1, [sp, #4]
   19a38:	bl	19a90 <sprintf@plt+0x816c>
   19a3c:	str	r0, [sp]
   19a40:	ldr	r0, [sp]
   19a44:	movw	r1, #0
   19a48:	cmp	r0, r1
   19a4c:	beq	19a64 <sprintf@plt+0x8140>
   19a50:	ldr	r0, [sp]
   19a54:	bl	1175c <rb_free_rb_dlink_node@plt>
   19a58:	movw	r0, #1
   19a5c:	str	r0, [fp, #-4]
   19a60:	b	19a6c <sprintf@plt+0x8148>
   19a64:	movw	r0, #0
   19a68:	str	r0, [fp, #-4]
   19a6c:	ldr	r0, [fp, #-4]
   19a70:	mov	sp, fp
   19a74:	pop	{fp, pc}
   19a78:	andeq	r5, r0, sl, lsr r3
   19a7c:	andeq	r5, r0, r0, ror #5
   19a80:	andeq	r5, r0, lr, asr r8
   19a84:	andeq	r5, r0, r3, lsl r3
   19a88:	andeq	r5, r0, ip, lsr #5
   19a8c:	andeq	r5, r0, sl, lsr #16
   19a90:	push	{fp, lr}
   19a94:	mov	fp, sp
   19a98:	sub	sp, sp, #16
   19a9c:	str	r0, [sp, #8]
   19aa0:	str	r1, [sp, #4]
   19aa4:	ldr	r0, [sp, #4]
   19aa8:	movw	r1, #0
   19aac:	cmp	r0, r1
   19ab0:	beq	19ab8 <sprintf@plt+0x8194>
   19ab4:	b	19ad8 <sprintf@plt+0x81b4>
   19ab8:	ldr	r0, [pc, #336]	; 19c10 <sprintf@plt+0x82ec>
   19abc:	add	r0, pc, r0
   19ac0:	ldr	r1, [pc, #332]	; 19c14 <sprintf@plt+0x82f0>
   19ac4:	add	r1, pc, r1
   19ac8:	ldr	r2, [pc, #328]	; 19c18 <sprintf@plt+0x82f4>
   19acc:	add	r3, pc, r2
   19ad0:	movw	r2, #258	; 0x102
   19ad4:	bl	1169c <__assert_fail@plt>
   19ad8:	ldr	r0, [sp, #8]
   19adc:	movw	r1, #0
   19ae0:	cmp	r0, r1
   19ae4:	beq	19aec <sprintf@plt+0x81c8>
   19ae8:	b	19b0c <sprintf@plt+0x81e8>
   19aec:	ldr	r0, [pc, #296]	; 19c1c <sprintf@plt+0x82f8>
   19af0:	add	r0, pc, r0
   19af4:	ldr	r1, [pc, #292]	; 19c20 <sprintf@plt+0x82fc>
   19af8:	add	r1, pc, r1
   19afc:	ldr	r2, [pc, #288]	; 19c24 <sprintf@plt+0x8300>
   19b00:	add	r3, pc, r2
   19b04:	movw	r2, #259	; 0x103
   19b08:	bl	1169c <__assert_fail@plt>
   19b0c:	ldr	r0, [sp, #4]
   19b10:	ldr	r0, [r0]
   19b14:	str	r0, [sp]
   19b18:	ldr	r0, [sp]
   19b1c:	movw	r1, #0
   19b20:	cmp	r0, r1
   19b24:	beq	19bfc <sprintf@plt+0x82d8>
   19b28:	ldr	r0, [sp]
   19b2c:	ldr	r0, [r0]
   19b30:	ldr	r1, [sp, #8]
   19b34:	cmp	r0, r1
   19b38:	beq	19b40 <sprintf@plt+0x821c>
   19b3c:	b	19bec <sprintf@plt+0x82c8>
   19b40:	ldr	r0, [sp]
   19b44:	ldr	r0, [r0, #8]
   19b48:	movw	r1, #0
   19b4c:	cmp	r0, r1
   19b50:	beq	19b6c <sprintf@plt+0x8248>
   19b54:	ldr	r0, [sp]
   19b58:	ldr	r0, [r0, #4]
   19b5c:	ldr	r1, [sp]
   19b60:	ldr	r1, [r1, #8]
   19b64:	str	r0, [r1, #4]
   19b68:	b	19b7c <sprintf@plt+0x8258>
   19b6c:	ldr	r0, [sp]
   19b70:	ldr	r0, [r0, #4]
   19b74:	ldr	r1, [sp, #4]
   19b78:	str	r0, [r1, #4]
   19b7c:	ldr	r0, [sp]
   19b80:	ldr	r0, [r0, #4]
   19b84:	movw	r1, #0
   19b88:	cmp	r0, r1
   19b8c:	beq	19ba8 <sprintf@plt+0x8284>
   19b90:	ldr	r0, [sp]
   19b94:	ldr	r0, [r0, #8]
   19b98:	ldr	r1, [sp]
   19b9c:	ldr	r1, [r1, #4]
   19ba0:	str	r0, [r1, #8]
   19ba4:	b	19bb8 <sprintf@plt+0x8294>
   19ba8:	ldr	r0, [sp]
   19bac:	ldr	r0, [r0, #8]
   19bb0:	ldr	r1, [sp, #4]
   19bb4:	str	r0, [r1]
   19bb8:	ldr	r0, [sp]
   19bbc:	movw	r1, #0
   19bc0:	str	r1, [r0, #4]
   19bc4:	ldr	r0, [sp]
   19bc8:	str	r1, [r0, #8]
   19bcc:	ldr	r0, [sp, #4]
   19bd0:	ldr	r1, [r0, #8]
   19bd4:	mvn	r2, #0
   19bd8:	add	r1, r1, r2
   19bdc:	str	r1, [r0, #8]
   19be0:	ldr	r0, [sp]
   19be4:	str	r0, [fp, #-4]
   19be8:	b	19c04 <sprintf@plt+0x82e0>
   19bec:	ldr	r0, [sp]
   19bf0:	ldr	r0, [r0, #8]
   19bf4:	str	r0, [sp]
   19bf8:	b	19b18 <sprintf@plt+0x81f4>
   19bfc:	movw	r0, #0
   19c00:	str	r0, [fp, #-4]
   19c04:	ldr	r0, [fp, #-4]
   19c08:	mov	sp, fp
   19c0c:	pop	{fp, pc}
   19c10:	andeq	r5, r0, lr, asr r2
   19c14:	andeq	r5, r0, r4, lsl #4
   19c18:			; <UNDEFINED> instruction: 0x000057b3
   19c1c:	andeq	r5, r0, r7, lsr r2
   19c20:	ldrdeq	r5, [r0], -r0
   19c24:	andeq	r5, r0, pc, ror r7
   19c28:	push	{fp, lr}
   19c2c:	mov	fp, sp
   19c30:	sub	sp, sp, #16
   19c34:	ldr	r0, [pc, #160]	; 19cdc <sprintf@plt+0x83b8>
   19c38:	add	r0, pc, r0
   19c3c:	ldr	r0, [r0]
   19c40:	str	r0, [fp, #-4]
   19c44:	ldr	r0, [fp, #-4]
   19c48:	movw	r1, #0
   19c4c:	cmp	r0, r1
   19c50:	beq	19c64 <sprintf@plt+0x8340>
   19c54:	ldr	r0, [fp, #-4]
   19c58:	ldr	r0, [r0, #8]
   19c5c:	str	r0, [sp, #4]
   19c60:	b	19c70 <sprintf@plt+0x834c>
   19c64:	movw	r0, #0
   19c68:	str	r0, [sp, #4]
   19c6c:	b	19c70 <sprintf@plt+0x834c>
   19c70:	ldr	r0, [sp, #4]
   19c74:	str	r0, [sp, #8]
   19c78:	ldr	r0, [fp, #-4]
   19c7c:	movw	r1, #0
   19c80:	cmp	r0, r1
   19c84:	beq	19cd4 <sprintf@plt+0x83b0>
   19c88:	ldr	r0, [fp, #-4]
   19c8c:	ldr	r0, [r0]
   19c90:	bl	19958 <sprintf@plt+0x8034>
   19c94:	ldr	r0, [sp, #8]
   19c98:	str	r0, [fp, #-4]
   19c9c:	ldr	r0, [fp, #-4]
   19ca0:	movw	r1, #0
   19ca4:	cmp	r0, r1
   19ca8:	beq	19cbc <sprintf@plt+0x8398>
   19cac:	ldr	r0, [fp, #-4]
   19cb0:	ldr	r0, [r0, #8]
   19cb4:	str	r0, [sp]
   19cb8:	b	19cc8 <sprintf@plt+0x83a4>
   19cbc:	movw	r0, #0
   19cc0:	str	r0, [sp]
   19cc4:	b	19cc8 <sprintf@plt+0x83a4>
   19cc8:	ldr	r0, [sp]
   19ccc:	str	r0, [sp, #8]
   19cd0:	b	19c78 <sprintf@plt+0x8354>
   19cd4:	mov	sp, fp
   19cd8:	pop	{fp, pc}
   19cdc:	andeq	fp, r1, r0, lsl r4
   19ce0:	sub	sp, sp, #4
   19ce4:	str	r0, [sp]
   19ce8:	ldr	r0, [sp]
   19cec:	ldr	r1, [r0, #460]	; 0x1cc
   19cf0:	add	r1, r1, #1
   19cf4:	str	r1, [r0, #460]	; 0x1cc
   19cf8:	add	sp, sp, #4
   19cfc:	bx	lr
   19d00:	sub	sp, sp, #12
   19d04:	str	r0, [sp, #8]
   19d08:	str	r1, [sp, #4]
   19d0c:	str	r2, [sp]
   19d10:	ldr	r0, [sp]
   19d14:	ldr	r1, [sp, #8]
   19d18:	ldr	r1, [r1, #464]	; 0x1d0
   19d1c:	ldr	r2, [sp, #4]
   19d20:	add	r1, r1, r2, lsl #4
   19d24:	str	r0, [r1, #8]
   19d28:	add	sp, sp, #12
   19d2c:	bx	lr
   19d30:	push	{fp, lr}
   19d34:	mov	fp, sp
   19d38:	sub	sp, sp, #16
   19d3c:	str	r0, [sp, #8]
   19d40:	str	r1, [sp, #4]
   19d44:	ldr	r0, [sp, #4]
   19d48:	mov	r1, sp
   19d4c:	bl	19f48 <sprintf@plt+0x8624>
   19d50:	tst	r0, #1
   19d54:	beq	19d7c <sprintf@plt+0x8458>
   19d58:	ldr	r0, [sp, #8]
   19d5c:	ldr	r1, [sp]
   19d60:	bl	19fb4 <sprintf@plt+0x8690>
   19d64:	cmp	r0, #2
   19d68:	movw	r0, #0
   19d6c:	moveq	r0, #1
   19d70:	and	r0, r0, #1
   19d74:	strb	r0, [fp, #-1]
   19d78:	b	19d88 <sprintf@plt+0x8464>
   19d7c:	movw	r0, #1
   19d80:	and	r0, r0, #1
   19d84:	strb	r0, [fp, #-1]
   19d88:	ldrb	r0, [fp, #-1]
   19d8c:	and	r0, r0, #1
   19d90:	mov	sp, fp
   19d94:	pop	{fp, pc}
   19d98:	push	{fp, lr}
   19d9c:	mov	fp, sp
   19da0:	sub	sp, sp, #32
   19da4:	ldr	r1, [pc, #348]	; 19f08 <sprintf@plt+0x85e4>
   19da8:	ldr	r1, [pc, r1]
   19dac:	str	r0, [fp, #-8]
   19db0:	ldr	r0, [fp, #-8]
   19db4:	ldr	r1, [r1, #12]
   19db8:	bl	1a068 <sprintf@plt+0x8744>
   19dbc:	str	r0, [fp, #-12]
   19dc0:	ldr	r0, [fp, #-8]
   19dc4:	ldrh	r0, [r0, #248]	; 0xf8
   19dc8:	cmp	r0, #2
   19dcc:	bne	19ddc <sprintf@plt+0x84b8>
   19dd0:	movw	r0, #1
   19dd4:	str	r0, [sp, #12]
   19dd8:	b	19e0c <sprintf@plt+0x84e8>
   19ddc:	ldr	r0, [fp, #-8]
   19de0:	ldrh	r0, [r0, #248]	; 0xf8
   19de4:	cmp	r0, #10
   19de8:	bne	19df8 <sprintf@plt+0x84d4>
   19dec:	movw	r0, #2
   19df0:	str	r0, [sp, #12]
   19df4:	b	19e08 <sprintf@plt+0x84e4>
   19df8:	movw	r0, #0
   19dfc:	and	r0, r0, #1
   19e00:	strb	r0, [fp, #-1]
   19e04:	b	19ef8 <sprintf@plt+0x85d4>
   19e08:	b	19e0c <sprintf@plt+0x84e8>
   19e0c:	ldr	r0, [pc, #252]	; 19f10 <sprintf@plt+0x85ec>
   19e10:	add	r1, pc, r0
   19e14:	ldr	r0, [fp, #-12]
   19e18:	movw	r2, #1
   19e1c:	strb	r2, [r0]
   19e20:	ldr	r0, [fp, #-8]
   19e24:	ldr	r0, [r0]
   19e28:	bl	12b74 <sprintf@plt+0x1250>
   19e2c:	ldr	r0, [pc, #216]	; 19f0c <sprintf@plt+0x85e8>
   19e30:	add	r0, pc, r0
   19e34:	ldr	r0, [r0]
   19e38:	str	r0, [sp, #16]
   19e3c:	ldr	r0, [sp, #16]
   19e40:	movw	r1, #0
   19e44:	cmp	r0, r1
   19e48:	beq	19ea0 <sprintf@plt+0x857c>
   19e4c:	ldr	r0, [sp, #16]
   19e50:	ldr	r0, [r0]
   19e54:	str	r0, [sp, #8]
   19e58:	ldr	r0, [sp, #8]
   19e5c:	ldrb	r0, [r0, #784]	; 0x310
   19e60:	tst	r0, #1
   19e64:	bne	19e8c <sprintf@plt+0x8568>
   19e68:	ldr	r0, [sp, #8]
   19e6c:	ldrb	r0, [r0, #768]	; 0x300
   19e70:	ldr	r1, [sp, #12]
   19e74:	and	r0, r0, r1
   19e78:	cmp	r0, #0
   19e7c:	beq	19e8c <sprintf@plt+0x8568>
   19e80:	ldr	r0, [sp, #8]
   19e84:	ldr	r1, [fp, #-8]
   19e88:	bl	1a090 <sprintf@plt+0x876c>
   19e8c:	b	19e90 <sprintf@plt+0x856c>
   19e90:	ldr	r0, [sp, #16]
   19e94:	ldr	r0, [r0, #8]
   19e98:	str	r0, [sp, #16]
   19e9c:	b	19e3c <sprintf@plt+0x8518>
   19ea0:	ldr	r0, [fp, #-12]
   19ea4:	ldr	r0, [r0, #12]
   19ea8:	cmp	r0, #0
   19eac:	bne	19ec0 <sprintf@plt+0x859c>
   19eb0:	movw	r0, #0
   19eb4:	and	r0, r0, #1
   19eb8:	strb	r0, [fp, #-1]
   19ebc:	b	19ef8 <sprintf@plt+0x85d4>
   19ec0:	ldr	r0, [pc, #76]	; 19f14 <sprintf@plt+0x85f0>
   19ec4:	add	r0, pc, r0
   19ec8:	ldr	r1, [pc, #72]	; 19f18 <sprintf@plt+0x85f4>
   19ecc:	ldr	r1, [pc, r1]
   19ed0:	ldr	r2, [fp, #-8]
   19ed4:	ldr	r1, [r1, #12]
   19ed8:	ldr	r0, [r0]
   19edc:	str	r0, [sp, #4]
   19ee0:	mov	r0, r2
   19ee4:	ldr	r2, [sp, #4]
   19ee8:	bl	1a1b4 <sprintf@plt+0x8890>
   19eec:	movw	r0, #1
   19ef0:	and	r0, r0, #1
   19ef4:	strb	r0, [fp, #-1]
   19ef8:	ldrb	r0, [fp, #-1]
   19efc:	and	r0, r0, #1
   19f00:	mov	sp, fp
   19f04:	pop	{fp, pc}
   19f08:	andeq	r6, r1, r8, ror #7
   19f0c:	andeq	fp, r1, r8, lsl r2
   19f10:	ldrdeq	r5, [r0], -r4
   19f14:	andeq	r6, r1, r8, ror #30
   19f18:	andeq	r6, r1, r4, asr #5
   19f1c:	push	{fp, lr}
   19f20:	mov	fp, sp
   19f24:	sub	sp, sp, #8
   19f28:	ldr	r1, [pc, #20]	; 19f44 <sprintf@plt+0x8620>
   19f2c:	add	r1, pc, r1
   19f30:	str	r0, [sp, #4]
   19f34:	ldr	r0, [sp, #4]
   19f38:	bl	1a844 <sprintf@plt+0x8f20>
   19f3c:	mov	sp, fp
   19f40:	pop	{fp, pc}
   19f44:	andeq	r5, r0, pc, ror #8
   19f48:	push	{fp, lr}
   19f4c:	mov	fp, sp
   19f50:	sub	sp, sp, #16
   19f54:	str	r0, [sp, #8]
   19f58:	str	r1, [sp, #4]
   19f5c:	ldr	r0, [sp, #8]
   19f60:	bl	19fdc <sprintf@plt+0x86b8>
   19f64:	str	r0, [sp]
   19f68:	ldr	r0, [sp]
   19f6c:	movw	r1, #0
   19f70:	cmp	r0, r1
   19f74:	beq	19f98 <sprintf@plt+0x8674>
   19f78:	ldr	r0, [sp]
   19f7c:	ldr	r0, [r0, #12]
   19f80:	ldr	r1, [sp, #4]
   19f84:	str	r0, [r1]
   19f88:	movw	r0, #1
   19f8c:	and	r0, r0, #1
   19f90:	strb	r0, [fp, #-1]
   19f94:	b	19fa4 <sprintf@plt+0x8680>
   19f98:	movw	r0, #0
   19f9c:	and	r0, r0, #1
   19fa0:	strb	r0, [fp, #-1]
   19fa4:	ldrb	r0, [fp, #-1]
   19fa8:	and	r0, r0, #1
   19fac:	mov	sp, fp
   19fb0:	pop	{fp, pc}
   19fb4:	sub	sp, sp, #8
   19fb8:	str	r0, [sp, #4]
   19fbc:	str	r1, [sp]
   19fc0:	ldr	r0, [sp, #4]
   19fc4:	ldr	r0, [r0, #464]	; 0x1d0
   19fc8:	ldr	r1, [sp]
   19fcc:	add	r0, r0, r1, lsl #4
   19fd0:	ldr	r0, [r0, #12]
   19fd4:	add	sp, sp, #8
   19fd8:	bx	lr
   19fdc:	push	{fp, lr}
   19fe0:	mov	fp, sp
   19fe4:	sub	sp, sp, #16
   19fe8:	ldr	r1, [pc, #116]	; 1a064 <sprintf@plt+0x8740>
   19fec:	ldr	r1, [pc, r1]
   19ff0:	str	r0, [sp, #8]
   19ff4:	ldr	r0, [r1]
   19ff8:	str	r0, [sp, #4]
   19ffc:	ldr	r0, [sp, #4]
   1a000:	movw	r1, #0
   1a004:	cmp	r0, r1
   1a008:	beq	1a050 <sprintf@plt+0x872c>
   1a00c:	ldr	r0, [sp, #4]
   1a010:	ldr	r0, [r0]
   1a014:	str	r0, [sp]
   1a018:	ldr	r0, [sp]
   1a01c:	ldr	r0, [r0, #16]
   1a020:	ldr	r1, [sp, #8]
   1a024:	bl	11624 <strcasecmp@plt>
   1a028:	cmp	r0, #0
   1a02c:	bne	1a03c <sprintf@plt+0x8718>
   1a030:	ldr	r0, [sp]
   1a034:	str	r0, [fp, #-4]
   1a038:	b	1a058 <sprintf@plt+0x8734>
   1a03c:	b	1a040 <sprintf@plt+0x871c>
   1a040:	ldr	r0, [sp, #4]
   1a044:	ldr	r0, [r0, #8]
   1a048:	str	r0, [sp, #4]
   1a04c:	b	19ffc <sprintf@plt+0x86d8>
   1a050:	movw	r0, #0
   1a054:	str	r0, [fp, #-4]
   1a058:	ldr	r0, [fp, #-4]
   1a05c:	mov	sp, fp
   1a060:	pop	{fp, pc}
   1a064:			; <UNDEFINED> instruction: 0x000161bc
   1a068:	sub	sp, sp, #8
   1a06c:	str	r0, [sp, #4]
   1a070:	str	r1, [sp]
   1a074:	ldr	r0, [sp, #4]
   1a078:	ldr	r0, [r0, #464]	; 0x1d0
   1a07c:	ldr	r1, [sp]
   1a080:	add	r0, r0, r1, lsl #4
   1a084:	ldr	r0, [r0, #8]
   1a088:	add	sp, sp, #8
   1a08c:	bx	lr
   1a090:	push	{r4, r5, fp, lr}
   1a094:	add	fp, sp, #8
   1a098:	sub	sp, sp, #280	; 0x118
   1a09c:	str	r0, [fp, #-12]
   1a0a0:	str	r1, [fp, #-16]
   1a0a4:	movw	r0, #24
   1a0a8:	bl	19414 <sprintf@plt+0x7af0>
   1a0ac:	ldr	r1, [pc, #248]	; 1a1ac <sprintf@plt+0x8888>
   1a0b0:	ldr	r1, [pc, r1]
   1a0b4:	str	r0, [fp, #-20]	; 0xffffffec
   1a0b8:	ldr	r0, [fp, #-16]
   1a0bc:	ldr	r1, [r1, #12]
   1a0c0:	bl	1a068 <sprintf@plt+0x8744>
   1a0c4:	str	r0, [fp, #-24]	; 0xffffffe8
   1a0c8:	ldr	r0, [fp, #-12]
   1a0cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a0d0:	str	r0, [r1]
   1a0d4:	ldr	r0, [fp, #-16]
   1a0d8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a0dc:	str	r0, [r1, #4]
   1a0e0:	ldr	r0, [fp, #-16]
   1a0e4:	ldrh	r0, [r0, #248]	; 0xf8
   1a0e8:	str	r0, [sp, #4]
   1a0ec:	ldr	r0, [sp, #4]
   1a0f0:	cmp	r0, #2
   1a0f4:	bne	1a10c <sprintf@plt+0x87e8>
   1a0f8:	ldr	r0, [fp, #-12]
   1a0fc:	ldrb	r0, [r0, #768]	; 0x300
   1a100:	and	r0, r0, #1
   1a104:	cmp	r0, #0
   1a108:	beq	1a12c <sprintf@plt+0x8808>
   1a10c:	ldr	r0, [sp, #4]
   1a110:	cmp	r0, #10
   1a114:	bne	1a138 <sprintf@plt+0x8814>
   1a118:	ldr	r0, [fp, #-12]
   1a11c:	ldrb	r0, [r0, #768]	; 0x300
   1a120:	and	r0, r0, #2
   1a124:	cmp	r0, #0
   1a128:	bne	1a138 <sprintf@plt+0x8814>
   1a12c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a130:	bl	195d8 <sprintf@plt+0x7cb4>
   1a134:	b	1a1a4 <sprintf@plt+0x8880>
   1a138:	add	r0, sp, #8
   1a13c:	ldr	r1, [fp, #-16]
   1a140:	add	r2, r1, #248	; 0xf8
   1a144:	ldr	r3, [fp, #-12]
   1a148:	movw	r1, #256	; 0x100
   1a14c:	bl	14704 <sprintf@plt+0x2de0>
   1a150:	ldr	r0, [pc, #88]	; 1a1b0 <sprintf@plt+0x888c>
   1a154:	add	r2, pc, r0
   1a158:	add	r0, sp, #8
   1a15c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a160:	movw	r3, #2
   1a164:	str	r1, [sp]
   1a168:	mov	r1, r3
   1a16c:	ldr	r3, [sp]
   1a170:	bl	1206c <sprintf@plt+0x748>
   1a174:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a178:	str	r0, [r1, #8]
   1a17c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a180:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a184:	add	r1, r1, #12
   1a188:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a18c:	add	r2, r2, #4
   1a190:	bl	1946c <sprintf@plt+0x7b48>
   1a194:	ldr	r0, [fp, #-12]
   1a198:	ldr	r1, [r0, #788]	; 0x314
   1a19c:	add	r1, r1, #1
   1a1a0:	str	r1, [r0, #788]	; 0x314
   1a1a4:	sub	sp, fp, #8
   1a1a8:	pop	{r4, r5, fp, pc}
   1a1ac:	andeq	r6, r1, r0, ror #1
   1a1b0:	andeq	r0, r0, r0, lsr #1
   1a1b4:	push	{fp, lr}
   1a1b8:	mov	fp, sp
   1a1bc:	sub	sp, sp, #16
   1a1c0:	str	r0, [fp, #-4]
   1a1c4:	str	r1, [sp, #8]
   1a1c8:	str	r2, [sp, #4]
   1a1cc:	ldr	r0, [sp, #4]
   1a1d0:	str	r0, [sp]
   1a1d4:	bl	11738 <rb_current_time@plt>
   1a1d8:	ldr	r1, [sp]
   1a1dc:	add	r0, r1, r0
   1a1e0:	ldr	r1, [fp, #-4]
   1a1e4:	ldr	r1, [r1, #464]	; 0x1d0
   1a1e8:	ldr	r2, [sp, #8]
   1a1ec:	add	r1, r1, r2, lsl #4
   1a1f0:	str	r0, [r1, #4]
   1a1f4:	mov	sp, fp
   1a1f8:	pop	{fp, pc}
   1a1fc:	push	{fp, lr}
   1a200:	mov	fp, sp
   1a204:	sub	sp, sp, #48	; 0x30
   1a208:	ldr	ip, [pc, #416]	; 1a3b0 <sprintf@plt+0x8a8c>
   1a20c:	ldr	ip, [pc, ip]
   1a210:	str	r0, [fp, #-4]
   1a214:	and	r0, r1, #1
   1a218:	strb	r0, [fp, #-5]
   1a21c:	str	r2, [fp, #-12]
   1a220:	str	r3, [fp, #-16]
   1a224:	ldr	r0, [fp, #-16]
   1a228:	str	r0, [fp, #-20]	; 0xffffffec
   1a22c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a230:	ldr	r0, [r0]
   1a234:	str	r0, [sp, #20]
   1a238:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a23c:	ldr	r0, [r0, #4]
   1a240:	str	r0, [sp, #16]
   1a244:	ldr	r0, [sp, #16]
   1a248:	ldr	r1, [ip, #12]
   1a24c:	bl	1a068 <sprintf@plt+0x8744>
   1a250:	str	r0, [sp, #24]
   1a254:	movw	r1, #0
   1a258:	cmp	r0, r1
   1a25c:	bne	1a264 <sprintf@plt+0x8940>
   1a260:	b	1a3a8 <sprintf@plt+0x8a84>
   1a264:	ldr	r0, [fp, #-4]
   1a268:	movw	r1, #0
   1a26c:	cmp	r0, r1
   1a270:	beq	1a2dc <sprintf@plt+0x89b8>
   1a274:	ldrb	r0, [fp, #-5]
   1a278:	tst	r0, #1
   1a27c:	beq	1a2dc <sprintf@plt+0x89b8>
   1a280:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a284:	ldr	r1, [fp, #-4]
   1a288:	bl	1a3c8 <sprintf@plt+0x8aa4>
   1a28c:	tst	r0, #1
   1a290:	beq	1a2dc <sprintf@plt+0x89b8>
   1a294:	ldr	r0, [pc, #296]	; 1a3c4 <sprintf@plt+0x8aa0>
   1a298:	ldr	r0, [pc, r0]
   1a29c:	ldr	r1, [sp, #20]
   1a2a0:	ldr	r2, [r1, #792]	; 0x318
   1a2a4:	add	r2, r2, #1
   1a2a8:	str	r2, [r1, #792]	; 0x318
   1a2ac:	ldr	r1, [sp, #16]
   1a2b0:	ldr	r0, [r0, #12]
   1a2b4:	ldr	r2, [sp, #20]
   1a2b8:	ldr	r3, [sp, #20]
   1a2bc:	add	r3, r3, #256	; 0x100
   1a2c0:	str	r0, [sp, #12]
   1a2c4:	mov	r0, r1
   1a2c8:	ldr	r1, [sp, #12]
   1a2cc:	bl	133d8 <sprintf@plt+0x1ab4>
   1a2d0:	ldr	r0, [sp, #16]
   1a2d4:	bl	19298 <sprintf@plt+0x7974>
   1a2d8:	b	1a3a8 <sprintf@plt+0x8a84>
   1a2dc:	ldr	r0, [sp, #20]
   1a2e0:	bl	1a57c <sprintf@plt+0x8c58>
   1a2e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a2e8:	ldr	r0, [r0, #8]
   1a2ec:	bl	126cc <sprintf@plt+0xda8>
   1a2f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a2f4:	add	r0, r0, #12
   1a2f8:	ldr	lr, [sp, #24]
   1a2fc:	add	r1, lr, #4
   1a300:	bl	1a694 <sprintf@plt+0x8d70>
   1a304:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a308:	bl	195d8 <sprintf@plt+0x7cb4>
   1a30c:	ldr	r0, [sp, #24]
   1a310:	ldr	r0, [r0, #12]
   1a314:	cmp	r0, #0
   1a318:	bne	1a3a8 <sprintf@plt+0x8a84>
   1a31c:	ldr	r0, [pc, #156]	; 1a3c0 <sprintf@plt+0x8a9c>
   1a320:	add	r1, pc, r0
   1a324:	ldr	r0, [sp, #16]
   1a328:	ldr	r0, [r0]
   1a32c:	bl	12b74 <sprintf@plt+0x1250>
   1a330:	ldr	r0, [sp, #24]
   1a334:	bl	195d8 <sprintf@plt+0x7cb4>
   1a338:	ldr	r0, [pc, #124]	; 1a3bc <sprintf@plt+0x8a98>
   1a33c:	ldr	r0, [pc, r0]
   1a340:	ldr	r1, [sp, #16]
   1a344:	ldr	r0, [r0, #12]
   1a348:	str	r0, [sp, #8]
   1a34c:	mov	r0, r1
   1a350:	ldr	r1, [sp, #8]
   1a354:	movw	r2, #0
   1a358:	bl	19d00 <sprintf@plt+0x83dc>
   1a35c:	ldr	r0, [pc, #84]	; 1a3b8 <sprintf@plt+0x8a94>
   1a360:	ldr	r0, [pc, r0]
   1a364:	ldr	r1, [sp, #16]
   1a368:	ldr	r0, [r0, #12]
   1a36c:	str	r0, [sp, #4]
   1a370:	mov	r0, r1
   1a374:	ldr	r1, [sp, #4]
   1a378:	movw	r2, #0
   1a37c:	bl	1a7d0 <sprintf@plt+0x8eac>
   1a380:	ldr	r0, [pc, #44]	; 1a3b4 <sprintf@plt+0x8a90>
   1a384:	ldr	r0, [pc, r0]
   1a388:	ldr	r1, [sp, #16]
   1a38c:	ldr	r0, [r0, #12]
   1a390:	str	r0, [sp]
   1a394:	mov	r0, r1
   1a398:	ldr	r1, [sp]
   1a39c:	bl	13afc <sprintf@plt+0x21d8>
   1a3a0:	ldr	r0, [sp, #16]
   1a3a4:	bl	1a800 <sprintf@plt+0x8edc>
   1a3a8:	mov	sp, fp
   1a3ac:	pop	{fp, pc}
   1a3b0:	andeq	r5, r1, r4, lsl #31
   1a3b4:	andeq	r5, r1, ip, lsl #28
   1a3b8:	andeq	r5, r1, r0, lsr lr
   1a3bc:	andeq	r5, r1, r4, asr lr
   1a3c0:	andeq	r4, r0, r8, ror #31
   1a3c4:	strdeq	r5, [r1], -r8
   1a3c8:	push	{fp, lr}
   1a3cc:	mov	fp, sp
   1a3d0:	sub	sp, sp, #40	; 0x28
   1a3d4:	str	r0, [fp, #-8]
   1a3d8:	str	r1, [fp, #-12]
   1a3dc:	ldr	r0, [fp, #-8]
   1a3e0:	ldr	r0, [r0]
   1a3e4:	str	r0, [fp, #-16]
   1a3e8:	ldr	r0, [fp, #-16]
   1a3ec:	ldr	r0, [r0, #780]	; 0x30c
   1a3f0:	cmp	r0, #0
   1a3f4:	bne	1a408 <sprintf@plt+0x8ae4>
   1a3f8:	movw	r0, #1
   1a3fc:	and	r0, r0, #1
   1a400:	strb	r0, [fp, #-1]
   1a404:	b	1a564 <sprintf@plt+0x8c40>
   1a408:	ldr	r0, [fp, #-12]
   1a40c:	movw	r1, #46	; 0x2e
   1a410:	bl	11684 <strrchr@plt>
   1a414:	str	r0, [sp, #20]
   1a418:	movw	r1, #0
   1a41c:	cmp	r0, r1
   1a420:	beq	1a43c <sprintf@plt+0x8b18>
   1a424:	ldr	r0, [sp, #20]
   1a428:	add	r1, r0, #1
   1a42c:	str	r1, [sp, #20]
   1a430:	ldrb	r0, [r0, #1]
   1a434:	cmp	r0, #0
   1a438:	bne	1a440 <sprintf@plt+0x8b1c>
   1a43c:	b	1a514 <sprintf@plt+0x8bf0>
   1a440:	ldr	r0, [fp, #-16]
   1a444:	ldr	r0, [r0, #772]	; 0x304
   1a448:	str	r0, [sp, #16]
   1a44c:	ldr	r0, [sp, #16]
   1a450:	movw	r1, #0
   1a454:	cmp	r0, r1
   1a458:	beq	1a504 <sprintf@plt+0x8be0>
   1a45c:	ldr	r0, [sp, #16]
   1a460:	ldr	r0, [r0]
   1a464:	str	r0, [sp, #12]
   1a468:	ldr	r0, [sp, #12]
   1a46c:	ldr	r0, [r0]
   1a470:	cmp	r0, #1
   1a474:	bne	1a484 <sprintf@plt+0x8b60>
   1a478:	ldr	r0, [fp, #-12]
   1a47c:	str	r0, [sp, #8]
   1a480:	b	1a4c8 <sprintf@plt+0x8ba4>
   1a484:	ldr	r0, [sp, #12]
   1a488:	ldr	r0, [r0]
   1a48c:	cmp	r0, #2
   1a490:	bne	1a4a0 <sprintf@plt+0x8b7c>
   1a494:	ldr	r0, [sp, #20]
   1a498:	str	r0, [sp, #8]
   1a49c:	b	1a4c4 <sprintf@plt+0x8ba0>
   1a4a0:	ldr	r0, [pc, #204]	; 1a574 <sprintf@plt+0x8c50>
   1a4a4:	add	r1, pc, r0
   1a4a8:	ldr	r2, [fp, #-16]
   1a4ac:	ldr	r0, [sp, #12]
   1a4b0:	ldr	r3, [r0]
   1a4b4:	movw	r0, #67	; 0x43
   1a4b8:	bl	12bfc <sprintf@plt+0x12d8>
   1a4bc:	movw	r0, #3
   1a4c0:	bl	1190c <exit@plt>
   1a4c4:	b	1a4c8 <sprintf@plt+0x8ba4>
   1a4c8:	ldr	r0, [sp, #8]
   1a4cc:	ldr	r1, [sp, #12]
   1a4d0:	add	r1, r1, #4
   1a4d4:	bl	11900 <strcmp@plt>
   1a4d8:	cmp	r0, #0
   1a4dc:	bne	1a4f0 <sprintf@plt+0x8bcc>
   1a4e0:	movw	r0, #1
   1a4e4:	and	r0, r0, #1
   1a4e8:	strb	r0, [fp, #-1]
   1a4ec:	b	1a564 <sprintf@plt+0x8c40>
   1a4f0:	b	1a4f4 <sprintf@plt+0x8bd0>
   1a4f4:	ldr	r0, [sp, #16]
   1a4f8:	ldr	r0, [r0, #8]
   1a4fc:	str	r0, [sp, #16]
   1a500:	b	1a44c <sprintf@plt+0x8b28>
   1a504:	movw	r0, #0
   1a508:	and	r0, r0, #1
   1a50c:	strb	r0, [fp, #-1]
   1a510:	b	1a564 <sprintf@plt+0x8c40>
   1a514:	ldr	r0, [fp, #-16]
   1a518:	ldr	r0, [r0, #796]	; 0x31c
   1a51c:	add	r0, r0, #3600	; 0xe10
   1a520:	str	r0, [sp, #4]
   1a524:	bl	11738 <rb_current_time@plt>
   1a528:	ldr	lr, [sp, #4]
   1a52c:	cmp	lr, r0
   1a530:	bge	1a558 <sprintf@plt+0x8c34>
   1a534:	ldr	r0, [pc, #60]	; 1a578 <sprintf@plt+0x8c54>
   1a538:	add	r1, pc, r0
   1a53c:	ldr	r2, [fp, #-16]
   1a540:	ldr	r3, [fp, #-12]
   1a544:	movw	r0, #87	; 0x57
   1a548:	bl	12bfc <sprintf@plt+0x12d8>
   1a54c:	bl	11738 <rb_current_time@plt>
   1a550:	ldr	r1, [fp, #-16]
   1a554:	str	r0, [r1, #796]	; 0x31c
   1a558:	movw	r0, #0
   1a55c:	and	r0, r0, #1
   1a560:	strb	r0, [fp, #-1]
   1a564:	ldrb	r0, [fp, #-1]
   1a568:	and	r0, r0, #1
   1a56c:	mov	sp, fp
   1a570:	pop	{fp, pc}
   1a574:	andeq	r4, r0, r9, lsl #29
   1a578:	andeq	r4, r0, r4, lsr #28
   1a57c:	push	{fp, lr}
   1a580:	mov	fp, sp
   1a584:	sub	sp, sp, #24
   1a588:	str	r0, [fp, #-4]
   1a58c:	ldr	r0, [fp, #-4]
   1a590:	ldr	r1, [r0, #788]	; 0x314
   1a594:	mvn	r2, #0
   1a598:	add	r1, r1, r2
   1a59c:	str	r1, [r0, #788]	; 0x314
   1a5a0:	ldr	r0, [fp, #-4]
   1a5a4:	ldrb	r0, [r0, #784]	; 0x310
   1a5a8:	tst	r0, #1
   1a5ac:	beq	1a688 <sprintf@plt+0x8d64>
   1a5b0:	ldr	r0, [fp, #-4]
   1a5b4:	ldr	r0, [r0, #788]	; 0x314
   1a5b8:	cmp	r0, #0
   1a5bc:	bgt	1a688 <sprintf@plt+0x8d64>
   1a5c0:	ldr	r0, [fp, #-4]
   1a5c4:	ldr	r0, [r0, #772]	; 0x304
   1a5c8:	str	r0, [fp, #-8]
   1a5cc:	ldr	r0, [fp, #-8]
   1a5d0:	movw	r1, #0
   1a5d4:	cmp	r0, r1
   1a5d8:	beq	1a5ec <sprintf@plt+0x8cc8>
   1a5dc:	ldr	r0, [fp, #-8]
   1a5e0:	ldr	r0, [r0, #8]
   1a5e4:	str	r0, [sp, #8]
   1a5e8:	b	1a5f8 <sprintf@plt+0x8cd4>
   1a5ec:	movw	r0, #0
   1a5f0:	str	r0, [sp, #8]
   1a5f4:	b	1a5f8 <sprintf@plt+0x8cd4>
   1a5f8:	ldr	r0, [sp, #8]
   1a5fc:	str	r0, [sp, #12]
   1a600:	ldr	r0, [fp, #-8]
   1a604:	movw	r1, #0
   1a608:	cmp	r0, r1
   1a60c:	beq	1a668 <sprintf@plt+0x8d44>
   1a610:	ldr	r0, [fp, #-8]
   1a614:	ldr	r1, [fp, #-4]
   1a618:	add	r1, r1, #772	; 0x304
   1a61c:	bl	1a694 <sprintf@plt+0x8d70>
   1a620:	ldr	r0, [fp, #-8]
   1a624:	bl	195d8 <sprintf@plt+0x7cb4>
   1a628:	ldr	r0, [sp, #12]
   1a62c:	str	r0, [fp, #-8]
   1a630:	ldr	r0, [fp, #-8]
   1a634:	movw	r1, #0
   1a638:	cmp	r0, r1
   1a63c:	beq	1a650 <sprintf@plt+0x8d2c>
   1a640:	ldr	r0, [fp, #-8]
   1a644:	ldr	r0, [r0, #8]
   1a648:	str	r0, [sp, #4]
   1a64c:	b	1a65c <sprintf@plt+0x8d38>
   1a650:	movw	r0, #0
   1a654:	str	r0, [sp, #4]
   1a658:	b	1a65c <sprintf@plt+0x8d38>
   1a65c:	ldr	r0, [sp, #4]
   1a660:	str	r0, [sp, #12]
   1a664:	b	1a600 <sprintf@plt+0x8cdc>
   1a668:	ldr	r0, [pc, #32]	; 1a690 <sprintf@plt+0x8d6c>
   1a66c:	add	r1, pc, r0
   1a670:	ldr	r0, [fp, #-4]
   1a674:	bl	199b4 <sprintf@plt+0x8090>
   1a678:	ldr	r1, [fp, #-4]
   1a67c:	str	r0, [sp]
   1a680:	mov	r0, r1
   1a684:	bl	195d8 <sprintf@plt+0x7cb4>
   1a688:	mov	sp, fp
   1a68c:	pop	{fp, pc}
   1a690:	ldrdeq	sl, [r1], -ip
   1a694:	push	{fp, lr}
   1a698:	mov	fp, sp
   1a69c:	sub	sp, sp, #8
   1a6a0:	str	r0, [sp, #4]
   1a6a4:	str	r1, [sp]
   1a6a8:	ldr	r0, [sp, #4]
   1a6ac:	movw	r1, #0
   1a6b0:	cmp	r0, r1
   1a6b4:	beq	1a6bc <sprintf@plt+0x8d98>
   1a6b8:	b	1a6dc <sprintf@plt+0x8db8>
   1a6bc:	ldr	r0, [pc, #244]	; 1a7b8 <sprintf@plt+0x8e94>
   1a6c0:	add	r0, pc, r0
   1a6c4:	ldr	r1, [pc, #240]	; 1a7bc <sprintf@plt+0x8e98>
   1a6c8:	add	r1, pc, r1
   1a6cc:	ldr	r2, [pc, #236]	; 1a7c0 <sprintf@plt+0x8e9c>
   1a6d0:	add	r3, pc, r2
   1a6d4:	movw	r2, #235	; 0xeb
   1a6d8:	bl	1169c <__assert_fail@plt>
   1a6dc:	ldr	r0, [sp]
   1a6e0:	movw	r1, #0
   1a6e4:	cmp	r0, r1
   1a6e8:	beq	1a6f0 <sprintf@plt+0x8dcc>
   1a6ec:	b	1a710 <sprintf@plt+0x8dec>
   1a6f0:	ldr	r0, [pc, #204]	; 1a7c4 <sprintf@plt+0x8ea0>
   1a6f4:	add	r0, pc, r0
   1a6f8:	ldr	r1, [pc, #200]	; 1a7c8 <sprintf@plt+0x8ea4>
   1a6fc:	add	r1, pc, r1
   1a700:	ldr	r2, [pc, #196]	; 1a7cc <sprintf@plt+0x8ea8>
   1a704:	add	r3, pc, r2
   1a708:	movw	r2, #236	; 0xec
   1a70c:	bl	1169c <__assert_fail@plt>
   1a710:	ldr	r0, [sp, #4]
   1a714:	ldr	r0, [r0, #8]
   1a718:	movw	r1, #0
   1a71c:	cmp	r0, r1
   1a720:	beq	1a73c <sprintf@plt+0x8e18>
   1a724:	ldr	r0, [sp, #4]
   1a728:	ldr	r0, [r0, #4]
   1a72c:	ldr	r1, [sp, #4]
   1a730:	ldr	r1, [r1, #8]
   1a734:	str	r0, [r1, #4]
   1a738:	b	1a74c <sprintf@plt+0x8e28>
   1a73c:	ldr	r0, [sp, #4]
   1a740:	ldr	r0, [r0, #4]
   1a744:	ldr	r1, [sp]
   1a748:	str	r0, [r1, #4]
   1a74c:	ldr	r0, [sp, #4]
   1a750:	ldr	r0, [r0, #4]
   1a754:	movw	r1, #0
   1a758:	cmp	r0, r1
   1a75c:	beq	1a778 <sprintf@plt+0x8e54>
   1a760:	ldr	r0, [sp, #4]
   1a764:	ldr	r0, [r0, #8]
   1a768:	ldr	r1, [sp, #4]
   1a76c:	ldr	r1, [r1, #4]
   1a770:	str	r0, [r1, #8]
   1a774:	b	1a788 <sprintf@plt+0x8e64>
   1a778:	ldr	r0, [sp, #4]
   1a77c:	ldr	r0, [r0, #8]
   1a780:	ldr	r1, [sp]
   1a784:	str	r0, [r1]
   1a788:	ldr	r0, [sp, #4]
   1a78c:	movw	r1, #0
   1a790:	str	r1, [r0, #4]
   1a794:	ldr	r0, [sp, #4]
   1a798:	str	r1, [r0, #8]
   1a79c:	ldr	r0, [sp]
   1a7a0:	ldr	r1, [r0, #8]
   1a7a4:	mvn	r2, #0
   1a7a8:	add	r1, r1, r2
   1a7ac:	str	r1, [r0, #8]
   1a7b0:	mov	sp, fp
   1a7b4:	pop	{fp, pc}
   1a7b8:	andeq	r4, r0, r5, lsl fp
   1a7bc:	andeq	r4, r0, r0, lsl #12
   1a7c0:	andeq	r4, r0, r4, lsl r6
   1a7c4:	andeq	r4, r0, r6, lsr #12
   1a7c8:	andeq	r4, r0, ip, asr #11
   1a7cc:	andeq	r4, r0, r0, ror #11
   1a7d0:	sub	sp, sp, #12
   1a7d4:	str	r0, [sp, #8]
   1a7d8:	str	r1, [sp, #4]
   1a7dc:	str	r2, [sp]
   1a7e0:	ldr	r0, [sp]
   1a7e4:	ldr	r1, [sp, #8]
   1a7e8:	ldr	r1, [r1, #464]	; 0x1d0
   1a7ec:	ldr	r2, [sp, #4]
   1a7f0:	add	r1, r1, r2, lsl #4
   1a7f4:	str	r0, [r1, #4]
   1a7f8:	add	sp, sp, #12
   1a7fc:	bx	lr
   1a800:	push	{fp, lr}
   1a804:	mov	fp, sp
   1a808:	sub	sp, sp, #8
   1a80c:	str	r0, [sp, #4]
   1a810:	ldr	r0, [sp, #4]
   1a814:	ldr	r1, [r0, #460]	; 0x1cc
   1a818:	mvn	r2, #0
   1a81c:	add	r1, r1, r2
   1a820:	str	r1, [r0, #460]	; 0x1cc
   1a824:	ldr	r0, [sp, #4]
   1a828:	ldr	r0, [r0, #460]	; 0x1cc
   1a82c:	cmp	r0, #0
   1a830:	bne	1a83c <sprintf@plt+0x8f18>
   1a834:	ldr	r0, [sp, #4]
   1a838:	bl	13954 <sprintf@plt+0x2030>
   1a83c:	mov	sp, fp
   1a840:	pop	{fp, pc}
   1a844:	push	{fp, lr}
   1a848:	mov	fp, sp
   1a84c:	sub	sp, sp, #40	; 0x28
   1a850:	ldr	r2, [pc, #408]	; 1a9f0 <sprintf@plt+0x90cc>
   1a854:	ldr	r2, [pc, r2]
   1a858:	str	r0, [fp, #-4]
   1a85c:	str	r1, [fp, #-8]
   1a860:	ldr	r0, [fp, #-4]
   1a864:	ldr	r1, [r2, #12]
   1a868:	bl	1a068 <sprintf@plt+0x8744>
   1a86c:	str	r0, [sp, #20]
   1a870:	ldr	r0, [sp, #20]
   1a874:	movw	r1, #0
   1a878:	cmp	r0, r1
   1a87c:	bne	1a884 <sprintf@plt+0x8f60>
   1a880:	b	1a9e8 <sprintf@plt+0x90c4>
   1a884:	ldr	r0, [sp, #20]
   1a888:	ldr	r0, [r0, #12]
   1a88c:	cmp	r0, #0
   1a890:	beq	1a978 <sprintf@plt+0x9054>
   1a894:	ldr	r0, [fp, #-4]
   1a898:	ldr	r0, [r0]
   1a89c:	ldr	r1, [fp, #-8]
   1a8a0:	bl	12b74 <sprintf@plt+0x1250>
   1a8a4:	ldr	r0, [sp, #20]
   1a8a8:	ldr	r0, [r0, #4]
   1a8ac:	str	r0, [fp, #-12]
   1a8b0:	ldr	r0, [fp, #-12]
   1a8b4:	movw	r1, #0
   1a8b8:	cmp	r0, r1
   1a8bc:	beq	1a8d0 <sprintf@plt+0x8fac>
   1a8c0:	ldr	r0, [fp, #-12]
   1a8c4:	ldr	r0, [r0, #8]
   1a8c8:	str	r0, [sp, #12]
   1a8cc:	b	1a8dc <sprintf@plt+0x8fb8>
   1a8d0:	movw	r0, #0
   1a8d4:	str	r0, [sp, #12]
   1a8d8:	b	1a8dc <sprintf@plt+0x8fb8>
   1a8dc:	ldr	r0, [sp, #12]
   1a8e0:	str	r0, [fp, #-16]
   1a8e4:	ldr	r0, [fp, #-12]
   1a8e8:	movw	r1, #0
   1a8ec:	cmp	r0, r1
   1a8f0:	beq	1a974 <sprintf@plt+0x9050>
   1a8f4:	ldr	r0, [fp, #-12]
   1a8f8:	ldr	r0, [r0]
   1a8fc:	str	r0, [sp, #16]
   1a900:	ldr	r0, [sp, #16]
   1a904:	ldr	r0, [r0, #8]
   1a908:	bl	126cc <sprintf@plt+0xda8>
   1a90c:	ldr	r0, [sp, #16]
   1a910:	ldr	r0, [r0]
   1a914:	bl	1a57c <sprintf@plt+0x8c58>
   1a918:	ldr	r0, [sp, #16]
   1a91c:	add	r0, r0, #12
   1a920:	ldr	lr, [sp, #20]
   1a924:	add	r1, lr, #4
   1a928:	bl	1a694 <sprintf@plt+0x8d70>
   1a92c:	ldr	r0, [sp, #16]
   1a930:	bl	195d8 <sprintf@plt+0x7cb4>
   1a934:	ldr	r0, [fp, #-16]
   1a938:	str	r0, [fp, #-12]
   1a93c:	ldr	r0, [fp, #-12]
   1a940:	movw	r1, #0
   1a944:	cmp	r0, r1
   1a948:	beq	1a95c <sprintf@plt+0x9038>
   1a94c:	ldr	r0, [fp, #-12]
   1a950:	ldr	r0, [r0, #8]
   1a954:	str	r0, [sp, #8]
   1a958:	b	1a968 <sprintf@plt+0x9044>
   1a95c:	movw	r0, #0
   1a960:	str	r0, [sp, #8]
   1a964:	b	1a968 <sprintf@plt+0x9044>
   1a968:	ldr	r0, [sp, #8]
   1a96c:	str	r0, [fp, #-16]
   1a970:	b	1a8e4 <sprintf@plt+0x8fc0>
   1a974:	b	1a978 <sprintf@plt+0x9054>
   1a978:	ldr	r0, [sp, #20]
   1a97c:	bl	195d8 <sprintf@plt+0x7cb4>
   1a980:	ldr	r0, [pc, #116]	; 1a9fc <sprintf@plt+0x90d8>
   1a984:	ldr	r0, [pc, r0]
   1a988:	ldr	lr, [fp, #-4]
   1a98c:	ldr	r1, [r0, #12]
   1a990:	mov	r0, lr
   1a994:	movw	r2, #0
   1a998:	bl	19d00 <sprintf@plt+0x83dc>
   1a99c:	ldr	r0, [pc, #84]	; 1a9f8 <sprintf@plt+0x90d4>
   1a9a0:	ldr	r0, [pc, r0]
   1a9a4:	ldr	r1, [fp, #-4]
   1a9a8:	ldr	r0, [r0, #12]
   1a9ac:	str	r0, [sp, #4]
   1a9b0:	mov	r0, r1
   1a9b4:	ldr	r1, [sp, #4]
   1a9b8:	movw	r2, #0
   1a9bc:	bl	1a7d0 <sprintf@plt+0x8eac>
   1a9c0:	ldr	r0, [pc, #44]	; 1a9f4 <sprintf@plt+0x90d0>
   1a9c4:	ldr	r0, [pc, r0]
   1a9c8:	ldr	r1, [fp, #-4]
   1a9cc:	ldr	r0, [r0, #12]
   1a9d0:	str	r0, [sp]
   1a9d4:	mov	r0, r1
   1a9d8:	ldr	r1, [sp]
   1a9dc:	bl	13afc <sprintf@plt+0x21d8>
   1a9e0:	ldr	r0, [fp, #-4]
   1a9e4:	bl	1a800 <sprintf@plt+0x8edc>
   1a9e8:	mov	sp, fp
   1a9ec:	pop	{fp, pc}
   1a9f0:	andeq	r5, r1, ip, lsr r9
   1a9f4:	andeq	r5, r1, ip, asr #15
   1a9f8:	strdeq	r5, [r1], -r0
   1a9fc:	andeq	r5, r1, ip, lsl #16
   1aa00:	push	{fp, lr}
   1aa04:	mov	fp, sp
   1aa08:	sub	sp, sp, #16
   1aa0c:	str	r0, [fp, #-4]
   1aa10:	str	r1, [sp, #8]
   1aa14:	str	r2, [sp, #4]
   1aa18:	ldr	r0, [sp, #4]
   1aa1c:	ldr	r0, [r0]
   1aa20:	bl	11798 <atoi@plt>
   1aa24:	str	r0, [sp]
   1aa28:	ldr	r0, [sp]
   1aa2c:	cmp	r0, #0
   1aa30:	bge	1aa50 <sprintf@plt+0x912c>
   1aa34:	ldr	r0, [pc, #48]	; 1aa6c <sprintf@plt+0x9148>
   1aa38:	add	r1, pc, r0
   1aa3c:	ldr	r2, [sp]
   1aa40:	movw	r0, #67	; 0x43
   1aa44:	bl	12bfc <sprintf@plt+0x12d8>
   1aa48:	movw	r0, #3
   1aa4c:	bl	1190c <exit@plt>
   1aa50:	ldr	r0, [pc, #16]	; 1aa68 <sprintf@plt+0x9144>
   1aa54:	add	r0, pc, r0
   1aa58:	ldr	r1, [sp]
   1aa5c:	str	r1, [r0]
   1aa60:	mov	sp, fp
   1aa64:	pop	{fp, pc}
   1aa68:	andeq	r6, r1, ip, lsr r4
   1aa6c:	ldrdeq	r4, [r0], -r0
   1aa70:	sub	sp, sp, #12
   1aa74:	ldr	r3, [pc, #52]	; 1aab0 <sprintf@plt+0x918c>
   1aa78:	add	r3, pc, r3
   1aa7c:	str	r0, [sp, #8]
   1aa80:	str	r1, [sp, #4]
   1aa84:	str	r2, [sp]
   1aa88:	ldr	r0, [sp]
   1aa8c:	ldr	r0, [r0]
   1aa90:	ldrb	r0, [r0]
   1aa94:	cmp	r0, #49	; 0x31
   1aa98:	movw	r0, #0
   1aa9c:	moveq	r0, #1
   1aaa0:	and	r0, r0, #1
   1aaa4:	strb	r0, [r3]
   1aaa8:	add	sp, sp, #12
   1aaac:	bx	lr
   1aab0:	andeq	r6, r1, ip, lsl r4
   1aab4:	push	{fp, lr}
   1aab8:	mov	fp, sp
   1aabc:	sub	sp, sp, #16
   1aac0:	ldr	r0, [pc, #140]	; 1ab54 <sprintf@plt+0x9230>
   1aac4:	ldr	r0, [pc, r0]
   1aac8:	ldr	r0, [r0]
   1aacc:	add	r1, sp, #4
   1aad0:	bl	11708 <rb_dictionary_foreach_start@plt>
   1aad4:	ldr	r0, [pc, #124]	; 1ab58 <sprintf@plt+0x9234>
   1aad8:	ldr	r0, [pc, r0]
   1aadc:	ldr	r0, [r0]
   1aae0:	add	r1, sp, #4
   1aae4:	bl	11618 <rb_dictionary_foreach_cur@plt>
   1aae8:	str	r0, [fp, #-4]
   1aaec:	movw	r1, #0
   1aaf0:	cmp	r0, r1
   1aaf4:	beq	1ab4c <sprintf@plt+0x9228>
   1aaf8:	ldr	r0, [pc, #92]	; 1ab5c <sprintf@plt+0x9238>
   1aafc:	ldr	r0, [pc, r0]
   1ab00:	ldr	r1, [fp, #-4]
   1ab04:	ldr	r0, [r0, #12]
   1ab08:	str	r0, [sp]
   1ab0c:	mov	r0, r1
   1ab10:	ldr	r1, [sp]
   1ab14:	bl	1ae60 <sprintf@plt+0x953c>
   1ab18:	movw	r1, #0
   1ab1c:	cmp	r0, r1
   1ab20:	beq	1ab30 <sprintf@plt+0x920c>
   1ab24:	ldr	r0, [fp, #-4]
   1ab28:	movw	r1, #2
   1ab2c:	bl	1ae88 <sprintf@plt+0x9564>
   1ab30:	b	1ab34 <sprintf@plt+0x9210>
   1ab34:	ldr	r0, [pc, #36]	; 1ab60 <sprintf@plt+0x923c>
   1ab38:	ldr	r0, [pc, r0]
   1ab3c:	ldr	r0, [r0]
   1ab40:	add	r1, sp, #4
   1ab44:	bl	116c0 <rb_dictionary_foreach_next@plt>
   1ab48:	b	1aad4 <sprintf@plt+0x91b0>
   1ab4c:	mov	sp, fp
   1ab50:	pop	{fp, pc}
   1ab54:	muleq	r1, ip, r6
   1ab58:	andeq	r5, r1, r8, lsl #13
   1ab5c:	andeq	r5, r1, r0, ror r6
   1ab60:	andeq	r5, r1, r8, lsr #12
   1ab64:	push	{r4, r5, fp, lr}
   1ab68:	add	fp, sp, #8
   1ab6c:	sub	sp, sp, #312	; 0x138
   1ab70:	str	r0, [fp, #-16]
   1ab74:	movw	r0, #4
   1ab78:	bl	1b094 <sprintf@plt+0x9770>
   1ab7c:	ldr	lr, [pc, #608]	; 1ade4 <sprintf@plt+0x94c0>
   1ab80:	add	lr, pc, lr
   1ab84:	str	r0, [fp, #-20]	; 0xffffffec
   1ab88:	ldr	r0, [fp, #-16]
   1ab8c:	ldrh	r0, [r0, #248]	; 0xf8
   1ab90:	str	r0, [sp, #40]	; 0x28
   1ab94:	ldrb	r0, [lr]
   1ab98:	tst	r0, #1
   1ab9c:	bne	1abf4 <sprintf@plt+0x92d0>
   1aba0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1aba4:	bl	1afa8 <sprintf@plt+0x9684>
   1aba8:	ldr	r0, [pc, #572]	; 1adec <sprintf@plt+0x94c8>
   1abac:	add	r0, pc, r0
   1abb0:	ldr	lr, [fp, #-16]
   1abb4:	ldr	lr, [lr]
   1abb8:	ldr	r1, [r0, #16]
   1abbc:	mov	r0, lr
   1abc0:	bl	12b74 <sprintf@plt+0x1250>
   1abc4:	ldr	r0, [pc, #540]	; 1ade8 <sprintf@plt+0x94c4>
   1abc8:	ldr	r0, [pc, r0]
   1abcc:	ldr	r1, [fp, #-16]
   1abd0:	ldr	r0, [r0, #12]
   1abd4:	str	r0, [sp, #36]	; 0x24
   1abd8:	mov	r0, r1
   1abdc:	ldr	r1, [sp, #36]	; 0x24
   1abe0:	bl	13afc <sprintf@plt+0x21d8>
   1abe4:	movw	r0, #1
   1abe8:	and	r0, r0, #1
   1abec:	strb	r0, [fp, #-9]
   1abf0:	b	1add4 <sprintf@plt+0x94b0>
   1abf4:	ldr	r0, [fp, #-16]
   1abf8:	bl	1b0ec <sprintf@plt+0x97c8>
   1abfc:	ldr	r0, [pc, #508]	; 1ae00 <sprintf@plt+0x94dc>
   1ac00:	add	r0, pc, r0
   1ac04:	ldr	lr, [fp, #-16]
   1ac08:	ldr	lr, [lr]
   1ac0c:	ldr	r1, [r0]
   1ac10:	mov	r0, lr
   1ac14:	bl	12b74 <sprintf@plt+0x1250>
   1ac18:	ldr	r0, [pc, #476]	; 1adfc <sprintf@plt+0x94d8>
   1ac1c:	ldr	r0, [pc, r0]
   1ac20:	ldr	r1, [fp, #-16]
   1ac24:	ldr	r0, [r0, #12]
   1ac28:	ldr	lr, [fp, #-20]	; 0xffffffec
   1ac2c:	str	r0, [sp, #32]
   1ac30:	mov	r0, r1
   1ac34:	ldr	r1, [sp, #32]
   1ac38:	mov	r2, lr
   1ac3c:	bl	1aff0 <sprintf@plt+0x96cc>
   1ac40:	ldr	r0, [pc, #428]	; 1adf4 <sprintf@plt+0x94d0>
   1ac44:	add	r0, pc, r0
   1ac48:	ldr	r1, [pc, #424]	; 1adf8 <sprintf@plt+0x94d4>
   1ac4c:	ldr	r1, [pc, r1]
   1ac50:	ldr	r2, [fp, #-16]
   1ac54:	ldr	r1, [r1, #12]
   1ac58:	ldr	r0, [r0]
   1ac5c:	str	r0, [sp, #28]
   1ac60:	mov	r0, r2
   1ac64:	ldr	r2, [sp, #28]
   1ac68:	bl	1b10c <sprintf@plt+0x97e8>
   1ac6c:	ldr	r0, [pc, #380]	; 1adf0 <sprintf@plt+0x94cc>
   1ac70:	add	r3, pc, r0
   1ac74:	ldr	r0, [sp, #40]	; 0x28
   1ac78:	ldr	r1, [fp, #-16]
   1ac7c:	ldr	r2, [r1, #4]
   1ac80:	movw	r1, #1
   1ac84:	bl	115dc <rb_socket@plt>
   1ac88:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ac8c:	str	r0, [r1]
   1ac90:	movw	r1, #0
   1ac94:	cmp	r0, r1
   1ac98:	bne	1ace0 <sprintf@plt+0x93bc>
   1ac9c:	bl	11918 <__errno_location@plt>
   1aca0:	ldr	r0, [r0]
   1aca4:	bl	11528 <strerror@plt>
   1aca8:	ldr	lr, [pc, #348]	; 1ae0c <sprintf@plt+0x94e8>
   1acac:	add	r1, pc, lr
   1acb0:	movw	lr, #68	; 0x44
   1acb4:	str	r0, [sp, #24]
   1acb8:	mov	r0, lr
   1acbc:	ldr	r2, [sp, #24]
   1acc0:	bl	12bfc <sprintf@plt+0x12d8>
   1acc4:	ldr	r0, [fp, #-16]
   1acc8:	movw	r1, #2
   1accc:	bl	1ae88 <sprintf@plt+0x9564>
   1acd0:	movw	r0, #1
   1acd4:	and	r0, r0, #1
   1acd8:	strb	r0, [fp, #-9]
   1acdc:	b	1add4 <sprintf@plt+0x94b0>
   1ace0:	ldr	r0, [fp, #-16]
   1ace4:	add	r0, r0, #64	; 0x40
   1ace8:	sub	r1, fp, #148	; 0x94
   1acec:	str	r0, [sp, #20]
   1acf0:	mov	r0, r1
   1acf4:	ldr	r1, [sp, #20]
   1acf8:	movw	r2, #128	; 0x80
   1acfc:	str	r2, [sp, #16]
   1ad00:	bl	11750 <memcpy@plt>
   1ad04:	ldr	r0, [fp, #-16]
   1ad08:	add	r0, r0, #248	; 0xf8
   1ad0c:	add	r1, sp, #44	; 0x2c
   1ad10:	str	r0, [sp, #12]
   1ad14:	mov	r0, r1
   1ad18:	ldr	r1, [sp, #12]
   1ad1c:	ldr	r2, [sp, #16]
   1ad20:	bl	11750 <memcpy@plt>
   1ad24:	ldrh	r0, [fp, #-148]	; 0xffffff6c
   1ad28:	cmp	r0, #2
   1ad2c:	bne	1ad3c <sprintf@plt+0x9418>
   1ad30:	movw	r0, #0
   1ad34:	strh	r0, [fp, #-146]	; 0xffffff6e
   1ad38:	b	1ad44 <sprintf@plt+0x9420>
   1ad3c:	movw	r0, #0
   1ad40:	strh	r0, [fp, #-146]	; 0xffffff6e
   1ad44:	b	1ad48 <sprintf@plt+0x9424>
   1ad48:	b	1ad4c <sprintf@plt+0x9428>
   1ad4c:	ldrh	r0, [sp, #44]	; 0x2c
   1ad50:	cmp	r0, #2
   1ad54:	bne	1ad6c <sprintf@plt+0x9448>
   1ad58:	movw	r0, #113	; 0x71
   1ad5c:	uxth	r0, r0
   1ad60:	bl	11654 <htons@plt>
   1ad64:	strh	r0, [sp, #46]	; 0x2e
   1ad68:	b	1ad7c <sprintf@plt+0x9458>
   1ad6c:	movw	r0, #113	; 0x71
   1ad70:	uxth	r0, r0
   1ad74:	bl	11654 <htons@plt>
   1ad78:	strh	r0, [sp, #46]	; 0x2e
   1ad7c:	b	1ad80 <sprintf@plt+0x945c>
   1ad80:	ldr	r0, [pc, #124]	; 1ae04 <sprintf@plt+0x94e0>
   1ad84:	add	r3, pc, r0
   1ad88:	ldr	r0, [pc, #120]	; 1ae08 <sprintf@plt+0x94e4>
   1ad8c:	add	r0, pc, r0
   1ad90:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ad94:	ldr	r1, [r1]
   1ad98:	add	r2, sp, #44	; 0x2c
   1ad9c:	sub	ip, fp, #148	; 0x94
   1ada0:	ldr	lr, [fp, #-16]
   1ada4:	ldr	r0, [r0]
   1ada8:	str	r0, [sp, #8]
   1adac:	mov	r0, r1
   1adb0:	mov	r1, r2
   1adb4:	mov	r2, ip
   1adb8:	str	lr, [sp]
   1adbc:	ldr	ip, [sp, #8]
   1adc0:	str	ip, [sp, #4]
   1adc4:	bl	1157c <rb_connect_tcp@plt>
   1adc8:	movw	r0, #1
   1adcc:	and	r0, r0, #1
   1add0:	strb	r0, [fp, #-9]
   1add4:	ldrb	r0, [fp, #-9]
   1add8:	and	r0, r0, #1
   1addc:	sub	sp, fp, #8
   1ade0:	pop	{r4, r5, fp, pc}
   1ade4:	andeq	r6, r1, r4, lsl r3
   1ade8:	andeq	r5, r1, r4, lsr #11
   1adec:	andeq	r6, r1, ip, ror #5
   1adf0:	andeq	r4, r0, pc, asr #16
   1adf4:	andeq	r6, r1, ip, asr #4
   1adf8:	andeq	r5, r1, r0, lsr #10
   1adfc:	andeq	r5, r1, r0, asr r5
   1ae00:	muleq	r1, r8, r2
   1ae04:	andeq	r0, r0, r8, asr #7
   1ae08:	andeq	r6, r1, r4, lsl #2
   1ae0c:	andeq	r4, r0, r9, lsl r8
   1ae10:	push	{fp, lr}
   1ae14:	mov	fp, sp
   1ae18:	sub	sp, sp, #8
   1ae1c:	ldr	r1, [pc, #56]	; 1ae5c <sprintf@plt+0x9538>
   1ae20:	ldr	r1, [pc, r1]
   1ae24:	str	r0, [sp, #4]
   1ae28:	ldr	r0, [sp, #4]
   1ae2c:	ldr	r1, [r1, #12]
   1ae30:	bl	1ae60 <sprintf@plt+0x953c>
   1ae34:	str	r0, [sp]
   1ae38:	ldr	r0, [sp]
   1ae3c:	movw	r1, #0
   1ae40:	cmp	r0, r1
   1ae44:	beq	1ae54 <sprintf@plt+0x9530>
   1ae48:	ldr	r0, [sp, #4]
   1ae4c:	movw	r1, #2
   1ae50:	bl	1ae88 <sprintf@plt+0x9564>
   1ae54:	mov	sp, fp
   1ae58:	pop	{fp, pc}
   1ae5c:	andeq	r5, r1, ip, asr #6
   1ae60:	sub	sp, sp, #8
   1ae64:	str	r0, [sp, #4]
   1ae68:	str	r1, [sp]
   1ae6c:	ldr	r0, [sp, #4]
   1ae70:	ldr	r0, [r0, #464]	; 0x1d0
   1ae74:	ldr	r1, [sp]
   1ae78:	add	r0, r0, r1, lsl #4
   1ae7c:	ldr	r0, [r0, #8]
   1ae80:	add	sp, sp, #8
   1ae84:	bx	lr
   1ae88:	push	{fp, lr}
   1ae8c:	mov	fp, sp
   1ae90:	sub	sp, sp, #32
   1ae94:	ldr	r2, [pc, #248]	; 1af94 <sprintf@plt+0x9670>
   1ae98:	ldr	r2, [pc, r2]
   1ae9c:	str	r0, [fp, #-4]
   1aea0:	str	r1, [fp, #-8]
   1aea4:	ldr	r0, [fp, #-4]
   1aea8:	ldr	r1, [r2, #12]
   1aeac:	bl	1ae60 <sprintf@plt+0x953c>
   1aeb0:	ldr	r1, [pc, #216]	; 1af90 <sprintf@plt+0x966c>
   1aeb4:	add	r1, pc, r1
   1aeb8:	str	r0, [fp, #-12]
   1aebc:	ldr	r0, [fp, #-4]
   1aec0:	add	r0, r0, #440	; 0x1b8
   1aec4:	movw	r2, #11
   1aec8:	bl	116a8 <rb_strlcpy@plt>
   1aecc:	ldr	r1, [fp, #-12]
   1aed0:	ldr	r1, [r1]
   1aed4:	movw	r2, #0
   1aed8:	cmp	r1, r2
   1aedc:	str	r0, [sp, #16]
   1aee0:	beq	1aef0 <sprintf@plt+0x95cc>
   1aee4:	ldr	r0, [fp, #-12]
   1aee8:	ldr	r0, [r0]
   1aeec:	bl	11768 <rb_close@plt>
   1aef0:	ldr	r0, [pc, #164]	; 1af9c <sprintf@plt+0x9678>
   1aef4:	add	r0, pc, r0
   1aef8:	ldr	r1, [fp, #-12]
   1aefc:	str	r0, [sp, #12]
   1af00:	mov	r0, r1
   1af04:	bl	1afa8 <sprintf@plt+0x9684>
   1af08:	ldr	r0, [fp, #-4]
   1af0c:	ldr	r1, [pc, #140]	; 1afa0 <sprintf@plt+0x967c>
   1af10:	ldr	r1, [pc, r1]
   1af14:	ldr	lr, [r1, #12]
   1af18:	mov	r2, #0
   1af1c:	str	r1, [sp, #8]
   1af20:	mov	r1, lr
   1af24:	str	r2, [sp, #4]
   1af28:	bl	1aff0 <sprintf@plt+0x96cc>
   1af2c:	ldr	r0, [fp, #-4]
   1af30:	ldr	r1, [sp, #8]
   1af34:	ldr	r1, [r1, #12]
   1af38:	ldr	r2, [sp, #4]
   1af3c:	bl	1b020 <sprintf@plt+0x96fc>
   1af40:	ldr	r0, [fp, #-4]
   1af44:	ldr	r0, [r0]
   1af48:	ldr	r1, [fp, #-8]
   1af4c:	ldr	r2, [pc, #80]	; 1afa4 <sprintf@plt+0x9680>
   1af50:	add	r2, pc, r2
   1af54:	add	r1, r2, r1, lsl #2
   1af58:	ldr	r1, [r1]
   1af5c:	bl	12b74 <sprintf@plt+0x1250>
   1af60:	ldr	r0, [pc, #48]	; 1af98 <sprintf@plt+0x9674>
   1af64:	ldr	r0, [pc, r0]
   1af68:	ldr	r1, [fp, #-4]
   1af6c:	ldr	r0, [r0, #12]
   1af70:	str	r0, [sp]
   1af74:	mov	r0, r1
   1af78:	ldr	r1, [sp]
   1af7c:	bl	13afc <sprintf@plt+0x21d8>
   1af80:	ldr	r0, [fp, #-4]
   1af84:	bl	1b050 <sprintf@plt+0x972c>
   1af88:	mov	sp, fp
   1af8c:	pop	{fp, pc}
   1af90:	andeq	r3, r0, r8, lsr ip
   1af94:	ldrdeq	r5, [r1], -r4
   1af98:	andeq	r5, r1, r8, lsl #4
   1af9c:	andeq	r5, r1, r4, lsr #31
   1afa0:	andeq	r5, r1, ip, asr r2
   1afa4:	andeq	r5, r1, r8, asr #30
   1afa8:	push	{fp, lr}
   1afac:	mov	fp, sp
   1afb0:	sub	sp, sp, #8
   1afb4:	str	r0, [sp, #4]
   1afb8:	ldr	r0, [sp, #4]
   1afbc:	movw	r1, #0
   1afc0:	cmp	r0, r1
   1afc4:	movw	r0, #0
   1afc8:	movne	r0, #1
   1afcc:	mvn	r1, #0
   1afd0:	eor	r0, r0, r1
   1afd4:	eor	r0, r0, r1
   1afd8:	tst	r0, #1
   1afdc:	beq	1afe8 <sprintf@plt+0x96c4>
   1afe0:	ldr	r0, [sp, #4]
   1afe4:	bl	116cc <free@plt>
   1afe8:	mov	sp, fp
   1afec:	pop	{fp, pc}
   1aff0:	sub	sp, sp, #12
   1aff4:	str	r0, [sp, #8]
   1aff8:	str	r1, [sp, #4]
   1affc:	str	r2, [sp]
   1b000:	ldr	r0, [sp]
   1b004:	ldr	r1, [sp, #8]
   1b008:	ldr	r1, [r1, #464]	; 0x1d0
   1b00c:	ldr	r2, [sp, #4]
   1b010:	add	r1, r1, r2, lsl #4
   1b014:	str	r0, [r1, #8]
   1b018:	add	sp, sp, #12
   1b01c:	bx	lr
   1b020:	sub	sp, sp, #12
   1b024:	str	r0, [sp, #8]
   1b028:	str	r1, [sp, #4]
   1b02c:	str	r2, [sp]
   1b030:	ldr	r0, [sp]
   1b034:	ldr	r1, [sp, #8]
   1b038:	ldr	r1, [r1, #464]	; 0x1d0
   1b03c:	ldr	r2, [sp, #4]
   1b040:	add	r1, r1, r2, lsl #4
   1b044:	str	r0, [r1, #4]
   1b048:	add	sp, sp, #12
   1b04c:	bx	lr
   1b050:	push	{fp, lr}
   1b054:	mov	fp, sp
   1b058:	sub	sp, sp, #8
   1b05c:	str	r0, [sp, #4]
   1b060:	ldr	r0, [sp, #4]
   1b064:	ldr	r1, [r0, #460]	; 0x1cc
   1b068:	mvn	r2, #0
   1b06c:	add	r1, r1, r2
   1b070:	str	r1, [r0, #460]	; 0x1cc
   1b074:	ldr	r0, [sp, #4]
   1b078:	ldr	r0, [r0, #460]	; 0x1cc
   1b07c:	cmp	r0, #0
   1b080:	bne	1b08c <sprintf@plt+0x9768>
   1b084:	ldr	r0, [sp, #4]
   1b088:	bl	13954 <sprintf@plt+0x2030>
   1b08c:	mov	sp, fp
   1b090:	pop	{fp, pc}
   1b094:	push	{fp, lr}
   1b098:	mov	fp, sp
   1b09c:	sub	sp, sp, #8
   1b0a0:	str	r0, [sp, #4]
   1b0a4:	ldr	r1, [sp, #4]
   1b0a8:	movw	r0, #1
   1b0ac:	bl	11630 <calloc@plt>
   1b0b0:	str	r0, [sp]
   1b0b4:	ldr	r0, [sp]
   1b0b8:	movw	r1, #0
   1b0bc:	cmp	r0, r1
   1b0c0:	movw	r0, #0
   1b0c4:	moveq	r0, #1
   1b0c8:	mvn	r1, #0
   1b0cc:	eor	r0, r0, r1
   1b0d0:	eor	r0, r0, r1
   1b0d4:	tst	r0, #1
   1b0d8:	beq	1b0e0 <sprintf@plt+0x97bc>
   1b0dc:	bl	117ec <rb_outofmemory@plt>
   1b0e0:	ldr	r0, [sp]
   1b0e4:	mov	sp, fp
   1b0e8:	pop	{fp, pc}
   1b0ec:	sub	sp, sp, #4
   1b0f0:	str	r0, [sp]
   1b0f4:	ldr	r0, [sp]
   1b0f8:	ldr	r1, [r0, #460]	; 0x1cc
   1b0fc:	add	r1, r1, #1
   1b100:	str	r1, [r0, #460]	; 0x1cc
   1b104:	add	sp, sp, #4
   1b108:	bx	lr
   1b10c:	push	{fp, lr}
   1b110:	mov	fp, sp
   1b114:	sub	sp, sp, #16
   1b118:	str	r0, [fp, #-4]
   1b11c:	str	r1, [sp, #8]
   1b120:	str	r2, [sp, #4]
   1b124:	ldr	r0, [sp, #4]
   1b128:	str	r0, [sp]
   1b12c:	bl	11738 <rb_current_time@plt>
   1b130:	ldr	r1, [sp]
   1b134:	add	r0, r1, r0
   1b138:	ldr	r1, [fp, #-4]
   1b13c:	ldr	r1, [r1, #464]	; 0x1d0
   1b140:	ldr	r2, [sp, #8]
   1b144:	add	r1, r1, r2, lsl #4
   1b148:	str	r0, [r1, #4]
   1b14c:	mov	sp, fp
   1b150:	pop	{fp, pc}
   1b154:	push	{fp, lr}
   1b158:	mov	fp, sp
   1b15c:	sub	sp, sp, #72	; 0x48
   1b160:	ldr	r3, [pc, #212]	; 1b23c <sprintf@plt+0x9918>
   1b164:	ldr	r3, [pc, r3]
   1b168:	str	r0, [fp, #-4]
   1b16c:	str	r1, [fp, #-8]
   1b170:	str	r2, [fp, #-12]
   1b174:	ldr	r0, [fp, #-12]
   1b178:	str	r0, [fp, #-16]
   1b17c:	ldr	r0, [fp, #-16]
   1b180:	ldr	r1, [r3, #12]
   1b184:	bl	1ae60 <sprintf@plt+0x953c>
   1b188:	str	r0, [fp, #-20]	; 0xffffffec
   1b18c:	ldr	r0, [fp, #-8]
   1b190:	cmp	r0, #0
   1b194:	beq	1b1a8 <sprintf@plt+0x9884>
   1b198:	ldr	r0, [fp, #-16]
   1b19c:	movw	r1, #2
   1b1a0:	bl	1ae88 <sprintf@plt+0x9564>
   1b1a4:	b	1b234 <sprintf@plt+0x9910>
   1b1a8:	ldr	r0, [pc, #144]	; 1b240 <sprintf@plt+0x991c>
   1b1ac:	add	r2, pc, r0
   1b1b0:	add	r0, sp, #20
   1b1b4:	ldr	r1, [fp, #-16]
   1b1b8:	ldrh	r3, [r1, #246]	; 0xf6
   1b1bc:	ldr	r1, [fp, #-16]
   1b1c0:	ldrh	r1, [r1, #62]	; 0x3e
   1b1c4:	movw	ip, #32
   1b1c8:	str	r1, [sp, #12]
   1b1cc:	mov	r1, ip
   1b1d0:	ldr	ip, [sp, #12]
   1b1d4:	str	ip, [sp]
   1b1d8:	bl	118b8 <snprintf@plt>
   1b1dc:	add	r1, sp, #20
   1b1e0:	str	r0, [sp, #8]
   1b1e4:	mov	r0, r1
   1b1e8:	str	r1, [sp, #4]
   1b1ec:	bl	1172c <strlen@plt>
   1b1f0:	str	r0, [sp, #16]
   1b1f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b1f8:	ldr	r0, [r0]
   1b1fc:	ldr	r2, [sp, #16]
   1b200:	ldr	r1, [sp, #4]
   1b204:	bl	11690 <rb_write@plt>
   1b208:	ldr	r1, [sp, #16]
   1b20c:	cmp	r0, r1
   1b210:	beq	1b224 <sprintf@plt+0x9900>
   1b214:	ldr	r0, [fp, #-16]
   1b218:	movw	r1, #2
   1b21c:	bl	1ae88 <sprintf@plt+0x9564>
   1b220:	b	1b234 <sprintf@plt+0x9910>
   1b224:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b228:	ldr	r0, [r0]
   1b22c:	ldr	r1, [fp, #-16]
   1b230:	bl	1b244 <sprintf@plt+0x9920>
   1b234:	mov	sp, fp
   1b238:	pop	{fp, pc}
   1b23c:	andeq	r5, r1, r8
   1b240:	andeq	r4, r0, fp, lsr r3
   1b244:	push	{fp, lr}
   1b248:	mov	fp, sp
   1b24c:	sub	sp, sp, #184	; 0xb8
   1b250:	add	r2, sp, #43	; 0x2b
   1b254:	str	r0, [fp, #-4]
   1b258:	str	r1, [fp, #-8]
   1b25c:	ldr	r0, [fp, #-8]
   1b260:	str	r0, [fp, #-12]
   1b264:	mov	r0, r2
   1b268:	movw	r1, #0
   1b26c:	and	r1, r1, #255	; 0xff
   1b270:	movw	r3, #129	; 0x81
   1b274:	str	r2, [sp, #16]
   1b278:	mov	r2, r3
   1b27c:	bl	1166c <memset@plt>
   1b280:	movw	r0, #2
   1b284:	str	r0, [sp, #36]	; 0x24
   1b288:	movw	r0, #0
   1b28c:	str	r0, [sp, #32]
   1b290:	str	r0, [sp, #28]
   1b294:	ldr	r0, [fp, #-4]
   1b298:	ldr	r1, [sp, #16]
   1b29c:	movw	r2, #128	; 0x80
   1b2a0:	bl	116e4 <rb_read@plt>
   1b2a4:	str	r0, [sp, #24]
   1b2a8:	ldr	r0, [sp, #24]
   1b2ac:	cmp	r0, #0
   1b2b0:	bge	1b2f0 <sprintf@plt+0x99cc>
   1b2b4:	bl	11918 <__errno_location@plt>
   1b2b8:	ldr	r0, [r0]
   1b2bc:	bl	11564 <rb_ignore_errno@plt>
   1b2c0:	cmp	r0, #0
   1b2c4:	beq	1b2f0 <sprintf@plt+0x99cc>
   1b2c8:	ldr	r0, [pc, #456]	; 1b498 <sprintf@plt+0x9b74>
   1b2cc:	add	r2, pc, r0
   1b2d0:	ldr	r0, [fp, #-4]
   1b2d4:	ldr	r1, [fp, #-12]
   1b2d8:	movw	r3, #1
   1b2dc:	str	r1, [sp, #12]
   1b2e0:	mov	r1, r3
   1b2e4:	ldr	r3, [sp, #12]
   1b2e8:	bl	115ac <rb_setselect@plt>
   1b2ec:	b	1b490 <sprintf@plt+0x9b6c>
   1b2f0:	ldr	r0, [sp, #24]
   1b2f4:	cmp	r0, #0
   1b2f8:	ble	1b468 <sprintf@plt+0x9b44>
   1b2fc:	add	r0, sp, #43	; 0x2b
   1b300:	bl	1b49c <sprintf@plt+0x9b78>
   1b304:	str	r0, [sp, #32]
   1b308:	movw	lr, #0
   1b30c:	cmp	r0, lr
   1b310:	beq	1b45c <sprintf@plt+0x9b38>
   1b314:	ldr	r0, [fp, #-12]
   1b318:	add	r0, r0, #440	; 0x1b8
   1b31c:	str	r0, [sp, #28]
   1b320:	ldr	r0, [sp, #32]
   1b324:	ldrb	r0, [r0]
   1b328:	cmp	r0, #126	; 0x7e
   1b32c:	movw	r0, #1
   1b330:	str	r0, [sp, #8]
   1b334:	beq	1b350 <sprintf@plt+0x9a2c>
   1b338:	ldr	r0, [sp, #32]
   1b33c:	ldrb	r0, [r0]
   1b340:	cmp	r0, #94	; 0x5e
   1b344:	movw	r0, #0
   1b348:	moveq	r0, #1
   1b34c:	str	r0, [sp, #8]
   1b350:	ldr	r0, [sp, #8]
   1b354:	tst	r0, #1
   1b358:	beq	1b36c <sprintf@plt+0x9a48>
   1b35c:	ldr	r0, [sp, #32]
   1b360:	add	r0, r0, #1
   1b364:	str	r0, [sp, #32]
   1b368:	b	1b320 <sprintf@plt+0x99fc>
   1b36c:	movw	r0, #10
   1b370:	str	r0, [sp, #20]
   1b374:	ldr	r0, [sp, #32]
   1b378:	ldrb	r0, [r0]
   1b37c:	cmp	r0, #0
   1b380:	movw	r0, #0
   1b384:	str	r0, [sp, #4]
   1b388:	beq	1b3a0 <sprintf@plt+0x9a7c>
   1b38c:	ldr	r0, [sp, #20]
   1b390:	cmp	r0, #0
   1b394:	movw	r0, #0
   1b398:	movne	r0, #1
   1b39c:	str	r0, [sp, #4]
   1b3a0:	ldr	r0, [sp, #4]
   1b3a4:	tst	r0, #1
   1b3a8:	beq	1b44c <sprintf@plt+0x9b28>
   1b3ac:	ldr	r0, [sp, #32]
   1b3b0:	ldrb	r0, [r0]
   1b3b4:	cmp	r0, #64	; 0x40
   1b3b8:	beq	1b3dc <sprintf@plt+0x9ab8>
   1b3bc:	ldr	r0, [sp, #32]
   1b3c0:	ldrb	r0, [r0]
   1b3c4:	cmp	r0, #13
   1b3c8:	beq	1b3dc <sprintf@plt+0x9ab8>
   1b3cc:	ldr	r0, [sp, #32]
   1b3d0:	ldrb	r0, [r0]
   1b3d4:	cmp	r0, #10
   1b3d8:	bne	1b3e0 <sprintf@plt+0x9abc>
   1b3dc:	b	1b44c <sprintf@plt+0x9b28>
   1b3e0:	ldr	r0, [sp, #32]
   1b3e4:	ldrb	r0, [r0]
   1b3e8:	cmp	r0, #32
   1b3ec:	beq	1b438 <sprintf@plt+0x9b14>
   1b3f0:	ldr	r0, [sp, #32]
   1b3f4:	ldrb	r0, [r0]
   1b3f8:	cmp	r0, #58	; 0x3a
   1b3fc:	beq	1b438 <sprintf@plt+0x9b14>
   1b400:	ldr	r0, [sp, #32]
   1b404:	ldrb	r0, [r0]
   1b408:	cmp	r0, #91	; 0x5b
   1b40c:	beq	1b438 <sprintf@plt+0x9b14>
   1b410:	ldr	r0, [sp, #32]
   1b414:	ldrb	r0, [r0]
   1b418:	ldr	r1, [sp, #28]
   1b41c:	add	r2, r1, #1
   1b420:	str	r2, [sp, #28]
   1b424:	strb	r0, [r1]
   1b428:	ldr	r0, [sp, #20]
   1b42c:	mvn	r1, #0
   1b430:	add	r0, r0, r1
   1b434:	str	r0, [sp, #20]
   1b438:	b	1b43c <sprintf@plt+0x9b18>
   1b43c:	ldr	r0, [sp, #32]
   1b440:	add	r0, r0, #1
   1b444:	str	r0, [sp, #32]
   1b448:	b	1b374 <sprintf@plt+0x9a50>
   1b44c:	ldr	r0, [sp, #28]
   1b450:	movw	r1, #0
   1b454:	strb	r1, [r0]
   1b458:	b	1b464 <sprintf@plt+0x9b40>
   1b45c:	movw	r0, #3
   1b460:	str	r0, [sp, #36]	; 0x24
   1b464:	b	1b468 <sprintf@plt+0x9b44>
   1b468:	ldr	r0, [sp, #32]
   1b46c:	movw	r1, #0
   1b470:	cmp	r0, r1
   1b474:	bne	1b488 <sprintf@plt+0x9b64>
   1b478:	ldr	r0, [fp, #-12]
   1b47c:	ldr	r1, [sp, #36]	; 0x24
   1b480:	bl	1ae88 <sprintf@plt+0x9564>
   1b484:	b	1b490 <sprintf@plt+0x9b6c>
   1b488:	ldr	r0, [fp, #-12]
   1b48c:	bl	1b658 <sprintf@plt+0x9d34>
   1b490:	mov	sp, fp
   1b494:	pop	{fp, pc}
   1b498:			; <UNDEFINED> instruction: 0xffffff70
   1b49c:	push	{fp, lr}
   1b4a0:	mov	fp, sp
   1b4a4:	sub	sp, sp, #40	; 0x28
   1b4a8:	str	r0, [fp, #-8]
   1b4ac:	movw	r0, #0
   1b4b0:	str	r0, [fp, #-12]
   1b4b4:	str	r0, [fp, #-16]
   1b4b8:	ldr	r0, [fp, #-8]
   1b4bc:	str	r0, [sp, #4]
   1b4c0:	ldr	r0, [sp, #4]
   1b4c4:	movw	r1, #58	; 0x3a
   1b4c8:	bl	1160c <strchr@plt>
   1b4cc:	str	r0, [sp, #20]
   1b4d0:	ldr	r0, [sp, #20]
   1b4d4:	movw	r1, #0
   1b4d8:	cmp	r0, r1
   1b4dc:	bne	1b4ec <sprintf@plt+0x9bc8>
   1b4e0:	movw	r0, #0
   1b4e4:	str	r0, [fp, #-4]
   1b4e8:	b	1b648 <sprintf@plt+0x9d24>
   1b4ec:	ldr	r0, [sp, #20]
   1b4f0:	movw	r1, #0
   1b4f4:	strb	r1, [r0]
   1b4f8:	ldr	r0, [sp, #20]
   1b4fc:	add	r0, r0, #1
   1b500:	str	r0, [sp, #20]
   1b504:	ldr	r0, [sp, #20]
   1b508:	movw	r1, #58	; 0x3a
   1b50c:	bl	1160c <strchr@plt>
   1b510:	str	r0, [sp, #16]
   1b514:	ldr	r0, [sp, #16]
   1b518:	movw	r1, #0
   1b51c:	cmp	r0, r1
   1b520:	bne	1b530 <sprintf@plt+0x9c0c>
   1b524:	movw	r0, #0
   1b528:	str	r0, [fp, #-4]
   1b52c:	b	1b648 <sprintf@plt+0x9d24>
   1b530:	ldr	r0, [sp, #16]
   1b534:	movw	r1, #0
   1b538:	strb	r1, [r0]
   1b53c:	ldr	r0, [sp, #16]
   1b540:	add	r0, r0, #1
   1b544:	str	r0, [sp, #16]
   1b548:	ldr	r0, [sp, #4]
   1b54c:	movw	r1, #44	; 0x2c
   1b550:	bl	1160c <strchr@plt>
   1b554:	str	r0, [sp, #8]
   1b558:	ldr	r0, [sp, #8]
   1b55c:	movw	r1, #0
   1b560:	cmp	r0, r1
   1b564:	bne	1b574 <sprintf@plt+0x9c50>
   1b568:	movw	r0, #0
   1b56c:	str	r0, [fp, #-4]
   1b570:	b	1b648 <sprintf@plt+0x9d24>
   1b574:	ldr	r0, [sp, #8]
   1b578:	movw	r1, #0
   1b57c:	strb	r1, [r0]
   1b580:	ldr	r0, [sp, #8]
   1b584:	add	r0, r0, #1
   1b588:	str	r0, [sp, #8]
   1b58c:	ldr	r0, [sp, #4]
   1b590:	bl	11798 <atoi@plt>
   1b594:	str	r0, [fp, #-12]
   1b598:	ldr	r0, [fp, #-12]
   1b59c:	cmp	r0, #0
   1b5a0:	bne	1b5b0 <sprintf@plt+0x9c8c>
   1b5a4:	movw	r0, #0
   1b5a8:	str	r0, [fp, #-4]
   1b5ac:	b	1b648 <sprintf@plt+0x9d24>
   1b5b0:	ldr	r0, [sp, #8]
   1b5b4:	bl	11798 <atoi@plt>
   1b5b8:	str	r0, [fp, #-16]
   1b5bc:	ldr	r0, [fp, #-16]
   1b5c0:	cmp	r0, #0
   1b5c4:	bne	1b5d4 <sprintf@plt+0x9cb0>
   1b5c8:	movw	r0, #0
   1b5cc:	str	r0, [fp, #-4]
   1b5d0:	b	1b648 <sprintf@plt+0x9d24>
   1b5d4:	ldr	r0, [pc, #120]	; 1b654 <sprintf@plt+0x9d30>
   1b5d8:	add	r1, pc, r0
   1b5dc:	ldr	r0, [sp, #20]
   1b5e0:	bl	117c8 <strstr@plt>
   1b5e4:	movw	r1, #0
   1b5e8:	cmp	r0, r1
   1b5ec:	bne	1b5fc <sprintf@plt+0x9cd8>
   1b5f0:	movw	r0, #0
   1b5f4:	str	r0, [fp, #-4]
   1b5f8:	b	1b648 <sprintf@plt+0x9d24>
   1b5fc:	ldr	r0, [sp, #16]
   1b600:	movw	r1, #58	; 0x3a
   1b604:	bl	1160c <strchr@plt>
   1b608:	str	r0, [sp, #12]
   1b60c:	ldr	r0, [sp, #12]
   1b610:	movw	r1, #0
   1b614:	cmp	r0, r1
   1b618:	bne	1b628 <sprintf@plt+0x9d04>
   1b61c:	movw	r0, #0
   1b620:	str	r0, [fp, #-4]
   1b624:	b	1b648 <sprintf@plt+0x9d24>
   1b628:	ldr	r0, [sp, #12]
   1b62c:	movw	r1, #0
   1b630:	strb	r1, [r0]
   1b634:	ldr	r0, [sp, #12]
   1b638:	add	r0, r0, #1
   1b63c:	str	r0, [sp, #12]
   1b640:	ldr	r0, [sp, #12]
   1b644:	str	r0, [fp, #-4]
   1b648:	ldr	r0, [fp, #-4]
   1b64c:	mov	sp, fp
   1b650:	pop	{fp, pc}
   1b654:	andeq	r3, r0, r9, lsl pc
   1b658:	push	{fp, lr}
   1b65c:	mov	fp, sp
   1b660:	sub	sp, sp, #24
   1b664:	ldr	r1, [pc, #208]	; 1b73c <sprintf@plt+0x9e18>
   1b668:	ldr	r1, [pc, r1]
   1b66c:	str	r0, [fp, #-4]
   1b670:	ldr	r0, [fp, #-4]
   1b674:	ldr	r1, [r1, #12]
   1b678:	bl	1ae60 <sprintf@plt+0x953c>
   1b67c:	str	r0, [fp, #-8]
   1b680:	ldr	r0, [fp, #-8]
   1b684:	ldr	r0, [r0]
   1b688:	movw	r1, #0
   1b68c:	cmp	r0, r1
   1b690:	beq	1b6a0 <sprintf@plt+0x9d7c>
   1b694:	ldr	r0, [fp, #-8]
   1b698:	ldr	r0, [r0]
   1b69c:	bl	11768 <rb_close@plt>
   1b6a0:	ldr	r0, [fp, #-8]
   1b6a4:	bl	1afa8 <sprintf@plt+0x9684>
   1b6a8:	ldr	r0, [pc, #156]	; 1b74c <sprintf@plt+0x9e28>
   1b6ac:	ldr	r0, [pc, r0]
   1b6b0:	ldr	lr, [fp, #-4]
   1b6b4:	ldr	r1, [r0, #12]
   1b6b8:	mov	r0, lr
   1b6bc:	movw	r2, #0
   1b6c0:	bl	1aff0 <sprintf@plt+0x96cc>
   1b6c4:	ldr	r0, [pc, #124]	; 1b748 <sprintf@plt+0x9e24>
   1b6c8:	ldr	r0, [pc, r0]
   1b6cc:	ldr	r1, [fp, #-4]
   1b6d0:	ldr	r0, [r0, #12]
   1b6d4:	str	r0, [sp, #12]
   1b6d8:	mov	r0, r1
   1b6dc:	ldr	r1, [sp, #12]
   1b6e0:	movw	r2, #0
   1b6e4:	bl	1b020 <sprintf@plt+0x96fc>
   1b6e8:	ldr	r0, [pc, #84]	; 1b744 <sprintf@plt+0x9e20>
   1b6ec:	add	r0, pc, r0
   1b6f0:	ldr	r1, [fp, #-4]
   1b6f4:	ldr	r1, [r1]
   1b6f8:	ldr	r0, [r0, #4]
   1b6fc:	str	r0, [sp, #8]
   1b700:	mov	r0, r1
   1b704:	ldr	r1, [sp, #8]
   1b708:	bl	12b74 <sprintf@plt+0x1250>
   1b70c:	ldr	r0, [pc, #44]	; 1b740 <sprintf@plt+0x9e1c>
   1b710:	ldr	r0, [pc, r0]
   1b714:	ldr	r1, [fp, #-4]
   1b718:	ldr	r0, [r0, #12]
   1b71c:	str	r0, [sp, #4]
   1b720:	mov	r0, r1
   1b724:	ldr	r1, [sp, #4]
   1b728:	bl	13afc <sprintf@plt+0x21d8>
   1b72c:	ldr	r0, [fp, #-4]
   1b730:	bl	1b050 <sprintf@plt+0x972c>
   1b734:	mov	sp, fp
   1b738:	pop	{fp, pc}
   1b73c:	andeq	r4, r1, r4, lsl #22
   1b740:	andeq	r4, r1, ip, asr sl
   1b744:	andeq	r5, r1, ip, lsr #15
   1b748:	andeq	r4, r1, r4, lsr #21
   1b74c:	andeq	r4, r1, r0, asr #21
   1b750:	push	{fp, lr}
   1b754:	mov	fp, sp
   1b758:	sub	sp, sp, #16
   1b75c:	str	r0, [fp, #-4]
   1b760:	str	r1, [sp, #8]
   1b764:	str	r2, [sp, #4]
   1b768:	ldr	r0, [sp, #4]
   1b76c:	ldr	r0, [r0]
   1b770:	bl	11798 <atoi@plt>
   1b774:	str	r0, [sp]
   1b778:	ldr	r0, [sp]
   1b77c:	cmp	r0, #0
   1b780:	bge	1b7a0 <sprintf@plt+0x9e7c>
   1b784:	ldr	r0, [pc, #48]	; 1b7bc <sprintf@plt+0x9e98>
   1b788:	add	r1, pc, r0
   1b78c:	ldr	r2, [sp]
   1b790:	movw	r0, #67	; 0x43
   1b794:	bl	12bfc <sprintf@plt+0x12d8>
   1b798:	movw	r0, #3
   1b79c:	bl	1190c <exit@plt>
   1b7a0:	ldr	r0, [pc, #16]	; 1b7b8 <sprintf@plt+0x9e94>
   1b7a4:	add	r0, pc, r0
   1b7a8:	ldr	r1, [sp]
   1b7ac:	str	r1, [r0]
   1b7b0:	mov	sp, fp
   1b7b4:	pop	{fp, pc}
   1b7b8:	andeq	r5, r1, ip, asr r7
   1b7bc:	andeq	r3, r0, sp, ror sp
   1b7c0:	push	{fp, lr}
   1b7c4:	mov	fp, sp
   1b7c8:	sub	sp, sp, #16
   1b7cc:	ldr	r0, [pc, #140]	; 1b860 <sprintf@plt+0x9f3c>
   1b7d0:	ldr	r0, [pc, r0]
   1b7d4:	ldr	r0, [r0]
   1b7d8:	add	r1, sp, #4
   1b7dc:	bl	11708 <rb_dictionary_foreach_start@plt>
   1b7e0:	ldr	r0, [pc, #124]	; 1b864 <sprintf@plt+0x9f40>
   1b7e4:	ldr	r0, [pc, r0]
   1b7e8:	ldr	r0, [r0]
   1b7ec:	add	r1, sp, #4
   1b7f0:	bl	11618 <rb_dictionary_foreach_cur@plt>
   1b7f4:	str	r0, [fp, #-4]
   1b7f8:	movw	r1, #0
   1b7fc:	cmp	r0, r1
   1b800:	beq	1b858 <sprintf@plt+0x9f34>
   1b804:	ldr	r0, [pc, #92]	; 1b868 <sprintf@plt+0x9f44>
   1b808:	ldr	r0, [pc, r0]
   1b80c:	ldr	r1, [fp, #-4]
   1b810:	ldr	r0, [r0, #12]
   1b814:	str	r0, [sp]
   1b818:	mov	r0, r1
   1b81c:	ldr	r1, [sp]
   1b820:	bl	1b990 <sprintf@plt+0xa06c>
   1b824:	movw	r1, #0
   1b828:	cmp	r0, r1
   1b82c:	beq	1b83c <sprintf@plt+0x9f18>
   1b830:	ldr	r0, [fp, #-4]
   1b834:	movw	r1, #1
   1b838:	bl	1b9b8 <sprintf@plt+0xa094>
   1b83c:	b	1b840 <sprintf@plt+0x9f1c>
   1b840:	ldr	r0, [pc, #36]	; 1b86c <sprintf@plt+0x9f48>
   1b844:	ldr	r0, [pc, r0]
   1b848:	ldr	r0, [r0]
   1b84c:	add	r1, sp, #4
   1b850:	bl	116c0 <rb_dictionary_foreach_next@plt>
   1b854:	b	1b7e0 <sprintf@plt+0x9ebc>
   1b858:	mov	sp, fp
   1b85c:	pop	{fp, pc}
   1b860:	muleq	r1, r0, r9
   1b864:	andeq	r4, r1, ip, ror r9
   1b868:	andeq	r4, r1, r8, ror #18
   1b86c:	andeq	r4, r1, ip, lsl r9
   1b870:	push	{fp, lr}
   1b874:	mov	fp, sp
   1b878:	sub	sp, sp, #16
   1b87c:	str	r0, [fp, #-4]
   1b880:	movw	r0, #4
   1b884:	bl	1bbc8 <sprintf@plt+0xa2a4>
   1b888:	str	r0, [sp, #8]
   1b88c:	ldr	r0, [fp, #-4]
   1b890:	bl	1bc20 <sprintf@plt+0xa2fc>
   1b894:	ldr	r0, [pc, #160]	; 1b93c <sprintf@plt+0xa018>
   1b898:	ldr	r0, [pc, r0]
   1b89c:	ldr	lr, [fp, #-4]
   1b8a0:	ldr	r1, [r0, #12]
   1b8a4:	ldr	r0, [sp, #8]
   1b8a8:	str	r0, [sp, #4]
   1b8ac:	mov	r0, lr
   1b8b0:	ldr	r2, [sp, #4]
   1b8b4:	bl	1bb24 <sprintf@plt+0xa200>
   1b8b8:	ldr	r0, [pc, #116]	; 1b934 <sprintf@plt+0xa010>
   1b8bc:	add	r0, pc, r0
   1b8c0:	ldr	r1, [pc, #112]	; 1b938 <sprintf@plt+0xa014>
   1b8c4:	ldr	r1, [pc, r1]
   1b8c8:	ldr	r2, [fp, #-4]
   1b8cc:	ldr	r1, [r1, #12]
   1b8d0:	ldr	r0, [r0]
   1b8d4:	str	r0, [sp]
   1b8d8:	mov	r0, r2
   1b8dc:	ldr	r2, [sp]
   1b8e0:	bl	1bc40 <sprintf@plt+0xa31c>
   1b8e4:	ldr	r0, [pc, #68]	; 1b930 <sprintf@plt+0xa00c>
   1b8e8:	add	r1, pc, r0
   1b8ec:	ldr	r0, [fp, #-4]
   1b8f0:	add	r0, r0, #192	; 0xc0
   1b8f4:	ldr	r2, [fp, #-4]
   1b8f8:	bl	123f0 <sprintf@plt+0xacc>
   1b8fc:	ldr	r1, [pc, #40]	; 1b92c <sprintf@plt+0xa008>
   1b900:	add	r1, pc, r1
   1b904:	ldr	r2, [sp, #8]
   1b908:	str	r0, [r2]
   1b90c:	ldr	r0, [fp, #-4]
   1b910:	ldr	r0, [r0]
   1b914:	ldr	r1, [r1]
   1b918:	bl	12b74 <sprintf@plt+0x1250>
   1b91c:	movw	r0, #1
   1b920:	and	r0, r0, #1
   1b924:	mov	sp, fp
   1b928:	pop	{fp, pc}
   1b92c:	andeq	r5, r1, r4, lsl #12
   1b930:	muleq	r0, r8, r3
   1b934:	andeq	r5, r1, r4, asr #12
   1b938:	andeq	r4, r1, ip, lsr #17
   1b93c:	ldrdeq	r4, [r1], -r8
   1b940:	push	{fp, lr}
   1b944:	mov	fp, sp
   1b948:	sub	sp, sp, #8
   1b94c:	ldr	r1, [pc, #56]	; 1b98c <sprintf@plt+0xa068>
   1b950:	ldr	r1, [pc, r1]
   1b954:	str	r0, [sp, #4]
   1b958:	ldr	r0, [sp, #4]
   1b95c:	ldr	r1, [r1, #12]
   1b960:	bl	1b990 <sprintf@plt+0xa06c>
   1b964:	str	r0, [sp]
   1b968:	ldr	r0, [sp]
   1b96c:	movw	r1, #0
   1b970:	cmp	r0, r1
   1b974:	beq	1b984 <sprintf@plt+0xa060>
   1b978:	ldr	r0, [sp, #4]
   1b97c:	movw	r1, #1
   1b980:	bl	1b9b8 <sprintf@plt+0xa094>
   1b984:	mov	sp, fp
   1b988:	pop	{fp, pc}
   1b98c:	andeq	r4, r1, r0, lsr #16
   1b990:	sub	sp, sp, #8
   1b994:	str	r0, [sp, #4]
   1b998:	str	r1, [sp]
   1b99c:	ldr	r0, [sp, #4]
   1b9a0:	ldr	r0, [r0, #464]	; 0x1d0
   1b9a4:	ldr	r1, [sp]
   1b9a8:	add	r0, r0, r1, lsl #4
   1b9ac:	ldr	r0, [r0, #8]
   1b9b0:	add	sp, sp, #8
   1b9b4:	bx	lr
   1b9b8:	push	{fp, lr}
   1b9bc:	mov	fp, sp
   1b9c0:	sub	sp, sp, #32
   1b9c4:	ldr	r2, [pc, #256]	; 1bacc <sprintf@plt+0xa1a8>
   1b9c8:	add	r2, pc, r2
   1b9cc:	str	r0, [fp, #-4]
   1b9d0:	str	r1, [fp, #-8]
   1b9d4:	ldr	r0, [fp, #-4]
   1b9d8:	ldr	r1, [pc, #240]	; 1bad0 <sprintf@plt+0xa1ac>
   1b9dc:	ldr	r1, [pc, r1]
   1b9e0:	ldr	r1, [r1, #12]
   1b9e4:	str	r2, [sp, #16]
   1b9e8:	bl	1b990 <sprintf@plt+0xa06c>
   1b9ec:	str	r0, [fp, #-12]
   1b9f0:	ldr	r0, [fp, #-4]
   1b9f4:	add	r0, r0, #376	; 0x178
   1b9f8:	ldr	r1, [pc, #212]	; 1bad4 <sprintf@plt+0xa1b0>
   1b9fc:	add	r1, pc, r1
   1ba00:	mov	r2, #64	; 0x40
   1ba04:	bl	116a8 <rb_strlcpy@plt>
   1ba08:	ldr	r1, [fp, #-4]
   1ba0c:	ldr	r1, [r1]
   1ba10:	ldr	r2, [fp, #-8]
   1ba14:	ldr	lr, [pc, #188]	; 1bad8 <sprintf@plt+0xa1b4>
   1ba18:	add	lr, pc, lr
   1ba1c:	add	r2, lr, r2, lsl #2
   1ba20:	ldr	r2, [r2]
   1ba24:	str	r0, [sp, #12]
   1ba28:	mov	r0, r1
   1ba2c:	mov	r1, r2
   1ba30:	bl	12b74 <sprintf@plt+0x1250>
   1ba34:	ldr	r0, [fp, #-12]
   1ba38:	ldr	r0, [r0]
   1ba3c:	bl	126cc <sprintf@plt+0xda8>
   1ba40:	ldr	r0, [fp, #-12]
   1ba44:	bl	1badc <sprintf@plt+0xa1b8>
   1ba48:	ldr	r0, [pc, #120]	; 1bac8 <sprintf@plt+0xa1a4>
   1ba4c:	ldr	r0, [pc, r0]
   1ba50:	ldr	r1, [fp, #-4]
   1ba54:	ldr	r0, [r0, #12]
   1ba58:	str	r0, [sp, #8]
   1ba5c:	mov	r0, r1
   1ba60:	ldr	r1, [sp, #8]
   1ba64:	movw	r2, #0
   1ba68:	bl	1bb24 <sprintf@plt+0xa200>
   1ba6c:	ldr	r0, [pc, #80]	; 1bac4 <sprintf@plt+0xa1a0>
   1ba70:	ldr	r0, [pc, r0]
   1ba74:	ldr	r1, [fp, #-4]
   1ba78:	ldr	r0, [r0, #12]
   1ba7c:	str	r0, [sp, #4]
   1ba80:	mov	r0, r1
   1ba84:	ldr	r1, [sp, #4]
   1ba88:	movw	r2, #0
   1ba8c:	bl	1bb54 <sprintf@plt+0xa230>
   1ba90:	ldr	r0, [pc, #40]	; 1bac0 <sprintf@plt+0xa19c>
   1ba94:	ldr	r0, [pc, r0]
   1ba98:	ldr	r1, [fp, #-4]
   1ba9c:	ldr	r0, [r0, #12]
   1baa0:	str	r0, [sp]
   1baa4:	mov	r0, r1
   1baa8:	ldr	r1, [sp]
   1baac:	bl	13afc <sprintf@plt+0x21d8>
   1bab0:	ldr	r0, [fp, #-4]
   1bab4:	bl	1bb84 <sprintf@plt+0xa260>
   1bab8:	mov	sp, fp
   1babc:	pop	{fp, pc}
   1bac0:	ldrdeq	r4, [r1], -ip
   1bac4:	andeq	r4, r1, r0, lsl #14
   1bac8:	andeq	r4, r1, r4, lsr #14
   1bacc:	andeq	r5, r1, ip, lsr r5
   1bad0:	muleq	r1, r4, r7
   1bad4:	strdeq	r3, [r0], -r0
   1bad8:	andeq	r5, r1, ip, ror #9
   1badc:	push	{fp, lr}
   1bae0:	mov	fp, sp
   1bae4:	sub	sp, sp, #8
   1bae8:	str	r0, [sp, #4]
   1baec:	ldr	r0, [sp, #4]
   1baf0:	movw	r1, #0
   1baf4:	cmp	r0, r1
   1baf8:	movw	r0, #0
   1bafc:	movne	r0, #1
   1bb00:	mvn	r1, #0
   1bb04:	eor	r0, r0, r1
   1bb08:	eor	r0, r0, r1
   1bb0c:	tst	r0, #1
   1bb10:	beq	1bb1c <sprintf@plt+0xa1f8>
   1bb14:	ldr	r0, [sp, #4]
   1bb18:	bl	116cc <free@plt>
   1bb1c:	mov	sp, fp
   1bb20:	pop	{fp, pc}
   1bb24:	sub	sp, sp, #12
   1bb28:	str	r0, [sp, #8]
   1bb2c:	str	r1, [sp, #4]
   1bb30:	str	r2, [sp]
   1bb34:	ldr	r0, [sp]
   1bb38:	ldr	r1, [sp, #8]
   1bb3c:	ldr	r1, [r1, #464]	; 0x1d0
   1bb40:	ldr	r2, [sp, #4]
   1bb44:	add	r1, r1, r2, lsl #4
   1bb48:	str	r0, [r1, #8]
   1bb4c:	add	sp, sp, #12
   1bb50:	bx	lr
   1bb54:	sub	sp, sp, #12
   1bb58:	str	r0, [sp, #8]
   1bb5c:	str	r1, [sp, #4]
   1bb60:	str	r2, [sp]
   1bb64:	ldr	r0, [sp]
   1bb68:	ldr	r1, [sp, #8]
   1bb6c:	ldr	r1, [r1, #464]	; 0x1d0
   1bb70:	ldr	r2, [sp, #4]
   1bb74:	add	r1, r1, r2, lsl #4
   1bb78:	str	r0, [r1, #4]
   1bb7c:	add	sp, sp, #12
   1bb80:	bx	lr
   1bb84:	push	{fp, lr}
   1bb88:	mov	fp, sp
   1bb8c:	sub	sp, sp, #8
   1bb90:	str	r0, [sp, #4]
   1bb94:	ldr	r0, [sp, #4]
   1bb98:	ldr	r1, [r0, #460]	; 0x1cc
   1bb9c:	mvn	r2, #0
   1bba0:	add	r1, r1, r2
   1bba4:	str	r1, [r0, #460]	; 0x1cc
   1bba8:	ldr	r0, [sp, #4]
   1bbac:	ldr	r0, [r0, #460]	; 0x1cc
   1bbb0:	cmp	r0, #0
   1bbb4:	bne	1bbc0 <sprintf@plt+0xa29c>
   1bbb8:	ldr	r0, [sp, #4]
   1bbbc:	bl	13954 <sprintf@plt+0x2030>
   1bbc0:	mov	sp, fp
   1bbc4:	pop	{fp, pc}
   1bbc8:	push	{fp, lr}
   1bbcc:	mov	fp, sp
   1bbd0:	sub	sp, sp, #8
   1bbd4:	str	r0, [sp, #4]
   1bbd8:	ldr	r1, [sp, #4]
   1bbdc:	movw	r0, #1
   1bbe0:	bl	11630 <calloc@plt>
   1bbe4:	str	r0, [sp]
   1bbe8:	ldr	r0, [sp]
   1bbec:	movw	r1, #0
   1bbf0:	cmp	r0, r1
   1bbf4:	movw	r0, #0
   1bbf8:	moveq	r0, #1
   1bbfc:	mvn	r1, #0
   1bc00:	eor	r0, r0, r1
   1bc04:	eor	r0, r0, r1
   1bc08:	tst	r0, #1
   1bc0c:	beq	1bc14 <sprintf@plt+0xa2f0>
   1bc10:	bl	117ec <rb_outofmemory@plt>
   1bc14:	ldr	r0, [sp]
   1bc18:	mov	sp, fp
   1bc1c:	pop	{fp, pc}
   1bc20:	sub	sp, sp, #4
   1bc24:	str	r0, [sp]
   1bc28:	ldr	r0, [sp]
   1bc2c:	ldr	r1, [r0, #460]	; 0x1cc
   1bc30:	add	r1, r1, #1
   1bc34:	str	r1, [r0, #460]	; 0x1cc
   1bc38:	add	sp, sp, #4
   1bc3c:	bx	lr
   1bc40:	push	{fp, lr}
   1bc44:	mov	fp, sp
   1bc48:	sub	sp, sp, #16
   1bc4c:	str	r0, [fp, #-4]
   1bc50:	str	r1, [sp, #8]
   1bc54:	str	r2, [sp, #4]
   1bc58:	ldr	r0, [sp, #4]
   1bc5c:	str	r0, [sp]
   1bc60:	bl	11738 <rb_current_time@plt>
   1bc64:	ldr	r1, [sp]
   1bc68:	add	r0, r1, r0
   1bc6c:	ldr	r1, [fp, #-4]
   1bc70:	ldr	r1, [r1, #464]	; 0x1d0
   1bc74:	ldr	r2, [sp, #8]
   1bc78:	add	r1, r1, r2, lsl #4
   1bc7c:	str	r0, [r1, #4]
   1bc80:	mov	sp, fp
   1bc84:	pop	{fp, pc}
   1bc88:	push	{fp, lr}
   1bc8c:	mov	fp, sp
   1bc90:	sub	sp, sp, #24
   1bc94:	str	r0, [fp, #-4]
   1bc98:	and	r0, r1, #1
   1bc9c:	strb	r0, [fp, #-5]
   1bca0:	str	r2, [sp, #12]
   1bca4:	str	r3, [sp, #8]
   1bca8:	ldr	r0, [sp, #8]
   1bcac:	str	r0, [sp, #4]
   1bcb0:	ldr	r0, [fp, #-4]
   1bcb4:	movw	r1, #0
   1bcb8:	cmp	r0, r1
   1bcbc:	beq	1bcd0 <sprintf@plt+0xa3ac>
   1bcc0:	ldrb	r0, [fp, #-5]
   1bcc4:	and	r0, r0, #1
   1bcc8:	cmp	r0, #0
   1bccc:	bne	1bce0 <sprintf@plt+0xa3bc>
   1bcd0:	ldr	r0, [sp, #4]
   1bcd4:	movw	r1, #1
   1bcd8:	bl	1b9b8 <sprintf@plt+0xa094>
   1bcdc:	b	1bd28 <sprintf@plt+0xa404>
   1bce0:	ldr	r0, [fp, #-4]
   1bce4:	bl	1172c <strlen@plt>
   1bce8:	cmp	r0, #63	; 0x3f
   1bcec:	bls	1bd00 <sprintf@plt+0xa3dc>
   1bcf0:	ldr	r0, [sp, #4]
   1bcf4:	movw	r1, #2
   1bcf8:	bl	1b9b8 <sprintf@plt+0xa094>
   1bcfc:	b	1bd24 <sprintf@plt+0xa400>
   1bd00:	ldr	r0, [sp, #4]
   1bd04:	add	r0, r0, #376	; 0x178
   1bd08:	ldr	r1, [fp, #-4]
   1bd0c:	movw	r2, #64	; 0x40
   1bd10:	bl	116a8 <rb_strlcpy@plt>
   1bd14:	ldr	r1, [sp, #4]
   1bd18:	str	r0, [sp]
   1bd1c:	mov	r0, r1
   1bd20:	bl	1bd30 <sprintf@plt+0xa40c>
   1bd24:	b	1bd28 <sprintf@plt+0xa404>
   1bd28:	mov	sp, fp
   1bd2c:	pop	{fp, pc}
   1bd30:	push	{fp, lr}
   1bd34:	mov	fp, sp
   1bd38:	sub	sp, sp, #24
   1bd3c:	ldr	r1, [pc, #204]	; 1be10 <sprintf@plt+0xa4ec>
   1bd40:	ldr	r1, [pc, r1]
   1bd44:	str	r0, [fp, #-4]
   1bd48:	ldr	r0, [fp, #-4]
   1bd4c:	ldr	r1, [r1, #12]
   1bd50:	bl	1b990 <sprintf@plt+0xa06c>
   1bd54:	ldr	r1, [pc, #176]	; 1be0c <sprintf@plt+0xa4e8>
   1bd58:	add	r1, pc, r1
   1bd5c:	str	r0, [fp, #-8]
   1bd60:	ldr	r0, [fp, #-4]
   1bd64:	ldr	r0, [r0]
   1bd68:	ldr	lr, [fp, #-4]
   1bd6c:	add	r2, lr, #376	; 0x178
   1bd70:	bl	12b74 <sprintf@plt+0x1250>
   1bd74:	ldr	r0, [fp, #-8]
   1bd78:	ldr	r0, [r0]
   1bd7c:	bl	126cc <sprintf@plt+0xda8>
   1bd80:	ldr	r0, [fp, #-8]
   1bd84:	bl	1badc <sprintf@plt+0xa1b8>
   1bd88:	ldr	r0, [pc, #120]	; 1be08 <sprintf@plt+0xa4e4>
   1bd8c:	ldr	r0, [pc, r0]
   1bd90:	ldr	r1, [fp, #-4]
   1bd94:	ldr	r0, [r0, #12]
   1bd98:	str	r0, [sp, #12]
   1bd9c:	mov	r0, r1
   1bda0:	ldr	r1, [sp, #12]
   1bda4:	movw	r2, #0
   1bda8:	bl	1bb24 <sprintf@plt+0xa200>
   1bdac:	ldr	r0, [pc, #80]	; 1be04 <sprintf@plt+0xa4e0>
   1bdb0:	ldr	r0, [pc, r0]
   1bdb4:	ldr	r1, [fp, #-4]
   1bdb8:	ldr	r0, [r0, #12]
   1bdbc:	str	r0, [sp, #8]
   1bdc0:	mov	r0, r1
   1bdc4:	ldr	r1, [sp, #8]
   1bdc8:	movw	r2, #0
   1bdcc:	bl	1bb54 <sprintf@plt+0xa230>
   1bdd0:	ldr	r0, [pc, #40]	; 1be00 <sprintf@plt+0xa4dc>
   1bdd4:	ldr	r0, [pc, r0]
   1bdd8:	ldr	r1, [fp, #-4]
   1bddc:	ldr	r0, [r0, #12]
   1bde0:	str	r0, [sp, #4]
   1bde4:	mov	r0, r1
   1bde8:	ldr	r1, [sp, #4]
   1bdec:	bl	13afc <sprintf@plt+0x21d8>
   1bdf0:	ldr	r0, [fp, #-4]
   1bdf4:	bl	1bb84 <sprintf@plt+0xa260>
   1bdf8:	mov	sp, fp
   1bdfc:	pop	{fp, pc}
   1be00:	muleq	r1, ip, r3
   1be04:	andeq	r4, r1, r0, asr #7
   1be08:	andeq	r4, r1, r4, ror #7
   1be0c:	andeq	r3, r0, r3, asr #16
   1be10:	andeq	r4, r1, r0, lsr r4
   1be14:	push	{fp, lr}
   1be18:	mov	fp, sp
   1be1c:	sub	sp, sp, #16
   1be20:	str	r0, [fp, #-4]
   1be24:	str	r1, [sp, #8]
   1be28:	str	r2, [sp, #4]
   1be2c:	ldr	r0, [sp, #4]
   1be30:	ldr	r0, [r0]
   1be34:	bl	11798 <atoi@plt>
   1be38:	str	r0, [sp]
   1be3c:	ldr	r0, [sp]
   1be40:	cmp	r0, #0
   1be44:	bge	1be60 <sprintf@plt+0xa53c>
   1be48:	ldr	r0, [pc, #44]	; 1be7c <sprintf@plt+0xa558>
   1be4c:	add	r1, pc, r0
   1be50:	ldr	r2, [sp]
   1be54:	movw	r0, #67	; 0x43
   1be58:	bl	12bfc <sprintf@plt+0x12d8>
   1be5c:	b	1be70 <sprintf@plt+0xa54c>
   1be60:	ldr	r0, [pc, #16]	; 1be78 <sprintf@plt+0xa554>
   1be64:	add	r0, pc, r0
   1be68:	ldr	r1, [sp]
   1be6c:	str	r1, [r0]
   1be70:	mov	sp, fp
   1be74:	pop	{fp, pc}
   1be78:	andeq	r5, r1, r8, asr #2
   1be7c:	ldrdeq	r3, [r0], -r9
   1be80:	push	{fp, lr}
   1be84:	mov	fp, sp
   1be88:	sub	sp, sp, #48	; 0x30
   1be8c:	str	r0, [fp, #-4]
   1be90:	str	r1, [fp, #-8]
   1be94:	str	r2, [fp, #-12]
   1be98:	ldr	r0, [fp, #-12]
   1be9c:	ldr	r0, [r0]
   1bea0:	ldrb	r0, [r0]
   1bea4:	cmp	r0, #49	; 0x31
   1bea8:	movw	r0, #0
   1beac:	moveq	r0, #1
   1beb0:	and	r0, r0, #1
   1beb4:	strb	r0, [fp, #-13]
   1beb8:	ldrb	r0, [fp, #-13]
   1bebc:	tst	r0, #1
   1bec0:	bne	1bfb8 <sprintf@plt+0xa694>
   1bec4:	ldr	r0, [pc, #468]	; 1c0a0 <sprintf@plt+0xa77c>
   1bec8:	add	r0, pc, r0
   1becc:	ldr	r0, [r0, #184]	; 0xb8
   1bed0:	movw	r1, #0
   1bed4:	cmp	r0, r1
   1bed8:	bne	1bef4 <sprintf@plt+0xa5d0>
   1bedc:	ldr	r0, [pc, #448]	; 1c0a4 <sprintf@plt+0xa780>
   1bee0:	add	r0, pc, r0
   1bee4:	ldr	r0, [r0, #372]	; 0x174
   1bee8:	movw	r1, #0
   1beec:	cmp	r0, r1
   1bef0:	beq	1bfb4 <sprintf@plt+0xa690>
   1bef4:	ldr	r0, [pc, #428]	; 1c0a8 <sprintf@plt+0xa784>
   1bef8:	add	r0, pc, r0
   1befc:	ldr	r0, [r0, #184]	; 0xb8
   1bf00:	movw	r1, #0
   1bf04:	cmp	r0, r1
   1bf08:	beq	1bf1c <sprintf@plt+0xa5f8>
   1bf0c:	ldr	r0, [pc, #408]	; 1c0ac <sprintf@plt+0xa788>
   1bf10:	add	r0, pc, r0
   1bf14:	ldr	r0, [r0, #184]	; 0xb8
   1bf18:	bl	11768 <rb_close@plt>
   1bf1c:	ldr	r0, [pc, #396]	; 1c0b0 <sprintf@plt+0xa78c>
   1bf20:	add	r0, pc, r0
   1bf24:	ldr	r0, [r0, #372]	; 0x174
   1bf28:	movw	r1, #0
   1bf2c:	cmp	r0, r1
   1bf30:	beq	1bf44 <sprintf@plt+0xa620>
   1bf34:	ldr	r0, [pc, #376]	; 1c0b4 <sprintf@plt+0xa790>
   1bf38:	add	r0, pc, r0
   1bf3c:	ldr	r0, [r0, #372]	; 0x174
   1bf40:	bl	11768 <rb_close@plt>
   1bf44:	ldr	r0, [pc, #364]	; 1c0b8 <sprintf@plt+0xa794>
   1bf48:	ldr	r0, [pc, r0]
   1bf4c:	ldr	r1, [pc, #360]	; 1c0bc <sprintf@plt+0xa798>
   1bf50:	add	r1, pc, r1
   1bf54:	movw	r2, #0
   1bf58:	str	r2, [r1, #372]	; 0x174
   1bf5c:	str	r2, [r1, #184]	; 0xb8
   1bf60:	ldr	r0, [r0]
   1bf64:	add	r1, sp, #20
   1bf68:	bl	11708 <rb_dictionary_foreach_start@plt>
   1bf6c:	ldr	r0, [pc, #332]	; 1c0c0 <sprintf@plt+0xa79c>
   1bf70:	ldr	r0, [pc, r0]
   1bf74:	ldr	r0, [r0]
   1bf78:	add	r1, sp, #20
   1bf7c:	bl	11618 <rb_dictionary_foreach_cur@plt>
   1bf80:	str	r0, [fp, #-20]	; 0xffffffec
   1bf84:	movw	r1, #0
   1bf88:	cmp	r0, r1
   1bf8c:	beq	1bfb0 <sprintf@plt+0xa68c>
   1bf90:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bf94:	bl	1ca28 <sprintf@plt+0xb104>
   1bf98:	ldr	r0, [pc, #292]	; 1c0c4 <sprintf@plt+0xa7a0>
   1bf9c:	ldr	r0, [pc, r0]
   1bfa0:	ldr	r0, [r0]
   1bfa4:	add	r1, sp, #20
   1bfa8:	bl	116c0 <rb_dictionary_foreach_next@plt>
   1bfac:	b	1bf6c <sprintf@plt+0xa648>
   1bfb0:	b	1bfb4 <sprintf@plt+0xa690>
   1bfb4:	b	1c084 <sprintf@plt+0xa760>
   1bfb8:	ldr	r0, [pc, #264]	; 1c0c8 <sprintf@plt+0xa7a4>
   1bfbc:	add	r0, pc, r0
   1bfc0:	ldrb	r0, [r0]
   1bfc4:	cmp	r0, #0
   1bfc8:	beq	1c018 <sprintf@plt+0xa6f4>
   1bfcc:	ldr	r0, [pc, #248]	; 1c0cc <sprintf@plt+0xa7a8>
   1bfd0:	add	r0, pc, r0
   1bfd4:	ldrh	r0, [r0, #54]	; 0x36
   1bfd8:	cmp	r0, #0
   1bfdc:	beq	1c018 <sprintf@plt+0xa6f4>
   1bfe0:	ldr	r0, [pc, #232]	; 1c0d0 <sprintf@plt+0xa7ac>
   1bfe4:	add	r0, pc, r0
   1bfe8:	ldr	r0, [r0, #184]	; 0xb8
   1bfec:	movw	r1, #0
   1bff0:	cmp	r0, r1
   1bff4:	bne	1c014 <sprintf@plt+0xa6f0>
   1bff8:	ldr	r0, [pc, #212]	; 1c0d4 <sprintf@plt+0xa7b0>
   1bffc:	add	r0, pc, r0
   1c000:	str	r0, [sp, #16]
   1c004:	ldr	r1, [sp, #16]
   1c008:	ldrh	r1, [r1, #54]	; 0x36
   1c00c:	bl	1cc50 <sprintf@plt+0xb32c>
   1c010:	str	r0, [sp, #12]
   1c014:	b	1c018 <sprintf@plt+0xa6f4>
   1c018:	ldr	r0, [pc, #184]	; 1c0d8 <sprintf@plt+0xa7b4>
   1c01c:	add	r0, pc, r0
   1c020:	ldrb	r0, [r0, #188]	; 0xbc
   1c024:	cmp	r0, #0
   1c028:	beq	1c080 <sprintf@plt+0xa75c>
   1c02c:	ldr	r0, [pc, #168]	; 1c0dc <sprintf@plt+0xa7b8>
   1c030:	add	r0, pc, r0
   1c034:	ldrh	r0, [r0, #242]	; 0xf2
   1c038:	cmp	r0, #0
   1c03c:	beq	1c080 <sprintf@plt+0xa75c>
   1c040:	ldr	r0, [pc, #152]	; 1c0e0 <sprintf@plt+0xa7bc>
   1c044:	add	r0, pc, r0
   1c048:	ldr	r0, [r0, #372]	; 0x174
   1c04c:	movw	r1, #0
   1c050:	cmp	r0, r1
   1c054:	bne	1c07c <sprintf@plt+0xa758>
   1c058:	ldr	r0, [pc, #132]	; 1c0e4 <sprintf@plt+0xa7c0>
   1c05c:	add	r0, pc, r0
   1c060:	add	r1, r0, #188	; 0xbc
   1c064:	str	r0, [sp, #8]
   1c068:	mov	r0, r1
   1c06c:	ldr	r1, [sp, #8]
   1c070:	ldrh	r1, [r1, #242]	; 0xf2
   1c074:	bl	1cc50 <sprintf@plt+0xb32c>
   1c078:	str	r0, [sp, #4]
   1c07c:	b	1c080 <sprintf@plt+0xa75c>
   1c080:	b	1c084 <sprintf@plt+0xa760>
   1c084:	ldr	r0, [pc, #92]	; 1c0e8 <sprintf@plt+0xa7c4>
   1c088:	add	r0, pc, r0
   1c08c:	ldrb	r1, [fp, #-13]
   1c090:	and	r1, r1, #1
   1c094:	strb	r1, [r0]
   1c098:	mov	sp, fp
   1c09c:	pop	{fp, pc}
   1c0a0:	andeq	r9, r1, ip, lsl #3
   1c0a4:	andeq	r9, r1, r4, ror r1
   1c0a8:	andeq	r9, r1, ip, asr r1
   1c0ac:	andeq	r9, r1, r4, asr #2
   1c0b0:	andeq	r9, r1, r4, lsr r1
   1c0b4:	andeq	r9, r1, ip, lsl r1
   1c0b8:	andeq	r4, r1, r8, lsl r2
   1c0bc:	andeq	r9, r1, r4, lsl #2
   1c0c0:	strdeq	r4, [r1], -r0
   1c0c4:	andeq	r4, r1, r4, asr #3
   1c0c8:	muleq	r1, r8, r0
   1c0cc:	andeq	r9, r1, r4, lsl #1
   1c0d0:	andeq	r9, r1, r0, ror r0
   1c0d4:	andeq	r9, r1, r8, asr r0
   1c0d8:	andeq	r9, r1, r8, lsr r0
   1c0dc:	andeq	r9, r1, r4, lsr #32
   1c0e0:	andeq	r9, r1, r0, lsl r0
   1c0e4:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   1c0e8:	andeq	r9, r1, r4, asr #2
   1c0ec:	push	{fp, lr}
   1c0f0:	mov	fp, sp
   1c0f4:	sub	sp, sp, #24
   1c0f8:	str	r0, [fp, #-4]
   1c0fc:	str	r1, [fp, #-8]
   1c100:	str	r2, [sp, #12]
   1c104:	ldr	r0, [sp, #12]
   1c108:	ldr	r0, [r0]
   1c10c:	str	r0, [sp, #8]
   1c110:	ldr	r0, [sp, #12]
   1c114:	ldr	r0, [r0, #4]
   1c118:	bl	11798 <atoi@plt>
   1c11c:	str	r0, [sp, #4]
   1c120:	ldr	r0, [sp, #4]
   1c124:	movw	r1, #65535	; 0xffff
   1c128:	cmp	r0, r1
   1c12c:	bgt	1c13c <sprintf@plt+0xa818>
   1c130:	ldr	r0, [sp, #4]
   1c134:	cmp	r0, #0
   1c138:	bgt	1c164 <sprintf@plt+0xa840>
   1c13c:	ldr	r0, [pc, #60]	; 1c180 <sprintf@plt+0xa85c>
   1c140:	add	r1, pc, r0
   1c144:	ldr	r0, [sp, #12]
   1c148:	ldr	r2, [r0]
   1c14c:	ldr	r0, [sp, #12]
   1c150:	ldr	r3, [r0, #4]
   1c154:	movw	r0, #67	; 0x43
   1c158:	bl	12bfc <sprintf@plt+0x12d8>
   1c15c:	movw	r0, #3
   1c160:	bl	1190c <exit@plt>
   1c164:	ldr	r0, [sp, #8]
   1c168:	ldr	r1, [sp, #4]
   1c16c:	uxth	r1, r1
   1c170:	bl	1cc50 <sprintf@plt+0xb32c>
   1c174:	str	r0, [sp]
   1c178:	mov	sp, fp
   1c17c:	pop	{fp, pc}
   1c180:	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
   1c184:	push	{fp, lr}
   1c188:	mov	fp, sp
   1c18c:	sub	sp, sp, #16
   1c190:	ldr	r3, [pc, #116]	; 1c20c <sprintf@plt+0xa8e8>
   1c194:	add	r3, pc, r3
   1c198:	str	r0, [fp, #-4]
   1c19c:	str	r1, [sp, #8]
   1c1a0:	str	r2, [sp, #4]
   1c1a4:	ldr	r0, [r3, #184]	; 0xb8
   1c1a8:	movw	r1, #0
   1c1ac:	cmp	r0, r1
   1c1b0:	beq	1c1c4 <sprintf@plt+0xa8a0>
   1c1b4:	ldr	r0, [pc, #84]	; 1c210 <sprintf@plt+0xa8ec>
   1c1b8:	add	r0, pc, r0
   1c1bc:	ldr	r0, [r0, #184]	; 0xb8
   1c1c0:	bl	11768 <rb_close@plt>
   1c1c4:	ldr	r0, [pc, #72]	; 1c214 <sprintf@plt+0xa8f0>
   1c1c8:	add	r0, pc, r0
   1c1cc:	ldr	r0, [r0, #372]	; 0x174
   1c1d0:	movw	r1, #0
   1c1d4:	cmp	r0, r1
   1c1d8:	beq	1c1ec <sprintf@plt+0xa8c8>
   1c1dc:	ldr	r0, [pc, #52]	; 1c218 <sprintf@plt+0xa8f4>
   1c1e0:	add	r0, pc, r0
   1c1e4:	ldr	r0, [r0, #372]	; 0x174
   1c1e8:	bl	11768 <rb_close@plt>
   1c1ec:	ldr	r0, [pc, #40]	; 1c21c <sprintf@plt+0xa8f8>
   1c1f0:	add	r0, pc, r0
   1c1f4:	movw	r1, #0
   1c1f8:	and	r1, r1, #255	; 0xff
   1c1fc:	movw	r2, #376	; 0x178
   1c200:	bl	1166c <memset@plt>
   1c204:	mov	sp, fp
   1c208:	pop	{fp, pc}
   1c20c:	andeq	r8, r1, r0, asr #29
   1c210:	muleq	r1, ip, lr
   1c214:	andeq	r8, r1, ip, lsl #29
   1c218:	andeq	r8, r1, r4, ror lr
   1c21c:	andeq	r8, r1, r4, ror #28
   1c220:	push	{fp, lr}
   1c224:	mov	fp, sp
   1c228:	sub	sp, sp, #40	; 0x28
   1c22c:	str	r0, [fp, #-4]
   1c230:	str	r1, [fp, #-8]
   1c234:	str	r2, [fp, #-12]
   1c238:	ldr	r0, [fp, #-12]
   1c23c:	ldr	r0, [r0, #4]
   1c240:	bl	11798 <atoi@plt>
   1c244:	str	r0, [fp, #-16]
   1c248:	movw	r0, #40	; 0x28
   1c24c:	bl	1d728 <sprintf@plt+0xbe04>
   1c250:	str	r0, [sp, #20]
   1c254:	ldr	r0, [fp, #-16]
   1c258:	cmp	r0, #0
   1c25c:	ble	1c270 <sprintf@plt+0xa94c>
   1c260:	ldr	r0, [fp, #-16]
   1c264:	movw	r1, #65535	; 0xffff
   1c268:	cmp	r0, r1
   1c26c:	ble	1c298 <sprintf@plt+0xa974>
   1c270:	ldr	r0, [pc, #560]	; 1c4a8 <sprintf@plt+0xab84>
   1c274:	add	r1, pc, r0
   1c278:	ldr	r0, [fp, #-12]
   1c27c:	ldr	r2, [r0]
   1c280:	ldr	r0, [fp, #-12]
   1c284:	ldr	r3, [r0, #4]
   1c288:	movw	r0, #67	; 0x43
   1c28c:	bl	12bfc <sprintf@plt+0x12d8>
   1c290:	movw	r0, #3
   1c294:	bl	1190c <exit@plt>
   1c298:	ldr	r0, [fp, #-16]
   1c29c:	ldr	r1, [sp, #20]
   1c2a0:	strh	r0, [r1, #20]
   1c2a4:	ldr	r0, [fp, #-12]
   1c2a8:	ldr	r0, [r0]
   1c2ac:	bl	1d780 <sprintf@plt+0xbe5c>
   1c2b0:	ldr	r1, [sp, #20]
   1c2b4:	str	r0, [r1, #16]
   1c2b8:	sub	r0, r0, #1
   1c2bc:	cmp	r0, #3
   1c2c0:	str	r0, [sp, #16]
   1c2c4:	bhi	1c3e8 <sprintf@plt+0xaac4>
   1c2c8:	add	r0, pc, #8
   1c2cc:	ldr	r1, [sp, #16]
   1c2d0:	ldr	r2, [r0, r1, lsl #2]
   1c2d4:	add	pc, r0, r2
   1c2d8:	andeq	r0, r0, r0, lsl r0
   1c2dc:	andeq	r0, r0, r0, asr r0
   1c2e0:	muleq	r0, r0, r0
   1c2e4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1c2e8:	ldr	r0, [pc, #424]	; 1c498 <sprintf@plt+0xab74>
   1c2ec:	add	r2, pc, r0
   1c2f0:	ldr	r0, [sp, #20]
   1c2f4:	ldr	r1, [sp, #20]
   1c2f8:	ldrh	r3, [r1, #20]
   1c2fc:	movw	r1, #16
   1c300:	bl	118b8 <snprintf@plt>
   1c304:	ldr	r1, [pc, #392]	; 1c494 <sprintf@plt+0xab70>
   1c308:	add	r1, pc, r1
   1c30c:	ldr	r2, [sp, #20]
   1c310:	movw	r3, #0
   1c314:	strb	r3, [r2, #22]
   1c318:	ldr	r2, [sp, #20]
   1c31c:	str	r1, [r2, #24]
   1c320:	str	r0, [sp, #12]
   1c324:	b	1c410 <sprintf@plt+0xaaec>
   1c328:	ldr	r0, [pc, #352]	; 1c490 <sprintf@plt+0xab6c>
   1c32c:	add	r2, pc, r0
   1c330:	ldr	r0, [sp, #20]
   1c334:	ldr	r1, [sp, #20]
   1c338:	ldrh	r3, [r1, #20]
   1c33c:	movw	r1, #16
   1c340:	bl	118b8 <snprintf@plt>
   1c344:	ldr	r1, [pc, #320]	; 1c48c <sprintf@plt+0xab68>
   1c348:	add	r1, pc, r1
   1c34c:	ldr	r2, [sp, #20]
   1c350:	movw	r3, #0
   1c354:	strb	r3, [r2, #22]
   1c358:	ldr	r2, [sp, #20]
   1c35c:	str	r1, [r2, #24]
   1c360:	str	r0, [sp, #8]
   1c364:	b	1c410 <sprintf@plt+0xaaec>
   1c368:	ldr	r0, [pc, #280]	; 1c488 <sprintf@plt+0xab64>
   1c36c:	add	r2, pc, r0
   1c370:	ldr	r0, [sp, #20]
   1c374:	ldr	r1, [sp, #20]
   1c378:	ldrh	r3, [r1, #20]
   1c37c:	movw	r1, #16
   1c380:	bl	118b8 <snprintf@plt>
   1c384:	ldr	r1, [pc, #248]	; 1c484 <sprintf@plt+0xab60>
   1c388:	add	r1, pc, r1
   1c38c:	ldr	r2, [sp, #20]
   1c390:	movw	r3, #0
   1c394:	strb	r3, [r2, #22]
   1c398:	ldr	r2, [sp, #20]
   1c39c:	str	r1, [r2, #24]
   1c3a0:	str	r0, [sp, #4]
   1c3a4:	b	1c410 <sprintf@plt+0xaaec>
   1c3a8:	ldr	r0, [pc, #208]	; 1c480 <sprintf@plt+0xab5c>
   1c3ac:	add	r2, pc, r0
   1c3b0:	ldr	r0, [sp, #20]
   1c3b4:	ldr	r1, [sp, #20]
   1c3b8:	ldrh	r3, [r1, #20]
   1c3bc:	movw	r1, #16
   1c3c0:	bl	118b8 <snprintf@plt>
   1c3c4:	ldr	r1, [pc, #176]	; 1c47c <sprintf@plt+0xab58>
   1c3c8:	add	r1, pc, r1
   1c3cc:	ldr	r2, [sp, #20]
   1c3d0:	str	r1, [r2, #24]
   1c3d4:	ldr	r1, [sp, #20]
   1c3d8:	movw	r2, #1
   1c3dc:	strb	r2, [r1, #22]
   1c3e0:	str	r0, [sp]
   1c3e4:	b	1c410 <sprintf@plt+0xaaec>
   1c3e8:	ldr	r0, [pc, #180]	; 1c4a4 <sprintf@plt+0xab80>
   1c3ec:	add	r1, pc, r0
   1c3f0:	ldr	r0, [fp, #-12]
   1c3f4:	ldr	r2, [r0]
   1c3f8:	ldr	r0, [sp, #20]
   1c3fc:	ldrh	r3, [r0, #20]
   1c400:	movw	r0, #67	; 0x43
   1c404:	bl	12bfc <sprintf@plt+0x12d8>
   1c408:	movw	r0, #3
   1c40c:	bl	1190c <exit@plt>
   1c410:	ldr	r0, [sp, #20]
   1c414:	ldr	r0, [r0, #16]
   1c418:	ldr	r1, [sp, #20]
   1c41c:	ldrh	r1, [r1, #20]
   1c420:	bl	1dca0 <sprintf@plt+0xc37c>
   1c424:	movw	r1, #0
   1c428:	cmp	r0, r1
   1c42c:	beq	1c45c <sprintf@plt+0xab38>
   1c430:	ldr	r0, [pc, #104]	; 1c4a0 <sprintf@plt+0xab7c>
   1c434:	add	r1, pc, r0
   1c438:	ldr	r0, [fp, #-12]
   1c43c:	ldr	r2, [r0]
   1c440:	ldr	r0, [sp, #20]
   1c444:	ldrh	r3, [r0, #20]
   1c448:	movw	r0, #67	; 0x43
   1c44c:	bl	12bfc <sprintf@plt+0x12d8>
   1c450:	ldr	r0, [sp, #20]
   1c454:	bl	1d6e0 <sprintf@plt+0xbdbc>
   1c458:	b	1c474 <sprintf@plt+0xab50>
   1c45c:	ldr	r0, [pc, #56]	; 1c49c <sprintf@plt+0xab78>
   1c460:	add	r2, pc, r0
   1c464:	ldr	r0, [sp, #20]
   1c468:	ldr	r1, [sp, #20]
   1c46c:	add	r1, r1, #28
   1c470:	bl	1dd38 <sprintf@plt+0xc414>
   1c474:	mov	sp, fp
   1c478:	pop	{fp, pc}
   1c47c:	andeq	r1, r0, ip, asr #15
   1c480:	strdeq	r3, [r0], -sp
   1c484:	andeq	r1, r0, ip, lsl #16
   1c488:	andeq	r3, r0, sp, lsr #8
   1c48c:	andeq	r1, r0, ip, lsl #12
   1c490:	andeq	r3, r0, r2, ror #8
   1c494:	andeq	r1, r0, r4, lsr r5
   1c498:	muleq	r0, r7, r4
   1c49c:	andeq	r8, r1, r0, ror sp
   1c4a0:			; <UNDEFINED> instruction: 0x000033b4
   1c4a4:	andeq	r3, r0, lr, asr #7
   1c4a8:	andeq	r3, r0, sl, ror #9
   1c4ac:	push	{fp, lr}
   1c4b0:	mov	fp, sp
   1c4b4:	sub	sp, sp, #56	; 0x38
   1c4b8:	str	r0, [fp, #-4]
   1c4bc:	str	r1, [fp, #-8]
   1c4c0:	str	r2, [fp, #-12]
   1c4c4:	ldr	r0, [fp, #-12]
   1c4c8:	ldr	r0, [r0]
   1c4cc:	bl	1d780 <sprintf@plt+0xbe5c>
   1c4d0:	str	r0, [fp, #-24]	; 0xffffffe8
   1c4d4:	ldr	r0, [fp, #-12]
   1c4d8:	ldr	r0, [r0, #4]
   1c4dc:	bl	11798 <atoi@plt>
   1c4e0:	str	r0, [sp, #28]
   1c4e4:	ldr	r0, [sp, #28]
   1c4e8:	cmp	r0, #0
   1c4ec:	ble	1c500 <sprintf@plt+0xabdc>
   1c4f0:	ldr	r0, [sp, #28]
   1c4f4:	movw	r1, #65535	; 0xffff
   1c4f8:	cmp	r0, r1
   1c4fc:	ble	1c528 <sprintf@plt+0xac04>
   1c500:	ldr	r0, [pc, #576]	; 1c748 <sprintf@plt+0xae24>
   1c504:	add	r1, pc, r0
   1c508:	ldr	r0, [fp, #-12]
   1c50c:	ldr	r2, [r0]
   1c510:	ldr	r0, [fp, #-12]
   1c514:	ldr	r3, [r0, #4]
   1c518:	movw	r0, #67	; 0x43
   1c51c:	bl	12bfc <sprintf@plt+0x12d8>
   1c520:	movw	r0, #3
   1c524:	bl	1190c <exit@plt>
   1c528:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c52c:	cmp	r0, #0
   1c530:	bne	1c558 <sprintf@plt+0xac34>
   1c534:	ldr	r0, [pc, #520]	; 1c744 <sprintf@plt+0xae20>
   1c538:	add	r1, pc, r0
   1c53c:	ldr	r0, [fp, #-12]
   1c540:	ldr	r2, [r0]
   1c544:	ldr	r3, [sp, #28]
   1c548:	movw	r0, #67	; 0x43
   1c54c:	bl	12bfc <sprintf@plt+0x12d8>
   1c550:	movw	r0, #3
   1c554:	bl	1190c <exit@plt>
   1c558:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c55c:	ldr	r1, [sp, #28]
   1c560:	uxth	r1, r1
   1c564:	bl	1dca0 <sprintf@plt+0xc37c>
   1c568:	str	r0, [fp, #-20]	; 0xffffffec
   1c56c:	movw	r1, #0
   1c570:	cmp	r0, r1
   1c574:	bne	1c59c <sprintf@plt+0xac78>
   1c578:	ldr	r0, [pc, #448]	; 1c740 <sprintf@plt+0xae1c>
   1c57c:	add	r1, pc, r0
   1c580:	ldr	r0, [fp, #-12]
   1c584:	ldr	r2, [r0]
   1c588:	ldr	r3, [sp, #28]
   1c58c:	movw	r0, #67	; 0x43
   1c590:	bl	12bfc <sprintf@plt+0x12d8>
   1c594:	movw	r0, #3
   1c598:	bl	1190c <exit@plt>
   1c59c:	ldr	r0, [pc, #384]	; 1c724 <sprintf@plt+0xae00>
   1c5a0:	ldr	r0, [pc, r0]
   1c5a4:	ldr	r0, [r0]
   1c5a8:	add	r1, sp, #20
   1c5ac:	bl	11708 <rb_dictionary_foreach_start@plt>
   1c5b0:	ldr	r0, [pc, #368]	; 1c728 <sprintf@plt+0xae04>
   1c5b4:	ldr	r0, [pc, r0]
   1c5b8:	ldr	r0, [r0]
   1c5bc:	add	r1, sp, #20
   1c5c0:	bl	11618 <rb_dictionary_foreach_cur@plt>
   1c5c4:	str	r0, [fp, #-16]
   1c5c8:	movw	r1, #0
   1c5cc:	cmp	r0, r1
   1c5d0:	beq	1c6dc <sprintf@plt+0xadb8>
   1c5d4:	ldr	r0, [pc, #348]	; 1c738 <sprintf@plt+0xae14>
   1c5d8:	ldr	r0, [pc, r0]
   1c5dc:	ldr	r1, [fp, #-16]
   1c5e0:	ldr	r0, [r0, #12]
   1c5e4:	str	r0, [sp, #4]
   1c5e8:	mov	r0, r1
   1c5ec:	ldr	r1, [sp, #4]
   1c5f0:	bl	1d6b8 <sprintf@plt+0xbd94>
   1c5f4:	str	r0, [sp, #12]
   1c5f8:	ldr	r0, [sp, #12]
   1c5fc:	movw	r1, #0
   1c600:	cmp	r0, r1
   1c604:	bne	1c60c <sprintf@plt+0xace8>
   1c608:	b	1c6c4 <sprintf@plt+0xada0>
   1c60c:	ldr	r0, [fp, #-16]
   1c610:	bl	1dea4 <sprintf@plt+0xc580>
   1c614:	ldr	r0, [sp, #12]
   1c618:	ldr	r0, [r0]
   1c61c:	str	r0, [sp, #16]
   1c620:	ldr	r0, [sp, #16]
   1c624:	movw	r1, #0
   1c628:	cmp	r0, r1
   1c62c:	beq	1c6bc <sprintf@plt+0xad98>
   1c630:	ldr	r0, [sp, #16]
   1c634:	ldr	r0, [r0]
   1c638:	str	r0, [sp, #8]
   1c63c:	ldr	r0, [sp, #8]
   1c640:	ldr	r0, [r0, #8]
   1c644:	ldrh	r0, [r0, #20]
   1c648:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c64c:	ldrh	r1, [r1, #20]
   1c650:	cmp	r0, r1
   1c654:	bne	1c6a8 <sprintf@plt+0xad84>
   1c658:	ldr	r0, [sp, #8]
   1c65c:	ldr	r0, [r0, #8]
   1c660:	ldr	r0, [r0, #16]
   1c664:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c668:	ldr	r1, [r1, #16]
   1c66c:	cmp	r0, r1
   1c670:	bne	1c6a8 <sprintf@plt+0xad84>
   1c674:	ldr	r0, [sp, #8]
   1c678:	add	r0, r0, #16
   1c67c:	ldr	r1, [sp, #12]
   1c680:	bl	1dec4 <sprintf@plt+0xc5a0>
   1c684:	ldr	r0, [sp, #8]
   1c688:	bl	1d6e0 <sprintf@plt+0xbdbc>
   1c68c:	ldr	r0, [sp, #12]
   1c690:	ldr	r0, [r0, #8]
   1c694:	cmp	r0, #0
   1c698:	bne	1c6a4 <sprintf@plt+0xad80>
   1c69c:	ldr	r0, [fp, #-16]
   1c6a0:	bl	1ca28 <sprintf@plt+0xb104>
   1c6a4:	b	1c6bc <sprintf@plt+0xad98>
   1c6a8:	b	1c6ac <sprintf@plt+0xad88>
   1c6ac:	ldr	r0, [sp, #16]
   1c6b0:	ldr	r0, [r0, #8]
   1c6b4:	str	r0, [sp, #16]
   1c6b8:	b	1c620 <sprintf@plt+0xacfc>
   1c6bc:	ldr	r0, [fp, #-16]
   1c6c0:	bl	1e000 <sprintf@plt+0xc6dc>
   1c6c4:	ldr	r0, [pc, #112]	; 1c73c <sprintf@plt+0xae18>
   1c6c8:	ldr	r0, [pc, r0]
   1c6cc:	ldr	r0, [r0]
   1c6d0:	add	r1, sp, #20
   1c6d4:	bl	116c0 <rb_dictionary_foreach_next@plt>
   1c6d8:	b	1c5b0 <sprintf@plt+0xac8c>
   1c6dc:	ldr	r0, [pc, #76]	; 1c730 <sprintf@plt+0xae0c>
   1c6e0:	add	r1, pc, r0
   1c6e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c6e8:	add	r0, r0, #28
   1c6ec:	bl	1dec4 <sprintf@plt+0xc5a0>
   1c6f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c6f4:	bl	1d6e0 <sprintf@plt+0xbdbc>
   1c6f8:	ldr	r0, [pc, #44]	; 1c72c <sprintf@plt+0xae08>
   1c6fc:	add	r0, pc, r0
   1c700:	ldr	r0, [r0, #8]
   1c704:	cmp	r0, #0
   1c708:	bne	1c71c <sprintf@plt+0xadf8>
   1c70c:	ldr	r0, [pc, #32]	; 1c734 <sprintf@plt+0xae10>
   1c710:	add	r0, pc, r0
   1c714:	movw	r1, #0
   1c718:	strb	r1, [r0]
   1c71c:	mov	sp, fp
   1c720:	pop	{fp, pc}
   1c724:	andeq	r3, r1, r0, asr #23
   1c728:	andeq	r3, r1, ip, lsr #23
   1c72c:	ldrdeq	r8, [r1], -r4
   1c730:	strdeq	r8, [r1], -r0
   1c734:			; <UNDEFINED> instruction: 0x00018abc
   1c738:			; <UNDEFINED> instruction: 0x00013bb4
   1c73c:	muleq	r1, r8, sl
   1c740:	andeq	r3, r0, r4, asr #6
   1c744:	andeq	r3, r0, r1, asr r3
   1c748:	andeq	r3, r0, r6, asr r3
   1c74c:	push	{fp, lr}
   1c750:	mov	fp, sp
   1c754:	sub	sp, sp, #40	; 0x28
   1c758:	ldr	r3, [pc, #292]	; 1c884 <sprintf@plt+0xaf60>
   1c75c:	add	r3, pc, r3
   1c760:	str	r0, [fp, #-4]
   1c764:	str	r1, [fp, #-8]
   1c768:	str	r2, [fp, #-12]
   1c76c:	ldr	r0, [r3]
   1c770:	str	r0, [sp, #20]
   1c774:	ldr	r0, [sp, #20]
   1c778:	movw	r1, #0
   1c77c:	cmp	r0, r1
   1c780:	beq	1c794 <sprintf@plt+0xae70>
   1c784:	ldr	r0, [sp, #20]
   1c788:	ldr	r0, [r0, #8]
   1c78c:	str	r0, [sp, #4]
   1c790:	b	1c7a0 <sprintf@plt+0xae7c>
   1c794:	movw	r0, #0
   1c798:	str	r0, [sp, #4]
   1c79c:	b	1c7a0 <sprintf@plt+0xae7c>
   1c7a0:	ldr	r0, [sp, #4]
   1c7a4:	str	r0, [sp, #16]
   1c7a8:	ldr	r0, [sp, #20]
   1c7ac:	movw	r1, #0
   1c7b0:	cmp	r0, r1
   1c7b4:	beq	1c814 <sprintf@plt+0xaef0>
   1c7b8:	ldr	r0, [sp, #20]
   1c7bc:	ldr	r0, [r0]
   1c7c0:	bl	1d6e0 <sprintf@plt+0xbdbc>
   1c7c4:	ldr	r0, [pc, #204]	; 1c898 <sprintf@plt+0xaf74>
   1c7c8:	add	r1, pc, r0
   1c7cc:	ldr	r0, [sp, #20]
   1c7d0:	bl	1dec4 <sprintf@plt+0xc5a0>
   1c7d4:	ldr	r0, [sp, #16]
   1c7d8:	str	r0, [sp, #20]
   1c7dc:	ldr	r0, [sp, #20]
   1c7e0:	movw	r1, #0
   1c7e4:	cmp	r0, r1
   1c7e8:	beq	1c7fc <sprintf@plt+0xaed8>
   1c7ec:	ldr	r0, [sp, #20]
   1c7f0:	ldr	r0, [r0, #8]
   1c7f4:	str	r0, [sp]
   1c7f8:	b	1c808 <sprintf@plt+0xaee4>
   1c7fc:	movw	r0, #0
   1c800:	str	r0, [sp]
   1c804:	b	1c808 <sprintf@plt+0xaee4>
   1c808:	ldr	r0, [sp]
   1c80c:	str	r0, [sp, #16]
   1c810:	b	1c7a8 <sprintf@plt+0xae84>
   1c814:	ldr	r0, [pc, #108]	; 1c888 <sprintf@plt+0xaf64>
   1c818:	ldr	r0, [pc, r0]
   1c81c:	ldr	r0, [r0]
   1c820:	add	r1, sp, #8
   1c824:	bl	11708 <rb_dictionary_foreach_start@plt>
   1c828:	ldr	r0, [pc, #92]	; 1c88c <sprintf@plt+0xaf68>
   1c82c:	ldr	r0, [pc, r0]
   1c830:	ldr	r0, [r0]
   1c834:	add	r1, sp, #8
   1c838:	bl	11618 <rb_dictionary_foreach_cur@plt>
   1c83c:	str	r0, [fp, #-16]
   1c840:	movw	r1, #0
   1c844:	cmp	r0, r1
   1c848:	beq	1c86c <sprintf@plt+0xaf48>
   1c84c:	ldr	r0, [fp, #-16]
   1c850:	bl	1ca28 <sprintf@plt+0xb104>
   1c854:	ldr	r0, [pc, #56]	; 1c894 <sprintf@plt+0xaf70>
   1c858:	ldr	r0, [pc, r0]
   1c85c:	ldr	r0, [r0]
   1c860:	add	r1, sp, #8
   1c864:	bl	116c0 <rb_dictionary_foreach_next@plt>
   1c868:	b	1c828 <sprintf@plt+0xaf04>
   1c86c:	ldr	r0, [pc, #28]	; 1c890 <sprintf@plt+0xaf6c>
   1c870:	add	r0, pc, r0
   1c874:	movw	r1, #0
   1c878:	strb	r1, [r0]
   1c87c:	mov	sp, fp
   1c880:	pop	{fp, pc}
   1c884:	andeq	r8, r1, r4, ror sl
   1c888:	andeq	r3, r1, r8, asr #18
   1c88c:	andeq	r3, r1, r4, lsr r9
   1c890:	andeq	r8, r1, ip, asr r9
   1c894:	andeq	r3, r1, r8, lsl #18
   1c898:	andeq	r8, r1, r8, lsl #20
   1c89c:	push	{fp, lr}
   1c8a0:	mov	fp, sp
   1c8a4:	sub	sp, sp, #16
   1c8a8:	ldr	r0, [pc, #88]	; 1c908 <sprintf@plt+0xafe4>
   1c8ac:	ldr	r0, [pc, r0]
   1c8b0:	ldr	r0, [r0]
   1c8b4:	add	r1, sp, #4
   1c8b8:	bl	11708 <rb_dictionary_foreach_start@plt>
   1c8bc:	ldr	r0, [pc, #72]	; 1c90c <sprintf@plt+0xafe8>
   1c8c0:	ldr	r0, [pc, r0]
   1c8c4:	ldr	r0, [r0]
   1c8c8:	add	r1, sp, #4
   1c8cc:	bl	11618 <rb_dictionary_foreach_cur@plt>
   1c8d0:	str	r0, [fp, #-4]
   1c8d4:	movw	r1, #0
   1c8d8:	cmp	r0, r1
   1c8dc:	beq	1c900 <sprintf@plt+0xafdc>
   1c8e0:	ldr	r0, [fp, #-4]
   1c8e4:	bl	1ca28 <sprintf@plt+0xb104>
   1c8e8:	ldr	r0, [pc, #32]	; 1c910 <sprintf@plt+0xafec>
   1c8ec:	ldr	r0, [pc, r0]
   1c8f0:	ldr	r0, [r0]
   1c8f4:	add	r1, sp, #4
   1c8f8:	bl	116c0 <rb_dictionary_foreach_next@plt>
   1c8fc:	b	1c8bc <sprintf@plt+0xaf98>
   1c900:	mov	sp, fp
   1c904:	pop	{fp, pc}
   1c908:			; <UNDEFINED> instruction: 0x000138b4
   1c90c:	andeq	r3, r1, r0, lsr #17
   1c910:	andeq	r3, r1, r4, ror r8
   1c914:	push	{fp, lr}
   1c918:	mov	fp, sp
   1c91c:	sub	sp, sp, #24
   1c920:	ldr	r1, [pc, #232]	; 1ca10 <sprintf@plt+0xb0ec>
   1c924:	add	r1, pc, r1
   1c928:	str	r0, [fp, #-8]
   1c92c:	ldrb	r0, [r1]
   1c930:	tst	r0, #1
   1c934:	beq	1c94c <sprintf@plt+0xb028>
   1c938:	ldr	r0, [pc, #212]	; 1ca14 <sprintf@plt+0xb0f0>
   1c93c:	add	r0, pc, r0
   1c940:	ldr	r0, [r0, #8]
   1c944:	cmp	r0, #0
   1c948:	bne	1c97c <sprintf@plt+0xb058>
   1c94c:	ldr	r0, [pc, #208]	; 1ca24 <sprintf@plt+0xb100>
   1c950:	ldr	r0, [pc, r0]
   1c954:	ldr	r1, [fp, #-8]
   1c958:	ldr	r0, [r0, #12]
   1c95c:	str	r0, [sp, #12]
   1c960:	mov	r0, r1
   1c964:	ldr	r1, [sp, #12]
   1c968:	bl	13afc <sprintf@plt+0x21d8>
   1c96c:	movw	r0, #1
   1c970:	and	r0, r0, #1
   1c974:	strb	r0, [fp, #-1]
   1c978:	b	1ca00 <sprintf@plt+0xb0dc>
   1c97c:	ldr	r0, [fp, #-8]
   1c980:	bl	1dea4 <sprintf@plt+0xc580>
   1c984:	ldr	r0, [pc, #144]	; 1ca1c <sprintf@plt+0xb0f8>
   1c988:	ldr	r0, [pc, r0]
   1c98c:	ldr	lr, [fp, #-8]
   1c990:	ldr	r1, [r0, #12]
   1c994:	movw	r0, #16
   1c998:	str	lr, [sp, #8]
   1c99c:	str	r1, [sp, #4]
   1c9a0:	bl	1d728 <sprintf@plt+0xbe04>
   1c9a4:	ldr	r1, [sp, #8]
   1c9a8:	str	r0, [sp]
   1c9ac:	mov	r0, r1
   1c9b0:	ldr	r1, [sp, #4]
   1c9b4:	ldr	r2, [sp]
   1c9b8:	bl	1e044 <sprintf@plt+0xc720>
   1c9bc:	ldr	r0, [pc, #84]	; 1ca18 <sprintf@plt+0xb0f4>
   1c9c0:	add	r1, pc, r0
   1c9c4:	ldr	r0, [fp, #-8]
   1c9c8:	bl	1e074 <sprintf@plt+0xc750>
   1c9cc:	tst	r0, #1
   1c9d0:	beq	1c9f4 <sprintf@plt+0xb0d0>
   1c9d4:	ldr	r0, [pc, #68]	; 1ca20 <sprintf@plt+0xb0fc>
   1c9d8:	add	r1, pc, r0
   1c9dc:	ldr	r0, [fp, #-8]
   1c9e0:	bl	1e074 <sprintf@plt+0xc750>
   1c9e4:	tst	r0, #1
   1c9e8:	beq	1c9f4 <sprintf@plt+0xb0d0>
   1c9ec:	ldr	r0, [fp, #-8]
   1c9f0:	bl	1e0dc <sprintf@plt+0xc7b8>
   1c9f4:	movw	r0, #1
   1c9f8:	and	r0, r0, #1
   1c9fc:	strb	r0, [fp, #-1]
   1ca00:	ldrb	r0, [fp, #-1]
   1ca04:	and	r0, r0, #1
   1ca08:	mov	sp, fp
   1ca0c:	pop	{fp, pc}
   1ca10:	andeq	r8, r1, r8, lsr #17
   1ca14:	muleq	r1, r4, r8
   1ca18:	andeq	r2, r0, pc, lsl r9
   1ca1c:	andeq	r3, r1, r4, lsl #16
   1ca20:	andeq	r2, r0, r7, ror #21
   1ca24:	andeq	r3, r1, ip, lsr r8
   1ca28:	push	{fp, lr}
   1ca2c:	mov	fp, sp
   1ca30:	sub	sp, sp, #40	; 0x28
   1ca34:	ldr	r1, [pc, #352]	; 1cb9c <sprintf@plt+0xb278>
   1ca38:	ldr	r1, [pc, r1]
   1ca3c:	str	r0, [fp, #-4]
   1ca40:	ldr	r0, [fp, #-4]
   1ca44:	ldr	r1, [r1, #12]
   1ca48:	bl	1d6b8 <sprintf@plt+0xbd94>
   1ca4c:	str	r0, [fp, #-8]
   1ca50:	ldr	r0, [fp, #-8]
   1ca54:	movw	r1, #0
   1ca58:	cmp	r0, r1
   1ca5c:	beq	1cb94 <sprintf@plt+0xb270>
   1ca60:	ldr	r0, [pc, #312]	; 1cba0 <sprintf@plt+0xb27c>
   1ca64:	add	r1, pc, r0
   1ca68:	ldr	r0, [fp, #-4]
   1ca6c:	ldr	r0, [r0]
   1ca70:	bl	12b74 <sprintf@plt+0x1250>
   1ca74:	ldr	r0, [fp, #-8]
   1ca78:	ldr	r0, [r0]
   1ca7c:	str	r0, [fp, #-12]
   1ca80:	ldr	r0, [fp, #-12]
   1ca84:	movw	r1, #0
   1ca88:	cmp	r0, r1
   1ca8c:	beq	1caa0 <sprintf@plt+0xb17c>
   1ca90:	ldr	r0, [fp, #-12]
   1ca94:	ldr	r0, [r0, #8]
   1ca98:	str	r0, [sp, #16]
   1ca9c:	b	1caac <sprintf@plt+0xb188>
   1caa0:	movw	r0, #0
   1caa4:	str	r0, [sp, #16]
   1caa8:	b	1caac <sprintf@plt+0xb188>
   1caac:	ldr	r0, [sp, #16]
   1cab0:	str	r0, [fp, #-16]
   1cab4:	ldr	r0, [fp, #-12]
   1cab8:	movw	r1, #0
   1cabc:	cmp	r0, r1
   1cac0:	beq	1cb24 <sprintf@plt+0xb200>
   1cac4:	ldr	r0, [fp, #-12]
   1cac8:	ldr	r0, [r0]
   1cacc:	str	r0, [sp, #20]
   1cad0:	ldr	r0, [sp, #20]
   1cad4:	ldr	r0, [r0, #4]
   1cad8:	bl	11768 <rb_close@plt>
   1cadc:	ldr	r0, [sp, #20]
   1cae0:	bl	1d6e0 <sprintf@plt+0xbdbc>
   1cae4:	ldr	r0, [fp, #-16]
   1cae8:	str	r0, [fp, #-12]
   1caec:	ldr	r0, [fp, #-12]
   1caf0:	movw	r1, #0
   1caf4:	cmp	r0, r1
   1caf8:	beq	1cb0c <sprintf@plt+0xb1e8>
   1cafc:	ldr	r0, [fp, #-12]
   1cb00:	ldr	r0, [r0, #8]
   1cb04:	str	r0, [sp, #12]
   1cb08:	b	1cb18 <sprintf@plt+0xb1f4>
   1cb0c:	movw	r0, #0
   1cb10:	str	r0, [sp, #12]
   1cb14:	b	1cb18 <sprintf@plt+0xb1f4>
   1cb18:	ldr	r0, [sp, #12]
   1cb1c:	str	r0, [fp, #-16]
   1cb20:	b	1cab4 <sprintf@plt+0xb190>
   1cb24:	ldr	r0, [fp, #-8]
   1cb28:	bl	1d6e0 <sprintf@plt+0xbdbc>
   1cb2c:	ldr	r0, [pc, #120]	; 1cbac <sprintf@plt+0xb288>
   1cb30:	ldr	r0, [pc, r0]
   1cb34:	ldr	lr, [fp, #-4]
   1cb38:	ldr	r1, [r0, #12]
   1cb3c:	mov	r0, lr
   1cb40:	movw	r2, #0
   1cb44:	bl	1e044 <sprintf@plt+0xc720>
   1cb48:	ldr	r0, [pc, #88]	; 1cba8 <sprintf@plt+0xb284>
   1cb4c:	ldr	r0, [pc, r0]
   1cb50:	ldr	r1, [fp, #-4]
   1cb54:	ldr	r0, [r0, #12]
   1cb58:	str	r0, [sp, #8]
   1cb5c:	mov	r0, r1
   1cb60:	ldr	r1, [sp, #8]
   1cb64:	movw	r2, #0
   1cb68:	bl	1e748 <sprintf@plt+0xce24>
   1cb6c:	ldr	r0, [pc, #48]	; 1cba4 <sprintf@plt+0xb280>
   1cb70:	ldr	r0, [pc, r0]
   1cb74:	ldr	r1, [fp, #-4]
   1cb78:	ldr	r0, [r0, #12]
   1cb7c:	str	r0, [sp, #4]
   1cb80:	mov	r0, r1
   1cb84:	ldr	r1, [sp, #4]
   1cb88:	bl	13afc <sprintf@plt+0x21d8>
   1cb8c:	ldr	r0, [fp, #-4]
   1cb90:	bl	1e000 <sprintf@plt+0xc6dc>
   1cb94:	mov	sp, fp
   1cb98:	pop	{fp, pc}
   1cb9c:	andeq	r3, r1, r4, asr r7
   1cba0:	ldrdeq	r2, [r0], -ip
   1cba4:	andeq	r3, r1, ip, lsl r6
   1cba8:	andeq	r3, r1, r0, asr #12
   1cbac:	andeq	r3, r1, ip, asr r6
   1cbb0:	push	{fp, lr}
   1cbb4:	mov	fp, sp
   1cbb8:	sub	sp, sp, #16
   1cbbc:	ldr	r2, [pc, #128]	; 1cc44 <sprintf@plt+0xb320>
   1cbc0:	ldr	r2, [pc, r2]
   1cbc4:	str	r0, [fp, #-4]
   1cbc8:	str	r1, [sp, #8]
   1cbcc:	ldr	r0, [fp, #-4]
   1cbd0:	ldr	r1, [r2, #12]
   1cbd4:	bl	1d6b8 <sprintf@plt+0xbd94>
   1cbd8:	str	r0, [sp, #4]
   1cbdc:	ldr	r0, [sp, #4]
   1cbe0:	movw	r1, #0
   1cbe4:	cmp	r0, r1
   1cbe8:	beq	1cbfc <sprintf@plt+0xb2d8>
   1cbec:	ldr	r0, [sp, #4]
   1cbf0:	ldrb	r0, [r0, #12]
   1cbf4:	tst	r0, #1
   1cbf8:	beq	1cc00 <sprintf@plt+0xb2dc>
   1cbfc:	b	1cc3c <sprintf@plt+0xb318>
   1cc00:	ldr	r0, [pc, #64]	; 1cc48 <sprintf@plt+0xb324>
   1cc04:	add	r1, pc, r0
   1cc08:	ldr	r0, [fp, #-4]
   1cc0c:	bl	1e074 <sprintf@plt+0xc750>
   1cc10:	tst	r0, #1
   1cc14:	beq	1cc38 <sprintf@plt+0xb314>
   1cc18:	ldr	r0, [pc, #44]	; 1cc4c <sprintf@plt+0xb328>
   1cc1c:	add	r1, pc, r0
   1cc20:	ldr	r0, [fp, #-4]
   1cc24:	bl	1e074 <sprintf@plt+0xc750>
   1cc28:	tst	r0, #1
   1cc2c:	beq	1cc38 <sprintf@plt+0xb314>
   1cc30:	ldr	r0, [fp, #-4]
   1cc34:	bl	1e0dc <sprintf@plt+0xc7b8>
   1cc38:	b	1cc3c <sprintf@plt+0xb318>
   1cc3c:	mov	sp, fp
   1cc40:	pop	{fp, pc}
   1cc44:	andeq	r3, r1, ip, asr #11
   1cc48:	ldrdeq	r2, [r0], -fp
   1cc4c:	andeq	r2, r0, r3, lsr #17
   1cc50:	push	{r4, r5, fp, lr}
   1cc54:	add	fp, sp, #8
   1cc58:	sub	sp, sp, #264	; 0x108
   1cc5c:	str	r0, [fp, #-16]
   1cc60:	strh	r1, [fp, #-18]	; 0xffffffee
   1cc64:	movw	r0, #1
   1cc68:	str	r0, [sp, #100]	; 0x64
   1cc6c:	ldr	r0, [fp, #-16]
   1cc70:	add	r1, sp, #116	; 0x74
   1cc74:	bl	11720 <rb_inet_pton_sock@plt>
   1cc78:	cmp	r0, #0
   1cc7c:	bne	1cca0 <sprintf@plt+0xb37c>
   1cc80:	ldr	r0, [pc, #1324]	; 1d1b4 <sprintf@plt+0xb890>
   1cc84:	add	r1, pc, r0
   1cc88:	ldr	r2, [fp, #-16]
   1cc8c:	ldrh	r3, [fp, #-18]	; 0xffffffee
   1cc90:	movw	r0, #67	; 0x43
   1cc94:	bl	12bfc <sprintf@plt+0x12d8>
   1cc98:	movw	r0, #3
   1cc9c:	bl	1190c <exit@plt>
   1cca0:	b	1cca4 <sprintf@plt+0xb380>
   1cca4:	ldrh	r0, [sp, #116]	; 0x74
   1cca8:	cmp	r0, #2
   1ccac:	bne	1ccc0 <sprintf@plt+0xb39c>
   1ccb0:	ldrh	r0, [fp, #-18]	; 0xffffffee
   1ccb4:	bl	11654 <htons@plt>
   1ccb8:	strh	r0, [sp, #118]	; 0x76
   1ccbc:	b	1cccc <sprintf@plt+0xb3a8>
   1ccc0:	ldrh	r0, [fp, #-18]	; 0xffffffee
   1ccc4:	bl	11654 <htons@plt>
   1ccc8:	strh	r0, [sp, #118]	; 0x76
   1cccc:	b	1ccd0 <sprintf@plt+0xb3ac>
   1ccd0:	ldrh	r0, [sp, #116]	; 0x74
   1ccd4:	cmp	r0, #10
   1ccd8:	bne	1ce3c <sprintf@plt+0xb518>
   1ccdc:	ldr	r0, [pc, #1240]	; 1d1bc <sprintf@plt+0xb898>
   1cce0:	add	r0, pc, r0
   1cce4:	add	r0, r0, #188	; 0xbc
   1cce8:	str	r0, [fp, #-28]	; 0xffffffe4
   1ccec:	add	r0, sp, #116	; 0x74
   1ccf0:	str	r0, [sp, #96]	; 0x60
   1ccf4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ccf8:	add	r0, r0, #56	; 0x38
   1ccfc:	str	r0, [sp, #92]	; 0x5c
   1cd00:	ldr	r0, [sp, #96]	; 0x60
   1cd04:	add	r0, r0, #8
   1cd08:	str	r0, [sp, #88]	; 0x58
   1cd0c:	ldr	r0, [sp, #92]	; 0x5c
   1cd10:	add	r0, r0, #8
   1cd14:	str	r0, [sp, #84]	; 0x54
   1cd18:	ldr	r0, [sp, #88]	; 0x58
   1cd1c:	ldr	r0, [r0]
   1cd20:	ldr	r1, [sp, #84]	; 0x54
   1cd24:	ldr	r1, [r1]
   1cd28:	cmp	r0, r1
   1cd2c:	movw	r0, #0
   1cd30:	str	r0, [sp, #68]	; 0x44
   1cd34:	bne	1cd98 <sprintf@plt+0xb474>
   1cd38:	ldr	r0, [sp, #88]	; 0x58
   1cd3c:	ldr	r0, [r0, #4]
   1cd40:	ldr	r1, [sp, #84]	; 0x54
   1cd44:	ldr	r1, [r1, #4]
   1cd48:	cmp	r0, r1
   1cd4c:	movw	r0, #0
   1cd50:	str	r0, [sp, #68]	; 0x44
   1cd54:	bne	1cd98 <sprintf@plt+0xb474>
   1cd58:	ldr	r0, [sp, #88]	; 0x58
   1cd5c:	ldr	r0, [r0, #8]
   1cd60:	ldr	r1, [sp, #84]	; 0x54
   1cd64:	ldr	r1, [r1, #8]
   1cd68:	cmp	r0, r1
   1cd6c:	movw	r0, #0
   1cd70:	str	r0, [sp, #68]	; 0x44
   1cd74:	bne	1cd98 <sprintf@plt+0xb474>
   1cd78:	ldr	r0, [sp, #88]	; 0x58
   1cd7c:	ldr	r0, [r0, #12]
   1cd80:	ldr	r1, [sp, #84]	; 0x54
   1cd84:	ldr	r1, [r1, #12]
   1cd88:	cmp	r0, r1
   1cd8c:	movw	r0, #0
   1cd90:	moveq	r0, #1
   1cd94:	str	r0, [sp, #68]	; 0x44
   1cd98:	ldr	r0, [sp, #68]	; 0x44
   1cd9c:	and	r0, r0, #1
   1cda0:	str	r0, [sp, #80]	; 0x50
   1cda4:	ldr	r0, [sp, #80]	; 0x50
   1cda8:	cmp	r0, #0
   1cdac:	beq	1ce38 <sprintf@plt+0xb514>
   1cdb0:	ldrh	r0, [sp, #116]	; 0x74
   1cdb4:	cmp	r0, #2
   1cdb8:	bne	1cdc8 <sprintf@plt+0xb4a4>
   1cdbc:	ldrh	r0, [sp, #118]	; 0x76
   1cdc0:	str	r0, [sp, #64]	; 0x40
   1cdc4:	b	1cdd0 <sprintf@plt+0xb4ac>
   1cdc8:	ldrh	r0, [sp, #118]	; 0x76
   1cdcc:	str	r0, [sp, #64]	; 0x40
   1cdd0:	ldr	r0, [sp, #64]	; 0x40
   1cdd4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1cdd8:	ldrh	r1, [r1, #56]	; 0x38
   1cddc:	cmp	r1, #2
   1cde0:	str	r0, [sp, #60]	; 0x3c
   1cde4:	bne	1cdf8 <sprintf@plt+0xb4d4>
   1cde8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1cdec:	ldrh	r0, [r0, #58]	; 0x3a
   1cdf0:	str	r0, [sp, #56]	; 0x38
   1cdf4:	b	1ce04 <sprintf@plt+0xb4e0>
   1cdf8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1cdfc:	ldrh	r0, [r0, #58]	; 0x3a
   1ce00:	str	r0, [sp, #56]	; 0x38
   1ce04:	ldr	r0, [sp, #56]	; 0x38
   1ce08:	ldr	r1, [sp, #60]	; 0x3c
   1ce0c:	cmp	r1, r0
   1ce10:	bne	1ce38 <sprintf@plt+0xb514>
   1ce14:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ce18:	ldr	r0, [r0, #184]	; 0xb8
   1ce1c:	movw	r1, #0
   1ce20:	cmp	r0, r1
   1ce24:	beq	1ce38 <sprintf@plt+0xb514>
   1ce28:	movw	r0, #0
   1ce2c:	and	r0, r0, #1
   1ce30:	strb	r0, [fp, #-9]
   1ce34:	b	1d1a4 <sprintf@plt+0xb880>
   1ce38:	b	1cf00 <sprintf@plt+0xb5dc>
   1ce3c:	ldr	r0, [pc, #884]	; 1d1b8 <sprintf@plt+0xb894>
   1ce40:	add	r0, pc, r0
   1ce44:	str	r0, [fp, #-28]	; 0xffffffe4
   1ce48:	add	r0, sp, #116	; 0x74
   1ce4c:	str	r0, [sp, #76]	; 0x4c
   1ce50:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ce54:	add	r0, r0, #56	; 0x38
   1ce58:	str	r0, [sp, #72]	; 0x48
   1ce5c:	ldr	r0, [sp, #76]	; 0x4c
   1ce60:	ldr	r0, [r0, #4]
   1ce64:	ldr	r1, [sp, #72]	; 0x48
   1ce68:	ldr	r1, [r1, #4]
   1ce6c:	cmp	r0, r1
   1ce70:	bne	1cefc <sprintf@plt+0xb5d8>
   1ce74:	ldrh	r0, [sp, #116]	; 0x74
   1ce78:	cmp	r0, #2
   1ce7c:	bne	1ce8c <sprintf@plt+0xb568>
   1ce80:	ldrh	r0, [sp, #118]	; 0x76
   1ce84:	str	r0, [sp, #52]	; 0x34
   1ce88:	b	1ce94 <sprintf@plt+0xb570>
   1ce8c:	ldrh	r0, [sp, #118]	; 0x76
   1ce90:	str	r0, [sp, #52]	; 0x34
   1ce94:	ldr	r0, [sp, #52]	; 0x34
   1ce98:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ce9c:	ldrh	r1, [r1, #56]	; 0x38
   1cea0:	cmp	r1, #2
   1cea4:	str	r0, [sp, #48]	; 0x30
   1cea8:	bne	1cebc <sprintf@plt+0xb598>
   1ceac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ceb0:	ldrh	r0, [r0, #58]	; 0x3a
   1ceb4:	str	r0, [sp, #44]	; 0x2c
   1ceb8:	b	1cec8 <sprintf@plt+0xb5a4>
   1cebc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1cec0:	ldrh	r0, [r0, #58]	; 0x3a
   1cec4:	str	r0, [sp, #44]	; 0x2c
   1cec8:	ldr	r0, [sp, #44]	; 0x2c
   1cecc:	ldr	r1, [sp, #48]	; 0x30
   1ced0:	cmp	r1, r0
   1ced4:	bne	1cefc <sprintf@plt+0xb5d8>
   1ced8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1cedc:	ldr	r0, [r0, #184]	; 0xb8
   1cee0:	movw	r1, #0
   1cee4:	cmp	r0, r1
   1cee8:	beq	1cefc <sprintf@plt+0xb5d8>
   1ceec:	movw	r0, #0
   1cef0:	and	r0, r0, #1
   1cef4:	strb	r0, [fp, #-9]
   1cef8:	b	1d1a4 <sprintf@plt+0xb880>
   1cefc:	b	1cf00 <sprintf@plt+0xb5dc>
   1cf00:	ldr	r0, [pc, #696]	; 1d1c0 <sprintf@plt+0xb89c>
   1cf04:	add	r3, pc, r0
   1cf08:	ldrh	r0, [sp, #116]	; 0x74
   1cf0c:	movw	r1, #1
   1cf10:	movw	r2, #0
   1cf14:	bl	115dc <rb_socket@plt>
   1cf18:	str	r0, [sp, #104]	; 0x68
   1cf1c:	movw	r1, #0
   1cf20:	cmp	r0, r1
   1cf24:	bne	1cf58 <sprintf@plt+0xb634>
   1cf28:	bl	11918 <__errno_location@plt>
   1cf2c:	ldr	r0, [r0]
   1cf30:	bl	11528 <strerror@plt>
   1cf34:	ldr	lr, [pc, #680]	; 1d1e4 <sprintf@plt+0xb8c0>
   1cf38:	add	r1, pc, lr
   1cf3c:	movw	lr, #67	; 0x43
   1cf40:	str	r0, [sp, #40]	; 0x28
   1cf44:	mov	r0, lr
   1cf48:	ldr	r2, [sp, #40]	; 0x28
   1cf4c:	bl	12bfc <sprintf@plt+0x12d8>
   1cf50:	movw	r0, #3
   1cf54:	bl	1190c <exit@plt>
   1cf58:	ldr	r0, [sp, #104]	; 0x68
   1cf5c:	bl	115b8 <rb_get_fd@plt>
   1cf60:	add	lr, sp, #100	; 0x64
   1cf64:	movw	r1, #1
   1cf68:	movw	r2, #2
   1cf6c:	mov	r3, lr
   1cf70:	movw	lr, #4
   1cf74:	str	lr, [sp]
   1cf78:	bl	118e8 <setsockopt@plt>
   1cf7c:	cmp	r0, #0
   1cf80:	beq	1cfb4 <sprintf@plt+0xb690>
   1cf84:	bl	11918 <__errno_location@plt>
   1cf88:	ldr	r0, [r0]
   1cf8c:	bl	11528 <strerror@plt>
   1cf90:	ldr	lr, [pc, #584]	; 1d1e0 <sprintf@plt+0xb8bc>
   1cf94:	add	r1, pc, lr
   1cf98:	movw	lr, #67	; 0x43
   1cf9c:	str	r0, [sp, #36]	; 0x24
   1cfa0:	mov	r0, lr
   1cfa4:	ldr	r2, [sp, #36]	; 0x24
   1cfa8:	bl	12bfc <sprintf@plt+0x12d8>
   1cfac:	movw	r0, #3
   1cfb0:	bl	1190c <exit@plt>
   1cfb4:	ldr	r0, [sp, #104]	; 0x68
   1cfb8:	bl	115b8 <rb_get_fd@plt>
   1cfbc:	add	lr, sp, #116	; 0x74
   1cfc0:	ldrh	r1, [sp, #116]	; 0x74
   1cfc4:	cmp	r1, #2
   1cfc8:	movw	r1, #0
   1cfcc:	moveq	r1, #1
   1cfd0:	tst	r1, #1
   1cfd4:	movw	r1, #16
   1cfd8:	moveq	r1, #28
   1cfdc:	str	r1, [sp, #32]
   1cfe0:	mov	r1, lr
   1cfe4:	ldr	r2, [sp, #32]
   1cfe8:	bl	117b0 <bind@plt>
   1cfec:	cmp	r0, #0
   1cff0:	beq	1d034 <sprintf@plt+0xb710>
   1cff4:	bl	11918 <__errno_location@plt>
   1cff8:	ldr	r0, [r0]
   1cffc:	bl	11528 <strerror@plt>
   1d000:	ldr	lr, [pc, #468]	; 1d1dc <sprintf@plt+0xb8b8>
   1d004:	add	r1, pc, lr
   1d008:	movw	lr, #87	; 0x57
   1d00c:	str	r0, [sp, #28]
   1d010:	mov	r0, lr
   1d014:	ldr	r2, [sp, #28]
   1d018:	bl	12bfc <sprintf@plt+0x12d8>
   1d01c:	ldr	r0, [sp, #104]	; 0x68
   1d020:	bl	11768 <rb_close@plt>
   1d024:	movw	r0, #0
   1d028:	and	r0, r0, #1
   1d02c:	strb	r0, [fp, #-9]
   1d030:	b	1d1a4 <sprintf@plt+0xb880>
   1d034:	ldr	r0, [sp, #104]	; 0x68
   1d038:	movw	r1, #128	; 0x80
   1d03c:	movw	r2, #0
   1d040:	bl	118c4 <rb_listen@plt>
   1d044:	cmp	r0, #0
   1d048:	beq	1d08c <sprintf@plt+0xb768>
   1d04c:	bl	11918 <__errno_location@plt>
   1d050:	ldr	r0, [r0]
   1d054:	bl	11528 <strerror@plt>
   1d058:	ldr	lr, [pc, #376]	; 1d1d8 <sprintf@plt+0xb8b4>
   1d05c:	add	r1, pc, lr
   1d060:	movw	lr, #87	; 0x57
   1d064:	str	r0, [sp, #24]
   1d068:	mov	r0, lr
   1d06c:	ldr	r2, [sp, #24]
   1d070:	bl	12bfc <sprintf@plt+0x12d8>
   1d074:	ldr	r0, [sp, #104]	; 0x68
   1d078:	bl	11768 <rb_close@plt>
   1d07c:	movw	r0, #0
   1d080:	and	r0, r0, #1
   1d084:	strb	r0, [fp, #-9]
   1d088:	b	1d1a4 <sprintf@plt+0xb880>
   1d08c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d090:	ldr	r0, [r0, #184]	; 0xb8
   1d094:	movw	r1, #0
   1d098:	cmp	r0, r1
   1d09c:	beq	1d0ac <sprintf@plt+0xb788>
   1d0a0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d0a4:	ldr	r0, [r0, #184]	; 0xb8
   1d0a8:	bl	11768 <rb_close@plt>
   1d0ac:	ldr	r0, [pc, #272]	; 1d1c4 <sprintf@plt+0xb8a0>
   1d0b0:	ldr	r0, [pc, r0]
   1d0b4:	ldr	r1, [sp, #104]	; 0x68
   1d0b8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1d0bc:	str	r1, [r2, #184]	; 0xb8
   1d0c0:	ldr	r0, [r0]
   1d0c4:	add	r1, sp, #108	; 0x6c
   1d0c8:	bl	11708 <rb_dictionary_foreach_start@plt>
   1d0cc:	ldr	r0, [pc, #244]	; 1d1c8 <sprintf@plt+0xb8a4>
   1d0d0:	ldr	r0, [pc, r0]
   1d0d4:	ldr	r0, [r0]
   1d0d8:	add	r1, sp, #108	; 0x6c
   1d0dc:	bl	11618 <rb_dictionary_foreach_cur@plt>
   1d0e0:	str	r0, [fp, #-24]	; 0xffffffe8
   1d0e4:	movw	r1, #0
   1d0e8:	cmp	r0, r1
   1d0ec:	beq	1d110 <sprintf@plt+0xb7ec>
   1d0f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d0f4:	bl	1ca28 <sprintf@plt+0xb104>
   1d0f8:	ldr	r0, [pc, #212]	; 1d1d4 <sprintf@plt+0xb8b0>
   1d0fc:	ldr	r0, [pc, r0]
   1d100:	ldr	r0, [r0]
   1d104:	add	r1, sp, #108	; 0x6c
   1d108:	bl	116c0 <rb_dictionary_foreach_next@plt>
   1d10c:	b	1d0cc <sprintf@plt+0xb7a8>
   1d110:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d114:	ldr	r1, [fp, #-16]
   1d118:	movw	r2, #53	; 0x35
   1d11c:	bl	116a8 <rb_strlcpy@plt>
   1d120:	ldr	r1, [pc, #164]	; 1d1cc <sprintf@plt+0xb8a8>
   1d124:	add	r2, pc, r1
   1d128:	ldr	r1, [pc, #160]	; 1d1d0 <sprintf@plt+0xb8ac>
   1d12c:	add	r1, pc, r1
   1d130:	ldrh	lr, [fp, #-18]	; 0xffffffee
   1d134:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d138:	strh	lr, [r3, #54]	; 0x36
   1d13c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d140:	add	r3, r3, #56	; 0x38
   1d144:	add	lr, sp, #116	; 0x74
   1d148:	str	r0, [sp, #20]
   1d14c:	mov	r0, r3
   1d150:	str	r1, [sp, #16]
   1d154:	mov	r1, lr
   1d158:	movw	r3, #128	; 0x80
   1d15c:	str	r2, [sp, #12]
   1d160:	mov	r2, r3
   1d164:	bl	11750 <memcpy@plt>
   1d168:	movw	r0, #1
   1d16c:	ldr	r1, [sp, #16]
   1d170:	strb	r0, [r1]
   1d174:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d178:	ldr	r0, [r0, #184]	; 0xb8
   1d17c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1d180:	movw	r1, #0
   1d184:	ldr	r3, [sp, #12]
   1d188:	str	r2, [sp, #8]
   1d18c:	mov	r2, r3
   1d190:	ldr	r3, [sp, #8]
   1d194:	bl	1187c <rb_accept_tcp@plt>
   1d198:	movw	r0, #1
   1d19c:	and	r0, r0, #1
   1d1a0:	strb	r0, [fp, #-9]
   1d1a4:	ldrb	r0, [fp, #-9]
   1d1a8:	and	r0, r0, #1
   1d1ac:	sub	sp, fp, #8
   1d1b0:	pop	{r4, r5, fp, pc}
   1d1b4:	andeq	r2, r0, r2, asr #19
   1d1b8:	andeq	r8, r1, r4, lsl r2
   1d1bc:	andeq	r8, r1, r4, ror r3
   1d1c0:	andeq	r2, r0, r2, ror #14
   1d1c4:	strheq	r3, [r1], -r0
   1d1c8:	muleq	r1, r0, r0
   1d1cc:	strheq	r0, [r0], -ip
   1d1d0:	andeq	r8, r1, r0, lsr #1
   1d1d4:	andeq	r3, r1, r4, rrx
   1d1d8:	andeq	r2, r0, r1, lsl #13
   1d1dc:			; <UNDEFINED> instruction: 0x000026ba
   1d1e0:	andeq	r2, r0, r4, lsl #14
   1d1e4:	andeq	r2, r0, r2, asr #14
   1d1e8:	push	{fp, lr}
   1d1ec:	mov	fp, sp
   1d1f0:	sub	sp, sp, #216	; 0xd8
   1d1f4:	ldr	ip, [fp, #8]
   1d1f8:	str	r0, [fp, #-4]
   1d1fc:	str	r1, [fp, #-8]
   1d200:	str	r2, [fp, #-12]
   1d204:	str	r3, [fp, #-16]
   1d208:	movw	r0, #0
   1d20c:	str	r0, [fp, #-20]	; 0xffffffec
   1d210:	ldr	r0, [fp, #8]
   1d214:	str	r0, [fp, #-24]	; 0xffffffe8
   1d218:	movw	r0, #128	; 0x80
   1d21c:	str	r0, [sp, #60]	; 0x3c
   1d220:	ldr	r0, [fp, #-8]
   1d224:	cmp	r0, #0
   1d228:	str	ip, [sp, #20]
   1d22c:	bne	1d240 <sprintf@plt+0xb91c>
   1d230:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d234:	movw	r1, #0
   1d238:	cmp	r0, r1
   1d23c:	bne	1d24c <sprintf@plt+0xb928>
   1d240:	ldr	r0, [fp, #-4]
   1d244:	bl	11768 <rb_close@plt>
   1d248:	b	1d470 <sprintf@plt+0xbb4c>
   1d24c:	ldr	r0, [fp, #-4]
   1d250:	bl	115b8 <rb_get_fd@plt>
   1d254:	add	lr, sp, #64	; 0x40
   1d258:	mov	r1, lr
   1d25c:	add	r2, sp, #60	; 0x3c
   1d260:	bl	11558 <getsockname@plt>
   1d264:	cmp	r0, #0
   1d268:	beq	1d278 <sprintf@plt+0xb954>
   1d26c:	ldr	r0, [fp, #-4]
   1d270:	bl	11768 <rb_close@plt>
   1d274:	b	1d470 <sprintf@plt+0xbb4c>
   1d278:	ldr	r0, [pc, #504]	; 1d478 <sprintf@plt+0xbb54>
   1d27c:	ldr	r0, [pc, r0]
   1d280:	ldr	r0, [r0]
   1d284:	add	r1, sp, #52	; 0x34
   1d288:	bl	11708 <rb_dictionary_foreach_start@plt>
   1d28c:	ldr	r0, [pc, #488]	; 1d47c <sprintf@plt+0xbb58>
   1d290:	ldr	r0, [pc, r0]
   1d294:	ldr	r0, [r0]
   1d298:	add	r1, sp, #52	; 0x34
   1d29c:	bl	11618 <rb_dictionary_foreach_cur@plt>
   1d2a0:	str	r0, [fp, #-20]	; 0xffffffec
   1d2a4:	movw	r1, #0
   1d2a8:	cmp	r0, r1
   1d2ac:	beq	1d468 <sprintf@plt+0xbb44>
   1d2b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d2b4:	ldrh	r0, [r0, #248]	; 0xf8
   1d2b8:	ldrh	r1, [sp, #64]	; 0x40
   1d2bc:	cmp	r0, r1
   1d2c0:	beq	1d2c8 <sprintf@plt+0xb9a4>
   1d2c4:	b	1d450 <sprintf@plt+0xbb2c>
   1d2c8:	ldrh	r0, [sp, #64]	; 0x40
   1d2cc:	cmp	r0, #2
   1d2d0:	str	r0, [sp, #16]
   1d2d4:	beq	1d2ec <sprintf@plt+0xb9c8>
   1d2d8:	b	1d2dc <sprintf@plt+0xb9b8>
   1d2dc:	ldr	r0, [sp, #16]
   1d2e0:	cmp	r0, #10
   1d2e4:	beq	1d344 <sprintf@plt+0xba20>
   1d2e8:	b	1d434 <sprintf@plt+0xbb10>
   1d2ec:	add	r0, sp, #64	; 0x40
   1d2f0:	str	r0, [sp, #48]	; 0x30
   1d2f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d2f8:	add	r0, r0, #248	; 0xf8
   1d2fc:	str	r0, [sp, #44]	; 0x2c
   1d300:	ldr	r0, [sp, #48]	; 0x30
   1d304:	ldr	r0, [r0, #4]
   1d308:	ldr	r1, [sp, #44]	; 0x2c
   1d30c:	ldr	r1, [r1, #4]
   1d310:	cmp	r0, r1
   1d314:	bne	1d340 <sprintf@plt+0xba1c>
   1d318:	ldr	r0, [pc, #356]	; 1d484 <sprintf@plt+0xbb60>
   1d31c:	add	r2, pc, r0
   1d320:	ldr	r0, [fp, #-4]
   1d324:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d328:	movw	r3, #1
   1d32c:	str	r1, [sp, #12]
   1d330:	mov	r1, r3
   1d334:	ldr	r3, [sp, #12]
   1d338:	bl	115ac <rb_setselect@plt>
   1d33c:	b	1d470 <sprintf@plt+0xbb4c>
   1d340:	b	1d44c <sprintf@plt+0xbb28>
   1d344:	add	r0, sp, #64	; 0x40
   1d348:	str	r0, [sp, #40]	; 0x28
   1d34c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d350:	add	r0, r0, #248	; 0xf8
   1d354:	str	r0, [sp, #36]	; 0x24
   1d358:	ldr	r0, [sp, #40]	; 0x28
   1d35c:	add	r0, r0, #8
   1d360:	str	r0, [sp, #32]
   1d364:	ldr	r0, [sp, #36]	; 0x24
   1d368:	add	r0, r0, #8
   1d36c:	str	r0, [sp, #28]
   1d370:	ldr	r0, [sp, #32]
   1d374:	ldr	r0, [r0]
   1d378:	ldr	r1, [sp, #28]
   1d37c:	ldr	r1, [r1]
   1d380:	cmp	r0, r1
   1d384:	movw	r0, #0
   1d388:	str	r0, [sp, #8]
   1d38c:	bne	1d3f0 <sprintf@plt+0xbacc>
   1d390:	ldr	r0, [sp, #32]
   1d394:	ldr	r0, [r0, #4]
   1d398:	ldr	r1, [sp, #28]
   1d39c:	ldr	r1, [r1, #4]
   1d3a0:	cmp	r0, r1
   1d3a4:	movw	r0, #0
   1d3a8:	str	r0, [sp, #8]
   1d3ac:	bne	1d3f0 <sprintf@plt+0xbacc>
   1d3b0:	ldr	r0, [sp, #32]
   1d3b4:	ldr	r0, [r0, #8]
   1d3b8:	ldr	r1, [sp, #28]
   1d3bc:	ldr	r1, [r1, #8]
   1d3c0:	cmp	r0, r1
   1d3c4:	movw	r0, #0
   1d3c8:	str	r0, [sp, #8]
   1d3cc:	bne	1d3f0 <sprintf@plt+0xbacc>
   1d3d0:	ldr	r0, [sp, #32]
   1d3d4:	ldr	r0, [r0, #12]
   1d3d8:	ldr	r1, [sp, #28]
   1d3dc:	ldr	r1, [r1, #12]
   1d3e0:	cmp	r0, r1
   1d3e4:	movw	r0, #0
   1d3e8:	moveq	r0, #1
   1d3ec:	str	r0, [sp, #8]
   1d3f0:	ldr	r0, [sp, #8]
   1d3f4:	and	r0, r0, #1
   1d3f8:	str	r0, [sp, #24]
   1d3fc:	ldr	r0, [sp, #24]
   1d400:	cmp	r0, #0
   1d404:	beq	1d430 <sprintf@plt+0xbb0c>
   1d408:	ldr	r0, [pc, #112]	; 1d480 <sprintf@plt+0xbb5c>
   1d40c:	add	r2, pc, r0
   1d410:	ldr	r0, [fp, #-4]
   1d414:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d418:	movw	r3, #1
   1d41c:	str	r1, [sp, #4]
   1d420:	mov	r1, r3
   1d424:	ldr	r3, [sp, #4]
   1d428:	bl	115ac <rb_setselect@plt>
   1d42c:	b	1d470 <sprintf@plt+0xbb4c>
   1d430:	b	1d44c <sprintf@plt+0xbb28>
   1d434:	ldr	r0, [pc, #76]	; 1d488 <sprintf@plt+0xbb64>
   1d438:	add	r1, pc, r0
   1d43c:	movw	r0, #67	; 0x43
   1d440:	bl	12bfc <sprintf@plt+0x12d8>
   1d444:	movw	r0, #3
   1d448:	bl	1190c <exit@plt>
   1d44c:	b	1d450 <sprintf@plt+0xbb2c>
   1d450:	ldr	r0, [pc, #52]	; 1d48c <sprintf@plt+0xbb68>
   1d454:	ldr	r0, [pc, r0]
   1d458:	ldr	r0, [r0]
   1d45c:	add	r1, sp, #52	; 0x34
   1d460:	bl	116c0 <rb_dictionary_foreach_next@plt>
   1d464:	b	1d28c <sprintf@plt+0xb968>
   1d468:	ldr	r0, [fp, #-4]
   1d46c:	bl	11768 <rb_close@plt>
   1d470:	mov	sp, fp
   1d474:	pop	{fp, pc}
   1d478:	andeq	r2, r1, r4, ror #29
   1d47c:	ldrdeq	r2, [r1], -r0
   1d480:	andeq	r0, r0, ip, ror r0
   1d484:	andeq	r0, r0, ip, ror #2
   1d488:	andeq	r2, r0, r6, asr #5
   1d48c:	andeq	r2, r1, ip, lsl #26
   1d490:	push	{fp, lr}
   1d494:	mov	fp, sp
   1d498:	sub	sp, sp, #192	; 0xc0
   1d49c:	ldr	r2, [pc, #512]	; 1d6a4 <sprintf@plt+0xbd80>
   1d4a0:	ldr	r2, [pc, r2]
   1d4a4:	str	r0, [fp, #-4]
   1d4a8:	str	r1, [fp, #-8]
   1d4ac:	ldr	r0, [fp, #-8]
   1d4b0:	str	r0, [fp, #-16]
   1d4b4:	ldr	r0, [fp, #-16]
   1d4b8:	ldr	r1, [r2, #12]
   1d4bc:	bl	1d6b8 <sprintf@plt+0xbd94>
   1d4c0:	add	r1, sp, #44	; 0x2c
   1d4c4:	str	r0, [fp, #-20]	; 0xffffffec
   1d4c8:	ldr	r0, [fp, #-4]
   1d4cc:	movw	r2, #128	; 0x80
   1d4d0:	bl	116e4 <rb_read@plt>
   1d4d4:	str	r0, [sp, #40]	; 0x28
   1d4d8:	cmp	r0, #0
   1d4dc:	bge	1d51c <sprintf@plt+0xbbf8>
   1d4e0:	bl	11918 <__errno_location@plt>
   1d4e4:	ldr	r0, [r0]
   1d4e8:	bl	11564 <rb_ignore_errno@plt>
   1d4ec:	cmp	r0, #0
   1d4f0:	beq	1d51c <sprintf@plt+0xbbf8>
   1d4f4:	ldr	r0, [pc, #440]	; 1d6b4 <sprintf@plt+0xbd90>
   1d4f8:	add	r2, pc, r0
   1d4fc:	ldr	r0, [fp, #-4]
   1d500:	ldr	r1, [fp, #-16]
   1d504:	movw	r3, #1
   1d508:	str	r1, [sp, #20]
   1d50c:	mov	r1, r3
   1d510:	ldr	r3, [sp, #20]
   1d514:	bl	115ac <rb_setselect@plt>
   1d518:	b	1d69c <sprintf@plt+0xbd78>
   1d51c:	ldr	r0, [sp, #40]	; 0x28
   1d520:	cmp	r0, #0
   1d524:	bgt	1d534 <sprintf@plt+0xbc10>
   1d528:	ldr	r0, [fp, #-4]
   1d52c:	bl	11768 <rb_close@plt>
   1d530:	b	1d69c <sprintf@plt+0xbd78>
   1d534:	b	1d538 <sprintf@plt+0xbc14>
   1d538:	ldr	r0, [pc, #360]	; 1d6a8 <sprintf@plt+0xbd84>
   1d53c:	add	r0, pc, r0
   1d540:	ldr	r0, [r0]
   1d544:	str	r0, [fp, #-12]
   1d548:	ldr	r0, [fp, #-12]
   1d54c:	movw	r1, #0
   1d550:	cmp	r0, r1
   1d554:	beq	1d694 <sprintf@plt+0xbd70>
   1d558:	add	r1, sp, #44	; 0x2c
   1d55c:	ldr	r0, [fp, #-12]
   1d560:	ldr	r0, [r0]
   1d564:	str	r0, [sp, #36]	; 0x24
   1d568:	ldr	r0, [sp, #36]	; 0x24
   1d56c:	ldr	r2, [sp, #36]	; 0x24
   1d570:	str	r0, [sp, #16]
   1d574:	mov	r0, r2
   1d578:	str	r1, [sp, #12]
   1d57c:	bl	1172c <strlen@plt>
   1d580:	ldr	r1, [sp, #16]
   1d584:	str	r0, [sp, #8]
   1d588:	mov	r0, r1
   1d58c:	ldr	r1, [sp, #12]
   1d590:	ldr	r2, [sp, #8]
   1d594:	bl	118d0 <strncmp@plt>
   1d598:	cmp	r0, #0
   1d59c:	bne	1d680 <sprintf@plt+0xbd5c>
   1d5a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d5a4:	ldr	r0, [r0]
   1d5a8:	str	r0, [sp, #32]
   1d5ac:	ldr	r0, [sp, #32]
   1d5b0:	movw	r1, #0
   1d5b4:	cmp	r0, r1
   1d5b8:	beq	1d5cc <sprintf@plt+0xbca8>
   1d5bc:	ldr	r0, [sp, #32]
   1d5c0:	ldr	r0, [r0, #8]
   1d5c4:	str	r0, [sp, #4]
   1d5c8:	b	1d5d8 <sprintf@plt+0xbcb4>
   1d5cc:	movw	r0, #0
   1d5d0:	str	r0, [sp, #4]
   1d5d4:	b	1d5d8 <sprintf@plt+0xbcb4>
   1d5d8:	ldr	r0, [sp, #4]
   1d5dc:	str	r0, [sp, #28]
   1d5e0:	ldr	r0, [sp, #32]
   1d5e4:	movw	r1, #0
   1d5e8:	cmp	r0, r1
   1d5ec:	beq	1d650 <sprintf@plt+0xbd2c>
   1d5f0:	ldr	r0, [sp, #32]
   1d5f4:	ldr	r0, [r0]
   1d5f8:	str	r0, [sp, #24]
   1d5fc:	ldr	r0, [sp, #24]
   1d600:	ldr	r0, [r0, #4]
   1d604:	bl	11768 <rb_close@plt>
   1d608:	ldr	r0, [sp, #24]
   1d60c:	bl	1d6e0 <sprintf@plt+0xbdbc>
   1d610:	ldr	r0, [sp, #28]
   1d614:	str	r0, [sp, #32]
   1d618:	ldr	r0, [sp, #32]
   1d61c:	movw	r1, #0
   1d620:	cmp	r0, r1
   1d624:	beq	1d638 <sprintf@plt+0xbd14>
   1d628:	ldr	r0, [sp, #32]
   1d62c:	ldr	r0, [r0, #8]
   1d630:	str	r0, [sp]
   1d634:	b	1d644 <sprintf@plt+0xbd20>
   1d638:	movw	r0, #0
   1d63c:	str	r0, [sp]
   1d640:	b	1d644 <sprintf@plt+0xbd20>
   1d644:	ldr	r0, [sp]
   1d648:	str	r0, [sp, #28]
   1d64c:	b	1d5e0 <sprintf@plt+0xbcbc>
   1d650:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d654:	bl	1d6e0 <sprintf@plt+0xbdbc>
   1d658:	ldr	r0, [pc, #76]	; 1d6ac <sprintf@plt+0xbd88>
   1d65c:	add	r3, pc, r0
   1d660:	add	r2, sp, #44	; 0x2c
   1d664:	ldr	r0, [pc, #68]	; 1d6b0 <sprintf@plt+0xbd8c>
   1d668:	ldr	r0, [pc, r0]
   1d66c:	ldr	lr, [fp, #-16]
   1d670:	ldr	r1, [r0, #12]
   1d674:	mov	r0, lr
   1d678:	bl	133d8 <sprintf@plt+0x1ab4>
   1d67c:	b	1d694 <sprintf@plt+0xbd70>
   1d680:	b	1d684 <sprintf@plt+0xbd60>
   1d684:	ldr	r0, [fp, #-12]
   1d688:	ldr	r0, [r0, #8]
   1d68c:	str	r0, [fp, #-12]
   1d690:	b	1d548 <sprintf@plt+0xbc24>
   1d694:	ldr	r0, [fp, #-4]
   1d698:	bl	11768 <rb_close@plt>
   1d69c:	mov	sp, fp
   1d6a0:	pop	{fp, pc}
   1d6a4:	andeq	r2, r1, ip, ror #25
   1d6a8:	muleq	r1, r4, ip
   1d6ac:	andeq	r2, r0, pc, asr #1
   1d6b0:	andeq	r2, r1, r4, lsr #22
   1d6b4:			; <UNDEFINED> instruction: 0xffffff90
   1d6b8:	sub	sp, sp, #8
   1d6bc:	str	r0, [sp, #4]
   1d6c0:	str	r1, [sp]
   1d6c4:	ldr	r0, [sp, #4]
   1d6c8:	ldr	r0, [r0, #464]	; 0x1d0
   1d6cc:	ldr	r1, [sp]
   1d6d0:	add	r0, r0, r1, lsl #4
   1d6d4:	ldr	r0, [r0, #8]
   1d6d8:	add	sp, sp, #8
   1d6dc:	bx	lr
   1d6e0:	push	{fp, lr}
   1d6e4:	mov	fp, sp
   1d6e8:	sub	sp, sp, #8
   1d6ec:	str	r0, [sp, #4]
   1d6f0:	ldr	r0, [sp, #4]
   1d6f4:	movw	r1, #0
   1d6f8:	cmp	r0, r1
   1d6fc:	movw	r0, #0
   1d700:	movne	r0, #1
   1d704:	mvn	r1, #0
   1d708:	eor	r0, r0, r1
   1d70c:	eor	r0, r0, r1
   1d710:	tst	r0, #1
   1d714:	beq	1d720 <sprintf@plt+0xbdfc>
   1d718:	ldr	r0, [sp, #4]
   1d71c:	bl	116cc <free@plt>
   1d720:	mov	sp, fp
   1d724:	pop	{fp, pc}
   1d728:	push	{fp, lr}
   1d72c:	mov	fp, sp
   1d730:	sub	sp, sp, #8
   1d734:	str	r0, [sp, #4]
   1d738:	ldr	r1, [sp, #4]
   1d73c:	movw	r0, #1
   1d740:	bl	11630 <calloc@plt>
   1d744:	str	r0, [sp]
   1d748:	ldr	r0, [sp]
   1d74c:	movw	r1, #0
   1d750:	cmp	r0, r1
   1d754:	movw	r0, #0
   1d758:	moveq	r0, #1
   1d75c:	mvn	r1, #0
   1d760:	eor	r0, r0, r1
   1d764:	eor	r0, r0, r1
   1d768:	tst	r0, #1
   1d76c:	beq	1d774 <sprintf@plt+0xbe50>
   1d770:	bl	117ec <rb_outofmemory@plt>
   1d774:	ldr	r0, [sp]
   1d778:	mov	sp, fp
   1d77c:	pop	{fp, pc}
   1d780:	push	{fp, lr}
   1d784:	mov	fp, sp
   1d788:	sub	sp, sp, #8
   1d78c:	ldr	r1, [pc, #160]	; 1d834 <sprintf@plt+0xbf10>
   1d790:	add	r1, pc, r1
   1d794:	str	r0, [sp]
   1d798:	ldr	r0, [sp]
   1d79c:	bl	11624 <strcasecmp@plt>
   1d7a0:	cmp	r0, #0
   1d7a4:	bne	1d7b4 <sprintf@plt+0xbe90>
   1d7a8:	movw	r0, #1
   1d7ac:	str	r0, [sp, #4]
   1d7b0:	b	1d828 <sprintf@plt+0xbf04>
   1d7b4:	ldr	r0, [pc, #124]	; 1d838 <sprintf@plt+0xbf14>
   1d7b8:	add	r1, pc, r0
   1d7bc:	ldr	r0, [sp]
   1d7c0:	bl	11624 <strcasecmp@plt>
   1d7c4:	cmp	r0, #0
   1d7c8:	bne	1d7d8 <sprintf@plt+0xbeb4>
   1d7cc:	movw	r0, #2
   1d7d0:	str	r0, [sp, #4]
   1d7d4:	b	1d828 <sprintf@plt+0xbf04>
   1d7d8:	ldr	r0, [pc, #92]	; 1d83c <sprintf@plt+0xbf18>
   1d7dc:	add	r1, pc, r0
   1d7e0:	ldr	r0, [sp]
   1d7e4:	bl	11624 <strcasecmp@plt>
   1d7e8:	cmp	r0, #0
   1d7ec:	bne	1d7fc <sprintf@plt+0xbed8>
   1d7f0:	movw	r0, #3
   1d7f4:	str	r0, [sp, #4]
   1d7f8:	b	1d828 <sprintf@plt+0xbf04>
   1d7fc:	ldr	r0, [pc, #60]	; 1d840 <sprintf@plt+0xbf1c>
   1d800:	add	r1, pc, r0
   1d804:	ldr	r0, [sp]
   1d808:	bl	11624 <strcasecmp@plt>
   1d80c:	cmp	r0, #0
   1d810:	bne	1d820 <sprintf@plt+0xbefc>
   1d814:	movw	r0, #4
   1d818:	str	r0, [sp, #4]
   1d81c:	b	1d828 <sprintf@plt+0xbf04>
   1d820:	movw	r0, #0
   1d824:	str	r0, [sp, #4]
   1d828:	ldr	r0, [sp, #4]
   1d82c:	mov	sp, fp
   1d830:	pop	{fp, pc}
   1d834:	andeq	r2, r0, r4, lsl #1
   1d838:	andeq	r2, r0, r3, rrx
   1d83c:	andeq	r2, r0, r6, asr #32
   1d840:	andeq	r2, r0, lr, lsr #32
   1d844:	push	{fp, lr}
   1d848:	mov	fp, sp
   1d84c:	sub	sp, sp, #32
   1d850:	sub	r1, fp, #13
   1d854:	ldr	r2, [pc, #252]	; 1d958 <sprintf@plt+0xc034>
   1d858:	add	r2, pc, r2
   1d85c:	str	r0, [fp, #-4]
   1d860:	str	r1, [sp, #12]
   1d864:	ldr	r0, [sp, #12]
   1d868:	ldrb	r3, [r2]
   1d86c:	strb	r3, [r0]
   1d870:	ldrb	r2, [r2, #1]
   1d874:	strb	r2, [r0, #1]
   1d878:	ldr	r0, [sp, #12]
   1d87c:	add	r0, r0, #2
   1d880:	str	r0, [sp, #12]
   1d884:	ldr	r0, [sp, #12]
   1d888:	ldr	r2, [fp, #-4]
   1d88c:	ldr	r2, [r2, #12]
   1d890:	ldrb	r3, [r2, #58]	; 0x3a
   1d894:	strb	r3, [r0]
   1d898:	ldrb	r2, [r2, #59]	; 0x3b
   1d89c:	strb	r2, [r0, #1]
   1d8a0:	ldr	r0, [sp, #12]
   1d8a4:	add	r0, r0, #2
   1d8a8:	str	r0, [sp, #12]
   1d8ac:	ldr	r0, [sp, #12]
   1d8b0:	ldr	r2, [fp, #-4]
   1d8b4:	ldr	r2, [r2, #12]
   1d8b8:	ldrb	r3, [r2, #60]	; 0x3c
   1d8bc:	strb	r3, [r0]
   1d8c0:	ldrb	r3, [r2, #61]	; 0x3d
   1d8c4:	strb	r3, [r0, #1]
   1d8c8:	ldrb	r3, [r2, #62]	; 0x3e
   1d8cc:	strb	r3, [r0, #2]
   1d8d0:	ldrb	r2, [r2, #63]	; 0x3f
   1d8d4:	strb	r2, [r0, #3]
   1d8d8:	ldr	r0, [sp, #12]
   1d8dc:	add	r0, r0, #4
   1d8e0:	str	r0, [sp, #12]
   1d8e4:	ldr	r0, [sp, #12]
   1d8e8:	movw	r2, #0
   1d8ec:	strb	r2, [r0]
   1d8f0:	ldr	r0, [fp, #-4]
   1d8f4:	ldr	r0, [r0, #4]
   1d8f8:	movw	r2, #9
   1d8fc:	bl	11690 <rb_write@plt>
   1d900:	cmp	r0, #0
   1d904:	bge	1d90c <sprintf@plt+0xbfe8>
   1d908:	b	1d950 <sprintf@plt+0xc02c>
   1d90c:	ldr	r0, [fp, #-4]
   1d910:	ldr	r0, [r0, #4]
   1d914:	ldr	r1, [fp, #-4]
   1d918:	ldr	r1, [r1, #8]
   1d91c:	ldr	r2, [fp, #-4]
   1d920:	ldr	r2, [r2, #8]
   1d924:	str	r0, [sp, #8]
   1d928:	mov	r0, r2
   1d92c:	str	r1, [sp, #4]
   1d930:	bl	1172c <strlen@plt>
   1d934:	add	r2, r0, #1
   1d938:	ldr	r0, [sp, #8]
   1d93c:	ldr	r1, [sp, #4]
   1d940:	bl	11690 <rb_write@plt>
   1d944:	cmp	r0, #0
   1d948:	bge	1d950 <sprintf@plt+0xc02c>
   1d94c:	b	1d950 <sprintf@plt+0xc02c>
   1d950:	mov	sp, fp
   1d954:	pop	{fp, pc}
   1d958:	andeq	r1, r0, r3, ror #31
   1d95c:	push	{fp, lr}
   1d960:	mov	fp, sp
   1d964:	sub	sp, sp, #56	; 0x38
   1d968:	str	r0, [fp, #-4]
   1d96c:	ldr	r0, [fp, #-4]
   1d970:	ldr	r0, [r0]
   1d974:	str	r0, [fp, #-8]
   1d978:	add	r0, sp, #23
   1d97c:	str	r0, [sp, #16]
   1d980:	ldr	r0, [sp, #16]
   1d984:	mov	r1, #1
   1d988:	strh	r1, [r0, #4]
   1d98c:	movw	r1, #261	; 0x105
   1d990:	movt	r1, #1280	; 0x500
   1d994:	str	r1, [r0]
   1d998:	ldr	r0, [sp, #16]
   1d99c:	add	r0, r0, #6
   1d9a0:	str	r0, [sp, #16]
   1d9a4:	ldr	r0, [fp, #-8]
   1d9a8:	ldrh	r0, [r0, #248]	; 0xf8
   1d9ac:	cmp	r0, #2
   1d9b0:	str	r0, [sp, #12]
   1d9b4:	beq	1d9cc <sprintf@plt+0xc0a8>
   1d9b8:	b	1d9bc <sprintf@plt+0xc098>
   1d9bc:	ldr	r0, [sp, #12]
   1d9c0:	cmp	r0, #10
   1d9c4:	beq	1da44 <sprintf@plt+0xc120>
   1d9c8:	b	1db1c <sprintf@plt+0xc1f8>
   1d9cc:	ldr	r0, [sp, #16]
   1d9d0:	add	r1, r0, #1
   1d9d4:	str	r1, [sp, #16]
   1d9d8:	movw	r1, #1
   1d9dc:	strb	r1, [r0]
   1d9e0:	ldr	r0, [sp, #16]
   1d9e4:	ldr	r1, [fp, #-4]
   1d9e8:	ldr	r1, [r1, #12]
   1d9ec:	ldrb	r2, [r1, #60]	; 0x3c
   1d9f0:	strb	r2, [r0]
   1d9f4:	ldrb	r2, [r1, #61]	; 0x3d
   1d9f8:	strb	r2, [r0, #1]
   1d9fc:	ldrb	r2, [r1, #62]	; 0x3e
   1da00:	strb	r2, [r0, #2]
   1da04:	ldrb	r1, [r1, #63]	; 0x3f
   1da08:	strb	r1, [r0, #3]
   1da0c:	ldr	r0, [sp, #16]
   1da10:	add	r0, r0, #4
   1da14:	str	r0, [sp, #16]
   1da18:	ldr	r0, [sp, #16]
   1da1c:	ldr	r1, [fp, #-4]
   1da20:	ldr	r1, [r1, #12]
   1da24:	ldrb	r2, [r1, #58]	; 0x3a
   1da28:	strb	r2, [r0]
   1da2c:	ldrb	r1, [r1, #59]	; 0x3b
   1da30:	strb	r1, [r0, #1]
   1da34:	ldr	r0, [sp, #16]
   1da38:	add	r0, r0, #2
   1da3c:	str	r0, [sp, #16]
   1da40:	b	1db20 <sprintf@plt+0xc1fc>
   1da44:	ldr	r0, [sp, #16]
   1da48:	add	r1, r0, #1
   1da4c:	str	r1, [sp, #16]
   1da50:	movw	r1, #4
   1da54:	strb	r1, [r0]
   1da58:	ldr	r0, [sp, #16]
   1da5c:	ldr	r1, [fp, #-4]
   1da60:	ldr	r1, [r1, #12]
   1da64:	ldrb	r2, [r1, #64]	; 0x40
   1da68:	strb	r2, [r0]
   1da6c:	ldrb	r2, [r1, #65]	; 0x41
   1da70:	strb	r2, [r0, #1]
   1da74:	ldrb	r2, [r1, #66]	; 0x42
   1da78:	strb	r2, [r0, #2]
   1da7c:	ldrb	r2, [r1, #67]	; 0x43
   1da80:	strb	r2, [r0, #3]
   1da84:	ldrb	r2, [r1, #68]	; 0x44
   1da88:	strb	r2, [r0, #4]
   1da8c:	ldrb	r2, [r1, #69]	; 0x45
   1da90:	strb	r2, [r0, #5]
   1da94:	ldrb	r2, [r1, #70]	; 0x46
   1da98:	strb	r2, [r0, #6]
   1da9c:	ldrb	r2, [r1, #71]	; 0x47
   1daa0:	strb	r2, [r0, #7]
   1daa4:	ldrb	r2, [r1, #72]	; 0x48
   1daa8:	strb	r2, [r0, #8]
   1daac:	ldrb	r2, [r1, #73]	; 0x49
   1dab0:	strb	r2, [r0, #9]
   1dab4:	ldrb	r2, [r1, #74]	; 0x4a
   1dab8:	strb	r2, [r0, #10]
   1dabc:	ldrb	r2, [r1, #75]	; 0x4b
   1dac0:	strb	r2, [r0, #11]
   1dac4:	ldrb	r2, [r1, #76]	; 0x4c
   1dac8:	strb	r2, [r0, #12]
   1dacc:	ldrb	r2, [r1, #77]	; 0x4d
   1dad0:	strb	r2, [r0, #13]
   1dad4:	ldrb	r2, [r1, #78]	; 0x4e
   1dad8:	strb	r2, [r0, #14]
   1dadc:	ldrb	r1, [r1, #79]	; 0x4f
   1dae0:	strb	r1, [r0, #15]
   1dae4:	ldr	r0, [sp, #16]
   1dae8:	add	r0, r0, #16
   1daec:	str	r0, [sp, #16]
   1daf0:	ldr	r0, [sp, #16]
   1daf4:	ldr	r1, [fp, #-4]
   1daf8:	ldr	r1, [r1, #12]
   1dafc:	ldrb	r2, [r1, #58]	; 0x3a
   1db00:	strb	r2, [r0]
   1db04:	ldrb	r1, [r1, #59]	; 0x3b
   1db08:	strb	r1, [r0, #1]
   1db0c:	ldr	r0, [sp, #16]
   1db10:	add	r0, r0, #2
   1db14:	str	r0, [sp, #16]
   1db18:	b	1db20 <sprintf@plt+0xc1fc>
   1db1c:	b	1db94 <sprintf@plt+0xc270>
   1db20:	add	r0, sp, #23
   1db24:	ldr	r1, [fp, #-4]
   1db28:	ldr	r1, [r1, #4]
   1db2c:	ldr	r2, [sp, #16]
   1db30:	sub	r2, r0, r2
   1db34:	str	r0, [sp, #8]
   1db38:	mov	r0, r1
   1db3c:	ldr	r1, [sp, #8]
   1db40:	bl	11690 <rb_write@plt>
   1db44:	cmp	r0, #0
   1db48:	bgt	1db50 <sprintf@plt+0xc22c>
   1db4c:	b	1db94 <sprintf@plt+0xc270>
   1db50:	ldr	r0, [fp, #-4]
   1db54:	ldr	r0, [r0, #4]
   1db58:	ldr	r1, [fp, #-4]
   1db5c:	ldr	r1, [r1, #8]
   1db60:	ldr	r2, [fp, #-4]
   1db64:	ldr	r2, [r2, #8]
   1db68:	str	r0, [sp, #4]
   1db6c:	mov	r0, r2
   1db70:	str	r1, [sp]
   1db74:	bl	1172c <strlen@plt>
   1db78:	add	r2, r0, #1
   1db7c:	ldr	r0, [sp, #4]
   1db80:	ldr	r1, [sp]
   1db84:	bl	11690 <rb_write@plt>
   1db88:	cmp	r0, #0
   1db8c:	bgt	1db94 <sprintf@plt+0xc270>
   1db90:	b	1db94 <sprintf@plt+0xc270>
   1db94:	mov	sp, fp
   1db98:	pop	{fp, pc}
   1db9c:	push	{fp, lr}
   1dba0:	mov	fp, sp
   1dba4:	sub	sp, sp, #168	; 0xa8
   1dba8:	ldr	r1, [pc, #232]	; 1dc98 <sprintf@plt+0xc374>
   1dbac:	add	r2, pc, r1
   1dbb0:	add	r1, sp, #36	; 0x24
   1dbb4:	str	r0, [fp, #-4]
   1dbb8:	ldr	r0, [fp, #-4]
   1dbbc:	ldr	r3, [r0, #12]
   1dbc0:	ldr	r0, [fp, #-4]
   1dbc4:	ldr	r0, [r0, #12]
   1dbc8:	ldrh	r0, [r0, #54]	; 0x36
   1dbcc:	str	r0, [sp, #32]
   1dbd0:	mov	r0, r1
   1dbd4:	movw	r1, #128	; 0x80
   1dbd8:	ldr	ip, [sp, #32]
   1dbdc:	str	ip, [sp]
   1dbe0:	bl	118b8 <snprintf@plt>
   1dbe4:	add	r1, sp, #36	; 0x24
   1dbe8:	ldr	r2, [fp, #-4]
   1dbec:	ldr	r2, [r2, #4]
   1dbf0:	str	r0, [sp, #28]
   1dbf4:	mov	r0, r1
   1dbf8:	str	r2, [sp, #24]
   1dbfc:	str	r1, [sp, #20]
   1dc00:	bl	1172c <strlen@plt>
   1dc04:	ldr	r1, [sp, #24]
   1dc08:	str	r0, [sp, #16]
   1dc0c:	mov	r0, r1
   1dc10:	ldr	r1, [sp, #20]
   1dc14:	ldr	r2, [sp, #16]
   1dc18:	bl	11690 <rb_write@plt>
   1dc1c:	cmp	r0, #0
   1dc20:	bgt	1dc28 <sprintf@plt+0xc304>
   1dc24:	b	1dc90 <sprintf@plt+0xc36c>
   1dc28:	ldr	r0, [fp, #-4]
   1dc2c:	ldr	r0, [r0, #4]
   1dc30:	ldr	r1, [fp, #-4]
   1dc34:	ldr	r1, [r1, #8]
   1dc38:	ldr	r2, [fp, #-4]
   1dc3c:	ldr	r2, [r2, #8]
   1dc40:	str	r0, [sp, #12]
   1dc44:	mov	r0, r2
   1dc48:	str	r1, [sp, #8]
   1dc4c:	bl	1172c <strlen@plt>
   1dc50:	add	r2, r0, #1
   1dc54:	ldr	r0, [sp, #12]
   1dc58:	ldr	r1, [sp, #8]
   1dc5c:	bl	11690 <rb_write@plt>
   1dc60:	cmp	r0, #0
   1dc64:	bgt	1dc6c <sprintf@plt+0xc348>
   1dc68:	b	1dc90 <sprintf@plt+0xc36c>
   1dc6c:	ldr	r0, [pc, #40]	; 1dc9c <sprintf@plt+0xc378>
   1dc70:	add	r1, pc, r0
   1dc74:	ldr	r0, [fp, #-4]
   1dc78:	ldr	r0, [r0, #4]
   1dc7c:	movw	r2, #2
   1dc80:	bl	11690 <rb_write@plt>
   1dc84:	cmp	r0, #0
   1dc88:	bgt	1dc90 <sprintf@plt+0xc36c>
   1dc8c:	b	1dc90 <sprintf@plt+0xc36c>
   1dc90:	mov	sp, fp
   1dc94:	pop	{fp, pc}
   1dc98:	muleq	r0, r2, ip
   1dc9c:	andeq	r1, r0, r7, ror #23
   1dca0:	sub	sp, sp, #20
   1dca4:	ldr	r2, [pc, #136]	; 1dd34 <sprintf@plt+0xc410>
   1dca8:	add	r2, pc, r2
   1dcac:	str	r0, [sp, #12]
   1dcb0:	strh	r1, [sp, #10]
   1dcb4:	ldr	r0, [r2]
   1dcb8:	str	r0, [sp, #4]
   1dcbc:	ldr	r0, [sp, #4]
   1dcc0:	movw	r1, #0
   1dcc4:	cmp	r0, r1
   1dcc8:	beq	1dd20 <sprintf@plt+0xc3fc>
   1dccc:	ldr	r0, [sp, #4]
   1dcd0:	ldr	r0, [r0]
   1dcd4:	str	r0, [sp]
   1dcd8:	ldr	r0, [sp]
   1dcdc:	ldr	r0, [r0, #16]
   1dce0:	ldr	r1, [sp, #12]
   1dce4:	cmp	r0, r1
   1dce8:	bne	1dd0c <sprintf@plt+0xc3e8>
   1dcec:	ldr	r0, [sp]
   1dcf0:	ldrh	r0, [r0, #20]
   1dcf4:	ldrh	r1, [sp, #10]
   1dcf8:	cmp	r0, r1
   1dcfc:	bne	1dd0c <sprintf@plt+0xc3e8>
   1dd00:	ldr	r0, [sp]
   1dd04:	str	r0, [sp, #16]
   1dd08:	b	1dd28 <sprintf@plt+0xc404>
   1dd0c:	b	1dd10 <sprintf@plt+0xc3ec>
   1dd10:	ldr	r0, [sp, #4]
   1dd14:	ldr	r0, [r0, #8]
   1dd18:	str	r0, [sp, #4]
   1dd1c:	b	1dcbc <sprintf@plt+0xc398>
   1dd20:	movw	r0, #0
   1dd24:	str	r0, [sp, #16]
   1dd28:	ldr	r0, [sp, #16]
   1dd2c:	add	sp, sp, #20
   1dd30:	bx	lr
   1dd34:	andeq	r7, r1, r8, lsr #10
   1dd38:	push	{fp, lr}
   1dd3c:	mov	fp, sp
   1dd40:	sub	sp, sp, #16
   1dd44:	str	r0, [fp, #-4]
   1dd48:	str	r1, [sp, #8]
   1dd4c:	str	r2, [sp, #4]
   1dd50:	ldr	r0, [fp, #-4]
   1dd54:	movw	r1, #0
   1dd58:	cmp	r0, r1
   1dd5c:	beq	1dd64 <sprintf@plt+0xc440>
   1dd60:	b	1dd84 <sprintf@plt+0xc460>
   1dd64:	ldr	r0, [pc, #276]	; 1de80 <sprintf@plt+0xc55c>
   1dd68:	add	r0, pc, r0
   1dd6c:	ldr	r1, [pc, #272]	; 1de84 <sprintf@plt+0xc560>
   1dd70:	add	r1, pc, r1
   1dd74:	ldr	r2, [pc, #268]	; 1de88 <sprintf@plt+0xc564>
   1dd78:	add	r3, pc, r2
   1dd7c:	movw	r2, #143	; 0x8f
   1dd80:	bl	1169c <__assert_fail@plt>
   1dd84:	ldr	r0, [sp, #8]
   1dd88:	movw	r1, #0
   1dd8c:	cmp	r0, r1
   1dd90:	beq	1dd98 <sprintf@plt+0xc474>
   1dd94:	b	1ddb8 <sprintf@plt+0xc494>
   1dd98:	ldr	r0, [pc, #236]	; 1de8c <sprintf@plt+0xc568>
   1dd9c:	add	r0, pc, r0
   1dda0:	ldr	r1, [pc, #232]	; 1de90 <sprintf@plt+0xc56c>
   1dda4:	add	r1, pc, r1
   1dda8:	ldr	r2, [pc, #228]	; 1de94 <sprintf@plt+0xc570>
   1ddac:	add	r3, pc, r2
   1ddb0:	movw	r2, #144	; 0x90
   1ddb4:	bl	1169c <__assert_fail@plt>
   1ddb8:	ldr	r0, [sp, #4]
   1ddbc:	movw	r1, #0
   1ddc0:	cmp	r0, r1
   1ddc4:	beq	1ddcc <sprintf@plt+0xc4a8>
   1ddc8:	b	1ddec <sprintf@plt+0xc4c8>
   1ddcc:	ldr	r0, [pc, #196]	; 1de98 <sprintf@plt+0xc574>
   1ddd0:	add	r0, pc, r0
   1ddd4:	ldr	r1, [pc, #192]	; 1de9c <sprintf@plt+0xc578>
   1ddd8:	add	r1, pc, r1
   1dddc:	ldr	r2, [pc, #188]	; 1dea0 <sprintf@plt+0xc57c>
   1dde0:	add	r3, pc, r2
   1dde4:	movw	r2, #145	; 0x91
   1dde8:	bl	1169c <__assert_fail@plt>
   1ddec:	ldr	r0, [fp, #-4]
   1ddf0:	ldr	r1, [sp, #8]
   1ddf4:	str	r0, [r1]
   1ddf8:	ldr	r0, [sp, #8]
   1ddfc:	movw	r1, #0
   1de00:	str	r1, [r0, #4]
   1de04:	ldr	r0, [sp, #4]
   1de08:	ldr	r0, [r0]
   1de0c:	ldr	r2, [sp, #8]
   1de10:	str	r0, [r2, #8]
   1de14:	ldr	r0, [sp, #4]
   1de18:	ldr	r0, [r0]
   1de1c:	cmp	r0, r1
   1de20:	beq	1de38 <sprintf@plt+0xc514>
   1de24:	ldr	r0, [sp, #8]
   1de28:	ldr	r1, [sp, #4]
   1de2c:	ldr	r1, [r1]
   1de30:	str	r0, [r1, #4]
   1de34:	b	1de5c <sprintf@plt+0xc538>
   1de38:	ldr	r0, [sp, #4]
   1de3c:	ldr	r0, [r0, #4]
   1de40:	movw	r1, #0
   1de44:	cmp	r0, r1
   1de48:	bne	1de58 <sprintf@plt+0xc534>
   1de4c:	ldr	r0, [sp, #8]
   1de50:	ldr	r1, [sp, #4]
   1de54:	str	r0, [r1, #4]
   1de58:	b	1de5c <sprintf@plt+0xc538>
   1de5c:	ldr	r0, [sp, #8]
   1de60:	ldr	r1, [sp, #4]
   1de64:	str	r0, [r1]
   1de68:	ldr	r0, [sp, #4]
   1de6c:	ldr	r1, [r0, #8]
   1de70:	add	r1, r1, #1
   1de74:	str	r1, [r0, #8]
   1de78:	mov	sp, fp
   1de7c:	pop	{fp, pc}
   1de80:			; <UNDEFINED> instruction: 0x00000fbf
   1de84:	andeq	r0, r0, r8, asr pc
   1de88:			; <UNDEFINED> instruction: 0x00000fbc
   1de8c:	andeq	r1, r0, r9, lsr r4
   1de90:	andeq	r0, r0, r4, lsr #30
   1de94:	andeq	r0, r0, r8, lsl #31
   1de98:	andeq	r0, r0, sl, asr #30
   1de9c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1dea0:	andeq	r0, r0, r4, asr pc
   1dea4:	sub	sp, sp, #4
   1dea8:	str	r0, [sp]
   1deac:	ldr	r0, [sp]
   1deb0:	ldr	r1, [r0, #460]	; 0x1cc
   1deb4:	add	r1, r1, #1
   1deb8:	str	r1, [r0, #460]	; 0x1cc
   1debc:	add	sp, sp, #4
   1dec0:	bx	lr
   1dec4:	push	{fp, lr}
   1dec8:	mov	fp, sp
   1decc:	sub	sp, sp, #8
   1ded0:	str	r0, [sp, #4]
   1ded4:	str	r1, [sp]
   1ded8:	ldr	r0, [sp, #4]
   1dedc:	movw	r1, #0
   1dee0:	cmp	r0, r1
   1dee4:	beq	1deec <sprintf@plt+0xc5c8>
   1dee8:	b	1df0c <sprintf@plt+0xc5e8>
   1deec:	ldr	r0, [pc, #244]	; 1dfe8 <sprintf@plt+0xc6c4>
   1def0:	add	r0, pc, r0
   1def4:	ldr	r1, [pc, #240]	; 1dfec <sprintf@plt+0xc6c8>
   1def8:	add	r1, pc, r1
   1defc:	ldr	r2, [pc, #236]	; 1dff0 <sprintf@plt+0xc6cc>
   1df00:	add	r3, pc, r2
   1df04:	movw	r2, #235	; 0xeb
   1df08:	bl	1169c <__assert_fail@plt>
   1df0c:	ldr	r0, [sp]
   1df10:	movw	r1, #0
   1df14:	cmp	r0, r1
   1df18:	beq	1df20 <sprintf@plt+0xc5fc>
   1df1c:	b	1df40 <sprintf@plt+0xc61c>
   1df20:	ldr	r0, [pc, #204]	; 1dff4 <sprintf@plt+0xc6d0>
   1df24:	add	r0, pc, r0
   1df28:	ldr	r1, [pc, #200]	; 1dff8 <sprintf@plt+0xc6d4>
   1df2c:	add	r1, pc, r1
   1df30:	ldr	r2, [pc, #196]	; 1dffc <sprintf@plt+0xc6d8>
   1df34:	add	r3, pc, r2
   1df38:	movw	r2, #236	; 0xec
   1df3c:	bl	1169c <__assert_fail@plt>
   1df40:	ldr	r0, [sp, #4]
   1df44:	ldr	r0, [r0, #8]
   1df48:	movw	r1, #0
   1df4c:	cmp	r0, r1
   1df50:	beq	1df6c <sprintf@plt+0xc648>
   1df54:	ldr	r0, [sp, #4]
   1df58:	ldr	r0, [r0, #4]
   1df5c:	ldr	r1, [sp, #4]
   1df60:	ldr	r1, [r1, #8]
   1df64:	str	r0, [r1, #4]
   1df68:	b	1df7c <sprintf@plt+0xc658>
   1df6c:	ldr	r0, [sp, #4]
   1df70:	ldr	r0, [r0, #4]
   1df74:	ldr	r1, [sp]
   1df78:	str	r0, [r1, #4]
   1df7c:	ldr	r0, [sp, #4]
   1df80:	ldr	r0, [r0, #4]
   1df84:	movw	r1, #0
   1df88:	cmp	r0, r1
   1df8c:	beq	1dfa8 <sprintf@plt+0xc684>
   1df90:	ldr	r0, [sp, #4]
   1df94:	ldr	r0, [r0, #8]
   1df98:	ldr	r1, [sp, #4]
   1df9c:	ldr	r1, [r1, #4]
   1dfa0:	str	r0, [r1, #8]
   1dfa4:	b	1dfb8 <sprintf@plt+0xc694>
   1dfa8:	ldr	r0, [sp, #4]
   1dfac:	ldr	r0, [r0, #8]
   1dfb0:	ldr	r1, [sp]
   1dfb4:	str	r0, [r1]
   1dfb8:	ldr	r0, [sp, #4]
   1dfbc:	movw	r1, #0
   1dfc0:	str	r1, [r0, #4]
   1dfc4:	ldr	r0, [sp, #4]
   1dfc8:	str	r1, [r0, #8]
   1dfcc:	ldr	r0, [sp]
   1dfd0:	ldr	r1, [r0, #8]
   1dfd4:	mvn	r2, #0
   1dfd8:	add	r1, r1, r2
   1dfdc:	str	r1, [r0, #8]
   1dfe0:	mov	sp, fp
   1dfe4:	pop	{fp, pc}
   1dfe8:	andeq	r1, r0, r5, ror #5
   1dfec:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1dff0:	andeq	r0, r0, r4, ror #27
   1dff4:	strdeq	r0, [r0], -r6
   1dff8:	muleq	r0, ip, sp
   1dffc:			; <UNDEFINED> instruction: 0x00000db0
   1e000:	push	{fp, lr}
   1e004:	mov	fp, sp
   1e008:	sub	sp, sp, #8
   1e00c:	str	r0, [sp, #4]
   1e010:	ldr	r0, [sp, #4]
   1e014:	ldr	r1, [r0, #460]	; 0x1cc
   1e018:	mvn	r2, #0
   1e01c:	add	r1, r1, r2
   1e020:	str	r1, [r0, #460]	; 0x1cc
   1e024:	ldr	r0, [sp, #4]
   1e028:	ldr	r0, [r0, #460]	; 0x1cc
   1e02c:	cmp	r0, #0
   1e030:	bne	1e03c <sprintf@plt+0xc718>
   1e034:	ldr	r0, [sp, #4]
   1e038:	bl	13954 <sprintf@plt+0x2030>
   1e03c:	mov	sp, fp
   1e040:	pop	{fp, pc}
   1e044:	sub	sp, sp, #12
   1e048:	str	r0, [sp, #8]
   1e04c:	str	r1, [sp, #4]
   1e050:	str	r2, [sp]
   1e054:	ldr	r0, [sp]
   1e058:	ldr	r1, [sp, #8]
   1e05c:	ldr	r1, [r1, #464]	; 0x1d0
   1e060:	ldr	r2, [sp, #4]
   1e064:	add	r1, r1, r2, lsl #4
   1e068:	str	r0, [r1, #8]
   1e06c:	add	sp, sp, #12
   1e070:	bx	lr
   1e074:	push	{fp, lr}
   1e078:	mov	fp, sp
   1e07c:	sub	sp, sp, #16
   1e080:	str	r0, [sp, #8]
   1e084:	str	r1, [sp, #4]
   1e088:	ldr	r0, [sp, #4]
   1e08c:	mov	r1, sp
   1e090:	bl	1e1ac <sprintf@plt+0xc888>
   1e094:	tst	r0, #1
   1e098:	beq	1e0c0 <sprintf@plt+0xc79c>
   1e09c:	ldr	r0, [sp, #8]
   1e0a0:	ldr	r1, [sp]
   1e0a4:	bl	1e218 <sprintf@plt+0xc8f4>
   1e0a8:	cmp	r0, #2
   1e0ac:	movw	r0, #0
   1e0b0:	moveq	r0, #1
   1e0b4:	and	r0, r0, #1
   1e0b8:	strb	r0, [fp, #-1]
   1e0bc:	b	1e0cc <sprintf@plt+0xc7a8>
   1e0c0:	movw	r0, #1
   1e0c4:	and	r0, r0, #1
   1e0c8:	strb	r0, [fp, #-1]
   1e0cc:	ldrb	r0, [fp, #-1]
   1e0d0:	and	r0, r0, #1
   1e0d4:	mov	sp, fp
   1e0d8:	pop	{fp, pc}
   1e0dc:	push	{fp, lr}
   1e0e0:	mov	fp, sp
   1e0e4:	sub	sp, sp, #16
   1e0e8:	ldr	r1, [pc, #180]	; 1e1a4 <sprintf@plt+0xc880>
   1e0ec:	ldr	r1, [pc, r1]
   1e0f0:	str	r0, [fp, #-4]
   1e0f4:	ldr	r0, [fp, #-4]
   1e0f8:	ldr	r1, [r1, #12]
   1e0fc:	bl	1d6b8 <sprintf@plt+0xbd94>
   1e100:	ldr	r1, [pc, #148]	; 1e19c <sprintf@plt+0xc878>
   1e104:	add	r1, pc, r1
   1e108:	ldr	lr, [pc, #144]	; 1e1a0 <sprintf@plt+0xc87c>
   1e10c:	ldr	lr, [pc, lr]
   1e110:	str	r0, [sp, #4]
   1e114:	ldr	r0, [fp, #-4]
   1e118:	ldr	lr, [lr, #12]
   1e11c:	ldr	r2, [r1]
   1e120:	mov	r1, lr
   1e124:	bl	1e2cc <sprintf@plt+0xc9a8>
   1e128:	ldr	r0, [pc, #104]	; 1e198 <sprintf@plt+0xc874>
   1e12c:	add	r0, pc, r0
   1e130:	ldr	r1, [sp, #4]
   1e134:	movw	r2, #1
   1e138:	strb	r2, [r1, #12]
   1e13c:	ldr	r0, [r0]
   1e140:	str	r0, [sp, #8]
   1e144:	ldr	r0, [sp, #8]
   1e148:	movw	r1, #0
   1e14c:	cmp	r0, r1
   1e150:	beq	1e17c <sprintf@plt+0xc858>
   1e154:	ldr	r0, [sp, #8]
   1e158:	ldr	r0, [r0]
   1e15c:	str	r0, [sp]
   1e160:	ldr	r0, [fp, #-4]
   1e164:	ldr	r1, [sp]
   1e168:	bl	1e314 <sprintf@plt+0xc9f0>
   1e16c:	ldr	r0, [sp, #8]
   1e170:	ldr	r0, [r0, #8]
   1e174:	str	r0, [sp, #8]
   1e178:	b	1e144 <sprintf@plt+0xc820>
   1e17c:	ldr	r0, [pc, #36]	; 1e1a8 <sprintf@plt+0xc884>
   1e180:	add	r1, pc, r0
   1e184:	ldr	r0, [fp, #-4]
   1e188:	ldr	r0, [r0]
   1e18c:	bl	12b74 <sprintf@plt+0x1250>
   1e190:	mov	sp, fp
   1e194:	pop	{fp, pc}
   1e198:	andeq	r7, r1, r4, lsr #1
   1e19c:	andeq	r2, r1, r8, lsr #29
   1e1a0:	andeq	r2, r1, r0, lsl #1
   1e1a4:	andeq	r2, r1, r0, lsr #1
   1e1a8:	andeq	r1, r0, pc, ror #14
   1e1ac:	push	{fp, lr}
   1e1b0:	mov	fp, sp
   1e1b4:	sub	sp, sp, #16
   1e1b8:	str	r0, [sp, #8]
   1e1bc:	str	r1, [sp, #4]
   1e1c0:	ldr	r0, [sp, #8]
   1e1c4:	bl	1e240 <sprintf@plt+0xc91c>
   1e1c8:	str	r0, [sp]
   1e1cc:	ldr	r0, [sp]
   1e1d0:	movw	r1, #0
   1e1d4:	cmp	r0, r1
   1e1d8:	beq	1e1fc <sprintf@plt+0xc8d8>
   1e1dc:	ldr	r0, [sp]
   1e1e0:	ldr	r0, [r0, #12]
   1e1e4:	ldr	r1, [sp, #4]
   1e1e8:	str	r0, [r1]
   1e1ec:	movw	r0, #1
   1e1f0:	and	r0, r0, #1
   1e1f4:	strb	r0, [fp, #-1]
   1e1f8:	b	1e208 <sprintf@plt+0xc8e4>
   1e1fc:	movw	r0, #0
   1e200:	and	r0, r0, #1
   1e204:	strb	r0, [fp, #-1]
   1e208:	ldrb	r0, [fp, #-1]
   1e20c:	and	r0, r0, #1
   1e210:	mov	sp, fp
   1e214:	pop	{fp, pc}
   1e218:	sub	sp, sp, #8
   1e21c:	str	r0, [sp, #4]
   1e220:	str	r1, [sp]
   1e224:	ldr	r0, [sp, #4]
   1e228:	ldr	r0, [r0, #464]	; 0x1d0
   1e22c:	ldr	r1, [sp]
   1e230:	add	r0, r0, r1, lsl #4
   1e234:	ldr	r0, [r0, #12]
   1e238:	add	sp, sp, #8
   1e23c:	bx	lr
   1e240:	push	{fp, lr}
   1e244:	mov	fp, sp
   1e248:	sub	sp, sp, #16
   1e24c:	ldr	r1, [pc, #116]	; 1e2c8 <sprintf@plt+0xc9a4>
   1e250:	ldr	r1, [pc, r1]
   1e254:	str	r0, [sp, #8]
   1e258:	ldr	r0, [r1]
   1e25c:	str	r0, [sp, #4]
   1e260:	ldr	r0, [sp, #4]
   1e264:	movw	r1, #0
   1e268:	cmp	r0, r1
   1e26c:	beq	1e2b4 <sprintf@plt+0xc990>
   1e270:	ldr	r0, [sp, #4]
   1e274:	ldr	r0, [r0]
   1e278:	str	r0, [sp]
   1e27c:	ldr	r0, [sp]
   1e280:	ldr	r0, [r0, #16]
   1e284:	ldr	r1, [sp, #8]
   1e288:	bl	11624 <strcasecmp@plt>
   1e28c:	cmp	r0, #0
   1e290:	bne	1e2a0 <sprintf@plt+0xc97c>
   1e294:	ldr	r0, [sp]
   1e298:	str	r0, [fp, #-4]
   1e29c:	b	1e2bc <sprintf@plt+0xc998>
   1e2a0:	b	1e2a4 <sprintf@plt+0xc980>
   1e2a4:	ldr	r0, [sp, #4]
   1e2a8:	ldr	r0, [r0, #8]
   1e2ac:	str	r0, [sp, #4]
   1e2b0:	b	1e260 <sprintf@plt+0xc93c>
   1e2b4:	movw	r0, #0
   1e2b8:	str	r0, [fp, #-4]
   1e2bc:	ldr	r0, [fp, #-4]
   1e2c0:	mov	sp, fp
   1e2c4:	pop	{fp, pc}
   1e2c8:	andeq	r1, r1, r8, asr pc
   1e2cc:	push	{fp, lr}
   1e2d0:	mov	fp, sp
   1e2d4:	sub	sp, sp, #16
   1e2d8:	str	r0, [fp, #-4]
   1e2dc:	str	r1, [sp, #8]
   1e2e0:	str	r2, [sp, #4]
   1e2e4:	ldr	r0, [sp, #4]
   1e2e8:	str	r0, [sp]
   1e2ec:	bl	11738 <rb_current_time@plt>
   1e2f0:	ldr	r1, [sp]
   1e2f4:	add	r0, r1, r0
   1e2f8:	ldr	r1, [fp, #-4]
   1e2fc:	ldr	r1, [r1, #464]	; 0x1d0
   1e300:	ldr	r2, [sp, #8]
   1e304:	add	r1, r1, r2, lsl #4
   1e308:	str	r0, [r1, #4]
   1e30c:	mov	sp, fp
   1e310:	pop	{fp, pc}
   1e314:	push	{r4, r5, fp, lr}
   1e318:	add	fp, sp, #8
   1e31c:	sub	sp, sp, #320	; 0x140
   1e320:	ldr	r2, [pc, #692]	; 1e5dc <sprintf@plt+0xccb8>
   1e324:	ldr	r2, [pc, r2]
   1e328:	str	r0, [fp, #-12]
   1e32c:	str	r1, [fp, #-16]
   1e330:	ldr	r0, [fp, #-12]
   1e334:	ldr	r1, [r2, #12]
   1e338:	bl	1d6b8 <sprintf@plt+0xbd94>
   1e33c:	str	r0, [fp, #-20]	; 0xffffffec
   1e340:	movw	r0, #28
   1e344:	bl	1d728 <sprintf@plt+0xbe04>
   1e348:	str	r0, [fp, #-24]	; 0xffffffe8
   1e34c:	movw	r0, #1
   1e350:	str	r0, [sp, #40]	; 0x28
   1e354:	ldr	r0, [fp, #-12]
   1e358:	ldrh	r0, [r0, #248]	; 0xf8
   1e35c:	cmp	r0, #10
   1e360:	bne	1e394 <sprintf@plt+0xca70>
   1e364:	ldr	r0, [fp, #-16]
   1e368:	ldr	r0, [r0, #16]
   1e36c:	cmp	r0, #1
   1e370:	bne	1e380 <sprintf@plt+0xca5c>
   1e374:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e378:	bl	1d6e0 <sprintf@plt+0xbdbc>
   1e37c:	b	1e5d4 <sprintf@plt+0xccb0>
   1e380:	ldr	r0, [pc, #604]	; 1e5e4 <sprintf@plt+0xccc0>
   1e384:	add	r0, pc, r0
   1e388:	add	r0, r0, #188	; 0xbc
   1e38c:	str	r0, [fp, #-28]	; 0xffffffe4
   1e390:	b	1e3a0 <sprintf@plt+0xca7c>
   1e394:	ldr	r0, [pc, #580]	; 1e5e0 <sprintf@plt+0xccbc>
   1e398:	add	r0, pc, r0
   1e39c:	str	r0, [fp, #-28]	; 0xffffffe4
   1e3a0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e3a4:	ldr	r0, [r0, #184]	; 0xb8
   1e3a8:	movw	r1, #0
   1e3ac:	cmp	r0, r1
   1e3b0:	bne	1e3c0 <sprintf@plt+0xca9c>
   1e3b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e3b8:	bl	1d6e0 <sprintf@plt+0xbdbc>
   1e3bc:	b	1e5d4 <sprintf@plt+0xccb0>
   1e3c0:	ldr	r0, [fp, #-12]
   1e3c4:	add	r0, r0, #248	; 0xf8
   1e3c8:	sub	r1, fp, #156	; 0x9c
   1e3cc:	str	r0, [sp, #36]	; 0x24
   1e3d0:	mov	r0, r1
   1e3d4:	ldr	r1, [sp, #36]	; 0x24
   1e3d8:	movw	r2, #128	; 0x80
   1e3dc:	str	r2, [sp, #32]
   1e3e0:	bl	11750 <memcpy@plt>
   1e3e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e3e8:	add	r0, r0, #56	; 0x38
   1e3ec:	add	r1, sp, #44	; 0x2c
   1e3f0:	str	r0, [sp, #28]
   1e3f4:	mov	r0, r1
   1e3f8:	ldr	r1, [sp, #28]
   1e3fc:	ldr	r2, [sp, #32]
   1e400:	bl	11750 <memcpy@plt>
   1e404:	ldr	r0, [fp, #-12]
   1e408:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e40c:	str	r0, [r1]
   1e410:	ldr	r0, [fp, #-16]
   1e414:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e418:	str	r0, [r1, #8]
   1e41c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e420:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e424:	str	r0, [r1, #12]
   1e428:	ldr	r0, [fp, #-12]
   1e42c:	ldrh	r0, [r0, #248]	; 0xf8
   1e430:	ldr	r3, [fp, #-16]
   1e434:	movw	r1, #1
   1e438:	movw	r2, #0
   1e43c:	bl	115dc <rb_socket@plt>
   1e440:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e444:	str	r0, [r1, #4]
   1e448:	movw	r1, #0
   1e44c:	cmp	r0, r1
   1e450:	bne	1e494 <sprintf@plt+0xcb70>
   1e454:	ldr	r2, [fp, #-16]
   1e458:	str	r2, [sp, #24]
   1e45c:	bl	11918 <__errno_location@plt>
   1e460:	ldr	r0, [r0]
   1e464:	bl	11528 <strerror@plt>
   1e468:	ldr	r2, [pc, #392]	; 1e5f8 <sprintf@plt+0xccd4>
   1e46c:	add	r1, pc, r2
   1e470:	movw	r2, #87	; 0x57
   1e474:	str	r0, [sp, #20]
   1e478:	mov	r0, r2
   1e47c:	ldr	r2, [sp, #24]
   1e480:	ldr	r3, [sp, #20]
   1e484:	bl	12bfc <sprintf@plt+0x12d8>
   1e488:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e48c:	bl	1d6e0 <sprintf@plt+0xbdbc>
   1e490:	b	1e5d4 <sprintf@plt+0xccb0>
   1e494:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e498:	ldr	r0, [r0, #4]
   1e49c:	bl	115b8 <rb_get_fd@plt>
   1e4a0:	add	lr, sp, #40	; 0x28
   1e4a4:	movw	r1, #6
   1e4a8:	movw	r2, #1
   1e4ac:	mov	r3, lr
   1e4b0:	movw	lr, #4
   1e4b4:	str	lr, [sp]
   1e4b8:	bl	118e8 <setsockopt@plt>
   1e4bc:	str	r0, [sp, #16]
   1e4c0:	ldrh	r0, [sp, #44]	; 0x2c
   1e4c4:	cmp	r0, #2
   1e4c8:	bne	1e4d8 <sprintf@plt+0xcbb4>
   1e4cc:	movw	r0, #0
   1e4d0:	strh	r0, [sp, #46]	; 0x2e
   1e4d4:	b	1e4e0 <sprintf@plt+0xcbbc>
   1e4d8:	movw	r0, #0
   1e4dc:	strh	r0, [sp, #46]	; 0x2e
   1e4e0:	b	1e4e4 <sprintf@plt+0xcbc0>
   1e4e4:	b	1e4e8 <sprintf@plt+0xcbc4>
   1e4e8:	ldrh	r0, [fp, #-156]	; 0xffffff64
   1e4ec:	cmp	r0, #2
   1e4f0:	bne	1e508 <sprintf@plt+0xcbe4>
   1e4f4:	ldr	r0, [fp, #-16]
   1e4f8:	ldrh	r0, [r0, #20]
   1e4fc:	bl	11654 <htons@plt>
   1e500:	strh	r0, [fp, #-154]	; 0xffffff66
   1e504:	b	1e518 <sprintf@plt+0xcbf4>
   1e508:	ldr	r0, [fp, #-16]
   1e50c:	ldrh	r0, [r0, #20]
   1e510:	bl	11654 <htons@plt>
   1e514:	strh	r0, [fp, #-154]	; 0xffffff66
   1e518:	b	1e51c <sprintf@plt+0xcbf8>
   1e51c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e520:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e524:	add	r1, r1, #16
   1e528:	ldr	r2, [fp, #-20]	; 0xffffffec
   1e52c:	bl	1dd38 <sprintf@plt+0xc414>
   1e530:	ldr	r0, [fp, #-16]
   1e534:	ldrb	r0, [r0, #22]
   1e538:	tst	r0, #1
   1e53c:	bne	1e58c <sprintf@plt+0xcc68>
   1e540:	ldr	r0, [pc, #160]	; 1e5e8 <sprintf@plt+0xccc4>
   1e544:	add	r3, pc, r0
   1e548:	ldr	r0, [pc, #156]	; 1e5ec <sprintf@plt+0xccc8>
   1e54c:	add	r0, pc, r0
   1e550:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e554:	ldr	r1, [r1, #4]
   1e558:	sub	r2, fp, #156	; 0x9c
   1e55c:	add	ip, sp, #44	; 0x2c
   1e560:	ldr	lr, [fp, #-24]	; 0xffffffe8
   1e564:	ldr	r0, [r0]
   1e568:	str	r0, [sp, #12]
   1e56c:	mov	r0, r1
   1e570:	mov	r1, r2
   1e574:	mov	r2, ip
   1e578:	str	lr, [sp]
   1e57c:	ldr	ip, [sp, #12]
   1e580:	str	ip, [sp, #4]
   1e584:	bl	1157c <rb_connect_tcp@plt>
   1e588:	b	1e5d4 <sprintf@plt+0xccb0>
   1e58c:	ldr	r0, [pc, #92]	; 1e5f0 <sprintf@plt+0xcccc>
   1e590:	add	r3, pc, r0
   1e594:	ldr	r0, [pc, #88]	; 1e5f4 <sprintf@plt+0xccd0>
   1e598:	add	r0, pc, r0
   1e59c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e5a0:	ldr	r1, [r1, #4]
   1e5a4:	sub	r2, fp, #156	; 0x9c
   1e5a8:	add	ip, sp, #44	; 0x2c
   1e5ac:	ldr	lr, [fp, #-24]	; 0xffffffe8
   1e5b0:	ldr	r0, [r0]
   1e5b4:	str	r0, [sp, #8]
   1e5b8:	mov	r0, r1
   1e5bc:	mov	r1, r2
   1e5c0:	mov	r2, ip
   1e5c4:	str	lr, [sp]
   1e5c8:	ldr	ip, [sp, #8]
   1e5cc:	str	ip, [sp, #4]
   1e5d0:	bl	11570 <rb_connect_tcp_ssl@plt>
   1e5d4:	sub	sp, fp, #8
   1e5d8:	pop	{r4, r5, fp, pc}
   1e5dc:	andeq	r1, r1, r8, ror #28
   1e5e0:			; <UNDEFINED> instruction: 0x00016cbc
   1e5e4:	ldrdeq	r6, [r1], -r0
   1e5e8:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   1e5ec:	andeq	r2, r1, r0, ror #20
   1e5f0:	andeq	r0, r0, r4, rrx
   1e5f4:	andeq	r2, r1, r4, lsl sl
   1e5f8:	andeq	r1, r0, r4, lsr #9
   1e5fc:	push	{fp, lr}
   1e600:	mov	fp, sp
   1e604:	sub	sp, sp, #40	; 0x28
   1e608:	ldr	r3, [pc, #296]	; 1e738 <sprintf@plt+0xce14>
   1e60c:	ldr	r3, [pc, r3]
   1e610:	str	r0, [fp, #-4]
   1e614:	str	r1, [fp, #-8]
   1e618:	str	r2, [fp, #-12]
   1e61c:	ldr	r0, [fp, #-12]
   1e620:	str	r0, [fp, #-16]
   1e624:	ldr	r0, [fp, #-16]
   1e628:	ldr	r0, [r0, #8]
   1e62c:	str	r0, [sp, #20]
   1e630:	ldr	r0, [fp, #-16]
   1e634:	ldr	r0, [r0]
   1e638:	str	r0, [sp, #16]
   1e63c:	ldr	r0, [sp, #16]
   1e640:	ldr	r1, [r3, #12]
   1e644:	bl	1d6b8 <sprintf@plt+0xbd94>
   1e648:	str	r0, [sp, #12]
   1e64c:	ldr	r0, [fp, #-8]
   1e650:	cmp	r0, #0
   1e654:	bne	1e66c <sprintf@plt+0xcd48>
   1e658:	ldr	r0, [pc, #220]	; 1e73c <sprintf@plt+0xce18>
   1e65c:	add	r0, pc, r0
   1e660:	ldrb	r0, [r0]
   1e664:	tst	r0, #1
   1e668:	bne	1e670 <sprintf@plt+0xcd4c>
   1e66c:	b	1e70c <sprintf@plt+0xcde8>
   1e670:	ldr	r0, [sp, #16]
   1e674:	ldrh	r0, [r0, #248]	; 0xf8
   1e678:	cmp	r0, #2
   1e67c:	str	r0, [sp, #8]
   1e680:	beq	1e698 <sprintf@plt+0xcd74>
   1e684:	b	1e688 <sprintf@plt+0xcd64>
   1e688:	ldr	r0, [sp, #8]
   1e68c:	cmp	r0, #10
   1e690:	beq	1e6b8 <sprintf@plt+0xcd94>
   1e694:	b	1e6ec <sprintf@plt+0xcdc8>
   1e698:	ldr	r0, [pc, #164]	; 1e744 <sprintf@plt+0xce20>
   1e69c:	add	r0, pc, r0
   1e6a0:	ldr	r0, [r0, #184]	; 0xb8
   1e6a4:	movw	r1, #0
   1e6a8:	cmp	r0, r1
   1e6ac:	bne	1e6b4 <sprintf@plt+0xcd90>
   1e6b0:	b	1e70c <sprintf@plt+0xcde8>
   1e6b4:	b	1e6f0 <sprintf@plt+0xcdcc>
   1e6b8:	ldr	r0, [sp, #20]
   1e6bc:	ldrb	r0, [r0, #23]
   1e6c0:	tst	r0, #1
   1e6c4:	bne	1e6cc <sprintf@plt+0xcda8>
   1e6c8:	b	1e70c <sprintf@plt+0xcde8>
   1e6cc:	ldr	r0, [pc, #108]	; 1e740 <sprintf@plt+0xce1c>
   1e6d0:	add	r0, pc, r0
   1e6d4:	ldr	r0, [r0, #372]	; 0x174
   1e6d8:	movw	r1, #0
   1e6dc:	cmp	r0, r1
   1e6e0:	bne	1e6e8 <sprintf@plt+0xcdc4>
   1e6e4:	b	1e70c <sprintf@plt+0xcde8>
   1e6e8:	b	1e6f0 <sprintf@plt+0xcdcc>
   1e6ec:	b	1e70c <sprintf@plt+0xcde8>
   1e6f0:	ldr	r0, [sp, #20]
   1e6f4:	ldr	r0, [r0, #24]
   1e6f8:	ldr	r1, [fp, #-16]
   1e6fc:	str	r0, [sp, #4]
   1e700:	mov	r0, r1
   1e704:	ldr	r1, [sp, #4]
   1e708:	blx	r1
   1e70c:	ldr	r0, [fp, #-16]
   1e710:	ldr	r0, [r0, #4]
   1e714:	bl	11768 <rb_close@plt>
   1e718:	ldr	r0, [fp, #-16]
   1e71c:	add	r0, r0, #16
   1e720:	ldr	r1, [sp, #12]
   1e724:	bl	1dec4 <sprintf@plt+0xc5a0>
   1e728:	ldr	r0, [fp, #-16]
   1e72c:	bl	1d6e0 <sprintf@plt+0xbdbc>
   1e730:	mov	sp, fp
   1e734:	pop	{fp, pc}
   1e738:	andeq	r1, r1, r0, lsl #23
   1e73c:	andeq	r6, r1, r0, ror fp
   1e740:	andeq	r6, r1, r4, lsl #19
   1e744:			; <UNDEFINED> instruction: 0x000169b8
   1e748:	sub	sp, sp, #12
   1e74c:	str	r0, [sp, #8]
   1e750:	str	r1, [sp, #4]
   1e754:	str	r2, [sp]
   1e758:	ldr	r0, [sp]
   1e75c:	ldr	r1, [sp, #8]
   1e760:	ldr	r1, [r1, #464]	; 0x1d0
   1e764:	ldr	r2, [sp, #4]
   1e768:	add	r1, r1, r2, lsl #4
   1e76c:	str	r0, [r1, #4]
   1e770:	add	sp, sp, #12
   1e774:	bx	lr
   1e778:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1e77c:	mov	r7, r0
   1e780:	ldr	r6, [pc, #72]	; 1e7d0 <sprintf@plt+0xceac>
   1e784:	ldr	r5, [pc, #72]	; 1e7d4 <sprintf@plt+0xceb0>
   1e788:	add	r6, pc, r6
   1e78c:	add	r5, pc, r5
   1e790:	sub	r6, r6, r5
   1e794:	mov	r8, r1
   1e798:	mov	r9, r2
   1e79c:	bl	114fc <sigemptyset@plt-0x20>
   1e7a0:	asrs	r6, r6, #2
   1e7a4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1e7a8:	mov	r4, #0
   1e7ac:	add	r4, r4, #1
   1e7b0:	ldr	r3, [r5], #4
   1e7b4:	mov	r2, r9
   1e7b8:	mov	r1, r8
   1e7bc:	mov	r0, r7
   1e7c0:	blx	r3
   1e7c4:	cmp	r6, r4
   1e7c8:	bne	1e7ac <sprintf@plt+0xce88>
   1e7cc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1e7d0:	andeq	r1, r1, r4, ror #14
   1e7d4:	andeq	r1, r1, ip, asr r7
   1e7d8:	bx	lr

Disassembly of section .fini:

0001e7dc <.fini>:
   1e7dc:	push	{r3, lr}
   1e7e0:	pop	{r3, pc}
