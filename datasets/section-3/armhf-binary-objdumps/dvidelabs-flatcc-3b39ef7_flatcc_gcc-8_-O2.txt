
../repos/dvidelabs-flatcc-3b39ef7/bin/flatcc:     file format elf32-littlearm


Disassembly of section .init:

00013f54 <.init>:
   13f54:	push	{r3, lr}
   13f58:	bl	145b8 <_start@@Base+0x3c>
   13f5c:	pop	{r3, pc}

Disassembly of section .plt:

00013f60 <calloc@plt-0x14>:
   13f60:	push	{lr}		; (str lr, [sp, #-4]!)
   13f64:	ldr	lr, [pc, #4]	; 13f70 <calloc@plt-0x4>
   13f68:	add	lr, pc, lr
   13f6c:	ldr	pc, [lr, #8]!
   13f70:	muleq	r5, r0, r0

00013f74 <calloc@plt>:
   13f74:	add	ip, pc, #0, 12
   13f78:	add	ip, ip, #364544	; 0x59000
   13f7c:	ldr	pc, [ip, #144]!	; 0x90

00013f80 <raise@plt>:
   13f80:	add	ip, pc, #0, 12
   13f84:	add	ip, ip, #364544	; 0x59000
   13f88:	ldr	pc, [ip, #136]!	; 0x88

00013f8c <strcmp@plt>:
   13f8c:	add	ip, pc, #0, 12
   13f90:	add	ip, ip, #364544	; 0x59000
   13f94:	ldr	pc, [ip, #128]!	; 0x80

00013f98 <fopen@plt>:
   13f98:	add	ip, pc, #0, 12
   13f9c:	add	ip, ip, #364544	; 0x59000
   13fa0:	ldr	pc, [ip, #120]!	; 0x78

00013fa4 <free@plt>:
   13fa4:	add	ip, pc, #0, 12
   13fa8:	add	ip, ip, #364544	; 0x59000
   13fac:	ldr	pc, [ip, #112]!	; 0x70

00013fb0 <memcpy@plt>:
   13fb0:	add	ip, pc, #0, 12
   13fb4:	add	ip, ip, #364544	; 0x59000
   13fb8:	ldr	pc, [ip, #104]!	; 0x68

00013fbc <ftell@plt>:
   13fbc:	add	ip, pc, #0, 12
   13fc0:	add	ip, ip, #364544	; 0x59000
   13fc4:	ldr	pc, [ip, #96]!	; 0x60

00013fc8 <memcmp@plt>:
   13fc8:	add	ip, pc, #0, 12
   13fcc:	add	ip, ip, #364544	; 0x59000
   13fd0:	ldr	pc, [ip, #88]!	; 0x58

00013fd4 <rewind@plt>:
   13fd4:	add	ip, pc, #0, 12
   13fd8:	add	ip, ip, #364544	; 0x59000
   13fdc:	ldr	pc, [ip, #80]!	; 0x50

00013fe0 <realloc@plt>:
   13fe0:	add	ip, pc, #0, 12
   13fe4:	add	ip, ip, #364544	; 0x59000
   13fe8:	ldr	pc, [ip, #72]!	; 0x48

00013fec <fwrite@plt>:
   13fec:	add	ip, pc, #0, 12
   13ff0:	add	ip, ip, #364544	; 0x59000
   13ff4:	ldr	pc, [ip, #64]!	; 0x40

00013ff8 <fread@plt>:
   13ff8:	add	ip, pc, #0, 12
   13ffc:	add	ip, ip, #364544	; 0x59000
   14000:	ldr	pc, [ip, #56]!	; 0x38

00014004 <puts@plt>:
   14004:	add	ip, pc, #0, 12
   14008:	add	ip, ip, #364544	; 0x59000
   1400c:	ldr	pc, [ip, #48]!	; 0x30

00014010 <malloc@plt>:
   14010:	add	ip, pc, #0, 12
   14014:	add	ip, ip, #364544	; 0x59000
   14018:	ldr	pc, [ip, #40]!	; 0x28

0001401c <__libc_start_main@plt>:
   1401c:	add	ip, pc, #0, 12
   14020:	add	ip, ip, #364544	; 0x59000
   14024:	ldr	pc, [ip, #32]!

00014028 <__ctype_toupper_loc@plt>:
   14028:	add	ip, pc, #0, 12
   1402c:	add	ip, ip, #364544	; 0x59000
   14030:	ldr	pc, [ip, #24]!

00014034 <__gmon_start__@plt>:
   14034:	add	ip, pc, #0, 12
   14038:	add	ip, ip, #364544	; 0x59000
   1403c:	ldr	pc, [ip, #16]!

00014040 <exit@plt>:
   14040:	add	ip, pc, #0, 12
   14044:	add	ip, ip, #364544	; 0x59000
   14048:	ldr	pc, [ip, #8]!

0001404c <strlen@plt>:
   1404c:	add	ip, pc, #0, 12
   14050:	add	ip, ip, #364544	; 0x59000
   14054:	ldr	pc, [ip, #0]!

00014058 <strchr@plt>:
   14058:	add	ip, pc, #0, 12
   1405c:	add	ip, ip, #88, 20	; 0x58000
   14060:	ldr	pc, [ip, #4088]!	; 0xff8

00014064 <fprintf@plt>:
   14064:	add	ip, pc, #0, 12
   14068:	add	ip, ip, #88, 20	; 0x58000
   1406c:	ldr	pc, [ip, #4080]!	; 0xff0

00014070 <posix_memalign@plt>:
   14070:	add	ip, pc, #0, 12
   14074:	add	ip, ip, #88, 20	; 0x58000
   14078:	ldr	pc, [ip, #4072]!	; 0xfe8

0001407c <memset@plt>:
   1407c:	add	ip, pc, #0, 12
   14080:	add	ip, ip, #88, 20	; 0x58000
   14084:	ldr	pc, [ip, #4064]!	; 0xfe0

00014088 <strncpy@plt>:
   14088:	add	ip, pc, #0, 12
   1408c:	add	ip, ip, #88, 20	; 0x58000
   14090:	ldr	pc, [ip, #4056]!	; 0xfd8

00014094 <strtod@plt>:
   14094:	add	ip, pc, #0, 12
   14098:	add	ip, ip, #88, 20	; 0x58000
   1409c:	ldr	pc, [ip, #4048]!	; 0xfd0

000140a0 <memchr@plt>:
   140a0:	add	ip, pc, #0, 12
   140a4:	add	ip, ip, #88, 20	; 0x58000
   140a8:	ldr	pc, [ip, #4040]!	; 0xfc8

000140ac <fclose@plt>:
   140ac:	add	ip, pc, #0, 12
   140b0:	add	ip, ip, #88, 20	; 0x58000
   140b4:	ldr	pc, [ip, #4032]!	; 0xfc0

000140b8 <vfprintf@plt>:
   140b8:	add	ip, pc, #0, 12
   140bc:	add	ip, ip, #88, 20	; 0x58000
   140c0:	ldr	pc, [ip, #4024]!	; 0xfb8

000140c4 <fputc@plt>:
   140c4:	add	ip, pc, #0, 12
   140c8:	add	ip, ip, #88, 20	; 0x58000
   140cc:	ldr	pc, [ip, #4016]!	; 0xfb0

000140d0 <sprintf@plt>:
   140d0:	add	ip, pc, #0, 12
   140d4:	add	ip, ip, #88, 20	; 0x58000
   140d8:	ldr	pc, [ip, #4008]!	; 0xfa8

000140dc <vsnprintf@plt>:
   140dc:	add	ip, pc, #0, 12
   140e0:	add	ip, ip, #88, 20	; 0x58000
   140e4:	ldr	pc, [ip, #4000]!	; 0xfa0

000140e8 <qsort@plt>:
   140e8:	add	ip, pc, #0, 12
   140ec:	add	ip, ip, #88, 20	; 0x58000
   140f0:	ldr	pc, [ip, #3992]!	; 0xf98

000140f4 <fseek@plt>:
   140f4:	add	ip, pc, #0, 12
   140f8:	add	ip, ip, #88, 20	; 0x58000
   140fc:	ldr	pc, [ip, #3984]!	; 0xf90

00014100 <strncmp@plt>:
   14100:	add	ip, pc, #0, 12
   14104:	add	ip, ip, #88, 20	; 0x58000
   14108:	ldr	pc, [ip, #3976]!	; 0xf88

0001410c <abort@plt>:
   1410c:	add	ip, pc, #0, 12
   14110:	add	ip, ip, #88, 20	; 0x58000
   14114:	ldr	pc, [ip, #3968]!	; 0xf80

00014118 <__assert_fail@plt>:
   14118:	add	ip, pc, #0, 12
   1411c:	add	ip, ip, #88, 20	; 0x58000
   14120:	ldr	pc, [ip, #3960]!	; 0xf78

Disassembly of section .text:

00014128 <main@@Base>:
   14128:	strd	r4, [sp, #-28]!	; 0xffffffe4
   1412c:	cmp	r0, #1
   14130:	strd	r6, [sp, #8]
   14134:	strd	r8, [sp, #16]
   14138:	ldr	r9, [pc, #1036]	; 1454c <main@@Base+0x424>
   1413c:	str	lr, [sp, #24]
   14140:	sub	sp, sp, #228	; 0xe4
   14144:	add	r9, pc, r9
   14148:	ble	14534 <main@@Base+0x40c>
   1414c:	lsl	r5, r0, #2
   14150:	mov	r7, sp
   14154:	mov	r4, r0
   14158:	mov	r0, r7
   1415c:	mov	r6, r1
   14160:	bl	15140 <flatcc_init_options@@Base>
   14164:	mov	r0, r5
   14168:	bl	14010 <malloc@plt>
   1416c:	cmp	r0, #0
   14170:	str	r0, [sp, #200]	; 0xc8
   14174:	beq	1450c <main@@Base+0x3e4>
   14178:	mov	r0, r5
   1417c:	bl	14010 <malloc@plt>
   14180:	cmp	r0, #0
   14184:	str	r0, [sp, #204]	; 0xcc
   14188:	beq	144dc <main@@Base+0x3b4>
   1418c:	mov	r1, r6
   14190:	mov	r0, r4
   14194:	mov	r2, r7
   14198:	bl	15050 <parse_opts@@Base>
   1419c:	ldr	r3, [sp, #156]	; 0x9c
   141a0:	cmp	r3, #0
   141a4:	bne	1424c <main@@Base+0x124>
   141a8:	ldr	r2, [sp, #212]	; 0xd4
   141ac:	str	r3, [sp, #148]	; 0x94
   141b0:	cmp	r2, #0
   141b4:	bne	143e0 <main@@Base+0x2b8>
   141b8:	ldr	r3, [sp, #144]	; 0x90
   141bc:	cmp	r3, #0
   141c0:	beq	14470 <main@@Base+0x348>
   141c4:	ldr	r3, [sp, #180]	; 0xb4
   141c8:	cmp	r3, #0
   141cc:	bne	14470 <main@@Base+0x348>
   141d0:	mov	r0, r7
   141d4:	mov	r2, r3
   141d8:	mov	r1, r3
   141dc:	bl	15210 <flatcc_create_context@@Base>
   141e0:	subs	r5, r0, #0
   141e4:	beq	14428 <main@@Base+0x300>
   141e8:	bl	15388 <flatcc_generate_files@@Base>
   141ec:	subs	r4, r0, #0
   141f0:	beq	143cc <main@@Base+0x2a4>
   141f4:	mov	r0, r5
   141f8:	bl	154c0 <flatcc_destroy_context@@Base>
   141fc:	ldr	r3, [pc, #844]	; 14550 <main@@Base+0x428>
   14200:	ldr	r5, [r9, r3]
   14204:	mov	r2, #14
   14208:	mov	r1, #1
   1420c:	ldr	r0, [pc, #832]	; 14554 <main@@Base+0x42c>
   14210:	mvn	r4, #0
   14214:	ldr	r3, [r5]
   14218:	add	r0, pc, r0
   1421c:	bl	13fec <fwrite@plt>
   14220:	ldr	r0, [sp, #200]	; 0xc8
   14224:	bl	13fa4 <free@plt>
   14228:	ldr	r0, [sp, #204]	; 0xcc
   1422c:	bl	13fa4 <free@plt>
   14230:	mov	r0, r4
   14234:	add	sp, sp, #228	; 0xe4
   14238:	ldrd	r4, [sp]
   1423c:	ldrd	r6, [sp, #8]
   14240:	ldrd	r8, [sp, #16]
   14244:	add	sp, sp, #24
   14248:	pop	{pc}		; (ldr pc, [sp], #4)
   1424c:	ldr	r1, [sp, #144]	; 0x90
   14250:	cmp	r1, #0
   14254:	beq	14340 <main@@Base+0x218>
   14258:	ldr	r2, [sp, #212]	; 0xd4
   1425c:	mov	r3, #1
   14260:	str	r3, [sp, #148]	; 0x94
   14264:	cmp	r2, #0
   14268:	beq	141c4 <main@@Base+0x9c>
   1426c:	ldr	r3, [sp, #180]	; 0xb4
   14270:	cmp	r3, #0
   14274:	beq	14370 <main@@Base+0x248>
   14278:	ldr	r3, [sp, #108]	; 0x6c
   1427c:	cmp	r3, #0
   14280:	bne	144b8 <main@@Base+0x390>
   14284:	ldr	r3, [sp, #124]	; 0x7c
   14288:	cmp	r3, #0
   1428c:	bne	1444c <main@@Base+0x324>
   14290:	ldr	r3, [sp, #120]	; 0x78
   14294:	cmp	r3, #0
   14298:	beq	142a8 <main@@Base+0x180>
   1429c:	ldr	r3, [sp, #116]	; 0x74
   142a0:	cmp	r3, #0
   142a4:	beq	14494 <main@@Base+0x36c>
   142a8:	ldr	r4, [sp, #204]	; 0xcc
   142ac:	cmp	r2, #0
   142b0:	movgt	r6, #0
   142b4:	movgt	r8, #1
   142b8:	subgt	r4, r4, #4
   142bc:	bgt	14300 <main@@Base+0x1d8>
   142c0:	b	143d8 <main@@Base+0x2b0>
   142c4:	ldr	r1, [r4]
   142c8:	bl	15500 <flatcc_parse_file@@Base>
   142cc:	cmp	r0, #0
   142d0:	bne	141f4 <main@@Base+0xcc>
   142d4:	mov	r0, r5
   142d8:	bl	15388 <flatcc_generate_files@@Base>
   142dc:	cmp	r0, #0
   142e0:	bne	141f4 <main@@Base+0xcc>
   142e4:	mov	r0, r5
   142e8:	add	r6, r6, #1
   142ec:	bl	154c0 <flatcc_destroy_context@@Base>
   142f0:	ldr	r3, [sp, #212]	; 0xd4
   142f4:	str	r8, [sp, #128]	; 0x80
   142f8:	cmp	r3, r6
   142fc:	ble	143d8 <main@@Base+0x2b0>
   14300:	mov	r3, #0
   14304:	mov	r0, r7
   14308:	ldr	r1, [r4, #4]!
   1430c:	mov	r2, r3
   14310:	bl	15210 <flatcc_create_context@@Base>
   14314:	subs	r5, r0, #0
   14318:	bne	142c4 <main@@Base+0x19c>
   1431c:	ldr	r3, [pc, #556]	; 14550 <main@@Base+0x428>
   14320:	mov	r2, #49	; 0x31
   14324:	mov	r1, #1
   14328:	ldr	r0, [pc, #552]	; 14558 <main@@Base+0x430>
   1432c:	ldr	r5, [r9, r3]
   14330:	add	r0, pc, r0
   14334:	ldr	r3, [r5]
   14338:	bl	13fec <fwrite@plt>
   1433c:	b	14204 <main@@Base+0xdc>
   14340:	ldr	r2, [sp, #212]	; 0xd4
   14344:	str	r1, [sp, #148]	; 0x94
   14348:	cmp	r2, #0
   1434c:	beq	14470 <main@@Base+0x348>
   14350:	ldr	r1, [sp, #180]	; 0xb4
   14354:	cmp	r1, #0
   14358:	bne	14278 <main@@Base+0x150>
   1435c:	cmp	r3, #0
   14360:	bne	14370 <main@@Base+0x248>
   14364:	ldr	r0, [sp, #160]	; 0xa0
   14368:	cmp	r0, #0
   1436c:	beq	14378 <main@@Base+0x250>
   14370:	mov	r3, #1
   14374:	str	r3, [sp, #152]	; 0x98
   14378:	ldr	r3, [sp, #120]	; 0x78
   1437c:	cmp	r3, #0
   14380:	beq	14390 <main@@Base+0x268>
   14384:	ldr	r3, [sp, #116]	; 0x74
   14388:	cmp	r3, #0
   1438c:	beq	14494 <main@@Base+0x36c>
   14390:	ldr	r3, [sp, #108]	; 0x6c
   14394:	cmp	r3, #0
   14398:	beq	142a8 <main@@Base+0x180>
   1439c:	ldr	r3, [sp, #124]	; 0x7c
   143a0:	cmp	r3, #0
   143a4:	beq	142a8 <main@@Base+0x180>
   143a8:	ldr	r3, [pc, #416]	; 14550 <main@@Base+0x428>
   143ac:	mov	r2, #38	; 0x26
   143b0:	mov	r1, #1
   143b4:	ldr	r0, [pc, #416]	; 1455c <main@@Base+0x434>
   143b8:	ldr	r5, [r9, r3]
   143bc:	add	r0, pc, r0
   143c0:	ldr	r3, [r5]
   143c4:	bl	13fec <fwrite@plt>
   143c8:	b	14204 <main@@Base+0xdc>
   143cc:	mov	r0, r5
   143d0:	bl	154c0 <flatcc_destroy_context@@Base>
   143d4:	b	14220 <main@@Base+0xf8>
   143d8:	mov	r4, #0
   143dc:	b	14220 <main@@Base+0xf8>
   143e0:	ldr	r0, [sp, #152]	; 0x98
   143e4:	ldr	r1, [sp, #180]	; 0xb4
   143e8:	cmp	r0, #0
   143ec:	bne	14354 <main@@Base+0x22c>
   143f0:	ldr	r3, [sp, #144]	; 0x90
   143f4:	ldr	r0, [sp, #160]	; 0xa0
   143f8:	ldr	lr, [sp, #164]	; 0xa4
   143fc:	ldr	ip, [sp, #168]	; 0xa8
   14400:	orr	r3, r0, r3
   14404:	orr	r3, r3, lr
   14408:	orrs	r3, r3, ip
   1440c:	bne	1441c <main@@Base+0x2f4>
   14410:	cmp	r1, #0
   14414:	beq	14370 <main@@Base+0x248>
   14418:	b	14378 <main@@Base+0x250>
   1441c:	cmp	r1, #0
   14420:	bne	14278 <main@@Base+0x150>
   14424:	b	14368 <main@@Base+0x240>
   14428:	ldr	r3, [pc, #288]	; 14550 <main@@Base+0x428>
   1442c:	mov	r2, #49	; 0x31
   14430:	mov	r1, #1
   14434:	ldr	r0, [pc, #292]	; 14560 <main@@Base+0x438>
   14438:	ldr	r5, [r9, r3]
   1443c:	add	r0, pc, r0
   14440:	ldr	r3, [r5]
   14444:	bl	13fec <fwrite@plt>
   14448:	b	14204 <main@@Base+0xdc>
   1444c:	ldr	r3, [pc, #252]	; 14550 <main@@Base+0x428>
   14450:	mov	r2, #58	; 0x3a
   14454:	mov	r1, #1
   14458:	ldr	r0, [pc, #260]	; 14564 <main@@Base+0x43c>
   1445c:	ldr	r5, [r9, r3]
   14460:	add	r0, pc, r0
   14464:	ldr	r3, [r5]
   14468:	bl	13fec <fwrite@plt>
   1446c:	b	14204 <main@@Base+0xdc>
   14470:	ldr	r3, [pc, #216]	; 14550 <main@@Base+0x428>
   14474:	mov	r2, #17
   14478:	mov	r1, #1
   1447c:	ldr	r0, [pc, #228]	; 14568 <main@@Base+0x440>
   14480:	ldr	r5, [r9, r3]
   14484:	add	r0, pc, r0
   14488:	ldr	r3, [r5]
   1448c:	bl	13fec <fwrite@plt>
   14490:	b	14204 <main@@Base+0xdc>
   14494:	ldr	r3, [pc, #180]	; 14550 <main@@Base+0x428>
   14498:	mov	r2, #44	; 0x2c
   1449c:	mov	r1, #1
   144a0:	ldr	r0, [pc, #196]	; 1456c <main@@Base+0x444>
   144a4:	ldr	r5, [r9, r3]
   144a8:	add	r0, pc, r0
   144ac:	ldr	r3, [r5]
   144b0:	bl	13fec <fwrite@plt>
   144b4:	b	14204 <main@@Base+0xdc>
   144b8:	ldr	r3, [pc, #144]	; 14550 <main@@Base+0x428>
   144bc:	mov	r2, #57	; 0x39
   144c0:	mov	r1, #1
   144c4:	ldr	r0, [pc, #164]	; 14570 <main@@Base+0x448>
   144c8:	ldr	r5, [r9, r3]
   144cc:	add	r0, pc, r0
   144d0:	ldr	r3, [r5]
   144d4:	bl	13fec <fwrite@plt>
   144d8:	b	14204 <main@@Base+0xdc>
   144dc:	ldr	r3, [pc, #108]	; 14550 <main@@Base+0x428>
   144e0:	mov	r2, #26
   144e4:	mov	r1, #1
   144e8:	ldr	r0, [pc, #132]	; 14574 <main@@Base+0x44c>
   144ec:	ldr	r3, [r9, r3]
   144f0:	add	r0, pc, r0
   144f4:	ldr	r3, [r3]
   144f8:	bl	13fec <fwrite@plt>
   144fc:	ldr	r0, [sp, #200]	; 0xc8
   14500:	bl	13fa4 <free@plt>
   14504:	mvn	r0, #0
   14508:	bl	14040 <exit@plt>
   1450c:	ldr	r3, [pc, #60]	; 14550 <main@@Base+0x428>
   14510:	mov	r2, #26
   14514:	mov	r1, #1
   14518:	ldr	r0, [pc, #88]	; 14578 <main@@Base+0x450>
   1451c:	ldr	r3, [r9, r3]
   14520:	add	r0, pc, r0
   14524:	ldr	r3, [r3]
   14528:	bl	13fec <fwrite@plt>
   1452c:	mvn	r0, #0
   14530:	bl	14040 <exit@plt>
   14534:	ldr	r3, [pc, #20]	; 14550 <main@@Base+0x428>
   14538:	ldr	r3, [r9, r3]
   1453c:	ldr	r0, [r3]
   14540:	bl	1466c <usage@@Base>
   14544:	mvn	r0, #0
   14548:	bl	14040 <exit@plt>
   1454c:			; <UNDEFINED> instruction: 0x00058eb4
   14550:	andeq	r0, r0, r0, lsr #1
   14554:	andeq	sp, r2, r8, ror #11
   14558:	andeq	sp, r2, ip, asr #7
   1455c:	andeq	sp, r2, ip, lsl r4
   14560:	andeq	sp, r2, r0, asr #5
   14564:	andeq	sp, r2, ip, lsl #6
   14568:	andeq	sp, r2, r4, ror #4
   1456c:	andeq	sp, r2, r0, lsl #6
   14570:	andeq	sp, r2, r4, ror #4
   14574:	ldrdeq	sp, [r2], -ip
   14578:	andeq	sp, r2, ip, lsr #3

0001457c <_start@@Base>:
   1457c:	mov	fp, #0
   14580:	mov	lr, #0
   14584:	pop	{r1}		; (ldr r1, [sp], #4)
   14588:	mov	r2, sp
   1458c:	push	{r2}		; (str r2, [sp, #-4]!)
   14590:	push	{r0}		; (str r0, [sp, #-4]!)
   14594:	ldr	ip, [pc, #16]	; 145ac <_start@@Base+0x30>
   14598:	push	{ip}		; (str ip, [sp, #-4]!)
   1459c:	ldr	r0, [pc, #12]	; 145b0 <_start@@Base+0x34>
   145a0:	ldr	r3, [pc, #12]	; 145b4 <_start@@Base+0x38>
   145a4:	bl	1401c <__libc_start_main@plt>
   145a8:	bl	1410c <abort@plt>
   145ac:	andeq	r0, r4, r8, asr r1
   145b0:	andeq	r4, r1, r8, lsr #2
   145b4:	strdeq	r0, [r4], -r8
   145b8:	ldr	r3, [pc, #20]	; 145d4 <_start@@Base+0x58>
   145bc:	ldr	r2, [pc, #20]	; 145d8 <_start@@Base+0x5c>
   145c0:	add	r3, pc, r3
   145c4:	ldr	r2, [r3, r2]
   145c8:	cmp	r2, #0
   145cc:	bxeq	lr
   145d0:	b	14034 <__gmon_start__@plt>
   145d4:	andeq	r8, r5, r8, lsr sl
   145d8:	andeq	r0, r0, r4, lsr #1
   145dc:	ldr	r0, [pc, #24]	; 145fc <_start@@Base+0x80>
   145e0:	ldr	r3, [pc, #24]	; 14600 <_start@@Base+0x84>
   145e4:	cmp	r3, r0
   145e8:	bxeq	lr
   145ec:	ldr	r3, [pc, #16]	; 14604 <_start@@Base+0x88>
   145f0:	cmp	r3, #0
   145f4:	bxeq	lr
   145f8:	bx	r3
   145fc:	andeq	sp, r6, r0, asr #1
   14600:	andeq	sp, r6, r0, asr #1
   14604:	andeq	r0, r0, r0
   14608:	ldr	r0, [pc, #36]	; 14634 <_start@@Base+0xb8>
   1460c:	ldr	r1, [pc, #36]	; 14638 <_start@@Base+0xbc>
   14610:	sub	r1, r1, r0
   14614:	asr	r1, r1, #2
   14618:	add	r1, r1, r1, lsr #31
   1461c:	asrs	r1, r1, #1
   14620:	bxeq	lr
   14624:	ldr	r3, [pc, #16]	; 1463c <_start@@Base+0xc0>
   14628:	cmp	r3, #0
   1462c:	bxeq	lr
   14630:	bx	r3
   14634:	andeq	sp, r6, r0, asr #1
   14638:	andeq	sp, r6, r0, asr #1
   1463c:	andeq	r0, r0, r0
   14640:	push	{r4, lr}
   14644:	ldr	r4, [pc, #24]	; 14664 <_start@@Base+0xe8>
   14648:	ldrb	r3, [r4]
   1464c:	cmp	r3, #0
   14650:	popne	{r4, pc}
   14654:	bl	145dc <_start@@Base+0x60>
   14658:	mov	r3, #1
   1465c:	strb	r3, [r4]
   14660:	pop	{r4, pc}
   14664:	andeq	sp, r6, r0, asr #1
   14668:	b	14608 <_start@@Base+0x8c>

0001466c <usage@@Base>:
   1466c:	ldr	r2, [pc, #108]	; 146e0 <usage@@Base+0x74>
   14670:	str	r4, [sp, #-8]!
   14674:	mov	r4, r0
   14678:	ldr	r1, [pc, #100]	; 146e4 <usage@@Base+0x78>
   1467c:	str	lr, [sp, #4]
   14680:	add	r2, pc, r2
   14684:	add	r1, pc, r1
   14688:	bl	14064 <fprintf@plt>
   1468c:	ldr	r2, [pc, #84]	; 146e8 <usage@@Base+0x7c>
   14690:	mov	r0, r4
   14694:	ldr	r1, [pc, #80]	; 146ec <usage@@Base+0x80>
   14698:	add	r2, pc, r2
   1469c:	add	r1, pc, r1
   146a0:	bl	14064 <fprintf@plt>
   146a4:	ldr	r0, [pc, #68]	; 146f0 <usage@@Base+0x84>
   146a8:	mov	r3, r4
   146ac:	mov	r2, #35	; 0x23
   146b0:	mov	r1, #1
   146b4:	add	r0, pc, r0
   146b8:	bl	13fec <fwrite@plt>
   146bc:	ldr	r0, [pc, #48]	; 146f4 <usage@@Base+0x88>
   146c0:	mov	r3, r4
   146c4:	movw	r2, #1409	; 0x581
   146c8:	mov	r1, #1
   146cc:	ldr	r4, [sp]
   146d0:	ldr	lr, [sp, #4]
   146d4:	add	sp, sp, #8
   146d8:	add	r0, pc, r0
   146dc:	b	13fec <fwrite@plt>
   146e0:	andeq	fp, r2, r0, ror #21
   146e4:	andeq	sp, r2, r0, asr #4
   146e8:	andeq	fp, r2, r0, lsl #22
   146ec:	andeq	fp, r2, r4, lsl #22
   146f0:	strdeq	fp, [r2], -ip
   146f4:	strdeq	fp, [r2], -ip

000146f8 <help@@Base>:
   146f8:	str	r4, [sp, #-8]!
   146fc:	mov	r4, r0
   14700:	str	lr, [sp, #4]
   14704:	bl	1466c <usage@@Base>
   14708:	ldr	r0, [pc, #28]	; 1472c <help@@Base+0x34>
   1470c:	mov	r3, r4
   14710:	movw	r2, #3140	; 0xc44
   14714:	mov	r1, #1
   14718:	ldr	r4, [sp]
   1471c:	ldr	lr, [sp, #4]
   14720:	add	sp, sp, #8
   14724:	add	r0, pc, r0
   14728:	b	13fec <fwrite@plt>
   1472c:	andeq	ip, r2, r4, lsr r0

00014730 <parse_bool_arg@@Base>:
   14730:	ldr	r1, [pc, #176]	; 147e8 <parse_bool_arg@@Base+0xb8>
   14734:	strd	r4, [sp, #-16]!
   14738:	mov	r4, r0
   1473c:	ldr	r5, [pc, #168]	; 147ec <parse_bool_arg@@Base+0xbc>
   14740:	str	r6, [sp, #8]
   14744:	str	lr, [sp, #12]
   14748:	add	r1, pc, r1
   1474c:	bl	13f8c <strcmp@plt>
   14750:	cmp	r0, #0
   14754:	add	r5, pc, r5
   14758:	beq	147a8 <parse_bool_arg@@Base+0x78>
   1475c:	ldr	r1, [pc, #140]	; 147f0 <parse_bool_arg@@Base+0xc0>
   14760:	mov	r0, r4
   14764:	add	r1, pc, r1
   14768:	bl	13f8c <strcmp@plt>
   1476c:	cmp	r0, #0
   14770:	beq	147a8 <parse_bool_arg@@Base+0x78>
   14774:	ldr	r1, [pc, #120]	; 147f4 <parse_bool_arg@@Base+0xc4>
   14778:	mov	r0, r4
   1477c:	add	r1, pc, r1
   14780:	bl	13f8c <strcmp@plt>
   14784:	cmp	r0, #0
   14788:	beq	147a4 <parse_bool_arg@@Base+0x74>
   1478c:	ldr	r1, [pc, #100]	; 147f8 <parse_bool_arg@@Base+0xc8>
   14790:	mov	r0, r4
   14794:	add	r1, pc, r1
   14798:	bl	13f8c <strcmp@plt>
   1479c:	cmp	r0, #0
   147a0:	bne	147b8 <parse_bool_arg@@Base+0x88>
   147a4:	mov	r0, #1
   147a8:	ldrd	r4, [sp]
   147ac:	ldr	r6, [sp, #8]
   147b0:	add	sp, sp, #12
   147b4:	pop	{pc}		; (ldr pc, [sp], #4)
   147b8:	ldr	r3, [pc, #60]	; 147fc <parse_bool_arg@@Base+0xcc>
   147bc:	mov	r2, r4
   147c0:	ldr	r1, [pc, #56]	; 14800 <parse_bool_arg@@Base+0xd0>
   147c4:	ldr	r3, [r5, r3]
   147c8:	add	r1, pc, r1
   147cc:	ldr	r0, [r3]
   147d0:	bl	14064 <fprintf@plt>
   147d4:	ldrd	r4, [sp]
   147d8:	mvn	r0, #0
   147dc:	ldr	r6, [sp, #8]
   147e0:	add	sp, sp, #12
   147e4:	pop	{pc}		; (ldr pc, [sp], #4)
   147e8:	andeq	r5, r3, ip, ror #23
   147ec:	andeq	r8, r5, r4, lsr #17
   147f0:	andeq	ip, r2, ip, lsr ip
   147f4:	andeq	fp, r2, r0, lsr #20
   147f8:	andeq	ip, r2, r0, lsl ip
   147fc:	andeq	r0, r0, r0, lsr #1
   14800:	andeq	ip, r2, r0, ror #23

00014804 <match_long_arg@@Base>:
   14804:	strd	r4, [sp, #-16]!
   14808:	mov	r5, r0
   1480c:	mov	r4, r2
   14810:	str	r6, [sp, #8]
   14814:	str	lr, [sp, #12]
   14818:	bl	14100 <strncmp@plt>
   1481c:	cmp	r0, #0
   14820:	movne	r0, #0
   14824:	bne	1483c <match_long_arg@@Base+0x38>
   14828:	mov	r0, r5
   1482c:	bl	1404c <strlen@plt>
   14830:	sub	r0, r0, r4
   14834:	clz	r0, r0
   14838:	lsr	r0, r0, #5
   1483c:	ldrd	r4, [sp]
   14840:	ldr	r6, [sp, #8]
   14844:	add	sp, sp, #12
   14848:	pop	{pc}		; (ldr pc, [sp], #4)

0001484c <set_opt@@Base>:
   1484c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   14850:	mov	r4, r1
   14854:	strd	r6, [sp, #8]
   14858:	mov	r7, r2
   1485c:	strd	r8, [sp, #16]
   14860:	mov	r9, r0
   14864:	mov	r0, r1
   14868:	str	sl, [sp, #24]
   1486c:	str	lr, [sp, #28]
   14870:	bl	1404c <strlen@plt>
   14874:	mov	r8, r0
   14878:	mov	r1, #61	; 0x3d
   1487c:	ldr	r5, [pc, #1624]	; 14edc <set_opt@@Base+0x690>
   14880:	mov	r0, r4
   14884:	bl	14058 <strchr@plt>
   14888:	ldrb	r3, [r4]
   1488c:	subs	r6, r0, #0
   14890:	addne	r7, r6, #1
   14894:	subne	r8, r6, r4
   14898:	add	r5, pc, r5
   1489c:	cmp	r3, #104	; 0x68
   148a0:	beq	14990 <set_opt@@Base+0x144>
   148a4:	ldr	r0, [pc, #1588]	; 14ee0 <set_opt@@Base+0x694>
   148a8:	mov	r1, r4
   148ac:	add	r0, pc, r0
   148b0:	bl	13f8c <strcmp@plt>
   148b4:	cmp	r0, #0
   148b8:	beq	14990 <set_opt@@Base+0x144>
   148bc:	ldr	r0, [pc, #1568]	; 14ee4 <set_opt@@Base+0x698>
   148c0:	mov	r1, r4
   148c4:	add	r0, pc, r0
   148c8:	bl	13f8c <strcmp@plt>
   148cc:	subs	sl, r0, #0
   148d0:	beq	149a8 <set_opt@@Base+0x15c>
   148d4:	ldr	r0, [pc, #1548]	; 14ee8 <set_opt@@Base+0x69c>
   148d8:	mov	r1, r4
   148dc:	add	r0, pc, r0
   148e0:	bl	13f8c <strcmp@plt>
   148e4:	cmp	r0, #0
   148e8:	moveq	r3, #1
   148ec:	streq	r3, [r9, #108]	; 0x6c
   148f0:	beq	14978 <set_opt@@Base+0x12c>
   148f4:	ldr	r0, [pc, #1520]	; 14eec <set_opt@@Base+0x6a0>
   148f8:	mov	r1, r4
   148fc:	add	r0, pc, r0
   14900:	bl	13f8c <strcmp@plt>
   14904:	cmp	r0, #0
   14908:	moveq	r3, #1
   1490c:	streq	r3, [r9, #180]	; 0xb4
   14910:	beq	14978 <set_opt@@Base+0x12c>
   14914:	ldr	r0, [pc, #1492]	; 14ef0 <set_opt@@Base+0x6a4>
   14918:	mov	r1, r4
   1491c:	add	r0, pc, r0
   14920:	bl	13f8c <strcmp@plt>
   14924:	cmp	r0, #0
   14928:	moveq	r3, #1
   1492c:	streq	r3, [r9, #164]	; 0xa4
   14930:	beq	14978 <set_opt@@Base+0x12c>
   14934:	ldr	r0, [pc, #1464]	; 14ef4 <set_opt@@Base+0x6a8>
   14938:	mov	r1, r4
   1493c:	add	r0, pc, r0
   14940:	bl	13f8c <strcmp@plt>
   14944:	cmp	r0, #0
   14948:	moveq	r3, #1
   1494c:	streq	r3, [r9, #168]	; 0xa8
   14950:	beq	14978 <set_opt@@Base+0x12c>
   14954:	ldr	r0, [pc, #1436]	; 14ef8 <set_opt@@Base+0x6ac>
   14958:	mov	r1, r4
   1495c:	add	r0, pc, r0
   14960:	bl	13f8c <strcmp@plt>
   14964:	cmp	r0, #0
   14968:	bne	149e8 <set_opt@@Base+0x19c>
   1496c:	mov	r3, #1
   14970:	str	r3, [r9, #164]	; 0xa4
   14974:	str	r3, [r9, #168]	; 0xa8
   14978:	ldrd	r4, [sp]
   1497c:	ldrd	r6, [sp, #8]
   14980:	ldrd	r8, [sp, #16]
   14984:	ldr	sl, [sp, #24]
   14988:	add	sp, sp, #28
   1498c:	pop	{pc}		; (ldr pc, [sp], #4)
   14990:	ldr	r3, [pc, #1380]	; 14efc <set_opt@@Base+0x6b0>
   14994:	ldr	r3, [r5, r3]
   14998:	ldr	r0, [r3]
   1499c:	bl	146f8 <help@@Base>
   149a0:	mov	r0, #0
   149a4:	bl	14040 <exit@plt>
   149a8:	ldr	r3, [pc, #1360]	; 14f00 <set_opt@@Base+0x6b4>
   149ac:	ldr	r2, [pc, #1360]	; 14f04 <set_opt@@Base+0x6b8>
   149b0:	ldr	r1, [pc, #1360]	; 14f08 <set_opt@@Base+0x6bc>
   149b4:	ldr	r4, [r5, r3]
   149b8:	add	r2, pc, r2
   149bc:	add	r1, pc, r1
   149c0:	ldr	r0, [r4]
   149c4:	bl	14064 <fprintf@plt>
   149c8:	ldr	r2, [pc, #1340]	; 14f0c <set_opt@@Base+0x6c0>
   149cc:	ldr	r1, [pc, #1340]	; 14f10 <set_opt@@Base+0x6c4>
   149d0:	ldr	r0, [r4]
   149d4:	add	r2, pc, r2
   149d8:	add	r1, pc, r1
   149dc:	bl	14064 <fprintf@plt>
   149e0:	mov	r0, sl
   149e4:	bl	14040 <exit@plt>
   149e8:	ldr	r0, [pc, #1316]	; 14f14 <set_opt@@Base+0x6c8>
   149ec:	mov	r2, r8
   149f0:	mov	r1, r4
   149f4:	add	r0, pc, r0
   149f8:	bl	14804 <match_long_arg@@Base>
   149fc:	cmp	r0, #0
   14a00:	beq	14a50 <set_opt@@Base+0x204>
   14a04:	ldr	r3, [pc, #1268]	; 14f00 <set_opt@@Base+0x6b4>
   14a08:	mov	r2, #112	; 0x70
   14a0c:	mov	r1, #1
   14a10:	ldr	r0, [pc, #1280]	; 14f18 <set_opt@@Base+0x6cc>
   14a14:	ldr	r4, [r5, r3]
   14a18:	add	r0, pc, r0
   14a1c:	ldr	r3, [r4]
   14a20:	bl	13fec <fwrite@plt>
   14a24:	cmp	r7, #0
   14a28:	beq	14bdc <set_opt@@Base+0x390>
   14a2c:	mov	r0, r7
   14a30:	bl	14730 <parse_bool_arg@@Base>
   14a34:	cmp	r0, #0
   14a38:	str	r0, [r9, #184]	; 0xb8
   14a3c:	blt	14a88 <set_opt@@Base+0x23c>
   14a40:	cmp	r6, #0
   14a44:	beq	14ac8 <set_opt@@Base+0x27c>
   14a48:	mov	r0, #0
   14a4c:	b	14978 <set_opt@@Base+0x12c>
   14a50:	ldr	r0, [pc, #1220]	; 14f1c <set_opt@@Base+0x6d0>
   14a54:	mov	r2, r8
   14a58:	mov	r1, r4
   14a5c:	add	r0, pc, r0
   14a60:	bl	14804 <match_long_arg@@Base>
   14a64:	cmp	r0, #0
   14a68:	beq	14a90 <set_opt@@Base+0x244>
   14a6c:	cmp	r7, #0
   14a70:	beq	14bfc <set_opt@@Base+0x3b0>
   14a74:	mov	r0, r7
   14a78:	bl	14730 <parse_bool_arg@@Base>
   14a7c:	cmp	r0, #0
   14a80:	str	r0, [r9, #188]	; 0xbc
   14a84:	bge	14a40 <set_opt@@Base+0x1f4>
   14a88:	mvn	r0, #0
   14a8c:	bl	14040 <exit@plt>
   14a90:	ldr	r0, [pc, #1160]	; 14f20 <set_opt@@Base+0x6d4>
   14a94:	mov	r2, r8
   14a98:	mov	r1, r4
   14a9c:	add	r0, pc, r0
   14aa0:	bl	14804 <match_long_arg@@Base>
   14aa4:	cmp	r0, #0
   14aa8:	beq	14ad0 <set_opt@@Base+0x284>
   14aac:	cmp	r7, #0
   14ab0:	beq	14c14 <set_opt@@Base+0x3c8>
   14ab4:	mov	r3, #1
   14ab8:	cmp	r6, #0
   14abc:	str	r3, [r9, #112]	; 0x70
   14ac0:	str	r7, [r9, #116]	; 0x74
   14ac4:	bne	14a48 <set_opt@@Base+0x1fc>
   14ac8:	mov	r0, #2
   14acc:	b	14978 <set_opt@@Base+0x12c>
   14ad0:	ldr	r0, [pc, #1100]	; 14f24 <set_opt@@Base+0x6d8>
   14ad4:	mov	r2, r8
   14ad8:	mov	r1, r4
   14adc:	add	r0, pc, r0
   14ae0:	bl	14804 <match_long_arg@@Base>
   14ae4:	cmp	r0, #0
   14ae8:	beq	14b04 <set_opt@@Base+0x2b8>
   14aec:	cmp	r7, #0
   14af0:	beq	14c2c <set_opt@@Base+0x3e0>
   14af4:	cmp	r6, #0
   14af8:	str	r7, [r9, #120]	; 0x78
   14afc:	bne	14a48 <set_opt@@Base+0x1fc>
   14b00:	b	14ac8 <set_opt@@Base+0x27c>
   14b04:	ldr	r0, [pc, #1052]	; 14f28 <set_opt@@Base+0x6dc>
   14b08:	mov	r2, r8
   14b0c:	mov	r1, r4
   14b10:	add	r0, pc, r0
   14b14:	bl	14804 <match_long_arg@@Base>
   14b18:	cmp	r0, #0
   14b1c:	beq	14b38 <set_opt@@Base+0x2ec>
   14b20:	cmp	r7, #0
   14b24:	beq	14b6c <set_opt@@Base+0x320>
   14b28:	cmp	r6, #0
   14b2c:	str	r7, [r9, #124]	; 0x7c
   14b30:	bne	14a48 <set_opt@@Base+0x1fc>
   14b34:	b	14ac8 <set_opt@@Base+0x27c>
   14b38:	ldr	r0, [pc, #1004]	; 14f2c <set_opt@@Base+0x6e0>
   14b3c:	mov	r2, r8
   14b40:	mov	r1, r4
   14b44:	add	r0, pc, r0
   14b48:	bl	14804 <match_long_arg@@Base>
   14b4c:	cmp	r0, #0
   14b50:	beq	14ba8 <set_opt@@Base+0x35c>
   14b54:	cmp	r7, #0
   14b58:	beq	14b90 <set_opt@@Base+0x344>
   14b5c:	cmp	r6, #0
   14b60:	str	r7, [r9, #196]	; 0xc4
   14b64:	bne	14a48 <set_opt@@Base+0x1fc>
   14b68:	b	14ac8 <set_opt@@Base+0x27c>
   14b6c:	ldr	r0, [pc, #956]	; 14f30 <set_opt@@Base+0x6e4>
   14b70:	mov	r2, #35	; 0x23
   14b74:	mov	r1, #1
   14b78:	ldr	r3, [pc, #896]	; 14f00 <set_opt@@Base+0x6b4>
   14b7c:	add	r0, pc, r0
   14b80:	ldr	r3, [r5, r3]
   14b84:	ldr	r3, [r3]
   14b88:	bl	13fec <fwrite@plt>
   14b8c:	b	14a88 <set_opt@@Base+0x23c>
   14b90:	ldr	r0, [pc, #924]	; 14f34 <set_opt@@Base+0x6e8>
   14b94:	mov	r2, #41	; 0x29
   14b98:	mov	r1, #1
   14b9c:	ldr	r3, [pc, #860]	; 14f00 <set_opt@@Base+0x6b4>
   14ba0:	add	r0, pc, r0
   14ba4:	b	14b80 <set_opt@@Base+0x334>
   14ba8:	ldr	r0, [pc, #904]	; 14f38 <set_opt@@Base+0x6ec>
   14bac:	mov	r2, r8
   14bb0:	mov	r1, r4
   14bb4:	add	r0, pc, r0
   14bb8:	bl	14804 <match_long_arg@@Base>
   14bbc:	cmp	r0, #0
   14bc0:	beq	14c5c <set_opt@@Base+0x410>
   14bc4:	cmp	r7, #0
   14bc8:	beq	14c44 <set_opt@@Base+0x3f8>
   14bcc:	cmp	r6, #0
   14bd0:	str	r7, [r9, #192]	; 0xc0
   14bd4:	bne	14a48 <set_opt@@Base+0x1fc>
   14bd8:	b	14ac8 <set_opt@@Base+0x27c>
   14bdc:	ldr	r0, [pc, #856]	; 14f3c <set_opt@@Base+0x6f0>
   14be0:	mov	r2, #44	; 0x2c
   14be4:	mov	r1, #1
   14be8:	ldr	r3, [r4]
   14bec:	add	r0, pc, r0
   14bf0:	bl	13fec <fwrite@plt>
   14bf4:	mvn	r0, #0
   14bf8:	bl	14040 <exit@plt>
   14bfc:	ldr	r0, [pc, #828]	; 14f40 <set_opt@@Base+0x6f4>
   14c00:	mov	r2, #41	; 0x29
   14c04:	mov	r1, #1
   14c08:	ldr	r3, [pc, #752]	; 14f00 <set_opt@@Base+0x6b4>
   14c0c:	add	r0, pc, r0
   14c10:	b	14b80 <set_opt@@Base+0x334>
   14c14:	ldr	r0, [pc, #808]	; 14f44 <set_opt@@Base+0x6f8>
   14c18:	mov	r2, #35	; 0x23
   14c1c:	mov	r1, #1
   14c20:	ldr	r3, [pc, #728]	; 14f00 <set_opt@@Base+0x6b4>
   14c24:	add	r0, pc, r0
   14c28:	b	14b80 <set_opt@@Base+0x334>
   14c2c:	ldr	r0, [pc, #788]	; 14f48 <set_opt@@Base+0x6fc>
   14c30:	mov	r2, #37	; 0x25
   14c34:	mov	r1, #1
   14c38:	ldr	r3, [pc, #704]	; 14f00 <set_opt@@Base+0x6b4>
   14c3c:	add	r0, pc, r0
   14c40:	b	14b80 <set_opt@@Base+0x334>
   14c44:	ldr	r0, [pc, #768]	; 14f4c <set_opt@@Base+0x700>
   14c48:	mov	r2, #28
   14c4c:	mov	r1, #1
   14c50:	ldr	r3, [pc, #680]	; 14f00 <set_opt@@Base+0x6b4>
   14c54:	add	r0, pc, r0
   14c58:	b	14b80 <set_opt@@Base+0x334>
   14c5c:	ldrb	r2, [r4]
   14c60:	sub	r3, r2, #45	; 0x2d
   14c64:	cmp	r3, #74	; 0x4a
   14c68:	addls	pc, pc, r3, lsl #2
   14c6c:	b	14d9c <set_opt@@Base+0x550>
   14c70:	b	14eb0 <set_opt@@Base+0x664>
   14c74:	b	14d9c <set_opt@@Base+0x550>
   14c78:	b	14d9c <set_opt@@Base+0x550>
   14c7c:	b	14d9c <set_opt@@Base+0x550>
   14c80:	b	14d9c <set_opt@@Base+0x550>
   14c84:	b	14d9c <set_opt@@Base+0x550>
   14c88:	b	14d9c <set_opt@@Base+0x550>
   14c8c:	b	14d9c <set_opt@@Base+0x550>
   14c90:	b	14d9c <set_opt@@Base+0x550>
   14c94:	b	14d9c <set_opt@@Base+0x550>
   14c98:	b	14d9c <set_opt@@Base+0x550>
   14c9c:	b	14d9c <set_opt@@Base+0x550>
   14ca0:	b	14d9c <set_opt@@Base+0x550>
   14ca4:	b	14d9c <set_opt@@Base+0x550>
   14ca8:	b	14d9c <set_opt@@Base+0x550>
   14cac:	b	14d9c <set_opt@@Base+0x550>
   14cb0:	b	14d9c <set_opt@@Base+0x550>
   14cb4:	b	14d9c <set_opt@@Base+0x550>
   14cb8:	b	14d9c <set_opt@@Base+0x550>
   14cbc:	b	14d9c <set_opt@@Base+0x550>
   14cc0:	b	14d9c <set_opt@@Base+0x550>
   14cc4:	b	14d9c <set_opt@@Base+0x550>
   14cc8:	b	14d9c <set_opt@@Base+0x550>
   14ccc:	b	14d9c <set_opt@@Base+0x550>
   14cd0:	b	14d9c <set_opt@@Base+0x550>
   14cd4:	b	14d9c <set_opt@@Base+0x550>
   14cd8:	b	14d9c <set_opt@@Base+0x550>
   14cdc:	b	14d9c <set_opt@@Base+0x550>
   14ce0:	b	14e78 <set_opt@@Base+0x62c>
   14ce4:	b	14d9c <set_opt@@Base+0x550>
   14ce8:	b	14d9c <set_opt@@Base+0x550>
   14cec:	b	14d9c <set_opt@@Base+0x550>
   14cf0:	b	14d9c <set_opt@@Base+0x550>
   14cf4:	b	14d9c <set_opt@@Base+0x550>
   14cf8:	b	14d9c <set_opt@@Base+0x550>
   14cfc:	b	14d9c <set_opt@@Base+0x550>
   14d00:	b	14d9c <set_opt@@Base+0x550>
   14d04:	b	14d9c <set_opt@@Base+0x550>
   14d08:	b	14d9c <set_opt@@Base+0x550>
   14d0c:	b	14d9c <set_opt@@Base+0x550>
   14d10:	b	14d9c <set_opt@@Base+0x550>
   14d14:	b	14d9c <set_opt@@Base+0x550>
   14d18:	b	14d9c <set_opt@@Base+0x550>
   14d1c:	b	14d9c <set_opt@@Base+0x550>
   14d20:	b	14d9c <set_opt@@Base+0x550>
   14d24:	b	14d9c <set_opt@@Base+0x550>
   14d28:	b	14d9c <set_opt@@Base+0x550>
   14d2c:	b	14d9c <set_opt@@Base+0x550>
   14d30:	b	14d9c <set_opt@@Base+0x550>
   14d34:	b	14d9c <set_opt@@Base+0x550>
   14d38:	b	14d9c <set_opt@@Base+0x550>
   14d3c:	b	14d9c <set_opt@@Base+0x550>
   14d40:	b	14e58 <set_opt@@Base+0x60c>
   14d44:	b	14d9c <set_opt@@Base+0x550>
   14d48:	b	14e4c <set_opt@@Base+0x600>
   14d4c:	b	14e28 <set_opt@@Base+0x5dc>
   14d50:	b	14d9c <set_opt@@Base+0x550>
   14d54:	b	14d9c <set_opt@@Base+0x550>
   14d58:	b	14d9c <set_opt@@Base+0x550>
   14d5c:	b	14d9c <set_opt@@Base+0x550>
   14d60:	b	14d9c <set_opt@@Base+0x550>
   14d64:	b	14d9c <set_opt@@Base+0x550>
   14d68:	b	14d9c <set_opt@@Base+0x550>
   14d6c:	b	14d9c <set_opt@@Base+0x550>
   14d70:	b	14d9c <set_opt@@Base+0x550>
   14d74:	b	14d9c <set_opt@@Base+0x550>
   14d78:	b	14ddc <set_opt@@Base+0x590>
   14d7c:	b	14d9c <set_opt@@Base+0x550>
   14d80:	b	14d9c <set_opt@@Base+0x550>
   14d84:	b	14dd0 <set_opt@@Base+0x584>
   14d88:	b	14d9c <set_opt@@Base+0x550>
   14d8c:	b	14d9c <set_opt@@Base+0x550>
   14d90:	b	14d9c <set_opt@@Base+0x550>
   14d94:	b	14dc4 <set_opt@@Base+0x578>
   14d98:	b	14db8 <set_opt@@Base+0x56c>
   14d9c:	ldr	r1, [pc, #428]	; 14f50 <set_opt@@Base+0x704>
   14da0:	ldr	r3, [pc, #344]	; 14f00 <set_opt@@Base+0x6b4>
   14da4:	add	r1, pc, r1
   14da8:	ldr	r3, [r5, r3]
   14dac:	ldr	r0, [r3]
   14db0:	bl	14064 <fprintf@plt>
   14db4:	b	14a88 <set_opt@@Base+0x23c>
   14db8:	mov	r3, #1
   14dbc:	str	r3, [r9, #156]	; 0x9c
   14dc0:	b	14978 <set_opt@@Base+0x12c>
   14dc4:	mov	r3, #1
   14dc8:	str	r3, [r9, #160]	; 0xa0
   14dcc:	b	14978 <set_opt@@Base+0x12c>
   14dd0:	mov	r3, #1
   14dd4:	str	r3, [r9, #172]	; 0xac
   14dd8:	b	14978 <set_opt@@Base+0x12c>
   14ddc:	ldr	r3, [r9, #216]	; 0xd8
   14de0:	cmp	r3, #0
   14de4:	bne	14e10 <set_opt@@Base+0x5c4>
   14de8:	ldrb	r3, [r4, #1]
   14dec:	cmp	r3, #0
   14df0:	addne	r7, r4, #1
   14df4:	movne	r0, #1
   14df8:	bne	14e08 <set_opt@@Base+0x5bc>
   14dfc:	cmp	r7, #0
   14e00:	movne	r0, #2
   14e04:	beq	14e34 <set_opt@@Base+0x5e8>
   14e08:	str	r7, [r9, #216]	; 0xd8
   14e0c:	b	14978 <set_opt@@Base+0x12c>
   14e10:	ldr	r0, [pc, #316]	; 14f54 <set_opt@@Base+0x708>
   14e14:	mov	r2, #37	; 0x25
   14e18:	mov	r1, #1
   14e1c:	ldr	r3, [pc, #220]	; 14f00 <set_opt@@Base+0x6b4>
   14e20:	add	r0, pc, r0
   14e24:	b	14b80 <set_opt@@Base+0x334>
   14e28:	mov	r3, #1
   14e2c:	str	r3, [r9, #112]	; 0x70
   14e30:	b	14978 <set_opt@@Base+0x12c>
   14e34:	ldr	r0, [pc, #284]	; 14f58 <set_opt@@Base+0x70c>
   14e38:	mov	r2, #28
   14e3c:	mov	r1, #1
   14e40:	ldr	r3, [pc, #184]	; 14f00 <set_opt@@Base+0x6b4>
   14e44:	add	r0, pc, r0
   14e48:	b	14b80 <set_opt@@Base+0x334>
   14e4c:	mov	r3, #1
   14e50:	str	r3, [r9, #144]	; 0x90
   14e54:	b	14978 <set_opt@@Base+0x12c>
   14e58:	mov	r3, #1
   14e5c:	str	r3, [r9, #144]	; 0x90
   14e60:	str	r3, [r9, #148]	; 0x94
   14e64:	str	r3, [r9, #152]	; 0x98
   14e68:	str	r3, [r9, #156]	; 0x9c
   14e6c:	str	r3, [r9, #160]	; 0xa0
   14e70:	str	r3, [r9, #172]	; 0xac
   14e74:	b	14978 <set_opt@@Base+0x12c>
   14e78:	ldrb	r3, [r4, #1]
   14e7c:	cmp	r3, #0
   14e80:	addne	r7, r4, #1
   14e84:	movne	r0, #1
   14e88:	bne	14e98 <set_opt@@Base+0x64c>
   14e8c:	cmp	r7, #0
   14e90:	movne	r0, #2
   14e94:	beq	14ec4 <set_opt@@Base+0x678>
   14e98:	ldr	r2, [r9, #200]	; 0xc8
   14e9c:	ldr	r3, [r9, #208]	; 0xd0
   14ea0:	add	r1, r3, #1
   14ea4:	str	r1, [r9, #208]	; 0xd0
   14ea8:	str	r7, [r2, r3, lsl #2]
   14eac:	b	14978 <set_opt@@Base+0x12c>
   14eb0:	ldr	r1, [pc, #164]	; 14f5c <set_opt@@Base+0x710>
   14eb4:	mov	r2, r4
   14eb8:	ldr	r3, [pc, #64]	; 14f00 <set_opt@@Base+0x6b4>
   14ebc:	add	r1, pc, r1
   14ec0:	b	14da8 <set_opt@@Base+0x55c>
   14ec4:	ldr	r0, [pc, #148]	; 14f60 <set_opt@@Base+0x714>
   14ec8:	mov	r2, #28
   14ecc:	mov	r1, #1
   14ed0:	ldr	r3, [pc, #40]	; 14f00 <set_opt@@Base+0x6b4>
   14ed4:	add	r0, pc, r0
   14ed8:	b	14b80 <set_opt@@Base+0x334>
   14edc:	andeq	r8, r5, r0, ror #14
   14ee0:	andeq	ip, r2, r0, asr #22
   14ee4:	andeq	ip, r2, r0, lsr fp
   14ee8:	andeq	ip, r2, r4, lsr #22
   14eec:	andeq	ip, r2, ip, lsl #22
   14ef0:	strdeq	ip, [r2], -r4
   14ef4:	andeq	ip, r2, r4, ror #21
   14ef8:	ldrdeq	ip, [r2], -r4
   14efc:	andeq	r0, r0, ip, lsr #1
   14f00:	andeq	r0, r0, r0, lsr #1
   14f04:	andeq	fp, r2, r8, lsr #15
   14f08:	andeq	ip, r2, r8, lsl #30
   14f0c:	andeq	fp, r2, r4, asr #15
   14f10:	andeq	fp, r2, r8, asr #15
   14f14:	andeq	ip, r2, r4, asr #20
   14f18:	andeq	ip, r2, r4, lsr sl
   14f1c:	muleq	r2, r4, sl
   14f20:	andeq	ip, r2, r0, lsr sp
   14f24:	andeq	ip, r2, r4, ror sl
   14f28:	andeq	ip, r2, r4, ror sl
   14f2c:	andeq	ip, r2, r0, ror sl
   14f30:	andeq	ip, r2, r4, lsl sl
   14f34:	andeq	ip, r2, r4, lsr #20
   14f38:	andeq	ip, r2, ip, lsr sl
   14f3c:	ldrdeq	ip, [r2], -r4
   14f40:	strdeq	ip, [r2], -r4
   14f44:	andeq	ip, r2, r8, lsl #18
   14f48:	andeq	ip, r2, r0, lsr #18
   14f4c:	andeq	ip, r2, r4, lsr #19
   14f50:	strdeq	ip, [r2], -r4
   14f54:	andeq	ip, r2, r0, lsr r8
   14f58:	andeq	ip, r2, r4, lsr r8
   14f5c:	andeq	ip, r2, ip, asr r7
   14f60:	andeq	ip, r2, ip, asr r7

00014f64 <get_opt@@Base>:
   14f64:	strd	r4, [sp, #-16]!
   14f68:	mov	r4, r1
   14f6c:	str	r6, [sp, #8]
   14f70:	str	lr, [sp, #12]
   14f74:	ldrb	r3, [r4, #1]!
   14f78:	ldr	ip, [pc, #196]	; 15044 <get_opt@@Base+0xe0>
   14f7c:	cmp	r3, #45	; 0x2d
   14f80:	add	ip, pc, ip
   14f84:	beq	14ff8 <get_opt@@Base+0x94>
   14f88:	cmp	r3, #0
   14f8c:	mov	r5, r0
   14f90:	mov	r6, r2
   14f94:	bne	14fb0 <get_opt@@Base+0x4c>
   14f98:	b	1501c <get_opt@@Base+0xb8>
   14f9c:	cmp	r0, #0
   14fa0:	addeq	r4, r4, #1
   14fa4:	ldrb	r0, [r4]
   14fa8:	cmp	r0, #0
   14fac:	beq	14fd4 <get_opt@@Base+0x70>
   14fb0:	mov	r2, r6
   14fb4:	mov	r1, r4
   14fb8:	mov	r0, r5
   14fbc:	bl	1484c <set_opt@@Base>
   14fc0:	cmp	r0, #1
   14fc4:	beq	14fe4 <get_opt@@Base+0x80>
   14fc8:	cmp	r0, #2
   14fcc:	bne	14f9c <get_opt@@Base+0x38>
   14fd0:	mov	r0, #1
   14fd4:	ldrd	r4, [sp]
   14fd8:	ldr	r6, [sp, #8]
   14fdc:	add	sp, sp, #12
   14fe0:	pop	{pc}		; (ldr pc, [sp], #4)
   14fe4:	ldrd	r4, [sp]
   14fe8:	mov	r0, #0
   14fec:	ldr	r6, [sp, #8]
   14ff0:	add	sp, sp, #12
   14ff4:	pop	{pc}		; (ldr pc, [sp], #4)
   14ff8:	mov	r1, r4
   14ffc:	bl	1484c <set_opt@@Base>
   15000:	sub	r0, r0, #2
   15004:	ldrd	r4, [sp]
   15008:	clz	r0, r0
   1500c:	ldr	r6, [sp, #8]
   15010:	add	sp, sp, #12
   15014:	lsr	r0, r0, #5
   15018:	pop	{pc}		; (ldr pc, [sp], #4)
   1501c:	ldr	r3, [pc, #36]	; 15048 <get_opt@@Base+0xe4>
   15020:	mov	r2, #24
   15024:	mov	r1, #1
   15028:	ldr	r0, [pc, #28]	; 1504c <get_opt@@Base+0xe8>
   1502c:	ldr	r3, [ip, r3]
   15030:	add	r0, pc, r0
   15034:	ldr	r3, [r3]
   15038:	bl	13fec <fwrite@plt>
   1503c:	mvn	r0, #0
   15040:	bl	14040 <exit@plt>
   15044:	andeq	r8, r5, r8, ror r0
   15048:	andeq	r0, r0, r0, lsr #1
   1504c:	andeq	ip, r2, r0, lsl #13

00015050 <parse_opts@@Base>:
   15050:	cmp	r0, #1
   15054:	bxle	lr
   15058:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1505c:	mov	r5, r2
   15060:	mov	r4, #1
   15064:	strd	r6, [sp, #8]
   15068:	mov	r7, r1
   1506c:	mov	r6, r0
   15070:	str	r8, [sp, #16]
   15074:	str	lr, [sp, #20]
   15078:	b	1509c <parse_opts@@Base+0x4c>
   1507c:	ldr	r2, [r5, #204]	; 0xcc
   15080:	mov	r4, ip
   15084:	cmp	r6, r4
   15088:	ldr	r3, [r5, #212]	; 0xd4
   1508c:	add	r0, r3, #1
   15090:	str	r0, [r5, #212]	; 0xd4
   15094:	str	r1, [r2, r3, lsl #2]
   15098:	ble	150dc <parse_opts@@Base+0x8c>
   1509c:	ldr	r1, [r7, r4, lsl #2]
   150a0:	lsl	lr, r4, #2
   150a4:	add	ip, r4, #1
   150a8:	ldrb	r3, [r1]
   150ac:	cmp	r3, #45	; 0x2d
   150b0:	bne	1507c <parse_opts@@Base+0x2c>
   150b4:	cmp	r6, ip
   150b8:	add	lr, r7, lr
   150bc:	mov	r2, #0
   150c0:	mov	r0, r5
   150c4:	ldrgt	r2, [lr, #4]
   150c8:	bl	14f64 <get_opt@@Base>
   150cc:	add	r4, r0, r4
   150d0:	add	r4, r4, #1
   150d4:	cmp	r6, r4
   150d8:	bgt	1509c <parse_opts@@Base+0x4c>
   150dc:	ldrd	r4, [sp]
   150e0:	ldrd	r6, [sp, #8]
   150e4:	ldr	r8, [sp, #16]
   150e8:	add	sp, sp, #20
   150ec:	pop	{pc}		; (ldr pc, [sp], #4)
   150f0:	add	r0, r0, #172	; 0xac
   150f4:	mov	r2, #1
   150f8:	b	2c038 <ptr_set_insert_item@@Base>
   150fc:	ldr	r3, [pc, #48]	; 15134 <parse_opts@@Base+0xe4>
   15100:	mov	r2, #34	; 0x22
   15104:	mov	r1, #1
   15108:	str	r4, [sp, #-8]!
   1510c:	ldr	ip, [pc, #36]	; 15138 <parse_opts@@Base+0xe8>
   15110:	str	lr, [sp, #4]
   15114:	ldr	r0, [pc, #32]	; 1513c <parse_opts@@Base+0xec>
   15118:	add	r3, pc, r3
   1511c:	ldr	r3, [r3, ip]
   15120:	add	r0, pc, r0
   15124:	ldr	r3, [r3]
   15128:	bl	13fec <fwrite@plt>
   1512c:	mov	r0, #1
   15130:	bl	14040 <exit@plt>
   15134:	andeq	r7, r5, r0, ror #29
   15138:	andeq	r0, r0, r0, lsr #1
   1513c:	andeq	ip, r2, ip, lsl #14

00015140 <flatcc_init_options@@Base>:
   15140:	mov	r2, #212	; 0xd4
   15144:	mov	r1, #0
   15148:	str	r4, [sp, #-16]!
   1514c:	mov	r4, r0
   15150:	add	r0, r0, #12
   15154:	strd	r6, [sp, #4]
   15158:	str	lr, [sp, #12]
   1515c:	movw	r6, #65534	; 0xfffe
   15160:	mov	r7, #0
   15164:	bl	1407c <memset@plt>
   15168:	mov	r3, #100	; 0x64
   1516c:	mov	r2, #65536	; 0x10000
   15170:	ldr	r0, [pc, #140]	; 15204 <flatcc_init_options@@Base+0xc4>
   15174:	mov	ip, #2
   15178:	ldr	r1, [pc, #136]	; 15208 <flatcc_init_options@@Base+0xc8>
   1517c:	strd	r2, [r4]
   15180:	ldr	r2, [pc, #132]	; 1520c <flatcc_init_options@@Base+0xcc>
   15184:	add	r0, pc, r0
   15188:	str	r3, [r4, #8]
   1518c:	mov	r3, #1
   15190:	str	ip, [r4, #68]	; 0x44
   15194:	mov	ip, #4
   15198:	add	r1, pc, r1
   1519c:	strd	r6, [r4, #88]	; 0x58
   151a0:	ldrd	r6, [sp, #4]
   151a4:	add	r2, pc, r2
   151a8:	str	r3, [r4, #16]
   151ac:	str	r3, [r4, #20]
   151b0:	str	r3, [r4, #24]
   151b4:	str	r3, [r4, #28]
   151b8:	str	r3, [r4, #32]
   151bc:	str	r3, [r4, #36]	; 0x24
   151c0:	str	r3, [r4, #40]	; 0x28
   151c4:	str	r3, [r4, #44]	; 0x2c
   151c8:	str	r3, [r4, #48]	; 0x30
   151cc:	str	r3, [r4, #52]	; 0x34
   151d0:	str	ip, [r4, #64]	; 0x40
   151d4:	str	r3, [r4, #72]	; 0x48
   151d8:	str	r3, [r4, #76]	; 0x4c
   151dc:	str	r3, [r4, #84]	; 0x54
   151e0:	strd	r0, [r4, #96]	; 0x60
   151e4:	str	r2, [r4, #104]	; 0x68
   151e8:	str	r3, [r4, #136]	; 0x88
   151ec:	str	r3, [r4, #140]	; 0x8c
   151f0:	str	ip, [r4, #176]	; 0xb0
   151f4:	str	r3, [r4, #184]	; 0xb8
   151f8:	ldr	r4, [sp]
   151fc:	add	sp, sp, #12
   15200:	pop	{pc}		; (ldr pc, [sp], #4)
   15204:	andeq	ip, r2, ip, asr #13
   15208:	andeq	ip, r2, r0, asr #13
   1520c:			; <UNDEFINED> instruction: 0x0002c6bc

00015210 <flatcc_create_context@@Base>:
   15210:	strd	r4, [sp, #-28]!	; 0xffffffe4
   15214:	mov	r5, r0
   15218:	mov	r0, #560	; 0x230
   1521c:	strd	r6, [sp, #8]
   15220:	mov	r6, r1
   15224:	mov	r7, r3
   15228:	strd	r8, [sp, #16]
   1522c:	mov	r8, r2
   15230:	str	lr, [sp, #24]
   15234:	sub	sp, sp, #12
   15238:	bl	14010 <malloc@plt>
   1523c:	subs	r4, r0, #0
   15240:	beq	15264 <flatcc_create_context@@Base+0x54>
   15244:	mov	r9, #0
   15248:	mov	r3, r8
   1524c:	mov	r2, r6
   15250:	mov	r1, r5
   15254:	stm	sp, {r7, r9}
   15258:	bl	30494 <__flatcc_fb_init_parser@@Base>
   1525c:	cmp	r0, r9
   15260:	bne	15280 <flatcc_create_context@@Base+0x70>
   15264:	mov	r0, r4
   15268:	add	sp, sp, #12
   1526c:	ldrd	r4, [sp]
   15270:	ldrd	r6, [sp, #8]
   15274:	ldrd	r8, [sp, #16]
   15278:	add	sp, sp, #24
   1527c:	pop	{pc}		; (ldr pc, [sp], #4)
   15280:	mov	r0, r4
   15284:	mov	r4, r9
   15288:	bl	13fa4 <free@plt>
   1528c:	b	15264 <flatcc_create_context@@Base+0x54>

00015290 <flatcc_parse_buffer@@Base>:
   15290:	ldr	r3, [r0, #128]	; 0x80
   15294:	strd	r4, [sp, #-24]!	; 0xffffffe8
   15298:	strd	r6, [sp, #8]
   1529c:	mov	r6, r2
   152a0:	mov	r2, #1
   152a4:	str	r8, [sp, #16]
   152a8:	str	lr, [sp, #20]
   152ac:	cmp	r3, #0
   152b0:	cmpne	r3, r6
   152b4:	str	r2, [r0, #140]	; 0x8c
   152b8:	movcc	r4, #1
   152bc:	movcs	r4, #0
   152c0:	bcc	15324 <flatcc_parse_buffer@@Base+0x94>
   152c4:	mov	r5, r0
   152c8:	mov	r7, r1
   152cc:	add	r1, r0, #352	; 0x160
   152d0:	add	r0, r0, #524	; 0x20c
   152d4:	bl	2c038 <ptr_set_insert_item@@Base>
   152d8:	mov	r3, r4
   152dc:	mov	r2, r6
   152e0:	mov	r1, r7
   152e4:	mov	r0, r5
   152e8:	bl	307a0 <__flatcc_fb_parse@@Base>
   152ec:	cmp	r0, #0
   152f0:	bne	1531c <flatcc_parse_buffer@@Base+0x8c>
   152f4:	mov	r0, r5
   152f8:	bl	36af0 <__flatcc_fb_build_schema@@Base>
   152fc:	adds	r0, r0, #0
   15300:	movne	r0, #1
   15304:	rsb	r0, r0, #0
   15308:	ldrd	r4, [sp]
   1530c:	ldrd	r6, [sp, #8]
   15310:	ldr	r8, [sp, #16]
   15314:	add	sp, sp, #20
   15318:	pop	{pc}		; (ldr pc, [sp], #4)
   1531c:	mvn	r0, #0
   15320:	b	15308 <flatcc_parse_buffer@@Base+0x78>
   15324:	ldr	r1, [pc, #12]	; 15338 <flatcc_parse_buffer@@Base+0xa8>
   15328:	add	r1, pc, r1
   1532c:	bl	2eb08 <__flatcc_fb_print_error@@Base>
   15330:	mvn	r0, #0
   15334:	b	15308 <flatcc_parse_buffer@@Base+0x78>
   15338:	andeq	ip, r2, r0, asr #10

0001533c <flatcc_generate_binary_schema_to_buffer@@Base>:
   1533c:	push	{lr}		; (str lr, [sp, #-4]!)
   15340:	sub	sp, sp, #12
   15344:	mov	ip, r0
   15348:	add	r3, sp, #4
   1534c:	add	r0, r0, #128	; 0x80
   15350:	str	r2, [sp, #4]
   15354:	mov	r2, r1
   15358:	add	r1, ip, #352	; 0x160
   1535c:	bl	2af04 <__flatcc_fb_codegen_bfbs_to_buffer@@Base>
   15360:	cmp	r0, #0
   15364:	ldrne	r0, [sp, #4]
   15368:	mvneq	r0, #0
   1536c:	add	sp, sp, #12
   15370:	pop	{pc}		; (ldr pc, [sp], #4)

00015374 <flatcc_generate_binary_schema@@Base>:
   15374:	mov	r3, r0
   15378:	mov	r2, r1
   1537c:	add	r0, r0, #128	; 0x80
   15380:	add	r1, r3, #352	; 0x160
   15384:	b	2af98 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>

00015388 <flatcc_generate_files@@Base>:
   15388:	strd	r4, [sp, #-20]!	; 0xffffffec
   1538c:	subs	r5, r0, #0
   15390:	strd	r6, [sp, #8]
   15394:	str	lr, [sp, #16]
   15398:	sub	sp, sp, #236	; 0xec
   1539c:	beq	15490 <flatcc_generate_files@@Base+0x108>
   153a0:	ldr	r2, [r5, #108]	; 0x6c
   153a4:	cmp	r2, #0
   153a8:	bne	15490 <flatcc_generate_files@@Base+0x108>
   153ac:	mov	r4, r5
   153b0:	b	153b8 <flatcc_generate_files@@Base+0x30>
   153b4:	mov	r4, r3
   153b8:	ldr	r3, [r4]
   153bc:	str	r2, [r4, #4]
   153c0:	mov	r2, r4
   153c4:	cmp	r3, #0
   153c8:	bne	153b4 <flatcc_generate_files@@Base+0x2c>
   153cc:	ldr	r3, [r5, #308]	; 0x134
   153d0:	add	r6, r5, #128	; 0x80
   153d4:	cmp	r3, #0
   153d8:	bne	1547c <flatcc_generate_files@@Base+0xf4>
   153dc:	mov	r7, sp
   153e0:	mov	r1, r6
   153e4:	mov	r0, r7
   153e8:	bl	15d7c <__flatcc_fb_init_output_c@@Base>
   153ec:	cmp	r0, #0
   153f0:	bne	15490 <flatcc_generate_files@@Base+0x108>
   153f4:	ldr	r3, [r5, #256]	; 0x100
   153f8:	cmp	r3, #0
   153fc:	beq	15498 <flatcc_generate_files@@Base+0x110>
   15400:	ldr	r6, [r5, #120]	; 0x78
   15404:	cmp	r6, #0
   15408:	beq	15428 <flatcc_generate_files@@Base+0xa0>
   1540c:	ldr	r3, [r5, #300]	; 0x12c
   15410:	cmp	r3, #0
   15414:	beq	154ac <flatcc_generate_files@@Base+0x124>
   15418:	ldr	r3, [r4, #108]	; 0x6c
   1541c:	cmp	r3, #0
   15420:	beq	15448 <flatcc_generate_files@@Base+0xc0>
   15424:	mov	r6, #1
   15428:	mov	r0, r7
   1542c:	bl	15d2c <__flatcc_fb_end_output_c@@Base>
   15430:	mov	r0, r6
   15434:	add	sp, sp, #236	; 0xec
   15438:	ldrd	r4, [sp]
   1543c:	ldrd	r6, [sp, #8]
   15440:	add	sp, sp, #16
   15444:	pop	{pc}		; (ldr pc, [sp], #4)
   15448:	add	r1, r4, #352	; 0x160
   1544c:	mov	r0, r7
   15450:	bl	16404 <__flatcc_fb_codegen_c@@Base>
   15454:	ldr	r4, [r4, #4]
   15458:	clz	r3, r0
   1545c:	lsr	r3, r3, #5
   15460:	cmp	r4, #0
   15464:	moveq	r3, #0
   15468:	cmp	r3, #0
   1546c:	bne	15418 <flatcc_generate_files@@Base+0x90>
   15470:	adds	r6, r0, #0
   15474:	movne	r6, #1
   15478:	b	15428 <flatcc_generate_files@@Base+0xa0>
   1547c:	add	r1, r5, #352	; 0x160
   15480:	mov	r0, r6
   15484:	bl	2b018 <__flatcc_fb_codegen_bfbs_to_file@@Base>
   15488:	cmp	r0, #0
   1548c:	beq	153dc <flatcc_generate_files@@Base+0x54>
   15490:	mvn	r6, #0
   15494:	b	15430 <flatcc_generate_files@@Base+0xa8>
   15498:	mov	r0, r7
   1549c:	bl	1632c <__flatcc_fb_codegen_common_c@@Base>
   154a0:	subs	r6, r0, #0
   154a4:	beq	15400 <flatcc_generate_files@@Base+0x78>
   154a8:	b	15428 <flatcc_generate_files@@Base+0xa0>
   154ac:	add	r1, r5, #352	; 0x160
   154b0:	mov	r0, r7
   154b4:	bl	16404 <__flatcc_fb_codegen_c@@Base>
   154b8:	mov	r6, r0
   154bc:	b	15428 <flatcc_generate_files@@Base+0xa0>

000154c0 <flatcc_destroy_context@@Base>:
   154c0:	strd	r4, [sp, #-16]!
   154c4:	subs	r4, r0, #0
   154c8:	str	r6, [sp, #8]
   154cc:	str	lr, [sp, #12]
   154d0:	beq	154f0 <flatcc_destroy_context@@Base+0x30>
   154d4:	ldr	r5, [r4]
   154d8:	mov	r0, r4
   154dc:	bl	3356c <__flatcc_fb_clear_parser@@Base>
   154e0:	mov	r0, r4
   154e4:	bl	13fa4 <free@plt>
   154e8:	subs	r4, r5, #0
   154ec:	bne	154d4 <flatcc_destroy_context@@Base+0x14>
   154f0:	ldrd	r4, [sp]
   154f4:	ldr	r6, [sp, #8]
   154f8:	add	sp, sp, #12
   154fc:	pop	{pc}		; (ldr pc, [sp], #4)

00015500 <flatcc_parse_file@@Base>:
   15500:	ldr	r3, [pc, #1556]	; 15b1c <flatcc_parse_file@@Base+0x61c>
   15504:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15508:	mov	r4, r0
   1550c:	mov	r0, r1
   15510:	add	r5, r4, #352	; 0x160
   15514:	strd	r6, [sp, #8]
   15518:	mov	r6, r1
   1551c:	strd	r8, [sp, #16]
   15520:	strd	sl, [sp, #24]
   15524:	add	r3, pc, r3
   15528:	str	lr, [sp, #32]
   1552c:	sub	sp, sp, #36	; 0x24
   15530:	str	r5, [sp, #8]
   15534:	str	r3, [sp, #12]
   15538:	bl	1404c <strlen@plt>
   1553c:	mov	r8, r0
   15540:	ldr	r0, [r4, #412]	; 0x19c
   15544:	mov	r1, r5
   15548:	mov	r2, #1
   1554c:	add	r0, r0, #32
   15550:	bl	2dfcc <fb_schema_table_insert_item@@Base>
   15554:	cmp	r0, #0
   15558:	beq	15580 <flatcc_parse_file@@Base+0x80>
   1555c:	mov	r9, #0
   15560:	mov	r0, r9
   15564:	add	sp, sp, #36	; 0x24
   15568:	ldrd	r4, [sp]
   1556c:	ldrd	r6, [sp, #8]
   15570:	ldrd	r8, [sp, #16]
   15574:	ldrd	sl, [sp, #24]
   15578:	add	sp, sp, #32
   1557c:	pop	{pc}		; (ldr pc, [sp], #4)
   15580:	ldr	r3, [r4, #552]	; 0x228
   15584:	cmp	r3, #0
   15588:	str	r3, [sp, #16]
   1558c:	str	r3, [sp, #20]
   15590:	beq	1582c <flatcc_parse_file@@Base+0x32c>
   15594:	ldr	r3, [r4, #336]	; 0x150
   15598:	cmp	r3, #0
   1559c:	ble	1579c <flatcc_parse_file@@Base+0x29c>
   155a0:	ldr	fp, [pc, #1400]	; 15b20 <flatcc_parse_file@@Base+0x620>
   155a4:	mov	r5, #0
   155a8:	mov	sl, #1
   155ac:	add	r9, sp, #28
   155b0:	add	fp, pc, fp
   155b4:	ldr	r3, [r4, #328]	; 0x148
   155b8:	ldr	r7, [r3, r5, lsl #2]
   155bc:	mov	r0, r7
   155c0:	bl	1404c <strlen@plt>
   155c4:	mov	r1, r0
   155c8:	mov	r3, r8
   155cc:	str	fp, [sp]
   155d0:	mov	r0, r7
   155d4:	mov	r2, r6
   155d8:	str	sl, [sp, #4]
   155dc:	bl	2e1bc <__flatcc_fb_create_join_path_n@@Base>
   155e0:	subs	r7, r0, #0
   155e4:	beq	15a5c <flatcc_parse_file@@Base+0x55c>
   155e8:	mov	r2, r9
   155ec:	ldr	r1, [r4, #128]	; 0x80
   155f0:	bl	2e660 <__flatcc_fb_read_file@@Base>
   155f4:	cmp	r0, #0
   155f8:	beq	1575c <flatcc_parse_file@@Base+0x25c>
   155fc:	mov	r1, r0
   15600:	ldr	lr, [r4, #412]	; 0x19c
   15604:	mov	r3, #1
   15608:	mov	r0, r4
   1560c:	ldr	r5, [sp, #28]
   15610:	ldr	ip, [lr, #56]	; 0x38
   15614:	mov	r2, r5
   15618:	add	ip, ip, r5
   1561c:	str	ip, [lr, #56]	; 0x38
   15620:	str	r7, [r4, #548]	; 0x224
   15624:	bl	307a0 <__flatcc_fb_parse@@Base>
   15628:	subs	r9, r0, #0
   1562c:	bne	1555c <flatcc_parse_file@@Base+0x5c>
   15630:	ldr	r6, [r4, #352]	; 0x160
   15634:	cmp	r6, #0
   15638:	beq	158ac <flatcc_parse_file@@Base+0x3ac>
   1563c:	ldr	r3, [pc, #1248]	; 15b24 <flatcc_parse_file@@Base+0x624>
   15640:	add	sl, r4, #128	; 0x80
   15644:	str	r9, [sp, #16]
   15648:	ldr	fp, [pc, #1240]	; 15b28 <flatcc_parse_file@@Base+0x628>
   1564c:	ldr	r9, [sp, #8]
   15650:	add	r3, pc, r3
   15654:	add	fp, pc, fp
   15658:	str	r3, [sp, #12]
   1565c:	b	1568c <flatcc_parse_file@@Base+0x18c>
   15660:	add	r0, r0, #172	; 0xac
   15664:	mov	r2, r9
   15668:	mov	r1, fp
   1566c:	bl	2c074 <ptr_set_visit@@Base>
   15670:	mov	r0, r7
   15674:	bl	154c0 <flatcc_destroy_context@@Base>
   15678:	mov	r0, r8
   1567c:	bl	13fa4 <free@plt>
   15680:	ldr	r6, [r6]
   15684:	cmp	r6, #0
   15688:	beq	158ac <flatcc_parse_file@@Base+0x3ac>
   1568c:	ldrd	r0, [r6, #8]
   15690:	bl	2e0a8 <__flatcc_fb_copy_path_n@@Base>
   15694:	subs	r8, r0, #0
   15698:	beq	15a28 <flatcc_parse_file@@Base+0x528>
   1569c:	ldr	r3, [r4, #132]	; 0x84
   156a0:	ldr	r5, [r4, #412]	; 0x19c
   156a4:	ldr	r2, [r5, #52]	; 0x34
   156a8:	cmp	r2, r3
   156ac:	cmpge	r3, #0
   156b0:	bgt	15a44 <flatcc_parse_file@@Base+0x544>
   156b4:	ldr	r2, [r5, #48]	; 0x30
   156b8:	ldr	r3, [r4, #136]	; 0x88
   156bc:	cmp	r2, r3
   156c0:	cmpge	r3, #0
   156c4:	bgt	15a2c <flatcc_parse_file@@Base+0x52c>
   156c8:	mov	r0, #560	; 0x230
   156cc:	bl	14010 <malloc@plt>
   156d0:	subs	r7, r0, #0
   156d4:	beq	1588c <flatcc_parse_file@@Base+0x38c>
   156d8:	ldr	ip, [r4, #12]
   156dc:	mov	r2, r8
   156e0:	mov	r1, sl
   156e4:	str	r5, [sp, #4]
   156e8:	ldr	r3, [r4, #8]
   156ec:	str	ip, [sp]
   156f0:	bl	30494 <__flatcc_fb_init_parser@@Base>
   156f4:	cmp	r0, #0
   156f8:	bne	1589c <flatcc_parse_file@@Base+0x39c>
   156fc:	add	r1, r7, #352	; 0x160
   15700:	add	r0, r5, #32
   15704:	bl	2e00c <fb_schema_table_find_item@@Base>
   15708:	cmp	r0, #0
   1570c:	bne	15660 <flatcc_parse_file@@Base+0x160>
   15710:	ldrd	r2, [r5, #48]	; 0x30
   15714:	mov	r1, r8
   15718:	ldr	r0, [r4]
   1571c:	str	r7, [r4]
   15720:	ldr	ip, [r4, #548]	; 0x224
   15724:	add	r3, r3, #1
   15728:	add	r2, r2, #1
   1572c:	str	r0, [r7]
   15730:	mov	r0, r7
   15734:	str	ip, [r7, #552]	; 0x228
   15738:	strd	r2, [r5, #48]	; 0x30
   1573c:	bl	15500 <flatcc_parse_file@@Base>
   15740:	cmp	r0, #0
   15744:	bne	1588c <flatcc_parse_file@@Base+0x38c>
   15748:	add	r0, r7, #524	; 0x20c
   1574c:	mov	r2, r9
   15750:	ldr	r1, [sp, #12]
   15754:	bl	2c074 <ptr_set_visit@@Base>
   15758:	b	15678 <flatcc_parse_file@@Base+0x178>
   1575c:	mov	r0, r7
   15760:	bl	13fa4 <free@plt>
   15764:	ldr	r2, [sp, #28]
   15768:	ldr	r3, [r4, #128]	; 0x80
   1576c:	cmp	r3, #0
   15770:	cmpne	r3, r2
   15774:	bcc	15814 <flatcc_parse_file@@Base+0x314>
   15778:	ldr	r3, [r4, #336]	; 0x150
   1577c:	add	r5, r5, #1
   15780:	cmp	r3, r5
   15784:	bgt	155b4 <flatcc_parse_file@@Base+0xb4>
   15788:	ldr	r3, [sp, #16]
   1578c:	cmp	r3, #0
   15790:	beq	15870 <flatcc_parse_file@@Base+0x370>
   15794:	ldr	r3, [r4, #552]	; 0x228
   15798:	str	r3, [sp, #16]
   1579c:	ldr	r5, [sp, #16]
   157a0:	mov	r0, r5
   157a4:	bl	1404c <strlen@plt>
   157a8:	mov	r1, r0
   157ac:	mov	r0, r5
   157b0:	bl	2e59c <__flatcc_fb_find_basename@@Base>
   157b4:	ldr	ip, [pc, #880]	; 15b2c <flatcc_parse_file@@Base+0x62c>
   157b8:	mov	r2, #1
   157bc:	mov	r1, r0
   157c0:	mov	r3, r8
   157c4:	mov	r0, r5
   157c8:	str	r2, [sp, #4]
   157cc:	mov	r2, r6
   157d0:	add	ip, pc, ip
   157d4:	str	ip, [sp]
   157d8:	bl	2e1bc <__flatcc_fb_create_join_path_n@@Base>
   157dc:	subs	r7, r0, #0
   157e0:	beq	15a28 <flatcc_parse_file@@Base+0x528>
   157e4:	add	r2, sp, #28
   157e8:	ldr	r1, [r4, #128]	; 0x80
   157ec:	bl	2e660 <__flatcc_fb_read_file@@Base>
   157f0:	subs	r1, r0, #0
   157f4:	bne	15600 <flatcc_parse_file@@Base+0x100>
   157f8:	mov	r0, r7
   157fc:	bl	13fa4 <free@plt>
   15800:	ldr	r2, [sp, #28]
   15804:	ldr	r3, [r4, #128]	; 0x80
   15808:	cmp	r3, #0
   1580c:	cmpne	r3, r2
   15810:	bcs	15870 <flatcc_parse_file@@Base+0x370>
   15814:	ldr	r1, [pc, #788]	; 15b30 <flatcc_parse_file@@Base+0x630>
   15818:	mov	r0, r4
   1581c:	mvn	r9, #0
   15820:	add	r1, pc, r1
   15824:	bl	2eb08 <__flatcc_fb_print_error@@Base>
   15828:	b	15560 <flatcc_parse_file@@Base+0x60>
   1582c:	add	r2, sp, #28
   15830:	mov	r0, r6
   15834:	ldr	r1, [r4, #128]	; 0x80
   15838:	bl	2e660 <__flatcc_fb_read_file@@Base>
   1583c:	subs	r1, r0, #0
   15840:	bne	15a10 <flatcc_parse_file@@Base+0x510>
   15844:	ldr	r1, [sp, #28]
   15848:	ldr	r3, [r4, #412]	; 0x19c
   1584c:	ldr	r2, [r4, #128]	; 0x80
   15850:	ldr	r3, [r3, #56]	; 0x38
   15854:	add	r3, r3, r1
   15858:	cmp	r2, #0
   1585c:	cmpne	r3, r2
   15860:	bhi	15814 <flatcc_parse_file@@Base+0x314>
   15864:	ldr	r3, [r4, #336]	; 0x150
   15868:	cmp	r3, #0
   1586c:	bgt	155a0 <flatcc_parse_file@@Base+0xa0>
   15870:	ldr	r1, [pc, #700]	; 15b34 <flatcc_parse_file@@Base+0x634>
   15874:	mov	r2, r6
   15878:	mov	r0, r4
   1587c:	mvn	r9, #0
   15880:	add	r1, pc, r1
   15884:	bl	2eb08 <__flatcc_fb_print_error@@Base>
   15888:	b	15560 <flatcc_parse_file@@Base+0x60>
   1588c:	ldr	r9, [sp, #16]
   15890:	mov	r0, r8
   15894:	bl	13fa4 <free@plt>
   15898:	b	15560 <flatcc_parse_file@@Base+0x60>
   1589c:	mov	r0, r7
   158a0:	ldr	r9, [sp, #16]
   158a4:	bl	13fa4 <free@plt>
   158a8:	b	15890 <flatcc_parse_file@@Base+0x390>
   158ac:	mov	r2, #1
   158b0:	add	r0, r4, #524	; 0x20c
   158b4:	ldr	r1, [sp, #8]
   158b8:	bl	2c038 <ptr_set_insert_item@@Base>
   158bc:	mov	r0, r4
   158c0:	bl	36af0 <__flatcc_fb_build_schema@@Base>
   158c4:	subs	r9, r0, #0
   158c8:	bne	1555c <flatcc_parse_file@@Base+0x5c>
   158cc:	ldr	r3, [sp, #20]
   158d0:	ldr	r2, [r4, #240]	; 0xf0
   158d4:	clz	r3, r3
   158d8:	lsr	r3, r3, #5
   158dc:	cmp	r2, #0
   158e0:	moveq	r3, #0
   158e4:	cmp	r3, #0
   158e8:	beq	1555c <flatcc_parse_file@@Base+0x5c>
   158ec:	ldr	r3, [r4, #552]	; 0x228
   158f0:	cmp	r3, #0
   158f4:	bne	15afc <flatcc_parse_file@@Base+0x5fc>
   158f8:	ldr	r5, [r4, #344]	; 0x158
   158fc:	cmp	r5, #0
   15900:	beq	15ae0 <flatcc_parse_file@@Base+0x5e0>
   15904:	ldr	r1, [r4, #244]	; 0xf4
   15908:	ldr	r6, [r4, #248]	; 0xf8
   1590c:	ldr	r3, [r4, #512]	; 0x200
   15910:	cmp	r1, #0
   15914:	beq	15acc <flatcc_parse_file@@Base+0x5cc>
   15918:	ldr	r2, [pc, #536]	; 15b38 <flatcc_parse_file@@Base+0x638>
   1591c:	add	r2, pc, r2
   15920:	mov	r0, r2
   15924:	cmp	r6, #0
   15928:	beq	15ab0 <flatcc_parse_file@@Base+0x5b0>
   1592c:	ldr	r5, [pc, #520]	; 15b3c <flatcc_parse_file@@Base+0x63c>
   15930:	add	r5, pc, r5
   15934:	mov	r7, r5
   15938:	mov	r3, #1
   1593c:	bl	2e320 <__flatcc_fb_create_join_path@@Base>
   15940:	subs	r8, r0, #0
   15944:	beq	15a28 <flatcc_parse_file@@Base+0x528>
   15948:	mov	r0, r5
   1594c:	mov	r2, r7
   15950:	mov	r1, r6
   15954:	mov	r3, #1
   15958:	bl	2e320 <__flatcc_fb_create_join_path@@Base>
   1595c:	subs	r5, r0, #0
   15960:	beq	15a28 <flatcc_parse_file@@Base+0x528>
   15964:	bl	2e574 <__flatcc_fb_create_make_path@@Base>
   15968:	subs	sl, r0, #0
   1596c:	beq	15a28 <flatcc_parse_file@@Base+0x528>
   15970:	mov	r0, r5
   15974:	bl	13fa4 <free@plt>
   15978:	ldr	r1, [pc, #448]	; 15b40 <flatcc_parse_file@@Base+0x640>
   1597c:	mov	r0, r8
   15980:	add	r1, pc, r1
   15984:	bl	13f98 <fopen@plt>
   15988:	subs	r6, r0, #0
   1598c:	beq	15a88 <flatcc_parse_file@@Base+0x588>
   15990:	ldr	r1, [pc, #428]	; 15b44 <flatcc_parse_file@@Base+0x644>
   15994:	mov	r2, sl
   15998:	add	r1, pc, r1
   1599c:	bl	14064 <fprintf@plt>
   159a0:	ldr	r4, [r4]
   159a4:	cmp	r4, #0
   159a8:	beq	159e8 <flatcc_parse_file@@Base+0x4e8>
   159ac:	ldr	r7, [pc, #404]	; 15b48 <flatcc_parse_file@@Base+0x648>
   159b0:	add	r7, pc, r7
   159b4:	ldr	r0, [r4, #548]	; 0x224
   159b8:	bl	2e574 <__flatcc_fb_create_make_path@@Base>
   159bc:	subs	r5, r0, #0
   159c0:	beq	15a28 <flatcc_parse_file@@Base+0x528>
   159c4:	mov	r2, r5
   159c8:	mov	r1, r7
   159cc:	mov	r0, r6
   159d0:	bl	14064 <fprintf@plt>
   159d4:	ldr	r4, [r4]
   159d8:	mov	r0, r5
   159dc:	bl	13fa4 <free@plt>
   159e0:	cmp	r4, #0
   159e4:	bne	159b4 <flatcc_parse_file@@Base+0x4b4>
   159e8:	mov	r1, r6
   159ec:	mov	r0, #10
   159f0:	bl	140c4 <fputc@plt>
   159f4:	mov	r0, r8
   159f8:	bl	13fa4 <free@plt>
   159fc:	mov	r0, sl
   15a00:	bl	13fa4 <free@plt>
   15a04:	mov	r0, r6
   15a08:	bl	140ac <fclose@plt>
   15a0c:	b	15560 <flatcc_parse_file@@Base+0x60>
   15a10:	mov	r0, r6
   15a14:	str	r1, [sp, #12]
   15a18:	bl	2e108 <__flatcc_fb_copy_path@@Base>
   15a1c:	subs	r7, r0, #0
   15a20:	ldr	r1, [sp, #12]
   15a24:	bne	15600 <flatcc_parse_file@@Base+0x100>
   15a28:	bl	150fc <parse_opts@@Base+0xac>
   15a2c:	ldr	r1, [pc, #280]	; 15b4c <flatcc_parse_file@@Base+0x64c>
   15a30:	mov	r0, r4
   15a34:	ldr	r9, [sp, #16]
   15a38:	add	r1, pc, r1
   15a3c:	bl	2eb08 <__flatcc_fb_print_error@@Base>
   15a40:	b	15890 <flatcc_parse_file@@Base+0x390>
   15a44:	ldr	r1, [pc, #260]	; 15b50 <flatcc_parse_file@@Base+0x650>
   15a48:	mov	r0, r4
   15a4c:	ldr	r9, [sp, #16]
   15a50:	add	r1, pc, r1
   15a54:	bl	2eb08 <__flatcc_fb_print_error@@Base>
   15a58:	b	15890 <flatcc_parse_file@@Base+0x390>
   15a5c:	ldr	r3, [pc, #240]	; 15b54 <flatcc_parse_file@@Base+0x654>
   15a60:	mov	r2, #34	; 0x22
   15a64:	mov	r1, #1
   15a68:	ldr	ip, [sp, #12]
   15a6c:	ldr	r0, [pc, #228]	; 15b58 <flatcc_parse_file@@Base+0x658>
   15a70:	ldr	r3, [ip, r3]
   15a74:	add	r0, pc, r0
   15a78:	ldr	r3, [r3]
   15a7c:	bl	13fec <fwrite@plt>
   15a80:	mov	r0, #1
   15a84:	bl	14040 <exit@plt>
   15a88:	ldr	r1, [pc, #204]	; 15b5c <flatcc_parse_file@@Base+0x65c>
   15a8c:	mov	r2, r8
   15a90:	mov	r0, r4
   15a94:	add	r1, pc, r1
   15a98:	bl	2eb08 <__flatcc_fb_print_error@@Base>
   15a9c:	mov	r0, r8
   15aa0:	bl	13fa4 <free@plt>
   15aa4:	mov	r0, sl
   15aa8:	bl	13fa4 <free@plt>
   15aac:	b	15560 <flatcc_parse_file@@Base+0x60>
   15ab0:	ldr	ip, [r4, #308]	; 0x134
   15ab4:	cmp	ip, #0
   15ab8:	bne	15aec <flatcc_parse_file@@Base+0x5ec>
   15abc:	ldr	r7, [pc, #156]	; 15b60 <flatcc_parse_file@@Base+0x660>
   15ac0:	mov	r6, r3
   15ac4:	add	r7, pc, r7
   15ac8:	b	15938 <flatcc_parse_file@@Base+0x438>
   15acc:	ldr	r2, [pc, #144]	; 15b64 <flatcc_parse_file@@Base+0x664>
   15ad0:	mov	r0, r5
   15ad4:	mov	r1, r3
   15ad8:	add	r2, pc, r2
   15adc:	b	15924 <flatcc_parse_file@@Base+0x424>
   15ae0:	ldr	r5, [pc, #128]	; 15b68 <flatcc_parse_file@@Base+0x668>
   15ae4:	add	r5, pc, r5
   15ae8:	b	15904 <flatcc_parse_file@@Base+0x404>
   15aec:	ldr	r7, [pc, #120]	; 15b6c <flatcc_parse_file@@Base+0x66c>
   15af0:	mov	r6, r3
   15af4:	add	r7, pc, r7
   15af8:	b	15938 <flatcc_parse_file@@Base+0x438>
   15afc:	ldr	r3, [pc, #108]	; 15b70 <flatcc_parse_file@@Base+0x670>
   15b00:	mov	r2, #220	; 0xdc
   15b04:	ldr	r1, [pc, #104]	; 15b74 <flatcc_parse_file@@Base+0x674>
   15b08:	ldr	r0, [pc, #104]	; 15b78 <flatcc_parse_file@@Base+0x678>
   15b0c:	add	r3, pc, r3
   15b10:	add	r1, pc, r1
   15b14:	add	r0, pc, r0
   15b18:	bl	14118 <__assert_fail@plt>
   15b1c:	ldrdeq	r7, [r5], -r4
   15b20:	andeq	r6, r3, r8, lsl #12
   15b24:			; <UNDEFINED> instruction: 0xfffffa98
   15b28:			; <UNDEFINED> instruction: 0xfffffa94
   15b2c:	andeq	r6, r3, r8, ror #7
   15b30:	andeq	ip, r2, r8, asr #32
   15b34:	andeq	ip, r2, r0, lsr #32
   15b38:	muleq	r3, ip, r2
   15b3c:	andeq	r6, r3, r8, lsl #5
   15b40:	andeq	ip, r2, r0
   15b44:	andeq	ip, r2, ip, lsl r0
   15b48:	andeq	ip, r2, r8
   15b4c:			; <UNDEFINED> instruction: 0x0002beb0
   15b50:	andeq	fp, r2, r8, ror lr
   15b54:	andeq	r0, r0, r0, lsr #1
   15b58:			; <UNDEFINED> instruction: 0x0002bdb8
   15b5c:	strdeq	fp, [r2], -r0
   15b60:	ldrdeq	fp, [r2], -r0
   15b64:			; <UNDEFINED> instruction: 0x0002bdb4
   15b68:	ldrdeq	r6, [r3], -r4
   15b6c:	andeq	fp, r2, r4, ror #26
   15b70:	andeq	fp, r2, r4, lsl #26
   15b74:	strdeq	fp, [r2], -r8
   15b78:	andeq	fp, r2, r4, asr lr
   15b7c:	mov	r0, r1
   15b80:	b	13fa4 <free@plt>
   15b84:	ldr	r3, [pc, #48]	; 15bbc <flatcc_parse_file@@Base+0x6bc>
   15b88:	mov	r2, #34	; 0x22
   15b8c:	mov	r1, #1
   15b90:	str	r4, [sp, #-8]!
   15b94:	ldr	ip, [pc, #36]	; 15bc0 <flatcc_parse_file@@Base+0x6c0>
   15b98:	str	lr, [sp, #4]
   15b9c:	ldr	r0, [pc, #32]	; 15bc4 <flatcc_parse_file@@Base+0x6c4>
   15ba0:	add	r3, pc, r3
   15ba4:	ldr	r3, [r3, ip]
   15ba8:	add	r0, pc, r0
   15bac:	ldr	r3, [r3]
   15bb0:	bl	13fec <fwrite@plt>
   15bb4:	mov	r0, #1
   15bb8:	bl	14040 <exit@plt>
   15bbc:	andeq	r7, r5, r8, asr r4
   15bc0:	andeq	r0, r0, r0, lsr #1
   15bc4:	andeq	fp, r2, r4, lsl #25

00015bc8 <__flatcc_fb_open_output_file@@Base>:
   15bc8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   15bcc:	strd	r6, [sp, #8]
   15bd0:	mov	r6, r0
   15bd4:	strd	r8, [sp, #16]
   15bd8:	mov	r9, r3
   15bdc:	mov	r8, r1
   15be0:	ldr	r3, [r0, #212]	; 0xd4
   15be4:	str	sl, [sp, #24]
   15be8:	mov	sl, r2
   15bec:	ldr	r7, [pc, #208]	; 15cc4 <__flatcc_fb_open_output_file@@Base+0xfc>
   15bf0:	str	lr, [sp, #28]
   15bf4:	sub	sp, sp, #8
   15bf8:	ldr	r5, [r3, #216]	; 0xd8
   15bfc:	add	r7, pc, r7
   15c00:	subs	r0, r5, #0
   15c04:	beq	15c3c <__flatcc_fb_open_output_file@@Base+0x74>
   15c08:	bl	1404c <strlen@plt>
   15c0c:	ldr	r4, [r6, #204]	; 0xcc
   15c10:	cmp	r4, #0
   15c14:	movne	r4, #0
   15c18:	beq	15c54 <__flatcc_fb_open_output_file@@Base+0x8c>
   15c1c:	mov	r0, r4
   15c20:	add	sp, sp, #8
   15c24:	ldrd	r4, [sp]
   15c28:	ldrd	r6, [sp, #8]
   15c2c:	ldrd	r8, [sp, #16]
   15c30:	ldr	sl, [sp, #24]
   15c34:	add	sp, sp, #28
   15c38:	pop	{pc}		; (ldr pc, [sp], #4)
   15c3c:	ldr	r4, [r6, #204]	; 0xcc
   15c40:	ldr	r5, [pc, #128]	; 15cc8 <__flatcc_fb_open_output_file@@Base+0x100>
   15c44:	cmp	r4, #0
   15c48:	movne	r4, #0
   15c4c:	add	r5, pc, r5
   15c50:	bne	15c1c <__flatcc_fb_open_output_file@@Base+0x54>
   15c54:	mov	ip, #1
   15c58:	mov	r1, r0
   15c5c:	mov	r3, sl
   15c60:	mov	r0, r5
   15c64:	mov	r2, r8
   15c68:	stm	sp, {r9, ip}
   15c6c:	bl	2e1bc <__flatcc_fb_create_join_path_n@@Base>
   15c70:	subs	r5, r0, #0
   15c74:	beq	15cc0 <__flatcc_fb_open_output_file@@Base+0xf8>
   15c78:	ldr	r1, [pc, #76]	; 15ccc <__flatcc_fb_open_output_file@@Base+0x104>
   15c7c:	add	r1, pc, r1
   15c80:	bl	13f98 <fopen@plt>
   15c84:	cmp	r0, #0
   15c88:	str	r0, [r6, #204]	; 0xcc
   15c8c:	beq	15c9c <__flatcc_fb_open_output_file@@Base+0xd4>
   15c90:	mov	r0, r5
   15c94:	bl	13fa4 <free@plt>
   15c98:	b	15c1c <__flatcc_fb_open_output_file@@Base+0x54>
   15c9c:	ldr	r3, [pc, #44]	; 15cd0 <__flatcc_fb_open_output_file@@Base+0x108>
   15ca0:	mov	r2, r5
   15ca4:	mvn	r4, #0
   15ca8:	ldr	r1, [pc, #36]	; 15cd4 <__flatcc_fb_open_output_file@@Base+0x10c>
   15cac:	ldr	r3, [r7, r3]
   15cb0:	add	r1, pc, r1
   15cb4:	ldr	r0, [r3]
   15cb8:	bl	14064 <fprintf@plt>
   15cbc:	b	15c90 <__flatcc_fb_open_output_file@@Base+0xc8>
   15cc0:	bl	15b84 <flatcc_parse_file@@Base+0x684>
   15cc4:	strdeq	r7, [r5], -ip
   15cc8:	andeq	r5, r3, ip, ror #30
   15ccc:	andeq	fp, r2, r4, lsl #26
   15cd0:	andeq	r0, r0, r0, lsr #1
   15cd4:	andeq	fp, r2, ip, lsl #26

00015cd8 <__flatcc_fb_close_output_file@@Base>:
   15cd8:	ldr	r3, [r0, #212]	; 0xd4
   15cdc:	ldr	r2, [r3, #124]	; 0x7c
   15ce0:	cmp	r2, #0
   15ce4:	bxne	lr
   15ce8:	strd	r4, [sp, #-16]!
   15cec:	ldr	r5, [r3, #108]	; 0x6c
   15cf0:	str	r6, [sp, #8]
   15cf4:	str	lr, [sp, #12]
   15cf8:	cmp	r5, #0
   15cfc:	bne	15d1c <__flatcc_fb_close_output_file@@Base+0x44>
   15d00:	ldr	r3, [r0, #204]	; 0xcc
   15d04:	cmp	r3, #0
   15d08:	beq	15d1c <__flatcc_fb_close_output_file@@Base+0x44>
   15d0c:	mov	r4, r0
   15d10:	mov	r0, r3
   15d14:	bl	140ac <fclose@plt>
   15d18:	str	r5, [r4, #204]	; 0xcc
   15d1c:	ldrd	r4, [sp]
   15d20:	ldr	r6, [sp, #8]
   15d24:	add	sp, sp, #12
   15d28:	pop	{pc}		; (ldr pc, [sp], #4)

00015d2c <__flatcc_fb_end_output_c@@Base>:
   15d2c:	ldr	r3, [pc, #64]	; 15d74 <__flatcc_fb_end_output_c@@Base+0x48>
   15d30:	str	r4, [sp, #-8]!
   15d34:	mov	r4, r0
   15d38:	ldr	r2, [pc, #56]	; 15d78 <__flatcc_fb_end_output_c@@Base+0x4c>
   15d3c:	ldr	r0, [r0, #204]	; 0xcc
   15d40:	add	r3, pc, r3
   15d44:	str	lr, [sp, #4]
   15d48:	ldr	r3, [r3, r2]
   15d4c:	ldr	r3, [r3]
   15d50:	cmp	r3, r0
   15d54:	cmpne	r0, #0
   15d58:	beq	15d60 <__flatcc_fb_end_output_c@@Base+0x34>
   15d5c:	bl	140ac <fclose@plt>
   15d60:	mov	r3, #0
   15d64:	str	r3, [r4, #204]	; 0xcc
   15d68:	ldr	r4, [sp]
   15d6c:	add	sp, sp, #4
   15d70:	pop	{pc}		; (ldr pc, [sp], #4)
   15d74:			; <UNDEFINED> instruction: 0x000572b8
   15d78:	andeq	r0, r0, ip, lsr #1

00015d7c <__flatcc_fb_init_output_c@@Base>:
   15d7c:	ldr	r3, [r1, #128]	; 0x80
   15d80:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15d84:	mov	r5, r1
   15d88:	mov	r4, r0
   15d8c:	strd	r6, [sp, #8]
   15d90:	strd	r8, [sp, #16]
   15d94:	ldr	r9, [pc, #504]	; 15f94 <__flatcc_fb_init_output_c@@Base+0x218>
   15d98:	cmp	r3, #0
   15d9c:	strd	sl, [sp, #24]
   15da0:	str	lr, [sp, #32]
   15da4:	sub	sp, sp, #4
   15da8:	add	r9, pc, r9
   15dac:	bne	15ed4 <__flatcc_fb_init_output_c@@Base+0x158>
   15db0:	ldr	r8, [r5, #216]	; 0xd8
   15db4:	ldr	sl, [pc, #476]	; 15f98 <__flatcc_fb_init_output_c@@Base+0x21c>
   15db8:	cmp	r8, #0
   15dbc:	add	sl, pc, sl
   15dc0:	beq	15ee8 <__flatcc_fb_init_output_c@@Base+0x16c>
   15dc4:	mov	r2, #232	; 0xe8
   15dc8:	mov	r1, #0
   15dcc:	mov	r0, r4
   15dd0:	bl	1407c <memset@plt>
   15dd4:	ldr	r7, [r5, #196]	; 0xc4
   15dd8:	str	r5, [r4, #212]	; 0xd4
   15ddc:	cmp	r7, #0
   15de0:	beq	15f24 <__flatcc_fb_init_output_c@@Base+0x1a8>
   15de4:	mov	r0, r7
   15de8:	bl	1404c <strlen@plt>
   15dec:	cmp	r0, #100	; 0x64
   15df0:	mov	r6, r0
   15df4:	bhi	15f6c <__flatcc_fb_init_output_c@@Base+0x1f0>
   15df8:	mov	r1, r7
   15dfc:	mov	r2, #100	; 0x64
   15e00:	mov	r0, r4
   15e04:	bl	14088 <strncpy@plt>
   15e08:	mov	r3, #0
   15e0c:	cmp	r6, r3
   15e10:	strb	r3, [r4, #100]	; 0x64
   15e14:	bne	15f0c <__flatcc_fb_init_output_c@@Base+0x190>
   15e18:	mov	r7, r4
   15e1c:	ldrb	fp, [r7], #102	; 0x66
   15e20:	cmp	fp, #0
   15e24:	beq	15e48 <__flatcc_fb_init_output_c@@Base+0xcc>
   15e28:	bl	14028 <__ctype_toupper_loc@plt>
   15e2c:	mov	r3, r4
   15e30:	ldr	r2, [r0]
   15e34:	ldr	r2, [r2, fp, lsl #2]
   15e38:	strb	r2, [r7], #1
   15e3c:	ldrb	fp, [r3, #1]!
   15e40:	cmp	fp, #0
   15e44:	bne	15e30 <__flatcc_fb_init_output_c@@Base+0xb4>
   15e48:	mov	r3, #0
   15e4c:	add	r6, r4, r6
   15e50:	strb	r3, [r7]
   15e54:	strb	r3, [r6, #102]	; 0x66
   15e58:	ldr	r6, [r5, #108]	; 0x6c
   15e5c:	ldr	r2, [r5, #176]	; 0xb0
   15e60:	cmp	r6, r3
   15e64:	str	r2, [r4, #224]	; 0xe0
   15e68:	bne	15ef4 <__flatcc_fb_init_output_c@@Base+0x178>
   15e6c:	ldr	r3, [r4, #212]	; 0xd4
   15e70:	ldr	r1, [r3, #124]	; 0x7c
   15e74:	cmp	r1, #0
   15e78:	beq	15eb4 <__flatcc_fb_init_output_c@@Base+0x138>
   15e7c:	ldr	r2, [pc, #280]	; 15f9c <__flatcc_fb_init_output_c@@Base+0x220>
   15e80:	mov	r0, r8
   15e84:	mov	r3, #1
   15e88:	add	r2, pc, r2
   15e8c:	bl	2e320 <__flatcc_fb_create_join_path@@Base>
   15e90:	subs	r5, r0, #0
   15e94:	beq	15f90 <__flatcc_fb_init_output_c@@Base+0x214>
   15e98:	mov	r1, sl
   15e9c:	bl	13f98 <fopen@plt>
   15ea0:	cmp	r0, #0
   15ea4:	str	r0, [r4, #204]	; 0xcc
   15ea8:	beq	15f48 <__flatcc_fb_init_output_c@@Base+0x1cc>
   15eac:	mov	r0, r5
   15eb0:	bl	13fa4 <free@plt>
   15eb4:	mov	r0, r6
   15eb8:	add	sp, sp, #4
   15ebc:	ldrd	r4, [sp]
   15ec0:	ldrd	r6, [sp, #8]
   15ec4:	ldrd	r8, [sp, #16]
   15ec8:	ldrd	sl, [sp, #24]
   15ecc:	add	sp, sp, #32
   15ed0:	pop	{pc}		; (ldr pc, [sp], #4)
   15ed4:	ldr	r8, [r5, #216]	; 0xd8
   15ed8:	ldr	sl, [pc, #192]	; 15fa0 <__flatcc_fb_init_output_c@@Base+0x224>
   15edc:	cmp	r8, #0
   15ee0:	add	sl, pc, sl
   15ee4:	bne	15dc4 <__flatcc_fb_init_output_c@@Base+0x48>
   15ee8:	ldr	r8, [pc, #180]	; 15fa4 <__flatcc_fb_init_output_c@@Base+0x228>
   15eec:	add	r8, pc, r8
   15ef0:	b	15dc4 <__flatcc_fb_init_output_c@@Base+0x48>
   15ef4:	ldr	r2, [pc, #172]	; 15fa8 <__flatcc_fb_init_output_c@@Base+0x22c>
   15ef8:	mov	r6, r3
   15efc:	ldr	r3, [r9, r2]
   15f00:	ldr	r3, [r3]
   15f04:	str	r3, [r4, #204]	; 0xcc
   15f08:	b	15eb4 <__flatcc_fb_init_output_c@@Base+0x138>
   15f0c:	add	r1, r6, #1
   15f10:	mov	r2, #95	; 0x5f
   15f14:	mov	r3, #0
   15f18:	strb	r2, [r4, r6]
   15f1c:	strb	r3, [r4, r1]
   15f20:	b	15e18 <__flatcc_fb_init_output_c@@Base+0x9c>
   15f24:	ldr	r1, [pc, #128]	; 15fac <__flatcc_fb_init_output_c@@Base+0x230>
   15f28:	mov	r2, #100	; 0x64
   15f2c:	mov	r0, r4
   15f30:	mov	r6, #11
   15f34:	add	r1, pc, r1
   15f38:	bl	14088 <strncpy@plt>
   15f3c:	mov	r1, #12
   15f40:	strb	r7, [r4, #100]	; 0x64
   15f44:	b	15f10 <__flatcc_fb_init_output_c@@Base+0x194>
   15f48:	ldr	r3, [pc, #96]	; 15fb0 <__flatcc_fb_init_output_c@@Base+0x234>
   15f4c:	mov	r2, r5
   15f50:	mvn	r6, #0
   15f54:	ldr	r1, [pc, #88]	; 15fb4 <__flatcc_fb_init_output_c@@Base+0x238>
   15f58:	ldr	r3, [r9, r3]
   15f5c:	add	r1, pc, r1
   15f60:	ldr	r0, [r3]
   15f64:	bl	14064 <fprintf@plt>
   15f68:	b	15eac <__flatcc_fb_init_output_c@@Base+0x130>
   15f6c:	ldr	r3, [pc, #60]	; 15fb0 <__flatcc_fb_init_output_c@@Base+0x234>
   15f70:	mov	r2, #100	; 0x64
   15f74:	mvn	r6, #0
   15f78:	ldr	r1, [pc, #56]	; 15fb8 <__flatcc_fb_init_output_c@@Base+0x23c>
   15f7c:	ldr	r3, [r9, r3]
   15f80:	add	r1, pc, r1
   15f84:	ldr	r0, [r3]
   15f88:	bl	14064 <fprintf@plt>
   15f8c:	b	15eb4 <__flatcc_fb_init_output_c@@Base+0x138>
   15f90:	bl	15b84 <flatcc_parse_file@@Base+0x684>
   15f94:	andeq	r7, r5, r0, asr r2
   15f98:	andeq	fp, r2, r4, asr #23
   15f9c:	andeq	r5, r3, r0, lsr sp
   15fa0:	andeq	fp, r2, r0, lsl #22
   15fa4:	andeq	r5, r3, ip, asr #25
   15fa8:	andeq	r0, r0, ip, lsr #1
   15fac:	andeq	fp, r2, r8, ror #21
   15fb0:	andeq	r0, r0, r0, lsr #1
   15fb4:	andeq	fp, r2, r0, ror #20
   15fb8:	andeq	fp, r2, r4, ror #20

00015fbc <__flatcc_fb_gen_c_includes@@Base>:
   15fbc:	ldr	r3, [pc, #404]	; 16158 <__flatcc_fb_gen_c_includes@@Base+0x19c>
   15fc0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15fc4:	strd	r6, [sp, #8]
   15fc8:	mov	r6, r0
   15fcc:	strd	r8, [sp, #16]
   15fd0:	mov	r9, r1
   15fd4:	mov	r1, #0
   15fd8:	strd	sl, [sp, #24]
   15fdc:	mov	sl, r2
   15fe0:	mov	r2, #0
   15fe4:	add	r3, pc, r3
   15fe8:	str	lr, [sp, #32]
   15fec:	sub	sp, sp, #36	; 0x24
   15ff0:	add	r7, sp, #16
   15ff4:	str	r3, [sp, #12]
   15ff8:	ldr	r3, [r0, #208]	; 0xd0
   15ffc:	mov	r0, #0
   16000:	ldr	r4, [r3]
   16004:	strd	r0, [sp, #16]
   16008:	ldr	r0, [r3, #164]	; 0xa4
   1600c:	mov	r3, #0
   16010:	strd	r2, [r7, #8]
   16014:	bl	2e108 <__flatcc_fb_copy_path@@Base>
   16018:	mov	r1, r0
   1601c:	mov	r2, #1
   16020:	mov	r0, r7
   16024:	bl	2b8c8 <str_set_insert_item@@Base>
   16028:	cmp	r4, #0
   1602c:	beq	160c0 <__flatcc_fb_gen_c_includes@@Base+0x104>
   16030:	ldr	r3, [pc, #292]	; 1615c <__flatcc_fb_gen_c_includes@@Base+0x1a0>
   16034:	add	r3, pc, r3
   16038:	str	r3, [sp, #8]
   1603c:	ldr	r3, [r6, #212]	; 0xd4
   16040:	ldrd	r0, [r4, #8]
   16044:	ldr	r2, [r3, #96]	; 0x60
   16048:	bl	2e5f4 <__flatcc_fb_create_basename@@Base>
   1604c:	subs	r5, r0, #0
   16050:	beq	16114 <__flatcc_fb_gen_c_includes@@Base+0x158>
   16054:	ldr	r4, [r4]
   16058:	bl	2e108 <__flatcc_fb_copy_path@@Base>
   1605c:	subs	fp, r0, #0
   16060:	beq	16140 <__flatcc_fb_gen_c_includes@@Base+0x184>
   16064:	ldrb	r8, [fp]
   16068:	cmp	r8, #0
   1606c:	beq	16090 <__flatcc_fb_gen_c_includes@@Base+0xd4>
   16070:	bl	14028 <__ctype_toupper_loc@plt>
   16074:	mov	r1, fp
   16078:	ldr	ip, [r0]
   1607c:	ldr	r2, [ip, r8, lsl #2]
   16080:	strb	r2, [r1]
   16084:	ldrb	r8, [r1, #1]!
   16088:	cmp	r8, #0
   1608c:	bne	16078 <__flatcc_fb_gen_c_includes@@Base+0xbc>
   16090:	mov	r2, #1
   16094:	mov	r1, fp
   16098:	mov	r0, r7
   1609c:	bl	2b8c8 <str_set_insert_item@@Base>
   160a0:	cmp	r0, #0
   160a4:	beq	160f0 <__flatcc_fb_gen_c_includes@@Base+0x134>
   160a8:	mov	r0, fp
   160ac:	bl	13fa4 <free@plt>
   160b0:	mov	r0, r5
   160b4:	bl	13fa4 <free@plt>
   160b8:	cmp	r4, #0
   160bc:	bne	1603c <__flatcc_fb_gen_c_includes@@Base+0x80>
   160c0:	ldr	r1, [pc, #152]	; 16160 <__flatcc_fb_gen_c_includes@@Base+0x1a4>
   160c4:	mov	r0, r7
   160c8:	mov	r2, #0
   160cc:	add	r1, pc, r1
   160d0:	bl	2b7c0 <str_set_destroy@@Base>
   160d4:	add	sp, sp, #36	; 0x24
   160d8:	ldrd	r4, [sp]
   160dc:	ldrd	r6, [sp, #8]
   160e0:	ldrd	r8, [sp, #16]
   160e4:	ldrd	sl, [sp, #24]
   160e8:	add	sp, sp, #32
   160ec:	pop	{pc}		; (ldr pc, [sp], #4)
   160f0:	mov	r2, fp
   160f4:	mov	r3, sl
   160f8:	stm	sp, {r5, r9}
   160fc:	ldr	r1, [sp, #8]
   16100:	ldr	r0, [r6, #204]	; 0xcc
   16104:	bl	14064 <fprintf@plt>
   16108:	mov	r0, r5
   1610c:	bl	13fa4 <free@plt>
   16110:	b	160b8 <__flatcc_fb_gen_c_includes@@Base+0xfc>
   16114:	ldr	r0, [pc, #72]	; 16164 <__flatcc_fb_gen_c_includes@@Base+0x1a8>
   16118:	mov	r2, #34	; 0x22
   1611c:	mov	r1, #1
   16120:	ldr	r3, [pc, #64]	; 16168 <__flatcc_fb_gen_c_includes@@Base+0x1ac>
   16124:	add	r0, pc, r0
   16128:	ldr	ip, [sp, #12]
   1612c:	ldr	r3, [ip, r3]
   16130:	ldr	r3, [r3]
   16134:	bl	13fec <fwrite@plt>
   16138:	mov	r0, #1
   1613c:	bl	14040 <exit@plt>
   16140:	ldr	r0, [pc, #36]	; 1616c <__flatcc_fb_gen_c_includes@@Base+0x1b0>
   16144:	mov	r2, #34	; 0x22
   16148:	mov	r1, #1
   1614c:	ldr	r3, [pc, #20]	; 16168 <__flatcc_fb_gen_c_includes@@Base+0x1ac>
   16150:	add	r0, pc, r0
   16154:	b	16128 <__flatcc_fb_gen_c_includes@@Base+0x16c>
   16158:	andeq	r7, r5, r4, lsl r0
   1615c:	strdeq	fp, [r2], -r4
   16160:			; <UNDEFINED> instruction: 0xfffffaa8
   16164:	andeq	fp, r2, r8, lsl #14
   16168:	andeq	r0, r0, r0, lsr #1
   1616c:	ldrdeq	fp, [r2], -ip

00016170 <__flatcc_fb_copy_scope@@Base>:
   16170:	ldr	r3, [r0]
   16174:	strd	r4, [sp, #-24]!	; 0xffffffe8
   16178:	ldr	r4, [r0, #24]
   1617c:	strd	r6, [sp, #8]
   16180:	str	r8, [sp, #16]
   16184:	cmp	r3, #0
   16188:	str	lr, [sp, #20]
   1618c:	mov	ip, r4
   16190:	mov	r6, r4
   16194:	beq	161b4 <__flatcc_fb_copy_scope@@Base+0x44>
   16198:	ldr	r2, [r3, #4]
   1619c:	ldr	r3, [r3]
   161a0:	ldr	r2, [r2, #4]
   161a4:	cmp	r3, #0
   161a8:	add	r2, r2, #1
   161ac:	add	ip, ip, r2
   161b0:	bne	16198 <__flatcc_fb_copy_scope@@Base+0x28>
   161b4:	cmp	ip, #101	; 0x65
   161b8:	movhi	r3, #0
   161bc:	mvnhi	r4, #0
   161c0:	strbhi	r3, [r1]
   161c4:	bhi	16228 <__flatcc_fb_copy_scope@@Base+0xb8>
   161c8:	mov	r5, r0
   161cc:	mov	r7, r1
   161d0:	mov	r0, r1
   161d4:	mov	r2, r4
   161d8:	ldr	r1, [r5, #20]
   161dc:	bl	13fb0 <memcpy@plt>
   161e0:	ldr	r5, [r5]
   161e4:	cmp	r5, #0
   161e8:	beq	16220 <__flatcc_fb_copy_scope@@Base+0xb0>
   161ec:	mov	r8, #95	; 0x5f
   161f0:	ldr	r3, [r5, #4]
   161f4:	add	r0, r7, r6
   161f8:	ldm	r3, {r1, r4}
   161fc:	mov	r2, r4
   16200:	add	r4, r4, r6
   16204:	bl	13fb0 <memcpy@plt>
   16208:	strb	r8, [r7, r4]
   1620c:	add	r6, r4, #1
   16210:	ldr	r5, [r5]
   16214:	cmp	r5, #0
   16218:	bne	161f0 <__flatcc_fb_copy_scope@@Base+0x80>
   1621c:	mov	r4, r6
   16220:	mov	r3, #0
   16224:	strb	r3, [r7, r6]
   16228:	mov	r0, r4
   1622c:	ldrd	r4, [sp]
   16230:	ldrd	r6, [sp, #8]
   16234:	ldr	r8, [sp, #16]
   16238:	add	sp, sp, #20
   1623c:	pop	{pc}		; (ldr pc, [sp], #4)

00016240 <__flatcc_fb_scoped_symbol_name@@Base>:
   16240:	ldr	r3, [r2, #204]	; 0xcc
   16244:	strd	r4, [sp, #-16]!
   16248:	mov	r4, r2
   1624c:	ldr	r5, [r1, #4]
   16250:	str	r6, [sp, #8]
   16254:	ldr	r6, [pc, #192]	; 1631c <__flatcc_fb_scoped_symbol_name@@Base+0xdc>
   16258:	cmp	r3, r0
   1625c:	str	lr, [sp, #12]
   16260:	add	r6, pc, r6
   16264:	beq	162e0 <__flatcc_fb_scoped_symbol_name@@Base+0xa0>
   16268:	mov	r1, r2
   1626c:	bl	16170 <__flatcc_fb_copy_scope@@Base>
   16270:	cmp	r0, #0
   16274:	strge	r0, [r4, #208]	; 0xd0
   16278:	blt	162b8 <__flatcc_fb_scoped_symbol_name@@Base+0x78>
   1627c:	ldm	r5, {r1, r2}
   16280:	add	ip, r2, r0
   16284:	str	r2, [r4, #212]	; 0xd4
   16288:	cmp	ip, #203	; 0xcb
   1628c:	str	ip, [r4, #216]	; 0xd8
   16290:	bgt	162e8 <__flatcc_fb_scoped_symbol_name@@Base+0xa8>
   16294:	add	r0, r4, r0
   16298:	bl	13fb0 <memcpy@plt>
   1629c:	ldr	r3, [r4, #216]	; 0xd8
   162a0:	mov	r2, #0
   162a4:	strb	r2, [r4, r3]
   162a8:	ldrd	r4, [sp]
   162ac:	ldr	r6, [sp, #8]
   162b0:	add	sp, sp, #12
   162b4:	pop	{pc}		; (ldr pc, [sp], #4)
   162b8:	ldr	r3, [pc, #96]	; 16320 <__flatcc_fb_scoped_symbol_name@@Base+0xe0>
   162bc:	mov	r0, #0
   162c0:	mov	r2, #28
   162c4:	mov	r1, #1
   162c8:	str	r0, [r4, #208]	; 0xd0
   162cc:	ldr	r0, [pc, #80]	; 16324 <__flatcc_fb_scoped_symbol_name@@Base+0xe4>
   162d0:	ldr	r3, [r6, r3]
   162d4:	add	r0, pc, r0
   162d8:	ldr	r3, [r3]
   162dc:	bl	13fec <fwrite@plt>
   162e0:	ldr	r0, [r4, #208]	; 0xd0
   162e4:	b	1627c <__flatcc_fb_scoped_symbol_name@@Base+0x3c>
   162e8:	ldr	r0, [pc, #48]	; 16320 <__flatcc_fb_scoped_symbol_name@@Base+0xe0>
   162ec:	mov	r3, r1
   162f0:	ldr	r1, [pc, #48]	; 16328 <__flatcc_fb_scoped_symbol_name@@Base+0xe8>
   162f4:	ldr	r0, [r6, r0]
   162f8:	add	r1, pc, r1
   162fc:	ldr	r0, [r0]
   16300:	bl	14064 <fprintf@plt>
   16304:	ldr	r0, [r4, #208]	; 0xd0
   16308:	mov	r3, #203	; 0xcb
   1630c:	ldr	r1, [r5]
   16310:	sub	r2, r3, r0
   16314:	strd	r2, [r4, #212]	; 0xd4
   16318:	b	16294 <__flatcc_fb_scoped_symbol_name@@Base+0x54>
   1631c:	muleq	r5, r8, sp
   16320:	andeq	r0, r0, r0, lsr #1
   16324:	andeq	fp, r2, ip, ror r7
   16328:	andeq	fp, r2, r8, ror r7

0001632c <__flatcc_fb_codegen_common_c@@Base>:
   1632c:	strd	r4, [sp, #-16]!
   16330:	mov	r4, r0
   16334:	str	r6, [sp, #8]
   16338:	str	lr, [sp, #12]
   1633c:	bl	1404c <strlen@plt>
   16340:	ldr	r3, [r4, #212]	; 0xd4
   16344:	sub	r6, r0, #1
   16348:	ldr	r2, [r3, #144]	; 0x90
   1634c:	cmp	r2, #0
   16350:	bne	16374 <__flatcc_fb_codegen_common_c@@Base+0x48>
   16354:	ldr	r5, [r3, #148]	; 0x94
   16358:	cmp	r5, #0
   1635c:	bne	163c0 <__flatcc_fb_codegen_common_c@@Base+0x94>
   16360:	mov	r0, r5
   16364:	ldrd	r4, [sp]
   16368:	ldr	r6, [sp, #8]
   1636c:	add	sp, sp, #12
   16370:	pop	{pc}		; (ldr pc, [sp], #4)
   16374:	ldr	r3, [pc, #128]	; 163fc <__flatcc_fb_codegen_common_c@@Base+0xd0>
   16378:	mov	r2, r6
   1637c:	mov	r1, r4
   16380:	mov	r0, r4
   16384:	add	r3, pc, r3
   16388:	bl	15bc8 <__flatcc_fb_open_output_file@@Base>
   1638c:	cmp	r0, #0
   16390:	bne	163f4 <__flatcc_fb_codegen_common_c@@Base+0xc8>
   16394:	mov	r0, r4
   16398:	bl	1a81c <__flatcc_fb_gen_common_c_header@@Base>
   1639c:	mov	r5, r0
   163a0:	mov	r0, r4
   163a4:	bl	15cd8 <__flatcc_fb_close_output_file@@Base>
   163a8:	cmp	r5, #0
   163ac:	bne	16360 <__flatcc_fb_codegen_common_c@@Base+0x34>
   163b0:	ldr	r3, [r4, #212]	; 0xd4
   163b4:	ldr	r5, [r3, #148]	; 0x94
   163b8:	cmp	r5, #0
   163bc:	beq	16360 <__flatcc_fb_codegen_common_c@@Base+0x34>
   163c0:	ldr	r3, [pc, #56]	; 16400 <__flatcc_fb_codegen_common_c@@Base+0xd4>
   163c4:	mov	r2, r6
   163c8:	mov	r1, r4
   163cc:	mov	r0, r4
   163d0:	add	r3, pc, r3
   163d4:	bl	15bc8 <__flatcc_fb_open_output_file@@Base>
   163d8:	subs	r5, r0, #0
   163dc:	bne	163f4 <__flatcc_fb_codegen_common_c@@Base+0xc8>
   163e0:	mov	r0, r4
   163e4:	bl	1f8f0 <__flatcc_fb_gen_common_c_builder_header@@Base>
   163e8:	mov	r0, r4
   163ec:	bl	15cd8 <__flatcc_fb_close_output_file@@Base>
   163f0:	b	16360 <__flatcc_fb_codegen_common_c@@Base+0x34>
   163f4:	mvn	r5, #0
   163f8:	b	16360 <__flatcc_fb_codegen_common_c@@Base+0x34>
   163fc:	andeq	fp, r2, r4, lsl r7
   16400:	ldrdeq	fp, [r2], -ip

00016404 <__flatcc_fb_codegen_c@@Base>:
   16404:	mov	r3, r1
   16408:	strd	r4, [sp, #-16]!
   1640c:	mov	r4, r0
   16410:	mov	r2, #0
   16414:	ldr	r0, [r1, #60]	; 0x3c
   16418:	mov	r1, r2
   1641c:	str	r6, [sp, #8]
   16420:	str	lr, [sp, #12]
   16424:	str	r3, [r4, #208]	; 0xd0
   16428:	bl	2d85c <fb_scope_table_find@@Base>
   1642c:	ldr	r3, [r4, #208]	; 0xd0
   16430:	ldr	r5, [r3, #160]	; 0xa0
   16434:	str	r0, [r4, #216]	; 0xd8
   16438:	mov	r0, r5
   1643c:	bl	1404c <strlen@plt>
   16440:	ldr	r3, [r4, #212]	; 0xd4
   16444:	mov	r6, r0
   16448:	ldr	r2, [r3, #152]	; 0x98
   1644c:	cmp	r2, #0
   16450:	bne	164e8 <__flatcc_fb_codegen_c@@Base+0xe4>
   16454:	ldr	r2, [r3, #156]	; 0x9c
   16458:	cmp	r2, #0
   1645c:	bne	16530 <__flatcc_fb_codegen_c@@Base+0x12c>
   16460:	ldr	r2, [r3, #160]	; 0xa0
   16464:	cmp	r2, #0
   16468:	bne	16498 <__flatcc_fb_codegen_c@@Base+0x94>
   1646c:	ldr	r2, [r3, #164]	; 0xa4
   16470:	cmp	r2, #0
   16474:	bne	16574 <__flatcc_fb_codegen_c@@Base+0x170>
   16478:	ldr	r5, [r3, #168]	; 0xa8
   1647c:	cmp	r5, #0
   16480:	bne	165b8 <__flatcc_fb_codegen_c@@Base+0x1b4>
   16484:	mov	r0, r5
   16488:	ldrd	r4, [sp]
   1648c:	ldr	r6, [sp, #8]
   16490:	add	sp, sp, #12
   16494:	pop	{pc}		; (ldr pc, [sp], #4)
   16498:	ldr	r3, [pc, #352]	; 16600 <__flatcc_fb_codegen_c@@Base+0x1fc>
   1649c:	mov	r2, r6
   164a0:	mov	r0, r4
   164a4:	ldr	r1, [r4, #208]	; 0xd0
   164a8:	add	r3, pc, r3
   164ac:	ldr	r1, [r1, #160]	; 0xa0
   164b0:	bl	15bc8 <__flatcc_fb_open_output_file@@Base>
   164b4:	cmp	r0, #0
   164b8:	bne	165f8 <__flatcc_fb_codegen_c@@Base+0x1f4>
   164bc:	mov	r0, r4
   164c0:	bl	2140c <__flatcc_fb_gen_c_verifier@@Base>
   164c4:	subs	r5, r0, #0
   164c8:	bne	16484 <__flatcc_fb_codegen_c@@Base+0x80>
   164cc:	mov	r0, r4
   164d0:	bl	15cd8 <__flatcc_fb_close_output_file@@Base>
   164d4:	ldr	r3, [r4, #212]	; 0xd4
   164d8:	ldr	r2, [r3, #164]	; 0xa4
   164dc:	cmp	r2, #0
   164e0:	beq	16478 <__flatcc_fb_codegen_c@@Base+0x74>
   164e4:	b	16574 <__flatcc_fb_codegen_c@@Base+0x170>
   164e8:	ldr	r3, [pc, #276]	; 16604 <__flatcc_fb_codegen_c@@Base+0x200>
   164ec:	mov	r2, r0
   164f0:	mov	r1, r5
   164f4:	mov	r0, r4
   164f8:	add	r3, pc, r3
   164fc:	bl	15bc8 <__flatcc_fb_open_output_file@@Base>
   16500:	cmp	r0, #0
   16504:	bne	165f8 <__flatcc_fb_codegen_c@@Base+0x1f4>
   16508:	mov	r0, r4
   1650c:	bl	1b5d0 <__flatcc_fb_gen_c_reader@@Base>
   16510:	subs	r5, r0, #0
   16514:	bne	16484 <__flatcc_fb_codegen_c@@Base+0x80>
   16518:	mov	r0, r4
   1651c:	bl	15cd8 <__flatcc_fb_close_output_file@@Base>
   16520:	ldr	r3, [r4, #212]	; 0xd4
   16524:	ldr	r2, [r3, #156]	; 0x9c
   16528:	cmp	r2, #0
   1652c:	beq	16460 <__flatcc_fb_codegen_c@@Base+0x5c>
   16530:	ldr	r3, [pc, #208]	; 16608 <__flatcc_fb_codegen_c@@Base+0x204>
   16534:	mov	r2, r6
   16538:	mov	r0, r4
   1653c:	ldr	r1, [r4, #208]	; 0xd0
   16540:	add	r3, pc, r3
   16544:	ldr	r1, [r1, #160]	; 0xa0
   16548:	bl	15bc8 <__flatcc_fb_open_output_file@@Base>
   1654c:	cmp	r0, #0
   16550:	bne	165f8 <__flatcc_fb_codegen_c@@Base+0x1f4>
   16554:	mov	r0, r4
   16558:	bl	20330 <__flatcc_fb_gen_c_builder@@Base>
   1655c:	subs	r5, r0, #0
   16560:	bne	16484 <__flatcc_fb_codegen_c@@Base+0x80>
   16564:	mov	r0, r4
   16568:	bl	15cd8 <__flatcc_fb_close_output_file@@Base>
   1656c:	ldr	r3, [r4, #212]	; 0xd4
   16570:	b	16460 <__flatcc_fb_codegen_c@@Base+0x5c>
   16574:	ldr	r3, [pc, #144]	; 1660c <__flatcc_fb_codegen_c@@Base+0x208>
   16578:	mov	r2, r6
   1657c:	mov	r0, r4
   16580:	ldr	r1, [r4, #208]	; 0xd0
   16584:	add	r3, pc, r3
   16588:	ldr	r1, [r1, #160]	; 0xa0
   1658c:	bl	15bc8 <__flatcc_fb_open_output_file@@Base>
   16590:	cmp	r0, #0
   16594:	bne	165f8 <__flatcc_fb_codegen_c@@Base+0x1f4>
   16598:	mov	r0, r4
   1659c:	bl	25620 <__flatcc_fb_gen_c_json_parser@@Base>
   165a0:	subs	r5, r0, #0
   165a4:	bne	16484 <__flatcc_fb_codegen_c@@Base+0x80>
   165a8:	mov	r0, r4
   165ac:	bl	15cd8 <__flatcc_fb_close_output_file@@Base>
   165b0:	ldr	r3, [r4, #212]	; 0xd4
   165b4:	b	16478 <__flatcc_fb_codegen_c@@Base+0x74>
   165b8:	ldr	r3, [pc, #80]	; 16610 <__flatcc_fb_codegen_c@@Base+0x20c>
   165bc:	mov	r2, r6
   165c0:	mov	r0, r4
   165c4:	ldr	r1, [r4, #208]	; 0xd0
   165c8:	add	r3, pc, r3
   165cc:	ldr	r1, [r1, #160]	; 0xa0
   165d0:	bl	15bc8 <__flatcc_fb_open_output_file@@Base>
   165d4:	cmp	r0, #0
   165d8:	bne	165f8 <__flatcc_fb_codegen_c@@Base+0x1f4>
   165dc:	mov	r0, r4
   165e0:	bl	28fc4 <__flatcc_fb_gen_c_json_printer@@Base>
   165e4:	subs	r5, r0, #0
   165e8:	bne	16484 <__flatcc_fb_codegen_c@@Base+0x80>
   165ec:	mov	r0, r4
   165f0:	bl	15cd8 <__flatcc_fb_close_output_file@@Base>
   165f4:	b	16484 <__flatcc_fb_codegen_c@@Base+0x80>
   165f8:	mvn	r5, #0
   165fc:	b	16484 <__flatcc_fb_codegen_c@@Base+0x80>
   16600:	andeq	fp, r2, r4, lsr #12
   16604:	muleq	r2, ip, r3
   16608:	andeq	fp, r2, r0, lsl #11
   1660c:	andeq	fp, r2, r4, asr r5
   16610:	andeq	fp, r2, r0, lsr #10
   16614:	strd	r4, [sp, #-16]!
   16618:	mov	r2, #220	; 0xdc
   1661c:	mov	r5, r1
   16620:	str	r6, [sp, #8]
   16624:	mov	r1, #0
   16628:	mov	r6, r0
   1662c:	str	lr, [sp, #12]
   16630:	sub	sp, sp, #224	; 0xe0
   16634:	add	r4, sp, #4
   16638:	mov	r0, r4
   1663c:	bl	1407c <memset@plt>
   16640:	ldrh	r3, [r5, #8]
   16644:	cmp	r3, #1
   16648:	bhi	16760 <__flatcc_fb_codegen_c@@Base+0x35c>
   1664c:	mov	r2, r4
   16650:	mov	r1, r5
   16654:	ldr	r0, [r5, #12]
   16658:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   1665c:	ldrh	r3, [r5, #8]
   16660:	cmp	r3, #1
   16664:	bne	16714 <__flatcc_fb_codegen_c@@Base+0x310>
   16668:	ldrd	r2, [r5, #112]	; 0x70
   1666c:	ldr	r0, [r6, #204]	; 0xcc
   16670:	orrs	r3, r2, r3
   16674:	beq	16700 <__flatcc_fb_codegen_c@@Base+0x2fc>
   16678:	ldr	r1, [pc, #256]	; 16780 <__flatcc_fb_codegen_c@@Base+0x37c>
   1667c:	mov	r3, r4
   16680:	mov	r2, r4
   16684:	add	r1, pc, r1
   16688:	bl	14064 <fprintf@plt>
   1668c:	ldr	r1, [pc, #240]	; 16784 <__flatcc_fb_codegen_c@@Base+0x380>
   16690:	mov	r3, r4
   16694:	mov	r2, r4
   16698:	ldr	r0, [r6, #204]	; 0xcc
   1669c:	add	r1, pc, r1
   166a0:	bl	14064 <fprintf@plt>
   166a4:	ldr	r1, [pc, #220]	; 16788 <__flatcc_fb_codegen_c@@Base+0x384>
   166a8:	mov	r3, r4
   166ac:	mov	r2, r4
   166b0:	ldr	r0, [r6, #204]	; 0xcc
   166b4:	add	r1, pc, r1
   166b8:	bl	14064 <fprintf@plt>
   166bc:	ldr	r1, [pc, #200]	; 1678c <__flatcc_fb_codegen_c@@Base+0x388>
   166c0:	mov	r3, r4
   166c4:	mov	r2, r4
   166c8:	ldr	r0, [r6, #204]	; 0xcc
   166cc:	add	r1, pc, r1
   166d0:	bl	14064 <fprintf@plt>
   166d4:	ldr	r1, [pc, #180]	; 16790 <__flatcc_fb_codegen_c@@Base+0x38c>
   166d8:	mov	r3, r4
   166dc:	mov	r2, r4
   166e0:	ldr	r0, [r6, #204]	; 0xcc
   166e4:	add	r1, pc, r1
   166e8:	bl	14064 <fprintf@plt>
   166ec:	add	sp, sp, #224	; 0xe0
   166f0:	ldrd	r4, [sp]
   166f4:	ldr	r6, [sp, #8]
   166f8:	add	sp, sp, #12
   166fc:	pop	{pc}		; (ldr pc, [sp], #4)
   16700:	ldr	r1, [pc, #140]	; 16794 <__flatcc_fb_codegen_c@@Base+0x390>
   16704:	mov	r2, r4
   16708:	add	r1, pc, r1
   1670c:	bl	14064 <fprintf@plt>
   16710:	b	1668c <__flatcc_fb_codegen_c@@Base+0x288>
   16714:	ldr	r1, [pc, #124]	; 16798 <__flatcc_fb_codegen_c@@Base+0x394>
   16718:	mov	r3, r4
   1671c:	mov	r2, r4
   16720:	ldr	r0, [r6, #204]	; 0xcc
   16724:	add	r1, pc, r1
   16728:	bl	14064 <fprintf@plt>
   1672c:	ldr	r1, [pc, #104]	; 1679c <__flatcc_fb_codegen_c@@Base+0x398>
   16730:	mov	r3, r4
   16734:	mov	r2, r6
   16738:	ldr	r0, [r6, #204]	; 0xcc
   1673c:	add	r1, pc, r1
   16740:	bl	14064 <fprintf@plt>
   16744:	ldr	r1, [pc, #84]	; 167a0 <__flatcc_fb_codegen_c@@Base+0x39c>
   16748:	mov	r3, r4
   1674c:	mov	r2, r6
   16750:	ldr	r0, [r6, #204]	; 0xcc
   16754:	add	r1, pc, r1
   16758:	bl	14064 <fprintf@plt>
   1675c:	b	166ec <__flatcc_fb_codegen_c@@Base+0x2e8>
   16760:	ldr	r3, [pc, #60]	; 167a4 <__flatcc_fb_codegen_c@@Base+0x3a0>
   16764:	movw	r2, #863	; 0x35f
   16768:	ldr	r1, [pc, #56]	; 167a8 <__flatcc_fb_codegen_c@@Base+0x3a4>
   1676c:	ldr	r0, [pc, #56]	; 167ac <__flatcc_fb_codegen_c@@Base+0x3a8>
   16770:	add	r3, pc, r3
   16774:	add	r1, pc, r1
   16778:	add	r0, pc, r0
   1677c:	bl	14118 <__assert_fail@plt>
   16780:	andeq	fp, r2, r8, lsl #12
   16784:	andeq	fp, r2, ip, lsl #12
   16788:	andeq	fp, r2, r8, lsl r6
   1678c:	andeq	fp, r2, r4, lsr #12
   16790:	andeq	fp, r2, ip, lsr #12
   16794:	andeq	fp, r2, ip, asr r5
   16798:	andeq	fp, r2, r0, lsl r6
   1679c:	andeq	fp, r2, r4, lsr #12
   167a0:	andeq	fp, r2, r4, lsr r6
   167a4:	andeq	fp, r2, r8, lsl #7
   167a8:	andeq	fp, r2, r4, asr #8
   167ac:	andeq	fp, r2, r8, lsr #9
   167b0:	ldr	r2, [pc, #92]	; 16814 <__flatcc_fb_codegen_c@@Base+0x410>
   167b4:	mov	r3, #141	; 0x8d
   167b8:	push	{lr}		; (str lr, [sp, #-4]!)
   167bc:	sub	sp, sp, #12
   167c0:	ldr	r1, [pc, #80]	; 16818 <__flatcc_fb_codegen_c@@Base+0x414>
   167c4:	ldr	r0, [pc, #80]	; 1681c <__flatcc_fb_codegen_c@@Base+0x418>
   167c8:	add	r2, pc, r2
   167cc:	ldr	r4, [pc, #76]	; 16820 <__flatcc_fb_codegen_c@@Base+0x41c>
   167d0:	ldr	ip, [r2, r1]
   167d4:	add	r0, pc, r0
   167d8:	ldr	r1, [pc, #68]	; 16824 <__flatcc_fb_codegen_c@@Base+0x420>
   167dc:	add	r4, pc, r4
   167e0:	str	r0, [sp]
   167e4:	mov	r2, r4
   167e8:	ldr	r0, [ip]
   167ec:	add	r1, pc, r1
   167f0:	bl	14064 <fprintf@plt>
   167f4:	ldr	r3, [pc, #44]	; 16828 <__flatcc_fb_codegen_c@@Base+0x424>
   167f8:	mov	r1, r4
   167fc:	mov	r2, #141	; 0x8d
   16800:	ldr	r0, [pc, #36]	; 1682c <__flatcc_fb_codegen_c@@Base+0x428>
   16804:	add	r3, pc, r3
   16808:	add	r3, r3, #20
   1680c:	add	r0, pc, r0
   16810:	bl	14118 <__assert_fail@plt>
   16814:	andeq	r6, r5, r0, lsr r8
   16818:	andeq	r0, r0, r0, lsr #1
   1681c:	andeq	fp, r2, r8, asr #12
   16820:	ldrdeq	fp, [r2], -r4
   16824:	andeq	fp, r2, r4, lsr #12
   16828:	strdeq	fp, [r2], -r4
   1682c:	andeq	r3, r3, r8, lsr #22
   16830:	ldr	r2, [pc, #92]	; 16894 <__flatcc_fb_codegen_c@@Base+0x490>
   16834:	mov	r3, #96	; 0x60
   16838:	push	{lr}		; (str lr, [sp, #-4]!)
   1683c:	sub	sp, sp, #12
   16840:	ldr	r1, [pc, #80]	; 16898 <__flatcc_fb_codegen_c@@Base+0x494>
   16844:	ldr	r0, [pc, #80]	; 1689c <__flatcc_fb_codegen_c@@Base+0x498>
   16848:	add	r2, pc, r2
   1684c:	ldr	r4, [pc, #76]	; 168a0 <__flatcc_fb_codegen_c@@Base+0x49c>
   16850:	ldr	ip, [r2, r1]
   16854:	add	r0, pc, r0
   16858:	ldr	r1, [pc, #68]	; 168a4 <__flatcc_fb_codegen_c@@Base+0x4a0>
   1685c:	add	r4, pc, r4
   16860:	str	r0, [sp]
   16864:	mov	r2, r4
   16868:	ldr	r0, [ip]
   1686c:	add	r1, pc, r1
   16870:	bl	14064 <fprintf@plt>
   16874:	ldr	r3, [pc, #44]	; 168a8 <__flatcc_fb_codegen_c@@Base+0x4a4>
   16878:	mov	r1, r4
   1687c:	mov	r2, #96	; 0x60
   16880:	ldr	r0, [pc, #36]	; 168ac <__flatcc_fb_codegen_c@@Base+0x4a8>
   16884:	add	r3, pc, r3
   16888:	add	r3, r3, #40	; 0x28
   1688c:	add	r0, pc, r0
   16890:	bl	14118 <__assert_fail@plt>
   16894:			; <UNDEFINED> instruction: 0x000567b0
   16898:	andeq	r0, r0, r0, lsr #1
   1689c:	andeq	fp, r2, r8, asr #11
   168a0:	andeq	fp, r2, r4, asr r5
   168a4:	andeq	fp, r2, r4, lsr #11
   168a8:	andeq	fp, r2, r4, ror r2
   168ac:	andeq	r3, r3, r8, lsr #21
   168b0:	ldr	r2, [pc, #92]	; 16914 <__flatcc_fb_codegen_c@@Base+0x510>
   168b4:	mov	r3, #226	; 0xe2
   168b8:	push	{lr}		; (str lr, [sp, #-4]!)
   168bc:	sub	sp, sp, #12
   168c0:	ldr	r1, [pc, #80]	; 16918 <__flatcc_fb_codegen_c@@Base+0x514>
   168c4:	ldr	r0, [pc, #80]	; 1691c <__flatcc_fb_codegen_c@@Base+0x518>
   168c8:	add	r2, pc, r2
   168cc:	ldr	r4, [pc, #76]	; 16920 <__flatcc_fb_codegen_c@@Base+0x51c>
   168d0:	ldr	ip, [r2, r1]
   168d4:	add	r0, pc, r0
   168d8:	ldr	r1, [pc, #68]	; 16924 <__flatcc_fb_codegen_c@@Base+0x520>
   168dc:	add	r4, pc, r4
   168e0:	str	r0, [sp]
   168e4:	mov	r2, r4
   168e8:	ldr	r0, [ip]
   168ec:	add	r1, pc, r1
   168f0:	bl	14064 <fprintf@plt>
   168f4:	ldr	r3, [pc, #44]	; 16928 <__flatcc_fb_codegen_c@@Base+0x524>
   168f8:	mov	r1, r4
   168fc:	mov	r2, #226	; 0xe2
   16900:	ldr	r0, [pc, #36]	; 1692c <__flatcc_fb_codegen_c@@Base+0x528>
   16904:	add	r3, pc, r3
   16908:	add	r3, r3, #60	; 0x3c
   1690c:	add	r0, pc, r0
   16910:	bl	14118 <__assert_fail@plt>
   16914:	andeq	r6, r5, r0, lsr r7
   16918:	andeq	r0, r0, r0, lsr #1
   1691c:	andeq	fp, r2, r8, asr #10
   16920:	ldrdeq	fp, [r2], -r4
   16924:	andeq	fp, r2, r4, lsr #10
   16928:	strdeq	fp, [r2], -r4
   1692c:	andeq	r3, r3, r8, lsr #20
   16930:	ldr	r3, [pc, #4064]	; 17918 <__flatcc_fb_codegen_c@@Base+0x1514>
   16934:	strd	r4, [sp, #-36]!	; 0xffffffdc
   16938:	strd	r6, [sp, #8]
   1693c:	ldrh	r6, [r1, #8]
   16940:	strd	r8, [sp, #16]
   16944:	strd	sl, [sp, #24]
   16948:	add	r3, pc, r3
   1694c:	str	lr, [sp, #32]
   16950:	sub	sp, sp, #1072	; 0x430
   16954:	sub	sp, sp, #4
   16958:	cmp	r6, #0
   1695c:	str	r1, [sp, #80]	; 0x50
   16960:	str	r3, [sp, #84]	; 0x54
   16964:	bne	18980 <__flatcc_fb_codegen_c@@Base+0x257c>
   16968:	add	r3, sp, #412	; 0x19c
   1696c:	add	r9, sp, #192	; 0xc0
   16970:	mov	r4, r3
   16974:	mov	r5, r0
   16978:	mov	r2, #220	; 0xdc
   1697c:	mov	r1, r6
   16980:	str	r3, [sp, #56]	; 0x38
   16984:	mov	r0, r9
   16988:	bl	1407c <memset@plt>
   1698c:	mov	r2, #220	; 0xdc
   16990:	mov	r0, r4
   16994:	mov	r1, r6
   16998:	bl	1407c <memset@plt>
   1699c:	mov	r0, #10
   169a0:	ldr	r1, [r5, #204]	; 0xcc
   169a4:	bl	140c4 <fputc@plt>
   169a8:	ldr	r4, [sp, #80]	; 0x50
   169ac:	mov	r2, r9
   169b0:	mov	r1, r4
   169b4:	ldr	r0, [r4, #12]
   169b8:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   169bc:	ldr	r4, [r4, #32]
   169c0:	cmp	r4, #0
   169c4:	beq	16a7c <__flatcc_fb_codegen_c@@Base+0x678>
   169c8:	ldr	r8, [pc, #3916]	; 1791c <__flatcc_fb_codegen_c@@Base+0x1518>
   169cc:	mov	r1, r6
   169d0:	mov	ip, #1
   169d4:	ldr	r7, [pc, #3908]	; 17920 <__flatcc_fb_codegen_c@@Base+0x151c>
   169d8:	ldr	r6, [pc, #3908]	; 17924 <__flatcc_fb_codegen_c@@Base+0x1520>
   169dc:	add	r8, pc, r8
   169e0:	add	r7, pc, r7
   169e4:	add	r6, pc, r6
   169e8:	b	16a30 <__flatcc_fb_codegen_c@@Base+0x62c>
   169ec:	ldr	r1, [pc, #3892]	; 17928 <__flatcc_fb_codegen_c@@Base+0x1524>
   169f0:	mov	r2, r6
   169f4:	add	r1, pc, r1
   169f8:	bl	14064 <fprintf@plt>
   169fc:	ldr	r2, [r4, #4]
   16a00:	ldr	r0, [r5, #204]	; 0xcc
   16a04:	ldr	r1, [pc, #3872]	; 1792c <__flatcc_fb_codegen_c@@Base+0x1528>
   16a08:	ldr	r3, [r2]
   16a0c:	ldr	r2, [r2, #4]
   16a10:	add	r1, pc, r1
   16a14:	bl	14064 <fprintf@plt>
   16a18:	ldr	r3, [r4, #4]
   16a1c:	mov	ip, #0
   16a20:	ldr	r4, [r4]
   16a24:	ldr	r1, [r3, #8]
   16a28:	cmp	r4, ip
   16a2c:	beq	16a64 <__flatcc_fb_codegen_c@@Base+0x660>
   16a30:	ldr	r2, [r4, #4]
   16a34:	ldr	r0, [r5, #204]	; 0xcc
   16a38:	ldr	r3, [r2, #8]
   16a3c:	cmp	r3, r1
   16a40:	beq	16a04 <__flatcc_fb_codegen_c@@Base+0x600>
   16a44:	cmp	ip, #0
   16a48:	bne	169ec <__flatcc_fb_codegen_c@@Base+0x5e8>
   16a4c:	mov	r2, r8
   16a50:	mov	r1, r7
   16a54:	bl	14064 <fprintf@plt>
   16a58:	ldr	r2, [r4, #4]
   16a5c:	ldr	r0, [r5, #204]	; 0xcc
   16a60:	b	16a04 <__flatcc_fb_codegen_c@@Base+0x600>
   16a64:	ldr	r0, [pc, #3780]	; 17930 <__flatcc_fb_codegen_c@@Base+0x152c>
   16a68:	mov	r2, #4
   16a6c:	mov	r1, #1
   16a70:	ldr	r3, [r5, #204]	; 0xcc
   16a74:	add	r0, pc, r0
   16a78:	bl	13fec <fwrite@plt>
   16a7c:	ldr	r1, [pc, #3760]	; 17934 <__flatcc_fb_codegen_c@@Base+0x1530>
   16a80:	mov	r2, r9
   16a84:	ldr	r0, [r5, #204]	; 0xcc
   16a88:	add	r1, pc, r1
   16a8c:	bl	14064 <fprintf@plt>
   16a90:	ldr	r1, [pc, #3744]	; 17938 <__flatcc_fb_codegen_c@@Base+0x1534>
   16a94:	mov	r3, r9
   16a98:	mov	r2, r9
   16a9c:	str	r5, [sp]
   16aa0:	ldr	r0, [r5, #204]	; 0xcc
   16aa4:	add	r1, pc, r1
   16aa8:	bl	14064 <fprintf@plt>
   16aac:	ldr	r1, [pc, #3720]	; 1793c <__flatcc_fb_codegen_c@@Base+0x1538>
   16ab0:	mov	r3, r9
   16ab4:	mov	r2, r9
   16ab8:	str	r9, [sp]
   16abc:	stmib	sp, {r5, r9}
   16ac0:	ldr	r0, [r5, #204]	; 0xcc
   16ac4:	add	r1, pc, r1
   16ac8:	bl	14064 <fprintf@plt>
   16acc:	ldr	r1, [pc, #3692]	; 17940 <__flatcc_fb_codegen_c@@Base+0x153c>
   16ad0:	mov	r3, r9
   16ad4:	mov	r2, r5
   16ad8:	ldr	r0, [r5, #204]	; 0xcc
   16adc:	add	r1, pc, r1
   16ae0:	bl	14064 <fprintf@plt>
   16ae4:	mov	r0, #10
   16ae8:	ldr	r1, [r5, #204]	; 0xcc
   16aec:	bl	140c4 <fputc@plt>
   16af0:	ldr	r3, [sp, #80]	; 0x50
   16af4:	ldr	r4, [r3, #20]
   16af8:	cmp	r4, #0
   16afc:	beq	16cf0 <__flatcc_fb_codegen_c@@Base+0x8ec>
   16b00:	ldr	r3, [pc, #3644]	; 17944 <__flatcc_fb_codegen_c@@Base+0x1540>
   16b04:	ldr	sl, [pc, #3644]	; 17948 <__flatcc_fb_codegen_c@@Base+0x1544>
   16b08:	ldr	fp, [pc, #3644]	; 1794c <__flatcc_fb_codegen_c@@Base+0x1548>
   16b0c:	add	r3, pc, r3
   16b10:	str	r3, [sp, #48]	; 0x30
   16b14:	mov	r3, #0
   16b18:	add	sl, pc, sl
   16b1c:	str	r3, [sp, #60]	; 0x3c
   16b20:	add	fp, pc, fp
   16b24:	ldr	r3, [pc, #3620]	; 17950 <__flatcc_fb_codegen_c@@Base+0x154c>
   16b28:	add	r3, pc, r3
   16b2c:	str	r3, [sp, #52]	; 0x34
   16b30:	ldr	r6, [r4, #68]	; 0x44
   16b34:	cmp	r6, #0
   16b38:	beq	16bd4 <__flatcc_fb_codegen_c@@Base+0x7d0>
   16b3c:	mov	r1, #1
   16b40:	mov	r3, #0
   16b44:	b	16b88 <__flatcc_fb_codegen_c@@Base+0x784>
   16b48:	ldr	r1, [pc, #3588]	; 17954 <__flatcc_fb_codegen_c@@Base+0x1550>
   16b4c:	mov	r2, sl
   16b50:	add	r1, pc, r1
   16b54:	bl	14064 <fprintf@plt>
   16b58:	ldr	r2, [r6, #4]
   16b5c:	ldr	r0, [r5, #204]	; 0xcc
   16b60:	mov	r1, fp
   16b64:	ldr	r3, [r2]
   16b68:	ldr	r2, [r2, #4]
   16b6c:	bl	14064 <fprintf@plt>
   16b70:	ldr	r3, [r6, #4]
   16b74:	mov	r1, #0
   16b78:	ldr	r6, [r6]
   16b7c:	ldr	r3, [r3, #8]
   16b80:	cmp	r6, r1
   16b84:	beq	16bbc <__flatcc_fb_codegen_c@@Base+0x7b8>
   16b88:	ldr	r2, [r6, #4]
   16b8c:	ldr	r0, [r5, #204]	; 0xcc
   16b90:	ldr	ip, [r2, #8]
   16b94:	cmp	ip, r3
   16b98:	beq	16b60 <__flatcc_fb_codegen_c@@Base+0x75c>
   16b9c:	cmp	r1, #0
   16ba0:	bne	16b48 <__flatcc_fb_codegen_c@@Base+0x744>
   16ba4:	ldr	r2, [sp, #48]	; 0x30
   16ba8:	ldr	r1, [sp, #52]	; 0x34
   16bac:	bl	14064 <fprintf@plt>
   16bb0:	ldr	r2, [r6, #4]
   16bb4:	ldr	r0, [r5, #204]	; 0xcc
   16bb8:	b	16b60 <__flatcc_fb_codegen_c@@Base+0x75c>
   16bbc:	ldr	r0, [pc, #3476]	; 17958 <__flatcc_fb_codegen_c@@Base+0x1554>
   16bc0:	mov	r2, #4
   16bc4:	mov	r1, #1
   16bc8:	ldr	r3, [r5, #204]	; 0xcc
   16bcc:	add	r0, pc, r0
   16bd0:	bl	13fec <fwrite@plt>
   16bd4:	ldr	r3, [r4, #4]
   16bd8:	ldrh	r6, [r4, #72]	; 0x48
   16bdc:	ldm	r3, {r2, r8}
   16be0:	tst	r6, #4
   16be4:	str	r2, [sp, #44]	; 0x2c
   16be8:	bne	17024 <__flatcc_fb_codegen_c@@Base+0xc20>
   16bec:	ldrh	r3, [r4, #24]
   16bf0:	ubfx	r6, r6, #8, #1
   16bf4:	sub	r3, r3, #7
   16bf8:	cmp	r3, #8
   16bfc:	addls	pc, pc, r3, lsl #2
   16c00:	b	18788 <__flatcc_fb_codegen_c@@Base+0x2384>
   16c04:	b	16db8 <__flatcc_fb_codegen_c@@Base+0x9b4>
   16c08:	b	16d70 <__flatcc_fb_codegen_c@@Base+0x96c>
   16c0c:	b	16d10 <__flatcc_fb_codegen_c@@Base+0x90c>
   16c10:	b	16c98 <__flatcc_fb_codegen_c@@Base+0x894>
   16c14:	b	18788 <__flatcc_fb_codegen_c@@Base+0x2384>
   16c18:	b	18788 <__flatcc_fb_codegen_c@@Base+0x2384>
   16c1c:	b	18788 <__flatcc_fb_codegen_c@@Base+0x2384>
   16c20:	b	16c60 <__flatcc_fb_codegen_c@@Base+0x85c>
   16c24:	b	16c28 <__flatcc_fb_codegen_c@@Base+0x824>
   16c28:	ldr	r1, [r4, #16]
   16c2c:	ldr	r2, [sp, #56]	; 0x38
   16c30:	ldr	r0, [r1, #12]
   16c34:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   16c38:	ldr	r3, [r4, #16]
   16c3c:	ldrh	r3, [r3, #8]
   16c40:	cmp	r3, #4
   16c44:	addls	pc, pc, r3, lsl #2
   16c48:	b	18838 <__flatcc_fb_codegen_c@@Base+0x2434>
   16c4c:	b	16df8 <__flatcc_fb_codegen_c@@Base+0x9f4>
   16c50:	b	16df8 <__flatcc_fb_codegen_c@@Base+0x9f4>
   16c54:	b	18838 <__flatcc_fb_codegen_c@@Base+0x2434>
   16c58:	b	16df8 <__flatcc_fb_codegen_c@@Base+0x9f4>
   16c5c:	b	16df8 <__flatcc_fb_codegen_c@@Base+0x9f4>
   16c60:	ldr	r1, [r4, #16]
   16c64:	ldr	r2, [sp, #56]	; 0x38
   16c68:	ldr	r0, [r1, #12]
   16c6c:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   16c70:	ldr	r2, [r4, #16]
   16c74:	ldrh	r3, [r2, #8]
   16c78:	cmp	r3, #4
   16c7c:	addls	pc, pc, r3, lsl #2
   16c80:	b	187e0 <__flatcc_fb_codegen_c@@Base+0x23dc>
   16c84:	b	16ec4 <__flatcc_fb_codegen_c@@Base+0xac0>
   16c88:	b	16e94 <__flatcc_fb_codegen_c@@Base+0xa90>
   16c8c:	b	187e0 <__flatcc_fb_codegen_c@@Base+0x23dc>
   16c90:	b	16ef4 <__flatcc_fb_codegen_c@@Base+0xaf0>
   16c94:	b	16e48 <__flatcc_fb_codegen_c@@Base+0xa44>
   16c98:	ldr	r3, [sp, #44]	; 0x2c
   16c9c:	mov	r2, r5
   16ca0:	str	r9, [sp, #8]
   16ca4:	ldr	r1, [pc, #3248]	; 1795c <__flatcc_fb_codegen_c@@Base+0x1558>
   16ca8:	str	r8, [sp, #12]
   16cac:	str	r3, [sp, #16]
   16cb0:	str	r6, [sp, #20]
   16cb4:	ldrd	r6, [r4, #96]	; 0x60
   16cb8:	add	r1, pc, r1
   16cbc:	strd	r6, [sp]
   16cc0:	ldr	r0, [r5, #204]	; 0xcc
   16cc4:	bl	14064 <fprintf@plt>
   16cc8:	ldr	r3, [r5, #212]	; 0xd4
   16ccc:	ldr	r3, [r3, #32]
   16cd0:	cmp	r3, #0
   16cd4:	bne	1706c <__flatcc_fb_codegen_c@@Base+0xc68>
   16cd8:	ldrh	r3, [r4, #72]	; 0x48
   16cdc:	tst	r3, #128	; 0x80
   16ce0:	bne	17048 <__flatcc_fb_codegen_c@@Base+0xc44>
   16ce4:	ldr	r4, [r4]
   16ce8:	cmp	r4, #0
   16cec:	bne	16b30 <__flatcc_fb_codegen_c@@Base+0x72c>
   16cf0:	add	sp, sp, #1072	; 0x430
   16cf4:	add	sp, sp, #4
   16cf8:	ldrd	r4, [sp]
   16cfc:	ldrd	r6, [sp, #8]
   16d00:	ldrd	r8, [sp, #16]
   16d04:	ldrd	sl, [sp, #24]
   16d08:	add	sp, sp, #32
   16d0c:	pop	{pc}		; (ldr pc, [sp], #4)
   16d10:	ldr	r3, [sp, #44]	; 0x2c
   16d14:	mov	r2, r5
   16d18:	str	r9, [sp, #8]
   16d1c:	ldr	r1, [pc, #3132]	; 17960 <__flatcc_fb_codegen_c@@Base+0x155c>
   16d20:	str	r8, [sp, #12]
   16d24:	str	r3, [sp, #16]
   16d28:	str	r5, [sp, #20]
   16d2c:	str	r6, [sp, #24]
   16d30:	add	r1, pc, r1
   16d34:	ldrd	r6, [r4, #96]	; 0x60
   16d38:	strd	r6, [sp]
   16d3c:	ldr	r0, [r5, #204]	; 0xcc
   16d40:	bl	14064 <fprintf@plt>
   16d44:	ldrh	r3, [r4, #72]	; 0x48
   16d48:	tst	r3, #128	; 0x80
   16d4c:	beq	16ce4 <__flatcc_fb_codegen_c@@Base+0x8e0>
   16d50:	ldr	r0, [pc, #3084]	; 17964 <__flatcc_fb_codegen_c@@Base+0x1560>
   16d54:	mov	r1, #1
   16d58:	mov	r2, #84	; 0x54
   16d5c:	ldr	r3, [r5, #204]	; 0xcc
   16d60:	str	r1, [sp, #60]	; 0x3c
   16d64:	add	r0, pc, r0
   16d68:	bl	13fec <fwrite@plt>
   16d6c:	b	16ce4 <__flatcc_fb_codegen_c@@Base+0x8e0>
   16d70:	ldr	r2, [r4, #16]
   16d74:	cmp	r2, #5
   16d78:	beq	171ac <__flatcc_fb_codegen_c@@Base+0xda8>
   16d7c:	sub	r3, r2, #1
   16d80:	cmp	r3, #10
   16d84:	addls	pc, pc, r3, lsl #2
   16d88:	b	18894 <__flatcc_fb_codegen_c@@Base+0x2490>
   16d8c:	b	1766c <__flatcc_fb_codegen_c@@Base+0x1268>
   16d90:	b	185fc <__flatcc_fb_codegen_c@@Base+0x21f8>
   16d94:	b	17ea0 <__flatcc_fb_codegen_c@@Base+0x1a9c>
   16d98:	b	185d8 <__flatcc_fb_codegen_c@@Base+0x21d4>
   16d9c:	b	18894 <__flatcc_fb_codegen_c@@Base+0x2490>
   16da0:	b	17624 <__flatcc_fb_codegen_c@@Base+0x1220>
   16da4:	b	17600 <__flatcc_fb_codegen_c@@Base+0x11fc>
   16da8:	b	175dc <__flatcc_fb_codegen_c@@Base+0x11d8>
   16dac:	b	175b8 <__flatcc_fb_codegen_c@@Base+0x11b4>
   16db0:	b	17594 <__flatcc_fb_codegen_c@@Base+0x1190>
   16db4:	b	17648 <__flatcc_fb_codegen_c@@Base+0x1244>
   16db8:	ldr	r3, [r4, #16]
   16dbc:	sub	r3, r3, #1
   16dc0:	cmp	r3, #10
   16dc4:	addls	pc, pc, r3, lsl #2
   16dc8:	b	18af0 <__flatcc_fb_codegen_c@@Base+0x26ec>
   16dcc:	b	17138 <__flatcc_fb_codegen_c@@Base+0xd34>
   16dd0:	b	17588 <__flatcc_fb_codegen_c@@Base+0x1184>
   16dd4:	b	1757c <__flatcc_fb_codegen_c@@Base+0x1178>
   16dd8:	b	16f1c <__flatcc_fb_codegen_c@@Base+0xb18>
   16ddc:	b	16f1c <__flatcc_fb_codegen_c@@Base+0xb18>
   16de0:	b	17564 <__flatcc_fb_codegen_c@@Base+0x1160>
   16de4:	b	17558 <__flatcc_fb_codegen_c@@Base+0x1154>
   16de8:	b	1754c <__flatcc_fb_codegen_c@@Base+0x1148>
   16dec:	b	17540 <__flatcc_fb_codegen_c@@Base+0x113c>
   16df0:	b	17534 <__flatcc_fb_codegen_c@@Base+0x1130>
   16df4:	b	17570 <__flatcc_fb_codegen_c@@Base+0x116c>
   16df8:	cmp	r3, #4
   16dfc:	ldrd	r2, [r4, #96]	; 0x60
   16e00:	ldr	r0, [r5, #204]	; 0xcc
   16e04:	strd	r2, [sp]
   16e08:	beq	171d0 <__flatcc_fb_codegen_c@@Base+0xdcc>
   16e0c:	ldr	r3, [sp, #44]	; 0x2c
   16e10:	mov	r2, r5
   16e14:	str	r9, [sp, #8]
   16e18:	ldr	r1, [pc, #2888]	; 17968 <__flatcc_fb_codegen_c@@Base+0x1564>
   16e1c:	str	r8, [sp, #12]
   16e20:	str	r3, [sp, #16]
   16e24:	ldr	r3, [sp, #56]	; 0x38
   16e28:	add	r1, pc, r1
   16e2c:	str	r3, [sp, #20]
   16e30:	str	r6, [sp, #24]
   16e34:	bl	14064 <fprintf@plt>
   16e38:	ldrh	r3, [r4, #72]	; 0x48
   16e3c:	tst	r3, #128	; 0x80
   16e40:	bne	16d50 <__flatcc_fb_codegen_c@@Base+0x94c>
   16e44:	b	16ce4 <__flatcc_fb_codegen_c@@Base+0x8e0>
   16e48:	ldr	r1, [sp, #44]	; 0x2c
   16e4c:	mov	r3, r5
   16e50:	mov	r2, r5
   16e54:	str	r9, [sp, #8]
   16e58:	str	r8, [sp, #12]
   16e5c:	str	r1, [sp, #16]
   16e60:	ldr	r1, [sp, #56]	; 0x38
   16e64:	str	r6, [sp, #24]
   16e68:	str	r1, [sp, #20]
   16e6c:	ldr	r1, [pc, #2808]	; 1796c <__flatcc_fb_codegen_c@@Base+0x1568>
   16e70:	ldrd	r6, [r4, #96]	; 0x60
   16e74:	add	r1, pc, r1
   16e78:	strd	r6, [sp]
   16e7c:	ldr	r0, [r5, #204]	; 0xcc
   16e80:	bl	14064 <fprintf@plt>
   16e84:	ldrh	r3, [r4, #72]	; 0x48
   16e88:	tst	r3, #128	; 0x80
   16e8c:	bne	16d50 <__flatcc_fb_codegen_c@@Base+0x94c>
   16e90:	b	16ce4 <__flatcc_fb_codegen_c@@Base+0x8e0>
   16e94:	ldr	r3, [sp, #44]	; 0x2c
   16e98:	mov	r2, r5
   16e9c:	str	r9, [sp, #8]
   16ea0:	ldr	r1, [pc, #2760]	; 17970 <__flatcc_fb_codegen_c@@Base+0x156c>
   16ea4:	str	r8, [sp, #12]
   16ea8:	str	r3, [sp, #16]
   16eac:	ldr	r3, [sp, #56]	; 0x38
   16eb0:	add	r1, pc, r1
   16eb4:	str	r3, [sp, #20]
   16eb8:	str	r6, [sp, #24]
   16ebc:	ldrd	r6, [r4, #96]	; 0x60
   16ec0:	b	16d38 <__flatcc_fb_codegen_c@@Base+0x934>
   16ec4:	ldr	r3, [sp, #44]	; 0x2c
   16ec8:	mov	r2, r5
   16ecc:	str	r9, [sp, #8]
   16ed0:	ldr	r1, [pc, #2716]	; 17974 <__flatcc_fb_codegen_c@@Base+0x1570>
   16ed4:	str	r8, [sp, #12]
   16ed8:	str	r3, [sp, #16]
   16edc:	ldr	r3, [sp, #56]	; 0x38
   16ee0:	add	r1, pc, r1
   16ee4:	str	r3, [sp, #20]
   16ee8:	str	r6, [sp, #24]
   16eec:	ldrd	r6, [r4, #96]	; 0x60
   16ef0:	b	16d38 <__flatcc_fb_codegen_c@@Base+0x934>
   16ef4:	ldrh	r3, [r4, #56]	; 0x38
   16ef8:	ldr	r2, [r2, #40]	; 0x28
   16efc:	sub	r3, r3, #3
   16f00:	cmp	r3, #3
   16f04:	addls	pc, pc, r3, lsl #2
   16f08:	b	18b48 <__flatcc_fb_codegen_c@@Base+0x2744>
   16f0c:	b	1772c <__flatcc_fb_codegen_c@@Base+0x1328>
   16f10:	b	176f8 <__flatcc_fb_codegen_c@@Base+0x12f4>
   16f14:	b	176c4 <__flatcc_fb_codegen_c@@Base+0x12c0>
   16f18:	b	17690 <__flatcc_fb_codegen_c@@Base+0x128c>
   16f1c:	ldr	r3, [pc, #2644]	; 17978 <__flatcc_fb_codegen_c@@Base+0x1574>
   16f20:	add	r3, pc, r3
   16f24:	ldr	r1, [sp, #44]	; 0x2c
   16f28:	mov	r2, r5
   16f2c:	str	r9, [sp, #8]
   16f30:	str	r8, [sp, #12]
   16f34:	str	r1, [sp, #16]
   16f38:	ldr	r1, [pc, #2620]	; 1797c <__flatcc_fb_codegen_c@@Base+0x1578>
   16f3c:	str	r5, [sp, #20]
   16f40:	str	r3, [sp, #24]
   16f44:	str	r6, [sp, #28]
   16f48:	ldrd	r6, [r4, #96]	; 0x60
   16f4c:	add	r1, pc, r1
   16f50:	ldr	r0, [r5, #204]	; 0xcc
   16f54:	strd	r6, [sp]
   16f58:	bl	14064 <fprintf@plt>
   16f5c:	ldr	r3, [r4, #104]	; 0x68
   16f60:	cmp	r3, #0
   16f64:	beq	17188 <__flatcc_fb_codegen_c@@Base+0xd84>
   16f68:	str	r3, [sp, #44]	; 0x2c
   16f6c:	add	r7, sp, #632	; 0x278
   16f70:	mov	r2, #220	; 0xdc
   16f74:	mov	r1, #0
   16f78:	mov	r0, r7
   16f7c:	add	r6, sp, #852	; 0x354
   16f80:	bl	1407c <memset@plt>
   16f84:	mov	r2, #220	; 0xdc
   16f88:	mov	r0, r6
   16f8c:	mov	r1, #0
   16f90:	bl	1407c <memset@plt>
   16f94:	ldr	r3, [sp, #44]	; 0x2c
   16f98:	ldrh	r2, [r3, #8]
   16f9c:	cmp	r2, #0
   16fa0:	bne	17198 <__flatcc_fb_codegen_c@@Base+0xd94>
   16fa4:	ldr	r8, [pc, #2516]	; 17980 <__flatcc_fb_codegen_c@@Base+0x157c>
   16fa8:	add	r8, pc, r8
   16fac:	mov	r1, r3
   16fb0:	mov	r2, r7
   16fb4:	ldr	r0, [r3, #12]
   16fb8:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   16fbc:	ldr	r3, [sp, #80]	; 0x50
   16fc0:	ldrh	r3, [r3, #8]
   16fc4:	cmp	r3, #0
   16fc8:	bne	188ec <__flatcc_fb_codegen_c@@Base+0x24e8>
   16fcc:	ldr	r3, [sp, #80]	; 0x50
   16fd0:	mov	r2, r6
   16fd4:	mov	r1, r3
   16fd8:	ldr	r0, [r3, #12]
   16fdc:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   16fe0:	ldr	ip, [r4, #4]
   16fe4:	mov	r3, r6
   16fe8:	mov	r2, r5
   16fec:	str	r7, [sp, #8]
   16ff0:	str	r8, [sp, #12]
   16ff4:	ldr	r1, [pc, #2440]	; 17984 <__flatcc_fb_codegen_c@@Base+0x1580>
   16ff8:	ldr	lr, [ip]
   16ffc:	ldr	r0, [r5, #204]	; 0xcc
   17000:	add	r1, pc, r1
   17004:	str	lr, [sp, #4]
   17008:	ldr	ip, [ip, #4]
   1700c:	str	ip, [sp]
   17010:	bl	14064 <fprintf@plt>
   17014:	ldrh	r3, [r4, #72]	; 0x48
   17018:	tst	r3, #128	; 0x80
   1701c:	bne	16d50 <__flatcc_fb_codegen_c@@Base+0x94c>
   17020:	b	16ce4 <__flatcc_fb_codegen_c@@Base+0x8e0>
   17024:	ldr	r1, [sp, #44]	; 0x2c
   17028:	mov	r3, r8
   1702c:	mov	r2, r9
   17030:	str	r1, [sp]
   17034:	ldr	r1, [pc, #2380]	; 17988 <__flatcc_fb_codegen_c@@Base+0x1584>
   17038:	ldr	r0, [r5, #204]	; 0xcc
   1703c:	add	r1, pc, r1
   17040:	bl	14064 <fprintf@plt>
   17044:	b	16ce4 <__flatcc_fb_codegen_c@@Base+0x8e0>
   17048:	ldr	r1, [pc, #2364]	; 1798c <__flatcc_fb_codegen_c@@Base+0x1588>
   1704c:	mov	r3, r9
   17050:	mov	r2, r5
   17054:	str	r8, [sp]
   17058:	ldr	r0, [sp, #44]	; 0x2c
   1705c:	add	r1, pc, r1
   17060:	str	r0, [sp, #4]
   17064:	ldr	r0, [r5, #204]	; 0xcc
   17068:	bl	14064 <fprintf@plt>
   1706c:	ldrh	r3, [r4, #72]	; 0x48
   17070:	tst	r3, #128	; 0x80
   17074:	beq	16ce4 <__flatcc_fb_codegen_c@@Base+0x8e0>
   17078:	ldr	r3, [sp, #60]	; 0x3c
   1707c:	ldr	r0, [r5, #204]	; 0xcc
   17080:	cmp	r3, #0
   17084:	bne	17210 <__flatcc_fb_codegen_c@@Base+0xe0c>
   17088:	ldr	r1, [pc, #2304]	; 17990 <__flatcc_fb_codegen_c@@Base+0x158c>
   1708c:	mov	r3, r9
   17090:	mov	r2, r5
   17094:	ldr	ip, [sp, #44]	; 0x2c
   17098:	add	r1, pc, r1
   1709c:	stm	sp, {r8, ip}
   170a0:	bl	14064 <fprintf@plt>
   170a4:	ldr	r3, [r5, #212]	; 0xd4
   170a8:	ldr	r3, [r3, #136]	; 0x88
   170ac:	cmp	r3, #0
   170b0:	beq	170d8 <__flatcc_fb_codegen_c@@Base+0xcd4>
   170b4:	ldr	r1, [pc, #2264]	; 17994 <__flatcc_fb_codegen_c@@Base+0x1590>
   170b8:	mov	r3, r9
   170bc:	mov	r2, r5
   170c0:	str	r8, [sp]
   170c4:	ldr	r0, [sp, #44]	; 0x2c
   170c8:	add	r1, pc, r1
   170cc:	str	r0, [sp, #4]
   170d0:	ldr	r0, [r5, #204]	; 0xcc
   170d4:	bl	14064 <fprintf@plt>
   170d8:	ldr	r1, [pc, #2232]	; 17998 <__flatcc_fb_codegen_c@@Base+0x1594>
   170dc:	mov	r3, r9
   170e0:	mov	r2, r5
   170e4:	str	r8, [sp]
   170e8:	ldr	r6, [sp, #44]	; 0x2c
   170ec:	add	r1, pc, r1
   170f0:	str	r6, [sp, #4]
   170f4:	ldr	r0, [r5, #204]	; 0xcc
   170f8:	bl	14064 <fprintf@plt>
   170fc:	ldr	r1, [pc, #2200]	; 1799c <__flatcc_fb_codegen_c@@Base+0x1598>
   17100:	mov	r3, r9
   17104:	mov	r2, r5
   17108:	str	r8, [sp]
   1710c:	str	r6, [sp, #4]
   17110:	ldr	r0, [r5, #204]	; 0xcc
   17114:	add	r1, pc, r1
   17118:	bl	14064 <fprintf@plt>
   1711c:	ldr	r3, [r5, #212]	; 0xd4
   17120:	ldr	r3, [r3, #136]	; 0x88
   17124:	cmp	r3, #0
   17128:	bne	17e88 <__flatcc_fb_codegen_c@@Base+0x1a84>
   1712c:	mov	r3, #1
   17130:	str	r3, [sp, #60]	; 0x3c
   17134:	b	16ce4 <__flatcc_fb_codegen_c@@Base+0x8e0>
   17138:	ldr	r3, [pc, #2144]	; 179a0 <__flatcc_fb_codegen_c@@Base+0x159c>
   1713c:	mov	r2, r5
   17140:	str	r9, [sp, #8]
   17144:	ldr	r1, [sp, #44]	; 0x2c
   17148:	str	r8, [sp, #12]
   1714c:	add	r3, pc, r3
   17150:	str	r1, [sp, #16]
   17154:	ldr	r1, [pc, #2120]	; 179a4 <__flatcc_fb_codegen_c@@Base+0x15a0>
   17158:	str	r5, [sp, #20]
   1715c:	str	r3, [sp, #24]
   17160:	str	r6, [sp, #28]
   17164:	ldrd	r6, [r4, #96]	; 0x60
   17168:	add	r1, pc, r1
   1716c:	strd	r6, [sp]
   17170:	ldr	r0, [r5, #204]	; 0xcc
   17174:	bl	14064 <fprintf@plt>
   17178:	ldr	r3, [r4, #104]	; 0x68
   1717c:	cmp	r3, #0
   17180:	str	r3, [sp, #44]	; 0x2c
   17184:	bne	16f6c <__flatcc_fb_codegen_c@@Base+0xb68>
   17188:	ldrh	r3, [r4, #72]	; 0x48
   1718c:	tst	r3, #128	; 0x80
   17190:	beq	16ce4 <__flatcc_fb_codegen_c@@Base+0x8e0>
   17194:	b	16d50 <__flatcc_fb_codegen_c@@Base+0x94c>
   17198:	cmp	r2, #1
   1719c:	bne	18910 <__flatcc_fb_codegen_c@@Base+0x250c>
   171a0:	ldr	r8, [pc, #2048]	; 179a8 <__flatcc_fb_codegen_c@@Base+0x15a4>
   171a4:	add	r8, pc, r8
   171a8:	b	16fac <__flatcc_fb_codegen_c@@Base+0xba8>
   171ac:	ldrh	r3, [r4, #56]	; 0x38
   171b0:	sub	r3, r3, #3
   171b4:	cmp	r3, #3
   171b8:	addls	pc, pc, r3, lsl #2
   171bc:	b	18a98 <__flatcc_fb_codegen_c@@Base+0x2694>
   171c0:	b	17324 <__flatcc_fb_codegen_c@@Base+0xf20>
   171c4:	b	172d4 <__flatcc_fb_codegen_c@@Base+0xed0>
   171c8:	b	17284 <__flatcc_fb_codegen_c@@Base+0xe80>
   171cc:	b	17f70 <__flatcc_fb_codegen_c@@Base+0x1b6c>
   171d0:	ldr	ip, [sp, #44]	; 0x2c
   171d4:	mov	r3, r5
   171d8:	mov	r2, r5
   171dc:	str	r9, [sp, #8]
   171e0:	ldr	r1, [pc, #1988]	; 179ac <__flatcc_fb_codegen_c@@Base+0x15a8>
   171e4:	str	r8, [sp, #12]
   171e8:	str	ip, [sp, #16]
   171ec:	ldr	ip, [sp, #56]	; 0x38
   171f0:	add	r1, pc, r1
   171f4:	str	ip, [sp, #20]
   171f8:	str	r6, [sp, #24]
   171fc:	bl	14064 <fprintf@plt>
   17200:	ldrh	r3, [r4, #72]	; 0x48
   17204:	tst	r3, #128	; 0x80
   17208:	bne	16d50 <__flatcc_fb_codegen_c@@Base+0x94c>
   1720c:	b	16ce4 <__flatcc_fb_codegen_c@@Base+0x8e0>
   17210:	mov	r3, r0
   17214:	ldr	r0, [pc, #1940]	; 179b0 <__flatcc_fb_codegen_c@@Base+0x15ac>
   17218:	mov	r2, #66	; 0x42
   1721c:	mov	r1, #1
   17220:	add	r0, pc, r0
   17224:	bl	13fec <fwrite@plt>
   17228:	ldr	r1, [pc, #1924]	; 179b4 <__flatcc_fb_codegen_c@@Base+0x15b0>
   1722c:	mov	r3, r9
   17230:	mov	r2, r5
   17234:	str	r8, [sp]
   17238:	ldr	r0, [sp, #44]	; 0x2c
   1723c:	add	r1, pc, r1
   17240:	str	r0, [sp, #4]
   17244:	ldr	r0, [r5, #204]	; 0xcc
   17248:	bl	14064 <fprintf@plt>
   1724c:	ldr	r3, [r5, #212]	; 0xd4
   17250:	ldr	r3, [r3, #136]	; 0x88
   17254:	cmp	r3, #0
   17258:	beq	1712c <__flatcc_fb_codegen_c@@Base+0xd28>
   1725c:	ldr	r1, [pc, #1876]	; 179b8 <__flatcc_fb_codegen_c@@Base+0x15b4>
   17260:	mov	r3, r9
   17264:	mov	r2, r5
   17268:	str	r8, [sp]
   1726c:	ldr	r0, [sp, #44]	; 0x2c
   17270:	add	r1, pc, r1
   17274:	str	r0, [sp, #4]
   17278:	ldr	r0, [r5, #204]	; 0xcc
   1727c:	bl	14064 <fprintf@plt>
   17280:	b	16ce4 <__flatcc_fb_codegen_c@@Base+0x8e0>
   17284:	ldr	r3, [pc, #1840]	; 179bc <__flatcc_fb_codegen_c@@Base+0x15b8>
   17288:	str	r5, [sp, #64]	; 0x40
   1728c:	ldr	r2, [pc, #1836]	; 179c0 <__flatcc_fb_codegen_c@@Base+0x15bc>
   17290:	add	r3, pc, r3
   17294:	add	r2, pc, r2
   17298:	str	r3, [sp, #68]	; 0x44
   1729c:	mov	r3, #4
   172a0:	str	r2, [sp, #76]	; 0x4c
   172a4:	cmp	r3, #8
   172a8:	addls	pc, pc, r3, lsl #2
   172ac:	b	18890 <__flatcc_fb_codegen_c@@Base+0x248c>
   172b0:	b	18058 <__flatcc_fb_codegen_c@@Base+0x1c54>
   172b4:	b	1804c <__flatcc_fb_codegen_c@@Base+0x1c48>
   172b8:	b	18040 <__flatcc_fb_codegen_c@@Base+0x1c3c>
   172bc:	b	178ec <__flatcc_fb_codegen_c@@Base+0x14e8>
   172c0:	b	178ec <__flatcc_fb_codegen_c@@Base+0x14e8>
   172c4:	b	18028 <__flatcc_fb_codegen_c@@Base+0x1c24>
   172c8:	b	1801c <__flatcc_fb_codegen_c@@Base+0x1c18>
   172cc:	b	18010 <__flatcc_fb_codegen_c@@Base+0x1c0c>
   172d0:	b	18034 <__flatcc_fb_codegen_c@@Base+0x1c30>
   172d4:	ldr	r3, [pc, #1768]	; 179c4 <__flatcc_fb_codegen_c@@Base+0x15c0>
   172d8:	str	r5, [sp, #64]	; 0x40
   172dc:	ldr	r2, [pc, #1764]	; 179c8 <__flatcc_fb_codegen_c@@Base+0x15c4>
   172e0:	add	r3, pc, r3
   172e4:	add	r2, pc, r2
   172e8:	str	r3, [sp, #68]	; 0x44
   172ec:	mov	r3, #4
   172f0:	str	r2, [sp, #76]	; 0x4c
   172f4:	cmp	r3, #8
   172f8:	addls	pc, pc, r3, lsl #2
   172fc:	b	18890 <__flatcc_fb_codegen_c@@Base+0x248c>
   17300:	b	18004 <__flatcc_fb_codegen_c@@Base+0x1c00>
   17304:	b	17ff8 <__flatcc_fb_codegen_c@@Base+0x1bf4>
   17308:	b	17fec <__flatcc_fb_codegen_c@@Base+0x1be8>
   1730c:	b	17db0 <__flatcc_fb_codegen_c@@Base+0x19ac>
   17310:	b	17db0 <__flatcc_fb_codegen_c@@Base+0x19ac>
   17314:	b	17fe0 <__flatcc_fb_codegen_c@@Base+0x1bdc>
   17318:	b	17fd4 <__flatcc_fb_codegen_c@@Base+0x1bd0>
   1731c:	b	17fc8 <__flatcc_fb_codegen_c@@Base+0x1bc4>
   17320:	b	181ac <__flatcc_fb_codegen_c@@Base+0x1da8>
   17324:	ldr	r3, [pc, #1696]	; 179cc <__flatcc_fb_codegen_c@@Base+0x15c8>
   17328:	str	r5, [sp, #64]	; 0x40
   1732c:	add	r3, pc, r3
   17330:	str	r3, [sp, #68]	; 0x44
   17334:	ldr	r3, [pc, #1684]	; 179d0 <__flatcc_fb_codegen_c@@Base+0x15cc>
   17338:	add	r3, pc, r3
   1733c:	str	r3, [sp, #76]	; 0x4c
   17340:	ldr	r1, [pc, #1676]	; 179d4 <__flatcc_fb_codegen_c@@Base+0x15d0>
   17344:	add	r3, sp, #92	; 0x5c
   17348:	mov	r0, r3
   1734c:	str	r3, [sp, #72]	; 0x48
   17350:	ldrd	r2, [r4, #48]	; 0x30
   17354:	add	r1, pc, r1
   17358:	bl	140d0 <sprintf@plt>
   1735c:	ldr	r3, [sp, #44]	; 0x2c
   17360:	mov	r2, r5
   17364:	str	r9, [sp, #8]
   17368:	ldr	r1, [pc, #1640]	; 179d8 <__flatcc_fb_codegen_c@@Base+0x15d4>
   1736c:	str	r8, [sp, #12]
   17370:	str	r3, [sp, #16]
   17374:	ldr	r3, [sp, #76]	; 0x4c
   17378:	str	r5, [sp, #20]
   1737c:	add	r1, pc, r1
   17380:	str	r3, [sp, #24]
   17384:	ldr	r3, [sp, #64]	; 0x40
   17388:	str	r3, [sp, #28]
   1738c:	ldr	r3, [sp, #68]	; 0x44
   17390:	str	r3, [sp, #32]
   17394:	ldr	r3, [sp, #72]	; 0x48
   17398:	str	r3, [sp, #36]	; 0x24
   1739c:	ldrd	r6, [r4, #96]	; 0x60
   173a0:	strd	r6, [sp]
   173a4:	ldr	r0, [r5, #204]	; 0xcc
   173a8:	bl	14064 <fprintf@plt>
   173ac:	ldr	r3, [r5, #212]	; 0xd4
   173b0:	ldr	r3, [r3, #32]
   173b4:	cmp	r3, #0
   173b8:	bne	173fc <__flatcc_fb_codegen_c@@Base+0xff8>
   173bc:	ldrh	r3, [r4, #72]	; 0x48
   173c0:	tst	r3, #128	; 0x80
   173c4:	beq	16ce4 <__flatcc_fb_codegen_c@@Base+0x8e0>
   173c8:	ldr	r0, [sp, #44]	; 0x2c
   173cc:	mov	r3, r9
   173d0:	mov	r2, r5
   173d4:	str	r8, [sp]
   173d8:	ldr	r1, [pc, #1532]	; 179dc <__flatcc_fb_codegen_c@@Base+0x15d8>
   173dc:	str	r0, [sp, #4]
   173e0:	ldr	r0, [sp, #64]	; 0x40
   173e4:	add	r1, pc, r1
   173e8:	str	r0, [sp, #8]
   173ec:	ldr	r0, [sp, #68]	; 0x44
   173f0:	str	r0, [sp, #12]
   173f4:	ldr	r0, [r5, #204]	; 0xcc
   173f8:	bl	14064 <fprintf@plt>
   173fc:	ldrh	r3, [r4, #72]	; 0x48
   17400:	tst	r3, #128	; 0x80
   17404:	beq	16ce4 <__flatcc_fb_codegen_c@@Base+0x8e0>
   17408:	ldr	r3, [sp, #60]	; 0x3c
   1740c:	cmp	r3, #0
   17410:	ldr	r3, [r5, #204]	; 0xcc
   17414:	bne	17ddc <__flatcc_fb_codegen_c@@Base+0x19d8>
   17418:	ldr	r0, [pc, #1472]	; 179e0 <__flatcc_fb_codegen_c@@Base+0x15dc>
   1741c:	mov	r2, #61	; 0x3d
   17420:	mov	r1, #1
   17424:	add	r0, pc, r0
   17428:	bl	13fec <fwrite@plt>
   1742c:	ldr	r0, [sp, #44]	; 0x2c
   17430:	mov	r3, r9
   17434:	mov	r2, r5
   17438:	str	r8, [sp]
   1743c:	ldr	r1, [pc, #1440]	; 179e4 <__flatcc_fb_codegen_c@@Base+0x15e0>
   17440:	str	r0, [sp, #4]
   17444:	ldr	r0, [sp, #64]	; 0x40
   17448:	add	r1, pc, r1
   1744c:	str	r0, [sp, #8]
   17450:	ldr	r0, [sp, #68]	; 0x44
   17454:	str	r0, [sp, #12]
   17458:	ldr	r0, [r5, #204]	; 0xcc
   1745c:	bl	14064 <fprintf@plt>
   17460:	ldr	r3, [r5, #212]	; 0xd4
   17464:	ldr	r3, [r3, #136]	; 0x88
   17468:	cmp	r3, #0
   1746c:	beq	174a8 <__flatcc_fb_codegen_c@@Base+0x10a4>
   17470:	ldr	r0, [sp, #44]	; 0x2c
   17474:	mov	r3, r9
   17478:	mov	r2, r5
   1747c:	str	r8, [sp]
   17480:	ldr	r1, [pc, #1376]	; 179e8 <__flatcc_fb_codegen_c@@Base+0x15e4>
   17484:	str	r0, [sp, #4]
   17488:	ldr	r0, [sp, #64]	; 0x40
   1748c:	add	r1, pc, r1
   17490:	str	r0, [sp, #8]
   17494:	ldr	r0, [sp, #68]	; 0x44
   17498:	str	r0, [sp, #12]
   1749c:	str	r5, [sp, #16]
   174a0:	ldr	r0, [r5, #204]	; 0xcc
   174a4:	bl	14064 <fprintf@plt>
   174a8:	ldr	r1, [pc, #1340]	; 179ec <__flatcc_fb_codegen_c@@Base+0x15e8>
   174ac:	mov	r3, r9
   174b0:	mov	r2, r5
   174b4:	str	r8, [sp]
   174b8:	ldr	r0, [sp, #44]	; 0x2c
   174bc:	ldrd	r6, [sp, #64]	; 0x40
   174c0:	add	r1, pc, r1
   174c4:	stmib	sp, {r0, r6, r7}
   174c8:	ldr	r0, [r5, #204]	; 0xcc
   174cc:	bl	14064 <fprintf@plt>
   174d0:	ldr	r1, [pc, #1304]	; 179f0 <__flatcc_fb_codegen_c@@Base+0x15ec>
   174d4:	mov	r3, r9
   174d8:	mov	r2, r5
   174dc:	str	r8, [sp]
   174e0:	ldr	r0, [sp, #44]	; 0x2c
   174e4:	add	r1, pc, r1
   174e8:	stmib	sp, {r0, r6, r7}
   174ec:	ldr	r0, [r5, #204]	; 0xcc
   174f0:	bl	14064 <fprintf@plt>
   174f4:	ldr	r3, [r5, #212]	; 0xd4
   174f8:	ldr	r3, [r3, #136]	; 0x88
   174fc:	cmp	r3, #0
   17500:	beq	1712c <__flatcc_fb_codegen_c@@Base+0xd28>
   17504:	ldr	r1, [pc, #1256]	; 179f4 <__flatcc_fb_codegen_c@@Base+0x15f0>
   17508:	mov	r3, r9
   1750c:	mov	r2, r9
   17510:	str	r8, [sp]
   17514:	add	r1, pc, r1
   17518:	mov	r0, #1
   1751c:	str	r0, [sp, #60]	; 0x3c
   17520:	ldr	r0, [sp, #44]	; 0x2c
   17524:	str	r0, [sp, #4]
   17528:	ldr	r0, [r5, #204]	; 0xcc
   1752c:	bl	14064 <fprintf@plt>
   17530:	b	16ce4 <__flatcc_fb_codegen_c@@Base+0x8e0>
   17534:	ldr	r3, [pc, #1212]	; 179f8 <__flatcc_fb_codegen_c@@Base+0x15f4>
   17538:	add	r3, pc, r3
   1753c:	b	16f24 <__flatcc_fb_codegen_c@@Base+0xb20>
   17540:	ldr	r3, [pc, #1204]	; 179fc <__flatcc_fb_codegen_c@@Base+0x15f8>
   17544:	add	r3, pc, r3
   17548:	b	16f24 <__flatcc_fb_codegen_c@@Base+0xb20>
   1754c:	ldr	r3, [pc, #1196]	; 17a00 <__flatcc_fb_codegen_c@@Base+0x15fc>
   17550:	add	r3, pc, r3
   17554:	b	16f24 <__flatcc_fb_codegen_c@@Base+0xb20>
   17558:	ldr	r3, [pc, #1188]	; 17a04 <__flatcc_fb_codegen_c@@Base+0x1600>
   1755c:	add	r3, pc, r3
   17560:	b	16f24 <__flatcc_fb_codegen_c@@Base+0xb20>
   17564:	ldr	r3, [pc, #1180]	; 17a08 <__flatcc_fb_codegen_c@@Base+0x1604>
   17568:	add	r3, pc, r3
   1756c:	b	16f24 <__flatcc_fb_codegen_c@@Base+0xb20>
   17570:	ldr	r3, [pc, #1172]	; 17a0c <__flatcc_fb_codegen_c@@Base+0x1608>
   17574:	add	r3, pc, r3
   17578:	b	16f24 <__flatcc_fb_codegen_c@@Base+0xb20>
   1757c:	ldr	r3, [pc, #1164]	; 17a10 <__flatcc_fb_codegen_c@@Base+0x160c>
   17580:	add	r3, pc, r3
   17584:	b	16f24 <__flatcc_fb_codegen_c@@Base+0xb20>
   17588:	ldr	r3, [pc, #1156]	; 17a14 <__flatcc_fb_codegen_c@@Base+0x1610>
   1758c:	add	r3, pc, r3
   17590:	b	16f24 <__flatcc_fb_codegen_c@@Base+0xb20>
   17594:	ldrh	r2, [r4, #56]	; 0x38
   17598:	sub	r2, r2, #3
   1759c:	cmp	r2, #3
   175a0:	addls	pc, pc, r2, lsl #2
   175a4:	b	18a98 <__flatcc_fb_codegen_c@@Base+0x2694>
   175a8:	b	1820c <__flatcc_fb_codegen_c@@Base+0x1e08>
   175ac:	b	181ec <__flatcc_fb_codegen_c@@Base+0x1de8>
   175b0:	b	181cc <__flatcc_fb_codegen_c@@Base+0x1dc8>
   175b4:	b	181b8 <__flatcc_fb_codegen_c@@Base+0x1db4>
   175b8:	ldrh	r2, [r4, #56]	; 0x38
   175bc:	sub	r2, r2, #3
   175c0:	cmp	r2, #3
   175c4:	addls	pc, pc, r2, lsl #2
   175c8:	b	18a98 <__flatcc_fb_codegen_c@@Base+0x2694>
   175cc:	b	18228 <__flatcc_fb_codegen_c@@Base+0x1e24>
   175d0:	b	18188 <__flatcc_fb_codegen_c@@Base+0x1d84>
   175d4:	b	18160 <__flatcc_fb_codegen_c@@Base+0x1d5c>
   175d8:	b	18144 <__flatcc_fb_codegen_c@@Base+0x1d40>
   175dc:	ldrh	r1, [r4, #56]	; 0x38
   175e0:	sub	r1, r1, #3
   175e4:	cmp	r1, #3
   175e8:	addls	pc, pc, r1, lsl #2
   175ec:	b	18a98 <__flatcc_fb_codegen_c@@Base+0x2694>
   175f0:	b	18408 <__flatcc_fb_codegen_c@@Base+0x2004>
   175f4:	b	183e0 <__flatcc_fb_codegen_c@@Base+0x1fdc>
   175f8:	b	183b8 <__flatcc_fb_codegen_c@@Base+0x1fb4>
   175fc:	b	17f40 <__flatcc_fb_codegen_c@@Base+0x1b3c>
   17600:	ldrh	r1, [r4, #56]	; 0x38
   17604:	sub	r1, r1, #3
   17608:	cmp	r1, #3
   1760c:	addls	pc, pc, r1, lsl #2
   17610:	b	18a98 <__flatcc_fb_codegen_c@@Base+0x2694>
   17614:	b	1844c <__flatcc_fb_codegen_c@@Base+0x2048>
   17618:	b	18424 <__flatcc_fb_codegen_c@@Base+0x2020>
   1761c:	b	18390 <__flatcc_fb_codegen_c@@Base+0x1f8c>
   17620:	b	17f10 <__flatcc_fb_codegen_c@@Base+0x1b0c>
   17624:	ldrh	r1, [r4, #56]	; 0x38
   17628:	sub	r1, r1, #3
   1762c:	cmp	r1, #3
   17630:	addls	pc, pc, r1, lsl #2
   17634:	b	18a98 <__flatcc_fb_codegen_c@@Base+0x2694>
   17638:	b	182cc <__flatcc_fb_codegen_c@@Base+0x1ec8>
   1763c:	b	182a4 <__flatcc_fb_codegen_c@@Base+0x1ea0>
   17640:	b	1827c <__flatcc_fb_codegen_c@@Base+0x1e78>
   17644:	b	17ec4 <__flatcc_fb_codegen_c@@Base+0x1ac0>
   17648:	ldrh	r2, [r4, #56]	; 0x38
   1764c:	sub	r2, r2, #3
   17650:	cmp	r2, #3
   17654:	addls	pc, pc, r2, lsl #2
   17658:	b	18a98 <__flatcc_fb_codegen_c@@Base+0x2694>
   1765c:	b	18468 <__flatcc_fb_codegen_c@@Base+0x2064>
   17660:	b	18124 <__flatcc_fb_codegen_c@@Base+0x1d20>
   17664:	b	18104 <__flatcc_fb_codegen_c@@Base+0x1d00>
   17668:	b	18064 <__flatcc_fb_codegen_c@@Base+0x1c60>
   1766c:	ldrh	r1, [r4, #56]	; 0x38
   17670:	sub	r1, r1, #3
   17674:	cmp	r1, #3
   17678:	addls	pc, pc, r1, lsl #2
   1767c:	b	18a98 <__flatcc_fb_codegen_c@@Base+0x2694>
   17680:	b	18374 <__flatcc_fb_codegen_c@@Base+0x1f70>
   17684:	b	1834c <__flatcc_fb_codegen_c@@Base+0x1f48>
   17688:	b	18324 <__flatcc_fb_codegen_c@@Base+0x1f20>
   1768c:	b	17f98 <__flatcc_fb_codegen_c@@Base+0x1b94>
   17690:	sub	r2, r2, #1
   17694:	cmp	r2, #8
   17698:	addls	pc, pc, r2, lsl #2
   1769c:	b	18890 <__flatcc_fb_codegen_c@@Base+0x248c>
   176a0:	b	18650 <__flatcc_fb_codegen_c@@Base+0x224c>
   176a4:	b	1865c <__flatcc_fb_codegen_c@@Base+0x2258>
   176a8:	b	186e0 <__flatcc_fb_codegen_c@@Base+0x22dc>
   176ac:	b	184d8 <__flatcc_fb_codegen_c@@Base+0x20d4>
   176b0:	b	184d8 <__flatcc_fb_codegen_c@@Base+0x20d4>
   176b4:	b	186d4 <__flatcc_fb_codegen_c@@Base+0x22d0>
   176b8:	b	18668 <__flatcc_fb_codegen_c@@Base+0x2264>
   176bc:	b	18674 <__flatcc_fb_codegen_c@@Base+0x2270>
   176c0:	b	186c8 <__flatcc_fb_codegen_c@@Base+0x22c4>
   176c4:	sub	r2, r2, #1
   176c8:	cmp	r2, #8
   176cc:	addls	pc, pc, r2, lsl #2
   176d0:	b	18890 <__flatcc_fb_codegen_c@@Base+0x248c>
   176d4:	b	18680 <__flatcc_fb_codegen_c@@Base+0x227c>
   176d8:	b	1868c <__flatcc_fb_codegen_c@@Base+0x2288>
   176dc:	b	186f8 <__flatcc_fb_codegen_c@@Base+0x22f4>
   176e0:	b	18500 <__flatcc_fb_codegen_c@@Base+0x20fc>
   176e4:	b	18500 <__flatcc_fb_codegen_c@@Base+0x20fc>
   176e8:	b	186a4 <__flatcc_fb_codegen_c@@Base+0x22a0>
   176ec:	b	18704 <__flatcc_fb_codegen_c@@Base+0x2300>
   176f0:	b	18710 <__flatcc_fb_codegen_c@@Base+0x230c>
   176f4:	b	18698 <__flatcc_fb_codegen_c@@Base+0x2294>
   176f8:	sub	r2, r2, #1
   176fc:	cmp	r2, #8
   17700:	addls	pc, pc, r2, lsl #2
   17704:	b	18890 <__flatcc_fb_codegen_c@@Base+0x248c>
   17708:	b	18620 <__flatcc_fb_codegen_c@@Base+0x221c>
   1770c:	b	1862c <__flatcc_fb_codegen_c@@Base+0x2228>
   17710:	b	186ec <__flatcc_fb_codegen_c@@Base+0x22e8>
   17714:	b	184ac <__flatcc_fb_codegen_c@@Base+0x20a8>
   17718:	b	184ac <__flatcc_fb_codegen_c@@Base+0x20a8>
   1771c:	b	186bc <__flatcc_fb_codegen_c@@Base+0x22b8>
   17720:	b	18638 <__flatcc_fb_codegen_c@@Base+0x2234>
   17724:	b	18644 <__flatcc_fb_codegen_c@@Base+0x2240>
   17728:	b	186b0 <__flatcc_fb_codegen_c@@Base+0x22ac>
   1772c:	cmp	r2, #11
   17730:	beq	18250 <__flatcc_fb_codegen_c@@Base+0x1e4c>
   17734:	ldr	r1, [pc, #732]	; 17a18 <__flatcc_fb_codegen_c@@Base+0x1614>
   17738:	add	r3, sp, #92	; 0x5c
   1773c:	mov	r0, r3
   17740:	str	r3, [sp, #72]	; 0x48
   17744:	ldrd	r2, [r4, #48]	; 0x30
   17748:	add	r1, pc, r1
   1774c:	bl	140d0 <sprintf@plt>
   17750:	ldr	r3, [sp, #44]	; 0x2c
   17754:	mov	r2, r5
   17758:	str	r9, [sp, #8]
   1775c:	ldr	r1, [pc, #696]	; 17a1c <__flatcc_fb_codegen_c@@Base+0x1618>
   17760:	str	r8, [sp, #12]
   17764:	str	r3, [sp, #16]
   17768:	ldr	r3, [sp, #56]	; 0x38
   1776c:	add	r1, pc, r1
   17770:	str	r3, [sp, #20]
   17774:	str	r3, [sp, #24]
   17778:	ldr	r3, [sp, #72]	; 0x48
   1777c:	str	r3, [sp, #28]
   17780:	ldrd	r6, [r4, #96]	; 0x60
   17784:	strd	r6, [sp]
   17788:	ldr	r0, [r5, #204]	; 0xcc
   1778c:	bl	14064 <fprintf@plt>
   17790:	ldr	r3, [r5, #212]	; 0xd4
   17794:	ldr	r3, [r3, #32]
   17798:	cmp	r3, #0
   1779c:	bne	177d8 <__flatcc_fb_codegen_c@@Base+0x13d4>
   177a0:	ldrh	r3, [r4, #72]	; 0x48
   177a4:	tst	r3, #128	; 0x80
   177a8:	beq	16ce4 <__flatcc_fb_codegen_c@@Base+0x8e0>
   177ac:	ldr	r0, [sp, #44]	; 0x2c
   177b0:	mov	r3, r9
   177b4:	mov	r2, r5
   177b8:	str	r8, [sp]
   177bc:	ldr	r1, [pc, #604]	; 17a20 <__flatcc_fb_codegen_c@@Base+0x161c>
   177c0:	str	r0, [sp, #4]
   177c4:	ldr	r0, [sp, #56]	; 0x38
   177c8:	add	r1, pc, r1
   177cc:	str	r0, [sp, #8]
   177d0:	ldr	r0, [r5, #204]	; 0xcc
   177d4:	bl	14064 <fprintf@plt>
   177d8:	ldrh	r3, [r4, #72]	; 0x48
   177dc:	tst	r3, #128	; 0x80
   177e0:	beq	16ce4 <__flatcc_fb_codegen_c@@Base+0x8e0>
   177e4:	ldr	r3, [sp, #60]	; 0x3c
   177e8:	cmp	r3, #0
   177ec:	ldr	r3, [r5, #204]	; 0xcc
   177f0:	bne	1852c <__flatcc_fb_codegen_c@@Base+0x2128>
   177f4:	ldr	r0, [pc, #552]	; 17a24 <__flatcc_fb_codegen_c@@Base+0x1620>
   177f8:	mov	r2, #61	; 0x3d
   177fc:	mov	r1, #1
   17800:	add	r0, pc, r0
   17804:	bl	13fec <fwrite@plt>
   17808:	ldr	r0, [sp, #44]	; 0x2c
   1780c:	mov	r3, r9
   17810:	mov	r2, r5
   17814:	str	r8, [sp]
   17818:	ldr	r1, [pc, #520]	; 17a28 <__flatcc_fb_codegen_c@@Base+0x1624>
   1781c:	str	r0, [sp, #4]
   17820:	ldr	r0, [sp, #56]	; 0x38
   17824:	add	r1, pc, r1
   17828:	str	r0, [sp, #8]
   1782c:	ldr	r0, [r5, #204]	; 0xcc
   17830:	bl	14064 <fprintf@plt>
   17834:	ldr	r3, [r5, #212]	; 0xd4
   17838:	ldr	r3, [r3, #136]	; 0x88
   1783c:	cmp	r3, #0
   17840:	beq	17874 <__flatcc_fb_codegen_c@@Base+0x1470>
   17844:	ldr	r0, [sp, #44]	; 0x2c
   17848:	mov	r3, r9
   1784c:	mov	r2, r5
   17850:	str	r8, [sp]
   17854:	ldr	r1, [pc, #464]	; 17a2c <__flatcc_fb_codegen_c@@Base+0x1628>
   17858:	str	r0, [sp, #4]
   1785c:	ldr	r0, [sp, #56]	; 0x38
   17860:	add	r1, pc, r1
   17864:	str	r0, [sp, #8]
   17868:	str	r5, [sp, #12]
   1786c:	ldr	r0, [r5, #204]	; 0xcc
   17870:	bl	14064 <fprintf@plt>
   17874:	ldr	r1, [pc, #436]	; 17a30 <__flatcc_fb_codegen_c@@Base+0x162c>
   17878:	mov	r3, r9
   1787c:	mov	r2, r5
   17880:	str	r8, [sp]
   17884:	ldr	r7, [sp, #44]	; 0x2c
   17888:	ldr	r6, [sp, #56]	; 0x38
   1788c:	add	r1, pc, r1
   17890:	str	r7, [sp, #4]
   17894:	str	r6, [sp, #8]
   17898:	ldr	r0, [r5, #204]	; 0xcc
   1789c:	bl	14064 <fprintf@plt>
   178a0:	ldr	r1, [pc, #396]	; 17a34 <__flatcc_fb_codegen_c@@Base+0x1630>
   178a4:	mov	r3, r9
   178a8:	mov	r2, r5
   178ac:	str	r8, [sp]
   178b0:	str	r7, [sp, #4]
   178b4:	str	r6, [sp, #8]
   178b8:	ldr	r0, [r5, #204]	; 0xcc
   178bc:	add	r1, pc, r1
   178c0:	bl	14064 <fprintf@plt>
   178c4:	ldr	r3, [r5, #212]	; 0xd4
   178c8:	ldr	r3, [r3, #136]	; 0x88
   178cc:	cmp	r3, #0
   178d0:	beq	1712c <__flatcc_fb_codegen_c@@Base+0xd28>
   178d4:	ldr	r1, [pc, #348]	; 17a38 <__flatcc_fb_codegen_c@@Base+0x1634>
   178d8:	mov	r3, r9
   178dc:	mov	r2, r9
   178e0:	str	r8, [sp]
   178e4:	add	r1, pc, r1
   178e8:	b	17518 <__flatcc_fb_codegen_c@@Base+0x1114>
   178ec:	ldr	r2, [pc, #328]	; 17a3c <__flatcc_fb_codegen_c@@Base+0x1638>
   178f0:	add	r2, pc, r2
   178f4:	ldr	r1, [pc, #324]	; 17a40 <__flatcc_fb_codegen_c@@Base+0x163c>
   178f8:	add	r3, sp, #92	; 0x5c
   178fc:	mov	r0, r3
   17900:	ldrd	r6, [r4, #48]	; 0x30
   17904:	add	r1, pc, r1
   17908:	strd	r6, [sp]
   1790c:	str	r3, [sp, #72]	; 0x48
   17910:	bl	140d0 <sprintf@plt>
   17914:	b	1735c <__flatcc_fb_codegen_c@@Base+0xf58>
   17918:			; <UNDEFINED> instruction: 0x000566b0
   1791c:	ldrdeq	r5, [r3], -ip
   17920:	andeq	fp, r2, r4, lsl r6
   17924:	ldrdeq	r5, [r3], -r4
   17928:	strdeq	fp, [r2], -r8
   1792c:	strdeq	r3, [r3], -r8
   17930:	andeq	fp, r2, r8, lsl #28
   17934:	andeq	fp, r2, r4, ror r5
   17938:	andeq	fp, r2, r4, lsl #11
   1793c:	andeq	fp, r2, r4, lsr #11
   17940:	strdeq	fp, [r2], -r4
   17944:	andeq	r5, r3, ip, lsr #1
   17948:	andeq	r5, r3, r0, lsr #1
   1794c:	andeq	r3, r3, r8, ror #15
   17950:	andeq	fp, r2, ip, asr #9
   17954:	muleq	r2, ip, r4
   17958:			; <UNDEFINED> instruction: 0x0002bcb0
   1795c:	andeq	fp, r2, ip, lsl r7
   17960:	muleq	r2, r4, r7
   17964:	andeq	fp, r2, r8, asr #21
   17968:	andeq	fp, r2, r8, lsl #19
   1796c:	andeq	fp, r2, r0, lsr r8
   17970:	andeq	fp, r2, r4, asr r6
   17974:	andeq	fp, r2, r0, ror #12
   17978:	andeq	fp, r2, r0, lsl #1
   1797c:	andeq	fp, r2, r0, asr #7
   17980:	muleq	r2, ip, pc	; <UNPREDICTABLE>
   17984:	andeq	fp, r2, r4, lsr #7
   17988:	andeq	fp, r2, ip, lsr #1
   1798c:	andeq	fp, r2, r8, lsr #7
   17990:	muleq	r2, r8, r3
   17994:	strdeq	fp, [r2], -ip
   17998:	andeq	fp, r2, r0, ror r3
   1799c:	andeq	fp, r2, ip, ror r3
   179a0:	strdeq	fp, [r2], -r4
   179a4:	andeq	fp, r2, r4, lsr #3
   179a8:	andeq	sl, r2, r8, lsr #27
   179ac:	andeq	fp, r2, r4, lsl #11
   179b0:	muleq	r2, r0, pc	; <UNPREDICTABLE>
   179b4:	strdeq	fp, [r2], -r4
   179b8:	andeq	fp, r2, r4, asr r6
   179bc:	andeq	sl, r2, r8, lsl ip
   179c0:	andeq	r2, r4, r4, lsl #17
   179c4:	andeq	sl, r2, r8, asr #23
   179c8:	andeq	r2, r4, r4, lsr r8
   179cc:	andeq	sl, r2, ip, ror fp
   179d0:	andeq	r2, r4, r0, ror #15
   179d4:	andeq	sl, r2, r8, ror #27
   179d8:	andeq	sl, r2, r4, asr #27
   179dc:	muleq	r2, r8, sp
   179e0:	ldrdeq	sl, [r2], -r0
   179e4:	andeq	sl, r2, ip, ror #27
   179e8:	strdeq	fp, [r2], -r8
   179ec:	andeq	sl, r2, r8, lsr #27
   179f0:	andeq	sl, r2, r0, asr #27
   179f4:	andeq	sl, r2, ip, asr #27
   179f8:	andeq	sl, r2, ip, lsl sl
   179fc:	andeq	sl, r2, ip, lsr #20
   17a00:	andeq	sl, r2, ip, lsr #20
   17a04:	andeq	sl, r2, ip, lsr #20
   17a08:	andeq	sl, r2, ip, lsr #20
   17a0c:	strdeq	sl, [r2], -r0
   17a10:	andeq	sl, r2, ip, lsr sl
   17a14:	andeq	sl, r2, r0, lsr #20
   17a18:	strdeq	sl, [r2], -r4
   17a1c:	andeq	sl, r2, ip, lsl #28
   17a20:	andeq	sl, r2, ip, ror #27
   17a24:	strdeq	sl, [r2], -r4
   17a28:	andeq	sl, r2, r8, asr #27
   17a2c:	muleq	r2, r0, r0
   17a30:	muleq	r2, r8, sp
   17a34:	andeq	sl, r2, r8, lsr #27
   17a38:	strdeq	sl, [r2], -ip
   17a3c:	andeq	sl, r2, r4, lsr #12
   17a40:	andeq	sl, r2, r4, lsl r8
   17a44:	andeq	sl, r2, r0, ror #2
   17a48:	andeq	sl, r2, ip, asr r3
   17a4c:	andeq	sl, r2, r8, asr #7
   17a50:	strdeq	sl, [r2], -r4
   17a54:	andeq	sl, r2, r0, lsl r4
   17a58:	andeq	sl, r2, r8, lsl #20
   17a5c:	andeq	sl, r2, r8, asr #8
   17a60:	strdeq	r9, [r2], -r8
   17a64:	strdeq	r9, [r2], -r4
   17a68:	ldrdeq	r3, [r3], -r4
   17a6c:	andeq	sl, r2, r0, asr #32
   17a70:	andeq	sl, r2, ip, lsr #4
   17a74:			; <UNDEFINED> instruction: 0x00029fbc
   17a78:			; <UNDEFINED> instruction: 0x00029fb8
   17a7c:	andeq	r3, r3, r8, lsl #25
   17a80:	strdeq	r9, [r2], -ip
   17a84:	andeq	r9, r2, r0, lsl pc
   17a88:	andeq	r9, r2, ip, lsl #30
   17a8c:	andeq	r3, r3, r8, asr ip
   17a90:	andeq	r9, r2, r8, lsr #31
   17a94:	andeq	r9, r2, ip, lsr #30
   17a98:	muleq	r2, r0, pc	; <UNPREDICTABLE>
   17a9c:	andeq	r1, r4, ip, lsl #23
   17aa0:	andeq	r9, r2, r4, asr #29
   17aa4:	andeq	r9, r2, r8, asr pc
   17aa8:	andeq	r3, r3, r8, lsl #24
   17aac:			; <UNDEFINED> instruction: 0x00029eb4
   17ab0:	andeq	r9, r2, r0, asr #30
   17ab4:	andeq	r9, r2, r8, asr pc
   17ab8:	andeq	r9, r2, r4, asr #30
   17abc:	andeq	r9, r2, ip, lsr #30
   17ac0:	andeq	r9, r2, ip, lsr pc
   17ac4:	strdeq	r9, [r2], -r8
   17ac8:	strdeq	r9, [r2], -r8
   17acc:	andeq	r9, r2, r0, lsl pc
   17ad0:	strdeq	r9, [r2], -ip
   17ad4:	andeq	r9, r2, r0, asr #29
   17ad8:	ldrdeq	r9, [r2], -r8
   17adc:	andeq	r9, r2, r8, ror #29
   17ae0:	andeq	r9, r2, r4, lsr #29
   17ae4:	andeq	r9, r2, r0, lsl lr
   17ae8:	andeq	r3, r3, ip, lsl #22
   17aec:	andeq	r9, r2, r8, asr #28
   17af0:	strdeq	r9, [r2], -r0
   17af4:	andeq	r9, r2, ip, ror #27
   17af8:	ldrdeq	r3, [r3], -ip
   17afc:	andeq	r9, r2, r4, lsr lr
   17b00:	andeq	r3, r3, r4, asr #21
   17b04:	andeq	r9, r2, r0, asr #28
   17b08:	andeq	r9, r2, ip, ror #26
   17b0c:	andeq	r3, r3, r8, lsr #21
   17b10:	andeq	r9, r2, ip, asr #26
   17b14:	andeq	r3, r3, r8, lsl #21
   17b18:	andeq	r9, r2, r0, lsr #27
   17b1c:	muleq	r2, ip, sp
   17b20:	andeq	r9, r2, r4, lsl #27
   17b24:	andeq	r3, r3, r8, asr #20
   17b28:	andeq	r9, r2, r4, ror sp
   17b2c:	andeq	r9, r2, r4, ror #26
   17b30:	andeq	r3, r3, r0, lsr #20
   17b34:	andeq	r9, r2, r4, asr #26
   17b38:	andeq	r9, r2, r8, asr #26
   17b3c:	andeq	r9, r2, r4, lsr #26
   17b40:	andeq	r9, r2, ip, lsl #26
   17b44:	andeq	r3, r3, r0, ror #19
   17b48:	andeq	r9, r2, ip, ror #25
   17b4c:	andeq	r3, r3, r0, asr #19
   17b50:	andeq	r9, r2, ip, asr #25
   17b54:	andeq	r3, r3, r0, lsr #19
   17b58:			; <UNDEFINED> instruction: 0x00029cbc
   17b5c:	andeq	r3, r3, r0, lsl #19
   17b60:	andeq	r9, r2, ip, lsr #25
   17b64:	ldrdeq	r9, [r2], -r0
   17b68:	andeq	r9, r2, r0, asr #24
   17b6c:	andeq	r3, r3, ip, lsr #18
   17b70:	andeq	r9, r2, r0, lsr ip
   17b74:	andeq	r9, r2, r8, lsl ip
   17b78:	andeq	r3, r3, r4, lsl #18
   17b7c:	andeq	r9, r2, r8, lsl #24
   17b80:	strdeq	r9, [r2], -r0
   17b84:	andeq	r9, r2, ip, ror #23
   17b88:			; <UNDEFINED> instruction: 0x000338b0
   17b8c:	andeq	r9, r2, ip, lsr #28
   17b90:	andeq	r9, r2, ip, lsr fp
   17b94:	andeq	r3, r3, r4, lsl #17
   17b98:	andeq	r9, r2, r0, lsr fp
   17b9c:	andeq	r9, r2, r4, lsl fp
   17ba0:	andeq	r3, r3, ip, asr r8
   17ba4:	andeq	r9, r2, r8, lsl #22
   17ba8:	andeq	r9, r2, ip, ror #21
   17bac:	andeq	r9, r2, ip, ror #21
   17bb0:	andeq	r9, r2, ip, lsr fp
   17bb4:	andeq	r3, r3, r8, lsl r8
   17bb8:	andeq	r9, r2, ip, lsr #22
   17bbc:	muleq	r2, r8, sl
   17bc0:	strdeq	r3, [r3], -r0
   17bc4:	andeq	r9, r2, r8, lsl #21
   17bc8:	andeq	r9, r2, r0, ror sl
   17bcc:	andeq	r3, r3, r8, asr #15
   17bd0:	andeq	r9, r2, r0, ror #20
   17bd4:	andeq	r9, r2, r8, asr #20
   17bd8:	andeq	r9, r2, r4, asr #20
   17bdc:	andeq	r9, r2, r8, lsr #21
   17be0:	andeq	r3, r3, r4, lsl #15
   17be4:	muleq	r2, r8, sl
   17be8:	andeq	r9, r2, r0, lsl #21
   17bec:	andeq	r9, r2, ip, ror sl
   17bf0:	andeq	r9, r2, ip, lsl #20
   17bf4:	andeq	r9, r2, r0, lsl #20
   17bf8:	andeq	r9, r2, r0, lsl #20
   17bfc:	andeq	r3, r3, ip, lsl r7
   17c00:	andeq	r9, r2, ip, ror sl
   17c04:	andeq	r9, r2, r4, ror #20
   17c08:	andeq	r9, r2, r0, ror #24
   17c0c:	andeq	r9, r2, r8, lsr sl
   17c10:	andeq	r9, r2, ip, lsr ip
   17c14:	andeq	r9, r2, r0, lsl sl
   17c18:	andeq	r9, r2, r0, lsl #24
   17c1c:	andeq	r9, r2, r8, ror ip
   17c20:	andeq	r9, r2, r4, lsr #25
   17c24:	andeq	sl, r2, r8, ror r0
   17c28:	andeq	sl, r2, r0, asr #6
   17c2c:	andeq	r3, r3, ip, ror #11
   17c30:	ldrdeq	r9, [r2], -ip
   17c34:	andeq	r9, r2, r8, lsl #18
   17c38:	strdeq	r9, [r2], -r4
   17c3c:	andeq	r9, r2, r4, asr #17
   17c40:	andeq	r9, r2, ip, lsr #17
   17c44:	ldrdeq	r9, [r2], -r8
   17c48:	andeq	r9, r2, r4, asr #17
   17c4c:	muleq	r2, r4, r8
   17c50:	andeq	r9, r2, ip, ror r8
   17c54:	andeq	r9, r2, r8, lsr #17
   17c58:	andeq	r9, r2, ip, asr r8
   17c5c:	andeq	r9, r2, r0, lsl #17
   17c60:	andeq	r9, r2, r4, asr #16
   17c64:	andeq	r9, r2, r8, ror #16
   17c68:	andeq	r9, r2, ip, lsr #16
   17c6c:	andeq	r9, r2, r0, asr r8
   17c70:	andeq	r9, r2, r8, lsr r8
   17c74:	andeq	r9, r2, ip, lsr #16
   17c78:	andeq	r9, r2, r0, lsr #16
   17c7c:	andeq	r9, r2, r8, lsr #16
   17c80:	strdeq	r9, [r2], -r8
   17c84:	andeq	r9, r2, r0, ror #14
   17c88:	andeq	r3, r3, ip, lsl #9
   17c8c:	andeq	r9, r2, r4, asr r7
   17c90:	andeq	r9, r2, r8, lsr r7
   17c94:	andeq	r3, r3, r4, ror #8
   17c98:	andeq	r9, r2, ip, lsr #14
   17c9c:	andeq	r9, r2, r0, lsl r7
   17ca0:	andeq	r9, r2, r0, lsl r7
   17ca4:	andeq	sl, r2, r8, asr #32
   17ca8:	andeq	r9, r2, r0, lsl r4
   17cac:	andeq	r9, r2, r8, asr r6
   17cb0:	andeq	r9, r2, r8, lsr #6
   17cb4:	andeq	r1, r3, ip, asr fp
   17cb8:	andeq	r9, r2, r0, ror #29
   17cbc:			; <UNDEFINED> instruction: 0x000293b8
   17cc0:	andeq	r9, r2, r0, lsl #12
   17cc4:	ldrdeq	r9, [r2], -r0
   17cc8:	andeq	r1, r3, r4, lsl #22
   17ccc:	ldrdeq	r9, [r2], -r4
   17cd0:	andeq	r9, r2, r0, ror #6
   17cd4:	andeq	r9, r2, r8, lsr #11
   17cd8:	andeq	r9, r2, r8, ror r2
   17cdc:	andeq	r1, r3, ip, lsr #21
   17ce0:	andeq	r9, r2, r0, ror r5
   17ce4:	strdeq	r9, [r2], -ip
   17ce8:	andeq	r9, r2, ip, asr #10
   17cec:	andeq	r9, r2, ip, lsl r2
   17cf0:	andeq	r1, r3, r0, asr sl
   17cf4:	strdeq	r9, [r2], -ip
   17cf8:			; <UNDEFINED> instruction: 0x000292b4
   17cfc:	andeq	r9, r2, ip, ror sl
   17d00:	andeq	r9, r2, r8, lsr #20
   17d04:	andeq	r9, r2, r8, lsl #5
   17d08:	ldrdeq	r9, [r2], -r0
   17d0c:	andeq	r9, r2, r0, lsr #3
   17d10:	ldrdeq	r1, [r3], -r4
   17d14:	andeq	r3, r3, r8, asr #4
   17d18:	andeq	r9, r2, ip, lsl #11
   17d1c:	andeq	r9, r2, r8, ror #2
   17d20:	andeq	r9, r2, r0, lsr #4
   17d24:	andeq	r9, r2, r0, lsr r6
   17d28:	andeq	r9, r2, ip, ror #9
   17d2c:	andeq	r9, r2, ip, ror #9
   17d30:	ldrdeq	r9, [r2], -r0
   17d34:	andeq	r3, r3, r8, ror #3
   17d38:	andeq	r9, r2, r4, asr #9
   17d3c:	andeq	r9, r2, r8, lsr #9
   17d40:	andeq	r3, r3, r0, asr #3
   17d44:	muleq	r2, ip, r4
   17d48:	andeq	r9, r2, r0, lsl #9
   17d4c:	andeq	r9, r2, r0, lsl #9
   17d50:	andeq	r9, r2, r0, lsl #9
   17d54:	andeq	r3, r3, ip, ror r1
   17d58:	andeq	r9, r2, r0, ror r4
   17d5c:	andeq	r9, r2, r8, asr r4
   17d60:	andeq	r3, r3, r4, asr r1
   17d64:	andeq	r9, r2, r8, asr #8
   17d68:	andeq	r9, r2, r0, lsr r4
   17d6c:	andeq	r9, r2, ip, lsr #8
   17d70:	andeq	r9, r2, ip, ror #6
   17d74:	strdeq	r9, [r2], -r8
   17d78:	andeq	r9, r2, r8, asr #6
   17d7c:	andeq	r9, r2, r8, lsl r0
   17d80:	andeq	r1, r3, ip, asr #16
   17d84:	andeq	r9, r2, r4, lsl r3
   17d88:	andeq	r9, r2, r0, lsr #5
   17d8c:	strdeq	r9, [r2], -r0
   17d90:	andeq	r8, r2, r0, asr #31
   17d94:	strdeq	r1, [r3], -r4
   17d98:	andeq	r0, r0, r0, lsr #1
   17d9c:			; <UNDEFINED> instruction: 0x000292bc
   17da0:	andeq	r9, r2, r8, asr #4
   17da4:	muleq	r2, r8, r2
   17da8:	andeq	r8, r2, r8, ror #30
   17dac:	muleq	r3, ip, r7
   17db0:	ldr	r2, [pc, #-884]	; 17a44 <__flatcc_fb_codegen_c@@Base+0x1640>
   17db4:	add	r2, pc, r2
   17db8:	ldr	r1, [pc, #-888]	; 17a48 <__flatcc_fb_codegen_c@@Base+0x1644>
   17dbc:	add	r3, sp, #92	; 0x5c
   17dc0:	mov	r0, r3
   17dc4:	ldrd	r6, [r4, #48]	; 0x30
   17dc8:	add	r1, pc, r1
   17dcc:	strd	r6, [sp]
   17dd0:	str	r3, [sp, #72]	; 0x48
   17dd4:	bl	140d0 <sprintf@plt>
   17dd8:	b	1735c <__flatcc_fb_codegen_c@@Base+0xf58>
   17ddc:	ldr	r0, [pc, #-920]	; 17a4c <__flatcc_fb_codegen_c@@Base+0x1648>
   17de0:	mov	r2, #66	; 0x42
   17de4:	mov	r1, #1
   17de8:	add	r0, pc, r0
   17dec:	bl	13fec <fwrite@plt>
   17df0:	ldr	r0, [pc, #-936]	; 17a50 <__flatcc_fb_codegen_c@@Base+0x164c>
   17df4:	mov	r2, #61	; 0x3d
   17df8:	mov	r1, #1
   17dfc:	ldr	r3, [r5, #204]	; 0xcc
   17e00:	add	r0, pc, r0
   17e04:	bl	13fec <fwrite@plt>
   17e08:	ldr	r0, [sp, #44]	; 0x2c
   17e0c:	mov	r3, r9
   17e10:	mov	r2, r5
   17e14:	str	r8, [sp]
   17e18:	ldr	r1, [pc, #-972]	; 17a54 <__flatcc_fb_codegen_c@@Base+0x1650>
   17e1c:	str	r0, [sp, #4]
   17e20:	ldr	r0, [sp, #64]	; 0x40
   17e24:	add	r1, pc, r1
   17e28:	str	r0, [sp, #8]
   17e2c:	ldr	r0, [sp, #68]	; 0x44
   17e30:	str	r0, [sp, #12]
   17e34:	ldr	r0, [r5, #204]	; 0xcc
   17e38:	bl	14064 <fprintf@plt>
   17e3c:	ldr	r3, [r5, #212]	; 0xd4
   17e40:	ldr	r3, [r3, #136]	; 0x88
   17e44:	cmp	r3, #0
   17e48:	beq	1712c <__flatcc_fb_codegen_c@@Base+0xd28>
   17e4c:	ldr	r1, [sp, #44]	; 0x2c
   17e50:	mov	r3, r9
   17e54:	mov	r2, r5
   17e58:	str	r8, [sp]
   17e5c:	ldr	r0, [sp, #68]	; 0x44
   17e60:	str	r1, [sp, #4]
   17e64:	ldr	r1, [sp, #64]	; 0x40
   17e68:	str	r1, [sp, #8]
   17e6c:	ldr	r1, [pc, #-1052]	; 17a58 <__flatcc_fb_codegen_c@@Base+0x1654>
   17e70:	str	r0, [sp, #12]
   17e74:	str	r5, [sp, #16]
   17e78:	ldr	r0, [r5, #204]	; 0xcc
   17e7c:	add	r1, pc, r1
   17e80:	bl	14064 <fprintf@plt>
   17e84:	b	16ce4 <__flatcc_fb_codegen_c@@Base+0x8e0>
   17e88:	ldr	r1, [pc, #-1076]	; 17a5c <__flatcc_fb_codegen_c@@Base+0x1658>
   17e8c:	mov	r3, r9
   17e90:	mov	r2, r9
   17e94:	str	r8, [sp]
   17e98:	add	r1, pc, r1
   17e9c:	b	17518 <__flatcc_fb_codegen_c@@Base+0x1114>
   17ea0:	ldrh	r1, [r4, #56]	; 0x38
   17ea4:	sub	r1, r1, #3
   17ea8:	cmp	r1, #3
   17eac:	addls	pc, pc, r1, lsl #2
   17eb0:	b	18a98 <__flatcc_fb_codegen_c@@Base+0x2694>
   17eb4:	b	1876c <__flatcc_fb_codegen_c@@Base+0x2368>
   17eb8:	b	18744 <__flatcc_fb_codegen_c@@Base+0x2340>
   17ebc:	b	1871c <__flatcc_fb_codegen_c@@Base+0x2318>
   17ec0:	b	1847c <__flatcc_fb_codegen_c@@Base+0x2078>
   17ec4:	ldr	r3, [pc, #-1132]	; 17a60 <__flatcc_fb_codegen_c@@Base+0x165c>
   17ec8:	add	r3, pc, r3
   17ecc:	str	r3, [sp, #68]	; 0x44
   17ed0:	ldr	r3, [pc, #-1140]	; 17a64 <__flatcc_fb_codegen_c@@Base+0x1660>
   17ed4:	add	r3, pc, r3
   17ed8:	str	r3, [sp, #76]	; 0x4c
   17edc:	ldr	r3, [pc, #-1148]	; 17a68 <__flatcc_fb_codegen_c@@Base+0x1664>
   17ee0:	ldr	r2, [pc, #-1148]	; 17a6c <__flatcc_fb_codegen_c@@Base+0x1668>
   17ee4:	add	r3, pc, r3
   17ee8:	add	r2, pc, r2
   17eec:	str	r3, [sp, #64]	; 0x40
   17ef0:	ldr	r1, [pc, #-1160]	; 17a70 <__flatcc_fb_codegen_c@@Base+0x166c>
   17ef4:	add	r3, sp, #92	; 0x5c
   17ef8:	mov	r0, r3
   17efc:	str	r3, [sp, #72]	; 0x48
   17f00:	ldrb	r3, [r4, #48]	; 0x30
   17f04:	add	r1, pc, r1
   17f08:	bl	140d0 <sprintf@plt>
   17f0c:	b	1735c <__flatcc_fb_codegen_c@@Base+0xf58>
   17f10:	ldr	r3, [pc, #-1188]	; 17a74 <__flatcc_fb_codegen_c@@Base+0x1670>
   17f14:	add	r3, pc, r3
   17f18:	str	r3, [sp, #68]	; 0x44
   17f1c:	ldr	r3, [pc, #-1196]	; 17a78 <__flatcc_fb_codegen_c@@Base+0x1674>
   17f20:	add	r3, pc, r3
   17f24:	str	r3, [sp, #76]	; 0x4c
   17f28:	ldr	r3, [pc, #-1204]	; 17a7c <__flatcc_fb_codegen_c@@Base+0x1678>
   17f2c:	ldr	r2, [pc, #-1204]	; 17a80 <__flatcc_fb_codegen_c@@Base+0x167c>
   17f30:	add	r3, pc, r3
   17f34:	add	r2, pc, r2
   17f38:	str	r3, [sp, #64]	; 0x40
   17f3c:	b	17ef0 <__flatcc_fb_codegen_c@@Base+0x1aec>
   17f40:	ldr	r3, [pc, #-1220]	; 17a84 <__flatcc_fb_codegen_c@@Base+0x1680>
   17f44:	add	r3, pc, r3
   17f48:	str	r3, [sp, #68]	; 0x44
   17f4c:	ldr	r3, [pc, #-1228]	; 17a88 <__flatcc_fb_codegen_c@@Base+0x1684>
   17f50:	add	r3, pc, r3
   17f54:	str	r3, [sp, #76]	; 0x4c
   17f58:	ldr	r3, [pc, #-1236]	; 17a8c <__flatcc_fb_codegen_c@@Base+0x1688>
   17f5c:	ldr	r2, [pc, #-1236]	; 17a90 <__flatcc_fb_codegen_c@@Base+0x168c>
   17f60:	add	r3, pc, r3
   17f64:	add	r2, pc, r2
   17f68:	str	r3, [sp, #64]	; 0x40
   17f6c:	b	17ef0 <__flatcc_fb_codegen_c@@Base+0x1aec>
   17f70:	ldr	r3, [pc, #-1252]	; 17a94 <__flatcc_fb_codegen_c@@Base+0x1690>
   17f74:	str	r5, [sp, #64]	; 0x40
   17f78:	ldr	r2, [pc, #-1256]	; 17a98 <__flatcc_fb_codegen_c@@Base+0x1694>
   17f7c:	add	r3, pc, r3
   17f80:	str	r3, [sp, #68]	; 0x44
   17f84:	add	r2, pc, r2
   17f88:	ldr	r3, [pc, #-1268]	; 17a9c <__flatcc_fb_codegen_c@@Base+0x1698>
   17f8c:	add	r3, pc, r3
   17f90:	str	r3, [sp, #76]	; 0x4c
   17f94:	b	17ef0 <__flatcc_fb_codegen_c@@Base+0x1aec>
   17f98:	ldr	r3, [pc, #-1280]	; 17aa0 <__flatcc_fb_codegen_c@@Base+0x169c>
   17f9c:	ldr	r2, [pc, #-1280]	; 17aa4 <__flatcc_fb_codegen_c@@Base+0x16a0>
   17fa0:	add	r3, pc, r3
   17fa4:	str	r3, [sp, #68]	; 0x44
   17fa8:	add	r2, pc, r2
   17fac:	ldr	r3, [pc, #-1292]	; 17aa8 <__flatcc_fb_codegen_c@@Base+0x16a4>
   17fb0:	add	r3, pc, r3
   17fb4:	str	r3, [sp, #64]	; 0x40
   17fb8:	ldr	r3, [pc, #-1300]	; 17aac <__flatcc_fb_codegen_c@@Base+0x16a8>
   17fbc:	add	r3, pc, r3
   17fc0:	str	r3, [sp, #76]	; 0x4c
   17fc4:	b	17ef0 <__flatcc_fb_codegen_c@@Base+0x1aec>
   17fc8:	ldr	r2, [pc, #-1312]	; 17ab0 <__flatcc_fb_codegen_c@@Base+0x16ac>
   17fcc:	add	r2, pc, r2
   17fd0:	b	17db8 <__flatcc_fb_codegen_c@@Base+0x19b4>
   17fd4:	ldr	r2, [pc, #-1320]	; 17ab4 <__flatcc_fb_codegen_c@@Base+0x16b0>
   17fd8:	add	r2, pc, r2
   17fdc:	b	17db8 <__flatcc_fb_codegen_c@@Base+0x19b4>
   17fe0:	ldr	r2, [pc, #-1328]	; 17ab8 <__flatcc_fb_codegen_c@@Base+0x16b4>
   17fe4:	add	r2, pc, r2
   17fe8:	b	17db8 <__flatcc_fb_codegen_c@@Base+0x19b4>
   17fec:	ldr	r2, [pc, #-1336]	; 17abc <__flatcc_fb_codegen_c@@Base+0x16b8>
   17ff0:	add	r2, pc, r2
   17ff4:	b	17db8 <__flatcc_fb_codegen_c@@Base+0x19b4>
   17ff8:	ldr	r2, [pc, #-1344]	; 17ac0 <__flatcc_fb_codegen_c@@Base+0x16bc>
   17ffc:	add	r2, pc, r2
   18000:	b	17db8 <__flatcc_fb_codegen_c@@Base+0x19b4>
   18004:	ldr	r2, [pc, #-1352]	; 17ac4 <__flatcc_fb_codegen_c@@Base+0x16c0>
   18008:	add	r2, pc, r2
   1800c:	b	17db8 <__flatcc_fb_codegen_c@@Base+0x19b4>
   18010:	ldr	r2, [pc, #-1360]	; 17ac8 <__flatcc_fb_codegen_c@@Base+0x16c4>
   18014:	add	r2, pc, r2
   18018:	b	178f4 <__flatcc_fb_codegen_c@@Base+0x14f0>
   1801c:	ldr	r2, [pc, #-1368]	; 17acc <__flatcc_fb_codegen_c@@Base+0x16c8>
   18020:	add	r2, pc, r2
   18024:	b	178f4 <__flatcc_fb_codegen_c@@Base+0x14f0>
   18028:	ldr	r2, [pc, #-1376]	; 17ad0 <__flatcc_fb_codegen_c@@Base+0x16cc>
   1802c:	add	r2, pc, r2
   18030:	b	178f4 <__flatcc_fb_codegen_c@@Base+0x14f0>
   18034:	ldr	r2, [pc, #-1384]	; 17ad4 <__flatcc_fb_codegen_c@@Base+0x16d0>
   18038:	add	r2, pc, r2
   1803c:	b	178f4 <__flatcc_fb_codegen_c@@Base+0x14f0>
   18040:	ldr	r2, [pc, #-1392]	; 17ad8 <__flatcc_fb_codegen_c@@Base+0x16d4>
   18044:	add	r2, pc, r2
   18048:	b	178f4 <__flatcc_fb_codegen_c@@Base+0x14f0>
   1804c:	ldr	r2, [pc, #-1400]	; 17adc <__flatcc_fb_codegen_c@@Base+0x16d8>
   18050:	add	r2, pc, r2
   18054:	b	178f4 <__flatcc_fb_codegen_c@@Base+0x14f0>
   18058:	ldr	r2, [pc, #-1408]	; 17ae0 <__flatcc_fb_codegen_c@@Base+0x16dc>
   1805c:	add	r2, pc, r2
   18060:	b	178f4 <__flatcc_fb_codegen_c@@Base+0x14f0>
   18064:	ldr	r2, [pc, #-1416]	; 17ae4 <__flatcc_fb_codegen_c@@Base+0x16e0>
   18068:	add	r2, pc, r2
   1806c:	str	r2, [sp, #68]	; 0x44
   18070:	str	r2, [sp, #76]	; 0x4c
   18074:	cmp	r3, #8
   18078:	addls	pc, pc, r3, lsl #2
   1807c:	b	18890 <__flatcc_fb_codegen_c@@Base+0x248c>
   18080:	b	18968 <__flatcc_fb_codegen_c@@Base+0x2564>
   18084:	b	180ec <__flatcc_fb_codegen_c@@Base+0x1ce8>
   18088:	b	18494 <__flatcc_fb_codegen_c@@Base+0x2090>
   1808c:	b	180d4 <__flatcc_fb_codegen_c@@Base+0x1cd0>
   18090:	b	18890 <__flatcc_fb_codegen_c@@Base+0x248c>
   18094:	b	17edc <__flatcc_fb_codegen_c@@Base+0x1ad8>
   18098:	b	17f28 <__flatcc_fb_codegen_c@@Base+0x1b24>
   1809c:	b	17f58 <__flatcc_fb_codegen_c@@Base+0x1b54>
   180a0:	b	180a4 <__flatcc_fb_codegen_c@@Base+0x1ca0>
   180a4:	ldr	r3, [pc, #-1476]	; 17ae8 <__flatcc_fb_codegen_c@@Base+0x16e4>
   180a8:	ldr	r2, [pc, #-1476]	; 17aec <__flatcc_fb_codegen_c@@Base+0x16e8>
   180ac:	add	r3, pc, r3
   180b0:	add	r2, pc, r2
   180b4:	str	r3, [sp, #64]	; 0x40
   180b8:	b	17ef0 <__flatcc_fb_codegen_c@@Base+0x1aec>
   180bc:	ldr	r3, [pc, #-1492]	; 17af0 <__flatcc_fb_codegen_c@@Base+0x16ec>
   180c0:	add	r3, pc, r3
   180c4:	str	r3, [sp, #68]	; 0x44
   180c8:	ldr	r3, [pc, #-1500]	; 17af4 <__flatcc_fb_codegen_c@@Base+0x16f0>
   180cc:	add	r3, pc, r3
   180d0:	str	r3, [sp, #76]	; 0x4c
   180d4:	ldr	r3, [pc, #-1508]	; 17af8 <__flatcc_fb_codegen_c@@Base+0x16f4>
   180d8:	ldr	r2, [pc, #-1508]	; 17afc <__flatcc_fb_codegen_c@@Base+0x16f8>
   180dc:	add	r3, pc, r3
   180e0:	add	r2, pc, r2
   180e4:	str	r3, [sp, #64]	; 0x40
   180e8:	b	17ef0 <__flatcc_fb_codegen_c@@Base+0x1aec>
   180ec:	ldr	r3, [pc, #-1524]	; 17b00 <__flatcc_fb_codegen_c@@Base+0x16fc>
   180f0:	ldr	r2, [pc, #-1524]	; 17b04 <__flatcc_fb_codegen_c@@Base+0x1700>
   180f4:	add	r3, pc, r3
   180f8:	add	r2, pc, r2
   180fc:	str	r3, [sp, #64]	; 0x40
   18100:	b	17ef0 <__flatcc_fb_codegen_c@@Base+0x1aec>
   18104:	ldr	r2, [pc, #-1540]	; 17b08 <__flatcc_fb_codegen_c@@Base+0x1704>
   18108:	ldr	r1, [pc, #-1540]	; 17b0c <__flatcc_fb_codegen_c@@Base+0x1708>
   1810c:	add	r2, pc, r2
   18110:	add	r1, pc, r1
   18114:	str	r1, [sp, #64]	; 0x40
   18118:	str	r2, [sp, #68]	; 0x44
   1811c:	str	r2, [sp, #76]	; 0x4c
   18120:	b	172a4 <__flatcc_fb_codegen_c@@Base+0xea0>
   18124:	ldr	r2, [pc, #-1564]	; 17b10 <__flatcc_fb_codegen_c@@Base+0x170c>
   18128:	ldr	r1, [pc, #-1564]	; 17b14 <__flatcc_fb_codegen_c@@Base+0x1710>
   1812c:	add	r2, pc, r2
   18130:	add	r1, pc, r1
   18134:	str	r1, [sp, #64]	; 0x40
   18138:	str	r2, [sp, #68]	; 0x44
   1813c:	str	r2, [sp, #76]	; 0x4c
   18140:	b	172f4 <__flatcc_fb_codegen_c@@Base+0xef0>
   18144:	ldr	r2, [pc, #-1588]	; 17b18 <__flatcc_fb_codegen_c@@Base+0x1714>
   18148:	add	r2, pc, r2
   1814c:	str	r2, [sp, #68]	; 0x44
   18150:	ldr	r2, [pc, #-1596]	; 17b1c <__flatcc_fb_codegen_c@@Base+0x1718>
   18154:	add	r2, pc, r2
   18158:	str	r2, [sp, #76]	; 0x4c
   1815c:	b	18074 <__flatcc_fb_codegen_c@@Base+0x1c70>
   18160:	ldr	r2, [pc, #-1608]	; 17b20 <__flatcc_fb_codegen_c@@Base+0x171c>
   18164:	add	r2, pc, r2
   18168:	str	r2, [sp, #68]	; 0x44
   1816c:	ldr	r2, [pc, #-1616]	; 17b24 <__flatcc_fb_codegen_c@@Base+0x1720>
   18170:	add	r2, pc, r2
   18174:	str	r2, [sp, #64]	; 0x40
   18178:	ldr	r2, [pc, #-1624]	; 17b28 <__flatcc_fb_codegen_c@@Base+0x1724>
   1817c:	add	r2, pc, r2
   18180:	str	r2, [sp, #76]	; 0x4c
   18184:	b	172a4 <__flatcc_fb_codegen_c@@Base+0xea0>
   18188:	ldr	r3, [pc, #-1636]	; 17b2c <__flatcc_fb_codegen_c@@Base+0x1728>
   1818c:	add	r3, pc, r3
   18190:	str	r3, [sp, #76]	; 0x4c
   18194:	ldr	r3, [pc, #-1644]	; 17b30 <__flatcc_fb_codegen_c@@Base+0x172c>
   18198:	add	r3, pc, r3
   1819c:	str	r3, [sp, #64]	; 0x40
   181a0:	ldr	r3, [pc, #-1652]	; 17b34 <__flatcc_fb_codegen_c@@Base+0x1730>
   181a4:	add	r3, pc, r3
   181a8:	str	r3, [sp, #68]	; 0x44
   181ac:	ldr	r2, [pc, #-1660]	; 17b38 <__flatcc_fb_codegen_c@@Base+0x1734>
   181b0:	add	r2, pc, r2
   181b4:	b	17db8 <__flatcc_fb_codegen_c@@Base+0x19b4>
   181b8:	ldr	r2, [pc, #-1668]	; 17b3c <__flatcc_fb_codegen_c@@Base+0x1738>
   181bc:	add	r2, pc, r2
   181c0:	str	r2, [sp, #68]	; 0x44
   181c4:	str	r2, [sp, #76]	; 0x4c
   181c8:	b	18074 <__flatcc_fb_codegen_c@@Base+0x1c70>
   181cc:	ldr	r2, [pc, #-1684]	; 17b40 <__flatcc_fb_codegen_c@@Base+0x173c>
   181d0:	ldr	r1, [pc, #-1684]	; 17b44 <__flatcc_fb_codegen_c@@Base+0x1740>
   181d4:	add	r2, pc, r2
   181d8:	add	r1, pc, r1
   181dc:	str	r1, [sp, #64]	; 0x40
   181e0:	str	r2, [sp, #68]	; 0x44
   181e4:	str	r2, [sp, #76]	; 0x4c
   181e8:	b	172a4 <__flatcc_fb_codegen_c@@Base+0xea0>
   181ec:	ldr	r2, [pc, #-1708]	; 17b48 <__flatcc_fb_codegen_c@@Base+0x1744>
   181f0:	ldr	r1, [pc, #-1708]	; 17b4c <__flatcc_fb_codegen_c@@Base+0x1748>
   181f4:	add	r2, pc, r2
   181f8:	add	r1, pc, r1
   181fc:	str	r1, [sp, #64]	; 0x40
   18200:	str	r2, [sp, #68]	; 0x44
   18204:	str	r2, [sp, #76]	; 0x4c
   18208:	b	172f4 <__flatcc_fb_codegen_c@@Base+0xef0>
   1820c:	ldr	r3, [pc, #-1732]	; 17b50 <__flatcc_fb_codegen_c@@Base+0x174c>
   18210:	ldr	r2, [pc, #-1732]	; 17b54 <__flatcc_fb_codegen_c@@Base+0x1750>
   18214:	add	r3, pc, r3
   18218:	add	r2, pc, r2
   1821c:	strd	r2, [sp, #64]	; 0x40
   18220:	str	r3, [sp, #76]	; 0x4c
   18224:	b	17340 <__flatcc_fb_codegen_c@@Base+0xf3c>
   18228:	ldr	r3, [pc, #-1752]	; 17b58 <__flatcc_fb_codegen_c@@Base+0x1754>
   1822c:	add	r3, pc, r3
   18230:	str	r3, [sp, #68]	; 0x44
   18234:	ldr	r3, [pc, #-1760]	; 17b5c <__flatcc_fb_codegen_c@@Base+0x1758>
   18238:	add	r3, pc, r3
   1823c:	str	r3, [sp, #64]	; 0x40
   18240:	ldr	r3, [pc, #-1768]	; 17b60 <__flatcc_fb_codegen_c@@Base+0x175c>
   18244:	add	r3, pc, r3
   18248:	str	r3, [sp, #76]	; 0x4c
   1824c:	b	17340 <__flatcc_fb_codegen_c@@Base+0xf3c>
   18250:	vldr	d7, [r4, #48]	; 0x30
   18254:	add	r3, sp, #92	; 0x5c
   18258:	mov	r0, r3
   1825c:	ldr	r1, [pc, #-1792]	; 17b64 <__flatcc_fb_codegen_c@@Base+0x1760>
   18260:	str	r3, [sp, #72]	; 0x48
   18264:	vcvt.f32.f64	s14, d7
   18268:	add	r1, pc, r1
   1826c:	vcvt.f64.f32	d7, s14
   18270:	vmov	r2, r3, d7
   18274:	bl	140d0 <sprintf@plt>
   18278:	b	17750 <__flatcc_fb_codegen_c@@Base+0x134c>
   1827c:	ldr	r2, [pc, #-1820]	; 17b68 <__flatcc_fb_codegen_c@@Base+0x1764>
   18280:	add	r2, pc, r2
   18284:	str	r2, [sp, #68]	; 0x44
   18288:	ldr	r2, [pc, #-1828]	; 17b6c <__flatcc_fb_codegen_c@@Base+0x1768>
   1828c:	add	r2, pc, r2
   18290:	str	r2, [sp, #64]	; 0x40
   18294:	ldr	r2, [pc, #-1836]	; 17b70 <__flatcc_fb_codegen_c@@Base+0x176c>
   18298:	add	r2, pc, r2
   1829c:	str	r2, [sp, #76]	; 0x4c
   182a0:	b	172a4 <__flatcc_fb_codegen_c@@Base+0xea0>
   182a4:	ldr	r2, [pc, #-1848]	; 17b74 <__flatcc_fb_codegen_c@@Base+0x1770>
   182a8:	add	r2, pc, r2
   182ac:	str	r2, [sp, #68]	; 0x44
   182b0:	ldr	r2, [pc, #-1856]	; 17b78 <__flatcc_fb_codegen_c@@Base+0x1774>
   182b4:	add	r2, pc, r2
   182b8:	str	r2, [sp, #64]	; 0x40
   182bc:	ldr	r2, [pc, #-1864]	; 17b7c <__flatcc_fb_codegen_c@@Base+0x1778>
   182c0:	add	r2, pc, r2
   182c4:	str	r2, [sp, #76]	; 0x4c
   182c8:	b	172f4 <__flatcc_fb_codegen_c@@Base+0xef0>
   182cc:	ldr	r3, [pc, #-1876]	; 17b80 <__flatcc_fb_codegen_c@@Base+0x177c>
   182d0:	add	r3, pc, r3
   182d4:	str	r3, [sp, #68]	; 0x44
   182d8:	ldr	r3, [pc, #-1884]	; 17b84 <__flatcc_fb_codegen_c@@Base+0x1780>
   182dc:	add	r3, pc, r3
   182e0:	str	r3, [sp, #76]	; 0x4c
   182e4:	cmp	r2, #11
   182e8:	bne	185c8 <__flatcc_fb_codegen_c@@Base+0x21c4>
   182ec:	vldr	d7, [r4, #48]	; 0x30
   182f0:	add	r3, sp, #92	; 0x5c
   182f4:	mov	r0, r3
   182f8:	str	r3, [sp, #72]	; 0x48
   182fc:	ldr	r3, [pc, #-1916]	; 17b88 <__flatcc_fb_codegen_c@@Base+0x1784>
   18300:	ldr	r1, [pc, #-1916]	; 17b8c <__flatcc_fb_codegen_c@@Base+0x1788>
   18304:	vcvt.f32.f64	s14, d7
   18308:	add	r3, pc, r3
   1830c:	add	r1, pc, r1
   18310:	str	r3, [sp, #64]	; 0x40
   18314:	vcvt.f64.f32	d7, s14
   18318:	vmov	r2, r3, d7
   1831c:	bl	140d0 <sprintf@plt>
   18320:	b	1735c <__flatcc_fb_codegen_c@@Base+0xf58>
   18324:	ldr	r2, [pc, #-1948]	; 17b90 <__flatcc_fb_codegen_c@@Base+0x178c>
   18328:	add	r2, pc, r2
   1832c:	str	r2, [sp, #68]	; 0x44
   18330:	ldr	r2, [pc, #-1956]	; 17b94 <__flatcc_fb_codegen_c@@Base+0x1790>
   18334:	add	r2, pc, r2
   18338:	str	r2, [sp, #64]	; 0x40
   1833c:	ldr	r2, [pc, #-1964]	; 17b98 <__flatcc_fb_codegen_c@@Base+0x1794>
   18340:	add	r2, pc, r2
   18344:	str	r2, [sp, #76]	; 0x4c
   18348:	b	172a4 <__flatcc_fb_codegen_c@@Base+0xea0>
   1834c:	ldr	r2, [pc, #-1976]	; 17b9c <__flatcc_fb_codegen_c@@Base+0x1798>
   18350:	add	r2, pc, r2
   18354:	str	r2, [sp, #68]	; 0x44
   18358:	ldr	r2, [pc, #-1984]	; 17ba0 <__flatcc_fb_codegen_c@@Base+0x179c>
   1835c:	add	r2, pc, r2
   18360:	str	r2, [sp, #64]	; 0x40
   18364:	ldr	r2, [pc, #-1992]	; 17ba4 <__flatcc_fb_codegen_c@@Base+0x17a0>
   18368:	add	r2, pc, r2
   1836c:	str	r2, [sp, #76]	; 0x4c
   18370:	b	172f4 <__flatcc_fb_codegen_c@@Base+0xef0>
   18374:	ldr	r3, [pc, #-2004]	; 17ba8 <__flatcc_fb_codegen_c@@Base+0x17a4>
   18378:	add	r3, pc, r3
   1837c:	str	r3, [sp, #68]	; 0x44
   18380:	ldr	r3, [pc, #-2012]	; 17bac <__flatcc_fb_codegen_c@@Base+0x17a8>
   18384:	add	r3, pc, r3
   18388:	str	r3, [sp, #76]	; 0x4c
   1838c:	b	182e4 <__flatcc_fb_codegen_c@@Base+0x1ee0>
   18390:	ldr	r2, [pc, #-2024]	; 17bb0 <__flatcc_fb_codegen_c@@Base+0x17ac>
   18394:	add	r2, pc, r2
   18398:	str	r2, [sp, #68]	; 0x44
   1839c:	ldr	r2, [pc, #-2032]	; 17bb4 <__flatcc_fb_codegen_c@@Base+0x17b0>
   183a0:	add	r2, pc, r2
   183a4:	str	r2, [sp, #64]	; 0x40
   183a8:	ldr	r2, [pc, #-2040]	; 17bb8 <__flatcc_fb_codegen_c@@Base+0x17b4>
   183ac:	add	r2, pc, r2
   183b0:	str	r2, [sp, #76]	; 0x4c
   183b4:	b	172a4 <__flatcc_fb_codegen_c@@Base+0xea0>
   183b8:	ldr	r2, [pc, #-2052]	; 17bbc <__flatcc_fb_codegen_c@@Base+0x17b8>
   183bc:	add	r2, pc, r2
   183c0:	str	r2, [sp, #68]	; 0x44
   183c4:	ldr	r2, [pc, #-2060]	; 17bc0 <__flatcc_fb_codegen_c@@Base+0x17bc>
   183c8:	add	r2, pc, r2
   183cc:	str	r2, [sp, #64]	; 0x40
   183d0:	ldr	r2, [pc, #-2068]	; 17bc4 <__flatcc_fb_codegen_c@@Base+0x17c0>
   183d4:	add	r2, pc, r2
   183d8:	str	r2, [sp, #76]	; 0x4c
   183dc:	b	172a4 <__flatcc_fb_codegen_c@@Base+0xea0>
   183e0:	ldr	r2, [pc, #-2080]	; 17bc8 <__flatcc_fb_codegen_c@@Base+0x17c4>
   183e4:	add	r2, pc, r2
   183e8:	str	r2, [sp, #68]	; 0x44
   183ec:	ldr	r2, [pc, #-2088]	; 17bcc <__flatcc_fb_codegen_c@@Base+0x17c8>
   183f0:	add	r2, pc, r2
   183f4:	str	r2, [sp, #64]	; 0x40
   183f8:	ldr	r2, [pc, #-2096]	; 17bd0 <__flatcc_fb_codegen_c@@Base+0x17cc>
   183fc:	add	r2, pc, r2
   18400:	str	r2, [sp, #76]	; 0x4c
   18404:	b	172f4 <__flatcc_fb_codegen_c@@Base+0xef0>
   18408:	ldr	r3, [pc, #-2108]	; 17bd4 <__flatcc_fb_codegen_c@@Base+0x17d0>
   1840c:	add	r3, pc, r3
   18410:	str	r3, [sp, #68]	; 0x44
   18414:	ldr	r3, [pc, #-2116]	; 17bd8 <__flatcc_fb_codegen_c@@Base+0x17d4>
   18418:	add	r3, pc, r3
   1841c:	str	r3, [sp, #76]	; 0x4c
   18420:	b	182e4 <__flatcc_fb_codegen_c@@Base+0x1ee0>
   18424:	ldr	r2, [pc, #-2128]	; 17bdc <__flatcc_fb_codegen_c@@Base+0x17d8>
   18428:	add	r2, pc, r2
   1842c:	str	r2, [sp, #68]	; 0x44
   18430:	ldr	r2, [pc, #-2136]	; 17be0 <__flatcc_fb_codegen_c@@Base+0x17dc>
   18434:	add	r2, pc, r2
   18438:	str	r2, [sp, #64]	; 0x40
   1843c:	ldr	r2, [pc, #-2144]	; 17be4 <__flatcc_fb_codegen_c@@Base+0x17e0>
   18440:	add	r2, pc, r2
   18444:	str	r2, [sp, #76]	; 0x4c
   18448:	b	172f4 <__flatcc_fb_codegen_c@@Base+0xef0>
   1844c:	ldr	r3, [pc, #-2156]	; 17be8 <__flatcc_fb_codegen_c@@Base+0x17e4>
   18450:	add	r3, pc, r3
   18454:	str	r3, [sp, #68]	; 0x44
   18458:	ldr	r3, [pc, #-2164]	; 17bec <__flatcc_fb_codegen_c@@Base+0x17e8>
   1845c:	add	r3, pc, r3
   18460:	str	r3, [sp, #76]	; 0x4c
   18464:	b	182e4 <__flatcc_fb_codegen_c@@Base+0x1ee0>
   18468:	ldr	r3, [pc, #-2176]	; 17bf0 <__flatcc_fb_codegen_c@@Base+0x17ec>
   1846c:	add	r3, pc, r3
   18470:	str	r3, [sp, #68]	; 0x44
   18474:	str	r3, [sp, #76]	; 0x4c
   18478:	b	182ec <__flatcc_fb_codegen_c@@Base+0x1ee8>
   1847c:	ldr	r3, [pc, #-2192]	; 17bf4 <__flatcc_fb_codegen_c@@Base+0x17f0>
   18480:	add	r3, pc, r3
   18484:	str	r3, [sp, #68]	; 0x44
   18488:	ldr	r3, [pc, #-2200]	; 17bf8 <__flatcc_fb_codegen_c@@Base+0x17f4>
   1848c:	add	r3, pc, r3
   18490:	str	r3, [sp, #76]	; 0x4c
   18494:	ldr	r3, [pc, #-2208]	; 17bfc <__flatcc_fb_codegen_c@@Base+0x17f8>
   18498:	ldr	r2, [pc, #-2208]	; 17c00 <__flatcc_fb_codegen_c@@Base+0x17fc>
   1849c:	add	r3, pc, r3
   184a0:	add	r2, pc, r2
   184a4:	str	r3, [sp, #64]	; 0x40
   184a8:	b	17ef0 <__flatcc_fb_codegen_c@@Base+0x1aec>
   184ac:	ldr	r2, [pc, #-2224]	; 17c04 <__flatcc_fb_codegen_c@@Base+0x1800>
   184b0:	add	r2, pc, r2
   184b4:	ldr	r1, [pc, #-2228]	; 17c08 <__flatcc_fb_codegen_c@@Base+0x1804>
   184b8:	add	r3, sp, #92	; 0x5c
   184bc:	mov	r0, r3
   184c0:	ldrd	r6, [r4, #48]	; 0x30
   184c4:	add	r1, pc, r1
   184c8:	strd	r6, [sp]
   184cc:	str	r3, [sp, #72]	; 0x48
   184d0:	bl	140d0 <sprintf@plt>
   184d4:	b	17750 <__flatcc_fb_codegen_c@@Base+0x134c>
   184d8:	ldr	r2, [pc, #-2260]	; 17c0c <__flatcc_fb_codegen_c@@Base+0x1808>
   184dc:	add	r2, pc, r2
   184e0:	ldr	r1, [pc, #-2264]	; 17c10 <__flatcc_fb_codegen_c@@Base+0x180c>
   184e4:	add	r3, sp, #92	; 0x5c
   184e8:	mov	r0, r3
   184ec:	str	r3, [sp, #72]	; 0x48
   184f0:	ldrb	r3, [r4, #48]	; 0x30
   184f4:	add	r1, pc, r1
   184f8:	bl	140d0 <sprintf@plt>
   184fc:	b	17750 <__flatcc_fb_codegen_c@@Base+0x134c>
   18500:	ldr	r2, [pc, #-2292]	; 17c14 <__flatcc_fb_codegen_c@@Base+0x1810>
   18504:	add	r2, pc, r2
   18508:	ldr	r1, [pc, #-2296]	; 17c18 <__flatcc_fb_codegen_c@@Base+0x1814>
   1850c:	add	r3, sp, #92	; 0x5c
   18510:	mov	r0, r3
   18514:	ldrd	r6, [r4, #48]	; 0x30
   18518:	add	r1, pc, r1
   1851c:	strd	r6, [sp]
   18520:	str	r3, [sp, #72]	; 0x48
   18524:	bl	140d0 <sprintf@plt>
   18528:	b	17750 <__flatcc_fb_codegen_c@@Base+0x134c>
   1852c:	ldr	r0, [pc, #-2328]	; 17c1c <__flatcc_fb_codegen_c@@Base+0x1818>
   18530:	mov	r2, #66	; 0x42
   18534:	mov	r1, #1
   18538:	add	r0, pc, r0
   1853c:	bl	13fec <fwrite@plt>
   18540:	ldr	r0, [pc, #-2344]	; 17c20 <__flatcc_fb_codegen_c@@Base+0x181c>
   18544:	mov	r2, #61	; 0x3d
   18548:	mov	r1, #1
   1854c:	ldr	r3, [r5, #204]	; 0xcc
   18550:	add	r0, pc, r0
   18554:	bl	13fec <fwrite@plt>
   18558:	ldr	r0, [sp, #44]	; 0x2c
   1855c:	mov	r3, r9
   18560:	mov	r2, r5
   18564:	str	r8, [sp]
   18568:	ldr	r1, [pc, #-2380]	; 17c24 <__flatcc_fb_codegen_c@@Base+0x1820>
   1856c:	str	r0, [sp, #4]
   18570:	ldr	r0, [sp, #56]	; 0x38
   18574:	add	r1, pc, r1
   18578:	str	r0, [sp, #8]
   1857c:	ldr	r0, [r5, #204]	; 0xcc
   18580:	bl	14064 <fprintf@plt>
   18584:	ldr	r3, [r5, #212]	; 0xd4
   18588:	ldr	r3, [r3, #136]	; 0x88
   1858c:	cmp	r3, #0
   18590:	beq	1712c <__flatcc_fb_codegen_c@@Base+0xd28>
   18594:	ldr	r0, [sp, #44]	; 0x2c
   18598:	mov	r3, r9
   1859c:	mov	r2, r5
   185a0:	str	r8, [sp]
   185a4:	ldr	r1, [pc, #-2436]	; 17c28 <__flatcc_fb_codegen_c@@Base+0x1824>
   185a8:	str	r0, [sp, #4]
   185ac:	ldr	r0, [sp, #56]	; 0x38
   185b0:	add	r1, pc, r1
   185b4:	str	r0, [sp, #8]
   185b8:	str	r5, [sp, #12]
   185bc:	ldr	r0, [r5, #204]	; 0xcc
   185c0:	bl	14064 <fprintf@plt>
   185c4:	b	16ce4 <__flatcc_fb_codegen_c@@Base+0x8e0>
   185c8:	ldr	r3, [pc, #-2468]	; 17c2c <__flatcc_fb_codegen_c@@Base+0x1828>
   185cc:	add	r3, pc, r3
   185d0:	str	r3, [sp, #64]	; 0x40
   185d4:	b	17340 <__flatcc_fb_codegen_c@@Base+0xf3c>
   185d8:	ldrh	r1, [r4, #56]	; 0x38
   185dc:	sub	r1, r1, #3
   185e0:	cmp	r1, #3
   185e4:	addls	pc, pc, r1, lsl #2
   185e8:	b	18a98 <__flatcc_fb_codegen_c@@Base+0x2694>
   185ec:	b	18a7c <__flatcc_fb_codegen_c@@Base+0x2678>
   185f0:	b	18a54 <__flatcc_fb_codegen_c@@Base+0x2650>
   185f4:	b	18a2c <__flatcc_fb_codegen_c@@Base+0x2628>
   185f8:	b	180bc <__flatcc_fb_codegen_c@@Base+0x1cb8>
   185fc:	ldrh	r1, [r4, #56]	; 0x38
   18600:	sub	r1, r1, #3
   18604:	cmp	r1, #3
   18608:	addls	pc, pc, r1, lsl #2
   1860c:	b	18a98 <__flatcc_fb_codegen_c@@Base+0x2694>
   18610:	b	18a10 <__flatcc_fb_codegen_c@@Base+0x260c>
   18614:	b	189e8 <__flatcc_fb_codegen_c@@Base+0x25e4>
   18618:	b	189c0 <__flatcc_fb_codegen_c@@Base+0x25bc>
   1861c:	b	189a4 <__flatcc_fb_codegen_c@@Base+0x25a0>
   18620:	ldr	r2, [pc, #-2552]	; 17c30 <__flatcc_fb_codegen_c@@Base+0x182c>
   18624:	add	r2, pc, r2
   18628:	b	184b4 <__flatcc_fb_codegen_c@@Base+0x20b0>
   1862c:	ldr	r2, [pc, #-2560]	; 17c34 <__flatcc_fb_codegen_c@@Base+0x1830>
   18630:	add	r2, pc, r2
   18634:	b	184b4 <__flatcc_fb_codegen_c@@Base+0x20b0>
   18638:	ldr	r2, [pc, #-2568]	; 17c38 <__flatcc_fb_codegen_c@@Base+0x1834>
   1863c:	add	r2, pc, r2
   18640:	b	184b4 <__flatcc_fb_codegen_c@@Base+0x20b0>
   18644:	ldr	r2, [pc, #-2576]	; 17c3c <__flatcc_fb_codegen_c@@Base+0x1838>
   18648:	add	r2, pc, r2
   1864c:	b	184b4 <__flatcc_fb_codegen_c@@Base+0x20b0>
   18650:	ldr	r2, [pc, #-2584]	; 17c40 <__flatcc_fb_codegen_c@@Base+0x183c>
   18654:	add	r2, pc, r2
   18658:	b	184e0 <__flatcc_fb_codegen_c@@Base+0x20dc>
   1865c:	ldr	r2, [pc, #-2592]	; 17c44 <__flatcc_fb_codegen_c@@Base+0x1840>
   18660:	add	r2, pc, r2
   18664:	b	184e0 <__flatcc_fb_codegen_c@@Base+0x20dc>
   18668:	ldr	r2, [pc, #-2600]	; 17c48 <__flatcc_fb_codegen_c@@Base+0x1844>
   1866c:	add	r2, pc, r2
   18670:	b	184e0 <__flatcc_fb_codegen_c@@Base+0x20dc>
   18674:	ldr	r2, [pc, #-2608]	; 17c4c <__flatcc_fb_codegen_c@@Base+0x1848>
   18678:	add	r2, pc, r2
   1867c:	b	184e0 <__flatcc_fb_codegen_c@@Base+0x20dc>
   18680:	ldr	r2, [pc, #-2616]	; 17c50 <__flatcc_fb_codegen_c@@Base+0x184c>
   18684:	add	r2, pc, r2
   18688:	b	18508 <__flatcc_fb_codegen_c@@Base+0x2104>
   1868c:	ldr	r2, [pc, #-2624]	; 17c54 <__flatcc_fb_codegen_c@@Base+0x1850>
   18690:	add	r2, pc, r2
   18694:	b	18508 <__flatcc_fb_codegen_c@@Base+0x2104>
   18698:	ldr	r2, [pc, #-2632]	; 17c58 <__flatcc_fb_codegen_c@@Base+0x1854>
   1869c:	add	r2, pc, r2
   186a0:	b	18508 <__flatcc_fb_codegen_c@@Base+0x2104>
   186a4:	ldr	r2, [pc, #-2640]	; 17c5c <__flatcc_fb_codegen_c@@Base+0x1858>
   186a8:	add	r2, pc, r2
   186ac:	b	18508 <__flatcc_fb_codegen_c@@Base+0x2104>
   186b0:	ldr	r2, [pc, #-2648]	; 17c60 <__flatcc_fb_codegen_c@@Base+0x185c>
   186b4:	add	r2, pc, r2
   186b8:	b	184b4 <__flatcc_fb_codegen_c@@Base+0x20b0>
   186bc:	ldr	r2, [pc, #-2656]	; 17c64 <__flatcc_fb_codegen_c@@Base+0x1860>
   186c0:	add	r2, pc, r2
   186c4:	b	184b4 <__flatcc_fb_codegen_c@@Base+0x20b0>
   186c8:	ldr	r2, [pc, #-2664]	; 17c68 <__flatcc_fb_codegen_c@@Base+0x1864>
   186cc:	add	r2, pc, r2
   186d0:	b	184e0 <__flatcc_fb_codegen_c@@Base+0x20dc>
   186d4:	ldr	r2, [pc, #-2672]	; 17c6c <__flatcc_fb_codegen_c@@Base+0x1868>
   186d8:	add	r2, pc, r2
   186dc:	b	184e0 <__flatcc_fb_codegen_c@@Base+0x20dc>
   186e0:	ldr	r2, [pc, #-2680]	; 17c70 <__flatcc_fb_codegen_c@@Base+0x186c>
   186e4:	add	r2, pc, r2
   186e8:	b	184e0 <__flatcc_fb_codegen_c@@Base+0x20dc>
   186ec:	ldr	r2, [pc, #-2688]	; 17c74 <__flatcc_fb_codegen_c@@Base+0x1870>
   186f0:	add	r2, pc, r2
   186f4:	b	184b4 <__flatcc_fb_codegen_c@@Base+0x20b0>
   186f8:	ldr	r2, [pc, #-2696]	; 17c78 <__flatcc_fb_codegen_c@@Base+0x1874>
   186fc:	add	r2, pc, r2
   18700:	b	18508 <__flatcc_fb_codegen_c@@Base+0x2104>
   18704:	ldr	r2, [pc, #-2704]	; 17c7c <__flatcc_fb_codegen_c@@Base+0x1878>
   18708:	add	r2, pc, r2
   1870c:	b	18508 <__flatcc_fb_codegen_c@@Base+0x2104>
   18710:	ldr	r2, [pc, #-2712]	; 17c80 <__flatcc_fb_codegen_c@@Base+0x187c>
   18714:	add	r2, pc, r2
   18718:	b	18508 <__flatcc_fb_codegen_c@@Base+0x2104>
   1871c:	ldr	r2, [pc, #-2720]	; 17c84 <__flatcc_fb_codegen_c@@Base+0x1880>
   18720:	add	r2, pc, r2
   18724:	str	r2, [sp, #68]	; 0x44
   18728:	ldr	r2, [pc, #-2728]	; 17c88 <__flatcc_fb_codegen_c@@Base+0x1884>
   1872c:	add	r2, pc, r2
   18730:	str	r2, [sp, #64]	; 0x40
   18734:	ldr	r2, [pc, #-2736]	; 17c8c <__flatcc_fb_codegen_c@@Base+0x1888>
   18738:	add	r2, pc, r2
   1873c:	str	r2, [sp, #76]	; 0x4c
   18740:	b	172a4 <__flatcc_fb_codegen_c@@Base+0xea0>
   18744:	ldr	r2, [pc, #-2748]	; 17c90 <__flatcc_fb_codegen_c@@Base+0x188c>
   18748:	add	r2, pc, r2
   1874c:	str	r2, [sp, #68]	; 0x44
   18750:	ldr	r2, [pc, #-2756]	; 17c94 <__flatcc_fb_codegen_c@@Base+0x1890>
   18754:	add	r2, pc, r2
   18758:	str	r2, [sp, #64]	; 0x40
   1875c:	ldr	r2, [pc, #-2764]	; 17c98 <__flatcc_fb_codegen_c@@Base+0x1894>
   18760:	add	r2, pc, r2
   18764:	str	r2, [sp, #76]	; 0x4c
   18768:	b	172f4 <__flatcc_fb_codegen_c@@Base+0xef0>
   1876c:	ldr	r3, [pc, #-2776]	; 17c9c <__flatcc_fb_codegen_c@@Base+0x1898>
   18770:	add	r3, pc, r3
   18774:	str	r3, [sp, #68]	; 0x44
   18778:	ldr	r3, [pc, #-2784]	; 17ca0 <__flatcc_fb_codegen_c@@Base+0x189c>
   1877c:	add	r3, pc, r3
   18780:	str	r3, [sp, #76]	; 0x4c
   18784:	b	182e4 <__flatcc_fb_codegen_c@@Base+0x1ee0>
   18788:	ldr	r2, [pc, #-2552]	; 17d98 <__flatcc_fb_codegen_c@@Base+0x1994>
   1878c:	movw	r3, #1599	; 0x63f
   18790:	ldr	r1, [sp, #84]	; 0x54
   18794:	ldr	r0, [pc, #-2808]	; 17ca4 <__flatcc_fb_codegen_c@@Base+0x18a0>
   18798:	ldr	r4, [pc, #-2808]	; 17ca8 <__flatcc_fb_codegen_c@@Base+0x18a4>
   1879c:	ldr	ip, [r1, r2]
   187a0:	add	r0, pc, r0
   187a4:	ldr	r1, [pc, #-2816]	; 17cac <__flatcc_fb_codegen_c@@Base+0x18a8>
   187a8:	add	r4, pc, r4
   187ac:	str	r0, [sp]
   187b0:	mov	r2, r4
   187b4:	ldr	r0, [ip]
   187b8:	add	r1, pc, r1
   187bc:	bl	14064 <fprintf@plt>
   187c0:	ldr	r3, [pc, #-2840]	; 17cb0 <__flatcc_fb_codegen_c@@Base+0x18ac>
   187c4:	mov	r1, r4
   187c8:	movw	r2, #1599	; 0x63f
   187cc:	ldr	r0, [pc, #-2848]	; 17cb4 <__flatcc_fb_codegen_c@@Base+0x18b0>
   187d0:	add	r3, pc, r3
   187d4:	add	r3, r3, #72	; 0x48
   187d8:	add	r0, pc, r0
   187dc:	bl	14118 <__assert_fail@plt>
   187e0:	ldr	r2, [pc, #-2640]	; 17d98 <__flatcc_fb_codegen_c@@Base+0x1994>
   187e4:	mov	r3, #1568	; 0x620
   187e8:	ldr	r1, [sp, #84]	; 0x54
   187ec:	ldr	r0, [pc, #-2876]	; 17cb8 <__flatcc_fb_codegen_c@@Base+0x18b4>
   187f0:	ldr	r4, [pc, #-2876]	; 17cbc <__flatcc_fb_codegen_c@@Base+0x18b8>
   187f4:	ldr	ip, [r1, r2]
   187f8:	add	r0, pc, r0
   187fc:	ldr	r1, [pc, #-2884]	; 17cc0 <__flatcc_fb_codegen_c@@Base+0x18bc>
   18800:	add	r4, pc, r4
   18804:	str	r0, [sp]
   18808:	mov	r2, r4
   1880c:	ldr	r0, [ip]
   18810:	add	r1, pc, r1
   18814:	bl	14064 <fprintf@plt>
   18818:	ldr	r3, [pc, #-2908]	; 17cc4 <__flatcc_fb_codegen_c@@Base+0x18c0>
   1881c:	mov	r1, r4
   18820:	mov	r2, #1568	; 0x620
   18824:	ldr	r0, [pc, #-2916]	; 17cc8 <__flatcc_fb_codegen_c@@Base+0x18c4>
   18828:	add	r3, pc, r3
   1882c:	add	r3, r3, #72	; 0x48
   18830:	add	r0, pc, r0
   18834:	bl	14118 <__assert_fail@plt>
   18838:	ldr	r2, [pc, #-2728]	; 17d98 <__flatcc_fb_codegen_c@@Base+0x1994>
   1883c:	mov	r3, #1584	; 0x630
   18840:	ldr	r1, [sp, #84]	; 0x54
   18844:	ldr	r0, [pc, #-2944]	; 17ccc <__flatcc_fb_codegen_c@@Base+0x18c8>
   18848:	ldr	r4, [pc, #-2944]	; 17cd0 <__flatcc_fb_codegen_c@@Base+0x18cc>
   1884c:	ldr	ip, [r1, r2]
   18850:	add	r0, pc, r0
   18854:	ldr	r1, [pc, #-2952]	; 17cd4 <__flatcc_fb_codegen_c@@Base+0x18d0>
   18858:	add	r4, pc, r4
   1885c:	str	r0, [sp]
   18860:	mov	r2, r4
   18864:	ldr	r0, [ip]
   18868:	add	r1, pc, r1
   1886c:	bl	14064 <fprintf@plt>
   18870:	ldr	r3, [pc, #-2976]	; 17cd8 <__flatcc_fb_codegen_c@@Base+0x18d4>
   18874:	mov	r1, r4
   18878:	mov	r2, #1584	; 0x630
   1887c:	ldr	r0, [pc, #-2984]	; 17cdc <__flatcc_fb_codegen_c@@Base+0x18d8>
   18880:	add	r3, pc, r3
   18884:	add	r3, r3, #72	; 0x48
   18888:	add	r0, pc, r0
   1888c:	bl	14118 <__assert_fail@plt>
   18890:	bl	168b0 <__flatcc_fb_codegen_c@@Base+0x4ac>
   18894:	ldr	r2, [pc, #-2820]	; 17d98 <__flatcc_fb_codegen_c@@Base+0x1994>
   18898:	mov	r3, #141	; 0x8d
   1889c:	ldr	r1, [sp, #84]	; 0x54
   188a0:	ldr	r0, [pc, #-3016]	; 17ce0 <__flatcc_fb_codegen_c@@Base+0x18dc>
   188a4:	ldr	r4, [pc, #-3016]	; 17ce4 <__flatcc_fb_codegen_c@@Base+0x18e0>
   188a8:	ldr	ip, [r1, r2]
   188ac:	add	r0, pc, r0
   188b0:	ldr	r1, [pc, #-3024]	; 17ce8 <__flatcc_fb_codegen_c@@Base+0x18e4>
   188b4:	add	r4, pc, r4
   188b8:	str	r0, [sp]
   188bc:	mov	r2, r4
   188c0:	ldr	r0, [ip]
   188c4:	add	r1, pc, r1
   188c8:	bl	14064 <fprintf@plt>
   188cc:	ldr	r3, [pc, #-3048]	; 17cec <__flatcc_fb_codegen_c@@Base+0x18e8>
   188d0:	mov	r1, r4
   188d4:	mov	r2, #141	; 0x8d
   188d8:	ldr	r0, [pc, #-3056]	; 17cf0 <__flatcc_fb_codegen_c@@Base+0x18ec>
   188dc:	add	r3, pc, r3
   188e0:	add	r3, r3, #20
   188e4:	add	r0, pc, r0
   188e8:	bl	14118 <__assert_fail@plt>
   188ec:	ldr	r3, [pc, #-3072]	; 17cf4 <__flatcc_fb_codegen_c@@Base+0x18f0>
   188f0:	movw	r2, #1343	; 0x53f
   188f4:	ldr	r1, [pc, #-3076]	; 17cf8 <__flatcc_fb_codegen_c@@Base+0x18f4>
   188f8:	ldr	r0, [pc, #-3076]	; 17cfc <__flatcc_fb_codegen_c@@Base+0x18f8>
   188fc:	add	r3, pc, r3
   18900:	add	r3, r3, #124	; 0x7c
   18904:	add	r1, pc, r1
   18908:	add	r0, pc, r0
   1890c:	bl	14118 <__assert_fail@plt>
   18910:	ldr	r2, [pc, #-2944]	; 17d98 <__flatcc_fb_codegen_c@@Base+0x1994>
   18914:	movw	r3, #1339	; 0x53b
   18918:	ldr	r1, [sp, #84]	; 0x54
   1891c:	ldr	r0, [pc, #-3108]	; 17d00 <__flatcc_fb_codegen_c@@Base+0x18fc>
   18920:	ldr	r4, [pc, #-3108]	; 17d04 <__flatcc_fb_codegen_c@@Base+0x1900>
   18924:	ldr	ip, [r1, r2]
   18928:	add	r0, pc, r0
   1892c:	ldr	r1, [pc, #-3116]	; 17d08 <__flatcc_fb_codegen_c@@Base+0x1904>
   18930:	add	r4, pc, r4
   18934:	str	r0, [sp]
   18938:	mov	r2, r4
   1893c:	ldr	r0, [ip]
   18940:	add	r1, pc, r1
   18944:	bl	14064 <fprintf@plt>
   18948:	ldr	r3, [pc, #-3140]	; 17d0c <__flatcc_fb_codegen_c@@Base+0x1908>
   1894c:	mov	r1, r4
   18950:	movw	r2, #1339	; 0x53b
   18954:	ldr	r0, [pc, #-3148]	; 17d10 <__flatcc_fb_codegen_c@@Base+0x190c>
   18958:	add	r3, pc, r3
   1895c:	add	r3, r3, #124	; 0x7c
   18960:	add	r0, pc, r0
   18964:	bl	14118 <__assert_fail@plt>
   18968:	ldr	r3, [pc, #-3164]	; 17d14 <__flatcc_fb_codegen_c@@Base+0x1910>
   1896c:	ldr	r2, [pc, #-3164]	; 17d18 <__flatcc_fb_codegen_c@@Base+0x1914>
   18970:	add	r3, pc, r3
   18974:	add	r2, pc, r2
   18978:	str	r3, [sp, #64]	; 0x40
   1897c:	b	17ef0 <__flatcc_fb_codegen_c@@Base+0x1aec>
   18980:	ldr	r3, [pc, #-3180]	; 17d1c <__flatcc_fb_codegen_c@@Base+0x1918>
   18984:	movw	r2, #1362	; 0x552
   18988:	ldr	r1, [pc, #-3184]	; 17d20 <__flatcc_fb_codegen_c@@Base+0x191c>
   1898c:	ldr	r0, [pc, #-3184]	; 17d24 <__flatcc_fb_codegen_c@@Base+0x1920>
   18990:	add	r3, pc, r3
   18994:	add	r3, r3, #72	; 0x48
   18998:	add	r1, pc, r1
   1899c:	add	r0, pc, r0
   189a0:	bl	14118 <__assert_fail@plt>
   189a4:	ldr	r2, [pc, #-3204]	; 17d28 <__flatcc_fb_codegen_c@@Base+0x1924>
   189a8:	add	r2, pc, r2
   189ac:	str	r2, [sp, #68]	; 0x44
   189b0:	ldr	r2, [pc, #-3212]	; 17d2c <__flatcc_fb_codegen_c@@Base+0x1928>
   189b4:	add	r2, pc, r2
   189b8:	str	r2, [sp, #76]	; 0x4c
   189bc:	b	18074 <__flatcc_fb_codegen_c@@Base+0x1c70>
   189c0:	ldr	r2, [pc, #-3224]	; 17d30 <__flatcc_fb_codegen_c@@Base+0x192c>
   189c4:	add	r2, pc, r2
   189c8:	str	r2, [sp, #68]	; 0x44
   189cc:	ldr	r2, [pc, #-3232]	; 17d34 <__flatcc_fb_codegen_c@@Base+0x1930>
   189d0:	add	r2, pc, r2
   189d4:	str	r2, [sp, #64]	; 0x40
   189d8:	ldr	r2, [pc, #-3240]	; 17d38 <__flatcc_fb_codegen_c@@Base+0x1934>
   189dc:	add	r2, pc, r2
   189e0:	str	r2, [sp, #76]	; 0x4c
   189e4:	b	172a4 <__flatcc_fb_codegen_c@@Base+0xea0>
   189e8:	ldr	r2, [pc, #-3252]	; 17d3c <__flatcc_fb_codegen_c@@Base+0x1938>
   189ec:	add	r2, pc, r2
   189f0:	str	r2, [sp, #68]	; 0x44
   189f4:	ldr	r2, [pc, #-3260]	; 17d40 <__flatcc_fb_codegen_c@@Base+0x193c>
   189f8:	add	r2, pc, r2
   189fc:	str	r2, [sp, #64]	; 0x40
   18a00:	ldr	r2, [pc, #-3268]	; 17d44 <__flatcc_fb_codegen_c@@Base+0x1940>
   18a04:	add	r2, pc, r2
   18a08:	str	r2, [sp, #76]	; 0x4c
   18a0c:	b	172f4 <__flatcc_fb_codegen_c@@Base+0xef0>
   18a10:	ldr	r3, [pc, #-3280]	; 17d48 <__flatcc_fb_codegen_c@@Base+0x1944>
   18a14:	add	r3, pc, r3
   18a18:	str	r3, [sp, #68]	; 0x44
   18a1c:	ldr	r3, [pc, #-3288]	; 17d4c <__flatcc_fb_codegen_c@@Base+0x1948>
   18a20:	add	r3, pc, r3
   18a24:	str	r3, [sp, #76]	; 0x4c
   18a28:	b	182e4 <__flatcc_fb_codegen_c@@Base+0x1ee0>
   18a2c:	ldr	r2, [pc, #-3300]	; 17d50 <__flatcc_fb_codegen_c@@Base+0x194c>
   18a30:	add	r2, pc, r2
   18a34:	str	r2, [sp, #68]	; 0x44
   18a38:	ldr	r2, [pc, #-3308]	; 17d54 <__flatcc_fb_codegen_c@@Base+0x1950>
   18a3c:	add	r2, pc, r2
   18a40:	str	r2, [sp, #64]	; 0x40
   18a44:	ldr	r2, [pc, #-3316]	; 17d58 <__flatcc_fb_codegen_c@@Base+0x1954>
   18a48:	add	r2, pc, r2
   18a4c:	str	r2, [sp, #76]	; 0x4c
   18a50:	b	172a4 <__flatcc_fb_codegen_c@@Base+0xea0>
   18a54:	ldr	r2, [pc, #-3328]	; 17d5c <__flatcc_fb_codegen_c@@Base+0x1958>
   18a58:	add	r2, pc, r2
   18a5c:	str	r2, [sp, #68]	; 0x44
   18a60:	ldr	r2, [pc, #-3336]	; 17d60 <__flatcc_fb_codegen_c@@Base+0x195c>
   18a64:	add	r2, pc, r2
   18a68:	str	r2, [sp, #64]	; 0x40
   18a6c:	ldr	r2, [pc, #-3344]	; 17d64 <__flatcc_fb_codegen_c@@Base+0x1960>
   18a70:	add	r2, pc, r2
   18a74:	str	r2, [sp, #76]	; 0x4c
   18a78:	b	172f4 <__flatcc_fb_codegen_c@@Base+0xef0>
   18a7c:	ldr	r3, [pc, #-3356]	; 17d68 <__flatcc_fb_codegen_c@@Base+0x1964>
   18a80:	add	r3, pc, r3
   18a84:	str	r3, [sp, #68]	; 0x44
   18a88:	ldr	r3, [pc, #-3364]	; 17d6c <__flatcc_fb_codegen_c@@Base+0x1968>
   18a8c:	add	r3, pc, r3
   18a90:	str	r3, [sp, #76]	; 0x4c
   18a94:	b	182e4 <__flatcc_fb_codegen_c@@Base+0x1ee0>
   18a98:	ldr	r2, [pc, #-3336]	; 17d98 <__flatcc_fb_codegen_c@@Base+0x1994>
   18a9c:	mov	r3, #260	; 0x104
   18aa0:	ldr	r1, [sp, #84]	; 0x54
   18aa4:	ldr	r0, [pc, #-3388]	; 17d70 <__flatcc_fb_codegen_c@@Base+0x196c>
   18aa8:	ldr	r4, [pc, #-3388]	; 17d74 <__flatcc_fb_codegen_c@@Base+0x1970>
   18aac:	ldr	ip, [r1, r2]
   18ab0:	add	r0, pc, r0
   18ab4:	ldr	r1, [pc, #-3396]	; 17d78 <__flatcc_fb_codegen_c@@Base+0x1974>
   18ab8:	add	r4, pc, r4
   18abc:	str	r0, [sp]
   18ac0:	mov	r2, r4
   18ac4:	ldr	r0, [ip]
   18ac8:	add	r1, pc, r1
   18acc:	bl	14064 <fprintf@plt>
   18ad0:	ldr	r3, [pc, #-3420]	; 17d7c <__flatcc_fb_codegen_c@@Base+0x1978>
   18ad4:	mov	r1, r4
   18ad8:	mov	r2, #260	; 0x104
   18adc:	ldr	r0, [pc, #-3428]	; 17d80 <__flatcc_fb_codegen_c@@Base+0x197c>
   18ae0:	add	r3, pc, r3
   18ae4:	add	r3, r3, #84	; 0x54
   18ae8:	add	r0, pc, r0
   18aec:	bl	14118 <__assert_fail@plt>
   18af0:	ldr	r2, [pc, #-3424]	; 17d98 <__flatcc_fb_codegen_c@@Base+0x1994>
   18af4:	mov	r3, #186	; 0xba
   18af8:	ldr	r1, [sp, #84]	; 0x54
   18afc:	ldr	r0, [pc, #-3456]	; 17d84 <__flatcc_fb_codegen_c@@Base+0x1980>
   18b00:	ldr	r4, [pc, #-3456]	; 17d88 <__flatcc_fb_codegen_c@@Base+0x1984>
   18b04:	ldr	ip, [r1, r2]
   18b08:	add	r0, pc, r0
   18b0c:	ldr	r1, [pc, #-3464]	; 17d8c <__flatcc_fb_codegen_c@@Base+0x1988>
   18b10:	add	r4, pc, r4
   18b14:	str	r0, [sp]
   18b18:	mov	r2, r4
   18b1c:	ldr	r0, [ip]
   18b20:	add	r1, pc, r1
   18b24:	bl	14064 <fprintf@plt>
   18b28:	ldr	r3, [pc, #-3488]	; 17d90 <__flatcc_fb_codegen_c@@Base+0x198c>
   18b2c:	mov	r1, r4
   18b30:	mov	r2, #186	; 0xba
   18b34:	ldr	r0, [pc, #-3496]	; 17d94 <__flatcc_fb_codegen_c@@Base+0x1990>
   18b38:	add	r3, pc, r3
   18b3c:	add	r3, r3, #100	; 0x64
   18b40:	add	r0, pc, r0
   18b44:	bl	14118 <__assert_fail@plt>
   18b48:	ldr	r2, [pc, #-3512]	; 17d98 <__flatcc_fb_codegen_c@@Base+0x1994>
   18b4c:	mov	r3, #260	; 0x104
   18b50:	ldr	r1, [sp, #84]	; 0x54
   18b54:	ldr	r0, [pc, #-3520]	; 17d9c <__flatcc_fb_codegen_c@@Base+0x1998>
   18b58:	ldr	r4, [pc, #-3520]	; 17da0 <__flatcc_fb_codegen_c@@Base+0x199c>
   18b5c:	ldr	ip, [r1, r2]
   18b60:	add	r0, pc, r0
   18b64:	ldr	r1, [pc, #-3528]	; 17da4 <__flatcc_fb_codegen_c@@Base+0x19a0>
   18b68:	add	r4, pc, r4
   18b6c:	str	r0, [sp]
   18b70:	mov	r2, r4
   18b74:	ldr	r0, [ip]
   18b78:	add	r1, pc, r1
   18b7c:	bl	14064 <fprintf@plt>
   18b80:	ldr	r3, [pc, #-3552]	; 17da8 <__flatcc_fb_codegen_c@@Base+0x19a4>
   18b84:	mov	r1, r4
   18b88:	mov	r2, #260	; 0x104
   18b8c:	ldr	r0, [pc, #-3560]	; 17dac <__flatcc_fb_codegen_c@@Base+0x19a8>
   18b90:	add	r3, pc, r3
   18b94:	add	r3, r3, #84	; 0x54
   18b98:	add	r0, pc, r0
   18b9c:	bl	14118 <__assert_fail@plt>
   18ba0:	ldr	r3, [pc, #2804]	; 1969c <__flatcc_fb_codegen_c@@Base+0x3298>
   18ba4:	mov	r2, #220	; 0xdc
   18ba8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   18bac:	mov	r4, r0
   18bb0:	strd	r6, [sp, #8]
   18bb4:	strd	r8, [sp, #16]
   18bb8:	mov	r8, r1
   18bbc:	mov	r1, #0
   18bc0:	strd	sl, [sp, #24]
   18bc4:	str	lr, [sp, #32]
   18bc8:	sub	sp, sp, #372	; 0x174
   18bcc:	add	r3, pc, r3
   18bd0:	add	r6, sp, #148	; 0x94
   18bd4:	mov	r0, r6
   18bd8:	str	r3, [sp, #44]	; 0x2c
   18bdc:	bl	1407c <memset@plt>
   18be0:	ldrh	r3, [r8, #8]
   18be4:	str	r3, [sp, #40]	; 0x28
   18be8:	sub	r3, r3, #3
   18bec:	cmp	r3, #1
   18bf0:	bhi	195a4 <__flatcc_fb_codegen_c@@Base+0x31a0>
   18bf4:	ldrh	r3, [r8, #48]	; 0x30
   18bf8:	cmp	r3, #8
   18bfc:	bne	195c8 <__flatcc_fb_codegen_c@@Base+0x31c4>
   18c00:	ldr	r3, [r8, #40]	; 0x28
   18c04:	cmp	r3, #5
   18c08:	beq	18c48 <__flatcc_fb_codegen_c@@Base+0x2844>
   18c0c:	sub	r3, r3, #1
   18c10:	cmp	r3, #10
   18c14:	addls	pc, pc, r3, lsl #2
   18c18:	b	195a0 <__flatcc_fb_codegen_c@@Base+0x319c>
   18c1c:	b	19448 <__flatcc_fb_codegen_c@@Base+0x3044>
   18c20:	b	19460 <__flatcc_fb_codegen_c@@Base+0x305c>
   18c24:	b	19478 <__flatcc_fb_codegen_c@@Base+0x3074>
   18c28:	b	19490 <__flatcc_fb_codegen_c@@Base+0x308c>
   18c2c:	b	195a0 <__flatcc_fb_codegen_c@@Base+0x319c>
   18c30:	b	194c0 <__flatcc_fb_codegen_c@@Base+0x30bc>
   18c34:	b	194d8 <__flatcc_fb_codegen_c@@Base+0x30d4>
   18c38:	b	194f0 <__flatcc_fb_codegen_c@@Base+0x30ec>
   18c3c:	b	19508 <__flatcc_fb_codegen_c@@Base+0x3104>
   18c40:	b	19430 <__flatcc_fb_codegen_c@@Base+0x302c>
   18c44:	b	194a8 <__flatcc_fb_codegen_c@@Base+0x30a4>
   18c48:	ldr	fp, [pc, #2640]	; 196a0 <__flatcc_fb_codegen_c@@Base+0x329c>
   18c4c:	str	r4, [sp, #16]
   18c50:	add	fp, pc, fp
   18c54:	ldr	r3, [sp, #40]	; 0x28
   18c58:	mov	r2, r6
   18c5c:	mov	r1, r8
   18c60:	ldr	r0, [r8, #12]
   18c64:	cmp	r3, #3
   18c68:	ldr	r3, [r8, #112]	; 0x70
   18c6c:	lsl	r3, r3, #3
   18c70:	str	r3, [sp, #20]
   18c74:	beq	19370 <__flatcc_fb_codegen_c@@Base+0x2f6c>
   18c78:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   18c7c:	ldr	r5, [r8, #32]
   18c80:	cmp	r5, #0
   18c84:	beq	192e4 <__flatcc_fb_codegen_c@@Base+0x2ee0>
   18c88:	ldr	r3, [pc, #2580]	; 196a4 <__flatcc_fb_codegen_c@@Base+0x32a0>
   18c8c:	add	r3, pc, r3
   18c90:	str	r3, [sp, #36]	; 0x24
   18c94:	ldr	sl, [pc, #2572]	; 196a8 <__flatcc_fb_codegen_c@@Base+0x32a4>
   18c98:	mov	ip, #1
   18c9c:	mov	r3, #0
   18ca0:	ldr	r9, [pc, #2564]	; 196ac <__flatcc_fb_codegen_c@@Base+0x32a8>
   18ca4:	ldr	r7, [pc, #2564]	; 196b0 <__flatcc_fb_codegen_c@@Base+0x32ac>
   18ca8:	add	sl, pc, sl
   18cac:	add	r9, pc, r9
   18cb0:	add	r7, pc, r7
   18cb4:	b	18cfc <__flatcc_fb_codegen_c@@Base+0x28f8>
   18cb8:	ldr	r1, [pc, #2548]	; 196b4 <__flatcc_fb_codegen_c@@Base+0x32b0>
   18cbc:	mov	r2, r7
   18cc0:	add	r1, pc, r1
   18cc4:	bl	14064 <fprintf@plt>
   18cc8:	ldr	r2, [r5, #4]
   18ccc:	ldr	r0, [r4, #204]	; 0xcc
   18cd0:	ldr	r1, [pc, #2528]	; 196b8 <__flatcc_fb_codegen_c@@Base+0x32b4>
   18cd4:	ldr	r3, [r2]
   18cd8:	ldr	r2, [r2, #4]
   18cdc:	add	r1, pc, r1
   18ce0:	bl	14064 <fprintf@plt>
   18ce4:	ldr	r3, [r5, #4]
   18ce8:	mov	ip, #0
   18cec:	ldr	r5, [r5]
   18cf0:	ldr	r3, [r3, #8]
   18cf4:	cmp	r5, ip
   18cf8:	beq	18d30 <__flatcc_fb_codegen_c@@Base+0x292c>
   18cfc:	ldr	r2, [r5, #4]
   18d00:	ldr	r0, [r4, #204]	; 0xcc
   18d04:	ldr	r1, [r2, #8]
   18d08:	cmp	r1, r3
   18d0c:	beq	18cd0 <__flatcc_fb_codegen_c@@Base+0x28cc>
   18d10:	cmp	ip, #0
   18d14:	bne	18cb8 <__flatcc_fb_codegen_c@@Base+0x28b4>
   18d18:	mov	r2, sl
   18d1c:	mov	r1, r9
   18d20:	bl	14064 <fprintf@plt>
   18d24:	ldr	r2, [r5, #4]
   18d28:	ldr	r0, [r4, #204]	; 0xcc
   18d2c:	b	18cd0 <__flatcc_fb_codegen_c@@Base+0x28cc>
   18d30:	ldr	r0, [pc, #2436]	; 196bc <__flatcc_fb_codegen_c@@Base+0x32b8>
   18d34:	mov	r2, #4
   18d38:	mov	r1, #1
   18d3c:	ldr	r3, [r4, #204]	; 0xcc
   18d40:	add	r0, pc, r0
   18d44:	bl	13fec <fwrite@plt>
   18d48:	ldr	r1, [pc, #2416]	; 196c0 <__flatcc_fb_codegen_c@@Base+0x32bc>
   18d4c:	mov	r3, fp
   18d50:	str	r6, [sp]
   18d54:	ldr	r2, [sp, #16]
   18d58:	ldr	r5, [sp, #36]	; 0x24
   18d5c:	add	r1, pc, r1
   18d60:	str	r5, [sp, #4]
   18d64:	ldr	r0, [r4, #204]	; 0xcc
   18d68:	bl	14064 <fprintf@plt>
   18d6c:	ldr	r1, [pc, #2384]	; 196c4 <__flatcc_fb_codegen_c@@Base+0x32c0>
   18d70:	mov	r3, r6
   18d74:	mov	r2, r4
   18d78:	str	r6, [sp]
   18d7c:	ldr	r0, [sp, #20]
   18d80:	str	r5, [sp, #4]
   18d84:	add	r1, pc, r1
   18d88:	str	r0, [sp, #8]
   18d8c:	ldr	r0, [r4, #204]	; 0xcc
   18d90:	bl	14064 <fprintf@plt>
   18d94:	ldr	r3, [sp, #40]	; 0x28
   18d98:	cmp	r3, #3
   18d9c:	bne	19338 <__flatcc_fb_codegen_c@@Base+0x2f34>
   18da0:	ldr	r5, [r8, #20]
   18da4:	cmp	r5, #0
   18da8:	beq	19390 <__flatcc_fb_codegen_c@@Base+0x2f8c>
   18dac:	ldr	r3, [pc, #2324]	; 196c8 <__flatcc_fb_codegen_c@@Base+0x32c4>
   18db0:	ldr	fp, [pc, #2324]	; 196cc <__flatcc_fb_codegen_c@@Base+0x32c8>
   18db4:	add	r3, pc, r3
   18db8:	str	r3, [sp, #24]
   18dbc:	add	fp, pc, fp
   18dc0:	ldr	r3, [pc, #2312]	; 196d0 <__flatcc_fb_codegen_c@@Base+0x32cc>
   18dc4:	str	fp, [sp, #20]
   18dc8:	add	r3, pc, r3
   18dcc:	str	r3, [sp, #28]
   18dd0:	ldr	r3, [pc, #2300]	; 196d4 <__flatcc_fb_codegen_c@@Base+0x32d0>
   18dd4:	add	r3, pc, r3
   18dd8:	str	r3, [sp, #32]
   18ddc:	ldr	r7, [r5, #68]	; 0x44
   18de0:	cmp	r7, #0
   18de4:	beq	18e88 <__flatcc_fb_codegen_c@@Base+0x2a84>
   18de8:	mov	r1, #1
   18dec:	mov	r3, #0
   18df0:	ldr	fp, [sp, #20]
   18df4:	b	18e38 <__flatcc_fb_codegen_c@@Base+0x2a34>
   18df8:	ldr	r1, [pc, #2264]	; 196d8 <__flatcc_fb_codegen_c@@Base+0x32d4>
   18dfc:	ldr	r2, [sp, #28]
   18e00:	add	r1, pc, r1
   18e04:	bl	14064 <fprintf@plt>
   18e08:	ldr	r2, [r7, #4]
   18e0c:	ldr	r0, [r4, #204]	; 0xcc
   18e10:	ldr	r3, [r2]
   18e14:	ldr	r2, [r2, #4]
   18e18:	ldr	r1, [sp, #32]
   18e1c:	bl	14064 <fprintf@plt>
   18e20:	ldr	r3, [r7, #4]
   18e24:	mov	r1, #0
   18e28:	ldr	r7, [r7]
   18e2c:	ldr	r3, [r3, #8]
   18e30:	cmp	r7, r1
   18e34:	beq	18e6c <__flatcc_fb_codegen_c@@Base+0x2a68>
   18e38:	ldr	r2, [r7, #4]
   18e3c:	ldr	r0, [r4, #204]	; 0xcc
   18e40:	ldr	ip, [r2, #8]
   18e44:	cmp	ip, r3
   18e48:	beq	18e10 <__flatcc_fb_codegen_c@@Base+0x2a0c>
   18e4c:	cmp	r1, #0
   18e50:	bne	18df8 <__flatcc_fb_codegen_c@@Base+0x29f4>
   18e54:	mov	r2, fp
   18e58:	ldr	r1, [sp, #24]
   18e5c:	bl	14064 <fprintf@plt>
   18e60:	ldr	r2, [r7, #4]
   18e64:	ldr	r0, [r4, #204]	; 0xcc
   18e68:	b	18e10 <__flatcc_fb_codegen_c@@Base+0x2a0c>
   18e6c:	ldr	r0, [pc, #2152]	; 196dc <__flatcc_fb_codegen_c@@Base+0x32d8>
   18e70:	mov	r2, #4
   18e74:	mov	r1, #1
   18e78:	str	fp, [sp, #20]
   18e7c:	ldr	r3, [r4, #204]	; 0xcc
   18e80:	add	r0, pc, r0
   18e84:	bl	13fec <fwrite@plt>
   18e88:	ldr	r1, [r5, #4]
   18e8c:	ldrh	r3, [r5, #56]	; 0x38
   18e90:	ldr	r2, [r8, #40]	; 0x28
   18e94:	ldr	r9, [r1]
   18e98:	sub	r3, r3, #3
   18e9c:	ldr	r1, [r1, #4]
   18ea0:	str	r1, [sp, #16]
   18ea4:	cmp	r3, #3
   18ea8:	addls	pc, pc, r3, lsl #2
   18eac:	b	19644 <__flatcc_fb_codegen_c@@Base+0x3240>
   18eb0:	b	18f5c <__flatcc_fb_codegen_c@@Base+0x2b58>
   18eb4:	b	18f28 <__flatcc_fb_codegen_c@@Base+0x2b24>
   18eb8:	b	18ef4 <__flatcc_fb_codegen_c@@Base+0x2af0>
   18ebc:	b	18ec0 <__flatcc_fb_codegen_c@@Base+0x2abc>
   18ec0:	sub	r2, r2, #1
   18ec4:	cmp	r2, #8
   18ec8:	addls	pc, pc, r2, lsl #2
   18ecc:	b	195ec <__flatcc_fb_codegen_c@@Base+0x31e8>
   18ed0:	b	191cc <__flatcc_fb_codegen_c@@Base+0x2dc8>
   18ed4:	b	191c0 <__flatcc_fb_codegen_c@@Base+0x2dbc>
   18ed8:	b	19208 <__flatcc_fb_codegen_c@@Base+0x2e04>
   18edc:	b	19174 <__flatcc_fb_codegen_c@@Base+0x2d70>
   18ee0:	b	19174 <__flatcc_fb_codegen_c@@Base+0x2d70>
   18ee4:	b	191f0 <__flatcc_fb_codegen_c@@Base+0x2dec>
   18ee8:	b	191e4 <__flatcc_fb_codegen_c@@Base+0x2de0>
   18eec:	b	191d8 <__flatcc_fb_codegen_c@@Base+0x2dd4>
   18ef0:	b	191fc <__flatcc_fb_codegen_c@@Base+0x2df8>
   18ef4:	sub	r2, r2, #1
   18ef8:	cmp	r2, #8
   18efc:	addls	pc, pc, r2, lsl #2
   18f00:	b	195ec <__flatcc_fb_codegen_c@@Base+0x31e8>
   18f04:	b	1922c <__flatcc_fb_codegen_c@@Base+0x2e28>
   18f08:	b	19220 <__flatcc_fb_codegen_c@@Base+0x2e1c>
   18f0c:	b	19214 <__flatcc_fb_codegen_c@@Base+0x2e10>
   18f10:	b	19198 <__flatcc_fb_codegen_c@@Base+0x2d94>
   18f14:	b	19198 <__flatcc_fb_codegen_c@@Base+0x2d94>
   18f18:	b	19250 <__flatcc_fb_codegen_c@@Base+0x2e4c>
   18f1c:	b	19244 <__flatcc_fb_codegen_c@@Base+0x2e40>
   18f20:	b	19238 <__flatcc_fb_codegen_c@@Base+0x2e34>
   18f24:	b	1925c <__flatcc_fb_codegen_c@@Base+0x2e58>
   18f28:	sub	r2, r2, #1
   18f2c:	cmp	r2, #8
   18f30:	addls	pc, pc, r2, lsl #2
   18f34:	b	195ec <__flatcc_fb_codegen_c@@Base+0x31e8>
   18f38:	b	192b0 <__flatcc_fb_codegen_c@@Base+0x2eac>
   18f3c:	b	192a4 <__flatcc_fb_codegen_c@@Base+0x2ea0>
   18f40:	b	19268 <__flatcc_fb_codegen_c@@Base+0x2e64>
   18f44:	b	1914c <__flatcc_fb_codegen_c@@Base+0x2d48>
   18f48:	b	1914c <__flatcc_fb_codegen_c@@Base+0x2d48>
   18f4c:	b	19274 <__flatcc_fb_codegen_c@@Base+0x2e70>
   18f50:	b	19298 <__flatcc_fb_codegen_c@@Base+0x2e94>
   18f54:	b	1928c <__flatcc_fb_codegen_c@@Base+0x2e88>
   18f58:	b	19280 <__flatcc_fb_codegen_c@@Base+0x2e7c>
   18f5c:	cmp	r2, #11
   18f60:	beq	192bc <__flatcc_fb_codegen_c@@Base+0x2eb8>
   18f64:	ldr	r1, [pc, #1908]	; 196e0 <__flatcc_fb_codegen_c@@Base+0x32dc>
   18f68:	add	r7, sp, #48	; 0x30
   18f6c:	mov	r0, r7
   18f70:	ldrd	r2, [r5, #48]	; 0x30
   18f74:	add	r1, pc, r1
   18f78:	bl	140d0 <sprintf@plt>
   18f7c:	ldr	r1, [pc, #1888]	; 196e4 <__flatcc_fb_codegen_c@@Base+0x32e0>
   18f80:	mov	r2, r6
   18f84:	str	r9, [sp]
   18f88:	str	r6, [sp, #4]
   18f8c:	ldr	r0, [sp, #36]	; 0x24
   18f90:	add	r1, pc, r1
   18f94:	ldr	r3, [sp, #16]
   18f98:	str	r0, [sp, #8]
   18f9c:	str	r7, [sp, #12]
   18fa0:	ldr	r0, [r4, #204]	; 0xcc
   18fa4:	bl	14064 <fprintf@plt>
   18fa8:	ldr	r5, [r5]
   18fac:	cmp	r5, #0
   18fb0:	bne	18ddc <__flatcc_fb_codegen_c@@Base+0x29d8>
   18fb4:	mov	r0, #10
   18fb8:	ldr	r1, [r4, #204]	; 0xcc
   18fbc:	bl	140c4 <fputc@plt>
   18fc0:	ldr	r3, [sp, #40]	; 0x28
   18fc4:	cmp	r3, #3
   18fc8:	beq	1939c <__flatcc_fb_codegen_c@@Base+0x2f98>
   18fcc:	ldr	r1, [pc, #1812]	; 196e8 <__flatcc_fb_codegen_c@@Base+0x32e4>
   18fd0:	mov	r3, r6
   18fd4:	mov	r2, r6
   18fd8:	ldr	r0, [r4, #204]	; 0xcc
   18fdc:	add	r1, pc, r1
   18fe0:	bl	14064 <fprintf@plt>
   18fe4:	ldr	r0, [pc, #1792]	; 196ec <__flatcc_fb_codegen_c@@Base+0x32e8>
   18fe8:	mov	r2, #20
   18fec:	mov	r1, #1
   18ff0:	ldr	r3, [r4, #204]	; 0xcc
   18ff4:	add	r0, pc, r0
   18ff8:	bl	13fec <fwrite@plt>
   18ffc:	ldr	r5, [r8, #20]
   19000:	cmp	r5, #0
   19004:	beq	19520 <__flatcc_fb_codegen_c@@Base+0x311c>
   19008:	ldr	r9, [pc, #1760]	; 196f0 <__flatcc_fb_codegen_c@@Base+0x32ec>
   1900c:	ldr	r7, [pc, #1760]	; 196f4 <__flatcc_fb_codegen_c@@Base+0x32f0>
   19010:	add	r9, pc, r9
   19014:	add	r7, pc, r7
   19018:	ldr	r3, [r5, #4]
   1901c:	ldrh	r2, [r5, #10]
   19020:	ldr	r0, [r4, #204]	; 0xcc
   19024:	ldr	ip, [r3]
   19028:	tst	r2, #4
   1902c:	mov	r2, r6
   19030:	ldr	r1, [r3, #4]
   19034:	str	ip, [sp]
   19038:	mov	r3, r1
   1903c:	str	r1, [sp, #4]
   19040:	movne	r1, r7
   19044:	moveq	r1, r9
   19048:	str	ip, [sp, #8]
   1904c:	bl	14064 <fprintf@plt>
   19050:	ldr	r5, [r5]
   19054:	cmp	r5, #0
   19058:	bne	19018 <__flatcc_fb_codegen_c@@Base+0x2c14>
   1905c:	ldr	r0, [pc, #1684]	; 196f8 <__flatcc_fb_codegen_c@@Base+0x32f4>
   19060:	mov	r2, #32
   19064:	mov	r1, #1
   19068:	ldr	r3, [r4, #204]	; 0xcc
   1906c:	add	r0, pc, r0
   19070:	bl	13fec <fwrite@plt>
   19074:	mov	r0, #10
   19078:	ldr	r1, [r4, #204]	; 0xcc
   1907c:	bl	140c4 <fputc@plt>
   19080:	ldr	r3, [sp, #40]	; 0x28
   19084:	cmp	r3, #3
   19088:	beq	193fc <__flatcc_fb_codegen_c@@Base+0x2ff8>
   1908c:	ldr	r1, [pc, #1640]	; 196fc <__flatcc_fb_codegen_c@@Base+0x32f8>
   19090:	mov	r3, r6
   19094:	mov	r2, r6
   19098:	ldr	r0, [r4, #204]	; 0xcc
   1909c:	add	r1, pc, r1
   190a0:	bl	14064 <fprintf@plt>
   190a4:	ldr	r0, [pc, #1620]	; 19700 <__flatcc_fb_codegen_c@@Base+0x32fc>
   190a8:	mov	r2, #20
   190ac:	mov	r1, #1
   190b0:	ldr	r3, [r4, #204]	; 0xcc
   190b4:	add	r0, pc, r0
   190b8:	bl	13fec <fwrite@plt>
   190bc:	ldr	r5, [r8, #20]
   190c0:	cmp	r5, #0
   190c4:	beq	1910c <__flatcc_fb_codegen_c@@Base+0x2d08>
   190c8:	ldr	r8, [pc, #1588]	; 19704 <__flatcc_fb_codegen_c@@Base+0x3300>
   190cc:	ldr	r7, [pc, #1588]	; 19708 <__flatcc_fb_codegen_c@@Base+0x3304>
   190d0:	add	r8, pc, r8
   190d4:	add	r7, pc, r7
   190d8:	ldrh	r2, [r5, #10]
   190dc:	ldr	r3, [r5, #4]
   190e0:	ldr	r0, [r4, #204]	; 0xcc
   190e4:	tst	r2, #4
   190e8:	movne	r1, r7
   190ec:	moveq	r1, r8
   190f0:	ldrd	r2, [r3]
   190f4:	str	r2, [sp]
   190f8:	mov	r2, r6
   190fc:	bl	14064 <fprintf@plt>
   19100:	ldr	r5, [r5]
   19104:	cmp	r5, #0
   19108:	bne	190d8 <__flatcc_fb_codegen_c@@Base+0x2cd4>
   1910c:	ldr	r0, [pc, #1528]	; 1970c <__flatcc_fb_codegen_c@@Base+0x3308>
   19110:	mov	r2, #31
   19114:	mov	r1, #1
   19118:	ldr	r3, [r4, #204]	; 0xcc
   1911c:	add	r0, pc, r0
   19120:	bl	13fec <fwrite@plt>
   19124:	ldr	r1, [r4, #204]	; 0xcc
   19128:	mov	r0, #10
   1912c:	bl	140c4 <fputc@plt>
   19130:	add	sp, sp, #372	; 0x174
   19134:	ldrd	r4, [sp]
   19138:	ldrd	r6, [sp, #8]
   1913c:	ldrd	r8, [sp, #16]
   19140:	ldrd	sl, [sp, #24]
   19144:	add	sp, sp, #32
   19148:	pop	{pc}		; (ldr pc, [sp], #4)
   1914c:	ldr	r2, [pc, #1468]	; 19710 <__flatcc_fb_codegen_c@@Base+0x330c>
   19150:	add	r2, pc, r2
   19154:	ldr	r1, [pc, #1464]	; 19714 <__flatcc_fb_codegen_c@@Base+0x3310>
   19158:	add	r7, sp, #48	; 0x30
   1915c:	mov	r0, r7
   19160:	ldrd	sl, [r5, #48]	; 0x30
   19164:	add	r1, pc, r1
   19168:	strd	sl, [sp]
   1916c:	bl	140d0 <sprintf@plt>
   19170:	b	18f7c <__flatcc_fb_codegen_c@@Base+0x2b78>
   19174:	ldr	r2, [pc, #1436]	; 19718 <__flatcc_fb_codegen_c@@Base+0x3314>
   19178:	add	r2, pc, r2
   1917c:	ldr	r1, [pc, #1432]	; 1971c <__flatcc_fb_codegen_c@@Base+0x3318>
   19180:	add	r7, sp, #48	; 0x30
   19184:	mov	r0, r7
   19188:	ldrb	r3, [r5, #48]	; 0x30
   1918c:	add	r1, pc, r1
   19190:	bl	140d0 <sprintf@plt>
   19194:	b	18f7c <__flatcc_fb_codegen_c@@Base+0x2b78>
   19198:	ldr	r2, [pc, #1408]	; 19720 <__flatcc_fb_codegen_c@@Base+0x331c>
   1919c:	add	r2, pc, r2
   191a0:	ldr	r1, [pc, #1404]	; 19724 <__flatcc_fb_codegen_c@@Base+0x3320>
   191a4:	add	r7, sp, #48	; 0x30
   191a8:	mov	r0, r7
   191ac:	ldrd	sl, [r5, #48]	; 0x30
   191b0:	add	r1, pc, r1
   191b4:	strd	sl, [sp]
   191b8:	bl	140d0 <sprintf@plt>
   191bc:	b	18f7c <__flatcc_fb_codegen_c@@Base+0x2b78>
   191c0:	ldr	r2, [pc, #1376]	; 19728 <__flatcc_fb_codegen_c@@Base+0x3324>
   191c4:	add	r2, pc, r2
   191c8:	b	1917c <__flatcc_fb_codegen_c@@Base+0x2d78>
   191cc:	ldr	r2, [pc, #1368]	; 1972c <__flatcc_fb_codegen_c@@Base+0x3328>
   191d0:	add	r2, pc, r2
   191d4:	b	1917c <__flatcc_fb_codegen_c@@Base+0x2d78>
   191d8:	ldr	r2, [pc, #1360]	; 19730 <__flatcc_fb_codegen_c@@Base+0x332c>
   191dc:	add	r2, pc, r2
   191e0:	b	1917c <__flatcc_fb_codegen_c@@Base+0x2d78>
   191e4:	ldr	r2, [pc, #1352]	; 19734 <__flatcc_fb_codegen_c@@Base+0x3330>
   191e8:	add	r2, pc, r2
   191ec:	b	1917c <__flatcc_fb_codegen_c@@Base+0x2d78>
   191f0:	ldr	r2, [pc, #1344]	; 19738 <__flatcc_fb_codegen_c@@Base+0x3334>
   191f4:	add	r2, pc, r2
   191f8:	b	1917c <__flatcc_fb_codegen_c@@Base+0x2d78>
   191fc:	ldr	r2, [pc, #1336]	; 1973c <__flatcc_fb_codegen_c@@Base+0x3338>
   19200:	add	r2, pc, r2
   19204:	b	1917c <__flatcc_fb_codegen_c@@Base+0x2d78>
   19208:	ldr	r2, [pc, #1328]	; 19740 <__flatcc_fb_codegen_c@@Base+0x333c>
   1920c:	add	r2, pc, r2
   19210:	b	1917c <__flatcc_fb_codegen_c@@Base+0x2d78>
   19214:	ldr	r2, [pc, #1320]	; 19744 <__flatcc_fb_codegen_c@@Base+0x3340>
   19218:	add	r2, pc, r2
   1921c:	b	191a0 <__flatcc_fb_codegen_c@@Base+0x2d9c>
   19220:	ldr	r2, [pc, #1312]	; 19748 <__flatcc_fb_codegen_c@@Base+0x3344>
   19224:	add	r2, pc, r2
   19228:	b	191a0 <__flatcc_fb_codegen_c@@Base+0x2d9c>
   1922c:	ldr	r2, [pc, #1304]	; 1974c <__flatcc_fb_codegen_c@@Base+0x3348>
   19230:	add	r2, pc, r2
   19234:	b	191a0 <__flatcc_fb_codegen_c@@Base+0x2d9c>
   19238:	ldr	r2, [pc, #1296]	; 19750 <__flatcc_fb_codegen_c@@Base+0x334c>
   1923c:	add	r2, pc, r2
   19240:	b	191a0 <__flatcc_fb_codegen_c@@Base+0x2d9c>
   19244:	ldr	r2, [pc, #1288]	; 19754 <__flatcc_fb_codegen_c@@Base+0x3350>
   19248:	add	r2, pc, r2
   1924c:	b	191a0 <__flatcc_fb_codegen_c@@Base+0x2d9c>
   19250:	ldr	r2, [pc, #1280]	; 19758 <__flatcc_fb_codegen_c@@Base+0x3354>
   19254:	add	r2, pc, r2
   19258:	b	191a0 <__flatcc_fb_codegen_c@@Base+0x2d9c>
   1925c:	ldr	r2, [pc, #1272]	; 1975c <__flatcc_fb_codegen_c@@Base+0x3358>
   19260:	add	r2, pc, r2
   19264:	b	191a0 <__flatcc_fb_codegen_c@@Base+0x2d9c>
   19268:	ldr	r2, [pc, #1264]	; 19760 <__flatcc_fb_codegen_c@@Base+0x335c>
   1926c:	add	r2, pc, r2
   19270:	b	19154 <__flatcc_fb_codegen_c@@Base+0x2d50>
   19274:	ldr	r2, [pc, #1256]	; 19764 <__flatcc_fb_codegen_c@@Base+0x3360>
   19278:	add	r2, pc, r2
   1927c:	b	19154 <__flatcc_fb_codegen_c@@Base+0x2d50>
   19280:	ldr	r2, [pc, #1248]	; 19768 <__flatcc_fb_codegen_c@@Base+0x3364>
   19284:	add	r2, pc, r2
   19288:	b	19154 <__flatcc_fb_codegen_c@@Base+0x2d50>
   1928c:	ldr	r2, [pc, #1240]	; 1976c <__flatcc_fb_codegen_c@@Base+0x3368>
   19290:	add	r2, pc, r2
   19294:	b	19154 <__flatcc_fb_codegen_c@@Base+0x2d50>
   19298:	ldr	r2, [pc, #1232]	; 19770 <__flatcc_fb_codegen_c@@Base+0x336c>
   1929c:	add	r2, pc, r2
   192a0:	b	19154 <__flatcc_fb_codegen_c@@Base+0x2d50>
   192a4:	ldr	r2, [pc, #1224]	; 19774 <__flatcc_fb_codegen_c@@Base+0x3370>
   192a8:	add	r2, pc, r2
   192ac:	b	19154 <__flatcc_fb_codegen_c@@Base+0x2d50>
   192b0:	ldr	r2, [pc, #1216]	; 19778 <__flatcc_fb_codegen_c@@Base+0x3374>
   192b4:	add	r2, pc, r2
   192b8:	b	19154 <__flatcc_fb_codegen_c@@Base+0x2d50>
   192bc:	vldr	d7, [r5, #48]	; 0x30
   192c0:	add	r7, sp, #48	; 0x30
   192c4:	mov	r0, r7
   192c8:	ldr	r1, [pc, #1196]	; 1977c <__flatcc_fb_codegen_c@@Base+0x3378>
   192cc:	vcvt.f32.f64	s14, d7
   192d0:	add	r1, pc, r1
   192d4:	vcvt.f64.f32	d7, s14
   192d8:	vmov	r2, r3, d7
   192dc:	bl	140d0 <sprintf@plt>
   192e0:	b	18f7c <__flatcc_fb_codegen_c@@Base+0x2b78>
   192e4:	ldr	r5, [pc, #1172]	; 19780 <__flatcc_fb_codegen_c@@Base+0x337c>
   192e8:	mov	r3, fp
   192ec:	str	r6, [sp]
   192f0:	ldr	r1, [pc, #1164]	; 19784 <__flatcc_fb_codegen_c@@Base+0x3380>
   192f4:	ldr	r2, [sp, #16]
   192f8:	add	r5, pc, r5
   192fc:	ldr	r0, [r4, #204]	; 0xcc
   19300:	add	r1, pc, r1
   19304:	str	r5, [sp, #4]
   19308:	str	r5, [sp, #36]	; 0x24
   1930c:	bl	14064 <fprintf@plt>
   19310:	ldr	r1, [pc, #1136]	; 19788 <__flatcc_fb_codegen_c@@Base+0x3384>
   19314:	mov	r3, r6
   19318:	mov	r2, r4
   1931c:	str	r6, [sp]
   19320:	ldr	r0, [sp, #20]
   19324:	str	r5, [sp, #4]
   19328:	add	r1, pc, r1
   1932c:	str	r0, [sp, #8]
   19330:	ldr	r0, [r4, #204]	; 0xcc
   19334:	bl	14064 <fprintf@plt>
   19338:	ldr	r1, [pc, #1100]	; 1978c <__flatcc_fb_codegen_c@@Base+0x3388>
   1933c:	mov	r3, r4
   19340:	mov	r2, r4
   19344:	str	r6, [sp]
   19348:	ldr	r0, [r4, #204]	; 0xcc
   1934c:	add	r1, pc, r1
   19350:	bl	14064 <fprintf@plt>
   19354:	ldr	r5, [r8, #20]
   19358:	cmp	r5, #0
   1935c:	bne	18dac <__flatcc_fb_codegen_c@@Base+0x29a8>
   19360:	mov	r0, #10
   19364:	ldr	r1, [r4, #204]	; 0xcc
   19368:	bl	140c4 <fputc@plt>
   1936c:	b	18fcc <__flatcc_fb_codegen_c@@Base+0x2bc8>
   19370:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   19374:	ldr	r5, [r8, #32]
   19378:	cmp	r5, #0
   1937c:	beq	19548 <__flatcc_fb_codegen_c@@Base+0x3144>
   19380:	ldr	r3, [pc, #1032]	; 19790 <__flatcc_fb_codegen_c@@Base+0x338c>
   19384:	add	r3, pc, r3
   19388:	str	r3, [sp, #36]	; 0x24
   1938c:	b	18c94 <__flatcc_fb_codegen_c@@Base+0x2890>
   19390:	mov	r0, #10
   19394:	ldr	r1, [r4, #204]	; 0xcc
   19398:	bl	140c4 <fputc@plt>
   1939c:	ldr	r1, [pc, #1008]	; 19794 <__flatcc_fb_codegen_c@@Base+0x3390>
   193a0:	mov	r3, r6
   193a4:	mov	r2, r6
   193a8:	ldr	r0, [r4, #204]	; 0xcc
   193ac:	add	r1, pc, r1
   193b0:	bl	14064 <fprintf@plt>
   193b4:	ldr	r0, [pc, #988]	; 19798 <__flatcc_fb_codegen_c@@Base+0x3394>
   193b8:	mov	r2, #21
   193bc:	mov	r1, #1
   193c0:	ldr	r3, [r4, #204]	; 0xcc
   193c4:	add	r0, pc, r0
   193c8:	bl	13fec <fwrite@plt>
   193cc:	ldr	r5, [r8, #20]
   193d0:	cmp	r5, #0
   193d4:	bne	19008 <__flatcc_fb_codegen_c@@Base+0x2c04>
   193d8:	ldr	r0, [pc, #956]	; 1979c <__flatcc_fb_codegen_c@@Base+0x3398>
   193dc:	mov	r1, #1
   193e0:	mov	r2, #32
   193e4:	ldr	r3, [r4, #204]	; 0xcc
   193e8:	add	r0, pc, r0
   193ec:	bl	13fec <fwrite@plt>
   193f0:	mov	r0, #10
   193f4:	ldr	r1, [r4, #204]	; 0xcc
   193f8:	bl	140c4 <fputc@plt>
   193fc:	ldr	r1, [pc, #924]	; 197a0 <__flatcc_fb_codegen_c@@Base+0x339c>
   19400:	mov	r3, r6
   19404:	mov	r2, r6
   19408:	ldr	r0, [r4, #204]	; 0xcc
   1940c:	add	r1, pc, r1
   19410:	bl	14064 <fprintf@plt>
   19414:	ldr	r0, [pc, #904]	; 197a4 <__flatcc_fb_codegen_c@@Base+0x33a0>
   19418:	mov	r2, #21
   1941c:	mov	r1, #1
   19420:	ldr	r3, [r4, #204]	; 0xcc
   19424:	add	r0, pc, r0
   19428:	bl	13fec <fwrite@plt>
   1942c:	b	190bc <__flatcc_fb_codegen_c@@Base+0x2cb8>
   19430:	ldr	r3, [pc, #880]	; 197a8 <__flatcc_fb_codegen_c@@Base+0x33a4>
   19434:	ldr	fp, [pc, #880]	; 197ac <__flatcc_fb_codegen_c@@Base+0x33a8>
   19438:	add	r3, pc, r3
   1943c:	add	fp, pc, fp
   19440:	str	r3, [sp, #16]
   19444:	b	18c54 <__flatcc_fb_codegen_c@@Base+0x2850>
   19448:	ldr	r3, [pc, #864]	; 197b0 <__flatcc_fb_codegen_c@@Base+0x33ac>
   1944c:	ldr	fp, [pc, #864]	; 197b4 <__flatcc_fb_codegen_c@@Base+0x33b0>
   19450:	add	r3, pc, r3
   19454:	add	fp, pc, fp
   19458:	str	r3, [sp, #16]
   1945c:	b	18c54 <__flatcc_fb_codegen_c@@Base+0x2850>
   19460:	ldr	r3, [pc, #848]	; 197b8 <__flatcc_fb_codegen_c@@Base+0x33b4>
   19464:	ldr	fp, [pc, #848]	; 197bc <__flatcc_fb_codegen_c@@Base+0x33b8>
   19468:	add	r3, pc, r3
   1946c:	add	fp, pc, fp
   19470:	str	r3, [sp, #16]
   19474:	b	18c54 <__flatcc_fb_codegen_c@@Base+0x2850>
   19478:	ldr	r3, [pc, #832]	; 197c0 <__flatcc_fb_codegen_c@@Base+0x33bc>
   1947c:	ldr	fp, [pc, #832]	; 197c4 <__flatcc_fb_codegen_c@@Base+0x33c0>
   19480:	add	r3, pc, r3
   19484:	add	fp, pc, fp
   19488:	str	r3, [sp, #16]
   1948c:	b	18c54 <__flatcc_fb_codegen_c@@Base+0x2850>
   19490:	ldr	r3, [pc, #816]	; 197c8 <__flatcc_fb_codegen_c@@Base+0x33c4>
   19494:	ldr	fp, [pc, #816]	; 197cc <__flatcc_fb_codegen_c@@Base+0x33c8>
   19498:	add	r3, pc, r3
   1949c:	add	fp, pc, fp
   194a0:	str	r3, [sp, #16]
   194a4:	b	18c54 <__flatcc_fb_codegen_c@@Base+0x2850>
   194a8:	ldr	r3, [pc, #800]	; 197d0 <__flatcc_fb_codegen_c@@Base+0x33cc>
   194ac:	ldr	fp, [pc, #800]	; 197d4 <__flatcc_fb_codegen_c@@Base+0x33d0>
   194b0:	add	r3, pc, r3
   194b4:	add	fp, pc, fp
   194b8:	str	r3, [sp, #16]
   194bc:	b	18c54 <__flatcc_fb_codegen_c@@Base+0x2850>
   194c0:	ldr	r3, [pc, #784]	; 197d8 <__flatcc_fb_codegen_c@@Base+0x33d4>
   194c4:	ldr	fp, [pc, #784]	; 197dc <__flatcc_fb_codegen_c@@Base+0x33d8>
   194c8:	add	r3, pc, r3
   194cc:	add	fp, pc, fp
   194d0:	str	r3, [sp, #16]
   194d4:	b	18c54 <__flatcc_fb_codegen_c@@Base+0x2850>
   194d8:	ldr	r3, [pc, #768]	; 197e0 <__flatcc_fb_codegen_c@@Base+0x33dc>
   194dc:	ldr	fp, [pc, #768]	; 197e4 <__flatcc_fb_codegen_c@@Base+0x33e0>
   194e0:	add	r3, pc, r3
   194e4:	add	fp, pc, fp
   194e8:	str	r3, [sp, #16]
   194ec:	b	18c54 <__flatcc_fb_codegen_c@@Base+0x2850>
   194f0:	ldr	r3, [pc, #752]	; 197e8 <__flatcc_fb_codegen_c@@Base+0x33e4>
   194f4:	ldr	fp, [pc, #752]	; 197ec <__flatcc_fb_codegen_c@@Base+0x33e8>
   194f8:	add	r3, pc, r3
   194fc:	add	fp, pc, fp
   19500:	str	r3, [sp, #16]
   19504:	b	18c54 <__flatcc_fb_codegen_c@@Base+0x2850>
   19508:	ldr	r3, [pc, #736]	; 197f0 <__flatcc_fb_codegen_c@@Base+0x33ec>
   1950c:	ldr	fp, [pc, #736]	; 197f4 <__flatcc_fb_codegen_c@@Base+0x33f0>
   19510:	add	r3, pc, r3
   19514:	add	fp, pc, fp
   19518:	str	r3, [sp, #16]
   1951c:	b	18c54 <__flatcc_fb_codegen_c@@Base+0x2850>
   19520:	ldr	r0, [pc, #720]	; 197f8 <__flatcc_fb_codegen_c@@Base+0x33f4>
   19524:	mov	r2, #32
   19528:	mov	r1, #1
   1952c:	ldr	r3, [r4, #204]	; 0xcc
   19530:	add	r0, pc, r0
   19534:	bl	13fec <fwrite@plt>
   19538:	mov	r0, #10
   1953c:	ldr	r1, [r4, #204]	; 0xcc
   19540:	bl	140c4 <fputc@plt>
   19544:	b	1908c <__flatcc_fb_codegen_c@@Base+0x2c88>
   19548:	ldr	r5, [pc, #684]	; 197fc <__flatcc_fb_codegen_c@@Base+0x33f8>
   1954c:	mov	r3, fp
   19550:	str	r6, [sp]
   19554:	ldr	r1, [pc, #676]	; 19800 <__flatcc_fb_codegen_c@@Base+0x33fc>
   19558:	ldr	r2, [sp, #16]
   1955c:	add	r5, pc, r5
   19560:	ldr	r0, [r4, #204]	; 0xcc
   19564:	add	r1, pc, r1
   19568:	str	r5, [sp, #4]
   1956c:	str	r5, [sp, #36]	; 0x24
   19570:	bl	14064 <fprintf@plt>
   19574:	ldr	r1, [pc, #648]	; 19804 <__flatcc_fb_codegen_c@@Base+0x3400>
   19578:	mov	r3, r6
   1957c:	mov	r2, r4
   19580:	str	r6, [sp]
   19584:	ldr	r0, [sp, #20]
   19588:	str	r5, [sp, #4]
   1958c:	add	r1, pc, r1
   19590:	str	r0, [sp, #8]
   19594:	ldr	r0, [r4, #204]	; 0xcc
   19598:	bl	14064 <fprintf@plt>
   1959c:	b	18da0 <__flatcc_fb_codegen_c@@Base+0x299c>
   195a0:	bl	167b0 <__flatcc_fb_codegen_c@@Base+0x3ac>
   195a4:	ldr	r3, [pc, #604]	; 19808 <__flatcc_fb_codegen_c@@Base+0x3404>
   195a8:	movw	r2, #1204	; 0x4b4
   195ac:	ldr	r1, [pc, #600]	; 1980c <__flatcc_fb_codegen_c@@Base+0x3408>
   195b0:	ldr	r0, [pc, #600]	; 19810 <__flatcc_fb_codegen_c@@Base+0x340c>
   195b4:	add	r3, pc, r3
   195b8:	add	r3, r3, #140	; 0x8c
   195bc:	add	r1, pc, r1
   195c0:	add	r0, pc, r0
   195c4:	bl	14118 <__assert_fail@plt>
   195c8:	ldr	r3, [pc, #580]	; 19814 <__flatcc_fb_codegen_c@@Base+0x3410>
   195cc:	movw	r2, #1205	; 0x4b5
   195d0:	ldr	r1, [pc, #576]	; 19818 <__flatcc_fb_codegen_c@@Base+0x3414>
   195d4:	ldr	r0, [pc, #576]	; 1981c <__flatcc_fb_codegen_c@@Base+0x3418>
   195d8:	add	r3, pc, r3
   195dc:	add	r3, r3, #140	; 0x8c
   195e0:	add	r1, pc, r1
   195e4:	add	r0, pc, r0
   195e8:	bl	14118 <__assert_fail@plt>
   195ec:	ldr	r2, [pc, #556]	; 19820 <__flatcc_fb_codegen_c@@Base+0x341c>
   195f0:	mov	r3, #226	; 0xe2
   195f4:	ldr	r1, [sp, #44]	; 0x2c
   195f8:	ldr	r0, [pc, #548]	; 19824 <__flatcc_fb_codegen_c@@Base+0x3420>
   195fc:	ldr	r4, [pc, #548]	; 19828 <__flatcc_fb_codegen_c@@Base+0x3424>
   19600:	ldr	ip, [r1, r2]
   19604:	add	r0, pc, r0
   19608:	ldr	r1, [pc, #540]	; 1982c <__flatcc_fb_codegen_c@@Base+0x3428>
   1960c:	add	r4, pc, r4
   19610:	str	r0, [sp]
   19614:	mov	r2, r4
   19618:	ldr	r0, [ip]
   1961c:	add	r1, pc, r1
   19620:	bl	14064 <fprintf@plt>
   19624:	ldr	r3, [pc, #516]	; 19830 <__flatcc_fb_codegen_c@@Base+0x342c>
   19628:	mov	r1, r4
   1962c:	mov	r2, #226	; 0xe2
   19630:	ldr	r0, [pc, #508]	; 19834 <__flatcc_fb_codegen_c@@Base+0x3430>
   19634:	add	r3, pc, r3
   19638:	add	r3, r3, #60	; 0x3c
   1963c:	add	r0, pc, r0
   19640:	bl	14118 <__assert_fail@plt>
   19644:	ldr	r2, [pc, #468]	; 19820 <__flatcc_fb_codegen_c@@Base+0x341c>
   19648:	mov	r3, #260	; 0x104
   1964c:	ldr	r1, [sp, #44]	; 0x2c
   19650:	ldr	r0, [pc, #480]	; 19838 <__flatcc_fb_codegen_c@@Base+0x3434>
   19654:	ldr	r4, [pc, #480]	; 1983c <__flatcc_fb_codegen_c@@Base+0x3438>
   19658:	ldr	ip, [r1, r2]
   1965c:	add	r0, pc, r0
   19660:	ldr	r1, [pc, #472]	; 19840 <__flatcc_fb_codegen_c@@Base+0x343c>
   19664:	add	r4, pc, r4
   19668:	str	r0, [sp]
   1966c:	mov	r2, r4
   19670:	ldr	r0, [ip]
   19674:	add	r1, pc, r1
   19678:	bl	14064 <fprintf@plt>
   1967c:	ldr	r3, [pc, #448]	; 19844 <__flatcc_fb_codegen_c@@Base+0x3440>
   19680:	mov	r1, r4
   19684:	mov	r2, #260	; 0x104
   19688:	ldr	r0, [pc, #440]	; 19848 <__flatcc_fb_codegen_c@@Base+0x3444>
   1968c:	add	r3, pc, r3
   19690:	add	r3, r3, #84	; 0x54
   19694:	add	r0, pc, r0
   19698:	bl	14118 <__assert_fail@plt>
   1969c:	andeq	r4, r5, ip, lsr #8
   196a0:	andeq	r9, r2, r8, asr r2
   196a4:			; <UNDEFINED> instruction: 0x00029cb0
   196a8:	andeq	r2, r3, r0, lsl pc
   196ac:	andeq	r9, r2, r8, asr #6
   196b0:	andeq	r2, r3, r8, lsl #30
   196b4:	andeq	r9, r2, ip, lsr #6
   196b8:	andeq	r1, r3, ip, lsr #12
   196bc:	andeq	r9, r2, ip, lsr fp
   196c0:	andeq	r9, r2, ip, asr #24
   196c4:	andeq	r9, r2, ip, lsr ip
   196c8:	andeq	r9, r2, r0, asr #4
   196cc:	strdeq	r2, [r3], -ip
   196d0:	strdeq	r2, [r3], -r0
   196d4:	andeq	r1, r3, r4, lsr r5
   196d8:	andeq	r9, r2, ip, ror #3
   196dc:	strdeq	r9, [r2], -ip
   196e0:	andeq	r9, r2, r8, asr #3
   196e4:	andeq	r9, r2, r8, ror sl
   196e8:	andeq	r9, r2, ip, asr #20
   196ec:	andeq	r9, r2, r4, ror sl
   196f0:	strdeq	r9, [r2], -r4
   196f4:			; <UNDEFINED> instruction: 0x00029abc
   196f8:			; <UNDEFINED> instruction: 0x00029abc
   196fc:			; <UNDEFINED> instruction: 0x00029ab0
   19700:			; <UNDEFINED> instruction: 0x000299b4
   19704:	andeq	r9, r2, r0, asr #22
   19708:	andeq	r9, r2, ip, lsl #22
   1970c:	andeq	r9, r2, r4, lsr #21
   19710:	andeq	r8, r2, r4, asr #27
   19714:	andeq	r8, r2, r0, asr #31
   19718:	muleq	r2, ip, sp
   1971c:	andeq	r8, r2, r4, lsr #31
   19720:	andeq	r8, r2, r8, ror sp
   19724:	andeq	r8, r2, r8, ror #30
   19728:	andeq	r8, r2, r4, ror sp
   1972c:	andeq	r8, r2, r0, lsr sp
   19730:	andeq	r8, r2, r0, lsr sp
   19734:	andeq	r8, r2, r8, asr #26
   19738:	andeq	r8, r2, r4, lsr sp
   1973c:	strdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   19740:	andeq	r8, r2, r0, lsl sp
   19744:	andeq	r8, r2, r4, lsl #26
   19748:	andeq	r8, r2, r4, lsl sp
   1974c:	ldrdeq	r8, [r2], -r0
   19750:	ldrdeq	r8, [r2], -r0
   19754:	andeq	r8, r2, r8, ror #25
   19758:	ldrdeq	r8, [r2], -r4
   1975c:	muleq	r2, r8, ip
   19760:			; <UNDEFINED> instruction: 0x00028cb0
   19764:			; <UNDEFINED> instruction: 0x00028cb0
   19768:	andeq	r8, r2, r4, ror ip
   1976c:	andeq	r8, r2, ip, ror ip
   19770:	muleq	r2, r4, ip
   19774:	muleq	r2, r0, ip
   19778:	andeq	r8, r2, ip, asr #24
   1977c:	andeq	r8, r2, r8, ror #28
   19780:	andeq	r9, r2, r4, asr #12
   19784:	andeq	r9, r2, r8, lsr #13
   19788:	muleq	r2, r8, r6
   1978c:	andeq	r9, r2, r0, lsr #13
   19790:			; <UNDEFINED> instruction: 0x000295b0
   19794:	ldrdeq	r9, [r2], -r4
   19798:	strdeq	r9, [r2], -r4
   1979c:	andeq	r9, r2, r0, asr #14
   197a0:	andeq	r9, r2, ip, ror r7
   197a4:	muleq	r2, r4, r6
   197a8:	andeq	r2, r3, r0, lsl #15
   197ac:	andeq	r8, r2, r4, lsr #21
   197b0:	andeq	r2, r3, r8, ror #14
   197b4:	andeq	r8, r2, r0, lsl sl
   197b8:	andeq	r2, r3, r0, asr r7
   197bc:	andeq	r8, r2, r8, lsr #20
   197c0:	andeq	r2, r3, r8, lsr r7
   197c4:	strdeq	r8, [r2], -ip
   197c8:	andeq	r2, r3, r0, lsr #14
   197cc:	andeq	r8, r2, r4, lsl sl
   197d0:	andeq	r2, r3, r8, lsl #14
   197d4:	andeq	r8, r2, r4, asr #19
   197d8:	strdeq	r2, [r3], -r0
   197dc:	strdeq	r8, [r2], -r4
   197e0:	ldrdeq	r2, [r3], -r8
   197e4:	andeq	r8, r2, ip, ror #19
   197e8:	andeq	r2, r3, r0, asr #13
   197ec:	andeq	r8, r2, r8, asr r9
   197f0:	andeq	r2, r3, r8, lsr #13
   197f4:	ldrdeq	r8, [r2], -r4
   197f8:	strdeq	r9, [r2], -r8
   197fc:	ldrdeq	r9, [r2], -r8
   19800:	andeq	r9, r2, r4, asr #8
   19804:	andeq	r9, r2, r4, lsr r4
   19808:	andeq	r8, r2, r4, asr #10
   1980c:	strdeq	r8, [r2], -ip
   19810:	andeq	r9, r2, r8, lsl #7
   19814:	andeq	r8, r2, r0, lsr #10
   19818:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   1981c:	andeq	r9, r2, r4, lsr #7
   19820:	andeq	r0, r0, r0, lsr #1
   19824:	andeq	r8, r2, r8, lsl r8
   19828:	andeq	r8, r2, r4, lsr #15
   1982c:	strdeq	r8, [r2], -r4
   19830:	andeq	r8, r2, r4, asr #9
   19834:	strdeq	r0, [r3], -r8
   19838:	andeq	r8, r2, r0, asr #15
   1983c:	andeq	r8, r2, ip, asr #14
   19840:	muleq	r2, ip, r7
   19844:	andeq	r8, r2, ip, ror #8
   19848:	andeq	r0, r3, r0, lsr #25
   1984c:	ldr	r3, [pc, #3512]	; 1a60c <__flatcc_fb_codegen_c@@Base+0x4208>
   19850:	mov	r2, #220	; 0xdc
   19854:	strd	r4, [sp, #-36]!	; 0xffffffdc
   19858:	mov	r5, r0
   1985c:	strd	r6, [sp, #8]
   19860:	strd	r8, [sp, #16]
   19864:	strd	sl, [sp, #24]
   19868:	mov	fp, r1
   1986c:	mov	r1, #0
   19870:	add	r3, pc, r3
   19874:	str	lr, [sp, #32]
   19878:	sub	sp, sp, #508	; 0x1fc
   1987c:	add	r0, sp, #64	; 0x40
   19880:	add	r4, sp, #284	; 0x11c
   19884:	str	r3, [sp, #60]	; 0x3c
   19888:	ldr	r3, [r5, #212]	; 0xd4
   1988c:	str	r4, [sp, #40]	; 0x28
   19890:	str	r0, [sp, #56]	; 0x38
   19894:	ldr	r9, [r3, #132]	; 0x84
   19898:	bl	1407c <memset@plt>
   1989c:	mov	r0, r4
   198a0:	mov	r2, #220	; 0xdc
   198a4:	mov	r1, #0
   198a8:	bl	1407c <memset@plt>
   198ac:	ldrh	r3, [fp, #8]
   198b0:	cmp	r3, #1
   198b4:	bne	1a5bc <__flatcc_fb_codegen_c@@Base+0x41b8>
   198b8:	ldrh	r3, [fp, #104]	; 0x68
   198bc:	cmp	r3, #0
   198c0:	beq	19994 <__flatcc_fb_codegen_c@@Base+0x3590>
   198c4:	ldrd	r2, [fp, #112]	; 0x70
   198c8:	orrs	r3, r2, r3
   198cc:	bne	198dc <__flatcc_fb_codegen_c@@Base+0x34d8>
   198d0:	ldrd	r2, [fp, #96]	; 0x60
   198d4:	orrs	r3, r2, r3
   198d8:	bne	1a5e0 <__flatcc_fb_codegen_c@@Base+0x41dc>
   198dc:	mov	r1, fp
   198e0:	ldr	r0, [fp, #12]
   198e4:	ldr	r2, [sp, #56]	; 0x38
   198e8:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   198ec:	ldr	r4, [fp, #32]
   198f0:	cmp	r4, #0
   198f4:	beq	199dc <__flatcc_fb_codegen_c@@Base+0x35d8>
   198f8:	ldr	r8, [pc, #3344]	; 1a610 <__flatcc_fb_codegen_c@@Base+0x420c>
   198fc:	mov	ip, #1
   19900:	mov	r3, #0
   19904:	ldr	r7, [pc, #3336]	; 1a614 <__flatcc_fb_codegen_c@@Base+0x4210>
   19908:	ldr	r6, [pc, #3336]	; 1a618 <__flatcc_fb_codegen_c@@Base+0x4214>
   1990c:	add	r8, pc, r8
   19910:	add	r7, pc, r7
   19914:	add	r6, pc, r6
   19918:	b	19960 <__flatcc_fb_codegen_c@@Base+0x355c>
   1991c:	ldr	r1, [pc, #3320]	; 1a61c <__flatcc_fb_codegen_c@@Base+0x4218>
   19920:	mov	r2, r6
   19924:	add	r1, pc, r1
   19928:	bl	14064 <fprintf@plt>
   1992c:	ldr	r2, [r4, #4]
   19930:	ldr	r0, [r5, #204]	; 0xcc
   19934:	ldr	r1, [pc, #3300]	; 1a620 <__flatcc_fb_codegen_c@@Base+0x421c>
   19938:	ldr	r3, [r2]
   1993c:	ldr	r2, [r2, #4]
   19940:	add	r1, pc, r1
   19944:	bl	14064 <fprintf@plt>
   19948:	ldr	r3, [r4, #4]
   1994c:	mov	ip, #0
   19950:	ldr	r4, [r4]
   19954:	ldr	r3, [r3, #8]
   19958:	cmp	r4, ip
   1995c:	beq	199c4 <__flatcc_fb_codegen_c@@Base+0x35c0>
   19960:	ldr	r2, [r4, #4]
   19964:	ldr	r0, [r5, #204]	; 0xcc
   19968:	ldr	r1, [r2, #8]
   1996c:	cmp	r1, r3
   19970:	beq	19934 <__flatcc_fb_codegen_c@@Base+0x3530>
   19974:	cmp	ip, #0
   19978:	bne	1991c <__flatcc_fb_codegen_c@@Base+0x3518>
   1997c:	mov	r2, r8
   19980:	mov	r1, r7
   19984:	bl	14064 <fprintf@plt>
   19988:	ldr	r2, [r4, #4]
   1998c:	ldr	r0, [r5, #204]	; 0xcc
   19990:	b	19934 <__flatcc_fb_codegen_c@@Base+0x3530>
   19994:	ldrd	r2, [fp, #96]	; 0x60
   19998:	orrs	r3, r2, r3
   1999c:	beq	198dc <__flatcc_fb_codegen_c@@Base+0x34d8>
   199a0:	ldr	r3, [pc, #3196]	; 1a624 <__flatcc_fb_codegen_c@@Base+0x4220>
   199a4:	movw	r2, #937	; 0x3a9
   199a8:	ldr	r1, [pc, #3192]	; 1a628 <__flatcc_fb_codegen_c@@Base+0x4224>
   199ac:	ldr	r0, [pc, #3192]	; 1a62c <__flatcc_fb_codegen_c@@Base+0x4228>
   199b0:	add	r3, pc, r3
   199b4:	add	r3, r3, #152	; 0x98
   199b8:	add	r1, pc, r1
   199bc:	add	r0, pc, r0
   199c0:	bl	14118 <__assert_fail@plt>
   199c4:	ldr	r0, [pc, #3172]	; 1a630 <__flatcc_fb_codegen_c@@Base+0x422c>
   199c8:	mov	r2, #4
   199cc:	mov	r1, #1
   199d0:	ldr	r3, [r5, #204]	; 0xcc
   199d4:	add	r0, pc, r0
   199d8:	bl	13fec <fwrite@plt>
   199dc:	ldrd	r2, [fp, #112]	; 0x70
   199e0:	ldr	r0, [r5, #204]	; 0xcc
   199e4:	orrs	r3, r2, r3
   199e8:	beq	1a248 <__flatcc_fb_codegen_c@@Base+0x3e44>
   199ec:	cmp	r9, #0
   199f0:	bne	1a2b4 <__flatcc_fb_codegen_c@@Base+0x3eb0>
   199f4:	ldr	r1, [pc, #3128]	; 1a634 <__flatcc_fb_codegen_c@@Base+0x4230>
   199f8:	ldr	r2, [sp, #56]	; 0x38
   199fc:	add	r1, pc, r1
   19a00:	bl	14064 <fprintf@plt>
   19a04:	ldr	r4, [fp, #20]
   19a08:	cmp	r4, #0
   19a0c:	beq	1a22c <__flatcc_fb_codegen_c@@Base+0x3e28>
   19a10:	ldr	r3, [pc, #3104]	; 1a638 <__flatcc_fb_codegen_c@@Base+0x4234>
   19a14:	mov	r6, #0
   19a18:	str	fp, [sp, #48]	; 0x30
   19a1c:	str	r6, [sp, #44]	; 0x2c
   19a20:	str	r6, [sp, #52]	; 0x34
   19a24:	add	r3, pc, r3
   19a28:	str	r3, [sp, #28]
   19a2c:	ldr	r3, [pc, #3080]	; 1a63c <__flatcc_fb_codegen_c@@Base+0x4238>
   19a30:	add	r3, pc, r3
   19a34:	str	r3, [sp, #32]
   19a38:	ldr	r3, [pc, #3072]	; 1a640 <__flatcc_fb_codegen_c@@Base+0x423c>
   19a3c:	add	r3, pc, r3
   19a40:	str	r3, [sp, #36]	; 0x24
   19a44:	ldr	r3, [pc, #3064]	; 1a644 <__flatcc_fb_codegen_c@@Base+0x4240>
   19a48:	add	r3, pc, r3
   19a4c:	mov	fp, r3
   19a50:	ldr	r7, [r4, #68]	; 0x44
   19a54:	cmp	r7, #0
   19a58:	beq	19af4 <__flatcc_fb_codegen_c@@Base+0x36f0>
   19a5c:	mov	r1, #1
   19a60:	mov	r3, #0
   19a64:	b	19aa8 <__flatcc_fb_codegen_c@@Base+0x36a4>
   19a68:	ldr	r1, [pc, #3032]	; 1a648 <__flatcc_fb_codegen_c@@Base+0x4244>
   19a6c:	ldr	r2, [sp, #36]	; 0x24
   19a70:	add	r1, pc, r1
   19a74:	bl	14064 <fprintf@plt>
   19a78:	ldr	r2, [r7, #4]
   19a7c:	ldr	r0, [r5, #204]	; 0xcc
   19a80:	mov	r1, fp
   19a84:	ldr	r3, [r2]
   19a88:	ldr	r2, [r2, #4]
   19a8c:	bl	14064 <fprintf@plt>
   19a90:	ldr	r3, [r7, #4]
   19a94:	mov	r1, #0
   19a98:	ldr	r7, [r7]
   19a9c:	ldr	r3, [r3, #8]
   19aa0:	cmp	r7, r1
   19aa4:	beq	19adc <__flatcc_fb_codegen_c@@Base+0x36d8>
   19aa8:	ldr	r2, [r7, #4]
   19aac:	ldr	r0, [r5, #204]	; 0xcc
   19ab0:	ldr	ip, [r2, #8]
   19ab4:	cmp	ip, r3
   19ab8:	beq	19a80 <__flatcc_fb_codegen_c@@Base+0x367c>
   19abc:	cmp	r1, #0
   19ac0:	bne	19a68 <__flatcc_fb_codegen_c@@Base+0x3664>
   19ac4:	ldr	r2, [sp, #28]
   19ac8:	ldr	r1, [sp, #32]
   19acc:	bl	14064 <fprintf@plt>
   19ad0:	ldr	r2, [r7, #4]
   19ad4:	ldr	r0, [r5, #204]	; 0xcc
   19ad8:	b	19a80 <__flatcc_fb_codegen_c@@Base+0x367c>
   19adc:	ldr	r0, [pc, #2920]	; 1a64c <__flatcc_fb_codegen_c@@Base+0x4248>
   19ae0:	mov	r2, #4
   19ae4:	mov	r1, #1
   19ae8:	ldr	r3, [r5, #204]	; 0xcc
   19aec:	add	r0, pc, r0
   19af0:	bl	13fec <fwrite@plt>
   19af4:	ldr	r3, [r4, #4]
   19af8:	cmp	r6, #0
   19afc:	ldrhne	sl, [r4, #74]	; 0x4a
   19b00:	ldm	r3, {r7, r8}
   19b04:	ldreq	r3, [sp, #48]	; 0x30
   19b08:	ldrheq	sl, [r3, #104]	; 0x68
   19b0c:	cmp	r9, #0
   19b10:	beq	19f54 <__flatcc_fb_codegen_c@@Base+0x3b50>
   19b14:	ldr	r3, [r4, #80]	; 0x50
   19b18:	subs	r3, r3, r6
   19b1c:	bne	1a034 <__flatcc_fb_codegen_c@@Base+0x3c30>
   19b20:	ldrh	r3, [r4, #72]	; 0x48
   19b24:	tst	r3, #4
   19b28:	bne	1a060 <__flatcc_fb_codegen_c@@Base+0x3c5c>
   19b2c:	ldrh	r3, [r4, #24]
   19b30:	cmp	r3, #8
   19b34:	bne	19ef8 <__flatcc_fb_codegen_c@@Base+0x3af4>
   19b38:	ldr	r3, [r4, #16]
   19b3c:	cmp	r3, #5
   19b40:	beq	1a090 <__flatcc_fb_codegen_c@@Base+0x3c8c>
   19b44:	sub	r3, r3, #1
   19b48:	cmp	r3, #10
   19b4c:	addls	pc, pc, r3, lsl #2
   19b50:	b	1a4a0 <__flatcc_fb_codegen_c@@Base+0x409c>
   19b54:	b	19ee4 <__flatcc_fb_codegen_c@@Base+0x3ae0>
   19b58:	b	19ed0 <__flatcc_fb_codegen_c@@Base+0x3acc>
   19b5c:	b	19ebc <__flatcc_fb_codegen_c@@Base+0x3ab8>
   19b60:	b	19ea8 <__flatcc_fb_codegen_c@@Base+0x3aa4>
   19b64:	b	1a4a0 <__flatcc_fb_codegen_c@@Base+0x409c>
   19b68:	b	19e6c <__flatcc_fb_codegen_c@@Base+0x3a68>
   19b6c:	b	19e58 <__flatcc_fb_codegen_c@@Base+0x3a54>
   19b70:	b	19e80 <__flatcc_fb_codegen_c@@Base+0x3a7c>
   19b74:	b	19e20 <__flatcc_fb_codegen_c@@Base+0x3a1c>
   19b78:	b	19b80 <__flatcc_fb_codegen_c@@Base+0x377c>
   19b7c:	b	19e94 <__flatcc_fb_codegen_c@@Base+0x3a90>
   19b80:	ldr	r2, [pc, #2760]	; 1a650 <__flatcc_fb_codegen_c@@Base+0x424c>
   19b84:	ldr	r1, [pc, #2760]	; 1a654 <__flatcc_fb_codegen_c@@Base+0x4250>
   19b88:	add	r2, pc, r2
   19b8c:	add	r1, pc, r1
   19b90:	cmp	r9, #0
   19b94:	ldr	r0, [r5, #204]	; 0xcc
   19b98:	beq	19e3c <__flatcc_fb_codegen_c@@Base+0x3a38>
   19b9c:	mov	r3, r1
   19ba0:	ldr	r1, [pc, #2736]	; 1a658 <__flatcc_fb_codegen_c@@Base+0x4254>
   19ba4:	add	r1, pc, r1
   19ba8:	bl	14064 <fprintf@plt>
   19bac:	ldr	r1, [pc, #2728]	; 1a65c <__flatcc_fb_codegen_c@@Base+0x4258>
   19bb0:	mov	r3, r7
   19bb4:	mov	r2, r8
   19bb8:	ldr	r0, [r5, #204]	; 0xcc
   19bbc:	add	r1, pc, r1
   19bc0:	bl	14064 <fprintf@plt>
   19bc4:	ldr	r6, [r4, #80]	; 0x50
   19bc8:	ldr	r3, [r4, #88]	; 0x58
   19bcc:	ldr	r4, [r4]
   19bd0:	add	r6, r6, r3
   19bd4:	cmp	r4, #0
   19bd8:	bne	19a50 <__flatcc_fb_codegen_c@@Base+0x364c>
   19bdc:	cmp	r9, #0
   19be0:	ldr	fp, [sp, #48]	; 0x30
   19be4:	beq	1a22c <__flatcc_fb_codegen_c@@Base+0x3e28>
   19be8:	ldr	r3, [fp, #112]	; 0x70
   19bec:	ldr	r0, [r5, #204]	; 0xcc
   19bf0:	subs	r3, r3, r6
   19bf4:	bne	1a488 <__flatcc_fb_codegen_c@@Base+0x4084>
   19bf8:	mov	r3, r0
   19bfc:	ldr	r0, [pc, #2652]	; 1a660 <__flatcc_fb_codegen_c@@Base+0x425c>
   19c00:	mov	r2, #3
   19c04:	mov	r1, #1
   19c08:	add	r0, pc, r0
   19c0c:	bl	13fec <fwrite@plt>
   19c10:	ldr	r0, [pc, #2636]	; 1a664 <__flatcc_fb_codegen_c@@Base+0x4260>
   19c14:	mov	r2, #15
   19c18:	mov	r1, #1
   19c1c:	ldr	r3, [r5, #204]	; 0xcc
   19c20:	add	r0, pc, r0
   19c24:	bl	13fec <fwrite@plt>
   19c28:	ldr	r1, [pc, #2616]	; 1a668 <__flatcc_fb_codegen_c@@Base+0x4264>
   19c2c:	ldr	r4, [sp, #56]	; 0x38
   19c30:	ldrd	r6, [fp, #112]	; 0x70
   19c34:	add	r1, pc, r1
   19c38:	ldr	r0, [r5, #204]	; 0xcc
   19c3c:	mov	r2, r4
   19c40:	strd	r6, [sp]
   19c44:	bl	14064 <fprintf@plt>
   19c48:	ldr	r1, [pc, #2588]	; 1a66c <__flatcc_fb_codegen_c@@Base+0x4268>
   19c4c:	mov	r3, r4
   19c50:	mov	r2, r4
   19c54:	str	r4, [sp]
   19c58:	ldr	r0, [r5, #204]	; 0xcc
   19c5c:	add	r1, pc, r1
   19c60:	bl	14064 <fprintf@plt>
   19c64:	ldr	r1, [pc, #2564]	; 1a670 <__flatcc_fb_codegen_c@@Base+0x426c>
   19c68:	mov	r3, r4
   19c6c:	mov	r2, r4
   19c70:	str	r4, [sp]
   19c74:	ldr	r0, [r5, #204]	; 0xcc
   19c78:	add	r1, pc, r1
   19c7c:	bl	14064 <fprintf@plt>
   19c80:	ldr	r1, [pc, #2540]	; 1a674 <__flatcc_fb_codegen_c@@Base+0x4270>
   19c84:	mov	r0, r4
   19c88:	mov	r3, r4
   19c8c:	mov	r2, r4
   19c90:	stm	sp, {r0, r5}
   19c94:	ldr	r0, [r5, #204]	; 0xcc
   19c98:	add	r1, pc, r1
   19c9c:	bl	14064 <fprintf@plt>
   19ca0:	ldr	r1, [pc, #2512]	; 1a678 <__flatcc_fb_codegen_c@@Base+0x4274>
   19ca4:	ldr	r4, [sp, #56]	; 0x38
   19ca8:	ldrd	r6, [fp, #112]	; 0x70
   19cac:	add	r1, pc, r1
   19cb0:	ldr	r0, [r5, #204]	; 0xcc
   19cb4:	mov	r2, r4
   19cb8:	strd	r6, [sp]
   19cbc:	bl	14064 <fprintf@plt>
   19cc0:	ldr	r1, [pc, #2484]	; 1a67c <__flatcc_fb_codegen_c@@Base+0x4278>
   19cc4:	mov	r3, r4
   19cc8:	mov	r2, r4
   19ccc:	str	r5, [sp]
   19cd0:	ldr	r0, [r5, #204]	; 0xcc
   19cd4:	add	r1, pc, r1
   19cd8:	bl	14064 <fprintf@plt>
   19cdc:	ldr	r1, [pc, #2460]	; 1a680 <__flatcc_fb_codegen_c@@Base+0x427c>
   19ce0:	mov	r3, r4
   19ce4:	mov	r2, r5
   19ce8:	ldr	r0, [r5, #204]	; 0xcc
   19cec:	add	r1, pc, r1
   19cf0:	bl	14064 <fprintf@plt>
   19cf4:	mov	r0, #10
   19cf8:	ldr	r1, [r5, #204]	; 0xcc
   19cfc:	bl	140c4 <fputc@plt>
   19d00:	ldr	r4, [fp, #20]
   19d04:	cmp	r4, #0
   19d08:	beq	19df8 <__flatcc_fb_codegen_c@@Base+0x39f4>
   19d0c:	ldr	r3, [pc, #2416]	; 1a684 <__flatcc_fb_codegen_c@@Base+0x4280>
   19d10:	mov	r9, #0
   19d14:	mov	r8, r9
   19d18:	ldr	fp, [pc, #2408]	; 1a688 <__flatcc_fb_codegen_c@@Base+0x4284>
   19d1c:	str	r9, [sp, #28]
   19d20:	ldr	sl, [pc, #2404]	; 1a68c <__flatcc_fb_codegen_c@@Base+0x4288>
   19d24:	add	r3, pc, r3
   19d28:	ldr	r9, [sp, #56]	; 0x38
   19d2c:	add	fp, pc, fp
   19d30:	str	r3, [sp, #36]	; 0x24
   19d34:	add	sl, pc, sl
   19d38:	ldr	r3, [pc, #2384]	; 1a690 <__flatcc_fb_codegen_c@@Base+0x428c>
   19d3c:	str	fp, [sp, #32]
   19d40:	ldr	fp, [sp, #40]	; 0x28
   19d44:	add	r3, pc, r3
   19d48:	str	r3, [sp, #44]	; 0x2c
   19d4c:	ldrh	r3, [r4, #72]	; 0x48
   19d50:	tst	r3, #4
   19d54:	bne	19dec <__flatcc_fb_codegen_c@@Base+0x39e8>
   19d58:	ldrh	r2, [r4, #24]
   19d5c:	ldr	r1, [r4, #4]
   19d60:	cmp	r2, #8
   19d64:	ldrd	r6, [r1]
   19d68:	beq	1a0ac <__flatcc_fb_codegen_c@@Base+0x3ca8>
   19d6c:	cmp	r2, #14
   19d70:	bne	19fdc <__flatcc_fb_codegen_c@@Base+0x3bd8>
   19d74:	ldr	r1, [r4, #16]
   19d78:	mov	r2, fp
   19d7c:	ldr	r0, [r1, #12]
   19d80:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   19d84:	ldr	r2, [r4, #16]
   19d88:	ldrh	r3, [r2, #8]
   19d8c:	cmp	r3, #1
   19d90:	beq	1a0f4 <__flatcc_fb_codegen_c@@Base+0x3cf0>
   19d94:	cmp	r3, #3
   19d98:	bne	1a114 <__flatcc_fb_codegen_c@@Base+0x3d10>
   19d9c:	ldr	r3, [r2, #40]	; 0x28
   19da0:	sub	r3, r3, #1
   19da4:	cmp	r3, #10
   19da8:	bhi	1a604 <__flatcc_fb_codegen_c@@Base+0x4200>
   19dac:	ldr	r1, [pc, #2272]	; 1a694 <__flatcc_fb_codegen_c@@Base+0x4290>
   19db0:	mov	r3, r9
   19db4:	mov	r2, r5
   19db8:	str	r7, [sp]
   19dbc:	stmib	sp, {r6, fp}
   19dc0:	str	fp, [sp, #12]
   19dc4:	ldr	r0, [r5, #204]	; 0xcc
   19dc8:	add	r1, pc, r1
   19dcc:	bl	14064 <fprintf@plt>
   19dd0:	ldr	r3, [r5, #212]	; 0xd4
   19dd4:	ldr	r3, [r3, #32]
   19dd8:	cmp	r3, #0
   19ddc:	bne	1a13c <__flatcc_fb_codegen_c@@Base+0x3d38>
   19de0:	ldrh	r3, [r4, #72]	; 0x48
   19de4:	tst	r3, #128	; 0x80
   19de8:	bne	1a11c <__flatcc_fb_codegen_c@@Base+0x3d18>
   19dec:	ldr	r4, [r4]
   19df0:	cmp	r4, #0
   19df4:	bne	19d4c <__flatcc_fb_codegen_c@@Base+0x3948>
   19df8:	ldr	r1, [r5, #204]	; 0xcc
   19dfc:	mov	r0, #10
   19e00:	bl	140c4 <fputc@plt>
   19e04:	add	sp, sp, #508	; 0x1fc
   19e08:	ldrd	r4, [sp]
   19e0c:	ldrd	r6, [sp, #8]
   19e10:	ldrd	r8, [sp, #16]
   19e14:	ldrd	sl, [sp, #24]
   19e18:	add	sp, sp, #32
   19e1c:	pop	{pc}		; (ldr pc, [sp], #4)
   19e20:	ldr	r2, [pc, #2160]	; 1a698 <__flatcc_fb_codegen_c@@Base+0x4294>
   19e24:	cmp	r9, #0
   19e28:	ldr	r1, [pc, #2156]	; 1a69c <__flatcc_fb_codegen_c@@Base+0x4298>
   19e2c:	ldr	r0, [r5, #204]	; 0xcc
   19e30:	add	r2, pc, r2
   19e34:	add	r1, pc, r1
   19e38:	bne	19b9c <__flatcc_fb_codegen_c@@Base+0x3798>
   19e3c:	str	r1, [sp]
   19e40:	mov	r3, r2
   19e44:	mov	r2, sl
   19e48:	ldr	r1, [pc, #2128]	; 1a6a0 <__flatcc_fb_codegen_c@@Base+0x429c>
   19e4c:	add	r1, pc, r1
   19e50:	bl	14064 <fprintf@plt>
   19e54:	b	19bac <__flatcc_fb_codegen_c@@Base+0x37a8>
   19e58:	ldr	r2, [pc, #2116]	; 1a6a4 <__flatcc_fb_codegen_c@@Base+0x42a0>
   19e5c:	ldr	r1, [pc, #2116]	; 1a6a8 <__flatcc_fb_codegen_c@@Base+0x42a4>
   19e60:	add	r2, pc, r2
   19e64:	add	r1, pc, r1
   19e68:	b	19b90 <__flatcc_fb_codegen_c@@Base+0x378c>
   19e6c:	ldr	r2, [pc, #2104]	; 1a6ac <__flatcc_fb_codegen_c@@Base+0x42a8>
   19e70:	ldr	r1, [pc, #2104]	; 1a6b0 <__flatcc_fb_codegen_c@@Base+0x42ac>
   19e74:	add	r2, pc, r2
   19e78:	add	r1, pc, r1
   19e7c:	b	19b90 <__flatcc_fb_codegen_c@@Base+0x378c>
   19e80:	ldr	r2, [pc, #2092]	; 1a6b4 <__flatcc_fb_codegen_c@@Base+0x42b0>
   19e84:	ldr	r1, [pc, #2092]	; 1a6b8 <__flatcc_fb_codegen_c@@Base+0x42b4>
   19e88:	add	r2, pc, r2
   19e8c:	add	r1, pc, r1
   19e90:	b	19b90 <__flatcc_fb_codegen_c@@Base+0x378c>
   19e94:	ldr	r2, [pc, #2080]	; 1a6bc <__flatcc_fb_codegen_c@@Base+0x42b8>
   19e98:	ldr	r1, [pc, #2080]	; 1a6c0 <__flatcc_fb_codegen_c@@Base+0x42bc>
   19e9c:	add	r2, pc, r2
   19ea0:	add	r1, pc, r1
   19ea4:	b	19b90 <__flatcc_fb_codegen_c@@Base+0x378c>
   19ea8:	ldr	r2, [pc, #2068]	; 1a6c4 <__flatcc_fb_codegen_c@@Base+0x42c0>
   19eac:	ldr	r1, [pc, #2068]	; 1a6c8 <__flatcc_fb_codegen_c@@Base+0x42c4>
   19eb0:	add	r2, pc, r2
   19eb4:	add	r1, pc, r1
   19eb8:	b	19b90 <__flatcc_fb_codegen_c@@Base+0x378c>
   19ebc:	ldr	r2, [pc, #2056]	; 1a6cc <__flatcc_fb_codegen_c@@Base+0x42c8>
   19ec0:	ldr	r1, [pc, #2056]	; 1a6d0 <__flatcc_fb_codegen_c@@Base+0x42cc>
   19ec4:	add	r2, pc, r2
   19ec8:	add	r1, pc, r1
   19ecc:	b	19b90 <__flatcc_fb_codegen_c@@Base+0x378c>
   19ed0:	ldr	r2, [pc, #2044]	; 1a6d4 <__flatcc_fb_codegen_c@@Base+0x42d0>
   19ed4:	ldr	r1, [pc, #2044]	; 1a6d8 <__flatcc_fb_codegen_c@@Base+0x42d4>
   19ed8:	add	r2, pc, r2
   19edc:	add	r1, pc, r1
   19ee0:	b	19b90 <__flatcc_fb_codegen_c@@Base+0x378c>
   19ee4:	ldr	r2, [pc, #2032]	; 1a6dc <__flatcc_fb_codegen_c@@Base+0x42d8>
   19ee8:	ldr	r1, [pc, #2032]	; 1a6e0 <__flatcc_fb_codegen_c@@Base+0x42dc>
   19eec:	add	r2, pc, r2
   19ef0:	add	r1, pc, r1
   19ef4:	b	19b90 <__flatcc_fb_codegen_c@@Base+0x378c>
   19ef8:	cmp	r3, #14
   19efc:	bne	1a528 <__flatcc_fb_codegen_c@@Base+0x4124>
   19f00:	ldr	r1, [r4, #16]
   19f04:	ldrh	r3, [r1, #8]
   19f08:	bic	r2, r3, #2
   19f0c:	cmp	r2, #1
   19f10:	bne	1a598 <__flatcc_fb_codegen_c@@Base+0x4194>
   19f14:	cmp	r3, #1
   19f18:	beq	1a0a0 <__flatcc_fb_codegen_c@@Base+0x3c9c>
   19f1c:	ldr	r6, [pc, #1984]	; 1a6e4 <__flatcc_fb_codegen_c@@Base+0x42e0>
   19f20:	add	r6, pc, r6
   19f24:	ldr	r0, [r1, #12]
   19f28:	ldr	r2, [sp, #40]	; 0x28
   19f2c:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   19f30:	cmp	r9, #0
   19f34:	beq	1a014 <__flatcc_fb_codegen_c@@Base+0x3c10>
   19f38:	ldr	r1, [pc, #1960]	; 1a6e8 <__flatcc_fb_codegen_c@@Base+0x42e4>
   19f3c:	mov	r3, r6
   19f40:	ldr	r2, [sp, #40]	; 0x28
   19f44:	ldr	r0, [r5, #204]	; 0xcc
   19f48:	add	r1, pc, r1
   19f4c:	bl	14064 <fprintf@plt>
   19f50:	b	19bac <__flatcc_fb_codegen_c@@Base+0x37a8>
   19f54:	ldrh	r3, [r4, #72]	; 0x48
   19f58:	tst	r3, #4
   19f5c:	beq	19b2c <__flatcc_fb_codegen_c@@Base+0x3728>
   19f60:	ldr	r1, [sp, #44]	; 0x2c
   19f64:	mov	r2, sl
   19f68:	str	r8, [sp, #4]
   19f6c:	str	r7, [sp, #8]
   19f70:	ldr	ip, [r4, #88]	; 0x58
   19f74:	mov	r3, r1
   19f78:	add	r1, r1, #1
   19f7c:	ldr	r0, [r5, #204]	; 0xcc
   19f80:	str	r1, [sp, #44]	; 0x2c
   19f84:	ldr	r1, [pc, #1888]	; 1a6ec <__flatcc_fb_codegen_c@@Base+0x42e8>
   19f88:	str	ip, [sp]
   19f8c:	add	r1, pc, r1
   19f90:	bl	14064 <fprintf@plt>
   19f94:	b	19bc4 <__flatcc_fb_codegen_c@@Base+0x37c0>
   19f98:	ldr	lr, [pc, #1872]	; 1a6f0 <__flatcc_fb_codegen_c@@Base+0x42ec>
   19f9c:	mov	ip, r5
   19fa0:	ldr	r0, [pc, #1868]	; 1a6f4 <__flatcc_fb_codegen_c@@Base+0x42f0>
   19fa4:	add	lr, pc, lr
   19fa8:	add	r0, pc, r0
   19fac:	mov	r3, r9
   19fb0:	mov	r2, r5
   19fb4:	str	r7, [sp]
   19fb8:	mov	r1, sl
   19fbc:	str	r6, [sp, #4]
   19fc0:	str	r5, [sp, #8]
   19fc4:	str	r0, [sp, #12]
   19fc8:	str	ip, [sp, #16]
   19fcc:	str	lr, [sp, #20]
   19fd0:	ldr	r0, [r5, #204]	; 0xcc
   19fd4:	bl	14064 <fprintf@plt>
   19fd8:	ldrh	r3, [r4, #72]	; 0x48
   19fdc:	tst	r3, #128	; 0x80
   19fe0:	beq	19dec <__flatcc_fb_codegen_c@@Base+0x39e8>
   19fe4:	cmp	r8, #0
   19fe8:	bne	19dec <__flatcc_fb_codegen_c@@Base+0x39e8>
   19fec:	mov	r1, #1
   19ff0:	mov	r2, #84	; 0x54
   19ff4:	ldr	r0, [sp, #32]
   19ff8:	ldr	r3, [r5, #204]	; 0xcc
   19ffc:	str	r1, [sp, #28]
   1a000:	bl	13fec <fwrite@plt>
   1a004:	ldr	r4, [r4]
   1a008:	cmp	r4, #0
   1a00c:	bne	19d4c <__flatcc_fb_codegen_c@@Base+0x3948>
   1a010:	b	19df8 <__flatcc_fb_codegen_c@@Base+0x39f4>
   1a014:	ldr	r1, [pc, #1756]	; 1a6f8 <__flatcc_fb_codegen_c@@Base+0x42f4>
   1a018:	mov	r2, sl
   1a01c:	str	r6, [sp]
   1a020:	ldr	r3, [sp, #40]	; 0x28
   1a024:	ldr	r0, [r5, #204]	; 0xcc
   1a028:	add	r1, pc, r1
   1a02c:	bl	14064 <fprintf@plt>
   1a030:	b	19bac <__flatcc_fb_codegen_c@@Base+0x37a8>
   1a034:	ldr	r0, [sp, #52]	; 0x34
   1a038:	ldr	r1, [pc, #1724]	; 1a6fc <__flatcc_fb_codegen_c@@Base+0x42f8>
   1a03c:	add	ip, r0, #1
   1a040:	mov	r2, r0
   1a044:	ldr	r0, [r5, #204]	; 0xcc
   1a048:	add	r1, pc, r1
   1a04c:	str	ip, [sp, #52]	; 0x34
   1a050:	bl	14064 <fprintf@plt>
   1a054:	ldrh	r3, [r4, #72]	; 0x48
   1a058:	tst	r3, #4
   1a05c:	beq	19b2c <__flatcc_fb_codegen_c@@Base+0x3728>
   1a060:	ldr	r1, [sp, #44]	; 0x2c
   1a064:	ldr	r3, [r4, #88]	; 0x58
   1a068:	str	r8, [sp]
   1a06c:	str	r7, [sp, #4]
   1a070:	mov	r2, r1
   1a074:	add	r1, r1, #1
   1a078:	ldr	r0, [r5, #204]	; 0xcc
   1a07c:	str	r1, [sp, #44]	; 0x2c
   1a080:	ldr	r1, [pc, #1656]	; 1a700 <__flatcc_fb_codegen_c@@Base+0x42fc>
   1a084:	add	r1, pc, r1
   1a088:	bl	14064 <fprintf@plt>
   1a08c:	b	19bc4 <__flatcc_fb_codegen_c@@Base+0x37c0>
   1a090:	ldr	r1, [pc, #1644]	; 1a704 <__flatcc_fb_codegen_c@@Base+0x4300>
   1a094:	mov	r2, r5
   1a098:	add	r1, pc, r1
   1a09c:	b	19b90 <__flatcc_fb_codegen_c@@Base+0x378c>
   1a0a0:	ldr	r6, [pc, #1632]	; 1a708 <__flatcc_fb_codegen_c@@Base+0x4304>
   1a0a4:	add	r6, pc, r6
   1a0a8:	b	19f24 <__flatcc_fb_codegen_c@@Base+0x3b20>
   1a0ac:	ldr	r3, [r4, #16]
   1a0b0:	cmp	r3, #5
   1a0b4:	beq	19f98 <__flatcc_fb_codegen_c@@Base+0x3b94>
   1a0b8:	sub	r3, r3, #1
   1a0bc:	cmp	r3, #10
   1a0c0:	addls	pc, pc, r3, lsl #2
   1a0c4:	b	1a608 <__flatcc_fb_codegen_c@@Base+0x4204>
   1a0c8:	b	1a3e4 <__flatcc_fb_codegen_c@@Base+0x3fe0>
   1a0cc:	b	1a3c8 <__flatcc_fb_codegen_c@@Base+0x3fc4>
   1a0d0:	b	1a3ac <__flatcc_fb_codegen_c@@Base+0x3fa8>
   1a0d4:	b	1a390 <__flatcc_fb_codegen_c@@Base+0x3f8c>
   1a0d8:	b	1a608 <__flatcc_fb_codegen_c@@Base+0x4204>
   1a0dc:	b	1a360 <__flatcc_fb_codegen_c@@Base+0x3f5c>
   1a0e0:	b	1a344 <__flatcc_fb_codegen_c@@Base+0x3f40>
   1a0e4:	b	1a328 <__flatcc_fb_codegen_c@@Base+0x3f24>
   1a0e8:	b	1a30c <__flatcc_fb_codegen_c@@Base+0x3f08>
   1a0ec:	b	1a2f8 <__flatcc_fb_codegen_c@@Base+0x3ef4>
   1a0f0:	b	1a37c <__flatcc_fb_codegen_c@@Base+0x3f78>
   1a0f4:	ldr	r1, [pc, #1552]	; 1a70c <__flatcc_fb_codegen_c@@Base+0x4308>
   1a0f8:	mov	r3, r9
   1a0fc:	mov	r2, r5
   1a100:	str	r7, [sp]
   1a104:	stmib	sp, {r6, fp}
   1a108:	ldr	r0, [r5, #204]	; 0xcc
   1a10c:	add	r1, pc, r1
   1a110:	bl	14064 <fprintf@plt>
   1a114:	ldrh	r3, [r4, #72]	; 0x48
   1a118:	b	19fdc <__flatcc_fb_codegen_c@@Base+0x3bd8>
   1a11c:	ldr	r1, [pc, #1516]	; 1a710 <__flatcc_fb_codegen_c@@Base+0x430c>
   1a120:	mov	r3, r9
   1a124:	mov	r2, r5
   1a128:	str	r7, [sp]
   1a12c:	stmib	sp, {r6, fp}
   1a130:	ldr	r0, [r5, #204]	; 0xcc
   1a134:	add	r1, pc, r1
   1a138:	bl	14064 <fprintf@plt>
   1a13c:	ldrh	r3, [r4, #72]	; 0x48
   1a140:	tst	r3, #128	; 0x80
   1a144:	beq	19dec <__flatcc_fb_codegen_c@@Base+0x39e8>
   1a148:	ldr	r3, [sp, #28]
   1a14c:	cmp	r3, #0
   1a150:	ldr	r3, [r5, #204]	; 0xcc
   1a154:	bne	1a400 <__flatcc_fb_codegen_c@@Base+0x3ffc>
   1a158:	ldr	r0, [pc, #1460]	; 1a714 <__flatcc_fb_codegen_c@@Base+0x4310>
   1a15c:	mov	r2, #61	; 0x3d
   1a160:	mov	r1, #1
   1a164:	add	r0, pc, r0
   1a168:	bl	13fec <fwrite@plt>
   1a16c:	ldr	r1, [pc, #1444]	; 1a718 <__flatcc_fb_codegen_c@@Base+0x4314>
   1a170:	mov	r3, r9
   1a174:	mov	r2, r5
   1a178:	str	r7, [sp]
   1a17c:	stmib	sp, {r6, fp}
   1a180:	ldr	r0, [r5, #204]	; 0xcc
   1a184:	add	r1, pc, r1
   1a188:	bl	14064 <fprintf@plt>
   1a18c:	ldr	r3, [r5, #212]	; 0xd4
   1a190:	ldr	r3, [r3, #136]	; 0x88
   1a194:	cmp	r3, #0
   1a198:	beq	1a1c0 <__flatcc_fb_codegen_c@@Base+0x3dbc>
   1a19c:	ldr	r1, [pc, #1400]	; 1a71c <__flatcc_fb_codegen_c@@Base+0x4318>
   1a1a0:	mov	r3, r9
   1a1a4:	mov	r2, r5
   1a1a8:	str	r7, [sp]
   1a1ac:	stmib	sp, {r6, fp}
   1a1b0:	str	r9, [sp, #12]
   1a1b4:	ldr	r0, [r5, #204]	; 0xcc
   1a1b8:	add	r1, pc, r1
   1a1bc:	bl	14064 <fprintf@plt>
   1a1c0:	ldr	r1, [pc, #1368]	; 1a720 <__flatcc_fb_codegen_c@@Base+0x431c>
   1a1c4:	mov	r3, r9
   1a1c8:	mov	r2, r5
   1a1cc:	str	r7, [sp]
   1a1d0:	stmib	sp, {r6, fp}
   1a1d4:	ldr	r0, [r5, #204]	; 0xcc
   1a1d8:	add	r1, pc, r1
   1a1dc:	bl	14064 <fprintf@plt>
   1a1e0:	ldr	r1, [pc, #1340]	; 1a724 <__flatcc_fb_codegen_c@@Base+0x4320>
   1a1e4:	mov	r3, r9
   1a1e8:	mov	r2, r5
   1a1ec:	str	r7, [sp]
   1a1f0:	stmib	sp, {r6, fp}
   1a1f4:	ldr	r0, [r5, #204]	; 0xcc
   1a1f8:	add	r1, pc, r1
   1a1fc:	bl	14064 <fprintf@plt>
   1a200:	ldr	r3, [r5, #212]	; 0xd4
   1a204:	ldr	r3, [r3, #136]	; 0x88
   1a208:	cmp	r3, #0
   1a20c:	bne	1a4f8 <__flatcc_fb_codegen_c@@Base+0x40f4>
   1a210:	ldr	r4, [r4]
   1a214:	mov	r3, #1
   1a218:	mov	r8, r3
   1a21c:	str	r3, [sp, #28]
   1a220:	cmp	r4, #0
   1a224:	bne	19d4c <__flatcc_fb_codegen_c@@Base+0x3948>
   1a228:	b	19df8 <__flatcc_fb_codegen_c@@Base+0x39f4>
   1a22c:	ldr	r0, [pc, #1268]	; 1a728 <__flatcc_fb_codegen_c@@Base+0x4324>
   1a230:	mov	r2, #3
   1a234:	mov	r1, #1
   1a238:	ldr	r3, [r5, #204]	; 0xcc
   1a23c:	add	r0, pc, r0
   1a240:	bl	13fec <fwrite@plt>
   1a244:	b	19c28 <__flatcc_fb_codegen_c@@Base+0x3824>
   1a248:	ldr	r1, [pc, #1244]	; 1a72c <__flatcc_fb_codegen_c@@Base+0x4328>
   1a24c:	ldr	r4, [sp, #56]	; 0x38
   1a250:	add	r1, pc, r1
   1a254:	mov	r2, r4
   1a258:	bl	14064 <fprintf@plt>
   1a25c:	ldr	r1, [pc, #1228]	; 1a730 <__flatcc_fb_codegen_c@@Base+0x432c>
   1a260:	mov	r3, r4
   1a264:	mov	r2, r4
   1a268:	str	r4, [sp]
   1a26c:	ldr	r0, [r5, #204]	; 0xcc
   1a270:	add	r1, pc, r1
   1a274:	bl	14064 <fprintf@plt>
   1a278:	ldr	r1, [pc, #1204]	; 1a734 <__flatcc_fb_codegen_c@@Base+0x4330>
   1a27c:	mov	r3, r4
   1a280:	mov	r2, r4
   1a284:	str	r4, [sp]
   1a288:	ldr	r0, [r5, #204]	; 0xcc
   1a28c:	add	r1, pc, r1
   1a290:	bl	14064 <fprintf@plt>
   1a294:	ldr	r1, [pc, #1180]	; 1a738 <__flatcc_fb_codegen_c@@Base+0x4334>
   1a298:	mov	r3, r4
   1a29c:	mov	r2, r4
   1a2a0:	str	r4, [sp]
   1a2a4:	ldr	r0, [r5, #204]	; 0xcc
   1a2a8:	add	r1, pc, r1
   1a2ac:	bl	14064 <fprintf@plt>
   1a2b0:	b	19ca0 <__flatcc_fb_codegen_c@@Base+0x389c>
   1a2b4:	mov	r3, r0
   1a2b8:	ldr	r0, [pc, #1148]	; 1a73c <__flatcc_fb_codegen_c@@Base+0x4338>
   1a2bc:	mov	r2, #16
   1a2c0:	mov	r1, #1
   1a2c4:	add	r0, pc, r0
   1a2c8:	bl	13fec <fwrite@plt>
   1a2cc:	ldr	r1, [pc, #1132]	; 1a740 <__flatcc_fb_codegen_c@@Base+0x433c>
   1a2d0:	ldr	r2, [sp, #56]	; 0x38
   1a2d4:	ldr	r0, [r5, #204]	; 0xcc
   1a2d8:	add	r1, pc, r1
   1a2dc:	bl	14064 <fprintf@plt>
   1a2e0:	ldr	r4, [fp, #20]
   1a2e4:	cmp	r4, #0
   1a2e8:	bne	19a10 <__flatcc_fb_codegen_c@@Base+0x360c>
   1a2ec:	mov	r6, r4
   1a2f0:	str	r4, [sp, #52]	; 0x34
   1a2f4:	b	19be8 <__flatcc_fb_codegen_c@@Base+0x37e4>
   1a2f8:	ldr	ip, [pc, #1092]	; 1a744 <__flatcc_fb_codegen_c@@Base+0x4340>
   1a2fc:	ldr	r0, [sp, #36]	; 0x24
   1a300:	add	ip, pc, ip
   1a304:	mov	lr, r0
   1a308:	b	19fac <__flatcc_fb_codegen_c@@Base+0x3ba8>
   1a30c:	ldr	lr, [pc, #1076]	; 1a748 <__flatcc_fb_codegen_c@@Base+0x4344>
   1a310:	ldr	ip, [pc, #1076]	; 1a74c <__flatcc_fb_codegen_c@@Base+0x4348>
   1a314:	ldr	r0, [pc, #1076]	; 1a750 <__flatcc_fb_codegen_c@@Base+0x434c>
   1a318:	add	lr, pc, lr
   1a31c:	add	ip, pc, ip
   1a320:	add	r0, pc, r0
   1a324:	b	19fac <__flatcc_fb_codegen_c@@Base+0x3ba8>
   1a328:	ldr	lr, [pc, #1060]	; 1a754 <__flatcc_fb_codegen_c@@Base+0x4350>
   1a32c:	ldr	ip, [pc, #1060]	; 1a758 <__flatcc_fb_codegen_c@@Base+0x4354>
   1a330:	ldr	r0, [pc, #1060]	; 1a75c <__flatcc_fb_codegen_c@@Base+0x4358>
   1a334:	add	lr, pc, lr
   1a338:	add	ip, pc, ip
   1a33c:	add	r0, pc, r0
   1a340:	b	19fac <__flatcc_fb_codegen_c@@Base+0x3ba8>
   1a344:	ldr	lr, [pc, #1044]	; 1a760 <__flatcc_fb_codegen_c@@Base+0x435c>
   1a348:	ldr	ip, [pc, #1044]	; 1a764 <__flatcc_fb_codegen_c@@Base+0x4360>
   1a34c:	ldr	r0, [pc, #1044]	; 1a768 <__flatcc_fb_codegen_c@@Base+0x4364>
   1a350:	add	lr, pc, lr
   1a354:	add	ip, pc, ip
   1a358:	add	r0, pc, r0
   1a35c:	b	19fac <__flatcc_fb_codegen_c@@Base+0x3ba8>
   1a360:	ldr	lr, [pc, #1028]	; 1a76c <__flatcc_fb_codegen_c@@Base+0x4368>
   1a364:	ldr	ip, [pc, #1028]	; 1a770 <__flatcc_fb_codegen_c@@Base+0x436c>
   1a368:	ldr	r0, [pc, #1028]	; 1a774 <__flatcc_fb_codegen_c@@Base+0x4370>
   1a36c:	add	lr, pc, lr
   1a370:	add	ip, pc, ip
   1a374:	add	r0, pc, r0
   1a378:	b	19fac <__flatcc_fb_codegen_c@@Base+0x3ba8>
   1a37c:	ldr	ip, [pc, #1012]	; 1a778 <__flatcc_fb_codegen_c@@Base+0x4374>
   1a380:	ldr	r0, [sp, #44]	; 0x2c
   1a384:	add	ip, pc, ip
   1a388:	mov	lr, r0
   1a38c:	b	19fac <__flatcc_fb_codegen_c@@Base+0x3ba8>
   1a390:	ldr	lr, [pc, #996]	; 1a77c <__flatcc_fb_codegen_c@@Base+0x4378>
   1a394:	ldr	ip, [pc, #996]	; 1a780 <__flatcc_fb_codegen_c@@Base+0x437c>
   1a398:	ldr	r0, [pc, #996]	; 1a784 <__flatcc_fb_codegen_c@@Base+0x4380>
   1a39c:	add	lr, pc, lr
   1a3a0:	add	ip, pc, ip
   1a3a4:	add	r0, pc, r0
   1a3a8:	b	19fac <__flatcc_fb_codegen_c@@Base+0x3ba8>
   1a3ac:	ldr	lr, [pc, #980]	; 1a788 <__flatcc_fb_codegen_c@@Base+0x4384>
   1a3b0:	ldr	ip, [pc, #980]	; 1a78c <__flatcc_fb_codegen_c@@Base+0x4388>
   1a3b4:	ldr	r0, [pc, #980]	; 1a790 <__flatcc_fb_codegen_c@@Base+0x438c>
   1a3b8:	add	lr, pc, lr
   1a3bc:	add	ip, pc, ip
   1a3c0:	add	r0, pc, r0
   1a3c4:	b	19fac <__flatcc_fb_codegen_c@@Base+0x3ba8>
   1a3c8:	ldr	lr, [pc, #964]	; 1a794 <__flatcc_fb_codegen_c@@Base+0x4390>
   1a3cc:	ldr	ip, [pc, #964]	; 1a798 <__flatcc_fb_codegen_c@@Base+0x4394>
   1a3d0:	ldr	r0, [pc, #964]	; 1a79c <__flatcc_fb_codegen_c@@Base+0x4398>
   1a3d4:	add	lr, pc, lr
   1a3d8:	add	ip, pc, ip
   1a3dc:	add	r0, pc, r0
   1a3e0:	b	19fac <__flatcc_fb_codegen_c@@Base+0x3ba8>
   1a3e4:	ldr	lr, [pc, #948]	; 1a7a0 <__flatcc_fb_codegen_c@@Base+0x439c>
   1a3e8:	ldr	ip, [pc, #948]	; 1a7a4 <__flatcc_fb_codegen_c@@Base+0x43a0>
   1a3ec:	ldr	r0, [pc, #948]	; 1a7a8 <__flatcc_fb_codegen_c@@Base+0x43a4>
   1a3f0:	add	lr, pc, lr
   1a3f4:	add	ip, pc, ip
   1a3f8:	add	r0, pc, r0
   1a3fc:	b	19fac <__flatcc_fb_codegen_c@@Base+0x3ba8>
   1a400:	ldr	r0, [pc, #932]	; 1a7ac <__flatcc_fb_codegen_c@@Base+0x43a8>
   1a404:	mov	r2, #66	; 0x42
   1a408:	mov	r1, #1
   1a40c:	add	r0, pc, r0
   1a410:	bl	13fec <fwrite@plt>
   1a414:	ldr	r0, [pc, #916]	; 1a7b0 <__flatcc_fb_codegen_c@@Base+0x43ac>
   1a418:	mov	r2, #61	; 0x3d
   1a41c:	mov	r1, #1
   1a420:	ldr	r3, [r5, #204]	; 0xcc
   1a424:	add	r0, pc, r0
   1a428:	bl	13fec <fwrite@plt>
   1a42c:	ldr	r1, [pc, #896]	; 1a7b4 <__flatcc_fb_codegen_c@@Base+0x43b0>
   1a430:	mov	r3, r9
   1a434:	mov	r2, r5
   1a438:	str	r7, [sp]
   1a43c:	stmib	sp, {r6, fp}
   1a440:	ldr	r0, [r5, #204]	; 0xcc
   1a444:	add	r1, pc, r1
   1a448:	bl	14064 <fprintf@plt>
   1a44c:	ldr	r3, [r5, #212]	; 0xd4
   1a450:	ldr	r3, [r3, #136]	; 0x88
   1a454:	cmp	r3, #0
   1a458:	beq	1a210 <__flatcc_fb_codegen_c@@Base+0x3e0c>
   1a45c:	ldr	r1, [pc, #852]	; 1a7b8 <__flatcc_fb_codegen_c@@Base+0x43b4>
   1a460:	mov	r3, r9
   1a464:	mov	r2, r5
   1a468:	str	r7, [sp]
   1a46c:	stmib	sp, {r6, fp}
   1a470:	str	r9, [sp, #12]
   1a474:	ldr	r0, [r5, #204]	; 0xcc
   1a478:	add	r1, pc, r1
   1a47c:	ldr	r8, [sp, #28]
   1a480:	bl	14064 <fprintf@plt>
   1a484:	b	19dec <__flatcc_fb_codegen_c@@Base+0x39e8>
   1a488:	ldr	r1, [pc, #812]	; 1a7bc <__flatcc_fb_codegen_c@@Base+0x43b8>
   1a48c:	ldr	r2, [sp, #52]	; 0x34
   1a490:	add	r1, pc, r1
   1a494:	bl	14064 <fprintf@plt>
   1a498:	ldr	r0, [r5, #204]	; 0xcc
   1a49c:	b	19bf8 <__flatcc_fb_codegen_c@@Base+0x37f4>
   1a4a0:	ldr	r2, [pc, #792]	; 1a7c0 <__flatcc_fb_codegen_c@@Base+0x43bc>
   1a4a4:	mov	r3, #141	; 0x8d
   1a4a8:	ldr	r1, [sp, #60]	; 0x3c
   1a4ac:	ldr	r0, [pc, #784]	; 1a7c4 <__flatcc_fb_codegen_c@@Base+0x43c0>
   1a4b0:	ldr	r4, [pc, #784]	; 1a7c8 <__flatcc_fb_codegen_c@@Base+0x43c4>
   1a4b4:	ldr	ip, [r1, r2]
   1a4b8:	add	r0, pc, r0
   1a4bc:	ldr	r1, [pc, #776]	; 1a7cc <__flatcc_fb_codegen_c@@Base+0x43c8>
   1a4c0:	add	r4, pc, r4
   1a4c4:	str	r0, [sp]
   1a4c8:	mov	r2, r4
   1a4cc:	ldr	r0, [ip]
   1a4d0:	add	r1, pc, r1
   1a4d4:	bl	14064 <fprintf@plt>
   1a4d8:	ldr	r3, [pc, #752]	; 1a7d0 <__flatcc_fb_codegen_c@@Base+0x43cc>
   1a4dc:	mov	r1, r4
   1a4e0:	mov	r2, #141	; 0x8d
   1a4e4:	ldr	r0, [pc, #744]	; 1a7d4 <__flatcc_fb_codegen_c@@Base+0x43d0>
   1a4e8:	add	r3, pc, r3
   1a4ec:	add	r3, r3, #20
   1a4f0:	add	r0, pc, r0
   1a4f4:	bl	14118 <__assert_fail@plt>
   1a4f8:	ldr	r1, [pc, #728]	; 1a7d8 <__flatcc_fb_codegen_c@@Base+0x43d4>
   1a4fc:	mov	r0, #1
   1a500:	mov	r3, r9
   1a504:	mov	r8, r0
   1a508:	mov	r2, r9
   1a50c:	str	r7, [sp]
   1a510:	str	r6, [sp, #4]
   1a514:	str	r0, [sp, #28]
   1a518:	ldr	r0, [r5, #204]	; 0xcc
   1a51c:	add	r1, pc, r1
   1a520:	bl	14064 <fprintf@plt>
   1a524:	b	19dec <__flatcc_fb_codegen_c@@Base+0x39e8>
   1a528:	ldr	r2, [pc, #684]	; 1a7dc <__flatcc_fb_codegen_c@@Base+0x43d8>
   1a52c:	ldr	r1, [pc, #684]	; 1a7e0 <__flatcc_fb_codegen_c@@Base+0x43dc>
   1a530:	ldr	r0, [r5, #204]	; 0xcc
   1a534:	add	r2, pc, r2
   1a538:	ldr	r4, [pc, #676]	; 1a7e4 <__flatcc_fb_codegen_c@@Base+0x43e0>
   1a53c:	add	r1, pc, r1
   1a540:	bl	14064 <fprintf@plt>
   1a544:	ldr	r2, [pc, #628]	; 1a7c0 <__flatcc_fb_codegen_c@@Base+0x43bc>
   1a548:	movw	r3, #1029	; 0x405
   1a54c:	ldr	r1, [sp, #60]	; 0x3c
   1a550:	add	r4, pc, r4
   1a554:	ldr	r0, [pc, #652]	; 1a7e8 <__flatcc_fb_codegen_c@@Base+0x43e4>
   1a558:	ldr	ip, [r1, r2]
   1a55c:	mov	r2, r4
   1a560:	ldr	r1, [pc, #644]	; 1a7ec <__flatcc_fb_codegen_c@@Base+0x43e8>
   1a564:	add	r0, pc, r0
   1a568:	str	r0, [sp]
   1a56c:	ldr	r0, [ip]
   1a570:	add	r1, pc, r1
   1a574:	bl	14064 <fprintf@plt>
   1a578:	ldr	r3, [pc, #624]	; 1a7f0 <__flatcc_fb_codegen_c@@Base+0x43ec>
   1a57c:	mov	r1, r4
   1a580:	movw	r2, #1029	; 0x405
   1a584:	ldr	r0, [pc, #616]	; 1a7f4 <__flatcc_fb_codegen_c@@Base+0x43f0>
   1a588:	add	r3, pc, r3
   1a58c:	add	r3, r3, #152	; 0x98
   1a590:	add	r0, pc, r0
   1a594:	bl	14118 <__assert_fail@plt>
   1a598:	ldr	r3, [pc, #600]	; 1a7f8 <__flatcc_fb_codegen_c@@Base+0x43f4>
   1a59c:	movw	r2, #1018	; 0x3fa
   1a5a0:	ldr	r1, [pc, #596]	; 1a7fc <__flatcc_fb_codegen_c@@Base+0x43f8>
   1a5a4:	ldr	r0, [pc, #596]	; 1a800 <__flatcc_fb_codegen_c@@Base+0x43fc>
   1a5a8:	add	r3, pc, r3
   1a5ac:	add	r3, r3, #152	; 0x98
   1a5b0:	add	r1, pc, r1
   1a5b4:	add	r0, pc, r0
   1a5b8:	bl	14118 <__assert_fail@plt>
   1a5bc:	ldr	r3, [pc, #576]	; 1a804 <__flatcc_fb_codegen_c@@Base+0x4400>
   1a5c0:	mov	r2, #936	; 0x3a8
   1a5c4:	ldr	r1, [pc, #572]	; 1a808 <__flatcc_fb_codegen_c@@Base+0x4404>
   1a5c8:	ldr	r0, [pc, #572]	; 1a80c <__flatcc_fb_codegen_c@@Base+0x4408>
   1a5cc:	add	r3, pc, r3
   1a5d0:	add	r3, r3, #152	; 0x98
   1a5d4:	add	r1, pc, r1
   1a5d8:	add	r0, pc, r0
   1a5dc:	bl	14118 <__assert_fail@plt>
   1a5e0:	ldr	r3, [pc, #552]	; 1a810 <__flatcc_fb_codegen_c@@Base+0x440c>
   1a5e4:	movw	r2, #938	; 0x3aa
   1a5e8:	ldr	r1, [pc, #548]	; 1a814 <__flatcc_fb_codegen_c@@Base+0x4410>
   1a5ec:	ldr	r0, [pc, #548]	; 1a818 <__flatcc_fb_codegen_c@@Base+0x4414>
   1a5f0:	add	r3, pc, r3
   1a5f4:	add	r3, r3, #152	; 0x98
   1a5f8:	add	r1, pc, r1
   1a5fc:	add	r0, pc, r0
   1a600:	bl	14118 <__assert_fail@plt>
   1a604:	bl	16830 <__flatcc_fb_codegen_c@@Base+0x42c>
   1a608:	bl	167b0 <__flatcc_fb_codegen_c@@Base+0x3ac>
   1a60c:	andeq	r3, r5, r8, lsl #15
   1a610:	andeq	r2, r3, ip, lsr #5
   1a614:	andeq	r8, r2, r4, ror #13
   1a618:	andeq	r2, r3, r4, lsr #5
   1a61c:	andeq	r8, r2, r8, asr #13
   1a620:	andeq	r0, r3, r8, asr #19
   1a624:	andeq	r8, r2, r8, asr #2
   1a628:	andeq	r8, r2, r0, lsl #4
   1a62c:	muleq	r2, ip, r2
   1a630:	andeq	r8, r2, r8, lsr #29
   1a634:	strdeq	r9, [r2], -ip
   1a638:	andeq	r9, r2, r4, ror #7
   1a63c:	andeq	r8, r2, r4, asr #11
   1a640:	andeq	r9, r2, ip, asr #7
   1a644:	andeq	r0, r3, r0, asr #17
   1a648:	andeq	r8, r2, ip, ror r5
   1a64c:	muleq	r2, r0, sp
   1a650:	andeq	r2, r3, r0, lsr r0
   1a654:	andeq	r8, r2, r4, asr r3
   1a658:	andeq	r9, r2, ip, lsl #5
   1a65c:	andeq	r9, r2, r0, asr #6
   1a660:	andeq	r0, r3, ip, asr #26
   1a664:	andeq	r9, r2, r8, lsl #11
   1a668:	ldrdeq	r9, [r2], -r0
   1a66c:	andeq	r9, r2, r8, ror #5
   1a670:	andeq	r9, r2, r4, lsr #6
   1a674:	andeq	r9, r2, ip, asr #6
   1a678:	muleq	r2, r0, r3
   1a67c:	andeq	r8, r2, r4, asr r3
   1a680:	andeq	r9, r2, r4, lsl #7
   1a684:			; <UNDEFINED> instruction: 0x000281bc
   1a688:	andeq	r8, r2, r0, lsl #22
   1a68c:	andeq	r9, r2, r4, asr r3
   1a690:	andeq	r8, r2, r4, lsr r1
   1a694:	strdeq	r9, [r2], -r8
   1a698:	andeq	r1, r3, r8, lsl #27
   1a69c:	strheq	r8, [r2], -r4
   1a6a0:	strdeq	r8, [r2], -r0
   1a6a4:	andeq	r1, r3, r8, asr sp
   1a6a8:	andeq	r8, r2, ip, rrx
   1a6ac:	andeq	r1, r3, r4, asr #26
   1a6b0:	andeq	r8, r2, r8, asr #32
   1a6b4:	andeq	r1, r3, r0, lsr sp
   1a6b8:	andeq	r7, r2, r8, asr #31
   1a6bc:	andeq	r1, r3, ip, lsl sp
   1a6c0:	ldrdeq	r7, [r2], -r8
   1a6c4:	andeq	r1, r3, r8, lsl #26
   1a6c8:	strdeq	r7, [r2], -ip
   1a6cc:	strdeq	r1, [r3], -r4
   1a6d0:			; <UNDEFINED> instruction: 0x00027fb8
   1a6d4:	andeq	r1, r3, r0, ror #25
   1a6d8:			; <UNDEFINED> instruction: 0x00027fb8
   1a6dc:	andeq	r1, r3, ip, asr #25
   1a6e0:	andeq	r7, r2, r4, ror pc
   1a6e4:	andeq	r8, r2, r0, lsl sp
   1a6e8:	andeq	r8, r2, r8, ror #30
   1a6ec:	ldrdeq	r9, [r2], -ip
   1a6f0:	andeq	r7, r2, r4, lsl #30
   1a6f4:	andeq	pc, r3, r0, ror fp	; <UNPREDICTABLE>
   1a6f8:	muleq	r2, r4, lr
   1a6fc:	andeq	r8, r2, r8, asr #27
   1a700:	strheq	r9, [r2], -r0
   1a704:	andeq	r7, r2, r0, lsl lr
   1a708:	andeq	r1, r3, r4, lsl fp
   1a70c:	strdeq	r8, [r2], -r0
   1a710:	andeq	r8, r2, r0, lsl #9
   1a714:	muleq	r2, r0, r0
   1a718:	andeq	r8, r2, r8, ror #8
   1a71c:	andeq	r9, r2, r0
   1a720:	andeq	r8, r2, ip, asr #8
   1a724:	andeq	r8, r2, ip, ror #8
   1a728:	andeq	r0, r3, r8, lsl r7
   1a72c:	andeq	r8, r2, r8, asr #20
   1a730:	andeq	r8, r2, ip, lsl #21
   1a734:	andeq	r8, r2, r4, asr #21
   1a738:	andeq	r8, r2, ip, ror #21
   1a73c:	andeq	r8, r2, r0, lsr #22
   1a740:	andeq	r8, r2, r0, lsr #22
   1a744:			; <UNDEFINED> instruction: 0x000318b8
   1a748:	ldrdeq	r7, [r2], -r0
   1a74c:	muleq	r3, ip, r8
   1a750:	ldrdeq	r7, [r2], -r0
   1a754:	andeq	r7, r2, r0, lsr #22
   1a758:	andeq	r1, r3, r0, lsl #17
   1a75c:	andeq	r7, r2, r0, lsr #22
   1a760:	andeq	r7, r2, r0, lsl #23
   1a764:	andeq	r1, r3, r4, ror #16
   1a768:	andeq	r7, r2, r0, lsl #23
   1a76c:	andeq	r7, r2, r4, asr fp
   1a770:	andeq	r1, r3, r8, asr #16
   1a774:	andeq	r7, r2, r4, asr fp
   1a778:	andeq	r1, r3, r4, lsr r8
   1a77c:	andeq	r7, r2, r4, lsl fp
   1a780:	andeq	r1, r3, r8, lsl r8
   1a784:	andeq	r7, r2, r4, lsl fp
   1a788:	andeq	r7, r2, r8, asr #21
   1a78c:	strdeq	r1, [r3], -ip
   1a790:	andeq	r7, r2, ip, asr #21
   1a794:	andeq	r7, r2, r0, asr #21
   1a798:	andeq	r1, r3, r0, ror #15
   1a79c:	andeq	r7, r2, r4, asr #21
   1a7a0:	andeq	r7, r2, r4, ror sl
   1a7a4:	andeq	r1, r3, r4, asr #15
   1a7a8:	andeq	r7, r2, r8, ror sl
   1a7ac:	andeq	r7, r2, r4, lsr #27
   1a7b0:	ldrdeq	r7, [r2], -r0
   1a7b4:	andeq	r8, r2, r8, lsr #3
   1a7b8:	andeq	r8, r2, r0, asr #26
   1a7bc:	andeq	r8, r2, r0, lsl #19
   1a7c0:	andeq	r0, r0, r0, lsr #1
   1a7c4:	andeq	r7, r2, r4, ror #18
   1a7c8:	strdeq	r7, [r2], -r0
   1a7cc:	andeq	r7, r2, r0, asr #18
   1a7d0:	andeq	r7, r2, r0, lsl r6
   1a7d4:	andeq	pc, r2, r4, asr #28
   1a7d8:	andeq	r7, r2, r4, asr #27
   1a7dc:	andeq	r8, r2, r0, lsr #19
   1a7e0:			; <UNDEFINED> instruction: 0x000289b8
   1a7e4:	andeq	r7, r2, r8, ror #12
   1a7e8:			; <UNDEFINED> instruction: 0x000278b8
   1a7ec:	andeq	r7, r2, r0, lsr #17
   1a7f0:	andeq	r7, r2, r0, ror r5
   1a7f4:	andeq	pc, r2, r4, lsr #27
   1a7f8:	andeq	r7, r2, r0, asr r5
   1a7fc:	andeq	r7, r2, r8, lsl #12
   1a800:	andeq	r8, r2, r0, lsr #17
   1a804:	andeq	r7, r2, ip, lsr #10
   1a808:	andeq	r7, r2, r4, ror #11
   1a80c:	andeq	r8, r2, r0, ror #12
   1a810:	andeq	r7, r2, r8, lsl #10
   1a814:	andeq	r7, r2, r0, asr #11
   1a818:	andeq	r8, r2, ip, ror r6

0001a81c <__flatcc_fb_gen_common_c_header@@Base>:
   1a81c:	ldr	r1, [pc, #3176]	; 1b48c <__flatcc_fb_gen_common_c_header@@Base+0xc70>
   1a820:	strd	r4, [sp, #-12]!
   1a824:	add	r5, r0, #102	; 0x66
   1a828:	mov	r4, r0
   1a82c:	mov	r3, r5
   1a830:	mov	r2, r5
   1a834:	ldr	r0, [r0, #204]	; 0xcc
   1a838:	str	lr, [sp, #8]
   1a83c:	sub	sp, sp, #236	; 0xec
   1a840:	add	r1, pc, r1
   1a844:	bl	14064 <fprintf@plt>
   1a848:	ldr	r0, [pc, #3136]	; 1b490 <__flatcc_fb_gen_common_c_header@@Base+0xc74>
   1a84c:	mov	r2, #81	; 0x51
   1a850:	mov	r1, #1
   1a854:	ldr	r3, [r4, #204]	; 0xcc
   1a858:	add	r0, pc, r0
   1a85c:	bl	13fec <fwrite@plt>
   1a860:	ldr	r0, [pc, #3116]	; 1b494 <__flatcc_fb_gen_common_c_header@@Base+0xc78>
   1a864:	mov	r2, #52	; 0x34
   1a868:	mov	r1, #1
   1a86c:	ldr	r3, [r4, #204]	; 0xcc
   1a870:	add	r0, pc, r0
   1a874:	bl	13fec <fwrite@plt>
   1a878:	ldr	r3, [r4, #212]	; 0xd4
   1a87c:	ldr	r2, [r3, #136]	; 0x88
   1a880:	cmp	r2, #0
   1a884:	beq	1b46c <__flatcc_fb_gen_common_c_header@@Base+0xc50>
   1a888:	ldr	r2, [r3, #140]	; 0x8c
   1a88c:	ldr	r3, [r4, #204]	; 0xcc
   1a890:	cmp	r2, #0
   1a894:	bne	1b450 <__flatcc_fb_gen_common_c_header@@Base+0xc34>
   1a898:	ldr	r0, [pc, #3064]	; 1b498 <__flatcc_fb_gen_common_c_header@@Base+0xc7c>
   1a89c:	mov	r2, #41	; 0x29
   1a8a0:	mov	r1, #1
   1a8a4:	add	r0, pc, r0
   1a8a8:	bl	13fec <fwrite@plt>
   1a8ac:	ldr	r1, [pc, #3048]	; 1b49c <__flatcc_fb_gen_common_c_header@@Base+0xc80>
   1a8b0:	mov	r0, r4
   1a8b4:	add	r1, pc, r1
   1a8b8:	bl	13f8c <strcmp@plt>
   1a8bc:	cmp	r0, #0
   1a8c0:	bne	1b3c8 <__flatcc_fb_gen_common_c_header@@Base+0xbac>
   1a8c4:	ldr	r1, [pc, #3028]	; 1b4a0 <__flatcc_fb_gen_common_c_header@@Base+0xc84>
   1a8c8:	mov	r3, r4
   1a8cc:	mov	r2, r4
   1a8d0:	ldr	r0, [r4, #204]	; 0xcc
   1a8d4:	add	r1, pc, r1
   1a8d8:	bl	14064 <fprintf@plt>
   1a8dc:	ldr	r1, [pc, #3008]	; 1b4a4 <__flatcc_fb_gen_common_c_header@@Base+0xc88>
   1a8e0:	mov	r3, r4
   1a8e4:	mov	r2, r4
   1a8e8:	str	r4, [sp]
   1a8ec:	str	r4, [sp, #4]
   1a8f0:	str	r4, [sp, #8]
   1a8f4:	str	r4, [sp, #12]
   1a8f8:	add	r1, pc, r1
   1a8fc:	str	r4, [sp, #16]
   1a900:	ldr	r0, [r4, #204]	; 0xcc
   1a904:	bl	14064 <fprintf@plt>
   1a908:	ldr	r1, [pc, #2968]	; 1b4a8 <__flatcc_fb_gen_common_c_header@@Base+0xc8c>
   1a90c:	mov	r3, r4
   1a910:	mov	r2, r4
   1a914:	ldr	r0, [r4, #204]	; 0xcc
   1a918:	add	r1, pc, r1
   1a91c:	bl	14064 <fprintf@plt>
   1a920:	ldr	r1, [pc, #2948]	; 1b4ac <__flatcc_fb_gen_common_c_header@@Base+0xc90>
   1a924:	mov	r3, r4
   1a928:	mov	r2, r4
   1a92c:	str	r4, [sp]
   1a930:	str	r4, [sp, #4]
   1a934:	ldr	r0, [r4, #204]	; 0xcc
   1a938:	add	r1, pc, r1
   1a93c:	bl	14064 <fprintf@plt>
   1a940:	ldr	r3, [r4, #212]	; 0xd4
   1a944:	ldr	r3, [r3, #32]
   1a948:	cmp	r3, #0
   1a94c:	beq	1b380 <__flatcc_fb_gen_common_c_header@@Base+0xb64>
   1a950:	ldr	r1, [pc, #2904]	; 1b4b0 <__flatcc_fb_gen_common_c_header@@Base+0xc94>
   1a954:	mov	r2, r4
   1a958:	ldr	r0, [r4, #204]	; 0xcc
   1a95c:	add	r1, pc, r1
   1a960:	bl	14064 <fprintf@plt>
   1a964:	ldr	r1, [pc, #2888]	; 1b4b4 <__flatcc_fb_gen_common_c_header@@Base+0xc98>
   1a968:	mov	r3, r4
   1a96c:	mov	r2, r4
   1a970:	ldr	r0, [r4, #204]	; 0xcc
   1a974:	add	r1, pc, r1
   1a978:	bl	14064 <fprintf@plt>
   1a97c:	ldr	r1, [pc, #2868]	; 1b4b8 <__flatcc_fb_gen_common_c_header@@Base+0xc9c>
   1a980:	mov	r3, r4
   1a984:	mov	r2, r4
   1a988:	str	r4, [sp]
   1a98c:	str	r4, [sp, #4]
   1a990:	str	r4, [sp, #8]
   1a994:	ldr	r0, [r4, #204]	; 0xcc
   1a998:	add	r1, pc, r1
   1a99c:	bl	14064 <fprintf@plt>
   1a9a0:	ldr	r1, [pc, #2836]	; 1b4bc <__flatcc_fb_gen_common_c_header@@Base+0xca0>
   1a9a4:	mov	r3, r4
   1a9a8:	mov	r2, r4
   1a9ac:	str	r4, [sp]
   1a9b0:	str	r4, [sp, #4]
   1a9b4:	str	r4, [sp, #8]
   1a9b8:	ldr	r0, [r4, #204]	; 0xcc
   1a9bc:	add	r1, pc, r1
   1a9c0:	bl	14064 <fprintf@plt>
   1a9c4:	ldr	r1, [pc, #2804]	; 1b4c0 <__flatcc_fb_gen_common_c_header@@Base+0xca4>
   1a9c8:	mov	r3, r4
   1a9cc:	mov	r2, r4
   1a9d0:	str	r4, [sp]
   1a9d4:	ldr	r0, [r4, #204]	; 0xcc
   1a9d8:	add	r1, pc, r1
   1a9dc:	bl	14064 <fprintf@plt>
   1a9e0:	ldr	r1, [pc, #2780]	; 1b4c4 <__flatcc_fb_gen_common_c_header@@Base+0xca8>
   1a9e4:	mov	r3, r4
   1a9e8:	mov	r2, r4
   1a9ec:	str	r4, [sp]
   1a9f0:	ldr	r0, [r4, #204]	; 0xcc
   1a9f4:	add	r1, pc, r1
   1a9f8:	bl	14064 <fprintf@plt>
   1a9fc:	ldr	r1, [pc, #2756]	; 1b4c8 <__flatcc_fb_gen_common_c_header@@Base+0xcac>
   1aa00:	mov	r3, r4
   1aa04:	mov	r2, r4
   1aa08:	str	r4, [sp]
   1aa0c:	ldr	r0, [r4, #204]	; 0xcc
   1aa10:	add	r1, pc, r1
   1aa14:	bl	14064 <fprintf@plt>
   1aa18:	ldr	r1, [pc, #2732]	; 1b4cc <__flatcc_fb_gen_common_c_header@@Base+0xcb0>
   1aa1c:	mov	r3, r4
   1aa20:	mov	r2, r4
   1aa24:	str	r4, [sp]
   1aa28:	str	r4, [sp, #4]
   1aa2c:	str	r4, [sp, #8]
   1aa30:	ldr	r0, [r4, #204]	; 0xcc
   1aa34:	add	r1, pc, r1
   1aa38:	bl	14064 <fprintf@plt>
   1aa3c:	ldr	r3, [r4, #212]	; 0xd4
   1aa40:	ldr	r3, [r3, #32]
   1aa44:	cmp	r3, #0
   1aa48:	beq	1b344 <__flatcc_fb_gen_common_c_header@@Base+0xb28>
   1aa4c:	ldr	r1, [pc, #2684]	; 1b4d0 <__flatcc_fb_gen_common_c_header@@Base+0xcb4>
   1aa50:	mov	r2, r4
   1aa54:	ldr	r0, [r4, #204]	; 0xcc
   1aa58:	add	r1, pc, r1
   1aa5c:	bl	14064 <fprintf@plt>
   1aa60:	ldr	r1, [pc, #2668]	; 1b4d4 <__flatcc_fb_gen_common_c_header@@Base+0xcb8>
   1aa64:	mov	r3, r4
   1aa68:	mov	r2, r4
   1aa6c:	str	r4, [sp]
   1aa70:	str	r4, [sp, #4]
   1aa74:	ldr	r0, [r4, #204]	; 0xcc
   1aa78:	add	r1, pc, r1
   1aa7c:	bl	14064 <fprintf@plt>
   1aa80:	ldr	r1, [pc, #2640]	; 1b4d8 <__flatcc_fb_gen_common_c_header@@Base+0xcbc>
   1aa84:	mov	r3, r4
   1aa88:	mov	r2, r4
   1aa8c:	ldr	r0, [r4, #204]	; 0xcc
   1aa90:	add	r1, pc, r1
   1aa94:	bl	14064 <fprintf@plt>
   1aa98:	ldr	r1, [pc, #2620]	; 1b4dc <__flatcc_fb_gen_common_c_header@@Base+0xcc0>
   1aa9c:	mov	r3, r4
   1aaa0:	mov	r2, r4
   1aaa4:	str	r4, [sp]
   1aaa8:	ldr	r0, [r4, #204]	; 0xcc
   1aaac:	add	r1, pc, r1
   1aab0:	bl	14064 <fprintf@plt>
   1aab4:	ldr	r1, [pc, #2596]	; 1b4e0 <__flatcc_fb_gen_common_c_header@@Base+0xcc4>
   1aab8:	mov	r3, r4
   1aabc:	mov	r2, r4
   1aac0:	ldr	r0, [r4, #204]	; 0xcc
   1aac4:	add	r1, pc, r1
   1aac8:	bl	14064 <fprintf@plt>
   1aacc:	ldr	r1, [pc, #2576]	; 1b4e4 <__flatcc_fb_gen_common_c_header@@Base+0xcc8>
   1aad0:	mov	r3, r4
   1aad4:	mov	r2, r4
   1aad8:	str	r4, [sp]
   1aadc:	str	r4, [sp, #4]
   1aae0:	ldr	r0, [r4, #204]	; 0xcc
   1aae4:	add	r1, pc, r1
   1aae8:	bl	14064 <fprintf@plt>
   1aaec:	ldr	r1, [pc, #2548]	; 1b4e8 <__flatcc_fb_gen_common_c_header@@Base+0xccc>
   1aaf0:	mov	r3, r4
   1aaf4:	mov	r2, r4
   1aaf8:	ldr	r0, [r4, #204]	; 0xcc
   1aafc:	add	r1, pc, r1
   1ab00:	bl	14064 <fprintf@plt>
   1ab04:	ldr	r1, [pc, #2528]	; 1b4ec <__flatcc_fb_gen_common_c_header@@Base+0xcd0>
   1ab08:	mov	r3, r4
   1ab0c:	mov	r2, r4
   1ab10:	ldr	r0, [r4, #204]	; 0xcc
   1ab14:	add	r1, pc, r1
   1ab18:	bl	14064 <fprintf@plt>
   1ab1c:	ldr	r1, [pc, #2508]	; 1b4f0 <__flatcc_fb_gen_common_c_header@@Base+0xcd4>
   1ab20:	mov	r3, r4
   1ab24:	mov	r2, r4
   1ab28:	str	r4, [sp]
   1ab2c:	str	r4, [sp, #4]
   1ab30:	ldr	r0, [r4, #204]	; 0xcc
   1ab34:	add	r1, pc, r1
   1ab38:	bl	14064 <fprintf@plt>
   1ab3c:	ldr	r1, [pc, #2480]	; 1b4f4 <__flatcc_fb_gen_common_c_header@@Base+0xcd8>
   1ab40:	mov	r3, r4
   1ab44:	mov	r2, r4
   1ab48:	str	r4, [sp]
   1ab4c:	str	r4, [sp, #4]
   1ab50:	str	r4, [sp, #8]
   1ab54:	str	r4, [sp, #12]
   1ab58:	add	r1, pc, r1
   1ab5c:	str	r4, [sp, #16]
   1ab60:	str	r4, [sp, #20]
   1ab64:	str	r4, [sp, #24]
   1ab68:	str	r4, [sp, #28]
   1ab6c:	str	r4, [sp, #32]
   1ab70:	str	r4, [sp, #36]	; 0x24
   1ab74:	ldr	r0, [r4, #204]	; 0xcc
   1ab78:	bl	14064 <fprintf@plt>
   1ab7c:	ldr	r1, [pc, #2420]	; 1b4f8 <__flatcc_fb_gen_common_c_header@@Base+0xcdc>
   1ab80:	mov	r2, r4
   1ab84:	ldr	r0, [r4, #204]	; 0xcc
   1ab88:	add	r1, pc, r1
   1ab8c:	bl	14064 <fprintf@plt>
   1ab90:	ldr	r1, [pc, #2404]	; 1b4fc <__flatcc_fb_gen_common_c_header@@Base+0xce0>
   1ab94:	mov	r3, r4
   1ab98:	mov	r2, r4
   1ab9c:	str	r4, [sp]
   1aba0:	str	r4, [sp, #4]
   1aba4:	ldr	r0, [r4, #204]	; 0xcc
   1aba8:	add	r1, pc, r1
   1abac:	bl	14064 <fprintf@plt>
   1abb0:	ldr	r1, [pc, #2376]	; 1b500 <__flatcc_fb_gen_common_c_header@@Base+0xce4>
   1abb4:	mov	r3, r4
   1abb8:	mov	r2, r4
   1abbc:	str	r4, [sp]
   1abc0:	str	r4, [sp, #4]
   1abc4:	str	r4, [sp, #8]
   1abc8:	str	r4, [sp, #12]
   1abcc:	add	r1, pc, r1
   1abd0:	str	r4, [sp, #16]
   1abd4:	str	r4, [sp, #20]
   1abd8:	str	r4, [sp, #24]
   1abdc:	str	r4, [sp, #28]
   1abe0:	str	r4, [sp, #32]
   1abe4:	str	r4, [sp, #36]	; 0x24
   1abe8:	str	r4, [sp, #40]	; 0x28
   1abec:	str	r4, [sp, #44]	; 0x2c
   1abf0:	str	r4, [sp, #48]	; 0x30
   1abf4:	str	r4, [sp, #52]	; 0x34
   1abf8:	str	r4, [sp, #56]	; 0x38
   1abfc:	ldr	r0, [r4, #204]	; 0xcc
   1ac00:	bl	14064 <fprintf@plt>
   1ac04:	ldr	r1, [pc, #2296]	; 1b504 <__flatcc_fb_gen_common_c_header@@Base+0xce8>
   1ac08:	mov	r3, r4
   1ac0c:	mov	r2, r4
   1ac10:	str	r4, [sp]
   1ac14:	str	r4, [sp, #4]
   1ac18:	str	r4, [sp, #8]
   1ac1c:	str	r4, [sp, #12]
   1ac20:	add	r1, pc, r1
   1ac24:	str	r4, [sp, #16]
   1ac28:	str	r4, [sp, #20]
   1ac2c:	ldr	r0, [r4, #204]	; 0xcc
   1ac30:	bl	14064 <fprintf@plt>
   1ac34:	ldr	r1, [pc, #2252]	; 1b508 <__flatcc_fb_gen_common_c_header@@Base+0xcec>
   1ac38:	mov	r3, r4
   1ac3c:	mov	r2, r4
   1ac40:	str	r4, [sp]
   1ac44:	str	r4, [sp, #4]
   1ac48:	ldr	r0, [r4, #204]	; 0xcc
   1ac4c:	add	r1, pc, r1
   1ac50:	bl	14064 <fprintf@plt>
   1ac54:	ldr	r1, [pc, #2224]	; 1b50c <__flatcc_fb_gen_common_c_header@@Base+0xcf0>
   1ac58:	mov	r3, r4
   1ac5c:	mov	r2, r4
   1ac60:	str	r4, [sp]
   1ac64:	str	r4, [sp, #4]
   1ac68:	ldr	r0, [r4, #204]	; 0xcc
   1ac6c:	add	r1, pc, r1
   1ac70:	bl	14064 <fprintf@plt>
   1ac74:	ldr	r1, [pc, #2196]	; 1b510 <__flatcc_fb_gen_common_c_header@@Base+0xcf4>
   1ac78:	mov	r2, r4
   1ac7c:	ldr	r0, [r4, #204]	; 0xcc
   1ac80:	add	r1, pc, r1
   1ac84:	bl	14064 <fprintf@plt>
   1ac88:	ldr	r1, [pc, #2180]	; 1b514 <__flatcc_fb_gen_common_c_header@@Base+0xcf8>
   1ac8c:	mov	r2, r4
   1ac90:	ldr	r0, [r4, #204]	; 0xcc
   1ac94:	add	r1, pc, r1
   1ac98:	bl	14064 <fprintf@plt>
   1ac9c:	ldr	r1, [pc, #2164]	; 1b518 <__flatcc_fb_gen_common_c_header@@Base+0xcfc>
   1aca0:	mov	r2, r4
   1aca4:	ldr	r0, [r4, #204]	; 0xcc
   1aca8:	add	r1, pc, r1
   1acac:	bl	14064 <fprintf@plt>
   1acb0:	ldr	r1, [pc, #2148]	; 1b51c <__flatcc_fb_gen_common_c_header@@Base+0xd00>
   1acb4:	mov	r2, r4
   1acb8:	ldr	r0, [r4, #204]	; 0xcc
   1acbc:	add	r1, pc, r1
   1acc0:	bl	14064 <fprintf@plt>
   1acc4:	ldr	r1, [pc, #2132]	; 1b520 <__flatcc_fb_gen_common_c_header@@Base+0xd04>
   1acc8:	mov	r2, r4
   1accc:	ldr	r0, [r4, #204]	; 0xcc
   1acd0:	add	r1, pc, r1
   1acd4:	bl	14064 <fprintf@plt>
   1acd8:	ldr	r1, [pc, #2116]	; 1b524 <__flatcc_fb_gen_common_c_header@@Base+0xd08>
   1acdc:	mov	r3, r4
   1ace0:	mov	r2, r4
   1ace4:	str	r4, [sp]
   1ace8:	str	r4, [sp, #4]
   1acec:	ldr	r0, [r4, #204]	; 0xcc
   1acf0:	add	r1, pc, r1
   1acf4:	bl	14064 <fprintf@plt>
   1acf8:	ldr	r1, [pc, #2088]	; 1b528 <__flatcc_fb_gen_common_c_header@@Base+0xd0c>
   1acfc:	mov	r3, r4
   1ad00:	mov	r2, r4
   1ad04:	str	r4, [sp]
   1ad08:	str	r4, [sp, #4]
   1ad0c:	str	r4, [sp, #8]
   1ad10:	str	r4, [sp, #12]
   1ad14:	add	r1, pc, r1
   1ad18:	ldr	r0, [r4, #204]	; 0xcc
   1ad1c:	bl	14064 <fprintf@plt>
   1ad20:	ldr	r1, [pc, #2052]	; 1b52c <__flatcc_fb_gen_common_c_header@@Base+0xd10>
   1ad24:	mov	r3, r4
   1ad28:	mov	r2, r4
   1ad2c:	str	r4, [sp]
   1ad30:	ldr	r0, [r4, #204]	; 0xcc
   1ad34:	add	r1, pc, r1
   1ad38:	bl	14064 <fprintf@plt>
   1ad3c:	ldr	r1, [pc, #2028]	; 1b530 <__flatcc_fb_gen_common_c_header@@Base+0xd14>
   1ad40:	mov	r3, r4
   1ad44:	mov	r2, r4
   1ad48:	str	r4, [sp]
   1ad4c:	str	r4, [sp, #4]
   1ad50:	str	r4, [sp, #8]
   1ad54:	str	r4, [sp, #12]
   1ad58:	add	r1, pc, r1
   1ad5c:	str	r4, [sp, #16]
   1ad60:	str	r4, [sp, #20]
   1ad64:	str	r4, [sp, #24]
   1ad68:	str	r4, [sp, #28]
   1ad6c:	str	r4, [sp, #32]
   1ad70:	ldr	r0, [r4, #204]	; 0xcc
   1ad74:	bl	14064 <fprintf@plt>
   1ad78:	ldr	r1, [pc, #1972]	; 1b534 <__flatcc_fb_gen_common_c_header@@Base+0xd18>
   1ad7c:	mov	r3, r4
   1ad80:	mov	r2, r4
   1ad84:	ldr	r0, [r4, #204]	; 0xcc
   1ad88:	add	r1, pc, r1
   1ad8c:	bl	14064 <fprintf@plt>
   1ad90:	ldr	r1, [pc, #1952]	; 1b538 <__flatcc_fb_gen_common_c_header@@Base+0xd1c>
   1ad94:	mov	r3, r4
   1ad98:	mov	r2, r4
   1ad9c:	str	r4, [sp]
   1ada0:	ldr	r0, [r4, #204]	; 0xcc
   1ada4:	add	r1, pc, r1
   1ada8:	bl	14064 <fprintf@plt>
   1adac:	ldr	r1, [pc, #1928]	; 1b53c <__flatcc_fb_gen_common_c_header@@Base+0xd20>
   1adb0:	mov	r3, r4
   1adb4:	mov	r2, r4
   1adb8:	str	r4, [sp]
   1adbc:	ldr	r0, [r4, #204]	; 0xcc
   1adc0:	add	r1, pc, r1
   1adc4:	bl	14064 <fprintf@plt>
   1adc8:	ldr	r1, [pc, #1904]	; 1b540 <__flatcc_fb_gen_common_c_header@@Base+0xd24>
   1adcc:	mov	r2, r4
   1add0:	ldr	r0, [r4, #204]	; 0xcc
   1add4:	add	r1, pc, r1
   1add8:	bl	14064 <fprintf@plt>
   1addc:	ldr	r1, [pc, #1888]	; 1b544 <__flatcc_fb_gen_common_c_header@@Base+0xd28>
   1ade0:	mov	r2, r4
   1ade4:	ldr	r0, [r4, #204]	; 0xcc
   1ade8:	add	r1, pc, r1
   1adec:	bl	14064 <fprintf@plt>
   1adf0:	ldr	r1, [pc, #1872]	; 1b548 <__flatcc_fb_gen_common_c_header@@Base+0xd2c>
   1adf4:	mov	r3, r4
   1adf8:	mov	r2, r4
   1adfc:	ldr	r0, [r4, #204]	; 0xcc
   1ae00:	add	r1, pc, r1
   1ae04:	bl	14064 <fprintf@plt>
   1ae08:	ldr	r1, [pc, #1852]	; 1b54c <__flatcc_fb_gen_common_c_header@@Base+0xd30>
   1ae0c:	mov	r3, r4
   1ae10:	mov	r2, r4
   1ae14:	ldr	r0, [r4, #204]	; 0xcc
   1ae18:	add	r1, pc, r1
   1ae1c:	bl	14064 <fprintf@plt>
   1ae20:	ldr	r1, [pc, #1832]	; 1b550 <__flatcc_fb_gen_common_c_header@@Base+0xd34>
   1ae24:	mov	r3, r4
   1ae28:	mov	r2, r4
   1ae2c:	str	r4, [sp]
   1ae30:	str	r4, [sp, #4]
   1ae34:	str	r4, [sp, #8]
   1ae38:	str	r4, [sp, #12]
   1ae3c:	add	r1, pc, r1
   1ae40:	str	r4, [sp, #16]
   1ae44:	str	r4, [sp, #20]
   1ae48:	str	r4, [sp, #24]
   1ae4c:	str	r4, [sp, #28]
   1ae50:	str	r4, [sp, #32]
   1ae54:	ldr	r0, [r4, #204]	; 0xcc
   1ae58:	bl	14064 <fprintf@plt>
   1ae5c:	ldr	r1, [pc, #1776]	; 1b554 <__flatcc_fb_gen_common_c_header@@Base+0xd38>
   1ae60:	mov	r3, r4
   1ae64:	mov	r2, r4
   1ae68:	str	r4, [sp]
   1ae6c:	str	r4, [sp, #4]
   1ae70:	str	r4, [sp, #8]
   1ae74:	str	r4, [sp, #12]
   1ae78:	add	r1, pc, r1
   1ae7c:	str	r4, [sp, #16]
   1ae80:	str	r4, [sp, #20]
   1ae84:	str	r4, [sp, #24]
   1ae88:	str	r4, [sp, #28]
   1ae8c:	str	r4, [sp, #32]
   1ae90:	ldr	r0, [r4, #204]	; 0xcc
   1ae94:	bl	14064 <fprintf@plt>
   1ae98:	ldr	r1, [pc, #1720]	; 1b558 <__flatcc_fb_gen_common_c_header@@Base+0xd3c>
   1ae9c:	mov	r3, r4
   1aea0:	mov	r2, r4
   1aea4:	str	r4, [sp]
   1aea8:	str	r4, [sp, #4]
   1aeac:	str	r4, [sp, #8]
   1aeb0:	str	r4, [sp, #12]
   1aeb4:	add	r1, pc, r1
   1aeb8:	str	r4, [sp, #16]
   1aebc:	ldr	r0, [r4, #204]	; 0xcc
   1aec0:	bl	14064 <fprintf@plt>
   1aec4:	ldr	r1, [pc, #1680]	; 1b55c <__flatcc_fb_gen_common_c_header@@Base+0xd40>
   1aec8:	mov	r3, r4
   1aecc:	mov	r2, r4
   1aed0:	str	r4, [sp]
   1aed4:	str	r4, [sp, #4]
   1aed8:	str	r4, [sp, #8]
   1aedc:	str	r4, [sp, #12]
   1aee0:	add	r1, pc, r1
   1aee4:	str	r4, [sp, #16]
   1aee8:	str	r4, [sp, #20]
   1aeec:	str	r4, [sp, #24]
   1aef0:	str	r4, [sp, #28]
   1aef4:	str	r4, [sp, #32]
   1aef8:	ldr	r0, [r4, #204]	; 0xcc
   1aefc:	bl	14064 <fprintf@plt>
   1af00:	ldr	r1, [pc, #1624]	; 1b560 <__flatcc_fb_gen_common_c_header@@Base+0xd44>
   1af04:	mov	r3, r4
   1af08:	mov	r2, r4
   1af0c:	str	r4, [sp]
   1af10:	str	r4, [sp, #4]
   1af14:	str	r4, [sp, #8]
   1af18:	str	r4, [sp, #12]
   1af1c:	add	r1, pc, r1
   1af20:	str	r4, [sp, #16]
   1af24:	str	r4, [sp, #20]
   1af28:	str	r4, [sp, #24]
   1af2c:	str	r4, [sp, #28]
   1af30:	str	r4, [sp, #32]
   1af34:	str	r4, [sp, #36]	; 0x24
   1af38:	str	r4, [sp, #40]	; 0x28
   1af3c:	ldr	r0, [r4, #204]	; 0xcc
   1af40:	bl	14064 <fprintf@plt>
   1af44:	ldr	r1, [pc, #1560]	; 1b564 <__flatcc_fb_gen_common_c_header@@Base+0xd48>
   1af48:	mov	r2, r4
   1af4c:	ldr	r0, [r4, #204]	; 0xcc
   1af50:	add	r1, pc, r1
   1af54:	bl	14064 <fprintf@plt>
   1af58:	ldr	r1, [pc, #1544]	; 1b568 <__flatcc_fb_gen_common_c_header@@Base+0xd4c>
   1af5c:	mov	r2, r4
   1af60:	ldr	r0, [r4, #204]	; 0xcc
   1af64:	add	r1, pc, r1
   1af68:	bl	14064 <fprintf@plt>
   1af6c:	ldr	r3, [r4, #212]	; 0xd4
   1af70:	ldr	r3, [r3, #136]	; 0x88
   1af74:	cmp	r3, #0
   1af78:	beq	1b354 <__flatcc_fb_gen_common_c_header@@Base+0xb38>
   1af7c:	mov	r0, r4
   1af80:	bl	1bba0 <__flatcc_gen_sort@@Base>
   1af84:	ldr	r1, [pc, #1504]	; 1b56c <__flatcc_fb_gen_common_c_header@@Base+0xd50>
   1af88:	mov	r3, r4
   1af8c:	mov	r2, r4
   1af90:	str	r4, [sp]
   1af94:	str	r4, [sp, #4]
   1af98:	str	r4, [sp, #8]
   1af9c:	ldr	r0, [r4, #204]	; 0xcc
   1afa0:	add	r1, pc, r1
   1afa4:	bl	14064 <fprintf@plt>
   1afa8:	ldr	r3, [r4, #212]	; 0xd4
   1afac:	ldr	r3, [r3, #136]	; 0x88
   1afb0:	cmp	r3, #0
   1afb4:	beq	1b370 <__flatcc_fb_gen_common_c_header@@Base+0xb54>
   1afb8:	ldr	r1, [pc, #1456]	; 1b570 <__flatcc_fb_gen_common_c_header@@Base+0xd54>
   1afbc:	mov	r2, r4
   1afc0:	ldr	r0, [r4, #204]	; 0xcc
   1afc4:	add	r1, pc, r1
   1afc8:	bl	14064 <fprintf@plt>
   1afcc:	mov	r0, #10
   1afd0:	ldr	r1, [r4, #204]	; 0xcc
   1afd4:	bl	140c4 <fputc@plt>
   1afd8:	ldr	r1, [pc, #1428]	; 1b574 <__flatcc_fb_gen_common_c_header@@Base+0xd58>
   1afdc:	mov	r3, r4
   1afe0:	mov	r2, r4
   1afe4:	str	r4, [sp]
   1afe8:	ldr	r0, [r4, #204]	; 0xcc
   1afec:	add	r1, pc, r1
   1aff0:	bl	14064 <fprintf@plt>
   1aff4:	ldr	r1, [pc, #1404]	; 1b578 <__flatcc_fb_gen_common_c_header@@Base+0xd5c>
   1aff8:	mov	r3, r4
   1affc:	mov	r2, r4
   1b000:	str	r4, [sp]
   1b004:	str	r4, [sp, #4]
   1b008:	str	r4, [sp, #8]
   1b00c:	str	r4, [sp, #12]
   1b010:	add	r1, pc, r1
   1b014:	str	r4, [sp, #16]
   1b018:	str	r4, [sp, #20]
   1b01c:	str	r4, [sp, #24]
   1b020:	ldr	r0, [r4, #204]	; 0xcc
   1b024:	str	r4, [sp, #28]
   1b028:	str	r4, [sp, #32]
   1b02c:	str	r4, [sp, #36]	; 0x24
   1b030:	str	r4, [sp, #40]	; 0x28
   1b034:	str	r4, [sp, #44]	; 0x2c
   1b038:	str	r4, [sp, #48]	; 0x30
   1b03c:	str	r4, [sp, #52]	; 0x34
   1b040:	str	r4, [sp, #56]	; 0x38
   1b044:	str	r4, [sp, #60]	; 0x3c
   1b048:	str	r4, [sp, #64]	; 0x40
   1b04c:	str	r4, [sp, #68]	; 0x44
   1b050:	str	r4, [sp, #72]	; 0x48
   1b054:	str	r4, [sp, #76]	; 0x4c
   1b058:	str	r4, [sp, #80]	; 0x50
   1b05c:	str	r4, [sp, #84]	; 0x54
   1b060:	str	r4, [sp, #88]	; 0x58
   1b064:	str	r4, [sp, #92]	; 0x5c
   1b068:	bl	14064 <fprintf@plt>
   1b06c:	ldr	r1, [pc, #1288]	; 1b57c <__flatcc_fb_gen_common_c_header@@Base+0xd60>
   1b070:	mov	r3, r4
   1b074:	mov	r2, r4
   1b078:	str	r4, [sp]
   1b07c:	str	r4, [sp, #4]
   1b080:	str	r4, [sp, #8]
   1b084:	str	r4, [sp, #12]
   1b088:	add	r1, pc, r1
   1b08c:	str	r4, [sp, #16]
   1b090:	str	r4, [sp, #20]
   1b094:	str	r4, [sp, #24]
   1b098:	str	r4, [sp, #28]
   1b09c:	str	r4, [sp, #32]
   1b0a0:	str	r4, [sp, #36]	; 0x24
   1b0a4:	ldr	r0, [r4, #204]	; 0xcc
   1b0a8:	bl	14064 <fprintf@plt>
   1b0ac:	ldr	r1, [pc, #1228]	; 1b580 <__flatcc_fb_gen_common_c_header@@Base+0xd64>
   1b0b0:	mov	r3, r4
   1b0b4:	mov	r2, r4
   1b0b8:	str	r4, [sp, #104]	; 0x68
   1b0bc:	str	r4, [sp, #108]	; 0x6c
   1b0c0:	str	r4, [sp, #112]	; 0x70
   1b0c4:	str	r4, [sp, #116]	; 0x74
   1b0c8:	add	r1, pc, r1
   1b0cc:	str	r4, [sp, #120]	; 0x78
   1b0d0:	str	r4, [sp, #124]	; 0x7c
   1b0d4:	str	r4, [sp, #128]	; 0x80
   1b0d8:	str	r4, [sp, #132]	; 0x84
   1b0dc:	str	r4, [sp, #136]	; 0x88
   1b0e0:	str	r4, [sp, #140]	; 0x8c
   1b0e4:	str	r4, [sp, #144]	; 0x90
   1b0e8:	str	r4, [sp, #148]	; 0x94
   1b0ec:	str	r4, [sp, #152]	; 0x98
   1b0f0:	str	r4, [sp, #156]	; 0x9c
   1b0f4:	str	r4, [sp, #160]	; 0xa0
   1b0f8:	str	r4, [sp, #164]	; 0xa4
   1b0fc:	str	r4, [sp, #168]	; 0xa8
   1b100:	str	r4, [sp, #172]	; 0xac
   1b104:	str	r4, [sp, #176]	; 0xb0
   1b108:	str	r4, [sp, #180]	; 0xb4
   1b10c:	str	r4, [sp, #184]	; 0xb8
   1b110:	str	r4, [sp, #188]	; 0xbc
   1b114:	str	r4, [sp, #192]	; 0xc0
   1b118:	str	r4, [sp, #196]	; 0xc4
   1b11c:	str	r4, [sp, #200]	; 0xc8
   1b120:	str	r4, [sp, #204]	; 0xcc
   1b124:	str	r4, [sp, #208]	; 0xd0
   1b128:	str	r4, [sp, #212]	; 0xd4
   1b12c:	str	r4, [sp, #216]	; 0xd8
   1b130:	str	r4, [sp, #220]	; 0xdc
   1b134:	str	r4, [sp, #224]	; 0xe0
   1b138:	str	r4, [sp, #228]	; 0xe4
   1b13c:	str	r4, [sp, #100]	; 0x64
   1b140:	str	r4, [sp]
   1b144:	str	r4, [sp, #4]
   1b148:	str	r4, [sp, #8]
   1b14c:	str	r4, [sp, #12]
   1b150:	str	r4, [sp, #16]
   1b154:	str	r4, [sp, #20]
   1b158:	ldr	r0, [r4, #204]	; 0xcc
   1b15c:	str	r4, [sp, #24]
   1b160:	str	r4, [sp, #28]
   1b164:	str	r4, [sp, #32]
   1b168:	str	r4, [sp, #36]	; 0x24
   1b16c:	str	r4, [sp, #40]	; 0x28
   1b170:	str	r4, [sp, #44]	; 0x2c
   1b174:	str	r4, [sp, #48]	; 0x30
   1b178:	str	r4, [sp, #52]	; 0x34
   1b17c:	str	r4, [sp, #56]	; 0x38
   1b180:	str	r4, [sp, #60]	; 0x3c
   1b184:	str	r4, [sp, #64]	; 0x40
   1b188:	str	r4, [sp, #68]	; 0x44
   1b18c:	str	r4, [sp, #72]	; 0x48
   1b190:	str	r4, [sp, #76]	; 0x4c
   1b194:	str	r4, [sp, #80]	; 0x50
   1b198:	str	r4, [sp, #84]	; 0x54
   1b19c:	str	r4, [sp, #88]	; 0x58
   1b1a0:	str	r4, [sp, #92]	; 0x5c
   1b1a4:	str	r4, [sp, #96]	; 0x60
   1b1a8:	bl	14064 <fprintf@plt>
   1b1ac:	ldr	r3, [r4, #212]	; 0xd4
   1b1b0:	ldr	r3, [r3, #136]	; 0x88
   1b1b4:	cmp	r3, #0
   1b1b8:	bne	1b3b0 <__flatcc_fb_gen_common_c_header@@Base+0xb94>
   1b1bc:	ldr	r1, [pc, #960]	; 1b584 <__flatcc_fb_gen_common_c_header@@Base+0xd68>
   1b1c0:	mov	r3, r4
   1b1c4:	mov	r2, r4
   1b1c8:	ldr	r0, [r4, #204]	; 0xcc
   1b1cc:	add	r1, pc, r1
   1b1d0:	bl	14064 <fprintf@plt>
   1b1d4:	ldr	r3, [r4, #212]	; 0xd4
   1b1d8:	ldr	r3, [r3, #32]
   1b1dc:	cmp	r3, #0
   1b1e0:	bne	1b32c <__flatcc_fb_gen_common_c_header@@Base+0xb10>
   1b1e4:	mov	r0, #10
   1b1e8:	ldr	r1, [r4, #204]	; 0xcc
   1b1ec:	bl	140c4 <fputc@plt>
   1b1f0:	ldr	r1, [pc, #912]	; 1b588 <__flatcc_fb_gen_common_c_header@@Base+0xd6c>
   1b1f4:	mov	r2, r4
   1b1f8:	ldr	r0, [r4, #204]	; 0xcc
   1b1fc:	add	r1, pc, r1
   1b200:	bl	14064 <fprintf@plt>
   1b204:	ldr	r1, [pc, #896]	; 1b58c <__flatcc_fb_gen_common_c_header@@Base+0xd70>
   1b208:	mov	r3, r4
   1b20c:	mov	r2, r4
   1b210:	str	r4, [sp]
   1b214:	str	r4, [sp, #4]
   1b218:	str	r4, [sp, #8]
   1b21c:	str	r4, [sp, #12]
   1b220:	add	r1, pc, r1
   1b224:	str	r4, [sp, #16]
   1b228:	str	r4, [sp, #20]
   1b22c:	str	r4, [sp, #24]
   1b230:	str	r4, [sp, #28]
   1b234:	str	r4, [sp, #32]
   1b238:	str	r4, [sp, #36]	; 0x24
   1b23c:	str	r4, [sp, #40]	; 0x28
   1b240:	str	r4, [sp, #44]	; 0x2c
   1b244:	ldr	r0, [r4, #204]	; 0xcc
   1b248:	bl	14064 <fprintf@plt>
   1b24c:	ldr	r1, [pc, #828]	; 1b590 <__flatcc_fb_gen_common_c_header@@Base+0xd74>
   1b250:	mov	r3, r4
   1b254:	mov	r2, r4
   1b258:	str	r4, [sp]
   1b25c:	ldr	r0, [r4, #204]	; 0xcc
   1b260:	add	r1, pc, r1
   1b264:	bl	14064 <fprintf@plt>
   1b268:	ldr	r1, [pc, #804]	; 1b594 <__flatcc_fb_gen_common_c_header@@Base+0xd78>
   1b26c:	mov	r3, r4
   1b270:	mov	r2, r4
   1b274:	str	r4, [sp]
   1b278:	str	r4, [sp, #4]
   1b27c:	str	r4, [sp, #8]
   1b280:	str	r4, [sp, #12]
   1b284:	add	r1, pc, r1
   1b288:	ldr	r0, [r4, #204]	; 0xcc
   1b28c:	bl	14064 <fprintf@plt>
   1b290:	ldr	r1, [pc, #768]	; 1b598 <__flatcc_fb_gen_common_c_header@@Base+0xd7c>
   1b294:	mov	r3, r4
   1b298:	mov	r2, r4
   1b29c:	str	r4, [sp]
   1b2a0:	str	r4, [sp, #4]
   1b2a4:	ldr	r0, [r4, #204]	; 0xcc
   1b2a8:	add	r1, pc, r1
   1b2ac:	bl	14064 <fprintf@plt>
   1b2b0:	ldr	r1, [pc, #740]	; 1b59c <__flatcc_fb_gen_common_c_header@@Base+0xd80>
   1b2b4:	mov	r3, r4
   1b2b8:	mov	r2, r4
   1b2bc:	str	r4, [sp]
   1b2c0:	str	r4, [sp, #4]
   1b2c4:	str	r4, [sp, #8]
   1b2c8:	str	r4, [sp, #12]
   1b2cc:	add	r1, pc, r1
   1b2d0:	str	r4, [sp, #16]
   1b2d4:	str	r4, [sp, #20]
   1b2d8:	str	r4, [sp, #24]
   1b2dc:	str	r4, [sp, #28]
   1b2e0:	ldr	r0, [r4, #204]	; 0xcc
   1b2e4:	bl	14064 <fprintf@plt>
   1b2e8:	mov	r0, #10
   1b2ec:	ldr	r1, [r4, #204]	; 0xcc
   1b2f0:	bl	140c4 <fputc@plt>
   1b2f4:	ldr	r0, [r4, #204]	; 0xcc
   1b2f8:	ldr	r3, [r4, #212]	; 0xd4
   1b2fc:	ldr	r3, [r3, #140]	; 0x8c
   1b300:	cmp	r3, #0
   1b304:	bne	1b390 <__flatcc_fb_gen_common_c_header@@Base+0xb74>
   1b308:	ldr	r1, [pc, #656]	; 1b5a0 <__flatcc_fb_gen_common_c_header@@Base+0xd84>
   1b30c:	mov	r2, r5
   1b310:	add	r1, pc, r1
   1b314:	bl	14064 <fprintf@plt>
   1b318:	mov	r0, #0
   1b31c:	add	sp, sp, #236	; 0xec
   1b320:	ldrd	r4, [sp]
   1b324:	add	sp, sp, #8
   1b328:	pop	{pc}		; (ldr pc, [sp], #4)
   1b32c:	ldr	r1, [pc, #624]	; 1b5a4 <__flatcc_fb_gen_common_c_header@@Base+0xd88>
   1b330:	mov	r2, r4
   1b334:	ldr	r0, [r4, #204]	; 0xcc
   1b338:	add	r1, pc, r1
   1b33c:	bl	14064 <fprintf@plt>
   1b340:	b	1b1f0 <__flatcc_fb_gen_common_c_header@@Base+0x9d4>
   1b344:	mov	r0, #10
   1b348:	ldr	r1, [r4, #204]	; 0xcc
   1b34c:	bl	140c4 <fputc@plt>
   1b350:	b	1aa60 <__flatcc_fb_gen_common_c_header@@Base+0x244>
   1b354:	ldr	r0, [pc, #588]	; 1b5a8 <__flatcc_fb_gen_common_c_header@@Base+0xd8c>
   1b358:	mov	r2, #20
   1b35c:	mov	r1, #1
   1b360:	ldr	r3, [r4, #204]	; 0xcc
   1b364:	add	r0, pc, r0
   1b368:	bl	13fec <fwrite@plt>
   1b36c:	b	1af84 <__flatcc_fb_gen_common_c_header@@Base+0x768>
   1b370:	mov	r0, #10
   1b374:	ldr	r1, [r4, #204]	; 0xcc
   1b378:	bl	140c4 <fputc@plt>
   1b37c:	b	1afcc <__flatcc_fb_gen_common_c_header@@Base+0x7b0>
   1b380:	mov	r0, #10
   1b384:	ldr	r1, [r4, #204]	; 0xcc
   1b388:	bl	140c4 <fputc@plt>
   1b38c:	b	1a964 <__flatcc_fb_gen_common_c_header@@Base+0x148>
   1b390:	mov	r3, r0
   1b394:	ldr	r0, [pc, #528]	; 1b5ac <__flatcc_fb_gen_common_c_header@@Base+0xd90>
   1b398:	mov	r2, #36	; 0x24
   1b39c:	mov	r1, #1
   1b3a0:	add	r0, pc, r0
   1b3a4:	bl	13fec <fwrite@plt>
   1b3a8:	ldr	r0, [r4, #204]	; 0xcc
   1b3ac:	b	1b308 <__flatcc_fb_gen_common_c_header@@Base+0xaec>
   1b3b0:	ldr	r1, [pc, #504]	; 1b5b0 <__flatcc_fb_gen_common_c_header@@Base+0xd94>
   1b3b4:	mov	r2, r4
   1b3b8:	ldr	r0, [r4, #204]	; 0xcc
   1b3bc:	add	r1, pc, r1
   1b3c0:	bl	14064 <fprintf@plt>
   1b3c4:	b	1b1bc <__flatcc_fb_gen_common_c_header@@Base+0x9a0>
   1b3c8:	ldr	r1, [pc, #484]	; 1b5b4 <__flatcc_fb_gen_common_c_header@@Base+0xd98>
   1b3cc:	mov	r3, r4
   1b3d0:	mov	r2, r4
   1b3d4:	str	r4, [sp]
   1b3d8:	str	r4, [sp, #4]
   1b3dc:	str	r4, [sp, #8]
   1b3e0:	ldr	r0, [r4, #204]	; 0xcc
   1b3e4:	add	r1, pc, r1
   1b3e8:	bl	14064 <fprintf@plt>
   1b3ec:	ldr	r2, [pc, #452]	; 1b5b8 <__flatcc_fb_gen_common_c_header@@Base+0xd9c>
   1b3f0:	mov	r3, r4
   1b3f4:	str	r4, [sp]
   1b3f8:	ldr	r1, [pc, #444]	; 1b5bc <__flatcc_fb_gen_common_c_header@@Base+0xda0>
   1b3fc:	str	r4, [sp, #4]
   1b400:	ldr	r0, [r4, #204]	; 0xcc
   1b404:	add	r2, pc, r2
   1b408:	add	r1, pc, r1
   1b40c:	bl	14064 <fprintf@plt>
   1b410:	ldr	r1, [pc, #424]	; 1b5c0 <__flatcc_fb_gen_common_c_header@@Base+0xda4>
   1b414:	mov	r3, r4
   1b418:	mov	r2, r4
   1b41c:	str	r4, [sp]
   1b420:	str	r4, [sp, #4]
   1b424:	str	r4, [sp, #8]
   1b428:	ldr	r0, [r4, #204]	; 0xcc
   1b42c:	add	r1, pc, r1
   1b430:	bl	14064 <fprintf@plt>
   1b434:	ldr	r1, [pc, #392]	; 1b5c4 <__flatcc_fb_gen_common_c_header@@Base+0xda8>
   1b438:	mov	r3, r5
   1b43c:	mov	r2, r5
   1b440:	ldr	r0, [r4, #204]	; 0xcc
   1b444:	add	r1, pc, r1
   1b448:	bl	14064 <fprintf@plt>
   1b44c:	b	1a8c4 <__flatcc_fb_gen_common_c_header@@Base+0xa8>
   1b450:	ldr	r0, [pc, #368]	; 1b5c8 <__flatcc_fb_gen_common_c_header@@Base+0xdac>
   1b454:	mov	r2, #36	; 0x24
   1b458:	mov	r1, #1
   1b45c:	add	r0, pc, r0
   1b460:	bl	13fec <fwrite@plt>
   1b464:	ldr	r3, [r4, #204]	; 0xcc
   1b468:	b	1a898 <__flatcc_fb_gen_common_c_header@@Base+0x7c>
   1b46c:	ldr	r0, [pc, #344]	; 1b5cc <__flatcc_fb_gen_common_c_header@@Base+0xdb0>
   1b470:	mov	r2, #135	; 0x87
   1b474:	mov	r1, #1
   1b478:	ldr	r3, [r4, #204]	; 0xcc
   1b47c:	add	r0, pc, r0
   1b480:	bl	13fec <fwrite@plt>
   1b484:	ldr	r3, [r4, #212]	; 0xd4
   1b488:	b	1a888 <__flatcc_fb_gen_common_c_header@@Base+0x6c>
   1b48c:			; <UNDEFINED> instruction: 0x000289b4
   1b490:	ldrdeq	r8, [r2], -r4
   1b494:	andeq	r8, r2, r0, lsl sl
   1b498:	andeq	r8, r2, r4, asr #21
   1b49c:	andeq	r8, r2, r0, ror #21
   1b4a0:			; <UNDEFINED> instruction: 0x00028fb0
   1b4a4:	andeq	r9, r2, ip, lsl r0
   1b4a8:	andeq	r9, r2, r0, ror r1
   1b4ac:	andeq	r9, r2, r8, lsr #3
   1b4b0:	andeq	r9, r2, ip, lsr #5
   1b4b4:	andeq	r9, r2, r4, asr #5
   1b4b8:	andeq	r9, r2, r4, ror r3
   1b4bc:	strdeq	r9, [r2], -ip
   1b4c0:	andeq	r9, r2, r0, lsl #11
   1b4c4:	andeq	r9, r2, r0, asr #12
   1b4c8:	andeq	r9, r2, r0, lsl #14
   1b4cc:			; <UNDEFINED> instruction: 0x000297b4
   1b4d0:	andeq	r9, r2, r8, ror r8
   1b4d4:	andeq	r9, r2, r4, lsl #17
   1b4d8:	andeq	r9, r2, ip, lsl #18
   1b4dc:	andeq	r9, r2, r4, lsr r9
   1b4e0:	andeq	r9, r2, r8, lsr #19
   1b4e4:	strdeq	r9, [r2], -ip
   1b4e8:	andeq	r9, r2, r4, lsl #22
   1b4ec:	andeq	r9, r2, r4, ror #22
   1b4f0:	andeq	r9, r2, r4, asr #23
   1b4f4:	andeq	r9, r2, r4, lsl #24
   1b4f8:	strdeq	r9, [r2], -r8
   1b4fc:	strdeq	r9, [r2], -ip
   1b500:	andeq	r9, r2, r0, ror #26
   1b504:			; <UNDEFINED> instruction: 0x00029ebc
   1b508:	andeq	r9, r2, r4, asr pc
   1b50c:	ldrdeq	r9, [r2], -r0
   1b510:	andeq	sl, r2, r4, lsr r0
   1b514:	strdeq	sl, [r2], -r4
   1b518:	andeq	sl, r2, r4, ror r5
   1b51c:	andeq	sl, r2, r4, ror #11
   1b520:	andeq	sl, r2, r0, asr #12
   1b524:	andeq	sl, r2, r4, lsl #16
   1b528:	andeq	sl, r2, ip, lsl #17
   1b52c:	andeq	sl, r2, r8, asr #20
   1b530:	andeq	sl, r2, r0, asr #24
   1b534:	andeq	sl, r2, r8, ror #26
   1b538:	andeq	sl, r2, ip, lsl lr
   1b53c:			; <UNDEFINED> instruction: 0x0002aeb8
   1b540:	andeq	fp, r2, ip, asr r0
   1b544:	strdeq	fp, [r2], -r4
   1b548:	andeq	fp, r2, ip, lsl #4
   1b54c:	andeq	fp, r2, r4, asr #6
   1b550:	strdeq	fp, [r2], -r4
   1b554:	andeq	fp, r2, r4, lsr r5
   1b558:	andeq	fp, r2, ip, ror r6
   1b55c:	andeq	fp, r2, r8, lsr #19
   1b560:	andeq	fp, r2, ip, lsl #25
   1b564:	andeq	ip, r2, r4, lsr #6
   1b568:	andeq	ip, r2, r0, ror #10
   1b56c:	andeq	ip, r2, r0, lsl #20
   1b570:	andeq	ip, r2, r0, asr #21
   1b574:			; <UNDEFINED> instruction: 0x0002cab8
   1b578:	andeq	ip, r2, r4, lsl fp
   1b57c:			; <UNDEFINED> instruction: 0x0002ccb0
   1b580:			; <UNDEFINED> instruction: 0x0002cdbc
   1b584:	muleq	r2, r0, r3
   1b588:	strdeq	sp, [r2], -ip
   1b58c:	andeq	sp, r2, r8, asr r4
   1b590:	andeq	sp, r2, r4, ror #14
   1b594:	strdeq	sp, [r2], -r8
   1b598:	muleq	r2, ip, r9
   1b59c:	strdeq	sp, [r2], -r4
   1b5a0:			; <UNDEFINED> instruction: 0x0002debc
   1b5a4:	ldrdeq	r8, [r2], -r0
   1b5a8:	andeq	ip, r2, r4, lsr #12
   1b5ac:	andeq	sp, r2, r4, lsl #28
   1b5b0:	andeq	sp, r2, r4, lsl #3
   1b5b4:	andeq	r7, r2, r0, asr #31
   1b5b8:	andeq	r7, r2, ip, lsl #31
   1b5bc:	andeq	r8, r2, ip, rrx
   1b5c0:	andeq	r8, r2, r0, lsr #3
   1b5c4:	strdeq	r8, [r2], -r0
   1b5c8:	andeq	r7, r2, r4, ror #29
   1b5cc:	andeq	r7, r2, ip, lsr lr

0001b5d0 <__flatcc_fb_gen_c_reader@@Base>:
   1b5d0:	ldr	r3, [r0, #208]	; 0xd0
   1b5d4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1b5d8:	mov	r5, r0
   1b5dc:	ldr	r1, [pc, #1352]	; 1bb2c <__flatcc_fb_gen_c_reader@@Base+0x55c>
   1b5e0:	ldr	r2, [r0, #212]	; 0xd4
   1b5e4:	ldr	r3, [r3, #164]	; 0xa4
   1b5e8:	add	r1, pc, r1
   1b5ec:	ldr	r4, [r2, #132]	; 0x84
   1b5f0:	strd	r6, [sp, #8]
   1b5f4:	add	r6, r0, #102	; 0x66
   1b5f8:	mov	r2, r3
   1b5fc:	strd	r8, [sp, #16]
   1b600:	strd	sl, [sp, #24]
   1b604:	str	lr, [sp, #32]
   1b608:	sub	sp, sp, #252	; 0xfc
   1b60c:	ldr	r0, [r0, #204]	; 0xcc
   1b610:	bl	14064 <fprintf@plt>
   1b614:	ldr	r0, [pc, #1300]	; 1bb30 <__flatcc_fb_gen_c_reader@@Base+0x560>
   1b618:	mov	r2, #81	; 0x51
   1b61c:	mov	r1, #1
   1b620:	ldr	sl, [pc, #1292]	; 1bb34 <__flatcc_fb_gen_c_reader@@Base+0x564>
   1b624:	ldr	r3, [r5, #204]	; 0xcc
   1b628:	add	r0, pc, r0
   1b62c:	bl	13fec <fwrite@plt>
   1b630:	cmp	r4, #0
   1b634:	add	sl, pc, sl
   1b638:	bne	1ba54 <__flatcc_fb_gen_c_reader@@Base+0x484>
   1b63c:	ldr	r1, [pc, #1268]	; 1bb38 <__flatcc_fb_gen_c_reader@@Base+0x568>
   1b640:	mov	r3, r5
   1b644:	mov	r2, r6
   1b648:	ldr	r0, [r5, #204]	; 0xcc
   1b64c:	add	r1, pc, r1
   1b650:	bl	14064 <fprintf@plt>
   1b654:	ldr	r2, [pc, #1248]	; 1bb3c <__flatcc_fb_gen_c_reader@@Base+0x56c>
   1b658:	mov	r0, r5
   1b65c:	ldr	r1, [pc, #1244]	; 1bb40 <__flatcc_fb_gen_c_reader@@Base+0x570>
   1b660:	add	r2, pc, r2
   1b664:	add	r1, pc, r1
   1b668:	bl	15fbc <__flatcc_fb_gen_c_includes@@Base>
   1b66c:	ldr	r0, [pc, #1232]	; 1bb44 <__flatcc_fb_gen_c_reader@@Base+0x574>
   1b670:	mov	r2, #39	; 0x27
   1b674:	mov	r1, #1
   1b678:	ldr	r3, [r5, #204]	; 0xcc
   1b67c:	add	r0, pc, r0
   1b680:	bl	13fec <fwrite@plt>
   1b684:	ldr	r0, [pc, #1212]	; 1bb48 <__flatcc_fb_gen_c_reader@@Base+0x578>
   1b688:	mov	r2, #58	; 0x3a
   1b68c:	mov	r1, #1
   1b690:	ldr	r3, [r5, #204]	; 0xcc
   1b694:	add	r0, pc, r0
   1b698:	bl	13fec <fwrite@plt>
   1b69c:	ldr	r0, [r5, #204]	; 0xcc
   1b6a0:	ldr	r3, [r5, #212]	; 0xd4
   1b6a4:	ldr	r3, [r3, #140]	; 0x8c
   1b6a8:	cmp	r3, #0
   1b6ac:	bne	1ba34 <__flatcc_fb_gen_c_reader@@Base+0x464>
   1b6b0:	ldr	ip, [r5, #208]	; 0xd0
   1b6b4:	ldrh	r3, [ip, #16]
   1b6b8:	cmp	r3, #2
   1b6bc:	beq	1b9e4 <__flatcc_fb_gen_c_reader@@Base+0x414>
   1b6c0:	ldr	r1, [pc, #1156]	; 1bb4c <__flatcc_fb_gen_c_reader@@Base+0x57c>
   1b6c4:	mov	r3, r5
   1b6c8:	mov	r2, r5
   1b6cc:	add	r1, pc, r1
   1b6d0:	bl	14064 <fprintf@plt>
   1b6d4:	ldr	r0, [r5, #204]	; 0xcc
   1b6d8:	ldr	ip, [r5, #208]	; 0xd0
   1b6dc:	ldrh	r3, [ip, #32]
   1b6e0:	cmp	r3, #2
   1b6e4:	beq	1ba0c <__flatcc_fb_gen_c_reader@@Base+0x43c>
   1b6e8:	ldr	ip, [r5, #212]	; 0xd4
   1b6ec:	mov	r3, r5
   1b6f0:	mov	r2, r5
   1b6f4:	ldr	r1, [pc, #1108]	; 1bb50 <__flatcc_fb_gen_c_reader@@Base+0x580>
   1b6f8:	ldr	ip, [ip, #104]	; 0x68
   1b6fc:	add	r1, pc, r1
   1b700:	str	ip, [sp]
   1b704:	bl	14064 <fprintf@plt>
   1b708:	mov	r0, #10
   1b70c:	ldr	r1, [r5, #204]	; 0xcc
   1b710:	bl	140c4 <fputc@plt>
   1b714:	ldr	r3, [r5, #208]	; 0xd0
   1b718:	ldr	r4, [r3, #44]	; 0x2c
   1b71c:	cmp	r4, #0
   1b720:	beq	1b73c <__flatcc_fb_gen_c_reader@@Base+0x16c>
   1b724:	mov	r1, r4
   1b728:	mov	r0, r5
   1b72c:	bl	16614 <__flatcc_fb_codegen_c@@Base+0x210>
   1b730:	ldr	r4, [r4, #120]	; 0x78
   1b734:	cmp	r4, #0
   1b738:	bne	1b724 <__flatcc_fb_gen_c_reader@@Base+0x154>
   1b73c:	mov	r0, #10
   1b740:	ldr	r1, [r5, #204]	; 0xcc
   1b744:	bl	140c4 <fputc@plt>
   1b748:	ldr	r3, [r5, #208]	; 0xd0
   1b74c:	ldr	r4, [r3, #40]	; 0x28
   1b750:	cmp	r4, #0
   1b754:	bne	1b768 <__flatcc_fb_gen_c_reader@@Base+0x198>
   1b758:	b	1b8a4 <__flatcc_fb_gen_c_reader@@Base+0x2d4>
   1b75c:	ldr	r4, [r4]
   1b760:	cmp	r4, #0
   1b764:	beq	1b78c <__flatcc_fb_gen_c_reader@@Base+0x1bc>
   1b768:	ldrh	r3, [r4, #8]
   1b76c:	cmp	r3, #0
   1b770:	bne	1b75c <__flatcc_fb_gen_c_reader@@Base+0x18c>
   1b774:	mov	r1, r4
   1b778:	mov	r0, r5
   1b77c:	bl	16614 <__flatcc_fb_codegen_c@@Base+0x210>
   1b780:	ldr	r4, [r4]
   1b784:	cmp	r4, #0
   1b788:	bne	1b768 <__flatcc_fb_gen_c_reader@@Base+0x198>
   1b78c:	ldr	r3, [r5, #208]	; 0xd0
   1b790:	ldr	r4, [r3, #40]	; 0x28
   1b794:	cmp	r4, #0
   1b798:	beq	1b8a4 <__flatcc_fb_gen_c_reader@@Base+0x2d4>
   1b79c:	ldr	fp, [pc, #944]	; 1bb54 <__flatcc_fb_gen_c_reader@@Base+0x584>
   1b7a0:	ldr	r9, [pc, #944]	; 1bb58 <__flatcc_fb_gen_c_reader@@Base+0x588>
   1b7a4:	ldr	r8, [pc, #944]	; 1bb5c <__flatcc_fb_gen_c_reader@@Base+0x58c>
   1b7a8:	add	fp, pc, fp
   1b7ac:	add	r9, pc, r9
   1b7b0:	add	r8, pc, r8
   1b7b4:	b	1b7c4 <__flatcc_fb_gen_c_reader@@Base+0x1f4>
   1b7b8:	ldr	r4, [r4]
   1b7bc:	cmp	r4, #0
   1b7c0:	beq	1b8a4 <__flatcc_fb_gen_c_reader@@Base+0x2d4>
   1b7c4:	ldrh	r3, [r4, #8]
   1b7c8:	cmp	r3, #1
   1b7cc:	bhi	1b7b8 <__flatcc_fb_gen_c_reader@@Base+0x1e8>
   1b7d0:	add	r7, sp, #28
   1b7d4:	mov	r2, #220	; 0xdc
   1b7d8:	mov	r1, #0
   1b7dc:	mov	r0, r7
   1b7e0:	bl	1407c <memset@plt>
   1b7e4:	mov	r2, r7
   1b7e8:	mov	r1, r4
   1b7ec:	ldr	r0, [r4, #12]
   1b7f0:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   1b7f4:	ldr	r6, [r4, #88]	; 0x58
   1b7f8:	mov	r3, r7
   1b7fc:	mov	r2, r7
   1b800:	mov	r1, fp
   1b804:	str	r5, [sp]
   1b808:	ldr	r0, [r5, #204]	; 0xcc
   1b80c:	bl	14064 <fprintf@plt>
   1b810:	mov	r3, r5
   1b814:	mov	r2, r7
   1b818:	ldr	r0, [r5, #204]	; 0xcc
   1b81c:	mov	r1, r9
   1b820:	str	r6, [sp]
   1b824:	bl	14064 <fprintf@plt>
   1b828:	add	r3, sp, #12
   1b82c:	mov	ip, #92	; 0x5c
   1b830:	mov	r0, #120	; 0x78
   1b834:	and	r1, r6, #15
   1b838:	ubfx	r2, r6, #4, #4
   1b83c:	add	r3, r3, #4
   1b840:	cmp	r1, #9
   1b844:	strb	ip, [r3, #-8]
   1b848:	lsr	r6, r6, #8
   1b84c:	movhi	lr, #87	; 0x57
   1b850:	movls	lr, #48	; 0x30
   1b854:	strb	r0, [r3, #-7]
   1b858:	cmp	r2, #9
   1b85c:	add	r1, r1, lr
   1b860:	movhi	lr, #87	; 0x57
   1b864:	movls	lr, #48	; 0x30
   1b868:	add	r2, r2, lr
   1b86c:	strb	r2, [r3, #-6]
   1b870:	strb	r1, [r3, #-5]
   1b874:	cmp	r7, r3
   1b878:	bne	1b834 <__flatcc_fb_gen_c_reader@@Base+0x264>
   1b87c:	mov	ip, #0
   1b880:	mov	r2, r7
   1b884:	ldr	r0, [r5, #204]	; 0xcc
   1b888:	add	r3, sp, #8
   1b88c:	mov	r1, r8
   1b890:	strb	ip, [sp, #24]
   1b894:	bl	14064 <fprintf@plt>
   1b898:	ldr	r4, [r4]
   1b89c:	cmp	r4, #0
   1b8a0:	bne	1b7c4 <__flatcc_fb_gen_c_reader@@Base+0x1f4>
   1b8a4:	mov	r0, #10
   1b8a8:	ldr	r1, [r5, #204]	; 0xcc
   1b8ac:	bl	140c4 <fputc@plt>
   1b8b0:	ldr	r3, [r5, #208]	; 0xd0
   1b8b4:	ldr	r4, [r3, #40]	; 0x28
   1b8b8:	cmp	r4, #0
   1b8bc:	bne	1b8d0 <__flatcc_fb_gen_c_reader@@Base+0x300>
   1b8c0:	b	1b8f4 <__flatcc_fb_gen_c_reader@@Base+0x324>
   1b8c4:	ldr	r4, [r4]
   1b8c8:	cmp	r4, #0
   1b8cc:	beq	1b8f4 <__flatcc_fb_gen_c_reader@@Base+0x324>
   1b8d0:	ldrh	r3, [r4, #8]
   1b8d4:	cmp	r3, #3
   1b8d8:	bne	1b8c4 <__flatcc_fb_gen_c_reader@@Base+0x2f4>
   1b8dc:	mov	r1, r4
   1b8e0:	mov	r0, r5
   1b8e4:	bl	18ba0 <__flatcc_fb_codegen_c@@Base+0x279c>
   1b8e8:	ldr	r4, [r4]
   1b8ec:	cmp	r4, #0
   1b8f0:	bne	1b8d0 <__flatcc_fb_gen_c_reader@@Base+0x300>
   1b8f4:	mov	r0, #10
   1b8f8:	ldr	r1, [r5, #204]	; 0xcc
   1b8fc:	bl	140c4 <fputc@plt>
   1b900:	ldr	r3, [r5, #208]	; 0xd0
   1b904:	ldr	r4, [r3, #44]	; 0x2c
   1b908:	cmp	r4, #0
   1b90c:	beq	1b92c <__flatcc_fb_gen_c_reader@@Base+0x35c>
   1b910:	mov	r1, r4
   1b914:	mov	r0, r5
   1b918:	bl	1984c <__flatcc_fb_codegen_c@@Base+0x3448>
   1b91c:	ldr	r4, [r4, #120]	; 0x78
   1b920:	cmp	r4, #0
   1b924:	bne	1b910 <__flatcc_fb_gen_c_reader@@Base+0x340>
   1b928:	ldr	r3, [r5, #208]	; 0xd0
   1b92c:	ldr	r4, [r3, #40]	; 0x28
   1b930:	cmp	r4, #0
   1b934:	beq	1b974 <__flatcc_fb_gen_c_reader@@Base+0x3a4>
   1b938:	ldrh	r3, [r4, #8]
   1b93c:	cmp	r3, #4
   1b940:	addls	pc, pc, r3, lsl #2
   1b944:	b	1bad8 <__flatcc_fb_gen_c_reader@@Base+0x508>
   1b948:	b	1b9c8 <__flatcc_fb_gen_c_reader@@Base+0x3f8>
   1b94c:	b	1b968 <__flatcc_fb_gen_c_reader@@Base+0x398>
   1b950:	b	1b968 <__flatcc_fb_gen_c_reader@@Base+0x398>
   1b954:	b	1b968 <__flatcc_fb_gen_c_reader@@Base+0x398>
   1b958:	b	1b95c <__flatcc_fb_gen_c_reader@@Base+0x38c>
   1b95c:	mov	r1, r4
   1b960:	mov	r0, r5
   1b964:	bl	18ba0 <__flatcc_fb_codegen_c@@Base+0x279c>
   1b968:	ldr	r4, [r4]
   1b96c:	cmp	r4, #0
   1b970:	bne	1b938 <__flatcc_fb_gen_c_reader@@Base+0x368>
   1b974:	mov	r0, #10
   1b978:	ldr	r1, [r5, #204]	; 0xcc
   1b97c:	bl	140c4 <fputc@plt>
   1b980:	ldr	r0, [r5, #204]	; 0xcc
   1b984:	ldr	r3, [r5, #212]	; 0xd4
   1b988:	ldr	r3, [r3, #140]	; 0x8c
   1b98c:	cmp	r3, #0
   1b990:	bne	1bab8 <__flatcc_fb_gen_c_reader@@Base+0x4e8>
   1b994:	ldr	r3, [r5, #208]	; 0xd0
   1b998:	ldr	r1, [pc, #448]	; 1bb60 <__flatcc_fb_gen_c_reader@@Base+0x590>
   1b99c:	ldr	r2, [r3, #164]	; 0xa4
   1b9a0:	add	r1, pc, r1
   1b9a4:	bl	14064 <fprintf@plt>
   1b9a8:	mov	r0, #0
   1b9ac:	add	sp, sp, #252	; 0xfc
   1b9b0:	ldrd	r4, [sp]
   1b9b4:	ldrd	r6, [sp, #8]
   1b9b8:	ldrd	r8, [sp, #16]
   1b9bc:	ldrd	sl, [sp, #24]
   1b9c0:	add	sp, sp, #32
   1b9c4:	pop	{pc}		; (ldr pc, [sp], #4)
   1b9c8:	mov	r1, r4
   1b9cc:	mov	r0, r5
   1b9d0:	bl	16930 <__flatcc_fb_codegen_c@@Base+0x52c>
   1b9d4:	ldr	r4, [r4]
   1b9d8:	cmp	r4, #0
   1b9dc:	bne	1b938 <__flatcc_fb_gen_c_reader@@Base+0x368>
   1b9e0:	b	1b974 <__flatcc_fb_gen_c_reader@@Base+0x3a4>
   1b9e4:	ldr	lr, [ip, #8]
   1b9e8:	mov	r3, r5
   1b9ec:	mov	r2, r5
   1b9f0:	ldr	r1, [pc, #364]	; 1bb64 <__flatcc_fb_gen_c_reader@@Base+0x594>
   1b9f4:	str	lr, [sp, #4]
   1b9f8:	ldr	ip, [ip, #12]
   1b9fc:	add	r1, pc, r1
   1ba00:	str	ip, [sp]
   1ba04:	bl	14064 <fprintf@plt>
   1ba08:	b	1b6d4 <__flatcc_fb_gen_c_reader@@Base+0x104>
   1ba0c:	ldr	lr, [ip, #24]
   1ba10:	mov	r3, r5
   1ba14:	mov	r2, r5
   1ba18:	ldr	r1, [pc, #328]	; 1bb68 <__flatcc_fb_gen_c_reader@@Base+0x598>
   1ba1c:	str	lr, [sp, #4]
   1ba20:	ldr	ip, [ip, #28]
   1ba24:	add	r1, pc, r1
   1ba28:	str	ip, [sp]
   1ba2c:	bl	14064 <fprintf@plt>
   1ba30:	b	1b708 <__flatcc_fb_gen_c_reader@@Base+0x138>
   1ba34:	mov	r3, r0
   1ba38:	ldr	r0, [pc, #300]	; 1bb6c <__flatcc_fb_gen_c_reader@@Base+0x59c>
   1ba3c:	mov	r2, #36	; 0x24
   1ba40:	mov	r1, #1
   1ba44:	add	r0, pc, r0
   1ba48:	bl	13fec <fwrite@plt>
   1ba4c:	ldr	r0, [r5, #204]	; 0xcc
   1ba50:	b	1b6b0 <__flatcc_fb_gen_c_reader@@Base+0xe0>
   1ba54:	ldr	r0, [pc, #276]	; 1bb70 <__flatcc_fb_gen_c_reader@@Base+0x5a0>
   1ba58:	movw	r2, #443	; 0x1bb
   1ba5c:	mov	r1, #1
   1ba60:	ldr	r3, [r5, #204]	; 0xcc
   1ba64:	add	r0, pc, r0
   1ba68:	bl	13fec <fwrite@plt>
   1ba6c:	ldr	r1, [pc, #256]	; 1bb74 <__flatcc_fb_gen_c_reader@@Base+0x5a4>
   1ba70:	mov	r3, r5
   1ba74:	mov	r2, r6
   1ba78:	ldr	r0, [r5, #204]	; 0xcc
   1ba7c:	add	r1, pc, r1
   1ba80:	bl	14064 <fprintf@plt>
   1ba84:	ldr	r2, [pc, #236]	; 1bb78 <__flatcc_fb_gen_c_reader@@Base+0x5a8>
   1ba88:	mov	r0, r5
   1ba8c:	ldr	r1, [pc, #232]	; 1bb7c <__flatcc_fb_gen_c_reader@@Base+0x5ac>
   1ba90:	add	r2, pc, r2
   1ba94:	add	r1, pc, r1
   1ba98:	bl	15fbc <__flatcc_fb_gen_c_includes@@Base>
   1ba9c:	ldr	r0, [pc, #220]	; 1bb80 <__flatcc_fb_gen_c_reader@@Base+0x5b0>
   1baa0:	mov	r2, #39	; 0x27
   1baa4:	mov	r1, #1
   1baa8:	ldr	r3, [r5, #204]	; 0xcc
   1baac:	add	r0, pc, r0
   1bab0:	bl	13fec <fwrite@plt>
   1bab4:	b	1b69c <__flatcc_fb_gen_c_reader@@Base+0xcc>
   1bab8:	mov	r3, r0
   1babc:	ldr	r0, [pc, #192]	; 1bb84 <__flatcc_fb_gen_c_reader@@Base+0x5b4>
   1bac0:	mov	r2, #36	; 0x24
   1bac4:	mov	r1, #1
   1bac8:	add	r0, pc, r0
   1bacc:	bl	13fec <fwrite@plt>
   1bad0:	ldr	r0, [r5, #204]	; 0xcc
   1bad4:	b	1b994 <__flatcc_fb_gen_c_reader@@Base+0x3c4>
   1bad8:	ldr	r2, [pc, #168]	; 1bb88 <__flatcc_fb_gen_c_reader@@Base+0x5b8>
   1badc:	movw	r3, #1672	; 0x688
   1bae0:	ldr	r0, [pc, #164]	; 1bb8c <__flatcc_fb_gen_c_reader@@Base+0x5bc>
   1bae4:	ldr	r4, [pc, #164]	; 1bb90 <__flatcc_fb_gen_c_reader@@Base+0x5c0>
   1bae8:	ldr	r1, [pc, #164]	; 1bb94 <__flatcc_fb_gen_c_reader@@Base+0x5c4>
   1baec:	add	r0, pc, r0
   1baf0:	ldr	ip, [sl, r2]
   1baf4:	add	r4, pc, r4
   1baf8:	str	r0, [sp]
   1bafc:	mov	r2, r4
   1bb00:	add	r1, pc, r1
   1bb04:	ldr	r0, [ip]
   1bb08:	bl	14064 <fprintf@plt>
   1bb0c:	ldr	r3, [pc, #132]	; 1bb98 <__flatcc_fb_gen_c_reader@@Base+0x5c8>
   1bb10:	mov	r1, r4
   1bb14:	movw	r2, #1672	; 0x688
   1bb18:	ldr	r0, [pc, #124]	; 1bb9c <__flatcc_fb_gen_c_reader@@Base+0x5cc>
   1bb1c:	add	r3, pc, r3
   1bb20:	add	r3, r3, #164	; 0xa4
   1bb24:	add	r0, pc, r0
   1bb28:	bl	14118 <__assert_fail@plt>
   1bb2c:	andeq	sp, r2, r0, lsl #24
   1bb30:	andeq	r7, r2, r4, lsl #24
   1bb34:	andeq	r1, r5, r4, asr #19
   1bb38:	andeq	sp, r2, r4, lsl #27
   1bb3c:			; <UNDEFINED> instruction: 0x0002ddb0
   1bb40:	andeq	r6, r2, r0, lsr r2
   1bb44:	andeq	sp, r2, r0, lsr #27
   1bb48:	andeq	sp, r2, ip, asr pc
   1bb4c:	andeq	sp, r2, ip, lsr #27
   1bb50:	andeq	sp, r2, r0, ror #27
   1bb54:	andeq	sp, r2, ip, ror #26
   1bb58:	andeq	sp, r2, ip, lsr #27
   1bb5c:	ldrdeq	sp, [r2], -r4
   1bb60:	andeq	sp, r2, r4, lsr ip
   1bb64:	andeq	sp, r2, r8, asr #20
   1bb68:	andeq	sp, r2, r8, lsl #21
   1bb6c:	strdeq	r7, [r2], -ip
   1bb70:			; <UNDEFINED> instruction: 0x0002d7b0
   1bb74:	andeq	sp, r2, r4, asr r9
   1bb78:	andeq	sp, r2, r0, lsl #19
   1bb7c:	andeq	r5, r2, r0, lsl #28
   1bb80:	andeq	sp, r2, r0, ror r9
   1bb84:	ldrdeq	sp, [r2], -ip
   1bb88:	andeq	r0, r0, r0, lsr #1
   1bb8c:			; <UNDEFINED> instruction: 0x0002dabc
   1bb90:	andeq	r6, r2, r4, asr #1
   1bb94:	andeq	r6, r2, r0, lsl r3
   1bb98:	ldrdeq	r5, [r2], -ip
   1bb9c:	andeq	lr, r2, r0, lsl r8

0001bba0 <__flatcc_gen_sort@@Base>:
   1bba0:	ldr	r1, [pc, #304]	; 1bcd8 <__flatcc_gen_sort@@Base+0x138>
   1bba4:	mov	r2, r0
   1bba8:	str	r4, [sp, #-8]!
   1bbac:	mov	r4, r0
   1bbb0:	ldr	r0, [r0, #204]	; 0xcc
   1bbb4:	str	lr, [sp, #4]
   1bbb8:	sub	sp, sp, #24
   1bbbc:	add	r1, pc, r1
   1bbc0:	bl	14064 <fprintf@plt>
   1bbc4:	ldr	r1, [pc, #272]	; 1bcdc <__flatcc_gen_sort@@Base+0x13c>
   1bbc8:	mov	r3, r4
   1bbcc:	mov	r2, r4
   1bbd0:	ldr	r0, [r4, #204]	; 0xcc
   1bbd4:	add	r1, pc, r1
   1bbd8:	bl	14064 <fprintf@plt>
   1bbdc:	ldr	r1, [pc, #252]	; 1bce0 <__flatcc_gen_sort@@Base+0x140>
   1bbe0:	mov	r3, r4
   1bbe4:	mov	r2, r4
   1bbe8:	str	r4, [sp]
   1bbec:	ldr	r0, [r4, #204]	; 0xcc
   1bbf0:	add	r1, pc, r1
   1bbf4:	bl	14064 <fprintf@plt>
   1bbf8:	ldr	r1, [pc, #228]	; 1bce4 <__flatcc_gen_sort@@Base+0x144>
   1bbfc:	mov	r3, r4
   1bc00:	mov	r2, r4
   1bc04:	str	r4, [sp]
   1bc08:	str	r4, [sp, #4]
   1bc0c:	ldr	r0, [r4, #204]	; 0xcc
   1bc10:	add	r1, pc, r1
   1bc14:	bl	14064 <fprintf@plt>
   1bc18:	ldr	r1, [pc, #200]	; 1bce8 <__flatcc_gen_sort@@Base+0x148>
   1bc1c:	mov	r3, r4
   1bc20:	mov	r2, r4
   1bc24:	ldr	r0, [r4, #204]	; 0xcc
   1bc28:	add	r1, pc, r1
   1bc2c:	bl	14064 <fprintf@plt>
   1bc30:	ldr	r1, [pc, #180]	; 1bcec <__flatcc_gen_sort@@Base+0x14c>
   1bc34:	mov	r3, r4
   1bc38:	mov	r2, r4
   1bc3c:	str	r4, [sp]
   1bc40:	str	r4, [sp, #4]
   1bc44:	ldr	r0, [r4, #204]	; 0xcc
   1bc48:	add	r1, pc, r1
   1bc4c:	bl	14064 <fprintf@plt>
   1bc50:	ldr	r1, [pc, #152]	; 1bcf0 <__flatcc_gen_sort@@Base+0x150>
   1bc54:	mov	r3, r4
   1bc58:	mov	r2, r4
   1bc5c:	str	r4, [sp]
   1bc60:	str	r4, [sp, #4]
   1bc64:	str	r4, [sp, #8]
   1bc68:	str	r4, [sp, #12]
   1bc6c:	add	r1, pc, r1
   1bc70:	ldr	r0, [r4, #204]	; 0xcc
   1bc74:	bl	14064 <fprintf@plt>
   1bc78:	ldr	r1, [pc, #116]	; 1bcf4 <__flatcc_gen_sort@@Base+0x154>
   1bc7c:	mov	r3, r4
   1bc80:	mov	r2, r4
   1bc84:	str	r4, [sp]
   1bc88:	str	r4, [sp, #4]
   1bc8c:	ldr	r0, [r4, #204]	; 0xcc
   1bc90:	add	r1, pc, r1
   1bc94:	bl	14064 <fprintf@plt>
   1bc98:	ldr	r1, [pc, #88]	; 1bcf8 <__flatcc_gen_sort@@Base+0x158>
   1bc9c:	mov	r3, r4
   1bca0:	mov	r2, r4
   1bca4:	str	r4, [sp]
   1bca8:	str	r4, [sp, #4]
   1bcac:	str	r4, [sp, #8]
   1bcb0:	str	r4, [sp, #12]
   1bcb4:	add	r1, pc, r1
   1bcb8:	str	r4, [sp, #16]
   1bcbc:	ldr	r0, [r4, #204]	; 0xcc
   1bcc0:	bl	14064 <fprintf@plt>
   1bcc4:	mov	r0, #0
   1bcc8:	add	sp, sp, #24
   1bccc:	ldr	r4, [sp]
   1bcd0:	add	sp, sp, #4
   1bcd4:	pop	{pc}		; (ldr pc, [sp], #4)
   1bcd8:	andeq	sp, r2, r0, ror sl
   1bcdc:	andeq	sp, r2, r8, lsr #28
   1bce0:	andeq	sp, r2, ip, lsl pc
   1bce4:	ldrdeq	sp, [r2], -r0
   1bce8:	andeq	lr, r2, ip, asr #32
   1bcec:	andeq	lr, r2, r4, asr #3
   1bcf0:	andeq	lr, r2, r8, lsr #4
   1bcf4:	muleq	r2, r4, r2
   1bcf8:	ldrdeq	lr, [r2], -r4
   1bcfc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1bd00:	mov	r5, r0
   1bd04:	strd	r6, [sp, #8]
   1bd08:	strd	r8, [sp, #16]
   1bd0c:	strd	sl, [sp, #24]
   1bd10:	mov	sl, r1
   1bd14:	mov	fp, r2
   1bd18:	str	lr, [sp, #32]
   1bd1c:	sub	sp, sp, #500	; 0x1f4
   1bd20:	ldr	r4, [sp, #536]	; 0x218
   1bd24:	str	r3, [sp, #32]
   1bd28:	ldr	r3, [pc, #568]	; 1bf68 <__flatcc_gen_sort@@Base+0x3c8>
   1bd2c:	ldr	ip, [sp, #540]	; 0x21c
   1bd30:	add	r3, pc, r3
   1bd34:	cmp	ip, #0
   1bd38:	str	r3, [sp, #52]	; 0x34
   1bd3c:	bne	1bf04 <__flatcc_gen_sort@@Base+0x364>
   1bd40:	ldr	r3, [pc, #548]	; 1bf6c <__flatcc_gen_sort@@Base+0x3cc>
   1bd44:	add	r3, pc, r3
   1bd48:	str	r3, [sp, #36]	; 0x24
   1bd4c:	add	r8, sp, #56	; 0x38
   1bd50:	mov	r2, #220	; 0xdc
   1bd54:	mov	r1, #0
   1bd58:	mov	r0, r8
   1bd5c:	add	r9, sp, #276	; 0x114
   1bd60:	bl	1407c <memset@plt>
   1bd64:	mov	r2, #220	; 0xdc
   1bd68:	mov	r1, #0
   1bd6c:	mov	r0, r9
   1bd70:	bl	1407c <memset@plt>
   1bd74:	mov	r1, r4
   1bd78:	mov	r2, r8
   1bd7c:	ldr	r0, [r4, #12]
   1bd80:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   1bd84:	ldr	r4, [r4, #20]
   1bd88:	cmp	r4, #0
   1bd8c:	beq	1bec8 <__flatcc_gen_sort@@Base+0x328>
   1bd90:	ldr	r3, [pc, #472]	; 1bf70 <__flatcc_gen_sort@@Base+0x3d0>
   1bd94:	add	r3, pc, r3
   1bd98:	str	r3, [sp, #40]	; 0x28
   1bd9c:	ldr	r3, [pc, #464]	; 1bf74 <__flatcc_gen_sort@@Base+0x3d4>
   1bda0:	add	r3, pc, r3
   1bda4:	str	r3, [sp, #44]	; 0x2c
   1bda8:	ldr	r3, [pc, #456]	; 1bf78 <__flatcc_gen_sort@@Base+0x3d8>
   1bdac:	add	r3, pc, r3
   1bdb0:	str	r3, [sp, #48]	; 0x30
   1bdb4:	b	1be18 <__flatcc_gen_sort@@Base+0x278>
   1bdb8:	ldr	r1, [r4, #16]
   1bdbc:	mov	r2, r9
   1bdc0:	ldr	r0, [r1, #12]
   1bdc4:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   1bdc8:	ldr	r3, [r4, #16]
   1bdcc:	ldrh	r3, [r3, #8]
   1bdd0:	cmp	r3, #0
   1bdd4:	bne	1bee8 <__flatcc_gen_sort@@Base+0x348>
   1bdd8:	ldr	r3, [sp, #36]	; 0x24
   1bddc:	mov	r2, r5
   1bde0:	stm	sp, {r5, sl}
   1bde4:	ldr	r1, [sp, #44]	; 0x2c
   1bde8:	str	fp, [sp, #8]
   1bdec:	ldr	r0, [sp, #32]
   1bdf0:	str	r0, [sp, #12]
   1bdf4:	str	r8, [sp, #16]
   1bdf8:	str	r7, [sp, #20]
   1bdfc:	str	r6, [sp, #24]
   1be00:	str	r9, [sp, #28]
   1be04:	ldr	r0, [r5, #204]	; 0xcc
   1be08:	bl	14064 <fprintf@plt>
   1be0c:	ldr	r4, [r4]
   1be10:	cmp	r4, #0
   1be14:	beq	1bec8 <__flatcc_gen_sort@@Base+0x328>
   1be18:	ldrh	r3, [r4, #24]
   1be1c:	ldr	r2, [r4, #4]
   1be20:	cmp	r3, #10
   1be24:	ldrd	r6, [r2]
   1be28:	beq	1be90 <__flatcc_gen_sort@@Base+0x2f0>
   1be2c:	cmp	r3, #14
   1be30:	beq	1bdb8 <__flatcc_gen_sort@@Base+0x218>
   1be34:	cmp	r3, #0
   1be38:	beq	1be0c <__flatcc_gen_sort@@Base+0x26c>
   1be3c:	ldr	r2, [pc, #312]	; 1bf7c <__flatcc_gen_sort@@Base+0x3dc>
   1be40:	movw	r3, #1368	; 0x558
   1be44:	ldr	r1, [sp, #52]	; 0x34
   1be48:	ldr	r0, [pc, #304]	; 1bf80 <__flatcc_gen_sort@@Base+0x3e0>
   1be4c:	ldr	r4, [pc, #304]	; 1bf84 <__flatcc_gen_sort@@Base+0x3e4>
   1be50:	ldr	ip, [r1, r2]
   1be54:	add	r0, pc, r0
   1be58:	ldr	r1, [pc, #296]	; 1bf88 <__flatcc_gen_sort@@Base+0x3e8>
   1be5c:	add	r4, pc, r4
   1be60:	str	r0, [sp]
   1be64:	mov	r2, r4
   1be68:	ldr	r0, [ip]
   1be6c:	add	r1, pc, r1
   1be70:	bl	14064 <fprintf@plt>
   1be74:	ldr	r3, [pc, #272]	; 1bf8c <__flatcc_gen_sort@@Base+0x3ec>
   1be78:	mov	r1, r4
   1be7c:	movw	r2, #1368	; 0x558
   1be80:	ldr	r0, [pc, #264]	; 1bf90 <__flatcc_gen_sort@@Base+0x3f0>
   1be84:	add	r3, pc, r3
   1be88:	add	r0, pc, r0
   1be8c:	bl	14118 <__assert_fail@plt>
   1be90:	ldr	r0, [sp, #32]
   1be94:	mov	r2, r5
   1be98:	stm	sp, {r5, sl, fp}
   1be9c:	ldr	r3, [sp, #36]	; 0x24
   1bea0:	str	r0, [sp, #12]
   1bea4:	str	r8, [sp, #16]
   1bea8:	str	r7, [sp, #20]
   1beac:	str	r6, [sp, #24]
   1beb0:	ldr	r1, [sp, #40]	; 0x28
   1beb4:	ldr	r0, [r5, #204]	; 0xcc
   1beb8:	bl	14064 <fprintf@plt>
   1bebc:	ldr	r4, [r4]
   1bec0:	cmp	r4, #0
   1bec4:	bne	1be18 <__flatcc_gen_sort@@Base+0x278>
   1bec8:	mov	r0, #0
   1becc:	add	sp, sp, #500	; 0x1f4
   1bed0:	ldrd	r4, [sp]
   1bed4:	ldrd	r6, [sp, #8]
   1bed8:	ldrd	r8, [sp, #16]
   1bedc:	ldrd	sl, [sp, #24]
   1bee0:	add	sp, sp, #32
   1bee4:	pop	{pc}		; (ldr pc, [sp], #4)
   1bee8:	cmp	r3, #1
   1beec:	bne	1bf14 <__flatcc_gen_sort@@Base+0x374>
   1bef0:	mov	r2, r5
   1bef4:	stm	sp, {r5, sl}
   1bef8:	ldr	r3, [sp, #36]	; 0x24
   1befc:	ldr	r1, [sp, #48]	; 0x30
   1bf00:	b	1bde8 <__flatcc_gen_sort@@Base+0x248>
   1bf04:	ldr	r3, [pc, #136]	; 1bf94 <__flatcc_gen_sort@@Base+0x3f4>
   1bf08:	add	r3, pc, r3
   1bf0c:	str	r3, [sp, #36]	; 0x24
   1bf10:	b	1bd4c <__flatcc_gen_sort@@Base+0x1ac>
   1bf14:	ldr	r2, [pc, #96]	; 1bf7c <__flatcc_gen_sort@@Base+0x3dc>
   1bf18:	movw	r3, #1358	; 0x54e
   1bf1c:	ldr	r1, [sp, #52]	; 0x34
   1bf20:	ldr	r0, [pc, #112]	; 1bf98 <__flatcc_gen_sort@@Base+0x3f8>
   1bf24:	ldr	r4, [pc, #112]	; 1bf9c <__flatcc_gen_sort@@Base+0x3fc>
   1bf28:	ldr	ip, [r1, r2]
   1bf2c:	add	r0, pc, r0
   1bf30:	ldr	r1, [pc, #104]	; 1bfa0 <__flatcc_gen_sort@@Base+0x400>
   1bf34:	add	r4, pc, r4
   1bf38:	str	r0, [sp]
   1bf3c:	mov	r2, r4
   1bf40:	ldr	r0, [ip]
   1bf44:	add	r1, pc, r1
   1bf48:	bl	14064 <fprintf@plt>
   1bf4c:	ldr	r3, [pc, #80]	; 1bfa4 <__flatcc_gen_sort@@Base+0x404>
   1bf50:	mov	r1, r4
   1bf54:	movw	r2, #1358	; 0x54e
   1bf58:	ldr	r0, [pc, #72]	; 1bfa8 <__flatcc_gen_sort@@Base+0x408>
   1bf5c:	add	r3, pc, r3
   1bf60:	add	r0, pc, r0
   1bf64:	bl	14118 <__assert_fail@plt>
   1bf68:	andeq	r1, r5, r8, asr #5
   1bf6c:			; <UNDEFINED> instruction: 0x0002e3b0
   1bf70:	andeq	lr, r2, r0, lsl #9
   1bf74:	andeq	lr, r2, ip, asr r3
   1bf78:	andeq	lr, r2, ip, lsl #7
   1bf7c:	andeq	r0, r0, r0, lsr #1
   1bf80:	strdeq	lr, [r2], -r8
   1bf84:	andeq	lr, r2, r8, lsl r3
   1bf88:	andeq	r5, r2, r4, lsr #31
   1bf8c:	andeq	lr, r2, ip, ror r1
   1bf90:	andeq	lr, r2, ip, lsr #9
   1bf94:	ldrdeq	lr, [r2], -ip
   1bf98:			; <UNDEFINED> instruction: 0x0002e2b0
   1bf9c:	andeq	lr, r2, r0, asr #4
   1bfa0:	andeq	r5, r2, ip, asr #29
   1bfa4:	andeq	lr, r2, r4, lsr #1
   1bfa8:	ldrdeq	lr, [r2], -r4
   1bfac:	strd	r4, [sp, #-16]!
   1bfb0:	subs	r4, r0, #0
   1bfb4:	moveq	r5, r4
   1bfb8:	str	r6, [sp, #8]
   1bfbc:	str	lr, [sp, #12]
   1bfc0:	beq	1bff0 <__flatcc_gen_sort@@Base+0x450>
   1bfc4:	mov	r5, #0
   1bfc8:	ldrh	r3, [r4, #72]	; 0x48
   1bfcc:	tst	r3, #4
   1bfd0:	bne	1bfe4 <__flatcc_gen_sort@@Base+0x444>
   1bfd4:	ldrh	r3, [r4, #24]
   1bfd8:	cmp	r3, #14
   1bfdc:	beq	1c004 <__flatcc_gen_sort@@Base+0x464>
   1bfe0:	add	r5, r5, #1
   1bfe4:	ldr	r4, [r4]
   1bfe8:	cmp	r4, #0
   1bfec:	bne	1bfc8 <__flatcc_gen_sort@@Base+0x428>
   1bff0:	mov	r0, r5
   1bff4:	ldrd	r4, [sp]
   1bff8:	ldr	r6, [sp, #8]
   1bffc:	add	sp, sp, #12
   1c000:	pop	{pc}		; (ldr pc, [sp], #4)
   1c004:	ldr	r3, [r4, #16]
   1c008:	ldrh	r2, [r3, #8]
   1c00c:	cmp	r2, #1
   1c010:	bne	1bfe0 <__flatcc_gen_sort@@Base+0x440>
   1c014:	ldr	r0, [r3, #20]
   1c018:	bl	1bfac <__flatcc_gen_sort@@Base+0x40c>
   1c01c:	add	r5, r5, r0
   1c020:	b	1bfe4 <__flatcc_gen_sort@@Base+0x444>
   1c024:	ldr	r2, [pc, #92]	; 1c088 <__flatcc_gen_sort@@Base+0x4e8>
   1c028:	mov	r3, #226	; 0xe2
   1c02c:	push	{lr}		; (str lr, [sp, #-4]!)
   1c030:	sub	sp, sp, #12
   1c034:	ldr	r1, [pc, #80]	; 1c08c <__flatcc_gen_sort@@Base+0x4ec>
   1c038:	ldr	r0, [pc, #80]	; 1c090 <__flatcc_gen_sort@@Base+0x4f0>
   1c03c:	add	r2, pc, r2
   1c040:	ldr	r4, [pc, #76]	; 1c094 <__flatcc_gen_sort@@Base+0x4f4>
   1c044:	ldr	ip, [r2, r1]
   1c048:	add	r0, pc, r0
   1c04c:	ldr	r1, [pc, #68]	; 1c098 <__flatcc_gen_sort@@Base+0x4f8>
   1c050:	add	r4, pc, r4
   1c054:	str	r0, [sp]
   1c058:	mov	r2, r4
   1c05c:	ldr	r0, [ip]
   1c060:	add	r1, pc, r1
   1c064:	bl	14064 <fprintf@plt>
   1c068:	ldr	r3, [pc, #44]	; 1c09c <__flatcc_gen_sort@@Base+0x4fc>
   1c06c:	mov	r1, r4
   1c070:	mov	r2, #226	; 0xe2
   1c074:	ldr	r0, [pc, #36]	; 1c0a0 <__flatcc_gen_sort@@Base+0x500>
   1c078:	add	r3, pc, r3
   1c07c:	add	r3, r3, #20
   1c080:	add	r0, pc, r0
   1c084:	bl	14118 <__assert_fail@plt>
   1c088:			; <UNDEFINED> instruction: 0x00050fbc
   1c08c:	andeq	r0, r0, r0, lsr #1
   1c090:	ldrdeq	r5, [r2], -r4
   1c094:	andeq	r5, r2, r0, ror #26
   1c098:			; <UNDEFINED> instruction: 0x00025db0
   1c09c:	andeq	sp, r2, r8, lsl #31
   1c0a0:			; <UNDEFINED> instruction: 0x0002e2b4
   1c0a4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1c0a8:	mov	r4, r1
   1c0ac:	mov	r1, #0
   1c0b0:	strd	r6, [sp, #8]
   1c0b4:	mov	r6, r0
   1c0b8:	strd	r8, [sp, #16]
   1c0bc:	mov	r8, r3
   1c0c0:	ldr	r3, [pc, #1744]	; 1c798 <__flatcc_gen_sort@@Base+0xbf8>
   1c0c4:	strd	sl, [sp, #24]
   1c0c8:	str	lr, [sp, #32]
   1c0cc:	sub	sp, sp, #284	; 0x11c
   1c0d0:	add	ip, sp, #60	; 0x3c
   1c0d4:	mov	r0, ip
   1c0d8:	add	r3, pc, r3
   1c0dc:	str	ip, [sp, #16]
   1c0e0:	str	r2, [sp, #36]	; 0x24
   1c0e4:	mov	r2, #220	; 0xdc
   1c0e8:	str	r3, [sp, #52]	; 0x34
   1c0ec:	bl	1407c <memset@plt>
   1c0f0:	cmp	r8, #1
   1c0f4:	beq	1c6d8 <__flatcc_gen_sort@@Base+0xb38>
   1c0f8:	cmp	r8, #2
   1c0fc:	bne	1c4f4 <__flatcc_gen_sort@@Base+0x954>
   1c100:	ldr	r3, [pc, #1684]	; 1c79c <__flatcc_gen_sort@@Base+0xbfc>
   1c104:	add	r3, pc, r3
   1c108:	str	r3, [sp, #20]
   1c10c:	ldr	r4, [r4]
   1c110:	cmp	r4, #0
   1c114:	moveq	r5, r4
   1c118:	beq	1c3f0 <__flatcc_gen_sort@@Base+0x850>
   1c11c:	ldr	r2, [pc, #1660]	; 1c7a0 <__flatcc_gen_sort@@Base+0xc00>
   1c120:	mov	fp, #0
   1c124:	mov	r5, fp
   1c128:	ldr	r3, [r4, #4]
   1c12c:	add	r2, pc, r2
   1c130:	str	r2, [sp, #28]
   1c134:	ldr	r2, [pc, #1640]	; 1c7a4 <__flatcc_gen_sort@@Base+0xc04>
   1c138:	ldr	r9, [r3]
   1c13c:	ldr	r7, [r3, #4]
   1c140:	add	r2, pc, r2
   1c144:	str	r2, [sp, #32]
   1c148:	ldr	r2, [pc, #1624]	; 1c7a8 <__flatcc_gen_sort@@Base+0xc08>
   1c14c:	add	r2, pc, r2
   1c150:	str	r2, [sp, #24]
   1c154:	ldr	r2, [pc, #1616]	; 1c7ac <__flatcc_gen_sort@@Base+0xc0c>
   1c158:	add	r2, pc, r2
   1c15c:	str	r2, [sp, #44]	; 0x2c
   1c160:	ldrh	r3, [r4, #24]
   1c164:	cmp	r3, #8
   1c168:	bne	1c268 <__flatcc_gen_sort@@Base+0x6c8>
   1c16c:	ldr	r3, [r4, #16]
   1c170:	sub	r3, r3, #1
   1c174:	cmp	r3, #10
   1c178:	addls	pc, pc, r3, lsl #2
   1c17c:	b	1c740 <__flatcc_gen_sort@@Base+0xba0>
   1c180:	b	1c35c <__flatcc_gen_sort@@Base+0x7bc>
   1c184:	b	1c350 <__flatcc_gen_sort@@Base+0x7b0>
   1c188:	b	1c344 <__flatcc_gen_sort@@Base+0x7a4>
   1c18c:	b	1c338 <__flatcc_gen_sort@@Base+0x798>
   1c190:	b	1c32c <__flatcc_gen_sort@@Base+0x78c>
   1c194:	b	1c320 <__flatcc_gen_sort@@Base+0x780>
   1c198:	b	1c314 <__flatcc_gen_sort@@Base+0x774>
   1c19c:	b	1c308 <__flatcc_gen_sort@@Base+0x768>
   1c1a0:	b	1c2fc <__flatcc_gen_sort@@Base+0x75c>
   1c1a4:	b	1c2f0 <__flatcc_gen_sort@@Base+0x750>
   1c1a8:	b	1c1ac <__flatcc_gen_sort@@Base+0x60c>
   1c1ac:	ldr	r1, [pc, #1532]	; 1c7b0 <__flatcc_gen_sort@@Base+0xc10>
   1c1b0:	add	r1, pc, r1
   1c1b4:	ldrh	r2, [r4, #72]	; 0x48
   1c1b8:	add	sl, r5, #1
   1c1bc:	ldr	r0, [r6, #204]	; 0xcc
   1c1c0:	tst	r2, #4
   1c1c4:	bne	1c48c <__flatcc_gen_sort@@Base+0x8ec>
   1c1c8:	ldrd	r2, [r4, #88]	; 0x58
   1c1cc:	cmp	r3, #0
   1c1d0:	cmpeq	r2, #1
   1c1d4:	beq	1c380 <__flatcc_gen_sort@@Base+0x7e0>
   1c1d8:	cmp	r8, #1
   1c1dc:	beq	1c4a8 <__flatcc_gen_sort@@Base+0x908>
   1c1e0:	cmp	r8, #2
   1c1e4:	bne	1c380 <__flatcc_gen_sort@@Base+0x7e0>
   1c1e8:	ldr	r3, [sp, #320]	; 0x140
   1c1ec:	str	r7, [sp]
   1c1f0:	cmp	r3, #0
   1c1f4:	mov	r3, r1
   1c1f8:	beq	1c678 <__flatcc_gen_sort@@Base+0xad8>
   1c1fc:	ldr	r1, [pc, #1456]	; 1c7b4 <__flatcc_gen_sort@@Base+0xc14>
   1c200:	mov	r2, r6
   1c204:	str	r9, [sp, #4]
   1c208:	str	r7, [sp, #8]
   1c20c:	str	r9, [sp, #12]
   1c210:	add	r1, pc, r1
   1c214:	bl	14064 <fprintf@plt>
   1c218:	mov	r5, sl
   1c21c:	ldr	r4, [r4]
   1c220:	cmp	r4, #0
   1c224:	beq	1c3f0 <__flatcc_gen_sort@@Base+0x850>
   1c228:	ldr	r3, [r4, #4]
   1c22c:	cmp	r5, #0
   1c230:	ldr	r9, [r3]
   1c234:	ldr	r7, [r3, #4]
   1c238:	ble	1c160 <__flatcc_gen_sort@@Base+0x5c0>
   1c23c:	tst	r5, #3
   1c240:	ldr	r3, [r6, #204]	; 0xcc
   1c244:	bne	1c368 <__flatcc_gen_sort@@Base+0x7c8>
   1c248:	mov	r2, #4
   1c24c:	mov	r1, #1
   1c250:	ldr	r0, [pc, #1376]	; 1c7b8 <__flatcc_gen_sort@@Base+0xc18>
   1c254:	add	r0, pc, r0
   1c258:	bl	13fec <fwrite@plt>
   1c25c:	ldrh	r3, [r4, #24]
   1c260:	cmp	r3, #8
   1c264:	beq	1c16c <__flatcc_gen_sort@@Base+0x5cc>
   1c268:	cmp	r3, #14
   1c26c:	bne	1c6e8 <__flatcc_gen_sort@@Base+0xb48>
   1c270:	ldr	r1, [r4, #16]
   1c274:	ldr	r2, [sp, #16]
   1c278:	ldr	r0, [r1, #12]
   1c27c:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   1c280:	ldr	r3, [r4, #16]
   1c284:	ldrh	r3, [r3, #8]
   1c288:	cmp	r3, #1
   1c28c:	ldrh	r3, [r4, #72]	; 0x48
   1c290:	beq	1c3a4 <__flatcc_gen_sort@@Base+0x804>
   1c294:	tst	r3, #4
   1c298:	add	sl, r5, #1
   1c29c:	ldr	r0, [r6, #204]	; 0xcc
   1c2a0:	bne	1c470 <__flatcc_gen_sort@@Base+0x8d0>
   1c2a4:	ldrd	r2, [r4, #88]	; 0x58
   1c2a8:	cmp	r3, #0
   1c2ac:	cmpeq	r2, #1
   1c2b0:	beq	1c434 <__flatcc_gen_sort@@Base+0x894>
   1c2b4:	cmp	r8, #1
   1c2b8:	beq	1c630 <__flatcc_gen_sort@@Base+0xa90>
   1c2bc:	cmp	r8, #2
   1c2c0:	bne	1c434 <__flatcc_gen_sort@@Base+0x894>
   1c2c4:	ldr	r3, [sp, #320]	; 0x140
   1c2c8:	str	r9, [sp]
   1c2cc:	cmp	r3, #0
   1c2d0:	mov	r3, r7
   1c2d4:	beq	1c6c0 <__flatcc_gen_sort@@Base+0xb20>
   1c2d8:	ldr	r1, [pc, #1244]	; 1c7bc <__flatcc_gen_sort@@Base+0xc1c>
   1c2dc:	stmib	sp, {r7, r9}
   1c2e0:	ldr	r2, [sp, #16]
   1c2e4:	add	r1, pc, r1
   1c2e8:	bl	14064 <fprintf@plt>
   1c2ec:	b	1c218 <__flatcc_gen_sort@@Base+0x678>
   1c2f0:	ldr	r1, [pc, #1224]	; 1c7c0 <__flatcc_gen_sort@@Base+0xc20>
   1c2f4:	add	r1, pc, r1
   1c2f8:	b	1c1b4 <__flatcc_gen_sort@@Base+0x614>
   1c2fc:	ldr	r1, [pc, #1216]	; 1c7c4 <__flatcc_gen_sort@@Base+0xc24>
   1c300:	add	r1, pc, r1
   1c304:	b	1c1b4 <__flatcc_gen_sort@@Base+0x614>
   1c308:	ldr	r1, [pc, #1208]	; 1c7c8 <__flatcc_gen_sort@@Base+0xc28>
   1c30c:	add	r1, pc, r1
   1c310:	b	1c1b4 <__flatcc_gen_sort@@Base+0x614>
   1c314:	ldr	r1, [pc, #1200]	; 1c7cc <__flatcc_gen_sort@@Base+0xc2c>
   1c318:	add	r1, pc, r1
   1c31c:	b	1c1b4 <__flatcc_gen_sort@@Base+0x614>
   1c320:	ldr	r1, [pc, #1192]	; 1c7d0 <__flatcc_gen_sort@@Base+0xc30>
   1c324:	add	r1, pc, r1
   1c328:	b	1c1b4 <__flatcc_gen_sort@@Base+0x614>
   1c32c:	ldr	r1, [pc, #1184]	; 1c7d4 <__flatcc_gen_sort@@Base+0xc34>
   1c330:	add	r1, pc, r1
   1c334:	b	1c1b4 <__flatcc_gen_sort@@Base+0x614>
   1c338:	ldr	r1, [pc, #1176]	; 1c7d8 <__flatcc_gen_sort@@Base+0xc38>
   1c33c:	add	r1, pc, r1
   1c340:	b	1c1b4 <__flatcc_gen_sort@@Base+0x614>
   1c344:	ldr	r1, [pc, #1168]	; 1c7dc <__flatcc_gen_sort@@Base+0xc3c>
   1c348:	add	r1, pc, r1
   1c34c:	b	1c1b4 <__flatcc_gen_sort@@Base+0x614>
   1c350:	ldr	r1, [pc, #1160]	; 1c7e0 <__flatcc_gen_sort@@Base+0xc40>
   1c354:	add	r1, pc, r1
   1c358:	b	1c1b4 <__flatcc_gen_sort@@Base+0x614>
   1c35c:	ldr	r1, [pc, #1152]	; 1c7e4 <__flatcc_gen_sort@@Base+0xc44>
   1c360:	add	r1, pc, r1
   1c364:	b	1c1b4 <__flatcc_gen_sort@@Base+0x614>
   1c368:	ldr	r0, [pc, #1144]	; 1c7e8 <__flatcc_gen_sort@@Base+0xc48>
   1c36c:	mov	r2, #2
   1c370:	mov	r1, #1
   1c374:	add	r0, pc, r0
   1c378:	bl	13fec <fwrite@plt>
   1c37c:	b	1c160 <__flatcc_gen_sort@@Base+0x5c0>
   1c380:	ldr	r3, [sp, #320]	; 0x140
   1c384:	cmp	r3, #0
   1c388:	mov	r3, r9
   1c38c:	beq	1c45c <__flatcc_gen_sort@@Base+0x8bc>
   1c390:	mov	r2, r7
   1c394:	stm	sp, {r7, r9}
   1c398:	ldr	r1, [sp, #32]
   1c39c:	bl	14064 <fprintf@plt>
   1c3a0:	b	1c218 <__flatcc_gen_sort@@Base+0x678>
   1c3a4:	tst	r3, #4
   1c3a8:	ldr	r0, [r6, #204]	; 0xcc
   1c3ac:	bne	1c604 <__flatcc_gen_sort@@Base+0xa64>
   1c3b0:	ldr	r3, [sp, #320]	; 0x140
   1c3b4:	str	r7, [sp]
   1c3b8:	cmp	r3, #0
   1c3bc:	ldr	r3, [sp, #20]
   1c3c0:	beq	1c504 <__flatcc_gen_sort@@Base+0x964>
   1c3c4:	ldr	r1, [pc, #1056]	; 1c7ec <__flatcc_gen_sort@@Base+0xc4c>
   1c3c8:	add	r5, r5, #1
   1c3cc:	str	r9, [sp, #4]
   1c3d0:	str	r7, [sp, #8]
   1c3d4:	str	r9, [sp, #12]
   1c3d8:	ldr	r2, [sp, #16]
   1c3dc:	add	r1, pc, r1
   1c3e0:	bl	14064 <fprintf@plt>
   1c3e4:	ldr	r4, [r4]
   1c3e8:	cmp	r4, #0
   1c3ec:	bne	1c228 <__flatcc_gen_sort@@Base+0x688>
   1c3f0:	ldr	r3, [sp, #36]	; 0x24
   1c3f4:	cmp	r3, #0
   1c3f8:	ble	1c414 <__flatcc_gen_sort@@Base+0x874>
   1c3fc:	ldr	r0, [pc, #1004]	; 1c7f0 <__flatcc_gen_sort@@Base+0xc50>
   1c400:	mov	r2, #4
   1c404:	mov	r1, #1
   1c408:	ldr	r3, [r6, #204]	; 0xcc
   1c40c:	add	r0, pc, r0
   1c410:	bl	13fec <fwrite@plt>
   1c414:	mov	r0, r5
   1c418:	add	sp, sp, #284	; 0x11c
   1c41c:	ldrd	r4, [sp]
   1c420:	ldrd	r6, [sp, #8]
   1c424:	ldrd	r8, [sp, #16]
   1c428:	ldrd	sl, [sp, #24]
   1c42c:	add	sp, sp, #32
   1c430:	pop	{pc}		; (ldr pc, [sp], #4)
   1c434:	ldr	r3, [sp, #320]	; 0x140
   1c438:	cmp	r3, #0
   1c43c:	mov	r3, r9
   1c440:	beq	1c4dc <__flatcc_gen_sort@@Base+0x93c>
   1c444:	ldr	r1, [pc, #936]	; 1c7f4 <__flatcc_gen_sort@@Base+0xc54>
   1c448:	mov	r2, r7
   1c44c:	stm	sp, {r7, r9}
   1c450:	add	r1, pc, r1
   1c454:	bl	14064 <fprintf@plt>
   1c458:	b	1c218 <__flatcc_gen_sort@@Base+0x678>
   1c45c:	mov	r2, r7
   1c460:	str	r5, [sp]
   1c464:	ldr	r1, [sp, #28]
   1c468:	bl	14064 <fprintf@plt>
   1c46c:	b	1c218 <__flatcc_gen_sort@@Base+0x678>
   1c470:	ldr	r1, [pc, #896]	; 1c7f8 <__flatcc_gen_sort@@Base+0xc58>
   1c474:	mov	r2, fp
   1c478:	mov	r5, sl
   1c47c:	add	fp, fp, #1
   1c480:	add	r1, pc, r1
   1c484:	bl	14064 <fprintf@plt>
   1c488:	b	1c21c <__flatcc_gen_sort@@Base+0x67c>
   1c48c:	ldr	r1, [pc, #872]	; 1c7fc <__flatcc_gen_sort@@Base+0xc5c>
   1c490:	mov	r2, fp
   1c494:	mov	r5, sl
   1c498:	add	fp, fp, #1
   1c49c:	add	r1, pc, r1
   1c4a0:	bl	14064 <fprintf@plt>
   1c4a4:	b	1c21c <__flatcc_gen_sort@@Base+0x67c>
   1c4a8:	ldr	r3, [sp, #320]	; 0x140
   1c4ac:	str	r7, [sp]
   1c4b0:	cmp	r3, #0
   1c4b4:	mov	r3, r1
   1c4b8:	beq	1c65c <__flatcc_gen_sort@@Base+0xabc>
   1c4bc:	ldr	r1, [pc, #828]	; 1c800 <__flatcc_gen_sort@@Base+0xc60>
   1c4c0:	mov	r2, r6
   1c4c4:	str	r9, [sp, #4]
   1c4c8:	str	r7, [sp, #8]
   1c4cc:	str	r9, [sp, #12]
   1c4d0:	add	r1, pc, r1
   1c4d4:	bl	14064 <fprintf@plt>
   1c4d8:	b	1c218 <__flatcc_gen_sort@@Base+0x678>
   1c4dc:	ldr	r1, [pc, #800]	; 1c804 <__flatcc_gen_sort@@Base+0xc64>
   1c4e0:	mov	r2, r7
   1c4e4:	str	r5, [sp]
   1c4e8:	add	r1, pc, r1
   1c4ec:	bl	14064 <fprintf@plt>
   1c4f0:	b	1c218 <__flatcc_gen_sort@@Base+0x678>
   1c4f4:	ldr	r3, [pc, #780]	; 1c808 <__flatcc_gen_sort@@Base+0xc68>
   1c4f8:	add	r3, pc, r3
   1c4fc:	str	r3, [sp, #20]
   1c500:	b	1c10c <__flatcc_gen_sort@@Base+0x56c>
   1c504:	ldr	r1, [pc, #768]	; 1c80c <__flatcc_gen_sort@@Base+0xc6c>
   1c508:	str	r9, [sp, #4]
   1c50c:	ldr	r2, [sp, #16]
   1c510:	add	r1, pc, r1
   1c514:	bl	14064 <fprintf@plt>
   1c518:	ldr	r3, [r4, #16]
   1c51c:	ldr	r0, [r3, #20]
   1c520:	bl	1bfac <__flatcc_gen_sort@@Base+0x40c>
   1c524:	subs	sl, r0, #0
   1c528:	ble	1c5f4 <__flatcc_gen_sort@@Base+0xa54>
   1c52c:	ldr	r3, [pc, #732]	; 1c810 <__flatcc_gen_sort@@Base+0xc70>
   1c530:	str	r4, [sp, #40]	; 0x28
   1c534:	ldr	r9, [sp, #36]	; 0x24
   1c538:	ldr	r7, [sp, #320]	; 0x140
   1c53c:	add	r3, pc, r3
   1c540:	str	r3, [sp, #48]	; 0x30
   1c544:	b	1c584 <__flatcc_gen_sort@@Base+0x9e4>
   1c548:	cmp	r9, #4
   1c54c:	ble	1c5cc <__flatcc_gen_sort@@Base+0xa2c>
   1c550:	ldr	r2, [pc, #700]	; 1c814 <__flatcc_gen_sort@@Base+0xc74>
   1c554:	ldr	r1, [pc, #700]	; 1c818 <__flatcc_gen_sort@@Base+0xc78>
   1c558:	add	r2, pc, r2
   1c55c:	add	r1, pc, r1
   1c560:	bl	14064 <fprintf@plt>
   1c564:	ldr	r0, [r6, #204]	; 0xcc
   1c568:	mov	r2, r4
   1c56c:	add	r7, r7, #1
   1c570:	ldr	r1, [pc, #676]	; 1c81c <__flatcc_gen_sort@@Base+0xc7c>
   1c574:	add	r1, pc, r1
   1c578:	bl	14064 <fprintf@plt>
   1c57c:	cmp	sl, r7
   1c580:	beq	1c5ec <__flatcc_gen_sort@@Base+0xa4c>
   1c584:	cmp	r9, #0
   1c588:	add	r4, r5, r7
   1c58c:	ldr	r0, [r6, #204]	; 0xcc
   1c590:	beq	1c568 <__flatcc_gen_sort@@Base+0x9c8>
   1c594:	cmp	r7, #0
   1c598:	beq	1c548 <__flatcc_gen_sort@@Base+0x9a8>
   1c59c:	tst	r7, #3
   1c5a0:	bne	1c5b0 <__flatcc_gen_sort@@Base+0xa10>
   1c5a4:	sub	r3, r9, r7
   1c5a8:	cmp	r3, #2
   1c5ac:	bgt	1c694 <__flatcc_gen_sort@@Base+0xaf4>
   1c5b0:	mov	r3, r0
   1c5b4:	mov	r2, #2
   1c5b8:	ldr	r0, [sp, #24]
   1c5bc:	mov	r1, #1
   1c5c0:	bl	13fec <fwrite@plt>
   1c5c4:	ldr	r0, [r6, #204]	; 0xcc
   1c5c8:	b	1c568 <__flatcc_gen_sort@@Base+0x9c8>
   1c5cc:	mov	r3, r0
   1c5d0:	ldr	r0, [pc, #584]	; 1c820 <__flatcc_gen_sort@@Base+0xc80>
   1c5d4:	mov	r2, #2
   1c5d8:	mov	r1, #1
   1c5dc:	add	r0, pc, r0
   1c5e0:	bl	13fec <fwrite@plt>
   1c5e4:	ldr	r0, [r6, #204]	; 0xcc
   1c5e8:	b	1c568 <__flatcc_gen_sort@@Base+0x9c8>
   1c5ec:	ldr	r4, [sp, #40]	; 0x28
   1c5f0:	add	r5, sl, r5
   1c5f4:	mov	r0, #41	; 0x29
   1c5f8:	ldr	r1, [r6, #204]	; 0xcc
   1c5fc:	bl	140c4 <fputc@plt>
   1c600:	b	1c21c <__flatcc_gen_sort@@Base+0x67c>
   1c604:	ldr	r1, [pc, #536]	; 1c824 <__flatcc_gen_sort@@Base+0xc84>
   1c608:	mov	r3, fp
   1c60c:	mov	r2, fp
   1c610:	add	fp, fp, #1
   1c614:	add	r1, pc, r1
   1c618:	bl	14064 <fprintf@plt>
   1c61c:	ldr	r3, [r4, #16]
   1c620:	ldr	r0, [r3, #20]
   1c624:	bl	1bfac <__flatcc_gen_sort@@Base+0x40c>
   1c628:	add	r5, r5, r0
   1c62c:	b	1c21c <__flatcc_gen_sort@@Base+0x67c>
   1c630:	ldr	r3, [sp, #320]	; 0x140
   1c634:	str	r9, [sp]
   1c638:	cmp	r3, #0
   1c63c:	mov	r3, r7
   1c640:	beq	1c6a8 <__flatcc_gen_sort@@Base+0xb08>
   1c644:	ldr	r1, [pc, #476]	; 1c828 <__flatcc_gen_sort@@Base+0xc88>
   1c648:	stmib	sp, {r7, r9}
   1c64c:	ldr	r2, [sp, #16]
   1c650:	add	r1, pc, r1
   1c654:	bl	14064 <fprintf@plt>
   1c658:	b	1c218 <__flatcc_gen_sort@@Base+0x678>
   1c65c:	ldr	r1, [pc, #456]	; 1c82c <__flatcc_gen_sort@@Base+0xc8c>
   1c660:	mov	r2, r6
   1c664:	str	r9, [sp, #4]
   1c668:	str	r5, [sp, #8]
   1c66c:	add	r1, pc, r1
   1c670:	bl	14064 <fprintf@plt>
   1c674:	b	1c218 <__flatcc_gen_sort@@Base+0x678>
   1c678:	ldr	r1, [pc, #432]	; 1c830 <__flatcc_gen_sort@@Base+0xc90>
   1c67c:	mov	r2, r6
   1c680:	str	r9, [sp, #4]
   1c684:	str	r5, [sp, #8]
   1c688:	add	r1, pc, r1
   1c68c:	bl	14064 <fprintf@plt>
   1c690:	b	1c218 <__flatcc_gen_sort@@Base+0x678>
   1c694:	ldr	r2, [sp, #44]	; 0x2c
   1c698:	ldr	r1, [sp, #48]	; 0x30
   1c69c:	bl	14064 <fprintf@plt>
   1c6a0:	ldr	r0, [r6, #204]	; 0xcc
   1c6a4:	b	1c568 <__flatcc_gen_sort@@Base+0x9c8>
   1c6a8:	ldr	r1, [pc, #388]	; 1c834 <__flatcc_gen_sort@@Base+0xc94>
   1c6ac:	str	r5, [sp, #4]
   1c6b0:	ldr	r2, [sp, #16]
   1c6b4:	add	r1, pc, r1
   1c6b8:	bl	14064 <fprintf@plt>
   1c6bc:	b	1c218 <__flatcc_gen_sort@@Base+0x678>
   1c6c0:	ldr	r1, [pc, #368]	; 1c838 <__flatcc_gen_sort@@Base+0xc98>
   1c6c4:	str	r5, [sp, #4]
   1c6c8:	ldr	r2, [sp, #16]
   1c6cc:	add	r1, pc, r1
   1c6d0:	bl	14064 <fprintf@plt>
   1c6d4:	b	1c218 <__flatcc_gen_sort@@Base+0x678>
   1c6d8:	ldr	r3, [pc, #348]	; 1c83c <__flatcc_gen_sort@@Base+0xc9c>
   1c6dc:	add	r3, pc, r3
   1c6e0:	str	r3, [sp, #20]
   1c6e4:	b	1c10c <__flatcc_gen_sort@@Base+0x56c>
   1c6e8:	ldr	r2, [pc, #336]	; 1c840 <__flatcc_gen_sort@@Base+0xca0>
   1c6ec:	movw	r3, #993	; 0x3e1
   1c6f0:	ldr	r1, [sp, #52]	; 0x34
   1c6f4:	ldr	r0, [pc, #328]	; 1c844 <__flatcc_gen_sort@@Base+0xca4>
   1c6f8:	ldr	r4, [pc, #328]	; 1c848 <__flatcc_gen_sort@@Base+0xca8>
   1c6fc:	ldr	ip, [r1, r2]
   1c700:	add	r0, pc, r0
   1c704:	ldr	r1, [pc, #320]	; 1c84c <__flatcc_gen_sort@@Base+0xcac>
   1c708:	add	r4, pc, r4
   1c70c:	str	r0, [sp]
   1c710:	mov	r2, r4
   1c714:	ldr	r0, [ip]
   1c718:	add	r1, pc, r1
   1c71c:	bl	14064 <fprintf@plt>
   1c720:	ldr	r3, [pc, #296]	; 1c850 <__flatcc_gen_sort@@Base+0xcb0>
   1c724:	mov	r1, r4
   1c728:	movw	r2, #993	; 0x3e1
   1c72c:	ldr	r0, [pc, #288]	; 1c854 <__flatcc_gen_sort@@Base+0xcb4>
   1c730:	add	r3, pc, r3
   1c734:	add	r3, r3, #52	; 0x34
   1c738:	add	r0, pc, r0
   1c73c:	bl	14118 <__assert_fail@plt>
   1c740:	ldr	r2, [pc, #248]	; 1c840 <__flatcc_gen_sort@@Base+0xca0>
   1c744:	mov	r3, #96	; 0x60
   1c748:	ldr	r1, [sp, #52]	; 0x34
   1c74c:	ldr	r0, [pc, #260]	; 1c858 <__flatcc_gen_sort@@Base+0xcb8>
   1c750:	ldr	r4, [pc, #260]	; 1c85c <__flatcc_gen_sort@@Base+0xcbc>
   1c754:	ldr	ip, [r1, r2]
   1c758:	add	r0, pc, r0
   1c75c:	ldr	r1, [pc, #252]	; 1c860 <__flatcc_gen_sort@@Base+0xcc0>
   1c760:	add	r4, pc, r4
   1c764:	str	r0, [sp]
   1c768:	mov	r2, r4
   1c76c:	ldr	r0, [ip]
   1c770:	add	r1, pc, r1
   1c774:	bl	14064 <fprintf@plt>
   1c778:	ldr	r3, [pc, #228]	; 1c864 <__flatcc_gen_sort@@Base+0xcc4>
   1c77c:	mov	r1, r4
   1c780:	mov	r2, #96	; 0x60
   1c784:	ldr	r0, [pc, #220]	; 1c868 <__flatcc_gen_sort@@Base+0xcc8>
   1c788:	add	r3, pc, r3
   1c78c:	add	r3, r3, #32
   1c790:	add	r0, pc, r0
   1c794:	bl	14118 <__assert_fail@plt>
   1c798:	andeq	r0, r5, r0, lsr #30
   1c79c:	andeq	lr, r2, r8, ror r1
   1c7a0:			; <UNDEFINED> instruction: 0x0002e2b0
   1c7a4:	andeq	lr, r2, r8, lsl #5
   1c7a8:	andeq	lr, r2, ip, asr #3
   1c7ac:	andeq	r7, r2, r8, lsr r2
   1c7b0:	andeq	r5, r2, r8, asr #25
   1c7b4:	andeq	lr, r2, r8, lsr #4
   1c7b8:	andeq	lr, r2, ip, lsr r0
   1c7bc:	andeq	lr, r2, r0, lsr #1
   1c7c0:	andeq	r5, r2, ip, ror #23
   1c7c4:	strdeq	r5, [r2], -r0
   1c7c8:	andeq	r5, r2, r0, asr fp
   1c7cc:	andeq	r5, r2, r0, asr #23
   1c7d0:	andeq	r5, r2, r4, lsr #23
   1c7d4:	andeq	sp, r3, r8, ror #15
   1c7d8:	andeq	r5, r2, ip, ror fp
   1c7dc:	andeq	r5, r2, r4, asr #22
   1c7e0:	andeq	r5, r2, ip, asr #22
   1c7e4:	andeq	r5, r2, r0, lsl fp
   1c7e8:	andeq	sp, r2, r4, lsr #30
   1c7ec:	strdeq	sp, [r2], -ip
   1c7f0:	andeq	sp, r2, r4, lsl #29
   1c7f4:	andeq	sp, r2, r8, ror pc
   1c7f8:	andeq	sp, r2, r0, lsr #29
   1c7fc:	andeq	sp, r2, r4, lsl #29
   1c800:	andeq	sp, r2, ip, lsl pc
   1c804:	strdeq	sp, [r2], -r4
   1c808:	andeq	pc, r2, r0, asr #13
   1c80c:	andeq	sp, r2, r8, ror #27
   1c810:	ldrdeq	sp, [r2], -r4
   1c814:	andeq	r6, r2, r8, lsr lr
   1c818:			; <UNDEFINED> instruction: 0x0002ddb4
   1c81c:	andeq	sp, r2, r8, lsr #27
   1c820:	andeq	sp, r2, ip, lsr sp
   1c824:	andeq	sp, r2, r8, lsl #25
   1c828:	andeq	sp, r2, r8, ror #25
   1c82c:	andeq	sp, r2, r8, lsr #27
   1c830:	ldrdeq	sp, [r2], -r8
   1c834:	andeq	sp, r2, ip, lsr #25
   1c838:	ldrdeq	sp, [r2], -ip
   1c83c:	andeq	sp, r2, r8, lsr #23
   1c840:	andeq	r0, r0, r0, lsr #1
   1c844:	andeq	sp, r2, r4, lsl #27
   1c848:	andeq	sp, r2, ip, ror #20
   1c84c:	strdeq	r5, [r2], -r8
   1c850:	ldrdeq	sp, [r2], -r0
   1c854:	strdeq	sp, [r2], -ip
   1c858:	andeq	r5, r2, r4, asr #13
   1c85c:	andeq	r5, r2, r0, asr r6
   1c860:	andeq	r5, r2, r0, lsr #13
   1c864:	andeq	sp, r2, r8, ror r8
   1c868:	andeq	sp, r2, r4, lsr #23
   1c86c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1c870:	mov	r4, r1
   1c874:	mov	r5, r2
   1c878:	ldr	r1, [pc, #1100]	; 1cccc <__flatcc_gen_sort@@Base+0x112c>
   1c87c:	mov	r2, #220	; 0xdc
   1c880:	strd	r6, [sp, #8]
   1c884:	mov	r6, r0
   1c888:	mov	r7, r3
   1c88c:	strd	r8, [sp, #16]
   1c890:	strd	sl, [sp, #24]
   1c894:	str	lr, [sp, #32]
   1c898:	sub	sp, sp, #252	; 0xfc
   1c89c:	add	r1, pc, r1
   1c8a0:	add	r8, sp, #28
   1c8a4:	mov	ip, r1
   1c8a8:	mov	r0, r8
   1c8ac:	str	r1, [sp, #20]
   1c8b0:	mov	r1, #0
   1c8b4:	bl	1407c <memset@plt>
   1c8b8:	ldr	r4, [r4]
   1c8bc:	cmp	r4, #0
   1c8c0:	beq	1c9bc <__flatcc_gen_sort@@Base+0xe1c>
   1c8c4:	ldr	r2, [pc, #1028]	; 1ccd0 <__flatcc_gen_sort@@Base+0x1130>
   1c8c8:	ldr	r3, [pc, #1028]	; 1ccd4 <__flatcc_gen_sort@@Base+0x1134>
   1c8cc:	ldr	r9, [pc, #1028]	; 1ccd8 <__flatcc_gen_sort@@Base+0x1138>
   1c8d0:	add	r2, pc, r2
   1c8d4:	ldr	fp, [pc, #1024]	; 1ccdc <__flatcc_gen_sort@@Base+0x113c>
   1c8d8:	str	r2, [sp, #12]
   1c8dc:	add	r3, pc, r3
   1c8e0:	ldr	r2, [sp, #288]	; 0x120
   1c8e4:	add	r9, pc, r9
   1c8e8:	add	fp, pc, fp
   1c8ec:	cmp	r2, #0
   1c8f0:	moveq	r9, r3
   1c8f4:	ldr	r3, [pc, #996]	; 1cce0 <__flatcc_gen_sort@@Base+0x1140>
   1c8f8:	add	r3, pc, r3
   1c8fc:	str	r3, [sp, #16]
   1c900:	ldrh	r3, [r4, #72]	; 0x48
   1c904:	tst	r3, #4
   1c908:	bne	1c9b0 <__flatcc_gen_sort@@Base+0xe10>
   1c90c:	ldrh	r3, [r4, #24]
   1c910:	cmp	r3, #8
   1c914:	bne	1c9dc <__flatcc_gen_sort@@Base+0xe3c>
   1c918:	cmp	r7, #0
   1c91c:	beq	1c948 <__flatcc_gen_sort@@Base+0xda8>
   1c920:	cmp	r5, #0
   1c924:	ldr	r3, [r6, #204]	; 0xcc
   1c928:	bne	1ca64 <__flatcc_gen_sort@@Base+0xec4>
   1c92c:	cmp	r7, #4
   1c930:	ble	1caf0 <__flatcc_gen_sort@@Base+0xf50>
   1c934:	ldr	r1, [pc, #936]	; 1cce4 <__flatcc_gen_sort@@Base+0x1144>
   1c938:	mov	r0, r3
   1c93c:	mov	r2, r9
   1c940:	add	r1, pc, r1
   1c944:	bl	14064 <fprintf@plt>
   1c948:	ldr	r3, [r4, #16]
   1c94c:	cmp	r3, #5
   1c950:	beq	1c990 <__flatcc_gen_sort@@Base+0xdf0>
   1c954:	sub	r3, r3, #1
   1c958:	cmp	r3, #10
   1c95c:	addls	pc, pc, r3, lsl #2
   1c960:	b	1cc1c <__flatcc_gen_sort@@Base+0x107c>
   1c964:	b	1cb38 <__flatcc_gen_sort@@Base+0xf98>
   1c968:	b	1cb24 <__flatcc_gen_sort@@Base+0xf84>
   1c96c:	b	1cbd4 <__flatcc_gen_sort@@Base+0x1034>
   1c970:	b	1cbc0 <__flatcc_gen_sort@@Base+0x1020>
   1c974:	b	1cc1c <__flatcc_gen_sort@@Base+0x107c>
   1c978:	b	1cb98 <__flatcc_gen_sort@@Base+0xff8>
   1c97c:	b	1cb84 <__flatcc_gen_sort@@Base+0xfe4>
   1c980:	b	1cb70 <__flatcc_gen_sort@@Base+0xfd0>
   1c984:	b	1cb5c <__flatcc_gen_sort@@Base+0xfbc>
   1c988:	b	1cb48 <__flatcc_gen_sort@@Base+0xfa8>
   1c98c:	b	1cbac <__flatcc_gen_sort@@Base+0x100c>
   1c990:	ldr	r3, [sp, #12]
   1c994:	mov	r2, r6
   1c998:	add	ip, r5, #1
   1c99c:	mov	r1, fp
   1c9a0:	str	r5, [sp]
   1c9a4:	ldr	r0, [r6, #204]	; 0xcc
   1c9a8:	mov	r5, ip
   1c9ac:	bl	14064 <fprintf@plt>
   1c9b0:	ldr	r4, [r4]
   1c9b4:	cmp	r4, #0
   1c9b8:	bne	1c900 <__flatcc_gen_sort@@Base+0xd60>
   1c9bc:	mov	r0, r5
   1c9c0:	add	sp, sp, #252	; 0xfc
   1c9c4:	ldrd	r4, [sp]
   1c9c8:	ldrd	r6, [sp, #8]
   1c9cc:	ldrd	r8, [sp, #16]
   1c9d0:	ldrd	sl, [sp, #24]
   1c9d4:	add	sp, sp, #32
   1c9d8:	pop	{pc}		; (ldr pc, [sp], #4)
   1c9dc:	cmp	r3, #14
   1c9e0:	bne	1cc74 <__flatcc_gen_sort@@Base+0x10d4>
   1c9e4:	ldr	r1, [r4, #16]
   1c9e8:	ldrh	r3, [r1, #8]
   1c9ec:	cmp	r3, #1
   1c9f0:	beq	1cac0 <__flatcc_gen_sort@@Base+0xf20>
   1c9f4:	cmp	r7, #0
   1c9f8:	beq	1ca28 <__flatcc_gen_sort@@Base+0xe88>
   1c9fc:	cmp	r5, #0
   1ca00:	ldr	r3, [r6, #204]	; 0xcc
   1ca04:	bne	1ca90 <__flatcc_gen_sort@@Base+0xef0>
   1ca08:	cmp	r7, #4
   1ca0c:	ble	1cb08 <__flatcc_gen_sort@@Base+0xf68>
   1ca10:	ldr	r1, [pc, #720]	; 1cce8 <__flatcc_gen_sort@@Base+0x1148>
   1ca14:	mov	r0, r3
   1ca18:	mov	r2, r9
   1ca1c:	add	r1, pc, r1
   1ca20:	bl	14064 <fprintf@plt>
   1ca24:	ldr	r1, [r4, #16]
   1ca28:	mov	r2, r8
   1ca2c:	add	sl, r5, #1
   1ca30:	ldr	r0, [r1, #12]
   1ca34:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   1ca38:	ldr	r1, [pc, #684]	; 1ccec <__flatcc_gen_sort@@Base+0x114c>
   1ca3c:	mov	r3, r5
   1ca40:	mov	r2, r8
   1ca44:	mov	r5, sl
   1ca48:	ldr	r0, [r6, #204]	; 0xcc
   1ca4c:	add	r1, pc, r1
   1ca50:	bl	14064 <fprintf@plt>
   1ca54:	ldr	r4, [r4]
   1ca58:	cmp	r4, #0
   1ca5c:	bne	1c900 <__flatcc_gen_sort@@Base+0xd60>
   1ca60:	b	1c9bc <__flatcc_gen_sort@@Base+0xe1c>
   1ca64:	tst	r5, #3
   1ca68:	bne	1ca78 <__flatcc_gen_sort@@Base+0xed8>
   1ca6c:	sub	r2, r7, r5
   1ca70:	cmp	r2, #2
   1ca74:	bgt	1cbe8 <__flatcc_gen_sort@@Base+0x1048>
   1ca78:	ldr	r0, [pc, #624]	; 1ccf0 <__flatcc_gen_sort@@Base+0x1150>
   1ca7c:	mov	r2, #2
   1ca80:	mov	r1, #1
   1ca84:	add	r0, pc, r0
   1ca88:	bl	13fec <fwrite@plt>
   1ca8c:	b	1c948 <__flatcc_gen_sort@@Base+0xda8>
   1ca90:	tst	r5, #3
   1ca94:	bne	1caa4 <__flatcc_gen_sort@@Base+0xf04>
   1ca98:	sub	r2, r7, r5
   1ca9c:	cmp	r2, #2
   1caa0:	bgt	1cc00 <__flatcc_gen_sort@@Base+0x1060>
   1caa4:	ldr	r0, [pc, #584]	; 1ccf4 <__flatcc_gen_sort@@Base+0x1154>
   1caa8:	mov	r1, #1
   1caac:	mov	r2, #2
   1cab0:	add	r0, pc, r0
   1cab4:	bl	13fec <fwrite@plt>
   1cab8:	ldr	r1, [r4, #16]
   1cabc:	b	1ca28 <__flatcc_gen_sort@@Base+0xe88>
   1cac0:	ldr	r3, [sp, #288]	; 0x120
   1cac4:	mov	r2, r5
   1cac8:	add	r1, r1, #20
   1cacc:	mov	r0, r6
   1cad0:	str	r3, [sp]
   1cad4:	mov	r3, r7
   1cad8:	bl	1c86c <__flatcc_gen_sort@@Base+0xccc>
   1cadc:	ldr	r4, [r4]
   1cae0:	mov	r5, r0
   1cae4:	cmp	r4, #0
   1cae8:	bne	1c900 <__flatcc_gen_sort@@Base+0xd60>
   1caec:	b	1c9bc <__flatcc_gen_sort@@Base+0xe1c>
   1caf0:	ldr	r0, [pc, #512]	; 1ccf8 <__flatcc_gen_sort@@Base+0x1158>
   1caf4:	mov	r2, #2
   1caf8:	mov	r1, #1
   1cafc:	add	r0, pc, r0
   1cb00:	bl	13fec <fwrite@plt>
   1cb04:	b	1c948 <__flatcc_gen_sort@@Base+0xda8>
   1cb08:	ldr	r0, [pc, #492]	; 1ccfc <__flatcc_gen_sort@@Base+0x115c>
   1cb0c:	mov	r1, #1
   1cb10:	mov	r2, #2
   1cb14:	add	r0, pc, r0
   1cb18:	bl	13fec <fwrite@plt>
   1cb1c:	ldr	r1, [r4, #16]
   1cb20:	b	1ca28 <__flatcc_gen_sort@@Base+0xe88>
   1cb24:	ldr	r2, [pc, #468]	; 1cd00 <__flatcc_gen_sort@@Base+0x1160>
   1cb28:	ldr	r3, [pc, #468]	; 1cd04 <__flatcc_gen_sort@@Base+0x1164>
   1cb2c:	add	r2, pc, r2
   1cb30:	add	r3, pc, r3
   1cb34:	b	1c998 <__flatcc_gen_sort@@Base+0xdf8>
   1cb38:	ldr	r3, [pc, #456]	; 1cd08 <__flatcc_gen_sort@@Base+0x1168>
   1cb3c:	ldr	r2, [sp, #16]
   1cb40:	add	r3, pc, r3
   1cb44:	b	1c998 <__flatcc_gen_sort@@Base+0xdf8>
   1cb48:	ldr	r2, [pc, #444]	; 1cd0c <__flatcc_gen_sort@@Base+0x116c>
   1cb4c:	ldr	r3, [pc, #444]	; 1cd10 <__flatcc_gen_sort@@Base+0x1170>
   1cb50:	add	r2, pc, r2
   1cb54:	add	r3, pc, r3
   1cb58:	b	1c998 <__flatcc_gen_sort@@Base+0xdf8>
   1cb5c:	ldr	r2, [pc, #432]	; 1cd14 <__flatcc_gen_sort@@Base+0x1174>
   1cb60:	ldr	r3, [pc, #432]	; 1cd18 <__flatcc_gen_sort@@Base+0x1178>
   1cb64:	add	r2, pc, r2
   1cb68:	add	r3, pc, r3
   1cb6c:	b	1c998 <__flatcc_gen_sort@@Base+0xdf8>
   1cb70:	ldr	r2, [pc, #420]	; 1cd1c <__flatcc_gen_sort@@Base+0x117c>
   1cb74:	ldr	r3, [pc, #420]	; 1cd20 <__flatcc_gen_sort@@Base+0x1180>
   1cb78:	add	r2, pc, r2
   1cb7c:	add	r3, pc, r3
   1cb80:	b	1c998 <__flatcc_gen_sort@@Base+0xdf8>
   1cb84:	ldr	r2, [pc, #408]	; 1cd24 <__flatcc_gen_sort@@Base+0x1184>
   1cb88:	ldr	r3, [pc, #408]	; 1cd28 <__flatcc_gen_sort@@Base+0x1188>
   1cb8c:	add	r2, pc, r2
   1cb90:	add	r3, pc, r3
   1cb94:	b	1c998 <__flatcc_gen_sort@@Base+0xdf8>
   1cb98:	ldr	r2, [pc, #396]	; 1cd2c <__flatcc_gen_sort@@Base+0x118c>
   1cb9c:	ldr	r3, [pc, #396]	; 1cd30 <__flatcc_gen_sort@@Base+0x1190>
   1cba0:	add	r2, pc, r2
   1cba4:	add	r3, pc, r3
   1cba8:	b	1c998 <__flatcc_gen_sort@@Base+0xdf8>
   1cbac:	ldr	r2, [pc, #384]	; 1cd34 <__flatcc_gen_sort@@Base+0x1194>
   1cbb0:	ldr	r3, [pc, #384]	; 1cd38 <__flatcc_gen_sort@@Base+0x1198>
   1cbb4:	add	r2, pc, r2
   1cbb8:	add	r3, pc, r3
   1cbbc:	b	1c998 <__flatcc_gen_sort@@Base+0xdf8>
   1cbc0:	ldr	r2, [pc, #372]	; 1cd3c <__flatcc_gen_sort@@Base+0x119c>
   1cbc4:	ldr	r3, [pc, #372]	; 1cd40 <__flatcc_gen_sort@@Base+0x11a0>
   1cbc8:	add	r2, pc, r2
   1cbcc:	add	r3, pc, r3
   1cbd0:	b	1c998 <__flatcc_gen_sort@@Base+0xdf8>
   1cbd4:	ldr	r2, [pc, #360]	; 1cd44 <__flatcc_gen_sort@@Base+0x11a4>
   1cbd8:	ldr	r3, [pc, #360]	; 1cd48 <__flatcc_gen_sort@@Base+0x11a8>
   1cbdc:	add	r2, pc, r2
   1cbe0:	add	r3, pc, r3
   1cbe4:	b	1c998 <__flatcc_gen_sort@@Base+0xdf8>
   1cbe8:	ldr	r1, [pc, #348]	; 1cd4c <__flatcc_gen_sort@@Base+0x11ac>
   1cbec:	mov	r0, r3
   1cbf0:	mov	r2, r9
   1cbf4:	add	r1, pc, r1
   1cbf8:	bl	14064 <fprintf@plt>
   1cbfc:	b	1c948 <__flatcc_gen_sort@@Base+0xda8>
   1cc00:	ldr	r1, [pc, #328]	; 1cd50 <__flatcc_gen_sort@@Base+0x11b0>
   1cc04:	mov	r0, r3
   1cc08:	mov	r2, r9
   1cc0c:	add	r1, pc, r1
   1cc10:	bl	14064 <fprintf@plt>
   1cc14:	ldr	r1, [r4, #16]
   1cc18:	b	1ca28 <__flatcc_gen_sort@@Base+0xe88>
   1cc1c:	ldr	r2, [pc, #304]	; 1cd54 <__flatcc_gen_sort@@Base+0x11b4>
   1cc20:	mov	r3, #141	; 0x8d
   1cc24:	ldr	r1, [sp, #20]
   1cc28:	ldr	r0, [pc, #296]	; 1cd58 <__flatcc_gen_sort@@Base+0x11b8>
   1cc2c:	ldr	r4, [pc, #296]	; 1cd5c <__flatcc_gen_sort@@Base+0x11bc>
   1cc30:	ldr	ip, [r1, r2]
   1cc34:	add	r0, pc, r0
   1cc38:	ldr	r1, [pc, #288]	; 1cd60 <__flatcc_gen_sort@@Base+0x11c0>
   1cc3c:	add	r4, pc, r4
   1cc40:	str	r0, [sp]
   1cc44:	mov	r2, r4
   1cc48:	ldr	r0, [ip]
   1cc4c:	add	r1, pc, r1
   1cc50:	bl	14064 <fprintf@plt>
   1cc54:	ldr	r3, [pc, #264]	; 1cd64 <__flatcc_gen_sort@@Base+0x11c4>
   1cc58:	mov	r1, r4
   1cc5c:	mov	r2, #141	; 0x8d
   1cc60:	ldr	r0, [pc, #256]	; 1cd68 <__flatcc_gen_sort@@Base+0x11c8>
   1cc64:	add	r3, pc, r3
   1cc68:	add	r3, r3, #84	; 0x54
   1cc6c:	add	r0, pc, r0
   1cc70:	bl	14118 <__assert_fail@plt>
   1cc74:	ldr	r2, [pc, #216]	; 1cd54 <__flatcc_gen_sort@@Base+0x11b4>
   1cc78:	movw	r3, #850	; 0x352
   1cc7c:	ldr	r1, [sp, #20]
   1cc80:	ldr	r0, [pc, #228]	; 1cd6c <__flatcc_gen_sort@@Base+0x11cc>
   1cc84:	ldr	r4, [pc, #228]	; 1cd70 <__flatcc_gen_sort@@Base+0x11d0>
   1cc88:	ldr	ip, [r1, r2]
   1cc8c:	add	r0, pc, r0
   1cc90:	ldr	r1, [pc, #220]	; 1cd74 <__flatcc_gen_sort@@Base+0x11d4>
   1cc94:	add	r4, pc, r4
   1cc98:	str	r0, [sp]
   1cc9c:	mov	r2, r4
   1cca0:	ldr	r0, [ip]
   1cca4:	add	r1, pc, r1
   1cca8:	bl	14064 <fprintf@plt>
   1ccac:	ldr	r3, [pc, #196]	; 1cd78 <__flatcc_gen_sort@@Base+0x11d8>
   1ccb0:	mov	r1, r4
   1ccb4:	movw	r2, #850	; 0x352
   1ccb8:	ldr	r0, [pc, #188]	; 1cd7c <__flatcc_gen_sort@@Base+0x11dc>
   1ccbc:	add	r3, pc, r3
   1ccc0:	add	r3, r3, #104	; 0x68
   1ccc4:	add	r0, pc, r0
   1ccc8:	bl	14118 <__assert_fail@plt>
   1cccc:	andeq	r0, r5, ip, asr r7
   1ccd0:	ldrdeq	r5, [r2], -r8
   1ccd4:			; <UNDEFINED> instruction: 0x00026ab4
   1ccd8:	strdeq	r8, [r2], -r4
   1ccdc:	andeq	sp, r2, r8, asr #23
   1cce0:	andeq	pc, r2, r0, asr #5
   1cce4:	ldrdeq	sp, [r2], -r0
   1cce8:	strdeq	sp, [r2], -r4
   1ccec:	andeq	sp, r2, r4, asr sl
   1ccf0:	muleq	r2, r4, r8
   1ccf4:	andeq	sp, r2, r8, ror #16
   1ccf8:	andeq	sp, r2, ip, lsl r8
   1ccfc:	andeq	sp, r2, r4, lsl #16
   1cd00:	andeq	pc, r2, ip, lsl #1
   1cd04:	andeq	r5, r2, r4, ror #6
   1cd08:	andeq	r5, r2, r4, lsr #6
   1cd0c:	andeq	pc, r2, r8, rrx
   1cd10:	andeq	r5, r2, ip, lsl #7
   1cd14:	andeq	pc, r2, r4, asr r0	; <UNPREDICTABLE>
   1cd18:	andeq	r5, r2, r0, lsl #7
   1cd1c:	andeq	pc, r2, r0, asr #32
   1cd20:	ldrdeq	r5, [r2], -r8
   1cd24:	andeq	pc, r2, ip, lsr #32
   1cd28:	andeq	r5, r2, r0, asr #6
   1cd2c:	andeq	pc, r2, r8, lsl r0	; <UNPREDICTABLE>
   1cd30:	andeq	r5, r2, ip, lsl r3
   1cd34:	andeq	pc, r2, r4
   1cd38:	andeq	r5, r2, r0, asr #5
   1cd3c:	strdeq	lr, [r2], -r0
   1cd40:	andeq	r5, r2, r4, ror #5
   1cd44:	ldrdeq	lr, [r2], -ip
   1cd48:	andeq	r5, r2, r0, lsr #5
   1cd4c:	andeq	sp, r2, ip, lsl r7
   1cd50:	andeq	sp, r2, r4, lsl #14
   1cd54:	andeq	r0, r0, r0, lsr #1
   1cd58:	andeq	r5, r2, r8, ror #3
   1cd5c:	andeq	r5, r2, r4, ror r1
   1cd60:	andeq	r5, r2, r4, asr #3
   1cd64:	muleq	r2, ip, r3
   1cd68:	andeq	sp, r2, r8, asr #13
   1cd6c:	andeq	sp, r2, r0, lsr r8
   1cd70:	andeq	sp, r2, r0, ror #9
   1cd74:	andeq	r5, r2, ip, ror #2
   1cd78:	andeq	sp, r2, r4, asr #6
   1cd7c:	andeq	sp, r2, r0, ror r6
   1cd80:	ldr	r3, [pc, #4060]	; 1dd64 <__flatcc_gen_sort@@Base+0x21c4>
   1cd84:	mov	r2, #220	; 0xdc
   1cd88:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1cd8c:	mov	r4, r1
   1cd90:	mov	r5, r0
   1cd94:	strd	r6, [sp, #8]
   1cd98:	mov	r1, #0
   1cd9c:	strd	r8, [sp, #16]
   1cda0:	strd	sl, [sp, #24]
   1cda4:	str	lr, [sp, #32]
   1cda8:	sub	sp, sp, #644	; 0x284
   1cdac:	add	r3, pc, r3
   1cdb0:	add	sl, sp, #200	; 0xc8
   1cdb4:	add	fp, sp, #420	; 0x1a4
   1cdb8:	mov	r0, sl
   1cdbc:	str	r3, [sp, #92]	; 0x5c
   1cdc0:	bl	1407c <memset@plt>
   1cdc4:	mov	r2, #220	; 0xdc
   1cdc8:	mov	r1, #0
   1cdcc:	mov	r0, fp
   1cdd0:	bl	1407c <memset@plt>
   1cdd4:	mov	r1, r4
   1cdd8:	mov	r2, sl
   1cddc:	ldr	r0, [r4, #12]
   1cde0:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   1cde4:	ldr	r4, [r4, #20]
   1cde8:	cmp	r4, #0
   1cdec:	beq	1cf14 <__flatcc_gen_sort@@Base+0x1374>
   1cdf0:	ldr	r3, [pc, #3952]	; 1dd68 <__flatcc_gen_sort@@Base+0x21c8>
   1cdf4:	add	r3, pc, r3
   1cdf8:	str	r3, [sp, #76]	; 0x4c
   1cdfc:	ldr	r3, [pc, #3944]	; 1dd6c <__flatcc_gen_sort@@Base+0x21cc>
   1ce00:	add	r3, pc, r3
   1ce04:	str	r3, [sp, #80]	; 0x50
   1ce08:	ldr	r3, [pc, #3936]	; 1dd70 <__flatcc_gen_sort@@Base+0x21d0>
   1ce0c:	add	r3, pc, r3
   1ce10:	str	r3, [sp, #84]	; 0x54
   1ce14:	ldr	r3, [pc, #3928]	; 1dd74 <__flatcc_gen_sort@@Base+0x21d4>
   1ce18:	add	r3, pc, r3
   1ce1c:	str	r3, [sp, #88]	; 0x58
   1ce20:	ldrh	r2, [r4, #72]	; 0x48
   1ce24:	ldr	r3, [r4, #4]
   1ce28:	tst	r2, #4
   1ce2c:	ldrd	r6, [r3]
   1ce30:	bne	1d478 <__flatcc_gen_sort@@Base+0x18d8>
   1ce34:	ldrh	r3, [r4, #24]
   1ce38:	sub	r3, r3, #7
   1ce3c:	cmp	r3, #8
   1ce40:	addls	pc, pc, r3, lsl #2
   1ce44:	b	1e3dc <__flatcc_gen_sort@@Base+0x283c>
   1ce48:	b	1cfb8 <__flatcc_gen_sort@@Base+0x1418>
   1ce4c:	b	1cf70 <__flatcc_gen_sort@@Base+0x13d0>
   1ce50:	b	1cf40 <__flatcc_gen_sort@@Base+0x13a0>
   1ce54:	b	1cedc <__flatcc_gen_sort@@Base+0x133c>
   1ce58:	b	1e3dc <__flatcc_gen_sort@@Base+0x283c>
   1ce5c:	b	1e3dc <__flatcc_gen_sort@@Base+0x283c>
   1ce60:	b	1e3dc <__flatcc_gen_sort@@Base+0x283c>
   1ce64:	b	1cea4 <__flatcc_gen_sort@@Base+0x1304>
   1ce68:	b	1ce6c <__flatcc_gen_sort@@Base+0x12cc>
   1ce6c:	ldr	r1, [r4, #16]
   1ce70:	mov	r2, fp
   1ce74:	ldr	r0, [r1, #12]
   1ce78:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   1ce7c:	ldr	r2, [r4, #16]
   1ce80:	ldrh	r3, [r2, #8]
   1ce84:	cmp	r3, #4
   1ce88:	addls	pc, pc, r3, lsl #2
   1ce8c:	b	1e48c <__flatcc_gen_sort@@Base+0x28ec>
   1ce90:	b	1d098 <__flatcc_gen_sort@@Base+0x14f8>
   1ce94:	b	1d054 <__flatcc_gen_sort@@Base+0x14b4>
   1ce98:	b	1e48c <__flatcc_gen_sort@@Base+0x28ec>
   1ce9c:	b	1d1b0 <__flatcc_gen_sort@@Base+0x1610>
   1cea0:	b	1d000 <__flatcc_gen_sort@@Base+0x1460>
   1cea4:	ldr	r1, [r4, #16]
   1cea8:	mov	r2, fp
   1ceac:	ldr	r0, [r1, #12]
   1ceb0:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   1ceb4:	ldr	r2, [r4, #16]
   1ceb8:	ldrh	r3, [r2, #8]
   1cebc:	cmp	r3, #4
   1cec0:	addls	pc, pc, r3, lsl #2
   1cec4:	b	1e434 <__flatcc_gen_sort@@Base+0x2894>
   1cec8:	b	1d17c <__flatcc_gen_sort@@Base+0x15dc>
   1cecc:	b	1d138 <__flatcc_gen_sort@@Base+0x1598>
   1ced0:	b	1e434 <__flatcc_gen_sort@@Base+0x2894>
   1ced4:	b	1d110 <__flatcc_gen_sort@@Base+0x1570>
   1ced8:	b	1d0d8 <__flatcc_gen_sort@@Base+0x1538>
   1cedc:	ldr	r1, [pc, #3732]	; 1dd78 <__flatcc_gen_sort@@Base+0x21d8>
   1cee0:	mov	r2, r5
   1cee4:	str	r5, [sp, #8]
   1cee8:	str	sl, [sp, #12]
   1ceec:	str	r7, [sp, #16]
   1cef0:	str	r6, [sp, #20]
   1cef4:	ldrd	r6, [r4, #96]	; 0x60
   1cef8:	add	r1, pc, r1
   1cefc:	strd	r6, [sp]
   1cf00:	ldr	r0, [r5, #204]	; 0xcc
   1cf04:	bl	14064 <fprintf@plt>
   1cf08:	ldr	r4, [r4]
   1cf0c:	cmp	r4, #0
   1cf10:	bne	1ce20 <__flatcc_gen_sort@@Base+0x1280>
   1cf14:	ldr	r1, [r5, #204]	; 0xcc
   1cf18:	mov	r0, #10
   1cf1c:	bl	140c4 <fputc@plt>
   1cf20:	mov	r0, #0
   1cf24:	add	sp, sp, #644	; 0x284
   1cf28:	ldrd	r4, [sp]
   1cf2c:	ldrd	r6, [sp, #8]
   1cf30:	ldrd	r8, [sp, #16]
   1cf34:	ldrd	sl, [sp, #24]
   1cf38:	add	sp, sp, #32
   1cf3c:	pop	{pc}		; (ldr pc, [sp], #4)
   1cf40:	ldr	r1, [pc, #3636]	; 1dd7c <__flatcc_gen_sort@@Base+0x21dc>
   1cf44:	mov	r2, r5
   1cf48:	str	r5, [sp, #8]
   1cf4c:	str	sl, [sp, #12]
   1cf50:	str	r7, [sp, #16]
   1cf54:	str	r6, [sp, #20]
   1cf58:	ldrd	r6, [r4, #96]	; 0x60
   1cf5c:	add	r1, pc, r1
   1cf60:	strd	r6, [sp]
   1cf64:	ldr	r0, [r5, #204]	; 0xcc
   1cf68:	bl	14064 <fprintf@plt>
   1cf6c:	b	1cf08 <__flatcc_gen_sort@@Base+0x1368>
   1cf70:	ldr	r2, [r4, #16]
   1cf74:	cmp	r2, #5
   1cf78:	beq	1d4ec <__flatcc_gen_sort@@Base+0x194c>
   1cf7c:	sub	r3, r2, #1
   1cf80:	cmp	r3, #10
   1cf84:	addls	pc, pc, r3, lsl #2
   1cf88:	b	1e4e4 <__flatcc_gen_sort@@Base+0x2944>
   1cf8c:	b	1e2bc <__flatcc_gen_sort@@Base+0x271c>
   1cf90:	b	1d398 <__flatcc_gen_sort@@Base+0x17f8>
   1cf94:	b	1d374 <__flatcc_gen_sort@@Base+0x17d4>
   1cf98:	b	1d350 <__flatcc_gen_sort@@Base+0x17b0>
   1cf9c:	b	1e4e4 <__flatcc_gen_sort@@Base+0x2944>
   1cfa0:	b	1d848 <__flatcc_gen_sort@@Base+0x1ca8>
   1cfa4:	b	1e298 <__flatcc_gen_sort@@Base+0x26f8>
   1cfa8:	b	1d308 <__flatcc_gen_sort@@Base+0x1768>
   1cfac:	b	1d2e4 <__flatcc_gen_sort@@Base+0x1744>
   1cfb0:	b	1d2c0 <__flatcc_gen_sort@@Base+0x1720>
   1cfb4:	b	1d32c <__flatcc_gen_sort@@Base+0x178c>
   1cfb8:	ldr	r3, [r4, #16]
   1cfbc:	cmp	r3, #5
   1cfc0:	beq	1d644 <__flatcc_gen_sort@@Base+0x1aa4>
   1cfc4:	sub	r3, r3, #1
   1cfc8:	cmp	r3, #10
   1cfcc:	addls	pc, pc, r3, lsl #2
   1cfd0:	b	1e4e4 <__flatcc_gen_sort@@Base+0x2944>
   1cfd4:	b	1d45c <__flatcc_gen_sort@@Base+0x18bc>
   1cfd8:	b	1d440 <__flatcc_gen_sort@@Base+0x18a0>
   1cfdc:	b	1d424 <__flatcc_gen_sort@@Base+0x1884>
   1cfe0:	b	1d408 <__flatcc_gen_sort@@Base+0x1868>
   1cfe4:	b	1e4e4 <__flatcc_gen_sort@@Base+0x2944>
   1cfe8:	b	1d3d8 <__flatcc_gen_sort@@Base+0x1838>
   1cfec:	b	1d3bc <__flatcc_gen_sort@@Base+0x181c>
   1cff0:	b	1d2a4 <__flatcc_gen_sort@@Base+0x1704>
   1cff4:	b	1d288 <__flatcc_gen_sort@@Base+0x16e8>
   1cff8:	b	1d1e4 <__flatcc_gen_sort@@Base+0x1644>
   1cffc:	b	1d3f4 <__flatcc_gen_sort@@Base+0x1854>
   1d000:	str	r5, [sp, #8]
   1d004:	mov	r2, r5
   1d008:	str	sl, [sp, #12]
   1d00c:	str	r7, [sp, #16]
   1d010:	str	r6, [sp, #20]
   1d014:	str	fp, [sp, #24]
   1d018:	ldrd	r8, [r4, #96]	; 0x60
   1d01c:	ldr	r1, [sp, #76]	; 0x4c
   1d020:	ldr	r0, [r5, #204]	; 0xcc
   1d024:	strd	r8, [sp]
   1d028:	bl	14064 <fprintf@plt>
   1d02c:	mov	r0, #1
   1d030:	str	r0, [sp, #4]
   1d034:	mov	r3, r6
   1d038:	mov	r2, r7
   1d03c:	ldr	ip, [r4, #16]
   1d040:	mov	r1, sl
   1d044:	mov	r0, r5
   1d048:	str	ip, [sp]
   1d04c:	bl	1bcfc <__flatcc_gen_sort@@Base+0x15c>
   1d050:	b	1cf08 <__flatcc_gen_sort@@Base+0x1368>
   1d054:	ldrh	r3, [r2, #10]
   1d058:	ldr	r0, [r5, #204]	; 0xcc
   1d05c:	tst	r3, #8
   1d060:	bne	1d828 <__flatcc_gen_sort@@Base+0x1c88>
   1d064:	ldr	r1, [pc, #3348]	; 1dd80 <__flatcc_gen_sort@@Base+0x21e0>
   1d068:	mov	r2, r5
   1d06c:	str	r5, [sp, #8]
   1d070:	str	sl, [sp, #12]
   1d074:	str	r7, [sp, #16]
   1d078:	str	r6, [sp, #20]
   1d07c:	str	fp, [sp, #24]
   1d080:	add	r1, pc, r1
   1d084:	str	fp, [sp, #28]
   1d088:	ldrd	r6, [r4, #96]	; 0x60
   1d08c:	strd	r6, [sp]
   1d090:	bl	14064 <fprintf@plt>
   1d094:	b	1cf08 <__flatcc_gen_sort@@Base+0x1368>
   1d098:	ldrh	r3, [r2, #10]
   1d09c:	ldr	r0, [r5, #204]	; 0xcc
   1d0a0:	tst	r3, #8
   1d0a4:	bne	1d808 <__flatcc_gen_sort@@Base+0x1c68>
   1d0a8:	ldr	r1, [pc, #3284]	; 1dd84 <__flatcc_gen_sort@@Base+0x21e4>
   1d0ac:	mov	r2, r5
   1d0b0:	str	r5, [sp, #8]
   1d0b4:	str	sl, [sp, #12]
   1d0b8:	str	r7, [sp, #16]
   1d0bc:	str	r6, [sp, #20]
   1d0c0:	str	fp, [sp, #24]
   1d0c4:	add	r1, pc, r1
   1d0c8:	ldrd	r6, [r4, #96]	; 0x60
   1d0cc:	strd	r6, [sp]
   1d0d0:	bl	14064 <fprintf@plt>
   1d0d4:	b	1cf08 <__flatcc_gen_sort@@Base+0x1368>
   1d0d8:	ldr	r1, [pc, #3240]	; 1dd88 <__flatcc_gen_sort@@Base+0x21e8>
   1d0dc:	mov	r2, r5
   1d0e0:	str	r5, [sp, #8]
   1d0e4:	str	sl, [sp, #12]
   1d0e8:	str	r7, [sp, #16]
   1d0ec:	str	r6, [sp, #20]
   1d0f0:	str	fp, [sp, #24]
   1d0f4:	add	r1, pc, r1
   1d0f8:	ldrd	r8, [r4, #96]	; 0x60
   1d0fc:	strd	r8, [sp]
   1d100:	ldr	r0, [r5, #204]	; 0xcc
   1d104:	bl	14064 <fprintf@plt>
   1d108:	mov	r0, #0
   1d10c:	b	1d030 <__flatcc_gen_sort@@Base+0x1490>
   1d110:	ldrh	r3, [r4, #56]	; 0x38
   1d114:	ldr	r2, [r2, #40]	; 0x28
   1d118:	sub	r3, r3, #3
   1d11c:	cmp	r3, #3
   1d120:	addls	pc, pc, r3, lsl #2
   1d124:	b	1e6f8 <__flatcc_gen_sort@@Base+0x2b58>
   1d128:	b	1d6f8 <__flatcc_gen_sort@@Base+0x1b58>
   1d12c:	b	1d6c4 <__flatcc_gen_sort@@Base+0x1b24>
   1d130:	b	1d690 <__flatcc_gen_sort@@Base+0x1af0>
   1d134:	b	1d65c <__flatcc_gen_sort@@Base+0x1abc>
   1d138:	ldrh	r3, [r4, #74]	; 0x4a
   1d13c:	mov	r2, r5
   1d140:	ldr	r1, [pc, #3140]	; 1dd8c <__flatcc_gen_sort@@Base+0x21ec>
   1d144:	str	r3, [sp, #40]	; 0x28
   1d148:	ldrd	r8, [r4, #88]	; 0x58
   1d14c:	str	r5, [sp, #8]
   1d150:	add	r1, pc, r1
   1d154:	str	sl, [sp, #12]
   1d158:	str	r7, [sp, #16]
   1d15c:	str	r6, [sp, #20]
   1d160:	str	fp, [sp, #24]
   1d164:	strd	r8, [sp, #32]
   1d168:	ldrd	r6, [r4, #96]	; 0x60
   1d16c:	ldr	r0, [r5, #204]	; 0xcc
   1d170:	strd	r6, [sp]
   1d174:	bl	14064 <fprintf@plt>
   1d178:	b	1cf08 <__flatcc_gen_sort@@Base+0x1368>
   1d17c:	ldr	r1, [pc, #3084]	; 1dd90 <__flatcc_gen_sort@@Base+0x21f0>
   1d180:	mov	r2, r5
   1d184:	str	r5, [sp, #8]
   1d188:	str	sl, [sp, #12]
   1d18c:	str	r7, [sp, #16]
   1d190:	str	r6, [sp, #20]
   1d194:	str	fp, [sp, #24]
   1d198:	add	r1, pc, r1
   1d19c:	ldrd	r6, [r4, #96]	; 0x60
   1d1a0:	strd	r6, [sp]
   1d1a4:	ldr	r0, [r5, #204]	; 0xcc
   1d1a8:	bl	14064 <fprintf@plt>
   1d1ac:	b	1cf08 <__flatcc_gen_sort@@Base+0x1368>
   1d1b0:	str	r5, [sp, #8]
   1d1b4:	mov	r2, r5
   1d1b8:	str	sl, [sp, #12]
   1d1bc:	str	r7, [sp, #16]
   1d1c0:	str	r6, [sp, #20]
   1d1c4:	str	fp, [sp, #24]
   1d1c8:	str	fp, [sp, #28]
   1d1cc:	ldrd	r6, [r4, #96]	; 0x60
   1d1d0:	ldr	r1, [sp, #80]	; 0x50
   1d1d4:	ldr	r0, [r5, #204]	; 0xcc
   1d1d8:	strd	r6, [sp]
   1d1dc:	bl	14064 <fprintf@plt>
   1d1e0:	b	1cf08 <__flatcc_gen_sort@@Base+0x1368>
   1d1e4:	ldr	r1, [pc, #2984]	; 1dd94 <__flatcc_gen_sort@@Base+0x21f4>
   1d1e8:	ldr	r3, [sp, #84]	; 0x54
   1d1ec:	add	r1, pc, r1
   1d1f0:	mov	r0, r3
   1d1f4:	str	r5, [sp, #8]
   1d1f8:	mov	r2, r5
   1d1fc:	str	sl, [sp, #12]
   1d200:	str	r7, [sp, #16]
   1d204:	str	r6, [sp, #20]
   1d208:	str	r5, [sp, #24]
   1d20c:	str	r3, [sp, #28]
   1d210:	str	r1, [sp, #32]
   1d214:	ldr	r1, [pc, #2940]	; 1dd98 <__flatcc_gen_sort@@Base+0x21f8>
   1d218:	str	r0, [sp, #36]	; 0x24
   1d21c:	ldrd	r8, [r4, #96]	; 0x60
   1d220:	add	r1, pc, r1
   1d224:	strd	r8, [sp]
   1d228:	ldr	r0, [r5, #204]	; 0xcc
   1d22c:	bl	14064 <fprintf@plt>
   1d230:	ldr	r1, [r4, #104]	; 0x68
   1d234:	cmp	r1, #0
   1d238:	beq	1cf08 <__flatcc_gen_sort@@Base+0x1368>
   1d23c:	ldrh	r3, [r1, #8]
   1d240:	cmp	r3, #0
   1d244:	bne	1d498 <__flatcc_gen_sort@@Base+0x18f8>
   1d248:	mov	r2, fp
   1d24c:	ldr	r0, [r1, #12]
   1d250:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   1d254:	ldr	r1, [pc, #2880]	; 1dd9c <__flatcc_gen_sort@@Base+0x21fc>
   1d258:	mov	r3, r5
   1d25c:	mov	r2, r5
   1d260:	str	sl, [sp]
   1d264:	str	r7, [sp, #4]
   1d268:	str	r6, [sp, #8]
   1d26c:	str	fp, [sp, #12]
   1d270:	add	r1, pc, r1
   1d274:	str	fp, [sp, #16]
   1d278:	str	fp, [sp, #20]
   1d27c:	ldr	r0, [r5, #204]	; 0xcc
   1d280:	bl	14064 <fprintf@plt>
   1d284:	b	1cf08 <__flatcc_gen_sort@@Base+0x1368>
   1d288:	ldr	r0, [pc, #2832]	; 1dda0 <__flatcc_gen_sort@@Base+0x2200>
   1d28c:	ldr	r1, [pc, #2832]	; 1dda4 <__flatcc_gen_sort@@Base+0x2204>
   1d290:	ldr	r3, [pc, #2832]	; 1dda8 <__flatcc_gen_sort@@Base+0x2208>
   1d294:	add	r0, pc, r0
   1d298:	add	r1, pc, r1
   1d29c:	add	r3, pc, r3
   1d2a0:	b	1d1f4 <__flatcc_gen_sort@@Base+0x1654>
   1d2a4:	ldr	r0, [pc, #2816]	; 1ddac <__flatcc_gen_sort@@Base+0x220c>
   1d2a8:	ldr	r1, [pc, #2816]	; 1ddb0 <__flatcc_gen_sort@@Base+0x2210>
   1d2ac:	ldr	r3, [pc, #2816]	; 1ddb4 <__flatcc_gen_sort@@Base+0x2214>
   1d2b0:	add	r0, pc, r0
   1d2b4:	add	r1, pc, r1
   1d2b8:	add	r3, pc, r3
   1d2bc:	b	1d1f4 <__flatcc_gen_sort@@Base+0x1654>
   1d2c0:	ldrh	r2, [r4, #56]	; 0x38
   1d2c4:	sub	r2, r2, #3
   1d2c8:	cmp	r2, #3
   1d2cc:	addls	pc, pc, r2, lsl #2
   1d2d0:	b	1e750 <__flatcc_gen_sort@@Base+0x2bb0>
   1d2d4:	b	1d7ec <__flatcc_gen_sort@@Base+0x1c4c>
   1d2d8:	b	1dd44 <__flatcc_gen_sort@@Base+0x21a4>
   1d2dc:	b	1e160 <__flatcc_gen_sort@@Base+0x25c0>
   1d2e0:	b	1e1d8 <__flatcc_gen_sort@@Base+0x2638>
   1d2e4:	ldrh	r2, [r4, #56]	; 0x38
   1d2e8:	sub	r2, r2, #3
   1d2ec:	cmp	r2, #3
   1d2f0:	addls	pc, pc, r2, lsl #2
   1d2f4:	b	1e750 <__flatcc_gen_sort@@Base+0x2bb0>
   1d2f8:	b	1d7c4 <__flatcc_gen_sort@@Base+0x1c24>
   1d2fc:	b	1e180 <__flatcc_gen_sort@@Base+0x25e0>
   1d300:	b	1e1b0 <__flatcc_gen_sort@@Base+0x2610>
   1d304:	b	1dd28 <__flatcc_gen_sort@@Base+0x2188>
   1d308:	ldrh	r1, [r4, #56]	; 0x38
   1d30c:	sub	r1, r1, #3
   1d310:	cmp	r1, #3
   1d314:	addls	pc, pc, r1, lsl #2
   1d318:	b	1e750 <__flatcc_gen_sort@@Base+0x2bb0>
   1d31c:	b	1db34 <__flatcc_gen_sort@@Base+0x1f94>
   1d320:	b	1db64 <__flatcc_gen_sort@@Base+0x1fc4>
   1d324:	b	1db8c <__flatcc_gen_sort@@Base+0x1fec>
   1d328:	b	1dbb4 <__flatcc_gen_sort@@Base+0x2014>
   1d32c:	ldrh	r2, [r4, #56]	; 0x38
   1d330:	sub	r2, r2, #3
   1d334:	cmp	r2, #3
   1d338:	addls	pc, pc, r2, lsl #2
   1d33c:	b	1e750 <__flatcc_gen_sort@@Base+0x2bb0>
   1d340:	b	1da0c <__flatcc_gen_sort@@Base+0x1e6c>
   1d344:	b	1da54 <__flatcc_gen_sort@@Base+0x1eb4>
   1d348:	b	1da74 <__flatcc_gen_sort@@Base+0x1ed4>
   1d34c:	b	1da94 <__flatcc_gen_sort@@Base+0x1ef4>
   1d350:	ldrh	r1, [r4, #56]	; 0x38
   1d354:	sub	r1, r1, #3
   1d358:	cmp	r1, #3
   1d35c:	addls	pc, pc, r1, lsl #2
   1d360:	b	1e750 <__flatcc_gen_sort@@Base+0x2bb0>
   1d364:	b	1dc5c <__flatcc_gen_sort@@Base+0x20bc>
   1d368:	b	1dd00 <__flatcc_gen_sort@@Base+0x2160>
   1d36c:	b	1dbe4 <__flatcc_gen_sort@@Base+0x2044>
   1d370:	b	1d9ac <__flatcc_gen_sort@@Base+0x1e0c>
   1d374:	ldrh	r1, [r4, #56]	; 0x38
   1d378:	sub	r1, r1, #3
   1d37c:	cmp	r1, #3
   1d380:	addls	pc, pc, r1, lsl #2
   1d384:	b	1e750 <__flatcc_gen_sort@@Base+0x2bb0>
   1d388:	b	1dcc8 <__flatcc_gen_sort@@Base+0x2128>
   1d38c:	b	1dc78 <__flatcc_gen_sort@@Base+0x20d8>
   1d390:	b	1dca0 <__flatcc_gen_sort@@Base+0x2100>
   1d394:	b	1d9dc <__flatcc_gen_sort@@Base+0x1e3c>
   1d398:	ldrh	r1, [r4, #56]	; 0x38
   1d39c:	sub	r1, r1, #3
   1d3a0:	cmp	r1, #3
   1d3a4:	addls	pc, pc, r1, lsl #2
   1d3a8:	b	1e750 <__flatcc_gen_sort@@Base+0x2bb0>
   1d3ac:	b	1dce4 <__flatcc_gen_sort@@Base+0x2144>
   1d3b0:	b	1dc0c <__flatcc_gen_sort@@Base+0x206c>
   1d3b4:	b	1dc34 <__flatcc_gen_sort@@Base+0x2094>
   1d3b8:	b	1d94c <__flatcc_gen_sort@@Base+0x1dac>
   1d3bc:	ldr	r0, [pc, #2548]	; 1ddb8 <__flatcc_gen_sort@@Base+0x2218>
   1d3c0:	ldr	r1, [pc, #2548]	; 1ddbc <__flatcc_gen_sort@@Base+0x221c>
   1d3c4:	ldr	r3, [pc, #2548]	; 1ddc0 <__flatcc_gen_sort@@Base+0x2220>
   1d3c8:	add	r0, pc, r0
   1d3cc:	add	r1, pc, r1
   1d3d0:	add	r3, pc, r3
   1d3d4:	b	1d1f4 <__flatcc_gen_sort@@Base+0x1654>
   1d3d8:	ldr	r0, [pc, #2532]	; 1ddc4 <__flatcc_gen_sort@@Base+0x2224>
   1d3dc:	ldr	r1, [pc, #2532]	; 1ddc8 <__flatcc_gen_sort@@Base+0x2228>
   1d3e0:	ldr	r3, [pc, #2532]	; 1ddcc <__flatcc_gen_sort@@Base+0x222c>
   1d3e4:	add	r0, pc, r0
   1d3e8:	add	r1, pc, r1
   1d3ec:	add	r3, pc, r3
   1d3f0:	b	1d1f4 <__flatcc_gen_sort@@Base+0x1654>
   1d3f4:	ldr	r1, [pc, #2516]	; 1ddd0 <__flatcc_gen_sort@@Base+0x2230>
   1d3f8:	ldr	r3, [sp, #88]	; 0x58
   1d3fc:	add	r1, pc, r1
   1d400:	mov	r0, r3
   1d404:	b	1d1f4 <__flatcc_gen_sort@@Base+0x1654>
   1d408:	ldr	r0, [pc, #2500]	; 1ddd4 <__flatcc_gen_sort@@Base+0x2234>
   1d40c:	ldr	r1, [pc, #2500]	; 1ddd8 <__flatcc_gen_sort@@Base+0x2238>
   1d410:	ldr	r3, [pc, #2500]	; 1dddc <__flatcc_gen_sort@@Base+0x223c>
   1d414:	add	r0, pc, r0
   1d418:	add	r1, pc, r1
   1d41c:	add	r3, pc, r3
   1d420:	b	1d1f4 <__flatcc_gen_sort@@Base+0x1654>
   1d424:	ldr	r0, [pc, #2484]	; 1dde0 <__flatcc_gen_sort@@Base+0x2240>
   1d428:	ldr	r1, [pc, #2484]	; 1dde4 <__flatcc_gen_sort@@Base+0x2244>
   1d42c:	ldr	r3, [pc, #2484]	; 1dde8 <__flatcc_gen_sort@@Base+0x2248>
   1d430:	add	r0, pc, r0
   1d434:	add	r1, pc, r1
   1d438:	add	r3, pc, r3
   1d43c:	b	1d1f4 <__flatcc_gen_sort@@Base+0x1654>
   1d440:	ldr	r0, [pc, #2468]	; 1ddec <__flatcc_gen_sort@@Base+0x224c>
   1d444:	ldr	r1, [pc, #2468]	; 1ddf0 <__flatcc_gen_sort@@Base+0x2250>
   1d448:	ldr	r3, [pc, #2468]	; 1ddf4 <__flatcc_gen_sort@@Base+0x2254>
   1d44c:	add	r0, pc, r0
   1d450:	add	r1, pc, r1
   1d454:	add	r3, pc, r3
   1d458:	b	1d1f4 <__flatcc_gen_sort@@Base+0x1654>
   1d45c:	ldr	r0, [pc, #2452]	; 1ddf8 <__flatcc_gen_sort@@Base+0x2258>
   1d460:	ldr	r1, [pc, #2452]	; 1ddfc <__flatcc_gen_sort@@Base+0x225c>
   1d464:	ldr	r3, [pc, #2452]	; 1de00 <__flatcc_gen_sort@@Base+0x2260>
   1d468:	add	r0, pc, r0
   1d46c:	add	r1, pc, r1
   1d470:	add	r3, pc, r3
   1d474:	b	1d1f4 <__flatcc_gen_sort@@Base+0x1654>
   1d478:	ldr	r1, [pc, #2436]	; 1de04 <__flatcc_gen_sort@@Base+0x2264>
   1d47c:	mov	r3, r7
   1d480:	mov	r2, sl
   1d484:	str	r6, [sp]
   1d488:	ldr	r0, [r5, #204]	; 0xcc
   1d48c:	add	r1, pc, r1
   1d490:	bl	14064 <fprintf@plt>
   1d494:	b	1cf08 <__flatcc_gen_sort@@Base+0x1368>
   1d498:	cmp	r3, #1
   1d49c:	bne	1e5ac <__flatcc_gen_sort@@Base+0x2a0c>
   1d4a0:	mov	r2, fp
   1d4a4:	ldr	r0, [r1, #12]
   1d4a8:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   1d4ac:	str	fp, [sp, #20]
   1d4b0:	mov	r3, r5
   1d4b4:	mov	r2, r5
   1d4b8:	str	fp, [sp, #24]
   1d4bc:	ldr	r0, [r4, #104]	; 0x68
   1d4c0:	ldr	r1, [pc, #2368]	; 1de08 <__flatcc_gen_sort@@Base+0x2268>
   1d4c4:	ldrh	r0, [r0, #104]	; 0x68
   1d4c8:	str	sl, [sp]
   1d4cc:	add	r1, pc, r1
   1d4d0:	str	r7, [sp, #4]
   1d4d4:	str	r6, [sp, #8]
   1d4d8:	str	fp, [sp, #12]
   1d4dc:	str	r0, [sp, #16]
   1d4e0:	ldr	r0, [r5, #204]	; 0xcc
   1d4e4:	bl	14064 <fprintf@plt>
   1d4e8:	b	1cf08 <__flatcc_gen_sort@@Base+0x1368>
   1d4ec:	ldrh	r3, [r4, #56]	; 0x38
   1d4f0:	sub	r3, r3, #3
   1d4f4:	cmp	r3, #3
   1d4f8:	addls	pc, pc, r3, lsl #2
   1d4fc:	b	1e750 <__flatcc_gen_sort@@Base+0x2bb0>
   1d500:	b	1d5a8 <__flatcc_gen_sort@@Base+0x1a08>
   1d504:	b	1d55c <__flatcc_gen_sort@@Base+0x19bc>
   1d508:	b	1d510 <__flatcc_gen_sort@@Base+0x1970>
   1d50c:	b	1d86c <__flatcc_gen_sort@@Base+0x1ccc>
   1d510:	ldr	r3, [pc, #2292]	; 1de0c <__flatcc_gen_sort@@Base+0x226c>
   1d514:	str	r5, [sp, #72]	; 0x48
   1d518:	ldr	r2, [pc, #2288]	; 1de10 <__flatcc_gen_sort@@Base+0x2270>
   1d51c:	add	r3, pc, r3
   1d520:	add	r2, pc, r2
   1d524:	strd	r2, [sp, #64]	; 0x40
   1d528:	mov	r3, #4
   1d52c:	cmp	r3, #8
   1d530:	addls	pc, pc, r3, lsl #2
   1d534:	b	1e53c <__flatcc_gen_sort@@Base+0x299c>
   1d538:	b	1d8bc <__flatcc_gen_sort@@Base+0x1d1c>
   1d53c:	b	1d8c8 <__flatcc_gen_sort@@Base+0x1d28>
   1d540:	b	1d8d4 <__flatcc_gen_sort@@Base+0x1d34>
   1d544:	b	1d76c <__flatcc_gen_sort@@Base+0x1bcc>
   1d548:	b	1d76c <__flatcc_gen_sort@@Base+0x1bcc>
   1d54c:	b	1d934 <__flatcc_gen_sort@@Base+0x1d94>
   1d550:	b	1d940 <__flatcc_gen_sort@@Base+0x1da0>
   1d554:	b	1d8b0 <__flatcc_gen_sort@@Base+0x1d10>
   1d558:	b	1d928 <__flatcc_gen_sort@@Base+0x1d88>
   1d55c:	ldr	r3, [pc, #2224]	; 1de14 <__flatcc_gen_sort@@Base+0x2274>
   1d560:	str	r5, [sp, #72]	; 0x48
   1d564:	ldr	r2, [pc, #2220]	; 1de18 <__flatcc_gen_sort@@Base+0x2278>
   1d568:	add	r3, pc, r3
   1d56c:	add	r2, pc, r2
   1d570:	strd	r2, [sp, #64]	; 0x40
   1d574:	mov	r3, #4
   1d578:	cmp	r3, #8
   1d57c:	addls	pc, pc, r3, lsl #2
   1d580:	b	1e53c <__flatcc_gen_sort@@Base+0x299c>
   1d584:	b	1d904 <__flatcc_gen_sort@@Base+0x1d64>
   1d588:	b	1d910 <__flatcc_gen_sort@@Base+0x1d70>
   1d58c:	b	1d91c <__flatcc_gen_sort@@Base+0x1d7c>
   1d590:	b	1d798 <__flatcc_gen_sort@@Base+0x1bf8>
   1d594:	b	1d798 <__flatcc_gen_sort@@Base+0x1bf8>
   1d598:	b	1d8e0 <__flatcc_gen_sort@@Base+0x1d40>
   1d59c:	b	1d8ec <__flatcc_gen_sort@@Base+0x1d4c>
   1d5a0:	b	1d8f8 <__flatcc_gen_sort@@Base+0x1d58>
   1d5a4:	b	1e1a4 <__flatcc_gen_sort@@Base+0x2604>
   1d5a8:	ldr	r3, [pc, #2156]	; 1de1c <__flatcc_gen_sort@@Base+0x227c>
   1d5ac:	str	r5, [sp, #72]	; 0x48
   1d5b0:	add	r3, pc, r3
   1d5b4:	str	r3, [sp, #68]	; 0x44
   1d5b8:	ldr	r3, [pc, #2144]	; 1de20 <__flatcc_gen_sort@@Base+0x2280>
   1d5bc:	add	r3, pc, r3
   1d5c0:	str	r3, [sp, #64]	; 0x40
   1d5c4:	ldr	r1, [pc, #2136]	; 1de24 <__flatcc_gen_sort@@Base+0x2284>
   1d5c8:	add	r3, sp, #100	; 0x64
   1d5cc:	mov	r0, r3
   1d5d0:	str	r3, [sp, #60]	; 0x3c
   1d5d4:	ldrd	r2, [r4, #48]	; 0x30
   1d5d8:	add	r1, pc, r1
   1d5dc:	bl	140d0 <sprintf@plt>
   1d5e0:	ldr	r3, [sp, #60]	; 0x3c
   1d5e4:	mov	r2, r5
   1d5e8:	ldr	r1, [pc, #2104]	; 1de28 <__flatcc_gen_sort@@Base+0x2288>
   1d5ec:	str	r3, [sp, #52]	; 0x34
   1d5f0:	ldrh	r3, [r4, #74]	; 0x4a
   1d5f4:	add	r1, pc, r1
   1d5f8:	str	r3, [sp, #48]	; 0x30
   1d5fc:	ldr	r3, [sp, #64]	; 0x40
   1d600:	ldrd	r8, [r4, #88]	; 0x58
   1d604:	str	r5, [sp, #8]
   1d608:	str	sl, [sp, #12]
   1d60c:	str	r7, [sp, #16]
   1d610:	str	r3, [sp, #28]
   1d614:	ldr	r3, [sp, #72]	; 0x48
   1d618:	str	r6, [sp, #20]
   1d61c:	str	r5, [sp, #24]
   1d620:	str	r3, [sp, #32]
   1d624:	ldr	r3, [sp, #68]	; 0x44
   1d628:	strd	r8, [sp, #40]	; 0x28
   1d62c:	str	r3, [sp, #36]	; 0x24
   1d630:	ldrd	r6, [r4, #96]	; 0x60
   1d634:	ldr	r0, [r5, #204]	; 0xcc
   1d638:	strd	r6, [sp]
   1d63c:	bl	14064 <fprintf@plt>
   1d640:	b	1cf08 <__flatcc_gen_sort@@Base+0x1368>
   1d644:	ldr	r0, [pc, #2016]	; 1de2c <__flatcc_gen_sort@@Base+0x228c>
   1d648:	mov	r1, r5
   1d64c:	ldr	r3, [pc, #2012]	; 1de30 <__flatcc_gen_sort@@Base+0x2290>
   1d650:	add	r0, pc, r0
   1d654:	add	r3, pc, r3
   1d658:	b	1d1f4 <__flatcc_gen_sort@@Base+0x1654>
   1d65c:	sub	r2, r2, #1
   1d660:	cmp	r2, #8
   1d664:	addls	pc, pc, r2, lsl #2
   1d668:	b	1e53c <__flatcc_gen_sort@@Base+0x299c>
   1d66c:	b	1e2f8 <__flatcc_gen_sort@@Base+0x2758>
   1d670:	b	1e304 <__flatcc_gen_sort@@Base+0x2764>
   1d674:	b	1e3d0 <__flatcc_gen_sort@@Base+0x2830>
   1d678:	b	1e218 <__flatcc_gen_sort@@Base+0x2678>
   1d67c:	b	1e218 <__flatcc_gen_sort@@Base+0x2678>
   1d680:	b	1e2ec <__flatcc_gen_sort@@Base+0x274c>
   1d684:	b	1e37c <__flatcc_gen_sort@@Base+0x27dc>
   1d688:	b	1e388 <__flatcc_gen_sort@@Base+0x27e8>
   1d68c:	b	1e2e0 <__flatcc_gen_sort@@Base+0x2740>
   1d690:	sub	r2, r2, #1
   1d694:	cmp	r2, #8
   1d698:	addls	pc, pc, r2, lsl #2
   1d69c:	b	1e53c <__flatcc_gen_sort@@Base+0x299c>
   1d6a0:	b	1e394 <__flatcc_gen_sort@@Base+0x27f4>
   1d6a4:	b	1e3a0 <__flatcc_gen_sort@@Base+0x2800>
   1d6a8:	b	1e3c4 <__flatcc_gen_sort@@Base+0x2824>
   1d6ac:	b	1e240 <__flatcc_gen_sort@@Base+0x26a0>
   1d6b0:	b	1e240 <__flatcc_gen_sort@@Base+0x26a0>
   1d6b4:	b	1e3b8 <__flatcc_gen_sort@@Base+0x2818>
   1d6b8:	b	1e328 <__flatcc_gen_sort@@Base+0x2788>
   1d6bc:	b	1e334 <__flatcc_gen_sort@@Base+0x2794>
   1d6c0:	b	1e3ac <__flatcc_gen_sort@@Base+0x280c>
   1d6c4:	sub	r2, r2, #1
   1d6c8:	cmp	r2, #8
   1d6cc:	addls	pc, pc, r2, lsl #2
   1d6d0:	b	1e53c <__flatcc_gen_sort@@Base+0x299c>
   1d6d4:	b	1e340 <__flatcc_gen_sort@@Base+0x27a0>
   1d6d8:	b	1e34c <__flatcc_gen_sort@@Base+0x27ac>
   1d6dc:	b	1e370 <__flatcc_gen_sort@@Base+0x27d0>
   1d6e0:	b	1e1ec <__flatcc_gen_sort@@Base+0x264c>
   1d6e4:	b	1e1ec <__flatcc_gen_sort@@Base+0x264c>
   1d6e8:	b	1e364 <__flatcc_gen_sort@@Base+0x27c4>
   1d6ec:	b	1e310 <__flatcc_gen_sort@@Base+0x2770>
   1d6f0:	b	1e31c <__flatcc_gen_sort@@Base+0x277c>
   1d6f4:	b	1e358 <__flatcc_gen_sort@@Base+0x27b8>
   1d6f8:	cmp	r2, #11
   1d6fc:	beq	1e26c <__flatcc_gen_sort@@Base+0x26cc>
   1d700:	ldr	r1, [pc, #1836]	; 1de34 <__flatcc_gen_sort@@Base+0x2294>
   1d704:	add	r3, sp, #100	; 0x64
   1d708:	mov	r0, r3
   1d70c:	str	r3, [sp, #60]	; 0x3c
   1d710:	ldrd	r2, [r4, #48]	; 0x30
   1d714:	add	r1, pc, r1
   1d718:	bl	140d0 <sprintf@plt>
   1d71c:	ldr	r3, [sp, #60]	; 0x3c
   1d720:	mov	r2, r5
   1d724:	ldr	r1, [pc, #1804]	; 1de38 <__flatcc_gen_sort@@Base+0x2298>
   1d728:	str	r3, [sp, #44]	; 0x2c
   1d72c:	ldrh	r3, [r4, #74]	; 0x4a
   1d730:	add	r1, pc, r1
   1d734:	str	r3, [sp, #40]	; 0x28
   1d738:	ldrd	r8, [r4, #88]	; 0x58
   1d73c:	str	r5, [sp, #8]
   1d740:	str	sl, [sp, #12]
   1d744:	str	r7, [sp, #16]
   1d748:	str	r6, [sp, #20]
   1d74c:	str	fp, [sp, #24]
   1d750:	str	fp, [sp, #28]
   1d754:	strd	r8, [sp, #32]
   1d758:	ldrd	r6, [r4, #96]	; 0x60
   1d75c:	ldr	r0, [r5, #204]	; 0xcc
   1d760:	strd	r6, [sp]
   1d764:	bl	14064 <fprintf@plt>
   1d768:	b	1cf08 <__flatcc_gen_sort@@Base+0x1368>
   1d76c:	ldr	r2, [pc, #1736]	; 1de3c <__flatcc_gen_sort@@Base+0x229c>
   1d770:	add	r2, pc, r2
   1d774:	ldr	r1, [pc, #1732]	; 1de40 <__flatcc_gen_sort@@Base+0x22a0>
   1d778:	add	r3, sp, #100	; 0x64
   1d77c:	mov	r0, r3
   1d780:	ldrd	r8, [r4, #48]	; 0x30
   1d784:	add	r1, pc, r1
   1d788:	strd	r8, [sp]
   1d78c:	str	r3, [sp, #60]	; 0x3c
   1d790:	bl	140d0 <sprintf@plt>
   1d794:	b	1d5e0 <__flatcc_gen_sort@@Base+0x1a40>
   1d798:	ldr	r2, [pc, #1700]	; 1de44 <__flatcc_gen_sort@@Base+0x22a4>
   1d79c:	add	r2, pc, r2
   1d7a0:	ldr	r1, [pc, #1696]	; 1de48 <__flatcc_gen_sort@@Base+0x22a8>
   1d7a4:	add	r3, sp, #100	; 0x64
   1d7a8:	mov	r0, r3
   1d7ac:	ldrd	r8, [r4, #48]	; 0x30
   1d7b0:	add	r1, pc, r1
   1d7b4:	strd	r8, [sp]
   1d7b8:	str	r3, [sp, #60]	; 0x3c
   1d7bc:	bl	140d0 <sprintf@plt>
   1d7c0:	b	1d5e0 <__flatcc_gen_sort@@Base+0x1a40>
   1d7c4:	ldr	r3, [pc, #1664]	; 1de4c <__flatcc_gen_sort@@Base+0x22ac>
   1d7c8:	add	r3, pc, r3
   1d7cc:	str	r3, [sp, #68]	; 0x44
   1d7d0:	ldr	r3, [pc, #1656]	; 1de50 <__flatcc_gen_sort@@Base+0x22b0>
   1d7d4:	add	r3, pc, r3
   1d7d8:	str	r3, [sp, #72]	; 0x48
   1d7dc:	ldr	r3, [pc, #1648]	; 1de54 <__flatcc_gen_sort@@Base+0x22b4>
   1d7e0:	add	r3, pc, r3
   1d7e4:	str	r3, [sp, #64]	; 0x40
   1d7e8:	b	1d5c4 <__flatcc_gen_sort@@Base+0x1a24>
   1d7ec:	ldr	r2, [pc, #1636]	; 1de58 <__flatcc_gen_sort@@Base+0x22b8>
   1d7f0:	ldr	r3, [pc, #1636]	; 1de5c <__flatcc_gen_sort@@Base+0x22bc>
   1d7f4:	add	r2, pc, r2
   1d7f8:	add	r3, pc, r3
   1d7fc:	str	r2, [sp, #64]	; 0x40
   1d800:	strd	r2, [sp, #68]	; 0x44
   1d804:	b	1d5c4 <__flatcc_gen_sort@@Base+0x1a24>
   1d808:	mov	r3, r0
   1d80c:	ldr	r0, [pc, #1612]	; 1de60 <__flatcc_gen_sort@@Base+0x22c0>
   1d810:	mov	r2, #32
   1d814:	mov	r1, #1
   1d818:	add	r0, pc, r0
   1d81c:	bl	13fec <fwrite@plt>
   1d820:	ldr	r0, [r5, #204]	; 0xcc
   1d824:	b	1d0a8 <__flatcc_gen_sort@@Base+0x1508>
   1d828:	mov	r3, r0
   1d82c:	ldr	r0, [pc, #1584]	; 1de64 <__flatcc_gen_sort@@Base+0x22c4>
   1d830:	mov	r2, #32
   1d834:	mov	r1, #1
   1d838:	add	r0, pc, r0
   1d83c:	bl	13fec <fwrite@plt>
   1d840:	ldr	r0, [r5, #204]	; 0xcc
   1d844:	b	1d064 <__flatcc_gen_sort@@Base+0x14c4>
   1d848:	ldrh	r1, [r4, #56]	; 0x38
   1d84c:	sub	r1, r1, #3
   1d850:	cmp	r1, #3
   1d854:	addls	pc, pc, r1, lsl #2
   1d858:	b	1e750 <__flatcc_gen_sort@@Base+0x2bb0>
   1d85c:	b	1e590 <__flatcc_gen_sort@@Base+0x29f0>
   1d860:	b	1e568 <__flatcc_gen_sort@@Base+0x29c8>
   1d864:	b	1e540 <__flatcc_gen_sort@@Base+0x29a0>
   1d868:	b	1d97c <__flatcc_gen_sort@@Base+0x1ddc>
   1d86c:	ldr	r3, [pc, #1524]	; 1de68 <__flatcc_gen_sort@@Base+0x22c8>
   1d870:	str	r5, [sp, #72]	; 0x48
   1d874:	ldr	r2, [pc, #1520]	; 1de6c <__flatcc_gen_sort@@Base+0x22cc>
   1d878:	add	r3, pc, r3
   1d87c:	str	r3, [sp, #68]	; 0x44
   1d880:	add	r2, pc, r2
   1d884:	ldr	r3, [pc, #1508]	; 1de70 <__flatcc_gen_sort@@Base+0x22d0>
   1d888:	add	r3, pc, r3
   1d88c:	str	r3, [sp, #64]	; 0x40
   1d890:	ldr	r1, [pc, #1500]	; 1de74 <__flatcc_gen_sort@@Base+0x22d4>
   1d894:	add	r3, sp, #100	; 0x64
   1d898:	mov	r0, r3
   1d89c:	str	r3, [sp, #60]	; 0x3c
   1d8a0:	ldrb	r3, [r4, #48]	; 0x30
   1d8a4:	add	r1, pc, r1
   1d8a8:	bl	140d0 <sprintf@plt>
   1d8ac:	b	1d5e0 <__flatcc_gen_sort@@Base+0x1a40>
   1d8b0:	ldr	r2, [pc, #1472]	; 1de78 <__flatcc_gen_sort@@Base+0x22d8>
   1d8b4:	add	r2, pc, r2
   1d8b8:	b	1d774 <__flatcc_gen_sort@@Base+0x1bd4>
   1d8bc:	ldr	r2, [pc, #1464]	; 1de7c <__flatcc_gen_sort@@Base+0x22dc>
   1d8c0:	add	r2, pc, r2
   1d8c4:	b	1d774 <__flatcc_gen_sort@@Base+0x1bd4>
   1d8c8:	ldr	r2, [pc, #1456]	; 1de80 <__flatcc_gen_sort@@Base+0x22e0>
   1d8cc:	add	r2, pc, r2
   1d8d0:	b	1d774 <__flatcc_gen_sort@@Base+0x1bd4>
   1d8d4:	ldr	r2, [pc, #1448]	; 1de84 <__flatcc_gen_sort@@Base+0x22e4>
   1d8d8:	add	r2, pc, r2
   1d8dc:	b	1d774 <__flatcc_gen_sort@@Base+0x1bd4>
   1d8e0:	ldr	r2, [pc, #1440]	; 1de88 <__flatcc_gen_sort@@Base+0x22e8>
   1d8e4:	add	r2, pc, r2
   1d8e8:	b	1d7a0 <__flatcc_gen_sort@@Base+0x1c00>
   1d8ec:	ldr	r2, [pc, #1432]	; 1de8c <__flatcc_gen_sort@@Base+0x22ec>
   1d8f0:	add	r2, pc, r2
   1d8f4:	b	1d7a0 <__flatcc_gen_sort@@Base+0x1c00>
   1d8f8:	ldr	r2, [pc, #1424]	; 1de90 <__flatcc_gen_sort@@Base+0x22f0>
   1d8fc:	add	r2, pc, r2
   1d900:	b	1d7a0 <__flatcc_gen_sort@@Base+0x1c00>
   1d904:	ldr	r2, [pc, #1416]	; 1de94 <__flatcc_gen_sort@@Base+0x22f4>
   1d908:	add	r2, pc, r2
   1d90c:	b	1d7a0 <__flatcc_gen_sort@@Base+0x1c00>
   1d910:	ldr	r2, [pc, #1408]	; 1de98 <__flatcc_gen_sort@@Base+0x22f8>
   1d914:	add	r2, pc, r2
   1d918:	b	1d7a0 <__flatcc_gen_sort@@Base+0x1c00>
   1d91c:	ldr	r2, [pc, #1400]	; 1de9c <__flatcc_gen_sort@@Base+0x22fc>
   1d920:	add	r2, pc, r2
   1d924:	b	1d7a0 <__flatcc_gen_sort@@Base+0x1c00>
   1d928:	ldr	r2, [pc, #1392]	; 1dea0 <__flatcc_gen_sort@@Base+0x2300>
   1d92c:	add	r2, pc, r2
   1d930:	b	1d774 <__flatcc_gen_sort@@Base+0x1bd4>
   1d934:	ldr	r2, [pc, #1384]	; 1dea4 <__flatcc_gen_sort@@Base+0x2304>
   1d938:	add	r2, pc, r2
   1d93c:	b	1d774 <__flatcc_gen_sort@@Base+0x1bd4>
   1d940:	ldr	r2, [pc, #1376]	; 1dea8 <__flatcc_gen_sort@@Base+0x2308>
   1d944:	add	r2, pc, r2
   1d948:	b	1d774 <__flatcc_gen_sort@@Base+0x1bd4>
   1d94c:	ldr	r3, [pc, #1368]	; 1deac <__flatcc_gen_sort@@Base+0x230c>
   1d950:	add	r3, pc, r3
   1d954:	str	r3, [sp, #68]	; 0x44
   1d958:	ldr	r3, [pc, #1360]	; 1deb0 <__flatcc_gen_sort@@Base+0x2310>
   1d95c:	add	r3, pc, r3
   1d960:	str	r3, [sp, #64]	; 0x40
   1d964:	ldr	r3, [pc, #1352]	; 1deb4 <__flatcc_gen_sort@@Base+0x2314>
   1d968:	ldr	r2, [pc, #1352]	; 1deb8 <__flatcc_gen_sort@@Base+0x2318>
   1d96c:	add	r3, pc, r3
   1d970:	add	r2, pc, r2
   1d974:	str	r3, [sp, #72]	; 0x48
   1d978:	b	1d890 <__flatcc_gen_sort@@Base+0x1cf0>
   1d97c:	ldr	r3, [pc, #1336]	; 1debc <__flatcc_gen_sort@@Base+0x231c>
   1d980:	add	r3, pc, r3
   1d984:	str	r3, [sp, #68]	; 0x44
   1d988:	ldr	r3, [pc, #1328]	; 1dec0 <__flatcc_gen_sort@@Base+0x2320>
   1d98c:	add	r3, pc, r3
   1d990:	str	r3, [sp, #64]	; 0x40
   1d994:	ldr	r3, [pc, #1320]	; 1dec4 <__flatcc_gen_sort@@Base+0x2324>
   1d998:	ldr	r2, [pc, #1320]	; 1dec8 <__flatcc_gen_sort@@Base+0x2328>
   1d99c:	add	r3, pc, r3
   1d9a0:	add	r2, pc, r2
   1d9a4:	str	r3, [sp, #72]	; 0x48
   1d9a8:	b	1d890 <__flatcc_gen_sort@@Base+0x1cf0>
   1d9ac:	ldr	r3, [pc, #1304]	; 1decc <__flatcc_gen_sort@@Base+0x232c>
   1d9b0:	add	r3, pc, r3
   1d9b4:	str	r3, [sp, #68]	; 0x44
   1d9b8:	ldr	r3, [pc, #1296]	; 1ded0 <__flatcc_gen_sort@@Base+0x2330>
   1d9bc:	add	r3, pc, r3
   1d9c0:	str	r3, [sp, #64]	; 0x40
   1d9c4:	ldr	r3, [pc, #1288]	; 1ded4 <__flatcc_gen_sort@@Base+0x2334>
   1d9c8:	ldr	r2, [pc, #1288]	; 1ded8 <__flatcc_gen_sort@@Base+0x2338>
   1d9cc:	add	r3, pc, r3
   1d9d0:	add	r2, pc, r2
   1d9d4:	str	r3, [sp, #72]	; 0x48
   1d9d8:	b	1d890 <__flatcc_gen_sort@@Base+0x1cf0>
   1d9dc:	ldr	r3, [pc, #1272]	; 1dedc <__flatcc_gen_sort@@Base+0x233c>
   1d9e0:	add	r3, pc, r3
   1d9e4:	str	r3, [sp, #68]	; 0x44
   1d9e8:	ldr	r3, [pc, #1264]	; 1dee0 <__flatcc_gen_sort@@Base+0x2340>
   1d9ec:	add	r3, pc, r3
   1d9f0:	str	r3, [sp, #64]	; 0x40
   1d9f4:	ldr	r3, [pc, #1256]	; 1dee4 <__flatcc_gen_sort@@Base+0x2344>
   1d9f8:	ldr	r2, [pc, #1256]	; 1dee8 <__flatcc_gen_sort@@Base+0x2348>
   1d9fc:	add	r3, pc, r3
   1da00:	add	r2, pc, r2
   1da04:	str	r3, [sp, #72]	; 0x48
   1da08:	b	1d890 <__flatcc_gen_sort@@Base+0x1cf0>
   1da0c:	ldr	r3, [pc, #1240]	; 1deec <__flatcc_gen_sort@@Base+0x234c>
   1da10:	add	r3, pc, r3
   1da14:	str	r3, [sp, #64]	; 0x40
   1da18:	str	r3, [sp, #68]	; 0x44
   1da1c:	vldr	d7, [r4, #48]	; 0x30
   1da20:	add	r3, sp, #100	; 0x64
   1da24:	mov	r0, r3
   1da28:	str	r3, [sp, #60]	; 0x3c
   1da2c:	ldr	r3, [pc, #1212]	; 1def0 <__flatcc_gen_sort@@Base+0x2350>
   1da30:	ldr	r1, [pc, #1212]	; 1def4 <__flatcc_gen_sort@@Base+0x2354>
   1da34:	vcvt.f32.f64	s14, d7
   1da38:	add	r3, pc, r3
   1da3c:	add	r1, pc, r1
   1da40:	str	r3, [sp, #72]	; 0x48
   1da44:	vcvt.f64.f32	d7, s14
   1da48:	vmov	r2, r3, d7
   1da4c:	bl	140d0 <sprintf@plt>
   1da50:	b	1d5e0 <__flatcc_gen_sort@@Base+0x1a40>
   1da54:	ldr	r1, [pc, #1180]	; 1def8 <__flatcc_gen_sort@@Base+0x2358>
   1da58:	ldr	r2, [pc, #1180]	; 1defc <__flatcc_gen_sort@@Base+0x235c>
   1da5c:	add	r1, pc, r1
   1da60:	add	r2, pc, r2
   1da64:	str	r1, [sp, #64]	; 0x40
   1da68:	str	r1, [sp, #68]	; 0x44
   1da6c:	str	r2, [sp, #72]	; 0x48
   1da70:	b	1d578 <__flatcc_gen_sort@@Base+0x19d8>
   1da74:	ldr	r1, [pc, #1156]	; 1df00 <__flatcc_gen_sort@@Base+0x2360>
   1da78:	ldr	r2, [pc, #1156]	; 1df04 <__flatcc_gen_sort@@Base+0x2364>
   1da7c:	add	r1, pc, r1
   1da80:	add	r2, pc, r2
   1da84:	str	r1, [sp, #64]	; 0x40
   1da88:	str	r1, [sp, #68]	; 0x44
   1da8c:	str	r2, [sp, #72]	; 0x48
   1da90:	b	1d52c <__flatcc_gen_sort@@Base+0x198c>
   1da94:	ldr	r2, [pc, #1132]	; 1df08 <__flatcc_gen_sort@@Base+0x2368>
   1da98:	add	r2, pc, r2
   1da9c:	str	r2, [sp, #64]	; 0x40
   1daa0:	str	r2, [sp, #68]	; 0x44
   1daa4:	cmp	r3, #8
   1daa8:	addls	pc, pc, r3, lsl #2
   1daac:	b	1e53c <__flatcc_gen_sort@@Base+0x299c>
   1dab0:	b	1db1c <__flatcc_gen_sort@@Base+0x1f7c>
   1dab4:	b	1d964 <__flatcc_gen_sort@@Base+0x1dc4>
   1dab8:	b	1d9f4 <__flatcc_gen_sort@@Base+0x1e54>
   1dabc:	b	1d9c4 <__flatcc_gen_sort@@Base+0x1e24>
   1dac0:	b	1e53c <__flatcc_gen_sort@@Base+0x299c>
   1dac4:	b	1d994 <__flatcc_gen_sort@@Base+0x1df4>
   1dac8:	b	1daec <__flatcc_gen_sort@@Base+0x1f4c>
   1dacc:	b	1dbcc <__flatcc_gen_sort@@Base+0x202c>
   1dad0:	b	1db04 <__flatcc_gen_sort@@Base+0x1f64>
   1dad4:	ldr	r3, [pc, #1072]	; 1df0c <__flatcc_gen_sort@@Base+0x236c>
   1dad8:	add	r3, pc, r3
   1dadc:	str	r3, [sp, #68]	; 0x44
   1dae0:	ldr	r3, [pc, #1064]	; 1df10 <__flatcc_gen_sort@@Base+0x2370>
   1dae4:	add	r3, pc, r3
   1dae8:	str	r3, [sp, #64]	; 0x40
   1daec:	ldr	r3, [pc, #1056]	; 1df14 <__flatcc_gen_sort@@Base+0x2374>
   1daf0:	ldr	r2, [pc, #1056]	; 1df18 <__flatcc_gen_sort@@Base+0x2378>
   1daf4:	add	r3, pc, r3
   1daf8:	add	r2, pc, r2
   1dafc:	str	r3, [sp, #72]	; 0x48
   1db00:	b	1d890 <__flatcc_gen_sort@@Base+0x1cf0>
   1db04:	ldr	r3, [pc, #1040]	; 1df1c <__flatcc_gen_sort@@Base+0x237c>
   1db08:	ldr	r2, [pc, #1040]	; 1df20 <__flatcc_gen_sort@@Base+0x2380>
   1db0c:	add	r3, pc, r3
   1db10:	add	r2, pc, r2
   1db14:	str	r3, [sp, #72]	; 0x48
   1db18:	b	1d890 <__flatcc_gen_sort@@Base+0x1cf0>
   1db1c:	ldr	r3, [pc, #1024]	; 1df24 <__flatcc_gen_sort@@Base+0x2384>
   1db20:	ldr	r2, [pc, #1024]	; 1df28 <__flatcc_gen_sort@@Base+0x2388>
   1db24:	add	r3, pc, r3
   1db28:	add	r2, pc, r2
   1db2c:	str	r3, [sp, #72]	; 0x48
   1db30:	b	1d890 <__flatcc_gen_sort@@Base+0x1cf0>
   1db34:	ldr	r3, [pc, #1008]	; 1df2c <__flatcc_gen_sort@@Base+0x238c>
   1db38:	add	r3, pc, r3
   1db3c:	str	r3, [sp, #68]	; 0x44
   1db40:	ldr	r3, [pc, #1000]	; 1df30 <__flatcc_gen_sort@@Base+0x2390>
   1db44:	add	r3, pc, r3
   1db48:	str	r3, [sp, #64]	; 0x40
   1db4c:	cmp	r2, #11
   1db50:	beq	1da1c <__flatcc_gen_sort@@Base+0x1e7c>
   1db54:	ldr	r3, [pc, #984]	; 1df34 <__flatcc_gen_sort@@Base+0x2394>
   1db58:	add	r3, pc, r3
   1db5c:	str	r3, [sp, #72]	; 0x48
   1db60:	b	1d5c4 <__flatcc_gen_sort@@Base+0x1a24>
   1db64:	ldr	r2, [pc, #972]	; 1df38 <__flatcc_gen_sort@@Base+0x2398>
   1db68:	add	r2, pc, r2
   1db6c:	str	r2, [sp, #68]	; 0x44
   1db70:	ldr	r2, [pc, #964]	; 1df3c <__flatcc_gen_sort@@Base+0x239c>
   1db74:	add	r2, pc, r2
   1db78:	str	r2, [sp, #72]	; 0x48
   1db7c:	ldr	r2, [pc, #956]	; 1df40 <__flatcc_gen_sort@@Base+0x23a0>
   1db80:	add	r2, pc, r2
   1db84:	str	r2, [sp, #64]	; 0x40
   1db88:	b	1d578 <__flatcc_gen_sort@@Base+0x19d8>
   1db8c:	ldr	r2, [pc, #944]	; 1df44 <__flatcc_gen_sort@@Base+0x23a4>
   1db90:	add	r2, pc, r2
   1db94:	str	r2, [sp, #68]	; 0x44
   1db98:	ldr	r2, [pc, #936]	; 1df48 <__flatcc_gen_sort@@Base+0x23a8>
   1db9c:	add	r2, pc, r2
   1dba0:	str	r2, [sp, #72]	; 0x48
   1dba4:	ldr	r2, [pc, #928]	; 1df4c <__flatcc_gen_sort@@Base+0x23ac>
   1dba8:	add	r2, pc, r2
   1dbac:	str	r2, [sp, #64]	; 0x40
   1dbb0:	b	1d52c <__flatcc_gen_sort@@Base+0x198c>
   1dbb4:	ldr	r3, [pc, #916]	; 1df50 <__flatcc_gen_sort@@Base+0x23b0>
   1dbb8:	add	r3, pc, r3
   1dbbc:	str	r3, [sp, #68]	; 0x44
   1dbc0:	ldr	r3, [pc, #908]	; 1df54 <__flatcc_gen_sort@@Base+0x23b4>
   1dbc4:	add	r3, pc, r3
   1dbc8:	str	r3, [sp, #64]	; 0x40
   1dbcc:	ldr	r3, [pc, #900]	; 1df58 <__flatcc_gen_sort@@Base+0x23b8>
   1dbd0:	ldr	r2, [pc, #900]	; 1df5c <__flatcc_gen_sort@@Base+0x23bc>
   1dbd4:	add	r3, pc, r3
   1dbd8:	add	r2, pc, r2
   1dbdc:	str	r3, [sp, #72]	; 0x48
   1dbe0:	b	1d890 <__flatcc_gen_sort@@Base+0x1cf0>
   1dbe4:	ldr	r2, [pc, #884]	; 1df60 <__flatcc_gen_sort@@Base+0x23c0>
   1dbe8:	add	r2, pc, r2
   1dbec:	str	r2, [sp, #68]	; 0x44
   1dbf0:	ldr	r2, [pc, #876]	; 1df64 <__flatcc_gen_sort@@Base+0x23c4>
   1dbf4:	add	r2, pc, r2
   1dbf8:	str	r2, [sp, #72]	; 0x48
   1dbfc:	ldr	r2, [pc, #868]	; 1df68 <__flatcc_gen_sort@@Base+0x23c8>
   1dc00:	add	r2, pc, r2
   1dc04:	str	r2, [sp, #64]	; 0x40
   1dc08:	b	1d52c <__flatcc_gen_sort@@Base+0x198c>
   1dc0c:	ldr	r2, [pc, #856]	; 1df6c <__flatcc_gen_sort@@Base+0x23cc>
   1dc10:	add	r2, pc, r2
   1dc14:	str	r2, [sp, #68]	; 0x44
   1dc18:	ldr	r2, [pc, #848]	; 1df70 <__flatcc_gen_sort@@Base+0x23d0>
   1dc1c:	add	r2, pc, r2
   1dc20:	str	r2, [sp, #72]	; 0x48
   1dc24:	ldr	r2, [pc, #840]	; 1df74 <__flatcc_gen_sort@@Base+0x23d4>
   1dc28:	add	r2, pc, r2
   1dc2c:	str	r2, [sp, #64]	; 0x40
   1dc30:	b	1d578 <__flatcc_gen_sort@@Base+0x19d8>
   1dc34:	ldr	r2, [pc, #828]	; 1df78 <__flatcc_gen_sort@@Base+0x23d8>
   1dc38:	add	r2, pc, r2
   1dc3c:	str	r2, [sp, #68]	; 0x44
   1dc40:	ldr	r2, [pc, #820]	; 1df7c <__flatcc_gen_sort@@Base+0x23dc>
   1dc44:	add	r2, pc, r2
   1dc48:	str	r2, [sp, #72]	; 0x48
   1dc4c:	ldr	r2, [pc, #812]	; 1df80 <__flatcc_gen_sort@@Base+0x23e0>
   1dc50:	add	r2, pc, r2
   1dc54:	str	r2, [sp, #64]	; 0x40
   1dc58:	b	1d52c <__flatcc_gen_sort@@Base+0x198c>
   1dc5c:	ldr	r3, [pc, #800]	; 1df84 <__flatcc_gen_sort@@Base+0x23e4>
   1dc60:	add	r3, pc, r3
   1dc64:	str	r3, [sp, #68]	; 0x44
   1dc68:	ldr	r3, [pc, #792]	; 1df88 <__flatcc_gen_sort@@Base+0x23e8>
   1dc6c:	add	r3, pc, r3
   1dc70:	str	r3, [sp, #64]	; 0x40
   1dc74:	b	1db4c <__flatcc_gen_sort@@Base+0x1fac>
   1dc78:	ldr	r2, [pc, #780]	; 1df8c <__flatcc_gen_sort@@Base+0x23ec>
   1dc7c:	add	r2, pc, r2
   1dc80:	str	r2, [sp, #68]	; 0x44
   1dc84:	ldr	r2, [pc, #772]	; 1df90 <__flatcc_gen_sort@@Base+0x23f0>
   1dc88:	add	r2, pc, r2
   1dc8c:	str	r2, [sp, #72]	; 0x48
   1dc90:	ldr	r2, [pc, #764]	; 1df94 <__flatcc_gen_sort@@Base+0x23f4>
   1dc94:	add	r2, pc, r2
   1dc98:	str	r2, [sp, #64]	; 0x40
   1dc9c:	b	1d578 <__flatcc_gen_sort@@Base+0x19d8>
   1dca0:	ldr	r2, [pc, #752]	; 1df98 <__flatcc_gen_sort@@Base+0x23f8>
   1dca4:	add	r2, pc, r2
   1dca8:	str	r2, [sp, #68]	; 0x44
   1dcac:	ldr	r2, [pc, #744]	; 1df9c <__flatcc_gen_sort@@Base+0x23fc>
   1dcb0:	add	r2, pc, r2
   1dcb4:	str	r2, [sp, #72]	; 0x48
   1dcb8:	ldr	r2, [pc, #736]	; 1dfa0 <__flatcc_gen_sort@@Base+0x2400>
   1dcbc:	add	r2, pc, r2
   1dcc0:	str	r2, [sp, #64]	; 0x40
   1dcc4:	b	1d52c <__flatcc_gen_sort@@Base+0x198c>
   1dcc8:	ldr	r3, [pc, #724]	; 1dfa4 <__flatcc_gen_sort@@Base+0x2404>
   1dccc:	add	r3, pc, r3
   1dcd0:	str	r3, [sp, #68]	; 0x44
   1dcd4:	ldr	r3, [pc, #716]	; 1dfa8 <__flatcc_gen_sort@@Base+0x2408>
   1dcd8:	add	r3, pc, r3
   1dcdc:	str	r3, [sp, #64]	; 0x40
   1dce0:	b	1db4c <__flatcc_gen_sort@@Base+0x1fac>
   1dce4:	ldr	r3, [pc, #704]	; 1dfac <__flatcc_gen_sort@@Base+0x240c>
   1dce8:	add	r3, pc, r3
   1dcec:	str	r3, [sp, #68]	; 0x44
   1dcf0:	ldr	r3, [pc, #696]	; 1dfb0 <__flatcc_gen_sort@@Base+0x2410>
   1dcf4:	add	r3, pc, r3
   1dcf8:	str	r3, [sp, #64]	; 0x40
   1dcfc:	b	1db4c <__flatcc_gen_sort@@Base+0x1fac>
   1dd00:	ldr	r2, [pc, #684]	; 1dfb4 <__flatcc_gen_sort@@Base+0x2414>
   1dd04:	add	r2, pc, r2
   1dd08:	str	r2, [sp, #68]	; 0x44
   1dd0c:	ldr	r2, [pc, #676]	; 1dfb8 <__flatcc_gen_sort@@Base+0x2418>
   1dd10:	add	r2, pc, r2
   1dd14:	str	r2, [sp, #72]	; 0x48
   1dd18:	ldr	r2, [pc, #668]	; 1dfbc <__flatcc_gen_sort@@Base+0x241c>
   1dd1c:	add	r2, pc, r2
   1dd20:	str	r2, [sp, #64]	; 0x40
   1dd24:	b	1d578 <__flatcc_gen_sort@@Base+0x19d8>
   1dd28:	ldr	r2, [pc, #656]	; 1dfc0 <__flatcc_gen_sort@@Base+0x2420>
   1dd2c:	add	r2, pc, r2
   1dd30:	str	r2, [sp, #68]	; 0x44
   1dd34:	ldr	r2, [pc, #648]	; 1dfc4 <__flatcc_gen_sort@@Base+0x2424>
   1dd38:	add	r2, pc, r2
   1dd3c:	str	r2, [sp, #64]	; 0x40
   1dd40:	b	1daa4 <__flatcc_gen_sort@@Base+0x1f04>
   1dd44:	ldr	r1, [pc, #636]	; 1dfc8 <__flatcc_gen_sort@@Base+0x2428>
   1dd48:	ldr	r2, [pc, #636]	; 1dfcc <__flatcc_gen_sort@@Base+0x242c>
   1dd4c:	add	r1, pc, r1
   1dd50:	add	r2, pc, r2
   1dd54:	str	r1, [sp, #64]	; 0x40
   1dd58:	str	r1, [sp, #68]	; 0x44
   1dd5c:	str	r2, [sp, #72]	; 0x48
   1dd60:	b	1d578 <__flatcc_gen_sort@@Base+0x19d8>
   1dd64:	andeq	r0, r5, ip, asr #4
   1dd68:	muleq	r2, r8, sl
   1dd6c:	andeq	sp, r2, r0, asr sl
   1dd70:	ldrdeq	r5, [r2], -r4
   1dd74:	andeq	r5, r2, r0, rrx
   1dd78:	andeq	sp, r2, r0, lsl #15
   1dd7c:	andeq	sp, r2, r8, asr #14
   1dd80:	andeq	sp, r2, r0, ror #14
   1dd84:	andeq	sp, r2, r4, asr r7
   1dd88:	muleq	r2, r8, r6
   1dd8c:	andeq	sp, r2, r8, lsl #11
   1dd90:	andeq	sp, r2, ip, ror r5
   1dd94:	andeq	lr, r2, ip, asr #19
   1dd98:	andeq	sp, r2, ip, asr #6
   1dd9c:	andeq	sp, r2, r4, lsr r3
   1dda0:	andeq	r4, r2, r4, asr ip
   1dda4:	andeq	lr, r2, r0, lsr #18
   1dda8:	andeq	r4, r2, r4, asr ip
   1ddac:	andeq	r4, r2, r4, lsr #23
   1ddb0:	andeq	lr, r2, r4, lsl #18
   1ddb4:	andeq	r4, r2, r4, lsr #23
   1ddb8:	andeq	r4, r2, r8, lsl #22
   1ddbc:	andeq	lr, r2, ip, ror #15
   1ddc0:	andeq	r4, r2, r8, lsl #22
   1ddc4:	ldrdeq	r4, [r2], -ip
   1ddc8:	ldrdeq	lr, [r2], -r0
   1ddcc:	ldrdeq	r4, [r2], -ip
   1ddd0:			; <UNDEFINED> instruction: 0x0002e7bc
   1ddd4:	muleq	r2, ip, sl
   1ddd8:	andeq	lr, r2, r0, lsr #15
   1dddc:	muleq	r2, ip, sl
   1dde0:	andeq	r4, r2, r0, asr sl
   1dde4:	andeq	lr, r2, r4, lsl #15
   1dde8:	andeq	r4, r2, r4, asr sl
   1ddec:	andeq	r4, r2, r8, asr #20
   1ddf0:	andeq	lr, r2, r8, ror #14
   1ddf4:	andeq	r4, r2, ip, asr #20
   1ddf8:	strdeq	r4, [r2], -ip
   1ddfc:	andeq	lr, r2, ip, asr #14
   1de00:	andeq	r4, r2, r0, lsl #20
   1de04:	andeq	sp, r2, r0, rrx
   1de08:	andeq	sp, r2, ip, lsr #2
   1de0c:	andeq	r4, r2, ip, lsl #19
   1de10:	strdeq	ip, [r3], -r8
   1de14:	andeq	r4, r2, r0, asr #18
   1de18:	andeq	ip, r3, ip, lsr #11
   1de1c:	strdeq	r4, [r2], -r8
   1de20:	andeq	ip, r3, ip, asr r5
   1de24:	andeq	r4, r2, r4, ror #22
   1de28:	andeq	ip, r2, r0, lsr pc
   1de2c:	andeq	r4, r2, r8, asr r8
   1de30:	andeq	ip, r3, r4, asr #9
   1de34:	andeq	r4, r2, r8, lsr #20
   1de38:	andeq	sp, r2, r4, lsl r0
   1de3c:	andeq	r4, r2, r4, lsr #15
   1de40:	muleq	r2, r4, r9
   1de44:	andeq	r4, r2, r8, ror r7
   1de48:	andeq	r4, r2, r4, ror r9
   1de4c:	andeq	r4, r2, r0, lsr #14
   1de50:	andeq	lr, r2, r4, ror #7
   1de54:	andeq	r4, r2, r0, lsl r7
   1de58:	andeq	r4, r2, ip, ror #13
   1de5c:	andeq	lr, r2, r0, asr #7
   1de60:	andeq	ip, r2, r4, lsr #31
   1de64:	andeq	ip, r2, r4, lsl #31
   1de68:	andeq	r4, r2, r0, lsr r6
   1de6c:	muleq	r2, r4, r6
   1de70:	muleq	r3, r0, r2
   1de74:	andeq	r4, r2, ip, lsl #17
   1de78:	andeq	r4, r2, r8, asr r6
   1de7c:	andeq	r4, r2, r0, asr #12
   1de80:	andeq	r4, r2, ip, ror #12
   1de84:	andeq	r4, r2, r4, asr #12
   1de88:	andeq	r4, r2, r4, asr #12
   1de8c:	andeq	r4, r2, r0, asr #12
   1de90:	andeq	r4, r2, r0, lsl r6
   1de94:	strdeq	r4, [r2], -r8
   1de98:	andeq	r4, r2, r4, lsr #12
   1de9c:	strdeq	r4, [r2], -ip
   1dea0:	andeq	r4, r2, ip, asr #11
   1dea4:	strdeq	r4, [r2], -r0
   1dea8:	andeq	r4, r2, ip, ror #11
   1deac:	andeq	r4, r2, r4, asr #10
   1deb0:	andeq	r4, r2, r4, asr #10
   1deb4:	andeq	lr, r2, ip, asr #4
   1deb8:	andeq	r4, r2, r8, asr #11
   1debc:	andeq	r4, r2, r0, asr #10
   1dec0:	andeq	r4, r2, ip, lsr r5
   1dec4:	andeq	lr, r2, ip, lsl r2
   1dec8:	andeq	r4, r2, r8, lsl #11
   1decc:	andeq	r4, r2, r0, lsl #10
   1ded0:	strdeq	r4, [r2], -ip
   1ded4:	andeq	lr, r2, ip, ror #3
   1ded8:	andeq	r4, r2, r4, asr #10
   1dedc:	andeq	r4, r2, r0, lsr #9
   1dee0:	andeq	r4, r2, r0, lsr #9
   1dee4:			; <UNDEFINED> instruction: 0x0002e1bc
   1dee8:	andeq	r4, r2, ip, lsl r5
   1deec:	andeq	r4, r2, r8, ror #8
   1def0:	andeq	lr, r2, r0, lsl #3
   1def4:	strdeq	r4, [r2], -ip
   1def8:	andeq	r4, r2, ip, lsl r4
   1defc:	andeq	lr, r2, r8, asr r1
   1df00:	strdeq	r4, [r2], -ip
   1df04:	andeq	lr, r2, r8, lsr r1
   1df08:	andeq	r4, r2, r0, ror #7
   1df0c:	strdeq	r4, [r2], -r8
   1df10:	strdeq	r4, [r2], -r4	; <UNPREDICTABLE>
   1df14:	andeq	lr, r2, r4, asr #1
   1df18:	andeq	r4, r2, r8, lsr r4
   1df1c:	andeq	lr, r2, ip, lsr #1
   1df20:	andeq	r4, r2, r8, ror #7
   1df24:	muleq	r2, r4, r0
   1df28:	ldrdeq	r4, [r2], -r8
   1df2c:	andeq	r4, r2, ip, lsl r3
   1df30:	andeq	r4, r2, r8, lsl r3
   1df34:	andeq	lr, r2, r0, rrx
   1df38:	andeq	r4, r2, ip, ror #5
   1df3c:	andeq	lr, r2, r4, asr #32
   1df40:	ldrdeq	r4, [r2], -ip
   1df44:	andeq	r4, r2, r4, asr #5
   1df48:	andeq	lr, r2, ip, lsl r0
   1df4c:			; <UNDEFINED> instruction: 0x000242b4
   1df50:	muleq	r2, ip, r2
   1df54:	muleq	r2, r8, r2
   1df58:	andeq	sp, r2, r4, ror #31
   1df5c:	andeq	r4, r2, r4, lsr r3
   1df60:	andeq	r4, r2, r8, asr #5
   1df64:	andeq	sp, r2, r4, asr #31
   1df68:			; <UNDEFINED> instruction: 0x000242b8
   1df6c:	andeq	r4, r2, r4, lsl #5
   1df70:	muleq	r2, ip, pc	; <UNPREDICTABLE>
   1df74:	andeq	r4, r2, r8, ror r2
   1df78:	andeq	r4, r2, ip, asr r2
   1df7c:	andeq	sp, r2, r4, ror pc
   1df80:	andeq	r4, r2, r0, asr r2
   1df84:	andeq	r4, r2, r0, asr r2
   1df88:	andeq	r4, r2, ip, asr #4
   1df8c:	andeq	r4, r2, r4, lsl #4
   1df90:	andeq	sp, r2, r0, lsr pc
   1df94:	strdeq	r4, [r2], -r8
   1df98:	ldrdeq	r4, [r2], -ip
   1df9c:	andeq	sp, r2, r8, lsl #30
   1dfa0:	ldrdeq	r4, [r2], -r0
   1dfa4:			; <UNDEFINED> instruction: 0x000241b4
   1dfa8:			; <UNDEFINED> instruction: 0x000241b4
   1dfac:	andeq	r4, r2, ip, lsr #3
   1dfb0:	andeq	r4, r2, ip, lsr #3
   1dfb4:	andeq	r4, r2, ip, lsr #3
   1dfb8:	andeq	sp, r2, r8, lsr #29
   1dfbc:	muleq	r2, ip, r1
   1dfc0:			; <UNDEFINED> instruction: 0x000241bc
   1dfc4:			; <UNDEFINED> instruction: 0x000241b8
   1dfc8:	muleq	r2, r4, r1
   1dfcc:	andeq	sp, r2, r8, ror #28
   1dfd0:	andeq	r3, r2, r8, ror sp
   1dfd4:	andeq	sp, r2, ip, asr #20
   1dfd8:	andeq	r3, r2, r4, ror #26
   1dfdc:	andeq	sp, r2, r8, lsr #20
   1dfe0:	andeq	r3, r2, r4, asr sp
   1dfe4:	andeq	r3, r2, r0, asr sp
   1dfe8:	andeq	r3, r2, r4, lsr sp
   1dfec:	strdeq	sp, [r2], -r8
   1dff0:	andeq	r3, r2, r4, lsr #26
   1dff4:	andeq	r3, r2, r4, lsl #26
   1dff8:	andeq	r3, r2, r4, lsr #26
   1dffc:	andeq	r3, r2, r0, lsr #30
   1e000:	strdeq	r3, [r2], -r8
   1e004:	strdeq	r3, [r2], -ip
   1e008:	ldrdeq	r3, [r2], -r0
   1e00c:	andeq	r3, r2, r0, asr #29
   1e010:			; <UNDEFINED> instruction: 0x00023eb4
   1e014:	andeq	r3, r2, r4, lsl ip
   1e018:	andeq	r3, r2, r8, lsr ip
   1e01c:	andeq	r3, r2, r4, lsl #24
   1e020:	andeq	r3, r2, r0, lsr ip
   1e024:	andeq	r3, r2, ip, lsl ip
   1e028:	andeq	r3, r2, ip, ror #23
   1e02c:	andeq	r3, r2, r4, lsl #24
   1e030:	ldrdeq	r3, [r2], -r4
   1e034:			; <UNDEFINED> instruction: 0x00023bbc
   1e038:	andeq	r3, r2, r8, ror #23
   1e03c:	muleq	r2, ip, fp
   1e040:	andeq	r3, r2, r0, asr #23
   1e044:	andeq	r3, r2, r8, lsr #23
   1e048:			; <UNDEFINED> instruction: 0x00023bb0
   1e04c:	andeq	r3, r2, r0, lsl #23
   1e050:	andeq	r3, r2, r8, ror #22
   1e054:	muleq	r2, r4, fp
   1e058:	andeq	r3, r2, r8, asr #22
   1e05c:	andeq	r3, r2, ip, ror #22
   1e060:	andeq	r3, r2, r4, asr fp
   1e064:	andeq	r3, r2, r8, asr #22
   1e068:	strdeq	r4, [r2], -r4	; <UNPREDICTABLE>
   1e06c:	andeq	fp, r2, r8, ror sp
   1e070:	andeq	r3, r2, r4, lsl #20
   1e074:	ldrdeq	fp, [r2], -ip
   1e078:	andeq	fp, r2, r8, lsl #30
   1e07c:	andeq	r4, r2, ip, lsl #5
   1e080:	andeq	fp, r2, r0, lsr #26
   1e084:	andeq	r3, r2, ip, lsr #19
   1e088:	andeq	fp, r2, r4, lsl #23
   1e08c:			; <UNDEFINED> instruction: 0x0002beb0
   1e090:	andeq	r4, r2, r0, lsl #5
   1e094:	andeq	fp, r2, r8, asr #25
   1e098:	andeq	r3, r2, r4, asr r9
   1e09c:	andeq	fp, r2, ip, lsr #22
   1e0a0:	andeq	fp, r2, r8, asr lr
   1e0a4:	andeq	r3, r2, r0, lsr #18
   1e0a8:	andeq	r3, r2, ip, lsr #17
   1e0ac:	strdeq	r3, [r2], -ip
   1e0b0:	ldrdeq	fp, [r2], -r4
   1e0b4:	andeq	fp, r2, r0, lsl #28
   1e0b8:	andeq	r3, r2, ip, ror r9
   1e0bc:	andeq	sp, r2, r8, ror #12
   1e0c0:	andeq	r3, r2, ip, ror #18
   1e0c4:	andeq	r3, r2, r4, asr r9
   1e0c8:	andeq	sp, r2, r0, asr #12
   1e0cc:	andeq	r3, r2, r4, asr #18
   1e0d0:	andeq	r3, r2, ip, lsr #18
   1e0d4:	andeq	r3, r2, r8, lsr #18
   1e0d8:	andeq	ip, r2, ip, lsl #1
   1e0dc:	andeq	fp, r2, r8, lsr #23
   1e0e0:	andeq	r3, r2, r4, lsr r8
   1e0e4:	andeq	fp, r2, ip, lsl #20
   1e0e8:	andeq	fp, r2, r8, lsr sp
   1e0ec:	andeq	r3, r2, r8, asr #17
   1e0f0:	andeq	sp, r2, r4, lsr #11
   1e0f4:			; <UNDEFINED> instruction: 0x000238b8
   1e0f8:	andeq	r3, r2, r0, lsr #17
   1e0fc:	andeq	sp, r2, ip, ror r5
   1e100:	muleq	r2, r0, r8
   1e104:	andeq	r3, r2, r8, ror r8
   1e108:	andeq	r3, r2, r4, ror r8
   1e10c:	strdeq	r3, [r2], -r0
   1e110:	strdeq	r3, [r2], -r0
   1e114:	ldrdeq	r3, [r2], -r4
   1e118:	andeq	sp, r2, ip, lsl r5
   1e11c:	andeq	r3, r2, r8, asr #15
   1e120:	andeq	r3, r2, ip, lsr #15
   1e124:	strdeq	sp, [r2], -r4
   1e128:	andeq	r3, r2, r0, lsr #15
   1e12c:	andeq	r3, r2, r4, lsl #15
   1e130:	andeq	r3, r2, r4, lsl #15
   1e134:	andeq	r3, r2, ip, lsl #14
   1e138:	muleq	r2, r8, r6
   1e13c:	andeq	r3, r2, r8, ror #13
   1e140:	andeq	fp, r2, r0, asr #17
   1e144:	andeq	fp, r2, ip, ror #23
   1e148:	andeq	r0, r0, r0, lsr #1
   1e14c:			; <UNDEFINED> instruction: 0x000236b4
   1e150:	andeq	r3, r2, r0, asr #12
   1e154:	muleq	r2, r0, r6
   1e158:	andeq	fp, r2, r8, ror #16
   1e15c:	muleq	r2, r4, fp
   1e160:	ldr	r1, [pc, #-408]	; 1dfd0 <__flatcc_gen_sort@@Base+0x2430>
   1e164:	ldr	r2, [pc, #-408]	; 1dfd4 <__flatcc_gen_sort@@Base+0x2434>
   1e168:	add	r1, pc, r1
   1e16c:	add	r2, pc, r2
   1e170:	str	r1, [sp, #64]	; 0x40
   1e174:	str	r1, [sp, #68]	; 0x44
   1e178:	str	r2, [sp, #72]	; 0x48
   1e17c:	b	1d52c <__flatcc_gen_sort@@Base+0x198c>
   1e180:	ldr	r3, [pc, #-432]	; 1dfd8 <__flatcc_gen_sort@@Base+0x2438>
   1e184:	add	r3, pc, r3
   1e188:	str	r3, [sp, #68]	; 0x44
   1e18c:	ldr	r3, [pc, #-440]	; 1dfdc <__flatcc_gen_sort@@Base+0x243c>
   1e190:	add	r3, pc, r3
   1e194:	str	r3, [sp, #72]	; 0x48
   1e198:	ldr	r3, [pc, #-448]	; 1dfe0 <__flatcc_gen_sort@@Base+0x2440>
   1e19c:	add	r3, pc, r3
   1e1a0:	str	r3, [sp, #64]	; 0x40
   1e1a4:	ldr	r2, [pc, #-456]	; 1dfe4 <__flatcc_gen_sort@@Base+0x2444>
   1e1a8:	add	r2, pc, r2
   1e1ac:	b	1d7a0 <__flatcc_gen_sort@@Base+0x1c00>
   1e1b0:	ldr	r2, [pc, #-464]	; 1dfe8 <__flatcc_gen_sort@@Base+0x2448>
   1e1b4:	add	r2, pc, r2
   1e1b8:	str	r2, [sp, #68]	; 0x44
   1e1bc:	ldr	r2, [pc, #-472]	; 1dfec <__flatcc_gen_sort@@Base+0x244c>
   1e1c0:	add	r2, pc, r2
   1e1c4:	str	r2, [sp, #72]	; 0x48
   1e1c8:	ldr	r2, [pc, #-480]	; 1dff0 <__flatcc_gen_sort@@Base+0x2450>
   1e1cc:	add	r2, pc, r2
   1e1d0:	str	r2, [sp, #64]	; 0x40
   1e1d4:	b	1d52c <__flatcc_gen_sort@@Base+0x198c>
   1e1d8:	ldr	r2, [pc, #-492]	; 1dff4 <__flatcc_gen_sort@@Base+0x2454>
   1e1dc:	add	r2, pc, r2
   1e1e0:	str	r2, [sp, #64]	; 0x40
   1e1e4:	str	r2, [sp, #68]	; 0x44
   1e1e8:	b	1daa4 <__flatcc_gen_sort@@Base+0x1f04>
   1e1ec:	ldr	r2, [pc, #-508]	; 1dff8 <__flatcc_gen_sort@@Base+0x2458>
   1e1f0:	add	r2, pc, r2
   1e1f4:	ldr	r1, [pc, #-512]	; 1dffc <__flatcc_gen_sort@@Base+0x245c>
   1e1f8:	add	r3, sp, #100	; 0x64
   1e1fc:	mov	r0, r3
   1e200:	ldrd	r8, [r4, #48]	; 0x30
   1e204:	add	r1, pc, r1
   1e208:	strd	r8, [sp]
   1e20c:	str	r3, [sp, #60]	; 0x3c
   1e210:	bl	140d0 <sprintf@plt>
   1e214:	b	1d71c <__flatcc_gen_sort@@Base+0x1b7c>
   1e218:	ldr	r2, [pc, #-544]	; 1e000 <__flatcc_gen_sort@@Base+0x2460>
   1e21c:	add	r2, pc, r2
   1e220:	ldr	r1, [pc, #-548]	; 1e004 <__flatcc_gen_sort@@Base+0x2464>
   1e224:	add	r3, sp, #100	; 0x64
   1e228:	mov	r0, r3
   1e22c:	str	r3, [sp, #60]	; 0x3c
   1e230:	ldrb	r3, [r4, #48]	; 0x30
   1e234:	add	r1, pc, r1
   1e238:	bl	140d0 <sprintf@plt>
   1e23c:	b	1d71c <__flatcc_gen_sort@@Base+0x1b7c>
   1e240:	ldr	r2, [pc, #-576]	; 1e008 <__flatcc_gen_sort@@Base+0x2468>
   1e244:	add	r2, pc, r2
   1e248:	ldr	r1, [pc, #-580]	; 1e00c <__flatcc_gen_sort@@Base+0x246c>
   1e24c:	add	r3, sp, #100	; 0x64
   1e250:	mov	r0, r3
   1e254:	ldrd	r8, [r4, #48]	; 0x30
   1e258:	add	r1, pc, r1
   1e25c:	strd	r8, [sp]
   1e260:	str	r3, [sp, #60]	; 0x3c
   1e264:	bl	140d0 <sprintf@plt>
   1e268:	b	1d71c <__flatcc_gen_sort@@Base+0x1b7c>
   1e26c:	vldr	d7, [r4, #48]	; 0x30
   1e270:	add	r3, sp, #100	; 0x64
   1e274:	mov	r0, r3
   1e278:	ldr	r1, [pc, #-624]	; 1e010 <__flatcc_gen_sort@@Base+0x2470>
   1e27c:	str	r3, [sp, #60]	; 0x3c
   1e280:	vcvt.f32.f64	s14, d7
   1e284:	add	r1, pc, r1
   1e288:	vcvt.f64.f32	d7, s14
   1e28c:	vmov	r2, r3, d7
   1e290:	bl	140d0 <sprintf@plt>
   1e294:	b	1d71c <__flatcc_gen_sort@@Base+0x1b7c>
   1e298:	ldrh	r1, [r4, #56]	; 0x38
   1e29c:	sub	r1, r1, #3
   1e2a0:	cmp	r1, #3
   1e2a4:	addls	pc, pc, r1, lsl #2
   1e2a8:	b	1e750 <__flatcc_gen_sort@@Base+0x2bb0>
   1e2ac:	b	1e654 <__flatcc_gen_sort@@Base+0x2ab4>
   1e2b0:	b	1e62c <__flatcc_gen_sort@@Base+0x2a8c>
   1e2b4:	b	1e604 <__flatcc_gen_sort@@Base+0x2a64>
   1e2b8:	b	1dad4 <__flatcc_gen_sort@@Base+0x1f34>
   1e2bc:	ldrh	r1, [r4, #56]	; 0x38
   1e2c0:	sub	r1, r1, #3
   1e2c4:	cmp	r1, #3
   1e2c8:	addls	pc, pc, r1, lsl #2
   1e2cc:	b	1e750 <__flatcc_gen_sort@@Base+0x2bb0>
   1e2d0:	b	1e6dc <__flatcc_gen_sort@@Base+0x2b3c>
   1e2d4:	b	1e6b4 <__flatcc_gen_sort@@Base+0x2b14>
   1e2d8:	b	1e68c <__flatcc_gen_sort@@Base+0x2aec>
   1e2dc:	b	1e670 <__flatcc_gen_sort@@Base+0x2ad0>
   1e2e0:	ldr	r2, [pc, #-724]	; 1e014 <__flatcc_gen_sort@@Base+0x2474>
   1e2e4:	add	r2, pc, r2
   1e2e8:	b	1e220 <__flatcc_gen_sort@@Base+0x2680>
   1e2ec:	ldr	r2, [pc, #-732]	; 1e018 <__flatcc_gen_sort@@Base+0x2478>
   1e2f0:	add	r2, pc, r2
   1e2f4:	b	1e220 <__flatcc_gen_sort@@Base+0x2680>
   1e2f8:	ldr	r2, [pc, #-740]	; 1e01c <__flatcc_gen_sort@@Base+0x247c>
   1e2fc:	add	r2, pc, r2
   1e300:	b	1e220 <__flatcc_gen_sort@@Base+0x2680>
   1e304:	ldr	r2, [pc, #-748]	; 1e020 <__flatcc_gen_sort@@Base+0x2480>
   1e308:	add	r2, pc, r2
   1e30c:	b	1e220 <__flatcc_gen_sort@@Base+0x2680>
   1e310:	ldr	r2, [pc, #-756]	; 1e024 <__flatcc_gen_sort@@Base+0x2484>
   1e314:	add	r2, pc, r2
   1e318:	b	1e1f4 <__flatcc_gen_sort@@Base+0x2654>
   1e31c:	ldr	r2, [pc, #-764]	; 1e028 <__flatcc_gen_sort@@Base+0x2488>
   1e320:	add	r2, pc, r2
   1e324:	b	1e1f4 <__flatcc_gen_sort@@Base+0x2654>
   1e328:	ldr	r2, [pc, #-772]	; 1e02c <__flatcc_gen_sort@@Base+0x248c>
   1e32c:	add	r2, pc, r2
   1e330:	b	1e248 <__flatcc_gen_sort@@Base+0x26a8>
   1e334:	ldr	r2, [pc, #-780]	; 1e030 <__flatcc_gen_sort@@Base+0x2490>
   1e338:	add	r2, pc, r2
   1e33c:	b	1e248 <__flatcc_gen_sort@@Base+0x26a8>
   1e340:	ldr	r2, [pc, #-788]	; 1e034 <__flatcc_gen_sort@@Base+0x2494>
   1e344:	add	r2, pc, r2
   1e348:	b	1e1f4 <__flatcc_gen_sort@@Base+0x2654>
   1e34c:	ldr	r2, [pc, #-796]	; 1e038 <__flatcc_gen_sort@@Base+0x2498>
   1e350:	add	r2, pc, r2
   1e354:	b	1e1f4 <__flatcc_gen_sort@@Base+0x2654>
   1e358:	ldr	r2, [pc, #-804]	; 1e03c <__flatcc_gen_sort@@Base+0x249c>
   1e35c:	add	r2, pc, r2
   1e360:	b	1e1f4 <__flatcc_gen_sort@@Base+0x2654>
   1e364:	ldr	r2, [pc, #-812]	; 1e040 <__flatcc_gen_sort@@Base+0x24a0>
   1e368:	add	r2, pc, r2
   1e36c:	b	1e1f4 <__flatcc_gen_sort@@Base+0x2654>
   1e370:	ldr	r2, [pc, #-820]	; 1e044 <__flatcc_gen_sort@@Base+0x24a4>
   1e374:	add	r2, pc, r2
   1e378:	b	1e1f4 <__flatcc_gen_sort@@Base+0x2654>
   1e37c:	ldr	r2, [pc, #-828]	; 1e048 <__flatcc_gen_sort@@Base+0x24a8>
   1e380:	add	r2, pc, r2
   1e384:	b	1e220 <__flatcc_gen_sort@@Base+0x2680>
   1e388:	ldr	r2, [pc, #-836]	; 1e04c <__flatcc_gen_sort@@Base+0x24ac>
   1e38c:	add	r2, pc, r2
   1e390:	b	1e220 <__flatcc_gen_sort@@Base+0x2680>
   1e394:	ldr	r2, [pc, #-844]	; 1e050 <__flatcc_gen_sort@@Base+0x24b0>
   1e398:	add	r2, pc, r2
   1e39c:	b	1e248 <__flatcc_gen_sort@@Base+0x26a8>
   1e3a0:	ldr	r2, [pc, #-852]	; 1e054 <__flatcc_gen_sort@@Base+0x24b4>
   1e3a4:	add	r2, pc, r2
   1e3a8:	b	1e248 <__flatcc_gen_sort@@Base+0x26a8>
   1e3ac:	ldr	r2, [pc, #-860]	; 1e058 <__flatcc_gen_sort@@Base+0x24b8>
   1e3b0:	add	r2, pc, r2
   1e3b4:	b	1e248 <__flatcc_gen_sort@@Base+0x26a8>
   1e3b8:	ldr	r2, [pc, #-868]	; 1e05c <__flatcc_gen_sort@@Base+0x24bc>
   1e3bc:	add	r2, pc, r2
   1e3c0:	b	1e248 <__flatcc_gen_sort@@Base+0x26a8>
   1e3c4:	ldr	r2, [pc, #-876]	; 1e060 <__flatcc_gen_sort@@Base+0x24c0>
   1e3c8:	add	r2, pc, r2
   1e3cc:	b	1e248 <__flatcc_gen_sort@@Base+0x26a8>
   1e3d0:	ldr	r2, [pc, #-884]	; 1e064 <__flatcc_gen_sort@@Base+0x24c4>
   1e3d4:	add	r2, pc, r2
   1e3d8:	b	1e220 <__flatcc_gen_sort@@Base+0x2680>
   1e3dc:	ldr	r2, [pc, #-668]	; 1e148 <__flatcc_gen_sort@@Base+0x25a8>
   1e3e0:	movw	r3, #1512	; 0x5e8
   1e3e4:	ldr	r1, [sp, #92]	; 0x5c
   1e3e8:	ldr	r0, [pc, #-904]	; 1e068 <__flatcc_gen_sort@@Base+0x24c8>
   1e3ec:	ldr	r4, [pc, #-904]	; 1e06c <__flatcc_gen_sort@@Base+0x24cc>
   1e3f0:	ldr	ip, [r1, r2]
   1e3f4:	add	r0, pc, r0
   1e3f8:	ldr	r1, [pc, #-912]	; 1e070 <__flatcc_gen_sort@@Base+0x24d0>
   1e3fc:	add	r4, pc, r4
   1e400:	str	r0, [sp]
   1e404:	mov	r2, r4
   1e408:	ldr	r0, [ip]
   1e40c:	add	r1, pc, r1
   1e410:	bl	14064 <fprintf@plt>
   1e414:	ldr	r3, [pc, #-936]	; 1e074 <__flatcc_gen_sort@@Base+0x24d4>
   1e418:	mov	r1, r4
   1e41c:	movw	r2, #1512	; 0x5e8
   1e420:	ldr	r0, [pc, #-944]	; 1e078 <__flatcc_gen_sort@@Base+0x24d8>
   1e424:	add	r3, pc, r3
   1e428:	add	r3, r3, #144	; 0x90
   1e42c:	add	r0, pc, r0
   1e430:	bl	14118 <__assert_fail@plt>
   1e434:	ldr	r2, [pc, #-756]	; 1e148 <__flatcc_gen_sort@@Base+0x25a8>
   1e438:	mov	r3, #1472	; 0x5c0
   1e43c:	ldr	r1, [sp, #92]	; 0x5c
   1e440:	ldr	r0, [pc, #-972]	; 1e07c <__flatcc_gen_sort@@Base+0x24dc>
   1e444:	ldr	r4, [pc, #-972]	; 1e080 <__flatcc_gen_sort@@Base+0x24e0>
   1e448:	ldr	ip, [r1, r2]
   1e44c:	add	r0, pc, r0
   1e450:	ldr	r1, [pc, #-980]	; 1e084 <__flatcc_gen_sort@@Base+0x24e4>
   1e454:	add	r4, pc, r4
   1e458:	str	r0, [sp]
   1e45c:	mov	r2, r4
   1e460:	ldr	r0, [ip]
   1e464:	add	r1, pc, r1
   1e468:	bl	14064 <fprintf@plt>
   1e46c:	ldr	r3, [pc, #-1004]	; 1e088 <__flatcc_gen_sort@@Base+0x24e8>
   1e470:	mov	r1, r4
   1e474:	mov	r2, #1472	; 0x5c0
   1e478:	ldr	r0, [pc, #-1012]	; 1e08c <__flatcc_gen_sort@@Base+0x24ec>
   1e47c:	add	r3, pc, r3
   1e480:	add	r3, r3, #144	; 0x90
   1e484:	add	r0, pc, r0
   1e488:	bl	14118 <__assert_fail@plt>
   1e48c:	ldr	r2, [pc, #-844]	; 1e148 <__flatcc_gen_sort@@Base+0x25a8>
   1e490:	movw	r3, #1507	; 0x5e3
   1e494:	ldr	r1, [sp, #92]	; 0x5c
   1e498:	ldr	r0, [pc, #-1040]	; 1e090 <__flatcc_gen_sort@@Base+0x24f0>
   1e49c:	ldr	r4, [pc, #-1040]	; 1e094 <__flatcc_gen_sort@@Base+0x24f4>
   1e4a0:	ldr	ip, [r1, r2]
   1e4a4:	add	r0, pc, r0
   1e4a8:	ldr	r1, [pc, #-1048]	; 1e098 <__flatcc_gen_sort@@Base+0x24f8>
   1e4ac:	add	r4, pc, r4
   1e4b0:	str	r0, [sp]
   1e4b4:	mov	r2, r4
   1e4b8:	ldr	r0, [ip]
   1e4bc:	add	r1, pc, r1
   1e4c0:	bl	14064 <fprintf@plt>
   1e4c4:	ldr	r3, [pc, #-1072]	; 1e09c <__flatcc_gen_sort@@Base+0x24fc>
   1e4c8:	mov	r1, r4
   1e4cc:	movw	r2, #1507	; 0x5e3
   1e4d0:	ldr	r0, [pc, #-1080]	; 1e0a0 <__flatcc_gen_sort@@Base+0x2500>
   1e4d4:	add	r3, pc, r3
   1e4d8:	add	r3, r3, #144	; 0x90
   1e4dc:	add	r0, pc, r0
   1e4e0:	bl	14118 <__assert_fail@plt>
   1e4e4:	ldr	r2, [pc, #-932]	; 1e148 <__flatcc_gen_sort@@Base+0x25a8>
   1e4e8:	mov	r3, #141	; 0x8d
   1e4ec:	ldr	r1, [sp, #92]	; 0x5c
   1e4f0:	ldr	r0, [pc, #-1108]	; 1e0a4 <__flatcc_gen_sort@@Base+0x2504>
   1e4f4:	ldr	r4, [pc, #-1108]	; 1e0a8 <__flatcc_gen_sort@@Base+0x2508>
   1e4f8:	ldr	ip, [r1, r2]
   1e4fc:	add	r0, pc, r0
   1e500:	ldr	r1, [pc, #-1116]	; 1e0ac <__flatcc_gen_sort@@Base+0x250c>
   1e504:	add	r4, pc, r4
   1e508:	str	r0, [sp]
   1e50c:	mov	r2, r4
   1e510:	ldr	r0, [ip]
   1e514:	add	r1, pc, r1
   1e518:	bl	14064 <fprintf@plt>
   1e51c:	ldr	r3, [pc, #-1140]	; 1e0b0 <__flatcc_gen_sort@@Base+0x2510>
   1e520:	mov	r1, r4
   1e524:	mov	r2, #141	; 0x8d
   1e528:	ldr	r0, [pc, #-1148]	; 1e0b4 <__flatcc_gen_sort@@Base+0x2514>
   1e52c:	add	r3, pc, r3
   1e530:	add	r3, r3, #84	; 0x54
   1e534:	add	r0, pc, r0
   1e538:	bl	14118 <__assert_fail@plt>
   1e53c:	bl	1c024 <__flatcc_gen_sort@@Base+0x484>
   1e540:	ldr	r2, [pc, #-1168]	; 1e0b8 <__flatcc_gen_sort@@Base+0x2518>
   1e544:	add	r2, pc, r2
   1e548:	str	r2, [sp, #68]	; 0x44
   1e54c:	ldr	r2, [pc, #-1176]	; 1e0bc <__flatcc_gen_sort@@Base+0x251c>
   1e550:	add	r2, pc, r2
   1e554:	str	r2, [sp, #72]	; 0x48
   1e558:	ldr	r2, [pc, #-1184]	; 1e0c0 <__flatcc_gen_sort@@Base+0x2520>
   1e55c:	add	r2, pc, r2
   1e560:	str	r2, [sp, #64]	; 0x40
   1e564:	b	1d52c <__flatcc_gen_sort@@Base+0x198c>
   1e568:	ldr	r2, [pc, #-1196]	; 1e0c4 <__flatcc_gen_sort@@Base+0x2524>
   1e56c:	add	r2, pc, r2
   1e570:	str	r2, [sp, #68]	; 0x44
   1e574:	ldr	r2, [pc, #-1204]	; 1e0c8 <__flatcc_gen_sort@@Base+0x2528>
   1e578:	add	r2, pc, r2
   1e57c:	str	r2, [sp, #72]	; 0x48
   1e580:	ldr	r2, [pc, #-1212]	; 1e0cc <__flatcc_gen_sort@@Base+0x252c>
   1e584:	add	r2, pc, r2
   1e588:	str	r2, [sp, #64]	; 0x40
   1e58c:	b	1d578 <__flatcc_gen_sort@@Base+0x19d8>
   1e590:	ldr	r3, [pc, #-1224]	; 1e0d0 <__flatcc_gen_sort@@Base+0x2530>
   1e594:	add	r3, pc, r3
   1e598:	str	r3, [sp, #68]	; 0x44
   1e59c:	ldr	r3, [pc, #-1232]	; 1e0d4 <__flatcc_gen_sort@@Base+0x2534>
   1e5a0:	add	r3, pc, r3
   1e5a4:	str	r3, [sp, #64]	; 0x40
   1e5a8:	b	1db4c <__flatcc_gen_sort@@Base+0x1fac>
   1e5ac:	ldr	r2, [pc, #-1132]	; 1e148 <__flatcc_gen_sort@@Base+0x25a8>
   1e5b0:	movw	r3, #1430	; 0x596
   1e5b4:	ldr	r1, [sp, #92]	; 0x5c
   1e5b8:	ldr	r0, [pc, #-1256]	; 1e0d8 <__flatcc_gen_sort@@Base+0x2538>
   1e5bc:	ldr	r4, [pc, #-1256]	; 1e0dc <__flatcc_gen_sort@@Base+0x253c>
   1e5c0:	ldr	ip, [r1, r2]
   1e5c4:	add	r0, pc, r0
   1e5c8:	ldr	r1, [pc, #-1264]	; 1e0e0 <__flatcc_gen_sort@@Base+0x2540>
   1e5cc:	add	r4, pc, r4
   1e5d0:	str	r0, [sp]
   1e5d4:	mov	r2, r4
   1e5d8:	ldr	r0, [ip]
   1e5dc:	add	r1, pc, r1
   1e5e0:	bl	14064 <fprintf@plt>
   1e5e4:	ldr	r3, [pc, #-1288]	; 1e0e4 <__flatcc_gen_sort@@Base+0x2544>
   1e5e8:	mov	r1, r4
   1e5ec:	movw	r2, #1430	; 0x596
   1e5f0:	ldr	r0, [pc, #-1296]	; 1e0e8 <__flatcc_gen_sort@@Base+0x2548>
   1e5f4:	add	r3, pc, r3
   1e5f8:	add	r3, r3, #144	; 0x90
   1e5fc:	add	r0, pc, r0
   1e600:	bl	14118 <__assert_fail@plt>
   1e604:	ldr	r2, [pc, #-1312]	; 1e0ec <__flatcc_gen_sort@@Base+0x254c>
   1e608:	add	r2, pc, r2
   1e60c:	str	r2, [sp, #68]	; 0x44
   1e610:	ldr	r2, [pc, #-1320]	; 1e0f0 <__flatcc_gen_sort@@Base+0x2550>
   1e614:	add	r2, pc, r2
   1e618:	str	r2, [sp, #72]	; 0x48
   1e61c:	ldr	r2, [pc, #-1328]	; 1e0f4 <__flatcc_gen_sort@@Base+0x2554>
   1e620:	add	r2, pc, r2
   1e624:	str	r2, [sp, #64]	; 0x40
   1e628:	b	1d52c <__flatcc_gen_sort@@Base+0x198c>
   1e62c:	ldr	r2, [pc, #-1340]	; 1e0f8 <__flatcc_gen_sort@@Base+0x2558>
   1e630:	add	r2, pc, r2
   1e634:	str	r2, [sp, #68]	; 0x44
   1e638:	ldr	r2, [pc, #-1348]	; 1e0fc <__flatcc_gen_sort@@Base+0x255c>
   1e63c:	add	r2, pc, r2
   1e640:	str	r2, [sp, #72]	; 0x48
   1e644:	ldr	r2, [pc, #-1356]	; 1e100 <__flatcc_gen_sort@@Base+0x2560>
   1e648:	add	r2, pc, r2
   1e64c:	str	r2, [sp, #64]	; 0x40
   1e650:	b	1d578 <__flatcc_gen_sort@@Base+0x19d8>
   1e654:	ldr	r3, [pc, #-1368]	; 1e104 <__flatcc_gen_sort@@Base+0x2564>
   1e658:	add	r3, pc, r3
   1e65c:	str	r3, [sp, #68]	; 0x44
   1e660:	ldr	r3, [pc, #-1376]	; 1e108 <__flatcc_gen_sort@@Base+0x2568>
   1e664:	add	r3, pc, r3
   1e668:	str	r3, [sp, #64]	; 0x40
   1e66c:	b	1db4c <__flatcc_gen_sort@@Base+0x1fac>
   1e670:	ldr	r2, [pc, #-1388]	; 1e10c <__flatcc_gen_sort@@Base+0x256c>
   1e674:	add	r2, pc, r2
   1e678:	str	r2, [sp, #68]	; 0x44
   1e67c:	ldr	r2, [pc, #-1396]	; 1e110 <__flatcc_gen_sort@@Base+0x2570>
   1e680:	add	r2, pc, r2
   1e684:	str	r2, [sp, #64]	; 0x40
   1e688:	b	1daa4 <__flatcc_gen_sort@@Base+0x1f04>
   1e68c:	ldr	r2, [pc, #-1408]	; 1e114 <__flatcc_gen_sort@@Base+0x2574>
   1e690:	add	r2, pc, r2
   1e694:	str	r2, [sp, #68]	; 0x44
   1e698:	ldr	r2, [pc, #-1416]	; 1e118 <__flatcc_gen_sort@@Base+0x2578>
   1e69c:	add	r2, pc, r2
   1e6a0:	str	r2, [sp, #72]	; 0x48
   1e6a4:	ldr	r2, [pc, #-1424]	; 1e11c <__flatcc_gen_sort@@Base+0x257c>
   1e6a8:	add	r2, pc, r2
   1e6ac:	str	r2, [sp, #64]	; 0x40
   1e6b0:	b	1d52c <__flatcc_gen_sort@@Base+0x198c>
   1e6b4:	ldr	r2, [pc, #-1436]	; 1e120 <__flatcc_gen_sort@@Base+0x2580>
   1e6b8:	add	r2, pc, r2
   1e6bc:	str	r2, [sp, #68]	; 0x44
   1e6c0:	ldr	r2, [pc, #-1444]	; 1e124 <__flatcc_gen_sort@@Base+0x2584>
   1e6c4:	add	r2, pc, r2
   1e6c8:	str	r2, [sp, #72]	; 0x48
   1e6cc:	ldr	r2, [pc, #-1452]	; 1e128 <__flatcc_gen_sort@@Base+0x2588>
   1e6d0:	add	r2, pc, r2
   1e6d4:	str	r2, [sp, #64]	; 0x40
   1e6d8:	b	1d578 <__flatcc_gen_sort@@Base+0x19d8>
   1e6dc:	ldr	r3, [pc, #-1464]	; 1e12c <__flatcc_gen_sort@@Base+0x258c>
   1e6e0:	add	r3, pc, r3
   1e6e4:	str	r3, [sp, #68]	; 0x44
   1e6e8:	ldr	r3, [pc, #-1472]	; 1e130 <__flatcc_gen_sort@@Base+0x2590>
   1e6ec:	add	r3, pc, r3
   1e6f0:	str	r3, [sp, #64]	; 0x40
   1e6f4:	b	1db4c <__flatcc_gen_sort@@Base+0x1fac>
   1e6f8:	ldr	r2, [pc, #-1464]	; 1e148 <__flatcc_gen_sort@@Base+0x25a8>
   1e6fc:	mov	r3, #260	; 0x104
   1e700:	ldr	r1, [sp, #92]	; 0x5c
   1e704:	ldr	r0, [pc, #-1496]	; 1e134 <__flatcc_gen_sort@@Base+0x2594>
   1e708:	ldr	r4, [pc, #-1496]	; 1e138 <__flatcc_gen_sort@@Base+0x2598>
   1e70c:	ldr	ip, [r1, r2]
   1e710:	add	r0, pc, r0
   1e714:	ldr	r1, [pc, #-1504]	; 1e13c <__flatcc_gen_sort@@Base+0x259c>
   1e718:	add	r4, pc, r4
   1e71c:	str	r0, [sp]
   1e720:	mov	r2, r4
   1e724:	ldr	r0, [ip]
   1e728:	add	r1, pc, r1
   1e72c:	bl	14064 <fprintf@plt>
   1e730:	ldr	r3, [pc, #-1528]	; 1e140 <__flatcc_gen_sort@@Base+0x25a0>
   1e734:	mov	r1, r4
   1e738:	mov	r2, #260	; 0x104
   1e73c:	ldr	r0, [pc, #-1536]	; 1e144 <__flatcc_gen_sort@@Base+0x25a4>
   1e740:	add	r3, pc, r3
   1e744:	add	r3, r3, #128	; 0x80
   1e748:	add	r0, pc, r0
   1e74c:	bl	14118 <__assert_fail@plt>
   1e750:	ldr	r2, [pc, #-1552]	; 1e148 <__flatcc_gen_sort@@Base+0x25a8>
   1e754:	mov	r3, #260	; 0x104
   1e758:	ldr	r1, [sp, #92]	; 0x5c
   1e75c:	ldr	r0, [pc, #-1560]	; 1e14c <__flatcc_gen_sort@@Base+0x25ac>
   1e760:	ldr	r4, [pc, #-1560]	; 1e150 <__flatcc_gen_sort@@Base+0x25b0>
   1e764:	ldr	ip, [r1, r2]
   1e768:	add	r0, pc, r0
   1e76c:	ldr	r1, [pc, #-1568]	; 1e154 <__flatcc_gen_sort@@Base+0x25b4>
   1e770:	add	r4, pc, r4
   1e774:	str	r0, [sp]
   1e778:	mov	r2, r4
   1e77c:	ldr	r0, [ip]
   1e780:	add	r1, pc, r1
   1e784:	bl	14064 <fprintf@plt>
   1e788:	ldr	r3, [pc, #-1592]	; 1e158 <__flatcc_gen_sort@@Base+0x25b8>
   1e78c:	mov	r1, r4
   1e790:	mov	r2, #260	; 0x104
   1e794:	ldr	r0, [pc, #-1600]	; 1e15c <__flatcc_gen_sort@@Base+0x25bc>
   1e798:	add	r3, pc, r3
   1e79c:	add	r3, r3, #128	; 0x80
   1e7a0:	add	r0, pc, r0
   1e7a4:	bl	14118 <__assert_fail@plt>
   1e7a8:	ldr	r3, [pc, #3976]	; 1f738 <__flatcc_gen_sort@@Base+0x3b98>
   1e7ac:	mov	r2, #220	; 0xdc
   1e7b0:	mov	r1, #0
   1e7b4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1e7b8:	mov	r4, r0
   1e7bc:	strd	r6, [sp, #8]
   1e7c0:	strd	r8, [sp, #16]
   1e7c4:	strd	sl, [sp, #24]
   1e7c8:	str	lr, [sp, #32]
   1e7cc:	sub	sp, sp, #508	; 0x1fc
   1e7d0:	add	r3, pc, r3
   1e7d4:	add	fp, sp, #284	; 0x11c
   1e7d8:	mov	r0, fp
   1e7dc:	str	r3, [sp, #60]	; 0x3c
   1e7e0:	bl	1407c <memset@plt>
   1e7e4:	ldr	r3, [r4, #208]	; 0xd0
   1e7e8:	ldr	r5, [r3, #40]	; 0x28
   1e7ec:	cmp	r5, #0
   1e7f0:	beq	1f418 <__flatcc_gen_sort@@Base+0x3878>
   1e7f4:	ldr	r6, [pc, #3904]	; 1f73c <__flatcc_gen_sort@@Base+0x3b9c>
   1e7f8:	mov	r2, #0
   1e7fc:	add	r6, pc, r6
   1e800:	ldrh	r3, [r5, #8]
   1e804:	cmp	r3, #4
   1e808:	bne	1e838 <__flatcc_gen_sort@@Base+0x2c98>
   1e80c:	mov	r2, fp
   1e810:	mov	r1, r5
   1e814:	ldr	r0, [r5, #12]
   1e818:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   1e81c:	mov	r2, r4
   1e820:	mov	r3, fp
   1e824:	stm	sp, {r4, fp}
   1e828:	mov	r1, r6
   1e82c:	ldr	r0, [r4, #204]	; 0xcc
   1e830:	bl	14064 <fprintf@plt>
   1e834:	mov	r2, #1
   1e838:	ldr	r5, [r5]
   1e83c:	cmp	r5, #0
   1e840:	bne	1e800 <__flatcc_gen_sort@@Base+0x2c60>
   1e844:	cmp	r2, #0
   1e848:	beq	1e858 <__flatcc_gen_sort@@Base+0x2cb8>
   1e84c:	mov	r0, #10
   1e850:	ldr	r1, [r4, #204]	; 0xcc
   1e854:	bl	140c4 <fputc@plt>
   1e858:	ldr	r3, [r4, #208]	; 0xd0
   1e85c:	ldr	r5, [r3, #40]	; 0x28
   1e860:	cmp	r5, #0
   1e864:	beq	1f418 <__flatcc_gen_sort@@Base+0x3878>
   1e868:	ldr	r3, [pc, #3792]	; 1f740 <__flatcc_gen_sort@@Base+0x3ba0>
   1e86c:	mov	r9, #0
   1e870:	ldr	sl, [pc, #3788]	; 1f744 <__flatcc_gen_sort@@Base+0x3ba4>
   1e874:	ldr	r8, [pc, #3788]	; 1f748 <__flatcc_gen_sort@@Base+0x3ba8>
   1e878:	add	r3, pc, r3
   1e87c:	str	r3, [sp, #32]
   1e880:	add	sl, pc, sl
   1e884:	ldr	r3, [pc, #3776]	; 1f74c <__flatcc_gen_sort@@Base+0x3bac>
   1e888:	add	r8, pc, r8
   1e88c:	add	r3, pc, r3
   1e890:	str	r3, [sp, #40]	; 0x28
   1e894:	ldrh	r6, [r5, #8]
   1e898:	cmp	r6, #0
   1e89c:	bne	1ea04 <__flatcc_gen_sort@@Base+0x2e64>
   1e8a0:	mov	r2, #220	; 0xdc
   1e8a4:	mov	r1, r6
   1e8a8:	mov	r0, fp
   1e8ac:	bl	1407c <memset@plt>
   1e8b0:	ldr	r3, [r5, #20]
   1e8b4:	cmp	r3, #0
   1e8b8:	beq	1f560 <__flatcc_gen_sort@@Base+0x39c0>
   1e8bc:	ldrh	r2, [r3, #72]	; 0x48
   1e8c0:	ldr	r3, [r3]
   1e8c4:	tst	r2, #4
   1e8c8:	addeq	r6, r6, #1
   1e8cc:	cmp	r3, #0
   1e8d0:	bne	1e8bc <__flatcc_gen_sort@@Base+0x2d1c>
   1e8d4:	mov	r2, fp
   1e8d8:	mov	r1, r5
   1e8dc:	ldr	r0, [r5, #12]
   1e8e0:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   1e8e4:	mov	r3, fp
   1e8e8:	mov	r2, r4
   1e8ec:	ldr	r1, [sp, #32]
   1e8f0:	ldr	r0, [r4, #204]	; 0xcc
   1e8f4:	bl	14064 <fprintf@plt>
   1e8f8:	ldr	r7, [r5, #20]
   1e8fc:	cmp	r7, #0
   1e900:	beq	1f3d4 <__flatcc_gen_sort@@Base+0x3834>
   1e904:	ldr	r3, [pc, #3652]	; 1f750 <__flatcc_gen_sort@@Base+0x3bb0>
   1e908:	mov	r9, #0
   1e90c:	ldr	r0, [r4, #204]	; 0xcc
   1e910:	add	r3, pc, r3
   1e914:	str	r3, [sp, #36]	; 0x24
   1e918:	b	1e970 <__flatcc_gen_sort@@Base+0x2dd0>
   1e91c:	cmp	r6, #0
   1e920:	beq	1e950 <__flatcc_gen_sort@@Base+0x2db0>
   1e924:	tst	r9, #3
   1e928:	bne	1e938 <__flatcc_gen_sort@@Base+0x2d98>
   1e92c:	sub	r3, r6, r9
   1e930:	cmp	r3, #2
   1e934:	bgt	1f528 <__flatcc_gen_sort@@Base+0x3988>
   1e938:	mov	r3, r0
   1e93c:	mov	r2, #2
   1e940:	ldr	r0, [sp, #40]	; 0x28
   1e944:	mov	r1, #1
   1e948:	bl	13fec <fwrite@plt>
   1e94c:	ldr	r0, [r4, #204]	; 0xcc
   1e950:	mov	r1, r8
   1e954:	add	r9, r9, #1
   1e958:	ldr	r2, [r7, #96]	; 0x60
   1e95c:	bl	14064 <fprintf@plt>
   1e960:	ldr	r0, [r4, #204]	; 0xcc
   1e964:	ldr	r7, [r7]
   1e968:	cmp	r7, #0
   1e96c:	beq	1e9a0 <__flatcc_gen_sort@@Base+0x2e00>
   1e970:	ldrh	r3, [r7, #72]	; 0x48
   1e974:	tst	r3, #4
   1e978:	bne	1e964 <__flatcc_gen_sort@@Base+0x2dc4>
   1e97c:	tst	r3, #256	; 0x100
   1e980:	beq	1e964 <__flatcc_gen_sort@@Base+0x2dc4>
   1e984:	cmp	r9, #0
   1e988:	bne	1e91c <__flatcc_gen_sort@@Base+0x2d7c>
   1e98c:	mov	r1, r0
   1e990:	mov	r0, #32
   1e994:	bl	140c4 <fputc@plt>
   1e998:	ldr	r0, [r4, #204]	; 0xcc
   1e99c:	b	1e950 <__flatcc_gen_sort@@Base+0x2db0>
   1e9a0:	cmp	r9, #0
   1e9a4:	beq	1f3d8 <__flatcc_gen_sort@@Base+0x3838>
   1e9a8:	mov	r3, r0
   1e9ac:	ldr	r0, [pc, #3488]	; 1f754 <__flatcc_gen_sort@@Base+0x3bb4>
   1e9b0:	mov	r2, #7
   1e9b4:	mov	r1, #1
   1e9b8:	add	r0, pc, r0
   1e9bc:	bl	13fec <fwrite@plt>
   1e9c0:	mov	r2, #220	; 0xdc
   1e9c4:	mov	r1, #0
   1e9c8:	mov	r0, fp
   1e9cc:	mov	r9, #1
   1e9d0:	bl	1407c <memset@plt>
   1e9d4:	mov	r2, fp
   1e9d8:	mov	r1, r5
   1e9dc:	ldr	r0, [r5, #12]
   1e9e0:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   1e9e4:	ldrd	r6, [r5, #96]	; 0x60
   1e9e8:	mov	r3, r4
   1e9ec:	mov	r2, r4
   1e9f0:	mov	r1, sl
   1e9f4:	str	fp, [sp]
   1e9f8:	ldr	r0, [r4, #204]	; 0xcc
   1e9fc:	strd	r6, [sp, #8]
   1ea00:	bl	14064 <fprintf@plt>
   1ea04:	ldr	r5, [r5]
   1ea08:	cmp	r5, #0
   1ea0c:	bne	1e894 <__flatcc_gen_sort@@Base+0x2cf4>
   1ea10:	ldr	r3, [r4, #208]	; 0xd0
   1ea14:	str	r9, [sp, #48]	; 0x30
   1ea18:	ldr	sl, [r3, #40]	; 0x28
   1ea1c:	cmp	sl, #0
   1ea20:	beq	1f40c <__flatcc_gen_sort@@Base+0x386c>
   1ea24:	ldr	r3, [pc, #3372]	; 1f758 <__flatcc_gen_sort@@Base+0x3bb8>
   1ea28:	add	r3, pc, r3
   1ea2c:	str	r3, [sp, #52]	; 0x34
   1ea30:	ldr	r3, [pc, #3364]	; 1f75c <__flatcc_gen_sort@@Base+0x3bbc>
   1ea34:	add	r3, pc, r3
   1ea38:	str	r3, [sp, #36]	; 0x24
   1ea3c:	ldr	r3, [pc, #3356]	; 1f760 <__flatcc_gen_sort@@Base+0x3bc0>
   1ea40:	add	r3, pc, r3
   1ea44:	str	r3, [sp, #40]	; 0x28
   1ea48:	ldr	r3, [pc, #3348]	; 1f764 <__flatcc_gen_sort@@Base+0x3bc4>
   1ea4c:	add	r3, pc, r3
   1ea50:	str	r3, [sp, #56]	; 0x38
   1ea54:	ldrh	r5, [sl, #8]
   1ea58:	cmp	r5, #0
   1ea5c:	bne	1f040 <__flatcc_gen_sort@@Base+0x34a0>
   1ea60:	add	r8, sp, #64	; 0x40
   1ea64:	mov	r2, #220	; 0xdc
   1ea68:	mov	r1, r5
   1ea6c:	mov	r0, r8
   1ea70:	bl	1407c <memset@plt>
   1ea74:	mov	r2, r8
   1ea78:	mov	r1, sl
   1ea7c:	ldr	r0, [sl, #12]
   1ea80:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   1ea84:	ldr	r3, [sl, #20]
   1ea88:	cmp	r3, #0
   1ea8c:	beq	1f568 <__flatcc_gen_sort@@Base+0x39c8>
   1ea90:	ldrh	r2, [r3, #72]	; 0x48
   1ea94:	ldr	r3, [r3]
   1ea98:	tst	r2, #4
   1ea9c:	addeq	r5, r5, #1
   1eaa0:	cmp	r3, #0
   1eaa4:	bne	1ea90 <__flatcc_gen_sort@@Base+0x2ef0>
   1eaa8:	mov	r2, r8
   1eaac:	ldr	r1, [sp, #52]	; 0x34
   1eab0:	ldr	r0, [r4, #204]	; 0xcc
   1eab4:	bl	14064 <fprintf@plt>
   1eab8:	mov	r2, #220	; 0xdc
   1eabc:	mov	r1, #0
   1eac0:	mov	r0, fp
   1eac4:	bl	1407c <memset@plt>
   1eac8:	ldr	r6, [sl, #20]
   1eacc:	cmp	r6, #0
   1ead0:	beq	1ec18 <__flatcc_gen_sort@@Base+0x3078>
   1ead4:	ldr	r3, [sp, #56]	; 0x38
   1ead8:	mov	r2, #0
   1eadc:	str	r3, [sp, #32]
   1eae0:	ldrh	r3, [r6, #72]	; 0x48
   1eae4:	str	r8, [sp, #44]	; 0x2c
   1eae8:	tst	r3, #4
   1eaec:	bne	1ec04 <__flatcc_gen_sort@@Base+0x3064>
   1eaf0:	cmp	r5, #0
   1eaf4:	add	r7, r2, #1
   1eaf8:	beq	1eb28 <__flatcc_gen_sort@@Base+0x2f88>
   1eafc:	cmp	r2, #0
   1eb00:	ldr	r3, [r4, #204]	; 0xcc
   1eb04:	bne	1efe8 <__flatcc_gen_sort@@Base+0x3448>
   1eb08:	cmp	r5, #4
   1eb0c:	ble	1efd0 <__flatcc_gen_sort@@Base+0x3430>
   1eb10:	ldr	r2, [pc, #3152]	; 1f768 <__flatcc_gen_sort@@Base+0x3bc8>
   1eb14:	mov	r0, r3
   1eb18:	ldr	r1, [pc, #3148]	; 1f76c <__flatcc_gen_sort@@Base+0x3bcc>
   1eb1c:	add	r2, pc, r2
   1eb20:	add	r1, pc, r1
   1eb24:	bl	14064 <fprintf@plt>
   1eb28:	ldrh	r3, [r6, #24]
   1eb2c:	sub	r3, r3, #7
   1eb30:	cmp	r3, #8
   1eb34:	addls	pc, pc, r3, lsl #2
   1eb38:	b	1f580 <__flatcc_gen_sort@@Base+0x39e0>
   1eb3c:	b	1ed0c <__flatcc_gen_sort@@Base+0x316c>
   1eb40:	b	1ed4c <__flatcc_gen_sort@@Base+0x31ac>
   1eb44:	b	1ecf0 <__flatcc_gen_sort@@Base+0x3150>
   1eb48:	b	1ebd0 <__flatcc_gen_sort@@Base+0x3030>
   1eb4c:	b	1f580 <__flatcc_gen_sort@@Base+0x39e0>
   1eb50:	b	1f580 <__flatcc_gen_sort@@Base+0x39e0>
   1eb54:	b	1f580 <__flatcc_gen_sort@@Base+0x39e0>
   1eb58:	b	1eb98 <__flatcc_gen_sort@@Base+0x2ff8>
   1eb5c:	b	1eb60 <__flatcc_gen_sort@@Base+0x2fc0>
   1eb60:	ldr	r1, [r6, #16]
   1eb64:	mov	r2, fp
   1eb68:	ldr	r0, [r1, #12]
   1eb6c:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   1eb70:	ldr	r3, [r6, #16]
   1eb74:	ldrh	r3, [r3, #8]
   1eb78:	cmp	r3, #4
   1eb7c:	addls	pc, pc, r3, lsl #2
   1eb80:	b	1f688 <__flatcc_gen_sort@@Base+0x3ae8>
   1eb84:	b	1edb4 <__flatcc_gen_sort@@Base+0x3214>
   1eb88:	b	1edb4 <__flatcc_gen_sort@@Base+0x3214>
   1eb8c:	b	1f688 <__flatcc_gen_sort@@Base+0x3ae8>
   1eb90:	b	1edb4 <__flatcc_gen_sort@@Base+0x3214>
   1eb94:	b	1ed94 <__flatcc_gen_sort@@Base+0x31f4>
   1eb98:	ldr	r1, [r6, #16]
   1eb9c:	mov	r2, fp
   1eba0:	ldr	r0, [r1, #12]
   1eba4:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   1eba8:	ldr	r3, [r6, #16]
   1ebac:	ldrh	r3, [r3, #8]
   1ebb0:	cmp	r3, #4
   1ebb4:	addls	pc, pc, r3, lsl #2
   1ebb8:	b	1f630 <__flatcc_gen_sort@@Base+0x3a90>
   1ebbc:	b	1ee34 <__flatcc_gen_sort@@Base+0x3294>
   1ebc0:	b	1ee14 <__flatcc_gen_sort@@Base+0x3274>
   1ebc4:	b	1f630 <__flatcc_gen_sort@@Base+0x3a90>
   1ebc8:	b	1edf4 <__flatcc_gen_sort@@Base+0x3254>
   1ebcc:	b	1edd4 <__flatcc_gen_sort@@Base+0x3234>
   1ebd0:	ldrd	r8, [r6, #96]	; 0x60
   1ebd4:	mov	r2, r4
   1ebd8:	ldr	r1, [sp, #40]	; 0x28
   1ebdc:	ldr	r0, [r4, #204]	; 0xcc
   1ebe0:	strd	r8, [sp]
   1ebe4:	bl	14064 <fprintf@plt>
   1ebe8:	ldr	r6, [r6]
   1ebec:	cmp	r6, #0
   1ebf0:	beq	1ec14 <__flatcc_gen_sort@@Base+0x3074>
   1ebf4:	ldrh	r3, [r6, #72]	; 0x48
   1ebf8:	mov	r2, r7
   1ebfc:	tst	r3, #4
   1ec00:	beq	1eaf0 <__flatcc_gen_sort@@Base+0x2f50>
   1ec04:	ldr	r6, [r6]
   1ec08:	mov	r7, r2
   1ec0c:	cmp	r6, #0
   1ec10:	bne	1ebf4 <__flatcc_gen_sort@@Base+0x3054>
   1ec14:	ldr	r8, [sp, #44]	; 0x2c
   1ec18:	mov	r2, r8
   1ec1c:	ldr	r1, [pc, #2892]	; 1f770 <__flatcc_gen_sort@@Base+0x3bd0>
   1ec20:	ldr	r0, [r4, #204]	; 0xcc
   1ec24:	add	r1, pc, r1
   1ec28:	bl	14064 <fprintf@plt>
   1ec2c:	ldr	r6, [sl, #20]
   1ec30:	cmp	r6, #0
   1ec34:	beq	1f014 <__flatcc_gen_sort@@Base+0x3474>
   1ec38:	ldr	r3, [pc, #2868]	; 1f774 <__flatcc_gen_sort@@Base+0x3bd4>
   1ec3c:	mov	r7, #0
   1ec40:	ldr	r9, [pc, #2864]	; 1f778 <__flatcc_gen_sort@@Base+0x3bd8>
   1ec44:	ldr	r0, [r4, #204]	; 0xcc
   1ec48:	add	r3, pc, r3
   1ec4c:	str	r3, [sp, #32]
   1ec50:	add	r9, pc, r9
   1ec54:	ldr	r3, [pc, #2848]	; 1f77c <__flatcc_gen_sort@@Base+0x3bdc>
   1ec58:	add	r3, pc, r3
   1ec5c:	str	r3, [sp, #44]	; 0x2c
   1ec60:	b	1eca4 <__flatcc_gen_sort@@Base+0x3104>
   1ec64:	cmp	r5, #4
   1ec68:	ble	1f3b4 <__flatcc_gen_sort@@Base+0x3814>
   1ec6c:	ldr	r2, [pc, #2828]	; 1f780 <__flatcc_gen_sort@@Base+0x3be0>
   1ec70:	ldr	r1, [pc, #2828]	; 1f784 <__flatcc_gen_sort@@Base+0x3be4>
   1ec74:	add	r2, pc, r2
   1ec78:	add	r1, pc, r1
   1ec7c:	bl	14064 <fprintf@plt>
   1ec80:	ldr	r0, [r4, #204]	; 0xcc
   1ec84:	mov	r1, r9
   1ec88:	add	r7, r7, #1
   1ec8c:	ldrd	r2, [r6, #96]	; 0x60
   1ec90:	bl	14064 <fprintf@plt>
   1ec94:	ldr	r0, [r4, #204]	; 0xcc
   1ec98:	ldr	r6, [r6]
   1ec9c:	cmp	r6, #0
   1eca0:	beq	1f018 <__flatcc_gen_sort@@Base+0x3478>
   1eca4:	ldrh	r3, [r6, #72]	; 0x48
   1eca8:	tst	r3, #4
   1ecac:	bne	1ec98 <__flatcc_gen_sort@@Base+0x30f8>
   1ecb0:	cmp	r5, #0
   1ecb4:	beq	1ec84 <__flatcc_gen_sort@@Base+0x30e4>
   1ecb8:	cmp	r7, #0
   1ecbc:	beq	1ec64 <__flatcc_gen_sort@@Base+0x30c4>
   1ecc0:	tst	r7, #3
   1ecc4:	bne	1ecd4 <__flatcc_gen_sort@@Base+0x3134>
   1ecc8:	sub	r3, r5, r7
   1eccc:	cmp	r3, #2
   1ecd0:	bgt	1f3f4 <__flatcc_gen_sort@@Base+0x3854>
   1ecd4:	mov	r3, r0
   1ecd8:	mov	r2, #2
   1ecdc:	ldr	r0, [sp, #32]
   1ece0:	mov	r1, #1
   1ece4:	bl	13fec <fwrite@plt>
   1ece8:	ldr	r0, [r4, #204]	; 0xcc
   1ecec:	b	1ec84 <__flatcc_gen_sort@@Base+0x30e4>
   1ecf0:	ldrd	r8, [r6, #96]	; 0x60
   1ecf4:	mov	r2, r4
   1ecf8:	ldr	r1, [sp, #36]	; 0x24
   1ecfc:	ldr	r0, [r4, #204]	; 0xcc
   1ed00:	strd	r8, [sp]
   1ed04:	bl	14064 <fprintf@plt>
   1ed08:	b	1ebe8 <__flatcc_gen_sort@@Base+0x3048>
   1ed0c:	ldr	r3, [r6, #16]
   1ed10:	sub	r3, r3, #1
   1ed14:	cmp	r3, #10
   1ed18:	addls	pc, pc, r3, lsl #2
   1ed1c:	b	1f6e0 <__flatcc_gen_sort@@Base+0x3b40>
   1ed20:	b	1eee4 <__flatcc_gen_sort@@Base+0x3344>
   1ed24:	b	1eed8 <__flatcc_gen_sort@@Base+0x3338>
   1ed28:	b	1eecc <__flatcc_gen_sort@@Base+0x332c>
   1ed2c:	b	1eec0 <__flatcc_gen_sort@@Base+0x3320>
   1ed30:	b	1eeb4 <__flatcc_gen_sort@@Base+0x3314>
   1ed34:	b	1eea8 <__flatcc_gen_sort@@Base+0x3308>
   1ed38:	b	1ee9c <__flatcc_gen_sort@@Base+0x32fc>
   1ed3c:	b	1ee90 <__flatcc_gen_sort@@Base+0x32f0>
   1ed40:	b	1ee84 <__flatcc_gen_sort@@Base+0x32e4>
   1ed44:	b	1ee78 <__flatcc_gen_sort@@Base+0x32d8>
   1ed48:	b	1ee54 <__flatcc_gen_sort@@Base+0x32b4>
   1ed4c:	ldr	r3, [r6, #16]
   1ed50:	cmp	r3, #5
   1ed54:	beq	1f3a4 <__flatcc_gen_sort@@Base+0x3804>
   1ed58:	sub	r3, r3, #1
   1ed5c:	cmp	r3, #10
   1ed60:	addls	pc, pc, r3, lsl #2
   1ed64:	b	1f5d8 <__flatcc_gen_sort@@Base+0x3a38>
   1ed68:	b	1efbc <__flatcc_gen_sort@@Base+0x341c>
   1ed6c:	b	1efa8 <__flatcc_gen_sort@@Base+0x3408>
   1ed70:	b	1ef94 <__flatcc_gen_sort@@Base+0x33f4>
   1ed74:	b	1ef80 <__flatcc_gen_sort@@Base+0x33e0>
   1ed78:	b	1f5d8 <__flatcc_gen_sort@@Base+0x3a38>
   1ed7c:	b	1ef58 <__flatcc_gen_sort@@Base+0x33b8>
   1ed80:	b	1ef44 <__flatcc_gen_sort@@Base+0x33a4>
   1ed84:	b	1ef30 <__flatcc_gen_sort@@Base+0x3390>
   1ed88:	b	1ef1c <__flatcc_gen_sort@@Base+0x337c>
   1ed8c:	b	1eef0 <__flatcc_gen_sort@@Base+0x3350>
   1ed90:	b	1ef6c <__flatcc_gen_sort@@Base+0x33cc>
   1ed94:	ldr	r1, [pc, #2540]	; 1f788 <__flatcc_gen_sort@@Base+0x3be8>
   1ed98:	mov	r2, fp
   1ed9c:	ldrd	r8, [r6, #96]	; 0x60
   1eda0:	add	r1, pc, r1
   1eda4:	strd	r8, [sp]
   1eda8:	ldr	r0, [r4, #204]	; 0xcc
   1edac:	bl	14064 <fprintf@plt>
   1edb0:	b	1ebe8 <__flatcc_gen_sort@@Base+0x3048>
   1edb4:	ldr	r1, [pc, #2512]	; 1f78c <__flatcc_gen_sort@@Base+0x3bec>
   1edb8:	mov	r2, fp
   1edbc:	ldrd	r8, [r6, #96]	; 0x60
   1edc0:	add	r1, pc, r1
   1edc4:	strd	r8, [sp]
   1edc8:	ldr	r0, [r4, #204]	; 0xcc
   1edcc:	bl	14064 <fprintf@plt>
   1edd0:	b	1ebe8 <__flatcc_gen_sort@@Base+0x3048>
   1edd4:	ldr	r1, [pc, #2484]	; 1f790 <__flatcc_gen_sort@@Base+0x3bf0>
   1edd8:	mov	r2, fp
   1eddc:	ldrd	r8, [r6, #96]	; 0x60
   1ede0:	add	r1, pc, r1
   1ede4:	strd	r8, [sp]
   1ede8:	ldr	r0, [r4, #204]	; 0xcc
   1edec:	bl	14064 <fprintf@plt>
   1edf0:	b	1ebe8 <__flatcc_gen_sort@@Base+0x3048>
   1edf4:	ldr	r1, [pc, #2456]	; 1f794 <__flatcc_gen_sort@@Base+0x3bf4>
   1edf8:	mov	r2, fp
   1edfc:	ldrd	r8, [r6, #96]	; 0x60
   1ee00:	add	r1, pc, r1
   1ee04:	strd	r8, [sp]
   1ee08:	ldr	r0, [r4, #204]	; 0xcc
   1ee0c:	bl	14064 <fprintf@plt>
   1ee10:	b	1ebe8 <__flatcc_gen_sort@@Base+0x3048>
   1ee14:	ldr	r1, [pc, #2428]	; 1f798 <__flatcc_gen_sort@@Base+0x3bf8>
   1ee18:	mov	r2, fp
   1ee1c:	ldrd	r8, [r6, #96]	; 0x60
   1ee20:	add	r1, pc, r1
   1ee24:	strd	r8, [sp]
   1ee28:	ldr	r0, [r4, #204]	; 0xcc
   1ee2c:	bl	14064 <fprintf@plt>
   1ee30:	b	1ebe8 <__flatcc_gen_sort@@Base+0x3048>
   1ee34:	ldr	r1, [pc, #2400]	; 1f79c <__flatcc_gen_sort@@Base+0x3bfc>
   1ee38:	mov	r2, fp
   1ee3c:	ldrd	r8, [r6, #96]	; 0x60
   1ee40:	add	r1, pc, r1
   1ee44:	strd	r8, [sp]
   1ee48:	ldr	r0, [r4, #204]	; 0xcc
   1ee4c:	bl	14064 <fprintf@plt>
   1ee50:	b	1ebe8 <__flatcc_gen_sort@@Base+0x3048>
   1ee54:	ldr	r3, [pc, #2372]	; 1f7a0 <__flatcc_gen_sort@@Base+0x3c00>
   1ee58:	add	r3, pc, r3
   1ee5c:	ldrd	r8, [r6, #96]	; 0x60
   1ee60:	mov	r2, r4
   1ee64:	ldr	r1, [sp, #32]
   1ee68:	ldr	r0, [r4, #204]	; 0xcc
   1ee6c:	strd	r8, [sp]
   1ee70:	bl	14064 <fprintf@plt>
   1ee74:	b	1ebe8 <__flatcc_gen_sort@@Base+0x3048>
   1ee78:	ldr	r3, [pc, #2340]	; 1f7a4 <__flatcc_gen_sort@@Base+0x3c04>
   1ee7c:	add	r3, pc, r3
   1ee80:	b	1ee5c <__flatcc_gen_sort@@Base+0x32bc>
   1ee84:	ldr	r3, [pc, #2332]	; 1f7a8 <__flatcc_gen_sort@@Base+0x3c08>
   1ee88:	add	r3, pc, r3
   1ee8c:	b	1ee5c <__flatcc_gen_sort@@Base+0x32bc>
   1ee90:	ldr	r3, [pc, #2324]	; 1f7ac <__flatcc_gen_sort@@Base+0x3c0c>
   1ee94:	add	r3, pc, r3
   1ee98:	b	1ee5c <__flatcc_gen_sort@@Base+0x32bc>
   1ee9c:	ldr	r3, [pc, #2316]	; 1f7b0 <__flatcc_gen_sort@@Base+0x3c10>
   1eea0:	add	r3, pc, r3
   1eea4:	b	1ee5c <__flatcc_gen_sort@@Base+0x32bc>
   1eea8:	ldr	r3, [pc, #2308]	; 1f7b4 <__flatcc_gen_sort@@Base+0x3c14>
   1eeac:	add	r3, pc, r3
   1eeb0:	b	1ee5c <__flatcc_gen_sort@@Base+0x32bc>
   1eeb4:	ldr	r3, [pc, #2300]	; 1f7b8 <__flatcc_gen_sort@@Base+0x3c18>
   1eeb8:	add	r3, pc, r3
   1eebc:	b	1ee5c <__flatcc_gen_sort@@Base+0x32bc>
   1eec0:	ldr	r3, [pc, #2292]	; 1f7bc <__flatcc_gen_sort@@Base+0x3c1c>
   1eec4:	add	r3, pc, r3
   1eec8:	b	1ee5c <__flatcc_gen_sort@@Base+0x32bc>
   1eecc:	ldr	r3, [pc, #2284]	; 1f7c0 <__flatcc_gen_sort@@Base+0x3c20>
   1eed0:	add	r3, pc, r3
   1eed4:	b	1ee5c <__flatcc_gen_sort@@Base+0x32bc>
   1eed8:	ldr	r3, [pc, #2276]	; 1f7c4 <__flatcc_gen_sort@@Base+0x3c24>
   1eedc:	add	r3, pc, r3
   1eee0:	b	1ee5c <__flatcc_gen_sort@@Base+0x32bc>
   1eee4:	ldr	r3, [pc, #2268]	; 1f7c8 <__flatcc_gen_sort@@Base+0x3c28>
   1eee8:	add	r3, pc, r3
   1eeec:	b	1ee5c <__flatcc_gen_sort@@Base+0x32bc>
   1eef0:	ldr	r2, [pc, #2260]	; 1f7cc <__flatcc_gen_sort@@Base+0x3c2c>
   1eef4:	ldr	r3, [pc, #2260]	; 1f7d0 <__flatcc_gen_sort@@Base+0x3c30>
   1eef8:	add	r2, pc, r2
   1eefc:	add	r3, pc, r3
   1ef00:	ldr	r1, [pc, #2252]	; 1f7d4 <__flatcc_gen_sort@@Base+0x3c34>
   1ef04:	ldrd	r8, [r6, #96]	; 0x60
   1ef08:	add	r1, pc, r1
   1ef0c:	strd	r8, [sp]
   1ef10:	ldr	r0, [r4, #204]	; 0xcc
   1ef14:	bl	14064 <fprintf@plt>
   1ef18:	b	1ebe8 <__flatcc_gen_sort@@Base+0x3048>
   1ef1c:	ldr	r2, [pc, #2228]	; 1f7d8 <__flatcc_gen_sort@@Base+0x3c38>
   1ef20:	ldr	r3, [pc, #2228]	; 1f7dc <__flatcc_gen_sort@@Base+0x3c3c>
   1ef24:	add	r2, pc, r2
   1ef28:	add	r3, pc, r3
   1ef2c:	b	1ef00 <__flatcc_gen_sort@@Base+0x3360>
   1ef30:	ldr	r2, [pc, #2216]	; 1f7e0 <__flatcc_gen_sort@@Base+0x3c40>
   1ef34:	ldr	r3, [pc, #2216]	; 1f7e4 <__flatcc_gen_sort@@Base+0x3c44>
   1ef38:	add	r2, pc, r2
   1ef3c:	add	r3, pc, r3
   1ef40:	b	1ef00 <__flatcc_gen_sort@@Base+0x3360>
   1ef44:	ldr	r2, [pc, #2204]	; 1f7e8 <__flatcc_gen_sort@@Base+0x3c48>
   1ef48:	ldr	r3, [pc, #2204]	; 1f7ec <__flatcc_gen_sort@@Base+0x3c4c>
   1ef4c:	add	r2, pc, r2
   1ef50:	add	r3, pc, r3
   1ef54:	b	1ef00 <__flatcc_gen_sort@@Base+0x3360>
   1ef58:	ldr	r2, [pc, #2192]	; 1f7f0 <__flatcc_gen_sort@@Base+0x3c50>
   1ef5c:	ldr	r3, [pc, #2192]	; 1f7f4 <__flatcc_gen_sort@@Base+0x3c54>
   1ef60:	add	r2, pc, r2
   1ef64:	add	r3, pc, r3
   1ef68:	b	1ef00 <__flatcc_gen_sort@@Base+0x3360>
   1ef6c:	ldr	r2, [pc, #2180]	; 1f7f8 <__flatcc_gen_sort@@Base+0x3c58>
   1ef70:	ldr	r3, [pc, #2180]	; 1f7fc <__flatcc_gen_sort@@Base+0x3c5c>
   1ef74:	add	r2, pc, r2
   1ef78:	add	r3, pc, r3
   1ef7c:	b	1ef00 <__flatcc_gen_sort@@Base+0x3360>
   1ef80:	ldr	r2, [pc, #2168]	; 1f800 <__flatcc_gen_sort@@Base+0x3c60>
   1ef84:	ldr	r3, [pc, #2168]	; 1f804 <__flatcc_gen_sort@@Base+0x3c64>
   1ef88:	add	r2, pc, r2
   1ef8c:	add	r3, pc, r3
   1ef90:	b	1ef00 <__flatcc_gen_sort@@Base+0x3360>
   1ef94:	ldr	r2, [pc, #2156]	; 1f808 <__flatcc_gen_sort@@Base+0x3c68>
   1ef98:	ldr	r3, [pc, #2156]	; 1f80c <__flatcc_gen_sort@@Base+0x3c6c>
   1ef9c:	add	r2, pc, r2
   1efa0:	add	r3, pc, r3
   1efa4:	b	1ef00 <__flatcc_gen_sort@@Base+0x3360>
   1efa8:	ldr	r2, [pc, #2144]	; 1f810 <__flatcc_gen_sort@@Base+0x3c70>
   1efac:	ldr	r3, [pc, #2144]	; 1f814 <__flatcc_gen_sort@@Base+0x3c74>
   1efb0:	add	r2, pc, r2
   1efb4:	add	r3, pc, r3
   1efb8:	b	1ef00 <__flatcc_gen_sort@@Base+0x3360>
   1efbc:	ldr	r2, [pc, #2132]	; 1f818 <__flatcc_gen_sort@@Base+0x3c78>
   1efc0:	ldr	r3, [pc, #2132]	; 1f81c <__flatcc_gen_sort@@Base+0x3c7c>
   1efc4:	add	r2, pc, r2
   1efc8:	add	r3, pc, r3
   1efcc:	b	1ef00 <__flatcc_gen_sort@@Base+0x3360>
   1efd0:	ldr	r0, [pc, #2120]	; 1f820 <__flatcc_gen_sort@@Base+0x3c80>
   1efd4:	mov	r2, #2
   1efd8:	mov	r1, #1
   1efdc:	add	r0, pc, r0
   1efe0:	bl	13fec <fwrite@plt>
   1efe4:	b	1eb28 <__flatcc_gen_sort@@Base+0x2f88>
   1efe8:	tst	r2, #3
   1efec:	bne	1effc <__flatcc_gen_sort@@Base+0x345c>
   1eff0:	sub	r2, r5, r2
   1eff4:	cmp	r2, #2
   1eff8:	bgt	1f388 <__flatcc_gen_sort@@Base+0x37e8>
   1effc:	ldr	r0, [pc, #2080]	; 1f824 <__flatcc_gen_sort@@Base+0x3c84>
   1f000:	mov	r2, #2
   1f004:	mov	r1, #1
   1f008:	add	r0, pc, r0
   1f00c:	bl	13fec <fwrite@plt>
   1f010:	b	1eb28 <__flatcc_gen_sort@@Base+0x2f88>
   1f014:	ldr	r0, [r4, #204]	; 0xcc
   1f018:	mov	r1, r0
   1f01c:	mov	r0, #10
   1f020:	bl	140c4 <fputc@plt>
   1f024:	ldr	r1, [pc, #2044]	; 1f828 <__flatcc_gen_sort@@Base+0x3c88>
   1f028:	mov	r3, r8
   1f02c:	mov	r2, r8
   1f030:	stm	sp, {r4, r8}
   1f034:	ldr	r0, [r4, #204]	; 0xcc
   1f038:	add	r1, pc, r1
   1f03c:	bl	14064 <fprintf@plt>
   1f040:	ldr	sl, [sl]
   1f044:	cmp	sl, #0
   1f048:	bne	1ea54 <__flatcc_gen_sort@@Base+0x2eb4>
   1f04c:	ldr	r3, [sp, #48]	; 0x30
   1f050:	cmp	r3, #0
   1f054:	bne	1f570 <__flatcc_gen_sort@@Base+0x39d0>
   1f058:	ldr	r3, [r4, #208]	; 0xd0
   1f05c:	ldr	r7, [r3, #40]	; 0x28
   1f060:	cmp	r7, #0
   1f064:	beq	1f418 <__flatcc_gen_sort@@Base+0x3878>
   1f068:	ldr	r3, [pc, #1980]	; 1f82c <__flatcc_gen_sort@@Base+0x3c8c>
   1f06c:	mov	r2, #0
   1f070:	ldr	sl, [pc, #1976]	; 1f830 <__flatcc_gen_sort@@Base+0x3c90>
   1f074:	ldr	r9, [pc, #1976]	; 1f834 <__flatcc_gen_sort@@Base+0x3c94>
   1f078:	add	r3, pc, r3
   1f07c:	ldr	r8, [pc, #1972]	; 1f838 <__flatcc_gen_sort@@Base+0x3c98>
   1f080:	add	sl, pc, sl
   1f084:	str	r3, [sp, #32]
   1f088:	add	r9, pc, r9
   1f08c:	add	r8, pc, r8
   1f090:	b	1f0a0 <__flatcc_gen_sort@@Base+0x3500>
   1f094:	ldr	r7, [r7]
   1f098:	cmp	r7, #0
   1f09c:	beq	1f228 <__flatcc_gen_sort@@Base+0x3688>
   1f0a0:	ldrh	r3, [r7, #8]
   1f0a4:	cmp	r3, #4
   1f0a8:	bne	1f094 <__flatcc_gen_sort@@Base+0x34f4>
   1f0ac:	add	r5, sp, #64	; 0x40
   1f0b0:	mov	r2, #220	; 0xdc
   1f0b4:	mov	r1, #0
   1f0b8:	mov	r0, r5
   1f0bc:	bl	1407c <memset@plt>
   1f0c0:	mov	r2, #220	; 0xdc
   1f0c4:	mov	r1, #0
   1f0c8:	mov	r0, fp
   1f0cc:	bl	1407c <memset@plt>
   1f0d0:	mov	r2, r5
   1f0d4:	mov	r1, r7
   1f0d8:	ldr	r0, [r7, #12]
   1f0dc:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   1f0e0:	ldr	r6, [r7, #20]
   1f0e4:	cmp	r6, #0
   1f0e8:	bne	1f144 <__flatcc_gen_sort@@Base+0x35a4>
   1f0ec:	b	1f200 <__flatcc_gen_sort@@Base+0x3660>
   1f0f0:	ldr	r1, [r6, #16]
   1f0f4:	mov	r2, fp
   1f0f8:	ldr	r0, [r1, #12]
   1f0fc:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   1f100:	ldr	lr, [r6, #4]
   1f104:	mov	r3, r5
   1f108:	mov	r2, r5
   1f10c:	mov	r1, r9
   1f110:	ldr	r0, [r4, #204]	; 0xcc
   1f114:	ldm	lr, {ip, lr}
   1f118:	str	fp, [sp, #8]
   1f11c:	str	lr, [sp]
   1f120:	str	ip, [sp, #4]
   1f124:	str	r5, [sp, #12]
   1f128:	str	r5, [sp, #16]
   1f12c:	str	lr, [sp, #20]
   1f130:	str	ip, [sp, #24]
   1f134:	bl	14064 <fprintf@plt>
   1f138:	ldr	r6, [r6]
   1f13c:	cmp	r6, #0
   1f140:	beq	1f200 <__flatcc_gen_sort@@Base+0x3660>
   1f144:	ldrh	r3, [r6, #24]
   1f148:	cmp	r3, #10
   1f14c:	beq	1f1b8 <__flatcc_gen_sort@@Base+0x3618>
   1f150:	cmp	r3, #14
   1f154:	beq	1f0f0 <__flatcc_gen_sort@@Base+0x3550>
   1f158:	cmp	r3, #0
   1f15c:	beq	1f1d8 <__flatcc_gen_sort@@Base+0x3638>
   1f160:	ldr	r2, [pc, #1748]	; 1f83c <__flatcc_gen_sort@@Base+0x3c9c>
   1f164:	movw	r3, #1608	; 0x648
   1f168:	ldr	r1, [sp, #60]	; 0x3c
   1f16c:	ldr	r0, [pc, #1740]	; 1f840 <__flatcc_gen_sort@@Base+0x3ca0>
   1f170:	ldr	r4, [pc, #1740]	; 1f844 <__flatcc_gen_sort@@Base+0x3ca4>
   1f174:	ldr	ip, [r1, r2]
   1f178:	add	r0, pc, r0
   1f17c:	ldr	r1, [pc, #1732]	; 1f848 <__flatcc_gen_sort@@Base+0x3ca8>
   1f180:	add	r4, pc, r4
   1f184:	str	r0, [sp]
   1f188:	mov	r2, r4
   1f18c:	ldr	r0, [ip]
   1f190:	add	r1, pc, r1
   1f194:	bl	14064 <fprintf@plt>
   1f198:	ldr	r3, [pc, #1708]	; 1f84c <__flatcc_gen_sort@@Base+0x3cac>
   1f19c:	mov	r1, r4
   1f1a0:	movw	r2, #1608	; 0x648
   1f1a4:	ldr	r0, [pc, #1700]	; 1f850 <__flatcc_gen_sort@@Base+0x3cb0>
   1f1a8:	add	r3, pc, r3
   1f1ac:	add	r3, r3, #196	; 0xc4
   1f1b0:	add	r0, pc, r0
   1f1b4:	bl	14118 <__assert_fail@plt>
   1f1b8:	ldr	lr, [r6, #4]
   1f1bc:	mov	r3, r5
   1f1c0:	mov	r2, r5
   1f1c4:	mov	r1, sl
   1f1c8:	ldr	r0, [r4, #204]	; 0xcc
   1f1cc:	ldm	lr, {ip, lr}
   1f1d0:	str	r4, [sp, #8]
   1f1d4:	b	1f11c <__flatcc_gen_sort@@Base+0x357c>
   1f1d8:	mov	r3, r5
   1f1dc:	mov	r2, r5
   1f1e0:	str	r5, [sp]
   1f1e4:	mov	r1, r8
   1f1e8:	str	r5, [sp, #4]
   1f1ec:	ldr	r0, [r4, #204]	; 0xcc
   1f1f0:	bl	14064 <fprintf@plt>
   1f1f4:	ldr	r6, [r6]
   1f1f8:	cmp	r6, #0
   1f1fc:	bne	1f144 <__flatcc_gen_sort@@Base+0x35a4>
   1f200:	mov	r2, r4
   1f204:	mov	r3, r4
   1f208:	str	r5, [sp]
   1f20c:	ldr	r1, [sp, #32]
   1f210:	ldr	r0, [r4, #204]	; 0xcc
   1f214:	bl	14064 <fprintf@plt>
   1f218:	ldr	r7, [r7]
   1f21c:	mov	r2, #1
   1f220:	cmp	r7, #0
   1f224:	bne	1f0a0 <__flatcc_gen_sort@@Base+0x3500>
   1f228:	cmp	r2, #0
   1f22c:	beq	1f23c <__flatcc_gen_sort@@Base+0x369c>
   1f230:	mov	r0, #10
   1f234:	ldr	r1, [r4, #204]	; 0xcc
   1f238:	bl	140c4 <fputc@plt>
   1f23c:	ldr	r3, [sp, #48]	; 0x30
   1f240:	cmp	r3, #0
   1f244:	beq	1f418 <__flatcc_gen_sort@@Base+0x3878>
   1f248:	ldr	r3, [r4, #208]	; 0xd0
   1f24c:	ldr	r6, [r3, #40]	; 0x28
   1f250:	cmp	r6, #0
   1f254:	beq	1f418 <__flatcc_gen_sort@@Base+0x3878>
   1f258:	ldr	r3, [pc, #1524]	; 1f854 <__flatcc_gen_sort@@Base+0x3cb4>
   1f25c:	ldr	sl, [pc, #1524]	; 1f858 <__flatcc_gen_sort@@Base+0x3cb8>
   1f260:	add	r3, pc, r3
   1f264:	str	r3, [sp, #40]	; 0x28
   1f268:	add	sl, pc, sl
   1f26c:	ldr	r3, [pc, #1512]	; 1f85c <__flatcc_gen_sort@@Base+0x3cbc>
   1f270:	add	r3, pc, r3
   1f274:	str	r3, [sp, #44]	; 0x2c
   1f278:	ldr	r3, [pc, #1504]	; 1f860 <__flatcc_gen_sort@@Base+0x3cc0>
   1f27c:	add	r3, pc, r3
   1f280:	str	r3, [sp, #56]	; 0x38
   1f284:	ldrh	r7, [r6, #8]
   1f288:	cmp	r7, #0
   1f28c:	bne	1f49c <__flatcc_gen_sort@@Base+0x38fc>
   1f290:	mov	r1, r6
   1f294:	mov	r0, r4
   1f298:	bl	1cd80 <__flatcc_gen_sort@@Base+0x11e0>
   1f29c:	ldrh	r8, [r6, #92]	; 0x5c
   1f2a0:	mov	r2, #220	; 0xdc
   1f2a4:	mov	r1, r7
   1f2a8:	mov	r0, fp
   1f2ac:	ands	r3, r8, #8
   1f2b0:	str	r3, [sp, #32]
   1f2b4:	moveq	r3, #1
   1f2b8:	movne	r3, #0
   1f2bc:	str	r3, [sp, #36]	; 0x24
   1f2c0:	bl	1407c <memset@plt>
   1f2c4:	mov	r2, fp
   1f2c8:	mov	r1, r6
   1f2cc:	ldr	r0, [r6, #12]
   1f2d0:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   1f2d4:	mov	r3, fp
   1f2d8:	mov	r2, fp
   1f2dc:	stm	sp, {r4, fp}
   1f2e0:	ldr	r1, [sp, #40]	; 0x28
   1f2e4:	ldr	r0, [r4, #204]	; 0xcc
   1f2e8:	bl	14064 <fprintf@plt>
   1f2ec:	mov	r2, fp
   1f2f0:	ldr	r1, [sp, #44]	; 0x2c
   1f2f4:	ldr	r0, [r4, #204]	; 0xcc
   1f2f8:	bl	14064 <fprintf@plt>
   1f2fc:	ldr	r5, [r6, #24]
   1f300:	cmp	r5, #0
   1f304:	beq	1f438 <__flatcc_gen_sort@@Base+0x3898>
   1f308:	ldr	r3, [pc, #1364]	; 1f864 <__flatcc_gen_sort@@Base+0x3cc4>
   1f30c:	ldr	r0, [r4, #204]	; 0xcc
   1f310:	add	r3, pc, r3
   1f314:	str	r3, [sp, #52]	; 0x34
   1f318:	b	1f340 <__flatcc_gen_sort@@Base+0x37a0>
   1f31c:	mov	r1, sl
   1f320:	str	r2, [sp]
   1f324:	mov	r2, fp
   1f328:	strd	r8, [sp, #8]
   1f32c:	bl	14064 <fprintf@plt>
   1f330:	ldr	r0, [r4, #204]	; 0xcc
   1f334:	ldr	r5, [r5, #108]	; 0x6c
   1f338:	cmp	r5, #0
   1f33c:	beq	1f4ac <__flatcc_gen_sort@@Base+0x390c>
   1f340:	ldrh	r3, [r5, #72]	; 0x48
   1f344:	tst	r3, #4
   1f348:	bne	1f334 <__flatcc_gen_sort@@Base+0x3794>
   1f34c:	ldrh	r2, [r5, #24]
   1f350:	ldr	r3, [r5, #4]
   1f354:	ldrd	r8, [r5, #96]	; 0x60
   1f358:	cmp	r2, #14
   1f35c:	ldrd	r2, [r3]
   1f360:	bne	1f31c <__flatcc_gen_sort@@Base+0x377c>
   1f364:	ldr	r1, [r5, #16]
   1f368:	ldrh	r1, [r1, #8]
   1f36c:	cmp	r1, #4
   1f370:	bne	1f31c <__flatcc_gen_sort@@Base+0x377c>
   1f374:	ldr	r1, [sp, #32]
   1f378:	cmp	r1, #0
   1f37c:	beq	1f540 <__flatcc_gen_sort@@Base+0x39a0>
   1f380:	ldr	r7, [sp, #48]	; 0x30
   1f384:	b	1f31c <__flatcc_gen_sort@@Base+0x377c>
   1f388:	ldr	r2, [pc, #1240]	; 1f868 <__flatcc_gen_sort@@Base+0x3cc8>
   1f38c:	mov	r0, r3
   1f390:	ldr	r1, [pc, #1236]	; 1f86c <__flatcc_gen_sort@@Base+0x3ccc>
   1f394:	add	r2, pc, r2
   1f398:	add	r1, pc, r1
   1f39c:	bl	14064 <fprintf@plt>
   1f3a0:	b	1eb28 <__flatcc_gen_sort@@Base+0x2f88>
   1f3a4:	ldr	r3, [pc, #1220]	; 1f870 <__flatcc_gen_sort@@Base+0x3cd0>
   1f3a8:	mov	r2, r4
   1f3ac:	add	r3, pc, r3
   1f3b0:	b	1ef00 <__flatcc_gen_sort@@Base+0x3360>
   1f3b4:	mov	r3, r0
   1f3b8:	ldr	r0, [pc, #1204]	; 1f874 <__flatcc_gen_sort@@Base+0x3cd4>
   1f3bc:	mov	r2, #2
   1f3c0:	mov	r1, #1
   1f3c4:	add	r0, pc, r0
   1f3c8:	bl	13fec <fwrite@plt>
   1f3cc:	ldr	r0, [r4, #204]	; 0xcc
   1f3d0:	b	1ec84 <__flatcc_gen_sort@@Base+0x30e4>
   1f3d4:	ldr	r0, [r4, #204]	; 0xcc
   1f3d8:	mov	r3, r0
   1f3dc:	mov	r2, #6
   1f3e0:	ldr	r0, [pc, #1168]	; 1f878 <__flatcc_gen_sort@@Base+0x3cd8>
   1f3e4:	mov	r1, #1
   1f3e8:	add	r0, pc, r0
   1f3ec:	bl	13fec <fwrite@plt>
   1f3f0:	b	1e9c0 <__flatcc_gen_sort@@Base+0x2e20>
   1f3f4:	ldr	r1, [pc, #1152]	; 1f87c <__flatcc_gen_sort@@Base+0x3cdc>
   1f3f8:	ldr	r2, [sp, #44]	; 0x2c
   1f3fc:	add	r1, pc, r1
   1f400:	bl	14064 <fprintf@plt>
   1f404:	ldr	r0, [r4, #204]	; 0xcc
   1f408:	b	1ec84 <__flatcc_gen_sort@@Base+0x30e4>
   1f40c:	ldr	r3, [sp, #48]	; 0x30
   1f410:	cmp	r3, #0
   1f414:	bne	1f570 <__flatcc_gen_sort@@Base+0x39d0>
   1f418:	mov	r0, #0
   1f41c:	add	sp, sp, #508	; 0x1fc
   1f420:	ldrd	r4, [sp]
   1f424:	ldrd	r6, [sp, #8]
   1f428:	ldrd	r8, [sp, #16]
   1f42c:	ldrd	sl, [sp, #24]
   1f430:	add	sp, sp, #32
   1f434:	pop	{pc}		; (ldr pc, [sp], #4)
   1f438:	ldr	r0, [r4, #204]	; 0xcc
   1f43c:	mov	r2, fp
   1f440:	ldr	r1, [pc, #1080]	; 1f880 <__flatcc_gen_sort@@Base+0x3ce0>
   1f444:	add	r1, pc, r1
   1f448:	bl	14064 <fprintf@plt>
   1f44c:	mov	r2, #220	; 0xdc
   1f450:	mov	r1, #0
   1f454:	mov	r0, fp
   1f458:	bl	1407c <memset@plt>
   1f45c:	mov	r2, fp
   1f460:	mov	r1, r6
   1f464:	ldr	r0, [r6, #12]
   1f468:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   1f46c:	ldr	r1, [pc, #1040]	; 1f884 <__flatcc_gen_sort@@Base+0x3ce4>
   1f470:	mov	r3, r4
   1f474:	mov	r2, r4
   1f478:	str	fp, [sp]
   1f47c:	str	fp, [sp, #4]
   1f480:	str	fp, [sp, #8]
   1f484:	ldr	r0, [r4, #204]	; 0xcc
   1f488:	add	r1, pc, r1
   1f48c:	bl	14064 <fprintf@plt>
   1f490:	mov	r0, #10
   1f494:	ldr	r1, [r4, #204]	; 0xcc
   1f498:	bl	140c4 <fputc@plt>
   1f49c:	ldr	r6, [r6]
   1f4a0:	cmp	r6, #0
   1f4a4:	bne	1f284 <__flatcc_gen_sort@@Base+0x36e4>
   1f4a8:	b	1f418 <__flatcc_gen_sort@@Base+0x3878>
   1f4ac:	ldr	r3, [sp, #36]	; 0x24
   1f4b0:	tst	r7, r3
   1f4b4:	beq	1f43c <__flatcc_gen_sort@@Base+0x389c>
   1f4b8:	ldr	r5, [r6, #24]
   1f4bc:	cmp	r5, #0
   1f4c0:	bne	1f4d4 <__flatcc_gen_sort@@Base+0x3934>
   1f4c4:	b	1f43c <__flatcc_gen_sort@@Base+0x389c>
   1f4c8:	ldr	r5, [r5, #108]	; 0x6c
   1f4cc:	cmp	r5, #0
   1f4d0:	beq	1f43c <__flatcc_gen_sort@@Base+0x389c>
   1f4d4:	ldrh	r3, [r5, #72]	; 0x48
   1f4d8:	tst	r3, #4
   1f4dc:	bne	1f4c8 <__flatcc_gen_sort@@Base+0x3928>
   1f4e0:	ldrh	r3, [r5, #24]
   1f4e4:	cmp	r3, #14
   1f4e8:	bne	1f4c8 <__flatcc_gen_sort@@Base+0x3928>
   1f4ec:	ldr	r3, [r5, #16]
   1f4f0:	ldrh	r3, [r3, #8]
   1f4f4:	cmp	r3, #4
   1f4f8:	bne	1f4c8 <__flatcc_gen_sort@@Base+0x3928>
   1f4fc:	ldr	ip, [r5, #4]
   1f500:	mov	r2, fp
   1f504:	ldrd	r8, [r5, #96]	; 0x60
   1f508:	ldr	r1, [sp, #56]	; 0x38
   1f50c:	ldr	r3, [ip, #4]
   1f510:	strd	r8, [sp, #8]
   1f514:	ldr	ip, [ip]
   1f518:	str	ip, [sp]
   1f51c:	bl	14064 <fprintf@plt>
   1f520:	ldr	r0, [r4, #204]	; 0xcc
   1f524:	b	1f4c8 <__flatcc_gen_sort@@Base+0x3928>
   1f528:	ldr	r1, [pc, #856]	; 1f888 <__flatcc_gen_sort@@Base+0x3ce8>
   1f52c:	ldr	r2, [sp, #36]	; 0x24
   1f530:	add	r1, pc, r1
   1f534:	bl	14064 <fprintf@plt>
   1f538:	ldr	r0, [r4, #204]	; 0xcc
   1f53c:	b	1e950 <__flatcc_gen_sort@@Base+0x2db0>
   1f540:	str	r2, [sp]
   1f544:	mov	r2, fp
   1f548:	strd	r8, [sp, #8]
   1f54c:	ldr	r1, [sp, #52]	; 0x34
   1f550:	bl	14064 <fprintf@plt>
   1f554:	ldr	r7, [sp, #48]	; 0x30
   1f558:	ldr	r0, [r4, #204]	; 0xcc
   1f55c:	b	1f334 <__flatcc_gen_sort@@Base+0x3794>
   1f560:	mov	r6, r3
   1f564:	b	1e8d4 <__flatcc_gen_sort@@Base+0x2d34>
   1f568:	mov	r5, r3
   1f56c:	b	1eaa8 <__flatcc_gen_sort@@Base+0x2f08>
   1f570:	mov	r0, #10
   1f574:	ldr	r1, [r4, #204]	; 0xcc
   1f578:	bl	140c4 <fputc@plt>
   1f57c:	b	1f058 <__flatcc_gen_sort@@Base+0x34b8>
   1f580:	ldr	r2, [pc, #692]	; 1f83c <__flatcc_gen_sort@@Base+0x3c9c>
   1f584:	movw	r3, #1209	; 0x4b9
   1f588:	ldr	r1, [sp, #60]	; 0x3c
   1f58c:	ldr	r0, [pc, #760]	; 1f88c <__flatcc_gen_sort@@Base+0x3cec>
   1f590:	ldr	r4, [pc, #760]	; 1f890 <__flatcc_gen_sort@@Base+0x3cf0>
   1f594:	ldr	ip, [r1, r2]
   1f598:	add	r0, pc, r0
   1f59c:	ldr	r1, [pc, #752]	; 1f894 <__flatcc_gen_sort@@Base+0x3cf4>
   1f5a0:	add	r4, pc, r4
   1f5a4:	str	r0, [sp]
   1f5a8:	mov	r2, r4
   1f5ac:	ldr	r0, [ip]
   1f5b0:	add	r1, pc, r1
   1f5b4:	bl	14064 <fprintf@plt>
   1f5b8:	ldr	r3, [pc, #728]	; 1f898 <__flatcc_gen_sort@@Base+0x3cf8>
   1f5bc:	mov	r1, r4
   1f5c0:	movw	r2, #1209	; 0x4b9
   1f5c4:	ldr	r0, [pc, #720]	; 1f89c <__flatcc_gen_sort@@Base+0x3cfc>
   1f5c8:	add	r3, pc, r3
   1f5cc:	add	r3, r3, #172	; 0xac
   1f5d0:	add	r0, pc, r0
   1f5d4:	bl	14118 <__assert_fail@plt>
   1f5d8:	ldr	r2, [pc, #604]	; 1f83c <__flatcc_gen_sort@@Base+0x3c9c>
   1f5dc:	mov	r3, #141	; 0x8d
   1f5e0:	ldr	r1, [sp, #60]	; 0x3c
   1f5e4:	ldr	r0, [pc, #692]	; 1f8a0 <__flatcc_gen_sort@@Base+0x3d00>
   1f5e8:	ldr	r4, [pc, #692]	; 1f8a4 <__flatcc_gen_sort@@Base+0x3d04>
   1f5ec:	ldr	ip, [r1, r2]
   1f5f0:	add	r0, pc, r0
   1f5f4:	ldr	r1, [pc, #684]	; 1f8a8 <__flatcc_gen_sort@@Base+0x3d08>
   1f5f8:	add	r4, pc, r4
   1f5fc:	str	r0, [sp]
   1f600:	mov	r2, r4
   1f604:	ldr	r0, [ip]
   1f608:	add	r1, pc, r1
   1f60c:	bl	14064 <fprintf@plt>
   1f610:	ldr	r3, [pc, #660]	; 1f8ac <__flatcc_gen_sort@@Base+0x3d0c>
   1f614:	mov	r1, r4
   1f618:	mov	r2, #141	; 0x8d
   1f61c:	ldr	r0, [pc, #652]	; 1f8b0 <__flatcc_gen_sort@@Base+0x3d10>
   1f620:	add	r3, pc, r3
   1f624:	add	r3, r3, #84	; 0x54
   1f628:	add	r0, pc, r0
   1f62c:	bl	14118 <__assert_fail@plt>
   1f630:	ldr	r2, [pc, #516]	; 1f83c <__flatcc_gen_sort@@Base+0x3c9c>
   1f634:	movw	r3, #1173	; 0x495
   1f638:	ldr	r1, [sp, #60]	; 0x3c
   1f63c:	ldr	r0, [pc, #624]	; 1f8b4 <__flatcc_gen_sort@@Base+0x3d14>
   1f640:	ldr	r4, [pc, #624]	; 1f8b8 <__flatcc_gen_sort@@Base+0x3d18>
   1f644:	ldr	ip, [r1, r2]
   1f648:	add	r0, pc, r0
   1f64c:	ldr	r1, [pc, #616]	; 1f8bc <__flatcc_gen_sort@@Base+0x3d1c>
   1f650:	add	r4, pc, r4
   1f654:	str	r0, [sp]
   1f658:	mov	r2, r4
   1f65c:	ldr	r0, [ip]
   1f660:	add	r1, pc, r1
   1f664:	bl	14064 <fprintf@plt>
   1f668:	ldr	r3, [pc, #592]	; 1f8c0 <__flatcc_gen_sort@@Base+0x3d20>
   1f66c:	mov	r1, r4
   1f670:	movw	r2, #1173	; 0x495
   1f674:	ldr	r0, [pc, #584]	; 1f8c4 <__flatcc_gen_sort@@Base+0x3d24>
   1f678:	add	r3, pc, r3
   1f67c:	add	r3, r3, #172	; 0xac
   1f680:	add	r0, pc, r0
   1f684:	bl	14118 <__assert_fail@plt>
   1f688:	ldr	r2, [pc, #428]	; 1f83c <__flatcc_gen_sort@@Base+0x3c9c>
   1f68c:	movw	r3, #1189	; 0x4a5
   1f690:	ldr	r1, [sp, #60]	; 0x3c
   1f694:	ldr	r0, [pc, #556]	; 1f8c8 <__flatcc_gen_sort@@Base+0x3d28>
   1f698:	ldr	r4, [pc, #556]	; 1f8cc <__flatcc_gen_sort@@Base+0x3d2c>
   1f69c:	ldr	ip, [r1, r2]
   1f6a0:	add	r0, pc, r0
   1f6a4:	ldr	r1, [pc, #548]	; 1f8d0 <__flatcc_gen_sort@@Base+0x3d30>
   1f6a8:	add	r4, pc, r4
   1f6ac:	str	r0, [sp]
   1f6b0:	mov	r2, r4
   1f6b4:	ldr	r0, [ip]
   1f6b8:	add	r1, pc, r1
   1f6bc:	bl	14064 <fprintf@plt>
   1f6c0:	ldr	r3, [pc, #524]	; 1f8d4 <__flatcc_gen_sort@@Base+0x3d34>
   1f6c4:	mov	r1, r4
   1f6c8:	movw	r2, #1189	; 0x4a5
   1f6cc:	ldr	r0, [pc, #516]	; 1f8d8 <__flatcc_gen_sort@@Base+0x3d38>
   1f6d0:	add	r3, pc, r3
   1f6d4:	add	r3, r3, #172	; 0xac
   1f6d8:	add	r0, pc, r0
   1f6dc:	bl	14118 <__assert_fail@plt>
   1f6e0:	ldr	r2, [pc, #340]	; 1f83c <__flatcc_gen_sort@@Base+0x3c9c>
   1f6e4:	mov	r3, #96	; 0x60
   1f6e8:	ldr	r1, [sp, #60]	; 0x3c
   1f6ec:	ldr	r0, [pc, #488]	; 1f8dc <__flatcc_gen_sort@@Base+0x3d3c>
   1f6f0:	ldr	r4, [pc, #488]	; 1f8e0 <__flatcc_gen_sort@@Base+0x3d40>
   1f6f4:	ldr	ip, [r1, r2]
   1f6f8:	add	r0, pc, r0
   1f6fc:	ldr	r1, [pc, #480]	; 1f8e4 <__flatcc_gen_sort@@Base+0x3d44>
   1f700:	add	r4, pc, r4
   1f704:	str	r0, [sp]
   1f708:	mov	r2, r4
   1f70c:	ldr	r0, [ip]
   1f710:	add	r1, pc, r1
   1f714:	bl	14064 <fprintf@plt>
   1f718:	ldr	r3, [pc, #456]	; 1f8e8 <__flatcc_gen_sort@@Base+0x3d48>
   1f71c:	mov	r1, r4
   1f720:	mov	r2, #96	; 0x60
   1f724:	ldr	r0, [pc, #448]	; 1f8ec <__flatcc_gen_sort@@Base+0x3d4c>
   1f728:	add	r3, pc, r3
   1f72c:	add	r3, r3, #32
   1f730:	add	r0, pc, r0
   1f734:	bl	14118 <__assert_fail@plt>
   1f738:	andeq	lr, r4, r8, lsr #16
   1f73c:	andeq	ip, r2, r8, asr #1
   1f740:	andeq	ip, r2, r4, lsr #1
   1f744:	andeq	ip, r2, r0, ror #1
   1f748:	andeq	ip, r2, r4, asr #1
   1f74c:	andeq	fp, r2, ip, lsl #21
   1f750:	andeq	r4, r2, r0, lsl #21
   1f754:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   1f758:	andeq	fp, r2, r8, asr pc
   1f75c:	andeq	ip, r2, ip, lsl #1
   1f760:	andeq	ip, r2, r8, rrx
   1f764:	andeq	ip, r2, r4, asr #32
   1f768:			; <UNDEFINED> instruction: 0x00025fbc
   1f76c:	strdeq	fp, [r2], -r0
   1f770:	andeq	fp, r2, r8, ror sp
   1f774:	ldrdeq	fp, [r2], -r0
   1f778:	andeq	fp, r2, ip, lsl #29
   1f77c:	andeq	r5, r2, r0, lsl #29
   1f780:	andeq	r5, r2, r4, ror #28
   1f784:	muleq	r2, r8, r6
   1f788:	muleq	r2, ip, ip
   1f78c:	andeq	fp, r2, r8, ror #24
   1f790:	andeq	fp, r2, r4, lsl #24
   1f794:	andeq	fp, r2, r4, asr #23
   1f798:	muleq	r2, r8, fp
   1f79c:	muleq	r2, r4, fp
   1f7a0:	andeq	r3, r2, r0, lsr #32
   1f7a4:	andeq	r3, r2, r4, rrx
   1f7a8:	andeq	r3, r2, r8, rrx
   1f7ac:	andeq	r2, r2, r8, asr #31
   1f7b0:	andeq	r3, r2, r8, lsr r0
   1f7b4:	andeq	r3, r2, ip, lsl r0
   1f7b8:	andeq	sl, r3, r0, ror #24
   1f7bc:	strdeq	r2, [r2], -r4
   1f7c0:			; <UNDEFINED> instruction: 0x00022fbc
   1f7c4:	andeq	r2, r2, r4, asr #31
   1f7c8:	andeq	r2, r2, r8, lsl #31
   1f7cc:	andeq	ip, r2, r0, asr #25
   1f7d0:	andeq	r2, r2, r4, ror #31
   1f7d4:	andeq	fp, r2, ip, ror fp
   1f7d8:	muleq	r2, r4, ip
   1f7dc:	andeq	r2, r2, r0, asr #31
   1f7e0:	andeq	ip, r2, r0, lsl #25
   1f7e4:	andeq	r2, r2, r8, lsl pc
   1f7e8:	andeq	ip, r2, ip, ror #24
   1f7ec:	andeq	r2, r2, r0, lsl #31
   1f7f0:	andeq	ip, r2, r8, asr ip
   1f7f4:	andeq	r2, r2, ip, asr pc
   1f7f8:	andeq	ip, r2, r4, asr #24
   1f7fc:	andeq	r2, r2, r0, lsl #30
   1f800:	andeq	ip, r2, r0, lsr ip
   1f804:	andeq	r2, r2, r4, lsr #30
   1f808:	andeq	ip, r2, ip, lsl ip
   1f80c:	andeq	r2, r2, r0, ror #29
   1f810:	andeq	ip, r2, r8, lsl #24
   1f814:	andeq	r2, r2, r0, ror #29
   1f818:	strdeq	ip, [r2], -r4
   1f81c:	muleq	r2, ip, lr
   1f820:	andeq	fp, r2, ip, lsr r3
   1f824:	andeq	fp, r2, r0, lsl r3
   1f828:	andeq	fp, r2, ip, lsr #21
   1f82c:			; <UNDEFINED> instruction: 0x0002bab0
   1f830:	andeq	fp, r2, ip, asr #22
   1f834:	andeq	fp, r2, r0, asr #21
   1f838:	andeq	fp, r2, ip, asr #23
   1f83c:	andeq	r0, r0, r0, lsr #1
   1f840:	andeq	fp, r2, r8, asr fp
   1f844:	strdeq	sl, [r2], -r4
   1f848:	andeq	r2, r2, r0, lsl #25
   1f84c:	andeq	sl, r2, r8, asr lr
   1f850:	andeq	fp, r2, r4, lsl #3
   1f854:	muleq	r2, ip, sl
   1f858:	andeq	fp, r2, r8, lsl fp
   1f85c:	ldrdeq	fp, [r2], -r0
   1f860:	andeq	fp, r2, r8, lsr #22
   1f864:	andeq	fp, r2, r8, asr #20
   1f868:	andeq	r5, r2, r4, asr #14
   1f86c:	andeq	sl, r2, r8, ror pc
   1f870:	strdeq	r2, [r2], -ip
   1f874:	andeq	sl, r2, r4, asr pc
   1f878:	andeq	fp, r2, r0, ror r5
   1f87c:	andeq	sl, r2, r4, lsl pc
   1f880:	andeq	fp, r2, ip, lsl #19
   1f884:	andeq	fp, r2, r0, lsl #19
   1f888:	andeq	sl, r2, r0, ror #27
   1f88c:	andeq	sl, r2, r4, lsr #30
   1f890:	ldrdeq	sl, [r2], -r4
   1f894:	andeq	r2, r2, r0, ror #16
   1f898:	andeq	sl, r2, r8, lsr sl
   1f89c:	andeq	sl, r2, r4, ror #26
   1f8a0:	andeq	r2, r2, ip, lsr #16
   1f8a4:			; <UNDEFINED> instruction: 0x000227b8
   1f8a8:	andeq	r2, r2, r8, lsl #16
   1f8ac:	andeq	sl, r2, r0, ror #19
   1f8b0:	andeq	sl, r2, ip, lsl #26
   1f8b4:			; <UNDEFINED> instruction: 0x0002b3b4
   1f8b8:	andeq	sl, r2, r4, lsr #22
   1f8bc:			; <UNDEFINED> instruction: 0x000227b0
   1f8c0:	andeq	sl, r2, r8, lsl #19
   1f8c4:			; <UNDEFINED> instruction: 0x0002acb4
   1f8c8:			; <UNDEFINED> instruction: 0x0002b3b8
   1f8cc:	andeq	sl, r2, ip, asr #21
   1f8d0:	andeq	r2, r2, r8, asr r7
   1f8d4:	andeq	sl, r2, r0, lsr r9
   1f8d8:	andeq	sl, r2, ip, asr ip
   1f8dc:	andeq	r2, r2, r4, lsr #14
   1f8e0:			; <UNDEFINED> instruction: 0x000226b0
   1f8e4:	andeq	r2, r2, r0, lsl #14
   1f8e8:	ldrdeq	sl, [r2], -r8
   1f8ec:	andeq	sl, r2, r4, lsl #24

0001f8f0 <__flatcc_fb_gen_common_c_builder_header@@Base>:
   1f8f0:	ldr	r1, [pc, #2244]	; 201bc <__flatcc_fb_gen_common_c_builder_header@@Base+0x8cc>
   1f8f4:	strd	r4, [sp, #-12]!
   1f8f8:	add	r5, r0, #102	; 0x66
   1f8fc:	mov	r4, r0
   1f900:	mov	r2, r5
   1f904:	ldr	r0, [r0, #204]	; 0xcc
   1f908:	str	lr, [sp, #8]
   1f90c:	sub	sp, sp, #12
   1f910:	add	r1, pc, r1
   1f914:	bl	14064 <fprintf@plt>
   1f918:	ldr	r1, [pc, #2208]	; 201c0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8d0>
   1f91c:	mov	r2, r5
   1f920:	ldr	r0, [r4, #204]	; 0xcc
   1f924:	add	r1, pc, r1
   1f928:	bl	14064 <fprintf@plt>
   1f92c:	ldr	r0, [pc, #2192]	; 201c4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8d4>
   1f930:	mov	r2, #81	; 0x51
   1f934:	mov	r1, #1
   1f938:	ldr	r3, [r4, #204]	; 0xcc
   1f93c:	add	r0, pc, r0
   1f940:	bl	13fec <fwrite@plt>
   1f944:	ldr	r0, [pc, #2172]	; 201c8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8d8>
   1f948:	mov	r2, #53	; 0x35
   1f94c:	mov	r1, #1
   1f950:	ldr	r3, [r4, #204]	; 0xcc
   1f954:	add	r0, pc, r0
   1f958:	bl	13fec <fwrite@plt>
   1f95c:	ldr	r3, [r4, #204]	; 0xcc
   1f960:	ldr	r2, [r4, #212]	; 0xd4
   1f964:	ldr	r2, [r2, #140]	; 0x8c
   1f968:	cmp	r2, #0
   1f96c:	bne	200d8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7e8>
   1f970:	ldr	r0, [pc, #2132]	; 201cc <__flatcc_fb_gen_common_c_builder_header@@Base+0x8dc>
   1f974:	mov	r2, #22
   1f978:	mov	r1, #1
   1f97c:	add	r0, pc, r0
   1f980:	bl	13fec <fwrite@plt>
   1f984:	ldr	r0, [pc, #2116]	; 201d0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8e0>
   1f988:	mov	r2, #35	; 0x23
   1f98c:	mov	r1, #1
   1f990:	ldr	r3, [r4, #204]	; 0xcc
   1f994:	add	r0, pc, r0
   1f998:	bl	13fec <fwrite@plt>
   1f99c:	ldr	r0, [pc, #2096]	; 201d4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8e4>
   1f9a0:	mov	r2, #7
   1f9a4:	mov	r1, #1
   1f9a8:	ldr	r3, [r4, #204]	; 0xcc
   1f9ac:	add	r0, pc, r0
   1f9b0:	bl	13fec <fwrite@plt>
   1f9b4:	ldr	r1, [pc, #2076]	; 201d8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8e8>
   1f9b8:	mov	r0, r4
   1f9bc:	add	r1, pc, r1
   1f9c0:	bl	13f8c <strcmp@plt>
   1f9c4:	cmp	r0, #0
   1f9c8:	bne	20140 <__flatcc_fb_gen_common_c_builder_header@@Base+0x850>
   1f9cc:	ldr	r1, [pc, #2056]	; 201dc <__flatcc_fb_gen_common_c_builder_header@@Base+0x8ec>
   1f9d0:	mov	r3, r4
   1f9d4:	mov	r2, r4
   1f9d8:	ldr	r0, [r4, #204]	; 0xcc
   1f9dc:	add	r1, pc, r1
   1f9e0:	bl	14064 <fprintf@plt>
   1f9e4:	ldr	r1, [pc, #2036]	; 201e0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8f0>
   1f9e8:	mov	r3, r4
   1f9ec:	mov	r2, r4
   1f9f0:	ldr	r0, [r4, #204]	; 0xcc
   1f9f4:	add	r1, pc, r1
   1f9f8:	bl	14064 <fprintf@plt>
   1f9fc:	ldr	r1, [pc, #2016]	; 201e4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8f4>
   1fa00:	mov	r0, r4
   1fa04:	add	r1, pc, r1
   1fa08:	bl	13f8c <strcmp@plt>
   1fa0c:	cmp	r0, #0
   1fa10:	bne	20114 <__flatcc_fb_gen_common_c_builder_header@@Base+0x824>
   1fa14:	mov	r0, #10
   1fa18:	ldr	r1, [r4, #204]	; 0xcc
   1fa1c:	bl	140c4 <fputc@plt>
   1fa20:	ldr	r1, [pc, #1984]	; 201e8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8f8>
   1fa24:	mov	r2, r4
   1fa28:	ldr	r0, [r4, #204]	; 0xcc
   1fa2c:	add	r1, pc, r1
   1fa30:	bl	14064 <fprintf@plt>
   1fa34:	ldr	r1, [pc, #1968]	; 201ec <__flatcc_fb_gen_common_c_builder_header@@Base+0x8fc>
   1fa38:	mov	r2, r4
   1fa3c:	ldr	r0, [r4, #204]	; 0xcc
   1fa40:	add	r1, pc, r1
   1fa44:	bl	14064 <fprintf@plt>
   1fa48:	ldr	r1, [pc, #1952]	; 201f0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x900>
   1fa4c:	mov	r3, r4
   1fa50:	mov	r2, r4
   1fa54:	str	r4, [sp]
   1fa58:	ldr	r0, [r4, #204]	; 0xcc
   1fa5c:	add	r1, pc, r1
   1fa60:	bl	14064 <fprintf@plt>
   1fa64:	ldr	r1, [pc, #1928]	; 201f4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x904>
   1fa68:	mov	r2, r4
   1fa6c:	ldr	r0, [r4, #204]	; 0xcc
   1fa70:	add	r1, pc, r1
   1fa74:	bl	14064 <fprintf@plt>
   1fa78:	ldr	r1, [pc, #1912]	; 201f8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x908>
   1fa7c:	mov	r2, r4
   1fa80:	ldr	r0, [r4, #204]	; 0xcc
   1fa84:	add	r1, pc, r1
   1fa88:	bl	14064 <fprintf@plt>
   1fa8c:	ldr	r1, [pc, #1896]	; 201fc <__flatcc_fb_gen_common_c_builder_header@@Base+0x90c>
   1fa90:	mov	r2, r4
   1fa94:	ldr	r0, [r4, #204]	; 0xcc
   1fa98:	add	r1, pc, r1
   1fa9c:	bl	14064 <fprintf@plt>
   1faa0:	ldr	r1, [pc, #1880]	; 20200 <__flatcc_fb_gen_common_c_builder_header@@Base+0x910>
   1faa4:	mov	r2, r4
   1faa8:	ldr	r0, [r4, #204]	; 0xcc
   1faac:	add	r1, pc, r1
   1fab0:	bl	14064 <fprintf@plt>
   1fab4:	ldr	r1, [pc, #1864]	; 20204 <__flatcc_fb_gen_common_c_builder_header@@Base+0x914>
   1fab8:	mov	r3, r4
   1fabc:	mov	r2, r4
   1fac0:	ldr	r0, [r4, #204]	; 0xcc
   1fac4:	add	r1, pc, r1
   1fac8:	bl	14064 <fprintf@plt>
   1facc:	ldr	r1, [pc, #1844]	; 20208 <__flatcc_fb_gen_common_c_builder_header@@Base+0x918>
   1fad0:	mov	r3, r4
   1fad4:	mov	r2, r4
   1fad8:	str	r4, [sp]
   1fadc:	ldr	r0, [r4, #204]	; 0xcc
   1fae0:	add	r1, pc, r1
   1fae4:	bl	14064 <fprintf@plt>
   1fae8:	ldr	r1, [pc, #1820]	; 2020c <__flatcc_fb_gen_common_c_builder_header@@Base+0x91c>
   1faec:	mov	r2, r4
   1faf0:	ldr	r0, [r4, #204]	; 0xcc
   1faf4:	add	r1, pc, r1
   1faf8:	bl	14064 <fprintf@plt>
   1fafc:	ldr	r1, [pc, #1804]	; 20210 <__flatcc_fb_gen_common_c_builder_header@@Base+0x920>
   1fb00:	mov	r2, r4
   1fb04:	ldr	r0, [r4, #204]	; 0xcc
   1fb08:	add	r1, pc, r1
   1fb0c:	bl	14064 <fprintf@plt>
   1fb10:	ldr	r1, [pc, #1788]	; 20214 <__flatcc_fb_gen_common_c_builder_header@@Base+0x924>
   1fb14:	mov	r2, r4
   1fb18:	ldr	r0, [r4, #204]	; 0xcc
   1fb1c:	add	r1, pc, r1
   1fb20:	bl	14064 <fprintf@plt>
   1fb24:	ldr	r1, [pc, #1772]	; 20218 <__flatcc_fb_gen_common_c_builder_header@@Base+0x928>
   1fb28:	mov	r3, r4
   1fb2c:	mov	r2, r4
   1fb30:	ldr	r0, [r4, #204]	; 0xcc
   1fb34:	add	r1, pc, r1
   1fb38:	bl	14064 <fprintf@plt>
   1fb3c:	ldr	r1, [pc, #1752]	; 2021c <__flatcc_fb_gen_common_c_builder_header@@Base+0x92c>
   1fb40:	mov	r2, r4
   1fb44:	ldr	r0, [r4, #204]	; 0xcc
   1fb48:	add	r1, pc, r1
   1fb4c:	bl	14064 <fprintf@plt>
   1fb50:	ldr	r1, [pc, #1736]	; 20220 <__flatcc_fb_gen_common_c_builder_header@@Base+0x930>
   1fb54:	mov	r3, r4
   1fb58:	mov	r2, r4
   1fb5c:	str	r4, [sp]
   1fb60:	ldr	r0, [r4, #204]	; 0xcc
   1fb64:	add	r1, pc, r1
   1fb68:	bl	14064 <fprintf@plt>
   1fb6c:	ldr	r1, [pc, #1712]	; 20224 <__flatcc_fb_gen_common_c_builder_header@@Base+0x934>
   1fb70:	mov	r3, r4
   1fb74:	mov	r2, r4
   1fb78:	str	r4, [sp]
   1fb7c:	str	r4, [sp, #4]
   1fb80:	ldr	r0, [r4, #204]	; 0xcc
   1fb84:	add	r1, pc, r1
   1fb88:	bl	14064 <fprintf@plt>
   1fb8c:	ldr	r1, [pc, #1684]	; 20228 <__flatcc_fb_gen_common_c_builder_header@@Base+0x938>
   1fb90:	mov	r3, r4
   1fb94:	mov	r2, r4
   1fb98:	ldr	r0, [r4, #204]	; 0xcc
   1fb9c:	add	r1, pc, r1
   1fba0:	bl	14064 <fprintf@plt>
   1fba4:	ldr	r1, [pc, #1664]	; 2022c <__flatcc_fb_gen_common_c_builder_header@@Base+0x93c>
   1fba8:	mov	r3, r4
   1fbac:	mov	r2, r4
   1fbb0:	str	r4, [sp]
   1fbb4:	str	r4, [sp, #4]
   1fbb8:	ldr	r0, [r4, #204]	; 0xcc
   1fbbc:	add	r1, pc, r1
   1fbc0:	bl	14064 <fprintf@plt>
   1fbc4:	ldr	r1, [pc, #1636]	; 20230 <__flatcc_fb_gen_common_c_builder_header@@Base+0x940>
   1fbc8:	mov	r3, r4
   1fbcc:	mov	r2, r4
   1fbd0:	ldr	r0, [r4, #204]	; 0xcc
   1fbd4:	add	r1, pc, r1
   1fbd8:	bl	14064 <fprintf@plt>
   1fbdc:	ldr	r1, [pc, #1616]	; 20234 <__flatcc_fb_gen_common_c_builder_header@@Base+0x944>
   1fbe0:	mov	r2, r4
   1fbe4:	ldr	r0, [r4, #204]	; 0xcc
   1fbe8:	add	r1, pc, r1
   1fbec:	bl	14064 <fprintf@plt>
   1fbf0:	ldr	r1, [pc, #1600]	; 20238 <__flatcc_fb_gen_common_c_builder_header@@Base+0x948>
   1fbf4:	mov	r2, r4
   1fbf8:	ldr	r0, [r4, #204]	; 0xcc
   1fbfc:	add	r1, pc, r1
   1fc00:	bl	14064 <fprintf@plt>
   1fc04:	ldr	r1, [pc, #1584]	; 2023c <__flatcc_fb_gen_common_c_builder_header@@Base+0x94c>
   1fc08:	mov	r2, r4
   1fc0c:	ldr	r0, [r4, #204]	; 0xcc
   1fc10:	add	r1, pc, r1
   1fc14:	bl	14064 <fprintf@plt>
   1fc18:	ldr	r1, [pc, #1568]	; 20240 <__flatcc_fb_gen_common_c_builder_header@@Base+0x950>
   1fc1c:	mov	r2, r4
   1fc20:	ldr	r0, [r4, #204]	; 0xcc
   1fc24:	add	r1, pc, r1
   1fc28:	bl	14064 <fprintf@plt>
   1fc2c:	ldr	r1, [pc, #1552]	; 20244 <__flatcc_fb_gen_common_c_builder_header@@Base+0x954>
   1fc30:	mov	r3, r4
   1fc34:	mov	r2, r4
   1fc38:	ldr	r0, [r4, #204]	; 0xcc
   1fc3c:	add	r1, pc, r1
   1fc40:	bl	14064 <fprintf@plt>
   1fc44:	ldr	r1, [pc, #1532]	; 20248 <__flatcc_fb_gen_common_c_builder_header@@Base+0x958>
   1fc48:	mov	r2, r4
   1fc4c:	ldr	r0, [r4, #204]	; 0xcc
   1fc50:	add	r1, pc, r1
   1fc54:	bl	14064 <fprintf@plt>
   1fc58:	ldr	r1, [pc, #1516]	; 2024c <__flatcc_fb_gen_common_c_builder_header@@Base+0x95c>
   1fc5c:	mov	r2, r4
   1fc60:	ldr	r0, [r4, #204]	; 0xcc
   1fc64:	add	r1, pc, r1
   1fc68:	bl	14064 <fprintf@plt>
   1fc6c:	ldr	r1, [pc, #1500]	; 20250 <__flatcc_fb_gen_common_c_builder_header@@Base+0x960>
   1fc70:	mov	r3, r4
   1fc74:	mov	r2, r4
   1fc78:	ldr	r0, [r4, #204]	; 0xcc
   1fc7c:	add	r1, pc, r1
   1fc80:	bl	14064 <fprintf@plt>
   1fc84:	ldr	r1, [pc, #1480]	; 20254 <__flatcc_fb_gen_common_c_builder_header@@Base+0x964>
   1fc88:	mov	r3, r4
   1fc8c:	mov	r2, r4
   1fc90:	ldr	r0, [r4, #204]	; 0xcc
   1fc94:	add	r1, pc, r1
   1fc98:	bl	14064 <fprintf@plt>
   1fc9c:	ldr	r1, [pc, #1460]	; 20258 <__flatcc_fb_gen_common_c_builder_header@@Base+0x968>
   1fca0:	mov	r3, r4
   1fca4:	mov	r2, r4
   1fca8:	ldr	r0, [r4, #204]	; 0xcc
   1fcac:	add	r1, pc, r1
   1fcb0:	bl	14064 <fprintf@plt>
   1fcb4:	ldr	r1, [pc, #1440]	; 2025c <__flatcc_fb_gen_common_c_builder_header@@Base+0x96c>
   1fcb8:	mov	r3, r4
   1fcbc:	mov	r2, r4
   1fcc0:	ldr	r0, [r4, #204]	; 0xcc
   1fcc4:	add	r1, pc, r1
   1fcc8:	bl	14064 <fprintf@plt>
   1fccc:	ldr	r1, [pc, #1420]	; 20260 <__flatcc_fb_gen_common_c_builder_header@@Base+0x970>
   1fcd0:	mov	r3, r4
   1fcd4:	mov	r2, r4
   1fcd8:	str	r4, [sp]
   1fcdc:	ldr	r0, [r4, #204]	; 0xcc
   1fce0:	add	r1, pc, r1
   1fce4:	bl	14064 <fprintf@plt>
   1fce8:	ldr	r1, [pc, #1396]	; 20264 <__flatcc_fb_gen_common_c_builder_header@@Base+0x974>
   1fcec:	mov	r3, r4
   1fcf0:	mov	r2, r4
   1fcf4:	ldr	r0, [r4, #204]	; 0xcc
   1fcf8:	add	r1, pc, r1
   1fcfc:	bl	14064 <fprintf@plt>
   1fd00:	ldr	r1, [pc, #1376]	; 20268 <__flatcc_fb_gen_common_c_builder_header@@Base+0x978>
   1fd04:	mov	r2, r4
   1fd08:	ldr	r0, [r4, #204]	; 0xcc
   1fd0c:	add	r1, pc, r1
   1fd10:	bl	14064 <fprintf@plt>
   1fd14:	ldr	r1, [pc, #1360]	; 2026c <__flatcc_fb_gen_common_c_builder_header@@Base+0x97c>
   1fd18:	mov	r2, r4
   1fd1c:	ldr	r0, [r4, #204]	; 0xcc
   1fd20:	add	r1, pc, r1
   1fd24:	bl	14064 <fprintf@plt>
   1fd28:	ldr	r1, [pc, #1344]	; 20270 <__flatcc_fb_gen_common_c_builder_header@@Base+0x980>
   1fd2c:	mov	r2, r4
   1fd30:	ldr	r0, [r4, #204]	; 0xcc
   1fd34:	add	r1, pc, r1
   1fd38:	bl	14064 <fprintf@plt>
   1fd3c:	ldr	r1, [pc, #1328]	; 20274 <__flatcc_fb_gen_common_c_builder_header@@Base+0x984>
   1fd40:	mov	r3, r4
   1fd44:	mov	r2, r4
   1fd48:	str	r4, [sp]
   1fd4c:	ldr	r0, [r4, #204]	; 0xcc
   1fd50:	add	r1, pc, r1
   1fd54:	bl	14064 <fprintf@plt>
   1fd58:	ldr	r1, [pc, #1304]	; 20278 <__flatcc_fb_gen_common_c_builder_header@@Base+0x988>
   1fd5c:	mov	r2, r4
   1fd60:	ldr	r0, [r4, #204]	; 0xcc
   1fd64:	add	r1, pc, r1
   1fd68:	bl	14064 <fprintf@plt>
   1fd6c:	ldr	r1, [pc, #1288]	; 2027c <__flatcc_fb_gen_common_c_builder_header@@Base+0x98c>
   1fd70:	mov	r2, r4
   1fd74:	ldr	r0, [r4, #204]	; 0xcc
   1fd78:	add	r1, pc, r1
   1fd7c:	bl	14064 <fprintf@plt>
   1fd80:	ldr	r1, [pc, #1272]	; 20280 <__flatcc_fb_gen_common_c_builder_header@@Base+0x990>
   1fd84:	mov	r2, r4
   1fd88:	ldr	r0, [r4, #204]	; 0xcc
   1fd8c:	add	r1, pc, r1
   1fd90:	bl	14064 <fprintf@plt>
   1fd94:	ldr	r1, [pc, #1256]	; 20284 <__flatcc_fb_gen_common_c_builder_header@@Base+0x994>
   1fd98:	mov	r2, r4
   1fd9c:	ldr	r0, [r4, #204]	; 0xcc
   1fda0:	add	r1, pc, r1
   1fda4:	bl	14064 <fprintf@plt>
   1fda8:	ldr	r1, [pc, #1240]	; 20288 <__flatcc_fb_gen_common_c_builder_header@@Base+0x998>
   1fdac:	mov	r3, r4
   1fdb0:	mov	r2, r4
   1fdb4:	ldr	r0, [r4, #204]	; 0xcc
   1fdb8:	add	r1, pc, r1
   1fdbc:	bl	14064 <fprintf@plt>
   1fdc0:	ldr	r1, [pc, #1220]	; 2028c <__flatcc_fb_gen_common_c_builder_header@@Base+0x99c>
   1fdc4:	mov	r2, r4
   1fdc8:	ldr	r0, [r4, #204]	; 0xcc
   1fdcc:	add	r1, pc, r1
   1fdd0:	bl	14064 <fprintf@plt>
   1fdd4:	ldr	r1, [pc, #1204]	; 20290 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9a0>
   1fdd8:	mov	r2, r4
   1fddc:	ldr	r0, [r4, #204]	; 0xcc
   1fde0:	add	r1, pc, r1
   1fde4:	bl	14064 <fprintf@plt>
   1fde8:	ldr	r1, [pc, #1188]	; 20294 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9a4>
   1fdec:	mov	r2, r4
   1fdf0:	ldr	r0, [r4, #204]	; 0xcc
   1fdf4:	add	r1, pc, r1
   1fdf8:	bl	14064 <fprintf@plt>
   1fdfc:	ldr	r1, [pc, #1172]	; 20298 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9a8>
   1fe00:	mov	r2, r4
   1fe04:	ldr	r0, [r4, #204]	; 0xcc
   1fe08:	add	r1, pc, r1
   1fe0c:	bl	14064 <fprintf@plt>
   1fe10:	ldr	r1, [pc, #1156]	; 2029c <__flatcc_fb_gen_common_c_builder_header@@Base+0x9ac>
   1fe14:	mov	r2, r4
   1fe18:	ldr	r0, [r4, #204]	; 0xcc
   1fe1c:	add	r1, pc, r1
   1fe20:	bl	14064 <fprintf@plt>
   1fe24:	ldr	r1, [pc, #1140]	; 202a0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9b0>
   1fe28:	mov	r2, r4
   1fe2c:	ldr	r0, [r4, #204]	; 0xcc
   1fe30:	add	r1, pc, r1
   1fe34:	bl	14064 <fprintf@plt>
   1fe38:	ldr	r1, [pc, #1124]	; 202a4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9b4>
   1fe3c:	mov	r2, r4
   1fe40:	ldr	r0, [r4, #204]	; 0xcc
   1fe44:	add	r1, pc, r1
   1fe48:	bl	14064 <fprintf@plt>
   1fe4c:	ldr	r1, [pc, #1108]	; 202a8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9b8>
   1fe50:	mov	r2, r4
   1fe54:	ldr	r0, [r4, #204]	; 0xcc
   1fe58:	add	r1, pc, r1
   1fe5c:	bl	14064 <fprintf@plt>
   1fe60:	ldr	r1, [pc, #1092]	; 202ac <__flatcc_fb_gen_common_c_builder_header@@Base+0x9bc>
   1fe64:	mov	r2, r4
   1fe68:	ldr	r0, [r4, #204]	; 0xcc
   1fe6c:	add	r1, pc, r1
   1fe70:	bl	14064 <fprintf@plt>
   1fe74:	ldr	r1, [pc, #1076]	; 202b0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9c0>
   1fe78:	mov	r2, r4
   1fe7c:	ldr	r0, [r4, #204]	; 0xcc
   1fe80:	add	r1, pc, r1
   1fe84:	bl	14064 <fprintf@plt>
   1fe88:	ldr	r1, [pc, #1060]	; 202b4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9c4>
   1fe8c:	mov	r2, r4
   1fe90:	ldr	r0, [r4, #204]	; 0xcc
   1fe94:	add	r1, pc, r1
   1fe98:	bl	14064 <fprintf@plt>
   1fe9c:	ldr	r1, [pc, #1044]	; 202b8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9c8>
   1fea0:	mov	r2, r4
   1fea4:	ldr	r0, [r4, #204]	; 0xcc
   1fea8:	add	r1, pc, r1
   1feac:	bl	14064 <fprintf@plt>
   1feb0:	ldr	r1, [pc, #1028]	; 202bc <__flatcc_fb_gen_common_c_builder_header@@Base+0x9cc>
   1feb4:	mov	r2, r4
   1feb8:	ldr	r0, [r4, #204]	; 0xcc
   1febc:	add	r1, pc, r1
   1fec0:	bl	14064 <fprintf@plt>
   1fec4:	ldr	r1, [pc, #1012]	; 202c0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9d0>
   1fec8:	mov	r2, r4
   1fecc:	ldr	r0, [r4, #204]	; 0xcc
   1fed0:	add	r1, pc, r1
   1fed4:	bl	14064 <fprintf@plt>
   1fed8:	ldr	r1, [pc, #996]	; 202c4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9d4>
   1fedc:	mov	r2, r4
   1fee0:	ldr	r0, [r4, #204]	; 0xcc
   1fee4:	add	r1, pc, r1
   1fee8:	bl	14064 <fprintf@plt>
   1feec:	ldr	r1, [pc, #980]	; 202c8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9d8>
   1fef0:	mov	r2, r4
   1fef4:	ldr	r0, [r4, #204]	; 0xcc
   1fef8:	add	r1, pc, r1
   1fefc:	bl	14064 <fprintf@plt>
   1ff00:	ldr	r1, [pc, #964]	; 202cc <__flatcc_fb_gen_common_c_builder_header@@Base+0x9dc>
   1ff04:	mov	r2, r4
   1ff08:	ldr	r0, [r4, #204]	; 0xcc
   1ff0c:	add	r1, pc, r1
   1ff10:	bl	14064 <fprintf@plt>
   1ff14:	mov	r0, #10
   1ff18:	ldr	r1, [r4, #204]	; 0xcc
   1ff1c:	bl	140c4 <fputc@plt>
   1ff20:	ldr	r1, [pc, #936]	; 202d0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9e0>
   1ff24:	mov	r3, r4
   1ff28:	mov	r2, r4
   1ff2c:	str	r4, [sp]
   1ff30:	ldr	r0, [r4, #204]	; 0xcc
   1ff34:	add	r1, pc, r1
   1ff38:	bl	14064 <fprintf@plt>
   1ff3c:	ldr	r1, [pc, #912]	; 202d4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9e4>
   1ff40:	mov	r3, r4
   1ff44:	mov	r2, r4
   1ff48:	str	r4, [sp]
   1ff4c:	ldr	r0, [r4, #204]	; 0xcc
   1ff50:	add	r1, pc, r1
   1ff54:	bl	14064 <fprintf@plt>
   1ff58:	ldr	r1, [pc, #888]	; 202d8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9e8>
   1ff5c:	mov	r3, r4
   1ff60:	mov	r2, r4
   1ff64:	str	r4, [sp]
   1ff68:	str	r4, [sp, #4]
   1ff6c:	ldr	r0, [r4, #204]	; 0xcc
   1ff70:	add	r1, pc, r1
   1ff74:	bl	14064 <fprintf@plt>
   1ff78:	ldr	r1, [pc, #860]	; 202dc <__flatcc_fb_gen_common_c_builder_header@@Base+0x9ec>
   1ff7c:	mov	r3, r4
   1ff80:	mov	r2, r4
   1ff84:	str	r4, [sp]
   1ff88:	ldr	r0, [r4, #204]	; 0xcc
   1ff8c:	add	r1, pc, r1
   1ff90:	bl	14064 <fprintf@plt>
   1ff94:	ldr	r1, [pc, #836]	; 202e0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9f0>
   1ff98:	mov	r3, r4
   1ff9c:	mov	r2, r4
   1ffa0:	str	r4, [sp]
   1ffa4:	ldr	r0, [r4, #204]	; 0xcc
   1ffa8:	add	r1, pc, r1
   1ffac:	bl	14064 <fprintf@plt>
   1ffb0:	ldr	r1, [pc, #812]	; 202e4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9f4>
   1ffb4:	mov	r3, r4
   1ffb8:	mov	r2, r4
   1ffbc:	str	r4, [sp]
   1ffc0:	ldr	r0, [r4, #204]	; 0xcc
   1ffc4:	add	r1, pc, r1
   1ffc8:	bl	14064 <fprintf@plt>
   1ffcc:	ldr	r1, [pc, #788]	; 202e8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9f8>
   1ffd0:	mov	r3, r4
   1ffd4:	mov	r2, r4
   1ffd8:	str	r4, [sp]
   1ffdc:	ldr	r0, [r4, #204]	; 0xcc
   1ffe0:	add	r1, pc, r1
   1ffe4:	bl	14064 <fprintf@plt>
   1ffe8:	ldr	r1, [pc, #764]	; 202ec <__flatcc_fb_gen_common_c_builder_header@@Base+0x9fc>
   1ffec:	mov	r3, r4
   1fff0:	mov	r2, r4
   1fff4:	str	r4, [sp]
   1fff8:	ldr	r0, [r4, #204]	; 0xcc
   1fffc:	add	r1, pc, r1
   20000:	bl	14064 <fprintf@plt>
   20004:	ldr	r1, [pc, #740]	; 202f0 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa00>
   20008:	mov	r3, r4
   2000c:	mov	r2, r4
   20010:	str	r4, [sp]
   20014:	ldr	r0, [r4, #204]	; 0xcc
   20018:	add	r1, pc, r1
   2001c:	bl	14064 <fprintf@plt>
   20020:	ldr	r1, [pc, #716]	; 202f4 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa04>
   20024:	mov	r3, r4
   20028:	mov	r2, r4
   2002c:	str	r4, [sp]
   20030:	ldr	r0, [r4, #204]	; 0xcc
   20034:	add	r1, pc, r1
   20038:	bl	14064 <fprintf@plt>
   2003c:	ldr	r1, [pc, #692]	; 202f8 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa08>
   20040:	mov	r3, r4
   20044:	mov	r2, r4
   20048:	str	r4, [sp]
   2004c:	ldr	r0, [r4, #204]	; 0xcc
   20050:	add	r1, pc, r1
   20054:	bl	14064 <fprintf@plt>
   20058:	mov	r0, #10
   2005c:	ldr	r1, [r4, #204]	; 0xcc
   20060:	bl	140c4 <fputc@plt>
   20064:	ldr	r1, [pc, #656]	; 202fc <__flatcc_fb_gen_common_c_builder_header@@Base+0xa0c>
   20068:	mov	r3, r4
   2006c:	mov	r2, r4
   20070:	ldr	r0, [r4, #204]	; 0xcc
   20074:	add	r1, pc, r1
   20078:	bl	14064 <fprintf@plt>
   2007c:	mov	r0, #10
   20080:	ldr	r1, [r4, #204]	; 0xcc
   20084:	bl	140c4 <fputc@plt>
   20088:	ldr	r1, [pc, #624]	; 20300 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa10>
   2008c:	mov	r3, r4
   20090:	mov	r2, r4
   20094:	ldr	r0, [r4, #204]	; 0xcc
   20098:	add	r1, pc, r1
   2009c:	bl	14064 <fprintf@plt>
   200a0:	ldr	r0, [r4, #204]	; 0xcc
   200a4:	ldr	r3, [r4, #212]	; 0xd4
   200a8:	ldr	r3, [r3, #140]	; 0x8c
   200ac:	cmp	r3, #0
   200b0:	bne	200f4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x804>
   200b4:	ldr	r1, [pc, #584]	; 20304 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa14>
   200b8:	mov	r2, r5
   200bc:	add	r1, pc, r1
   200c0:	bl	14064 <fprintf@plt>
   200c4:	mov	r0, #0
   200c8:	add	sp, sp, #12
   200cc:	ldrd	r4, [sp]
   200d0:	add	sp, sp, #8
   200d4:	pop	{pc}		; (ldr pc, [sp], #4)
   200d8:	ldr	r0, [pc, #552]	; 20308 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa18>
   200dc:	mov	r2, #36	; 0x24
   200e0:	mov	r1, #1
   200e4:	add	r0, pc, r0
   200e8:	bl	13fec <fwrite@plt>
   200ec:	ldr	r3, [r4, #204]	; 0xcc
   200f0:	b	1f970 <__flatcc_fb_gen_common_c_builder_header@@Base+0x80>
   200f4:	mov	r3, r0
   200f8:	ldr	r0, [pc, #524]	; 2030c <__flatcc_fb_gen_common_c_builder_header@@Base+0xa1c>
   200fc:	mov	r2, #36	; 0x24
   20100:	mov	r1, #1
   20104:	add	r0, pc, r0
   20108:	bl	13fec <fwrite@plt>
   2010c:	ldr	r0, [r4, #204]	; 0xcc
   20110:	b	200b4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7c4>
   20114:	ldr	r1, [pc, #500]	; 20310 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa20>
   20118:	mov	r2, r4
   2011c:	ldr	r0, [r4, #204]	; 0xcc
   20120:	add	r1, pc, r1
   20124:	bl	14064 <fprintf@plt>
   20128:	ldr	r1, [pc, #484]	; 20314 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa24>
   2012c:	mov	r2, r4
   20130:	ldr	r0, [r4, #204]	; 0xcc
   20134:	add	r1, pc, r1
   20138:	bl	14064 <fprintf@plt>
   2013c:	b	1fa14 <__flatcc_fb_gen_common_c_builder_header@@Base+0x124>
   20140:	ldr	r1, [pc, #464]	; 20318 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa28>
   20144:	mov	r2, r4
   20148:	ldr	r0, [r4, #204]	; 0xcc
   2014c:	add	r1, pc, r1
   20150:	bl	14064 <fprintf@plt>
   20154:	ldr	r1, [pc, #448]	; 2031c <__flatcc_fb_gen_common_c_builder_header@@Base+0xa2c>
   20158:	mov	r2, r4
   2015c:	ldr	r0, [r4, #204]	; 0xcc
   20160:	add	r1, pc, r1
   20164:	bl	14064 <fprintf@plt>
   20168:	ldr	r1, [pc, #432]	; 20320 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa30>
   2016c:	mov	r2, r4
   20170:	ldr	r0, [r4, #204]	; 0xcc
   20174:	add	r1, pc, r1
   20178:	bl	14064 <fprintf@plt>
   2017c:	ldr	r1, [pc, #416]	; 20324 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa34>
   20180:	mov	r2, r4
   20184:	ldr	r0, [r4, #204]	; 0xcc
   20188:	add	r1, pc, r1
   2018c:	bl	14064 <fprintf@plt>
   20190:	ldr	r1, [pc, #400]	; 20328 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa38>
   20194:	mov	r2, r4
   20198:	ldr	r0, [r4, #204]	; 0xcc
   2019c:	add	r1, pc, r1
   201a0:	bl	14064 <fprintf@plt>
   201a4:	ldr	r1, [pc, #384]	; 2032c <__flatcc_fb_gen_common_c_builder_header@@Base+0xa3c>
   201a8:	mov	r2, r4
   201ac:	ldr	r0, [r4, #204]	; 0xcc
   201b0:	add	r1, pc, r1
   201b4:	bl	14064 <fprintf@plt>
   201b8:	b	1f9cc <__flatcc_fb_gen_common_c_builder_header@@Base+0xdc>
   201bc:	andeq	fp, r2, ip, lsr r5
   201c0:	andeq	fp, r2, r8, asr #10
   201c4:	strdeq	r3, [r2], -r0
   201c8:	andeq	fp, r2, r8, lsr r5
   201cc:	andeq	fp, r2, r8, asr #10
   201d0:	andeq	fp, r2, r8, asr #10
   201d4:	andeq	r9, r2, ip, asr sl
   201d8:	andeq	fp, r2, r4, asr #10
   201dc:	andeq	fp, r2, r8, ror r6
   201e0:	andeq	fp, r2, ip, ror r6
   201e4:	muleq	r2, r0, r9
   201e8:	andeq	fp, r2, r4, asr #13
   201ec:	andeq	fp, r2, r4, lsr #20
   201f0:	ldrdeq	ip, [r2], -r4
   201f4:	andeq	ip, r2, ip, asr #2
   201f8:	strdeq	ip, [r2], -r4
   201fc:			; <UNDEFINED> instruction: 0x0002cfbc
   20200:	andeq	sp, r2, r0, ror #11
   20204:	andeq	sp, r2, r4, asr #20
   20208:	muleq	r2, ip, r1
   2020c:	ldrdeq	lr, [r2], -r0
   20210:	andeq	lr, r2, ip, lsr fp
   20214:			; <UNDEFINED> instruction: 0x0002ecb8
   20218:	strdeq	lr, [r2], -ip
   2021c:	strdeq	pc, [r2], -r0
   20220:	andeq	pc, r2, r0, asr #10
   20224:	andeq	pc, r2, ip, lsl sl	; <UNPREDICTABLE>
   20228:	andeq	pc, r2, r0, lsl fp	; <UNPREDICTABLE>
   2022c:	andeq	pc, r2, r8, asr lr	; <UNPREDICTABLE>
   20230:	andeq	r0, r3, r0, asr #8
   20234:	andeq	r0, r3, r0, ror #11
   20238:	strdeq	r0, [r3], -r4
   2023c:	andeq	r0, r3, r0, lsr #23
   20240:	andeq	r0, r3, ip, asr #28
   20244:	andeq	r1, r3, r8, asr #4
   20248:	andeq	r1, r3, r0, lsr #6
   2024c:	andeq	r1, r3, r0, ror r5
   20250:	ldrdeq	r1, [r3], -r0
   20254:	andeq	r1, r3, r8, lsl #26
   20258:	andeq	r1, r3, r8, lsl #31
   2025c:	andeq	r2, r3, ip, ror #6
   20260:	andeq	r2, r3, ip, asr r4
   20264:	ldrdeq	r2, [r3], -r0
   20268:	andeq	r2, r3, r8, lsl #16
   2026c:	andeq	r2, r3, ip, ror sl
   20270:	strdeq	r2, [r3], -r8
   20274:	muleq	r3, r4, r2
   20278:	andeq	r3, r3, r0, lsl r3
   2027c:	andeq	r3, r3, r8, lsr #6
   20280:	andeq	r3, r3, r8, lsr r3
   20284:	andeq	r3, r3, r0, asr r3
   20288:	andeq	r3, r3, ip, asr r3
   2028c:	andeq	r3, r3, r4, ror r3
   20290:	andeq	r3, r3, r4, lsl #7
   20294:	andeq	r3, r3, r0, lsr #7
   20298:			; <UNDEFINED> instruction: 0x000333b0
   2029c:	andeq	r3, r3, ip, asr #7
   202a0:	ldrdeq	r3, [r3], -ip
   202a4:	strdeq	r3, [r3], -r8
   202a8:	andeq	r3, r3, r8, lsl #8
   202ac:	andeq	r3, r3, r0, lsr #8
   202b0:	andeq	r3, r3, r0, lsr r4
   202b4:	andeq	r3, r3, r8, asr #8
   202b8:	andeq	r3, r3, r8, asr r4
   202bc:	andeq	r3, r3, r0, ror r4
   202c0:	andeq	r3, r3, r0, lsl #9
   202c4:	muleq	r3, r8, r4
   202c8:	andeq	r3, r3, r8, lsr #9
   202cc:	andeq	r3, r3, r0, asr #9
   202d0:			; <UNDEFINED> instruction: 0x000334bc
   202d4:	andeq	r3, r3, r8, asr #9
   202d8:	ldrdeq	r3, [r3], -r0
   202dc:	ldrdeq	r3, [r3], -ip
   202e0:	andeq	r3, r3, ip, ror #9
   202e4:	strdeq	r3, [r3], -ip
   202e8:	andeq	r3, r3, ip, lsl #10
   202ec:	andeq	r3, r3, r8, lsl r5
   202f0:	andeq	r3, r3, r4, lsr #10
   202f4:	andeq	r3, r3, r0, lsr r5
   202f8:	andeq	r3, r3, ip, lsr r5
   202fc:	andeq	r3, r3, r0, asr #10
   20300:	andeq	r3, r3, r4, lsr r5
   20304:	andeq	r3, r3, r8, lsr #10
   20308:	andeq	r3, r2, ip, asr r2
   2030c:	andeq	r9, r2, r0, lsr #1
   20310:	andeq	sl, r2, r8, ror pc
   20314:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   20318:	andeq	sl, r2, r4, asr #27
   2031c:	ldrdeq	sl, [r2], -r8
   20320:	andeq	sl, r2, ip, ror #27
   20324:	andeq	sl, r2, r4, lsl #28
   20328:	andeq	sl, r2, r4, lsr #28
   2032c:	andeq	sl, r2, ip, asr #28

00020330 <__flatcc_fb_gen_c_builder@@Base>:
   20330:	ldr	r3, [r0, #208]	; 0xd0
   20334:	strd	r4, [sp, #-36]!	; 0xffffffdc
   20338:	mov	r4, r0
   2033c:	ldr	r1, [pc, #1928]	; 20acc <__flatcc_fb_gen_c_builder@@Base+0x79c>
   20340:	ldr	r0, [r0, #204]	; 0xcc
   20344:	ldr	r3, [r3, #164]	; 0xa4
   20348:	add	r1, pc, r1
   2034c:	strd	r6, [sp, #8]
   20350:	strd	r8, [sp, #16]
   20354:	strd	sl, [sp, #24]
   20358:	str	lr, [sp, #32]
   2035c:	sub	sp, sp, #284	; 0x11c
   20360:	mov	r2, r3
   20364:	ldr	r5, [pc, #1892]	; 20ad0 <__flatcc_fb_gen_c_builder@@Base+0x7a0>
   20368:	bl	14064 <fprintf@plt>
   2036c:	ldr	r0, [pc, #1888]	; 20ad4 <__flatcc_fb_gen_c_builder@@Base+0x7a4>
   20370:	mov	r2, #81	; 0x51
   20374:	mov	r1, #1
   20378:	ldr	r3, [r4, #204]	; 0xcc
   2037c:	add	r5, pc, r5
   20380:	add	r0, pc, r0
   20384:	bl	13fec <fwrite@plt>
   20388:	ldr	r1, [pc, #1864]	; 20ad8 <__flatcc_fb_gen_c_builder@@Base+0x7a8>
   2038c:	ldr	r0, [r4, #204]	; 0xcc
   20390:	ldr	r3, [r4, #208]	; 0xd0
   20394:	add	r1, pc, r1
   20398:	ldr	r2, [r3, #164]	; 0xa4
   2039c:	bl	14064 <fprintf@plt>
   203a0:	ldr	r1, [pc, #1844]	; 20adc <__flatcc_fb_gen_c_builder@@Base+0x7ac>
   203a4:	ldr	r0, [r4, #204]	; 0xcc
   203a8:	ldr	r3, [r4, #208]	; 0xd0
   203ac:	add	r1, pc, r1
   203b0:	ldr	r2, [r3, #160]	; 0xa0
   203b4:	bl	14064 <fprintf@plt>
   203b8:	mov	r2, #7
   203bc:	mov	r1, #1
   203c0:	ldr	r3, [r4, #204]	; 0xcc
   203c4:	mov	r0, r5
   203c8:	bl	13fec <fwrite@plt>
   203cc:	ldr	r1, [pc, #1804]	; 20ae0 <__flatcc_fb_gen_c_builder@@Base+0x7b0>
   203d0:	add	r2, r4, #102	; 0x66
   203d4:	ldr	r0, [r4, #204]	; 0xcc
   203d8:	add	r1, pc, r1
   203dc:	bl	14064 <fprintf@plt>
   203e0:	ldr	r1, [pc, #1788]	; 20ae4 <__flatcc_fb_gen_c_builder@@Base+0x7b4>
   203e4:	mov	r2, r4
   203e8:	ldr	r0, [r4, #204]	; 0xcc
   203ec:	add	r1, pc, r1
   203f0:	bl	14064 <fprintf@plt>
   203f4:	mov	r2, #7
   203f8:	mov	r1, #1
   203fc:	ldr	r3, [r4, #204]	; 0xcc
   20400:	mov	r0, r5
   20404:	bl	13fec <fwrite@plt>
   20408:	ldr	r2, [pc, #1752]	; 20ae8 <__flatcc_fb_gen_c_builder@@Base+0x7b8>
   2040c:	mov	r0, r4
   20410:	ldr	r1, [pc, #1748]	; 20aec <__flatcc_fb_gen_c_builder@@Base+0x7bc>
   20414:	add	r2, pc, r2
   20418:	add	r1, pc, r1
   2041c:	bl	15fbc <__flatcc_fb_gen_c_includes@@Base>
   20420:	ldr	r0, [r4, #204]	; 0xcc
   20424:	ldr	r3, [r4, #212]	; 0xd4
   20428:	ldr	r3, [r3, #140]	; 0x8c
   2042c:	cmp	r3, #0
   20430:	bne	20a68 <__flatcc_fb_gen_c_builder@@Base+0x738>
   20434:	ldr	ip, [r4, #208]	; 0xd0
   20438:	ldrh	r3, [ip, #16]
   2043c:	cmp	r3, #2
   20440:	beq	20a40 <__flatcc_fb_gen_c_builder@@Base+0x710>
   20444:	ldr	r1, [pc, #1700]	; 20af0 <__flatcc_fb_gen_c_builder@@Base+0x7c0>
   20448:	mov	r3, r4
   2044c:	mov	r2, r4
   20450:	add	r1, pc, r1
   20454:	bl	14064 <fprintf@plt>
   20458:	ldr	r0, [r4, #204]	; 0xcc
   2045c:	ldr	ip, [r4, #208]	; 0xd0
   20460:	ldrh	r3, [ip, #32]
   20464:	cmp	r3, #2
   20468:	beq	20a18 <__flatcc_fb_gen_c_builder@@Base+0x6e8>
   2046c:	ldr	ip, [r4, #212]	; 0xd4
   20470:	mov	r3, r4
   20474:	mov	r2, r4
   20478:	ldr	r1, [pc, #1652]	; 20af4 <__flatcc_fb_gen_c_builder@@Base+0x7c4>
   2047c:	ldr	ip, [ip, #104]	; 0x68
   20480:	add	r1, pc, r1
   20484:	str	ip, [sp]
   20488:	bl	14064 <fprintf@plt>
   2048c:	mov	r0, #10
   20490:	add	fp, sp, #60	; 0x3c
   20494:	ldr	r1, [r4, #204]	; 0xcc
   20498:	bl	140c4 <fputc@plt>
   2049c:	mov	r0, fp
   204a0:	mov	r2, #220	; 0xdc
   204a4:	mov	r1, #0
   204a8:	bl	1407c <memset@plt>
   204ac:	ldr	r3, [r4, #208]	; 0xd0
   204b0:	ldr	r5, [r3, #40]	; 0x28
   204b4:	cmp	r5, #0
   204b8:	beq	20548 <__flatcc_fb_gen_c_builder@@Base+0x218>
   204bc:	ldr	r7, [pc, #1588]	; 20af8 <__flatcc_fb_gen_c_builder@@Base+0x7c8>
   204c0:	mov	r3, #0
   204c4:	ldr	r6, [pc, #1584]	; 20afc <__flatcc_fb_gen_c_builder@@Base+0x7cc>
   204c8:	add	r7, pc, r7
   204cc:	add	r6, pc, r6
   204d0:	ldrh	r2, [r5, #8]
   204d4:	cmp	r2, #3
   204d8:	bne	20524 <__flatcc_fb_gen_c_builder@@Base+0x1f4>
   204dc:	mov	r2, fp
   204e0:	mov	r1, r5
   204e4:	ldr	r0, [r5, #12]
   204e8:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   204ec:	mov	r3, fp
   204f0:	mov	r2, fp
   204f4:	str	fp, [sp]
   204f8:	mov	r1, r7
   204fc:	ldr	r0, [r4, #204]	; 0xcc
   20500:	bl	14064 <fprintf@plt>
   20504:	mov	r3, r4
   20508:	mov	r2, r4
   2050c:	str	fp, [sp]
   20510:	mov	r1, r6
   20514:	str	fp, [sp, #4]
   20518:	ldr	r0, [r4, #204]	; 0xcc
   2051c:	bl	14064 <fprintf@plt>
   20520:	mov	r3, #1
   20524:	ldr	r5, [r5]
   20528:	cmp	r5, #0
   2052c:	bne	204d0 <__flatcc_fb_gen_c_builder@@Base+0x1a0>
   20530:	cmp	r3, #0
   20534:	beq	20544 <__flatcc_fb_gen_c_builder@@Base+0x214>
   20538:	mov	r0, #10
   2053c:	ldr	r1, [r4, #204]	; 0xcc
   20540:	bl	140c4 <fputc@plt>
   20544:	ldr	r3, [r4, #208]	; 0xd0
   20548:	ldr	sl, [r3, #44]	; 0x2c
   2054c:	cmp	sl, #0
   20550:	beq	209a8 <__flatcc_fb_gen_c_builder@@Base+0x678>
   20554:	ldr	r3, [pc, #1444]	; 20b00 <__flatcc_fb_gen_c_builder@@Base+0x7d0>
   20558:	add	r3, pc, r3
   2055c:	str	r3, [sp, #40]	; 0x28
   20560:	ldr	r3, [pc, #1436]	; 20b04 <__flatcc_fb_gen_c_builder@@Base+0x7d4>
   20564:	add	r3, pc, r3
   20568:	str	r3, [sp, #44]	; 0x2c
   2056c:	ldr	r3, [pc, #1428]	; 20b08 <__flatcc_fb_gen_c_builder@@Base+0x7d8>
   20570:	add	r3, pc, r3
   20574:	str	r3, [sp, #48]	; 0x30
   20578:	ldr	r3, [pc, #1420]	; 20b0c <__flatcc_fb_gen_c_builder@@Base+0x7dc>
   2057c:	add	r3, pc, r3
   20580:	str	r3, [sp, #52]	; 0x34
   20584:	mov	r2, #220	; 0xdc
   20588:	mov	r1, #0
   2058c:	mov	r0, fp
   20590:	bl	1407c <memset@plt>
   20594:	ldrh	r5, [sl, #8]
   20598:	cmp	r5, #1
   2059c:	bne	20aa8 <__flatcc_fb_gen_c_builder@@Base+0x778>
   205a0:	mov	r2, fp
   205a4:	mov	r1, sl
   205a8:	ldr	r0, [sl, #12]
   205ac:	mov	r7, sl
   205b0:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   205b4:	ldr	r0, [r7, #20]!
   205b8:	bl	1bfac <__flatcc_gen_sort@@Base+0x40c>
   205bc:	mov	r6, r0
   205c0:	mov	r2, fp
   205c4:	ldr	r1, [sp, #40]	; 0x28
   205c8:	ldr	r0, [r4, #204]	; 0xcc
   205cc:	bl	14064 <fprintf@plt>
   205d0:	mov	r3, r6
   205d4:	mov	r1, r7
   205d8:	str	r5, [sp]
   205dc:	mov	r2, #0
   205e0:	mov	r0, r4
   205e4:	bl	1c86c <__flatcc_gen_sort@@Base+0xccc>
   205e8:	mov	r2, fp
   205ec:	ldr	r1, [sp, #44]	; 0x2c
   205f0:	ldr	r0, [r4, #204]	; 0xcc
   205f4:	bl	14064 <fprintf@plt>
   205f8:	ldr	r0, [sl, #20]
   205fc:	bl	1bfac <__flatcc_gen_sort@@Base+0x40c>
   20600:	subs	r9, r0, #0
   20604:	ble	206ac <__flatcc_fb_gen_c_builder@@Base+0x37c>
   20608:	ldr	r8, [pc, #1280]	; 20b10 <__flatcc_fb_gen_c_builder@@Base+0x7e0>
   2060c:	mov	r5, #0
   20610:	add	r8, pc, r8
   20614:	b	20654 <__flatcc_fb_gen_c_builder@@Base+0x324>
   20618:	cmp	r6, #4
   2061c:	ble	209f8 <__flatcc_fb_gen_c_builder@@Base+0x6c8>
   20620:	ldr	r2, [pc, #1260]	; 20b14 <__flatcc_fb_gen_c_builder@@Base+0x7e4>
   20624:	ldr	r1, [pc, #1260]	; 20b18 <__flatcc_fb_gen_c_builder@@Base+0x7e8>
   20628:	add	r2, pc, r2
   2062c:	add	r1, pc, r1
   20630:	bl	14064 <fprintf@plt>
   20634:	ldr	r0, [r4, #204]	; 0xcc
   20638:	mov	r2, r5
   2063c:	add	r5, r5, #1
   20640:	ldr	r1, [pc, #1236]	; 20b1c <__flatcc_fb_gen_c_builder@@Base+0x7ec>
   20644:	add	r1, pc, r1
   20648:	bl	14064 <fprintf@plt>
   2064c:	cmp	r9, r5
   20650:	beq	206ac <__flatcc_fb_gen_c_builder@@Base+0x37c>
   20654:	cmp	r6, #0
   20658:	ldr	r0, [r4, #204]	; 0xcc
   2065c:	beq	20638 <__flatcc_fb_gen_c_builder@@Base+0x308>
   20660:	cmp	r5, #0
   20664:	beq	20618 <__flatcc_fb_gen_c_builder@@Base+0x2e8>
   20668:	tst	r5, #3
   2066c:	bne	2067c <__flatcc_fb_gen_c_builder@@Base+0x34c>
   20670:	sub	r3, r6, r5
   20674:	cmp	r3, #2
   20678:	bgt	20698 <__flatcc_fb_gen_c_builder@@Base+0x368>
   2067c:	mov	r3, r0
   20680:	mov	r2, #2
   20684:	ldr	r0, [sp, #48]	; 0x30
   20688:	mov	r1, #1
   2068c:	bl	13fec <fwrite@plt>
   20690:	ldr	r0, [r4, #204]	; 0xcc
   20694:	b	20638 <__flatcc_fb_gen_c_builder@@Base+0x308>
   20698:	mov	r1, r8
   2069c:	ldr	r2, [sp, #52]	; 0x34
   206a0:	bl	14064 <fprintf@plt>
   206a4:	ldr	r0, [r4, #204]	; 0xcc
   206a8:	b	20638 <__flatcc_fb_gen_c_builder@@Base+0x308>
   206ac:	mov	r0, #10
   206b0:	ldr	r1, [r4, #204]	; 0xcc
   206b4:	mov	r8, #0
   206b8:	bl	140c4 <fputc@plt>
   206bc:	ldr	r1, [pc, #1116]	; 20b20 <__flatcc_fb_gen_c_builder@@Base+0x7f0>
   206c0:	mov	r3, fp
   206c4:	mov	r2, fp
   206c8:	str	fp, [sp]
   206cc:	mov	r5, #1
   206d0:	ldr	r0, [r4, #204]	; 0xcc
   206d4:	ldr	r9, [pc, #1096]	; 20b24 <__flatcc_fb_gen_c_builder@@Base+0x7f4>
   206d8:	add	r1, pc, r1
   206dc:	bl	14064 <fprintf@plt>
   206e0:	mov	r3, r6
   206e4:	mov	r1, r7
   206e8:	str	r8, [sp]
   206ec:	mov	r2, r8
   206f0:	mov	r0, r4
   206f4:	bl	1c86c <__flatcc_gen_sort@@Base+0xccc>
   206f8:	ldr	r3, [pc, #1064]	; 20b28 <__flatcc_fb_gen_c_builder@@Base+0x7f8>
   206fc:	mov	r2, #4
   20700:	mov	r1, r5
   20704:	add	r9, pc, r9
   20708:	add	r3, pc, r3
   2070c:	mov	r0, r3
   20710:	str	r3, [sp, #32]
   20714:	ldr	r3, [r4, #204]	; 0xcc
   20718:	bl	13fec <fwrite@plt>
   2071c:	mov	r2, r6
   20720:	mov	r1, r7
   20724:	str	r8, [sp]
   20728:	mov	r3, r8
   2072c:	mov	r0, r4
   20730:	bl	1c0a4 <__flatcc_gen_sort@@Base+0x504>
   20734:	mov	r2, #12
   20738:	mov	r1, r5
   2073c:	ldr	r3, [r4, #204]	; 0xcc
   20740:	mov	r0, r9
   20744:	bl	13fec <fwrite@plt>
   20748:	ldr	r1, [pc, #988]	; 20b2c <__flatcc_fb_gen_c_builder@@Base+0x7fc>
   2074c:	mov	r3, fp
   20750:	mov	r2, fp
   20754:	str	fp, [sp]
   20758:	str	fp, [sp, #4]
   2075c:	ldr	r0, [r4, #204]	; 0xcc
   20760:	add	r1, pc, r1
   20764:	bl	14064 <fprintf@plt>
   20768:	ldr	r2, [pc, #960]	; 20b30 <__flatcc_fb_gen_c_builder@@Base+0x800>
   2076c:	mov	r1, r5
   20770:	ldr	r3, [r4, #204]	; 0xcc
   20774:	add	r2, pc, r2
   20778:	mov	r0, r2
   2077c:	str	r2, [sp, #36]	; 0x24
   20780:	mov	r2, #2
   20784:	bl	13fec <fwrite@plt>
   20788:	mov	r2, r6
   2078c:	mov	r1, r7
   20790:	str	r5, [sp]
   20794:	mov	r3, r8
   20798:	mov	r0, r4
   2079c:	bl	1c0a4 <__flatcc_gen_sort@@Base+0x504>
   207a0:	mov	r1, r5
   207a4:	mov	r2, #12
   207a8:	ldr	r3, [r4, #204]	; 0xcc
   207ac:	mov	r0, r9
   207b0:	bl	13fec <fwrite@plt>
   207b4:	ldr	r1, [pc, #888]	; 20b34 <__flatcc_fb_gen_c_builder@@Base+0x804>
   207b8:	mov	r3, fp
   207bc:	mov	r2, fp
   207c0:	str	fp, [sp]
   207c4:	ldr	r0, [r4, #204]	; 0xcc
   207c8:	add	r1, pc, r1
   207cc:	bl	14064 <fprintf@plt>
   207d0:	mov	r3, r6
   207d4:	mov	r1, r7
   207d8:	str	r8, [sp]
   207dc:	mov	r2, r8
   207e0:	mov	r0, r4
   207e4:	bl	1c86c <__flatcc_gen_sort@@Base+0xccc>
   207e8:	mov	r1, r5
   207ec:	mov	r2, #4
   207f0:	ldr	r0, [sp, #32]
   207f4:	ldr	r3, [r4, #204]	; 0xcc
   207f8:	bl	13fec <fwrite@plt>
   207fc:	mov	r2, r6
   20800:	mov	r1, r7
   20804:	str	r8, [sp]
   20808:	mov	r3, #2
   2080c:	mov	r0, r4
   20810:	bl	1c0a4 <__flatcc_gen_sort@@Base+0x504>
   20814:	mov	r1, r5
   20818:	mov	r2, #12
   2081c:	ldr	r3, [r4, #204]	; 0xcc
   20820:	mov	r0, r9
   20824:	bl	13fec <fwrite@plt>
   20828:	ldr	r1, [pc, #776]	; 20b38 <__flatcc_fb_gen_c_builder@@Base+0x808>
   2082c:	mov	r3, fp
   20830:	mov	r2, fp
   20834:	str	fp, [sp]
   20838:	str	fp, [sp, #4]
   2083c:	ldr	r0, [r4, #204]	; 0xcc
   20840:	add	r1, pc, r1
   20844:	bl	14064 <fprintf@plt>
   20848:	mov	r1, r5
   2084c:	mov	r2, #2
   20850:	ldr	r0, [sp, #36]	; 0x24
   20854:	ldr	r3, [r4, #204]	; 0xcc
   20858:	bl	13fec <fwrite@plt>
   2085c:	mov	r2, r6
   20860:	mov	r1, r7
   20864:	str	r5, [sp]
   20868:	mov	r3, #2
   2086c:	mov	r0, r4
   20870:	bl	1c0a4 <__flatcc_gen_sort@@Base+0x504>
   20874:	mov	r1, r5
   20878:	mov	r2, #12
   2087c:	ldr	r3, [r4, #204]	; 0xcc
   20880:	mov	r0, r9
   20884:	bl	13fec <fwrite@plt>
   20888:	ldr	r1, [pc, #684]	; 20b3c <__flatcc_fb_gen_c_builder@@Base+0x80c>
   2088c:	mov	r3, fp
   20890:	mov	r2, fp
   20894:	str	fp, [sp]
   20898:	ldr	r0, [r4, #204]	; 0xcc
   2089c:	add	r1, pc, r1
   208a0:	bl	14064 <fprintf@plt>
   208a4:	mov	r3, r6
   208a8:	mov	r1, r7
   208ac:	str	r8, [sp]
   208b0:	mov	r2, r8
   208b4:	mov	r0, r4
   208b8:	bl	1c86c <__flatcc_gen_sort@@Base+0xccc>
   208bc:	mov	r1, r5
   208c0:	mov	r2, #4
   208c4:	ldr	r0, [sp, #32]
   208c8:	ldr	r3, [r4, #204]	; 0xcc
   208cc:	bl	13fec <fwrite@plt>
   208d0:	mov	r2, r6
   208d4:	mov	r1, r7
   208d8:	str	r8, [sp]
   208dc:	mov	r3, r5
   208e0:	mov	r0, r4
   208e4:	bl	1c0a4 <__flatcc_gen_sort@@Base+0x504>
   208e8:	mov	r1, r5
   208ec:	mov	r2, #12
   208f0:	ldr	r3, [r4, #204]	; 0xcc
   208f4:	mov	r0, r9
   208f8:	bl	13fec <fwrite@plt>
   208fc:	ldr	r1, [pc, #572]	; 20b40 <__flatcc_fb_gen_c_builder@@Base+0x810>
   20900:	mov	r3, fp
   20904:	mov	r2, fp
   20908:	str	fp, [sp]
   2090c:	str	fp, [sp, #4]
   20910:	ldr	r0, [r4, #204]	; 0xcc
   20914:	add	r1, pc, r1
   20918:	bl	14064 <fprintf@plt>
   2091c:	mov	r1, r5
   20920:	mov	r2, #2
   20924:	ldr	r0, [sp, #36]	; 0x24
   20928:	ldr	r3, [r4, #204]	; 0xcc
   2092c:	bl	13fec <fwrite@plt>
   20930:	mov	r2, r6
   20934:	mov	r1, r7
   20938:	str	r5, [sp]
   2093c:	mov	r3, r5
   20940:	mov	r0, r4
   20944:	bl	1c0a4 <__flatcc_gen_sort@@Base+0x504>
   20948:	mov	r1, r5
   2094c:	mov	r2, #12
   20950:	ldr	r3, [r4, #204]	; 0xcc
   20954:	mov	r0, r9
   20958:	bl	13fec <fwrite@plt>
   2095c:	str	fp, [sp, #20]
   20960:	mov	r3, r4
   20964:	mov	r2, r4
   20968:	str	fp, [sp, #24]
   2096c:	ldrh	ip, [sl, #104]	; 0x68
   20970:	ldr	r1, [pc, #460]	; 20b44 <__flatcc_fb_gen_c_builder@@Base+0x814>
   20974:	ldr	r0, [r4, #204]	; 0xcc
   20978:	str	ip, [sp, #16]
   2097c:	ldrd	r6, [sl, #112]	; 0x70
   20980:	add	r1, pc, r1
   20984:	str	fp, [sp]
   20988:	strd	r6, [sp, #8]
   2098c:	bl	14064 <fprintf@plt>
   20990:	mov	r0, #10
   20994:	ldr	r1, [r4, #204]	; 0xcc
   20998:	bl	140c4 <fputc@plt>
   2099c:	ldr	sl, [sl, #120]	; 0x78
   209a0:	cmp	sl, r8
   209a4:	bne	20584 <__flatcc_fb_gen_c_builder@@Base+0x254>
   209a8:	mov	r0, r4
   209ac:	bl	1e7a8 <__flatcc_gen_sort@@Base+0x2c08>
   209b0:	ldr	r0, [r4, #204]	; 0xcc
   209b4:	ldr	r3, [r4, #212]	; 0xd4
   209b8:	ldr	r3, [r3, #140]	; 0x8c
   209bc:	cmp	r3, #0
   209c0:	bne	20a88 <__flatcc_fb_gen_c_builder@@Base+0x758>
   209c4:	ldr	r3, [r4, #208]	; 0xd0
   209c8:	ldr	r1, [pc, #376]	; 20b48 <__flatcc_fb_gen_c_builder@@Base+0x818>
   209cc:	ldr	r2, [r3, #164]	; 0xa4
   209d0:	add	r1, pc, r1
   209d4:	bl	14064 <fprintf@plt>
   209d8:	mov	r0, #0
   209dc:	add	sp, sp, #284	; 0x11c
   209e0:	ldrd	r4, [sp]
   209e4:	ldrd	r6, [sp, #8]
   209e8:	ldrd	r8, [sp, #16]
   209ec:	ldrd	sl, [sp, #24]
   209f0:	add	sp, sp, #32
   209f4:	pop	{pc}		; (ldr pc, [sp], #4)
   209f8:	mov	r3, r0
   209fc:	ldr	r0, [pc, #328]	; 20b4c <__flatcc_fb_gen_c_builder@@Base+0x81c>
   20a00:	mov	r2, #2
   20a04:	mov	r1, #1
   20a08:	add	r0, pc, r0
   20a0c:	bl	13fec <fwrite@plt>
   20a10:	ldr	r0, [r4, #204]	; 0xcc
   20a14:	b	20638 <__flatcc_fb_gen_c_builder@@Base+0x308>
   20a18:	ldr	lr, [ip, #24]
   20a1c:	mov	r3, r4
   20a20:	mov	r2, r4
   20a24:	ldr	r1, [pc, #292]	; 20b50 <__flatcc_fb_gen_c_builder@@Base+0x820>
   20a28:	str	lr, [sp, #4]
   20a2c:	ldr	ip, [ip, #28]
   20a30:	add	r1, pc, r1
   20a34:	str	ip, [sp]
   20a38:	bl	14064 <fprintf@plt>
   20a3c:	b	2048c <__flatcc_fb_gen_c_builder@@Base+0x15c>
   20a40:	ldr	lr, [ip, #8]
   20a44:	mov	r3, r4
   20a48:	mov	r2, r4
   20a4c:	ldr	r1, [pc, #256]	; 20b54 <__flatcc_fb_gen_c_builder@@Base+0x824>
   20a50:	str	lr, [sp, #4]
   20a54:	ldr	ip, [ip, #12]
   20a58:	add	r1, pc, r1
   20a5c:	str	ip, [sp]
   20a60:	bl	14064 <fprintf@plt>
   20a64:	b	20458 <__flatcc_fb_gen_c_builder@@Base+0x128>
   20a68:	mov	r3, r0
   20a6c:	ldr	r0, [pc, #228]	; 20b58 <__flatcc_fb_gen_c_builder@@Base+0x828>
   20a70:	mov	r2, #36	; 0x24
   20a74:	mov	r1, #1
   20a78:	add	r0, pc, r0
   20a7c:	bl	13fec <fwrite@plt>
   20a80:	ldr	r0, [r4, #204]	; 0xcc
   20a84:	b	20434 <__flatcc_fb_gen_c_builder@@Base+0x104>
   20a88:	mov	r3, r0
   20a8c:	ldr	r0, [pc, #200]	; 20b5c <__flatcc_fb_gen_c_builder@@Base+0x82c>
   20a90:	mov	r2, #36	; 0x24
   20a94:	mov	r1, #1
   20a98:	add	r0, pc, r0
   20a9c:	bl	13fec <fwrite@plt>
   20aa0:	ldr	r0, [r4, #204]	; 0xcc
   20aa4:	b	209c4 <__flatcc_fb_gen_c_builder@@Base+0x694>
   20aa8:	ldr	r3, [pc, #176]	; 20b60 <__flatcc_fb_gen_c_builder@@Base+0x830>
   20aac:	movw	r2, #1010	; 0x3f2
   20ab0:	ldr	r1, [pc, #172]	; 20b64 <__flatcc_fb_gen_c_builder@@Base+0x834>
   20ab4:	ldr	r0, [pc, #172]	; 20b68 <__flatcc_fb_gen_c_builder@@Base+0x838>
   20ab8:	add	r3, pc, r3
   20abc:	add	r3, r3, #208	; 0xd0
   20ac0:	add	r1, pc, r1
   20ac4:	add	r0, pc, r0
   20ac8:	bl	14118 <__assert_fail@plt>
   20acc:	andeq	r3, r3, r0, asr #5
   20ad0:	andeq	r9, r2, ip, lsl #1
   20ad4:	andeq	r2, r2, ip, lsr #29
   20ad8:	andeq	r3, r3, r0, lsr #5
   20adc:	andeq	r3, r3, r0, lsr #5
   20ae0:	andeq	sl, r2, r4, ror sl
   20ae4:	andeq	r3, r3, r8, ror r2
   20ae8:	andeq	r3, r3, r0, ror r2
   20aec:	andeq	r1, r2, r8, lsr #13
   20af0:	andeq	r9, r2, r8, lsr #32
   20af4:	andeq	r9, r2, ip, asr r0
   20af8:	andeq	r3, r3, r8, asr #3
   20afc:	andeq	r3, r3, ip, lsl #4
   20b00:	andeq	sl, r2, r8, lsr #8
   20b04:	andeq	sl, r2, r8, lsr r4
   20b08:	andeq	r9, r2, r8, lsr #27
   20b0c:	andeq	r4, r2, ip, asr r5
   20b10:	andeq	r9, r2, r0, lsl #26
   20b14:			; <UNDEFINED> instruction: 0x000244b0
   20b18:	andeq	r9, r2, r4, ror #25
   20b1c:	ldrdeq	r9, [r2], -r8
   20b20:	andeq	r3, r3, r8, lsr #32
   20b24:	andeq	r3, r3, ip, lsr #32
   20b28:	andeq	r3, r3, r0, lsr #32
   20b2c:	andeq	r2, r3, r0, ror #31
   20b30:	andeq	r3, r3, r4
   20b34:			; <UNDEFINED> instruction: 0x00032fb4
   20b38:	andeq	r2, r3, r8, ror #30
   20b3c:	andeq	r2, r3, r8, asr #30
   20b40:	andeq	r2, r3, r0, lsl #30
   20b44:	ldrdeq	r2, [r3], -r4
   20b48:	andeq	r2, r3, ip, asr #29
   20b4c:	andeq	r9, r2, r0, lsl r9
   20b50:	andeq	r8, r2, ip, ror sl
   20b54:	andeq	r8, r2, ip, ror #19
   20b58:	andeq	r2, r2, r8, asr #17
   20b5c:	andeq	r8, r2, ip, lsl #14
   20b60:	andeq	r9, r2, r8, asr #10
   20b64:			; <UNDEFINED> instruction: 0x000296b4
   20b68:	andeq	r2, r2, r4, ror r1
   20b6c:	ldr	r3, [pc, #1396]	; 210e8 <__flatcc_fb_gen_c_builder@@Base+0xdb8>
   20b70:	mov	r2, #220	; 0xdc
   20b74:	strd	r4, [sp, #-36]!	; 0xffffffdc
   20b78:	mov	r4, r1
   20b7c:	mov	r1, #0
   20b80:	strd	r6, [sp, #8]
   20b84:	strd	r8, [sp, #16]
   20b88:	mov	r9, r0
   20b8c:	strd	sl, [sp, #24]
   20b90:	str	lr, [sp, #32]
   20b94:	sub	sp, sp, #516	; 0x204
   20b98:	add	r3, pc, r3
   20b9c:	add	r8, sp, #72	; 0x48
   20ba0:	add	fp, sp, #292	; 0x124
   20ba4:	mov	r0, r8
   20ba8:	str	r3, [sp, #68]	; 0x44
   20bac:	bl	1407c <memset@plt>
   20bb0:	mov	r2, #220	; 0xdc
   20bb4:	mov	r1, #0
   20bb8:	mov	r0, fp
   20bbc:	bl	1407c <memset@plt>
   20bc0:	mov	r1, r4
   20bc4:	mov	r2, r8
   20bc8:	ldr	r0, [r4, #12]
   20bcc:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   20bd0:	ldr	r1, [pc, #1300]	; 210ec <__flatcc_fb_gen_c_builder@@Base+0xdbc>
   20bd4:	mov	r2, r8
   20bd8:	ldr	r0, [r9, #204]	; 0xcc
   20bdc:	add	r1, pc, r1
   20be0:	bl	14064 <fprintf@plt>
   20be4:	ldr	r4, [r4, #20]
   20be8:	cmp	r4, #0
   20bec:	beq	21038 <__flatcc_fb_gen_c_builder@@Base+0xd08>
   20bf0:	ldr	r3, [pc, #1272]	; 210f0 <__flatcc_fb_gen_c_builder@@Base+0xdc0>
   20bf4:	mov	r1, #1
   20bf8:	str	r8, [sp, #56]	; 0x38
   20bfc:	ldr	sl, [pc, #1264]	; 210f4 <__flatcc_fb_gen_c_builder@@Base+0xdc4>
   20c00:	add	r3, pc, r3
   20c04:	str	r3, [sp, #60]	; 0x3c
   20c08:	add	sl, pc, sl
   20c0c:	ldr	r3, [pc, #1252]	; 210f8 <__flatcc_fb_gen_c_builder@@Base+0xdc8>
   20c10:	add	r3, pc, r3
   20c14:	str	r3, [sp, #64]	; 0x40
   20c18:	ldr	r3, [r9, #204]	; 0xcc
   20c1c:	ldrh	r2, [r4, #72]	; 0x48
   20c20:	tst	r2, #4
   20c24:	bne	20d2c <__flatcc_fb_gen_c_builder@@Base+0x9fc>
   20c28:	cmp	r1, #0
   20c2c:	beq	20f50 <__flatcc_fb_gen_c_builder@@Base+0xc20>
   20c30:	ldr	r0, [pc, #1220]	; 210fc <__flatcc_fb_gen_c_builder@@Base+0xdcc>
   20c34:	mov	r2, #28
   20c38:	mov	r1, #1
   20c3c:	add	r0, pc, r0
   20c40:	bl	13fec <fwrite@plt>
   20c44:	ldrh	r3, [r4, #24]
   20c48:	ldrh	r5, [r4, #72]	; 0x48
   20c4c:	sub	r3, r3, #7
   20c50:	ubfx	r5, r5, #8, #1
   20c54:	cmp	r3, #8
   20c58:	addls	pc, pc, r3, lsl #2
   20c5c:	b	20d0c <__flatcc_fb_gen_c_builder@@Base+0x9dc>
   20c60:	b	20dfc <__flatcc_fb_gen_c_builder@@Base+0xacc>
   20c64:	b	20e4c <__flatcc_fb_gen_c_builder@@Base+0xb1c>
   20c68:	b	20cf4 <__flatcc_fb_gen_c_builder@@Base+0x9c4>
   20c6c:	b	20e74 <__flatcc_fb_gen_c_builder@@Base+0xb44>
   20c70:	b	20d0c <__flatcc_fb_gen_c_builder@@Base+0x9dc>
   20c74:	b	20d0c <__flatcc_fb_gen_c_builder@@Base+0x9dc>
   20c78:	b	20d0c <__flatcc_fb_gen_c_builder@@Base+0x9dc>
   20c7c:	b	20cbc <__flatcc_fb_gen_c_builder@@Base+0x98c>
   20c80:	b	20c84 <__flatcc_fb_gen_c_builder@@Base+0x954>
   20c84:	ldr	r1, [r4, #16]
   20c88:	mov	r2, fp
   20c8c:	ldr	r0, [r1, #12]
   20c90:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   20c94:	ldr	r3, [r4, #16]
   20c98:	ldrh	r3, [r3, #8]
   20c9c:	cmp	r3, #4
   20ca0:	addls	pc, pc, r3, lsl #2
   20ca4:	b	21040 <__flatcc_fb_gen_c_builder@@Base+0xd10>
   20ca8:	b	20f04 <__flatcc_fb_gen_c_builder@@Base+0xbd4>
   20cac:	b	20ec4 <__flatcc_fb_gen_c_builder@@Base+0xb94>
   20cb0:	b	21040 <__flatcc_fb_gen_c_builder@@Base+0xd10>
   20cb4:	b	20ec4 <__flatcc_fb_gen_c_builder@@Base+0xb94>
   20cb8:	b	20eac <__flatcc_fb_gen_c_builder@@Base+0xb7c>
   20cbc:	ldr	r1, [r4, #16]
   20cc0:	mov	r2, fp
   20cc4:	ldr	r0, [r1, #12]
   20cc8:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   20ccc:	ldr	r3, [r4, #16]
   20cd0:	ldrh	r3, [r3, #8]
   20cd4:	cmp	r3, #4
   20cd8:	addls	pc, pc, r3, lsl #2
   20cdc:	b	21094 <__flatcc_fb_gen_c_builder@@Base+0xd64>
   20ce0:	b	20f34 <__flatcc_fb_gen_c_builder@@Base+0xc04>
   20ce4:	b	20f20 <__flatcc_fb_gen_c_builder@@Base+0xbf0>
   20ce8:	b	21094 <__flatcc_fb_gen_c_builder@@Base+0xd64>
   20cec:	b	20f20 <__flatcc_fb_gen_c_builder@@Base+0xbf0>
   20cf0:	b	20e90 <__flatcc_fb_gen_c_builder@@Base+0xb60>
   20cf4:	ldr	r1, [pc, #1028]	; 21100 <__flatcc_fb_gen_c_builder@@Base+0xdd0>
   20cf8:	ldrd	r2, [r4, #96]	; 0x60
   20cfc:	str	r5, [sp]
   20d00:	ldr	r0, [r9, #204]	; 0xcc
   20d04:	add	r1, pc, r1
   20d08:	bl	14064 <fprintf@plt>
   20d0c:	ldr	r2, [r4, #4]
   20d10:	mov	r1, sl
   20d14:	ldr	r0, [r9, #204]	; 0xcc
   20d18:	ldr	r3, [r2]
   20d1c:	ldr	r2, [r2, #4]
   20d20:	bl	14064 <fprintf@plt>
   20d24:	ldr	r3, [r9, #204]	; 0xcc
   20d28:	mov	r1, #0
   20d2c:	ldr	r4, [r4]
   20d30:	cmp	r4, #0
   20d34:	bne	20c1c <__flatcc_fb_gen_c_builder@@Base+0x8ec>
   20d38:	cmp	r1, #0
   20d3c:	ldr	r8, [sp, #56]	; 0x38
   20d40:	beq	21024 <__flatcc_fb_gen_c_builder@@Base+0xcf4>
   20d44:	ldr	r0, [pc, #952]	; 21104 <__flatcc_fb_gen_c_builder@@Base+0xdd4>
   20d48:	mov	r2, #29
   20d4c:	mov	r1, #1
   20d50:	add	r0, pc, r0
   20d54:	bl	13fec <fwrite@plt>
   20d58:	ldr	r0, [pc, #936]	; 21108 <__flatcc_fb_gen_c_builder@@Base+0xdd8>
   20d5c:	mov	r2, #3
   20d60:	mov	r1, #1
   20d64:	ldr	r3, [r9, #204]	; 0xcc
   20d68:	add	r0, pc, r0
   20d6c:	bl	13fec <fwrite@plt>
   20d70:	ldr	r1, [pc, #916]	; 2110c <__flatcc_fb_gen_c_builder@@Base+0xddc>
   20d74:	mov	r3, r8
   20d78:	mov	r2, r8
   20d7c:	str	r8, [sp]
   20d80:	ldr	r0, [r9, #204]	; 0xcc
   20d84:	add	r1, pc, r1
   20d88:	bl	14064 <fprintf@plt>
   20d8c:	ldr	r1, [pc, #892]	; 21110 <__flatcc_fb_gen_c_builder@@Base+0xde0>
   20d90:	mov	r3, r8
   20d94:	mov	r2, r8
   20d98:	str	r8, [sp]
   20d9c:	ldr	r0, [r9, #204]	; 0xcc
   20da0:	add	r1, pc, r1
   20da4:	bl	14064 <fprintf@plt>
   20da8:	ldr	r1, [pc, #868]	; 21114 <__flatcc_fb_gen_c_builder@@Base+0xde4>
   20dac:	mov	r3, r8
   20db0:	mov	r2, r8
   20db4:	ldr	r0, [r9, #204]	; 0xcc
   20db8:	add	r1, pc, r1
   20dbc:	bl	14064 <fprintf@plt>
   20dc0:	ldr	r1, [pc, #848]	; 21118 <__flatcc_fb_gen_c_builder@@Base+0xde8>
   20dc4:	mov	r2, r8
   20dc8:	mov	r3, r9
   20dcc:	str	r8, [sp]
   20dd0:	ldr	r0, [r9, #204]	; 0xcc
   20dd4:	add	r1, pc, r1
   20dd8:	bl	14064 <fprintf@plt>
   20ddc:	mov	r0, #0
   20de0:	add	sp, sp, #516	; 0x204
   20de4:	ldrd	r4, [sp]
   20de8:	ldrd	r6, [sp, #8]
   20dec:	ldrd	r8, [sp, #16]
   20df0:	ldrd	sl, [sp, #24]
   20df4:	add	sp, sp, #32
   20df8:	pop	{pc}		; (ldr pc, [sp], #4)
   20dfc:	ldr	r1, [r4, #104]	; 0x68
   20e00:	cmp	r1, #0
   20e04:	beq	20f68 <__flatcc_fb_gen_c_builder@@Base+0xc38>
   20e08:	mov	r2, fp
   20e0c:	ldr	r0, [r1, #12]
   20e10:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   20e14:	ldr	r3, [r4, #104]	; 0x68
   20e18:	ldrh	r3, [r3, #8]
   20e1c:	cmp	r3, #0
   20e20:	bne	20fcc <__flatcc_fb_gen_c_builder@@Base+0xc9c>
   20e24:	ldr	r1, [pc, #752]	; 2111c <__flatcc_fb_gen_c_builder@@Base+0xdec>
   20e28:	ldrd	r2, [r4, #96]	; 0x60
   20e2c:	str	fp, [sp, #8]
   20e30:	ldrh	ip, [r4, #74]	; 0x4a
   20e34:	add	r1, pc, r1
   20e38:	str	r5, [sp]
   20e3c:	ldr	r0, [r9, #204]	; 0xcc
   20e40:	str	ip, [sp, #4]
   20e44:	bl	14064 <fprintf@plt>
   20e48:	b	20d0c <__flatcc_fb_gen_c_builder@@Base+0x9dc>
   20e4c:	ldr	r1, [pc, #716]	; 21120 <__flatcc_fb_gen_c_builder@@Base+0xdf0>
   20e50:	ldrh	r0, [r4, #74]	; 0x4a
   20e54:	ldrd	r2, [r4, #96]	; 0x60
   20e58:	add	r1, pc, r1
   20e5c:	str	r0, [sp, #8]
   20e60:	ldrd	r6, [r4, #88]	; 0x58
   20e64:	ldr	r0, [r9, #204]	; 0xcc
   20e68:	strd	r6, [sp]
   20e6c:	bl	14064 <fprintf@plt>
   20e70:	b	20d0c <__flatcc_fb_gen_c_builder@@Base+0x9dc>
   20e74:	ldr	r1, [pc, #680]	; 21124 <__flatcc_fb_gen_c_builder@@Base+0xdf4>
   20e78:	ldrd	r2, [r4, #96]	; 0x60
   20e7c:	str	r5, [sp]
   20e80:	ldr	r0, [r9, #204]	; 0xcc
   20e84:	add	r1, pc, r1
   20e88:	bl	14064 <fprintf@plt>
   20e8c:	b	20d0c <__flatcc_fb_gen_c_builder@@Base+0x9dc>
   20e90:	ldr	r1, [pc, #656]	; 21128 <__flatcc_fb_gen_c_builder@@Base+0xdf8>
   20e94:	ldrd	r2, [r4, #96]	; 0x60
   20e98:	stm	sp, {r5, fp}
   20e9c:	ldr	r0, [r9, #204]	; 0xcc
   20ea0:	add	r1, pc, r1
   20ea4:	bl	14064 <fprintf@plt>
   20ea8:	b	20d0c <__flatcc_fb_gen_c_builder@@Base+0x9dc>
   20eac:	ldr	r1, [sp, #60]	; 0x3c
   20eb0:	ldrd	r2, [r4, #96]	; 0x60
   20eb4:	stm	sp, {r5, fp}
   20eb8:	ldr	r0, [r9, #204]	; 0xcc
   20ebc:	bl	14064 <fprintf@plt>
   20ec0:	b	20d0c <__flatcc_fb_gen_c_builder@@Base+0x9dc>
   20ec4:	ldrd	r6, [r4, #88]	; 0x58
   20ec8:	ldrd	r2, [r4, #96]	; 0x60
   20ecc:	ldrh	r8, [r4, #74]	; 0x4a
   20ed0:	strd	r2, [sp, #40]	; 0x28
   20ed4:	orrs	r3, r6, r7
   20ed8:	ldr	r3, [r9, #204]	; 0xcc
   20edc:	str	r3, [sp, #36]	; 0x24
   20ee0:	bne	21008 <__flatcc_fb_gen_c_builder@@Base+0xcd8>
   20ee4:	mvn	r2, #0
   20ee8:	mov	r3, #0
   20eec:	strd	r2, [sp, #48]	; 0x30
   20ef0:	str	r5, [sp]
   20ef4:	ldr	r0, [sp, #36]	; 0x24
   20ef8:	ldrd	r2, [sp, #40]	; 0x28
   20efc:	ldr	r1, [sp, #64]	; 0x40
   20f00:	b	20fb4 <__flatcc_fb_gen_c_builder@@Base+0xc84>
   20f04:	ldr	r1, [pc, #544]	; 2112c <__flatcc_fb_gen_c_builder@@Base+0xdfc>
   20f08:	ldrd	r2, [r4, #96]	; 0x60
   20f0c:	stm	sp, {r5, fp}
   20f10:	ldr	r0, [r9, #204]	; 0xcc
   20f14:	add	r1, pc, r1
   20f18:	bl	14064 <fprintf@plt>
   20f1c:	b	20d0c <__flatcc_fb_gen_c_builder@@Base+0x9dc>
   20f20:	ldr	r1, [pc, #520]	; 21130 <__flatcc_fb_gen_c_builder@@Base+0xe00>
   20f24:	ldrh	r0, [r4, #74]	; 0x4a
   20f28:	ldrd	r2, [r4, #96]	; 0x60
   20f2c:	add	r1, pc, r1
   20f30:	b	20e5c <__flatcc_fb_gen_c_builder@@Base+0xb2c>
   20f34:	ldr	r1, [pc, #504]	; 21134 <__flatcc_fb_gen_c_builder@@Base+0xe04>
   20f38:	ldrd	r2, [r4, #96]	; 0x60
   20f3c:	stm	sp, {r5, fp}
   20f40:	ldr	r0, [r9, #204]	; 0xcc
   20f44:	add	r1, pc, r1
   20f48:	bl	14064 <fprintf@plt>
   20f4c:	b	20d0c <__flatcc_fb_gen_c_builder@@Base+0x9dc>
   20f50:	ldr	r0, [pc, #480]	; 21138 <__flatcc_fb_gen_c_builder@@Base+0xe08>
   20f54:	mov	r2, #30
   20f58:	mov	r1, #1
   20f5c:	add	r0, pc, r0
   20f60:	bl	13fec <fwrite@plt>
   20f64:	b	20c44 <__flatcc_fb_gen_c_builder@@Base+0x914>
   20f68:	ldrd	r6, [r4, #88]	; 0x58
   20f6c:	ldrd	r2, [r4, #96]	; 0x60
   20f70:	ldrh	r8, [r4, #74]	; 0x4a
   20f74:	strd	r2, [sp, #40]	; 0x28
   20f78:	orrs	r3, r6, r7
   20f7c:	ldr	r3, [r9, #204]	; 0xcc
   20f80:	str	r3, [sp, #36]	; 0x24
   20f84:	beq	20ff8 <__flatcc_fb_gen_c_builder@@Base+0xcc8>
   20f88:	mov	r2, r6
   20f8c:	mov	r3, r7
   20f90:	mvn	r0, #0
   20f94:	mov	r1, #0
   20f98:	bl	3feac <fb_value_set_visit@@Base+0x684>
   20f9c:	strd	r0, [sp, #48]	; 0x30
   20fa0:	ldr	r1, [pc, #404]	; 2113c <__flatcc_fb_gen_c_builder@@Base+0xe0c>
   20fa4:	str	r5, [sp]
   20fa8:	ldr	r0, [sp, #36]	; 0x24
   20fac:	ldrd	r2, [sp, #40]	; 0x28
   20fb0:	add	r1, pc, r1
   20fb4:	strd	r6, [sp, #8]
   20fb8:	ldrd	r6, [sp, #48]	; 0x30
   20fbc:	str	r8, [sp, #16]
   20fc0:	strd	r6, [sp, #24]
   20fc4:	bl	14064 <fprintf@plt>
   20fc8:	b	20d0c <__flatcc_fb_gen_c_builder@@Base+0x9dc>
   20fcc:	ldrh	r0, [r4, #74]	; 0x4a
   20fd0:	ldr	r1, [pc, #360]	; 21140 <__flatcc_fb_gen_c_builder@@Base+0xe10>
   20fd4:	ldrd	r2, [r4, #96]	; 0x60
   20fd8:	str	r0, [sp, #16]
   20fdc:	ldrd	r6, [r4, #88]	; 0x58
   20fe0:	add	r1, pc, r1
   20fe4:	str	r5, [sp]
   20fe8:	ldr	r0, [r9, #204]	; 0xcc
   20fec:	strd	r6, [sp, #8]
   20ff0:	bl	14064 <fprintf@plt>
   20ff4:	b	20d0c <__flatcc_fb_gen_c_builder@@Base+0x9dc>
   20ff8:	mvn	r2, #0
   20ffc:	mov	r3, #0
   21000:	strd	r2, [sp, #48]	; 0x30
   21004:	b	20fa0 <__flatcc_fb_gen_c_builder@@Base+0xc70>
   21008:	mov	r2, r6
   2100c:	mov	r3, r7
   21010:	mvn	r0, #0
   21014:	mov	r1, #0
   21018:	bl	3feac <fb_value_set_visit@@Base+0x684>
   2101c:	strd	r0, [sp, #48]	; 0x30
   21020:	b	20ef0 <__flatcc_fb_gen_c_builder@@Base+0xbc0>
   21024:	ldr	r0, [pc, #280]	; 21144 <__flatcc_fb_gen_c_builder@@Base+0xe14>
   21028:	mov	r2, #15
   2102c:	mov	r1, #1
   21030:	add	r0, pc, r0
   21034:	bl	13fec <fwrite@plt>
   21038:	ldr	r3, [r9, #204]	; 0xcc
   2103c:	b	20d44 <__flatcc_fb_gen_c_builder@@Base+0xa14>
   21040:	ldr	r2, [pc, #256]	; 21148 <__flatcc_fb_gen_c_builder@@Base+0xe18>
   21044:	mov	r3, #202	; 0xca
   21048:	ldr	r1, [sp, #68]	; 0x44
   2104c:	ldr	r0, [pc, #248]	; 2114c <__flatcc_fb_gen_c_builder@@Base+0xe1c>
   21050:	ldr	r4, [pc, #248]	; 21150 <__flatcc_fb_gen_c_builder@@Base+0xe20>
   21054:	ldr	ip, [r1, r2]
   21058:	add	r0, pc, r0
   2105c:	ldr	r1, [pc, #240]	; 21154 <__flatcc_fb_gen_c_builder@@Base+0xe24>
   21060:	add	r4, pc, r4
   21064:	str	r0, [sp]
   21068:	mov	r2, r4
   2106c:	ldr	r0, [ip]
   21070:	add	r1, pc, r1
   21074:	bl	14064 <fprintf@plt>
   21078:	ldr	r3, [pc, #216]	; 21158 <__flatcc_fb_gen_c_builder@@Base+0xe28>
   2107c:	mov	r1, r4
   21080:	mov	r2, #202	; 0xca
   21084:	ldr	r0, [pc, #208]	; 2115c <__flatcc_fb_gen_c_builder@@Base+0xe2c>
   21088:	add	r3, pc, r3
   2108c:	add	r0, pc, r0
   21090:	bl	14118 <__assert_fail@plt>
   21094:	ldr	r2, [pc, #172]	; 21148 <__flatcc_fb_gen_c_builder@@Base+0xe18>
   21098:	mov	r3, #178	; 0xb2
   2109c:	ldr	r1, [sp, #68]	; 0x44
   210a0:	ldr	r0, [pc, #184]	; 21160 <__flatcc_fb_gen_c_builder@@Base+0xe30>
   210a4:	ldr	r4, [pc, #184]	; 21164 <__flatcc_fb_gen_c_builder@@Base+0xe34>
   210a8:	ldr	ip, [r1, r2]
   210ac:	add	r0, pc, r0
   210b0:	ldr	r1, [pc, #176]	; 21168 <__flatcc_fb_gen_c_builder@@Base+0xe38>
   210b4:	add	r4, pc, r4
   210b8:	str	r0, [sp]
   210bc:	mov	r2, r4
   210c0:	ldr	r0, [ip]
   210c4:	add	r1, pc, r1
   210c8:	bl	14064 <fprintf@plt>
   210cc:	ldr	r3, [pc, #152]	; 2116c <__flatcc_fb_gen_c_builder@@Base+0xe3c>
   210d0:	mov	r1, r4
   210d4:	mov	r2, #178	; 0xb2
   210d8:	ldr	r0, [pc, #144]	; 21170 <__flatcc_fb_gen_c_builder@@Base+0xe40>
   210dc:	add	r3, pc, r3
   210e0:	add	r0, pc, r0
   210e4:	bl	14118 <__assert_fail@plt>
   210e8:	andeq	ip, r4, r0, ror #8
   210ec:	andeq	r2, r3, r4, lsl #26
   210f0:	andeq	r3, r3, r0, lsr #32
   210f4:	andeq	r3, r3, r4, lsl #30
   210f8:	andeq	r2, r3, ip, lsl #28
   210fc:	andeq	r2, r3, ip, ror #25
   21100:	andeq	r2, r3, r8, lsl #27
   21104:	andeq	r2, r3, r8, ror #30
   21108:	andeq	r3, r3, ip
   2110c:	andeq	r2, r3, r4, asr pc
   21110:	ldrdeq	r2, [r3], -r8
   21114:	andeq	r3, r3, ip, rrx
   21118:	andeq	r3, r3, r8, lsl #2
   2111c:	andeq	r2, r3, ip, asr fp
   21120:	andeq	r2, r3, r0, lsl fp
   21124:	ldrdeq	r2, [r3], -ip
   21128:	andeq	r2, r3, r8, asr ip
   2112c:	andeq	r2, r3, r8, asr #25
   21130:	andeq	r2, r3, ip, lsr sl
   21134:	andeq	r2, r3, r8, ror fp
   21138:	andeq	r2, r3, ip, ror #19
   2113c:	andeq	r2, r3, ip, ror #20
   21140:	strdeq	r2, [r3], -ip
   21144:	andeq	r2, r3, r8, ror ip
   21148:	andeq	r0, r0, r0, lsr #1
   2114c:	andeq	r2, r3, ip, lsl #24
   21150:	ldrdeq	r2, [r3], -r4
   21154:	andeq	r0, r2, r0, lsr #27
   21158:	andeq	r2, r3, r0, lsr r8
   2115c:	andeq	r9, r2, r8, lsr #5
   21160:	strdeq	r2, [r3], -r4
   21164:	andeq	r2, r3, r0, lsl #21
   21168:	andeq	r0, r2, ip, asr #26
   2116c:	ldrdeq	r2, [r3], -ip
   21170:	andeq	r9, r2, r4, asr r2
   21174:	ldr	r3, [pc, #588]	; 213c8 <__flatcc_fb_gen_c_builder@@Base+0x1098>
   21178:	mov	r2, #220	; 0xdc
   2117c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   21180:	mov	r5, r1
   21184:	mov	r1, #0
   21188:	strd	r6, [sp, #8]
   2118c:	mov	r7, r0
   21190:	strd	r8, [sp, #16]
   21194:	strd	sl, [sp, #24]
   21198:	str	lr, [sp, #32]
   2119c:	sub	sp, sp, #484	; 0x1e4
   211a0:	add	r3, pc, r3
   211a4:	add	r4, sp, #40	; 0x28
   211a8:	add	r8, sp, #260	; 0x104
   211ac:	mov	r0, r4
   211b0:	str	r3, [sp, #36]	; 0x24
   211b4:	bl	1407c <memset@plt>
   211b8:	mov	r2, #220	; 0xdc
   211bc:	mov	r1, #0
   211c0:	mov	r0, r8
   211c4:	bl	1407c <memset@plt>
   211c8:	mov	r2, r4
   211cc:	mov	r1, r5
   211d0:	ldr	r0, [r5, #12]
   211d4:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   211d8:	ldr	r1, [pc, #492]	; 213cc <__flatcc_fb_gen_c_builder@@Base+0x109c>
   211dc:	mov	r2, r4
   211e0:	ldr	r0, [r7]
   211e4:	add	r1, pc, r1
   211e8:	bl	14064 <fprintf@plt>
   211ec:	ldr	r4, [r5, #20]
   211f0:	cmp	r4, #0
   211f4:	beq	21304 <__flatcc_fb_gen_c_builder@@Base+0xfd4>
   211f8:	ldr	r3, [pc, #464]	; 213d0 <__flatcc_fb_gen_c_builder@@Base+0x10a0>
   211fc:	ldr	r9, [pc, #464]	; 213d4 <__flatcc_fb_gen_c_builder@@Base+0x10a4>
   21200:	add	r3, pc, r3
   21204:	str	r3, [sp, #28]
   21208:	add	r9, pc, r9
   2120c:	ldr	r3, [pc, #452]	; 213d8 <__flatcc_fb_gen_c_builder@@Base+0x10a8>
   21210:	add	r3, pc, r3
   21214:	str	r3, [sp, #32]
   21218:	b	21264 <__flatcc_fb_gen_c_builder@@Base+0xf34>
   2121c:	ldr	r1, [r4, #16]
   21220:	mov	r2, r8
   21224:	ldr	r0, [r1, #12]
   21228:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   2122c:	ldr	ip, [r4, #16]
   21230:	ldrh	r3, [ip, #8]
   21234:	cmp	r3, #0
   21238:	bne	2133c <__flatcc_fb_gen_c_builder@@Base+0x100c>
   2123c:	mov	r3, r8
   21240:	ldr	r1, [sp, #28]
   21244:	ldr	r2, [r4, #48]	; 0x30
   21248:	str	r6, [sp]
   2124c:	str	r5, [sp, #4]
   21250:	ldr	r0, [r7]
   21254:	bl	14064 <fprintf@plt>
   21258:	ldr	r4, [r4]
   2125c:	cmp	r4, #0
   21260:	beq	21304 <__flatcc_fb_gen_c_builder@@Base+0xfd4>
   21264:	ldrh	r3, [r4, #24]
   21268:	ldr	r2, [r4, #4]
   2126c:	cmp	r3, #10
   21270:	ldm	r2, {r5, r6}
   21274:	beq	212e0 <__flatcc_fb_gen_c_builder@@Base+0xfb0>
   21278:	cmp	r3, #14
   2127c:	beq	2121c <__flatcc_fb_gen_c_builder@@Base+0xeec>
   21280:	cmp	r3, #0
   21284:	beq	21258 <__flatcc_fb_gen_c_builder@@Base+0xf28>
   21288:	ldr	r2, [pc, #332]	; 213dc <__flatcc_fb_gen_c_builder@@Base+0x10ac>
   2128c:	mov	r3, #83	; 0x53
   21290:	ldr	r1, [sp, #36]	; 0x24
   21294:	ldr	r0, [pc, #324]	; 213e0 <__flatcc_fb_gen_c_builder@@Base+0x10b0>
   21298:	ldr	r4, [pc, #324]	; 213e4 <__flatcc_fb_gen_c_builder@@Base+0x10b4>
   2129c:	ldr	ip, [r1, r2]
   212a0:	add	r0, pc, r0
   212a4:	ldr	r1, [pc, #316]	; 213e8 <__flatcc_fb_gen_c_builder@@Base+0x10b8>
   212a8:	add	r4, pc, r4
   212ac:	str	r0, [sp]
   212b0:	mov	r2, r4
   212b4:	ldr	r0, [ip]
   212b8:	add	r1, pc, r1
   212bc:	bl	14064 <fprintf@plt>
   212c0:	ldr	r3, [pc, #292]	; 213ec <__flatcc_fb_gen_c_builder@@Base+0x10bc>
   212c4:	mov	r1, r4
   212c8:	mov	r2, #83	; 0x53
   212cc:	ldr	r0, [pc, #284]	; 213f0 <__flatcc_fb_gen_c_builder@@Base+0x10c0>
   212d0:	add	r3, pc, r3
   212d4:	add	r3, r3, #20
   212d8:	add	r0, pc, r0
   212dc:	bl	14118 <__assert_fail@plt>
   212e0:	mov	r3, r6
   212e4:	mov	r1, r9
   212e8:	ldr	r2, [r4, #48]	; 0x30
   212ec:	str	r5, [sp]
   212f0:	ldr	r0, [r7]
   212f4:	bl	14064 <fprintf@plt>
   212f8:	ldr	r4, [r4]
   212fc:	cmp	r4, #0
   21300:	bne	21264 <__flatcc_fb_gen_c_builder@@Base+0xf34>
   21304:	ldr	r0, [pc, #232]	; 213f4 <__flatcc_fb_gen_c_builder@@Base+0x10c4>
   21308:	mov	r2, #47	; 0x2f
   2130c:	mov	r1, #1
   21310:	ldr	r3, [r7]
   21314:	add	r0, pc, r0
   21318:	bl	13fec <fwrite@plt>
   2131c:	mov	r0, #0
   21320:	add	sp, sp, #484	; 0x1e4
   21324:	ldrd	r4, [sp]
   21328:	ldrd	r6, [sp, #8]
   2132c:	ldrd	r8, [sp, #16]
   21330:	ldrd	sl, [sp, #24]
   21334:	add	sp, sp, #32
   21338:	pop	{pc}		; (ldr pc, [sp], #4)
   2133c:	cmp	r3, #1
   21340:	bne	21370 <__flatcc_fb_gen_c_builder@@Base+0x1040>
   21344:	ldr	r2, [r4, #48]	; 0x30
   21348:	str	r6, [sp, #12]
   2134c:	str	r5, [sp, #16]
   21350:	ldrh	r3, [ip, #104]	; 0x68
   21354:	ldr	r0, [r7]
   21358:	ldr	r1, [sp, #32]
   2135c:	str	r3, [sp, #8]
   21360:	ldrd	sl, [ip, #112]	; 0x70
   21364:	strd	sl, [sp]
   21368:	bl	14064 <fprintf@plt>
   2136c:	b	21258 <__flatcc_fb_gen_c_builder@@Base+0xf28>
   21370:	ldr	r2, [pc, #100]	; 213dc <__flatcc_fb_gen_c_builder@@Base+0x10ac>
   21374:	mov	r3, #74	; 0x4a
   21378:	ldr	r1, [sp, #36]	; 0x24
   2137c:	ldr	r0, [pc, #116]	; 213f8 <__flatcc_fb_gen_c_builder@@Base+0x10c8>
   21380:	ldr	r4, [pc, #116]	; 213fc <__flatcc_fb_gen_c_builder@@Base+0x10cc>
   21384:	ldr	ip, [r1, r2]
   21388:	add	r0, pc, r0
   2138c:	ldr	r1, [pc, #108]	; 21400 <__flatcc_fb_gen_c_builder@@Base+0x10d0>
   21390:	add	r4, pc, r4
   21394:	str	r0, [sp]
   21398:	mov	r2, r4
   2139c:	ldr	r0, [ip]
   213a0:	add	r1, pc, r1
   213a4:	bl	14064 <fprintf@plt>
   213a8:	ldr	r3, [pc, #84]	; 21404 <__flatcc_fb_gen_c_builder@@Base+0x10d4>
   213ac:	mov	r1, r4
   213b0:	mov	r2, #74	; 0x4a
   213b4:	ldr	r0, [pc, #76]	; 21408 <__flatcc_fb_gen_c_builder@@Base+0x10d8>
   213b8:	add	r3, pc, r3
   213bc:	add	r3, r3, #20
   213c0:	add	r0, pc, r0
   213c4:	bl	14118 <__assert_fail@plt>
   213c8:	andeq	fp, r4, r8, asr lr
   213cc:			; <UNDEFINED> instruction: 0x00032db8
   213d0:	strdeq	r2, [r3], -ip
   213d4:	andeq	r2, r3, ip, asr #29
   213d8:	andeq	r2, r3, ip, lsr lr
   213dc:	andeq	r0, r0, r0, lsr #1
   213e0:	andeq	r2, r3, r4, ror lr
   213e4:	andeq	r2, r3, ip, lsl #17
   213e8:	andeq	r0, r2, r8, asr fp
   213ec:	andeq	r2, r3, r8, ror #11
   213f0:	andeq	r9, r2, ip, asr r0
   213f4:	andeq	r2, r3, r4, lsr lr
   213f8:	andeq	r2, r3, r0, lsl sp
   213fc:	andeq	r2, r3, r4, lsr #15
   21400:	andeq	r0, r2, r0, ror sl
   21404:	andeq	r2, r3, r0, lsl #10
   21408:	andeq	r8, r2, r4, ror pc

0002140c <__flatcc_fb_gen_c_verifier@@Base>:
   2140c:	ldr	r3, [r0, #208]	; 0xd0
   21410:	strd	r4, [sp, #-36]!	; 0xffffffdc
   21414:	mov	r4, r0
   21418:	ldr	r1, [pc, #868]	; 21784 <__flatcc_fb_gen_c_verifier@@Base+0x378>
   2141c:	ldr	r0, [r0, #204]	; 0xcc
   21420:	ldr	r3, [r3, #164]	; 0xa4
   21424:	add	r1, pc, r1
   21428:	strd	r6, [sp, #8]
   2142c:	strd	r8, [sp, #16]
   21430:	strd	sl, [sp, #24]
   21434:	str	lr, [sp, #32]
   21438:	sub	sp, sp, #244	; 0xf4
   2143c:	mov	r2, r3
   21440:	bl	14064 <fprintf@plt>
   21444:	ldr	r0, [pc, #828]	; 21788 <__flatcc_fb_gen_c_verifier@@Base+0x37c>
   21448:	mov	r2, #81	; 0x51
   2144c:	mov	r1, #1
   21450:	ldr	r3, [r4, #204]	; 0xcc
   21454:	add	r0, pc, r0
   21458:	bl	13fec <fwrite@plt>
   2145c:	ldr	r1, [pc, #808]	; 2178c <__flatcc_fb_gen_c_verifier@@Base+0x380>
   21460:	ldr	r0, [r4, #204]	; 0xcc
   21464:	ldr	r3, [r4, #208]	; 0xd0
   21468:	add	r1, pc, r1
   2146c:	ldr	r2, [r3, #164]	; 0xa4
   21470:	bl	14064 <fprintf@plt>
   21474:	ldr	r1, [pc, #788]	; 21790 <__flatcc_fb_gen_c_verifier@@Base+0x384>
   21478:	ldr	r0, [r4, #204]	; 0xcc
   2147c:	ldr	r3, [r4, #208]	; 0xd0
   21480:	add	r1, pc, r1
   21484:	ldr	r2, [r3, #160]	; 0xa0
   21488:	bl	14064 <fprintf@plt>
   2148c:	ldr	r0, [pc, #768]	; 21794 <__flatcc_fb_gen_c_verifier@@Base+0x388>
   21490:	mov	r2, #7
   21494:	mov	r1, #1
   21498:	ldr	r3, [r4, #204]	; 0xcc
   2149c:	add	r0, pc, r0
   214a0:	bl	13fec <fwrite@plt>
   214a4:	ldr	r0, [pc, #748]	; 21798 <__flatcc_fb_gen_c_verifier@@Base+0x38c>
   214a8:	mov	r2, #36	; 0x24
   214ac:	mov	r1, #1
   214b0:	ldr	r3, [r4, #204]	; 0xcc
   214b4:	add	r0, pc, r0
   214b8:	bl	13fec <fwrite@plt>
   214bc:	ldr	r2, [pc, #728]	; 2179c <__flatcc_fb_gen_c_verifier@@Base+0x390>
   214c0:	mov	r0, r4
   214c4:	ldr	r1, [pc, #724]	; 217a0 <__flatcc_fb_gen_c_verifier@@Base+0x394>
   214c8:	add	r2, pc, r2
   214cc:	add	r1, pc, r1
   214d0:	bl	15fbc <__flatcc_fb_gen_c_includes@@Base>
   214d4:	ldr	r1, [r4, #204]	; 0xcc
   214d8:	ldr	r3, [r4, #212]	; 0xd4
   214dc:	ldr	r3, [r3, #140]	; 0x8c
   214e0:	cmp	r3, #0
   214e4:	bne	21744 <__flatcc_fb_gen_c_verifier@@Base+0x338>
   214e8:	mov	r0, #10
   214ec:	add	r8, sp, #20
   214f0:	bl	140c4 <fputc@plt>
   214f4:	mov	r0, r8
   214f8:	mov	r2, #220	; 0xdc
   214fc:	mov	r1, #0
   21500:	bl	1407c <memset@plt>
   21504:	ldr	r3, [r4, #208]	; 0xd0
   21508:	ldr	r5, [r3, #40]	; 0x28
   2150c:	cmp	r5, #0
   21510:	beq	21564 <__flatcc_fb_gen_c_verifier@@Base+0x158>
   21514:	ldr	r6, [pc, #648]	; 217a4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   21518:	add	r6, pc, r6
   2151c:	b	2152c <__flatcc_fb_gen_c_verifier@@Base+0x120>
   21520:	ldr	r5, [r5]
   21524:	cmp	r5, #0
   21528:	beq	21564 <__flatcc_fb_gen_c_verifier@@Base+0x158>
   2152c:	ldrh	r3, [r5, #8]
   21530:	cmp	r3, #0
   21534:	bne	21520 <__flatcc_fb_gen_c_verifier@@Base+0x114>
   21538:	mov	r1, r5
   2153c:	mov	r2, r8
   21540:	ldr	r0, [r5, #12]
   21544:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   21548:	mov	r2, r8
   2154c:	mov	r1, r6
   21550:	ldr	r0, [r4, #204]	; 0xcc
   21554:	bl	14064 <fprintf@plt>
   21558:	ldr	r5, [r5]
   2155c:	cmp	r5, #0
   21560:	bne	2152c <__flatcc_fb_gen_c_verifier@@Base+0x120>
   21564:	mov	r0, #10
   21568:	ldr	r1, [r4, #204]	; 0xcc
   2156c:	bl	140c4 <fputc@plt>
   21570:	ldr	r3, [r4, #208]	; 0xd0
   21574:	ldr	r5, [r3, #40]	; 0x28
   21578:	cmp	r5, #0
   2157c:	beq	216fc <__flatcc_fb_gen_c_verifier@@Base+0x2f0>
   21580:	add	r6, r4, #204	; 0xcc
   21584:	b	21594 <__flatcc_fb_gen_c_verifier@@Base+0x188>
   21588:	ldr	r5, [r5]
   2158c:	cmp	r5, #0
   21590:	beq	215b8 <__flatcc_fb_gen_c_verifier@@Base+0x1ac>
   21594:	ldrh	r3, [r5, #8]
   21598:	cmp	r3, #4
   2159c:	bne	21588 <__flatcc_fb_gen_c_verifier@@Base+0x17c>
   215a0:	mov	r1, r5
   215a4:	mov	r0, r6
   215a8:	bl	21174 <__flatcc_fb_gen_c_builder@@Base+0xe44>
   215ac:	ldr	r5, [r5]
   215b0:	cmp	r5, #0
   215b4:	bne	21594 <__flatcc_fb_gen_c_verifier@@Base+0x188>
   215b8:	ldr	r3, [r4, #208]	; 0xd0
   215bc:	ldr	r5, [r3, #40]	; 0x28
   215c0:	cmp	r5, #0
   215c4:	beq	216fc <__flatcc_fb_gen_c_verifier@@Base+0x2f0>
   215c8:	ldr	fp, [pc, #472]	; 217a8 <__flatcc_fb_gen_c_verifier@@Base+0x39c>
   215cc:	ldr	sl, [pc, #472]	; 217ac <__flatcc_fb_gen_c_verifier@@Base+0x3a0>
   215d0:	ldr	r9, [pc, #472]	; 217b0 <__flatcc_fb_gen_c_verifier@@Base+0x3a4>
   215d4:	add	fp, pc, fp
   215d8:	add	sl, pc, sl
   215dc:	add	r9, pc, r9
   215e0:	b	215f0 <__flatcc_fb_gen_c_verifier@@Base+0x1e4>
   215e4:	ldr	r5, [r5]
   215e8:	cmp	r5, #0
   215ec:	beq	216b8 <__flatcc_fb_gen_c_verifier@@Base+0x2ac>
   215f0:	ldrh	r3, [r5, #8]
   215f4:	cmp	r3, #1
   215f8:	bne	215e4 <__flatcc_fb_gen_c_verifier@@Base+0x1d8>
   215fc:	mov	r2, #220	; 0xdc
   21600:	mov	r1, #0
   21604:	mov	r0, r8
   21608:	bl	1407c <memset@plt>
   2160c:	mov	r1, r5
   21610:	mov	r2, r8
   21614:	ldr	r0, [r5, #12]
   21618:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   2161c:	ldrh	ip, [r5, #104]	; 0x68
   21620:	mov	r3, r8
   21624:	mov	r2, r8
   21628:	mov	r1, fp
   2162c:	ldr	r0, [r4, #204]	; 0xcc
   21630:	str	ip, [sp, #8]
   21634:	ldrd	r6, [r5, #112]	; 0x70
   21638:	strd	r6, [sp]
   2163c:	bl	14064 <fprintf@plt>
   21640:	ldrh	ip, [r5, #104]	; 0x68
   21644:	mov	r3, r8
   21648:	mov	r2, r8
   2164c:	mov	r1, sl
   21650:	ldr	r0, [r4, #204]	; 0xcc
   21654:	str	ip, [sp, #8]
   21658:	ldrd	r6, [r5, #112]	; 0x70
   2165c:	strd	r6, [sp]
   21660:	bl	14064 <fprintf@plt>
   21664:	ldrh	ip, [r5, #104]	; 0x68
   21668:	mov	r3, r4
   2166c:	mov	r2, r8
   21670:	mov	r1, r9
   21674:	ldr	r0, [r4, #204]	; 0xcc
   21678:	str	ip, [sp, #8]
   2167c:	ldrd	r6, [r5, #112]	; 0x70
   21680:	strd	r6, [sp]
   21684:	bl	14064 <fprintf@plt>
   21688:	ldrh	r3, [r5, #104]	; 0x68
   2168c:	mov	r2, r8
   21690:	ldr	r1, [pc, #284]	; 217b4 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   21694:	ldr	r0, [r4, #204]	; 0xcc
   21698:	str	r3, [sp, #8]
   2169c:	ldrd	r6, [r5, #112]	; 0x70
   216a0:	add	r1, pc, r1
   216a4:	strd	r6, [sp]
   216a8:	bl	14064 <fprintf@plt>
   216ac:	ldr	r5, [r5]
   216b0:	cmp	r5, #0
   216b4:	bne	215f0 <__flatcc_fb_gen_c_verifier@@Base+0x1e4>
   216b8:	ldr	r3, [r4, #208]	; 0xd0
   216bc:	ldr	r5, [r3, #40]	; 0x28
   216c0:	cmp	r5, #0
   216c4:	bne	216d8 <__flatcc_fb_gen_c_verifier@@Base+0x2cc>
   216c8:	b	216fc <__flatcc_fb_gen_c_verifier@@Base+0x2f0>
   216cc:	ldr	r5, [r5]
   216d0:	cmp	r5, #0
   216d4:	beq	216fc <__flatcc_fb_gen_c_verifier@@Base+0x2f0>
   216d8:	ldrh	r3, [r5, #8]
   216dc:	cmp	r3, #0
   216e0:	bne	216cc <__flatcc_fb_gen_c_verifier@@Base+0x2c0>
   216e4:	mov	r1, r5
   216e8:	mov	r0, r4
   216ec:	bl	20b6c <__flatcc_fb_gen_c_builder@@Base+0x83c>
   216f0:	ldr	r5, [r5]
   216f4:	cmp	r5, #0
   216f8:	bne	216d8 <__flatcc_fb_gen_c_verifier@@Base+0x2cc>
   216fc:	ldr	r0, [r4, #204]	; 0xcc
   21700:	ldr	r3, [r4, #212]	; 0xd4
   21704:	ldr	r3, [r3, #140]	; 0x8c
   21708:	cmp	r3, #0
   2170c:	bne	21764 <__flatcc_fb_gen_c_verifier@@Base+0x358>
   21710:	ldr	r3, [r4, #208]	; 0xd0
   21714:	ldr	r1, [pc, #156]	; 217b8 <__flatcc_fb_gen_c_verifier@@Base+0x3ac>
   21718:	ldr	r2, [r3, #164]	; 0xa4
   2171c:	add	r1, pc, r1
   21720:	bl	14064 <fprintf@plt>
   21724:	mov	r0, #0
   21728:	add	sp, sp, #244	; 0xf4
   2172c:	ldrd	r4, [sp]
   21730:	ldrd	r6, [sp, #8]
   21734:	ldrd	r8, [sp, #16]
   21738:	ldrd	sl, [sp, #24]
   2173c:	add	sp, sp, #32
   21740:	pop	{pc}		; (ldr pc, [sp], #4)
   21744:	ldr	r0, [pc, #112]	; 217bc <__flatcc_fb_gen_c_verifier@@Base+0x3b0>
   21748:	mov	r3, r1
   2174c:	mov	r2, #36	; 0x24
   21750:	mov	r1, #1
   21754:	add	r0, pc, r0
   21758:	bl	13fec <fwrite@plt>
   2175c:	ldr	r1, [r4, #204]	; 0xcc
   21760:	b	214e8 <__flatcc_fb_gen_c_verifier@@Base+0xdc>
   21764:	mov	r3, r0
   21768:	ldr	r0, [pc, #80]	; 217c0 <__flatcc_fb_gen_c_verifier@@Base+0x3b4>
   2176c:	mov	r2, #36	; 0x24
   21770:	mov	r1, #1
   21774:	add	r0, pc, r0
   21778:	bl	13fec <fwrite@plt>
   2177c:	ldr	r0, [r4, #204]	; 0xcc
   21780:	b	21710 <__flatcc_fb_gen_c_verifier@@Base+0x304>
   21784:	andeq	r2, r3, r4, asr sp
   21788:	ldrdeq	r1, [r2], -r8
   2178c:	andeq	r2, r3, ip, asr #3
   21790:	andeq	r2, r3, ip, asr #3
   21794:	andeq	r7, r2, ip, ror #30
   21798:	strdeq	r2, [r3], -r4
   2179c:	andeq	r2, r3, r8, lsl #26
   217a0:	andeq	r0, r2, r0, lsl #12
   217a4:	andeq	r2, r3, r4, asr #25
   217a8:	andeq	r2, r3, r0, asr ip
   217ac:	andeq	r2, r3, r8, ror #25
   217b0:	andeq	r2, r3, r8, lsl #27
   217b4:	andeq	r2, r3, ip, ror sp
   217b8:			; <UNDEFINED> instruction: 0x00032db0
   217bc:	andeq	r1, r2, ip, ror #23
   217c0:	andeq	r7, r2, r0, lsr sl
   217c4:	push	{r1, r2, r3}
   217c8:	ldr	r3, [pc, #260]	; 218d4 <__flatcc_fb_gen_c_verifier@@Base+0x4c8>
   217cc:	strd	r4, [sp, #-28]!	; 0xffffffe4
   217d0:	mov	r5, r0
   217d4:	ldr	r1, [r0, #212]	; 0xd4
   217d8:	ldr	r4, [r0, #220]	; 0xdc
   217dc:	add	r3, pc, r3
   217e0:	strd	r6, [sp, #8]
   217e4:	strd	r8, [sp, #16]
   217e8:	str	lr, [sp, #24]
   217ec:	sub	sp, sp, #8
   217f0:	ldrb	r2, [r3]
   217f4:	ldr	r9, [sp, #36]	; 0x24
   217f8:	ldr	r6, [r1, #176]	; 0xb0
   217fc:	cmp	r2, #0
   21800:	beq	218c0 <__flatcc_fb_gen_c_verifier@@Base+0x4b4>
   21804:	ldrb	r3, [r9]
   21808:	cmp	r3, #0
   2180c:	beq	21894 <__flatcc_fb_gen_c_verifier@@Base+0x488>
   21810:	mul	r6, r6, r4
   21814:	cmp	r6, #64	; 0x40
   21818:	ble	21860 <__flatcc_fb_gen_c_verifier@@Base+0x454>
   2181c:	ldr	r8, [pc, #180]	; 218d8 <__flatcc_fb_gen_c_verifier@@Base+0x4cc>
   21820:	mov	r4, r6
   21824:	ldr	r7, [pc, #176]	; 218dc <__flatcc_fb_gen_c_verifier@@Base+0x4d0>
   21828:	add	r8, pc, r8
   2182c:	add	r7, pc, r7
   21830:	sub	r4, r4, #64	; 0x40
   21834:	mov	r3, r8
   21838:	ldr	r0, [r5, #204]	; 0xcc
   2183c:	mov	r2, #64	; 0x40
   21840:	mov	r1, r7
   21844:	bl	14064 <fprintf@plt>
   21848:	cmp	r4, #64	; 0x40
   2184c:	bgt	21830 <__flatcc_fb_gen_c_verifier@@Base+0x424>
   21850:	sub	r3, r6, #65	; 0x41
   21854:	sub	r6, r6, #64	; 0x40
   21858:	bic	r3, r3, #63	; 0x3f
   2185c:	sub	r6, r6, r3
   21860:	ldr	r3, [pc, #120]	; 218e0 <__flatcc_fb_gen_c_verifier@@Base+0x4d4>
   21864:	mov	r2, r6
   21868:	ldr	r1, [pc, #116]	; 218e4 <__flatcc_fb_gen_c_verifier@@Base+0x4d8>
   2186c:	ldr	r0, [r5, #204]	; 0xcc
   21870:	add	r3, pc, r3
   21874:	add	r1, pc, r1
   21878:	bl	14064 <fprintf@plt>
   2187c:	add	r3, sp, #40	; 0x28
   21880:	mov	r1, r9
   21884:	ldr	r0, [r5, #204]	; 0xcc
   21888:	mov	r2, r3
   2188c:	str	r3, [sp, #4]
   21890:	bl	140b8 <vfprintf@plt>
   21894:	ldr	r1, [r5, #204]	; 0xcc
   21898:	mov	r0, #10
   2189c:	bl	140c4 <fputc@plt>
   218a0:	add	sp, sp, #8
   218a4:	ldrd	r4, [sp]
   218a8:	ldrd	r6, [sp, #8]
   218ac:	ldrd	r8, [sp, #16]
   218b0:	ldr	lr, [sp, #24]
   218b4:	add	sp, sp, #28
   218b8:	add	sp, sp, #12
   218bc:	bx	lr
   218c0:	mov	r0, r3
   218c4:	mov	r2, #64	; 0x40
   218c8:	mov	r1, #32
   218cc:	bl	1407c <memset@plt>
   218d0:	b	21804 <__flatcc_fb_gen_c_verifier@@Base+0x3f8>
   218d4:	andeq	fp, r4, r0, ror #17
   218d8:	muleq	r4, r4, r8
   218dc:	ldrdeq	r8, [r2], -ip
   218e0:	andeq	fp, r4, ip, asr #16
   218e4:	muleq	r2, r4, sl
   218e8:	ldr	r1, [pc, #4]	; 218f4 <__flatcc_fb_gen_c_verifier@@Base+0x4e8>
   218ec:	add	r1, pc, r1
   218f0:	b	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   218f4:	andeq	r2, r3, r0, lsr #27
   218f8:	ldr	r1, [pc, #4]	; 21904 <__flatcc_fb_gen_c_verifier@@Base+0x4f8>
   218fc:	add	r1, pc, r1
   21900:	b	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   21904:	andeq	r2, r3, ip, asr #27
   21908:	b	218f8 <__flatcc_fb_gen_c_verifier@@Base+0x4ec>
   2190c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   21910:	sub	r5, r3, r2
   21914:	mov	r4, r0
   21918:	strd	r6, [sp, #8]
   2191c:	add	r5, r5, #1
   21920:	strd	r8, [sp, #16]
   21924:	add	r5, r5, r5, lsr #31
   21928:	mov	r8, r1
   2192c:	strd	sl, [sp, #24]
   21930:	mov	sl, r2
   21934:	str	lr, [sp, #32]
   21938:	sub	sp, sp, #52	; 0x34
   2193c:	add	r5, r2, r5, asr #1
   21940:	ldr	r2, [r1]
   21944:	str	r3, [sp, #28]
   21948:	ldr	r9, [sp, #88]	; 0x58
   2194c:	ldr	r3, [sp, #92]	; 0x5c
   21950:	str	r3, [sp, #24]
   21954:	lsl	r3, r5, #4
   21958:	str	r3, [sp, #40]	; 0x28
   2195c:	add	r3, r2, r3
   21960:	ldr	fp, [r3, #4]
   21964:	cmp	r9, fp
   21968:	bgt	21afc <__flatcc_fb_gen_c_verifier@@Base+0x6f0>
   2196c:	sub	r1, fp, r9
   21970:	ldr	r7, [r2, r5, lsl #4]
   21974:	mov	r2, #1
   21978:	cmp	r1, #8
   2197c:	mov	r0, #0
   21980:	movlt	r6, r1
   21984:	movge	r6, #8
   21988:	str	r1, [sp, #44]	; 0x2c
   2198c:	rsb	r1, r6, #8
   21990:	lsl	r1, r1, #3
   21994:	add	r7, r7, r9
   21998:	sub	lr, r1, #32
   2199c:	rsb	ip, r1, #32
   219a0:	lsl	r3, r2, lr
   219a4:	orr	r3, r3, r2, lsr ip
   219a8:	mov	ip, r0
   219ac:	str	r3, [sp, #20]
   219b0:	lsl	r3, r2, r1
   219b4:	str	r3, [sp, #16]
   219b8:	ldrd	r2, [sp, #16]
   219bc:	rsbs	r2, r2, #0
   219c0:	rsc	r3, r3, #0
   219c4:	cmp	r9, fp
   219c8:	strd	r2, [sp, #32]
   219cc:	beq	21b18 <__flatcc_fb_gen_c_verifier@@Base+0x70c>
   219d0:	add	lr, r7, r6
   219d4:	ldrb	r2, [lr, #-1]!
   219d8:	mov	r3, #0
   219dc:	strd	r2, [sp, #16]
   219e0:	sub	r3, r1, #32
   219e4:	ldr	fp, [sp, #16]
   219e8:	ldr	r2, [sp, #16]
   219ec:	lsl	r3, fp, r3
   219f0:	rsb	fp, r1, #32
   219f4:	orr	r0, r0, r2, lsl r1
   219f8:	add	r1, r1, #8
   219fc:	orr	r3, r3, r2, lsr fp
   21a00:	cmp	r1, #64	; 0x40
   21a04:	orr	ip, r3, ip
   21a08:	bne	219d4 <__flatcc_fb_gen_c_verifier@@Base+0x5c8>
   21a0c:	ldr	r3, [sp, #44]	; 0x2c
   21a10:	cmp	r3, #7
   21a14:	ble	21b18 <__flatcc_fb_gen_c_verifier@@Base+0x70c>
   21a18:	ldr	r1, [pc, #808]	; 21d48 <__flatcc_fb_gen_c_verifier@@Base+0x93c>
   21a1c:	mov	r6, #8
   21a20:	mov	r2, r0
   21a24:	mov	r3, ip
   21a28:	mov	r0, r4
   21a2c:	strd	r6, [sp]
   21a30:	add	r1, pc, r1
   21a34:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   21a38:	ldr	r3, [r4, #220]	; 0xdc
   21a3c:	cmp	sl, r5
   21a40:	add	r3, r3, #1
   21a44:	str	r3, [r4, #220]	; 0xdc
   21a48:	bne	21b48 <__flatcc_fb_gen_c_verifier@@Base+0x73c>
   21a4c:	ldm	r8, {r2, r5}
   21a50:	mov	r0, r4
   21a54:	ldr	r3, [sp, #40]	; 0x28
   21a58:	ldr	r1, [r8, #12]
   21a5c:	add	r2, r2, r3
   21a60:	ldrd	r2, [r2, #8]
   21a64:	str	r6, [sp]
   21a68:	blx	r5
   21a6c:	ldr	r2, [sp, #24]
   21a70:	cmp	r2, #0
   21a74:	bgt	21c6c <__flatcc_fb_gen_c_verifier@@Base+0x860>
   21a78:	mov	r0, r4
   21a7c:	ldr	r3, [r8, #8]
   21a80:	blx	r3
   21a84:	ldr	r3, [r4, #220]	; 0xdc
   21a88:	cmp	r3, #0
   21a8c:	beq	21d08 <__flatcc_fb_gen_c_verifier@@Base+0x8fc>
   21a90:	ldr	r1, [pc, #692]	; 21d4c <__flatcc_fb_gen_c_verifier@@Base+0x940>
   21a94:	sub	r3, r3, #1
   21a98:	mov	r0, r4
   21a9c:	str	r3, [r4, #220]	; 0xdc
   21aa0:	add	r1, pc, r1
   21aa4:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   21aa8:	ldr	r3, [r4, #220]	; 0xdc
   21aac:	cmp	r3, #0
   21ab0:	beq	21ce8 <__flatcc_fb_gen_c_verifier@@Base+0x8dc>
   21ab4:	ldr	r1, [pc, #660]	; 21d50 <__flatcc_fb_gen_c_verifier@@Base+0x944>
   21ab8:	sub	ip, r3, #1
   21abc:	mov	r2, r6
   21ac0:	mov	r3, r7
   21ac4:	mov	r0, r4
   21ac8:	str	ip, [r4, #220]	; 0xdc
   21acc:	add	r1, pc, r1
   21ad0:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   21ad4:	ldr	r3, [r4, #220]	; 0xdc
   21ad8:	ldr	r2, [sp, #24]
   21adc:	add	r3, r3, #1
   21ae0:	cmp	r2, #0
   21ae4:	str	r3, [r4, #220]	; 0xdc
   21ae8:	bgt	21c94 <__flatcc_fb_gen_c_verifier@@Base+0x888>
   21aec:	mov	r0, r4
   21af0:	ldr	r3, [r8, #8]
   21af4:	blx	r3
   21af8:	b	21c24 <__flatcc_fb_gen_c_verifier@@Base+0x818>
   21afc:	mov	r0, #0
   21b00:	mov	r2, #0
   21b04:	mov	r3, #0
   21b08:	mov	ip, r0
   21b0c:	mov	r6, r0
   21b10:	mov	r7, r0
   21b14:	strd	r2, [sp, #32]
   21b18:	ldr	r1, [pc, #564]	; 21d54 <__flatcc_fb_gen_c_verifier@@Base+0x948>
   21b1c:	stm	sp, {r0, ip}
   21b20:	mov	r0, r4
   21b24:	strd	r6, [sp, #8]
   21b28:	ldrd	r2, [sp, #32]
   21b2c:	add	r1, pc, r1
   21b30:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   21b34:	ldr	r3, [r4, #220]	; 0xdc
   21b38:	cmp	sl, r5
   21b3c:	add	r3, r3, #1
   21b40:	str	r3, [r4, #220]	; 0xdc
   21b44:	beq	21a4c <__flatcc_fb_gen_c_verifier@@Base+0x640>
   21b48:	ldr	r3, [sp, #28]
   21b4c:	cmp	r3, r5
   21b50:	bne	21bb4 <__flatcc_fb_gen_c_verifier@@Base+0x7a8>
   21b54:	ldm	r8, {r2, fp}
   21b58:	mov	r0, r4
   21b5c:	ldr	r3, [sp, #40]	; 0x28
   21b60:	ldr	r1, [r8, #12]
   21b64:	add	r2, r2, r3
   21b68:	ldrd	r2, [r2, #8]
   21b6c:	str	r6, [sp]
   21b70:	blx	fp
   21b74:	ldr	r2, [sp, #24]
   21b78:	cmp	r2, #0
   21b7c:	bgt	21c80 <__flatcc_fb_gen_c_verifier@@Base+0x874>
   21b80:	mov	r0, r4
   21b84:	ldr	r3, [r8, #8]
   21b88:	blx	r3
   21b8c:	ldr	r3, [r4, #220]	; 0xdc
   21b90:	cmp	r3, #0
   21b94:	beq	21cc8 <__flatcc_fb_gen_c_verifier@@Base+0x8bc>
   21b98:	ldr	r1, [pc, #440]	; 21d58 <__flatcc_fb_gen_c_verifier@@Base+0x94c>
   21b9c:	sub	r3, r3, #1
   21ba0:	mov	r0, r4
   21ba4:	str	r3, [r4, #220]	; 0xdc
   21ba8:	add	r1, pc, r1
   21bac:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   21bb0:	b	21bd0 <__flatcc_fb_gen_c_verifier@@Base+0x7c4>
   21bb4:	ldr	ip, [sp, #24]
   21bb8:	mov	r2, r5
   21bbc:	mov	r1, r8
   21bc0:	mov	r0, r4
   21bc4:	ldr	r3, [sp, #28]
   21bc8:	stm	sp, {r9, ip}
   21bcc:	bl	2190c <__flatcc_fb_gen_c_verifier@@Base+0x500>
   21bd0:	ldr	r3, [r4, #220]	; 0xdc
   21bd4:	cmp	r3, #0
   21bd8:	beq	21d28 <__flatcc_fb_gen_c_verifier@@Base+0x91c>
   21bdc:	ldr	r1, [pc, #376]	; 21d5c <__flatcc_fb_gen_c_verifier@@Base+0x950>
   21be0:	sub	ip, r3, #1
   21be4:	mov	r2, r6
   21be8:	mov	r3, r7
   21bec:	mov	r0, r4
   21bf0:	str	ip, [r4, #220]	; 0xdc
   21bf4:	add	r1, pc, r1
   21bf8:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   21bfc:	ldr	ip, [r4, #220]	; 0xdc
   21c00:	sub	r3, r5, #1
   21c04:	mov	r2, sl
   21c08:	mov	r1, r8
   21c0c:	mov	r0, r4
   21c10:	ldr	lr, [sp, #24]
   21c14:	add	ip, ip, #1
   21c18:	stm	sp, {r9, lr}
   21c1c:	str	ip, [r4, #220]	; 0xdc
   21c20:	bl	2190c <__flatcc_fb_gen_c_verifier@@Base+0x500>
   21c24:	ldr	r3, [r4, #220]	; 0xdc
   21c28:	cmp	r3, #0
   21c2c:	beq	21ca8 <__flatcc_fb_gen_c_verifier@@Base+0x89c>
   21c30:	ldr	r1, [pc, #296]	; 21d60 <__flatcc_fb_gen_c_verifier@@Base+0x954>
   21c34:	sub	ip, r3, #1
   21c38:	mov	r2, r6
   21c3c:	mov	r3, r7
   21c40:	mov	r0, r4
   21c44:	str	ip, [r4, #220]	; 0xdc
   21c48:	add	r1, pc, r1
   21c4c:	add	sp, sp, #52	; 0x34
   21c50:	ldrd	r4, [sp]
   21c54:	ldrd	r6, [sp, #8]
   21c58:	ldrd	r8, [sp, #16]
   21c5c:	ldrd	sl, [sp, #24]
   21c60:	ldr	lr, [sp, #32]
   21c64:	add	sp, sp, #36	; 0x24
   21c68:	b	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   21c6c:	ldr	r1, [pc, #240]	; 21d64 <__flatcc_fb_gen_c_verifier@@Base+0x958>
   21c70:	mov	r0, r4
   21c74:	add	r1, pc, r1
   21c78:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   21c7c:	b	21a84 <__flatcc_fb_gen_c_verifier@@Base+0x678>
   21c80:	ldr	r1, [pc, #224]	; 21d68 <__flatcc_fb_gen_c_verifier@@Base+0x95c>
   21c84:	mov	r0, r4
   21c88:	add	r1, pc, r1
   21c8c:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   21c90:	b	21b8c <__flatcc_fb_gen_c_verifier@@Base+0x780>
   21c94:	ldr	r1, [pc, #208]	; 21d6c <__flatcc_fb_gen_c_verifier@@Base+0x960>
   21c98:	mov	r0, r4
   21c9c:	add	r1, pc, r1
   21ca0:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   21ca4:	b	21c24 <__flatcc_fb_gen_c_verifier@@Base+0x818>
   21ca8:	ldr	r3, [pc, #192]	; 21d70 <__flatcc_fb_gen_c_verifier@@Base+0x964>
   21cac:	movw	r2, #910	; 0x38e
   21cb0:	ldr	r1, [pc, #188]	; 21d74 <__flatcc_fb_gen_c_verifier@@Base+0x968>
   21cb4:	ldr	r0, [pc, #188]	; 21d78 <__flatcc_fb_gen_c_verifier@@Base+0x96c>
   21cb8:	add	r3, pc, r3
   21cbc:	add	r1, pc, r1
   21cc0:	add	r0, pc, r0
   21cc4:	bl	14118 <__assert_fail@plt>
   21cc8:	ldr	r3, [pc, #172]	; 21d7c <__flatcc_fb_gen_c_verifier@@Base+0x970>
   21ccc:	movw	r2, #903	; 0x387
   21cd0:	ldr	r1, [pc, #168]	; 21d80 <__flatcc_fb_gen_c_verifier@@Base+0x974>
   21cd4:	ldr	r0, [pc, #168]	; 21d84 <__flatcc_fb_gen_c_verifier@@Base+0x978>
   21cd8:	add	r3, pc, r3
   21cdc:	add	r1, pc, r1
   21ce0:	add	r0, pc, r0
   21ce4:	bl	14118 <__assert_fail@plt>
   21ce8:	ldr	r3, [pc, #152]	; 21d88 <__flatcc_fb_gen_c_verifier@@Base+0x97c>
   21cec:	movw	r2, #889	; 0x379
   21cf0:	ldr	r1, [pc, #148]	; 21d8c <__flatcc_fb_gen_c_verifier@@Base+0x980>
   21cf4:	ldr	r0, [pc, #148]	; 21d90 <__flatcc_fb_gen_c_verifier@@Base+0x984>
   21cf8:	add	r3, pc, r3
   21cfc:	add	r1, pc, r1
   21d00:	add	r0, pc, r0
   21d04:	bl	14118 <__assert_fail@plt>
   21d08:	ldr	r3, [pc, #132]	; 21d94 <__flatcc_fb_gen_c_verifier@@Base+0x988>
   21d0c:	mov	r2, #888	; 0x378
   21d10:	ldr	r1, [pc, #128]	; 21d98 <__flatcc_fb_gen_c_verifier@@Base+0x98c>
   21d14:	ldr	r0, [pc, #128]	; 21d9c <__flatcc_fb_gen_c_verifier@@Base+0x990>
   21d18:	add	r3, pc, r3
   21d1c:	add	r1, pc, r1
   21d20:	add	r0, pc, r0
   21d24:	bl	14118 <__assert_fail@plt>
   21d28:	ldr	r3, [pc, #112]	; 21da0 <__flatcc_fb_gen_c_verifier@@Base+0x994>
   21d2c:	movw	r2, #907	; 0x38b
   21d30:	ldr	r1, [pc, #108]	; 21da4 <__flatcc_fb_gen_c_verifier@@Base+0x998>
   21d34:	ldr	r0, [pc, #108]	; 21da8 <__flatcc_fb_gen_c_verifier@@Base+0x99c>
   21d38:	add	r3, pc, r3
   21d3c:	add	r1, pc, r1
   21d40:	add	r0, pc, r0
   21d44:	bl	14118 <__assert_fail@plt>
   21d48:	andeq	r2, r3, ip, lsr #25
   21d4c:	andeq	r2, r3, r0, lsl sp
   21d50:	andeq	r2, r3, r8, ror #25
   21d54:	ldrdeq	r2, [r3], -r0
   21d58:	andeq	r2, r3, r8, lsl #24
   21d5c:	andeq	r2, r3, r0, asr #23
   21d60:	andeq	r2, r3, r4, lsl #23
   21d64:			; <UNDEFINED> instruction: 0x00032ab4
   21d68:	andeq	r2, r3, r0, lsr #21
   21d6c:	andeq	r2, r3, ip, lsl #21
   21d70:	andeq	r2, r3, r0, lsr r8
   21d74:	andeq	r2, r3, ip, ror sl
   21d78:	andeq	r2, r3, r4, ror #21
   21d7c:	andeq	r2, r3, r0, lsl r8
   21d80:	andeq	r2, r3, ip, asr sl
   21d84:	andeq	r2, r3, r4, asr #21
   21d88:	strdeq	r2, [r3], -r0
   21d8c:	andeq	r2, r3, ip, lsr sl
   21d90:	andeq	r2, r3, r4, lsr #21
   21d94:	ldrdeq	r2, [r3], -r0
   21d98:	andeq	r2, r3, ip, lsl sl
   21d9c:	andeq	r2, r3, r4, lsl #21
   21da0:			; <UNDEFINED> instruction: 0x000327b0
   21da4:	strdeq	r2, [r3], -ip
   21da8:	andeq	r2, r3, r4, ror #20
   21dac:	strd	r4, [sp, #-36]!	; 0xffffffdc
   21db0:	strd	r6, [sp, #8]
   21db4:	strd	r8, [sp, #16]
   21db8:	strd	sl, [sp, #24]
   21dbc:	str	lr, [sp, #32]
   21dc0:	sub	sp, sp, #100	; 0x64
   21dc4:	ldr	r4, [sp, #136]	; 0x88
   21dc8:	strd	r2, [sp, #60]	; 0x3c
   21dcc:	ldr	r3, [r1]
   21dd0:	str	r0, [sp, #72]	; 0x48
   21dd4:	str	r1, [sp, #80]	; 0x50
   21dd8:	add	r1, r4, #7
   21ddc:	str	r3, [sp, #76]	; 0x4c
   21de0:	add	r3, r3, r2, lsl #4
   21de4:	str	r1, [sp, #92]	; 0x5c
   21de8:	ldr	r3, [r3, #4]
   21dec:	cmp	r1, r3
   21df0:	str	r3, [sp, #88]	; 0x58
   21df4:	bge	222f0 <__flatcc_fb_gen_c_verifier@@Base+0xee4>
   21df8:	sub	r3, r3, r4
   21dfc:	cmp	r3, #8
   21e00:	beq	222f0 <__flatcc_fb_gen_c_verifier@@Base+0xee4>
   21e04:	ldrd	r2, [sp, #60]	; 0x3c
   21e08:	sub	r3, r3, r2
   21e0c:	add	r3, r3, r3, lsr #31
   21e10:	add	fp, r2, r3, asr #1
   21e14:	cmp	r2, fp
   21e18:	str	fp, [sp, #84]	; 0x54
   21e1c:	bge	21fa0 <__flatcc_fb_gen_c_verifier@@Base+0xb94>
   21e20:	ldr	r3, [sp, #76]	; 0x4c
   21e24:	mov	r0, #0
   21e28:	mov	r2, #0
   21e2c:	mov	r8, r0
   21e30:	mov	lr, r0
   21e34:	mov	r5, r0
   21e38:	mov	r9, #1
   21e3c:	add	ip, r3, fp, lsl #4
   21e40:	mov	r3, #0
   21e44:	strd	r2, [sp, #16]
   21e48:	ldr	r3, [ip, #-12]
   21e4c:	cmp	r4, r3
   21e50:	bgt	21eec <__flatcc_fb_gen_c_verifier@@Base+0xae0>
   21e54:	sub	r1, r3, r4
   21e58:	cmp	r1, #8
   21e5c:	movge	r1, #8
   21e60:	cmp	r4, r3
   21e64:	beq	22350 <__flatcc_fb_gen_c_verifier@@Base+0xf44>
   21e68:	ldr	r3, [ip, #-16]
   21e6c:	rsb	r6, r1, #8
   21e70:	mov	lr, #0
   21e74:	add	r1, r1, r4
   21e78:	lsl	r7, r6, #3
   21e7c:	mov	r5, lr
   21e80:	add	r1, r3, r1
   21e84:	ldrb	r2, [r1, #-1]!
   21e88:	mov	r3, #0
   21e8c:	strd	r2, [sp, #16]
   21e90:	sub	r3, r7, #32
   21e94:	ldr	sl, [sp, #16]
   21e98:	ldr	r2, [sp, #16]
   21e9c:	lsl	r3, sl, r3
   21ea0:	rsb	sl, r7, #32
   21ea4:	orr	lr, lr, r2, lsl r7
   21ea8:	add	r7, r7, #8
   21eac:	orr	r3, r3, r2, lsr sl
   21eb0:	cmp	r7, #64	; 0x40
   21eb4:	orr	r5, r3, r5
   21eb8:	bne	21e84 <__flatcc_fb_gen_c_verifier@@Base+0xa78>
   21ebc:	lsl	r6, r6, #3
   21ec0:	sub	r2, r6, #32
   21ec4:	rsb	r3, r6, #32
   21ec8:	lsl	r2, r9, r2
   21ecc:	orr	r3, r2, r9, lsr r3
   21ed0:	str	r3, [sp, #12]
   21ed4:	lsl	r3, r9, r6
   21ed8:	str	r3, [sp, #8]
   21edc:	ldrd	r2, [sp, #8]
   21ee0:	rsbs	r2, r2, #0
   21ee4:	rsc	r3, r3, #0
   21ee8:	strd	r2, [sp, #16]
   21eec:	ldm	ip, {r1, sl}
   21ef0:	cmp	r4, sl
   21ef4:	str	r1, [sp, #68]	; 0x44
   21ef8:	bgt	21f5c <__flatcc_fb_gen_c_verifier@@Base+0xb50>
   21efc:	sub	r3, sl, r4
   21f00:	cmp	r3, #8
   21f04:	movge	r3, #8
   21f08:	cmp	r4, sl
   21f0c:	beq	2233c <__flatcc_fb_gen_c_verifier@@Base+0xf30>
   21f10:	rsb	r2, r3, #8
   21f14:	mov	r0, #0
   21f18:	add	r3, r3, r4
   21f1c:	lsl	r2, r2, #3
   21f20:	mov	r8, r0
   21f24:	add	r3, r1, r3
   21f28:	ldrb	r6, [r3, #-1]!
   21f2c:	mov	r7, #0
   21f30:	sub	r1, r2, #32
   21f34:	strd	r6, [sp, #32]
   21f38:	lsl	r1, r6, r1
   21f3c:	rsb	r7, r2, #32
   21f40:	ldr	r6, [sp, #32]
   21f44:	orr	r0, r0, r6, lsl r2
   21f48:	add	r2, r2, #8
   21f4c:	orr	r1, r1, r6, lsr r7
   21f50:	cmp	r2, #64	; 0x40
   21f54:	orr	r8, r1, r8
   21f58:	bne	21f28 <__flatcc_fb_gen_c_verifier@@Base+0xb1c>
   21f5c:	eor	r2, lr, r0
   21f60:	eor	r3, r5, r8
   21f64:	ldr	r1, [sp, #16]
   21f68:	sub	r6, fp, #1
   21f6c:	and	r2, r1, r2
   21f70:	str	r2, [sp, #40]	; 0x28
   21f74:	ldr	r2, [sp, #20]
   21f78:	and	r3, r2, r3
   21f7c:	str	r3, [sp, #44]	; 0x2c
   21f80:	ldrd	r2, [sp, #40]	; 0x28
   21f84:	orrs	r3, r2, r3
   21f88:	bne	2236c <__flatcc_fb_gen_c_verifier@@Base+0xf60>
   21f8c:	ldr	r3, [sp, #60]	; 0x3c
   21f90:	mov	fp, r6
   21f94:	sub	ip, ip, #16
   21f98:	cmp	r3, r6
   21f9c:	bne	21e48 <__flatcc_fb_gen_c_verifier@@Base+0xa3c>
   21fa0:	ldr	r3, [sp, #64]	; 0x40
   21fa4:	ldr	r2, [sp, #84]	; 0x54
   21fa8:	cmp	r3, r2
   21fac:	movle	r5, r2
   21fb0:	ble	22154 <__flatcc_fb_gen_c_verifier@@Base+0xd48>
   21fb4:	ldr	r3, [sp, #76]	; 0x4c
   21fb8:	mov	r2, #0
   21fbc:	mov	sl, #0
   21fc0:	mov	fp, #0
   21fc4:	mov	lr, r2
   21fc8:	ldr	r9, [sp, #84]	; 0x54
   21fcc:	mov	r0, r2
   21fd0:	mov	ip, r2
   21fd4:	mov	r8, #1
   21fd8:	add	r1, r3, r9, lsl #4
   21fdc:	ldr	r3, [r1, #4]
   21fe0:	cmp	r4, r3
   21fe4:	bgt	22088 <__flatcc_fb_gen_c_verifier@@Base+0xc7c>
   21fe8:	sub	r5, r3, r4
   21fec:	cmp	r5, #8
   21ff0:	movge	r5, #8
   21ff4:	cmp	r4, r3
   21ff8:	beq	224b4 <__flatcc_fb_gen_c_verifier@@Base+0x10a8>
   21ffc:	ldr	r6, [r1]
   22000:	rsb	sl, r5, #8
   22004:	mov	r0, #0
   22008:	add	r5, r5, r4
   2200c:	lsl	r3, sl, #3
   22010:	mov	ip, r0
   22014:	mov	fp, r1
   22018:	mov	r7, r0
   2201c:	add	r5, r6, r5
   22020:	ldrb	r0, [r5, #-1]!
   22024:	mov	r1, #0
   22028:	sub	r6, r3, #32
   2202c:	strd	r0, [sp, #8]
   22030:	lsl	r6, r0, r6
   22034:	rsb	r1, r3, #32
   22038:	ldr	r0, [sp, #8]
   2203c:	orr	r7, r7, r0, lsl r3
   22040:	add	r3, r3, #8
   22044:	orr	r6, r6, r0, lsr r1
   22048:	cmp	r3, #64	; 0x40
   2204c:	orr	ip, r6, ip
   22050:	bne	22020 <__flatcc_fb_gen_c_verifier@@Base+0xc14>
   22054:	mov	r1, fp
   22058:	mov	r0, r7
   2205c:	lsl	sl, sl, #3
   22060:	sub	r5, sl, #32
   22064:	rsb	r3, sl, #32
   22068:	lsl	r5, r8, r5
   2206c:	orr	r3, r5, r8, lsr r3
   22070:	str	r3, [sp, #28]
   22074:	lsl	r3, r8, sl
   22078:	str	r3, [sp, #24]
   2207c:	ldrd	sl, [sp, #24]
   22080:	rsbs	sl, sl, #0
   22084:	rsc	fp, fp, #0
   22088:	ldr	r3, [r1, #20]
   2208c:	cmp	r4, r3
   22090:	bgt	22360 <__flatcc_fb_gen_c_verifier@@Base+0xf54>
   22094:	sub	r5, r3, r4
   22098:	cmp	r5, #8
   2209c:	movge	r5, #8
   220a0:	cmp	r4, r3
   220a4:	beq	224c4 <__flatcc_fb_gen_c_verifier@@Base+0x10b8>
   220a8:	ldr	r6, [r1, #16]
   220ac:	rsb	r3, r5, #8
   220b0:	mov	r2, #0
   220b4:	add	r5, r5, r4
   220b8:	lsl	r3, r3, #3
   220bc:	mov	lr, r2
   220c0:	mov	r7, r1
   220c4:	strd	sl, [sp, #16]
   220c8:	mov	fp, ip
   220cc:	mov	ip, r0
   220d0:	add	r5, r6, r5
   220d4:	ldrb	r0, [r5, #-1]!
   220d8:	mov	r1, #0
   220dc:	sub	r6, r3, #32
   220e0:	strd	r0, [sp, #8]
   220e4:	lsl	r6, r0, r6
   220e8:	rsb	r1, r3, #32
   220ec:	ldr	sl, [sp, #8]
   220f0:	orr	r2, r2, sl, lsl r3
   220f4:	add	r3, r3, #8
   220f8:	orr	r6, r6, sl, lsr r1
   220fc:	cmp	r3, #64	; 0x40
   22100:	orr	lr, r6, lr
   22104:	bne	220d4 <__flatcc_fb_gen_c_verifier@@Base+0xcc8>
   22108:	mov	r0, ip
   2210c:	eor	r3, lr, fp
   22110:	mov	ip, fp
   22114:	ldrd	sl, [sp, #16]
   22118:	mov	r1, r7
   2211c:	eor	r5, r2, r0
   22120:	and	r5, sl, r5
   22124:	and	r3, fp, r3
   22128:	str	r5, [sp, #48]	; 0x30
   2212c:	add	r5, r9, #1
   22130:	str	r3, [sp, #52]	; 0x34
   22134:	ldrd	r6, [sp, #48]	; 0x30
   22138:	orrs	r3, r6, r7
   2213c:	bne	22640 <__flatcc_fb_gen_c_verifier@@Base+0x1234>
   22140:	ldr	r3, [sp, #64]	; 0x40
   22144:	mov	r9, r5
   22148:	add	r1, r1, #16
   2214c:	cmp	r3, r5
   22150:	bne	21fdc <__flatcc_fb_gen_c_verifier@@Base+0xbd0>
   22154:	str	r5, [sp, #84]	; 0x54
   22158:	add	r5, r5, #1
   2215c:	ldr	r3, [sp, #60]	; 0x3c
   22160:	cmp	r3, r5
   22164:	bge	227c0 <__flatcc_fb_gen_c_verifier@@Base+0x13b4>
   22168:	mov	r6, r3
   2216c:	ldr	r3, [sp, #76]	; 0x4c
   22170:	ldr	r0, [sp, #92]	; 0x5c
   22174:	add	r2, r3, #4
   22178:	ldr	r3, [sp, #88]	; 0x58
   2217c:	b	22184 <__flatcc_fb_gen_c_verifier@@Base+0xd78>
   22180:	ldr	r3, [r2, r6, lsl #4]
   22184:	cmp	r0, r3
   22188:	bge	22198 <__flatcc_fb_gen_c_verifier@@Base+0xd8c>
   2218c:	sub	r1, r3, r4
   22190:	cmp	r1, #8
   22194:	bgt	224d8 <__flatcc_fb_gen_c_verifier@@Base+0x10cc>
   22198:	add	r6, r6, #1
   2219c:	cmp	r6, r5
   221a0:	bne	22180 <__flatcc_fb_gen_c_verifier@@Base+0xd74>
   221a4:	ldr	r3, [sp, #60]	; 0x3c
   221a8:	ldr	r7, [sp, #64]	; 0x40
   221ac:	cmp	r7, r6
   221b0:	movge	r7, #1
   221b4:	movlt	r7, #0
   221b8:	cmp	r3, r6
   221bc:	movge	r7, #0
   221c0:	cmp	r7, #0
   221c4:	beq	22848 <__flatcc_fb_gen_c_verifier@@Base+0x143c>
   221c8:	ldr	r9, [pc, #1812]	; 228e4 <__flatcc_fb_gen_c_verifier@@Base+0x14d8>
   221cc:	mov	r8, r6
   221d0:	mov	r7, #0
   221d4:	add	r9, pc, r9
   221d8:	sub	r3, r8, #1
   221dc:	str	r4, [sp]
   221e0:	mov	sl, #0
   221e4:	ldr	ip, [sp, #80]	; 0x50
   221e8:	ldr	r2, [sp, #60]	; 0x3c
   221ec:	ldr	fp, [sp, #72]	; 0x48
   221f0:	mov	r1, ip
   221f4:	ldr	r8, [ip, #24]
   221f8:	mov	r0, fp
   221fc:	add	r8, r8, #1
   22200:	str	r8, [sp, #4]
   22204:	str	r8, [ip, #24]
   22208:	bl	2190c <__flatcc_fb_gen_c_verifier@@Base+0x500>
   2220c:	ldr	r1, [pc, #1748]	; 228e8 <__flatcc_fb_gen_c_verifier@@Base+0x14dc>
   22210:	mov	r2, r8
   22214:	mov	r0, fp
   22218:	add	r1, pc, r1
   2221c:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   22220:	ldr	r1, [pc, #1732]	; 228ec <__flatcc_fb_gen_c_verifier@@Base+0x14e0>
   22224:	mov	r2, r8
   22228:	mov	r0, fp
   2222c:	ldr	r3, [fp, #220]	; 0xdc
   22230:	str	sl, [fp, #220]	; 0xdc
   22234:	add	r1, pc, r1
   22238:	str	r3, [fp, #228]	; 0xe4
   2223c:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   22240:	ldr	ip, [fp, #228]	; 0xe4
   22244:	mov	r2, r5
   22248:	mov	r0, fp
   2224c:	str	r4, [sp]
   22250:	ldr	r3, [sp, #64]	; 0x40
   22254:	ldr	r1, [sp, #80]	; 0x50
   22258:	str	ip, [fp, #220]	; 0xdc
   2225c:	bl	21dac <__flatcc_fb_gen_c_verifier@@Base+0x9a0>
   22260:	ldr	r1, [pc, #1672]	; 228f0 <__flatcc_fb_gen_c_verifier@@Base+0x14e4>
   22264:	mov	r0, fp
   22268:	mov	r2, r8
   2226c:	ldr	r3, [fp, #220]	; 0xdc
   22270:	str	sl, [fp, #220]	; 0xdc
   22274:	add	r1, pc, r1
   22278:	str	r3, [fp, #228]	; 0xe4
   2227c:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   22280:	ldr	r1, [pc, #1644]	; 228f4 <__flatcc_fb_gen_c_verifier@@Base+0x14e8>
   22284:	mov	r0, fp
   22288:	ldr	r3, [fp, #228]	; 0xe4
   2228c:	add	r1, pc, r1
   22290:	str	r3, [fp, #220]	; 0xdc
   22294:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   22298:	cmp	r5, r6
   2229c:	ble	22498 <__flatcc_fb_gen_c_verifier@@Base+0x108c>
   222a0:	ldr	r3, [sp, #72]	; 0x48
   222a4:	ldr	r3, [r3, #220]	; 0xdc
   222a8:	cmp	r3, #0
   222ac:	beq	22808 <__flatcc_fb_gen_c_verifier@@Base+0x13fc>
   222b0:	ldr	r1, [pc, #1600]	; 228f8 <__flatcc_fb_gen_c_verifier@@Base+0x14ec>
   222b4:	sub	ip, r3, #1
   222b8:	mov	r2, r7
   222bc:	mov	r3, r9
   222c0:	add	r1, pc, r1
   222c4:	ldr	lr, [sp, #72]	; 0x48
   222c8:	mov	r0, lr
   222cc:	str	ip, [lr, #220]	; 0xdc
   222d0:	add	sp, sp, #100	; 0x64
   222d4:	ldrd	r4, [sp]
   222d8:	ldrd	r6, [sp, #8]
   222dc:	ldrd	r8, [sp, #16]
   222e0:	ldrd	sl, [sp, #24]
   222e4:	ldr	lr, [sp, #32]
   222e8:	add	sp, sp, #36	; 0x24
   222ec:	b	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   222f0:	ldr	r3, [sp, #60]	; 0x3c
   222f4:	ldr	r2, [sp, #64]	; 0x40
   222f8:	cmp	r3, r2
   222fc:	beq	22480 <__flatcc_fb_gen_c_verifier@@Base+0x1074>
   22300:	add	r3, r3, #1
   22304:	cmp	r3, r2
   22308:	bne	21e04 <__flatcc_fb_gen_c_verifier@@Base+0x9f8>
   2230c:	ldr	r3, [sp, #76]	; 0x4c
   22310:	add	r3, r3, r2, lsl #4
   22314:	ldr	r2, [sp, #92]	; 0x5c
   22318:	ldr	r3, [r3, #4]
   2231c:	cmp	r2, r3
   22320:	bge	22480 <__flatcc_fb_gen_c_verifier@@Base+0x1074>
   22324:	sub	r3, r3, r4
   22328:	cmp	r3, #8
   2232c:	beq	22480 <__flatcc_fb_gen_c_verifier@@Base+0x1074>
   22330:	ldr	r3, [sp, #60]	; 0x3c
   22334:	str	r3, [sp, #84]	; 0x54
   22338:	b	21fa0 <__flatcc_fb_gen_c_verifier@@Base+0xb94>
   2233c:	mov	r0, #0
   22340:	mov	r2, lr
   22344:	mov	r8, r0
   22348:	mov	r3, r5
   2234c:	b	21f64 <__flatcc_fb_gen_c_verifier@@Base+0xb58>
   22350:	mov	lr, #0
   22354:	rsb	r6, r1, #8
   22358:	mov	r5, lr
   2235c:	b	21ebc <__flatcc_fb_gen_c_verifier@@Base+0xab0>
   22360:	eor	r5, r0, r2
   22364:	eor	r3, ip, lr
   22368:	b	22120 <__flatcc_fb_gen_c_verifier@@Base+0xd14>
   2236c:	cmp	r4, sl
   22370:	bgt	22690 <__flatcc_fb_gen_c_verifier@@Base+0x1284>
   22374:	ldr	r3, [sp, #68]	; 0x44
   22378:	sub	r5, sl, r4
   2237c:	cmp	r5, #8
   22380:	movge	r5, #8
   22384:	cmp	r4, sl
   22388:	add	r7, r3, r4
   2238c:	beq	227b0 <__flatcc_fb_gen_c_verifier@@Base+0x13a4>
   22390:	rsb	r1, r5, #8
   22394:	mov	r2, #0
   22398:	lsl	r1, r1, #3
   2239c:	mov	r3, r2
   223a0:	add	ip, r7, r5
   223a4:	ldrb	r8, [ip, #-1]!
   223a8:	sub	r0, r1, #32
   223ac:	rsb	lr, r1, #32
   223b0:	lsl	r0, r8, r0
   223b4:	orr	r2, r2, r8, lsl r1
   223b8:	add	r1, r1, #8
   223bc:	orr	r0, r0, r8, lsr lr
   223c0:	cmp	r1, #64	; 0x40
   223c4:	orr	r3, r0, r3
   223c8:	bne	223a4 <__flatcc_fb_gen_c_verifier@@Base+0xf98>
   223cc:	ldr	r1, [pc, #1320]	; 228fc <__flatcc_fb_gen_c_verifier@@Base+0x14f0>
   223d0:	stm	sp, {r5, r7}
   223d4:	ldr	r8, [sp, #72]	; 0x48
   223d8:	add	r1, pc, r1
   223dc:	mov	r0, r8
   223e0:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   223e4:	ldr	ip, [r8, #220]	; 0xdc
   223e8:	mov	r3, r6
   223ec:	mov	r0, r8
   223f0:	str	r4, [sp]
   223f4:	ldr	r2, [sp, #60]	; 0x3c
   223f8:	ldr	r1, [sp, #80]	; 0x50
   223fc:	add	ip, ip, #1
   22400:	str	ip, [r8, #220]	; 0xdc
   22404:	bl	21dac <__flatcc_fb_gen_c_verifier@@Base+0x9a0>
   22408:	ldr	r3, [r8, #220]	; 0xdc
   2240c:	cmp	r3, #0
   22410:	beq	2289c <__flatcc_fb_gen_c_verifier@@Base+0x1490>
   22414:	ldr	r1, [pc, #1252]	; 22900 <__flatcc_fb_gen_c_verifier@@Base+0x14f4>
   22418:	sub	ip, r3, #1
   2241c:	mov	r2, r5
   22420:	mov	r3, r7
   22424:	ldr	r6, [sp, #72]	; 0x48
   22428:	add	r1, pc, r1
   2242c:	mov	r0, r6
   22430:	str	ip, [r6, #220]	; 0xdc
   22434:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   22438:	ldr	ip, [r6, #220]	; 0xdc
   2243c:	mov	r2, fp
   22440:	mov	r0, r6
   22444:	str	r4, [sp]
   22448:	ldr	r3, [sp, #64]	; 0x40
   2244c:	ldr	r1, [sp, #80]	; 0x50
   22450:	add	ip, ip, #1
   22454:	str	ip, [r6, #220]	; 0xdc
   22458:	bl	21dac <__flatcc_fb_gen_c_verifier@@Base+0x9a0>
   2245c:	ldr	r3, [r6, #220]	; 0xdc
   22460:	cmp	r3, #0
   22464:	beq	228c0 <__flatcc_fb_gen_c_verifier@@Base+0x14b4>
   22468:	ldr	r1, [pc, #1172]	; 22904 <__flatcc_fb_gen_c_verifier@@Base+0x14f8>
   2246c:	sub	ip, r3, #1
   22470:	mov	r2, r5
   22474:	mov	r3, r7
   22478:	add	r1, pc, r1
   2247c:	b	222c4 <__flatcc_fb_gen_c_verifier@@Base+0xeb8>
   22480:	mov	ip, #0
   22484:	ldrd	r2, [sp, #60]	; 0x3c
   22488:	stm	sp, {r4, ip}
   2248c:	ldr	r0, [sp, #72]	; 0x48
   22490:	ldr	r1, [sp, #80]	; 0x50
   22494:	bl	2190c <__flatcc_fb_gen_c_verifier@@Base+0x500>
   22498:	add	sp, sp, #100	; 0x64
   2249c:	ldrd	r4, [sp]
   224a0:	ldrd	r6, [sp, #8]
   224a4:	ldrd	r8, [sp, #16]
   224a8:	ldrd	sl, [sp, #24]
   224ac:	add	sp, sp, #32
   224b0:	pop	{pc}		; (ldr pc, [sp], #4)
   224b4:	mov	r0, #0
   224b8:	rsb	sl, r5, #8
   224bc:	mov	ip, r0
   224c0:	b	2205c <__flatcc_fb_gen_c_verifier@@Base+0xc50>
   224c4:	mov	r2, #0
   224c8:	mov	r5, r0
   224cc:	mov	lr, r2
   224d0:	mov	r3, ip
   224d4:	b	22120 <__flatcc_fb_gen_c_verifier@@Base+0xd14>
   224d8:	str	r3, [sp, #88]	; 0x58
   224dc:	ldr	r3, [sp, #60]	; 0x3c
   224e0:	cmp	r6, r3
   224e4:	add	r3, r4, #8
   224e8:	str	r3, [sp, #8]
   224ec:	bgt	22648 <__flatcc_fb_gen_c_verifier@@Base+0x123c>
   224f0:	ldr	r3, [sp, #88]	; 0x58
   224f4:	cmp	r4, r3
   224f8:	movle	r8, #0
   224fc:	bgt	22770 <__flatcc_fb_gen_c_verifier@@Base+0x1364>
   22500:	ldr	r3, [sp, #76]	; 0x4c
   22504:	mov	r1, #0
   22508:	mov	r2, r1
   2250c:	ldr	r9, [r3, r6, lsl #4]
   22510:	mov	r3, r1
   22514:	add	r9, r9, r4
   22518:	add	ip, r9, #8
   2251c:	ldrb	sl, [ip, #-1]!
   22520:	sub	r0, r1, #32
   22524:	rsb	lr, r1, #32
   22528:	lsl	r0, sl, r0
   2252c:	orr	r2, r2, sl, lsl r1
   22530:	add	r1, r1, #8
   22534:	orr	r0, r0, sl, lsr lr
   22538:	cmp	r1, #64	; 0x40
   2253c:	orr	r3, r0, r3
   22540:	bne	2251c <__flatcc_fb_gen_c_verifier@@Base+0x1110>
   22544:	mov	r7, #8
   22548:	ldr	r1, [pc, #952]	; 22908 <__flatcc_fb_gen_c_verifier@@Base+0x14fc>
   2254c:	stm	sp, {r7, r9}
   22550:	ldr	sl, [sp, #72]	; 0x48
   22554:	add	r1, pc, r1
   22558:	mov	r0, sl
   2255c:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   22560:	ldr	r3, [sl, #220]	; 0xdc
   22564:	cmp	r8, #0
   22568:	add	r3, r3, #1
   2256c:	str	r3, [sl, #220]	; 0xdc
   22570:	bne	226a4 <__flatcc_fb_gen_c_verifier@@Base+0x1298>
   22574:	ldr	r1, [pc, #912]	; 2290c <__flatcc_fb_gen_c_verifier@@Base+0x1500>
   22578:	mov	r8, r6
   2257c:	ldr	sl, [sp, #72]	; 0x48
   22580:	add	r1, pc, r1
   22584:	mov	r0, sl
   22588:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   2258c:	ldr	r1, [pc, #892]	; 22910 <__flatcc_fb_gen_c_verifier@@Base+0x1504>
   22590:	mov	r0, sl
   22594:	add	r1, pc, r1
   22598:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   2259c:	ldr	r1, [sp, #8]
   225a0:	mov	r2, r6
   225a4:	mov	r0, sl
   225a8:	ldr	r3, [sp, #84]	; 0x54
   225ac:	str	r1, [sp]
   225b0:	ldr	r1, [sp, #80]	; 0x50
   225b4:	bl	21dac <__flatcc_fb_gen_c_verifier@@Base+0x9a0>
   225b8:	ldr	r3, [sp, #72]	; 0x48
   225bc:	ldr	r3, [r3, #220]	; 0xdc
   225c0:	cmp	r3, #0
   225c4:	beq	22878 <__flatcc_fb_gen_c_verifier@@Base+0x146c>
   225c8:	ldr	r1, [pc, #836]	; 22914 <__flatcc_fb_gen_c_verifier@@Base+0x1508>
   225cc:	sub	ip, r3, #1
   225d0:	mov	r2, r7
   225d4:	mov	r3, r9
   225d8:	ldr	sl, [sp, #72]	; 0x48
   225dc:	add	r1, pc, r1
   225e0:	mov	r0, sl
   225e4:	str	ip, [sl, #220]	; 0xdc
   225e8:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   225ec:	ldr	r3, [sl, #220]	; 0xdc
   225f0:	ldr	r0, [sp, #64]	; 0x40
   225f4:	ldr	ip, [sp, #60]	; 0x3c
   225f8:	add	r3, r3, #1
   225fc:	cmp	r0, r5
   22600:	str	r3, [sl, #220]	; 0xdc
   22604:	movlt	r2, #0
   22608:	movge	r2, #1
   2260c:	cmp	r0, r5
   22610:	cmpge	r8, ip
   22614:	bgt	221d8 <__flatcc_fb_gen_c_verifier@@Base+0xdcc>
   22618:	ldr	r3, [sp, #60]	; 0x3c
   2261c:	cmp	r8, r3
   22620:	bgt	22854 <__flatcc_fb_gen_c_verifier@@Base+0x1448>
   22624:	cmp	r2, #0
   22628:	bne	2282c <__flatcc_fb_gen_c_verifier@@Base+0x1420>
   2262c:	ldr	r0, [sp, #72]	; 0x48
   22630:	ldr	r3, [sp, #80]	; 0x50
   22634:	ldr	r3, [r3, #8]
   22638:	blx	r3
   2263c:	b	22298 <__flatcc_fb_gen_c_verifier@@Base+0xe8c>
   22640:	str	r9, [sp, #84]	; 0x54
   22644:	b	2215c <__flatcc_fb_gen_c_verifier@@Base+0xd50>
   22648:	ldr	r3, [sp, #76]	; 0x4c
   2264c:	add	r2, r4, #8
   22650:	add	r3, r3, r6, lsl #4
   22654:	ldr	r3, [r3, #-12]
   22658:	cmp	r3, r2
   2265c:	bgt	224f0 <__flatcc_fb_gen_c_verifier@@Base+0x10e4>
   22660:	sub	r3, r3, r4
   22664:	sub	r8, r3, #8
   22668:	ldr	r3, [sp, #88]	; 0x58
   2266c:	clz	r8, r8
   22670:	lsr	r8, r8, #5
   22674:	cmp	r4, r3
   22678:	ble	22500 <__flatcc_fb_gen_c_verifier@@Base+0x10f4>
   2267c:	mov	r2, #0
   22680:	mov	r3, r2
   22684:	mov	r9, r2
   22688:	mov	r7, r2
   2268c:	b	22548 <__flatcc_fb_gen_c_verifier@@Base+0x113c>
   22690:	mov	r2, #0
   22694:	mov	r3, r2
   22698:	mov	r7, r2
   2269c:	mov	r5, r2
   226a0:	b	223cc <__flatcc_fb_gen_c_verifier@@Base+0xfc0>
   226a4:	ldr	r1, [pc, #620]	; 22918 <__flatcc_fb_gen_c_verifier@@Base+0x150c>
   226a8:	mov	r3, r9
   226ac:	mov	r2, r7
   226b0:	mov	r0, sl
   226b4:	add	r1, pc, r1
   226b8:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   226bc:	ldr	fp, [sp, #80]	; 0x50
   226c0:	sub	r2, r6, #-268435455	; 0xf0000001
   226c4:	mov	ip, #8
   226c8:	mov	r0, sl
   226cc:	ldm	fp, {r3, r8}
   226d0:	ldr	r1, [fp, #12]
   226d4:	add	r2, r3, r2, lsl #4
   226d8:	ldrd	r2, [r2, #8]
   226dc:	str	ip, [sp]
   226e0:	blx	r8
   226e4:	ldr	r1, [pc, #560]	; 2291c <__flatcc_fb_gen_c_verifier@@Base+0x1510>
   226e8:	mov	r3, r9
   226ec:	mov	r2, r7
   226f0:	mov	r0, sl
   226f4:	add	r1, pc, r1
   226f8:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   226fc:	ldr	r1, [pc, #540]	; 22920 <__flatcc_fb_gen_c_verifier@@Base+0x1514>
   22700:	mov	r0, sl
   22704:	add	r1, pc, r1
   22708:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   2270c:	ldr	r1, [pc, #528]	; 22924 <__flatcc_fb_gen_c_verifier@@Base+0x1518>
   22710:	mov	r0, sl
   22714:	add	r1, pc, r1
   22718:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   2271c:	ldr	r1, [sp, #8]
   22720:	mov	r2, r6
   22724:	mov	r0, sl
   22728:	ldr	r3, [sp, #84]	; 0x54
   2272c:	str	r1, [sp]
   22730:	mov	r1, fp
   22734:	bl	21dac <__flatcc_fb_gen_c_verifier@@Base+0x9a0>
   22738:	ldr	r3, [sl, #220]	; 0xdc
   2273c:	cmp	r3, #0
   22740:	beq	227e4 <__flatcc_fb_gen_c_verifier@@Base+0x13d8>
   22744:	ldr	r1, [pc, #476]	; 22928 <__flatcc_fb_gen_c_verifier@@Base+0x151c>
   22748:	sub	ip, r3, #1
   2274c:	mov	r2, r7
   22750:	mov	r3, r9
   22754:	sub	r8, r6, #1
   22758:	ldr	lr, [sp, #72]	; 0x48
   2275c:	add	r1, pc, r1
   22760:	mov	r0, lr
   22764:	str	ip, [lr, #220]	; 0xdc
   22768:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   2276c:	b	225b8 <__flatcc_fb_gen_c_verifier@@Base+0x11ac>
   22770:	ldr	r1, [pc, #436]	; 2292c <__flatcc_fb_gen_c_verifier@@Base+0x1520>
   22774:	mov	ip, #0
   22778:	mov	r3, #0
   2277c:	mov	r2, #0
   22780:	mov	r7, ip
   22784:	ldr	r8, [sp, #72]	; 0x48
   22788:	mov	r9, ip
   2278c:	str	ip, [sp]
   22790:	str	ip, [sp, #4]
   22794:	add	r1, pc, r1
   22798:	mov	r0, r8
   2279c:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   227a0:	ldr	r3, [r8, #220]	; 0xdc
   227a4:	add	r3, r3, #1
   227a8:	str	r3, [r8, #220]	; 0xdc
   227ac:	b	22574 <__flatcc_fb_gen_c_verifier@@Base+0x1168>
   227b0:	mov	r2, #0
   227b4:	mov	r3, r2
   227b8:	mov	r5, r2
   227bc:	b	223cc <__flatcc_fb_gen_c_verifier@@Base+0xfc0>
   227c0:	ldr	r9, [pc, #360]	; 22930 <__flatcc_fb_gen_c_verifier@@Base+0x1524>
   227c4:	mov	r7, #0
   227c8:	ldr	r3, [sp, #64]	; 0x40
   227cc:	ldr	r6, [sp, #60]	; 0x3c
   227d0:	add	r9, pc, r9
   227d4:	cmp	r3, r5
   227d8:	movlt	r2, #0
   227dc:	movge	r2, #1
   227e0:	b	22624 <__flatcc_fb_gen_c_verifier@@Base+0x1218>
   227e4:	ldr	r3, [pc, #328]	; 22934 <__flatcc_fb_gen_c_verifier@@Base+0x1528>
   227e8:	mov	r2, #1040	; 0x410
   227ec:	ldr	r1, [pc, #324]	; 22938 <__flatcc_fb_gen_c_verifier@@Base+0x152c>
   227f0:	ldr	r0, [pc, #324]	; 2293c <__flatcc_fb_gen_c_verifier@@Base+0x1530>
   227f4:	add	r3, pc, r3
   227f8:	add	r3, r3, #16
   227fc:	add	r1, pc, r1
   22800:	add	r0, pc, r0
   22804:	bl	14118 <__assert_fail@plt>
   22808:	ldr	r3, [pc, #304]	; 22940 <__flatcc_fb_gen_c_verifier@@Base+0x1534>
   2280c:	mov	r2, #1072	; 0x430
   22810:	ldr	r1, [pc, #300]	; 22944 <__flatcc_fb_gen_c_verifier@@Base+0x1538>
   22814:	ldr	r0, [pc, #300]	; 22948 <__flatcc_fb_gen_c_verifier@@Base+0x153c>
   22818:	add	r3, pc, r3
   2281c:	add	r3, r3, #16
   22820:	add	r1, pc, r1
   22824:	add	r0, pc, r0
   22828:	bl	14118 <__assert_fail@plt>
   2282c:	mov	r2, r5
   22830:	str	r4, [sp]
   22834:	ldr	r3, [sp, #64]	; 0x40
   22838:	ldr	r0, [sp, #72]	; 0x48
   2283c:	ldr	r1, [sp, #80]	; 0x50
   22840:	bl	21dac <__flatcc_fb_gen_c_verifier@@Base+0x9a0>
   22844:	b	22298 <__flatcc_fb_gen_c_verifier@@Base+0xe8c>
   22848:	ldr	r9, [pc, #252]	; 2294c <__flatcc_fb_gen_c_verifier@@Base+0x1540>
   2284c:	mov	r8, r6
   22850:	add	r9, pc, r9
   22854:	mov	r0, #0
   22858:	sub	r3, r8, #1
   2285c:	str	r4, [sp]
   22860:	ldr	r2, [sp, #60]	; 0x3c
   22864:	str	r0, [sp, #4]
   22868:	ldr	r0, [sp, #72]	; 0x48
   2286c:	ldr	r1, [sp, #80]	; 0x50
   22870:	bl	2190c <__flatcc_fb_gen_c_verifier@@Base+0x500>
   22874:	b	22298 <__flatcc_fb_gen_c_verifier@@Base+0xe8c>
   22878:	ldr	r3, [pc, #208]	; 22950 <__flatcc_fb_gen_c_verifier@@Base+0x1544>
   2287c:	movw	r2, #1044	; 0x414
   22880:	ldr	r1, [pc, #204]	; 22954 <__flatcc_fb_gen_c_verifier@@Base+0x1548>
   22884:	ldr	r0, [pc, #204]	; 22958 <__flatcc_fb_gen_c_verifier@@Base+0x154c>
   22888:	add	r3, pc, r3
   2288c:	add	r3, r3, #16
   22890:	add	r1, pc, r1
   22894:	add	r0, pc, r0
   22898:	bl	14118 <__assert_fail@plt>
   2289c:	ldr	r3, [pc, #184]	; 2295c <__flatcc_fb_gen_c_verifier@@Base+0x1550>
   228a0:	movw	r2, #973	; 0x3cd
   228a4:	ldr	r1, [pc, #180]	; 22960 <__flatcc_fb_gen_c_verifier@@Base+0x1554>
   228a8:	ldr	r0, [pc, #180]	; 22964 <__flatcc_fb_gen_c_verifier@@Base+0x1558>
   228ac:	add	r3, pc, r3
   228b0:	add	r3, r3, #16
   228b4:	add	r1, pc, r1
   228b8:	add	r0, pc, r0
   228bc:	bl	14118 <__assert_fail@plt>
   228c0:	ldr	r3, [pc, #160]	; 22968 <__flatcc_fb_gen_c_verifier@@Base+0x155c>
   228c4:	movw	r2, #975	; 0x3cf
   228c8:	ldr	r1, [pc, #156]	; 2296c <__flatcc_fb_gen_c_verifier@@Base+0x1560>
   228cc:	ldr	r0, [pc, #156]	; 22970 <__flatcc_fb_gen_c_verifier@@Base+0x1564>
   228d0:	add	r3, pc, r3
   228d4:	add	r3, r3, #16
   228d8:	add	r1, pc, r1
   228dc:	add	r0, pc, r0
   228e0:	bl	14118 <__assert_fail@plt>
   228e4:	andeq	r9, r2, r4, ror #19
   228e8:	andeq	r2, r3, r4, lsl #14
   228ec:	strdeq	r2, [r3], -ip
   228f0:	andeq	r2, r3, r8, asr #13
   228f4:	andeq	r2, r3, r0, asr #13
   228f8:	muleq	r3, r8, r6
   228fc:	andeq	r2, r3, r4, lsl #8
   22900:	ldrdeq	r2, [r3], -ip
   22904:	andeq	r2, r3, ip, lsr #7
   22908:	andeq	r2, r3, r8, ror #5
   2290c:	andeq	r2, r3, r0, lsr #6
   22910:	andeq	r2, r3, r8, lsl r3
   22914:	andeq	r2, r3, r0, lsr #6
   22918:			; <UNDEFINED> instruction: 0x000321b0
   2291c:	muleq	r3, r0, r1
   22920:	muleq	r3, ip, r1
   22924:	muleq	r3, r8, r1
   22928:	andeq	r2, r3, r0, lsl #3
   2292c:	andeq	r2, r3, r8, lsr #1
   22930:	andeq	r9, r2, r8, ror #7
   22934:	strdeq	r1, [r3], -r4
   22938:	andeq	r1, r3, ip, lsr pc
   2293c:	andeq	r1, r3, r4, lsr #31
   22940:	ldrdeq	r1, [r3], -r0
   22944:	andeq	r1, r3, r8, lsl pc
   22948:	andeq	r1, r3, r0, lsl #31
   2294c:	andeq	r9, r2, r8, ror #6
   22950:	andeq	r1, r3, r0, ror #24
   22954:	andeq	r1, r3, r8, lsr #29
   22958:	andeq	r1, r3, r0, lsl pc
   2295c:	andeq	r1, r3, ip, lsr ip
   22960:	andeq	r1, r3, r4, lsl #29
   22964:	andeq	r1, r3, ip, ror #29
   22968:	andeq	r1, r3, r8, lsl ip
   2296c:	andeq	r1, r3, r0, ror #28
   22970:	andeq	r1, r3, r8, asr #29
   22974:	strd	r4, [sp, #-12]!
   22978:	mov	r5, r0
   2297c:	mov	r0, r1
   22980:	str	lr, [sp, #8]
   22984:	sub	sp, sp, #212	; 0xd4
   22988:	add	r4, sp, #4
   2298c:	mov	r1, r4
   22990:	bl	16170 <__flatcc_fb_copy_scope@@Base>
   22994:	ldr	r1, [pc, #52]	; 229d0 <__flatcc_fb_gen_c_verifier@@Base+0x15c4>
   22998:	mov	r3, r4
   2299c:	mov	r0, r5
   229a0:	ldr	r2, [r5, #208]	; 0xd0
   229a4:	add	r1, pc, r1
   229a8:	ldr	r2, [r2, #160]	; 0xa0
   229ac:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   229b0:	ldr	r1, [pc, #28]	; 229d4 <__flatcc_fb_gen_c_verifier@@Base+0x15c8>
   229b4:	mov	r0, r5
   229b8:	add	r1, pc, r1
   229bc:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   229c0:	add	sp, sp, #212	; 0xd4
   229c4:	ldrd	r4, [sp]
   229c8:	add	sp, sp, #8
   229cc:	pop	{pc}		; (ldr pc, [sp], #4)
   229d0:	andeq	r1, r3, ip, asr #31
   229d4:	andeq	r2, r3, r4, lsr #32
   229d8:	ldr	r3, [pc, #1432]	; 22f78 <__flatcc_fb_gen_c_verifier@@Base+0x1b6c>
   229dc:	mov	r2, #220	; 0xdc
   229e0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   229e4:	mov	r5, r0
   229e8:	strd	r6, [sp, #8]
   229ec:	mov	r6, r1
   229f0:	mov	r1, #0
   229f4:	strd	r8, [sp, #16]
   229f8:	strd	sl, [sp, #24]
   229fc:	str	lr, [sp, #32]
   22a00:	sub	sp, sp, #460	; 0x1cc
   22a04:	add	r3, pc, r3
   22a08:	add	r4, sp, #16
   22a0c:	add	r7, sp, #236	; 0xec
   22a10:	mov	r0, r4
   22a14:	str	r3, [sp, #12]
   22a18:	bl	1407c <memset@plt>
   22a1c:	mov	r2, #220	; 0xdc
   22a20:	mov	r1, #0
   22a24:	mov	r0, r7
   22a28:	bl	1407c <memset@plt>
   22a2c:	mov	r2, r4
   22a30:	mov	r1, r6
   22a34:	ldr	r0, [r6, #12]
   22a38:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   22a3c:	ldr	r1, [pc, #1336]	; 22f7c <__flatcc_fb_gen_c_verifier@@Base+0x1b70>
   22a40:	mov	r2, r4
   22a44:	mov	r0, r5
   22a48:	add	r1, pc, r1
   22a4c:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   22a50:	ldr	r1, [pc, #1320]	; 22f80 <__flatcc_fb_gen_c_verifier@@Base+0x1b74>
   22a54:	mov	r0, r5
   22a58:	add	r1, pc, r1
   22a5c:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   22a60:	ldr	r3, [r5, #220]	; 0xdc
   22a64:	mov	r0, r5
   22a68:	ldr	r1, [pc, #1300]	; 22f84 <__flatcc_fb_gen_c_verifier@@Base+0x1b78>
   22a6c:	add	r3, r3, #1
   22a70:	add	r1, pc, r1
   22a74:	str	r3, [r5, #220]	; 0xdc
   22a78:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   22a7c:	ldr	r1, [pc, #1284]	; 22f88 <__flatcc_fb_gen_c_verifier@@Base+0x1b7c>
   22a80:	mov	r0, r5
   22a84:	add	r1, pc, r1
   22a88:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   22a8c:	ldr	r1, [pc, #1272]	; 22f8c <__flatcc_fb_gen_c_verifier@@Base+0x1b80>
   22a90:	mov	r0, r5
   22a94:	add	r1, pc, r1
   22a98:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   22a9c:	ldr	r1, [pc, #1260]	; 22f90 <__flatcc_fb_gen_c_verifier@@Base+0x1b84>
   22aa0:	mov	r0, r5
   22aa4:	add	r1, pc, r1
   22aa8:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   22aac:	ldr	r3, [r5, #220]	; 0xdc
   22ab0:	mov	r0, r5
   22ab4:	ldr	r1, [pc, #1240]	; 22f94 <__flatcc_fb_gen_c_verifier@@Base+0x1b88>
   22ab8:	add	r3, r3, #1
   22abc:	add	r1, pc, r1
   22ac0:	str	r3, [r5, #220]	; 0xdc
   22ac4:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   22ac8:	ldr	r3, [r5, #220]	; 0xdc
   22acc:	cmp	r3, #0
   22ad0:	beq	22f0c <__flatcc_fb_gen_c_verifier@@Base+0x1b00>
   22ad4:	ldr	r4, [r6, #20]
   22ad8:	sub	r3, r3, #1
   22adc:	str	r3, [r5, #220]	; 0xdc
   22ae0:	cmp	r4, #0
   22ae4:	beq	22c98 <__flatcc_fb_gen_c_verifier@@Base+0x188c>
   22ae8:	ldr	sl, [pc, #1192]	; 22f98 <__flatcc_fb_gen_c_verifier@@Base+0x1b8c>
   22aec:	ldr	r9, [pc, #1192]	; 22f9c <__flatcc_fb_gen_c_verifier@@Base+0x1b90>
   22af0:	ldr	r8, [pc, #1192]	; 22fa0 <__flatcc_fb_gen_c_verifier@@Base+0x1b94>
   22af4:	add	sl, pc, sl
   22af8:	add	r9, pc, r9
   22afc:	add	r8, pc, r8
   22b00:	b	22b90 <__flatcc_fb_gen_c_verifier@@Base+0x1784>
   22b04:	ldr	r1, [r4, #16]
   22b08:	mov	r2, r7
   22b0c:	ldr	r0, [r1, #12]
   22b10:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   22b14:	ldr	r1, [pc, #1160]	; 22fa4 <__flatcc_fb_gen_c_verifier@@Base+0x1b98>
   22b18:	mov	r3, fp
   22b1c:	mov	r0, r5
   22b20:	ldr	r2, [r4, #48]	; 0x30
   22b24:	str	r6, [sp]
   22b28:	add	r1, pc, r1
   22b2c:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   22b30:	ldr	r2, [r4, #16]
   22b34:	ldr	r3, [r5, #220]	; 0xdc
   22b38:	ldrh	r2, [r2, #8]
   22b3c:	add	r3, r3, #1
   22b40:	str	r3, [r5, #220]	; 0xdc
   22b44:	cmp	r2, #0
   22b48:	bne	22c78 <__flatcc_fb_gen_c_verifier@@Base+0x186c>
   22b4c:	ldr	r1, [pc, #1108]	; 22fa8 <__flatcc_fb_gen_c_verifier@@Base+0x1b9c>
   22b50:	mov	r2, r7
   22b54:	mov	r0, r5
   22b58:	add	r1, pc, r1
   22b5c:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   22b60:	ldr	r1, [pc, #1092]	; 22fac <__flatcc_fb_gen_c_verifier@@Base+0x1ba0>
   22b64:	mov	r0, r5
   22b68:	add	r1, pc, r1
   22b6c:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   22b70:	ldr	r3, [r5, #220]	; 0xdc
   22b74:	cmp	r3, #0
   22b78:	beq	22e7c <__flatcc_fb_gen_c_verifier@@Base+0x1a70>
   22b7c:	sub	r3, r3, #1
   22b80:	str	r3, [r5, #220]	; 0xdc
   22b84:	ldr	r4, [r4]
   22b88:	cmp	r4, #0
   22b8c:	beq	22c98 <__flatcc_fb_gen_c_verifier@@Base+0x188c>
   22b90:	ldrh	r2, [r4, #24]
   22b94:	ldr	r3, [r4, #4]
   22b98:	cmp	r2, #10
   22b9c:	ldm	r3, {r6, fp}
   22ba0:	beq	22c0c <__flatcc_fb_gen_c_verifier@@Base+0x1800>
   22ba4:	cmp	r2, #14
   22ba8:	beq	22b04 <__flatcc_fb_gen_c_verifier@@Base+0x16f8>
   22bac:	cmp	r2, #0
   22bb0:	beq	22b84 <__flatcc_fb_gen_c_verifier@@Base+0x1778>
   22bb4:	ldr	r2, [pc, #1012]	; 22fb0 <__flatcc_fb_gen_c_verifier@@Base+0x1ba4>
   22bb8:	movw	r3, #1535	; 0x5ff
   22bbc:	ldr	r1, [sp, #12]
   22bc0:	ldr	r0, [pc, #1004]	; 22fb4 <__flatcc_fb_gen_c_verifier@@Base+0x1ba8>
   22bc4:	ldr	r4, [pc, #1004]	; 22fb8 <__flatcc_fb_gen_c_verifier@@Base+0x1bac>
   22bc8:	ldr	ip, [r1, r2]
   22bcc:	add	r0, pc, r0
   22bd0:	ldr	r1, [pc, #996]	; 22fbc <__flatcc_fb_gen_c_verifier@@Base+0x1bb0>
   22bd4:	add	r4, pc, r4
   22bd8:	str	r0, [sp]
   22bdc:	mov	r2, r4
   22be0:	ldr	r0, [ip]
   22be4:	add	r1, pc, r1
   22be8:	bl	14064 <fprintf@plt>
   22bec:	ldr	r3, [pc, #972]	; 22fc0 <__flatcc_fb_gen_c_verifier@@Base+0x1bb4>
   22bf0:	mov	r1, r4
   22bf4:	movw	r2, #1535	; 0x5ff
   22bf8:	ldr	r0, [pc, #964]	; 22fc4 <__flatcc_fb_gen_c_verifier@@Base+0x1bb8>
   22bfc:	add	r3, pc, r3
   22c00:	add	r3, r3, #28
   22c04:	add	r0, pc, r0
   22c08:	bl	14118 <__assert_fail@plt>
   22c0c:	mov	r3, fp
   22c10:	mov	r1, sl
   22c14:	ldr	r2, [r4, #48]	; 0x30
   22c18:	mov	r0, r5
   22c1c:	str	r6, [sp]
   22c20:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   22c24:	ldr	r3, [r5, #220]	; 0xdc
   22c28:	mov	r1, r9
   22c2c:	mov	r0, r5
   22c30:	add	r3, r3, #1
   22c34:	str	r3, [r5, #220]	; 0xdc
   22c38:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   22c3c:	mov	r1, r8
   22c40:	mov	r0, r5
   22c44:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   22c48:	ldr	r3, [r5, #220]	; 0xdc
   22c4c:	cmp	r3, #0
   22c50:	bne	22b7c <__flatcc_fb_gen_c_verifier@@Base+0x1770>
   22c54:	ldr	r3, [pc, #876]	; 22fc8 <__flatcc_fb_gen_c_verifier@@Base+0x1bbc>
   22c58:	movw	r2, #1532	; 0x5fc
   22c5c:	ldr	r1, [pc, #872]	; 22fcc <__flatcc_fb_gen_c_verifier@@Base+0x1bc0>
   22c60:	ldr	r0, [pc, #872]	; 22fd0 <__flatcc_fb_gen_c_verifier@@Base+0x1bc4>
   22c64:	add	r3, pc, r3
   22c68:	add	r3, r3, #28
   22c6c:	add	r1, pc, r1
   22c70:	add	r0, pc, r0
   22c74:	bl	14118 <__assert_fail@plt>
   22c78:	cmp	r2, #1
   22c7c:	bne	22e24 <__flatcc_fb_gen_c_verifier@@Base+0x1a18>
   22c80:	ldr	r1, [pc, #844]	; 22fd4 <__flatcc_fb_gen_c_verifier@@Base+0x1bc8>
   22c84:	mov	r2, r7
   22c88:	mov	r0, r5
   22c8c:	add	r1, pc, r1
   22c90:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   22c94:	b	22b60 <__flatcc_fb_gen_c_verifier@@Base+0x1754>
   22c98:	ldr	r1, [pc, #824]	; 22fd8 <__flatcc_fb_gen_c_verifier@@Base+0x1bcc>
   22c9c:	mov	r0, r5
   22ca0:	add	r1, pc, r1
   22ca4:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   22ca8:	ldr	r3, [r5, #220]	; 0xdc
   22cac:	mov	r0, r5
   22cb0:	ldr	r1, [pc, #804]	; 22fdc <__flatcc_fb_gen_c_verifier@@Base+0x1bd0>
   22cb4:	add	r3, r3, #1
   22cb8:	add	r1, pc, r1
   22cbc:	str	r3, [r5, #220]	; 0xdc
   22cc0:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   22cc4:	ldr	r3, [r5, #220]	; 0xdc
   22cc8:	mov	r0, r5
   22ccc:	ldr	r1, [pc, #780]	; 22fe0 <__flatcc_fb_gen_c_verifier@@Base+0x1bd4>
   22cd0:	add	r3, r3, #1
   22cd4:	add	r1, pc, r1
   22cd8:	str	r3, [r5, #220]	; 0xdc
   22cdc:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   22ce0:	ldr	r3, [r5, #220]	; 0xdc
   22ce4:	cmp	r3, #0
   22ce8:	beq	22ee8 <__flatcc_fb_gen_c_verifier@@Base+0x1adc>
   22cec:	ldr	r1, [pc, #752]	; 22fe4 <__flatcc_fb_gen_c_verifier@@Base+0x1bd8>
   22cf0:	sub	r3, r3, #1
   22cf4:	mov	r0, r5
   22cf8:	str	r3, [r5, #220]	; 0xdc
   22cfc:	add	r1, pc, r1
   22d00:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   22d04:	ldr	r3, [r5, #220]	; 0xdc
   22d08:	mov	r0, r5
   22d0c:	ldr	r1, [pc, #724]	; 22fe8 <__flatcc_fb_gen_c_verifier@@Base+0x1bdc>
   22d10:	add	r3, r3, #1
   22d14:	add	r1, pc, r1
   22d18:	str	r3, [r5, #220]	; 0xdc
   22d1c:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   22d20:	ldr	r3, [r5, #220]	; 0xdc
   22d24:	cmp	r3, #0
   22d28:	beq	22ec4 <__flatcc_fb_gen_c_verifier@@Base+0x1ab8>
   22d2c:	ldr	r4, [pc, #696]	; 22fec <__flatcc_fb_gen_c_verifier@@Base+0x1be0>
   22d30:	sub	r3, r3, #1
   22d34:	mov	r0, r5
   22d38:	str	r3, [r5, #220]	; 0xdc
   22d3c:	add	r4, pc, r4
   22d40:	mov	r1, r4
   22d44:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   22d48:	ldr	r3, [r5, #220]	; 0xdc
   22d4c:	cmp	r3, #0
   22d50:	beq	22ea0 <__flatcc_fb_gen_c_verifier@@Base+0x1a94>
   22d54:	sub	r3, r3, #1
   22d58:	mov	r1, r4
   22d5c:	mov	r0, r5
   22d60:	str	r3, [r5, #220]	; 0xdc
   22d64:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   22d68:	ldr	r1, [pc, #640]	; 22ff0 <__flatcc_fb_gen_c_verifier@@Base+0x1be4>
   22d6c:	mov	r0, r5
   22d70:	add	r1, pc, r1
   22d74:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   22d78:	ldr	r1, [pc, #628]	; 22ff4 <__flatcc_fb_gen_c_verifier@@Base+0x1be8>
   22d7c:	mov	r0, r5
   22d80:	add	r1, pc, r1
   22d84:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   22d88:	ldr	r3, [r5, #220]	; 0xdc
   22d8c:	mov	r0, r5
   22d90:	ldr	r1, [pc, #608]	; 22ff8 <__flatcc_fb_gen_c_verifier@@Base+0x1bec>
   22d94:	add	r3, r3, #1
   22d98:	add	r1, pc, r1
   22d9c:	str	r3, [r5, #220]	; 0xdc
   22da0:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   22da4:	ldr	r3, [r5, #220]	; 0xdc
   22da8:	cmp	r3, #0
   22dac:	beq	22f54 <__flatcc_fb_gen_c_verifier@@Base+0x1b48>
   22db0:	sub	r3, r3, #1
   22db4:	mov	r1, r4
   22db8:	mov	r0, r5
   22dbc:	str	r3, [r5, #220]	; 0xdc
   22dc0:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   22dc4:	ldr	r1, [pc, #560]	; 22ffc <__flatcc_fb_gen_c_verifier@@Base+0x1bf0>
   22dc8:	mov	r0, r5
   22dcc:	add	r1, pc, r1
   22dd0:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   22dd4:	ldr	r3, [r5, #220]	; 0xdc
   22dd8:	cmp	r3, #0
   22ddc:	beq	22f30 <__flatcc_fb_gen_c_verifier@@Base+0x1b24>
   22de0:	sub	r3, r3, #1
   22de4:	mov	r1, r4
   22de8:	mov	r0, r5
   22dec:	str	r3, [r5, #220]	; 0xdc
   22df0:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   22df4:	ldr	r1, [pc, #516]	; 23000 <__flatcc_fb_gen_c_verifier@@Base+0x1bf4>
   22df8:	mov	r0, r5
   22dfc:	add	r1, pc, r1
   22e00:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   22e04:	mov	r0, #0
   22e08:	add	sp, sp, #460	; 0x1cc
   22e0c:	ldrd	r4, [sp]
   22e10:	ldrd	r6, [sp, #8]
   22e14:	ldrd	r8, [sp, #16]
   22e18:	ldrd	sl, [sp, #24]
   22e1c:	add	sp, sp, #32
   22e20:	pop	{pc}		; (ldr pc, [sp], #4)
   22e24:	ldr	r2, [pc, #388]	; 22fb0 <__flatcc_fb_gen_c_verifier@@Base+0x1ba4>
   22e28:	movw	r3, #1522	; 0x5f2
   22e2c:	ldr	r1, [sp, #12]
   22e30:	ldr	r0, [pc, #460]	; 23004 <__flatcc_fb_gen_c_verifier@@Base+0x1bf8>
   22e34:	ldr	r4, [pc, #460]	; 23008 <__flatcc_fb_gen_c_verifier@@Base+0x1bfc>
   22e38:	ldr	ip, [r1, r2]
   22e3c:	add	r0, pc, r0
   22e40:	ldr	r1, [pc, #452]	; 2300c <__flatcc_fb_gen_c_verifier@@Base+0x1c00>
   22e44:	add	r4, pc, r4
   22e48:	str	r0, [sp]
   22e4c:	mov	r2, r4
   22e50:	ldr	r0, [ip]
   22e54:	add	r1, pc, r1
   22e58:	bl	14064 <fprintf@plt>
   22e5c:	ldr	r3, [pc, #428]	; 23010 <__flatcc_fb_gen_c_verifier@@Base+0x1c04>
   22e60:	mov	r1, r4
   22e64:	movw	r2, #1522	; 0x5f2
   22e68:	ldr	r0, [pc, #420]	; 23014 <__flatcc_fb_gen_c_verifier@@Base+0x1c08>
   22e6c:	add	r3, pc, r3
   22e70:	add	r3, r3, #28
   22e74:	add	r0, pc, r0
   22e78:	bl	14118 <__assert_fail@plt>
   22e7c:	ldr	r3, [pc, #404]	; 23018 <__flatcc_fb_gen_c_verifier@@Base+0x1c0c>
   22e80:	movw	r2, #1526	; 0x5f6
   22e84:	ldr	r1, [pc, #400]	; 2301c <__flatcc_fb_gen_c_verifier@@Base+0x1c10>
   22e88:	ldr	r0, [pc, #400]	; 23020 <__flatcc_fb_gen_c_verifier@@Base+0x1c14>
   22e8c:	add	r3, pc, r3
   22e90:	add	r3, r3, #28
   22e94:	add	r1, pc, r1
   22e98:	add	r0, pc, r0
   22e9c:	bl	14118 <__assert_fail@plt>
   22ea0:	ldr	r3, [pc, #380]	; 23024 <__flatcc_fb_gen_c_verifier@@Base+0x1c18>
   22ea4:	movw	r2, #1546	; 0x60a
   22ea8:	ldr	r1, [pc, #376]	; 23028 <__flatcc_fb_gen_c_verifier@@Base+0x1c1c>
   22eac:	ldr	r0, [pc, #376]	; 2302c <__flatcc_fb_gen_c_verifier@@Base+0x1c20>
   22eb0:	add	r3, pc, r3
   22eb4:	add	r3, r3, #28
   22eb8:	add	r1, pc, r1
   22ebc:	add	r0, pc, r0
   22ec0:	bl	14118 <__assert_fail@plt>
   22ec4:	ldr	r3, [pc, #356]	; 23030 <__flatcc_fb_gen_c_verifier@@Base+0x1c24>
   22ec8:	movw	r2, #1545	; 0x609
   22ecc:	ldr	r1, [pc, #352]	; 23034 <__flatcc_fb_gen_c_verifier@@Base+0x1c28>
   22ed0:	ldr	r0, [pc, #352]	; 23038 <__flatcc_fb_gen_c_verifier@@Base+0x1c2c>
   22ed4:	add	r3, pc, r3
   22ed8:	add	r3, r3, #28
   22edc:	add	r1, pc, r1
   22ee0:	add	r0, pc, r0
   22ee4:	bl	14118 <__assert_fail@plt>
   22ee8:	ldr	r3, [pc, #332]	; 2303c <__flatcc_fb_gen_c_verifier@@Base+0x1c30>
   22eec:	movw	r2, #1543	; 0x607
   22ef0:	ldr	r1, [pc, #328]	; 23040 <__flatcc_fb_gen_c_verifier@@Base+0x1c34>
   22ef4:	ldr	r0, [pc, #328]	; 23044 <__flatcc_fb_gen_c_verifier@@Base+0x1c38>
   22ef8:	add	r3, pc, r3
   22efc:	add	r3, r3, #28
   22f00:	add	r1, pc, r1
   22f04:	add	r0, pc, r0
   22f08:	bl	14118 <__assert_fail@plt>
   22f0c:	ldr	r3, [pc, #308]	; 23048 <__flatcc_fb_gen_c_verifier@@Base+0x1c3c>
   22f10:	movw	r2, #1503	; 0x5df
   22f14:	ldr	r1, [pc, #304]	; 2304c <__flatcc_fb_gen_c_verifier@@Base+0x1c40>
   22f18:	ldr	r0, [pc, #304]	; 23050 <__flatcc_fb_gen_c_verifier@@Base+0x1c44>
   22f1c:	add	r3, pc, r3
   22f20:	add	r3, r3, #28
   22f24:	add	r1, pc, r1
   22f28:	add	r0, pc, r0
   22f2c:	bl	14118 <__assert_fail@plt>
   22f30:	ldr	r3, [pc, #284]	; 23054 <__flatcc_fb_gen_c_verifier@@Base+0x1c48>
   22f34:	mov	r2, #1552	; 0x610
   22f38:	ldr	r1, [pc, #280]	; 23058 <__flatcc_fb_gen_c_verifier@@Base+0x1c4c>
   22f3c:	ldr	r0, [pc, #280]	; 2305c <__flatcc_fb_gen_c_verifier@@Base+0x1c50>
   22f40:	add	r3, pc, r3
   22f44:	add	r3, r3, #28
   22f48:	add	r1, pc, r1
   22f4c:	add	r0, pc, r0
   22f50:	bl	14118 <__assert_fail@plt>
   22f54:	ldr	r3, [pc, #260]	; 23060 <__flatcc_fb_gen_c_verifier@@Base+0x1c54>
   22f58:	movw	r2, #1550	; 0x60e
   22f5c:	ldr	r1, [pc, #256]	; 23064 <__flatcc_fb_gen_c_verifier@@Base+0x1c58>
   22f60:	ldr	r0, [pc, #256]	; 23068 <__flatcc_fb_gen_c_verifier@@Base+0x1c5c>
   22f64:	add	r3, pc, r3
   22f68:	add	r3, r3, #28
   22f6c:	add	r1, pc, r1
   22f70:	add	r0, pc, r0
   22f74:	bl	14118 <__assert_fail@plt>
   22f78:	strdeq	sl, [r4], -r4
   22f7c:	andeq	r1, r3, r8, asr #31
   22f80:	andeq	r4, r3, ip, asr #18
   22f84:	andeq	r9, r2, r8, asr #2
   22f88:	andeq	r2, r3, ip, lsl r0
   22f8c:	andeq	r2, r3, ip, lsl r0
   22f90:	andeq	r2, r3, ip, lsl r0
   22f94:	andeq	r2, r3, r8, lsl r0
   22f98:	andeq	r2, r3, r0, lsl r0
   22f9c:	andeq	r2, r3, r8, asr #1
   22fa0:	strheq	r2, [r3], -ip
   22fa4:	ldrdeq	r1, [r3], -ip
   22fa8:	andeq	r1, r3, r0, asr #31
   22fac:	andeq	r2, r3, r0, asr r0
   22fb0:	andeq	r0, r0, r0, lsr #1
   22fb4:	andeq	r2, r3, r4, lsr r0
   22fb8:	andeq	r1, r3, r4, ror #22
   22fbc:	andeq	pc, r1, ip, lsr #4
   22fc0:	andeq	r1, r3, ip, ror #17
   22fc4:	andeq	r7, r2, r0, lsr r7
   22fc8:	andeq	r1, r3, r4, lsl #17
   22fcc:	andeq	r1, r3, ip, asr #21
   22fd0:	andeq	r1, r3, r4, lsr fp
   22fd4:	andeq	r1, r3, r0, asr #29
   22fd8:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   22fdc:	andeq	r1, r3, r4, lsl #31
   22fe0:	andeq	r1, r3, r4, lsr #31
   22fe4:	ldrdeq	r1, [r3], -r8
   22fe8:	andeq	r1, r3, ip, asr #31
   22fec:	andeq	r1, r3, r4, ror sl
   22ff0:	andeq	r1, r3, r8, lsr #31
   22ff4:			; <UNDEFINED> instruction: 0x00031fb4
   22ff8:	andeq	r1, r3, ip, lsr #31
   22ffc:	andeq	r1, r3, ip, asr pc
   23000:			; <UNDEFINED> instruction: 0x00028dbc
   23004:	andeq	r1, r3, r4, asr #26
   23008:	strdeq	r1, [r3], -r4
   2300c:			; <UNDEFINED> instruction: 0x0001efbc
   23010:	andeq	r1, r3, ip, ror r6
   23014:	andeq	r7, r2, r0, asr #9
   23018:	andeq	r1, r3, ip, asr r6
   2301c:	andeq	r1, r3, r4, lsr #17
   23020:	andeq	r1, r3, ip, lsl #18
   23024:	andeq	r1, r3, r8, lsr r6
   23028:	andeq	r1, r3, r0, lsl #17
   2302c:	andeq	r1, r3, r8, ror #17
   23030:	andeq	r1, r3, r4, lsl r6
   23034:	andeq	r1, r3, ip, asr r8
   23038:	andeq	r1, r3, r4, asr #17
   2303c:	strdeq	r1, [r3], -r0
   23040:	andeq	r1, r3, r8, lsr r8
   23044:	andeq	r1, r3, r0, lsr #17
   23048:	andeq	r1, r3, ip, asr #11
   2304c:	andeq	r1, r3, r4, lsl r8
   23050:	andeq	r1, r3, ip, ror r8
   23054:	andeq	r1, r3, r8, lsr #11
   23058:	strdeq	r1, [r3], -r0
   2305c:	andeq	r1, r3, r8, asr r8
   23060:	andeq	r1, r3, r4, lsl #11
   23064:	andeq	r1, r3, ip, asr #15
   23068:	andeq	r1, r3, r4, lsr r8
   2306c:	strd	r4, [sp, #-20]!	; 0xffffffec
   23070:	mov	r2, #220	; 0xdc
   23074:	mov	r5, r0
   23078:	strd	r6, [sp, #8]
   2307c:	mov	r6, r1
   23080:	mov	r1, #0
   23084:	str	lr, [sp, #16]
   23088:	sub	sp, sp, #452	; 0x1c4
   2308c:	add	r4, sp, #8
   23090:	mov	r0, r4
   23094:	bl	1407c <memset@plt>
   23098:	mov	r2, #220	; 0xdc
   2309c:	mov	r1, #0
   230a0:	add	r0, sp, #228	; 0xe4
   230a4:	bl	1407c <memset@plt>
   230a8:	mov	r2, r4
   230ac:	mov	r1, r6
   230b0:	ldr	r0, [r6, #12]
   230b4:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   230b8:	ldr	r1, [pc, #372]	; 23234 <__flatcc_fb_gen_c_verifier@@Base+0x1e28>
   230bc:	mov	r2, r4
   230c0:	mov	r0, r5
   230c4:	add	r1, pc, r1
   230c8:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   230cc:	ldr	r1, [pc, #356]	; 23238 <__flatcc_fb_gen_c_verifier@@Base+0x1e2c>
   230d0:	mov	r0, r5
   230d4:	add	r1, pc, r1
   230d8:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   230dc:	ldr	r3, [r5, #220]	; 0xdc
   230e0:	mov	r0, r5
   230e4:	ldr	r1, [pc, #336]	; 2323c <__flatcc_fb_gen_c_verifier@@Base+0x1e30>
   230e8:	add	r3, r3, #1
   230ec:	add	r1, pc, r1
   230f0:	str	r3, [r5, #220]	; 0xdc
   230f4:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   230f8:	ldr	r4, [r6, #20]
   230fc:	cmp	r4, #0
   23100:	beq	23168 <__flatcc_fb_gen_c_verifier@@Base+0x1d5c>
   23104:	ldr	r6, [pc, #308]	; 23240 <__flatcc_fb_gen_c_verifier@@Base+0x1e34>
   23108:	ldr	r7, [pc, #308]	; 23244 <__flatcc_fb_gen_c_verifier@@Base+0x1e38>
   2310c:	add	r6, pc, r6
   23110:	add	r7, pc, r7
   23114:	b	23144 <__flatcc_fb_gen_c_verifier@@Base+0x1d38>
   23118:	ldr	r3, [r4, #4]
   2311c:	mov	r1, r6
   23120:	mov	r0, r5
   23124:	ldr	r2, [r4, #48]	; 0x30
   23128:	ldr	ip, [r3]
   2312c:	ldr	r3, [r3, #4]
   23130:	str	ip, [sp]
   23134:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   23138:	ldr	r4, [r4]
   2313c:	cmp	r4, #0
   23140:	beq	23168 <__flatcc_fb_gen_c_verifier@@Base+0x1d5c>
   23144:	ldrh	r3, [r4, #24]
   23148:	cmp	r3, #0
   2314c:	bne	23118 <__flatcc_fb_gen_c_verifier@@Base+0x1d0c>
   23150:	mov	r1, r7
   23154:	mov	r0, r5
   23158:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   2315c:	ldr	r4, [r4]
   23160:	cmp	r4, #0
   23164:	bne	23144 <__flatcc_fb_gen_c_verifier@@Base+0x1d38>
   23168:	ldr	r1, [pc, #216]	; 23248 <__flatcc_fb_gen_c_verifier@@Base+0x1e3c>
   2316c:	mov	r0, r5
   23170:	add	r1, pc, r1
   23174:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   23178:	ldr	r3, [r5, #220]	; 0xdc
   2317c:	add	r2, r3, #1
   23180:	cmp	r2, #0
   23184:	str	r2, [r5, #220]	; 0xdc
   23188:	beq	231ec <__flatcc_fb_gen_c_verifier@@Base+0x1de0>
   2318c:	ldr	r4, [pc, #184]	; 2324c <__flatcc_fb_gen_c_verifier@@Base+0x1e40>
   23190:	mov	r0, r5
   23194:	str	r3, [r5, #220]	; 0xdc
   23198:	add	r4, pc, r4
   2319c:	mov	r1, r4
   231a0:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   231a4:	ldr	r3, [r5, #220]	; 0xdc
   231a8:	cmp	r3, #0
   231ac:	beq	23210 <__flatcc_fb_gen_c_verifier@@Base+0x1e04>
   231b0:	sub	r3, r3, #1
   231b4:	mov	r1, r4
   231b8:	mov	r0, r5
   231bc:	str	r3, [r5, #220]	; 0xdc
   231c0:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   231c4:	ldr	r1, [pc, #132]	; 23250 <__flatcc_fb_gen_c_verifier@@Base+0x1e44>
   231c8:	mov	r0, r5
   231cc:	add	r1, pc, r1
   231d0:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   231d4:	mov	r0, #0
   231d8:	add	sp, sp, #452	; 0x1c4
   231dc:	ldrd	r4, [sp]
   231e0:	ldrd	r6, [sp, #8]
   231e4:	add	sp, sp, #16
   231e8:	pop	{pc}		; (ldr pc, [sp], #4)
   231ec:	ldr	r3, [pc, #96]	; 23254 <__flatcc_fb_gen_c_verifier@@Base+0x1e48>
   231f0:	movw	r2, #1582	; 0x62e
   231f4:	ldr	r1, [pc, #92]	; 23258 <__flatcc_fb_gen_c_verifier@@Base+0x1e4c>
   231f8:	ldr	r0, [pc, #92]	; 2325c <__flatcc_fb_gen_c_verifier@@Base+0x1e50>
   231fc:	add	r3, pc, r3
   23200:	add	r3, r3, #48	; 0x30
   23204:	add	r1, pc, r1
   23208:	add	r0, pc, r0
   2320c:	bl	14118 <__assert_fail@plt>
   23210:	ldr	r3, [pc, #72]	; 23260 <__flatcc_fb_gen_c_verifier@@Base+0x1e54>
   23214:	movw	r2, #1583	; 0x62f
   23218:	ldr	r1, [pc, #68]	; 23264 <__flatcc_fb_gen_c_verifier@@Base+0x1e58>
   2321c:	ldr	r0, [pc, #68]	; 23268 <__flatcc_fb_gen_c_verifier@@Base+0x1e5c>
   23220:	add	r3, pc, r3
   23224:	add	r3, r3, #48	; 0x30
   23228:	add	r1, pc, r1
   2322c:	add	r0, pc, r0
   23230:	bl	14118 <__assert_fail@plt>
   23234:	ldrdeq	r1, [r3], -r8
   23238:	ldrdeq	r4, [r3], -r0
   2323c:	andeq	r1, r3, r4, asr #19
   23240:	andeq	r1, r3, r4, ror #25
   23244:	andeq	r1, r3, r0, asr #25
   23248:	andeq	r1, r3, r0, lsr #25
   2324c:	andeq	r1, r3, r8, lsl r6
   23250:	andeq	r8, r2, ip, ror #19
   23254:	andeq	r1, r3, ip, ror #5
   23258:	andeq	r1, r3, r4, lsr r5
   2325c:	muleq	r3, ip, r5
   23260:	andeq	r1, r3, r8, asr #5
   23264:	andeq	r1, r3, r0, lsl r5
   23268:	andeq	r1, r3, r8, ror r5
   2326c:	add	r3, r1, #4
   23270:	ldr	r1, [pc, #12]	; 23284 <__flatcc_fb_gen_c_verifier@@Base+0x1e78>
   23274:	mov	r2, r0
   23278:	mov	r0, r3
   2327c:	add	r1, pc, r1
   23280:	b	2c818 <fb_symbol_table_visit@@Base>
   23284:	andeq	r1, r0, ip, lsr fp
   23288:	add	r3, r1, #4
   2328c:	ldr	r1, [pc, #12]	; 232a0 <__flatcc_fb_gen_c_verifier@@Base+0x1e94>
   23290:	mov	r2, r0
   23294:	mov	r0, r3
   23298:	add	r1, pc, r1
   2329c:	b	2c818 <fb_symbol_table_visit@@Base>
   232a0:	andeq	r2, r0, ip, lsl #5
   232a4:	ldr	r3, [pc, #76]	; 232f8 <__flatcc_fb_gen_c_verifier@@Base+0x1eec>
   232a8:	mov	r2, #8
   232ac:	strd	r4, [sp, #-16]!
   232b0:	mov	r4, r1
   232b4:	mov	r5, r0
   232b8:	str	r6, [sp, #8]
   232bc:	str	lr, [sp, #12]
   232c0:	add	r3, pc, r3
   232c4:	bl	140e8 <qsort@plt>
   232c8:	cmp	r4, #0
   232cc:	ble	232e8 <__flatcc_fb_gen_c_verifier@@Base+0x1edc>
   232d0:	mov	r3, #0
   232d4:	ldr	r2, [r5, r3, lsl #3]
   232d8:	str	r3, [r2, #124]	; 0x7c
   232dc:	add	r3, r3, #1
   232e0:	cmp	r4, r3
   232e4:	bne	232d4 <__flatcc_fb_gen_c_verifier@@Base+0x1ec8>
   232e8:	ldrd	r4, [sp]
   232ec:	ldr	r6, [sp, #8]
   232f0:	add	sp, sp, #12
   232f4:	pop	{pc}		; (ldr pc, [sp], #4)
   232f8:	andeq	r0, r0, r0, ror #9
   232fc:	strd	r4, [sp, #-16]!
   23300:	ldm	r0, {r0, r5}
   23304:	ldm	r1, {r1, r4}
   23308:	str	r6, [sp, #8]
   2330c:	str	lr, [sp, #12]
   23310:	cmp	r5, r4
   23314:	movlt	r2, r5
   23318:	movge	r2, r4
   2331c:	bl	13fc8 <memcmp@plt>
   23320:	cmp	r0, #0
   23324:	ldr	r6, [sp, #8]
   23328:	subeq	r0, r5, r4
   2332c:	ldrd	r4, [sp]
   23330:	add	sp, sp, #12
   23334:	pop	{pc}		; (ldr pc, [sp], #4)
   23338:	strd	r4, [sp, #-36]!	; 0xffffffdc
   2333c:	mov	r5, #0
   23340:	mov	r3, r1
   23344:	strd	r6, [sp, #8]
   23348:	mov	r4, r0
   2334c:	mov	r0, r1
   23350:	strd	r8, [sp, #16]
   23354:	add	r9, r3, #4
   23358:	strd	sl, [sp, #24]
   2335c:	str	lr, [sp, #32]
   23360:	sub	sp, sp, #260	; 0x104
   23364:	add	r6, sp, #24
   23368:	add	r8, sp, #52	; 0x34
   2336c:	ldr	sl, [pc, #816]	; 236a4 <__flatcc_fb_gen_c_verifier@@Base+0x2298>
   23370:	mov	r1, r8
   23374:	str	r5, [sp, #24]
   23378:	add	r7, sp, #12
   2337c:	str	r5, [r6, #4]
   23380:	str	r5, [r6, #8]
   23384:	str	r5, [r6, #12]
   23388:	str	r5, [r6, #16]
   2338c:	add	sl, pc, sl
   23390:	str	r5, [r6, #20]
   23394:	str	r5, [r6, #24]
   23398:	bl	16170 <__flatcc_fb_copy_scope@@Base>
   2339c:	ldr	r1, [pc, #772]	; 236a8 <__flatcc_fb_gen_c_verifier@@Base+0x229c>
   233a0:	mov	r0, r9
   233a4:	mov	r2, r7
   233a8:	str	r5, [sp, #12]
   233ac:	ldr	r3, [r4, #208]	; 0xd0
   233b0:	str	r5, [r7, #8]
   233b4:	add	r1, pc, r1
   233b8:	str	r3, [sp, #16]
   233bc:	bl	2c818 <fb_symbol_table_visit@@Base>
   233c0:	ldr	r5, [sp, #12]
   233c4:	cmp	r5, #0
   233c8:	streq	r5, [sp, #24]
   233cc:	beq	23414 <__flatcc_fb_gen_c_verifier@@Base+0x2008>
   233d0:	lsl	r0, r5, #4
   233d4:	bl	14010 <malloc@plt>
   233d8:	subs	fp, r0, #0
   233dc:	beq	235d8 <__flatcc_fb_gen_c_verifier@@Base+0x21cc>
   233e0:	ldr	r1, [pc, #708]	; 236ac <__flatcc_fb_gen_c_verifier@@Base+0x22a0>
   233e4:	mov	r2, r7
   233e8:	mov	r0, r9
   233ec:	str	fp, [sp, #20]
   233f0:	add	r1, pc, r1
   233f4:	bl	2c818 <fb_symbol_table_visit@@Base>
   233f8:	ldr	r3, [pc, #688]	; 236b0 <__flatcc_fb_gen_c_verifier@@Base+0x22a4>
   233fc:	mov	r2, #16
   23400:	mov	r0, fp
   23404:	ldr	r1, [sp, #12]
   23408:	add	r3, pc, r3
   2340c:	bl	140e8 <qsort@plt>
   23410:	str	fp, [sp, #24]
   23414:	ldr	r1, [pc, #664]	; 236b4 <__flatcc_fb_gen_c_verifier@@Base+0x22a8>
   23418:	mov	lr, #3
   2341c:	mov	r7, #0
   23420:	mov	r3, r8
   23424:	mov	r0, r4
   23428:	ldr	ip, [pc, #648]	; 236b8 <__flatcc_fb_gen_c_verifier@@Base+0x22ac>
   2342c:	str	r7, [sp, #36]	; 0x24
   23430:	ldr	r2, [r4, #208]	; 0xd0
   23434:	add	r1, pc, r1
   23438:	str	r1, [sp, #28]
   2343c:	add	ip, pc, ip
   23440:	ldr	r1, [pc, #628]	; 236bc <__flatcc_fb_gen_c_verifier@@Base+0x22b0>
   23444:	str	ip, [sp, #32]
   23448:	ldr	r2, [r2, #160]	; 0xa0
   2344c:	str	lr, [sp, #40]	; 0x28
   23450:	add	r1, pc, r1
   23454:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   23458:	ldr	r3, [r4, #220]	; 0xdc
   2345c:	mov	r0, r4
   23460:	ldr	r1, [pc, #600]	; 236c0 <__flatcc_fb_gen_c_verifier@@Base+0x22b4>
   23464:	add	r3, r3, #2
   23468:	add	r1, pc, r1
   2346c:	str	r3, [r4, #220]	; 0xdc
   23470:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   23474:	ldr	r3, [r4, #220]	; 0xdc
   23478:	cmp	r3, r7
   2347c:	beq	23638 <__flatcc_fb_gen_c_verifier@@Base+0x222c>
   23480:	cmp	r3, #1
   23484:	streq	r7, [r4, #220]	; 0xdc
   23488:	beq	23638 <__flatcc_fb_gen_c_verifier@@Base+0x222c>
   2348c:	ldr	r1, [pc, #560]	; 236c4 <__flatcc_fb_gen_c_verifier@@Base+0x22b8>
   23490:	sub	r3, r3, #2
   23494:	mov	r0, r4
   23498:	str	r3, [r4, #220]	; 0xdc
   2349c:	add	r1, pc, r1
   234a0:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   234a4:	ldr	r3, [r4, #220]	; 0xdc
   234a8:	cmp	r5, #0
   234ac:	add	r3, r3, #1
   234b0:	str	r3, [r4, #220]	; 0xdc
   234b4:	beq	23590 <__flatcc_fb_gen_c_verifier@@Base+0x2184>
   234b8:	ldr	r1, [pc, #520]	; 236c8 <__flatcc_fb_gen_c_verifier@@Base+0x22bc>
   234bc:	mov	r0, r4
   234c0:	add	r1, pc, r1
   234c4:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   234c8:	ldr	r1, [pc, #508]	; 236cc <__flatcc_fb_gen_c_verifier@@Base+0x22c0>
   234cc:	mov	r0, r4
   234d0:	add	r1, pc, r1
   234d4:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   234d8:	ldr	r1, [pc, #496]	; 236d0 <__flatcc_fb_gen_c_verifier@@Base+0x22c4>
   234dc:	mov	r0, r4
   234e0:	add	r1, pc, r1
   234e4:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   234e8:	ldr	r1, [pc, #484]	; 236d4 <__flatcc_fb_gen_c_verifier@@Base+0x22c8>
   234ec:	mov	r0, r4
   234f0:	add	r1, pc, r1
   234f4:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   234f8:	ldr	r1, [pc, #472]	; 236d8 <__flatcc_fb_gen_c_verifier@@Base+0x22cc>
   234fc:	mov	r0, r4
   23500:	add	r1, pc, r1
   23504:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   23508:	sub	r3, r5, #1
   2350c:	mov	r2, r7
   23510:	str	r7, [sp]
   23514:	mov	r1, r6
   23518:	mov	r0, r4
   2351c:	bl	21dac <__flatcc_fb_gen_c_verifier@@Base+0x9a0>
   23520:	ldr	r1, [pc, #436]	; 236dc <__flatcc_fb_gen_c_verifier@@Base+0x22d0>
   23524:	mov	r0, r4
   23528:	add	r1, pc, r1
   2352c:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   23530:	ldr	r3, [r4, #220]	; 0xdc
   23534:	cmp	r3, #0
   23538:	beq	2365c <__flatcc_fb_gen_c_verifier@@Base+0x2250>
   2353c:	ldr	r1, [pc, #412]	; 236e0 <__flatcc_fb_gen_c_verifier@@Base+0x22d4>
   23540:	sub	r3, r3, #1
   23544:	mov	r0, r4
   23548:	str	r3, [r4, #220]	; 0xdc
   2354c:	add	r1, pc, r1
   23550:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   23554:	ldr	r1, [pc, #392]	; 236e4 <__flatcc_fb_gen_c_verifier@@Base+0x22d8>
   23558:	mov	r0, r4
   2355c:	add	r1, pc, r1
   23560:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   23564:	ldr	r0, [sp, #24]
   23568:	cmp	r0, #0
   2356c:	beq	23574 <__flatcc_fb_gen_c_verifier@@Base+0x2168>
   23570:	bl	13fa4 <free@plt>
   23574:	add	sp, sp, #260	; 0x104
   23578:	ldrd	r4, [sp]
   2357c:	ldrd	r6, [sp, #8]
   23580:	ldrd	r8, [sp, #16]
   23584:	ldrd	sl, [sp, #24]
   23588:	add	sp, sp, #32
   2358c:	pop	{pc}		; (ldr pc, [sp], #4)
   23590:	ldr	r1, [pc, #336]	; 236e8 <__flatcc_fb_gen_c_verifier@@Base+0x22dc>
   23594:	mov	r0, r4
   23598:	add	r1, pc, r1
   2359c:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   235a0:	ldr	r1, [pc, #324]	; 236ec <__flatcc_fb_gen_c_verifier@@Base+0x22e0>
   235a4:	mov	r0, r4
   235a8:	add	r1, pc, r1
   235ac:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   235b0:	ldr	r3, [r4, #220]	; 0xdc
   235b4:	cmp	r3, #0
   235b8:	beq	23680 <__flatcc_fb_gen_c_verifier@@Base+0x2274>
   235bc:	ldr	r1, [pc, #300]	; 236f0 <__flatcc_fb_gen_c_verifier@@Base+0x22e4>
   235c0:	sub	r3, r3, #1
   235c4:	mov	r0, r4
   235c8:	str	r3, [r4, #220]	; 0xdc
   235cc:	add	r1, pc, r1
   235d0:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   235d4:	b	23554 <__flatcc_fb_gen_c_verifier@@Base+0x2148>
   235d8:	cmp	r5, #0
   235dc:	str	fp, [sp, #24]
   235e0:	ble	23414 <__flatcc_fb_gen_c_verifier@@Base+0x2008>
   235e4:	ldr	r2, [pc, #264]	; 236f4 <__flatcc_fb_gen_c_verifier@@Base+0x22e8>
   235e8:	movw	r3, #1140	; 0x474
   235ec:	ldr	r0, [pc, #260]	; 236f8 <__flatcc_fb_gen_c_verifier@@Base+0x22ec>
   235f0:	ldr	r4, [pc, #260]	; 236fc <__flatcc_fb_gen_c_verifier@@Base+0x22f0>
   235f4:	ldr	r1, [pc, #260]	; 23700 <__flatcc_fb_gen_c_verifier@@Base+0x22f4>
   235f8:	add	r0, pc, r0
   235fc:	ldr	ip, [sl, r2]
   23600:	add	r4, pc, r4
   23604:	str	r0, [sp]
   23608:	mov	r2, r4
   2360c:	add	r1, pc, r1
   23610:	ldr	r0, [ip]
   23614:	bl	14064 <fprintf@plt>
   23618:	ldr	r3, [pc, #228]	; 23704 <__flatcc_fb_gen_c_verifier@@Base+0x22f8>
   2361c:	mov	r1, r4
   23620:	movw	r2, #1140	; 0x474
   23624:	ldr	r0, [pc, #220]	; 23708 <__flatcc_fb_gen_c_verifier@@Base+0x22fc>
   23628:	add	r3, pc, r3
   2362c:	add	r3, r3, #72	; 0x48
   23630:	add	r0, pc, r0
   23634:	bl	14118 <__assert_fail@plt>
   23638:	ldr	r3, [pc, #204]	; 2370c <__flatcc_fb_gen_c_verifier@@Base+0x2300>
   2363c:	mov	r2, #1152	; 0x480
   23640:	ldr	r1, [pc, #200]	; 23710 <__flatcc_fb_gen_c_verifier@@Base+0x2304>
   23644:	ldr	r0, [pc, #200]	; 23714 <__flatcc_fb_gen_c_verifier@@Base+0x2308>
   23648:	add	r3, pc, r3
   2364c:	add	r3, r3, #72	; 0x48
   23650:	add	r1, pc, r1
   23654:	add	r0, pc, r0
   23658:	bl	14118 <__assert_fail@plt>
   2365c:	ldr	r3, [pc, #180]	; 23718 <__flatcc_fb_gen_c_verifier@@Base+0x230c>
   23660:	movw	r2, #1166	; 0x48e
   23664:	ldr	r1, [pc, #176]	; 2371c <__flatcc_fb_gen_c_verifier@@Base+0x2310>
   23668:	ldr	r0, [pc, #176]	; 23720 <__flatcc_fb_gen_c_verifier@@Base+0x2314>
   2366c:	add	r3, pc, r3
   23670:	add	r3, r3, #72	; 0x48
   23674:	add	r1, pc, r1
   23678:	add	r0, pc, r0
   2367c:	bl	14118 <__assert_fail@plt>
   23680:	ldr	r3, [pc, #156]	; 23724 <__flatcc_fb_gen_c_verifier@@Base+0x2318>
   23684:	movw	r2, #1157	; 0x485
   23688:	ldr	r1, [pc, #152]	; 23728 <__flatcc_fb_gen_c_verifier@@Base+0x231c>
   2368c:	ldr	r0, [pc, #152]	; 2372c <__flatcc_fb_gen_c_verifier@@Base+0x2320>
   23690:	add	r3, pc, r3
   23694:	add	r3, r3, #72	; 0x48
   23698:	add	r1, pc, r1
   2369c:	add	r0, pc, r0
   236a0:	bl	14118 <__assert_fail@plt>
   236a4:	andeq	r9, r4, ip, ror #24
   236a8:	strheq	r2, [r0], -ip
   236ac:	andeq	r2, r0, ip, asr #1
   236b0:			; <UNDEFINED> instruction: 0xfffffeec
   236b4:	andeq	r0, r0, r8, asr #10
   236b8:			; <UNDEFINED> instruction: 0xffffe4c4
   236bc:	andeq	r1, r3, r0, lsr #10
   236c0:	strdeq	r1, [r3], -r8
   236c4:	andeq	r3, r3, r8, lsl #30
   236c8:	andeq	r1, r3, r8, lsr #20
   236cc:	andeq	r1, r3, r8, lsr sl
   236d0:	andeq	r1, r3, ip, lsr sl
   236d4:	andeq	r8, r2, r8, asr #13
   236d8:	andeq	r1, r3, ip, lsr #7
   236dc:	andeq	r1, r3, r0, lsl #16
   236e0:	andeq	r1, r3, r4, ror #4
   236e4:	andeq	r8, r2, ip, asr r6
   236e8:	strdeq	r1, [r3], -ip
   236ec:	andeq	r1, r3, r0, lsr #18
   236f0:	andeq	r1, r3, r4, ror #3
   236f4:	andeq	r0, r0, r0, lsr #1
   236f8:	andeq	r1, r3, ip, lsr #16
   236fc:	andeq	r1, r3, r8, lsr r1
   23700:	andeq	lr, r1, r4, lsl #16
   23704:	andeq	r0, r3, r0, asr #29
   23708:	andeq	r6, r2, r4, lsl #26
   2370c:	andeq	r0, r3, r0, lsr #29
   23710:	andeq	r1, r3, r8, ror #1
   23714:	andeq	r1, r3, r0, asr r1
   23718:	andeq	r0, r3, ip, ror lr
   2371c:	andeq	r1, r3, r4, asr #1
   23720:	andeq	r1, r3, ip, lsr #2
   23724:	andeq	r0, r3, r8, asr lr
   23728:	andeq	r1, r3, r0, lsr #1
   2372c:	andeq	r1, r3, r8, lsl #2
   23730:	str	r4, [sp, #-8]!
   23734:	mov	r4, r0
   23738:	ldr	r0, [r0, #16]
   2373c:	str	lr, [sp, #4]
   23740:	cmp	r0, #0
   23744:	beq	2374c <__flatcc_fb_gen_c_verifier@@Base+0x2340>
   23748:	bl	13fa4 <free@plt>
   2374c:	ldr	r0, [r4, #20]
   23750:	cmp	r0, #0
   23754:	beq	2375c <__flatcc_fb_gen_c_verifier@@Base+0x2350>
   23758:	bl	13fa4 <free@plt>
   2375c:	ldr	r0, [r4, #24]
   23760:	cmp	r0, #0
   23764:	beq	2376c <__flatcc_fb_gen_c_verifier@@Base+0x2360>
   23768:	bl	13fa4 <free@plt>
   2376c:	mov	r3, #0
   23770:	str	r3, [r4]
   23774:	str	r3, [r4, #4]
   23778:	str	r3, [r4, #8]
   2377c:	str	r3, [r4, #12]
   23780:	str	r3, [r4, #16]
   23784:	str	r3, [r4, #20]
   23788:	str	r3, [r4, #24]
   2378c:	str	r3, [r4, #28]
   23790:	str	r3, [r4, #32]
   23794:	str	r3, [r4, #36]	; 0x24
   23798:	str	r3, [r4, #40]	; 0x28
   2379c:	ldr	r4, [sp]
   237a0:	add	sp, sp, #4
   237a4:	pop	{pc}		; (ldr pc, [sp], #4)
   237a8:	ldr	r0, [r0, #4]
   237ac:	ldr	r1, [r1, #4]
   237b0:	b	13f8c <strcmp@plt>
   237b4:	strd	r4, [sp, #-16]!
   237b8:	mov	r5, r1
   237bc:	mov	r4, r0
   237c0:	ldr	r1, [pc, #380]	; 23944 <__flatcc_fb_gen_c_verifier@@Base+0x2538>
   237c4:	str	r6, [sp, #8]
   237c8:	mov	r6, r2
   237cc:	str	lr, [sp, #12]
   237d0:	sub	sp, sp, #8
   237d4:	ldr	r2, [sp, #24]
   237d8:	add	r1, pc, r1
   237dc:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   237e0:	ldr	r1, [pc, #352]	; 23948 <__flatcc_fb_gen_c_verifier@@Base+0x253c>
   237e4:	mov	r0, r4
   237e8:	add	r1, pc, r1
   237ec:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   237f0:	ldr	r2, [r4, #220]	; 0xdc
   237f4:	ldr	r3, [r5, #40]	; 0x28
   237f8:	ldr	r1, [pc, #332]	; 2394c <__flatcc_fb_gen_c_verifier@@Base+0x2540>
   237fc:	add	r2, r2, #1
   23800:	sub	r3, r3, #1
   23804:	str	r2, [r4, #220]	; 0xdc
   23808:	add	r1, pc, r1
   2380c:	cmp	r3, #8
   23810:	addls	pc, pc, r3, lsl #2
   23814:	b	238f0 <__flatcc_fb_gen_c_verifier@@Base+0x24e4>
   23818:	b	238a0 <__flatcc_fb_gen_c_verifier@@Base+0x2494>
   2381c:	b	238a0 <__flatcc_fb_gen_c_verifier@@Base+0x2494>
   23820:	b	238a0 <__flatcc_fb_gen_c_verifier@@Base+0x2494>
   23824:	b	238a0 <__flatcc_fb_gen_c_verifier@@Base+0x2494>
   23828:	b	238a0 <__flatcc_fb_gen_c_verifier@@Base+0x2494>
   2382c:	b	2383c <__flatcc_fb_gen_c_verifier@@Base+0x2430>
   23830:	b	2383c <__flatcc_fb_gen_c_verifier@@Base+0x2430>
   23834:	b	2383c <__flatcc_fb_gen_c_verifier@@Base+0x2430>
   23838:	b	2383c <__flatcc_fb_gen_c_verifier@@Base+0x2430>
   2383c:	ldrd	r2, [r6, #48]	; 0x30
   23840:	cmp	r2, #0
   23844:	sbcs	r1, r3, #0
   23848:	blt	238b8 <__flatcc_fb_gen_c_verifier@@Base+0x24ac>
   2384c:	ldr	r1, [pc, #252]	; 23950 <__flatcc_fb_gen_c_verifier@@Base+0x2544>
   23850:	mov	r0, r4
   23854:	add	r1, pc, r1
   23858:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   2385c:	ldr	r3, [r4, #220]	; 0xdc
   23860:	cmp	r3, #0
   23864:	beq	238cc <__flatcc_fb_gen_c_verifier@@Base+0x24c0>
   23868:	ldr	r1, [pc, #228]	; 23954 <__flatcc_fb_gen_c_verifier@@Base+0x2548>
   2386c:	sub	r3, r3, #1
   23870:	mov	r0, r4
   23874:	str	r3, [r4, #220]	; 0xdc
   23878:	add	r1, pc, r1
   2387c:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   23880:	ldr	r3, [r4, #220]	; 0xdc
   23884:	add	r3, r3, #1
   23888:	str	r3, [r4, #220]	; 0xdc
   2388c:	add	sp, sp, #8
   23890:	ldrd	r4, [sp]
   23894:	ldr	r6, [sp, #8]
   23898:	add	sp, sp, #12
   2389c:	pop	{pc}		; (ldr pc, [sp], #4)
   238a0:	ldr	r1, [pc, #176]	; 23958 <__flatcc_fb_gen_c_verifier@@Base+0x254c>
   238a4:	mov	r0, r4
   238a8:	ldrd	r2, [r6, #48]	; 0x30
   238ac:	add	r1, pc, r1
   238b0:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   238b4:	b	2385c <__flatcc_fb_gen_c_verifier@@Base+0x2450>
   238b8:	ldr	r1, [pc, #156]	; 2395c <__flatcc_fb_gen_c_verifier@@Base+0x2550>
   238bc:	mov	r0, r4
   238c0:	add	r1, pc, r1
   238c4:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   238c8:	b	2385c <__flatcc_fb_gen_c_verifier@@Base+0x2450>
   238cc:	ldr	r3, [pc, #140]	; 23960 <__flatcc_fb_gen_c_verifier@@Base+0x2554>
   238d0:	movw	r2, #719	; 0x2cf
   238d4:	ldr	r1, [pc, #136]	; 23964 <__flatcc_fb_gen_c_verifier@@Base+0x2558>
   238d8:	ldr	r0, [pc, #136]	; 23968 <__flatcc_fb_gen_c_verifier@@Base+0x255c>
   238dc:	add	r3, pc, r3
   238e0:	add	r3, r3, #120	; 0x78
   238e4:	add	r1, pc, r1
   238e8:	add	r0, pc, r0
   238ec:	bl	14118 <__assert_fail@plt>
   238f0:	ldr	r2, [pc, #116]	; 2396c <__flatcc_fb_gen_c_verifier@@Base+0x2560>
   238f4:	movw	r3, #710	; 0x2c6
   238f8:	ldr	r0, [pc, #112]	; 23970 <__flatcc_fb_gen_c_verifier@@Base+0x2564>
   238fc:	ldr	r4, [pc, #112]	; 23974 <__flatcc_fb_gen_c_verifier@@Base+0x2568>
   23900:	ldr	ip, [r1, r2]
   23904:	add	r0, pc, r0
   23908:	ldr	r1, [pc, #104]	; 23978 <__flatcc_fb_gen_c_verifier@@Base+0x256c>
   2390c:	add	r4, pc, r4
   23910:	str	r0, [sp]
   23914:	mov	r2, r4
   23918:	ldr	r0, [ip]
   2391c:	add	r1, pc, r1
   23920:	bl	14064 <fprintf@plt>
   23924:	ldr	r3, [pc, #80]	; 2397c <__flatcc_fb_gen_c_verifier@@Base+0x2570>
   23928:	mov	r1, r4
   2392c:	movw	r2, #710	; 0x2c6
   23930:	ldr	r0, [pc, #72]	; 23980 <__flatcc_fb_gen_c_verifier@@Base+0x2574>
   23934:	add	r3, pc, r3
   23938:	add	r3, r3, #96	; 0x60
   2393c:	add	r0, pc, r0
   23940:	bl	14118 <__assert_fail@plt>
   23944:	andeq	r1, r3, r0, asr r7
   23948:	muleq	r3, r0, r7
   2394c:	strdeq	r9, [r4], -r0
   23950:	andeq	r1, r3, r8, lsr r7
   23954:	andeq	r1, r3, ip, asr r4
   23958:	andeq	r1, r3, r0, ror #13
   2395c:	strdeq	r1, [r3], -r8
   23960:	andeq	r0, r3, ip, lsl #24
   23964:	andeq	r0, r3, r4, asr lr
   23968:			; <UNDEFINED> instruction: 0x00030ebc
   2396c:	andeq	r0, r0, r0, lsr #1
   23970:	andeq	r1, r3, r0, ror #13
   23974:	andeq	r0, r3, ip, lsr #28
   23978:	strdeq	lr, [r1], -r4
   2397c:			; <UNDEFINED> instruction: 0x00030bb4
   23980:	strdeq	r6, [r2], -r8
   23984:	ldr	r1, [pc, #272]	; 23a9c <__flatcc_fb_gen_c_verifier@@Base+0x2690>
   23988:	strd	r4, [sp, #-16]!
   2398c:	mov	r4, r0
   23990:	str	r6, [sp, #8]
   23994:	mov	r6, r2
   23998:	str	lr, [sp, #12]
   2399c:	sub	sp, sp, #224	; 0xe0
   239a0:	ldr	r2, [sp, #240]	; 0xf0
   239a4:	add	r1, pc, r1
   239a8:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   239ac:	ldr	r1, [pc, #236]	; 23aa0 <__flatcc_fb_gen_c_verifier@@Base+0x2694>
   239b0:	mov	r0, r4
   239b4:	add	r1, pc, r1
   239b8:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   239bc:	ldrh	r2, [r6, #8]
   239c0:	ldr	r3, [r4, #220]	; 0xdc
   239c4:	sub	r2, r2, #3
   239c8:	cmp	r2, #1
   239cc:	add	r3, r3, #1
   239d0:	str	r3, [r4, #220]	; 0xdc
   239d4:	bhi	23a54 <__flatcc_fb_gen_c_verifier@@Base+0x2648>
   239d8:	add	r5, sp, #4
   239dc:	mov	r2, #220	; 0xdc
   239e0:	mov	r1, #0
   239e4:	mov	r0, r5
   239e8:	bl	1407c <memset@plt>
   239ec:	mov	r2, r5
   239f0:	mov	r1, r6
   239f4:	ldr	r0, [r6, #12]
   239f8:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   239fc:	ldr	r1, [pc, #160]	; 23aa4 <__flatcc_fb_gen_c_verifier@@Base+0x2698>
   23a00:	mov	r2, r5
   23a04:	mov	r0, r4
   23a08:	add	r1, pc, r1
   23a0c:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   23a10:	ldr	r3, [r4, #220]	; 0xdc
   23a14:	cmp	r3, #0
   23a18:	beq	23a78 <__flatcc_fb_gen_c_verifier@@Base+0x266c>
   23a1c:	ldr	r1, [pc, #132]	; 23aa8 <__flatcc_fb_gen_c_verifier@@Base+0x269c>
   23a20:	sub	r3, r3, #1
   23a24:	mov	r0, r4
   23a28:	str	r3, [r4, #220]	; 0xdc
   23a2c:	add	r1, pc, r1
   23a30:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   23a34:	ldr	r3, [r4, #220]	; 0xdc
   23a38:	add	r3, r3, #1
   23a3c:	str	r3, [r4, #220]	; 0xdc
   23a40:	add	sp, sp, #224	; 0xe0
   23a44:	ldrd	r4, [sp]
   23a48:	ldr	r6, [sp, #8]
   23a4c:	add	sp, sp, #12
   23a50:	pop	{pc}		; (ldr pc, [sp], #4)
   23a54:	ldr	r3, [pc, #80]	; 23aac <__flatcc_fb_gen_c_verifier@@Base+0x26a0>
   23a58:	movw	r2, #729	; 0x2d9
   23a5c:	ldr	r1, [pc, #76]	; 23ab0 <__flatcc_fb_gen_c_verifier@@Base+0x26a4>
   23a60:	ldr	r0, [pc, #76]	; 23ab4 <__flatcc_fb_gen_c_verifier@@Base+0x26a8>
   23a64:	add	r3, pc, r3
   23a68:	add	r3, r3, #136	; 0x88
   23a6c:	add	r1, pc, r1
   23a70:	add	r0, pc, r0
   23a74:	bl	14118 <__assert_fail@plt>
   23a78:	ldr	r3, [pc, #56]	; 23ab8 <__flatcc_fb_gen_c_verifier@@Base+0x26ac>
   23a7c:	movw	r2, #742	; 0x2e6
   23a80:	ldr	r1, [pc, #52]	; 23abc <__flatcc_fb_gen_c_verifier@@Base+0x26b0>
   23a84:	ldr	r0, [pc, #52]	; 23ac0 <__flatcc_fb_gen_c_verifier@@Base+0x26b4>
   23a88:	add	r3, pc, r3
   23a8c:	add	r3, r3, #160	; 0xa0
   23a90:	add	r1, pc, r1
   23a94:	add	r0, pc, r0
   23a98:	bl	14118 <__assert_fail@plt>
   23a9c:	andeq	r1, r3, r4, ror #12
   23aa0:	andeq	r1, r3, r4, asr #11
   23aa4:	andeq	r1, r3, r4, asr #12
   23aa8:	andeq	r1, r3, r8, lsr #5
   23aac:	andeq	r0, r3, r4, lsl #21
   23ab0:	andeq	r0, r3, ip, asr #25
   23ab4:	ldrdeq	lr, [r1], -r8
   23ab8:	andeq	r0, r3, r0, ror #20
   23abc:	andeq	r0, r3, r8, lsr #25
   23ac0:	andeq	r0, r3, r0, lsl sp
   23ac4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   23ac8:	mov	r5, r1
   23acc:	mov	r4, r0
   23ad0:	ldr	r1, [pc, #4036]	; 24a9c <__flatcc_fb_gen_c_verifier@@Base+0x3690>
   23ad4:	strd	r6, [sp, #8]
   23ad8:	mov	r6, r2
   23adc:	mov	r2, #220	; 0xdc
   23ae0:	strd	r8, [sp, #16]
   23ae4:	mov	r7, r3
   23ae8:	strd	sl, [sp, #24]
   23aec:	str	lr, [sp, #32]
   23af0:	sub	sp, sp, #524	; 0x20c
   23af4:	add	r1, pc, r1
   23af8:	add	ip, sp, #300	; 0x12c
   23afc:	mov	r0, ip
   23b00:	str	ip, [sp, #32]
   23b04:	mov	ip, r1
   23b08:	str	r1, [sp, #92]	; 0x5c
   23b0c:	mov	r1, #0
   23b10:	bl	1407c <memset@plt>
   23b14:	add	r3, sp, #96	; 0x60
   23b18:	ldr	r0, [r6]
   23b1c:	mov	r1, r3
   23b20:	str	r3, [sp, #64]	; 0x40
   23b24:	bl	16170 <__flatcc_fb_copy_scope@@Base>
   23b28:	ldrh	r3, [r5]
   23b2c:	sub	r2, r3, #1
   23b30:	str	r3, [sp, #24]
   23b34:	ldrh	r3, [r7, #24]
   23b38:	clz	r2, r2
   23b3c:	lsr	r2, r2, #5
   23b40:	str	r2, [sp, #72]	; 0x48
   23b44:	cmp	r3, #9
   23b48:	beq	23b90 <__flatcc_fb_gen_c_verifier@@Base+0x2784>
   23b4c:	cmp	r3, #15
   23b50:	beq	23b90 <__flatcc_fb_gen_c_verifier@@Base+0x2784>
   23b54:	cmp	r3, #7
   23b58:	beq	23b90 <__flatcc_fb_gen_c_verifier@@Base+0x2784>
   23b5c:	sub	r3, r3, #7
   23b60:	cmp	r3, #8
   23b64:	addls	pc, pc, r3, lsl #2
   23b68:	b	24878 <__flatcc_fb_gen_c_verifier@@Base+0x346c>
   23b6c:	b	241ac <__flatcc_fb_gen_c_verifier@@Base+0x2da0>
   23b70:	b	24938 <__flatcc_fb_gen_c_verifier@@Base+0x352c>
   23b74:	b	24878 <__flatcc_fb_gen_c_verifier@@Base+0x346c>
   23b78:	b	24238 <__flatcc_fb_gen_c_verifier@@Base+0x2e2c>
   23b7c:	b	24878 <__flatcc_fb_gen_c_verifier@@Base+0x346c>
   23b80:	b	24878 <__flatcc_fb_gen_c_verifier@@Base+0x346c>
   23b84:	b	24878 <__flatcc_fb_gen_c_verifier@@Base+0x346c>
   23b88:	b	23c10 <__flatcc_fb_gen_c_verifier@@Base+0x2804>
   23b8c:	b	23c10 <__flatcc_fb_gen_c_verifier@@Base+0x2804>
   23b90:	sub	r3, r3, #7
   23b94:	cmp	r3, #8
   23b98:	addls	pc, pc, r3, lsl #2
   23b9c:	b	24894 <__flatcc_fb_gen_c_verifier@@Base+0x3488>
   23ba0:	b	2426c <__flatcc_fb_gen_c_verifier@@Base+0x2e60>
   23ba4:	b	23bc4 <__flatcc_fb_gen_c_verifier@@Base+0x27b8>
   23ba8:	b	24274 <__flatcc_fb_gen_c_verifier@@Base+0x2e68>
   23bac:	b	24274 <__flatcc_fb_gen_c_verifier@@Base+0x2e68>
   23bb0:	b	24894 <__flatcc_fb_gen_c_verifier@@Base+0x3488>
   23bb4:	b	24894 <__flatcc_fb_gen_c_verifier@@Base+0x3488>
   23bb8:	b	24894 <__flatcc_fb_gen_c_verifier@@Base+0x3488>
   23bbc:	b	24260 <__flatcc_fb_gen_c_verifier@@Base+0x2e54>
   23bc0:	b	24260 <__flatcc_fb_gen_c_verifier@@Base+0x2e54>
   23bc4:	ldr	r3, [r7, #16]
   23bc8:	mov	r6, #1
   23bcc:	mov	fp, #0
   23bd0:	mov	r9, r3
   23bd4:	mov	r8, r6
   23bd8:	mov	r5, #1
   23bdc:	ldr	r3, [sp, #560]	; 0x230
   23be0:	cmp	r3, #0
   23be4:	movne	sl, #0
   23be8:	strne	sl, [sp, #28]
   23bec:	strne	sl, [sp, #52]	; 0x34
   23bf0:	strne	sl, [sp, #68]	; 0x44
   23bf4:	bne	23ca0 <__flatcc_fb_gen_c_verifier@@Base+0x2894>
   23bf8:	mov	sl, r3
   23bfc:	str	r3, [sp, #28]
   23c00:	str	r3, [sp, #52]	; 0x34
   23c04:	str	r3, [sp, #68]	; 0x44
   23c08:	str	r3, [sp, #88]	; 0x58
   23c0c:	b	23cb8 <__flatcc_fb_gen_c_verifier@@Base+0x28ac>
   23c10:	mov	r8, #0
   23c14:	mov	r6, r8
   23c18:	ldr	r1, [r7, #16]
   23c1c:	ldr	r2, [sp, #32]
   23c20:	ldr	r0, [r1, #12]
   23c24:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   23c28:	ldr	r2, [r7, #16]
   23c2c:	ldrh	r3, [r2, #8]
   23c30:	sub	r1, r3, #3
   23c34:	sub	r9, r3, #4
   23c38:	clz	r1, r1
   23c3c:	clz	r9, r9
   23c40:	lsr	r1, r1, #5
   23c44:	sub	sl, r3, #1
   23c48:	lsr	r9, r9, #5
   23c4c:	clz	sl, sl
   23c50:	lsr	sl, sl, #5
   23c54:	str	r1, [sp, #68]	; 0x44
   23c58:	ldr	r1, [sp, #560]	; 0x230
   23c5c:	cmp	r1, #0
   23c60:	clz	r1, r3
   23c64:	lsr	r1, r1, #5
   23c68:	movne	r9, #0
   23c6c:	cmp	r9, #0
   23c70:	str	r1, [sp, #28]
   23c74:	bne	24780 <__flatcc_fb_gen_c_verifier@@Base+0x3374>
   23c78:	cmp	r3, #3
   23c7c:	beq	24860 <__flatcc_fb_gen_c_verifier@@Base+0x3454>
   23c80:	mov	r5, r9
   23c84:	str	r9, [sp, #52]	; 0x34
   23c88:	str	r9, [sp, #68]	; 0x44
   23c8c:	ldr	r3, [sp, #560]	; 0x230
   23c90:	cmp	r3, #0
   23c94:	streq	r3, [sp, #80]	; 0x50
   23c98:	beq	24794 <__flatcc_fb_gen_c_verifier@@Base+0x3388>
   23c9c:	mov	fp, #0
   23ca0:	cmp	r8, #0
   23ca4:	movne	r3, #1
   23ca8:	movne	r5, #0
   23cac:	movne	r6, r5
   23cb0:	strne	r3, [sp, #88]	; 0x58
   23cb4:	beq	249f8 <__flatcc_fb_gen_c_verifier@@Base+0x35ec>
   23cb8:	cmp	fp, #1
   23cbc:	beq	24824 <__flatcc_fb_gen_c_verifier@@Base+0x3418>
   23cc0:	str	fp, [sp, #56]	; 0x38
   23cc4:	str	fp, [sp, #60]	; 0x3c
   23cc8:	str	fp, [sp, #76]	; 0x4c
   23ccc:	str	fp, [sp, #80]	; 0x50
   23cd0:	str	fp, [sp, #84]	; 0x54
   23cd4:	ldr	r2, [pc, #3524]	; 24aa0 <__flatcc_fb_gen_c_verifier@@Base+0x3694>
   23cd8:	cmp	fp, #2
   23cdc:	ldr	r3, [pc, #3520]	; 24aa4 <__flatcc_fb_gen_c_verifier@@Base+0x3698>
   23ce0:	ldr	r1, [pc, #3520]	; 24aa8 <__flatcc_fb_gen_c_verifier@@Base+0x369c>
   23ce4:	add	r2, pc, r2
   23ce8:	ldr	r0, [pc, #3516]	; 24aac <__flatcc_fb_gen_c_verifier@@Base+0x36a0>
   23cec:	str	r2, [sp, #20]
   23cf0:	add	r3, pc, r3
   23cf4:	str	r2, [sp, #48]	; 0x30
   23cf8:	mov	r8, r3
   23cfc:	ldr	r2, [pc, #3500]	; 24ab0 <__flatcc_fb_gen_c_verifier@@Base+0x36a4>
   23d00:	add	r1, pc, r1
   23d04:	add	r0, pc, r0
   23d08:	add	r2, pc, r2
   23d0c:	beq	23e50 <__flatcc_fb_gen_c_verifier@@Base+0x2a44>
   23d10:	ldr	ip, [sp, #560]	; 0x230
   23d14:	orr	r3, r5, sl
   23d18:	cmp	r5, #0
   23d1c:	orr	r3, r3, ip
   23d20:	str	r3, [sp, #16]
   23d24:	beq	24458 <__flatcc_fb_gen_c_verifier@@Base+0x304c>
   23d28:	sub	r9, r9, #1
   23d2c:	cmp	r9, #10
   23d30:	addls	pc, pc, r9, lsl #2
   23d34:	b	24c84 <__flatcc_fb_gen_c_verifier@@Base+0x3878>
   23d38:	b	23f2c <__flatcc_fb_gen_c_verifier@@Base+0x2b20>
   23d3c:	b	240ec <__flatcc_fb_gen_c_verifier@@Base+0x2ce0>
   23d40:	b	240a8 <__flatcc_fb_gen_c_verifier@@Base+0x2c9c>
   23d44:	b	24108 <__flatcc_fb_gen_c_verifier@@Base+0x2cfc>
   23d48:	b	240d0 <__flatcc_fb_gen_c_verifier@@Base+0x2cc4>
   23d4c:	b	24140 <__flatcc_fb_gen_c_verifier@@Base+0x2d34>
   23d50:	b	24124 <__flatcc_fb_gen_c_verifier@@Base+0x2d18>
   23d54:	b	24190 <__flatcc_fb_gen_c_verifier@@Base+0x2d84>
   23d58:	b	24174 <__flatcc_fb_gen_c_verifier@@Base+0x2d68>
   23d5c:	b	24168 <__flatcc_fb_gen_c_verifier@@Base+0x2d5c>
   23d60:	b	2415c <__flatcc_fb_gen_c_verifier@@Base+0x2d50>
   23d64:	ldr	r1, [pc, #3400]	; 24ab4 <__flatcc_fb_gen_c_verifier@@Base+0x36a8>
   23d68:	mov	r0, r4
   23d6c:	ldrd	r2, [r7, #80]	; 0x50
   23d70:	add	r1, pc, r1
   23d74:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   23d78:	cmp	r5, #0
   23d7c:	bne	2429c <__flatcc_fb_gen_c_verifier@@Base+0x2e90>
   23d80:	cmp	sl, #0
   23d84:	bne	23f14 <__flatcc_fb_gen_c_verifier@@Base+0x2b08>
   23d88:	ldr	r3, [sp, #52]	; 0x34
   23d8c:	cmp	r3, #0
   23d90:	bne	2458c <__flatcc_fb_gen_c_verifier@@Base+0x3180>
   23d94:	ldr	r3, [sp, #76]	; 0x4c
   23d98:	cmp	r3, #0
   23d9c:	bne	245a0 <__flatcc_fb_gen_c_verifier@@Base+0x3194>
   23da0:	ldr	r3, [sp, #28]
   23da4:	cmp	r3, #0
   23da8:	bne	24650 <__flatcc_fb_gen_c_verifier@@Base+0x3244>
   23dac:	ldr	r3, [sp, #80]	; 0x50
   23db0:	cmp	r3, #0
   23db4:	beq	245e4 <__flatcc_fb_gen_c_verifier@@Base+0x31d8>
   23db8:	ldr	r3, [sp, #84]	; 0x54
   23dbc:	ldrd	r0, [r7, #96]	; 0x60
   23dc0:	ldr	r2, [r7, #112]	; 0x70
   23dc4:	cmp	r3, #0
   23dc8:	beq	24668 <__flatcc_fb_gen_c_verifier@@Base+0x325c>
   23dcc:	strd	r0, [sp]
   23dd0:	mov	r0, r4
   23dd4:	ldr	r1, [pc, #3292]	; 24ab8 <__flatcc_fb_gen_c_verifier@@Base+0x36ac>
   23dd8:	ldr	r3, [sp, #28]
   23ddc:	ldr	ip, [sp, #32]
   23de0:	add	r1, pc, r1
   23de4:	str	ip, [sp, #8]
   23de8:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   23dec:	cmp	r6, #0
   23df0:	beq	23e44 <__flatcc_fb_gen_c_verifier@@Base+0x2a38>
   23df4:	ldr	r3, [sp, #16]
   23df8:	cmp	r3, #0
   23dfc:	beq	24500 <__flatcc_fb_gen_c_verifier@@Base+0x30f4>
   23e00:	ldr	r1, [pc, #3252]	; 24abc <__flatcc_fb_gen_c_verifier@@Base+0x36b0>
   23e04:	mov	r0, r4
   23e08:	add	r1, pc, r1
   23e0c:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   23e10:	ldr	r3, [r4, #220]	; 0xdc
   23e14:	cmp	r3, #0
   23e18:	beq	245c0 <__flatcc_fb_gen_c_verifier@@Base+0x31b4>
   23e1c:	ldr	r1, [pc, #3228]	; 24ac0 <__flatcc_fb_gen_c_verifier@@Base+0x36b4>
   23e20:	sub	r3, r3, #1
   23e24:	mov	r0, r4
   23e28:	str	r3, [r4, #220]	; 0xdc
   23e2c:	add	r1, pc, r1
   23e30:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   23e34:	ldr	r1, [pc, #3208]	; 24ac4 <__flatcc_fb_gen_c_verifier@@Base+0x36b8>
   23e38:	mov	r0, r4
   23e3c:	add	r1, pc, r1
   23e40:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   23e44:	cmp	fp, #1
   23e48:	bne	243dc <__flatcc_fb_gen_c_verifier@@Base+0x2fd0>
   23e4c:	mov	fp, #2
   23e50:	ldr	r3, [r4, #220]	; 0xdc
   23e54:	cmp	r3, #0
   23e58:	beq	248cc <__flatcc_fb_gen_c_verifier@@Base+0x34c0>
   23e5c:	ldr	r1, [pc, #3172]	; 24ac8 <__flatcc_fb_gen_c_verifier@@Base+0x36bc>
   23e60:	sub	r3, r3, #1
   23e64:	mov	r0, r4
   23e68:	mov	r5, #0
   23e6c:	str	r3, [r4, #220]	; 0xdc
   23e70:	mov	r6, r5
   23e74:	add	r1, pc, r1
   23e78:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   23e7c:	ldr	r3, [r4, #220]	; 0xdc
   23e80:	ldr	r1, [r7, #104]	; 0x68
   23e84:	ldr	r2, [sp, #32]
   23e88:	add	r3, r3, #1
   23e8c:	ldr	r0, [r1, #12]
   23e90:	str	r3, [r4, #220]	; 0xdc
   23e94:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   23e98:	ldr	r3, [r7, #104]	; 0x68
   23e9c:	mov	r0, r4
   23ea0:	ldr	r1, [pc, #3108]	; 24acc <__flatcc_fb_gen_c_verifier@@Base+0x36c0>
   23ea4:	ldrh	r3, [r3, #8]
   23ea8:	add	r1, pc, r1
   23eac:	cmp	r3, r5
   23eb0:	ldr	r3, [sp, #28]
   23eb4:	moveq	r3, #1
   23eb8:	movne	sl, #1
   23ebc:	str	r3, [sp, #28]
   23ec0:	ldr	r3, [sp, #560]	; 0x230
   23ec4:	orr	r3, r3, sl
   23ec8:	str	r3, [sp, #16]
   23ecc:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   23ed0:	ldr	r3, [sp, #24]
   23ed4:	cmp	r3, #1
   23ed8:	beq	23d64 <__flatcc_fb_gen_c_verifier@@Base+0x2958>
   23edc:	eor	r3, r6, #1
   23ee0:	tst	r3, sl
   23ee4:	beq	23d78 <__flatcc_fb_gen_c_verifier@@Base+0x296c>
   23ee8:	ldrh	r3, [r7, #74]	; 0x4a
   23eec:	mov	r0, r4
   23ef0:	ldr	r1, [pc, #3032]	; 24ad0 <__flatcc_fb_gen_c_verifier@@Base+0x36c4>
   23ef4:	ldrd	r8, [r7, #88]	; 0x58
   23ef8:	str	r3, [sp, #8]
   23efc:	ldrd	r2, [r7, #96]	; 0x60
   23f00:	add	r1, pc, r1
   23f04:	strd	r8, [sp]
   23f08:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   23f0c:	cmp	r5, #0
   23f10:	bne	2429c <__flatcc_fb_gen_c_verifier@@Base+0x2e90>
   23f14:	ldr	r1, [pc, #3000]	; 24ad4 <__flatcc_fb_gen_c_verifier@@Base+0x36c8>
   23f18:	mov	r0, r4
   23f1c:	ldr	r2, [sp, #32]
   23f20:	add	r1, pc, r1
   23f24:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   23f28:	b	23dec <__flatcc_fb_gen_c_verifier@@Base+0x29e0>
   23f2c:	cmp	r6, #0
   23f30:	beq	2468c <__flatcc_fb_gen_c_verifier@@Base+0x3280>
   23f34:	ldr	r3, [pc, #2972]	; 24ad8 <__flatcc_fb_gen_c_verifier@@Base+0x36cc>
   23f38:	mov	r5, r6
   23f3c:	add	r3, pc, r3
   23f40:	str	r3, [sp, #20]
   23f44:	ldr	r3, [pc, #2960]	; 24adc <__flatcc_fb_gen_c_verifier@@Base+0x36d0>
   23f48:	add	r3, pc, r3
   23f4c:	str	r3, [sp, #48]	; 0x30
   23f50:	ldrsh	r1, [r7, #74]	; 0x4a
   23f54:	ldrd	r2, [r7, #88]	; 0x58
   23f58:	str	r1, [sp, #36]	; 0x24
   23f5c:	orrs	r1, r2, r3
   23f60:	mov	r8, r2
   23f64:	mov	r9, r3
   23f68:	beq	244b8 <__flatcc_fb_gen_c_verifier@@Base+0x30ac>
   23f6c:	mvn	r0, #0
   23f70:	mov	r1, #0
   23f74:	bl	3feac <fb_value_set_visit@@Base+0x684>
   23f78:	strd	r0, [sp, #40]	; 0x28
   23f7c:	ldr	r1, [sp, #36]	; 0x24
   23f80:	mov	r3, r9
   23f84:	mov	r2, r8
   23f88:	mov	r0, r4
   23f8c:	ldrd	r8, [sp, #40]	; 0x28
   23f90:	str	r1, [sp]
   23f94:	ldr	r1, [pc, #2884]	; 24ae0 <__flatcc_fb_gen_c_verifier@@Base+0x36d4>
   23f98:	strd	r8, [sp, #8]
   23f9c:	add	r1, pc, r1
   23fa0:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   23fa4:	ldr	r1, [pc, #2872]	; 24ae4 <__flatcc_fb_gen_c_verifier@@Base+0x36d8>
   23fa8:	mov	r0, r4
   23fac:	add	r1, pc, r1
   23fb0:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   23fb4:	ldr	r1, [pc, #2860]	; 24ae8 <__flatcc_fb_gen_c_verifier@@Base+0x36dc>
   23fb8:	mov	r0, r4
   23fbc:	add	r1, pc, r1
   23fc0:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   23fc4:	ldr	r3, [r4, #220]	; 0xdc
   23fc8:	cmp	r5, #0
   23fcc:	add	r3, r3, #1
   23fd0:	str	r3, [r4, #220]	; 0xdc
   23fd4:	beq	244a0 <__flatcc_fb_gen_c_verifier@@Base+0x3094>
   23fd8:	ldr	r1, [pc, #2828]	; 24aec <__flatcc_fb_gen_c_verifier@@Base+0x36e0>
   23fdc:	mov	r0, r4
   23fe0:	ldr	r2, [sp, #48]	; 0x30
   23fe4:	add	r1, pc, r1
   23fe8:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   23fec:	ldr	r1, [pc, #2812]	; 24af0 <__flatcc_fb_gen_c_verifier@@Base+0x36e4>
   23ff0:	mov	r0, r4
   23ff4:	add	r1, pc, r1
   23ff8:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   23ffc:	ldr	r3, [r4, #220]	; 0xdc
   24000:	ldr	r2, [sp, #68]	; 0x44
   24004:	add	r3, r3, #2
   24008:	cmp	r2, #0
   2400c:	str	r3, [r4, #220]	; 0xdc
   24010:	beq	244c8 <__flatcc_fb_gen_c_verifier@@Base+0x30bc>
   24014:	ldr	r1, [pc, #2776]	; 24af4 <__flatcc_fb_gen_c_verifier@@Base+0x36e8>
   24018:	mov	r0, r4
   2401c:	ldr	r2, [sp, #32]
   24020:	add	r1, pc, r1
   24024:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24028:	ldr	r1, [pc, #2760]	; 24af8 <__flatcc_fb_gen_c_verifier@@Base+0x36ec>
   2402c:	mov	r0, r4
   24030:	ldr	r2, [r4, #208]	; 0xd0
   24034:	ldr	r3, [sp, #64]	; 0x40
   24038:	add	r1, pc, r1
   2403c:	ldr	r2, [r2, #160]	; 0xa0
   24040:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24044:	ldr	r1, [pc, #2736]	; 24afc <__flatcc_fb_gen_c_verifier@@Base+0x36f0>
   24048:	mov	r0, r4
   2404c:	ldr	r3, [r4, #208]	; 0xd0
   24050:	add	r1, pc, r1
   24054:	ldr	r2, [r3, #160]	; 0xa0
   24058:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   2405c:	ldr	r3, [r4, #220]	; 0xdc
   24060:	cmp	r3, #0
   24064:	beq	248a8 <__flatcc_fb_gen_c_verifier@@Base+0x349c>
   24068:	cmp	r3, #1
   2406c:	beq	248a0 <__flatcc_fb_gen_c_verifier@@Base+0x3494>
   24070:	ldr	r2, [sp, #16]
   24074:	sub	r3, r3, #2
   24078:	mov	r5, #1
   2407c:	str	r3, [r4, #220]	; 0xdc
   24080:	cmp	r2, #0
   24084:	movne	r2, r6
   24088:	moveq	r2, #0
   2408c:	cmp	r2, #0
   24090:	beq	23ed0 <__flatcc_fb_gen_c_verifier@@Base+0x2ac4>
   24094:	ldr	r1, [pc, #2660]	; 24b00 <__flatcc_fb_gen_c_verifier@@Base+0x36f4>
   24098:	mov	r0, r4
   2409c:	add	r1, pc, r1
   240a0:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   240a4:	b	23ed0 <__flatcc_fb_gen_c_verifier@@Base+0x2ac4>
   240a8:	ldr	r3, [pc, #2644]	; 24b04 <__flatcc_fb_gen_c_verifier@@Base+0x36f8>
   240ac:	add	r3, pc, r3
   240b0:	str	r3, [sp, #48]	; 0x30
   240b4:	ldr	r3, [pc, #2636]	; 24b08 <__flatcc_fb_gen_c_verifier@@Base+0x36fc>
   240b8:	add	r3, pc, r3
   240bc:	str	r3, [sp, #20]
   240c0:	cmp	r6, #0
   240c4:	movne	r5, r6
   240c8:	bne	23f50 <__flatcc_fb_gen_c_verifier@@Base+0x2b44>
   240cc:	b	23fd8 <__flatcc_fb_gen_c_verifier@@Base+0x2bcc>
   240d0:	ldr	r3, [pc, #2612]	; 24b0c <__flatcc_fb_gen_c_verifier@@Base+0x3700>
   240d4:	add	r3, pc, r3
   240d8:	str	r3, [sp, #48]	; 0x30
   240dc:	ldr	r3, [pc, #2604]	; 24b10 <__flatcc_fb_gen_c_verifier@@Base+0x3704>
   240e0:	add	r3, pc, r3
   240e4:	str	r3, [sp, #20]
   240e8:	b	240c0 <__flatcc_fb_gen_c_verifier@@Base+0x2cb4>
   240ec:	ldr	r3, [pc, #2592]	; 24b14 <__flatcc_fb_gen_c_verifier@@Base+0x3708>
   240f0:	add	r3, pc, r3
   240f4:	str	r3, [sp, #48]	; 0x30
   240f8:	ldr	r3, [pc, #2584]	; 24b18 <__flatcc_fb_gen_c_verifier@@Base+0x370c>
   240fc:	add	r3, pc, r3
   24100:	str	r3, [sp, #20]
   24104:	b	240c0 <__flatcc_fb_gen_c_verifier@@Base+0x2cb4>
   24108:	ldr	r3, [pc, #2572]	; 24b1c <__flatcc_fb_gen_c_verifier@@Base+0x3710>
   2410c:	add	r3, pc, r3
   24110:	str	r3, [sp, #48]	; 0x30
   24114:	ldr	r3, [pc, #2564]	; 24b20 <__flatcc_fb_gen_c_verifier@@Base+0x3714>
   24118:	add	r3, pc, r3
   2411c:	str	r3, [sp, #20]
   24120:	b	240c0 <__flatcc_fb_gen_c_verifier@@Base+0x2cb4>
   24124:	ldr	r3, [pc, #2552]	; 24b24 <__flatcc_fb_gen_c_verifier@@Base+0x3718>
   24128:	add	r3, pc, r3
   2412c:	str	r3, [sp, #48]	; 0x30
   24130:	ldr	r3, [pc, #2544]	; 24b28 <__flatcc_fb_gen_c_verifier@@Base+0x371c>
   24134:	add	r3, pc, r3
   24138:	str	r3, [sp, #20]
   2413c:	b	240c0 <__flatcc_fb_gen_c_verifier@@Base+0x2cb4>
   24140:	ldr	r3, [pc, #2532]	; 24b2c <__flatcc_fb_gen_c_verifier@@Base+0x3720>
   24144:	add	r3, pc, r3
   24148:	str	r3, [sp, #48]	; 0x30
   2414c:	ldr	r3, [pc, #2524]	; 24b30 <__flatcc_fb_gen_c_verifier@@Base+0x3724>
   24150:	add	r3, pc, r3
   24154:	str	r3, [sp, #20]
   24158:	b	240c0 <__flatcc_fb_gen_c_verifier@@Base+0x2cb4>
   2415c:	str	r0, [sp, #20]
   24160:	str	r0, [sp, #48]	; 0x30
   24164:	b	240c0 <__flatcc_fb_gen_c_verifier@@Base+0x2cb4>
   24168:	str	r2, [sp, #20]
   2416c:	str	r2, [sp, #48]	; 0x30
   24170:	b	240c0 <__flatcc_fb_gen_c_verifier@@Base+0x2cb4>
   24174:	ldr	r3, [pc, #2488]	; 24b34 <__flatcc_fb_gen_c_verifier@@Base+0x3728>
   24178:	add	r3, pc, r3
   2417c:	str	r3, [sp, #48]	; 0x30
   24180:	ldr	r3, [pc, #2480]	; 24b38 <__flatcc_fb_gen_c_verifier@@Base+0x372c>
   24184:	add	r3, pc, r3
   24188:	str	r3, [sp, #20]
   2418c:	b	240c0 <__flatcc_fb_gen_c_verifier@@Base+0x2cb4>
   24190:	ldr	r3, [pc, #2468]	; 24b3c <__flatcc_fb_gen_c_verifier@@Base+0x3730>
   24194:	add	r3, pc, r3
   24198:	str	r3, [sp, #48]	; 0x30
   2419c:	ldr	r3, [pc, #2460]	; 24b40 <__flatcc_fb_gen_c_verifier@@Base+0x3734>
   241a0:	add	r3, pc, r3
   241a4:	str	r3, [sp, #20]
   241a8:	b	240c0 <__flatcc_fb_gen_c_verifier@@Base+0x2cb4>
   241ac:	mov	r6, #0
   241b0:	ldrh	r3, [r7, #72]	; 0x48
   241b4:	ldr	r1, [r7, #16]
   241b8:	ldr	r2, [r7, #104]	; 0x68
   241bc:	and	r0, r3, #1024	; 0x400
   241c0:	str	r0, [sp, #56]	; 0x38
   241c4:	and	r0, r3, #2048	; 0x800
   241c8:	mov	r9, r1
   241cc:	adds	fp, r2, #0
   241d0:	str	r0, [sp, #60]	; 0x3c
   241d4:	movne	fp, #1
   241d8:	ands	r3, r3, #3072	; 0xc00
   241dc:	str	r3, [sp, #76]	; 0x4c
   241e0:	beq	23bd4 <__flatcc_fb_gen_c_verifier@@Base+0x27c8>
   241e4:	eor	r5, r6, #1
   241e8:	cmp	r1, #4
   241ec:	orrne	r5, r5, #1
   241f0:	cmp	r5, #0
   241f4:	moveq	r3, #4
   241f8:	moveq	r9, r3
   241fc:	bne	24958 <__flatcc_fb_gen_c_verifier@@Base+0x354c>
   24200:	ldr	r3, [sp, #560]	; 0x230
   24204:	cmp	r3, #0
   24208:	bne	249d4 <__flatcc_fb_gen_c_verifier@@Base+0x35c8>
   2420c:	ldr	sl, [sp, #560]	; 0x230
   24210:	mov	r6, sl
   24214:	str	sl, [sp, #28]
   24218:	str	sl, [sp, #52]	; 0x34
   2421c:	str	sl, [sp, #68]	; 0x44
   24220:	str	sl, [sp, #80]	; 0x50
   24224:	str	sl, [sp, #84]	; 0x54
   24228:	mov	r3, #0
   2422c:	mov	fp, r3
   24230:	str	r3, [sp, #88]	; 0x58
   24234:	b	23cd4 <__flatcc_fb_gen_c_verifier@@Base+0x28c8>
   24238:	mov	r8, #0
   2423c:	mov	r3, #1
   24240:	mov	r6, r8
   24244:	mov	r9, r8
   24248:	mov	sl, r8
   2424c:	mov	r5, r8
   24250:	str	r8, [sp, #28]
   24254:	str	r3, [sp, #52]	; 0x34
   24258:	str	r8, [sp, #68]	; 0x44
   2425c:	b	23c8c <__flatcc_fb_gen_c_verifier@@Base+0x2880>
   24260:	mov	r8, #1
   24264:	mov	r6, r8
   24268:	b	23c18 <__flatcc_fb_gen_c_verifier@@Base+0x280c>
   2426c:	mov	r6, #1
   24270:	b	241b0 <__flatcc_fb_gen_c_verifier@@Base+0x2da4>
   24274:	mov	r3, #0
   24278:	mov	r8, #1
   2427c:	mov	r9, r3
   24280:	mov	r6, r8
   24284:	mov	sl, r3
   24288:	mov	r5, r3
   2428c:	str	r3, [sp, #28]
   24290:	str	r8, [sp, #52]	; 0x34
   24294:	str	r3, [sp, #68]	; 0x44
   24298:	b	23c8c <__flatcc_fb_gen_c_verifier@@Base+0x2880>
   2429c:	ldr	r1, [pc, #2208]	; 24b44 <__flatcc_fb_gen_c_verifier@@Base+0x3738>
   242a0:	mov	r0, r4
   242a4:	ldr	r5, [sp, #20]
   242a8:	add	r1, pc, r1
   242ac:	mov	r2, r5
   242b0:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   242b4:	ldr	r1, [pc, #2188]	; 24b48 <__flatcc_fb_gen_c_verifier@@Base+0x373c>
   242b8:	mov	r0, r4
   242bc:	add	r1, pc, r1
   242c0:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   242c4:	ldr	r3, [r4, #220]	; 0xdc
   242c8:	mov	r2, r5
   242cc:	mov	r0, r4
   242d0:	ldr	r1, [pc, #2164]	; 24b4c <__flatcc_fb_gen_c_verifier@@Base+0x3740>
   242d4:	add	r3, r3, #1
   242d8:	add	r1, pc, r1
   242dc:	str	r3, [r4, #220]	; 0xdc
   242e0:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   242e4:	ldr	r1, [pc, #2148]	; 24b50 <__flatcc_fb_gen_c_verifier@@Base+0x3744>
   242e8:	mov	r0, r4
   242ec:	add	r1, pc, r1
   242f0:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   242f4:	ldr	r3, [r4, #220]	; 0xdc
   242f8:	cmp	r3, #0
   242fc:	beq	248f0 <__flatcc_fb_gen_c_verifier@@Base+0x34e4>
   24300:	sub	r3, r3, #1
   24304:	ldr	r1, [pc, #2120]	; 24b54 <__flatcc_fb_gen_c_verifier@@Base+0x3748>
   24308:	mov	r0, r4
   2430c:	str	r3, [r4, #220]	; 0xdc
   24310:	ldr	r3, [sp, #72]	; 0x48
   24314:	add	r1, pc, r1
   24318:	orr	r5, r3, r6
   2431c:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24320:	ldrd	r2, [sp, #56]	; 0x38
   24324:	orr	r3, r3, r2
   24328:	orrs	r3, r3, r5
   2432c:	bne	24568 <__flatcc_fb_gen_c_verifier@@Base+0x315c>
   24330:	ldrh	r3, [r7, #56]	; 0x38
   24334:	sub	r3, r3, #3
   24338:	cmp	r3, #3
   2433c:	addls	pc, pc, r3, lsl #2
   24340:	b	24a44 <__flatcc_fb_gen_c_verifier@@Base+0x3638>
   24344:	b	24434 <__flatcc_fb_gen_c_verifier@@Base+0x3028>
   24348:	b	24428 <__flatcc_fb_gen_c_verifier@@Base+0x301c>
   2434c:	b	24354 <__flatcc_fb_gen_c_verifier@@Base+0x2f48>
   24350:	b	24354 <__flatcc_fb_gen_c_verifier@@Base+0x2f48>
   24354:	ldr	r1, [pc, #2044]	; 24b58 <__flatcc_fb_gen_c_verifier@@Base+0x374c>
   24358:	add	r1, pc, r1
   2435c:	mov	r0, r4
   24360:	ldrd	r2, [r7, #48]	; 0x30
   24364:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24368:	ldr	r3, [r4, #220]	; 0xdc
   2436c:	add	r3, r3, #1
   24370:	str	r3, [r4, #220]	; 0xdc
   24374:	ldrsh	r3, [r7, #74]	; 0x4a
   24378:	mov	r0, r4
   2437c:	ldr	r1, [pc, #2008]	; 24b5c <__flatcc_fb_gen_c_verifier@@Base+0x3750>
   24380:	ldrd	r8, [r7, #88]	; 0x58
   24384:	str	r3, [sp, #8]
   24388:	ldrd	r2, [r7, #96]	; 0x60
   2438c:	add	r1, pc, r1
   24390:	strd	r8, [sp]
   24394:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24398:	ldr	r1, [pc, #1984]	; 24b60 <__flatcc_fb_gen_c_verifier@@Base+0x3754>
   2439c:	mov	r2, r4
   243a0:	mov	r0, r4
   243a4:	ldr	r3, [sp, #20]
   243a8:	add	r1, pc, r1
   243ac:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   243b0:	ldr	r3, [r4, #220]	; 0xdc
   243b4:	cmp	r3, #0
   243b8:	beq	24914 <__flatcc_fb_gen_c_verifier@@Base+0x3508>
   243bc:	ldr	r1, [pc, #1952]	; 24b64 <__flatcc_fb_gen_c_verifier@@Base+0x3758>
   243c0:	sub	r3, r3, #1
   243c4:	mov	r0, r4
   243c8:	str	r3, [r4, #220]	; 0xdc
   243cc:	add	r1, pc, r1
   243d0:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   243d4:	cmp	fp, #1
   243d8:	beq	23e4c <__flatcc_fb_gen_c_verifier@@Base+0x2a40>
   243dc:	cmp	fp, #2
   243e0:	beq	247b8 <__flatcc_fb_gen_c_verifier@@Base+0x33ac>
   243e4:	ldrd	r2, [sp, #56]	; 0x38
   243e8:	orr	r3, r3, r2
   243ec:	ldr	r2, [sp, #52]	; 0x34
   243f0:	orr	r3, r3, r2
   243f4:	ldr	r2, [sp, #28]
   243f8:	orr	r3, r3, fp
   243fc:	orr	r3, r3, r2
   24400:	orrs	r3, r3, r6
   24404:	bne	247fc <__flatcc_fb_gen_c_verifier@@Base+0x33f0>
   24408:	mov	r0, #0
   2440c:	add	sp, sp, #524	; 0x20c
   24410:	ldrd	r4, [sp]
   24414:	ldrd	r6, [sp, #8]
   24418:	ldrd	r8, [sp, #16]
   2441c:	ldrd	sl, [sp, #24]
   24420:	add	sp, sp, #32
   24424:	pop	{pc}		; (ldr pc, [sp], #4)
   24428:	ldr	r1, [pc, #1848]	; 24b68 <__flatcc_fb_gen_c_verifier@@Base+0x375c>
   2442c:	add	r1, pc, r1
   24430:	b	2435c <__flatcc_fb_gen_c_verifier@@Base+0x2f50>
   24434:	ldr	r1, [pc, #1840]	; 24b6c <__flatcc_fb_gen_c_verifier@@Base+0x3760>
   24438:	mov	r0, r4
   2443c:	ldrd	r2, [r7, #48]	; 0x30
   24440:	add	r1, pc, r1
   24444:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24448:	ldr	r3, [r4, #220]	; 0xdc
   2444c:	add	r3, r3, #1
   24450:	str	r3, [r4, #220]	; 0xdc
   24454:	b	24374 <__flatcc_fb_gen_c_verifier@@Base+0x2f68>
   24458:	cmp	r6, #0
   2445c:	moveq	r5, r6
   24460:	beq	23ed0 <__flatcc_fb_gen_c_verifier@@Base+0x2ac4>
   24464:	ldr	r3, [sp, #16]
   24468:	cmp	r3, #0
   2446c:	bne	23f50 <__flatcc_fb_gen_c_verifier@@Base+0x2b44>
   24470:	mov	r0, r4
   24474:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24478:	mov	r1, r8
   2447c:	mov	r0, r4
   24480:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24484:	ldr	r1, [pc, #1764]	; 24b70 <__flatcc_fb_gen_c_verifier@@Base+0x3764>
   24488:	mov	r0, r4
   2448c:	add	r1, pc, r1
   24490:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24494:	ldr	r3, [r4, #220]	; 0xdc
   24498:	add	r3, r3, #1
   2449c:	str	r3, [r4, #220]	; 0xdc
   244a0:	ldr	r3, [sp, #16]
   244a4:	mov	r5, #0
   244a8:	cmp	r3, #0
   244ac:	movne	r2, r6
   244b0:	moveq	r2, #0
   244b4:	b	2408c <__flatcc_fb_gen_c_verifier@@Base+0x2c80>
   244b8:	mvn	r2, #0
   244bc:	mov	r3, #0
   244c0:	strd	r2, [sp, #40]	; 0x28
   244c4:	b	23f7c <__flatcc_fb_gen_c_verifier@@Base+0x2b70>
   244c8:	ldr	r1, [pc, #1700]	; 24b74 <__flatcc_fb_gen_c_verifier@@Base+0x3768>
   244cc:	mov	r0, r4
   244d0:	ldr	r2, [r4, #208]	; 0xd0
   244d4:	ldr	r3, [sp, #64]	; 0x40
   244d8:	add	r1, pc, r1
   244dc:	ldr	r2, [r2, #160]	; 0xa0
   244e0:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   244e4:	ldr	r1, [pc, #1676]	; 24b78 <__flatcc_fb_gen_c_verifier@@Base+0x376c>
   244e8:	mov	r0, r4
   244ec:	ldr	r3, [r4, #208]	; 0xd0
   244f0:	add	r1, pc, r1
   244f4:	ldr	r2, [r3, #160]	; 0xa0
   244f8:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   244fc:	b	2405c <__flatcc_fb_gen_c_verifier@@Base+0x2c50>
   24500:	ldr	r1, [pc, #1652]	; 24b7c <__flatcc_fb_gen_c_verifier@@Base+0x3770>
   24504:	mov	r0, r4
   24508:	add	r1, pc, r1
   2450c:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24510:	ldr	r1, [pc, #1640]	; 24b80 <__flatcc_fb_gen_c_verifier@@Base+0x3774>
   24514:	mov	r0, r4
   24518:	add	r1, pc, r1
   2451c:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24520:	ldr	r1, [pc, #1628]	; 24b84 <__flatcc_fb_gen_c_verifier@@Base+0x3778>
   24524:	mov	r0, r4
   24528:	add	r1, pc, r1
   2452c:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24530:	ldr	r3, [r4, #220]	; 0xdc
   24534:	cmp	r3, #0
   24538:	beq	245c0 <__flatcc_fb_gen_c_verifier@@Base+0x31b4>
   2453c:	ldr	r1, [pc, #1604]	; 24b88 <__flatcc_fb_gen_c_verifier@@Base+0x377c>
   24540:	sub	r3, r3, #1
   24544:	mov	r0, r4
   24548:	str	r3, [r4, #220]	; 0xdc
   2454c:	add	r1, pc, r1
   24550:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24554:	ldr	r1, [pc, #1584]	; 24b8c <__flatcc_fb_gen_c_verifier@@Base+0x3780>
   24558:	mov	r0, r4
   2455c:	add	r1, pc, r1
   24560:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24564:	b	23e44 <__flatcc_fb_gen_c_verifier@@Base+0x2a38>
   24568:	ldr	r1, [pc, #1568]	; 24b90 <__flatcc_fb_gen_c_verifier@@Base+0x3784>
   2456c:	mov	r2, r4
   24570:	mov	r0, r4
   24574:	ldr	r3, [sp, #20]
   24578:	add	r1, pc, r1
   2457c:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24580:	cmp	r5, #0
   24584:	bne	23dec <__flatcc_fb_gen_c_verifier@@Base+0x29e0>
   24588:	b	243b0 <__flatcc_fb_gen_c_verifier@@Base+0x2fa4>
   2458c:	ldr	r1, [pc, #1536]	; 24b94 <__flatcc_fb_gen_c_verifier@@Base+0x3788>
   24590:	mov	r0, r4
   24594:	add	r1, pc, r1
   24598:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   2459c:	b	23dec <__flatcc_fb_gen_c_verifier@@Base+0x29e0>
   245a0:	ldr	r3, [sp, #56]	; 0x38
   245a4:	mov	r0, r4
   245a8:	ldr	r1, [pc, #1512]	; 24b98 <__flatcc_fb_gen_c_verifier@@Base+0x378c>
   245ac:	clz	r2, r3
   245b0:	lsr	r2, r2, #5
   245b4:	add	r1, pc, r1
   245b8:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   245bc:	b	23dec <__flatcc_fb_gen_c_verifier@@Base+0x29e0>
   245c0:	ldr	r3, [pc, #1492]	; 24b9c <__flatcc_fb_gen_c_verifier@@Base+0x3790>
   245c4:	movw	r2, #647	; 0x287
   245c8:	ldr	r1, [pc, #1488]	; 24ba0 <__flatcc_fb_gen_c_verifier@@Base+0x3794>
   245cc:	ldr	r0, [pc, #1488]	; 24ba4 <__flatcc_fb_gen_c_verifier@@Base+0x3798>
   245d0:	add	r3, pc, r3
   245d4:	add	r3, r3, #176	; 0xb0
   245d8:	add	r1, pc, r1
   245dc:	add	r0, pc, r0
   245e0:	bl	14118 <__assert_fail@plt>
   245e4:	ldr	r3, [sp, #560]	; 0x230
   245e8:	cmp	r3, #0
   245ec:	bne	246a8 <__flatcc_fb_gen_c_verifier@@Base+0x329c>
   245f0:	cmp	r6, #0
   245f4:	bne	23df4 <__flatcc_fb_gen_c_verifier@@Base+0x29e8>
   245f8:	ldr	r2, [pc, #1644]	; 24c6c <__flatcc_fb_gen_c_verifier@@Base+0x3860>
   245fc:	mov	r3, #636	; 0x27c
   24600:	ldr	r1, [sp, #92]	; 0x5c
   24604:	ldr	r0, [pc, #1436]	; 24ba8 <__flatcc_fb_gen_c_verifier@@Base+0x379c>
   24608:	ldr	r4, [pc, #1436]	; 24bac <__flatcc_fb_gen_c_verifier@@Base+0x37a0>
   2460c:	ldr	ip, [r1, r2]
   24610:	add	r0, pc, r0
   24614:	ldr	r1, [pc, #1428]	; 24bb0 <__flatcc_fb_gen_c_verifier@@Base+0x37a4>
   24618:	add	r4, pc, r4
   2461c:	str	r0, [sp]
   24620:	mov	r2, r4
   24624:	ldr	r0, [ip]
   24628:	add	r1, pc, r1
   2462c:	bl	14064 <fprintf@plt>
   24630:	ldr	r3, [pc, #1404]	; 24bb4 <__flatcc_fb_gen_c_verifier@@Base+0x37a8>
   24634:	mov	r1, r4
   24638:	mov	r2, #636	; 0x27c
   2463c:	ldr	r0, [pc, #1396]	; 24bb8 <__flatcc_fb_gen_c_verifier@@Base+0x37ac>
   24640:	add	r3, pc, r3
   24644:	add	r3, r3, #176	; 0xb0
   24648:	add	r0, pc, r0
   2464c:	bl	14118 <__assert_fail@plt>
   24650:	ldr	r1, [pc, #1380]	; 24bbc <__flatcc_fb_gen_c_verifier@@Base+0x37b0>
   24654:	mov	r0, r4
   24658:	ldr	r2, [sp, #32]
   2465c:	add	r1, pc, r1
   24660:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24664:	b	23dec <__flatcc_fb_gen_c_verifier@@Base+0x29e0>
   24668:	strd	r0, [sp]
   2466c:	mov	r0, r4
   24670:	ldr	r1, [pc, #1352]	; 24bc0 <__flatcc_fb_gen_c_verifier@@Base+0x37b4>
   24674:	ldr	ip, [sp, #32]
   24678:	ldr	r3, [sp, #84]	; 0x54
   2467c:	add	r1, pc, r1
   24680:	str	ip, [sp, #8]
   24684:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24688:	b	23dec <__flatcc_fb_gen_c_verifier@@Base+0x29e0>
   2468c:	ldr	r3, [pc, #1328]	; 24bc4 <__flatcc_fb_gen_c_verifier@@Base+0x37b8>
   24690:	add	r3, pc, r3
   24694:	str	r3, [sp, #20]
   24698:	ldr	r3, [pc, #1320]	; 24bc8 <__flatcc_fb_gen_c_verifier@@Base+0x37bc>
   2469c:	add	r3, pc, r3
   246a0:	str	r3, [sp, #48]	; 0x30
   246a4:	b	23fd8 <__flatcc_fb_gen_c_verifier@@Base+0x2bcc>
   246a8:	ldr	r1, [pc, #1308]	; 24bcc <__flatcc_fb_gen_c_verifier@@Base+0x37c0>
   246ac:	mov	r0, r4
   246b0:	add	r1, pc, r1
   246b4:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   246b8:	ldr	r3, [r4, #220]	; 0xdc
   246bc:	mov	r0, r4
   246c0:	ldr	r1, [pc, #1288]	; 24bd0 <__flatcc_fb_gen_c_verifier@@Base+0x37c4>
   246c4:	ldr	r2, [sp, #32]
   246c8:	add	r3, r3, #2
   246cc:	add	r1, pc, r1
   246d0:	str	r3, [r4, #220]	; 0xdc
   246d4:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   246d8:	ldr	r1, [pc, #1268]	; 24bd4 <__flatcc_fb_gen_c_verifier@@Base+0x37c8>
   246dc:	mov	r0, r4
   246e0:	ldr	r2, [r4, #208]	; 0xd0
   246e4:	ldr	r3, [sp, #64]	; 0x40
   246e8:	add	r1, pc, r1
   246ec:	ldr	r2, [r2, #160]	; 0xa0
   246f0:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   246f4:	ldr	r1, [pc, #1244]	; 24bd8 <__flatcc_fb_gen_c_verifier@@Base+0x37cc>
   246f8:	mov	r0, r4
   246fc:	ldr	r3, [r4, #208]	; 0xd0
   24700:	add	r1, pc, r1
   24704:	ldr	r2, [r3, #160]	; 0xa0
   24708:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   2470c:	ldr	r3, [r4, #220]	; 0xdc
   24710:	cmp	r3, #0
   24714:	beq	24a20 <__flatcc_fb_gen_c_verifier@@Base+0x3614>
   24718:	cmp	r3, #1
   2471c:	beq	24a18 <__flatcc_fb_gen_c_verifier@@Base+0x360c>
   24720:	ldr	r2, [sp, #88]	; 0x58
   24724:	sub	r3, r3, #2
   24728:	ldrd	r0, [r7, #96]	; 0x60
   2472c:	cmp	r2, #0
   24730:	ldr	r2, [r7, #112]	; 0x70
   24734:	str	r3, [r4, #220]	; 0xdc
   24738:	mov	r3, #0
   2473c:	strd	r0, [sp]
   24740:	beq	24764 <__flatcc_fb_gen_c_verifier@@Base+0x3358>
   24744:	ldr	r1, [pc, #1168]	; 24bdc <__flatcc_fb_gen_c_verifier@@Base+0x37d0>
   24748:	mov	r0, r4
   2474c:	ldr	ip, [sp, #32]
   24750:	add	r1, pc, r1
   24754:	str	ip, [sp, #8]
   24758:	str	ip, [sp, #12]
   2475c:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24760:	b	23dec <__flatcc_fb_gen_c_verifier@@Base+0x29e0>
   24764:	ldr	r1, [pc, #1140]	; 24be0 <__flatcc_fb_gen_c_verifier@@Base+0x37d4>
   24768:	mov	r0, r4
   2476c:	ldr	ip, [sp, #32]
   24770:	add	r1, pc, r1
   24774:	str	ip, [sp, #8]
   24778:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   2477c:	b	23dec <__flatcc_fb_gen_c_verifier@@Base+0x29e0>
   24780:	mov	r5, #0
   24784:	mov	r3, #1
   24788:	mov	r9, r5
   2478c:	str	r5, [sp, #52]	; 0x34
   24790:	str	r3, [sp, #80]	; 0x50
   24794:	ldr	r3, [sp, #80]	; 0x50
   24798:	ands	r3, r3, r6
   2479c:	str	r3, [sp, #84]	; 0x54
   247a0:	beq	24a04 <__flatcc_fb_gen_c_verifier@@Base+0x35f8>
   247a4:	mov	r6, #0
   247a8:	str	r6, [sp, #56]	; 0x38
   247ac:	str	r6, [sp, #60]	; 0x3c
   247b0:	str	r6, [sp, #76]	; 0x4c
   247b4:	b	24228 <__flatcc_fb_gen_c_verifier@@Base+0x2e1c>
   247b8:	ldr	r1, [pc, #1060]	; 24be4 <__flatcc_fb_gen_c_verifier@@Base+0x37d8>
   247bc:	mov	r0, r4
   247c0:	add	r1, pc, r1
   247c4:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   247c8:	ldr	r1, [pc, #1048]	; 24be8 <__flatcc_fb_gen_c_verifier@@Base+0x37dc>
   247cc:	mov	r0, r4
   247d0:	add	r1, pc, r1
   247d4:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   247d8:	ldr	r3, [r4, #220]	; 0xdc
   247dc:	cmp	r3, #0
   247e0:	beq	249b0 <__flatcc_fb_gen_c_verifier@@Base+0x35a4>
   247e4:	ldr	r1, [pc, #1024]	; 24bec <__flatcc_fb_gen_c_verifier@@Base+0x37e0>
   247e8:	sub	r3, r3, #1
   247ec:	mov	r0, r4
   247f0:	str	r3, [r4, #220]	; 0xdc
   247f4:	add	r1, pc, r1
   247f8:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   247fc:	ldr	r1, [pc, #1004]	; 24bf0 <__flatcc_fb_gen_c_verifier@@Base+0x37e4>
   24800:	mov	r0, r4
   24804:	ldrd	r2, [r7, #96]	; 0x60
   24808:	add	r1, pc, r1
   2480c:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24810:	ldr	r1, [pc, #988]	; 24bf4 <__flatcc_fb_gen_c_verifier@@Base+0x37e8>
   24814:	mov	r0, r4
   24818:	add	r1, pc, r1
   2481c:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24820:	b	24408 <__flatcc_fb_gen_c_verifier@@Base+0x2ffc>
   24824:	ldr	r1, [pc, #972]	; 24bf8 <__flatcc_fb_gen_c_verifier@@Base+0x37ec>
   24828:	mov	r2, #0
   2482c:	mov	r0, r4
   24830:	mov	r8, r2
   24834:	str	r2, [sp, #56]	; 0x38
   24838:	add	r1, pc, r1
   2483c:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24840:	ldr	r3, [r4, #220]	; 0xdc
   24844:	str	r8, [sp, #60]	; 0x3c
   24848:	str	r8, [sp, #76]	; 0x4c
   2484c:	str	r8, [sp, #80]	; 0x50
   24850:	str	r8, [sp, #84]	; 0x54
   24854:	add	r3, r3, #1
   24858:	str	r3, [r4, #220]	; 0xdc
   2485c:	b	23cd4 <__flatcc_fb_gen_c_verifier@@Base+0x28c8>
   24860:	ldr	r3, [r2, #40]	; 0x28
   24864:	mov	r5, #1
   24868:	str	r9, [sp, #52]	; 0x34
   2486c:	str	r5, [sp, #68]	; 0x44
   24870:	mov	r9, r3
   24874:	b	23c8c <__flatcc_fb_gen_c_verifier@@Base+0x2880>
   24878:	mov	r8, #0
   2487c:	mov	r6, r8
   24880:	mov	r3, #0
   24884:	mov	r5, r3
   24888:	mov	r9, r3
   2488c:	mov	fp, r3
   24890:	b	23bdc <__flatcc_fb_gen_c_verifier@@Base+0x27d0>
   24894:	mov	r8, #1
   24898:	mov	r6, r8
   2489c:	b	24880 <__flatcc_fb_gen_c_verifier@@Base+0x3474>
   248a0:	mov	r3, #0
   248a4:	str	r3, [r4, #220]	; 0xdc
   248a8:	ldr	r3, [pc, #844]	; 24bfc <__flatcc_fb_gen_c_verifier@@Base+0x37f0>
   248ac:	movw	r2, #539	; 0x21b
   248b0:	ldr	r1, [pc, #840]	; 24c00 <__flatcc_fb_gen_c_verifier@@Base+0x37f4>
   248b4:	ldr	r0, [pc, #840]	; 24c04 <__flatcc_fb_gen_c_verifier@@Base+0x37f8>
   248b8:	add	r3, pc, r3
   248bc:	add	r3, r3, #176	; 0xb0
   248c0:	add	r1, pc, r1
   248c4:	add	r0, pc, r0
   248c8:	bl	14118 <__assert_fail@plt>
   248cc:	ldr	r3, [pc, #820]	; 24c08 <__flatcc_fb_gen_c_verifier@@Base+0x37fc>
   248d0:	movw	r2, #490	; 0x1ea
   248d4:	ldr	r1, [pc, #816]	; 24c0c <__flatcc_fb_gen_c_verifier@@Base+0x3800>
   248d8:	ldr	r0, [pc, #816]	; 24c10 <__flatcc_fb_gen_c_verifier@@Base+0x3804>
   248dc:	add	r3, pc, r3
   248e0:	add	r3, r3, #176	; 0xb0
   248e4:	add	r1, pc, r1
   248e8:	add	r0, pc, r0
   248ec:	bl	14118 <__assert_fail@plt>
   248f0:	ldr	r3, [pc, #796]	; 24c14 <__flatcc_fb_gen_c_verifier@@Base+0x3808>
   248f4:	movw	r2, #559	; 0x22f
   248f8:	ldr	r1, [pc, #792]	; 24c18 <__flatcc_fb_gen_c_verifier@@Base+0x380c>
   248fc:	ldr	r0, [pc, #792]	; 24c1c <__flatcc_fb_gen_c_verifier@@Base+0x3810>
   24900:	add	r3, pc, r3
   24904:	add	r3, r3, #176	; 0xb0
   24908:	add	r1, pc, r1
   2490c:	add	r0, pc, r0
   24910:	bl	14118 <__assert_fail@plt>
   24914:	ldr	r3, [pc, #772]	; 24c20 <__flatcc_fb_gen_c_verifier@@Base+0x3814>
   24918:	movw	r2, #602	; 0x25a
   2491c:	ldr	r1, [pc, #768]	; 24c24 <__flatcc_fb_gen_c_verifier@@Base+0x3818>
   24920:	ldr	r0, [pc, #768]	; 24c28 <__flatcc_fb_gen_c_verifier@@Base+0x381c>
   24924:	add	r3, pc, r3
   24928:	add	r3, r3, #176	; 0xb0
   2492c:	add	r1, pc, r1
   24930:	add	r0, pc, r0
   24934:	bl	14118 <__assert_fail@plt>
   24938:	ldr	r2, [r7, #16]
   2493c:	mov	r3, #0
   24940:	mov	r5, #1
   24944:	str	r3, [sp, #56]	; 0x38
   24948:	str	r3, [sp, #60]	; 0x3c
   2494c:	str	r3, [sp, #76]	; 0x4c
   24950:	mov	r9, r2
   24954:	b	24200 <__flatcc_fb_gen_c_verifier@@Base+0x2df4>
   24958:	ldr	r2, [pc, #780]	; 24c6c <__flatcc_fb_gen_c_verifier@@Base+0x3860>
   2495c:	movw	r3, #466	; 0x1d2
   24960:	ldr	r1, [sp, #92]	; 0x5c
   24964:	ldr	r0, [pc, #704]	; 24c2c <__flatcc_fb_gen_c_verifier@@Base+0x3820>
   24968:	ldr	r4, [pc, #704]	; 24c30 <__flatcc_fb_gen_c_verifier@@Base+0x3824>
   2496c:	ldr	ip, [r1, r2]
   24970:	add	r0, pc, r0
   24974:	ldr	r1, [pc, #696]	; 24c34 <__flatcc_fb_gen_c_verifier@@Base+0x3828>
   24978:	add	r4, pc, r4
   2497c:	str	r0, [sp]
   24980:	mov	r2, r4
   24984:	ldr	r0, [ip]
   24988:	add	r1, pc, r1
   2498c:	bl	14064 <fprintf@plt>
   24990:	ldr	r3, [pc, #672]	; 24c38 <__flatcc_fb_gen_c_verifier@@Base+0x382c>
   24994:	mov	r1, r4
   24998:	movw	r2, #466	; 0x1d2
   2499c:	ldr	r0, [pc, #664]	; 24c3c <__flatcc_fb_gen_c_verifier@@Base+0x3830>
   249a0:	add	r3, pc, r3
   249a4:	add	r3, r3, #176	; 0xb0
   249a8:	add	r0, pc, r0
   249ac:	bl	14118 <__assert_fail@plt>
   249b0:	ldr	r3, [pc, #648]	; 24c40 <__flatcc_fb_gen_c_verifier@@Base+0x3834>
   249b4:	movw	r2, #661	; 0x295
   249b8:	ldr	r1, [pc, #644]	; 24c44 <__flatcc_fb_gen_c_verifier@@Base+0x3838>
   249bc:	ldr	r0, [pc, #644]	; 24c48 <__flatcc_fb_gen_c_verifier@@Base+0x383c>
   249c0:	add	r3, pc, r3
   249c4:	add	r3, r3, #176	; 0xb0
   249c8:	add	r1, pc, r1
   249cc:	add	r0, pc, r0
   249d0:	bl	14118 <__assert_fail@plt>
   249d4:	mov	sl, #0
   249d8:	mov	r5, sl
   249dc:	mov	r6, sl
   249e0:	str	sl, [sp, #28]
   249e4:	str	sl, [sp, #52]	; 0x34
   249e8:	str	sl, [sp, #68]	; 0x44
   249ec:	str	sl, [sp, #80]	; 0x50
   249f0:	str	sl, [sp, #84]	; 0x54
   249f4:	b	24228 <__flatcc_fb_gen_c_verifier@@Base+0x2e1c>
   249f8:	mov	r5, r8
   249fc:	str	r8, [sp, #88]	; 0x58
   24a00:	b	23cb8 <__flatcc_fb_gen_c_verifier@@Base+0x28ac>
   24a04:	ldr	r3, [sp, #84]	; 0x54
   24a08:	str	r3, [sp, #56]	; 0x38
   24a0c:	str	r3, [sp, #60]	; 0x3c
   24a10:	str	r3, [sp, #76]	; 0x4c
   24a14:	b	24228 <__flatcc_fb_gen_c_verifier@@Base+0x2e1c>
   24a18:	ldr	r3, [sp, #80]	; 0x50
   24a1c:	str	r3, [r4, #220]	; 0xdc
   24a20:	ldr	r3, [pc, #548]	; 24c4c <__flatcc_fb_gen_c_verifier@@Base+0x3840>
   24a24:	movw	r2, #627	; 0x273
   24a28:	ldr	r1, [pc, #544]	; 24c50 <__flatcc_fb_gen_c_verifier@@Base+0x3844>
   24a2c:	ldr	r0, [pc, #544]	; 24c54 <__flatcc_fb_gen_c_verifier@@Base+0x3848>
   24a30:	add	r3, pc, r3
   24a34:	add	r3, r3, #176	; 0xb0
   24a38:	add	r1, pc, r1
   24a3c:	add	r0, pc, r0
   24a40:	bl	14118 <__assert_fail@plt>
   24a44:	ldr	r2, [pc, #544]	; 24c6c <__flatcc_fb_gen_c_verifier@@Base+0x3860>
   24a48:	movw	r3, #590	; 0x24e
   24a4c:	ldr	r1, [sp, #92]	; 0x5c
   24a50:	ldr	r0, [pc, #512]	; 24c58 <__flatcc_fb_gen_c_verifier@@Base+0x384c>
   24a54:	ldr	r4, [pc, #512]	; 24c5c <__flatcc_fb_gen_c_verifier@@Base+0x3850>
   24a58:	ldr	ip, [r1, r2]
   24a5c:	add	r0, pc, r0
   24a60:	ldr	r1, [pc, #504]	; 24c60 <__flatcc_fb_gen_c_verifier@@Base+0x3854>
   24a64:	add	r4, pc, r4
   24a68:	str	r0, [sp]
   24a6c:	mov	r2, r4
   24a70:	ldr	r0, [ip]
   24a74:	add	r1, pc, r1
   24a78:	bl	14064 <fprintf@plt>
   24a7c:	ldr	r3, [pc, #480]	; 24c64 <__flatcc_fb_gen_c_verifier@@Base+0x3858>
   24a80:	mov	r1, r4
   24a84:	movw	r2, #590	; 0x24e
   24a88:	ldr	r0, [pc, #472]	; 24c68 <__flatcc_fb_gen_c_verifier@@Base+0x385c>
   24a8c:	add	r3, pc, r3
   24a90:	add	r3, r3, #176	; 0xb0
   24a94:	add	r0, pc, r0
   24a98:	bl	14118 <__assert_fail@plt>
   24a9c:	andeq	r9, r4, r4, lsl #10
   24aa0:			; <UNDEFINED> instruction: 0x000313b0
   24aa4:			; <UNDEFINED> instruction: 0x000314b4
   24aa8:	andeq	r1, r3, r4, ror #8
   24aac:	andeq	lr, r1, r4, ror r1
   24ab0:	ldrdeq	lr, [r1], -r8
   24ab4:	andeq	r1, r3, r4, asr #11
   24ab8:	andeq	r1, r3, r8, lsl #18
   24abc:	andeq	r1, r3, r4, asr #22
   24ac0:	andeq	r0, r3, r4, lsl #19
   24ac4:	andeq	r1, r3, r0, lsr ip
   24ac8:	muleq	r3, r4, r2
   24acc:	andeq	r1, r3, r8, ror r2
   24ad0:	andeq	r1, r3, r4, ror #8
   24ad4:	muleq	r3, r4, r4
   24ad8:	andeq	sp, r1, r4, lsr pc
   24adc:	andeq	sp, r1, ip, lsl pc
   24ae0:	andeq	r1, r3, r4, asr r2
   24ae4:	strdeq	r1, [r3], -r8
   24ae8:	andeq	r1, r3, r4, lsr #4
   24aec:	andeq	r1, r3, r0, ror #4
   24af0:	andeq	r1, r3, ip, asr r2
   24af4:	andeq	r1, r3, r4, ror r2
   24af8:	andeq	r1, r3, r0, ror r2
   24afc:	andeq	r1, r3, r8, ror r2
   24b00:	andeq	r1, r3, r0, asr r2
   24b04:	ldrdeq	sp, [r1], -r4
   24b08:	ldrdeq	sp, [r1], -r4
   24b0c:	ldrdeq	sp, [r1], -ip
   24b10:	andeq	r5, r3, r8, lsr sl
   24b14:	andeq	sp, r1, r4, lsr #27
   24b18:	andeq	sp, r1, r4, lsr #27
   24b1c:	andeq	sp, r1, r4, lsr #27
   24b20:	andeq	sp, r1, r0, lsr #27
   24b24:	andeq	sp, r1, r8, lsr #27
   24b28:	andeq	sp, r1, r4, lsr #27
   24b2c:	andeq	sp, r1, ip, ror sp
   24b30:	andeq	sp, r1, r8, ror sp
   24b34:	andeq	sp, r1, r0, ror sp
   24b38:	andeq	sp, r1, ip, ror #26
   24b3c:	andeq	sp, r1, r0, asr #25
   24b40:			; <UNDEFINED> instruction: 0x0001dcbc
   24b44:	andeq	r1, r3, r4, asr #2
   24b48:	andeq	r1, r3, ip, ror #2
   24b4c:	andeq	r1, r3, r4, ror #2
   24b50:	andeq	r1, r3, r8, lsr #3
   24b54:	muleq	r3, ip, r4
   24b58:	andeq	r1, r3, r8, ror #2
   24b5c:	andeq	r1, r3, r0, lsr r2
   24b60:	andeq	r1, r3, r4, ror #4
   24b64:	andeq	r0, r3, r4, ror #7
   24b68:	ldrdeq	r1, [r3], -r8
   24b6c:	andeq	r1, r3, r8, lsl #2
   24b70:	andeq	r0, r3, r4, asr sp
   24b74:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   24b78:	ldrdeq	r0, [r3], -r8
   24b7c:	ldrdeq	r1, [r3], -ip
   24b80:	andeq	r1, r3, r4, lsr #8
   24b84:	andeq	r1, r3, r4, lsr #8
   24b88:	andeq	r0, r3, r4, ror #4
   24b8c:	ldrdeq	r1, [r3], -ip
   24b90:	muleq	r3, r4, r0
   24b94:	muleq	r3, r8, r0
   24b98:	strheq	r1, [r3], -r4
   24b9c:	andeq	pc, r2, r8, lsl pc	; <UNPREDICTABLE>
   24ba0:	andeq	r0, r3, r0, ror #2
   24ba4:	andeq	r0, r3, r8, asr #3
   24ba8:	andeq	r1, r3, r0, lsr #5
   24bac:	andeq	r0, r3, r0, lsr #2
   24bb0:	andeq	sp, r1, r8, ror #15
   24bb4:	andeq	pc, r2, r8, lsr #29
   24bb8:	andeq	r5, r2, ip, ror #25
   24bbc:	andeq	r1, r3, ip, asr r0
   24bc0:	ldrdeq	r1, [r3], -r0
   24bc4:	andeq	sp, r1, r0, ror #15
   24bc8:	andeq	sp, r1, r8, asr #15
   24bcc:	andeq	r0, r3, r0, lsr #23
   24bd0:	andeq	r0, r3, r8, asr #23
   24bd4:	andeq	r0, r3, r0, asr #23
   24bd8:	andeq	r0, r3, r8, asr #23
   24bdc:	andeq	r1, r3, r8, asr r0
   24be0:	andeq	r1, r3, ip, asr #1
   24be4:	andeq	r1, r3, r8, asr #3
   24be8:	ldrdeq	r1, [r3], -r0
   24bec:	ldrdeq	r1, [r3], -ip
   24bf0:	ldrdeq	r1, [r3], -ip
   24bf4:	andeq	r1, r3, r4, lsr #2
   24bf8:	muleq	r3, ip, r8
   24bfc:	andeq	pc, r2, r0, lsr ip	; <UNPREDICTABLE>
   24c00:	andeq	pc, r2, r8, ror lr	; <UNPREDICTABLE>
   24c04:	andeq	pc, r2, r0, ror #29
   24c08:	andeq	pc, r2, ip, lsl #24
   24c0c:	andeq	pc, r2, r4, asr lr	; <UNPREDICTABLE>
   24c10:			; <UNDEFINED> instruction: 0x0002febc
   24c14:	andeq	pc, r2, r8, ror #23
   24c18:	andeq	pc, r2, r0, lsr lr	; <UNPREDICTABLE>
   24c1c:	muleq	r2, r8, lr
   24c20:	andeq	pc, r2, r4, asr #23
   24c24:	andeq	pc, r2, ip, lsl #28
   24c28:	andeq	pc, r2, r4, ror lr	; <UNPREDICTABLE>
   24c2c:	andeq	r0, r3, r8, lsr #14
   24c30:	andeq	pc, r2, r0, asr #27
   24c34:	andeq	sp, r1, r8, lsl #9
   24c38:	andeq	pc, r2, r8, asr #22
   24c3c:	andeq	r5, r2, ip, lsl #19
   24c40:	andeq	pc, r2, r8, lsr #22
   24c44:	andeq	pc, r2, r0, ror sp	; <UNPREDICTABLE>
   24c48:	ldrdeq	pc, [r2], -r8
   24c4c:			; <UNDEFINED> instruction: 0x0002fab8
   24c50:	andeq	pc, r2, r0, lsl #26
   24c54:	andeq	pc, r2, r8, ror #26
   24c58:	andeq	r0, r3, r0, lsr fp
   24c5c:	ldrdeq	pc, [r2], -r4
   24c60:	muleq	r1, ip, r3
   24c64:	andeq	pc, r2, ip, asr sl	; <UNPREDICTABLE>
   24c68:	andeq	r5, r2, r0, lsr #17
   24c6c:	andeq	r0, r0, r0, lsr #1
   24c70:	andeq	sp, r1, r0, lsl #3
   24c74:	andeq	sp, r1, ip, lsl #2
   24c78:	andeq	sp, r1, ip, asr r1
   24c7c:	andeq	pc, r2, ip, lsl r8	; <UNPREDICTABLE>
   24c80:	andeq	r5, r2, r0, ror #12
   24c84:	ldr	r2, [pc, #-32]	; 24c6c <__flatcc_fb_gen_c_verifier@@Base+0x3860>
   24c88:	mov	r3, #96	; 0x60
   24c8c:	ldr	r1, [sp, #92]	; 0x5c
   24c90:	ldr	r0, [pc, #-40]	; 24c70 <__flatcc_fb_gen_c_verifier@@Base+0x3864>
   24c94:	ldr	r4, [pc, #-40]	; 24c74 <__flatcc_fb_gen_c_verifier@@Base+0x3868>
   24c98:	ldr	ip, [r1, r2]
   24c9c:	add	r0, pc, r0
   24ca0:	ldr	r1, [pc, #-48]	; 24c78 <__flatcc_fb_gen_c_verifier@@Base+0x386c>
   24ca4:	add	r4, pc, r4
   24ca8:	str	r0, [sp]
   24cac:	mov	r2, r4
   24cb0:	ldr	r0, [ip]
   24cb4:	add	r1, pc, r1
   24cb8:	bl	14064 <fprintf@plt>
   24cbc:	ldr	r3, [pc, #-72]	; 24c7c <__flatcc_fb_gen_c_verifier@@Base+0x3870>
   24cc0:	mov	r1, r4
   24cc4:	mov	r2, #96	; 0x60
   24cc8:	ldr	r0, [pc, #-80]	; 24c80 <__flatcc_fb_gen_c_verifier@@Base+0x3874>
   24ccc:	add	r3, pc, r3
   24cd0:	add	r3, r3, #200	; 0xc8
   24cd4:	add	r0, pc, r0
   24cd8:	bl	14118 <__assert_fail@plt>
   24cdc:	strd	r4, [sp, #-20]!	; 0xffffffec
   24ce0:	mov	r5, r1
   24ce4:	mov	r4, r0
   24ce8:	ldr	r1, [pc, #184]	; 24da8 <__flatcc_fb_gen_c_verifier@@Base+0x399c>
   24cec:	strd	r6, [sp, #8]
   24cf0:	mov	r7, r2
   24cf4:	mov	r6, r3
   24cf8:	str	lr, [sp, #16]
   24cfc:	sub	sp, sp, #12
   24d00:	ldr	r2, [sp, #32]
   24d04:	add	r1, pc, r1
   24d08:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24d0c:	ldr	r1, [pc, #152]	; 24dac <__flatcc_fb_gen_c_verifier@@Base+0x39a0>
   24d10:	mov	r0, r4
   24d14:	add	r1, pc, r1
   24d18:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24d1c:	ldr	ip, [r4, #220]	; 0xdc
   24d20:	mov	r3, r7
   24d24:	add	r2, r5, #12
   24d28:	add	r1, r5, #8
   24d2c:	mov	r0, r4
   24d30:	str	r6, [sp]
   24d34:	add	ip, ip, #1
   24d38:	str	ip, [r4, #220]	; 0xdc
   24d3c:	bl	23ac4 <__flatcc_fb_gen_c_verifier@@Base+0x26b8>
   24d40:	ldr	r3, [r4, #220]	; 0xdc
   24d44:	cmp	r3, #0
   24d48:	beq	24d84 <__flatcc_fb_gen_c_verifier@@Base+0x3978>
   24d4c:	ldr	r1, [pc, #92]	; 24db0 <__flatcc_fb_gen_c_verifier@@Base+0x39a4>
   24d50:	sub	r3, r3, #1
   24d54:	mov	r0, r4
   24d58:	str	r3, [r4, #220]	; 0xdc
   24d5c:	add	r1, pc, r1
   24d60:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   24d64:	ldr	r3, [r4, #220]	; 0xdc
   24d68:	add	r3, r3, #1
   24d6c:	str	r3, [r4, #220]	; 0xdc
   24d70:	add	sp, sp, #12
   24d74:	ldrd	r4, [sp]
   24d78:	ldrd	r6, [sp, #8]
   24d7c:	add	sp, sp, #16
   24d80:	pop	{pc}		; (ldr pc, [sp], #4)
   24d84:	ldr	r3, [pc, #40]	; 24db4 <__flatcc_fb_gen_c_verifier@@Base+0x39a8>
   24d88:	movw	r2, #675	; 0x2a3
   24d8c:	ldr	r1, [pc, #36]	; 24db8 <__flatcc_fb_gen_c_verifier@@Base+0x39ac>
   24d90:	ldr	r0, [pc, #36]	; 24dbc <__flatcc_fb_gen_c_verifier@@Base+0x39b0>
   24d94:	add	r3, pc, r3
   24d98:	add	r3, r3, #220	; 0xdc
   24d9c:	add	r1, pc, r1
   24da0:	add	r0, pc, r0
   24da4:	bl	14118 <__assert_fail@plt>
   24da8:	muleq	r3, r4, sp
   24dac:	andeq	r0, r3, r8, asr #27
   24db0:	andeq	pc, r2, r8, ror pc	; <UNPREDICTABLE>
   24db4:	andeq	pc, r2, r4, asr r7	; <UNPREDICTABLE>
   24db8:	muleq	r2, ip, r9
   24dbc:	andeq	pc, r2, r4, lsl #20
   24dc0:	ldrh	r3, [r1, #8]
   24dc4:	cmp	r3, #4
   24dc8:	bxhi	lr
   24dcc:	strd	r4, [sp, #-32]!	; 0xffffffe0
   24dd0:	strd	r6, [sp, #8]
   24dd4:	mov	r7, r0
   24dd8:	mov	r6, r1
   24ddc:	ldr	r0, [r0, #40]	; 0x28
   24de0:	strd	r8, [sp, #16]
   24de4:	ldr	r1, [r1, #16]
   24de8:	str	sl, [sp, #24]
   24dec:	str	lr, [sp, #28]
   24df0:	add	r0, r0, #172	; 0xac
   24df4:	bl	2c058 <ptr_set_find_item@@Base>
   24df8:	cmp	r0, #0
   24dfc:	beq	24eac <__flatcc_fb_gen_c_verifier@@Base+0x3aa0>
   24e00:	ldr	r3, [r7]
   24e04:	ldr	r9, [r7, #36]	; 0x24
   24e08:	cmp	r3, #0
   24e0c:	moveq	r4, r9
   24e10:	beq	24e50 <__flatcc_fb_gen_c_verifier@@Base+0x3a44>
   24e14:	ldr	r3, [r6, #12]
   24e18:	mov	r4, r9
   24e1c:	ldr	r5, [r3]
   24e20:	cmp	r5, #0
   24e24:	beq	24e50 <__flatcc_fb_gen_c_verifier@@Base+0x3a44>
   24e28:	mov	r8, #46	; 0x2e
   24e2c:	ldr	r3, [r5, #4]
   24e30:	mov	r0, r4
   24e34:	ldm	r3, {r1, r2}
   24e38:	add	r4, r4, r2
   24e3c:	bl	13fb0 <memcpy@plt>
   24e40:	strb	r8, [r4], #1
   24e44:	ldr	r5, [r5]
   24e48:	cmp	r5, #0
   24e4c:	bne	24e2c <__flatcc_fb_gen_c_verifier@@Base+0x3a20>
   24e50:	ldr	r3, [r6, #4]
   24e54:	mov	r0, r4
   24e58:	ldm	r3, {r1, r5}
   24e5c:	mov	r2, r5
   24e60:	bl	13fb0 <memcpy@plt>
   24e64:	mov	r2, #0
   24e68:	add	r3, r4, r5
   24e6c:	add	r3, r3, #1
   24e70:	strb	r2, [r4, r5]
   24e74:	ldrh	r2, [r6, #8]
   24e78:	str	r3, [r7, #36]	; 0x24
   24e7c:	cmp	r2, #4
   24e80:	addls	pc, pc, r2, lsl #2
   24e84:	b	24eac <__flatcc_fb_gen_c_verifier@@Base+0x3aa0>
   24e88:	b	24ec4 <__flatcc_fb_gen_c_verifier@@Base+0x3ab8>
   24e8c:	b	24ec4 <__flatcc_fb_gen_c_verifier@@Base+0x3ab8>
   24e90:	b	24eac <__flatcc_fb_gen_c_verifier@@Base+0x3aa0>
   24e94:	b	24e9c <__flatcc_fb_gen_c_verifier@@Base+0x3a90>
   24e98:	b	24e9c <__flatcc_fb_gen_c_verifier@@Base+0x3a90>
   24e9c:	ldr	r3, [r7, #32]
   24ea0:	add	r2, r3, #8
   24ea4:	stm	r3, {r6, r9}
   24ea8:	str	r2, [r7, #32]
   24eac:	ldrd	r4, [sp]
   24eb0:	ldrd	r6, [sp, #8]
   24eb4:	ldrd	r8, [sp, #16]
   24eb8:	ldr	sl, [sp, #24]
   24ebc:	add	sp, sp, #28
   24ec0:	pop	{pc}		; (ldr pc, [sp], #4)
   24ec4:	ldr	r3, [r7, #28]
   24ec8:	add	r2, r3, #8
   24ecc:	stm	r3, {r6, r9}
   24ed0:	str	r2, [r7, #28]
   24ed4:	b	24eac <__flatcc_fb_gen_c_verifier@@Base+0x3aa0>
   24ed8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   24edc:	subs	r5, r0, #0
   24ee0:	strd	r6, [sp, #8]
   24ee4:	strd	r8, [sp, #16]
   24ee8:	strd	sl, [sp, #24]
   24eec:	str	lr, [sp, #32]
   24ef0:	sub	sp, sp, #4
   24ef4:	beq	2507c <__flatcc_fb_gen_c_verifier@@Base+0x3c70>
   24ef8:	mov	r0, #0
   24efc:	mov	r4, r5
   24f00:	mov	r7, r0
   24f04:	b	24f18 <__flatcc_fb_gen_c_verifier@@Base+0x3b0c>
   24f08:	mov	r7, r2
   24f0c:	ldr	r4, [r4]
   24f10:	cmp	r4, #0
   24f14:	beq	24f60 <__flatcc_fb_gen_c_verifier@@Base+0x3b54>
   24f18:	ldrh	r3, [r4, #72]	; 0x48
   24f1c:	add	r2, r7, #1
   24f20:	tst	r3, #4
   24f24:	bne	24f0c <__flatcc_fb_gen_c_verifier@@Base+0x3b00>
   24f28:	ldrh	r3, [r4, #24]
   24f2c:	sub	r3, r3, #14
   24f30:	cmp	r3, #1
   24f34:	bhi	24f08 <__flatcc_fb_gen_c_verifier@@Base+0x3afc>
   24f38:	ldr	r3, [r4, #16]
   24f3c:	ldrh	r3, [r3, #8]
   24f40:	cmp	r3, #4
   24f44:	bne	24f08 <__flatcc_fb_gen_c_verifier@@Base+0x3afc>
   24f48:	ldr	r3, [r4, #4]
   24f4c:	add	r2, r7, #2
   24f50:	ldr	r3, [r3, #4]
   24f54:	add	r3, r3, #6
   24f58:	add	r0, r0, r3
   24f5c:	b	24f08 <__flatcc_fb_gen_c_verifier@@Base+0x3afc>
   24f60:	cmp	r7, #0
   24f64:	str	r7, [r1]
   24f68:	beq	25074 <__flatcc_fb_gen_c_verifier@@Base+0x3c68>
   24f6c:	lsl	r8, r7, #4
   24f70:	add	r0, r0, r8
   24f74:	bl	14010 <malloc@plt>
   24f78:	subs	r9, r0, #0
   24f7c:	beq	25074 <__flatcc_fb_gen_c_verifier@@Base+0x3c68>
   24f80:	ldr	sl, [pc, #256]	; 25088 <__flatcc_fb_gen_c_verifier@@Base+0x3c7c>
   24f84:	add	r8, r9, r8
   24f88:	mov	r6, r9
   24f8c:	mov	fp, #1
   24f90:	add	sl, pc, sl
   24f94:	b	24fa8 <__flatcc_fb_gen_c_verifier@@Base+0x3b9c>
   24f98:	mov	r6, ip
   24f9c:	ldr	r5, [r5]
   24fa0:	cmp	r5, #0
   24fa4:	beq	2503c <__flatcc_fb_gen_c_verifier@@Base+0x3c30>
   24fa8:	ldrh	r3, [r5, #72]	; 0x48
   24fac:	add	ip, r6, #16
   24fb0:	ands	r3, r3, #4
   24fb4:	bne	24f9c <__flatcc_fb_gen_c_verifier@@Base+0x3b90>
   24fb8:	ldr	r2, [r5, #4]
   24fbc:	ldrh	r0, [r5, #24]
   24fc0:	ldm	r2, {r1, r2}
   24fc4:	sub	r0, r0, #14
   24fc8:	cmp	r0, #1
   24fcc:	stm	r6, {r1, r2, r5}
   24fd0:	str	r3, [r6, #12]
   24fd4:	bhi	24f98 <__flatcc_fb_gen_c_verifier@@Base+0x3b8c>
   24fd8:	ldr	r3, [r5, #16]
   24fdc:	ldrh	r3, [r3, #8]
   24fe0:	cmp	r3, #4
   24fe4:	bne	24f98 <__flatcc_fb_gen_c_verifier@@Base+0x3b8c>
   24fe8:	add	r3, r2, #5
   24fec:	mov	r0, r8
   24ff0:	str	r4, [r5, #112]	; 0x70
   24ff4:	str	r8, [r6, #16]
   24ff8:	add	r4, r4, #1
   24ffc:	add	r6, r6, #32
   25000:	str	r3, [r6, #-12]
   25004:	bl	13fb0 <memcpy@plt>
   25008:	ldr	r2, [r5, #4]
   2500c:	ldrh	r3, [sl, #4]
   25010:	ldr	r0, [sl]
   25014:	ldr	r1, [r2, #4]
   25018:	add	r2, r8, r1
   2501c:	str	r0, [r8, r1]
   25020:	add	r8, r2, #6
   25024:	strh	r3, [r2, #4]
   25028:	str	r5, [r6, #-8]
   2502c:	ldr	r5, [r5]
   25030:	str	fp, [r6, #-4]
   25034:	cmp	r5, #0
   25038:	bne	24fa8 <__flatcc_fb_gen_c_verifier@@Base+0x3b9c>
   2503c:	ldr	r3, [pc, #72]	; 2508c <__flatcc_fb_gen_c_verifier@@Base+0x3c80>
   25040:	mov	r1, r7
   25044:	mov	r2, #16
   25048:	mov	r0, r9
   2504c:	add	r3, pc, r3
   25050:	bl	140e8 <qsort@plt>
   25054:	mov	r0, r9
   25058:	add	sp, sp, #4
   2505c:	ldrd	r4, [sp]
   25060:	ldrd	r6, [sp, #8]
   25064:	ldrd	r8, [sp, #16]
   25068:	ldrd	sl, [sp, #24]
   2506c:	add	sp, sp, #32
   25070:	pop	{pc}		; (ldr pc, [sp], #4)
   25074:	mov	r9, #0
   25078:	b	25054 <__flatcc_fb_gen_c_verifier@@Base+0x3c48>
   2507c:	mov	r9, r5
   25080:	str	r5, [r1]
   25084:	b	25054 <__flatcc_fb_gen_c_verifier@@Base+0x3c48>
   25088:	andeq	r4, r3, r0, asr #4
   2508c:			; <UNDEFINED> instruction: 0xffffe2a8
   25090:	ldrh	r2, [r1, #8]
   25094:	mov	r3, #0
   25098:	strd	r4, [sp, #-20]!	; 0xffffffec
   2509c:	strd	r6, [sp, #8]
   250a0:	ldr	r7, [pc, #832]	; 253e8 <__flatcc_fb_gen_c_verifier@@Base+0x3fdc>
   250a4:	str	lr, [sp, #16]
   250a8:	sub	sp, sp, #268	; 0x10c
   250ac:	add	r5, sp, #16
   250b0:	sub	r2, r2, #3
   250b4:	cmp	r2, #1
   250b8:	str	r3, [sp, #12]
   250bc:	str	r3, [sp, #16]
   250c0:	add	r7, pc, r7
   250c4:	str	r3, [r5, #4]
   250c8:	str	r3, [r5, #8]
   250cc:	str	r3, [r5, #12]
   250d0:	str	r3, [r5, #16]
   250d4:	str	r3, [r5, #20]
   250d8:	str	r3, [r5, #24]
   250dc:	bhi	2537c <__flatcc_fb_gen_c_verifier@@Base+0x3f70>
   250e0:	mov	r6, r1
   250e4:	mov	r4, r0
   250e8:	add	r1, sp, #12
   250ec:	ldr	r0, [r6, #20]
   250f0:	bl	24ed8 <__flatcc_fb_gen_c_verifier@@Base+0x3acc>
   250f4:	cmp	r0, #0
   250f8:	str	r0, [sp, #16]
   250fc:	beq	252f8 <__flatcc_fb_gen_c_verifier@@Base+0x3eec>
   25100:	ldr	ip, [pc, #740]	; 253ec <__flatcc_fb_gen_c_verifier@@Base+0x3fe0>
   25104:	mov	r1, #2
   25108:	add	r7, sp, #44	; 0x2c
   2510c:	mov	r2, #220	; 0xdc
   25110:	mov	r0, r7
   25114:	str	r6, [sp, #28]
   25118:	ldr	r3, [pc, #720]	; 253f0 <__flatcc_fb_gen_c_verifier@@Base+0x3fe4>
   2511c:	str	r1, [sp, #32]
   25120:	mov	r1, #0
   25124:	add	ip, pc, ip
   25128:	add	r3, pc, r3
   2512c:	str	ip, [sp, #20]
   25130:	str	r3, [sp, #24]
   25134:	bl	1407c <memset@plt>
   25138:	mov	r2, r7
   2513c:	mov	r1, r6
   25140:	ldr	r0, [r6, #12]
   25144:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   25148:	ldr	r1, [pc, #676]	; 253f4 <__flatcc_fb_gen_c_verifier@@Base+0x3fe8>
   2514c:	mov	r2, r7
   25150:	mov	r0, r4
   25154:	add	r1, pc, r1
   25158:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   2515c:	ldr	r3, [r4, #220]	; 0xdc
   25160:	mov	r0, r4
   25164:	ldr	r1, [pc, #652]	; 253f8 <__flatcc_fb_gen_c_verifier@@Base+0x3fec>
   25168:	add	r3, r3, #2
   2516c:	add	r1, pc, r1
   25170:	str	r3, [r4, #220]	; 0xdc
   25174:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25178:	ldr	r3, [r4, #220]	; 0xdc
   2517c:	cmp	r3, #0
   25180:	beq	25358 <__flatcc_fb_gen_c_verifier@@Base+0x3f4c>
   25184:	cmp	r3, #1
   25188:	moveq	r3, #0
   2518c:	streq	r3, [r4, #220]	; 0xdc
   25190:	beq	25358 <__flatcc_fb_gen_c_verifier@@Base+0x3f4c>
   25194:	ldr	r1, [pc, #608]	; 253fc <__flatcc_fb_gen_c_verifier@@Base+0x3ff0>
   25198:	sub	r3, r3, #2
   2519c:	mov	r0, r4
   251a0:	str	r3, [r4, #220]	; 0xdc
   251a4:	add	r1, pc, r1
   251a8:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   251ac:	ldr	r3, [r4, #220]	; 0xdc
   251b0:	ldr	r2, [sp, #12]
   251b4:	add	r3, r3, #1
   251b8:	cmp	r2, #0
   251bc:	str	r3, [r4, #220]	; 0xdc
   251c0:	beq	252a0 <__flatcc_fb_gen_c_verifier@@Base+0x3e94>
   251c4:	ldr	r1, [pc, #564]	; 25400 <__flatcc_fb_gen_c_verifier@@Base+0x3ff4>
   251c8:	mov	r0, r4
   251cc:	add	r1, pc, r1
   251d0:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   251d4:	ldr	r1, [pc, #552]	; 25404 <__flatcc_fb_gen_c_verifier@@Base+0x3ff8>
   251d8:	mov	r0, r4
   251dc:	add	r1, pc, r1
   251e0:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   251e4:	ldr	r1, [pc, #540]	; 25408 <__flatcc_fb_gen_c_verifier@@Base+0x3ffc>
   251e8:	mov	r0, r4
   251ec:	add	r1, pc, r1
   251f0:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   251f4:	ldr	r1, [pc, #528]	; 2540c <__flatcc_fb_gen_c_verifier@@Base+0x4000>
   251f8:	mov	r0, r4
   251fc:	add	r1, pc, r1
   25200:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25204:	ldr	r1, [pc, #516]	; 25410 <__flatcc_fb_gen_c_verifier@@Base+0x4004>
   25208:	mov	r0, r4
   2520c:	add	r1, pc, r1
   25210:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25214:	ldr	r3, [sp, #12]
   25218:	mov	ip, #0
   2521c:	mov	r1, r5
   25220:	mov	r2, ip
   25224:	mov	r0, r4
   25228:	str	ip, [sp]
   2522c:	sub	r3, r3, #1
   25230:	bl	21dac <__flatcc_fb_gen_c_verifier@@Base+0x9a0>
   25234:	ldr	r1, [pc, #472]	; 25414 <__flatcc_fb_gen_c_verifier@@Base+0x4008>
   25238:	mov	r0, r4
   2523c:	add	r1, pc, r1
   25240:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25244:	ldr	r3, [r4, #220]	; 0xdc
   25248:	cmp	r3, #0
   2524c:	beq	253a0 <__flatcc_fb_gen_c_verifier@@Base+0x3f94>
   25250:	ldr	r1, [pc, #448]	; 25418 <__flatcc_fb_gen_c_verifier@@Base+0x400c>
   25254:	sub	r3, r3, #1
   25258:	mov	r0, r4
   2525c:	str	r3, [r4, #220]	; 0xdc
   25260:	add	r1, pc, r1
   25264:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25268:	ldr	r1, [pc, #428]	; 2541c <__flatcc_fb_gen_c_verifier@@Base+0x4010>
   2526c:	mov	r0, r4
   25270:	add	r1, pc, r1
   25274:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25278:	ldr	r0, [sp, #16]
   2527c:	cmp	r0, #0
   25280:	beq	25288 <__flatcc_fb_gen_c_verifier@@Base+0x3e7c>
   25284:	bl	13fa4 <free@plt>
   25288:	mov	r0, #0
   2528c:	add	sp, sp, #268	; 0x10c
   25290:	ldrd	r4, [sp]
   25294:	ldrd	r6, [sp, #8]
   25298:	add	sp, sp, #16
   2529c:	pop	{pc}		; (ldr pc, [sp], #4)
   252a0:	ldr	r1, [pc, #376]	; 25420 <__flatcc_fb_gen_c_verifier@@Base+0x4014>
   252a4:	mov	r0, r4
   252a8:	add	r1, pc, r1
   252ac:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   252b0:	ldr	r1, [pc, #364]	; 25424 <__flatcc_fb_gen_c_verifier@@Base+0x4018>
   252b4:	mov	r0, r4
   252b8:	add	r1, pc, r1
   252bc:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   252c0:	ldr	r1, [pc, #352]	; 25428 <__flatcc_fb_gen_c_verifier@@Base+0x401c>
   252c4:	mov	r0, r4
   252c8:	add	r1, pc, r1
   252cc:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   252d0:	ldr	r3, [r4, #220]	; 0xdc
   252d4:	cmp	r3, #0
   252d8:	beq	253c4 <__flatcc_fb_gen_c_verifier@@Base+0x3fb8>
   252dc:	ldr	r1, [pc, #328]	; 2542c <__flatcc_fb_gen_c_verifier@@Base+0x4020>
   252e0:	sub	r3, r3, #1
   252e4:	mov	r0, r4
   252e8:	str	r3, [r4, #220]	; 0xdc
   252ec:	add	r1, pc, r1
   252f0:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   252f4:	b	25268 <__flatcc_fb_gen_c_verifier@@Base+0x3e5c>
   252f8:	ldr	r3, [sp, #12]
   252fc:	cmp	r3, #0
   25300:	ble	25100 <__flatcc_fb_gen_c_verifier@@Base+0x3cf4>
   25304:	ldr	r2, [pc, #292]	; 25430 <__flatcc_fb_gen_c_verifier@@Base+0x4024>
   25308:	movw	r3, #1249	; 0x4e1
   2530c:	ldr	r0, [pc, #288]	; 25434 <__flatcc_fb_gen_c_verifier@@Base+0x4028>
   25310:	ldr	r4, [pc, #288]	; 25438 <__flatcc_fb_gen_c_verifier@@Base+0x402c>
   25314:	ldr	r1, [pc, #288]	; 2543c <__flatcc_fb_gen_c_verifier@@Base+0x4030>
   25318:	add	r0, pc, r0
   2531c:	ldr	ip, [r7, r2]
   25320:	add	r4, pc, r4
   25324:	str	r0, [sp]
   25328:	mov	r2, r4
   2532c:	add	r1, pc, r1
   25330:	ldr	r0, [ip]
   25334:	bl	14064 <fprintf@plt>
   25338:	ldr	r3, [pc, #256]	; 25440 <__flatcc_fb_gen_c_verifier@@Base+0x4034>
   2533c:	mov	r1, r4
   25340:	movw	r2, #1249	; 0x4e1
   25344:	ldr	r0, [pc, #248]	; 25444 <__flatcc_fb_gen_c_verifier@@Base+0x4038>
   25348:	add	r3, pc, r3
   2534c:	add	r3, r3, #236	; 0xec
   25350:	add	r0, pc, r0
   25354:	bl	14118 <__assert_fail@plt>
   25358:	ldr	r3, [pc, #232]	; 25448 <__flatcc_fb_gen_c_verifier@@Base+0x403c>
   2535c:	movw	r2, #1263	; 0x4ef
   25360:	ldr	r1, [pc, #228]	; 2544c <__flatcc_fb_gen_c_verifier@@Base+0x4040>
   25364:	ldr	r0, [pc, #228]	; 25450 <__flatcc_fb_gen_c_verifier@@Base+0x4044>
   25368:	add	r3, pc, r3
   2536c:	add	r3, r3, #236	; 0xec
   25370:	add	r1, pc, r1
   25374:	add	r0, pc, r0
   25378:	bl	14118 <__assert_fail@plt>
   2537c:	ldr	r3, [pc, #208]	; 25454 <__flatcc_fb_gen_c_verifier@@Base+0x4048>
   25380:	movw	r2, #1246	; 0x4de
   25384:	ldr	r1, [pc, #204]	; 25458 <__flatcc_fb_gen_c_verifier@@Base+0x404c>
   25388:	ldr	r0, [pc, #204]	; 2545c <__flatcc_fb_gen_c_verifier@@Base+0x4050>
   2538c:	add	r3, pc, r3
   25390:	add	r3, r3, #236	; 0xec
   25394:	add	r1, pc, r1
   25398:	add	r0, pc, r0
   2539c:	bl	14118 <__assert_fail@plt>
   253a0:	ldr	r3, [pc, #184]	; 25460 <__flatcc_fb_gen_c_verifier@@Base+0x4054>
   253a4:	movw	r2, #1278	; 0x4fe
   253a8:	ldr	r1, [pc, #180]	; 25464 <__flatcc_fb_gen_c_verifier@@Base+0x4058>
   253ac:	ldr	r0, [pc, #180]	; 25468 <__flatcc_fb_gen_c_verifier@@Base+0x405c>
   253b0:	add	r3, pc, r3
   253b4:	add	r3, r3, #236	; 0xec
   253b8:	add	r1, pc, r1
   253bc:	add	r0, pc, r0
   253c0:	bl	14118 <__assert_fail@plt>
   253c4:	ldr	r3, [pc, #160]	; 2546c <__flatcc_fb_gen_c_verifier@@Base+0x4060>
   253c8:	movw	r2, #1269	; 0x4f5
   253cc:	ldr	r1, [pc, #156]	; 25470 <__flatcc_fb_gen_c_verifier@@Base+0x4064>
   253d0:	ldr	r0, [pc, #156]	; 25474 <__flatcc_fb_gen_c_verifier@@Base+0x4068>
   253d4:	add	r3, pc, r3
   253d8:	add	r3, r3, #236	; 0xec
   253dc:	add	r1, pc, r1
   253e0:	add	r0, pc, r0
   253e4:	bl	14118 <__assert_fail@plt>
   253e8:	andeq	r7, r4, r8, lsr pc
   253ec:			; <UNDEFINED> instruction: 0xffffe688
   253f0:			; <UNDEFINED> instruction: 0xffffc7c8
   253f4:	muleq	r3, ip, r9
   253f8:	andeq	r0, r3, r8, ror #19
   253fc:	andeq	r2, r3, r0, lsl #4
   25400:	andeq	pc, r2, ip, lsl sp	; <UNPREDICTABLE>
   25404:	andeq	pc, r2, ip, lsr #26
   25408:	andeq	pc, r2, r0, lsr sp	; <UNPREDICTABLE>
   2540c:			; <UNDEFINED> instruction: 0x000269bc
   25410:	andeq	pc, r2, r0, lsr #13
   25414:	andeq	pc, r2, ip, ror #21
   25418:	andeq	pc, r2, r0, asr r5	; <UNPREDICTABLE>
   2541c:	andeq	r6, r2, r8, asr #18
   25420:	andeq	r0, r3, r0, ror #17
   25424:	andeq	r0, r3, ip, ror #17
   25428:	andeq	pc, r2, r0, lsl #24
   2542c:	andeq	pc, r2, r4, asr #9
   25430:	andeq	r0, r0, r0, lsr #1
   25434:	andeq	pc, r2, ip, lsl #22
   25438:	andeq	pc, r2, r8, lsl r4	; <UNPREDICTABLE>
   2543c:	andeq	ip, r1, r4, ror #21
   25440:	andeq	pc, r2, r0, lsr #3
   25444:	andeq	r4, r2, r4, ror #31
   25448:	andeq	pc, r2, r0, lsl #3
   2544c:	andeq	pc, r2, r8, asr #7
   25450:	andeq	pc, r2, r0, lsr r4	; <UNPREDICTABLE>
   25454:	andeq	pc, r2, ip, asr r1	; <UNPREDICTABLE>
   25458:	andeq	pc, r2, r4, lsr #7
   2545c:			; <UNDEFINED> instruction: 0x0001d5b0
   25460:	andeq	pc, r2, r8, lsr r1	; <UNPREDICTABLE>
   25464:	andeq	pc, r2, r0, lsl #7
   25468:	andeq	pc, r2, r8, ror #7
   2546c:	andeq	pc, r2, r4, lsl r1	; <UNPREDICTABLE>
   25470:	andeq	pc, r2, ip, asr r3	; <UNPREDICTABLE>
   25474:	andeq	pc, r2, r4, asr #7
   25478:	ldrh	r3, [r1, #8]
   2547c:	sub	r3, r3, #3
   25480:	cmp	r3, #1
   25484:	bxhi	lr
   25488:	str	r4, [sp, #-8]!
   2548c:	mov	r4, r0
   25490:	ldr	r0, [r0, #4]
   25494:	ldr	r1, [r1, #16]
   25498:	str	lr, [sp, #4]
   2549c:	add	r0, r0, #172	; 0xac
   254a0:	bl	2c058 <ptr_set_find_item@@Base>
   254a4:	cmp	r0, #0
   254a8:	beq	254b8 <__flatcc_fb_gen_c_verifier@@Base+0x40ac>
   254ac:	ldr	r3, [r4]
   254b0:	add	r3, r3, #1
   254b4:	str	r3, [r4]
   254b8:	ldr	r4, [sp]
   254bc:	add	sp, sp, #4
   254c0:	pop	{pc}		; (ldr pc, [sp], #4)
   254c4:	ldrh	r3, [r1, #8]
   254c8:	sub	r3, r3, #3
   254cc:	cmp	r3, #1
   254d0:	bxhi	lr
   254d4:	strd	r4, [sp, #-16]!
   254d8:	mov	r5, r0
   254dc:	mov	r4, r1
   254e0:	ldr	r0, [r0, #4]
   254e4:	ldr	r1, [r1, #16]
   254e8:	str	r6, [sp, #8]
   254ec:	str	lr, [sp, #12]
   254f0:	add	r0, r0, #172	; 0xac
   254f4:	bl	2c058 <ptr_set_find_item@@Base>
   254f8:	cmp	r0, #0
   254fc:	beq	2551c <__flatcc_fb_gen_c_verifier@@Base+0x4110>
   25500:	ldr	r2, [r4, #4]
   25504:	ldr	r3, [r5, #8]
   25508:	ldrd	r0, [r2]
   2550c:	add	r2, r3, #16
   25510:	strd	r0, [r3]
   25514:	str	r4, [r3, #8]
   25518:	str	r2, [r5, #8]
   2551c:	ldrd	r4, [sp]
   25520:	ldr	r6, [sp, #8]
   25524:	add	sp, sp, #12
   25528:	pop	{pc}		; (ldr pc, [sp], #4)
   2552c:	ldrh	r3, [r1, #8]
   25530:	cmp	r3, #4
   25534:	bxhi	lr
   25538:	strd	r4, [sp, #-16]!
   2553c:	mov	r4, r0
   25540:	mov	r5, r1
   25544:	ldr	r0, [r0, #40]	; 0x28
   25548:	ldr	r1, [r1, #16]
   2554c:	str	r6, [sp, #8]
   25550:	str	lr, [sp, #12]
   25554:	add	r0, r0, #172	; 0xac
   25558:	bl	2c058 <ptr_set_find_item@@Base>
   2555c:	cmp	r0, #0
   25560:	beq	255ec <__flatcc_fb_gen_c_verifier@@Base+0x41e0>
   25564:	ldr	ip, [r4]
   25568:	cmp	ip, #0
   2556c:	beq	255a0 <__flatcc_fb_gen_c_verifier@@Base+0x4194>
   25570:	ldr	r3, [r5, #12]
   25574:	ldr	r3, [r3]
   25578:	cmp	r3, #0
   2557c:	beq	25618 <__flatcc_fb_gen_c_verifier@@Base+0x420c>
   25580:	mov	ip, #0
   25584:	ldr	r2, [r3, #4]
   25588:	ldr	r3, [r3]
   2558c:	ldr	r2, [r2, #4]
   25590:	cmp	r3, #0
   25594:	add	r2, r2, #1
   25598:	add	ip, ip, r2
   2559c:	bne	25584 <__flatcc_fb_gen_c_verifier@@Base+0x4178>
   255a0:	ldr	r3, [r5, #4]
   255a4:	ldr	r1, [r4, #12]
   255a8:	ldrh	r2, [r5, #8]
   255ac:	ldr	r3, [r3, #4]
   255b0:	add	r3, r3, r1
   255b4:	add	r3, r3, #1
   255b8:	add	ip, r3, ip
   255bc:	str	ip, [r4, #12]
   255c0:	cmp	r2, #4
   255c4:	addls	pc, pc, r2, lsl #2
   255c8:	b	255ec <__flatcc_fb_gen_c_verifier@@Base+0x41e0>
   255cc:	b	255fc <__flatcc_fb_gen_c_verifier@@Base+0x41f0>
   255d0:	b	255fc <__flatcc_fb_gen_c_verifier@@Base+0x41f0>
   255d4:	b	255ec <__flatcc_fb_gen_c_verifier@@Base+0x41e0>
   255d8:	b	255e0 <__flatcc_fb_gen_c_verifier@@Base+0x41d4>
   255dc:	b	255e0 <__flatcc_fb_gen_c_verifier@@Base+0x41d4>
   255e0:	ldr	r3, [r4, #8]
   255e4:	add	r3, r3, #1
   255e8:	str	r3, [r4, #8]
   255ec:	ldrd	r4, [sp]
   255f0:	ldr	r6, [sp, #8]
   255f4:	add	sp, sp, #12
   255f8:	pop	{pc}		; (ldr pc, [sp], #4)
   255fc:	ldr	r3, [r4, #4]
   25600:	ldr	r6, [sp, #8]
   25604:	add	r3, r3, #1
   25608:	str	r3, [r4, #4]
   2560c:	ldrd	r4, [sp]
   25610:	add	sp, sp, #12
   25614:	pop	{pc}		; (ldr pc, [sp], #4)
   25618:	mov	ip, r3
   2561c:	b	255a0 <__flatcc_fb_gen_c_verifier@@Base+0x4194>

00025620 <__flatcc_fb_gen_c_json_parser@@Base>:
   25620:	ldr	r2, [pc, #4040]	; 265f0 <__flatcc_fb_gen_c_json_parser@@Base+0xfd0>
   25624:	strd	r4, [sp, #-36]!	; 0xffffffdc
   25628:	mov	r4, r0
   2562c:	ldr	r1, [pc, #4032]	; 265f4 <__flatcc_fb_gen_c_json_parser@@Base+0xfd4>
   25630:	ldr	r3, [r0, #208]	; 0xd0
   25634:	add	r2, pc, r2
   25638:	strd	r6, [sp, #8]
   2563c:	strd	r8, [sp, #16]
   25640:	strd	sl, [sp, #24]
   25644:	add	r1, pc, r1
   25648:	str	lr, [sp, #32]
   2564c:	sub	sp, sp, #292	; 0x124
   25650:	ldr	r5, [pc, #4000]	; 265f8 <__flatcc_fb_gen_c_json_parser@@Base+0xfd8>
   25654:	str	r2, [sp, #28]
   25658:	ldr	r2, [r3, #164]	; 0xa4
   2565c:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25660:	ldr	r1, [pc, #3988]	; 265fc <__flatcc_fb_gen_c_json_parser@@Base+0xfdc>
   25664:	mov	r0, r4
   25668:	add	r5, pc, r5
   2566c:	ldr	r3, [r4, #208]	; 0xd0
   25670:	add	r1, pc, r1
   25674:	ldr	r2, [r3, #164]	; 0xa4
   25678:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   2567c:	mov	r0, r4
   25680:	mov	r1, r5
   25684:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25688:	ldr	r1, [pc, #3952]	; 26600 <__flatcc_fb_gen_c_json_parser@@Base+0xfe0>
   2568c:	mov	r0, r4
   25690:	add	r1, pc, r1
   25694:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25698:	mov	r1, r5
   2569c:	mov	r0, r4
   256a0:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   256a4:	ldr	r1, [pc, #3928]	; 26604 <__flatcc_fb_gen_c_json_parser@@Base+0xfe4>
   256a8:	mov	r0, r4
   256ac:	add	r1, pc, r1
   256b0:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   256b4:	ldr	r2, [pc, #3916]	; 26608 <__flatcc_fb_gen_c_json_parser@@Base+0xfe8>
   256b8:	mov	r0, r4
   256bc:	ldr	r1, [pc, #3912]	; 2660c <__flatcc_fb_gen_c_json_parser@@Base+0xfec>
   256c0:	add	r2, pc, r2
   256c4:	add	r1, pc, r1
   256c8:	bl	15fbc <__flatcc_fb_gen_c_includes@@Base>
   256cc:	ldr	r3, [r4, #212]	; 0xd4
   256d0:	ldr	r3, [r3, #140]	; 0x8c
   256d4:	cmp	r3, #0
   256d8:	bne	26dd4 <__flatcc_fb_gen_c_json_parser@@Base+0x17b4>
   256dc:	ldr	r8, [pc, #3884]	; 26610 <__flatcc_fb_gen_c_json_parser@@Base+0xff0>
   256e0:	mov	r0, r4
   256e4:	add	r5, sp, #68	; 0x44
   256e8:	add	r8, pc, r8
   256ec:	mov	r1, r8
   256f0:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   256f4:	ldr	r7, [r4, #208]	; 0xd0
   256f8:	mov	r0, r5
   256fc:	mov	r2, #220	; 0xdc
   25700:	mov	r1, #0
   25704:	ldr	r6, [r7, #52]	; 0x34
   25708:	bl	1407c <memset@plt>
   2570c:	cmp	r6, #0
   25710:	beq	25720 <__flatcc_fb_gen_c_json_parser@@Base+0x100>
   25714:	ldrh	r3, [r6, #8]
   25718:	cmp	r3, #1
   2571c:	bls	27010 <__flatcc_fb_gen_c_json_parser@@Base+0x19f0>
   25720:	ldr	r6, [r7, #40]	; 0x28
   25724:	cmp	r6, #0
   25728:	beq	257fc <__flatcc_fb_gen_c_json_parser@@Base+0x1dc>
   2572c:	ldr	r9, [pc, #3808]	; 26614 <__flatcc_fb_gen_c_json_parser@@Base+0xff4>
   25730:	ldr	r8, [pc, #3808]	; 26618 <__flatcc_fb_gen_c_json_parser@@Base+0xff8>
   25734:	ldr	r7, [pc, #3808]	; 2661c <__flatcc_fb_gen_c_json_parser@@Base+0xffc>
   25738:	add	r9, pc, r9
   2573c:	add	r8, pc, r8
   25740:	add	r7, pc, r7
   25744:	ldrh	r3, [r6, #8]
   25748:	cmp	r3, #4
   2574c:	addls	pc, pc, r3, lsl #2
   25750:	b	257ec <__flatcc_fb_gen_c_json_parser@@Base+0x1cc>
   25754:	b	25998 <__flatcc_fb_gen_c_json_parser@@Base+0x378>
   25758:	b	258e0 <__flatcc_fb_gen_c_json_parser@@Base+0x2c0>
   2575c:	b	257ec <__flatcc_fb_gen_c_json_parser@@Base+0x1cc>
   25760:	b	2591c <__flatcc_fb_gen_c_json_parser@@Base+0x2fc>
   25764:	b	25768 <__flatcc_fb_gen_c_json_parser@@Base+0x148>
   25768:	mov	r2, r5
   2576c:	mov	r1, r6
   25770:	ldr	r0, [r6, #12]
   25774:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   25778:	ldr	r1, [pc, #3744]	; 26620 <__flatcc_fb_gen_c_json_parser@@Base+0x1000>
   2577c:	mov	r2, r5
   25780:	mov	r0, r4
   25784:	add	r1, pc, r1
   25788:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   2578c:	ldr	r1, [pc, #3728]	; 26624 <__flatcc_fb_gen_c_json_parser@@Base+0x1004>
   25790:	mov	r2, r5
   25794:	mov	r0, r4
   25798:	add	r1, pc, r1
   2579c:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   257a0:	ldr	r1, [pc, #3712]	; 26628 <__flatcc_fb_gen_c_json_parser@@Base+0x1008>
   257a4:	mov	r2, r5
   257a8:	mov	r0, r4
   257ac:	add	r1, pc, r1
   257b0:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   257b4:	ldr	r3, [r4, #220]	; 0xdc
   257b8:	mov	r0, r4
   257bc:	ldr	r1, [pc, #3688]	; 2662c <__flatcc_fb_gen_c_json_parser@@Base+0x100c>
   257c0:	add	r3, r3, #2
   257c4:	add	r1, pc, r1
   257c8:	str	r3, [r4, #220]	; 0xdc
   257cc:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   257d0:	ldr	r3, [r4, #220]	; 0xdc
   257d4:	cmp	r3, #0
   257d8:	beq	27180 <__flatcc_fb_gen_c_json_parser@@Base+0x1b60>
   257dc:	cmp	r3, #1
   257e0:	beq	27178 <__flatcc_fb_gen_c_json_parser@@Base+0x1b58>
   257e4:	sub	r3, r3, #2
   257e8:	str	r3, [r4, #220]	; 0xdc
   257ec:	ldr	r6, [r6]
   257f0:	cmp	r6, #0
   257f4:	bne	25744 <__flatcc_fb_gen_c_json_parser@@Base+0x124>
   257f8:	ldr	r7, [r4, #208]	; 0xd0
   257fc:	mov	r2, r4
   25800:	ldr	r1, [pc, #3624]	; 26630 <__flatcc_fb_gen_c_json_parser@@Base+0x1010>
   25804:	ldr	r0, [r7, #60]	; 0x3c
   25808:	add	r1, pc, r1
   2580c:	bl	2d89c <fb_scope_table_visit@@Base>
   25810:	ldr	r1, [pc, #3612]	; 26634 <__flatcc_fb_gen_c_json_parser@@Base+0x1014>
   25814:	mov	r0, r4
   25818:	ldr	r3, [r4, #208]	; 0xd0
   2581c:	add	r1, pc, r1
   25820:	ldr	r2, [r3, #160]	; 0xa0
   25824:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25828:	ldr	r3, [r4, #220]	; 0xdc
   2582c:	mov	r0, r4
   25830:	ldr	r1, [pc, #3584]	; 26638 <__flatcc_fb_gen_c_json_parser@@Base+0x1018>
   25834:	add	r3, r3, #2
   25838:	add	r1, pc, r1
   2583c:	str	r3, [r4, #220]	; 0xdc
   25840:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25844:	ldr	r3, [r4, #220]	; 0xdc
   25848:	cmp	r3, #0
   2584c:	beq	271a4 <__flatcc_fb_gen_c_json_parser@@Base+0x1b84>
   25850:	cmp	r3, #1
   25854:	moveq	r3, #0
   25858:	streq	r3, [r4, #220]	; 0xdc
   2585c:	beq	271a4 <__flatcc_fb_gen_c_json_parser@@Base+0x1b84>
   25860:	ldr	r1, [pc, #3540]	; 2663c <__flatcc_fb_gen_c_json_parser@@Base+0x101c>
   25864:	sub	r3, r3, #2
   25868:	mov	r0, r4
   2586c:	str	r3, [r4, #220]	; 0xdc
   25870:	add	r1, pc, r1
   25874:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25878:	ldr	r3, [r4, #208]	; 0xd0
   2587c:	ldr	r6, [r3, #40]	; 0x28
   25880:	cmp	r6, #0
   25884:	addeq	r7, sp, #40	; 0x28
   25888:	beq	259f0 <__flatcc_fb_gen_c_json_parser@@Base+0x3d0>
   2588c:	ldr	r3, [pc, #3500]	; 26640 <__flatcc_fb_gen_c_json_parser@@Base+0x1020>
   25890:	add	r7, sp, #40	; 0x28
   25894:	ldr	fp, [pc, #3496]	; 26644 <__flatcc_fb_gen_c_json_parser@@Base+0x1024>
   25898:	add	r3, pc, r3
   2589c:	str	r3, [sp, #16]
   258a0:	add	fp, pc, fp
   258a4:	ldr	r3, [pc, #3484]	; 26648 <__flatcc_fb_gen_c_json_parser@@Base+0x1028>
   258a8:	add	r3, pc, r3
   258ac:	str	r3, [sp, #20]
   258b0:	ldr	r3, [pc, #3476]	; 2664c <__flatcc_fb_gen_c_json_parser@@Base+0x102c>
   258b4:	add	r3, pc, r3
   258b8:	str	r3, [sp, #24]
   258bc:	ldrh	r3, [r6, #8]
   258c0:	cmp	r3, #4
   258c4:	addls	pc, pc, r3, lsl #2
   258c8:	b	259e0 <__flatcc_fb_gen_c_json_parser@@Base+0x3c0>
   258cc:	b	26390 <__flatcc_fb_gen_c_json_parser@@Base+0xd70>
   258d0:	b	25f78 <__flatcc_fb_gen_c_json_parser@@Base+0x958>
   258d4:	b	259e0 <__flatcc_fb_gen_c_json_parser@@Base+0x3c0>
   258d8:	b	26380 <__flatcc_fb_gen_c_json_parser@@Base+0xd60>
   258dc:	b	259bc <__flatcc_fb_gen_c_json_parser@@Base+0x39c>
   258e0:	mov	r2, r5
   258e4:	mov	r1, r6
   258e8:	ldr	r0, [r6, #12]
   258ec:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   258f0:	ldr	r1, [pc, #3416]	; 26650 <__flatcc_fb_gen_c_json_parser@@Base+0x1030>
   258f4:	mov	r2, r5
   258f8:	mov	r0, r4
   258fc:	add	r1, pc, r1
   25900:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25904:	ldr	r1, [pc, #3400]	; 26654 <__flatcc_fb_gen_c_json_parser@@Base+0x1034>
   25908:	mov	r2, r5
   2590c:	mov	r0, r4
   25910:	add	r1, pc, r1
   25914:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25918:	b	257ec <__flatcc_fb_gen_c_json_parser@@Base+0x1cc>
   2591c:	mov	r2, r5
   25920:	mov	r1, r6
   25924:	ldr	r0, [r6, #12]
   25928:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   2592c:	mov	r2, r5
   25930:	mov	r1, r9
   25934:	mov	r0, r4
   25938:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   2593c:	ldr	r3, [r4, #220]	; 0xdc
   25940:	mov	r2, r5
   25944:	mov	r1, r8
   25948:	mov	r0, r4
   2594c:	add	r3, r3, #2
   25950:	str	r3, [r4, #220]	; 0xdc
   25954:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25958:	ldr	r3, [r4, #220]	; 0xdc
   2595c:	cmp	r3, #0
   25960:	beq	25974 <__flatcc_fb_gen_c_json_parser@@Base+0x354>
   25964:	cmp	r3, #1
   25968:	bne	257e4 <__flatcc_fb_gen_c_json_parser@@Base+0x1c4>
   2596c:	mov	r3, #0
   25970:	str	r3, [r4, #220]	; 0xdc
   25974:	ldr	r3, [pc, #3292]	; 26658 <__flatcc_fb_gen_c_json_parser@@Base+0x1038>
   25978:	movw	r2, #1747	; 0x6d3
   2597c:	ldr	r1, [pc, #3288]	; 2665c <__flatcc_fb_gen_c_json_parser@@Base+0x103c>
   25980:	ldr	r0, [pc, #3288]	; 26660 <__flatcc_fb_gen_c_json_parser@@Base+0x1040>
   25984:	add	r3, pc, r3
   25988:	add	r3, r3, #252	; 0xfc
   2598c:	add	r1, pc, r1
   25990:	add	r0, pc, r0
   25994:	bl	14118 <__assert_fail@plt>
   25998:	mov	r2, r5
   2599c:	mov	r1, r6
   259a0:	ldr	r0, [r6, #12]
   259a4:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   259a8:	mov	r2, r5
   259ac:	mov	r1, r7
   259b0:	mov	r0, r4
   259b4:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   259b8:	b	257ec <__flatcc_fb_gen_c_json_parser@@Base+0x1cc>
   259bc:	mov	r1, r6
   259c0:	mov	r0, r4
   259c4:	bl	229d8 <__flatcc_fb_gen_c_verifier@@Base+0x15cc>
   259c8:	mov	r1, r6
   259cc:	mov	r0, r4
   259d0:	bl	2306c <__flatcc_fb_gen_c_verifier@@Base+0x1c60>
   259d4:	mov	r1, r6
   259d8:	mov	r0, r4
   259dc:	bl	25090 <__flatcc_fb_gen_c_verifier@@Base+0x3c84>
   259e0:	ldr	r6, [r6]
   259e4:	cmp	r6, #0
   259e8:	bne	258bc <__flatcc_fb_gen_c_json_parser@@Base+0x29c>
   259ec:	ldr	r3, [r4, #208]	; 0xd0
   259f0:	mov	r2, r4
   259f4:	ldr	r1, [pc, #3176]	; 26664 <__flatcc_fb_gen_c_json_parser@@Base+0x1044>
   259f8:	ldr	r0, [r3, #60]	; 0x3c
   259fc:	add	r1, pc, r1
   25a00:	bl	2d89c <fb_scope_table_visit@@Base>
   25a04:	ldr	r0, [r4, #208]	; 0xd0
   25a08:	mov	r3, #0
   25a0c:	mov	r1, #1
   25a10:	mov	r2, r5
   25a14:	str	r3, [sp, #40]	; 0x28
   25a18:	str	r3, [r7, #4]
   25a1c:	str	r3, [r7, #8]
   25a20:	str	r3, [r7, #12]
   25a24:	str	r3, [r7, #16]
   25a28:	str	r3, [r7, #20]
   25a2c:	str	r3, [r7, #24]
   25a30:	ldr	r9, [r0, #60]	; 0x3c
   25a34:	str	r1, [sp, #68]	; 0x44
   25a38:	ldr	r1, [pc, #3112]	; 26668 <__flatcc_fb_gen_c_json_parser@@Base+0x1048>
   25a3c:	str	r3, [sp, #72]	; 0x48
   25a40:	str	r0, [sp, #108]	; 0x6c
   25a44:	mov	r0, r9
   25a48:	str	r3, [sp, #76]	; 0x4c
   25a4c:	str	r3, [sp, #80]	; 0x50
   25a50:	add	r1, pc, r1
   25a54:	str	r3, [sp, #84]	; 0x54
   25a58:	str	r3, [sp, #88]	; 0x58
   25a5c:	str	r3, [sp, #92]	; 0x5c
   25a60:	str	r3, [sp, #96]	; 0x60
   25a64:	str	r3, [sp, #100]	; 0x64
   25a68:	str	r3, [sp, #104]	; 0x68
   25a6c:	bl	2d89c <fb_scope_table_visit@@Base>
   25a70:	ldr	r3, [sp, #72]	; 0x48
   25a74:	mov	r1, #8
   25a78:	mov	r0, r3
   25a7c:	str	r3, [sp, #12]
   25a80:	bl	13f74 <calloc@plt>
   25a84:	ldr	sl, [sp, #76]	; 0x4c
   25a88:	mov	fp, r0
   25a8c:	mov	r1, #8
   25a90:	str	fp, [sp, #84]	; 0x54
   25a94:	mov	r0, sl
   25a98:	bl	13f74 <calloc@plt>
   25a9c:	ldr	r6, [sp, #80]	; 0x50
   25aa0:	mov	r8, r0
   25aa4:	str	r8, [sp, #88]	; 0x58
   25aa8:	mov	r0, r6
   25aac:	bl	14010 <malloc@plt>
   25ab0:	ldr	r3, [sp, #12]
   25ab4:	str	r0, [sp, #92]	; 0x5c
   25ab8:	str	fp, [sp, #96]	; 0x60
   25abc:	str	r8, [sp, #100]	; 0x64
   25ac0:	str	r0, [sp, #104]	; 0x68
   25ac4:	cmp	r3, #0
   25ac8:	movle	r2, #0
   25acc:	movgt	r2, #1
   25ad0:	cmp	fp, #0
   25ad4:	movne	r2, #0
   25ad8:	cmp	r2, #0
   25adc:	bne	25d38 <__flatcc_fb_gen_c_json_parser@@Base+0x718>
   25ae0:	cmp	sl, #0
   25ae4:	movle	r2, #0
   25ae8:	movgt	r2, #1
   25aec:	cmp	r8, #0
   25af0:	movne	r2, #0
   25af4:	cmp	r2, #0
   25af8:	bne	25d38 <__flatcc_fb_gen_c_json_parser@@Base+0x718>
   25afc:	adds	r6, r6, #0
   25b00:	movne	r6, #1
   25b04:	cmp	r0, #0
   25b08:	moveq	fp, r6
   25b0c:	movne	fp, #0
   25b10:	cmp	fp, #0
   25b14:	bne	25d38 <__flatcc_fb_gen_c_json_parser@@Base+0x718>
   25b18:	ldr	r1, [pc, #2892]	; 2666c <__flatcc_fb_gen_c_json_parser@@Base+0x104c>
   25b1c:	mov	r2, r5
   25b20:	mov	r0, r9
   25b24:	add	r1, pc, r1
   25b28:	bl	2d89c <fb_scope_table_visit@@Base>
   25b2c:	ldr	r1, [sp, #72]	; 0x48
   25b30:	ldr	r0, [sp, #84]	; 0x54
   25b34:	bl	232a4 <__flatcc_fb_gen_c_verifier@@Base+0x1e98>
   25b38:	ldr	r1, [sp, #76]	; 0x4c
   25b3c:	ldr	r0, [sp, #88]	; 0x58
   25b40:	bl	232a4 <__flatcc_fb_gen_c_verifier@@Base+0x1e98>
   25b44:	ldr	r6, [sp, #76]	; 0x4c
   25b48:	cmp	r6, #0
   25b4c:	streq	r6, [sp, #40]	; 0x28
   25b50:	beq	25bdc <__flatcc_fb_gen_c_json_parser@@Base+0x5bc>
   25b54:	lsl	r0, r6, #4
   25b58:	bl	14010 <malloc@plt>
   25b5c:	subs	r9, r0, #0
   25b60:	beq	2710c <__flatcc_fb_gen_c_json_parser@@Base+0x1aec>
   25b64:	cmp	r6, #0
   25b68:	ble	25bbc <__flatcc_fb_gen_c_json_parser@@Base+0x59c>
   25b6c:	ldr	sl, [sp, #88]	; 0x58
   25b70:	mov	r8, r9
   25b74:	add	r3, sl, #4
   25b78:	str	r3, [sp, #12]
   25b7c:	mov	r3, r6
   25b80:	mov	r6, sl
   25b84:	mov	sl, r3
   25b88:	ldr	r3, [sp, #12]
   25b8c:	ldr	r0, [r3, fp, lsl #3]
   25b90:	str	r0, [r8]
   25b94:	bl	1404c <strlen@plt>
   25b98:	ldr	r3, [r6, fp, lsl #3]
   25b9c:	mov	r2, #0
   25ba0:	add	fp, fp, #1
   25ba4:	cmp	sl, fp
   25ba8:	stmib	r8, {r0, r3}
   25bac:	add	r8, r8, #16
   25bb0:	str	r2, [r8, #-4]
   25bb4:	bne	25b88 <__flatcc_fb_gen_c_json_parser@@Base+0x568>
   25bb8:	mov	r6, sl
   25bbc:	ldr	r3, [pc, #2732]	; 26670 <__flatcc_fb_gen_c_json_parser@@Base+0x1050>
   25bc0:	mov	r1, r6
   25bc4:	mov	r2, #16
   25bc8:	mov	r0, r9
   25bcc:	add	r3, pc, r3
   25bd0:	bl	140e8 <qsort@plt>
   25bd4:	ldr	r6, [sp, #76]	; 0x4c
   25bd8:	str	r9, [sp, #40]	; 0x28
   25bdc:	ldr	r1, [pc, #2704]	; 26674 <__flatcc_fb_gen_c_json_parser@@Base+0x1054>
   25be0:	mov	ip, #4
   25be4:	mov	r8, #0
   25be8:	mov	r0, r4
   25bec:	ldr	r2, [r4, #208]	; 0xd0
   25bf0:	ldr	r3, [pc, #2688]	; 26678 <__flatcc_fb_gen_c_json_parser@@Base+0x1058>
   25bf4:	add	r1, pc, r1
   25bf8:	ldr	r2, [r2, #160]	; 0xa0
   25bfc:	str	r1, [sp, #44]	; 0x2c
   25c00:	ldr	r1, [pc, #2676]	; 2667c <__flatcc_fb_gen_c_json_parser@@Base+0x105c>
   25c04:	add	r3, pc, r3
   25c08:	str	r3, [sp, #48]	; 0x30
   25c0c:	str	r8, [sp, #52]	; 0x34
   25c10:	str	ip, [sp, #56]	; 0x38
   25c14:	add	r1, pc, r1
   25c18:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25c1c:	ldr	r3, [r4, #220]	; 0xdc
   25c20:	mov	r0, r4
   25c24:	ldr	r1, [pc, #2644]	; 26680 <__flatcc_fb_gen_c_json_parser@@Base+0x1060>
   25c28:	add	r3, r3, #2
   25c2c:	add	r1, pc, r1
   25c30:	str	r3, [r4, #220]	; 0xdc
   25c34:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25c38:	ldr	r3, [r4, #220]	; 0xdc
   25c3c:	cmp	r3, r8
   25c40:	beq	271c8 <__flatcc_fb_gen_c_json_parser@@Base+0x1ba8>
   25c44:	cmp	r3, #1
   25c48:	streq	r8, [r4, #220]	; 0xdc
   25c4c:	beq	271c8 <__flatcc_fb_gen_c_json_parser@@Base+0x1ba8>
   25c50:	ldr	r1, [pc, #2604]	; 26684 <__flatcc_fb_gen_c_json_parser@@Base+0x1064>
   25c54:	sub	r3, r3, #2
   25c58:	mov	r0, r4
   25c5c:	str	r3, [r4, #220]	; 0xdc
   25c60:	add	r1, pc, r1
   25c64:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25c68:	ldr	r3, [r4, #220]	; 0xdc
   25c6c:	cmp	r6, #0
   25c70:	add	r3, r3, #1
   25c74:	str	r3, [r4, #220]	; 0xdc
   25c78:	beq	26d5c <__flatcc_fb_gen_c_json_parser@@Base+0x173c>
   25c7c:	ldr	r1, [pc, #2564]	; 26688 <__flatcc_fb_gen_c_json_parser@@Base+0x1068>
   25c80:	mov	r0, r4
   25c84:	add	r1, pc, r1
   25c88:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25c8c:	ldr	r1, [pc, #2552]	; 2668c <__flatcc_fb_gen_c_json_parser@@Base+0x106c>
   25c90:	mov	r0, r4
   25c94:	add	r1, pc, r1
   25c98:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25c9c:	ldr	r1, [pc, #2540]	; 26690 <__flatcc_fb_gen_c_json_parser@@Base+0x1070>
   25ca0:	mov	r0, r4
   25ca4:	add	r1, pc, r1
   25ca8:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25cac:	ldr	r1, [pc, #2528]	; 26694 <__flatcc_fb_gen_c_json_parser@@Base+0x1074>
   25cb0:	mov	r0, r4
   25cb4:	add	r1, pc, r1
   25cb8:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25cbc:	ldr	r1, [pc, #2516]	; 26698 <__flatcc_fb_gen_c_json_parser@@Base+0x1078>
   25cc0:	mov	r0, r4
   25cc4:	add	r1, pc, r1
   25cc8:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25ccc:	sub	r3, r6, #1
   25cd0:	mov	r2, r8
   25cd4:	str	r8, [sp]
   25cd8:	mov	r1, r7
   25cdc:	mov	r0, r4
   25ce0:	bl	21dac <__flatcc_fb_gen_c_verifier@@Base+0x9a0>
   25ce4:	ldr	r1, [pc, #2480]	; 2669c <__flatcc_fb_gen_c_json_parser@@Base+0x107c>
   25ce8:	mov	r0, r4
   25cec:	add	r1, pc, r1
   25cf0:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25cf4:	ldr	r3, [r4, #220]	; 0xdc
   25cf8:	cmp	r3, #0
   25cfc:	beq	27460 <__flatcc_fb_gen_c_json_parser@@Base+0x1e40>
   25d00:	ldr	r1, [pc, #2456]	; 266a0 <__flatcc_fb_gen_c_json_parser@@Base+0x1080>
   25d04:	sub	r3, r3, #1
   25d08:	mov	r0, r4
   25d0c:	str	r3, [r4, #220]	; 0xdc
   25d10:	add	r1, pc, r1
   25d14:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25d18:	ldr	r1, [pc, #2436]	; 266a4 <__flatcc_fb_gen_c_json_parser@@Base+0x1084>
   25d1c:	mov	r0, r4
   25d20:	add	r1, pc, r1
   25d24:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25d28:	ldr	r0, [sp, #40]	; 0x28
   25d2c:	cmp	r0, #0
   25d30:	beq	25d38 <__flatcc_fb_gen_c_json_parser@@Base+0x718>
   25d34:	bl	13fa4 <free@plt>
   25d38:	mov	r0, r5
   25d3c:	bl	23730 <__flatcc_fb_gen_c_verifier@@Base+0x2324>
   25d40:	ldr	r3, [r4, #208]	; 0xd0
   25d44:	ldr	r6, [r3, #52]	; 0x34
   25d48:	cmp	r6, #0
   25d4c:	beq	25f30 <__flatcc_fb_gen_c_json_parser@@Base+0x910>
   25d50:	ldrh	r7, [r6, #8]
   25d54:	cmp	r7, #0
   25d58:	beq	26e0c <__flatcc_fb_gen_c_json_parser@@Base+0x17ec>
   25d5c:	cmp	r7, #1
   25d60:	bne	25f30 <__flatcc_fb_gen_c_json_parser@@Base+0x910>
   25d64:	mov	r2, #220	; 0xdc
   25d68:	mov	r1, #0
   25d6c:	mov	r0, r5
   25d70:	bl	1407c <memset@plt>
   25d74:	mov	r2, r5
   25d78:	mov	r1, r6
   25d7c:	ldr	r0, [r6, #12]
   25d80:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   25d84:	ldr	r1, [pc, #2332]	; 266a8 <__flatcc_fb_gen_c_json_parser@@Base+0x1088>
   25d88:	mov	r0, r4
   25d8c:	ldr	r3, [r4, #208]	; 0xd0
   25d90:	add	r1, pc, r1
   25d94:	ldr	r2, [r3, #160]	; 0xa0
   25d98:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25d9c:	ldr	r3, [r4, #220]	; 0xdc
   25da0:	mov	r0, r4
   25da4:	ldr	r1, [pc, #2304]	; 266ac <__flatcc_fb_gen_c_json_parser@@Base+0x108c>
   25da8:	add	r3, r3, #2
   25dac:	add	r1, pc, r1
   25db0:	str	r3, [r4, #220]	; 0xdc
   25db4:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25db8:	ldr	r3, [r4, #220]	; 0xdc
   25dbc:	cmp	r3, #0
   25dc0:	beq	2743c <__flatcc_fb_gen_c_json_parser@@Base+0x1e1c>
   25dc4:	cmp	r3, #1
   25dc8:	moveq	r3, #0
   25dcc:	streq	r3, [r4, #220]	; 0xdc
   25dd0:	beq	2743c <__flatcc_fb_gen_c_json_parser@@Base+0x1e1c>
   25dd4:	ldr	r1, [pc, #2260]	; 266b0 <__flatcc_fb_gen_c_json_parser@@Base+0x1090>
   25dd8:	sub	r3, r3, #2
   25ddc:	mov	r0, r4
   25de0:	str	r3, [r4, #220]	; 0xdc
   25de4:	add	r1, pc, r1
   25de8:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25dec:	ldr	r3, [r4, #220]	; 0xdc
   25df0:	mov	r0, r4
   25df4:	ldr	r1, [pc, #2232]	; 266b4 <__flatcc_fb_gen_c_json_parser@@Base+0x1094>
   25df8:	add	r3, r3, #1
   25dfc:	add	r1, pc, r1
   25e00:	str	r3, [r4, #220]	; 0xdc
   25e04:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25e08:	ldr	r1, [pc, #2216]	; 266b8 <__flatcc_fb_gen_c_json_parser@@Base+0x1098>
   25e0c:	mov	r0, r4
   25e10:	add	r1, pc, r1
   25e14:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25e18:	ldr	r1, [pc, #2204]	; 266bc <__flatcc_fb_gen_c_json_parser@@Base+0x109c>
   25e1c:	mov	r0, r4
   25e20:	add	r1, pc, r1
   25e24:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25e28:	ldr	r1, [pc, #2192]	; 266c0 <__flatcc_fb_gen_c_json_parser@@Base+0x10a0>
   25e2c:	mov	r0, r4
   25e30:	add	r1, pc, r1
   25e34:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25e38:	ldr	r1, [pc, #2180]	; 266c4 <__flatcc_fb_gen_c_json_parser@@Base+0x10a4>
   25e3c:	mov	r0, r4
   25e40:	add	r1, pc, r1
   25e44:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25e48:	ldr	r2, [r4, #208]	; 0xd0
   25e4c:	ldrh	r3, [r2, #16]
   25e50:	cmp	r3, #2
   25e54:	beq	26ff4 <__flatcc_fb_gen_c_json_parser@@Base+0x19d4>
   25e58:	ldr	r1, [pc, #2152]	; 266c8 <__flatcc_fb_gen_c_json_parser@@Base+0x10a8>
   25e5c:	mov	r0, r4
   25e60:	add	r1, pc, r1
   25e64:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25e68:	ldr	r1, [pc, #2140]	; 266cc <__flatcc_fb_gen_c_json_parser@@Base+0x10ac>
   25e6c:	mov	r2, r5
   25e70:	mov	r0, r4
   25e74:	add	r1, pc, r1
   25e78:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25e7c:	ldr	r1, [pc, #2124]	; 266d0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b0>
   25e80:	mov	r0, r4
   25e84:	add	r1, pc, r1
   25e88:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25e8c:	ldr	r3, [r4, #220]	; 0xdc
   25e90:	mov	r0, r4
   25e94:	ldr	r1, [pc, #2104]	; 266d4 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   25e98:	add	r3, r3, #1
   25e9c:	add	r1, pc, r1
   25ea0:	str	r3, [r4, #220]	; 0xdc
   25ea4:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25ea8:	ldr	r3, [r4, #220]	; 0xdc
   25eac:	cmp	r3, #0
   25eb0:	beq	274f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1ed0>
   25eb4:	ldr	r5, [pc, #2076]	; 266d8 <__flatcc_fb_gen_c_json_parser@@Base+0x10b8>
   25eb8:	sub	r3, r3, #1
   25ebc:	mov	r0, r4
   25ec0:	str	r3, [r4, #220]	; 0xdc
   25ec4:	add	r5, pc, r5
   25ec8:	mov	r1, r5
   25ecc:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25ed0:	ldr	r1, [pc, #2052]	; 266dc <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   25ed4:	mov	r0, r4
   25ed8:	add	r1, pc, r1
   25edc:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25ee0:	ldr	r1, [pc, #2040]	; 266e0 <__flatcc_fb_gen_c_json_parser@@Base+0x10c0>
   25ee4:	mov	r0, r4
   25ee8:	add	r1, pc, r1
   25eec:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25ef0:	ldr	r1, [pc, #2028]	; 266e4 <__flatcc_fb_gen_c_json_parser@@Base+0x10c4>
   25ef4:	mov	r0, r4
   25ef8:	add	r1, pc, r1
   25efc:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25f00:	ldr	r3, [r4, #220]	; 0xdc
   25f04:	cmp	r3, #0
   25f08:	beq	274a8 <__flatcc_fb_gen_c_json_parser@@Base+0x1e88>
   25f0c:	sub	r3, r3, #1
   25f10:	mov	r1, r5
   25f14:	mov	r0, r4
   25f18:	str	r3, [r4, #220]	; 0xdc
   25f1c:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25f20:	ldr	r1, [pc, #1984]	; 266e8 <__flatcc_fb_gen_c_json_parser@@Base+0x10c8>
   25f24:	mov	r0, r4
   25f28:	add	r1, pc, r1
   25f2c:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25f30:	ldr	r3, [r4, #212]	; 0xd4
   25f34:	ldr	r3, [r3, #140]	; 0x8c
   25f38:	cmp	r3, #0
   25f3c:	bne	26df0 <__flatcc_fb_gen_c_json_parser@@Base+0x17d0>
   25f40:	ldr	r3, [r4, #208]	; 0xd0
   25f44:	mov	r0, r4
   25f48:	ldr	r1, [pc, #1948]	; 266ec <__flatcc_fb_gen_c_json_parser@@Base+0x10cc>
   25f4c:	ldr	r2, [r3, #164]	; 0xa4
   25f50:	add	r1, pc, r1
   25f54:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   25f58:	mov	r0, #0
   25f5c:	add	sp, sp, #292	; 0x124
   25f60:	ldrd	r4, [sp]
   25f64:	ldrd	r6, [sp, #8]
   25f68:	ldrd	r8, [sp, #16]
   25f6c:	ldrd	sl, [sp, #24]
   25f70:	add	sp, sp, #32
   25f74:	pop	{pc}		; (ldr pc, [sp], #4)
   25f78:	mov	r3, #0
   25f7c:	str	r3, [r7]
   25f80:	str	r3, [r7, #4]
   25f84:	str	r3, [r7, #8]
   25f88:	str	r3, [r7, #12]
   25f8c:	str	r3, [r7, #16]
   25f90:	str	r3, [r7, #20]
   25f94:	str	r3, [r7, #24]
   25f98:	ldrh	r3, [r6, #8]
   25f9c:	cmp	r3, #1
   25fa0:	bne	2727c <__flatcc_fb_gen_c_json_parser@@Base+0x1c5c>
   25fa4:	add	r1, sp, #36	; 0x24
   25fa8:	ldr	r0, [r6, #20]
   25fac:	bl	24ed8 <__flatcc_fb_gen_c_verifier@@Base+0x3acc>
   25fb0:	cmp	r0, #0
   25fb4:	str	r0, [sp, #40]	; 0x28
   25fb8:	beq	26c94 <__flatcc_fb_gen_c_json_parser@@Base+0x1674>
   25fbc:	ldr	ip, [pc, #1836]	; 266f0 <__flatcc_fb_gen_c_json_parser@@Base+0x10d0>
   25fc0:	mov	lr, #1
   25fc4:	mov	r2, #220	; 0xdc
   25fc8:	mov	r1, #0
   25fcc:	mov	r0, r5
   25fd0:	str	r6, [sp, #52]	; 0x34
   25fd4:	ldr	r3, [pc, #1816]	; 266f4 <__flatcc_fb_gen_c_json_parser@@Base+0x10d4>
   25fd8:	str	lr, [sp, #56]	; 0x38
   25fdc:	add	ip, pc, ip
   25fe0:	add	r3, pc, r3
   25fe4:	str	ip, [sp, #44]	; 0x2c
   25fe8:	str	r3, [sp, #48]	; 0x30
   25fec:	bl	1407c <memset@plt>
   25ff0:	mov	r2, r5
   25ff4:	mov	r1, r6
   25ff8:	ldr	r0, [r6, #12]
   25ffc:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   26000:	ldr	r1, [pc, #1776]	; 266f8 <__flatcc_fb_gen_c_json_parser@@Base+0x10d8>
   26004:	mov	r2, r5
   26008:	mov	r0, r4
   2600c:	add	r1, pc, r1
   26010:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26014:	ldr	r1, [pc, #1760]	; 266fc <__flatcc_fb_gen_c_json_parser@@Base+0x10dc>
   26018:	mov	r0, r4
   2601c:	add	r1, pc, r1
   26020:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26024:	ldr	r3, [r4, #220]	; 0xdc
   26028:	mov	r0, r4
   2602c:	ldr	r1, [pc, #1740]	; 26700 <__flatcc_fb_gen_c_json_parser@@Base+0x10e0>
   26030:	add	r3, r3, #1
   26034:	add	r1, pc, r1
   26038:	str	r3, [r4, #220]	; 0xdc
   2603c:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26040:	ldr	r3, [sp, #36]	; 0x24
   26044:	cmp	r3, #0
   26048:	ble	2608c <__flatcc_fb_gen_c_json_parser@@Base+0xa6c>
   2604c:	ldr	r1, [pc, #1712]	; 26704 <__flatcc_fb_gen_c_json_parser@@Base+0x10e4>
   26050:	mov	r0, r4
   26054:	add	r1, pc, r1
   26058:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   2605c:	ldr	r1, [pc, #1700]	; 26708 <__flatcc_fb_gen_c_json_parser@@Base+0x10e8>
   26060:	mov	r0, r4
   26064:	add	r1, pc, r1
   26068:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   2606c:	ldr	r1, [pc, #1688]	; 2670c <__flatcc_fb_gen_c_json_parser@@Base+0x10ec>
   26070:	mov	r0, r4
   26074:	add	r1, pc, r1
   26078:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   2607c:	ldr	r1, [pc, #1676]	; 26710 <__flatcc_fb_gen_c_json_parser@@Base+0x10f0>
   26080:	mov	r0, r4
   26084:	add	r1, pc, r1
   26088:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   2608c:	ldr	r1, [pc, #1664]	; 26714 <__flatcc_fb_gen_c_json_parser@@Base+0x10f4>
   26090:	mov	r0, r4
   26094:	add	r1, pc, r1
   26098:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   2609c:	ldr	r1, [pc, #1652]	; 26718 <__flatcc_fb_gen_c_json_parser@@Base+0x10f8>
   260a0:	mov	r0, r4
   260a4:	add	r1, pc, r1
   260a8:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   260ac:	ldr	r1, [pc, #1640]	; 2671c <__flatcc_fb_gen_c_json_parser@@Base+0x10fc>
   260b0:	mov	r0, r4
   260b4:	add	r1, pc, r1
   260b8:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   260bc:	ldr	r3, [r4, #220]	; 0xdc
   260c0:	ldr	r2, [sp, #36]	; 0x24
   260c4:	add	r3, r3, #1
   260c8:	cmp	r2, #0
   260cc:	str	r3, [r4, #220]	; 0xdc
   260d0:	bne	26c50 <__flatcc_fb_gen_c_json_parser@@Base+0x1630>
   260d4:	ldr	r1, [pc, #1604]	; 26720 <__flatcc_fb_gen_c_json_parser@@Base+0x1100>
   260d8:	mov	r0, r4
   260dc:	add	r1, pc, r1
   260e0:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   260e4:	ldr	r1, [pc, #1592]	; 26724 <__flatcc_fb_gen_c_json_parser@@Base+0x1104>
   260e8:	mov	r0, r4
   260ec:	add	r1, pc, r1
   260f0:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   260f4:	ldr	r1, [pc, #1580]	; 26728 <__flatcc_fb_gen_c_json_parser@@Base+0x1108>
   260f8:	mov	r0, r4
   260fc:	add	r1, pc, r1
   26100:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26104:	ldr	r3, [r4, #220]	; 0xdc
   26108:	cmp	r3, #0
   2610c:	beq	27234 <__flatcc_fb_gen_c_json_parser@@Base+0x1c14>
   26110:	ldr	r1, [pc, #1556]	; 2672c <__flatcc_fb_gen_c_json_parser@@Base+0x110c>
   26114:	sub	r3, r3, #1
   26118:	mov	r0, r4
   2611c:	str	r3, [r4, #220]	; 0xdc
   26120:	add	r1, pc, r1
   26124:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26128:	ldr	r1, [pc, #1536]	; 26730 <__flatcc_fb_gen_c_json_parser@@Base+0x1110>
   2612c:	mov	r0, r4
   26130:	add	r1, pc, r1
   26134:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26138:	ldr	r3, [sp, #36]	; 0x24
   2613c:	cmp	r3, #0
   26140:	ble	2617c <__flatcc_fb_gen_c_json_parser@@Base+0xb5c>
   26144:	ldr	r1, [pc, #1512]	; 26734 <__flatcc_fb_gen_c_json_parser@@Base+0x1114>
   26148:	mov	r2, #0
   2614c:	mov	r0, r4
   26150:	ldr	r3, [r4, #220]	; 0xdc
   26154:	str	r2, [r4, #220]	; 0xdc
   26158:	add	r1, pc, r1
   2615c:	str	r3, [r4, #228]	; 0xe4
   26160:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26164:	ldr	r1, [pc, #1484]	; 26738 <__flatcc_fb_gen_c_json_parser@@Base+0x1118>
   26168:	mov	r0, r4
   2616c:	ldr	r3, [r4, #228]	; 0xe4
   26170:	add	r1, pc, r1
   26174:	str	r3, [r4, #220]	; 0xdc
   26178:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   2617c:	ldr	r3, [r4, #220]	; 0xdc
   26180:	cmp	r3, #0
   26184:	beq	27210 <__flatcc_fb_gen_c_json_parser@@Base+0x1bf0>
   26188:	ldr	r1, [pc, #1452]	; 2673c <__flatcc_fb_gen_c_json_parser@@Base+0x111c>
   2618c:	sub	r3, r3, #1
   26190:	mov	r0, r4
   26194:	str	r3, [r4, #220]	; 0xdc
   26198:	add	r1, pc, r1
   2619c:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   261a0:	ldr	r1, [pc, #1432]	; 26740 <__flatcc_fb_gen_c_json_parser@@Base+0x1120>
   261a4:	mov	r0, r4
   261a8:	add	r1, pc, r1
   261ac:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   261b0:	ldr	r0, [sp, #40]	; 0x28
   261b4:	cmp	r0, #0
   261b8:	beq	261c0 <__flatcc_fb_gen_c_json_parser@@Base+0xba0>
   261bc:	bl	13fa4 <free@plt>
   261c0:	ldrh	r3, [r6, #8]
   261c4:	cmp	r3, #1
   261c8:	bne	271ec <__flatcc_fb_gen_c_json_parser@@Base+0x1bcc>
   261cc:	mov	r2, #220	; 0xdc
   261d0:	mov	r1, #0
   261d4:	ldr	r9, [pc, #1384]	; 26744 <__flatcc_fb_gen_c_json_parser@@Base+0x1124>
   261d8:	mov	r0, r5
   261dc:	bl	1407c <memset@plt>
   261e0:	mov	r2, r5
   261e4:	mov	r1, r6
   261e8:	ldr	r0, [r6, #12]
   261ec:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   261f0:	ldr	r1, [pc, #1360]	; 26748 <__flatcc_fb_gen_c_json_parser@@Base+0x1128>
   261f4:	mov	r2, r5
   261f8:	mov	r0, r4
   261fc:	add	r9, pc, r9
   26200:	ldr	r8, [pc, #1348]	; 2674c <__flatcc_fb_gen_c_json_parser@@Base+0x112c>
   26204:	add	r1, pc, r1
   26208:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   2620c:	mov	r1, r9
   26210:	mov	r0, r4
   26214:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26218:	ldr	r3, [r4, #220]	; 0xdc
   2621c:	mov	r0, r4
   26220:	add	r8, pc, r8
   26224:	ldr	r1, [pc, #1316]	; 26750 <__flatcc_fb_gen_c_json_parser@@Base+0x1130>
   26228:	add	r3, r3, #1
   2622c:	add	r1, pc, r1
   26230:	str	r3, [r4, #220]	; 0xdc
   26234:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26238:	mov	r1, r8
   2623c:	mov	r0, r4
   26240:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26244:	ldr	r1, [pc, #1288]	; 26754 <__flatcc_fb_gen_c_json_parser@@Base+0x1134>
   26248:	mov	r0, r4
   2624c:	add	r1, pc, r1
   26250:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26254:	ldrh	ip, [r6, #104]	; 0x68
   26258:	mov	r0, r4
   2625c:	ldr	r1, [pc, #1268]	; 26758 <__flatcc_fb_gen_c_json_parser@@Base+0x1138>
   26260:	ldrd	r2, [r6, #112]	; 0x70
   26264:	str	ip, [sp]
   26268:	add	r1, pc, r1
   2626c:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26270:	ldr	r1, [pc, #1252]	; 2675c <__flatcc_fb_gen_c_json_parser@@Base+0x113c>
   26274:	mov	r2, r5
   26278:	mov	r0, r4
   2627c:	add	r1, pc, r1
   26280:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26284:	ldr	r1, [pc, #1236]	; 26760 <__flatcc_fb_gen_c_json_parser@@Base+0x1140>
   26288:	mov	r0, r4
   2628c:	add	r1, pc, r1
   26290:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26294:	ldr	r1, [pc, #1224]	; 26764 <__flatcc_fb_gen_c_json_parser@@Base+0x1144>
   26298:	mov	r0, r4
   2629c:	add	r1, pc, r1
   262a0:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   262a4:	ldr	r1, [pc, #1212]	; 26768 <__flatcc_fb_gen_c_json_parser@@Base+0x1148>
   262a8:	mov	r2, #0
   262ac:	mov	r0, r4
   262b0:	ldr	r3, [r4, #220]	; 0xdc
   262b4:	str	r2, [r4, #220]	; 0xdc
   262b8:	add	r1, pc, r1
   262bc:	str	r3, [r4, #228]	; 0xe4
   262c0:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   262c4:	ldr	r1, [pc, #1184]	; 2676c <__flatcc_fb_gen_c_json_parser@@Base+0x114c>
   262c8:	mov	r0, r4
   262cc:	ldr	r3, [r4, #228]	; 0xe4
   262d0:	add	r1, pc, r1
   262d4:	str	r3, [r4, #220]	; 0xdc
   262d8:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   262dc:	ldr	r2, [r4, #220]	; 0xdc
   262e0:	cmp	r2, #0
   262e4:	beq	27330 <__flatcc_fb_gen_c_json_parser@@Base+0x1d10>
   262e8:	ldr	sl, [pc, #1152]	; 26770 <__flatcc_fb_gen_c_json_parser@@Base+0x1150>
   262ec:	sub	r2, r2, #1
   262f0:	mov	r0, r4
   262f4:	str	r2, [r4, #220]	; 0xdc
   262f8:	add	sl, pc, sl
   262fc:	mov	r1, sl
   26300:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26304:	mov	r1, r8
   26308:	mov	r0, r4
   2630c:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26310:	ldr	r1, [pc, #1116]	; 26774 <__flatcc_fb_gen_c_json_parser@@Base+0x1154>
   26314:	mov	r2, r5
   26318:	mov	r0, r4
   2631c:	add	r1, pc, r1
   26320:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26324:	mov	r1, r9
   26328:	mov	r0, r4
   2632c:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26330:	ldr	ip, [r4, #220]	; 0xdc
   26334:	mov	r2, r5
   26338:	mov	r0, r4
   2633c:	ldr	r1, [pc, #1076]	; 26778 <__flatcc_fb_gen_c_json_parser@@Base+0x1158>
   26340:	add	ip, ip, #1
   26344:	add	r1, pc, r1
   26348:	str	ip, [r4, #220]	; 0xdc
   2634c:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26350:	ldr	r2, [r4, #220]	; 0xdc
   26354:	cmp	r2, #0
   26358:	beq	272c4 <__flatcc_fb_gen_c_json_parser@@Base+0x1ca4>
   2635c:	sub	r2, r2, #1
   26360:	mov	r1, sl
   26364:	mov	r0, r4
   26368:	str	r2, [r4, #220]	; 0xdc
   2636c:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26370:	mov	r1, r8
   26374:	mov	r0, r4
   26378:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   2637c:	b	259e0 <__flatcc_fb_gen_c_json_parser@@Base+0x3c0>
   26380:	mov	r1, r6
   26384:	mov	r0, r4
   26388:	bl	25090 <__flatcc_fb_gen_c_verifier@@Base+0x3c84>
   2638c:	b	259e0 <__flatcc_fb_gen_c_json_parser@@Base+0x3c0>
   26390:	mov	r3, #0
   26394:	str	r3, [r7]
   26398:	str	r3, [r7, #4]
   2639c:	str	r3, [r7, #8]
   263a0:	str	r3, [r7, #12]
   263a4:	str	r3, [r7, #16]
   263a8:	str	r3, [r7, #20]
   263ac:	str	r3, [r7, #24]
   263b0:	ldrh	r8, [r6, #8]
   263b4:	cmp	r8, r3
   263b8:	bne	272a0 <__flatcc_fb_gen_c_json_parser@@Base+0x1c80>
   263bc:	add	r1, sp, #36	; 0x24
   263c0:	ldr	r0, [r6, #20]
   263c4:	bl	24ed8 <__flatcc_fb_gen_c_verifier@@Base+0x3acc>
   263c8:	cmp	r0, #0
   263cc:	str	r0, [sp, #40]	; 0x28
   263d0:	beq	26da4 <__flatcc_fb_gen_c_json_parser@@Base+0x1784>
   263d4:	ldr	r1, [pc, #928]	; 2677c <__flatcc_fb_gen_c_json_parser@@Base+0x115c>
   263d8:	str	r6, [sp, #52]	; 0x34
   263dc:	ldr	r3, [pc, #924]	; 26780 <__flatcc_fb_gen_c_json_parser@@Base+0x1160>
   263e0:	str	r8, [sp, #56]	; 0x38
   263e4:	ldr	r2, [sp, #36]	; 0x24
   263e8:	add	r1, pc, r1
   263ec:	add	r3, pc, r3
   263f0:	str	r1, [sp, #44]	; 0x2c
   263f4:	str	r8, [sp, #60]	; 0x3c
   263f8:	cmp	r2, #0
   263fc:	str	r3, [sp, #48]	; 0x30
   26400:	ble	26428 <__flatcc_fb_gen_c_json_parser@@Base+0xe08>
   26404:	add	r2, r0, r2, lsl #4
   26408:	mov	r3, r8
   2640c:	ldr	r1, [r0, #12]
   26410:	add	r0, r0, #16
   26414:	cmp	r1, #0
   26418:	addne	r3, r3, #1
   2641c:	cmp	r2, r0
   26420:	bne	2640c <__flatcc_fb_gen_c_json_parser@@Base+0xdec>
   26424:	str	r3, [sp, #60]	; 0x3c
   26428:	mov	r2, #220	; 0xdc
   2642c:	mov	r1, #0
   26430:	mov	r0, r5
   26434:	bl	1407c <memset@plt>
   26438:	mov	r2, r5
   2643c:	mov	r1, r6
   26440:	ldr	r0, [r6, #12]
   26444:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   26448:	mov	r2, r5
   2644c:	mov	r1, fp
   26450:	mov	r0, r4
   26454:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26458:	mov	r0, r4
   2645c:	ldr	r1, [sp, #16]
   26460:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26464:	ldr	r3, [r4, #220]	; 0xdc
   26468:	mov	r0, r4
   2646c:	ldr	r1, [pc, #784]	; 26784 <__flatcc_fb_gen_c_json_parser@@Base+0x1164>
   26470:	add	r3, r3, #1
   26474:	add	r1, pc, r1
   26478:	str	r3, [r4, #220]	; 0xdc
   2647c:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26480:	ldr	r3, [sp, #36]	; 0x24
   26484:	cmp	r3, #0
   26488:	ble	264cc <__flatcc_fb_gen_c_json_parser@@Base+0xeac>
   2648c:	ldr	r1, [pc, #756]	; 26788 <__flatcc_fb_gen_c_json_parser@@Base+0x1168>
   26490:	mov	r0, r4
   26494:	add	r1, pc, r1
   26498:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   2649c:	ldr	r1, [pc, #744]	; 2678c <__flatcc_fb_gen_c_json_parser@@Base+0x116c>
   264a0:	mov	r0, r4
   264a4:	add	r1, pc, r1
   264a8:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   264ac:	ldr	r1, [pc, #732]	; 26790 <__flatcc_fb_gen_c_json_parser@@Base+0x1170>
   264b0:	mov	r0, r4
   264b4:	add	r1, pc, r1
   264b8:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   264bc:	ldr	r1, [pc, #720]	; 26794 <__flatcc_fb_gen_c_json_parser@@Base+0x1174>
   264c0:	mov	r0, r4
   264c4:	add	r1, pc, r1
   264c8:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   264cc:	ldr	r3, [sp, #60]	; 0x3c
   264d0:	cmp	r3, #0
   264d4:	bne	26d34 <__flatcc_fb_gen_c_json_parser@@Base+0x1714>
   264d8:	ldr	r1, [pc, #696]	; 26798 <__flatcc_fb_gen_c_json_parser@@Base+0x1178>
   264dc:	mov	r0, r4
   264e0:	add	r1, pc, r1
   264e4:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   264e8:	ldr	r1, [pc, #684]	; 2679c <__flatcc_fb_gen_c_json_parser@@Base+0x117c>
   264ec:	mov	r0, r4
   264f0:	add	r1, pc, r1
   264f4:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   264f8:	ldr	r1, [pc, #672]	; 267a0 <__flatcc_fb_gen_c_json_parser@@Base+0x1180>
   264fc:	mov	r0, r4
   26500:	ldrd	r2, [r6, #96]	; 0x60
   26504:	add	r1, pc, r1
   26508:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   2650c:	ldr	r2, [sp, #60]	; 0x3c
   26510:	cmp	r2, #0
   26514:	bne	26d1c <__flatcc_fb_gen_c_json_parser@@Base+0x16fc>
   26518:	ldr	r1, [pc, #644]	; 267a4 <__flatcc_fb_gen_c_json_parser@@Base+0x1184>
   2651c:	mov	r0, r4
   26520:	add	r1, pc, r1
   26524:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26528:	ldr	r1, [pc, #632]	; 267a8 <__flatcc_fb_gen_c_json_parser@@Base+0x1188>
   2652c:	mov	r0, r4
   26530:	add	r1, pc, r1
   26534:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26538:	ldr	r3, [r4, #220]	; 0xdc
   2653c:	mov	r0, r4
   26540:	ldr	r1, [pc, #612]	; 267ac <__flatcc_fb_gen_c_json_parser@@Base+0x118c>
   26544:	add	r3, r3, #1
   26548:	add	r1, pc, r1
   2654c:	str	r3, [r4, #220]	; 0xdc
   26550:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26554:	ldr	r3, [sp, #36]	; 0x24
   26558:	cmp	r3, #0
   2655c:	ble	26cf8 <__flatcc_fb_gen_c_json_parser@@Base+0x16d8>
   26560:	ldr	r1, [pc, #584]	; 267b0 <__flatcc_fb_gen_c_json_parser@@Base+0x1190>
   26564:	mov	r0, r4
   26568:	add	r1, pc, r1
   2656c:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26570:	ldr	r3, [sp, #36]	; 0x24
   26574:	mov	ip, #0
   26578:	mov	r1, r7
   2657c:	mov	r2, ip
   26580:	mov	r0, r4
   26584:	str	ip, [sp]
   26588:	sub	r3, r3, #1
   2658c:	bl	21dac <__flatcc_fb_gen_c_verifier@@Base+0x9a0>
   26590:	ldr	r1, [pc, #540]	; 267b4 <__flatcc_fb_gen_c_json_parser@@Base+0x1194>
   26594:	mov	r0, r4
   26598:	add	r1, pc, r1
   2659c:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   265a0:	ldr	r3, [r4, #220]	; 0xdc
   265a4:	cmp	r3, #0
   265a8:	beq	27258 <__flatcc_fb_gen_c_json_parser@@Base+0x1c38>
   265ac:	ldr	r1, [pc, #516]	; 267b8 <__flatcc_fb_gen_c_json_parser@@Base+0x1198>
   265b0:	sub	r3, r3, #1
   265b4:	mov	r0, r4
   265b8:	str	r3, [r4, #220]	; 0xdc
   265bc:	add	r1, pc, r1
   265c0:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   265c4:	ldr	r1, [pc, #496]	; 267bc <__flatcc_fb_gen_c_json_parser@@Base+0x119c>
   265c8:	mov	r0, r4
   265cc:	add	r1, pc, r1
   265d0:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   265d4:	ldr	r2, [sp, #36]	; 0x24
   265d8:	cmp	r2, #0
   265dc:	ble	26b2c <__flatcc_fb_gen_c_json_parser@@Base+0x150c>
   265e0:	mov	r9, #1
   265e4:	mov	r8, #0
   265e8:	str	fp, [sp, #12]
   265ec:	b	26a30 <__flatcc_fb_gen_c_json_parser@@Base+0x1410>
   265f0:	andeq	r7, r4, r4, asr #19
   265f4:	andeq	r0, r3, r0, ror r5
   265f8:	andeq	r6, r2, r0, asr r5
   265fc:	andeq	r0, r3, r0, ror #10
   26600:	andeq	r0, r3, ip, asr r5
   26604:	muleq	r3, r0, r5
   26608:	andeq	r0, r3, r4, lsr #11
   2660c:	andeq	ip, r1, r4, lsl r4
   26610:	ldrdeq	r6, [r2], -r0
   26614:			; <UNDEFINED> instruction: 0x000303b8
   26618:	andeq	pc, r2, r0, lsr #5
   2661c:	andeq	r0, r3, r0, lsl #18
   26620:	strdeq	r0, [r3], -r4
   26624:	andeq	r0, r3, r0, ror r7
   26628:	andeq	r0, r3, r4, asr #6
   2662c:	andeq	pc, r2, r8, lsl r2	; <UNPREDICTABLE>
   26630:			; <UNDEFINED> instruction: 0xffffd164
   26634:	andeq	r0, r3, r8, lsr #17
   26638:	andeq	pc, r2, r4, lsr #3
   2663c:	andeq	r6, r2, r8, asr #6
   26640:	andeq	r1, r3, ip, lsl #22
   26644:	andeq	r0, r3, r0, lsr ip
   26648:	andeq	r0, r3, r4, lsr lr
   2664c:	andeq	r0, r3, ip, ror #27
   26650:	andeq	r0, r3, r0, asr #12
   26654:	andeq	r0, r3, ip, lsr #13
   26658:	andeq	lr, r2, r4, ror #22
   2665c:	andeq	lr, r2, ip, lsr #27
   26660:	andeq	lr, r2, r4, lsl lr
   26664:			; <UNDEFINED> instruction: 0xffffd934
   26668:			; <UNDEFINED> instruction: 0xffffd830
   2666c:			; <UNDEFINED> instruction: 0xffffd740
   26670:			; <UNDEFINED> instruction: 0xffffd728
   26674:			; <UNDEFINED> instruction: 0xffffdd88
   26678:			; <UNDEFINED> instruction: 0xffffbcfc
   2667c:			; <UNDEFINED> instruction: 0x000304b0
   26680:	andeq	pc, r2, r4, lsr r2	; <UNPREDICTABLE>
   26684:	andeq	r1, r3, r4, asr #14
   26688:	andeq	pc, r2, r4, ror #4
   2668c:	andeq	pc, r2, r4, ror r2	; <UNPREDICTABLE>
   26690:	andeq	pc, r2, r8, ror r2	; <UNPREDICTABLE>
   26694:	andeq	r5, r2, r4, lsl #30
   26698:	andeq	lr, r2, r8, ror #23
   2669c:	andeq	pc, r2, ip, lsr r0	; <UNPREDICTABLE>
   266a0:	andeq	lr, r2, r0, lsr #21
   266a4:	muleq	r2, r8, lr
   266a8:	andeq	r0, r3, r0, ror r0
   266ac:	andeq	r0, r3, r8, ror #21
   266b0:	andeq	r1, r3, r0, asr #11
   266b4:	andeq	r0, r3, r0, lsl #25
   266b8:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   266bc:	muleq	r2, r8, sp
   266c0:	andeq	r0, r3, r8, ror #24
   266c4:	ldrdeq	r0, [r3], -r8
   266c8:	andeq	r0, r3, r4, lsr fp
   266cc:	andeq	r0, r3, r0, asr #24
   266d0:	andeq	r0, r3, ip, ror fp
   266d4:	andeq	r0, r3, r8, ror fp
   266d8:	andeq	lr, r2, ip, ror #17
   266dc:	andeq	r0, r3, r0, asr fp
   266e0:	andeq	r0, r3, r4, ror fp
   266e4:	andeq	r0, r3, r8, ror fp
   266e8:	muleq	r2, r0, ip
   266ec:	andeq	r0, r3, r0, lsr #23
   266f0:			; <UNDEFINED> instruction: 0xffffecf8
   266f4:			; <UNDEFINED> instruction: 0xffffb900
   266f8:	andeq	r0, r3, r4, lsr #2
   266fc:	andeq	r1, r3, r8, lsl #7
   26700:	andeq	r0, r3, ip, ror r1
   26704:	andeq	r0, r3, r8, ror #2
   26708:	andeq	r0, r3, r4, ror r1
   2670c:	muleq	r2, r4, lr
   26710:	muleq	r2, r8, lr
   26714:	andeq	r5, r2, r4, lsr #22
   26718:	andeq	r0, r3, r0, asr #2
   2671c:	andeq	pc, r2, ip, lsr #2
   26720:	andeq	r0, r3, r8, asr #2
   26724:	andeq	lr, r2, r0, lsr #11
   26728:	andeq	r0, r3, r4, ror r1
   2672c:	muleq	r2, r0, r6
   26730:	strdeq	lr, [r2], -r8
   26734:	andeq	r0, r3, r4, asr r1
   26738:	ldrdeq	lr, [r2], -r4
   2673c:	andeq	lr, r2, r8, lsl r6
   26740:	andeq	r5, r2, r0, lsl sl
   26744:	andeq	r1, r3, r8, lsr #3
   26748:	strheq	r0, [r3], -r0	; <UNPREDICTABLE>
   2674c:	muleq	r2, r8, r9
   26750:	andeq	pc, r2, ip, lsr #31
   26754:	andeq	lr, r2, r4, asr r8
   26758:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   2675c:	andeq	pc, r2, r8, lsr r1	; <UNPREDICTABLE>
   26760:	strdeq	r0, [r3], -r8
   26764:	andeq	lr, r2, ip, lsl #21
   26768:	strdeq	pc, [r2], -r4
   2676c:	andeq	lr, r2, r4, ror sl
   26770:			; <UNDEFINED> instruction: 0x0002e4b8
   26774:	strheq	r0, [r3], -ip
   26778:	andeq	r0, r3, r8, lsr #2
   2677c:			; <UNDEFINED> instruction: 0xffffe8ec
   26780:			; <UNDEFINED> instruction: 0xffffb4f4
   26784:	andeq	pc, r2, ip, lsr sp	; <UNPREDICTABLE>
   26788:	andeq	pc, r2, r4, asr #26
   2678c:	strheq	r0, [r3], -r0	; <UNPREDICTABLE>
   26790:	andeq	lr, r2, r4, asr sl
   26794:	andeq	lr, r2, r8, asr sl
   26798:	ldrdeq	r5, [r2], -r8
   2679c:			; <UNDEFINED> instruction: 0x0002e5b0
   267a0:	andeq	r0, r3, r8, lsl #1
   267a4:	andeq	pc, r2, r4, asr #25
   267a8:			; <UNDEFINED> instruction: 0x0002ecb0
   267ac:	strdeq	pc, [r2], -r0
   267b0:	andeq	lr, r2, r4, asr #6
   267b4:	andeq	r0, r3, ip, lsr #1
   267b8:	strdeq	lr, [r2], -r4
   267bc:	strheq	r0, [r3], -r4
   267c0:	andeq	lr, r2, r0, ror sl
   267c4:	andeq	pc, r2, ip, lsr #24
   267c8:	andeq	lr, r2, ip, lsr #28
   267cc:	andeq	sp, r2, ip, lsl #25
   267d0:	andeq	pc, r2, r4, ror ip	; <UNPREDICTABLE>
   267d4:	ldrdeq	lr, [r2], -r8
   267d8:	andeq	pc, r2, r0, asr #14
   267dc:	andeq	lr, r2, r0, asr #3
   267e0:	andeq	sp, r2, r0, lsl #24
   267e4:	andeq	r5, r2, r0
   267e8:	andeq	pc, r2, r0, lsl #16
   267ec:			; <UNDEFINED> instruction: 0x000307bc
   267f0:	strdeq	pc, [r2], -r4
   267f4:	andeq	pc, r2, r0, ror #11
   267f8:	andeq	sp, r2, r4, asr #24
   267fc:	andeq	lr, r2, ip, ror #2
   26800:	andeq	sp, r2, r8, ror sl
   26804:	andeq	fp, r1, r0, asr #2
   26808:	andeq	sp, r2, r0, lsl #16
   2680c:	andeq	r3, r2, r4, asr #12
   26810:	andeq	pc, r2, r8, lsr #18
   26814:	andeq	sp, r2, ip, ror r9
   26818:	andeq	pc, r2, r4, lsr #17
   2681c:	andeq	pc, r2, ip, lsr r8	; <UNPREDICTABLE>
   26820:	andeq	pc, r2, r0, lsr #20
   26824:	strdeq	pc, [r2], -r4
   26828:	andeq	lr, r2, r4, asr r1
   2682c:	andeq	sp, r2, r8, lsl sl
   26830:			; <UNDEFINED> instruction: 0xffffdf10
   26834:			; <UNDEFINED> instruction: 0xffffab18
   26838:	andeq	ip, r1, ip, asr r5
   2683c:	andeq	r2, r2, r4, lsr #7
   26840:	andeq	lr, r2, r8, asr #31
   26844:	andeq	pc, r2, r0, asr #20
   26848:	andeq	r0, r3, ip, lsl r5
   2684c:	andeq	pc, r2, r0, lsr #20
   26850:	andeq	pc, r2, ip, lsr #20
   26854:	strdeq	r4, [r2], -r4	; <UNPREDICTABLE>
   26858:	andeq	pc, r2, r8, lsr #20
   2685c:	andeq	pc, r2, r4, lsr sl	; <UNPREDICTABLE>
   26860:	muleq	r2, r0, sl
   26864:			; <UNDEFINED> instruction: 0x0002fab4
   26868:	ldrdeq	pc, [r2], -r8
   2686c:	ldrdeq	pc, [r2], -r4
   26870:	andeq	sp, r2, r8, asr #16
   26874:	andeq	pc, r2, ip, lsr #21
   26878:	ldrdeq	pc, [r2], -r0
   2687c:	ldrdeq	pc, [r2], -r4
   26880:	andeq	r4, r2, ip, ror #23
   26884:	andeq	pc, r2, ip, ror #18
   26888:	andeq	pc, r2, r0, asr r9	; <UNPREDICTABLE>
   2688c:	andeq	lr, r2, ip, asr ip
   26890:	andeq	lr, r2, r0, asr ip
   26894:	muleq	r2, r8, ip
   26898:	andeq	lr, r2, ip, lsl #25
   2689c:	andeq	lr, r2, r0, asr #25
   268a0:	andeq	lr, r2, r8, ror #25
   268a4:	andeq	lr, r2, r0, lsl #26
   268a8:	andeq	lr, r2, r8, lsr sp
   268ac:	andeq	sp, r2, r0, ror #12
   268b0:	andeq	lr, r2, r4, asr sp
   268b4:	andeq	lr, r2, r4, lsl #27
   268b8:	andeq	sp, r2, r8, lsl #12
   268bc:	andeq	sp, r2, r8, ror #25
   268c0:	andeq	sl, r1, r0, asr #25
   268c4:	andeq	sp, r2, r0, lsl #7
   268c8:	andeq	r3, r2, r4, asr #3
   268cc:	andeq	sp, r2, r8, asr r3
   268d0:	andeq	sp, r2, r0, lsr #11
   268d4:	andeq	sp, r2, r8, lsl #12
   268d8:	andeq	sp, r2, r4, lsr r3
   268dc:	andeq	sp, r2, ip, ror r5
   268e0:	andeq	sp, r2, r4, ror #11
   268e4:	andeq	sp, r2, r0, lsl r3
   268e8:	andeq	sp, r2, r8, asr r5
   268ec:	andeq	sp, r2, r0, asr #11
   268f0:	andeq	sp, r2, ip, ror #5
   268f4:	andeq	sp, r2, r4, lsr r5
   268f8:	andeq	fp, r1, r0, lsr sl
   268fc:	andeq	sp, r2, r8, asr #5
   26900:	andeq	sp, r2, r0, lsl r5
   26904:	andeq	sp, r2, r8, ror r5
   26908:	andeq	sp, r2, r4, lsr #5
   2690c:	andeq	sp, r2, ip, ror #9
   26910:	andeq	sp, r2, r4, asr r5
   26914:	andeq	sp, r2, r0, lsl #5
   26918:	andeq	sp, r2, r8, asr #9
   2691c:	andeq	sp, r2, r0, lsr r5
   26920:	andeq	sp, r2, ip, asr r2
   26924:	andeq	sp, r2, r4, lsr #9
   26928:	andeq	fp, r1, r0, lsr #19
   2692c:	andeq	sp, r2, r8, lsr r2
   26930:	andeq	sp, r2, r0, lsl #9
   26934:	andeq	sl, r1, r0, lsl sp
   26938:	andeq	sp, r2, r4, lsl r2
   2693c:	andeq	sp, r2, ip, asr r4
   26940:	andeq	sp, r2, r4, asr #9
   26944:	strdeq	sp, [r2], -r0
   26948:	andeq	sp, r2, r8, lsr r4
   2694c:	andeq	sp, r2, r0, lsr #9
   26950:	andeq	sp, r2, ip, asr #3
   26954:	andeq	sp, r2, r4, lsl r4
   26958:	andeq	sp, r2, ip, ror r4
   2695c:	andeq	sp, r2, r8, lsr #3
   26960:	strdeq	sp, [r2], -r0
   26964:	andeq	sp, r2, r8, asr r4
   26968:	andeq	sp, r2, r4, lsl #3
   2696c:	andeq	sp, r2, ip, asr #7
   26970:	andeq	sp, r2, r4, lsr r4
   26974:	andeq	sp, r2, r0, ror #2
   26978:	andeq	sp, r2, r8, lsr #7
   2697c:	andeq	sp, r2, r0, lsl r4
   26980:	andeq	r0, r0, r0, lsr #1
   26984:	andeq	sp, r2, r0, ror sl
   26988:	andeq	sp, r2, ip, ror r3
   2698c:	andeq	sl, r1, r4, asr #20
   26990:	andeq	sp, r2, r4, lsl #2
   26994:	andeq	r2, r2, r8, asr #30
   26998:	andeq	sp, r2, r4, ror #1
   2699c:	andeq	sp, r2, ip, lsr #6
   269a0:	muleq	r2, r4, r3
   269a4:	andeq	sp, r2, r0, asr #1
   269a8:	andeq	sp, r2, r8, lsl #6
   269ac:	andeq	sp, r2, r0, ror r3
   269b0:	muleq	r2, ip, r0
   269b4:	andeq	sp, r2, r4, ror #5
   269b8:	andeq	sp, r2, ip, asr #6
   269bc:	andeq	sp, r2, r8, ror r0
   269c0:	andeq	sp, r2, r0, asr #5
   269c4:	andeq	sp, r2, r8, lsr #6
   269c8:	andeq	sp, r2, r4, asr r0
   269cc:	muleq	r2, ip, r2
   269d0:	andeq	sp, r2, r4, lsl #6
   269d4:	andeq	sp, r2, r0, lsr r0
   269d8:	andeq	sp, r2, r8, ror r2
   269dc:	andeq	sp, r2, r0, ror #5
   269e0:	andeq	sp, r2, ip
   269e4:	andeq	sp, r2, r4, asr r2
   269e8:			; <UNDEFINED> instruction: 0x0002d2bc
   269ec:	andeq	ip, r2, r8, ror #31
   269f0:	andeq	sp, r2, r0, lsr r2
   269f4:	muleq	r2, r8, r2
   269f8:	andeq	ip, r2, r4, asr #31
   269fc:	andeq	sp, r2, ip, lsl #4
   26a00:	andeq	sp, r2, r4, ror r2
   26a04:	mov	r0, r4
   26a08:	ldr	r1, [sp, #24]
   26a0c:	mov	r9, #0
   26a10:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26a14:	ldr	r3, [r4, #220]	; 0xdc
   26a18:	ldr	r2, [sp, #36]	; 0x24
   26a1c:	add	r3, r3, #1
   26a20:	str	r3, [r4, #220]	; 0xdc
   26a24:	add	r8, r8, #1
   26a28:	cmp	r8, r2
   26a2c:	bge	26aac <__flatcc_fb_gen_c_json_parser@@Base+0x148c>
   26a30:	ldr	r3, [sp, #40]	; 0x28
   26a34:	add	r3, r3, r8, lsl #4
   26a38:	ldr	r1, [r3, #8]
   26a3c:	ldrh	r0, [r1, #72]	; 0x48
   26a40:	ands	r3, r0, #4
   26a44:	bne	26a24 <__flatcc_fb_gen_c_json_parser@@Base+0x1404>
   26a48:	ldrh	ip, [r1, #24]
   26a4c:	sub	ip, ip, #14
   26a50:	cmp	ip, #1
   26a54:	bhi	26a6c <__flatcc_fb_gen_c_json_parser@@Base+0x144c>
   26a58:	ldr	r3, [r1, #16]
   26a5c:	ldrh	r3, [r3, #8]
   26a60:	sub	r3, r3, #4
   26a64:	clz	r3, r3
   26a68:	lsr	r3, r3, #5
   26a6c:	tst	r0, #256	; 0x100
   26a70:	beq	26a24 <__flatcc_fb_gen_c_json_parser@@Base+0x1404>
   26a74:	ldrd	r0, [r1, #96]	; 0x60
   26a78:	subs	sl, r0, r3
   26a7c:	sbc	fp, r1, r3, asr #31
   26a80:	cmp	r9, #0
   26a84:	mov	r2, sl
   26a88:	mov	r3, fp
   26a8c:	bne	26a04 <__flatcc_fb_gen_c_json_parser@@Base+0x13e4>
   26a90:	mov	r0, r4
   26a94:	ldr	r1, [sp, #20]
   26a98:	add	r8, r8, #1
   26a9c:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26aa0:	ldr	r2, [sp, #36]	; 0x24
   26aa4:	cmp	r8, r2
   26aa8:	blt	26a30 <__flatcc_fb_gen_c_json_parser@@Base+0x1410>
   26aac:	cmp	r9, #0
   26ab0:	ldr	fp, [sp, #12]
   26ab4:	bne	26b2c <__flatcc_fb_gen_c_json_parser@@Base+0x150c>
   26ab8:	ldr	r3, [r4, #220]	; 0xdc
   26abc:	cmp	r3, #0
   26ac0:	beq	27354 <__flatcc_fb_gen_c_json_parser@@Base+0x1d34>
   26ac4:	ldr	r1, [pc, #-780]	; 267c0 <__flatcc_fb_gen_c_json_parser@@Base+0x11a0>
   26ac8:	sub	r3, r3, #1
   26acc:	mov	r0, r4
   26ad0:	str	r3, [r4, #220]	; 0xdc
   26ad4:	add	r1, pc, r1
   26ad8:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26adc:	ldr	r3, [r4, #220]	; 0xdc
   26ae0:	mov	r0, r4
   26ae4:	ldr	r1, [pc, #-808]	; 267c4 <__flatcc_fb_gen_c_json_parser@@Base+0x11a4>
   26ae8:	add	r3, r3, #1
   26aec:	add	r1, pc, r1
   26af0:	str	r3, [r4, #220]	; 0xdc
   26af4:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26af8:	ldr	r1, [pc, #-824]	; 267c8 <__flatcc_fb_gen_c_json_parser@@Base+0x11a8>
   26afc:	mov	r0, r4
   26b00:	add	r1, pc, r1
   26b04:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26b08:	ldr	r3, [r4, #220]	; 0xdc
   26b0c:	cmp	r3, #0
   26b10:	beq	27378 <__flatcc_fb_gen_c_json_parser@@Base+0x1d58>
   26b14:	ldr	r1, [pc, #-848]	; 267cc <__flatcc_fb_gen_c_json_parser@@Base+0x11ac>
   26b18:	sub	r3, r3, #1
   26b1c:	mov	r0, r4
   26b20:	str	r3, [r4, #220]	; 0xdc
   26b24:	add	r1, pc, r1
   26b28:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26b2c:	ldr	r3, [sp, #60]	; 0x3c
   26b30:	cmp	r3, #0
   26b34:	bne	26d48 <__flatcc_fb_gen_c_json_parser@@Base+0x1728>
   26b38:	ldr	r1, [pc, #-880]	; 267d0 <__flatcc_fb_gen_c_json_parser@@Base+0x11b0>
   26b3c:	mov	r0, r4
   26b40:	add	r1, pc, r1
   26b44:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26b48:	ldr	r1, [pc, #-892]	; 267d4 <__flatcc_fb_gen_c_json_parser@@Base+0x11b4>
   26b4c:	mov	r0, r4
   26b50:	add	r1, pc, r1
   26b54:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26b58:	ldr	r1, [pc, #-904]	; 267d8 <__flatcc_fb_gen_c_json_parser@@Base+0x11b8>
   26b5c:	mov	r2, #0
   26b60:	mov	r0, r4
   26b64:	ldr	r3, [r4, #220]	; 0xdc
   26b68:	str	r2, [r4, #220]	; 0xdc
   26b6c:	add	r1, pc, r1
   26b70:	str	r3, [r4, #228]	; 0xe4
   26b74:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26b78:	ldr	r1, [pc, #-932]	; 267dc <__flatcc_fb_gen_c_json_parser@@Base+0x11bc>
   26b7c:	mov	r0, r4
   26b80:	ldr	r3, [r4, #228]	; 0xe4
   26b84:	add	r1, pc, r1
   26b88:	str	r3, [r4, #220]	; 0xdc
   26b8c:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26b90:	ldr	r3, [r4, #220]	; 0xdc
   26b94:	cmp	r3, #0
   26b98:	beq	2730c <__flatcc_fb_gen_c_json_parser@@Base+0x1cec>
   26b9c:	ldr	r9, [pc, #-964]	; 267e0 <__flatcc_fb_gen_c_json_parser@@Base+0x11c0>
   26ba0:	sub	r3, r3, #1
   26ba4:	mov	r0, r4
   26ba8:	ldr	r8, [pc, #-972]	; 267e4 <__flatcc_fb_gen_c_json_parser@@Base+0x11c4>
   26bac:	str	r3, [r4, #220]	; 0xdc
   26bb0:	add	r9, pc, r9
   26bb4:	mov	r1, r9
   26bb8:	add	r8, pc, r8
   26bbc:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26bc0:	mov	r1, r8
   26bc4:	mov	r0, r4
   26bc8:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26bcc:	ldr	r1, [pc, #-1004]	; 267e8 <__flatcc_fb_gen_c_json_parser@@Base+0x11c8>
   26bd0:	mov	r2, r5
   26bd4:	mov	r0, r4
   26bd8:	add	r1, pc, r1
   26bdc:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26be0:	ldr	r1, [pc, #-1020]	; 267ec <__flatcc_fb_gen_c_json_parser@@Base+0x11cc>
   26be4:	mov	r0, r4
   26be8:	add	r1, pc, r1
   26bec:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26bf0:	ldr	r3, [r4, #220]	; 0xdc
   26bf4:	mov	r2, r5
   26bf8:	mov	r0, r4
   26bfc:	ldr	r1, [pc, #-1044]	; 267f0 <__flatcc_fb_gen_c_json_parser@@Base+0x11d0>
   26c00:	add	r3, r3, #1
   26c04:	add	r1, pc, r1
   26c08:	str	r3, [r4, #220]	; 0xdc
   26c0c:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26c10:	ldr	r3, [r4, #220]	; 0xdc
   26c14:	cmp	r3, #0
   26c18:	beq	272e8 <__flatcc_fb_gen_c_json_parser@@Base+0x1cc8>
   26c1c:	sub	r3, r3, #1
   26c20:	mov	r1, r9
   26c24:	mov	r0, r4
   26c28:	str	r3, [r4, #220]	; 0xdc
   26c2c:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26c30:	mov	r0, r4
   26c34:	mov	r1, r8
   26c38:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26c3c:	ldr	r0, [sp, #40]	; 0x28
   26c40:	cmp	r0, #0
   26c44:	beq	259e0 <__flatcc_fb_gen_c_json_parser@@Base+0x3c0>
   26c48:	bl	13fa4 <free@plt>
   26c4c:	b	259e0 <__flatcc_fb_gen_c_json_parser@@Base+0x3c0>
   26c50:	ldr	r1, [pc, #-1124]	; 267f4 <__flatcc_fb_gen_c_json_parser@@Base+0x11d4>
   26c54:	mov	r0, r4
   26c58:	add	r1, pc, r1
   26c5c:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26c60:	ldr	r1, [pc, #-1136]	; 267f8 <__flatcc_fb_gen_c_json_parser@@Base+0x11d8>
   26c64:	mov	r0, r4
   26c68:	add	r1, pc, r1
   26c6c:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26c70:	ldr	r3, [sp, #36]	; 0x24
   26c74:	mov	ip, #0
   26c78:	mov	r1, r7
   26c7c:	mov	r2, ip
   26c80:	mov	r0, r4
   26c84:	str	ip, [sp]
   26c88:	sub	r3, r3, #1
   26c8c:	bl	21dac <__flatcc_fb_gen_c_verifier@@Base+0x9a0>
   26c90:	b	260f4 <__flatcc_fb_gen_c_json_parser@@Base+0xad4>
   26c94:	ldr	r3, [sp, #36]	; 0x24
   26c98:	cmp	r3, #0
   26c9c:	ble	25fbc <__flatcc_fb_gen_c_json_parser@@Base+0x99c>
   26ca0:	ldr	r2, [pc, #-808]	; 26980 <__flatcc_fb_gen_c_json_parser@@Base+0x1360>
   26ca4:	movw	r3, #1303	; 0x517
   26ca8:	ldr	r1, [sp, #28]
   26cac:	ldr	r0, [pc, #-1208]	; 267fc <__flatcc_fb_gen_c_json_parser@@Base+0x11dc>
   26cb0:	ldr	r4, [pc, #-1208]	; 26800 <__flatcc_fb_gen_c_json_parser@@Base+0x11e0>
   26cb4:	ldr	ip, [r1, r2]
   26cb8:	add	r0, pc, r0
   26cbc:	ldr	r1, [pc, #-1216]	; 26804 <__flatcc_fb_gen_c_json_parser@@Base+0x11e4>
   26cc0:	add	r4, pc, r4
   26cc4:	str	r0, [sp]
   26cc8:	mov	r2, r4
   26ccc:	ldr	r0, [ip]
   26cd0:	add	r1, pc, r1
   26cd4:	bl	14064 <fprintf@plt>
   26cd8:	ldr	r3, [pc, #-1240]	; 26808 <__flatcc_fb_gen_c_json_parser@@Base+0x11e8>
   26cdc:	mov	r1, r4
   26ce0:	movw	r2, #1303	; 0x517
   26ce4:	ldr	r0, [pc, #-1248]	; 2680c <__flatcc_fb_gen_c_json_parser@@Base+0x11ec>
   26ce8:	add	r3, pc, r3
   26cec:	add	r3, r3, #280	; 0x118
   26cf0:	add	r0, pc, r0
   26cf4:	bl	14118 <__assert_fail@plt>
   26cf8:	ldr	r1, [pc, #-1264]	; 26810 <__flatcc_fb_gen_c_json_parser@@Base+0x11f0>
   26cfc:	mov	r0, r4
   26d00:	add	r1, pc, r1
   26d04:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26d08:	ldr	r1, [pc, #-1276]	; 26814 <__flatcc_fb_gen_c_json_parser@@Base+0x11f4>
   26d0c:	mov	r0, r4
   26d10:	add	r1, pc, r1
   26d14:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26d18:	b	26590 <__flatcc_fb_gen_c_json_parser@@Base+0xf70>
   26d1c:	ldr	r1, [pc, #-1292]	; 26818 <__flatcc_fb_gen_c_json_parser@@Base+0x11f8>
   26d20:	asr	r3, r2, #31
   26d24:	mov	r0, r4
   26d28:	add	r1, pc, r1
   26d2c:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26d30:	b	26518 <__flatcc_fb_gen_c_json_parser@@Base+0xef8>
   26d34:	ldr	r1, [pc, #-1312]	; 2681c <__flatcc_fb_gen_c_json_parser@@Base+0x11fc>
   26d38:	mov	r0, r4
   26d3c:	add	r1, pc, r1
   26d40:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26d44:	b	264d8 <__flatcc_fb_gen_c_json_parser@@Base+0xeb8>
   26d48:	ldr	r1, [pc, #-1328]	; 26820 <__flatcc_fb_gen_c_json_parser@@Base+0x1200>
   26d4c:	mov	r0, r4
   26d50:	add	r1, pc, r1
   26d54:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26d58:	b	26b38 <__flatcc_fb_gen_c_json_parser@@Base+0x1518>
   26d5c:	ldr	r1, [pc, #-1344]	; 26824 <__flatcc_fb_gen_c_json_parser@@Base+0x1204>
   26d60:	mov	r0, r4
   26d64:	add	r1, pc, r1
   26d68:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26d6c:	ldr	r1, [pc, #-1356]	; 26828 <__flatcc_fb_gen_c_json_parser@@Base+0x1208>
   26d70:	mov	r0, r4
   26d74:	add	r1, pc, r1
   26d78:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26d7c:	ldr	r3, [r4, #220]	; 0xdc
   26d80:	cmp	r3, #0
   26d84:	beq	27418 <__flatcc_fb_gen_c_json_parser@@Base+0x1df8>
   26d88:	ldr	r1, [pc, #-1380]	; 2682c <__flatcc_fb_gen_c_json_parser@@Base+0x120c>
   26d8c:	sub	r3, r3, #1
   26d90:	mov	r0, r4
   26d94:	str	r3, [r4, #220]	; 0xdc
   26d98:	add	r1, pc, r1
   26d9c:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26da0:	b	25d18 <__flatcc_fb_gen_c_json_parser@@Base+0x6f8>
   26da4:	ldr	r3, [sp, #36]	; 0x24
   26da8:	cmp	r3, #0
   26dac:	bgt	2739c <__flatcc_fb_gen_c_json_parser@@Base+0x1d7c>
   26db0:	ldr	r2, [pc, #-1416]	; 26830 <__flatcc_fb_gen_c_json_parser@@Base+0x1210>
   26db4:	str	r6, [sp, #52]	; 0x34
   26db8:	ldr	r3, [pc, #-1420]	; 26834 <__flatcc_fb_gen_c_json_parser@@Base+0x1214>
   26dbc:	str	r0, [sp, #56]	; 0x38
   26dc0:	str	r0, [sp, #60]	; 0x3c
   26dc4:	add	r2, pc, r2
   26dc8:	add	r3, pc, r3
   26dcc:	strd	r2, [sp, #44]	; 0x2c
   26dd0:	b	26428 <__flatcc_fb_gen_c_json_parser@@Base+0xe08>
   26dd4:	ldr	r0, [pc, #-1444]	; 26838 <__flatcc_fb_gen_c_json_parser@@Base+0x1218>
   26dd8:	mov	r2, #36	; 0x24
   26ddc:	mov	r1, #1
   26de0:	ldr	r3, [r4, #204]	; 0xcc
   26de4:	add	r0, pc, r0
   26de8:	bl	13fec <fwrite@plt>
   26dec:	b	256dc <__flatcc_fb_gen_c_json_parser@@Base+0xbc>
   26df0:	ldr	r0, [pc, #-1468]	; 2683c <__flatcc_fb_gen_c_json_parser@@Base+0x121c>
   26df4:	mov	r2, #36	; 0x24
   26df8:	mov	r1, #1
   26dfc:	ldr	r3, [r4, #204]	; 0xcc
   26e00:	add	r0, pc, r0
   26e04:	bl	13fec <fwrite@plt>
   26e08:	b	25f40 <__flatcc_fb_gen_c_json_parser@@Base+0x920>
   26e0c:	mov	r2, #220	; 0xdc
   26e10:	mov	r1, r7
   26e14:	mov	r0, r5
   26e18:	bl	1407c <memset@plt>
   26e1c:	mov	r2, r5
   26e20:	mov	r1, r6
   26e24:	ldr	r0, [r6, #12]
   26e28:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   26e2c:	ldr	r1, [pc, #-1524]	; 26840 <__flatcc_fb_gen_c_json_parser@@Base+0x1220>
   26e30:	mov	r0, r4
   26e34:	ldr	r3, [r4, #208]	; 0xd0
   26e38:	add	r1, pc, r1
   26e3c:	ldr	r2, [r3, #160]	; 0xa0
   26e40:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26e44:	ldr	r3, [r4, #220]	; 0xdc
   26e48:	mov	r0, r4
   26e4c:	ldr	r1, [pc, #-1552]	; 26844 <__flatcc_fb_gen_c_json_parser@@Base+0x1224>
   26e50:	add	r3, r3, #2
   26e54:	add	r1, pc, r1
   26e58:	str	r3, [r4, #220]	; 0xdc
   26e5c:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26e60:	ldr	r3, [r4, #220]	; 0xdc
   26e64:	cmp	r3, #0
   26e68:	beq	273f4 <__flatcc_fb_gen_c_json_parser@@Base+0x1dd4>
   26e6c:	cmp	r3, #1
   26e70:	streq	r7, [r4, #220]	; 0xdc
   26e74:	beq	273f4 <__flatcc_fb_gen_c_json_parser@@Base+0x1dd4>
   26e78:	ldr	r1, [pc, #-1592]	; 26848 <__flatcc_fb_gen_c_json_parser@@Base+0x1228>
   26e7c:	sub	r3, r3, #2
   26e80:	mov	r0, r4
   26e84:	str	r3, [r4, #220]	; 0xdc
   26e88:	add	r1, pc, r1
   26e8c:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26e90:	ldr	r3, [r4, #220]	; 0xdc
   26e94:	mov	r0, r4
   26e98:	ldr	r1, [pc, #-1620]	; 2684c <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   26e9c:	add	r3, r3, #1
   26ea0:	add	r1, pc, r1
   26ea4:	str	r3, [r4, #220]	; 0xdc
   26ea8:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26eac:	ldr	r1, [pc, #-1636]	; 26850 <__flatcc_fb_gen_c_json_parser@@Base+0x1230>
   26eb0:	mov	r0, r4
   26eb4:	add	r1, pc, r1
   26eb8:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26ebc:	ldr	r1, [pc, #-1648]	; 26854 <__flatcc_fb_gen_c_json_parser@@Base+0x1234>
   26ec0:	mov	r0, r4
   26ec4:	add	r1, pc, r1
   26ec8:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26ecc:	ldr	r1, [pc, #-1660]	; 26858 <__flatcc_fb_gen_c_json_parser@@Base+0x1238>
   26ed0:	mov	r0, r4
   26ed4:	add	r1, pc, r1
   26ed8:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26edc:	ldr	r1, [pc, #-1672]	; 2685c <__flatcc_fb_gen_c_json_parser@@Base+0x123c>
   26ee0:	mov	r0, r4
   26ee4:	add	r1, pc, r1
   26ee8:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26eec:	ldr	r2, [r4, #208]	; 0xd0
   26ef0:	ldrh	r3, [r2, #16]
   26ef4:	cmp	r3, #2
   26ef8:	beq	26fd8 <__flatcc_fb_gen_c_json_parser@@Base+0x19b8>
   26efc:	ldr	r1, [pc, #-1700]	; 26860 <__flatcc_fb_gen_c_json_parser@@Base+0x1240>
   26f00:	mov	r0, r4
   26f04:	add	r1, pc, r1
   26f08:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26f0c:	ldr	r1, [pc, #-1712]	; 26864 <__flatcc_fb_gen_c_json_parser@@Base+0x1244>
   26f10:	mov	r2, r5
   26f14:	mov	r0, r4
   26f18:	add	r1, pc, r1
   26f1c:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26f20:	ldr	r1, [pc, #-1728]	; 26868 <__flatcc_fb_gen_c_json_parser@@Base+0x1248>
   26f24:	mov	r0, r4
   26f28:	add	r1, pc, r1
   26f2c:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26f30:	ldr	r3, [r4, #220]	; 0xdc
   26f34:	mov	r0, r4
   26f38:	ldr	r1, [pc, #-1748]	; 2686c <__flatcc_fb_gen_c_json_parser@@Base+0x124c>
   26f3c:	add	r3, r3, #1
   26f40:	add	r1, pc, r1
   26f44:	str	r3, [r4, #220]	; 0xdc
   26f48:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26f4c:	ldr	r3, [r4, #220]	; 0xdc
   26f50:	cmp	r3, #0
   26f54:	beq	27484 <__flatcc_fb_gen_c_json_parser@@Base+0x1e64>
   26f58:	ldr	r5, [pc, #-1776]	; 26870 <__flatcc_fb_gen_c_json_parser@@Base+0x1250>
   26f5c:	sub	r3, r3, #1
   26f60:	mov	r0, r4
   26f64:	str	r3, [r4, #220]	; 0xdc
   26f68:	add	r5, pc, r5
   26f6c:	mov	r1, r5
   26f70:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26f74:	ldr	r1, [pc, #-1800]	; 26874 <__flatcc_fb_gen_c_json_parser@@Base+0x1254>
   26f78:	mov	r0, r4
   26f7c:	add	r1, pc, r1
   26f80:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26f84:	ldr	r1, [pc, #-1812]	; 26878 <__flatcc_fb_gen_c_json_parser@@Base+0x1258>
   26f88:	mov	r0, r4
   26f8c:	add	r1, pc, r1
   26f90:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26f94:	ldr	r1, [pc, #-1824]	; 2687c <__flatcc_fb_gen_c_json_parser@@Base+0x125c>
   26f98:	mov	r0, r4
   26f9c:	add	r1, pc, r1
   26fa0:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26fa4:	ldr	r3, [r4, #220]	; 0xdc
   26fa8:	cmp	r3, #0
   26fac:	beq	27514 <__flatcc_fb_gen_c_json_parser@@Base+0x1ef4>
   26fb0:	sub	r3, r3, #1
   26fb4:	mov	r1, r5
   26fb8:	mov	r0, r4
   26fbc:	str	r3, [r4, #220]	; 0xdc
   26fc0:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26fc4:	ldr	r1, [pc, #-1868]	; 26880 <__flatcc_fb_gen_c_json_parser@@Base+0x1260>
   26fc8:	mov	r0, r4
   26fcc:	add	r1, pc, r1
   26fd0:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26fd4:	b	25f30 <__flatcc_fb_gen_c_json_parser@@Base+0x910>
   26fd8:	ldr	r1, [pc, #-1884]	; 26884 <__flatcc_fb_gen_c_json_parser@@Base+0x1264>
   26fdc:	mov	r0, r4
   26fe0:	ldr	r3, [r2, #8]
   26fe4:	ldr	r2, [r2, #12]
   26fe8:	add	r1, pc, r1
   26fec:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   26ff0:	b	26f0c <__flatcc_fb_gen_c_json_parser@@Base+0x18ec>
   26ff4:	ldr	r1, [pc, #-1908]	; 26888 <__flatcc_fb_gen_c_json_parser@@Base+0x1268>
   26ff8:	mov	r0, r4
   26ffc:	ldr	r3, [r2, #8]
   27000:	ldr	r2, [r2, #12]
   27004:	add	r1, pc, r1
   27008:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   2700c:	b	25e68 <__flatcc_fb_gen_c_json_parser@@Base+0x848>
   27010:	ldr	r1, [pc, #-1932]	; 2688c <__flatcc_fb_gen_c_json_parser@@Base+0x126c>
   27014:	mov	r0, r4
   27018:	add	r1, pc, r1
   2701c:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   27020:	ldr	r1, [pc, #-1944]	; 26890 <__flatcc_fb_gen_c_json_parser@@Base+0x1270>
   27024:	mov	r0, r4
   27028:	add	r1, pc, r1
   2702c:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   27030:	ldr	r1, [pc, #-1956]	; 26894 <__flatcc_fb_gen_c_json_parser@@Base+0x1274>
   27034:	mov	r0, r4
   27038:	add	r1, pc, r1
   2703c:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   27040:	ldr	r1, [pc, #-1968]	; 26898 <__flatcc_fb_gen_c_json_parser@@Base+0x1278>
   27044:	mov	r0, r4
   27048:	add	r1, pc, r1
   2704c:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   27050:	ldr	r1, [pc, #-1980]	; 2689c <__flatcc_fb_gen_c_json_parser@@Base+0x127c>
   27054:	mov	r0, r4
   27058:	add	r1, pc, r1
   2705c:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   27060:	ldr	r1, [pc, #-1992]	; 268a0 <__flatcc_fb_gen_c_json_parser@@Base+0x1280>
   27064:	mov	r0, r4
   27068:	add	r1, pc, r1
   2706c:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   27070:	ldr	r1, [pc, #-2004]	; 268a4 <__flatcc_fb_gen_c_json_parser@@Base+0x1284>
   27074:	mov	r0, r4
   27078:	add	r1, pc, r1
   2707c:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   27080:	ldr	r1, [pc, #-2016]	; 268a8 <__flatcc_fb_gen_c_json_parser@@Base+0x1288>
   27084:	mov	r0, r4
   27088:	add	r1, pc, r1
   2708c:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   27090:	ldr	r1, [pc, #-2028]	; 268ac <__flatcc_fb_gen_c_json_parser@@Base+0x128c>
   27094:	mov	r0, r4
   27098:	add	r1, pc, r1
   2709c:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   270a0:	ldr	r1, [pc, #-2040]	; 268b0 <__flatcc_fb_gen_c_json_parser@@Base+0x1290>
   270a4:	mov	r0, r4
   270a8:	ldr	r3, [r4, #208]	; 0xd0
   270ac:	add	r1, pc, r1
   270b0:	ldr	r2, [r3, #160]	; 0xa0
   270b4:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   270b8:	ldr	r3, [r4, #220]	; 0xdc
   270bc:	mov	r0, r4
   270c0:	ldr	r1, [pc, #-2068]	; 268b4 <__flatcc_fb_gen_c_json_parser@@Base+0x1294>
   270c4:	add	r3, r3, #2
   270c8:	add	r1, pc, r1
   270cc:	str	r3, [r4, #220]	; 0xdc
   270d0:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   270d4:	ldr	r3, [r4, #220]	; 0xdc
   270d8:	cmp	r3, #0
   270dc:	beq	274cc <__flatcc_fb_gen_c_json_parser@@Base+0x1eac>
   270e0:	cmp	r3, #1
   270e4:	moveq	r3, #0
   270e8:	streq	r3, [r4, #220]	; 0xdc
   270ec:	beq	274cc <__flatcc_fb_gen_c_json_parser@@Base+0x1eac>
   270f0:	sub	r3, r3, #2
   270f4:	mov	r1, r8
   270f8:	mov	r0, r4
   270fc:	str	r3, [r4, #220]	; 0xdc
   27100:	bl	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   27104:	ldr	r7, [r4, #208]	; 0xd0
   27108:	b	25720 <__flatcc_fb_gen_c_json_parser@@Base+0x100>
   2710c:	cmp	r6, #0
   27110:	str	r9, [sp, #40]	; 0x28
   27114:	ble	25bdc <__flatcc_fb_gen_c_json_parser@@Base+0x5bc>
   27118:	mov	r0, r5
   2711c:	ldr	r4, [pc, #-2156]	; 268b8 <__flatcc_fb_gen_c_json_parser@@Base+0x1298>
   27120:	bl	23730 <__flatcc_fb_gen_c_verifier@@Base+0x2324>
   27124:	ldr	r1, [pc, #-2160]	; 268bc <__flatcc_fb_gen_c_json_parser@@Base+0x129c>
   27128:	movw	r3, #1194	; 0x4aa
   2712c:	ldr	r0, [pc, #-1972]	; 26980 <__flatcc_fb_gen_c_json_parser@@Base+0x1360>
   27130:	add	r4, pc, r4
   27134:	ldr	ip, [sp, #28]
   27138:	mov	r2, r4
   2713c:	add	r1, pc, r1
   27140:	ldr	r0, [ip, r0]
   27144:	str	r1, [sp]
   27148:	ldr	r1, [pc, #-2192]	; 268c0 <__flatcc_fb_gen_c_json_parser@@Base+0x12a0>
   2714c:	ldr	r0, [r0]
   27150:	add	r1, pc, r1
   27154:	bl	14064 <fprintf@plt>
   27158:	ldr	r3, [pc, #-2204]	; 268c4 <__flatcc_fb_gen_c_json_parser@@Base+0x12a4>
   2715c:	mov	r1, r4
   27160:	movw	r2, #1194	; 0x4aa
   27164:	ldr	r0, [pc, #-2212]	; 268c8 <__flatcc_fb_gen_c_json_parser@@Base+0x12a8>
   27168:	add	r3, pc, r3
   2716c:	add	r3, r3, #348	; 0x15c
   27170:	add	r0, pc, r0
   27174:	bl	14118 <__assert_fail@plt>
   27178:	mov	r3, #0
   2717c:	str	r3, [r4, #220]	; 0xdc
   27180:	ldr	r3, [pc, #-2236]	; 268cc <__flatcc_fb_gen_c_json_parser@@Base+0x12ac>
   27184:	movw	r2, #1731	; 0x6c3
   27188:	ldr	r1, [pc, #-2240]	; 268d0 <__flatcc_fb_gen_c_json_parser@@Base+0x12b0>
   2718c:	ldr	r0, [pc, #-2240]	; 268d4 <__flatcc_fb_gen_c_json_parser@@Base+0x12b4>
   27190:	add	r3, pc, r3
   27194:	add	r3, r3, #252	; 0xfc
   27198:	add	r1, pc, r1
   2719c:	add	r0, pc, r0
   271a0:	bl	14118 <__assert_fail@plt>
   271a4:	ldr	r3, [pc, #-2260]	; 268d8 <__flatcc_fb_gen_c_json_parser@@Base+0x12b8>
   271a8:	movw	r2, #1755	; 0x6db
   271ac:	ldr	r1, [pc, #-2264]	; 268dc <__flatcc_fb_gen_c_json_parser@@Base+0x12bc>
   271b0:	ldr	r0, [pc, #-2264]	; 268e0 <__flatcc_fb_gen_c_json_parser@@Base+0x12c0>
   271b4:	add	r3, pc, r3
   271b8:	add	r3, r3, #252	; 0xfc
   271bc:	add	r1, pc, r1
   271c0:	add	r0, pc, r0
   271c4:	bl	14118 <__assert_fail@plt>
   271c8:	ldr	r3, [pc, #-2284]	; 268e4 <__flatcc_fb_gen_c_json_parser@@Base+0x12c4>
   271cc:	movw	r2, #1205	; 0x4b5
   271d0:	ldr	r1, [pc, #-2288]	; 268e8 <__flatcc_fb_gen_c_json_parser@@Base+0x12c8>
   271d4:	ldr	r0, [pc, #-2288]	; 268ec <__flatcc_fb_gen_c_json_parser@@Base+0x12cc>
   271d8:	add	r3, pc, r3
   271dc:	add	r3, r3, #348	; 0x15c
   271e0:	add	r1, pc, r1
   271e4:	add	r0, pc, r0
   271e8:	bl	14118 <__assert_fail@plt>
   271ec:	ldr	r3, [pc, #-2308]	; 268f0 <__flatcc_fb_gen_c_json_parser@@Base+0x12d0>
   271f0:	movw	r2, #1353	; 0x549
   271f4:	ldr	r1, [pc, #-2312]	; 268f4 <__flatcc_fb_gen_c_json_parser@@Base+0x12d4>
   271f8:	ldr	r0, [pc, #-2312]	; 268f8 <__flatcc_fb_gen_c_json_parser@@Base+0x12d8>
   271fc:	add	r3, pc, r3
   27200:	add	r3, r3, #308	; 0x134
   27204:	add	r1, pc, r1
   27208:	add	r0, pc, r0
   2720c:	bl	14118 <__assert_fail@plt>
   27210:	ldr	r3, [pc, #-2332]	; 268fc <__flatcc_fb_gen_c_json_parser@@Base+0x12dc>
   27214:	movw	r2, #1343	; 0x53f
   27218:	ldr	r1, [pc, #-2336]	; 26900 <__flatcc_fb_gen_c_json_parser@@Base+0x12e0>
   2721c:	ldr	r0, [pc, #-2336]	; 26904 <__flatcc_fb_gen_c_json_parser@@Base+0x12e4>
   27220:	add	r3, pc, r3
   27224:	add	r3, r3, #280	; 0x118
   27228:	add	r1, pc, r1
   2722c:	add	r0, pc, r0
   27230:	bl	14118 <__assert_fail@plt>
   27234:	ldr	r3, [pc, #-2356]	; 26908 <__flatcc_fb_gen_c_json_parser@@Base+0x12e8>
   27238:	movw	r2, #1334	; 0x536
   2723c:	ldr	r1, [pc, #-2360]	; 2690c <__flatcc_fb_gen_c_json_parser@@Base+0x12ec>
   27240:	ldr	r0, [pc, #-2360]	; 26910 <__flatcc_fb_gen_c_json_parser@@Base+0x12f0>
   27244:	add	r3, pc, r3
   27248:	add	r3, r3, #280	; 0x118
   2724c:	add	r1, pc, r1
   27250:	add	r0, pc, r0
   27254:	bl	14118 <__assert_fail@plt>
   27258:	ldr	r3, [pc, #-2380]	; 26914 <__flatcc_fb_gen_c_json_parser@@Base+0x12f4>
   2725c:	movw	r2, #1438	; 0x59e
   27260:	ldr	r1, [pc, #-2384]	; 26918 <__flatcc_fb_gen_c_json_parser@@Base+0x12f8>
   27264:	ldr	r0, [pc, #-2384]	; 2691c <__flatcc_fb_gen_c_json_parser@@Base+0x12fc>
   27268:	add	r3, pc, r3
   2726c:	add	r3, r3, #328	; 0x148
   27270:	add	r1, pc, r1
   27274:	add	r0, pc, r0
   27278:	bl	14118 <__assert_fail@plt>
   2727c:	ldr	r3, [pc, #-2404]	; 26920 <__flatcc_fb_gen_c_json_parser@@Base+0x1300>
   27280:	movw	r2, #1301	; 0x515
   27284:	ldr	r1, [pc, #-2408]	; 26924 <__flatcc_fb_gen_c_json_parser@@Base+0x1304>
   27288:	ldr	r0, [pc, #-2408]	; 26928 <__flatcc_fb_gen_c_json_parser@@Base+0x1308>
   2728c:	add	r3, pc, r3
   27290:	add	r3, r3, #280	; 0x118
   27294:	add	r1, pc, r1
   27298:	add	r0, pc, r0
   2729c:	bl	14118 <__assert_fail@plt>
   272a0:	ldr	r3, [pc, #-2428]	; 2692c <__flatcc_fb_gen_c_json_parser@@Base+0x130c>
   272a4:	movw	r2, #1390	; 0x56e
   272a8:	ldr	r1, [pc, #-2432]	; 26930 <__flatcc_fb_gen_c_json_parser@@Base+0x1310>
   272ac:	ldr	r0, [pc, #-2432]	; 26934 <__flatcc_fb_gen_c_json_parser@@Base+0x1314>
   272b0:	add	r3, pc, r3
   272b4:	add	r3, r3, #328	; 0x148
   272b8:	add	r1, pc, r1
   272bc:	add	r0, pc, r0
   272c0:	bl	14118 <__assert_fail@plt>
   272c4:	ldr	r3, [pc, #-2452]	; 26938 <__flatcc_fb_gen_c_json_parser@@Base+0x1318>
   272c8:	mov	r2, #1376	; 0x560
   272cc:	ldr	r1, [pc, #-2456]	; 2693c <__flatcc_fb_gen_c_json_parser@@Base+0x131c>
   272d0:	ldr	r0, [pc, #-2456]	; 26940 <__flatcc_fb_gen_c_json_parser@@Base+0x1320>
   272d4:	add	r3, pc, r3
   272d8:	add	r3, r3, #308	; 0x134
   272dc:	add	r1, pc, r1
   272e0:	add	r0, pc, r0
   272e4:	bl	14118 <__assert_fail@plt>
   272e8:	ldr	r3, [pc, #-2476]	; 26944 <__flatcc_fb_gen_c_json_parser@@Base+0x1324>
   272ec:	movw	r2, #1479	; 0x5c7
   272f0:	ldr	r1, [pc, #-2480]	; 26948 <__flatcc_fb_gen_c_json_parser@@Base+0x1328>
   272f4:	ldr	r0, [pc, #-2480]	; 2694c <__flatcc_fb_gen_c_json_parser@@Base+0x132c>
   272f8:	add	r3, pc, r3
   272fc:	add	r3, r3, #328	; 0x148
   27300:	add	r1, pc, r1
   27304:	add	r0, pc, r0
   27308:	bl	14118 <__assert_fail@plt>
   2730c:	ldr	r3, [pc, #-2500]	; 26950 <__flatcc_fb_gen_c_json_parser@@Base+0x1330>
   27310:	movw	r2, #1473	; 0x5c1
   27314:	ldr	r1, [pc, #-2504]	; 26954 <__flatcc_fb_gen_c_json_parser@@Base+0x1334>
   27318:	ldr	r0, [pc, #-2504]	; 26958 <__flatcc_fb_gen_c_json_parser@@Base+0x1338>
   2731c:	add	r3, pc, r3
   27320:	add	r3, r3, #328	; 0x148
   27324:	add	r1, pc, r1
   27328:	add	r0, pc, r0
   2732c:	bl	14118 <__assert_fail@plt>
   27330:	ldr	r3, [pc, #-2524]	; 2695c <__flatcc_fb_gen_c_json_parser@@Base+0x133c>
   27334:	movw	r2, #1370	; 0x55a
   27338:	ldr	r1, [pc, #-2528]	; 26960 <__flatcc_fb_gen_c_json_parser@@Base+0x1340>
   2733c:	ldr	r0, [pc, #-2528]	; 26964 <__flatcc_fb_gen_c_json_parser@@Base+0x1344>
   27340:	add	r3, pc, r3
   27344:	add	r3, r3, #308	; 0x134
   27348:	add	r1, pc, r1
   2734c:	add	r0, pc, r0
   27350:	bl	14118 <__assert_fail@plt>
   27354:	ldr	r3, [pc, #-2548]	; 26968 <__flatcc_fb_gen_c_json_parser@@Base+0x1348>
   27358:	movw	r2, #1458	; 0x5b2
   2735c:	ldr	r1, [pc, #-2552]	; 2696c <__flatcc_fb_gen_c_json_parser@@Base+0x134c>
   27360:	ldr	r0, [pc, #-2552]	; 26970 <__flatcc_fb_gen_c_json_parser@@Base+0x1350>
   27364:	add	r3, pc, r3
   27368:	add	r3, r3, #328	; 0x148
   2736c:	add	r1, pc, r1
   27370:	add	r0, pc, r0
   27374:	bl	14118 <__assert_fail@plt>
   27378:	ldr	r3, [pc, #-2572]	; 26974 <__flatcc_fb_gen_c_json_parser@@Base+0x1354>
   2737c:	movw	r2, #1461	; 0x5b5
   27380:	ldr	r1, [pc, #-2576]	; 26978 <__flatcc_fb_gen_c_json_parser@@Base+0x1358>
   27384:	ldr	r0, [pc, #-2576]	; 2697c <__flatcc_fb_gen_c_json_parser@@Base+0x135c>
   27388:	add	r3, pc, r3
   2738c:	add	r3, r3, #328	; 0x148
   27390:	add	r1, pc, r1
   27394:	add	r0, pc, r0
   27398:	bl	14118 <__assert_fail@plt>
   2739c:	ldr	r2, [pc, #-2596]	; 26980 <__flatcc_fb_gen_c_json_parser@@Base+0x1360>
   273a0:	mov	r3, #1392	; 0x570
   273a4:	ldr	r1, [sp, #28]
   273a8:	ldr	r0, [pc, #-2604]	; 26984 <__flatcc_fb_gen_c_json_parser@@Base+0x1364>
   273ac:	ldr	r4, [pc, #-2604]	; 26988 <__flatcc_fb_gen_c_json_parser@@Base+0x1368>
   273b0:	ldr	ip, [r1, r2]
   273b4:	add	r0, pc, r0
   273b8:	ldr	r1, [pc, #-2612]	; 2698c <__flatcc_fb_gen_c_json_parser@@Base+0x136c>
   273bc:	add	r4, pc, r4
   273c0:	str	r0, [sp]
   273c4:	mov	r2, r4
   273c8:	ldr	r0, [ip]
   273cc:	add	r1, pc, r1
   273d0:	bl	14064 <fprintf@plt>
   273d4:	ldr	r3, [pc, #-2636]	; 26990 <__flatcc_fb_gen_c_json_parser@@Base+0x1370>
   273d8:	mov	r1, r4
   273dc:	mov	r2, #1392	; 0x570
   273e0:	ldr	r0, [pc, #-2644]	; 26994 <__flatcc_fb_gen_c_json_parser@@Base+0x1374>
   273e4:	add	r3, pc, r3
   273e8:	add	r3, r3, #328	; 0x148
   273ec:	add	r0, pc, r0
   273f0:	bl	14118 <__assert_fail@plt>
   273f4:	ldr	r3, [pc, #-2660]	; 26998 <__flatcc_fb_gen_c_json_parser@@Base+0x1378>
   273f8:	movw	r2, #1610	; 0x64a
   273fc:	ldr	r1, [pc, #-2664]	; 2699c <__flatcc_fb_gen_c_json_parser@@Base+0x137c>
   27400:	ldr	r0, [pc, #-2664]	; 269a0 <__flatcc_fb_gen_c_json_parser@@Base+0x1380>
   27404:	add	r3, pc, r3
   27408:	add	r3, r3, #372	; 0x174
   2740c:	add	r1, pc, r1
   27410:	add	r0, pc, r0
   27414:	bl	14118 <__assert_fail@plt>
   27418:	ldr	r3, [pc, #-2684]	; 269a4 <__flatcc_fb_gen_c_json_parser@@Base+0x1384>
   2741c:	movw	r2, #1210	; 0x4ba
   27420:	ldr	r1, [pc, #-2688]	; 269a8 <__flatcc_fb_gen_c_json_parser@@Base+0x1388>
   27424:	ldr	r0, [pc, #-2688]	; 269ac <__flatcc_fb_gen_c_json_parser@@Base+0x138c>
   27428:	add	r3, pc, r3
   2742c:	add	r3, r3, #348	; 0x15c
   27430:	add	r1, pc, r1
   27434:	add	r0, pc, r0
   27438:	bl	14118 <__assert_fail@plt>
   2743c:	ldr	r3, [pc, #-2708]	; 269b0 <__flatcc_fb_gen_c_json_parser@@Base+0x1390>
   27440:	movw	r2, #1645	; 0x66d
   27444:	ldr	r1, [pc, #-2712]	; 269b4 <__flatcc_fb_gen_c_json_parser@@Base+0x1394>
   27448:	ldr	r0, [pc, #-2712]	; 269b8 <__flatcc_fb_gen_c_json_parser@@Base+0x1398>
   2744c:	add	r3, pc, r3
   27450:	add	r3, r3, #396	; 0x18c
   27454:	add	r1, pc, r1
   27458:	add	r0, pc, r0
   2745c:	bl	14118 <__assert_fail@plt>
   27460:	ldr	r3, [pc, #-2732]	; 269bc <__flatcc_fb_gen_c_json_parser@@Base+0x139c>
   27464:	movw	r2, #1219	; 0x4c3
   27468:	ldr	r1, [pc, #-2736]	; 269c0 <__flatcc_fb_gen_c_json_parser@@Base+0x13a0>
   2746c:	ldr	r0, [pc, #-2736]	; 269c4 <__flatcc_fb_gen_c_json_parser@@Base+0x13a4>
   27470:	add	r3, pc, r3
   27474:	add	r3, r3, #348	; 0x15c
   27478:	add	r1, pc, r1
   2747c:	add	r0, pc, r0
   27480:	bl	14118 <__assert_fail@plt>
   27484:	ldr	r3, [pc, #-2756]	; 269c8 <__flatcc_fb_gen_c_json_parser@@Base+0x13a8>
   27488:	movw	r2, #1626	; 0x65a
   2748c:	ldr	r1, [pc, #-2760]	; 269cc <__flatcc_fb_gen_c_json_parser@@Base+0x13ac>
   27490:	ldr	r0, [pc, #-2760]	; 269d0 <__flatcc_fb_gen_c_json_parser@@Base+0x13b0>
   27494:	add	r3, pc, r3
   27498:	add	r3, r3, #372	; 0x174
   2749c:	add	r1, pc, r1
   274a0:	add	r0, pc, r0
   274a4:	bl	14118 <__assert_fail@plt>
   274a8:	ldr	r3, [pc, #-2780]	; 269d4 <__flatcc_fb_gen_c_json_parser@@Base+0x13b4>
   274ac:	movw	r2, #1665	; 0x681
   274b0:	ldr	r1, [pc, #-2784]	; 269d8 <__flatcc_fb_gen_c_json_parser@@Base+0x13b8>
   274b4:	ldr	r0, [pc, #-2784]	; 269dc <__flatcc_fb_gen_c_json_parser@@Base+0x13bc>
   274b8:	add	r3, pc, r3
   274bc:	add	r3, r3, #396	; 0x18c
   274c0:	add	r1, pc, r1
   274c4:	add	r0, pc, r0
   274c8:	bl	14118 <__assert_fail@plt>
   274cc:	ldr	r3, [pc, #-2804]	; 269e0 <__flatcc_fb_gen_c_json_parser@@Base+0x13c0>
   274d0:	movw	r2, #1716	; 0x6b4
   274d4:	ldr	r1, [pc, #-2808]	; 269e4 <__flatcc_fb_gen_c_json_parser@@Base+0x13c4>
   274d8:	ldr	r0, [pc, #-2808]	; 269e8 <__flatcc_fb_gen_c_json_parser@@Base+0x13c8>
   274dc:	add	r3, pc, r3
   274e0:	add	r3, r3, #252	; 0xfc
   274e4:	add	r1, pc, r1
   274e8:	add	r0, pc, r0
   274ec:	bl	14118 <__assert_fail@plt>
   274f0:	ldr	r3, [pc, #-2828]	; 269ec <__flatcc_fb_gen_c_json_parser@@Base+0x13cc>
   274f4:	movw	r2, #1661	; 0x67d
   274f8:	ldr	r1, [pc, #-2832]	; 269f0 <__flatcc_fb_gen_c_json_parser@@Base+0x13d0>
   274fc:	ldr	r0, [pc, #-2832]	; 269f4 <__flatcc_fb_gen_c_json_parser@@Base+0x13d4>
   27500:	add	r3, pc, r3
   27504:	add	r3, r3, #396	; 0x18c
   27508:	add	r1, pc, r1
   2750c:	add	r0, pc, r0
   27510:	bl	14118 <__assert_fail@plt>
   27514:	ldr	r3, [pc, #-2852]	; 269f8 <__flatcc_fb_gen_c_json_parser@@Base+0x13d8>
   27518:	movw	r2, #1630	; 0x65e
   2751c:	ldr	r1, [pc, #-2856]	; 269fc <__flatcc_fb_gen_c_json_parser@@Base+0x13dc>
   27520:	ldr	r0, [pc, #-2856]	; 26a00 <__flatcc_fb_gen_c_json_parser@@Base+0x13e0>
   27524:	add	r3, pc, r3
   27528:	add	r3, r3, #372	; 0x174
   2752c:	add	r1, pc, r1
   27530:	add	r0, pc, r0
   27534:	bl	14118 <__assert_fail@plt>
   27538:	ldr	r2, [pc, #88]	; 27598 <__flatcc_fb_gen_c_json_parser@@Base+0x1f78>
   2753c:	mov	r3, #96	; 0x60
   27540:	push	{lr}		; (str lr, [sp, #-4]!)
   27544:	sub	sp, sp, #12
   27548:	ldr	r1, [pc, #76]	; 2759c <__flatcc_fb_gen_c_json_parser@@Base+0x1f7c>
   2754c:	ldr	r0, [pc, #76]	; 275a0 <__flatcc_fb_gen_c_json_parser@@Base+0x1f80>
   27550:	add	r2, pc, r2
   27554:	ldr	r4, [pc, #72]	; 275a4 <__flatcc_fb_gen_c_json_parser@@Base+0x1f84>
   27558:	ldr	ip, [r2, r1]
   2755c:	add	r0, pc, r0
   27560:	ldr	r1, [pc, #64]	; 275a8 <__flatcc_fb_gen_c_json_parser@@Base+0x1f88>
   27564:	add	r4, pc, r4
   27568:	str	r0, [sp]
   2756c:	mov	r2, r4
   27570:	ldr	r0, [ip]
   27574:	add	r1, pc, r1
   27578:	bl	14064 <fprintf@plt>
   2757c:	ldr	r3, [pc, #40]	; 275ac <__flatcc_fb_gen_c_json_parser@@Base+0x1f8c>
   27580:	mov	r1, r4
   27584:	mov	r2, #96	; 0x60
   27588:	ldr	r0, [pc, #32]	; 275b0 <__flatcc_fb_gen_c_json_parser@@Base+0x1f90>
   2758c:	add	r3, pc, r3
   27590:	add	r0, pc, r0
   27594:	bl	14118 <__assert_fail@plt>
   27598:	andeq	r5, r4, r8, lsr #21
   2759c:	andeq	r0, r0, r0, lsr #1
   275a0:	andeq	sl, r1, r0, asr #17
   275a4:	andeq	sl, r1, ip, asr #16
   275a8:	muleq	r1, ip, r8
   275ac:	andeq	pc, r2, r4, lsl #11
   275b0:	andeq	r2, r2, r4, lsr #27
   275b4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   275b8:	mov	r2, #220	; 0xdc
   275bc:	mov	r5, r0
   275c0:	strd	r6, [sp, #8]
   275c4:	mov	r7, r1
   275c8:	mov	r1, #0
   275cc:	strd	r8, [sp, #16]
   275d0:	str	sl, [sp, #24]
   275d4:	str	lr, [sp, #28]
   275d8:	sub	sp, sp, #448	; 0x1c0
   275dc:	add	r4, sp, #8
   275e0:	add	r6, sp, #228	; 0xe4
   275e4:	ldr	sl, [pc, #500]	; 277e0 <__flatcc_fb_gen_c_json_parser@@Base+0x21c0>
   275e8:	mov	r0, r4
   275ec:	bl	1407c <memset@plt>
   275f0:	mov	r2, #220	; 0xdc
   275f4:	mov	r1, #0
   275f8:	mov	r0, r6
   275fc:	bl	1407c <memset@plt>
   27600:	mov	r2, r4
   27604:	mov	r1, r7
   27608:	ldr	r0, [r7, #12]
   2760c:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   27610:	ldr	r1, [pc, #460]	; 277e4 <__flatcc_fb_gen_c_json_parser@@Base+0x21c4>
   27614:	mov	r2, r4
   27618:	add	sl, pc, sl
   2761c:	ldr	r0, [r5]
   27620:	add	r1, pc, r1
   27624:	bl	14064 <fprintf@plt>
   27628:	ldr	r4, [r7, #20]
   2762c:	cmp	r4, #0
   27630:	beq	2771c <__flatcc_fb_gen_c_json_parser@@Base+0x20fc>
   27634:	ldr	r7, [pc, #428]	; 277e8 <__flatcc_fb_gen_c_json_parser@@Base+0x21c8>
   27638:	ldr	r9, [pc, #428]	; 277ec <__flatcc_fb_gen_c_json_parser@@Base+0x21cc>
   2763c:	ldr	r8, [pc, #428]	; 277f0 <__flatcc_fb_gen_c_json_parser@@Base+0x21d0>
   27640:	add	r7, pc, r7
   27644:	add	r9, pc, r9
   27648:	add	r8, pc, r8
   2764c:	b	27690 <__flatcc_fb_gen_c_json_parser@@Base+0x2070>
   27650:	ldr	r1, [r4, #16]
   27654:	mov	r2, r6
   27658:	ldr	r0, [r1, #12]
   2765c:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   27660:	ldr	r3, [r4, #16]
   27664:	ldrh	r3, [r3, #8]
   27668:	cmp	r3, #0
   2766c:	bne	2776c <__flatcc_fb_gen_c_json_parser@@Base+0x214c>
   27670:	mov	r3, r6
   27674:	mov	r1, r9
   27678:	ldr	r0, [r5]
   2767c:	ldr	r2, [r4, #48]	; 0x30
   27680:	bl	14064 <fprintf@plt>
   27684:	ldr	r4, [r4]
   27688:	cmp	r4, #0
   2768c:	beq	2771c <__flatcc_fb_gen_c_json_parser@@Base+0x20fc>
   27690:	ldrh	r3, [r4, #24]
   27694:	cmp	r3, #10
   27698:	beq	27700 <__flatcc_fb_gen_c_json_parser@@Base+0x20e0>
   2769c:	cmp	r3, #14
   276a0:	beq	27650 <__flatcc_fb_gen_c_json_parser@@Base+0x2030>
   276a4:	cmp	r3, #0
   276a8:	beq	27684 <__flatcc_fb_gen_c_json_parser@@Base+0x2064>
   276ac:	ldr	r2, [pc, #320]	; 277f4 <__flatcc_fb_gen_c_json_parser@@Base+0x21d4>
   276b0:	mov	r3, #251	; 0xfb
   276b4:	ldr	r0, [pc, #316]	; 277f8 <__flatcc_fb_gen_c_json_parser@@Base+0x21d8>
   276b8:	ldr	r4, [pc, #316]	; 277fc <__flatcc_fb_gen_c_json_parser@@Base+0x21dc>
   276bc:	ldr	r1, [pc, #316]	; 27800 <__flatcc_fb_gen_c_json_parser@@Base+0x21e0>
   276c0:	add	r0, pc, r0
   276c4:	ldr	ip, [sl, r2]
   276c8:	add	r4, pc, r4
   276cc:	str	r0, [sp]
   276d0:	mov	r2, r4
   276d4:	add	r1, pc, r1
   276d8:	ldr	r0, [ip]
   276dc:	bl	14064 <fprintf@plt>
   276e0:	ldr	r3, [pc, #284]	; 27804 <__flatcc_fb_gen_c_json_parser@@Base+0x21e4>
   276e4:	mov	r1, r4
   276e8:	mov	r2, #251	; 0xfb
   276ec:	ldr	r0, [pc, #276]	; 27808 <__flatcc_fb_gen_c_json_parser@@Base+0x21e8>
   276f0:	add	r3, pc, r3
   276f4:	add	r3, r3, #20
   276f8:	add	r0, pc, r0
   276fc:	bl	14118 <__assert_fail@plt>
   27700:	mov	r1, r7
   27704:	ldr	r0, [r5]
   27708:	ldr	r2, [r4, #48]	; 0x30
   2770c:	bl	14064 <fprintf@plt>
   27710:	ldr	r4, [r4]
   27714:	cmp	r4, #0
   27718:	bne	27690 <__flatcc_fb_gen_c_json_parser@@Base+0x2070>
   2771c:	ldr	r0, [pc, #232]	; 2780c <__flatcc_fb_gen_c_json_parser@@Base+0x21ec>
   27720:	mov	r2, #28
   27724:	mov	r1, #1
   27728:	ldr	r3, [r5]
   2772c:	add	r0, pc, r0
   27730:	bl	13fec <fwrite@plt>
   27734:	ldr	r0, [pc, #212]	; 27810 <__flatcc_fb_gen_c_json_parser@@Base+0x21f0>
   27738:	mov	r2, #9
   2773c:	mov	r1, #1
   27740:	ldr	r3, [r5]
   27744:	add	r0, pc, r0
   27748:	bl	13fec <fwrite@plt>
   2774c:	mov	r0, #0
   27750:	add	sp, sp, #448	; 0x1c0
   27754:	ldrd	r4, [sp]
   27758:	ldrd	r6, [sp, #8]
   2775c:	ldrd	r8, [sp, #16]
   27760:	ldr	sl, [sp, #24]
   27764:	add	sp, sp, #28
   27768:	pop	{pc}		; (ldr pc, [sp], #4)
   2776c:	cmp	r3, #1
   27770:	bne	2778c <__flatcc_fb_gen_c_json_parser@@Base+0x216c>
   27774:	mov	r3, r6
   27778:	mov	r1, r8
   2777c:	ldr	r0, [r5]
   27780:	ldr	r2, [r4, #48]	; 0x30
   27784:	bl	14064 <fprintf@plt>
   27788:	b	27684 <__flatcc_fb_gen_c_json_parser@@Base+0x2064>
   2778c:	ldr	r2, [pc, #96]	; 277f4 <__flatcc_fb_gen_c_json_parser@@Base+0x21d4>
   27790:	mov	r3, #240	; 0xf0
   27794:	ldr	r0, [pc, #120]	; 27814 <__flatcc_fb_gen_c_json_parser@@Base+0x21f4>
   27798:	ldr	r4, [pc, #120]	; 27818 <__flatcc_fb_gen_c_json_parser@@Base+0x21f8>
   2779c:	ldr	r1, [pc, #120]	; 2781c <__flatcc_fb_gen_c_json_parser@@Base+0x21fc>
   277a0:	add	r0, pc, r0
   277a4:	ldr	ip, [sl, r2]
   277a8:	add	r4, pc, r4
   277ac:	str	r0, [sp]
   277b0:	mov	r2, r4
   277b4:	add	r1, pc, r1
   277b8:	ldr	r0, [ip]
   277bc:	bl	14064 <fprintf@plt>
   277c0:	ldr	r3, [pc, #88]	; 27820 <__flatcc_fb_gen_c_json_parser@@Base+0x2200>
   277c4:	mov	r1, r4
   277c8:	mov	r2, #240	; 0xf0
   277cc:	ldr	r0, [pc, #80]	; 27824 <__flatcc_fb_gen_c_json_parser@@Base+0x2204>
   277d0:	add	r3, pc, r3
   277d4:	add	r3, r3, #20
   277d8:	add	r0, pc, r0
   277dc:	bl	14118 <__assert_fail@plt>
   277e0:	andeq	r5, r4, r0, ror #19
   277e4:	andeq	pc, r2, r4, asr r5	; <UNPREDICTABLE>
   277e8:	andeq	pc, r2, ip, lsl r7	; <UNPREDICTABLE>
   277ec:			; <UNDEFINED> instruction: 0x0002f5b4
   277f0:	andeq	pc, r2, r4, lsl r6	; <UNPREDICTABLE>
   277f4:	andeq	r0, r0, r0, lsr #1
   277f8:	andeq	pc, r2, r4, ror r6	; <UNPREDICTABLE>
   277fc:	strdeq	pc, [r2], -ip
   27800:	andeq	sl, r1, ip, lsr r7
   27804:	andeq	pc, r2, r0, lsr #8
   27808:	andeq	r2, r2, ip, lsr ip
   2780c:	andeq	pc, r2, r0, lsl #13
   27810:	andeq	pc, r2, r8, lsl #13
   27814:	muleq	r2, r4, r5
   27818:	andeq	pc, r2, ip, lsl r5	; <UNPREDICTABLE>
   2781c:	andeq	sl, r1, ip, asr r6
   27820:	andeq	pc, r2, r0, asr #6
   27824:	andeq	r2, r2, ip, asr fp
   27828:	strd	r4, [sp, #-36]!	; 0xffffffdc
   2782c:	mov	r2, #220	; 0xdc
   27830:	mov	r4, r1
   27834:	strd	r6, [sp, #8]
   27838:	mov	r1, #0
   2783c:	mov	r6, r0
   27840:	strd	r8, [sp, #16]
   27844:	strd	sl, [sp, #24]
   27848:	str	lr, [sp, #32]
   2784c:	sub	sp, sp, #476	; 0x1dc
   27850:	add	r7, sp, #32
   27854:	add	r8, sp, #252	; 0xfc
   27858:	mov	r0, r7
   2785c:	bl	1407c <memset@plt>
   27860:	mov	r2, #220	; 0xdc
   27864:	mov	r1, #0
   27868:	mov	r0, r8
   2786c:	bl	1407c <memset@plt>
   27870:	mov	r1, r4
   27874:	mov	r2, r7
   27878:	ldr	r0, [r4, #12]
   2787c:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   27880:	ldr	r1, [pc, #808]	; 27bb0 <__flatcc_fb_gen_c_json_parser@@Base+0x2590>
   27884:	mov	r2, r7
   27888:	ldr	r0, [r6]
   2788c:	add	r1, pc, r1
   27890:	bl	14064 <fprintf@plt>
   27894:	ldr	r4, [r4, #20]
   27898:	cmp	r4, #0
   2789c:	beq	27994 <__flatcc_fb_gen_c_json_parser@@Base+0x2374>
   278a0:	ldr	r3, [pc, #780]	; 27bb4 <__flatcc_fb_gen_c_json_parser@@Base+0x2594>
   278a4:	mov	r5, #0
   278a8:	ldr	r9, [pc, #776]	; 27bb8 <__flatcc_fb_gen_c_json_parser@@Base+0x2598>
   278ac:	add	r3, pc, r3
   278b0:	str	r3, [sp, #24]
   278b4:	add	r9, pc, r9
   278b8:	ldr	r3, [pc, #764]	; 27bbc <__flatcc_fb_gen_c_json_parser@@Base+0x259c>
   278bc:	add	r3, pc, r3
   278c0:	str	r3, [sp, #28]
   278c4:	ldrh	r3, [r4, #72]	; 0x48
   278c8:	tst	r3, #4
   278cc:	bne	27984 <__flatcc_fb_gen_c_json_parser@@Base+0x2364>
   278d0:	ldrh	r3, [r4, #24]
   278d4:	cmp	r3, #8
   278d8:	beq	279e4 <__flatcc_fb_gen_c_json_parser@@Base+0x23c4>
   278dc:	cmp	r3, #14
   278e0:	bne	27984 <__flatcc_fb_gen_c_json_parser@@Base+0x2364>
   278e4:	ldr	r1, [r4, #16]
   278e8:	mov	r2, r8
   278ec:	ldr	r0, [r1, #12]
   278f0:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   278f4:	ldr	r2, [r4, #16]
   278f8:	ldrh	r3, [r2, #8]
   278fc:	cmp	r3, #1
   27900:	beq	27a24 <__flatcc_fb_gen_c_json_parser@@Base+0x2404>
   27904:	cmp	r3, #3
   27908:	bne	27984 <__flatcc_fb_gen_c_json_parser@@Base+0x2364>
   2790c:	ldr	r3, [r2, #40]	; 0x28
   27910:	sub	r3, r3, #1
   27914:	cmp	r3, #10
   27918:	addls	pc, pc, r3, lsl #2
   2791c:	b	27bac <__flatcc_fb_gen_c_json_parser@@Base+0x258c>
   27920:	b	27b58 <__flatcc_fb_gen_c_json_parser@@Base+0x2538>
   27924:	b	27ae0 <__flatcc_fb_gen_c_json_parser@@Base+0x24c0>
   27928:	b	27b34 <__flatcc_fb_gen_c_json_parser@@Base+0x2514>
   2792c:	b	27b40 <__flatcc_fb_gen_c_json_parser@@Base+0x2520>
   27930:	b	27b4c <__flatcc_fb_gen_c_json_parser@@Base+0x252c>
   27934:	b	27b7c <__flatcc_fb_gen_c_json_parser@@Base+0x255c>
   27938:	b	27b88 <__flatcc_fb_gen_c_json_parser@@Base+0x2568>
   2793c:	b	27b94 <__flatcc_fb_gen_c_json_parser@@Base+0x2574>
   27940:	b	27ba0 <__flatcc_fb_gen_c_json_parser@@Base+0x2580>
   27944:	b	27b64 <__flatcc_fb_gen_c_json_parser@@Base+0x2544>
   27948:	b	27b70 <__flatcc_fb_gen_c_json_parser@@Base+0x2550>
   2794c:	ldr	r2, [pc, #620]	; 27bc0 <__flatcc_fb_gen_c_json_parser@@Base+0x25a0>
   27950:	add	r2, pc, r2
   27954:	ldr	lr, [r4, #4]
   27958:	mov	r3, r5
   2795c:	mov	r1, r9
   27960:	ldr	r0, [r6]
   27964:	ldr	ip, [lr, #4]
   27968:	str	ip, [sp, #16]
   2796c:	ldr	lr, [lr]
   27970:	str	ip, [sp, #8]
   27974:	str	lr, [sp, #12]
   27978:	ldrd	sl, [r4, #80]	; 0x50
   2797c:	strd	sl, [sp]
   27980:	bl	14064 <fprintf@plt>
   27984:	ldr	r4, [r4]
   27988:	add	r5, r5, #1
   2798c:	cmp	r4, #0
   27990:	bne	278c4 <__flatcc_fb_gen_c_json_parser@@Base+0x22a4>
   27994:	ldr	r0, [pc, #552]	; 27bc4 <__flatcc_fb_gen_c_json_parser@@Base+0x25a4>
   27998:	mov	r2, #3
   2799c:	mov	r1, #1
   279a0:	ldr	r3, [r6]
   279a4:	add	r0, pc, r0
   279a8:	bl	13fec <fwrite@plt>
   279ac:	ldr	r1, [pc, #532]	; 27bc8 <__flatcc_fb_gen_c_json_parser@@Base+0x25a8>
   279b0:	mov	r3, r7
   279b4:	mov	r2, r7
   279b8:	ldr	r0, [r6]
   279bc:	add	r1, pc, r1
   279c0:	bl	14064 <fprintf@plt>
   279c4:	mov	r0, #0
   279c8:	add	sp, sp, #476	; 0x1dc
   279cc:	ldrd	r4, [sp]
   279d0:	ldrd	r6, [sp, #8]
   279d4:	ldrd	r8, [sp, #16]
   279d8:	ldrd	sl, [sp, #24]
   279dc:	add	sp, sp, #32
   279e0:	pop	{pc}		; (ldr pc, [sp], #4)
   279e4:	ldr	r3, [r4, #16]
   279e8:	sub	r3, r3, #1
   279ec:	cmp	r3, #10
   279f0:	addls	pc, pc, r3, lsl #2
   279f4:	b	27bac <__flatcc_fb_gen_c_json_parser@@Base+0x258c>
   279f8:	b	27a70 <__flatcc_fb_gen_c_json_parser@@Base+0x2450>
   279fc:	b	27a78 <__flatcc_fb_gen_c_json_parser@@Base+0x2458>
   27a00:	b	27a84 <__flatcc_fb_gen_c_json_parser@@Base+0x2464>
   27a04:	b	27a8c <__flatcc_fb_gen_c_json_parser@@Base+0x246c>
   27a08:	b	27a98 <__flatcc_fb_gen_c_json_parser@@Base+0x2478>
   27a0c:	b	27aa4 <__flatcc_fb_gen_c_json_parser@@Base+0x2484>
   27a10:	b	27ab0 <__flatcc_fb_gen_c_json_parser@@Base+0x2490>
   27a14:	b	27abc <__flatcc_fb_gen_c_json_parser@@Base+0x249c>
   27a18:	b	27ac8 <__flatcc_fb_gen_c_json_parser@@Base+0x24a8>
   27a1c:	b	27ad4 <__flatcc_fb_gen_c_json_parser@@Base+0x24b4>
   27a20:	b	2794c <__flatcc_fb_gen_c_json_parser@@Base+0x232c>
   27a24:	ldr	ip, [r4, #4]
   27a28:	mov	r2, r5
   27a2c:	add	r5, r5, #1
   27a30:	ldr	r1, [pc, #404]	; 27bcc <__flatcc_fb_gen_c_json_parser@@Base+0x25ac>
   27a34:	ldr	r3, [ip, #4]
   27a38:	str	r8, [sp, #20]
   27a3c:	ldr	r0, [r6]
   27a40:	add	r1, pc, r1
   27a44:	str	r3, [sp, #16]
   27a48:	ldr	ip, [ip]
   27a4c:	str	r3, [sp, #8]
   27a50:	str	ip, [sp, #12]
   27a54:	ldrd	sl, [r4, #80]	; 0x50
   27a58:	strd	sl, [sp]
   27a5c:	bl	14064 <fprintf@plt>
   27a60:	ldr	r4, [r4]
   27a64:	cmp	r4, #0
   27a68:	bne	278c4 <__flatcc_fb_gen_c_json_parser@@Base+0x22a4>
   27a6c:	b	27994 <__flatcc_fb_gen_c_json_parser@@Base+0x2374>
   27a70:	ldr	r2, [sp, #28]
   27a74:	b	27954 <__flatcc_fb_gen_c_json_parser@@Base+0x2334>
   27a78:	ldr	r2, [pc, #336]	; 27bd0 <__flatcc_fb_gen_c_json_parser@@Base+0x25b0>
   27a7c:	add	r2, pc, r2
   27a80:	b	27954 <__flatcc_fb_gen_c_json_parser@@Base+0x2334>
   27a84:	ldr	r2, [sp, #24]
   27a88:	b	27954 <__flatcc_fb_gen_c_json_parser@@Base+0x2334>
   27a8c:	ldr	r2, [pc, #320]	; 27bd4 <__flatcc_fb_gen_c_json_parser@@Base+0x25b4>
   27a90:	add	r2, pc, r2
   27a94:	b	27954 <__flatcc_fb_gen_c_json_parser@@Base+0x2334>
   27a98:	ldr	r2, [pc, #312]	; 27bd8 <__flatcc_fb_gen_c_json_parser@@Base+0x25b8>
   27a9c:	add	r2, pc, r2
   27aa0:	b	27954 <__flatcc_fb_gen_c_json_parser@@Base+0x2334>
   27aa4:	ldr	r2, [pc, #304]	; 27bdc <__flatcc_fb_gen_c_json_parser@@Base+0x25bc>
   27aa8:	add	r2, pc, r2
   27aac:	b	27954 <__flatcc_fb_gen_c_json_parser@@Base+0x2334>
   27ab0:	ldr	r2, [pc, #296]	; 27be0 <__flatcc_fb_gen_c_json_parser@@Base+0x25c0>
   27ab4:	add	r2, pc, r2
   27ab8:	b	27954 <__flatcc_fb_gen_c_json_parser@@Base+0x2334>
   27abc:	ldr	r2, [pc, #288]	; 27be4 <__flatcc_fb_gen_c_json_parser@@Base+0x25c4>
   27ac0:	add	r2, pc, r2
   27ac4:	b	27954 <__flatcc_fb_gen_c_json_parser@@Base+0x2334>
   27ac8:	ldr	r2, [pc, #280]	; 27be8 <__flatcc_fb_gen_c_json_parser@@Base+0x25c8>
   27acc:	add	r2, pc, r2
   27ad0:	b	27954 <__flatcc_fb_gen_c_json_parser@@Base+0x2334>
   27ad4:	ldr	r2, [pc, #272]	; 27bec <__flatcc_fb_gen_c_json_parser@@Base+0x25cc>
   27ad8:	add	r2, pc, r2
   27adc:	b	27954 <__flatcc_fb_gen_c_json_parser@@Base+0x2334>
   27ae0:	ldr	r2, [pc, #264]	; 27bf0 <__flatcc_fb_gen_c_json_parser@@Base+0x25d0>
   27ae4:	add	r2, pc, r2
   27ae8:	ldr	lr, [r4, #4]
   27aec:	mov	r3, r5
   27af0:	add	r5, r5, #1
   27af4:	ldr	r1, [pc, #248]	; 27bf4 <__flatcc_fb_gen_c_json_parser@@Base+0x25d4>
   27af8:	ldr	ip, [lr, #4]
   27afc:	str	r8, [sp, #20]
   27b00:	ldr	r0, [r6]
   27b04:	add	r1, pc, r1
   27b08:	str	ip, [sp, #16]
   27b0c:	ldr	lr, [lr]
   27b10:	str	ip, [sp, #8]
   27b14:	str	lr, [sp, #12]
   27b18:	ldrd	sl, [r4, #80]	; 0x50
   27b1c:	strd	sl, [sp]
   27b20:	bl	14064 <fprintf@plt>
   27b24:	ldr	r4, [r4]
   27b28:	cmp	r4, #0
   27b2c:	bne	278c4 <__flatcc_fb_gen_c_json_parser@@Base+0x22a4>
   27b30:	b	27994 <__flatcc_fb_gen_c_json_parser@@Base+0x2374>
   27b34:	ldr	r2, [pc, #188]	; 27bf8 <__flatcc_fb_gen_c_json_parser@@Base+0x25d8>
   27b38:	add	r2, pc, r2
   27b3c:	b	27ae8 <__flatcc_fb_gen_c_json_parser@@Base+0x24c8>
   27b40:	ldr	r2, [pc, #180]	; 27bfc <__flatcc_fb_gen_c_json_parser@@Base+0x25dc>
   27b44:	add	r2, pc, r2
   27b48:	b	27ae8 <__flatcc_fb_gen_c_json_parser@@Base+0x24c8>
   27b4c:	ldr	r2, [pc, #172]	; 27c00 <__flatcc_fb_gen_c_json_parser@@Base+0x25e0>
   27b50:	add	r2, pc, r2
   27b54:	b	27ae8 <__flatcc_fb_gen_c_json_parser@@Base+0x24c8>
   27b58:	ldr	r2, [pc, #164]	; 27c04 <__flatcc_fb_gen_c_json_parser@@Base+0x25e4>
   27b5c:	add	r2, pc, r2
   27b60:	b	27ae8 <__flatcc_fb_gen_c_json_parser@@Base+0x24c8>
   27b64:	ldr	r2, [pc, #156]	; 27c08 <__flatcc_fb_gen_c_json_parser@@Base+0x25e8>
   27b68:	add	r2, pc, r2
   27b6c:	b	27ae8 <__flatcc_fb_gen_c_json_parser@@Base+0x24c8>
   27b70:	ldr	r2, [pc, #148]	; 27c0c <__flatcc_fb_gen_c_json_parser@@Base+0x25ec>
   27b74:	add	r2, pc, r2
   27b78:	b	27ae8 <__flatcc_fb_gen_c_json_parser@@Base+0x24c8>
   27b7c:	ldr	r2, [pc, #140]	; 27c10 <__flatcc_fb_gen_c_json_parser@@Base+0x25f0>
   27b80:	add	r2, pc, r2
   27b84:	b	27ae8 <__flatcc_fb_gen_c_json_parser@@Base+0x24c8>
   27b88:	ldr	r2, [pc, #132]	; 27c14 <__flatcc_fb_gen_c_json_parser@@Base+0x25f4>
   27b8c:	add	r2, pc, r2
   27b90:	b	27ae8 <__flatcc_fb_gen_c_json_parser@@Base+0x24c8>
   27b94:	ldr	r2, [pc, #124]	; 27c18 <__flatcc_fb_gen_c_json_parser@@Base+0x25f8>
   27b98:	add	r2, pc, r2
   27b9c:	b	27ae8 <__flatcc_fb_gen_c_json_parser@@Base+0x24c8>
   27ba0:	ldr	r2, [pc, #116]	; 27c1c <__flatcc_fb_gen_c_json_parser@@Base+0x25fc>
   27ba4:	add	r2, pc, r2
   27ba8:	b	27ae8 <__flatcc_fb_gen_c_json_parser@@Base+0x24c8>
   27bac:	bl	27538 <__flatcc_fb_gen_c_json_parser@@Base+0x1f18>
   27bb0:	andeq	pc, r2, ip, asr #10
   27bb4:	andeq	sl, r1, r0, ror #11
   27bb8:	andeq	pc, r2, r4, ror r5	; <UNPREDICTABLE>
   27bbc:			; <UNDEFINED> instruction: 0x0001a5b4
   27bc0:	andeq	sl, r1, r8, lsr #10
   27bc4:	ldrdeq	ip, [r2], -r0
   27bc8:	andeq	pc, r2, r4, lsl #11
   27bcc:	muleq	r2, r8, r4
   27bd0:	andeq	sl, r1, r4, lsr #8
   27bd4:	andeq	sl, r1, r8, lsr #8
   27bd8:	andeq	r2, r3, ip, ror r0
   27bdc:	andeq	sl, r1, r0, lsr #8
   27be0:	andeq	sl, r1, r4, lsr #8
   27be4:	muleq	r1, ip, r3
   27be8:	andeq	sl, r1, r4, lsr #8
   27bec:	andeq	sl, r1, r8, lsl #8
   27bf0:			; <UNDEFINED> instruction: 0x0001a3bc
   27bf4:	andeq	pc, r2, r0, ror r3	; <UNPREDICTABLE>
   27bf8:	andeq	sl, r1, r4, asr r3
   27bfc:	andeq	sl, r1, r4, ror r3
   27c00:	andeq	r1, r3, r8, asr #31
   27c04:	andeq	sl, r1, r4, lsl r3
   27c08:	andeq	sl, r1, r8, ror r3
   27c0c:	andeq	sl, r1, r4, lsl #6
   27c10:	andeq	sl, r1, r8, asr #6
   27c14:	andeq	sl, r1, ip, asr #6
   27c18:	andeq	sl, r1, r4, asr #5
   27c1c:	andeq	sl, r1, ip, asr #6
   27c20:	ldr	r3, [pc, #1640]	; 28290 <__flatcc_fb_gen_c_json_parser@@Base+0x2c70>
   27c24:	mov	r2, #220	; 0xdc
   27c28:	strd	r4, [sp, #-36]!	; 0xffffffdc
   27c2c:	mov	r4, r0
   27c30:	strd	r6, [sp, #8]
   27c34:	strd	r8, [sp, #16]
   27c38:	mov	r8, r1
   27c3c:	mov	r1, #0
   27c40:	strd	sl, [sp, #24]
   27c44:	str	lr, [sp, #32]
   27c48:	sub	sp, sp, #476	; 0x1dc
   27c4c:	add	r3, pc, r3
   27c50:	add	r9, sp, #32
   27c54:	mov	r0, r9
   27c58:	str	r3, [sp, #28]
   27c5c:	bl	1407c <memset@plt>
   27c60:	mov	r2, #220	; 0xdc
   27c64:	mov	r1, #0
   27c68:	add	r0, sp, #252	; 0xfc
   27c6c:	bl	1407c <memset@plt>
   27c70:	mov	r2, r9
   27c74:	mov	r1, r8
   27c78:	ldr	r0, [r8, #12]
   27c7c:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   27c80:	ldr	r3, [r8, #40]	; 0x28
   27c84:	sub	r3, r3, #1
   27c88:	cmp	r3, #10
   27c8c:	addls	pc, pc, r3, lsl #2
   27c90:	b	2828c <__flatcc_fb_gen_c_json_parser@@Base+0x2c6c>
   27c94:	b	27de4 <__flatcc_fb_gen_c_json_parser@@Base+0x27c4>
   27c98:	b	27e04 <__flatcc_fb_gen_c_json_parser@@Base+0x27e4>
   27c9c:	b	27e24 <__flatcc_fb_gen_c_json_parser@@Base+0x2804>
   27ca0:	b	27e44 <__flatcc_fb_gen_c_json_parser@@Base+0x2824>
   27ca4:	b	27e64 <__flatcc_fb_gen_c_json_parser@@Base+0x2844>
   27ca8:	b	27e80 <__flatcc_fb_gen_c_json_parser@@Base+0x2860>
   27cac:	b	27ea0 <__flatcc_fb_gen_c_json_parser@@Base+0x2880>
   27cb0:	b	27ec0 <__flatcc_fb_gen_c_json_parser@@Base+0x28a0>
   27cb4:	b	27ee0 <__flatcc_fb_gen_c_json_parser@@Base+0x28c0>
   27cb8:	b	27f00 <__flatcc_fb_gen_c_json_parser@@Base+0x28e0>
   27cbc:	b	27cc0 <__flatcc_fb_gen_c_json_parser@@Base+0x26a0>
   27cc0:	ldr	r3, [pc, #1484]	; 28294 <__flatcc_fb_gen_c_json_parser@@Base+0x2c74>
   27cc4:	ldr	r1, [pc, #1484]	; 28298 <__flatcc_fb_gen_c_json_parser@@Base+0x2c78>
   27cc8:	add	r3, pc, r3
   27ccc:	mov	sl, r3
   27cd0:	add	r1, pc, r1
   27cd4:	str	r3, [sp, #24]
   27cd8:	ldrh	r3, [r8, #92]	; 0x5c
   27cdc:	ldr	r0, [r4, #204]	; 0xcc
   27ce0:	tst	r3, #32
   27ce4:	bne	27f70 <__flatcc_fb_gen_c_json_parser@@Base+0x2950>
   27ce8:	mov	r3, r1
   27cec:	ldr	r1, [pc, #1448]	; 2829c <__flatcc_fb_gen_c_json_parser@@Base+0x2c7c>
   27cf0:	mov	r2, r9
   27cf4:	str	sl, [sp]
   27cf8:	add	r1, pc, r1
   27cfc:	bl	14064 <fprintf@plt>
   27d00:	ldr	r0, [pc, #1432]	; 282a0 <__flatcc_fb_gen_c_json_parser@@Base+0x2c80>
   27d04:	mov	r2, #18
   27d08:	mov	r1, #1
   27d0c:	ldr	r3, [r4, #204]	; 0xcc
   27d10:	add	r0, pc, r0
   27d14:	bl	13fec <fwrite@plt>
   27d18:	ldr	r5, [r8, #20]
   27d1c:	cmp	r5, #0
   27d20:	beq	27f4c <__flatcc_fb_gen_c_json_parser@@Base+0x292c>
   27d24:	ldr	r8, [pc, #1400]	; 282a4 <__flatcc_fb_gen_c_json_parser@@Base+0x2c84>
   27d28:	ldr	r7, [pc, #1400]	; 282a8 <__flatcc_fb_gen_c_json_parser@@Base+0x2c88>
   27d2c:	ldr	r6, [pc, #1400]	; 282ac <__flatcc_fb_gen_c_json_parser@@Base+0x2c8c>
   27d30:	add	r8, pc, r8
   27d34:	add	r7, pc, r7
   27d38:	add	r6, pc, r6
   27d3c:	b	27d70 <__flatcc_fb_gen_c_json_parser@@Base+0x2750>
   27d40:	ldr	ip, [r5, #4]
   27d44:	mov	r1, r7
   27d48:	ldrb	r2, [r5, #48]	; 0x30
   27d4c:	ldr	r0, [r4, #204]	; 0xcc
   27d50:	ldr	r3, [ip, #4]
   27d54:	str	r3, [sp, #4]
   27d58:	ldr	ip, [ip]
   27d5c:	str	ip, [sp]
   27d60:	bl	14064 <fprintf@plt>
   27d64:	ldr	r5, [r5]
   27d68:	cmp	r5, #0
   27d6c:	beq	27f4c <__flatcc_fb_gen_c_json_parser@@Base+0x292c>
   27d70:	ldrh	r3, [r5, #56]	; 0x38
   27d74:	cmp	r3, #5
   27d78:	beq	27f64 <__flatcc_fb_gen_c_json_parser@@Base+0x2944>
   27d7c:	cmp	r3, #6
   27d80:	beq	27d40 <__flatcc_fb_gen_c_json_parser@@Base+0x2720>
   27d84:	cmp	r3, #4
   27d88:	beq	27f1c <__flatcc_fb_gen_c_json_parser@@Base+0x28fc>
   27d8c:	ldr	r2, [pc, #1308]	; 282b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2c90>
   27d90:	mov	r3, #157	; 0x9d
   27d94:	ldr	r1, [sp, #28]
   27d98:	ldr	r0, [pc, #1300]	; 282b4 <__flatcc_fb_gen_c_json_parser@@Base+0x2c94>
   27d9c:	ldr	r4, [pc, #1300]	; 282b8 <__flatcc_fb_gen_c_json_parser@@Base+0x2c98>
   27da0:	ldr	ip, [r1, r2]
   27da4:	add	r0, pc, r0
   27da8:	ldr	r1, [pc, #1292]	; 282bc <__flatcc_fb_gen_c_json_parser@@Base+0x2c9c>
   27dac:	add	r4, pc, r4
   27db0:	str	r0, [sp]
   27db4:	mov	r2, r4
   27db8:	ldr	r0, [ip]
   27dbc:	add	r1, pc, r1
   27dc0:	bl	14064 <fprintf@plt>
   27dc4:	ldr	r3, [pc, #1268]	; 282c0 <__flatcc_fb_gen_c_json_parser@@Base+0x2ca0>
   27dc8:	mov	r1, r4
   27dcc:	mov	r2, #157	; 0x9d
   27dd0:	ldr	r0, [pc, #1260]	; 282c4 <__flatcc_fb_gen_c_json_parser@@Base+0x2ca4>
   27dd4:	add	r3, pc, r3
   27dd8:	add	r3, r3, #52	; 0x34
   27ddc:	add	r0, pc, r0
   27de0:	bl	14118 <__assert_fail@plt>
   27de4:	ldr	r3, [pc, #1244]	; 282c8 <__flatcc_fb_gen_c_json_parser@@Base+0x2ca8>
   27de8:	ldr	sl, [pc, #1244]	; 282cc <__flatcc_fb_gen_c_json_parser@@Base+0x2cac>
   27dec:	ldr	r1, [pc, #1244]	; 282d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2cb0>
   27df0:	add	r3, pc, r3
   27df4:	add	sl, pc, sl
   27df8:	str	r3, [sp, #24]
   27dfc:	add	r1, pc, r1
   27e00:	b	27cd8 <__flatcc_fb_gen_c_json_parser@@Base+0x26b8>
   27e04:	ldr	r3, [pc, #1224]	; 282d4 <__flatcc_fb_gen_c_json_parser@@Base+0x2cb4>
   27e08:	ldr	sl, [pc, #1224]	; 282d8 <__flatcc_fb_gen_c_json_parser@@Base+0x2cb8>
   27e0c:	ldr	r1, [pc, #1224]	; 282dc <__flatcc_fb_gen_c_json_parser@@Base+0x2cbc>
   27e10:	add	r3, pc, r3
   27e14:	add	sl, pc, sl
   27e18:	str	r3, [sp, #24]
   27e1c:	add	r1, pc, r1
   27e20:	b	27cd8 <__flatcc_fb_gen_c_json_parser@@Base+0x26b8>
   27e24:	ldr	r3, [pc, #1204]	; 282e0 <__flatcc_fb_gen_c_json_parser@@Base+0x2cc0>
   27e28:	ldr	sl, [pc, #1204]	; 282e4 <__flatcc_fb_gen_c_json_parser@@Base+0x2cc4>
   27e2c:	ldr	r1, [pc, #1204]	; 282e8 <__flatcc_fb_gen_c_json_parser@@Base+0x2cc8>
   27e30:	add	r3, pc, r3
   27e34:	add	sl, pc, sl
   27e38:	str	r3, [sp, #24]
   27e3c:	add	r1, pc, r1
   27e40:	b	27cd8 <__flatcc_fb_gen_c_json_parser@@Base+0x26b8>
   27e44:	ldr	r3, [pc, #1184]	; 282ec <__flatcc_fb_gen_c_json_parser@@Base+0x2ccc>
   27e48:	ldr	sl, [pc, #1184]	; 282f0 <__flatcc_fb_gen_c_json_parser@@Base+0x2cd0>
   27e4c:	ldr	r1, [pc, #1184]	; 282f4 <__flatcc_fb_gen_c_json_parser@@Base+0x2cd4>
   27e50:	add	r3, pc, r3
   27e54:	add	sl, pc, sl
   27e58:	str	r3, [sp, #24]
   27e5c:	add	r1, pc, r1
   27e60:	b	27cd8 <__flatcc_fb_gen_c_json_parser@@Base+0x26b8>
   27e64:	ldr	r3, [pc, #1164]	; 282f8 <__flatcc_fb_gen_c_json_parser@@Base+0x2cd8>
   27e68:	mov	r1, r4
   27e6c:	ldr	sl, [pc, #1160]	; 282fc <__flatcc_fb_gen_c_json_parser@@Base+0x2cdc>
   27e70:	add	r3, pc, r3
   27e74:	add	sl, pc, sl
   27e78:	str	r3, [sp, #24]
   27e7c:	b	27cd8 <__flatcc_fb_gen_c_json_parser@@Base+0x26b8>
   27e80:	ldr	r3, [pc, #1144]	; 28300 <__flatcc_fb_gen_c_json_parser@@Base+0x2ce0>
   27e84:	ldr	sl, [pc, #1144]	; 28304 <__flatcc_fb_gen_c_json_parser@@Base+0x2ce4>
   27e88:	ldr	r1, [pc, #1144]	; 28308 <__flatcc_fb_gen_c_json_parser@@Base+0x2ce8>
   27e8c:	add	r3, pc, r3
   27e90:	add	sl, pc, sl
   27e94:	str	r3, [sp, #24]
   27e98:	add	r1, pc, r1
   27e9c:	b	27cd8 <__flatcc_fb_gen_c_json_parser@@Base+0x26b8>
   27ea0:	ldr	r3, [pc, #1124]	; 2830c <__flatcc_fb_gen_c_json_parser@@Base+0x2cec>
   27ea4:	ldr	sl, [pc, #1124]	; 28310 <__flatcc_fb_gen_c_json_parser@@Base+0x2cf0>
   27ea8:	ldr	r1, [pc, #1124]	; 28314 <__flatcc_fb_gen_c_json_parser@@Base+0x2cf4>
   27eac:	add	r3, pc, r3
   27eb0:	add	sl, pc, sl
   27eb4:	str	r3, [sp, #24]
   27eb8:	add	r1, pc, r1
   27ebc:	b	27cd8 <__flatcc_fb_gen_c_json_parser@@Base+0x26b8>
   27ec0:	ldr	r3, [pc, #1104]	; 28318 <__flatcc_fb_gen_c_json_parser@@Base+0x2cf8>
   27ec4:	ldr	sl, [pc, #1104]	; 2831c <__flatcc_fb_gen_c_json_parser@@Base+0x2cfc>
   27ec8:	ldr	r1, [pc, #1104]	; 28320 <__flatcc_fb_gen_c_json_parser@@Base+0x2d00>
   27ecc:	add	r3, pc, r3
   27ed0:	add	sl, pc, sl
   27ed4:	str	r3, [sp, #24]
   27ed8:	add	r1, pc, r1
   27edc:	b	27cd8 <__flatcc_fb_gen_c_json_parser@@Base+0x26b8>
   27ee0:	ldr	r3, [pc, #1084]	; 28324 <__flatcc_fb_gen_c_json_parser@@Base+0x2d04>
   27ee4:	ldr	sl, [pc, #1084]	; 28328 <__flatcc_fb_gen_c_json_parser@@Base+0x2d08>
   27ee8:	ldr	r1, [pc, #1084]	; 2832c <__flatcc_fb_gen_c_json_parser@@Base+0x2d0c>
   27eec:	add	r3, pc, r3
   27ef0:	add	sl, pc, sl
   27ef4:	str	r3, [sp, #24]
   27ef8:	add	r1, pc, r1
   27efc:	b	27cd8 <__flatcc_fb_gen_c_json_parser@@Base+0x26b8>
   27f00:	ldr	r3, [pc, #1064]	; 28330 <__flatcc_fb_gen_c_json_parser@@Base+0x2d10>
   27f04:	ldr	r1, [pc, #1064]	; 28334 <__flatcc_fb_gen_c_json_parser@@Base+0x2d14>
   27f08:	add	r3, pc, r3
   27f0c:	mov	sl, r3
   27f10:	add	r1, pc, r1
   27f14:	str	r3, [sp, #24]
   27f18:	b	27cd8 <__flatcc_fb_gen_c_json_parser@@Base+0x26b8>
   27f1c:	ldr	lr, [r5, #4]
   27f20:	mov	r1, r6
   27f24:	ldr	ip, [lr, #4]
   27f28:	ldrd	r2, [r5, #48]	; 0x30
   27f2c:	ldr	r0, [r4, #204]	; 0xcc
   27f30:	str	ip, [sp, #8]
   27f34:	ldr	lr, [lr]
   27f38:	stm	sp, {ip, lr}
   27f3c:	bl	14064 <fprintf@plt>
   27f40:	ldr	r5, [r5]
   27f44:	cmp	r5, #0
   27f48:	bne	27d70 <__flatcc_fb_gen_c_json_parser@@Base+0x2750>
   27f4c:	ldr	r1, [pc, #996]	; 28338 <__flatcc_fb_gen_c_json_parser@@Base+0x2d18>
   27f50:	ldr	r2, [sp, #24]
   27f54:	ldr	r0, [r4, #204]	; 0xcc
   27f58:	add	r1, pc, r1
   27f5c:	bl	14064 <fprintf@plt>
   27f60:	b	281c4 <__flatcc_fb_gen_c_json_parser@@Base+0x2ba4>
   27f64:	mov	r1, r8
   27f68:	ldr	lr, [r5, #4]
   27f6c:	b	27f24 <__flatcc_fb_gen_c_json_parser@@Base+0x2904>
   27f70:	ldrd	r2, [r8, #112]	; 0x70
   27f74:	cmp	r3, #0
   27f78:	cmpeq	r2, #2
   27f7c:	beq	28270 <__flatcc_fb_gen_c_json_parser@@Base+0x2c50>
   27f80:	cmp	r3, #0
   27f84:	cmpeq	r2, #4
   27f88:	beq	28254 <__flatcc_fb_gen_c_json_parser@@Base+0x2c34>
   27f8c:	cmp	r3, #0
   27f90:	cmpeq	r2, #1
   27f94:	beq	28238 <__flatcc_fb_gen_c_json_parser@@Base+0x2c18>
   27f98:	ldr	fp, [pc, #924]	; 2833c <__flatcc_fb_gen_c_json_parser@@Base+0x2d1c>
   27f9c:	mvn	r6, #0
   27fa0:	mvn	r7, #0
   27fa4:	ldr	r5, [pc, #916]	; 28340 <__flatcc_fb_gen_c_json_parser@@Base+0x2d20>
   27fa8:	add	fp, pc, fp
   27fac:	add	r5, pc, r5
   27fb0:	ldr	ip, [r8, #20]
   27fb4:	cmp	ip, #0
   27fb8:	bne	27fd4 <__flatcc_fb_gen_c_json_parser@@Base+0x29b4>
   27fbc:	b	2800c <__flatcc_fb_gen_c_json_parser@@Base+0x29ec>
   27fc0:	cmp	r3, #4
   27fc4:	beq	28164 <__flatcc_fb_gen_c_json_parser@@Base+0x2b44>
   27fc8:	ldr	ip, [ip]
   27fcc:	cmp	ip, #0
   27fd0:	beq	2800c <__flatcc_fb_gen_c_json_parser@@Base+0x29ec>
   27fd4:	ldrh	r3, [ip, #56]	; 0x38
   27fd8:	cmp	r3, #5
   27fdc:	beq	28164 <__flatcc_fb_gen_c_json_parser@@Base+0x2b44>
   27fe0:	cmp	r3, #6
   27fe4:	bne	27fc0 <__flatcc_fb_gen_c_json_parser@@Base+0x29a0>
   27fe8:	ldrb	r2, [ip, #48]	; 0x30
   27fec:	mov	r3, #0
   27ff0:	ldr	ip, [ip]
   27ff4:	strd	r2, [sp, #16]
   27ff8:	ldr	r2, [sp, #16]
   27ffc:	cmp	ip, #0
   28000:	bic	r2, r6, r2
   28004:	mov	r6, r2
   28008:	bne	27fd4 <__flatcc_fb_gen_c_json_parser@@Base+0x29b4>
   2800c:	mov	r3, r1
   28010:	ldr	r1, [pc, #812]	; 28344 <__flatcc_fb_gen_c_json_parser@@Base+0x2d24>
   28014:	mov	r2, r9
   28018:	str	sl, [sp]
   2801c:	add	r1, pc, r1
   28020:	bl	14064 <fprintf@plt>
   28024:	mov	r1, sl
   28028:	mov	r0, fp
   2802c:	bl	13f8c <strcmp@plt>
   28030:	cmp	r0, #0
   28034:	beq	281fc <__flatcc_fb_gen_c_json_parser@@Base+0x2bdc>
   28038:	ldr	r1, [pc, #776]	; 28348 <__flatcc_fb_gen_c_json_parser@@Base+0x2d28>
   2803c:	mov	r3, fp
   28040:	mov	r2, fp
   28044:	ldr	r0, [r4, #204]	; 0xcc
   28048:	add	r1, pc, r1
   2804c:	bl	14064 <fprintf@plt>
   28050:	ldr	r0, [pc, #756]	; 2834c <__flatcc_fb_gen_c_json_parser@@Base+0x2d2c>
   28054:	mov	r2, #54	; 0x36
   28058:	mov	r1, #1
   2805c:	ldr	r3, [r4, #204]	; 0xcc
   28060:	add	r0, pc, r0
   28064:	bl	13fec <fwrite@plt>
   28068:	mov	r0, #10
   2806c:	ldr	r1, [r4, #204]	; 0xcc
   28070:	bl	140c4 <fputc@plt>
   28074:	orrs	r3, r6, r7
   28078:	bne	28214 <__flatcc_fb_gen_c_json_parser@@Base+0x2bf4>
   2807c:	ldr	r0, [pc, #716]	; 28350 <__flatcc_fb_gen_c_json_parser@@Base+0x2d30>
   28080:	mov	r2, #59	; 0x3b
   28084:	mov	r1, #1
   28088:	ldr	r3, [r4, #204]	; 0xcc
   2808c:	add	r0, pc, r0
   28090:	bl	13fec <fwrite@plt>
   28094:	ldr	r6, [r8, #20]
   28098:	cmp	r6, #0
   2809c:	beq	281ac <__flatcc_fb_gen_c_json_parser@@Base+0x2b8c>
   280a0:	ldr	r9, [pc, #684]	; 28354 <__flatcc_fb_gen_c_json_parser@@Base+0x2d34>
   280a4:	ldr	r8, [pc, #684]	; 28358 <__flatcc_fb_gen_c_json_parser@@Base+0x2d38>
   280a8:	ldr	r7, [pc, #684]	; 2835c <__flatcc_fb_gen_c_json_parser@@Base+0x2d3c>
   280ac:	add	r9, pc, r9
   280b0:	add	r8, pc, r8
   280b4:	add	r7, pc, r7
   280b8:	b	280f0 <__flatcc_fb_gen_c_json_parser@@Base+0x2ad0>
   280bc:	ldr	lr, [r6, #4]
   280c0:	mov	r3, #0
   280c4:	mov	r1, r8
   280c8:	ldrb	r2, [r6, #48]	; 0x30
   280cc:	ldr	r0, [r4, #204]	; 0xcc
   280d0:	ldr	ip, [lr, #4]
   280d4:	str	ip, [sp, #12]
   280d8:	ldr	lr, [lr]
   280dc:	stm	sp, {r5, ip, lr}
   280e0:	bl	14064 <fprintf@plt>
   280e4:	ldr	r6, [r6]
   280e8:	cmp	r6, #0
   280ec:	beq	281ac <__flatcc_fb_gen_c_json_parser@@Base+0x2b8c>
   280f0:	ldrh	r3, [r6, #56]	; 0x38
   280f4:	cmp	r3, #5
   280f8:	beq	2817c <__flatcc_fb_gen_c_json_parser@@Base+0x2b5c>
   280fc:	cmp	r3, #6
   28100:	beq	280bc <__flatcc_fb_gen_c_json_parser@@Base+0x2a9c>
   28104:	cmp	r3, #4
   28108:	beq	28194 <__flatcc_fb_gen_c_json_parser@@Base+0x2b74>
   2810c:	ldr	r2, [pc, #412]	; 282b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2c90>
   28110:	mov	r3, #134	; 0x86
   28114:	ldr	r1, [sp, #28]
   28118:	ldr	r0, [pc, #576]	; 28360 <__flatcc_fb_gen_c_json_parser@@Base+0x2d40>
   2811c:	ldr	r4, [pc, #576]	; 28364 <__flatcc_fb_gen_c_json_parser@@Base+0x2d44>
   28120:	ldr	ip, [r1, r2]
   28124:	add	r0, pc, r0
   28128:	ldr	r1, [pc, #568]	; 28368 <__flatcc_fb_gen_c_json_parser@@Base+0x2d48>
   2812c:	add	r4, pc, r4
   28130:	str	r0, [sp]
   28134:	mov	r2, r4
   28138:	ldr	r0, [ip]
   2813c:	add	r1, pc, r1
   28140:	bl	14064 <fprintf@plt>
   28144:	ldr	r3, [pc, #544]	; 2836c <__flatcc_fb_gen_c_json_parser@@Base+0x2d4c>
   28148:	mov	r1, r4
   2814c:	mov	r2, #134	; 0x86
   28150:	ldr	r0, [pc, #536]	; 28370 <__flatcc_fb_gen_c_json_parser@@Base+0x2d50>
   28154:	add	r3, pc, r3
   28158:	add	r3, r3, #52	; 0x34
   2815c:	add	r0, pc, r0
   28160:	bl	14118 <__assert_fail@plt>
   28164:	ldrd	r2, [ip, #48]	; 0x30
   28168:	bic	r2, r6, r2
   2816c:	bic	r3, r7, r3
   28170:	mov	r6, r2
   28174:	mov	r7, r3
   28178:	b	27fc8 <__flatcc_fb_gen_c_json_parser@@Base+0x29a8>
   2817c:	ldr	lr, [r6, #4]
   28180:	mov	r1, r9
   28184:	ldrd	r2, [r6, #48]	; 0x30
   28188:	ldr	r0, [r4, #204]	; 0xcc
   2818c:	ldr	ip, [lr, #4]
   28190:	b	280d4 <__flatcc_fb_gen_c_json_parser@@Base+0x2ab4>
   28194:	ldr	lr, [r6, #4]
   28198:	mov	r1, r7
   2819c:	ldrd	r2, [r6, #48]	; 0x30
   281a0:	ldr	r0, [r4, #204]	; 0xcc
   281a4:	ldr	ip, [lr, #4]
   281a8:	b	280d4 <__flatcc_fb_gen_c_json_parser@@Base+0x2ab4>
   281ac:	ldr	r0, [pc, #448]	; 28374 <__flatcc_fb_gen_c_json_parser@@Base+0x2d54>
   281b0:	mov	r2, #59	; 0x3b
   281b4:	mov	r1, #1
   281b8:	ldr	r3, [r4, #204]	; 0xcc
   281bc:	add	r0, pc, r0
   281c0:	bl	13fec <fwrite@plt>
   281c4:	ldr	r0, [pc, #428]	; 28378 <__flatcc_fb_gen_c_json_parser@@Base+0x2d58>
   281c8:	mov	r2, #3
   281cc:	mov	r1, #1
   281d0:	ldr	r3, [r4, #204]	; 0xcc
   281d4:	add	r0, pc, r0
   281d8:	bl	13fec <fwrite@plt>
   281dc:	mov	r0, #0
   281e0:	add	sp, sp, #476	; 0x1dc
   281e4:	ldrd	r4, [sp]
   281e8:	ldrd	r6, [sp, #8]
   281ec:	ldrd	r8, [sp, #16]
   281f0:	ldrd	sl, [sp, #24]
   281f4:	add	sp, sp, #32
   281f8:	pop	{pc}		; (ldr pc, [sp], #4)
   281fc:	ldr	r1, [pc, #376]	; 2837c <__flatcc_fb_gen_c_json_parser@@Base+0x2d5c>
   28200:	mov	r2, fp
   28204:	ldr	r0, [r4, #204]	; 0xcc
   28208:	add	r1, pc, r1
   2820c:	bl	14064 <fprintf@plt>
   28210:	b	28050 <__flatcc_fb_gen_c_json_parser@@Base+0x2a30>
   28214:	ldr	r1, [pc, #356]	; 28380 <__flatcc_fb_gen_c_json_parser@@Base+0x2d60>
   28218:	mov	r2, r6
   2821c:	mov	r3, r7
   28220:	ldr	r0, [sp, #24]
   28224:	add	r1, pc, r1
   28228:	str	r0, [sp]
   2822c:	ldr	r0, [r4, #204]	; 0xcc
   28230:	bl	14064 <fprintf@plt>
   28234:	b	2807c <__flatcc_fb_gen_c_json_parser@@Base+0x2a5c>
   28238:	ldr	fp, [pc, #324]	; 28384 <__flatcc_fb_gen_c_json_parser@@Base+0x2d64>
   2823c:	mov	r6, #255	; 0xff
   28240:	mov	r7, #0
   28244:	ldr	r5, [pc, #316]	; 28388 <__flatcc_fb_gen_c_json_parser@@Base+0x2d68>
   28248:	add	fp, pc, fp
   2824c:	add	r5, pc, r5
   28250:	b	27fb0 <__flatcc_fb_gen_c_json_parser@@Base+0x2990>
   28254:	ldr	fp, [pc, #304]	; 2838c <__flatcc_fb_gen_c_json_parser@@Base+0x2d6c>
   28258:	mvn	r6, #0
   2825c:	mov	r7, #0
   28260:	ldr	r5, [pc, #296]	; 28390 <__flatcc_fb_gen_c_json_parser@@Base+0x2d70>
   28264:	add	fp, pc, fp
   28268:	add	r5, pc, r5
   2826c:	b	27fb0 <__flatcc_fb_gen_c_json_parser@@Base+0x2990>
   28270:	ldr	fp, [pc, #284]	; 28394 <__flatcc_fb_gen_c_json_parser@@Base+0x2d74>
   28274:	movw	r6, #65535	; 0xffff
   28278:	mov	r7, #0
   2827c:	ldr	r5, [pc, #276]	; 28398 <__flatcc_fb_gen_c_json_parser@@Base+0x2d78>
   28280:	add	fp, pc, fp
   28284:	add	r5, pc, r5
   28288:	b	27fb0 <__flatcc_fb_gen_c_json_parser@@Base+0x2990>
   2828c:	bl	27538 <__flatcc_fb_gen_c_json_parser@@Base+0x1f18>
   28290:	andeq	r5, r4, ip, lsr #7
   28294:			; <UNDEFINED> instruction: 0x0001a1b0
   28298:	andeq	r3, r2, r8, ror #29
   2829c:			; <UNDEFINED> instruction: 0x0002f5bc
   282a0:	andeq	pc, r2, ip, ror #11
   282a4:	andeq	pc, r2, ip, ror r4	; <UNPREDICTABLE>
   282a8:	andeq	pc, r2, r0, lsl #10
   282ac:			; <UNDEFINED> instruction: 0x0002f4b8
   282b0:	andeq	r0, r0, r0, lsr #1
   282b4:	andeq	pc, r2, ip, asr #7
   282b8:	andeq	lr, r2, r8, lsl pc
   282bc:	andeq	sl, r1, r4, asr r0
   282c0:	andeq	lr, r2, ip, lsr sp
   282c4:	andeq	r2, r2, r8, asr r5
   282c8:	andeq	sl, r1, r0, lsl #1
   282cc:	andeq	sl, r1, r0, ror r0
   282d0:			; <UNDEFINED> instruction: 0x00023dbc
   282d4:	muleq	r1, r0, r0
   282d8:	andeq	sl, r1, r0, lsl #1
   282dc:	muleq	r2, ip, sp
   282e0:	andeq	sl, r1, ip, asr r0
   282e4:	andeq	sl, r1, ip, asr #32
   282e8:	andeq	r3, r2, ip, ror sp
   282ec:	andeq	sl, r1, r8, rrx
   282f0:	andeq	sl, r1, ip, asr r0
   282f4:	andeq	r3, r2, ip, asr sp
   282f8:	andeq	r1, r3, r8, lsr #25
   282fc:	andeq	sl, r1, r4, lsr r0
   28300:	andeq	sl, r1, ip, lsr r0
   28304:	andeq	sl, r1, r0, lsr r0
   28308:	andeq	r3, r2, r0, lsr #26
   2830c:	andeq	sl, r1, ip, lsr #32
   28310:	andeq	sl, r1, r0, lsr #32
   28314:	andeq	r3, r2, r0, lsl #26
   28318:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   2831c:	andeq	r9, r1, r4, lsl #31
   28320:	andeq	r3, r2, r0, ror #25
   28324:	andeq	sl, r1, r4
   28328:	strdeq	r9, [r1], -r8
   2832c:	andeq	r3, r2, r0, asr #25
   28330:	ldrdeq	r9, [r1], -r8
   28334:	andeq	r3, r2, r8, lsr #25
   28338:	andeq	pc, r2, r0, lsr #6
   2833c:			; <UNDEFINED> instruction: 0x00019ebc
   28340:	andeq	pc, r2, ip, rrx
   28344:	muleq	r2, r8, r2
   28348:	ldrdeq	lr, [r2], -ip
   2834c:	andeq	lr, r2, r8, ror #31
   28350:	andeq	pc, r2, r8, asr r0	; <UNPREDICTABLE>
   28354:	andeq	pc, r2, r4, ror r0	; <UNPREDICTABLE>
   28358:	andeq	pc, r2, r0, ror r0	; <UNPREDICTABLE>
   2835c:	andeq	pc, r2, ip, rrx
   28360:	andeq	pc, r2, ip, asr #32
   28364:	muleq	r2, r8, fp
   28368:	ldrdeq	r9, [r1], -r4
   2836c:			; <UNDEFINED> instruction: 0x0002e9bc
   28370:	ldrdeq	r2, [r2], -r8
   28374:	andeq	lr, r2, r8, lsr #30
   28378:	andeq	fp, r2, r0, lsr #23
   2837c:	andeq	lr, r2, r0, lsr lr
   28380:	andeq	lr, r2, ip, asr lr
   28384:	andeq	r9, r1, r8, ror #24
   28388:	ldrdeq	lr, [r2], -r0
   2838c:	andeq	r9, r1, r0, lsr ip
   28390:			; <UNDEFINED> instruction: 0x0002edb8
   28394:	andeq	r9, r1, r0, lsl #24
   28398:	muleq	r2, r8, sp
   2839c:	ldr	r3, [pc, #2712]	; 28e3c <__flatcc_fb_gen_c_json_parser@@Base+0x381c>
   283a0:	mov	r2, #220	; 0xdc
   283a4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   283a8:	strd	r6, [sp, #8]
   283ac:	strd	r8, [sp, #16]
   283b0:	mov	r9, r1
   283b4:	mov	r8, r0
   283b8:	strd	sl, [sp, #24]
   283bc:	mov	r1, #0
   283c0:	str	lr, [sp, #32]
   283c4:	sub	sp, sp, #516	; 0x204
   283c8:	add	r3, pc, r3
   283cc:	add	r4, sp, #72	; 0x48
   283d0:	add	fp, sp, #292	; 0x124
   283d4:	mov	r0, r4
   283d8:	str	r4, [sp, #56]	; 0x38
   283dc:	str	r3, [sp, #68]	; 0x44
   283e0:	bl	1407c <memset@plt>
   283e4:	mov	r2, #220	; 0xdc
   283e8:	mov	r1, #0
   283ec:	mov	r0, fp
   283f0:	bl	1407c <memset@plt>
   283f4:	mov	r2, r4
   283f8:	mov	r1, r9
   283fc:	ldr	r0, [r9, #12]
   28400:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   28404:	ldrd	r4, [r9, #96]	; 0x60
   28408:	mov	r1, #4
   2840c:	mov	r0, r4
   28410:	bl	13f74 <calloc@plt>
   28414:	orrs	r3, r4, r5
   28418:	str	r0, [sp, #52]	; 0x34
   2841c:	movne	r3, #1
   28420:	moveq	r3, #0
   28424:	cmp	r0, #0
   28428:	movne	r3, #0
   2842c:	cmp	r3, #0
   28430:	bne	28d34 <__flatcc_fb_gen_c_json_parser@@Base+0x3714>
   28434:	ldr	r3, [r9, #20]
   28438:	cmp	r3, #0
   2843c:	ldrne	r1, [sp, #52]	; 0x34
   28440:	beq	28458 <__flatcc_fb_gen_c_json_parser@@Base+0x2e38>
   28444:	ldr	r2, [r3, #96]	; 0x60
   28448:	str	r3, [r1, r2, lsl #2]
   2844c:	ldr	r3, [r3]
   28450:	cmp	r3, #0
   28454:	bne	28444 <__flatcc_fb_gen_c_json_parser@@Base+0x2e24>
   28458:	ldr	r1, [pc, #2528]	; 28e40 <__flatcc_fb_gen_c_json_parser@@Base+0x3820>
   2845c:	ldr	r0, [r8]
   28460:	ldr	r2, [sp, #56]	; 0x38
   28464:	add	r1, pc, r1
   28468:	bl	14064 <fprintf@plt>
   2846c:	ldrd	r0, [r9, #96]	; 0x60
   28470:	orrs	r3, r0, r1
   28474:	beq	28c24 <__flatcc_fb_gen_c_json_parser@@Base+0x3604>
   28478:	ldr	r3, [sp, #52]	; 0x34
   2847c:	mov	r4, #0
   28480:	mov	r5, #0
   28484:	ldr	sl, [pc, #2488]	; 28e44 <__flatcc_fb_gen_c_json_parser@@Base+0x3824>
   28488:	sub	r7, r3, #4
   2848c:	ldr	r3, [pc, #2484]	; 28e48 <__flatcc_fb_gen_c_json_parser@@Base+0x3828>
   28490:	add	sl, pc, sl
   28494:	strd	sl, [sp, #44]	; 0x2c
   28498:	add	r3, pc, r3
   2849c:	str	r3, [sp, #60]	; 0x3c
   284a0:	ldr	r3, [pc, #2468]	; 28e4c <__flatcc_fb_gen_c_json_parser@@Base+0x382c>
   284a4:	add	r3, pc, r3
   284a8:	str	r3, [sp, #64]	; 0x40
   284ac:	ldr	r3, [r8]
   284b0:	ldr	r6, [r7, #4]!
   284b4:	cmp	r6, #0
   284b8:	beq	285b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2f90>
   284bc:	ldrh	r2, [r6, #72]	; 0x48
   284c0:	tst	r2, #4
   284c4:	bne	285b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2f90>
   284c8:	mov	r2, #5
   284cc:	mov	r1, #1
   284d0:	ldr	r0, [sp, #44]	; 0x2c
   284d4:	bl	13fec <fwrite@plt>
   284d8:	ldrh	r3, [r6, #24]
   284dc:	sub	r3, r3, #7
   284e0:	cmp	r3, #8
   284e4:	addls	pc, pc, r3, lsl #2
   284e8:	b	285a8 <__flatcc_fb_gen_c_json_parser@@Base+0x2f88>
   284ec:	b	28678 <__flatcc_fb_gen_c_json_parser@@Base+0x3058>
   284f0:	b	28638 <__flatcc_fb_gen_c_json_parser@@Base+0x3018>
   284f4:	b	28624 <__flatcc_fb_gen_c_json_parser@@Base+0x3004>
   284f8:	b	28580 <__flatcc_fb_gen_c_json_parser@@Base+0x2f60>
   284fc:	b	285a8 <__flatcc_fb_gen_c_json_parser@@Base+0x2f88>
   28500:	b	285a8 <__flatcc_fb_gen_c_json_parser@@Base+0x2f88>
   28504:	b	285a8 <__flatcc_fb_gen_c_json_parser@@Base+0x2f88>
   28508:	b	28548 <__flatcc_fb_gen_c_json_parser@@Base+0x2f28>
   2850c:	b	28510 <__flatcc_fb_gen_c_json_parser@@Base+0x2ef0>
   28510:	ldr	r1, [r6, #16]
   28514:	ldr	r2, [sp, #48]	; 0x30
   28518:	ldr	r0, [r1, #12]
   2851c:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   28520:	ldr	r2, [r6, #16]
   28524:	ldrh	r3, [r2, #8]
   28528:	cmp	r3, #4
   2852c:	addls	pc, pc, r3, lsl #2
   28530:	b	28cdc <__flatcc_fb_gen_c_json_parser@@Base+0x36bc>
   28534:	b	2878c <__flatcc_fb_gen_c_json_parser@@Base+0x316c>
   28538:	b	28750 <__flatcc_fb_gen_c_json_parser@@Base+0x3130>
   2853c:	b	28cdc <__flatcc_fb_gen_c_json_parser@@Base+0x36bc>
   28540:	b	28714 <__flatcc_fb_gen_c_json_parser@@Base+0x30f4>
   28544:	b	286e0 <__flatcc_fb_gen_c_json_parser@@Base+0x30c0>
   28548:	ldr	r1, [r6, #16]
   2854c:	ldr	r2, [sp, #48]	; 0x30
   28550:	ldr	r0, [r1, #12]
   28554:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   28558:	ldr	r2, [r6, #16]
   2855c:	ldrh	r3, [r2, #8]
   28560:	cmp	r3, #4
   28564:	addls	pc, pc, r3, lsl #2
   28568:	b	28c84 <__flatcc_fb_gen_c_json_parser@@Base+0x3664>
   2856c:	b	28814 <__flatcc_fb_gen_c_json_parser@@Base+0x31f4>
   28570:	b	28800 <__flatcc_fb_gen_c_json_parser@@Base+0x31e0>
   28574:	b	28c84 <__flatcc_fb_gen_c_json_parser@@Base+0x3664>
   28578:	b	287c0 <__flatcc_fb_gen_c_json_parser@@Base+0x31a0>
   2857c:	b	287ac <__flatcc_fb_gen_c_json_parser@@Base+0x318c>
   28580:	ldr	r1, [pc, #2248]	; 28e50 <__flatcc_fb_gen_c_json_parser@@Base+0x3830>
   28584:	ldr	lr, [r6, #4]
   28588:	ldrd	r2, [r6, #96]	; 0x60
   2858c:	add	r1, pc, r1
   28590:	ldr	ip, [lr, #4]
   28594:	ldr	r0, [r8]
   28598:	str	ip, [sp, #8]
   2859c:	ldr	lr, [lr]
   285a0:	stm	sp, {ip, lr}
   285a4:	bl	14064 <fprintf@plt>
   285a8:	ldr	r3, [r8]
   285ac:	ldrd	r0, [r9, #96]	; 0x60
   285b0:	adds	r4, r4, #1
   285b4:	adc	r5, r5, #0
   285b8:	cmp	r5, r1
   285bc:	cmpeq	r4, r0
   285c0:	bcc	284b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2e90>
   285c4:	ldr	r0, [pc, #2184]	; 28e54 <__flatcc_fb_gen_c_json_parser@@Base+0x3834>
   285c8:	mov	r2, #4
   285cc:	mov	r1, #1
   285d0:	add	r0, pc, r0
   285d4:	bl	13fec <fwrite@plt>
   285d8:	ldr	r1, [pc, #2168]	; 28e58 <__flatcc_fb_gen_c_json_parser@@Base+0x3838>
   285dc:	ldr	r3, [sp, #56]	; 0x38
   285e0:	ldr	r0, [r8]
   285e4:	add	r1, pc, r1
   285e8:	mov	r2, r3
   285ec:	bl	14064 <fprintf@plt>
   285f0:	ldr	r3, [sp, #52]	; 0x34
   285f4:	cmp	r3, #0
   285f8:	beq	28604 <__flatcc_fb_gen_c_json_parser@@Base+0x2fe4>
   285fc:	mov	r0, r3
   28600:	bl	13fa4 <free@plt>
   28604:	mov	r0, #0
   28608:	add	sp, sp, #516	; 0x204
   2860c:	ldrd	r4, [sp]
   28610:	ldrd	r6, [sp, #8]
   28614:	ldrd	r8, [sp, #16]
   28618:	ldrd	sl, [sp, #24]
   2861c:	add	sp, sp, #32
   28620:	pop	{pc}		; (ldr pc, [sp], #4)
   28624:	ldr	r1, [pc, #2096]	; 28e5c <__flatcc_fb_gen_c_json_parser@@Base+0x383c>
   28628:	ldr	lr, [r6, #4]
   2862c:	ldrd	r2, [r6, #96]	; 0x60
   28630:	add	r1, pc, r1
   28634:	b	28590 <__flatcc_fb_gen_c_json_parser@@Base+0x2f70>
   28638:	ldr	r3, [r6, #16]
   2863c:	sub	r3, r3, #1
   28640:	cmp	r3, #10
   28644:	addls	pc, pc, r3, lsl #2
   28648:	b	28de8 <__flatcc_fb_gen_c_json_parser@@Base+0x37c8>
   2864c:	b	289bc <__flatcc_fb_gen_c_json_parser@@Base+0x339c>
   28650:	b	289b0 <__flatcc_fb_gen_c_json_parser@@Base+0x3390>
   28654:	b	289a4 <__flatcc_fb_gen_c_json_parser@@Base+0x3384>
   28658:	b	28998 <__flatcc_fb_gen_c_json_parser@@Base+0x3378>
   2865c:	b	2898c <__flatcc_fb_gen_c_json_parser@@Base+0x336c>
   28660:	b	28980 <__flatcc_fb_gen_c_json_parser@@Base+0x3360>
   28664:	b	28974 <__flatcc_fb_gen_c_json_parser@@Base+0x3354>
   28668:	b	28968 <__flatcc_fb_gen_c_json_parser@@Base+0x3348>
   2866c:	b	2895c <__flatcc_fb_gen_c_json_parser@@Base+0x333c>
   28670:	b	28950 <__flatcc_fb_gen_c_json_parser@@Base+0x3330>
   28674:	b	28894 <__flatcc_fb_gen_c_json_parser@@Base+0x3274>
   28678:	ldrh	r3, [r6, #72]	; 0x48
   2867c:	tst	r3, #3072	; 0xc00
   28680:	bne	28828 <__flatcc_fb_gen_c_json_parser@@Base+0x3208>
   28684:	ldr	r1, [r6, #104]	; 0x68
   28688:	cmp	r1, #0
   2868c:	beq	28854 <__flatcc_fb_gen_c_json_parser@@Base+0x3234>
   28690:	ldr	sl, [sp, #48]	; 0x30
   28694:	ldr	r0, [r1, #12]
   28698:	mov	r2, sl
   2869c:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   286a0:	ldr	lr, [r6, #4]
   286a4:	ldr	r3, [r6, #104]	; 0x68
   286a8:	ldrh	r3, [r3, #8]
   286ac:	cmp	r3, #0
   286b0:	ldrd	r2, [r6, #96]	; 0x60
   286b4:	bne	28848 <__flatcc_fb_gen_c_json_parser@@Base+0x3228>
   286b8:	ldr	r1, [pc, #1952]	; 28e60 <__flatcc_fb_gen_c_json_parser@@Base+0x3840>
   286bc:	ldr	ip, [lr, #4]
   286c0:	str	sl, [sp, #12]
   286c4:	add	r1, pc, r1
   286c8:	ldr	r0, [r8]
   286cc:	str	ip, [sp, #8]
   286d0:	ldr	lr, [lr]
   286d4:	stm	sp, {ip, lr}
   286d8:	bl	14064 <fprintf@plt>
   286dc:	b	285a8 <__flatcc_fb_gen_c_json_parser@@Base+0x2f88>
   286e0:	ldr	lr, [r6, #4]
   286e4:	ldr	r1, [sp, #60]	; 0x3c
   286e8:	ldrd	r2, [r6, #96]	; 0x60
   286ec:	ldr	ip, [lr, #4]
   286f0:	ldr	r0, [sp, #48]	; 0x30
   286f4:	str	r0, [sp, #12]
   286f8:	str	r0, [sp, #16]
   286fc:	ldr	r0, [r8]
   28700:	str	ip, [sp, #8]
   28704:	ldr	lr, [lr]
   28708:	stm	sp, {ip, lr}
   2870c:	bl	14064 <fprintf@plt>
   28710:	b	285a8 <__flatcc_fb_gen_c_json_parser@@Base+0x2f88>
   28714:	sub	r2, r2, #1
   28718:	cmp	r2, #10
   2871c:	addls	pc, pc, r2, lsl #2
   28720:	b	28de4 <__flatcc_fb_gen_c_json_parser@@Base+0x37c4>
   28724:	b	28a20 <__flatcc_fb_gen_c_json_parser@@Base+0x3400>
   28728:	b	28b1c <__flatcc_fb_gen_c_json_parser@@Base+0x34fc>
   2872c:	b	28b28 <__flatcc_fb_gen_c_json_parser@@Base+0x3508>
   28730:	b	28b34 <__flatcc_fb_gen_c_json_parser@@Base+0x3514>
   28734:	b	28b40 <__flatcc_fb_gen_c_json_parser@@Base+0x3520>
   28738:	b	28a5c <__flatcc_fb_gen_c_json_parser@@Base+0x343c>
   2873c:	b	28a68 <__flatcc_fb_gen_c_json_parser@@Base+0x3448>
   28740:	b	28a74 <__flatcc_fb_gen_c_json_parser@@Base+0x3454>
   28744:	b	28a80 <__flatcc_fb_gen_c_json_parser@@Base+0x3460>
   28748:	b	28a8c <__flatcc_fb_gen_c_json_parser@@Base+0x346c>
   2874c:	b	28a98 <__flatcc_fb_gen_c_json_parser@@Base+0x3478>
   28750:	ldr	ip, [r6, #4]
   28754:	ldr	lr, [sp, #48]	; 0x30
   28758:	ldrd	r2, [r6, #96]	; 0x60
   2875c:	ldr	r0, [ip, #4]
   28760:	str	lr, [sp, #24]
   28764:	ldrd	sl, [r6, #88]	; 0x58
   28768:	ldr	r1, [sp, #64]	; 0x40
   2876c:	str	r0, [sp, #8]
   28770:	strd	sl, [sp, #16]
   28774:	ldr	ip, [ip]
   28778:	str	r0, [sp]
   2877c:	ldr	r0, [r8]
   28780:	str	ip, [sp, #4]
   28784:	bl	14064 <fprintf@plt>
   28788:	b	285a8 <__flatcc_fb_gen_c_json_parser@@Base+0x2f88>
   2878c:	ldr	r1, [pc, #1744]	; 28e64 <__flatcc_fb_gen_c_json_parser@@Base+0x3844>
   28790:	ldr	lr, [r6, #4]
   28794:	ldrd	r2, [r6, #96]	; 0x60
   28798:	add	r1, pc, r1
   2879c:	ldr	ip, [lr, #4]
   287a0:	ldr	r0, [sp, #48]	; 0x30
   287a4:	str	r0, [sp, #12]
   287a8:	b	286c8 <__flatcc_fb_gen_c_json_parser@@Base+0x30a8>
   287ac:	ldr	r1, [pc, #1716]	; 28e68 <__flatcc_fb_gen_c_json_parser@@Base+0x3848>
   287b0:	ldr	lr, [r6, #4]
   287b4:	ldrd	r2, [r6, #96]	; 0x60
   287b8:	add	r1, pc, r1
   287bc:	b	286ec <__flatcc_fb_gen_c_json_parser@@Base+0x30cc>
   287c0:	ldr	r3, [r2, #40]	; 0x28
   287c4:	sub	r3, r3, #1
   287c8:	cmp	r3, #10
   287cc:	addls	pc, pc, r3, lsl #2
   287d0:	b	28de4 <__flatcc_fb_gen_c_json_parser@@Base+0x37c4>
   287d4:	b	28aa4 <__flatcc_fb_gen_c_json_parser@@Base+0x3484>
   287d8:	b	28ab0 <__flatcc_fb_gen_c_json_parser@@Base+0x3490>
   287dc:	b	28abc <__flatcc_fb_gen_c_json_parser@@Base+0x349c>
   287e0:	b	28ac8 <__flatcc_fb_gen_c_json_parser@@Base+0x34a8>
   287e4:	b	28ad4 <__flatcc_fb_gen_c_json_parser@@Base+0x34b4>
   287e8:	b	28ae0 <__flatcc_fb_gen_c_json_parser@@Base+0x34c0>
   287ec:	b	28aec <__flatcc_fb_gen_c_json_parser@@Base+0x34cc>
   287f0:	b	28af8 <__flatcc_fb_gen_c_json_parser@@Base+0x34d8>
   287f4:	b	28b04 <__flatcc_fb_gen_c_json_parser@@Base+0x34e4>
   287f8:	b	28b10 <__flatcc_fb_gen_c_json_parser@@Base+0x34f0>
   287fc:	b	289c8 <__flatcc_fb_gen_c_json_parser@@Base+0x33a8>
   28800:	ldr	r1, [pc, #1636]	; 28e6c <__flatcc_fb_gen_c_json_parser@@Base+0x384c>
   28804:	ldr	lr, [r6, #4]
   28808:	ldrd	r2, [r6, #96]	; 0x60
   2880c:	add	r1, pc, r1
   28810:	b	2879c <__flatcc_fb_gen_c_json_parser@@Base+0x317c>
   28814:	ldr	r1, [pc, #1620]	; 28e70 <__flatcc_fb_gen_c_json_parser@@Base+0x3850>
   28818:	ldr	lr, [r6, #4]
   2881c:	ldrd	r2, [r6, #96]	; 0x60
   28820:	add	r1, pc, r1
   28824:	b	2879c <__flatcc_fb_gen_c_json_parser@@Base+0x317c>
   28828:	ldr	r1, [pc, #1604]	; 28e74 <__flatcc_fb_gen_c_json_parser@@Base+0x3854>
   2882c:	eor	r3, r3, #1024	; 0x400
   28830:	ubfx	r0, r3, #10, #1
   28834:	ldr	lr, [r6, #4]
   28838:	ldrd	r2, [r6, #96]	; 0x60
   2883c:	add	r1, pc, r1
   28840:	ldr	ip, [lr, #4]
   28844:	b	287a4 <__flatcc_fb_gen_c_json_parser@@Base+0x3184>
   28848:	ldr	r1, [pc, #1576]	; 28e78 <__flatcc_fb_gen_c_json_parser@@Base+0x3858>
   2884c:	add	r1, pc, r1
   28850:	b	2879c <__flatcc_fb_gen_c_json_parser@@Base+0x317c>
   28854:	ldr	r3, [r6, #16]
   28858:	sub	r3, r3, #1
   2885c:	cmp	r3, #10
   28860:	addls	pc, pc, r3, lsl #2
   28864:	b	28de4 <__flatcc_fb_gen_c_json_parser@@Base+0x37c4>
   28868:	b	28b68 <__flatcc_fb_gen_c_json_parser@@Base+0x3548>
   2886c:	b	28c00 <__flatcc_fb_gen_c_json_parser@@Base+0x35e0>
   28870:	b	28bf4 <__flatcc_fb_gen_c_json_parser@@Base+0x35d4>
   28874:	b	28be8 <__flatcc_fb_gen_c_json_parser@@Base+0x35c8>
   28878:	b	28bdc <__flatcc_fb_gen_c_json_parser@@Base+0x35bc>
   2887c:	b	28bd0 <__flatcc_fb_gen_c_json_parser@@Base+0x35b0>
   28880:	b	28bc4 <__flatcc_fb_gen_c_json_parser@@Base+0x35a4>
   28884:	b	28bb8 <__flatcc_fb_gen_c_json_parser@@Base+0x3598>
   28888:	b	28bac <__flatcc_fb_gen_c_json_parser@@Base+0x358c>
   2888c:	b	28c18 <__flatcc_fb_gen_c_json_parser@@Base+0x35f8>
   28890:	b	28c0c <__flatcc_fb_gen_c_json_parser@@Base+0x35ec>
   28894:	ldr	r2, [pc, #1504]	; 28e7c <__flatcc_fb_gen_c_json_parser@@Base+0x385c>
   28898:	add	r2, pc, r2
   2889c:	ldrh	r3, [r6, #56]	; 0x38
   288a0:	sub	r3, r3, #3
   288a4:	cmp	r3, #3
   288a8:	addls	pc, pc, r3, lsl #2
   288ac:	b	28d8c <__flatcc_fb_gen_c_json_parser@@Base+0x376c>
   288b0:	b	2890c <__flatcc_fb_gen_c_json_parser@@Base+0x32ec>
   288b4:	b	288fc <__flatcc_fb_gen_c_json_parser@@Base+0x32dc>
   288b8:	b	288c0 <__flatcc_fb_gen_c_json_parser@@Base+0x32a0>
   288bc:	b	288c0 <__flatcc_fb_gen_c_json_parser@@Base+0x32a0>
   288c0:	ldr	r1, [pc, #1464]	; 28e80 <__flatcc_fb_gen_c_json_parser@@Base+0x3860>
   288c4:	ldr	r3, [r6, #4]
   288c8:	add	r1, pc, r1
   288cc:	ldr	ip, [r3, #4]
   288d0:	ldrd	sl, [r6, #48]	; 0x30
   288d4:	strd	sl, [sp, #24]
   288d8:	ldr	r0, [r8]
   288dc:	str	ip, [sp, #16]
   288e0:	ldr	r3, [r3]
   288e4:	str	ip, [sp, #8]
   288e8:	str	r3, [sp, #12]
   288ec:	ldrd	sl, [r6, #96]	; 0x60
   288f0:	strd	sl, [sp]
   288f4:	bl	14064 <fprintf@plt>
   288f8:	b	285a8 <__flatcc_fb_gen_c_json_parser@@Base+0x2f88>
   288fc:	ldr	r1, [pc, #1408]	; 28e84 <__flatcc_fb_gen_c_json_parser@@Base+0x3864>
   28900:	ldr	r3, [r6, #4]
   28904:	add	r1, pc, r1
   28908:	b	288cc <__flatcc_fb_gen_c_json_parser@@Base+0x32ac>
   2890c:	ldr	ip, [r6, #4]
   28910:	vldr	d7, [r6, #48]	; 0x30
   28914:	ldr	r1, [pc, #1388]	; 28e88 <__flatcc_fb_gen_c_json_parser@@Base+0x3868>
   28918:	ldr	r3, [ip, #4]
   2891c:	vstr	d7, [sp, #24]
   28920:	ldr	r0, [r8]
   28924:	add	r1, pc, r1
   28928:	str	r3, [sp, #16]
   2892c:	ldr	ip, [ip]
   28930:	str	r3, [sp, #8]
   28934:	str	ip, [sp, #12]
   28938:	ldrd	sl, [r6, #96]	; 0x60
   2893c:	strd	sl, [sp]
   28940:	bl	14064 <fprintf@plt>
   28944:	ldr	r3, [r8]
   28948:	ldrd	r0, [r9, #96]	; 0x60
   2894c:	b	285b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2f90>
   28950:	ldr	r2, [pc, #1332]	; 28e8c <__flatcc_fb_gen_c_json_parser@@Base+0x386c>
   28954:	add	r2, pc, r2
   28958:	b	2889c <__flatcc_fb_gen_c_json_parser@@Base+0x327c>
   2895c:	ldr	r2, [pc, #1324]	; 28e90 <__flatcc_fb_gen_c_json_parser@@Base+0x3870>
   28960:	add	r2, pc, r2
   28964:	b	2889c <__flatcc_fb_gen_c_json_parser@@Base+0x327c>
   28968:	ldr	r2, [pc, #1316]	; 28e94 <__flatcc_fb_gen_c_json_parser@@Base+0x3874>
   2896c:	add	r2, pc, r2
   28970:	b	2889c <__flatcc_fb_gen_c_json_parser@@Base+0x327c>
   28974:	ldr	r2, [pc, #1308]	; 28e98 <__flatcc_fb_gen_c_json_parser@@Base+0x3878>
   28978:	add	r2, pc, r2
   2897c:	b	2889c <__flatcc_fb_gen_c_json_parser@@Base+0x327c>
   28980:	ldr	r2, [pc, #1300]	; 28e9c <__flatcc_fb_gen_c_json_parser@@Base+0x387c>
   28984:	add	r2, pc, r2
   28988:	b	2889c <__flatcc_fb_gen_c_json_parser@@Base+0x327c>
   2898c:	ldr	r2, [pc, #1292]	; 28ea0 <__flatcc_fb_gen_c_json_parser@@Base+0x3880>
   28990:	add	r2, pc, r2
   28994:	b	2889c <__flatcc_fb_gen_c_json_parser@@Base+0x327c>
   28998:	ldr	r2, [pc, #1284]	; 28ea4 <__flatcc_fb_gen_c_json_parser@@Base+0x3884>
   2899c:	add	r2, pc, r2
   289a0:	b	2889c <__flatcc_fb_gen_c_json_parser@@Base+0x327c>
   289a4:	ldr	r2, [pc, #1276]	; 28ea8 <__flatcc_fb_gen_c_json_parser@@Base+0x3888>
   289a8:	add	r2, pc, r2
   289ac:	b	2889c <__flatcc_fb_gen_c_json_parser@@Base+0x327c>
   289b0:	ldr	r2, [pc, #1268]	; 28eac <__flatcc_fb_gen_c_json_parser@@Base+0x388c>
   289b4:	add	r2, pc, r2
   289b8:	b	2889c <__flatcc_fb_gen_c_json_parser@@Base+0x327c>
   289bc:	ldr	r2, [pc, #1260]	; 28eb0 <__flatcc_fb_gen_c_json_parser@@Base+0x3890>
   289c0:	add	r2, pc, r2
   289c4:	b	2889c <__flatcc_fb_gen_c_json_parser@@Base+0x327c>
   289c8:	ldr	r2, [pc, #1252]	; 28eb4 <__flatcc_fb_gen_c_json_parser@@Base+0x3894>
   289cc:	add	r2, pc, r2
   289d0:	ldrh	r3, [r6, #56]	; 0x38
   289d4:	cmp	r3, #4
   289d8:	bne	28b4c <__flatcc_fb_gen_c_json_parser@@Base+0x352c>
   289dc:	ldr	r1, [pc, #1236]	; 28eb8 <__flatcc_fb_gen_c_json_parser@@Base+0x3898>
   289e0:	ldr	r0, [r6, #4]
   289e4:	add	r1, pc, r1
   289e8:	ldr	ip, [sp, #48]	; 0x30
   289ec:	ldr	r3, [r0, #4]
   289f0:	str	ip, [sp, #32]
   289f4:	ldrd	sl, [r6, #48]	; 0x30
   289f8:	str	r3, [sp, #16]
   289fc:	strd	sl, [sp, #24]
   28a00:	ldr	ip, [r0]
   28a04:	str	r3, [sp, #8]
   28a08:	ldr	r0, [r8]
   28a0c:	str	ip, [sp, #12]
   28a10:	ldrd	sl, [r6, #96]	; 0x60
   28a14:	strd	sl, [sp]
   28a18:	bl	14064 <fprintf@plt>
   28a1c:	b	285a8 <__flatcc_fb_gen_c_json_parser@@Base+0x2f88>
   28a20:	ldr	r2, [pc, #1172]	; 28ebc <__flatcc_fb_gen_c_json_parser@@Base+0x389c>
   28a24:	add	r2, pc, r2
   28a28:	ldr	ip, [r6, #4]
   28a2c:	ldr	r1, [pc, #1164]	; 28ec0 <__flatcc_fb_gen_c_json_parser@@Base+0x38a0>
   28a30:	ldr	r0, [sp, #48]	; 0x30
   28a34:	ldr	r3, [ip, #4]
   28a38:	add	r1, pc, r1
   28a3c:	ldrd	sl, [r9, #112]	; 0x70
   28a40:	strd	sl, [sp, #24]
   28a44:	str	r0, [sp, #32]
   28a48:	ldr	r0, [r8]
   28a4c:	str	r3, [sp, #16]
   28a50:	ldr	ip, [ip]
   28a54:	str	r3, [sp, #8]
   28a58:	b	28a0c <__flatcc_fb_gen_c_json_parser@@Base+0x33ec>
   28a5c:	ldr	r2, [pc, #1120]	; 28ec4 <__flatcc_fb_gen_c_json_parser@@Base+0x38a4>
   28a60:	add	r2, pc, r2
   28a64:	b	28a28 <__flatcc_fb_gen_c_json_parser@@Base+0x3408>
   28a68:	ldr	r2, [pc, #1112]	; 28ec8 <__flatcc_fb_gen_c_json_parser@@Base+0x38a8>
   28a6c:	add	r2, pc, r2
   28a70:	b	28a28 <__flatcc_fb_gen_c_json_parser@@Base+0x3408>
   28a74:	ldr	r2, [pc, #1104]	; 28ecc <__flatcc_fb_gen_c_json_parser@@Base+0x38ac>
   28a78:	add	r2, pc, r2
   28a7c:	b	28a28 <__flatcc_fb_gen_c_json_parser@@Base+0x3408>
   28a80:	ldr	r2, [pc, #1096]	; 28ed0 <__flatcc_fb_gen_c_json_parser@@Base+0x38b0>
   28a84:	add	r2, pc, r2
   28a88:	b	28a28 <__flatcc_fb_gen_c_json_parser@@Base+0x3408>
   28a8c:	ldr	r2, [pc, #1088]	; 28ed4 <__flatcc_fb_gen_c_json_parser@@Base+0x38b4>
   28a90:	add	r2, pc, r2
   28a94:	b	28a28 <__flatcc_fb_gen_c_json_parser@@Base+0x3408>
   28a98:	ldr	r2, [pc, #1080]	; 28ed8 <__flatcc_fb_gen_c_json_parser@@Base+0x38b8>
   28a9c:	add	r2, pc, r2
   28aa0:	b	28a28 <__flatcc_fb_gen_c_json_parser@@Base+0x3408>
   28aa4:	ldr	r2, [pc, #1072]	; 28edc <__flatcc_fb_gen_c_json_parser@@Base+0x38bc>
   28aa8:	add	r2, pc, r2
   28aac:	b	289d0 <__flatcc_fb_gen_c_json_parser@@Base+0x33b0>
   28ab0:	ldr	r2, [pc, #1064]	; 28ee0 <__flatcc_fb_gen_c_json_parser@@Base+0x38c0>
   28ab4:	add	r2, pc, r2
   28ab8:	b	289d0 <__flatcc_fb_gen_c_json_parser@@Base+0x33b0>
   28abc:	ldr	r2, [pc, #1056]	; 28ee4 <__flatcc_fb_gen_c_json_parser@@Base+0x38c4>
   28ac0:	add	r2, pc, r2
   28ac4:	b	289d0 <__flatcc_fb_gen_c_json_parser@@Base+0x33b0>
   28ac8:	ldr	r2, [pc, #1048]	; 28ee8 <__flatcc_fb_gen_c_json_parser@@Base+0x38c8>
   28acc:	add	r2, pc, r2
   28ad0:	b	289d0 <__flatcc_fb_gen_c_json_parser@@Base+0x33b0>
   28ad4:	ldr	r2, [pc, #1040]	; 28eec <__flatcc_fb_gen_c_json_parser@@Base+0x38cc>
   28ad8:	add	r2, pc, r2
   28adc:	b	289d0 <__flatcc_fb_gen_c_json_parser@@Base+0x33b0>
   28ae0:	ldr	r2, [pc, #1032]	; 28ef0 <__flatcc_fb_gen_c_json_parser@@Base+0x38d0>
   28ae4:	add	r2, pc, r2
   28ae8:	b	289d0 <__flatcc_fb_gen_c_json_parser@@Base+0x33b0>
   28aec:	ldr	r2, [pc, #1024]	; 28ef4 <__flatcc_fb_gen_c_json_parser@@Base+0x38d4>
   28af0:	add	r2, pc, r2
   28af4:	b	289d0 <__flatcc_fb_gen_c_json_parser@@Base+0x33b0>
   28af8:	ldr	r2, [pc, #1016]	; 28ef8 <__flatcc_fb_gen_c_json_parser@@Base+0x38d8>
   28afc:	add	r2, pc, r2
   28b00:	b	289d0 <__flatcc_fb_gen_c_json_parser@@Base+0x33b0>
   28b04:	ldr	r2, [pc, #1008]	; 28efc <__flatcc_fb_gen_c_json_parser@@Base+0x38dc>
   28b08:	add	r2, pc, r2
   28b0c:	b	289d0 <__flatcc_fb_gen_c_json_parser@@Base+0x33b0>
   28b10:	ldr	r2, [pc, #1000]	; 28f00 <__flatcc_fb_gen_c_json_parser@@Base+0x38e0>
   28b14:	add	r2, pc, r2
   28b18:	b	289d0 <__flatcc_fb_gen_c_json_parser@@Base+0x33b0>
   28b1c:	ldr	r2, [pc, #992]	; 28f04 <__flatcc_fb_gen_c_json_parser@@Base+0x38e4>
   28b20:	add	r2, pc, r2
   28b24:	b	28a28 <__flatcc_fb_gen_c_json_parser@@Base+0x3408>
   28b28:	ldr	r2, [pc, #984]	; 28f08 <__flatcc_fb_gen_c_json_parser@@Base+0x38e8>
   28b2c:	add	r2, pc, r2
   28b30:	b	28a28 <__flatcc_fb_gen_c_json_parser@@Base+0x3408>
   28b34:	ldr	r2, [pc, #976]	; 28f0c <__flatcc_fb_gen_c_json_parser@@Base+0x38ec>
   28b38:	add	r2, pc, r2
   28b3c:	b	28a28 <__flatcc_fb_gen_c_json_parser@@Base+0x3408>
   28b40:	ldr	r2, [pc, #968]	; 28f10 <__flatcc_fb_gen_c_json_parser@@Base+0x38f0>
   28b44:	add	r2, pc, r2
   28b48:	b	28a28 <__flatcc_fb_gen_c_json_parser@@Base+0x3408>
   28b4c:	bcc	28c2c <__flatcc_fb_gen_c_json_parser@@Base+0x360c>
   28b50:	cmp	r3, #6
   28b54:	bhi	28c2c <__flatcc_fb_gen_c_json_parser@@Base+0x360c>
   28b58:	ldr	r1, [pc, #948]	; 28f14 <__flatcc_fb_gen_c_json_parser@@Base+0x38f4>
   28b5c:	ldr	r0, [r6, #4]
   28b60:	add	r1, pc, r1
   28b64:	b	289e8 <__flatcc_fb_gen_c_json_parser@@Base+0x33c8>
   28b68:	ldr	r2, [pc, #936]	; 28f18 <__flatcc_fb_gen_c_json_parser@@Base+0x38f8>
   28b6c:	add	r2, pc, r2
   28b70:	ldr	ip, [r6, #4]
   28b74:	ldr	r0, [r8]
   28b78:	ldr	r1, [pc, #924]	; 28f1c <__flatcc_fb_gen_c_json_parser@@Base+0x38fc>
   28b7c:	ldr	r3, [ip, #4]
   28b80:	add	r1, pc, r1
   28b84:	str	r3, [sp, #16]
   28b88:	ldr	ip, [ip]
   28b8c:	str	r3, [sp, #8]
   28b90:	str	ip, [sp, #12]
   28b94:	ldrd	sl, [r6, #96]	; 0x60
   28b98:	strd	sl, [sp]
   28b9c:	bl	14064 <fprintf@plt>
   28ba0:	ldr	r3, [r8]
   28ba4:	ldrd	r0, [r9, #96]	; 0x60
   28ba8:	b	285b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2f90>
   28bac:	ldr	r2, [pc, #876]	; 28f20 <__flatcc_fb_gen_c_json_parser@@Base+0x3900>
   28bb0:	add	r2, pc, r2
   28bb4:	b	28b70 <__flatcc_fb_gen_c_json_parser@@Base+0x3550>
   28bb8:	ldr	r2, [pc, #868]	; 28f24 <__flatcc_fb_gen_c_json_parser@@Base+0x3904>
   28bbc:	add	r2, pc, r2
   28bc0:	b	28b70 <__flatcc_fb_gen_c_json_parser@@Base+0x3550>
   28bc4:	ldr	r2, [pc, #860]	; 28f28 <__flatcc_fb_gen_c_json_parser@@Base+0x3908>
   28bc8:	add	r2, pc, r2
   28bcc:	b	28b70 <__flatcc_fb_gen_c_json_parser@@Base+0x3550>
   28bd0:	ldr	r2, [pc, #852]	; 28f2c <__flatcc_fb_gen_c_json_parser@@Base+0x390c>
   28bd4:	add	r2, pc, r2
   28bd8:	b	28b70 <__flatcc_fb_gen_c_json_parser@@Base+0x3550>
   28bdc:	ldr	r2, [pc, #844]	; 28f30 <__flatcc_fb_gen_c_json_parser@@Base+0x3910>
   28be0:	add	r2, pc, r2
   28be4:	b	28b70 <__flatcc_fb_gen_c_json_parser@@Base+0x3550>
   28be8:	ldr	r2, [pc, #836]	; 28f34 <__flatcc_fb_gen_c_json_parser@@Base+0x3914>
   28bec:	add	r2, pc, r2
   28bf0:	b	28b70 <__flatcc_fb_gen_c_json_parser@@Base+0x3550>
   28bf4:	ldr	r2, [pc, #828]	; 28f38 <__flatcc_fb_gen_c_json_parser@@Base+0x3918>
   28bf8:	add	r2, pc, r2
   28bfc:	b	28b70 <__flatcc_fb_gen_c_json_parser@@Base+0x3550>
   28c00:	ldr	r2, [pc, #820]	; 28f3c <__flatcc_fb_gen_c_json_parser@@Base+0x391c>
   28c04:	add	r2, pc, r2
   28c08:	b	28b70 <__flatcc_fb_gen_c_json_parser@@Base+0x3550>
   28c0c:	ldr	r2, [pc, #812]	; 28f40 <__flatcc_fb_gen_c_json_parser@@Base+0x3920>
   28c10:	add	r2, pc, r2
   28c14:	b	28b70 <__flatcc_fb_gen_c_json_parser@@Base+0x3550>
   28c18:	ldr	r2, [pc, #804]	; 28f44 <__flatcc_fb_gen_c_json_parser@@Base+0x3924>
   28c1c:	add	r2, pc, r2
   28c20:	b	28b70 <__flatcc_fb_gen_c_json_parser@@Base+0x3550>
   28c24:	ldr	r3, [r8]
   28c28:	b	285c4 <__flatcc_fb_gen_c_json_parser@@Base+0x2fa4>
   28c2c:	ldr	r2, [pc, #788]	; 28f48 <__flatcc_fb_gen_c_json_parser@@Base+0x3928>
   28c30:	movw	r3, #483	; 0x1e3
   28c34:	ldr	r1, [sp, #68]	; 0x44
   28c38:	ldr	r0, [pc, #780]	; 28f4c <__flatcc_fb_gen_c_json_parser@@Base+0x392c>
   28c3c:	ldr	r4, [pc, #780]	; 28f50 <__flatcc_fb_gen_c_json_parser@@Base+0x3930>
   28c40:	ldr	ip, [r1, r2]
   28c44:	add	r0, pc, r0
   28c48:	ldr	r1, [pc, #772]	; 28f54 <__flatcc_fb_gen_c_json_parser@@Base+0x3934>
   28c4c:	add	r4, pc, r4
   28c50:	str	r0, [sp]
   28c54:	mov	r2, r4
   28c58:	ldr	r0, [ip]
   28c5c:	add	r1, pc, r1
   28c60:	bl	14064 <fprintf@plt>
   28c64:	ldr	r3, [pc, #748]	; 28f58 <__flatcc_fb_gen_c_json_parser@@Base+0x3938>
   28c68:	mov	r1, r4
   28c6c:	movw	r2, #483	; 0x1e3
   28c70:	ldr	r0, [pc, #740]	; 28f5c <__flatcc_fb_gen_c_json_parser@@Base+0x393c>
   28c74:	add	r3, pc, r3
   28c78:	add	r3, r3, #76	; 0x4c
   28c7c:	add	r0, pc, r0
   28c80:	bl	14118 <__assert_fail@plt>
   28c84:	ldr	r2, [pc, #700]	; 28f48 <__flatcc_fb_gen_c_json_parser@@Base+0x3928>
   28c88:	mov	r3, #504	; 0x1f8
   28c8c:	ldr	r1, [sp, #68]	; 0x44
   28c90:	ldr	r0, [pc, #712]	; 28f60 <__flatcc_fb_gen_c_json_parser@@Base+0x3940>
   28c94:	ldr	r4, [pc, #712]	; 28f64 <__flatcc_fb_gen_c_json_parser@@Base+0x3944>
   28c98:	ldr	ip, [r1, r2]
   28c9c:	add	r0, pc, r0
   28ca0:	ldr	r1, [pc, #704]	; 28f68 <__flatcc_fb_gen_c_json_parser@@Base+0x3948>
   28ca4:	add	r4, pc, r4
   28ca8:	str	r0, [sp]
   28cac:	mov	r2, r4
   28cb0:	ldr	r0, [ip]
   28cb4:	add	r1, pc, r1
   28cb8:	bl	14064 <fprintf@plt>
   28cbc:	ldr	r3, [pc, #680]	; 28f6c <__flatcc_fb_gen_c_json_parser@@Base+0x394c>
   28cc0:	mov	r1, r4
   28cc4:	mov	r2, #504	; 0x1f8
   28cc8:	ldr	r0, [pc, #672]	; 28f70 <__flatcc_fb_gen_c_json_parser@@Base+0x3950>
   28ccc:	add	r3, pc, r3
   28cd0:	add	r3, r3, #76	; 0x4c
   28cd4:	add	r0, pc, r0
   28cd8:	bl	14118 <__assert_fail@plt>
   28cdc:	ldr	r2, [pc, #612]	; 28f48 <__flatcc_fb_gen_c_json_parser@@Base+0x3928>
   28ce0:	movw	r3, #543	; 0x21f
   28ce4:	ldr	r1, [sp, #68]	; 0x44
   28ce8:	ldr	r0, [pc, #644]	; 28f74 <__flatcc_fb_gen_c_json_parser@@Base+0x3954>
   28cec:	ldr	r4, [pc, #644]	; 28f78 <__flatcc_fb_gen_c_json_parser@@Base+0x3958>
   28cf0:	ldr	ip, [r1, r2]
   28cf4:	add	r0, pc, r0
   28cf8:	ldr	r1, [pc, #636]	; 28f7c <__flatcc_fb_gen_c_json_parser@@Base+0x395c>
   28cfc:	add	r4, pc, r4
   28d00:	str	r0, [sp]
   28d04:	mov	r2, r4
   28d08:	ldr	r0, [ip]
   28d0c:	add	r1, pc, r1
   28d10:	bl	14064 <fprintf@plt>
   28d14:	ldr	r3, [pc, #612]	; 28f80 <__flatcc_fb_gen_c_json_parser@@Base+0x3960>
   28d18:	mov	r1, r4
   28d1c:	movw	r2, #543	; 0x21f
   28d20:	ldr	r0, [pc, #604]	; 28f84 <__flatcc_fb_gen_c_json_parser@@Base+0x3964>
   28d24:	add	r3, pc, r3
   28d28:	add	r3, r3, #76	; 0x4c
   28d2c:	add	r0, pc, r0
   28d30:	bl	14118 <__assert_fail@plt>
   28d34:	ldr	r2, [pc, #524]	; 28f48 <__flatcc_fb_gen_c_json_parser@@Base+0x3928>
   28d38:	movw	r3, #361	; 0x169
   28d3c:	ldr	r1, [sp, #68]	; 0x44
   28d40:	ldr	r0, [pc, #576]	; 28f88 <__flatcc_fb_gen_c_json_parser@@Base+0x3968>
   28d44:	ldr	r4, [pc, #576]	; 28f8c <__flatcc_fb_gen_c_json_parser@@Base+0x396c>
   28d48:	ldr	ip, [r1, r2]
   28d4c:	add	r0, pc, r0
   28d50:	ldr	r1, [pc, #568]	; 28f90 <__flatcc_fb_gen_c_json_parser@@Base+0x3970>
   28d54:	add	r4, pc, r4
   28d58:	str	r0, [sp]
   28d5c:	mov	r2, r4
   28d60:	ldr	r0, [ip]
   28d64:	add	r1, pc, r1
   28d68:	bl	14064 <fprintf@plt>
   28d6c:	ldr	r3, [pc, #544]	; 28f94 <__flatcc_fb_gen_c_json_parser@@Base+0x3974>
   28d70:	mov	r1, r4
   28d74:	movw	r2, #361	; 0x169
   28d78:	ldr	r0, [pc, #536]	; 28f98 <__flatcc_fb_gen_c_json_parser@@Base+0x3978>
   28d7c:	add	r3, pc, r3
   28d80:	add	r3, r3, #76	; 0x4c
   28d84:	add	r0, pc, r0
   28d88:	bl	14118 <__assert_fail@plt>
   28d8c:	ldr	r2, [pc, #436]	; 28f48 <__flatcc_fb_gen_c_json_parser@@Base+0x3928>
   28d90:	movw	r3, #406	; 0x196
   28d94:	ldr	r1, [sp, #68]	; 0x44
   28d98:	ldr	r0, [pc, #508]	; 28f9c <__flatcc_fb_gen_c_json_parser@@Base+0x397c>
   28d9c:	ldr	r4, [pc, #508]	; 28fa0 <__flatcc_fb_gen_c_json_parser@@Base+0x3980>
   28da0:	ldr	ip, [r1, r2]
   28da4:	add	r0, pc, r0
   28da8:	ldr	r1, [pc, #500]	; 28fa4 <__flatcc_fb_gen_c_json_parser@@Base+0x3984>
   28dac:	add	r4, pc, r4
   28db0:	str	r0, [sp]
   28db4:	mov	r2, r4
   28db8:	ldr	r0, [ip]
   28dbc:	add	r1, pc, r1
   28dc0:	bl	14064 <fprintf@plt>
   28dc4:	ldr	r3, [pc, #476]	; 28fa8 <__flatcc_fb_gen_c_json_parser@@Base+0x3988>
   28dc8:	mov	r1, r4
   28dcc:	movw	r2, #406	; 0x196
   28dd0:	ldr	r0, [pc, #468]	; 28fac <__flatcc_fb_gen_c_json_parser@@Base+0x398c>
   28dd4:	add	r3, pc, r3
   28dd8:	add	r3, r3, #76	; 0x4c
   28ddc:	add	r0, pc, r0
   28de0:	bl	14118 <__assert_fail@plt>
   28de4:	bl	27538 <__flatcc_fb_gen_c_json_parser@@Base+0x1f18>
   28de8:	ldr	r2, [pc, #344]	; 28f48 <__flatcc_fb_gen_c_json_parser@@Base+0x3928>
   28dec:	mov	r3, #96	; 0x60
   28df0:	ldr	r1, [sp, #68]	; 0x44
   28df4:	ldr	r0, [pc, #436]	; 28fb0 <__flatcc_fb_gen_c_json_parser@@Base+0x3990>
   28df8:	ldr	r4, [pc, #436]	; 28fb4 <__flatcc_fb_gen_c_json_parser@@Base+0x3994>
   28dfc:	ldr	ip, [r1, r2]
   28e00:	add	r0, pc, r0
   28e04:	ldr	r1, [pc, #428]	; 28fb8 <__flatcc_fb_gen_c_json_parser@@Base+0x3998>
   28e08:	add	r4, pc, r4
   28e0c:	str	r0, [sp]
   28e10:	mov	r2, r4
   28e14:	ldr	r0, [ip]
   28e18:	add	r1, pc, r1
   28e1c:	bl	14064 <fprintf@plt>
   28e20:	ldr	r3, [pc, #404]	; 28fbc <__flatcc_fb_gen_c_json_parser@@Base+0x399c>
   28e24:	mov	r1, r4
   28e28:	mov	r2, #96	; 0x60
   28e2c:	ldr	r0, [pc, #396]	; 28fc0 <__flatcc_fb_gen_c_json_parser@@Base+0x39a0>
   28e30:	add	r3, pc, r3
   28e34:	add	r0, pc, r0
   28e38:	bl	14118 <__assert_fail@plt>
   28e3c:	andeq	r4, r4, r0, lsr ip
   28e40:	ldrdeq	lr, [r2], -r8
   28e44:	andeq	lr, r2, r8, lsl pc
   28e48:	andeq	pc, r2, r8, lsl r5	; <UNPREDICTABLE>
   28e4c:	andeq	pc, r2, r8, lsr #9
   28e50:	andeq	pc, r2, r8, lsr r0	; <UNPREDICTABLE>
   28e54:	andeq	pc, r2, ip, ror #10
   28e58:	andeq	pc, r2, r8, lsl #9
   28e5c:	ldrdeq	lr, [r2], -r4
   28e60:	strdeq	lr, [r2], -ip
   28e64:	strdeq	pc, [r2], -r8
   28e68:	andeq	pc, r2, ip, lsr #32
   28e6c:	andeq	lr, r2, r0, lsr pc
   28e70:	andeq	lr, r2, r0, ror pc
   28e74:	andeq	lr, r2, r4, lsr ip
   28e78:	ldrdeq	lr, [r2], -r4
   28e7c:	andeq	r9, r1, r0, ror #11
   28e80:	andeq	lr, r2, r8, ror #21
   28e84:	andeq	lr, r2, ip, ror #21
   28e88:	andeq	lr, r2, ip, lsl #22
   28e8c:	andeq	r9, r1, ip, lsl #11
   28e90:	muleq	r1, r0, r5
   28e94:	strdeq	r9, [r1], -r0
   28e98:	andeq	r9, r1, r0, ror #10
   28e9c:	andeq	r9, r1, r4, asr #10
   28ea0:	andeq	r1, r3, r8, lsl #3
   28ea4:	andeq	r9, r1, ip, lsl r5
   28ea8:	andeq	r9, r1, r4, ror #9
   28eac:	andeq	r9, r1, ip, ror #9
   28eb0:			; <UNDEFINED> instruction: 0x000194b0
   28eb4:	andeq	r9, r1, ip, lsr #9
   28eb8:	andeq	lr, r2, r4, asr #25
   28ebc:	andeq	r9, r1, ip, asr #8
   28ec0:			; <UNDEFINED> instruction: 0x0002eeb4
   28ec4:	andeq	r9, r1, r8, ror #8
   28ec8:	andeq	r9, r1, ip, ror #8
   28ecc:	andeq	r9, r1, r4, ror #7
   28ed0:	andeq	r9, r1, ip, ror #8
   28ed4:	andeq	r9, r1, r0, asr r4
   28ed8:	ldrdeq	r9, [r1], -ip
   28edc:	andeq	r9, r1, r8, asr #7
   28ee0:	andeq	r9, r1, ip, ror #7
   28ee4:	andeq	r9, r1, ip, asr #7
   28ee8:	andeq	r9, r1, ip, ror #7
   28eec:	andeq	r1, r3, r0, asr #32
   28ef0:	andeq	r9, r1, r4, ror #7
   28ef4:	andeq	r9, r1, r8, ror #7
   28ef8:	andeq	r9, r1, r0, ror #6
   28efc:	andeq	r9, r1, r8, ror #7
   28f00:	andeq	r9, r1, ip, asr #7
   28f04:	andeq	r9, r1, r0, lsl #7
   28f08:	andeq	r9, r1, r0, ror #6
   28f0c:	andeq	r9, r1, r0, lsl #7
   28f10:	ldrdeq	r0, [r3], -r4
   28f14:	andeq	lr, r2, ip, ror #21
   28f18:	andeq	r9, r1, r4, lsl #6
   28f1c:	andeq	lr, r2, r0, lsl #20
   28f20:	andeq	r9, r1, r0, asr #6
   28f24:	andeq	r9, r1, r0, lsr #5
   28f28:	andeq	r9, r1, r0, lsl r3
   28f2c:	strdeq	r9, [r1], -r4
   28f30:	andeq	r0, r3, r8, lsr pc
   28f34:	andeq	r9, r1, ip, asr #5
   28f38:	muleq	r1, r4, r2
   28f3c:	muleq	r1, ip, r2
   28f40:	andeq	r9, r1, r8, ror #4
   28f44:	andeq	r9, r1, r4, asr #5
   28f48:	andeq	r0, r0, r0, lsr #1
   28f4c:	andeq	lr, r2, r0, asr #21
   28f50:	andeq	lr, r2, r8, ror r0
   28f54:			; <UNDEFINED> instruction: 0x000191b4
   28f58:	muleq	r2, ip, lr
   28f5c:			; <UNDEFINED> instruction: 0x000216b8
   28f60:			; <UNDEFINED> instruction: 0x0002ebb4
   28f64:	andeq	lr, r2, r0, lsr #32
   28f68:	andeq	r9, r1, ip, asr r1
   28f6c:	andeq	sp, r2, r4, asr #28
   28f70:	andeq	r1, r2, r0, ror #12
   28f74:	andeq	lr, r2, r0, lsr sp
   28f78:	andeq	sp, r2, r8, asr #31
   28f7c:	andeq	r9, r1, r4, lsl #2
   28f80:	andeq	sp, r2, ip, ror #27
   28f84:	andeq	r1, r2, r8, lsl #12
   28f88:	andeq	lr, r2, r4, asr #11
   28f8c:	andeq	sp, r2, r0, ror pc
   28f90:	andeq	r9, r1, ip, lsr #1
   28f94:	muleq	r2, r4, sp
   28f98:			; <UNDEFINED> instruction: 0x000215b0
   28f9c:	andeq	ip, r2, r8, ror #15
   28fa0:	andeq	sp, r2, r8, lsl pc
   28fa4:	andeq	r9, r1, r4, asr r0
   28fa8:	andeq	sp, r2, ip, lsr sp
   28fac:	andeq	r1, r2, r8, asr r5
   28fb0:	andeq	r9, r1, ip, lsl r0
   28fb4:	andeq	r8, r1, r8, lsr #31
   28fb8:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   28fbc:	andeq	sp, r2, r0, ror #25
   28fc0:	andeq	r1, r2, r0, lsl #10

00028fc4 <__flatcc_fb_gen_c_json_printer@@Base>:
   28fc4:	ldr	r3, [r0, #208]	; 0xd0
   28fc8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   28fcc:	mov	r4, r0
   28fd0:	ldr	r1, [pc, #1240]	; 294b0 <__flatcc_fb_gen_c_json_printer@@Base+0x4ec>
   28fd4:	ldr	r0, [r0, #204]	; 0xcc
   28fd8:	ldr	r3, [r3, #164]	; 0xa4
   28fdc:	add	r1, pc, r1
   28fe0:	strd	r6, [sp, #8]
   28fe4:	strd	r8, [sp, #16]
   28fe8:	str	sl, [sp, #24]
   28fec:	str	lr, [sp, #28]
   28ff0:	sub	sp, sp, #232	; 0xe8
   28ff4:	mov	r2, r3
   28ff8:	bl	14064 <fprintf@plt>
   28ffc:	ldr	r0, [pc, #1200]	; 294b4 <__flatcc_fb_gen_c_json_printer@@Base+0x4f0>
   29000:	mov	r2, #81	; 0x51
   29004:	mov	r1, #1
   29008:	ldr	r3, [r4, #204]	; 0xcc
   2900c:	add	r0, pc, r0
   29010:	bl	13fec <fwrite@plt>
   29014:	ldr	r0, [pc, #1180]	; 294b8 <__flatcc_fb_gen_c_json_printer@@Base+0x4f4>
   29018:	mov	r2, #40	; 0x28
   2901c:	mov	r1, #1
   29020:	ldr	r3, [r4, #204]	; 0xcc
   29024:	add	r0, pc, r0
   29028:	bl	13fec <fwrite@plt>
   2902c:	ldr	r2, [pc, #1160]	; 294bc <__flatcc_fb_gen_c_json_printer@@Base+0x4f8>
   29030:	mov	r0, r4
   29034:	ldr	r1, [pc, #1156]	; 294c0 <__flatcc_fb_gen_c_json_printer@@Base+0x4fc>
   29038:	add	r2, pc, r2
   2903c:	add	r1, pc, r1
   29040:	bl	15fbc <__flatcc_fb_gen_c_includes@@Base>
   29044:	ldr	r1, [r4, #204]	; 0xcc
   29048:	ldr	r3, [r4, #212]	; 0xd4
   2904c:	ldr	r3, [r3, #140]	; 0x8c
   29050:	cmp	r3, #0
   29054:	bne	2938c <__flatcc_fb_gen_c_json_printer@@Base+0x3c8>
   29058:	mov	r0, #10
   2905c:	add	r5, sp, #12
   29060:	bl	140c4 <fputc@plt>
   29064:	ldr	r6, [r4, #208]	; 0xd0
   29068:	mov	r2, #220	; 0xdc
   2906c:	mov	r0, r5
   29070:	mov	r1, #0
   29074:	ldr	r7, [r6, #52]	; 0x34
   29078:	bl	1407c <memset@plt>
   2907c:	cmp	r7, #0
   29080:	beq	29090 <__flatcc_fb_gen_c_json_printer@@Base+0xcc>
   29084:	ldrh	r3, [r7, #8]
   29088:	cmp	r3, #1
   2908c:	bls	293cc <__flatcc_fb_gen_c_json_printer@@Base+0x408>
   29090:	ldr	r6, [r6, #40]	; 0x28
   29094:	cmp	r6, #0
   29098:	beq	29128 <__flatcc_fb_gen_c_json_printer@@Base+0x164>
   2909c:	ldr	r9, [pc, #1056]	; 294c4 <__flatcc_fb_gen_c_json_printer@@Base+0x500>
   290a0:	ldr	r8, [pc, #1056]	; 294c8 <__flatcc_fb_gen_c_json_printer@@Base+0x504>
   290a4:	ldr	r7, [pc, #1056]	; 294cc <__flatcc_fb_gen_c_json_printer@@Base+0x508>
   290a8:	add	r9, pc, r9
   290ac:	add	r8, pc, r8
   290b0:	add	r7, pc, r7
   290b4:	b	290e8 <__flatcc_fb_gen_c_json_printer@@Base+0x124>
   290b8:	cmp	r3, #4
   290bc:	bne	290dc <__flatcc_fb_gen_c_json_printer@@Base+0x118>
   290c0:	ldr	r0, [r6, #12]
   290c4:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   290c8:	mov	r3, r5
   290cc:	mov	r2, r5
   290d0:	ldr	r0, [r4, #204]	; 0xcc
   290d4:	mov	r1, r7
   290d8:	bl	14064 <fprintf@plt>
   290dc:	ldr	r6, [r6]
   290e0:	cmp	r6, #0
   290e4:	beq	29128 <__flatcc_fb_gen_c_json_printer@@Base+0x164>
   290e8:	ldrh	r3, [r6, #8]
   290ec:	mov	r2, r5
   290f0:	mov	r1, r6
   290f4:	cmp	r3, #1
   290f8:	beq	29370 <__flatcc_fb_gen_c_json_printer@@Base+0x3ac>
   290fc:	cmp	r3, #0
   29100:	bne	290b8 <__flatcc_fb_gen_c_json_printer@@Base+0xf4>
   29104:	ldr	r0, [r6, #12]
   29108:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   2910c:	mov	r2, r5
   29110:	mov	r1, r8
   29114:	ldr	r0, [r4, #204]	; 0xcc
   29118:	bl	14064 <fprintf@plt>
   2911c:	ldr	r6, [r6]
   29120:	cmp	r6, #0
   29124:	bne	290e8 <__flatcc_fb_gen_c_json_printer@@Base+0x124>
   29128:	mov	r0, #10
   2912c:	ldr	r1, [r4, #204]	; 0xcc
   29130:	bl	140c4 <fputc@plt>
   29134:	ldr	r3, [r4, #208]	; 0xd0
   29138:	ldr	r6, [r3, #40]	; 0x28
   2913c:	cmp	r6, #0
   29140:	bne	29154 <__flatcc_fb_gen_c_json_printer@@Base+0x190>
   29144:	b	29310 <__flatcc_fb_gen_c_json_printer@@Base+0x34c>
   29148:	ldr	r6, [r6]
   2914c:	cmp	r6, #0
   29150:	beq	29178 <__flatcc_fb_gen_c_json_printer@@Base+0x1b4>
   29154:	ldrh	r3, [r6, #8]
   29158:	cmp	r3, #3
   2915c:	bne	29148 <__flatcc_fb_gen_c_json_printer@@Base+0x184>
   29160:	mov	r1, r6
   29164:	mov	r0, r4
   29168:	bl	27c20 <__flatcc_fb_gen_c_json_parser@@Base+0x2600>
   2916c:	ldr	r6, [r6]
   29170:	cmp	r6, #0
   29174:	bne	29154 <__flatcc_fb_gen_c_json_printer@@Base+0x190>
   29178:	ldr	r3, [r4, #208]	; 0xd0
   2917c:	ldr	r6, [r3, #40]	; 0x28
   29180:	cmp	r6, #0
   29184:	beq	29310 <__flatcc_fb_gen_c_json_printer@@Base+0x34c>
   29188:	ldr	sl, [pc, #832]	; 294d0 <__flatcc_fb_gen_c_json_printer@@Base+0x50c>
   2918c:	ldr	r9, [pc, #832]	; 294d4 <__flatcc_fb_gen_c_json_printer@@Base+0x510>
   29190:	add	sl, pc, sl
   29194:	add	r9, pc, r9
   29198:	b	291a8 <__flatcc_fb_gen_c_json_printer@@Base+0x1e4>
   2919c:	ldr	r6, [r6]
   291a0:	cmp	r6, #0
   291a4:	beq	2927c <__flatcc_fb_gen_c_json_printer@@Base+0x2b8>
   291a8:	ldrh	r3, [r6, #8]
   291ac:	cmp	r3, #4
   291b0:	bne	2919c <__flatcc_fb_gen_c_json_printer@@Base+0x1d8>
   291b4:	mov	r2, #220	; 0xdc
   291b8:	mov	r1, #0
   291bc:	mov	r0, r5
   291c0:	add	r8, r4, #204	; 0xcc
   291c4:	bl	1407c <memset@plt>
   291c8:	mov	r2, r5
   291cc:	mov	r1, r6
   291d0:	ldr	r0, [r6, #12]
   291d4:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   291d8:	mov	r2, r5
   291dc:	mov	r1, sl
   291e0:	ldr	r0, [r4, #204]	; 0xcc
   291e4:	bl	14064 <fprintf@plt>
   291e8:	ldr	r7, [r6, #20]
   291ec:	ldr	r3, [r4, #204]	; 0xcc
   291f0:	cmp	r7, #0
   291f4:	beq	29238 <__flatcc_fb_gen_c_json_printer@@Base+0x274>
   291f8:	ldrh	r2, [r7, #24]
   291fc:	mov	r0, r3
   29200:	mov	r1, r9
   29204:	cmp	r2, #0
   29208:	beq	2922c <__flatcc_fb_gen_c_json_printer@@Base+0x268>
   2920c:	ldr	ip, [r7, #4]
   29210:	ldr	r2, [r7, #48]	; 0x30
   29214:	ldr	r3, [ip, #4]
   29218:	str	r3, [sp, #4]
   2921c:	ldr	ip, [ip]
   29220:	str	ip, [sp]
   29224:	bl	14064 <fprintf@plt>
   29228:	ldr	r3, [r4, #204]	; 0xcc
   2922c:	ldr	r7, [r7]
   29230:	cmp	r7, #0
   29234:	bne	291f8 <__flatcc_fb_gen_c_json_printer@@Base+0x234>
   29238:	ldr	r0, [pc, #664]	; 294d8 <__flatcc_fb_gen_c_json_printer@@Base+0x514>
   2923c:	mov	r2, #78	; 0x4e
   29240:	mov	r1, #1
   29244:	add	r0, pc, r0
   29248:	bl	13fec <fwrite@plt>
   2924c:	ldr	r0, [pc, #648]	; 294dc <__flatcc_fb_gen_c_json_printer@@Base+0x518>
   29250:	mov	r2, #9
   29254:	mov	r1, #1
   29258:	ldr	r3, [r4, #204]	; 0xcc
   2925c:	add	r0, pc, r0
   29260:	bl	13fec <fwrite@plt>
   29264:	mov	r1, r6
   29268:	mov	r0, r8
   2926c:	bl	275b4 <__flatcc_fb_gen_c_json_parser@@Base+0x1f94>
   29270:	ldr	r6, [r6]
   29274:	cmp	r6, #0
   29278:	bne	291a8 <__flatcc_fb_gen_c_json_printer@@Base+0x1e4>
   2927c:	ldr	r3, [r4, #208]	; 0xd0
   29280:	ldr	r6, [r3, #40]	; 0x28
   29284:	cmp	r6, #0
   29288:	beq	29310 <__flatcc_fb_gen_c_json_printer@@Base+0x34c>
   2928c:	add	r7, r4, #204	; 0xcc
   29290:	b	292a0 <__flatcc_fb_gen_c_json_printer@@Base+0x2dc>
   29294:	ldr	r6, [r6]
   29298:	cmp	r6, #0
   2929c:	beq	292c4 <__flatcc_fb_gen_c_json_printer@@Base+0x300>
   292a0:	ldrh	r3, [r6, #8]
   292a4:	cmp	r3, #1
   292a8:	bne	29294 <__flatcc_fb_gen_c_json_printer@@Base+0x2d0>
   292ac:	mov	r1, r6
   292b0:	mov	r0, r7
   292b4:	bl	27828 <__flatcc_fb_gen_c_json_parser@@Base+0x2208>
   292b8:	ldr	r6, [r6]
   292bc:	cmp	r6, #0
   292c0:	bne	292a0 <__flatcc_fb_gen_c_json_printer@@Base+0x2dc>
   292c4:	ldr	r3, [r4, #208]	; 0xd0
   292c8:	ldr	r6, [r3, #40]	; 0x28
   292cc:	cmp	r6, #0
   292d0:	beq	29310 <__flatcc_fb_gen_c_json_printer@@Base+0x34c>
   292d4:	add	r7, r4, #204	; 0xcc
   292d8:	b	292e8 <__flatcc_fb_gen_c_json_printer@@Base+0x324>
   292dc:	ldr	r6, [r6]
   292e0:	cmp	r6, #0
   292e4:	beq	2930c <__flatcc_fb_gen_c_json_printer@@Base+0x348>
   292e8:	ldrh	r3, [r6, #8]
   292ec:	cmp	r3, #0
   292f0:	bne	292dc <__flatcc_fb_gen_c_json_printer@@Base+0x318>
   292f4:	mov	r1, r6
   292f8:	mov	r0, r7
   292fc:	bl	2839c <__flatcc_fb_gen_c_json_parser@@Base+0x2d7c>
   29300:	ldr	r6, [r6]
   29304:	cmp	r6, #0
   29308:	bne	292e8 <__flatcc_fb_gen_c_json_printer@@Base+0x324>
   2930c:	ldr	r3, [r4, #208]	; 0xd0
   29310:	ldr	r6, [r3, #52]	; 0x34
   29314:	cmp	r6, #0
   29318:	beq	29328 <__flatcc_fb_gen_c_json_printer@@Base+0x364>
   2931c:	ldrh	r3, [r6, #8]
   29320:	cmp	r3, #1
   29324:	bls	29404 <__flatcc_fb_gen_c_json_printer@@Base+0x440>
   29328:	ldr	r0, [r4, #204]	; 0xcc
   2932c:	ldr	r3, [r4, #212]	; 0xd4
   29330:	ldr	r3, [r3, #140]	; 0x8c
   29334:	cmp	r3, #0
   29338:	bne	293ac <__flatcc_fb_gen_c_json_printer@@Base+0x3e8>
   2933c:	ldr	r3, [r4, #208]	; 0xd0
   29340:	ldr	r1, [pc, #408]	; 294e0 <__flatcc_fb_gen_c_json_printer@@Base+0x51c>
   29344:	ldr	r2, [r3, #164]	; 0xa4
   29348:	add	r1, pc, r1
   2934c:	bl	14064 <fprintf@plt>
   29350:	mov	r0, #0
   29354:	add	sp, sp, #232	; 0xe8
   29358:	ldrd	r4, [sp]
   2935c:	ldrd	r6, [sp, #8]
   29360:	ldrd	r8, [sp, #16]
   29364:	ldr	sl, [sp, #24]
   29368:	add	sp, sp, #28
   2936c:	pop	{pc}		; (ldr pc, [sp], #4)
   29370:	ldr	r0, [r6, #12]
   29374:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   29378:	mov	r2, r5
   2937c:	mov	r1, r9
   29380:	ldr	r0, [r4, #204]	; 0xcc
   29384:	bl	14064 <fprintf@plt>
   29388:	b	290dc <__flatcc_fb_gen_c_json_printer@@Base+0x118>
   2938c:	ldr	r0, [pc, #336]	; 294e4 <__flatcc_fb_gen_c_json_printer@@Base+0x520>
   29390:	mov	r3, r1
   29394:	mov	r2, #36	; 0x24
   29398:	mov	r1, #1
   2939c:	add	r0, pc, r0
   293a0:	bl	13fec <fwrite@plt>
   293a4:	ldr	r1, [r4, #204]	; 0xcc
   293a8:	b	29058 <__flatcc_fb_gen_c_json_printer@@Base+0x94>
   293ac:	mov	r3, r0
   293b0:	ldr	r0, [pc, #304]	; 294e8 <__flatcc_fb_gen_c_json_printer@@Base+0x524>
   293b4:	mov	r2, #36	; 0x24
   293b8:	mov	r1, #1
   293bc:	add	r0, pc, r0
   293c0:	bl	13fec <fwrite@plt>
   293c4:	ldr	r0, [r4, #204]	; 0xcc
   293c8:	b	2933c <__flatcc_fb_gen_c_json_printer@@Base+0x378>
   293cc:	ldr	r0, [pc, #280]	; 294ec <__flatcc_fb_gen_c_json_printer@@Base+0x528>
   293d0:	movw	r2, #482	; 0x1e2
   293d4:	mov	r1, #1
   293d8:	ldr	r3, [r4, #204]	; 0xcc
   293dc:	add	r0, pc, r0
   293e0:	bl	13fec <fwrite@plt>
   293e4:	ldr	r1, [pc, #260]	; 294f0 <__flatcc_fb_gen_c_json_printer@@Base+0x52c>
   293e8:	ldr	r0, [r4, #204]	; 0xcc
   293ec:	ldr	r3, [r4, #208]	; 0xd0
   293f0:	add	r1, pc, r1
   293f4:	ldr	r2, [r3, #160]	; 0xa0
   293f8:	bl	14064 <fprintf@plt>
   293fc:	ldr	r6, [r4, #208]	; 0xd0
   29400:	b	29090 <__flatcc_fb_gen_c_json_printer@@Base+0xcc>
   29404:	mov	r2, #220	; 0xdc
   29408:	mov	r1, #0
   2940c:	mov	r0, r5
   29410:	bl	1407c <memset@plt>
   29414:	mov	r2, r5
   29418:	mov	r1, r6
   2941c:	ldr	r0, [r6, #12]
   29420:	bl	16240 <__flatcc_fb_scoped_symbol_name@@Base>
   29424:	ldr	r1, [pc, #200]	; 294f4 <__flatcc_fb_gen_c_json_printer@@Base+0x530>
   29428:	ldr	r0, [r4, #204]	; 0xcc
   2942c:	ldr	r3, [r4, #208]	; 0xd0
   29430:	add	r1, pc, r1
   29434:	ldr	r2, [r3, #160]	; 0xa0
   29438:	bl	14064 <fprintf@plt>
   2943c:	ldr	r1, [pc, #180]	; 294f8 <__flatcc_fb_gen_c_json_printer@@Base+0x534>
   29440:	mov	r2, r5
   29444:	ldr	r0, [r4, #204]	; 0xcc
   29448:	add	r1, pc, r1
   2944c:	bl	14064 <fprintf@plt>
   29450:	ldr	r2, [r4, #208]	; 0xd0
   29454:	ldrh	r3, [r2, #16]
   29458:	cmp	r3, #2
   2945c:	beq	29494 <__flatcc_fb_gen_c_json_printer@@Base+0x4d0>
   29460:	ldr	r0, [pc, #148]	; 294fc <__flatcc_fb_gen_c_json_printer@@Base+0x538>
   29464:	mov	r2, #3
   29468:	mov	r1, #1
   2946c:	ldr	r3, [r4, #204]	; 0xcc
   29470:	add	r0, pc, r0
   29474:	bl	13fec <fwrite@plt>
   29478:	ldr	r0, [pc, #128]	; 29500 <__flatcc_fb_gen_c_json_printer@@Base+0x53c>
   2947c:	mov	r2, #3
   29480:	mov	r1, #1
   29484:	ldr	r3, [r4, #204]	; 0xcc
   29488:	add	r0, pc, r0
   2948c:	bl	13fec <fwrite@plt>
   29490:	b	29328 <__flatcc_fb_gen_c_json_printer@@Base+0x364>
   29494:	ldr	r1, [pc, #104]	; 29504 <__flatcc_fb_gen_c_json_printer@@Base+0x540>
   29498:	ldr	r3, [r2, #8]
   2949c:	ldr	r2, [r2, #12]
   294a0:	add	r1, pc, r1
   294a4:	ldr	r0, [r4, #204]	; 0xcc
   294a8:	bl	14064 <fprintf@plt>
   294ac:	b	29478 <__flatcc_fb_gen_c_json_printer@@Base+0x4b4>
   294b0:	andeq	lr, r2, r8, ror #22
   294b4:	andeq	sl, r1, r0, lsr #4
   294b8:	andeq	lr, r2, r8, asr fp
   294bc:	andeq	lr, r2, r0, ror fp
   294c0:	andeq	r8, r1, ip, lsr #21
   294c4:	andeq	lr, r2, r0, lsl #29
   294c8:	andeq	lr, r2, r0, lsl lr
   294cc:	andeq	lr, r2, r4, asr #26
   294d0:	andeq	lr, r2, r8, ror #27
   294d4:	andeq	lr, r2, r8, asr lr
   294d8:	strdeq	lr, [r2], -ip
   294dc:	andeq	sp, r2, r0, ror fp
   294e0:	andeq	lr, r2, r8, ror #28
   294e4:	andeq	r9, r1, r4, lsr #31
   294e8:	andeq	pc, r1, r8, ror #27
   294ec:	ldrdeq	lr, [r2], -ip
   294f0:	andeq	lr, r2, ip, lsr #19
   294f4:	andeq	lr, r2, r0, ror #24
   294f8:	andeq	lr, r2, r0, lsr #25
   294fc:	andeq	lr, r2, ip, lsr sp
   29500:	andeq	sl, r2, ip, ror #17
   29504:	andeq	lr, r2, r0, lsl #26
   29508:	str	r4, [sp, #-8]!
   2950c:	mov	r4, r0
   29510:	ldr	r0, [r0, #16]
   29514:	str	lr, [sp, #4]
   29518:	cmp	r0, #0
   2951c:	beq	29524 <__flatcc_fb_gen_c_json_printer@@Base+0x560>
   29520:	bl	13fa4 <free@plt>
   29524:	ldr	r0, [r4, #20]
   29528:	cmp	r0, #0
   2952c:	beq	29534 <__flatcc_fb_gen_c_json_printer@@Base+0x570>
   29530:	bl	13fa4 <free@plt>
   29534:	ldr	r0, [r4, #24]
   29538:	cmp	r0, #0
   2953c:	beq	29544 <__flatcc_fb_gen_c_json_printer@@Base+0x580>
   29540:	bl	13fa4 <free@plt>
   29544:	mov	r3, #0
   29548:	str	r3, [r4]
   2954c:	str	r3, [r4, #4]
   29550:	str	r3, [r4, #8]
   29554:	str	r3, [r4, #12]
   29558:	str	r3, [r4, #16]
   2955c:	str	r3, [r4, #20]
   29560:	str	r3, [r4, #24]
   29564:	str	r3, [r4, #28]
   29568:	str	r3, [r4, #32]
   2956c:	str	r3, [r4, #36]	; 0x24
   29570:	str	r3, [r4, #40]	; 0x28
   29574:	ldr	r4, [sp]
   29578:	add	sp, sp, #4
   2957c:	pop	{pc}		; (ldr pc, [sp], #4)
   29580:	add	r3, r1, #4
   29584:	ldr	r1, [pc, #12]	; 29598 <__flatcc_fb_gen_c_json_printer@@Base+0x5d4>
   29588:	mov	r2, r0
   2958c:	mov	r0, r3
   29590:	add	r1, pc, r1
   29594:	b	2c818 <fb_symbol_table_visit@@Base>
   29598:	andeq	r0, r0, r4, lsl #1
   2959c:	add	r3, r1, #4
   295a0:	ldr	r1, [pc, #12]	; 295b4 <__flatcc_fb_gen_c_json_printer@@Base+0x5f0>
   295a4:	mov	r2, r0
   295a8:	mov	r0, r3
   295ac:	add	r1, pc, r1
   295b0:	b	2c818 <fb_symbol_table_visit@@Base>
   295b4:	strdeq	r0, [r0], -r4
   295b8:	ldr	r3, [pc, #76]	; 2960c <__flatcc_fb_gen_c_json_printer@@Base+0x648>
   295bc:	mov	r2, #8
   295c0:	strd	r4, [sp, #-16]!
   295c4:	mov	r4, r1
   295c8:	mov	r5, r0
   295cc:	str	r6, [sp, #8]
   295d0:	str	lr, [sp, #12]
   295d4:	add	r3, pc, r3
   295d8:	bl	140e8 <qsort@plt>
   295dc:	cmp	r4, #0
   295e0:	ble	295fc <__flatcc_fb_gen_c_json_printer@@Base+0x638>
   295e4:	mov	r3, #0
   295e8:	ldr	r2, [r5, r3, lsl #3]
   295ec:	str	r3, [r2, #124]	; 0x7c
   295f0:	add	r3, r3, #1
   295f4:	cmp	r4, r3
   295f8:	bne	295e8 <__flatcc_fb_gen_c_json_printer@@Base+0x624>
   295fc:	ldrd	r4, [sp]
   29600:	ldr	r6, [sp, #8]
   29604:	add	sp, sp, #12
   29608:	pop	{pc}		; (ldr pc, [sp], #4)
   2960c:	andeq	r0, r0, r4, lsr r0
   29610:	ldr	r0, [r0, #4]
   29614:	ldr	r1, [r1, #4]
   29618:	b	13f8c <strcmp@plt>
   2961c:	ldrh	r3, [r1, #8]
   29620:	cmp	r3, #4
   29624:	bxhi	lr
   29628:	strd	r4, [sp, #-32]!	; 0xffffffe0
   2962c:	strd	r6, [sp, #8]
   29630:	mov	r7, r0
   29634:	mov	r6, r1
   29638:	ldr	r0, [r0, #40]	; 0x28
   2963c:	strd	r8, [sp, #16]
   29640:	ldr	r1, [r1, #16]
   29644:	str	sl, [sp, #24]
   29648:	str	lr, [sp, #28]
   2964c:	add	r0, r0, #172	; 0xac
   29650:	bl	2c058 <ptr_set_find_item@@Base>
   29654:	cmp	r0, #0
   29658:	beq	29708 <__flatcc_fb_gen_c_json_printer@@Base+0x744>
   2965c:	ldr	r3, [r7]
   29660:	ldr	r9, [r7, #36]	; 0x24
   29664:	cmp	r3, #0
   29668:	moveq	r4, r9
   2966c:	beq	296ac <__flatcc_fb_gen_c_json_printer@@Base+0x6e8>
   29670:	ldr	r3, [r6, #12]
   29674:	mov	r4, r9
   29678:	ldr	r5, [r3]
   2967c:	cmp	r5, #0
   29680:	beq	296ac <__flatcc_fb_gen_c_json_printer@@Base+0x6e8>
   29684:	mov	r8, #46	; 0x2e
   29688:	ldr	r3, [r5, #4]
   2968c:	mov	r0, r4
   29690:	ldm	r3, {r1, r2}
   29694:	add	r4, r4, r2
   29698:	bl	13fb0 <memcpy@plt>
   2969c:	strb	r8, [r4], #1
   296a0:	ldr	r5, [r5]
   296a4:	cmp	r5, #0
   296a8:	bne	29688 <__flatcc_fb_gen_c_json_printer@@Base+0x6c4>
   296ac:	ldr	r3, [r6, #4]
   296b0:	mov	r0, r4
   296b4:	ldm	r3, {r1, r5}
   296b8:	mov	r2, r5
   296bc:	bl	13fb0 <memcpy@plt>
   296c0:	mov	r2, #0
   296c4:	add	r3, r4, r5
   296c8:	add	r3, r3, #1
   296cc:	strb	r2, [r4, r5]
   296d0:	ldrh	r2, [r6, #8]
   296d4:	str	r3, [r7, #36]	; 0x24
   296d8:	cmp	r2, #4
   296dc:	addls	pc, pc, r2, lsl #2
   296e0:	b	29708 <__flatcc_fb_gen_c_json_printer@@Base+0x744>
   296e4:	b	29720 <__flatcc_fb_gen_c_json_printer@@Base+0x75c>
   296e8:	b	29720 <__flatcc_fb_gen_c_json_printer@@Base+0x75c>
   296ec:	b	29708 <__flatcc_fb_gen_c_json_printer@@Base+0x744>
   296f0:	b	296f8 <__flatcc_fb_gen_c_json_printer@@Base+0x734>
   296f4:	b	296f8 <__flatcc_fb_gen_c_json_printer@@Base+0x734>
   296f8:	ldr	r3, [r7, #32]
   296fc:	add	r2, r3, #8
   29700:	stm	r3, {r6, r9}
   29704:	str	r2, [r7, #32]
   29708:	ldrd	r4, [sp]
   2970c:	ldrd	r6, [sp, #8]
   29710:	ldrd	r8, [sp, #16]
   29714:	ldr	sl, [sp, #24]
   29718:	add	sp, sp, #28
   2971c:	pop	{pc}		; (ldr pc, [sp], #4)
   29720:	ldr	r3, [r7, #28]
   29724:	add	r2, r3, #8
   29728:	stm	r3, {r6, r9}
   2972c:	str	r2, [r7, #28]
   29730:	b	29708 <__flatcc_fb_gen_c_json_printer@@Base+0x744>
   29734:	sub	r2, r2, #2
   29738:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2973c:	mov	r4, r0
   29740:	strd	r6, [sp, #8]
   29744:	str	r8, [sp, #16]
   29748:	str	lr, [sp, #20]
   2974c:	cmp	r2, #13
   29750:	addls	pc, pc, r2, lsl #2
   29754:	b	298fc <__flatcc_fb_gen_c_json_printer@@Base+0x938>
   29758:	b	29878 <__flatcc_fb_gen_c_json_printer@@Base+0x8b4>
   2975c:	b	298fc <__flatcc_fb_gen_c_json_printer@@Base+0x938>
   29760:	b	298fc <__flatcc_fb_gen_c_json_printer@@Base+0x938>
   29764:	b	298fc <__flatcc_fb_gen_c_json_printer@@Base+0x938>
   29768:	b	298fc <__flatcc_fb_gen_c_json_printer@@Base+0x938>
   2976c:	b	29888 <__flatcc_fb_gen_c_json_printer@@Base+0x8c4>
   29770:	b	29790 <__flatcc_fb_gen_c_json_printer@@Base+0x7cc>
   29774:	b	29934 <__flatcc_fb_gen_c_json_printer@@Base+0x970>
   29778:	b	298fc <__flatcc_fb_gen_c_json_printer@@Base+0x938>
   2977c:	b	298fc <__flatcc_fb_gen_c_json_printer@@Base+0x938>
   29780:	b	298fc <__flatcc_fb_gen_c_json_printer@@Base+0x938>
   29784:	b	298fc <__flatcc_fb_gen_c_json_printer@@Base+0x938>
   29788:	b	298b4 <__flatcc_fb_gen_c_json_printer@@Base+0x8f0>
   2978c:	b	298dc <__flatcc_fb_gen_c_json_printer@@Base+0x918>
   29790:	mvn	r6, #0
   29794:	sub	r1, r1, #1
   29798:	cmp	r1, #10
   2979c:	bhi	29928 <__flatcc_fb_gen_c_json_printer@@Base+0x964>
   297a0:	ldr	r3, [pc, #492]	; 29994 <__flatcc_fb_gen_c_json_printer@@Base+0x9d0>
   297a4:	mov	r5, #0
   297a8:	add	r3, pc, r3
   297ac:	ldrsb	r7, [r3, r1]
   297b0:	mov	r1, #3
   297b4:	mov	r0, r4
   297b8:	bl	3b14c <flatcc_builder_start_table@@Base>
   297bc:	cmp	r0, #0
   297c0:	bne	29910 <__flatcc_fb_gen_c_json_printer@@Base+0x94c>
   297c4:	cmn	r6, #1
   297c8:	beq	297ec <__flatcc_fb_gen_c_json_printer@@Base+0x828>
   297cc:	mov	r3, #4
   297d0:	mov	r1, #2
   297d4:	mov	r2, r3
   297d8:	mov	r0, r4
   297dc:	bl	3cc80 <flatcc_builder_table_add@@Base>
   297e0:	cmp	r0, #0
   297e4:	beq	29910 <__flatcc_fb_gen_c_json_printer@@Base+0x94c>
   297e8:	str	r6, [r0]
   297ec:	cmp	r7, #0
   297f0:	beq	29814 <__flatcc_fb_gen_c_json_printer@@Base+0x850>
   297f4:	mov	r3, #1
   297f8:	mov	r1, #0
   297fc:	mov	r2, r3
   29800:	mov	r0, r4
   29804:	bl	3cc80 <flatcc_builder_table_add@@Base>
   29808:	cmp	r0, #0
   2980c:	beq	29910 <__flatcc_fb_gen_c_json_printer@@Base+0x94c>
   29810:	strb	r7, [r0]
   29814:	cmp	r5, #0
   29818:	beq	2983c <__flatcc_fb_gen_c_json_printer@@Base+0x878>
   2981c:	mov	r3, #1
   29820:	mov	r0, r4
   29824:	mov	r2, r3
   29828:	mov	r1, r3
   2982c:	bl	3cc80 <flatcc_builder_table_add@@Base>
   29830:	cmp	r0, #0
   29834:	beq	29910 <__flatcc_fb_gen_c_json_printer@@Base+0x94c>
   29838:	strb	r5, [r0]
   2983c:	ldr	r5, [pc, #340]	; 29998 <__flatcc_fb_gen_c_json_printer@@Base+0x9d4>
   29840:	mov	r2, #0
   29844:	mov	r0, r4
   29848:	add	r5, pc, r5
   2984c:	add	r1, r5, #12
   29850:	bl	3ba84 <flatcc_builder_check_required@@Base>
   29854:	cmp	r0, #0
   29858:	beq	29978 <__flatcc_fb_gen_c_json_printer@@Base+0x9b4>
   2985c:	mov	r0, r4
   29860:	ldrd	r4, [sp]
   29864:	ldrd	r6, [sp, #8]
   29868:	ldr	r8, [sp, #16]
   2986c:	ldr	lr, [sp, #20]
   29870:	add	sp, sp, #24
   29874:	b	3bb30 <flatcc_builder_end_table@@Base>
   29878:	mvn	r6, #0
   2987c:	mov	r7, #13
   29880:	mov	r5, #0
   29884:	b	297b0 <__flatcc_fb_gen_c_json_printer@@Base+0x7ec>
   29888:	mvn	r6, #0
   2988c:	sub	r1, r1, #1
   29890:	cmp	r1, #10
   29894:	movhi	r5, #0
   29898:	movhi	r7, #14
   2989c:	bhi	297b0 <__flatcc_fb_gen_c_json_printer@@Base+0x7ec>
   298a0:	ldr	r3, [pc, #244]	; 2999c <__flatcc_fb_gen_c_json_printer@@Base+0x9d8>
   298a4:	mov	r7, #14
   298a8:	add	r3, pc, r3
   298ac:	ldrsb	r5, [r3, r1]
   298b0:	b	297b0 <__flatcc_fb_gen_c_json_printer@@Base+0x7ec>
   298b4:	ldrh	r3, [r1, #8]
   298b8:	ldr	r6, [r1, #124]	; 0x7c
   298bc:	cmp	r3, #4
   298c0:	addls	pc, pc, r3, lsl #2
   298c4:	b	298fc <__flatcc_fb_gen_c_json_printer@@Base+0x938>
   298c8:	b	29958 <__flatcc_fb_gen_c_json_printer@@Base+0x994>
   298cc:	b	29958 <__flatcc_fb_gen_c_json_printer@@Base+0x994>
   298d0:	b	298fc <__flatcc_fb_gen_c_json_printer@@Base+0x938>
   298d4:	b	29964 <__flatcc_fb_gen_c_json_printer@@Base+0x9a0>
   298d8:	b	29950 <__flatcc_fb_gen_c_json_printer@@Base+0x98c>
   298dc:	ldrh	r3, [r1, #8]
   298e0:	ldr	r6, [r1, #124]	; 0x7c
   298e4:	cmp	r3, #1
   298e8:	bls	2996c <__flatcc_fb_gen_c_json_printer@@Base+0x9a8>
   298ec:	cmp	r3, #3
   298f0:	bne	29928 <__flatcc_fb_gen_c_json_printer@@Base+0x964>
   298f4:	ldr	r1, [r1, #40]	; 0x28
   298f8:	b	2988c <__flatcc_fb_gen_c_json_printer@@Base+0x8c8>
   298fc:	mov	r1, #3
   29900:	mov	r0, r4
   29904:	bl	3b14c <flatcc_builder_start_table@@Base>
   29908:	cmp	r0, #0
   2990c:	beq	2983c <__flatcc_fb_gen_c_json_printer@@Base+0x878>
   29910:	ldrd	r4, [sp]
   29914:	mov	r0, #0
   29918:	ldrd	r6, [sp, #8]
   2991c:	ldr	r8, [sp, #16]
   29920:	add	sp, sp, #20
   29924:	pop	{pc}		; (ldr pc, [sp], #4)
   29928:	mov	r5, #0
   2992c:	mov	r7, r5
   29930:	b	297b0 <__flatcc_fb_gen_c_json_printer@@Base+0x7ec>
   29934:	mov	r1, #3
   29938:	bl	3b14c <flatcc_builder_start_table@@Base>
   2993c:	cmp	r0, #0
   29940:	bne	29910 <__flatcc_fb_gen_c_json_printer@@Base+0x94c>
   29944:	mov	r5, #13
   29948:	mov	r7, #14
   2994c:	b	297f4 <__flatcc_fb_gen_c_json_printer@@Base+0x830>
   29950:	mov	r7, #16
   29954:	b	29880 <__flatcc_fb_gen_c_json_printer@@Base+0x8bc>
   29958:	mov	r5, #0
   2995c:	mov	r7, #15
   29960:	b	297b0 <__flatcc_fb_gen_c_json_printer@@Base+0x7ec>
   29964:	ldr	r1, [r1, #40]	; 0x28
   29968:	b	29794 <__flatcc_fb_gen_c_json_printer@@Base+0x7d0>
   2996c:	mov	r5, #15
   29970:	mov	r7, #14
   29974:	b	297b0 <__flatcc_fb_gen_c_json_printer@@Base+0x7ec>
   29978:	ldr	r1, [pc, #32]	; 299a0 <__flatcc_fb_gen_c_json_printer@@Base+0x9dc>
   2997c:	add	r3, r5, #16
   29980:	mov	r2, #23
   29984:	ldr	r0, [pc, #24]	; 299a4 <__flatcc_fb_gen_c_json_printer@@Base+0x9e0>
   29988:	add	r1, pc, r1
   2998c:	add	r0, pc, r0
   29990:	bl	14118 <__assert_fail@plt>
   29994:	andeq	lr, r2, r8, lsr #20
   29998:	andeq	lr, r2, r8, lsl #19
   2999c:	andeq	lr, r2, r8, lsr #18
   299a0:	andeq	lr, r2, ip, ror #18
   299a4:	andeq	lr, r2, r0, ror #19
   299a8:	ldrh	r3, [r1, #8]
   299ac:	cmp	r3, #4
   299b0:	bxhi	lr
   299b4:	strd	r4, [sp, #-16]!
   299b8:	mov	r4, r0
   299bc:	mov	r5, r1
   299c0:	ldr	r0, [r0, #40]	; 0x28
   299c4:	ldr	r1, [r1, #16]
   299c8:	str	r6, [sp, #8]
   299cc:	str	lr, [sp, #12]
   299d0:	add	r0, r0, #172	; 0xac
   299d4:	bl	2c058 <ptr_set_find_item@@Base>
   299d8:	cmp	r0, #0
   299dc:	beq	29a68 <__flatcc_fb_gen_c_json_printer@@Base+0xaa4>
   299e0:	ldr	ip, [r4]
   299e4:	cmp	ip, #0
   299e8:	beq	29a1c <__flatcc_fb_gen_c_json_printer@@Base+0xa58>
   299ec:	ldr	r3, [r5, #12]
   299f0:	ldr	r3, [r3]
   299f4:	cmp	r3, #0
   299f8:	beq	29a94 <__flatcc_fb_gen_c_json_printer@@Base+0xad0>
   299fc:	mov	ip, #0
   29a00:	ldr	r2, [r3, #4]
   29a04:	ldr	r3, [r3]
   29a08:	ldr	r2, [r2, #4]
   29a0c:	cmp	r3, #0
   29a10:	add	r2, r2, #1
   29a14:	add	ip, ip, r2
   29a18:	bne	29a00 <__flatcc_fb_gen_c_json_printer@@Base+0xa3c>
   29a1c:	ldr	r3, [r5, #4]
   29a20:	ldr	r1, [r4, #12]
   29a24:	ldrh	r2, [r5, #8]
   29a28:	ldr	r3, [r3, #4]
   29a2c:	add	r3, r3, r1
   29a30:	add	r3, r3, #1
   29a34:	add	ip, r3, ip
   29a38:	str	ip, [r4, #12]
   29a3c:	cmp	r2, #4
   29a40:	addls	pc, pc, r2, lsl #2
   29a44:	b	29a68 <__flatcc_fb_gen_c_json_printer@@Base+0xaa4>
   29a48:	b	29a78 <__flatcc_fb_gen_c_json_printer@@Base+0xab4>
   29a4c:	b	29a78 <__flatcc_fb_gen_c_json_printer@@Base+0xab4>
   29a50:	b	29a68 <__flatcc_fb_gen_c_json_printer@@Base+0xaa4>
   29a54:	b	29a5c <__flatcc_fb_gen_c_json_printer@@Base+0xa98>
   29a58:	b	29a5c <__flatcc_fb_gen_c_json_printer@@Base+0xa98>
   29a5c:	ldr	r3, [r4, #8]
   29a60:	add	r3, r3, #1
   29a64:	str	r3, [r4, #8]
   29a68:	ldrd	r4, [sp]
   29a6c:	ldr	r6, [sp, #8]
   29a70:	add	sp, sp, #12
   29a74:	pop	{pc}		; (ldr pc, [sp], #4)
   29a78:	ldr	r3, [r4, #4]
   29a7c:	ldr	r6, [sp, #8]
   29a80:	add	r3, r3, #1
   29a84:	str	r3, [r4, #4]
   29a88:	ldrd	r4, [sp]
   29a8c:	add	sp, sp, #12
   29a90:	pop	{pc}		; (ldr pc, [sp], #4)
   29a94:	mov	ip, r3
   29a98:	b	29a1c <__flatcc_fb_gen_c_json_printer@@Base+0xa58>
   29a9c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   29aa0:	mov	ip, #0
   29aa4:	mov	r5, r2
   29aa8:	strd	r6, [sp, #8]
   29aac:	strd	r8, [sp, #16]
   29ab0:	strd	sl, [sp, #24]
   29ab4:	mov	fp, r0
   29ab8:	str	lr, [sp, #32]
   29abc:	vpush	{d8}
   29ac0:	sub	sp, sp, #116	; 0x74
   29ac4:	ldr	r6, [r3, #60]	; 0x3c
   29ac8:	add	lr, sp, #68	; 0x44
   29acc:	mov	r2, lr
   29ad0:	str	r3, [sp, #4]
   29ad4:	str	r1, [sp, #68]	; 0x44
   29ad8:	ldr	r1, [pc, #3176]	; 2a748 <__flatcc_fb_gen_c_json_printer@@Base+0x1784>
   29adc:	str	lr, [sp, #20]
   29ae0:	mov	r0, r6
   29ae4:	str	ip, [sp, #72]	; 0x48
   29ae8:	str	ip, [sp, #76]	; 0x4c
   29aec:	str	ip, [sp, #80]	; 0x50
   29af0:	add	r1, pc, r1
   29af4:	str	ip, [sp, #84]	; 0x54
   29af8:	str	ip, [sp, #88]	; 0x58
   29afc:	str	ip, [sp, #92]	; 0x5c
   29b00:	str	ip, [sp, #96]	; 0x60
   29b04:	str	ip, [sp, #100]	; 0x64
   29b08:	str	ip, [sp, #104]	; 0x68
   29b0c:	str	r3, [sp, #108]	; 0x6c
   29b10:	bl	2d89c <fb_scope_table_visit@@Base>
   29b14:	ldr	r7, [sp, #72]	; 0x48
   29b18:	mov	r1, #8
   29b1c:	mov	r0, r7
   29b20:	bl	13f74 <calloc@plt>
   29b24:	ldr	r8, [sp, #76]	; 0x4c
   29b28:	mov	r9, r0
   29b2c:	mov	r1, #8
   29b30:	str	r0, [sp, #84]	; 0x54
   29b34:	mov	r0, r8
   29b38:	bl	13f74 <calloc@plt>
   29b3c:	ldr	r4, [sp, #80]	; 0x50
   29b40:	mov	sl, r0
   29b44:	str	r0, [sp, #88]	; 0x58
   29b48:	mov	r0, r4
   29b4c:	bl	14010 <malloc@plt>
   29b50:	cmp	r7, #0
   29b54:	str	r0, [sp, #92]	; 0x5c
   29b58:	movle	r7, #0
   29b5c:	movgt	r7, #1
   29b60:	str	r9, [sp, #96]	; 0x60
   29b64:	cmp	r9, #0
   29b68:	str	sl, [sp, #100]	; 0x64
   29b6c:	movne	r7, #0
   29b70:	str	r0, [sp, #104]	; 0x68
   29b74:	cmp	r7, #0
   29b78:	bne	2a618 <__flatcc_fb_gen_c_json_printer@@Base+0x1654>
   29b7c:	cmp	r8, #0
   29b80:	movle	r8, #0
   29b84:	movgt	r8, #1
   29b88:	cmp	sl, #0
   29b8c:	movne	r8, #0
   29b90:	cmp	r8, #0
   29b94:	bne	2a618 <__flatcc_fb_gen_c_json_printer@@Base+0x1654>
   29b98:	adds	r4, r4, #0
   29b9c:	movne	r4, #1
   29ba0:	cmp	r0, #0
   29ba4:	movne	r4, #0
   29ba8:	cmp	r4, #0
   29bac:	bne	2a618 <__flatcc_fb_gen_c_json_printer@@Base+0x1654>
   29bb0:	ldr	r1, [pc, #2964]	; 2a74c <__flatcc_fb_gen_c_json_printer@@Base+0x1788>
   29bb4:	mov	r0, r6
   29bb8:	ldr	r2, [sp, #20]
   29bbc:	add	r1, pc, r1
   29bc0:	bl	2d89c <fb_scope_table_visit@@Base>
   29bc4:	ldr	r1, [sp, #72]	; 0x48
   29bc8:	ldr	r0, [sp, #84]	; 0x54
   29bcc:	bl	295b8 <__flatcc_fb_gen_c_json_printer@@Base+0x5f4>
   29bd0:	ldr	r1, [sp, #76]	; 0x4c
   29bd4:	ldr	r0, [sp, #88]	; 0x58
   29bd8:	bl	295b8 <__flatcc_fb_gen_c_json_printer@@Base+0x5f4>
   29bdc:	ldr	r0, [sp, #72]	; 0x48
   29be0:	cmp	r0, #0
   29be4:	strle	r4, [sp]
   29be8:	bgt	2a604 <__flatcc_fb_gen_c_json_printer@@Base+0x1640>
   29bec:	ldr	r3, [r5]
   29bf0:	cmp	r3, #0
   29bf4:	bne	2a010 <__flatcc_fb_gen_c_json_printer@@Base+0x104c>
   29bf8:	ldr	r1, [pc, #2896]	; 2a750 <__flatcc_fb_gen_c_json_printer@@Base+0x178c>
   29bfc:	mov	r2, r3
   29c00:	mov	r0, fp
   29c04:	add	r1, pc, r1
   29c08:	bl	3a174 <flatcc_builder_start_buffer@@Base>
   29c0c:	cmp	r0, #0
   29c10:	bne	29c20 <__flatcc_fb_gen_c_json_printer@@Base+0xc5c>
   29c14:	mov	r1, #5
   29c18:	mov	r0, fp
   29c1c:	bl	3b14c <flatcc_builder_start_table@@Base>
   29c20:	ldr	r3, [sp, #4]
   29c24:	ldrh	r4, [r3, #16]
   29c28:	cmp	r4, #2
   29c2c:	beq	2a65c <__flatcc_fb_gen_c_json_printer@@Base+0x1698>
   29c30:	ldr	r3, [sp, #4]
   29c34:	ldrh	r3, [r3, #32]
   29c38:	cmp	r3, #2
   29c3c:	beq	2a628 <__flatcc_fb_gen_c_json_printer@@Base+0x1664>
   29c40:	ldr	r3, [sp, #72]	; 0x48
   29c44:	ldr	r2, [sp, #84]	; 0x54
   29c48:	cmp	r3, #0
   29c4c:	str	r3, [sp, #16]
   29c50:	str	r2, [sp, #28]
   29c54:	ble	2a0e0 <__flatcc_fb_gen_c_json_printer@@Base+0x111c>
   29c58:	ldr	r2, [sp]
   29c5c:	mov	sl, #0
   29c60:	ldr	r3, [pc, #2796]	; 2a754 <__flatcc_fb_gen_c_json_printer@@Base+0x1790>
   29c64:	str	sl, [sp, #8]
   29c68:	sub	r2, r2, #4
   29c6c:	str	r2, [sp, #24]
   29c70:	add	r3, pc, r3
   29c74:	ldr	r2, [sp, #28]
   29c78:	add	r3, r3, #36	; 0x24
   29c7c:	str	r3, [sp, #52]	; 0x34
   29c80:	add	r2, r2, #4
   29c84:	str	r2, [sp, #48]	; 0x30
   29c88:	ldr	r2, [pc, #2760]	; 2a758 <__flatcc_fb_gen_c_json_printer@@Base+0x1794>
   29c8c:	add	r2, pc, r2
   29c90:	add	r3, r2, #12
   29c94:	str	r3, [sp, #56]	; 0x38
   29c98:	str	r2, [sp, #60]	; 0x3c
   29c9c:	ldr	r4, [sp, #8]
   29ca0:	mov	r1, #5
   29ca4:	mov	r0, fp
   29ca8:	ldr	r3, [sp, #28]
   29cac:	ldr	sl, [r3, r4, lsl #3]
   29cb0:	bl	3b14c <flatcc_builder_start_table@@Base>
   29cb4:	ldr	r3, [sp, #48]	; 0x30
   29cb8:	mov	r0, fp
   29cbc:	ldr	r1, [r3, r4, lsl #3]
   29cc0:	bl	3cab4 <flatcc_builder_create_string_str@@Base>
   29cc4:	subs	r4, r0, #0
   29cc8:	beq	29ce0 <__flatcc_fb_gen_c_json_printer@@Base+0xd1c>
   29ccc:	mov	r1, #0
   29cd0:	mov	r0, fp
   29cd4:	bl	3cec4 <flatcc_builder_table_add_offset@@Base>
   29cd8:	cmp	r0, #0
   29cdc:	strne	r4, [r0]
   29ce0:	mov	r0, fp
   29ce4:	bl	3af2c <flatcc_builder_start_offset_vector@@Base>
   29ce8:	ldr	r9, [sl, #20]
   29cec:	cmp	r9, #0
   29cf0:	beq	2a038 <__flatcc_fb_gen_c_json_printer@@Base+0x1074>
   29cf4:	ldr	r3, [pc, #2656]	; 2a75c <__flatcc_fb_gen_c_json_printer@@Base+0x1798>
   29cf8:	mov	r8, #0
   29cfc:	str	sl, [sp, #12]
   29d00:	add	r3, pc, r3
   29d04:	str	r3, [sp, #40]	; 0x28
   29d08:	ldr	r3, [pc, #2640]	; 2a760 <__flatcc_fb_gen_c_json_printer@@Base+0x179c>
   29d0c:	add	r3, pc, r3
   29d10:	str	r3, [sp, #44]	; 0x2c
   29d14:	b	29e2c <__flatcc_fb_gen_c_json_printer@@Base+0xe68>
   29d18:	mov	r1, #9
   29d1c:	mov	r0, fp
   29d20:	bl	3b14c <flatcc_builder_start_table@@Base>
   29d24:	ldr	r3, [r9, #4]
   29d28:	mov	r0, fp
   29d2c:	ldm	r3, {r1, r2}
   29d30:	bl	3c99c <flatcc_builder_create_string@@Base>
   29d34:	subs	r6, r0, #0
   29d38:	beq	29d50 <__flatcc_fb_gen_c_json_printer@@Base+0xd8c>
   29d3c:	mov	r1, #0
   29d40:	mov	r0, fp
   29d44:	bl	3cec4 <flatcc_builder_table_add_offset@@Base>
   29d48:	cmp	r0, #0
   29d4c:	strne	r6, [r0]
   29d50:	ldrh	r2, [r9, #24]
   29d54:	mov	r0, fp
   29d58:	ldr	r1, [r9, #16]
   29d5c:	bl	29734 <__flatcc_fb_gen_c_json_printer@@Base+0x770>
   29d60:	subs	r6, r0, #0
   29d64:	beq	29d7c <__flatcc_fb_gen_c_json_printer@@Base+0xdb8>
   29d68:	mov	r1, #1
   29d6c:	mov	r0, fp
   29d70:	bl	3cec4 <flatcc_builder_table_add_offset@@Base>
   29d74:	cmp	r0, #0
   29d78:	strne	r6, [r0]
   29d7c:	ldr	r3, [sp, #12]
   29d80:	ldrh	r3, [r3, #8]
   29d84:	cmp	r3, #0
   29d88:	beq	2a468 <__flatcc_fb_gen_c_json_printer@@Base+0x14a4>
   29d8c:	cmp	r3, #1
   29d90:	bne	29dbc <__flatcc_fb_gen_c_json_printer@@Base+0xdf8>
   29d94:	ldrh	r5, [r9, #80]	; 0x50
   29d98:	cmp	r5, #0
   29d9c:	beq	29dbc <__flatcc_fb_gen_c_json_printer@@Base+0xdf8>
   29da0:	mov	r3, #2
   29da4:	mov	r1, #3
   29da8:	mov	r2, r3
   29dac:	mov	r0, fp
   29db0:	bl	3cc80 <flatcc_builder_table_add@@Base>
   29db4:	cmp	r0, #0
   29db8:	strhne	r5, [r0]
   29dbc:	ldr	r3, [sp, #32]
   29dc0:	cmp	r3, #0
   29dc4:	beq	29de8 <__flatcc_fb_gen_c_json_printer@@Base+0xe24>
   29dc8:	mov	r3, #1
   29dcc:	mov	r1, #6
   29dd0:	mov	r2, r3
   29dd4:	mov	r0, fp
   29dd8:	bl	3cc80 <flatcc_builder_table_add@@Base>
   29ddc:	cmp	r0, #0
   29de0:	ldrne	r3, [sp, #36]	; 0x24
   29de4:	strbne	r3, [r0]
   29de8:	ldr	r3, [sp, #44]	; 0x2c
   29dec:	mov	r2, #2
   29df0:	mov	r0, fp
   29df4:	add	r1, r3, #36	; 0x24
   29df8:	bl	3ba84 <flatcc_builder_check_required@@Base>
   29dfc:	cmp	r0, #0
   29e00:	beq	2a68c <__flatcc_fb_gen_c_json_printer@@Base+0x16c8>
   29e04:	mov	r0, fp
   29e08:	bl	3bb30 <flatcc_builder_end_table@@Base>
   29e0c:	subs	r1, r0, #0
   29e10:	beq	29e1c <__flatcc_fb_gen_c_json_printer@@Base+0xe58>
   29e14:	mov	r0, fp
   29e18:	bl	3a87c <flatcc_builder_offset_vector_push@@Base>
   29e1c:	ldr	r9, [r9]
   29e20:	orr	r8, r8, r4
   29e24:	cmp	r9, #0
   29e28:	beq	2a034 <__flatcc_fb_gen_c_json_printer@@Base+0x1070>
   29e2c:	cmp	r8, #0
   29e30:	ldrh	r5, [r9, #72]	; 0x48
   29e34:	movne	r4, #0
   29e38:	movne	sl, r4
   29e3c:	bne	29e54 <__flatcc_fb_gen_c_json_printer@@Base+0xe90>
   29e40:	tst	r5, #128	; 0x80
   29e44:	movne	r4, #1
   29e48:	moveq	r4, r8
   29e4c:	moveq	sl, r8
   29e50:	movne	sl, r4
   29e54:	ldrh	r3, [r9, #24]
   29e58:	and	r2, r5, #4
   29e5c:	str	r2, [sp, #32]
   29e60:	ubfx	r2, r5, #2, #1
   29e64:	cmp	r3, #14
   29e68:	str	r2, [sp, #36]	; 0x24
   29e6c:	bne	29d18 <__flatcc_fb_gen_c_json_printer@@Base+0xd54>
   29e70:	ldr	r3, [r9, #16]
   29e74:	ldrh	r3, [r3, #8]
   29e78:	cmp	r3, #4
   29e7c:	bne	29d18 <__flatcc_fb_gen_c_json_printer@@Base+0xd54>
   29e80:	mov	r1, #9
   29e84:	mov	r0, fp
   29e88:	bl	3b14c <flatcc_builder_start_table@@Base>
   29e8c:	mov	r0, fp
   29e90:	bl	3afa8 <flatcc_builder_start_string@@Base>
   29e94:	ldr	r3, [r9, #4]
   29e98:	mov	r0, fp
   29e9c:	ldm	r3, {r1, r2}
   29ea0:	bl	3aae4 <flatcc_builder_append_string@@Base>
   29ea4:	mov	r2, #5
   29ea8:	mov	r0, fp
   29eac:	ldr	r1, [sp, #40]	; 0x28
   29eb0:	bl	3aae4 <flatcc_builder_append_string@@Base>
   29eb4:	mov	r0, fp
   29eb8:	bl	3cb3c <flatcc_builder_end_string@@Base>
   29ebc:	subs	r6, r0, #0
   29ec0:	beq	29ed8 <__flatcc_fb_gen_c_json_printer@@Base+0xf14>
   29ec4:	mov	r1, #0
   29ec8:	mov	r0, fp
   29ecc:	bl	3cec4 <flatcc_builder_table_add_offset@@Base>
   29ed0:	cmp	r0, #0
   29ed4:	strne	r6, [r0]
   29ed8:	mov	r1, #3
   29edc:	mov	r0, fp
   29ee0:	bl	3b14c <flatcc_builder_start_table@@Base>
   29ee4:	subs	r7, r0, #0
   29ee8:	bne	29f4c <__flatcc_fb_gen_c_json_printer@@Base+0xf88>
   29eec:	mov	r3, #1
   29ef0:	mov	r1, r7
   29ef4:	mov	r2, r3
   29ef8:	mov	r0, fp
   29efc:	bl	3cc80 <flatcc_builder_table_add@@Base>
   29f00:	subs	r3, r0, #0
   29f04:	beq	29f4c <__flatcc_fb_gen_c_json_printer@@Base+0xf88>
   29f08:	mov	r6, #1
   29f0c:	mov	r2, r7
   29f10:	ldr	r1, [sp, #56]	; 0x38
   29f14:	mov	r0, fp
   29f18:	strb	r6, [r3]
   29f1c:	bl	3ba84 <flatcc_builder_check_required@@Base>
   29f20:	cmp	r0, #0
   29f24:	beq	2a70c <__flatcc_fb_gen_c_json_printer@@Base+0x1748>
   29f28:	mov	r0, fp
   29f2c:	bl	3bb30 <flatcc_builder_end_table@@Base>
   29f30:	subs	r7, r0, #0
   29f34:	beq	29f4c <__flatcc_fb_gen_c_json_printer@@Base+0xf88>
   29f38:	mov	r1, r6
   29f3c:	mov	r0, fp
   29f40:	bl	3cec4 <flatcc_builder_table_add_offset@@Base>
   29f44:	cmp	r0, #0
   29f48:	strne	r7, [r0]
   29f4c:	ldrh	r6, [r9, #96]	; 0x60
   29f50:	add	r7, r6, #1
   29f54:	lsl	r7, r7, #1
   29f58:	uxth	r7, r7
   29f5c:	cmp	r7, #0
   29f60:	beq	29f84 <__flatcc_fb_gen_c_json_printer@@Base+0xfc0>
   29f64:	mov	r3, #2
   29f68:	mov	r1, #3
   29f6c:	mov	r2, r3
   29f70:	mov	r0, fp
   29f74:	bl	3cc80 <flatcc_builder_table_add@@Base>
   29f78:	cmp	r0, #0
   29f7c:	ldrh	r6, [r9, #96]	; 0x60
   29f80:	strhne	r7, [r0]
   29f84:	sub	r6, r6, #1
   29f88:	uxth	r6, r6
   29f8c:	cmp	r6, #0
   29f90:	beq	29fb0 <__flatcc_fb_gen_c_json_printer@@Base+0xfec>
   29f94:	mov	r3, #2
   29f98:	mov	r0, fp
   29f9c:	mov	r2, r3
   29fa0:	mov	r1, r3
   29fa4:	bl	3cc80 <flatcc_builder_table_add@@Base>
   29fa8:	cmp	r0, #0
   29fac:	strhne	r6, [r0]
   29fb0:	and	r3, r5, #4
   29fb4:	cmp	r3, #0
   29fb8:	beq	29fdc <__flatcc_fb_gen_c_json_printer@@Base+0x1018>
   29fbc:	mov	r3, #1
   29fc0:	mov	r1, #6
   29fc4:	mov	r2, r3
   29fc8:	mov	r0, fp
   29fcc:	bl	3cc80 <flatcc_builder_table_add@@Base>
   29fd0:	cmp	r0, #0
   29fd4:	ubfxne	r3, r5, #2, #1
   29fd8:	strbne	r3, [r0]
   29fdc:	mov	r2, #2
   29fe0:	mov	r0, fp
   29fe4:	ldr	r1, [sp, #52]	; 0x34
   29fe8:	bl	3ba84 <flatcc_builder_check_required@@Base>
   29fec:	cmp	r0, #0
   29ff0:	beq	2a68c <__flatcc_fb_gen_c_json_printer@@Base+0x16c8>
   29ff4:	mov	r0, fp
   29ff8:	bl	3bb30 <flatcc_builder_end_table@@Base>
   29ffc:	subs	r1, r0, #0
   2a000:	beq	29d18 <__flatcc_fb_gen_c_json_printer@@Base+0xd54>
   2a004:	mov	r0, fp
   2a008:	bl	3a87c <flatcc_builder_offset_vector_push@@Base>
   2a00c:	b	29d18 <__flatcc_fb_gen_c_json_printer@@Base+0xd54>
   2a010:	ldr	r1, [pc, #1868]	; 2a764 <__flatcc_fb_gen_c_json_printer@@Base+0x17a0>
   2a014:	mov	r3, #2
   2a018:	mov	r2, #0
   2a01c:	mov	r0, fp
   2a020:	add	r1, pc, r1
   2a024:	bl	3a174 <flatcc_builder_start_buffer@@Base>
   2a028:	cmp	r0, #0
   2a02c:	beq	29c14 <__flatcc_fb_gen_c_json_printer@@Base+0xc50>
   2a030:	b	29c20 <__flatcc_fb_gen_c_json_printer@@Base+0xc5c>
   2a034:	ldr	sl, [sp, #12]
   2a038:	mov	r0, fp
   2a03c:	bl	3bfb4 <flatcc_builder_end_offset_vector@@Base>
   2a040:	subs	r4, r0, #0
   2a044:	beq	2a05c <__flatcc_fb_gen_c_json_printer@@Base+0x1098>
   2a048:	mov	r1, #1
   2a04c:	mov	r0, fp
   2a050:	bl	3cec4 <flatcc_builder_table_add_offset@@Base>
   2a054:	cmp	r0, #0
   2a058:	strne	r4, [r0]
   2a05c:	ldrh	r3, [sl, #8]
   2a060:	cmp	r3, #1
   2a064:	beq	2a5b8 <__flatcc_fb_gen_c_json_printer@@Base+0x15f4>
   2a068:	ldrh	r4, [sl, #104]	; 0x68
   2a06c:	cmp	r4, #0
   2a070:	beq	2a090 <__flatcc_fb_gen_c_json_printer@@Base+0x10cc>
   2a074:	mov	r3, #4
   2a078:	mov	r1, #3
   2a07c:	mov	r2, r3
   2a080:	mov	r0, fp
   2a084:	bl	3cc80 <flatcc_builder_table_add@@Base>
   2a088:	cmp	r0, #0
   2a08c:	strne	r4, [r0]
   2a090:	ldr	r4, [pc, #1744]	; 2a768 <__flatcc_fb_gen_c_json_printer@@Base+0x17a4>
   2a094:	mov	r2, #2
   2a098:	mov	r0, fp
   2a09c:	add	r4, pc, r4
   2a0a0:	add	r1, r4, #68	; 0x44
   2a0a4:	bl	3ba84 <flatcc_builder_check_required@@Base>
   2a0a8:	cmp	r0, #0
   2a0ac:	beq	2a6d0 <__flatcc_fb_gen_c_json_printer@@Base+0x170c>
   2a0b0:	ldr	r3, [sp, #8]
   2a0b4:	mov	r0, fp
   2a0b8:	add	r3, r3, #1
   2a0bc:	mov	r4, r3
   2a0c0:	str	r3, [sp, #8]
   2a0c4:	bl	3bb30 <flatcc_builder_end_table@@Base>
   2a0c8:	ldr	r2, [sp, #16]
   2a0cc:	ldr	r3, [sp, #24]
   2a0d0:	cmp	r2, r4
   2a0d4:	str	r0, [r3, #4]!
   2a0d8:	str	r3, [sp, #24]
   2a0dc:	bne	29c9c <__flatcc_fb_gen_c_json_printer@@Base+0xcd8>
   2a0e0:	mov	r0, fp
   2a0e4:	ldr	r1, [sp]
   2a0e8:	ldr	r2, [sp, #16]
   2a0ec:	bl	3c0a0 <flatcc_builder_create_offset_vector@@Base>
   2a0f0:	subs	r4, r0, #0
   2a0f4:	beq	2a10c <__flatcc_fb_gen_c_json_printer@@Base+0x1148>
   2a0f8:	mov	r1, #0
   2a0fc:	mov	r0, fp
   2a100:	bl	3cec4 <flatcc_builder_table_add_offset@@Base>
   2a104:	cmp	r0, #0
   2a108:	strne	r4, [r0]
   2a10c:	ldr	sl, [sp, #76]	; 0x4c
   2a110:	mov	r0, fp
   2a114:	ldr	r3, [sp, #88]	; 0x58
   2a118:	str	r3, [sp, #8]
   2a11c:	bl	3af2c <flatcc_builder_start_offset_vector@@Base>
   2a120:	cmp	sl, #0
   2a124:	ble	2a38c <__flatcc_fb_gen_c_json_printer@@Base+0x13c8>
   2a128:	ldr	r2, [sp, #8]
   2a12c:	mov	r5, #0
   2a130:	ldr	r3, [pc, #1588]	; 2a76c <__flatcc_fb_gen_c_json_printer@@Base+0x17a8>
   2a134:	add	r2, r2, #4
   2a138:	str	r2, [sp, #16]
   2a13c:	add	r3, pc, r3
   2a140:	ldr	r2, [pc, #1576]	; 2a770 <__flatcc_fb_gen_c_json_printer@@Base+0x17ac>
   2a144:	str	r3, [sp, #28]
   2a148:	add	r3, r3, #100	; 0x64
   2a14c:	str	r3, [sp, #24]
   2a150:	add	r2, pc, r2
   2a154:	str	r2, [sp, #12]
   2a158:	ldr	r3, [sp, #8]
   2a15c:	mov	r1, #4
   2a160:	mov	r0, fp
   2a164:	ldr	r8, [r3, r5, lsl #3]
   2a168:	ldrh	r9, [r8, #8]
   2a16c:	bl	3b14c <flatcc_builder_start_table@@Base>
   2a170:	ldr	r3, [sp, #16]
   2a174:	mov	r0, fp
   2a178:	ldr	r1, [r3, r5, lsl #3]
   2a17c:	bl	3cab4 <flatcc_builder_create_string_str@@Base>
   2a180:	subs	r4, r0, #0
   2a184:	beq	2a19c <__flatcc_fb_gen_c_json_printer@@Base+0x11d8>
   2a188:	mov	r1, #0
   2a18c:	mov	r0, fp
   2a190:	bl	3cec4 <flatcc_builder_table_add_offset@@Base>
   2a194:	cmp	r0, #0
   2a198:	strne	r4, [r0]
   2a19c:	mov	r0, fp
   2a1a0:	bl	3af2c <flatcc_builder_start_offset_vector@@Base>
   2a1a4:	ldr	r4, [r8, #20]
   2a1a8:	cmp	r4, #0
   2a1ac:	bne	2a24c <__flatcc_fb_gen_c_json_printer@@Base+0x1288>
   2a1b0:	b	2a2d4 <__flatcc_fb_gen_c_json_printer@@Base+0x1310>
   2a1b4:	bl	3b14c <flatcc_builder_start_table@@Base>
   2a1b8:	ldr	r3, [r4, #4]
   2a1bc:	mov	r0, fp
   2a1c0:	ldm	r3, {r1, r2}
   2a1c4:	bl	3c99c <flatcc_builder_create_string@@Base>
   2a1c8:	subs	r6, r0, #0
   2a1cc:	beq	2a1e8 <__flatcc_fb_gen_c_json_printer@@Base+0x1224>
   2a1d0:	mov	r1, #0
   2a1d4:	mov	r0, fp
   2a1d8:	bl	3cec4 <flatcc_builder_table_add_offset@@Base>
   2a1dc:	cmp	r0, #0
   2a1e0:	beq	2a1e8 <__flatcc_fb_gen_c_json_printer@@Base+0x1224>
   2a1e4:	str	r6, [r0]
   2a1e8:	ldrd	r6, [r4, #48]	; 0x30
   2a1ec:	orrs	r3, r6, r7
   2a1f0:	beq	2a210 <__flatcc_fb_gen_c_json_printer@@Base+0x124c>
   2a1f4:	mov	r3, #8
   2a1f8:	mov	r1, #1
   2a1fc:	mov	r2, r3
   2a200:	mov	r0, fp
   2a204:	bl	3cc80 <flatcc_builder_table_add@@Base>
   2a208:	cmp	r0, #0
   2a20c:	strdne	r6, [r0]
   2a210:	mov	r2, #1
   2a214:	mov	r0, fp
   2a218:	ldr	r1, [sp, #24]
   2a21c:	bl	3ba84 <flatcc_builder_check_required@@Base>
   2a220:	cmp	r0, #0
   2a224:	beq	2a6b0 <__flatcc_fb_gen_c_json_printer@@Base+0x16ec>
   2a228:	mov	r0, fp
   2a22c:	bl	3bb30 <flatcc_builder_end_table@@Base>
   2a230:	subs	r1, r0, #0
   2a234:	beq	2a240 <__flatcc_fb_gen_c_json_printer@@Base+0x127c>
   2a238:	mov	r0, fp
   2a23c:	bl	3a87c <flatcc_builder_offset_vector_push@@Base>
   2a240:	ldr	r4, [r4]
   2a244:	cmp	r4, #0
   2a248:	beq	2a2d4 <__flatcc_fb_gen_c_json_printer@@Base+0x1310>
   2a24c:	cmp	r9, #4
   2a250:	mov	r1, #3
   2a254:	mov	r0, fp
   2a258:	bne	2a1b4 <__flatcc_fb_gen_c_json_printer@@Base+0x11f0>
   2a25c:	bl	3b14c <flatcc_builder_start_table@@Base>
   2a260:	ldr	r3, [r4, #4]
   2a264:	mov	r0, fp
   2a268:	ldm	r3, {r1, r2}
   2a26c:	bl	3c99c <flatcc_builder_create_string@@Base>
   2a270:	subs	r6, r0, #0
   2a274:	beq	2a28c <__flatcc_fb_gen_c_json_printer@@Base+0x12c8>
   2a278:	mov	r1, #0
   2a27c:	mov	r0, fp
   2a280:	bl	3cec4 <flatcc_builder_table_add_offset@@Base>
   2a284:	cmp	r0, #0
   2a288:	strne	r6, [r0]
   2a28c:	ldr	r3, [sp]
   2a290:	cmp	r3, #0
   2a294:	beq	2a1e8 <__flatcc_fb_gen_c_json_printer@@Base+0x1224>
   2a298:	ldrh	r3, [r4, #24]
   2a29c:	cmp	r3, #14
   2a2a0:	bne	2a1e8 <__flatcc_fb_gen_c_json_printer@@Base+0x1224>
   2a2a4:	ldr	r3, [r4, #16]
   2a2a8:	ldr	r2, [sp]
   2a2ac:	ldr	r3, [r3, #124]	; 0x7c
   2a2b0:	ldr	r6, [r2, r3, lsl #2]
   2a2b4:	cmp	r6, #0
   2a2b8:	beq	2a1e8 <__flatcc_fb_gen_c_json_printer@@Base+0x1224>
   2a2bc:	mov	r1, #2
   2a2c0:	mov	r0, fp
   2a2c4:	bl	3cec4 <flatcc_builder_table_add_offset@@Base>
   2a2c8:	cmp	r0, #0
   2a2cc:	bne	2a1e4 <__flatcc_fb_gen_c_json_printer@@Base+0x1220>
   2a2d0:	b	2a1e8 <__flatcc_fb_gen_c_json_printer@@Base+0x1224>
   2a2d4:	mov	r0, fp
   2a2d8:	bl	3bfb4 <flatcc_builder_end_offset_vector@@Base>
   2a2dc:	subs	r4, r0, #0
   2a2e0:	beq	2a2f8 <__flatcc_fb_gen_c_json_printer@@Base+0x1334>
   2a2e4:	mov	r1, #1
   2a2e8:	mov	r0, fp
   2a2ec:	bl	3cec4 <flatcc_builder_table_add_offset@@Base>
   2a2f0:	cmp	r0, #0
   2a2f4:	strne	r4, [r0]
   2a2f8:	cmp	r9, #4
   2a2fc:	bne	2a320 <__flatcc_fb_gen_c_json_printer@@Base+0x135c>
   2a300:	mov	r3, #1
   2a304:	mov	r1, #2
   2a308:	mov	r2, r3
   2a30c:	mov	r0, fp
   2a310:	bl	3cc80 <flatcc_builder_table_add@@Base>
   2a314:	cmp	r0, #0
   2a318:	movne	r3, #1
   2a31c:	strbne	r3, [r0]
   2a320:	ldrh	r2, [r8, #48]	; 0x30
   2a324:	mov	r0, fp
   2a328:	ldr	r1, [r8, #40]	; 0x28
   2a32c:	bl	29734 <__flatcc_fb_gen_c_json_printer@@Base+0x770>
   2a330:	subs	r4, r0, #0
   2a334:	beq	2a34c <__flatcc_fb_gen_c_json_printer@@Base+0x1388>
   2a338:	mov	r1, #3
   2a33c:	mov	r0, fp
   2a340:	bl	3cec4 <flatcc_builder_table_add_offset@@Base>
   2a344:	cmp	r0, #0
   2a348:	strne	r4, [r0]
   2a34c:	ldr	r3, [sp, #12]
   2a350:	mov	r2, #3
   2a354:	mov	r0, fp
   2a358:	add	r1, r3, #128	; 0x80
   2a35c:	bl	3ba84 <flatcc_builder_check_required@@Base>
   2a360:	cmp	r0, #0
   2a364:	beq	2a6ec <__flatcc_fb_gen_c_json_printer@@Base+0x1728>
   2a368:	mov	r0, fp
   2a36c:	bl	3bb30 <flatcc_builder_end_table@@Base>
   2a370:	subs	r1, r0, #0
   2a374:	beq	2a380 <__flatcc_fb_gen_c_json_printer@@Base+0x13bc>
   2a378:	mov	r0, fp
   2a37c:	bl	3a87c <flatcc_builder_offset_vector_push@@Base>
   2a380:	add	r5, r5, #1
   2a384:	cmp	sl, r5
   2a388:	bne	2a158 <__flatcc_fb_gen_c_json_printer@@Base+0x1194>
   2a38c:	mov	r0, fp
   2a390:	bl	3bfb4 <flatcc_builder_end_offset_vector@@Base>
   2a394:	subs	r4, r0, #0
   2a398:	beq	2a3b0 <__flatcc_fb_gen_c_json_printer@@Base+0x13ec>
   2a39c:	mov	r1, #1
   2a3a0:	mov	r0, fp
   2a3a4:	bl	3cec4 <flatcc_builder_table_add_offset@@Base>
   2a3a8:	cmp	r0, #0
   2a3ac:	strne	r4, [r0]
   2a3b0:	ldr	r3, [sp, #4]
   2a3b4:	ldr	r3, [r3, #52]	; 0x34
   2a3b8:	cmp	r3, #0
   2a3bc:	beq	2a3f4 <__flatcc_fb_gen_c_json_printer@@Base+0x1430>
   2a3c0:	ldrh	r2, [r3, #8]
   2a3c4:	cmp	r2, #0
   2a3c8:	bne	2a3f4 <__flatcc_fb_gen_c_json_printer@@Base+0x1430>
   2a3cc:	ldr	r2, [sp]
   2a3d0:	ldr	r3, [r3, #124]	; 0x7c
   2a3d4:	ldr	r4, [r2, r3, lsl #2]
   2a3d8:	cmp	r4, #0
   2a3dc:	beq	2a3f4 <__flatcc_fb_gen_c_json_printer@@Base+0x1430>
   2a3e0:	mov	r1, #4
   2a3e4:	mov	r0, fp
   2a3e8:	bl	3cec4 <flatcc_builder_table_add_offset@@Base>
   2a3ec:	cmp	r0, #0
   2a3f0:	strne	r4, [r0]
   2a3f4:	ldr	r4, [pc, #888]	; 2a774 <__flatcc_fb_gen_c_json_printer@@Base+0x17b0>
   2a3f8:	mov	r2, #2
   2a3fc:	mov	r0, fp
   2a400:	add	r4, pc, r4
   2a404:	add	r1, r4, #156	; 0x9c
   2a408:	bl	3ba84 <flatcc_builder_check_required@@Base>
   2a40c:	cmp	r0, #0
   2a410:	beq	2a72c <__flatcc_fb_gen_c_json_printer@@Base+0x1768>
   2a414:	mov	r0, fp
   2a418:	bl	3bb30 <flatcc_builder_end_table@@Base>
   2a41c:	mov	r1, r0
   2a420:	mov	r0, fp
   2a424:	bl	3a250 <flatcc_builder_end_buffer@@Base>
   2a428:	ldr	r0, [sp, #20]
   2a42c:	bl	29508 <__flatcc_fb_gen_c_json_printer@@Base+0x544>
   2a430:	ldr	r3, [sp]
   2a434:	cmp	r3, #0
   2a438:	beq	2a444 <__flatcc_fb_gen_c_json_printer@@Base+0x1480>
   2a43c:	mov	r0, r3
   2a440:	bl	13fa4 <free@plt>
   2a444:	mov	r0, #0
   2a448:	add	sp, sp, #116	; 0x74
   2a44c:	vpop	{d8}
   2a450:	ldrd	r4, [sp]
   2a454:	ldrd	r6, [sp, #8]
   2a458:	ldrd	r8, [sp, #16]
   2a45c:	ldrd	sl, [sp, #24]
   2a460:	add	sp, sp, #32
   2a464:	pop	{pc}		; (ldr pc, [sp], #4)
   2a468:	ldrh	r3, [r9, #56]	; 0x38
   2a46c:	sub	r3, r3, #3
   2a470:	cmp	r3, #3
   2a474:	addls	pc, pc, r3, lsl #2
   2a478:	b	2a4b8 <__flatcc_fb_gen_c_json_printer@@Base+0x14f4>
   2a47c:	b	2a55c <__flatcc_fb_gen_c_json_printer@@Base+0x1598>
   2a480:	b	2a554 <__flatcc_fb_gen_c_json_printer@@Base+0x1590>
   2a484:	b	2a554 <__flatcc_fb_gen_c_json_printer@@Base+0x1590>
   2a488:	b	2a48c <__flatcc_fb_gen_c_json_printer@@Base+0x14c8>
   2a48c:	ldrb	r6, [r9, #48]	; 0x30
   2a490:	mov	r7, #0
   2a494:	orrs	r3, r6, r7
   2a498:	beq	2a4b8 <__flatcc_fb_gen_c_json_printer@@Base+0x14f4>
   2a49c:	mov	r3, #8
   2a4a0:	mov	r1, #4
   2a4a4:	mov	r2, r3
   2a4a8:	mov	r0, fp
   2a4ac:	bl	3cc80 <flatcc_builder_table_add@@Base>
   2a4b0:	cmp	r0, #0
   2a4b4:	strdne	r6, [r0]
   2a4b8:	ldrh	r6, [r9, #96]	; 0x60
   2a4bc:	cmp	r6, #0
   2a4c0:	moveq	r6, #4
   2a4c4:	beq	2a598 <__flatcc_fb_gen_c_json_printer@@Base+0x15d4>
   2a4c8:	mov	r3, #2
   2a4cc:	mov	r0, fp
   2a4d0:	mov	r2, r3
   2a4d4:	mov	r1, r3
   2a4d8:	bl	3cc80 <flatcc_builder_table_add@@Base>
   2a4dc:	cmp	r0, #0
   2a4e0:	strhne	r6, [r0]
   2a4e4:	ldrh	r6, [r9, #96]	; 0x60
   2a4e8:	add	r6, r6, #2
   2a4ec:	lsl	r6, r6, #1
   2a4f0:	uxth	r6, r6
   2a4f4:	cmp	r6, #0
   2a4f8:	bne	2a598 <__flatcc_fb_gen_c_json_printer@@Base+0x15d4>
   2a4fc:	cmp	sl, #0
   2a500:	beq	2a524 <__flatcc_fb_gen_c_json_printer@@Base+0x1560>
   2a504:	mov	r3, #1
   2a508:	mov	r1, #8
   2a50c:	mov	r2, r3
   2a510:	mov	r0, fp
   2a514:	bl	3cc80 <flatcc_builder_table_add@@Base>
   2a518:	cmp	r0, #0
   2a51c:	movne	r3, #1
   2a520:	strbne	r3, [r0]
   2a524:	tst	r5, #256	; 0x100
   2a528:	beq	29dbc <__flatcc_fb_gen_c_json_printer@@Base+0xdf8>
   2a52c:	mov	r3, #1
   2a530:	mov	r1, #7
   2a534:	mov	r2, r3
   2a538:	mov	r0, fp
   2a53c:	bl	3cc80 <flatcc_builder_table_add@@Base>
   2a540:	cmp	r0, #0
   2a544:	beq	29dbc <__flatcc_fb_gen_c_json_printer@@Base+0xdf8>
   2a548:	mov	r3, #1
   2a54c:	strb	r3, [r0]
   2a550:	b	29dbc <__flatcc_fb_gen_c_json_printer@@Base+0xdf8>
   2a554:	ldrd	r6, [r9, #48]	; 0x30
   2a558:	b	2a494 <__flatcc_fb_gen_c_json_printer@@Base+0x14d0>
   2a55c:	vldr	d8, [r9, #48]	; 0x30
   2a560:	vcmp.f64	d8, #0.0
   2a564:	vmrs	APSR_nzcv, fpscr
   2a568:	beq	2a4b8 <__flatcc_fb_gen_c_json_printer@@Base+0x14f4>
   2a56c:	mov	r3, #8
   2a570:	mov	r1, #5
   2a574:	mov	r2, r3
   2a578:	mov	r0, fp
   2a57c:	bl	3cc80 <flatcc_builder_table_add@@Base>
   2a580:	ldrh	r6, [r9, #96]	; 0x60
   2a584:	cmp	r0, #0
   2a588:	vstrne	d8, [r0]
   2a58c:	cmp	r6, #0
   2a590:	moveq	r6, #4
   2a594:	bne	2a4c8 <__flatcc_fb_gen_c_json_printer@@Base+0x1504>
   2a598:	mov	r3, #2
   2a59c:	mov	r1, #3
   2a5a0:	mov	r2, r3
   2a5a4:	mov	r0, fp
   2a5a8:	bl	3cc80 <flatcc_builder_table_add@@Base>
   2a5ac:	cmp	r0, #0
   2a5b0:	strhne	r6, [r0]
   2a5b4:	b	2a4fc <__flatcc_fb_gen_c_json_printer@@Base+0x1538>
   2a5b8:	ldr	r4, [sl, #112]	; 0x70
   2a5bc:	cmp	r4, #0
   2a5c0:	beq	2a5e0 <__flatcc_fb_gen_c_json_printer@@Base+0x161c>
   2a5c4:	mov	r3, #4
   2a5c8:	mov	r0, fp
   2a5cc:	mov	r2, r3
   2a5d0:	mov	r1, r3
   2a5d4:	bl	3cc80 <flatcc_builder_table_add@@Base>
   2a5d8:	cmp	r0, #0
   2a5dc:	strne	r4, [r0]
   2a5e0:	mov	r3, #1
   2a5e4:	mov	r1, #2
   2a5e8:	mov	r2, r3
   2a5ec:	mov	r0, fp
   2a5f0:	bl	3cc80 <flatcc_builder_table_add@@Base>
   2a5f4:	cmp	r0, #0
   2a5f8:	movne	r3, #1
   2a5fc:	strbne	r3, [r0]
   2a600:	b	2a068 <__flatcc_fb_gen_c_json_printer@@Base+0x10a4>
   2a604:	lsl	r0, r0, #2
   2a608:	bl	14010 <malloc@plt>
   2a60c:	subs	r3, r0, #0
   2a610:	str	r3, [sp]
   2a614:	bne	29bec <__flatcc_fb_gen_c_json_printer@@Base+0xc28>
   2a618:	ldr	r0, [sp, #20]
   2a61c:	bl	29508 <__flatcc_fb_gen_c_json_printer@@Base+0x544>
   2a620:	mvn	r0, #0
   2a624:	b	2a448 <__flatcc_fb_gen_c_json_printer@@Base+0x1484>
   2a628:	ldr	r3, [sp, #4]
   2a62c:	mov	r0, fp
   2a630:	ldr	r1, [r3, #24]
   2a634:	ldr	r2, [r3, #28]
   2a638:	bl	3c99c <flatcc_builder_create_string@@Base>
   2a63c:	subs	r4, r0, #0
   2a640:	beq	29c40 <__flatcc_fb_gen_c_json_printer@@Base+0xc7c>
   2a644:	mov	r1, #3
   2a648:	mov	r0, fp
   2a64c:	bl	3cec4 <flatcc_builder_table_add_offset@@Base>
   2a650:	cmp	r0, #0
   2a654:	strne	r4, [r0]
   2a658:	b	29c40 <__flatcc_fb_gen_c_json_printer@@Base+0xc7c>
   2a65c:	mov	r0, fp
   2a660:	ldr	r1, [r3, #8]
   2a664:	ldr	r2, [r3, #12]
   2a668:	bl	3c99c <flatcc_builder_create_string@@Base>
   2a66c:	subs	r5, r0, #0
   2a670:	beq	29c30 <__flatcc_fb_gen_c_json_printer@@Base+0xc6c>
   2a674:	mov	r1, r4
   2a678:	mov	r0, fp
   2a67c:	bl	3cec4 <flatcc_builder_table_add_offset@@Base>
   2a680:	cmp	r0, #0
   2a684:	strne	r5, [r0]
   2a688:	b	29c30 <__flatcc_fb_gen_c_json_printer@@Base+0xc6c>
   2a68c:	ldr	r3, [pc, #228]	; 2a778 <__flatcc_fb_gen_c_json_printer@@Base+0x17b4>
   2a690:	mov	r2, #29
   2a694:	ldr	r1, [pc, #224]	; 2a77c <__flatcc_fb_gen_c_json_printer@@Base+0x17b8>
   2a698:	ldr	r0, [pc, #224]	; 2a780 <__flatcc_fb_gen_c_json_printer@@Base+0x17bc>
   2a69c:	add	r3, pc, r3
   2a6a0:	add	r3, r3, #44	; 0x2c
   2a6a4:	add	r1, pc, r1
   2a6a8:	add	r0, pc, r0
   2a6ac:	bl	14118 <__assert_fail@plt>
   2a6b0:	ldr	r1, [pc, #204]	; 2a784 <__flatcc_fb_gen_c_json_printer@@Base+0x17c0>
   2a6b4:	mov	r2, #25
   2a6b8:	ldr	r0, [pc, #200]	; 2a788 <__flatcc_fb_gen_c_json_printer@@Base+0x17c4>
   2a6bc:	ldr	r3, [sp, #28]
   2a6c0:	add	r1, pc, r1
   2a6c4:	add	r0, pc, r0
   2a6c8:	add	r3, r3, #104	; 0x68
   2a6cc:	bl	14118 <__assert_fail@plt>
   2a6d0:	ldr	r1, [pc, #180]	; 2a78c <__flatcc_fb_gen_c_json_printer@@Base+0x17c8>
   2a6d4:	add	r3, r4, #76	; 0x4c
   2a6d8:	mov	r2, #31
   2a6dc:	ldr	r0, [pc, #172]	; 2a790 <__flatcc_fb_gen_c_json_printer@@Base+0x17cc>
   2a6e0:	add	r1, pc, r1
   2a6e4:	add	r0, pc, r0
   2a6e8:	bl	14118 <__assert_fail@plt>
   2a6ec:	ldr	r1, [pc, #160]	; 2a794 <__flatcc_fb_gen_c_json_printer@@Base+0x17d0>
   2a6f0:	mov	r2, #27
   2a6f4:	ldr	r0, [pc, #156]	; 2a798 <__flatcc_fb_gen_c_json_printer@@Base+0x17d4>
   2a6f8:	ldr	r3, [sp, #12]
   2a6fc:	add	r1, pc, r1
   2a700:	add	r0, pc, r0
   2a704:	add	r3, r3, #136	; 0x88
   2a708:	bl	14118 <__assert_fail@plt>
   2a70c:	ldr	r1, [pc, #136]	; 2a79c <__flatcc_fb_gen_c_json_printer@@Base+0x17d8>
   2a710:	mov	r2, #23
   2a714:	ldr	r0, [pc, #132]	; 2a7a0 <__flatcc_fb_gen_c_json_printer@@Base+0x17dc>
   2a718:	ldr	r3, [sp, #60]	; 0x3c
   2a71c:	add	r1, pc, r1
   2a720:	add	r0, pc, r0
   2a724:	add	r3, r3, #16
   2a728:	bl	14118 <__assert_fail@plt>
   2a72c:	ldr	r1, [pc, #112]	; 2a7a4 <__flatcc_fb_gen_c_json_printer@@Base+0x17e0>
   2a730:	add	r3, r4, #164	; 0xa4
   2a734:	mov	r2, #33	; 0x21
   2a738:	ldr	r0, [pc, #104]	; 2a7a8 <__flatcc_fb_gen_c_json_printer@@Base+0x17e4>
   2a73c:	add	r1, pc, r1
   2a740:	add	r0, pc, r0
   2a744:	bl	14118 <__assert_fail@plt>
   2a748:			; <UNDEFINED> instruction: 0xfffffaa4
   2a74c:			; <UNDEFINED> instruction: 0xfffff9bc
   2a750:	strdeq	lr, [r2], -r8
   2a754:	andeq	lr, r2, r0, ror #10
   2a758:	andeq	lr, r2, r4, asr #10
   2a75c:	ldrdeq	pc, [r2], -r0
   2a760:	andeq	lr, r2, r4, asr #9
   2a764:	ldrdeq	lr, [r2], -ip
   2a768:	andeq	lr, r2, r4, lsr r1
   2a76c:	muleq	r2, r4, r0
   2a770:	andeq	lr, r2, r0, lsl #1
   2a774:	ldrdeq	sp, [r2], -r0
   2a778:	andeq	sp, r2, r4, lsr fp
   2a77c:	andeq	sp, r2, r0, asr ip
   2a780:	andeq	sp, r2, ip, asr sp
   2a784:	andeq	sp, r2, r4, lsr ip
   2a788:	andeq	sp, r2, r4, ror #28
   2a78c:	andeq	sp, r2, r4, lsl ip
   2a790:			; <UNDEFINED> instruction: 0x0002ddb0
   2a794:	strdeq	sp, [r2], -r8
   2a798:	andeq	sp, r2, r0, asr #29
   2a79c:	ldrdeq	sp, [r2], -r8
   2a7a0:	andeq	sp, r2, ip, asr #24
   2a7a4:			; <UNDEFINED> instruction: 0x0002dbb8
   2a7a8:	andeq	sp, r2, r0, lsl pc
   2a7ac:	cmp	r0, #0
   2a7b0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   2a7b4:	strd	r6, [sp, #8]
   2a7b8:	strd	r8, [sp, #16]
   2a7bc:	strd	sl, [sp, #24]
   2a7c0:	str	lr, [sp, #32]
   2a7c4:	sub	sp, sp, #36	; 0x24
   2a7c8:	beq	2a7e0 <__flatcc_fb_gen_c_json_printer@@Base+0x181c>
   2a7cc:	ldr	r2, [r0, #4]
   2a7d0:	movw	r3, #17986	; 0x4642
   2a7d4:	movt	r3, #21314	; 0x5342
   2a7d8:	cmp	r2, r3
   2a7dc:	beq	2a804 <__flatcc_fb_gen_c_json_printer@@Base+0x1840>
   2a7e0:	ldr	r3, [pc, #1736]	; 2aeb0 <__flatcc_fb_gen_c_json_printer@@Base+0x1eec>
   2a7e4:	mov	r2, #237	; 0xed
   2a7e8:	ldr	r1, [pc, #1732]	; 2aeb4 <__flatcc_fb_gen_c_json_printer@@Base+0x1ef0>
   2a7ec:	ldr	r0, [pc, #1732]	; 2aeb8 <__flatcc_fb_gen_c_json_printer@@Base+0x1ef4>
   2a7f0:	add	r3, pc, r3
   2a7f4:	add	r3, r3, #188	; 0xbc
   2a7f8:	add	r1, pc, r1
   2a7fc:	add	r0, pc, r0
   2a800:	bl	14118 <__assert_fail@plt>
   2a804:	ldr	r2, [r0]
   2a808:	adds	r3, r0, r2
   2a80c:	beq	2a7e0 <__flatcc_fb_gen_c_json_printer@@Base+0x181c>
   2a810:	ldr	r2, [r0, r2]
   2a814:	sub	r2, r3, r2
   2a818:	ldrh	r1, [r2]
   2a81c:	cmp	r1, #5
   2a820:	bls	2ae8c <__flatcc_fb_gen_c_json_printer@@Base+0x1ec8>
   2a824:	ldrh	r1, [r2, #4]
   2a828:	cmp	r1, #0
   2a82c:	beq	2ae8c <__flatcc_fb_gen_c_json_printer@@Base+0x1ec8>
   2a830:	ldr	r2, [r3, r1]
   2a834:	add	r3, r3, r1
   2a838:	add	r2, r2, #4
   2a83c:	adds	r0, r3, r2
   2a840:	str	r0, [sp, #24]
   2a844:	beq	2ae04 <__flatcc_fb_gen_c_json_printer@@Base+0x1e40>
   2a848:	ldr	r1, [r0, #-4]
   2a84c:	cmp	r1, #0
   2a850:	beq	2ae04 <__flatcc_fb_gen_c_json_printer@@Base+0x1e40>
   2a854:	ldr	r3, [r3, r2]
   2a858:	adds	r2, r0, r3
   2a85c:	beq	2ae68 <__flatcc_fb_gen_c_json_printer@@Base+0x1ea4>
   2a860:	ldr	r3, [r0, r3]
   2a864:	sub	r3, r2, r3
   2a868:	ldrh	r0, [r3]
   2a86c:	cmp	r0, #7
   2a870:	bls	2ad80 <__flatcc_fb_gen_c_json_printer@@Base+0x1dbc>
   2a874:	ldrh	r3, [r3, #6]
   2a878:	cmp	r3, #0
   2a87c:	movne	r0, #0
   2a880:	strne	r0, [sp, #20]
   2a884:	beq	2ad80 <__flatcc_fb_gen_c_json_printer@@Base+0x1dbc>
   2a888:	ldr	r0, [r2, r3]
   2a88c:	add	r2, r2, r3
   2a890:	add	r3, r0, #4
   2a894:	adds	fp, r2, r3
   2a898:	beq	2ad34 <__flatcc_fb_gen_c_json_printer@@Base+0x1d70>
   2a89c:	ldr	r3, [fp, #-4]
   2a8a0:	cmp	r3, #0
   2a8a4:	str	r3, [sp, #28]
   2a8a8:	beq	2ad34 <__flatcc_fb_gen_c_json_printer@@Base+0x1d70>
   2a8ac:	lsr	r2, r3, #1
   2a8b0:	sub	sl, r3, #1
   2a8b4:	mov	r3, r2
   2a8b8:	lsl	r2, r2, #1
   2a8bc:	str	sl, [sp, #4]
   2a8c0:	mov	sl, r3
   2a8c4:	str	r2, [sp, #8]
   2a8c8:	ldr	r3, [sp, #4]
   2a8cc:	ldr	r2, [sp, #8]
   2a8d0:	cmp	r3, r2
   2a8d4:	bcc	2aad4 <__flatcc_fb_gen_c_json_printer@@Base+0x1b10>
   2a8d8:	mov	r7, sl
   2a8dc:	str	sl, [sp, #16]
   2a8e0:	ldr	r4, [sp, #8]
   2a8e4:	b	2a940 <__flatcc_fb_gen_c_json_printer@@Base+0x197c>
   2a8e8:	ldr	r8, [r0, #-4]
   2a8ec:	str	r3, [sp, #12]
   2a8f0:	cmp	r9, r8
   2a8f4:	movcc	r2, r9
   2a8f8:	movcs	r2, r8
   2a8fc:	bl	14100 <strncmp@plt>
   2a900:	cmp	r0, #0
   2a904:	ldr	r3, [sp, #12]
   2a908:	beq	2aac8 <__flatcc_fb_gen_c_json_printer@@Base+0x1b04>
   2a90c:	bge	2aad0 <__flatcc_fb_gen_c_json_printer@@Base+0x1b0c>
   2a910:	ldr	r0, [sp, #4]
   2a914:	sub	r2, r7, r4
   2a918:	lsl	r1, r4, #1
   2a91c:	lsl	r2, r2, #2
   2a920:	mov	r7, r4
   2a924:	sub	r6, r6, r2
   2a928:	add	r5, r5, r2
   2a92c:	cmp	r0, r1
   2a930:	str	r6, [fp, r3]
   2a934:	str	r5, [fp, sl]
   2a938:	bcc	2aad0 <__flatcc_fb_gen_c_json_printer@@Base+0x1b0c>
   2a93c:	mov	r4, r1
   2a940:	ldr	r3, [sp, #4]
   2a944:	ldr	r6, [fp, #-4]
   2a948:	cmp	r3, r4
   2a94c:	bls	2aa1c <__flatcc_fb_gen_c_json_printer@@Base+0x1a58>
   2a950:	lsl	r3, r4, #2
   2a954:	cmp	r6, r4
   2a958:	add	r0, fp, r3
   2a95c:	bls	2ae44 <__flatcc_fb_gen_c_json_printer@@Base+0x1e80>
   2a960:	ldr	r1, [fp, r4, lsl #2]
   2a964:	adds	r2, r0, r1
   2a968:	beq	2ae20 <__flatcc_fb_gen_c_json_printer@@Base+0x1e5c>
   2a96c:	ldr	r1, [r0, r1]
   2a970:	sub	r1, r2, r1
   2a974:	ldrh	r0, [r1]
   2a978:	cmp	r0, #5
   2a97c:	bls	2ade0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e1c>
   2a980:	ldrh	r1, [r1, #4]
   2a984:	cmp	r1, #0
   2a988:	beq	2ade0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e1c>
   2a98c:	ldr	r0, [r2, r1]
   2a990:	add	r8, r4, #1
   2a994:	add	r3, r3, #4
   2a998:	add	r2, r2, r1
   2a99c:	cmp	r8, r6
   2a9a0:	add	ip, fp, r3
   2a9a4:	add	r0, r0, #4
   2a9a8:	add	r0, r2, r0
   2a9ac:	bcs	2ae44 <__flatcc_fb_gen_c_json_printer@@Base+0x1e80>
   2a9b0:	ldr	r3, [fp, r3]
   2a9b4:	adds	r1, ip, r3
   2a9b8:	beq	2ae20 <__flatcc_fb_gen_c_json_printer@@Base+0x1e5c>
   2a9bc:	ldr	r3, [ip, r3]
   2a9c0:	sub	r3, r1, r3
   2a9c4:	ldrh	r2, [r3]
   2a9c8:	cmp	r2, #5
   2a9cc:	bls	2ade0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e1c>
   2a9d0:	ldrh	r2, [r3, #4]
   2a9d4:	cmp	r2, #0
   2a9d8:	beq	2ade0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e1c>
   2a9dc:	ldr	r3, [r1, r2]
   2a9e0:	add	r1, r1, r2
   2a9e4:	add	r3, r3, #4
   2a9e8:	adds	r1, r1, r3
   2a9ec:	ldrne	r9, [r1, #-4]
   2a9f0:	moveq	r9, #0
   2a9f4:	cmp	r0, #0
   2a9f8:	beq	2ada4 <__flatcc_fb_gen_c_json_printer@@Base+0x1de0>
   2a9fc:	ldr	r5, [r0, #-4]
   2aa00:	cmp	r9, r5
   2aa04:	movcc	r2, r9
   2aa08:	movcs	r2, r5
   2aa0c:	bl	14100 <strncmp@plt>
   2aa10:	cmp	r0, #0
   2aa14:	beq	2ada8 <__flatcc_fb_gen_c_json_printer@@Base+0x1de4>
   2aa18:	movlt	r4, r8
   2aa1c:	lsl	r3, r7, #2
   2aa20:	cmp	r6, r7
   2aa24:	add	r1, fp, r3
   2aa28:	bls	2ae44 <__flatcc_fb_gen_c_json_printer@@Base+0x1e80>
   2aa2c:	ldr	r5, [fp, r7, lsl #2]
   2aa30:	adds	r2, r1, r5
   2aa34:	beq	2ae20 <__flatcc_fb_gen_c_json_printer@@Base+0x1e5c>
   2aa38:	ldr	r1, [r1, r5]
   2aa3c:	sub	r1, r2, r1
   2aa40:	ldrh	r0, [r1]
   2aa44:	cmp	r0, #5
   2aa48:	bls	2ade0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e1c>
   2aa4c:	ldrh	r1, [r1, #4]
   2aa50:	cmp	r1, #0
   2aa54:	beq	2ade0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e1c>
   2aa58:	ldr	r0, [r2, r1]
   2aa5c:	lsl	sl, r4, #2
   2aa60:	add	r2, r2, r1
   2aa64:	cmp	r4, r6
   2aa68:	add	r1, fp, sl
   2aa6c:	add	r0, r0, #4
   2aa70:	add	r0, r2, r0
   2aa74:	bcs	2ae44 <__flatcc_fb_gen_c_json_printer@@Base+0x1e80>
   2aa78:	ldr	r6, [fp, r4, lsl #2]
   2aa7c:	adds	r2, r1, r6
   2aa80:	beq	2ae20 <__flatcc_fb_gen_c_json_printer@@Base+0x1e5c>
   2aa84:	ldr	r1, [r1, r6]
   2aa88:	sub	r1, r2, r1
   2aa8c:	ldrh	ip, [r1]
   2aa90:	cmp	ip, #5
   2aa94:	bls	2ade0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e1c>
   2aa98:	ldrh	ip, [r1, #4]
   2aa9c:	cmp	ip, #0
   2aaa0:	beq	2ade0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e1c>
   2aaa4:	ldr	r1, [r2, ip]
   2aaa8:	add	r2, r2, ip
   2aaac:	add	r1, r1, #4
   2aab0:	adds	r1, r2, r1
   2aab4:	ldrne	r9, [r1, #-4]
   2aab8:	moveq	r9, r1
   2aabc:	cmp	r0, #0
   2aac0:	bne	2a8e8 <__flatcc_fb_gen_c_json_printer@@Base+0x1924>
   2aac4:	mov	r8, r0
   2aac8:	cmp	r9, r8
   2aacc:	bhi	2a910 <__flatcc_fb_gen_c_json_printer@@Base+0x194c>
   2aad0:	ldr	sl, [sp, #16]
   2aad4:	sub	sl, sl, #1
   2aad8:	ldr	r3, [sp, #8]
   2aadc:	cmn	sl, #1
   2aae0:	sub	r3, r3, #2
   2aae4:	str	r3, [sp, #8]
   2aae8:	bne	2a8c8 <__flatcc_fb_gen_c_json_printer@@Base+0x1904>
   2aaec:	ldr	sl, [sp, #4]
   2aaf0:	cmp	sl, #0
   2aaf4:	beq	2ad2c <__flatcc_fb_gen_c_json_printer@@Base+0x1d68>
   2aaf8:	ldr	r3, [sp, #28]
   2aafc:	add	r2, fp, #4
   2ab00:	str	r2, [sp, #16]
   2ab04:	add	r3, fp, r3, lsl #2
   2ab08:	ldr	r2, [sp, #16]
   2ab0c:	sub	lr, r3, #4
   2ab10:	mov	r7, #0
   2ab14:	sub	sl, sl, #1
   2ab18:	mov	r4, r7
   2ab1c:	ldr	r1, [r3, #-4]
   2ab20:	str	lr, [sp, #12]
   2ab24:	ldr	r0, [fp]
   2ab28:	sub	ip, r3, r2
   2ab2c:	sub	r2, r2, r3
   2ab30:	add	r1, r1, ip
   2ab34:	add	r2, r2, r0
   2ab38:	str	r1, [fp]
   2ab3c:	str	r2, [r3, #-4]
   2ab40:	b	2aba8 <__flatcc_fb_gen_c_json_printer@@Base+0x1be4>
   2ab44:	cmp	r0, #0
   2ab48:	ldr	r9, [r1, #-4]
   2ab4c:	beq	2adb4 <__flatcc_fb_gen_c_json_printer@@Base+0x1df0>
   2ab50:	ldr	r8, [r0, #-4]
   2ab54:	str	r3, [sp, #8]
   2ab58:	cmp	r9, r8
   2ab5c:	movcc	r2, r9
   2ab60:	movcs	r2, r8
   2ab64:	bl	14100 <strncmp@plt>
   2ab68:	cmp	r0, #0
   2ab6c:	ldr	r3, [sp, #8]
   2ab70:	beq	2adb8 <__flatcc_fb_gen_c_json_printer@@Base+0x1df4>
   2ab74:	bge	2ad20 <__flatcc_fb_gen_c_json_printer@@Base+0x1d5c>
   2ab78:	sub	r2, r7, r4
   2ab7c:	lsl	r1, r4, #1
   2ab80:	mov	r7, r4
   2ab84:	lsl	r2, r2, #2
   2ab88:	cmp	sl, r1
   2ab8c:	sub	r6, r6, r2
   2ab90:	add	r5, r5, r2
   2ab94:	ldr	r2, [sp, #4]
   2ab98:	str	r6, [fp, r2]
   2ab9c:	str	r5, [fp, r3]
   2aba0:	bcc	2ad20 <__flatcc_fb_gen_c_json_printer@@Base+0x1d5c>
   2aba4:	mov	r4, r1
   2aba8:	cmp	sl, r4
   2abac:	ldr	r6, [fp, #-4]
   2abb0:	bls	2ac80 <__flatcc_fb_gen_c_json_printer@@Base+0x1cbc>
   2abb4:	lsl	r2, r4, #2
   2abb8:	cmp	r6, r4
   2abbc:	add	ip, fp, r2
   2abc0:	bls	2ae44 <__flatcc_fb_gen_c_json_printer@@Base+0x1e80>
   2abc4:	ldr	r0, [fp, r4, lsl #2]
   2abc8:	adds	r1, ip, r0
   2abcc:	beq	2ae20 <__flatcc_fb_gen_c_json_printer@@Base+0x1e5c>
   2abd0:	ldr	r0, [ip, r0]
   2abd4:	sub	r0, r1, r0
   2abd8:	ldrh	ip, [r0]
   2abdc:	cmp	ip, #5
   2abe0:	bls	2ade0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e1c>
   2abe4:	ldrh	ip, [r0, #4]
   2abe8:	cmp	ip, #0
   2abec:	beq	2ade0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e1c>
   2abf0:	ldr	r0, [r1, ip]
   2abf4:	add	r8, r4, #1
   2abf8:	add	r1, r1, ip
   2abfc:	add	r2, r2, #4
   2ac00:	cmp	r6, r8
   2ac04:	add	ip, fp, r2
   2ac08:	add	r0, r0, #4
   2ac0c:	add	r0, r1, r0
   2ac10:	bls	2ae44 <__flatcc_fb_gen_c_json_printer@@Base+0x1e80>
   2ac14:	ldr	r2, [fp, r2]
   2ac18:	adds	r1, ip, r2
   2ac1c:	beq	2ae20 <__flatcc_fb_gen_c_json_printer@@Base+0x1e5c>
   2ac20:	ldr	r2, [ip, r2]
   2ac24:	sub	r2, r1, r2
   2ac28:	ldrh	ip, [r2]
   2ac2c:	cmp	ip, #5
   2ac30:	bls	2ade0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e1c>
   2ac34:	ldrh	ip, [r2, #4]
   2ac38:	cmp	ip, #0
   2ac3c:	beq	2ade0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e1c>
   2ac40:	ldr	r2, [r1, ip]
   2ac44:	add	r1, r1, ip
   2ac48:	add	r2, r2, #4
   2ac4c:	adds	r1, r1, r2
   2ac50:	beq	2ac80 <__flatcc_fb_gen_c_json_printer@@Base+0x1cbc>
   2ac54:	cmp	r0, #0
   2ac58:	ldr	r9, [r1, #-4]
   2ac5c:	beq	2add0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e0c>
   2ac60:	ldr	r5, [r0, #-4]
   2ac64:	cmp	r9, r5
   2ac68:	movcc	r2, r9
   2ac6c:	movcs	r2, r5
   2ac70:	bl	14100 <strncmp@plt>
   2ac74:	cmp	r0, #0
   2ac78:	beq	2add4 <__flatcc_fb_gen_c_json_printer@@Base+0x1e10>
   2ac7c:	movlt	r4, r8
   2ac80:	lsl	r3, r7, #2
   2ac84:	cmp	r6, r7
   2ac88:	add	r2, fp, r3
   2ac8c:	str	r3, [sp, #4]
   2ac90:	bls	2ae44 <__flatcc_fb_gen_c_json_printer@@Base+0x1e80>
   2ac94:	ldr	r5, [fp, r7, lsl #2]
   2ac98:	adds	r0, r2, r5
   2ac9c:	beq	2ae20 <__flatcc_fb_gen_c_json_printer@@Base+0x1e5c>
   2aca0:	ldr	r2, [r2, r5]
   2aca4:	sub	r2, r0, r2
   2aca8:	ldrh	r1, [r2]
   2acac:	cmp	r1, #5
   2acb0:	bls	2ade0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e1c>
   2acb4:	ldrh	r2, [r2, #4]
   2acb8:	cmp	r2, #0
   2acbc:	beq	2ade0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e1c>
   2acc0:	ldr	r1, [r0, r2]
   2acc4:	lsl	r3, r4, #2
   2acc8:	add	r0, r0, r2
   2accc:	cmp	r6, r4
   2acd0:	add	r2, fp, r3
   2acd4:	add	r1, r1, #4
   2acd8:	add	r0, r0, r1
   2acdc:	bls	2ae44 <__flatcc_fb_gen_c_json_printer@@Base+0x1e80>
   2ace0:	ldr	r6, [fp, r4, lsl #2]
   2ace4:	adds	r1, r2, r6
   2ace8:	beq	2ae20 <__flatcc_fb_gen_c_json_printer@@Base+0x1e5c>
   2acec:	ldr	r2, [r2, r6]
   2acf0:	sub	r2, r1, r2
   2acf4:	ldrh	ip, [r2]
   2acf8:	cmp	ip, #5
   2acfc:	bls	2ade0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e1c>
   2ad00:	ldrh	ip, [r2, #4]
   2ad04:	cmp	ip, #0
   2ad08:	beq	2ade0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e1c>
   2ad0c:	ldr	r2, [r1, ip]
   2ad10:	add	r1, r1, ip
   2ad14:	add	r2, r2, #4
   2ad18:	adds	r1, r1, r2
   2ad1c:	bne	2ab44 <__flatcc_fb_gen_c_json_printer@@Base+0x1b80>
   2ad20:	cmp	sl, #0
   2ad24:	ldr	r3, [sp, #12]
   2ad28:	bne	2ab08 <__flatcc_fb_gen_c_json_printer@@Base+0x1b44>
   2ad2c:	ldr	r3, [sp, #24]
   2ad30:	ldr	r1, [r3, #-4]
   2ad34:	ldr	r3, [sp, #20]
   2ad38:	add	r3, r3, #1
   2ad3c:	cmp	r3, r1
   2ad40:	str	r3, [sp, #20]
   2ad44:	bcs	2ae04 <__flatcc_fb_gen_c_json_printer@@Base+0x1e40>
   2ad48:	ldr	r0, [sp, #20]
   2ad4c:	ldr	r2, [sp, #24]
   2ad50:	ldr	r3, [r2, r0, lsl #2]
   2ad54:	add	r0, r2, r0, lsl #2
   2ad58:	adds	r2, r0, r3
   2ad5c:	beq	2ae68 <__flatcc_fb_gen_c_json_printer@@Base+0x1ea4>
   2ad60:	ldr	r3, [r0, r3]
   2ad64:	sub	r3, r2, r3
   2ad68:	ldrh	r0, [r3]
   2ad6c:	cmp	r0, #7
   2ad70:	bls	2ad80 <__flatcc_fb_gen_c_json_printer@@Base+0x1dbc>
   2ad74:	ldrh	r3, [r3, #6]
   2ad78:	cmp	r3, #0
   2ad7c:	bne	2a888 <__flatcc_fb_gen_c_json_printer@@Base+0x18c4>
   2ad80:	ldr	r3, [pc, #308]	; 2aebc <__flatcc_fb_gen_c_json_printer@@Base+0x1ef8>
   2ad84:	mov	r2, #224	; 0xe0
   2ad88:	ldr	r1, [pc, #304]	; 2aec0 <__flatcc_fb_gen_c_json_printer@@Base+0x1efc>
   2ad8c:	ldr	r0, [pc, #304]	; 2aec4 <__flatcc_fb_gen_c_json_printer@@Base+0x1f00>
   2ad90:	add	r3, pc, r3
   2ad94:	add	r3, r3, #216	; 0xd8
   2ad98:	add	r1, pc, r1
   2ad9c:	add	r0, pc, r0
   2ada0:	bl	14118 <__assert_fail@plt>
   2ada4:	mov	r5, r0
   2ada8:	cmp	r9, r5
   2adac:	movhi	r4, r8
   2adb0:	b	2aa1c <__flatcc_fb_gen_c_json_printer@@Base+0x1a58>
   2adb4:	mov	r8, #0
   2adb8:	cmp	r9, r8
   2adbc:	bhi	2ab78 <__flatcc_fb_gen_c_json_printer@@Base+0x1bb4>
   2adc0:	cmp	sl, #0
   2adc4:	ldr	r3, [sp, #12]
   2adc8:	bne	2ab08 <__flatcc_fb_gen_c_json_printer@@Base+0x1b44>
   2adcc:	b	2ad2c <__flatcc_fb_gen_c_json_printer@@Base+0x1d68>
   2add0:	mov	r5, r0
   2add4:	cmp	r9, r5
   2add8:	movhi	r4, r8
   2addc:	b	2ac80 <__flatcc_fb_gen_c_json_printer@@Base+0x1cbc>
   2ade0:	ldr	r3, [pc, #224]	; 2aec8 <__flatcc_fb_gen_c_json_printer@@Base+0x1f04>
   2ade4:	mov	r2, #195	; 0xc3
   2ade8:	ldr	r1, [pc, #220]	; 2aecc <__flatcc_fb_gen_c_json_printer@@Base+0x1f08>
   2adec:	ldr	r0, [pc, #220]	; 2aed0 <__flatcc_fb_gen_c_json_printer@@Base+0x1f0c>
   2adf0:	add	r3, pc, r3
   2adf4:	add	r3, r3, #268	; 0x10c
   2adf8:	add	r1, pc, r1
   2adfc:	add	r0, pc, r0
   2ae00:	bl	14118 <__assert_fail@plt>
   2ae04:	add	sp, sp, #36	; 0x24
   2ae08:	ldrd	r4, [sp]
   2ae0c:	ldrd	r6, [sp, #8]
   2ae10:	ldrd	r8, [sp, #16]
   2ae14:	ldrd	sl, [sp, #24]
   2ae18:	add	sp, sp, #32
   2ae1c:	pop	{pc}		; (ldr pc, [sp], #4)
   2ae20:	ldr	r3, [pc, #172]	; 2aed4 <__flatcc_fb_gen_c_json_printer@@Base+0x1f10>
   2ae24:	mov	r2, #195	; 0xc3
   2ae28:	ldr	r1, [pc, #168]	; 2aed8 <__flatcc_fb_gen_c_json_printer@@Base+0x1f14>
   2ae2c:	ldr	r0, [pc, #168]	; 2aedc <__flatcc_fb_gen_c_json_printer@@Base+0x1f18>
   2ae30:	add	r3, pc, r3
   2ae34:	add	r3, r3, #268	; 0x10c
   2ae38:	add	r1, pc, r1
   2ae3c:	add	r0, pc, r0
   2ae40:	bl	14118 <__assert_fail@plt>
   2ae44:	ldr	r3, [pc, #148]	; 2aee0 <__flatcc_fb_gen_c_json_printer@@Base+0x1f1c>
   2ae48:	mov	r2, #192	; 0xc0
   2ae4c:	ldr	r1, [pc, #144]	; 2aee4 <__flatcc_fb_gen_c_json_printer@@Base+0x1f20>
   2ae50:	ldr	r0, [pc, #144]	; 2aee8 <__flatcc_fb_gen_c_json_printer@@Base+0x1f24>
   2ae54:	add	r3, pc, r3
   2ae58:	add	r3, r3, #244	; 0xf4
   2ae5c:	add	r1, pc, r1
   2ae60:	add	r0, pc, r0
   2ae64:	bl	14118 <__assert_fail@plt>
   2ae68:	ldr	r3, [pc, #124]	; 2aeec <__flatcc_fb_gen_c_json_printer@@Base+0x1f28>
   2ae6c:	mov	r2, #224	; 0xe0
   2ae70:	ldr	r1, [pc, #120]	; 2aef0 <__flatcc_fb_gen_c_json_printer@@Base+0x1f2c>
   2ae74:	ldr	r0, [pc, #120]	; 2aef4 <__flatcc_fb_gen_c_json_printer@@Base+0x1f30>
   2ae78:	add	r3, pc, r3
   2ae7c:	add	r3, r3, #216	; 0xd8
   2ae80:	add	r1, pc, r1
   2ae84:	add	r0, pc, r0
   2ae88:	bl	14118 <__assert_fail@plt>
   2ae8c:	ldr	r3, [pc, #100]	; 2aef8 <__flatcc_fb_gen_c_json_printer@@Base+0x1f34>
   2ae90:	mov	r2, #237	; 0xed
   2ae94:	ldr	r1, [pc, #96]	; 2aefc <__flatcc_fb_gen_c_json_printer@@Base+0x1f38>
   2ae98:	ldr	r0, [pc, #96]	; 2af00 <__flatcc_fb_gen_c_json_printer@@Base+0x1f3c>
   2ae9c:	add	r3, pc, r3
   2aea0:	add	r3, r3, #188	; 0xbc
   2aea4:	add	r1, pc, r1
   2aea8:	add	r0, pc, r0
   2aeac:	bl	14118 <__assert_fail@plt>
   2aeb0:	andeq	sp, r2, r0, ror #19
   2aeb4:	andeq	sp, r2, ip, ror #29
   2aeb8:	andeq	sp, r2, r0, ror #30
   2aebc:	andeq	sp, r2, r0, asr #8
   2aec0:	andeq	sp, r2, ip, asr #18
   2aec4:	andeq	sp, r2, r8, ror #19
   2aec8:	andeq	sp, r2, r0, ror #7
   2aecc:	andeq	sp, r2, ip, ror #17
   2aed0:	andeq	sp, r2, r8, lsl #19
   2aed4:	andeq	sp, r2, r0, lsr #7
   2aed8:	andeq	sp, r2, ip, lsr #17
   2aedc:	andeq	sp, r2, r0, lsr #18
   2aee0:	andeq	sp, r2, ip, ror r3
   2aee4:	andeq	sp, r2, r8, lsl #17
   2aee8:	andeq	sp, r2, r8, asr #18
   2aeec:	andeq	sp, r2, r8, asr r3
   2aef0:	andeq	sp, r2, r4, ror #16
   2aef4:	ldrdeq	sp, [r2], -r8
   2aef8:	andeq	sp, r2, r4, lsr r3
   2aefc:	andeq	sp, r2, r0, asr #16
   2af00:	ldrdeq	sp, [r2], -ip

0002af04 <__flatcc_fb_codegen_bfbs_to_buffer@@Base>:
   2af04:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2af08:	mov	r5, r2
   2af0c:	strd	r6, [sp, #8]
   2af10:	mov	r7, r0
   2af14:	mov	r6, r3
   2af18:	str	r8, [sp, #16]
   2af1c:	mov	r8, r1
   2af20:	str	lr, [sp, #20]
   2af24:	sub	sp, sp, #232	; 0xe8
   2af28:	mov	r4, sp
   2af2c:	mov	r0, r4
   2af30:	bl	397d8 <flatcc_builder_init@@Base>
   2af34:	mov	r3, r8
   2af38:	add	r2, r7, #188	; 0xbc
   2af3c:	ldr	r1, [r7, #184]	; 0xb8
   2af40:	mov	r0, r4
   2af44:	bl	29a9c <__flatcc_fb_gen_c_json_printer@@Base+0xad8>
   2af48:	mov	r1, r5
   2af4c:	mov	r0, r4
   2af50:	ldr	r2, [r6]
   2af54:	bl	3d484 <flatcc_builder_copy_buffer@@Base>
   2af58:	cmp	r0, #0
   2af5c:	beq	2af68 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x64>
   2af60:	mov	r0, r5
   2af64:	bl	2a7ac <__flatcc_fb_gen_c_json_printer@@Base+0x17e8>
   2af68:	mov	r0, r4
   2af6c:	bl	3d39c <flatcc_builder_get_buffer_size@@Base>
   2af70:	str	r0, [r6]
   2af74:	mov	r0, r4
   2af78:	bl	39988 <flatcc_builder_clear@@Base>
   2af7c:	mov	r0, r5
   2af80:	add	sp, sp, #232	; 0xe8
   2af84:	ldrd	r4, [sp]
   2af88:	ldrd	r6, [sp, #8]
   2af8c:	ldr	r8, [sp, #16]
   2af90:	add	sp, sp, #20
   2af94:	pop	{pc}		; (ldr pc, [sp], #4)

0002af98 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>:
   2af98:	strd	r4, [sp, #-20]!	; 0xffffffec
   2af9c:	mov	r5, r0
   2afa0:	strd	r6, [sp, #8]
   2afa4:	mov	r6, r1
   2afa8:	mov	r7, r2
   2afac:	str	lr, [sp, #16]
   2afb0:	sub	sp, sp, #236	; 0xec
   2afb4:	mov	r4, sp
   2afb8:	mov	r0, r4
   2afbc:	bl	397d8 <flatcc_builder_init@@Base>
   2afc0:	add	r2, r5, #188	; 0xbc
   2afc4:	mov	r3, r6
   2afc8:	ldr	r1, [r5, #184]	; 0xb8
   2afcc:	mov	r0, r4
   2afd0:	bl	29a9c <__flatcc_fb_gen_c_json_printer@@Base+0xad8>
   2afd4:	cmp	r0, #0
   2afd8:	movne	r5, #0
   2afdc:	bne	2aff8 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x60>
   2afe0:	mov	r1, r7
   2afe4:	mov	r0, r4
   2afe8:	bl	3d4f0 <flatcc_builder_finalize_buffer@@Base>
   2afec:	subs	r5, r0, #0
   2aff0:	beq	2aff8 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x60>
   2aff4:	bl	2a7ac <__flatcc_fb_gen_c_json_printer@@Base+0x17e8>
   2aff8:	mov	r0, r4
   2affc:	bl	39988 <flatcc_builder_clear@@Base>
   2b000:	mov	r0, r5
   2b004:	add	sp, sp, #236	; 0xec
   2b008:	ldrd	r4, [sp]
   2b00c:	ldrd	r6, [sp, #8]
   2b010:	add	sp, sp, #16
   2b014:	pop	{pc}		; (ldr pc, [sp], #4)

0002b018 <__flatcc_fb_codegen_bfbs_to_file@@Base>:
   2b018:	strd	r4, [sp, #-32]!	; 0xffffffe0
   2b01c:	mov	r5, r0
   2b020:	ldr	r4, [r0, #216]	; 0xd8
   2b024:	strd	r6, [sp, #8]
   2b028:	mov	r7, r1
   2b02c:	ldr	r6, [pc, #440]	; 2b1ec <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1d4>
   2b030:	strd	r8, [sp, #16]
   2b034:	str	sl, [sp, #24]
   2b038:	cmp	r4, #0
   2b03c:	str	lr, [sp, #28]
   2b040:	sub	sp, sp, #16
   2b044:	ldr	r8, [r0, #108]	; 0x6c
   2b048:	add	r6, pc, r6
   2b04c:	beq	2b150 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x138>
   2b050:	mov	r0, r4
   2b054:	bl	1404c <strlen@plt>
   2b058:	mov	r9, r0
   2b05c:	cmp	r8, #0
   2b060:	beq	2b0f4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xdc>
   2b064:	ldr	r3, [pc, #388]	; 2b1f0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1d8>
   2b068:	ldr	r3, [r6, r3]
   2b06c:	ldr	r4, [r3]
   2b070:	cmp	r4, #0
   2b074:	beq	2b1bc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a4>
   2b078:	mov	r1, r7
   2b07c:	mov	r0, r5
   2b080:	add	r2, sp, #12
   2b084:	bl	2af98 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>
   2b088:	subs	r7, r0, #0
   2b08c:	beq	2b188 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x170>
   2b090:	mov	r3, r4
   2b094:	mov	r1, #1
   2b098:	ldr	r2, [sp, #12]
   2b09c:	bl	13fec <fwrite@plt>
   2b0a0:	ldr	r3, [sp, #12]
   2b0a4:	cmp	r0, r3
   2b0a8:	moveq	r5, #0
   2b0ac:	bne	2b160 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x148>
   2b0b0:	mov	r0, r7
   2b0b4:	bl	13fa4 <free@plt>
   2b0b8:	ldr	r3, [pc, #304]	; 2b1f0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1d8>
   2b0bc:	ldr	r3, [r6, r3]
   2b0c0:	ldr	r3, [r3]
   2b0c4:	cmp	r3, r4
   2b0c8:	beq	2b0d4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xbc>
   2b0cc:	mov	r0, r4
   2b0d0:	bl	140ac <fclose@plt>
   2b0d4:	mov	r0, r5
   2b0d8:	add	sp, sp, #16
   2b0dc:	ldrd	r4, [sp]
   2b0e0:	ldrd	r6, [sp, #8]
   2b0e4:	ldrd	r8, [sp, #16]
   2b0e8:	ldr	sl, [sp, #24]
   2b0ec:	add	sp, sp, #28
   2b0f0:	pop	{pc}		; (ldr pc, [sp], #4)
   2b0f4:	ldr	sl, [r7, #160]	; 0xa0
   2b0f8:	mov	r8, #1
   2b0fc:	mov	r0, sl
   2b100:	bl	1404c <strlen@plt>
   2b104:	ldr	ip, [pc, #232]	; 2b1f4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1dc>
   2b108:	mov	r3, r0
   2b10c:	mov	r1, r9
   2b110:	mov	r2, sl
   2b114:	mov	r0, r4
   2b118:	str	r8, [sp, #4]
   2b11c:	add	ip, pc, ip
   2b120:	str	ip, [sp]
   2b124:	bl	2e1bc <__flatcc_fb_create_join_path_n@@Base>
   2b128:	subs	r9, r0, #0
   2b12c:	beq	2b1c4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1ac>
   2b130:	ldr	r1, [pc, #192]	; 2b1f8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1e0>
   2b134:	add	r1, pc, r1
   2b138:	bl	13f98 <fopen@plt>
   2b13c:	subs	r4, r0, #0
   2b140:	beq	2b19c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x184>
   2b144:	mov	r0, r9
   2b148:	bl	13fa4 <free@plt>
   2b14c:	b	2b070 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x58>
   2b150:	mov	r9, r4
   2b154:	ldr	r4, [pc, #160]	; 2b1fc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1e4>
   2b158:	add	r4, pc, r4
   2b15c:	b	2b05c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x44>
   2b160:	ldr	r3, [pc, #152]	; 2b200 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1e8>
   2b164:	mov	r2, #38	; 0x26
   2b168:	mov	r1, #1
   2b16c:	mvn	r5, #0
   2b170:	ldr	r0, [pc, #140]	; 2b204 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1ec>
   2b174:	ldr	r3, [r6, r3]
   2b178:	add	r0, pc, r0
   2b17c:	ldr	r3, [r3]
   2b180:	bl	13fec <fwrite@plt>
   2b184:	b	2b0b0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x98>
   2b188:	ldr	r0, [pc, #120]	; 2b208 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1f0>
   2b18c:	mvn	r5, #0
   2b190:	add	r0, pc, r0
   2b194:	bl	14004 <puts@plt>
   2b198:	b	2b0b8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xa0>
   2b19c:	ldr	r3, [pc, #92]	; 2b200 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1e8>
   2b1a0:	mov	r2, r9
   2b1a4:	ldr	r1, [pc, #96]	; 2b20c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1f4>
   2b1a8:	ldr	r3, [r6, r3]
   2b1ac:	add	r1, pc, r1
   2b1b0:	ldr	r0, [r3]
   2b1b4:	bl	14064 <fprintf@plt>
   2b1b8:	b	2b144 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x12c>
   2b1bc:	mvn	r5, #0
   2b1c0:	b	2b0d4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xbc>
   2b1c4:	ldr	r3, [pc, #52]	; 2b200 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1e8>
   2b1c8:	mov	r2, #34	; 0x22
   2b1cc:	mov	r1, r8
   2b1d0:	ldr	r0, [pc, #56]	; 2b210 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1f8>
   2b1d4:	ldr	r3, [r6, r3]
   2b1d8:	add	r0, pc, r0
   2b1dc:	ldr	r3, [r3]
   2b1e0:	bl	13fec <fwrite@plt>
   2b1e4:	mov	r0, r8
   2b1e8:	bl	14040 <exit@plt>
   2b1ec:			; <UNDEFINED> instruction: 0x00041fb0
   2b1f0:	andeq	r0, r0, ip, lsr #1
   2b1f4:	andeq	r6, r1, ip, lsr r7
   2b1f8:	andeq	r6, r1, ip, asr #16
   2b1fc:	andeq	r0, r2, r0, ror #20
   2b200:	andeq	r0, r0, r0, lsr #1
   2b204:	andeq	sp, r2, r0, asr #13
   2b208:	andeq	sp, r2, r4, lsl #13
   2b20c:	andeq	sp, r2, r4, lsr r6
   2b210:	andeq	r6, r1, r4, asr r6
   2b214:	str	r4, [sp, #-8]!
   2b218:	mov	r4, r0
   2b21c:	ldr	r0, [r0]
   2b220:	str	lr, [sp, #4]
   2b224:	cmp	r0, #0
   2b228:	beq	2b230 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x218>
   2b22c:	bl	13fa4 <free@plt>
   2b230:	mov	r3, #0
   2b234:	str	r3, [r4]
   2b238:	str	r3, [r4, #4]
   2b23c:	str	r3, [r4, #8]
   2b240:	str	r3, [r4, #12]
   2b244:	ldr	r4, [sp]
   2b248:	add	sp, sp, #4
   2b24c:	pop	{pc}		; (ldr pc, [sp], #4)
   2b250:	strd	r4, [sp, #-36]!	; 0xffffffdc
   2b254:	cmp	r3, #0
   2b258:	ldr	r4, [pc, #600]	; 2b4b8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4a0>
   2b25c:	strd	r6, [sp, #8]
   2b260:	strd	r8, [sp, #16]
   2b264:	strd	sl, [sp, #24]
   2b268:	str	lr, [sp, #32]
   2b26c:	sub	sp, sp, #28
   2b270:	add	r4, pc, r4
   2b274:	str	r3, [sp, #8]
   2b278:	str	r0, [sp, #12]
   2b27c:	beq	2b498 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x480>
   2b280:	ldr	r3, [sp, #8]
   2b284:	cmp	r3, #2
   2b288:	beq	2b478 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x460>
   2b28c:	ldr	r3, [sp, #8]
   2b290:	cmp	r3, #1
   2b294:	beq	2b458 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x440>
   2b298:	ldr	r5, [sp, #12]
   2b29c:	mov	r9, r1
   2b2a0:	mov	r3, #179	; 0xb3
   2b2a4:	mov	sl, r2
   2b2a8:	ldr	r1, [r5, #8]
   2b2ac:	ldr	r7, [r5, #12]
   2b2b0:	mul	r3, r3, r7
   2b2b4:	cmp	r1, r3, lsr #8
   2b2b8:	bcs	2b3ac <__flatcc_fb_codegen_bfbs_to_file@@Base+0x394>
   2b2bc:	ldr	r3, [sp, #12]
   2b2c0:	movw	r1, #15186	; 0x3b52
   2b2c4:	movt	r1, #12137	; 0x2f69
   2b2c8:	mov	r2, sl
   2b2cc:	mov	r0, r9
   2b2d0:	sub	r7, r7, #1
   2b2d4:	ldr	r6, [r3]
   2b2d8:	mov	r3, #0
   2b2dc:	str	r1, [sp]
   2b2e0:	add	r1, sp, #16
   2b2e4:	str	r1, [sp, #4]
   2b2e8:	bl	3dcd4 <cmetrohash64_1@@Base>
   2b2ec:	ldr	r3, [sp, #16]
   2b2f0:	ldr	r2, [sp, #64]	; 0x40
   2b2f4:	sub	r2, r2, #2
   2b2f8:	cmp	r2, #1
   2b2fc:	and	r2, r7, r3
   2b300:	add	r4, r6, r2, lsl #2
   2b304:	bls	2b3dc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3c4>
   2b308:	ldr	r5, [r6, r2, lsl #2]
   2b30c:	cmp	r5, #0
   2b310:	moveq	r8, r4
   2b314:	beq	2b370 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x358>
   2b318:	add	fp, r3, #1
   2b31c:	mov	r8, #0
   2b320:	b	2b354 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x33c>
   2b324:	mov	r2, sl
   2b328:	mov	r1, r5
   2b32c:	mov	r0, r9
   2b330:	bl	14100 <strncmp@plt>
   2b334:	cmp	r0, #0
   2b338:	beq	2b3c4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3ac>
   2b33c:	and	r4, r7, fp
   2b340:	add	fp, fp, #1
   2b344:	ldr	r5, [r6, r4, lsl #2]
   2b348:	add	r4, r6, r4, lsl #2
   2b34c:	cmp	r5, #0
   2b350:	beq	2b368 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x350>
   2b354:	cmp	r5, #2
   2b358:	bne	2b324 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x30c>
   2b35c:	cmp	r8, #0
   2b360:	moveq	r8, r4
   2b364:	b	2b33c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x324>
   2b368:	cmp	r8, #0
   2b36c:	moveq	r8, r4
   2b370:	ldr	r2, [sp, #12]
   2b374:	mov	r5, #0
   2b378:	ldr	r3, [r2, #8]
   2b37c:	add	r3, r3, #1
   2b380:	str	r3, [r2, #8]
   2b384:	ldr	r3, [sp, #8]
   2b388:	str	r3, [r8]
   2b38c:	mov	r0, r5
   2b390:	add	sp, sp, #28
   2b394:	ldrd	r4, [sp]
   2b398:	ldrd	r6, [sp, #8]
   2b39c:	ldrd	r8, [sp, #16]
   2b3a0:	ldrd	sl, [sp, #24]
   2b3a4:	add	sp, sp, #32
   2b3a8:	pop	{pc}		; (ldr pc, [sp], #4)
   2b3ac:	lsl	r1, r1, #1
   2b3b0:	bl	2b4ec <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4d4>
   2b3b4:	cmp	r0, #0
   2b3b8:	bne	2b430 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x418>
   2b3bc:	ldr	r7, [r5, #12]
   2b3c0:	b	2b2bc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2a4>
   2b3c4:	ldr	r3, [sp, #64]	; 0x40
   2b3c8:	cmp	r3, #0
   2b3cc:	bne	2b38c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x374>
   2b3d0:	ldr	r3, [sp, #8]
   2b3d4:	str	r3, [r4]
   2b3d8:	b	2b38c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x374>
   2b3dc:	ldr	ip, [sp, #12]
   2b3e0:	ldr	r0, [r6, r2, lsl #2]
   2b3e4:	ldr	r1, [ip, #8]
   2b3e8:	cmp	r0, #2
   2b3ec:	cmpne	r0, #0
   2b3f0:	add	r2, r1, #1
   2b3f4:	str	r2, [ip, #8]
   2b3f8:	beq	2b420 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x408>
   2b3fc:	add	r3, r3, #1
   2b400:	and	r2, r7, r3
   2b404:	add	r3, r3, #1
   2b408:	ldr	r1, [r6, r2, lsl #2]
   2b40c:	add	r2, r6, r2, lsl #2
   2b410:	cmp	r1, #0
   2b414:	cmpne	r1, #2
   2b418:	bne	2b400 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3e8>
   2b41c:	mov	r4, r2
   2b420:	ldr	r3, [sp, #8]
   2b424:	mov	r5, #0
   2b428:	str	r3, [r4]
   2b42c:	b	2b38c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x374>
   2b430:	ldr	r3, [pc, #132]	; 2b4bc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4a4>
   2b434:	ldr	r2, [pc, #132]	; 2b4c0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4a8>
   2b438:	ldr	r1, [pc, #132]	; 2b4c4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4ac>
   2b43c:	ldr	r3, [r4, r3]
   2b440:	add	r2, pc, r2
   2b444:	add	r1, pc, r1
   2b448:	ldr	r0, [r3]
   2b44c:	bl	14064 <fprintf@plt>
   2b450:	mov	r0, #1
   2b454:	bl	14040 <exit@plt>
   2b458:	ldr	r3, [pc, #104]	; 2b4c8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4b0>
   2b45c:	mov	r2, #116	; 0x74
   2b460:	ldr	r1, [pc, #100]	; 2b4cc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4b4>
   2b464:	ldr	r0, [pc, #100]	; 2b4d0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4b8>
   2b468:	add	r3, pc, r3
   2b46c:	add	r1, pc, r1
   2b470:	add	r0, pc, r0
   2b474:	bl	14118 <__assert_fail@plt>
   2b478:	ldr	r3, [pc, #84]	; 2b4d4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4bc>
   2b47c:	mov	r2, #115	; 0x73
   2b480:	ldr	r1, [pc, #80]	; 2b4d8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4c0>
   2b484:	ldr	r0, [pc, #80]	; 2b4dc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4c4>
   2b488:	add	r3, pc, r3
   2b48c:	add	r1, pc, r1
   2b490:	add	r0, pc, r0
   2b494:	bl	14118 <__assert_fail@plt>
   2b498:	ldr	r3, [pc, #64]	; 2b4e0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4c8>
   2b49c:	mov	r2, #114	; 0x72
   2b4a0:	ldr	r1, [pc, #60]	; 2b4e4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4cc>
   2b4a4:	ldr	r0, [pc, #60]	; 2b4e8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4d0>
   2b4a8:	add	r3, pc, r3
   2b4ac:	add	r1, pc, r1
   2b4b0:	add	r0, pc, r0
   2b4b4:	bl	14118 <__assert_fail@plt>
   2b4b8:	andeq	r1, r4, r8, lsl #27
   2b4bc:	andeq	r0, r0, r0, lsr #1
   2b4c0:	andeq	sp, r2, r8, ror #9
   2b4c4:	andeq	sp, r2, r8, lsl r5
   2b4c8:	strdeq	sp, [r2], -r8
   2b4cc:	andeq	sp, r2, ip, lsl #8
   2b4d0:	andeq	sp, r2, r0, lsr #9
   2b4d4:	ldrdeq	sp, [r2], -r8
   2b4d8:	andeq	sp, r2, ip, ror #7
   2b4dc:	andeq	sp, r2, r8, ror #8
   2b4e0:			; <UNDEFINED> instruction: 0x0002d3b8
   2b4e4:	andeq	sp, r2, ip, asr #7
   2b4e8:	andeq	sp, r2, r0, lsr r4
   2b4ec:	ldr	r3, [r0, #8]
   2b4f0:	strd	r4, [sp, #-28]!	; 0xffffffe4
   2b4f4:	strd	r6, [sp, #8]
   2b4f8:	mov	r7, r0
   2b4fc:	strd	r8, [sp, #16]
   2b500:	str	lr, [sp, #24]
   2b504:	sub	sp, sp, #28
   2b508:	cmp	r1, r3
   2b50c:	ldr	r6, [r0]
   2b510:	movcc	r1, r3
   2b514:	cmp	r1, #2
   2b518:	bls	2b608 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5f0>
   2b51c:	mov	r3, #4
   2b520:	movw	r0, #358	; 0x166
   2b524:	mul	r2, r0, r3
   2b528:	lsl	r4, r3, #1
   2b52c:	cmp	r1, r2, lsr #8
   2b530:	mov	r3, r4
   2b534:	bhi	2b524 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x50c>
   2b538:	mov	r1, #4
   2b53c:	mov	r0, r4
   2b540:	bl	13f74 <calloc@plt>
   2b544:	cmp	r0, #0
   2b548:	str	r0, [sp, #8]
   2b54c:	beq	2b610 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5f8>
   2b550:	ldr	r3, [r7, #12]
   2b554:	mov	r5, #0
   2b558:	str	r5, [sp, #12]
   2b55c:	str	r5, [sp, #16]
   2b560:	str	r4, [sp, #20]
   2b564:	cmp	r3, r5
   2b568:	addeq	r8, sp, #8
   2b56c:	beq	2b5c8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5b0>
   2b570:	sub	r6, r6, #4
   2b574:	add	r8, sp, #8
   2b578:	mov	r9, #3
   2b57c:	b	2b588 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x570>
   2b580:	cmp	r3, r5
   2b584:	bls	2b5c8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5b0>
   2b588:	ldr	r4, [r6, #4]!
   2b58c:	add	r5, r5, #1
   2b590:	cmp	r4, #0
   2b594:	cmpne	r4, #2
   2b598:	beq	2b580 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x568>
   2b59c:	mov	r0, r4
   2b5a0:	bl	1404c <strlen@plt>
   2b5a4:	mov	r2, r0
   2b5a8:	mov	r3, r4
   2b5ac:	str	r9, [sp]
   2b5b0:	mov	r1, r4
   2b5b4:	mov	r0, r8
   2b5b8:	bl	2b250 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x238>
   2b5bc:	ldr	r3, [r7, #12]
   2b5c0:	cmp	r3, r5
   2b5c4:	bhi	2b588 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x570>
   2b5c8:	mov	r0, r7
   2b5cc:	bl	2b214 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1fc>
   2b5d0:	ldr	r3, [sp, #8]
   2b5d4:	mov	r0, #0
   2b5d8:	ldmib	r8, {r1, r2}
   2b5dc:	str	r3, [r7]
   2b5e0:	ldr	r3, [r8, #12]
   2b5e4:	str	r1, [r7, #4]
   2b5e8:	str	r2, [r7, #8]
   2b5ec:	str	r3, [r7, #12]
   2b5f0:	add	sp, sp, #28
   2b5f4:	ldrd	r4, [sp]
   2b5f8:	ldrd	r6, [sp, #8]
   2b5fc:	ldrd	r8, [sp, #16]
   2b600:	add	sp, sp, #24
   2b604:	pop	{pc}		; (ldr pc, [sp], #4)
   2b608:	mov	r4, #4
   2b60c:	b	2b538 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x520>
   2b610:	mvn	r0, #0
   2b614:	b	2b5f0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5d8>
   2b618:	strd	r4, [sp, #-36]!	; 0xffffffdc
   2b61c:	ldr	r5, [r0]
   2b620:	strd	r6, [sp, #8]
   2b624:	strd	r8, [sp, #16]
   2b628:	strd	sl, [sp, #24]
   2b62c:	str	lr, [sp, #32]
   2b630:	sub	sp, sp, #20
   2b634:	cmp	r5, #0
   2b638:	beq	2b6c4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6ac>
   2b63c:	mov	r6, r1
   2b640:	movw	r1, #15186	; 0x3b52
   2b644:	movt	r1, #12137	; 0x2f69
   2b648:	mov	r9, r0
   2b64c:	ldr	r7, [r9, #12]
   2b650:	mov	r3, #0
   2b654:	mov	r0, r6
   2b658:	str	r1, [sp]
   2b65c:	add	r1, sp, #8
   2b660:	mov	r8, r2
   2b664:	str	r1, [sp, #4]
   2b668:	bl	3dcd4 <cmetrohash64_1@@Base>
   2b66c:	ldr	sl, [sp, #8]
   2b670:	sub	r7, r7, #1
   2b674:	and	r3, r7, sl
   2b678:	ldr	fp, [r5, r3, lsl #2]
   2b67c:	add	r4, r5, r3, lsl #2
   2b680:	cmp	fp, #0
   2b684:	beq	2b6c4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6ac>
   2b688:	add	sl, sl, #1
   2b68c:	cmp	fp, #2
   2b690:	mov	r1, fp
   2b694:	mov	r2, r8
   2b698:	mov	r0, r6
   2b69c:	beq	2b6ac <__flatcc_fb_codegen_bfbs_to_file@@Base+0x694>
   2b6a0:	bl	14100 <strncmp@plt>
   2b6a4:	cmp	r0, #0
   2b6a8:	beq	2b6e8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6d0>
   2b6ac:	and	r3, sl, r7
   2b6b0:	add	sl, sl, #1
   2b6b4:	ldr	fp, [r5, r3, lsl #2]
   2b6b8:	add	r4, r5, r3, lsl #2
   2b6bc:	cmp	fp, #0
   2b6c0:	bne	2b68c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x674>
   2b6c4:	mov	fp, #0
   2b6c8:	mov	r0, fp
   2b6cc:	add	sp, sp, #20
   2b6d0:	ldrd	r4, [sp]
   2b6d4:	ldrd	r6, [sp, #8]
   2b6d8:	ldrd	r8, [sp, #16]
   2b6dc:	ldrd	sl, [sp, #24]
   2b6e0:	add	sp, sp, #32
   2b6e4:	pop	{pc}		; (ldr pc, [sp], #4)
   2b6e8:	ldr	r3, [r9, #8]
   2b6ec:	mov	r2, #2
   2b6f0:	str	r2, [r4]
   2b6f4:	sub	r3, r3, #1
   2b6f8:	str	r3, [r9, #8]
   2b6fc:	b	2b6c8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6b0>
   2b700:	strd	r4, [sp, #-28]!	; 0xffffffe4
   2b704:	strd	r6, [sp, #8]
   2b708:	strd	r8, [sp, #16]
   2b70c:	subs	r8, r0, #0
   2b710:	str	lr, [sp, #24]
   2b714:	sub	sp, sp, #20
   2b718:	beq	2b79c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x784>
   2b71c:	mov	r7, r3
   2b720:	movw	r3, #15186	; 0x3b52
   2b724:	movt	r3, #12137	; 0x2f69
   2b728:	ldr	r9, [r1]
   2b72c:	add	r1, sp, #8
   2b730:	mov	r6, r2
   2b734:	mov	r2, r7
   2b738:	mov	r0, r6
   2b73c:	str	r3, [sp]
   2b740:	mov	r3, #0
   2b744:	str	r1, [sp, #4]
   2b748:	bl	3dcd4 <cmetrohash64_1@@Base>
   2b74c:	ldr	r5, [sp, #8]
   2b750:	sub	r9, r9, #1
   2b754:	and	r3, r9, r5
   2b758:	ldr	r4, [r8, r3, lsl #2]
   2b75c:	cmp	r4, #0
   2b760:	beq	2b79c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x784>
   2b764:	add	r5, r5, #1
   2b768:	cmp	r4, #2
   2b76c:	mov	r1, r4
   2b770:	mov	r2, r7
   2b774:	mov	r0, r6
   2b778:	beq	2b788 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x770>
   2b77c:	bl	14100 <strncmp@plt>
   2b780:	cmp	r0, #0
   2b784:	beq	2b7a0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x788>
   2b788:	and	r1, r9, r5
   2b78c:	add	r5, r5, #1
   2b790:	ldr	r4, [r8, r1, lsl #2]
   2b794:	cmp	r4, #0
   2b798:	bne	2b768 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x750>
   2b79c:	mov	r4, #0
   2b7a0:	mov	r0, r4
   2b7a4:	add	sp, sp, #20
   2b7a8:	ldrd	r4, [sp]
   2b7ac:	ldrd	r6, [sp, #8]
   2b7b0:	ldrd	r8, [sp, #16]
   2b7b4:	add	sp, sp, #24
   2b7b8:	pop	{pc}		; (ldr pc, [sp], #4)

0002b7bc <str_set_clear@@Base>:
   2b7bc:	b	2b214 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1fc>

0002b7c0 <str_set_destroy@@Base>:
   2b7c0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2b7c4:	strd	r6, [sp, #8]
   2b7c8:	mov	r7, r0
   2b7cc:	str	r8, [sp, #16]
   2b7d0:	subs	r8, r1, #0
   2b7d4:	str	lr, [sp, #20]
   2b7d8:	beq	2b824 <str_set_destroy@@Base+0x64>
   2b7dc:	ldr	r5, [r0]
   2b7e0:	ldr	ip, [r0, #12]
   2b7e4:	cmp	ip, #0
   2b7e8:	beq	2b824 <str_set_destroy@@Base+0x64>
   2b7ec:	mov	r6, r2
   2b7f0:	sub	r5, r5, #4
   2b7f4:	mov	r4, #0
   2b7f8:	ldr	r3, [r5, #4]!
   2b7fc:	mov	r0, r6
   2b800:	add	r4, r4, #1
   2b804:	cmp	r3, #0
   2b808:	cmpne	r3, #2
   2b80c:	mov	r1, r3
   2b810:	beq	2b81c <str_set_destroy@@Base+0x5c>
   2b814:	blx	r8
   2b818:	ldr	ip, [r7, #12]
   2b81c:	cmp	r4, ip
   2b820:	bcc	2b7f8 <str_set_destroy@@Base+0x38>
   2b824:	mov	r0, r7
   2b828:	ldrd	r4, [sp]
   2b82c:	ldrd	r6, [sp, #8]
   2b830:	ldr	r8, [sp, #16]
   2b834:	ldr	lr, [sp, #20]
   2b838:	add	sp, sp, #24
   2b83c:	b	2b214 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1fc>

0002b840 <str_set_init@@Base>:
   2b840:	cmp	r1, #2
   2b844:	strd	r4, [sp, #-16]!
   2b848:	mov	r4, r0
   2b84c:	str	r6, [sp, #8]
   2b850:	str	lr, [sp, #12]
   2b854:	bls	2b8b0 <str_set_init@@Base+0x70>
   2b858:	mov	r3, #4
   2b85c:	movw	r0, #358	; 0x166
   2b860:	mul	r2, r0, r3
   2b864:	lsl	r5, r3, #1
   2b868:	cmp	r1, r2, lsr #8
   2b86c:	mov	r3, r5
   2b870:	bhi	2b860 <str_set_init@@Base+0x20>
   2b874:	mov	r1, #4
   2b878:	mov	r0, r5
   2b87c:	bl	13f74 <calloc@plt>
   2b880:	cmp	r0, #0
   2b884:	str	r0, [r4]
   2b888:	beq	2b8b8 <str_set_init@@Base+0x78>
   2b88c:	mov	r3, #0
   2b890:	mov	r0, r3
   2b894:	str	r3, [r4, #4]
   2b898:	str	r3, [r4, #8]
   2b89c:	str	r5, [r4, #12]
   2b8a0:	ldrd	r4, [sp]
   2b8a4:	ldr	r6, [sp, #8]
   2b8a8:	add	sp, sp, #12
   2b8ac:	pop	{pc}		; (ldr pc, [sp], #4)
   2b8b0:	mov	r5, #4
   2b8b4:	b	2b874 <str_set_init@@Base+0x34>
   2b8b8:	mvn	r0, #0
   2b8bc:	b	2b8a0 <str_set_init@@Base+0x60>

0002b8c0 <str_set_resize@@Base>:
   2b8c0:	b	2b4ec <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4d4>

0002b8c4 <str_set_insert@@Base>:
   2b8c4:	b	2b250 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x238>

0002b8c8 <str_set_insert_item@@Base>:
   2b8c8:	strd	r4, [sp, #-16]!
   2b8cc:	mov	r5, r0
   2b8d0:	mov	r0, r1
   2b8d4:	str	r6, [sp, #8]
   2b8d8:	mov	r6, r2
   2b8dc:	mov	r4, r1
   2b8e0:	str	lr, [sp, #12]
   2b8e4:	sub	sp, sp, #8
   2b8e8:	bl	1404c <strlen@plt>
   2b8ec:	mov	r2, r0
   2b8f0:	mov	r3, r4
   2b8f4:	str	r6, [sp]
   2b8f8:	mov	r0, r5
   2b8fc:	mov	r1, r4
   2b900:	bl	2b250 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x238>
   2b904:	add	sp, sp, #8
   2b908:	ldrd	r4, [sp]
   2b90c:	ldr	r6, [sp, #8]
   2b910:	add	sp, sp, #12
   2b914:	pop	{pc}		; (ldr pc, [sp], #4)

0002b918 <str_set_find@@Base>:
   2b918:	mov	ip, r0
   2b91c:	mov	r3, r2
   2b920:	ldr	r0, [ip], #12
   2b924:	mov	r2, r1
   2b928:	mov	r1, ip
   2b92c:	b	2b700 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6e8>

0002b930 <str_set_find_item@@Base>:
   2b930:	strd	r4, [sp, #-16]!
   2b934:	mov	r4, r0
   2b938:	mov	r0, r1
   2b93c:	mov	r5, r1
   2b940:	str	r6, [sp, #8]
   2b944:	str	lr, [sp, #12]
   2b948:	bl	1404c <strlen@plt>
   2b94c:	mov	r1, r4
   2b950:	mov	r3, r0
   2b954:	ldr	r6, [sp, #8]
   2b958:	mov	r2, r5
   2b95c:	ldrd	r4, [sp]
   2b960:	ldr	lr, [sp, #12]
   2b964:	add	sp, sp, #16
   2b968:	ldr	r0, [r1], #12
   2b96c:	b	2b700 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6e8>

0002b970 <str_set_remove@@Base>:
   2b970:	b	2b618 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x600>

0002b974 <str_set_remove_item@@Base>:
   2b974:	strd	r4, [sp, #-16]!
   2b978:	mov	r5, r0
   2b97c:	mov	r0, r1
   2b980:	mov	r4, r1
   2b984:	str	r6, [sp, #8]
   2b988:	str	lr, [sp, #12]
   2b98c:	bl	1404c <strlen@plt>
   2b990:	mov	r2, r0
   2b994:	mov	r1, r4
   2b998:	ldr	r6, [sp, #8]
   2b99c:	mov	r0, r5
   2b9a0:	ldrd	r4, [sp]
   2b9a4:	ldr	lr, [sp, #12]
   2b9a8:	add	sp, sp, #16
   2b9ac:	b	2b618 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x600>

0002b9b0 <str_set_visit@@Base>:
   2b9b0:	ldr	ip, [r0, #12]
   2b9b4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2b9b8:	ldr	r5, [r0]
   2b9bc:	strd	r6, [sp, #8]
   2b9c0:	str	r8, [sp, #16]
   2b9c4:	cmp	ip, #0
   2b9c8:	str	lr, [sp, #20]
   2b9cc:	beq	2ba10 <str_set_visit@@Base+0x60>
   2b9d0:	mov	r6, r2
   2b9d4:	mov	r8, r1
   2b9d8:	mov	r7, r0
   2b9dc:	sub	r5, r5, #4
   2b9e0:	mov	r4, #0
   2b9e4:	ldr	r3, [r5, #4]!
   2b9e8:	mov	r0, r6
   2b9ec:	add	r4, r4, #1
   2b9f0:	cmp	r3, #0
   2b9f4:	cmpne	r3, #2
   2b9f8:	mov	r1, r3
   2b9fc:	beq	2ba08 <str_set_visit@@Base+0x58>
   2ba00:	blx	r8
   2ba04:	ldr	ip, [r7, #12]
   2ba08:	cmp	r4, ip
   2ba0c:	bcc	2b9e4 <str_set_visit@@Base+0x34>
   2ba10:	ldrd	r4, [sp]
   2ba14:	ldrd	r6, [sp, #8]
   2ba18:	ldr	r8, [sp, #16]
   2ba1c:	add	sp, sp, #20
   2ba20:	pop	{pc}		; (ldr pc, [sp], #4)
   2ba24:	str	r4, [sp, #-8]!
   2ba28:	mov	r4, r0
   2ba2c:	ldr	r0, [r0]
   2ba30:	str	lr, [sp, #4]
   2ba34:	cmp	r0, #0
   2ba38:	beq	2ba40 <str_set_visit@@Base+0x90>
   2ba3c:	bl	13fa4 <free@plt>
   2ba40:	mov	r3, #0
   2ba44:	str	r3, [r4]
   2ba48:	str	r3, [r4, #4]
   2ba4c:	str	r3, [r4, #8]
   2ba50:	str	r3, [r4, #12]
   2ba54:	ldr	r4, [sp]
   2ba58:	add	sp, sp, #4
   2ba5c:	pop	{pc}		; (ldr pc, [sp], #4)
   2ba60:	strd	r4, [sp, #-28]!	; 0xffffffe4
   2ba64:	ldr	r4, [pc, #524]	; 2bc78 <str_set_visit@@Base+0x2c8>
   2ba68:	strd	r6, [sp, #8]
   2ba6c:	subs	r7, r2, #0
   2ba70:	strd	r8, [sp, #16]
   2ba74:	str	lr, [sp, #24]
   2ba78:	sub	sp, sp, #28
   2ba7c:	add	r4, pc, r4
   2ba80:	beq	2bc18 <str_set_visit@@Base+0x268>
   2ba84:	cmp	r7, #2
   2ba88:	beq	2bc58 <str_set_visit@@Base+0x2a8>
   2ba8c:	cmp	r7, #1
   2ba90:	beq	2bc38 <str_set_visit@@Base+0x288>
   2ba94:	ldr	r9, [r0, #12]
   2ba98:	mov	r5, r1
   2ba9c:	mov	r8, r3
   2baa0:	mov	r3, #179	; 0xb3
   2baa4:	mov	r6, r0
   2baa8:	ldr	r1, [r0, #8]
   2baac:	mul	r3, r3, r9
   2bab0:	cmp	r1, r3, lsr #8
   2bab4:	bcs	2bb84 <str_set_visit@@Base+0x1d4>
   2bab8:	movw	r1, #15186	; 0x3b52
   2babc:	movt	r1, #12137	; 0x2f69
   2bac0:	ldr	r4, [r6]
   2bac4:	mov	r2, #4
   2bac8:	mov	r3, #0
   2bacc:	str	r1, [sp]
   2bad0:	add	r1, sp, #16
   2bad4:	add	r0, sp, #12
   2bad8:	sub	r9, r9, #1
   2badc:	str	r1, [sp, #4]
   2bae0:	str	r5, [sp, #12]
   2bae4:	bl	3dcd4 <cmetrohash64_1@@Base>
   2bae8:	ldr	r2, [sp, #16]
   2baec:	sub	r3, r8, #2
   2baf0:	cmp	r3, #1
   2baf4:	and	r1, r9, r2
   2baf8:	add	r3, r4, r1, lsl #2
   2bafc:	bls	2bba8 <str_set_visit@@Base+0x1f8>
   2bb00:	ldr	r0, [r4, r1, lsl #2]
   2bb04:	cmp	r0, #0
   2bb08:	moveq	r1, r3
   2bb0c:	beq	2bb58 <str_set_visit@@Base+0x1a8>
   2bb10:	add	r2, r2, #1
   2bb14:	mov	r1, #0
   2bb18:	b	2bb3c <str_set_visit@@Base+0x18c>
   2bb1c:	cmp	r5, r0
   2bb20:	beq	2bb9c <str_set_visit@@Base+0x1ec>
   2bb24:	and	r3, r9, r2
   2bb28:	add	r2, r2, #1
   2bb2c:	ldr	r0, [r4, r3, lsl #2]
   2bb30:	add	r3, r4, r3, lsl #2
   2bb34:	cmp	r0, #0
   2bb38:	beq	2bb50 <str_set_visit@@Base+0x1a0>
   2bb3c:	cmp	r0, #2
   2bb40:	bne	2bb1c <str_set_visit@@Base+0x16c>
   2bb44:	cmp	r1, #0
   2bb48:	moveq	r1, r3
   2bb4c:	b	2bb24 <str_set_visit@@Base+0x174>
   2bb50:	cmp	r1, #0
   2bb54:	moveq	r1, r3
   2bb58:	ldr	r3, [r6, #8]
   2bb5c:	mov	r0, #0
   2bb60:	add	r3, r3, #1
   2bb64:	str	r3, [r6, #8]
   2bb68:	str	r7, [r1]
   2bb6c:	add	sp, sp, #28
   2bb70:	ldrd	r4, [sp]
   2bb74:	ldrd	r6, [sp, #8]
   2bb78:	ldrd	r8, [sp, #16]
   2bb7c:	add	sp, sp, #24
   2bb80:	pop	{pc}		; (ldr pc, [sp], #4)
   2bb84:	lsl	r1, r1, #1
   2bb88:	bl	2bcac <str_set_visit@@Base+0x2fc>
   2bb8c:	cmp	r0, #0
   2bb90:	bne	2bbf0 <str_set_visit@@Base+0x240>
   2bb94:	ldr	r9, [r6, #12]
   2bb98:	b	2bab8 <str_set_visit@@Base+0x108>
   2bb9c:	cmp	r8, #0
   2bba0:	streq	r7, [r3]
   2bba4:	b	2bb6c <str_set_visit@@Base+0x1bc>
   2bba8:	ldr	r0, [r6, #8]
   2bbac:	ldr	ip, [r4, r1, lsl #2]
   2bbb0:	add	r1, r0, #1
   2bbb4:	cmp	ip, #0
   2bbb8:	cmpne	ip, #2
   2bbbc:	str	r1, [r6, #8]
   2bbc0:	beq	2bbe4 <str_set_visit@@Base+0x234>
   2bbc4:	add	r2, r2, #1
   2bbc8:	and	r3, r9, r2
   2bbcc:	add	r2, r2, #1
   2bbd0:	ldr	r1, [r4, r3, lsl #2]
   2bbd4:	add	r3, r4, r3, lsl #2
   2bbd8:	cmp	r1, #0
   2bbdc:	cmpne	r1, #2
   2bbe0:	bne	2bbc8 <str_set_visit@@Base+0x218>
   2bbe4:	mov	r0, #0
   2bbe8:	str	r7, [r3]
   2bbec:	b	2bb6c <str_set_visit@@Base+0x1bc>
   2bbf0:	ldr	r3, [pc, #132]	; 2bc7c <str_set_visit@@Base+0x2cc>
   2bbf4:	ldr	r2, [pc, #132]	; 2bc80 <str_set_visit@@Base+0x2d0>
   2bbf8:	ldr	r1, [pc, #132]	; 2bc84 <str_set_visit@@Base+0x2d4>
   2bbfc:	ldr	r3, [r4, r3]
   2bc00:	add	r2, pc, r2
   2bc04:	add	r1, pc, r1
   2bc08:	ldr	r0, [r3]
   2bc0c:	bl	14064 <fprintf@plt>
   2bc10:	mov	r0, #1
   2bc14:	bl	14040 <exit@plt>
   2bc18:	ldr	r3, [pc, #104]	; 2bc88 <str_set_visit@@Base+0x2d8>
   2bc1c:	mov	r2, #114	; 0x72
   2bc20:	ldr	r1, [pc, #100]	; 2bc8c <str_set_visit@@Base+0x2dc>
   2bc24:	ldr	r0, [pc, #100]	; 2bc90 <str_set_visit@@Base+0x2e0>
   2bc28:	add	r3, pc, r3
   2bc2c:	add	r1, pc, r1
   2bc30:	add	r0, pc, r0
   2bc34:	bl	14118 <__assert_fail@plt>
   2bc38:	ldr	r3, [pc, #84]	; 2bc94 <str_set_visit@@Base+0x2e4>
   2bc3c:	mov	r2, #116	; 0x74
   2bc40:	ldr	r1, [pc, #80]	; 2bc98 <str_set_visit@@Base+0x2e8>
   2bc44:	ldr	r0, [pc, #80]	; 2bc9c <str_set_visit@@Base+0x2ec>
   2bc48:	add	r3, pc, r3
   2bc4c:	add	r1, pc, r1
   2bc50:	add	r0, pc, r0
   2bc54:	bl	14118 <__assert_fail@plt>
   2bc58:	ldr	r3, [pc, #64]	; 2bca0 <str_set_visit@@Base+0x2f0>
   2bc5c:	mov	r2, #115	; 0x73
   2bc60:	ldr	r1, [pc, #60]	; 2bca4 <str_set_visit@@Base+0x2f4>
   2bc64:	ldr	r0, [pc, #60]	; 2bca8 <str_set_visit@@Base+0x2f8>
   2bc68:	add	r3, pc, r3
   2bc6c:	add	r1, pc, r1
   2bc70:	add	r0, pc, r0
   2bc74:	bl	14118 <__assert_fail@plt>
   2bc78:	andeq	r1, r4, ip, ror r5
   2bc7c:	andeq	r0, r0, r0, lsr #1
   2bc80:	andeq	ip, r2, r8, lsr #26
   2bc84:	andeq	ip, r2, r8, asr sp
   2bc88:	andeq	ip, r2, ip, asr #26
   2bc8c:	andeq	ip, r2, ip, asr #24
   2bc90:			; <UNDEFINED> instruction: 0x0002ccb0
   2bc94:	andeq	ip, r2, ip, lsr #26
   2bc98:	andeq	ip, r2, ip, lsr #24
   2bc9c:	andeq	ip, r2, r0, asr #25
   2bca0:	andeq	ip, r2, ip, lsl #26
   2bca4:	andeq	ip, r2, ip, lsl #24
   2bca8:	andeq	ip, r2, r8, lsl #25
   2bcac:	ldr	r3, [r0, #8]
   2bcb0:	strd	r4, [sp, #-20]!	; 0xffffffec
   2bcb4:	ldr	r5, [r0]
   2bcb8:	strd	r6, [sp, #8]
   2bcbc:	mov	r7, r0
   2bcc0:	str	lr, [sp, #16]
   2bcc4:	sub	sp, sp, #20
   2bcc8:	cmp	r1, r3
   2bccc:	movcc	r1, r3
   2bcd0:	cmp	r1, #2
   2bcd4:	bls	2bdac <str_set_visit@@Base+0x3fc>
   2bcd8:	mov	r3, #4
   2bcdc:	movw	r0, #358	; 0x166
   2bce0:	mul	r2, r0, r3
   2bce4:	lsl	r6, r3, #1
   2bce8:	cmp	r1, r2, lsr #8
   2bcec:	mov	r3, r6
   2bcf0:	bhi	2bce0 <str_set_visit@@Base+0x330>
   2bcf4:	mov	r1, #4
   2bcf8:	mov	r0, r6
   2bcfc:	bl	13f74 <calloc@plt>
   2bd00:	cmp	r0, #0
   2bd04:	str	r0, [sp]
   2bd08:	beq	2bdb4 <str_set_visit@@Base+0x404>
   2bd0c:	ldr	r3, [r7, #12]
   2bd10:	mov	r4, #0
   2bd14:	str	r4, [sp, #4]
   2bd18:	str	r4, [sp, #8]
   2bd1c:	str	r6, [sp, #12]
   2bd20:	cmp	r3, r4
   2bd24:	moveq	r6, sp
   2bd28:	beq	2bd70 <str_set_visit@@Base+0x3c0>
   2bd2c:	sub	r5, r5, #4
   2bd30:	mov	r6, sp
   2bd34:	b	2bd40 <str_set_visit@@Base+0x390>
   2bd38:	cmp	r3, r4
   2bd3c:	bls	2bd70 <str_set_visit@@Base+0x3c0>
   2bd40:	ldr	r2, [r5, #4]!
   2bd44:	add	r4, r4, #1
   2bd48:	cmp	r2, #0
   2bd4c:	cmpne	r2, #2
   2bd50:	beq	2bd38 <str_set_visit@@Base+0x388>
   2bd54:	mov	r3, #3
   2bd58:	mov	r1, r2
   2bd5c:	mov	r0, r6
   2bd60:	bl	2ba60 <str_set_visit@@Base+0xb0>
   2bd64:	ldr	r3, [r7, #12]
   2bd68:	cmp	r3, r4
   2bd6c:	bhi	2bd40 <str_set_visit@@Base+0x390>
   2bd70:	mov	r0, r7
   2bd74:	bl	2ba24 <str_set_visit@@Base+0x74>
   2bd78:	ldr	r3, [sp]
   2bd7c:	mov	r0, #0
   2bd80:	ldmib	r6, {r1, r2}
   2bd84:	str	r3, [r7]
   2bd88:	ldr	r3, [r6, #12]
   2bd8c:	str	r1, [r7, #4]
   2bd90:	str	r2, [r7, #8]
   2bd94:	str	r3, [r7, #12]
   2bd98:	add	sp, sp, #20
   2bd9c:	ldrd	r4, [sp]
   2bda0:	ldrd	r6, [sp, #8]
   2bda4:	add	sp, sp, #16
   2bda8:	pop	{pc}		; (ldr pc, [sp], #4)
   2bdac:	mov	r6, #4
   2bdb0:	b	2bcf4 <str_set_visit@@Base+0x344>
   2bdb4:	mvn	r0, #0
   2bdb8:	b	2bd98 <str_set_visit@@Base+0x3e8>
   2bdbc:	strd	r4, [sp, #-16]!
   2bdc0:	subs	r5, r0, #0
   2bdc4:	str	r6, [sp, #8]
   2bdc8:	str	lr, [sp, #12]
   2bdcc:	sub	sp, sp, #24
   2bdd0:	beq	2be44 <str_set_visit@@Base+0x494>
   2bdd4:	movw	r3, #15186	; 0x3b52
   2bdd8:	movt	r3, #12137	; 0x2f69
   2bddc:	ldr	r4, [r1]
   2bde0:	add	r1, sp, #16
   2bde4:	mov	r6, r2
   2bde8:	add	r0, sp, #12
   2bdec:	mov	r2, #4
   2bdf0:	str	r3, [sp]
   2bdf4:	mov	r3, #0
   2bdf8:	str	r1, [sp, #4]
   2bdfc:	str	r6, [sp, #12]
   2be00:	bl	3dcd4 <cmetrohash64_1@@Base>
   2be04:	ldr	r3, [sp, #16]
   2be08:	sub	r4, r4, #1
   2be0c:	and	r2, r4, r3
   2be10:	ldr	r0, [r5, r2, lsl #2]
   2be14:	cmp	r0, #0
   2be18:	beq	2be44 <str_set_visit@@Base+0x494>
   2be1c:	add	r3, r3, #1
   2be20:	cmp	r0, #2
   2be24:	and	r1, r4, r3
   2be28:	beq	2be34 <str_set_visit@@Base+0x484>
   2be2c:	cmp	r6, r0
   2be30:	beq	2be48 <str_set_visit@@Base+0x498>
   2be34:	ldr	r0, [r5, r1, lsl #2]
   2be38:	add	r3, r3, #1
   2be3c:	cmp	r0, #0
   2be40:	bne	2be20 <str_set_visit@@Base+0x470>
   2be44:	mov	r0, #0
   2be48:	add	sp, sp, #24
   2be4c:	ldrd	r4, [sp]
   2be50:	ldr	r6, [sp, #8]
   2be54:	add	sp, sp, #12
   2be58:	pop	{pc}		; (ldr pc, [sp], #4)
   2be5c:	strd	r4, [sp, #-20]!	; 0xffffffec
   2be60:	ldr	r4, [r0]
   2be64:	strd	r6, [sp, #8]
   2be68:	str	lr, [sp, #16]
   2be6c:	sub	sp, sp, #28
   2be70:	cmp	r4, #0
   2be74:	beq	2bef4 <str_set_visit@@Base+0x544>
   2be78:	mov	r6, r1
   2be7c:	movw	r3, #15186	; 0x3b52
   2be80:	movt	r3, #12137	; 0x2f69
   2be84:	add	r1, sp, #16
   2be88:	mov	r7, r0
   2be8c:	mov	r2, #4
   2be90:	str	r6, [sp, #12]
   2be94:	add	r0, sp, #12
   2be98:	ldr	r5, [r7, #12]
   2be9c:	str	r3, [sp]
   2bea0:	mov	r3, #0
   2bea4:	str	r1, [sp, #4]
   2bea8:	bl	3dcd4 <cmetrohash64_1@@Base>
   2beac:	ldr	r3, [sp, #16]
   2beb0:	sub	r5, r5, #1
   2beb4:	and	ip, r5, r3
   2beb8:	ldr	r0, [r4, ip, lsl #2]
   2bebc:	add	ip, r4, ip, lsl #2
   2bec0:	cmp	r0, #0
   2bec4:	beq	2bef4 <str_set_visit@@Base+0x544>
   2bec8:	add	r3, r3, #1
   2becc:	cmp	r0, #2
   2bed0:	and	r2, r5, r3
   2bed4:	beq	2bee0 <str_set_visit@@Base+0x530>
   2bed8:	cmp	r6, r0
   2bedc:	beq	2bf0c <str_set_visit@@Base+0x55c>
   2bee0:	ldr	r0, [r4, r2, lsl #2]
   2bee4:	add	r3, r3, #1
   2bee8:	add	ip, r4, r2, lsl #2
   2beec:	cmp	r0, #0
   2bef0:	bne	2becc <str_set_visit@@Base+0x51c>
   2bef4:	mov	r0, #0
   2bef8:	add	sp, sp, #28
   2befc:	ldrd	r4, [sp]
   2bf00:	ldrd	r6, [sp, #8]
   2bf04:	add	sp, sp, #16
   2bf08:	pop	{pc}		; (ldr pc, [sp], #4)
   2bf0c:	ldr	r3, [r7, #8]
   2bf10:	mov	r2, #2
   2bf14:	str	r2, [ip]
   2bf18:	sub	r3, r3, #1
   2bf1c:	str	r3, [r7, #8]
   2bf20:	b	2bef8 <str_set_visit@@Base+0x548>

0002bf24 <ptr_set_clear@@Base>:
   2bf24:	b	2ba24 <str_set_visit@@Base+0x74>

0002bf28 <ptr_set_destroy@@Base>:
   2bf28:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2bf2c:	strd	r6, [sp, #8]
   2bf30:	mov	r7, r0
   2bf34:	str	r8, [sp, #16]
   2bf38:	subs	r8, r1, #0
   2bf3c:	str	lr, [sp, #20]
   2bf40:	beq	2bf8c <ptr_set_destroy@@Base+0x64>
   2bf44:	ldr	r5, [r0]
   2bf48:	ldr	ip, [r0, #12]
   2bf4c:	cmp	ip, #0
   2bf50:	beq	2bf8c <ptr_set_destroy@@Base+0x64>
   2bf54:	mov	r6, r2
   2bf58:	sub	r5, r5, #4
   2bf5c:	mov	r4, #0
   2bf60:	ldr	r3, [r5, #4]!
   2bf64:	mov	r0, r6
   2bf68:	add	r4, r4, #1
   2bf6c:	cmp	r3, #0
   2bf70:	cmpne	r3, #2
   2bf74:	mov	r1, r3
   2bf78:	beq	2bf84 <ptr_set_destroy@@Base+0x5c>
   2bf7c:	blx	r8
   2bf80:	ldr	ip, [r7, #12]
   2bf84:	cmp	r4, ip
   2bf88:	bcc	2bf60 <ptr_set_destroy@@Base+0x38>
   2bf8c:	mov	r0, r7
   2bf90:	ldrd	r4, [sp]
   2bf94:	ldrd	r6, [sp, #8]
   2bf98:	ldr	r8, [sp, #16]
   2bf9c:	ldr	lr, [sp, #20]
   2bfa0:	add	sp, sp, #24
   2bfa4:	b	2ba24 <str_set_visit@@Base+0x74>

0002bfa8 <ptr_set_init@@Base>:
   2bfa8:	cmp	r1, #2
   2bfac:	strd	r4, [sp, #-16]!
   2bfb0:	mov	r4, r0
   2bfb4:	str	r6, [sp, #8]
   2bfb8:	str	lr, [sp, #12]
   2bfbc:	bls	2c018 <ptr_set_init@@Base+0x70>
   2bfc0:	mov	r3, #4
   2bfc4:	movw	r0, #358	; 0x166
   2bfc8:	mul	r2, r0, r3
   2bfcc:	lsl	r5, r3, #1
   2bfd0:	cmp	r1, r2, lsr #8
   2bfd4:	mov	r3, r5
   2bfd8:	bhi	2bfc8 <ptr_set_init@@Base+0x20>
   2bfdc:	mov	r1, #4
   2bfe0:	mov	r0, r5
   2bfe4:	bl	13f74 <calloc@plt>
   2bfe8:	cmp	r0, #0
   2bfec:	str	r0, [r4]
   2bff0:	beq	2c020 <ptr_set_init@@Base+0x78>
   2bff4:	mov	r3, #0
   2bff8:	mov	r0, r3
   2bffc:	str	r3, [r4, #4]
   2c000:	str	r3, [r4, #8]
   2c004:	str	r5, [r4, #12]
   2c008:	ldrd	r4, [sp]
   2c00c:	ldr	r6, [sp, #8]
   2c010:	add	sp, sp, #12
   2c014:	pop	{pc}		; (ldr pc, [sp], #4)
   2c018:	mov	r5, #4
   2c01c:	b	2bfdc <ptr_set_init@@Base+0x34>
   2c020:	mvn	r0, #0
   2c024:	b	2c008 <ptr_set_init@@Base+0x60>

0002c028 <ptr_set_resize@@Base>:
   2c028:	b	2bcac <str_set_visit@@Base+0x2fc>

0002c02c <ptr_set_insert@@Base>:
   2c02c:	mov	r2, r3
   2c030:	ldr	r3, [sp]
   2c034:	b	2ba60 <str_set_visit@@Base+0xb0>

0002c038 <ptr_set_insert_item@@Base>:
   2c038:	mov	r3, r2
   2c03c:	mov	r2, r1
   2c040:	b	2ba60 <str_set_visit@@Base+0xb0>

0002c044 <ptr_set_find@@Base>:
   2c044:	mov	r3, r0
   2c048:	mov	r2, r1
   2c04c:	ldr	r0, [r3], #12
   2c050:	mov	r1, r3
   2c054:	b	2bdbc <str_set_visit@@Base+0x40c>

0002c058 <ptr_set_find_item@@Base>:
   2c058:	mov	r3, r0
   2c05c:	mov	r2, r1
   2c060:	ldr	r0, [r3], #12
   2c064:	mov	r1, r3
   2c068:	b	2bdbc <str_set_visit@@Base+0x40c>

0002c06c <ptr_set_remove@@Base>:
   2c06c:	b	2be5c <str_set_visit@@Base+0x4ac>

0002c070 <ptr_set_remove_item@@Base>:
   2c070:	b	2be5c <str_set_visit@@Base+0x4ac>

0002c074 <ptr_set_visit@@Base>:
   2c074:	ldr	ip, [r0, #12]
   2c078:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2c07c:	ldr	r5, [r0]
   2c080:	strd	r6, [sp, #8]
   2c084:	str	r8, [sp, #16]
   2c088:	cmp	ip, #0
   2c08c:	str	lr, [sp, #20]
   2c090:	beq	2c0d4 <ptr_set_visit@@Base+0x60>
   2c094:	mov	r6, r2
   2c098:	mov	r8, r1
   2c09c:	mov	r7, r0
   2c0a0:	sub	r5, r5, #4
   2c0a4:	mov	r4, #0
   2c0a8:	ldr	r3, [r5, #4]!
   2c0ac:	mov	r0, r6
   2c0b0:	add	r4, r4, #1
   2c0b4:	cmp	r3, #0
   2c0b8:	cmpne	r3, #2
   2c0bc:	mov	r1, r3
   2c0c0:	beq	2c0cc <ptr_set_visit@@Base+0x58>
   2c0c4:	blx	r8
   2c0c8:	ldr	ip, [r7, #12]
   2c0cc:	cmp	r4, ip
   2c0d0:	bcc	2c0a8 <ptr_set_visit@@Base+0x34>
   2c0d4:	ldrd	r4, [sp]
   2c0d8:	ldrd	r6, [sp, #8]
   2c0dc:	ldr	r8, [sp, #16]
   2c0e0:	add	sp, sp, #20
   2c0e4:	pop	{pc}		; (ldr pc, [sp], #4)
   2c0e8:	str	r4, [sp, #-8]!
   2c0ec:	mov	r4, r0
   2c0f0:	ldr	r0, [r0]
   2c0f4:	str	lr, [sp, #4]
   2c0f8:	cmp	r0, #0
   2c0fc:	beq	2c104 <ptr_set_visit@@Base+0x90>
   2c100:	bl	13fa4 <free@plt>
   2c104:	mov	r3, #0
   2c108:	str	r3, [r4]
   2c10c:	str	r3, [r4, #4]
   2c110:	str	r3, [r4, #8]
   2c114:	str	r3, [r4, #12]
   2c118:	ldr	r4, [sp]
   2c11c:	add	sp, sp, #4
   2c120:	pop	{pc}		; (ldr pc, [sp], #4)
   2c124:	strd	r4, [sp, #-36]!	; 0xffffffdc
   2c128:	ldr	r4, [pc, #592]	; 2c380 <ptr_set_visit@@Base+0x30c>
   2c12c:	strd	r6, [sp, #8]
   2c130:	strd	r8, [sp, #16]
   2c134:	strd	sl, [sp, #24]
   2c138:	subs	fp, r3, #0
   2c13c:	str	lr, [sp, #32]
   2c140:	sub	sp, sp, #28
   2c144:	add	r4, pc, r4
   2c148:	str	r1, [sp, #8]
   2c14c:	beq	2c318 <ptr_set_visit@@Base+0x2a4>
   2c150:	cmp	fp, #2
   2c154:	beq	2c2f8 <ptr_set_visit@@Base+0x284>
   2c158:	cmp	fp, #1
   2c15c:	beq	2c338 <ptr_set_visit@@Base+0x2c4>
   2c160:	mov	r3, #179	; 0xb3
   2c164:	ldr	r1, [r0, #8]
   2c168:	mov	r9, r2
   2c16c:	mov	sl, r0
   2c170:	ldr	r8, [r0, #12]
   2c174:	mul	r3, r3, r8
   2c178:	cmp	r1, r3, lsr #8
   2c17c:	bcs	2c270 <ptr_set_visit@@Base+0x1fc>
   2c180:	movw	r1, #15186	; 0x3b52
   2c184:	movt	r1, #12137	; 0x2f69
   2c188:	ldr	r7, [sl]
   2c18c:	mov	r3, #0
   2c190:	mov	r2, r9
   2c194:	str	r1, [sp]
   2c198:	add	r1, sp, #16
   2c19c:	sub	r8, r8, #1
   2c1a0:	ldr	r0, [sp, #8]
   2c1a4:	str	r1, [sp, #4]
   2c1a8:	bl	3dcd4 <cmetrohash64_1@@Base>
   2c1ac:	ldr	r6, [sp, #16]
   2c1b0:	ldr	r3, [sp, #64]	; 0x40
   2c1b4:	sub	r3, r3, #2
   2c1b8:	cmp	r3, #1
   2c1bc:	and	r3, r8, r6
   2c1c0:	add	r4, r7, r3, lsl #2
   2c1c4:	bls	2c2b0 <ptr_set_visit@@Base+0x23c>
   2c1c8:	ldr	r5, [r7, r3, lsl #2]
   2c1cc:	cmp	r5, #0
   2c1d0:	moveq	r3, r4
   2c1d4:	beq	2c298 <ptr_set_visit@@Base+0x224>
   2c1d8:	mov	r3, #0
   2c1dc:	add	r6, r6, #1
   2c1e0:	str	sl, [sp, #12]
   2c1e4:	mov	sl, r8
   2c1e8:	mov	r8, r3
   2c1ec:	b	2c218 <ptr_set_visit@@Base+0x1a4>
   2c1f0:	ldr	r1, [r5, #4]
   2c1f4:	ldr	r2, [r1, #4]
   2c1f8:	cmp	r9, r2
   2c1fc:	beq	2c22c <ptr_set_visit@@Base+0x1b8>
   2c200:	and	r4, sl, r6
   2c204:	add	r6, r6, #1
   2c208:	ldr	r5, [r7, r4, lsl #2]
   2c20c:	add	r4, r7, r4, lsl #2
   2c210:	cmp	r5, #0
   2c214:	beq	2c288 <ptr_set_visit@@Base+0x214>
   2c218:	cmp	r5, #2
   2c21c:	bne	2c1f0 <ptr_set_visit@@Base+0x17c>
   2c220:	cmp	r8, #0
   2c224:	moveq	r8, r4
   2c228:	b	2c200 <ptr_set_visit@@Base+0x18c>
   2c22c:	mov	r2, r9
   2c230:	ldr	r1, [r1]
   2c234:	ldr	r0, [sp, #8]
   2c238:	bl	13fc8 <memcmp@plt>
   2c23c:	cmp	r0, #0
   2c240:	bne	2c200 <ptr_set_visit@@Base+0x18c>
   2c244:	ldr	r3, [sp, #64]	; 0x40
   2c248:	cmp	r3, #0
   2c24c:	streq	fp, [r4]
   2c250:	mov	r0, r5
   2c254:	add	sp, sp, #28
   2c258:	ldrd	r4, [sp]
   2c25c:	ldrd	r6, [sp, #8]
   2c260:	ldrd	r8, [sp, #16]
   2c264:	ldrd	sl, [sp, #24]
   2c268:	add	sp, sp, #32
   2c26c:	pop	{pc}		; (ldr pc, [sp], #4)
   2c270:	lsl	r1, r1, #1
   2c274:	bl	2c3b4 <ptr_set_visit@@Base+0x340>
   2c278:	cmp	r0, #0
   2c27c:	bne	2c358 <ptr_set_visit@@Base+0x2e4>
   2c280:	ldr	r8, [sl, #12]
   2c284:	b	2c180 <ptr_set_visit@@Base+0x10c>
   2c288:	ldr	sl, [sp, #12]
   2c28c:	cmp	r8, #0
   2c290:	mov	r3, r8
   2c294:	moveq	r3, r4
   2c298:	ldr	r2, [sl, #8]
   2c29c:	mov	r5, #0
   2c2a0:	add	r2, r2, #1
   2c2a4:	str	r2, [sl, #8]
   2c2a8:	str	fp, [r3]
   2c2ac:	b	2c250 <ptr_set_visit@@Base+0x1dc>
   2c2b0:	ldr	r2, [sl, #8]
   2c2b4:	ldr	r1, [r7, r3, lsl #2]
   2c2b8:	add	r3, r2, #1
   2c2bc:	cmp	r1, #2
   2c2c0:	cmpne	r1, #0
   2c2c4:	str	r3, [sl, #8]
   2c2c8:	beq	2c2ec <ptr_set_visit@@Base+0x278>
   2c2cc:	add	r6, r6, #1
   2c2d0:	and	r4, r8, r6
   2c2d4:	add	r6, r6, #1
   2c2d8:	ldr	r3, [r7, r4, lsl #2]
   2c2dc:	add	r4, r7, r4, lsl #2
   2c2e0:	cmp	r3, #0
   2c2e4:	cmpne	r3, #2
   2c2e8:	bne	2c2d0 <ptr_set_visit@@Base+0x25c>
   2c2ec:	mov	r5, #0
   2c2f0:	str	fp, [r4]
   2c2f4:	b	2c250 <ptr_set_visit@@Base+0x1dc>
   2c2f8:	ldr	r3, [pc, #132]	; 2c384 <ptr_set_visit@@Base+0x310>
   2c2fc:	mov	r2, #115	; 0x73
   2c300:	ldr	r1, [pc, #128]	; 2c388 <ptr_set_visit@@Base+0x314>
   2c304:	ldr	r0, [pc, #128]	; 2c38c <ptr_set_visit@@Base+0x318>
   2c308:	add	r3, pc, r3
   2c30c:	add	r1, pc, r1
   2c310:	add	r0, pc, r0
   2c314:	bl	14118 <__assert_fail@plt>
   2c318:	ldr	r3, [pc, #112]	; 2c390 <ptr_set_visit@@Base+0x31c>
   2c31c:	mov	r2, #114	; 0x72
   2c320:	ldr	r1, [pc, #108]	; 2c394 <ptr_set_visit@@Base+0x320>
   2c324:	ldr	r0, [pc, #108]	; 2c398 <ptr_set_visit@@Base+0x324>
   2c328:	add	r3, pc, r3
   2c32c:	add	r1, pc, r1
   2c330:	add	r0, pc, r0
   2c334:	bl	14118 <__assert_fail@plt>
   2c338:	ldr	r3, [pc, #92]	; 2c39c <ptr_set_visit@@Base+0x328>
   2c33c:	mov	r2, #116	; 0x74
   2c340:	ldr	r1, [pc, #88]	; 2c3a0 <ptr_set_visit@@Base+0x32c>
   2c344:	ldr	r0, [pc, #88]	; 2c3a4 <ptr_set_visit@@Base+0x330>
   2c348:	add	r3, pc, r3
   2c34c:	add	r1, pc, r1
   2c350:	add	r0, pc, r0
   2c354:	bl	14118 <__assert_fail@plt>
   2c358:	ldr	r3, [pc, #72]	; 2c3a8 <ptr_set_visit@@Base+0x334>
   2c35c:	ldr	r2, [pc, #72]	; 2c3ac <ptr_set_visit@@Base+0x338>
   2c360:	ldr	r1, [pc, #72]	; 2c3b0 <ptr_set_visit@@Base+0x33c>
   2c364:	ldr	r3, [r4, r3]
   2c368:	add	r2, pc, r2
   2c36c:	add	r1, pc, r1
   2c370:	ldr	r0, [r3]
   2c374:	bl	14064 <fprintf@plt>
   2c378:	mov	r0, #1
   2c37c:	bl	14040 <exit@plt>
   2c380:			; <UNDEFINED> instruction: 0x00040eb4
   2c384:	andeq	ip, r2, r4, lsl #13
   2c388:	andeq	ip, r2, ip, ror #10
   2c38c:	andeq	ip, r2, r8, ror #11
   2c390:	andeq	ip, r2, r4, ror #12
   2c394:	andeq	ip, r2, ip, asr #10
   2c398:			; <UNDEFINED> instruction: 0x0002c5b0
   2c39c:	andeq	ip, r2, r4, asr #12
   2c3a0:	andeq	ip, r2, ip, lsr #10
   2c3a4:	andeq	ip, r2, r0, asr #11
   2c3a8:	andeq	r0, r0, r0, lsr #1
   2c3ac:	andeq	ip, r2, r0, asr #11
   2c3b0:	strdeq	ip, [r2], -r0
   2c3b4:	ldr	r3, [r0, #8]
   2c3b8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2c3bc:	strd	r6, [sp, #8]
   2c3c0:	mov	r7, r0
   2c3c4:	str	r8, [sp, #16]
   2c3c8:	str	lr, [sp, #20]
   2c3cc:	sub	sp, sp, #24
   2c3d0:	cmp	r1, r3
   2c3d4:	ldr	r6, [r0]
   2c3d8:	movcc	r1, r3
   2c3dc:	cmp	r1, #2
   2c3e0:	bls	2c4c0 <ptr_set_visit@@Base+0x44c>
   2c3e4:	mov	r3, #4
   2c3e8:	movw	r0, #358	; 0x166
   2c3ec:	mul	r2, r0, r3
   2c3f0:	lsl	r5, r3, #1
   2c3f4:	cmp	r1, r2, lsr #8
   2c3f8:	mov	r3, r5
   2c3fc:	bhi	2c3ec <ptr_set_visit@@Base+0x378>
   2c400:	mov	r1, #4
   2c404:	mov	r0, r5
   2c408:	bl	13f74 <calloc@plt>
   2c40c:	cmp	r0, #0
   2c410:	str	r0, [sp, #8]
   2c414:	beq	2c4c8 <ptr_set_visit@@Base+0x454>
   2c418:	ldr	r2, [r7, #12]
   2c41c:	mov	r4, #0
   2c420:	str	r4, [sp, #12]
   2c424:	strd	r4, [sp, #16]
   2c428:	cmp	r2, r4
   2c42c:	addeq	r6, sp, #8
   2c430:	beq	2c480 <ptr_set_visit@@Base+0x40c>
   2c434:	sub	r5, r6, #4
   2c438:	mov	r8, #3
   2c43c:	add	r6, sp, #8
   2c440:	b	2c44c <ptr_set_visit@@Base+0x3d8>
   2c444:	cmp	r2, r4
   2c448:	bls	2c480 <ptr_set_visit@@Base+0x40c>
   2c44c:	ldr	r3, [r5, #4]!
   2c450:	add	r4, r4, #1
   2c454:	cmp	r3, #0
   2c458:	cmpne	r3, #2
   2c45c:	beq	2c444 <ptr_set_visit@@Base+0x3d0>
   2c460:	ldr	r2, [r3, #4]
   2c464:	mov	r0, r6
   2c468:	ldm	r2, {r1, r2}
   2c46c:	str	r8, [sp]
   2c470:	bl	2c124 <ptr_set_visit@@Base+0xb0>
   2c474:	ldr	r2, [r7, #12]
   2c478:	cmp	r2, r4
   2c47c:	bhi	2c44c <ptr_set_visit@@Base+0x3d8>
   2c480:	mov	r0, r7
   2c484:	bl	2c0e8 <ptr_set_visit@@Base+0x74>
   2c488:	ldr	r3, [sp, #8]
   2c48c:	mov	r0, #0
   2c490:	ldmib	r6, {r1, r2}
   2c494:	str	r3, [r7]
   2c498:	ldr	r3, [r6, #12]
   2c49c:	str	r1, [r7, #4]
   2c4a0:	str	r2, [r7, #8]
   2c4a4:	str	r3, [r7, #12]
   2c4a8:	add	sp, sp, #24
   2c4ac:	ldrd	r4, [sp]
   2c4b0:	ldrd	r6, [sp, #8]
   2c4b4:	ldr	r8, [sp, #16]
   2c4b8:	add	sp, sp, #20
   2c4bc:	pop	{pc}		; (ldr pc, [sp], #4)
   2c4c0:	mov	r5, #4
   2c4c4:	b	2c400 <ptr_set_visit@@Base+0x38c>
   2c4c8:	mvn	r0, #0
   2c4cc:	b	2c4a8 <ptr_set_visit@@Base+0x434>
   2c4d0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   2c4d4:	ldr	r5, [r0]
   2c4d8:	strd	r6, [sp, #8]
   2c4dc:	strd	r8, [sp, #16]
   2c4e0:	strd	sl, [sp, #24]
   2c4e4:	str	lr, [sp, #32]
   2c4e8:	sub	sp, sp, #20
   2c4ec:	cmp	r5, #0
   2c4f0:	beq	2c5c4 <ptr_set_visit@@Base+0x550>
   2c4f4:	mov	r9, r1
   2c4f8:	movw	r1, #15186	; 0x3b52
   2c4fc:	movt	r1, #12137	; 0x2f69
   2c500:	mov	r8, r0
   2c504:	ldr	r6, [r8, #12]
   2c508:	mov	r3, #0
   2c50c:	mov	r0, r9
   2c510:	str	r1, [sp]
   2c514:	add	r1, sp, #8
   2c518:	mov	r7, r2
   2c51c:	str	r1, [sp, #4]
   2c520:	bl	3dcd4 <cmetrohash64_1@@Base>
   2c524:	ldr	sl, [sp, #8]
   2c528:	sub	r6, r6, #1
   2c52c:	and	r3, r6, sl
   2c530:	ldr	fp, [r5, r3, lsl #2]
   2c534:	add	r4, r5, r3, lsl #2
   2c538:	cmp	fp, #0
   2c53c:	beq	2c5c4 <ptr_set_visit@@Base+0x550>
   2c540:	add	sl, sl, #1
   2c544:	b	2c560 <ptr_set_visit@@Base+0x4ec>
   2c548:	and	r3, r6, sl
   2c54c:	add	sl, sl, #1
   2c550:	ldr	fp, [r5, r3, lsl #2]
   2c554:	add	r4, r5, r3, lsl #2
   2c558:	cmp	fp, #0
   2c55c:	beq	2c5c4 <ptr_set_visit@@Base+0x550>
   2c560:	cmp	fp, #2
   2c564:	beq	2c548 <ptr_set_visit@@Base+0x4d4>
   2c568:	ldr	r3, [fp, #4]
   2c56c:	ldr	r2, [r3, #4]
   2c570:	cmp	r7, r2
   2c574:	bne	2c548 <ptr_set_visit@@Base+0x4d4>
   2c578:	mov	r2, r7
   2c57c:	mov	r0, r9
   2c580:	ldr	r1, [r3]
   2c584:	bl	13fc8 <memcmp@plt>
   2c588:	cmp	r0, #0
   2c58c:	bne	2c548 <ptr_set_visit@@Base+0x4d4>
   2c590:	ldr	r3, [r8, #8]
   2c594:	mov	r2, #2
   2c598:	str	r2, [r4]
   2c59c:	sub	r3, r3, #1
   2c5a0:	str	r3, [r8, #8]
   2c5a4:	mov	r0, fp
   2c5a8:	add	sp, sp, #20
   2c5ac:	ldrd	r4, [sp]
   2c5b0:	ldrd	r6, [sp, #8]
   2c5b4:	ldrd	r8, [sp, #16]
   2c5b8:	ldrd	sl, [sp, #24]
   2c5bc:	add	sp, sp, #32
   2c5c0:	pop	{pc}		; (ldr pc, [sp], #4)
   2c5c4:	mov	fp, #0
   2c5c8:	b	2c5a4 <ptr_set_visit@@Base+0x530>
   2c5cc:	strd	r4, [sp, #-28]!	; 0xffffffe4
   2c5d0:	strd	r6, [sp, #8]
   2c5d4:	subs	r7, r0, #0
   2c5d8:	strd	r8, [sp, #16]
   2c5dc:	str	lr, [sp, #24]
   2c5e0:	sub	sp, sp, #20
   2c5e4:	beq	2c698 <ptr_set_visit@@Base+0x624>
   2c5e8:	mov	r6, r3
   2c5ec:	movw	r3, #15186	; 0x3b52
   2c5f0:	movt	r3, #12137	; 0x2f69
   2c5f4:	ldr	r8, [r1]
   2c5f8:	add	r1, sp, #8
   2c5fc:	mov	r9, r2
   2c600:	mov	r2, r6
   2c604:	mov	r0, r9
   2c608:	str	r3, [sp]
   2c60c:	mov	r3, #0
   2c610:	str	r1, [sp, #4]
   2c614:	bl	3dcd4 <cmetrohash64_1@@Base>
   2c618:	ldr	r5, [sp, #8]
   2c61c:	sub	r8, r8, #1
   2c620:	and	r3, r8, r5
   2c624:	ldr	r4, [r7, r3, lsl #2]
   2c628:	cmp	r4, #0
   2c62c:	beq	2c698 <ptr_set_visit@@Base+0x624>
   2c630:	add	r5, r5, #1
   2c634:	b	2c64c <ptr_set_visit@@Base+0x5d8>
   2c638:	and	r1, r8, r5
   2c63c:	add	r5, r5, #1
   2c640:	ldr	r4, [r7, r1, lsl #2]
   2c644:	cmp	r4, #0
   2c648:	beq	2c698 <ptr_set_visit@@Base+0x624>
   2c64c:	cmp	r4, #2
   2c650:	beq	2c638 <ptr_set_visit@@Base+0x5c4>
   2c654:	ldr	r3, [r4, #4]
   2c658:	ldr	r2, [r3, #4]
   2c65c:	cmp	r6, r2
   2c660:	bne	2c638 <ptr_set_visit@@Base+0x5c4>
   2c664:	mov	r2, r6
   2c668:	mov	r0, r9
   2c66c:	ldr	r1, [r3]
   2c670:	bl	13fc8 <memcmp@plt>
   2c674:	cmp	r0, #0
   2c678:	bne	2c638 <ptr_set_visit@@Base+0x5c4>
   2c67c:	mov	r0, r4
   2c680:	add	sp, sp, #20
   2c684:	ldrd	r4, [sp]
   2c688:	ldrd	r6, [sp, #8]
   2c68c:	ldrd	r8, [sp, #16]
   2c690:	add	sp, sp, #24
   2c694:	pop	{pc}		; (ldr pc, [sp], #4)
   2c698:	mov	r4, #0
   2c69c:	b	2c67c <ptr_set_visit@@Base+0x608>

0002c6a0 <fb_symbol_table_clear@@Base>:
   2c6a0:	b	2c0e8 <ptr_set_visit@@Base+0x74>

0002c6a4 <fb_symbol_table_destroy@@Base>:
   2c6a4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2c6a8:	strd	r6, [sp, #8]
   2c6ac:	mov	r7, r0
   2c6b0:	str	r8, [sp, #16]
   2c6b4:	subs	r8, r1, #0
   2c6b8:	str	lr, [sp, #20]
   2c6bc:	beq	2c708 <fb_symbol_table_destroy@@Base+0x64>
   2c6c0:	ldr	r5, [r0]
   2c6c4:	ldr	ip, [r0, #12]
   2c6c8:	cmp	ip, #0
   2c6cc:	beq	2c708 <fb_symbol_table_destroy@@Base+0x64>
   2c6d0:	mov	r6, r2
   2c6d4:	sub	r5, r5, #4
   2c6d8:	mov	r4, #0
   2c6dc:	ldr	r3, [r5, #4]!
   2c6e0:	mov	r0, r6
   2c6e4:	add	r4, r4, #1
   2c6e8:	cmp	r3, #0
   2c6ec:	cmpne	r3, #2
   2c6f0:	mov	r1, r3
   2c6f4:	beq	2c700 <fb_symbol_table_destroy@@Base+0x5c>
   2c6f8:	blx	r8
   2c6fc:	ldr	ip, [r7, #12]
   2c700:	cmp	r4, ip
   2c704:	bcc	2c6dc <fb_symbol_table_destroy@@Base+0x38>
   2c708:	mov	r0, r7
   2c70c:	ldrd	r4, [sp]
   2c710:	ldrd	r6, [sp, #8]
   2c714:	ldr	r8, [sp, #16]
   2c718:	ldr	lr, [sp, #20]
   2c71c:	add	sp, sp, #24
   2c720:	b	2c0e8 <ptr_set_visit@@Base+0x74>

0002c724 <fb_symbol_table_init@@Base>:
   2c724:	cmp	r1, #2
   2c728:	strd	r4, [sp, #-16]!
   2c72c:	mov	r4, r0
   2c730:	str	r6, [sp, #8]
   2c734:	str	lr, [sp, #12]
   2c738:	bls	2c794 <fb_symbol_table_init@@Base+0x70>
   2c73c:	mov	r3, #4
   2c740:	movw	r0, #358	; 0x166
   2c744:	mul	r2, r0, r3
   2c748:	lsl	r5, r3, #1
   2c74c:	cmp	r1, r2, lsr #8
   2c750:	mov	r3, r5
   2c754:	bhi	2c744 <fb_symbol_table_init@@Base+0x20>
   2c758:	mov	r1, #4
   2c75c:	mov	r0, r5
   2c760:	bl	13f74 <calloc@plt>
   2c764:	cmp	r0, #0
   2c768:	str	r0, [r4]
   2c76c:	beq	2c79c <fb_symbol_table_init@@Base+0x78>
   2c770:	mov	r3, #0
   2c774:	mov	r0, r3
   2c778:	str	r3, [r4, #4]
   2c77c:	str	r3, [r4, #8]
   2c780:	str	r5, [r4, #12]
   2c784:	ldrd	r4, [sp]
   2c788:	ldr	r6, [sp, #8]
   2c78c:	add	sp, sp, #12
   2c790:	pop	{pc}		; (ldr pc, [sp], #4)
   2c794:	mov	r5, #4
   2c798:	b	2c758 <fb_symbol_table_init@@Base+0x34>
   2c79c:	mvn	r0, #0
   2c7a0:	b	2c784 <fb_symbol_table_init@@Base+0x60>

0002c7a4 <fb_symbol_table_resize@@Base>:
   2c7a4:	b	2c3b4 <ptr_set_visit@@Base+0x340>

0002c7a8 <fb_symbol_table_insert@@Base>:
   2c7a8:	b	2c124 <ptr_set_visit@@Base+0xb0>

0002c7ac <fb_symbol_table_insert_item@@Base>:
   2c7ac:	ldr	ip, [r1, #4]
   2c7b0:	mov	r3, r1
   2c7b4:	push	{lr}		; (str lr, [sp, #-4]!)
   2c7b8:	sub	sp, sp, #12
   2c7bc:	ldm	ip, {r1, ip}
   2c7c0:	str	r2, [sp]
   2c7c4:	mov	r2, ip
   2c7c8:	bl	2c124 <ptr_set_visit@@Base+0xb0>
   2c7cc:	add	sp, sp, #12
   2c7d0:	pop	{pc}		; (ldr pc, [sp], #4)

0002c7d4 <fb_symbol_table_find@@Base>:
   2c7d4:	mov	ip, r0
   2c7d8:	mov	r3, r2
   2c7dc:	ldr	r0, [ip], #12
   2c7e0:	mov	r2, r1
   2c7e4:	mov	r1, ip
   2c7e8:	b	2c5cc <ptr_set_visit@@Base+0x558>

0002c7ec <fb_symbol_table_find_item@@Base>:
   2c7ec:	mov	r3, r0
   2c7f0:	ldr	ip, [r1, #4]
   2c7f4:	ldr	r0, [r3], #12
   2c7f8:	ldr	r2, [ip]
   2c7fc:	mov	r1, r3
   2c800:	ldr	r3, [ip, #4]
   2c804:	b	2c5cc <ptr_set_visit@@Base+0x558>

0002c808 <fb_symbol_table_remove@@Base>:
   2c808:	b	2c4d0 <ptr_set_visit@@Base+0x45c>

0002c80c <fb_symbol_table_remove_item@@Base>:
   2c80c:	ldr	r3, [r1, #4]
   2c810:	ldm	r3, {r1, r2}
   2c814:	b	2c4d0 <ptr_set_visit@@Base+0x45c>

0002c818 <fb_symbol_table_visit@@Base>:
   2c818:	ldr	ip, [r0, #12]
   2c81c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2c820:	ldr	r5, [r0]
   2c824:	strd	r6, [sp, #8]
   2c828:	str	r8, [sp, #16]
   2c82c:	cmp	ip, #0
   2c830:	str	lr, [sp, #20]
   2c834:	beq	2c878 <fb_symbol_table_visit@@Base+0x60>
   2c838:	mov	r6, r2
   2c83c:	mov	r8, r1
   2c840:	mov	r7, r0
   2c844:	sub	r5, r5, #4
   2c848:	mov	r4, #0
   2c84c:	ldr	r3, [r5, #4]!
   2c850:	mov	r0, r6
   2c854:	add	r4, r4, #1
   2c858:	cmp	r3, #0
   2c85c:	cmpne	r3, #2
   2c860:	mov	r1, r3
   2c864:	beq	2c870 <fb_symbol_table_visit@@Base+0x58>
   2c868:	blx	r8
   2c86c:	ldr	ip, [r7, #12]
   2c870:	cmp	r4, ip
   2c874:	bcc	2c84c <fb_symbol_table_visit@@Base+0x34>
   2c878:	ldrd	r4, [sp]
   2c87c:	ldrd	r6, [sp, #8]
   2c880:	ldr	r8, [sp, #16]
   2c884:	add	sp, sp, #20
   2c888:	pop	{pc}		; (ldr pc, [sp], #4)
   2c88c:	str	r4, [sp, #-8]!
   2c890:	mov	r4, r0
   2c894:	ldr	r0, [r0]
   2c898:	str	lr, [sp, #4]
   2c89c:	cmp	r0, #0
   2c8a0:	beq	2c8a8 <fb_symbol_table_visit@@Base+0x90>
   2c8a4:	bl	13fa4 <free@plt>
   2c8a8:	mov	r3, #0
   2c8ac:	str	r3, [r4]
   2c8b0:	str	r3, [r4, #4]
   2c8b4:	str	r3, [r4, #8]
   2c8b8:	str	r3, [r4, #12]
   2c8bc:	ldr	r4, [sp]
   2c8c0:	add	sp, sp, #4
   2c8c4:	pop	{pc}		; (ldr pc, [sp], #4)
   2c8c8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   2c8cc:	cmp	r3, #0
   2c8d0:	ldr	r4, [pc, #1356]	; 2ce24 <fb_symbol_table_visit@@Base+0x60c>
   2c8d4:	strd	r6, [sp, #8]
   2c8d8:	strd	r8, [sp, #16]
   2c8dc:	strd	sl, [sp, #24]
   2c8e0:	str	lr, [sp, #32]
   2c8e4:	sub	sp, sp, #28
   2c8e8:	add	r4, pc, r4
   2c8ec:	str	r2, [sp, #4]
   2c8f0:	str	r1, [sp, #8]
   2c8f4:	str	r3, [sp, #12]
   2c8f8:	str	r0, [sp, #16]
   2c8fc:	beq	2ce04 <fb_symbol_table_visit@@Base+0x5ec>
   2c900:	ldr	r3, [sp, #12]
   2c904:	cmp	r3, #2
   2c908:	beq	2cdbc <fb_symbol_table_visit@@Base+0x5a4>
   2c90c:	ldr	r3, [sp, #12]
   2c910:	cmp	r3, #1
   2c914:	beq	2cd9c <fb_symbol_table_visit@@Base+0x584>
   2c918:	ldr	r5, [sp, #16]
   2c91c:	mov	r3, #179	; 0xb3
   2c920:	ldr	r1, [r5, #8]
   2c924:	ldr	r2, [r5, #12]
   2c928:	mul	r3, r3, r2
   2c92c:	cmp	r1, r3, lsr #8
   2c930:	bcs	2cc6c <fb_symbol_table_visit@@Base+0x454>
   2c934:	sub	r3, r2, #1
   2c938:	ldr	r5, [sp, #4]
   2c93c:	str	r3, [sp]
   2c940:	ldr	r3, [sp, #16]
   2c944:	cmp	r5, #0
   2c948:	ldr	fp, [r3]
   2c94c:	ble	2cc84 <fb_symbol_table_visit@@Base+0x46c>
   2c950:	movw	r9, #11863	; 0x2e57
   2c954:	movt	r9, #12137	; 0x2f69
   2c958:	ldmib	sp, {r5, r6}
   2c95c:	movw	r8, #15186	; 0x3b52
   2c960:	movt	r8, #12137	; 0x2f69
   2c964:	movw	r7, #31153	; 0x79b1
   2c968:	movt	r7, #40503	; 0x9e37
   2c96c:	mov	r2, #0
   2c970:	movw	sl, #5381	; 0x1505
   2c974:	cmp	r5, #0
   2c978:	ldrb	ip, [r6]
   2c97c:	beq	2ca20 <fb_symbol_table_visit@@Base+0x208>
   2c980:	cmp	ip, #46	; 0x2e
   2c984:	beq	2cd2c <fb_symbol_table_visit@@Base+0x514>
   2c988:	mov	r3, r6
   2c98c:	mov	r0, #0
   2c990:	b	2c9a4 <fb_symbol_table_visit@@Base+0x18c>
   2c994:	ldrb	lr, [r3, #1]!
   2c998:	cmp	lr, #46	; 0x2e
   2c99c:	beq	2cbb0 <fb_symbol_table_visit@@Base+0x398>
   2c9a0:	mov	r0, r1
   2c9a4:	add	r1, r0, #1
   2c9a8:	cmp	r1, r5
   2c9ac:	bne	2c994 <fb_symbol_table_visit@@Base+0x17c>
   2c9b0:	cmp	r0, #0
   2c9b4:	beq	2ca34 <fb_symbol_table_visit@@Base+0x21c>
   2c9b8:	cmp	ip, #0
   2c9bc:	mov	r1, r5
   2c9c0:	add	lr, r6, #1
   2c9c4:	beq	2ca34 <fb_symbol_table_visit@@Base+0x21c>
   2c9c8:	add	r0, r6, r0
   2c9cc:	mov	r3, r9
   2c9d0:	b	2c9e0 <fb_symbol_table_visit@@Base+0x1c8>
   2c9d4:	ldrb	ip, [lr], #1
   2c9d8:	cmp	ip, #0
   2c9dc:	beq	2c9f0 <fb_symbol_table_visit@@Base+0x1d8>
   2c9e0:	add	r3, r3, r3, lsl #5
   2c9e4:	cmp	lr, r0
   2c9e8:	eor	r3, r3, ip
   2c9ec:	bne	2c9d4 <fb_symbol_table_visit@@Base+0x1bc>
   2c9f0:	eor	r3, r3, r2
   2c9f4:	cmp	r5, r1
   2c9f8:	eor	r3, r3, r8
   2c9fc:	mul	r2, r7, r3
   2ca00:	beq	2ca48 <fb_symbol_table_visit@@Base+0x230>
   2ca04:	mvn	r3, r1
   2ca08:	add	r1, r1, #1
   2ca0c:	add	r5, r5, r3
   2ca10:	add	r6, r6, r1
   2ca14:	cmp	r5, #0
   2ca18:	ldrb	ip, [r6]
   2ca1c:	bne	2c980 <fb_symbol_table_visit@@Base+0x168>
   2ca20:	cmp	ip, #0
   2ca24:	mov	r1, r5
   2ca28:	mvn	r0, #0
   2ca2c:	add	lr, r6, #1
   2ca30:	bne	2c9c8 <fb_symbol_table_visit@@Base+0x1b0>
   2ca34:	eor	r4, r2, #5376	; 0x1500
   2ca38:	movw	r2, #31153	; 0x79b1
   2ca3c:	movt	r2, #40503	; 0x9e37
   2ca40:	eor	r4, r4, #5
   2ca44:	mul	r2, r2, r4
   2ca48:	ldr	r3, [sp]
   2ca4c:	and	r5, r3, r2
   2ca50:	add	r5, fp, r5, lsl #2
   2ca54:	ldr	r3, [sp, #64]	; 0x40
   2ca58:	ldr	r7, [r5]
   2ca5c:	sub	r3, r3, #2
   2ca60:	cmp	r3, #1
   2ca64:	bls	2cd3c <fb_symbol_table_visit@@Base+0x524>
   2ca68:	cmp	r7, #0
   2ca6c:	moveq	r8, r5
   2ca70:	beq	2cb74 <fb_symbol_table_visit@@Base+0x35c>
   2ca74:	mov	r8, #0
   2ca78:	add	r4, r2, #1
   2ca7c:	mov	sl, r8
   2ca80:	cmp	r7, #2
   2ca84:	beq	2cbd0 <fb_symbol_table_visit@@Base+0x3b8>
   2ca88:	ldr	r0, [sp, #4]
   2ca8c:	ldr	r6, [r7]
   2ca90:	cmp	r0, #0
   2ca94:	ble	2cbdc <fb_symbol_table_visit@@Base+0x3c4>
   2ca98:	cmp	r6, #0
   2ca9c:	beq	2cb4c <fb_symbol_table_visit@@Base+0x334>
   2caa0:	ldr	r3, [r6, #4]
   2caa4:	ldr	r2, [r3]
   2caa8:	ldr	r1, [r3, #4]
   2caac:	cmp	r0, r1
   2cab0:	bcc	2cb4c <fb_symbol_table_visit@@Base+0x334>
   2cab4:	ldr	ip, [sp, #8]
   2cab8:	str	r5, [sp, #20]
   2cabc:	mov	r5, r0
   2cac0:	cmp	r1, #0
   2cac4:	beq	2cd24 <fb_symbol_table_visit@@Base+0x50c>
   2cac8:	ldrb	r0, [ip]
   2cacc:	ldrb	r3, [r2]
   2cad0:	cmp	r0, r3
   2cad4:	bne	2cb4c <fb_symbol_table_visit@@Base+0x334>
   2cad8:	sub	r0, r1, #1
   2cadc:	mov	r3, ip
   2cae0:	add	r0, r0, ip
   2cae4:	rsb	r9, ip, #1
   2cae8:	b	2cafc <fb_symbol_table_visit@@Base+0x2e4>
   2caec:	ldrb	r8, [r2, #1]!
   2caf0:	ldrb	lr, [r3, #1]!
   2caf4:	cmp	r8, lr
   2caf8:	bne	2cb4c <fb_symbol_table_visit@@Base+0x334>
   2cafc:	cmp	r0, r3
   2cb00:	add	lr, r9, r3
   2cb04:	bne	2caec <fb_symbol_table_visit@@Base+0x2d4>
   2cb08:	cmp	r1, r5
   2cb0c:	beq	2cc50 <fb_symbol_table_visit@@Base+0x438>
   2cb10:	ldrb	r3, [ip, lr]
   2cb14:	cmp	r3, #46	; 0x2e
   2cb18:	bne	2cb4c <fb_symbol_table_visit@@Base+0x334>
   2cb1c:	ldr	r6, [r6]
   2cb20:	mvn	r3, r1
   2cb24:	add	r1, r1, #1
   2cb28:	add	r5, r5, r3
   2cb2c:	add	ip, ip, r1
   2cb30:	cmp	r6, #0
   2cb34:	beq	2cb4c <fb_symbol_table_visit@@Base+0x334>
   2cb38:	ldr	r3, [r6, #4]
   2cb3c:	ldr	r2, [r3]
   2cb40:	ldr	r1, [r3, #4]
   2cb44:	cmp	r1, r5
   2cb48:	bls	2cac0 <fb_symbol_table_visit@@Base+0x2a8>
   2cb4c:	ldr	r3, [sp]
   2cb50:	and	r5, r3, r4
   2cb54:	add	r4, r4, #1
   2cb58:	ldr	r7, [fp, r5, lsl #2]
   2cb5c:	add	r5, fp, r5, lsl #2
   2cb60:	cmp	r7, #0
   2cb64:	bne	2ca80 <fb_symbol_table_visit@@Base+0x268>
   2cb68:	cmp	sl, #0
   2cb6c:	mov	r8, sl
   2cb70:	moveq	r8, r5
   2cb74:	ldr	r2, [sp, #16]
   2cb78:	mov	r7, #0
   2cb7c:	ldr	r3, [r2, #8]
   2cb80:	add	r3, r3, #1
   2cb84:	str	r3, [r2, #8]
   2cb88:	ldr	r3, [sp, #12]
   2cb8c:	str	r3, [r8]
   2cb90:	mov	r0, r7
   2cb94:	add	sp, sp, #28
   2cb98:	ldrd	r4, [sp]
   2cb9c:	ldrd	r6, [sp, #8]
   2cba0:	ldrd	r8, [sp, #16]
   2cba4:	ldrd	sl, [sp, #24]
   2cba8:	add	sp, sp, #32
   2cbac:	pop	{pc}		; (ldr pc, [sp], #4)
   2cbb0:	cmp	r0, #0
   2cbb4:	beq	2cbc4 <fb_symbol_table_visit@@Base+0x3ac>
   2cbb8:	cmp	ip, #0
   2cbbc:	add	lr, r6, #1
   2cbc0:	bne	2c9c8 <fb_symbol_table_visit@@Base+0x1b0>
   2cbc4:	eor	r3, r2, sl
   2cbc8:	mul	r2, r7, r3
   2cbcc:	b	2ca04 <fb_symbol_table_visit@@Base+0x1ec>
   2cbd0:	cmp	sl, #0
   2cbd4:	moveq	sl, r5
   2cbd8:	b	2cb4c <fb_symbol_table_visit@@Base+0x334>
   2cbdc:	ldr	r9, [sp, #4]
   2cbe0:	ldr	r8, [sp, #8]
   2cbe4:	b	2cc24 <fb_symbol_table_visit@@Base+0x40c>
   2cbe8:	ldr	r3, [r6, #4]
   2cbec:	ldr	r1, [r8, #4]
   2cbf0:	ldr	r2, [r3, #4]
   2cbf4:	ldr	r0, [r1, #4]
   2cbf8:	cmp	r2, r0
   2cbfc:	bne	2cb4c <fb_symbol_table_visit@@Base+0x334>
   2cc00:	ldr	r1, [r1]
   2cc04:	ldr	r0, [r3]
   2cc08:	bl	14100 <strncmp@plt>
   2cc0c:	cmp	r0, #0
   2cc10:	bne	2cb4c <fb_symbol_table_visit@@Base+0x334>
   2cc14:	adds	r9, r9, #1
   2cc18:	ldr	r6, [r6]
   2cc1c:	ldr	r8, [r8]
   2cc20:	beq	2cc58 <fb_symbol_table_visit@@Base+0x440>
   2cc24:	cmp	r6, #0
   2cc28:	cmpne	r8, #0
   2cc2c:	bne	2cbe8 <fb_symbol_table_visit@@Base+0x3d0>
   2cc30:	orrs	r3, r6, r8
   2cc34:	bne	2cb4c <fb_symbol_table_visit@@Base+0x334>
   2cc38:	ldr	r3, [sp, #64]	; 0x40
   2cc3c:	cmp	r3, #0
   2cc40:	bne	2cb90 <fb_symbol_table_visit@@Base+0x378>
   2cc44:	ldr	r3, [sp, #12]
   2cc48:	str	r3, [r5]
   2cc4c:	b	2cb90 <fb_symbol_table_visit@@Base+0x378>
   2cc50:	ldr	r6, [r6]
   2cc54:	ldr	r5, [sp, #20]
   2cc58:	clz	r6, r6
   2cc5c:	lsr	r6, r6, #5
   2cc60:	cmp	r6, #0
   2cc64:	beq	2cb4c <fb_symbol_table_visit@@Base+0x334>
   2cc68:	b	2cc38 <fb_symbol_table_visit@@Base+0x420>
   2cc6c:	lsl	r1, r1, #1
   2cc70:	bl	2ce58 <fb_symbol_table_visit@@Base+0x640>
   2cc74:	cmp	r0, #0
   2cc78:	bne	2cddc <fb_symbol_table_visit@@Base+0x5c4>
   2cc7c:	ldr	r2, [r5, #12]
   2cc80:	b	2c934 <fb_symbol_table_visit@@Base+0x11c>
   2cc84:	ldr	lr, [sp, #8]
   2cc88:	cmp	lr, #0
   2cc8c:	beq	2cd90 <fb_symbol_table_visit@@Base+0x578>
   2cc90:	movw	r8, #11863	; 0x2e57
   2cc94:	movt	r8, #12137	; 0x2f69
   2cc98:	movw	r7, #15186	; 0x3b52
   2cc9c:	movt	r7, #12137	; 0x2f69
   2cca0:	movw	r6, #31153	; 0x79b1
   2cca4:	movt	r6, #40503	; 0x9e37
   2cca8:	mov	r2, #0
   2ccac:	ldr	r3, [lr, #4]
   2ccb0:	ldr	ip, [r3]
   2ccb4:	ldr	r1, [r3, #4]
   2ccb8:	subs	r3, r1, #1
   2ccbc:	beq	2cd1c <fb_symbol_table_visit@@Base+0x504>
   2ccc0:	mov	r1, ip
   2ccc4:	ldrb	r0, [r1], #1
   2ccc8:	cmp	r0, #0
   2cccc:	beq	2cd1c <fb_symbol_table_visit@@Base+0x504>
   2ccd0:	add	ip, ip, r3
   2ccd4:	mov	r3, r8
   2ccd8:	b	2cce8 <fb_symbol_table_visit@@Base+0x4d0>
   2ccdc:	ldrb	r0, [r1], #1
   2cce0:	cmp	r0, #0
   2cce4:	beq	2ccf8 <fb_symbol_table_visit@@Base+0x4e0>
   2cce8:	add	r3, r3, r3, lsl #5
   2ccec:	cmp	r1, ip
   2ccf0:	eor	r3, r3, r0
   2ccf4:	bne	2ccdc <fb_symbol_table_visit@@Base+0x4c4>
   2ccf8:	eor	r3, r3, r2
   2ccfc:	adds	r5, r5, #1
   2cd00:	ldr	lr, [lr]
   2cd04:	eor	r3, r3, r7
   2cd08:	mul	r2, r6, r3
   2cd0c:	beq	2ca48 <fb_symbol_table_visit@@Base+0x230>
   2cd10:	cmp	lr, #0
   2cd14:	bne	2ccac <fb_symbol_table_visit@@Base+0x494>
   2cd18:	b	2ca48 <fb_symbol_table_visit@@Base+0x230>
   2cd1c:	mov	r3, r8
   2cd20:	b	2ccf8 <fb_symbol_table_visit@@Base+0x4e0>
   2cd24:	mov	lr, r1
   2cd28:	b	2cb08 <fb_symbol_table_visit@@Base+0x2f0>
   2cd2c:	add	lr, r6, #1
   2cd30:	mov	r1, #0
   2cd34:	mvn	r0, #0
   2cd38:	b	2c9c8 <fb_symbol_table_visit@@Base+0x1b0>
   2cd3c:	ldr	r1, [sp, #16]
   2cd40:	cmp	r7, #0
   2cd44:	cmpne	r7, #2
   2cd48:	ldr	r3, [r1, #8]
   2cd4c:	add	r3, r3, #1
   2cd50:	str	r3, [r1, #8]
   2cd54:	beq	2cd80 <fb_symbol_table_visit@@Base+0x568>
   2cd58:	ldr	r0, [sp]
   2cd5c:	add	r2, r2, #1
   2cd60:	and	r3, r0, r2
   2cd64:	add	r2, r2, #1
   2cd68:	ldr	r1, [fp, r3, lsl #2]
   2cd6c:	add	r3, fp, r3, lsl #2
   2cd70:	cmp	r1, #0
   2cd74:	cmpne	r1, #2
   2cd78:	bne	2cd60 <fb_symbol_table_visit@@Base+0x548>
   2cd7c:	mov	r5, r3
   2cd80:	ldr	r3, [sp, #12]
   2cd84:	mov	r7, #0
   2cd88:	str	r3, [r5]
   2cd8c:	b	2cb90 <fb_symbol_table_visit@@Base+0x378>
   2cd90:	mov	r5, fp
   2cd94:	ldr	r2, [sp, #8]
   2cd98:	b	2ca54 <fb_symbol_table_visit@@Base+0x23c>
   2cd9c:	ldr	r3, [pc, #132]	; 2ce28 <fb_symbol_table_visit@@Base+0x610>
   2cda0:	mov	r2, #116	; 0x74
   2cda4:	ldr	r1, [pc, #128]	; 2ce2c <fb_symbol_table_visit@@Base+0x614>
   2cda8:	ldr	r0, [pc, #128]	; 2ce30 <fb_symbol_table_visit@@Base+0x618>
   2cdac:	add	r3, pc, r3
   2cdb0:	add	r1, pc, r1
   2cdb4:	add	r0, pc, r0
   2cdb8:	bl	14118 <__assert_fail@plt>
   2cdbc:	ldr	r3, [pc, #112]	; 2ce34 <fb_symbol_table_visit@@Base+0x61c>
   2cdc0:	mov	r2, #115	; 0x73
   2cdc4:	ldr	r1, [pc, #108]	; 2ce38 <fb_symbol_table_visit@@Base+0x620>
   2cdc8:	ldr	r0, [pc, #108]	; 2ce3c <fb_symbol_table_visit@@Base+0x624>
   2cdcc:	add	r3, pc, r3
   2cdd0:	add	r1, pc, r1
   2cdd4:	add	r0, pc, r0
   2cdd8:	bl	14118 <__assert_fail@plt>
   2cddc:	ldr	r3, [pc, #92]	; 2ce40 <fb_symbol_table_visit@@Base+0x628>
   2cde0:	ldr	r2, [pc, #92]	; 2ce44 <fb_symbol_table_visit@@Base+0x62c>
   2cde4:	ldr	r1, [pc, #92]	; 2ce48 <fb_symbol_table_visit@@Base+0x630>
   2cde8:	ldr	r3, [r4, r3]
   2cdec:	add	r2, pc, r2
   2cdf0:	add	r1, pc, r1
   2cdf4:	ldr	r0, [r3]
   2cdf8:	bl	14064 <fprintf@plt>
   2cdfc:	mov	r0, #1
   2ce00:	bl	14040 <exit@plt>
   2ce04:	ldr	r3, [pc, #64]	; 2ce4c <fb_symbol_table_visit@@Base+0x634>
   2ce08:	mov	r2, #114	; 0x72
   2ce0c:	ldr	r1, [pc, #60]	; 2ce50 <fb_symbol_table_visit@@Base+0x638>
   2ce10:	ldr	r0, [pc, #60]	; 2ce54 <fb_symbol_table_visit@@Base+0x63c>
   2ce14:	add	r3, pc, r3
   2ce18:	add	r1, pc, r1
   2ce1c:	add	r0, pc, r0
   2ce20:	bl	14118 <__assert_fail@plt>
   2ce24:	andeq	r0, r4, r0, lsl r7
   2ce28:	strdeq	fp, [r2], -r8
   2ce2c:	andeq	fp, r2, r8, asr #21
   2ce30:	andeq	fp, r2, ip, asr fp
   2ce34:	ldrdeq	fp, [r2], -r8
   2ce38:	andeq	fp, r2, r8, lsr #21
   2ce3c:	andeq	fp, r2, r4, lsr #22
   2ce40:	andeq	r0, r0, r0, lsr #1
   2ce44:	andeq	fp, r2, ip, lsr fp
   2ce48:	andeq	fp, r2, ip, ror #22
   2ce4c:	muleq	r2, r0, fp
   2ce50:	andeq	fp, r2, r0, ror #20
   2ce54:	andeq	fp, r2, r4, asr #21
   2ce58:	ldr	r3, [r0, #8]
   2ce5c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2ce60:	strd	r6, [sp, #8]
   2ce64:	mov	r7, r0
   2ce68:	str	r8, [sp, #16]
   2ce6c:	str	lr, [sp, #20]
   2ce70:	sub	sp, sp, #24
   2ce74:	cmp	r1, r3
   2ce78:	ldr	r6, [r0]
   2ce7c:	movcc	r1, r3
   2ce80:	cmp	r1, #2
   2ce84:	bls	2cf64 <fb_symbol_table_visit@@Base+0x74c>
   2ce88:	mov	r3, #4
   2ce8c:	movw	r0, #358	; 0x166
   2ce90:	mul	r2, r0, r3
   2ce94:	lsl	r5, r3, #1
   2ce98:	cmp	r1, r2, lsr #8
   2ce9c:	mov	r3, r5
   2cea0:	bhi	2ce90 <fb_symbol_table_visit@@Base+0x678>
   2cea4:	mov	r1, #4
   2cea8:	mov	r0, r5
   2ceac:	bl	13f74 <calloc@plt>
   2ceb0:	cmp	r0, #0
   2ceb4:	str	r0, [sp, #8]
   2ceb8:	beq	2cf6c <fb_symbol_table_visit@@Base+0x754>
   2cebc:	ldr	r2, [r7, #12]
   2cec0:	mov	r4, #0
   2cec4:	str	r4, [sp, #12]
   2cec8:	strd	r4, [sp, #16]
   2cecc:	cmp	r2, r4
   2ced0:	addeq	r6, sp, #8
   2ced4:	beq	2cf24 <fb_symbol_table_visit@@Base+0x70c>
   2ced8:	sub	r5, r6, #4
   2cedc:	mov	r8, #3
   2cee0:	add	r6, sp, #8
   2cee4:	b	2cef0 <fb_symbol_table_visit@@Base+0x6d8>
   2cee8:	cmp	r2, r4
   2ceec:	bls	2cf24 <fb_symbol_table_visit@@Base+0x70c>
   2cef0:	ldr	r3, [r5, #4]!
   2cef4:	add	r4, r4, #1
   2cef8:	cmp	r3, #0
   2cefc:	cmpne	r3, #2
   2cf00:	beq	2cee8 <fb_symbol_table_visit@@Base+0x6d0>
   2cf04:	mov	r2, #0
   2cf08:	mov	r0, r6
   2cf0c:	ldr	r1, [r3]
   2cf10:	str	r8, [sp]
   2cf14:	bl	2c8c8 <fb_symbol_table_visit@@Base+0xb0>
   2cf18:	ldr	r2, [r7, #12]
   2cf1c:	cmp	r2, r4
   2cf20:	bhi	2cef0 <fb_symbol_table_visit@@Base+0x6d8>
   2cf24:	mov	r0, r7
   2cf28:	bl	2c88c <fb_symbol_table_visit@@Base+0x74>
   2cf2c:	ldr	r3, [sp, #8]
   2cf30:	mov	r0, #0
   2cf34:	ldmib	r6, {r1, r2}
   2cf38:	str	r3, [r7]
   2cf3c:	ldr	r3, [r6, #12]
   2cf40:	str	r1, [r7, #4]
   2cf44:	str	r2, [r7, #8]
   2cf48:	str	r3, [r7, #12]
   2cf4c:	add	sp, sp, #24
   2cf50:	ldrd	r4, [sp]
   2cf54:	ldrd	r6, [sp, #8]
   2cf58:	ldr	r8, [sp, #16]
   2cf5c:	add	sp, sp, #20
   2cf60:	pop	{pc}		; (ldr pc, [sp], #4)
   2cf64:	mov	r5, #4
   2cf68:	b	2cea4 <fb_symbol_table_visit@@Base+0x68c>
   2cf6c:	mvn	r0, #0
   2cf70:	b	2cf4c <fb_symbol_table_visit@@Base+0x734>
   2cf74:	cmp	r0, #0
   2cf78:	strd	r4, [sp, #-36]!	; 0xffffffdc
   2cf7c:	strd	r6, [sp, #8]
   2cf80:	strd	r8, [sp, #16]
   2cf84:	strd	sl, [sp, #24]
   2cf88:	str	lr, [sp, #32]
   2cf8c:	sub	sp, sp, #20
   2cf90:	str	r0, [sp, #12]
   2cf94:	beq	2d328 <fb_symbol_table_visit@@Base+0xb10>
   2cf98:	ldr	r1, [r1]
   2cf9c:	cmp	r3, #0
   2cfa0:	sub	r1, r1, #1
   2cfa4:	str	r1, [sp, #4]
   2cfa8:	ble	2d1cc <fb_symbol_table_visit@@Base+0x9b4>
   2cfac:	mov	r8, r3
   2cfb0:	mov	r9, r2
   2cfb4:	cmp	r8, #0
   2cfb8:	movw	r7, #11863	; 0x2e57
   2cfbc:	movt	r7, #12137	; 0x2f69
   2cfc0:	movw	fp, #15186	; 0x3b52
   2cfc4:	movt	fp, #12137	; 0x2f69
   2cfc8:	movw	sl, #31153	; 0x79b1
   2cfcc:	movt	sl, #40503	; 0x9e37
   2cfd0:	mov	r0, #0
   2cfd4:	ldrb	r4, [r9]
   2cfd8:	beq	2d07c <fb_symbol_table_visit@@Base+0x864>
   2cfdc:	cmp	r4, #46	; 0x2e
   2cfe0:	beq	2d318 <fb_symbol_table_visit@@Base+0xb00>
   2cfe4:	mov	r1, r9
   2cfe8:	mov	lr, #0
   2cfec:	b	2d000 <fb_symbol_table_visit@@Base+0x7e8>
   2cff0:	ldrb	r5, [r1, #1]!
   2cff4:	cmp	r5, #46	; 0x2e
   2cff8:	beq	2d2cc <fb_symbol_table_visit@@Base+0xab4>
   2cffc:	mov	lr, ip
   2d000:	add	ip, lr, #1
   2d004:	cmp	ip, r8
   2d008:	bne	2cff0 <fb_symbol_table_visit@@Base+0x7d8>
   2d00c:	cmp	lr, #0
   2d010:	beq	2d090 <fb_symbol_table_visit@@Base+0x878>
   2d014:	cmp	r4, #0
   2d018:	mov	ip, r8
   2d01c:	add	r5, r9, #1
   2d020:	beq	2d090 <fb_symbol_table_visit@@Base+0x878>
   2d024:	add	lr, r9, lr
   2d028:	mov	r1, r7
   2d02c:	b	2d03c <fb_symbol_table_visit@@Base+0x824>
   2d030:	ldrb	r4, [r5], #1
   2d034:	cmp	r4, #0
   2d038:	beq	2d04c <fb_symbol_table_visit@@Base+0x834>
   2d03c:	add	r1, r1, r1, lsl #5
   2d040:	cmp	r5, lr
   2d044:	eor	r1, r1, r4
   2d048:	bne	2d030 <fb_symbol_table_visit@@Base+0x818>
   2d04c:	eor	r1, r1, r0
   2d050:	cmp	r8, ip
   2d054:	eor	r1, r1, fp
   2d058:	mul	r0, sl, r1
   2d05c:	beq	2d0a4 <fb_symbol_table_visit@@Base+0x88c>
   2d060:	mvn	r1, ip
   2d064:	add	ip, ip, #1
   2d068:	add	r8, r8, r1
   2d06c:	add	r9, r9, ip
   2d070:	cmp	r8, #0
   2d074:	ldrb	r4, [r9]
   2d078:	bne	2cfdc <fb_symbol_table_visit@@Base+0x7c4>
   2d07c:	cmp	r4, #0
   2d080:	mov	ip, r8
   2d084:	mvn	lr, #0
   2d088:	add	r5, r9, #1
   2d08c:	bne	2d024 <fb_symbol_table_visit@@Base+0x80c>
   2d090:	eor	r4, r0, #5376	; 0x1500
   2d094:	movw	r0, #31153	; 0x79b1
   2d098:	movt	r0, #40503	; 0x9e37
   2d09c:	eor	r4, r4, #5
   2d0a0:	mul	r0, r0, r4
   2d0a4:	ldr	r1, [sp, #4]
   2d0a8:	ldr	ip, [sp, #12]
   2d0ac:	and	r1, r1, r0
   2d0b0:	add	r1, ip, r1, lsl #2
   2d0b4:	ldr	r6, [r1]
   2d0b8:	cmp	r6, #0
   2d0bc:	beq	2d1ac <fb_symbol_table_visit@@Base+0x994>
   2d0c0:	ldr	r8, [sp, #12]
   2d0c4:	mov	r7, r3
   2d0c8:	add	r4, r0, #1
   2d0cc:	str	r2, [sp, #8]
   2d0d0:	cmp	r6, #2
   2d0d4:	beq	2d194 <fb_symbol_table_visit@@Base+0x97c>
   2d0d8:	cmp	r7, #0
   2d0dc:	ldr	r5, [r6]
   2d0e0:	ble	2d268 <fb_symbol_table_visit@@Base+0xa50>
   2d0e4:	cmp	r5, #0
   2d0e8:	beq	2d194 <fb_symbol_table_visit@@Base+0x97c>
   2d0ec:	ldr	r3, [r5, #4]
   2d0f0:	ldr	r2, [r3]
   2d0f4:	ldr	r1, [r3, #4]
   2d0f8:	cmp	r7, r1
   2d0fc:	bcc	2d194 <fb_symbol_table_visit@@Base+0x97c>
   2d100:	ldr	ip, [sp, #8]
   2d104:	mov	fp, r7
   2d108:	cmp	r1, #0
   2d10c:	beq	2d310 <fb_symbol_table_visit@@Base+0xaf8>
   2d110:	ldrb	r0, [ip]
   2d114:	ldrb	r3, [r2]
   2d118:	cmp	r0, r3
   2d11c:	bne	2d194 <fb_symbol_table_visit@@Base+0x97c>
   2d120:	sub	r0, r1, #1
   2d124:	mov	r3, ip
   2d128:	add	r0, r0, ip
   2d12c:	rsb	sl, ip, #1
   2d130:	b	2d144 <fb_symbol_table_visit@@Base+0x92c>
   2d134:	ldrb	r9, [r2, #1]!
   2d138:	ldrb	lr, [r3, #1]!
   2d13c:	cmp	r9, lr
   2d140:	bne	2d194 <fb_symbol_table_visit@@Base+0x97c>
   2d144:	cmp	r0, r3
   2d148:	add	lr, sl, r3
   2d14c:	bne	2d134 <fb_symbol_table_visit@@Base+0x91c>
   2d150:	cmp	r1, fp
   2d154:	beq	2d2f0 <fb_symbol_table_visit@@Base+0xad8>
   2d158:	ldrb	r3, [ip, lr]
   2d15c:	cmp	r3, #46	; 0x2e
   2d160:	bne	2d194 <fb_symbol_table_visit@@Base+0x97c>
   2d164:	ldr	r5, [r5]
   2d168:	mvn	r3, r1
   2d16c:	add	r1, r1, #1
   2d170:	add	fp, fp, r3
   2d174:	add	ip, ip, r1
   2d178:	cmp	r5, #0
   2d17c:	beq	2d194 <fb_symbol_table_visit@@Base+0x97c>
   2d180:	ldr	r3, [r5, #4]
   2d184:	ldr	r2, [r3]
   2d188:	ldr	r1, [r3, #4]
   2d18c:	cmp	r1, fp
   2d190:	bls	2d108 <fb_symbol_table_visit@@Base+0x8f0>
   2d194:	ldr	r3, [sp, #4]
   2d198:	and	r3, r3, r4
   2d19c:	add	r4, r4, #1
   2d1a0:	ldr	r6, [r8, r3, lsl #2]
   2d1a4:	cmp	r6, #0
   2d1a8:	bne	2d0d0 <fb_symbol_table_visit@@Base+0x8b8>
   2d1ac:	mov	r0, r6
   2d1b0:	add	sp, sp, #20
   2d1b4:	ldrd	r4, [sp]
   2d1b8:	ldrd	r6, [sp, #8]
   2d1bc:	ldrd	r8, [sp, #16]
   2d1c0:	ldrd	sl, [sp, #24]
   2d1c4:	add	sp, sp, #32
   2d1c8:	pop	{pc}		; (ldr pc, [sp], #4)
   2d1cc:	cmp	r2, #0
   2d1d0:	beq	2d330 <fb_symbol_table_visit@@Base+0xb18>
   2d1d4:	movw	sl, #11863	; 0x2e57
   2d1d8:	movt	sl, #12137	; 0x2f69
   2d1dc:	movw	r9, #15186	; 0x3b52
   2d1e0:	movt	r9, #12137	; 0x2f69
   2d1e4:	movw	r8, #31153	; 0x79b1
   2d1e8:	movt	r8, #40503	; 0x9e37
   2d1ec:	mov	r7, r3
   2d1f0:	mov	r6, r2
   2d1f4:	mov	r0, #0
   2d1f8:	ldr	ip, [r6, #4]
   2d1fc:	ldr	r4, [ip]
   2d200:	ldr	r1, [ip, #4]
   2d204:	subs	r1, r1, #1
   2d208:	beq	2d308 <fb_symbol_table_visit@@Base+0xaf0>
   2d20c:	mov	ip, r4
   2d210:	ldrb	lr, [ip], #1
   2d214:	cmp	lr, #0
   2d218:	beq	2d308 <fb_symbol_table_visit@@Base+0xaf0>
   2d21c:	add	r4, r4, r1
   2d220:	mov	r1, sl
   2d224:	b	2d234 <fb_symbol_table_visit@@Base+0xa1c>
   2d228:	ldrb	lr, [ip], #1
   2d22c:	cmp	lr, #0
   2d230:	beq	2d244 <fb_symbol_table_visit@@Base+0xa2c>
   2d234:	add	r1, r1, r1, lsl #5
   2d238:	cmp	ip, r4
   2d23c:	eor	r1, r1, lr
   2d240:	bne	2d228 <fb_symbol_table_visit@@Base+0xa10>
   2d244:	eor	r1, r1, r0
   2d248:	adds	r7, r7, #1
   2d24c:	ldr	r6, [r6]
   2d250:	eor	r1, r1, r9
   2d254:	mul	r0, r8, r1
   2d258:	beq	2d0a4 <fb_symbol_table_visit@@Base+0x88c>
   2d25c:	cmp	r6, #0
   2d260:	bne	2d1f8 <fb_symbol_table_visit@@Base+0x9e0>
   2d264:	b	2d0a4 <fb_symbol_table_visit@@Base+0x88c>
   2d268:	mov	sl, r7
   2d26c:	ldr	r9, [sp, #8]
   2d270:	b	2d2b4 <fb_symbol_table_visit@@Base+0xa9c>
   2d274:	ldr	r3, [r5, #4]
   2d278:	ldr	r1, [r9, #4]
   2d27c:	ldr	r0, [r3, #4]
   2d280:	ldr	ip, [r1, #4]
   2d284:	mov	r2, r0
   2d288:	cmp	r0, ip
   2d28c:	bne	2d194 <fb_symbol_table_visit@@Base+0x97c>
   2d290:	ldr	r1, [r1]
   2d294:	ldr	r0, [r3]
   2d298:	bl	14100 <strncmp@plt>
   2d29c:	cmp	r0, #0
   2d2a0:	bne	2d194 <fb_symbol_table_visit@@Base+0x97c>
   2d2a4:	adds	sl, sl, #1
   2d2a8:	ldr	r5, [r5]
   2d2ac:	ldr	r9, [r9]
   2d2b0:	beq	2d2f4 <fb_symbol_table_visit@@Base+0xadc>
   2d2b4:	cmp	r5, #0
   2d2b8:	cmpne	r9, #0
   2d2bc:	bne	2d274 <fb_symbol_table_visit@@Base+0xa5c>
   2d2c0:	orrs	r3, r5, r9
   2d2c4:	bne	2d194 <fb_symbol_table_visit@@Base+0x97c>
   2d2c8:	b	2d1ac <fb_symbol_table_visit@@Base+0x994>
   2d2cc:	cmp	lr, #0
   2d2d0:	beq	2d2e0 <fb_symbol_table_visit@@Base+0xac8>
   2d2d4:	cmp	r4, #0
   2d2d8:	add	r5, r9, #1
   2d2dc:	bne	2d024 <fb_symbol_table_visit@@Base+0x80c>
   2d2e0:	eor	r1, r0, #5376	; 0x1500
   2d2e4:	eor	r1, r1, #5
   2d2e8:	mul	r0, sl, r1
   2d2ec:	b	2d060 <fb_symbol_table_visit@@Base+0x848>
   2d2f0:	ldr	r5, [r5]
   2d2f4:	clz	r5, r5
   2d2f8:	lsr	r5, r5, #5
   2d2fc:	cmp	r5, #0
   2d300:	beq	2d194 <fb_symbol_table_visit@@Base+0x97c>
   2d304:	b	2d1ac <fb_symbol_table_visit@@Base+0x994>
   2d308:	mov	r1, sl
   2d30c:	b	2d244 <fb_symbol_table_visit@@Base+0xa2c>
   2d310:	mov	lr, r1
   2d314:	b	2d150 <fb_symbol_table_visit@@Base+0x938>
   2d318:	add	r5, r9, #1
   2d31c:	mov	ip, #0
   2d320:	mvn	lr, #0
   2d324:	b	2d024 <fb_symbol_table_visit@@Base+0x80c>
   2d328:	ldr	r6, [sp, #12]
   2d32c:	b	2d1ac <fb_symbol_table_visit@@Base+0x994>
   2d330:	mov	r0, r2
   2d334:	ldr	r1, [sp, #12]
   2d338:	b	2d0b4 <fb_symbol_table_visit@@Base+0x89c>
   2d33c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   2d340:	strd	r6, [sp, #8]
   2d344:	strd	sl, [sp, #24]
   2d348:	ldr	fp, [r0]
   2d34c:	strd	r8, [sp, #16]
   2d350:	str	lr, [sp, #32]
   2d354:	sub	sp, sp, #20
   2d358:	str	r1, [sp, #8]
   2d35c:	cmp	fp, #0
   2d360:	str	r2, [sp, #12]
   2d364:	moveq	r7, fp
   2d368:	beq	2d58c <fb_symbol_table_visit@@Base+0xd74>
   2d36c:	ldr	r3, [r0, #12]
   2d370:	cmp	r2, #0
   2d374:	mov	r6, r2
   2d378:	sub	r3, r3, #1
   2d37c:	str	r3, [sp, #4]
   2d380:	ble	2d5ac <fb_symbol_table_visit@@Base+0xd94>
   2d384:	ldr	r7, [sp, #8]
   2d388:	movw	sl, #11863	; 0x2e57
   2d38c:	movt	sl, #12137	; 0x2f69
   2d390:	movw	r9, #15186	; 0x3b52
   2d394:	movt	r9, #12137	; 0x2f69
   2d398:	ldr	r6, [sp, #12]
   2d39c:	movw	r8, #31153	; 0x79b1
   2d3a0:	movt	r8, #40503	; 0x9e37
   2d3a4:	mov	r2, #0
   2d3a8:	ldrb	lr, [r7]
   2d3ac:	cmp	r6, #0
   2d3b0:	beq	2d454 <fb_symbol_table_visit@@Base+0xc3c>
   2d3b4:	cmp	lr, #46	; 0x2e
   2d3b8:	beq	2d710 <fb_symbol_table_visit@@Base+0xef8>
   2d3bc:	mov	r3, r7
   2d3c0:	mov	ip, #0
   2d3c4:	b	2d3d8 <fb_symbol_table_visit@@Base+0xbc0>
   2d3c8:	ldrb	r4, [r3, #1]!
   2d3cc:	cmp	r4, #46	; 0x2e
   2d3d0:	beq	2d6c4 <fb_symbol_table_visit@@Base+0xeac>
   2d3d4:	mov	ip, r1
   2d3d8:	add	r1, ip, #1
   2d3dc:	cmp	r1, r6
   2d3e0:	bne	2d3c8 <fb_symbol_table_visit@@Base+0xbb0>
   2d3e4:	cmp	ip, #0
   2d3e8:	beq	2d468 <fb_symbol_table_visit@@Base+0xc50>
   2d3ec:	cmp	lr, #0
   2d3f0:	mov	r1, r6
   2d3f4:	add	r4, r7, #1
   2d3f8:	beq	2d468 <fb_symbol_table_visit@@Base+0xc50>
   2d3fc:	add	ip, r7, ip
   2d400:	mov	r3, sl
   2d404:	b	2d414 <fb_symbol_table_visit@@Base+0xbfc>
   2d408:	ldrb	lr, [r4], #1
   2d40c:	cmp	lr, #0
   2d410:	beq	2d424 <fb_symbol_table_visit@@Base+0xc0c>
   2d414:	add	r3, r3, r3, lsl #5
   2d418:	cmp	r4, ip
   2d41c:	eor	r3, r3, lr
   2d420:	bne	2d408 <fb_symbol_table_visit@@Base+0xbf0>
   2d424:	eor	r3, r3, r2
   2d428:	cmp	r6, r1
   2d42c:	eor	r3, r3, r9
   2d430:	mul	r2, r8, r3
   2d434:	beq	2d47c <fb_symbol_table_visit@@Base+0xc64>
   2d438:	mvn	r3, r1
   2d43c:	add	r1, r1, #1
   2d440:	add	r6, r6, r3
   2d444:	add	r7, r7, r1
   2d448:	cmp	r6, #0
   2d44c:	ldrb	lr, [r7]
   2d450:	bne	2d3b4 <fb_symbol_table_visit@@Base+0xb9c>
   2d454:	cmp	lr, #0
   2d458:	mov	r1, r6
   2d45c:	mvn	ip, #0
   2d460:	add	r4, r7, #1
   2d464:	bne	2d3fc <fb_symbol_table_visit@@Base+0xbe4>
   2d468:	eor	r4, r2, #5376	; 0x1500
   2d46c:	movw	r2, #31153	; 0x79b1
   2d470:	movt	r2, #40503	; 0x9e37
   2d474:	eor	r4, r4, #5
   2d478:	mul	r2, r2, r4
   2d47c:	ldr	r3, [sp, #4]
   2d480:	and	r6, r3, r2
   2d484:	add	r3, fp, r6, lsl #2
   2d488:	str	r3, [sp]
   2d48c:	ldr	r3, [sp]
   2d490:	ldr	r7, [r3]
   2d494:	cmp	r7, #0
   2d498:	beq	2d58c <fb_symbol_table_visit@@Base+0xd74>
   2d49c:	add	r4, r2, #1
   2d4a0:	ldr	r8, [sp, #12]
   2d4a4:	str	r0, [sp, #12]
   2d4a8:	cmp	r7, #2
   2d4ac:	beq	2d56c <fb_symbol_table_visit@@Base+0xd54>
   2d4b0:	cmp	r8, #0
   2d4b4:	ldr	r5, [r7]
   2d4b8:	ble	2d644 <fb_symbol_table_visit@@Base+0xe2c>
   2d4bc:	cmp	r5, #0
   2d4c0:	beq	2d56c <fb_symbol_table_visit@@Base+0xd54>
   2d4c4:	ldr	r3, [r5, #4]
   2d4c8:	ldr	r2, [r3]
   2d4cc:	ldr	r1, [r3, #4]
   2d4d0:	cmp	r8, r1
   2d4d4:	bcc	2d56c <fb_symbol_table_visit@@Base+0xd54>
   2d4d8:	ldr	ip, [sp, #8]
   2d4dc:	mov	sl, r8
   2d4e0:	cmp	r1, #0
   2d4e4:	beq	2d708 <fb_symbol_table_visit@@Base+0xef0>
   2d4e8:	ldrb	r0, [ip]
   2d4ec:	ldrb	r3, [r2]
   2d4f0:	cmp	r0, r3
   2d4f4:	bne	2d56c <fb_symbol_table_visit@@Base+0xd54>
   2d4f8:	sub	r0, r1, #1
   2d4fc:	mov	r3, ip
   2d500:	add	r0, r0, ip
   2d504:	rsb	r9, ip, #1
   2d508:	b	2d51c <fb_symbol_table_visit@@Base+0xd04>
   2d50c:	ldrb	r6, [r2, #1]!
   2d510:	ldrb	lr, [r3, #1]!
   2d514:	cmp	r6, lr
   2d518:	bne	2d56c <fb_symbol_table_visit@@Base+0xd54>
   2d51c:	cmp	r0, r3
   2d520:	add	lr, r9, r3
   2d524:	bne	2d50c <fb_symbol_table_visit@@Base+0xcf4>
   2d528:	cmp	r1, sl
   2d52c:	beq	2d6e8 <fb_symbol_table_visit@@Base+0xed0>
   2d530:	ldrb	r3, [ip, lr]
   2d534:	cmp	r3, #46	; 0x2e
   2d538:	bne	2d56c <fb_symbol_table_visit@@Base+0xd54>
   2d53c:	ldr	r5, [r5]
   2d540:	mvn	r3, r1
   2d544:	add	r1, r1, #1
   2d548:	add	sl, sl, r3
   2d54c:	add	ip, ip, r1
   2d550:	cmp	r5, #0
   2d554:	beq	2d56c <fb_symbol_table_visit@@Base+0xd54>
   2d558:	ldr	r3, [r5, #4]
   2d55c:	ldr	r2, [r3]
   2d560:	ldr	r1, [r3, #4]
   2d564:	cmp	r1, sl
   2d568:	bls	2d4e0 <fb_symbol_table_visit@@Base+0xcc8>
   2d56c:	ldr	r3, [sp, #4]
   2d570:	and	r3, r3, r4
   2d574:	add	r4, r4, #1
   2d578:	ldr	r7, [fp, r3, lsl #2]
   2d57c:	add	r3, fp, r3, lsl #2
   2d580:	str	r3, [sp]
   2d584:	cmp	r7, #0
   2d588:	bne	2d4a8 <fb_symbol_table_visit@@Base+0xc90>
   2d58c:	mov	r0, r7
   2d590:	add	sp, sp, #20
   2d594:	ldrd	r4, [sp]
   2d598:	ldrd	r6, [sp, #8]
   2d59c:	ldrd	r8, [sp, #16]
   2d5a0:	ldrd	sl, [sp, #24]
   2d5a4:	add	sp, sp, #32
   2d5a8:	pop	{pc}		; (ldr pc, [sp], #4)
   2d5ac:	cmp	r1, #0
   2d5b0:	beq	2d720 <fb_symbol_table_visit@@Base+0xf08>
   2d5b4:	movw	r9, #11863	; 0x2e57
   2d5b8:	movt	r9, #12137	; 0x2f69
   2d5bc:	movw	r8, #15186	; 0x3b52
   2d5c0:	movt	r8, #12137	; 0x2f69
   2d5c4:	movw	r7, #31153	; 0x79b1
   2d5c8:	movt	r7, #40503	; 0x9e37
   2d5cc:	mov	r5, r1
   2d5d0:	mov	r2, #0
   2d5d4:	ldr	r1, [r5, #4]
   2d5d8:	ldr	lr, [r1]
   2d5dc:	ldr	r3, [r1, #4]
   2d5e0:	subs	r3, r3, #1
   2d5e4:	beq	2d700 <fb_symbol_table_visit@@Base+0xee8>
   2d5e8:	mov	r1, lr
   2d5ec:	ldrb	ip, [r1], #1
   2d5f0:	cmp	ip, #0
   2d5f4:	beq	2d700 <fb_symbol_table_visit@@Base+0xee8>
   2d5f8:	add	lr, lr, r3
   2d5fc:	mov	r3, r9
   2d600:	b	2d610 <fb_symbol_table_visit@@Base+0xdf8>
   2d604:	ldrb	ip, [r1], #1
   2d608:	cmp	ip, #0
   2d60c:	beq	2d620 <fb_symbol_table_visit@@Base+0xe08>
   2d610:	add	r3, r3, r3, lsl #5
   2d614:	cmp	r1, lr
   2d618:	eor	r3, r3, ip
   2d61c:	bne	2d604 <fb_symbol_table_visit@@Base+0xdec>
   2d620:	eor	r3, r3, r2
   2d624:	adds	r6, r6, #1
   2d628:	ldr	r5, [r5]
   2d62c:	eor	r3, r3, r8
   2d630:	mul	r2, r7, r3
   2d634:	beq	2d47c <fb_symbol_table_visit@@Base+0xc64>
   2d638:	cmp	r5, #0
   2d63c:	bne	2d5d4 <fb_symbol_table_visit@@Base+0xdbc>
   2d640:	b	2d47c <fb_symbol_table_visit@@Base+0xc64>
   2d644:	mov	r9, r8
   2d648:	ldr	r6, [sp, #8]
   2d64c:	b	2d690 <fb_symbol_table_visit@@Base+0xe78>
   2d650:	ldr	r3, [r5, #4]
   2d654:	ldr	r1, [r6, #4]
   2d658:	ldr	r0, [r3, #4]
   2d65c:	ldr	ip, [r1, #4]
   2d660:	mov	r2, r0
   2d664:	cmp	r0, ip
   2d668:	bne	2d56c <fb_symbol_table_visit@@Base+0xd54>
   2d66c:	ldr	r1, [r1]
   2d670:	ldr	r0, [r3]
   2d674:	bl	14100 <strncmp@plt>
   2d678:	cmp	r0, #0
   2d67c:	bne	2d56c <fb_symbol_table_visit@@Base+0xd54>
   2d680:	adds	r9, r9, #1
   2d684:	ldr	r5, [r5]
   2d688:	ldr	r6, [r6]
   2d68c:	beq	2d6ec <fb_symbol_table_visit@@Base+0xed4>
   2d690:	cmp	r5, #0
   2d694:	cmpne	r6, #0
   2d698:	bne	2d650 <fb_symbol_table_visit@@Base+0xe38>
   2d69c:	orrs	r3, r5, r6
   2d6a0:	bne	2d56c <fb_symbol_table_visit@@Base+0xd54>
   2d6a4:	ldr	r0, [sp]
   2d6a8:	mov	r2, #2
   2d6ac:	ldr	r1, [sp, #12]
   2d6b0:	ldr	r3, [r1, #8]
   2d6b4:	str	r2, [r0]
   2d6b8:	sub	r3, r3, #1
   2d6bc:	str	r3, [r1, #8]
   2d6c0:	b	2d58c <fb_symbol_table_visit@@Base+0xd74>
   2d6c4:	cmp	ip, #0
   2d6c8:	beq	2d6d8 <fb_symbol_table_visit@@Base+0xec0>
   2d6cc:	cmp	lr, #0
   2d6d0:	add	r4, r7, #1
   2d6d4:	bne	2d3fc <fb_symbol_table_visit@@Base+0xbe4>
   2d6d8:	eor	r3, r2, #5376	; 0x1500
   2d6dc:	eor	r3, r3, #5
   2d6e0:	mul	r2, r8, r3
   2d6e4:	b	2d438 <fb_symbol_table_visit@@Base+0xc20>
   2d6e8:	ldr	r5, [r5]
   2d6ec:	clz	r5, r5
   2d6f0:	lsr	r5, r5, #5
   2d6f4:	cmp	r5, #0
   2d6f8:	beq	2d56c <fb_symbol_table_visit@@Base+0xd54>
   2d6fc:	b	2d6a4 <fb_symbol_table_visit@@Base+0xe8c>
   2d700:	mov	r3, r9
   2d704:	b	2d620 <fb_symbol_table_visit@@Base+0xe08>
   2d708:	mov	lr, r1
   2d70c:	b	2d528 <fb_symbol_table_visit@@Base+0xd10>
   2d710:	add	r4, r7, #1
   2d714:	mov	r1, #0
   2d718:	mvn	ip, #0
   2d71c:	b	2d3fc <fb_symbol_table_visit@@Base+0xbe4>
   2d720:	str	fp, [sp]
   2d724:	ldr	r2, [sp, #8]
   2d728:	b	2d48c <fb_symbol_table_visit@@Base+0xc74>

0002d72c <fb_scope_table_clear@@Base>:
   2d72c:	b	2c88c <fb_symbol_table_visit@@Base+0x74>

0002d730 <fb_scope_table_destroy@@Base>:
   2d730:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2d734:	strd	r6, [sp, #8]
   2d738:	mov	r7, r0
   2d73c:	str	r8, [sp, #16]
   2d740:	subs	r8, r1, #0
   2d744:	str	lr, [sp, #20]
   2d748:	beq	2d794 <fb_scope_table_destroy@@Base+0x64>
   2d74c:	ldr	r5, [r0]
   2d750:	ldr	ip, [r0, #12]
   2d754:	cmp	ip, #0
   2d758:	beq	2d794 <fb_scope_table_destroy@@Base+0x64>
   2d75c:	mov	r6, r2
   2d760:	sub	r5, r5, #4
   2d764:	mov	r4, #0
   2d768:	ldr	r3, [r5, #4]!
   2d76c:	mov	r0, r6
   2d770:	add	r4, r4, #1
   2d774:	cmp	r3, #0
   2d778:	cmpne	r3, #2
   2d77c:	mov	r1, r3
   2d780:	beq	2d78c <fb_scope_table_destroy@@Base+0x5c>
   2d784:	blx	r8
   2d788:	ldr	ip, [r7, #12]
   2d78c:	cmp	r4, ip
   2d790:	bcc	2d768 <fb_scope_table_destroy@@Base+0x38>
   2d794:	mov	r0, r7
   2d798:	ldrd	r4, [sp]
   2d79c:	ldrd	r6, [sp, #8]
   2d7a0:	ldr	r8, [sp, #16]
   2d7a4:	ldr	lr, [sp, #20]
   2d7a8:	add	sp, sp, #24
   2d7ac:	b	2c88c <fb_symbol_table_visit@@Base+0x74>

0002d7b0 <fb_scope_table_init@@Base>:
   2d7b0:	cmp	r1, #2
   2d7b4:	strd	r4, [sp, #-16]!
   2d7b8:	mov	r4, r0
   2d7bc:	str	r6, [sp, #8]
   2d7c0:	str	lr, [sp, #12]
   2d7c4:	bls	2d820 <fb_scope_table_init@@Base+0x70>
   2d7c8:	mov	r3, #4
   2d7cc:	movw	r0, #358	; 0x166
   2d7d0:	mul	r2, r0, r3
   2d7d4:	lsl	r5, r3, #1
   2d7d8:	cmp	r1, r2, lsr #8
   2d7dc:	mov	r3, r5
   2d7e0:	bhi	2d7d0 <fb_scope_table_init@@Base+0x20>
   2d7e4:	mov	r1, #4
   2d7e8:	mov	r0, r5
   2d7ec:	bl	13f74 <calloc@plt>
   2d7f0:	cmp	r0, #0
   2d7f4:	str	r0, [r4]
   2d7f8:	beq	2d828 <fb_scope_table_init@@Base+0x78>
   2d7fc:	mov	r3, #0
   2d800:	mov	r0, r3
   2d804:	str	r3, [r4, #4]
   2d808:	str	r3, [r4, #8]
   2d80c:	str	r5, [r4, #12]
   2d810:	ldrd	r4, [sp]
   2d814:	ldr	r6, [sp, #8]
   2d818:	add	sp, sp, #12
   2d81c:	pop	{pc}		; (ldr pc, [sp], #4)
   2d820:	mov	r5, #4
   2d824:	b	2d7e4 <fb_scope_table_init@@Base+0x34>
   2d828:	mvn	r0, #0
   2d82c:	b	2d810 <fb_scope_table_init@@Base+0x60>

0002d830 <fb_scope_table_resize@@Base>:
   2d830:	b	2ce58 <fb_symbol_table_visit@@Base+0x640>

0002d834 <fb_scope_table_insert@@Base>:
   2d834:	b	2c8c8 <fb_symbol_table_visit@@Base+0xb0>

0002d838 <fb_scope_table_insert_item@@Base>:
   2d838:	push	{lr}		; (str lr, [sp, #-4]!)
   2d83c:	sub	sp, sp, #12
   2d840:	mov	r3, r1
   2d844:	str	r2, [sp]
   2d848:	mov	r2, #0
   2d84c:	ldr	r1, [r1]
   2d850:	bl	2c8c8 <fb_symbol_table_visit@@Base+0xb0>
   2d854:	add	sp, sp, #12
   2d858:	pop	{pc}		; (ldr pc, [sp], #4)

0002d85c <fb_scope_table_find@@Base>:
   2d85c:	mov	ip, r0
   2d860:	mov	r3, r2
   2d864:	ldr	r0, [ip], #12
   2d868:	mov	r2, r1
   2d86c:	mov	r1, ip
   2d870:	b	2cf74 <fb_symbol_table_visit@@Base+0x75c>

0002d874 <fb_scope_table_find_item@@Base>:
   2d874:	ldr	ip, [r0], #12
   2d878:	mov	r3, #0
   2d87c:	ldr	r2, [r1]
   2d880:	mov	r1, r0
   2d884:	mov	r0, ip
   2d888:	b	2cf74 <fb_symbol_table_visit@@Base+0x75c>

0002d88c <fb_scope_table_remove@@Base>:
   2d88c:	b	2d33c <fb_symbol_table_visit@@Base+0xb24>

0002d890 <fb_scope_table_remove_item@@Base>:
   2d890:	mov	r2, #0
   2d894:	ldr	r1, [r1]
   2d898:	b	2d33c <fb_symbol_table_visit@@Base+0xb24>

0002d89c <fb_scope_table_visit@@Base>:
   2d89c:	ldr	ip, [r0, #12]
   2d8a0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2d8a4:	ldr	r5, [r0]
   2d8a8:	strd	r6, [sp, #8]
   2d8ac:	str	r8, [sp, #16]
   2d8b0:	cmp	ip, #0
   2d8b4:	str	lr, [sp, #20]
   2d8b8:	beq	2d8fc <fb_scope_table_visit@@Base+0x60>
   2d8bc:	mov	r6, r2
   2d8c0:	mov	r8, r1
   2d8c4:	mov	r7, r0
   2d8c8:	sub	r5, r5, #4
   2d8cc:	mov	r4, #0
   2d8d0:	ldr	r3, [r5, #4]!
   2d8d4:	mov	r0, r6
   2d8d8:	add	r4, r4, #1
   2d8dc:	cmp	r3, #0
   2d8e0:	cmpne	r3, #2
   2d8e4:	mov	r1, r3
   2d8e8:	beq	2d8f4 <fb_scope_table_visit@@Base+0x58>
   2d8ec:	blx	r8
   2d8f0:	ldr	ip, [r7, #12]
   2d8f4:	cmp	r4, ip
   2d8f8:	bcc	2d8d0 <fb_scope_table_visit@@Base+0x34>
   2d8fc:	ldrd	r4, [sp]
   2d900:	ldrd	r6, [sp, #8]
   2d904:	ldr	r8, [sp, #16]
   2d908:	add	sp, sp, #20
   2d90c:	pop	{pc}		; (ldr pc, [sp], #4)
   2d910:	str	r4, [sp, #-8]!
   2d914:	mov	r4, r0
   2d918:	ldr	r0, [r0]
   2d91c:	str	lr, [sp, #4]
   2d920:	cmp	r0, #0
   2d924:	beq	2d92c <fb_scope_table_visit@@Base+0x90>
   2d928:	bl	13fa4 <free@plt>
   2d92c:	mov	r3, #0
   2d930:	str	r3, [r4]
   2d934:	str	r3, [r4, #4]
   2d938:	str	r3, [r4, #8]
   2d93c:	str	r3, [r4, #12]
   2d940:	ldr	r4, [sp]
   2d944:	add	sp, sp, #4
   2d948:	pop	{pc}		; (ldr pc, [sp], #4)
   2d94c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   2d950:	ldr	r4, [pc, #588]	; 2dba4 <fb_scope_table_visit@@Base+0x308>
   2d954:	strd	r6, [sp, #8]
   2d958:	strd	r8, [sp, #16]
   2d95c:	strd	sl, [sp, #24]
   2d960:	subs	fp, r3, #0
   2d964:	str	lr, [sp, #32]
   2d968:	sub	sp, sp, #28
   2d96c:	add	r4, pc, r4
   2d970:	str	r1, [sp, #8]
   2d974:	beq	2db3c <fb_scope_table_visit@@Base+0x2a0>
   2d978:	cmp	fp, #2
   2d97c:	beq	2db1c <fb_scope_table_visit@@Base+0x280>
   2d980:	cmp	fp, #1
   2d984:	beq	2db5c <fb_scope_table_visit@@Base+0x2c0>
   2d988:	mov	r3, #179	; 0xb3
   2d98c:	ldr	r1, [r0, #8]
   2d990:	mov	r9, r2
   2d994:	mov	sl, r0
   2d998:	ldr	r8, [r0, #12]
   2d99c:	mul	r3, r3, r8
   2d9a0:	cmp	r1, r3, lsr #8
   2d9a4:	bcs	2da94 <fb_scope_table_visit@@Base+0x1f8>
   2d9a8:	movw	r1, #15186	; 0x3b52
   2d9ac:	movt	r1, #12137	; 0x2f69
   2d9b0:	ldr	r7, [sl]
   2d9b4:	mov	r3, #0
   2d9b8:	mov	r2, r9
   2d9bc:	str	r1, [sp]
   2d9c0:	add	r1, sp, #16
   2d9c4:	sub	r8, r8, #1
   2d9c8:	ldr	r0, [sp, #8]
   2d9cc:	str	r1, [sp, #4]
   2d9d0:	bl	3dcd4 <cmetrohash64_1@@Base>
   2d9d4:	ldr	r6, [sp, #16]
   2d9d8:	ldr	r3, [sp, #64]	; 0x40
   2d9dc:	sub	r3, r3, #2
   2d9e0:	cmp	r3, #1
   2d9e4:	and	r3, r8, r6
   2d9e8:	add	r4, r7, r3, lsl #2
   2d9ec:	bls	2dad4 <fb_scope_table_visit@@Base+0x238>
   2d9f0:	ldr	r5, [r7, r3, lsl #2]
   2d9f4:	cmp	r5, #0
   2d9f8:	moveq	r3, r4
   2d9fc:	beq	2dabc <fb_scope_table_visit@@Base+0x220>
   2da00:	mov	r3, #0
   2da04:	add	r6, r6, #1
   2da08:	str	sl, [sp, #12]
   2da0c:	mov	sl, r8
   2da10:	mov	r8, r3
   2da14:	b	2da3c <fb_scope_table_visit@@Base+0x1a0>
   2da18:	ldr	r2, [r5, #148]	; 0x94
   2da1c:	cmp	r9, r2
   2da20:	beq	2da50 <fb_scope_table_visit@@Base+0x1b4>
   2da24:	and	r4, sl, r6
   2da28:	add	r6, r6, #1
   2da2c:	ldr	r5, [r7, r4, lsl #2]
   2da30:	add	r4, r7, r4, lsl #2
   2da34:	cmp	r5, #0
   2da38:	beq	2daac <fb_scope_table_visit@@Base+0x210>
   2da3c:	cmp	r5, #2
   2da40:	bne	2da18 <fb_scope_table_visit@@Base+0x17c>
   2da44:	cmp	r8, #0
   2da48:	moveq	r8, r4
   2da4c:	b	2da24 <fb_scope_table_visit@@Base+0x188>
   2da50:	mov	r2, r9
   2da54:	ldr	r0, [sp, #8]
   2da58:	ldr	r1, [r5, #144]	; 0x90
   2da5c:	bl	13fc8 <memcmp@plt>
   2da60:	cmp	r0, #0
   2da64:	bne	2da24 <fb_scope_table_visit@@Base+0x188>
   2da68:	ldr	r3, [sp, #64]	; 0x40
   2da6c:	cmp	r3, #0
   2da70:	streq	fp, [r4]
   2da74:	mov	r0, r5
   2da78:	add	sp, sp, #28
   2da7c:	ldrd	r4, [sp]
   2da80:	ldrd	r6, [sp, #8]
   2da84:	ldrd	r8, [sp, #16]
   2da88:	ldrd	sl, [sp, #24]
   2da8c:	add	sp, sp, #32
   2da90:	pop	{pc}		; (ldr pc, [sp], #4)
   2da94:	lsl	r1, r1, #1
   2da98:	bl	2dbd8 <fb_scope_table_visit@@Base+0x33c>
   2da9c:	cmp	r0, #0
   2daa0:	bne	2db7c <fb_scope_table_visit@@Base+0x2e0>
   2daa4:	ldr	r8, [sl, #12]
   2daa8:	b	2d9a8 <fb_scope_table_visit@@Base+0x10c>
   2daac:	ldr	sl, [sp, #12]
   2dab0:	cmp	r8, #0
   2dab4:	mov	r3, r8
   2dab8:	moveq	r3, r4
   2dabc:	ldr	r2, [sl, #8]
   2dac0:	mov	r5, #0
   2dac4:	add	r2, r2, #1
   2dac8:	str	r2, [sl, #8]
   2dacc:	str	fp, [r3]
   2dad0:	b	2da74 <fb_scope_table_visit@@Base+0x1d8>
   2dad4:	ldr	r2, [sl, #8]
   2dad8:	ldr	r1, [r7, r3, lsl #2]
   2dadc:	add	r3, r2, #1
   2dae0:	cmp	r1, #2
   2dae4:	cmpne	r1, #0
   2dae8:	str	r3, [sl, #8]
   2daec:	beq	2db10 <fb_scope_table_visit@@Base+0x274>
   2daf0:	add	r6, r6, #1
   2daf4:	and	r4, r8, r6
   2daf8:	add	r6, r6, #1
   2dafc:	ldr	r3, [r7, r4, lsl #2]
   2db00:	add	r4, r7, r4, lsl #2
   2db04:	cmp	r3, #0
   2db08:	cmpne	r3, #2
   2db0c:	bne	2daf4 <fb_scope_table_visit@@Base+0x258>
   2db10:	mov	r5, #0
   2db14:	str	fp, [r4]
   2db18:	b	2da74 <fb_scope_table_visit@@Base+0x1d8>
   2db1c:	ldr	r3, [pc, #132]	; 2dba8 <fb_scope_table_visit@@Base+0x30c>
   2db20:	mov	r2, #115	; 0x73
   2db24:	ldr	r1, [pc, #128]	; 2dbac <fb_scope_table_visit@@Base+0x310>
   2db28:	ldr	r0, [pc, #128]	; 2dbb0 <fb_scope_table_visit@@Base+0x314>
   2db2c:	add	r3, pc, r3
   2db30:	add	r1, pc, r1
   2db34:	add	r0, pc, r0
   2db38:	bl	14118 <__assert_fail@plt>
   2db3c:	ldr	r3, [pc, #112]	; 2dbb4 <fb_scope_table_visit@@Base+0x318>
   2db40:	mov	r2, #114	; 0x72
   2db44:	ldr	r1, [pc, #108]	; 2dbb8 <fb_scope_table_visit@@Base+0x31c>
   2db48:	ldr	r0, [pc, #108]	; 2dbbc <fb_scope_table_visit@@Base+0x320>
   2db4c:	add	r3, pc, r3
   2db50:	add	r1, pc, r1
   2db54:	add	r0, pc, r0
   2db58:	bl	14118 <__assert_fail@plt>
   2db5c:	ldr	r3, [pc, #92]	; 2dbc0 <fb_scope_table_visit@@Base+0x324>
   2db60:	mov	r2, #116	; 0x74
   2db64:	ldr	r1, [pc, #88]	; 2dbc4 <fb_scope_table_visit@@Base+0x328>
   2db68:	ldr	r0, [pc, #88]	; 2dbc8 <fb_scope_table_visit@@Base+0x32c>
   2db6c:	add	r3, pc, r3
   2db70:	add	r1, pc, r1
   2db74:	add	r0, pc, r0
   2db78:	bl	14118 <__assert_fail@plt>
   2db7c:	ldr	r3, [pc, #72]	; 2dbcc <fb_scope_table_visit@@Base+0x330>
   2db80:	ldr	r2, [pc, #72]	; 2dbd0 <fb_scope_table_visit@@Base+0x334>
   2db84:	ldr	r1, [pc, #72]	; 2dbd4 <fb_scope_table_visit@@Base+0x338>
   2db88:	ldr	r3, [r4, r3]
   2db8c:	add	r2, pc, r2
   2db90:	add	r1, pc, r1
   2db94:	ldr	r0, [r3]
   2db98:	bl	14064 <fprintf@plt>
   2db9c:	mov	r0, #1
   2dba0:	bl	14040 <exit@plt>
   2dba4:	andeq	pc, r3, ip, lsl #13
   2dba8:	muleq	r2, r0, lr
   2dbac:	andeq	sl, r2, r8, asr #26
   2dbb0:	andeq	sl, r2, r4, asr #27
   2dbb4:	andeq	sl, r2, r0, ror lr
   2dbb8:	andeq	sl, r2, r8, lsr #26
   2dbbc:	andeq	sl, r2, ip, lsl #27
   2dbc0:	andeq	sl, r2, r0, asr lr
   2dbc4:	andeq	sl, r2, r8, lsl #26
   2dbc8:	muleq	r2, ip, sp
   2dbcc:	andeq	r0, r0, r0, lsr #1
   2dbd0:	muleq	r2, ip, sp
   2dbd4:	andeq	sl, r2, ip, asr #27
   2dbd8:	ldr	r3, [r0, #8]
   2dbdc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2dbe0:	strd	r6, [sp, #8]
   2dbe4:	mov	r7, r0
   2dbe8:	str	r8, [sp, #16]
   2dbec:	str	lr, [sp, #20]
   2dbf0:	sub	sp, sp, #24
   2dbf4:	cmp	r1, r3
   2dbf8:	ldr	r6, [r0]
   2dbfc:	movcc	r1, r3
   2dc00:	cmp	r1, #2
   2dc04:	bls	2dce8 <fb_scope_table_visit@@Base+0x44c>
   2dc08:	mov	r3, #4
   2dc0c:	movw	r0, #358	; 0x166
   2dc10:	mul	r2, r0, r3
   2dc14:	lsl	r5, r3, #1
   2dc18:	cmp	r1, r2, lsr #8
   2dc1c:	mov	r3, r5
   2dc20:	bhi	2dc10 <fb_scope_table_visit@@Base+0x374>
   2dc24:	mov	r1, #4
   2dc28:	mov	r0, r5
   2dc2c:	bl	13f74 <calloc@plt>
   2dc30:	cmp	r0, #0
   2dc34:	str	r0, [sp, #8]
   2dc38:	beq	2dcf0 <fb_scope_table_visit@@Base+0x454>
   2dc3c:	ldr	r3, [r7, #12]
   2dc40:	mov	r4, #0
   2dc44:	str	r4, [sp, #12]
   2dc48:	strd	r4, [sp, #16]
   2dc4c:	cmp	r3, r4
   2dc50:	addeq	r6, sp, #8
   2dc54:	beq	2dca8 <fb_scope_table_visit@@Base+0x40c>
   2dc58:	sub	r5, r6, #4
   2dc5c:	mov	r8, #3
   2dc60:	add	r6, sp, #8
   2dc64:	b	2dc70 <fb_scope_table_visit@@Base+0x3d4>
   2dc68:	cmp	r3, r4
   2dc6c:	bls	2dca8 <fb_scope_table_visit@@Base+0x40c>
   2dc70:	ldr	r2, [r5, #4]!
   2dc74:	add	r4, r4, #1
   2dc78:	cmp	r2, #0
   2dc7c:	cmpne	r2, #2
   2dc80:	beq	2dc68 <fb_scope_table_visit@@Base+0x3cc>
   2dc84:	mov	r3, r2
   2dc88:	mov	r0, r6
   2dc8c:	ldr	r1, [r2, #144]	; 0x90
   2dc90:	ldr	r2, [r2, #148]	; 0x94
   2dc94:	str	r8, [sp]
   2dc98:	bl	2d94c <fb_scope_table_visit@@Base+0xb0>
   2dc9c:	ldr	r3, [r7, #12]
   2dca0:	cmp	r3, r4
   2dca4:	bhi	2dc70 <fb_scope_table_visit@@Base+0x3d4>
   2dca8:	mov	r0, r7
   2dcac:	bl	2d910 <fb_scope_table_visit@@Base+0x74>
   2dcb0:	ldr	r3, [sp, #8]
   2dcb4:	mov	r0, #0
   2dcb8:	ldmib	r6, {r1, r2}
   2dcbc:	str	r3, [r7]
   2dcc0:	ldr	r3, [r6, #12]
   2dcc4:	str	r1, [r7, #4]
   2dcc8:	str	r2, [r7, #8]
   2dccc:	str	r3, [r7, #12]
   2dcd0:	add	sp, sp, #24
   2dcd4:	ldrd	r4, [sp]
   2dcd8:	ldrd	r6, [sp, #8]
   2dcdc:	ldr	r8, [sp, #16]
   2dce0:	add	sp, sp, #20
   2dce4:	pop	{pc}		; (ldr pc, [sp], #4)
   2dce8:	mov	r5, #4
   2dcec:	b	2dc24 <fb_scope_table_visit@@Base+0x388>
   2dcf0:	mvn	r0, #0
   2dcf4:	b	2dcd0 <fb_scope_table_visit@@Base+0x434>
   2dcf8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   2dcfc:	ldr	r5, [r0]
   2dd00:	strd	r6, [sp, #8]
   2dd04:	strd	r8, [sp, #16]
   2dd08:	strd	sl, [sp, #24]
   2dd0c:	str	lr, [sp, #32]
   2dd10:	sub	sp, sp, #20
   2dd14:	cmp	r5, #0
   2dd18:	beq	2dde8 <fb_scope_table_visit@@Base+0x54c>
   2dd1c:	mov	r9, r1
   2dd20:	movw	r1, #15186	; 0x3b52
   2dd24:	movt	r1, #12137	; 0x2f69
   2dd28:	mov	r8, r0
   2dd2c:	ldr	r6, [r8, #12]
   2dd30:	mov	r3, #0
   2dd34:	mov	r0, r9
   2dd38:	str	r1, [sp]
   2dd3c:	add	r1, sp, #8
   2dd40:	mov	r7, r2
   2dd44:	str	r1, [sp, #4]
   2dd48:	bl	3dcd4 <cmetrohash64_1@@Base>
   2dd4c:	ldr	sl, [sp, #8]
   2dd50:	sub	r6, r6, #1
   2dd54:	and	r3, r6, sl
   2dd58:	ldr	fp, [r5, r3, lsl #2]
   2dd5c:	add	r4, r5, r3, lsl #2
   2dd60:	cmp	fp, #0
   2dd64:	beq	2dde8 <fb_scope_table_visit@@Base+0x54c>
   2dd68:	add	sl, sl, #1
   2dd6c:	b	2dd88 <fb_scope_table_visit@@Base+0x4ec>
   2dd70:	and	r3, sl, r6
   2dd74:	add	sl, sl, #1
   2dd78:	ldr	fp, [r5, r3, lsl #2]
   2dd7c:	add	r4, r5, r3, lsl #2
   2dd80:	cmp	fp, #0
   2dd84:	beq	2dde8 <fb_scope_table_visit@@Base+0x54c>
   2dd88:	cmp	fp, #2
   2dd8c:	beq	2dd70 <fb_scope_table_visit@@Base+0x4d4>
   2dd90:	ldr	r3, [fp, #148]	; 0x94
   2dd94:	cmp	r7, r3
   2dd98:	bne	2dd70 <fb_scope_table_visit@@Base+0x4d4>
   2dd9c:	mov	r2, r7
   2dda0:	mov	r0, r9
   2dda4:	ldr	r1, [fp, #144]	; 0x90
   2dda8:	bl	13fc8 <memcmp@plt>
   2ddac:	cmp	r0, #0
   2ddb0:	bne	2dd70 <fb_scope_table_visit@@Base+0x4d4>
   2ddb4:	ldr	r3, [r8, #8]
   2ddb8:	mov	r2, #2
   2ddbc:	str	r2, [r4]
   2ddc0:	sub	r3, r3, #1
   2ddc4:	str	r3, [r8, #8]
   2ddc8:	mov	r0, fp
   2ddcc:	add	sp, sp, #20
   2ddd0:	ldrd	r4, [sp]
   2ddd4:	ldrd	r6, [sp, #8]
   2ddd8:	ldrd	r8, [sp, #16]
   2dddc:	ldrd	sl, [sp, #24]
   2dde0:	add	sp, sp, #32
   2dde4:	pop	{pc}		; (ldr pc, [sp], #4)
   2dde8:	mov	fp, #0
   2ddec:	b	2ddc8 <fb_scope_table_visit@@Base+0x52c>
   2ddf0:	strd	r4, [sp, #-28]!	; 0xffffffe4
   2ddf4:	strd	r6, [sp, #8]
   2ddf8:	subs	r7, r0, #0
   2ddfc:	strd	r8, [sp, #16]
   2de00:	str	lr, [sp, #24]
   2de04:	sub	sp, sp, #20
   2de08:	beq	2deb8 <fb_scope_table_visit@@Base+0x61c>
   2de0c:	mov	r6, r3
   2de10:	movw	r3, #15186	; 0x3b52
   2de14:	movt	r3, #12137	; 0x2f69
   2de18:	ldr	r8, [r1]
   2de1c:	add	r1, sp, #8
   2de20:	mov	r9, r2
   2de24:	mov	r2, r6
   2de28:	mov	r0, r9
   2de2c:	str	r3, [sp]
   2de30:	mov	r3, #0
   2de34:	str	r1, [sp, #4]
   2de38:	bl	3dcd4 <cmetrohash64_1@@Base>
   2de3c:	ldr	r5, [sp, #8]
   2de40:	sub	r8, r8, #1
   2de44:	and	r3, r8, r5
   2de48:	ldr	r4, [r7, r3, lsl #2]
   2de4c:	cmp	r4, #0
   2de50:	beq	2deb8 <fb_scope_table_visit@@Base+0x61c>
   2de54:	add	r5, r5, #1
   2de58:	b	2de70 <fb_scope_table_visit@@Base+0x5d4>
   2de5c:	and	r1, r8, r5
   2de60:	add	r5, r5, #1
   2de64:	ldr	r4, [r7, r1, lsl #2]
   2de68:	cmp	r4, #0
   2de6c:	beq	2deb8 <fb_scope_table_visit@@Base+0x61c>
   2de70:	cmp	r4, #2
   2de74:	beq	2de5c <fb_scope_table_visit@@Base+0x5c0>
   2de78:	ldr	r3, [r4, #148]	; 0x94
   2de7c:	cmp	r6, r3
   2de80:	bne	2de5c <fb_scope_table_visit@@Base+0x5c0>
   2de84:	mov	r2, r6
   2de88:	mov	r0, r9
   2de8c:	ldr	r1, [r4, #144]	; 0x90
   2de90:	bl	13fc8 <memcmp@plt>
   2de94:	cmp	r0, #0
   2de98:	bne	2de5c <fb_scope_table_visit@@Base+0x5c0>
   2de9c:	mov	r0, r4
   2dea0:	add	sp, sp, #20
   2dea4:	ldrd	r4, [sp]
   2dea8:	ldrd	r6, [sp, #8]
   2deac:	ldrd	r8, [sp, #16]
   2deb0:	add	sp, sp, #24
   2deb4:	pop	{pc}		; (ldr pc, [sp], #4)
   2deb8:	mov	r4, #0
   2debc:	b	2de9c <fb_scope_table_visit@@Base+0x600>

0002dec0 <fb_schema_table_clear@@Base>:
   2dec0:	b	2d910 <fb_scope_table_visit@@Base+0x74>

0002dec4 <fb_schema_table_destroy@@Base>:
   2dec4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2dec8:	strd	r6, [sp, #8]
   2decc:	mov	r7, r0
   2ded0:	str	r8, [sp, #16]
   2ded4:	subs	r8, r1, #0
   2ded8:	str	lr, [sp, #20]
   2dedc:	beq	2df28 <fb_schema_table_destroy@@Base+0x64>
   2dee0:	ldr	r5, [r0]
   2dee4:	ldr	ip, [r0, #12]
   2dee8:	cmp	ip, #0
   2deec:	beq	2df28 <fb_schema_table_destroy@@Base+0x64>
   2def0:	mov	r6, r2
   2def4:	sub	r5, r5, #4
   2def8:	mov	r4, #0
   2defc:	ldr	r3, [r5, #4]!
   2df00:	mov	r0, r6
   2df04:	add	r4, r4, #1
   2df08:	cmp	r3, #0
   2df0c:	cmpne	r3, #2
   2df10:	mov	r1, r3
   2df14:	beq	2df20 <fb_schema_table_destroy@@Base+0x5c>
   2df18:	blx	r8
   2df1c:	ldr	ip, [r7, #12]
   2df20:	cmp	r4, ip
   2df24:	bcc	2defc <fb_schema_table_destroy@@Base+0x38>
   2df28:	mov	r0, r7
   2df2c:	ldrd	r4, [sp]
   2df30:	ldrd	r6, [sp, #8]
   2df34:	ldr	r8, [sp, #16]
   2df38:	ldr	lr, [sp, #20]
   2df3c:	add	sp, sp, #24
   2df40:	b	2d910 <fb_scope_table_visit@@Base+0x74>

0002df44 <fb_schema_table_init@@Base>:
   2df44:	cmp	r1, #2
   2df48:	strd	r4, [sp, #-16]!
   2df4c:	mov	r4, r0
   2df50:	str	r6, [sp, #8]
   2df54:	str	lr, [sp, #12]
   2df58:	bls	2dfb4 <fb_schema_table_init@@Base+0x70>
   2df5c:	mov	r3, #4
   2df60:	movw	r0, #358	; 0x166
   2df64:	mul	r2, r0, r3
   2df68:	lsl	r5, r3, #1
   2df6c:	cmp	r1, r2, lsr #8
   2df70:	mov	r3, r5
   2df74:	bhi	2df64 <fb_schema_table_init@@Base+0x20>
   2df78:	mov	r1, #4
   2df7c:	mov	r0, r5
   2df80:	bl	13f74 <calloc@plt>
   2df84:	cmp	r0, #0
   2df88:	str	r0, [r4]
   2df8c:	beq	2dfbc <fb_schema_table_init@@Base+0x78>
   2df90:	mov	r3, #0
   2df94:	mov	r0, r3
   2df98:	str	r3, [r4, #4]
   2df9c:	str	r3, [r4, #8]
   2dfa0:	str	r5, [r4, #12]
   2dfa4:	ldrd	r4, [sp]
   2dfa8:	ldr	r6, [sp, #8]
   2dfac:	add	sp, sp, #12
   2dfb0:	pop	{pc}		; (ldr pc, [sp], #4)
   2dfb4:	mov	r5, #4
   2dfb8:	b	2df78 <fb_schema_table_init@@Base+0x34>
   2dfbc:	mvn	r0, #0
   2dfc0:	b	2dfa4 <fb_schema_table_init@@Base+0x60>

0002dfc4 <fb_schema_table_resize@@Base>:
   2dfc4:	b	2dbd8 <fb_scope_table_visit@@Base+0x33c>

0002dfc8 <fb_schema_table_insert@@Base>:
   2dfc8:	b	2d94c <fb_scope_table_visit@@Base+0xb0>

0002dfcc <fb_schema_table_insert_item@@Base>:
   2dfcc:	push	{lr}		; (str lr, [sp, #-4]!)
   2dfd0:	sub	sp, sp, #12
   2dfd4:	mov	ip, r1
   2dfd8:	mov	r3, r1
   2dfdc:	str	r2, [sp]
   2dfe0:	ldr	r1, [r1, #144]	; 0x90
   2dfe4:	ldr	r2, [ip, #148]	; 0x94
   2dfe8:	bl	2d94c <fb_scope_table_visit@@Base+0xb0>
   2dfec:	add	sp, sp, #12
   2dff0:	pop	{pc}		; (ldr pc, [sp], #4)

0002dff4 <fb_schema_table_find@@Base>:
   2dff4:	mov	ip, r0
   2dff8:	mov	r3, r2
   2dffc:	ldr	r0, [ip], #12
   2e000:	mov	r2, r1
   2e004:	mov	r1, ip
   2e008:	b	2ddf0 <fb_scope_table_visit@@Base+0x554>

0002e00c <fb_schema_table_find_item@@Base>:
   2e00c:	ldr	ip, [r0], #12
   2e010:	ldrd	r2, [r1, #144]	; 0x90
   2e014:	mov	r1, r0
   2e018:	mov	r0, ip
   2e01c:	b	2ddf0 <fb_scope_table_visit@@Base+0x554>

0002e020 <fb_schema_table_remove@@Base>:
   2e020:	b	2dcf8 <fb_scope_table_visit@@Base+0x45c>

0002e024 <fb_schema_table_remove_item@@Base>:
   2e024:	mov	r3, r1
   2e028:	ldr	r1, [r1, #144]	; 0x90
   2e02c:	ldr	r2, [r3, #148]	; 0x94
   2e030:	b	2dcf8 <fb_scope_table_visit@@Base+0x45c>

0002e034 <fb_schema_table_visit@@Base>:
   2e034:	ldr	ip, [r0, #12]
   2e038:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2e03c:	ldr	r5, [r0]
   2e040:	strd	r6, [sp, #8]
   2e044:	str	r8, [sp, #16]
   2e048:	cmp	ip, #0
   2e04c:	str	lr, [sp, #20]
   2e050:	beq	2e094 <fb_schema_table_visit@@Base+0x60>
   2e054:	mov	r6, r2
   2e058:	mov	r8, r1
   2e05c:	mov	r7, r0
   2e060:	sub	r5, r5, #4
   2e064:	mov	r4, #0
   2e068:	ldr	r3, [r5, #4]!
   2e06c:	mov	r0, r6
   2e070:	add	r4, r4, #1
   2e074:	cmp	r3, #0
   2e078:	cmpne	r3, #2
   2e07c:	mov	r1, r3
   2e080:	beq	2e08c <fb_schema_table_visit@@Base+0x58>
   2e084:	blx	r8
   2e088:	ldr	ip, [r7, #12]
   2e08c:	cmp	r4, ip
   2e090:	bcc	2e068 <fb_schema_table_visit@@Base+0x34>
   2e094:	ldrd	r4, [sp]
   2e098:	ldrd	r6, [sp, #8]
   2e09c:	ldr	r8, [sp, #16]
   2e0a0:	add	sp, sp, #20
   2e0a4:	pop	{pc}		; (ldr pc, [sp], #4)

0002e0a8 <__flatcc_fb_copy_path_n@@Base>:
   2e0a8:	strd	r4, [sp, #-16]!
   2e0ac:	mov	r4, r1
   2e0b0:	mov	r1, #0
   2e0b4:	mov	r2, r4
   2e0b8:	str	r6, [sp, #8]
   2e0bc:	mov	r6, r0
   2e0c0:	str	lr, [sp, #12]
   2e0c4:	bl	140a0 <memchr@plt>
   2e0c8:	cmp	r0, #0
   2e0cc:	subne	r4, r0, r6
   2e0d0:	add	r0, r4, #1
   2e0d4:	bl	14010 <malloc@plt>
   2e0d8:	subs	r5, r0, #0
   2e0dc:	beq	2e0f4 <__flatcc_fb_copy_path_n@@Base+0x4c>
   2e0e0:	mov	r1, r6
   2e0e4:	mov	r2, r4
   2e0e8:	bl	13fb0 <memcpy@plt>
   2e0ec:	mov	r3, #0
   2e0f0:	strb	r3, [r5, r4]
   2e0f4:	mov	r0, r5
   2e0f8:	ldrd	r4, [sp]
   2e0fc:	ldr	r6, [sp, #8]
   2e100:	add	sp, sp, #12
   2e104:	pop	{pc}		; (ldr pc, [sp], #4)

0002e108 <__flatcc_fb_copy_path@@Base>:
   2e108:	strd	r4, [sp, #-16]!
   2e10c:	str	r6, [sp, #8]
   2e110:	mov	r6, r0
   2e114:	str	lr, [sp, #12]
   2e118:	bl	1404c <strlen@plt>
   2e11c:	mov	r4, r0
   2e120:	add	r0, r0, #1
   2e124:	bl	14010 <malloc@plt>
   2e128:	subs	r5, r0, #0
   2e12c:	beq	2e144 <__flatcc_fb_copy_path@@Base+0x3c>
   2e130:	mov	r1, r6
   2e134:	mov	r2, r4
   2e138:	bl	13fb0 <memcpy@plt>
   2e13c:	mov	r3, #0
   2e140:	strb	r3, [r5, r4]
   2e144:	mov	r0, r5
   2e148:	ldrd	r4, [sp]
   2e14c:	ldr	r6, [sp, #8]
   2e150:	add	sp, sp, #12
   2e154:	pop	{pc}		; (ldr pc, [sp], #4)

0002e158 <__flatcc_fb_chomp@@Base>:
   2e158:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2e15c:	subs	r5, r2, #0
   2e160:	mov	r4, r1
   2e164:	strd	r6, [sp, #8]
   2e168:	str	r8, [sp, #16]
   2e16c:	str	lr, [sp, #20]
   2e170:	beq	2e1a4 <__flatcc_fb_chomp@@Base+0x4c>
   2e174:	mov	r6, r0
   2e178:	mov	r0, r5
   2e17c:	bl	1404c <strlen@plt>
   2e180:	cmp	r0, r4
   2e184:	mov	r2, r0
   2e188:	bcs	2e1a4 <__flatcc_fb_chomp@@Base+0x4c>
   2e18c:	sub	r7, r4, r0
   2e190:	mov	r1, r5
   2e194:	add	r0, r6, r7
   2e198:	bl	14100 <strncmp@plt>
   2e19c:	cmp	r0, #0
   2e1a0:	moveq	r4, r7
   2e1a4:	mov	r0, r4
   2e1a8:	ldrd	r4, [sp]
   2e1ac:	ldrd	r6, [sp, #8]
   2e1b0:	ldr	r8, [sp, #16]
   2e1b4:	add	sp, sp, #20
   2e1b8:	pop	{pc}		; (ldr pc, [sp], #4)

0002e1bc <__flatcc_fb_create_join_path_n@@Base>:
   2e1bc:	strd	r4, [sp, #-32]!	; 0xffffffe0
   2e1c0:	mov	r4, r1
   2e1c4:	strd	r6, [sp, #8]
   2e1c8:	mov	r7, r3
   2e1cc:	strd	r8, [sp, #16]
   2e1d0:	mov	r9, r0
   2e1d4:	ldr	r8, [sp, #32]
   2e1d8:	str	sl, [sp, #24]
   2e1dc:	mov	sl, r2
   2e1e0:	str	lr, [sp, #28]
   2e1e4:	cmp	r8, #0
   2e1e8:	moveq	r6, r8
   2e1ec:	beq	2e1fc <__flatcc_fb_create_join_path_n@@Base+0x40>
   2e1f0:	mov	r0, r8
   2e1f4:	bl	1404c <strlen@plt>
   2e1f8:	mov	r6, r0
   2e1fc:	cmp	r9, #0
   2e200:	beq	2e288 <__flatcc_fb_create_join_path_n@@Base+0xcc>
   2e204:	cmp	r7, #0
   2e208:	bne	2e270 <__flatcc_fb_create_join_path_n@@Base+0xb4>
   2e20c:	ldr	r3, [sp, #36]	; 0x24
   2e210:	cmp	r3, #0
   2e214:	beq	2e28c <__flatcc_fb_create_join_path_n@@Base+0xd0>
   2e218:	cmp	r4, #0
   2e21c:	beq	2e28c <__flatcc_fb_create_join_path_n@@Base+0xd0>
   2e220:	add	r3, r9, r4
   2e224:	ldrb	r3, [r3, #-1]
   2e228:	cmp	r3, #92	; 0x5c
   2e22c:	cmpne	r3, #47	; 0x2f
   2e230:	beq	2e28c <__flatcc_fb_create_join_path_n@@Base+0xd0>
   2e234:	ldr	r3, [sp, #36]	; 0x24
   2e238:	add	r0, r3, r4
   2e23c:	add	r0, r0, #1
   2e240:	add	r0, r0, r7
   2e244:	add	r0, r0, r6
   2e248:	bl	14010 <malloc@plt>
   2e24c:	subs	r5, r0, #0
   2e250:	beq	2e2a4 <__flatcc_fb_create_join_path_n@@Base+0xe8>
   2e254:	mov	r2, r4
   2e258:	mov	r1, r9
   2e25c:	bl	13fb0 <memcpy@plt>
   2e260:	mov	r3, #47	; 0x2f
   2e264:	strb	r3, [r5, r4]
   2e268:	add	r4, r4, #1
   2e26c:	b	2e2ec <__flatcc_fb_create_join_path_n@@Base+0x130>
   2e270:	ldrb	r3, [sl]
   2e274:	cmp	r3, #92	; 0x5c
   2e278:	cmpne	r3, #47	; 0x2f
   2e27c:	moveq	r3, #1
   2e280:	movne	r3, #0
   2e284:	bne	2e2c4 <__flatcc_fb_create_join_path_n@@Base+0x108>
   2e288:	mov	r4, #0
   2e28c:	add	r0, r7, #1
   2e290:	add	r0, r0, r6
   2e294:	add	r0, r0, r4
   2e298:	bl	14010 <malloc@plt>
   2e29c:	subs	r5, r0, #0
   2e2a0:	bne	2e2e0 <__flatcc_fb_create_join_path_n@@Base+0x124>
   2e2a4:	mov	r5, #0
   2e2a8:	mov	r0, r5
   2e2ac:	ldrd	r4, [sp]
   2e2b0:	ldrd	r6, [sp, #8]
   2e2b4:	ldrd	r8, [sp, #16]
   2e2b8:	ldr	sl, [sp, #24]
   2e2bc:	add	sp, sp, #28
   2e2c0:	pop	{pc}		; (ldr pc, [sp], #4)
   2e2c4:	cmp	r7, #1
   2e2c8:	bls	2e20c <__flatcc_fb_create_join_path_n@@Base+0x50>
   2e2cc:	ldrb	r2, [sl, #1]
   2e2d0:	cmp	r2, #58	; 0x3a
   2e2d4:	bne	2e20c <__flatcc_fb_create_join_path_n@@Base+0x50>
   2e2d8:	mov	r4, r3
   2e2dc:	b	2e28c <__flatcc_fb_create_join_path_n@@Base+0xd0>
   2e2e0:	mov	r1, r9
   2e2e4:	mov	r2, r4
   2e2e8:	bl	13fb0 <memcpy@plt>
   2e2ec:	mov	r2, r7
   2e2f0:	mov	r1, sl
   2e2f4:	add	r7, r4, r7
   2e2f8:	add	r0, r5, r4
   2e2fc:	bl	13fb0 <memcpy@plt>
   2e300:	mov	r2, r6
   2e304:	mov	r1, r8
   2e308:	add	r0, r5, r7
   2e30c:	add	r6, r5, r6
   2e310:	bl	13fb0 <memcpy@plt>
   2e314:	mov	r3, #0
   2e318:	strb	r3, [r6, r7]
   2e31c:	b	2e2a8 <__flatcc_fb_create_join_path_n@@Base+0xec>

0002e320 <__flatcc_fb_create_join_path@@Base>:
   2e320:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2e324:	subs	r5, r0, #0
   2e328:	mov	r4, r1
   2e32c:	strd	r6, [sp, #8]
   2e330:	mov	r6, r3
   2e334:	moveq	r7, r5
   2e338:	str	r8, [sp, #16]
   2e33c:	mov	r8, r2
   2e340:	str	lr, [sp, #20]
   2e344:	sub	sp, sp, #8
   2e348:	beq	2e354 <__flatcc_fb_create_join_path@@Base+0x34>
   2e34c:	bl	1404c <strlen@plt>
   2e350:	mov	r7, r0
   2e354:	cmp	r4, #0
   2e358:	moveq	r3, r4
   2e35c:	beq	2e36c <__flatcc_fb_create_join_path@@Base+0x4c>
   2e360:	mov	r0, r4
   2e364:	bl	1404c <strlen@plt>
   2e368:	mov	r3, r0
   2e36c:	mov	r2, r4
   2e370:	mov	r1, r7
   2e374:	str	r8, [sp]
   2e378:	mov	r0, r5
   2e37c:	str	r6, [sp, #4]
   2e380:	bl	2e1bc <__flatcc_fb_create_join_path_n@@Base>
   2e384:	add	sp, sp, #8
   2e388:	ldrd	r4, [sp]
   2e38c:	ldrd	r6, [sp, #8]
   2e390:	ldr	r8, [sp, #16]
   2e394:	add	sp, sp, #20
   2e398:	pop	{pc}		; (ldr pc, [sp], #4)

0002e39c <__flatcc_fb_create_path_ext_n@@Base>:
   2e39c:	mov	ip, #0
   2e3a0:	push	{lr}		; (str lr, [sp, #-4]!)
   2e3a4:	sub	sp, sp, #12
   2e3a8:	mov	r3, r1
   2e3ac:	mov	r1, ip
   2e3b0:	stm	sp, {r2, ip}
   2e3b4:	mov	r2, r0
   2e3b8:	mov	r0, ip
   2e3bc:	bl	2e1bc <__flatcc_fb_create_join_path_n@@Base>
   2e3c0:	add	sp, sp, #12
   2e3c4:	pop	{pc}		; (ldr pc, [sp], #4)

0002e3c8 <__flatcc_fb_create_path_ext@@Base>:
   2e3c8:	mov	r3, #0
   2e3cc:	mov	r2, r1
   2e3d0:	mov	r1, r0
   2e3d4:	mov	r0, r3
   2e3d8:	b	2e320 <__flatcc_fb_create_join_path@@Base>

0002e3dc <__flatcc_fb_create_make_path_n@@Base>:
   2e3dc:	cmp	r1, #1
   2e3e0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2e3e4:	strd	r6, [sp, #8]
   2e3e8:	str	r8, [sp, #16]
   2e3ec:	str	lr, [sp, #20]
   2e3f0:	beq	2e54c <__flatcc_fb_create_make_path_n@@Base+0x170>
   2e3f4:	bls	2e55c <__flatcc_fb_create_make_path_n@@Base+0x180>
   2e3f8:	ldrb	r4, [r0]
   2e3fc:	sub	r6, r0, #1
   2e400:	mov	r5, r0
   2e404:	mov	r2, r0
   2e408:	add	r6, r6, r1
   2e40c:	mov	r3, r4
   2e410:	cmp	r3, #92	; 0x5c
   2e414:	ldrb	r0, [r2, #1]!
   2e418:	bne	2e424 <__flatcc_fb_create_make_path_n@@Base+0x48>
   2e41c:	cmp	r0, #32
   2e420:	addeq	r1, r1, #1
   2e424:	cmp	r3, #32
   2e428:	addeq	r1, r1, #1
   2e42c:	cmp	r6, r2
   2e430:	mov	r3, r0
   2e434:	bne	2e410 <__flatcc_fb_create_make_path_n@@Base+0x34>
   2e438:	add	r1, r1, #1
   2e43c:	cmp	r0, #32
   2e440:	movne	r0, r1
   2e444:	addeq	r0, r1, #1
   2e448:	bl	14010 <malloc@plt>
   2e44c:	cmp	r0, #0
   2e450:	beq	2e4f8 <__flatcc_fb_create_make_path_n@@Base+0x11c>
   2e454:	mov	r3, #0
   2e458:	mov	r8, #92	; 0x5c
   2e45c:	b	2e494 <__flatcc_fb_create_make_path_n@@Base+0xb8>
   2e460:	cmp	r4, #32
   2e464:	add	r3, r3, #2
   2e468:	bne	2e480 <__flatcc_fb_create_make_path_n@@Base+0xa4>
   2e46c:	mov	r7, r2
   2e470:	mov	r2, r3
   2e474:	strb	r8, [r1]
   2e478:	mov	r1, lr
   2e47c:	add	lr, r0, r3
   2e480:	cmp	r6, r5
   2e484:	mov	r3, r2
   2e488:	strb	r4, [r1]
   2e48c:	mov	r4, ip
   2e490:	beq	2e50c <__flatcc_fb_create_make_path_n@@Base+0x130>
   2e494:	add	r2, r3, #1
   2e498:	cmp	r4, #92	; 0x5c
   2e49c:	ldrb	ip, [r5, #1]!
   2e4a0:	add	lr, r0, r2
   2e4a4:	add	r1, r0, r3
   2e4a8:	mov	r7, r3
   2e4ac:	bne	2e460 <__flatcc_fb_create_make_path_n@@Base+0x84>
   2e4b0:	cmp	ip, #32
   2e4b4:	bne	2e480 <__flatcc_fb_create_make_path_n@@Base+0xa4>
   2e4b8:	add	r3, r3, #2
   2e4bc:	mov	r7, r2
   2e4c0:	strb	r4, [r1]
   2e4c4:	mov	r2, r3
   2e4c8:	mov	r1, lr
   2e4cc:	add	lr, r0, r3
   2e4d0:	b	2e480 <__flatcc_fb_create_make_path_n@@Base+0xa4>
   2e4d4:	mov	r0, #3
   2e4d8:	bl	14010 <malloc@plt>
   2e4dc:	cmp	r0, #0
   2e4e0:	beq	2e4f8 <__flatcc_fb_create_make_path_n@@Base+0x11c>
   2e4e4:	mov	r2, #92	; 0x5c
   2e4e8:	mov	r3, #0
   2e4ec:	strb	r2, [r0]
   2e4f0:	strb	r4, [r0, #1]
   2e4f4:	strb	r3, [r0, #2]
   2e4f8:	ldrd	r4, [sp]
   2e4fc:	ldrd	r6, [sp, #8]
   2e500:	ldr	r8, [sp, #16]
   2e504:	add	sp, sp, #20
   2e508:	pop	{pc}		; (ldr pc, [sp], #4)
   2e50c:	cmp	ip, #32
   2e510:	addne	r2, r0, r2
   2e514:	beq	2e528 <__flatcc_fb_create_make_path_n@@Base+0x14c>
   2e518:	mov	r3, #0
   2e51c:	strb	ip, [lr]
   2e520:	strb	r3, [r2, #1]
   2e524:	b	2e4f8 <__flatcc_fb_create_make_path_n@@Base+0x11c>
   2e528:	mov	r3, #92	; 0x5c
   2e52c:	add	r2, r7, #2
   2e530:	strb	r3, [lr]
   2e534:	add	lr, r0, r2
   2e538:	mov	r3, #0
   2e53c:	mov	r2, lr
   2e540:	strb	ip, [lr]
   2e544:	strb	r3, [r2, #1]
   2e548:	b	2e4f8 <__flatcc_fb_create_make_path_n@@Base+0x11c>
   2e54c:	ldrb	r4, [r0]
   2e550:	cmp	r4, #92	; 0x5c
   2e554:	cmpne	r4, #32
   2e558:	beq	2e4d4 <__flatcc_fb_create_make_path_n@@Base+0xf8>
   2e55c:	ldrd	r4, [sp]
   2e560:	ldrd	r6, [sp, #8]
   2e564:	ldr	r8, [sp, #16]
   2e568:	ldr	lr, [sp, #20]
   2e56c:	add	sp, sp, #24
   2e570:	b	2e0a8 <__flatcc_fb_copy_path_n@@Base>

0002e574 <__flatcc_fb_create_make_path@@Base>:
   2e574:	str	r4, [sp, #-8]!
   2e578:	mov	r4, r0
   2e57c:	str	lr, [sp, #4]
   2e580:	bl	1404c <strlen@plt>
   2e584:	mov	r1, r0
   2e588:	mov	r0, r4
   2e58c:	ldr	r4, [sp]
   2e590:	ldr	lr, [sp, #4]
   2e594:	add	sp, sp, #8
   2e598:	b	2e3dc <__flatcc_fb_create_make_path_n@@Base>

0002e59c <__flatcc_fb_find_basename@@Base>:
   2e59c:	add	r1, r0, r1
   2e5a0:	cmp	r0, r1
   2e5a4:	beq	2e5e0 <__flatcc_fb_find_basename@@Base+0x44>
   2e5a8:	ldrb	r2, [r1, #-1]
   2e5ac:	sub	r3, r1, #1
   2e5b0:	cmp	r2, #47	; 0x2f
   2e5b4:	cmpne	r2, #92	; 0x5c
   2e5b8:	bne	2e5d4 <__flatcc_fb_find_basename@@Base+0x38>
   2e5bc:	b	2e5ec <__flatcc_fb_find_basename@@Base+0x50>
   2e5c0:	ldrb	r2, [r3, #-1]
   2e5c4:	cmp	r2, #92	; 0x5c
   2e5c8:	cmpne	r2, #47	; 0x2f
   2e5cc:	beq	2e5e4 <__flatcc_fb_find_basename@@Base+0x48>
   2e5d0:	mov	r3, r1
   2e5d4:	cmp	r0, r3
   2e5d8:	sub	r1, r3, #1
   2e5dc:	bne	2e5c0 <__flatcc_fb_find_basename@@Base+0x24>
   2e5e0:	mov	r3, r0
   2e5e4:	sub	r0, r3, r0
   2e5e8:	bx	lr
   2e5ec:	mov	r3, r1
   2e5f0:	b	2e5e4 <__flatcc_fb_find_basename@@Base+0x48>

0002e5f4 <__flatcc_fb_create_basename@@Base>:
   2e5f4:	strd	r4, [sp, #-16]!
   2e5f8:	mov	r5, r1
   2e5fc:	mov	r4, r0
   2e600:	str	r6, [sp, #8]
   2e604:	mov	r6, r2
   2e608:	str	lr, [sp, #12]
   2e60c:	bl	2e59c <__flatcc_fb_find_basename@@Base>
   2e610:	add	r4, r4, r0
   2e614:	sub	r1, r5, r0
   2e618:	mov	r2, r6
   2e61c:	mov	r0, r4
   2e620:	bl	2e158 <__flatcc_fb_chomp@@Base>
   2e624:	mov	r5, r0
   2e628:	add	r0, r0, #1
   2e62c:	bl	14010 <malloc@plt>
   2e630:	subs	r6, r0, #0
   2e634:	beq	2e64c <__flatcc_fb_create_basename@@Base+0x58>
   2e638:	mov	r1, r4
   2e63c:	mov	r2, r5
   2e640:	bl	13fb0 <memcpy@plt>
   2e644:	mov	r3, #0
   2e648:	strb	r3, [r6, r5]
   2e64c:	mov	r0, r6
   2e650:	ldrd	r4, [sp]
   2e654:	ldr	r6, [sp, #8]
   2e658:	add	sp, sp, #12
   2e65c:	pop	{pc}		; (ldr pc, [sp], #4)

0002e660 <__flatcc_fb_read_file@@Base>:
   2e660:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2e664:	strd	r6, [sp, #8]
   2e668:	mov	r7, r1
   2e66c:	ldr	r1, [pc, #256]	; 2e774 <__flatcc_fb_read_file@@Base+0x114>
   2e670:	str	r8, [sp, #16]
   2e674:	subs	r8, r2, #0
   2e678:	str	lr, [sp, #20]
   2e67c:	sub	sp, sp, #8
   2e680:	addeq	r8, sp, #4
   2e684:	add	r1, pc, r1
   2e688:	bl	13f98 <fopen@plt>
   2e68c:	subs	r6, r0, #0
   2e690:	beq	2e760 <__flatcc_fb_read_file@@Base+0x100>
   2e694:	mov	r2, #2
   2e698:	mov	r1, #0
   2e69c:	bl	140f4 <fseek@plt>
   2e6a0:	mov	r0, r6
   2e6a4:	bl	13fbc <ftell@plt>
   2e6a8:	cmp	r0, r7
   2e6ac:	mov	r5, r0
   2e6b0:	movls	r4, #0
   2e6b4:	movhi	r4, #1
   2e6b8:	cmp	r7, #0
   2e6bc:	mov	r0, r6
   2e6c0:	str	r5, [r8]
   2e6c4:	moveq	r4, #0
   2e6c8:	cmp	r4, #0
   2e6cc:	bne	2e758 <__flatcc_fb_read_file@@Base+0xf8>
   2e6d0:	bl	13fd4 <rewind@plt>
   2e6d4:	cmp	r5, #0
   2e6d8:	movne	r0, r5
   2e6dc:	moveq	r0, #1
   2e6e0:	bl	14010 <malloc@plt>
   2e6e4:	subs	r7, r0, #0
   2e6e8:	bne	2e6f4 <__flatcc_fb_read_file@@Base+0x94>
   2e6ec:	b	2e768 <__flatcc_fb_read_file@@Base+0x108>
   2e6f0:	add	r4, r4, r0
   2e6f4:	mov	r3, r6
   2e6f8:	sub	r2, r5, r4
   2e6fc:	mov	r1, #1
   2e700:	add	r0, r7, r4
   2e704:	bl	13ff8 <fread@plt>
   2e708:	cmp	r0, #0
   2e70c:	bne	2e6f0 <__flatcc_fb_read_file@@Base+0x90>
   2e710:	cmp	r4, r5
   2e714:	mov	r0, r6
   2e718:	bne	2e740 <__flatcc_fb_read_file@@Base+0xe0>
   2e71c:	bl	140ac <fclose@plt>
   2e720:	str	r4, [r8]
   2e724:	mov	r0, r7
   2e728:	add	sp, sp, #8
   2e72c:	ldrd	r4, [sp]
   2e730:	ldrd	r6, [sp, #8]
   2e734:	ldr	r8, [sp, #16]
   2e738:	add	sp, sp, #20
   2e73c:	pop	{pc}		; (ldr pc, [sp], #4)
   2e740:	bl	140ac <fclose@plt>
   2e744:	mov	r0, r7
   2e748:	bl	13fa4 <free@plt>
   2e74c:	mov	r7, #0
   2e750:	str	r5, [r8]
   2e754:	b	2e724 <__flatcc_fb_read_file@@Base+0xc4>
   2e758:	bl	140ac <fclose@plt>
   2e75c:	b	2e74c <__flatcc_fb_read_file@@Base+0xec>
   2e760:	mov	r5, r6
   2e764:	b	2e74c <__flatcc_fb_read_file@@Base+0xec>
   2e768:	mov	r0, r6
   2e76c:	bl	140ac <fclose@plt>
   2e770:	b	2e74c <__flatcc_fb_read_file@@Base+0xec>
   2e774:	andeq	sl, r2, r0, asr r3

0002e778 <__flatcc_fb_default_error_out@@Base>:
   2e778:	ldr	r3, [pc, #24]	; 2e798 <__flatcc_fb_default_error_out@@Base+0x20>
   2e77c:	mov	r0, r1
   2e780:	mov	r1, #1
   2e784:	ldr	ip, [pc, #16]	; 2e79c <__flatcc_fb_default_error_out@@Base+0x24>
   2e788:	add	r3, pc, r3
   2e78c:	ldr	r3, [r3, ip]
   2e790:	ldr	r3, [r3]
   2e794:	b	13fec <fwrite@plt>
   2e798:	andeq	lr, r3, r0, ror r8
   2e79c:	andeq	r0, r0, r0, lsr #1
   2e7a0:	add	r0, r1, #4
   2e7a4:	b	2c6a0 <fb_symbol_table_clear@@Base>
   2e7a8:	ldr	r3, [pc, #48]	; 2e7e0 <__flatcc_fb_default_error_out@@Base+0x68>
   2e7ac:	mov	r2, #34	; 0x22
   2e7b0:	mov	r1, #1
   2e7b4:	str	r4, [sp, #-8]!
   2e7b8:	ldr	ip, [pc, #36]	; 2e7e4 <__flatcc_fb_default_error_out@@Base+0x6c>
   2e7bc:	str	lr, [sp, #4]
   2e7c0:	ldr	r0, [pc, #32]	; 2e7e8 <__flatcc_fb_default_error_out@@Base+0x70>
   2e7c4:	add	r3, pc, r3
   2e7c8:	ldr	r3, [r3, ip]
   2e7cc:	add	r0, pc, r0
   2e7d0:	ldr	r3, [r3]
   2e7d4:	bl	13fec <fwrite@plt>
   2e7d8:	mov	r0, #1
   2e7dc:	bl	14040 <exit@plt>
   2e7e0:	andeq	lr, r3, r4, lsr r8
   2e7e4:	andeq	r0, r0, r0, lsr #1
   2e7e8:	andeq	r3, r1, r0, rrx
   2e7ec:	ldr	ip, [r0, #28]
   2e7f0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2e7f4:	mov	r4, r0
   2e7f8:	ldr	r0, [r0, #20]
   2e7fc:	strd	r6, [sp, #8]
   2e800:	mov	r7, r1
   2e804:	mov	r6, r2
   2e808:	ldr	r1, [r4, #40]	; 0x28
   2e80c:	add	r5, ip, ip, lsl #2
   2e810:	str	r8, [sp, #16]
   2e814:	mov	r8, r3
   2e818:	str	lr, [sp, #20]
   2e81c:	add	r5, r0, r5, lsl #2
   2e820:	cmp	r5, r1
   2e824:	str	r5, [r4, #24]
   2e828:	beq	2e86c <__flatcc_fb_default_error_out@@Base+0xf4>
   2e82c:	ldr	r2, [r4, #60]	; 0x3c
   2e830:	sub	r8, r8, r6
   2e834:	add	r3, r1, #20
   2e838:	ldr	r0, [r4, #64]	; 0x40
   2e83c:	stm	r1, {r6, r8}
   2e840:	ldr	r8, [sp, #16]
   2e844:	sub	r6, r6, r2
   2e848:	add	r6, r6, #1
   2e84c:	str	r0, [r1, #8]
   2e850:	str	r6, [r1, #12]
   2e854:	str	r7, [r1, #16]
   2e858:	str	r3, [r4, #40]	; 0x28
   2e85c:	ldrd	r4, [sp]
   2e860:	ldrd	r6, [sp, #8]
   2e864:	add	sp, sp, #20
   2e868:	pop	{pc}		; (ldr pc, [sp], #4)
   2e86c:	cmp	ip, #0
   2e870:	sub	r5, r5, r0
   2e874:	moveq	r1, #20480	; 0x5000
   2e878:	moveq	r3, #1024	; 0x400
   2e87c:	bne	2e8ac <__flatcc_fb_default_error_out@@Base+0x134>
   2e880:	str	r3, [r4, #28]
   2e884:	bl	13fe0 <realloc@plt>
   2e888:	cmp	r0, #0
   2e88c:	str	r0, [r4, #20]
   2e890:	beq	2e8bc <__flatcc_fb_default_error_out@@Base+0x144>
   2e894:	ldr	r3, [r4, #28]
   2e898:	add	r1, r0, r5
   2e89c:	add	r3, r3, r3, lsl #2
   2e8a0:	add	r0, r0, r3, lsl #2
   2e8a4:	str	r0, [r4, #24]
   2e8a8:	b	2e82c <__flatcc_fb_default_error_out@@Base+0xb4>
   2e8ac:	lsl	r3, ip, #1
   2e8b0:	add	r1, r3, ip, lsl #3
   2e8b4:	lsl	r1, r1, #2
   2e8b8:	b	2e880 <__flatcc_fb_default_error_out@@Base+0x108>
   2e8bc:	bl	2e7a8 <__flatcc_fb_default_error_out@@Base+0x30>
   2e8c0:	ldr	ip, [r0, #40]	; 0x28
   2e8c4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2e8c8:	mov	r4, r0
   2e8cc:	strd	r6, [sp, #8]
   2e8d0:	ldr	r7, [r0, #24]
   2e8d4:	str	r8, [sp, #16]
   2e8d8:	ldr	r6, [pc, #280]	; 2e9f8 <__flatcc_fb_default_error_out@@Base+0x280>
   2e8dc:	add	r5, ip, #20
   2e8e0:	mov	r1, ip
   2e8e4:	str	lr, [sp, #20]
   2e8e8:	str	r5, [r0, #40]	; 0x28
   2e8ec:	cmp	r5, r7
   2e8f0:	add	r6, pc, r6
   2e8f4:	beq	2e9ac <__flatcc_fb_default_error_out@@Base+0x234>
   2e8f8:	ldr	r3, [ip, #36]	; 0x24
   2e8fc:	cmn	r3, #964	; 0x3c4
   2e900:	bne	2e994 <__flatcc_fb_default_error_out@@Base+0x21c>
   2e904:	mov	ip, r5
   2e908:	ldr	r2, [r0, #52]	; 0x34
   2e90c:	b	2e944 <__flatcc_fb_default_error_out@@Base+0x1cc>
   2e910:	ldr	r0, [r4, #36]	; 0x24
   2e914:	mov	r1, ip
   2e918:	str	r2, [r4, #52]	; 0x34
   2e91c:	stm	r3, {r0, r5}
   2e920:	add	r5, ip, #20
   2e924:	cmp	r5, r7
   2e928:	mov	ip, r5
   2e92c:	str	r3, [r4, #36]	; 0x24
   2e930:	str	r5, [r4, #40]	; 0x28
   2e934:	beq	2e9ac <__flatcc_fb_default_error_out@@Base+0x234>
   2e938:	ldr	r3, [r1, #36]	; 0x24
   2e93c:	cmn	r3, #964	; 0x3c4
   2e940:	bne	2e994 <__flatcc_fb_default_error_out@@Base+0x21c>
   2e944:	ldr	r3, [r4, #44]	; 0x2c
   2e948:	add	r1, r2, #16
   2e94c:	cmp	r1, r3
   2e950:	movls	r3, r2
   2e954:	movls	r2, r1
   2e958:	bls	2e910 <__flatcc_fb_default_error_out@@Base+0x198>
   2e95c:	mov	r1, #1
   2e960:	mov	r0, #65536	; 0x10000
   2e964:	bl	13f74 <calloc@plt>
   2e968:	cmp	r0, #0
   2e96c:	beq	2e9d0 <__flatcc_fb_default_error_out@@Base+0x258>
   2e970:	ldr	r1, [r4, #48]	; 0x30
   2e974:	add	ip, r0, #65536	; 0x10000
   2e978:	add	r3, r0, #16
   2e97c:	add	r2, r0, #32
   2e980:	str	ip, [r4, #44]	; 0x2c
   2e984:	str	r0, [r4, #48]	; 0x30
   2e988:	ldr	ip, [r4, #40]	; 0x28
   2e98c:	str	r1, [r0]
   2e990:	b	2e910 <__flatcc_fb_default_error_out@@Base+0x198>
   2e994:	mov	r0, r5
   2e998:	ldrd	r4, [sp]
   2e99c:	ldrd	r6, [sp, #8]
   2e9a0:	ldr	r8, [sp, #16]
   2e9a4:	add	sp, sp, #20
   2e9a8:	pop	{pc}		; (ldr pc, [sp], #4)
   2e9ac:	ldr	r3, [pc, #72]	; 2e9fc <__flatcc_fb_default_error_out@@Base+0x284>
   2e9b0:	movw	r2, #341	; 0x155
   2e9b4:	str	r1, [r4, #40]	; 0x28
   2e9b8:	ldr	r0, [pc, #64]	; 2ea00 <__flatcc_fb_default_error_out@@Base+0x288>
   2e9bc:	ldr	r1, [pc, #64]	; 2ea04 <__flatcc_fb_default_error_out@@Base+0x28c>
   2e9c0:	add	r3, pc, r3
   2e9c4:	add	r0, pc, r0
   2e9c8:	add	r1, pc, r1
   2e9cc:	bl	14118 <__assert_fail@plt>
   2e9d0:	ldr	r3, [pc, #48]	; 2ea08 <__flatcc_fb_default_error_out@@Base+0x290>
   2e9d4:	mov	r2, #34	; 0x22
   2e9d8:	mov	r1, #1
   2e9dc:	ldr	r0, [pc, #40]	; 2ea0c <__flatcc_fb_default_error_out@@Base+0x294>
   2e9e0:	ldr	r3, [r6, r3]
   2e9e4:	add	r0, pc, r0
   2e9e8:	ldr	r3, [r3]
   2e9ec:	bl	13fec <fwrite@plt>
   2e9f0:	mov	r0, #1
   2e9f4:	bl	14040 <exit@plt>
   2e9f8:	andeq	lr, r3, r8, lsl #14
   2e9fc:	andeq	sl, r2, r8, lsl r0
   2ea00:	andeq	fp, r1, r0, ror r9
   2ea04:	andeq	sl, r2, r8, lsr r1
   2ea08:	andeq	r0, r0, r0, lsr #1
   2ea0c:	andeq	r2, r1, r8, asr #28
   2ea10:	ldr	r3, [r0, #40]	; 0x28
   2ea14:	ldr	r3, [r3, #16]
   2ea18:	cmp	r3, #0
   2ea1c:	bxeq	lr
   2ea20:	str	r4, [sp, #-8]!
   2ea24:	mov	r4, r0
   2ea28:	str	lr, [sp, #4]
   2ea2c:	b	2ea50 <__flatcc_fb_default_error_out@@Base+0x2d8>
   2ea30:	cmp	r3, #125	; 0x7d
   2ea34:	beq	2ea74 <__flatcc_fb_default_error_out@@Base+0x2fc>
   2ea38:	mov	r0, r4
   2ea3c:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   2ea40:	ldr	r3, [r4, #40]	; 0x28
   2ea44:	ldr	r3, [r3, #16]
   2ea48:	cmp	r3, #0
   2ea4c:	beq	2ea68 <__flatcc_fb_default_error_out@@Base+0x2f0>
   2ea50:	cmp	r3, #59	; 0x3b
   2ea54:	bne	2ea30 <__flatcc_fb_default_error_out@@Base+0x2b8>
   2ea58:	mov	r0, r4
   2ea5c:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   2ea60:	mov	r3, #0
   2ea64:	str	r3, [r4, #36]	; 0x24
   2ea68:	ldr	r4, [sp]
   2ea6c:	add	sp, sp, #4
   2ea70:	pop	{pc}		; (ldr pc, [sp], #4)
   2ea74:	mov	r3, #0
   2ea78:	str	r3, [r4, #36]	; 0x24
   2ea7c:	ldr	r4, [sp]
   2ea80:	add	sp, sp, #4
   2ea84:	pop	{pc}		; (ldr pc, [sp], #4)
   2ea88:	ldr	r3, [r0, #40]	; 0x28
   2ea8c:	ldr	r3, [r3, #16]
   2ea90:	cmp	r3, #0
   2ea94:	bxeq	lr
   2ea98:	cmp	r1, r3
   2ea9c:	strd	r4, [sp, #-16]!
   2eaa0:	mov	r5, r1
   2eaa4:	mov	r4, r0
   2eaa8:	str	r6, [sp, #8]
   2eaac:	str	lr, [sp, #12]
   2eab0:	bne	2eac0 <__flatcc_fb_default_error_out@@Base+0x348>
   2eab4:	b	2eae8 <__flatcc_fb_default_error_out@@Base+0x370>
   2eab8:	cmp	r5, r3
   2eabc:	beq	2eae8 <__flatcc_fb_default_error_out@@Base+0x370>
   2eac0:	mov	r0, r4
   2eac4:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   2eac8:	ldr	r3, [r4, #40]	; 0x28
   2eacc:	ldr	r3, [r3, #16]
   2ead0:	cmp	r3, #0
   2ead4:	bne	2eab8 <__flatcc_fb_default_error_out@@Base+0x340>
   2ead8:	ldrd	r4, [sp]
   2eadc:	ldr	r6, [sp, #8]
   2eae0:	add	sp, sp, #12
   2eae4:	pop	{pc}		; (ldr pc, [sp], #4)
   2eae8:	mov	r0, r4
   2eaec:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   2eaf0:	mov	r3, #0
   2eaf4:	ldr	r6, [sp, #8]
   2eaf8:	str	r3, [r4, #36]	; 0x24
   2eafc:	ldrd	r4, [sp]
   2eb00:	add	sp, sp, #12
   2eb04:	pop	{pc}		; (ldr pc, [sp], #4)

0002eb08 <__flatcc_fb_print_error@@Base>:
   2eb08:	push	{r1, r2, r3}
   2eb0c:	mov	r1, #200	; 0xc8
   2eb10:	strd	r4, [sp, #-16]!
   2eb14:	mov	r5, r0
   2eb18:	str	r6, [sp, #8]
   2eb1c:	str	lr, [sp, #12]
   2eb20:	sub	sp, sp, #212	; 0xd4
   2eb24:	add	ip, sp, #232	; 0xe8
   2eb28:	add	r6, sp, #8
   2eb2c:	ldr	r2, [sp, #228]	; 0xe4
   2eb30:	mov	r3, ip
   2eb34:	mov	r0, r6
   2eb38:	str	ip, [sp, #4]
   2eb3c:	bl	140dc <vsnprintf@plt>
   2eb40:	cmp	r0, #199	; 0xc7
   2eb44:	movle	r4, r0
   2eb48:	bgt	2eb80 <__flatcc_fb_print_error@@Base+0x78>
   2eb4c:	ldr	r3, [r5, #8]
   2eb50:	mov	r1, r6
   2eb54:	mov	r2, r4
   2eb58:	ldr	r0, [r5, #12]
   2eb5c:	blx	r3
   2eb60:	mov	r0, r4
   2eb64:	add	sp, sp, #212	; 0xd4
   2eb68:	ldrd	r4, [sp]
   2eb6c:	ldr	r6, [sp, #8]
   2eb70:	ldr	lr, [sp, #12]
   2eb74:	add	sp, sp, #16
   2eb78:	add	sp, sp, #12
   2eb7c:	bx	lr
   2eb80:	ldr	r3, [pc, #24]	; 2eba0 <__flatcc_fb_print_error@@Base+0x98>
   2eb84:	mov	r4, #199	; 0xc7
   2eb88:	add	r3, pc, r3
   2eb8c:	ldr	r2, [r3]
   2eb90:	ldrb	r3, [r3, #4]
   2eb94:	str	r2, [sp, #203]	; 0xcb
   2eb98:	strb	r3, [sp, #207]	; 0xcf
   2eb9c:	b	2eb4c <__flatcc_fb_print_error@@Base+0x44>
   2eba0:	ldrdeq	r9, [r2], -r8

0002eba4 <__flatcc_error_find_file_of_token@@Base>:
   2eba4:	cmp	r0, #0
   2eba8:	beq	2ebe4 <__flatcc_error_find_file_of_token@@Base+0x40>
   2ebac:	ldr	r3, [r0, #20]
   2ebb0:	cmp	r3, r1
   2ebb4:	bhi	2ebc4 <__flatcc_error_find_file_of_token@@Base+0x20>
   2ebb8:	ldr	r3, [r0, #24]
   2ebbc:	cmp	r3, r1
   2ebc0:	bhi	2ebdc <__flatcc_error_find_file_of_token@@Base+0x38>
   2ebc4:	ldr	r0, [r0]
   2ebc8:	cmp	r0, #0
   2ebcc:	bne	2ebac <__flatcc_error_find_file_of_token@@Base+0x8>
   2ebd0:	ldr	r0, [pc, #24]	; 2ebf0 <__flatcc_error_find_file_of_token@@Base+0x4c>
   2ebd4:	add	r0, pc, r0
   2ebd8:	bx	lr
   2ebdc:	ldr	r0, [r0, #520]	; 0x208
   2ebe0:	bx	lr
   2ebe4:	ldr	r0, [pc, #8]	; 2ebf4 <__flatcc_error_find_file_of_token@@Base+0x50>
   2ebe8:	add	r0, pc, r0
   2ebec:	bx	lr
   2ebf0:	andeq	ip, r1, r4, ror #31
   2ebf4:	ldrdeq	ip, [r1], -r0

0002ebf8 <__flatcc_error_report@@Base>:
   2ebf8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   2ebfc:	adds	ip, r1, #0
   2ec00:	mov	r4, r3
   2ec04:	strd	r6, [sp, #8]
   2ec08:	movne	ip, #1
   2ec0c:	mov	r5, r0
   2ec10:	strd	r8, [sp, #16]
   2ec14:	mov	r7, r1
   2ec18:	mov	r8, r2
   2ec1c:	str	sl, [sp, #24]
   2ec20:	str	lr, [sp, #28]
   2ec24:	sub	sp, sp, #40	; 0x28
   2ec28:	ldr	r6, [sp, #72]	; 0x48
   2ec2c:	ldr	r9, [sp, #76]	; 0x4c
   2ec30:	cmp	r6, #0
   2ec34:	moveq	r3, ip
   2ec38:	movne	r3, #0
   2ec3c:	cmp	r3, #0
   2ec40:	ldmne	r1, {r6, r9}
   2ec44:	cmp	r2, #0
   2ec48:	beq	2eda4 <__flatcc_error_report@@Base+0x1ac>
   2ec4c:	cmp	r6, #0
   2ec50:	beq	2ed94 <__flatcc_error_report@@Base+0x19c>
   2ec54:	cmp	r4, #0
   2ec58:	moveq	r3, ip
   2ec5c:	movne	r3, #0
   2ec60:	cmp	r3, #0
   2ec64:	bne	2ed58 <__flatcc_error_report@@Base+0x160>
   2ec68:	cmp	r4, #0
   2ec6c:	moveq	ip, #0
   2ec70:	cmp	ip, #0
   2ec74:	bne	2ece8 <__flatcc_error_report@@Base+0xf0>
   2ec78:	orrs	r3, r7, r4
   2ec7c:	beq	2edb0 <__flatcc_error_report@@Base+0x1b8>
   2ec80:	cmp	r4, #0
   2ec84:	beq	2edc8 <__flatcc_error_report@@Base+0x1d0>
   2ec88:	mov	r1, r4
   2ec8c:	mov	r0, r5
   2ec90:	bl	2eba4 <__flatcc_error_find_file_of_token@@Base>
   2ec94:	ldm	r4, {ip, lr}
   2ec98:	mov	r3, r0
   2ec9c:	mov	r2, r8
   2eca0:	mov	r0, r5
   2eca4:	ldr	r1, [r4, #8]
   2eca8:	str	ip, [sp, #12]
   2ecac:	ldr	ip, [r4, #12]
   2ecb0:	stm	sp, {r1, ip, lr}
   2ecb4:	ldr	r1, [pc, #288]	; 2eddc <__flatcc_error_report@@Base+0x1e4>
   2ecb8:	add	r1, pc, r1
   2ecbc:	bl	2eb08 <__flatcc_fb_print_error@@Base>
   2ecc0:	ldr	r3, [r5, #108]	; 0x6c
   2ecc4:	add	r3, r3, #1
   2ecc8:	str	r3, [r5, #108]	; 0x6c
   2eccc:	add	sp, sp, #40	; 0x28
   2ecd0:	ldrd	r4, [sp]
   2ecd4:	ldrd	r6, [sp, #8]
   2ecd8:	ldrd	r8, [sp, #16]
   2ecdc:	ldr	sl, [sp, #24]
   2ece0:	add	sp, sp, #28
   2ece4:	pop	{pc}		; (ldr pc, [sp], #4)
   2ece8:	mov	r1, r7
   2ecec:	mov	r0, r5
   2ecf0:	bl	2eba4 <__flatcc_error_find_file_of_token@@Base>
   2ecf4:	mov	sl, r0
   2ecf8:	mov	r1, r4
   2ecfc:	mov	r0, r5
   2ed00:	bl	2eba4 <__flatcc_error_find_file_of_token@@Base>
   2ed04:	ldr	r1, [r4]
   2ed08:	mov	r2, sl
   2ed0c:	str	r9, [sp, #4]
   2ed10:	ldr	lr, [r4, #4]
   2ed14:	str	r6, [sp, #8]
   2ed18:	ldr	ip, [r4, #8]
   2ed1c:	str	r8, [sp, #12]
   2ed20:	ldr	r3, [r4, #12]
   2ed24:	str	r0, [sp, #16]
   2ed28:	mov	r0, r5
   2ed2c:	str	ip, [sp, #20]
   2ed30:	str	lr, [sp, #28]
   2ed34:	str	r3, [sp, #24]
   2ed38:	str	r1, [sp, #32]
   2ed3c:	ldr	r1, [pc, #156]	; 2ede0 <__flatcc_error_report@@Base+0x1e8>
   2ed40:	ldr	r3, [r7, #12]
   2ed44:	add	r1, pc, r1
   2ed48:	str	r3, [sp]
   2ed4c:	ldr	r3, [r7, #8]
   2ed50:	bl	2eb08 <__flatcc_fb_print_error@@Base>
   2ed54:	b	2ecc0 <__flatcc_error_report@@Base+0xc8>
   2ed58:	mov	r1, r7
   2ed5c:	mov	r0, r5
   2ed60:	bl	2eba4 <__flatcc_error_find_file_of_token@@Base>
   2ed64:	ldr	r1, [pc, #120]	; 2ede4 <__flatcc_error_report@@Base+0x1ec>
   2ed68:	mov	r2, r0
   2ed6c:	mov	r0, r5
   2ed70:	str	r9, [sp, #4]
   2ed74:	str	r6, [sp, #8]
   2ed78:	str	r8, [sp, #12]
   2ed7c:	ldr	r3, [r7, #12]
   2ed80:	add	r1, pc, r1
   2ed84:	str	r3, [sp]
   2ed88:	ldr	r3, [r7, #8]
   2ed8c:	bl	2eb08 <__flatcc_fb_print_error@@Base>
   2ed90:	b	2ecc0 <__flatcc_error_report@@Base+0xc8>
   2ed94:	mov	r9, r6
   2ed98:	ldr	r6, [pc, #72]	; 2ede8 <__flatcc_error_report@@Base+0x1f0>
   2ed9c:	add	r6, pc, r6
   2eda0:	b	2ec54 <__flatcc_error_report@@Base+0x5c>
   2eda4:	ldr	r8, [pc, #64]	; 2edec <__flatcc_error_report@@Base+0x1f4>
   2eda8:	add	r8, pc, r8
   2edac:	b	2ec4c <__flatcc_error_report@@Base+0x54>
   2edb0:	ldr	r1, [pc, #56]	; 2edf0 <__flatcc_error_report@@Base+0x1f8>
   2edb4:	mov	r2, r8
   2edb8:	mov	r0, r5
   2edbc:	add	r1, pc, r1
   2edc0:	bl	2eb08 <__flatcc_fb_print_error@@Base>
   2edc4:	b	2ecc0 <__flatcc_error_report@@Base+0xc8>
   2edc8:	ldr	r1, [pc, #36]	; 2edf4 <__flatcc_error_report@@Base+0x1fc>
   2edcc:	mov	r0, r5
   2edd0:	add	r1, pc, r1
   2edd4:	bl	2eb08 <__flatcc_fb_print_error@@Base>
   2edd8:	b	2ecc0 <__flatcc_error_report@@Base+0xc8>
   2eddc:	andeq	r9, r2, r0, lsl pc
   2ede0:	andeq	r9, r2, r4, asr #28
   2ede4:	andeq	r9, r2, r8, ror #27
   2ede8:	andeq	ip, r1, ip, lsl lr
   2edec:	andeq	ip, r1, r0, lsl lr
   2edf0:	andeq	r9, r2, r0, lsl #28
   2edf4:	andeq	r9, r2, r8, lsl lr
   2edf8:	ldr	r3, [r0, #52]	; 0x34
   2edfc:	strd	r4, [sp, #-16]!
   2ee00:	mov	r5, r1
   2ee04:	mov	r4, r0
   2ee08:	ldr	r1, [r0, #44]	; 0x2c
   2ee0c:	str	r6, [sp, #8]
   2ee10:	str	lr, [sp, #12]
   2ee14:	sub	sp, sp, #8
   2ee18:	add	r2, r3, #16
   2ee1c:	ldr	r6, [r0, #40]	; 0x28
   2ee20:	cmp	r2, r1
   2ee24:	bhi	2eebc <__flatcc_error_report@@Base+0x2c4>
   2ee28:	mov	r0, r4
   2ee2c:	str	r2, [r4, #52]	; 0x34
   2ee30:	str	r6, [r3, #4]
   2ee34:	str	r3, [r5]
   2ee38:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   2ee3c:	ldr	r3, [r4, #40]	; 0x28
   2ee40:	ldr	r3, [r3, #16]
   2ee44:	cmp	r3, #46	; 0x2e
   2ee48:	beq	2ee60 <__flatcc_error_report@@Base+0x268>
   2ee4c:	add	sp, sp, #8
   2ee50:	ldrd	r4, [sp]
   2ee54:	ldr	r6, [sp, #8]
   2ee58:	add	sp, sp, #12
   2ee5c:	pop	{pc}		; (ldr pc, [sp], #4)
   2ee60:	ldr	r6, [r5]
   2ee64:	mov	r0, r4
   2ee68:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   2ee6c:	ldr	r5, [r4, #40]	; 0x28
   2ee70:	ldr	r3, [r5, #16]
   2ee74:	cmp	r3, #9
   2ee78:	bne	2ef24 <__flatcc_error_report@@Base+0x32c>
   2ee7c:	ldr	r1, [r4, #44]	; 0x2c
   2ee80:	ldr	r3, [r4, #52]	; 0x34
   2ee84:	add	r2, r3, #16
   2ee88:	cmp	r2, r1
   2ee8c:	bhi	2eef0 <__flatcc_error_report@@Base+0x2f8>
   2ee90:	mov	r0, r4
   2ee94:	str	r2, [r4, #52]	; 0x34
   2ee98:	str	r5, [r3, #4]
   2ee9c:	str	r3, [r6]
   2eea0:	mov	r6, r3
   2eea4:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   2eea8:	ldr	r3, [r4, #40]	; 0x28
   2eeac:	ldr	r3, [r3, #16]
   2eeb0:	cmp	r3, #46	; 0x2e
   2eeb4:	bne	2ee4c <__flatcc_error_report@@Base+0x254>
   2eeb8:	b	2ee64 <__flatcc_error_report@@Base+0x26c>
   2eebc:	mov	r1, #1
   2eec0:	mov	r0, #65536	; 0x10000
   2eec4:	bl	13f74 <calloc@plt>
   2eec8:	cmp	r0, #0
   2eecc:	beq	2ef4c <__flatcc_error_report@@Base+0x354>
   2eed0:	ldr	r1, [r4, #48]	; 0x30
   2eed4:	add	ip, r0, #65536	; 0x10000
   2eed8:	add	r3, r0, #16
   2eedc:	add	r2, r0, #32
   2eee0:	str	ip, [r4, #44]	; 0x2c
   2eee4:	str	r0, [r4, #48]	; 0x30
   2eee8:	str	r1, [r0]
   2eeec:	b	2ee28 <__flatcc_error_report@@Base+0x230>
   2eef0:	mov	r1, #1
   2eef4:	mov	r0, #65536	; 0x10000
   2eef8:	bl	13f74 <calloc@plt>
   2eefc:	cmp	r0, #0
   2ef00:	beq	2ef4c <__flatcc_error_report@@Base+0x354>
   2ef04:	ldr	r1, [r4, #48]	; 0x30
   2ef08:	add	ip, r0, #65536	; 0x10000
   2ef0c:	add	r3, r0, #16
   2ef10:	add	r2, r0, #32
   2ef14:	str	ip, [r4, #44]	; 0x2c
   2ef18:	str	r0, [r4, #48]	; 0x30
   2ef1c:	str	r1, [r0]
   2ef20:	b	2ee90 <__flatcc_error_report@@Base+0x298>
   2ef24:	ldr	r2, [pc, #36]	; 2ef50 <__flatcc_error_report@@Base+0x358>
   2ef28:	mov	ip, #0
   2ef2c:	mov	r1, r5
   2ef30:	mov	r0, r4
   2ef34:	mov	r3, ip
   2ef38:	str	ip, [sp]
   2ef3c:	str	ip, [sp, #4]
   2ef40:	add	r2, pc, r2
   2ef44:	bl	2ebf8 <__flatcc_error_report@@Base>
   2ef48:	b	2ee4c <__flatcc_error_report@@Base+0x254>
   2ef4c:	bl	2e7a8 <__flatcc_fb_default_error_out@@Base+0x30>
   2ef50:	andeq	r9, r2, ip, asr #25
   2ef54:	strd	r4, [sp, #-12]!
   2ef58:	ldr	r5, [r0, #40]	; 0x28
   2ef5c:	ldr	ip, [r5, #16]
   2ef60:	str	lr, [sp, #8]
   2ef64:	mov	lr, #0
   2ef68:	sub	sp, sp, #12
   2ef6c:	str	lr, [r0, #36]	; 0x24
   2ef70:	cmp	ip, r1
   2ef74:	bne	2ef8c <__flatcc_error_report@@Base+0x394>
   2ef78:	add	sp, sp, #12
   2ef7c:	ldrd	r4, [sp]
   2ef80:	ldr	lr, [sp, #8]
   2ef84:	add	sp, sp, #12
   2ef88:	b	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   2ef8c:	mov	r4, r0
   2ef90:	mov	r1, r5
   2ef94:	str	lr, [sp]
   2ef98:	str	lr, [sp, #4]
   2ef9c:	bl	2ebf8 <__flatcc_error_report@@Base>
   2efa0:	ldr	r0, [r4, #40]	; 0x28
   2efa4:	add	sp, sp, #12
   2efa8:	ldrd	r4, [sp]
   2efac:	add	sp, sp, #8
   2efb0:	pop	{pc}		; (ldr pc, [sp], #4)
   2efb4:	strd	r4, [sp, #-20]!	; 0xffffffec
   2efb8:	mov	r3, #1
   2efbc:	mov	r4, r0
   2efc0:	strd	r6, [sp, #8]
   2efc4:	mov	r7, r1
   2efc8:	ldr	r6, [r0, #40]	; 0x28
   2efcc:	str	lr, [sp, #16]
   2efd0:	sub	sp, sp, #12
   2efd4:	strh	r3, [r1, #8]
   2efd8:	ldr	r3, [r6, #16]
   2efdc:	cmp	r3, #91	; 0x5b
   2efe0:	beq	2f1ac <__flatcc_error_report@@Base+0x5b4>
   2efe4:	cmn	r3, #984	; 0x3d8
   2efe8:	ble	2f070 <__flatcc_error_report@@Base+0x478>
   2efec:	movw	r2, #64562	; 0xfc32
   2eff0:	movt	r2, #65535	; 0xffff
   2eff4:	cmp	r3, r2
   2eff8:	beq	2f2e0 <__flatcc_error_report@@Base+0x6e8>
   2effc:	ble	2f180 <__flatcc_error_report@@Base+0x588>
   2f000:	cmp	r3, #9
   2f004:	beq	2f2cc <__flatcc_error_report@@Base+0x6d4>
   2f008:	cmp	r3, #93	; 0x5d
   2f00c:	moveq	r5, #0
   2f010:	beq	2f22c <__flatcc_error_report@@Base+0x634>
   2f014:	cmn	r3, #972	; 0x3cc
   2f018:	beq	2f09c <__flatcc_error_report@@Base+0x4a4>
   2f01c:	mov	r5, #0
   2f020:	ldr	r2, [pc, #932]	; 2f3cc <__flatcc_error_report@@Base+0x7d4>
   2f024:	mov	ip, #0
   2f028:	add	r2, pc, r2
   2f02c:	mov	r0, r4
   2f030:	mov	r3, ip
   2f034:	str	ip, [sp]
   2f038:	mov	r1, ip
   2f03c:	str	ip, [sp, #4]
   2f040:	bl	2ebf8 <__flatcc_error_report@@Base>
   2f044:	ldr	r3, [r4, #40]	; 0x28
   2f048:	ldr	r3, [r3, #16]
   2f04c:	cmp	r3, #93	; 0x5d
   2f050:	beq	2f0c4 <__flatcc_error_report@@Base+0x4cc>
   2f054:	cmp	r5, #0
   2f058:	bne	2f0d8 <__flatcc_error_report@@Base+0x4e0>
   2f05c:	add	sp, sp, #12
   2f060:	ldrd	r4, [sp]
   2f064:	ldrd	r6, [sp, #8]
   2f068:	add	sp, sp, #16
   2f06c:	pop	{pc}		; (ldr pc, [sp], #4)
   2f070:	mvn	r2, #984	; 0x3d8
   2f074:	cmp	r3, r2
   2f078:	bge	2f09c <__flatcc_error_report@@Base+0x4a4>
   2f07c:	cmn	r3, #988	; 0x3dc
   2f080:	bge	2f160 <__flatcc_error_report@@Base+0x568>
   2f084:	cmn	r3, #996	; 0x3e4
   2f088:	bge	2f09c <__flatcc_error_report@@Base+0x4a4>
   2f08c:	add	r3, r3, #996	; 0x3e4
   2f090:	add	r3, r3, #3
   2f094:	cmp	r3, #1
   2f098:	bhi	2f01c <__flatcc_error_report@@Base+0x424>
   2f09c:	mov	r5, #0
   2f0a0:	mov	r3, #8
   2f0a4:	str	r6, [r7]
   2f0a8:	mov	r0, r4
   2f0ac:	strh	r3, [r7, #8]
   2f0b0:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   2f0b4:	ldr	r3, [r4, #40]	; 0x28
   2f0b8:	ldr	r3, [r3, #16]
   2f0bc:	cmp	r3, #93	; 0x5d
   2f0c0:	bne	2f054 <__flatcc_error_report@@Base+0x45c>
   2f0c4:	sub	r5, r5, #1
   2f0c8:	mov	r0, r4
   2f0cc:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   2f0d0:	cmn	r5, #1
   2f0d4:	bne	2f044 <__flatcc_error_report@@Base+0x44c>
   2f0d8:	ldr	r2, [pc, #752]	; 2f3d0 <__flatcc_error_report@@Base+0x7d8>
   2f0dc:	mov	r5, #0
   2f0e0:	mov	r3, r6
   2f0e4:	mov	r1, r5
   2f0e8:	mov	r0, r4
   2f0ec:	str	r5, [sp]
   2f0f0:	str	r5, [sp, #4]
   2f0f4:	add	r2, pc, r2
   2f0f8:	bl	2ebf8 <__flatcc_error_report@@Base>
   2f0fc:	ldr	r7, [r4, #40]	; 0x28
   2f100:	ldr	r3, [r7, #16]
   2f104:	cmp	r3, #93	; 0x5d
   2f108:	bne	2f05c <__flatcc_error_report@@Base+0x464>
   2f10c:	mov	r0, r4
   2f110:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   2f114:	ldr	r2, [pc, #696]	; 2f3d4 <__flatcc_error_report@@Base+0x7dc>
   2f118:	mov	r3, r6
   2f11c:	mov	r1, r7
   2f120:	mov	r0, r4
   2f124:	str	r5, [sp]
   2f128:	str	r5, [sp, #4]
   2f12c:	add	r2, pc, r2
   2f130:	bl	2ebf8 <__flatcc_error_report@@Base>
   2f134:	ldr	r3, [r4, #40]	; 0x28
   2f138:	ldr	r3, [r3, #16]
   2f13c:	cmp	r3, #93	; 0x5d
   2f140:	bne	2f05c <__flatcc_error_report@@Base+0x464>
   2f144:	mov	r0, r4
   2f148:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   2f14c:	ldr	r3, [r4, #40]	; 0x28
   2f150:	ldr	r3, [r3, #16]
   2f154:	cmp	r3, #93	; 0x5d
   2f158:	bne	2f05c <__flatcc_error_report@@Base+0x464>
   2f15c:	b	2f144 <__flatcc_error_report@@Base+0x54c>
   2f160:	movw	r2, #64549	; 0xfc25
   2f164:	movt	r2, #65535	; 0xffff
   2f168:	cmp	r3, r2
   2f16c:	bne	2f01c <__flatcc_error_report@@Base+0x424>
   2f170:	mov	r5, #0
   2f174:	mov	r3, #8
   2f178:	str	r6, [r7]
   2f17c:	b	2f0a8 <__flatcc_error_report@@Base+0x4b0>
   2f180:	movw	r2, #64554	; 0xfc2a
   2f184:	movt	r2, #65535	; 0xffff
   2f188:	cmp	r3, r2
   2f18c:	blt	2f01c <__flatcc_error_report@@Base+0x424>
   2f190:	cmn	r3, #976	; 0x3d0
   2f194:	blt	2f09c <__flatcc_error_report@@Base+0x4a4>
   2f198:	movw	r2, #64561	; 0xfc31
   2f19c:	movt	r2, #65535	; 0xffff
   2f1a0:	cmp	r3, r2
   2f1a4:	bne	2f01c <__flatcc_error_report@@Base+0x424>
   2f1a8:	b	2f09c <__flatcc_error_report@@Base+0x4a4>
   2f1ac:	mov	r5, #0
   2f1b0:	mov	r0, r4
   2f1b4:	add	r5, r5, #1
   2f1b8:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   2f1bc:	ldr	r2, [r4, #40]	; 0x28
   2f1c0:	ldr	r3, [r2, #16]
   2f1c4:	cmp	r3, #91	; 0x5b
   2f1c8:	beq	2f1b0 <__flatcc_error_report@@Base+0x5b8>
   2f1cc:	cmp	r5, #1
   2f1d0:	beq	2f31c <__flatcc_error_report@@Base+0x724>
   2f1d4:	ldr	r2, [pc, #508]	; 2f3d8 <__flatcc_error_report@@Base+0x7e0>
   2f1d8:	mov	ip, #0
   2f1dc:	mov	r1, r6
   2f1e0:	mov	r3, ip
   2f1e4:	mov	r0, r4
   2f1e8:	str	ip, [sp]
   2f1ec:	str	ip, [sp, #4]
   2f1f0:	add	r2, pc, r2
   2f1f4:	bl	2ebf8 <__flatcc_error_report@@Base>
   2f1f8:	ldr	r2, [r4, #40]	; 0x28
   2f1fc:	ldr	r3, [r2, #16]
   2f200:	cmn	r3, #984	; 0x3d8
   2f204:	ble	2f23c <__flatcc_error_report@@Base+0x644>
   2f208:	movw	r1, #64562	; 0xfc32
   2f20c:	movt	r1, #65535	; 0xffff
   2f210:	cmp	r3, r1
   2f214:	beq	2f310 <__flatcc_error_report@@Base+0x718>
   2f218:	ble	2f278 <__flatcc_error_report@@Base+0x680>
   2f21c:	cmp	r3, #9
   2f220:	beq	2f2fc <__flatcc_error_report@@Base+0x704>
   2f224:	cmp	r3, #93	; 0x5d
   2f228:	bne	2f26c <__flatcc_error_report@@Base+0x674>
   2f22c:	ldr	r2, [pc, #424]	; 2f3dc <__flatcc_error_report@@Base+0x7e4>
   2f230:	mov	ip, #0
   2f234:	add	r2, pc, r2
   2f238:	b	2f02c <__flatcc_error_report@@Base+0x434>
   2f23c:	mvn	r1, #984	; 0x3d8
   2f240:	cmp	r3, r1
   2f244:	bge	2f2a0 <__flatcc_error_report@@Base+0x6a8>
   2f248:	cmn	r3, #988	; 0x3dc
   2f24c:	bge	2f2b8 <__flatcc_error_report@@Base+0x6c0>
   2f250:	cmn	r3, #996	; 0x3e4
   2f254:	bge	2f2a0 <__flatcc_error_report@@Base+0x6a8>
   2f258:	add	r3, r3, #996	; 0x3e4
   2f25c:	add	r3, r3, #3
   2f260:	cmp	r3, #1
   2f264:	bhi	2f020 <__flatcc_error_report@@Base+0x428>
   2f268:	b	2f2a0 <__flatcc_error_report@@Base+0x6a8>
   2f26c:	cmn	r3, #972	; 0x3cc
   2f270:	bne	2f020 <__flatcc_error_report@@Base+0x428>
   2f274:	b	2f2a0 <__flatcc_error_report@@Base+0x6a8>
   2f278:	movw	r1, #64554	; 0xfc2a
   2f27c:	movt	r1, #65535	; 0xffff
   2f280:	cmp	r3, r1
   2f284:	blt	2f020 <__flatcc_error_report@@Base+0x428>
   2f288:	cmn	r3, #976	; 0x3d0
   2f28c:	blt	2f2a0 <__flatcc_error_report@@Base+0x6a8>
   2f290:	movw	r1, #64561	; 0xfc31
   2f294:	movt	r1, #65535	; 0xffff
   2f298:	cmp	r3, r1
   2f29c:	bne	2f020 <__flatcc_error_report@@Base+0x428>
   2f2a0:	mov	r3, #7
   2f2a4:	mov	r0, r4
   2f2a8:	str	r2, [r7]
   2f2ac:	strh	r3, [r7, #8]
   2f2b0:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   2f2b4:	b	2f0b4 <__flatcc_error_report@@Base+0x4bc>
   2f2b8:	movw	r1, #64549	; 0xfc25
   2f2bc:	movt	r1, #65535	; 0xffff
   2f2c0:	cmp	r3, r1
   2f2c4:	bne	2f020 <__flatcc_error_report@@Base+0x428>
   2f2c8:	b	2f2a0 <__flatcc_error_report@@Base+0x6a8>
   2f2cc:	bl	2edf8 <__flatcc_error_report@@Base+0x200>
   2f2d0:	mov	r5, #0
   2f2d4:	mov	r3, #12
   2f2d8:	strh	r3, [r7, #8]
   2f2dc:	b	2f044 <__flatcc_error_report@@Base+0x44c>
   2f2e0:	mov	r3, #10
   2f2e4:	mov	r0, r4
   2f2e8:	str	r6, [r1]
   2f2ec:	mov	r5, #0
   2f2f0:	strh	r3, [r7, #8]
   2f2f4:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   2f2f8:	b	2f0b4 <__flatcc_error_report@@Base+0x4bc>
   2f2fc:	mov	r1, r7
   2f300:	mov	r0, r4
   2f304:	bl	2edf8 <__flatcc_error_report@@Base+0x200>
   2f308:	mov	r3, #11
   2f30c:	b	2f2d8 <__flatcc_error_report@@Base+0x6e0>
   2f310:	mov	r3, #9
   2f314:	str	r2, [r7]
   2f318:	b	2f0a8 <__flatcc_error_report@@Base+0x4b0>
   2f31c:	cmn	r3, #984	; 0x3d8
   2f320:	ble	2f35c <__flatcc_error_report@@Base+0x764>
   2f324:	movw	r1, #64562	; 0xfc32
   2f328:	movt	r1, #65535	; 0xffff
   2f32c:	cmp	r3, r1
   2f330:	beq	2f310 <__flatcc_error_report@@Base+0x718>
   2f334:	ble	2f38c <__flatcc_error_report@@Base+0x794>
   2f338:	cmp	r3, #9
   2f33c:	beq	2f2fc <__flatcc_error_report@@Base+0x704>
   2f340:	cmp	r3, #93	; 0x5d
   2f344:	beq	2f22c <__flatcc_error_report@@Base+0x634>
   2f348:	cmn	r3, #972	; 0x3cc
   2f34c:	bne	2f020 <__flatcc_error_report@@Base+0x428>
   2f350:	mov	r3, #7
   2f354:	str	r2, [r7]
   2f358:	b	2f0a8 <__flatcc_error_report@@Base+0x4b0>
   2f35c:	mvn	r1, #984	; 0x3d8
   2f360:	cmp	r3, r1
   2f364:	bge	2f350 <__flatcc_error_report@@Base+0x758>
   2f368:	cmn	r3, #988	; 0x3dc
   2f36c:	bge	2f3b8 <__flatcc_error_report@@Base+0x7c0>
   2f370:	cmn	r3, #996	; 0x3e4
   2f374:	bge	2f350 <__flatcc_error_report@@Base+0x758>
   2f378:	add	r3, r3, #996	; 0x3e4
   2f37c:	add	r3, r3, #3
   2f380:	cmp	r3, #1
   2f384:	bhi	2f020 <__flatcc_error_report@@Base+0x428>
   2f388:	b	2f350 <__flatcc_error_report@@Base+0x758>
   2f38c:	movw	r1, #64554	; 0xfc2a
   2f390:	movt	r1, #65535	; 0xffff
   2f394:	cmp	r3, r1
   2f398:	blt	2f020 <__flatcc_error_report@@Base+0x428>
   2f39c:	cmn	r3, #976	; 0x3d0
   2f3a0:	blt	2f350 <__flatcc_error_report@@Base+0x758>
   2f3a4:	movw	r1, #64561	; 0xfc31
   2f3a8:	movt	r1, #65535	; 0xffff
   2f3ac:	cmp	r3, r1
   2f3b0:	beq	2f350 <__flatcc_error_report@@Base+0x758>
   2f3b4:	b	2f020 <__flatcc_error_report@@Base+0x428>
   2f3b8:	movw	r1, #64549	; 0xfc25
   2f3bc:	movt	r1, #65535	; 0xffff
   2f3c0:	cmp	r3, r1
   2f3c4:	bne	2f020 <__flatcc_error_report@@Base+0x428>
   2f3c8:	b	2f350 <__flatcc_error_report@@Base+0x758>
   2f3cc:	andeq	r9, r2, r0, asr ip
   2f3d0:	muleq	r2, ip, fp
   2f3d4:	andeq	r9, r2, r8, lsl #23
   2f3d8:	andeq	r9, r2, r4, asr #20
   2f3dc:	andeq	r9, r2, r8, lsr #20
   2f3e0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2f3e4:	mov	r4, r0
   2f3e8:	mov	r5, r1
   2f3ec:	strd	r6, [sp, #8]
   2f3f0:	ldr	r7, [pc, #452]	; 2f5bc <__flatcc_error_report@@Base+0x9c4>
   2f3f4:	str	r8, [sp, #16]
   2f3f8:	ldr	r6, [pc, #448]	; 2f5c0 <__flatcc_error_report@@Base+0x9c8>
   2f3fc:	str	lr, [sp, #20]
   2f400:	sub	sp, sp, #8
   2f404:	ldr	r8, [pc, #440]	; 2f5c4 <__flatcc_error_report@@Base+0x9cc>
   2f408:	add	r7, pc, r7
   2f40c:	add	r6, pc, r6
   2f410:	add	r8, pc, r8
   2f414:	ldr	r1, [r4, #40]	; 0x28
   2f418:	ldr	r3, [r1, #16]
   2f41c:	sub	r3, r3, #6
   2f420:	cmp	r3, #17
   2f424:	addls	pc, pc, r3, lsl #2
   2f428:	b	2f474 <__flatcc_error_report@@Base+0x87c>
   2f42c:	b	2f55c <__flatcc_error_report@@Base+0x964>
   2f430:	b	2f474 <__flatcc_error_report@@Base+0x87c>
   2f434:	b	2f474 <__flatcc_error_report@@Base+0x87c>
   2f438:	b	2f474 <__flatcc_error_report@@Base+0x87c>
   2f43c:	b	2f474 <__flatcc_error_report@@Base+0x87c>
   2f440:	b	2f474 <__flatcc_error_report@@Base+0x87c>
   2f444:	b	2f474 <__flatcc_error_report@@Base+0x87c>
   2f448:	b	2f474 <__flatcc_error_report@@Base+0x87c>
   2f44c:	b	2f474 <__flatcc_error_report@@Base+0x87c>
   2f450:	b	2f474 <__flatcc_error_report@@Base+0x87c>
   2f454:	b	2f474 <__flatcc_error_report@@Base+0x87c>
   2f458:	b	2f474 <__flatcc_error_report@@Base+0x87c>
   2f45c:	b	2f534 <__flatcc_error_report@@Base+0x93c>
   2f460:	b	2f474 <__flatcc_error_report@@Base+0x87c>
   2f464:	b	2f51c <__flatcc_error_report@@Base+0x924>
   2f468:	b	2f4e8 <__flatcc_error_report@@Base+0x8f0>
   2f46c:	b	2f4a0 <__flatcc_error_report@@Base+0x8a8>
   2f470:	b	2f4a0 <__flatcc_error_report@@Base+0x8a8>
   2f474:	ldr	r2, [pc, #332]	; 2f5c8 <__flatcc_error_report@@Base+0x9d0>
   2f478:	mov	ip, #0
   2f47c:	mov	r0, r4
   2f480:	mov	r3, ip
   2f484:	str	ip, [sp]
   2f488:	str	ip, [sp, #4]
   2f48c:	add	r2, pc, r2
   2f490:	bl	2ebf8 <__flatcc_error_report@@Base>
   2f494:	mov	r3, #1
   2f498:	ldr	r1, [r4, #40]	; 0x28
   2f49c:	strh	r3, [r5, #8]
   2f4a0:	ldr	r2, [r5]
   2f4a4:	cmp	r2, #0
   2f4a8:	beq	2f4bc <__flatcc_error_report@@Base+0x8c4>
   2f4ac:	ldr	r3, [r1]
   2f4b0:	sub	r3, r3, r2
   2f4b4:	str	r3, [r5, #4]
   2f4b8:	ldr	r1, [r4, #40]	; 0x28
   2f4bc:	ldr	r3, [r1, #16]
   2f4c0:	cmp	r3, #22
   2f4c4:	bne	2f57c <__flatcc_error_report@@Base+0x984>
   2f4c8:	mov	r0, r4
   2f4cc:	add	sp, sp, #8
   2f4d0:	ldrd	r4, [sp]
   2f4d4:	ldrd	r6, [sp, #8]
   2f4d8:	ldr	r8, [sp, #16]
   2f4dc:	ldr	lr, [sp, #20]
   2f4e0:	add	sp, sp, #24
   2f4e4:	b	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   2f4e8:	ldr	r2, [pc, #220]	; 2f5cc <__flatcc_error_report@@Base+0x9d4>
   2f4ec:	mov	r0, #0
   2f4f0:	mov	ip, #1
   2f4f4:	mov	r3, r0
   2f4f8:	str	r0, [sp]
   2f4fc:	str	r0, [sp, #4]
   2f500:	mov	r0, r4
   2f504:	strh	ip, [r5, #8]
   2f508:	add	r2, pc, r2
   2f50c:	bl	2ebf8 <__flatcc_error_report@@Base>
   2f510:	mov	r0, r4
   2f514:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   2f518:	b	2f414 <__flatcc_error_report@@Base+0x81c>
   2f51c:	ldr	r3, [r5]
   2f520:	cmp	r3, #0
   2f524:	bne	2f510 <__flatcc_error_report@@Base+0x918>
   2f528:	ldr	r3, [r1]
   2f52c:	str	r3, [r5]
   2f530:	b	2f510 <__flatcc_error_report@@Base+0x918>
   2f534:	mov	r0, #0
   2f538:	mov	ip, #1
   2f53c:	mov	r3, r0
   2f540:	mov	r2, r8
   2f544:	str	r0, [sp]
   2f548:	str	r0, [sp, #4]
   2f54c:	mov	r0, r4
   2f550:	strh	ip, [r5, #8]
   2f554:	bl	2ebf8 <__flatcc_error_report@@Base>
   2f558:	b	2f510 <__flatcc_error_report@@Base+0x918>
   2f55c:	mov	ip, #1
   2f560:	mov	r3, #0
   2f564:	mov	r2, r7
   2f568:	mov	r0, r4
   2f56c:	stm	sp, {r6, ip}
   2f570:	strh	ip, [r5, #8]
   2f574:	bl	2ebf8 <__flatcc_error_report@@Base>
   2f578:	b	2f510 <__flatcc_error_report@@Base+0x918>
   2f57c:	ldr	r2, [pc, #76]	; 2f5d0 <__flatcc_error_report@@Base+0x9d8>
   2f580:	mov	ip, #0
   2f584:	mov	r0, r4
   2f588:	mov	r3, ip
   2f58c:	str	ip, [sp]
   2f590:	str	ip, [sp, #4]
   2f594:	add	r2, pc, r2
   2f598:	bl	2ebf8 <__flatcc_error_report@@Base>
   2f59c:	mov	r3, #1
   2f5a0:	strh	r3, [r5, #8]
   2f5a4:	add	sp, sp, #8
   2f5a8:	ldrd	r4, [sp]
   2f5ac:	ldrd	r6, [sp, #8]
   2f5b0:	ldr	r8, [sp, #16]
   2f5b4:	add	sp, sp, #20
   2f5b8:	pop	{pc}		; (ldr pc, [sp], #4)
   2f5bc:	andeq	r9, r2, r4, ror #17
   2f5c0:	andeq	r9, r2, ip, lsl #18
   2f5c4:	andeq	r9, r2, ip, lsl #18
   2f5c8:			; <UNDEFINED> instruction: 0x000298b0
   2f5cc:	andeq	r9, r2, r4, asr #15
   2f5d0:	ldrdeq	r9, [r2], -r4
   2f5d4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   2f5d8:	strd	r6, [sp, #8]
   2f5dc:	mov	r7, r0
   2f5e0:	ldr	r6, [r0, #40]	; 0x28
   2f5e4:	strd	r8, [sp, #16]
   2f5e8:	mov	r8, r1
   2f5ec:	strd	sl, [sp, #24]
   2f5f0:	mov	fp, r3
   2f5f4:	mov	sl, r2
   2f5f8:	str	lr, [sp, #32]
   2f5fc:	sub	sp, sp, #68	; 0x44
   2f600:	ldr	r3, [r6, #16]
   2f604:	cmp	r3, #45	; 0x2d
   2f608:	beq	2f74c <__flatcc_error_report@@Base+0xb54>
   2f60c:	cmp	r3, #10
   2f610:	beq	2f99c <__flatcc_error_report@@Base+0xda4>
   2f614:	ble	2f6a8 <__flatcc_error_report@@Base+0xab0>
   2f618:	cmp	r3, #14
   2f61c:	beq	2f844 <__flatcc_error_report@@Base+0xc4c>
   2f620:	cmp	r3, #19
   2f624:	beq	2f6e4 <__flatcc_error_report@@Base+0xaec>
   2f628:	cmp	r3, #11
   2f62c:	bne	2f788 <__flatcc_error_report@@Base+0xb90>
   2f630:	mov	r4, #0
   2f634:	mov	r3, #3
   2f638:	add	r1, sp, #60	; 0x3c
   2f63c:	ldr	r0, [r6]
   2f640:	strh	r3, [r8, #8]
   2f644:	bl	14094 <strtod@plt>
   2f648:	ldrd	r2, [r6]
   2f64c:	vstr	d0, [r8]
   2f650:	ldr	r1, [sp, #60]	; 0x3c
   2f654:	add	r3, r2, r3
   2f658:	cmp	r1, r3
   2f65c:	beq	2f964 <__flatcc_error_report@@Base+0xd6c>
   2f660:	ldr	r2, [pc, #1572]	; 2fc8c <__flatcc_error_report@@Base+0x1094>
   2f664:	mov	ip, #1
   2f668:	mov	r0, #0
   2f66c:	add	r2, pc, r2
   2f670:	mov	r3, r0
   2f674:	mov	r1, r6
   2f678:	str	r0, [sp]
   2f67c:	str	r0, [sp, #4]
   2f680:	mov	r0, r7
   2f684:	strh	ip, [r8, #8]
   2f688:	bl	2ebf8 <__flatcc_error_report@@Base>
   2f68c:	cmp	r4, #0
   2f690:	beq	2f6d8 <__flatcc_error_report@@Base+0xae0>
   2f694:	ldrh	r3, [r8, #8]
   2f698:	cmp	r3, #6
   2f69c:	bne	2f6d8 <__flatcc_error_report@@Base+0xae0>
   2f6a0:	mov	r9, r6
   2f6a4:	b	2fb7c <__flatcc_error_report@@Base+0xf84>
   2f6a8:	movw	r2, #64550	; 0xfc26
   2f6ac:	movt	r2, #65535	; 0xffff
   2f6b0:	cmp	r3, r2
   2f6b4:	beq	2f7f8 <__flatcc_error_report@@Base+0xc00>
   2f6b8:	cmp	r3, #9
   2f6bc:	beq	2f7e8 <__flatcc_error_report@@Base+0xbf0>
   2f6c0:	cmn	r3, #988	; 0x3dc
   2f6c4:	bne	2f788 <__flatcc_error_report@@Base+0xb90>
   2f6c8:	mov	r2, #1
   2f6cc:	mov	r3, #6
   2f6d0:	strb	r2, [r8]
   2f6d4:	strh	r3, [r8, #8]
   2f6d8:	mov	r0, r7
   2f6dc:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   2f6e0:	b	2f7a8 <__flatcc_error_report@@Base+0xbb0>
   2f6e4:	mov	r4, #0
   2f6e8:	mov	r0, r7
   2f6ec:	mov	r5, #0
   2f6f0:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   2f6f4:	mov	r3, #2
   2f6f8:	mov	r1, r8
   2f6fc:	str	r5, [r8]
   2f700:	mov	r0, r7
   2f704:	str	r5, [r8, #4]
   2f708:	strh	r3, [r8, #8]
   2f70c:	bl	2f3e0 <__flatcc_error_report@@Base+0x7e8>
   2f710:	ands	r3, sl, #1
   2f714:	beq	2fb3c <__flatcc_error_report@@Base+0xf44>
   2f718:	cmp	r4, #0
   2f71c:	beq	2f7a8 <__flatcc_error_report@@Base+0xbb0>
   2f720:	mov	r2, #1
   2f724:	str	r5, [sp]
   2f728:	mov	r1, r6
   2f72c:	str	r5, [sp, #4]
   2f730:	mov	r0, r7
   2f734:	mov	r3, r5
   2f738:	strh	r2, [r8, #8]
   2f73c:	ldr	r2, [pc, #1356]	; 2fc90 <__flatcc_error_report@@Base+0x1098>
   2f740:	add	r2, pc, r2
   2f744:	bl	2ebf8 <__flatcc_error_report@@Base>
   2f748:	b	2f7a8 <__flatcc_error_report@@Base+0xbb0>
   2f74c:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   2f750:	ldr	r9, [r7, #40]	; 0x28
   2f754:	ldr	r3, [r9, #16]
   2f758:	cmp	r3, #10
   2f75c:	beq	2fbb4 <__flatcc_error_report@@Base+0xfbc>
   2f760:	bgt	2f7c4 <__flatcc_error_report@@Base+0xbcc>
   2f764:	movw	r2, #64550	; 0xfc26
   2f768:	movt	r2, #65535	; 0xffff
   2f76c:	cmp	r3, r2
   2f770:	beq	2fb74 <__flatcc_error_report@@Base+0xf7c>
   2f774:	cmp	r3, #9
   2f778:	beq	2f80c <__flatcc_error_report@@Base+0xc14>
   2f77c:	cmn	r3, #988	; 0x3dc
   2f780:	beq	2fba8 <__flatcc_error_report@@Base+0xfb0>
   2f784:	mov	r6, r9
   2f788:	mov	ip, #0
   2f78c:	mov	r2, fp
   2f790:	mov	r1, r6
   2f794:	mov	r0, r7
   2f798:	mov	r3, ip
   2f79c:	str	ip, [sp]
   2f7a0:	str	ip, [sp, #4]
   2f7a4:	bl	2ebf8 <__flatcc_error_report@@Base>
   2f7a8:	add	sp, sp, #68	; 0x44
   2f7ac:	ldrd	r4, [sp]
   2f7b0:	ldrd	r6, [sp, #8]
   2f7b4:	ldrd	r8, [sp, #16]
   2f7b8:	ldrd	sl, [sp, #24]
   2f7bc:	add	sp, sp, #32
   2f7c0:	pop	{pc}		; (ldr pc, [sp], #4)
   2f7c4:	cmp	r3, #14
   2f7c8:	beq	2f990 <__flatcc_error_report@@Base+0xd98>
   2f7cc:	cmp	r3, #19
   2f7d0:	beq	2f984 <__flatcc_error_report@@Base+0xd8c>
   2f7d4:	cmp	r3, #11
   2f7d8:	bne	2f784 <__flatcc_error_report@@Base+0xb8c>
   2f7dc:	mov	r4, r6
   2f7e0:	mov	r6, r9
   2f7e4:	b	2f634 <__flatcc_error_report@@Base+0xa3c>
   2f7e8:	bl	2edf8 <__flatcc_error_report@@Base+0x200>
   2f7ec:	mov	r3, #13
   2f7f0:	strh	r3, [r8, #8]
   2f7f4:	b	2f7a8 <__flatcc_error_report@@Base+0xbb0>
   2f7f8:	mov	r2, #0
   2f7fc:	mov	r3, #6
   2f800:	strb	r2, [r8]
   2f804:	strh	r3, [r8, #8]
   2f808:	b	2f6d8 <__flatcc_error_report@@Base+0xae0>
   2f80c:	mov	r1, r8
   2f810:	mov	r0, r7
   2f814:	bl	2edf8 <__flatcc_error_report@@Base+0x200>
   2f818:	ldr	r2, [pc, #1140]	; 2fc94 <__flatcc_error_report@@Base+0x109c>
   2f81c:	mov	r3, #0
   2f820:	mov	ip, #1
   2f824:	mov	r1, r9
   2f828:	mov	r0, r7
   2f82c:	str	r3, [sp]
   2f830:	str	r3, [sp, #4]
   2f834:	strh	ip, [r8, #8]
   2f838:	add	r2, pc, r2
   2f83c:	bl	2ebf8 <__flatcc_error_report@@Base>
   2f840:	b	2f7a8 <__flatcc_error_report@@Base+0xbb0>
   2f844:	mov	r4, #0
   2f848:	ldr	r3, [r6]
   2f84c:	mov	r1, #5
   2f850:	ldr	r2, [r6, #4]
   2f854:	strh	r1, [r8, #8]
   2f858:	add	r0, r3, r2
   2f85c:	cmp	r3, r0
   2f860:	str	r0, [sp, #20]
   2f864:	beq	2fb04 <__flatcc_error_report@@Base+0xf0c>
   2f868:	ldrb	r1, [r3]
   2f86c:	cmp	r1, #45	; 0x2d
   2f870:	str	r1, [sp, #32]
   2f874:	movne	r1, #0
   2f878:	moveq	r1, #1
   2f87c:	sub	r2, r2, r1
   2f880:	cmp	r2, #1
   2f884:	ble	2fb04 <__flatcc_error_report@@Base+0xf0c>
   2f888:	ldrb	r2, [r3, r1]
   2f88c:	add	r3, r3, r1
   2f890:	cmp	r2, #48	; 0x30
   2f894:	bne	2fb04 <__flatcc_error_report@@Base+0xf0c>
   2f898:	ldrb	r2, [r3, #1]
   2f89c:	orr	r2, r2, #32
   2f8a0:	cmp	r2, #120	; 0x78
   2f8a4:	bne	2fb04 <__flatcc_error_report@@Base+0xf0c>
   2f8a8:	add	r2, r3, #2
   2f8ac:	str	r2, [sp, #24]
   2f8b0:	sub	r2, r0, r2
   2f8b4:	cmp	r2, #16
   2f8b8:	addgt	r3, r3, #18
   2f8bc:	strgt	r3, [sp, #16]
   2f8c0:	bgt	2f8cc <__flatcc_error_report@@Base+0xcd4>
   2f8c4:	ldr	r3, [sp, #20]
   2f8c8:	str	r3, [sp, #16]
   2f8cc:	ldr	r2, [sp, #16]
   2f8d0:	ldr	r3, [sp, #24]
   2f8d4:	cmp	r3, r2
   2f8d8:	beq	2fb04 <__flatcc_error_report@@Base+0xf0c>
   2f8dc:	mov	r2, #0
   2f8e0:	mov	r3, #0
   2f8e4:	strd	r6, [sp, #36]	; 0x24
   2f8e8:	str	r4, [sp, #48]	; 0x30
   2f8ec:	str	r8, [sp, #52]	; 0x34
   2f8f0:	ldr	r1, [sp, #24]
   2f8f4:	b	2f914 <__flatcc_error_report@@Base+0xd1c>
   2f8f8:	subs	r4, r8, #48	; 0x30
   2f8fc:	sbc	r5, lr, #0
   2f900:	adds	r2, r4, r0
   2f904:	adc	r3, r5, #0
   2f908:	ldr	r0, [sp, #16]
   2f90c:	cmp	r0, r1
   2f910:	beq	2fc10 <__flatcc_error_report@@Base+0x1018>
   2f914:	mov	fp, r1
   2f918:	ldrb	r0, [r1], #1
   2f91c:	lsl	lr, r3, #4
   2f920:	lsl	r8, r2, #4
   2f924:	orr	lr, lr, r2, lsr #28
   2f928:	sub	r9, r0, #48	; 0x30
   2f92c:	orr	r7, r0, #32
   2f930:	cmp	r9, #9
   2f934:	sub	sl, r7, #97	; 0x61
   2f938:	bls	2f8f8 <__flatcc_error_report@@Base+0xd00>
   2f93c:	cmp	sl, #5
   2f940:	bhi	2fc3c <__flatcc_error_report@@Base+0x1044>
   2f944:	subs	r3, r8, #87	; 0x57
   2f948:	str	r3, [sp, #8]
   2f94c:	sbc	r3, lr, #0
   2f950:	str	r3, [sp, #12]
   2f954:	ldrd	r2, [sp, #8]
   2f958:	adds	r2, r2, r7
   2f95c:	adc	r3, r3, #0
   2f960:	b	2f908 <__flatcc_error_report@@Base+0xd10>
   2f964:	ldrb	r3, [r2]
   2f968:	cmp	r3, #46	; 0x2e
   2f96c:	beq	2fb60 <__flatcc_error_report@@Base+0xf68>
   2f970:	cmp	r4, #0
   2f974:	vnegne.f64	d0, d0
   2f978:	vstrne	d0, [r8]
   2f97c:	bne	2f694 <__flatcc_error_report@@Base+0xa9c>
   2f980:	b	2f6d8 <__flatcc_error_report@@Base+0xae0>
   2f984:	mov	r4, r6
   2f988:	mov	r6, r9
   2f98c:	b	2f6e8 <__flatcc_error_report@@Base+0xaf0>
   2f990:	mov	r4, r6
   2f994:	mov	r6, r9
   2f998:	b	2f848 <__flatcc_error_report@@Base+0xc50>
   2f99c:	mov	r3, #0
   2f9a0:	str	r3, [sp, #8]
   2f9a4:	ldr	ip, [r6]
   2f9a8:	mov	r3, #5
   2f9ac:	ldr	r0, [r6, #4]
   2f9b0:	strh	r3, [r8, #8]
   2f9b4:	add	r0, ip, r0
   2f9b8:	cmp	ip, r0
   2f9bc:	beq	2fbcc <__flatcc_error_report@@Base+0xfd4>
   2f9c0:	ldrb	r3, [ip]
   2f9c4:	cmp	r3, #45	; 0x2d
   2f9c8:	str	r3, [sp, #20]
   2f9cc:	movne	r3, #0
   2f9d0:	moveq	r3, #1
   2f9d4:	add	fp, ip, r3
   2f9d8:	cmp	r0, fp
   2f9dc:	beq	2fbcc <__flatcc_error_report@@Base+0xfd4>
   2f9e0:	ldrb	r2, [ip, r3]
   2f9e4:	sub	r3, r2, #48	; 0x30
   2f9e8:	cmp	r3, #9
   2f9ec:	bhi	2fbcc <__flatcc_error_report@@Base+0xfd4>
   2f9f0:	uxtb	r2, r2
   2f9f4:	mov	r3, #0
   2f9f8:	str	fp, [sp, #16]
   2f9fc:	subs	r4, r2, #48	; 0x30
   2fa00:	add	r1, fp, #1
   2fa04:	str	ip, [sp, #32]
   2fa08:	sbc	r5, r3, #0
   2fa0c:	b	2fa44 <__flatcc_error_report@@Base+0xe4c>
   2fa10:	adds	r3, r3, r4
   2fa14:	adc	r2, r2, r5
   2fa18:	adds	r3, r3, r3
   2fa1c:	adc	r2, r2, r2
   2fa20:	subs	sl, r3, #48	; 0x30
   2fa24:	sbc	fp, r2, #0
   2fa28:	adds	r2, sl, lr
   2fa2c:	adc	r3, fp, #0
   2fa30:	cmp	r3, r5
   2fa34:	mov	r5, r3
   2fa38:	cmpeq	r2, r4
   2fa3c:	mov	r4, r2
   2fa40:	bcc	2fbcc <__flatcc_error_report@@Base+0xfd4>
   2fa44:	cmp	r0, r1
   2fa48:	lsl	r2, r5, #2
   2fa4c:	mov	ip, r1
   2fa50:	lsl	r3, r4, #2
   2fa54:	beq	2fbc0 <__flatcc_error_report@@Base+0xfc8>
   2fa58:	ldrb	lr, [r1], #1
   2fa5c:	orr	r2, r2, r4, lsr #30
   2fa60:	sub	r9, lr, #48	; 0x30
   2fa64:	cmp	r9, #9
   2fa68:	bls	2fa10 <__flatcc_error_report@@Base+0xe18>
   2fa6c:	mov	sl, ip
   2fa70:	ldr	fp, [sp, #16]
   2fa74:	ldr	ip, [sp, #32]
   2fa78:	cmp	ip, sl
   2fa7c:	beq	2fbcc <__flatcc_error_report@@Base+0xfd4>
   2fa80:	cmp	fp, sl
   2fa84:	beq	2fbcc <__flatcc_error_report@@Base+0xfd4>
   2fa88:	cmp	lr, #80	; 0x50
   2fa8c:	beq	2fbcc <__flatcc_error_report@@Base+0xfd4>
   2fa90:	bhi	2fbfc <__flatcc_error_report@@Base+0x1004>
   2fa94:	cmp	lr, #46	; 0x2e
   2fa98:	beq	2fbcc <__flatcc_error_report@@Base+0xfd4>
   2fa9c:	cmp	lr, #69	; 0x45
   2faa0:	beq	2fbcc <__flatcc_error_report@@Base+0xfd4>
   2faa4:	ldr	r3, [sp, #20]
   2faa8:	strd	r4, [r8]
   2faac:	cmp	r3, #45	; 0x2d
   2fab0:	beq	2fbcc <__flatcc_error_report@@Base+0xfd4>
   2fab4:	ldr	r3, [sp, #8]
   2fab8:	cmp	r3, #0
   2fabc:	beq	2f6d8 <__flatcc_error_report@@Base+0xae0>
   2fac0:	ldrd	r2, [r8]
   2fac4:	mov	r1, #4
   2fac8:	strh	r1, [r8, #8]
   2facc:	rsbs	r2, r2, #0
   2fad0:	rsc	r3, r3, #0
   2fad4:	strd	r2, [r8]
   2fad8:	b	2f6d8 <__flatcc_error_report@@Base+0xae0>
   2fadc:	ldr	r1, [sp, #16]
   2fae0:	ldrb	r1, [r1]
   2fae4:	sub	r0, r1, #48	; 0x30
   2fae8:	cmp	r0, #9
   2faec:	bls	2fb04 <__flatcc_error_report@@Base+0xf0c>
   2faf0:	orr	r1, r1, #32
   2faf4:	sub	r0, r1, #97	; 0x61
   2faf8:	uxtb	r0, r0
   2fafc:	cmp	r0, #5
   2fb00:	bhi	2fc70 <__flatcc_error_report@@Base+0x1078>
   2fb04:	ldr	r2, [pc, #396]	; 2fc98 <__flatcc_error_report@@Base+0x10a0>
   2fb08:	mov	r0, #0
   2fb0c:	mov	ip, #1
   2fb10:	mov	r3, r0
   2fb14:	mov	r1, r6
   2fb18:	str	r0, [sp]
   2fb1c:	str	r0, [sp, #4]
   2fb20:	mov	r0, r7
   2fb24:	strh	ip, [r8, #8]
   2fb28:	add	r2, pc, r2
   2fb2c:	bl	2ebf8 <__flatcc_error_report@@Base>
   2fb30:	cmp	r4, #0
   2fb34:	beq	2f6d8 <__flatcc_error_report@@Base+0xae0>
   2fb38:	b	2fac0 <__flatcc_error_report@@Base+0xec8>
   2fb3c:	mov	ip, #1
   2fb40:	mov	r2, fp
   2fb44:	str	r3, [sp]
   2fb48:	mov	r1, r6
   2fb4c:	mov	r0, r7
   2fb50:	str	r3, [sp, #4]
   2fb54:	strh	ip, [r8, #8]
   2fb58:	bl	2ebf8 <__flatcc_error_report@@Base>
   2fb5c:	b	2f7a8 <__flatcc_error_report@@Base+0xbb0>
   2fb60:	ldr	r2, [pc, #308]	; 2fc9c <__flatcc_error_report@@Base+0x10a4>
   2fb64:	mov	ip, #1
   2fb68:	mov	r0, #0
   2fb6c:	add	r2, pc, r2
   2fb70:	b	2f670 <__flatcc_error_report@@Base+0xa78>
   2fb74:	mov	r3, #0
   2fb78:	strb	r3, [r8]
   2fb7c:	ldr	r2, [pc, #284]	; 2fca0 <__flatcc_error_report@@Base+0x10a8>
   2fb80:	mov	r3, #0
   2fb84:	mov	r0, #1
   2fb88:	mov	r1, r9
   2fb8c:	str	r3, [sp]
   2fb90:	str	r3, [sp, #4]
   2fb94:	strh	r0, [r8, #8]
   2fb98:	mov	r0, r7
   2fb9c:	add	r2, pc, r2
   2fba0:	bl	2ebf8 <__flatcc_error_report@@Base>
   2fba4:	b	2f6d8 <__flatcc_error_report@@Base+0xae0>
   2fba8:	mov	r3, #1
   2fbac:	strb	r3, [r8]
   2fbb0:	b	2fb7c <__flatcc_error_report@@Base+0xf84>
   2fbb4:	str	r6, [sp, #8]
   2fbb8:	mov	r6, r9
   2fbbc:	b	2f9a4 <__flatcc_error_report@@Base+0xdac>
   2fbc0:	ldr	fp, [sp, #16]
   2fbc4:	cmp	fp, r0
   2fbc8:	bne	2faa4 <__flatcc_error_report@@Base+0xeac>
   2fbcc:	ldr	r2, [pc, #208]	; 2fca4 <__flatcc_error_report@@Base+0x10ac>
   2fbd0:	mov	r0, #0
   2fbd4:	mov	ip, #1
   2fbd8:	mov	r3, r0
   2fbdc:	mov	r1, r6
   2fbe0:	str	r0, [sp]
   2fbe4:	str	r0, [sp, #4]
   2fbe8:	mov	r0, r7
   2fbec:	strh	ip, [r8, #8]
   2fbf0:	add	r2, pc, r2
   2fbf4:	bl	2ebf8 <__flatcc_error_report@@Base>
   2fbf8:	b	2fab4 <__flatcc_error_report@@Base+0xebc>
   2fbfc:	cmp	lr, #101	; 0x65
   2fc00:	beq	2fbcc <__flatcc_error_report@@Base+0xfd4>
   2fc04:	cmp	lr, #112	; 0x70
   2fc08:	bne	2faa4 <__flatcc_error_report@@Base+0xeac>
   2fc0c:	b	2fbcc <__flatcc_error_report@@Base+0xfd4>
   2fc10:	ldr	r1, [sp, #20]
   2fc14:	ldrd	r6, [sp, #36]	; 0x24
   2fc18:	ldr	r4, [sp, #48]	; 0x30
   2fc1c:	cmp	r1, r0
   2fc20:	ldr	r8, [sp, #52]	; 0x34
   2fc24:	bne	2fadc <__flatcc_error_report@@Base+0xee4>
   2fc28:	strd	r2, [r8]
   2fc2c:	ldr	r1, [sp, #32]
   2fc30:	cmp	r1, #45	; 0x2d
   2fc34:	bne	2fb30 <__flatcc_error_report@@Base+0xf38>
   2fc38:	b	2fb04 <__flatcc_error_report@@Base+0xf0c>
   2fc3c:	ldr	r1, [sp, #24]
   2fc40:	ldrd	r6, [sp, #36]	; 0x24
   2fc44:	ldr	r4, [sp, #48]	; 0x30
   2fc48:	cmp	fp, r1
   2fc4c:	ldr	r8, [sp, #52]	; 0x34
   2fc50:	beq	2fb04 <__flatcc_error_report@@Base+0xf0c>
   2fc54:	ldr	r0, [sp, #20]
   2fc58:	cmp	fp, r0
   2fc5c:	beq	2fc28 <__flatcc_error_report@@Base+0x1030>
   2fc60:	ldr	r0, [sp, #16]
   2fc64:	ldrb	r1, [fp]
   2fc68:	cmp	fp, r0
   2fc6c:	beq	2fae4 <__flatcc_error_report@@Base+0xeec>
   2fc70:	cmp	r1, #80	; 0x50
   2fc74:	beq	2fb04 <__flatcc_error_report@@Base+0xf0c>
   2fc78:	cmp	r1, #112	; 0x70
   2fc7c:	beq	2fb04 <__flatcc_error_report@@Base+0xf0c>
   2fc80:	cmp	r1, #46	; 0x2e
   2fc84:	bne	2fc28 <__flatcc_error_report@@Base+0x1030>
   2fc88:	b	2fb04 <__flatcc_error_report@@Base+0xf0c>
   2fc8c:	andeq	r9, r2, r4, asr #14
   2fc90:			; <UNDEFINED> instruction: 0x000296b0
   2fc94:	andeq	r9, r2, r0, lsl #12
   2fc98:	andeq	r9, r2, r4, asr r2
   2fc9c:	andeq	r9, r2, ip, asr r2
   2fca0:	andeq	r9, r2, r8, ror r2
   2fca4:	andeq	r9, r2, r8, lsr #3
   2fca8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   2fcac:	strd	r6, [sp, #8]
   2fcb0:	ldr	r6, [r0, #40]	; 0x28
   2fcb4:	strd	r8, [sp, #16]
   2fcb8:	str	sl, [sp, #24]
   2fcbc:	str	lr, [sp, #28]
   2fcc0:	sub	sp, sp, #8
   2fcc4:	ldr	r3, [r6, #16]
   2fcc8:	cmp	r3, #40	; 0x28
   2fccc:	movne	r4, #0
   2fcd0:	beq	2fcf4 <__flatcc_error_report@@Base+0x10fc>
   2fcd4:	mov	r0, r4
   2fcd8:	add	sp, sp, #8
   2fcdc:	ldrd	r4, [sp]
   2fce0:	ldrd	r6, [sp, #8]
   2fce4:	ldrd	r8, [sp, #16]
   2fce8:	ldr	sl, [sp, #24]
   2fcec:	add	sp, sp, #28
   2fcf0:	pop	{pc}		; (ldr pc, [sp], #4)
   2fcf4:	mov	r5, r0
   2fcf8:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   2fcfc:	ldr	r8, [r5, #40]	; 0x28
   2fd00:	ldr	r3, [r8, #16]
   2fd04:	cmp	r3, #9
   2fd08:	beq	2fd2c <__flatcc_error_report@@Base+0x1134>
   2fd0c:	ldr	r2, [pc, #348]	; 2fe70 <__flatcc_error_report@@Base+0x1278>
   2fd10:	mov	r3, r6
   2fd14:	mov	r0, r5
   2fd18:	mov	r1, #41	; 0x29
   2fd1c:	mov	r4, #0
   2fd20:	add	r2, pc, r2
   2fd24:	bl	2ef54 <__flatcc_error_report@@Base+0x35c>
   2fd28:	b	2fcd4 <__flatcc_error_report@@Base+0x10dc>
   2fd2c:	ldr	r9, [pc, #320]	; 2fe74 <__flatcc_error_report@@Base+0x127c>
   2fd30:	mov	r0, r5
   2fd34:	mov	sl, #0
   2fd38:	add	r9, pc, r9
   2fd3c:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   2fd40:	ldr	r2, [r5, #44]	; 0x2c
   2fd44:	ldr	r7, [r5, #52]	; 0x34
   2fd48:	add	r3, r7, #32
   2fd4c:	cmp	r3, r2
   2fd50:	bhi	2fe10 <__flatcc_error_report@@Base+0x1218>
   2fd54:	ldr	r2, [r5, #40]	; 0x28
   2fd58:	mov	r4, r7
   2fd5c:	str	r3, [r5, #52]	; 0x34
   2fd60:	str	sl, [r7]
   2fd64:	str	r8, [r7, #4]
   2fd68:	ldr	r3, [r2, #16]
   2fd6c:	cmp	r3, #58	; 0x3a
   2fd70:	bne	2fd90 <__flatcc_error_report@@Base+0x1198>
   2fd74:	mov	r0, r5
   2fd78:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   2fd7c:	mov	r3, r9
   2fd80:	mov	r2, #1
   2fd84:	add	r1, r7, #8
   2fd88:	mov	r0, r5
   2fd8c:	bl	2f5d4 <__flatcc_error_report@@Base+0x9dc>
   2fd90:	ldr	r3, [r5, #108]	; 0x6c
   2fd94:	cmp	r3, #9
   2fd98:	bgt	2fcd4 <__flatcc_error_report@@Base+0x10dc>
   2fd9c:	ldr	r3, [r5, #40]	; 0x28
   2fda0:	ldr	r3, [r3, #16]
   2fda4:	cmp	r3, #44	; 0x2c
   2fda8:	beq	2fde8 <__flatcc_error_report@@Base+0x11f0>
   2fdac:	ldr	r2, [pc, #196]	; 2fe78 <__flatcc_error_report@@Base+0x1280>
   2fdb0:	mov	r3, r6
   2fdb4:	mov	r0, r5
   2fdb8:	mov	r1, #41	; 0x29
   2fdbc:	add	r2, pc, r2
   2fdc0:	bl	2ef54 <__flatcc_error_report@@Base+0x35c>
   2fdc4:	mov	r2, #0
   2fdc8:	b	2fdd0 <__flatcc_error_report@@Base+0x11d8>
   2fdcc:	mov	r4, r3
   2fdd0:	ldr	r3, [r4]
   2fdd4:	str	r2, [r4]
   2fdd8:	mov	r2, r4
   2fddc:	cmp	r3, #0
   2fde0:	bne	2fdcc <__flatcc_error_report@@Base+0x11d4>
   2fde4:	b	2fcd4 <__flatcc_error_report@@Base+0x10dc>
   2fde8:	mov	r0, r5
   2fdec:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   2fdf0:	ldr	r8, [r5, #40]	; 0x28
   2fdf4:	ldr	r3, [r8, #16]
   2fdf8:	cmp	r3, #9
   2fdfc:	bne	2fe44 <__flatcc_error_report@@Base+0x124c>
   2fe00:	mov	r0, r5
   2fe04:	mov	sl, r7
   2fe08:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   2fe0c:	b	2fd40 <__flatcc_error_report@@Base+0x1148>
   2fe10:	mov	r1, #1
   2fe14:	mov	r0, #65536	; 0x10000
   2fe18:	bl	13f74 <calloc@plt>
   2fe1c:	cmp	r0, #0
   2fe20:	beq	2fe6c <__flatcc_error_report@@Base+0x1274>
   2fe24:	ldr	r2, [r5, #48]	; 0x30
   2fe28:	add	r1, r0, #65536	; 0x10000
   2fe2c:	add	r7, r0, #16
   2fe30:	add	r3, r0, #48	; 0x30
   2fe34:	str	r1, [r5, #44]	; 0x2c
   2fe38:	str	r0, [r5, #48]	; 0x30
   2fe3c:	str	r2, [r0]
   2fe40:	b	2fd54 <__flatcc_error_report@@Base+0x115c>
   2fe44:	ldr	r2, [pc, #48]	; 2fe7c <__flatcc_error_report@@Base+0x1284>
   2fe48:	mov	ip, #0
   2fe4c:	mov	r1, r8
   2fe50:	mov	r3, ip
   2fe54:	mov	r0, r5
   2fe58:	str	ip, [sp]
   2fe5c:	str	ip, [sp, #4]
   2fe60:	add	r2, pc, r2
   2fe64:	bl	2ebf8 <__flatcc_error_report@@Base>
   2fe68:	b	2fdac <__flatcc_error_report@@Base+0x11b4>
   2fe6c:	bl	2e7a8 <__flatcc_fb_default_error_out@@Base+0x30>
   2fe70:	andeq	r9, r2, r8, lsr r1
   2fe74:	andeq	r9, r2, r0, asr #2
   2fe78:	muleq	r2, ip, r0
   2fe7c:	andeq	r9, r2, r8, lsr r0
   2fe80:	strd	r4, [sp, #-36]!	; 0xffffffdc
   2fe84:	mov	r4, r0
   2fe88:	ldr	r5, [r0, #40]	; 0x28
   2fe8c:	ldr	r3, [r5, #16]
   2fe90:	strd	r6, [sp, #8]
   2fe94:	strd	r8, [sp, #16]
   2fe98:	strd	sl, [sp, #24]
   2fe9c:	str	lr, [sp, #32]
   2fea0:	sub	sp, sp, #20
   2fea4:	cmp	r3, #9
   2fea8:	bne	302b4 <__flatcc_error_report@@Base+0x16bc>
   2feac:	mov	r7, r1
   2feb0:	mov	r8, r2
   2feb4:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   2feb8:	mov	r0, r4
   2febc:	str	r5, [r7, #4]
   2fec0:	bl	2fca8 <__flatcc_error_report@@Base+0x10b0>
   2fec4:	ldr	r1, [r4, #40]	; 0x28
   2fec8:	ldr	r3, [r1, #16]
   2fecc:	str	r0, [r7, #28]
   2fed0:	cmp	r3, #123	; 0x7b
   2fed4:	bne	30078 <__flatcc_error_report@@Base+0x1480>
   2fed8:	ldr	r3, [pc, #1128]	; 30348 <__flatcc_error_report@@Base+0x1750>
   2fedc:	mov	r0, r4
   2fee0:	movw	r9, #64569	; 0xfc39
   2fee4:	movt	r9, #65535	; 0xffff
   2fee8:	add	r3, pc, r3
   2feec:	str	r3, [sp, #8]
   2fef0:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   2fef4:	ldr	sl, [r4, #40]	; 0x28
   2fef8:	ldr	r3, [pc, #1100]	; 3034c <__flatcc_error_report@@Base+0x1754>
   2fefc:	ldr	fp, [sl, #16]
   2ff00:	add	r3, pc, r3
   2ff04:	str	r3, [sp, #12]
   2ff08:	cmp	fp, #125	; 0x7d
   2ff0c:	beq	30024 <__flatcc_error_report@@Base+0x142c>
   2ff10:	cmp	r8, r9
   2ff14:	ldr	r0, [r4, #44]	; 0x2c
   2ff18:	ldr	r5, [r4, #52]	; 0x34
   2ff1c:	add	r1, r5, #128	; 0x80
   2ff20:	beq	300c0 <__flatcc_error_report@@Base+0x14c8>
   2ff24:	cmp	r1, r0
   2ff28:	bhi	301ec <__flatcc_error_report@@Base+0x15f4>
   2ff2c:	ldr	r0, [r7, #20]
   2ff30:	mov	ip, #5
   2ff34:	str	r1, [r4, #52]	; 0x34
   2ff38:	str	r0, [r5]
   2ff3c:	strh	ip, [r5, #8]
   2ff40:	str	r5, [r7, #20]
   2ff44:	ldr	r1, [r4, #36]	; 0x24
   2ff48:	cmp	r1, #0
   2ff4c:	beq	2ff70 <__flatcc_error_report@@Base+0x1378>
   2ff50:	mov	ip, #0
   2ff54:	b	2ff5c <__flatcc_error_report@@Base+0x1364>
   2ff58:	mov	r1, r0
   2ff5c:	ldr	r0, [r1]
   2ff60:	str	ip, [r1]
   2ff64:	mov	ip, r1
   2ff68:	cmp	r0, #0
   2ff6c:	bne	2ff58 <__flatcc_error_report@@Base+0x1360>
   2ff70:	mov	r6, #0
   2ff74:	cmp	fp, #9
   2ff78:	str	r1, [r5, #68]	; 0x44
   2ff7c:	str	r6, [r4, #36]	; 0x24
   2ff80:	bne	301c4 <__flatcc_error_report@@Base+0x15cc>
   2ff84:	mov	r0, r4
   2ff88:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   2ff8c:	ldr	r1, [r4, #40]	; 0x28
   2ff90:	ldr	r3, [r1, #16]
   2ff94:	str	sl, [r5, #4]
   2ff98:	cmp	r3, #58	; 0x3a
   2ff9c:	bne	30220 <__flatcc_error_report@@Base+0x1628>
   2ffa0:	mov	r0, r4
   2ffa4:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   2ffa8:	add	r1, r5, #16
   2ffac:	mov	r0, r4
   2ffb0:	bl	2efb4 <__flatcc_error_report@@Base+0x3bc>
   2ffb4:	ldr	r3, [r4, #40]	; 0x28
   2ffb8:	ldr	r3, [r3, #16]
   2ffbc:	cmp	r3, #61	; 0x3d
   2ffc0:	bne	2ffe4 <__flatcc_error_report@@Base+0x13ec>
   2ffc4:	mov	r0, r4
   2ffc8:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   2ffcc:	ldr	r3, [pc, #892]	; 30350 <__flatcc_error_report@@Base+0x1758>
   2ffd0:	mov	r2, #2
   2ffd4:	add	r1, r5, #48	; 0x30
   2ffd8:	mov	r0, r4
   2ffdc:	add	r3, pc, r3
   2ffe0:	bl	2f5d4 <__flatcc_error_report@@Base+0x9dc>
   2ffe4:	mov	r0, r4
   2ffe8:	bl	2fca8 <__flatcc_error_report@@Base+0x10b0>
   2ffec:	ldr	r2, [pc, #864]	; 30354 <__flatcc_error_report@@Base+0x175c>
   2fff0:	mov	r3, #0
   2fff4:	mov	r1, #59	; 0x3b
   2fff8:	str	r0, [r5, #64]	; 0x40
   2fffc:	mov	r0, r4
   30000:	add	r2, pc, r2
   30004:	bl	2ef54 <__flatcc_error_report@@Base+0x35c>
   30008:	ldr	r3, [r4, #108]	; 0x6c
   3000c:	cmp	r3, #9
   30010:	bgt	30098 <__flatcc_error_report@@Base+0x14a0>
   30014:	ldr	sl, [r4, #40]	; 0x28
   30018:	ldr	fp, [sl, #16]
   3001c:	cmp	fp, #125	; 0x7d
   30020:	bne	2ff10 <__flatcc_error_report@@Base+0x1318>
   30024:	mov	r0, r4
   30028:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   3002c:	ldr	r3, [r7, #20]
   30030:	cmp	r3, #0
   30034:	beq	30058 <__flatcc_error_report@@Base+0x1460>
   30038:	mov	r1, #0
   3003c:	b	30044 <__flatcc_error_report@@Base+0x144c>
   30040:	mov	r3, r2
   30044:	ldr	r2, [r3]
   30048:	str	r1, [r3]
   3004c:	mov	r1, r3
   30050:	cmp	r2, #0
   30054:	bne	30040 <__flatcc_error_report@@Base+0x1448>
   30058:	str	r3, [r7, #20]
   3005c:	add	sp, sp, #20
   30060:	ldrd	r4, [sp]
   30064:	ldrd	r6, [sp, #8]
   30068:	ldrd	r8, [sp, #16]
   3006c:	ldrd	sl, [sp, #24]
   30070:	add	sp, sp, #32
   30074:	pop	{pc}		; (ldr pc, [sp], #4)
   30078:	ldr	r2, [pc, #728]	; 30358 <__flatcc_error_report@@Base+0x1760>
   3007c:	mov	ip, #0
   30080:	mov	r0, r4
   30084:	mov	r3, ip
   30088:	str	ip, [sp]
   3008c:	str	ip, [sp, #4]
   30090:	add	r2, pc, r2
   30094:	bl	2ebf8 <__flatcc_error_report@@Base>
   30098:	mov	r0, r4
   3009c:	mov	r1, #125	; 0x7d
   300a0:	add	sp, sp, #20
   300a4:	ldrd	r4, [sp]
   300a8:	ldrd	r6, [sp, #8]
   300ac:	ldrd	r8, [sp, #16]
   300b0:	ldrd	sl, [sp, #24]
   300b4:	ldr	lr, [sp, #32]
   300b8:	add	sp, sp, #36	; 0x24
   300bc:	b	2ea88 <__flatcc_fb_default_error_out@@Base+0x310>
   300c0:	cmp	r1, r0
   300c4:	bhi	30260 <__flatcc_error_report@@Base+0x1668>
   300c8:	ldr	r0, [r7, #20]
   300cc:	mov	ip, #5
   300d0:	str	r1, [r4, #52]	; 0x34
   300d4:	str	r0, [r5]
   300d8:	strh	ip, [r5, #8]
   300dc:	str	r5, [r7, #20]
   300e0:	ldr	r1, [r4, #36]	; 0x24
   300e4:	cmp	r1, #0
   300e8:	beq	3010c <__flatcc_error_report@@Base+0x1514>
   300ec:	mov	ip, #0
   300f0:	b	300f8 <__flatcc_error_report@@Base+0x1500>
   300f4:	mov	r1, r0
   300f8:	ldr	r0, [r1]
   300fc:	str	ip, [r1]
   30100:	mov	ip, r1
   30104:	cmp	r0, #0
   30108:	bne	300f4 <__flatcc_error_report@@Base+0x14fc>
   3010c:	mov	r6, #0
   30110:	cmp	fp, #9
   30114:	str	r1, [r5, #68]	; 0x44
   30118:	str	r6, [r4, #36]	; 0x24
   3011c:	bne	3023c <__flatcc_error_report@@Base+0x1644>
   30120:	mov	r0, r4
   30124:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   30128:	ldr	r1, [r4, #40]	; 0x28
   3012c:	ldr	r3, [r1, #16]
   30130:	str	sl, [r5, #4]
   30134:	cmp	r3, #40	; 0x28
   30138:	bne	30294 <__flatcc_error_report@@Base+0x169c>
   3013c:	mov	r0, r4
   30140:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   30144:	add	r1, r5, #32
   30148:	mov	r0, r4
   3014c:	bl	2efb4 <__flatcc_error_report@@Base+0x3bc>
   30150:	ldr	r1, [r4, #40]	; 0x28
   30154:	ldr	r3, [r1, #16]
   30158:	cmp	r3, #41	; 0x29
   3015c:	bne	302d8 <__flatcc_error_report@@Base+0x16e0>
   30160:	mov	r0, r4
   30164:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   30168:	ldr	r1, [r4, #40]	; 0x28
   3016c:	ldr	r3, [r1, #16]
   30170:	cmp	r3, #58	; 0x3a
   30174:	bne	302f8 <__flatcc_error_report@@Base+0x1700>
   30178:	mov	r0, r4
   3017c:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   30180:	add	r1, r5, #16
   30184:	mov	r0, r4
   30188:	bl	2efb4 <__flatcc_error_report@@Base+0x3bc>
   3018c:	ldr	sl, [r4, #40]	; 0x28
   30190:	ldr	r3, [sl, #16]
   30194:	cmp	r3, #61	; 0x3d
   30198:	beq	30318 <__flatcc_error_report@@Base+0x1720>
   3019c:	mov	r0, r4
   301a0:	bl	2fca8 <__flatcc_error_report@@Base+0x10b0>
   301a4:	ldr	r2, [pc, #432]	; 3035c <__flatcc_error_report@@Base+0x1764>
   301a8:	mov	r3, r6
   301ac:	mov	r1, #59	; 0x3b
   301b0:	str	r0, [r5, #64]	; 0x40
   301b4:	mov	r0, r4
   301b8:	add	r2, pc, r2
   301bc:	bl	2ef54 <__flatcc_error_report@@Base+0x35c>
   301c0:	b	30008 <__flatcc_error_report@@Base+0x1410>
   301c4:	mov	r3, r6
   301c8:	mov	r1, sl
   301cc:	str	r6, [sp]
   301d0:	mov	r0, r4
   301d4:	str	r6, [sp, #4]
   301d8:	ldr	r2, [sp, #8]
   301dc:	bl	2ebf8 <__flatcc_error_report@@Base>
   301e0:	mov	r0, r4
   301e4:	bl	2ea10 <__flatcc_fb_default_error_out@@Base+0x298>
   301e8:	b	30008 <__flatcc_error_report@@Base+0x1410>
   301ec:	mov	r1, #1
   301f0:	mov	r0, #65536	; 0x10000
   301f4:	bl	13f74 <calloc@plt>
   301f8:	cmp	r0, #0
   301fc:	beq	30344 <__flatcc_error_report@@Base+0x174c>
   30200:	ldr	ip, [r4, #48]	; 0x30
   30204:	add	lr, r0, #65536	; 0x10000
   30208:	add	r5, r0, #16
   3020c:	add	r1, r0, #144	; 0x90
   30210:	str	lr, [r4, #44]	; 0x2c
   30214:	str	r0, [r4, #48]	; 0x30
   30218:	str	ip, [r0]
   3021c:	b	2ff2c <__flatcc_error_report@@Base+0x1334>
   30220:	mov	r3, r6
   30224:	mov	r0, r4
   30228:	str	r6, [sp]
   3022c:	str	r6, [sp, #4]
   30230:	ldr	r2, [sp, #12]
   30234:	bl	2ebf8 <__flatcc_error_report@@Base>
   30238:	b	301e0 <__flatcc_error_report@@Base+0x15e8>
   3023c:	ldr	r2, [pc, #284]	; 30360 <__flatcc_error_report@@Base+0x1768>
   30240:	mov	r3, r6
   30244:	mov	r1, sl
   30248:	mov	r0, r4
   3024c:	str	r6, [sp]
   30250:	str	r6, [sp, #4]
   30254:	add	r2, pc, r2
   30258:	bl	2ebf8 <__flatcc_error_report@@Base>
   3025c:	b	301e0 <__flatcc_error_report@@Base+0x15e8>
   30260:	mov	r1, #1
   30264:	mov	r0, #65536	; 0x10000
   30268:	bl	13f74 <calloc@plt>
   3026c:	cmp	r0, #0
   30270:	beq	30344 <__flatcc_error_report@@Base+0x174c>
   30274:	ldr	ip, [r4, #48]	; 0x30
   30278:	add	lr, r0, #65536	; 0x10000
   3027c:	add	r5, r0, #16
   30280:	add	r1, r0, #144	; 0x90
   30284:	str	lr, [r4, #44]	; 0x2c
   30288:	str	r0, [r4, #48]	; 0x30
   3028c:	str	ip, [r0]
   30290:	b	300c8 <__flatcc_error_report@@Base+0x14d0>
   30294:	ldr	r2, [pc, #200]	; 30364 <__flatcc_error_report@@Base+0x176c>
   30298:	mov	r3, r6
   3029c:	mov	r0, r4
   302a0:	str	r6, [sp]
   302a4:	str	r6, [sp, #4]
   302a8:	add	r2, pc, r2
   302ac:	bl	2ebf8 <__flatcc_error_report@@Base>
   302b0:	b	301e0 <__flatcc_error_report@@Base+0x15e8>
   302b4:	ldr	r2, [pc, #172]	; 30368 <__flatcc_error_report@@Base+0x1770>
   302b8:	mov	ip, #0
   302bc:	mov	r1, r5
   302c0:	mov	r3, ip
   302c4:	str	ip, [sp]
   302c8:	str	ip, [sp, #4]
   302cc:	add	r2, pc, r2
   302d0:	bl	2ebf8 <__flatcc_error_report@@Base>
   302d4:	b	30098 <__flatcc_error_report@@Base+0x14a0>
   302d8:	ldr	r2, [pc, #140]	; 3036c <__flatcc_error_report@@Base+0x1774>
   302dc:	mov	r3, r6
   302e0:	mov	r0, r4
   302e4:	str	r6, [sp]
   302e8:	str	r6, [sp, #4]
   302ec:	add	r2, pc, r2
   302f0:	bl	2ebf8 <__flatcc_error_report@@Base>
   302f4:	b	301e0 <__flatcc_error_report@@Base+0x15e8>
   302f8:	ldr	r2, [pc, #112]	; 30370 <__flatcc_error_report@@Base+0x1778>
   302fc:	mov	r3, r6
   30300:	mov	r0, r4
   30304:	str	r6, [sp]
   30308:	str	r6, [sp, #4]
   3030c:	add	r2, pc, r2
   30310:	bl	2ebf8 <__flatcc_error_report@@Base>
   30314:	b	301e0 <__flatcc_error_report@@Base+0x15e8>
   30318:	mov	r0, r4
   3031c:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   30320:	ldr	r2, [pc, #76]	; 30374 <__flatcc_error_report@@Base+0x177c>
   30324:	mov	r3, r6
   30328:	mov	r1, sl
   3032c:	mov	r0, r4
   30330:	str	r6, [sp]
   30334:	str	r6, [sp, #4]
   30338:	add	r2, pc, r2
   3033c:	bl	2ebf8 <__flatcc_error_report@@Base>
   30340:	b	301e0 <__flatcc_error_report@@Base+0x15e8>
   30344:	bl	2e7a8 <__flatcc_fb_default_error_out@@Base+0x30>
   30348:	andeq	r9, r2, ip, lsl #2
   3034c:	andeq	r9, r2, r0, lsl r1
   30350:	andeq	r9, r2, r0, rrx
   30354:	andeq	r9, r2, r0, rrx
   30358:	andeq	r8, r2, ip, asr lr
   3035c:	strdeq	r8, [r2], -r0
   30360:			; <UNDEFINED> instruction: 0x00028cb4
   30364:	andeq	r8, r2, ip, ror ip
   30368:	strdeq	r8, [r2], -ip
   3036c:	andeq	r8, r2, r0, ror #24
   30370:	andeq	r8, r2, r8, ror #24
   30374:	muleq	r2, r4, ip

00030378 <error_ref_sym@@Base>:
   30378:	strd	r4, [sp, #-36]!	; 0xffffffdc
   3037c:	strd	r6, [sp, #8]
   30380:	strd	r8, [sp, #16]
   30384:	mov	r9, r3
   30388:	strd	sl, [sp, #24]
   3038c:	subs	sl, r1, #0
   30390:	str	lr, [sp, #32]
   30394:	sub	sp, sp, #76	; 0x4c
   30398:	str	r0, [sp, #8]
   3039c:	str	r2, [sp, #12]
   303a0:	beq	30480 <error_ref_sym@@Base+0x108>
   303a4:	mov	r6, sl
   303a8:	mov	fp, #0
   303ac:	mov	r4, #50	; 0x32
   303b0:	add	r7, sp, #20
   303b4:	mov	r8, #46	; 0x2e
   303b8:	ldr	r3, [r6, #4]
   303bc:	add	r0, r7, fp
   303c0:	ldm	r3, {r1, r5}
   303c4:	cmp	r5, r4
   303c8:	movge	r5, r4
   303cc:	mov	r2, r5
   303d0:	bl	13fb0 <memcpy@plt>
   303d4:	add	ip, r5, fp
   303d8:	add	r3, sp, #72	; 0x48
   303dc:	add	r3, r3, ip
   303e0:	sub	r5, r4, r5
   303e4:	sub	r4, r5, #1
   303e8:	add	fp, ip, #1
   303ec:	strb	r8, [r3, #-52]	; 0xffffffcc
   303f0:	cmp	r4, #0
   303f4:	ldr	r6, [r6]
   303f8:	movle	r2, #0
   303fc:	movgt	r2, #1
   30400:	cmp	r6, #0
   30404:	moveq	r2, #0
   30408:	cmp	r2, #0
   3040c:	bne	303b8 <error_ref_sym@@Base+0x40>
   30410:	add	r3, sp, #72	; 0x48
   30414:	cmp	fp, #0
   30418:	add	r1, r3, fp
   3041c:	movle	ip, fp
   30420:	cmp	r4, #0
   30424:	strb	r2, [r1, #-52]	; 0xffffffcc
   30428:	ble	30468 <error_ref_sym@@Base+0xf0>
   3042c:	cmp	r9, #0
   30430:	ldr	r1, [sl, #4]
   30434:	ldrne	r9, [r9, #4]
   30438:	stm	sp, {r7, ip}
   3043c:	ldr	r0, [sp, #8]
   30440:	ldr	r2, [sp, #12]
   30444:	mov	r3, r9
   30448:	bl	2ebf8 <__flatcc_error_report@@Base>
   3044c:	add	sp, sp, #76	; 0x4c
   30450:	ldrd	r4, [sp]
   30454:	ldrd	r6, [sp, #8]
   30458:	ldrd	r8, [sp, #16]
   3045c:	ldrd	sl, [sp, #24]
   30460:	add	sp, sp, #32
   30464:	pop	{pc}		; (ldr pc, [sp], #4)
   30468:	ldr	r3, [pc, #32]	; 30490 <error_ref_sym@@Base+0x118>
   3046c:	mov	ip, #50	; 0x32
   30470:	add	r3, pc, r3
   30474:	ldr	r3, [r3, #8]
   30478:	str	r3, [sp, #67]	; 0x43
   3047c:	b	3042c <error_ref_sym@@Base+0xb4>
   30480:	mov	ip, sl
   30484:	add	r7, sp, #20
   30488:	strb	sl, [sp, #20]
   3048c:	b	3042c <error_ref_sym@@Base+0xb4>
   30490:	andeq	r8, r2, r8, ror #10

00030494 <__flatcc_fb_init_parser@@Base>:
   30494:	strd	r4, [sp, #-32]!	; 0xffffffe0
   30498:	mov	r4, r0
   3049c:	strd	r6, [sp, #8]
   304a0:	mov	r6, r2
   304a4:	mov	r2, #560	; 0x230
   304a8:	strd	r8, [sp, #16]
   304ac:	mov	r9, r1
   304b0:	mov	r1, #0
   304b4:	str	sl, [sp, #24]
   304b8:	mov	r7, r3
   304bc:	str	lr, [sp, #28]
   304c0:	sub	sp, sp, #8
   304c4:	ldr	r5, [sp, #44]	; 0x2c
   304c8:	bl	1407c <memset@plt>
   304cc:	ldr	r3, [pc, #680]	; 3077c <__flatcc_fb_init_parser@@Base+0x2e8>
   304d0:	cmp	r7, #0
   304d4:	add	r3, pc, r3
   304d8:	beq	306c0 <__flatcc_fb_init_parser@@Base+0x22c>
   304dc:	ldr	r3, [sp, #40]	; 0x28
   304e0:	str	r7, [r4, #8]
   304e4:	str	r3, [r4, #12]
   304e8:	cmp	r9, #0
   304ec:	add	r0, r4, #128	; 0x80
   304f0:	beq	306b8 <__flatcc_fb_init_parser@@Base+0x224>
   304f4:	mov	r2, #224	; 0xe0
   304f8:	mov	r1, r9
   304fc:	bl	13fb0 <memcpy@plt>
   30500:	ldr	r3, [r4, #192]	; 0xc0
   30504:	cmp	r5, #0
   30508:	addeq	r5, r4, #416	; 0x1a0
   3050c:	str	r5, [r4, #412]	; 0x19c
   30510:	cmp	r3, #4
   30514:	beq	30554 <__flatcc_fb_init_parser@@Base+0xc0>
   30518:	cmp	r3, #8
   3051c:	beq	30554 <__flatcc_fb_init_parser@@Base+0xc0>
   30520:	cmp	r3, #2
   30524:	beq	30554 <__flatcc_fb_init_parser@@Base+0xc0>
   30528:	ldr	r2, [pc, #592]	; 30780 <__flatcc_fb_init_parser@@Base+0x2ec>
   3052c:	mov	ip, #0
   30530:	mov	r0, r4
   30534:	add	r2, pc, r2
   30538:	mov	r3, ip
   3053c:	mov	r1, ip
   30540:	str	ip, [sp]
   30544:	str	ip, [sp, #4]
   30548:	bl	2ebf8 <__flatcc_error_report@@Base>
   3054c:	mvn	r0, #0
   30550:	b	3069c <__flatcc_fb_init_parser@@Base+0x208>
   30554:	ldr	r3, [r4, #196]	; 0xc4
   30558:	cmp	r3, #4
   3055c:	beq	30584 <__flatcc_fb_init_parser@@Base+0xf0>
   30560:	cmp	r3, #8
   30564:	beq	30584 <__flatcc_fb_init_parser@@Base+0xf0>
   30568:	cmp	r3, #2
   3056c:	beq	30584 <__flatcc_fb_init_parser@@Base+0xf0>
   30570:	ldr	r2, [pc, #524]	; 30784 <__flatcc_fb_init_parser@@Base+0x2f0>
   30574:	mov	ip, #0
   30578:	mov	r0, r4
   3057c:	add	r2, pc, r2
   30580:	b	30538 <__flatcc_fb_init_parser@@Base+0xa4>
   30584:	cmp	r6, #0
   30588:	beq	306d0 <__flatcc_fb_init_parser@@Base+0x23c>
   3058c:	mov	r0, r6
   30590:	bl	1404c <strlen@plt>
   30594:	mov	sl, r0
   30598:	mov	r1, sl
   3059c:	mov	r0, r6
   305a0:	ldr	r2, [r9, #96]	; 0x60
   305a4:	bl	2e5f4 <__flatcc_fb_create_basename@@Base>
   305a8:	cmp	r0, #0
   305ac:	mov	r5, r0
   305b0:	str	r0, [r4, #512]	; 0x200
   305b4:	beq	30754 <__flatcc_fb_init_parser@@Base+0x2c0>
   305b8:	bl	1404c <strlen@plt>
   305bc:	mov	r1, r0
   305c0:	mov	r8, r0
   305c4:	mov	r0, r5
   305c8:	bl	2e0a8 <__flatcc_fb_copy_path_n@@Base>
   305cc:	subs	r5, r0, #0
   305d0:	beq	30754 <__flatcc_fb_init_parser@@Base+0x2c0>
   305d4:	cmp	r8, #0
   305d8:	beq	3061c <__flatcc_fb_init_parser@@Base+0x188>
   305dc:	ldrb	r7, [r5]
   305e0:	cmp	r7, #0
   305e4:	beq	3061c <__flatcc_fb_init_parser@@Base+0x188>
   305e8:	bl	14028 <__ctype_toupper_loc@plt>
   305ec:	sub	r2, r8, #1
   305f0:	mov	r3, r5
   305f4:	add	r2, r5, r2
   305f8:	b	30608 <__flatcc_fb_init_parser@@Base+0x174>
   305fc:	ldrb	r7, [r3, #1]!
   30600:	cmp	r7, #0
   30604:	beq	3061c <__flatcc_fb_init_parser@@Base+0x188>
   30608:	ldr	r1, [r0]
   3060c:	cmp	r3, r2
   30610:	ldr	r1, [r1, r7, lsl #2]
   30614:	strb	r1, [r3]
   30618:	bne	305fc <__flatcc_fb_init_parser@@Base+0x168>
   3061c:	ldr	r2, [pc, #356]	; 30788 <__flatcc_fb_init_parser@@Base+0x2f4>
   30620:	mov	r1, sl
   30624:	mov	r0, r6
   30628:	str	r5, [r4, #496]	; 0x1f0
   3062c:	str	r8, [r4, #500]	; 0x1f4
   30630:	str	r5, [r4, #516]	; 0x204
   30634:	add	r2, pc, r2
   30638:	bl	2e5f4 <__flatcc_fb_create_basename@@Base>
   3063c:	cmp	r0, #0
   30640:	str	r0, [r4, #520]	; 0x208
   30644:	beq	30754 <__flatcc_fb_init_parser@@Base+0x2c0>
   30648:	ldr	r3, [r9, #192]	; 0xc0
   3064c:	cmp	r3, #0
   30650:	beq	30664 <__flatcc_fb_init_parser@@Base+0x1d0>
   30654:	mov	r0, r3
   30658:	str	r3, [r4, #476]	; 0x1dc
   3065c:	bl	1404c <strlen@plt>
   30660:	str	r0, [r4, #480]	; 0x1e0
   30664:	mov	r2, #0
   30668:	ldr	r0, [r4, #412]	; 0x19c
   3066c:	mov	r1, r2
   30670:	bl	2d85c <fb_scope_table_find@@Base>
   30674:	subs	r5, r0, #0
   30678:	beq	306e0 <__flatcc_fb_init_parser@@Base+0x24c>
   3067c:	mov	r2, #0
   30680:	str	r5, [r4, #544]	; 0x220
   30684:	mov	r1, r2
   30688:	ldr	r0, [r4, #412]	; 0x19c
   3068c:	bl	2d85c <fb_scope_table_find@@Base>
   30690:	cmp	r5, r0
   30694:	moveq	r0, #0
   30698:	bne	30758 <__flatcc_fb_init_parser@@Base+0x2c4>
   3069c:	add	sp, sp, #8
   306a0:	ldrd	r4, [sp]
   306a4:	ldrd	r6, [sp, #8]
   306a8:	ldrd	r8, [sp, #16]
   306ac:	ldr	sl, [sp, #24]
   306b0:	add	sp, sp, #28
   306b4:	pop	{pc}		; (ldr pc, [sp], #4)
   306b8:	bl	15140 <flatcc_init_options@@Base>
   306bc:	b	30500 <__flatcc_fb_init_parser@@Base+0x6c>
   306c0:	ldr	r2, [pc, #196]	; 3078c <__flatcc_fb_init_parser@@Base+0x2f8>
   306c4:	ldr	r3, [r3, r2]
   306c8:	str	r3, [r4, #8]
   306cc:	b	304e8 <__flatcc_fb_init_parser@@Base+0x54>
   306d0:	ldr	r6, [pc, #184]	; 30790 <__flatcc_fb_init_parser@@Base+0x2fc>
   306d4:	mov	sl, #4
   306d8:	add	r6, pc, r6
   306dc:	b	30598 <__flatcc_fb_init_parser@@Base+0x104>
   306e0:	ldr	r3, [r4, #44]	; 0x2c
   306e4:	ldr	r5, [r4, #52]	; 0x34
   306e8:	add	r2, r5, #32
   306ec:	cmp	r2, r3
   306f0:	bhi	30720 <__flatcc_fb_init_parser@@Base+0x28c>
   306f4:	add	r3, r4, #476	; 0x1dc
   306f8:	mov	r1, r5
   306fc:	ldr	r0, [r4, #412]	; 0x19c
   30700:	ldrd	r6, [r3]
   30704:	mov	r3, #0
   30708:	str	r2, [r4, #52]	; 0x34
   3070c:	mov	r2, #1
   30710:	str	r3, [r5]
   30714:	strd	r6, [r5, #20]
   30718:	bl	2d838 <fb_scope_table_insert_item@@Base>
   3071c:	b	3067c <__flatcc_fb_init_parser@@Base+0x1e8>
   30720:	mov	r1, #1
   30724:	mov	r0, #65536	; 0x10000
   30728:	bl	13f74 <calloc@plt>
   3072c:	cmp	r0, #0
   30730:	beq	30754 <__flatcc_fb_init_parser@@Base+0x2c0>
   30734:	ldr	r3, [r4, #48]	; 0x30
   30738:	add	r1, r0, #65536	; 0x10000
   3073c:	add	r5, r0, #16
   30740:	add	r2, r0, #48	; 0x30
   30744:	str	r1, [r4, #44]	; 0x2c
   30748:	str	r0, [r4, #48]	; 0x30
   3074c:	str	r3, [r0]
   30750:	b	306f4 <__flatcc_fb_init_parser@@Base+0x260>
   30754:	bl	2e7a8 <__flatcc_fb_default_error_out@@Base+0x30>
   30758:	ldr	r3, [pc, #52]	; 30794 <__flatcc_fb_init_parser@@Base+0x300>
   3075c:	movw	r2, #1331	; 0x533
   30760:	ldr	r1, [pc, #48]	; 30798 <__flatcc_fb_init_parser@@Base+0x304>
   30764:	ldr	r0, [pc, #48]	; 3079c <__flatcc_fb_init_parser@@Base+0x308>
   30768:	add	r3, pc, r3
   3076c:	add	r3, r3, #16
   30770:	add	r1, pc, r1
   30774:	add	r0, pc, r0
   30778:	bl	14118 <__assert_fail@plt>
   3077c:	andeq	ip, r3, r4, lsr #22
   30780:	andeq	r8, r2, r8, asr fp
   30784:	andeq	r8, r2, r8, asr #22
   30788:	andeq	fp, r1, r4, lsl #11
   3078c:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   30790:	andeq	r8, r2, ip, lsr #19
   30794:	andeq	r8, r2, r0, ror r2
   30798:	muleq	r2, r0, r3
   3079c:	andeq	r8, r2, ip, lsl #19

000307a0 <__flatcc_fb_parse@@Base>:
   307a0:	ldr	ip, [pc, #4080]	; 31798 <__flatcc_fb_parse@@Base+0xff8>
   307a4:	cmp	r3, #0
   307a8:	mov	r3, #4
   307ac:	strd	r4, [sp, #-36]!	; 0xffffffdc
   307b0:	mov	r5, r1
   307b4:	mov	r4, r0
   307b8:	ldr	r1, [pc, #4060]	; 3179c <__flatcc_fb_parse@@Base+0xffc>
   307bc:	mov	r0, #1
   307c0:	strd	r6, [sp, #8]
   307c4:	add	r6, r5, r2
   307c8:	strd	r8, [sp, #16]
   307cc:	movw	r9, #26174	; 0x663e
   307d0:	movt	r9, #28265	; 0x6e69
   307d4:	add	ip, pc, ip
   307d8:	strd	sl, [sp, #24]
   307dc:	movw	sl, #29243	; 0x723b
   307e0:	movt	sl, #25968	; 0x6570
   307e4:	str	lr, [sp, #32]
   307e8:	movw	fp, #26931	; 0x6933
   307ec:	movt	fp, #29806	; 0x746e
   307f0:	sub	sp, sp, #36	; 0x24
   307f4:	strne	r5, [r4, #16]
   307f8:	str	r3, [r4, #72]	; 0x48
   307fc:	mov	r3, #0
   30800:	add	r1, pc, r1
   30804:	mov	lr, #9
   30808:	str	r0, [r4, #64]	; 0x40
   3080c:	movw	r0, #64554	; 0xfc2a
   30810:	movt	r0, #65535	; 0xffff
   30814:	str	ip, [r4, #68]	; 0x44
   30818:	mov	ip, #5
   3081c:	str	sl, [sp, #16]
   30820:	str	r3, [r4, #76]	; 0x4c
   30824:	str	r3, [r4, #80]	; 0x50
   30828:	str	r3, [r4, #96]	; 0x60
   3082c:	str	r3, [r4, #100]	; 0x64
   30830:	movw	r3, #30004	; 0x7534
   30834:	movt	r3, #29801	; 0x7469
   30838:	str	r5, [r4, #60]	; 0x3c
   3083c:	str	r3, [sp, #12]
   30840:	str	lr, [r4, #84]	; 0x54
   30844:	str	r1, [r4, #88]	; 0x58
   30848:	str	ip, [r4, #92]	; 0x5c
   3084c:	str	r0, [r4, #104]	; 0x68
   30850:	cmp	r6, r5
   30854:	beq	30a98 <__flatcc_fb_parse@@Base+0x2f8>
   30858:	ldrb	r1, [r5]
   3085c:	movw	r7, #30006	; 0x7536
   30860:	movt	r7, #29811	; 0x7473
   30864:	movw	sl, #29494	; 0x7336
   30868:	movt	sl, #29812	; 0x7474
   3086c:	cmp	r1, #126	; 0x7e
   30870:	addls	pc, pc, r1, lsl #2
   30874:	b	32118 <__flatcc_fb_parse@@Base+0x1978>
   30878:	b	30a98 <__flatcc_fb_parse@@Base+0x2f8>
   3087c:	b	32118 <__flatcc_fb_parse@@Base+0x1978>
   30880:	b	32118 <__flatcc_fb_parse@@Base+0x1978>
   30884:	b	32118 <__flatcc_fb_parse@@Base+0x1978>
   30888:	b	32118 <__flatcc_fb_parse@@Base+0x1978>
   3088c:	b	32118 <__flatcc_fb_parse@@Base+0x1978>
   30890:	b	32118 <__flatcc_fb_parse@@Base+0x1978>
   30894:	b	32118 <__flatcc_fb_parse@@Base+0x1978>
   30898:	b	32118 <__flatcc_fb_parse@@Base+0x1978>
   3089c:	b	30a74 <__flatcc_fb_parse@@Base+0x2d4>
   308a0:	b	31e8c <__flatcc_fb_parse@@Base+0x16ec>
   308a4:	b	32118 <__flatcc_fb_parse@@Base+0x1978>
   308a8:	b	32118 <__flatcc_fb_parse@@Base+0x1978>
   308ac:	b	31ebc <__flatcc_fb_parse@@Base+0x171c>
   308b0:	b	32118 <__flatcc_fb_parse@@Base+0x1978>
   308b4:	b	32118 <__flatcc_fb_parse@@Base+0x1978>
   308b8:	b	32118 <__flatcc_fb_parse@@Base+0x1978>
   308bc:	b	32118 <__flatcc_fb_parse@@Base+0x1978>
   308c0:	b	32118 <__flatcc_fb_parse@@Base+0x1978>
   308c4:	b	32118 <__flatcc_fb_parse@@Base+0x1978>
   308c8:	b	32118 <__flatcc_fb_parse@@Base+0x1978>
   308cc:	b	32118 <__flatcc_fb_parse@@Base+0x1978>
   308d0:	b	32118 <__flatcc_fb_parse@@Base+0x1978>
   308d4:	b	32118 <__flatcc_fb_parse@@Base+0x1978>
   308d8:	b	32118 <__flatcc_fb_parse@@Base+0x1978>
   308dc:	b	32118 <__flatcc_fb_parse@@Base+0x1978>
   308e0:	b	32118 <__flatcc_fb_parse@@Base+0x1978>
   308e4:	b	32118 <__flatcc_fb_parse@@Base+0x1978>
   308e8:	b	32118 <__flatcc_fb_parse@@Base+0x1978>
   308ec:	b	32118 <__flatcc_fb_parse@@Base+0x1978>
   308f0:	b	32118 <__flatcc_fb_parse@@Base+0x1978>
   308f4:	b	32118 <__flatcc_fb_parse@@Base+0x1978>
   308f8:	b	30a74 <__flatcc_fb_parse@@Base+0x2d4>
   308fc:	b	31b08 <__flatcc_fb_parse@@Base+0x1368>
   30900:	b	30cfc <__flatcc_fb_parse@@Base+0x55c>
   30904:	b	32118 <__flatcc_fb_parse@@Base+0x1978>
   30908:	b	32118 <__flatcc_fb_parse@@Base+0x1978>
   3090c:	b	31b08 <__flatcc_fb_parse@@Base+0x1368>
   30910:	b	31acc <__flatcc_fb_parse@@Base+0x132c>
   30914:	b	32118 <__flatcc_fb_parse@@Base+0x1978>
   30918:	b	31ab4 <__flatcc_fb_parse@@Base+0x1314>
   3091c:	b	31ab4 <__flatcc_fb_parse@@Base+0x1314>
   30920:	b	31a74 <__flatcc_fb_parse@@Base+0x12d4>
   30924:	b	31a38 <__flatcc_fb_parse@@Base+0x1298>
   30928:	b	31ab4 <__flatcc_fb_parse@@Base+0x1314>
   3092c:	b	31e4c <__flatcc_fb_parse@@Base+0x16ac>
   30930:	b	31df4 <__flatcc_fb_parse@@Base+0x1654>
   30934:	b	31d38 <__flatcc_fb_parse@@Base+0x1598>
   30938:	b	31cd0 <__flatcc_fb_parse@@Base+0x1530>
   3093c:	b	3194c <__flatcc_fb_parse@@Base+0x11ac>
   30940:	b	3194c <__flatcc_fb_parse@@Base+0x11ac>
   30944:	b	3194c <__flatcc_fb_parse@@Base+0x11ac>
   30948:	b	3194c <__flatcc_fb_parse@@Base+0x11ac>
   3094c:	b	3194c <__flatcc_fb_parse@@Base+0x11ac>
   30950:	b	3194c <__flatcc_fb_parse@@Base+0x11ac>
   30954:	b	3194c <__flatcc_fb_parse@@Base+0x11ac>
   30958:	b	3194c <__flatcc_fb_parse@@Base+0x11ac>
   3095c:	b	3194c <__flatcc_fb_parse@@Base+0x11ac>
   30960:	b	319f0 <__flatcc_fb_parse@@Base+0x1250>
   30964:	b	31ab4 <__flatcc_fb_parse@@Base+0x1314>
   30968:	b	31db4 <__flatcc_fb_parse@@Base+0x1614>
   3096c:	b	31d78 <__flatcc_fb_parse@@Base+0x15d8>
   30970:	b	31c5c <__flatcc_fb_parse@@Base+0x14bc>
   30974:	b	31ab4 <__flatcc_fb_parse@@Base+0x1314>
   30978:	b	32118 <__flatcc_fb_parse@@Base+0x1978>
   3097c:	b	31b88 <__flatcc_fb_parse@@Base+0x13e8>
   30980:	b	31b88 <__flatcc_fb_parse@@Base+0x13e8>
   30984:	b	31b88 <__flatcc_fb_parse@@Base+0x13e8>
   30988:	b	31b88 <__flatcc_fb_parse@@Base+0x13e8>
   3098c:	b	31b88 <__flatcc_fb_parse@@Base+0x13e8>
   30990:	b	31b88 <__flatcc_fb_parse@@Base+0x13e8>
   30994:	b	31b88 <__flatcc_fb_parse@@Base+0x13e8>
   30998:	b	31b88 <__flatcc_fb_parse@@Base+0x13e8>
   3099c:	b	31b88 <__flatcc_fb_parse@@Base+0x13e8>
   309a0:	b	31b88 <__flatcc_fb_parse@@Base+0x13e8>
   309a4:	b	31b88 <__flatcc_fb_parse@@Base+0x13e8>
   309a8:	b	31b88 <__flatcc_fb_parse@@Base+0x13e8>
   309ac:	b	31b88 <__flatcc_fb_parse@@Base+0x13e8>
   309b0:	b	31b88 <__flatcc_fb_parse@@Base+0x13e8>
   309b4:	b	31b88 <__flatcc_fb_parse@@Base+0x13e8>
   309b8:	b	31b88 <__flatcc_fb_parse@@Base+0x13e8>
   309bc:	b	31b88 <__flatcc_fb_parse@@Base+0x13e8>
   309c0:	b	31b88 <__flatcc_fb_parse@@Base+0x13e8>
   309c4:	b	31b88 <__flatcc_fb_parse@@Base+0x13e8>
   309c8:	b	31b88 <__flatcc_fb_parse@@Base+0x13e8>
   309cc:	b	31b88 <__flatcc_fb_parse@@Base+0x13e8>
   309d0:	b	31b88 <__flatcc_fb_parse@@Base+0x13e8>
   309d4:	b	31b88 <__flatcc_fb_parse@@Base+0x13e8>
   309d8:	b	31b88 <__flatcc_fb_parse@@Base+0x13e8>
   309dc:	b	31b88 <__flatcc_fb_parse@@Base+0x13e8>
   309e0:	b	31b88 <__flatcc_fb_parse@@Base+0x13e8>
   309e4:	b	31ab4 <__flatcc_fb_parse@@Base+0x1314>
   309e8:	b	31ab4 <__flatcc_fb_parse@@Base+0x1314>
   309ec:	b	31ab4 <__flatcc_fb_parse@@Base+0x1314>
   309f0:	b	31b08 <__flatcc_fb_parse@@Base+0x1368>
   309f4:	b	31b88 <__flatcc_fb_parse@@Base+0x13e8>
   309f8:	b	32118 <__flatcc_fb_parse@@Base+0x1978>
   309fc:	b	31b88 <__flatcc_fb_parse@@Base+0x13e8>
   30a00:	b	31b88 <__flatcc_fb_parse@@Base+0x13e8>
   30a04:	b	31b88 <__flatcc_fb_parse@@Base+0x13e8>
   30a08:	b	31b88 <__flatcc_fb_parse@@Base+0x13e8>
   30a0c:	b	31b88 <__flatcc_fb_parse@@Base+0x13e8>
   30a10:	b	31b88 <__flatcc_fb_parse@@Base+0x13e8>
   30a14:	b	31b88 <__flatcc_fb_parse@@Base+0x13e8>
   30a18:	b	31b88 <__flatcc_fb_parse@@Base+0x13e8>
   30a1c:	b	31b88 <__flatcc_fb_parse@@Base+0x13e8>
   30a20:	b	31b88 <__flatcc_fb_parse@@Base+0x13e8>
   30a24:	b	31b88 <__flatcc_fb_parse@@Base+0x13e8>
   30a28:	b	31b88 <__flatcc_fb_parse@@Base+0x13e8>
   30a2c:	b	31b88 <__flatcc_fb_parse@@Base+0x13e8>
   30a30:	b	31b88 <__flatcc_fb_parse@@Base+0x13e8>
   30a34:	b	31b88 <__flatcc_fb_parse@@Base+0x13e8>
   30a38:	b	31b88 <__flatcc_fb_parse@@Base+0x13e8>
   30a3c:	b	31b88 <__flatcc_fb_parse@@Base+0x13e8>
   30a40:	b	31b88 <__flatcc_fb_parse@@Base+0x13e8>
   30a44:	b	31b88 <__flatcc_fb_parse@@Base+0x13e8>
   30a48:	b	31b88 <__flatcc_fb_parse@@Base+0x13e8>
   30a4c:	b	31b88 <__flatcc_fb_parse@@Base+0x13e8>
   30a50:	b	31b88 <__flatcc_fb_parse@@Base+0x13e8>
   30a54:	b	31b88 <__flatcc_fb_parse@@Base+0x13e8>
   30a58:	b	31b88 <__flatcc_fb_parse@@Base+0x13e8>
   30a5c:	b	31b88 <__flatcc_fb_parse@@Base+0x13e8>
   30a60:	b	31b88 <__flatcc_fb_parse@@Base+0x13e8>
   30a64:	b	31ab4 <__flatcc_fb_parse@@Base+0x1314>
   30a68:	b	31b34 <__flatcc_fb_parse@@Base+0x1394>
   30a6c:	b	31ab4 <__flatcc_fb_parse@@Base+0x1314>
   30a70:	b	31b08 <__flatcc_fb_parse@@Base+0x1368>
   30a74:	add	r3, r5, #1
   30a78:	b	30a8c <__flatcc_fb_parse@@Base+0x2ec>
   30a7c:	ldrb	r1, [r3], #1
   30a80:	cmp	r1, #9
   30a84:	cmpne	r1, #32
   30a88:	bne	3086c <__flatcc_fb_parse@@Base+0xcc>
   30a8c:	cmp	r6, r3
   30a90:	mov	r5, r3
   30a94:	bne	30a7c <__flatcc_fb_parse@@Base+0x2dc>
   30a98:	mov	r3, r5
   30a9c:	mov	r2, r5
   30aa0:	mov	r1, #0
   30aa4:	mov	r0, r4
   30aa8:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   30aac:	ldr	r6, [r4, #20]
   30ab0:	ldr	r3, [r4, #40]	; 0x28
   30ab4:	ldr	r0, [r4, #216]	; 0xd8
   30ab8:	str	r3, [r4, #24]
   30abc:	str	r6, [r4, #40]	; 0x28
   30ac0:	bl	14010 <malloc@plt>
   30ac4:	cmp	r0, #0
   30ac8:	str	r0, [r4, #112]	; 0x70
   30acc:	beq	33510 <__flatcc_fb_parse@@Base+0x2d70>
   30ad0:	ldr	r3, [r6, #16]
   30ad4:	cmn	r3, #964	; 0x3c4
   30ad8:	beq	3267c <__flatcc_fb_parse@@Base+0x1edc>
   30adc:	ldr	r9, [pc, #3260]	; 317a0 <__flatcc_fb_parse@@Base+0x1000>
   30ae0:	movw	r7, #64565	; 0xfc35
   30ae4:	movt	r7, #65535	; 0xffff
   30ae8:	mov	r1, r6
   30aec:	ldr	r8, [pc, #3248]	; 317a4 <__flatcc_fb_parse@@Base+0x1004>
   30af0:	add	r9, pc, r9
   30af4:	add	r8, pc, r8
   30af8:	cmp	r3, r7
   30afc:	beq	30ec4 <__flatcc_fb_parse@@Base+0x724>
   30b00:	ldr	ip, [r4, #108]	; 0x6c
   30b04:	mov	r5, r1
   30b08:	ldr	r2, [pc, #3224]	; 317a8 <__flatcc_fb_parse@@Base+0x1008>
   30b0c:	ldr	r8, [pc, #3224]	; 317ac <__flatcc_fb_parse@@Base+0x100c>
   30b10:	ldr	r9, [pc, #3224]	; 317b0 <__flatcc_fb_parse@@Base+0x1010>
   30b14:	add	r2, pc, r2
   30b18:	str	r2, [sp, #16]
   30b1c:	add	r8, pc, r8
   30b20:	ldr	r2, [pc, #3212]	; 317b4 <__flatcc_fb_parse@@Base+0x1014>
   30b24:	add	r9, pc, r9
   30b28:	add	r2, pc, r2
   30b2c:	str	r2, [sp, #12]
   30b30:	b	30ba4 <__flatcc_fb_parse@@Base+0x404>
   30b34:	mvn	r2, #972	; 0x3cc
   30b38:	cmp	r3, r2
   30b3c:	beq	31100 <__flatcc_fb_parse@@Base+0x960>
   30b40:	cmn	r3, #972	; 0x3cc
   30b44:	bge	30df8 <__flatcc_fb_parse@@Base+0x658>
   30b48:	movw	r2, #64553	; 0xfc29
   30b4c:	movt	r2, #65535	; 0xffff
   30b50:	cmp	r3, r2
   30b54:	beq	316b8 <__flatcc_fb_parse@@Base+0xf18>
   30b58:	cmn	r3, #976	; 0x3d0
   30b5c:	beq	31444 <__flatcc_fb_parse@@Base+0xca4>
   30b60:	mvn	r2, #996	; 0x3e4
   30b64:	cmp	r3, r2
   30b68:	beq	31184 <__flatcc_fb_parse@@Base+0x9e4>
   30b6c:	ldr	r2, [pc, #3140]	; 317b8 <__flatcc_fb_parse@@Base+0x1018>
   30b70:	mov	ip, #0
   30b74:	add	r2, pc, r2
   30b78:	mov	r3, ip
   30b7c:	mov	r0, r4
   30b80:	str	ip, [sp]
   30b84:	str	ip, [sp, #4]
   30b88:	bl	2ebf8 <__flatcc_error_report@@Base>
   30b8c:	ldr	r3, [r4, #40]	; 0x28
   30b90:	ldr	ip, [r4, #108]	; 0x6c
   30b94:	cmp	r5, r3
   30b98:	beq	30cb0 <__flatcc_fb_parse@@Base+0x510>
   30b9c:	mov	r5, r3
   30ba0:	ldr	r3, [r3, #16]
   30ba4:	cmp	r3, #0
   30ba8:	beq	32158 <__flatcc_fb_parse@@Base+0x19b8>
   30bac:	cmp	ip, #9
   30bb0:	bgt	30cdc <__flatcc_fb_parse@@Base+0x53c>
   30bb4:	ldr	r1, [r4, #40]	; 0x28
   30bb8:	ldr	r3, [r1, #16]
   30bbc:	cmn	r3, #968	; 0x3c8
   30bc0:	beq	31098 <__flatcc_fb_parse@@Base+0x8f8>
   30bc4:	ble	30b34 <__flatcc_fb_parse@@Base+0x394>
   30bc8:	cmp	r3, #5
   30bcc:	beq	3106c <__flatcc_fb_parse@@Base+0x8cc>
   30bd0:	bgt	30db4 <__flatcc_fb_parse@@Base+0x614>
   30bd4:	movw	r2, #64570	; 0xfc3a
   30bd8:	movt	r2, #65535	; 0xffff
   30bdc:	cmp	r3, r2
   30be0:	beq	30fec <__flatcc_fb_parse@@Base+0x84c>
   30be4:	blt	30f64 <__flatcc_fb_parse@@Base+0x7c4>
   30be8:	mvn	r2, #964	; 0x3c4
   30bec:	cmp	r3, r2
   30bf0:	bne	30b6c <__flatcc_fb_parse@@Base+0x3cc>
   30bf4:	mov	r0, r4
   30bf8:	add	r6, r4, #360	; 0x168
   30bfc:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   30c00:	ldrh	r3, [r6, #8]
   30c04:	cmp	r3, #0
   30c08:	bne	3205c <__flatcc_fb_parse@@Base+0x18bc>
   30c0c:	ldr	r1, [r4, #40]	; 0x28
   30c10:	ldr	r3, [r1, #16]
   30c14:	cmp	r3, #19
   30c18:	bne	31788 <__flatcc_fb_parse@@Base+0xfe8>
   30c1c:	mov	r0, r4
   30c20:	mov	r7, #0
   30c24:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   30c28:	mov	r3, #2
   30c2c:	mov	r1, r6
   30c30:	ldr	sl, [r4, #40]	; 0x28
   30c34:	mov	r0, r4
   30c38:	strh	r3, [r6, #8]
   30c3c:	str	r7, [r4, #360]	; 0x168
   30c40:	str	r7, [r4, #364]	; 0x16c
   30c44:	bl	2f3e0 <__flatcc_error_report@@Base+0x7e8>
   30c48:	ldr	r3, [r4, #360]	; 0x168
   30c4c:	cmp	r3, r7
   30c50:	beq	30c88 <__flatcc_fb_parse@@Base+0x4e8>
   30c54:	ldr	r3, [r4, #364]	; 0x16c
   30c58:	cmp	r3, #4
   30c5c:	beq	30c88 <__flatcc_fb_parse@@Base+0x4e8>
   30c60:	mov	r2, #1
   30c64:	str	r7, [sp]
   30c68:	mov	r1, sl
   30c6c:	str	r7, [sp, #4]
   30c70:	mov	r3, r7
   30c74:	mov	r0, r4
   30c78:	strh	r2, [r6, #8]
   30c7c:	ldr	r2, [pc, #2872]	; 317bc <__flatcc_fb_parse@@Base+0x101c>
   30c80:	add	r2, pc, r2
   30c84:	bl	2ebf8 <__flatcc_error_report@@Base>
   30c88:	ldr	r1, [r4, #40]	; 0x28
   30c8c:	ldr	r3, [r1, #16]
   30c90:	cmp	r3, #59	; 0x3b
   30c94:	bne	31f14 <__flatcc_fb_parse@@Base+0x1774>
   30c98:	mov	r0, r4
   30c9c:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   30ca0:	ldr	r3, [r4, #40]	; 0x28
   30ca4:	ldr	ip, [r4, #108]	; 0x6c
   30ca8:	cmp	r5, r3
   30cac:	bne	30b9c <__flatcc_fb_parse@@Base+0x3fc>
   30cb0:	cmp	ip, #0
   30cb4:	bne	30cdc <__flatcc_fb_parse@@Base+0x53c>
   30cb8:	ldr	r2, [pc, #2816]	; 317c0 <__flatcc_fb_parse@@Base+0x1020>
   30cbc:	mov	r3, ip
   30cc0:	mov	r1, r5
   30cc4:	mov	r0, r4
   30cc8:	str	ip, [sp]
   30ccc:	str	ip, [sp, #4]
   30cd0:	add	r2, pc, r2
   30cd4:	bl	2ebf8 <__flatcc_error_report@@Base>
   30cd8:	ldr	ip, [r4, #108]	; 0x6c
   30cdc:	mov	r0, ip
   30ce0:	add	sp, sp, #36	; 0x24
   30ce4:	ldrd	r4, [sp]
   30ce8:	ldrd	r6, [sp, #8]
   30cec:	ldrd	r8, [sp, #16]
   30cf0:	ldrd	sl, [sp, #24]
   30cf4:	add	sp, sp, #32
   30cf8:	pop	{pc}		; (ldr pc, [sp], #4)
   30cfc:	add	r7, r5, #1
   30d00:	mov	r2, r5
   30d04:	mov	r3, r7
   30d08:	mov	r1, #19
   30d0c:	mov	r0, r4
   30d10:	mov	r8, r7
   30d14:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   30d18:	sub	r7, r7, #1
   30d1c:	b	30d30 <__flatcc_fb_parse@@Base+0x590>
   30d20:	cmp	r3, #127	; 0x7f
   30d24:	cmpne	r3, #31
   30d28:	bls	30d4c <__flatcc_fb_parse@@Base+0x5ac>
   30d2c:	mov	r7, r5
   30d30:	add	r5, r7, #1
   30d34:	cmp	r6, r5
   30d38:	beq	30d4c <__flatcc_fb_parse@@Base+0x5ac>
   30d3c:	ldrb	r3, [r7, #1]
   30d40:	cmp	r3, #34	; 0x22
   30d44:	cmpne	r3, #92	; 0x5c
   30d48:	bne	30d20 <__flatcc_fb_parse@@Base+0x580>
   30d4c:	cmp	r5, r8
   30d50:	beq	30d68 <__flatcc_fb_parse@@Base+0x5c8>
   30d54:	mov	r2, r8
   30d58:	mov	r3, r5
   30d5c:	mov	r1, #20
   30d60:	mov	r0, r4
   30d64:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   30d68:	ldrb	r3, [r5]
   30d6c:	cmp	r3, #34	; 0x22
   30d70:	beq	32908 <__flatcc_fb_parse@@Base+0x2168>
   30d74:	cmp	r3, #0
   30d78:	cmpne	r6, r5
   30d7c:	beq	32140 <__flatcc_fb_parse@@Base+0x19a0>
   30d80:	cmp	r3, #92	; 0x5c
   30d84:	beq	30e2c <__flatcc_fb_parse@@Base+0x68c>
   30d88:	cmp	r3, #13
   30d8c:	cmpne	r3, #10
   30d90:	beq	32140 <__flatcc_fb_parse@@Base+0x19a0>
   30d94:	add	r7, r5, #1
   30d98:	mov	r2, r5
   30d9c:	mov	r3, r7
   30da0:	mov	r1, #6
   30da4:	mov	r0, r4
   30da8:	mov	r8, r7
   30dac:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   30db0:	b	30d18 <__flatcc_fb_parse@@Base+0x578>
   30db4:	cmp	r3, #27
   30db8:	beq	3174c <__flatcc_fb_parse@@Base+0xfac>
   30dbc:	cmp	r3, #123	; 0x7b
   30dc0:	beq	3173c <__flatcc_fb_parse@@Base+0xf9c>
   30dc4:	cmp	r3, #7
   30dc8:	bne	30b6c <__flatcc_fb_parse@@Base+0x3cc>
   30dcc:	mov	r2, #1
   30dd0:	ldr	ip, [pc, #2540]	; 317c4 <__flatcc_fb_parse@@Base+0x1024>
   30dd4:	mov	r3, #0
   30dd8:	mov	r0, r4
   30ddc:	str	r2, [sp, #4]
   30de0:	ldr	r2, [pc, #2528]	; 317c8 <__flatcc_fb_parse@@Base+0x1028>
   30de4:	add	ip, pc, ip
   30de8:	str	ip, [sp]
   30dec:	add	r2, pc, r2
   30df0:	bl	2ebf8 <__flatcc_error_report@@Base>
   30df4:	b	30b8c <__flatcc_fb_parse@@Base+0x3ec>
   30df8:	movw	r2, #64566	; 0xfc36
   30dfc:	movt	r2, #65535	; 0xffff
   30e00:	cmp	r3, r2
   30e04:	beq	313c4 <__flatcc_fb_parse@@Base+0xc24>
   30e08:	bgt	31368 <__flatcc_fb_parse@@Base+0xbc8>
   30e0c:	movw	r2, #64565	; 0xfc35
   30e10:	movt	r2, #65535	; 0xffff
   30e14:	cmp	r3, r2
   30e18:	bne	30b6c <__flatcc_fb_parse@@Base+0x3cc>
   30e1c:	ldr	r2, [pc, #2472]	; 317cc <__flatcc_fb_parse@@Base+0x102c>
   30e20:	mov	ip, #0
   30e24:	add	r2, pc, r2
   30e28:	b	30b78 <__flatcc_fb_parse@@Base+0x3d8>
   30e2c:	add	r8, r7, #2
   30e30:	mov	r2, r5
   30e34:	mov	r3, r8
   30e38:	mov	r1, #21
   30e3c:	mov	r0, r4
   30e40:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   30e44:	cmp	r6, r8
   30e48:	beq	32fac <__flatcc_fb_parse@@Base+0x280c>
   30e4c:	ldrb	r3, [r5, #1]
   30e50:	cmp	r3, #0
   30e54:	beq	32fac <__flatcc_fb_parse@@Base+0x280c>
   30e58:	cmp	r3, #34	; 0x22
   30e5c:	cmpne	r3, #92	; 0x5c
   30e60:	addeq	r7, r5, #2
   30e64:	beq	30d18 <__flatcc_fb_parse@@Base+0x578>
   30e68:	cmp	r3, #10
   30e6c:	beq	3283c <__flatcc_fb_parse@@Base+0x209c>
   30e70:	cmp	r3, #13
   30e74:	movne	r5, r8
   30e78:	bne	30d94 <__flatcc_fb_parse@@Base+0x5f4>
   30e7c:	add	r7, r5, #2
   30e80:	cmp	r6, r7
   30e84:	beq	30e98 <__flatcc_fb_parse@@Base+0x6f8>
   30e88:	ldrb	r3, [r5, #2]
   30e8c:	cmp	r3, #10
   30e90:	bne	30e98 <__flatcc_fb_parse@@Base+0x6f8>
   30e94:	add	r7, r5, #3
   30e98:	ldr	ip, [r4, #64]	; 0x40
   30e9c:	mov	r2, r8
   30ea0:	mov	r3, r7
   30ea4:	mov	r1, #18
   30ea8:	mov	r0, r4
   30eac:	str	r7, [r4, #60]	; 0x3c
   30eb0:	mov	r8, r7
   30eb4:	add	ip, ip, #1
   30eb8:	str	ip, [r4, #64]	; 0x40
   30ebc:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   30ec0:	b	30d18 <__flatcc_fb_parse@@Base+0x578>
   30ec4:	mov	r0, r4
   30ec8:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   30ecc:	ldr	r3, [r4, #140]	; 0x8c
   30ed0:	cmp	r3, #0
   30ed4:	bne	32690 <__flatcc_fb_parse@@Base+0x1ef0>
   30ed8:	ldr	r1, [r4, #40]	; 0x28
   30edc:	ldr	ip, [r4, #108]	; 0x6c
   30ee0:	ldr	r3, [r1, #16]
   30ee4:	cmp	ip, #9
   30ee8:	bgt	3308c <__flatcc_fb_parse@@Base+0x28ec>
   30eec:	cmp	r3, #19
   30ef0:	bne	318bc <__flatcc_fb_parse@@Base+0x111c>
   30ef4:	mov	r0, r4
   30ef8:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   30efc:	ldr	r1, [r4, #44]	; 0x2c
   30f00:	ldr	r3, [r4, #52]	; 0x34
   30f04:	add	r2, r3, #32
   30f08:	cmp	r2, r1
   30f0c:	bhi	326b4 <__flatcc_fb_parse@@Base+0x1f14>
   30f10:	ldr	lr, [r4, #352]	; 0x160
   30f14:	mov	ip, #2
   30f18:	mov	r5, #0
   30f1c:	add	r1, r3, #8
   30f20:	mov	r0, r4
   30f24:	str	r2, [r4, #52]	; 0x34
   30f28:	str	lr, [r3]
   30f2c:	str	r3, [r4, #352]	; 0x160
   30f30:	str	r5, [r3, #8]
   30f34:	str	r5, [r3, #12]
   30f38:	strh	ip, [r3, #16]
   30f3c:	bl	2f3e0 <__flatcc_error_report@@Base+0x7e8>
   30f40:	ldr	r1, [r4, #40]	; 0x28
   30f44:	ldr	r3, [r1, #16]
   30f48:	cmp	r3, #59	; 0x3b
   30f4c:	bne	321b8 <__flatcc_fb_parse@@Base+0x1a18>
   30f50:	mov	r0, r4
   30f54:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   30f58:	ldr	r1, [r4, #40]	; 0x28
   30f5c:	ldr	r3, [r1, #16]
   30f60:	b	30af8 <__flatcc_fb_parse@@Base+0x358>
   30f64:	mov	r0, r4
   30f68:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   30f6c:	ldr	r2, [r4, #44]	; 0x2c
   30f70:	ldr	r1, [r4, #52]	; 0x34
   30f74:	add	r3, r1, #128	; 0x80
   30f78:	cmp	r3, r2
   30f7c:	bhi	31f8c <__flatcc_fb_parse@@Base+0x17ec>
   30f80:	ldr	r0, [r4, #392]	; 0x188
   30f84:	mov	ip, #2
   30f88:	str	r3, [r4, #52]	; 0x34
   30f8c:	ldr	r2, [r4, #544]	; 0x220
   30f90:	str	r0, [r1]
   30f94:	ldr	r3, [r4, #36]	; 0x24
   30f98:	strh	ip, [r1, #8]
   30f9c:	str	r1, [r4, #392]	; 0x188
   30fa0:	str	r2, [r1, #12]
   30fa4:	cmp	r3, #0
   30fa8:	beq	30fcc <__flatcc_fb_parse@@Base+0x82c>
   30fac:	mov	r0, #0
   30fb0:	b	30fb8 <__flatcc_fb_parse@@Base+0x818>
   30fb4:	mov	r3, r2
   30fb8:	ldr	r2, [r3]
   30fbc:	str	r0, [r3]
   30fc0:	mov	r0, r3
   30fc4:	cmp	r2, #0
   30fc8:	bne	30fb4 <__flatcc_fb_parse@@Base+0x814>
   30fcc:	mov	r0, #0
   30fd0:	movw	r2, #64569	; 0xfc39
   30fd4:	movt	r2, #65535	; 0xffff
   30fd8:	str	r3, [r1, #32]
   30fdc:	str	r0, [r4, #36]	; 0x24
   30fe0:	mov	r0, r4
   30fe4:	bl	2fe80 <__flatcc_error_report@@Base+0x1288>
   30fe8:	b	30b8c <__flatcc_fb_parse@@Base+0x3ec>
   30fec:	mov	r0, r4
   30ff0:	add	r6, r4, #376	; 0x178
   30ff4:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   30ff8:	ldrh	r3, [r6, #8]
   30ffc:	cmp	r3, #2
   31000:	beq	3293c <__flatcc_fb_parse@@Base+0x219c>
   31004:	ldr	r1, [r4, #40]	; 0x28
   31008:	ldr	r3, [r1, #16]
   3100c:	cmp	r3, #19
   31010:	bne	31778 <__flatcc_fb_parse@@Base+0xfd8>
   31014:	mov	r0, r4
   31018:	mov	r7, #0
   3101c:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   31020:	mov	r3, #2
   31024:	mov	r1, r6
   31028:	mov	r0, r4
   3102c:	strh	r3, [r6, #8]
   31030:	str	r7, [r4, #376]	; 0x178
   31034:	str	r7, [r4, #380]	; 0x17c
   31038:	bl	2f3e0 <__flatcc_error_report@@Base+0x7e8>
   3103c:	ldr	r1, [r4, #40]	; 0x28
   31040:	ldr	r3, [r1, #16]
   31044:	cmp	r3, #59	; 0x3b
   31048:	beq	30c98 <__flatcc_fb_parse@@Base+0x4f8>
   3104c:	ldr	r2, [pc, #1916]	; 317d0 <__flatcc_fb_parse@@Base+0x1030>
   31050:	mov	r3, r7
   31054:	mov	r0, r4
   31058:	str	r7, [sp]
   3105c:	str	r7, [sp, #4]
   31060:	add	r2, pc, r2
   31064:	bl	2ebf8 <__flatcc_error_report@@Base>
   31068:	b	30b8c <__flatcc_fb_parse@@Base+0x3ec>
   3106c:	mov	r2, #1
   31070:	ldr	ip, [pc, #1884]	; 317d4 <__flatcc_fb_parse@@Base+0x1034>
   31074:	mov	r3, #0
   31078:	mov	r0, r4
   3107c:	str	r2, [sp, #4]
   31080:	ldr	r2, [pc, #1872]	; 317d8 <__flatcc_fb_parse@@Base+0x1038>
   31084:	add	ip, pc, ip
   31088:	str	ip, [sp]
   3108c:	add	r2, pc, r2
   31090:	bl	2ebf8 <__flatcc_error_report@@Base>
   31094:	b	30b8c <__flatcc_fb_parse@@Base+0x3ec>
   31098:	mov	r0, r4
   3109c:	add	r7, r4, #400	; 0x190
   310a0:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   310a4:	ldr	r6, [r4, #40]	; 0x28
   310a8:	ldr	r3, [r4, #400]	; 0x190
   310ac:	cmp	r3, #0
   310b0:	beq	310d4 <__flatcc_fb_parse@@Base+0x934>
   310b4:	mov	ip, #0
   310b8:	mov	r2, r9
   310bc:	mov	r3, ip
   310c0:	mov	r1, r6
   310c4:	mov	r0, r4
   310c8:	str	ip, [sp]
   310cc:	str	ip, [sp, #4]
   310d0:	bl	2ebf8 <__flatcc_error_report@@Base>
   310d4:	mov	r1, r7
   310d8:	mov	r0, r4
   310dc:	bl	2edf8 <__flatcc_error_report@@Base+0x200>
   310e0:	ldr	ip, [r4, #544]	; 0x220
   310e4:	mov	r3, r6
   310e8:	mov	r2, r8
   310ec:	mov	r1, #59	; 0x3b
   310f0:	mov	r0, r4
   310f4:	str	ip, [r4, #408]	; 0x198
   310f8:	bl	2ef54 <__flatcc_error_report@@Base+0x35c>
   310fc:	b	30b8c <__flatcc_fb_parse@@Base+0x3ec>
   31100:	mov	r0, r4
   31104:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   31108:	ldr	r2, [r4, #44]	; 0x2c
   3110c:	ldr	r1, [r4, #52]	; 0x34
   31110:	add	r3, r1, #128	; 0x80
   31114:	cmp	r3, r2
   31118:	bhi	32028 <__flatcc_fb_parse@@Base+0x1888>
   3111c:	ldr	r0, [r4, #392]	; 0x188
   31120:	mov	ip, #1
   31124:	str	r3, [r4, #52]	; 0x34
   31128:	ldr	r2, [r4, #544]	; 0x220
   3112c:	str	r0, [r1]
   31130:	ldr	r3, [r4, #36]	; 0x24
   31134:	strh	ip, [r1, #8]
   31138:	str	r1, [r4, #392]	; 0x188
   3113c:	str	r2, [r1, #12]
   31140:	cmp	r3, #0
   31144:	beq	31168 <__flatcc_fb_parse@@Base+0x9c8>
   31148:	mov	r0, #0
   3114c:	b	31154 <__flatcc_fb_parse@@Base+0x9b4>
   31150:	mov	r3, r2
   31154:	ldr	r2, [r3]
   31158:	str	r0, [r3]
   3115c:	mov	r0, r3
   31160:	cmp	r2, #0
   31164:	bne	31150 <__flatcc_fb_parse@@Base+0x9b0>
   31168:	mov	ip, #0
   3116c:	mvn	r2, #972	; 0x3cc
   31170:	str	r3, [r1, #32]
   31174:	mov	r0, r4
   31178:	str	ip, [r4, #36]	; 0x24
   3117c:	bl	2fe80 <__flatcc_error_report@@Base+0x1288>
   31180:	b	30b8c <__flatcc_fb_parse@@Base+0x3ec>
   31184:	mov	r0, r4
   31188:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   3118c:	ldr	r2, [r4, #44]	; 0x2c
   31190:	ldr	r6, [r4, #52]	; 0x34
   31194:	add	r3, r6, #128	; 0x80
   31198:	cmp	r3, r2
   3119c:	bhi	31fc0 <__flatcc_fb_parse@@Base+0x1820>
   311a0:	ldr	r1, [r4, #392]	; 0x188
   311a4:	mov	r0, #3
   311a8:	str	r3, [r4, #52]	; 0x34
   311ac:	ldr	r2, [r4, #544]	; 0x220
   311b0:	str	r1, [r6]
   311b4:	ldr	r3, [r4, #36]	; 0x24
   311b8:	strh	r0, [r6, #8]
   311bc:	str	r6, [r4, #392]	; 0x188
   311c0:	str	r2, [r6, #12]
   311c4:	cmp	r3, #0
   311c8:	beq	311ec <__flatcc_fb_parse@@Base+0xa4c>
   311cc:	mov	r1, #0
   311d0:	b	311d8 <__flatcc_fb_parse@@Base+0xa38>
   311d4:	mov	r3, r2
   311d8:	ldr	r2, [r3]
   311dc:	str	r1, [r3]
   311e0:	mov	r1, r3
   311e4:	cmp	r2, #0
   311e8:	bne	311d4 <__flatcc_fb_parse@@Base+0xa34>
   311ec:	ldr	sl, [r4, #40]	; 0x28
   311f0:	mov	r7, #0
   311f4:	str	r3, [r6, #32]
   311f8:	str	r7, [r4, #36]	; 0x24
   311fc:	ldr	r3, [sl, #16]
   31200:	cmp	r3, #9
   31204:	bne	318e8 <__flatcc_fb_parse@@Base+0x1148>
   31208:	mov	r0, r4
   3120c:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   31210:	ldr	r3, [r4, #40]	; 0x28
   31214:	ldr	r3, [r3, #16]
   31218:	str	sl, [r6, #4]
   3121c:	cmp	r3, #58	; 0x3a
   31220:	beq	32088 <__flatcc_fb_parse@@Base+0x18e8>
   31224:	mov	r0, r4
   31228:	bl	2fca8 <__flatcc_error_report@@Base+0x10b0>
   3122c:	ldr	sl, [r4, #40]	; 0x28
   31230:	ldr	r3, [sl, #16]
   31234:	str	r0, [r6, #28]
   31238:	cmp	r3, #123	; 0x7b
   3123c:	bne	31eec <__flatcc_fb_parse@@Base+0x174c>
   31240:	mov	r0, r4
   31244:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   31248:	ldr	fp, [r4, #40]	; 0x28
   3124c:	ldr	r2, [fp, #16]
   31250:	cmp	r2, #9
   31254:	bne	32200 <__flatcc_fb_parse@@Base+0x1a60>
   31258:	ldr	r3, [pc, #1404]	; 317dc <__flatcc_fb_parse@@Base+0x103c>
   3125c:	add	r3, pc, r3
   31260:	str	r3, [sp, #20]
   31264:	mov	r0, r4
   31268:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   3126c:	ldr	r3, [r4, #108]	; 0x6c
   31270:	cmp	r3, #9
   31274:	bgt	3190c <__flatcc_fb_parse@@Base+0x116c>
   31278:	ldr	r2, [r4, #44]	; 0x2c
   3127c:	ldr	r7, [r4, #52]	; 0x34
   31280:	add	r3, r7, #128	; 0x80
   31284:	cmp	r3, r2
   31288:	bhi	326e8 <__flatcc_fb_parse@@Base+0x1f48>
   3128c:	ldr	r2, [r6, #20]
   31290:	mov	r0, #5
   31294:	str	r3, [r4, #52]	; 0x34
   31298:	str	r2, [r7]
   3129c:	strh	r0, [r7, #8]
   312a0:	str	r7, [r6, #20]
   312a4:	ldr	r3, [r4, #36]	; 0x24
   312a8:	cmp	r3, #0
   312ac:	beq	312d0 <__flatcc_fb_parse@@Base+0xb30>
   312b0:	mov	r0, #0
   312b4:	b	312bc <__flatcc_fb_parse@@Base+0xb1c>
   312b8:	mov	r3, r2
   312bc:	ldr	r2, [r3]
   312c0:	str	r0, [r3]
   312c4:	mov	r0, r3
   312c8:	cmp	r2, #0
   312cc:	bne	312b8 <__flatcc_fb_parse@@Base+0xb18>
   312d0:	ldr	r0, [r4, #40]	; 0x28
   312d4:	mov	r2, #0
   312d8:	str	r3, [r7, #68]	; 0x44
   312dc:	str	r2, [r4, #36]	; 0x24
   312e0:	str	fp, [r7, #4]
   312e4:	ldr	r3, [r0, #16]
   312e8:	cmp	r3, #61	; 0x3d
   312ec:	bne	31314 <__flatcc_fb_parse@@Base+0xb74>
   312f0:	mov	r0, r4
   312f4:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   312f8:	mov	r2, #0
   312fc:	add	r1, r7, #48	; 0x30
   31300:	ldr	r3, [sp, #20]
   31304:	mov	r0, r4
   31308:	bl	2f5d4 <__flatcc_error_report@@Base+0x9dc>
   3130c:	ldr	r3, [r4, #40]	; 0x28
   31310:	ldr	r3, [r3, #16]
   31314:	cmp	r3, #44	; 0x2c
   31318:	beq	321d8 <__flatcc_fb_parse@@Base+0x1a38>
   3131c:	ldr	r2, [pc, #1212]	; 317e0 <__flatcc_fb_parse@@Base+0x1040>
   31320:	mov	r3, sl
   31324:	mov	r1, #125	; 0x7d
   31328:	mov	r0, r4
   3132c:	add	r2, pc, r2
   31330:	bl	2ef54 <__flatcc_error_report@@Base+0x35c>
   31334:	ldr	r3, [r6, #20]
   31338:	cmp	r3, #0
   3133c:	beq	31360 <__flatcc_fb_parse@@Base+0xbc0>
   31340:	mov	r1, #0
   31344:	b	3134c <__flatcc_fb_parse@@Base+0xbac>
   31348:	mov	r3, r2
   3134c:	ldr	r2, [r3]
   31350:	str	r1, [r3]
   31354:	mov	r1, r3
   31358:	cmp	r2, #0
   3135c:	bne	31348 <__flatcc_fb_parse@@Base+0xba8>
   31360:	str	r3, [r6, #20]
   31364:	b	30b8c <__flatcc_fb_parse@@Base+0x3ec>
   31368:	mov	r0, r4
   3136c:	mov	r7, #0
   31370:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   31374:	ldr	r6, [r4, #40]	; 0x28
   31378:	str	r7, [sp, #24]
   3137c:	ldr	r3, [r6, #16]
   31380:	cmp	r3, #59	; 0x3b
   31384:	beq	31edc <__flatcc_fb_parse@@Base+0x173c>
   31388:	cmp	r3, #9
   3138c:	beq	327d0 <__flatcc_fb_parse@@Base+0x2030>
   31390:	ldr	r2, [pc, #1100]	; 317e4 <__flatcc_fb_parse@@Base+0x1044>
   31394:	mov	ip, #0
   31398:	mov	r1, r6
   3139c:	add	r2, pc, r2
   313a0:	mov	r0, r4
   313a4:	mov	r3, ip
   313a8:	str	ip, [sp]
   313ac:	str	ip, [sp, #4]
   313b0:	bl	2ebf8 <__flatcc_error_report@@Base>
   313b4:	mov	r1, #59	; 0x3b
   313b8:	mov	r0, r4
   313bc:	bl	2ea88 <__flatcc_fb_default_error_out@@Base+0x310>
   313c0:	b	30b8c <__flatcc_fb_parse@@Base+0x3ec>
   313c4:	mov	r0, r4
   313c8:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   313cc:	ldr	r2, [r4, #44]	; 0x2c
   313d0:	ldr	r6, [r4, #52]	; 0x34
   313d4:	add	r3, r6, #32
   313d8:	cmp	r3, r2
   313dc:	bhi	31f58 <__flatcc_fb_parse@@Base+0x17b8>
   313e0:	ldr	r7, [r4, #40]	; 0x28
   313e4:	str	r3, [r4, #52]	; 0x34
   313e8:	ldr	r2, [r4, #356]	; 0x164
   313ec:	ldr	r3, [r7, #16]
   313f0:	str	r2, [r6]
   313f4:	str	r6, [r4, #356]	; 0x164
   313f8:	cmp	r3, #19
   313fc:	beq	31864 <__flatcc_fb_parse@@Base+0x10c4>
   31400:	ldr	r2, [pc, #992]	; 317e8 <__flatcc_fb_parse@@Base+0x1048>
   31404:	mov	ip, #0
   31408:	mov	r1, r7
   3140c:	mov	r3, ip
   31410:	mov	r0, r4
   31414:	str	ip, [sp]
   31418:	str	ip, [sp, #4]
   3141c:	add	r2, pc, r2
   31420:	bl	2ebf8 <__flatcc_error_report@@Base>
   31424:	ldr	r1, [r4, #40]	; 0x28
   31428:	ldr	r3, [r1, #16]
   3142c:	cmp	r3, #59	; 0x3b
   31430:	beq	30c98 <__flatcc_fb_parse@@Base+0x4f8>
   31434:	ldr	r2, [pc, #944]	; 317ec <__flatcc_fb_parse@@Base+0x104c>
   31438:	mov	ip, #0
   3143c:	add	r2, pc, r2
   31440:	b	30b78 <__flatcc_fb_parse@@Base+0x3d8>
   31444:	mov	r0, r4
   31448:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   3144c:	ldr	r2, [r4, #44]	; 0x2c
   31450:	ldr	r6, [r4, #52]	; 0x34
   31454:	add	r3, r6, #128	; 0x80
   31458:	cmp	r3, r2
   3145c:	bhi	31ff4 <__flatcc_fb_parse@@Base+0x1854>
   31460:	ldr	r1, [r4, #392]	; 0x188
   31464:	mov	r0, #4
   31468:	str	r3, [r4, #52]	; 0x34
   3146c:	ldr	r2, [r4, #544]	; 0x220
   31470:	str	r1, [r6]
   31474:	ldr	r3, [r4, #36]	; 0x24
   31478:	strh	r0, [r6, #8]
   3147c:	str	r6, [r4, #392]	; 0x188
   31480:	str	r2, [r6, #12]
   31484:	cmp	r3, #0
   31488:	beq	314ac <__flatcc_fb_parse@@Base+0xd0c>
   3148c:	mov	r1, #0
   31490:	b	31498 <__flatcc_fb_parse@@Base+0xcf8>
   31494:	mov	r3, r2
   31498:	ldr	r2, [r3]
   3149c:	str	r1, [r3]
   314a0:	mov	r1, r3
   314a4:	cmp	r2, #0
   314a8:	bne	31494 <__flatcc_fb_parse@@Base+0xcf4>
   314ac:	ldr	sl, [r4, #40]	; 0x28
   314b0:	mov	r7, #0
   314b4:	str	r3, [r6, #32]
   314b8:	str	r7, [r4, #36]	; 0x24
   314bc:	ldr	r3, [sl, #16]
   314c0:	cmp	r3, #9
   314c4:	bne	3191c <__flatcc_fb_parse@@Base+0x117c>
   314c8:	mov	r0, r4
   314cc:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   314d0:	mov	r0, r4
   314d4:	str	sl, [r6, #4]
   314d8:	bl	2fca8 <__flatcc_error_report@@Base+0x10b0>
   314dc:	ldr	sl, [r4, #40]	; 0x28
   314e0:	ldr	r3, [sl, #16]
   314e4:	str	r0, [r6, #28]
   314e8:	cmp	r3, #123	; 0x7b
   314ec:	bne	32818 <__flatcc_fb_parse@@Base+0x2078>
   314f0:	mov	r0, r4
   314f4:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   314f8:	ldr	fp, [r4, #40]	; 0x28
   314fc:	ldr	r3, [fp, #16]
   31500:	cmp	r3, #9
   31504:	bne	32758 <__flatcc_fb_parse@@Base+0x1fb8>
   31508:	ldr	r3, [r4, #108]	; 0x6c
   3150c:	cmp	r3, #9
   31510:	bgt	31940 <__flatcc_fb_parse@@Base+0x11a0>
   31514:	ldr	r2, [r4, #44]	; 0x2c
   31518:	ldr	r7, [r4, #52]	; 0x34
   3151c:	add	r3, r7, #128	; 0x80
   31520:	cmp	r3, r2
   31524:	bhi	3288c <__flatcc_fb_parse@@Base+0x20ec>
   31528:	ldr	r2, [r6, #20]
   3152c:	mov	r1, #5
   31530:	str	r3, [r4, #52]	; 0x34
   31534:	str	r2, [r7]
   31538:	strh	r1, [r7, #8]
   3153c:	str	r7, [r6, #20]
   31540:	ldr	r3, [r4, #36]	; 0x24
   31544:	cmp	r3, #0
   31548:	beq	3156c <__flatcc_fb_parse@@Base+0xdcc>
   3154c:	mov	r1, #0
   31550:	b	31558 <__flatcc_fb_parse@@Base+0xdb8>
   31554:	mov	r3, r2
   31558:	ldr	r2, [r3]
   3155c:	str	r1, [r3]
   31560:	mov	r1, r3
   31564:	cmp	r2, #0
   31568:	bne	31554 <__flatcc_fb_parse@@Base+0xdb4>
   3156c:	mov	r2, #0
   31570:	add	r1, sp, #28
   31574:	str	r3, [r7, #68]	; 0x44
   31578:	mov	r0, r4
   3157c:	str	r2, [r4, #36]	; 0x24
   31580:	bl	2edf8 <__flatcc_error_report@@Base+0x200>
   31584:	ldr	r3, [sp, #28]
   31588:	mov	r2, #12
   3158c:	str	r3, [r7, #16]
   31590:	strh	r2, [r7, #24]
   31594:	ldr	r2, [r3]
   31598:	cmp	r2, #0
   3159c:	bne	315a8 <__flatcc_fb_parse@@Base+0xe08>
   315a0:	b	32fc8 <__flatcc_fb_parse@@Base+0x2828>
   315a4:	mov	r2, r3
   315a8:	ldr	r3, [r2]
   315ac:	cmp	r3, #0
   315b0:	bne	315a4 <__flatcc_fb_parse@@Base+0xe04>
   315b4:	str	r2, [sp, #28]
   315b8:	ldr	r3, [r4, #40]	; 0x28
   315bc:	ldr	r2, [r2, #4]
   315c0:	ldr	r3, [r3, #16]
   315c4:	str	r2, [r7, #4]
   315c8:	cmp	r3, #58	; 0x3a
   315cc:	beq	32780 <__flatcc_fb_parse@@Base+0x1fe0>
   315d0:	cmp	r3, #61	; 0x3d
   315d4:	bne	315fc <__flatcc_fb_parse@@Base+0xe5c>
   315d8:	mov	r0, r4
   315dc:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   315e0:	add	r1, r7, #48	; 0x30
   315e4:	mov	r2, #0
   315e8:	ldr	r3, [sp, #12]
   315ec:	mov	r0, r4
   315f0:	bl	2f5d4 <__flatcc_error_report@@Base+0x9dc>
   315f4:	ldr	r3, [r4, #40]	; 0x28
   315f8:	ldr	r3, [r3, #16]
   315fc:	cmp	r3, #44	; 0x2c
   31600:	beq	32730 <__flatcc_fb_parse@@Base+0x1f90>
   31604:	ldr	r2, [pc, #484]	; 317f0 <__flatcc_fb_parse@@Base+0x1050>
   31608:	mov	r3, sl
   3160c:	mov	r1, #125	; 0x7d
   31610:	mov	r0, r4
   31614:	add	r2, pc, r2
   31618:	bl	2ef54 <__flatcc_error_report@@Base+0x35c>
   3161c:	ldr	r3, [r6, #20]
   31620:	cmp	r3, #0
   31624:	beq	31648 <__flatcc_fb_parse@@Base+0xea8>
   31628:	mov	r1, #0
   3162c:	b	31634 <__flatcc_fb_parse@@Base+0xe94>
   31630:	mov	r3, r2
   31634:	ldr	r2, [r3]
   31638:	str	r1, [r3]
   3163c:	mov	r1, r3
   31640:	cmp	r2, #0
   31644:	bne	31630 <__flatcc_fb_parse@@Base+0xe90>
   31648:	ldr	r1, [r4, #44]	; 0x2c
   3164c:	ldr	ip, [r4, #52]	; 0x34
   31650:	str	r3, [r6, #20]
   31654:	add	r2, ip, #128	; 0x80
   31658:	cmp	r2, r1
   3165c:	bhi	329f8 <__flatcc_fb_parse@@Base+0x2258>
   31660:	mov	r1, #5
   31664:	str	r2, [r4, #52]	; 0x34
   31668:	str	r3, [ip]
   3166c:	strh	r1, [ip, #8]
   31670:	str	ip, [r6, #20]
   31674:	ldr	r3, [r4, #36]	; 0x24
   31678:	cmp	r3, #0
   3167c:	beq	316a0 <__flatcc_fb_parse@@Base+0xf00>
   31680:	mov	r1, #0
   31684:	b	3168c <__flatcc_fb_parse@@Base+0xeec>
   31688:	mov	r3, r2
   3168c:	ldr	r2, [r3]
   31690:	str	r1, [r3]
   31694:	mov	r1, r3
   31698:	cmp	r2, #0
   3169c:	bne	31688 <__flatcc_fb_parse@@Base+0xee8>
   316a0:	mov	r2, #0
   316a4:	str	r3, [ip, #68]	; 0x44
   316a8:	add	r3, r4, #68	; 0x44
   316ac:	str	r2, [r4, #36]	; 0x24
   316b0:	str	r3, [ip, #4]
   316b4:	b	30b8c <__flatcc_fb_parse@@Base+0x3ec>
   316b8:	mov	r0, r4
   316bc:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   316c0:	ldr	r2, [r4, #44]	; 0x2c
   316c4:	ldr	r1, [r4, #52]	; 0x34
   316c8:	add	r3, r1, #128	; 0x80
   316cc:	cmp	r3, r2
   316d0:	bhi	31f24 <__flatcc_fb_parse@@Base+0x1784>
   316d4:	ldr	ip, [r4, #392]	; 0x188
   316d8:	mov	r2, #0
   316dc:	str	r3, [r4, #52]	; 0x34
   316e0:	ldr	r0, [r4, #544]	; 0x220
   316e4:	str	ip, [r1]
   316e8:	ldr	r3, [r4, #36]	; 0x24
   316ec:	strh	r2, [r1, #8]
   316f0:	str	r1, [r4, #392]	; 0x188
   316f4:	str	r0, [r1, #12]
   316f8:	cmp	r3, r2
   316fc:	bne	31708 <__flatcc_fb_parse@@Base+0xf68>
   31700:	b	3171c <__flatcc_fb_parse@@Base+0xf7c>
   31704:	mov	r3, r0
   31708:	ldr	r0, [r3]
   3170c:	str	r2, [r3]
   31710:	mov	r2, r3
   31714:	cmp	r0, #0
   31718:	bne	31704 <__flatcc_fb_parse@@Base+0xf64>
   3171c:	mov	r0, #0
   31720:	movw	r2, #64553	; 0xfc29
   31724:	movt	r2, #65535	; 0xffff
   31728:	str	r3, [r1, #32]
   3172c:	str	r0, [r4, #36]	; 0x24
   31730:	mov	r0, r4
   31734:	bl	2fe80 <__flatcc_error_report@@Base+0x1288>
   31738:	b	30b8c <__flatcc_fb_parse@@Base+0x3ec>
   3173c:	ldr	r2, [pc, #176]	; 317f4 <__flatcc_fb_parse@@Base+0x1054>
   31740:	mov	ip, #0
   31744:	add	r2, pc, r2
   31748:	b	30b78 <__flatcc_fb_parse@@Base+0x3d8>
   3174c:	mov	r2, #5
   31750:	ldr	ip, [pc, #160]	; 317f8 <__flatcc_fb_parse@@Base+0x1058>
   31754:	mov	r3, #0
   31758:	mov	r0, r4
   3175c:	str	r2, [sp, #4]
   31760:	ldr	r2, [pc, #148]	; 317fc <__flatcc_fb_parse@@Base+0x105c>
   31764:	add	ip, pc, ip
   31768:	str	ip, [sp]
   3176c:	add	r2, pc, r2
   31770:	bl	2ebf8 <__flatcc_error_report@@Base>
   31774:	b	30b8c <__flatcc_fb_parse@@Base+0x3ec>
   31778:	ldr	r2, [pc, #128]	; 31800 <__flatcc_fb_parse@@Base+0x1060>
   3177c:	mov	ip, #0
   31780:	add	r2, pc, r2
   31784:	b	313a0 <__flatcc_fb_parse@@Base+0xc00>
   31788:	ldr	r2, [pc, #116]	; 31804 <__flatcc_fb_parse@@Base+0x1064>
   3178c:	mov	ip, #0
   31790:	add	r2, pc, r2
   31794:	b	313a0 <__flatcc_fb_parse@@Base+0xc00>
   31798:	andeq	r8, r2, r0, lsl #19
   3179c:	andeq	r8, r2, ip, asr r9
   317a0:	andeq	r8, r2, r4, lsl r7
   317a4:	andeq	r8, r2, r8, asr #14
   317a8:	andeq	r8, r2, r8, ror #20
   317ac:			; <UNDEFINED> instruction: 0x000288bc
   317b0:	muleq	r2, ip, r8
   317b4:			; <UNDEFINED> instruction: 0x000289b0
   317b8:	andeq	r8, r2, r0, lsl #23
   317bc:	strdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   317c0:	andeq	r8, r2, ip, asr #20
   317c4:	andeq	r7, r2, r4, lsr pc
   317c8:	andeq	r8, r2, r0, asr #17
   317cc:			; <UNDEFINED> instruction: 0x000287b8
   317d0:			; <UNDEFINED> instruction: 0x000282b8
   317d4:	muleq	r2, r4, ip
   317d8:	andeq	r8, r2, ip, ror #11
   317dc:	andeq	r8, r2, ip, ror r2
   317e0:	andeq	r8, r2, r8, asr #3
   317e4:	strdeq	r7, [r2], -r0
   317e8:	andeq	r7, r2, r4, ror #31
   317ec:	andeq	r8, r2, r8
   317f0:	andeq	r7, r2, r4, lsr #31
   317f4:	ldrdeq	r7, [r2], -r0
   317f8:	andeq	r7, r2, r8, lsl #31
   317fc:	andeq	r7, r2, r8, ror #30
   31800:	andeq	r7, r2, r0, ror fp
   31804:	andeq	r7, r2, r0, asr #23
   31808:	andeq	r7, r2, r4, ror fp
   3180c:	andeq	r7, r2, ip, asr fp
   31810:	andeq	r7, r2, r4, ror #23
   31814:	andeq	r6, r2, r4, lsr lr
   31818:	andeq	r0, r1, r0, ror #4
   3181c:	andeq	r7, r2, r4, lsr #11
   31820:	andeq	r7, r2, r4, lsl #9
   31824:	andeq	r7, r2, r4, asr #5
   31828:	andeq	r7, r2, r0, lsr #1
   3182c:			; <UNDEFINED> instruction: 0x000272b0
   31830:	andeq	pc, r0, ip, lsr #24
   31834:	strdeq	r6, [r2], -r0
   31838:	andeq	pc, r0, r8, lsl #23
   3183c:	andeq	pc, r0, r8, ror #22
   31840:	andeq	r6, r2, ip, lsl lr
   31844:	andeq	r6, r2, r4, ror sp
   31848:	andeq	r6, r2, r4, asr #24
   3184c:	ldrdeq	r7, [r2], -ip
   31850:	andeq	pc, r0, ip, ror #16
   31854:	andeq	r6, r2, r0, lsr fp
   31858:	andeq	r6, r2, ip, ror #27
   3185c:	andeq	r6, r2, r0, asr #21
   31860:	andeq	r6, r2, r0, lsl sp
   31864:	mov	r0, r4
   31868:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   3186c:	mov	r3, #0
   31870:	mov	r2, #2
   31874:	add	r1, r6, #8
   31878:	mov	r0, r4
   3187c:	str	r3, [r6, #8]
   31880:	str	r3, [r6, #12]
   31884:	strh	r2, [r6, #16]
   31888:	bl	2f3e0 <__flatcc_error_report@@Base+0x7e8>
   3188c:	ldr	ip, [r6, #12]
   31890:	cmp	ip, #0
   31894:	bne	31424 <__flatcc_fb_parse@@Base+0xc84>
   31898:	ldr	r2, [pc, #-152]	; 31808 <__flatcc_fb_parse@@Base+0x1068>
   3189c:	mov	r3, ip
   318a0:	mov	r1, r7
   318a4:	mov	r0, r4
   318a8:	str	ip, [sp]
   318ac:	str	ip, [sp, #4]
   318b0:	add	r2, pc, r2
   318b4:	bl	2ebf8 <__flatcc_error_report@@Base>
   318b8:	b	31424 <__flatcc_fb_parse@@Base+0xc84>
   318bc:	mov	ip, #0
   318c0:	mov	r0, r4
   318c4:	mov	r3, ip
   318c8:	mov	r2, r8
   318cc:	str	ip, [sp]
   318d0:	str	ip, [sp, #4]
   318d4:	bl	2ebf8 <__flatcc_error_report@@Base>
   318d8:	mov	r1, #59	; 0x3b
   318dc:	mov	r0, r4
   318e0:	bl	2ea88 <__flatcc_fb_default_error_out@@Base+0x310>
   318e4:	b	30efc <__flatcc_fb_parse@@Base+0x75c>
   318e8:	ldr	r2, [pc, #-228]	; 3180c <__flatcc_fb_parse@@Base+0x106c>
   318ec:	mov	r1, sl
   318f0:	mov	r3, r7
   318f4:	mov	r0, r4
   318f8:	str	r7, [sp]
   318fc:	str	r7, [sp, #4]
   31900:	add	r2, pc, r2
   31904:	bl	2ebf8 <__flatcc_error_report@@Base>
   31908:	str	r7, [r6, #4]
   3190c:	mov	r1, #125	; 0x7d
   31910:	mov	r0, r4
   31914:	bl	2ea88 <__flatcc_fb_default_error_out@@Base+0x310>
   31918:	b	30b8c <__flatcc_fb_parse@@Base+0x3ec>
   3191c:	ldr	r2, [pc, #-276]	; 31810 <__flatcc_fb_parse@@Base+0x1070>
   31920:	mov	r1, sl
   31924:	mov	r3, r7
   31928:	mov	r0, r4
   3192c:	str	r7, [sp]
   31930:	str	r7, [sp, #4]
   31934:	add	r2, pc, r2
   31938:	bl	2ebf8 <__flatcc_error_report@@Base>
   3193c:	str	r7, [r6, #4]
   31940:	mov	r0, r4
   31944:	bl	2ea10 <__flatcc_fb_default_error_out@@Base+0x298>
   31948:	b	30b8c <__flatcc_fb_parse@@Base+0x3ec>
   3194c:	add	r2, r5, #1
   31950:	subs	r3, r2, #0
   31954:	beq	33514 <__flatcc_fb_parse@@Base+0x2d74>
   31958:	ldrb	r1, [r2]
   3195c:	add	r2, r3, #1
   31960:	sub	r0, r1, #48	; 0x30
   31964:	cmp	r0, #9
   31968:	bls	31950 <__flatcc_fb_parse@@Base+0x11b0>
   3196c:	cmp	r1, #46	; 0x2e
   31970:	beq	33094 <__flatcc_fb_parse@@Base+0x28f4>
   31974:	cmp	r6, r3
   31978:	beq	32924 <__flatcc_fb_parse@@Base+0x2184>
   3197c:	and	r1, r1, #223	; 0xdf
   31980:	cmp	r1, #69	; 0x45
   31984:	moveq	r0, r3
   31988:	bne	32924 <__flatcc_fb_parse@@Base+0x2184>
   3198c:	add	r2, r3, #1
   31990:	cmp	r6, r2
   31994:	beq	319a8 <__flatcc_fb_parse@@Base+0x1208>
   31998:	ldrb	r1, [r3, #1]
   3199c:	sub	r1, r1, #43	; 0x2b
   319a0:	tst	r1, #253	; 0xfd
   319a4:	movne	r2, r3
   319a8:	add	r2, r2, #1
   319ac:	b	319c4 <__flatcc_fb_parse@@Base+0x1224>
   319b0:	ldrb	r1, [r2]
   319b4:	add	r2, r2, #1
   319b8:	sub	r1, r1, #48	; 0x30
   319bc:	cmp	r1, #9
   319c0:	bhi	319d0 <__flatcc_fb_parse@@Base+0x1230>
   319c4:	cmp	r6, r2
   319c8:	mov	r3, r2
   319cc:	bne	319b0 <__flatcc_fb_parse@@Base+0x1210>
   319d0:	cmp	r3, r0
   319d4:	beq	32924 <__flatcc_fb_parse@@Base+0x2184>
   319d8:	mov	r2, r5
   319dc:	mov	r1, #11
   319e0:	mov	r0, r4
   319e4:	mov	r5, r3
   319e8:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   319ec:	b	31a28 <__flatcc_fb_parse@@Base+0x1288>
   319f0:	add	r3, r5, #1
   319f4:	cmp	r6, r3
   319f8:	beq	32a7c <__flatcc_fb_parse@@Base+0x22dc>
   319fc:	ldrb	r2, [r5, #1]
   31a00:	cmp	r2, #58	; 0x3a
   31a04:	beq	32b00 <__flatcc_fb_parse@@Base+0x2360>
   31a08:	cmp	r2, #61	; 0x3d
   31a0c:	bne	32a7c <__flatcc_fb_parse@@Base+0x22dc>
   31a10:	add	r3, r5, #2
   31a14:	mov	r2, r5
   31a18:	movw	r1, #15674	; 0x3d3a
   31a1c:	mov	r0, r4
   31a20:	mov	r5, r3
   31a24:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   31a28:	cmp	r6, r5
   31a2c:	beq	30a98 <__flatcc_fb_parse@@Base+0x2f8>
   31a30:	ldrb	r1, [r5]
   31a34:	b	3086c <__flatcc_fb_parse@@Base+0xcc>
   31a38:	add	r3, r5, #1
   31a3c:	cmp	r6, r3
   31a40:	beq	32a64 <__flatcc_fb_parse@@Base+0x22c4>
   31a44:	ldrb	r2, [r5, #1]
   31a48:	cmp	r2, #43	; 0x2b
   31a4c:	beq	32ae4 <__flatcc_fb_parse@@Base+0x2344>
   31a50:	cmp	r2, #61	; 0x3d
   31a54:	bne	32a64 <__flatcc_fb_parse@@Base+0x22c4>
   31a58:	add	r3, r5, #2
   31a5c:	mov	r2, r5
   31a60:	movw	r1, #15659	; 0x3d2b
   31a64:	mov	r0, r4
   31a68:	mov	r5, r3
   31a6c:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   31a70:	b	31a28 <__flatcc_fb_parse@@Base+0x1288>
   31a74:	add	r8, r5, #1
   31a78:	cmp	r6, r8
   31a7c:	beq	32a48 <__flatcc_fb_parse@@Base+0x22a8>
   31a80:	ldrb	r3, [r5, #1]
   31a84:	cmp	r3, #42	; 0x2a
   31a88:	beq	32b60 <__flatcc_fb_parse@@Base+0x23c0>
   31a8c:	cmp	r3, #61	; 0x3d
   31a90:	bne	32a48 <__flatcc_fb_parse@@Base+0x22a8>
   31a94:	mov	r2, r5
   31a98:	movw	r1, #15658	; 0x3d2a
   31a9c:	mov	r3, r8
   31aa0:	mov	r0, r4
   31aa4:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   31aa8:	ldrb	r1, [r5, #1]
   31aac:	mov	r5, r8
   31ab0:	b	3086c <__flatcc_fb_parse@@Base+0xcc>
   31ab4:	add	r3, r5, #1
   31ab8:	mov	r2, r5
   31abc:	mov	r0, r4
   31ac0:	mov	r5, r3
   31ac4:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   31ac8:	b	31a28 <__flatcc_fb_parse@@Base+0x1288>
   31acc:	add	r8, r5, #1
   31ad0:	cmp	r6, r8
   31ad4:	beq	32870 <__flatcc_fb_parse@@Base+0x20d0>
   31ad8:	ldrb	r3, [r5, #1]
   31adc:	cmp	r3, #38	; 0x26
   31ae0:	beq	32858 <__flatcc_fb_parse@@Base+0x20b8>
   31ae4:	cmp	r3, #61	; 0x3d
   31ae8:	bne	32870 <__flatcc_fb_parse@@Base+0x20d0>
   31aec:	add	r3, r5, #2
   31af0:	mov	r2, r5
   31af4:	movw	r1, #15654	; 0x3d26
   31af8:	mov	r0, r4
   31afc:	mov	r5, r3
   31b00:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   31b04:	b	31a28 <__flatcc_fb_parse@@Base+0x1288>
   31b08:	add	r3, r5, #1
   31b0c:	cmp	r6, r3
   31b10:	beq	31b20 <__flatcc_fb_parse@@Base+0x1380>
   31b14:	ldrb	r2, [r5, #1]
   31b18:	cmp	r2, #61	; 0x3d
   31b1c:	beq	33058 <__flatcc_fb_parse@@Base+0x28b8>
   31b20:	mov	r2, r5
   31b24:	mov	r0, r4
   31b28:	mov	r5, r3
   31b2c:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   31b30:	b	31a28 <__flatcc_fb_parse@@Base+0x1288>
   31b34:	add	r8, r5, #1
   31b38:	cmp	r6, r8
   31b3c:	beq	31b6c <__flatcc_fb_parse@@Base+0x13cc>
   31b40:	ldrb	r3, [r5, #1]
   31b44:	cmp	r3, #61	; 0x3d
   31b48:	beq	32ac8 <__flatcc_fb_parse@@Base+0x2328>
   31b4c:	cmp	r3, #124	; 0x7c
   31b50:	bne	31b6c <__flatcc_fb_parse@@Base+0x13cc>
   31b54:	add	r8, r5, #2
   31b58:	mov	r2, r5
   31b5c:	mov	r3, r8
   31b60:	movw	r1, #31868	; 0x7c7c
   31b64:	mov	r0, r4
   31b68:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   31b6c:	mov	r2, r5
   31b70:	mov	r3, r8
   31b74:	mov	r1, #124	; 0x7c
   31b78:	mov	r0, r4
   31b7c:	mov	r5, r8
   31b80:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   31b84:	b	31a28 <__flatcc_fb_parse@@Base+0x1288>
   31b88:	add	r2, r5, #1
   31b8c:	lsl	r3, r1, #8
   31b90:	cmp	r6, r2
   31b94:	mov	r8, r2
   31b98:	beq	31bb8 <__flatcc_fb_parse@@Base+0x1418>
   31b9c:	ldr	r0, [pc, #-912]	; 31814 <__flatcc_fb_parse@@Base+0x1074>
   31ba0:	ldrb	ip, [r5, #1]
   31ba4:	add	r0, pc, r0
   31ba8:	add	r0, r0, ip
   31bac:	ldrb	r0, [r0, #40]	; 0x28
   31bb0:	cmp	r0, #0
   31bb4:	bne	3300c <__flatcc_fb_parse@@Base+0x286c>
   31bb8:	mov	r0, #49	; 0x31
   31bbc:	orr	r3, r3, r0
   31bc0:	orr	r1, r3, r1, lsl #24
   31bc4:	ldr	r3, [sp, #16]
   31bc8:	cmp	r1, r3
   31bcc:	beq	334a8 <__flatcc_fb_parse@@Base+0x2d08>
   31bd0:	bhi	3224c <__flatcc_fb_parse@@Base+0x1aac>
   31bd4:	movw	r3, #30005	; 0x7535
   31bd8:	movt	r3, #14441	; 0x3869
   31bdc:	cmp	r1, r3
   31be0:	beq	33484 <__flatcc_fb_parse@@Base+0x2ce4>
   31be4:	bhi	32334 <__flatcc_fb_parse@@Base+0x1b94>
   31be8:	movw	r3, #30006	; 0x7536
   31bec:	movt	r3, #13417	; 0x3469
   31bf0:	cmp	r1, r3
   31bf4:	beq	3345c <__flatcc_fb_parse@@Base+0x2cbc>
   31bf8:	bls	322dc <__flatcc_fb_parse@@Base+0x1b3c>
   31bfc:	movw	r3, #26933	; 0x6935
   31c00:	movt	r3, #13422	; 0x346e
   31c04:	cmp	r1, r3
   31c08:	beq	33434 <__flatcc_fb_parse@@Base+0x2c94>
   31c0c:	bls	322a4 <__flatcc_fb_parse@@Base+0x1b04>
   31c10:	movw	r3, #30006	; 0x7536
   31c14:	movt	r3, #13929	; 0x3669
   31c18:	cmp	r1, r3
   31c1c:	bne	32214 <__flatcc_fb_parse@@Base+0x1a74>
   31c20:	ldr	r0, [pc, #-1040]	; 31818 <__flatcc_fb_parse@@Base+0x1078>
   31c24:	mov	r1, r5
   31c28:	mov	r2, #6
   31c2c:	add	r0, pc, r0
   31c30:	bl	13fc8 <memcmp@plt>
   31c34:	cmp	r0, #0
   31c38:	movw	r1, #64556	; 0xfc2c
   31c3c:	movt	r1, #65535	; 0xffff
   31c40:	movne	r1, #9
   31c44:	mov	r2, r5
   31c48:	mov	r3, r8
   31c4c:	mov	r0, r4
   31c50:	mov	r5, r8
   31c54:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   31c58:	b	31a28 <__flatcc_fb_parse@@Base+0x1288>
   31c5c:	add	r3, r5, #1
   31c60:	cmp	r6, r3
   31c64:	beq	32a94 <__flatcc_fb_parse@@Base+0x22f4>
   31c68:	ldrb	r2, [r5, #1]
   31c6c:	cmp	r2, #61	; 0x3d
   31c70:	beq	32aac <__flatcc_fb_parse@@Base+0x230c>
   31c74:	cmp	r2, #62	; 0x3e
   31c78:	bne	32a94 <__flatcc_fb_parse@@Base+0x22f4>
   31c7c:	add	r3, r5, #2
   31c80:	cmp	r6, r3
   31c84:	beq	329ac <__flatcc_fb_parse@@Base+0x220c>
   31c88:	ldrb	r2, [r5, #2]
   31c8c:	cmp	r2, #61	; 0x3d
   31c90:	beq	330b0 <__flatcc_fb_parse@@Base+0x2910>
   31c94:	cmp	r2, #62	; 0x3e
   31c98:	bne	329ac <__flatcc_fb_parse@@Base+0x220c>
   31c9c:	add	r3, r5, #3
   31ca0:	cmp	r6, r3
   31ca4:	beq	31cb4 <__flatcc_fb_parse@@Base+0x1514>
   31ca8:	ldrb	r2, [r5, #3]
   31cac:	cmp	r2, #61	; 0x3d
   31cb0:	beq	334d0 <__flatcc_fb_parse@@Base+0x2d30>
   31cb4:	mov	r2, r5
   31cb8:	movw	r1, #15934	; 0x3e3e
   31cbc:	movt	r1, #62	; 0x3e
   31cc0:	mov	r0, r4
   31cc4:	mov	r5, r3
   31cc8:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   31ccc:	b	31a28 <__flatcc_fb_parse@@Base+0x1288>
   31cd0:	add	r2, r5, #1
   31cd4:	cmp	r6, r2
   31cd8:	beq	31950 <__flatcc_fb_parse@@Base+0x11b0>
   31cdc:	ldrb	r3, [r5, #1]
   31ce0:	cmp	r3, #88	; 0x58
   31ce4:	beq	31cf0 <__flatcc_fb_parse@@Base+0x1550>
   31ce8:	cmp	r3, #120	; 0x78
   31cec:	bne	31950 <__flatcc_fb_parse@@Base+0x11b0>
   31cf0:	add	r1, r5, #2
   31cf4:	cmp	r6, r1
   31cf8:	mov	r3, r1
   31cfc:	beq	31d20 <__flatcc_fb_parse@@Base+0x1580>
   31d00:	ldrb	r2, [r1], #1
   31d04:	sub	r0, r2, #48	; 0x30
   31d08:	cmp	r0, #9
   31d0c:	bls	31cf4 <__flatcc_fb_parse@@Base+0x1554>
   31d10:	orr	r2, r2, #32
   31d14:	sub	r2, r2, #97	; 0x61
   31d18:	cmp	r2, #5
   31d1c:	bls	31cf4 <__flatcc_fb_parse@@Base+0x1554>
   31d20:	mov	r2, r5
   31d24:	mov	r1, #14
   31d28:	mov	r0, r4
   31d2c:	mov	r5, r3
   31d30:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   31d34:	b	31a28 <__flatcc_fb_parse@@Base+0x1288>
   31d38:	add	r3, r5, #1
   31d3c:	cmp	r6, r3
   31d40:	beq	31d60 <__flatcc_fb_parse@@Base+0x15c0>
   31d44:	ldrb	r2, [r5, #1]
   31d48:	cmp	r2, #47	; 0x2f
   31d4c:	beq	32dac <__flatcc_fb_parse@@Base+0x260c>
   31d50:	cmp	r2, #61	; 0x3d
   31d54:	beq	32ef4 <__flatcc_fb_parse@@Base+0x2754>
   31d58:	cmp	r2, #42	; 0x2a
   31d5c:	beq	32c5c <__flatcc_fb_parse@@Base+0x24bc>
   31d60:	mov	r2, r5
   31d64:	mov	r1, #47	; 0x2f
   31d68:	mov	r0, r4
   31d6c:	mov	r5, r3
   31d70:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   31d74:	b	31a28 <__flatcc_fb_parse@@Base+0x1288>
   31d78:	add	r8, r5, #1
   31d7c:	cmp	r6, r8
   31d80:	beq	328ec <__flatcc_fb_parse@@Base+0x214c>
   31d84:	ldrb	r3, [r5, #1]
   31d88:	cmp	r3, #61	; 0x3d
   31d8c:	beq	328c0 <__flatcc_fb_parse@@Base+0x2120>
   31d90:	cmp	r3, #62	; 0x3e
   31d94:	bne	328ec <__flatcc_fb_parse@@Base+0x214c>
   31d98:	add	r3, r5, #2
   31d9c:	mov	r2, r5
   31da0:	movw	r1, #15933	; 0x3e3d
   31da4:	mov	r0, r4
   31da8:	mov	r5, r3
   31dac:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   31db0:	b	31a28 <__flatcc_fb_parse@@Base+0x1288>
   31db4:	add	r3, r5, #1
   31db8:	cmp	r6, r3
   31dbc:	beq	31ddc <__flatcc_fb_parse@@Base+0x163c>
   31dc0:	ldrb	r2, [r5, #1]
   31dc4:	cmp	r2, #60	; 0x3c
   31dc8:	beq	32c00 <__flatcc_fb_parse@@Base+0x2460>
   31dcc:	cmp	r2, #61	; 0x3d
   31dd0:	beq	32be4 <__flatcc_fb_parse@@Base+0x2444>
   31dd4:	cmp	r2, #45	; 0x2d
   31dd8:	beq	32b90 <__flatcc_fb_parse@@Base+0x23f0>
   31ddc:	mov	r2, r5
   31de0:	mov	r1, #60	; 0x3c
   31de4:	mov	r0, r4
   31de8:	mov	r5, r3
   31dec:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   31df0:	b	31a28 <__flatcc_fb_parse@@Base+0x1288>
   31df4:	add	r3, r5, #1
   31df8:	cmp	r6, r3
   31dfc:	beq	32a30 <__flatcc_fb_parse@@Base+0x2290>
   31e00:	ldrb	r2, [r5, #1]
   31e04:	cmp	r2, #46	; 0x2e
   31e08:	beq	32b30 <__flatcc_fb_parse@@Base+0x2390>
   31e0c:	bcc	32a30 <__flatcc_fb_parse@@Base+0x2290>
   31e10:	sub	r2, r2, #48	; 0x30
   31e14:	cmp	r2, #9
   31e18:	movls	r0, r5
   31e1c:	bhi	32a30 <__flatcc_fb_parse@@Base+0x2290>
   31e20:	add	r2, r3, #1
   31e24:	b	31e3c <__flatcc_fb_parse@@Base+0x169c>
   31e28:	ldrb	r1, [r2]
   31e2c:	add	r2, r2, #1
   31e30:	sub	ip, r1, #48	; 0x30
   31e34:	cmp	ip, #9
   31e38:	bhi	32b80 <__flatcc_fb_parse@@Base+0x23e0>
   31e3c:	cmp	r6, r2
   31e40:	mov	r3, r2
   31e44:	bne	31e28 <__flatcc_fb_parse@@Base+0x1688>
   31e48:	b	319d0 <__flatcc_fb_parse@@Base+0x1230>
   31e4c:	add	r3, r5, #1
   31e50:	cmp	r6, r3
   31e54:	beq	31e74 <__flatcc_fb_parse@@Base+0x16d4>
   31e58:	ldrb	r2, [r5, #1]
   31e5c:	cmp	r2, #61	; 0x3d
   31e60:	beq	32bc8 <__flatcc_fb_parse@@Base+0x2428>
   31e64:	cmp	r2, #62	; 0x3e
   31e68:	beq	32bac <__flatcc_fb_parse@@Base+0x240c>
   31e6c:	cmp	r2, #45	; 0x2d
   31e70:	beq	32c40 <__flatcc_fb_parse@@Base+0x24a0>
   31e74:	mov	r2, r5
   31e78:	mov	r1, #45	; 0x2d
   31e7c:	mov	r0, r4
   31e80:	mov	r5, r3
   31e84:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   31e88:	b	31a28 <__flatcc_fb_parse@@Base+0x1288>
   31e8c:	add	r3, r5, #1
   31e90:	cmp	r6, r3
   31e94:	beq	31ea4 <__flatcc_fb_parse@@Base+0x1704>
   31e98:	ldrb	r2, [r5, #1]
   31e9c:	cmp	r2, #13
   31ea0:	beq	31ed4 <__flatcc_fb_parse@@Base+0x1734>
   31ea4:	ldr	r2, [r4, #64]	; 0x40
   31ea8:	mov	r5, r3
   31eac:	str	r3, [r4, #60]	; 0x3c
   31eb0:	add	r3, r2, #1
   31eb4:	str	r3, [r4, #64]	; 0x40
   31eb8:	b	31a28 <__flatcc_fb_parse@@Base+0x1288>
   31ebc:	add	r3, r5, #1
   31ec0:	cmp	r6, r3
   31ec4:	beq	31ea4 <__flatcc_fb_parse@@Base+0x1704>
   31ec8:	ldrb	r2, [r5, #1]
   31ecc:	cmp	r2, #10
   31ed0:	bne	31ea4 <__flatcc_fb_parse@@Base+0x1704>
   31ed4:	add	r3, r5, #2
   31ed8:	b	31ea4 <__flatcc_fb_parse@@Base+0x1704>
   31edc:	mov	r0, r4
   31ee0:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   31ee4:	str	r7, [r4, #544]	; 0x220
   31ee8:	b	30b8c <__flatcc_fb_parse@@Base+0x3ec>
   31eec:	ldr	r2, [pc, #-1752]	; 3181c <__flatcc_fb_parse@@Base+0x107c>
   31ef0:	mov	ip, #0
   31ef4:	mov	r1, sl
   31ef8:	add	r2, pc, r2
   31efc:	mov	r3, ip
   31f00:	mov	r0, r4
   31f04:	str	ip, [sp]
   31f08:	str	ip, [sp, #4]
   31f0c:	bl	2ebf8 <__flatcc_error_report@@Base>
   31f10:	b	3190c <__flatcc_fb_parse@@Base+0x116c>
   31f14:	ldr	r2, [pc, #-1788]	; 31820 <__flatcc_fb_parse@@Base+0x1080>
   31f18:	mov	ip, #0
   31f1c:	add	r2, pc, r2
   31f20:	b	30b78 <__flatcc_fb_parse@@Base+0x3d8>
   31f24:	mov	r1, #1
   31f28:	mov	r0, #65536	; 0x10000
   31f2c:	bl	13f74 <calloc@plt>
   31f30:	cmp	r0, #0
   31f34:	beq	33510 <__flatcc_fb_parse@@Base+0x2d70>
   31f38:	ldr	r2, [r4, #48]	; 0x30
   31f3c:	add	ip, r0, #65536	; 0x10000
   31f40:	add	r1, r0, #16
   31f44:	add	r3, r0, #144	; 0x90
   31f48:	str	ip, [r4, #44]	; 0x2c
   31f4c:	str	r0, [r4, #48]	; 0x30
   31f50:	str	r2, [r0]
   31f54:	b	316d4 <__flatcc_fb_parse@@Base+0xf34>
   31f58:	mov	r1, #1
   31f5c:	mov	r0, #65536	; 0x10000
   31f60:	bl	13f74 <calloc@plt>
   31f64:	cmp	r0, #0
   31f68:	beq	33510 <__flatcc_fb_parse@@Base+0x2d70>
   31f6c:	ldr	r2, [r4, #48]	; 0x30
   31f70:	add	r3, r0, #65536	; 0x10000
   31f74:	add	r6, r0, #16
   31f78:	str	r3, [r4, #44]	; 0x2c
   31f7c:	add	r3, r0, #48	; 0x30
   31f80:	str	r0, [r4, #48]	; 0x30
   31f84:	str	r2, [r0]
   31f88:	b	313e0 <__flatcc_fb_parse@@Base+0xc40>
   31f8c:	mov	r1, #1
   31f90:	mov	r0, #65536	; 0x10000
   31f94:	bl	13f74 <calloc@plt>
   31f98:	cmp	r0, #0
   31f9c:	beq	33510 <__flatcc_fb_parse@@Base+0x2d70>
   31fa0:	ldr	r2, [r4, #48]	; 0x30
   31fa4:	add	ip, r0, #65536	; 0x10000
   31fa8:	add	r1, r0, #16
   31fac:	add	r3, r0, #144	; 0x90
   31fb0:	str	ip, [r4, #44]	; 0x2c
   31fb4:	str	r0, [r4, #48]	; 0x30
   31fb8:	str	r2, [r0]
   31fbc:	b	30f80 <__flatcc_fb_parse@@Base+0x7e0>
   31fc0:	mov	r1, #1
   31fc4:	mov	r0, #65536	; 0x10000
   31fc8:	bl	13f74 <calloc@plt>
   31fcc:	cmp	r0, #0
   31fd0:	beq	33510 <__flatcc_fb_parse@@Base+0x2d70>
   31fd4:	ldr	r2, [r4, #48]	; 0x30
   31fd8:	add	r1, r0, #65536	; 0x10000
   31fdc:	add	r6, r0, #16
   31fe0:	add	r3, r0, #144	; 0x90
   31fe4:	str	r1, [r4, #44]	; 0x2c
   31fe8:	str	r0, [r4, #48]	; 0x30
   31fec:	str	r2, [r0]
   31ff0:	b	311a0 <__flatcc_fb_parse@@Base+0xa00>
   31ff4:	mov	r1, #1
   31ff8:	mov	r0, #65536	; 0x10000
   31ffc:	bl	13f74 <calloc@plt>
   32000:	cmp	r0, #0
   32004:	beq	33510 <__flatcc_fb_parse@@Base+0x2d70>
   32008:	ldr	r2, [r4, #48]	; 0x30
   3200c:	add	r1, r0, #65536	; 0x10000
   32010:	add	r6, r0, #16
   32014:	add	r3, r0, #144	; 0x90
   32018:	str	r1, [r4, #44]	; 0x2c
   3201c:	str	r0, [r4, #48]	; 0x30
   32020:	str	r2, [r0]
   32024:	b	31460 <__flatcc_fb_parse@@Base+0xcc0>
   32028:	mov	r1, #1
   3202c:	mov	r0, #65536	; 0x10000
   32030:	bl	13f74 <calloc@plt>
   32034:	cmp	r0, #0
   32038:	beq	33510 <__flatcc_fb_parse@@Base+0x2d70>
   3203c:	ldr	r2, [r4, #48]	; 0x30
   32040:	add	ip, r0, #65536	; 0x10000
   32044:	add	r1, r0, #16
   32048:	add	r3, r0, #144	; 0x90
   3204c:	str	ip, [r4, #44]	; 0x2c
   32050:	str	r0, [r4, #48]	; 0x30
   32054:	str	r2, [r0]
   32058:	b	3111c <__flatcc_fb_parse@@Base+0x97c>
   3205c:	ldr	r2, [pc, #-2112]	; 31824 <__flatcc_fb_parse@@Base+0x1084>
   32060:	mov	r3, #0
   32064:	mov	r0, r4
   32068:	ldr	r1, [r4, #360]	; 0x168
   3206c:	ldr	ip, [r4, #364]	; 0x16c
   32070:	add	r2, pc, r2
   32074:	str	r1, [sp]
   32078:	ldr	r1, [r4, #40]	; 0x28
   3207c:	str	ip, [sp, #4]
   32080:	bl	2ebf8 <__flatcc_error_report@@Base>
   32084:	b	30c0c <__flatcc_fb_parse@@Base+0x46c>
   32088:	mov	r0, r4
   3208c:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   32090:	add	r1, r6, #40	; 0x28
   32094:	mov	r0, r4
   32098:	bl	2efb4 <__flatcc_error_report@@Base+0x3bc>
   3209c:	ldrh	r3, [r6, #48]	; 0x30
   320a0:	ldr	r1, [r6, #40]	; 0x28
   320a4:	cmp	r3, #8
   320a8:	bne	32968 <__flatcc_fb_parse@@Base+0x21c8>
   320ac:	ldr	r3, [r1, #16]
   320b0:	add	r3, r3, #996	; 0x3e4
   320b4:	cmp	r3, #21
   320b8:	addls	pc, pc, r3, lsl #2
   320bc:	b	31224 <__flatcc_fb_parse@@Base+0xa84>
   320c0:	b	32988 <__flatcc_fb_parse@@Base+0x21e8>
   320c4:	b	32988 <__flatcc_fb_parse@@Base+0x21e8>
   320c8:	b	31224 <__flatcc_fb_parse@@Base+0xa84>
   320cc:	b	31224 <__flatcc_fb_parse@@Base+0xa84>
   320d0:	b	31224 <__flatcc_fb_parse@@Base+0xa84>
   320d4:	b	31224 <__flatcc_fb_parse@@Base+0xa84>
   320d8:	b	31224 <__flatcc_fb_parse@@Base+0xa84>
   320dc:	b	31224 <__flatcc_fb_parse@@Base+0xa84>
   320e0:	b	31224 <__flatcc_fb_parse@@Base+0xa84>
   320e4:	b	31224 <__flatcc_fb_parse@@Base+0xa84>
   320e8:	b	31224 <__flatcc_fb_parse@@Base+0xa84>
   320ec:	b	32988 <__flatcc_fb_parse@@Base+0x21e8>
   320f0:	b	31224 <__flatcc_fb_parse@@Base+0xa84>
   320f4:	b	31224 <__flatcc_fb_parse@@Base+0xa84>
   320f8:	b	31224 <__flatcc_fb_parse@@Base+0xa84>
   320fc:	b	31224 <__flatcc_fb_parse@@Base+0xa84>
   32100:	b	31224 <__flatcc_fb_parse@@Base+0xa84>
   32104:	b	31224 <__flatcc_fb_parse@@Base+0xa84>
   32108:	b	31224 <__flatcc_fb_parse@@Base+0xa84>
   3210c:	b	31224 <__flatcc_fb_parse@@Base+0xa84>
   32110:	b	31224 <__flatcc_fb_parse@@Base+0xa84>
   32114:	b	32988 <__flatcc_fb_parse@@Base+0x21e8>
   32118:	cmp	r1, #127	; 0x7f
   3211c:	cmpne	r1, #31
   32120:	mov	r2, r5
   32124:	add	r3, r5, #1
   32128:	bhi	3271c <__flatcc_fb_parse@@Base+0x1f7c>
   3212c:	mov	r1, #5
   32130:	mov	r0, r4
   32134:	mov	r5, r3
   32138:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   3213c:	b	31a28 <__flatcc_fb_parse@@Base+0x1288>
   32140:	mov	r3, r5
   32144:	mov	r2, r5
   32148:	mov	r1, #23
   3214c:	mov	r0, r4
   32150:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   32154:	b	30850 <__flatcc_fb_parse@@Base+0xb0>
   32158:	ldr	r2, [r4, #356]	; 0x164
   3215c:	cmp	r2, #0
   32160:	bne	3216c <__flatcc_fb_parse@@Base+0x19cc>
   32164:	b	32180 <__flatcc_fb_parse@@Base+0x19e0>
   32168:	mov	r2, r1
   3216c:	ldr	r1, [r2]
   32170:	str	r3, [r2]
   32174:	mov	r3, r2
   32178:	cmp	r1, #0
   3217c:	bne	32168 <__flatcc_fb_parse@@Base+0x19c8>
   32180:	ldr	r3, [r4, #392]	; 0x188
   32184:	str	r2, [r4, #356]	; 0x164
   32188:	cmp	r3, #0
   3218c:	beq	321b0 <__flatcc_fb_parse@@Base+0x1a10>
   32190:	mov	r1, #0
   32194:	b	3219c <__flatcc_fb_parse@@Base+0x19fc>
   32198:	mov	r3, r2
   3219c:	ldr	r2, [r3]
   321a0:	str	r1, [r3]
   321a4:	mov	r1, r3
   321a8:	cmp	r2, #0
   321ac:	bne	32198 <__flatcc_fb_parse@@Base+0x19f8>
   321b0:	str	r3, [r4, #392]	; 0x188
   321b4:	b	30cdc <__flatcc_fb_parse@@Base+0x53c>
   321b8:	ldr	r2, [pc, #-2456]	; 31828 <__flatcc_fb_parse@@Base+0x1088>
   321bc:	mov	r3, r5
   321c0:	mov	r0, r4
   321c4:	str	r5, [sp]
   321c8:	str	r5, [sp, #4]
   321cc:	add	r2, pc, r2
   321d0:	bl	2ebf8 <__flatcc_error_report@@Base>
   321d4:	b	30f58 <__flatcc_fb_parse@@Base+0x7b8>
   321d8:	mov	r0, r4
   321dc:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   321e0:	ldr	fp, [r4, #40]	; 0x28
   321e4:	ldr	r3, [fp, #16]
   321e8:	cmp	r3, #125	; 0x7d
   321ec:	beq	3131c <__flatcc_fb_parse@@Base+0xb7c>
   321f0:	mov	r2, #0
   321f4:	cmp	r3, #9
   321f8:	str	r2, [r4, #36]	; 0x24
   321fc:	beq	31264 <__flatcc_fb_parse@@Base+0xac4>
   32200:	ldr	r2, [pc, #-2524]	; 3182c <__flatcc_fb_parse@@Base+0x108c>
   32204:	mov	ip, #0
   32208:	mov	r1, fp
   3220c:	add	r2, pc, r2
   32210:	b	31efc <__flatcc_fb_parse@@Base+0x175c>
   32214:	movw	r3, #26933	; 0x6935
   32218:	movt	r3, #13934	; 0x366e
   3221c:	cmp	r1, r3
   32220:	bne	3229c <__flatcc_fb_parse@@Base+0x1afc>
   32224:	ldr	r0, [pc, #-2556]	; 31830 <__flatcc_fb_parse@@Base+0x1090>
   32228:	mov	r1, r5
   3222c:	mov	r2, #5
   32230:	add	r0, pc, r0
   32234:	bl	13fc8 <memcmp@plt>
   32238:	cmp	r0, #0
   3223c:	movw	r1, #64544	; 0xfc20
   32240:	movt	r1, #65535	; 0xffff
   32244:	movne	r1, #9
   32248:	b	31c44 <__flatcc_fb_parse@@Base+0x14a4>
   3224c:	cmp	r1, r9
   32250:	beq	3324c <__flatcc_fb_parse@@Base+0x2aac>
   32254:	bhi	3252c <__flatcc_fb_parse@@Base+0x1d8c>
   32258:	movw	r3, #30005	; 0x7535
   3225c:	movt	r3, #26476	; 0x676c
   32260:	cmp	r1, r3
   32264:	beq	33228 <__flatcc_fb_parse@@Base+0x2a88>
   32268:	bls	324bc <__flatcc_fb_parse@@Base+0x1d1c>
   3226c:	movw	r3, #29494	; 0x7336
   32270:	movt	r3, #26484	; 0x6774
   32274:	cmp	r1, r3
   32278:	beq	33200 <__flatcc_fb_parse@@Base+0x2a60>
   3227c:	bls	32578 <__flatcc_fb_parse@@Base+0x1dd8>
   32280:	movw	r3, #25140	; 0x6234
   32284:	movt	r3, #27759	; 0x6c6f
   32288:	cmp	r1, r3
   3228c:	bne	32470 <__flatcc_fb_parse@@Base+0x1cd0>
   32290:	ldrb	r3, [r5]
   32294:	cmp	r3, #98	; 0x62
   32298:	beq	329c4 <__flatcc_fb_parse@@Base+0x2224>
   3229c:	mov	r1, #9
   322a0:	b	31c44 <__flatcc_fb_parse@@Base+0x14a4>
   322a4:	movw	r3, #26167	; 0x6637
   322a8:	movt	r3, #13420	; 0x346c
   322ac:	cmp	r1, r3
   322b0:	bne	3229c <__flatcc_fb_parse@@Base+0x1afc>
   322b4:	ldr	r0, [pc, #-2696]	; 31834 <__flatcc_fb_parse@@Base+0x1094>
   322b8:	mov	r1, r5
   322bc:	mov	r2, #7
   322c0:	add	r0, pc, r0
   322c4:	bl	13fc8 <memcmp@plt>
   322c8:	cmp	r0, #0
   322cc:	movw	r1, #64541	; 0xfc1d
   322d0:	movt	r1, #65535	; 0xffff
   322d4:	movne	r1, #9
   322d8:	b	31c44 <__flatcc_fb_parse@@Base+0x14a4>
   322dc:	movw	r3, #26167	; 0x6637
   322e0:	movt	r3, #12908	; 0x326c
   322e4:	cmp	r1, r3
   322e8:	beq	33358 <__flatcc_fb_parse@@Base+0x2bb8>
   322ec:	movw	r3, #26933	; 0x6935
   322f0:	movt	r3, #12910	; 0x326e
   322f4:	cmp	r1, r3
   322f8:	beq	333e8 <__flatcc_fb_parse@@Base+0x2c48>
   322fc:	movw	r3, #30006	; 0x7536
   32300:	movt	r3, #12905	; 0x3269
   32304:	cmp	r1, r3
   32308:	bne	3229c <__flatcc_fb_parse@@Base+0x1afc>
   3230c:	ldr	r0, [pc, #-2780]	; 31838 <__flatcc_fb_parse@@Base+0x1098>
   32310:	mov	r1, r5
   32314:	mov	r2, #6
   32318:	add	r0, pc, r0
   3231c:	bl	13fc8 <memcmp@plt>
   32320:	cmp	r0, #0
   32324:	movw	r1, #64557	; 0xfc2d
   32328:	movt	r1, #65535	; 0xffff
   3232c:	movne	r1, #9
   32330:	b	31c44 <__flatcc_fb_parse@@Base+0x14a4>
   32334:	movw	r3, #29749	; 0x7435
   32338:	movt	r3, #25953	; 0x6561
   3233c:	cmp	r1, r3
   32340:	beq	33330 <__flatcc_fb_parse@@Base+0x2b90>
   32344:	bls	32404 <__flatcc_fb_parse@@Base+0x1c64>
   32348:	movw	r3, #26935	; 0x6937
   3234c:	movt	r3, #25966	; 0x656e
   32350:	cmp	r1, r3
   32354:	beq	33274 <__flatcc_fb_parse@@Base+0x2ad4>
   32358:	bls	323cc <__flatcc_fb_parse@@Base+0x1c2c>
   3235c:	movw	r3, #25654	; 0x6436
   32360:	movt	r3, #25967	; 0x656f
   32364:	cmp	r1, r3
   32368:	bne	32394 <__flatcc_fb_parse@@Base+0x1bf4>
   3236c:	ldr	r0, [pc, #-2872]	; 3183c <__flatcc_fb_parse@@Base+0x109c>
   32370:	mov	r1, r5
   32374:	mov	r2, #6
   32378:	add	r0, pc, r0
   3237c:	bl	13fc8 <memcmp@plt>
   32380:	cmp	r0, #0
   32384:	movw	r1, #64561	; 0xfc31
   32388:	movt	r1, #65535	; 0xffff
   3238c:	movne	r1, #9
   32390:	b	31c44 <__flatcc_fb_parse@@Base+0x14a4>
   32394:	movw	r3, #29241	; 0x7239
   32398:	movt	r3, #25967	; 0x656f
   3239c:	cmp	r1, r3
   323a0:	bne	3229c <__flatcc_fb_parse@@Base+0x1afc>
   323a4:	ldr	r0, [pc, #-2924]	; 31840 <__flatcc_fb_parse@@Base+0x10a0>
   323a8:	mov	r1, r5
   323ac:	mov	r2, #9
   323b0:	add	r0, pc, r0
   323b4:	bl	13fc8 <memcmp@plt>
   323b8:	cmp	r0, #0
   323bc:	movw	r1, #64568	; 0xfc38
   323c0:	movt	r1, #65535	; 0xffff
   323c4:	movne	r1, #9
   323c8:	b	31c44 <__flatcc_fb_parse@@Base+0x14a4>
   323cc:	movw	r3, #30005	; 0x7535
   323d0:	movt	r3, #25954	; 0x6562
   323d4:	cmp	r1, r3
   323d8:	bne	3229c <__flatcc_fb_parse@@Base+0x1afc>
   323dc:	ldr	r0, [pc, #-2976]	; 31844 <__flatcc_fb_parse@@Base+0x10a4>
   323e0:	mov	r1, r5
   323e4:	mov	r2, #5
   323e8:	add	r0, pc, r0
   323ec:	bl	13fc8 <memcmp@plt>
   323f0:	cmp	r0, #0
   323f4:	movw	r1, #64554	; 0xfc2a
   323f8:	movt	r1, #65535	; 0xffff
   323fc:	movne	r1, #9
   32400:	b	31c44 <__flatcc_fb_parse@@Base+0x14a4>
   32404:	movw	r3, #26165	; 0x6635
   32408:	movt	r3, #25953	; 0x6561
   3240c:	cmp	r1, r3
   32410:	beq	331d8 <__flatcc_fb_parse@@Base+0x2a38>
   32414:	movw	r3, #28217	; 0x6e39
   32418:	movt	r3, #25953	; 0x6561
   3241c:	cmp	r1, r3
   32420:	beq	33410 <__flatcc_fb_parse@@Base+0x2c70>
   32424:	movw	r3, #26932	; 0x6934
   32428:	movt	r3, #14446	; 0x386e
   3242c:	cmp	r1, r3
   32430:	bne	3229c <__flatcc_fb_parse@@Base+0x1afc>
   32434:	ldrb	r3, [r5]
   32438:	cmp	r3, #105	; 0x69
   3243c:	bne	3229c <__flatcc_fb_parse@@Base+0x1afc>
   32440:	ldrb	r3, [r2]
   32444:	cmp	r3, #110	; 0x6e
   32448:	bne	3229c <__flatcc_fb_parse@@Base+0x1afc>
   3244c:	ldrb	r3, [r2, #1]
   32450:	add	r2, r2, #1
   32454:	cmp	r3, #116	; 0x74
   32458:	bne	3229c <__flatcc_fb_parse@@Base+0x1afc>
   3245c:	ldrb	r3, [r2, #1]
   32460:	cmp	r3, #56	; 0x38
   32464:	mvneq	r1, #992	; 0x3e0
   32468:	bne	3229c <__flatcc_fb_parse@@Base+0x1afc>
   3246c:	b	31c44 <__flatcc_fb_parse@@Base+0x14a4>
   32470:	movw	r3, #25908	; 0x6534
   32474:	movt	r3, #28014	; 0x6d6e
   32478:	cmp	r1, r3
   3247c:	bne	3229c <__flatcc_fb_parse@@Base+0x1afc>
   32480:	ldrb	r3, [r5]
   32484:	cmp	r3, #101	; 0x65
   32488:	bne	3229c <__flatcc_fb_parse@@Base+0x1afc>
   3248c:	ldrb	r3, [r2]
   32490:	cmp	r3, #110	; 0x6e
   32494:	bne	3229c <__flatcc_fb_parse@@Base+0x1afc>
   32498:	ldrb	r3, [r2, #1]
   3249c:	add	r2, r2, #1
   324a0:	cmp	r3, #117	; 0x75
   324a4:	bne	3229c <__flatcc_fb_parse@@Base+0x1afc>
   324a8:	ldrb	r3, [r2, #1]
   324ac:	cmp	r3, #109	; 0x6d
   324b0:	mvneq	r1, #996	; 0x3e4
   324b4:	bne	3229c <__flatcc_fb_parse@@Base+0x1afc>
   324b8:	b	31c44 <__flatcc_fb_parse@@Base+0x14a4>
   324bc:	movw	r3, #24889	; 0x6139
   324c0:	movt	r3, #25972	; 0x6574
   324c4:	cmp	r1, r3
   324c8:	beq	331b0 <__flatcc_fb_parse@@Base+0x2a10>
   324cc:	movw	r3, #25140	; 0x6234
   324d0:	movt	r3, #25977	; 0x6579
   324d4:	cmp	r1, r3
   324d8:	beq	333a8 <__flatcc_fb_parse@@Base+0x2c08>
   324dc:	movw	r3, #29748	; 0x7434
   324e0:	movt	r3, #25970	; 0x6572
   324e4:	cmp	r1, r3
   324e8:	bne	3229c <__flatcc_fb_parse@@Base+0x1afc>
   324ec:	ldrb	r3, [r5]
   324f0:	cmp	r3, #116	; 0x74
   324f4:	bne	3229c <__flatcc_fb_parse@@Base+0x1afc>
   324f8:	ldrb	r3, [r2]
   324fc:	cmp	r3, #114	; 0x72
   32500:	bne	3229c <__flatcc_fb_parse@@Base+0x1afc>
   32504:	ldrb	r3, [r2, #1]
   32508:	add	r2, r2, #1
   3250c:	cmp	r3, #117	; 0x75
   32510:	bne	3229c <__flatcc_fb_parse@@Base+0x1afc>
   32514:	ldrb	r3, [r2, #1]
   32518:	cmp	r3, #101	; 0x65
   3251c:	movweq	r1, #64548	; 0xfc24
   32520:	movteq	r1, #65535	; 0xffff
   32524:	bne	3229c <__flatcc_fb_parse@@Base+0x1afc>
   32528:	b	31c44 <__flatcc_fb_parse@@Base+0x14a4>
   3252c:	ldr	r3, [sp, #12]
   32530:	cmp	r1, r3
   32534:	beq	332f0 <__flatcc_fb_parse@@Base+0x2b50>
   32538:	bls	32624 <__flatcc_fb_parse@@Base+0x1e84>
   3253c:	cmp	r1, fp
   32540:	beq	332c0 <__flatcc_fb_parse@@Base+0x2b20>
   32544:	bls	325f0 <__flatcc_fb_parse@@Base+0x1e50>
   32548:	cmp	r1, r7
   3254c:	bne	325c4 <__flatcc_fb_parse@@Base+0x1e24>
   32550:	ldr	r0, [pc, #-3344]	; 31848 <__flatcc_fb_parse@@Base+0x10a8>
   32554:	mov	r1, r5
   32558:	mov	r2, #6
   3255c:	add	r0, pc, r0
   32560:	bl	13fc8 <memcmp@plt>
   32564:	cmp	r0, #0
   32568:	movw	r1, #64564	; 0xfc34
   3256c:	movt	r1, #65535	; 0xffff
   32570:	movne	r1, #9
   32574:	b	31c44 <__flatcc_fb_parse@@Base+0x14a4>
   32578:	movw	r3, #27700	; 0x6c34
   3257c:	movt	r3, #26479	; 0x676f
   32580:	cmp	r1, r3
   32584:	bne	3229c <__flatcc_fb_parse@@Base+0x1afc>
   32588:	ldrb	r3, [r5]
   3258c:	cmp	r3, #108	; 0x6c
   32590:	bne	3229c <__flatcc_fb_parse@@Base+0x1afc>
   32594:	ldrb	r3, [r2]
   32598:	cmp	r3, #111	; 0x6f
   3259c:	bne	3229c <__flatcc_fb_parse@@Base+0x1afc>
   325a0:	ldrb	r3, [r2, #1]
   325a4:	add	r2, r2, #1
   325a8:	cmp	r3, #110	; 0x6e
   325ac:	bne	3229c <__flatcc_fb_parse@@Base+0x1afc>
   325b0:	ldrb	r3, [r2, #1]
   325b4:	cmp	r3, #103	; 0x67
   325b8:	mvneq	r1, #988	; 0x3dc
   325bc:	bne	3229c <__flatcc_fb_parse@@Base+0x1afc>
   325c0:	b	31c44 <__flatcc_fb_parse@@Base+0x14a4>
   325c4:	cmp	r1, sl
   325c8:	bne	3229c <__flatcc_fb_parse@@Base+0x1afc>
   325cc:	ldr	r0, [pc, #-3464]	; 3184c <__flatcc_fb_parse@@Base+0x10ac>
   325d0:	mov	r1, r5
   325d4:	mov	r2, #6
   325d8:	add	r0, pc, r0
   325dc:	bl	13fc8 <memcmp@plt>
   325e0:	cmp	r0, #0
   325e4:	movne	r1, #9
   325e8:	mvneq	r1, #972	; 0x3cc
   325ec:	b	31c44 <__flatcc_fb_parse@@Base+0x14a4>
   325f0:	movw	r3, #26165	; 0x6635
   325f4:	movt	r3, #29804	; 0x746c
   325f8:	cmp	r1, r3
   325fc:	bne	3229c <__flatcc_fb_parse@@Base+0x1afc>
   32600:	ldr	r0, [pc, #-3512]	; 31850 <__flatcc_fb_parse@@Base+0x10b0>
   32604:	mov	r1, r5
   32608:	mov	r2, #5
   3260c:	add	r0, pc, r0
   32610:	bl	13fc8 <memcmp@plt>
   32614:	cmp	r0, #0
   32618:	movne	r1, #9
   3261c:	mvneq	r1, #984	; 0x3d8
   32620:	b	31c44 <__flatcc_fb_parse@@Base+0x14a4>
   32624:	movw	r3, #26175	; 0x663f
   32628:	movt	r3, #29289	; 0x7269
   3262c:	cmp	r1, r3
   32630:	beq	3329c <__flatcc_fb_parse@@Base+0x2afc>
   32634:	movw	r3, #29493	; 0x7335
   32638:	movt	r3, #29800	; 0x7468
   3263c:	cmp	r1, r3
   32640:	beq	33380 <__flatcc_fb_parse@@Base+0x2be0>
   32644:	movw	r3, #30005	; 0x7535
   32648:	movt	r3, #28270	; 0x6e6e
   3264c:	cmp	r1, r3
   32650:	bne	3229c <__flatcc_fb_parse@@Base+0x1afc>
   32654:	ldr	r0, [pc, #-3592]	; 31854 <__flatcc_fb_parse@@Base+0x10b4>
   32658:	mov	r1, r5
   3265c:	mov	r2, #5
   32660:	add	r0, pc, r0
   32664:	bl	13fc8 <memcmp@plt>
   32668:	cmp	r0, #0
   3266c:	movw	r1, #64560	; 0xfc30
   32670:	movt	r1, #65535	; 0xffff
   32674:	movne	r1, #9
   32678:	b	31c44 <__flatcc_fb_parse@@Base+0x14a4>
   3267c:	mov	r0, r4
   32680:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   32684:	ldr	r6, [r4, #40]	; 0x28
   32688:	ldr	r3, [r6, #16]
   3268c:	b	30adc <__flatcc_fb_parse@@Base+0x33c>
   32690:	mov	ip, #0
   32694:	mov	r2, r9
   32698:	mov	r3, ip
   3269c:	mov	r1, r6
   326a0:	mov	r0, r4
   326a4:	str	ip, [sp]
   326a8:	str	ip, [sp, #4]
   326ac:	bl	2ebf8 <__flatcc_error_report@@Base>
   326b0:	b	30ed8 <__flatcc_fb_parse@@Base+0x738>
   326b4:	mov	r1, #1
   326b8:	mov	r0, #65536	; 0x10000
   326bc:	bl	13f74 <calloc@plt>
   326c0:	cmp	r0, #0
   326c4:	beq	33510 <__flatcc_fb_parse@@Base+0x2d70>
   326c8:	ldr	r1, [r4, #48]	; 0x30
   326cc:	add	ip, r0, #65536	; 0x10000
   326d0:	add	r3, r0, #16
   326d4:	add	r2, r0, #48	; 0x30
   326d8:	str	ip, [r4, #44]	; 0x2c
   326dc:	str	r0, [r4, #48]	; 0x30
   326e0:	str	r1, [r0]
   326e4:	b	30f10 <__flatcc_fb_parse@@Base+0x770>
   326e8:	mov	r1, #1
   326ec:	mov	r0, #65536	; 0x10000
   326f0:	bl	13f74 <calloc@plt>
   326f4:	cmp	r0, #0
   326f8:	beq	33510 <__flatcc_fb_parse@@Base+0x2d70>
   326fc:	ldr	r2, [r4, #48]	; 0x30
   32700:	add	ip, r0, #65536	; 0x10000
   32704:	add	r7, r0, #16
   32708:	add	r3, r0, #144	; 0x90
   3270c:	str	ip, [r4, #44]	; 0x2c
   32710:	str	r0, [r4, #48]	; 0x30
   32714:	str	r2, [r0]
   32718:	b	3128c <__flatcc_fb_parse@@Base+0xaec>
   3271c:	mov	r1, #8
   32720:	mov	r0, r4
   32724:	mov	r5, r3
   32728:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   3272c:	b	31a28 <__flatcc_fb_parse@@Base+0x1288>
   32730:	mov	r0, r4
   32734:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   32738:	ldr	fp, [r4, #40]	; 0x28
   3273c:	ldr	r3, [fp, #16]
   32740:	cmp	r3, #125	; 0x7d
   32744:	beq	31604 <__flatcc_fb_parse@@Base+0xe64>
   32748:	mov	r2, #0
   3274c:	cmp	r3, #9
   32750:	str	r2, [r4, #36]	; 0x24
   32754:	beq	31508 <__flatcc_fb_parse@@Base+0xd68>
   32758:	ldr	r2, [pc, #-3848]	; 31858 <__flatcc_fb_parse@@Base+0x10b8>
   3275c:	mov	ip, #0
   32760:	mov	r1, fp
   32764:	mov	r3, ip
   32768:	mov	r0, r4
   3276c:	str	ip, [sp]
   32770:	str	ip, [sp, #4]
   32774:	add	r2, pc, r2
   32778:	bl	2ebf8 <__flatcc_error_report@@Base>
   3277c:	b	31940 <__flatcc_fb_parse@@Base+0x11a0>
   32780:	mov	r0, r4
   32784:	bl	2e8c0 <__flatcc_fb_default_error_out@@Base+0x148>
   32788:	ldr	r3, [r7, #16]
   3278c:	ldr	r3, [r3]
   32790:	cmp	r3, #0
   32794:	beq	327b8 <__flatcc_fb_parse@@Base+0x2018>
   32798:	mov	ip, #0
   3279c:	mov	r1, fp
   327a0:	ldr	r2, [sp, #16]
   327a4:	mov	r3, ip
   327a8:	mov	r0, r4
   327ac:	str	ip, [sp]
   327b0:	str	ip, [sp, #4]
   327b4:	bl	2ebf8 <__flatcc_error_report@@Base>
   327b8:	add	r1, r7, #16
   327bc:	mov	r0, r4
   327c0:	bl	2efb4 <__flatcc_error_report@@Base+0x3bc>
   327c4:	ldr	r3, [r4, #40]	; 0x28
   327c8:	ldr	r3, [r3, #16]
   327cc:	b	315d0 <__flatcc_fb_parse@@Base+0xe30>
   327d0:	add	r1, sp, #24
   327d4:	mov	r0, r4
   327d8:	bl	2edf8 <__flatcc_error_report@@Base+0x200>
   327dc:	ldr	r2, [pc, #-3976]	; 3185c <__flatcc_fb_parse@@Base+0x10bc>
   327e0:	mov	r3, r6
   327e4:	mov	r1, #59	; 0x3b
   327e8:	mov	r0, r4
   327ec:	add	r2, pc, r2
   327f0:	bl	2ef54 <__flatcc_error_report@@Base+0x35c>
   327f4:	ldr	fp, [sp, #24]
   327f8:	mov	r2, #0
   327fc:	ldr	r0, [r4, #412]	; 0x19c
   32800:	mov	r1, fp
   32804:	bl	2d85c <fb_scope_table_find@@Base>
   32808:	subs	sl, r0, #0
   3280c:	beq	32fd0 <__flatcc_fb_parse@@Base+0x2830>
   32810:	str	sl, [r4, #544]	; 0x220
   32814:	b	30b8c <__flatcc_fb_parse@@Base+0x3ec>
   32818:	ldr	r2, [pc, #-4032]	; 31860 <__flatcc_fb_parse@@Base+0x10c0>
   3281c:	mov	r3, r7
   32820:	mov	r1, sl
   32824:	mov	r0, r4
   32828:	str	r7, [sp]
   3282c:	str	r7, [sp, #4]
   32830:	add	r2, pc, r2
   32834:	bl	2ebf8 <__flatcc_error_report@@Base>
   32838:	b	31940 <__flatcc_fb_parse@@Base+0x11a0>
   3283c:	add	r7, r5, #2
   32840:	cmp	r6, r7
   32844:	beq	30e98 <__flatcc_fb_parse@@Base+0x6f8>
   32848:	ldrb	r3, [r5, #2]
   3284c:	cmp	r3, #13
   32850:	bne	30e98 <__flatcc_fb_parse@@Base+0x6f8>
   32854:	b	30e94 <__flatcc_fb_parse@@Base+0x6f4>
   32858:	add	r8, r5, #2
   3285c:	mov	r2, r5
   32860:	mov	r3, r8
   32864:	movw	r1, #9766	; 0x2626
   32868:	mov	r0, r4
   3286c:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   32870:	mov	r2, r5
   32874:	mov	r3, r8
   32878:	mov	r1, #38	; 0x26
   3287c:	mov	r0, r4
   32880:	mov	r5, r8
   32884:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   32888:	b	31a28 <__flatcc_fb_parse@@Base+0x1288>
   3288c:	mov	r1, #1
   32890:	mov	r0, #65536	; 0x10000
   32894:	bl	13f74 <calloc@plt>
   32898:	cmp	r0, #0
   3289c:	beq	33510 <__flatcc_fb_parse@@Base+0x2d70>
   328a0:	ldr	r2, [r4, #48]	; 0x30
   328a4:	add	r1, r0, #65536	; 0x10000
   328a8:	add	r7, r0, #16
   328ac:	add	r3, r0, #144	; 0x90
   328b0:	str	r1, [r4, #44]	; 0x2c
   328b4:	str	r0, [r4, #48]	; 0x30
   328b8:	str	r2, [r0]
   328bc:	b	31528 <__flatcc_fb_parse@@Base+0xd88>
   328c0:	add	r8, r5, #2
   328c4:	cmp	r6, r8
   328c8:	beq	328d8 <__flatcc_fb_parse@@Base+0x2138>
   328cc:	ldrb	r3, [r5, #2]
   328d0:	cmp	r3, #61	; 0x3d
   328d4:	beq	33170 <__flatcc_fb_parse@@Base+0x29d0>
   328d8:	mov	r3, r8
   328dc:	mov	r2, r5
   328e0:	movw	r1, #15677	; 0x3d3d
   328e4:	mov	r0, r4
   328e8:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   328ec:	mov	r2, r5
   328f0:	mov	r3, r8
   328f4:	mov	r1, #61	; 0x3d
   328f8:	mov	r0, r4
   328fc:	mov	r5, r8
   32900:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   32904:	b	31a28 <__flatcc_fb_parse@@Base+0x1288>
   32908:	add	r3, r7, #2
   3290c:	mov	r2, r5
   32910:	mov	r1, #22
   32914:	mov	r0, r4
   32918:	mov	r5, r3
   3291c:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   32920:	b	30850 <__flatcc_fb_parse@@Base+0xb0>
   32924:	mov	r2, r5
   32928:	mov	r1, #10
   3292c:	mov	r0, r4
   32930:	mov	r5, r3
   32934:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   32938:	b	31a28 <__flatcc_fb_parse@@Base+0x1288>
   3293c:	ldr	r2, [pc, #3032]	; 3351c <__flatcc_fb_parse@@Base+0x2d7c>
   32940:	mov	r3, #0
   32944:	mov	r0, r4
   32948:	ldr	r1, [r4, #376]	; 0x178
   3294c:	ldr	ip, [r4, #380]	; 0x17c
   32950:	add	r2, pc, r2
   32954:	str	r1, [sp]
   32958:	ldr	r1, [r4, #40]	; 0x28
   3295c:	str	ip, [sp, #4]
   32960:	bl	2ebf8 <__flatcc_error_report@@Base>
   32964:	b	31004 <__flatcc_fb_parse@@Base+0x864>
   32968:	ldr	r2, [pc, #2992]	; 33520 <__flatcc_fb_parse@@Base+0x2d80>
   3296c:	mov	r3, r7
   32970:	mov	r0, r4
   32974:	str	r7, [sp]
   32978:	str	r7, [sp, #4]
   3297c:	add	r2, pc, r2
   32980:	bl	2ebf8 <__flatcc_error_report@@Base>
   32984:	b	31224 <__flatcc_fb_parse@@Base+0xa84>
   32988:	ldr	r2, [pc, #2964]	; 33524 <__flatcc_fb_parse@@Base+0x2d84>
   3298c:	mov	ip, #0
   32990:	mov	r0, r4
   32994:	mov	r3, ip
   32998:	str	ip, [sp]
   3299c:	str	ip, [sp, #4]
   329a0:	add	r2, pc, r2
   329a4:	bl	2ebf8 <__flatcc_error_report@@Base>
   329a8:	b	31224 <__flatcc_fb_parse@@Base+0xa84>
   329ac:	mov	r2, r5
   329b0:	movw	r1, #15934	; 0x3e3e
   329b4:	mov	r0, r4
   329b8:	mov	r5, r3
   329bc:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   329c0:	b	31a28 <__flatcc_fb_parse@@Base+0x1288>
   329c4:	ldrb	r3, [r2]
   329c8:	cmp	r3, #111	; 0x6f
   329cc:	bne	3229c <__flatcc_fb_parse@@Base+0x1afc>
   329d0:	ldrb	r3, [r2, #1]
   329d4:	add	r2, r2, #1
   329d8:	cmp	r3, #111	; 0x6f
   329dc:	bne	3229c <__flatcc_fb_parse@@Base+0x1afc>
   329e0:	ldrb	r3, [r2, #1]
   329e4:	cmp	r3, #108	; 0x6c
   329e8:	movweq	r1, #64537	; 0xfc19
   329ec:	movteq	r1, #65535	; 0xffff
   329f0:	bne	3229c <__flatcc_fb_parse@@Base+0x1afc>
   329f4:	b	31c44 <__flatcc_fb_parse@@Base+0x14a4>
   329f8:	mov	r1, #1
   329fc:	mov	r0, #65536	; 0x10000
   32a00:	bl	13f74 <calloc@plt>
   32a04:	cmp	r0, #0
   32a08:	beq	33510 <__flatcc_fb_parse@@Base+0x2d70>
   32a0c:	ldr	r3, [r4, #48]	; 0x30
   32a10:	add	r2, r0, #65536	; 0x10000
   32a14:	add	ip, r0, #16
   32a18:	str	r2, [r4, #44]	; 0x2c
   32a1c:	add	r2, r0, #144	; 0x90
   32a20:	str	r0, [r4, #48]	; 0x30
   32a24:	str	r3, [r0]
   32a28:	ldr	r3, [r6, #20]
   32a2c:	b	31660 <__flatcc_fb_parse@@Base+0xec0>
   32a30:	mov	r2, r5
   32a34:	mov	r1, #46	; 0x2e
   32a38:	mov	r0, r4
   32a3c:	mov	r5, r3
   32a40:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   32a44:	b	31a28 <__flatcc_fb_parse@@Base+0x1288>
   32a48:	mov	r2, r5
   32a4c:	mov	r3, r8
   32a50:	mov	r1, #42	; 0x2a
   32a54:	mov	r0, r4
   32a58:	mov	r5, r8
   32a5c:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   32a60:	b	31a28 <__flatcc_fb_parse@@Base+0x1288>
   32a64:	mov	r2, r5
   32a68:	mov	r1, #43	; 0x2b
   32a6c:	mov	r0, r4
   32a70:	mov	r5, r3
   32a74:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   32a78:	b	31a28 <__flatcc_fb_parse@@Base+0x1288>
   32a7c:	mov	r2, r5
   32a80:	mov	r1, #58	; 0x3a
   32a84:	mov	r0, r4
   32a88:	mov	r5, r3
   32a8c:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   32a90:	b	31a28 <__flatcc_fb_parse@@Base+0x1288>
   32a94:	mov	r2, r5
   32a98:	mov	r1, #62	; 0x3e
   32a9c:	mov	r0, r4
   32aa0:	mov	r5, r3
   32aa4:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   32aa8:	b	31a28 <__flatcc_fb_parse@@Base+0x1288>
   32aac:	add	r3, r5, #2
   32ab0:	mov	r2, r5
   32ab4:	movw	r1, #15678	; 0x3d3e
   32ab8:	mov	r0, r4
   32abc:	mov	r5, r3
   32ac0:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   32ac4:	b	31a28 <__flatcc_fb_parse@@Base+0x1288>
   32ac8:	add	r3, r5, #2
   32acc:	mov	r2, r5
   32ad0:	movw	r1, #15740	; 0x3d7c
   32ad4:	mov	r0, r4
   32ad8:	mov	r5, r3
   32adc:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   32ae0:	b	31a28 <__flatcc_fb_parse@@Base+0x1288>
   32ae4:	add	r3, r5, #2
   32ae8:	mov	r2, r5
   32aec:	movw	r1, #11051	; 0x2b2b
   32af0:	mov	r0, r4
   32af4:	mov	r5, r3
   32af8:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   32afc:	b	31a28 <__flatcc_fb_parse@@Base+0x1288>
   32b00:	add	r3, r5, #2
   32b04:	cmp	r6, r3
   32b08:	beq	32b18 <__flatcc_fb_parse@@Base+0x2378>
   32b0c:	ldrb	r2, [r5, #2]
   32b10:	cmp	r2, #61	; 0x3d
   32b14:	beq	33190 <__flatcc_fb_parse@@Base+0x29f0>
   32b18:	mov	r2, r5
   32b1c:	movw	r1, #14906	; 0x3a3a
   32b20:	mov	r0, r4
   32b24:	mov	r5, r3
   32b28:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   32b2c:	b	31a28 <__flatcc_fb_parse@@Base+0x1288>
   32b30:	add	r3, r5, #2
   32b34:	cmp	r6, r3
   32b38:	beq	32b48 <__flatcc_fb_parse@@Base+0x23a8>
   32b3c:	ldrb	r2, [r5, #2]
   32b40:	cmp	r2, #46	; 0x2e
   32b44:	beq	33150 <__flatcc_fb_parse@@Base+0x29b0>
   32b48:	mov	r2, r5
   32b4c:	movw	r1, #11822	; 0x2e2e
   32b50:	mov	r0, r4
   32b54:	mov	r5, r3
   32b58:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   32b5c:	b	31a28 <__flatcc_fb_parse@@Base+0x1288>
   32b60:	mov	r2, r5
   32b64:	movw	r1, #10794	; 0x2a2a
   32b68:	mov	r3, r8
   32b6c:	mov	r0, r4
   32b70:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   32b74:	ldrb	r1, [r5, #1]
   32b78:	mov	r5, r8
   32b7c:	b	3086c <__flatcc_fb_parse@@Base+0xcc>
   32b80:	and	r1, r1, #223	; 0xdf
   32b84:	cmp	r1, #69	; 0x45
   32b88:	bne	319d0 <__flatcc_fb_parse@@Base+0x1230>
   32b8c:	b	3198c <__flatcc_fb_parse@@Base+0x11ec>
   32b90:	add	r3, r5, #2
   32b94:	mov	r2, r5
   32b98:	movw	r1, #11580	; 0x2d3c
   32b9c:	mov	r0, r4
   32ba0:	mov	r5, r3
   32ba4:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   32ba8:	b	31a28 <__flatcc_fb_parse@@Base+0x1288>
   32bac:	add	r3, r5, #2
   32bb0:	mov	r2, r5
   32bb4:	movw	r1, #15917	; 0x3e2d
   32bb8:	mov	r0, r4
   32bbc:	mov	r5, r3
   32bc0:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   32bc4:	b	31a28 <__flatcc_fb_parse@@Base+0x1288>
   32bc8:	add	r3, r5, #2
   32bcc:	mov	r2, r5
   32bd0:	movw	r1, #15661	; 0x3d2d
   32bd4:	mov	r0, r4
   32bd8:	mov	r5, r3
   32bdc:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   32be0:	b	31a28 <__flatcc_fb_parse@@Base+0x1288>
   32be4:	add	r3, r5, #2
   32be8:	mov	r2, r5
   32bec:	movw	r1, #15676	; 0x3d3c
   32bf0:	mov	r0, r4
   32bf4:	mov	r5, r3
   32bf8:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   32bfc:	b	31a28 <__flatcc_fb_parse@@Base+0x1288>
   32c00:	add	r3, r5, #2
   32c04:	cmp	r6, r3
   32c08:	beq	330d0 <__flatcc_fb_parse@@Base+0x2930>
   32c0c:	ldrb	r2, [r5, #2]
   32c10:	cmp	r2, #60	; 0x3c
   32c14:	beq	3311c <__flatcc_fb_parse@@Base+0x297c>
   32c18:	cmp	r2, #61	; 0x3d
   32c1c:	bne	330d0 <__flatcc_fb_parse@@Base+0x2930>
   32c20:	add	r3, r5, #3
   32c24:	mov	r2, r5
   32c28:	movw	r1, #15420	; 0x3c3c
   32c2c:	movt	r1, #61	; 0x3d
   32c30:	mov	r0, r4
   32c34:	mov	r5, r3
   32c38:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   32c3c:	b	31a28 <__flatcc_fb_parse@@Base+0x1288>
   32c40:	add	r3, r5, #2
   32c44:	mov	r2, r5
   32c48:	movw	r1, #11565	; 0x2d2d
   32c4c:	mov	r0, r4
   32c50:	mov	r5, r3
   32c54:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   32c58:	b	31a28 <__flatcc_fb_parse@@Base+0x1288>
   32c5c:	add	r7, r5, #2
   32c60:	cmp	r6, r7
   32c64:	beq	33074 <__flatcc_fb_parse@@Base+0x28d4>
   32c68:	ldrb	r3, [r5, #2]
   32c6c:	cmp	r3, #33	; 0x21
   32c70:	cmpne	r3, #42	; 0x2a
   32c74:	bne	33074 <__flatcc_fb_parse@@Base+0x28d4>
   32c78:	mov	r0, #1
   32c7c:	add	r7, r5, #3
   32c80:	movw	r1, #64572	; 0xfc3c
   32c84:	movt	r1, #65535	; 0xffff
   32c88:	mov	r3, r7
   32c8c:	mov	r2, r7
   32c90:	str	r0, [r4, #32]
   32c94:	mov	r0, r4
   32c98:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   32c9c:	movw	r8, #64572	; 0xfc3c
   32ca0:	movt	r8, #65535	; 0xffff
   32ca4:	sub	r2, r7, #1
   32ca8:	b	32cb0 <__flatcc_fb_parse@@Base+0x2510>
   32cac:	mov	r2, r5
   32cb0:	add	r5, r2, #1
   32cb4:	cmp	r6, r5
   32cb8:	beq	32d68 <__flatcc_fb_parse@@Base+0x25c8>
   32cbc:	ldrb	r3, [r2, #1]
   32cc0:	cmp	r3, #127	; 0x7f
   32cc4:	cmpne	r3, #31
   32cc8:	bls	32d94 <__flatcc_fb_parse@@Base+0x25f4>
   32ccc:	cmp	r3, #47	; 0x2f
   32cd0:	bne	32cac <__flatcc_fb_parse@@Base+0x250c>
   32cd4:	ldrb	r3, [r5, #-1]
   32cd8:	cmp	r3, #42	; 0x2a
   32cdc:	bne	32cac <__flatcc_fb_parse@@Base+0x250c>
   32ce0:	cmp	r7, r2
   32ce4:	moveq	r5, r7
   32ce8:	beq	32cfc <__flatcc_fb_parse@@Base+0x255c>
   32cec:	ldr	r3, [r4, #32]
   32cf0:	mov	r5, r2
   32cf4:	cmp	r3, #0
   32cf8:	bne	32d7c <__flatcc_fb_parse@@Base+0x25dc>
   32cfc:	cmp	r6, r5
   32d00:	beq	32e48 <__flatcc_fb_parse@@Base+0x26a8>
   32d04:	ldrb	r3, [r5]
   32d08:	cmp	r3, #0
   32d0c:	beq	32e48 <__flatcc_fb_parse@@Base+0x26a8>
   32d10:	cmp	r3, #10
   32d14:	beq	32e90 <__flatcc_fb_parse@@Base+0x26f0>
   32d18:	cmp	r3, #13
   32d1c:	beq	32ebc <__flatcc_fb_parse@@Base+0x271c>
   32d20:	cmp	r3, #127	; 0x7f
   32d24:	cmpne	r3, #31
   32d28:	movls	r2, #1
   32d2c:	movhi	r2, #0
   32d30:	bhi	32e84 <__flatcc_fb_parse@@Base+0x26e4>
   32d34:	cmp	r3, #9
   32d38:	cmpne	r3, #32
   32d3c:	add	r7, r5, #1
   32d40:	bne	32edc <__flatcc_fb_parse@@Base+0x273c>
   32d44:	ldr	r3, [r4, #32]
   32d48:	cmp	r3, #0
   32d4c:	beq	32ca4 <__flatcc_fb_parse@@Base+0x2504>
   32d50:	mov	r2, r5
   32d54:	mov	r3, r7
   32d58:	mov	r1, r8
   32d5c:	mov	r0, r4
   32d60:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   32d64:	b	32ca4 <__flatcc_fb_parse@@Base+0x2504>
   32d68:	cmp	r7, r6
   32d6c:	beq	32e48 <__flatcc_fb_parse@@Base+0x26a8>
   32d70:	ldr	r3, [r4, #32]
   32d74:	cmp	r3, #0
   32d78:	beq	32e48 <__flatcc_fb_parse@@Base+0x26a8>
   32d7c:	mov	r2, r7
   32d80:	mov	r3, r5
   32d84:	mov	r1, r8
   32d88:	mov	r0, r4
   32d8c:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   32d90:	b	32cfc <__flatcc_fb_parse@@Base+0x255c>
   32d94:	cmp	r7, r5
   32d98:	beq	32d08 <__flatcc_fb_parse@@Base+0x2568>
   32d9c:	ldr	r3, [r4, #32]
   32da0:	cmp	r3, #0
   32da4:	beq	32d04 <__flatcc_fb_parse@@Base+0x2564>
   32da8:	b	32d7c <__flatcc_fb_parse@@Base+0x25dc>
   32dac:	add	r7, r5, #2
   32db0:	cmp	r6, r7
   32db4:	beq	33080 <__flatcc_fb_parse@@Base+0x28e0>
   32db8:	ldrb	r3, [r5, #2]
   32dbc:	cmp	r3, #33	; 0x21
   32dc0:	cmpne	r3, #47	; 0x2f
   32dc4:	bne	33080 <__flatcc_fb_parse@@Base+0x28e0>
   32dc8:	mov	r0, #1
   32dcc:	add	r7, r5, #3
   32dd0:	movw	r1, #64572	; 0xfc3c
   32dd4:	movt	r1, #65535	; 0xffff
   32dd8:	mov	r3, r7
   32ddc:	mov	r2, r7
   32de0:	str	r0, [r4, #32]
   32de4:	mov	r0, r4
   32de8:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   32dec:	movw	sl, #64572	; 0xfc3c
   32df0:	movt	sl, #65535	; 0xffff
   32df4:	sub	r8, r7, #1
   32df8:	b	32e10 <__flatcc_fb_parse@@Base+0x2670>
   32dfc:	ldrb	r3, [r8, #1]
   32e00:	cmp	r3, #127	; 0x7f
   32e04:	cmpne	r3, #31
   32e08:	bls	32f10 <__flatcc_fb_parse@@Base+0x2770>
   32e0c:	mov	r8, r5
   32e10:	add	r5, r8, #1
   32e14:	cmp	r6, r5
   32e18:	bne	32dfc <__flatcc_fb_parse@@Base+0x265c>
   32e1c:	cmp	r7, r6
   32e20:	beq	32e48 <__flatcc_fb_parse@@Base+0x26a8>
   32e24:	ldr	r3, [r4, #32]
   32e28:	cmp	r3, #0
   32e2c:	beq	32e48 <__flatcc_fb_parse@@Base+0x26a8>
   32e30:	movw	r1, #64572	; 0xfc3c
   32e34:	movt	r1, #65535	; 0xffff
   32e38:	mov	r2, r7
   32e3c:	mov	r3, r6
   32e40:	mov	r0, r4
   32e44:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   32e48:	mov	r3, r5
   32e4c:	mov	r2, r5
   32e50:	mov	r1, #27
   32e54:	mov	r0, r4
   32e58:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   32e5c:	cmp	r6, r5
   32e60:	beq	30a98 <__flatcc_fb_parse@@Base+0x2f8>
   32e64:	ldrb	r1, [r5]
   32e68:	cmp	r1, #0
   32e6c:	bne	30a98 <__flatcc_fb_parse@@Base+0x2f8>
   32e70:	mov	r3, r5
   32e74:	mov	r2, r5
   32e78:	mov	r0, r4
   32e7c:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   32e80:	b	30aac <__flatcc_fb_parse@@Base+0x30c>
   32e84:	add	r5, r5, #2
   32e88:	str	r2, [r4, #32]
   32e8c:	b	30850 <__flatcc_fb_parse@@Base+0xb0>
   32e90:	add	r7, r5, #1
   32e94:	cmp	r6, r7
   32e98:	beq	32ea8 <__flatcc_fb_parse@@Base+0x2708>
   32e9c:	ldrb	r3, [r5, #1]
   32ea0:	cmp	r3, #13
   32ea4:	beq	32ed4 <__flatcc_fb_parse@@Base+0x2734>
   32ea8:	ldr	r3, [r4, #64]	; 0x40
   32eac:	str	r7, [r4, #60]	; 0x3c
   32eb0:	add	r3, r3, #1
   32eb4:	str	r3, [r4, #64]	; 0x40
   32eb8:	b	32ca4 <__flatcc_fb_parse@@Base+0x2504>
   32ebc:	add	r7, r5, #1
   32ec0:	cmp	r6, r7
   32ec4:	beq	32ea8 <__flatcc_fb_parse@@Base+0x2708>
   32ec8:	ldrb	r3, [r5, #1]
   32ecc:	cmp	r3, #10
   32ed0:	bne	32ea8 <__flatcc_fb_parse@@Base+0x2708>
   32ed4:	add	r7, r5, #2
   32ed8:	b	32ea8 <__flatcc_fb_parse@@Base+0x2708>
   32edc:	mov	r2, r5
   32ee0:	mov	r3, r7
   32ee4:	mov	r1, #7
   32ee8:	mov	r0, r4
   32eec:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   32ef0:	b	32ca4 <__flatcc_fb_parse@@Base+0x2504>
   32ef4:	add	r3, r5, #2
   32ef8:	mov	r2, r5
   32efc:	movw	r1, #15663	; 0x3d2f
   32f00:	mov	r0, r4
   32f04:	mov	r5, r3
   32f08:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   32f0c:	b	31a28 <__flatcc_fb_parse@@Base+0x1288>
   32f10:	cmp	r7, r5
   32f14:	bne	32f7c <__flatcc_fb_parse@@Base+0x27dc>
   32f18:	ldrb	r3, [r5]
   32f1c:	cmp	r3, #0
   32f20:	beq	32e48 <__flatcc_fb_parse@@Base+0x26a8>
   32f24:	cmp	r3, #13
   32f28:	cmpne	r3, #10
   32f2c:	beq	32fa0 <__flatcc_fb_parse@@Base+0x2800>
   32f30:	cmp	r3, #9
   32f34:	cmpne	r3, #32
   32f38:	add	r7, r8, #2
   32f3c:	bne	32f64 <__flatcc_fb_parse@@Base+0x27c4>
   32f40:	ldr	r3, [r4, #32]
   32f44:	cmp	r3, #0
   32f48:	beq	32df4 <__flatcc_fb_parse@@Base+0x2654>
   32f4c:	mov	r2, r5
   32f50:	mov	r3, r7
   32f54:	mov	r1, sl
   32f58:	mov	r0, r4
   32f5c:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   32f60:	b	32df4 <__flatcc_fb_parse@@Base+0x2654>
   32f64:	mov	r2, r5
   32f68:	mov	r3, r7
   32f6c:	mov	r1, #7
   32f70:	mov	r0, r4
   32f74:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   32f78:	b	32df4 <__flatcc_fb_parse@@Base+0x2654>
   32f7c:	ldr	r3, [r4, #32]
   32f80:	cmp	r3, #0
   32f84:	beq	32f18 <__flatcc_fb_parse@@Base+0x2778>
   32f88:	mov	r2, r7
   32f8c:	mov	r3, r5
   32f90:	mov	r1, sl
   32f94:	mov	r0, r4
   32f98:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   32f9c:	b	32f18 <__flatcc_fb_parse@@Base+0x2778>
   32fa0:	mov	r3, #0
   32fa4:	str	r3, [r4, #32]
   32fa8:	b	30850 <__flatcc_fb_parse@@Base+0xb0>
   32fac:	mov	r3, r8
   32fb0:	mov	r2, r8
   32fb4:	mov	r1, #23
   32fb8:	mov	r0, r4
   32fbc:	mov	r5, r8
   32fc0:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   32fc4:	b	30850 <__flatcc_fb_parse@@Base+0xb0>
   32fc8:	mov	r2, r3
   32fcc:	b	315b8 <__flatcc_fb_parse@@Base+0xe18>
   32fd0:	ldr	r3, [r4, #44]	; 0x2c
   32fd4:	ldr	sl, [r4, #52]	; 0x34
   32fd8:	add	r2, sl, #32
   32fdc:	cmp	r2, r3
   32fe0:	bhi	330e8 <__flatcc_fb_parse@@Base+0x2948>
   32fe4:	add	r3, r4, #476	; 0x1dc
   32fe8:	mov	r1, sl
   32fec:	ldr	r0, [r4, #412]	; 0x19c
   32ff0:	ldrd	r6, [r3]
   32ff4:	str	r2, [r4, #52]	; 0x34
   32ff8:	mov	r2, #1
   32ffc:	str	fp, [sl]
   33000:	strd	r6, [sl, #20]
   33004:	bl	2d838 <fb_scope_table_insert_item@@Base>
   33008:	b	32810 <__flatcc_fb_parse@@Base+0x2070>
   3300c:	orr	r3, r3, ip, lsl #16
   33010:	ldr	ip, [pc, #1296]	; 33528 <__flatcc_fb_parse@@Base+0x2d88>
   33014:	mov	r0, r2
   33018:	add	ip, pc, ip
   3301c:	b	33038 <__flatcc_fb_parse@@Base+0x2898>
   33020:	ldrb	r1, [r8]
   33024:	add	r1, ip, r1
   33028:	ldrb	r1, [r1, #40]	; 0x28
   3302c:	cmp	r1, #0
   33030:	beq	3309c <__flatcc_fb_parse@@Base+0x28fc>
   33034:	mov	r0, r8
   33038:	add	r8, r8, #1
   3303c:	cmp	r6, r8
   33040:	bne	33020 <__flatcc_fb_parse@@Base+0x2880>
   33044:	sub	ip, r6, r5
   33048:	ldrb	r1, [r0]
   3304c:	uxtb	r0, ip
   33050:	add	r0, r0, #48	; 0x30
   33054:	b	31bbc <__flatcc_fb_parse@@Base+0x141c>
   33058:	add	r3, r5, #2
   3305c:	mov	r2, r5
   33060:	orr	r1, r1, #15616	; 0x3d00
   33064:	mov	r0, r4
   33068:	mov	r5, r3
   3306c:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   33070:	b	31a28 <__flatcc_fb_parse@@Base+0x1288>
   33074:	mov	r3, #0
   33078:	str	r3, [r4, #32]
   3307c:	b	32c9c <__flatcc_fb_parse@@Base+0x24fc>
   33080:	mov	r3, #0
   33084:	str	r3, [r4, #32]
   33088:	b	32dec <__flatcc_fb_parse@@Base+0x264c>
   3308c:	mov	r5, r1
   33090:	b	30b08 <__flatcc_fb_parse@@Base+0x368>
   33094:	mov	r0, r3
   33098:	b	31e20 <__flatcc_fb_parse@@Base+0x1680>
   3309c:	sub	ip, r8, r5
   330a0:	ldrb	r1, [r0]
   330a4:	uxtb	r0, ip
   330a8:	add	r0, r0, #48	; 0x30
   330ac:	b	31bbc <__flatcc_fb_parse@@Base+0x141c>
   330b0:	add	r3, r5, #3
   330b4:	mov	r2, r5
   330b8:	movw	r1, #15934	; 0x3e3e
   330bc:	movt	r1, #61	; 0x3d
   330c0:	mov	r0, r4
   330c4:	mov	r5, r3
   330c8:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   330cc:	b	31a28 <__flatcc_fb_parse@@Base+0x1288>
   330d0:	mov	r2, r5
   330d4:	movw	r1, #15420	; 0x3c3c
   330d8:	mov	r0, r4
   330dc:	mov	r5, r3
   330e0:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   330e4:	b	31a28 <__flatcc_fb_parse@@Base+0x1288>
   330e8:	mov	r1, #1
   330ec:	mov	r0, #65536	; 0x10000
   330f0:	bl	13f74 <calloc@plt>
   330f4:	cmp	r0, #0
   330f8:	beq	33510 <__flatcc_fb_parse@@Base+0x2d70>
   330fc:	ldr	r3, [r4, #48]	; 0x30
   33100:	add	r1, r0, #65536	; 0x10000
   33104:	add	sl, r0, #16
   33108:	add	r2, r0, #48	; 0x30
   3310c:	str	r1, [r4, #44]	; 0x2c
   33110:	str	r0, [r4, #48]	; 0x30
   33114:	str	r3, [r0]
   33118:	b	32fe4 <__flatcc_fb_parse@@Base+0x2844>
   3311c:	add	r3, r5, #3
   33120:	cmp	r6, r3
   33124:	beq	33134 <__flatcc_fb_parse@@Base+0x2994>
   33128:	ldrb	r2, [r5, #3]
   3312c:	cmp	r2, #61	; 0x3d
   33130:	beq	334f0 <__flatcc_fb_parse@@Base+0x2d50>
   33134:	mov	r2, r5
   33138:	movw	r1, #15420	; 0x3c3c
   3313c:	movt	r1, #60	; 0x3c
   33140:	mov	r0, r4
   33144:	mov	r5, r3
   33148:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   3314c:	b	31a28 <__flatcc_fb_parse@@Base+0x1288>
   33150:	add	r3, r5, #3
   33154:	mov	r2, r5
   33158:	movw	r1, #11822	; 0x2e2e
   3315c:	movt	r1, #46	; 0x2e
   33160:	mov	r0, r4
   33164:	mov	r5, r3
   33168:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   3316c:	b	31a28 <__flatcc_fb_parse@@Base+0x1288>
   33170:	add	r3, r5, #3
   33174:	mov	r2, r5
   33178:	movw	r1, #15677	; 0x3d3d
   3317c:	movt	r1, #61	; 0x3d
   33180:	mov	r0, r4
   33184:	mov	r5, r3
   33188:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   3318c:	b	31a28 <__flatcc_fb_parse@@Base+0x1288>
   33190:	add	r3, r5, #3
   33194:	mov	r2, r5
   33198:	movw	r1, #14906	; 0x3a3a
   3319c:	movt	r1, #61	; 0x3d
   331a0:	mov	r0, r4
   331a4:	mov	r5, r3
   331a8:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   331ac:	b	31a28 <__flatcc_fb_parse@@Base+0x1288>
   331b0:	ldr	r0, [pc, #884]	; 3352c <__flatcc_fb_parse@@Base+0x2d8c>
   331b4:	mov	r1, r5
   331b8:	mov	r2, #9
   331bc:	add	r0, pc, r0
   331c0:	bl	13fc8 <memcmp@plt>
   331c4:	cmp	r0, #0
   331c8:	movw	r1, #64566	; 0xfc36
   331cc:	movt	r1, #65535	; 0xffff
   331d0:	movne	r1, #9
   331d4:	b	31c44 <__flatcc_fb_parse@@Base+0x14a4>
   331d8:	ldr	r0, [pc, #848]	; 33530 <__flatcc_fb_parse@@Base+0x2d90>
   331dc:	mov	r1, r5
   331e0:	mov	r2, #5
   331e4:	add	r0, pc, r0
   331e8:	bl	13fc8 <memcmp@plt>
   331ec:	cmp	r0, #0
   331f0:	movw	r1, #64550	; 0xfc26
   331f4:	movt	r1, #65535	; 0xffff
   331f8:	movne	r1, #9
   331fc:	b	31c44 <__flatcc_fb_parse@@Base+0x14a4>
   33200:	ldr	r0, [pc, #812]	; 33534 <__flatcc_fb_parse@@Base+0x2d94>
   33204:	mov	r1, r5
   33208:	mov	r2, #6
   3320c:	add	r0, pc, r0
   33210:	bl	13fc8 <memcmp@plt>
   33214:	cmp	r0, #0
   33218:	movw	r1, #64562	; 0xfc32
   3321c:	movt	r1, #65535	; 0xffff
   33220:	movne	r1, #9
   33224:	b	31c44 <__flatcc_fb_parse@@Base+0x14a4>
   33228:	ldr	r0, [pc, #776]	; 33538 <__flatcc_fb_parse@@Base+0x2d98>
   3322c:	mov	r1, r5
   33230:	mov	r2, #5
   33234:	add	r0, pc, r0
   33238:	bl	13fc8 <memcmp@plt>
   3323c:	cmp	r0, #0
   33240:	movne	r1, #9
   33244:	mvneq	r1, #976	; 0x3d0
   33248:	b	31c44 <__flatcc_fb_parse@@Base+0x14a4>
   3324c:	ldr	r0, [pc, #744]	; 3353c <__flatcc_fb_parse@@Base+0x2d9c>
   33250:	mov	r1, r5
   33254:	mov	r2, #14
   33258:	add	r0, pc, r0
   3325c:	bl	13fc8 <memcmp@plt>
   33260:	cmp	r0, #0
   33264:	movw	r1, #64570	; 0xfc3a
   33268:	movt	r1, #65535	; 0xffff
   3326c:	movne	r1, #9
   33270:	b	31c44 <__flatcc_fb_parse@@Base+0x14a4>
   33274:	ldr	r0, [pc, #708]	; 33540 <__flatcc_fb_parse@@Base+0x2da0>
   33278:	mov	r1, r5
   3327c:	mov	r2, #7
   33280:	add	r0, pc, r0
   33284:	bl	13fc8 <memcmp@plt>
   33288:	cmp	r0, #0
   3328c:	movw	r1, #64565	; 0xfc35
   33290:	movt	r1, #65535	; 0xffff
   33294:	movne	r1, #9
   33298:	b	31c44 <__flatcc_fb_parse@@Base+0x14a4>
   3329c:	ldr	r0, [pc, #672]	; 33544 <__flatcc_fb_parse@@Base+0x2da4>
   332a0:	mov	r1, r5
   332a4:	mov	r2, #15
   332a8:	add	r0, pc, r0
   332ac:	bl	13fc8 <memcmp@plt>
   332b0:	cmp	r0, #0
   332b4:	movne	r1, #9
   332b8:	mvneq	r1, #964	; 0x3c4
   332bc:	b	31c44 <__flatcc_fb_parse@@Base+0x14a4>
   332c0:	ldrb	r3, [r5]
   332c4:	cmp	r3, #105	; 0x69
   332c8:	bne	3229c <__flatcc_fb_parse@@Base+0x1afc>
   332cc:	ldrb	r3, [r2]
   332d0:	cmp	r3, #110	; 0x6e
   332d4:	bne	3229c <__flatcc_fb_parse@@Base+0x1afc>
   332d8:	ldrb	r3, [r2, #1]
   332dc:	cmp	r3, #116	; 0x74
   332e0:	movweq	r1, #64542	; 0xfc1e
   332e4:	movteq	r1, #65535	; 0xffff
   332e8:	bne	3229c <__flatcc_fb_parse@@Base+0x1afc>
   332ec:	b	31c44 <__flatcc_fb_parse@@Base+0x14a4>
   332f0:	ldrb	r3, [r5]
   332f4:	cmp	r3, #117	; 0x75
   332f8:	bne	3229c <__flatcc_fb_parse@@Base+0x1afc>
   332fc:	ldrb	r3, [r2]
   33300:	cmp	r3, #105	; 0x69
   33304:	bne	3229c <__flatcc_fb_parse@@Base+0x1afc>
   33308:	ldrb	r3, [r2, #1]
   3330c:	add	r2, r2, #1
   33310:	cmp	r3, #110	; 0x6e
   33314:	bne	3229c <__flatcc_fb_parse@@Base+0x1afc>
   33318:	ldrb	r3, [r2, #1]
   3331c:	cmp	r3, #116	; 0x74
   33320:	movweq	r1, #64549	; 0xfc25
   33324:	movteq	r1, #65535	; 0xffff
   33328:	bne	3229c <__flatcc_fb_parse@@Base+0x1afc>
   3332c:	b	31c44 <__flatcc_fb_parse@@Base+0x14a4>
   33330:	ldr	r0, [pc, #528]	; 33548 <__flatcc_fb_parse@@Base+0x2da8>
   33334:	mov	r1, r5
   33338:	mov	r2, #5
   3333c:	add	r0, pc, r0
   33340:	bl	13fc8 <memcmp@plt>
   33344:	cmp	r0, #0
   33348:	movw	r1, #64553	; 0xfc29
   3334c:	movt	r1, #65535	; 0xffff
   33350:	movne	r1, #9
   33354:	b	31c44 <__flatcc_fb_parse@@Base+0x14a4>
   33358:	ldr	r0, [pc, #492]	; 3354c <__flatcc_fb_parse@@Base+0x2dac>
   3335c:	mov	r1, r5
   33360:	mov	r2, #7
   33364:	add	r0, pc, r0
   33368:	bl	13fc8 <memcmp@plt>
   3336c:	cmp	r0, #0
   33370:	movw	r1, #64540	; 0xfc1c
   33374:	movt	r1, #65535	; 0xffff
   33378:	movne	r1, #9
   3337c:	b	31c44 <__flatcc_fb_parse@@Base+0x14a4>
   33380:	ldr	r0, [pc, #456]	; 33550 <__flatcc_fb_parse@@Base+0x2db0>
   33384:	mov	r1, r5
   33388:	mov	r2, #5
   3338c:	add	r0, pc, r0
   33390:	bl	13fc8 <memcmp@plt>
   33394:	cmp	r0, #0
   33398:	movw	r1, #64552	; 0xfc28
   3339c:	movt	r1, #65535	; 0xffff
   333a0:	movne	r1, #9
   333a4:	b	31c44 <__flatcc_fb_parse@@Base+0x14a4>
   333a8:	ldrb	r3, [r5]
   333ac:	cmp	r3, #98	; 0x62
   333b0:	bne	3229c <__flatcc_fb_parse@@Base+0x1afc>
   333b4:	ldrb	r3, [r2]
   333b8:	cmp	r3, #121	; 0x79
   333bc:	bne	3229c <__flatcc_fb_parse@@Base+0x1afc>
   333c0:	ldrb	r3, [r2, #1]
   333c4:	add	r2, r2, #1
   333c8:	cmp	r3, #116	; 0x74
   333cc:	bne	3229c <__flatcc_fb_parse@@Base+0x1afc>
   333d0:	ldrb	r3, [r2, #1]
   333d4:	cmp	r3, #101	; 0x65
   333d8:	movweq	r1, #64538	; 0xfc1a
   333dc:	movteq	r1, #65535	; 0xffff
   333e0:	bne	3229c <__flatcc_fb_parse@@Base+0x1afc>
   333e4:	b	31c44 <__flatcc_fb_parse@@Base+0x14a4>
   333e8:	ldr	r0, [pc, #356]	; 33554 <__flatcc_fb_parse@@Base+0x2db4>
   333ec:	mov	r1, r5
   333f0:	mov	r2, #5
   333f4:	add	r0, pc, r0
   333f8:	bl	13fc8 <memcmp@plt>
   333fc:	cmp	r0, #0
   33400:	movw	r1, #64545	; 0xfc21
   33404:	movt	r1, #65535	; 0xffff
   33408:	movne	r1, #9
   3340c:	b	31c44 <__flatcc_fb_parse@@Base+0x14a4>
   33410:	ldr	r0, [pc, #320]	; 33558 <__flatcc_fb_parse@@Base+0x2db8>
   33414:	mov	r1, r5
   33418:	mov	r2, #9
   3341c:	add	r0, pc, r0
   33420:	bl	13fc8 <memcmp@plt>
   33424:	cmp	r0, #0
   33428:	movne	r1, #9
   3342c:	mvneq	r1, #968	; 0x3c8
   33430:	b	31c44 <__flatcc_fb_parse@@Base+0x14a4>
   33434:	ldr	r0, [pc, #288]	; 3355c <__flatcc_fb_parse@@Base+0x2dbc>
   33438:	mov	r1, r5
   3343c:	mov	r2, #5
   33440:	add	r0, pc, r0
   33444:	bl	13fc8 <memcmp@plt>
   33448:	cmp	r0, #0
   3344c:	movw	r1, #64546	; 0xfc22
   33450:	movt	r1, #65535	; 0xffff
   33454:	movne	r1, #9
   33458:	b	31c44 <__flatcc_fb_parse@@Base+0x14a4>
   3345c:	ldr	r0, [pc, #252]	; 33560 <__flatcc_fb_parse@@Base+0x2dc0>
   33460:	mov	r1, r5
   33464:	mov	r2, #6
   33468:	add	r0, pc, r0
   3346c:	bl	13fc8 <memcmp@plt>
   33470:	cmp	r0, #0
   33474:	movw	r1, #64558	; 0xfc2e
   33478:	movt	r1, #65535	; 0xffff
   3347c:	movne	r1, #9
   33480:	b	31c44 <__flatcc_fb_parse@@Base+0x14a4>
   33484:	ldr	r0, [pc, #216]	; 33564 <__flatcc_fb_parse@@Base+0x2dc4>
   33488:	mov	r1, r5
   3348c:	mov	r2, #5
   33490:	add	r0, pc, r0
   33494:	bl	13fc8 <memcmp@plt>
   33498:	cmp	r0, #0
   3349c:	movne	r1, #9
   334a0:	mvneq	r1, #980	; 0x3d4
   334a4:	b	31c44 <__flatcc_fb_parse@@Base+0x14a4>
   334a8:	ldr	r0, [pc, #184]	; 33568 <__flatcc_fb_parse@@Base+0x2dc8>
   334ac:	mov	r1, r5
   334b0:	mov	r2, #11
   334b4:	add	r0, pc, r0
   334b8:	bl	13fc8 <memcmp@plt>
   334bc:	cmp	r0, #0
   334c0:	movw	r1, #64569	; 0xfc39
   334c4:	movt	r1, #65535	; 0xffff
   334c8:	movne	r1, #9
   334cc:	b	31c44 <__flatcc_fb_parse@@Base+0x14a4>
   334d0:	add	r3, r5, #4
   334d4:	mov	r2, r5
   334d8:	movw	r1, #15934	; 0x3e3e
   334dc:	movt	r1, #15678	; 0x3d3e
   334e0:	mov	r0, r4
   334e4:	mov	r5, r3
   334e8:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   334ec:	b	31a28 <__flatcc_fb_parse@@Base+0x1288>
   334f0:	add	r3, r5, #4
   334f4:	mov	r2, r5
   334f8:	movw	r1, #15420	; 0x3c3c
   334fc:	movt	r1, #15676	; 0x3d3c
   33500:	mov	r0, r4
   33504:	mov	r5, r3
   33508:	bl	2e7ec <__flatcc_fb_default_error_out@@Base+0x74>
   3350c:	b	31a28 <__flatcc_fb_parse@@Base+0x1288>
   33510:	bl	2e7a8 <__flatcc_fb_default_error_out@@Base+0x30>
   33514:	ldrb	r3, [r2]
   33518:	udf	#0
   3351c:	andeq	r6, r2, r4, lsl #19
   33520:	andeq	r6, r2, r8, lsl #22
   33524:	andeq	r6, r2, r4, ror #21
   33528:	andeq	r5, r2, r0, asr #19
   3352c:	andeq	r6, r2, r4
   33530:	muleq	r2, ip, pc	; <UNPREDICTABLE>
   33534:	andeq	r5, r2, r4, asr fp
   33538:	andeq	r5, r2, r4, asr pc
   3353c:	andeq	r5, r2, ip, lsl #31
   33540:	andeq	r5, r2, r8, lsr pc
   33544:	andeq	r5, r2, ip, asr #30
   33548:	andeq	r7, r2, r8, asr #21
   3354c:	andeq	r5, r2, r4, asr #28
   33550:	andeq	r5, r2, ip, lsl #28
   33554:	andeq	lr, r0, r4, ror #21
   33558:	andeq	lr, r0, r4, lsr #32
   3355c:	andeq	lr, r0, r8, lsl #21
   33560:	andeq	lr, r0, r8, lsl #20
   33564:	andeq	lr, r0, r8, lsr #20
   33568:	andeq	r5, r2, r4, lsr #26

0003356c <__flatcc_fb_clear_parser@@Base>:
   3356c:	strd	r4, [sp, #-16]!
   33570:	mov	r5, r0
   33574:	ldr	r4, [r0, #392]	; 0x188
   33578:	str	r6, [sp, #8]
   3357c:	str	lr, [sp, #12]
   33580:	cmp	r4, #0
   33584:	bne	33598 <__flatcc_fb_clear_parser@@Base+0x2c>
   33588:	b	335c0 <__flatcc_fb_clear_parser@@Base+0x54>
   3358c:	ldr	r4, [r4]
   33590:	cmp	r4, #0
   33594:	beq	335c0 <__flatcc_fb_clear_parser@@Base+0x54>
   33598:	ldrh	r3, [r4, #8]
   3359c:	cmp	r3, #4
   335a0:	bhi	3358c <__flatcc_fb_clear_parser@@Base+0x20>
   335a4:	add	r0, r4, #56	; 0x38
   335a8:	bl	2c6a0 <fb_symbol_table_clear@@Base>
   335ac:	add	r0, r4, #72	; 0x48
   335b0:	bl	3f6d8 <fb_value_set_clear@@Base>
   335b4:	ldr	r4, [r4]
   335b8:	cmp	r4, #0
   335bc:	bne	33598 <__flatcc_fb_clear_parser@@Base+0x2c>
   335c0:	add	r0, r5, #448	; 0x1c0
   335c4:	bl	2dec0 <fb_schema_table_clear@@Base>
   335c8:	add	r0, r5, #432	; 0x1b0
   335cc:	bl	3eed8 <fb_name_table_clear@@Base>
   335d0:	add	r0, r5, #524	; 0x20c
   335d4:	bl	2bf24 <ptr_set_clear@@Base>
   335d8:	ldr	r0, [r5, #112]	; 0x70
   335dc:	cmp	r0, #0
   335e0:	beq	335e8 <__flatcc_fb_clear_parser@@Base+0x7c>
   335e4:	bl	13fa4 <free@plt>
   335e8:	ldr	r0, [r5, #20]
   335ec:	cmp	r0, #0
   335f0:	beq	335f8 <__flatcc_fb_clear_parser@@Base+0x8c>
   335f4:	bl	13fa4 <free@plt>
   335f8:	ldr	r0, [r5, #512]	; 0x200
   335fc:	cmp	r0, #0
   33600:	beq	33608 <__flatcc_fb_clear_parser@@Base+0x9c>
   33604:	bl	13fa4 <free@plt>
   33608:	ldr	r0, [r5, #516]	; 0x204
   3360c:	cmp	r0, #0
   33610:	beq	33618 <__flatcc_fb_clear_parser@@Base+0xac>
   33614:	bl	13fa4 <free@plt>
   33618:	ldr	r0, [r5, #520]	; 0x208
   3361c:	cmp	r0, #0
   33620:	beq	33628 <__flatcc_fb_clear_parser@@Base+0xbc>
   33624:	bl	13fa4 <free@plt>
   33628:	ldr	r0, [r5, #548]	; 0x224
   3362c:	cmp	r0, #0
   33630:	beq	33638 <__flatcc_fb_clear_parser@@Base+0xcc>
   33634:	bl	13fa4 <free@plt>
   33638:	ldr	r1, [pc, #88]	; 33698 <__flatcc_fb_clear_parser@@Base+0x12c>
   3363c:	add	r0, r5, #416	; 0x1a0
   33640:	mov	r2, #0
   33644:	add	r1, pc, r1
   33648:	bl	2d730 <fb_scope_table_destroy@@Base>
   3364c:	ldr	r0, [r5, #48]	; 0x30
   33650:	cmp	r0, #0
   33654:	beq	33668 <__flatcc_fb_clear_parser@@Base+0xfc>
   33658:	ldr	r4, [r0]
   3365c:	bl	13fa4 <free@plt>
   33660:	subs	r0, r4, #0
   33664:	bne	33658 <__flatcc_fb_clear_parser@@Base+0xec>
   33668:	ldr	r0, [r5, #16]
   3366c:	cmp	r0, #0
   33670:	beq	33678 <__flatcc_fb_clear_parser@@Base+0x10c>
   33674:	bl	13fa4 <free@plt>
   33678:	mov	r0, r5
   3367c:	mov	r2, #560	; 0x230
   33680:	ldrd	r4, [sp]
   33684:	mov	r1, #0
   33688:	ldr	r6, [sp, #8]
   3368c:	ldr	lr, [sp, #12]
   33690:	add	sp, sp, #16
   33694:	b	1407c <memset@plt>
   33698:			; <UNDEFINED> instruction: 0xffffb154
   3369c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   336a0:	strd	r6, [sp, #8]
   336a4:	ldrh	r6, [r1, #8]
   336a8:	strd	r8, [sp, #16]
   336ac:	strd	sl, [sp, #24]
   336b0:	str	lr, [sp, #32]
   336b4:	sub	sp, sp, #44	; 0x2c
   336b8:	cmp	r6, #1
   336bc:	bne	33bac <__flatcc_fb_clear_parser@@Base+0x640>
   336c0:	ldrh	r3, [r1, #10]
   336c4:	mov	r7, r0
   336c8:	mov	r5, r1
   336cc:	ands	r0, r3, #1
   336d0:	bne	33bcc <__flatcc_fb_clear_parser@@Base+0x660>
   336d4:	tst	r3, #2
   336d8:	bne	3375c <__flatcc_fb_clear_parser@@Base+0x1f0>
   336dc:	ldr	r2, [r1, #120]	; 0x78
   336e0:	cmp	r2, #0
   336e4:	bne	33bec <__flatcc_fb_clear_parser@@Base+0x680>
   336e8:	ldr	r4, [r1, #20]
   336ec:	orr	r3, r3, #1
   336f0:	strh	r3, [r1, #10]
   336f4:	cmp	r4, #0
   336f8:	beq	33a28 <__flatcc_fb_clear_parser@@Base+0x4bc>
   336fc:	ldr	r2, [r7, #116]	; 0x74
   33700:	cmp	r2, #99	; 0x63
   33704:	bgt	33960 <__flatcc_fb_clear_parser@@Base+0x3f4>
   33708:	ldr	sl, [pc, #1292]	; 33c1c <__flatcc_fb_clear_parser@@Base+0x6b0>
   3370c:	ldr	fp, [pc, #1292]	; 33c20 <__flatcc_fb_clear_parser@@Base+0x6b4>
   33710:	add	sl, pc, sl
   33714:	add	fp, pc, fp
   33718:	ldrh	r3, [r4, #24]
   3371c:	cmp	r3, #8
   33720:	beq	337f4 <__flatcc_fb_clear_parser@@Base+0x288>
   33724:	cmp	r3, #14
   33728:	beq	33780 <__flatcc_fb_clear_parser@@Base+0x214>
   3372c:	cmp	r3, #1
   33730:	beq	33778 <__flatcc_fb_clear_parser@@Base+0x20c>
   33734:	ldr	r2, [pc, #1256]	; 33c24 <__flatcc_fb_clear_parser@@Base+0x6b8>
   33738:	mov	ip, #0
   3373c:	mov	r0, r7
   33740:	mov	r3, ip
   33744:	ldr	r1, [r4, #4]
   33748:	str	ip, [sp]
   3374c:	str	ip, [sp, #4]
   33750:	add	r2, pc, r2
   33754:	bl	2ebf8 <__flatcc_error_report@@Base>
   33758:	mvn	r0, #0
   3375c:	add	sp, sp, #44	; 0x2c
   33760:	ldrd	r4, [sp]
   33764:	ldrd	r6, [sp, #8]
   33768:	ldrd	r8, [sp, #16]
   3376c:	ldrd	sl, [sp, #24]
   33770:	add	sp, sp, #32
   33774:	pop	{pc}		; (ldr pc, [sp], #4)
   33778:	mvn	r0, #0
   3377c:	b	3375c <__flatcc_fb_clear_parser@@Base+0x1f0>
   33780:	ldr	r8, [r4, #16]
   33784:	ldrh	r3, [r8, #8]
   33788:	cmp	r3, #3
   3378c:	beq	339b8 <__flatcc_fb_clear_parser@@Base+0x44c>
   33790:	cmp	r3, #1
   33794:	bne	33b80 <__flatcc_fb_clear_parser@@Base+0x614>
   33798:	ldrh	r3, [r8, #10]
   3379c:	tst	r3, #1
   337a0:	bne	33b54 <__flatcc_fb_clear_parser@@Base+0x5e8>
   337a4:	ands	ip, r3, #2
   337a8:	bne	337e0 <__flatcc_fb_clear_parser@@Base+0x274>
   337ac:	ldr	r3, [r7, #188]	; 0xbc
   337b0:	cmp	r3, #0
   337b4:	bne	33a04 <__flatcc_fb_clear_parser@@Base+0x498>
   337b8:	add	r2, r2, #1
   337bc:	mov	r1, r8
   337c0:	mov	r0, r7
   337c4:	str	r2, [r7, #116]	; 0x74
   337c8:	bl	3369c <__flatcc_fb_clear_parser@@Base+0x130>
   337cc:	ldr	r3, [r7, #116]	; 0x74
   337d0:	cmp	r0, #0
   337d4:	sub	r3, r3, #1
   337d8:	str	r3, [r7, #116]	; 0x74
   337dc:	bne	3375c <__flatcc_fb_clear_parser@@Base+0x1f0>
   337e0:	ldrh	ip, [r8, #104]	; 0x68
   337e4:	ldrd	r2, [r8, #112]	; 0x70
   337e8:	strh	ip, [r4, #74]	; 0x4a
   337ec:	strd	r2, [r4, #88]	; 0x58
   337f0:	b	3383c <__flatcc_fb_clear_parser@@Base+0x2d0>
   337f4:	ldr	r3, [r4, #16]
   337f8:	ldr	r2, [r3, #16]
   337fc:	add	r2, r2, #996	; 0x3e4
   33800:	add	r2, r2, #3
   33804:	cmp	r2, #27
   33808:	bhi	339d4 <__flatcc_fb_clear_parser@@Base+0x468>
   3380c:	add	r2, sl, r2, lsl #2
   33810:	mov	r1, #0
   33814:	ldr	r2, [r2, #16]
   33818:	add	r0, sl, r2, lsl #2
   3381c:	str	r2, [r4, #16]
   33820:	ldr	r2, [r0, #128]	; 0x80
   33824:	cmp	r2, r1
   33828:	beq	339dc <__flatcc_fb_clear_parser@@Base+0x470>
   3382c:	uxth	ip, r2
   33830:	strh	ip, [r4, #74]	; 0x4a
   33834:	str	r2, [r4, #88]	; 0x58
   33838:	str	r1, [r4, #92]	; 0x5c
   3383c:	uxth	r0, ip
   33840:	mov	r1, #0
   33844:	subs	r3, r0, #1
   33848:	str	r3, [sp, #8]
   3384c:	sbc	r3, r1, #0
   33850:	str	r3, [sp, #12]
   33854:	ldrd	r2, [sp, #8]
   33858:	cmp	r3, #0
   3385c:	cmpeq	r2, #255	; 0xff
   33860:	bhi	33898 <__flatcc_fb_clear_parser@@Base+0x32c>
   33864:	cmp	r1, #0
   33868:	cmpeq	r0, #1
   3386c:	beq	338bc <__flatcc_fb_clear_parser@@Base+0x350>
   33870:	mov	r2, #2
   33874:	mov	r3, #0
   33878:	cmp	r1, r3
   3387c:	cmpeq	r0, r2
   33880:	beq	338bc <__flatcc_fb_clear_parser@@Base+0x350>
   33884:	adds	r2, r2, r2
   33888:	adc	r3, r3, r3
   3388c:	cmp	r1, r3
   33890:	cmpeq	r0, r2
   33894:	bcs	33878 <__flatcc_fb_clear_parser@@Base+0x30c>
   33898:	ldr	r3, [pc, #904]	; 33c28 <__flatcc_fb_clear_parser@@Base+0x6bc>
   3389c:	mov	r2, #108	; 0x6c
   338a0:	ldr	r1, [pc, #900]	; 33c2c <__flatcc_fb_clear_parser@@Base+0x6c0>
   338a4:	ldr	r0, [pc, #900]	; 33c30 <__flatcc_fb_clear_parser@@Base+0x6c4>
   338a8:	add	r3, pc, r3
   338ac:	add	r3, r3, #176	; 0xb0
   338b0:	add	r1, pc, r1
   338b4:	add	r0, pc, r0
   338b8:	bl	14118 <__assert_fail@plt>
   338bc:	ldrd	r2, [r5, #112]	; 0x70
   338c0:	subs	lr, r2, #1
   338c4:	sbc	r8, r3, #0
   338c8:	adds	lr, lr, r0
   338cc:	adc	r8, r8, r1
   338d0:	rsbs	r0, r0, #0
   338d4:	rsc	r1, r1, #0
   338d8:	and	lr, lr, r0
   338dc:	and	r1, r8, r1
   338e0:	str	lr, [sp, #16]
   338e4:	str	r1, [sp, #20]
   338e8:	ldrd	r0, [sp, #16]
   338ec:	cmp	r3, r1
   338f0:	strd	r0, [r4, #80]	; 0x50
   338f4:	cmpeq	r2, r0
   338f8:	bhi	33af8 <__flatcc_fb_clear_parser@@Base+0x58c>
   338fc:	mov	r0, #0
   33900:	mov	r1, #0
   33904:	ldrd	r2, [r4, #88]	; 0x58
   33908:	strd	r0, [sp, #24]
   3390c:	ldrd	r0, [sp, #16]
   33910:	adds	r8, r2, r0
   33914:	adcs	r9, r3, r1
   33918:	bcs	33c0c <__flatcc_fb_clear_parser@@Base+0x6a0>
   3391c:	ldrd	r2, [sp, #24]
   33920:	orrs	r3, r2, r3
   33924:	bne	33af8 <__flatcc_fb_clear_parser@@Base+0x58c>
   33928:	mov	r3, #0
   3392c:	movw	r2, #65535	; 0xffff
   33930:	cmp	r9, r3
   33934:	cmpeq	r8, r2
   33938:	bhi	3398c <__flatcc_fb_clear_parser@@Base+0x420>
   3393c:	ldr	r4, [r4]
   33940:	cmp	r6, ip
   33944:	movcc	r6, ip
   33948:	strd	r8, [r5, #112]	; 0x70
   3394c:	cmp	r4, #0
   33950:	beq	33a28 <__flatcc_fb_clear_parser@@Base+0x4bc>
   33954:	ldr	r2, [r7, #116]	; 0x74
   33958:	cmp	r2, #99	; 0x63
   3395c:	ble	33718 <__flatcc_fb_clear_parser@@Base+0x1ac>
   33960:	ldr	r2, [pc, #716]	; 33c34 <__flatcc_fb_clear_parser@@Base+0x6c8>
   33964:	mov	ip, #0
   33968:	mov	r0, r7
   3396c:	mov	r3, ip
   33970:	mov	r1, ip
   33974:	str	ip, [sp]
   33978:	str	ip, [sp, #4]
   3397c:	add	r2, pc, r2
   33980:	bl	2ebf8 <__flatcc_error_report@@Base>
   33984:	mvn	r0, #0
   33988:	b	3375c <__flatcc_fb_clear_parser@@Base+0x1f0>
   3398c:	mov	r2, #0
   33990:	ldr	r1, [r4, #4]
   33994:	mov	r0, r7
   33998:	mov	r3, r2
   3399c:	str	r2, [sp]
   339a0:	str	r2, [sp, #4]
   339a4:	ldr	r2, [pc, #652]	; 33c38 <__flatcc_fb_clear_parser@@Base+0x6cc>
   339a8:	add	r2, pc, r2
   339ac:	bl	2ebf8 <__flatcc_error_report@@Base>
   339b0:	ldrh	ip, [r4, #74]	; 0x4a
   339b4:	b	3393c <__flatcc_fb_clear_parser@@Base+0x3d0>
   339b8:	ldr	r3, [r8, #112]	; 0x70
   339bc:	ldr	r2, [r8, #116]	; 0x74
   339c0:	uxth	ip, r3
   339c4:	strh	ip, [r4, #74]	; 0x4a
   339c8:	str	r3, [r4, #88]	; 0x58
   339cc:	str	r2, [r4, #92]	; 0x5c
   339d0:	b	3383c <__flatcc_fb_clear_parser@@Base+0x2d0>
   339d4:	mov	r2, #0
   339d8:	str	r2, [r4, #16]
   339dc:	ldr	r2, [pc, #600]	; 33c3c <__flatcc_fb_clear_parser@@Base+0x6d0>
   339e0:	mov	ip, #0
   339e4:	mov	r0, r7
   339e8:	ldr	r1, [r4, #4]
   339ec:	str	ip, [sp]
   339f0:	str	ip, [sp, #4]
   339f4:	add	r2, pc, r2
   339f8:	bl	2ebf8 <__flatcc_error_report@@Base>
   339fc:	mvn	r0, #0
   33a00:	b	3375c <__flatcc_fb_clear_parser@@Base+0x1f0>
   33a04:	mov	r2, fp
   33a08:	mov	r0, r7
   33a0c:	ldr	r1, [r4, #4]
   33a10:	ldr	r3, [r8, #4]
   33a14:	str	ip, [sp]
   33a18:	str	ip, [sp, #4]
   33a1c:	bl	2ebf8 <__flatcc_error_report@@Base>
   33a20:	ldr	r2, [r7, #116]	; 0x74
   33a24:	b	337b8 <__flatcc_fb_clear_parser@@Base+0x24c>
   33a28:	ldrh	r2, [r5, #104]	; 0x68
   33a2c:	cmp	r2, #0
   33a30:	moveq	r2, r6
   33a34:	strheq	r6, [r5, #104]	; 0x68
   33a38:	beq	33a44 <__flatcc_fb_clear_parser@@Base+0x4d8>
   33a3c:	cmp	r2, r6
   33a40:	bcc	33b24 <__flatcc_fb_clear_parser@@Base+0x5b8>
   33a44:	uxth	r2, r2
   33a48:	mov	r3, #0
   33a4c:	subs	r1, r2, #1
   33a50:	str	r1, [sp, #32]
   33a54:	sbc	r1, r3, #0
   33a58:	str	r1, [sp, #36]	; 0x24
   33a5c:	ldrd	r0, [sp, #32]
   33a60:	cmp	r1, #0
   33a64:	cmpeq	r0, #255	; 0xff
   33a68:	bhi	33898 <__flatcc_fb_clear_parser@@Base+0x32c>
   33a6c:	cmp	r3, #0
   33a70:	cmpeq	r2, #1
   33a74:	beq	33aa4 <__flatcc_fb_clear_parser@@Base+0x538>
   33a78:	mov	r0, #2
   33a7c:	mov	r1, #0
   33a80:	cmp	r3, r1
   33a84:	cmpeq	r2, r0
   33a88:	beq	33aa4 <__flatcc_fb_clear_parser@@Base+0x538>
   33a8c:	adds	r0, r0, r0
   33a90:	adc	r1, r1, r1
   33a94:	cmp	r3, r1
   33a98:	cmpeq	r2, r0
   33a9c:	bcs	33a80 <__flatcc_fb_clear_parser@@Base+0x514>
   33aa0:	b	33898 <__flatcc_fb_clear_parser@@Base+0x32c>
   33aa4:	ldr	r1, [r5, #112]	; 0x70
   33aa8:	mov	r0, #0
   33aac:	ldr	ip, [r5, #116]	; 0x74
   33ab0:	ldrh	r4, [r5, #10]
   33ab4:	subs	r1, r1, #1
   33ab8:	ldr	lr, [r7, #396]	; 0x18c
   33abc:	sbc	ip, ip, #0
   33ac0:	adds	r1, r1, r2
   33ac4:	adc	ip, ip, r3
   33ac8:	rsbs	r2, r2, #0
   33acc:	rsc	r3, r3, #0
   33ad0:	bic	r4, r4, #1
   33ad4:	and	ip, ip, r3
   33ad8:	and	r3, r1, r2
   33adc:	orr	r2, r4, #2
   33ae0:	strh	r2, [r5, #10]
   33ae4:	str	r3, [r5, #112]	; 0x70
   33ae8:	str	ip, [r5, #116]	; 0x74
   33aec:	str	lr, [r5, #120]	; 0x78
   33af0:	str	r5, [r7, #396]	; 0x18c
   33af4:	b	3375c <__flatcc_fb_clear_parser@@Base+0x1f0>
   33af8:	ldr	r2, [pc, #320]	; 33c40 <__flatcc_fb_clear_parser@@Base+0x6d4>
   33afc:	mov	ip, #0
   33b00:	mov	r0, r7
   33b04:	mov	r3, ip
   33b08:	ldr	r1, [r4, #4]
   33b0c:	str	ip, [sp]
   33b10:	str	ip, [sp, #4]
   33b14:	add	r2, pc, r2
   33b18:	bl	2ebf8 <__flatcc_error_report@@Base>
   33b1c:	mvn	r0, #0
   33b20:	b	3375c <__flatcc_fb_clear_parser@@Base+0x1f0>
   33b24:	ldr	r2, [pc, #280]	; 33c44 <__flatcc_fb_clear_parser@@Base+0x6d8>
   33b28:	mov	r1, #0
   33b2c:	mov	r0, r7
   33b30:	mov	r3, r1
   33b34:	str	r1, [sp]
   33b38:	str	r1, [sp, #4]
   33b3c:	ldr	r1, [r5, #4]
   33b40:	add	r2, pc, r2
   33b44:	bl	2ebf8 <__flatcc_error_report@@Base>
   33b48:	mov	r2, r6
   33b4c:	strh	r6, [r5, #104]	; 0x68
   33b50:	b	33a44 <__flatcc_fb_clear_parser@@Base+0x4d8>
   33b54:	ldr	r2, [pc, #236]	; 33c48 <__flatcc_fb_clear_parser@@Base+0x6dc>
   33b58:	mov	ip, #0
   33b5c:	mov	r0, r7
   33b60:	ldr	r1, [r4, #4]
   33b64:	ldr	r3, [r8, #4]
   33b68:	add	r2, pc, r2
   33b6c:	str	ip, [sp]
   33b70:	str	ip, [sp, #4]
   33b74:	bl	2ebf8 <__flatcc_error_report@@Base>
   33b78:	mvn	r0, #0
   33b7c:	b	3375c <__flatcc_fb_clear_parser@@Base+0x1f0>
   33b80:	ldr	r2, [pc, #196]	; 33c4c <__flatcc_fb_clear_parser@@Base+0x6e0>
   33b84:	mov	ip, #0
   33b88:	mov	r0, r7
   33b8c:	mov	r3, ip
   33b90:	ldr	r1, [r4, #4]
   33b94:	str	ip, [sp]
   33b98:	str	ip, [sp, #4]
   33b9c:	add	r2, pc, r2
   33ba0:	bl	2ebf8 <__flatcc_error_report@@Base>
   33ba4:	mvn	r0, #0
   33ba8:	b	3375c <__flatcc_fb_clear_parser@@Base+0x1f0>
   33bac:	ldr	r3, [pc, #156]	; 33c50 <__flatcc_fb_clear_parser@@Base+0x6e4>
   33bb0:	movw	r2, #502	; 0x1f6
   33bb4:	ldr	r1, [pc, #152]	; 33c54 <__flatcc_fb_clear_parser@@Base+0x6e8>
   33bb8:	ldr	r0, [pc, #152]	; 33c58 <__flatcc_fb_clear_parser@@Base+0x6ec>
   33bbc:	add	r3, pc, r3
   33bc0:	add	r1, pc, r1
   33bc4:	add	r0, pc, r0
   33bc8:	bl	14118 <__assert_fail@plt>
   33bcc:	ldr	r3, [pc, #136]	; 33c5c <__flatcc_fb_clear_parser@@Base+0x6f0>
   33bd0:	mov	r2, #504	; 0x1f8
   33bd4:	ldr	r1, [pc, #132]	; 33c60 <__flatcc_fb_clear_parser@@Base+0x6f4>
   33bd8:	ldr	r0, [pc, #132]	; 33c64 <__flatcc_fb_clear_parser@@Base+0x6f8>
   33bdc:	add	r3, pc, r3
   33be0:	add	r1, pc, r1
   33be4:	add	r0, pc, r0
   33be8:	bl	14118 <__assert_fail@plt>
   33bec:	ldr	r3, [pc, #116]	; 33c68 <__flatcc_fb_clear_parser@@Base+0x6fc>
   33bf0:	mov	r2, #508	; 0x1fc
   33bf4:	ldr	r1, [pc, #112]	; 33c6c <__flatcc_fb_clear_parser@@Base+0x700>
   33bf8:	ldr	r0, [pc, #112]	; 33c70 <__flatcc_fb_clear_parser@@Base+0x704>
   33bfc:	add	r3, pc, r3
   33c00:	add	r1, pc, r1
   33c04:	add	r0, pc, r0
   33c08:	bl	14118 <__assert_fail@plt>
   33c0c:	mov	r2, #1
   33c10:	mov	r3, #0
   33c14:	strd	r2, [sp, #24]
   33c18:	b	3391c <__flatcc_fb_clear_parser@@Base+0x3b0>
   33c1c:	andeq	r6, r2, r4, lsr #32
   33c20:	muleq	r2, r4, r2
   33c24:	andeq	r6, r2, r8, lsr #4
   33c28:	andeq	r5, r2, ip, lsl #29
   33c2c:	andeq	r5, r2, r8, ror #31
   33c30:	andeq	r6, r2, r0, ror #2
   33c34:			; <UNDEFINED> instruction: 0x00025fb0
   33c38:	muleq	r2, ip, r0
   33c3c:	andeq	r5, r2, r4, lsl #31
   33c40:	andeq	r5, r2, r8, lsl pc
   33c44:	andeq	r5, r2, r8, lsr pc
   33c48:	andeq	r5, r2, r0, lsr #28
   33c4c:	andeq	r5, r2, r4, asr lr
   33c50:	andeq	r5, r2, r8, ror fp
   33c54:	ldrdeq	r5, [r2], -r8
   33c58:	andeq	pc, r0, r4, ror r0	; <UNPREDICTABLE>
   33c5c:	andeq	r5, r2, r8, asr fp
   33c60:			; <UNDEFINED> instruction: 0x00025cb8
   33c64:	andeq	r5, r2, r4, lsl sp
   33c68:	andeq	r5, r2, r8, lsr fp
   33c6c:	muleq	r2, r8, ip
   33c70:	andeq	r5, r2, ip, lsl sp
   33c74:	ldrh	r3, [r1, #8]
   33c78:	strd	r4, [sp, #-36]!	; 0xffffffdc
   33c7c:	strd	r6, [sp, #8]
   33c80:	mov	r6, r0
   33c84:	strd	r8, [sp, #16]
   33c88:	mov	r9, r1
   33c8c:	strd	sl, [sp, #24]
   33c90:	str	lr, [sp, #32]
   33c94:	sub	sp, sp, #132	; 0x84
   33c98:	cmp	r3, #4
   33c9c:	str	r3, [sp, #8]
   33ca0:	beq	345b4 <__flatcc_fb_clear_parser@@Base+0x1048>
   33ca4:	cmp	r3, #3
   33ca8:	bne	349ac <__flatcc_fb_clear_parser@@Base+0x1440>
   33cac:	ldrh	r2, [r1, #48]	; 0x30
   33cb0:	cmp	r2, #0
   33cb4:	beq	3495c <__flatcc_fb_clear_parser@@Base+0x13f0>
   33cb8:	cmp	r2, #8
   33cbc:	bne	34928 <__flatcc_fb_clear_parser@@Base+0x13bc>
   33cc0:	ldr	r3, [r1, #40]	; 0x28
   33cc4:	ldr	r3, [r3, #16]
   33cc8:	add	r3, r3, #996	; 0x3e4
   33ccc:	add	r3, r3, #3
   33cd0:	cmp	r3, #27
   33cd4:	bhi	33e24 <__flatcc_fb_clear_parser@@Base+0x8b8>
   33cd8:	ldr	r2, [pc, #3312]	; 349d0 <__flatcc_fb_clear_parser@@Base+0x1464>
   33cdc:	mov	r0, #0
   33ce0:	add	r2, pc, r2
   33ce4:	add	r3, r2, r3, lsl #2
   33ce8:	ldr	r1, [r3, #16]
   33cec:	add	r2, r2, r1, lsl #2
   33cf0:	ldr	r2, [r2, #128]	; 0x80
   33cf4:	uxth	r3, r2
   33cf8:	str	r1, [r9, #40]	; 0x28
   33cfc:	strh	r3, [r9, #104]	; 0x68
   33d00:	str	r2, [r9, #112]	; 0x70
   33d04:	str	r0, [r9, #116]	; 0x74
   33d08:	ldr	r4, [r9, #28]
   33d0c:	mov	r2, #0
   33d10:	mov	r3, #0
   33d14:	add	r8, sp, #80	; 0x50
   33d18:	strd	r2, [sp, #80]	; 0x50
   33d1c:	strd	r2, [r8, #8]
   33d20:	strd	r2, [r8, #16]
   33d24:	cmp	r4, #0
   33d28:	strd	r2, [r8, #24]
   33d2c:	strd	r2, [r8, #32]
   33d30:	strheq	r4, [r9, #92]	; 0x5c
   33d34:	streq	r4, [sp, #20]
   33d38:	strd	r2, [r8, #40]	; 0x28
   33d3c:	beq	33f00 <__flatcc_fb_clear_parser@@Base+0x994>
   33d40:	ldr	r3, [pc, #3212]	; 349d4 <__flatcc_fb_clear_parser@@Base+0x1468>
   33d44:	mov	r7, #100	; 0x64
   33d48:	mov	r5, #0
   33d4c:	ldr	fp, [pc, #3204]	; 349d8 <__flatcc_fb_clear_parser@@Base+0x146c>
   33d50:	ldr	sl, [pc, #3204]	; 349dc <__flatcc_fb_clear_parser@@Base+0x1470>
   33d54:	add	r3, pc, r3
   33d58:	add	fp, pc, fp
   33d5c:	str	r3, [sp, #12]
   33d60:	add	sl, pc, sl
   33d64:	b	33da8 <__flatcc_fb_clear_parser@@Base+0x83c>
   33d68:	add	r1, fp, r1
   33d6c:	str	r4, [r8, r2, lsl #2]
   33d70:	ldr	r2, [r1, #204]	; 0xcc
   33d74:	cmp	r2, #0
   33d78:	bne	33e38 <__flatcc_fb_clear_parser@@Base+0x8cc>
   33d7c:	ldrh	r3, [r4, #16]
   33d80:	cmp	r3, #0
   33d84:	bne	345e8 <__flatcc_fb_clear_parser@@Base+0x107c>
   33d88:	ldr	r4, [r4]
   33d8c:	subs	r7, r7, #1
   33d90:	movne	r2, #1
   33d94:	moveq	r2, #0
   33d98:	cmp	r4, #0
   33d9c:	moveq	r2, #0
   33da0:	cmp	r2, #0
   33da4:	beq	33eb0 <__flatcc_fb_clear_parser@@Base+0x944>
   33da8:	ldr	r3, [r4, #4]
   33dac:	ldr	r0, [r6, #412]	; 0x19c
   33db0:	ldm	r3, {r1, r2}
   33db4:	add	r0, r0, #16
   33db8:	bl	3f00c <fb_name_table_find@@Base>
   33dbc:	subs	r2, r0, #0
   33dc0:	beq	342f0 <__flatcc_fb_clear_parser@@Base+0xd84>
   33dc4:	ldr	r2, [r2, #24]
   33dc8:	cmp	r2, #0
   33dcc:	beq	33d88 <__flatcc_fb_clear_parser@@Base+0x81c>
   33dd0:	mov	r3, #32
   33dd4:	asr	r3, r3, r2
   33dd8:	ands	ip, r3, #1
   33ddc:	beq	342cc <__flatcc_fb_clear_parser@@Base+0xd60>
   33de0:	ldr	ip, [r8, r2, lsl #2]
   33de4:	mov	r3, #1
   33de8:	lsl	r1, r2, #2
   33dec:	orr	r5, r5, r3, lsl r2
   33df0:	uxth	r5, r5
   33df4:	cmp	ip, #0
   33df8:	beq	33d68 <__flatcc_fb_clear_parser@@Base+0x7fc>
   33dfc:	mov	r2, #0
   33e00:	ldr	r1, [r4, #4]
   33e04:	mov	r0, r6
   33e08:	mov	r3, r2
   33e0c:	str	r2, [sp]
   33e10:	str	r2, [sp, #4]
   33e14:	ldr	r2, [pc, #3012]	; 349e0 <__flatcc_fb_clear_parser@@Base+0x1474>
   33e18:	add	r2, pc, r2
   33e1c:	bl	2ebf8 <__flatcc_error_report@@Base>
   33e20:	b	33d88 <__flatcc_fb_clear_parser@@Base+0x81c>
   33e24:	mov	r3, #0
   33e28:	mov	r2, r3
   33e2c:	mov	r0, r3
   33e30:	mov	r1, r3
   33e34:	b	33cf8 <__flatcc_fb_clear_parser@@Base+0x78c>
   33e38:	cmp	r2, #2
   33e3c:	bne	33e70 <__flatcc_fb_clear_parser@@Base+0x904>
   33e40:	ldrh	r3, [r4, #16]
   33e44:	cmp	r3, #2
   33e48:	beq	33d88 <__flatcc_fb_clear_parser@@Base+0x81c>
   33e4c:	ldr	r2, [pc, #2960]	; 349e4 <__flatcc_fb_clear_parser@@Base+0x1478>
   33e50:	mov	r3, ip
   33e54:	mov	r0, r6
   33e58:	ldr	r1, [r4, #4]
   33e5c:	str	ip, [sp]
   33e60:	str	ip, [sp, #4]
   33e64:	add	r2, pc, r2
   33e68:	bl	2ebf8 <__flatcc_error_report@@Base>
   33e6c:	b	33d88 <__flatcc_fb_clear_parser@@Base+0x81c>
   33e70:	cmp	r2, #5
   33e74:	beq	343c0 <__flatcc_fb_clear_parser@@Base+0xe54>
   33e78:	cmp	r2, #4
   33e7c:	bne	343f0 <__flatcc_fb_clear_parser@@Base+0xe84>
   33e80:	ldrh	r3, [r4, #16]
   33e84:	sub	r3, r3, #4
   33e88:	cmp	r3, #1
   33e8c:	bls	33d88 <__flatcc_fb_clear_parser@@Base+0x81c>
   33e90:	mov	r3, ip
   33e94:	mov	r0, r6
   33e98:	ldr	r1, [r4, #4]
   33e9c:	str	ip, [sp]
   33ea0:	str	ip, [sp, #4]
   33ea4:	ldr	r2, [sp, #12]
   33ea8:	bl	2ebf8 <__flatcc_error_report@@Base>
   33eac:	b	33d88 <__flatcc_fb_clear_parser@@Base+0x81c>
   33eb0:	cmp	r4, #0
   33eb4:	and	r7, r5, #32
   33eb8:	beq	33edc <__flatcc_fb_clear_parser@@Base+0x970>
   33ebc:	mov	r3, r2
   33ec0:	ldr	r1, [r4, #4]
   33ec4:	mov	r0, r6
   33ec8:	str	r2, [sp]
   33ecc:	str	r2, [sp, #4]
   33ed0:	ldr	r2, [pc, #2832]	; 349e8 <__flatcc_fb_clear_parser@@Base+0x147c>
   33ed4:	add	r2, pc, r2
   33ed8:	bl	2ebf8 <__flatcc_error_report@@Base>
   33edc:	cmp	r7, #0
   33ee0:	strh	r5, [r9, #92]	; 0x5c
   33ee4:	streq	r7, [sp, #20]
   33ee8:	beq	33f00 <__flatcc_fb_clear_parser@@Base+0x994>
   33eec:	mov	r2, #0
   33ef0:	mov	r3, #0
   33ef4:	mov	r1, #1
   33ef8:	str	r1, [sp, #20]
   33efc:	strd	r2, [sp, #48]	; 0x30
   33f00:	ldr	r2, [r9, #40]	; 0x28
   33f04:	cmp	r2, #5
   33f08:	bne	34454 <__flatcc_fb_clear_parser@@Base+0xee8>
   33f0c:	mov	r2, #0
   33f10:	mov	r3, #6
   33f14:	add	r7, sp, #48	; 0x30
   33f18:	strb	r2, [sp, #48]	; 0x30
   33f1c:	strh	r3, [sp, #56]	; 0x38
   33f20:	add	r3, sp, #64	; 0x40
   33f24:	ldr	r5, [r9, #20]
   33f28:	mov	ip, r3
   33f2c:	ldrd	r0, [r7, #8]
   33f30:	str	ip, [sp, #24]
   33f34:	ldrd	r2, [sp, #48]	; 0x30
   33f38:	cmp	r5, #0
   33f3c:	strd	r0, [ip, #8]
   33f40:	strd	r2, [sp, #64]	; 0x40
   33f44:	beq	34184 <__flatcc_fb_clear_parser@@Base+0xc18>
   33f48:	ldr	r3, [pc, #2716]	; 349ec <__flatcc_fb_clear_parser@@Base+0x1480>
   33f4c:	add	fp, r9, #56	; 0x38
   33f50:	mov	r4, #1
   33f54:	str	r9, [sp, #16]
   33f58:	add	r3, pc, r3
   33f5c:	str	r3, [sp, #32]
   33f60:	ldr	r3, [pc, #2696]	; 349f0 <__flatcc_fb_clear_parser@@Base+0x1484>
   33f64:	add	r3, pc, r3
   33f68:	str	r3, [sp, #28]
   33f6c:	ldr	r3, [pc, #2688]	; 349f4 <__flatcc_fb_clear_parser@@Base+0x1488>
   33f70:	add	r3, pc, r3
   33f74:	str	r3, [sp, #44]	; 0x2c
   33f78:	b	33fc4 <__flatcc_fb_clear_parser@@Base+0xa58>
   33f7c:	ldr	r3, [r0, #4]
   33f80:	add	r2, r6, #68	; 0x44
   33f84:	mov	ip, #0
   33f88:	ldr	r1, [r5, #4]
   33f8c:	cmp	r3, r2
   33f90:	beq	341a4 <__flatcc_fb_clear_parser@@Base+0xc38>
   33f94:	ldr	r2, [pc, #2652]	; 349f8 <__flatcc_fb_clear_parser@@Base+0x148c>
   33f98:	add	r2, pc, r2
   33f9c:	mov	r0, r6
   33fa0:	str	ip, [sp]
   33fa4:	str	ip, [sp, #4]
   33fa8:	bl	2ebf8 <__flatcc_error_report@@Base>
   33fac:	mov	r3, #1
   33fb0:	strh	r3, [r5, #24]
   33fb4:	ldr	r5, [r5]
   33fb8:	mov	r4, #0
   33fbc:	cmp	r5, r4
   33fc0:	beq	34184 <__flatcc_fb_clear_parser@@Base+0xc18>
   33fc4:	mov	r2, #1
   33fc8:	mov	r1, r5
   33fcc:	mov	r0, fp
   33fd0:	bl	2c7ac <fb_symbol_table_insert_item@@Base>
   33fd4:	cmp	r0, #0
   33fd8:	bne	33f7c <__flatcc_fb_clear_parser@@Base+0xa10>
   33fdc:	ldrh	r3, [r5, #8]
   33fe0:	cmp	r3, #5
   33fe4:	bne	34788 <__flatcc_fb_clear_parser@@Base+0x121c>
   33fe8:	ldr	ip, [r5, #64]	; 0x40
   33fec:	cmp	ip, #0
   33ff0:	bne	34988 <__flatcc_fb_clear_parser@@Base+0x141c>
   33ff4:	ldr	r3, [sp, #8]
   33ff8:	cmp	r3, #4
   33ffc:	beq	341d4 <__flatcc_fb_clear_parser@@Base+0xc68>
   34000:	ldrh	r3, [r5, #56]	; 0x38
   34004:	eor	r2, r4, #1
   34008:	str	r2, [sp, #12]
   3400c:	cmp	r3, #0
   34010:	movne	r2, #0
   34014:	cmp	r2, #0
   34018:	bne	34238 <__flatcc_fb_clear_parser@@Base+0xccc>
   3401c:	ldr	r2, [sp, #20]
   34020:	cmp	r2, #0
   34024:	beq	341b4 <__flatcc_fb_clear_parser@@Base+0xc48>
   34028:	cmp	r3, #0
   3402c:	beq	34288 <__flatcc_fb_clear_parser@@Base+0xd1c>
   34030:	cmp	r3, #5
   34034:	bne	348f0 <__flatcc_fb_clear_parser@@Base+0x1384>
   34038:	ldr	r1, [sp, #16]
   3403c:	ldrd	r2, [r5, #48]	; 0x30
   34040:	ldr	lr, [r1, #40]	; 0x28
   34044:	ldrd	r0, [r5, #56]	; 0x38
   34048:	strd	r2, [r7]
   3404c:	strd	r0, [r7, #8]
   34050:	ldr	r3, [sp, #28]
   34054:	ldrd	r8, [sp, #48]	; 0x30
   34058:	add	r3, r3, lr, lsl #2
   3405c:	ldr	r2, [r3, #128]	; 0x80
   34060:	mov	r3, #0
   34064:	cmp	r9, r3
   34068:	lsl	r2, r2, #3
   3406c:	cmpeq	r8, r2
   34070:	bcs	34898 <__flatcc_fb_clear_parser@@Base+0x132c>
   34074:	mov	r3, #1
   34078:	sub	ip, r8, #32
   3407c:	lsl	ip, r3, ip
   34080:	rsb	r1, r8, #32
   34084:	mov	r2, lr
   34088:	lsl	lr, r3, r8
   3408c:	mov	r0, #5
   34090:	add	r4, r5, #48	; 0x30
   34094:	orr	ip, ip, r3, lsr r1
   34098:	mov	r3, r4
   3409c:	mov	r1, r5
   340a0:	mov	sl, #0
   340a4:	str	lr, [r5, #48]	; 0x30
   340a8:	str	ip, [r5, #52]	; 0x34
   340ac:	strh	r0, [r5, #56]	; 0x38
   340b0:	mov	r0, r6
   340b4:	bl	388cc <__flatcc_fb_coerce_scalar_type@@Base>
   340b8:	cmp	r0, sl
   340bc:	bne	34870 <__flatcc_fb_clear_parser@@Base+0x1304>
   340c0:	ldr	r3, [sp, #12]
   340c4:	cmp	r3, #0
   340c8:	beq	34100 <__flatcc_fb_clear_parser@@Base+0xb94>
   340cc:	ldr	r3, [r6, #180]	; 0xb4
   340d0:	cmp	r3, #0
   340d4:	beq	34100 <__flatcc_fb_clear_parser@@Base+0xb94>
   340d8:	ldrh	r3, [sp, #56]	; 0x38
   340dc:	cmp	r3, #5
   340e0:	beq	34314 <__flatcc_fb_clear_parser@@Base+0xda8>
   340e4:	cmp	r3, #4
   340e8:	bne	34374 <__flatcc_fb_clear_parser@@Base+0xe08>
   340ec:	ldrd	r2, [sp, #48]	; 0x30
   340f0:	ldrd	r0, [sp, #64]	; 0x40
   340f4:	cmp	r0, r2
   340f8:	sbcs	r3, r1, r3
   340fc:	bge	34328 <__flatcc_fb_clear_parser@@Base+0xdbc>
   34100:	ldr	r3, [sp, #16]
   34104:	mov	r1, r4
   34108:	mov	r2, #1
   3410c:	ldrd	r8, [r7]
   34110:	add	r0, r3, #72	; 0x48
   34114:	ldr	r3, [sp, #24]
   34118:	strd	r8, [r3]
   3411c:	ldrd	r8, [r7, #8]
   34120:	strd	r8, [r3, #8]
   34124:	bl	3f7ec <fb_value_set_insert_item@@Base>
   34128:	cmp	r0, #0
   3412c:	beq	34148 <__flatcc_fb_clear_parser@@Base+0xbdc>
   34130:	ldr	r3, [sp, #8]
   34134:	cmp	r3, #4
   34138:	beq	3483c <__flatcc_fb_clear_parser@@Base+0x12d0>
   3413c:	ldrh	r3, [r5, #10]
   34140:	orr	r3, r3, #4
   34144:	strh	r3, [r5, #10]
   34148:	ldr	r3, [r5, #64]	; 0x40
   3414c:	cmp	r3, #0
   34150:	beq	33fb4 <__flatcc_fb_clear_parser@@Base+0xa48>
   34154:	mov	ip, #0
   34158:	mov	r0, r6
   3415c:	ldr	r1, [r5, #4]
   34160:	mov	r3, ip
   34164:	mov	r4, #0
   34168:	str	ip, [sp]
   3416c:	str	ip, [sp, #4]
   34170:	ldr	r2, [sp, #32]
   34174:	bl	2ebf8 <__flatcc_error_report@@Base>
   34178:	ldr	r5, [r5]
   3417c:	cmp	r5, r4
   34180:	bne	33fc4 <__flatcc_fb_clear_parser@@Base+0xa58>
   34184:	mov	r0, #0
   34188:	add	sp, sp, #132	; 0x84
   3418c:	ldrd	r4, [sp]
   34190:	ldrd	r6, [sp, #8]
   34194:	ldrd	r8, [sp, #16]
   34198:	ldrd	sl, [sp, #24]
   3419c:	add	sp, sp, #32
   341a0:	pop	{pc}		; (ldr pc, [sp], #4)
   341a4:	ldr	r2, [pc, #2128]	; 349fc <__flatcc_fb_clear_parser@@Base+0x1490>
   341a8:	mov	r3, ip
   341ac:	add	r2, pc, r2
   341b0:	b	33f9c <__flatcc_fb_clear_parser@@Base+0xa30>
   341b4:	cmp	r3, #0
   341b8:	add	r4, r5, #48	; 0x30
   341bc:	bne	34294 <__flatcc_fb_clear_parser@@Base+0xd28>
   341c0:	ldrd	r2, [r7]
   341c4:	ldrd	r0, [r7, #8]
   341c8:	strd	r2, [r4]
   341cc:	strd	r0, [r4, #8]
   341d0:	b	340c0 <__flatcc_fb_clear_parser@@Base+0xb54>
   341d4:	ldr	r1, [r5, #4]
   341d8:	add	r3, r6, #68	; 0x44
   341dc:	cmp	r1, r3
   341e0:	strheq	ip, [r5, #24]
   341e4:	beq	34000 <__flatcc_fb_clear_parser@@Base+0xa94>
   341e8:	ldrh	r3, [r5, #24]
   341ec:	cmp	r3, #10
   341f0:	moveq	r2, #0
   341f4:	moveq	r3, #0
   341f8:	strdeq	r2, [r5, #88]	; 0x58
   341fc:	beq	34000 <__flatcc_fb_clear_parser@@Base+0xa94>
   34200:	cmp	r3, #12
   34204:	beq	344b0 <__flatcc_fb_clear_parser@@Base+0xf44>
   34208:	cmp	r3, #1
   3420c:	beq	33fb4 <__flatcc_fb_clear_parser@@Base+0xa48>
   34210:	ldr	r2, [pc, #2024]	; 34a00 <__flatcc_fb_clear_parser@@Base+0x1494>
   34214:	mov	r3, ip
   34218:	mov	r0, r6
   3421c:	str	ip, [sp]
   34220:	str	ip, [sp, #4]
   34224:	add	r2, pc, r2
   34228:	bl	2ebf8 <__flatcc_error_report@@Base>
   3422c:	mov	r3, #1
   34230:	strh	r3, [r5, #24]
   34234:	b	33fb4 <__flatcc_fb_clear_parser@@Base+0xa48>
   34238:	ldrh	r3, [sp, #56]	; 0x38
   3423c:	cmp	r3, #5
   34240:	beq	34428 <__flatcc_fb_clear_parser@@Base+0xebc>
   34244:	cmp	r3, #4
   34248:	beq	34584 <__flatcc_fb_clear_parser@@Base+0x1018>
   3424c:	cmp	r3, #6
   34250:	beq	34268 <__flatcc_fb_clear_parser@@Base+0xcfc>
   34254:	ldr	r3, [sp, #20]
   34258:	cmp	r3, #0
   3425c:	bne	34288 <__flatcc_fb_clear_parser@@Base+0xd1c>
   34260:	add	r4, r5, #48	; 0x30
   34264:	b	341c0 <__flatcc_fb_clear_parser@@Base+0xc54>
   34268:	ldrb	r4, [sp, #48]	; 0x30
   3426c:	cmp	r4, #1
   34270:	beq	348c4 <__flatcc_fb_clear_parser@@Base+0x1358>
   34274:	ldr	r2, [sp, #20]
   34278:	mov	r3, #1
   3427c:	strb	r3, [sp, #48]	; 0x30
   34280:	cmp	r2, #0
   34284:	beq	34260 <__flatcc_fb_clear_parser@@Base+0xcf4>
   34288:	ldr	r3, [sp, #16]
   3428c:	ldr	lr, [r3, #40]	; 0x28
   34290:	b	34050 <__flatcc_fb_clear_parser@@Base+0xae4>
   34294:	ldrd	r8, [r5, #48]	; 0x30
   34298:	mov	r3, r7
   3429c:	mov	r1, r5
   342a0:	mov	r0, r6
   342a4:	ldr	r2, [sp, #16]
   342a8:	strd	r8, [r7]
   342ac:	ldrd	r8, [r4, #8]
   342b0:	ldr	r2, [r2, #40]	; 0x28
   342b4:	strd	r8, [r7, #8]
   342b8:	bl	388cc <__flatcc_fb_coerce_scalar_type@@Base>
   342bc:	cmp	r0, #0
   342c0:	beq	341c0 <__flatcc_fb_clear_parser@@Base+0xc54>
   342c4:	mvn	r0, #0
   342c8:	b	34188 <__flatcc_fb_clear_parser@@Base+0xc1c>
   342cc:	ldr	r2, [pc, #1840]	; 34a04 <__flatcc_fb_clear_parser@@Base+0x1498>
   342d0:	mov	r3, ip
   342d4:	mov	r0, r6
   342d8:	ldr	r1, [r4, #4]
   342dc:	str	ip, [sp]
   342e0:	str	ip, [sp, #4]
   342e4:	add	r2, pc, r2
   342e8:	bl	2ebf8 <__flatcc_error_report@@Base>
   342ec:	b	33d88 <__flatcc_fb_clear_parser@@Base+0x81c>
   342f0:	mov	r3, r2
   342f4:	ldr	r1, [r4, #4]
   342f8:	mov	r0, r6
   342fc:	str	r2, [sp]
   34300:	str	r2, [sp, #4]
   34304:	ldr	r2, [pc, #1788]	; 34a08 <__flatcc_fb_clear_parser@@Base+0x149c>
   34308:	add	r2, pc, r2
   3430c:	bl	2ebf8 <__flatcc_error_report@@Base>
   34310:	b	33d88 <__flatcc_fb_clear_parser@@Base+0x81c>
   34314:	ldrd	r0, [sp, #48]	; 0x30
   34318:	ldrd	r2, [sp, #64]	; 0x40
   3431c:	cmp	r1, r3
   34320:	cmpeq	r0, r2
   34324:	bhi	34100 <__flatcc_fb_clear_parser@@Base+0xb94>
   34328:	ldr	r3, [sp, #8]
   3432c:	mov	ip, #0
   34330:	ldr	r1, [r5, #4]
   34334:	cmp	r3, #4
   34338:	bne	34348 <__flatcc_fb_clear_parser@@Base+0xddc>
   3433c:	ldrd	r2, [sp, #64]	; 0x40
   34340:	orrs	r3, r2, r3
   34344:	beq	3491c <__flatcc_fb_clear_parser@@Base+0x13b0>
   34348:	ldr	r2, [pc, #1724]	; 34a0c <__flatcc_fb_clear_parser@@Base+0x14a0>
   3434c:	add	r2, pc, r2
   34350:	mov	r0, r6
   34354:	mov	r3, ip
   34358:	str	ip, [sp]
   3435c:	str	ip, [sp, #4]
   34360:	bl	2ebf8 <__flatcc_error_report@@Base>
   34364:	mov	r3, #1
   34368:	mvn	r0, #0
   3436c:	strh	r3, [r5, #56]	; 0x38
   34370:	b	34188 <__flatcc_fb_clear_parser@@Base+0xc1c>
   34374:	cmp	r3, #6
   34378:	bne	34100 <__flatcc_fb_clear_parser@@Base+0xb94>
   3437c:	ldrb	r2, [sp, #48]	; 0x30
   34380:	ldrb	r3, [sp, #64]	; 0x40
   34384:	cmp	r2, r3
   34388:	bhi	34100 <__flatcc_fb_clear_parser@@Base+0xb94>
   3438c:	mov	r2, #0
   34390:	ldr	r1, [r5, #4]
   34394:	mov	r0, r6
   34398:	mov	r3, r2
   3439c:	str	r2, [sp]
   343a0:	str	r2, [sp, #4]
   343a4:	ldr	r2, [pc, #1636]	; 34a10 <__flatcc_fb_clear_parser@@Base+0x14a4>
   343a8:	add	r2, pc, r2
   343ac:	bl	2ebf8 <__flatcc_error_report@@Base>
   343b0:	mov	r3, #1
   343b4:	mvn	r0, #0
   343b8:	strh	r3, [r5, #56]	; 0x38
   343bc:	b	34188 <__flatcc_fb_clear_parser@@Base+0xc1c>
   343c0:	ldrh	r3, [r4, #16]
   343c4:	cmp	r3, #5
   343c8:	beq	33d88 <__flatcc_fb_clear_parser@@Base+0x81c>
   343cc:	ldr	r2, [pc, #1600]	; 34a14 <__flatcc_fb_clear_parser@@Base+0x14a8>
   343d0:	mov	r3, ip
   343d4:	mov	r0, r6
   343d8:	ldr	r1, [r4, #4]
   343dc:	str	ip, [sp]
   343e0:	str	ip, [sp, #4]
   343e4:	add	r2, pc, r2
   343e8:	bl	2ebf8 <__flatcc_error_report@@Base>
   343ec:	b	33d88 <__flatcc_fb_clear_parser@@Base+0x81c>
   343f0:	cmp	r2, #6
   343f4:	bne	33d88 <__flatcc_fb_clear_parser@@Base+0x81c>
   343f8:	ldrh	r3, [r4, #16]
   343fc:	cmp	r3, #6
   34400:	beq	33d88 <__flatcc_fb_clear_parser@@Base+0x81c>
   34404:	mov	ip, #0
   34408:	mov	r2, sl
   3440c:	ldr	r1, [r4, #4]
   34410:	mov	r3, ip
   34414:	mov	r0, r6
   34418:	str	ip, [sp]
   3441c:	str	ip, [sp, #4]
   34420:	bl	2ebf8 <__flatcc_error_report@@Base>
   34424:	b	33d88 <__flatcc_fb_clear_parser@@Base+0x81c>
   34428:	ldr	r3, [sp, #16]
   3442c:	ldr	lr, [r3, #40]	; 0x28
   34430:	cmp	lr, #6
   34434:	beq	3473c <__flatcc_fb_clear_parser@@Base+0x11d0>
   34438:	ldrd	r8, [sp, #48]	; 0x30
   3443c:	mov	r3, #0
   34440:	adds	r0, r8, #1
   34444:	adc	r2, r9, #0
   34448:	str	r0, [sp, #48]	; 0x30
   3444c:	str	r2, [sp, #52]	; 0x34
   34450:	b	3401c <__flatcc_fb_clear_parser@@Base+0xab0>
   34454:	mov	r0, #0
   34458:	mov	r1, #0
   3445c:	mov	ip, #4
   34460:	add	r7, sp, #48	; 0x30
   34464:	mov	r3, r7
   34468:	strd	r0, [sp, #48]	; 0x30
   3446c:	mov	r1, r9
   34470:	mov	r0, r6
   34474:	strh	ip, [sp, #56]	; 0x38
   34478:	bl	388cc <__flatcc_fb_coerce_scalar_type@@Base>
   3447c:	cmp	r0, #0
   34480:	beq	33f20 <__flatcc_fb_clear_parser@@Base+0x9b4>
   34484:	ldr	r2, [pc, #1420]	; 34a18 <__flatcc_fb_clear_parser@@Base+0x14ac>
   34488:	mov	ip, #0
   3448c:	mov	r0, r6
   34490:	mov	r3, ip
   34494:	mov	r1, ip
   34498:	str	ip, [sp]
   3449c:	str	ip, [sp, #4]
   344a0:	add	r2, pc, r2
   344a4:	bl	2ebf8 <__flatcc_error_report@@Base>
   344a8:	mvn	r0, #0
   344ac:	b	34188 <__flatcc_fb_clear_parser@@Base+0xc1c>
   344b0:	ldr	r2, [r5, #16]
   344b4:	ldr	r3, [sp, #16]
   344b8:	cmp	r2, #0
   344bc:	ldr	r8, [r3, #12]
   344c0:	beq	34680 <__flatcc_fb_clear_parser@@Base+0x1114>
   344c4:	mov	r1, r2
   344c8:	b	344d4 <__flatcc_fb_clear_parser@@Base+0xf68>
   344cc:	mov	ip, r0
   344d0:	mov	r1, r3
   344d4:	ldr	r3, [r1]
   344d8:	add	r0, ip, #1
   344dc:	cmp	r3, #0
   344e0:	bne	344cc <__flatcc_fb_clear_parser@@Base+0xf60>
   344e4:	sub	r3, r0, #1
   344e8:	cmp	r8, #0
   344ec:	clz	r3, r3
   344f0:	mov	r9, r1
   344f4:	lsr	r3, r3, #5
   344f8:	moveq	r3, #0
   344fc:	cmp	r3, #0
   34500:	beq	3460c <__flatcc_fb_clear_parser@@Base+0x10a0>
   34504:	add	r3, r6, #524	; 0x20c
   34508:	add	r9, r6, #352	; 0x160
   3450c:	mov	sl, r1
   34510:	str	r3, [sp, #36]	; 0x24
   34514:	str	r4, [sp, #40]	; 0x28
   34518:	ldr	r3, [sl, #4]
   3451c:	add	r0, r8, #4
   34520:	ldm	r3, {r1, r2}
   34524:	bl	2c7d4 <fb_symbol_table_find@@Base>
   34528:	subs	r3, r0, #0
   3452c:	beq	346a4 <__flatcc_fb_clear_parser@@Base+0x1138>
   34530:	ldrh	r2, [r3, #8]
   34534:	cmp	r2, #4
   34538:	bhi	346a4 <__flatcc_fb_clear_parser@@Base+0x1138>
   3453c:	ldr	r1, [r3, #16]
   34540:	str	r3, [sp, #12]
   34544:	ldr	r0, [sp, #36]	; 0x24
   34548:	bl	2c058 <ptr_set_find_item@@Base>
   3454c:	cmp	r0, #0
   34550:	ldr	r3, [sp, #12]
   34554:	beq	346a4 <__flatcc_fb_clear_parser@@Base+0x1138>
   34558:	ldr	r4, [sp, #40]	; 0x28
   3455c:	ldrh	r2, [r3, #8]
   34560:	cmp	r2, #1
   34564:	bhi	3480c <__flatcc_fb_clear_parser@@Base+0x12a0>
   34568:	mov	r2, #14
   3456c:	mov	r0, #0
   34570:	str	r3, [r5, #16]
   34574:	mov	r1, #0
   34578:	strh	r2, [r5, #24]
   3457c:	strd	r0, [r5, #88]	; 0x58
   34580:	b	34000 <__flatcc_fb_clear_parser@@Base+0xa94>
   34584:	ldr	r3, [sp, #16]
   34588:	ldrd	r0, [sp, #48]	; 0x30
   3458c:	ldr	lr, [r3, #40]	; 0x28
   34590:	cmp	lr, #6
   34594:	beq	347b4 <__flatcc_fb_clear_parser@@Base+0x1248>
   34598:	adds	r2, r0, #1
   3459c:	adc	r3, r1, #0
   345a0:	ldr	r1, [sp, #20]
   345a4:	strd	r2, [sp, #48]	; 0x30
   345a8:	cmp	r1, #0
   345ac:	bne	34050 <__flatcc_fb_clear_parser@@Base+0xae4>
   345b0:	b	34260 <__flatcc_fb_clear_parser@@Base+0xcf4>
   345b4:	ldrh	r3, [r1, #48]	; 0x30
   345b8:	cmp	r3, #0
   345bc:	bne	3494c <__flatcc_fb_clear_parser@@Base+0x13e0>
   345c0:	ldr	r1, [sp, #8]
   345c4:	mov	r0, #8
   345c8:	mov	r2, #1
   345cc:	mov	r3, #0
   345d0:	str	r1, [r9, #40]	; 0x28
   345d4:	mov	r1, #1
   345d8:	strh	r0, [r9, #48]	; 0x30
   345dc:	strh	r1, [r9, #104]	; 0x68
   345e0:	strd	r2, [r9, #112]	; 0x70
   345e4:	b	33d08 <__flatcc_fb_clear_parser@@Base+0x79c>
   345e8:	mov	r3, r2
   345ec:	ldr	r1, [r4, #4]
   345f0:	mov	r0, r6
   345f4:	str	r2, [sp]
   345f8:	str	r2, [sp, #4]
   345fc:	ldr	r2, [pc, #1048]	; 34a1c <__flatcc_fb_clear_parser@@Base+0x14b0>
   34600:	add	r2, pc, r2
   34604:	bl	2ebf8 <__flatcc_error_report@@Base>
   34608:	b	33d88 <__flatcc_fb_clear_parser@@Base+0x81c>
   3460c:	cmp	r0, #1
   34610:	moveq	r1, r3
   34614:	movne	r1, r2
   34618:	cmn	r6, #352	; 0x160
   3461c:	beq	34680 <__flatcc_fb_clear_parser@@Base+0x1114>
   34620:	ldr	r0, [r6, #412]	; 0x19c
   34624:	cmp	r0, #0
   34628:	beq	34680 <__flatcc_fb_clear_parser@@Base+0x1114>
   3462c:	rsb	r2, ip, #0
   34630:	bl	2d85c <fb_scope_table_find@@Base>
   34634:	cmp	r0, #0
   34638:	beq	3467c <__flatcc_fb_clear_parser@@Base+0x1110>
   3463c:	ldr	r3, [r9, #4]
   34640:	add	r0, r0, #4
   34644:	ldm	r3, {r1, r2}
   34648:	bl	2c7d4 <fb_symbol_table_find@@Base>
   3464c:	subs	r3, r0, #0
   34650:	beq	3467c <__flatcc_fb_clear_parser@@Base+0x1110>
   34654:	ldrh	r2, [r3, #8]
   34658:	cmp	r2, #4
   3465c:	bhi	3467c <__flatcc_fb_clear_parser@@Base+0x1110>
   34660:	add	r0, r6, #524	; 0x20c
   34664:	ldr	r1, [r3, #16]
   34668:	str	r3, [sp, #12]
   3466c:	bl	2c058 <ptr_set_find_item@@Base>
   34670:	cmp	r0, #0
   34674:	ldr	r3, [sp, #12]
   34678:	bne	3455c <__flatcc_fb_clear_parser@@Base+0xff0>
   3467c:	ldr	r2, [r5, #16]
   34680:	mov	r1, r2
   34684:	mov	r3, r5
   34688:	ldr	r2, [pc, #912]	; 34a20 <__flatcc_fb_clear_parser@@Base+0x14b4>
   3468c:	mov	r0, r6
   34690:	add	r2, pc, r2
   34694:	bl	30378 <error_ref_sym@@Base>
   34698:	mov	r3, #1
   3469c:	strh	r3, [r5, #24]
   346a0:	b	33fb4 <__flatcc_fb_clear_parser@@Base+0xa48>
   346a4:	ldr	r2, [r8]
   346a8:	cmp	r2, #0
   346ac:	beq	3467c <__flatcc_fb_clear_parser@@Base+0x1110>
   346b0:	mov	r3, #0
   346b4:	b	346bc <__flatcc_fb_clear_parser@@Base+0x1150>
   346b8:	mov	r3, r1
   346bc:	ldr	r2, [r2]
   346c0:	add	r1, r3, #1
   346c4:	cmp	r2, #0
   346c8:	bne	346b8 <__flatcc_fb_clear_parser@@Base+0x114c>
   346cc:	rsb	r4, r3, #0
   346d0:	b	34700 <__flatcc_fb_clear_parser@@Base+0x1194>
   346d4:	cmp	r9, #0
   346d8:	beq	346fc <__flatcc_fb_clear_parser@@Base+0x1190>
   346dc:	ldr	r0, [r6, #412]	; 0x19c
   346e0:	cmp	r0, #0
   346e4:	beq	346fc <__flatcc_fb_clear_parser@@Base+0x1190>
   346e8:	mov	r2, r4
   346ec:	ldr	r1, [r8]
   346f0:	bl	2d85c <fb_scope_table_find@@Base>
   346f4:	cmp	r0, #0
   346f8:	bne	34734 <__flatcc_fb_clear_parser@@Base+0x11c8>
   346fc:	add	r4, r4, #1
   34700:	cmp	r4, #0
   34704:	bne	346d4 <__flatcc_fb_clear_parser@@Base+0x1168>
   34708:	cmp	r9, #0
   3470c:	beq	3467c <__flatcc_fb_clear_parser@@Base+0x1110>
   34710:	ldr	r0, [r6, #412]	; 0x19c
   34714:	cmp	r0, #0
   34718:	beq	3467c <__flatcc_fb_clear_parser@@Base+0x1110>
   3471c:	mov	r2, r4
   34720:	mov	r1, r4
   34724:	bl	2d85c <fb_scope_table_find@@Base>
   34728:	subs	r8, r0, #0
   3472c:	bne	34518 <__flatcc_fb_clear_parser@@Base+0xfac>
   34730:	b	3467c <__flatcc_fb_clear_parser@@Base+0x1110>
   34734:	mov	r8, r0
   34738:	b	34518 <__flatcc_fb_clear_parser@@Base+0xfac>
   3473c:	ldrd	r8, [sp, #48]	; 0x30
   34740:	mvn	r3, #0
   34744:	mvn	r2, #0
   34748:	cmp	r9, r3
   3474c:	cmpeq	r8, r2
   34750:	movne	r3, #0
   34754:	bne	34440 <__flatcc_fb_clear_parser@@Base+0xed4>
   34758:	mov	r2, #0
   3475c:	ldr	r1, [r5, #4]
   34760:	mov	r0, r6
   34764:	mov	r3, r2
   34768:	str	r2, [sp]
   3476c:	str	r2, [sp, #4]
   34770:	ldr	r2, [pc, #684]	; 34a24 <__flatcc_fb_clear_parser@@Base+0x14b8>
   34774:	add	r2, pc, r2
   34778:	bl	2ebf8 <__flatcc_error_report@@Base>
   3477c:	ldrh	r3, [r5, #56]	; 0x38
   34780:	ldrd	r8, [sp, #48]	; 0x30
   34784:	b	34440 <__flatcc_fb_clear_parser@@Base+0xed4>
   34788:	ldr	r2, [pc, #664]	; 34a28 <__flatcc_fb_clear_parser@@Base+0x14bc>
   3478c:	mov	ip, r0
   34790:	mov	r3, r0
   34794:	mov	r0, r6
   34798:	ldr	r1, [r5, #4]
   3479c:	str	ip, [sp]
   347a0:	str	ip, [sp, #4]
   347a4:	add	r2, pc, r2
   347a8:	bl	2ebf8 <__flatcc_error_report@@Base>
   347ac:	mvn	r0, #0
   347b0:	b	34188 <__flatcc_fb_clear_parser@@Base+0xc1c>
   347b4:	mvn	r3, #-2147483648	; 0x80000000
   347b8:	mvn	r2, #0
   347bc:	cmp	r1, r3
   347c0:	cmpeq	r0, r2
   347c4:	bne	34598 <__flatcc_fb_clear_parser@@Base+0x102c>
   347c8:	mov	r2, #0
   347cc:	ldr	r1, [r5, #4]
   347d0:	mov	r0, r6
   347d4:	mov	r3, r2
   347d8:	str	r2, [sp]
   347dc:	str	r2, [sp, #4]
   347e0:	ldr	r2, [pc, #580]	; 34a2c <__flatcc_fb_clear_parser@@Base+0x14c0>
   347e4:	add	r2, pc, r2
   347e8:	bl	2ebf8 <__flatcc_error_report@@Base>
   347ec:	ldr	r2, [sp, #48]	; 0x30
   347f0:	ldr	r1, [sp, #52]	; 0x34
   347f4:	ldrh	r3, [r5, #56]	; 0x38
   347f8:	adds	r2, r2, #1
   347fc:	adc	r1, r1, #0
   34800:	str	r2, [sp, #48]	; 0x30
   34804:	str	r1, [sp, #52]	; 0x34
   34808:	b	3401c <__flatcc_fb_clear_parser@@Base+0xab0>
   3480c:	mov	r2, #0
   34810:	ldr	r3, [r3, #4]
   34814:	mov	r0, r6
   34818:	ldr	r1, [r5, #4]
   3481c:	str	r2, [sp]
   34820:	str	r2, [sp, #4]
   34824:	ldr	r2, [pc, #516]	; 34a30 <__flatcc_fb_clear_parser@@Base+0x14c4>
   34828:	add	r2, pc, r2
   3482c:	bl	2ebf8 <__flatcc_error_report@@Base>
   34830:	mov	r3, #1
   34834:	strh	r3, [r5, #24]
   34838:	b	33fb4 <__flatcc_fb_clear_parser@@Base+0xa48>
   3483c:	mov	r2, #0
   34840:	ldr	r1, [r5, #4]
   34844:	mov	r0, r6
   34848:	mov	r3, r2
   3484c:	str	r2, [sp]
   34850:	str	r2, [sp, #4]
   34854:	ldr	r2, [pc, #472]	; 34a34 <__flatcc_fb_clear_parser@@Base+0x14c8>
   34858:	add	r2, pc, r2
   3485c:	bl	2ebf8 <__flatcc_error_report@@Base>
   34860:	mov	r3, #1
   34864:	mvn	r0, #0
   34868:	strh	r3, [r5, #56]	; 0x38
   3486c:	b	34188 <__flatcc_fb_clear_parser@@Base+0xc1c>
   34870:	ldr	r2, [pc, #448]	; 34a38 <__flatcc_fb_clear_parser@@Base+0x14cc>
   34874:	mov	r0, r6
   34878:	mov	r3, sl
   3487c:	ldr	r1, [r5, #4]
   34880:	str	sl, [sp]
   34884:	str	sl, [sp, #4]
   34888:	add	r2, pc, r2
   3488c:	bl	2ebf8 <__flatcc_error_report@@Base>
   34890:	mvn	r0, #0
   34894:	b	34188 <__flatcc_fb_clear_parser@@Base+0xc1c>
   34898:	ldr	r2, [pc, #412]	; 34a3c <__flatcc_fb_clear_parser@@Base+0x14d0>
   3489c:	mov	ip, #0
   348a0:	mov	r0, r6
   348a4:	mov	r3, ip
   348a8:	ldr	r1, [r5, #4]
   348ac:	str	ip, [sp]
   348b0:	str	ip, [sp, #4]
   348b4:	add	r2, pc, r2
   348b8:	bl	2ebf8 <__flatcc_error_report@@Base>
   348bc:	mvn	r0, #0
   348c0:	b	34188 <__flatcc_fb_clear_parser@@Base+0xc1c>
   348c4:	mov	ip, #0
   348c8:	mov	r0, r6
   348cc:	ldr	r1, [r5, #4]
   348d0:	mov	r3, ip
   348d4:	str	ip, [sp]
   348d8:	str	ip, [sp, #4]
   348dc:	ldr	r2, [sp, #44]	; 0x2c
   348e0:	bl	2ebf8 <__flatcc_error_report@@Base>
   348e4:	ldrh	r3, [r5, #56]	; 0x38
   348e8:	strb	r4, [sp, #48]	; 0x30
   348ec:	b	3401c <__flatcc_fb_clear_parser@@Base+0xab0>
   348f0:	ldr	r2, [pc, #328]	; 34a40 <__flatcc_fb_clear_parser@@Base+0x14d4>
   348f4:	mov	ip, #0
   348f8:	mov	r0, r6
   348fc:	mov	r3, ip
   34900:	ldr	r1, [r5, #4]
   34904:	str	ip, [sp]
   34908:	str	ip, [sp, #4]
   3490c:	add	r2, pc, r2
   34910:	bl	2ebf8 <__flatcc_error_report@@Base>
   34914:	mvn	r0, #0
   34918:	b	34188 <__flatcc_fb_clear_parser@@Base+0xc1c>
   3491c:	ldr	r2, [pc, #288]	; 34a44 <__flatcc_fb_clear_parser@@Base+0x14d8>
   34920:	add	r2, pc, r2
   34924:	b	34350 <__flatcc_fb_clear_parser@@Base+0xde4>
   34928:	ldr	r2, [pc, #280]	; 34a48 <__flatcc_fb_clear_parser@@Base+0x14dc>
   3492c:	mov	r1, #0
   34930:	add	r2, pc, r2
   34934:	mov	r3, r1
   34938:	str	r1, [sp]
   3493c:	str	r1, [sp, #4]
   34940:	ldr	r1, [r9, #4]
   34944:	bl	2ebf8 <__flatcc_error_report@@Base>
   34948:	b	342c4 <__flatcc_fb_clear_parser@@Base+0xd58>
   3494c:	ldr	r2, [pc, #248]	; 34a4c <__flatcc_fb_clear_parser@@Base+0x14e0>
   34950:	mov	r1, #0
   34954:	add	r2, pc, r2
   34958:	b	34934 <__flatcc_fb_clear_parser@@Base+0x13c8>
   3495c:	mov	r3, r2
   34960:	str	r2, [sp]
   34964:	mov	r1, #1
   34968:	str	r2, [sp, #4]
   3496c:	ldr	r2, [pc, #220]	; 34a50 <__flatcc_fb_clear_parser@@Base+0x14e4>
   34970:	strh	r1, [r9, #48]	; 0x30
   34974:	ldr	r1, [r9, #4]
   34978:	add	r2, pc, r2
   3497c:	bl	2ebf8 <__flatcc_error_report@@Base>
   34980:	mvn	r0, #0
   34984:	b	34188 <__flatcc_fb_clear_parser@@Base+0xc1c>
   34988:	ldr	r3, [pc, #196]	; 34a54 <__flatcc_fb_clear_parser@@Base+0x14e8>
   3498c:	movw	r2, #1315	; 0x523
   34990:	ldr	r1, [pc, #192]	; 34a58 <__flatcc_fb_clear_parser@@Base+0x14ec>
   34994:	ldr	r0, [pc, #192]	; 34a5c <__flatcc_fb_clear_parser@@Base+0x14f0>
   34998:	add	r3, pc, r3
   3499c:	add	r3, r3, #188	; 0xbc
   349a0:	add	r1, pc, r1
   349a4:	add	r0, pc, r0
   349a8:	bl	14118 <__assert_fail@plt>
   349ac:	ldr	r3, [pc, #172]	; 34a60 <__flatcc_fb_clear_parser@@Base+0x14f4>
   349b0:	movw	r2, #1229	; 0x4cd
   349b4:	ldr	r1, [pc, #168]	; 34a64 <__flatcc_fb_clear_parser@@Base+0x14f8>
   349b8:	ldr	r0, [pc, #168]	; 34a68 <__flatcc_fb_clear_parser@@Base+0x14fc>
   349bc:	add	r3, pc, r3
   349c0:	add	r3, r3, #188	; 0xbc
   349c4:	add	r1, pc, r1
   349c8:	add	r0, pc, r0
   349cc:	bl	14118 <__assert_fail@plt>
   349d0:	andeq	r5, r2, r4, asr sl
   349d4:	strdeq	r5, [r2], -ip
   349d8:	ldrdeq	r5, [r2], -ip
   349dc:	andeq	r5, r2, r4, lsl pc
   349e0:	muleq	r2, r8, sp
   349e4:	muleq	r2, ip, sp
   349e8:	andeq	r5, r2, ip, asr #27
   349ec:	strheq	r6, [r2], -r0
   349f0:	ldrdeq	r5, [r2], -r0
   349f4:	andeq	r5, r2, r0, lsl #30
   349f8:	andeq	r5, r2, ip, ror sp
   349fc:	andeq	r5, r2, r8, asr #22
   34a00:	andeq	r5, r2, r0, asr fp
   34a04:	muleq	r2, ip, r8
   34a08:	andeq	r5, r2, r8, asr r8
   34a0c:	andeq	r5, r2, r8, lsl #24
   34a10:	ldrdeq	r5, [r2], -r4
   34a14:	andeq	r5, r2, r0, asr #16
   34a18:	andeq	r5, r2, r4, lsl r8
   34a1c:	ldrdeq	r5, [r2], -r8
   34a20:	andeq	r5, r2, ip, lsr #14
   34a24:	andeq	r5, r2, r0, asr #13
   34a28:	andeq	r5, r2, ip, lsl #11
   34a2c:	andeq	r5, r2, r0, ror r6
   34a30:	andeq	r5, r2, r4, asr #11
   34a34:	andeq	r5, r2, r4, ror #14
   34a38:	andeq	r5, r2, r4, asr r6
   34a3c:	andeq	r5, r2, r8, lsr #12
   34a40:	muleq	r2, r4, r5
   34a44:	strdeq	r5, [r2], -r0
   34a48:			; <UNDEFINED> instruction: 0x000251bc
   34a4c:	andeq	r5, r2, ip, asr #3
   34a50:	andeq	r5, r2, ip, asr r1
   34a54:	muleq	r2, ip, sp
   34a58:	strdeq	r4, [r2], -r8
   34a5c:			; <UNDEFINED> instruction: 0x000253b8
   34a60:	andeq	r4, r2, r8, ror sp
   34a64:	ldrdeq	r4, [r2], -r4	; <UNPREDICTABLE>
   34a68:	andeq	r5, r2, ip, ror #1
   34a6c:	ldrh	r3, [r1, #8]
   34a70:	strd	r4, [sp, #-36]!	; 0xffffffdc
   34a74:	strd	r6, [sp, #8]
   34a78:	strd	r8, [sp, #16]
   34a7c:	strd	sl, [sp, #24]
   34a80:	str	lr, [sp, #32]
   34a84:	sub	sp, sp, #260	; 0x104
   34a88:	cmp	r3, #0
   34a8c:	str	r1, [sp, #32]
   34a90:	bne	36a40 <__flatcc_fb_clear_parser@@Base+0x34d4>
   34a94:	ldr	r3, [sp, #32]
   34a98:	ldrh	r5, [r3, #48]	; 0x30
   34a9c:	cmp	r5, #0
   34aa0:	bne	36a10 <__flatcc_fb_clear_parser@@Base+0x34a4>
   34aa4:	ldr	r3, [sp, #32]
   34aa8:	mov	r2, #0
   34aac:	add	r7, sp, #108	; 0x6c
   34ab0:	mov	fp, r0
   34ab4:	ldr	r4, [r3, #28]
   34ab8:	mov	r3, #0
   34abc:	strd	r2, [sp, #108]	; 0x6c
   34ac0:	strd	r2, [r7, #8]
   34ac4:	strd	r2, [r7, #16]
   34ac8:	cmp	r4, #0
   34acc:	strd	r2, [r7, #24]
   34ad0:	strd	r2, [r7, #32]
   34ad4:	strd	r2, [r7, #40]	; 0x28
   34ad8:	beq	36520 <__flatcc_fb_clear_parser@@Base+0x2fb4>
   34adc:	ldr	r3, [pc, #4072]	; 35acc <__flatcc_fb_clear_parser@@Base+0x2560>
   34ae0:	mov	sl, r5
   34ae4:	mov	r6, #100	; 0x64
   34ae8:	ldr	r9, [pc, #4064]	; 35ad0 <__flatcc_fb_clear_parser@@Base+0x2564>
   34aec:	ldr	r8, [pc, #4064]	; 35ad4 <__flatcc_fb_clear_parser@@Base+0x2568>
   34af0:	add	r3, pc, r3
   34af4:	mov	r5, r3
   34af8:	add	r9, pc, r9
   34afc:	add	r8, pc, r8
   34b00:	b	34b44 <__flatcc_fb_clear_parser@@Base+0x15d8>
   34b04:	add	r1, r9, r1
   34b08:	str	r4, [r7, r2, lsl #2]
   34b0c:	ldr	r2, [r1, #204]	; 0xcc
   34b10:	cmp	r2, #0
   34b14:	bne	34bc0 <__flatcc_fb_clear_parser@@Base+0x1654>
   34b18:	ldrh	r3, [r4, #16]
   34b1c:	cmp	r3, #0
   34b20:	bne	360d8 <__flatcc_fb_clear_parser@@Base+0x2b6c>
   34b24:	ldr	r4, [r4]
   34b28:	subs	r6, r6, #1
   34b2c:	movne	r2, #1
   34b30:	moveq	r2, #0
   34b34:	cmp	r4, #0
   34b38:	moveq	r2, #0
   34b3c:	cmp	r2, #0
   34b40:	beq	34c5c <__flatcc_fb_clear_parser@@Base+0x16f0>
   34b44:	ldr	r3, [r4, #4]
   34b48:	ldr	r0, [fp, #412]	; 0x19c
   34b4c:	ldm	r3, {r1, r2}
   34b50:	add	r0, r0, #16
   34b54:	bl	3f00c <fb_name_table_find@@Base>
   34b58:	subs	r2, r0, #0
   34b5c:	beq	35c88 <__flatcc_fb_clear_parser@@Base+0x271c>
   34b60:	ldr	r2, [r2, #24]
   34b64:	cmp	r2, #0
   34b68:	beq	34b24 <__flatcc_fb_clear_parser@@Base+0x15b8>
   34b6c:	mov	r3, #8
   34b70:	asr	r3, r3, r2
   34b74:	ands	ip, r3, #1
   34b78:	beq	34c38 <__flatcc_fb_clear_parser@@Base+0x16cc>
   34b7c:	ldr	ip, [r7, r2, lsl #2]
   34b80:	mov	r3, #1
   34b84:	lsl	r1, r2, #2
   34b88:	orr	sl, sl, r3, lsl r2
   34b8c:	uxth	sl, sl
   34b90:	cmp	ip, #0
   34b94:	beq	34b04 <__flatcc_fb_clear_parser@@Base+0x1598>
   34b98:	mov	r2, #0
   34b9c:	ldr	r1, [r4, #4]
   34ba0:	mov	r0, fp
   34ba4:	mov	r3, r2
   34ba8:	str	r2, [sp]
   34bac:	str	r2, [sp, #4]
   34bb0:	ldr	r2, [pc, #3872]	; 35ad8 <__flatcc_fb_clear_parser@@Base+0x256c>
   34bb4:	add	r2, pc, r2
   34bb8:	bl	2ebf8 <__flatcc_error_report@@Base>
   34bbc:	b	34b24 <__flatcc_fb_clear_parser@@Base+0x15b8>
   34bc0:	cmp	r2, #2
   34bc4:	bne	34bf8 <__flatcc_fb_clear_parser@@Base+0x168c>
   34bc8:	ldrh	r3, [r4, #16]
   34bcc:	cmp	r3, #2
   34bd0:	beq	34b24 <__flatcc_fb_clear_parser@@Base+0x15b8>
   34bd4:	ldr	r2, [pc, #3840]	; 35adc <__flatcc_fb_clear_parser@@Base+0x2570>
   34bd8:	mov	r3, ip
   34bdc:	mov	r0, fp
   34be0:	ldr	r1, [r4, #4]
   34be4:	str	ip, [sp]
   34be8:	str	ip, [sp, #4]
   34bec:	add	r2, pc, r2
   34bf0:	bl	2ebf8 <__flatcc_error_report@@Base>
   34bf4:	b	34b24 <__flatcc_fb_clear_parser@@Base+0x15b8>
   34bf8:	cmp	r2, #5
   34bfc:	beq	35cac <__flatcc_fb_clear_parser@@Base+0x2740>
   34c00:	cmp	r2, #4
   34c04:	bne	35cdc <__flatcc_fb_clear_parser@@Base+0x2770>
   34c08:	ldrh	r3, [r4, #16]
   34c0c:	sub	r3, r3, #4
   34c10:	cmp	r3, #1
   34c14:	bls	34b24 <__flatcc_fb_clear_parser@@Base+0x15b8>
   34c18:	mov	r3, ip
   34c1c:	mov	r2, r5
   34c20:	ldr	r1, [r4, #4]
   34c24:	mov	r0, fp
   34c28:	str	ip, [sp]
   34c2c:	str	ip, [sp, #4]
   34c30:	bl	2ebf8 <__flatcc_error_report@@Base>
   34c34:	b	34b24 <__flatcc_fb_clear_parser@@Base+0x15b8>
   34c38:	ldr	r2, [pc, #3744]	; 35ae0 <__flatcc_fb_clear_parser@@Base+0x2574>
   34c3c:	mov	r3, ip
   34c40:	mov	r0, fp
   34c44:	ldr	r1, [r4, #4]
   34c48:	str	ip, [sp]
   34c4c:	str	ip, [sp, #4]
   34c50:	add	r2, pc, r2
   34c54:	bl	2ebf8 <__flatcc_error_report@@Base>
   34c58:	b	34b24 <__flatcc_fb_clear_parser@@Base+0x15b8>
   34c5c:	cmp	r4, #0
   34c60:	beq	34c84 <__flatcc_fb_clear_parser@@Base+0x1718>
   34c64:	mov	r3, r2
   34c68:	ldr	r1, [r4, #4]
   34c6c:	mov	r0, fp
   34c70:	str	r2, [sp]
   34c74:	str	r2, [sp, #4]
   34c78:	ldr	r2, [pc, #3684]	; 35ae4 <__flatcc_fb_clear_parser@@Base+0x2578>
   34c7c:	add	r2, pc, r2
   34c80:	bl	2ebf8 <__flatcc_error_report@@Base>
   34c84:	ldr	r3, [sp, #32]
   34c88:	ldr	r5, [r3, #20]
   34c8c:	strh	sl, [r3, #92]	; 0x5c
   34c90:	cmp	r5, #0
   34c94:	beq	36684 <__flatcc_fb_clear_parser@@Base+0x3118>
   34c98:	ldr	r3, [pc, #3656]	; 35ae8 <__flatcc_fb_clear_parser@@Base+0x257c>
   34c9c:	mov	r2, #0
   34ca0:	mov	r1, #0
   34ca4:	ldr	r0, [pc, #3648]	; 35aec <__flatcc_fb_clear_parser@@Base+0x2580>
   34ca8:	str	r1, [sp, #16]
   34cac:	str	r1, [sp, #36]	; 0x24
   34cb0:	add	r3, pc, r3
   34cb4:	str	r2, [sp, #44]	; 0x2c
   34cb8:	str	r1, [sp, #52]	; 0x34
   34cbc:	add	r0, pc, r0
   34cc0:	str	r3, [sp, #80]	; 0x50
   34cc4:	mov	r3, #0
   34cc8:	str	r1, [sp, #60]	; 0x3c
   34ccc:	strd	r2, [sp, #8]
   34cd0:	str	r0, [sp, #24]
   34cd4:	str	r3, [sp, #48]	; 0x30
   34cd8:	strd	r2, [sp, #72]	; 0x48
   34cdc:	ldr	r3, [pc, #3596]	; 35af0 <__flatcc_fb_clear_parser@@Base+0x2584>
   34ce0:	add	r3, pc, r3
   34ce4:	str	r3, [sp, #68]	; 0x44
   34ce8:	ldr	r3, [sp, #32]
   34cec:	add	r3, r3, #56	; 0x38
   34cf0:	str	r3, [sp, #28]
   34cf4:	mov	r2, #1
   34cf8:	mov	r1, r5
   34cfc:	ldr	r0, [sp, #28]
   34d00:	bl	2c7ac <fb_symbol_table_insert_item@@Base>
   34d04:	subs	sl, r0, #0
   34d08:	bne	35904 <__flatcc_fb_clear_parser@@Base+0x2398>
   34d0c:	ldrh	r3, [r5, #8]
   34d10:	cmp	r3, #5
   34d14:	bne	36030 <__flatcc_fb_clear_parser@@Base+0x2ac4>
   34d18:	ldrh	r3, [r5, #24]
   34d1c:	cmp	r3, #1
   34d20:	beq	34f18 <__flatcc_fb_clear_parser@@Base+0x19ac>
   34d24:	sub	r3, r3, #7
   34d28:	cmp	r3, #1
   34d2c:	bls	35a30 <__flatcc_fb_clear_parser@@Base+0x24c4>
   34d30:	ldr	r4, [r5, #64]	; 0x40
   34d34:	ldr	r3, [sp, #44]	; 0x2c
   34d38:	ldr	r2, [sp, #48]	; 0x30
   34d3c:	cmp	r4, #0
   34d40:	moveq	r8, r4
   34d44:	strheq	r4, [r5, #72]	; 0x48
   34d48:	str	r3, [r7]
   34d4c:	strd	r2, [r7, #4]
   34d50:	strd	r2, [r7, #12]
   34d54:	strd	r2, [r7, #20]
   34d58:	strd	r2, [r7, #28]
   34d5c:	strd	r2, [r7, #36]	; 0x24
   34d60:	str	r2, [r7, #44]	; 0x2c
   34d64:	beq	351ac <__flatcc_fb_clear_parser@@Base+0x1c40>
   34d68:	ldr	r9, [pc, #3460]	; 35af4 <__flatcc_fb_clear_parser@@Base+0x2588>
   34d6c:	mov	r8, #0
   34d70:	mov	r6, #100	; 0x64
   34d74:	add	r9, pc, r9
   34d78:	b	34dc0 <__flatcc_fb_clear_parser@@Base+0x1854>
   34d7c:	ldr	r2, [sp, #24]
   34d80:	str	r4, [r7, r1, lsl #2]
   34d84:	add	r3, r2, r3
   34d88:	ldr	r2, [r3, #204]	; 0xcc
   34d8c:	cmp	r2, #0
   34d90:	bne	34f84 <__flatcc_fb_clear_parser@@Base+0x1a18>
   34d94:	ldrh	r3, [r4, #16]
   34d98:	cmp	r3, #0
   34d9c:	bne	35bfc <__flatcc_fb_clear_parser@@Base+0x2690>
   34da0:	ldr	r4, [r4]
   34da4:	subs	r6, r6, #1
   34da8:	movne	r2, #1
   34dac:	moveq	r2, #0
   34db0:	cmp	r4, #0
   34db4:	moveq	r2, #0
   34db8:	cmp	r2, #0
   34dbc:	beq	35020 <__flatcc_fb_clear_parser@@Base+0x1ab4>
   34dc0:	ldr	r3, [r4, #4]
   34dc4:	ldr	r0, [fp, #412]	; 0x19c
   34dc8:	ldm	r3, {r1, r2}
   34dcc:	add	r0, r0, #16
   34dd0:	bl	3f00c <fb_name_table_find@@Base>
   34dd4:	subs	r2, r0, #0
   34dd8:	beq	358e0 <__flatcc_fb_clear_parser@@Base+0x2374>
   34ddc:	ldr	r1, [r2, #24]
   34de0:	cmp	r1, #0
   34de4:	beq	34da0 <__flatcc_fb_clear_parser@@Base+0x1834>
   34de8:	movw	r3, #4038	; 0xfc6
   34dec:	asr	r3, r3, r1
   34df0:	ands	r2, r3, #1
   34df4:	beq	34ffc <__flatcc_fb_clear_parser@@Base+0x1a90>
   34df8:	ldr	ip, [r7, r1, lsl #2]
   34dfc:	mov	r2, #1
   34e00:	lsl	r3, r1, #2
   34e04:	orr	r8, r8, r2, lsl r1
   34e08:	uxth	r8, r8
   34e0c:	cmp	ip, #0
   34e10:	beq	34d7c <__flatcc_fb_clear_parser@@Base+0x1810>
   34e14:	mov	r2, #0
   34e18:	ldr	r1, [r4, #4]
   34e1c:	mov	r0, fp
   34e20:	mov	r3, r2
   34e24:	str	r2, [sp]
   34e28:	str	r2, [sp, #4]
   34e2c:	ldr	r2, [pc, #3268]	; 35af8 <__flatcc_fb_clear_parser@@Base+0x258c>
   34e30:	add	r2, pc, r2
   34e34:	bl	2ebf8 <__flatcc_error_report@@Base>
   34e38:	b	34da0 <__flatcc_fb_clear_parser@@Base+0x1834>
   34e3c:	mov	r3, #0
   34e40:	str	r3, [sp, #56]	; 0x38
   34e44:	ldr	r1, [sp, #16]
   34e48:	mov	ip, #14
   34e4c:	ldrh	lr, [sl, #104]	; 0x68
   34e50:	ldrd	r2, [sl, #112]	; 0x70
   34e54:	eor	r1, r1, #1
   34e58:	str	sl, [r5, #16]
   34e5c:	cmp	r0, #4
   34e60:	movne	r1, #0
   34e64:	andeq	r1, r1, #1
   34e68:	strh	ip, [r5, #24]
   34e6c:	cmp	r1, #0
   34e70:	strh	lr, [r5, #74]	; 0x4a
   34e74:	strd	r2, [r5, #88]	; 0x58
   34e78:	ldrh	r3, [r5, #56]	; 0x38
   34e7c:	bne	365f0 <__flatcc_fb_clear_parser@@Base+0x3084>
   34e80:	cmp	r3, #0
   34e84:	bne	36190 <__flatcc_fb_clear_parser@@Base+0x2c24>
   34e88:	cmp	r0, #3
   34e8c:	bne	35468 <__flatcc_fb_clear_parser@@Base+0x1efc>
   34e90:	ldr	r3, [sp, #44]	; 0x2c
   34e94:	mov	r4, r5
   34e98:	mov	r0, fp
   34e9c:	ldr	r1, [sp, #48]	; 0x30
   34ea0:	ldr	r2, [sl, #40]	; 0x28
   34ea4:	mov	r8, r3
   34ea8:	mov	r3, #5
   34eac:	mov	r9, r1
   34eb0:	mov	r1, sl
   34eb4:	strh	r3, [r5, #56]	; 0x38
   34eb8:	strd	r8, [r4, #48]!	; 0x30
   34ebc:	mov	r3, r4
   34ec0:	bl	388cc <__flatcc_fb_coerce_scalar_type@@Base>
   34ec4:	cmp	r0, #0
   34ec8:	bne	35620 <__flatcc_fb_clear_parser@@Base+0x20b4>
   34ecc:	ldr	r3, [fp, #212]	; 0xd4
   34ed0:	cmp	r3, #0
   34ed4:	beq	35468 <__flatcc_fb_clear_parser@@Base+0x1efc>
   34ed8:	ldr	r0, [r5, #16]
   34edc:	mov	r1, r4
   34ee0:	add	r0, r0, #72	; 0x48
   34ee4:	bl	3f80c <fb_value_set_find_item@@Base>
   34ee8:	subs	r3, r0, #0
   34eec:	bne	35468 <__flatcc_fb_clear_parser@@Base+0x1efc>
   34ef0:	ldr	r2, [pc, #3076]	; 35afc <__flatcc_fb_clear_parser@@Base+0x2590>
   34ef4:	mov	r0, fp
   34ef8:	str	r3, [sp]
   34efc:	str	r3, [sp, #4]
   34f00:	ldr	r3, [sl, #4]
   34f04:	add	r2, pc, r2
   34f08:	ldr	r1, [r5, #4]
   34f0c:	bl	2ebf8 <__flatcc_error_report@@Base>
   34f10:	mov	r3, #1
   34f14:	strh	r3, [r5, #24]
   34f18:	ldr	r5, [r5]
   34f1c:	cmp	r5, #0
   34f20:	bne	34cf4 <__flatcc_fb_clear_parser@@Base+0x1788>
   34f24:	ldr	r3, [sp, #16]
   34f28:	cmp	r3, #0
   34f2c:	beq	35ddc <__flatcc_fb_clear_parser@@Base+0x2870>
   34f30:	ldr	r3, [sp, #52]	; 0x34
   34f34:	cmp	r3, #0
   34f38:	beq	34f78 <__flatcc_fb_clear_parser@@Base+0x1a0c>
   34f3c:	ldr	r2, [sp, #32]
   34f40:	ldr	r1, [sp, #52]	; 0x34
   34f44:	ldrh	r3, [r2, #10]
   34f48:	cmp	r1, #1
   34f4c:	orr	r3, r3, #8
   34f50:	strh	r3, [r2, #10]
   34f54:	beq	34f78 <__flatcc_fb_clear_parser@@Base+0x1a0c>
   34f58:	ldr	r3, [fp, #156]	; 0x9c
   34f5c:	cmp	r3, #0
   34f60:	movne	r3, #0
   34f64:	strne	r3, [sp, #52]	; 0x34
   34f68:	beq	36a04 <__flatcc_fb_clear_parser@@Base+0x3498>
   34f6c:	ldr	r3, [sp, #16]
   34f70:	cmp	r3, #0
   34f74:	beq	36058 <__flatcc_fb_clear_parser@@Base+0x2aec>
   34f78:	mvn	r3, #0
   34f7c:	str	r3, [sp, #52]	; 0x34
   34f80:	b	36058 <__flatcc_fb_clear_parser@@Base+0x2aec>
   34f84:	cmp	r2, #2
   34f88:	bne	34fbc <__flatcc_fb_clear_parser@@Base+0x1a50>
   34f8c:	ldrh	r3, [r4, #16]
   34f90:	cmp	r3, #2
   34f94:	beq	34da0 <__flatcc_fb_clear_parser@@Base+0x1834>
   34f98:	ldr	r2, [pc, #2912]	; 35b00 <__flatcc_fb_clear_parser@@Base+0x2594>
   34f9c:	mov	r3, ip
   34fa0:	mov	r0, fp
   34fa4:	ldr	r1, [r4, #4]
   34fa8:	str	ip, [sp]
   34fac:	str	ip, [sp, #4]
   34fb0:	add	r2, pc, r2
   34fb4:	bl	2ebf8 <__flatcc_error_report@@Base>
   34fb8:	b	34da0 <__flatcc_fb_clear_parser@@Base+0x1834>
   34fbc:	cmp	r2, #5
   34fc0:	beq	359c8 <__flatcc_fb_clear_parser@@Base+0x245c>
   34fc4:	cmp	r2, #4
   34fc8:	bne	359f8 <__flatcc_fb_clear_parser@@Base+0x248c>
   34fcc:	ldrh	r3, [r4, #16]
   34fd0:	sub	r3, r3, #4
   34fd4:	cmp	r3, #1
   34fd8:	bls	34da0 <__flatcc_fb_clear_parser@@Base+0x1834>
   34fdc:	mov	r3, ip
   34fe0:	mov	r2, r9
   34fe4:	ldr	r1, [r4, #4]
   34fe8:	mov	r0, fp
   34fec:	str	ip, [sp]
   34ff0:	str	ip, [sp, #4]
   34ff4:	bl	2ebf8 <__flatcc_error_report@@Base>
   34ff8:	b	34da0 <__flatcc_fb_clear_parser@@Base+0x1834>
   34ffc:	mov	r3, r2
   35000:	ldr	r1, [r4, #4]
   35004:	mov	r0, fp
   35008:	str	r2, [sp]
   3500c:	str	r2, [sp, #4]
   35010:	ldr	r2, [pc, #2796]	; 35b04 <__flatcc_fb_clear_parser@@Base+0x2598>
   35014:	add	r2, pc, r2
   35018:	bl	2ebf8 <__flatcc_error_report@@Base>
   3501c:	b	34da0 <__flatcc_fb_clear_parser@@Base+0x1834>
   35020:	cmp	r4, #0
   35024:	ldr	r6, [sp, #132]	; 0x84
   35028:	beq	3504c <__flatcc_fb_clear_parser@@Base+0x1ae0>
   3502c:	mov	r3, r2
   35030:	ldr	r1, [r4, #4]
   35034:	mov	r0, fp
   35038:	str	r2, [sp]
   3503c:	str	r2, [sp, #4]
   35040:	ldr	r2, [pc, #2752]	; 35b08 <__flatcc_fb_clear_parser@@Base+0x259c>
   35044:	add	r2, pc, r2
   35048:	bl	2ebf8 <__flatcc_error_report@@Base>
   3504c:	cmp	r6, #0
   35050:	strh	r8, [r5, #72]	; 0x48
   35054:	beq	35150 <__flatcc_fb_clear_parser@@Base+0x1be4>
   35058:	ldrh	r3, [r5, #24]
   3505c:	ldr	r2, [sp, #32]
   35060:	cmp	r3, #7
   35064:	ldr	r4, [r2, #12]
   35068:	bne	36534 <__flatcc_fb_clear_parser@@Base+0x2fc8>
   3506c:	ldr	r3, [r5, #16]
   35070:	cmp	r3, #4
   35074:	bne	36534 <__flatcc_fb_clear_parser@@Base+0x2fc8>
   35078:	ldrh	r3, [r6, #16]
   3507c:	cmp	r3, #2
   35080:	bne	35ff0 <__flatcc_fb_clear_parser@@Base+0x2a84>
   35084:	ldr	r1, [r6, #8]
   35088:	ldr	ip, [r6, #12]
   3508c:	cmp	ip, #0
   35090:	ble	364fc <__flatcc_fb_clear_parser@@Base+0x2f90>
   35094:	sub	r2, ip, #1
   35098:	ldrb	r3, [r1, r2]
   3509c:	cmp	r3, #46	; 0x2e
   350a0:	addne	r3, r1, r2
   350a4:	bne	350c0 <__flatcc_fb_clear_parser@@Base+0x1b54>
   350a8:	b	36510 <__flatcc_fb_clear_parser@@Base+0x2fa4>
   350ac:	ldrb	lr, [r3, #-1]!
   350b0:	sub	r0, r2, #1
   350b4:	cmp	lr, #46	; 0x2e
   350b8:	beq	35c20 <__flatcc_fb_clear_parser@@Base+0x26b4>
   350bc:	mov	r2, r0
   350c0:	cmp	r2, #0
   350c4:	bne	350ac <__flatcc_fb_clear_parser@@Base+0x1b40>
   350c8:	mov	r8, r1
   350cc:	str	ip, [sp, #20]
   350d0:	clz	r3, r2
   350d4:	cmp	r4, #0
   350d8:	lsr	r3, r3, #5
   350dc:	moveq	r3, #0
   350e0:	cmp	r3, #0
   350e4:	addne	r3, fp, #524	; 0x20c
   350e8:	strne	r3, [sp, #40]	; 0x28
   350ec:	bne	357f4 <__flatcc_fb_clear_parser@@Base+0x2288>
   350f0:	ldr	r0, [fp, #412]	; 0x19c
   350f4:	cmp	r0, #0
   350f8:	beq	358b8 <__flatcc_fb_clear_parser@@Base+0x234c>
   350fc:	cmp	r2, #0
   35100:	moveq	r1, #0
   35104:	bl	2d85c <fb_scope_table_find@@Base>
   35108:	cmp	r0, #0
   3510c:	beq	358b0 <__flatcc_fb_clear_parser@@Base+0x2344>
   35110:	mov	r1, r8
   35114:	add	r0, r0, #4
   35118:	ldr	r2, [sp, #20]
   3511c:	bl	2c7d4 <fb_symbol_table_find@@Base>
   35120:	subs	r3, r0, #0
   35124:	beq	358b0 <__flatcc_fb_clear_parser@@Base+0x2344>
   35128:	ldrh	r2, [r3, #8]
   3512c:	cmp	r2, #0
   35130:	beq	35148 <__flatcc_fb_clear_parser@@Base+0x1bdc>
   35134:	ldr	ip, [fp, #176]	; 0xb0
   35138:	cmp	ip, #0
   3513c:	beq	369b8 <__flatcc_fb_clear_parser@@Base+0x344c>
   35140:	cmp	r2, #1
   35144:	bne	36968 <__flatcc_fb_clear_parser@@Base+0x33fc>
   35148:	ldrh	r8, [r5, #72]	; 0x48
   3514c:	str	r3, [r5, #104]	; 0x68
   35150:	tst	r8, #256	; 0x100
   35154:	beq	35164 <__flatcc_fb_clear_parser@@Base+0x1bf8>
   35158:	ldrh	r3, [r5, #24]
   3515c:	cmp	r3, #8
   35160:	beq	35d14 <__flatcc_fb_clear_parser@@Base+0x27a8>
   35164:	tst	r8, #1024	; 0x400
   35168:	beq	351ac <__flatcc_fb_clear_parser@@Base+0x1c40>
   3516c:	ldrh	r3, [r5, #24]
   35170:	cmp	r3, #7
   35174:	bne	35184 <__flatcc_fb_clear_parser@@Base+0x1c18>
   35178:	ldr	r3, [r5, #16]
   3517c:	cmp	r3, #4
   35180:	beq	35ff8 <__flatcc_fb_clear_parser@@Base+0x2a8c>
   35184:	mov	r2, #0
   35188:	ldr	r1, [r5, #4]
   3518c:	mov	r0, fp
   35190:	mov	r3, r2
   35194:	str	r2, [sp]
   35198:	str	r2, [sp, #4]
   3519c:	ldr	r2, [pc, #2408]	; 35b0c <__flatcc_fb_clear_parser@@Base+0x25a0>
   351a0:	add	r2, pc, r2
   351a4:	bl	2ebf8 <__flatcc_error_report@@Base>
   351a8:	ldrh	r8, [r5, #72]	; 0x48
   351ac:	tst	r8, #2048	; 0x800
   351b0:	beq	351e8 <__flatcc_fb_clear_parser@@Base+0x1c7c>
   351b4:	ldrh	r3, [r5, #24]
   351b8:	cmp	r3, #7
   351bc:	beq	35c38 <__flatcc_fb_clear_parser@@Base+0x26cc>
   351c0:	mov	r2, #0
   351c4:	ldr	r1, [r5, #4]
   351c8:	mov	r0, fp
   351cc:	mov	r3, r2
   351d0:	str	r2, [sp]
   351d4:	str	r2, [sp, #4]
   351d8:	ldr	r2, [pc, #2352]	; 35b10 <__flatcc_fb_clear_parser@@Base+0x25a4>
   351dc:	add	r2, pc, r2
   351e0:	bl	2ebf8 <__flatcc_error_report@@Base>
   351e4:	ldrh	r8, [r5, #72]	; 0x48
   351e8:	and	r8, r8, #3072	; 0xc00
   351ec:	cmp	r8, #3072	; 0xc00
   351f0:	beq	35c48 <__flatcc_fb_clear_parser@@Base+0x26dc>
   351f4:	ldr	r3, [sp, #112]	; 0x70
   351f8:	adds	r1, r3, #0
   351fc:	str	r3, [sp, #20]
   35200:	ldrd	r2, [sp, #8]
   35204:	movne	r1, #1
   35208:	str	r1, [sp, #40]	; 0x28
   3520c:	mov	r0, r2
   35210:	orrs	r3, r0, r3
   35214:	moveq	r3, r1
   35218:	movne	r3, #0
   3521c:	cmp	r3, #0
   35220:	bne	35a64 <__flatcc_fb_clear_parser@@Base+0x24f8>
   35224:	ldr	r3, [sp, #16]
   35228:	cmp	r3, #0
   3522c:	bne	35278 <__flatcc_fb_clear_parser@@Base+0x1d0c>
   35230:	ldrd	r0, [sp, #8]
   35234:	ldrd	r2, [fp, #216]	; 0xd8
   35238:	cmp	r3, r1
   3523c:	cmpeq	r2, r0
   35240:	bls	35a9c <__flatcc_fb_clear_parser@@Base+0x2530>
   35244:	ldr	r2, [sp, #36]	; 0x24
   35248:	cmp	r2, #0
   3524c:	bne	35260 <__flatcc_fb_clear_parser@@Base+0x1cf4>
   35250:	ldrh	r3, [sp, #8]
   35254:	str	r2, [sp, #16]
   35258:	str	r3, [r5, #96]	; 0x60
   3525c:	str	r2, [r5, #100]	; 0x64
   35260:	ldr	r3, [sp, #8]
   35264:	adds	r3, r3, #1
   35268:	str	r3, [sp, #8]
   3526c:	ldr	r3, [sp, #12]
   35270:	adc	r3, r3, #0
   35274:	str	r3, [sp, #12]
   35278:	ldrh	r3, [r5, #24]
   3527c:	sub	r3, r3, #7
   35280:	cmp	r3, #5
   35284:	addls	pc, pc, r3, lsl #2
   35288:	b	36a98 <__flatcc_fb_clear_parser@@Base+0x352c>
   3528c:	b	355d0 <__flatcc_fb_clear_parser@@Base+0x2064>
   35290:	b	35558 <__flatcc_fb_clear_parser@@Base+0x1fec>
   35294:	b	35544 <__flatcc_fb_clear_parser@@Base+0x1fd8>
   35298:	b	35454 <__flatcc_fb_clear_parser@@Base+0x1ee8>
   3529c:	b	35368 <__flatcc_fb_clear_parser@@Base+0x1dfc>
   352a0:	b	352a4 <__flatcc_fb_clear_parser@@Base+0x1d38>
   352a4:	ldr	ip, [r5, #16]
   352a8:	ldr	r3, [sp, #32]
   352ac:	cmp	ip, #0
   352b0:	ldr	r4, [r3, #12]
   352b4:	beq	35db4 <__flatcc_fb_clear_parser@@Base+0x2848>
   352b8:	mov	r8, ip
   352bc:	mov	r2, #0
   352c0:	b	352cc <__flatcc_fb_clear_parser@@Base+0x1d60>
   352c4:	mov	r2, r3
   352c8:	mov	r8, r6
   352cc:	ldr	r6, [r8]
   352d0:	add	r3, r2, #1
   352d4:	cmp	r6, #0
   352d8:	bne	352c4 <__flatcc_fb_clear_parser@@Base+0x1d58>
   352dc:	sub	r1, r3, #1
   352e0:	cmp	r4, #0
   352e4:	clz	r1, r1
   352e8:	lsr	r1, r1, #5
   352ec:	moveq	r1, #0
   352f0:	cmp	r1, #0
   352f4:	beq	35d40 <__flatcc_fb_clear_parser@@Base+0x27d4>
   352f8:	add	r3, fp, #524	; 0x20c
   352fc:	add	r9, fp, #352	; 0x160
   35300:	str	r3, [sp, #56]	; 0x38
   35304:	ldr	r3, [r8, #4]
   35308:	add	r0, r4, #4
   3530c:	ldm	r3, {r1, r2}
   35310:	bl	2c7d4 <fb_symbol_table_find@@Base>
   35314:	subs	sl, r0, #0
   35318:	beq	35f28 <__flatcc_fb_clear_parser@@Base+0x29bc>
   3531c:	ldrh	r2, [sl, #8]
   35320:	cmp	r2, #4
   35324:	bhi	35f28 <__flatcc_fb_clear_parser@@Base+0x29bc>
   35328:	ldr	r3, [sp, #56]	; 0x38
   3532c:	ldr	r1, [sl, #16]
   35330:	mov	r0, r3
   35334:	str	r3, [sp, #64]	; 0x40
   35338:	bl	2c058 <ptr_set_find_item@@Base>
   3533c:	cmp	r0, #0
   35340:	beq	35f28 <__flatcc_fb_clear_parser@@Base+0x29bc>
   35344:	ldrh	r0, [sl, #8]
   35348:	cmp	r0, #4
   3534c:	addls	pc, pc, r0, lsl #2
   35350:	b	36ac0 <__flatcc_fb_clear_parser@@Base+0x3554>
   35354:	b	34e3c <__flatcc_fb_clear_parser@@Base+0x18d0>
   35358:	b	34e3c <__flatcc_fb_clear_parser@@Base+0x18d0>
   3535c:	b	36114 <__flatcc_fb_clear_parser@@Base+0x2ba8>
   35360:	b	360fc <__flatcc_fb_clear_parser@@Base+0x2b90>
   35364:	b	34e3c <__flatcc_fb_clear_parser@@Base+0x18d0>
   35368:	ldr	ip, [r5, #16]
   3536c:	ldr	r3, [sp, #32]
   35370:	cmp	ip, #0
   35374:	ldr	r4, [r3, #12]
   35378:	beq	35430 <__flatcc_fb_clear_parser@@Base+0x1ec4>
   3537c:	mov	r6, ip
   35380:	mov	r2, #0
   35384:	b	35390 <__flatcc_fb_clear_parser@@Base+0x1e24>
   35388:	mov	r2, r0
   3538c:	mov	r6, r3
   35390:	ldr	r3, [r6]
   35394:	add	r0, r2, #1
   35398:	cmp	r3, #0
   3539c:	bne	35388 <__flatcc_fb_clear_parser@@Base+0x1e1c>
   353a0:	sub	r3, r0, #1
   353a4:	cmp	r4, #0
   353a8:	clz	r3, r3
   353ac:	lsr	r3, r3, #5
   353b0:	moveq	r3, #0
   353b4:	cmp	r3, #0
   353b8:	addne	r9, fp, #524	; 0x20c
   353bc:	addne	r8, fp, #352	; 0x160
   353c0:	bne	3563c <__flatcc_fb_clear_parser@@Base+0x20d0>
   353c4:	cmp	r0, #1
   353c8:	moveq	r1, r3
   353cc:	movne	r1, ip
   353d0:	cmn	fp, #352	; 0x160
   353d4:	beq	35430 <__flatcc_fb_clear_parser@@Base+0x1ec4>
   353d8:	ldr	r0, [fp, #412]	; 0x19c
   353dc:	cmp	r0, #0
   353e0:	beq	35430 <__flatcc_fb_clear_parser@@Base+0x1ec4>
   353e4:	rsb	r2, r2, #0
   353e8:	bl	2d85c <fb_scope_table_find@@Base>
   353ec:	cmp	r0, #0
   353f0:	beq	3542c <__flatcc_fb_clear_parser@@Base+0x1ec0>
   353f4:	ldr	r3, [r6, #4]
   353f8:	add	r0, r0, #4
   353fc:	ldm	r3, {r1, r2}
   35400:	bl	2c7d4 <fb_symbol_table_find@@Base>
   35404:	subs	sl, r0, #0
   35408:	beq	3542c <__flatcc_fb_clear_parser@@Base+0x1ec0>
   3540c:	ldrh	r3, [sl, #8]
   35410:	cmp	r3, #4
   35414:	bhi	3542c <__flatcc_fb_clear_parser@@Base+0x1ec0>
   35418:	add	r0, fp, #524	; 0x20c
   3541c:	ldr	r1, [sl, #16]
   35420:	bl	2c058 <ptr_set_find_item@@Base>
   35424:	cmp	r0, #0
   35428:	bne	35674 <__flatcc_fb_clear_parser@@Base+0x2108>
   3542c:	ldr	ip, [r5, #16]
   35430:	mov	r3, r5
   35434:	mov	r1, ip
   35438:	ldr	r2, [pc, #1748]	; 35b14 <__flatcc_fb_clear_parser@@Base+0x25a8>
   3543c:	mov	r0, fp
   35440:	add	r2, pc, r2
   35444:	bl	30378 <error_ref_sym@@Base>
   35448:	mov	r3, #1
   3544c:	strh	r3, [r5, #24]
   35450:	b	34f18 <__flatcc_fb_clear_parser@@Base+0x19ac>
   35454:	ldrh	r3, [r5, #56]	; 0x38
   35458:	cmp	r3, #0
   3545c:	bne	36484 <__flatcc_fb_clear_parser@@Base+0x2f18>
   35460:	ldr	r3, [fp, #164]	; 0xa4
   35464:	str	r3, [sp, #56]	; 0x38
   35468:	ldr	r3, [sp, #16]
   3546c:	cmp	r3, #0
   35470:	bne	354f0 <__flatcc_fb_clear_parser@@Base+0x1f84>
   35474:	ldr	r3, [sp, #36]	; 0x24
   35478:	ldr	r2, [sp, #40]	; 0x28
   3547c:	eor	r3, r3, #1
   35480:	ands	r2, r3, r2
   35484:	ldr	r3, [sp, #20]
   35488:	bne	35fc0 <__flatcc_fb_clear_parser@@Base+0x2a54>
   3548c:	ldr	r1, [sp, #36]	; 0x24
   35490:	cmp	r3, #0
   35494:	movne	ip, #0
   35498:	andeq	ip, r1, #1
   3549c:	cmp	ip, #0
   354a0:	bne	36078 <__flatcc_fb_clear_parser@@Base+0x2b0c>
   354a4:	ldr	r3, [sp, #20]
   354a8:	cmp	r3, #0
   354ac:	beq	3574c <__flatcc_fb_clear_parser@@Base+0x21e0>
   354b0:	ldrh	r3, [r3, #16]
   354b4:	cmp	r3, #5
   354b8:	beq	35710 <__flatcc_fb_clear_parser@@Base+0x21a4>
   354bc:	cmp	r3, #4
   354c0:	ldr	r3, [sp, #20]
   354c4:	ldr	r1, [r3, #4]
   354c8:	mov	r3, ip
   354cc:	beq	36528 <__flatcc_fb_clear_parser@@Base+0x2fbc>
   354d0:	ldr	r2, [pc, #1600]	; 35b18 <__flatcc_fb_clear_parser@@Base+0x25ac>
   354d4:	add	r2, pc, r2
   354d8:	str	ip, [sp]
   354dc:	mov	r0, fp
   354e0:	str	ip, [sp, #4]
   354e4:	mov	ip, #1
   354e8:	str	ip, [sp, #16]
   354ec:	bl	2ebf8 <__flatcc_error_report@@Base>
   354f0:	ldrh	r3, [r5, #72]	; 0x48
   354f4:	tst	r3, #128	; 0x80
   354f8:	beq	34f18 <__flatcc_fb_clear_parser@@Base+0x19ac>
   354fc:	ldr	r3, [sp, #56]	; 0x38
   35500:	cmp	r3, #0
   35504:	ldr	r3, [sp, #52]	; 0x34
   35508:	add	r3, r3, #1
   3550c:	str	r3, [sp, #52]	; 0x34
   35510:	bne	34f18 <__flatcc_fb_clear_parser@@Base+0x19ac>
   35514:	mov	ip, #0
   35518:	mov	r0, fp
   3551c:	ldr	r1, [r5, #4]
   35520:	mov	r3, ip
   35524:	str	ip, [sp]
   35528:	str	ip, [sp, #4]
   3552c:	ldr	r2, [sp, #80]	; 0x50
   35530:	bl	2ebf8 <__flatcc_error_report@@Base>
   35534:	ldr	r5, [r5]
   35538:	cmp	r5, #0
   3553c:	bne	34cf4 <__flatcc_fb_clear_parser@@Base+0x1788>
   35540:	b	34f24 <__flatcc_fb_clear_parser@@Base+0x19b8>
   35544:	ldrh	r9, [r5, #56]	; 0x38
   35548:	cmp	r9, #0
   3554c:	bne	364c0 <__flatcc_fb_clear_parser@@Base+0x2f54>
   35550:	str	r9, [sp, #56]	; 0x38
   35554:	b	35468 <__flatcc_fb_clear_parser@@Base+0x1efc>
   35558:	ldrh	r2, [r5, #56]	; 0x38
   3555c:	cmp	r2, #13
   35560:	addne	r1, r5, #48	; 0x30
   35564:	beq	362c4 <__flatcc_fb_clear_parser@@Base+0x2d58>
   35568:	cmp	r2, #0
   3556c:	bne	35588 <__flatcc_fb_clear_parser@@Base+0x201c>
   35570:	ldr	r2, [sp, #44]	; 0x2c
   35574:	mov	r3, #5
   35578:	str	r2, [r5, #48]	; 0x30
   3557c:	ldr	r2, [sp, #48]	; 0x30
   35580:	strh	r3, [r5, #56]	; 0x38
   35584:	str	r2, [r5, #52]	; 0x34
   35588:	mov	r3, r1
   3558c:	mov	r0, fp
   35590:	ldr	r2, [r5, #16]
   35594:	mov	r1, r5
   35598:	bl	388cc <__flatcc_fb_coerce_scalar_type@@Base>
   3559c:	cmp	r0, #0
   355a0:	bne	35620 <__flatcc_fb_clear_parser@@Base+0x20b4>
   355a4:	mov	r2, #1
   355a8:	ldr	r3, [pc, #1388]	; 35b1c <__flatcc_fb_clear_parser@@Base+0x25b0>
   355ac:	str	r0, [r5, #92]	; 0x5c
   355b0:	str	r2, [sp, #56]	; 0x38
   355b4:	ldr	r2, [r5, #16]
   355b8:	add	r3, pc, r3
   355bc:	add	r3, r3, r2, lsl #2
   355c0:	ldr	r3, [r3, #128]	; 0x80
   355c4:	strh	r3, [r5, #74]	; 0x4a
   355c8:	str	r3, [r5, #88]	; 0x58
   355cc:	b	35468 <__flatcc_fb_clear_parser@@Base+0x1efc>
   355d0:	ldr	r3, [pc, #1352]	; 35b20 <__flatcc_fb_clear_parser@@Base+0x25b4>
   355d4:	mov	r2, #0
   355d8:	ldr	r1, [r5, #16]
   355dc:	str	r2, [r5, #92]	; 0x5c
   355e0:	ldrh	r9, [r5, #56]	; 0x38
   355e4:	add	r3, pc, r3
   355e8:	add	r3, r3, r1, lsl #2
   355ec:	ldr	r3, [r3, #128]	; 0x80
   355f0:	cmp	r9, r2
   355f4:	strh	r3, [r5, #74]	; 0x4a
   355f8:	str	r3, [r5, #88]	; 0x58
   355fc:	beq	35550 <__flatcc_fb_clear_parser@@Base+0x1fe4>
   35600:	mov	r3, r2
   35604:	ldr	r1, [r5, #4]
   35608:	mov	r0, fp
   3560c:	str	r2, [sp]
   35610:	str	r2, [sp, #4]
   35614:	ldr	r2, [pc, #1288]	; 35b24 <__flatcc_fb_clear_parser@@Base+0x25b8>
   35618:	add	r2, pc, r2
   3561c:	bl	2ebf8 <__flatcc_error_report@@Base>
   35620:	mov	r3, #1
   35624:	strh	r3, [r5, #24]
   35628:	ldr	r5, [r5]
   3562c:	cmp	r5, #0
   35630:	bne	34cf4 <__flatcc_fb_clear_parser@@Base+0x1788>
   35634:	b	34f24 <__flatcc_fb_clear_parser@@Base+0x19b8>
   35638:	mov	r4, r0
   3563c:	ldr	r3, [r6, #4]
   35640:	add	r0, r4, #4
   35644:	ldm	r3, {r1, r2}
   35648:	bl	2c7d4 <fb_symbol_table_find@@Base>
   3564c:	subs	sl, r0, #0
   35650:	beq	35938 <__flatcc_fb_clear_parser@@Base+0x23cc>
   35654:	ldrh	r3, [sl, #8]
   35658:	cmp	r3, #4
   3565c:	bhi	35938 <__flatcc_fb_clear_parser@@Base+0x23cc>
   35660:	mov	r0, r9
   35664:	ldr	r1, [sl, #16]
   35668:	bl	2c058 <ptr_set_find_item@@Base>
   3566c:	cmp	r0, #0
   35670:	beq	35938 <__flatcc_fb_clear_parser@@Base+0x23cc>
   35674:	ldrh	r3, [sl, #8]
   35678:	cmp	r3, #4
   3567c:	addls	pc, pc, r3, lsl #2
   35680:	b	36288 <__flatcc_fb_clear_parser@@Base+0x2d1c>
   35684:	b	35698 <__flatcc_fb_clear_parser@@Base+0x212c>
   35688:	b	35698 <__flatcc_fb_clear_parser@@Base+0x212c>
   3568c:	b	36288 <__flatcc_fb_clear_parser@@Base+0x2d1c>
   35690:	b	35698 <__flatcc_fb_clear_parser@@Base+0x212c>
   35694:	b	35698 <__flatcc_fb_clear_parser@@Base+0x212c>
   35698:	ldrh	r9, [r5, #56]	; 0x38
   3569c:	cmp	r9, #0
   356a0:	bne	36210 <__flatcc_fb_clear_parser@@Base+0x2ca4>
   356a4:	ldrh	r1, [sl, #104]	; 0x68
   356a8:	cmp	r3, #4
   356ac:	mov	r0, #15
   356b0:	ldrd	r2, [sl, #112]	; 0x70
   356b4:	str	sl, [r5, #16]
   356b8:	strh	r0, [r5, #24]
   356bc:	strh	r1, [r5, #74]	; 0x4a
   356c0:	strd	r2, [r5, #88]	; 0x58
   356c4:	bne	35550 <__flatcc_fb_clear_parser@@Base+0x1fe4>
   356c8:	ldr	r3, [sp, #16]
   356cc:	cmp	r3, #0
   356d0:	bne	36560 <__flatcc_fb_clear_parser@@Base+0x2ff4>
   356d4:	ldr	r2, [sp, #36]	; 0x24
   356d8:	cmp	r2, #0
   356dc:	bne	356ec <__flatcc_fb_clear_parser@@Base+0x2180>
   356e0:	ldrh	r3, [sp, #8]
   356e4:	str	r3, [r5, #96]	; 0x60
   356e8:	str	r2, [r5, #100]	; 0x64
   356ec:	ldr	r3, [sp, #8]
   356f0:	adds	r3, r3, #1
   356f4:	str	r3, [sp, #8]
   356f8:	mov	r3, #0
   356fc:	str	r3, [sp, #56]	; 0x38
   35700:	ldr	r3, [sp, #12]
   35704:	adc	r3, r3, #0
   35708:	str	r3, [sp, #12]
   3570c:	b	35474 <__flatcc_fb_clear_parser@@Base+0x1f08>
   35710:	ldr	r3, [sp, #20]
   35714:	ldrd	r0, [r3, #8]
   35718:	ldrd	r2, [fp, #216]	; 0xd8
   3571c:	cmp	r1, r3
   35720:	cmpeq	r0, r2
   35724:	bcs	3669c <__flatcc_fb_clear_parser@@Base+0x3130>
   35728:	uxth	r3, r0
   3572c:	ldrd	r0, [sp, #72]	; 0x48
   35730:	str	r3, [sp, #88]	; 0x58
   35734:	str	ip, [sp, #92]	; 0x5c
   35738:	ldrd	r2, [sp, #88]	; 0x58
   3573c:	cmp	r1, r3
   35740:	strd	r2, [r5, #96]	; 0x60
   35744:	cmpeq	r0, r2
   35748:	strdcc	r2, [sp, #72]	; 0x48
   3574c:	ldr	r3, [sp, #36]	; 0x24
   35750:	cmp	r3, #0
   35754:	beq	36a34 <__flatcc_fb_clear_parser@@Base+0x34c8>
   35758:	ldr	r1, [sp, #60]	; 0x3c
   3575c:	ldr	r3, [r5, #96]	; 0x60
   35760:	ldrb	r2, [r1, r3]
   35764:	add	r3, r1, r3
   35768:	cmp	r2, #2
   3576c:	beq	360a4 <__flatcc_fb_clear_parser@@Base+0x2b38>
   35770:	cmp	r2, #0
   35774:	moveq	r2, #1
   35778:	strbeq	r2, [r3]
   3577c:	bne	36004 <__flatcc_fb_clear_parser@@Base+0x2a98>
   35780:	cmp	sl, #0
   35784:	streq	sl, [sp, #16]
   35788:	beq	354f0 <__flatcc_fb_clear_parser@@Base+0x1f84>
   3578c:	ldrh	r3, [sl, #8]
   35790:	cmp	r3, #4
   35794:	movne	r3, #0
   35798:	strne	r3, [sp, #16]
   3579c:	bne	354f0 <__flatcc_fb_clear_parser@@Base+0x1f84>
   357a0:	ldrd	r2, [r5, #96]	; 0x60
   357a4:	ldrh	r1, [r5, #24]
   357a8:	cmp	r3, #0
   357ac:	cmpeq	r2, #1
   357b0:	bls	3624c <__flatcc_fb_clear_parser@@Base+0x2ce0>
   357b4:	ldr	r0, [sp, #60]	; 0x3c
   357b8:	sub	r2, r2, #1
   357bc:	ldrb	r3, [r0, r2]
   357c0:	add	r2, r0, r2
   357c4:	cmp	r3, #2
   357c8:	beq	36700 <__flatcc_fb_clear_parser@@Base+0x3194>
   357cc:	cmp	r3, #0
   357d0:	beq	366f0 <__flatcc_fb_clear_parser@@Base+0x3184>
   357d4:	ldr	r3, [sp, #20]
   357d8:	cmp	r1, #11
   357dc:	ldr	r1, [r3, #4]
   357e0:	beq	3695c <__flatcc_fb_clear_parser@@Base+0x33f0>
   357e4:	ldr	r2, [pc, #828]	; 35b28 <__flatcc_fb_clear_parser@@Base+0x25bc>
   357e8:	add	r2, pc, r2
   357ec:	b	36264 <__flatcc_fb_clear_parser@@Base+0x2cf8>
   357f0:	mov	r4, r0
   357f4:	mov	r1, r8
   357f8:	add	r0, r4, #4
   357fc:	ldr	r2, [sp, #20]
   35800:	bl	2c7d4 <fb_symbol_table_find@@Base>
   35804:	subs	r9, r0, #0
   35808:	beq	35834 <__flatcc_fb_clear_parser@@Base+0x22c8>
   3580c:	ldrh	r3, [r9, #8]
   35810:	cmp	r3, #4
   35814:	bhi	35834 <__flatcc_fb_clear_parser@@Base+0x22c8>
   35818:	ldr	r1, [r9, #16]
   3581c:	ldr	r0, [sp, #40]	; 0x28
   35820:	bl	2c058 <ptr_set_find_item@@Base>
   35824:	cmp	r0, #0
   35828:	beq	35834 <__flatcc_fb_clear_parser@@Base+0x22c8>
   3582c:	mov	r3, r9
   35830:	b	35128 <__flatcc_fb_clear_parser@@Base+0x1bbc>
   35834:	ldr	r3, [r4]
   35838:	cmp	r3, #0
   3583c:	beq	358b0 <__flatcc_fb_clear_parser@@Base+0x2344>
   35840:	mov	r9, #0
   35844:	b	3584c <__flatcc_fb_clear_parser@@Base+0x22e0>
   35848:	mov	r9, r2
   3584c:	ldr	r3, [r3]
   35850:	add	r2, r9, #1
   35854:	cmp	r3, #0
   35858:	bne	35848 <__flatcc_fb_clear_parser@@Base+0x22dc>
   3585c:	rsb	r9, r9, #0
   35860:	ldr	r0, [fp, #412]	; 0x19c
   35864:	b	3588c <__flatcc_fb_clear_parser@@Base+0x2320>
   35868:	cmp	r0, #0
   3586c:	beq	35888 <__flatcc_fb_clear_parser@@Base+0x231c>
   35870:	mov	r2, r9
   35874:	ldr	r1, [r4]
   35878:	bl	2d85c <fb_scope_table_find@@Base>
   3587c:	cmp	r0, #0
   35880:	bne	357f0 <__flatcc_fb_clear_parser@@Base+0x2284>
   35884:	ldr	r0, [fp, #412]	; 0x19c
   35888:	add	r9, r9, #1
   3588c:	cmp	r9, #0
   35890:	bne	35868 <__flatcc_fb_clear_parser@@Base+0x22fc>
   35894:	cmp	r0, #0
   35898:	beq	358b0 <__flatcc_fb_clear_parser@@Base+0x2344>
   3589c:	mov	r2, r9
   358a0:	mov	r1, r9
   358a4:	bl	2d85c <fb_scope_table_find@@Base>
   358a8:	subs	r4, r0, #0
   358ac:	bne	357f4 <__flatcc_fb_clear_parser@@Base+0x2288>
   358b0:	ldr	r1, [r6, #8]
   358b4:	ldr	ip, [r6, #12]
   358b8:	mov	r3, #0
   358bc:	mov	r0, fp
   358c0:	ldr	r2, [pc, #612]	; 35b2c <__flatcc_fb_clear_parser@@Base+0x25c0>
   358c4:	ldr	lr, [r6, #4]
   358c8:	stm	sp, {r1, ip}
   358cc:	add	r2, pc, r2
   358d0:	mov	r1, lr
   358d4:	bl	2ebf8 <__flatcc_error_report@@Base>
   358d8:	ldrh	r8, [r5, #72]	; 0x48
   358dc:	b	35150 <__flatcc_fb_clear_parser@@Base+0x1be4>
   358e0:	mov	r3, r2
   358e4:	ldr	r1, [r4, #4]
   358e8:	mov	r0, fp
   358ec:	str	r2, [sp]
   358f0:	str	r2, [sp, #4]
   358f4:	ldr	r2, [pc, #564]	; 35b30 <__flatcc_fb_clear_parser@@Base+0x25c4>
   358f8:	add	r2, pc, r2
   358fc:	bl	2ebf8 <__flatcc_error_report@@Base>
   35900:	b	34da0 <__flatcc_fb_clear_parser@@Base+0x1834>
   35904:	mov	r2, #0
   35908:	ldr	r1, [r5, #4]
   3590c:	mov	r0, fp
   35910:	ldr	r3, [sl, #4]
   35914:	str	r2, [sp]
   35918:	str	r2, [sp, #4]
   3591c:	ldr	r2, [pc, #528]	; 35b34 <__flatcc_fb_clear_parser@@Base+0x25c8>
   35920:	add	r2, pc, r2
   35924:	bl	2ebf8 <__flatcc_error_report@@Base>
   35928:	ldr	r5, [r5]
   3592c:	cmp	r5, #0
   35930:	bne	34cf4 <__flatcc_fb_clear_parser@@Base+0x1788>
   35934:	b	34f24 <__flatcc_fb_clear_parser@@Base+0x19b8>
   35938:	ldr	r3, [r4]
   3593c:	cmp	r3, #0
   35940:	beq	3542c <__flatcc_fb_clear_parser@@Base+0x1ec0>
   35944:	mov	sl, #0
   35948:	b	35950 <__flatcc_fb_clear_parser@@Base+0x23e4>
   3594c:	mov	sl, r2
   35950:	ldr	r3, [r3]
   35954:	add	r2, sl, #1
   35958:	cmp	r3, #0
   3595c:	bne	3594c <__flatcc_fb_clear_parser@@Base+0x23e0>
   35960:	rsb	sl, sl, #0
   35964:	b	35994 <__flatcc_fb_clear_parser@@Base+0x2428>
   35968:	cmp	r8, #0
   3596c:	beq	35990 <__flatcc_fb_clear_parser@@Base+0x2424>
   35970:	ldr	r0, [fp, #412]	; 0x19c
   35974:	cmp	r0, #0
   35978:	beq	35990 <__flatcc_fb_clear_parser@@Base+0x2424>
   3597c:	mov	r2, sl
   35980:	ldr	r1, [r4]
   35984:	bl	2d85c <fb_scope_table_find@@Base>
   35988:	cmp	r0, #0
   3598c:	bne	35638 <__flatcc_fb_clear_parser@@Base+0x20cc>
   35990:	add	sl, sl, #1
   35994:	cmp	sl, #0
   35998:	bne	35968 <__flatcc_fb_clear_parser@@Base+0x23fc>
   3599c:	cmp	r8, #0
   359a0:	beq	3542c <__flatcc_fb_clear_parser@@Base+0x1ec0>
   359a4:	ldr	r0, [fp, #412]	; 0x19c
   359a8:	cmp	r0, #0
   359ac:	beq	3542c <__flatcc_fb_clear_parser@@Base+0x1ec0>
   359b0:	mov	r2, sl
   359b4:	mov	r1, sl
   359b8:	bl	2d85c <fb_scope_table_find@@Base>
   359bc:	subs	r4, r0, #0
   359c0:	bne	3563c <__flatcc_fb_clear_parser@@Base+0x20d0>
   359c4:	b	3542c <__flatcc_fb_clear_parser@@Base+0x1ec0>
   359c8:	ldrh	r3, [r4, #16]
   359cc:	cmp	r3, #5
   359d0:	beq	34da0 <__flatcc_fb_clear_parser@@Base+0x1834>
   359d4:	ldr	r2, [pc, #348]	; 35b38 <__flatcc_fb_clear_parser@@Base+0x25cc>
   359d8:	mov	r3, ip
   359dc:	mov	r0, fp
   359e0:	ldr	r1, [r4, #4]
   359e4:	str	ip, [sp]
   359e8:	str	ip, [sp, #4]
   359ec:	add	r2, pc, r2
   359f0:	bl	2ebf8 <__flatcc_error_report@@Base>
   359f4:	b	34da0 <__flatcc_fb_clear_parser@@Base+0x1834>
   359f8:	cmp	r2, #6
   359fc:	bne	34da0 <__flatcc_fb_clear_parser@@Base+0x1834>
   35a00:	ldrh	r3, [r4, #16]
   35a04:	cmp	r3, #6
   35a08:	beq	34da0 <__flatcc_fb_clear_parser@@Base+0x1834>
   35a0c:	mov	ip, #0
   35a10:	mov	r0, fp
   35a14:	ldr	r1, [r4, #4]
   35a18:	mov	r3, ip
   35a1c:	str	ip, [sp]
   35a20:	str	ip, [sp, #4]
   35a24:	ldr	r2, [sp, #68]	; 0x44
   35a28:	bl	2ebf8 <__flatcc_error_report@@Base>
   35a2c:	b	34da0 <__flatcc_fb_clear_parser@@Base+0x1834>
   35a30:	ldr	r3, [r5, #16]
   35a34:	ldr	r3, [r3, #16]
   35a38:	add	r3, r3, #996	; 0x3e4
   35a3c:	add	r3, r3, #3
   35a40:	cmp	r3, #27
   35a44:	movhi	r3, sl
   35a48:	bhi	35a5c <__flatcc_fb_clear_parser@@Base+0x24f0>
   35a4c:	ldr	r2, [pc, #232]	; 35b3c <__flatcc_fb_clear_parser@@Base+0x25d0>
   35a50:	add	r2, pc, r2
   35a54:	add	r3, r2, r3, lsl #2
   35a58:	ldr	r3, [r3, #16]
   35a5c:	str	r3, [r5, #16]
   35a60:	b	34d30 <__flatcc_fb_clear_parser@@Base+0x17c4>
   35a64:	ldr	r3, [fp, #112]	; 0x70
   35a68:	mov	r1, #0
   35a6c:	ldr	r2, [fp, #216]	; 0xd8
   35a70:	mov	r0, r3
   35a74:	str	r3, [sp, #60]	; 0x3c
   35a78:	bl	1407c <memset@plt>
   35a7c:	ldr	r3, [sp, #16]
   35a80:	cmp	r3, #0
   35a84:	bne	35c70 <__flatcc_fb_clear_parser@@Base+0x2704>
   35a88:	ldrd	r2, [fp, #216]	; 0xd8
   35a8c:	orrs	r3, r2, r3
   35a90:	mov	r3, #1
   35a94:	str	r3, [sp, #36]	; 0x24
   35a98:	bne	35260 <__flatcc_fb_clear_parser@@Base+0x1cf4>
   35a9c:	mov	r2, #0
   35aa0:	ldr	r1, [r5, #4]
   35aa4:	mov	ip, #1
   35aa8:	mov	r3, r2
   35aac:	mov	r0, fp
   35ab0:	str	r2, [sp]
   35ab4:	str	r2, [sp, #4]
   35ab8:	ldr	r2, [pc, #128]	; 35b40 <__flatcc_fb_clear_parser@@Base+0x25d4>
   35abc:	str	ip, [sp, #16]
   35ac0:	add	r2, pc, r2
   35ac4:	bl	2ebf8 <__flatcc_error_report@@Base>
   35ac8:	b	35260 <__flatcc_fb_clear_parser@@Base+0x1cf4>
   35acc:	andeq	r5, r2, r0, ror #2
   35ad0:	andeq	r4, r2, ip, lsr ip
   35ad4:	andeq	r5, r2, r8, ror r1
   35ad8:	strdeq	r4, [r2], -ip
   35adc:	andeq	r5, r2, r4, lsl r0
   35ae0:	andeq	r4, r2, r0, lsr pc
   35ae4:	andeq	r5, r2, r4, lsr #32
   35ae8:	ldrdeq	r5, [r2], -r4
   35aec:	andeq	r4, r2, r8, ror sl
   35af0:	muleq	r2, r4, pc	; <UNPREDICTABLE>
   35af4:	ldrdeq	r4, [r2], -ip
   35af8:	andeq	r4, r2, r0, lsl #27
   35afc:	andeq	r5, r2, r0, asr r7
   35b00:	andeq	r4, r2, r0, asr ip
   35b04:	andeq	r4, r2, ip, ror #22
   35b08:	andeq	r4, r2, ip, asr ip
   35b0c:	andeq	r5, r2, r4, ror #3
   35b10:	andeq	r5, r2, r4, ror #3
   35b14:	andeq	r5, r2, ip, asr r2
   35b18:	andeq	r5, r2, ip, lsr #6
   35b1c:	andeq	r4, r2, ip, ror r1
   35b20:	andeq	r4, r2, r0, asr r1
   35b24:	andeq	r4, r2, r8, ror lr
   35b28:	strdeq	r4, [r2], -r8
   35b2c:	andeq	r4, r2, r0, lsl #20
   35b30:	andeq	r4, r2, r8, ror #4
   35b34:	andeq	r4, r2, r0, lsr #18
   35b38:	andeq	r4, r2, r8, lsr r2
   35b3c:	andeq	r3, r2, r4, ror #25
   35b40:	andeq	r4, r2, r8, ror r9
   35b44:	andeq	r3, r2, r4, asr #31
   35b48:	muleq	r2, ip, r7
   35b4c:	andeq	r3, r2, r0, asr #29
   35b50:	andeq	r3, r2, r4, asr pc
   35b54:	andeq	r4, r2, ip, lsl r6
   35b58:	andeq	r4, r2, r8, asr #14
   35b5c:	muleq	r2, r0, sl
   35b60:	strdeq	r4, [r2], -r8
   35b64:	andeq	r4, r2, r0, ror #14
   35b68:	andeq	r4, r2, r0, lsr r8
   35b6c:	andeq	r4, r2, r4, lsl r2
   35b70:	andeq	r4, r2, ip, ror #13
   35b74:	andeq	r4, r2, r0, asr r7
   35b78:	andeq	r3, r2, r8, ror #21
   35b7c:	andeq	r4, r2, r4, asr #8
   35b80:	andeq	r4, r2, r8, lsr #8
   35b84:	muleq	r2, ip, r3
   35b88:	andeq	r3, r2, ip, lsl lr
   35b8c:	andeq	r4, r2, ip, lsr #8
   35b90:	strheq	r4, [r2], -r8
   35b94:	andeq	r4, r2, ip, lsl r0
   35b98:	andeq	r4, r2, r4
   35b9c:			; <UNDEFINED> instruction: 0x000242b4
   35ba0:	andeq	r3, r2, ip, lsr sp
   35ba4:	andeq	r3, r2, r4, lsl #31
   35ba8:	andeq	r3, r2, r8, asr #29
   35bac:	andeq	r4, r2, r4, lsl #2
   35bb0:	ldrdeq	r4, [r2], -r8
   35bb4:	andeq	r3, r2, r8, lsl sl
   35bb8:	andeq	r3, r2, r8, asr r7
   35bbc:	andeq	r3, r2, r4, ror r7
   35bc0:	andeq	r3, r2, r8, lsr #16
   35bc4:	muleq	r2, r0, r9
   35bc8:	andeq	r3, r2, r0, asr ip
   35bcc:	andeq	r3, r2, r0, lsr #18
   35bd0:	andeq	r2, r2, r4, asr #26
   35bd4:	andeq	r2, r2, r0, lsr #29
   35bd8:	andeq	r3, r2, ip, asr sl
   35bdc:	andeq	r2, r2, r4, lsl sp
   35be0:	andeq	r2, r2, r0, ror lr
   35be4:	andeq	r3, r2, r4, lsl #16
   35be8:	andeq	r2, r2, r4, ror #25
   35bec:	andeq	r2, r2, r0, asr #28
   35bf0:	andeq	fp, r0, r0, ror r5
   35bf4:	andeq	r3, r2, r8, ror #24
   35bf8:	andeq	r3, r2, r4, asr #21
   35bfc:	mov	r3, r2
   35c00:	ldr	r1, [r4, #4]
   35c04:	mov	r0, fp
   35c08:	str	r2, [sp]
   35c0c:	str	r2, [sp, #4]
   35c10:	ldr	r2, [pc, #-212]	; 35b44 <__flatcc_fb_clear_parser@@Base+0x25d8>
   35c14:	add	r2, pc, r2
   35c18:	bl	2ebf8 <__flatcc_error_report@@Base>
   35c1c:	b	34da0 <__flatcc_fb_clear_parser@@Base+0x1834>
   35c20:	sub	r3, ip, r2
   35c24:	mov	r8, r2
   35c28:	mov	r2, r0
   35c2c:	str	r3, [sp, #20]
   35c30:	add	r8, r1, r8
   35c34:	b	350d0 <__flatcc_fb_clear_parser@@Base+0x1b64>
   35c38:	ldr	r3, [r5, #16]
   35c3c:	cmp	r3, #4
   35c40:	bne	351c0 <__flatcc_fb_clear_parser@@Base+0x1c54>
   35c44:	b	351e4 <__flatcc_fb_clear_parser@@Base+0x1c78>
   35c48:	mov	r2, #0
   35c4c:	ldr	r1, [r5, #4]
   35c50:	mov	r0, fp
   35c54:	mov	r3, r2
   35c58:	str	r2, [sp]
   35c5c:	str	r2, [sp, #4]
   35c60:	ldr	r2, [pc, #-288]	; 35b48 <__flatcc_fb_clear_parser@@Base+0x25dc>
   35c64:	add	r2, pc, r2
   35c68:	bl	2ebf8 <__flatcc_error_report@@Base>
   35c6c:	b	351f4 <__flatcc_fb_clear_parser@@Base+0x1c88>
   35c70:	ldr	r3, [sp, #16]
   35c74:	mov	r2, #0
   35c78:	str	r3, [sp, #36]	; 0x24
   35c7c:	mov	r3, #0
   35c80:	strd	r2, [sp, #8]
   35c84:	b	35278 <__flatcc_fb_clear_parser@@Base+0x1d0c>
   35c88:	mov	r3, r2
   35c8c:	ldr	r1, [r4, #4]
   35c90:	mov	r0, fp
   35c94:	str	r2, [sp]
   35c98:	str	r2, [sp, #4]
   35c9c:	ldr	r2, [pc, #-344]	; 35b4c <__flatcc_fb_clear_parser@@Base+0x25e0>
   35ca0:	add	r2, pc, r2
   35ca4:	bl	2ebf8 <__flatcc_error_report@@Base>
   35ca8:	b	34b24 <__flatcc_fb_clear_parser@@Base+0x15b8>
   35cac:	ldrh	r3, [r4, #16]
   35cb0:	cmp	r3, #5
   35cb4:	beq	34b24 <__flatcc_fb_clear_parser@@Base+0x15b8>
   35cb8:	ldr	r2, [pc, #-368]	; 35b50 <__flatcc_fb_clear_parser@@Base+0x25e4>
   35cbc:	mov	r3, ip
   35cc0:	mov	r0, fp
   35cc4:	ldr	r1, [r4, #4]
   35cc8:	str	ip, [sp]
   35ccc:	str	ip, [sp, #4]
   35cd0:	add	r2, pc, r2
   35cd4:	bl	2ebf8 <__flatcc_error_report@@Base>
   35cd8:	b	34b24 <__flatcc_fb_clear_parser@@Base+0x15b8>
   35cdc:	cmp	r2, #6
   35ce0:	bne	34b24 <__flatcc_fb_clear_parser@@Base+0x15b8>
   35ce4:	ldrh	r3, [r4, #16]
   35ce8:	cmp	r3, #6
   35cec:	beq	34b24 <__flatcc_fb_clear_parser@@Base+0x15b8>
   35cf0:	mov	ip, #0
   35cf4:	mov	r2, r8
   35cf8:	ldr	r1, [r4, #4]
   35cfc:	mov	r3, ip
   35d00:	mov	r0, fp
   35d04:	str	ip, [sp]
   35d08:	str	ip, [sp, #4]
   35d0c:	bl	2ebf8 <__flatcc_error_report@@Base>
   35d10:	b	34b24 <__flatcc_fb_clear_parser@@Base+0x15b8>
   35d14:	mov	r2, #0
   35d18:	ldr	r1, [r5, #4]
   35d1c:	mov	r0, fp
   35d20:	mov	r3, r2
   35d24:	str	r2, [sp]
   35d28:	str	r2, [sp, #4]
   35d2c:	ldr	r2, [pc, #-480]	; 35b54 <__flatcc_fb_clear_parser@@Base+0x25e8>
   35d30:	add	r2, pc, r2
   35d34:	bl	2ebf8 <__flatcc_error_report@@Base>
   35d38:	ldrh	r8, [r5, #72]	; 0x48
   35d3c:	b	35164 <__flatcc_fb_clear_parser@@Base+0x1bf8>
   35d40:	cmp	r3, #1
   35d44:	movne	r1, ip
   35d48:	moveq	r1, #0
   35d4c:	cmn	fp, #352	; 0x160
   35d50:	beq	35db4 <__flatcc_fb_clear_parser@@Base+0x2848>
   35d54:	ldr	r0, [fp, #412]	; 0x19c
   35d58:	cmp	r0, #0
   35d5c:	beq	35db4 <__flatcc_fb_clear_parser@@Base+0x2848>
   35d60:	rsb	r2, r2, #0
   35d64:	bl	2d85c <fb_scope_table_find@@Base>
   35d68:	cmp	r0, #0
   35d6c:	beq	35db0 <__flatcc_fb_clear_parser@@Base+0x2844>
   35d70:	ldr	r3, [r8, #4]
   35d74:	add	r0, r0, #4
   35d78:	ldm	r3, {r1, r2}
   35d7c:	bl	2c7d4 <fb_symbol_table_find@@Base>
   35d80:	subs	sl, r0, #0
   35d84:	beq	35db0 <__flatcc_fb_clear_parser@@Base+0x2844>
   35d88:	ldrh	r3, [sl, #8]
   35d8c:	cmp	r3, #4
   35d90:	bhi	35db0 <__flatcc_fb_clear_parser@@Base+0x2844>
   35d94:	add	r3, fp, #524	; 0x20c
   35d98:	ldr	r1, [sl, #16]
   35d9c:	mov	r0, r3
   35da0:	str	r3, [sp, #64]	; 0x40
   35da4:	bl	2c058 <ptr_set_find_item@@Base>
   35da8:	cmp	r0, #0
   35dac:	bne	35344 <__flatcc_fb_clear_parser@@Base+0x1dd8>
   35db0:	ldr	ip, [r5, #16]
   35db4:	mov	r3, r5
   35db8:	mov	r1, ip
   35dbc:	ldr	r2, [pc, #-620]	; 35b58 <__flatcc_fb_clear_parser@@Base+0x25ec>
   35dc0:	mov	r0, fp
   35dc4:	add	r2, pc, r2
   35dc8:	bl	30378 <error_ref_sym@@Base>
   35dcc:	mov	r3, #1
   35dd0:	str	r3, [sp, #16]
   35dd4:	strh	r3, [r5, #24]
   35dd8:	b	34f18 <__flatcc_fb_clear_parser@@Base+0x19ac>
   35ddc:	ldrd	r0, [sp, #8]
   35de0:	ldr	r3, [sp, #36]	; 0x24
   35de4:	cmp	r3, #0
   35de8:	ldr	r3, [sp, #32]
   35dec:	strd	r0, [r3, #96]	; 0x60
   35df0:	beq	36a64 <__flatcc_fb_clear_parser@@Base+0x34f8>
   35df4:	ldrd	r4, [sp, #72]	; 0x48
   35df8:	mov	r3, r0
   35dfc:	orrs	r3, r3, r1
   35e00:	movne	r3, #1
   35e04:	moveq	r3, #0
   35e08:	cmp	r1, r5
   35e0c:	cmpeq	r0, r4
   35e10:	movhi	r3, #0
   35e14:	andls	r3, r3, #1
   35e18:	cmp	r3, #0
   35e1c:	beq	36150 <__flatcc_fb_clear_parser@@Base+0x2be4>
   35e20:	mov	r2, r4
   35e24:	mov	r3, r5
   35e28:	orrs	r1, r2, r3
   35e2c:	beq	35ebc <__flatcc_fb_clear_parser@@Base+0x2950>
   35e30:	ldr	r1, [pc, #-732]	; 35b5c <__flatcc_fb_clear_parser@@Base+0x25f0>
   35e34:	mov	r5, #0
   35e38:	add	r9, sp, #156	; 0x9c
   35e3c:	mov	r8, r5
   35e40:	add	r1, pc, r1
   35e44:	str	r1, [sp, #8]
   35e48:	ldr	r1, [sp, #60]	; 0x3c
   35e4c:	add	r6, r1, r2
   35e50:	sub	r4, r1, #1
   35e54:	sub	r6, r6, #1
   35e58:	mov	r1, #10
   35e5c:	ldrb	r7, [r4, #1]!
   35e60:	cmp	r7, #0
   35e64:	bne	35eac <__flatcc_fb_clear_parser@@Base+0x2940>
   35e68:	cmp	r1, #0
   35e6c:	sub	sl, r1, #1
   35e70:	beq	366c8 <__flatcc_fb_clear_parser@@Base+0x315c>
   35e74:	mov	r2, r5
   35e78:	mov	r3, r8
   35e7c:	ldr	r1, [sp, #8]
   35e80:	mov	r0, r9
   35e84:	bl	140d0 <sprintf@plt>
   35e88:	ldr	r1, [sp, #32]
   35e8c:	mov	r3, r7
   35e90:	mov	r2, r9
   35e94:	mov	r0, fp
   35e98:	str	r7, [sp]
   35e9c:	str	r7, [sp, #4]
   35ea0:	ldr	r1, [r1, #4]
   35ea4:	bl	2ebf8 <__flatcc_error_report@@Base>
   35ea8:	mov	r1, sl
   35eac:	adds	r5, r5, #1
   35eb0:	adc	r8, r8, #0
   35eb4:	cmp	r6, r4
   35eb8:	bne	35e5c <__flatcc_fb_clear_parser@@Base+0x28f0>
   35ebc:	ldr	r2, [sp, #52]	; 0x34
   35ec0:	cmp	r2, #0
   35ec4:	beq	34f78 <__flatcc_fb_clear_parser@@Base+0x1a0c>
   35ec8:	ldr	r1, [sp, #32]
   35ecc:	cmp	r2, #1
   35ed0:	ldrh	r3, [r1, #10]
   35ed4:	orr	r3, r3, #8
   35ed8:	strh	r3, [r1, #10]
   35edc:	beq	34f78 <__flatcc_fb_clear_parser@@Base+0x1a0c>
   35ee0:	ldr	r3, [fp, #156]	; 0x9c
   35ee4:	cmp	r3, #0
   35ee8:	bne	34f78 <__flatcc_fb_clear_parser@@Base+0x1a0c>
   35eec:	mov	r1, #0
   35ef0:	ldr	r2, [pc, #-920]	; 35b60 <__flatcc_fb_clear_parser@@Base+0x25f4>
   35ef4:	mov	r0, fp
   35ef8:	mov	r3, r1
   35efc:	str	r1, [sp]
   35f00:	str	r1, [sp, #4]
   35f04:	mvn	r1, #0
   35f08:	ldr	ip, [sp, #36]	; 0x24
   35f0c:	add	r2, pc, r2
   35f10:	str	r1, [sp, #52]	; 0x34
   35f14:	ldr	r1, [sp, #32]
   35f18:	str	ip, [sp, #16]
   35f1c:	ldr	r1, [r1, #4]
   35f20:	bl	2ebf8 <__flatcc_error_report@@Base>
   35f24:	b	34f6c <__flatcc_fb_clear_parser@@Base+0x1a00>
   35f28:	ldr	r2, [r4]
   35f2c:	cmp	r2, #0
   35f30:	beq	35db0 <__flatcc_fb_clear_parser@@Base+0x2844>
   35f34:	mov	r3, #0
   35f38:	b	35f40 <__flatcc_fb_clear_parser@@Base+0x29d4>
   35f3c:	mov	r3, r1
   35f40:	ldr	r2, [r2]
   35f44:	add	r1, r3, #1
   35f48:	cmp	r2, #0
   35f4c:	bne	35f3c <__flatcc_fb_clear_parser@@Base+0x29d0>
   35f50:	rsb	sl, r3, #0
   35f54:	b	35f84 <__flatcc_fb_clear_parser@@Base+0x2a18>
   35f58:	cmp	r9, #0
   35f5c:	beq	35f80 <__flatcc_fb_clear_parser@@Base+0x2a14>
   35f60:	ldr	r0, [fp, #412]	; 0x19c
   35f64:	cmp	r0, #0
   35f68:	beq	35f80 <__flatcc_fb_clear_parser@@Base+0x2a14>
   35f6c:	mov	r2, sl
   35f70:	ldr	r1, [r4]
   35f74:	bl	2d85c <fb_scope_table_find@@Base>
   35f78:	cmp	r0, #0
   35f7c:	bne	35fb8 <__flatcc_fb_clear_parser@@Base+0x2a4c>
   35f80:	add	sl, sl, #1
   35f84:	cmp	sl, #0
   35f88:	bne	35f58 <__flatcc_fb_clear_parser@@Base+0x29ec>
   35f8c:	cmp	r9, #0
   35f90:	beq	35db0 <__flatcc_fb_clear_parser@@Base+0x2844>
   35f94:	ldr	r0, [fp, #412]	; 0x19c
   35f98:	cmp	r0, #0
   35f9c:	beq	35db0 <__flatcc_fb_clear_parser@@Base+0x2844>
   35fa0:	mov	r2, sl
   35fa4:	mov	r1, sl
   35fa8:	bl	2d85c <fb_scope_table_find@@Base>
   35fac:	subs	r4, r0, #0
   35fb0:	bne	35304 <__flatcc_fb_clear_parser@@Base+0x1d98>
   35fb4:	b	35db0 <__flatcc_fb_clear_parser@@Base+0x2844>
   35fb8:	mov	r4, r0
   35fbc:	b	35304 <__flatcc_fb_clear_parser@@Base+0x1d98>
   35fc0:	mov	r2, #0
   35fc4:	ldr	r1, [r3, #4]
   35fc8:	mov	ip, #1
   35fcc:	mov	r3, r2
   35fd0:	mov	r0, fp
   35fd4:	str	r2, [sp]
   35fd8:	str	r2, [sp, #4]
   35fdc:	ldr	r2, [pc, #-1152]	; 35b64 <__flatcc_fb_clear_parser@@Base+0x25f8>
   35fe0:	str	ip, [sp, #16]
   35fe4:	add	r2, pc, r2
   35fe8:	bl	2ebf8 <__flatcc_error_report@@Base>
   35fec:	b	354f0 <__flatcc_fb_clear_parser@@Base+0x1f84>
   35ff0:	tst	r8, #1024	; 0x400
   35ff4:	beq	351ac <__flatcc_fb_clear_parser@@Base+0x1c40>
   35ff8:	tst	r8, #2048	; 0x800
   35ffc:	beq	351e8 <__flatcc_fb_clear_parser@@Base+0x1c7c>
   36000:	b	351e4 <__flatcc_fb_clear_parser@@Base+0x1c78>
   36004:	ldr	r3, [sp, #20]
   36008:	mov	r2, #0
   3600c:	mov	r0, fp
   36010:	ldr	r1, [r3, #4]
   36014:	mov	r3, r2
   36018:	str	r2, [sp]
   3601c:	str	r2, [sp, #4]
   36020:	ldr	r2, [pc, #-1216]	; 35b68 <__flatcc_fb_clear_parser@@Base+0x25fc>
   36024:	add	r2, pc, r2
   36028:	bl	2ebf8 <__flatcc_error_report@@Base>
   3602c:	b	35780 <__flatcc_fb_clear_parser@@Base+0x2214>
   36030:	mvn	r2, #0
   36034:	mov	r3, sl
   36038:	ldr	r1, [r5, #4]
   3603c:	mov	r0, fp
   36040:	str	sl, [sp]
   36044:	str	sl, [sp, #4]
   36048:	str	r2, [sp, #52]	; 0x34
   3604c:	ldr	r2, [pc, #-1256]	; 35b6c <__flatcc_fb_clear_parser@@Base+0x2600>
   36050:	add	r2, pc, r2
   36054:	bl	2ebf8 <__flatcc_error_report@@Base>
   36058:	ldr	r0, [sp, #52]	; 0x34
   3605c:	add	sp, sp, #260	; 0x104
   36060:	ldrd	r4, [sp]
   36064:	ldrd	r6, [sp, #8]
   36068:	ldrd	r8, [sp, #16]
   3606c:	ldrd	sl, [sp, #24]
   36070:	add	sp, sp, #32
   36074:	pop	{pc}		; (ldr pc, [sp], #4)
   36078:	mov	r3, r2
   3607c:	ldr	r1, [r5, #4]
   36080:	mov	ip, #1
   36084:	str	r2, [sp]
   36088:	mov	r0, fp
   3608c:	str	r2, [sp, #4]
   36090:	ldr	r2, [pc, #-1320]	; 35b70 <__flatcc_fb_clear_parser@@Base+0x2604>
   36094:	str	ip, [sp, #16]
   36098:	add	r2, pc, r2
   3609c:	bl	2ebf8 <__flatcc_error_report@@Base>
   360a0:	b	354f0 <__flatcc_fb_clear_parser@@Base+0x1f84>
   360a4:	ldr	r3, [sp, #20]
   360a8:	mov	r2, #0
   360ac:	mov	r0, fp
   360b0:	ldr	ip, [sp, #36]	; 0x24
   360b4:	ldr	r1, [r3, #4]
   360b8:	mov	r3, r2
   360bc:	str	r2, [sp]
   360c0:	str	r2, [sp, #4]
   360c4:	ldr	r2, [pc, #-1368]	; 35b74 <__flatcc_fb_clear_parser@@Base+0x2608>
   360c8:	str	ip, [sp, #16]
   360cc:	add	r2, pc, r2
   360d0:	bl	2ebf8 <__flatcc_error_report@@Base>
   360d4:	b	354f0 <__flatcc_fb_clear_parser@@Base+0x1f84>
   360d8:	mov	r3, r2
   360dc:	ldr	r1, [r4, #4]
   360e0:	mov	r0, fp
   360e4:	str	r2, [sp]
   360e8:	str	r2, [sp, #4]
   360ec:	ldr	r2, [pc, #-1404]	; 35b78 <__flatcc_fb_clear_parser@@Base+0x260c>
   360f0:	add	r2, pc, r2
   360f4:	bl	2ebf8 <__flatcc_error_report@@Base>
   360f8:	b	34b24 <__flatcc_fb_clear_parser@@Base+0x15b8>
   360fc:	ldrh	r3, [r5, #72]	; 0x48
   36100:	tst	r3, #256	; 0x100
   36104:	bne	36658 <__flatcc_fb_clear_parser@@Base+0x30ec>
   36108:	ldr	r3, [fp, #148]	; 0x94
   3610c:	str	r3, [sp, #56]	; 0x38
   36110:	b	34e44 <__flatcc_fb_clear_parser@@Base+0x18d8>
   36114:	mov	r2, #0
   36118:	ldr	r1, [r5, #4]
   3611c:	mov	r0, fp
   36120:	ldr	r3, [sl, #4]
   36124:	str	r2, [sp]
   36128:	str	r2, [sp, #4]
   3612c:	ldr	r2, [pc, #-1464]	; 35b7c <__flatcc_fb_clear_parser@@Base+0x2610>
   36130:	add	r2, pc, r2
   36134:	bl	2ebf8 <__flatcc_error_report@@Base>
   36138:	mov	r3, #1
   3613c:	strh	r3, [r5, #24]
   36140:	ldr	r5, [r5]
   36144:	cmp	r5, #0
   36148:	bne	34cf4 <__flatcc_fb_clear_parser@@Base+0x1788>
   3614c:	b	34f24 <__flatcc_fb_clear_parser@@Base+0x19b8>
   36150:	ldr	r2, [sp, #52]	; 0x34
   36154:	cmp	r2, #0
   36158:	beq	36058 <__flatcc_fb_clear_parser@@Base+0x2aec>
   3615c:	ldr	r1, [sp, #32]
   36160:	cmp	r2, #1
   36164:	ldrh	r3, [r1, #10]
   36168:	orr	r3, r3, #8
   3616c:	strh	r3, [r1, #10]
   36170:	beq	36184 <__flatcc_fb_clear_parser@@Base+0x2c18>
   36174:	ldr	r3, [fp, #156]	; 0x9c
   36178:	cmp	r3, #0
   3617c:	str	r3, [sp, #36]	; 0x24
   36180:	beq	35eec <__flatcc_fb_clear_parser@@Base+0x2980>
   36184:	ldr	r3, [sp, #16]
   36188:	str	r3, [sp, #52]	; 0x34
   3618c:	b	36058 <__flatcc_fb_clear_parser@@Base+0x2aec>
   36190:	cmp	r0, #3
   36194:	bne	36628 <__flatcc_fb_clear_parser@@Base+0x30bc>
   36198:	cmp	r3, #13
   3619c:	beq	3671c <__flatcc_fb_clear_parser@@Base+0x31b0>
   361a0:	add	r4, r5, #48	; 0x30
   361a4:	mov	r1, r5
   361a8:	ldr	r2, [sl, #40]	; 0x28
   361ac:	mov	r3, r4
   361b0:	mov	r0, fp
   361b4:	bl	388cc <__flatcc_fb_coerce_scalar_type@@Base>
   361b8:	cmp	r0, #0
   361bc:	bne	35620 <__flatcc_fb_clear_parser@@Base+0x20b4>
   361c0:	ldr	r3, [fp, #212]	; 0xd4
   361c4:	cmp	r3, #0
   361c8:	beq	35468 <__flatcc_fb_clear_parser@@Base+0x1efc>
   361cc:	ldr	r0, [r5, #16]
   361d0:	mov	r1, r4
   361d4:	add	r0, r0, #72	; 0x48
   361d8:	bl	3f80c <fb_value_set_find_item@@Base>
   361dc:	subs	r2, r0, #0
   361e0:	bne	35468 <__flatcc_fb_clear_parser@@Base+0x1efc>
   361e4:	mov	r3, r2
   361e8:	ldr	r1, [r5, #4]
   361ec:	mov	r0, fp
   361f0:	str	r2, [sp]
   361f4:	str	r2, [sp, #4]
   361f8:	ldr	r2, [pc, #-1664]	; 35b80 <__flatcc_fb_clear_parser@@Base+0x2614>
   361fc:	add	r2, pc, r2
   36200:	bl	2ebf8 <__flatcc_error_report@@Base>
   36204:	mov	r3, #1
   36208:	strh	r3, [r5, #24]
   3620c:	b	34f18 <__flatcc_fb_clear_parser@@Base+0x19ac>
   36210:	mov	r2, #0
   36214:	ldr	r1, [r5, #4]
   36218:	mov	r0, fp
   3621c:	mov	r3, r2
   36220:	str	r2, [sp]
   36224:	str	r2, [sp, #4]
   36228:	ldr	r2, [pc, #-1708]	; 35b84 <__flatcc_fb_clear_parser@@Base+0x2618>
   3622c:	add	r2, pc, r2
   36230:	bl	2ebf8 <__flatcc_error_report@@Base>
   36234:	mov	r3, #1
   36238:	strh	r3, [r5, #24]
   3623c:	ldr	r5, [r5]
   36240:	cmp	r5, #0
   36244:	bne	34cf4 <__flatcc_fb_clear_parser@@Base+0x1788>
   36248:	b	34f24 <__flatcc_fb_clear_parser@@Base+0x19b8>
   3624c:	ldr	r3, [sp, #20]
   36250:	cmp	r1, #11
   36254:	ldr	r1, [r3, #4]
   36258:	beq	368d0 <__flatcc_fb_clear_parser@@Base+0x3364>
   3625c:	ldr	r2, [pc, #-1756]	; 35b88 <__flatcc_fb_clear_parser@@Base+0x261c>
   36260:	add	r2, pc, r2
   36264:	mov	ip, #0
   36268:	mov	r0, fp
   3626c:	mov	r3, ip
   36270:	str	ip, [sp]
   36274:	str	ip, [sp, #4]
   36278:	ldr	ip, [sp, #36]	; 0x24
   3627c:	str	ip, [sp, #16]
   36280:	bl	2ebf8 <__flatcc_error_report@@Base>
   36284:	b	354f0 <__flatcc_fb_clear_parser@@Base+0x1f84>
   36288:	mov	r2, #0
   3628c:	ldr	r1, [r5, #4]
   36290:	mov	r0, fp
   36294:	ldr	r3, [r5, #16]
   36298:	str	r2, [sp]
   3629c:	str	r2, [sp, #4]
   362a0:	ldr	r2, [pc, #-1820]	; 35b8c <__flatcc_fb_clear_parser@@Base+0x2620>
   362a4:	add	r2, pc, r2
   362a8:	bl	2ebf8 <__flatcc_error_report@@Base>
   362ac:	mov	r3, #1
   362b0:	strh	r3, [r5, #24]
   362b4:	ldr	r5, [r5]
   362b8:	cmp	r5, #0
   362bc:	bne	34cf4 <__flatcc_fb_clear_parser@@Base+0x1788>
   362c0:	b	34f24 <__flatcc_fb_clear_parser@@Base+0x19b8>
   362c4:	ldr	ip, [r5, #48]	; 0x30
   362c8:	ldr	r3, [sp, #32]
   362cc:	cmp	ip, #0
   362d0:	ldr	r4, [r3, #12]
   362d4:	beq	369e0 <__flatcc_fb_clear_parser@@Base+0x3474>
   362d8:	mov	r0, #0
   362dc:	mov	r8, ip
   362e0:	mov	r2, r0
   362e4:	b	362f4 <__flatcc_fb_clear_parser@@Base+0x2d88>
   362e8:	mov	r0, r8
   362ec:	mov	r2, r1
   362f0:	mov	r8, r3
   362f4:	ldr	r3, [r8]
   362f8:	add	r1, r2, #1
   362fc:	cmp	r3, #0
   36300:	bne	362e8 <__flatcc_fb_clear_parser@@Base+0x2d7c>
   36304:	cmp	r0, #0
   36308:	mov	r6, r0
   3630c:	mov	r9, r0
   36310:	beq	36394 <__flatcc_fb_clear_parser@@Base+0x2e28>
   36314:	sub	r3, r2, #1
   36318:	cmp	r4, #0
   3631c:	clz	r3, r3
   36320:	lsr	r3, r3, #5
   36324:	moveq	r3, #0
   36328:	cmp	r3, #0
   3632c:	beq	3657c <__flatcc_fb_clear_parser@@Base+0x3010>
   36330:	add	r3, fp, #524	; 0x20c
   36334:	add	r6, fp, #352	; 0x160
   36338:	str	r3, [sp, #64]	; 0x40
   3633c:	str	r8, [sp, #84]	; 0x54
   36340:	ldr	r3, [r9, #4]
   36344:	add	r0, r4, #4
   36348:	ldm	r3, {r1, r2}
   3634c:	bl	2c7d4 <fb_symbol_table_find@@Base>
   36350:	subs	r3, r0, #0
   36354:	beq	363ec <__flatcc_fb_clear_parser@@Base+0x2e80>
   36358:	ldrh	r2, [r3, #8]
   3635c:	cmp	r2, #4
   36360:	bhi	363ec <__flatcc_fb_clear_parser@@Base+0x2e80>
   36364:	ldr	r1, [r3, #16]
   36368:	str	r3, [sp, #56]	; 0x38
   3636c:	ldr	r0, [sp, #64]	; 0x40
   36370:	bl	2c058 <ptr_set_find_item@@Base>
   36374:	cmp	r0, #0
   36378:	ldr	r3, [sp, #56]	; 0x38
   3637c:	beq	363ec <__flatcc_fb_clear_parser@@Base+0x2e80>
   36380:	ldr	r8, [sp, #84]	; 0x54
   36384:	ldrh	r2, [r3, #8]
   36388:	cmp	r2, #3
   3638c:	beq	363b8 <__flatcc_fb_clear_parser@@Base+0x2e4c>
   36390:	ldr	ip, [r5, #48]	; 0x30
   36394:	mov	r3, r5
   36398:	mov	r1, ip
   3639c:	ldr	r2, [pc, #-2068]	; 35b90 <__flatcc_fb_clear_parser@@Base+0x2624>
   363a0:	mov	r0, fp
   363a4:	add	r2, pc, r2
   363a8:	bl	30378 <error_ref_sym@@Base>
   363ac:	mov	r3, #1
   363b0:	strh	r3, [r5, #24]
   363b4:	b	34f18 <__flatcc_fb_clear_parser@@Base+0x19ac>
   363b8:	ldr	r2, [r8, #4]
   363bc:	add	r0, r3, #56	; 0x38
   363c0:	ldm	r2, {r1, r2}
   363c4:	bl	2c7d4 <fb_symbol_table_find@@Base>
   363c8:	cmp	r0, #0
   363cc:	beq	36390 <__flatcc_fb_clear_parser@@Base+0x2e24>
   363d0:	ldrd	r2, [r0, #48]	; 0x30
   363d4:	add	r1, r5, #48	; 0x30
   363d8:	strd	r2, [r5, #48]	; 0x30
   363dc:	ldrd	r2, [r0, #56]	; 0x38
   363e0:	strd	r2, [r1, #8]
   363e4:	uxth	r2, r2
   363e8:	b	35568 <__flatcc_fb_clear_parser@@Base+0x1ffc>
   363ec:	ldr	r2, [r4]
   363f0:	cmp	r2, #0
   363f4:	beq	36390 <__flatcc_fb_clear_parser@@Base+0x2e24>
   363f8:	mov	r3, #0
   363fc:	b	36404 <__flatcc_fb_clear_parser@@Base+0x2e98>
   36400:	mov	r3, r1
   36404:	ldr	r2, [r2]
   36408:	add	r1, r3, #1
   3640c:	cmp	r2, #0
   36410:	bne	36400 <__flatcc_fb_clear_parser@@Base+0x2e94>
   36414:	rsb	r8, r3, #0
   36418:	b	36448 <__flatcc_fb_clear_parser@@Base+0x2edc>
   3641c:	cmp	r6, #0
   36420:	beq	36444 <__flatcc_fb_clear_parser@@Base+0x2ed8>
   36424:	ldr	r0, [fp, #412]	; 0x19c
   36428:	cmp	r0, #0
   3642c:	beq	36444 <__flatcc_fb_clear_parser@@Base+0x2ed8>
   36430:	mov	r2, r8
   36434:	ldr	r1, [r4]
   36438:	bl	2d85c <fb_scope_table_find@@Base>
   3643c:	cmp	r0, #0
   36440:	bne	3647c <__flatcc_fb_clear_parser@@Base+0x2f10>
   36444:	add	r8, r8, #1
   36448:	cmp	r8, #0
   3644c:	bne	3641c <__flatcc_fb_clear_parser@@Base+0x2eb0>
   36450:	cmp	r6, #0
   36454:	beq	36390 <__flatcc_fb_clear_parser@@Base+0x2e24>
   36458:	ldr	r0, [fp, #412]	; 0x19c
   3645c:	cmp	r0, #0
   36460:	beq	36390 <__flatcc_fb_clear_parser@@Base+0x2e24>
   36464:	mov	r2, r8
   36468:	mov	r1, r8
   3646c:	bl	2d85c <fb_scope_table_find@@Base>
   36470:	subs	r4, r0, #0
   36474:	bne	36340 <__flatcc_fb_clear_parser@@Base+0x2dd4>
   36478:	b	36390 <__flatcc_fb_clear_parser@@Base+0x2e24>
   3647c:	mov	r4, r0
   36480:	b	36340 <__flatcc_fb_clear_parser@@Base+0x2dd4>
   36484:	mov	r2, #0
   36488:	ldr	r1, [r5, #4]
   3648c:	mov	r0, fp
   36490:	mov	r3, r2
   36494:	str	r2, [sp]
   36498:	str	r2, [sp, #4]
   3649c:	ldr	r2, [pc, #-2320]	; 35b94 <__flatcc_fb_clear_parser@@Base+0x2628>
   364a0:	add	r2, pc, r2
   364a4:	bl	2ebf8 <__flatcc_error_report@@Base>
   364a8:	mov	r3, #1
   364ac:	strh	r3, [r5, #24]
   364b0:	ldr	r5, [r5]
   364b4:	cmp	r5, #0
   364b8:	bne	34cf4 <__flatcc_fb_clear_parser@@Base+0x1788>
   364bc:	b	34f24 <__flatcc_fb_clear_parser@@Base+0x19b8>
   364c0:	mov	r2, #0
   364c4:	ldr	r1, [r5, #4]
   364c8:	mov	r0, fp
   364cc:	mov	r3, r2
   364d0:	str	r2, [sp]
   364d4:	str	r2, [sp, #4]
   364d8:	ldr	r2, [pc, #-2376]	; 35b98 <__flatcc_fb_clear_parser@@Base+0x262c>
   364dc:	add	r2, pc, r2
   364e0:	bl	2ebf8 <__flatcc_error_report@@Base>
   364e4:	mov	r3, #1
   364e8:	strh	r3, [r5, #24]
   364ec:	ldr	r5, [r5]
   364f0:	cmp	r5, #0
   364f4:	bne	34cf4 <__flatcc_fb_clear_parser@@Base+0x1788>
   364f8:	b	34f24 <__flatcc_fb_clear_parser@@Base+0x19b8>
   364fc:	mov	r3, #0
   36500:	mov	r2, ip
   36504:	mov	r8, r1
   36508:	str	r3, [sp, #20]
   3650c:	b	350d0 <__flatcc_fb_clear_parser@@Base+0x1b64>
   36510:	mov	r3, #0
   36514:	mov	r8, ip
   36518:	str	r3, [sp, #20]
   3651c:	b	35c30 <__flatcc_fb_clear_parser@@Base+0x26c4>
   36520:	mov	sl, r4
   36524:	b	34c84 <__flatcc_fb_clear_parser@@Base+0x1718>
   36528:	ldr	r2, [pc, #-2452]	; 35b9c <__flatcc_fb_clear_parser@@Base+0x2630>
   3652c:	add	r2, pc, r2
   36530:	b	354d8 <__flatcc_fb_clear_parser@@Base+0x1f6c>
   36534:	mov	r2, #0
   36538:	ldr	r1, [r6, #4]
   3653c:	mov	r0, fp
   36540:	mov	r3, r2
   36544:	str	r2, [sp]
   36548:	str	r2, [sp, #4]
   3654c:	ldr	r2, [pc, #-2484]	; 35ba0 <__flatcc_fb_clear_parser@@Base+0x2634>
   36550:	add	r2, pc, r2
   36554:	bl	2ebf8 <__flatcc_error_report@@Base>
   36558:	ldrh	r8, [r5, #72]	; 0x48
   3655c:	b	35150 <__flatcc_fb_clear_parser@@Base+0x1be4>
   36560:	ldrh	r3, [r5, #72]	; 0x48
   36564:	tst	r3, #128	; 0x80
   36568:	beq	34f18 <__flatcc_fb_clear_parser@@Base+0x19ac>
   3656c:	ldr	r3, [sp, #52]	; 0x34
   36570:	add	r3, r3, #1
   36574:	str	r3, [sp, #52]	; 0x34
   36578:	b	35514 <__flatcc_fb_clear_parser@@Base+0x1fa8>
   3657c:	cmp	r2, #1
   36580:	moveq	r1, r3
   36584:	movne	r1, ip
   36588:	cmn	fp, #352	; 0x160
   3658c:	beq	36394 <__flatcc_fb_clear_parser@@Base+0x2e28>
   36590:	ldr	r0, [fp, #412]	; 0x19c
   36594:	cmp	r0, #0
   36598:	beq	36394 <__flatcc_fb_clear_parser@@Base+0x2e28>
   3659c:	rsb	r2, r2, #1
   365a0:	bl	2d85c <fb_scope_table_find@@Base>
   365a4:	cmp	r0, #0
   365a8:	beq	36390 <__flatcc_fb_clear_parser@@Base+0x2e24>
   365ac:	ldr	r3, [r6, #4]
   365b0:	add	r0, r0, #4
   365b4:	ldm	r3, {r1, r2}
   365b8:	bl	2c7d4 <fb_symbol_table_find@@Base>
   365bc:	subs	r3, r0, #0
   365c0:	beq	36390 <__flatcc_fb_clear_parser@@Base+0x2e24>
   365c4:	ldrh	r2, [r3, #8]
   365c8:	cmp	r2, #4
   365cc:	bhi	36390 <__flatcc_fb_clear_parser@@Base+0x2e24>
   365d0:	add	r0, fp, #524	; 0x20c
   365d4:	ldr	r1, [r3, #16]
   365d8:	str	r3, [sp, #56]	; 0x38
   365dc:	bl	2c058 <ptr_set_find_item@@Base>
   365e0:	cmp	r0, #0
   365e4:	ldr	r3, [sp, #56]	; 0x38
   365e8:	bne	36384 <__flatcc_fb_clear_parser@@Base+0x2e18>
   365ec:	b	36390 <__flatcc_fb_clear_parser@@Base+0x2e24>
   365f0:	ldr	r1, [sp, #36]	; 0x24
   365f4:	cmp	r1, #0
   365f8:	bne	36608 <__flatcc_fb_clear_parser@@Base+0x309c>
   365fc:	ldrh	r2, [sp, #8]
   36600:	str	r2, [r5, #96]	; 0x60
   36604:	str	r1, [r5, #100]	; 0x64
   36608:	ldr	r2, [sp, #8]
   3660c:	adds	r2, r2, #1
   36610:	str	r2, [sp, #8]
   36614:	ldr	r2, [sp, #12]
   36618:	adc	r2, r2, #0
   3661c:	cmp	r3, #0
   36620:	str	r2, [sp, #12]
   36624:	beq	35474 <__flatcc_fb_clear_parser@@Base+0x1f08>
   36628:	mov	r2, #0
   3662c:	ldr	r1, [r5, #4]
   36630:	mov	r0, fp
   36634:	mov	r3, r2
   36638:	str	r2, [sp]
   3663c:	str	r2, [sp, #4]
   36640:	ldr	r2, [pc, #-2724]	; 35ba4 <__flatcc_fb_clear_parser@@Base+0x2638>
   36644:	add	r2, pc, r2
   36648:	bl	2ebf8 <__flatcc_error_report@@Base>
   3664c:	mov	r3, #1
   36650:	strh	r3, [r5, #24]
   36654:	b	34f18 <__flatcc_fb_clear_parser@@Base+0x19ac>
   36658:	mov	r2, #0
   3665c:	ldr	r1, [r5, #4]
   36660:	mov	r0, fp
   36664:	mov	r3, r2
   36668:	str	r2, [sp]
   3666c:	str	r2, [sp, #4]
   36670:	ldr	r2, [pc, #-2768]	; 35ba8 <__flatcc_fb_clear_parser@@Base+0x263c>
   36674:	add	r2, pc, r2
   36678:	bl	2ebf8 <__flatcc_error_report@@Base>
   3667c:	ldrh	r0, [sl, #8]
   36680:	b	36108 <__flatcc_fb_clear_parser@@Base+0x2b9c>
   36684:	ldr	r1, [sp, #32]
   36688:	mov	r2, #0
   3668c:	mov	r3, #0
   36690:	str	r5, [sp, #52]	; 0x34
   36694:	strd	r2, [r1, #96]	; 0x60
   36698:	b	36058 <__flatcc_fb_clear_parser@@Base+0x2aec>
   3669c:	mov	r2, #1
   366a0:	mov	r3, ip
   366a4:	ldr	r1, [r5, #4]
   366a8:	mov	r0, fp
   366ac:	str	ip, [sp]
   366b0:	str	ip, [sp, #4]
   366b4:	str	r2, [sp, #16]
   366b8:	ldr	r2, [pc, #-2836]	; 35bac <__flatcc_fb_clear_parser@@Base+0x2640>
   366bc:	add	r2, pc, r2
   366c0:	bl	2ebf8 <__flatcc_error_report@@Base>
   366c4:	b	354f0 <__flatcc_fb_clear_parser@@Base+0x1f84>
   366c8:	mov	r3, r1
   366cc:	ldr	r2, [pc, #-2852]	; 35bb0 <__flatcc_fb_clear_parser@@Base+0x2644>
   366d0:	mov	r0, fp
   366d4:	str	r1, [sp]
   366d8:	str	r1, [sp, #4]
   366dc:	ldr	r1, [sp, #32]
   366e0:	add	r2, pc, r2
   366e4:	ldr	r1, [r1, #4]
   366e8:	bl	2ebf8 <__flatcc_error_report@@Base>
   366ec:	b	35ebc <__flatcc_fb_clear_parser@@Base+0x2950>
   366f0:	mov	r1, #2
   366f4:	str	r3, [sp, #16]
   366f8:	strb	r1, [r2]
   366fc:	b	354f0 <__flatcc_fb_clear_parser@@Base+0x1f84>
   36700:	ldr	r3, [sp, #20]
   36704:	cmp	r1, #11
   36708:	ldr	r1, [r3, #4]
   3670c:	beq	36950 <__flatcc_fb_clear_parser@@Base+0x33e4>
   36710:	ldr	r2, [pc, #-2916]	; 35bb4 <__flatcc_fb_clear_parser@@Base+0x2648>
   36714:	add	r2, pc, r2
   36718:	b	36264 <__flatcc_fb_clear_parser@@Base+0x2cf8>
   3671c:	ldr	r3, [r5, #48]	; 0x30
   36720:	ldr	r2, [sp, #32]
   36724:	cmp	r3, #0
   36728:	str	r3, [sp, #96]	; 0x60
   3672c:	ldr	r4, [r2, #12]
   36730:	beq	369e0 <__flatcc_fb_clear_parser@@Base+0x3474>
   36734:	mov	r2, r1
   36738:	mov	r1, r3
   3673c:	ldr	r9, [sp, #56]	; 0x38
   36740:	b	36750 <__flatcc_fb_clear_parser@@Base+0x31e4>
   36744:	mov	r6, r1
   36748:	mov	r2, r0
   3674c:	mov	r1, r3
   36750:	ldr	r3, [r1]
   36754:	add	r0, r2, #1
   36758:	cmp	r3, #0
   3675c:	bne	36744 <__flatcc_fb_clear_parser@@Base+0x31d8>
   36760:	cmp	r6, #0
   36764:	str	r9, [sp, #56]	; 0x38
   36768:	str	r1, [sp, #100]	; 0x64
   3676c:	beq	367ec <__flatcc_fb_clear_parser@@Base+0x3280>
   36770:	sub	r3, r2, #1
   36774:	cmp	r4, #0
   36778:	clz	r3, r3
   3677c:	lsr	r3, r3, #5
   36780:	moveq	r3, #0
   36784:	cmp	r3, #0
   36788:	beq	368dc <__flatcc_fb_clear_parser@@Base+0x3370>
   3678c:	ldr	r9, [sp, #56]	; 0x38
   36790:	add	r8, fp, #352	; 0x160
   36794:	str	r5, [sp, #84]	; 0x54
   36798:	ldr	r3, [r6, #4]
   3679c:	add	r0, r4, #4
   367a0:	ldm	r3, {r1, r2}
   367a4:	bl	2c7d4 <fb_symbol_table_find@@Base>
   367a8:	subs	r3, r0, #0
   367ac:	beq	36830 <__flatcc_fb_clear_parser@@Base+0x32c4>
   367b0:	ldrh	r2, [r3, #8]
   367b4:	cmp	r2, #4
   367b8:	bhi	36830 <__flatcc_fb_clear_parser@@Base+0x32c4>
   367bc:	ldr	r1, [r3, #16]
   367c0:	str	r3, [sp, #56]	; 0x38
   367c4:	ldr	r0, [sp, #64]	; 0x40
   367c8:	bl	2c058 <ptr_set_find_item@@Base>
   367cc:	cmp	r0, #0
   367d0:	ldr	r3, [sp, #56]	; 0x38
   367d4:	beq	36830 <__flatcc_fb_clear_parser@@Base+0x32c4>
   367d8:	ldr	r5, [sp, #84]	; 0x54
   367dc:	str	r9, [sp, #56]	; 0x38
   367e0:	ldrh	r2, [r3, #8]
   367e4:	cmp	r2, #3
   367e8:	beq	36800 <__flatcc_fb_clear_parser@@Base+0x3294>
   367ec:	ldr	r3, [sp, #96]	; 0x60
   367f0:	ldr	r3, [r3]
   367f4:	cmp	r3, #0
   367f8:	bne	36994 <__flatcc_fb_clear_parser@@Base+0x3428>
   367fc:	mov	r3, sl
   36800:	ldr	r2, [sp, #100]	; 0x64
   36804:	add	r0, r3, #56	; 0x38
   36808:	ldr	r2, [r2, #4]
   3680c:	ldm	r2, {r1, r2}
   36810:	bl	2c7d4 <fb_symbol_table_find@@Base>
   36814:	cmp	r0, #0
   36818:	beq	36994 <__flatcc_fb_clear_parser@@Base+0x3428>
   3681c:	ldrd	r2, [r0, #48]	; 0x30
   36820:	strd	r2, [r5, #48]	; 0x30
   36824:	ldrd	r2, [r0, #56]	; 0x38
   36828:	strd	r2, [r5, #56]	; 0x38
   3682c:	b	35468 <__flatcc_fb_clear_parser@@Base+0x1efc>
   36830:	ldr	r2, [r4]
   36834:	cmp	r2, #0
   36838:	beq	368bc <__flatcc_fb_clear_parser@@Base+0x3350>
   3683c:	mov	r3, #0
   36840:	b	36848 <__flatcc_fb_clear_parser@@Base+0x32dc>
   36844:	mov	r3, r1
   36848:	ldr	r2, [r2]
   3684c:	add	r1, r3, #1
   36850:	cmp	r2, #0
   36854:	bne	36844 <__flatcc_fb_clear_parser@@Base+0x32d8>
   36858:	rsb	r5, r3, #0
   3685c:	b	3688c <__flatcc_fb_clear_parser@@Base+0x3320>
   36860:	cmp	r8, #0
   36864:	beq	36888 <__flatcc_fb_clear_parser@@Base+0x331c>
   36868:	ldr	r0, [fp, #412]	; 0x19c
   3686c:	cmp	r0, #0
   36870:	beq	36888 <__flatcc_fb_clear_parser@@Base+0x331c>
   36874:	mov	r2, r5
   36878:	ldr	r1, [r4]
   3687c:	bl	2d85c <fb_scope_table_find@@Base>
   36880:	cmp	r0, #0
   36884:	bne	368c8 <__flatcc_fb_clear_parser@@Base+0x335c>
   36888:	add	r5, r5, #1
   3688c:	cmp	r5, #0
   36890:	bne	36860 <__flatcc_fb_clear_parser@@Base+0x32f4>
   36894:	cmp	r8, #0
   36898:	beq	368bc <__flatcc_fb_clear_parser@@Base+0x3350>
   3689c:	ldr	r0, [fp, #412]	; 0x19c
   368a0:	cmp	r0, #0
   368a4:	beq	368bc <__flatcc_fb_clear_parser@@Base+0x3350>
   368a8:	mov	r2, r5
   368ac:	mov	r1, r5
   368b0:	bl	2d85c <fb_scope_table_find@@Base>
   368b4:	subs	r4, r0, #0
   368b8:	bne	36798 <__flatcc_fb_clear_parser@@Base+0x322c>
   368bc:	str	r9, [sp, #56]	; 0x38
   368c0:	ldr	r5, [sp, #84]	; 0x54
   368c4:	b	367ec <__flatcc_fb_clear_parser@@Base+0x3280>
   368c8:	mov	r4, r0
   368cc:	b	36798 <__flatcc_fb_clear_parser@@Base+0x322c>
   368d0:	ldr	r2, [pc, #-3360]	; 35bb8 <__flatcc_fb_clear_parser@@Base+0x264c>
   368d4:	add	r2, pc, r2
   368d8:	b	36264 <__flatcc_fb_clear_parser@@Base+0x2cf8>
   368dc:	cmp	r2, #1
   368e0:	ldr	r1, [sp, #96]	; 0x60
   368e4:	moveq	r1, r3
   368e8:	cmn	fp, #352	; 0x160
   368ec:	beq	367ec <__flatcc_fb_clear_parser@@Base+0x3280>
   368f0:	ldr	r0, [fp, #412]	; 0x19c
   368f4:	cmp	r0, #0
   368f8:	beq	367ec <__flatcc_fb_clear_parser@@Base+0x3280>
   368fc:	rsb	r2, r2, #1
   36900:	bl	2d85c <fb_scope_table_find@@Base>
   36904:	cmp	r0, #0
   36908:	beq	367ec <__flatcc_fb_clear_parser@@Base+0x3280>
   3690c:	ldr	r3, [r6, #4]
   36910:	add	r0, r0, #4
   36914:	ldm	r3, {r1, r2}
   36918:	bl	2c7d4 <fb_symbol_table_find@@Base>
   3691c:	subs	r3, r0, #0
   36920:	beq	367ec <__flatcc_fb_clear_parser@@Base+0x3280>
   36924:	ldrh	r2, [r3, #8]
   36928:	cmp	r2, #4
   3692c:	bhi	367ec <__flatcc_fb_clear_parser@@Base+0x3280>
   36930:	ldr	r1, [r3, #16]
   36934:	ldr	r0, [sp, #64]	; 0x40
   36938:	str	r3, [sp, #64]	; 0x40
   3693c:	bl	2c058 <ptr_set_find_item@@Base>
   36940:	cmp	r0, #0
   36944:	ldr	r3, [sp, #64]	; 0x40
   36948:	bne	367e0 <__flatcc_fb_clear_parser@@Base+0x3274>
   3694c:	b	367ec <__flatcc_fb_clear_parser@@Base+0x3280>
   36950:	ldr	r2, [pc, #-3484]	; 35bbc <__flatcc_fb_clear_parser@@Base+0x2650>
   36954:	add	r2, pc, r2
   36958:	b	36264 <__flatcc_fb_clear_parser@@Base+0x2cf8>
   3695c:	ldr	r2, [pc, #-3492]	; 35bc0 <__flatcc_fb_clear_parser@@Base+0x2654>
   36960:	add	r2, pc, r2
   36964:	b	36264 <__flatcc_fb_clear_parser@@Base+0x2cf8>
   36968:	mov	r2, #0
   3696c:	ldr	r3, [r3, #4]
   36970:	mov	r0, fp
   36974:	ldr	r1, [r6, #4]
   36978:	str	r2, [sp]
   3697c:	str	r2, [sp, #4]
   36980:	ldr	r2, [pc, #-3524]	; 35bc4 <__flatcc_fb_clear_parser@@Base+0x2658>
   36984:	add	r2, pc, r2
   36988:	bl	2ebf8 <__flatcc_error_report@@Base>
   3698c:	ldrh	r8, [r5, #72]	; 0x48
   36990:	b	35150 <__flatcc_fb_clear_parser@@Base+0x1be4>
   36994:	ldr	r2, [pc, #-3540]	; 35bc8 <__flatcc_fb_clear_parser@@Base+0x265c>
   36998:	mov	r3, r5
   3699c:	mov	r0, fp
   369a0:	ldr	r1, [r5, #48]	; 0x30
   369a4:	add	r2, pc, r2
   369a8:	bl	30378 <error_ref_sym@@Base>
   369ac:	mov	r3, #1
   369b0:	strh	r3, [r5, #24]
   369b4:	b	34f18 <__flatcc_fb_clear_parser@@Base+0x19ac>
   369b8:	ldr	r2, [pc, #-3572]	; 35bcc <__flatcc_fb_clear_parser@@Base+0x2660>
   369bc:	mov	r0, fp
   369c0:	ldr	r3, [r3, #4]
   369c4:	ldr	r1, [r6, #4]
   369c8:	add	r2, pc, r2
   369cc:	str	ip, [sp]
   369d0:	str	ip, [sp, #4]
   369d4:	bl	2ebf8 <__flatcc_error_report@@Base>
   369d8:	ldrh	r8, [r5, #72]	; 0x48
   369dc:	b	35150 <__flatcc_fb_clear_parser@@Base+0x1be4>
   369e0:	ldr	r3, [pc, #-3608]	; 35bd0 <__flatcc_fb_clear_parser@@Base+0x2664>
   369e4:	movw	r2, #347	; 0x15b
   369e8:	ldr	r1, [pc, #-3612]	; 35bd4 <__flatcc_fb_clear_parser@@Base+0x2668>
   369ec:	ldr	r0, [pc, #-3612]	; 35bd8 <__flatcc_fb_clear_parser@@Base+0x266c>
   369f0:	add	r3, pc, r3
   369f4:	add	r3, r3, #268	; 0x10c
   369f8:	add	r1, pc, r1
   369fc:	add	r0, pc, r0
   36a00:	bl	14118 <__assert_fail@plt>
   36a04:	ldr	r3, [sp, #16]
   36a08:	str	r3, [sp, #36]	; 0x24
   36a0c:	b	35eec <__flatcc_fb_clear_parser@@Base+0x2980>
   36a10:	ldr	r3, [pc, #-3644]	; 35bdc <__flatcc_fb_clear_parser@@Base+0x2670>
   36a14:	movw	r2, #770	; 0x302
   36a18:	ldr	r1, [pc, #-3648]	; 35be0 <__flatcc_fb_clear_parser@@Base+0x2674>
   36a1c:	ldr	r0, [pc, #-3648]	; 35be4 <__flatcc_fb_clear_parser@@Base+0x2678>
   36a20:	add	r3, pc, r3
   36a24:	add	r3, r3, #252	; 0xfc
   36a28:	add	r1, pc, r1
   36a2c:	add	r0, pc, r0
   36a30:	bl	14118 <__assert_fail@plt>
   36a34:	ldr	r3, [sp, #36]	; 0x24
   36a38:	str	r3, [sp, #16]
   36a3c:	b	354f0 <__flatcc_fb_clear_parser@@Base+0x1f84>
   36a40:	ldr	r3, [pc, #-3680]	; 35be8 <__flatcc_fb_clear_parser@@Base+0x267c>
   36a44:	movw	r2, #769	; 0x301
   36a48:	ldr	r1, [pc, #-3684]	; 35bec <__flatcc_fb_clear_parser@@Base+0x2680>
   36a4c:	ldr	r0, [pc, #-3684]	; 35bf0 <__flatcc_fb_clear_parser@@Base+0x2684>
   36a50:	add	r3, pc, r3
   36a54:	add	r3, r3, #252	; 0xfc
   36a58:	add	r1, pc, r1
   36a5c:	add	r0, pc, r0
   36a60:	bl	14118 <__assert_fail@plt>
   36a64:	ldr	r3, [sp, #52]	; 0x34
   36a68:	cmp	r3, #0
   36a6c:	beq	36058 <__flatcc_fb_clear_parser@@Base+0x2aec>
   36a70:	ldr	r2, [sp, #32]
   36a74:	ldr	r1, [sp, #52]	; 0x34
   36a78:	ldrh	r3, [r2, #10]
   36a7c:	cmp	r1, #1
   36a80:	orr	r3, r3, #8
   36a84:	strh	r3, [r2, #10]
   36a88:	bne	34f58 <__flatcc_fb_clear_parser@@Base+0x19ec>
   36a8c:	ldr	r3, [sp, #36]	; 0x24
   36a90:	str	r3, [sp, #52]	; 0x34
   36a94:	b	36058 <__flatcc_fb_clear_parser@@Base+0x2aec>
   36a98:	mov	r2, #0
   36a9c:	ldr	r1, [r5, #4]
   36aa0:	mov	r0, fp
   36aa4:	mov	r3, r2
   36aa8:	str	r2, [sp]
   36aac:	str	r2, [sp, #4]
   36ab0:	ldr	r2, [pc, #-3780]	; 35bf4 <__flatcc_fb_clear_parser@@Base+0x2688>
   36ab4:	add	r2, pc, r2
   36ab8:	bl	2ebf8 <__flatcc_error_report@@Base>
   36abc:	b	35620 <__flatcc_fb_clear_parser@@Base+0x20b4>
   36ac0:	mov	r2, #0
   36ac4:	ldr	r3, [sl, #4]
   36ac8:	mov	r0, fp
   36acc:	ldr	r1, [r5, #4]
   36ad0:	str	r2, [sp]
   36ad4:	str	r2, [sp, #4]
   36ad8:	ldr	r2, [pc, #-3816]	; 35bf8 <__flatcc_fb_clear_parser@@Base+0x268c>
   36adc:	add	r2, pc, r2
   36ae0:	bl	2ebf8 <__flatcc_error_report@@Base>
   36ae4:	mov	r3, #1
   36ae8:	strh	r3, [r5, #24]
   36aec:	b	34f18 <__flatcc_fb_clear_parser@@Base+0x19ac>

00036af0 <__flatcc_fb_build_schema@@Base>:
   36af0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   36af4:	add	r3, r0, #524	; 0x20c
   36af8:	strd	r6, [sp, #8]
   36afc:	ldr	r7, [pc, #4064]	; 37ae4 <__flatcc_fb_build_schema@@Base+0xff4>
   36b00:	strd	r8, [sp, #16]
   36b04:	strd	sl, [sp, #24]
   36b08:	add	sl, r0, #352	; 0x160
   36b0c:	mov	fp, r0
   36b10:	str	lr, [sp, #32]
   36b14:	sub	sp, sp, #148	; 0x94
   36b18:	mov	r1, sl
   36b1c:	mov	r0, r3
   36b20:	str	r3, [sp, #20]
   36b24:	add	r7, pc, r7
   36b28:	bl	2c058 <ptr_set_find_item@@Base>
   36b2c:	cmp	r0, #0
   36b30:	beq	38858 <__flatcc_fb_build_schema@@Base+0x1d68>
   36b34:	ldr	r4, [fp, #392]	; 0x188
   36b38:	cmp	r4, #0
   36b3c:	beq	36c14 <__flatcc_fb_build_schema@@Base+0x124>
   36b40:	movw	r5, #403	; 0x193
   36b44:	movt	r5, #256	; 0x100
   36b48:	movw	r6, #40389	; 0x9dc5
   36b4c:	movt	r6, #33052	; 0x811c
   36b50:	b	36b60 <__flatcc_fb_build_schema@@Base+0x70>
   36b54:	ldr	r4, [r4]
   36b58:	cmp	r4, #0
   36b5c:	beq	36c14 <__flatcc_fb_build_schema@@Base+0x124>
   36b60:	ldrh	r3, [r4, #8]
   36b64:	cmp	r3, #4
   36b68:	bhi	36b54 <__flatcc_fb_build_schema@@Base+0x64>
   36b6c:	ldr	r3, [r4, #4]
   36b70:	ldr	r0, [r4, #12]
   36b74:	ldm	r3, {r1, ip}
   36b78:	cmp	r0, #0
   36b7c:	beq	37508 <__flatcc_fb_build_schema@@Base+0xa18>
   36b80:	ldr	r8, [r0]
   36b84:	cmp	r8, #0
   36b88:	bne	37a18 <__flatcc_fb_build_schema@@Base+0xf28>
   36b8c:	cmp	ip, #0
   36b90:	beq	37a6c <__flatcc_fb_build_schema@@Base+0xf7c>
   36b94:	movw	r3, #40389	; 0x9dc5
   36b98:	movt	r3, #33052	; 0x811c
   36b9c:	add	ip, r1, ip
   36ba0:	ldrb	r2, [r1], #1
   36ba4:	eor	r3, r3, r2
   36ba8:	cmp	r1, ip
   36bac:	mul	r3, r5, r3
   36bb0:	bne	36ba0 <__flatcc_fb_build_schema@@Base+0xb0>
   36bb4:	cmp	r3, #0
   36bb8:	str	sl, [r4, #16]
   36bbc:	moveq	r3, r6
   36bc0:	cmp	r0, #0
   36bc4:	str	r3, [r4, #88]	; 0x58
   36bc8:	beq	36b54 <__flatcc_fb_build_schema@@Base+0x64>
   36bcc:	add	r0, r0, #4
   36bd0:	mov	r2, #1
   36bd4:	mov	r1, r4
   36bd8:	bl	2c7ac <fb_symbol_table_insert_item@@Base>
   36bdc:	cmp	r0, #0
   36be0:	beq	36b54 <__flatcc_fb_build_schema@@Base+0x64>
   36be4:	mov	r2, #0
   36be8:	ldr	r3, [r0, #4]
   36bec:	mov	r0, fp
   36bf0:	ldr	r1, [r4, #4]
   36bf4:	str	r2, [sp]
   36bf8:	str	r2, [sp, #4]
   36bfc:	ldr	r2, [pc, #3812]	; 37ae8 <__flatcc_fb_build_schema@@Base+0xff8>
   36c00:	add	r2, pc, r2
   36c04:	bl	2ebf8 <__flatcc_error_report@@Base>
   36c08:	ldr	r4, [r4]
   36c0c:	cmp	r4, #0
   36c10:	bne	36b60 <__flatcc_fb_build_schema@@Base+0x70>
   36c14:	ldr	r4, [fp, #356]	; 0x164
   36c18:	cmp	r4, #0
   36c1c:	beq	36c74 <__flatcc_fb_build_schema@@Base+0x184>
   36c20:	ldr	r5, [pc, #3780]	; 37aec <__flatcc_fb_build_schema@@Base+0xffc>
   36c24:	add	r5, pc, r5
   36c28:	ldr	r0, [fp, #412]	; 0x19c
   36c2c:	mov	r2, #1
   36c30:	mov	r1, r4
   36c34:	add	r0, r0, #16
   36c38:	bl	3efe4 <fb_name_table_insert_item@@Base>
   36c3c:	cmp	r0, #0
   36c40:	beq	36c68 <__flatcc_fb_build_schema@@Base+0x178>
   36c44:	ldr	ip, [r4, #12]
   36c48:	mov	r3, #0
   36c4c:	mov	r2, r5
   36c50:	mov	r1, r3
   36c54:	mov	r0, fp
   36c58:	str	ip, [sp, #4]
   36c5c:	ldr	ip, [r4, #8]
   36c60:	str	ip, [sp]
   36c64:	bl	2ebf8 <__flatcc_error_report@@Base>
   36c68:	ldr	r4, [r4]
   36c6c:	cmp	r4, #0
   36c70:	bne	36c28 <__flatcc_fb_build_schema@@Base+0x138>
   36c74:	ldr	r6, [pc, #3700]	; 37af0 <__flatcc_fb_build_schema@@Base+0x1000>
   36c78:	mov	r5, #0
   36c7c:	mov	r8, #2
   36c80:	add	r6, pc, r6
   36c84:	b	36cd8 <__flatcc_fb_build_schema@@Base+0x1e8>
   36c88:	ldr	r2, [r6], #4
   36c8c:	str	r3, [fp, #52]	; 0x34
   36c90:	mov	r0, r2
   36c94:	str	r2, [r4, #8]
   36c98:	str	r5, [r4, #24]
   36c9c:	bl	1404c <strlen@plt>
   36ca0:	ldr	r3, [fp, #412]	; 0x19c
   36ca4:	mov	ip, #0
   36ca8:	mov	r1, r4
   36cac:	mov	r2, #1
   36cb0:	str	ip, [r4]
   36cb4:	str	r0, [r4, #12]
   36cb8:	strh	r8, [r4, #16]
   36cbc:	add	r0, r3, #16
   36cc0:	bl	3efe4 <fb_name_table_insert_item@@Base>
   36cc4:	cmp	r0, #0
   36cc8:	strne	r5, [r0, #24]
   36ccc:	add	r5, r5, #1
   36cd0:	cmp	r5, #12
   36cd4:	beq	36d20 <__flatcc_fb_build_schema@@Base+0x230>
   36cd8:	ldr	r2, [fp, #44]	; 0x2c
   36cdc:	ldr	r4, [fp, #52]	; 0x34
   36ce0:	add	r3, r4, #32
   36ce4:	cmp	r3, r2
   36ce8:	bls	36c88 <__flatcc_fb_build_schema@@Base+0x198>
   36cec:	mov	r1, #1
   36cf0:	mov	r0, #65536	; 0x10000
   36cf4:	bl	13f74 <calloc@plt>
   36cf8:	cmp	r0, #0
   36cfc:	beq	3880c <__flatcc_fb_build_schema@@Base+0x1d1c>
   36d00:	ldr	r2, [fp, #48]	; 0x30
   36d04:	add	r1, r0, #65536	; 0x10000
   36d08:	add	r4, r0, #16
   36d0c:	add	r3, r0, #48	; 0x30
   36d10:	str	r1, [fp, #44]	; 0x2c
   36d14:	str	r0, [fp, #48]	; 0x30
   36d18:	str	r2, [r0]
   36d1c:	b	36c88 <__flatcc_fb_build_schema@@Base+0x198>
   36d20:	ldr	r3, [fp, #184]	; 0xb8
   36d24:	ldr	r9, [fp, #392]	; 0x188
   36d28:	cmp	r3, #0
   36d2c:	bne	36d6c <__flatcc_fb_build_schema@@Base+0x27c>
   36d30:	cmp	r9, #0
   36d34:	beq	38760 <__flatcc_fb_build_schema@@Base+0x1c70>
   36d38:	mov	r4, #1
   36d3c:	ldrh	r3, [r9, #8]
   36d40:	cmp	r3, #3
   36d44:	bne	36d5c <__flatcc_fb_build_schema@@Base+0x26c>
   36d48:	mov	r1, r9
   36d4c:	mov	r0, fp
   36d50:	bl	33c74 <__flatcc_fb_clear_parser@@Base+0x708>
   36d54:	cmp	r0, #0
   36d58:	strhne	r4, [r9, #48]	; 0x30
   36d5c:	ldr	r9, [r9]
   36d60:	cmp	r9, #0
   36d64:	bne	36d3c <__flatcc_fb_build_schema@@Base+0x24c>
   36d68:	ldr	r9, [fp, #392]	; 0x188
   36d6c:	cmp	r9, #0
   36d70:	beq	38760 <__flatcc_fb_build_schema@@Base+0x1c70>
   36d74:	ldr	r3, [pc, #3448]	; 37af4 <__flatcc_fb_build_schema@@Base+0x1004>
   36d78:	str	sl, [sp, #28]
   36d7c:	mov	sl, r9
   36d80:	add	r3, pc, r3
   36d84:	str	r3, [sp, #48]	; 0x30
   36d88:	ldr	r3, [pc, #3432]	; 37af8 <__flatcc_fb_build_schema@@Base+0x1008>
   36d8c:	add	r3, pc, r3
   36d90:	str	r3, [sp, #12]
   36d94:	ldrh	r3, [sl, #8]
   36d98:	cmp	r3, #4
   36d9c:	addls	pc, pc, r3, lsl #2
   36da0:	b	388a0 <__flatcc_fb_build_schema@@Base+0x1db0>
   36da4:	b	36f04 <__flatcc_fb_build_schema@@Base+0x414>
   36da8:	b	37370 <__flatcc_fb_build_schema@@Base+0x880>
   36dac:	b	36f04 <__flatcc_fb_build_schema@@Base+0x414>
   36db0:	b	37340 <__flatcc_fb_build_schema@@Base+0x850>
   36db4:	b	3734c <__flatcc_fb_build_schema@@Base+0x85c>
   36db8:	cmp	r4, #0
   36dbc:	beq	36de0 <__flatcc_fb_build_schema@@Base+0x2f0>
   36dc0:	mov	r3, r2
   36dc4:	ldr	r1, [r4, #4]
   36dc8:	mov	r0, fp
   36dcc:	str	r2, [sp]
   36dd0:	str	r2, [sp, #4]
   36dd4:	ldr	r2, [pc, #3360]	; 37afc <__flatcc_fb_build_schema@@Base+0x100c>
   36dd8:	add	r2, pc, r2
   36ddc:	bl	2ebf8 <__flatcc_error_report@@Base>
   36de0:	ldrh	r3, [r8, #24]
   36de4:	strh	r5, [r8, #72]	; 0x48
   36de8:	cmp	r3, #8
   36dec:	beq	37a9c <__flatcc_fb_build_schema@@Base+0xfac>
   36df0:	cmp	r3, #12
   36df4:	bne	379c0 <__flatcc_fb_build_schema@@Base+0xed0>
   36df8:	ldr	ip, [r8, #16]
   36dfc:	ldr	r3, [sp, #24]
   36e00:	cmp	ip, #0
   36e04:	ldr	r4, [r3, #12]
   36e08:	beq	36e80 <__flatcc_fb_build_schema@@Base+0x390>
   36e0c:	mov	r5, ip
   36e10:	mov	r2, #0
   36e14:	b	36e20 <__flatcc_fb_build_schema@@Base+0x330>
   36e18:	mov	r2, r0
   36e1c:	mov	r5, r3
   36e20:	ldr	r3, [r5]
   36e24:	add	r0, r2, #1
   36e28:	cmp	r3, #0
   36e2c:	bne	36e18 <__flatcc_fb_build_schema@@Base+0x328>
   36e30:	sub	r3, r0, #1
   36e34:	cmp	r4, #0
   36e38:	clz	r3, r3
   36e3c:	lsr	r3, r3, #5
   36e40:	moveq	r3, #0
   36e44:	cmp	r3, #0
   36e48:	bne	377ac <__flatcc_fb_build_schema@@Base+0xcbc>
   36e4c:	cmp	r0, #1
   36e50:	moveq	r1, r3
   36e54:	movne	r1, ip
   36e58:	cmp	sl, #0
   36e5c:	beq	36e80 <__flatcc_fb_build_schema@@Base+0x390>
   36e60:	ldr	r0, [fp, #412]	; 0x19c
   36e64:	cmp	r0, #0
   36e68:	beq	36e80 <__flatcc_fb_build_schema@@Base+0x390>
   36e6c:	rsb	r2, r2, #0
   36e70:	bl	2d85c <fb_scope_table_find@@Base>
   36e74:	cmp	r0, #0
   36e78:	bne	38458 <__flatcc_fb_build_schema@@Base+0x1968>
   36e7c:	ldr	ip, [r8, #16]
   36e80:	mov	r3, r8
   36e84:	mov	r1, ip
   36e88:	ldr	r2, [pc, #3184]	; 37b00 <__flatcc_fb_build_schema@@Base+0x1010>
   36e8c:	mov	r0, fp
   36e90:	add	r2, pc, r2
   36e94:	bl	30378 <error_ref_sym@@Base>
   36e98:	mov	r3, #1
   36e9c:	strh	r3, [r8, #24]
   36ea0:	ldr	r8, [r8]
   36ea4:	cmp	r8, #0
   36ea8:	bne	375cc <__flatcc_fb_build_schema@@Base+0xadc>
   36eac:	ldr	sl, [sp, #24]
   36eb0:	ldr	r2, [sp, #36]	; 0x24
   36eb4:	cmp	r2, #0
   36eb8:	beq	36f04 <__flatcc_fb_build_schema@@Base+0x414>
   36ebc:	ldrh	r3, [sl, #10]
   36ec0:	cmp	r2, #1
   36ec4:	orr	r3, r3, #8
   36ec8:	strh	r3, [sl, #10]
   36ecc:	beq	36f04 <__flatcc_fb_build_schema@@Base+0x414>
   36ed0:	ldr	r3, [fp, #156]	; 0x9c
   36ed4:	cmp	r3, #0
   36ed8:	bne	36f04 <__flatcc_fb_build_schema@@Base+0x414>
   36edc:	ldr	r2, [pc, #3104]	; 37b04 <__flatcc_fb_build_schema@@Base+0x1014>
   36ee0:	mov	r3, r8
   36ee4:	mov	r0, fp
   36ee8:	str	r8, [sp]
   36eec:	str	r8, [sp, #4]
   36ef0:	ldr	r1, [sl, #4]
   36ef4:	add	r2, pc, r2
   36ef8:	bl	2ebf8 <__flatcc_error_report@@Base>
   36efc:	mov	r3, #1
   36f00:	strh	r3, [sl, #48]	; 0x30
   36f04:	ldr	sl, [sl]
   36f08:	cmp	sl, #0
   36f0c:	bne	36d94 <__flatcc_fb_build_schema@@Base+0x2a4>
   36f10:	ldr	r4, [fp, #392]	; 0x188
   36f14:	ldr	sl, [sp, #28]
   36f18:	cmp	r4, #0
   36f1c:	beq	38760 <__flatcc_fb_build_schema@@Base+0x1c70>
   36f20:	ldrh	r5, [r4, #8]
   36f24:	cmp	r5, #1
   36f28:	bne	36f4c <__flatcc_fb_build_schema@@Base+0x45c>
   36f2c:	ldrh	r3, [r4, #48]	; 0x30
   36f30:	cmp	r3, #1
   36f34:	beq	36f4c <__flatcc_fb_build_schema@@Base+0x45c>
   36f38:	mov	r1, r4
   36f3c:	mov	r0, fp
   36f40:	bl	3369c <__flatcc_fb_clear_parser@@Base+0x130>
   36f44:	cmp	r0, #0
   36f48:	strhne	r5, [r4, #48]	; 0x30
   36f4c:	ldr	r4, [r4]
   36f50:	cmp	r4, #0
   36f54:	bne	36f20 <__flatcc_fb_build_schema@@Base+0x430>
   36f58:	ldr	r9, [fp, #392]	; 0x188
   36f5c:	cmp	r9, #0
   36f60:	beq	38760 <__flatcc_fb_build_schema@@Base+0x1c70>
   36f64:	ldr	r3, [pc, #2972]	; 37b08 <__flatcc_fb_build_schema@@Base+0x1018>
   36f68:	add	r3, pc, r3
   36f6c:	str	r3, [sp, #24]
   36f70:	ldr	r3, [pc, #2964]	; 37b0c <__flatcc_fb_build_schema@@Base+0x101c>
   36f74:	add	r3, pc, r3
   36f78:	str	r3, [sp, #40]	; 0x28
   36f7c:	ldrh	r3, [r9, #8]
   36f80:	cmp	r3, #0
   36f84:	beq	38214 <__flatcc_fb_build_schema@@Base+0x1724>
   36f88:	cmp	r3, #2
   36f8c:	bne	37224 <__flatcc_fb_build_schema@@Base+0x734>
   36f90:	ldrh	r2, [r9, #48]	; 0x30
   36f94:	cmp	r2, #1
   36f98:	beq	37224 <__flatcc_fb_build_schema@@Base+0x734>
   36f9c:	cmp	r2, #0
   36fa0:	bne	3887c <__flatcc_fb_build_schema@@Base+0x1d8c>
   36fa4:	ldr	r3, [r9, #28]
   36fa8:	cmp	r3, #0
   36fac:	beq	36fd0 <__flatcc_fb_build_schema@@Base+0x4e0>
   36fb0:	mov	r3, r2
   36fb4:	ldr	r1, [r9, #4]
   36fb8:	mov	r0, fp
   36fbc:	str	r2, [sp]
   36fc0:	str	r2, [sp, #4]
   36fc4:	ldr	r2, [pc, #2884]	; 37b10 <__flatcc_fb_build_schema@@Base+0x1020>
   36fc8:	add	r2, pc, r2
   36fcc:	bl	2ebf8 <__flatcc_error_report@@Base>
   36fd0:	ldr	r4, [r9, #20]
   36fd4:	cmp	r4, #0
   36fd8:	beq	37224 <__flatcc_fb_build_schema@@Base+0x734>
   36fdc:	ldr	r3, [pc, #2864]	; 37b14 <__flatcc_fb_build_schema@@Base+0x1024>
   36fe0:	str	r9, [sp, #16]
   36fe4:	add	r3, pc, r3
   36fe8:	str	r3, [sp, #32]
   36fec:	add	r3, r9, #56	; 0x38
   36ff0:	ldr	r9, [sp, #20]
   36ff4:	str	r3, [sp, #12]
   36ff8:	ldr	r3, [pc, #2840]	; 37b18 <__flatcc_fb_build_schema@@Base+0x1028>
   36ffc:	add	r3, pc, r3
   37000:	str	r3, [sp, #36]	; 0x24
   37004:	mov	r2, #1
   37008:	mov	r1, r4
   3700c:	ldr	r0, [sp, #12]
   37010:	bl	2c7ac <fb_symbol_table_insert_item@@Base>
   37014:	subs	r2, r0, #0
   37018:	bne	38144 <__flatcc_fb_build_schema@@Base+0x1654>
   3701c:	ldrh	r3, [r4, #8]
   37020:	cmp	r3, #5
   37024:	bne	38668 <__flatcc_fb_build_schema@@Base+0x1b78>
   37028:	ldrh	r3, [r4, #56]	; 0x38
   3702c:	cmp	r3, #0
   37030:	bne	381f0 <__flatcc_fb_build_schema@@Base+0x1700>
   37034:	ldrh	r3, [r4, #24]
   37038:	cmp	r3, #1
   3703c:	beq	37214 <__flatcc_fb_build_schema@@Base+0x724>
   37040:	cmp	r3, #12
   37044:	beq	3706c <__flatcc_fb_build_schema@@Base+0x57c>
   37048:	mov	r2, #0
   3704c:	ldr	r1, [r4, #4]
   37050:	mov	r0, fp
   37054:	mov	r3, r2
   37058:	str	r2, [sp]
   3705c:	str	r2, [sp, #4]
   37060:	ldr	r2, [pc, #2740]	; 37b1c <__flatcc_fb_build_schema@@Base+0x102c>
   37064:	add	r2, pc, r2
   37068:	bl	2ebf8 <__flatcc_error_report@@Base>
   3706c:	ldr	ip, [r4, #32]
   37070:	ldr	r3, [sp, #16]
   37074:	cmp	ip, #0
   37078:	ldr	r5, [r3, #12]
   3707c:	beq	37d4c <__flatcc_fb_build_schema@@Base+0x125c>
   37080:	mov	r6, ip
   37084:	mov	r2, #0
   37088:	b	37094 <__flatcc_fb_build_schema@@Base+0x5a4>
   3708c:	mov	r2, r0
   37090:	mov	r6, r3
   37094:	ldr	r3, [r6]
   37098:	add	r0, r2, #1
   3709c:	cmp	r3, #0
   370a0:	bne	3708c <__flatcc_fb_build_schema@@Base+0x59c>
   370a4:	sub	r3, r0, #1
   370a8:	cmp	r5, #0
   370ac:	clz	r3, r3
   370b0:	lsr	r3, r3, #5
   370b4:	moveq	r3, #0
   370b8:	cmp	r3, #0
   370bc:	bne	37c84 <__flatcc_fb_build_schema@@Base+0x1194>
   370c0:	cmp	r0, #1
   370c4:	moveq	r1, r3
   370c8:	movne	r1, ip
   370cc:	cmp	sl, #0
   370d0:	beq	37d4c <__flatcc_fb_build_schema@@Base+0x125c>
   370d4:	ldr	r0, [fp, #412]	; 0x19c
   370d8:	cmp	r0, #0
   370dc:	beq	37d4c <__flatcc_fb_build_schema@@Base+0x125c>
   370e0:	rsb	r2, r2, #0
   370e4:	bl	2d85c <fb_scope_table_find@@Base>
   370e8:	cmp	r0, #0
   370ec:	beq	37d48 <__flatcc_fb_build_schema@@Base+0x1258>
   370f0:	ldr	r3, [r6, #4]
   370f4:	add	r0, r0, #4
   370f8:	ldm	r3, {r1, r2}
   370fc:	bl	2c7d4 <fb_symbol_table_find@@Base>
   37100:	subs	r7, r0, #0
   37104:	beq	37d48 <__flatcc_fb_build_schema@@Base+0x1258>
   37108:	ldrh	r3, [r7, #8]
   3710c:	cmp	r3, #4
   37110:	bhi	37d48 <__flatcc_fb_build_schema@@Base+0x1258>
   37114:	mov	r0, r9
   37118:	ldr	r1, [r7, #16]
   3711c:	bl	2c058 <ptr_set_find_item@@Base>
   37120:	cmp	r0, #0
   37124:	beq	37d48 <__flatcc_fb_build_schema@@Base+0x1258>
   37128:	ldrh	r2, [r7, #8]
   3712c:	cmp	r2, #0
   37130:	bne	382ac <__flatcc_fb_build_schema@@Base+0x17bc>
   37134:	mov	r3, #14
   37138:	ldr	ip, [r4, #16]
   3713c:	str	r7, [r4, #32]
   37140:	strh	r3, [r4, #40]	; 0x28
   37144:	ldr	r3, [sp, #16]
   37148:	cmp	ip, #0
   3714c:	ldr	r5, [r3, #12]
   37150:	beq	371f8 <__flatcc_fb_build_schema@@Base+0x708>
   37154:	mov	r6, ip
   37158:	b	37164 <__flatcc_fb_build_schema@@Base+0x674>
   3715c:	mov	r2, r0
   37160:	mov	r6, r3
   37164:	ldr	r3, [r6]
   37168:	add	r0, r2, #1
   3716c:	cmp	r3, #0
   37170:	bne	3715c <__flatcc_fb_build_schema@@Base+0x66c>
   37174:	sub	r1, r0, #1
   37178:	cmp	r5, #0
   3717c:	clz	r1, r1
   37180:	lsr	r1, r1, #5
   37184:	moveq	r1, #0
   37188:	cmp	r1, #0
   3718c:	bne	37d7c <__flatcc_fb_build_schema@@Base+0x128c>
   37190:	cmp	r0, #1
   37194:	movne	r1, ip
   37198:	cmp	sl, #0
   3719c:	beq	371f8 <__flatcc_fb_build_schema@@Base+0x708>
   371a0:	ldr	r0, [fp, #412]	; 0x19c
   371a4:	cmp	r0, #0
   371a8:	beq	371f8 <__flatcc_fb_build_schema@@Base+0x708>
   371ac:	rsb	r2, r2, #0
   371b0:	bl	2d85c <fb_scope_table_find@@Base>
   371b4:	cmp	r0, #0
   371b8:	beq	371f4 <__flatcc_fb_build_schema@@Base+0x704>
   371bc:	ldr	r3, [r6, #4]
   371c0:	add	r0, r0, #4
   371c4:	ldm	r3, {r1, r2}
   371c8:	bl	2c7d4 <fb_symbol_table_find@@Base>
   371cc:	subs	r7, r0, #0
   371d0:	beq	371f4 <__flatcc_fb_build_schema@@Base+0x704>
   371d4:	ldrh	r3, [r7, #8]
   371d8:	cmp	r3, #4
   371dc:	bhi	371f4 <__flatcc_fb_build_schema@@Base+0x704>
   371e0:	mov	r0, r9
   371e4:	ldr	r1, [r7, #16]
   371e8:	bl	2c058 <ptr_set_find_item@@Base>
   371ec:	cmp	r0, #0
   371f0:	bne	37db4 <__flatcc_fb_build_schema@@Base+0x12c4>
   371f4:	ldr	ip, [r4, #16]
   371f8:	mov	r3, r4
   371fc:	mov	r1, ip
   37200:	mov	r0, fp
   37204:	ldr	r2, [sp, #36]	; 0x24
   37208:	bl	30378 <error_ref_sym@@Base>
   3720c:	mov	r3, #1
   37210:	strh	r3, [r4, #24]
   37214:	ldr	r4, [r4]
   37218:	cmp	r4, #0
   3721c:	bne	37004 <__flatcc_fb_build_schema@@Base+0x514>
   37220:	ldr	r9, [sp, #16]
   37224:	ldr	r9, [r9]
   37228:	cmp	r9, #0
   3722c:	bne	36f7c <__flatcc_fb_build_schema@@Base+0x48c>
   37230:	ldr	r0, [fp, #392]	; 0x188
   37234:	ldr	r3, [fp, #396]	; 0x18c
   37238:	cmp	r3, #0
   3723c:	beq	37260 <__flatcc_fb_build_schema@@Base+0x770>
   37240:	mov	r1, #0
   37244:	b	3724c <__flatcc_fb_build_schema@@Base+0x75c>
   37248:	mov	r3, r2
   3724c:	ldr	r2, [r3, #120]	; 0x78
   37250:	str	r1, [r3, #120]	; 0x78
   37254:	mov	r1, r3
   37258:	cmp	r2, #0
   3725c:	bne	37248 <__flatcc_fb_build_schema@@Base+0x758>
   37260:	cmp	r0, #0
   37264:	str	r3, [fp, #396]	; 0x18c
   37268:	beq	3807c <__flatcc_fb_build_schema@@Base+0x158c>
   3726c:	mov	ip, #0
   37270:	add	r5, sp, #92	; 0x5c
   37274:	mov	r4, ip
   37278:	add	lr, sp, #56	; 0x38
   3727c:	ldrh	r1, [r0, #8]
   37280:	cmp	r1, #0
   37284:	bne	38070 <__flatcc_fb_build_schema@@Base+0x1580>
   37288:	ldrh	r3, [r0, #92]	; 0x5c
   3728c:	ldr	r2, [r0, #20]
   37290:	ands	r3, r3, #8
   37294:	bne	38330 <__flatcc_fb_build_schema@@Base+0x1840>
   37298:	cmp	r2, #0
   3729c:	str	r3, [sp, #60]	; 0x3c
   372a0:	str	r3, [sp, #64]	; 0x40
   372a4:	str	r3, [sp, #68]	; 0x44
   372a8:	str	r3, [sp, #72]	; 0x48
   372ac:	str	r3, [sp, #76]	; 0x4c
   372b0:	str	r3, [sp, #80]	; 0x50
   372b4:	str	r3, [sp, #84]	; 0x54
   372b8:	str	r3, [sp, #88]	; 0x58
   372bc:	str	r3, [sp, #92]	; 0x5c
   372c0:	str	r3, [sp, #96]	; 0x60
   372c4:	str	r3, [sp, #100]	; 0x64
   372c8:	str	r3, [sp, #104]	; 0x68
   372cc:	str	r3, [sp, #108]	; 0x6c
   372d0:	str	r3, [sp, #112]	; 0x70
   372d4:	str	r3, [sp, #116]	; 0x74
   372d8:	str	r3, [sp, #120]	; 0x78
   372dc:	str	r3, [sp, #124]	; 0x7c
   372e0:	str	r3, [sp, #128]	; 0x80
   372e4:	beq	37ff0 <__flatcc_fb_build_schema@@Base+0x1500>
   372e8:	mov	r1, r2
   372ec:	ldrh	r6, [r1, #24]
   372f0:	ldrh	r3, [r1, #74]	; 0x4a
   372f4:	sub	r6, r6, #1
   372f8:	cmp	r6, #14
   372fc:	addls	pc, pc, r6, lsl #2
   37300:	b	37f80 <__flatcc_fb_build_schema@@Base+0x1490>
   37304:	b	38040 <__flatcc_fb_build_schema@@Base+0x1550>
   37308:	b	37f80 <__flatcc_fb_build_schema@@Base+0x1490>
   3730c:	b	37f80 <__flatcc_fb_build_schema@@Base+0x1490>
   37310:	b	37f80 <__flatcc_fb_build_schema@@Base+0x1490>
   37314:	b	37f80 <__flatcc_fb_build_schema@@Base+0x1490>
   37318:	b	37f80 <__flatcc_fb_build_schema@@Base+0x1490>
   3731c:	b	37f7c <__flatcc_fb_build_schema@@Base+0x148c>
   37320:	b	37f80 <__flatcc_fb_build_schema@@Base+0x1490>
   37324:	b	37f7c <__flatcc_fb_build_schema@@Base+0x148c>
   37328:	b	37f7c <__flatcc_fb_build_schema@@Base+0x148c>
   3732c:	b	37f80 <__flatcc_fb_build_schema@@Base+0x1490>
   37330:	b	37f80 <__flatcc_fb_build_schema@@Base+0x1490>
   37334:	b	37f80 <__flatcc_fb_build_schema@@Base+0x1490>
   37338:	b	37f64 <__flatcc_fb_build_schema@@Base+0x1474>
   3733c:	b	37f7c <__flatcc_fb_build_schema@@Base+0x148c>
   37340:	ldr	r3, [fp, #184]	; 0xb8
   37344:	cmp	r3, #0
   37348:	beq	36f04 <__flatcc_fb_build_schema@@Base+0x414>
   3734c:	mov	r1, sl
   37350:	mov	r0, fp
   37354:	bl	33c74 <__flatcc_fb_clear_parser@@Base+0x708>
   37358:	cmp	r0, #0
   3735c:	bne	36efc <__flatcc_fb_build_schema@@Base+0x40c>
   37360:	ldr	sl, [sl]
   37364:	cmp	sl, #0
   37368:	bne	36d94 <__flatcc_fb_build_schema@@Base+0x2a4>
   3736c:	b	36f10 <__flatcc_fb_build_schema@@Base+0x420>
   37370:	ldrh	r5, [sl, #48]	; 0x30
   37374:	cmp	r5, #0
   37378:	bne	387b4 <__flatcc_fb_build_schema@@Base+0x1cc4>
   3737c:	ldr	r4, [sl, #28]
   37380:	mov	r2, #0
   37384:	mov	r3, #0
   37388:	add	r6, sp, #96	; 0x60
   3738c:	strd	r2, [sp, #96]	; 0x60
   37390:	strd	r2, [r6, #8]
   37394:	strd	r2, [r6, #16]
   37398:	cmp	r4, #0
   3739c:	strd	r2, [r6, #24]
   373a0:	strd	r2, [r6, #32]
   373a4:	strheq	r4, [sl, #92]	; 0x5c
   373a8:	strd	r2, [r6, #40]	; 0x28
   373ac:	beq	3759c <__flatcc_fb_build_schema@@Base+0xaac>
   373b0:	ldr	r3, [pc, #1896]	; 37b20 <__flatcc_fb_build_schema@@Base+0x1030>
   373b4:	mov	r7, #100	; 0x64
   373b8:	ldr	r8, [pc, #1892]	; 37b24 <__flatcc_fb_build_schema@@Base+0x1034>
   373bc:	ldr	r9, [pc, #1892]	; 37b28 <__flatcc_fb_build_schema@@Base+0x1038>
   373c0:	add	r3, pc, r3
   373c4:	add	r8, pc, r8
   373c8:	str	r3, [sp, #16]
   373cc:	add	r9, pc, r9
   373d0:	b	37414 <__flatcc_fb_build_schema@@Base+0x924>
   373d4:	add	r1, r8, r1
   373d8:	str	r4, [r6, r2, lsl #2]
   373dc:	ldr	r2, [r1, #204]	; 0xcc
   373e0:	cmp	r2, #0
   373e4:	bne	37490 <__flatcc_fb_build_schema@@Base+0x9a0>
   373e8:	ldrh	r3, [r4, #16]
   373ec:	cmp	r3, #0
   373f0:	bne	38620 <__flatcc_fb_build_schema@@Base+0x1b30>
   373f4:	ldr	r4, [r4]
   373f8:	subs	r7, r7, #1
   373fc:	movne	r2, #1
   37400:	moveq	r2, #0
   37404:	cmp	r4, #0
   37408:	moveq	r2, #0
   3740c:	cmp	r2, #0
   37410:	beq	3751c <__flatcc_fb_build_schema@@Base+0xa2c>
   37414:	ldr	r3, [r4, #4]
   37418:	ldr	r0, [fp, #412]	; 0x19c
   3741c:	ldm	r3, {r1, r2}
   37420:	add	r0, r0, #16
   37424:	bl	3f00c <fb_name_table_find@@Base>
   37428:	subs	r2, r0, #0
   3742c:	beq	37a78 <__flatcc_fb_build_schema@@Base+0xf88>
   37430:	ldr	r2, [r2, #24]
   37434:	cmp	r2, #0
   37438:	beq	373f4 <__flatcc_fb_build_schema@@Base+0x904>
   3743c:	mov	r3, #16
   37440:	asr	r3, r3, r2
   37444:	ands	ip, r3, #1
   37448:	beq	379f4 <__flatcc_fb_build_schema@@Base+0xf04>
   3744c:	ldr	ip, [r6, r2, lsl #2]
   37450:	mov	r3, #1
   37454:	lsl	r1, r2, #2
   37458:	orr	r5, r5, r3, lsl r2
   3745c:	uxth	r5, r5
   37460:	cmp	ip, #0
   37464:	beq	373d4 <__flatcc_fb_build_schema@@Base+0x8e4>
   37468:	mov	r2, #0
   3746c:	ldr	r1, [r4, #4]
   37470:	mov	r0, fp
   37474:	mov	r3, r2
   37478:	str	r2, [sp]
   3747c:	str	r2, [sp, #4]
   37480:	ldr	r2, [pc, #1700]	; 37b2c <__flatcc_fb_build_schema@@Base+0x103c>
   37484:	add	r2, pc, r2
   37488:	bl	2ebf8 <__flatcc_error_report@@Base>
   3748c:	b	373f4 <__flatcc_fb_build_schema@@Base+0x904>
   37490:	cmp	r2, #2
   37494:	bne	374c8 <__flatcc_fb_build_schema@@Base+0x9d8>
   37498:	ldrh	r3, [r4, #16]
   3749c:	cmp	r3, #2
   374a0:	beq	373f4 <__flatcc_fb_build_schema@@Base+0x904>
   374a4:	ldr	r2, [pc, #1668]	; 37b30 <__flatcc_fb_build_schema@@Base+0x1040>
   374a8:	mov	r3, ip
   374ac:	mov	r0, fp
   374b0:	ldr	r1, [r4, #4]
   374b4:	str	ip, [sp]
   374b8:	str	ip, [sp, #4]
   374bc:	add	r2, pc, r2
   374c0:	bl	2ebf8 <__flatcc_error_report@@Base>
   374c4:	b	373f4 <__flatcc_fb_build_schema@@Base+0x904>
   374c8:	cmp	r2, #5
   374cc:	beq	37ab4 <__flatcc_fb_build_schema@@Base+0xfc4>
   374d0:	cmp	r2, #4
   374d4:	bne	37c00 <__flatcc_fb_build_schema@@Base+0x1110>
   374d8:	ldrh	r3, [r4, #16]
   374dc:	sub	r3, r3, #4
   374e0:	cmp	r3, #1
   374e4:	bls	373f4 <__flatcc_fb_build_schema@@Base+0x904>
   374e8:	mov	r3, ip
   374ec:	mov	r0, fp
   374f0:	ldr	r1, [r4, #4]
   374f4:	str	ip, [sp]
   374f8:	str	ip, [sp, #4]
   374fc:	ldr	r2, [sp, #16]
   37500:	bl	2ebf8 <__flatcc_error_report@@Base>
   37504:	b	373f4 <__flatcc_fb_build_schema@@Base+0x904>
   37508:	cmp	ip, #0
   3750c:	streq	sl, [r4, #16]
   37510:	streq	r6, [r4, #88]	; 0x58
   37514:	bne	36b94 <__flatcc_fb_build_schema@@Base+0xa4>
   37518:	b	36b54 <__flatcc_fb_build_schema@@Base+0x64>
   3751c:	cmp	r4, #0
   37520:	ldr	r7, [sp, #112]	; 0x70
   37524:	beq	37548 <__flatcc_fb_build_schema@@Base+0xa58>
   37528:	mov	r3, r2
   3752c:	ldr	r1, [r4, #4]
   37530:	mov	r0, fp
   37534:	str	r2, [sp]
   37538:	str	r2, [sp, #4]
   3753c:	ldr	r2, [pc, #1520]	; 37b34 <__flatcc_fb_build_schema@@Base+0x1044>
   37540:	add	r2, pc, r2
   37544:	bl	2ebf8 <__flatcc_error_report@@Base>
   37548:	cmp	r7, #0
   3754c:	strh	r5, [sl, #92]	; 0x5c
   37550:	beq	3759c <__flatcc_fb_build_schema@@Base+0xaac>
   37554:	ldrd	r0, [r7, #8]
   37558:	subs	r3, r0, #1
   3755c:	str	r3, [sp, #40]	; 0x28
   37560:	sbc	r3, r1, #0
   37564:	str	r3, [sp, #44]	; 0x2c
   37568:	ldrd	r2, [sp, #40]	; 0x28
   3756c:	cmp	r3, #0
   37570:	cmpeq	r2, #255	; 0xff
   37574:	bls	37c38 <__flatcc_fb_build_schema@@Base+0x1148>
   37578:	mov	r2, #0
   3757c:	ldr	r1, [sl, #4]
   37580:	mov	r0, fp
   37584:	mov	r3, r2
   37588:	str	r2, [sp]
   3758c:	str	r2, [sp, #4]
   37590:	ldr	r2, [pc, #1440]	; 37b38 <__flatcc_fb_build_schema@@Base+0x1048>
   37594:	add	r2, pc, r2
   37598:	bl	2ebf8 <__flatcc_error_report@@Base>
   3759c:	ldr	r8, [sl, #20]
   375a0:	cmp	r8, #0
   375a4:	beq	36f04 <__flatcc_fb_build_schema@@Base+0x414>
   375a8:	ldr	r3, [pc, #1420]	; 37b3c <__flatcc_fb_build_schema@@Base+0x104c>
   375ac:	str	sl, [sp, #24]
   375b0:	add	r3, pc, r3
   375b4:	str	r3, [sp, #52]	; 0x34
   375b8:	add	r3, sl, #56	; 0x38
   375bc:	ldr	sl, [sp, #28]
   375c0:	str	r3, [sp, #16]
   375c4:	mov	r3, #0
   375c8:	str	r3, [sp, #36]	; 0x24
   375cc:	mov	r2, #1
   375d0:	mov	r1, r8
   375d4:	ldr	r0, [sp, #16]
   375d8:	bl	2c7ac <fb_symbol_table_insert_item@@Base>
   375dc:	cmp	r0, #0
   375e0:	bne	37954 <__flatcc_fb_build_schema@@Base+0xe64>
   375e4:	ldrh	r3, [r8, #8]
   375e8:	cmp	r3, #5
   375ec:	bne	38734 <__flatcc_fb_build_schema@@Base+0x1c44>
   375f0:	ldr	r3, [fp, #168]	; 0xa8
   375f4:	ldr	r2, [fp, #172]	; 0xac
   375f8:	ldr	r4, [r8, #64]	; 0x40
   375fc:	cmp	r2, #0
   37600:	mov	r2, #0
   37604:	movne	r9, #128	; 0x80
   37608:	moveq	r9, #0
   3760c:	cmp	r3, #0
   37610:	mov	r3, #0
   37614:	orrne	r9, r9, #4
   37618:	cmp	r4, #0
   3761c:	strd	r2, [r6]
   37620:	strd	r2, [r6, #8]
   37624:	strd	r2, [r6, #16]
   37628:	strd	r2, [r6, #24]
   3762c:	strd	r2, [r6, #32]
   37630:	strd	r2, [r6, #40]	; 0x28
   37634:	beq	38408 <__flatcc_fb_build_schema@@Base+0x1918>
   37638:	ldr	r3, [pc, #1280]	; 37b40 <__flatcc_fb_build_schema@@Base+0x1050>
   3763c:	mov	r5, #0
   37640:	mov	r7, #100	; 0x64
   37644:	add	r3, pc, r3
   37648:	str	r3, [sp, #32]
   3764c:	b	37694 <__flatcc_fb_build_schema@@Base+0xba4>
   37650:	ldr	r3, [sp, #12]
   37654:	str	r4, [r6, r2, lsl #2]
   37658:	add	r1, r3, r1
   3765c:	ldr	r2, [r1, #204]	; 0xcc
   37660:	cmp	r2, #0
   37664:	bne	3770c <__flatcc_fb_build_schema@@Base+0xc1c>
   37668:	ldrh	r3, [r4, #16]
   3766c:	cmp	r3, #0
   37670:	bne	3830c <__flatcc_fb_build_schema@@Base+0x181c>
   37674:	ldr	r4, [r4]
   37678:	subs	r7, r7, #1
   3767c:	movne	r2, #1
   37680:	moveq	r2, #0
   37684:	cmp	r4, #0
   37688:	moveq	r2, #0
   3768c:	cmp	r2, #0
   37690:	beq	36db8 <__flatcc_fb_build_schema@@Base+0x2c8>
   37694:	ldr	r3, [r4, #4]
   37698:	ldr	r0, [fp, #412]	; 0x19c
   3769c:	ldm	r3, {r1, r2}
   376a0:	add	r0, r0, #16
   376a4:	bl	3f00c <fb_name_table_find@@Base>
   376a8:	subs	r2, r0, #0
   376ac:	beq	37900 <__flatcc_fb_build_schema@@Base+0xe10>
   376b0:	ldr	r2, [r2, #24]
   376b4:	cmp	r2, #0
   376b8:	beq	37674 <__flatcc_fb_build_schema@@Base+0xb84>
   376bc:	asr	r3, r9, r2
   376c0:	ands	ip, r3, #1
   376c4:	beq	37784 <__flatcc_fb_build_schema@@Base+0xc94>
   376c8:	ldr	ip, [r6, r2, lsl #2]
   376cc:	mov	r3, #1
   376d0:	lsl	r1, r2, #2
   376d4:	orr	r5, r5, r3, lsl r2
   376d8:	uxth	r5, r5
   376dc:	cmp	ip, #0
   376e0:	beq	37650 <__flatcc_fb_build_schema@@Base+0xb60>
   376e4:	mov	r2, #0
   376e8:	ldr	r1, [r4, #4]
   376ec:	mov	r0, fp
   376f0:	mov	r3, r2
   376f4:	str	r2, [sp]
   376f8:	str	r2, [sp, #4]
   376fc:	ldr	r2, [pc, #1088]	; 37b44 <__flatcc_fb_build_schema@@Base+0x1054>
   37700:	add	r2, pc, r2
   37704:	bl	2ebf8 <__flatcc_error_report@@Base>
   37708:	b	37674 <__flatcc_fb_build_schema@@Base+0xb84>
   3770c:	cmp	r2, #2
   37710:	bne	37744 <__flatcc_fb_build_schema@@Base+0xc54>
   37714:	ldrh	r3, [r4, #16]
   37718:	cmp	r3, #2
   3771c:	beq	37674 <__flatcc_fb_build_schema@@Base+0xb84>
   37720:	ldr	r2, [pc, #1056]	; 37b48 <__flatcc_fb_build_schema@@Base+0x1058>
   37724:	mov	r3, ip
   37728:	mov	r0, fp
   3772c:	ldr	r1, [r4, #4]
   37730:	str	ip, [sp]
   37734:	str	ip, [sp, #4]
   37738:	add	r2, pc, r2
   3773c:	bl	2ebf8 <__flatcc_error_report@@Base>
   37740:	b	37674 <__flatcc_fb_build_schema@@Base+0xb84>
   37744:	cmp	r2, #5
   37748:	beq	37924 <__flatcc_fb_build_schema@@Base+0xe34>
   3774c:	cmp	r2, #4
   37750:	bne	37988 <__flatcc_fb_build_schema@@Base+0xe98>
   37754:	ldrh	r3, [r4, #16]
   37758:	sub	r3, r3, #4
   3775c:	cmp	r3, #1
   37760:	bls	37674 <__flatcc_fb_build_schema@@Base+0xb84>
   37764:	mov	r3, ip
   37768:	mov	r0, fp
   3776c:	ldr	r1, [r4, #4]
   37770:	str	ip, [sp]
   37774:	str	ip, [sp, #4]
   37778:	ldr	r2, [sp, #32]
   3777c:	bl	2ebf8 <__flatcc_error_report@@Base>
   37780:	b	37674 <__flatcc_fb_build_schema@@Base+0xb84>
   37784:	ldr	r2, [pc, #960]	; 37b4c <__flatcc_fb_build_schema@@Base+0x105c>
   37788:	mov	r3, ip
   3778c:	mov	r0, fp
   37790:	ldr	r1, [r4, #4]
   37794:	str	ip, [sp]
   37798:	str	ip, [sp, #4]
   3779c:	add	r2, pc, r2
   377a0:	bl	2ebf8 <__flatcc_error_report@@Base>
   377a4:	b	37674 <__flatcc_fb_build_schema@@Base+0xb84>
   377a8:	mov	r4, r0
   377ac:	ldr	r3, [r5, #4]
   377b0:	add	r0, r4, #4
   377b4:	ldm	r3, {r1, r2}
   377b8:	bl	2c7d4 <fb_symbol_table_find@@Base>
   377bc:	subs	r7, r0, #0
   377c0:	beq	37870 <__flatcc_fb_build_schema@@Base+0xd80>
   377c4:	ldrh	r3, [r7, #8]
   377c8:	cmp	r3, #4
   377cc:	bhi	37870 <__flatcc_fb_build_schema@@Base+0xd80>
   377d0:	ldr	r1, [r7, #16]
   377d4:	ldr	r0, [sp, #20]
   377d8:	bl	2c058 <ptr_set_find_item@@Base>
   377dc:	cmp	r0, #0
   377e0:	beq	37870 <__flatcc_fb_build_schema@@Base+0xd80>
   377e4:	ldrh	r4, [r7, #8]
   377e8:	mov	r3, #14
   377ec:	str	r7, [r8, #16]
   377f0:	strh	r3, [r8, #24]
   377f4:	cmp	r4, #1
   377f8:	beq	3841c <__flatcc_fb_build_schema@@Base+0x192c>
   377fc:	ldr	r2, [fp, #152]	; 0x98
   37800:	cmp	r2, #0
   37804:	beq	387dc <__flatcc_fb_build_schema@@Base+0x1cec>
   37808:	cmp	r4, #3
   3780c:	bne	38774 <__flatcc_fb_build_schema@@Base+0x1c84>
   37810:	ldrh	r3, [r8, #72]	; 0x48
   37814:	tst	r3, #128	; 0x80
   37818:	beq	37834 <__flatcc_fb_build_schema@@Base+0xd44>
   3781c:	ldr	r2, [fp, #148]	; 0x94
   37820:	cmp	r2, #0
   37824:	beq	386e0 <__flatcc_fb_build_schema@@Base+0x1bf0>
   37828:	ldr	r3, [sp, #36]	; 0x24
   3782c:	add	r3, r3, #1
   37830:	str	r3, [sp, #36]	; 0x24
   37834:	ldrh	r3, [r8, #56]	; 0x38
   37838:	cmp	r3, #0
   3783c:	beq	36ea0 <__flatcc_fb_build_schema@@Base+0x3b0>
   37840:	mov	ip, #0
   37844:	mov	r0, fp
   37848:	ldr	r1, [r8, #4]
   3784c:	mov	r3, ip
   37850:	str	ip, [sp]
   37854:	str	ip, [sp, #4]
   37858:	ldr	r2, [sp, #48]	; 0x30
   3785c:	bl	2ebf8 <__flatcc_error_report@@Base>
   37860:	ldr	r8, [r8]
   37864:	cmp	r8, #0
   37868:	bne	375cc <__flatcc_fb_build_schema@@Base+0xadc>
   3786c:	b	36eac <__flatcc_fb_build_schema@@Base+0x3bc>
   37870:	ldr	r3, [r4]
   37874:	cmp	r3, #0
   37878:	beq	36e7c <__flatcc_fb_build_schema@@Base+0x38c>
   3787c:	mov	r7, #0
   37880:	b	37888 <__flatcc_fb_build_schema@@Base+0xd98>
   37884:	mov	r7, r2
   37888:	ldr	r3, [r3]
   3788c:	add	r2, r7, #1
   37890:	cmp	r3, #0
   37894:	bne	37884 <__flatcc_fb_build_schema@@Base+0xd94>
   37898:	rsb	r7, r7, #0
   3789c:	b	378cc <__flatcc_fb_build_schema@@Base+0xddc>
   378a0:	cmp	sl, #0
   378a4:	beq	378c8 <__flatcc_fb_build_schema@@Base+0xdd8>
   378a8:	ldr	r0, [fp, #412]	; 0x19c
   378ac:	cmp	r0, #0
   378b0:	beq	378c8 <__flatcc_fb_build_schema@@Base+0xdd8>
   378b4:	mov	r2, r7
   378b8:	ldr	r1, [r4]
   378bc:	bl	2d85c <fb_scope_table_find@@Base>
   378c0:	cmp	r0, #0
   378c4:	bne	377a8 <__flatcc_fb_build_schema@@Base+0xcb8>
   378c8:	add	r7, r7, #1
   378cc:	cmp	r7, #0
   378d0:	bne	378a0 <__flatcc_fb_build_schema@@Base+0xdb0>
   378d4:	cmp	sl, #0
   378d8:	beq	36e7c <__flatcc_fb_build_schema@@Base+0x38c>
   378dc:	ldr	r0, [fp, #412]	; 0x19c
   378e0:	cmp	r0, #0
   378e4:	beq	36e7c <__flatcc_fb_build_schema@@Base+0x38c>
   378e8:	mov	r2, r7
   378ec:	mov	r1, r7
   378f0:	bl	2d85c <fb_scope_table_find@@Base>
   378f4:	subs	r4, r0, #0
   378f8:	bne	377ac <__flatcc_fb_build_schema@@Base+0xcbc>
   378fc:	b	36e7c <__flatcc_fb_build_schema@@Base+0x38c>
   37900:	mov	r3, r2
   37904:	ldr	r1, [r4, #4]
   37908:	mov	r0, fp
   3790c:	str	r2, [sp]
   37910:	str	r2, [sp, #4]
   37914:	ldr	r2, [pc, #564]	; 37b50 <__flatcc_fb_build_schema@@Base+0x1060>
   37918:	add	r2, pc, r2
   3791c:	bl	2ebf8 <__flatcc_error_report@@Base>
   37920:	b	37674 <__flatcc_fb_build_schema@@Base+0xb84>
   37924:	ldrh	r3, [r4, #16]
   37928:	cmp	r3, #5
   3792c:	beq	37674 <__flatcc_fb_build_schema@@Base+0xb84>
   37930:	ldr	r2, [pc, #540]	; 37b54 <__flatcc_fb_build_schema@@Base+0x1064>
   37934:	mov	r3, ip
   37938:	mov	r0, fp
   3793c:	ldr	r1, [r4, #4]
   37940:	str	ip, [sp]
   37944:	str	ip, [sp, #4]
   37948:	add	r2, pc, r2
   3794c:	bl	2ebf8 <__flatcc_error_report@@Base>
   37950:	b	37674 <__flatcc_fb_build_schema@@Base+0xb84>
   37954:	mov	r2, #0
   37958:	ldr	r3, [r0, #4]
   3795c:	mov	r0, fp
   37960:	ldr	r1, [r8, #4]
   37964:	str	r2, [sp]
   37968:	str	r2, [sp, #4]
   3796c:	ldr	r2, [pc, #484]	; 37b58 <__flatcc_fb_build_schema@@Base+0x1068>
   37970:	add	r2, pc, r2
   37974:	bl	2ebf8 <__flatcc_error_report@@Base>
   37978:	ldr	r8, [r8]
   3797c:	cmp	r8, #0
   37980:	bne	375cc <__flatcc_fb_build_schema@@Base+0xadc>
   37984:	b	36eac <__flatcc_fb_build_schema@@Base+0x3bc>
   37988:	cmp	r2, #6
   3798c:	bne	37674 <__flatcc_fb_build_schema@@Base+0xb84>
   37990:	ldrh	r3, [r4, #16]
   37994:	cmp	r3, #6
   37998:	beq	37674 <__flatcc_fb_build_schema@@Base+0xb84>
   3799c:	mov	ip, #0
   379a0:	mov	r0, fp
   379a4:	ldr	r1, [r4, #4]
   379a8:	mov	r3, ip
   379ac:	str	ip, [sp]
   379b0:	str	ip, [sp, #4]
   379b4:	ldr	r2, [sp, #52]	; 0x34
   379b8:	bl	2ebf8 <__flatcc_error_report@@Base>
   379bc:	b	37674 <__flatcc_fb_build_schema@@Base+0xb84>
   379c0:	mov	r2, #0
   379c4:	ldr	r1, [r8, #4]
   379c8:	mov	r0, fp
   379cc:	mov	r3, r2
   379d0:	str	r2, [sp]
   379d4:	str	r2, [sp, #4]
   379d8:	ldr	r2, [pc, #380]	; 37b5c <__flatcc_fb_build_schema@@Base+0x106c>
   379dc:	ldr	sl, [sp, #24]
   379e0:	add	r2, pc, r2
   379e4:	bl	2ebf8 <__flatcc_error_report@@Base>
   379e8:	mov	r3, #1
   379ec:	strh	r3, [sl, #48]	; 0x30
   379f0:	b	36f04 <__flatcc_fb_build_schema@@Base+0x414>
   379f4:	ldr	r2, [pc, #356]	; 37b60 <__flatcc_fb_build_schema@@Base+0x1070>
   379f8:	mov	r3, ip
   379fc:	mov	r0, fp
   37a00:	ldr	r1, [r4, #4]
   37a04:	str	ip, [sp]
   37a08:	str	ip, [sp, #4]
   37a0c:	add	r2, pc, r2
   37a10:	bl	2ebf8 <__flatcc_error_report@@Base>
   37a14:	b	373f4 <__flatcc_fb_build_schema@@Base+0x904>
   37a18:	movw	r3, #40389	; 0x9dc5
   37a1c:	movt	r3, #33052	; 0x811c
   37a20:	ldr	r2, [r8, #4]
   37a24:	ldm	r2, {r2, lr}
   37a28:	cmp	lr, #0
   37a2c:	beq	37a48 <__flatcc_fb_build_schema@@Base+0xf58>
   37a30:	add	lr, r2, lr
   37a34:	ldrb	r9, [r2], #1
   37a38:	eor	r3, r3, r9
   37a3c:	cmp	r2, lr
   37a40:	mul	r3, r5, r3
   37a44:	bne	37a34 <__flatcc_fb_build_schema@@Base+0xf44>
   37a48:	ldr	r8, [r8]
   37a4c:	eor	r3, r3, #46	; 0x2e
   37a50:	mul	r3, r5, r3
   37a54:	cmp	r8, #0
   37a58:	bne	37a20 <__flatcc_fb_build_schema@@Base+0xf30>
   37a5c:	cmp	ip, #0
   37a60:	bne	36b9c <__flatcc_fb_build_schema@@Base+0xac>
   37a64:	cmp	r3, #0
   37a68:	bne	386b8 <__flatcc_fb_build_schema@@Base+0x1bc8>
   37a6c:	str	sl, [r4, #16]
   37a70:	str	r6, [r4, #88]	; 0x58
   37a74:	b	36bcc <__flatcc_fb_build_schema@@Base+0xdc>
   37a78:	mov	r3, r2
   37a7c:	ldr	r1, [r4, #4]
   37a80:	mov	r0, fp
   37a84:	str	r2, [sp]
   37a88:	str	r2, [sp, #4]
   37a8c:	ldr	r2, [pc, #208]	; 37b64 <__flatcc_fb_build_schema@@Base+0x1074>
   37a90:	add	r2, pc, r2
   37a94:	bl	2ebf8 <__flatcc_error_report@@Base>
   37a98:	b	373f4 <__flatcc_fb_build_schema@@Base+0x904>
   37a9c:	tst	r5, #128	; 0x80
   37aa0:	beq	37834 <__flatcc_fb_build_schema@@Base+0xd44>
   37aa4:	ldr	r3, [sp, #36]	; 0x24
   37aa8:	add	r3, r3, #1
   37aac:	str	r3, [sp, #36]	; 0x24
   37ab0:	b	37834 <__flatcc_fb_build_schema@@Base+0xd44>
   37ab4:	ldrh	r3, [r4, #16]
   37ab8:	cmp	r3, #5
   37abc:	beq	373f4 <__flatcc_fb_build_schema@@Base+0x904>
   37ac0:	ldr	r2, [pc, #160]	; 37b68 <__flatcc_fb_build_schema@@Base+0x1078>
   37ac4:	mov	r3, ip
   37ac8:	mov	r0, fp
   37acc:	ldr	r1, [r4, #4]
   37ad0:	str	ip, [sp]
   37ad4:	str	ip, [sp, #4]
   37ad8:	add	r2, pc, r2
   37adc:	bl	2ebf8 <__flatcc_error_report@@Base>
   37ae0:	b	373f4 <__flatcc_fb_build_schema@@Base+0x904>
   37ae4:	ldrdeq	r6, [r3], -r4
   37ae8:	andeq	r3, r2, r8, ror sp
   37aec:	andeq	r3, r2, r0, ror sp
   37af0:	andeq	r6, r3, r0, ror #4
   37af4:	andeq	r3, r2, r0, lsl lr
   37af8:	andeq	r2, r2, r8, lsr #19
   37afc:	andeq	r2, r2, r8, asr #29
   37b00:	andeq	r3, r2, r0, ror #23
   37b04:	andeq	r3, r2, r0, lsl sl
   37b08:	andeq	r2, r2, ip, asr #15
   37b0c:	andeq	r2, r2, r0, lsl #26
   37b10:	andeq	r3, r2, r0, lsr ip
   37b14:	ldrdeq	r3, [r2], -r8
   37b18:	andeq	r3, r2, ip, lsr #26
   37b1c:	andeq	r3, r2, r8, lsl ip
   37b20:	muleq	r2, r0, r8
   37b24:	andeq	r2, r2, r0, ror r3
   37b28:	andeq	r2, r2, r8, lsr #17
   37b2c:	andeq	r2, r2, ip, lsr #14
   37b30:	andeq	r2, r2, r4, asr #14
   37b34:	andeq	r2, r2, r0, ror #14
   37b38:	andeq	r3, r2, r8, asr #8
   37b3c:	andeq	r2, r2, r4, asr #13
   37b40:	andeq	r2, r2, ip, lsl #12
   37b44:			; <UNDEFINED> instruction: 0x000224b0
   37b48:	andeq	r2, r2, r8, asr #9
   37b4c:	andeq	r2, r2, r4, ror #7
   37b50:	andeq	r2, r2, r8, asr #4
   37b54:	ldrdeq	r2, [r2], -ip
   37b58:	strheq	r3, [r2], -r8
   37b5c:	andeq	r3, r2, r4, ror r1
   37b60:	andeq	r2, r2, r4, ror r1
   37b64:	ldrdeq	r2, [r2], -r0
   37b68:	andeq	r2, r2, ip, asr #2
   37b6c:	andeq	r1, r2, r8, asr #28
   37b70:	andeq	r1, r2, r8, ror #25
   37b74:			; <UNDEFINED> instruction: 0x00022abc
   37b78:	andeq	r1, r2, ip, asr sl
   37b7c:	andeq	r2, r2, r4, lsr sl
   37b80:	andeq	r1, r2, r4, lsr sl
   37b84:	andeq	r1, r2, r0, ror #17
   37b88:	andeq	r2, r2, r8, lsr #20
   37b8c:	andeq	r1, r2, r0, ror #16
   37b90:			; <UNDEFINED> instruction: 0x000218b4
   37b94:	muleq	r2, ip, r8
   37b98:	andeq	r2, r2, r4, ror r9
   37b9c:	muleq	r2, ip, r6
   37ba0:	ldrdeq	r2, [r2], -r4
   37ba4:	andeq	r1, r2, r0, lsr #11
   37ba8:	andeq	r1, r2, ip, ror r5
   37bac:	andeq	r1, r2, r0, ror #23
   37bb0:	andeq	r2, r2, r4, asr #14
   37bb4:	strdeq	r2, [r2], -r4
   37bb8:	andeq	r2, r2, r8, ror #7
   37bbc:	andeq	r2, r2, r4, ror r6
   37bc0:	strdeq	r2, [r2], -r8
   37bc4:	andeq	r2, r2, ip, lsl #6
   37bc8:	andeq	r2, r2, r0, ror #3
   37bcc:	andeq	r2, r2, r0, lsr #6
   37bd0:	andeq	r0, r0, r0, lsr #1
   37bd4:	andeq	r9, r0, ip
   37bd8:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   37bdc:	andeq	r1, r2, ip, asr #32
   37be0:	andeq	r2, r2, r4, asr #10
   37be4:	andeq	r0, r2, ip, asr #29
   37be8:	andeq	r1, r2, r8, lsr #32
   37bec:	andeq	r2, r2, ip, asr #1
   37bf0:	andeq	r0, r2, r8, lsr #29
   37bf4:	andeq	r1, r2, r4
   37bf8:	muleq	r2, r8, r9
   37bfc:	andeq	r2, r2, r8, lsl #6
   37c00:	cmp	r2, #6
   37c04:	bne	373f4 <__flatcc_fb_build_schema@@Base+0x904>
   37c08:	ldrh	r3, [r4, #16]
   37c0c:	cmp	r3, #6
   37c10:	beq	373f4 <__flatcc_fb_build_schema@@Base+0x904>
   37c14:	mov	ip, #0
   37c18:	mov	r2, r9
   37c1c:	ldr	r1, [r4, #4]
   37c20:	mov	r3, ip
   37c24:	mov	r0, fp
   37c28:	str	ip, [sp]
   37c2c:	str	ip, [sp, #4]
   37c30:	bl	2ebf8 <__flatcc_error_report@@Base>
   37c34:	b	373f4 <__flatcc_fb_build_schema@@Base+0x904>
   37c38:	cmp	r1, #0
   37c3c:	cmpeq	r0, #1
   37c40:	beq	37c78 <__flatcc_fb_build_schema@@Base+0x1188>
   37c44:	mov	r3, #0
   37c48:	mov	r2, #2
   37c4c:	cmp	r1, r3
   37c50:	cmpeq	r0, r2
   37c54:	beq	37c78 <__flatcc_fb_build_schema@@Base+0x1188>
   37c58:	adds	r2, r2, r2
   37c5c:	adc	r3, r3, r3
   37c60:	cmp	r1, r3
   37c64:	cmpeq	r0, r2
   37c68:	bcc	37578 <__flatcc_fb_build_schema@@Base+0xa88>
   37c6c:	cmp	r1, r3
   37c70:	cmpeq	r0, r2
   37c74:	bne	37c58 <__flatcc_fb_build_schema@@Base+0x1168>
   37c78:	strh	r0, [sl, #104]	; 0x68
   37c7c:	b	3759c <__flatcc_fb_build_schema@@Base+0xaac>
   37c80:	mov	r5, r0
   37c84:	ldr	r3, [r6, #4]
   37c88:	add	r0, r5, #4
   37c8c:	ldm	r3, {r1, r2}
   37c90:	bl	2c7d4 <fb_symbol_table_find@@Base>
   37c94:	subs	r7, r0, #0
   37c98:	beq	37cbc <__flatcc_fb_build_schema@@Base+0x11cc>
   37c9c:	ldrh	r3, [r7, #8]
   37ca0:	cmp	r3, #4
   37ca4:	bhi	37cbc <__flatcc_fb_build_schema@@Base+0x11cc>
   37ca8:	mov	r0, r9
   37cac:	ldr	r1, [r7, #16]
   37cb0:	bl	2c058 <ptr_set_find_item@@Base>
   37cb4:	cmp	r0, #0
   37cb8:	bne	37128 <__flatcc_fb_build_schema@@Base+0x638>
   37cbc:	ldr	r3, [r5]
   37cc0:	cmp	r3, #0
   37cc4:	beq	37d48 <__flatcc_fb_build_schema@@Base+0x1258>
   37cc8:	mov	r7, #0
   37ccc:	b	37cd4 <__flatcc_fb_build_schema@@Base+0x11e4>
   37cd0:	mov	r7, r2
   37cd4:	ldr	r3, [r3]
   37cd8:	add	r2, r7, #1
   37cdc:	cmp	r3, #0
   37ce0:	bne	37cd0 <__flatcc_fb_build_schema@@Base+0x11e0>
   37ce4:	rsb	r7, r7, #0
   37ce8:	b	37d18 <__flatcc_fb_build_schema@@Base+0x1228>
   37cec:	cmp	sl, #0
   37cf0:	beq	37d14 <__flatcc_fb_build_schema@@Base+0x1224>
   37cf4:	ldr	r0, [fp, #412]	; 0x19c
   37cf8:	cmp	r0, #0
   37cfc:	beq	37d14 <__flatcc_fb_build_schema@@Base+0x1224>
   37d00:	mov	r2, r7
   37d04:	ldr	r1, [r5]
   37d08:	bl	2d85c <fb_scope_table_find@@Base>
   37d0c:	cmp	r0, #0
   37d10:	bne	37c80 <__flatcc_fb_build_schema@@Base+0x1190>
   37d14:	add	r7, r7, #1
   37d18:	cmp	r7, #0
   37d1c:	bne	37cec <__flatcc_fb_build_schema@@Base+0x11fc>
   37d20:	cmp	sl, #0
   37d24:	beq	37d48 <__flatcc_fb_build_schema@@Base+0x1258>
   37d28:	ldr	r0, [fp, #412]	; 0x19c
   37d2c:	cmp	r0, #0
   37d30:	beq	37d48 <__flatcc_fb_build_schema@@Base+0x1258>
   37d34:	mov	r2, r7
   37d38:	mov	r1, r7
   37d3c:	bl	2d85c <fb_scope_table_find@@Base>
   37d40:	subs	r5, r0, #0
   37d44:	bne	37c84 <__flatcc_fb_build_schema@@Base+0x1194>
   37d48:	ldr	ip, [r4, #32]
   37d4c:	mov	r3, r4
   37d50:	mov	r1, ip
   37d54:	mov	r0, fp
   37d58:	ldr	r2, [sp, #32]
   37d5c:	bl	30378 <error_ref_sym@@Base>
   37d60:	mov	r3, #1
   37d64:	strh	r3, [r4, #24]
   37d68:	ldr	r4, [r4]
   37d6c:	cmp	r4, #0
   37d70:	bne	37004 <__flatcc_fb_build_schema@@Base+0x514>
   37d74:	b	37220 <__flatcc_fb_build_schema@@Base+0x730>
   37d78:	mov	r5, r0
   37d7c:	ldr	r3, [r6, #4]
   37d80:	add	r0, r5, #4
   37d84:	ldm	r3, {r1, r2}
   37d88:	bl	2c7d4 <fb_symbol_table_find@@Base>
   37d8c:	subs	r7, r0, #0
   37d90:	beq	37ed4 <__flatcc_fb_build_schema@@Base+0x13e4>
   37d94:	ldrh	r3, [r7, #8]
   37d98:	cmp	r3, #4
   37d9c:	bhi	37ed4 <__flatcc_fb_build_schema@@Base+0x13e4>
   37da0:	mov	r0, r9
   37da4:	ldr	r1, [r7, #16]
   37da8:	bl	2c058 <ptr_set_find_item@@Base>
   37dac:	cmp	r0, #0
   37db0:	beq	37ed4 <__flatcc_fb_build_schema@@Base+0x13e4>
   37db4:	ldrh	r6, [r7, #8]
   37db8:	cmp	r6, #0
   37dbc:	bne	383cc <__flatcc_fb_build_schema@@Base+0x18dc>
   37dc0:	ldr	r5, [r4, #64]	; 0x40
   37dc4:	mov	r2, #0
   37dc8:	mov	r3, #0
   37dcc:	add	r8, sp, #96	; 0x60
   37dd0:	mov	r1, #14
   37dd4:	str	r7, [r4, #16]
   37dd8:	strd	r2, [sp, #96]	; 0x60
   37ddc:	strd	r2, [r8, #8]
   37de0:	strd	r2, [r8, #16]
   37de4:	cmp	r5, #0
   37de8:	strh	r1, [r4, #24]
   37dec:	strd	r2, [r8, #24]
   37df0:	strd	r2, [r8, #32]
   37df4:	strd	r2, [r8, #40]	; 0x28
   37df8:	strd	r2, [r4, #88]	; 0x58
   37dfc:	beq	38274 <__flatcc_fb_build_schema@@Base+0x1784>
   37e00:	ldr	r3, [pc, #-668]	; 37b6c <__flatcc_fb_build_schema@@Base+0x107c>
   37e04:	mov	r7, #100	; 0x64
   37e08:	add	r3, pc, r3
   37e0c:	str	r3, [sp, #28]
   37e10:	b	37e58 <__flatcc_fb_build_schema@@Base+0x1368>
   37e14:	ldr	r3, [sp, #24]
   37e18:	str	r5, [r8, r2, lsl #2]
   37e1c:	add	r1, r3, r1
   37e20:	ldr	r2, [r1, #204]	; 0xcc
   37e24:	cmp	r2, #0
   37e28:	bne	38178 <__flatcc_fb_build_schema@@Base+0x1688>
   37e2c:	ldrh	r3, [r5, #16]
   37e30:	cmp	r3, #0
   37e34:	bne	38644 <__flatcc_fb_build_schema@@Base+0x1b54>
   37e38:	ldr	r5, [r5]
   37e3c:	subs	r7, r7, #1
   37e40:	movne	r2, #1
   37e44:	moveq	r2, #0
   37e48:	cmp	r5, #0
   37e4c:	moveq	r2, #0
   37e50:	cmp	r2, #0
   37e54:	beq	3824c <__flatcc_fb_build_schema@@Base+0x175c>
   37e58:	ldr	r3, [r5, #4]
   37e5c:	ldr	r0, [fp, #412]	; 0x19c
   37e60:	ldm	r3, {r1, r2}
   37e64:	add	r0, r0, #16
   37e68:	bl	3f00c <fb_name_table_find@@Base>
   37e6c:	subs	r2, r0, #0
   37e70:	beq	382e8 <__flatcc_fb_build_schema@@Base+0x17f8>
   37e74:	ldr	r2, [r2, #24]
   37e78:	cmp	r2, #0
   37e7c:	beq	37e38 <__flatcc_fb_build_schema@@Base+0x1348>
   37e80:	mov	r3, #4
   37e84:	asr	r3, r3, r2
   37e88:	ands	ip, r3, #1
   37e8c:	beq	38288 <__flatcc_fb_build_schema@@Base+0x1798>
   37e90:	ldr	ip, [r8, r2, lsl #2]
   37e94:	mov	r3, #1
   37e98:	lsl	r1, r2, #2
   37e9c:	orr	r6, r6, r3, lsl r2
   37ea0:	uxth	r6, r6
   37ea4:	cmp	ip, #0
   37ea8:	beq	37e14 <__flatcc_fb_build_schema@@Base+0x1324>
   37eac:	mov	r2, #0
   37eb0:	ldr	r1, [r5, #4]
   37eb4:	mov	r0, fp
   37eb8:	mov	r3, r2
   37ebc:	str	r2, [sp]
   37ec0:	str	r2, [sp, #4]
   37ec4:	ldr	r2, [pc, #-860]	; 37b70 <__flatcc_fb_build_schema@@Base+0x1080>
   37ec8:	add	r2, pc, r2
   37ecc:	bl	2ebf8 <__flatcc_error_report@@Base>
   37ed0:	b	37e38 <__flatcc_fb_build_schema@@Base+0x1348>
   37ed4:	ldr	r3, [r5]
   37ed8:	cmp	r3, #0
   37edc:	beq	371f4 <__flatcc_fb_build_schema@@Base+0x704>
   37ee0:	mov	r7, #0
   37ee4:	b	37eec <__flatcc_fb_build_schema@@Base+0x13fc>
   37ee8:	mov	r7, r2
   37eec:	ldr	r3, [r3]
   37ef0:	add	r2, r7, #1
   37ef4:	cmp	r3, #0
   37ef8:	bne	37ee8 <__flatcc_fb_build_schema@@Base+0x13f8>
   37efc:	rsb	r7, r7, #0
   37f00:	b	37f30 <__flatcc_fb_build_schema@@Base+0x1440>
   37f04:	cmp	sl, #0
   37f08:	beq	37f2c <__flatcc_fb_build_schema@@Base+0x143c>
   37f0c:	ldr	r0, [fp, #412]	; 0x19c
   37f10:	cmp	r0, #0
   37f14:	beq	37f2c <__flatcc_fb_build_schema@@Base+0x143c>
   37f18:	mov	r2, r7
   37f1c:	ldr	r1, [r5]
   37f20:	bl	2d85c <fb_scope_table_find@@Base>
   37f24:	cmp	r0, #0
   37f28:	bne	37d78 <__flatcc_fb_build_schema@@Base+0x1288>
   37f2c:	add	r7, r7, #1
   37f30:	cmp	r7, #0
   37f34:	bne	37f04 <__flatcc_fb_build_schema@@Base+0x1414>
   37f38:	cmp	sl, #0
   37f3c:	beq	371f4 <__flatcc_fb_build_schema@@Base+0x704>
   37f40:	ldr	r0, [fp, #412]	; 0x19c
   37f44:	cmp	r0, #0
   37f48:	beq	371f4 <__flatcc_fb_build_schema@@Base+0x704>
   37f4c:	mov	r2, r7
   37f50:	mov	r1, r7
   37f54:	bl	2d85c <fb_scope_table_find@@Base>
   37f58:	subs	r5, r0, #0
   37f5c:	bne	37d7c <__flatcc_fb_build_schema@@Base+0x128c>
   37f60:	b	371f4 <__flatcc_fb_build_schema@@Base+0x704>
   37f64:	ldr	r6, [r1, #16]
   37f68:	ldrh	r3, [r6, #8]
   37f6c:	cmp	r3, #1
   37f70:	beq	38530 <__flatcc_fb_build_schema@@Base+0x1a40>
   37f74:	cmp	r3, #3
   37f78:	beq	38530 <__flatcc_fb_build_schema@@Base+0x1a40>
   37f7c:	ldrh	r3, [fp, #192]	; 0xc0
   37f80:	cmp	r3, #0
   37f84:	beq	38834 <__flatcc_fb_build_schema@@Base+0x1d44>
   37f88:	lsrs	r6, r3, #1
   37f8c:	moveq	r3, r6
   37f90:	beq	37fb0 <__flatcc_fb_build_schema@@Base+0x14c0>
   37f94:	mov	r3, #0
   37f98:	add	r3, r3, #1
   37f9c:	lsrs	r6, r6, #1
   37fa0:	uxth	r3, r3
   37fa4:	bne	37f98 <__flatcc_fb_build_schema@@Base+0x14a8>
   37fa8:	cmp	r3, #7
   37fac:	movcs	r3, #7
   37fb0:	lsl	r3, r3, #2
   37fb4:	add	r6, sp, #144	; 0x90
   37fb8:	add	r6, r6, r3
   37fbc:	ldr	r7, [r6, #-84]	; 0xffffffac
   37fc0:	cmp	r7, #0
   37fc4:	add	r7, sp, #144	; 0x90
   37fc8:	ldrne	r6, [r6, #-48]	; 0xffffffd0
   37fcc:	add	r3, r7, r3
   37fd0:	streq	r1, [r6, #-84]	; 0xffffffac
   37fd4:	strne	r1, [r6]
   37fd8:	add	r6, r1, #108	; 0x6c
   37fdc:	ldr	r1, [r1]
   37fe0:	str	r6, [r3, #-48]	; 0xffffffd0
   37fe4:	cmp	r1, #0
   37fe8:	bne	372ec <__flatcc_fb_build_schema@@Base+0x7fc>
   37fec:	ldr	r2, [sp, #88]	; 0x58
   37ff0:	mov	r7, r5
   37ff4:	mov	r6, #8
   37ff8:	str	r5, [sp, #128]	; 0x80
   37ffc:	b	38018 <__flatcc_fb_build_schema@@Base+0x1528>
   38000:	sub	r3, r6, #2
   38004:	add	r2, sp, #144	; 0x90
   38008:	uxth	r3, r3
   3800c:	mov	r6, r1
   38010:	add	r3, r2, r3, lsl #2
   38014:	ldr	r2, [r3, #-84]	; 0xffffffac
   38018:	sub	r1, r6, #1
   3801c:	cmp	r2, #0
   38020:	uxth	r1, r1
   38024:	bne	385ec <__flatcc_fb_build_schema@@Base+0x1afc>
   38028:	cmp	r1, #0
   3802c:	bne	38000 <__flatcc_fb_build_schema@@Base+0x1510>
   38030:	ldr	r3, [sp, #60]	; 0x3c
   38034:	str	r3, [r7]
   38038:	ldr	r3, [sp, #92]	; 0x5c
   3803c:	b	3806c <__flatcc_fb_build_schema@@Base+0x157c>
   38040:	mov	r3, lr
   38044:	str	r4, [sp, #56]	; 0x38
   38048:	b	38050 <__flatcc_fb_build_schema@@Base+0x1560>
   3804c:	mov	r2, r1
   38050:	str	r2, [r3]
   38054:	mov	r3, r2
   38058:	ldr	r1, [r3], #108	; 0x6c
   3805c:	cmp	r1, #0
   38060:	bne	3804c <__flatcc_fb_build_schema@@Base+0x155c>
   38064:	ldr	r3, [sp, #56]	; 0x38
   38068:	str	r1, [r2, #108]	; 0x6c
   3806c:	str	r3, [r0, #24]
   38070:	ldr	r0, [r0]
   38074:	cmp	r0, #0
   38078:	bne	3727c <__flatcc_fb_build_schema@@Base+0x78c>
   3807c:	ldr	ip, [fp, #400]	; 0x190
   38080:	cmp	ip, #0
   38084:	beq	384f8 <__flatcc_fb_build_schema@@Base+0x1a08>
   38088:	mov	r6, ip
   3808c:	mov	r2, #0
   38090:	ldr	r5, [fp, #408]	; 0x198
   38094:	b	380a0 <__flatcc_fb_build_schema@@Base+0x15b0>
   38098:	mov	r2, r1
   3809c:	mov	r6, r3
   380a0:	ldr	r3, [r6]
   380a4:	add	r1, r2, #1
   380a8:	cmp	r3, #0
   380ac:	bne	38098 <__flatcc_fb_build_schema@@Base+0x15a8>
   380b0:	sub	r3, r1, #1
   380b4:	cmp	r5, #0
   380b8:	clz	r3, r3
   380bc:	lsr	r3, r3, #5
   380c0:	moveq	r3, #0
   380c4:	cmp	r3, #0
   380c8:	bne	38498 <__flatcc_fb_build_schema@@Base+0x19a8>
   380cc:	cmp	r1, #1
   380d0:	moveq	r1, r3
   380d4:	movne	r1, ip
   380d8:	cmp	sl, #0
   380dc:	streq	sl, [fp, #404]	; 0x194
   380e0:	beq	385d0 <__flatcc_fb_build_schema@@Base+0x1ae0>
   380e4:	ldr	r0, [fp, #412]	; 0x19c
   380e8:	cmp	r0, #0
   380ec:	beq	3813c <__flatcc_fb_build_schema@@Base+0x164c>
   380f0:	rsb	r2, r2, #0
   380f4:	bl	2d85c <fb_scope_table_find@@Base>
   380f8:	cmp	r0, #0
   380fc:	beq	387a8 <__flatcc_fb_build_schema@@Base+0x1cb8>
   38100:	ldr	r3, [r6, #4]
   38104:	add	r0, r0, #4
   38108:	ldm	r3, {r1, r2}
   3810c:	bl	2c7d4 <fb_symbol_table_find@@Base>
   38110:	subs	r4, r0, #0
   38114:	beq	385c4 <__flatcc_fb_build_schema@@Base+0x1ad4>
   38118:	ldrh	r3, [r4, #8]
   3811c:	cmp	r3, #4
   38120:	bhi	385c4 <__flatcc_fb_build_schema@@Base+0x1ad4>
   38124:	ldr	r1, [r4, #16]
   38128:	ldr	r0, [sp, #20]
   3812c:	bl	2c058 <ptr_set_find_item@@Base>
   38130:	cmp	r0, #0
   38134:	bne	384d0 <__flatcc_fb_build_schema@@Base+0x19e0>
   38138:	ldr	ip, [fp, #400]	; 0x190
   3813c:	str	r0, [fp, #404]	; 0x194
   38140:	b	385d0 <__flatcc_fb_build_schema@@Base+0x1ae0>
   38144:	ldr	r3, [r2, #4]
   38148:	mov	r2, #0
   3814c:	mov	r0, fp
   38150:	ldr	r1, [r4, #4]
   38154:	str	r2, [sp]
   38158:	str	r2, [sp, #4]
   3815c:	ldr	r2, [pc, #-1520]	; 37b74 <__flatcc_fb_build_schema@@Base+0x1084>
   38160:	add	r2, pc, r2
   38164:	bl	2ebf8 <__flatcc_error_report@@Base>
   38168:	ldr	r4, [r4]
   3816c:	cmp	r4, #0
   38170:	bne	37004 <__flatcc_fb_build_schema@@Base+0x514>
   38174:	b	37220 <__flatcc_fb_build_schema@@Base+0x730>
   38178:	cmp	r2, #2
   3817c:	bne	381b0 <__flatcc_fb_build_schema@@Base+0x16c0>
   38180:	ldrh	r3, [r5, #16]
   38184:	cmp	r3, #2
   38188:	beq	37e38 <__flatcc_fb_build_schema@@Base+0x1348>
   3818c:	ldr	r2, [pc, #-1564]	; 37b78 <__flatcc_fb_build_schema@@Base+0x1088>
   38190:	mov	r3, ip
   38194:	mov	r0, fp
   38198:	ldr	r1, [r5, #4]
   3819c:	str	ip, [sp]
   381a0:	str	ip, [sp, #4]
   381a4:	add	r2, pc, r2
   381a8:	bl	2ebf8 <__flatcc_error_report@@Base>
   381ac:	b	37e38 <__flatcc_fb_build_schema@@Base+0x1348>
   381b0:	cmp	r2, #5
   381b4:	beq	38364 <__flatcc_fb_build_schema@@Base+0x1874>
   381b8:	cmp	r2, #4
   381bc:	bne	38394 <__flatcc_fb_build_schema@@Base+0x18a4>
   381c0:	ldrh	r3, [r5, #16]
   381c4:	sub	r3, r3, #4
   381c8:	cmp	r3, #1
   381cc:	bls	37e38 <__flatcc_fb_build_schema@@Base+0x1348>
   381d0:	mov	r3, ip
   381d4:	mov	r0, fp
   381d8:	ldr	r1, [r5, #4]
   381dc:	str	ip, [sp]
   381e0:	str	ip, [sp, #4]
   381e4:	ldr	r2, [sp, #28]
   381e8:	bl	2ebf8 <__flatcc_error_report@@Base>
   381ec:	b	37e38 <__flatcc_fb_build_schema@@Base+0x1348>
   381f0:	mov	r3, r2
   381f4:	ldr	r1, [r4, #4]
   381f8:	mov	r0, fp
   381fc:	str	r2, [sp]
   38200:	str	r2, [sp, #4]
   38204:	ldr	r2, [pc, #-1680]	; 37b7c <__flatcc_fb_build_schema@@Base+0x108c>
   38208:	add	r2, pc, r2
   3820c:	bl	2ebf8 <__flatcc_error_report@@Base>
   38210:	b	37034 <__flatcc_fb_build_schema@@Base+0x544>
   38214:	ldrh	r3, [r9, #48]	; 0x30
   38218:	cmp	r3, #1
   3821c:	beq	37224 <__flatcc_fb_build_schema@@Base+0x734>
   38220:	mov	r1, r9
   38224:	mov	r0, fp
   38228:	bl	34a6c <__flatcc_fb_clear_parser@@Base+0x1500>
   3822c:	cmp	r0, #0
   38230:	beq	37224 <__flatcc_fb_build_schema@@Base+0x734>
   38234:	mov	r3, #1
   38238:	strh	r3, [r9, #48]	; 0x30
   3823c:	ldr	r9, [r9]
   38240:	cmp	r9, #0
   38244:	bne	36f7c <__flatcc_fb_build_schema@@Base+0x48c>
   38248:	b	37230 <__flatcc_fb_build_schema@@Base+0x740>
   3824c:	cmp	r5, #0
   38250:	beq	38274 <__flatcc_fb_build_schema@@Base+0x1784>
   38254:	mov	r3, r2
   38258:	ldr	r1, [r5, #4]
   3825c:	mov	r0, fp
   38260:	str	r2, [sp]
   38264:	str	r2, [sp, #4]
   38268:	ldr	r2, [pc, #-1776]	; 37b80 <__flatcc_fb_build_schema@@Base+0x1090>
   3826c:	add	r2, pc, r2
   38270:	bl	2ebf8 <__flatcc_error_report@@Base>
   38274:	strh	r6, [r4, #72]	; 0x48
   38278:	ldr	r4, [r4]
   3827c:	cmp	r4, #0
   38280:	bne	37004 <__flatcc_fb_build_schema@@Base+0x514>
   38284:	b	37220 <__flatcc_fb_build_schema@@Base+0x730>
   38288:	ldr	r2, [pc, #-1804]	; 37b84 <__flatcc_fb_build_schema@@Base+0x1094>
   3828c:	mov	r3, ip
   38290:	mov	r0, fp
   38294:	ldr	r1, [r5, #4]
   38298:	str	ip, [sp]
   3829c:	str	ip, [sp, #4]
   382a0:	add	r2, pc, r2
   382a4:	bl	2ebf8 <__flatcc_error_report@@Base>
   382a8:	b	37e38 <__flatcc_fb_build_schema@@Base+0x1348>
   382ac:	mov	r2, #0
   382b0:	ldr	r1, [r4, #4]
   382b4:	mov	r0, fp
   382b8:	ldr	r3, [r7, #4]
   382bc:	str	r2, [sp]
   382c0:	str	r2, [sp, #4]
   382c4:	ldr	r2, [pc, #-1860]	; 37b88 <__flatcc_fb_build_schema@@Base+0x1098>
   382c8:	add	r2, pc, r2
   382cc:	bl	2ebf8 <__flatcc_error_report@@Base>
   382d0:	mov	r3, #1
   382d4:	strh	r3, [r4, #24]
   382d8:	ldr	r4, [r4]
   382dc:	cmp	r4, #0
   382e0:	bne	37004 <__flatcc_fb_build_schema@@Base+0x514>
   382e4:	b	37220 <__flatcc_fb_build_schema@@Base+0x730>
   382e8:	mov	r3, r2
   382ec:	ldr	r1, [r5, #4]
   382f0:	mov	r0, fp
   382f4:	str	r2, [sp]
   382f8:	str	r2, [sp, #4]
   382fc:	ldr	r2, [pc, #-1912]	; 37b8c <__flatcc_fb_build_schema@@Base+0x109c>
   38300:	add	r2, pc, r2
   38304:	bl	2ebf8 <__flatcc_error_report@@Base>
   38308:	b	37e38 <__flatcc_fb_build_schema@@Base+0x1348>
   3830c:	mov	r3, r2
   38310:	ldr	r1, [r4, #4]
   38314:	mov	r0, fp
   38318:	str	r2, [sp]
   3831c:	str	r2, [sp, #4]
   38320:	ldr	r2, [pc, #-1944]	; 37b90 <__flatcc_fb_build_schema@@Base+0x10a0>
   38324:	add	r2, pc, r2
   38328:	bl	2ebf8 <__flatcc_error_report@@Base>
   3832c:	b	37674 <__flatcc_fb_build_schema@@Base+0xb84>
   38330:	cmp	r2, #0
   38334:	add	r3, sp, #96	; 0x60
   38338:	str	r1, [sp, #96]	; 0x60
   3833c:	beq	38354 <__flatcc_fb_build_schema@@Base+0x1864>
   38340:	str	r2, [r3]
   38344:	mov	r3, r2
   38348:	ldr	r2, [r3], #108	; 0x6c
   3834c:	cmp	r2, #0
   38350:	bne	38340 <__flatcc_fb_build_schema@@Base+0x1850>
   38354:	str	ip, [r3]
   38358:	ldr	r3, [sp, #96]	; 0x60
   3835c:	str	r3, [r0, #24]
   38360:	b	38070 <__flatcc_fb_build_schema@@Base+0x1580>
   38364:	ldrh	r3, [r5, #16]
   38368:	cmp	r3, #5
   3836c:	beq	37e38 <__flatcc_fb_build_schema@@Base+0x1348>
   38370:	ldr	r2, [pc, #-2020]	; 37b94 <__flatcc_fb_build_schema@@Base+0x10a4>
   38374:	mov	r3, ip
   38378:	mov	r0, fp
   3837c:	ldr	r1, [r5, #4]
   38380:	str	ip, [sp]
   38384:	str	ip, [sp, #4]
   38388:	add	r2, pc, r2
   3838c:	bl	2ebf8 <__flatcc_error_report@@Base>
   38390:	b	37e38 <__flatcc_fb_build_schema@@Base+0x1348>
   38394:	cmp	r2, #6
   38398:	bne	37e38 <__flatcc_fb_build_schema@@Base+0x1348>
   3839c:	ldrh	r3, [r5, #16]
   383a0:	cmp	r3, #6
   383a4:	beq	37e38 <__flatcc_fb_build_schema@@Base+0x1348>
   383a8:	mov	ip, #0
   383ac:	mov	r0, fp
   383b0:	ldr	r1, [r5, #4]
   383b4:	mov	r3, ip
   383b8:	str	ip, [sp]
   383bc:	str	ip, [sp, #4]
   383c0:	ldr	r2, [sp, #40]	; 0x28
   383c4:	bl	2ebf8 <__flatcc_error_report@@Base>
   383c8:	b	37e38 <__flatcc_fb_build_schema@@Base+0x1348>
   383cc:	mov	r2, #0
   383d0:	ldr	r1, [r4, #4]
   383d4:	mov	r0, fp
   383d8:	ldr	r3, [r7, #4]
   383dc:	str	r2, [sp]
   383e0:	str	r2, [sp, #4]
   383e4:	ldr	r2, [pc, #-2132]	; 37b98 <__flatcc_fb_build_schema@@Base+0x10a8>
   383e8:	add	r2, pc, r2
   383ec:	bl	2ebf8 <__flatcc_error_report@@Base>
   383f0:	mov	r3, #1
   383f4:	strh	r3, [r4, #24]
   383f8:	ldr	r4, [r4]
   383fc:	cmp	r4, #0
   38400:	bne	37004 <__flatcc_fb_build_schema@@Base+0x514>
   38404:	b	37220 <__flatcc_fb_build_schema@@Base+0x730>
   38408:	ldrh	r3, [r8, #24]
   3840c:	strh	r4, [r8, #72]	; 0x48
   38410:	cmp	r3, #8
   38414:	bne	36df0 <__flatcc_fb_build_schema@@Base+0x300>
   38418:	b	37834 <__flatcc_fb_build_schema@@Base+0xd44>
   3841c:	ldrh	r3, [r8, #72]	; 0x48
   38420:	tst	r3, #128	; 0x80
   38424:	beq	37834 <__flatcc_fb_build_schema@@Base+0xd44>
   38428:	mov	r2, #0
   3842c:	ldr	r1, [r8, #4]
   38430:	mov	r0, fp
   38434:	mov	r3, r2
   38438:	str	r2, [sp]
   3843c:	str	r2, [sp, #4]
   38440:	ldr	r2, [pc, #-2220]	; 37b9c <__flatcc_fb_build_schema@@Base+0x10ac>
   38444:	ldr	sl, [sp, #24]
   38448:	add	r2, pc, r2
   3844c:	bl	2ebf8 <__flatcc_error_report@@Base>
   38450:	strh	r4, [r8, #24]
   38454:	b	36efc <__flatcc_fb_build_schema@@Base+0x40c>
   38458:	ldr	r3, [r5, #4]
   3845c:	add	r0, r0, #4
   38460:	ldm	r3, {r1, r2}
   38464:	bl	2c7d4 <fb_symbol_table_find@@Base>
   38468:	subs	r7, r0, #0
   3846c:	beq	36e7c <__flatcc_fb_build_schema@@Base+0x38c>
   38470:	ldrh	r3, [r7, #8]
   38474:	cmp	r3, #4
   38478:	bhi	36e7c <__flatcc_fb_build_schema@@Base+0x38c>
   3847c:	ldr	r1, [r7, #16]
   38480:	ldr	r0, [sp, #20]
   38484:	bl	2c058 <ptr_set_find_item@@Base>
   38488:	cmp	r0, #0
   3848c:	bne	377e4 <__flatcc_fb_build_schema@@Base+0xcf4>
   38490:	b	36e7c <__flatcc_fb_build_schema@@Base+0x38c>
   38494:	mov	r5, r0
   38498:	ldr	r3, [r6, #4]
   3849c:	add	r0, r5, #4
   384a0:	ldm	r3, {r1, r2}
   384a4:	bl	2c7d4 <fb_symbol_table_find@@Base>
   384a8:	subs	r4, r0, #0
   384ac:	beq	38538 <__flatcc_fb_build_schema@@Base+0x1a48>
   384b0:	ldrh	r3, [r4, #8]
   384b4:	cmp	r3, #4
   384b8:	bhi	38538 <__flatcc_fb_build_schema@@Base+0x1a48>
   384bc:	ldr	r1, [r4, #16]
   384c0:	ldr	r0, [sp, #20]
   384c4:	bl	2c058 <ptr_set_find_item@@Base>
   384c8:	cmp	r0, #0
   384cc:	beq	38538 <__flatcc_fb_build_schema@@Base+0x1a48>
   384d0:	ldr	r3, [fp, #176]	; 0xb0
   384d4:	ldrh	r2, [r4, #8]
   384d8:	str	r4, [fp, #404]	; 0x194
   384dc:	cmp	r3, #0
   384e0:	beq	38698 <__flatcc_fb_build_schema@@Base+0x1ba8>
   384e4:	cmp	r2, #1
   384e8:	bhi	386c4 <__flatcc_fb_build_schema@@Base+0x1bd4>
   384ec:	mov	r3, #0
   384f0:	str	r3, [fp, #400]	; 0x190
   384f4:	b	38504 <__flatcc_fb_build_schema@@Base+0x1a14>
   384f8:	ldr	r3, [fp, #208]	; 0xd0
   384fc:	cmp	r3, #0
   38500:	bne	38710 <__flatcc_fb_build_schema@@Base+0x1c20>
   38504:	ldr	r0, [fp, #108]	; 0x6c
   38508:	clz	r3, r0
   3850c:	lsr	r3, r3, #5
   38510:	str	r3, [fp, #120]	; 0x78
   38514:	add	sp, sp, #148	; 0x94
   38518:	ldrd	r4, [sp]
   3851c:	ldrd	r6, [sp, #8]
   38520:	ldrd	r8, [sp, #16]
   38524:	ldrd	sl, [sp, #24]
   38528:	add	sp, sp, #32
   3852c:	pop	{pc}		; (ldr pc, [sp], #4)
   38530:	ldrh	r3, [r6, #104]	; 0x68
   38534:	b	37f80 <__flatcc_fb_build_schema@@Base+0x1490>
   38538:	ldr	r3, [r5]
   3853c:	cmp	r3, #0
   38540:	beq	385c4 <__flatcc_fb_build_schema@@Base+0x1ad4>
   38544:	mov	r4, #0
   38548:	b	38550 <__flatcc_fb_build_schema@@Base+0x1a60>
   3854c:	mov	r4, r2
   38550:	ldr	r3, [r3]
   38554:	add	r2, r4, #1
   38558:	cmp	r3, #0
   3855c:	bne	3854c <__flatcc_fb_build_schema@@Base+0x1a5c>
   38560:	rsb	r4, r4, #0
   38564:	b	38594 <__flatcc_fb_build_schema@@Base+0x1aa4>
   38568:	cmp	sl, #0
   3856c:	beq	38590 <__flatcc_fb_build_schema@@Base+0x1aa0>
   38570:	ldr	r0, [fp, #412]	; 0x19c
   38574:	cmp	r0, #0
   38578:	beq	38590 <__flatcc_fb_build_schema@@Base+0x1aa0>
   3857c:	mov	r2, r4
   38580:	ldr	r1, [r5]
   38584:	bl	2d85c <fb_scope_table_find@@Base>
   38588:	cmp	r0, #0
   3858c:	bne	38494 <__flatcc_fb_build_schema@@Base+0x19a4>
   38590:	add	r4, r4, #1
   38594:	cmp	r4, #0
   38598:	bne	38568 <__flatcc_fb_build_schema@@Base+0x1a78>
   3859c:	cmp	sl, #0
   385a0:	beq	385c4 <__flatcc_fb_build_schema@@Base+0x1ad4>
   385a4:	ldr	r0, [fp, #412]	; 0x19c
   385a8:	cmp	r0, #0
   385ac:	beq	385c4 <__flatcc_fb_build_schema@@Base+0x1ad4>
   385b0:	mov	r2, r4
   385b4:	mov	r1, r4
   385b8:	bl	2d85c <fb_scope_table_find@@Base>
   385bc:	subs	r5, r0, #0
   385c0:	bne	38498 <__flatcc_fb_build_schema@@Base+0x19a8>
   385c4:	ldr	ip, [fp, #400]	; 0x190
   385c8:	mov	r3, #0
   385cc:	str	r3, [fp, #404]	; 0x194
   385d0:	ldr	r2, [pc, #-2616]	; 37ba0 <__flatcc_fb_build_schema@@Base+0x10b0>
   385d4:	mov	r1, ip
   385d8:	mov	r3, #0
   385dc:	mov	r0, fp
   385e0:	add	r2, pc, r2
   385e4:	bl	30378 <error_ref_sym@@Base>
   385e8:	b	384ec <__flatcc_fb_build_schema@@Base+0x19fc>
   385ec:	cmp	r1, #0
   385f0:	str	r2, [r7]
   385f4:	beq	38038 <__flatcc_fb_build_schema@@Base+0x1548>
   385f8:	sub	r3, r6, #2
   385fc:	add	r2, sp, #144	; 0x90
   38600:	add	r2, r2, r1, lsl #2
   38604:	mov	r6, r1
   38608:	uxth	r3, r3
   3860c:	add	r1, sp, #144	; 0x90
   38610:	add	r3, r1, r3, lsl #2
   38614:	ldr	r7, [r2, #-48]	; 0xffffffd0
   38618:	ldr	r2, [r3, #-84]	; 0xffffffac
   3861c:	b	38018 <__flatcc_fb_build_schema@@Base+0x1528>
   38620:	mov	r3, r2
   38624:	ldr	r1, [r4, #4]
   38628:	mov	r0, fp
   3862c:	str	r2, [sp]
   38630:	str	r2, [sp, #4]
   38634:	ldr	r2, [pc, #-2712]	; 37ba4 <__flatcc_fb_build_schema@@Base+0x10b4>
   38638:	add	r2, pc, r2
   3863c:	bl	2ebf8 <__flatcc_error_report@@Base>
   38640:	b	373f4 <__flatcc_fb_build_schema@@Base+0x904>
   38644:	mov	r3, r2
   38648:	ldr	r1, [r5, #4]
   3864c:	mov	r0, fp
   38650:	str	r2, [sp]
   38654:	str	r2, [sp, #4]
   38658:	ldr	r2, [pc, #-2744]	; 37ba8 <__flatcc_fb_build_schema@@Base+0x10b8>
   3865c:	add	r2, pc, r2
   38660:	bl	2ebf8 <__flatcc_error_report@@Base>
   38664:	b	37e38 <__flatcc_fb_build_schema@@Base+0x1348>
   38668:	mov	r3, r2
   3866c:	ldr	r1, [r4, #4]
   38670:	mov	r0, fp
   38674:	str	r2, [sp]
   38678:	str	r2, [sp, #4]
   3867c:	ldr	r2, [pc, #-2776]	; 37bac <__flatcc_fb_build_schema@@Base+0x10bc>
   38680:	ldr	r9, [sp, #16]
   38684:	add	r2, pc, r2
   38688:	bl	2ebf8 <__flatcc_error_report@@Base>
   3868c:	mov	r3, #1
   38690:	strh	r3, [r9, #48]	; 0x30
   38694:	b	3823c <__flatcc_fb_build_schema@@Base+0x174c>
   38698:	cmp	r2, #0
   3869c:	beq	384ec <__flatcc_fb_build_schema@@Base+0x19fc>
   386a0:	ldr	r2, [pc, #-2808]	; 37bb0 <__flatcc_fb_build_schema@@Base+0x10c0>
   386a4:	mov	r0, fp
   386a8:	ldr	r1, [fp, #400]	; 0x190
   386ac:	add	r2, pc, r2
   386b0:	bl	30378 <error_ref_sym@@Base>
   386b4:	b	384ec <__flatcc_fb_build_schema@@Base+0x19fc>
   386b8:	str	sl, [r4, #16]
   386bc:	str	r3, [r4, #88]	; 0x58
   386c0:	b	36bcc <__flatcc_fb_build_schema@@Base+0xdc>
   386c4:	ldr	r2, [pc, #-2840]	; 37bb4 <__flatcc_fb_build_schema@@Base+0x10c4>
   386c8:	mov	r3, #0
   386cc:	mov	r0, fp
   386d0:	ldr	r1, [fp, #400]	; 0x190
   386d4:	add	r2, pc, r2
   386d8:	bl	30378 <error_ref_sym@@Base>
   386dc:	b	384ec <__flatcc_fb_build_schema@@Base+0x19fc>
   386e0:	mov	r3, r2
   386e4:	ldr	r1, [r8, #4]
   386e8:	mov	r0, fp
   386ec:	str	r2, [sp]
   386f0:	str	r2, [sp, #4]
   386f4:	ldr	r2, [pc, #-2884]	; 37bb8 <__flatcc_fb_build_schema@@Base+0x10c8>
   386f8:	ldr	sl, [sp, #24]
   386fc:	add	r2, pc, r2
   38700:	bl	2ebf8 <__flatcc_error_report@@Base>
   38704:	mov	r3, #1
   38708:	strh	r3, [r8, #24]
   3870c:	b	36efc <__flatcc_fb_build_schema@@Base+0x40c>
   38710:	ldr	r2, [pc, #-2908]	; 37bbc <__flatcc_fb_build_schema@@Base+0x10cc>
   38714:	mov	r3, ip
   38718:	mov	r1, ip
   3871c:	mov	r0, fp
   38720:	str	ip, [sp]
   38724:	str	ip, [sp, #4]
   38728:	add	r2, pc, r2
   3872c:	bl	2ebf8 <__flatcc_error_report@@Base>
   38730:	b	38504 <__flatcc_fb_build_schema@@Base+0x1a14>
   38734:	mov	r2, r0
   38738:	ldr	r1, [r8, #4]
   3873c:	mov	r3, r0
   38740:	mov	r0, fp
   38744:	str	r2, [sp]
   38748:	str	r2, [sp, #4]
   3874c:	ldr	r2, [pc, #-2964]	; 37bc0 <__flatcc_fb_build_schema@@Base+0x10d0>
   38750:	ldr	sl, [sp, #24]
   38754:	add	r2, pc, r2
   38758:	bl	2ebf8 <__flatcc_error_report@@Base>
   3875c:	b	36efc <__flatcc_fb_build_schema@@Base+0x40c>
   38760:	ldr	r3, [fp, #396]	; 0x18c
   38764:	cmp	r3, #0
   38768:	movne	r0, #0
   3876c:	bne	37240 <__flatcc_fb_build_schema@@Base+0x750>
   38770:	b	3807c <__flatcc_fb_build_schema@@Base+0x158c>
   38774:	mov	r2, #0
   38778:	ldr	r3, [r7, #4]
   3877c:	mov	r0, fp
   38780:	ldr	r1, [r8, #4]
   38784:	str	r2, [sp]
   38788:	str	r2, [sp, #4]
   3878c:	ldr	r2, [pc, #-3024]	; 37bc4 <__flatcc_fb_build_schema@@Base+0x10d4>
   38790:	ldr	sl, [sp, #24]
   38794:	add	r2, pc, r2
   38798:	bl	2ebf8 <__flatcc_error_report@@Base>
   3879c:	mov	r3, #1
   387a0:	strh	r3, [r8, #24]
   387a4:	b	36efc <__flatcc_fb_build_schema@@Base+0x40c>
   387a8:	str	r0, [fp, #404]	; 0x194
   387ac:	ldr	ip, [fp, #400]	; 0x190
   387b0:	b	385d0 <__flatcc_fb_build_schema@@Base+0x1ae0>
   387b4:	mov	r2, #0
   387b8:	ldr	r1, [sl, #4]
   387bc:	mov	r0, fp
   387c0:	mov	r3, r2
   387c4:	str	r2, [sp]
   387c8:	str	r2, [sp, #4]
   387cc:	ldr	r2, [pc, #-3084]	; 37bc8 <__flatcc_fb_build_schema@@Base+0x10d8>
   387d0:	add	r2, pc, r2
   387d4:	bl	2ebf8 <__flatcc_error_report@@Base>
   387d8:	b	36efc <__flatcc_fb_build_schema@@Base+0x40c>
   387dc:	ldr	r3, [r7, #4]
   387e0:	mov	r0, fp
   387e4:	ldr	r1, [r8, #4]
   387e8:	str	r2, [sp]
   387ec:	str	r2, [sp, #4]
   387f0:	ldr	r2, [pc, #-3116]	; 37bcc <__flatcc_fb_build_schema@@Base+0x10dc>
   387f4:	ldr	sl, [sp, #24]
   387f8:	add	r2, pc, r2
   387fc:	bl	2ebf8 <__flatcc_error_report@@Base>
   38800:	mov	r3, #1
   38804:	strh	r3, [r8, #24]
   38808:	b	36efc <__flatcc_fb_build_schema@@Base+0x40c>
   3880c:	ldr	r3, [pc, #-3140]	; 37bd0 <__flatcc_fb_build_schema@@Base+0x10e0>
   38810:	mov	r2, #34	; 0x22
   38814:	mov	r1, #1
   38818:	ldr	r0, [pc, #-3148]	; 37bd4 <__flatcc_fb_build_schema@@Base+0x10e4>
   3881c:	ldr	r3, [r7, r3]
   38820:	add	r0, pc, r0
   38824:	ldr	r3, [r3]
   38828:	bl	13fec <fwrite@plt>
   3882c:	mov	r0, #1
   38830:	bl	14040 <exit@plt>
   38834:	ldr	r3, [pc, #-3172]	; 37bd8 <__flatcc_fb_build_schema@@Base+0x10e8>
   38838:	movw	r2, #1521	; 0x5f1
   3883c:	ldr	r1, [pc, #-3176]	; 37bdc <__flatcc_fb_build_schema@@Base+0x10ec>
   38840:	ldr	r0, [pc, #-3176]	; 37be0 <__flatcc_fb_build_schema@@Base+0x10f0>
   38844:	add	r3, pc, r3
   38848:	add	r3, r3, #336	; 0x150
   3884c:	add	r1, pc, r1
   38850:	add	r0, pc, r0
   38854:	bl	14118 <__assert_fail@plt>
   38858:	ldr	r3, [pc, #-3196]	; 37be4 <__flatcc_fb_build_schema@@Base+0x10f4>
   3885c:	movw	r2, #1558	; 0x616
   38860:	ldr	r1, [pc, #-3200]	; 37be8 <__flatcc_fb_build_schema@@Base+0x10f8>
   38864:	ldr	r0, [pc, #-3200]	; 37bec <__flatcc_fb_build_schema@@Base+0x10fc>
   38868:	add	r3, pc, r3
   3886c:	add	r3, r3, #288	; 0x120
   38870:	add	r1, pc, r1
   38874:	add	r0, pc, r0
   38878:	bl	14118 <__assert_fail@plt>
   3887c:	ldr	r3, [pc, #-3220]	; 37bf0 <__flatcc_fb_build_schema@@Base+0x1100>
   38880:	movw	r2, #1129	; 0x469
   38884:	ldr	r1, [pc, #-3224]	; 37bf4 <__flatcc_fb_build_schema@@Base+0x1104>
   38888:	ldr	r0, [pc, #-3224]	; 37bf8 <__flatcc_fb_build_schema@@Base+0x1108>
   3888c:	add	r3, pc, r3
   38890:	add	r3, r3, #316	; 0x13c
   38894:	add	r1, pc, r1
   38898:	add	r0, pc, r0
   3889c:	bl	14118 <__assert_fail@plt>
   388a0:	ldr	r2, [pc, #-3244]	; 37bfc <__flatcc_fb_build_schema@@Base+0x110c>
   388a4:	mov	ip, #0
   388a8:	mov	r0, fp
   388ac:	mov	r3, ip
   388b0:	ldr	r1, [sl, #4]
   388b4:	str	ip, [sp]
   388b8:	str	ip, [sp, #4]
   388bc:	add	r2, pc, r2
   388c0:	bl	2ebf8 <__flatcc_error_report@@Base>
   388c4:	mvn	r0, #0
   388c8:	b	38514 <__flatcc_fb_build_schema@@Base+0x1a24>

000388cc <__flatcc_fb_coerce_scalar_type@@Base>:
   388cc:	ldrh	ip, [r3, #8]
   388d0:	cmp	ip, #0
   388d4:	beq	38a10 <__flatcc_fb_coerce_scalar_type@@Base+0x144>
   388d8:	cmp	ip, #4
   388dc:	strd	r4, [sp, #-32]!	; 0xffffffe0
   388e0:	mov	r5, r0
   388e4:	mov	r4, r3
   388e8:	str	r6, [sp, #8]
   388ec:	mov	r6, r1
   388f0:	strd	r8, [sp, #12]
   388f4:	strd	sl, [sp, #20]
   388f8:	str	lr, [sp, #28]
   388fc:	vpush	{d8}
   38900:	sub	sp, sp, #8
   38904:	beq	38988 <__flatcc_fb_coerce_scalar_type@@Base+0xbc>
   38908:	cmp	ip, #1
   3890c:	beq	389ec <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   38910:	cmp	ip, #6
   38914:	bne	38a18 <__flatcc_fb_coerce_scalar_type@@Base+0x14c>
   38918:	cmp	r2, #5
   3891c:	beq	389ec <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   38920:	ldr	r3, [r0, #144]	; 0x90
   38924:	cmp	r3, #0
   38928:	beq	38a90 <__flatcc_fb_coerce_scalar_type@@Base+0x1c4>
   3892c:	ldrb	r0, [r4]
   38930:	mov	r1, #0
   38934:	mov	r3, #5
   38938:	cmp	r1, #0
   3893c:	cmpeq	r0, #1
   38940:	strd	r0, [r4]
   38944:	strh	r3, [r4, #8]
   38948:	bhi	38f54 <__flatcc_fb_coerce_scalar_type@@Base+0x688>
   3894c:	sub	r2, r2, #1
   38950:	cmp	r2, #10
   38954:	addls	pc, pc, r2, lsl #2
   38958:	b	38ed4 <__flatcc_fb_coerce_scalar_type@@Base+0x608>
   3895c:	b	389ec <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   38960:	b	389ec <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   38964:	b	38bb4 <__flatcc_fb_coerce_scalar_type@@Base+0x2e8>
   38968:	b	38b84 <__flatcc_fb_coerce_scalar_type@@Base+0x2b8>
   3896c:	b	38ed4 <__flatcc_fb_coerce_scalar_type@@Base+0x608>
   38970:	b	38ae0 <__flatcc_fb_coerce_scalar_type@@Base+0x214>
   38974:	b	38cc4 <__flatcc_fb_coerce_scalar_type@@Base+0x3f8>
   38978:	b	38c8c <__flatcc_fb_coerce_scalar_type@@Base+0x3c0>
   3897c:	b	38c54 <__flatcc_fb_coerce_scalar_type@@Base+0x388>
   38980:	b	38e60 <__flatcc_fb_coerce_scalar_type@@Base+0x594>
   38984:	b	38e9c <__flatcc_fb_coerce_scalar_type@@Base+0x5d0>
   38988:	ldrd	r0, [r3]
   3898c:	cmp	r0, #0
   38990:	sbcs	r3, r1, #0
   38994:	blt	38a54 <__flatcc_fb_coerce_scalar_type@@Base+0x188>
   38998:	mov	r3, #5
   3899c:	sub	r2, r2, #1
   389a0:	strh	r3, [r4, #8]
   389a4:	cmp	r2, #10
   389a8:	addls	pc, pc, r2, lsl #2
   389ac:	b	38ed4 <__flatcc_fb_coerce_scalar_type@@Base+0x608>
   389b0:	b	38b58 <__flatcc_fb_coerce_scalar_type@@Base+0x28c>
   389b4:	b	38b00 <__flatcc_fb_coerce_scalar_type@@Base+0x234>
   389b8:	b	38ba8 <__flatcc_fb_coerce_scalar_type@@Base+0x2dc>
   389bc:	b	38b78 <__flatcc_fb_coerce_scalar_type@@Base+0x2ac>
   389c0:	b	38efc <__flatcc_fb_coerce_scalar_type@@Base+0x630>
   389c4:	b	38acc <__flatcc_fb_coerce_scalar_type@@Base+0x200>
   389c8:	b	38cb0 <__flatcc_fb_coerce_scalar_type@@Base+0x3e4>
   389cc:	b	38c78 <__flatcc_fb_coerce_scalar_type@@Base+0x3ac>
   389d0:	b	38c40 <__flatcc_fb_coerce_scalar_type@@Base+0x374>
   389d4:	b	38c10 <__flatcc_fb_coerce_scalar_type@@Base+0x344>
   389d8:	b	38be0 <__flatcc_fb_coerce_scalar_type@@Base+0x314>
   389dc:	cmp	ip, #5
   389e0:	beq	38efc <__flatcc_fb_coerce_scalar_type@@Base+0x630>
   389e4:	cmp	ip, #6
   389e8:	bne	38f08 <__flatcc_fb_coerce_scalar_type@@Base+0x63c>
   389ec:	mov	r0, #0
   389f0:	add	sp, sp, #8
   389f4:	vpop	{d8}
   389f8:	ldrd	r4, [sp]
   389fc:	ldr	r6, [sp, #8]
   38a00:	ldrd	r8, [sp, #12]
   38a04:	ldrd	sl, [sp, #20]
   38a08:	add	sp, sp, #28
   38a0c:	pop	{pc}		; (ldr pc, [sp], #4)
   38a10:	mov	r0, #0
   38a14:	bx	lr
   38a18:	sub	r2, r2, #1
   38a1c:	cmp	r2, #10
   38a20:	addls	pc, pc, r2, lsl #2
   38a24:	b	38ed4 <__flatcc_fb_coerce_scalar_type@@Base+0x608>
   38a28:	b	38b5c <__flatcc_fb_coerce_scalar_type@@Base+0x290>
   38a2c:	b	38b04 <__flatcc_fb_coerce_scalar_type@@Base+0x238>
   38a30:	b	38bac <__flatcc_fb_coerce_scalar_type@@Base+0x2e0>
   38a34:	b	38b7c <__flatcc_fb_coerce_scalar_type@@Base+0x2b0>
   38a38:	b	389dc <__flatcc_fb_coerce_scalar_type@@Base+0x110>
   38a3c:	b	38ad0 <__flatcc_fb_coerce_scalar_type@@Base+0x204>
   38a40:	b	38cb4 <__flatcc_fb_coerce_scalar_type@@Base+0x3e8>
   38a44:	b	38c7c <__flatcc_fb_coerce_scalar_type@@Base+0x3b0>
   38a48:	b	38c44 <__flatcc_fb_coerce_scalar_type@@Base+0x378>
   38a4c:	b	38c14 <__flatcc_fb_coerce_scalar_type@@Base+0x348>
   38a50:	b	38be4 <__flatcc_fb_coerce_scalar_type@@Base+0x318>
   38a54:	sub	r2, r2, #1
   38a58:	cmp	r2, #10
   38a5c:	addls	pc, pc, r2, lsl #2
   38a60:	b	38ed4 <__flatcc_fb_coerce_scalar_type@@Base+0x608>
   38a64:	b	38b64 <__flatcc_fb_coerce_scalar_type@@Base+0x298>
   38a68:	b	38e10 <__flatcc_fb_coerce_scalar_type@@Base+0x544>
   38a6c:	b	38de8 <__flatcc_fb_coerce_scalar_type@@Base+0x51c>
   38a70:	b	38dfc <__flatcc_fb_coerce_scalar_type@@Base+0x530>
   38a74:	b	38f08 <__flatcc_fb_coerce_scalar_type@@Base+0x63c>
   38a78:	b	389ec <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   38a7c:	b	38d44 <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   38a80:	b	38d14 <__flatcc_fb_coerce_scalar_type@@Base+0x448>
   38a84:	b	38ce8 <__flatcc_fb_coerce_scalar_type@@Base+0x41c>
   38a88:	b	38dac <__flatcc_fb_coerce_scalar_type@@Base+0x4e0>
   38a8c:	b	38d70 <__flatcc_fb_coerce_scalar_type@@Base+0x4a4>
   38a90:	sub	r2, r2, #1
   38a94:	cmp	r2, #10
   38a98:	addls	pc, pc, r2, lsl #2
   38a9c:	b	38ed4 <__flatcc_fb_coerce_scalar_type@@Base+0x608>
   38aa0:	b	38b64 <__flatcc_fb_coerce_scalar_type@@Base+0x298>
   38aa4:	b	38e10 <__flatcc_fb_coerce_scalar_type@@Base+0x544>
   38aa8:	b	38de8 <__flatcc_fb_coerce_scalar_type@@Base+0x51c>
   38aac:	b	38dfc <__flatcc_fb_coerce_scalar_type@@Base+0x530>
   38ab0:	b	38ed4 <__flatcc_fb_coerce_scalar_type@@Base+0x608>
   38ab4:	b	38ee8 <__flatcc_fb_coerce_scalar_type@@Base+0x61c>
   38ab8:	b	38e4c <__flatcc_fb_coerce_scalar_type@@Base+0x580>
   38abc:	b	38e38 <__flatcc_fb_coerce_scalar_type@@Base+0x56c>
   38ac0:	b	38e24 <__flatcc_fb_coerce_scalar_type@@Base+0x558>
   38ac4:	b	38c2c <__flatcc_fb_coerce_scalar_type@@Base+0x360>
   38ac8:	b	38bfc <__flatcc_fb_coerce_scalar_type@@Base+0x330>
   38acc:	ldrh	ip, [r4, #8]
   38ad0:	cmp	ip, #4
   38ad4:	beq	389ec <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   38ad8:	cmp	ip, #5
   38adc:	bne	38ee8 <__flatcc_fb_coerce_scalar_type@@Base+0x61c>
   38ae0:	ldrd	r2, [r4]
   38ae4:	cmp	r2, #0
   38ae8:	sbcs	r3, r3, #0
   38aec:	blt	38f40 <__flatcc_fb_coerce_scalar_type@@Base+0x674>
   38af0:	mov	r3, #4
   38af4:	mov	r0, #0
   38af8:	strh	r3, [r4, #8]
   38afc:	b	389f0 <__flatcc_fb_coerce_scalar_type@@Base+0x124>
   38b00:	ldrh	ip, [r4, #8]
   38b04:	cmp	ip, #5
   38b08:	bne	38e10 <__flatcc_fb_coerce_scalar_type@@Base+0x544>
   38b0c:	ldrd	r2, [r4]
   38b10:	mov	r1, #0
   38b14:	mvn	r0, #0
   38b18:	cmp	r3, r1
   38b1c:	cmpeq	r2, r0
   38b20:	bls	389ec <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   38b24:	ldr	r2, [pc, #1096]	; 38f74 <__flatcc_fb_coerce_scalar_type@@Base+0x6a8>
   38b28:	mov	r1, #0
   38b2c:	mov	r0, r5
   38b30:	add	r2, pc, r2
   38b34:	mov	r3, r1
   38b38:	str	r1, [sp]
   38b3c:	str	r1, [sp, #4]
   38b40:	ldr	r1, [r6, #4]
   38b44:	bl	2ebf8 <__flatcc_error_report@@Base>
   38b48:	mov	r3, #1
   38b4c:	mvn	r0, #0
   38b50:	strh	r3, [r4, #8]
   38b54:	b	389f0 <__flatcc_fb_coerce_scalar_type@@Base+0x124>
   38b58:	ldrh	ip, [r4, #8]
   38b5c:	cmp	ip, #5
   38b60:	beq	389ec <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   38b64:	ldr	r2, [pc, #1036]	; 38f78 <__flatcc_fb_coerce_scalar_type@@Base+0x6ac>
   38b68:	mov	r1, #0
   38b6c:	mov	r0, r5
   38b70:	add	r2, pc, r2
   38b74:	b	38b34 <__flatcc_fb_coerce_scalar_type@@Base+0x268>
   38b78:	ldrh	ip, [r4, #8]
   38b7c:	cmp	ip, #5
   38b80:	bne	38dfc <__flatcc_fb_coerce_scalar_type@@Base+0x530>
   38b84:	ldrd	r2, [r4]
   38b88:	cmp	r3, #0
   38b8c:	cmpeq	r2, #255	; 0xff
   38b90:	bls	389ec <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   38b94:	ldr	r2, [pc, #992]	; 38f7c <__flatcc_fb_coerce_scalar_type@@Base+0x6b0>
   38b98:	mov	r1, #0
   38b9c:	mov	r0, r5
   38ba0:	add	r2, pc, r2
   38ba4:	b	38b34 <__flatcc_fb_coerce_scalar_type@@Base+0x268>
   38ba8:	ldrh	ip, [r4, #8]
   38bac:	cmp	ip, #5
   38bb0:	bne	38de8 <__flatcc_fb_coerce_scalar_type@@Base+0x51c>
   38bb4:	ldrd	r2, [r4]
   38bb8:	mov	r1, #0
   38bbc:	movw	r0, #65535	; 0xffff
   38bc0:	cmp	r3, r1
   38bc4:	cmpeq	r2, r0
   38bc8:	bls	389ec <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   38bcc:	ldr	r2, [pc, #940]	; 38f80 <__flatcc_fb_coerce_scalar_type@@Base+0x6b4>
   38bd0:	mov	r1, #0
   38bd4:	mov	r0, r5
   38bd8:	add	r2, pc, r2
   38bdc:	b	38b34 <__flatcc_fb_coerce_scalar_type@@Base+0x268>
   38be0:	ldrh	ip, [r4, #8]
   38be4:	cmp	ip, #4
   38be8:	beq	38d70 <__flatcc_fb_coerce_scalar_type@@Base+0x4a4>
   38bec:	cmp	ip, #5
   38bf0:	beq	38e9c <__flatcc_fb_coerce_scalar_type@@Base+0x5d0>
   38bf4:	cmp	ip, #3
   38bf8:	beq	389ec <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   38bfc:	ldr	r2, [pc, #896]	; 38f84 <__flatcc_fb_coerce_scalar_type@@Base+0x6b8>
   38c00:	mov	r1, #0
   38c04:	mov	r0, r5
   38c08:	add	r2, pc, r2
   38c0c:	b	38b34 <__flatcc_fb_coerce_scalar_type@@Base+0x268>
   38c10:	ldrh	ip, [r4, #8]
   38c14:	cmp	ip, #4
   38c18:	beq	38dac <__flatcc_fb_coerce_scalar_type@@Base+0x4e0>
   38c1c:	cmp	ip, #5
   38c20:	beq	38e60 <__flatcc_fb_coerce_scalar_type@@Base+0x594>
   38c24:	cmp	ip, #3
   38c28:	beq	389ec <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   38c2c:	ldr	r2, [pc, #852]	; 38f88 <__flatcc_fb_coerce_scalar_type@@Base+0x6bc>
   38c30:	mov	r1, #0
   38c34:	mov	r0, r5
   38c38:	add	r2, pc, r2
   38c3c:	b	38b34 <__flatcc_fb_coerce_scalar_type@@Base+0x268>
   38c40:	ldrh	ip, [r4, #8]
   38c44:	cmp	ip, #4
   38c48:	beq	38ce8 <__flatcc_fb_coerce_scalar_type@@Base+0x41c>
   38c4c:	cmp	ip, #5
   38c50:	bne	38e24 <__flatcc_fb_coerce_scalar_type@@Base+0x558>
   38c54:	ldrd	r2, [r4]
   38c58:	cmp	r2, #128	; 0x80
   38c5c:	sbcs	r3, r3, #0
   38c60:	blt	38af0 <__flatcc_fb_coerce_scalar_type@@Base+0x224>
   38c64:	ldr	r2, [pc, #800]	; 38f8c <__flatcc_fb_coerce_scalar_type@@Base+0x6c0>
   38c68:	mov	r1, #0
   38c6c:	mov	r0, r5
   38c70:	add	r2, pc, r2
   38c74:	b	38b34 <__flatcc_fb_coerce_scalar_type@@Base+0x268>
   38c78:	ldrh	ip, [r4, #8]
   38c7c:	cmp	ip, #4
   38c80:	beq	38d14 <__flatcc_fb_coerce_scalar_type@@Base+0x448>
   38c84:	cmp	ip, #5
   38c88:	bne	38e38 <__flatcc_fb_coerce_scalar_type@@Base+0x56c>
   38c8c:	ldrd	r2, [r4]
   38c90:	cmp	r2, #32768	; 0x8000
   38c94:	sbcs	r3, r3, #0
   38c98:	blt	38af0 <__flatcc_fb_coerce_scalar_type@@Base+0x224>
   38c9c:	ldr	r2, [pc, #748]	; 38f90 <__flatcc_fb_coerce_scalar_type@@Base+0x6c4>
   38ca0:	mov	r1, #0
   38ca4:	mov	r0, r5
   38ca8:	add	r2, pc, r2
   38cac:	b	38b34 <__flatcc_fb_coerce_scalar_type@@Base+0x268>
   38cb0:	ldrh	ip, [r4, #8]
   38cb4:	cmp	ip, #4
   38cb8:	beq	38d44 <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   38cbc:	cmp	ip, #5
   38cc0:	bne	38e4c <__flatcc_fb_coerce_scalar_type@@Base+0x580>
   38cc4:	ldrd	r2, [r4]
   38cc8:	cmp	r2, #-2147483648	; 0x80000000
   38ccc:	sbcs	r3, r3, #0
   38cd0:	blt	38af0 <__flatcc_fb_coerce_scalar_type@@Base+0x224>
   38cd4:	ldr	r2, [pc, #696]	; 38f94 <__flatcc_fb_coerce_scalar_type@@Base+0x6c8>
   38cd8:	mov	r1, #0
   38cdc:	mov	r0, r5
   38ce0:	add	r2, pc, r2
   38ce4:	b	38b34 <__flatcc_fb_coerce_scalar_type@@Base+0x268>
   38ce8:	ldrd	r2, [r4]
   38cec:	mvn	r0, #127	; 0x7f
   38cf0:	mvn	r1, #0
   38cf4:	cmp	r2, r0
   38cf8:	sbcs	r3, r3, r1
   38cfc:	bge	389ec <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   38d00:	ldr	r2, [pc, #656]	; 38f98 <__flatcc_fb_coerce_scalar_type@@Base+0x6cc>
   38d04:	mov	r1, #0
   38d08:	mov	r0, r5
   38d0c:	add	r2, pc, r2
   38d10:	b	38b34 <__flatcc_fb_coerce_scalar_type@@Base+0x268>
   38d14:	ldrd	r2, [r4]
   38d18:	mov	r0, #32768	; 0x8000
   38d1c:	movt	r0, #65535	; 0xffff
   38d20:	mvn	r1, #0
   38d24:	cmp	r2, r0
   38d28:	sbcs	r3, r3, r1
   38d2c:	bge	389ec <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   38d30:	ldr	r2, [pc, #612]	; 38f9c <__flatcc_fb_coerce_scalar_type@@Base+0x6d0>
   38d34:	mov	r1, #0
   38d38:	mov	r0, r5
   38d3c:	add	r2, pc, r2
   38d40:	b	38b34 <__flatcc_fb_coerce_scalar_type@@Base+0x268>
   38d44:	ldrd	r2, [r4]
   38d48:	mov	r0, #-2147483648	; 0x80000000
   38d4c:	mvn	r1, #0
   38d50:	cmp	r2, r0
   38d54:	sbcs	r3, r3, r1
   38d58:	bge	389ec <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   38d5c:	ldr	r2, [pc, #572]	; 38fa0 <__flatcc_fb_coerce_scalar_type@@Base+0x6d4>
   38d60:	mov	r1, #0
   38d64:	mov	r0, r5
   38d68:	add	r2, pc, r2
   38d6c:	b	38b34 <__flatcc_fb_coerce_scalar_type@@Base+0x268>
   38d70:	ldrd	r8, [r4]
   38d74:	mov	r1, r9
   38d78:	mov	r0, r8
   38d7c:	bl	3fe30 <fb_value_set_visit@@Base+0x608>
   38d80:	vmov	s16, r0
   38d84:	bl	3fef8 <fb_value_set_visit@@Base+0x6d0>
   38d88:	cmp	r9, r1
   38d8c:	cmpeq	r8, r0
   38d90:	bne	38ec0 <__flatcc_fb_coerce_scalar_type@@Base+0x5f4>
   38d94:	vcvt.f64.f32	d8, s16
   38d98:	mov	r3, #3
   38d9c:	mov	r0, #0
   38da0:	vstr	d8, [r4]
   38da4:	strh	r3, [r4, #8]
   38da8:	b	389f0 <__flatcc_fb_coerce_scalar_type@@Base+0x124>
   38dac:	ldrd	r8, [r4]
   38db0:	mov	r0, r8
   38db4:	mov	r1, r9
   38db8:	bl	3fbfc <fb_value_set_visit@@Base+0x3d4>
   38dbc:	mov	sl, r0
   38dc0:	mov	fp, r1
   38dc4:	bl	3ff24 <fb_value_set_visit@@Base+0x6fc>
   38dc8:	cmp	r9, r1
   38dcc:	cmpeq	r8, r0
   38dd0:	bne	38e88 <__flatcc_fb_coerce_scalar_type@@Base+0x5bc>
   38dd4:	mov	r3, #3
   38dd8:	mov	r0, #0
   38ddc:	strd	sl, [r4]
   38de0:	strh	r3, [r4, #8]
   38de4:	b	389f0 <__flatcc_fb_coerce_scalar_type@@Base+0x124>
   38de8:	ldr	r2, [pc, #436]	; 38fa4 <__flatcc_fb_coerce_scalar_type@@Base+0x6d8>
   38dec:	mov	r1, #0
   38df0:	mov	r0, r5
   38df4:	add	r2, pc, r2
   38df8:	b	38b34 <__flatcc_fb_coerce_scalar_type@@Base+0x268>
   38dfc:	ldr	r2, [pc, #420]	; 38fa8 <__flatcc_fb_coerce_scalar_type@@Base+0x6dc>
   38e00:	mov	r1, #0
   38e04:	mov	r0, r5
   38e08:	add	r2, pc, r2
   38e0c:	b	38b34 <__flatcc_fb_coerce_scalar_type@@Base+0x268>
   38e10:	ldr	r2, [pc, #404]	; 38fac <__flatcc_fb_coerce_scalar_type@@Base+0x6e0>
   38e14:	mov	r1, #0
   38e18:	mov	r0, r5
   38e1c:	add	r2, pc, r2
   38e20:	b	38b34 <__flatcc_fb_coerce_scalar_type@@Base+0x268>
   38e24:	ldr	r2, [pc, #388]	; 38fb0 <__flatcc_fb_coerce_scalar_type@@Base+0x6e4>
   38e28:	mov	r1, #0
   38e2c:	mov	r0, r5
   38e30:	add	r2, pc, r2
   38e34:	b	38b34 <__flatcc_fb_coerce_scalar_type@@Base+0x268>
   38e38:	ldr	r2, [pc, #372]	; 38fb4 <__flatcc_fb_coerce_scalar_type@@Base+0x6e8>
   38e3c:	mov	r1, #0
   38e40:	mov	r0, r5
   38e44:	add	r2, pc, r2
   38e48:	b	38b34 <__flatcc_fb_coerce_scalar_type@@Base+0x268>
   38e4c:	ldr	r2, [pc, #356]	; 38fb8 <__flatcc_fb_coerce_scalar_type@@Base+0x6ec>
   38e50:	mov	r1, #0
   38e54:	mov	r0, r5
   38e58:	add	r2, pc, r2
   38e5c:	b	38b34 <__flatcc_fb_coerce_scalar_type@@Base+0x268>
   38e60:	ldrd	r8, [r4]
   38e64:	mov	r0, r8
   38e68:	mov	r1, r9
   38e6c:	bl	3fbe8 <fb_value_set_visit@@Base+0x3c0>
   38e70:	mov	sl, r0
   38e74:	mov	fp, r1
   38e78:	bl	3ff90 <fb_value_set_visit@@Base+0x768>
   38e7c:	cmp	r9, r1
   38e80:	cmpeq	r8, r0
   38e84:	beq	38dd4 <__flatcc_fb_coerce_scalar_type@@Base+0x508>
   38e88:	ldr	r2, [pc, #300]	; 38fbc <__flatcc_fb_coerce_scalar_type@@Base+0x6f0>
   38e8c:	mov	r1, #0
   38e90:	mov	r0, r5
   38e94:	add	r2, pc, r2
   38e98:	b	38b34 <__flatcc_fb_coerce_scalar_type@@Base+0x268>
   38e9c:	ldrd	r8, [r4]
   38ea0:	mov	r1, r9
   38ea4:	mov	r0, r8
   38ea8:	bl	3fe20 <fb_value_set_visit@@Base+0x5f8>
   38eac:	vmov	s16, r0
   38eb0:	bl	3ff50 <fb_value_set_visit@@Base+0x728>
   38eb4:	cmp	r9, r1
   38eb8:	cmpeq	r8, r0
   38ebc:	beq	38d94 <__flatcc_fb_coerce_scalar_type@@Base+0x4c8>
   38ec0:	ldr	r2, [pc, #248]	; 38fc0 <__flatcc_fb_coerce_scalar_type@@Base+0x6f4>
   38ec4:	mov	r1, #0
   38ec8:	mov	r0, r5
   38ecc:	add	r2, pc, r2
   38ed0:	b	38b34 <__flatcc_fb_coerce_scalar_type@@Base+0x268>
   38ed4:	ldr	r2, [pc, #232]	; 38fc4 <__flatcc_fb_coerce_scalar_type@@Base+0x6f8>
   38ed8:	mov	r1, #0
   38edc:	mov	r0, r5
   38ee0:	add	r2, pc, r2
   38ee4:	b	38b34 <__flatcc_fb_coerce_scalar_type@@Base+0x268>
   38ee8:	ldr	r2, [pc, #216]	; 38fc8 <__flatcc_fb_coerce_scalar_type@@Base+0x6fc>
   38eec:	mov	r1, #0
   38ef0:	mov	r0, r5
   38ef4:	add	r2, pc, r2
   38ef8:	b	38b34 <__flatcc_fb_coerce_scalar_type@@Base+0x268>
   38efc:	ldr	r3, [r5, #144]	; 0x90
   38f00:	cmp	r3, #0
   38f04:	bne	38f1c <__flatcc_fb_coerce_scalar_type@@Base+0x650>
   38f08:	ldr	r2, [pc, #188]	; 38fcc <__flatcc_fb_coerce_scalar_type@@Base+0x700>
   38f0c:	mov	r1, #0
   38f10:	mov	r0, r5
   38f14:	add	r2, pc, r2
   38f18:	b	38b34 <__flatcc_fb_coerce_scalar_type@@Base+0x268>
   38f1c:	ldrd	r2, [r4]
   38f20:	cmp	r3, #0
   38f24:	cmpeq	r2, #1
   38f28:	bls	389ec <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   38f2c:	ldr	r2, [pc, #156]	; 38fd0 <__flatcc_fb_coerce_scalar_type@@Base+0x704>
   38f30:	mov	r1, #0
   38f34:	mov	r0, r5
   38f38:	add	r2, pc, r2
   38f3c:	b	38b34 <__flatcc_fb_coerce_scalar_type@@Base+0x268>
   38f40:	ldr	r2, [pc, #140]	; 38fd4 <__flatcc_fb_coerce_scalar_type@@Base+0x708>
   38f44:	mov	r1, #0
   38f48:	mov	r0, r5
   38f4c:	add	r2, pc, r2
   38f50:	b	38b34 <__flatcc_fb_coerce_scalar_type@@Base+0x268>
   38f54:	ldr	r3, [pc, #124]	; 38fd8 <__flatcc_fb_coerce_scalar_type@@Base+0x70c>
   38f58:	mov	r2, #52	; 0x34
   38f5c:	ldr	r1, [pc, #120]	; 38fdc <__flatcc_fb_coerce_scalar_type@@Base+0x710>
   38f60:	ldr	r0, [pc, #120]	; 38fe0 <__flatcc_fb_coerce_scalar_type@@Base+0x714>
   38f64:	add	r3, pc, r3
   38f68:	add	r1, pc, r1
   38f6c:	add	r0, pc, r0
   38f70:	bl	14118 <__assert_fail@plt>
   38f74:	andeq	r2, r2, r0, ror #8
   38f78:			; <UNDEFINED> instruction: 0x000223b4
   38f7c:	andeq	r2, r2, r4, lsr #9
   38f80:	andeq	r2, r2, r4, lsl r4
   38f84:	strdeq	r2, [r2], -ip
   38f88:	andeq	r2, r2, r0, ror #12
   38f8c:	andeq	r2, r2, r4, lsr r5
   38f90:	muleq	r2, r0, r4
   38f94:	andeq	r2, r2, ip, ror #7
   38f98:	andeq	r2, r2, ip, ror r4
   38f9c:	ldrdeq	r2, [r2], -ip
   38fa0:	andeq	r2, r2, r8, asr #6
   38fa4:			; <UNDEFINED> instruction: 0x000221bc
   38fa8:	andeq	r2, r2, r4, lsl #4
   38fac:	andeq	r2, r2, ip, lsr r1
   38fb0:	muleq	r2, r0, r3
   38fb4:	andeq	r2, r2, r4, lsl r3
   38fb8:	muleq	r2, r0, r2
   38fbc:	ldrdeq	r2, [r2], -r4
   38fc0:	andeq	r2, r2, r8, lsl #8
   38fc4:	andeq	r2, r2, ip, asr r4
   38fc8:	muleq	r2, r0, r1
   38fcc:	andeq	r2, r2, ip, lsl r3
   38fd0:			; <UNDEFINED> instruction: 0x000222b8
   38fd4:	andeq	r2, r2, r8, lsl r1
   38fd8:	andeq	r1, r2, r0, lsr #30
   38fdc:	andeq	r1, r2, ip, lsr pc
   38fe0:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   38fe4:	strd	r4, [sp, #-16]!
   38fe8:	mov	r4, r0
   38fec:	mov	r0, #1
   38ff0:	ldr	ip, [r4, #28]
   38ff4:	mov	r3, r0
   38ff8:	mov	r5, r2
   38ffc:	str	r6, [sp, #8]
   39000:	str	lr, [sp, #12]
   39004:	sub	sp, sp, #8
   39008:	str	r0, [sp]
   3900c:	add	r2, r1, ip
   39010:	add	r1, r4, #60	; 0x3c
   39014:	ldr	r0, [r4, #40]	; 0x28
   39018:	ldr	r6, [r4, #48]	; 0x30
   3901c:	blx	r6
   39020:	cmp	r0, #0
   39024:	bne	39064 <__flatcc_fb_coerce_scalar_type@@Base+0x798>
   39028:	ldr	r1, [r4, #28]
   3902c:	ldr	ip, [r4, #32]
   39030:	ldrd	r2, [r4, #60]	; 0x3c
   39034:	sub	r3, r3, r1
   39038:	add	r2, r2, r1
   3903c:	cmp	r3, r5
   39040:	movcs	r3, r5
   39044:	str	r2, [r4, #16]
   39048:	str	r3, [r4, #24]
   3904c:	str	r5, [ip, #4]
   39050:	add	sp, sp, #8
   39054:	ldrd	r4, [sp]
   39058:	ldr	r6, [sp, #8]
   3905c:	add	sp, sp, #12
   39060:	pop	{pc}		; (ldr pc, [sp], #4)
   39064:	mvn	r0, #0
   39068:	b	39050 <__flatcc_fb_coerce_scalar_type@@Base+0x784>

0003906c <flatcc_builder_default_alloc@@Base>:
   3906c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   39070:	subs	r5, r2, #0
   39074:	strd	r6, [sp, #8]
   39078:	mov	r6, r1
   3907c:	str	r8, [sp, #16]
   39080:	str	lr, [sp, #20]
   39084:	beq	390bc <flatcc_builder_default_alloc@@Base+0x50>
   39088:	mov	r7, r3
   3908c:	ldr	r3, [sp, #24]
   39090:	sub	r2, r3, #1
   39094:	cmp	r2, #6
   39098:	addls	pc, pc, r2, lsl #2
   3909c:	b	3916c <flatcc_builder_default_alloc@@Base+0x100>
   390a0:	b	390ec <flatcc_builder_default_alloc@@Base+0x80>
   390a4:	b	3916c <flatcc_builder_default_alloc@@Base+0x100>
   390a8:	b	3916c <flatcc_builder_default_alloc@@Base+0x100>
   390ac:	b	39164 <flatcc_builder_default_alloc@@Base+0xf8>
   390b0:	b	39154 <flatcc_builder_default_alloc@@Base+0xe8>
   390b4:	b	3916c <flatcc_builder_default_alloc@@Base+0x100>
   390b8:	b	3915c <flatcc_builder_default_alloc@@Base+0xf0>
   390bc:	ldr	r0, [r1]
   390c0:	cmp	r0, #0
   390c4:	beq	390d8 <flatcc_builder_default_alloc@@Base+0x6c>
   390c8:	bl	13fa4 <free@plt>
   390cc:	mov	r0, r5
   390d0:	str	r5, [r6]
   390d4:	str	r5, [r6, #4]
   390d8:	ldrd	r4, [sp]
   390dc:	ldrd	r6, [sp, #8]
   390e0:	ldr	r8, [sp, #16]
   390e4:	add	sp, sp, #20
   390e8:	pop	{pc}		; (ldr pc, [sp], #4)
   390ec:	mov	r4, #256	; 0x100
   390f0:	cmp	r4, r5
   390f4:	bcs	39104 <flatcc_builder_default_alloc@@Base+0x98>
   390f8:	lsl	r4, r4, #1
   390fc:	cmp	r5, r4
   39100:	bhi	390f8 <flatcc_builder_default_alloc@@Base+0x8c>
   39104:	ldr	r2, [r6, #4]
   39108:	cmp	r5, r2
   3910c:	bhi	3911c <flatcc_builder_default_alloc@@Base+0xb0>
   39110:	cmp	r4, r2, lsr #1
   39114:	movls	r0, #0
   39118:	bls	390d8 <flatcc_builder_default_alloc@@Base+0x6c>
   3911c:	mov	r1, r4
   39120:	ldr	r0, [r6]
   39124:	bl	13fe0 <realloc@plt>
   39128:	subs	r5, r0, #0
   3912c:	beq	39188 <flatcc_builder_default_alloc@@Base+0x11c>
   39130:	cmp	r7, #0
   39134:	beq	39144 <flatcc_builder_default_alloc@@Base+0xd8>
   39138:	ldr	r0, [r6, #4]
   3913c:	cmp	r0, r4
   39140:	bcc	39174 <flatcc_builder_default_alloc@@Base+0x108>
   39144:	mov	r0, #0
   39148:	str	r5, [r6]
   3914c:	str	r4, [r6, #4]
   39150:	b	390d8 <flatcc_builder_default_alloc@@Base+0x6c>
   39154:	mov	r4, r5
   39158:	b	39104 <flatcc_builder_default_alloc@@Base+0x98>
   3915c:	mov	r4, #64	; 0x40
   39160:	b	390f0 <flatcc_builder_default_alloc@@Base+0x84>
   39164:	mov	r4, #288	; 0x120
   39168:	b	390f0 <flatcc_builder_default_alloc@@Base+0x84>
   3916c:	mov	r4, #32
   39170:	b	390f0 <flatcc_builder_default_alloc@@Base+0x84>
   39174:	sub	r2, r4, r0
   39178:	mov	r1, #0
   3917c:	add	r0, r5, r0
   39180:	bl	1407c <memset@plt>
   39184:	b	39144 <flatcc_builder_default_alloc@@Base+0xd8>
   39188:	mvn	r0, #0
   3918c:	b	390d8 <flatcc_builder_default_alloc@@Base+0x6c>
   39190:	ldr	r3, [pc, #32]	; 391b8 <flatcc_builder_default_alloc@@Base+0x14c>
   39194:	mov	r2, #308	; 0x134
   39198:	str	r4, [sp, #-8]!
   3919c:	ldr	r1, [pc, #24]	; 391bc <flatcc_builder_default_alloc@@Base+0x150>
   391a0:	str	lr, [sp, #4]
   391a4:	ldr	r0, [pc, #20]	; 391c0 <flatcc_builder_default_alloc@@Base+0x154>
   391a8:	add	r3, pc, r3
   391ac:	add	r1, pc, r1
   391b0:	add	r0, pc, r0
   391b4:	bl	14118 <__assert_fail@plt>
   391b8:	andeq	r2, r2, ip, lsr #3
   391bc:	strdeq	r2, [r2], -r8
   391c0:	andeq	r1, r1, r4, lsl #3
   391c4:	ldr	r3, [pc, #36]	; 391f0 <flatcc_builder_default_alloc@@Base+0x184>
   391c8:	movw	r2, #677	; 0x2a5
   391cc:	str	r4, [sp, #-8]!
   391d0:	ldr	r1, [pc, #28]	; 391f4 <flatcc_builder_default_alloc@@Base+0x188>
   391d4:	str	lr, [sp, #4]
   391d8:	ldr	r0, [pc, #24]	; 391f8 <flatcc_builder_default_alloc@@Base+0x18c>
   391dc:	add	r3, pc, r3
   391e0:	add	r3, r3, #16
   391e4:	add	r1, pc, r1
   391e8:	add	r0, pc, r0
   391ec:	bl	14118 <__assert_fail@plt>
   391f0:	andeq	r2, r2, r8, ror r1
   391f4:	andeq	r2, r2, r0, asr #17
   391f8:	andeq	r1, r1, ip, asr #2
   391fc:	strd	r4, [sp, #-12]!
   39200:	cmp	r2, #0
   39204:	mov	ip, r0
   39208:	str	lr, [sp, #8]
   3920c:	sub	sp, sp, #84	; 0x54
   39210:	ldr	lr, [pc, #248]	; 39310 <flatcc_builder_default_alloc@@Base+0x2a4>
   39214:	add	lr, pc, lr
   39218:	bne	39228 <flatcc_builder_default_alloc@@Base+0x1bc>
   3921c:	ldrh	r2, [r0, #132]	; 0x84
   39220:	cmp	r2, #0
   39224:	moveq	r2, #1
   39228:	ldrh	r0, [r1]
   3922c:	cmp	r0, #3
   39230:	bhi	39240 <flatcc_builder_default_alloc@@Base+0x1d4>
   39234:	mov	r4, #4
   39238:	mov	r0, r4
   3923c:	strh	r4, [r1]
   39240:	cmp	r2, r0
   39244:	strhhi	r2, [r1]
   39248:	cmp	r3, #0
   3924c:	bne	39260 <flatcc_builder_default_alloc@@Base+0x1f4>
   39250:	ldr	r4, [ip, #140]	; 0x8c
   39254:	sub	r2, r2, #1
   39258:	ands	r1, r2, r4
   3925c:	bne	39274 <flatcc_builder_default_alloc@@Base+0x208>
   39260:	mov	r0, #0
   39264:	add	sp, sp, #84	; 0x54
   39268:	ldrd	r4, [sp]
   3926c:	add	sp, sp, #8
   39270:	pop	{pc}		; (ldr pc, [sp], #4)
   39274:	ldr	r3, [pc, #152]	; 39314 <flatcc_builder_default_alloc@@Base+0x2a8>
   39278:	add	r0, r4, r1
   3927c:	mov	r2, #1
   39280:	str	r1, [sp, #8]
   39284:	cmp	r4, r0
   39288:	ldr	r3, [lr, r3]
   3928c:	str	r0, [ip, #140]	; 0x8c
   39290:	strd	r2, [sp, #12]
   39294:	str	r1, [sp, #20]
   39298:	bgt	392ec <flatcc_builder_default_alloc@@Base+0x280>
   3929c:	mov	r3, r4
   392a0:	str	r1, [sp]
   392a4:	add	r1, sp, #16
   392a8:	ldr	r0, [ip, #36]	; 0x24
   392ac:	ldr	r5, [ip, #44]	; 0x2c
   392b0:	blx	r5
   392b4:	cmp	r0, #0
   392b8:	bne	392e8 <flatcc_builder_default_alloc@@Base+0x27c>
   392bc:	cmn	r4, #1
   392c0:	bne	39260 <flatcc_builder_default_alloc@@Base+0x1f4>
   392c4:	ldr	r3, [pc, #76]	; 39318 <flatcc_builder_default_alloc@@Base+0x2ac>
   392c8:	movw	r2, #702	; 0x2be
   392cc:	ldr	r1, [pc, #72]	; 3931c <flatcc_builder_default_alloc@@Base+0x2b0>
   392d0:	ldr	r0, [pc, #72]	; 39320 <flatcc_builder_default_alloc@@Base+0x2b4>
   392d4:	add	r3, pc, r3
   392d8:	add	r3, r3, #28
   392dc:	add	r1, pc, r1
   392e0:	add	r0, pc, r0
   392e4:	bl	14118 <__assert_fail@plt>
   392e8:	bl	391c4 <flatcc_builder_default_alloc@@Base+0x158>
   392ec:	ldr	r3, [pc, #48]	; 39324 <flatcc_builder_default_alloc@@Base+0x2b8>
   392f0:	movw	r2, #673	; 0x2a1
   392f4:	ldr	r1, [pc, #44]	; 39328 <flatcc_builder_default_alloc@@Base+0x2bc>
   392f8:	ldr	r0, [pc, #44]	; 3932c <flatcc_builder_default_alloc@@Base+0x2c0>
   392fc:	add	r3, pc, r3
   39300:	add	r3, r3, #16
   39304:	add	r1, pc, r1
   39308:	add	r0, pc, r0
   3930c:	bl	14118 <__assert_fail@plt>
   39310:	andeq	r3, r3, r4, ror #27
   39314:	muleq	r0, ip, r0
   39318:	andeq	r2, r2, r0, lsl #1
   3931c:	andeq	r2, r2, r8, asr #15
   39320:	andeq	r1, r1, r4, asr r0
   39324:	andeq	r2, r2, r8, asr r0
   39328:	andeq	r2, r2, r0, lsr #15
   3932c:	andeq	r1, r1, ip, lsr #32
   39330:	ldr	r3, [pc, #36]	; 3935c <flatcc_builder_default_alloc@@Base+0x2f0>
   39334:	movw	r2, #651	; 0x28b
   39338:	str	r4, [sp, #-8]!
   3933c:	ldr	r1, [pc, #28]	; 39360 <flatcc_builder_default_alloc@@Base+0x2f4>
   39340:	str	lr, [sp, #4]
   39344:	ldr	r0, [pc, #24]	; 39364 <flatcc_builder_default_alloc@@Base+0x2f8>
   39348:	add	r3, pc, r3
   3934c:	add	r3, r3, #44	; 0x2c
   39350:	add	r1, pc, r1
   39354:	add	r0, pc, r0
   39358:	bl	14118 <__assert_fail@plt>
   3935c:	andeq	r2, r2, ip
   39360:	andeq	r2, r2, r4, asr r7
   39364:	andeq	r0, r1, r0, ror #31
   39368:	ldr	r3, [pc, #36]	; 39394 <flatcc_builder_default_alloc@@Base+0x328>
   3936c:	mov	r2, #892	; 0x37c
   39370:	str	r4, [sp, #-8]!
   39374:	ldr	r1, [pc, #28]	; 39398 <flatcc_builder_default_alloc@@Base+0x32c>
   39378:	str	lr, [sp, #4]
   3937c:	ldr	r0, [pc, #24]	; 3939c <flatcc_builder_default_alloc@@Base+0x330>
   39380:	add	r3, pc, r3
   39384:	add	r3, r3, #56	; 0x38
   39388:	add	r1, pc, r1
   3938c:	add	r0, pc, r0
   39390:	bl	14118 <__assert_fail@plt>
   39394:	ldrdeq	r1, [r2], -r4
   39398:	andeq	r2, r2, ip, lsl r7
   3939c:	andeq	r2, r2, r8, ror r7
   393a0:	ldrd	r2, [r0, #156]	; 0x9c
   393a4:	strd	r4, [sp, #-20]!	; 0xffffffec
   393a8:	mov	r5, r1
   393ac:	mov	r4, r0
   393b0:	strd	r6, [sp, #8]
   393b4:	str	lr, [sp, #16]
   393b8:	sub	sp, sp, #12
   393bc:	add	r1, r2, #1
   393c0:	cmp	r1, r3
   393c4:	str	r1, [r0, #156]	; 0x9c
   393c8:	ble	394a8 <flatcc_builder_default_alloc@@Base+0x43c>
   393cc:	ldr	r3, [r0, #176]	; 0xb0
   393d0:	cmp	r1, r3
   393d4:	cmpgt	r3, #0
   393d8:	movgt	r3, #1
   393dc:	movle	r3, #0
   393e0:	bgt	394b8 <flatcc_builder_default_alloc@@Base+0x44c>
   393e4:	add	r2, r2, r2, lsl #3
   393e8:	ldr	r1, [r0, #88]	; 0x58
   393ec:	lsl	r6, r2, #2
   393f0:	add	r2, r6, #36	; 0x24
   393f4:	cmp	r2, r1
   393f8:	bls	3941c <flatcc_builder_default_alloc@@Base+0x3b0>
   393fc:	mov	ip, #4
   39400:	add	r1, r0, #84	; 0x54
   39404:	ldr	r0, [r0, #40]	; 0x28
   39408:	str	ip, [sp]
   3940c:	ldr	r7, [r4, #48]	; 0x30
   39410:	blx	r7
   39414:	cmp	r0, #0
   39418:	bne	394c0 <flatcc_builder_default_alloc@@Base+0x454>
   3941c:	ldr	r2, [r4, #84]	; 0x54
   39420:	add	r2, r2, r6
   39424:	cmp	r2, #0
   39428:	str	r2, [r4, #32]
   3942c:	beq	394b8 <flatcc_builder_default_alloc@@Base+0x44c>
   39430:	ldr	r3, [r4, #88]	; 0x58
   39434:	movw	r0, #36409	; 0x8e39
   39438:	movt	r0, #14563	; 0x38e3
   3943c:	ldr	r1, [r4, #176]	; 0xb0
   39440:	umull	r0, r3, r0, r3
   39444:	lsr	r3, r3, #3
   39448:	cmp	r3, r1
   3944c:	cmpgt	r1, #0
   39450:	movgt	r3, r1
   39454:	str	r3, [r4, #160]	; 0xa0
   39458:	ldr	r3, [r4, #20]
   3945c:	mov	r1, #0
   39460:	mvn	lr, #3
   39464:	mov	r0, r1
   39468:	ldr	ip, [r4, #28]
   3946c:	ldrh	r6, [r4, #130]	; 0x82
   39470:	str	r3, [r2, #8]
   39474:	add	r3, r3, ip
   39478:	add	r3, r3, #7
   3947c:	bic	r3, r3, #7
   39480:	strh	r6, [r2, #12]
   39484:	strh	r5, [r4, #130]	; 0x82
   39488:	stm	r2, {ip, lr}
   3948c:	str	r1, [r4, #20]
   39490:	str	r3, [r4, #28]
   39494:	add	sp, sp, #12
   39498:	ldrd	r4, [sp]
   3949c:	ldrd	r6, [sp, #8]
   394a0:	add	sp, sp, #16
   394a4:	pop	{pc}		; (ldr pc, [sp], #4)
   394a8:	ldr	r2, [r0, #32]
   394ac:	add	r2, r2, #36	; 0x24
   394b0:	str	r2, [r0, #32]
   394b4:	b	39458 <flatcc_builder_default_alloc@@Base+0x3ec>
   394b8:	mvn	r0, #0
   394bc:	b	39494 <flatcc_builder_default_alloc@@Base+0x428>
   394c0:	bl	39190 <flatcc_builder_default_alloc@@Base+0x124>
   394c4:	strd	r4, [sp, #-20]!	; 0xffffffec
   394c8:	mov	r4, r0
   394cc:	mov	r5, #4
   394d0:	ldrh	r0, [r0, #128]	; 0x80
   394d4:	strd	r6, [sp, #8]
   394d8:	str	lr, [sp, #16]
   394dc:	sub	sp, sp, #92	; 0x5c
   394e0:	ldr	lr, [pc, #464]	; 396b8 <flatcc_builder_default_alloc@@Base+0x64c>
   394e4:	str	r2, [sp, #12]
   394e8:	cmp	r0, #3
   394ec:	ldr	r6, [r4, #136]	; 0x88
   394f0:	movls	r0, #4
   394f4:	str	r5, [sp, #16]
   394f8:	str	r5, [sp, #28]
   394fc:	strhls	r0, [r4, #128]	; 0x80
   39500:	mov	r0, #1
   39504:	lsls	ip, r2, #2
   39508:	add	lr, pc, lr
   3950c:	str	r0, [sp, #20]
   39510:	add	r0, sp, #12
   39514:	str	r0, [sp, #24]
   39518:	and	r0, r6, #3
   3951c:	beq	39538 <flatcc_builder_default_alloc@@Base+0x4cc>
   39520:	add	r5, ip, r5
   39524:	mov	r7, #2
   39528:	str	r5, [sp, #16]
   3952c:	str	r7, [sp, #20]
   39530:	str	r1, [sp, #32]
   39534:	str	ip, [sp, #36]	; 0x24
   39538:	cmp	r0, #0
   3953c:	beq	3956c <flatcc_builder_default_alloc@@Base+0x500>
   39540:	ldr	r7, [pc, #372]	; 396bc <flatcc_builder_default_alloc@@Base+0x650>
   39544:	add	r5, r5, r0
   39548:	ldr	ip, [sp, #20]
   3954c:	str	r5, [sp, #16]
   39550:	ldr	r7, [lr, r7]
   39554:	add	lr, sp, #88	; 0x58
   39558:	add	ip, ip, #1
   3955c:	add	lr, lr, ip, lsl #3
   39560:	str	ip, [sp, #20]
   39564:	str	r7, [lr, #-72]	; 0xffffffb8
   39568:	str	r0, [lr, #-68]	; 0xffffffbc
   3956c:	cmp	r2, #0
   39570:	beq	395fc <flatcc_builder_default_alloc@@Base+0x590>
   39574:	sub	r6, r1, r6
   39578:	add	lr, r2, r3
   3957c:	add	r6, r6, r5
   39580:	mov	r2, r3
   39584:	b	395b4 <flatcc_builder_default_alloc@@Base+0x548>
   39588:	sub	r0, r6, r1
   3958c:	cmp	r3, #0
   39590:	add	r0, r0, ip
   39594:	str	r0, [r1, #-4]
   39598:	beq	395a8 <flatcc_builder_default_alloc@@Base+0x53c>
   3959c:	ldrb	r0, [r2]
   395a0:	cmp	r0, #0
   395a4:	beq	3966c <flatcc_builder_default_alloc@@Base+0x600>
   395a8:	add	r2, r2, #1
   395ac:	cmp	lr, r2
   395b0:	beq	395f8 <flatcc_builder_default_alloc@@Base+0x58c>
   395b4:	ldr	ip, [r1], #4
   395b8:	cmp	ip, #0
   395bc:	bne	39588 <flatcc_builder_default_alloc@@Base+0x51c>
   395c0:	cmp	r3, #0
   395c4:	beq	39648 <flatcc_builder_default_alloc@@Base+0x5dc>
   395c8:	ldrb	r0, [r2]
   395cc:	cmp	r0, #0
   395d0:	beq	395a8 <flatcc_builder_default_alloc@@Base+0x53c>
   395d4:	ldr	r3, [pc, #228]	; 396c0 <flatcc_builder_default_alloc@@Base+0x654>
   395d8:	movw	r2, #1461	; 0x5b5
   395dc:	ldr	r1, [pc, #224]	; 396c4 <flatcc_builder_default_alloc@@Base+0x658>
   395e0:	ldr	r0, [pc, #224]	; 396c8 <flatcc_builder_default_alloc@@Base+0x65c>
   395e4:	add	r3, pc, r3
   395e8:	add	r3, r3, #76	; 0x4c
   395ec:	add	r1, pc, r1
   395f0:	add	r0, pc, r0
   395f4:	bl	14118 <__assert_fail@plt>
   395f8:	ldr	r6, [r4, #136]	; 0x88
   395fc:	sub	r7, r6, r5
   39600:	cmp	r7, r6
   39604:	bge	39694 <flatcc_builder_default_alloc@@Base+0x628>
   39608:	mov	r3, r7
   3960c:	add	r1, sp, #24
   39610:	str	r5, [sp]
   39614:	ldr	r2, [sp, #20]
   39618:	ldr	r0, [r4, #36]	; 0x24
   3961c:	ldr	r5, [r4, #44]	; 0x2c
   39620:	blx	r5
   39624:	cmp	r0, #0
   39628:	bne	39690 <flatcc_builder_default_alloc@@Base+0x624>
   3962c:	mov	r0, r7
   39630:	str	r7, [r4, #136]	; 0x88
   39634:	add	sp, sp, #92	; 0x5c
   39638:	ldrd	r4, [sp]
   3963c:	ldrd	r6, [sp, #8]
   39640:	add	sp, sp, #16
   39644:	pop	{pc}		; (ldr pc, [sp], #4)
   39648:	ldr	r3, [pc, #124]	; 396cc <flatcc_builder_default_alloc@@Base+0x660>
   3964c:	movw	r2, #1463	; 0x5b7
   39650:	ldr	r1, [pc, #120]	; 396d0 <flatcc_builder_default_alloc@@Base+0x664>
   39654:	ldr	r0, [pc, #120]	; 396d4 <flatcc_builder_default_alloc@@Base+0x668>
   39658:	add	r3, pc, r3
   3965c:	add	r3, r3, #76	; 0x4c
   39660:	add	r1, pc, r1
   39664:	add	r0, pc, r0
   39668:	bl	14118 <__assert_fail@plt>
   3966c:	ldr	r3, [pc, #100]	; 396d8 <flatcc_builder_default_alloc@@Base+0x66c>
   39670:	movw	r2, #1457	; 0x5b1
   39674:	ldr	r1, [pc, #96]	; 396dc <flatcc_builder_default_alloc@@Base+0x670>
   39678:	ldr	r0, [pc, #96]	; 396e0 <flatcc_builder_default_alloc@@Base+0x674>
   3967c:	add	r3, pc, r3
   39680:	add	r3, r3, #76	; 0x4c
   39684:	add	r1, pc, r1
   39688:	add	r0, pc, r0
   3968c:	bl	14118 <__assert_fail@plt>
   39690:	bl	39330 <flatcc_builder_default_alloc@@Base+0x2c4>
   39694:	ldr	r3, [pc, #72]	; 396e4 <flatcc_builder_default_alloc@@Base+0x678>
   39698:	movw	r2, #647	; 0x287
   3969c:	ldr	r1, [pc, #68]	; 396e8 <flatcc_builder_default_alloc@@Base+0x67c>
   396a0:	ldr	r0, [pc, #68]	; 396ec <flatcc_builder_default_alloc@@Base+0x680>
   396a4:	add	r3, pc, r3
   396a8:	add	r3, r3, #44	; 0x2c
   396ac:	add	r1, pc, r1
   396b0:	add	r0, pc, r0
   396b4:	bl	14118 <__assert_fail@plt>
   396b8:	strdeq	r3, [r3], -r0
   396bc:	muleq	r0, ip, r0
   396c0:	andeq	r1, r2, r0, ror sp
   396c4:			; <UNDEFINED> instruction: 0x000224b8
   396c8:	andeq	r2, r2, r0, asr #10
   396cc:	strdeq	r1, [r2], -ip
   396d0:	andeq	r2, r2, r4, asr #8
   396d4:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   396d8:	ldrdeq	r1, [r2], -r8
   396dc:	andeq	r2, r2, r0, lsr #8
   396e0:	muleq	r2, r8, r4
   396e4:			; <UNDEFINED> instruction: 0x00021cb0
   396e8:	strdeq	r2, [r2], -r8
   396ec:	andeq	r0, r1, r4, lsl #25

000396f0 <flatcc_builder_flush_vtable_cache@@Base>:
   396f0:	ldr	r3, [r0, #116]	; 0x74
   396f4:	cmp	r3, #0
   396f8:	bxeq	lr
   396fc:	str	r4, [sp, #-8]!
   39700:	mov	r4, r0
   39704:	mov	r1, #0
   39708:	ldr	r0, [r0, #92]	; 0x5c
   3970c:	ldr	r2, [r4, #96]	; 0x60
   39710:	str	lr, [sp, #4]
   39714:	bl	1407c <memset@plt>
   39718:	mov	r3, #16
   3971c:	mov	r2, #0
   39720:	strd	r2, [r4, #120]	; 0x78
   39724:	ldr	r4, [sp]
   39728:	add	sp, sp, #4
   3972c:	pop	{pc}		; (ldr pc, [sp], #4)

00039730 <flatcc_builder_custom_init@@Base>:
   39730:	strd	r4, [sp, #-32]!	; 0xffffffe0
   39734:	mov	r5, r3
   39738:	mov	r4, r0
   3973c:	strd	r6, [sp, #8]
   39740:	mov	r6, r1
   39744:	mov	r1, #0
   39748:	ldr	r7, [pc, #124]	; 397cc <flatcc_builder_custom_init@@Base+0x9c>
   3974c:	strd	r8, [sp, #16]
   39750:	mov	r8, r2
   39754:	mov	r2, #232	; 0xe8
   39758:	str	sl, [sp, #24]
   3975c:	str	lr, [sp, #28]
   39760:	ldr	r9, [sp, #32]
   39764:	bl	1407c <memset@plt>
   39768:	cmp	r6, #0
   3976c:	add	r7, pc, r7
   39770:	beq	397a4 <flatcc_builder_custom_init@@Base+0x74>
   39774:	cmp	r5, #0
   39778:	beq	397c0 <flatcc_builder_custom_init@@Base+0x90>
   3977c:	ldr	sl, [sp, #24]
   39780:	mov	r0, #0
   39784:	strd	r8, [r4, #36]	; 0x24
   39788:	str	r6, [r4, #44]	; 0x2c
   3978c:	str	r5, [r4, #48]	; 0x30
   39790:	ldrd	r4, [sp]
   39794:	ldrd	r6, [sp, #8]
   39798:	ldrd	r8, [sp, #16]
   3979c:	add	sp, sp, #28
   397a0:	pop	{pc}		; (ldr pc, [sp], #4)
   397a4:	ldr	r3, [pc, #36]	; 397d0 <flatcc_builder_custom_init@@Base+0xa0>
   397a8:	mov	r2, #1
   397ac:	cmp	r5, #0
   397b0:	add	r8, r4, #188	; 0xbc
   397b4:	str	r2, [r4, #184]	; 0xb8
   397b8:	ldr	r6, [r7, r3]
   397bc:	bne	3977c <flatcc_builder_custom_init@@Base+0x4c>
   397c0:	ldr	r3, [pc, #12]	; 397d4 <flatcc_builder_custom_init@@Base+0xa4>
   397c4:	ldr	r5, [r7, r3]
   397c8:	b	3977c <flatcc_builder_custom_init@@Base+0x4c>
   397cc:	andeq	r3, r3, ip, lsl #17
   397d0:	strheq	r0, [r0], -r4
   397d4:	andeq	r0, r0, r8, lsr #1

000397d8 <flatcc_builder_init@@Base>:
   397d8:	mov	ip, #0
   397dc:	push	{lr}		; (str lr, [sp, #-4]!)
   397e0:	sub	sp, sp, #12
   397e4:	mov	r3, ip
   397e8:	mov	r2, ip
   397ec:	mov	r1, ip
   397f0:	str	ip, [sp]
   397f4:	bl	39730 <flatcc_builder_custom_init@@Base>
   397f8:	add	sp, sp, #12
   397fc:	pop	{pc}		; (ldr pc, [sp], #4)

00039800 <flatcc_builder_custom_reset@@Base>:
   39800:	strd	r4, [sp, #-28]!	; 0xffffffe4
   39804:	mov	r5, #0
   39808:	mov	r4, r0
   3980c:	strd	r6, [sp, #8]
   39810:	mov	r6, r0
   39814:	strd	r8, [sp, #16]
   39818:	mov	r8, r1
   3981c:	mov	r9, r2
   39820:	str	lr, [sp, #24]
   39824:	sub	sp, sp, #12
   39828:	b	39878 <flatcc_builder_custom_reset@@Base+0x78>
   3982c:	cmp	r5, #5
   39830:	cmpne	r9, #0
   39834:	beq	3985c <flatcc_builder_custom_reset@@Base+0x5c>
   39838:	mov	r3, #1
   3983c:	str	r5, [sp]
   39840:	mov	r2, r3
   39844:	ldr	r0, [r6, #40]	; 0x28
   39848:	ldr	r7, [r6, #48]	; 0x30
   3984c:	blx	r7
   39850:	cmp	r0, #0
   39854:	bne	39968 <flatcc_builder_custom_reset@@Base+0x168>
   39858:	ldr	r0, [r4, #52]	; 0x34
   3985c:	mov	r1, #0
   39860:	ldr	r2, [r4, #56]	; 0x38
   39864:	bl	1407c <memset@plt>
   39868:	add	r5, r5, #1
   3986c:	add	r4, r4, #8
   39870:	cmp	r5, #8
   39874:	beq	398b8 <flatcc_builder_custom_reset@@Base+0xb8>
   39878:	ldr	r0, [r4, #52]	; 0x34
   3987c:	add	r1, r4, #52	; 0x34
   39880:	cmp	r0, #0
   39884:	bne	3982c <flatcc_builder_custom_reset@@Base+0x2c>
   39888:	ldr	r3, [r4, #56]	; 0x38
   3988c:	cmp	r3, #0
   39890:	beq	39868 <flatcc_builder_custom_reset@@Base+0x68>
   39894:	ldr	r3, [pc, #212]	; 39970 <flatcc_builder_custom_reset@@Base+0x170>
   39898:	movw	r2, #434	; 0x1b2
   3989c:	ldr	r1, [pc, #208]	; 39974 <flatcc_builder_custom_reset@@Base+0x174>
   398a0:	ldr	r0, [pc, #208]	; 39978 <flatcc_builder_custom_reset@@Base+0x178>
   398a4:	add	r3, pc, r3
   398a8:	add	r3, r3, #108	; 0x6c
   398ac:	add	r1, pc, r1
   398b0:	add	r0, pc, r0
   398b4:	bl	14118 <__assert_fail@plt>
   398b8:	mov	r2, #0
   398bc:	ldr	r0, [r6, #52]	; 0x34
   398c0:	ldr	r3, [r6, #124]	; 0x7c
   398c4:	ldr	r1, [r6, #60]	; 0x3c
   398c8:	str	r0, [r6, #4]
   398cc:	str	r2, [r6, #120]	; 0x78
   398d0:	cmp	r3, r2
   398d4:	ldr	r2, [r6, #76]	; 0x4c
   398d8:	movne	r3, #16
   398dc:	strne	r3, [r6, #124]	; 0x7c
   398e0:	mov	r3, #0
   398e4:	cmp	r8, r3
   398e8:	str	r2, [r6]
   398ec:	str	r1, [r6, #16]
   398f0:	str	r3, [r6, #20]
   398f4:	str	r3, [r6, #24]
   398f8:	str	r3, [r6, #32]
   398fc:	strh	r3, [r6, #128]	; 0x80
   39900:	str	r3, [r6, #136]	; 0x88
   39904:	str	r3, [r6, #140]	; 0x8c
   39908:	str	r3, [r6, #148]	; 0x94
   3990c:	str	r3, [r6, #152]	; 0x98
   39910:	str	r3, [r6, #156]	; 0x9c
   39914:	str	r3, [r6, #160]	; 0xa0
   39918:	bne	39940 <flatcc_builder_custom_reset@@Base+0x140>
   3991c:	ldr	r0, [r6, #184]	; 0xb8
   39920:	cmp	r0, #0
   39924:	bne	39958 <flatcc_builder_custom_reset@@Base+0x158>
   39928:	add	sp, sp, #12
   3992c:	ldrd	r4, [sp]
   39930:	ldrd	r6, [sp, #8]
   39934:	ldrd	r8, [sp, #16]
   39938:	add	sp, sp, #24
   3993c:	pop	{pc}		; (ldr pc, [sp], #4)
   39940:	ldr	r0, [r6, #184]	; 0xb8
   39944:	str	r3, [r6, #172]	; 0xac
   39948:	str	r3, [r6, #176]	; 0xb0
   3994c:	str	r3, [r6, #180]	; 0xb4
   39950:	cmp	r0, #0
   39954:	beq	39928 <flatcc_builder_custom_reset@@Base+0x128>
   39958:	add	r0, r6, #188	; 0xbc
   3995c:	bl	3d738 <flatcc_emitter_reset@@Base>
   39960:	mov	r0, #0
   39964:	b	39928 <flatcc_builder_custom_reset@@Base+0x128>
   39968:	mvn	r0, #0
   3996c:	b	39928 <flatcc_builder_custom_reset@@Base+0x128>
   39970:			; <UNDEFINED> instruction: 0x00021ab0
   39974:	strdeq	r2, [r2], -r8
   39978:	muleq	r2, r0, r2

0003997c <flatcc_builder_reset@@Base>:
   3997c:	mov	r2, #0
   39980:	mov	r1, r2
   39984:	b	39800 <flatcc_builder_custom_reset@@Base>

00039988 <flatcc_builder_clear@@Base>:
   39988:	strd	r4, [sp, #-20]!	; 0xffffffec
   3998c:	mov	r4, #0
   39990:	add	r5, r0, #52	; 0x34
   39994:	strd	r6, [sp, #8]
   39998:	mov	r6, r0
   3999c:	str	lr, [sp, #16]
   399a0:	sub	sp, sp, #12
   399a4:	mov	r3, #0
   399a8:	mov	r1, r5
   399ac:	str	r4, [sp]
   399b0:	mov	r2, r3
   399b4:	add	r4, r4, #1
   399b8:	ldr	r0, [r6, #40]	; 0x28
   399bc:	add	r5, r5, #8
   399c0:	ldr	r7, [r6, #48]	; 0x30
   399c4:	blx	r7
   399c8:	cmp	r4, #8
   399cc:	bne	399a4 <flatcc_builder_clear@@Base+0x1c>
   399d0:	ldr	r3, [r6, #184]	; 0xb8
   399d4:	cmp	r3, #0
   399d8:	bne	39a00 <flatcc_builder_clear@@Base+0x78>
   399dc:	mov	r0, r6
   399e0:	mov	r2, #232	; 0xe8
   399e4:	mov	r1, #0
   399e8:	add	sp, sp, #12
   399ec:	ldrd	r4, [sp]
   399f0:	ldrd	r6, [sp, #8]
   399f4:	ldr	lr, [sp, #16]
   399f8:	add	sp, sp, #20
   399fc:	b	1407c <memset@plt>
   39a00:	add	r0, r6, #188	; 0xbc
   39a04:	bl	3d80c <flatcc_emitter_clear@@Base>
   39a08:	b	399dc <flatcc_builder_clear@@Base+0x54>

00039a0c <flatcc_builder_enter_user_frame_ptr@@Base>:
   39a0c:	strd	r4, [sp, #-20]!	; 0xffffffec
   39a10:	add	r4, r1, #3
   39a14:	mov	r5, r0
   39a18:	ldr	r3, [r0, #112]	; 0x70
   39a1c:	bic	r4, r4, #3
   39a20:	strd	r6, [sp, #8]
   39a24:	add	r4, r4, #4
   39a28:	ldr	r6, [r0, #228]	; 0xe4
   39a2c:	str	lr, [sp, #16]
   39a30:	sub	sp, sp, #12
   39a34:	add	r2, r6, r4
   39a38:	cmp	r2, r3
   39a3c:	bls	39a64 <flatcc_builder_enter_user_frame_ptr@@Base+0x58>
   39a40:	mov	ip, #7
   39a44:	add	r1, r0, #108	; 0x6c
   39a48:	ldr	r0, [r0, #40]	; 0x28
   39a4c:	mov	r3, #0
   39a50:	str	ip, [sp]
   39a54:	ldr	r7, [r5, #48]	; 0x30
   39a58:	blx	r7
   39a5c:	cmp	r0, #0
   39a60:	bne	39ab8 <flatcc_builder_enter_user_frame_ptr@@Base+0xac>
   39a64:	ldr	r7, [r5, #108]	; 0x6c
   39a68:	adds	r3, r7, r6
   39a6c:	moveq	r0, r3
   39a70:	beq	39aa4 <flatcc_builder_enter_user_frame_ptr@@Base+0x98>
   39a74:	mov	r2, r4
   39a78:	mov	r0, r3
   39a7c:	mov	r1, #0
   39a80:	bl	1407c <memset@plt>
   39a84:	ldr	r2, [r5, #224]	; 0xe0
   39a88:	add	r0, r0, #4
   39a8c:	str	r2, [r7, r6]
   39a90:	ldr	r3, [r5, #228]	; 0xe4
   39a94:	add	r4, r3, r4
   39a98:	add	r3, r3, #4
   39a9c:	str	r3, [r5, #224]	; 0xe0
   39aa0:	str	r4, [r5, #228]	; 0xe4
   39aa4:	add	sp, sp, #12
   39aa8:	ldrd	r4, [sp]
   39aac:	ldrd	r6, [sp, #8]
   39ab0:	add	sp, sp, #16
   39ab4:	pop	{pc}		; (ldr pc, [sp], #4)
   39ab8:	bl	39190 <flatcc_builder_default_alloc@@Base+0x124>

00039abc <flatcc_builder_enter_user_frame@@Base>:
   39abc:	strd	r4, [sp, #-20]!	; 0xffffffec
   39ac0:	add	r4, r1, #3
   39ac4:	mov	r5, r0
   39ac8:	ldr	r3, [r0, #112]	; 0x70
   39acc:	bic	r4, r4, #3
   39ad0:	strd	r6, [sp, #8]
   39ad4:	add	r4, r4, #4
   39ad8:	ldr	r6, [r0, #228]	; 0xe4
   39adc:	str	lr, [sp, #16]
   39ae0:	sub	sp, sp, #12
   39ae4:	add	r2, r6, r4
   39ae8:	cmp	r2, r3
   39aec:	bls	39b14 <flatcc_builder_enter_user_frame@@Base+0x58>
   39af0:	mov	ip, #7
   39af4:	add	r1, r0, #108	; 0x6c
   39af8:	ldr	r0, [r0, #40]	; 0x28
   39afc:	mov	r3, #0
   39b00:	str	ip, [sp]
   39b04:	ldr	r7, [r5, #48]	; 0x30
   39b08:	blx	r7
   39b0c:	cmp	r0, #0
   39b10:	bne	39b5c <flatcc_builder_enter_user_frame@@Base+0xa0>
   39b14:	ldr	r7, [r5, #108]	; 0x6c
   39b18:	adds	r0, r7, r6
   39b1c:	beq	39b48 <flatcc_builder_enter_user_frame@@Base+0x8c>
   39b20:	mov	r2, r4
   39b24:	mov	r1, #0
   39b28:	bl	1407c <memset@plt>
   39b2c:	ldr	r3, [r5, #224]	; 0xe0
   39b30:	str	r3, [r7, r6]
   39b34:	ldr	r0, [r5, #228]	; 0xe4
   39b38:	add	r4, r0, r4
   39b3c:	add	r0, r0, #4
   39b40:	str	r0, [r5, #224]	; 0xe0
   39b44:	str	r4, [r5, #228]	; 0xe4
   39b48:	add	sp, sp, #12
   39b4c:	ldrd	r4, [sp]
   39b50:	ldrd	r6, [sp, #8]
   39b54:	add	sp, sp, #16
   39b58:	pop	{pc}		; (ldr pc, [sp], #4)
   39b5c:	bl	39190 <flatcc_builder_default_alloc@@Base+0x124>

00039b60 <flatcc_builder_exit_user_frame@@Base>:
   39b60:	ldr	r2, [r0, #224]	; 0xe0
   39b64:	cmp	r2, #0
   39b68:	beq	39b90 <flatcc_builder_exit_user_frame@@Base+0x30>
   39b6c:	mov	r3, r0
   39b70:	sub	r0, r2, #4
   39b74:	ldr	r1, [r3, #108]	; 0x6c
   39b78:	str	r0, [r3, #228]	; 0xe4
   39b7c:	add	r2, r1, r2
   39b80:	ldr	r2, [r2, #-4]
   39b84:	mov	r0, r2
   39b88:	str	r2, [r3, #224]	; 0xe0
   39b8c:	bx	lr
   39b90:	ldr	r3, [pc, #36]	; 39bbc <flatcc_builder_exit_user_frame@@Base+0x5c>
   39b94:	movw	r2, #542	; 0x21e
   39b98:	str	r4, [sp, #-8]!
   39b9c:	ldr	r1, [pc, #28]	; 39bc0 <flatcc_builder_exit_user_frame@@Base+0x60>
   39ba0:	str	lr, [sp, #4]
   39ba4:	ldr	r0, [pc, #24]	; 39bc4 <flatcc_builder_exit_user_frame@@Base+0x64>
   39ba8:	add	r3, pc, r3
   39bac:	add	r3, r3, #136	; 0x88
   39bb0:	add	r1, pc, r1
   39bb4:	add	r0, pc, r0
   39bb8:	bl	14118 <__assert_fail@plt>
   39bbc:	andeq	r1, r2, ip, lsr #15
   39bc0:	strdeq	r1, [r2], -r4
   39bc4:	andeq	r1, r2, r0, lsr #31

00039bc8 <flatcc_builder_exit_user_frame_at@@Base>:
   39bc8:	ldr	r2, [r0, #224]	; 0xe0
   39bcc:	cmp	r2, r1
   39bd0:	bcc	39bdc <flatcc_builder_exit_user_frame_at@@Base+0x14>
   39bd4:	str	r1, [r0, #224]	; 0xe0
   39bd8:	b	39b60 <flatcc_builder_exit_user_frame@@Base>
   39bdc:	ldr	r3, [pc, #36]	; 39c08 <flatcc_builder_exit_user_frame_at@@Base+0x40>
   39be0:	movw	r2, #551	; 0x227
   39be4:	str	r4, [sp, #-8]!
   39be8:	ldr	r1, [pc, #28]	; 39c0c <flatcc_builder_exit_user_frame_at@@Base+0x44>
   39bec:	str	lr, [sp, #4]
   39bf0:	ldr	r0, [pc, #24]	; 39c10 <flatcc_builder_exit_user_frame_at@@Base+0x48>
   39bf4:	add	r3, pc, r3
   39bf8:	add	r3, r3, #168	; 0xa8
   39bfc:	add	r1, pc, r1
   39c00:	add	r0, pc, r0
   39c04:	bl	14118 <__assert_fail@plt>
   39c08:	andeq	r1, r2, r0, ror #14
   39c0c:	andeq	r1, r2, r8, lsr #29
   39c10:	andeq	r1, r2, r0, ror pc

00039c14 <flatcc_builder_get_current_user_frame@@Base>:
   39c14:	ldr	r0, [r0, #224]	; 0xe0
   39c18:	bx	lr

00039c1c <flatcc_builder_get_user_frame_ptr@@Base>:
   39c1c:	ldr	r0, [r0, #108]	; 0x6c
   39c20:	add	r0, r0, r1
   39c24:	bx	lr

00039c28 <flatcc_builder_embed_buffer@@Base>:
   39c28:	strd	r4, [sp, #-20]!	; 0xffffffec
   39c2c:	mov	r5, r3
   39c30:	mov	r4, r0
   39c34:	ldr	r3, [r0, #152]	; 0x98
   39c38:	strd	r6, [sp, #8]
   39c3c:	mov	r7, r2
   39c40:	mov	r2, r1
   39c44:	ldr	r6, [pc, #356]	; 39db0 <flatcc_builder_embed_buffer@@Base+0x188>
   39c48:	str	lr, [sp, #16]
   39c4c:	sub	sp, sp, #92	; 0x5c
   39c50:	add	r1, sp, #112	; 0x70
   39c54:	adds	r3, r3, #0
   39c58:	movne	r3, #1
   39c5c:	bl	391fc <flatcc_builder_default_alloc@@Base+0x190>
   39c60:	cmp	r0, #0
   39c64:	add	r6, pc, r6
   39c68:	bne	39d80 <flatcc_builder_embed_buffer@@Base+0x158>
   39c6c:	ldr	r3, [sp, #116]	; 0x74
   39c70:	str	r0, [sp, #16]
   39c74:	ldr	r1, [r4, #136]	; 0x88
   39c78:	str	r0, [sp, #20]
   39c7c:	ldrh	r2, [sp, #112]	; 0x70
   39c80:	tst	r3, #2
   39c84:	ldr	r0, [r4, #152]	; 0x98
   39c88:	movne	ip, #4
   39c8c:	moveq	ip, #0
   39c90:	sub	r3, r1, r5
   39c94:	sub	r3, r3, ip
   39c98:	sub	r2, r2, #1
   39c9c:	and	r3, r3, r2
   39ca0:	add	r2, r5, r3
   39ca4:	cmp	r0, #0
   39ca8:	str	r2, [sp, #12]
   39cac:	beq	39cd0 <flatcc_builder_embed_buffer@@Base+0xa8>
   39cb0:	mov	ip, #1
   39cb4:	mov	r2, #4
   39cb8:	mov	r0, r2
   39cbc:	str	r2, [sp, #16]
   39cc0:	str	ip, [sp, #20]
   39cc4:	add	ip, sp, #12
   39cc8:	str	ip, [sp, #24]
   39ccc:	str	r2, [sp, #28]
   39cd0:	cmp	r5, #0
   39cd4:	beq	39cfc <flatcc_builder_embed_buffer@@Base+0xd4>
   39cd8:	ldr	r2, [sp, #20]
   39cdc:	add	ip, sp, #88	; 0x58
   39ce0:	add	r0, r0, r5
   39ce4:	str	r0, [sp, #16]
   39ce8:	add	r2, r2, #1
   39cec:	add	ip, ip, r2, lsl #3
   39cf0:	str	r2, [sp, #20]
   39cf4:	str	r7, [ip, #-72]	; 0xffffffb8
   39cf8:	str	r5, [ip, #-68]	; 0xffffffbc
   39cfc:	cmp	r3, #0
   39d00:	bne	39d50 <flatcc_builder_embed_buffer@@Base+0x128>
   39d04:	sub	r5, r1, r0
   39d08:	cmp	r1, r5
   39d0c:	ble	39d8c <flatcc_builder_embed_buffer@@Base+0x164>
   39d10:	mov	r3, r5
   39d14:	add	r1, sp, #24
   39d18:	str	r0, [sp]
   39d1c:	ldr	r2, [sp, #20]
   39d20:	ldr	r0, [r4, #36]	; 0x24
   39d24:	ldr	r6, [r4, #44]	; 0x2c
   39d28:	blx	r6
   39d2c:	cmp	r0, #0
   39d30:	streq	r5, [r4, #136]	; 0x88
   39d34:	bne	39d88 <flatcc_builder_embed_buffer@@Base+0x160>
   39d38:	mov	r0, r5
   39d3c:	add	sp, sp, #92	; 0x5c
   39d40:	ldrd	r4, [sp]
   39d44:	ldrd	r6, [sp, #8]
   39d48:	add	sp, sp, #16
   39d4c:	pop	{pc}		; (ldr pc, [sp], #4)
   39d50:	ldr	ip, [pc, #92]	; 39db4 <flatcc_builder_embed_buffer@@Base+0x18c>
   39d54:	add	r0, r0, r3
   39d58:	ldr	r2, [sp, #20]
   39d5c:	str	r0, [sp, #16]
   39d60:	ldr	lr, [r6, ip]
   39d64:	add	ip, sp, #88	; 0x58
   39d68:	add	r2, r2, #1
   39d6c:	add	ip, ip, r2, lsl #3
   39d70:	str	r2, [sp, #20]
   39d74:	str	lr, [ip, #-72]	; 0xffffffb8
   39d78:	str	r3, [ip, #-68]	; 0xffffffbc
   39d7c:	b	39d04 <flatcc_builder_embed_buffer@@Base+0xdc>
   39d80:	mov	r5, #0
   39d84:	b	39d38 <flatcc_builder_embed_buffer@@Base+0x110>
   39d88:	bl	39330 <flatcc_builder_default_alloc@@Base+0x2c4>
   39d8c:	ldr	r3, [pc, #36]	; 39db8 <flatcc_builder_embed_buffer@@Base+0x190>
   39d90:	movw	r2, #647	; 0x287
   39d94:	ldr	r1, [pc, #32]	; 39dbc <flatcc_builder_embed_buffer@@Base+0x194>
   39d98:	ldr	r0, [pc, #32]	; 39dc0 <flatcc_builder_embed_buffer@@Base+0x198>
   39d9c:	add	r3, pc, r3
   39da0:	add	r3, r3, #44	; 0x2c
   39da4:	add	r1, pc, r1
   39da8:	add	r0, pc, r0
   39dac:	bl	14118 <__assert_fail@plt>
   39db0:	muleq	r3, r4, r3
   39db4:	muleq	r0, ip, r0
   39db8:			; <UNDEFINED> instruction: 0x000215b8
   39dbc:	andeq	r1, r2, r0, lsl #26
   39dc0:	andeq	r0, r1, ip, lsl #11

00039dc4 <flatcc_builder_create_buffer@@Base>:
   39dc4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   39dc8:	mov	r4, r0
   39dcc:	strd	r6, [sp, #8]
   39dd0:	mov	r6, r3
   39dd4:	strd	r8, [sp, #16]
   39dd8:	mov	r8, #0
   39ddc:	strd	sl, [sp, #24]
   39de0:	mov	sl, r1
   39de4:	str	lr, [sp, #32]
   39de8:	sub	sp, sp, #100	; 0x64
   39dec:	ldr	r9, [sp, #140]	; 0x8c
   39df0:	add	r1, sp, #136	; 0x88
   39df4:	str	r8, [sp, #20]
   39df8:	ldr	r5, [pc, #496]	; 39ff0 <flatcc_builder_create_buffer@@Base+0x22c>
   39dfc:	and	r7, r9, #1
   39e00:	mov	r3, r7
   39e04:	bl	391fc <flatcc_builder_default_alloc@@Base+0x190>
   39e08:	cmp	r0, r8
   39e0c:	add	r5, pc, r5
   39e10:	bne	39f64 <flatcc_builder_create_buffer@@Base+0x1a0>
   39e14:	ldrh	r2, [r4, #128]	; 0x80
   39e18:	ldrh	r3, [sp, #136]	; 0x88
   39e1c:	ldr	ip, [r4, #136]	; 0x88
   39e20:	cmp	r2, r3
   39e24:	strhcc	r3, [r4, #128]	; 0x80
   39e28:	cmp	sl, #0
   39e2c:	ldrne	r2, [sl]
   39e30:	ldreq	lr, [sp, #20]
   39e34:	movne	lr, r2
   39e38:	strne	r2, [sp, #20]
   39e3c:	sub	r2, r3, #1
   39e40:	sub	r3, ip, #4
   39e44:	cmp	lr, #0
   39e48:	movne	lr, #4
   39e4c:	tst	r9, #2
   39e50:	movne	r0, #4
   39e54:	moveq	r0, #0
   39e58:	sub	r3, r3, lr
   39e5c:	ands	r1, r9, #3
   39e60:	sub	r3, r3, r0
   39e64:	and	r3, r3, r2
   39e68:	bne	39f84 <flatcc_builder_create_buffer@@Base+0x1c0>
   39e6c:	mov	r9, r1
   39e70:	mov	r8, #1
   39e74:	mov	r0, #4
   39e78:	add	sl, sp, #96	; 0x60
   39e7c:	add	r2, r9, #1
   39e80:	str	r0, [sp, #24]
   39e84:	add	r2, sl, r2, lsl #3
   39e88:	mov	fp, #4
   39e8c:	add	sl, sp, #12
   39e90:	cmp	lr, #0
   39e94:	str	r8, [sp, #28]
   39e98:	strd	sl, [r2, #-72]	; 0xffffffb8
   39e9c:	beq	39ec8 <flatcc_builder_create_buffer@@Base+0x104>
   39ea0:	add	r2, sp, #96	; 0x60
   39ea4:	add	r8, r8, #1
   39ea8:	add	r8, r2, r8, lsl #3
   39eac:	add	r0, r0, lr
   39eb0:	add	r9, r9, #2
   39eb4:	add	r2, sp, #20
   39eb8:	str	r0, [sp, #24]
   39ebc:	str	r2, [r8, #-72]	; 0xffffffb8
   39ec0:	str	lr, [r8, #-68]	; 0xffffffbc
   39ec4:	str	r9, [sp, #28]
   39ec8:	cmp	r3, #0
   39ecc:	beq	39efc <flatcc_builder_create_buffer@@Base+0x138>
   39ed0:	ldr	lr, [pc, #284]	; 39ff4 <flatcc_builder_create_buffer@@Base+0x230>
   39ed4:	add	r0, r0, r3
   39ed8:	ldr	r2, [sp, #28]
   39edc:	str	r0, [sp, #24]
   39ee0:	ldr	r5, [r5, lr]
   39ee4:	add	lr, sp, #96	; 0x60
   39ee8:	add	r2, r2, #1
   39eec:	add	lr, lr, r2, lsl #3
   39ef0:	str	r2, [sp, #28]
   39ef4:	str	r5, [lr, #-72]	; 0xffffffb8
   39ef8:	str	r3, [lr, #-68]	; 0xffffffbc
   39efc:	sub	r5, ip, r0
   39f00:	cmp	r1, #0
   39f04:	mov	r2, r5
   39f08:	addne	r2, r5, #4
   39f0c:	cmp	r7, #0
   39f10:	sub	r6, r6, r2
   39f14:	ldrne	r3, [r4, #144]	; 0x90
   39f18:	mov	r8, r5
   39f1c:	str	r6, [sp, #12]
   39f20:	ldreq	r3, [r4, #140]	; 0x8c
   39f24:	cmp	ip, r5
   39f28:	sub	r3, r3, r2
   39f2c:	str	r3, [sp, #16]
   39f30:	ble	39fc8 <flatcc_builder_create_buffer@@Base+0x204>
   39f34:	mov	r3, r5
   39f38:	add	r1, sp, #32
   39f3c:	str	r0, [sp]
   39f40:	ldr	r2, [sp, #28]
   39f44:	ldr	r0, [r4, #36]	; 0x24
   39f48:	ldr	r6, [r4, #44]	; 0x2c
   39f4c:	blx	r6
   39f50:	cmp	r0, #0
   39f54:	bne	39fec <flatcc_builder_create_buffer@@Base+0x228>
   39f58:	cmp	r5, #0
   39f5c:	str	r5, [r4, #136]	; 0x88
   39f60:	beq	39fa4 <flatcc_builder_create_buffer@@Base+0x1e0>
   39f64:	mov	r0, r8
   39f68:	add	sp, sp, #100	; 0x64
   39f6c:	ldrd	r4, [sp]
   39f70:	ldrd	r6, [sp, #8]
   39f74:	ldrd	r8, [sp, #16]
   39f78:	ldrd	sl, [sp, #24]
   39f7c:	add	sp, sp, #32
   39f80:	pop	{pc}		; (ldr pc, [sp], #4)
   39f84:	mov	sl, #4
   39f88:	add	r2, sp, #16
   39f8c:	mov	r8, #2
   39f90:	mov	r9, #1
   39f94:	mov	r0, #8
   39f98:	str	r2, [sp, #32]
   39f9c:	str	sl, [sp, #36]	; 0x24
   39fa0:	b	39e78 <flatcc_builder_create_buffer@@Base+0xb4>
   39fa4:	ldr	r3, [pc, #76]	; 39ff8 <flatcc_builder_create_buffer@@Base+0x234>
   39fa8:	mov	r2, #772	; 0x304
   39fac:	ldr	r1, [pc, #72]	; 39ffc <flatcc_builder_create_buffer@@Base+0x238>
   39fb0:	ldr	r0, [pc, #72]	; 3a000 <flatcc_builder_create_buffer@@Base+0x23c>
   39fb4:	add	r3, pc, r3
   39fb8:	add	r3, r3, #204	; 0xcc
   39fbc:	add	r1, pc, r1
   39fc0:	add	r0, pc, r0
   39fc4:	bl	14118 <__assert_fail@plt>
   39fc8:	ldr	r3, [pc, #52]	; 3a004 <flatcc_builder_create_buffer@@Base+0x240>
   39fcc:	movw	r2, #647	; 0x287
   39fd0:	ldr	r1, [pc, #48]	; 3a008 <flatcc_builder_create_buffer@@Base+0x244>
   39fd4:	ldr	r0, [pc, #48]	; 3a00c <flatcc_builder_create_buffer@@Base+0x248>
   39fd8:	add	r3, pc, r3
   39fdc:	add	r3, r3, #44	; 0x2c
   39fe0:	add	r1, pc, r1
   39fe4:	add	r0, pc, r0
   39fe8:	bl	14118 <__assert_fail@plt>
   39fec:	bl	39330 <flatcc_builder_default_alloc@@Base+0x2c4>
   39ff0:	andeq	r3, r3, ip, ror #3
   39ff4:	muleq	r0, ip, r0
   39ff8:	andeq	r1, r2, r0, lsr #7
   39ffc:	andeq	r1, r2, r8, ror #21
   3a000:	andeq	r0, r1, r4, ror r3
   3a004:	andeq	r1, r2, ip, ror r3
   3a008:	andeq	r1, r2, r4, asr #21
   3a00c:	andeq	r0, r1, r0, asr r3

0003a010 <flatcc_builder_create_struct@@Base>:
   3a010:	ldr	ip, [pc, #316]	; 3a154 <flatcc_builder_create_struct@@Base+0x144>
   3a014:	cmp	r3, #0
   3a018:	strd	r4, [sp, #-20]!	; 0xffffffec
   3a01c:	strd	r6, [sp, #8]
   3a020:	str	lr, [sp, #16]
   3a024:	sub	sp, sp, #84	; 0x54
   3a028:	add	ip, pc, ip
   3a02c:	beq	3a130 <flatcc_builder_create_struct@@Base+0x120>
   3a030:	mov	r4, r0
   3a034:	ldrh	r0, [r0, #128]	; 0x80
   3a038:	ldr	lr, [r4, #136]	; 0x88
   3a03c:	cmp	r0, r3
   3a040:	mov	r0, #0
   3a044:	strhcc	r3, [r4, #128]	; 0x80
   3a048:	sub	r5, lr, r2
   3a04c:	sub	r3, r3, #1
   3a050:	cmp	r2, r0
   3a054:	and	r3, r3, r5
   3a058:	str	r0, [sp, #8]
   3a05c:	str	r0, [sp, #12]
   3a060:	bne	3a0e4 <flatcc_builder_create_struct@@Base+0xd4>
   3a064:	cmp	r3, #0
   3a068:	movne	r2, r3
   3a06c:	movne	r6, #1
   3a070:	beq	3a108 <flatcc_builder_create_struct@@Base+0xf8>
   3a074:	ldr	r1, [pc, #220]	; 3a158 <flatcc_builder_create_struct@@Base+0x148>
   3a078:	add	r0, r0, #1
   3a07c:	add	r7, sp, #80	; 0x50
   3a080:	str	r2, [sp, #8]
   3a084:	add	r0, r7, r0, lsl #3
   3a088:	sub	r5, lr, r2
   3a08c:	ldr	r1, [ip, r1]
   3a090:	str	r6, [sp, #12]
   3a094:	str	r1, [r0, #-72]	; 0xffffffb8
   3a098:	str	r3, [r0, #-68]	; 0xffffffbc
   3a09c:	cmp	lr, r5
   3a0a0:	ble	3a108 <flatcc_builder_create_struct@@Base+0xf8>
   3a0a4:	mov	r3, r5
   3a0a8:	add	r1, sp, #16
   3a0ac:	str	r2, [sp]
   3a0b0:	ldr	r2, [sp, #12]
   3a0b4:	ldr	r0, [r4, #36]	; 0x24
   3a0b8:	ldr	r6, [r4, #44]	; 0x2c
   3a0bc:	blx	r6
   3a0c0:	cmp	r0, #0
   3a0c4:	bne	3a12c <flatcc_builder_create_struct@@Base+0x11c>
   3a0c8:	mov	r0, r5
   3a0cc:	str	r5, [r4, #136]	; 0x88
   3a0d0:	add	sp, sp, #84	; 0x54
   3a0d4:	ldrd	r4, [sp]
   3a0d8:	ldrd	r6, [sp, #8]
   3a0dc:	add	sp, sp, #16
   3a0e0:	pop	{pc}		; (ldr pc, [sp], #4)
   3a0e4:	mov	r0, #1
   3a0e8:	cmp	r3, #0
   3a0ec:	str	r2, [sp, #8]
   3a0f0:	movne	r6, #2
   3a0f4:	strd	r0, [sp, #12]
   3a0f8:	str	r2, [sp, #20]
   3a0fc:	addne	r2, r2, r3
   3a100:	beq	3a09c <flatcc_builder_create_struct@@Base+0x8c>
   3a104:	b	3a074 <flatcc_builder_create_struct@@Base+0x64>
   3a108:	ldr	r3, [pc, #76]	; 3a15c <flatcc_builder_create_struct@@Base+0x14c>
   3a10c:	movw	r2, #647	; 0x287
   3a110:	ldr	r1, [pc, #72]	; 3a160 <flatcc_builder_create_struct@@Base+0x150>
   3a114:	ldr	r0, [pc, #72]	; 3a164 <flatcc_builder_create_struct@@Base+0x154>
   3a118:	add	r3, pc, r3
   3a11c:	add	r3, r3, #44	; 0x2c
   3a120:	add	r1, pc, r1
   3a124:	add	r0, pc, r0
   3a128:	bl	14118 <__assert_fail@plt>
   3a12c:	bl	39330 <flatcc_builder_default_alloc@@Base+0x2c4>
   3a130:	ldr	r3, [pc, #48]	; 3a168 <flatcc_builder_create_struct@@Base+0x158>
   3a134:	movw	r2, #783	; 0x30f
   3a138:	ldr	r1, [pc, #44]	; 3a16c <flatcc_builder_create_struct@@Base+0x15c>
   3a13c:	ldr	r0, [pc, #44]	; 3a170 <flatcc_builder_create_struct@@Base+0x160>
   3a140:	add	r3, pc, r3
   3a144:	add	r3, r3, #236	; 0xec
   3a148:	add	r1, pc, r1
   3a14c:	add	r0, pc, r0
   3a150:	bl	14118 <__assert_fail@plt>
   3a154:	ldrdeq	r2, [r3], -r0
   3a158:	muleq	r0, ip, r0
   3a15c:	andeq	r1, r2, ip, lsr r2
   3a160:	andeq	r1, r2, r4, lsl #19
   3a164:	andeq	r0, r1, r0, lsl r2
   3a168:	andeq	r1, r2, r4, lsl r2
   3a16c:	andeq	r1, r2, ip, asr r9
   3a170:	andeq	r1, r2, r4, asr #20

0003a174 <flatcc_builder_start_buffer@@Base>:
   3a174:	strd	r4, [sp, #-32]!	; 0xffffffe0
   3a178:	mov	r5, r1
   3a17c:	mov	r4, r0
   3a180:	ldrh	r1, [r0, #128]	; 0x80
   3a184:	strd	r6, [sp, #8]
   3a188:	mov	r7, r3
   3a18c:	ldr	r6, [pc, #180]	; 3a248 <flatcc_builder_start_buffer@@Base+0xd4>
   3a190:	strd	r8, [sp, #16]
   3a194:	mov	r8, r2
   3a198:	str	sl, [sp, #24]
   3a19c:	str	lr, [sp, #28]
   3a1a0:	bl	393a0 <flatcc_builder_default_alloc@@Base+0x334>
   3a1a4:	cmp	r0, #0
   3a1a8:	add	r6, pc, r6
   3a1ac:	bne	3a240 <flatcc_builder_start_buffer@@Base+0xcc>
   3a1b0:	mov	r3, #1
   3a1b4:	ldrh	r9, [r4, #132]	; 0x84
   3a1b8:	cmp	r5, #0
   3a1bc:	ldr	ip, [r4, #148]	; 0x94
   3a1c0:	strh	r3, [r4, #128]	; 0x80
   3a1c4:	ldr	r1, [r4, #32]
   3a1c8:	ldr	lr, [r4, #136]	; 0x88
   3a1cc:	add	r2, ip, r3
   3a1d0:	ldrh	r3, [r4, #164]	; 0xa4
   3a1d4:	strh	r9, [r1, #34]	; 0x22
   3a1d8:	strh	r8, [r4, #132]	; 0x84
   3a1dc:	ldr	r9, [r4, #144]	; 0x90
   3a1e0:	ldr	r8, [r4, #152]	; 0x98
   3a1e4:	strh	r3, [r1, #32]
   3a1e8:	ldr	r3, [r4, #168]	; 0xa8
   3a1ec:	strh	r7, [r4, #164]	; 0xa4
   3a1f0:	str	r9, [r1, #20]
   3a1f4:	str	r8, [r1, #28]
   3a1f8:	str	lr, [r4, #144]	; 0x90
   3a1fc:	str	r2, [r4, #148]	; 0x94
   3a200:	str	ip, [r4, #152]	; 0x98
   3a204:	str	r3, [r1, #16]
   3a208:	beq	3a234 <flatcc_builder_start_buffer@@Base+0xc0>
   3a20c:	ldr	r2, [r5]
   3a210:	mov	r3, #1
   3a214:	str	r2, [r4, #168]	; 0xa8
   3a218:	strh	r3, [r1, #14]
   3a21c:	ldrd	r4, [sp]
   3a220:	ldrd	r6, [sp, #8]
   3a224:	ldrd	r8, [sp, #16]
   3a228:	ldr	sl, [sp, #24]
   3a22c:	add	sp, sp, #28
   3a230:	pop	{pc}		; (ldr pc, [sp], #4)
   3a234:	ldr	r3, [pc, #16]	; 3a24c <flatcc_builder_start_buffer@@Base+0xd8>
   3a238:	ldr	r5, [r6, r3]
   3a23c:	b	3a20c <flatcc_builder_start_buffer@@Base+0x98>
   3a240:	mvn	r0, #0
   3a244:	b	3a21c <flatcc_builder_start_buffer@@Base+0xa8>
   3a248:	andeq	r2, r3, r0, asr lr
   3a24c:	muleq	r0, ip, r0

0003a250 <flatcc_builder_end_buffer@@Base>:
   3a250:	ldr	ip, [r0, #32]
   3a254:	strd	r4, [sp, #-16]!
   3a258:	mov	r4, r0
   3a25c:	ldrh	r2, [r0, #164]	; 0xa4
   3a260:	ldr	r0, [r0, #152]	; 0x98
   3a264:	ldrh	ip, [ip, #14]
   3a268:	and	r2, r2, #2
   3a26c:	str	r6, [sp, #8]
   3a270:	str	lr, [sp, #12]
   3a274:	sub	sp, sp, #8
   3a278:	cmp	r0, #0
   3a27c:	moveq	r0, r2
   3a280:	orrne	r0, r2, #1
   3a284:	cmp	ip, #1
   3a288:	bne	3a370 <flatcc_builder_end_buffer@@Base+0x120>
   3a28c:	ldrh	r2, [r4, #132]	; 0x84
   3a290:	mov	r3, r1
   3a294:	add	r1, r4, #168	; 0xa8
   3a298:	ldrh	ip, [r4, #128]	; 0x80
   3a29c:	cmp	r2, ip
   3a2a0:	movhi	ip, r2
   3a2a4:	strhhi	r2, [r4, #128]	; 0x80
   3a2a8:	str	ip, [sp]
   3a2ac:	str	r0, [sp, #4]
   3a2b0:	mov	r0, r4
   3a2b4:	bl	39dc4 <flatcc_builder_create_buffer@@Base>
   3a2b8:	subs	r5, r0, #0
   3a2bc:	beq	3a358 <flatcc_builder_end_buffer@@Base+0x108>
   3a2c0:	mov	r1, #0
   3a2c4:	ldr	r0, [r4, #16]
   3a2c8:	ldr	r3, [r4, #32]
   3a2cc:	ldr	r2, [r4, #20]
   3a2d0:	ldrh	lr, [r3, #32]
   3a2d4:	ldr	ip, [r3, #16]
   3a2d8:	ldr	r6, [r3, #20]
   3a2dc:	ldr	r3, [r3, #28]
   3a2e0:	str	r6, [r4, #144]	; 0x90
   3a2e4:	strh	lr, [r4, #164]	; 0xa4
   3a2e8:	str	r3, [r4, #152]	; 0x98
   3a2ec:	str	ip, [r4, #168]	; 0xa8
   3a2f0:	bl	1407c <memset@plt>
   3a2f4:	ldr	r3, [r4, #32]
   3a2f8:	ldr	r0, [r4, #60]	; 0x3c
   3a2fc:	ldr	r2, [r4, #64]	; 0x40
   3a300:	ldr	ip, [r3]
   3a304:	ldmib	r3, {r1, lr}
   3a308:	add	r0, r0, ip
   3a30c:	sub	r2, r2, ip
   3a310:	str	r0, [r4, #16]
   3a314:	cmp	r2, r1
   3a318:	ldrh	r0, [r4, #128]	; 0x80
   3a31c:	movcs	r2, r1
   3a320:	str	lr, [r4, #20]
   3a324:	str	ip, [r4, #28]
   3a328:	ldrh	ip, [r4, #130]	; 0x82
   3a32c:	str	r2, [r4, #24]
   3a330:	ldr	r2, [r4, #156]	; 0x9c
   3a334:	str	r1, [r3, #4]
   3a338:	cmp	r0, ip
   3a33c:	sub	r0, r3, #36	; 0x24
   3a340:	strhcc	ip, [r4, #128]	; 0x80
   3a344:	ldrh	r1, [r3, #12]
   3a348:	sub	r3, r2, #1
   3a34c:	str	r0, [r4, #32]
   3a350:	strh	r1, [r4, #130]	; 0x82
   3a354:	str	r3, [r4, #156]	; 0x9c
   3a358:	mov	r0, r5
   3a35c:	add	sp, sp, #8
   3a360:	ldrd	r4, [sp]
   3a364:	ldr	r6, [sp, #8]
   3a368:	add	sp, sp, #12
   3a36c:	pop	{pc}		; (ldr pc, [sp], #4)
   3a370:	ldr	r3, [pc, #28]	; 3a394 <flatcc_builder_end_buffer@@Base+0x144>
   3a374:	movw	r2, #838	; 0x346
   3a378:	ldr	r1, [pc, #24]	; 3a398 <flatcc_builder_end_buffer@@Base+0x148>
   3a37c:	ldr	r0, [pc, #24]	; 3a39c <flatcc_builder_end_buffer@@Base+0x14c>
   3a380:	add	r3, pc, r3
   3a384:	add	r3, r3, #268	; 0x10c
   3a388:	add	r1, pc, r1
   3a38c:	add	r0, pc, r0
   3a390:	bl	14118 <__assert_fail@plt>
   3a394:	ldrdeq	r0, [r2], -r4
   3a398:	andeq	r1, r2, ip, lsl r7
   3a39c:	andeq	r1, r2, r0, lsl r8

0003a3a0 <flatcc_builder_start_struct@@Base>:
   3a3a0:	strd	r4, [sp, #-16]!
   3a3a4:	mov	r5, r1
   3a3a8:	mov	r1, r2
   3a3ac:	mov	r4, r0
   3a3b0:	str	r6, [sp, #8]
   3a3b4:	str	lr, [sp, #12]
   3a3b8:	bl	393a0 <flatcc_builder_default_alloc@@Base+0x334>
   3a3bc:	cmp	r0, #0
   3a3c0:	bne	3a448 <flatcc_builder_start_struct@@Base+0xa8>
   3a3c4:	ldr	r6, [r4, #20]
   3a3c8:	mov	ip, #2
   3a3cc:	ldr	r2, [r4, #28]
   3a3d0:	ldr	r3, [r4, #64]	; 0x40
   3a3d4:	add	r5, r5, r6
   3a3d8:	ldr	r0, [r4, #60]	; 0x3c
   3a3dc:	ldr	r1, [r4, #32]
   3a3e0:	sub	r3, r3, r2
   3a3e4:	cmn	r3, #4
   3a3e8:	add	r0, r0, r2
   3a3ec:	mvnhi	r2, #3
   3a3f0:	movhi	r3, r2
   3a3f4:	strh	ip, [r1, #14]
   3a3f8:	strhi	r2, [r4, #24]
   3a3fc:	mvn	r2, #3
   3a400:	strls	r3, [r4, #24]
   3a404:	cmp	r5, r3
   3a408:	str	r0, [r4, #16]
   3a40c:	str	r2, [r1, #4]
   3a410:	str	r5, [r4, #20]
   3a414:	bcs	3a42c <flatcc_builder_start_struct@@Base+0x8c>
   3a418:	add	r0, r0, r6
   3a41c:	ldrd	r4, [sp]
   3a420:	ldr	r6, [sp, #8]
   3a424:	add	sp, sp, #12
   3a428:	pop	{pc}		; (ldr pc, [sp], #4)
   3a42c:	add	r1, r5, #1
   3a430:	mov	r0, r4
   3a434:	bl	38fe4 <__flatcc_fb_coerce_scalar_type@@Base+0x718>
   3a438:	cmp	r0, #0
   3a43c:	bne	3a448 <flatcc_builder_start_struct@@Base+0xa8>
   3a440:	ldr	r0, [r4, #16]
   3a444:	b	3a418 <flatcc_builder_start_struct@@Base+0x78>
   3a448:	ldrd	r4, [sp]
   3a44c:	mov	r0, #0
   3a450:	ldr	r6, [sp, #8]
   3a454:	add	sp, sp, #12
   3a458:	pop	{pc}		; (ldr pc, [sp], #4)

0003a45c <flatcc_builder_struct_edit@@Base>:
   3a45c:	ldr	r0, [r0, #16]
   3a460:	bx	lr

0003a464 <flatcc_builder_end_struct@@Base>:
   3a464:	ldr	r3, [r0, #32]
   3a468:	strd	r4, [sp, #-16]!
   3a46c:	ldrh	r3, [r3, #14]
   3a470:	str	r6, [sp, #8]
   3a474:	str	lr, [sp, #12]
   3a478:	cmp	r3, #2
   3a47c:	bne	3a524 <flatcc_builder_end_struct@@Base+0xc0>
   3a480:	ldrh	r3, [r0, #130]	; 0x82
   3a484:	mov	r4, r0
   3a488:	ldr	r1, [r0, #16]
   3a48c:	ldr	r2, [r0, #20]
   3a490:	bl	3a010 <flatcc_builder_create_struct@@Base>
   3a494:	subs	r5, r0, #0
   3a498:	beq	3a510 <flatcc_builder_end_struct@@Base+0xac>
   3a49c:	mov	r1, #0
   3a4a0:	ldr	r0, [r4, #16]
   3a4a4:	ldr	r2, [r4, #20]
   3a4a8:	bl	1407c <memset@plt>
   3a4ac:	ldr	r3, [r4, #32]
   3a4b0:	ldr	r0, [r4, #60]	; 0x3c
   3a4b4:	ldr	r2, [r4, #64]	; 0x40
   3a4b8:	ldr	ip, [r3]
   3a4bc:	ldmib	r3, {r1, lr}
   3a4c0:	add	r0, r0, ip
   3a4c4:	sub	r2, r2, ip
   3a4c8:	str	r0, [r4, #16]
   3a4cc:	cmp	r2, r1
   3a4d0:	ldrh	r0, [r4, #128]	; 0x80
   3a4d4:	movcs	r2, r1
   3a4d8:	str	lr, [r4, #20]
   3a4dc:	str	ip, [r4, #28]
   3a4e0:	ldrh	ip, [r4, #130]	; 0x82
   3a4e4:	str	r2, [r4, #24]
   3a4e8:	ldr	r2, [r4, #156]	; 0x9c
   3a4ec:	str	r1, [r3, #4]
   3a4f0:	cmp	r0, ip
   3a4f4:	sub	r0, r3, #36	; 0x24
   3a4f8:	strhcc	ip, [r4, #128]	; 0x80
   3a4fc:	ldrh	r1, [r3, #12]
   3a500:	sub	r3, r2, #1
   3a504:	str	r0, [r4, #32]
   3a508:	strh	r1, [r4, #130]	; 0x82
   3a50c:	str	r3, [r4, #156]	; 0x9c
   3a510:	mov	r0, r5
   3a514:	ldrd	r4, [sp]
   3a518:	ldr	r6, [sp, #8]
   3a51c:	add	sp, sp, #12
   3a520:	pop	{pc}		; (ldr pc, [sp], #4)
   3a524:	ldr	r3, [pc, #28]	; 3a548 <flatcc_builder_end_struct@@Base+0xe4>
   3a528:	mov	r2, #872	; 0x368
   3a52c:	ldr	r1, [pc, #24]	; 3a54c <flatcc_builder_end_struct@@Base+0xe8>
   3a530:	ldr	r0, [pc, #24]	; 3a550 <flatcc_builder_end_struct@@Base+0xec>
   3a534:	add	r3, pc, r3
   3a538:	add	r3, r3, #296	; 0x128
   3a53c:	add	r1, pc, r1
   3a540:	add	r0, pc, r0
   3a544:	bl	14118 <__assert_fail@plt>
   3a548:	andeq	r0, r2, r0, lsr #28
   3a54c:	andeq	r1, r2, r8, ror #10
   3a550:	andeq	r1, r2, r8, lsl #13

0003a554 <flatcc_builder_extend_vector@@Base>:
   3a554:	ldr	r2, [r0, #32]
   3a558:	strd	r4, [sp, #-16]!
   3a55c:	ldr	r3, [r2, #20]
   3a560:	ldr	ip, [r2, #24]
   3a564:	str	r6, [sp, #8]
   3a568:	str	lr, [sp, #12]
   3a56c:	adds	r3, r1, r3
   3a570:	movcs	r4, #1
   3a574:	movcc	r4, #0
   3a578:	cmp	ip, r3
   3a57c:	orrcc	r4, r4, #1
   3a580:	cmp	r4, #0
   3a584:	bne	3a5e0 <flatcc_builder_extend_vector@@Base+0x8c>
   3a588:	ldr	ip, [r2, #16]
   3a58c:	mov	r5, r0
   3a590:	ldr	r6, [r0, #20]
   3a594:	str	r3, [r2, #20]
   3a598:	ldr	r3, [r0, #24]
   3a59c:	mla	r1, ip, r1, r6
   3a5a0:	cmp	r1, r3
   3a5a4:	str	r1, [r0, #20]
   3a5a8:	bcs	3a5c4 <flatcc_builder_extend_vector@@Base+0x70>
   3a5ac:	ldr	r0, [r5, #16]
   3a5b0:	add	r0, r0, r6
   3a5b4:	ldrd	r4, [sp]
   3a5b8:	ldr	r6, [sp, #8]
   3a5bc:	add	sp, sp, #12
   3a5c0:	pop	{pc}		; (ldr pc, [sp], #4)
   3a5c4:	add	r1, r1, #1
   3a5c8:	mvn	r2, #3
   3a5cc:	bl	38fe4 <__flatcc_fb_coerce_scalar_type@@Base+0x718>
   3a5d0:	cmp	r0, #0
   3a5d4:	beq	3a5ac <flatcc_builder_extend_vector@@Base+0x58>
   3a5d8:	mov	r0, r4
   3a5dc:	b	3a5b4 <flatcc_builder_extend_vector@@Base+0x60>
   3a5e0:	bl	39368 <flatcc_builder_default_alloc@@Base+0x2fc>

0003a5e4 <flatcc_builder_vector_push@@Base>:
   3a5e4:	ldr	r3, [r0, #32]
   3a5e8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   3a5ec:	ldrh	r2, [r3, #14]
   3a5f0:	strd	r6, [sp, #8]
   3a5f4:	str	r8, [sp, #16]
   3a5f8:	str	lr, [sp, #20]
   3a5fc:	cmp	r2, #4
   3a600:	bne	3a694 <flatcc_builder_vector_push@@Base+0xb0>
   3a604:	mov	r7, r1
   3a608:	ldr	r2, [r3, #20]
   3a60c:	ldr	r1, [r3, #24]
   3a610:	cmp	r2, r1
   3a614:	bhi	3a6b8 <flatcc_builder_vector_push@@Base+0xd4>
   3a618:	add	r2, r2, #1
   3a61c:	ldr	r6, [r3, #16]
   3a620:	mov	r4, r0
   3a624:	ldr	r5, [r0, #20]
   3a628:	str	r2, [r3, #20]
   3a62c:	ldr	r3, [r0, #24]
   3a630:	add	r1, r6, r5
   3a634:	cmp	r1, r3
   3a638:	str	r1, [r0, #20]
   3a63c:	bcs	3a678 <flatcc_builder_vector_push@@Base+0x94>
   3a640:	ldr	r3, [r4, #16]
   3a644:	adds	r3, r3, r5
   3a648:	beq	3a660 <flatcc_builder_vector_push@@Base+0x7c>
   3a64c:	mov	r0, r3
   3a650:	mov	r2, r6
   3a654:	mov	r1, r7
   3a658:	bl	13fb0 <memcpy@plt>
   3a65c:	mov	r3, r0
   3a660:	ldrd	r4, [sp]
   3a664:	mov	r0, r3
   3a668:	ldrd	r6, [sp, #8]
   3a66c:	ldr	r8, [sp, #16]
   3a670:	add	sp, sp, #20
   3a674:	pop	{pc}		; (ldr pc, [sp], #4)
   3a678:	add	r1, r1, #1
   3a67c:	mvn	r2, #3
   3a680:	bl	38fe4 <__flatcc_fb_coerce_scalar_type@@Base+0x718>
   3a684:	cmp	r0, #0
   3a688:	beq	3a640 <flatcc_builder_vector_push@@Base+0x5c>
   3a68c:	mov	r3, #0
   3a690:	b	3a660 <flatcc_builder_vector_push@@Base+0x7c>
   3a694:	ldr	r3, [pc, #64]	; 3a6dc <flatcc_builder_vector_push@@Base+0xf8>
   3a698:	movw	r2, #907	; 0x38b
   3a69c:	ldr	r1, [pc, #60]	; 3a6e0 <flatcc_builder_vector_push@@Base+0xfc>
   3a6a0:	ldr	r0, [pc, #60]	; 3a6e4 <flatcc_builder_vector_push@@Base+0x100>
   3a6a4:	add	r3, pc, r3
   3a6a8:	add	r3, r3, #324	; 0x144
   3a6ac:	add	r1, pc, r1
   3a6b0:	add	r0, pc, r0
   3a6b4:	bl	14118 <__assert_fail@plt>
   3a6b8:	ldr	r3, [pc, #40]	; 3a6e8 <flatcc_builder_vector_push@@Base+0x104>
   3a6bc:	mov	r2, #908	; 0x38c
   3a6c0:	ldr	r1, [pc, #36]	; 3a6ec <flatcc_builder_vector_push@@Base+0x108>
   3a6c4:	ldr	r0, [pc, #36]	; 3a6f0 <flatcc_builder_vector_push@@Base+0x10c>
   3a6c8:	add	r3, pc, r3
   3a6cc:	add	r3, r3, #324	; 0x144
   3a6d0:	add	r1, pc, r1
   3a6d4:	add	r0, pc, r0
   3a6d8:	bl	14118 <__assert_fail@plt>
   3a6dc:			; <UNDEFINED> instruction: 0x00020cb0
   3a6e0:	strdeq	r1, [r2], -r8
   3a6e4:	andeq	r1, r2, r4, asr #10
   3a6e8:	andeq	r0, r2, ip, lsl #25
   3a6ec:	ldrdeq	r1, [r2], -r4
   3a6f0:	andeq	r1, r2, ip, asr #10

0003a6f4 <flatcc_builder_append_vector@@Base>:
   3a6f4:	ldr	ip, [r0, #32]
   3a6f8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   3a6fc:	ldrh	r3, [ip, #14]
   3a700:	strd	r6, [sp, #8]
   3a704:	str	r8, [sp, #16]
   3a708:	str	lr, [sp, #20]
   3a70c:	cmp	r3, #4
   3a710:	bne	3a7bc <flatcc_builder_append_vector@@Base+0xc8>
   3a714:	mov	r6, r1
   3a718:	ldr	r1, [ip, #20]
   3a71c:	ldr	r4, [ip, #24]
   3a720:	adds	r1, r2, r1
   3a724:	movcs	r3, #1
   3a728:	movcc	r3, #0
   3a72c:	cmp	r4, r1
   3a730:	movcs	r4, r3
   3a734:	orrcc	r4, r3, #1
   3a738:	cmp	r4, #0
   3a73c:	bne	3a7e0 <flatcc_builder_append_vector@@Base+0xec>
   3a740:	ldr	r7, [ip, #16]
   3a744:	mov	r5, r0
   3a748:	ldr	r8, [r0, #20]
   3a74c:	ldr	r3, [r0, #24]
   3a750:	mul	r7, r7, r2
   3a754:	str	r1, [ip, #20]
   3a758:	add	r1, r7, r8
   3a75c:	cmp	r1, r3
   3a760:	str	r1, [r0, #20]
   3a764:	bcs	3a7a0 <flatcc_builder_append_vector@@Base+0xac>
   3a768:	ldr	r3, [r5, #16]
   3a76c:	adds	r3, r3, r8
   3a770:	beq	3a788 <flatcc_builder_append_vector@@Base+0x94>
   3a774:	mov	r0, r3
   3a778:	mov	r2, r7
   3a77c:	mov	r1, r6
   3a780:	bl	13fb0 <memcpy@plt>
   3a784:	mov	r3, r0
   3a788:	ldrd	r4, [sp]
   3a78c:	mov	r0, r3
   3a790:	ldrd	r6, [sp, #8]
   3a794:	ldr	r8, [sp, #16]
   3a798:	add	sp, sp, #20
   3a79c:	pop	{pc}		; (ldr pc, [sp], #4)
   3a7a0:	add	r1, r1, #1
   3a7a4:	mvn	r2, #3
   3a7a8:	bl	38fe4 <__flatcc_fb_coerce_scalar_type@@Base+0x718>
   3a7ac:	cmp	r0, #0
   3a7b0:	beq	3a768 <flatcc_builder_append_vector@@Base+0x74>
   3a7b4:	mov	r3, r4
   3a7b8:	b	3a788 <flatcc_builder_append_vector@@Base+0x94>
   3a7bc:	ldr	r3, [pc, #32]	; 3a7e4 <flatcc_builder_append_vector@@Base+0xf0>
   3a7c0:	movw	r2, #915	; 0x393
   3a7c4:	ldr	r1, [pc, #28]	; 3a7e8 <flatcc_builder_append_vector@@Base+0xf4>
   3a7c8:	ldr	r0, [pc, #28]	; 3a7ec <flatcc_builder_append_vector@@Base+0xf8>
   3a7cc:	add	r3, pc, r3
   3a7d0:	add	r3, r3, #352	; 0x160
   3a7d4:	add	r1, pc, r1
   3a7d8:	add	r0, pc, r0
   3a7dc:	bl	14118 <__assert_fail@plt>
   3a7e0:	bl	39368 <flatcc_builder_default_alloc@@Base+0x2fc>
   3a7e4:	andeq	r0, r2, r8, lsl #23
   3a7e8:	ldrdeq	r1, [r2], -r0
   3a7ec:	andeq	r1, r2, ip, lsl r4

0003a7f0 <flatcc_builder_extend_offset_vector@@Base>:
   3a7f0:	ldr	ip, [r0, #32]
   3a7f4:	strd	r4, [sp, #-16]!
   3a7f8:	ldr	r3, [ip, #20]
   3a7fc:	str	r6, [sp, #8]
   3a800:	str	lr, [sp, #12]
   3a804:	adds	r2, r1, r3
   3a808:	movcs	r3, #1
   3a80c:	movcc	r3, #0
   3a810:	cmn	r2, #-1073741823	; 0xc0000001
   3a814:	movls	r4, #0
   3a818:	movhi	r4, #1
   3a81c:	orrs	r4, r3, r4
   3a820:	bne	3a878 <flatcc_builder_extend_offset_vector@@Base+0x88>
   3a824:	ldr	r6, [r0, #20]
   3a828:	mov	r5, r0
   3a82c:	ldr	r3, [r0, #24]
   3a830:	str	r2, [ip, #20]
   3a834:	add	r1, r6, r1, lsl #2
   3a838:	cmp	r1, r3
   3a83c:	str	r1, [r0, #20]
   3a840:	bcs	3a85c <flatcc_builder_extend_offset_vector@@Base+0x6c>
   3a844:	ldr	r0, [r5, #16]
   3a848:	add	r0, r0, r6
   3a84c:	ldrd	r4, [sp]
   3a850:	ldr	r6, [sp, #8]
   3a854:	add	sp, sp, #12
   3a858:	pop	{pc}		; (ldr pc, [sp], #4)
   3a85c:	add	r1, r1, #1
   3a860:	mvn	r2, #3
   3a864:	bl	38fe4 <__flatcc_fb_coerce_scalar_type@@Base+0x718>
   3a868:	cmp	r0, #0
   3a86c:	beq	3a844 <flatcc_builder_extend_offset_vector@@Base+0x54>
   3a870:	mov	r0, r4
   3a874:	b	3a84c <flatcc_builder_extend_offset_vector@@Base+0x5c>
   3a878:	bl	39368 <flatcc_builder_default_alloc@@Base+0x2fc>

0003a87c <flatcc_builder_offset_vector_push@@Base>:
   3a87c:	ldr	r2, [r0, #32]
   3a880:	strd	r4, [sp, #-16]!
   3a884:	ldrh	r3, [r2, #14]
   3a888:	str	r6, [sp, #8]
   3a88c:	str	lr, [sp, #12]
   3a890:	cmp	r3, #5
   3a894:	bne	3a910 <flatcc_builder_offset_vector_push@@Base+0x94>
   3a898:	ldr	r3, [r2, #20]
   3a89c:	cmn	r3, #-1073741823	; 0xc0000001
   3a8a0:	beq	3a8fc <flatcc_builder_offset_vector_push@@Base+0x80>
   3a8a4:	ldr	r5, [r0, #20]
   3a8a8:	mov	r6, r1
   3a8ac:	add	r3, r3, #1
   3a8b0:	mov	r4, r0
   3a8b4:	ldr	r1, [r0, #24]
   3a8b8:	str	r3, [r2, #20]
   3a8bc:	add	r3, r5, #4
   3a8c0:	cmp	r3, r1
   3a8c4:	str	r3, [r0, #20]
   3a8c8:	bcs	3a8e8 <flatcc_builder_offset_vector_push@@Base+0x6c>
   3a8cc:	ldr	r3, [r4, #16]
   3a8d0:	adds	r0, r3, r5
   3a8d4:	strne	r6, [r3, r5]
   3a8d8:	ldrd	r4, [sp]
   3a8dc:	ldr	r6, [sp, #8]
   3a8e0:	add	sp, sp, #12
   3a8e4:	pop	{pc}		; (ldr pc, [sp], #4)
   3a8e8:	mvn	r2, #3
   3a8ec:	add	r1, r5, #5
   3a8f0:	bl	38fe4 <__flatcc_fb_coerce_scalar_type@@Base+0x718>
   3a8f4:	cmp	r0, #0
   3a8f8:	beq	3a8cc <flatcc_builder_offset_vector_push@@Base+0x50>
   3a8fc:	ldrd	r4, [sp]
   3a900:	mov	r0, #0
   3a904:	ldr	r6, [sp, #8]
   3a908:	add	sp, sp, #12
   3a90c:	pop	{pc}		; (ldr pc, [sp], #4)
   3a910:	ldr	r3, [pc, #28]	; 3a934 <flatcc_builder_offset_vector_push@@Base+0xb8>
   3a914:	movw	r2, #934	; 0x3a6
   3a918:	ldr	r1, [pc, #24]	; 3a938 <flatcc_builder_offset_vector_push@@Base+0xbc>
   3a91c:	ldr	r0, [pc, #24]	; 3a93c <flatcc_builder_offset_vector_push@@Base+0xc0>
   3a920:	add	r3, pc, r3
   3a924:	add	r3, r3, #384	; 0x180
   3a928:	add	r1, pc, r1
   3a92c:	add	r0, pc, r0
   3a930:	bl	14118 <__assert_fail@plt>
   3a934:	andeq	r0, r2, r4, lsr sl
   3a938:	andeq	r1, r2, ip, ror r1
   3a93c:	andeq	r1, r2, r4, lsr r3

0003a940 <flatcc_builder_append_offset_vector@@Base>:
   3a940:	strd	r4, [sp, #-24]!	; 0xffffffe8
   3a944:	mov	r4, r1
   3a948:	ldr	r1, [r0, #32]
   3a94c:	ldrh	r3, [r1, #14]
   3a950:	strd	r6, [sp, #8]
   3a954:	str	r8, [sp, #16]
   3a958:	str	lr, [sp, #20]
   3a95c:	cmp	r3, #5
   3a960:	bne	3aa00 <flatcc_builder_append_offset_vector@@Base+0xc0>
   3a964:	ldr	r3, [r1, #20]
   3a968:	adds	r3, r2, r3
   3a96c:	movcs	lr, #1
   3a970:	movcc	lr, #0
   3a974:	cmn	r3, #-1073741823	; 0xc0000001
   3a978:	movls	ip, #0
   3a97c:	movhi	ip, #1
   3a980:	orrs	r8, lr, ip
   3a984:	bne	3aa24 <flatcc_builder_append_offset_vector@@Base+0xe4>
   3a988:	ldr	r7, [r0, #20]
   3a98c:	lsl	r6, r2, #2
   3a990:	mov	r5, r0
   3a994:	str	r3, [r1, #20]
   3a998:	ldr	r3, [r0, #24]
   3a99c:	add	r1, r6, r7
   3a9a0:	cmp	r1, r3
   3a9a4:	str	r1, [r0, #20]
   3a9a8:	bcs	3a9e4 <flatcc_builder_append_offset_vector@@Base+0xa4>
   3a9ac:	ldr	r3, [r5, #16]
   3a9b0:	adds	r3, r3, r7
   3a9b4:	beq	3a9cc <flatcc_builder_append_offset_vector@@Base+0x8c>
   3a9b8:	mov	r0, r3
   3a9bc:	mov	r2, r6
   3a9c0:	mov	r1, r4
   3a9c4:	bl	13fb0 <memcpy@plt>
   3a9c8:	mov	r3, r0
   3a9cc:	ldrd	r4, [sp]
   3a9d0:	mov	r0, r3
   3a9d4:	ldrd	r6, [sp, #8]
   3a9d8:	ldr	r8, [sp, #16]
   3a9dc:	add	sp, sp, #20
   3a9e0:	pop	{pc}		; (ldr pc, [sp], #4)
   3a9e4:	add	r1, r1, #1
   3a9e8:	mvn	r2, #3
   3a9ec:	bl	38fe4 <__flatcc_fb_coerce_scalar_type@@Base+0x718>
   3a9f0:	cmp	r0, #0
   3a9f4:	beq	3a9ac <flatcc_builder_append_offset_vector@@Base+0x6c>
   3a9f8:	mov	r3, r8
   3a9fc:	b	3a9cc <flatcc_builder_append_offset_vector@@Base+0x8c>
   3aa00:	ldr	r3, [pc, #32]	; 3aa28 <flatcc_builder_append_offset_vector@@Base+0xe8>
   3aa04:	mov	r2, #948	; 0x3b4
   3aa08:	ldr	r1, [pc, #28]	; 3aa2c <flatcc_builder_append_offset_vector@@Base+0xec>
   3aa0c:	ldr	r0, [pc, #28]	; 3aa30 <flatcc_builder_append_offset_vector@@Base+0xf0>
   3aa10:	add	r3, pc, r3
   3aa14:	add	r3, r3, #420	; 0x1a4
   3aa18:	add	r1, pc, r1
   3aa1c:	add	r0, pc, r0
   3aa20:	bl	14118 <__assert_fail@plt>
   3aa24:	bl	39368 <flatcc_builder_default_alloc@@Base+0x2fc>
   3aa28:	andeq	r0, r2, r4, asr #18
   3aa2c:	andeq	r1, r2, ip, lsl #1
   3aa30:	andeq	r1, r2, r4, asr #4

0003aa34 <flatcc_builder_extend_string@@Base>:
   3aa34:	ldr	r2, [r0, #32]
   3aa38:	strd	r4, [sp, #-16]!
   3aa3c:	ldrh	r3, [r2, #14]
   3aa40:	str	r6, [sp, #8]
   3aa44:	str	lr, [sp, #12]
   3aa48:	cmp	r3, #6
   3aa4c:	bne	3aab4 <flatcc_builder_extend_string@@Base+0x80>
   3aa50:	ldr	r3, [r2, #20]
   3aa54:	adds	r3, r1, r3
   3aa58:	bcs	3aab0 <flatcc_builder_extend_string@@Base+0x7c>
   3aa5c:	ldr	r5, [r0, #20]
   3aa60:	mov	r4, r0
   3aa64:	str	r3, [r2, #20]
   3aa68:	ldr	r3, [r0, #24]
   3aa6c:	add	r1, r1, r5
   3aa70:	cmp	r1, r3
   3aa74:	str	r1, [r0, #20]
   3aa78:	bcs	3aa94 <flatcc_builder_extend_string@@Base+0x60>
   3aa7c:	ldr	r0, [r4, #16]
   3aa80:	add	r0, r0, r5
   3aa84:	ldrd	r4, [sp]
   3aa88:	ldr	r6, [sp, #8]
   3aa8c:	add	sp, sp, #12
   3aa90:	pop	{pc}		; (ldr pc, [sp], #4)
   3aa94:	add	r1, r1, #1
   3aa98:	mvn	r2, #3
   3aa9c:	bl	38fe4 <__flatcc_fb_coerce_scalar_type@@Base+0x718>
   3aaa0:	cmp	r0, #0
   3aaa4:	beq	3aa7c <flatcc_builder_extend_string@@Base+0x48>
   3aaa8:	mov	r0, #0
   3aaac:	b	3aa84 <flatcc_builder_extend_string@@Base+0x50>
   3aab0:	bl	39368 <flatcc_builder_default_alloc@@Base+0x2fc>
   3aab4:	ldr	r3, [pc, #28]	; 3aad8 <flatcc_builder_extend_string@@Base+0xa4>
   3aab8:	movw	r2, #957	; 0x3bd
   3aabc:	ldr	r1, [pc, #24]	; 3aadc <flatcc_builder_extend_string@@Base+0xa8>
   3aac0:	ldr	r0, [pc, #24]	; 3aae0 <flatcc_builder_extend_string@@Base+0xac>
   3aac4:	add	r3, pc, r3
   3aac8:	add	r3, r3, #456	; 0x1c8
   3aacc:	add	r1, pc, r1
   3aad0:	add	r0, pc, r0
   3aad4:	bl	14118 <__assert_fail@plt>
   3aad8:	muleq	r2, r0, r8
   3aadc:	ldrdeq	r0, [r2], -r8
   3aae0:	andeq	r1, r2, r4, asr #3

0003aae4 <flatcc_builder_append_string@@Base>:
   3aae4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   3aae8:	strd	r6, [sp, #8]
   3aaec:	mov	r7, r1
   3aaf0:	ldr	r1, [r0, #32]
   3aaf4:	str	r8, [sp, #16]
   3aaf8:	str	lr, [sp, #20]
   3aafc:	ldrh	r3, [r1, #14]
   3ab00:	cmp	r3, #6
   3ab04:	bne	3ab90 <flatcc_builder_append_string@@Base+0xac>
   3ab08:	ldr	r3, [r1, #20]
   3ab0c:	mov	r5, r2
   3ab10:	adds	r3, r2, r3
   3ab14:	bcs	3ab8c <flatcc_builder_append_string@@Base+0xa8>
   3ab18:	ldr	r6, [r0, #20]
   3ab1c:	mov	r4, r0
   3ab20:	str	r3, [r1, #20]
   3ab24:	ldr	r3, [r0, #24]
   3ab28:	add	r1, r2, r6
   3ab2c:	cmp	r1, r3
   3ab30:	str	r1, [r0, #20]
   3ab34:	bcs	3ab70 <flatcc_builder_append_string@@Base+0x8c>
   3ab38:	ldr	r3, [r4, #16]
   3ab3c:	adds	r3, r3, r6
   3ab40:	beq	3ab58 <flatcc_builder_append_string@@Base+0x74>
   3ab44:	mov	r0, r3
   3ab48:	mov	r2, r5
   3ab4c:	mov	r1, r7
   3ab50:	bl	13fb0 <memcpy@plt>
   3ab54:	mov	r3, r0
   3ab58:	ldrd	r4, [sp]
   3ab5c:	mov	r0, r3
   3ab60:	ldrd	r6, [sp, #8]
   3ab64:	ldr	r8, [sp, #16]
   3ab68:	add	sp, sp, #20
   3ab6c:	pop	{pc}		; (ldr pc, [sp], #4)
   3ab70:	add	r1, r1, #1
   3ab74:	mvn	r2, #3
   3ab78:	bl	38fe4 <__flatcc_fb_coerce_scalar_type@@Base+0x718>
   3ab7c:	cmp	r0, #0
   3ab80:	beq	3ab38 <flatcc_builder_append_string@@Base+0x54>
   3ab84:	mov	r3, #0
   3ab88:	b	3ab58 <flatcc_builder_append_string@@Base+0x74>
   3ab8c:	bl	39368 <flatcc_builder_default_alloc@@Base+0x2fc>
   3ab90:	ldr	r3, [pc, #28]	; 3abb4 <flatcc_builder_append_string@@Base+0xd0>
   3ab94:	movw	r2, #966	; 0x3c6
   3ab98:	ldr	r1, [pc, #24]	; 3abb8 <flatcc_builder_append_string@@Base+0xd4>
   3ab9c:	ldr	r0, [pc, #24]	; 3abbc <flatcc_builder_append_string@@Base+0xd8>
   3aba0:	add	r3, pc, r3
   3aba4:	add	r3, r3, #488	; 0x1e8
   3aba8:	add	r1, pc, r1
   3abac:	add	r0, pc, r0
   3abb0:	bl	14118 <__assert_fail@plt>
   3abb4:			; <UNDEFINED> instruction: 0x000207b4
   3abb8:	strdeq	r0, [r2], -ip
   3abbc:	andeq	r1, r2, r8, ror #1

0003abc0 <flatcc_builder_append_string_str@@Base>:
   3abc0:	strd	r4, [sp, #-16]!
   3abc4:	mov	r5, r0
   3abc8:	mov	r0, r1
   3abcc:	mov	r4, r1
   3abd0:	str	r6, [sp, #8]
   3abd4:	str	lr, [sp, #12]
   3abd8:	bl	1404c <strlen@plt>
   3abdc:	mov	r2, r0
   3abe0:	mov	r1, r4
   3abe4:	ldr	r6, [sp, #8]
   3abe8:	mov	r0, r5
   3abec:	ldrd	r4, [sp]
   3abf0:	ldr	lr, [sp, #12]
   3abf4:	add	sp, sp, #16
   3abf8:	b	3aae4 <flatcc_builder_append_string@@Base>

0003abfc <flatcc_builder_append_string_strn@@Base>:
   3abfc:	strd	r4, [sp, #-16]!
   3ac00:	mov	r4, r1
   3ac04:	mov	r1, #0
   3ac08:	str	r6, [sp, #8]
   3ac0c:	mov	r6, r0
   3ac10:	mov	r0, r4
   3ac14:	mov	r5, r2
   3ac18:	str	lr, [sp, #12]
   3ac1c:	bl	140a0 <memchr@plt>
   3ac20:	cmp	r0, #0
   3ac24:	mov	r1, r4
   3ac28:	ldr	lr, [sp, #12]
   3ac2c:	subne	r5, r0, r4
   3ac30:	mov	r0, r6
   3ac34:	mov	r2, r5
   3ac38:	ldrd	r4, [sp]
   3ac3c:	ldr	r6, [sp, #8]
   3ac40:	add	sp, sp, #16
   3ac44:	b	3aae4 <flatcc_builder_append_string@@Base>

0003ac48 <flatcc_builder_truncate_vector@@Base>:
   3ac48:	mov	r3, r0
   3ac4c:	ldr	r0, [r0, #32]
   3ac50:	str	r4, [sp, #-8]!
   3ac54:	ldrh	r2, [r0, #14]
   3ac58:	str	lr, [sp, #4]
   3ac5c:	cmp	r2, #4
   3ac60:	bne	3acb0 <flatcc_builder_truncate_vector@@Base+0x68>
   3ac64:	mov	lr, r1
   3ac68:	ldr	r1, [r0, #20]
   3ac6c:	cmp	r1, lr
   3ac70:	bcc	3acd4 <flatcc_builder_truncate_vector@@Base+0x8c>
   3ac74:	ldr	r2, [r0, #16]
   3ac78:	sub	ip, r1, lr
   3ac7c:	mov	r1, #0
   3ac80:	str	ip, [r0, #20]
   3ac84:	ldr	r0, [r3, #16]
   3ac88:	ldr	ip, [r3, #20]
   3ac8c:	mul	r2, r2, lr
   3ac90:	sub	ip, ip, r2
   3ac94:	add	r0, r0, ip
   3ac98:	str	ip, [r3, #20]
   3ac9c:	bl	1407c <memset@plt>
   3aca0:	ldr	r4, [sp]
   3aca4:	add	sp, sp, #4
   3aca8:	mov	r0, #0
   3acac:	pop	{pc}		; (ldr pc, [sp], #4)
   3acb0:	ldr	r3, [pc, #64]	; 3acf8 <flatcc_builder_truncate_vector@@Base+0xb0>
   3acb4:	movw	r2, #985	; 0x3d9
   3acb8:	ldr	r1, [pc, #60]	; 3acfc <flatcc_builder_truncate_vector@@Base+0xb4>
   3acbc:	ldr	r0, [pc, #60]	; 3ad00 <flatcc_builder_truncate_vector@@Base+0xb8>
   3acc0:	add	r3, pc, r3
   3acc4:	add	r3, r3, #520	; 0x208
   3acc8:	add	r1, pc, r1
   3accc:	add	r0, pc, r0
   3acd0:	bl	14118 <__assert_fail@plt>
   3acd4:	ldr	r3, [pc, #40]	; 3ad04 <flatcc_builder_truncate_vector@@Base+0xbc>
   3acd8:	movw	r2, #986	; 0x3da
   3acdc:	ldr	r1, [pc, #36]	; 3ad08 <flatcc_builder_truncate_vector@@Base+0xc0>
   3ace0:	ldr	r0, [pc, #36]	; 3ad0c <flatcc_builder_truncate_vector@@Base+0xc4>
   3ace4:	add	r3, pc, r3
   3ace8:	add	r3, r3, #520	; 0x208
   3acec:	add	r1, pc, r1
   3acf0:	add	r0, pc, r0
   3acf4:	bl	14118 <__assert_fail@plt>
   3acf8:	muleq	r2, r4, r6
   3acfc:	ldrdeq	r0, [r2], -ip
   3ad00:	andeq	r0, r2, r8, lsr #30
   3ad04:	andeq	r0, r2, r0, ror r6
   3ad08:			; <UNDEFINED> instruction: 0x00020db8
   3ad0c:	ldrdeq	r0, [r2], -r0	; <UNPREDICTABLE>

0003ad10 <flatcc_builder_truncate_offset_vector@@Base>:
   3ad10:	mov	r3, r0
   3ad14:	ldr	r0, [r0, #32]
   3ad18:	str	r4, [sp, #-8]!
   3ad1c:	ldrh	r2, [r0, #14]
   3ad20:	str	lr, [sp, #4]
   3ad24:	cmp	r2, #5
   3ad28:	bne	3ad78 <flatcc_builder_truncate_offset_vector@@Base+0x68>
   3ad2c:	mov	lr, r1
   3ad30:	ldr	r1, [r0, #20]
   3ad34:	cmp	r1, lr
   3ad38:	bcc	3ad9c <flatcc_builder_truncate_offset_vector@@Base+0x8c>
   3ad3c:	ldr	r2, [r0, #16]
   3ad40:	sub	ip, r1, lr
   3ad44:	mov	r1, #0
   3ad48:	str	ip, [r0, #20]
   3ad4c:	ldr	r0, [r3, #16]
   3ad50:	ldr	ip, [r3, #20]
   3ad54:	mul	r2, r2, lr
   3ad58:	sub	ip, ip, r2
   3ad5c:	add	r0, r0, ip
   3ad60:	str	ip, [r3, #20]
   3ad64:	bl	1407c <memset@plt>
   3ad68:	ldr	r4, [sp]
   3ad6c:	add	sp, sp, #4
   3ad70:	mov	r0, #0
   3ad74:	pop	{pc}		; (ldr pc, [sp], #4)
   3ad78:	ldr	r3, [pc, #64]	; 3adc0 <flatcc_builder_truncate_offset_vector@@Base+0xb0>
   3ad7c:	movw	r2, #994	; 0x3e2
   3ad80:	ldr	r1, [pc, #60]	; 3adc4 <flatcc_builder_truncate_offset_vector@@Base+0xb4>
   3ad84:	ldr	r0, [pc, #60]	; 3adc8 <flatcc_builder_truncate_offset_vector@@Base+0xb8>
   3ad88:	add	r3, pc, r3
   3ad8c:	add	r3, r3, #552	; 0x228
   3ad90:	add	r1, pc, r1
   3ad94:	add	r0, pc, r0
   3ad98:	bl	14118 <__assert_fail@plt>
   3ad9c:	ldr	r3, [pc, #40]	; 3adcc <flatcc_builder_truncate_offset_vector@@Base+0xbc>
   3ada0:	movw	r2, #995	; 0x3e3
   3ada4:	ldr	r1, [pc, #36]	; 3add0 <flatcc_builder_truncate_offset_vector@@Base+0xc0>
   3ada8:	ldr	r0, [pc, #36]	; 3add4 <flatcc_builder_truncate_offset_vector@@Base+0xc4>
   3adac:	add	r3, pc, r3
   3adb0:	add	r3, r3, #552	; 0x228
   3adb4:	add	r1, pc, r1
   3adb8:	add	r0, pc, r0
   3adbc:	bl	14118 <__assert_fail@plt>
   3adc0:	andeq	r0, r2, ip, asr #11
   3adc4:	andeq	r0, r2, r4, lsl sp
   3adc8:	andeq	r0, r2, ip, asr #29
   3adcc:	andeq	r0, r2, r8, lsr #11
   3add0:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   3add4:	andeq	r0, r2, ip, lsr #30

0003add8 <flatcc_builder_truncate_string@@Base>:
   3add8:	str	r4, [sp, #-8]!
   3addc:	str	lr, [sp, #4]
   3ade0:	ldr	lr, [r0, #32]
   3ade4:	ldrh	r2, [lr, #14]
   3ade8:	cmp	r2, #6
   3adec:	bne	3ae3c <flatcc_builder_truncate_string@@Base+0x64>
   3adf0:	ldr	r2, [lr, #20]
   3adf4:	mov	ip, r1
   3adf8:	cmp	r2, r1
   3adfc:	bcc	3ae60 <flatcc_builder_truncate_string@@Base+0x88>
   3ae00:	sub	r1, r2, r1
   3ae04:	mov	r3, r0
   3ae08:	ldr	r0, [r0, #16]
   3ae0c:	mov	r2, ip
   3ae10:	str	r1, [lr, #20]
   3ae14:	mov	r1, #0
   3ae18:	ldr	lr, [r3, #20]
   3ae1c:	sub	ip, lr, ip
   3ae20:	add	r0, r0, ip
   3ae24:	str	ip, [r3, #20]
   3ae28:	bl	1407c <memset@plt>
   3ae2c:	ldr	r4, [sp]
   3ae30:	add	sp, sp, #4
   3ae34:	mov	r0, #0
   3ae38:	pop	{pc}		; (ldr pc, [sp], #4)
   3ae3c:	ldr	r3, [pc, #64]	; 3ae84 <flatcc_builder_truncate_string@@Base+0xac>
   3ae40:	movw	r2, #1003	; 0x3eb
   3ae44:	ldr	r1, [pc, #60]	; 3ae88 <flatcc_builder_truncate_string@@Base+0xb0>
   3ae48:	ldr	r0, [pc, #60]	; 3ae8c <flatcc_builder_truncate_string@@Base+0xb4>
   3ae4c:	add	r3, pc, r3
   3ae50:	add	r3, r3, #592	; 0x250
   3ae54:	add	r1, pc, r1
   3ae58:	add	r0, pc, r0
   3ae5c:	bl	14118 <__assert_fail@plt>
   3ae60:	ldr	r3, [pc, #40]	; 3ae90 <flatcc_builder_truncate_string@@Base+0xb8>
   3ae64:	mov	r2, #1004	; 0x3ec
   3ae68:	ldr	r1, [pc, #36]	; 3ae94 <flatcc_builder_truncate_string@@Base+0xbc>
   3ae6c:	ldr	r0, [pc, #36]	; 3ae98 <flatcc_builder_truncate_string@@Base+0xc0>
   3ae70:	add	r3, pc, r3
   3ae74:	add	r3, r3, #592	; 0x250
   3ae78:	add	r1, pc, r1
   3ae7c:	add	r0, pc, r0
   3ae80:	bl	14118 <__assert_fail@plt>
   3ae84:	andeq	r0, r2, r8, lsl #10
   3ae88:	andeq	r0, r2, r0, asr ip
   3ae8c:	andeq	r0, r2, ip, lsr lr
   3ae90:	andeq	r0, r2, r4, ror #9
   3ae94:	andeq	r0, r2, ip, lsr #24
   3ae98:	andeq	r0, r2, r4, lsr #29

0003ae9c <flatcc_builder_start_vector@@Base>:
   3ae9c:	cmp	r2, #4
   3aea0:	strd	r4, [sp, #-16]!
   3aea4:	mov	r5, r1
   3aea8:	movcs	r1, r2
   3aeac:	movcc	r1, #4
   3aeb0:	str	r6, [sp, #8]
   3aeb4:	mov	r4, r0
   3aeb8:	mov	r6, r3
   3aebc:	str	lr, [sp, #12]
   3aec0:	bl	393a0 <flatcc_builder_default_alloc@@Base+0x334>
   3aec4:	cmp	r0, #0
   3aec8:	bne	3af24 <flatcc_builder_start_vector@@Base+0x88>
   3aecc:	ldr	r3, [r4, #28]
   3aed0:	mov	lr, #4
   3aed4:	ldr	r2, [r4, #32]
   3aed8:	ldr	r1, [r4, #64]	; 0x40
   3aedc:	ldr	ip, [r4, #60]	; 0x3c
   3aee0:	strh	lr, [r2, #14]
   3aee4:	str	r5, [r2, #16]
   3aee8:	sub	r1, r1, r3
   3aeec:	str	r0, [r2, #20]
   3aef0:	cmn	r1, #4
   3aef4:	str	r6, [r2, #24]
   3aef8:	add	ip, ip, r3
   3aefc:	mvnhi	r3, #3
   3af00:	strls	r1, [r4, #24]
   3af04:	strhi	r3, [r4, #24]
   3af08:	mvn	r3, #3
   3af0c:	str	ip, [r4, #16]
   3af10:	str	r3, [r2, #4]
   3af14:	ldrd	r4, [sp]
   3af18:	ldr	r6, [sp, #8]
   3af1c:	add	sp, sp, #12
   3af20:	pop	{pc}		; (ldr pc, [sp], #4)
   3af24:	mvn	r0, #0
   3af28:	b	3af14 <flatcc_builder_start_vector@@Base+0x78>

0003af2c <flatcc_builder_start_offset_vector@@Base>:
   3af2c:	mov	r1, #4
   3af30:	strd	r4, [sp, #-16]!
   3af34:	mov	r4, r0
   3af38:	str	r6, [sp, #8]
   3af3c:	str	lr, [sp, #12]
   3af40:	bl	393a0 <flatcc_builder_default_alloc@@Base+0x334>
   3af44:	cmp	r0, #0
   3af48:	bne	3afa0 <flatcc_builder_start_offset_vector@@Base+0x74>
   3af4c:	ldr	ip, [r4, #28]
   3af50:	mov	lr, #4
   3af54:	mov	r5, #5
   3af58:	ldr	r3, [r4, #32]
   3af5c:	ldr	r2, [r4, #64]	; 0x40
   3af60:	ldr	r1, [r4, #60]	; 0x3c
   3af64:	strh	r5, [r3, #14]
   3af68:	str	lr, [r3, #16]
   3af6c:	sub	r2, r2, ip
   3af70:	str	r0, [r3, #20]
   3af74:	cmn	r2, #4
   3af78:	mvnhi	r2, #3
   3af7c:	add	r1, r1, ip
   3af80:	str	r1, [r4, #16]
   3af84:	str	r2, [r4, #24]
   3af88:	mvn	r2, #3
   3af8c:	str	r2, [r3, #4]
   3af90:	ldrd	r4, [sp]
   3af94:	ldr	r6, [sp, #8]
   3af98:	add	sp, sp, #12
   3af9c:	pop	{pc}		; (ldr pc, [sp], #4)
   3afa0:	mvn	r0, #0
   3afa4:	b	3af90 <flatcc_builder_start_offset_vector@@Base+0x64>

0003afa8 <flatcc_builder_start_string@@Base>:
   3afa8:	mov	r1, #1
   3afac:	strd	r4, [sp, #-16]!
   3afb0:	mov	r4, r0
   3afb4:	str	r6, [sp, #8]
   3afb8:	str	lr, [sp, #12]
   3afbc:	bl	393a0 <flatcc_builder_default_alloc@@Base+0x334>
   3afc0:	cmp	r0, #0
   3afc4:	bne	3b01c <flatcc_builder_start_string@@Base+0x74>
   3afc8:	ldr	ip, [r4, #28]
   3afcc:	mov	lr, #1
   3afd0:	mov	r5, #6
   3afd4:	ldr	r3, [r4, #32]
   3afd8:	ldr	r2, [r4, #64]	; 0x40
   3afdc:	ldr	r1, [r4, #60]	; 0x3c
   3afe0:	strh	r5, [r3, #14]
   3afe4:	str	lr, [r3, #16]
   3afe8:	sub	r2, r2, ip
   3afec:	str	r0, [r3, #20]
   3aff0:	cmn	r2, #4
   3aff4:	mvnhi	r2, #3
   3aff8:	add	r1, r1, ip
   3affc:	str	r1, [r4, #16]
   3b000:	str	r2, [r4, #24]
   3b004:	mvn	r2, #3
   3b008:	str	r2, [r3, #4]
   3b00c:	ldrd	r4, [sp]
   3b010:	ldr	r6, [sp, #8]
   3b014:	add	sp, sp, #12
   3b018:	pop	{pc}		; (ldr pc, [sp], #4)
   3b01c:	mvn	r0, #0
   3b020:	b	3b00c <flatcc_builder_start_string@@Base+0x64>

0003b024 <flatcc_builder_reserve_table@@Base>:
   3b024:	cmp	r1, #0
   3b028:	strd	r4, [sp, #-20]!	; 0xffffffec
   3b02c:	strd	r6, [sp, #8]
   3b030:	str	lr, [sp, #16]
   3b034:	sub	sp, sp, #12
   3b038:	blt	3b11c <flatcc_builder_reserve_table@@Base+0xf8>
   3b03c:	ldr	r2, [r0, #32]
   3b040:	add	r1, r1, #2
   3b044:	mov	r4, r0
   3b048:	lsl	r5, r1, #1
   3b04c:	ldr	r1, [r0, #56]	; 0x38
   3b050:	ldrh	r6, [r2, #28]
   3b054:	ldr	r3, [r2, #16]
   3b058:	add	r6, r3, r6, lsl #1
   3b05c:	add	r2, r6, r5
   3b060:	cmp	r2, r1
   3b064:	bhi	3b0cc <flatcc_builder_reserve_table@@Base+0xa8>
   3b068:	ldr	r3, [r4, #52]	; 0x34
   3b06c:	adds	r3, r3, r6
   3b070:	mvneq	r0, #0
   3b074:	streq	r3, [r4, #4]
   3b078:	beq	3b0b8 <flatcc_builder_reserve_table@@Base+0x94>
   3b07c:	ldr	r2, [r4, #32]
   3b080:	add	r3, r3, #4
   3b084:	ldr	r1, [r4, #80]	; 0x50
   3b088:	ldr	r6, [r2, #20]
   3b08c:	str	r3, [r4, #4]
   3b090:	add	r2, r5, r6
   3b094:	sub	r2, r2, #3
   3b098:	cmp	r2, r1
   3b09c:	bhi	3b0f4 <flatcc_builder_reserve_table@@Base+0xd0>
   3b0a0:	ldr	r3, [r4, #76]	; 0x4c
   3b0a4:	add	r3, r3, r6
   3b0a8:	clz	r0, r3
   3b0ac:	lsr	r0, r0, #5
   3b0b0:	str	r3, [r4]
   3b0b4:	rsb	r0, r0, #0
   3b0b8:	add	sp, sp, #12
   3b0bc:	ldrd	r4, [sp]
   3b0c0:	ldrd	r6, [sp, #8]
   3b0c4:	add	sp, sp, #16
   3b0c8:	pop	{pc}		; (ldr pc, [sp], #4)
   3b0cc:	mov	ip, #0
   3b0d0:	add	r1, r0, #52	; 0x34
   3b0d4:	ldr	r0, [r0, #40]	; 0x28
   3b0d8:	mov	r3, #1
   3b0dc:	str	ip, [sp]
   3b0e0:	ldr	r7, [r4, #48]	; 0x30
   3b0e4:	blx	r7
   3b0e8:	cmp	r0, #0
   3b0ec:	beq	3b068 <flatcc_builder_reserve_table@@Base+0x44>
   3b0f0:	bl	39190 <flatcc_builder_default_alloc@@Base+0x124>
   3b0f4:	mov	ip, #3
   3b0f8:	mov	r3, #0
   3b0fc:	ldr	r0, [r4, #40]	; 0x28
   3b100:	add	r1, r4, #76	; 0x4c
   3b104:	str	ip, [sp]
   3b108:	ldr	r5, [r4, #48]	; 0x30
   3b10c:	blx	r5
   3b110:	cmp	r0, #0
   3b114:	beq	3b0a0 <flatcc_builder_reserve_table@@Base+0x7c>
   3b118:	b	3b0f0 <flatcc_builder_reserve_table@@Base+0xcc>
   3b11c:	ldr	r3, [pc, #28]	; 3b140 <flatcc_builder_reserve_table@@Base+0x11c>
   3b120:	movw	r2, #1065	; 0x429
   3b124:	ldr	r1, [pc, #24]	; 3b144 <flatcc_builder_reserve_table@@Base+0x120>
   3b128:	ldr	r0, [pc, #24]	; 3b148 <flatcc_builder_reserve_table@@Base+0x124>
   3b12c:	add	r3, pc, r3
   3b130:	add	r3, r3, #624	; 0x270
   3b134:	add	r1, pc, r1
   3b138:	add	r0, pc, r0
   3b13c:	bl	14118 <__assert_fail@plt>
   3b140:	andeq	r0, r2, r8, lsr #4
   3b144:	andeq	r0, r2, r0, ror r9
   3b148:	andeq	r0, r2, ip, lsl #24

0003b14c <flatcc_builder_start_table@@Base>:
   3b14c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   3b150:	mov	r5, r1
   3b154:	mov	r1, #4
   3b158:	strd	r6, [sp, #8]
   3b15c:	mov	r4, r0
   3b160:	strd	r8, [sp, #16]
   3b164:	str	sl, [sp, #24]
   3b168:	str	lr, [sp, #28]
   3b16c:	sub	sp, sp, #8
   3b170:	bl	393a0 <flatcc_builder_default_alloc@@Base+0x334>
   3b174:	subs	r7, r0, #0
   3b178:	bne	3b2c0 <flatcc_builder_start_table@@Base+0x174>
   3b17c:	ldm	r4, {r0, r2}
   3b180:	add	r5, r5, #2
   3b184:	movw	ip, #15186	; 0x3b52
   3b188:	movt	ip, #12137	; 0x2f69
   3b18c:	lsl	r5, r5, #1
   3b190:	mov	r8, #3
   3b194:	ldrh	lr, [r4, #8]
   3b198:	ldr	r1, [r4, #52]	; 0x34
   3b19c:	ldr	sl, [r4, #76]	; 0x4c
   3b1a0:	ldr	r3, [r4, #32]
   3b1a4:	sub	r2, r2, r1
   3b1a8:	ldr	r9, [r4, #56]	; 0x38
   3b1ac:	add	r6, r2, lr, lsl #1
   3b1b0:	sub	r0, r0, sl
   3b1b4:	ldr	sl, [r4, #12]
   3b1b8:	str	r2, [r3, #16]
   3b1bc:	add	r2, r6, r5
   3b1c0:	str	r0, [r3, #20]
   3b1c4:	cmp	r2, r9
   3b1c8:	str	sl, [r3, #24]
   3b1cc:	strh	lr, [r3, #28]
   3b1d0:	strh	r7, [r4, #8]
   3b1d4:	str	ip, [r4, #12]
   3b1d8:	strh	r8, [r3, #14]
   3b1dc:	bls	3b204 <flatcc_builder_start_table@@Base+0xb8>
   3b1e0:	mov	r3, #1
   3b1e4:	add	r1, r4, #52	; 0x34
   3b1e8:	str	r7, [sp]
   3b1ec:	ldr	r0, [r4, #40]	; 0x28
   3b1f0:	ldr	r8, [r4, #48]	; 0x30
   3b1f4:	blx	r8
   3b1f8:	cmp	r0, #0
   3b1fc:	bne	3b2bc <flatcc_builder_start_table@@Base+0x170>
   3b200:	ldr	r1, [r4, #52]	; 0x34
   3b204:	adds	r6, r6, r1
   3b208:	streq	r6, [r4, #4]
   3b20c:	beq	3b2c0 <flatcc_builder_start_table@@Base+0x174>
   3b210:	ldr	r1, [r4, #32]
   3b214:	sub	r2, r5, #3
   3b218:	add	r6, r6, #4
   3b21c:	ldr	r3, [r4, #80]	; 0x50
   3b220:	ldr	r5, [r1, #20]
   3b224:	str	r6, [r4, #4]
   3b228:	add	r2, r2, r5
   3b22c:	cmp	r2, r3
   3b230:	bhi	3b298 <flatcc_builder_start_table@@Base+0x14c>
   3b234:	ldr	r3, [r4, #76]	; 0x4c
   3b238:	add	r3, r3, r5
   3b23c:	cmp	r3, #0
   3b240:	str	r3, [r4]
   3b244:	beq	3b2c0 <flatcc_builder_start_table@@Base+0x174>
   3b248:	ldr	r0, [r4, #28]
   3b24c:	movw	r2, #65532	; 0xfffc
   3b250:	ldr	ip, [r4, #32]
   3b254:	ldr	r3, [r4, #64]	; 0x40
   3b258:	ldr	r1, [r4, #60]	; 0x3c
   3b25c:	sub	r3, r3, r0
   3b260:	cmp	r3, r2
   3b264:	add	r1, r1, r0
   3b268:	movcs	r3, r2
   3b26c:	str	r1, [r4, #16]
   3b270:	str	r3, [r4, #24]
   3b274:	str	r2, [ip, #4]
   3b278:	mov	r0, r7
   3b27c:	add	sp, sp, #8
   3b280:	ldrd	r4, [sp]
   3b284:	ldrd	r6, [sp, #8]
   3b288:	ldrd	r8, [sp, #16]
   3b28c:	ldr	sl, [sp, #24]
   3b290:	add	sp, sp, #28
   3b294:	pop	{pc}		; (ldr pc, [sp], #4)
   3b298:	mov	ip, #3
   3b29c:	mov	r3, #0
   3b2a0:	ldr	r0, [r4, #40]	; 0x28
   3b2a4:	add	r1, r4, #76	; 0x4c
   3b2a8:	str	ip, [sp]
   3b2ac:	ldr	r6, [r4, #48]	; 0x30
   3b2b0:	blx	r6
   3b2b4:	cmp	r0, #0
   3b2b8:	beq	3b234 <flatcc_builder_start_table@@Base+0xe8>
   3b2bc:	bl	39190 <flatcc_builder_default_alloc@@Base+0x124>
   3b2c0:	mvn	r7, #0
   3b2c4:	b	3b278 <flatcc_builder_start_table@@Base+0x12c>

0003b2c8 <flatcc_builder_create_vtable@@Base>:
   3b2c8:	mov	r3, #0
   3b2cc:	strd	r4, [sp, #-16]!
   3b2d0:	mov	r5, r0
   3b2d4:	ldr	r0, [r0, #152]	; 0x98
   3b2d8:	cmp	r2, #0
   3b2dc:	str	r6, [sp, #8]
   3b2e0:	str	lr, [sp, #12]
   3b2e4:	sub	sp, sp, #80	; 0x50
   3b2e8:	str	r3, [sp, #8]
   3b2ec:	str	r3, [sp, #12]
   3b2f0:	beq	3b368 <flatcc_builder_create_vtable@@Base+0xa0>
   3b2f4:	mov	r3, #1
   3b2f8:	cmp	r0, #0
   3b2fc:	strd	r2, [sp, #8]
   3b300:	str	r1, [sp, #16]
   3b304:	str	r2, [sp, #20]
   3b308:	beq	3b3a0 <flatcc_builder_create_vtable@@Base+0xd8>
   3b30c:	ldr	r3, [r5, #136]	; 0x88
   3b310:	sub	r4, r3, r2
   3b314:	cmp	r3, r4
   3b318:	ble	3b37c <flatcc_builder_create_vtable@@Base+0xb4>
   3b31c:	mov	r3, r4
   3b320:	add	r1, sp, #16
   3b324:	str	r2, [sp]
   3b328:	ldr	r2, [sp, #12]
   3b32c:	ldr	r0, [r5, #36]	; 0x24
   3b330:	ldr	r6, [r5, #44]	; 0x2c
   3b334:	blx	r6
   3b338:	cmp	r0, #0
   3b33c:	bne	3b3ec <flatcc_builder_create_vtable@@Base+0x124>
   3b340:	cmp	r4, #0
   3b344:	str	r4, [r5, #136]	; 0x88
   3b348:	beq	3b350 <flatcc_builder_create_vtable@@Base+0x88>
   3b34c:	add	r4, r4, #1
   3b350:	mov	r0, r4
   3b354:	add	sp, sp, #80	; 0x50
   3b358:	ldrd	r4, [sp]
   3b35c:	ldr	r6, [sp, #8]
   3b360:	add	sp, sp, #12
   3b364:	pop	{pc}		; (ldr pc, [sp], #4)
   3b368:	cmp	r0, #0
   3b36c:	bne	3b37c <flatcc_builder_create_vtable@@Base+0xb4>
   3b370:	ldr	r3, [r5, #180]	; 0xb4
   3b374:	cmp	r3, #0
   3b378:	beq	3b3e4 <flatcc_builder_create_vtable@@Base+0x11c>
   3b37c:	ldr	r3, [pc, #108]	; 3b3f0 <flatcc_builder_create_vtable@@Base+0x128>
   3b380:	movw	r2, #647	; 0x287
   3b384:	ldr	r1, [pc, #104]	; 3b3f4 <flatcc_builder_create_vtable@@Base+0x12c>
   3b388:	ldr	r0, [pc, #104]	; 3b3f8 <flatcc_builder_create_vtable@@Base+0x130>
   3b38c:	add	r3, pc, r3
   3b390:	add	r3, r3, #44	; 0x2c
   3b394:	add	r1, pc, r1
   3b398:	add	r0, pc, r0
   3b39c:	bl	14118 <__assert_fail@plt>
   3b3a0:	ldr	r3, [r5, #180]	; 0xb4
   3b3a4:	cmp	r3, #0
   3b3a8:	bne	3b30c <flatcc_builder_create_vtable@@Base+0x44>
   3b3ac:	ldr	r4, [r5, #140]	; 0x8c
   3b3b0:	mov	r0, r2
   3b3b4:	add	r2, r4, r2
   3b3b8:	str	r2, [r5, #140]	; 0x8c
   3b3bc:	mov	r3, r4
   3b3c0:	add	r1, sp, #16
   3b3c4:	str	r0, [sp]
   3b3c8:	ldr	r2, [sp, #12]
   3b3cc:	ldr	r0, [r5, #36]	; 0x24
   3b3d0:	ldr	r5, [r5, #44]	; 0x2c
   3b3d4:	blx	r5
   3b3d8:	cmp	r0, #0
   3b3dc:	beq	3b34c <flatcc_builder_create_vtable@@Base+0x84>
   3b3e0:	bl	391c4 <flatcc_builder_default_alloc@@Base+0x158>
   3b3e4:	ldr	r4, [r5, #140]	; 0x8c
   3b3e8:	b	3b3bc <flatcc_builder_create_vtable@@Base+0xf4>
   3b3ec:	bl	39330 <flatcc_builder_default_alloc@@Base+0x2c4>
   3b3f0:	andeq	pc, r1, r8, asr #31
   3b3f4:	andeq	r0, r2, r0, lsl r7
   3b3f8:	muleq	r0, ip, pc	; <UNPREDICTABLE>

0003b3fc <flatcc_builder_create_cached_vtable@@Base>:
   3b3fc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   3b400:	strd	r6, [sp, #8]
   3b404:	mov	r6, r0
   3b408:	strd	r8, [sp, #16]
   3b40c:	mov	r9, r2
   3b410:	mov	r8, r3
   3b414:	strd	sl, [sp, #24]
   3b418:	str	lr, [sp, #32]
   3b41c:	sub	sp, sp, #28
   3b420:	str	r1, [sp, #8]
   3b424:	ldr	r1, [r0, #116]	; 0x74
   3b428:	cmp	r1, #0
   3b42c:	rsbne	r1, r1, #32
   3b430:	beq	3b5b8 <flatcc_builder_create_cached_vtable@@Base+0x1bc>
   3b434:	ldr	sl, [r6, #92]	; 0x5c
   3b438:	lsr	r8, r8, r1
   3b43c:	adds	fp, sl, r8, lsl #2
   3b440:	str	fp, [sp, #12]
   3b444:	beq	3b654 <flatcc_builder_create_cached_vtable@@Base+0x258>
   3b448:	ldr	r5, [sl, r8, lsl #2]
   3b44c:	cmp	r5, #0
   3b450:	beq	3b688 <flatcc_builder_create_cached_vtable@@Base+0x28c>
   3b454:	mov	r3, #0
   3b458:	str	r8, [sp, #16]
   3b45c:	mov	r8, fp
   3b460:	mov	fp, r6
   3b464:	ldr	r7, [r6, #68]	; 0x44
   3b468:	str	r3, [sp, #20]
   3b46c:	ldr	r3, [r6, #100]	; 0x64
   3b470:	mov	r6, r3
   3b474:	add	r4, r6, r5
   3b478:	ldr	r1, [r4, #8]
   3b47c:	ldrh	r2, [r7, r1]
   3b480:	add	r1, r7, r1
   3b484:	cmp	r2, r9
   3b488:	bne	3b564 <flatcc_builder_create_cached_vtable@@Base+0x168>
   3b48c:	mov	r2, r9
   3b490:	ldr	r0, [sp, #8]
   3b494:	bl	13fc8 <memcmp@plt>
   3b498:	cmp	r0, #0
   3b49c:	bne	3b564 <flatcc_builder_create_cached_vtable@@Base+0x168>
   3b4a0:	ldr	r1, [r4, #4]
   3b4a4:	ldr	r2, [fp, #152]	; 0x98
   3b4a8:	cmp	r1, r2
   3b4ac:	beq	3b570 <flatcc_builder_create_cached_vtable@@Base+0x174>
   3b4b0:	ldr	r5, [r4, #12]
   3b4b4:	add	r8, r4, #12
   3b4b8:	str	r4, [sp, #20]
   3b4bc:	cmp	r5, #0
   3b4c0:	bne	3b474 <flatcc_builder_create_cached_vtable@@Base+0x78>
   3b4c4:	ldr	r8, [sp, #16]
   3b4c8:	mov	r6, fp
   3b4cc:	ldr	r3, [r6, #104]	; 0x68
   3b4d0:	ldr	r4, [r6, #124]	; 0x7c
   3b4d4:	add	r2, r4, #16
   3b4d8:	cmp	r2, r3
   3b4dc:	bls	3b504 <flatcc_builder_create_cached_vtable@@Base+0x108>
   3b4e0:	mov	ip, #6
   3b4e4:	mov	r3, #0
   3b4e8:	ldr	r0, [r6, #40]	; 0x28
   3b4ec:	add	r1, r6, #100	; 0x64
   3b4f0:	str	ip, [sp]
   3b4f4:	ldr	r5, [r6, #48]	; 0x30
   3b4f8:	blx	r5
   3b4fc:	cmp	r0, #0
   3b500:	bne	3b684 <flatcc_builder_create_cached_vtable@@Base+0x288>
   3b504:	ldr	r5, [r6, #100]	; 0x64
   3b508:	adds	r7, r5, r4
   3b50c:	beq	3b654 <flatcc_builder_create_cached_vtable@@Base+0x258>
   3b510:	ldr	r3, [r6, #124]	; 0x7c
   3b514:	mov	r2, r9
   3b518:	ldr	r0, [r6, #152]	; 0x98
   3b51c:	ldr	r1, [sp, #8]
   3b520:	add	ip, r3, #16
   3b524:	str	ip, [r6, #124]	; 0x7c
   3b528:	str	r0, [r7, #4]
   3b52c:	mov	r0, r6
   3b530:	ldr	ip, [sl, r8, lsl #2]
   3b534:	str	ip, [r7, #12]
   3b538:	str	r3, [sl, r8, lsl #2]
   3b53c:	bl	3b2c8 <flatcc_builder_create_vtable@@Base>
   3b540:	cmp	r0, #0
   3b544:	str	r0, [r5, r4]
   3b548:	beq	3b654 <flatcc_builder_create_cached_vtable@@Base+0x258>
   3b54c:	ldr	r3, [sp, #20]
   3b550:	cmp	r3, #0
   3b554:	beq	3b698 <flatcc_builder_create_cached_vtable@@Base+0x29c>
   3b558:	ldr	r3, [r3, #8]
   3b55c:	str	r3, [r7, #8]
   3b560:	b	3b59c <flatcc_builder_create_cached_vtable@@Base+0x1a0>
   3b564:	add	r8, r4, #12
   3b568:	ldr	r5, [r4, #12]
   3b56c:	b	3b4bc <flatcc_builder_create_cached_vtable@@Base+0xc0>
   3b570:	ldr	r3, [sp, #12]
   3b574:	mov	fp, r8
   3b578:	ldr	r8, [sp, #16]
   3b57c:	cmp	r3, fp
   3b580:	beq	3b598 <flatcc_builder_create_cached_vtable@@Base+0x19c>
   3b584:	ldr	r3, [r4, #12]
   3b588:	str	r3, [fp]
   3b58c:	ldr	r3, [sl, r8, lsl #2]
   3b590:	str	r3, [r4, #12]
   3b594:	str	r5, [sl, r8, lsl #2]
   3b598:	ldr	r0, [r4]
   3b59c:	add	sp, sp, #28
   3b5a0:	ldrd	r4, [sp]
   3b5a4:	ldrd	r6, [sp, #8]
   3b5a8:	ldrd	r8, [sp, #16]
   3b5ac:	ldrd	sl, [sp, #24]
   3b5b0:	add	sp, sp, #32
   3b5b4:	pop	{pc}		; (ldr pc, [sp], #4)
   3b5b8:	ldr	r4, [r0, #124]	; 0x7c
   3b5bc:	add	r5, r0, #92	; 0x5c
   3b5c0:	cmp	r4, #0
   3b5c4:	bne	3b72c <flatcc_builder_create_cached_vtable@@Base+0x330>
   3b5c8:	ldr	r3, [r0, #104]	; 0x68
   3b5cc:	cmp	r3, #15
   3b5d0:	bls	3b65c <flatcc_builder_create_cached_vtable@@Base+0x260>
   3b5d4:	ldr	r3, [r6, #100]	; 0x64
   3b5d8:	cmp	r3, #0
   3b5dc:	beq	3b654 <flatcc_builder_create_cached_vtable@@Base+0x258>
   3b5e0:	mov	ip, #16
   3b5e4:	mov	r2, #5
   3b5e8:	ldr	r0, [r6, #40]	; 0x28
   3b5ec:	mov	r1, r5
   3b5f0:	mov	r3, #1
   3b5f4:	str	r2, [sp]
   3b5f8:	mov	r2, #256	; 0x100
   3b5fc:	str	ip, [r6, #124]	; 0x7c
   3b600:	ldr	r5, [r6, #48]	; 0x30
   3b604:	blx	r5
   3b608:	cmp	r0, #0
   3b60c:	bne	3b654 <flatcc_builder_create_cached_vtable@@Base+0x258>
   3b610:	mov	r3, #256	; 0x100
   3b614:	ldr	r1, [r6, #96]	; 0x60
   3b618:	b	3b620 <flatcc_builder_create_cached_vtable@@Base+0x224>
   3b61c:	mov	r3, r2
   3b620:	lsl	r2, r3, #1
   3b624:	cmp	r2, r1
   3b628:	bls	3b61c <flatcc_builder_create_cached_vtable@@Base+0x220>
   3b62c:	lsr	r3, r3, #2
   3b630:	cmp	r3, #1
   3b634:	bls	3b690 <flatcc_builder_create_cached_vtable@@Base+0x294>
   3b638:	mov	r2, #1
   3b63c:	add	r4, r4, #1
   3b640:	cmp	r3, r2, lsl r4
   3b644:	bhi	3b63c <flatcc_builder_create_cached_vtable@@Base+0x240>
   3b648:	rsb	r1, r4, #32
   3b64c:	str	r4, [r6, #116]	; 0x74
   3b650:	b	3b434 <flatcc_builder_create_cached_vtable@@Base+0x38>
   3b654:	mov	r0, #0
   3b658:	b	3b59c <flatcc_builder_create_cached_vtable@@Base+0x1a0>
   3b65c:	mov	ip, #6
   3b660:	add	r1, r0, #100	; 0x64
   3b664:	ldr	r0, [r0, #40]	; 0x28
   3b668:	mov	r3, r4
   3b66c:	mov	r2, #16
   3b670:	str	ip, [sp]
   3b674:	ldr	r7, [r6, #48]	; 0x30
   3b678:	blx	r7
   3b67c:	cmp	r0, #0
   3b680:	beq	3b5d4 <flatcc_builder_create_cached_vtable@@Base+0x1d8>
   3b684:	bl	39190 <flatcc_builder_default_alloc@@Base+0x124>
   3b688:	str	r5, [sp, #20]
   3b68c:	b	3b4cc <flatcc_builder_create_cached_vtable@@Base+0xd0>
   3b690:	mov	r1, #32
   3b694:	b	3b64c <flatcc_builder_create_cached_vtable@@Base+0x250>
   3b698:	ldr	r8, [r6, #120]	; 0x78
   3b69c:	ldr	r3, [r6, #172]	; 0xac
   3b6a0:	add	r2, r9, r8
   3b6a4:	cmp	r3, #0
   3b6a8:	beq	3b6b4 <flatcc_builder_create_cached_vtable@@Base+0x2b8>
   3b6ac:	cmp	r3, r2
   3b6b0:	bcc	3b714 <flatcc_builder_create_cached_vtable@@Base+0x318>
   3b6b4:	ldr	r3, [r6, #72]	; 0x48
   3b6b8:	cmp	r3, r2
   3b6bc:	bcs	3b6e4 <flatcc_builder_create_cached_vtable@@Base+0x2e8>
   3b6c0:	mov	ip, #2
   3b6c4:	mov	r3, #0
   3b6c8:	ldr	r0, [r6, #40]	; 0x28
   3b6cc:	add	r1, r6, #68	; 0x44
   3b6d0:	str	ip, [sp]
   3b6d4:	ldr	sl, [r6, #48]	; 0x30
   3b6d8:	blx	sl
   3b6dc:	cmp	r0, #0
   3b6e0:	bne	3b684 <flatcc_builder_create_cached_vtable@@Base+0x288>
   3b6e4:	ldr	r3, [r6, #68]	; 0x44
   3b6e8:	adds	r0, r3, r8
   3b6ec:	beq	3b724 <flatcc_builder_create_cached_vtable@@Base+0x328>
   3b6f0:	ldr	r3, [r6, #120]	; 0x78
   3b6f4:	mov	r2, r9
   3b6f8:	ldr	r1, [sp, #8]
   3b6fc:	add	r9, r3, r9
   3b700:	str	r3, [r7, #8]
   3b704:	str	r9, [r6, #120]	; 0x78
   3b708:	bl	13fb0 <memcpy@plt>
   3b70c:	ldr	r0, [r5, r4]
   3b710:	b	3b59c <flatcc_builder_create_cached_vtable@@Base+0x1a0>
   3b714:	mov	r0, r6
   3b718:	bl	396f0 <flatcc_builder_flush_vtable_cache@@Base>
   3b71c:	ldr	r0, [r5, r4]
   3b720:	b	3b59c <flatcc_builder_create_cached_vtable@@Base+0x1a0>
   3b724:	mvn	r0, #0
   3b728:	b	3b59c <flatcc_builder_create_cached_vtable@@Base+0x1a0>
   3b72c:	ldr	r3, [pc, #28]	; 3b750 <flatcc_builder_create_cached_vtable@@Base+0x354>
   3b730:	movw	r2, #342	; 0x156
   3b734:	ldr	r1, [pc, #24]	; 3b754 <flatcc_builder_create_cached_vtable@@Base+0x358>
   3b738:	ldr	r0, [pc, #24]	; 3b758 <flatcc_builder_create_cached_vtable@@Base+0x35c>
   3b73c:	add	r3, pc, r3
   3b740:	add	r3, r3, #656	; 0x290
   3b744:	add	r1, pc, r1
   3b748:	add	r0, pc, r0
   3b74c:	bl	14118 <__assert_fail@plt>
   3b750:	andeq	pc, r1, r8, lsl ip	; <UNPREDICTABLE>
   3b754:	andeq	r0, r2, r0, ror #6
   3b758:	andeq	r0, r2, r8, lsl #12

0003b75c <flatcc_builder_create_table@@Base>:
   3b75c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   3b760:	mov	r5, r0
   3b764:	strd	r6, [sp, #8]
   3b768:	str	r8, [sp, #16]
   3b76c:	str	lr, [sp, #20]
   3b770:	sub	sp, sp, #88	; 0x58
   3b774:	ldr	r6, [sp, #116]	; 0x74
   3b778:	ldr	r7, [pc, #444]	; 3b93c <flatcc_builder_create_table@@Base+0x1e0>
   3b77c:	ldr	r0, [sp, #120]	; 0x78
   3b780:	cmp	r6, #0
   3b784:	add	r7, pc, r7
   3b788:	blt	3b8f0 <flatcc_builder_create_table@@Base+0x194>
   3b78c:	tst	r0, #1
   3b790:	beq	3b8cc <flatcc_builder_create_table@@Base+0x170>
   3b794:	ldrh	ip, [r5, #128]	; 0x80
   3b798:	cmp	r3, #4
   3b79c:	sub	r0, r0, #1
   3b7a0:	movcc	r3, #4
   3b7a4:	cmp	ip, r3
   3b7a8:	ldr	ip, [r5, #136]	; 0x88
   3b7ac:	strhcc	r3, [r5, #128]	; 0x80
   3b7b0:	sub	r3, r3, #1
   3b7b4:	cmp	r6, #0
   3b7b8:	sub	r4, ip, r2
   3b7bc:	mov	r8, r4
   3b7c0:	sub	r4, r4, #4
   3b7c4:	and	r8, r8, r3
   3b7c8:	sub	r0, r4, r0
   3b7cc:	sub	r0, r0, r8
   3b7d0:	str	r0, [sp, #12]
   3b7d4:	beq	3b808 <flatcc_builder_create_table@@Base+0xac>
   3b7d8:	ldr	ip, [sp, #112]	; 0x70
   3b7dc:	sub	r4, r8, r4
   3b7e0:	sub	r4, r4, #4
   3b7e4:	add	r6, ip, r6, lsl #1
   3b7e8:	ldrh	r3, [ip], #2
   3b7ec:	ldr	r0, [r1, r3]
   3b7f0:	sub	lr, r4, r3
   3b7f4:	cmp	r6, ip
   3b7f8:	add	r0, r0, lr
   3b7fc:	str	r0, [r1, r3]
   3b800:	bne	3b7e8 <flatcc_builder_create_table@@Base+0x8c>
   3b804:	ldr	ip, [r5, #136]	; 0x88
   3b808:	mov	r3, #1
   3b80c:	mov	r0, #4
   3b810:	cmp	r2, #0
   3b814:	str	r0, [sp, #16]
   3b818:	str	r3, [sp, #20]
   3b81c:	add	r3, sp, #12
   3b820:	str	r3, [sp, #24]
   3b824:	str	r0, [sp, #28]
   3b828:	beq	3b844 <flatcc_builder_create_table@@Base+0xe8>
   3b82c:	add	r0, r2, r0
   3b830:	mov	r3, #2
   3b834:	str	r0, [sp, #16]
   3b838:	str	r3, [sp, #20]
   3b83c:	str	r1, [sp, #32]
   3b840:	str	r2, [sp, #36]	; 0x24
   3b844:	cmp	r8, #0
   3b848:	bne	3b89c <flatcc_builder_create_table@@Base+0x140>
   3b84c:	sub	r4, ip, r0
   3b850:	cmp	r4, ip
   3b854:	bge	3b918 <flatcc_builder_create_table@@Base+0x1bc>
   3b858:	mov	r3, r4
   3b85c:	add	r1, sp, #24
   3b860:	str	r0, [sp]
   3b864:	ldr	r2, [sp, #20]
   3b868:	ldr	r0, [r5, #36]	; 0x24
   3b86c:	ldr	r6, [r5, #44]	; 0x2c
   3b870:	blx	r6
   3b874:	cmp	r0, #0
   3b878:	bne	3b914 <flatcc_builder_create_table@@Base+0x1b8>
   3b87c:	mov	r0, r4
   3b880:	str	r4, [r5, #136]	; 0x88
   3b884:	add	sp, sp, #88	; 0x58
   3b888:	ldrd	r4, [sp]
   3b88c:	ldrd	r6, [sp, #8]
   3b890:	ldr	r8, [sp, #16]
   3b894:	add	sp, sp, #20
   3b898:	pop	{pc}		; (ldr pc, [sp], #4)
   3b89c:	ldr	r2, [pc, #156]	; 3b940 <flatcc_builder_create_table@@Base+0x1e4>
   3b8a0:	add	r0, r0, r8
   3b8a4:	ldr	r3, [sp, #20]
   3b8a8:	str	r0, [sp, #16]
   3b8ac:	ldr	r1, [r7, r2]
   3b8b0:	add	r2, sp, #88	; 0x58
   3b8b4:	add	r3, r3, #1
   3b8b8:	add	r2, r2, r3, lsl #3
   3b8bc:	str	r3, [sp, #20]
   3b8c0:	str	r1, [r2, #-72]	; 0xffffffb8
   3b8c4:	str	r8, [r2, #-68]	; 0xffffffbc
   3b8c8:	b	3b84c <flatcc_builder_create_table@@Base+0xf0>
   3b8cc:	ldr	r3, [pc, #112]	; 3b944 <flatcc_builder_create_table@@Base+0x1e8>
   3b8d0:	movw	r2, #1243	; 0x4db
   3b8d4:	ldr	r1, [pc, #108]	; 3b948 <flatcc_builder_create_table@@Base+0x1ec>
   3b8d8:	ldr	r0, [pc, #108]	; 3b94c <flatcc_builder_create_table@@Base+0x1f0>
   3b8dc:	add	r3, pc, r3
   3b8e0:	add	r3, r3, #668	; 0x29c
   3b8e4:	add	r1, pc, r1
   3b8e8:	add	r0, pc, r0
   3b8ec:	bl	14118 <__assert_fail@plt>
   3b8f0:	ldr	r3, [pc, #88]	; 3b950 <flatcc_builder_create_table@@Base+0x1f4>
   3b8f4:	movw	r2, #1237	; 0x4d5
   3b8f8:	ldr	r1, [pc, #84]	; 3b954 <flatcc_builder_create_table@@Base+0x1f8>
   3b8fc:	ldr	r0, [pc, #84]	; 3b958 <flatcc_builder_create_table@@Base+0x1fc>
   3b900:	add	r3, pc, r3
   3b904:	add	r3, r3, #668	; 0x29c
   3b908:	add	r1, pc, r1
   3b90c:	add	r0, pc, r0
   3b910:	bl	14118 <__assert_fail@plt>
   3b914:	bl	39330 <flatcc_builder_default_alloc@@Base+0x2c4>
   3b918:	ldr	r3, [pc, #60]	; 3b95c <flatcc_builder_create_table@@Base+0x200>
   3b91c:	movw	r2, #647	; 0x287
   3b920:	ldr	r1, [pc, #56]	; 3b960 <flatcc_builder_create_table@@Base+0x204>
   3b924:	ldr	r0, [pc, #56]	; 3b964 <flatcc_builder_create_table@@Base+0x208>
   3b928:	add	r3, pc, r3
   3b92c:	add	r3, r3, #44	; 0x2c
   3b930:	add	r1, pc, r1
   3b934:	add	r0, pc, r0
   3b938:	bl	14118 <__assert_fail@plt>
   3b93c:	andeq	r1, r3, r4, ror r8
   3b940:	muleq	r0, ip, r0
   3b944:	andeq	pc, r1, r8, ror sl	; <UNPREDICTABLE>
   3b948:	andeq	r0, r2, r0, asr #3
   3b94c:	andeq	r0, r2, ip, lsl #9
   3b950:	andeq	pc, r1, r4, asr sl	; <UNPREDICTABLE>
   3b954:	muleq	r2, ip, r1
   3b958:	andeq	r0, r2, r4, asr r4
   3b95c:	andeq	pc, r1, ip, lsr #20
   3b960:	andeq	r0, r2, r4, ror r1
   3b964:	andeq	lr, r0, r0, lsl #20

0003b968 <flatcc_builder_check_required_field@@Base>:
   3b968:	ldr	r3, [r0, #32]
   3b96c:	ldrh	r3, [r3, #14]
   3b970:	cmp	r3, #3
   3b974:	bne	3b9a4 <flatcc_builder_check_required_field@@Base+0x3c>
   3b978:	ldrh	r3, [r0, #8]
   3b97c:	cmp	r3, r1
   3b980:	bls	3b99c <flatcc_builder_check_required_field@@Base+0x34>
   3b984:	ldr	r3, [r0, #4]
   3b988:	lsl	r1, r1, #1
   3b98c:	ldrh	r0, [r3, r1]
   3b990:	adds	r0, r0, #0
   3b994:	movne	r0, #1
   3b998:	bx	lr
   3b99c:	mov	r0, #0
   3b9a0:	bx	lr
   3b9a4:	ldr	r3, [pc, #36]	; 3b9d0 <flatcc_builder_check_required_field@@Base+0x68>
   3b9a8:	movw	r2, #1272	; 0x4f8
   3b9ac:	str	r4, [sp, #-8]!
   3b9b0:	ldr	r1, [pc, #28]	; 3b9d4 <flatcc_builder_check_required_field@@Base+0x6c>
   3b9b4:	str	lr, [sp, #4]
   3b9b8:	ldr	r0, [pc, #24]	; 3b9d8 <flatcc_builder_check_required_field@@Base+0x70>
   3b9bc:	add	r3, pc, r3
   3b9c0:	add	r3, r3, #696	; 0x2b8
   3b9c4:	add	r1, pc, r1
   3b9c8:	add	r0, pc, r0
   3b9cc:	bl	14118 <__assert_fail@plt>
   3b9d0:	muleq	r1, r8, r9
   3b9d4:	andeq	r0, r2, r0, ror #1
   3b9d8:			; <UNDEFINED> instruction: 0x000203b8

0003b9dc <flatcc_builder_check_union_field@@Base>:
   3b9dc:	ldr	r3, [r0, #32]
   3b9e0:	ldrh	r3, [r3, #14]
   3b9e4:	cmp	r3, #3
   3b9e8:	bne	3ba4c <flatcc_builder_check_union_field@@Base+0x70>
   3b9ec:	cmp	r1, #0
   3b9f0:	beq	3ba38 <flatcc_builder_check_union_field@@Base+0x5c>
   3b9f4:	ldrh	r3, [r0, #8]
   3b9f8:	cmp	r3, r1
   3b9fc:	bls	3ba38 <flatcc_builder_check_union_field@@Base+0x5c>
   3ba00:	ldr	r3, [r0, #4]
   3ba04:	sub	r1, r1, #-2147483647	; 0x80000001
   3ba08:	lsl	r1, r1, #1
   3ba0c:	ldrh	r2, [r3, r1]!
   3ba10:	cmp	r2, #0
   3ba14:	ldrh	r1, [r3, #2]
   3ba18:	beq	3ba2c <flatcc_builder_check_union_field@@Base+0x50>
   3ba1c:	ldr	r3, [r0, #16]
   3ba20:	ldrb	r3, [r3, r2]
   3ba24:	cmp	r3, #0
   3ba28:	bne	3ba40 <flatcc_builder_check_union_field@@Base+0x64>
   3ba2c:	clz	r0, r1
   3ba30:	lsr	r0, r0, #5
   3ba34:	bx	lr
   3ba38:	mov	r0, #0
   3ba3c:	bx	lr
   3ba40:	adds	r0, r1, #0
   3ba44:	movne	r0, #1
   3ba48:	bx	lr
   3ba4c:	ldr	r3, [pc, #36]	; 3ba78 <flatcc_builder_check_union_field@@Base+0x9c>
   3ba50:	movw	r2, #1279	; 0x4ff
   3ba54:	str	r4, [sp, #-8]!
   3ba58:	ldr	r1, [pc, #28]	; 3ba7c <flatcc_builder_check_union_field@@Base+0xa0>
   3ba5c:	str	lr, [sp, #4]
   3ba60:	ldr	r0, [pc, #24]	; 3ba80 <flatcc_builder_check_union_field@@Base+0xa4>
   3ba64:	add	r3, pc, r3
   3ba68:	add	r3, r3, #732	; 0x2dc
   3ba6c:	add	r1, pc, r1
   3ba70:	add	r0, pc, r0
   3ba74:	bl	14118 <__assert_fail@plt>
   3ba78:	strdeq	pc, [r1], -r0
   3ba7c:	andeq	r0, r2, r8, lsr r0
   3ba80:	andeq	r0, r2, r0, lsl r3

0003ba84 <flatcc_builder_check_required@@Base>:
   3ba84:	ldr	r3, [r0, #32]
   3ba88:	ldrh	r3, [r3, #14]
   3ba8c:	cmp	r3, #3
   3ba90:	bne	3baf8 <flatcc_builder_check_required@@Base+0x74>
   3ba94:	ldrh	r3, [r0, #8]
   3ba98:	cmp	r3, r2
   3ba9c:	blt	3baf0 <flatcc_builder_check_required@@Base+0x6c>
   3baa0:	cmp	r2, #0
   3baa4:	ble	3bae8 <flatcc_builder_check_required@@Base+0x64>
   3baa8:	ldrh	r3, [r1]
   3baac:	ldr	ip, [r0, #4]
   3bab0:	lsl	r3, r3, #1
   3bab4:	ldrh	r0, [ip, r3]
   3bab8:	cmp	r0, #0
   3babc:	bxeq	lr
   3bac0:	add	r2, r1, r2, lsl #1
   3bac4:	add	r1, r1, #2
   3bac8:	b	3bae0 <flatcc_builder_check_required@@Base+0x5c>
   3bacc:	ldrh	r3, [r1], #2
   3bad0:	lsl	r3, r3, #1
   3bad4:	ldrh	r0, [ip, r3]
   3bad8:	cmp	r0, #0
   3badc:	bxeq	lr
   3bae0:	cmp	r1, r2
   3bae4:	bne	3bacc <flatcc_builder_check_required@@Base+0x48>
   3bae8:	mov	r0, #1
   3baec:	bx	lr
   3baf0:	mov	r0, #0
   3baf4:	bx	lr
   3baf8:	ldr	r3, [pc, #36]	; 3bb24 <flatcc_builder_check_required@@Base+0xa0>
   3bafc:	movw	r2, #1297	; 0x511
   3bb00:	str	r4, [sp, #-8]!
   3bb04:	ldr	r1, [pc, #28]	; 3bb28 <flatcc_builder_check_required@@Base+0xa4>
   3bb08:	str	lr, [sp, #4]
   3bb0c:	ldr	r0, [pc, #24]	; 3bb2c <flatcc_builder_check_required@@Base+0xa8>
   3bb10:	add	r3, pc, r3
   3bb14:	add	r3, r3, #768	; 0x300
   3bb18:	add	r1, pc, r1
   3bb1c:	add	r0, pc, r0
   3bb20:	bl	14118 <__assert_fail@plt>
   3bb24:	andeq	pc, r1, r4, asr #16
   3bb28:	andeq	pc, r1, ip, lsl #31
   3bb2c:	andeq	r0, r2, r4, ror #4

0003bb30 <flatcc_builder_end_table@@Base>:
   3bb30:	ldr	r3, [r0, #32]
   3bb34:	strd	r4, [sp, #-20]!	; 0xffffffec
   3bb38:	ldrh	r3, [r3, #14]
   3bb3c:	strd	r6, [sp, #8]
   3bb40:	str	lr, [sp, #16]
   3bb44:	sub	sp, sp, #20
   3bb48:	cmp	r3, #3
   3bb4c:	bne	3bcd0 <flatcc_builder_end_table@@Base+0x1a0>
   3bb50:	ldrh	r5, [r0, #8]
   3bb54:	movw	ip, #31153	; 0x79b1
   3bb58:	movt	ip, #40503	; 0x9e37
   3bb5c:	mov	r4, r0
   3bb60:	ldr	r1, [r0, #4]
   3bb64:	ldr	r3, [r0, #12]
   3bb68:	add	r5, r5, #2
   3bb6c:	lsl	r5, r5, #1
   3bb70:	ldr	lr, [r0, #20]
   3bb74:	sub	r6, r1, #4
   3bb78:	uxth	r5, r5
   3bb7c:	eor	r3, r3, r5
   3bb80:	mov	r2, r5
   3bb84:	strh	r5, [r1, #-4]
   3bb88:	mul	r3, ip, r3
   3bb8c:	add	lr, lr, #4
   3bb90:	uxth	lr, lr
   3bb94:	eor	r3, r3, lr
   3bb98:	strh	lr, [r1, #-2]
   3bb9c:	mov	r1, r6
   3bba0:	mul	r3, ip, r3
   3bba4:	str	r3, [r0, #12]
   3bba8:	bl	3b3fc <flatcc_builder_create_cached_vtable@@Base>
   3bbac:	subs	r7, r0, #0
   3bbb0:	bne	3bbd0 <flatcc_builder_end_table@@Base+0xa0>
   3bbb4:	mov	r5, #0
   3bbb8:	mov	r0, r5
   3bbbc:	add	sp, sp, #20
   3bbc0:	ldrd	r4, [sp]
   3bbc4:	ldrd	r6, [sp, #8]
   3bbc8:	add	sp, sp, #16
   3bbcc:	pop	{pc}		; (ldr pc, [sp], #4)
   3bbd0:	mov	r2, r5
   3bbd4:	mov	r1, #0
   3bbd8:	mov	r0, r6
   3bbdc:	bl	1407c <memset@plt>
   3bbe0:	ldr	ip, [r4]
   3bbe4:	mov	r0, r4
   3bbe8:	ldr	r3, [r4, #32]
   3bbec:	ldr	r2, [r4, #76]	; 0x4c
   3bbf0:	ldr	r1, [r3, #20]
   3bbf4:	str	r7, [sp, #8]
   3bbf8:	ldrh	r3, [r4, #130]	; 0x82
   3bbfc:	add	r2, r2, r1
   3bc00:	ldr	r1, [r4, #16]
   3bc04:	sub	ip, ip, r2
   3bc08:	asr	ip, ip, #1
   3bc0c:	str	r2, [sp]
   3bc10:	ldr	r2, [r4, #20]
   3bc14:	str	ip, [sp, #4]
   3bc18:	bl	3b75c <flatcc_builder_create_table@@Base>
   3bc1c:	subs	r5, r0, #0
   3bc20:	beq	3bbb4 <flatcc_builder_end_table@@Base+0x84>
   3bc24:	ldr	r3, [r4, #32]
   3bc28:	mov	r1, #0
   3bc2c:	ldr	r0, [r4, #52]	; 0x34
   3bc30:	ldr	r2, [r4, #76]	; 0x4c
   3bc34:	ldr	ip, [r3, #16]
   3bc38:	ldr	r6, [r3, #20]
   3bc3c:	ldrh	lr, [r3, #28]
   3bc40:	add	r0, r0, ip
   3bc44:	ldr	ip, [r3, #24]
   3bc48:	add	r3, r2, r6
   3bc4c:	ldr	r2, [r4, #20]
   3bc50:	str	r3, [r4]
   3bc54:	str	r0, [r4, #4]
   3bc58:	strh	lr, [r4, #8]
   3bc5c:	str	ip, [r4, #12]
   3bc60:	ldr	r0, [r4, #16]
   3bc64:	bl	1407c <memset@plt>
   3bc68:	ldr	r3, [r4, #32]
   3bc6c:	ldr	r0, [r4, #60]	; 0x3c
   3bc70:	ldr	r2, [r4, #64]	; 0x40
   3bc74:	ldr	ip, [r3]
   3bc78:	ldmib	r3, {r1, lr}
   3bc7c:	add	r0, r0, ip
   3bc80:	sub	r2, r2, ip
   3bc84:	str	r0, [r4, #16]
   3bc88:	cmp	r2, r1
   3bc8c:	ldrh	r0, [r4, #128]	; 0x80
   3bc90:	movcs	r2, r1
   3bc94:	str	lr, [r4, #20]
   3bc98:	str	ip, [r4, #28]
   3bc9c:	ldrh	ip, [r4, #130]	; 0x82
   3bca0:	str	r2, [r4, #24]
   3bca4:	ldr	r2, [r4, #156]	; 0x9c
   3bca8:	str	r1, [r3, #4]
   3bcac:	cmp	r0, ip
   3bcb0:	sub	r0, r3, #36	; 0x24
   3bcb4:	strhcc	ip, [r4, #128]	; 0x80
   3bcb8:	ldrh	r1, [r3, #12]
   3bcbc:	sub	r3, r2, #1
   3bcc0:	str	r0, [r4, #32]
   3bcc4:	strh	r1, [r4, #130]	; 0x82
   3bcc8:	str	r3, [r4, #156]	; 0x9c
   3bccc:	b	3bbb8 <flatcc_builder_end_table@@Base+0x88>
   3bcd0:	ldr	r3, [pc, #28]	; 3bcf4 <flatcc_builder_end_table@@Base+0x1c4>
   3bcd4:	movw	r2, #1317	; 0x525
   3bcd8:	ldr	r1, [pc, #24]	; 3bcf8 <flatcc_builder_end_table@@Base+0x1c8>
   3bcdc:	ldr	r0, [pc, #24]	; 3bcfc <flatcc_builder_end_table@@Base+0x1cc>
   3bce0:	add	r3, pc, r3
   3bce4:	add	r3, r3, #800	; 0x320
   3bce8:	add	r1, pc, r1
   3bcec:	add	r0, pc, r0
   3bcf0:	bl	14118 <__assert_fail@plt>
   3bcf4:	andeq	pc, r1, r4, ror r6	; <UNPREDICTABLE>
   3bcf8:			; <UNDEFINED> instruction: 0x0001fdbc
   3bcfc:	muleq	r2, r4, r0

0003bd00 <flatcc_builder_create_vector@@Base>:
   3bd00:	strd	r4, [sp, #-16]!
   3bd04:	mov	r4, r0
   3bd08:	str	r6, [sp, #8]
   3bd0c:	str	lr, [sp, #12]
   3bd10:	sub	sp, sp, #88	; 0x58
   3bd14:	ldr	ip, [sp, #108]	; 0x6c
   3bd18:	ldr	r5, [pc, #328]	; 3be68 <flatcc_builder_create_vector@@Base+0x168>
   3bd1c:	ldrh	r0, [sp, #104]	; 0x68
   3bd20:	cmp	r2, ip
   3bd24:	add	r5, pc, r5
   3bd28:	bhi	3be1c <flatcc_builder_create_vector@@Base+0x11c>
   3bd2c:	ldrh	ip, [r4, #128]	; 0x80
   3bd30:	cmp	r0, #4
   3bd34:	mul	r3, r3, r2
   3bd38:	movcc	r0, #4
   3bd3c:	str	r2, [sp, #12]
   3bd40:	mov	r2, #1
   3bd44:	ldr	r6, [r4, #136]	; 0x88
   3bd48:	mov	lr, #4
   3bd4c:	str	r2, [sp, #20]
   3bd50:	cmp	ip, r0
   3bd54:	add	ip, sp, #12
   3bd58:	str	lr, [sp, #16]
   3bd5c:	strhcc	r0, [r4, #128]	; 0x80
   3bd60:	sub	r2, r6, r3
   3bd64:	sub	r0, r0, #1
   3bd68:	cmp	r3, #0
   3bd6c:	and	r0, r0, r2
   3bd70:	str	ip, [sp, #24]
   3bd74:	moveq	r2, lr
   3bd78:	str	lr, [sp, #28]
   3bd7c:	beq	3bd98 <flatcc_builder_create_vector@@Base+0x98>
   3bd80:	add	r2, r3, lr
   3bd84:	str	r1, [sp, #32]
   3bd88:	mov	r1, #2
   3bd8c:	str	r2, [sp, #16]
   3bd90:	str	r1, [sp, #20]
   3bd94:	str	r3, [sp, #36]	; 0x24
   3bd98:	cmp	r0, #0
   3bd9c:	bne	3bdec <flatcc_builder_create_vector@@Base+0xec>
   3bda0:	sub	r5, r6, r2
   3bda4:	cmp	r6, r5
   3bda8:	ble	3be44 <flatcc_builder_create_vector@@Base+0x144>
   3bdac:	mov	r3, r5
   3bdb0:	add	r1, sp, #24
   3bdb4:	str	r2, [sp]
   3bdb8:	ldr	r2, [sp, #20]
   3bdbc:	ldr	r0, [r4, #36]	; 0x24
   3bdc0:	ldr	r6, [r4, #44]	; 0x2c
   3bdc4:	blx	r6
   3bdc8:	cmp	r0, #0
   3bdcc:	bne	3be40 <flatcc_builder_create_vector@@Base+0x140>
   3bdd0:	mov	r0, r5
   3bdd4:	str	r5, [r4, #136]	; 0x88
   3bdd8:	add	sp, sp, #88	; 0x58
   3bddc:	ldrd	r4, [sp]
   3bde0:	ldr	r6, [sp, #8]
   3bde4:	add	sp, sp, #12
   3bde8:	pop	{pc}		; (ldr pc, [sp], #4)
   3bdec:	ldr	r1, [pc, #120]	; 3be6c <flatcc_builder_create_vector@@Base+0x16c>
   3bdf0:	add	r2, r2, r0
   3bdf4:	ldr	r3, [sp, #20]
   3bdf8:	str	r2, [sp, #16]
   3bdfc:	ldr	ip, [r5, r1]
   3be00:	add	r1, sp, #88	; 0x58
   3be04:	add	r3, r3, #1
   3be08:	add	r1, r1, r3, lsl #3
   3be0c:	str	r3, [sp, #20]
   3be10:	str	ip, [r1, #-72]	; 0xffffffb8
   3be14:	str	r0, [r1, #-68]	; 0xffffffbc
   3be18:	b	3bda0 <flatcc_builder_create_vector@@Base+0xa0>
   3be1c:	ldr	r3, [pc, #76]	; 3be70 <flatcc_builder_create_vector@@Base+0x170>
   3be20:	movw	r2, #1365	; 0x555
   3be24:	ldr	r1, [pc, #72]	; 3be74 <flatcc_builder_create_vector@@Base+0x174>
   3be28:	ldr	r0, [pc, #72]	; 3be78 <flatcc_builder_create_vector@@Base+0x178>
   3be2c:	add	r3, pc, r3
   3be30:	add	r3, r3, #828	; 0x33c
   3be34:	add	r1, pc, r1
   3be38:	add	r0, pc, r0
   3be3c:	bl	14118 <__assert_fail@plt>
   3be40:	bl	39330 <flatcc_builder_default_alloc@@Base+0x2c4>
   3be44:	ldr	r3, [pc, #48]	; 3be7c <flatcc_builder_create_vector@@Base+0x17c>
   3be48:	movw	r2, #647	; 0x287
   3be4c:	ldr	r1, [pc, #44]	; 3be80 <flatcc_builder_create_vector@@Base+0x180>
   3be50:	ldr	r0, [pc, #44]	; 3be84 <flatcc_builder_create_vector@@Base+0x184>
   3be54:	add	r3, pc, r3
   3be58:	add	r3, r3, #44	; 0x2c
   3be5c:	add	r1, pc, r1
   3be60:	add	r0, pc, r0
   3be64:	bl	14118 <__assert_fail@plt>
   3be68:	ldrdeq	r1, [r3], -r4
   3be6c:	muleq	r0, ip, r0
   3be70:	andeq	pc, r1, r8, lsr #10
   3be74:	andeq	pc, r1, r0, ror ip	; <UNPREDICTABLE>
   3be78:	andeq	pc, r1, r4, ror pc	; <UNPREDICTABLE>
   3be7c:	andeq	pc, r1, r0, lsl #10
   3be80:	andeq	pc, r1, r8, asr #24
   3be84:	ldrdeq	lr, [r0], -r4

0003be88 <flatcc_builder_end_vector@@Base>:
   3be88:	ldr	r1, [r0, #32]
   3be8c:	strd	r4, [sp, #-12]!
   3be90:	ldrh	r3, [r1, #14]
   3be94:	str	lr, [sp, #8]
   3be98:	sub	sp, sp, #12
   3be9c:	cmp	r3, #4
   3bea0:	bne	3bf58 <flatcc_builder_end_vector@@Base+0xd0>
   3bea4:	ldrh	ip, [r0, #130]	; 0x82
   3bea8:	mov	r4, r0
   3beac:	ldr	r3, [r1, #16]
   3beb0:	ldr	r2, [r1, #20]
   3beb4:	ldr	r1, [r1, #24]
   3beb8:	str	r1, [sp, #4]
   3bebc:	ldr	r1, [r0, #16]
   3bec0:	str	ip, [sp]
   3bec4:	bl	3bd00 <flatcc_builder_create_vector@@Base>
   3bec8:	subs	r5, r0, #0
   3becc:	beq	3bf44 <flatcc_builder_end_vector@@Base+0xbc>
   3bed0:	mov	r1, #0
   3bed4:	ldr	r0, [r4, #16]
   3bed8:	ldr	r2, [r4, #20]
   3bedc:	bl	1407c <memset@plt>
   3bee0:	ldr	r3, [r4, #32]
   3bee4:	ldr	r0, [r4, #60]	; 0x3c
   3bee8:	ldr	r2, [r4, #64]	; 0x40
   3beec:	ldr	ip, [r3]
   3bef0:	ldmib	r3, {r1, lr}
   3bef4:	add	r0, r0, ip
   3bef8:	sub	r2, r2, ip
   3befc:	str	r0, [r4, #16]
   3bf00:	cmp	r2, r1
   3bf04:	ldrh	r0, [r4, #128]	; 0x80
   3bf08:	movcs	r2, r1
   3bf0c:	str	lr, [r4, #20]
   3bf10:	str	ip, [r4, #28]
   3bf14:	ldrh	ip, [r4, #130]	; 0x82
   3bf18:	str	r2, [r4, #24]
   3bf1c:	ldr	r2, [r4, #156]	; 0x9c
   3bf20:	str	r1, [r3, #4]
   3bf24:	cmp	r0, ip
   3bf28:	sub	r0, r3, #36	; 0x24
   3bf2c:	strhcc	ip, [r4, #128]	; 0x80
   3bf30:	ldrh	r1, [r3, #12]
   3bf34:	sub	r3, r2, #1
   3bf38:	str	r0, [r4, #32]
   3bf3c:	strh	r1, [r4, #130]	; 0x82
   3bf40:	str	r3, [r4, #156]	; 0x9c
   3bf44:	mov	r0, r5
   3bf48:	add	sp, sp, #12
   3bf4c:	ldrd	r4, [sp]
   3bf50:	add	sp, sp, #8
   3bf54:	pop	{pc}		; (ldr pc, [sp], #4)
   3bf58:	ldr	r3, [pc, #28]	; 3bf7c <flatcc_builder_end_vector@@Base+0xf4>
   3bf5c:	movw	r2, #1400	; 0x578
   3bf60:	ldr	r1, [pc, #24]	; 3bf80 <flatcc_builder_end_vector@@Base+0xf8>
   3bf64:	ldr	r0, [pc, #24]	; 3bf84 <flatcc_builder_end_vector@@Base+0xfc>
   3bf68:	add	r3, pc, r3
   3bf6c:	add	r3, r3, #860	; 0x35c
   3bf70:	add	r1, pc, r1
   3bf74:	add	r0, pc, r0
   3bf78:	bl	14118 <__assert_fail@plt>
   3bf7c:	andeq	pc, r1, ip, ror #7
   3bf80:	andeq	pc, r1, r4, lsr fp	; <UNPREDICTABLE>
   3bf84:	andeq	pc, r1, r0, lsl #25

0003bf88 <flatcc_builder_vector_count@@Base>:
   3bf88:	ldr	r3, [r0, #32]
   3bf8c:	ldr	r0, [r3, #20]
   3bf90:	bx	lr

0003bf94 <flatcc_builder_vector_edit@@Base>:
   3bf94:	ldr	r0, [r0, #16]
   3bf98:	bx	lr

0003bf9c <flatcc_builder_create_offset_vector_direct@@Base>:
   3bf9c:	cmn	r2, #-1073741823	; 0xc0000001
   3bfa0:	bhi	3bfac <flatcc_builder_create_offset_vector_direct@@Base+0x10>
   3bfa4:	mov	r3, #0
   3bfa8:	b	394c4 <flatcc_builder_default_alloc@@Base+0x458>
   3bfac:	mov	r0, #0
   3bfb0:	bx	lr

0003bfb4 <flatcc_builder_end_offset_vector@@Base>:
   3bfb4:	ldr	r3, [r0, #32]
   3bfb8:	strd	r4, [sp, #-16]!
   3bfbc:	ldrh	r2, [r3, #14]
   3bfc0:	str	r6, [sp, #8]
   3bfc4:	str	lr, [sp, #12]
   3bfc8:	cmp	r2, #5
   3bfcc:	bne	3c070 <flatcc_builder_end_offset_vector@@Base+0xbc>
   3bfd0:	ldr	r1, [r0, #16]
   3bfd4:	mov	r4, r0
   3bfd8:	ldr	r2, [r3, #20]
   3bfdc:	bl	3bf9c <flatcc_builder_create_offset_vector_direct@@Base>
   3bfe0:	subs	r5, r0, #0
   3bfe4:	beq	3c05c <flatcc_builder_end_offset_vector@@Base+0xa8>
   3bfe8:	mov	r1, #0
   3bfec:	ldr	r0, [r4, #16]
   3bff0:	ldr	r2, [r4, #20]
   3bff4:	bl	1407c <memset@plt>
   3bff8:	ldr	r3, [r4, #32]
   3bffc:	ldr	r0, [r4, #60]	; 0x3c
   3c000:	ldr	r2, [r4, #64]	; 0x40
   3c004:	ldr	ip, [r3]
   3c008:	ldmib	r3, {r1, lr}
   3c00c:	add	r0, r0, ip
   3c010:	sub	r2, r2, ip
   3c014:	str	r0, [r4, #16]
   3c018:	cmp	r2, r1
   3c01c:	ldrh	r0, [r4, #128]	; 0x80
   3c020:	movcs	r2, r1
   3c024:	str	lr, [r4, #20]
   3c028:	str	ip, [r4, #28]
   3c02c:	ldrh	ip, [r4, #130]	; 0x82
   3c030:	str	r2, [r4, #24]
   3c034:	ldr	r2, [r4, #156]	; 0x9c
   3c038:	str	r1, [r3, #4]
   3c03c:	cmp	r0, ip
   3c040:	sub	r0, r3, #36	; 0x24
   3c044:	strhcc	ip, [r4, #128]	; 0x80
   3c048:	ldrh	r1, [r3, #12]
   3c04c:	sub	r3, r2, #1
   3c050:	str	r0, [r4, #32]
   3c054:	strh	r1, [r4, #130]	; 0x82
   3c058:	str	r3, [r4, #156]	; 0x9c
   3c05c:	mov	r0, r5
   3c060:	ldrd	r4, [sp]
   3c064:	ldr	r6, [sp, #8]
   3c068:	add	sp, sp, #12
   3c06c:	pop	{pc}		; (ldr pc, [sp], #4)
   3c070:	ldr	r3, [pc, #28]	; 3c094 <flatcc_builder_end_offset_vector@@Base+0xe0>
   3c074:	movw	r2, #1480	; 0x5c8
   3c078:	ldr	r1, [pc, #24]	; 3c098 <flatcc_builder_end_offset_vector@@Base+0xe4>
   3c07c:	ldr	r0, [pc, #24]	; 3c09c <flatcc_builder_end_offset_vector@@Base+0xe8>
   3c080:	add	r3, pc, r3
   3c084:	add	r3, r3, #888	; 0x378
   3c088:	add	r1, pc, r1
   3c08c:	add	r0, pc, r0
   3c090:	bl	14118 <__assert_fail@plt>
   3c094:	ldrdeq	pc, [r1], -r4
   3c098:	andeq	pc, r1, ip, lsl sl	; <UNPREDICTABLE>
   3c09c:	ldrdeq	pc, [r1], -r4

0003c0a0 <flatcc_builder_create_offset_vector@@Base>:
   3c0a0:	strd	r4, [sp, #-16]!
   3c0a4:	mov	r5, r2
   3c0a8:	mov	r4, r0
   3c0ac:	str	r6, [sp, #8]
   3c0b0:	mov	r6, r1
   3c0b4:	str	lr, [sp, #12]
   3c0b8:	bl	3af2c <flatcc_builder_start_offset_vector@@Base>
   3c0bc:	cmp	r0, #0
   3c0c0:	beq	3c0d8 <flatcc_builder_create_offset_vector@@Base+0x38>
   3c0c4:	ldrd	r4, [sp]
   3c0c8:	mov	r0, #0
   3c0cc:	ldr	r6, [sp, #8]
   3c0d0:	add	sp, sp, #12
   3c0d4:	pop	{pc}		; (ldr pc, [sp], #4)
   3c0d8:	mov	r1, r5
   3c0dc:	mov	r0, r4
   3c0e0:	bl	3a7f0 <flatcc_builder_extend_offset_vector@@Base>
   3c0e4:	cmp	r0, #0
   3c0e8:	beq	3c0c4 <flatcc_builder_create_offset_vector@@Base+0x24>
   3c0ec:	lsl	r2, r5, #2
   3c0f0:	mov	r1, r6
   3c0f4:	bl	13fb0 <memcpy@plt>
   3c0f8:	mov	r0, r4
   3c0fc:	ldrd	r4, [sp]
   3c100:	ldr	r6, [sp, #8]
   3c104:	ldr	lr, [sp, #12]
   3c108:	add	sp, sp, #16
   3c10c:	b	3bfb4 <flatcc_builder_end_offset_vector@@Base>

0003c110 <flatcc_builder_end_offset_vector_for_unions@@Base>:
   3c110:	ldr	r2, [r0, #32]
   3c114:	strd	r4, [sp, #-16]!
   3c118:	ldrh	ip, [r2, #14]
   3c11c:	str	r6, [sp, #8]
   3c120:	str	lr, [sp, #12]
   3c124:	cmp	ip, #5
   3c128:	bne	3c1e0 <flatcc_builder_end_offset_vector_for_unions@@Base+0xd0>
   3c12c:	ldr	r2, [r2, #20]
   3c130:	cmn	r2, #-1073741823	; 0xc0000001
   3c134:	bhi	3c150 <flatcc_builder_end_offset_vector_for_unions@@Base+0x40>
   3c138:	mov	r3, r1
   3c13c:	ldr	r1, [r0, #16]
   3c140:	mov	r4, r0
   3c144:	bl	394c4 <flatcc_builder_default_alloc@@Base+0x458>
   3c148:	subs	r5, r0, #0
   3c14c:	bne	3c168 <flatcc_builder_end_offset_vector_for_unions@@Base+0x58>
   3c150:	mov	r5, #0
   3c154:	mov	r0, r5
   3c158:	ldrd	r4, [sp]
   3c15c:	ldr	r6, [sp, #8]
   3c160:	add	sp, sp, #12
   3c164:	pop	{pc}		; (ldr pc, [sp], #4)
   3c168:	mov	r1, #0
   3c16c:	ldr	r0, [r4, #16]
   3c170:	ldr	r2, [r4, #20]
   3c174:	bl	1407c <memset@plt>
   3c178:	ldr	r3, [r4, #32]
   3c17c:	ldr	r0, [r4, #60]	; 0x3c
   3c180:	ldr	r2, [r4, #64]	; 0x40
   3c184:	ldr	ip, [r3]
   3c188:	ldmib	r3, {r1, lr}
   3c18c:	add	r0, r0, ip
   3c190:	sub	r2, r2, ip
   3c194:	str	r0, [r4, #16]
   3c198:	cmp	r2, r1
   3c19c:	ldrh	r0, [r4, #128]	; 0x80
   3c1a0:	movcs	r2, r1
   3c1a4:	str	lr, [r4, #20]
   3c1a8:	str	ip, [r4, #28]
   3c1ac:	ldrh	ip, [r4, #130]	; 0x82
   3c1b0:	str	r2, [r4, #24]
   3c1b4:	ldr	r2, [r4, #156]	; 0x9c
   3c1b8:	str	r1, [r3, #4]
   3c1bc:	cmp	r0, ip
   3c1c0:	sub	r0, r3, #36	; 0x24
   3c1c4:	strhcc	ip, [r4, #128]	; 0x80
   3c1c8:	ldrh	r1, [r3, #12]
   3c1cc:	sub	r3, r2, #1
   3c1d0:	str	r0, [r4, #32]
   3c1d4:	strh	r1, [r4, #130]	; 0x82
   3c1d8:	str	r3, [r4, #156]	; 0x9c
   3c1dc:	b	3c154 <flatcc_builder_end_offset_vector_for_unions@@Base+0x44>
   3c1e0:	ldr	r3, [pc, #28]	; 3c204 <flatcc_builder_end_offset_vector_for_unions@@Base+0xf4>
   3c1e4:	movw	r2, #1493	; 0x5d5
   3c1e8:	ldr	r1, [pc, #24]	; 3c208 <flatcc_builder_end_offset_vector_for_unions@@Base+0xf8>
   3c1ec:	ldr	r0, [pc, #24]	; 3c20c <flatcc_builder_end_offset_vector_for_unions@@Base+0xfc>
   3c1f0:	add	r3, pc, r3
   3c1f4:	add	r3, r3, #924	; 0x39c
   3c1f8:	add	r1, pc, r1
   3c1fc:	add	r0, pc, r0
   3c200:	bl	14118 <__assert_fail@plt>
   3c204:	andeq	pc, r1, r4, ror #2
   3c208:	andeq	pc, r1, ip, lsr #17
   3c20c:	andeq	pc, r1, r4, ror #20

0003c210 <flatcc_builder_offset_vector_edit@@Base>:
   3c210:	ldr	r0, [r0, #16]
   3c214:	bx	lr

0003c218 <flatcc_builder_offset_vector_count@@Base>:
   3c218:	ldr	r3, [r0, #32]
   3c21c:	ldr	r0, [r3, #20]
   3c220:	bx	lr

0003c224 <flatcc_builder_create_union_vector_direct@@Base>:
   3c224:	strd	r4, [sp, #-24]!	; 0xffffffe8
   3c228:	mov	r4, r0
   3c22c:	strd	r6, [sp, #8]
   3c230:	str	r8, [sp, #16]
   3c234:	str	lr, [sp, #20]
   3c238:	sub	sp, sp, #8
   3c23c:	ldr	r5, [sp, #32]
   3c240:	cmn	r5, #-1073741823	; 0xc0000001
   3c244:	bhi	3c2a8 <flatcc_builder_create_union_vector_direct@@Base+0x84>
   3c248:	mov	r6, r1
   3c24c:	mov	r7, r2
   3c250:	mov	r1, r3
   3c254:	mov	r0, r6
   3c258:	mov	r3, r2
   3c25c:	mov	r2, r5
   3c260:	bl	394c4 <flatcc_builder_default_alloc@@Base+0x458>
   3c264:	subs	r8, r0, #0
   3c268:	beq	3c2a8 <flatcc_builder_create_union_vector_direct@@Base+0x84>
   3c26c:	mvn	ip, #0
   3c270:	mov	r3, #1
   3c274:	mov	r2, r5
   3c278:	mov	r1, r7
   3c27c:	mov	r0, r6
   3c280:	stm	sp, {r3, ip}
   3c284:	bl	3bd00 <flatcc_builder_create_vector@@Base>
   3c288:	stm	r4, {r0, r8}
   3c28c:	mov	r0, r4
   3c290:	add	sp, sp, #8
   3c294:	ldrd	r4, [sp]
   3c298:	ldrd	r6, [sp, #8]
   3c29c:	ldr	r8, [sp, #16]
   3c2a0:	add	sp, sp, #20
   3c2a4:	pop	{pc}		; (ldr pc, [sp], #4)
   3c2a8:	mov	r3, #0
   3c2ac:	str	r3, [r4]
   3c2b0:	str	r3, [r4, #4]
   3c2b4:	b	3c28c <flatcc_builder_create_union_vector_direct@@Base+0x68>

0003c2b8 <flatcc_builder_create_union_vector@@Base>:
   3c2b8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   3c2bc:	mov	r5, r1
   3c2c0:	mov	r4, r2
   3c2c4:	strd	r6, [sp, #8]
   3c2c8:	mov	r6, r0
   3c2cc:	mov	r0, r1
   3c2d0:	str	r8, [sp, #16]
   3c2d4:	mov	r7, r3
   3c2d8:	str	lr, [sp, #20]
   3c2dc:	sub	sp, sp, #16
   3c2e0:	bl	3af2c <flatcc_builder_start_offset_vector@@Base>
   3c2e4:	cmp	r0, #0
   3c2e8:	beq	3c314 <flatcc_builder_create_union_vector@@Base+0x5c>
   3c2ec:	mov	r3, #0
   3c2f0:	str	r3, [r6]
   3c2f4:	str	r3, [r6, #4]
   3c2f8:	mov	r0, r6
   3c2fc:	add	sp, sp, #16
   3c300:	ldrd	r4, [sp]
   3c304:	ldrd	r6, [sp, #8]
   3c308:	ldr	r8, [sp, #16]
   3c30c:	add	sp, sp, #20
   3c310:	pop	{pc}		; (ldr pc, [sp], #4)
   3c314:	mov	r1, r7
   3c318:	mov	r0, r5
   3c31c:	bl	3a7f0 <flatcc_builder_extend_offset_vector@@Base>
   3c320:	cmp	r0, #0
   3c324:	beq	3c2ec <flatcc_builder_create_union_vector@@Base+0x34>
   3c328:	ldr	r8, [r5, #20]
   3c32c:	ldr	r3, [r5, #24]
   3c330:	add	r1, r7, r8
   3c334:	cmp	r1, r3
   3c338:	str	r1, [r5, #20]
   3c33c:	bcs	3c428 <flatcc_builder_create_union_vector@@Base+0x170>
   3c340:	ldr	r2, [r5, #16]
   3c344:	adds	r8, r2, r8
   3c348:	beq	3c2ec <flatcc_builder_create_union_vector@@Base+0x34>
   3c34c:	mov	r0, r5
   3c350:	bl	3c210 <flatcc_builder_offset_vector_edit@@Base>
   3c354:	cmp	r7, #0
   3c358:	mov	r3, r0
   3c35c:	beq	3c38c <flatcc_builder_create_union_vector@@Base+0xd4>
   3c360:	add	r2, r4, r7, lsl #3
   3c364:	mov	r1, r4
   3c368:	sub	lr, r8, #1
   3c36c:	sub	ip, r0, #4
   3c370:	ldrb	r4, [r1]
   3c374:	add	r1, r1, #8
   3c378:	strb	r4, [lr, #1]!
   3c37c:	ldr	r4, [r1, #-4]
   3c380:	cmp	r1, r2
   3c384:	str	r4, [ip, #4]!
   3c388:	bne	3c370 <flatcc_builder_create_union_vector@@Base+0xb8>
   3c38c:	mov	r2, r8
   3c390:	mov	r1, r5
   3c394:	str	r7, [sp]
   3c398:	add	r0, sp, #8
   3c39c:	bl	3c224 <flatcc_builder_create_union_vector_direct@@Base>
   3c3a0:	mov	r1, #0
   3c3a4:	ldr	r0, [r5, #16]
   3c3a8:	ldr	r2, [r5, #20]
   3c3ac:	ldr	r7, [sp, #8]
   3c3b0:	ldr	r4, [sp, #12]
   3c3b4:	bl	1407c <memset@plt>
   3c3b8:	ldr	r3, [r5, #32]
   3c3bc:	str	r7, [r6]
   3c3c0:	ldr	r0, [r5, #60]	; 0x3c
   3c3c4:	str	r4, [r6, #4]
   3c3c8:	ldr	r2, [r5, #64]	; 0x40
   3c3cc:	ldr	ip, [r3]
   3c3d0:	ldmib	r3, {r1, lr}
   3c3d4:	add	r0, r0, ip
   3c3d8:	sub	r2, r2, ip
   3c3dc:	str	r0, [r5, #16]
   3c3e0:	cmp	r2, r1
   3c3e4:	ldrh	r0, [r5, #128]	; 0x80
   3c3e8:	movcs	r2, r1
   3c3ec:	str	lr, [r5, #20]
   3c3f0:	str	ip, [r5, #28]
   3c3f4:	ldrh	ip, [r5, #130]	; 0x82
   3c3f8:	str	r2, [r5, #24]
   3c3fc:	ldr	r2, [r5, #156]	; 0x9c
   3c400:	str	r1, [r3, #4]
   3c404:	cmp	r0, ip
   3c408:	sub	r0, r3, #36	; 0x24
   3c40c:	strhcc	ip, [r5, #128]	; 0x80
   3c410:	ldrh	r1, [r3, #12]
   3c414:	sub	r3, r2, #1
   3c418:	str	r0, [r5, #32]
   3c41c:	strh	r1, [r5, #130]	; 0x82
   3c420:	str	r3, [r5, #156]	; 0x9c
   3c424:	b	3c2f8 <flatcc_builder_create_union_vector@@Base+0x40>
   3c428:	add	r1, r1, #1
   3c42c:	mvn	r2, #3
   3c430:	mov	r0, r5
   3c434:	bl	38fe4 <__flatcc_fb_coerce_scalar_type@@Base+0x718>
   3c438:	cmp	r0, #0
   3c43c:	beq	3c340 <flatcc_builder_create_union_vector@@Base+0x88>
   3c440:	b	3c2ec <flatcc_builder_create_union_vector@@Base+0x34>

0003c444 <flatcc_builder_start_union_vector@@Base>:
   3c444:	mov	r1, #4
   3c448:	strd	r4, [sp, #-16]!
   3c44c:	mov	r4, r0
   3c450:	str	r6, [sp, #8]
   3c454:	str	lr, [sp, #12]
   3c458:	bl	393a0 <flatcc_builder_default_alloc@@Base+0x334>
   3c45c:	cmp	r0, #0
   3c460:	bne	3c4b8 <flatcc_builder_start_union_vector@@Base+0x74>
   3c464:	ldr	ip, [r4, #28]
   3c468:	mov	lr, #8
   3c46c:	mov	r5, #7
   3c470:	ldr	r3, [r4, #32]
   3c474:	ldr	r2, [r4, #64]	; 0x40
   3c478:	ldr	r1, [r4, #60]	; 0x3c
   3c47c:	strh	r5, [r3, #14]
   3c480:	str	lr, [r3, #16]
   3c484:	sub	r2, r2, ip
   3c488:	str	r0, [r3, #20]
   3c48c:	cmn	r2, #4
   3c490:	mvnhi	r2, #3
   3c494:	add	r1, r1, ip
   3c498:	str	r1, [r4, #16]
   3c49c:	str	r2, [r4, #24]
   3c4a0:	mvn	r2, #3
   3c4a4:	str	r2, [r3, #4]
   3c4a8:	ldrd	r4, [sp]
   3c4ac:	ldr	r6, [sp, #8]
   3c4b0:	add	sp, sp, #12
   3c4b4:	pop	{pc}		; (ldr pc, [sp], #4)
   3c4b8:	mvn	r0, #0
   3c4bc:	b	3c4a8 <flatcc_builder_start_union_vector@@Base+0x64>

0003c4c0 <flatcc_builder_union_vector_edit@@Base>:
   3c4c0:	ldr	r0, [r0, #16]
   3c4c4:	bx	lr

0003c4c8 <flatcc_builder_union_vector_count@@Base>:
   3c4c8:	ldr	r3, [r0, #32]
   3c4cc:	ldr	r0, [r3, #20]
   3c4d0:	bx	lr

0003c4d4 <flatcc_builder_end_union_vector@@Base>:
   3c4d4:	ldr	r3, [r1, #32]
   3c4d8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   3c4dc:	ldrh	r3, [r3, #14]
   3c4e0:	strd	r6, [sp, #8]
   3c4e4:	str	r8, [sp, #16]
   3c4e8:	str	lr, [sp, #20]
   3c4ec:	sub	sp, sp, #16
   3c4f0:	cmp	r3, #7
   3c4f4:	bne	3c654 <flatcc_builder_end_union_vector@@Base+0x180>
   3c4f8:	mov	r4, r1
   3c4fc:	mov	r6, r0
   3c500:	mov	r0, r1
   3c504:	bl	3c4c8 <flatcc_builder_union_vector_count@@Base>
   3c508:	ldr	r8, [r4, #20]
   3c50c:	lsl	r7, r0, #2
   3c510:	mov	r5, r0
   3c514:	ldr	r3, [r4, #24]
   3c518:	add	r1, r7, r0
   3c51c:	add	r1, r1, r8
   3c520:	cmp	r1, r3
   3c524:	str	r1, [r4, #20]
   3c528:	bcs	3c62c <flatcc_builder_end_union_vector@@Base+0x158>
   3c52c:	ldr	r3, [r4, #16]
   3c530:	adds	r8, r3, r8
   3c534:	beq	3c644 <flatcc_builder_end_union_vector@@Base+0x170>
   3c538:	mov	r0, r4
   3c53c:	add	r7, r8, r7
   3c540:	bl	3c4c0 <flatcc_builder_union_vector_edit@@Base>
   3c544:	cmp	r5, #0
   3c548:	beq	3c574 <flatcc_builder_end_union_vector@@Base+0xa0>
   3c54c:	add	r3, r0, r5, lsl #3
   3c550:	sub	ip, r7, #1
   3c554:	sub	r1, r8, #4
   3c558:	ldrb	lr, [r0]
   3c55c:	add	r0, r0, #8
   3c560:	strb	lr, [ip, #1]!
   3c564:	ldr	lr, [r0, #-4]
   3c568:	cmp	r0, r3
   3c56c:	str	lr, [r1, #4]!
   3c570:	bne	3c558 <flatcc_builder_end_union_vector@@Base+0x84>
   3c574:	mov	r3, r8
   3c578:	mov	r2, r7
   3c57c:	str	r5, [sp]
   3c580:	mov	r1, r4
   3c584:	add	r0, sp, #8
   3c588:	bl	3c224 <flatcc_builder_create_union_vector_direct@@Base>
   3c58c:	mov	r1, #0
   3c590:	ldr	r0, [r4, #16]
   3c594:	ldr	r2, [r4, #20]
   3c598:	ldr	r7, [sp, #8]
   3c59c:	ldr	r5, [sp, #12]
   3c5a0:	bl	1407c <memset@plt>
   3c5a4:	ldr	r3, [r4, #32]
   3c5a8:	str	r7, [r6]
   3c5ac:	ldr	r0, [r4, #60]	; 0x3c
   3c5b0:	str	r5, [r6, #4]
   3c5b4:	ldr	r2, [r4, #64]	; 0x40
   3c5b8:	ldr	ip, [r3]
   3c5bc:	ldmib	r3, {r1, lr}
   3c5c0:	add	r0, r0, ip
   3c5c4:	sub	r2, r2, ip
   3c5c8:	str	r0, [r4, #16]
   3c5cc:	cmp	r2, r1
   3c5d0:	ldrh	r0, [r4, #128]	; 0x80
   3c5d4:	movcs	r2, r1
   3c5d8:	str	lr, [r4, #20]
   3c5dc:	str	ip, [r4, #28]
   3c5e0:	ldrh	ip, [r4, #130]	; 0x82
   3c5e4:	str	r2, [r4, #24]
   3c5e8:	ldr	r2, [r4, #156]	; 0x9c
   3c5ec:	str	r1, [r3, #4]
   3c5f0:	cmp	r0, ip
   3c5f4:	sub	r0, r3, #36	; 0x24
   3c5f8:	strhcc	ip, [r4, #128]	; 0x80
   3c5fc:	ldrh	r1, [r3, #12]
   3c600:	sub	r3, r2, #1
   3c604:	str	r0, [r4, #32]
   3c608:	strh	r1, [r4, #130]	; 0x82
   3c60c:	str	r3, [r4, #156]	; 0x9c
   3c610:	mov	r0, r6
   3c614:	add	sp, sp, #16
   3c618:	ldrd	r4, [sp]
   3c61c:	ldrd	r6, [sp, #8]
   3c620:	ldr	r8, [sp, #16]
   3c624:	add	sp, sp, #20
   3c628:	pop	{pc}		; (ldr pc, [sp], #4)
   3c62c:	add	r1, r1, #1
   3c630:	mvn	r2, #3
   3c634:	mov	r0, r4
   3c638:	bl	38fe4 <__flatcc_fb_coerce_scalar_type@@Base+0x718>
   3c63c:	cmp	r0, #0
   3c640:	beq	3c52c <flatcc_builder_end_union_vector@@Base+0x58>
   3c644:	mov	r3, #0
   3c648:	str	r3, [r6]
   3c64c:	str	r3, [r6, #4]
   3c650:	b	3c610 <flatcc_builder_end_union_vector@@Base+0x13c>
   3c654:	ldr	r3, [pc, #28]	; 3c678 <flatcc_builder_end_union_vector@@Base+0x1a4>
   3c658:	movw	r2, #1617	; 0x651
   3c65c:	ldr	r1, [pc, #24]	; 3c67c <flatcc_builder_end_union_vector@@Base+0x1a8>
   3c660:	ldr	r0, [pc, #24]	; 3c680 <flatcc_builder_end_union_vector@@Base+0x1ac>
   3c664:	add	r3, pc, r3
   3c668:	add	r3, r3, #968	; 0x3c8
   3c66c:	add	r1, pc, r1
   3c670:	add	r0, pc, r0
   3c674:	bl	14118 <__assert_fail@plt>
   3c678:	strdeq	lr, [r1], -r0
   3c67c:	andeq	pc, r1, r8, lsr r4	; <UNPREDICTABLE>
   3c680:	andeq	pc, r1, r0, asr r7	; <UNPREDICTABLE>

0003c684 <flatcc_builder_extend_union_vector@@Base>:
   3c684:	ldr	ip, [r0, #32]
   3c688:	strd	r4, [sp, #-16]!
   3c68c:	ldr	r3, [ip, #20]
   3c690:	str	r6, [sp, #8]
   3c694:	str	lr, [sp, #12]
   3c698:	adds	r2, r1, r3
   3c69c:	movcs	r3, #1
   3c6a0:	movcc	r3, #0
   3c6a4:	cmn	r2, #-536870911	; 0xe0000001
   3c6a8:	movls	r4, #0
   3c6ac:	movhi	r4, #1
   3c6b0:	orrs	r4, r3, r4
   3c6b4:	bne	3c70c <flatcc_builder_extend_union_vector@@Base+0x88>
   3c6b8:	ldr	r6, [r0, #20]
   3c6bc:	mov	r5, r0
   3c6c0:	ldr	r3, [r0, #24]
   3c6c4:	str	r2, [ip, #20]
   3c6c8:	add	r1, r6, r1, lsl #3
   3c6cc:	cmp	r1, r3
   3c6d0:	str	r1, [r0, #20]
   3c6d4:	bcs	3c6f0 <flatcc_builder_extend_union_vector@@Base+0x6c>
   3c6d8:	ldr	r0, [r5, #16]
   3c6dc:	add	r0, r0, r6
   3c6e0:	ldrd	r4, [sp]
   3c6e4:	ldr	r6, [sp, #8]
   3c6e8:	add	sp, sp, #12
   3c6ec:	pop	{pc}		; (ldr pc, [sp], #4)
   3c6f0:	add	r1, r1, #1
   3c6f4:	mvn	r2, #3
   3c6f8:	bl	38fe4 <__flatcc_fb_coerce_scalar_type@@Base+0x718>
   3c6fc:	cmp	r0, #0
   3c700:	beq	3c6d8 <flatcc_builder_extend_union_vector@@Base+0x54>
   3c704:	mov	r0, r4
   3c708:	b	3c6e0 <flatcc_builder_extend_union_vector@@Base+0x5c>
   3c70c:	bl	39368 <flatcc_builder_default_alloc@@Base+0x2fc>

0003c710 <flatcc_builder_truncate_union_vector@@Base>:
   3c710:	mov	r3, r0
   3c714:	ldr	r0, [r0, #32]
   3c718:	str	r4, [sp, #-8]!
   3c71c:	ldrh	r2, [r0, #14]
   3c720:	str	lr, [sp, #4]
   3c724:	cmp	r2, #7
   3c728:	bne	3c778 <flatcc_builder_truncate_union_vector@@Base+0x68>
   3c72c:	mov	lr, r1
   3c730:	ldr	r1, [r0, #20]
   3c734:	cmp	r1, lr
   3c738:	bcc	3c79c <flatcc_builder_truncate_union_vector@@Base+0x8c>
   3c73c:	ldr	r2, [r0, #16]
   3c740:	sub	ip, r1, lr
   3c744:	mov	r1, #0
   3c748:	str	ip, [r0, #20]
   3c74c:	ldr	r0, [r3, #16]
   3c750:	ldr	ip, [r3, #20]
   3c754:	mul	r2, r2, lr
   3c758:	sub	ip, ip, r2
   3c75c:	add	r0, r0, ip
   3c760:	str	ip, [r3, #20]
   3c764:	bl	1407c <memset@plt>
   3c768:	ldr	r4, [sp]
   3c76c:	add	sp, sp, #4
   3c770:	mov	r0, #0
   3c774:	pop	{pc}		; (ldr pc, [sp], #4)
   3c778:	ldr	r3, [pc, #64]	; 3c7c0 <flatcc_builder_truncate_union_vector@@Base+0xb0>
   3c77c:	movw	r2, #1665	; 0x681
   3c780:	ldr	r1, [pc, #60]	; 3c7c4 <flatcc_builder_truncate_union_vector@@Base+0xb4>
   3c784:	ldr	r0, [pc, #60]	; 3c7c8 <flatcc_builder_truncate_union_vector@@Base+0xb8>
   3c788:	add	r3, pc, r3
   3c78c:	add	r3, r3, #1000	; 0x3e8
   3c790:	add	r1, pc, r1
   3c794:	add	r0, pc, r0
   3c798:	bl	14118 <__assert_fail@plt>
   3c79c:	ldr	r3, [pc, #40]	; 3c7cc <flatcc_builder_truncate_union_vector@@Base+0xbc>
   3c7a0:	movw	r2, #1666	; 0x682
   3c7a4:	ldr	r1, [pc, #36]	; 3c7d0 <flatcc_builder_truncate_union_vector@@Base+0xc0>
   3c7a8:	ldr	r0, [pc, #36]	; 3c7d4 <flatcc_builder_truncate_union_vector@@Base+0xc4>
   3c7ac:	add	r3, pc, r3
   3c7b0:	add	r3, r3, #1000	; 0x3e8
   3c7b4:	add	r1, pc, r1
   3c7b8:	add	r0, pc, r0
   3c7bc:	bl	14118 <__assert_fail@plt>
   3c7c0:	andeq	lr, r1, ip, asr #23
   3c7c4:	andeq	pc, r1, r4, lsl r3	; <UNPREDICTABLE>
   3c7c8:	andeq	pc, r1, ip, lsr #12
   3c7cc:	andeq	lr, r1, r8, lsr #23
   3c7d0:	strdeq	pc, [r1], -r0
   3c7d4:	andeq	pc, r1, ip, lsr #10

0003c7d8 <flatcc_builder_union_vector_push@@Base>:
   3c7d8:	strd	r4, [sp, #-20]!	; 0xffffffec
   3c7dc:	strd	r6, [sp, #8]
   3c7e0:	str	lr, [sp, #16]
   3c7e4:	sub	sp, sp, #12
   3c7e8:	add	r3, sp, #8
   3c7ec:	stmdb	r3, {r1, r2}
   3c7f0:	ldr	r2, [r0, #32]
   3c7f4:	ldrh	r3, [r2, #14]
   3c7f8:	cmp	r3, #7
   3c7fc:	bne	3c874 <flatcc_builder_union_vector_push@@Base+0x9c>
   3c800:	ldr	r3, [r2, #20]
   3c804:	cmn	r3, #-536870911	; 0xe0000001
   3c808:	beq	3c86c <flatcc_builder_union_vector_push@@Base+0x94>
   3c80c:	ldr	r5, [r0, #20]
   3c810:	add	r3, r3, #1
   3c814:	mov	r4, r0
   3c818:	ldr	r1, [r0, #24]
   3c81c:	str	r3, [r2, #20]
   3c820:	add	r3, r5, #8
   3c824:	cmp	r3, r1
   3c828:	str	r3, [r0, #20]
   3c82c:	bcs	3c858 <flatcc_builder_union_vector_push@@Base+0x80>
   3c830:	ldr	r3, [r4, #16]
   3c834:	adds	r0, r3, r5
   3c838:	beq	3c844 <flatcc_builder_union_vector_push@@Base+0x6c>
   3c83c:	ldrd	r6, [sp]
   3c840:	strd	r6, [r3, r5]
   3c844:	add	sp, sp, #12
   3c848:	ldrd	r4, [sp]
   3c84c:	ldrd	r6, [sp, #8]
   3c850:	add	sp, sp, #16
   3c854:	pop	{pc}		; (ldr pc, [sp], #4)
   3c858:	mvn	r2, #3
   3c85c:	add	r1, r5, #9
   3c860:	bl	38fe4 <__flatcc_fb_coerce_scalar_type@@Base+0x718>
   3c864:	cmp	r0, #0
   3c868:	beq	3c830 <flatcc_builder_union_vector_push@@Base+0x58>
   3c86c:	mov	r0, #0
   3c870:	b	3c844 <flatcc_builder_union_vector_push@@Base+0x6c>
   3c874:	ldr	r3, [pc, #28]	; 3c898 <flatcc_builder_union_vector_push@@Base+0xc0>
   3c878:	movw	r2, #1677	; 0x68d
   3c87c:	ldr	r1, [pc, #24]	; 3c89c <flatcc_builder_union_vector_push@@Base+0xc4>
   3c880:	ldr	r0, [pc, #24]	; 3c8a0 <flatcc_builder_union_vector_push@@Base+0xc8>
   3c884:	add	r3, pc, r3
   3c888:	add	r3, r3, #1040	; 0x410
   3c88c:	add	r1, pc, r1
   3c890:	add	r0, pc, r0
   3c894:	bl	14118 <__assert_fail@plt>
   3c898:	ldrdeq	lr, [r1], -r0
   3c89c:	andeq	pc, r1, r8, lsl r2	; <UNPREDICTABLE>
   3c8a0:	andeq	pc, r1, r0, lsr r5	; <UNPREDICTABLE>

0003c8a4 <flatcc_builder_append_union_vector@@Base>:
   3c8a4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   3c8a8:	mov	r4, r1
   3c8ac:	ldr	r1, [r0, #32]
   3c8b0:	ldrh	r3, [r1, #14]
   3c8b4:	strd	r6, [sp, #8]
   3c8b8:	str	r8, [sp, #16]
   3c8bc:	str	lr, [sp, #20]
   3c8c0:	cmp	r3, #7
   3c8c4:	bne	3c964 <flatcc_builder_append_union_vector@@Base+0xc0>
   3c8c8:	ldr	r3, [r1, #20]
   3c8cc:	adds	r3, r2, r3
   3c8d0:	movcs	lr, #1
   3c8d4:	movcc	lr, #0
   3c8d8:	cmn	r3, #-536870911	; 0xe0000001
   3c8dc:	movls	ip, #0
   3c8e0:	movhi	ip, #1
   3c8e4:	orrs	r8, lr, ip
   3c8e8:	bne	3c98c <flatcc_builder_append_union_vector@@Base+0xe8>
   3c8ec:	ldr	r7, [r0, #20]
   3c8f0:	lsl	r6, r2, #3
   3c8f4:	mov	r5, r0
   3c8f8:	str	r3, [r1, #20]
   3c8fc:	ldr	r3, [r0, #24]
   3c900:	add	r1, r6, r7
   3c904:	cmp	r1, r3
   3c908:	str	r1, [r0, #20]
   3c90c:	bcs	3c948 <flatcc_builder_append_union_vector@@Base+0xa4>
   3c910:	ldr	r3, [r5, #16]
   3c914:	adds	r3, r3, r7
   3c918:	beq	3c930 <flatcc_builder_append_union_vector@@Base+0x8c>
   3c91c:	mov	r0, r3
   3c920:	mov	r2, r6
   3c924:	mov	r1, r4
   3c928:	bl	13fb0 <memcpy@plt>
   3c92c:	mov	r3, r0
   3c930:	ldrd	r4, [sp]
   3c934:	mov	r0, r3
   3c938:	ldrd	r6, [sp, #8]
   3c93c:	ldr	r8, [sp, #16]
   3c940:	add	sp, sp, #20
   3c944:	pop	{pc}		; (ldr pc, [sp], #4)
   3c948:	add	r1, r1, #1
   3c94c:	mvn	r2, #3
   3c950:	bl	38fe4 <__flatcc_fb_coerce_scalar_type@@Base+0x718>
   3c954:	cmp	r0, #0
   3c958:	beq	3c910 <flatcc_builder_append_union_vector@@Base+0x6c>
   3c95c:	mov	r3, r8
   3c960:	b	3c930 <flatcc_builder_append_union_vector@@Base+0x8c>
   3c964:	ldr	r3, [pc, #36]	; 3c990 <flatcc_builder_append_union_vector@@Base+0xec>
   3c968:	movw	r2, #1692	; 0x69c
   3c96c:	ldr	r1, [pc, #32]	; 3c994 <flatcc_builder_append_union_vector@@Base+0xf0>
   3c970:	ldr	r0, [pc, #32]	; 3c998 <flatcc_builder_append_union_vector@@Base+0xf4>
   3c974:	add	r3, pc, r3
   3c978:	add	r3, r3, #1072	; 0x430
   3c97c:	add	r1, pc, r1
   3c980:	add	r3, r3, #4
   3c984:	add	r0, pc, r0
   3c988:	bl	14118 <__assert_fail@plt>
   3c98c:	bl	39368 <flatcc_builder_default_alloc@@Base+0x2fc>
   3c990:	andeq	lr, r1, r0, ror #19
   3c994:	andeq	pc, r1, r8, lsr #2
   3c998:	andeq	pc, r1, ip, lsr r4	; <UNPREDICTABLE>

0003c99c <flatcc_builder_create_string@@Base>:
   3c99c:	ldr	ip, [r0, #136]	; 0x88
   3c9a0:	cmp	r2, #0
   3c9a4:	strd	r4, [sp, #-20]!	; 0xffffffec
   3c9a8:	mov	r5, #4
   3c9ac:	mov	r4, r0
   3c9b0:	strd	r6, [sp, #8]
   3c9b4:	mov	r0, #1
   3c9b8:	moveq	r7, #2
   3c9bc:	str	lr, [sp, #16]
   3c9c0:	sub	sp, sp, #92	; 0x5c
   3c9c4:	moveq	r1, r0
   3c9c8:	add	r3, sp, #12
   3c9cc:	ldr	lr, [pc, #204]	; 3caa0 <flatcc_builder_create_string@@Base+0x104>
   3c9d0:	str	r2, [sp, #12]
   3c9d4:	str	r3, [sp, #24]
   3c9d8:	sub	r3, ip, r2
   3c9dc:	sub	r3, r3, #1
   3c9e0:	str	r5, [sp, #28]
   3c9e4:	and	r3, r3, #3
   3c9e8:	add	lr, pc, lr
   3c9ec:	add	r3, r3, r0
   3c9f0:	beq	3ca08 <flatcc_builder_create_string@@Base+0x6c>
   3c9f4:	add	r5, r2, r5
   3c9f8:	mov	r7, #3
   3c9fc:	str	r1, [sp, #32]
   3ca00:	mov	r1, #2
   3ca04:	str	r2, [sp, #36]	; 0x24
   3ca08:	ldr	r6, [pc, #148]	; 3caa4 <flatcc_builder_create_string@@Base+0x108>
   3ca0c:	add	r0, r3, r5
   3ca10:	add	r2, sp, #88	; 0x58
   3ca14:	add	r1, r1, #1
   3ca18:	sub	r5, ip, r0
   3ca1c:	add	r1, r2, r1, lsl #3
   3ca20:	str	r0, [sp, #16]
   3ca24:	cmp	ip, r5
   3ca28:	ldr	r2, [lr, r6]
   3ca2c:	str	r7, [sp, #20]
   3ca30:	strd	r2, [r1, #-72]	; 0xffffffb8
   3ca34:	ble	3ca78 <flatcc_builder_create_string@@Base+0xdc>
   3ca38:	mov	r2, r7
   3ca3c:	mov	r3, r5
   3ca40:	str	r0, [sp]
   3ca44:	add	r1, sp, #24
   3ca48:	ldr	r0, [r4, #36]	; 0x24
   3ca4c:	ldr	r6, [r4, #44]	; 0x2c
   3ca50:	blx	r6
   3ca54:	cmp	r0, #0
   3ca58:	bne	3ca9c <flatcc_builder_create_string@@Base+0x100>
   3ca5c:	mov	r0, r5
   3ca60:	str	r5, [r4, #136]	; 0x88
   3ca64:	add	sp, sp, #92	; 0x5c
   3ca68:	ldrd	r4, [sp]
   3ca6c:	ldrd	r6, [sp, #8]
   3ca70:	add	sp, sp, #16
   3ca74:	pop	{pc}		; (ldr pc, [sp], #4)
   3ca78:	ldr	r3, [pc, #40]	; 3caa8 <flatcc_builder_create_string@@Base+0x10c>
   3ca7c:	movw	r2, #647	; 0x287
   3ca80:	ldr	r1, [pc, #36]	; 3caac <flatcc_builder_create_string@@Base+0x110>
   3ca84:	ldr	r0, [pc, #36]	; 3cab0 <flatcc_builder_create_string@@Base+0x114>
   3ca88:	add	r3, pc, r3
   3ca8c:	add	r3, r3, #44	; 0x2c
   3ca90:	add	r1, pc, r1
   3ca94:	add	r0, pc, r0
   3ca98:	bl	14118 <__assert_fail@plt>
   3ca9c:	bl	39330 <flatcc_builder_default_alloc@@Base+0x2c4>
   3caa0:	andeq	r0, r3, r0, lsl r6
   3caa4:	muleq	r0, ip, r0
   3caa8:	andeq	lr, r1, ip, asr #17
   3caac:	andeq	pc, r1, r4, lsl r0	; <UNPREDICTABLE>
   3cab0:	andeq	sp, r0, r0, lsr #17

0003cab4 <flatcc_builder_create_string_str@@Base>:
   3cab4:	strd	r4, [sp, #-16]!
   3cab8:	mov	r5, r0
   3cabc:	mov	r0, r1
   3cac0:	mov	r4, r1
   3cac4:	str	r6, [sp, #8]
   3cac8:	str	lr, [sp, #12]
   3cacc:	bl	1404c <strlen@plt>
   3cad0:	mov	r2, r0
   3cad4:	mov	r1, r4
   3cad8:	ldr	r6, [sp, #8]
   3cadc:	mov	r0, r5
   3cae0:	ldrd	r4, [sp]
   3cae4:	ldr	lr, [sp, #12]
   3cae8:	add	sp, sp, #16
   3caec:	b	3c99c <flatcc_builder_create_string@@Base>

0003caf0 <flatcc_builder_create_string_strn@@Base>:
   3caf0:	strd	r4, [sp, #-16]!
   3caf4:	mov	r4, r1
   3caf8:	mov	r1, #0
   3cafc:	str	r6, [sp, #8]
   3cb00:	mov	r6, r0
   3cb04:	mov	r0, r4
   3cb08:	mov	r5, r2
   3cb0c:	str	lr, [sp, #12]
   3cb10:	bl	140a0 <memchr@plt>
   3cb14:	cmp	r0, #0
   3cb18:	mov	r1, r4
   3cb1c:	ldr	lr, [sp, #12]
   3cb20:	subne	r5, r0, r4
   3cb24:	mov	r0, r6
   3cb28:	mov	r2, r5
   3cb2c:	ldrd	r4, [sp]
   3cb30:	ldr	r6, [sp, #8]
   3cb34:	add	sp, sp, #16
   3cb38:	b	3c99c <flatcc_builder_create_string@@Base>

0003cb3c <flatcc_builder_end_string@@Base>:
   3cb3c:	ldr	r3, [r0, #32]
   3cb40:	strd	r4, [sp, #-16]!
   3cb44:	ldrh	r2, [r3, #14]
   3cb48:	str	r6, [sp, #8]
   3cb4c:	str	lr, [sp, #12]
   3cb50:	cmp	r2, #6
   3cb54:	bne	3cc2c <flatcc_builder_end_string@@Base+0xf0>
   3cb58:	ldr	r2, [r3, #20]
   3cb5c:	mov	r4, r0
   3cb60:	ldr	r3, [r0, #20]
   3cb64:	cmp	r2, r3
   3cb68:	bne	3cc04 <flatcc_builder_end_string@@Base+0xc8>
   3cb6c:	ldr	r1, [r0, #16]
   3cb70:	bl	3c99c <flatcc_builder_create_string@@Base>
   3cb74:	subs	r5, r0, #0
   3cb78:	beq	3cbf0 <flatcc_builder_end_string@@Base+0xb4>
   3cb7c:	mov	r1, #0
   3cb80:	ldr	r0, [r4, #16]
   3cb84:	ldr	r2, [r4, #20]
   3cb88:	bl	1407c <memset@plt>
   3cb8c:	ldr	r3, [r4, #32]
   3cb90:	ldr	r0, [r4, #60]	; 0x3c
   3cb94:	ldr	r2, [r4, #64]	; 0x40
   3cb98:	ldr	ip, [r3]
   3cb9c:	ldmib	r3, {r1, lr}
   3cba0:	add	r0, r0, ip
   3cba4:	sub	r2, r2, ip
   3cba8:	str	r0, [r4, #16]
   3cbac:	cmp	r2, r1
   3cbb0:	ldrh	r0, [r4, #128]	; 0x80
   3cbb4:	movcs	r2, r1
   3cbb8:	str	lr, [r4, #20]
   3cbbc:	str	ip, [r4, #28]
   3cbc0:	ldrh	ip, [r4, #130]	; 0x82
   3cbc4:	str	r2, [r4, #24]
   3cbc8:	ldr	r2, [r4, #156]	; 0x9c
   3cbcc:	str	r1, [r3, #4]
   3cbd0:	cmp	r0, ip
   3cbd4:	sub	r0, r3, #36	; 0x24
   3cbd8:	strhcc	ip, [r4, #128]	; 0x80
   3cbdc:	ldrh	r1, [r3, #12]
   3cbe0:	sub	r3, r2, #1
   3cbe4:	str	r0, [r4, #32]
   3cbe8:	strh	r1, [r4, #130]	; 0x82
   3cbec:	str	r3, [r4, #156]	; 0x9c
   3cbf0:	mov	r0, r5
   3cbf4:	ldrd	r4, [sp]
   3cbf8:	ldr	r6, [sp, #8]
   3cbfc:	add	sp, sp, #12
   3cc00:	pop	{pc}		; (ldr pc, [sp], #4)
   3cc04:	ldr	r3, [pc, #72]	; 3cc54 <flatcc_builder_end_string@@Base+0x118>
   3cc08:	movw	r2, #1733	; 0x6c5
   3cc0c:	ldr	r1, [pc, #68]	; 3cc58 <flatcc_builder_end_string@@Base+0x11c>
   3cc10:	ldr	r0, [pc, #68]	; 3cc5c <flatcc_builder_end_string@@Base+0x120>
   3cc14:	add	r3, pc, r3
   3cc18:	add	r3, r3, #1104	; 0x450
   3cc1c:	add	r1, pc, r1
   3cc20:	add	r3, r3, #8
   3cc24:	add	r0, pc, r0
   3cc28:	bl	14118 <__assert_fail@plt>
   3cc2c:	ldr	r3, [pc, #44]	; 3cc60 <flatcc_builder_end_string@@Base+0x124>
   3cc30:	movw	r2, #1732	; 0x6c4
   3cc34:	ldr	r1, [pc, #40]	; 3cc64 <flatcc_builder_end_string@@Base+0x128>
   3cc38:	ldr	r0, [pc, #40]	; 3cc68 <flatcc_builder_end_string@@Base+0x12c>
   3cc3c:	add	r3, pc, r3
   3cc40:	add	r3, r3, #1104	; 0x450
   3cc44:	add	r1, pc, r1
   3cc48:	add	r3, r3, #8
   3cc4c:	add	r0, pc, r0
   3cc50:	bl	14118 <__assert_fail@plt>
   3cc54:	andeq	lr, r1, r0, asr #14
   3cc58:	andeq	lr, r1, r8, lsl #29
   3cc5c:	ldrdeq	pc, [r1], -r0
   3cc60:	andeq	lr, r1, r8, lsl r7
   3cc64:	andeq	lr, r1, r0, ror #28
   3cc68:	andeq	pc, r1, r8, asr #32

0003cc6c <flatcc_builder_string_edit@@Base>:
   3cc6c:	ldr	r0, [r0, #16]
   3cc70:	bx	lr

0003cc74 <flatcc_builder_string_len@@Base>:
   3cc74:	ldr	r3, [r0, #32]
   3cc78:	ldr	r0, [r3, #20]
   3cc7c:	bx	lr

0003cc80 <flatcc_builder_table_add@@Base>:
   3cc80:	strd	r4, [sp, #-32]!	; 0xffffffe0
   3cc84:	mov	r4, r0
   3cc88:	ldr	r0, [r0, #32]
   3cc8c:	ldrh	r0, [r0, #14]
   3cc90:	strd	r6, [sp, #8]
   3cc94:	strd	r8, [sp, #16]
   3cc98:	str	sl, [sp, #24]
   3cc9c:	str	lr, [sp, #28]
   3cca0:	cmp	r0, #3
   3cca4:	bne	3cdd4 <flatcc_builder_table_add@@Base+0x154>
   3cca8:	movw	r0, #32764	; 0x7ffc
   3ccac:	cmp	r1, r0
   3ccb0:	bhi	3cdac <flatcc_builder_table_add@@Base+0x12c>
   3ccb4:	ldrh	r0, [r4, #130]	; 0x82
   3ccb8:	lsl	r8, r1, #1
   3ccbc:	ldr	lr, [r4, #4]
   3ccc0:	cmp	r0, r3
   3ccc4:	strhcc	r3, [r4, #130]	; 0x82
   3ccc8:	ldrh	r6, [lr, r8]
   3cccc:	add	lr, lr, r8
   3ccd0:	cmp	r6, #0
   3ccd4:	bne	3cd84 <flatcc_builder_table_add@@Base+0x104>
   3ccd8:	ldr	ip, [r4, #12]
   3ccdc:	movw	r9, #31153	; 0x79b1
   3cce0:	movt	r9, #40503	; 0x9e37
   3cce4:	uxth	r7, r1
   3cce8:	sub	r5, r3, #1
   3ccec:	ldr	r0, [r4, #20]
   3ccf0:	rsb	r3, r3, #0
   3ccf4:	eor	ip, ip, r1
   3ccf8:	ldr	r1, [r4, #24]
   3ccfc:	mul	ip, r9, ip
   3cd00:	add	r5, r5, r0
   3cd04:	and	r5, r5, r3
   3cd08:	eor	ip, ip, r2
   3cd0c:	add	r2, r2, r5
   3cd10:	cmp	r2, r1
   3cd14:	mul	ip, r9, ip
   3cd18:	str	ip, [r4, #12]
   3cd1c:	str	r2, [r4, #20]
   3cd20:	bcs	3cd5c <flatcc_builder_table_add@@Base+0xdc>
   3cd24:	add	r3, r5, #4
   3cd28:	ldr	r0, [r4, #16]
   3cd2c:	strh	r3, [lr]
   3cd30:	ldrh	r3, [r4, #8]
   3cd34:	add	r0, r0, r5
   3cd38:	cmp	r3, r7
   3cd3c:	addls	r7, r7, #1
   3cd40:	strhls	r7, [r4, #8]
   3cd44:	ldrd	r4, [sp]
   3cd48:	ldrd	r6, [sp, #8]
   3cd4c:	ldrd	r8, [sp, #16]
   3cd50:	ldr	sl, [sp, #24]
   3cd54:	add	sp, sp, #28
   3cd58:	pop	{pc}		; (ldr pc, [sp], #4)
   3cd5c:	add	r1, r2, #1
   3cd60:	mov	r0, r4
   3cd64:	movw	r2, #65532	; 0xfffc
   3cd68:	bl	38fe4 <__flatcc_fb_coerce_scalar_type@@Base+0x718>
   3cd6c:	cmp	r0, #0
   3cd70:	movne	r0, r6
   3cd74:	bne	3cd44 <flatcc_builder_table_add@@Base+0xc4>
   3cd78:	ldr	lr, [r4, #4]
   3cd7c:	add	lr, lr, r8
   3cd80:	b	3cd24 <flatcc_builder_table_add@@Base+0xa4>
   3cd84:	ldr	r3, [pc, #112]	; 3cdfc <flatcc_builder_table_add@@Base+0x17c>
   3cd88:	movw	r2, #1784	; 0x6f8
   3cd8c:	ldr	r1, [pc, #108]	; 3ce00 <flatcc_builder_table_add@@Base+0x180>
   3cd90:	ldr	r0, [pc, #108]	; 3ce04 <flatcc_builder_table_add@@Base+0x184>
   3cd94:	add	r3, pc, r3
   3cd98:	add	r3, r3, #1136	; 0x470
   3cd9c:	add	r1, pc, r1
   3cda0:	add	r3, r3, #4
   3cda4:	add	r0, pc, r0
   3cda8:	bl	14118 <__assert_fail@plt>
   3cdac:	ldr	r3, [pc, #84]	; 3ce08 <flatcc_builder_table_add@@Base+0x188>
   3cdb0:	movw	r2, #1774	; 0x6ee
   3cdb4:	ldr	r1, [pc, #80]	; 3ce0c <flatcc_builder_table_add@@Base+0x18c>
   3cdb8:	ldr	r0, [pc, #80]	; 3ce10 <flatcc_builder_table_add@@Base+0x190>
   3cdbc:	add	r3, pc, r3
   3cdc0:	add	r3, r3, #1136	; 0x470
   3cdc4:	add	r1, pc, r1
   3cdc8:	add	r3, r3, #4
   3cdcc:	add	r0, pc, r0
   3cdd0:	bl	14118 <__assert_fail@plt>
   3cdd4:	ldr	r3, [pc, #56]	; 3ce14 <flatcc_builder_table_add@@Base+0x194>
   3cdd8:	movw	r2, #1773	; 0x6ed
   3cddc:	ldr	r1, [pc, #52]	; 3ce18 <flatcc_builder_table_add@@Base+0x198>
   3cde0:	ldr	r0, [pc, #52]	; 3ce1c <flatcc_builder_table_add@@Base+0x19c>
   3cde4:	add	r3, pc, r3
   3cde8:	add	r3, r3, #1136	; 0x470
   3cdec:	add	r1, pc, r1
   3cdf0:	add	r3, r3, #4
   3cdf4:	add	r0, pc, r0
   3cdf8:	bl	14118 <__assert_fail@plt>
   3cdfc:	andeq	lr, r1, r0, asr #11
   3ce00:	andeq	lr, r1, r8, lsl #26
   3ce04:	muleq	r0, r0, r5
   3ce08:	muleq	r1, r8, r5
   3ce0c:	andeq	lr, r1, r0, ror #25
   3ce10:	andeq	pc, r1, ip, asr #32
   3ce14:	andeq	lr, r1, r0, ror r5
   3ce18:			; <UNDEFINED> instruction: 0x0001ecb8
   3ce1c:	andeq	lr, r1, ip, lsl #31

0003ce20 <flatcc_builder_table_edit@@Base>:
   3ce20:	ldr	r2, [r0, #32]
   3ce24:	ldrh	r2, [r2, #14]
   3ce28:	cmp	r2, #3
   3ce2c:	bne	3ce44 <flatcc_builder_table_edit@@Base+0x24>
   3ce30:	ldr	r3, [r0, #20]
   3ce34:	ldr	r0, [r0, #16]
   3ce38:	sub	r3, r3, r1
   3ce3c:	add	r0, r0, r3
   3ce40:	bx	lr
   3ce44:	ldr	r3, [pc, #36]	; 3ce70 <flatcc_builder_table_edit@@Base+0x50>
   3ce48:	movw	r2, #1794	; 0x702
   3ce4c:	str	r4, [sp, #-8]!
   3ce50:	ldr	r1, [pc, #28]	; 3ce74 <flatcc_builder_table_edit@@Base+0x54>
   3ce54:	str	lr, [sp, #4]
   3ce58:	ldr	r0, [pc, #24]	; 3ce78 <flatcc_builder_table_edit@@Base+0x58>
   3ce5c:	add	r3, pc, r3
   3ce60:	add	r3, r3, #1168	; 0x490
   3ce64:	add	r1, pc, r1
   3ce68:	add	r0, pc, r0
   3ce6c:	bl	14118 <__assert_fail@plt>
   3ce70:	strdeq	lr, [r1], -r8
   3ce74:	andeq	lr, r1, r0, asr #24
   3ce78:	andeq	lr, r1, r8, lsl pc

0003ce7c <flatcc_builder_table_add_copy@@Base>:
   3ce7c:	strd	r4, [sp, #-16]!
   3ce80:	mov	r4, r3
   3ce84:	ldrh	r3, [sp, #16]
   3ce88:	str	r6, [sp, #8]
   3ce8c:	mov	r6, r2
   3ce90:	mov	r2, r4
   3ce94:	str	lr, [sp, #12]
   3ce98:	bl	3cc80 <flatcc_builder_table_add@@Base>
   3ce9c:	subs	r5, r0, #0
   3cea0:	beq	3ceb0 <flatcc_builder_table_add_copy@@Base+0x34>
   3cea4:	mov	r2, r4
   3cea8:	mov	r1, r6
   3ceac:	bl	13fb0 <memcpy@plt>
   3ceb0:	mov	r0, r5
   3ceb4:	ldrd	r4, [sp]
   3ceb8:	ldr	r6, [sp, #8]
   3cebc:	add	sp, sp, #12
   3cec0:	pop	{pc}		; (ldr pc, [sp], #4)

0003cec4 <flatcc_builder_table_add_offset@@Base>:
   3cec4:	ldr	r3, [r0, #32]
   3cec8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   3cecc:	ldrh	r3, [r3, #14]
   3ced0:	strd	r6, [sp, #8]
   3ced4:	str	r8, [sp, #16]
   3ced8:	str	lr, [sp, #20]
   3cedc:	cmp	r3, #3
   3cee0:	bne	3d008 <flatcc_builder_table_add_offset@@Base+0x144>
   3cee4:	movw	r3, #32764	; 0x7ffc
   3cee8:	cmp	r1, r3
   3ceec:	bhi	3cfe0 <flatcc_builder_table_add_offset@@Base+0x11c>
   3cef0:	ldr	ip, [r0, #4]
   3cef4:	lsl	r8, r1, #1
   3cef8:	mov	r4, r0
   3cefc:	ldrh	r6, [ip, r8]
   3cf00:	add	ip, ip, r8
   3cf04:	cmp	r6, #0
   3cf08:	bne	3cfb8 <flatcc_builder_table_add_offset@@Base+0xf4>
   3cf0c:	ldr	r3, [r0, #12]
   3cf10:	movw	r2, #31153	; 0x79b1
   3cf14:	movt	r2, #40503	; 0x9e37
   3cf18:	uxth	r7, r1
   3cf1c:	ldr	r5, [r0, #20]
   3cf20:	ldr	lr, [r0, #24]
   3cf24:	eor	r3, r3, r1
   3cf28:	mul	r3, r2, r3
   3cf2c:	add	r5, r5, #3
   3cf30:	bic	r5, r5, #3
   3cf34:	add	r1, r5, #4
   3cf38:	eor	r3, r3, #4
   3cf3c:	cmp	r1, lr
   3cf40:	str	r1, [r0, #20]
   3cf44:	mul	r3, r2, r3
   3cf48:	str	r3, [r0, #12]
   3cf4c:	bhi	3cf98 <flatcc_builder_table_add_offset@@Base+0xd4>
   3cf50:	uxth	r2, r5
   3cf54:	ldr	r0, [r4, #16]
   3cf58:	add	r3, r2, #4
   3cf5c:	strh	r3, [ip]
   3cf60:	ldrh	r3, [r4, #8]
   3cf64:	add	r0, r0, r5
   3cf68:	cmp	r3, r7
   3cf6c:	ldr	r3, [r4]
   3cf70:	addls	r7, r7, #1
   3cf74:	strhls	r7, [r4, #8]
   3cf78:	add	r1, r3, #2
   3cf7c:	str	r1, [r4]
   3cf80:	strh	r2, [r3]
   3cf84:	ldrd	r4, [sp]
   3cf88:	ldrd	r6, [sp, #8]
   3cf8c:	ldr	r8, [sp, #16]
   3cf90:	add	sp, sp, #20
   3cf94:	pop	{pc}		; (ldr pc, [sp], #4)
   3cf98:	movw	r2, #65532	; 0xfffc
   3cf9c:	bl	38fe4 <__flatcc_fb_coerce_scalar_type@@Base+0x718>
   3cfa0:	cmp	r0, #0
   3cfa4:	movne	r0, r6
   3cfa8:	bne	3cf84 <flatcc_builder_table_add_offset@@Base+0xc0>
   3cfac:	ldr	ip, [r4, #4]
   3cfb0:	add	ip, ip, r8
   3cfb4:	b	3cf50 <flatcc_builder_table_add_offset@@Base+0x8c>
   3cfb8:	ldr	r3, [pc, #112]	; 3d030 <flatcc_builder_table_add_offset@@Base+0x16c>
   3cfbc:	movw	r2, #1819	; 0x71b
   3cfc0:	ldr	r1, [pc, #108]	; 3d034 <flatcc_builder_table_add_offset@@Base+0x170>
   3cfc4:	ldr	r0, [pc, #108]	; 3d038 <flatcc_builder_table_add_offset@@Base+0x174>
   3cfc8:	add	r3, pc, r3
   3cfcc:	add	r3, r3, #1184	; 0x4a0
   3cfd0:	add	r1, pc, r1
   3cfd4:	add	r3, r3, #12
   3cfd8:	add	r0, pc, r0
   3cfdc:	bl	14118 <__assert_fail@plt>
   3cfe0:	ldr	r3, [pc, #84]	; 3d03c <flatcc_builder_table_add_offset@@Base+0x178>
   3cfe4:	movw	r2, #1812	; 0x714
   3cfe8:	ldr	r1, [pc, #80]	; 3d040 <flatcc_builder_table_add_offset@@Base+0x17c>
   3cfec:	ldr	r0, [pc, #80]	; 3d044 <flatcc_builder_table_add_offset@@Base+0x180>
   3cff0:	add	r3, pc, r3
   3cff4:	add	r3, r3, #1184	; 0x4a0
   3cff8:	add	r1, pc, r1
   3cffc:	add	r3, r3, #12
   3d000:	add	r0, pc, r0
   3d004:	bl	14118 <__assert_fail@plt>
   3d008:	ldr	r3, [pc, #56]	; 3d048 <flatcc_builder_table_add_offset@@Base+0x184>
   3d00c:	movw	r2, #1811	; 0x713
   3d010:	ldr	r1, [pc, #52]	; 3d04c <flatcc_builder_table_add_offset@@Base+0x188>
   3d014:	ldr	r0, [pc, #52]	; 3d050 <flatcc_builder_table_add_offset@@Base+0x18c>
   3d018:	add	r3, pc, r3
   3d01c:	add	r3, r3, #1184	; 0x4a0
   3d020:	add	r1, pc, r1
   3d024:	add	r3, r3, #12
   3d028:	add	r0, pc, r0
   3d02c:	bl	14118 <__assert_fail@plt>
   3d030:	andeq	lr, r1, ip, lsl #7
   3d034:	ldrdeq	lr, [r1], -r4
   3d038:	andeq	sp, r0, ip, asr r3
   3d03c:	andeq	lr, r1, r4, ror #6
   3d040:	andeq	lr, r1, ip, lsr #21
   3d044:	andeq	lr, r1, r8, lsl lr
   3d048:	andeq	lr, r1, ip, lsr r3
   3d04c:	andeq	lr, r1, r4, lsl #21
   3d050:	andeq	lr, r1, r8, asr sp

0003d054 <flatcc_builder_table_add_union@@Base>:
   3d054:	strd	r4, [sp, #-20]!	; 0xffffffec
   3d058:	strd	r6, [sp, #8]
   3d05c:	str	lr, [sp, #16]
   3d060:	sub	sp, sp, #12
   3d064:	add	ip, sp, #8
   3d068:	stmdb	ip, {r2, r3}
   3d06c:	ldr	r3, [r0, #32]
   3d070:	ldrb	r5, [sp]
   3d074:	ldr	r6, [sp, #4]
   3d078:	ldrh	r3, [r3, #14]
   3d07c:	cmp	r3, #3
   3d080:	bne	3d114 <flatcc_builder_table_add_union@@Base+0xc0>
   3d084:	cmp	r5, #0
   3d088:	mov	r4, r0
   3d08c:	mov	r7, r1
   3d090:	beq	3d0e4 <flatcc_builder_table_add_union@@Base+0x90>
   3d094:	cmp	r6, #0
   3d098:	beq	3d0ac <flatcc_builder_table_add_union@@Base+0x58>
   3d09c:	bl	3cec4 <flatcc_builder_table_add_offset@@Base>
   3d0a0:	cmp	r0, #0
   3d0a4:	strne	r6, [r0]
   3d0a8:	beq	3d164 <flatcc_builder_table_add_union@@Base+0x110>
   3d0ac:	mov	r3, #1
   3d0b0:	sub	r1, r7, #1
   3d0b4:	mov	r2, r3
   3d0b8:	mov	r0, r4
   3d0bc:	bl	3cc80 <flatcc_builder_table_add@@Base>
   3d0c0:	subs	r3, r0, #0
   3d0c4:	beq	3d13c <flatcc_builder_table_add_union@@Base+0xe8>
   3d0c8:	mov	r0, #0
   3d0cc:	strb	r5, [r3]
   3d0d0:	add	sp, sp, #12
   3d0d4:	ldrd	r4, [sp]
   3d0d8:	ldrd	r6, [sp, #8]
   3d0dc:	add	sp, sp, #16
   3d0e0:	pop	{pc}		; (ldr pc, [sp], #4)
   3d0e4:	cmp	r6, #0
   3d0e8:	beq	3d0ac <flatcc_builder_table_add_union@@Base+0x58>
   3d0ec:	ldr	r3, [pc, #152]	; 3d18c <flatcc_builder_table_add_union@@Base+0x138>
   3d0f0:	movw	r2, #1519	; 0x5ef
   3d0f4:	ldr	r1, [pc, #148]	; 3d190 <flatcc_builder_table_add_union@@Base+0x13c>
   3d0f8:	ldr	r0, [pc, #148]	; 3d194 <flatcc_builder_table_add_union@@Base+0x140>
   3d0fc:	add	r3, pc, r3
   3d100:	add	r3, r3, #1216	; 0x4c0
   3d104:	add	r1, pc, r1
   3d108:	add	r3, r3, #12
   3d10c:	add	r0, pc, r0
   3d110:	bl	14118 <__assert_fail@plt>
   3d114:	ldr	r3, [pc, #124]	; 3d198 <flatcc_builder_table_add_union@@Base+0x144>
   3d118:	movw	r2, #1518	; 0x5ee
   3d11c:	ldr	r1, [pc, #120]	; 3d19c <flatcc_builder_table_add_union@@Base+0x148>
   3d120:	ldr	r0, [pc, #120]	; 3d1a0 <flatcc_builder_table_add_union@@Base+0x14c>
   3d124:	add	r3, pc, r3
   3d128:	add	r3, r3, #1216	; 0x4c0
   3d12c:	add	r1, pc, r1
   3d130:	add	r3, r3, #12
   3d134:	add	r0, pc, r0
   3d138:	bl	14118 <__assert_fail@plt>
   3d13c:	ldr	r3, [pc, #96]	; 3d1a4 <flatcc_builder_table_add_union@@Base+0x150>
   3d140:	movw	r2, #1526	; 0x5f6
   3d144:	ldr	r1, [pc, #92]	; 3d1a8 <flatcc_builder_table_add_union@@Base+0x154>
   3d148:	ldr	r0, [pc, #92]	; 3d1ac <flatcc_builder_table_add_union@@Base+0x158>
   3d14c:	add	r3, pc, r3
   3d150:	add	r3, r3, #1216	; 0x4c0
   3d154:	add	r1, pc, r1
   3d158:	add	r3, r3, #12
   3d15c:	add	r0, pc, r0
   3d160:	bl	14118 <__assert_fail@plt>
   3d164:	ldr	r3, [pc, #68]	; 3d1b0 <flatcc_builder_table_add_union@@Base+0x15c>
   3d168:	movw	r2, #1522	; 0x5f2
   3d16c:	ldr	r1, [pc, #64]	; 3d1b4 <flatcc_builder_table_add_union@@Base+0x160>
   3d170:	ldr	r0, [pc, #64]	; 3d1b8 <flatcc_builder_table_add_union@@Base+0x164>
   3d174:	add	r3, pc, r3
   3d178:	add	r3, r3, #1216	; 0x4c0
   3d17c:	add	r1, pc, r1
   3d180:	add	r3, r3, #12
   3d184:	add	r0, pc, r0
   3d188:	bl	14118 <__assert_fail@plt>
   3d18c:	andeq	lr, r1, r8, asr r2
   3d190:	andeq	lr, r1, r0, lsr #19
   3d194:	andeq	lr, r1, r0, asr sp
   3d198:	andeq	lr, r1, r0, lsr r2
   3d19c:	andeq	lr, r1, r8, ror r9
   3d1a0:	andeq	lr, r1, ip, asr #24
   3d1a4:	andeq	lr, r1, r8, lsl #4
   3d1a8:	andeq	lr, r1, r0, asr r9
   3d1ac:	andeq	lr, r1, r0, lsr sp
   3d1b0:	andeq	lr, r1, r0, ror #3
   3d1b4:	andeq	lr, r1, r8, lsr #18
   3d1b8:	strdeq	lr, [r1], -ip

0003d1bc <flatcc_builder_table_add_union_vector@@Base>:
   3d1bc:	strd	r4, [sp, #-20]!	; 0xffffffec
   3d1c0:	strd	r6, [sp, #8]
   3d1c4:	mov	r7, r1
   3d1c8:	str	lr, [sp, #16]
   3d1cc:	sub	sp, sp, #12
   3d1d0:	add	r1, sp, #8
   3d1d4:	stmdb	r1, {r2, r3}
   3d1d8:	ldr	r3, [r0, #32]
   3d1dc:	ldm	sp, {r4, r6}
   3d1e0:	ldrh	r3, [r3, #14]
   3d1e4:	cmp	r3, #3
   3d1e8:	bne	3d294 <flatcc_builder_table_add_union_vector@@Base+0xd8>
   3d1ec:	clz	r3, r6
   3d1f0:	clz	r2, r4
   3d1f4:	lsr	r3, r3, #5
   3d1f8:	lsr	r2, r2, #5
   3d1fc:	cmp	r2, r3
   3d200:	beq	3d230 <flatcc_builder_table_add_union_vector@@Base+0x74>
   3d204:	adds	r4, r4, #0
   3d208:	movne	r4, #1
   3d20c:	cmp	r4, r3
   3d210:	mvnne	r4, #0
   3d214:	beq	3d2bc <flatcc_builder_table_add_union_vector@@Base+0x100>
   3d218:	mov	r0, r4
   3d21c:	add	sp, sp, #12
   3d220:	ldrd	r4, [sp]
   3d224:	ldrd	r6, [sp, #8]
   3d228:	add	sp, sp, #16
   3d22c:	pop	{pc}		; (ldr pc, [sp], #4)
   3d230:	cmp	r4, #0
   3d234:	beq	3d218 <flatcc_builder_table_add_union_vector@@Base+0x5c>
   3d238:	sub	r1, r7, #1
   3d23c:	mov	r5, r0
   3d240:	bl	3cec4 <flatcc_builder_table_add_offset@@Base>
   3d244:	subs	r3, r0, #0
   3d248:	beq	3d2e4 <flatcc_builder_table_add_union_vector@@Base+0x128>
   3d24c:	mov	r1, r7
   3d250:	mov	r0, r5
   3d254:	str	r4, [r3]
   3d258:	bl	3cec4 <flatcc_builder_table_add_offset@@Base>
   3d25c:	cmp	r0, #0
   3d260:	movne	r4, #0
   3d264:	strne	r6, [r0]
   3d268:	bne	3d218 <flatcc_builder_table_add_union_vector@@Base+0x5c>
   3d26c:	ldr	r3, [pc, #152]	; 3d30c <flatcc_builder_table_add_union_vector@@Base+0x150>
   3d270:	movw	r2, #1544	; 0x608
   3d274:	ldr	r1, [pc, #148]	; 3d310 <flatcc_builder_table_add_union_vector@@Base+0x154>
   3d278:	ldr	r0, [pc, #148]	; 3d314 <flatcc_builder_table_add_union_vector@@Base+0x158>
   3d27c:	add	r3, pc, r3
   3d280:	add	r3, r3, #1248	; 0x4e0
   3d284:	add	r1, pc, r1
   3d288:	add	r3, r3, #12
   3d28c:	add	r0, pc, r0
   3d290:	bl	14118 <__assert_fail@plt>
   3d294:	ldr	r3, [pc, #124]	; 3d318 <flatcc_builder_table_add_union_vector@@Base+0x15c>
   3d298:	mov	r2, #1536	; 0x600
   3d29c:	ldr	r1, [pc, #120]	; 3d31c <flatcc_builder_table_add_union_vector@@Base+0x160>
   3d2a0:	ldr	r0, [pc, #120]	; 3d320 <flatcc_builder_table_add_union_vector@@Base+0x164>
   3d2a4:	add	r3, pc, r3
   3d2a8:	add	r3, r3, #1248	; 0x4e0
   3d2ac:	add	r1, pc, r1
   3d2b0:	add	r3, r3, #12
   3d2b4:	add	r0, pc, r0
   3d2b8:	bl	14118 <__assert_fail@plt>
   3d2bc:	ldr	r3, [pc, #96]	; 3d324 <flatcc_builder_table_add_union_vector@@Base+0x168>
   3d2c0:	movw	r2, #1537	; 0x601
   3d2c4:	ldr	r1, [pc, #92]	; 3d328 <flatcc_builder_table_add_union_vector@@Base+0x16c>
   3d2c8:	ldr	r0, [pc, #92]	; 3d32c <flatcc_builder_table_add_union_vector@@Base+0x170>
   3d2cc:	add	r3, pc, r3
   3d2d0:	add	r3, r3, #1248	; 0x4e0
   3d2d4:	add	r1, pc, r1
   3d2d8:	add	r3, r3, #12
   3d2dc:	add	r0, pc, r0
   3d2e0:	bl	14118 <__assert_fail@plt>
   3d2e4:	ldr	r3, [pc, #68]	; 3d330 <flatcc_builder_table_add_union_vector@@Base+0x174>
   3d2e8:	movw	r2, #1540	; 0x604
   3d2ec:	ldr	r1, [pc, #64]	; 3d334 <flatcc_builder_table_add_union_vector@@Base+0x178>
   3d2f0:	ldr	r0, [pc, #64]	; 3d338 <flatcc_builder_table_add_union_vector@@Base+0x17c>
   3d2f4:	add	r3, pc, r3
   3d2f8:	add	r3, r3, #1248	; 0x4e0
   3d2fc:	add	r1, pc, r1
   3d300:	add	r3, r3, #12
   3d304:	add	r0, pc, r0
   3d308:	bl	14118 <__assert_fail@plt>
   3d30c:	ldrdeq	lr, [r1], -r8
   3d310:	andeq	lr, r1, r0, lsr #16
   3d314:	strdeq	lr, [r1], -r4
   3d318:	strheq	lr, [r1], -r0
   3d31c:	strdeq	lr, [r1], -r8
   3d320:	andeq	lr, r1, ip, asr #21
   3d324:	andeq	lr, r1, r8, lsl #1
   3d328:	ldrdeq	lr, [r1], -r0
   3d32c:			; <UNDEFINED> instruction: 0x0001ebbc
   3d330:	andeq	lr, r1, r0, rrx
   3d334:	andeq	lr, r1, r8, lsr #15
   3d338:	andeq	lr, r1, ip, ror fp

0003d33c <flatcc_builder_push_buffer_alignment@@Base>:
   3d33c:	mov	r3, r0
   3d340:	mov	r2, #4
   3d344:	ldrh	r0, [r0, #128]	; 0x80
   3d348:	strh	r2, [r3, #128]	; 0x80
   3d34c:	bx	lr

0003d350 <flatcc_builder_pop_buffer_alignment@@Base>:
   3d350:	ldrh	r3, [r0, #128]	; 0x80
   3d354:	cmp	r3, r1
   3d358:	strhcc	r1, [r0, #128]	; 0x80
   3d35c:	bx	lr

0003d360 <flatcc_builder_get_buffer_alignment@@Base>:
   3d360:	ldrh	r0, [r0, #128]	; 0x80
   3d364:	bx	lr

0003d368 <flatcc_builder_set_vtable_clustering@@Base>:
   3d368:	clz	r1, r1
   3d36c:	lsr	r1, r1, #5
   3d370:	str	r1, [r0, #180]	; 0xb4
   3d374:	bx	lr

0003d378 <flatcc_builder_set_block_align@@Base>:
   3d378:	strh	r1, [r0, #132]	; 0x84
   3d37c:	bx	lr

0003d380 <flatcc_builder_get_level@@Base>:
   3d380:	ldr	r0, [r0, #156]	; 0x9c
   3d384:	bx	lr

0003d388 <flatcc_builder_set_max_level@@Base>:
   3d388:	ldr	r3, [r0, #160]	; 0xa0
   3d38c:	str	r1, [r0, #176]	; 0xb0
   3d390:	cmp	r3, r1
   3d394:	strlt	r1, [r0, #160]	; 0xa0
   3d398:	bx	lr

0003d39c <flatcc_builder_get_buffer_size@@Base>:
   3d39c:	ldr	r3, [r0, #136]	; 0x88
   3d3a0:	ldr	r0, [r0, #140]	; 0x8c
   3d3a4:	sub	r0, r0, r3
   3d3a8:	bx	lr

0003d3ac <flatcc_builder_get_buffer_start@@Base>:
   3d3ac:	ldr	r0, [r0, #136]	; 0x88
   3d3b0:	bx	lr

0003d3b4 <flatcc_builder_get_buffer_end@@Base>:
   3d3b4:	ldr	r0, [r0, #140]	; 0x8c
   3d3b8:	bx	lr

0003d3bc <flatcc_builder_set_vtable_cache_limit@@Base>:
   3d3bc:	str	r1, [r0, #172]	; 0xac
   3d3c0:	bx	lr

0003d3c4 <flatcc_builder_set_identifier@@Base>:
   3d3c4:	ldr	r3, [pc, #40]	; 3d3f4 <flatcc_builder_set_identifier@@Base+0x30>
   3d3c8:	cmp	r1, #0
   3d3cc:	add	r3, pc, r3
   3d3d0:	beq	3d3e0 <flatcc_builder_set_identifier@@Base+0x1c>
   3d3d4:	ldr	r3, [r1]
   3d3d8:	str	r3, [r0, #168]	; 0xa8
   3d3dc:	bx	lr
   3d3e0:	ldr	r2, [pc, #16]	; 3d3f8 <flatcc_builder_set_identifier@@Base+0x34>
   3d3e4:	ldr	r1, [r3, r2]
   3d3e8:	ldr	r3, [r1]
   3d3ec:	str	r3, [r0, #168]	; 0xa8
   3d3f0:	bx	lr
   3d3f4:	andeq	pc, r2, ip, lsr #24
   3d3f8:	muleq	r0, ip, r0

0003d3fc <flatcc_builder_get_type@@Base>:
   3d3fc:	ldr	r0, [r0, #32]
   3d400:	cmp	r0, #0
   3d404:	ldrhne	r0, [r0, #14]
   3d408:	bx	lr

0003d40c <flatcc_builder_get_type_at@@Base>:
   3d40c:	cmp	r1, #0
   3d410:	ble	3d438 <flatcc_builder_get_type_at@@Base+0x2c>
   3d414:	ldr	r3, [r0, #156]	; 0x9c
   3d418:	cmp	r3, r1
   3d41c:	blt	3d438 <flatcc_builder_get_type_at@@Base+0x2c>
   3d420:	ldr	r2, [r0, #32]
   3d424:	sub	r1, r1, r3
   3d428:	add	r1, r1, r1, lsl #3
   3d42c:	add	r1, r2, r1, lsl #2
   3d430:	ldrh	r0, [r1, #14]
   3d434:	bx	lr
   3d438:	mov	r0, #0
   3d43c:	bx	lr

0003d440 <flatcc_builder_get_direct_buffer@@Base>:
   3d440:	ldr	r3, [r0, #184]	; 0xb8
   3d444:	cmp	r3, #0
   3d448:	bne	3d464 <flatcc_builder_get_direct_buffer@@Base+0x24>
   3d44c:	cmp	r1, #0
   3d450:	movne	r3, #0
   3d454:	movne	r0, r3
   3d458:	moveq	r0, r1
   3d45c:	strne	r3, [r1]
   3d460:	bx	lr
   3d464:	ldrd	r2, [r0, #188]	; 0xbc
   3d468:	cmp	r2, r3
   3d46c:	bne	3d44c <flatcc_builder_get_direct_buffer@@Base+0xc>
   3d470:	cmp	r1, #0
   3d474:	ldrne	r3, [r0, #212]	; 0xd4
   3d478:	ldr	r0, [r0, #196]	; 0xc4
   3d47c:	strne	r3, [r1]
   3d480:	bx	lr

0003d484 <flatcc_builder_copy_buffer@@Base>:
   3d484:	ldr	r3, [r0, #184]	; 0xb8
   3d488:	cmp	r3, #0
   3d48c:	beq	3d4b4 <flatcc_builder_copy_buffer@@Base+0x30>
   3d490:	add	r0, r0, #188	; 0xbc
   3d494:	str	r4, [sp, #-8]!
   3d498:	str	lr, [sp, #4]
   3d49c:	bl	3dc18 <flatcc_emitter_copy_buffer@@Base>
   3d4a0:	cmp	r0, #0
   3d4a4:	beq	3d4bc <flatcc_builder_copy_buffer@@Base+0x38>
   3d4a8:	ldr	r4, [sp]
   3d4ac:	add	sp, sp, #4
   3d4b0:	pop	{pc}		; (ldr pc, [sp], #4)
   3d4b4:	mov	r0, r3
   3d4b8:	bx	lr
   3d4bc:	ldr	r3, [pc, #32]	; 3d4e4 <flatcc_builder_copy_buffer@@Base+0x60>
   3d4c0:	movw	r2, #1926	; 0x786
   3d4c4:	ldr	r1, [pc, #28]	; 3d4e8 <flatcc_builder_copy_buffer@@Base+0x64>
   3d4c8:	ldr	r0, [pc, #28]	; 3d4ec <flatcc_builder_copy_buffer@@Base+0x68>
   3d4cc:	add	r3, pc, r3
   3d4d0:	add	r3, r3, #1296	; 0x510
   3d4d4:	add	r1, pc, r1
   3d4d8:	add	r3, r3, #4
   3d4dc:	add	r0, pc, r0
   3d4e0:	bl	14118 <__assert_fail@plt>
   3d4e4:	andeq	sp, r1, r8, lsl #29
   3d4e8:	ldrdeq	lr, [r1], -r0
   3d4ec:	andeq	lr, r1, r4, ror #19

0003d4f0 <flatcc_builder_finalize_buffer@@Base>:
   3d4f0:	strd	r4, [sp, #-16]!
   3d4f4:	mov	r5, r1
   3d4f8:	str	r6, [sp, #8]
   3d4fc:	mov	r6, r0
   3d500:	str	lr, [sp, #12]
   3d504:	bl	3d39c <flatcc_builder_get_buffer_size@@Base>
   3d508:	cmp	r5, #0
   3d50c:	mov	r4, r0
   3d510:	strne	r0, [r5]
   3d514:	bl	14010 <malloc@plt>
   3d518:	subs	r5, r0, #0
   3d51c:	beq	3d54c <flatcc_builder_finalize_buffer@@Base+0x5c>
   3d520:	mov	r2, r4
   3d524:	mov	r0, r6
   3d528:	mov	r1, r5
   3d52c:	bl	3d484 <flatcc_builder_copy_buffer@@Base>
   3d530:	cmp	r0, #0
   3d534:	beq	3d570 <flatcc_builder_finalize_buffer@@Base+0x80>
   3d538:	mov	r0, r5
   3d53c:	ldrd	r4, [sp]
   3d540:	ldr	r6, [sp, #8]
   3d544:	add	sp, sp, #12
   3d548:	pop	{pc}		; (ldr pc, [sp], #4)
   3d54c:	ldr	r3, [pc, #64]	; 3d594 <flatcc_builder_finalize_buffer@@Base+0xa4>
   3d550:	movw	r2, #1944	; 0x798
   3d554:	ldr	r1, [pc, #60]	; 3d598 <flatcc_builder_finalize_buffer@@Base+0xa8>
   3d558:	ldr	r0, [pc, #60]	; 3d59c <flatcc_builder_finalize_buffer@@Base+0xac>
   3d55c:	add	r3, pc, r3
   3d560:	add	r3, r3, #1328	; 0x530
   3d564:	add	r1, pc, r1
   3d568:	add	r0, pc, r0
   3d56c:	bl	14118 <__assert_fail@plt>
   3d570:	ldr	r3, [pc, #40]	; 3d5a0 <flatcc_builder_finalize_buffer@@Base+0xb0>
   3d574:	movw	r2, #1948	; 0x79c
   3d578:	ldr	r1, [pc, #36]	; 3d5a4 <flatcc_builder_finalize_buffer@@Base+0xb4>
   3d57c:	ldr	r0, [pc, #36]	; 3d5a8 <flatcc_builder_finalize_buffer@@Base+0xb8>
   3d580:	add	r3, pc, r3
   3d584:	add	r3, r3, #1328	; 0x530
   3d588:	add	r1, pc, r1
   3d58c:	add	r0, pc, r0
   3d590:	bl	14118 <__assert_fail@plt>
   3d594:	strdeq	sp, [r1], -r8
   3d598:	andeq	lr, r1, r0, asr #10
   3d59c:	andeq	ip, r0, ip, asr #27
   3d5a0:	ldrdeq	sp, [r1], -r4
   3d5a4:	andeq	lr, r1, ip, lsl r5
   3d5a8:	andeq	ip, r0, r8, lsr #27

0003d5ac <flatcc_builder_finalize_aligned_buffer@@Base>:
   3d5ac:	strd	r4, [sp, #-20]!	; 0xffffffec
   3d5b0:	mov	r5, r1
   3d5b4:	strd	r6, [sp, #8]
   3d5b8:	mov	r6, r0
   3d5bc:	str	lr, [sp, #16]
   3d5c0:	sub	sp, sp, #12
   3d5c4:	bl	3d39c <flatcc_builder_get_buffer_size@@Base>
   3d5c8:	cmp	r5, #0
   3d5cc:	mov	r4, r0
   3d5d0:	sub	r4, r4, #1
   3d5d4:	strne	r0, [r5]
   3d5d8:	mov	r0, r6
   3d5dc:	bl	3d360 <flatcc_builder_get_buffer_alignment@@Base>
   3d5e0:	rsb	r3, r0, #0
   3d5e4:	add	r4, r4, r0
   3d5e8:	cmp	r0, #4
   3d5ec:	and	r4, r4, r3
   3d5f0:	mov	r3, #0
   3d5f4:	movcs	r1, r0
   3d5f8:	movcc	r1, #4
   3d5fc:	mov	r2, r4
   3d600:	add	r0, sp, #4
   3d604:	str	r3, [sp, #4]
   3d608:	bl	14070 <posix_memalign@plt>
   3d60c:	cmp	r0, #0
   3d610:	beq	3d63c <flatcc_builder_finalize_aligned_buffer@@Base+0x90>
   3d614:	ldr	r0, [sp, #4]
   3d618:	cmp	r0, #0
   3d61c:	beq	3d624 <flatcc_builder_finalize_aligned_buffer@@Base+0x78>
   3d620:	bl	13fa4 <free@plt>
   3d624:	cmp	r5, #0
   3d628:	movne	r3, #0
   3d62c:	moveq	r7, r5
   3d630:	movne	r7, r3
   3d634:	strne	r3, [r5]
   3d638:	b	3d660 <flatcc_builder_finalize_aligned_buffer@@Base+0xb4>
   3d63c:	ldr	r7, [sp, #4]
   3d640:	cmp	r7, #0
   3d644:	beq	3d624 <flatcc_builder_finalize_aligned_buffer@@Base+0x78>
   3d648:	mov	r2, r4
   3d64c:	mov	r0, r6
   3d650:	mov	r1, r7
   3d654:	bl	3d484 <flatcc_builder_copy_buffer@@Base>
   3d658:	cmp	r0, #0
   3d65c:	beq	3d678 <flatcc_builder_finalize_aligned_buffer@@Base+0xcc>
   3d660:	mov	r0, r7
   3d664:	add	sp, sp, #12
   3d668:	ldrd	r4, [sp]
   3d66c:	ldrd	r6, [sp, #8]
   3d670:	add	sp, sp, #16
   3d674:	pop	{pc}		; (ldr pc, [sp], #4)
   3d678:	mov	r0, r7
   3d67c:	b	3d620 <flatcc_builder_finalize_aligned_buffer@@Base+0x74>

0003d680 <flatcc_builder_aligned_alloc@@Base>:
   3d680:	cmp	r0, #4
   3d684:	str	r4, [sp, #-8]!
   3d688:	mov	r4, #0
   3d68c:	str	lr, [sp, #4]
   3d690:	sub	sp, sp, #8
   3d694:	mov	r2, r1
   3d698:	movcs	r1, r0
   3d69c:	movcc	r1, #4
   3d6a0:	add	r0, sp, #4
   3d6a4:	str	r4, [sp, #4]
   3d6a8:	bl	14070 <posix_memalign@plt>
   3d6ac:	cmp	r0, r4
   3d6b0:	ldr	r0, [sp, #4]
   3d6b4:	beq	3d6c8 <flatcc_builder_aligned_alloc@@Base+0x48>
   3d6b8:	cmp	r0, #0
   3d6bc:	beq	3d6c8 <flatcc_builder_aligned_alloc@@Base+0x48>
   3d6c0:	bl	13fa4 <free@plt>
   3d6c4:	mov	r0, r4
   3d6c8:	add	sp, sp, #8
   3d6cc:	ldr	r4, [sp]
   3d6d0:	add	sp, sp, #4
   3d6d4:	pop	{pc}		; (ldr pc, [sp], #4)

0003d6d8 <flatcc_builder_aligned_free@@Base>:
   3d6d8:	b	13fa4 <free@plt>

0003d6dc <flatcc_builder_get_emit_context@@Base>:
   3d6dc:	ldr	r0, [r0, #36]	; 0x24
   3d6e0:	bx	lr

0003d6e4 <flatcc_emitter_recycle_page@@Base>:
   3d6e4:	ldr	r3, [r0]
   3d6e8:	cmp	r3, r1
   3d6ec:	beq	3d730 <flatcc_emitter_recycle_page@@Base+0x4c>
   3d6f0:	ldr	r2, [r0, #4]
   3d6f4:	cmp	r2, r1
   3d6f8:	beq	3d730 <flatcc_emitter_recycle_page@@Base+0x4c>
   3d6fc:	push	{lr}		; (str lr, [sp, #-4]!)
   3d700:	mov	r0, #0
   3d704:	ldr	lr, [r1, #2944]	; 0xb80
   3d708:	ldr	ip, [r1, #2948]	; 0xb84
   3d70c:	str	ip, [lr, #2948]	; 0xb84
   3d710:	ldr	r2, [r3, #2948]	; 0xb84
   3d714:	str	lr, [ip, #2944]	; 0xb80
   3d718:	str	r3, [r1, #2944]	; 0xb80
   3d71c:	str	r2, [r1, #2948]	; 0xb84
   3d720:	str	r1, [r2, #2944]	; 0xb80
   3d724:	ldr	r3, [r1, #2944]	; 0xb80
   3d728:	str	r1, [r3, #2948]	; 0xb84
   3d72c:	pop	{pc}		; (ldr pc, [sp], #4)
   3d730:	mvn	r0, #0
   3d734:	bx	lr

0003d738 <flatcc_emitter_reset@@Base>:
   3d738:	ldr	r2, [r0]
   3d73c:	cmp	r2, #0
   3d740:	bxeq	lr
   3d744:	strd	r4, [sp, #-16]!
   3d748:	movw	ip, #64064	; 0xfa40
   3d74c:	movt	ip, #65535	; 0xffff
   3d750:	ldr	r1, [r0, #24]
   3d754:	add	r4, r2, #1472	; 0x5c0
   3d758:	ldr	r3, [r0, #32]
   3d75c:	ldr	r5, [r0, #28]
   3d760:	str	r6, [sp, #8]
   3d764:	str	lr, [sp, #12]
   3d768:	mov	lr, #1472	; 0x5c0
   3d76c:	cmp	r3, #0
   3d770:	stmib	r0, {r2, r4}
   3d774:	moveq	r3, r1
   3d778:	lsr	r1, r1, #2
   3d77c:	str	lr, [r0, #12]
   3d780:	add	r3, r3, r3, lsl #1
   3d784:	str	r4, [r0, #16]
   3d788:	str	lr, [r0, #20]
   3d78c:	add	r3, r1, r3, lsr #2
   3d790:	str	ip, [r2, #2952]	; 0xb88
   3d794:	mov	ip, #0
   3d798:	cmp	r5, r3, lsl #1
   3d79c:	str	ip, [r0, #24]
   3d7a0:	str	r3, [r0, #32]
   3d7a4:	bls	3d7fc <flatcc_emitter_reset@@Base+0xc4>
   3d7a8:	ldr	r3, [r2, #2944]	; 0xb80
   3d7ac:	mov	r4, r0
   3d7b0:	cmp	r2, r3
   3d7b4:	bne	3d7cc <flatcc_emitter_reset@@Base+0x94>
   3d7b8:	b	3d7fc <flatcc_emitter_reset@@Base+0xc4>
   3d7bc:	ldm	r4, {r1, r2}
   3d7c0:	ldr	r3, [r2, #2944]	; 0xb80
   3d7c4:	cmp	r3, r1
   3d7c8:	beq	3d7fc <flatcc_emitter_reset@@Base+0xc4>
   3d7cc:	ldr	r1, [r3, #2944]	; 0xb80
   3d7d0:	mov	r0, r3
   3d7d4:	str	r1, [r2, #2944]	; 0xb80
   3d7d8:	ldr	r3, [r3, #2944]	; 0xb80
   3d7dc:	str	r2, [r3, #2948]	; 0xb84
   3d7e0:	bl	13fa4 <free@plt>
   3d7e4:	ldr	r3, [r4, #28]
   3d7e8:	ldr	r2, [r4, #32]
   3d7ec:	sub	r3, r3, #2944	; 0xb80
   3d7f0:	cmp	r3, r2, lsl #1
   3d7f4:	str	r3, [r4, #28]
   3d7f8:	bhi	3d7bc <flatcc_emitter_reset@@Base+0x84>
   3d7fc:	ldrd	r4, [sp]
   3d800:	ldr	r6, [sp, #8]
   3d804:	add	sp, sp, #12
   3d808:	pop	{pc}		; (ldr pc, [sp], #4)

0003d80c <flatcc_emitter_clear@@Base>:
   3d80c:	ldr	r3, [r0]
   3d810:	cmp	r3, #0
   3d814:	bxeq	lr
   3d818:	mov	r1, #0
   3d81c:	strd	r4, [sp, #-16]!
   3d820:	mov	r5, r0
   3d824:	ldr	r2, [r3, #2948]	; 0xb84
   3d828:	str	r6, [sp, #8]
   3d82c:	str	lr, [sp, #12]
   3d830:	str	r1, [r2, #2944]	; 0xb80
   3d834:	ldr	r4, [r3, #2944]	; 0xb80
   3d838:	cmp	r4, r1
   3d83c:	bne	3d848 <flatcc_emitter_clear@@Base+0x3c>
   3d840:	b	3d884 <flatcc_emitter_clear@@Base+0x78>
   3d844:	mov	r4, r3
   3d848:	ldr	r0, [r4, #2948]	; 0xb84
   3d84c:	bl	13fa4 <free@plt>
   3d850:	ldr	r3, [r4, #2944]	; 0xb80
   3d854:	cmp	r3, #0
   3d858:	bne	3d844 <flatcc_emitter_clear@@Base+0x38>
   3d85c:	mov	r0, r4
   3d860:	bl	13fa4 <free@plt>
   3d864:	mov	r0, r5
   3d868:	mov	r2, #36	; 0x24
   3d86c:	ldrd	r4, [sp]
   3d870:	mov	r1, #0
   3d874:	ldr	r6, [sp, #8]
   3d878:	ldr	lr, [sp, #12]
   3d87c:	add	sp, sp, #16
   3d880:	b	1407c <memset@plt>
   3d884:	mov	r4, r3
   3d888:	b	3d85c <flatcc_emitter_clear@@Base+0x50>

0003d88c <flatcc_emitter@@Base>:
   3d88c:	cmp	r3, #0
   3d890:	strd	r4, [sp, #-36]!	; 0xffffffdc
   3d894:	mov	r4, r0
   3d898:	ldr	r3, [r0, #24]
   3d89c:	strd	r6, [sp, #8]
   3d8a0:	strd	r8, [sp, #16]
   3d8a4:	sub	r8, r2, #1
   3d8a8:	strd	sl, [sp, #24]
   3d8ac:	str	lr, [sp, #32]
   3d8b0:	sub	sp, sp, #12
   3d8b4:	ldr	r0, [sp, #48]	; 0x30
   3d8b8:	add	r3, r3, r0
   3d8bc:	str	r3, [r4, #24]
   3d8c0:	blt	3da90 <flatcc_emitter@@Base+0x204>
   3d8c4:	ldr	r3, [r4, #20]
   3d8c8:	cmp	r3, r0
   3d8cc:	bcs	3d96c <flatcc_emitter@@Base+0xe0>
   3d8d0:	cmp	r2, #0
   3d8d4:	beq	3d94c <flatcc_emitter@@Base+0xc0>
   3d8d8:	mov	r8, r2
   3d8dc:	add	r5, r1, #8
   3d8e0:	movw	r2, #64064	; 0xfa40
   3d8e4:	movt	r2, #65535	; 0xffff
   3d8e8:	str	r2, [sp, #4]
   3d8ec:	ldmdb	r5, {r7, fp}
   3d8f0:	cmp	fp, #0
   3d8f4:	beq	3d940 <flatcc_emitter@@Base+0xb4>
   3d8f8:	mov	r9, #1472	; 0x5c0
   3d8fc:	cmp	fp, r3
   3d900:	mov	r6, r3
   3d904:	bls	3d9fc <flatcc_emitter@@Base+0x170>
   3d908:	cmp	r3, #0
   3d90c:	subne	fp, fp, r3
   3d910:	beq	3d9b4 <flatcc_emitter@@Base+0x128>
   3d914:	mov	r2, r6
   3d918:	mov	r1, r7
   3d91c:	ldr	r0, [r4, #16]
   3d920:	bl	13fb0 <memcpy@plt>
   3d924:	ldrd	r2, [r4, #16]
   3d928:	cmp	fp, #0
   3d92c:	add	r7, r7, r6
   3d930:	add	r2, r2, r6
   3d934:	sub	r3, r3, r6
   3d938:	strd	r2, [r4, #16]
   3d93c:	bne	3d8fc <flatcc_emitter@@Base+0x70>
   3d940:	subs	r8, r8, #1
   3d944:	add	r5, r5, #8
   3d948:	bne	3d8ec <flatcc_emitter@@Base+0x60>
   3d94c:	mov	r0, #0
   3d950:	add	sp, sp, #12
   3d954:	ldrd	r4, [sp]
   3d958:	ldrd	r6, [sp, #8]
   3d95c:	ldrd	r8, [sp, #16]
   3d960:	ldrd	sl, [sp, #24]
   3d964:	add	sp, sp, #32
   3d968:	pop	{pc}		; (ldr pc, [sp], #4)
   3d96c:	ldr	r7, [r4, #16]
   3d970:	sub	r3, r3, r0
   3d974:	str	r3, [r4, #20]
   3d978:	add	r0, r7, r0
   3d97c:	str	r0, [r4, #16]
   3d980:	cmp	r2, #0
   3d984:	addne	r4, r1, #8
   3d988:	beq	3d94c <flatcc_emitter@@Base+0xc0>
   3d98c:	mov	r0, r7
   3d990:	ldmdb	r4, {r1, r2}
   3d994:	sub	r8, r8, #1
   3d998:	bl	13fb0 <memcpy@plt>
   3d99c:	ldr	r3, [r4, #-4]
   3d9a0:	cmn	r8, #1
   3d9a4:	add	r4, r4, #8
   3d9a8:	add	r7, r7, r3
   3d9ac:	bne	3d98c <flatcc_emitter@@Base+0x100>
   3d9b0:	b	3d94c <flatcc_emitter@@Base+0xc0>
   3d9b4:	ldr	r6, [r4, #4]
   3d9b8:	cmp	r6, #0
   3d9bc:	beq	3da3c <flatcc_emitter@@Base+0x1b0>
   3d9c0:	ldr	sl, [r4]
   3d9c4:	ldr	r0, [r6, #2944]	; 0xb80
   3d9c8:	cmp	r0, sl
   3d9cc:	beq	3da08 <flatcc_emitter@@Base+0x17c>
   3d9d0:	str	r0, [r4, #4]
   3d9d4:	ldr	r2, [r0, #2948]	; 0xb84
   3d9d8:	mov	r3, #2944	; 0xb80
   3d9dc:	cmp	fp, r3
   3d9e0:	mov	r6, r3
   3d9e4:	ldr	r2, [r2, #2952]	; 0xb88
   3d9e8:	str	r0, [r4, #16]
   3d9ec:	str	r3, [r4, #20]
   3d9f0:	add	r2, r2, r3
   3d9f4:	str	r2, [r0, #2952]	; 0xb88
   3d9f8:	bhi	3d908 <flatcc_emitter@@Base+0x7c>
   3d9fc:	mov	r6, fp
   3da00:	mov	fp, #0
   3da04:	b	3d914 <flatcc_emitter@@Base+0x88>
   3da08:	movw	r0, #2956	; 0xb8c
   3da0c:	bl	14010 <malloc@plt>
   3da10:	cmp	r0, #0
   3da14:	beq	3da88 <flatcc_emitter@@Base+0x1fc>
   3da18:	ldr	r2, [r4, #28]
   3da1c:	str	sl, [r0, #2944]	; 0xb80
   3da20:	str	r6, [r0, #2948]	; 0xb84
   3da24:	add	r2, r2, #2944	; 0xb80
   3da28:	str	r2, [r4, #28]
   3da2c:	str	r0, [sl, #2948]	; 0xb84
   3da30:	str	r0, [r6, #2944]	; 0xb80
   3da34:	str	r0, [r4, #4]
   3da38:	b	3d9d4 <flatcc_emitter@@Base+0x148>
   3da3c:	movw	r0, #2956	; 0xb8c
   3da40:	bl	14010 <malloc@plt>
   3da44:	cmp	r0, #0
   3da48:	beq	3da88 <flatcc_emitter@@Base+0x1fc>
   3da4c:	ldr	r2, [r4, #28]
   3da50:	add	r1, r0, #1472	; 0x5c0
   3da54:	mov	r3, #1472	; 0x5c0
   3da58:	str	r0, [r4]
   3da5c:	strd	r0, [r4, #4]
   3da60:	str	r9, [r4, #12]
   3da64:	str	r1, [r4, #16]
   3da68:	add	r2, r2, #2944	; 0xb80
   3da6c:	str	r9, [r4, #20]
   3da70:	str	r0, [r0, #2944]	; 0xb80
   3da74:	str	r2, [r4, #28]
   3da78:	ldr	r2, [sp, #4]
   3da7c:	str	r0, [r0, #2948]	; 0xb84
   3da80:	str	r2, [r0, #2952]	; 0xb88
   3da84:	b	3d8fc <flatcc_emitter@@Base+0x70>
   3da88:	mvn	r0, #0
   3da8c:	b	3d950 <flatcc_emitter@@Base+0xc4>
   3da90:	ldr	r3, [r4, #12]
   3da94:	cmp	r3, r0
   3da98:	bcs	3dc00 <flatcc_emitter@@Base+0x374>
   3da9c:	add	r5, r1, r2, lsl #3
   3daa0:	movw	r3, #64064	; 0xfa40
   3daa4:	movt	r3, #65535	; 0xffff
   3daa8:	str	r3, [sp, #4]
   3daac:	cmn	r8, #1
   3dab0:	beq	3d94c <flatcc_emitter@@Base+0xc0>
   3dab4:	ldr	r7, [r5, #-8]
   3dab8:	ldr	r6, [r5, #-4]
   3dabc:	cmp	r6, #0
   3dac0:	add	r7, r7, r6
   3dac4:	beq	3db14 <flatcc_emitter@@Base+0x288>
   3dac8:	mov	r9, #1472	; 0x5c0
   3dacc:	ldr	r2, [r4, #12]
   3dad0:	cmp	r2, r6
   3dad4:	bcs	3db78 <flatcc_emitter@@Base+0x2ec>
   3dad8:	cmp	r2, #0
   3dadc:	beq	3db20 <flatcc_emitter@@Base+0x294>
   3dae0:	sub	r6, r6, r2
   3dae4:	mov	r1, #0
   3dae8:	ldr	r3, [r4, #8]
   3daec:	rsb	r0, r2, #0
   3daf0:	add	r7, r7, r0
   3daf4:	str	r1, [r4, #12]
   3daf8:	mov	r1, r7
   3dafc:	add	r3, r3, r0
   3db00:	mov	r0, r3
   3db04:	str	r3, [r4, #8]
   3db08:	bl	13fb0 <memcpy@plt>
   3db0c:	cmp	r6, #0
   3db10:	bne	3dacc <flatcc_emitter@@Base+0x240>
   3db14:	sub	r5, r5, #8
   3db18:	sub	r8, r8, #1
   3db1c:	b	3daac <flatcc_emitter@@Base+0x220>
   3db20:	ldr	fp, [r4]
   3db24:	cmp	fp, #0
   3db28:	beq	3dbbc <flatcc_emitter@@Base+0x330>
   3db2c:	ldr	sl, [r4, #4]
   3db30:	ldr	r0, [fp, #2948]	; 0xb84
   3db34:	cmp	r0, sl
   3db38:	beq	3db88 <flatcc_emitter@@Base+0x2fc>
   3db3c:	ldr	r3, [fp, #2952]	; 0xb88
   3db40:	sub	r3, r3, #2944	; 0xb80
   3db44:	str	r3, [r0, #2952]	; 0xb88
   3db48:	str	r0, [r4]
   3db4c:	ldr	r3, [r0, #2944]	; 0xb80
   3db50:	mov	r2, #2944	; 0xb80
   3db54:	add	r1, r0, #2944	; 0xb80
   3db58:	ldr	r3, [r3, #2952]	; 0xb88
   3db5c:	str	r1, [r4, #8]
   3db60:	str	r2, [r4, #12]
   3db64:	sub	r3, r3, #2944	; 0xb80
   3db68:	str	r3, [r0, #2952]	; 0xb88
   3db6c:	ldr	r2, [r4, #12]
   3db70:	cmp	r2, r6
   3db74:	bcc	3dad8 <flatcc_emitter@@Base+0x24c>
   3db78:	sub	r1, r2, r6
   3db7c:	mov	r2, r6
   3db80:	mov	r6, #0
   3db84:	b	3dae8 <flatcc_emitter@@Base+0x25c>
   3db88:	movw	r0, #2956	; 0xb8c
   3db8c:	bl	14010 <malloc@plt>
   3db90:	cmp	r0, #0
   3db94:	beq	3da88 <flatcc_emitter@@Base+0x1fc>
   3db98:	ldr	r2, [r4, #28]
   3db9c:	str	fp, [r0, #2944]	; 0xb80
   3dba0:	str	sl, [r0, #2948]	; 0xb84
   3dba4:	add	r2, r2, #2944	; 0xb80
   3dba8:	str	r2, [r4, #28]
   3dbac:	str	r0, [fp, #2948]	; 0xb84
   3dbb0:	str	r0, [sl, #2944]	; 0xb80
   3dbb4:	str	r0, [r4]
   3dbb8:	b	3db4c <flatcc_emitter@@Base+0x2c0>
   3dbbc:	movw	r0, #2956	; 0xb8c
   3dbc0:	bl	14010 <malloc@plt>
   3dbc4:	cmp	r0, #0
   3dbc8:	beq	3da88 <flatcc_emitter@@Base+0x1fc>
   3dbcc:	ldr	r3, [r4, #28]
   3dbd0:	add	r2, r0, #1472	; 0x5c0
   3dbd4:	str	r0, [r4]
   3dbd8:	stmib	r4, {r0, r2, r9}
   3dbdc:	add	r3, r3, #2944	; 0xb80
   3dbe0:	str	r2, [r4, #16]
   3dbe4:	str	r9, [r4, #20]
   3dbe8:	str	r3, [r4, #28]
   3dbec:	ldr	r3, [sp, #4]
   3dbf0:	str	r0, [r0, #2944]	; 0xb80
   3dbf4:	str	r0, [r0, #2948]	; 0xb84
   3dbf8:	str	r3, [r0, #2952]	; 0xb88
   3dbfc:	b	3dacc <flatcc_emitter@@Base+0x240>
   3dc00:	ldr	r7, [r4, #8]
   3dc04:	sub	r3, r3, r0
   3dc08:	str	r3, [r4, #12]
   3dc0c:	sub	r7, r7, r0
   3dc10:	str	r7, [r4, #8]
   3dc14:	b	3d980 <flatcc_emitter@@Base+0xf4>

0003dc18 <flatcc_emitter_copy_buffer@@Base>:
   3dc18:	ldr	r3, [r0, #24]
   3dc1c:	strd	r4, [sp, #-16]!
   3dc20:	str	r6, [sp, #8]
   3dc24:	str	lr, [sp, #12]
   3dc28:	cmp	r3, r2
   3dc2c:	movhi	r5, #0
   3dc30:	bhi	3dcb0 <flatcc_emitter_copy_buffer@@Base+0x98>
   3dc34:	ldr	r5, [r0]
   3dc38:	mov	r6, r0
   3dc3c:	cmp	r5, #0
   3dc40:	beq	3dcb0 <flatcc_emitter_copy_buffer@@Base+0x98>
   3dc44:	ldr	r2, [r6, #4]
   3dc48:	mov	r0, r1
   3dc4c:	ldr	r1, [r6, #8]
   3dc50:	cmp	r5, r2
   3dc54:	beq	3dcc4 <flatcc_emitter_copy_buffer@@Base+0xac>
   3dc58:	ldr	r2, [r6, #12]
   3dc5c:	rsb	r2, r2, #2944	; 0xb80
   3dc60:	add	r5, r0, r2
   3dc64:	bl	13fb0 <memcpy@plt>
   3dc68:	ldrd	r2, [r6]
   3dc6c:	ldr	r4, [r2, #2944]	; 0xb80
   3dc70:	cmp	r4, r3
   3dc74:	beq	3dc9c <flatcc_emitter_copy_buffer@@Base+0x84>
   3dc78:	mov	r2, #2944	; 0xb80
   3dc7c:	mov	r1, r4
   3dc80:	mov	r0, r5
   3dc84:	add	r5, r5, r2
   3dc88:	bl	13fb0 <memcpy@plt>
   3dc8c:	ldr	r3, [r6, #4]
   3dc90:	ldr	r4, [r4, #2944]	; 0xb80
   3dc94:	cmp	r3, r4
   3dc98:	bne	3dc78 <flatcc_emitter_copy_buffer@@Base+0x60>
   3dc9c:	ldr	r2, [r6, #20]
   3dca0:	mov	r1, r4
   3dca4:	mov	r0, r5
   3dca8:	rsb	r2, r2, #2944	; 0xb80
   3dcac:	bl	13fb0 <memcpy@plt>
   3dcb0:	mov	r0, r5
   3dcb4:	ldrd	r4, [sp]
   3dcb8:	ldr	r6, [sp, #8]
   3dcbc:	add	sp, sp, #12
   3dcc0:	pop	{pc}		; (ldr pc, [sp], #4)
   3dcc4:	mov	r2, r3
   3dcc8:	mov	r5, r0
   3dccc:	bl	13fb0 <memcpy@plt>
   3dcd0:	b	3dcb0 <flatcc_emitter_copy_buffer@@Base+0x98>

0003dcd4 <cmetrohash64_1@@Base>:
   3dcd4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   3dcd8:	movw	ip, #24283	; 0x5edb
   3dcdc:	movt	ip, #44806	; 0xaf06
   3dce0:	strd	r6, [sp, #8]
   3dce4:	adds	r4, r2, ip
   3dce8:	movw	r6, #23867	; 0x5d3b
   3dcec:	movt	r6, #24802	; 0x60e2
   3dcf0:	strd	r8, [sp, #16]
   3dcf4:	add	ip, r0, r2
   3dcf8:	strd	sl, [sp, #24]
   3dcfc:	adc	r5, r3, r6
   3dd00:	cmp	r3, #0
   3dd04:	str	lr, [sp, #32]
   3dd08:	sub	sp, sp, #68	; 0x44
   3dd0c:	mov	r3, r5
   3dd10:	ldr	lr, [sp, #104]	; 0x68
   3dd14:	movw	r1, #37345	; 0x91e1
   3dd18:	movt	r1, #51258	; 0xc83a
   3dd1c:	cmpeq	r2, #31
   3dd20:	mov	r2, r4
   3dd24:	str	ip, [sp, #52]	; 0x34
   3dd28:	umlal	r2, r3, r1, lr
   3dd2c:	mov	r4, r2
   3dd30:	mov	r5, r3
   3dd34:	strd	r4, [sp, #8]
   3dd38:	bls	3dfd0 <cmetrohash64_1@@Base+0x2fc>
   3dd3c:	movw	lr, #49211	; 0xc03b
   3dd40:	movt	lr, #31710	; 0x7bde
   3dd44:	str	r4, [sp]
   3dd48:	str	r1, [sp, #32]
   3dd4c:	movw	r1, #56283	; 0xdbdb
   3dd50:	movt	r1, #34376	; 0x8648
   3dd54:	mov	fp, r3
   3dd58:	mov	sl, r2
   3dd5c:	str	r5, [sp, #28]
   3dd60:	str	r1, [sp, #36]	; 0x24
   3dd64:	movw	r1, #28837	; 0x70a5
   3dd68:	movt	r1, #12120	; 0x2f58
   3dd6c:	mov	r3, r2
   3dd70:	str	r1, [sp, #44]	; 0x2c
   3dd74:	sub	r1, ip, #32
   3dd78:	mov	ip, r5
   3dd7c:	str	r1, [sp, #40]	; 0x28
   3dd80:	mov	r1, r5
   3dd84:	str	lr, [sp, #48]	; 0x30
   3dd88:	ldr	r4, [r0]
   3dd8c:	add	r0, r0, #32
   3dd90:	ldr	r7, [sp, #32]
   3dd94:	ldr	r6, [r0, #-28]	; 0xffffffe4
   3dd98:	ldr	r8, [r0, #-24]	; 0xffffffe8
   3dd9c:	umull	r4, r5, r4, r7
   3dda0:	ldr	lr, [r0, #-20]	; 0xffffffec
   3dda4:	mla	r5, r7, r6, r5
   3dda8:	ldr	r7, [sp, #36]	; 0x24
   3ddac:	adds	r3, r4, r3
   3ddb0:	ldr	r6, [r0, #-16]
   3ddb4:	adc	r4, r5, r1
   3ddb8:	lsr	r1, r4, #29
   3ddbc:	umull	r8, r9, r8, r7
   3ddc0:	orr	r5, r1, r3, lsl #3
   3ddc4:	mla	r9, r7, lr, r9
   3ddc8:	ldr	lr, [r0, #-12]
   3ddcc:	lsr	r7, r3, #29
   3ddd0:	orr	r3, r7, r4, lsl #3
   3ddd4:	ldr	r4, [r0, #-8]
   3ddd8:	adds	r3, r3, r2
   3dddc:	adc	r1, r5, ip
   3dde0:	adds	sl, r8, sl
   3dde4:	lsr	r8, sl, #29
   3dde8:	adc	r5, r9, fp
   3ddec:	ldr	r9, [sp, #48]	; 0x30
   3ddf0:	lsr	fp, r5, #29
   3ddf4:	orr	r5, r8, r5, lsl #3
   3ddf8:	ldr	r8, [sp]
   3ddfc:	orr	fp, fp, sl, lsl #3
   3de00:	umull	r6, r7, r6, r9
   3de04:	adds	sl, r5, r8
   3de08:	ldr	r5, [sp, #44]	; 0x2c
   3de0c:	mla	r7, r9, lr, r7
   3de10:	ldr	r9, [sp, #28]
   3de14:	ldr	lr, [r0, #-4]
   3de18:	str	r5, [sp, #16]
   3de1c:	umull	r4, r5, r4, r5
   3de20:	adc	fp, fp, r9
   3de24:	adds	r2, r6, r2
   3de28:	strd	r4, [sp]
   3de2c:	adc	ip, r7, ip
   3de30:	lsr	r6, r2, #29
   3de34:	ldr	r4, [sp, #4]
   3de38:	lsr	r7, ip, #29
   3de3c:	orr	ip, r6, ip, lsl #3
   3de40:	ldr	r5, [sp, #16]
   3de44:	orr	r7, r7, r2, lsl #3
   3de48:	adds	r2, ip, r3
   3de4c:	adc	ip, r7, r1
   3de50:	mla	lr, r5, lr, r4
   3de54:	str	lr, [sp, #4]
   3de58:	ldrd	r6, [sp]
   3de5c:	adds	r4, r6, r8
   3de60:	lsr	lr, r4, #29
   3de64:	adc	r6, r7, r9
   3de68:	lsr	r5, r6, #29
   3de6c:	orr	lr, lr, r6, lsl #3
   3de70:	orr	r4, r5, r4, lsl #3
   3de74:	adds	lr, lr, sl
   3de78:	str	lr, [sp]
   3de7c:	adc	lr, r4, fp
   3de80:	str	lr, [sp, #28]
   3de84:	ldr	lr, [sp, #40]	; 0x28
   3de88:	cmp	r0, lr
   3de8c:	bls	3dd88 <cmetrohash64_1@@Base+0xb4>
   3de90:	eor	r5, r3, sl
   3de94:	ldr	lr, [sp]
   3de98:	eor	r6, r1, fp
   3de9c:	str	r5, [sp, #40]	; 0x28
   3dea0:	ldr	r5, [sp, #28]
   3dea4:	ldrd	r8, [sp, #32]
   3dea8:	adds	r4, r3, lr
   3deac:	str	r6, [sp, #32]
   3deb0:	adc	lr, r1, r5
   3deb4:	umull	r4, r5, r4, r8
   3deb8:	mla	r5, r8, lr, r5
   3debc:	adds	r6, r4, sl
   3dec0:	lsl	r4, r6, #31
   3dec4:	adc	lr, r5, fp
   3dec8:	orr	r4, r4, lr, lsr #1
   3decc:	lsl	lr, lr, #31
   3ded0:	umull	r4, r5, r4, r9
   3ded4:	orr	lr, lr, r6, lsr #1
   3ded8:	eor	r6, r4, r2
   3dedc:	mla	r5, r9, lr, r5
   3dee0:	adds	r4, sl, r6
   3dee4:	eor	r7, r5, ip
   3dee8:	umull	r4, r5, r4, r9
   3deec:	adc	r2, fp, r7
   3def0:	mla	r5, r9, r2, r5
   3def4:	adds	lr, r4, r3
   3def8:	lsl	r2, lr, #31
   3defc:	adc	ip, r5, r1
   3df00:	adds	r4, r3, r6
   3df04:	orr	r2, r2, ip, lsr #1
   3df08:	adc	r1, r1, r7
   3df0c:	lsl	ip, ip, #31
   3df10:	umull	r4, r5, r4, r8
   3df14:	umull	r2, r3, r2, r8
   3df18:	orr	ip, ip, lr, lsr #1
   3df1c:	mov	lr, r8
   3df20:	mla	r5, r8, r1, r5
   3df24:	strd	r2, [sp, #16]
   3df28:	mla	r3, r8, ip, r3
   3df2c:	ldr	r2, [sp, #16]
   3df30:	mov	ip, r9
   3df34:	str	r3, [sp, #20]
   3df38:	ldr	r3, [sp]
   3df3c:	ldr	r8, [sp, #20]
   3df40:	eor	r2, r2, r3
   3df44:	ldr	r3, [sp, #28]
   3df48:	eor	r8, r8, r3
   3df4c:	adds	r3, r4, r2
   3df50:	adc	r1, r5, r8
   3df54:	adds	sl, sl, r2
   3df58:	lsl	r4, r3, #31
   3df5c:	adc	r5, fp, r8
   3df60:	lsl	r2, r1, #31
   3df64:	umull	r8, r9, sl, r9
   3df68:	mov	sl, ip
   3df6c:	orr	r4, r4, r1, lsr #1
   3df70:	orr	r3, r2, r3, lsr #1
   3df74:	mla	r9, ip, r5, r9
   3df78:	adds	r2, r8, r6
   3df7c:	umull	r4, r5, r4, ip
   3df80:	lsl	r1, r2, #31
   3df84:	adc	ip, r9, r7
   3df88:	lsl	r6, ip, #31
   3df8c:	mla	r5, sl, r3, r5
   3df90:	ldr	r3, [sp, #40]	; 0x28
   3df94:	orr	ip, r1, ip, lsr #1
   3df98:	ldr	r1, [sp, #8]
   3df9c:	orr	r6, r6, r2, lsr #1
   3dfa0:	umull	r8, r9, ip, lr
   3dfa4:	ldr	r2, [sp, #32]
   3dfa8:	eor	r3, r4, r3
   3dfac:	eor	r3, r3, r8
   3dfb0:	mla	r9, lr, r6, r9
   3dfb4:	adds	r3, r1, r3
   3dfb8:	eor	r2, r5, r2
   3dfbc:	str	r3, [sp, #8]
   3dfc0:	eor	r2, r2, r9
   3dfc4:	ldr	r3, [sp, #12]
   3dfc8:	adc	r3, r3, r2
   3dfcc:	str	r3, [sp, #12]
   3dfd0:	ldr	r7, [sp, #52]	; 0x34
   3dfd4:	sub	r3, r7, r0
   3dfd8:	cmp	r3, #15
   3dfdc:	ble	3e138 <cmetrohash64_1@@Base+0x464>
   3dfe0:	ldr	r2, [r0]
   3dfe4:	movw	r3, #37345	; 0x91e1
   3dfe8:	movt	r3, #51258	; 0xc83a
   3dfec:	movw	sl, #56283	; 0xdbdb
   3dff0:	movt	sl, #34376	; 0x8648
   3dff4:	ldr	r1, [r0, #4]
   3dff8:	movw	r5, #46599	; 0xb607
   3dffc:	movt	r5, #13299	; 0x33f3
   3e000:	add	r0, r0, #16
   3e004:	movw	lr, #42186	; 0xa4ca
   3e008:	movt	lr, #26887	; 0x6907
   3e00c:	ldr	r4, [r0, #-8]
   3e010:	movw	r6, #18043	; 0x467b
   3e014:	movt	r6, #12846	; 0x322e
   3e018:	umull	r8, r9, r2, r3
   3e01c:	str	r5, [sp, #16]
   3e020:	ldr	r2, [r0, #-4]
   3e024:	movw	ip, #45150	; 0xb05e
   3e028:	movt	ip, #5864	; 0x16e8
   3e02c:	movw	fp, #49211	; 0xc03b
   3e030:	movt	fp, #31710	; 0x7bde
   3e034:	mla	r3, r3, r1, r9
   3e038:	umull	r4, r5, r4, sl
   3e03c:	mov	r9, r3
   3e040:	sub	r3, r7, r0
   3e044:	strd	r4, [sp]
   3e048:	mov	r5, r9
   3e04c:	ldmib	sp, {r1, r7}
   3e050:	mla	r2, sl, r2, r1
   3e054:	ldr	r1, [sp, #8]
   3e058:	str	r2, [sp, #4]
   3e05c:	mov	r2, r5
   3e060:	ldrd	r4, [sp]
   3e064:	adds	r9, r8, r1
   3e068:	ldr	r1, [sp, #12]
   3e06c:	lsl	r8, r9, #31
   3e070:	adc	r1, r2, r1
   3e074:	adds	r7, r4, r7
   3e078:	mov	r2, r5
   3e07c:	ldrd	r4, [sp, #12]
   3e080:	orr	r8, r8, r1, lsr #1
   3e084:	lsl	r1, r1, #31
   3e088:	mul	lr, lr, r8
   3e08c:	orr	r1, r1, r9, lsr #1
   3e090:	adc	r2, r2, r4
   3e094:	lsl	r4, r7, #31
   3e098:	orr	r4, r4, r2, lsr #1
   3e09c:	lsl	r2, r2, #31
   3e0a0:	mla	lr, r6, r1, lr
   3e0a4:	orr	r2, r2, r7, lsr #1
   3e0a8:	umull	r6, r7, r8, r6
   3e0ac:	umull	r8, r9, r8, sl
   3e0b0:	mul	ip, ip, r4
   3e0b4:	add	r7, lr, r7
   3e0b8:	strd	r8, [sp]
   3e0bc:	umull	r8, r9, r4, fp
   3e0c0:	ldr	lr, [sp, #4]
   3e0c4:	mla	ip, r5, r2, ip
   3e0c8:	umull	r4, r5, r4, r5
   3e0cc:	mla	r9, fp, r2, r9
   3e0d0:	lsl	r2, r7, #29
   3e0d4:	add	r5, ip, r5
   3e0d8:	lsl	ip, r4, #29
   3e0dc:	mla	r1, sl, r1, lr
   3e0e0:	orr	ip, ip, r5, lsr #3
   3e0e4:	lsl	lr, r5, #29
   3e0e8:	str	r1, [sp, #4]
   3e0ec:	lsl	r1, r6, #29
   3e0f0:	ldrd	sl, [sp]
   3e0f4:	orr	r6, r2, r6, lsr #3
   3e0f8:	orr	r1, r1, r7, lsr #3
   3e0fc:	ldr	r2, [sp, #8]
   3e100:	orr	r4, lr, r4, lsr #3
   3e104:	adds	r1, r1, r8
   3e108:	adc	r6, r6, r9
   3e10c:	eor	r1, r1, sl
   3e110:	eor	r6, r6, fp
   3e114:	adds	r1, r1, ip
   3e118:	eor	r1, r1, r8
   3e11c:	adc	r4, r6, r4
   3e120:	adds	r2, r2, r1
   3e124:	eor	r4, r4, r9
   3e128:	str	r2, [sp, #8]
   3e12c:	ldr	r2, [sp, #12]
   3e130:	adc	r2, r2, r4
   3e134:	str	r2, [sp, #12]
   3e138:	cmp	r3, #7
   3e13c:	ble	3e1a0 <cmetrohash64_1@@Base+0x4cc>
   3e140:	ldr	r6, [r0]
   3e144:	movw	r2, #28837	; 0x70a5
   3e148:	movt	r2, #12120	; 0x2f58
   3e14c:	movw	lr, #56283	; 0xdbdb
   3e150:	movt	lr, #34376	; 0x8648
   3e154:	ldr	r1, [r0, #4]
   3e158:	add	r0, r0, #8
   3e15c:	ldrd	r8, [sp, #8]
   3e160:	umull	r6, r7, r6, r2
   3e164:	ldr	r3, [sp, #52]	; 0x34
   3e168:	mla	r7, r2, r1, r7
   3e16c:	adds	r1, r6, r8
   3e170:	lsl	r4, r1, #31
   3e174:	adc	r2, r7, r9
   3e178:	sub	r3, r3, r0
   3e17c:	orr	r4, r4, r2, lsr #1
   3e180:	lsl	ip, r2, #31
   3e184:	umull	r4, r5, r4, lr
   3e188:	orr	ip, ip, r1, lsr #1
   3e18c:	eor	r1, r4, r1
   3e190:	mla	r5, lr, ip, r5
   3e194:	str	r1, [sp, #8]
   3e198:	eor	r2, r5, r2
   3e19c:	str	r2, [sp, #12]
   3e1a0:	cmp	r3, #3
   3e1a4:	ble	3e1f4 <cmetrohash64_1@@Base+0x520>
   3e1a8:	ldr	r2, [r0], #4
   3e1ac:	movw	r3, #28837	; 0x70a5
   3e1b0:	movt	r3, #12120	; 0x2f58
   3e1b4:	movw	r1, #56283	; 0xdbdb
   3e1b8:	movt	r1, #34376	; 0x8648
   3e1bc:	ldrd	r6, [sp, #8]
   3e1c0:	umlal	r6, r7, r3, r2
   3e1c4:	ldr	r3, [sp, #52]	; 0x34
   3e1c8:	lsr	r4, r6, #15
   3e1cc:	lsr	r2, r7, #15
   3e1d0:	orr	r4, r4, r7, lsl #17
   3e1d4:	sub	r3, r3, r0
   3e1d8:	orr	r2, r2, r6, lsl #17
   3e1dc:	umull	r4, r5, r4, r1
   3e1e0:	mla	r5, r1, r2, r5
   3e1e4:	eor	r2, r4, r6
   3e1e8:	str	r2, [sp, #8]
   3e1ec:	eor	r2, r5, r7
   3e1f0:	str	r2, [sp, #12]
   3e1f4:	cmp	r3, #1
   3e1f8:	ble	3e248 <cmetrohash64_1@@Base+0x574>
   3e1fc:	ldrh	r2, [r0], #2
   3e200:	movw	r3, #28837	; 0x70a5
   3e204:	movt	r3, #12120	; 0x2f58
   3e208:	movw	r1, #56283	; 0xdbdb
   3e20c:	movt	r1, #34376	; 0x8648
   3e210:	ldrd	r4, [sp, #8]
   3e214:	umlal	r4, r5, r3, r2
   3e218:	ldr	r3, [sp, #52]	; 0x34
   3e21c:	lsr	r6, r4, #13
   3e220:	lsr	r2, r5, #13
   3e224:	orr	r6, r6, r5, lsl #19
   3e228:	sub	r3, r3, r0
   3e22c:	orr	r2, r2, r4, lsl #19
   3e230:	umull	r6, r7, r6, r1
   3e234:	mla	r7, r1, r2, r7
   3e238:	eor	r2, r6, r4
   3e23c:	str	r2, [sp, #8]
   3e240:	eor	r2, r7, r5
   3e244:	str	r2, [sp, #12]
   3e248:	cmp	r3, #0
   3e24c:	ble	3e29c <cmetrohash64_1@@Base+0x5c8>
   3e250:	ldrb	r0, [r0]
   3e254:	movw	r3, #28837	; 0x70a5
   3e258:	movt	r3, #12120	; 0x2f58
   3e25c:	movw	lr, #56283	; 0xdbdb
   3e260:	movt	lr, #34376	; 0x8648
   3e264:	ldrd	r4, [sp, #8]
   3e268:	umull	r0, r1, r0, r3
   3e26c:	adds	r6, r0, r4
   3e270:	lsr	r2, r6, #25
   3e274:	adc	r1, r1, r5
   3e278:	lsr	ip, r1, #25
   3e27c:	orr	r2, r2, r1, lsl #7
   3e280:	orr	ip, ip, r6, lsl #7
   3e284:	umull	r2, r3, r2, lr
   3e288:	mla	r3, lr, ip, r3
   3e28c:	eor	r0, r2, r6
   3e290:	str	r0, [sp, #8]
   3e294:	eor	r3, r3, r1
   3e298:	str	r3, [sp, #12]
   3e29c:	ldrd	r4, [sp, #8]
   3e2a0:	movw	r0, #37345	; 0x91e1
   3e2a4:	movt	r0, #51258	; 0xc83a
   3e2a8:	lsl	r2, r4, #31
   3e2ac:	lsl	r1, r5, #31
   3e2b0:	orr	r2, r2, r5, lsr #1
   3e2b4:	orr	r1, r1, r4, lsr #1
   3e2b8:	eor	r2, r2, r4
   3e2bc:	eor	r1, r1, r5
   3e2c0:	umull	r4, r5, r2, r0
   3e2c4:	mla	r5, r0, r1, r5
   3e2c8:	lsl	r1, r4, #31
   3e2cc:	orr	r1, r1, r5, lsr #1
   3e2d0:	lsl	r0, r5, #31
   3e2d4:	eor	r2, r4, r1
   3e2d8:	ldr	r1, [sp, #108]	; 0x6c
   3e2dc:	orr	r0, r0, r4, lsr #1
   3e2e0:	eor	r3, r5, r0
   3e2e4:	str	r2, [r1]
   3e2e8:	str	r3, [r1, #4]
   3e2ec:	add	sp, sp, #68	; 0x44
   3e2f0:	ldrd	r4, [sp]
   3e2f4:	ldrd	r6, [sp, #8]
   3e2f8:	ldrd	r8, [sp, #16]
   3e2fc:	ldrd	sl, [sp, #24]
   3e300:	add	sp, sp, #32
   3e304:	pop	{pc}		; (ldr pc, [sp], #4)

0003e308 <cmetrohash64_2@@Base>:
   3e308:	strd	r4, [sp, #-36]!	; 0xffffffdc
   3e30c:	movw	ip, #52149	; 0xcbb5
   3e310:	movt	ip, #56292	; 0xdbe4
   3e314:	strd	r6, [sp, #8]
   3e318:	adds	r4, r2, ip
   3e31c:	movw	r6, #13310	; 0x33fe
   3e320:	movt	r6, #21180	; 0x52bc
   3e324:	strd	r8, [sp, #16]
   3e328:	add	ip, r0, r2
   3e32c:	strd	sl, [sp, #24]
   3e330:	adc	r5, r3, r6
   3e334:	cmp	r3, #0
   3e338:	str	lr, [sp, #32]
   3e33c:	sub	sp, sp, #68	; 0x44
   3e340:	mov	r3, r5
   3e344:	ldr	lr, [sp, #104]	; 0x68
   3e348:	movw	r1, #6389	; 0x18f5
   3e34c:	movt	r1, #54992	; 0xd6d0
   3e350:	cmpeq	r2, #31
   3e354:	mov	r2, r4
   3e358:	str	ip, [sp, #52]	; 0x34
   3e35c:	umlal	r2, r3, r1, lr
   3e360:	mov	r4, r2
   3e364:	mov	r5, r3
   3e368:	strd	r4, [sp, #8]
   3e36c:	bls	3e604 <cmetrohash64_2@@Base+0x2fc>
   3e370:	movw	lr, #12225	; 0x2fc1
   3e374:	movt	lr, #25241	; 0x6299
   3e378:	str	r4, [sp]
   3e37c:	str	r1, [sp, #32]
   3e380:	movw	r1, #827	; 0x33b
   3e384:	movt	r1, #41642	; 0xa2aa
   3e388:	mov	fp, r3
   3e38c:	mov	sl, r2
   3e390:	str	r5, [sp, #28]
   3e394:	str	r1, [sp, #36]	; 0x24
   3e398:	movw	r1, #23337	; 0x5b29
   3e39c:	movt	r1, #12476	; 0x30bc
   3e3a0:	mov	r3, r2
   3e3a4:	str	r1, [sp, #44]	; 0x2c
   3e3a8:	sub	r1, ip, #32
   3e3ac:	mov	ip, r5
   3e3b0:	str	r1, [sp, #40]	; 0x28
   3e3b4:	mov	r1, r5
   3e3b8:	str	lr, [sp, #48]	; 0x30
   3e3bc:	ldr	r4, [r0]
   3e3c0:	add	r0, r0, #32
   3e3c4:	ldr	r7, [sp, #32]
   3e3c8:	ldr	r6, [r0, #-28]	; 0xffffffe4
   3e3cc:	ldr	r8, [r0, #-24]	; 0xffffffe8
   3e3d0:	umull	r4, r5, r4, r7
   3e3d4:	ldr	lr, [r0, #-20]	; 0xffffffec
   3e3d8:	mla	r5, r7, r6, r5
   3e3dc:	ldr	r7, [sp, #36]	; 0x24
   3e3e0:	adds	r3, r4, r3
   3e3e4:	ldr	r6, [r0, #-16]
   3e3e8:	adc	r4, r5, r1
   3e3ec:	lsr	r1, r4, #29
   3e3f0:	umull	r8, r9, r8, r7
   3e3f4:	orr	r5, r1, r3, lsl #3
   3e3f8:	mla	r9, r7, lr, r9
   3e3fc:	ldr	lr, [r0, #-12]
   3e400:	lsr	r7, r3, #29
   3e404:	orr	r3, r7, r4, lsl #3
   3e408:	ldr	r4, [r0, #-8]
   3e40c:	adds	r3, r3, r2
   3e410:	adc	r1, r5, ip
   3e414:	adds	sl, r8, sl
   3e418:	lsr	r8, sl, #29
   3e41c:	adc	r5, r9, fp
   3e420:	ldr	r9, [sp, #48]	; 0x30
   3e424:	lsr	fp, r5, #29
   3e428:	orr	r5, r8, r5, lsl #3
   3e42c:	ldr	r8, [sp]
   3e430:	orr	fp, fp, sl, lsl #3
   3e434:	umull	r6, r7, r6, r9
   3e438:	adds	sl, r5, r8
   3e43c:	ldr	r5, [sp, #44]	; 0x2c
   3e440:	mla	r7, r9, lr, r7
   3e444:	ldr	r9, [sp, #28]
   3e448:	ldr	lr, [r0, #-4]
   3e44c:	str	r5, [sp, #16]
   3e450:	umull	r4, r5, r4, r5
   3e454:	adc	fp, fp, r9
   3e458:	adds	r2, r6, r2
   3e45c:	strd	r4, [sp]
   3e460:	adc	ip, r7, ip
   3e464:	lsr	r6, r2, #29
   3e468:	ldr	r4, [sp, #4]
   3e46c:	lsr	r7, ip, #29
   3e470:	orr	ip, r6, ip, lsl #3
   3e474:	ldr	r5, [sp, #16]
   3e478:	orr	r7, r7, r2, lsl #3
   3e47c:	adds	r2, ip, r3
   3e480:	adc	ip, r7, r1
   3e484:	mla	lr, r5, lr, r4
   3e488:	str	lr, [sp, #4]
   3e48c:	ldrd	r6, [sp]
   3e490:	adds	r4, r6, r8
   3e494:	lsr	lr, r4, #29
   3e498:	adc	r6, r7, r9
   3e49c:	lsr	r5, r6, #29
   3e4a0:	orr	lr, lr, r6, lsl #3
   3e4a4:	orr	r4, r5, r4, lsl #3
   3e4a8:	adds	lr, lr, sl
   3e4ac:	str	lr, [sp]
   3e4b0:	adc	lr, r4, fp
   3e4b4:	str	lr, [sp, #28]
   3e4b8:	ldr	lr, [sp, #40]	; 0x28
   3e4bc:	cmp	r0, lr
   3e4c0:	bls	3e3bc <cmetrohash64_2@@Base+0xb4>
   3e4c4:	eor	r5, r3, sl
   3e4c8:	ldr	lr, [sp]
   3e4cc:	eor	r6, r1, fp
   3e4d0:	str	r5, [sp, #40]	; 0x28
   3e4d4:	ldr	r5, [sp, #28]
   3e4d8:	ldrd	r8, [sp, #32]
   3e4dc:	adds	r4, r3, lr
   3e4e0:	str	r6, [sp, #32]
   3e4e4:	adc	lr, r1, r5
   3e4e8:	umull	r4, r5, r4, r8
   3e4ec:	mla	r5, r8, lr, r5
   3e4f0:	adds	r6, r4, sl
   3e4f4:	lsr	r4, r6, #30
   3e4f8:	adc	lr, r5, fp
   3e4fc:	orr	r4, r4, lr, lsl #2
   3e500:	lsr	lr, lr, #30
   3e504:	umull	r4, r5, r4, r9
   3e508:	orr	lr, lr, r6, lsl #2
   3e50c:	eor	r6, r4, r2
   3e510:	mla	r5, r9, lr, r5
   3e514:	adds	r4, sl, r6
   3e518:	eor	r7, r5, ip
   3e51c:	umull	r4, r5, r4, r9
   3e520:	adc	r2, fp, r7
   3e524:	mla	r5, r9, r2, r5
   3e528:	adds	lr, r4, r3
   3e52c:	lsr	r2, lr, #30
   3e530:	adc	ip, r5, r1
   3e534:	adds	r4, r3, r6
   3e538:	orr	r2, r2, ip, lsl #2
   3e53c:	adc	r1, r1, r7
   3e540:	lsr	ip, ip, #30
   3e544:	umull	r4, r5, r4, r8
   3e548:	umull	r2, r3, r2, r8
   3e54c:	orr	ip, ip, lr, lsl #2
   3e550:	mov	lr, r8
   3e554:	mla	r5, r8, r1, r5
   3e558:	strd	r2, [sp, #16]
   3e55c:	mla	r3, r8, ip, r3
   3e560:	ldr	r2, [sp, #16]
   3e564:	mov	ip, r9
   3e568:	str	r3, [sp, #20]
   3e56c:	ldr	r3, [sp]
   3e570:	ldr	r8, [sp, #20]
   3e574:	eor	r2, r2, r3
   3e578:	ldr	r3, [sp, #28]
   3e57c:	eor	r8, r8, r3
   3e580:	adds	r3, r4, r2
   3e584:	adc	r1, r5, r8
   3e588:	adds	sl, sl, r2
   3e58c:	lsr	r4, r3, #30
   3e590:	adc	r5, fp, r8
   3e594:	lsr	r2, r1, #30
   3e598:	umull	r8, r9, sl, r9
   3e59c:	mov	sl, ip
   3e5a0:	orr	r4, r4, r1, lsl #2
   3e5a4:	orr	r3, r2, r3, lsl #2
   3e5a8:	mla	r9, ip, r5, r9
   3e5ac:	adds	r2, r8, r6
   3e5b0:	umull	r4, r5, r4, ip
   3e5b4:	lsr	r1, r2, #30
   3e5b8:	adc	ip, r9, r7
   3e5bc:	lsr	r6, ip, #30
   3e5c0:	mla	r5, sl, r3, r5
   3e5c4:	ldr	r3, [sp, #40]	; 0x28
   3e5c8:	orr	ip, r1, ip, lsl #2
   3e5cc:	ldr	r1, [sp, #8]
   3e5d0:	orr	r6, r6, r2, lsl #2
   3e5d4:	umull	r8, r9, ip, lr
   3e5d8:	ldr	r2, [sp, #32]
   3e5dc:	eor	r3, r4, r3
   3e5e0:	eor	r3, r3, r8
   3e5e4:	mla	r9, lr, r6, r9
   3e5e8:	adds	r3, r1, r3
   3e5ec:	eor	r2, r5, r2
   3e5f0:	str	r3, [sp, #8]
   3e5f4:	eor	r2, r2, r9
   3e5f8:	ldr	r3, [sp, #12]
   3e5fc:	adc	r3, r3, r2
   3e600:	str	r3, [sp, #12]
   3e604:	ldr	fp, [sp, #52]	; 0x34
   3e608:	sub	r3, fp, r0
   3e60c:	cmp	r3, #15
   3e610:	ble	3e758 <cmetrohash64_2@@Base+0x450>
   3e614:	ldr	r4, [r0]
   3e618:	movw	r2, #12225	; 0x2fc1
   3e61c:	movt	r2, #25241	; 0x6299
   3e620:	add	r0, r0, #16
   3e624:	movw	ip, #11461	; 0x2cc5
   3e628:	movt	ip, #2375	; 0x947
   3e62c:	ldr	sl, [r0, #-8]
   3e630:	movw	r1, #23337	; 0x5b29
   3e634:	movt	r1, #12476	; 0x30bc
   3e638:	movw	r7, #11409	; 0x2c91
   3e63c:	movt	r7, #25774	; 0x64ae
   3e640:	ldr	r9, [r0, #-12]
   3e644:	movw	lr, #4606	; 0x11fe
   3e648:	movt	lr, #10469	; 0x28e5
   3e64c:	umull	r4, r5, r4, r2
   3e650:	movw	r8, #5693	; 0x163d
   3e654:	movt	r8, #42015	; 0xa41f
   3e658:	ldr	r6, [r0, #-4]
   3e65c:	sub	r3, fp, r0
   3e660:	strd	r4, [sp]
   3e664:	umull	r4, r5, sl, r2
   3e668:	ldr	sl, [sp, #4]
   3e66c:	strd	r4, [sp, #16]
   3e670:	ldr	r4, [sp]
   3e674:	mla	r9, r2, r9, sl
   3e678:	ldrd	sl, [sp, #8]
   3e67c:	mla	r2, r2, r6, r5
   3e680:	ldr	r5, [sp, #16]
   3e684:	str	r9, [sp, #4]
   3e688:	str	r2, [sp, #20]
   3e68c:	adds	r9, r4, sl
   3e690:	ldr	r4, [sp, #4]
   3e694:	lsr	r6, r9, #29
   3e698:	adc	r2, r4, fp
   3e69c:	adds	r5, r5, sl
   3e6a0:	ldr	r4, [sp, #20]
   3e6a4:	orr	r6, r6, r2, lsl #3
   3e6a8:	lsr	sl, r2, #29
   3e6ac:	ldr	r2, [sp, #12]
   3e6b0:	orr	r9, sl, r9, lsl #3
   3e6b4:	mul	lr, lr, r6
   3e6b8:	adc	r2, r4, r2
   3e6bc:	lsr	r4, r5, #29
   3e6c0:	str	r9, [sp]
   3e6c4:	mla	lr, r8, r9, lr
   3e6c8:	orr	r4, r4, r2, lsl #3
   3e6cc:	lsr	r2, r2, #29
   3e6d0:	umull	r8, r9, r6, r8
   3e6d4:	orr	r2, r2, r5, lsl #3
   3e6d8:	mul	ip, ip, r4
   3e6dc:	umull	sl, fp, r4, r1
   3e6e0:	add	r9, lr, r9
   3e6e4:	umull	r4, r5, r4, r7
   3e6e8:	mla	ip, r7, r2, ip
   3e6ec:	umull	r6, r7, r6, r1
   3e6f0:	mla	fp, r1, r2, fp
   3e6f4:	add	r5, ip, r5
   3e6f8:	ldr	ip, [sp]
   3e6fc:	lsl	r2, r8, #30
   3e700:	lsl	lr, r5, #30
   3e704:	orr	r2, r2, r9, lsr #2
   3e708:	adds	r2, r2, sl
   3e70c:	mla	r7, r1, ip, r7
   3e710:	eor	r2, r2, r6
   3e714:	lsl	r1, r9, #30
   3e718:	lsl	ip, r4, #30
   3e71c:	orr	r8, r1, r8, lsr #2
   3e720:	ldr	r1, [sp, #8]
   3e724:	orr	ip, ip, r5, lsr #2
   3e728:	adc	r8, r8, fp
   3e72c:	orr	r4, lr, r4, lsr #2
   3e730:	adds	r2, r2, ip
   3e734:	eor	r8, r8, r7
   3e738:	eor	r2, r2, sl
   3e73c:	adc	r4, r8, r4
   3e740:	adds	r2, r1, r2
   3e744:	eor	r4, r4, fp
   3e748:	str	r2, [sp, #8]
   3e74c:	ldr	r2, [sp, #12]
   3e750:	adc	r2, r2, r4
   3e754:	str	r2, [sp, #12]
   3e758:	cmp	r3, #7
   3e75c:	ble	3e7c0 <cmetrohash64_2@@Base+0x4b8>
   3e760:	ldr	r6, [r0]
   3e764:	movw	r2, #23337	; 0x5b29
   3e768:	movt	r2, #12476	; 0x30bc
   3e76c:	movw	lr, #827	; 0x33b
   3e770:	movt	lr, #41642	; 0xa2aa
   3e774:	ldr	r1, [r0, #4]
   3e778:	add	r0, r0, #8
   3e77c:	ldrd	r8, [sp, #8]
   3e780:	umull	r6, r7, r6, r2
   3e784:	ldr	r3, [sp, #52]	; 0x34
   3e788:	mla	r7, r2, r1, r7
   3e78c:	adds	r1, r6, r8
   3e790:	lsl	r4, r1, #28
   3e794:	adc	r2, r7, r9
   3e798:	sub	r3, r3, r0
   3e79c:	orr	r4, r4, r2, lsr #4
   3e7a0:	lsl	ip, r2, #28
   3e7a4:	umull	r4, r5, r4, lr
   3e7a8:	orr	ip, ip, r1, lsr #4
   3e7ac:	eor	r1, r4, r1
   3e7b0:	mla	r5, lr, ip, r5
   3e7b4:	str	r1, [sp, #8]
   3e7b8:	eor	r2, r5, r2
   3e7bc:	str	r2, [sp, #12]
   3e7c0:	cmp	r3, #3
   3e7c4:	ble	3e814 <cmetrohash64_2@@Base+0x50c>
   3e7c8:	ldr	r2, [r0], #4
   3e7cc:	movw	r3, #23337	; 0x5b29
   3e7d0:	movt	r3, #12476	; 0x30bc
   3e7d4:	movw	r1, #827	; 0x33b
   3e7d8:	movt	r1, #41642	; 0xa2aa
   3e7dc:	ldrd	r6, [sp, #8]
   3e7e0:	umlal	r6, r7, r3, r2
   3e7e4:	ldr	r3, [sp, #52]	; 0x34
   3e7e8:	lsr	r4, r6, #15
   3e7ec:	lsr	r2, r7, #15
   3e7f0:	orr	r4, r4, r7, lsl #17
   3e7f4:	sub	r3, r3, r0
   3e7f8:	orr	r2, r2, r6, lsl #17
   3e7fc:	umull	r4, r5, r4, r1
   3e800:	mla	r5, r1, r2, r5
   3e804:	eor	r2, r4, r6
   3e808:	str	r2, [sp, #8]
   3e80c:	eor	r2, r5, r7
   3e810:	str	r2, [sp, #12]
   3e814:	cmp	r3, #1
   3e818:	ble	3e868 <cmetrohash64_2@@Base+0x560>
   3e81c:	ldrh	r2, [r0], #2
   3e820:	movw	r3, #23337	; 0x5b29
   3e824:	movt	r3, #12476	; 0x30bc
   3e828:	movw	r1, #827	; 0x33b
   3e82c:	movt	r1, #41642	; 0xa2aa
   3e830:	ldrd	r4, [sp, #8]
   3e834:	umlal	r4, r5, r3, r2
   3e838:	ldr	r3, [sp, #52]	; 0x34
   3e83c:	lsr	r6, r4, #15
   3e840:	lsr	r2, r5, #15
   3e844:	orr	r6, r6, r5, lsl #17
   3e848:	sub	r3, r3, r0
   3e84c:	orr	r2, r2, r4, lsl #17
   3e850:	umull	r6, r7, r6, r1
   3e854:	mla	r7, r1, r2, r7
   3e858:	eor	r2, r6, r4
   3e85c:	str	r2, [sp, #8]
   3e860:	eor	r2, r7, r5
   3e864:	str	r2, [sp, #12]
   3e868:	cmp	r3, #0
   3e86c:	ble	3e8bc <cmetrohash64_2@@Base+0x5b4>
   3e870:	ldrb	r0, [r0]
   3e874:	movw	r3, #23337	; 0x5b29
   3e878:	movt	r3, #12476	; 0x30bc
   3e87c:	movw	lr, #827	; 0x33b
   3e880:	movt	lr, #41642	; 0xa2aa
   3e884:	ldrd	r4, [sp, #8]
   3e888:	umull	r0, r1, r0, r3
   3e88c:	adds	r6, r0, r4
   3e890:	lsr	r2, r6, #23
   3e894:	adc	r1, r1, r5
   3e898:	lsr	ip, r1, #23
   3e89c:	orr	r2, r2, r1, lsl #9
   3e8a0:	orr	ip, ip, r6, lsl #9
   3e8a4:	umull	r2, r3, r2, lr
   3e8a8:	mla	r3, lr, ip, r3
   3e8ac:	eor	r0, r2, r6
   3e8b0:	str	r0, [sp, #8]
   3e8b4:	eor	r3, r3, r1
   3e8b8:	str	r3, [sp, #12]
   3e8bc:	ldrd	r4, [sp, #8]
   3e8c0:	movw	r0, #6389	; 0x18f5
   3e8c4:	movt	r0, #54992	; 0xd6d0
   3e8c8:	lsr	r2, r4, #28
   3e8cc:	lsr	r1, r5, #28
   3e8d0:	orr	r2, r2, r5, lsl #4
   3e8d4:	orr	r1, r1, r4, lsl #4
   3e8d8:	eor	r2, r2, r4
   3e8dc:	eor	r1, r1, r5
   3e8e0:	umull	r4, r5, r2, r0
   3e8e4:	mla	r5, r0, r1, r5
   3e8e8:	lsr	r0, r4, #29
   3e8ec:	lsr	r1, r5, #29
   3e8f0:	orr	r0, r0, r5, lsl #3
   3e8f4:	orr	r1, r1, r4, lsl #3
   3e8f8:	eor	r2, r4, r0
   3e8fc:	eor	r3, r5, r1
   3e900:	ldr	r1, [sp, #108]	; 0x6c
   3e904:	str	r2, [r1]
   3e908:	str	r3, [r1, #4]
   3e90c:	add	sp, sp, #68	; 0x44
   3e910:	ldrd	r4, [sp]
   3e914:	ldrd	r6, [sp, #8]
   3e918:	ldrd	r8, [sp, #16]
   3e91c:	ldrd	sl, [sp, #24]
   3e920:	add	sp, sp, #32
   3e924:	pop	{pc}		; (ldr pc, [sp], #4)
   3e928:	str	r4, [sp, #-8]!
   3e92c:	mov	r4, r0
   3e930:	ldr	r0, [r0]
   3e934:	str	lr, [sp, #4]
   3e938:	cmp	r0, #0
   3e93c:	beq	3e944 <cmetrohash64_2@@Base+0x63c>
   3e940:	bl	13fa4 <free@plt>
   3e944:	mov	r3, #0
   3e948:	str	r3, [r4]
   3e94c:	str	r3, [r4, #4]
   3e950:	str	r3, [r4, #8]
   3e954:	str	r3, [r4, #12]
   3e958:	ldr	r4, [sp]
   3e95c:	add	sp, sp, #4
   3e960:	pop	{pc}		; (ldr pc, [sp], #4)
   3e964:	strd	r4, [sp, #-36]!	; 0xffffffdc
   3e968:	ldr	r4, [pc, #588]	; 3ebbc <cmetrohash64_2@@Base+0x8b4>
   3e96c:	strd	r6, [sp, #8]
   3e970:	strd	r8, [sp, #16]
   3e974:	strd	sl, [sp, #24]
   3e978:	subs	fp, r3, #0
   3e97c:	str	lr, [sp, #32]
   3e980:	sub	sp, sp, #28
   3e984:	add	r4, pc, r4
   3e988:	str	r1, [sp, #8]
   3e98c:	beq	3eb54 <cmetrohash64_2@@Base+0x84c>
   3e990:	cmp	fp, #2
   3e994:	beq	3eb34 <cmetrohash64_2@@Base+0x82c>
   3e998:	cmp	fp, #1
   3e99c:	beq	3eb74 <cmetrohash64_2@@Base+0x86c>
   3e9a0:	mov	r3, #179	; 0xb3
   3e9a4:	ldr	r1, [r0, #8]
   3e9a8:	mov	r9, r2
   3e9ac:	mov	sl, r0
   3e9b0:	ldr	r8, [r0, #12]
   3e9b4:	mul	r3, r3, r8
   3e9b8:	cmp	r1, r3, lsr #8
   3e9bc:	bcs	3eaac <cmetrohash64_2@@Base+0x7a4>
   3e9c0:	movw	r1, #15186	; 0x3b52
   3e9c4:	movt	r1, #12137	; 0x2f69
   3e9c8:	ldr	r7, [sl]
   3e9cc:	mov	r3, #0
   3e9d0:	mov	r2, r9
   3e9d4:	str	r1, [sp]
   3e9d8:	add	r1, sp, #16
   3e9dc:	sub	r8, r8, #1
   3e9e0:	ldr	r0, [sp, #8]
   3e9e4:	str	r1, [sp, #4]
   3e9e8:	bl	3dcd4 <cmetrohash64_1@@Base>
   3e9ec:	ldr	r6, [sp, #16]
   3e9f0:	ldr	r3, [sp, #64]	; 0x40
   3e9f4:	sub	r3, r3, #2
   3e9f8:	cmp	r3, #1
   3e9fc:	and	r3, r8, r6
   3ea00:	add	r4, r7, r3, lsl #2
   3ea04:	bls	3eaec <cmetrohash64_2@@Base+0x7e4>
   3ea08:	ldr	r5, [r7, r3, lsl #2]
   3ea0c:	cmp	r5, #0
   3ea10:	moveq	r3, r4
   3ea14:	beq	3ead4 <cmetrohash64_2@@Base+0x7cc>
   3ea18:	mov	r3, #0
   3ea1c:	add	r6, r6, #1
   3ea20:	str	sl, [sp, #12]
   3ea24:	mov	sl, r8
   3ea28:	mov	r8, r3
   3ea2c:	b	3ea54 <cmetrohash64_2@@Base+0x74c>
   3ea30:	ldr	r2, [r5, #12]
   3ea34:	cmp	r9, r2
   3ea38:	beq	3ea68 <cmetrohash64_2@@Base+0x760>
   3ea3c:	and	r4, sl, r6
   3ea40:	add	r6, r6, #1
   3ea44:	ldr	r5, [r7, r4, lsl #2]
   3ea48:	add	r4, r7, r4, lsl #2
   3ea4c:	cmp	r5, #0
   3ea50:	beq	3eac4 <cmetrohash64_2@@Base+0x7bc>
   3ea54:	cmp	r5, #2
   3ea58:	bne	3ea30 <cmetrohash64_2@@Base+0x728>
   3ea5c:	cmp	r8, #0
   3ea60:	moveq	r8, r4
   3ea64:	b	3ea3c <cmetrohash64_2@@Base+0x734>
   3ea68:	mov	r2, r9
   3ea6c:	ldr	r1, [r5, #8]
   3ea70:	ldr	r0, [sp, #8]
   3ea74:	bl	13fc8 <memcmp@plt>
   3ea78:	cmp	r0, #0
   3ea7c:	bne	3ea3c <cmetrohash64_2@@Base+0x734>
   3ea80:	ldr	r3, [sp, #64]	; 0x40
   3ea84:	cmp	r3, #0
   3ea88:	streq	fp, [r4]
   3ea8c:	mov	r0, r5
   3ea90:	add	sp, sp, #28
   3ea94:	ldrd	r4, [sp]
   3ea98:	ldrd	r6, [sp, #8]
   3ea9c:	ldrd	r8, [sp, #16]
   3eaa0:	ldrd	sl, [sp, #24]
   3eaa4:	add	sp, sp, #32
   3eaa8:	pop	{pc}		; (ldr pc, [sp], #4)
   3eaac:	lsl	r1, r1, #1
   3eab0:	bl	3ebf0 <cmetrohash64_2@@Base+0x8e8>
   3eab4:	cmp	r0, #0
   3eab8:	bne	3eb94 <cmetrohash64_2@@Base+0x88c>
   3eabc:	ldr	r8, [sl, #12]
   3eac0:	b	3e9c0 <cmetrohash64_2@@Base+0x6b8>
   3eac4:	ldr	sl, [sp, #12]
   3eac8:	cmp	r8, #0
   3eacc:	mov	r3, r8
   3ead0:	moveq	r3, r4
   3ead4:	ldr	r2, [sl, #8]
   3ead8:	mov	r5, #0
   3eadc:	add	r2, r2, #1
   3eae0:	str	r2, [sl, #8]
   3eae4:	str	fp, [r3]
   3eae8:	b	3ea8c <cmetrohash64_2@@Base+0x784>
   3eaec:	ldr	r2, [sl, #8]
   3eaf0:	ldr	r1, [r7, r3, lsl #2]
   3eaf4:	add	r3, r2, #1
   3eaf8:	cmp	r1, #2
   3eafc:	cmpne	r1, #0
   3eb00:	str	r3, [sl, #8]
   3eb04:	beq	3eb28 <cmetrohash64_2@@Base+0x820>
   3eb08:	add	r6, r6, #1
   3eb0c:	and	r4, r8, r6
   3eb10:	add	r6, r6, #1
   3eb14:	ldr	r3, [r7, r4, lsl #2]
   3eb18:	add	r4, r7, r4, lsl #2
   3eb1c:	cmp	r3, #0
   3eb20:	cmpne	r3, #2
   3eb24:	bne	3eb0c <cmetrohash64_2@@Base+0x804>
   3eb28:	mov	r5, #0
   3eb2c:	str	fp, [r4]
   3eb30:	b	3ea8c <cmetrohash64_2@@Base+0x784>
   3eb34:	ldr	r3, [pc, #132]	; 3ebc0 <cmetrohash64_2@@Base+0x8b8>
   3eb38:	mov	r2, #115	; 0x73
   3eb3c:	ldr	r1, [pc, #128]	; 3ebc4 <cmetrohash64_2@@Base+0x8bc>
   3eb40:	ldr	r0, [pc, #128]	; 3ebc8 <cmetrohash64_2@@Base+0x8c0>
   3eb44:	add	r3, pc, r3
   3eb48:	add	r1, pc, r1
   3eb4c:	add	r0, pc, r0
   3eb50:	bl	14118 <__assert_fail@plt>
   3eb54:	ldr	r3, [pc, #112]	; 3ebcc <cmetrohash64_2@@Base+0x8c4>
   3eb58:	mov	r2, #114	; 0x72
   3eb5c:	ldr	r1, [pc, #108]	; 3ebd0 <cmetrohash64_2@@Base+0x8c8>
   3eb60:	ldr	r0, [pc, #108]	; 3ebd4 <cmetrohash64_2@@Base+0x8cc>
   3eb64:	add	r3, pc, r3
   3eb68:	add	r1, pc, r1
   3eb6c:	add	r0, pc, r0
   3eb70:	bl	14118 <__assert_fail@plt>
   3eb74:	ldr	r3, [pc, #92]	; 3ebd8 <cmetrohash64_2@@Base+0x8d0>
   3eb78:	mov	r2, #116	; 0x74
   3eb7c:	ldr	r1, [pc, #88]	; 3ebdc <cmetrohash64_2@@Base+0x8d4>
   3eb80:	ldr	r0, [pc, #88]	; 3ebe0 <cmetrohash64_2@@Base+0x8d8>
   3eb84:	add	r3, pc, r3
   3eb88:	add	r1, pc, r1
   3eb8c:	add	r0, pc, r0
   3eb90:	bl	14118 <__assert_fail@plt>
   3eb94:	ldr	r3, [pc, #72]	; 3ebe4 <cmetrohash64_2@@Base+0x8dc>
   3eb98:	ldr	r2, [pc, #72]	; 3ebe8 <cmetrohash64_2@@Base+0x8e0>
   3eb9c:	ldr	r1, [pc, #72]	; 3ebec <cmetrohash64_2@@Base+0x8e4>
   3eba0:	ldr	r3, [r4, r3]
   3eba4:	add	r2, pc, r2
   3eba8:	add	r1, pc, r1
   3ebac:	ldr	r0, [r3]
   3ebb0:	bl	14064 <fprintf@plt>
   3ebb4:	mov	r0, #1
   3ebb8:	bl	14040 <exit@plt>
   3ebbc:	andeq	lr, r2, r4, ror r6
   3ebc0:	andeq	sp, r1, r4, lsl #7
   3ebc4:	andeq	r9, r1, r0, lsr sp
   3ebc8:	andeq	r9, r1, ip, lsr #27
   3ebcc:	andeq	sp, r1, r4, ror #6
   3ebd0:	andeq	r9, r1, r0, lsl sp
   3ebd4:	andeq	r9, r1, r4, ror sp
   3ebd8:	andeq	sp, r1, r4, asr #6
   3ebdc:	strdeq	r9, [r1], -r0
   3ebe0:	andeq	r9, r1, r4, lsl #27
   3ebe4:	andeq	r0, r0, r0, lsr #1
   3ebe8:	andeq	r9, r1, r4, lsl #27
   3ebec:			; <UNDEFINED> instruction: 0x00019db4
   3ebf0:	ldr	r3, [r0, #8]
   3ebf4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   3ebf8:	strd	r6, [sp, #8]
   3ebfc:	mov	r7, r0
   3ec00:	str	r8, [sp, #16]
   3ec04:	str	lr, [sp, #20]
   3ec08:	sub	sp, sp, #24
   3ec0c:	cmp	r1, r3
   3ec10:	ldr	r6, [r0]
   3ec14:	movcc	r1, r3
   3ec18:	cmp	r1, #2
   3ec1c:	bls	3ed00 <cmetrohash64_2@@Base+0x9f8>
   3ec20:	mov	r3, #4
   3ec24:	movw	r0, #358	; 0x166
   3ec28:	mul	r2, r0, r3
   3ec2c:	lsl	r5, r3, #1
   3ec30:	cmp	r1, r2, lsr #8
   3ec34:	mov	r3, r5
   3ec38:	bhi	3ec28 <cmetrohash64_2@@Base+0x920>
   3ec3c:	mov	r1, #4
   3ec40:	mov	r0, r5
   3ec44:	bl	13f74 <calloc@plt>
   3ec48:	cmp	r0, #0
   3ec4c:	str	r0, [sp, #8]
   3ec50:	beq	3ed08 <cmetrohash64_2@@Base+0xa00>
   3ec54:	ldr	r3, [r7, #12]
   3ec58:	mov	r4, #0
   3ec5c:	str	r4, [sp, #12]
   3ec60:	strd	r4, [sp, #16]
   3ec64:	cmp	r3, r4
   3ec68:	addeq	r6, sp, #8
   3ec6c:	beq	3ecc0 <cmetrohash64_2@@Base+0x9b8>
   3ec70:	sub	r5, r6, #4
   3ec74:	mov	r8, #3
   3ec78:	add	r6, sp, #8
   3ec7c:	b	3ec88 <cmetrohash64_2@@Base+0x980>
   3ec80:	cmp	r3, r4
   3ec84:	bls	3ecc0 <cmetrohash64_2@@Base+0x9b8>
   3ec88:	ldr	r2, [r5, #4]!
   3ec8c:	add	r4, r4, #1
   3ec90:	cmp	r2, #0
   3ec94:	cmpne	r2, #2
   3ec98:	beq	3ec80 <cmetrohash64_2@@Base+0x978>
   3ec9c:	mov	r3, r2
   3eca0:	mov	r0, r6
   3eca4:	ldr	r1, [r2, #8]
   3eca8:	ldr	r2, [r2, #12]
   3ecac:	str	r8, [sp]
   3ecb0:	bl	3e964 <cmetrohash64_2@@Base+0x65c>
   3ecb4:	ldr	r3, [r7, #12]
   3ecb8:	cmp	r3, r4
   3ecbc:	bhi	3ec88 <cmetrohash64_2@@Base+0x980>
   3ecc0:	mov	r0, r7
   3ecc4:	bl	3e928 <cmetrohash64_2@@Base+0x620>
   3ecc8:	ldr	r3, [sp, #8]
   3eccc:	mov	r0, #0
   3ecd0:	ldmib	r6, {r1, r2}
   3ecd4:	str	r3, [r7]
   3ecd8:	ldr	r3, [r6, #12]
   3ecdc:	str	r1, [r7, #4]
   3ece0:	str	r2, [r7, #8]
   3ece4:	str	r3, [r7, #12]
   3ece8:	add	sp, sp, #24
   3ecec:	ldrd	r4, [sp]
   3ecf0:	ldrd	r6, [sp, #8]
   3ecf4:	ldr	r8, [sp, #16]
   3ecf8:	add	sp, sp, #20
   3ecfc:	pop	{pc}		; (ldr pc, [sp], #4)
   3ed00:	mov	r5, #4
   3ed04:	b	3ec3c <cmetrohash64_2@@Base+0x934>
   3ed08:	mvn	r0, #0
   3ed0c:	b	3ece8 <cmetrohash64_2@@Base+0x9e0>
   3ed10:	strd	r4, [sp, #-36]!	; 0xffffffdc
   3ed14:	ldr	r5, [r0]
   3ed18:	strd	r6, [sp, #8]
   3ed1c:	strd	r8, [sp, #16]
   3ed20:	strd	sl, [sp, #24]
   3ed24:	str	lr, [sp, #32]
   3ed28:	sub	sp, sp, #20
   3ed2c:	cmp	r5, #0
   3ed30:	beq	3ee00 <cmetrohash64_2@@Base+0xaf8>
   3ed34:	mov	r9, r1
   3ed38:	movw	r1, #15186	; 0x3b52
   3ed3c:	movt	r1, #12137	; 0x2f69
   3ed40:	mov	r8, r0
   3ed44:	ldr	r6, [r8, #12]
   3ed48:	mov	r3, #0
   3ed4c:	mov	r0, r9
   3ed50:	str	r1, [sp]
   3ed54:	add	r1, sp, #8
   3ed58:	mov	r7, r2
   3ed5c:	str	r1, [sp, #4]
   3ed60:	bl	3dcd4 <cmetrohash64_1@@Base>
   3ed64:	ldr	sl, [sp, #8]
   3ed68:	sub	r6, r6, #1
   3ed6c:	and	r3, r6, sl
   3ed70:	ldr	fp, [r5, r3, lsl #2]
   3ed74:	add	r4, r5, r3, lsl #2
   3ed78:	cmp	fp, #0
   3ed7c:	beq	3ee00 <cmetrohash64_2@@Base+0xaf8>
   3ed80:	add	sl, sl, #1
   3ed84:	b	3eda0 <cmetrohash64_2@@Base+0xa98>
   3ed88:	and	r3, sl, r6
   3ed8c:	add	sl, sl, #1
   3ed90:	ldr	fp, [r5, r3, lsl #2]
   3ed94:	add	r4, r5, r3, lsl #2
   3ed98:	cmp	fp, #0
   3ed9c:	beq	3ee00 <cmetrohash64_2@@Base+0xaf8>
   3eda0:	cmp	fp, #2
   3eda4:	beq	3ed88 <cmetrohash64_2@@Base+0xa80>
   3eda8:	ldr	r3, [fp, #12]
   3edac:	cmp	r7, r3
   3edb0:	bne	3ed88 <cmetrohash64_2@@Base+0xa80>
   3edb4:	mov	r2, r7
   3edb8:	mov	r0, r9
   3edbc:	ldr	r1, [fp, #8]
   3edc0:	bl	13fc8 <memcmp@plt>
   3edc4:	cmp	r0, #0
   3edc8:	bne	3ed88 <cmetrohash64_2@@Base+0xa80>
   3edcc:	ldr	r3, [r8, #8]
   3edd0:	mov	r2, #2
   3edd4:	str	r2, [r4]
   3edd8:	sub	r3, r3, #1
   3eddc:	str	r3, [r8, #8]
   3ede0:	mov	r0, fp
   3ede4:	add	sp, sp, #20
   3ede8:	ldrd	r4, [sp]
   3edec:	ldrd	r6, [sp, #8]
   3edf0:	ldrd	r8, [sp, #16]
   3edf4:	ldrd	sl, [sp, #24]
   3edf8:	add	sp, sp, #32
   3edfc:	pop	{pc}		; (ldr pc, [sp], #4)
   3ee00:	mov	fp, #0
   3ee04:	b	3ede0 <cmetrohash64_2@@Base+0xad8>
   3ee08:	strd	r4, [sp, #-28]!	; 0xffffffe4
   3ee0c:	strd	r6, [sp, #8]
   3ee10:	subs	r7, r0, #0
   3ee14:	strd	r8, [sp, #16]
   3ee18:	str	lr, [sp, #24]
   3ee1c:	sub	sp, sp, #20
   3ee20:	beq	3eed0 <cmetrohash64_2@@Base+0xbc8>
   3ee24:	mov	r6, r3
   3ee28:	movw	r3, #15186	; 0x3b52
   3ee2c:	movt	r3, #12137	; 0x2f69
   3ee30:	ldr	r8, [r1]
   3ee34:	add	r1, sp, #8
   3ee38:	mov	r9, r2
   3ee3c:	mov	r2, r6
   3ee40:	mov	r0, r9
   3ee44:	str	r3, [sp]
   3ee48:	mov	r3, #0
   3ee4c:	str	r1, [sp, #4]
   3ee50:	bl	3dcd4 <cmetrohash64_1@@Base>
   3ee54:	ldr	r5, [sp, #8]
   3ee58:	sub	r8, r8, #1
   3ee5c:	and	r3, r8, r5
   3ee60:	ldr	r4, [r7, r3, lsl #2]
   3ee64:	cmp	r4, #0
   3ee68:	beq	3eed0 <cmetrohash64_2@@Base+0xbc8>
   3ee6c:	add	r5, r5, #1
   3ee70:	b	3ee88 <cmetrohash64_2@@Base+0xb80>
   3ee74:	and	r1, r8, r5
   3ee78:	add	r5, r5, #1
   3ee7c:	ldr	r4, [r7, r1, lsl #2]
   3ee80:	cmp	r4, #0
   3ee84:	beq	3eed0 <cmetrohash64_2@@Base+0xbc8>
   3ee88:	cmp	r4, #2
   3ee8c:	beq	3ee74 <cmetrohash64_2@@Base+0xb6c>
   3ee90:	ldr	r3, [r4, #12]
   3ee94:	cmp	r6, r3
   3ee98:	bne	3ee74 <cmetrohash64_2@@Base+0xb6c>
   3ee9c:	mov	r2, r6
   3eea0:	mov	r0, r9
   3eea4:	ldr	r1, [r4, #8]
   3eea8:	bl	13fc8 <memcmp@plt>
   3eeac:	cmp	r0, #0
   3eeb0:	bne	3ee74 <cmetrohash64_2@@Base+0xb6c>
   3eeb4:	mov	r0, r4
   3eeb8:	add	sp, sp, #20
   3eebc:	ldrd	r4, [sp]
   3eec0:	ldrd	r6, [sp, #8]
   3eec4:	ldrd	r8, [sp, #16]
   3eec8:	add	sp, sp, #24
   3eecc:	pop	{pc}		; (ldr pc, [sp], #4)
   3eed0:	mov	r4, #0
   3eed4:	b	3eeb4 <cmetrohash64_2@@Base+0xbac>

0003eed8 <fb_name_table_clear@@Base>:
   3eed8:	b	3e928 <cmetrohash64_2@@Base+0x620>

0003eedc <fb_name_table_destroy@@Base>:
   3eedc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   3eee0:	strd	r6, [sp, #8]
   3eee4:	mov	r7, r0
   3eee8:	str	r8, [sp, #16]
   3eeec:	subs	r8, r1, #0
   3eef0:	str	lr, [sp, #20]
   3eef4:	beq	3ef40 <fb_name_table_destroy@@Base+0x64>
   3eef8:	ldr	r5, [r0]
   3eefc:	ldr	ip, [r0, #12]
   3ef00:	cmp	ip, #0
   3ef04:	beq	3ef40 <fb_name_table_destroy@@Base+0x64>
   3ef08:	mov	r6, r2
   3ef0c:	sub	r5, r5, #4
   3ef10:	mov	r4, #0
   3ef14:	ldr	r3, [r5, #4]!
   3ef18:	mov	r0, r6
   3ef1c:	add	r4, r4, #1
   3ef20:	cmp	r3, #0
   3ef24:	cmpne	r3, #2
   3ef28:	mov	r1, r3
   3ef2c:	beq	3ef38 <fb_name_table_destroy@@Base+0x5c>
   3ef30:	blx	r8
   3ef34:	ldr	ip, [r7, #12]
   3ef38:	cmp	r4, ip
   3ef3c:	bcc	3ef14 <fb_name_table_destroy@@Base+0x38>
   3ef40:	mov	r0, r7
   3ef44:	ldrd	r4, [sp]
   3ef48:	ldrd	r6, [sp, #8]
   3ef4c:	ldr	r8, [sp, #16]
   3ef50:	ldr	lr, [sp, #20]
   3ef54:	add	sp, sp, #24
   3ef58:	b	3e928 <cmetrohash64_2@@Base+0x620>

0003ef5c <fb_name_table_init@@Base>:
   3ef5c:	cmp	r1, #2
   3ef60:	strd	r4, [sp, #-16]!
   3ef64:	mov	r4, r0
   3ef68:	str	r6, [sp, #8]
   3ef6c:	str	lr, [sp, #12]
   3ef70:	bls	3efcc <fb_name_table_init@@Base+0x70>
   3ef74:	mov	r3, #4
   3ef78:	movw	r0, #358	; 0x166
   3ef7c:	mul	r2, r0, r3
   3ef80:	lsl	r5, r3, #1
   3ef84:	cmp	r1, r2, lsr #8
   3ef88:	mov	r3, r5
   3ef8c:	bhi	3ef7c <fb_name_table_init@@Base+0x20>
   3ef90:	mov	r1, #4
   3ef94:	mov	r0, r5
   3ef98:	bl	13f74 <calloc@plt>
   3ef9c:	cmp	r0, #0
   3efa0:	str	r0, [r4]
   3efa4:	beq	3efd4 <fb_name_table_init@@Base+0x78>
   3efa8:	mov	r3, #0
   3efac:	mov	r0, r3
   3efb0:	str	r3, [r4, #4]
   3efb4:	str	r3, [r4, #8]
   3efb8:	str	r5, [r4, #12]
   3efbc:	ldrd	r4, [sp]
   3efc0:	ldr	r6, [sp, #8]
   3efc4:	add	sp, sp, #12
   3efc8:	pop	{pc}		; (ldr pc, [sp], #4)
   3efcc:	mov	r5, #4
   3efd0:	b	3ef90 <fb_name_table_init@@Base+0x34>
   3efd4:	mvn	r0, #0
   3efd8:	b	3efbc <fb_name_table_init@@Base+0x60>

0003efdc <fb_name_table_resize@@Base>:
   3efdc:	b	3ebf0 <cmetrohash64_2@@Base+0x8e8>

0003efe0 <fb_name_table_insert@@Base>:
   3efe0:	b	3e964 <cmetrohash64_2@@Base+0x65c>

0003efe4 <fb_name_table_insert_item@@Base>:
   3efe4:	push	{lr}		; (str lr, [sp, #-4]!)
   3efe8:	sub	sp, sp, #12
   3efec:	mov	ip, r1
   3eff0:	mov	r3, r1
   3eff4:	str	r2, [sp]
   3eff8:	ldr	r1, [r1, #8]
   3effc:	ldr	r2, [ip, #12]
   3f000:	bl	3e964 <cmetrohash64_2@@Base+0x65c>
   3f004:	add	sp, sp, #12
   3f008:	pop	{pc}		; (ldr pc, [sp], #4)

0003f00c <fb_name_table_find@@Base>:
   3f00c:	mov	ip, r0
   3f010:	mov	r3, r2
   3f014:	ldr	r0, [ip], #12
   3f018:	mov	r2, r1
   3f01c:	mov	r1, ip
   3f020:	b	3ee08 <cmetrohash64_2@@Base+0xb00>

0003f024 <fb_name_table_find_item@@Base>:
   3f024:	ldr	ip, [r0], #12
   3f028:	ldrd	r2, [r1, #8]
   3f02c:	mov	r1, r0
   3f030:	mov	r0, ip
   3f034:	b	3ee08 <cmetrohash64_2@@Base+0xb00>

0003f038 <fb_name_table_remove@@Base>:
   3f038:	b	3ed10 <cmetrohash64_2@@Base+0xa08>

0003f03c <fb_name_table_remove_item@@Base>:
   3f03c:	mov	r3, r1
   3f040:	ldr	r1, [r1, #8]
   3f044:	ldr	r2, [r3, #12]
   3f048:	b	3ed10 <cmetrohash64_2@@Base+0xa08>

0003f04c <fb_name_table_visit@@Base>:
   3f04c:	ldr	ip, [r0, #12]
   3f050:	strd	r4, [sp, #-24]!	; 0xffffffe8
   3f054:	ldr	r5, [r0]
   3f058:	strd	r6, [sp, #8]
   3f05c:	str	r8, [sp, #16]
   3f060:	cmp	ip, #0
   3f064:	str	lr, [sp, #20]
   3f068:	beq	3f0ac <fb_name_table_visit@@Base+0x60>
   3f06c:	mov	r6, r2
   3f070:	mov	r8, r1
   3f074:	mov	r7, r0
   3f078:	sub	r5, r5, #4
   3f07c:	mov	r4, #0
   3f080:	ldr	r3, [r5, #4]!
   3f084:	mov	r0, r6
   3f088:	add	r4, r4, #1
   3f08c:	cmp	r3, #0
   3f090:	cmpne	r3, #2
   3f094:	mov	r1, r3
   3f098:	beq	3f0a4 <fb_name_table_visit@@Base+0x58>
   3f09c:	blx	r8
   3f0a0:	ldr	ip, [r7, #12]
   3f0a4:	cmp	r4, ip
   3f0a8:	bcc	3f080 <fb_name_table_visit@@Base+0x34>
   3f0ac:	ldrd	r4, [sp]
   3f0b0:	ldrd	r6, [sp, #8]
   3f0b4:	ldr	r8, [sp, #16]
   3f0b8:	add	sp, sp, #20
   3f0bc:	pop	{pc}		; (ldr pc, [sp], #4)
   3f0c0:	str	r4, [sp, #-8]!
   3f0c4:	mov	r4, r0
   3f0c8:	ldr	r0, [r0]
   3f0cc:	str	lr, [sp, #4]
   3f0d0:	cmp	r0, #0
   3f0d4:	beq	3f0dc <fb_name_table_visit@@Base+0x90>
   3f0d8:	bl	13fa4 <free@plt>
   3f0dc:	mov	r3, #0
   3f0e0:	str	r3, [r4]
   3f0e4:	str	r3, [r4, #4]
   3f0e8:	str	r3, [r4, #8]
   3f0ec:	str	r3, [r4, #12]
   3f0f0:	ldr	r4, [sp]
   3f0f4:	add	sp, sp, #4
   3f0f8:	pop	{pc}		; (ldr pc, [sp], #4)
   3f0fc:	ldrh	r3, [r0, #8]
   3f100:	cmp	r3, #5
   3f104:	beq	3f120 <fb_name_table_visit@@Base+0xd4>
   3f108:	cmp	r3, #6
   3f10c:	beq	3f14c <fb_name_table_visit@@Base+0x100>
   3f110:	cmp	r3, #4
   3f114:	beq	3f140 <fb_name_table_visit@@Base+0xf4>
   3f118:	mov	r0, #0
   3f11c:	bx	lr
   3f120:	ldr	r2, [r0]
   3f124:	movw	r3, #15191	; 0x3b57
   3f128:	movt	r3, #12137	; 0x2f69
   3f12c:	movw	r0, #31153	; 0x79b1
   3f130:	movt	r0, #40503	; 0x9e37
   3f134:	eor	r3, r3, r2
   3f138:	mul	r0, r0, r3
   3f13c:	bx	lr
   3f140:	movw	r3, #15190	; 0x3b56
   3f144:	ldr	r2, [r0]
   3f148:	b	3f128 <fb_name_table_visit@@Base+0xdc>
   3f14c:	ldrb	r2, [r0]
   3f150:	movw	r3, #15188	; 0x3b54
   3f154:	b	3f128 <fb_name_table_visit@@Base+0xdc>
   3f158:	strd	r4, [sp, #-36]!	; 0xffffffdc
   3f15c:	strd	r6, [sp, #8]
   3f160:	ldr	r6, [pc, #580]	; 3f3ac <fb_name_table_visit@@Base+0x360>
   3f164:	strd	r8, [sp, #16]
   3f168:	strd	sl, [sp, #24]
   3f16c:	subs	sl, r2, #0
   3f170:	str	lr, [sp, #32]
   3f174:	sub	sp, sp, #4
   3f178:	add	r6, pc, r6
   3f17c:	beq	3f38c <fb_name_table_visit@@Base+0x340>
   3f180:	cmp	sl, #2
   3f184:	beq	3f36c <fb_name_table_visit@@Base+0x320>
   3f188:	cmp	sl, #1
   3f18c:	beq	3f34c <fb_name_table_visit@@Base+0x300>
   3f190:	ldr	r5, [r0, #12]
   3f194:	mov	r4, r1
   3f198:	mov	fp, r3
   3f19c:	mov	r3, #179	; 0xb3
   3f1a0:	mov	r9, r0
   3f1a4:	ldr	r1, [r0, #8]
   3f1a8:	mul	r3, r3, r5
   3f1ac:	cmp	r1, r3, lsr #8
   3f1b0:	bcs	3f2c8 <fb_name_table_visit@@Base+0x27c>
   3f1b4:	ldr	r1, [r9]
   3f1b8:	mov	r0, r4
   3f1bc:	sub	r5, r5, #1
   3f1c0:	bl	3f0fc <fb_name_table_visit@@Base+0xb0>
   3f1c4:	sub	r3, fp, #2
   3f1c8:	and	r2, r5, r0
   3f1cc:	cmp	r3, #1
   3f1d0:	add	ip, r1, r2, lsl #2
   3f1d4:	ldr	lr, [r1, r2, lsl #2]
   3f1d8:	bls	3f2e0 <fb_name_table_visit@@Base+0x294>
   3f1dc:	cmp	lr, #0
   3f1e0:	moveq	r8, ip
   3f1e4:	beq	3f294 <fb_name_table_visit@@Base+0x248>
   3f1e8:	add	r0, r0, #1
   3f1ec:	mov	r8, #0
   3f1f0:	b	3f234 <fb_name_table_visit@@Base+0x1e8>
   3f1f4:	ldrh	r2, [r4, #8]
   3f1f8:	ldrh	r3, [lr, #8]
   3f1fc:	cmp	r3, r2
   3f200:	bne	3f21c <fb_name_table_visit@@Base+0x1d0>
   3f204:	cmp	r3, #5
   3f208:	beq	3f248 <fb_name_table_visit@@Base+0x1fc>
   3f20c:	cmp	r3, #6
   3f210:	beq	3f274 <fb_name_table_visit@@Base+0x228>
   3f214:	cmp	r3, #4
   3f218:	beq	3f248 <fb_name_table_visit@@Base+0x1fc>
   3f21c:	and	ip, r5, r0
   3f220:	add	r0, r0, #1
   3f224:	ldr	lr, [r1, ip, lsl #2]
   3f228:	add	ip, r1, ip, lsl #2
   3f22c:	cmp	lr, #0
   3f230:	beq	3f28c <fb_name_table_visit@@Base+0x240>
   3f234:	cmp	lr, #2
   3f238:	bne	3f1f4 <fb_name_table_visit@@Base+0x1a8>
   3f23c:	cmp	r8, #0
   3f240:	moveq	r8, ip
   3f244:	b	3f21c <fb_name_table_visit@@Base+0x1d0>
   3f248:	ldrd	r2, [lr]
   3f24c:	ldrd	r6, [r4]
   3f250:	cmp	r7, r3
   3f254:	cmpeq	r6, r2
   3f258:	moveq	r3, #1
   3f25c:	movne	r3, #0
   3f260:	cmp	r3, #0
   3f264:	beq	3f21c <fb_name_table_visit@@Base+0x1d0>
   3f268:	cmp	fp, #0
   3f26c:	streq	sl, [ip]
   3f270:	b	3f2a8 <fb_name_table_visit@@Base+0x25c>
   3f274:	ldrb	r3, [r4]
   3f278:	ldrb	r2, [lr]
   3f27c:	sub	r3, r3, r2
   3f280:	clz	r3, r3
   3f284:	lsr	r3, r3, #5
   3f288:	b	3f260 <fb_name_table_visit@@Base+0x214>
   3f28c:	cmp	r8, #0
   3f290:	moveq	r8, ip
   3f294:	ldr	r3, [r9, #8]
   3f298:	mov	lr, #0
   3f29c:	add	r3, r3, #1
   3f2a0:	str	r3, [r9, #8]
   3f2a4:	str	sl, [r8]
   3f2a8:	mov	r0, lr
   3f2ac:	add	sp, sp, #4
   3f2b0:	ldrd	r4, [sp]
   3f2b4:	ldrd	r6, [sp, #8]
   3f2b8:	ldrd	r8, [sp, #16]
   3f2bc:	ldrd	sl, [sp, #24]
   3f2c0:	add	sp, sp, #32
   3f2c4:	pop	{pc}		; (ldr pc, [sp], #4)
   3f2c8:	lsl	r1, r1, #1
   3f2cc:	bl	3f3e0 <fb_name_table_visit@@Base+0x394>
   3f2d0:	cmp	r0, #0
   3f2d4:	bne	3f324 <fb_name_table_visit@@Base+0x2d8>
   3f2d8:	ldr	r5, [r9, #12]
   3f2dc:	b	3f1b4 <fb_name_table_visit@@Base+0x168>
   3f2e0:	ldr	r3, [r9, #8]
   3f2e4:	cmp	lr, #0
   3f2e8:	cmpne	lr, #2
   3f2ec:	add	r3, r3, #1
   3f2f0:	str	r3, [r9, #8]
   3f2f4:	beq	3f318 <fb_name_table_visit@@Base+0x2cc>
   3f2f8:	add	r3, r0, #1
   3f2fc:	and	ip, r5, r3
   3f300:	add	r3, r3, #1
   3f304:	ldr	r2, [r1, ip, lsl #2]
   3f308:	add	ip, r1, ip, lsl #2
   3f30c:	cmp	r2, #0
   3f310:	cmpne	r2, #2
   3f314:	bne	3f2fc <fb_name_table_visit@@Base+0x2b0>
   3f318:	mov	lr, #0
   3f31c:	str	sl, [ip]
   3f320:	b	3f2a8 <fb_name_table_visit@@Base+0x25c>
   3f324:	ldr	r3, [pc, #132]	; 3f3b0 <fb_name_table_visit@@Base+0x364>
   3f328:	ldr	r2, [pc, #132]	; 3f3b4 <fb_name_table_visit@@Base+0x368>
   3f32c:	ldr	r1, [pc, #132]	; 3f3b8 <fb_name_table_visit@@Base+0x36c>
   3f330:	ldr	r3, [r6, r3]
   3f334:	add	r2, pc, r2
   3f338:	add	r1, pc, r1
   3f33c:	ldr	r0, [r3]
   3f340:	bl	14064 <fprintf@plt>
   3f344:	mov	r0, #1
   3f348:	bl	14040 <exit@plt>
   3f34c:	ldr	r3, [pc, #104]	; 3f3bc <fb_name_table_visit@@Base+0x370>
   3f350:	mov	r2, #116	; 0x74
   3f354:	ldr	r1, [pc, #100]	; 3f3c0 <fb_name_table_visit@@Base+0x374>
   3f358:	ldr	r0, [pc, #100]	; 3f3c4 <fb_name_table_visit@@Base+0x378>
   3f35c:	add	r3, pc, r3
   3f360:	add	r1, pc, r1
   3f364:	add	r0, pc, r0
   3f368:	bl	14118 <__assert_fail@plt>
   3f36c:	ldr	r3, [pc, #84]	; 3f3c8 <fb_name_table_visit@@Base+0x37c>
   3f370:	mov	r2, #115	; 0x73
   3f374:	ldr	r1, [pc, #80]	; 3f3cc <fb_name_table_visit@@Base+0x380>
   3f378:	ldr	r0, [pc, #80]	; 3f3d0 <fb_name_table_visit@@Base+0x384>
   3f37c:	add	r3, pc, r3
   3f380:	add	r1, pc, r1
   3f384:	add	r0, pc, r0
   3f388:	bl	14118 <__assert_fail@plt>
   3f38c:	ldr	r3, [pc, #64]	; 3f3d4 <fb_name_table_visit@@Base+0x388>
   3f390:	mov	r2, #114	; 0x72
   3f394:	ldr	r1, [pc, #60]	; 3f3d8 <fb_name_table_visit@@Base+0x38c>
   3f398:	ldr	r0, [pc, #60]	; 3f3dc <fb_name_table_visit@@Base+0x390>
   3f39c:	add	r3, pc, r3
   3f3a0:	add	r1, pc, r1
   3f3a4:	add	r0, pc, r0
   3f3a8:	bl	14118 <__assert_fail@plt>
   3f3ac:	andeq	sp, r2, r0, lsl #29
   3f3b0:	andeq	r0, r0, r0, lsr #1
   3f3b4:	strdeq	r9, [r1], -r4
   3f3b8:	andeq	r9, r1, r4, lsr #12
   3f3bc:	andeq	ip, r1, r4, lsl #23
   3f3c0:	andeq	r9, r1, r8, lsl r5
   3f3c4:	andeq	r9, r1, ip, lsr #11
   3f3c8:	andeq	ip, r1, r4, ror #22
   3f3cc:	strdeq	r9, [r1], -r8
   3f3d0:	andeq	r9, r1, r4, ror r5
   3f3d4:	andeq	ip, r1, r4, asr #22
   3f3d8:	ldrdeq	r9, [r1], -r8
   3f3dc:	andeq	r9, r1, ip, lsr r5
   3f3e0:	ldr	r3, [r0, #8]
   3f3e4:	strd	r4, [sp, #-20]!	; 0xffffffec
   3f3e8:	ldr	r5, [r0]
   3f3ec:	strd	r6, [sp, #8]
   3f3f0:	mov	r7, r0
   3f3f4:	str	lr, [sp, #16]
   3f3f8:	sub	sp, sp, #20
   3f3fc:	cmp	r1, r3
   3f400:	movcc	r1, r3
   3f404:	cmp	r1, #2
   3f408:	bls	3f4e0 <fb_name_table_visit@@Base+0x494>
   3f40c:	mov	r3, #4
   3f410:	movw	r0, #358	; 0x166
   3f414:	mul	r2, r0, r3
   3f418:	lsl	r6, r3, #1
   3f41c:	cmp	r1, r2, lsr #8
   3f420:	mov	r3, r6
   3f424:	bhi	3f414 <fb_name_table_visit@@Base+0x3c8>
   3f428:	mov	r1, #4
   3f42c:	mov	r0, r6
   3f430:	bl	13f74 <calloc@plt>
   3f434:	cmp	r0, #0
   3f438:	str	r0, [sp]
   3f43c:	beq	3f4e8 <fb_name_table_visit@@Base+0x49c>
   3f440:	ldr	r3, [r7, #12]
   3f444:	mov	r4, #0
   3f448:	str	r4, [sp, #4]
   3f44c:	str	r4, [sp, #8]
   3f450:	str	r6, [sp, #12]
   3f454:	cmp	r3, r4
   3f458:	moveq	r6, sp
   3f45c:	beq	3f4a4 <fb_name_table_visit@@Base+0x458>
   3f460:	sub	r5, r5, #4
   3f464:	mov	r6, sp
   3f468:	b	3f474 <fb_name_table_visit@@Base+0x428>
   3f46c:	cmp	r3, r4
   3f470:	bls	3f4a4 <fb_name_table_visit@@Base+0x458>
   3f474:	ldr	r2, [r5, #4]!
   3f478:	add	r4, r4, #1
   3f47c:	cmp	r2, #0
   3f480:	cmpne	r2, #2
   3f484:	beq	3f46c <fb_name_table_visit@@Base+0x420>
   3f488:	mov	r3, #3
   3f48c:	mov	r1, r2
   3f490:	mov	r0, r6
   3f494:	bl	3f158 <fb_name_table_visit@@Base+0x10c>
   3f498:	ldr	r3, [r7, #12]
   3f49c:	cmp	r3, r4
   3f4a0:	bhi	3f474 <fb_name_table_visit@@Base+0x428>
   3f4a4:	mov	r0, r7
   3f4a8:	bl	3f0c0 <fb_name_table_visit@@Base+0x74>
   3f4ac:	ldr	r3, [sp]
   3f4b0:	mov	r0, #0
   3f4b4:	ldmib	r6, {r1, r2}
   3f4b8:	str	r3, [r7]
   3f4bc:	ldr	r3, [r6, #12]
   3f4c0:	str	r1, [r7, #4]
   3f4c4:	str	r2, [r7, #8]
   3f4c8:	str	r3, [r7, #12]
   3f4cc:	add	sp, sp, #20
   3f4d0:	ldrd	r4, [sp]
   3f4d4:	ldrd	r6, [sp, #8]
   3f4d8:	add	sp, sp, #16
   3f4dc:	pop	{pc}		; (ldr pc, [sp], #4)
   3f4e0:	mov	r6, #4
   3f4e4:	b	3f428 <fb_name_table_visit@@Base+0x3dc>
   3f4e8:	mvn	r0, #0
   3f4ec:	b	3f4cc <fb_name_table_visit@@Base+0x480>
   3f4f0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   3f4f4:	subs	r4, r0, #0
   3f4f8:	strd	r6, [sp, #8]
   3f4fc:	strd	r8, [sp, #16]
   3f500:	str	sl, [sp, #24]
   3f504:	str	lr, [sp, #28]
   3f508:	beq	3f5d0 <fb_name_table_visit@@Base+0x584>
   3f50c:	ldr	r1, [r1]
   3f510:	mov	r0, r2
   3f514:	mov	r5, r2
   3f518:	sub	r1, r1, #1
   3f51c:	bl	3f0fc <fb_name_table_visit@@Base+0xb0>
   3f520:	and	r3, r1, r0
   3f524:	mov	r2, r0
   3f528:	ldr	r0, [r4, r3, lsl #2]
   3f52c:	cmp	r0, #0
   3f530:	beq	3f59c <fb_name_table_visit@@Base+0x550>
   3f534:	add	r2, r2, #1
   3f538:	b	3f558 <fb_name_table_visit@@Base+0x50c>
   3f53c:	cmp	r3, #4
   3f540:	beq	3f5b4 <fb_name_table_visit@@Base+0x568>
   3f544:	and	r3, r1, r2
   3f548:	add	r2, r2, #1
   3f54c:	ldr	r0, [r4, r3, lsl #2]
   3f550:	cmp	r0, #0
   3f554:	beq	3f59c <fb_name_table_visit@@Base+0x550>
   3f558:	cmp	r0, #2
   3f55c:	beq	3f544 <fb_name_table_visit@@Base+0x4f8>
   3f560:	ldrh	ip, [r5, #8]
   3f564:	ldrh	r3, [r0, #8]
   3f568:	cmp	r3, ip
   3f56c:	bne	3f544 <fb_name_table_visit@@Base+0x4f8>
   3f570:	cmp	r3, #5
   3f574:	beq	3f5b4 <fb_name_table_visit@@Base+0x568>
   3f578:	cmp	r3, #6
   3f57c:	bne	3f53c <fb_name_table_visit@@Base+0x4f0>
   3f580:	ldrb	r3, [r5]
   3f584:	ldrb	ip, [r0]
   3f588:	sub	r3, r3, ip
   3f58c:	clz	r3, r3
   3f590:	lsr	r3, r3, #5
   3f594:	cmp	r3, #0
   3f598:	beq	3f544 <fb_name_table_visit@@Base+0x4f8>
   3f59c:	ldrd	r4, [sp]
   3f5a0:	ldrd	r6, [sp, #8]
   3f5a4:	ldrd	r8, [sp, #16]
   3f5a8:	ldr	sl, [sp, #24]
   3f5ac:	add	sp, sp, #28
   3f5b0:	pop	{pc}		; (ldr pc, [sp], #4)
   3f5b4:	ldrd	r6, [r0]
   3f5b8:	ldrd	r8, [r5]
   3f5bc:	cmp	r9, r7
   3f5c0:	cmpeq	r8, r6
   3f5c4:	moveq	r3, #1
   3f5c8:	movne	r3, #0
   3f5cc:	b	3f594 <fb_name_table_visit@@Base+0x548>
   3f5d0:	mov	r0, r4
   3f5d4:	b	3f59c <fb_name_table_visit@@Base+0x550>
   3f5d8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   3f5dc:	ldr	r4, [r0]
   3f5e0:	strd	r6, [sp, #8]
   3f5e4:	str	r8, [sp, #16]
   3f5e8:	str	lr, [sp, #20]
   3f5ec:	cmp	r4, #0
   3f5f0:	beq	3f6d0 <fb_name_table_visit@@Base+0x684>
   3f5f4:	mov	r8, r0
   3f5f8:	mov	r0, r1
   3f5fc:	bl	3f0fc <fb_name_table_visit@@Base+0xb0>
   3f600:	ldr	r5, [r8, #12]
   3f604:	mov	lr, r0
   3f608:	sub	r5, r5, #1
   3f60c:	and	ip, r5, r0
   3f610:	ldr	r0, [r4, ip, lsl #2]
   3f614:	add	ip, r4, ip, lsl #2
   3f618:	cmp	r0, #0
   3f61c:	beq	3f6a0 <fb_name_table_visit@@Base+0x654>
   3f620:	add	lr, lr, #1
   3f624:	b	3f648 <fb_name_table_visit@@Base+0x5fc>
   3f628:	cmp	r3, #4
   3f62c:	beq	3f6b4 <fb_name_table_visit@@Base+0x668>
   3f630:	and	ip, r5, lr
   3f634:	add	lr, lr, #1
   3f638:	ldr	r0, [r4, ip, lsl #2]
   3f63c:	add	ip, r4, ip, lsl #2
   3f640:	cmp	r0, #0
   3f644:	beq	3f6a0 <fb_name_table_visit@@Base+0x654>
   3f648:	cmp	r0, #2
   3f64c:	beq	3f630 <fb_name_table_visit@@Base+0x5e4>
   3f650:	ldrh	r2, [r1, #8]
   3f654:	ldrh	r3, [r0, #8]
   3f658:	cmp	r3, r2
   3f65c:	bne	3f630 <fb_name_table_visit@@Base+0x5e4>
   3f660:	cmp	r3, #5
   3f664:	beq	3f6b4 <fb_name_table_visit@@Base+0x668>
   3f668:	cmp	r3, #6
   3f66c:	bne	3f628 <fb_name_table_visit@@Base+0x5dc>
   3f670:	ldrb	r3, [r1]
   3f674:	ldrb	r2, [r0]
   3f678:	sub	r3, r3, r2
   3f67c:	clz	r3, r3
   3f680:	lsr	r3, r3, #5
   3f684:	cmp	r3, #0
   3f688:	beq	3f630 <fb_name_table_visit@@Base+0x5e4>
   3f68c:	ldr	r3, [r8, #8]
   3f690:	mov	r2, #2
   3f694:	str	r2, [ip]
   3f698:	sub	r3, r3, #1
   3f69c:	str	r3, [r8, #8]
   3f6a0:	ldrd	r4, [sp]
   3f6a4:	ldrd	r6, [sp, #8]
   3f6a8:	ldr	r8, [sp, #16]
   3f6ac:	add	sp, sp, #20
   3f6b0:	pop	{pc}		; (ldr pc, [sp], #4)
   3f6b4:	ldrd	r2, [r0]
   3f6b8:	ldrd	r6, [r1]
   3f6bc:	cmp	r7, r3
   3f6c0:	cmpeq	r6, r2
   3f6c4:	moveq	r3, #1
   3f6c8:	movne	r3, #0
   3f6cc:	b	3f684 <fb_name_table_visit@@Base+0x638>
   3f6d0:	mov	r0, r4
   3f6d4:	b	3f6a0 <fb_name_table_visit@@Base+0x654>

0003f6d8 <fb_value_set_clear@@Base>:
   3f6d8:	b	3f0c0 <fb_name_table_visit@@Base+0x74>

0003f6dc <fb_value_set_destroy@@Base>:
   3f6dc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   3f6e0:	strd	r6, [sp, #8]
   3f6e4:	mov	r7, r0
   3f6e8:	str	r8, [sp, #16]
   3f6ec:	subs	r8, r1, #0
   3f6f0:	str	lr, [sp, #20]
   3f6f4:	beq	3f740 <fb_value_set_destroy@@Base+0x64>
   3f6f8:	ldr	r5, [r0]
   3f6fc:	ldr	ip, [r0, #12]
   3f700:	cmp	ip, #0
   3f704:	beq	3f740 <fb_value_set_destroy@@Base+0x64>
   3f708:	mov	r6, r2
   3f70c:	sub	r5, r5, #4
   3f710:	mov	r4, #0
   3f714:	ldr	r3, [r5, #4]!
   3f718:	mov	r0, r6
   3f71c:	add	r4, r4, #1
   3f720:	cmp	r3, #0
   3f724:	cmpne	r3, #2
   3f728:	mov	r1, r3
   3f72c:	beq	3f738 <fb_value_set_destroy@@Base+0x5c>
   3f730:	blx	r8
   3f734:	ldr	ip, [r7, #12]
   3f738:	cmp	r4, ip
   3f73c:	bcc	3f714 <fb_value_set_destroy@@Base+0x38>
   3f740:	mov	r0, r7
   3f744:	ldrd	r4, [sp]
   3f748:	ldrd	r6, [sp, #8]
   3f74c:	ldr	r8, [sp, #16]
   3f750:	ldr	lr, [sp, #20]
   3f754:	add	sp, sp, #24
   3f758:	b	3f0c0 <fb_name_table_visit@@Base+0x74>

0003f75c <fb_value_set_init@@Base>:
   3f75c:	cmp	r1, #2
   3f760:	strd	r4, [sp, #-16]!
   3f764:	mov	r4, r0
   3f768:	str	r6, [sp, #8]
   3f76c:	str	lr, [sp, #12]
   3f770:	bls	3f7cc <fb_value_set_init@@Base+0x70>
   3f774:	mov	r3, #4
   3f778:	movw	r0, #358	; 0x166
   3f77c:	mul	r2, r0, r3
   3f780:	lsl	r5, r3, #1
   3f784:	cmp	r1, r2, lsr #8
   3f788:	mov	r3, r5
   3f78c:	bhi	3f77c <fb_value_set_init@@Base+0x20>
   3f790:	mov	r1, #4
   3f794:	mov	r0, r5
   3f798:	bl	13f74 <calloc@plt>
   3f79c:	cmp	r0, #0
   3f7a0:	str	r0, [r4]
   3f7a4:	beq	3f7d4 <fb_value_set_init@@Base+0x78>
   3f7a8:	mov	r3, #0
   3f7ac:	mov	r0, r3
   3f7b0:	str	r3, [r4, #4]
   3f7b4:	str	r3, [r4, #8]
   3f7b8:	str	r5, [r4, #12]
   3f7bc:	ldrd	r4, [sp]
   3f7c0:	ldr	r6, [sp, #8]
   3f7c4:	add	sp, sp, #12
   3f7c8:	pop	{pc}		; (ldr pc, [sp], #4)
   3f7cc:	mov	r5, #4
   3f7d0:	b	3f790 <fb_value_set_init@@Base+0x34>
   3f7d4:	mvn	r0, #0
   3f7d8:	b	3f7bc <fb_value_set_init@@Base+0x60>

0003f7dc <fb_value_set_resize@@Base>:
   3f7dc:	b	3f3e0 <fb_name_table_visit@@Base+0x394>

0003f7e0 <fb_value_set_insert@@Base>:
   3f7e0:	mov	r2, r3
   3f7e4:	ldr	r3, [sp]
   3f7e8:	b	3f158 <fb_name_table_visit@@Base+0x10c>

0003f7ec <fb_value_set_insert_item@@Base>:
   3f7ec:	mov	r3, r2
   3f7f0:	mov	r2, r1
   3f7f4:	b	3f158 <fb_name_table_visit@@Base+0x10c>

0003f7f8 <fb_value_set_find@@Base>:
   3f7f8:	mov	r3, r0
   3f7fc:	mov	r2, r1
   3f800:	ldr	r0, [r3], #12
   3f804:	mov	r1, r3
   3f808:	b	3f4f0 <fb_name_table_visit@@Base+0x4a4>

0003f80c <fb_value_set_find_item@@Base>:
   3f80c:	mov	r3, r0
   3f810:	mov	r2, r1
   3f814:	ldr	r0, [r3], #12
   3f818:	mov	r1, r3
   3f81c:	b	3f4f0 <fb_name_table_visit@@Base+0x4a4>

0003f820 <fb_value_set_remove@@Base>:
   3f820:	b	3f5d8 <fb_name_table_visit@@Base+0x58c>

0003f824 <fb_value_set_remove_item@@Base>:
   3f824:	b	3f5d8 <fb_name_table_visit@@Base+0x58c>

0003f828 <fb_value_set_visit@@Base>:
   3f828:	ldr	ip, [r0, #12]
   3f82c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   3f830:	ldr	r5, [r0]
   3f834:	strd	r6, [sp, #8]
   3f838:	str	r8, [sp, #16]
   3f83c:	cmp	ip, #0
   3f840:	str	lr, [sp, #20]
   3f844:	beq	3f888 <fb_value_set_visit@@Base+0x60>
   3f848:	mov	r6, r2
   3f84c:	mov	r8, r1
   3f850:	mov	r7, r0
   3f854:	sub	r5, r5, #4
   3f858:	mov	r4, #0
   3f85c:	ldr	r3, [r5, #4]!
   3f860:	mov	r0, r6
   3f864:	add	r4, r4, #1
   3f868:	cmp	r3, #0
   3f86c:	cmpne	r3, #2
   3f870:	mov	r1, r3
   3f874:	beq	3f880 <fb_value_set_visit@@Base+0x58>
   3f878:	blx	r8
   3f87c:	ldr	ip, [r7, #12]
   3f880:	cmp	r4, ip
   3f884:	bcc	3f85c <fb_value_set_visit@@Base+0x34>
   3f888:	ldrd	r4, [sp]
   3f88c:	ldrd	r6, [sp, #8]
   3f890:	ldr	r8, [sp, #16]
   3f894:	add	sp, sp, #20
   3f898:	pop	{pc}		; (ldr pc, [sp], #4)
   3f89c:	eor	r1, r1, #-2147483648	; 0x80000000
   3f8a0:	b	3f8a8 <fb_value_set_visit@@Base+0x80>
   3f8a4:	eor	r3, r3, #-2147483648	; 0x80000000
   3f8a8:	push	{r4, r5, lr}
   3f8ac:	lsl	r4, r1, #1
   3f8b0:	lsl	r5, r3, #1
   3f8b4:	teq	r4, r5
   3f8b8:	teqeq	r0, r2
   3f8bc:	orrsne	ip, r4, r0
   3f8c0:	orrsne	ip, r5, r2
   3f8c4:	mvnsne	ip, r4, asr #21
   3f8c8:	mvnsne	ip, r5, asr #21
   3f8cc:	beq	3fab8 <fb_value_set_visit@@Base+0x290>
   3f8d0:	lsr	r4, r4, #21
   3f8d4:	rsbs	r5, r4, r5, lsr #21
   3f8d8:	rsblt	r5, r5, #0
   3f8dc:	ble	3f8fc <fb_value_set_visit@@Base+0xd4>
   3f8e0:	add	r4, r4, r5
   3f8e4:	eor	r2, r0, r2
   3f8e8:	eor	r3, r1, r3
   3f8ec:	eor	r0, r2, r0
   3f8f0:	eor	r1, r3, r1
   3f8f4:	eor	r2, r0, r2
   3f8f8:	eor	r3, r1, r3
   3f8fc:	cmp	r5, #54	; 0x36
   3f900:	pophi	{r4, r5, pc}
   3f904:	tst	r1, #-2147483648	; 0x80000000
   3f908:	lsl	r1, r1, #12
   3f90c:	mov	ip, #1048576	; 0x100000
   3f910:	orr	r1, ip, r1, lsr #12
   3f914:	beq	3f920 <fb_value_set_visit@@Base+0xf8>
   3f918:	rsbs	r0, r0, #0
   3f91c:	rsc	r1, r1, #0
   3f920:	tst	r3, #-2147483648	; 0x80000000
   3f924:	lsl	r3, r3, #12
   3f928:	orr	r3, ip, r3, lsr #12
   3f92c:	beq	3f938 <fb_value_set_visit@@Base+0x110>
   3f930:	rsbs	r2, r2, #0
   3f934:	rsc	r3, r3, #0
   3f938:	teq	r4, r5
   3f93c:	beq	3faa0 <fb_value_set_visit@@Base+0x278>
   3f940:	sub	r4, r4, #1
   3f944:	rsbs	lr, r5, #32
   3f948:	blt	3f964 <fb_value_set_visit@@Base+0x13c>
   3f94c:	lsl	ip, r2, lr
   3f950:	adds	r0, r0, r2, lsr r5
   3f954:	adc	r1, r1, #0
   3f958:	adds	r0, r0, r3, lsl lr
   3f95c:	adcs	r1, r1, r3, asr r5
   3f960:	b	3f980 <fb_value_set_visit@@Base+0x158>
   3f964:	sub	r5, r5, #32
   3f968:	add	lr, lr, #32
   3f96c:	cmp	r2, #1
   3f970:	lsl	ip, r3, lr
   3f974:	orrcs	ip, ip, #2
   3f978:	adds	r0, r0, r3, asr r5
   3f97c:	adcs	r1, r1, r3, asr #31
   3f980:	and	r5, r1, #-2147483648	; 0x80000000
   3f984:	bpl	3f994 <fb_value_set_visit@@Base+0x16c>
   3f988:	rsbs	ip, ip, #0
   3f98c:	rscs	r0, r0, #0
   3f990:	rsc	r1, r1, #0
   3f994:	cmp	r1, #1048576	; 0x100000
   3f998:	bcc	3f9d8 <fb_value_set_visit@@Base+0x1b0>
   3f99c:	cmp	r1, #2097152	; 0x200000
   3f9a0:	bcc	3f9c0 <fb_value_set_visit@@Base+0x198>
   3f9a4:	lsrs	r1, r1, #1
   3f9a8:	rrxs	r0, r0
   3f9ac:	rrx	ip, ip
   3f9b0:	add	r4, r4, #1
   3f9b4:	lsl	r2, r4, #21
   3f9b8:	cmn	r2, #4194304	; 0x400000
   3f9bc:	bcs	3fb18 <fb_value_set_visit@@Base+0x2f0>
   3f9c0:	cmp	ip, #-2147483648	; 0x80000000
   3f9c4:	lsrseq	ip, r0, #1
   3f9c8:	adcs	r0, r0, #0
   3f9cc:	adc	r1, r1, r4, lsl #20
   3f9d0:	orr	r1, r1, r5
   3f9d4:	pop	{r4, r5, pc}
   3f9d8:	lsls	ip, ip, #1
   3f9dc:	adcs	r0, r0, r0
   3f9e0:	adc	r1, r1, r1
   3f9e4:	tst	r1, #1048576	; 0x100000
   3f9e8:	sub	r4, r4, #1
   3f9ec:	bne	3f9c0 <fb_value_set_visit@@Base+0x198>
   3f9f0:	teq	r1, #0
   3f9f4:	moveq	r1, r0
   3f9f8:	moveq	r0, #0
   3f9fc:	clz	r3, r1
   3fa00:	addeq	r3, r3, #32
   3fa04:	sub	r3, r3, #11
   3fa08:	subs	r2, r3, #32
   3fa0c:	bge	3fa30 <fb_value_set_visit@@Base+0x208>
   3fa10:	adds	r2, r2, #12
   3fa14:	ble	3fa2c <fb_value_set_visit@@Base+0x204>
   3fa18:	add	ip, r2, #20
   3fa1c:	rsb	r2, r2, #12
   3fa20:	lsl	r0, r1, ip
   3fa24:	lsr	r1, r1, r2
   3fa28:	b	3fa40 <fb_value_set_visit@@Base+0x218>
   3fa2c:	add	r2, r2, #20
   3fa30:	rsble	ip, r2, #32
   3fa34:	lsl	r1, r1, r2
   3fa38:	orrle	r1, r1, r0, lsr ip
   3fa3c:	lslle	r0, r0, r2
   3fa40:	subs	r4, r4, r3
   3fa44:	addge	r1, r1, r4, lsl #20
   3fa48:	orrge	r1, r1, r5
   3fa4c:	popge	{r4, r5, pc}
   3fa50:	mvn	r4, r4
   3fa54:	subs	r4, r4, #31
   3fa58:	bge	3fa94 <fb_value_set_visit@@Base+0x26c>
   3fa5c:	adds	r4, r4, #12
   3fa60:	bgt	3fa7c <fb_value_set_visit@@Base+0x254>
   3fa64:	add	r4, r4, #20
   3fa68:	rsb	r2, r4, #32
   3fa6c:	lsr	r0, r0, r4
   3fa70:	orr	r0, r0, r1, lsl r2
   3fa74:	orr	r1, r5, r1, lsr r4
   3fa78:	pop	{r4, r5, pc}
   3fa7c:	rsb	r4, r4, #12
   3fa80:	rsb	r2, r4, #32
   3fa84:	lsr	r0, r0, r2
   3fa88:	orr	r0, r0, r1, lsl r4
   3fa8c:	mov	r1, r5
   3fa90:	pop	{r4, r5, pc}
   3fa94:	lsr	r0, r1, r4
   3fa98:	mov	r1, r5
   3fa9c:	pop	{r4, r5, pc}
   3faa0:	teq	r4, #0
   3faa4:	eor	r3, r3, #1048576	; 0x100000
   3faa8:	eoreq	r1, r1, #1048576	; 0x100000
   3faac:	addeq	r4, r4, #1
   3fab0:	subne	r5, r5, #1
   3fab4:	b	3f940 <fb_value_set_visit@@Base+0x118>
   3fab8:	mvns	ip, r4, asr #21
   3fabc:	mvnsne	ip, r5, asr #21
   3fac0:	beq	3fb28 <fb_value_set_visit@@Base+0x300>
   3fac4:	teq	r4, r5
   3fac8:	teqeq	r0, r2
   3facc:	beq	3fae0 <fb_value_set_visit@@Base+0x2b8>
   3fad0:	orrs	ip, r4, r0
   3fad4:	moveq	r1, r3
   3fad8:	moveq	r0, r2
   3fadc:	pop	{r4, r5, pc}
   3fae0:	teq	r1, r3
   3fae4:	movne	r1, #0
   3fae8:	movne	r0, #0
   3faec:	popne	{r4, r5, pc}
   3faf0:	lsrs	ip, r4, #21
   3faf4:	bne	3fb08 <fb_value_set_visit@@Base+0x2e0>
   3faf8:	lsls	r0, r0, #1
   3fafc:	adcs	r1, r1, r1
   3fb00:	orrcs	r1, r1, #-2147483648	; 0x80000000
   3fb04:	pop	{r4, r5, pc}
   3fb08:	adds	r4, r4, #4194304	; 0x400000
   3fb0c:	addcc	r1, r1, #1048576	; 0x100000
   3fb10:	popcc	{r4, r5, pc}
   3fb14:	and	r5, r1, #-2147483648	; 0x80000000
   3fb18:	orr	r1, r5, #2130706432	; 0x7f000000
   3fb1c:	orr	r1, r1, #15728640	; 0xf00000
   3fb20:	mov	r0, #0
   3fb24:	pop	{r4, r5, pc}
   3fb28:	mvns	ip, r4, asr #21
   3fb2c:	movne	r1, r3
   3fb30:	movne	r0, r2
   3fb34:	mvnseq	ip, r5, asr #21
   3fb38:	movne	r3, r1
   3fb3c:	movne	r2, r0
   3fb40:	orrs	r4, r0, r1, lsl #12
   3fb44:	orrseq	r5, r2, r3, lsl #12
   3fb48:	teqeq	r1, r3
   3fb4c:	orrne	r1, r1, #524288	; 0x80000
   3fb50:	pop	{r4, r5, pc}
   3fb54:	teq	r0, #0
   3fb58:	moveq	r1, #0
   3fb5c:	bxeq	lr
   3fb60:	push	{r4, r5, lr}
   3fb64:	mov	r4, #1024	; 0x400
   3fb68:	add	r4, r4, #50	; 0x32
   3fb6c:	mov	r5, #0
   3fb70:	mov	r1, #0
   3fb74:	b	3f9f0 <fb_value_set_visit@@Base+0x1c8>
   3fb78:	teq	r0, #0
   3fb7c:	moveq	r1, #0
   3fb80:	bxeq	lr
   3fb84:	push	{r4, r5, lr}
   3fb88:	mov	r4, #1024	; 0x400
   3fb8c:	add	r4, r4, #50	; 0x32
   3fb90:	ands	r5, r0, #-2147483648	; 0x80000000
   3fb94:	rsbmi	r0, r0, #0
   3fb98:	mov	r1, #0
   3fb9c:	b	3f9f0 <fb_value_set_visit@@Base+0x1c8>
   3fba0:	lsls	r2, r0, #1
   3fba4:	asr	r1, r2, #3
   3fba8:	rrx	r1, r1
   3fbac:	lsl	r0, r2, #28
   3fbb0:	andsne	r3, r2, #-16777216	; 0xff000000
   3fbb4:	teqne	r3, #-16777216	; 0xff000000
   3fbb8:	eorne	r1, r1, #939524096	; 0x38000000
   3fbbc:	bxne	lr
   3fbc0:	bics	r2, r2, #-16777216	; 0xff000000
   3fbc4:	bxeq	lr
   3fbc8:	teq	r3, #-16777216	; 0xff000000
   3fbcc:	orreq	r1, r1, #524288	; 0x80000
   3fbd0:	bxeq	lr
   3fbd4:	push	{r4, r5, lr}
   3fbd8:	mov	r4, #896	; 0x380
   3fbdc:	and	r5, r1, #-2147483648	; 0x80000000
   3fbe0:	bic	r1, r1, #-2147483648	; 0x80000000
   3fbe4:	b	3f9f0 <fb_value_set_visit@@Base+0x1c8>
   3fbe8:	orrs	r2, r0, r1
   3fbec:	bxeq	lr
   3fbf0:	push	{r4, r5, lr}
   3fbf4:	mov	r5, #0
   3fbf8:	b	3fc18 <fb_value_set_visit@@Base+0x3f0>
   3fbfc:	orrs	r2, r0, r1
   3fc00:	bxeq	lr
   3fc04:	push	{r4, r5, lr}
   3fc08:	ands	r5, r1, #-2147483648	; 0x80000000
   3fc0c:	bpl	3fc18 <fb_value_set_visit@@Base+0x3f0>
   3fc10:	rsbs	r0, r0, #0
   3fc14:	rsc	r1, r1, #0
   3fc18:	mov	r4, #1024	; 0x400
   3fc1c:	add	r4, r4, #50	; 0x32
   3fc20:	lsrs	ip, r1, #22
   3fc24:	beq	3f994 <fb_value_set_visit@@Base+0x16c>
   3fc28:	mov	r2, #3
   3fc2c:	lsrs	ip, ip, #3
   3fc30:	addne	r2, r2, #3
   3fc34:	lsrs	ip, ip, #3
   3fc38:	addne	r2, r2, #3
   3fc3c:	add	r2, r2, ip, lsr #3
   3fc40:	rsb	r3, r2, #32
   3fc44:	lsl	ip, r0, r3
   3fc48:	lsr	r0, r0, r2
   3fc4c:	orr	r0, r0, r1, lsl r3
   3fc50:	lsr	r1, r1, r2
   3fc54:	add	r4, r4, r2
   3fc58:	b	3f994 <fb_value_set_visit@@Base+0x16c>
   3fc5c:	eor	r0, r0, #-2147483648	; 0x80000000
   3fc60:	b	3fc68 <fb_value_set_visit@@Base+0x440>
   3fc64:	eor	r1, r1, #-2147483648	; 0x80000000
   3fc68:	lsls	r2, r0, #1
   3fc6c:	lslsne	r3, r1, #1
   3fc70:	teqne	r2, r3
   3fc74:	mvnsne	ip, r2, asr #24
   3fc78:	mvnsne	ip, r3, asr #24
   3fc7c:	beq	3fd74 <fb_value_set_visit@@Base+0x54c>
   3fc80:	lsr	r2, r2, #24
   3fc84:	rsbs	r3, r2, r3, lsr #24
   3fc88:	addgt	r2, r2, r3
   3fc8c:	eorgt	r1, r0, r1
   3fc90:	eorgt	r0, r1, r0
   3fc94:	eorgt	r1, r0, r1
   3fc98:	rsblt	r3, r3, #0
   3fc9c:	cmp	r3, #25
   3fca0:	bxhi	lr
   3fca4:	tst	r0, #-2147483648	; 0x80000000
   3fca8:	orr	r0, r0, #8388608	; 0x800000
   3fcac:	bic	r0, r0, #-16777216	; 0xff000000
   3fcb0:	rsbne	r0, r0, #0
   3fcb4:	tst	r1, #-2147483648	; 0x80000000
   3fcb8:	orr	r1, r1, #8388608	; 0x800000
   3fcbc:	bic	r1, r1, #-16777216	; 0xff000000
   3fcc0:	rsbne	r1, r1, #0
   3fcc4:	teq	r2, r3
   3fcc8:	beq	3fd5c <fb_value_set_visit@@Base+0x534>
   3fccc:	sub	r2, r2, #1
   3fcd0:	adds	r0, r0, r1, asr r3
   3fcd4:	rsb	r3, r3, #32
   3fcd8:	lsl	r1, r1, r3
   3fcdc:	and	r3, r0, #-2147483648	; 0x80000000
   3fce0:	bpl	3fcec <fb_value_set_visit@@Base+0x4c4>
   3fce4:	rsbs	r1, r1, #0
   3fce8:	rsc	r0, r0, #0
   3fcec:	cmp	r0, #8388608	; 0x800000
   3fcf0:	bcc	3fd24 <fb_value_set_visit@@Base+0x4fc>
   3fcf4:	cmp	r0, #16777216	; 0x1000000
   3fcf8:	bcc	3fd10 <fb_value_set_visit@@Base+0x4e8>
   3fcfc:	lsrs	r0, r0, #1
   3fd00:	rrx	r1, r1
   3fd04:	add	r2, r2, #1
   3fd08:	cmp	r2, #254	; 0xfe
   3fd0c:	bcs	3fdc8 <fb_value_set_visit@@Base+0x5a0>
   3fd10:	cmp	r1, #-2147483648	; 0x80000000
   3fd14:	adc	r0, r0, r2, lsl #23
   3fd18:	biceq	r0, r0, #1
   3fd1c:	orr	r0, r0, r3
   3fd20:	bx	lr
   3fd24:	lsls	r1, r1, #1
   3fd28:	adc	r0, r0, r0
   3fd2c:	tst	r0, #8388608	; 0x800000
   3fd30:	sub	r2, r2, #1
   3fd34:	bne	3fd10 <fb_value_set_visit@@Base+0x4e8>
   3fd38:	clz	ip, r0
   3fd3c:	sub	ip, ip, #8
   3fd40:	subs	r2, r2, ip
   3fd44:	lsl	r0, r0, ip
   3fd48:	addge	r0, r0, r2, lsl #23
   3fd4c:	rsblt	r2, r2, #0
   3fd50:	orrge	r0, r0, r3
   3fd54:	orrlt	r0, r3, r0, lsr r2
   3fd58:	bx	lr
   3fd5c:	teq	r2, #0
   3fd60:	eor	r1, r1, #8388608	; 0x800000
   3fd64:	eoreq	r0, r0, #8388608	; 0x800000
   3fd68:	addeq	r2, r2, #1
   3fd6c:	subne	r3, r3, #1
   3fd70:	b	3fccc <fb_value_set_visit@@Base+0x4a4>
   3fd74:	lsl	r3, r1, #1
   3fd78:	mvns	ip, r2, asr #24
   3fd7c:	mvnsne	ip, r3, asr #24
   3fd80:	beq	3fdd4 <fb_value_set_visit@@Base+0x5ac>
   3fd84:	teq	r2, r3
   3fd88:	beq	3fd98 <fb_value_set_visit@@Base+0x570>
   3fd8c:	teq	r2, #0
   3fd90:	moveq	r0, r1
   3fd94:	bx	lr
   3fd98:	teq	r0, r1
   3fd9c:	movne	r0, #0
   3fda0:	bxne	lr
   3fda4:	tst	r2, #-16777216	; 0xff000000
   3fda8:	bne	3fdb8 <fb_value_set_visit@@Base+0x590>
   3fdac:	lsls	r0, r0, #1
   3fdb0:	orrcs	r0, r0, #-2147483648	; 0x80000000
   3fdb4:	bx	lr
   3fdb8:	adds	r2, r2, #33554432	; 0x2000000
   3fdbc:	addcc	r0, r0, #8388608	; 0x800000
   3fdc0:	bxcc	lr
   3fdc4:	and	r3, r0, #-2147483648	; 0x80000000
   3fdc8:	orr	r0, r3, #2130706432	; 0x7f000000
   3fdcc:	orr	r0, r0, #8388608	; 0x800000
   3fdd0:	bx	lr
   3fdd4:	mvns	r2, r2, asr #24
   3fdd8:	movne	r0, r1
   3fddc:	mvnseq	r3, r3, asr #24
   3fde0:	movne	r1, r0
   3fde4:	lsls	r2, r0, #9
   3fde8:	lslseq	r3, r1, #9
   3fdec:	teqeq	r0, r1
   3fdf0:	orrne	r0, r0, #4194304	; 0x400000
   3fdf4:	bx	lr
   3fdf8:	mov	r3, #0
   3fdfc:	b	3fe08 <fb_value_set_visit@@Base+0x5e0>
   3fe00:	ands	r3, r0, #-2147483648	; 0x80000000
   3fe04:	rsbmi	r0, r0, #0
   3fe08:	movs	ip, r0
   3fe0c:	bxeq	lr
   3fe10:	orr	r3, r3, #1258291200	; 0x4b000000
   3fe14:	mov	r1, r0
   3fe18:	mov	r0, #0
   3fe1c:	b	3fe60 <fb_value_set_visit@@Base+0x638>
   3fe20:	orrs	r2, r0, r1
   3fe24:	bxeq	lr
   3fe28:	mov	r3, #0
   3fe2c:	b	3fe48 <fb_value_set_visit@@Base+0x620>
   3fe30:	orrs	r2, r0, r1
   3fe34:	bxeq	lr
   3fe38:	ands	r3, r1, #-2147483648	; 0x80000000
   3fe3c:	bpl	3fe48 <fb_value_set_visit@@Base+0x620>
   3fe40:	rsbs	r0, r0, #0
   3fe44:	rsc	r1, r1, #0
   3fe48:	movs	ip, r1
   3fe4c:	moveq	ip, r0
   3fe50:	moveq	r1, r0
   3fe54:	moveq	r0, #0
   3fe58:	orr	r3, r3, #1526726656	; 0x5b000000
   3fe5c:	subeq	r3, r3, #268435456	; 0x10000000
   3fe60:	sub	r3, r3, #8388608	; 0x800000
   3fe64:	clz	r2, ip
   3fe68:	subs	r2, r2, #8
   3fe6c:	sub	r3, r3, r2, lsl #23
   3fe70:	blt	3fe90 <fb_value_set_visit@@Base+0x668>
   3fe74:	add	r3, r3, r1, lsl r2
   3fe78:	lsl	ip, r0, r2
   3fe7c:	rsb	r2, r2, #32
   3fe80:	cmp	ip, #-2147483648	; 0x80000000
   3fe84:	adc	r0, r3, r0, lsr r2
   3fe88:	biceq	r0, r0, #1
   3fe8c:	bx	lr
   3fe90:	add	r2, r2, #32
   3fe94:	lsl	ip, r1, r2
   3fe98:	rsb	r2, r2, #32
   3fe9c:	orrs	r0, r0, ip, lsl #1
   3fea0:	adc	r0, r3, r1, lsr r2
   3fea4:	biceq	r0, r0, ip, lsr #31
   3fea8:	bx	lr
   3feac:	cmp	r3, #0
   3feb0:	cmpeq	r2, #0
   3feb4:	bne	3fecc <fb_value_set_visit@@Base+0x6a4>
   3feb8:	cmp	r1, #0
   3febc:	cmpeq	r0, #0
   3fec0:	mvnne	r1, #0
   3fec4:	mvnne	r0, #0
   3fec8:	b	3fee8 <fb_value_set_visit@@Base+0x6c0>
   3fecc:	sub	sp, sp, #8
   3fed0:	push	{sp, lr}
   3fed4:	bl	3ffd0 <fb_value_set_visit@@Base+0x7a8>
   3fed8:	ldr	lr, [sp, #4]
   3fedc:	add	sp, sp, #8
   3fee0:	pop	{r2, r3}
   3fee4:	bx	lr
   3fee8:	push	{r1, lr}
   3feec:	mov	r0, #8
   3fef0:	bl	13f80 <raise@plt>
   3fef4:	pop	{r1, pc}
   3fef8:	vmov	s15, r0
   3fefc:	vcmpe.f32	s15, #0.0
   3ff00:	vmrs	APSR_nzcv, fpscr
   3ff04:	bmi	3ff0c <fb_value_set_visit@@Base+0x6e4>
   3ff08:	b	3ff50 <fb_value_set_visit@@Base+0x728>
   3ff0c:	push	{r4, lr}
   3ff10:	eor	r0, r0, #-2147483648	; 0x80000000
   3ff14:	bl	3ff50 <fb_value_set_visit@@Base+0x728>
   3ff18:	rsbs	r0, r0, #0
   3ff1c:	rsc	r1, r1, #0
   3ff20:	pop	{r4, pc}
   3ff24:	vmov	d7, r0, r1
   3ff28:	vcmpe.f64	d7, #0.0
   3ff2c:	vmrs	APSR_nzcv, fpscr
   3ff30:	bmi	3ff38 <fb_value_set_visit@@Base+0x710>
   3ff34:	b	3ff90 <fb_value_set_visit@@Base+0x768>
   3ff38:	push	{r4, lr}
   3ff3c:	eor	r1, r1, #-2147483648	; 0x80000000
   3ff40:	bl	3ff90 <fb_value_set_visit@@Base+0x768>
   3ff44:	rsbs	r0, r0, #0
   3ff48:	rsc	r1, r1, #0
   3ff4c:	pop	{r4, pc}
   3ff50:	vmov	s15, r0
   3ff54:	vldr	d5, [pc, #36]	; 3ff80 <fb_value_set_visit@@Base+0x758>
   3ff58:	vcvt.f64.f32	d6, s15
   3ff5c:	vldr	d7, [pc, #36]	; 3ff88 <fb_value_set_visit@@Base+0x760>
   3ff60:	vmul.f64	d7, d6, d7
   3ff64:	vcvt.u32.f64	s14, d7
   3ff68:	vcvt.f64.u32	d4, s14
   3ff6c:	vmov	r1, s14
   3ff70:	vmls.f64	d6, d4, d5
   3ff74:	vcvt.u32.f64	s15, d6
   3ff78:	vmov	r0, s15
   3ff7c:	bx	lr
   3ff80:	andeq	r0, r0, r0
   3ff84:	mvnsmi	r0, r0
   3ff88:	andeq	r0, r0, r0
   3ff8c:	ldclcc	0, cr0, [r0]
   3ff90:	vmov	d6, r0, r1
   3ff94:	vldr	d7, [pc, #36]	; 3ffc0 <fb_value_set_visit@@Base+0x798>
   3ff98:	vldr	d5, [pc, #40]	; 3ffc8 <fb_value_set_visit@@Base+0x7a0>
   3ff9c:	vmul.f64	d7, d6, d7
   3ffa0:	vcvt.u32.f64	s14, d7
   3ffa4:	vcvt.f64.u32	d4, s14
   3ffa8:	vmov	r1, s14
   3ffac:	vmls.f64	d6, d4, d5
   3ffb0:	vcvt.u32.f64	s15, d6
   3ffb4:	vmov	r0, s15
   3ffb8:	bx	lr
   3ffbc:	nop			; (mov r0, r0)
   3ffc0:	andeq	r0, r0, r0
   3ffc4:	ldclcc	0, cr0, [r0]
   3ffc8:	andeq	r0, r0, r0
   3ffcc:	mvnsmi	r0, r0
   3ffd0:	cmp	r1, r3
   3ffd4:	cmpeq	r0, r2
   3ffd8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3ffdc:	mov	r4, r0
   3ffe0:	movcc	r0, #0
   3ffe4:	mov	r5, r1
   3ffe8:	ldr	lr, [sp, #36]	; 0x24
   3ffec:	movcc	r1, r0
   3fff0:	bcc	400ec <fb_value_set_visit@@Base+0x8c4>
   3fff4:	cmp	r3, #0
   3fff8:	clzeq	ip, r2
   3fffc:	clzne	ip, r3
   40000:	addeq	ip, ip, #32
   40004:	cmp	r5, #0
   40008:	clzeq	r1, r4
   4000c:	addeq	r1, r1, #32
   40010:	clzne	r1, r5
   40014:	sub	ip, ip, r1
   40018:	sub	sl, ip, #32
   4001c:	lsl	r9, r3, ip
   40020:	rsb	fp, ip, #32
   40024:	orr	r9, r9, r2, lsl sl
   40028:	orr	r9, r9, r2, lsr fp
   4002c:	lsl	r8, r2, ip
   40030:	cmp	r5, r9
   40034:	cmpeq	r4, r8
   40038:	movcc	r0, #0
   4003c:	movcc	r1, r0
   40040:	bcc	4005c <fb_value_set_visit@@Base+0x834>
   40044:	mov	r0, #1
   40048:	subs	r4, r4, r8
   4004c:	lsl	r1, r0, sl
   40050:	orr	r1, r1, r0, lsr fp
   40054:	lsl	r0, r0, ip
   40058:	sbc	r5, r5, r9
   4005c:	cmp	ip, #0
   40060:	beq	400ec <fb_value_set_visit@@Base+0x8c4>
   40064:	lsr	r6, r8, #1
   40068:	orr	r6, r6, r9, lsl #31
   4006c:	lsr	r7, r9, #1
   40070:	mov	r2, ip
   40074:	b	40098 <fb_value_set_visit@@Base+0x870>
   40078:	subs	r3, r4, r6
   4007c:	sbc	r8, r5, r7
   40080:	adds	r3, r3, r3
   40084:	adc	r8, r8, r8
   40088:	adds	r4, r3, #1
   4008c:	adc	r5, r8, #0
   40090:	subs	r2, r2, #1
   40094:	beq	400b4 <fb_value_set_visit@@Base+0x88c>
   40098:	cmp	r5, r7
   4009c:	cmpeq	r4, r6
   400a0:	bcs	40078 <fb_value_set_visit@@Base+0x850>
   400a4:	adds	r4, r4, r4
   400a8:	adc	r5, r5, r5
   400ac:	subs	r2, r2, #1
   400b0:	bne	40098 <fb_value_set_visit@@Base+0x870>
   400b4:	lsr	r3, r4, ip
   400b8:	orr	r3, r3, r5, lsl fp
   400bc:	lsr	r2, r5, ip
   400c0:	orr	r3, r3, r5, lsr sl
   400c4:	adds	r0, r0, r4
   400c8:	mov	r4, r3
   400cc:	lsl	r3, r2, ip
   400d0:	orr	r3, r3, r4, lsl sl
   400d4:	lsl	ip, r4, ip
   400d8:	orr	r3, r3, r4, lsr fp
   400dc:	adc	r1, r1, r5
   400e0:	subs	r0, r0, ip
   400e4:	mov	r5, r2
   400e8:	sbc	r1, r1, r3
   400ec:	cmp	lr, #0
   400f0:	strdne	r4, [lr]
   400f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000400f8 <__libc_csu_init@@Base>:
   400f8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   400fc:	mov	r7, r0
   40100:	ldr	r6, [pc, #72]	; 40150 <__libc_csu_init@@Base+0x58>
   40104:	ldr	r5, [pc, #72]	; 40154 <__libc_csu_init@@Base+0x5c>
   40108:	add	r6, pc, r6
   4010c:	add	r5, pc, r5
   40110:	sub	r6, r6, r5
   40114:	mov	r8, r1
   40118:	mov	r9, r2
   4011c:	bl	13f54 <calloc@plt-0x20>
   40120:	asrs	r6, r6, #2
   40124:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   40128:	mov	r4, #0
   4012c:	add	r4, r4, #1
   40130:	ldr	r3, [r5], #4
   40134:	mov	r2, r9
   40138:	mov	r1, r8
   4013c:	mov	r0, r7
   40140:	blx	r3
   40144:	cmp	r6, r4
   40148:	bne	4012c <__libc_csu_init@@Base+0x34>
   4014c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   40150:	ldrdeq	ip, [r2], -r4
   40154:	andeq	ip, r2, ip, asr #27

00040158 <__libc_csu_fini@@Base>:
   40158:	bx	lr

Disassembly of section .fini:

0004015c <.fini>:
   4015c:	push	{r3, lr}
   40160:	pop	{r3, pc}
