
../repos/charybdis/tools/.libs/charybdis-mkpasswd:     file format elf32-littlearm


Disassembly of section .init:

00010654 <.init>:
   10654:	push	{r3, lr}
   10658:	bl	11000 <sprintf@plt+0x890>
   1065c:	pop	{r3, pc}

Disassembly of section .plt:

00010660 <open@plt-0x14>:
   10660:	push	{lr}		; (str lr, [sp, #-4]!)
   10664:	ldr	lr, [pc, #4]	; 10670 <open@plt-0x4>
   10668:	add	lr, pc, lr
   1066c:	ldr	pc, [lr, #8]!
   10670:	muleq	r1, r0, r9

00010674 <open@plt>:
   10674:	add	ip, pc, #0, 12
   10678:	add	ip, ip, #69632	; 0x11000
   1067c:	ldr	pc, [ip, #2448]!	; 0x990

00010680 <abort@plt>:
   10680:	add	ip, pc, #0, 12
   10684:	add	ip, ip, #69632	; 0x11000
   10688:	ldr	pc, [ip, #2440]!	; 0x988

0001068c <srand@plt>:
   1068c:	add	ip, pc, #0, 12
   10690:	add	ip, ip, #69632	; 0x11000
   10694:	ldr	pc, [ip, #2432]!	; 0x980

00010698 <__libc_start_main@plt>:
   10698:	add	ip, pc, #0, 12
   1069c:	add	ip, ip, #69632	; 0x11000
   106a0:	ldr	pc, [ip, #2424]!	; 0x978

000106a4 <__gmon_start__@plt>:
   106a4:	add	ip, pc, #0, 12
   106a8:	add	ip, ip, #69632	; 0x11000
   106ac:	ldr	pc, [ip, #2416]!	; 0x970

000106b0 <getpass@plt>:
   106b0:	add	ip, pc, #0, 12
   106b4:	add	ip, ip, #69632	; 0x11000
   106b8:	ldr	pc, [ip, #2408]!	; 0x968

000106bc <calloc@plt>:
   106bc:	add	ip, pc, #0, 12
   106c0:	add	ip, ip, #69632	; 0x11000
   106c4:	ldr	pc, [ip, #2400]!	; 0x960

000106c8 <free@plt>:
   106c8:	add	ip, pc, #0, 12
   106cc:	add	ip, ip, #69632	; 0x11000
   106d0:	ldr	pc, [ip, #2392]!	; 0x958

000106d4 <read@plt>:
   106d4:	add	ip, pc, #0, 12
   106d8:	add	ip, ip, #69632	; 0x11000
   106dc:	ldr	pc, [ip, #2384]!	; 0x950

000106e0 <strlen@plt>:
   106e0:	add	ip, pc, #0, 12
   106e4:	add	ip, ip, #69632	; 0x11000
   106e8:	ldr	pc, [ip, #2376]!	; 0x948

000106ec <getopt@plt>:
   106ec:	add	ip, pc, #0, 12
   106f0:	add	ip, ip, #69632	; 0x11000
   106f4:	ldr	pc, [ip, #2368]!	; 0x940

000106f8 <strtol@plt>:
   106f8:	add	ip, pc, #0, 12
   106fc:	add	ip, ip, #69632	; 0x11000
   10700:	ldr	pc, [ip, #2360]!	; 0x938

00010704 <printf@plt>:
   10704:	add	ip, pc, #0, 12
   10708:	add	ip, ip, #69632	; 0x11000
   1070c:	ldr	pc, [ip, #2352]!	; 0x930

00010710 <fwrite@plt>:
   10710:	add	ip, pc, #0, 12
   10714:	add	ip, ip, #69632	; 0x11000
   10718:	ldr	pc, [ip, #2344]!	; 0x928

0001071c <time@plt>:
   1071c:	add	ip, pc, #0, 12
   10720:	add	ip, ip, #69632	; 0x11000
   10724:	ldr	pc, [ip, #2336]!	; 0x920

00010728 <strdup@plt>:
   10728:	add	ip, pc, #0, 12
   1072c:	add	ip, ip, #69632	; 0x11000
   10730:	ldr	pc, [ip, #2328]!	; 0x918

00010734 <rb_crypt@plt>:
   10734:	add	ip, pc, #0, 12
   10738:	add	ip, ip, #69632	; 0x11000
   1073c:	ldr	pc, [ip, #2320]!	; 0x910

00010740 <puts@plt>:
   10740:	add	ip, pc, #0, 12
   10744:	add	ip, ip, #69632	; 0x11000
   10748:	ldr	pc, [ip, #2312]!	; 0x908

0001074c <rand@plt>:
   1074c:	add	ip, pc, #0, 12
   10750:	add	ip, ip, #69632	; 0x11000
   10754:	ldr	pc, [ip, #2304]!	; 0x900

00010758 <strcmp@plt>:
   10758:	add	ip, pc, #0, 12
   1075c:	add	ip, ip, #69632	; 0x11000
   10760:	ldr	pc, [ip, #2296]!	; 0x8f8

00010764 <exit@plt>:
   10764:	add	ip, pc, #0, 12
   10768:	add	ip, ip, #69632	; 0x11000
   1076c:	ldr	pc, [ip, #2288]!	; 0x8f0

00010770 <sprintf@plt>:
   10770:	add	ip, pc, #0, 12
   10774:	add	ip, ip, #69632	; 0x11000
   10778:	ldr	pc, [ip, #2280]!	; 0x8e8

Disassembly of section .text:

0001077c <.text>:
   1077c:	ldr	r3, [pc, #1908]	; 10ef8 <sprintf@plt+0x788>
   10780:	strd	r4, [sp, #-36]!	; 0xffffffdc
   10784:	ldr	r5, [pc, #1904]	; 10efc <sprintf@plt+0x78c>
   10788:	strd	r6, [sp, #8]
   1078c:	mov	r7, r0
   10790:	mov	r6, r1
   10794:	strd	r8, [sp, #16]
   10798:	mov	r9, #0
   1079c:	ldr	r8, [pc, #1884]	; 10f00 <sprintf@plt+0x790>
   107a0:	add	r3, pc, r3
   107a4:	mov	r4, r9
   107a8:	strd	sl, [sp, #24]
   107ac:	mov	sl, r9
   107b0:	mov	fp, r9
   107b4:	add	r5, pc, r5
   107b8:	str	lr, [sp, #32]
   107bc:	sub	sp, sp, #20
   107c0:	str	r9, [sp]
   107c4:	add	r8, pc, r8
   107c8:	str	r3, [sp, #4]
   107cc:	mov	r2, r5
   107d0:	mov	r1, r6
   107d4:	mov	r0, r7
   107d8:	bl	106ec <getopt@plt>
   107dc:	cmn	r0, #1
   107e0:	beq	10988 <sprintf@plt+0x218>
   107e4:	sub	r3, r0, #63	; 0x3f
   107e8:	cmp	r3, #58	; 0x3a
   107ec:	addls	pc, pc, r3, lsl #2
   107f0:	b	10978 <sprintf@plt+0x208>
   107f4:	b	10e4c <sprintf@plt+0x6dc>
   107f8:	b	10978 <sprintf@plt+0x208>
   107fc:	b	10978 <sprintf@plt+0x208>
   10800:	b	10978 <sprintf@plt+0x208>
   10804:	b	10978 <sprintf@plt+0x208>
   10808:	b	10978 <sprintf@plt+0x208>
   1080c:	b	10978 <sprintf@plt+0x208>
   10810:	b	10978 <sprintf@plt+0x208>
   10814:	b	10978 <sprintf@plt+0x208>
   10818:	b	10978 <sprintf@plt+0x208>
   1081c:	b	10978 <sprintf@plt+0x208>
   10820:	b	10978 <sprintf@plt+0x208>
   10824:	b	10978 <sprintf@plt+0x208>
   10828:	b	10978 <sprintf@plt+0x208>
   1082c:	b	10978 <sprintf@plt+0x208>
   10830:	b	10978 <sprintf@plt+0x208>
   10834:	b	10978 <sprintf@plt+0x208>
   10838:	b	10978 <sprintf@plt+0x208>
   1083c:	b	10978 <sprintf@plt+0x208>
   10840:	b	10978 <sprintf@plt+0x208>
   10844:	b	10978 <sprintf@plt+0x208>
   10848:	b	10978 <sprintf@plt+0x208>
   1084c:	b	10978 <sprintf@plt+0x208>
   10850:	b	10978 <sprintf@plt+0x208>
   10854:	b	10978 <sprintf@plt+0x208>
   10858:	b	10978 <sprintf@plt+0x208>
   1085c:	b	10978 <sprintf@plt+0x208>
   10860:	b	10978 <sprintf@plt+0x208>
   10864:	b	10978 <sprintf@plt+0x208>
   10868:	b	10978 <sprintf@plt+0x208>
   1086c:	b	10978 <sprintf@plt+0x208>
   10870:	b	10978 <sprintf@plt+0x208>
   10874:	b	10978 <sprintf@plt+0x208>
   10878:	b	10978 <sprintf@plt+0x208>
   1087c:	b	10978 <sprintf@plt+0x208>
   10880:	b	1096c <sprintf@plt+0x1fc>
   10884:	b	10978 <sprintf@plt+0x208>
   10888:	b	10978 <sprintf@plt+0x208>
   1088c:	b	10978 <sprintf@plt+0x208>
   10890:	b	10978 <sprintf@plt+0x208>
   10894:	b	10978 <sprintf@plt+0x208>
   10898:	b	10db4 <sprintf@plt+0x644>
   1089c:	b	10978 <sprintf@plt+0x208>
   108a0:	b	10978 <sprintf@plt+0x208>
   108a4:	b	10978 <sprintf@plt+0x208>
   108a8:	b	10948 <sprintf@plt+0x1d8>
   108ac:	b	10940 <sprintf@plt+0x1d0>
   108b0:	b	10978 <sprintf@plt+0x208>
   108b4:	b	10978 <sprintf@plt+0x208>
   108b8:	b	10928 <sprintf@plt+0x1b8>
   108bc:	b	10978 <sprintf@plt+0x208>
   108c0:	b	10904 <sprintf@plt+0x194>
   108c4:	b	108f0 <sprintf@plt+0x180>
   108c8:	b	10978 <sprintf@plt+0x208>
   108cc:	b	10978 <sprintf@plt+0x208>
   108d0:	b	10978 <sprintf@plt+0x208>
   108d4:	b	10978 <sprintf@plt+0x208>
   108d8:	b	108e8 <sprintf@plt+0x178>
   108dc:	b	108e0 <sprintf@plt+0x170>
   108e0:	orr	r4, r4, #128	; 0x80
   108e4:	b	107cc <sprintf@plt+0x5c>
   108e8:	orr	r4, r4, #64	; 0x40
   108ec:	b	107cc <sprintf@plt+0x5c>
   108f0:	ldr	r3, [pc, #1548]	; 10f04 <sprintf@plt+0x794>
   108f4:	orr	r4, r4, #2
   108f8:	ldr	r3, [r8, r3]
   108fc:	ldr	fp, [r3]
   10900:	b	107cc <sprintf@plt+0x5c>
   10904:	ldr	r3, [pc, #1528]	; 10f04 <sprintf@plt+0x794>
   10908:	mov	r2, #10
   1090c:	mov	r1, #0
   10910:	orr	r4, r4, #32
   10914:	ldr	r3, [r8, r3]
   10918:	ldr	r0, [r3]
   1091c:	bl	106f8 <strtol@plt>
   10920:	mov	r9, r0
   10924:	b	107cc <sprintf@plt+0x5c>
   10928:	ldr	r3, [pc, #1492]	; 10f04 <sprintf@plt+0x794>
   1092c:	orr	r4, r4, #4
   10930:	ldr	r3, [r8, r3]
   10934:	ldr	r3, [r3]
   10938:	str	r3, [sp]
   1093c:	b	107cc <sprintf@plt+0x5c>
   10940:	orr	r4, r4, #1
   10944:	b	107cc <sprintf@plt+0x5c>
   10948:	ldr	r3, [pc, #1460]	; 10f04 <sprintf@plt+0x794>
   1094c:	mov	r2, #10
   10950:	mov	r1, #0
   10954:	orr	r4, r4, #8
   10958:	ldr	r3, [r8, r3]
   1095c:	ldr	r0, [r3]
   10960:	bl	106f8 <strtol@plt>
   10964:	mov	sl, r0
   10968:	b	107cc <sprintf@plt+0x5c>
   1096c:	orr	r4, r4, #16
   10970:	mov	r9, #4
   10974:	b	107cc <sprintf@plt+0x5c>
   10978:	mov	r1, r0
   1097c:	ldr	r0, [sp, #4]
   10980:	bl	10704 <printf@plt>
   10984:	b	107cc <sprintf@plt+0x5c>
   10988:	tst	r4, #1
   1098c:	and	r5, r4, #2
   10990:	beq	109c0 <sprintf@plt+0x250>
   10994:	cmp	sl, #0
   10998:	beq	109f4 <sprintf@plt+0x284>
   1099c:	cmp	r5, #0
   109a0:	bne	10a00 <sprintf@plt+0x290>
   109a4:	cmp	sl, #16
   109a8:	ble	10bc8 <sprintf@plt+0x458>
   109ac:	ldr	r0, [pc, #1364]	; 10f08 <sprintf@plt+0x798>
   109b0:	add	r0, pc, r0
   109b4:	bl	10740 <puts@plt>
   109b8:	mov	r0, r5
   109bc:	bl	10764 <exit@plt>
   109c0:	tst	r4, #16
   109c4:	beq	10b00 <sprintf@plt+0x390>
   109c8:	cmp	sl, #0
   109cc:	beq	10b34 <sprintf@plt+0x3c4>
   109d0:	cmp	r5, #0
   109d4:	bne	10c94 <sprintf@plt+0x524>
   109d8:	cmp	sl, #22
   109dc:	ble	10b40 <sprintf@plt+0x3d0>
   109e0:	ldr	r0, [pc, #1316]	; 10f0c <sprintf@plt+0x79c>
   109e4:	add	r0, pc, r0
   109e8:	bl	10740 <puts@plt>
   109ec:	mov	r0, r5
   109f0:	bl	10764 <exit@plt>
   109f4:	cmp	r5, #0
   109f8:	moveq	sl, #8
   109fc:	beq	10bc8 <sprintf@plt+0x458>
   10a00:	cmp	fp, #0
   10a04:	beq	10ee4 <sprintf@plt+0x774>
   10a08:	mov	r0, fp
   10a0c:	bl	106e0 <strlen@plt>
   10a10:	cmp	r0, #16
   10a14:	bhi	10ee4 <sprintf@plt+0x774>
   10a18:	ldr	r0, [pc, #1264]	; 10f10 <sprintf@plt+0x7a0>
   10a1c:	mov	r2, fp
   10a20:	ldr	r1, [pc, #1260]	; 10f14 <sprintf@plt+0x7a4>
   10a24:	add	r0, pc, r0
   10a28:	add	r0, r0, #128	; 0x80
   10a2c:	add	r1, pc, r1
   10a30:	mov	r5, r0
   10a34:	bl	10770 <sprintf@plt>
   10a38:	tst	r4, #4
   10a3c:	beq	10a84 <sprintf@plt+0x314>
   10a40:	ldr	r3, [sp]
   10a44:	cmp	r3, #0
   10a48:	beq	10cec <sprintf@plt+0x57c>
   10a4c:	mov	r1, r5
   10a50:	ldr	r0, [sp]
   10a54:	bl	10734 <rb_crypt@plt>
   10a58:	mov	r4, r0
   10a5c:	mov	r0, r4
   10a60:	bl	10740 <puts@plt>
   10a64:	mov	r0, #0
   10a68:	add	sp, sp, #20
   10a6c:	ldrd	r4, [sp]
   10a70:	ldrd	r6, [sp, #8]
   10a74:	ldrd	r8, [sp, #16]
   10a78:	ldrd	sl, [sp, #24]
   10a7c:	add	sp, sp, #32
   10a80:	pop	{pc}		; (ldr pc, [sp], #4)
   10a84:	ldr	r0, [pc, #1164]	; 10f18 <sprintf@plt+0x7a8>
   10a88:	add	r0, pc, r0
   10a8c:	bl	106b0 <getpass@plt>
   10a90:	mov	r1, r5
   10a94:	bl	10734 <rb_crypt@plt>
   10a98:	cmp	r0, #0
   10a9c:	beq	10d14 <sprintf@plt+0x5a4>
   10aa0:	bl	10728 <strdup@plt>
   10aa4:	mov	r6, r0
   10aa8:	ldr	r0, [pc, #1132]	; 10f1c <sprintf@plt+0x7ac>
   10aac:	mov	r4, r6
   10ab0:	add	r0, pc, r0
   10ab4:	bl	106b0 <getpass@plt>
   10ab8:	mov	r1, r5
   10abc:	bl	10734 <rb_crypt@plt>
   10ac0:	subs	r1, r0, #0
   10ac4:	beq	10ea8 <sprintf@plt+0x738>
   10ac8:	mov	r0, r6
   10acc:	bl	10758 <strcmp@plt>
   10ad0:	cmp	r0, #0
   10ad4:	beq	10a5c <sprintf@plt+0x2ec>
   10ad8:	ldr	r3, [pc, #1088]	; 10f20 <sprintf@plt+0x7b0>
   10adc:	mov	r2, #23
   10ae0:	mov	r1, #1
   10ae4:	ldr	r0, [pc, #1080]	; 10f24 <sprintf@plt+0x7b4>
   10ae8:	ldr	r3, [r8, r3]
   10aec:	add	r0, pc, r0
   10af0:	ldr	r3, [r3]
   10af4:	bl	10710 <fwrite@plt>
   10af8:	mov	r0, #1
   10afc:	b	10a68 <sprintf@plt+0x2f8>
   10b00:	tst	r4, #64	; 0x40
   10b04:	beq	10b9c <sprintf@plt+0x42c>
   10b08:	cmp	sl, #0
   10b0c:	beq	10c4c <sprintf@plt+0x4dc>
   10b10:	cmp	r5, #0
   10b14:	bne	10c58 <sprintf@plt+0x4e8>
   10b18:	cmp	sl, #16
   10b1c:	ble	10d78 <sprintf@plt+0x608>
   10b20:	ldr	r0, [pc, #1024]	; 10f28 <sprintf@plt+0x7b8>
   10b24:	add	r0, pc, r0
   10b28:	bl	10740 <puts@plt>
   10b2c:	mov	r0, r5
   10b30:	bl	10764 <exit@plt>
   10b34:	cmp	r5, #0
   10b38:	moveq	sl, #22
   10b3c:	bne	10c94 <sprintf@plt+0x524>
   10b40:	ldr	r1, [pc, #996]	; 10f2c <sprintf@plt+0x7bc>
   10b44:	add	r5, sp, #12
   10b48:	mov	r2, r9
   10b4c:	mov	r0, r5
   10b50:	ldr	r6, [pc, #984]	; 10f30 <sprintf@plt+0x7c0>
   10b54:	add	r1, pc, r1
   10b58:	bl	10770 <sprintf@plt>
   10b5c:	ldr	r1, [pc, #976]	; 10f34 <sprintf@plt+0x7c4>
   10b60:	add	r6, pc, r6
   10b64:	mov	r2, r5
   10b68:	add	r0, r6, #24
   10b6c:	mov	r5, r0
   10b70:	add	r1, pc, r1
   10b74:	bl	10770 <sprintf@plt>
   10b78:	add	r0, r6, #31
   10b7c:	mov	r1, sl
   10b80:	bl	11130 <sprintf@plt+0x9c0>
   10b84:	add	r6, r6, sl
   10b88:	mov	r2, #36	; 0x24
   10b8c:	mov	r3, #0
   10b90:	strb	r2, [r6, #31]
   10b94:	strb	r3, [r6, #32]
   10b98:	b	10a38 <sprintf@plt+0x2c8>
   10b9c:	cmp	sl, #0
   10ba0:	beq	10c04 <sprintf@plt+0x494>
   10ba4:	cmp	r5, #0
   10ba8:	bne	10c10 <sprintf@plt+0x4a0>
   10bac:	cmp	sl, #16
   10bb0:	ble	10d3c <sprintf@plt+0x5cc>
   10bb4:	ldr	r0, [pc, #892]	; 10f38 <sprintf@plt+0x7c8>
   10bb8:	add	r0, pc, r0
   10bbc:	bl	10740 <puts@plt>
   10bc0:	mov	r0, r5
   10bc4:	bl	10764 <exit@plt>
   10bc8:	ldr	r6, [pc, #876]	; 10f3c <sprintf@plt+0x7cc>
   10bcc:	movw	r3, #12580	; 0x3124
   10bd0:	mov	r7, #36	; 0x24
   10bd4:	mov	r1, sl
   10bd8:	add	r6, pc, r6
   10bdc:	add	r0, r6, #3
   10be0:	mov	r5, r6
   10be4:	strh	r3, [r6]
   10be8:	strb	r7, [r6, #2]
   10bec:	add	r6, r6, sl
   10bf0:	bl	11130 <sprintf@plt+0x9c0>
   10bf4:	mov	r3, #0
   10bf8:	strb	r7, [r6, #3]
   10bfc:	strb	r3, [r6, #4]
   10c00:	b	10a38 <sprintf@plt+0x2c8>
   10c04:	cmp	r5, #0
   10c08:	moveq	sl, #16
   10c0c:	beq	10d3c <sprintf@plt+0x5cc>
   10c10:	cmp	fp, #0
   10c14:	beq	10ee4 <sprintf@plt+0x774>
   10c18:	mov	r0, fp
   10c1c:	bl	106e0 <strlen@plt>
   10c20:	cmp	r0, #16
   10c24:	bhi	10ee4 <sprintf@plt+0x774>
   10c28:	ldr	r0, [pc, #784]	; 10f40 <sprintf@plt+0x7d0>
   10c2c:	mov	r2, fp
   10c30:	ldr	r1, [pc, #780]	; 10f44 <sprintf@plt+0x7d4>
   10c34:	add	r0, pc, r0
   10c38:	add	r0, r0, #80	; 0x50
   10c3c:	add	r1, pc, r1
   10c40:	mov	r5, r0
   10c44:	bl	10770 <sprintf@plt>
   10c48:	b	10a38 <sprintf@plt+0x2c8>
   10c4c:	cmp	r5, #0
   10c50:	moveq	sl, #16
   10c54:	beq	10d78 <sprintf@plt+0x608>
   10c58:	cmp	fp, #0
   10c5c:	beq	10ee4 <sprintf@plt+0x774>
   10c60:	mov	r0, fp
   10c64:	bl	106e0 <strlen@plt>
   10c68:	cmp	r0, #16
   10c6c:	bhi	10ee4 <sprintf@plt+0x774>
   10c70:	ldr	r0, [pc, #720]	; 10f48 <sprintf@plt+0x7d8>
   10c74:	mov	r2, fp
   10c78:	ldr	r1, [pc, #716]	; 10f4c <sprintf@plt+0x7dc>
   10c7c:	add	r0, pc, r0
   10c80:	add	r0, r0, #184	; 0xb8
   10c84:	add	r1, pc, r1
   10c88:	mov	r5, r0
   10c8c:	bl	10770 <sprintf@plt>
   10c90:	b	10a38 <sprintf@plt+0x2c8>
   10c94:	cmp	fp, #0
   10c98:	beq	10ed0 <sprintf@plt+0x760>
   10c9c:	mov	r0, fp
   10ca0:	bl	106e0 <strlen@plt>
   10ca4:	cmp	r0, #22
   10ca8:	bhi	10ed0 <sprintf@plt+0x760>
   10cac:	ldr	r1, [pc, #668]	; 10f50 <sprintf@plt+0x7e0>
   10cb0:	add	r5, sp, #12
   10cb4:	mov	r2, r9
   10cb8:	mov	r0, r5
   10cbc:	add	r1, pc, r1
   10cc0:	bl	10770 <sprintf@plt>
   10cc4:	ldr	r0, [pc, #648]	; 10f54 <sprintf@plt+0x7e4>
   10cc8:	mov	r2, r5
   10ccc:	mov	r3, fp
   10cd0:	ldr	r1, [pc, #640]	; 10f58 <sprintf@plt+0x7e8>
   10cd4:	add	r0, pc, r0
   10cd8:	add	r0, r0, #152	; 0x98
   10cdc:	add	r1, pc, r1
   10ce0:	mov	r5, r0
   10ce4:	bl	10770 <sprintf@plt>
   10ce8:	b	10a38 <sprintf@plt+0x2c8>
   10cec:	ldr	r3, [pc, #556]	; 10f20 <sprintf@plt+0x7b0>
   10cf0:	mov	r2, #30
   10cf4:	mov	r1, #1
   10cf8:	ldr	r0, [pc, #604]	; 10f5c <sprintf@plt+0x7ec>
   10cfc:	ldr	r3, [r8, r3]
   10d00:	add	r0, pc, r0
   10d04:	ldr	r3, [r3]
   10d08:	bl	10710 <fwrite@plt>
   10d0c:	mov	r0, #1
   10d10:	b	10a68 <sprintf@plt+0x2f8>
   10d14:	ldr	r3, [pc, #516]	; 10f20 <sprintf@plt+0x7b0>
   10d18:	mov	r2, #18
   10d1c:	mov	r1, #1
   10d20:	ldr	r0, [pc, #568]	; 10f60 <sprintf@plt+0x7f0>
   10d24:	ldr	r3, [r8, r3]
   10d28:	add	r0, pc, r0
   10d2c:	ldr	r3, [r3]
   10d30:	bl	10710 <fwrite@plt>
   10d34:	mov	r0, #1
   10d38:	b	10a68 <sprintf@plt+0x2f8>
   10d3c:	ldr	r6, [pc, #544]	; 10f64 <sprintf@plt+0x7f4>
   10d40:	movw	r3, #13860	; 0x3624
   10d44:	mov	r7, #36	; 0x24
   10d48:	mov	r1, sl
   10d4c:	add	r6, pc, r6
   10d50:	add	r0, r6, #107	; 0x6b
   10d54:	add	r5, r6, #104	; 0x68
   10d58:	strh	r3, [r6, #104]	; 0x68
   10d5c:	strb	r7, [r6, #106]	; 0x6a
   10d60:	add	r6, r6, sl
   10d64:	bl	11130 <sprintf@plt+0x9c0>
   10d68:	mov	r3, #0
   10d6c:	strb	r7, [r6, #107]	; 0x6b
   10d70:	strb	r3, [r6, #108]	; 0x6c
   10d74:	b	10a38 <sprintf@plt+0x2c8>
   10d78:	ldr	r6, [pc, #488]	; 10f68 <sprintf@plt+0x7f8>
   10d7c:	movw	r3, #13604	; 0x3524
   10d80:	mov	r7, #36	; 0x24
   10d84:	mov	r1, sl
   10d88:	add	r6, pc, r6
   10d8c:	add	r0, r6, #59	; 0x3b
   10d90:	add	r5, r6, #56	; 0x38
   10d94:	strh	r3, [r6, #56]	; 0x38
   10d98:	strb	r7, [r6, #58]	; 0x3a
   10d9c:	add	r6, r6, sl
   10da0:	bl	11130 <sprintf@plt+0x9c0>
   10da4:	mov	r3, #0
   10da8:	strb	r7, [r6, #59]	; 0x3b
   10dac:	strb	r3, [r6, #60]	; 0x3c
   10db0:	b	10a38 <sprintf@plt+0x2c8>
   10db4:	ldr	r0, [pc, #432]	; 10f6c <sprintf@plt+0x7fc>
   10db8:	add	r0, pc, r0
   10dbc:	bl	10740 <puts@plt>
   10dc0:	ldr	r0, [pc, #424]	; 10f70 <sprintf@plt+0x800>
   10dc4:	add	r0, pc, r0
   10dc8:	bl	10740 <puts@plt>
   10dcc:	ldr	r0, [pc, #416]	; 10f74 <sprintf@plt+0x804>
   10dd0:	add	r0, pc, r0
   10dd4:	bl	10740 <puts@plt>
   10dd8:	ldr	r0, [pc, #408]	; 10f78 <sprintf@plt+0x808>
   10ddc:	add	r0, pc, r0
   10de0:	bl	10740 <puts@plt>
   10de4:	ldr	r0, [pc, #400]	; 10f7c <sprintf@plt+0x80c>
   10de8:	add	r0, pc, r0
   10dec:	bl	10740 <puts@plt>
   10df0:	ldr	r0, [pc, #392]	; 10f80 <sprintf@plt+0x810>
   10df4:	add	r0, pc, r0
   10df8:	bl	10740 <puts@plt>
   10dfc:	ldr	r0, [pc, #384]	; 10f84 <sprintf@plt+0x814>
   10e00:	add	r0, pc, r0
   10e04:	bl	10740 <puts@plt>
   10e08:	ldr	r0, [pc, #376]	; 10f88 <sprintf@plt+0x818>
   10e0c:	add	r0, pc, r0
   10e10:	bl	10740 <puts@plt>
   10e14:	ldr	r0, [pc, #368]	; 10f8c <sprintf@plt+0x81c>
   10e18:	add	r0, pc, r0
   10e1c:	bl	10740 <puts@plt>
   10e20:	ldr	r0, [pc, #360]	; 10f90 <sprintf@plt+0x820>
   10e24:	add	r0, pc, r0
   10e28:	bl	10740 <puts@plt>
   10e2c:	ldr	r0, [pc, #352]	; 10f94 <sprintf@plt+0x824>
   10e30:	add	r0, pc, r0
   10e34:	bl	10740 <puts@plt>
   10e38:	ldr	r0, [pc, #344]	; 10f98 <sprintf@plt+0x828>
   10e3c:	add	r0, pc, r0
   10e40:	bl	10740 <puts@plt>
   10e44:	mov	r0, #0
   10e48:	bl	10764 <exit@plt>
   10e4c:	ldr	r0, [pc, #328]	; 10f9c <sprintf@plt+0x82c>
   10e50:	add	r0, pc, r0
   10e54:	bl	10740 <puts@plt>
   10e58:	ldr	r0, [pc, #320]	; 10fa0 <sprintf@plt+0x830>
   10e5c:	add	r0, pc, r0
   10e60:	bl	10740 <puts@plt>
   10e64:	ldr	r0, [pc, #312]	; 10fa4 <sprintf@plt+0x834>
   10e68:	add	r0, pc, r0
   10e6c:	bl	10740 <puts@plt>
   10e70:	ldr	r0, [pc, #304]	; 10fa8 <sprintf@plt+0x838>
   10e74:	add	r0, pc, r0
   10e78:	bl	10740 <puts@plt>
   10e7c:	ldr	r0, [pc, #296]	; 10fac <sprintf@plt+0x83c>
   10e80:	add	r0, pc, r0
   10e84:	bl	10740 <puts@plt>
   10e88:	ldr	r0, [pc, #288]	; 10fb0 <sprintf@plt+0x840>
   10e8c:	add	r0, pc, r0
   10e90:	bl	10740 <puts@plt>
   10e94:	ldr	r0, [pc, #280]	; 10fb4 <sprintf@plt+0x844>
   10e98:	add	r0, pc, r0
   10e9c:	bl	10740 <puts@plt>
   10ea0:	mov	r0, #0
   10ea4:	bl	10764 <exit@plt>
   10ea8:	ldr	r3, [pc, #112]	; 10f20 <sprintf@plt+0x7b0>
   10eac:	mov	r2, #18
   10eb0:	mov	r1, #1
   10eb4:	ldr	r0, [pc, #252]	; 10fb8 <sprintf@plt+0x848>
   10eb8:	ldr	r3, [r8, r3]
   10ebc:	add	r0, pc, r0
   10ec0:	ldr	r3, [r3]
   10ec4:	bl	10710 <fwrite@plt>
   10ec8:	mov	r0, #1
   10ecc:	b	10a68 <sprintf@plt+0x2f8>
   10ed0:	ldr	r0, [pc, #228]	; 10fbc <sprintf@plt+0x84c>
   10ed4:	add	r0, pc, r0
   10ed8:	bl	10740 <puts@plt>
   10edc:	mov	r0, #1
   10ee0:	bl	10764 <exit@plt>
   10ee4:	ldr	r0, [pc, #212]	; 10fc0 <sprintf@plt+0x850>
   10ee8:	add	r0, pc, r0
   10eec:	bl	10740 <puts@plt>
   10ef0:	mov	r0, #1
   10ef4:	bl	10764 <exit@plt>
   10ef8:	muleq	r0, r4, lr
   10efc:	muleq	r0, r8, lr
   10f00:	andeq	r1, r1, r4, lsr r8
   10f04:	andeq	r0, r0, ip, rrx
   10f08:	strdeq	r0, [r0], -r8
   10f0c:	andeq	r0, r0, r8, lsr sp
   10f10:	andeq	r1, r1, r0, asr r6
   10f14:	andeq	r0, r0, r0, lsr ip
   10f18:	andeq	r0, r0, r4, lsr #26
   10f1c:	andeq	r0, r0, ip, lsl sp
   10f20:	andeq	r0, r0, r8, rrx
   10f24:	andeq	r0, r0, r8, ror #25
   10f28:	andeq	r0, r0, r8, lsr #24
   10f2c:	andeq	r0, r0, r0, ror fp
   10f30:	andeq	r1, r1, r4, lsl r5
   10f34:	andeq	r0, r0, ip, asr #23
   10f38:			; <UNDEFINED> instruction: 0x00000bb8
   10f3c:	muleq	r1, ip, r4
   10f40:	andeq	r1, r1, r0, asr #8
   10f44:	andeq	r0, r0, ip, lsr #22
   10f48:	strdeq	r1, [r1], -r8
   10f4c:	andeq	r0, r0, r0, asr #21
   10f50:	andeq	r0, r0, r8, lsl #20
   10f54:	andeq	r1, r1, r0, lsr #7
   10f58:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10f5c:	andeq	r0, r0, ip, lsl #21
   10f60:	muleq	r0, r0, sl
   10f64:	andeq	r1, r1, r8, lsr #6
   10f68:	andeq	r1, r1, ip, ror #5
   10f6c:	andeq	r0, r0, r0, lsl r5
   10f70:	andeq	r0, r0, r0, asr r5
   10f74:	andeq	r0, r0, r4, ror #10
   10f78:	andeq	r0, r0, r8, ror r5
   10f7c:	andeq	r0, r0, r8, lsl #11
   10f80:	muleq	r0, ip, r5
   10f84:	andeq	r0, r0, r8, asr #11
   10f88:	strdeq	r0, [r0], -r4
   10f8c:	andeq	r0, r0, r4, lsl r6
   10f90:	andeq	r0, r0, r0, asr #12
   10f94:	andeq	r0, r0, r0, asr r6
   10f98:	andeq	r0, r0, ip, ror #12
   10f9c:	andeq	r0, r0, ip, ror r6
   10fa0:	muleq	r0, r4, r6
   10fa4:	andeq	r0, r0, ip, asr #13
   10fa8:	andeq	r0, r0, r0, lsl #14
   10fac:	andeq	r0, r0, r4, lsr r7
   10fb0:	andeq	r0, r0, r8, ror #14
   10fb4:	andeq	r0, r0, r4, lsl #15
   10fb8:	strdeq	r0, [r0], -ip
   10fbc:	andeq	r0, r0, r4, lsl #16
   10fc0:	andeq	r0, r0, ip, ror r7
   10fc4:	mov	fp, #0
   10fc8:	mov	lr, #0
   10fcc:	pop	{r1}		; (ldr r1, [sp], #4)
   10fd0:	mov	r2, sp
   10fd4:	push	{r2}		; (str r2, [sp, #-4]!)
   10fd8:	push	{r0}		; (str r0, [sp, #-4]!)
   10fdc:	ldr	ip, [pc, #16]	; 10ff4 <sprintf@plt+0x884>
   10fe0:	push	{ip}		; (str ip, [sp, #-4]!)
   10fe4:	ldr	r0, [pc, #12]	; 10ff8 <sprintf@plt+0x888>
   10fe8:	ldr	r3, [pc, #12]	; 10ffc <sprintf@plt+0x88c>
   10fec:	bl	10698 <__libc_start_main@plt>
   10ff0:	bl	10680 <abort@plt>
   10ff4:	andeq	r1, r1, r0, ror r2
   10ff8:	andeq	r0, r1, ip, ror r7
   10ffc:	andeq	r1, r1, r0, lsl r2
   11000:	ldr	r3, [pc, #20]	; 1101c <sprintf@plt+0x8ac>
   11004:	ldr	r2, [pc, #20]	; 11020 <sprintf@plt+0x8b0>
   11008:	add	r3, pc, r3
   1100c:	ldr	r2, [r3, r2]
   11010:	cmp	r2, #0
   11014:	bxeq	lr
   11018:	b	106a4 <__gmon_start__@plt>
   1101c:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   11020:	andeq	r0, r0, r4, rrx
   11024:	ldr	r0, [pc, #24]	; 11044 <sprintf@plt+0x8d4>
   11028:	ldr	r3, [pc, #24]	; 11048 <sprintf@plt+0x8d8>
   1102c:	cmp	r3, r0
   11030:	bxeq	lr
   11034:	ldr	r3, [pc, #16]	; 1104c <sprintf@plt+0x8dc>
   11038:	cmp	r3, #0
   1103c:	bxeq	lr
   11040:	bx	r3
   11044:	andeq	r2, r2, r8, ror r0
   11048:	andeq	r2, r2, r8, ror r0
   1104c:	andeq	r0, r0, r0
   11050:	ldr	r0, [pc, #36]	; 1107c <sprintf@plt+0x90c>
   11054:	ldr	r1, [pc, #36]	; 11080 <sprintf@plt+0x910>
   11058:	sub	r1, r1, r0
   1105c:	asr	r1, r1, #2
   11060:	add	r1, r1, r1, lsr #31
   11064:	asrs	r1, r1, #1
   11068:	bxeq	lr
   1106c:	ldr	r3, [pc, #16]	; 11084 <sprintf@plt+0x914>
   11070:	cmp	r3, #0
   11074:	bxeq	lr
   11078:	bx	r3
   1107c:	andeq	r2, r2, r8, ror r0
   11080:	andeq	r2, r2, r8, ror r0
   11084:	andeq	r0, r0, r0
   11088:	push	{r4, lr}
   1108c:	ldr	r4, [pc, #24]	; 110ac <sprintf@plt+0x93c>
   11090:	ldrb	r3, [r4]
   11094:	cmp	r3, #0
   11098:	popne	{r4, pc}
   1109c:	bl	11024 <sprintf@plt+0x8b4>
   110a0:	mov	r3, #1
   110a4:	strb	r3, [r4]
   110a8:	pop	{r4, pc}
   110ac:	andeq	r2, r2, r8, ror r0
   110b0:	b	11050 <sprintf@plt+0x8e0>
   110b4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   110b8:	mov	r5, r1
   110bc:	strd	r6, [sp, #8]
   110c0:	mov	r7, r0
   110c4:	mov	r0, #0
   110c8:	str	r8, [sp, #16]
   110cc:	str	lr, [sp, #20]
   110d0:	bl	1071c <time@plt>
   110d4:	bl	1068c <srand@plt>
   110d8:	cmp	r5, #0
   110dc:	ble	11114 <sprintf@plt+0x9a4>
   110e0:	ldr	r6, [pc, #68]	; 1112c <sprintf@plt+0x9bc>
   110e4:	sub	r4, r7, #1
   110e8:	add	r5, r4, r5
   110ec:	add	r6, pc, r6
   110f0:	bl	1074c <rand@plt>
   110f4:	rsbs	r3, r0, #0
   110f8:	and	r0, r0, #63	; 0x3f
   110fc:	and	r3, r3, #63	; 0x3f
   11100:	rsbpl	r0, r3, #0
   11104:	ldrb	r3, [r6, r0]
   11108:	strb	r3, [r4, #1]!
   1110c:	cmp	r4, r5
   11110:	bne	110f0 <sprintf@plt+0x980>
   11114:	mov	r0, r7
   11118:	ldrd	r4, [sp]
   1111c:	ldrd	r6, [sp, #8]
   11120:	ldr	r8, [sp, #16]
   11124:	add	sp, sp, #20
   11128:	pop	{pc}		; (ldr pc, [sp], #4)
   1112c:	andeq	r0, r0, ip, lsl #3
   11130:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11134:	mov	r4, r0
   11138:	ldr	r0, [pc, #200]	; 11208 <sprintf@plt+0xa98>
   1113c:	strd	r6, [sp, #8]
   11140:	mov	r6, r1
   11144:	mov	r1, #0
   11148:	str	r8, [sp, #16]
   1114c:	str	lr, [sp, #20]
   11150:	add	r0, pc, r0
   11154:	bl	10674 <open@plt>
   11158:	subs	r7, r0, #0
   1115c:	mov	r1, r6
   11160:	blt	111ec <sprintf@plt+0xa7c>
   11164:	mov	r0, #1
   11168:	bl	106bc <calloc@plt>
   1116c:	mov	r1, r0
   11170:	mov	r5, r0
   11174:	mov	r2, r6
   11178:	mov	r0, r7
   1117c:	bl	106d4 <read@plt>
   11180:	cmp	r0, r6
   11184:	bne	111e0 <sprintf@plt+0xa70>
   11188:	cmp	r0, #0
   1118c:	ble	111c0 <sprintf@plt+0xa50>
   11190:	ldr	ip, [pc, #116]	; 1120c <sprintf@plt+0xa9c>
   11194:	sub	r0, r0, #1
   11198:	sub	r2, r5, #1
   1119c:	add	r0, r5, r0
   111a0:	sub	r1, r4, #1
   111a4:	add	ip, pc, ip
   111a8:	ldrb	r3, [r2, #1]!
   111ac:	and	r3, r3, #63	; 0x3f
   111b0:	cmp	r2, r0
   111b4:	ldrb	r3, [ip, r3]
   111b8:	strb	r3, [r1, #1]!
   111bc:	bne	111a8 <sprintf@plt+0xa38>
   111c0:	mov	r0, r5
   111c4:	bl	106c8 <free@plt>
   111c8:	mov	r0, r4
   111cc:	ldrd	r4, [sp]
   111d0:	ldrd	r6, [sp, #8]
   111d4:	ldr	r8, [sp, #16]
   111d8:	add	sp, sp, #20
   111dc:	pop	{pc}		; (ldr pc, [sp], #4)
   111e0:	mov	r0, r5
   111e4:	bl	106c8 <free@plt>
   111e8:	mov	r1, r6
   111ec:	mov	r0, r4
   111f0:	ldrd	r4, [sp]
   111f4:	ldrd	r6, [sp, #8]
   111f8:	ldr	r8, [sp, #16]
   111fc:	ldr	lr, [sp, #20]
   11200:	add	sp, sp, #24
   11204:	b	110b4 <sprintf@plt+0x944>
   11208:	andeq	r0, r0, ip, ror #2
   1120c:	ldrdeq	r0, [r0], -r4
   11210:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11214:	mov	r7, r0
   11218:	ldr	r6, [pc, #72]	; 11268 <sprintf@plt+0xaf8>
   1121c:	ldr	r5, [pc, #72]	; 1126c <sprintf@plt+0xafc>
   11220:	add	r6, pc, r6
   11224:	add	r5, pc, r5
   11228:	sub	r6, r6, r5
   1122c:	mov	r8, r1
   11230:	mov	r9, r2
   11234:	bl	10654 <open@plt-0x20>
   11238:	asrs	r6, r6, #2
   1123c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11240:	mov	r4, #0
   11244:	add	r4, r4, #1
   11248:	ldr	r3, [r5], #4
   1124c:	mov	r2, r9
   11250:	mov	r1, r8
   11254:	mov	r0, r7
   11258:	blx	r3
   1125c:	cmp	r6, r4
   11260:	bne	11244 <sprintf@plt+0xad4>
   11264:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11268:	ldrdeq	r0, [r1], -r4
   1126c:	andeq	r0, r1, ip, asr #25
   11270:	bx	lr

Disassembly of section .fini:

00011274 <.fini>:
   11274:	push	{r3, lr}
   11278:	pop	{r3, pc}
