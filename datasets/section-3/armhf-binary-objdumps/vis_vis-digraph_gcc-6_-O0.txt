
../repos/vis/vis-digraph:     file format elf32-littlearm


Disassembly of section .init:

000105b0 <.init>:
   105b0:	push	{r3, lr}
   105b4:	bl	106e4 <tcgetattr@plt+0x48>
   105b8:	pop	{r3, pc}

Disassembly of section .plt:

000105bc <calloc@plt-0x14>:
   105bc:	push	{lr}		; (str lr, [sp, #-4]!)
   105c0:	ldr	lr, [pc, #4]	; 105cc <calloc@plt-0x4>
   105c4:	add	lr, pc, lr
   105c8:	ldr	pc, [lr, #8]!
   105cc:	ldrdeq	r6, [r2], -r4

000105d0 <calloc@plt>:
   105d0:	add	ip, pc, #0, 12
   105d4:	add	ip, ip, #155648	; 0x26000
   105d8:	ldr	pc, [ip, #2516]!	; 0x9d4

000105dc <strcmp@plt>:
   105dc:	add	ip, pc, #0, 12
   105e0:	add	ip, ip, #155648	; 0x26000
   105e4:	ldr	pc, [ip, #2508]!	; 0x9cc

000105e8 <read@plt>:
   105e8:	add	ip, pc, #0, 12
   105ec:	add	ip, ip, #155648	; 0x26000
   105f0:	ldr	pc, [ip, #2500]!	; 0x9c4

000105f4 <__stack_chk_fail@plt>:
   105f4:	add	ip, pc, #0, 12
   105f8:	add	ip, ip, #155648	; 0x26000
   105fc:	ldr	pc, [ip, #2492]!	; 0x9bc

00010600 <wprintf@plt>:
   10600:	add	ip, pc, #0, 12
   10604:	add	ip, ip, #155648	; 0x26000
   10608:	ldr	pc, [ip, #2484]!	; 0x9b4

0001060c <perror@plt>:
   1060c:	add	ip, pc, #0, 12
   10610:	add	ip, ip, #155648	; 0x26000
   10614:	ldr	pc, [ip, #2476]!	; 0x9ac

00010618 <putwchar@plt>:
   10618:	add	ip, pc, #0, 12
   1061c:	add	ip, ip, #155648	; 0x26000
   10620:	ldr	pc, [ip, #2468]!	; 0x9a4

00010624 <fwrite@plt>:
   10624:	add	ip, pc, #0, 12
   10628:	add	ip, ip, #155648	; 0x26000
   1062c:	ldr	pc, [ip, #2460]!	; 0x99c

00010630 <tcsetattr@plt>:
   10630:	add	ip, pc, #0, 12
   10634:	add	ip, ip, #155648	; 0x26000
   10638:	ldr	pc, [ip, #2452]!	; 0x994

0001063c <__libc_start_main@plt>:
   1063c:	add	ip, pc, #0, 12
   10640:	add	ip, ip, #155648	; 0x26000
   10644:	ldr	pc, [ip, #2444]!	; 0x98c

00010648 <__gmon_start__@plt>:
   10648:	add	ip, pc, #0, 12
   1064c:	add	ip, ip, #155648	; 0x26000
   10650:	ldr	pc, [ip, #2436]!	; 0x984

00010654 <strlen@plt>:
   10654:	add	ip, pc, #0, 12
   10658:	add	ip, ip, #155648	; 0x26000
   1065c:	ldr	pc, [ip, #2428]!	; 0x97c

00010660 <fprintf@plt>:
   10660:	add	ip, pc, #0, 12
   10664:	add	ip, ip, #155648	; 0x26000
   10668:	ldr	pc, [ip, #2420]!	; 0x974

0001066c <__errno_location@plt>:
   1066c:	add	ip, pc, #0, 12
   10670:	add	ip, ip, #155648	; 0x26000
   10674:	ldr	pc, [ip, #2412]!	; 0x96c

00010678 <setlocale@plt>:
   10678:	add	ip, pc, #0, 12
   1067c:	add	ip, ip, #155648	; 0x26000
   10680:	ldr	pc, [ip, #2404]!	; 0x964

00010684 <strncmp@plt>:
   10684:	add	ip, pc, #0, 12
   10688:	add	ip, ip, #155648	; 0x26000
   1068c:	ldr	pc, [ip, #2396]!	; 0x95c

00010690 <abort@plt>:
   10690:	add	ip, pc, #0, 12
   10694:	add	ip, ip, #155648	; 0x26000
   10698:	ldr	pc, [ip, #2388]!	; 0x954

0001069c <tcgetattr@plt>:
   1069c:	add	ip, pc, #0, 12
   106a0:	add	ip, ip, #155648	; 0x26000
   106a4:	ldr	pc, [ip, #2380]!	; 0x94c

Disassembly of section .text:

000106a8 <.text>:
   106a8:	mov	fp, #0
   106ac:	mov	lr, #0
   106b0:	pop	{r1}		; (ldr r1, [sp], #4)
   106b4:	mov	r2, sp
   106b8:	push	{r2}		; (str r2, [sp, #-4]!)
   106bc:	push	{r0}		; (str r0, [sp, #-4]!)
   106c0:	ldr	ip, [pc, #16]	; 106d8 <tcgetattr@plt+0x3c>
   106c4:	push	{ip}		; (str ip, [sp, #-4]!)
   106c8:	ldr	r0, [pc, #12]	; 106dc <tcgetattr@plt+0x40>
   106cc:	ldr	r3, [pc, #12]	; 106e0 <tcgetattr@plt+0x44>
   106d0:	bl	1063c <__libc_start_main@plt>
   106d4:	bl	10690 <abort@plt>
   106d8:	andeq	r0, r1, r4, lsl pc
   106dc:	andeq	r0, r1, ip, lsr fp
   106e0:			; <UNDEFINED> instruction: 0x00010eb4
   106e4:	ldr	r3, [pc, #20]	; 10700 <tcgetattr@plt+0x64>
   106e8:	ldr	r2, [pc, #20]	; 10704 <tcgetattr@plt+0x68>
   106ec:	add	r3, pc, r3
   106f0:	ldr	r2, [r3, r2]
   106f4:	cmp	r2, #0
   106f8:	bxeq	lr
   106fc:	b	10648 <__gmon_start__@plt>
   10700:	andeq	r6, r2, ip, lsr #17
   10704:	andeq	r0, r0, ip, asr r0
   10708:	ldr	r3, [pc, #28]	; 1072c <tcgetattr@plt+0x90>
   1070c:	ldr	r0, [pc, #28]	; 10730 <tcgetattr@plt+0x94>
   10710:	sub	r3, r3, r0
   10714:	cmp	r3, #6
   10718:	bxls	lr
   1071c:	ldr	r3, [pc, #16]	; 10734 <tcgetattr@plt+0x98>
   10720:	cmp	r3, #0
   10724:	bxeq	lr
   10728:	bx	r3
   1072c:	andeq	r7, r3, r3
   10730:	andeq	r7, r3, r0
   10734:	andeq	r0, r0, r0
   10738:	ldr	r1, [pc, #36]	; 10764 <tcgetattr@plt+0xc8>
   1073c:	ldr	r0, [pc, #36]	; 10768 <tcgetattr@plt+0xcc>
   10740:	sub	r1, r1, r0
   10744:	asr	r1, r1, #2
   10748:	add	r1, r1, r1, lsr #31
   1074c:	asrs	r1, r1, #1
   10750:	bxeq	lr
   10754:	ldr	r3, [pc, #16]	; 1076c <tcgetattr@plt+0xd0>
   10758:	cmp	r3, #0
   1075c:	bxeq	lr
   10760:	bx	r3
   10764:	andeq	r7, r3, r0
   10768:	andeq	r7, r3, r0
   1076c:	andeq	r0, r0, r0
   10770:	push	{r4, lr}
   10774:	ldr	r4, [pc, #24]	; 10794 <tcgetattr@plt+0xf8>
   10778:	ldrb	r3, [r4]
   1077c:	cmp	r3, #0
   10780:	popne	{r4, pc}
   10784:	bl	10708 <tcgetattr@plt+0x6c>
   10788:	mov	r3, #1
   1078c:	strb	r3, [r4]
   10790:	pop	{r4, pc}
   10794:	andeq	r7, r3, r0
   10798:	ldr	r0, [pc, #40]	; 107c8 <tcgetattr@plt+0x12c>
   1079c:	ldr	r3, [r0]
   107a0:	cmp	r3, #0
   107a4:	bne	107ac <tcgetattr@plt+0x110>
   107a8:	b	10738 <tcgetattr@plt+0x9c>
   107ac:	ldr	r3, [pc, #24]	; 107cc <tcgetattr@plt+0x130>
   107b0:	cmp	r3, #0
   107b4:	beq	107a8 <tcgetattr@plt+0x10c>
   107b8:	push	{r4, lr}
   107bc:	blx	r3
   107c0:	pop	{r4, lr}
   107c4:	b	10738 <tcgetattr@plt+0x9c>
   107c8:	andeq	pc, r2, ip, lsr #16
   107cc:	andeq	r0, r0, r0
   107d0:	push	{r4, fp, lr}
   107d4:	add	fp, sp, #8
   107d8:	sub	sp, sp, #28
   107dc:	str	r0, [fp, #-32]	; 0xffffffe0
   107e0:	str	r1, [fp, #-36]	; 0xffffffdc
   107e4:	ldr	r4, [pc, #204]	; 108b8 <tcgetattr@plt+0x21c>
   107e8:	add	r4, pc, r4
   107ec:	ldr	r3, [pc, #200]	; 108bc <tcgetattr@plt+0x220>
   107f0:	ldr	r3, [r4, r3]
   107f4:	ldr	r3, [r3]
   107f8:	str	r3, [fp, #-16]
   107fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10800:	bl	10654 <strlen@plt>
   10804:	str	r0, [fp, #-20]	; 0xffffffec
   10808:	ldr	r3, [pc, #176]	; 108c0 <tcgetattr@plt+0x224>
   1080c:	add	r3, pc, r3
   10810:	str	r3, [fp, #-24]	; 0xffffffe8
   10814:	b	1087c <tcgetattr@plt+0x1e0>
   10818:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1081c:	ldr	r2, [fp, #-20]	; 0xffffffec
   10820:	mov	r1, r3
   10824:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10828:	bl	10684 <strncmp@plt>
   1082c:	mov	r3, r0
   10830:	cmp	r3, #0
   10834:	bne	10870 <tcgetattr@plt+0x1d4>
   10838:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1083c:	ldr	r2, [r3, #8]
   10840:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10844:	str	r2, [r3]
   10848:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1084c:	ldr	r3, [fp, #-20]	; 0xffffffec
   10850:	add	r3, r2, r3
   10854:	ldrb	r3, [r3]
   10858:	cmp	r3, #0
   1085c:	bne	10868 <tcgetattr@plt+0x1cc>
   10860:	mov	r3, #1
   10864:	b	10890 <tcgetattr@plt+0x1f4>
   10868:	mvn	r3, #0
   1086c:	b	10890 <tcgetattr@plt+0x1f4>
   10870:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10874:	add	r3, r3, #16
   10878:	str	r3, [fp, #-24]	; 0xffffffe8
   1087c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10880:	ldrb	r3, [r3]
   10884:	cmp	r3, #0
   10888:	bne	10818 <tcgetattr@plt+0x17c>
   1088c:	mov	r3, #0
   10890:	mov	r0, r3
   10894:	ldr	r3, [pc, #32]	; 108bc <tcgetattr@plt+0x220>
   10898:	ldr	r3, [r4, r3]
   1089c:	ldr	r2, [fp, #-16]
   108a0:	ldr	r3, [r3]
   108a4:	cmp	r2, r3
   108a8:	beq	108b0 <tcgetattr@plt+0x214>
   108ac:	bl	105f4 <__stack_chk_fail@plt>
   108b0:	sub	sp, fp, #8
   108b4:	pop	{r4, fp, pc}
   108b8:			; <UNDEFINED> instruction: 0x000267b0
   108bc:	andeq	r0, r0, r4, asr r0
   108c0:	andeq	pc, r1, ip, lsl r0	; <UNPREDICTABLE>
   108c4:	push	{r4, fp, lr}
   108c8:	add	fp, sp, #8
   108cc:	sub	sp, sp, #12
   108d0:	ldr	r4, [pc, #292]	; 109fc <tcgetattr@plt+0x360>
   108d4:	add	r4, pc, r4
   108d8:	ldr	r3, [pc, #288]	; 10a00 <tcgetattr@plt+0x364>
   108dc:	ldr	r3, [r4, r3]
   108e0:	ldr	r3, [r3]
   108e4:	str	r3, [fp, #-16]
   108e8:	ldr	r3, [pc, #276]	; 10a04 <tcgetattr@plt+0x368>
   108ec:	add	r3, pc, r3
   108f0:	mov	r1, r3
   108f4:	mov	r0, #0
   108f8:	bl	1069c <tcgetattr@plt>
   108fc:	ldr	r2, [pc, #260]	; 10a08 <tcgetattr@plt+0x36c>
   10900:	add	r2, pc, r2
   10904:	ldr	r3, [pc, #256]	; 10a0c <tcgetattr@plt+0x370>
   10908:	add	r3, pc, r3
   1090c:	mov	ip, r2
   10910:	mov	lr, r3
   10914:	ldm	lr!, {r0, r1, r2, r3}
   10918:	stmia	ip!, {r0, r1, r2, r3}
   1091c:	ldm	lr!, {r0, r1, r2, r3}
   10920:	stmia	ip!, {r0, r1, r2, r3}
   10924:	ldm	lr!, {r0, r1, r2, r3}
   10928:	stmia	ip!, {r0, r1, r2, r3}
   1092c:	ldm	lr, {r0, r1, r2}
   10930:	stm	ip, {r0, r1, r2}
   10934:	ldr	r3, [pc, #212]	; 10a10 <tcgetattr@plt+0x374>
   10938:	add	r3, pc, r3
   1093c:	ldr	r3, [r3]
   10940:	bic	r3, r3, #1504	; 0x5e0
   10944:	bic	r3, r3, #10
   10948:	ldr	r2, [pc, #196]	; 10a14 <tcgetattr@plt+0x378>
   1094c:	add	r2, pc, r2
   10950:	str	r3, [r2]
   10954:	ldr	r3, [pc, #188]	; 10a18 <tcgetattr@plt+0x37c>
   10958:	add	r3, pc, r3
   1095c:	ldr	r3, [r3, #12]
   10960:	bic	r3, r3, #32768	; 0x8000
   10964:	bic	r3, r3, #75	; 0x4b
   10968:	ldr	r2, [pc, #172]	; 10a1c <tcgetattr@plt+0x380>
   1096c:	add	r2, pc, r2
   10970:	str	r3, [r2, #12]
   10974:	ldr	r3, [pc, #164]	; 10a20 <tcgetattr@plt+0x384>
   10978:	add	r3, pc, r3
   1097c:	ldr	r3, [r3, #8]
   10980:	bic	r2, r3, #304	; 0x130
   10984:	ldr	r3, [pc, #152]	; 10a24 <tcgetattr@plt+0x388>
   10988:	add	r3, pc, r3
   1098c:	str	r2, [r3, #8]
   10990:	ldr	r3, [pc, #144]	; 10a28 <tcgetattr@plt+0x38c>
   10994:	add	r3, pc, r3
   10998:	ldr	r3, [r3, #8]
   1099c:	orr	r2, r3, #48	; 0x30
   109a0:	ldr	r3, [pc, #132]	; 10a2c <tcgetattr@plt+0x390>
   109a4:	add	r3, pc, r3
   109a8:	str	r2, [r3, #8]
   109ac:	ldr	r3, [pc, #124]	; 10a30 <tcgetattr@plt+0x394>
   109b0:	add	r3, pc, r3
   109b4:	mov	r2, #1
   109b8:	strb	r2, [r3, #23]
   109bc:	ldr	r3, [pc, #112]	; 10a34 <tcgetattr@plt+0x398>
   109c0:	add	r3, pc, r3
   109c4:	mov	r2, r3
   109c8:	mov	r1, #0
   109cc:	mov	r0, #0
   109d0:	bl	10630 <tcsetattr@plt>
   109d4:	nop			; (mov r0, r0)
   109d8:	ldr	r3, [pc, #32]	; 10a00 <tcgetattr@plt+0x364>
   109dc:	ldr	r3, [r4, r3]
   109e0:	ldr	r2, [fp, #-16]
   109e4:	ldr	r3, [r3]
   109e8:	cmp	r2, r3
   109ec:	beq	109f4 <tcgetattr@plt+0x358>
   109f0:	bl	105f4 <__stack_chk_fail@plt>
   109f4:	sub	sp, fp, #8
   109f8:	pop	{r4, fp, pc}
   109fc:	andeq	r6, r2, r4, asr #13
   10a00:	andeq	r0, r0, r4, asr r0
   10a04:	andeq	r6, r2, r0, lsl r7
   10a08:	andeq	r6, r2, r8, lsr r7
   10a0c:	strdeq	r6, [r2], -r4
   10a10:	andeq	r6, r2, r0, lsl #14
   10a14:	andeq	r6, r2, ip, ror #13
   10a18:	andeq	r6, r2, r0, ror #13
   10a1c:	andeq	r6, r2, ip, asr #13
   10a20:	andeq	r6, r2, r0, asr #13
   10a24:			; <UNDEFINED> instruction: 0x000266b0
   10a28:	andeq	r6, r2, r4, lsr #13
   10a2c:	muleq	r2, r4, r6
   10a30:	andeq	r6, r2, r8, lsl #13
   10a34:	andeq	r6, r2, r8, ror r6
   10a38:	push	{r4, fp, lr}
   10a3c:	add	fp, sp, #8
   10a40:	sub	sp, sp, #12
   10a44:	ldr	r4, [pc, #80]	; 10a9c <tcgetattr@plt+0x400>
   10a48:	add	r4, pc, r4
   10a4c:	ldr	r3, [pc, #76]	; 10aa0 <tcgetattr@plt+0x404>
   10a50:	ldr	r3, [r4, r3]
   10a54:	ldr	r3, [r3]
   10a58:	str	r3, [fp, #-16]
   10a5c:	ldr	r3, [pc, #64]	; 10aa4 <tcgetattr@plt+0x408>
   10a60:	add	r3, pc, r3
   10a64:	mov	r2, r3
   10a68:	mov	r1, #0
   10a6c:	mov	r0, #0
   10a70:	bl	10630 <tcsetattr@plt>
   10a74:	nop			; (mov r0, r0)
   10a78:	ldr	r3, [pc, #32]	; 10aa0 <tcgetattr@plt+0x404>
   10a7c:	ldr	r3, [r4, r3]
   10a80:	ldr	r2, [fp, #-16]
   10a84:	ldr	r3, [r3]
   10a88:	cmp	r2, r3
   10a8c:	beq	10a94 <tcgetattr@plt+0x3f8>
   10a90:	bl	105f4 <__stack_chk_fail@plt>
   10a94:	sub	sp, fp, #8
   10a98:	pop	{r4, fp, pc}
   10a9c:	andeq	r6, r2, r0, asr r5
   10aa0:	andeq	r0, r0, r4, asr r0
   10aa4:	muleq	r2, ip, r5
   10aa8:	push	{r4, fp, lr}
   10aac:	add	fp, sp, #8
   10ab0:	sub	sp, sp, #20
   10ab4:	str	r0, [fp, #-24]	; 0xffffffe8
   10ab8:	ldr	r4, [pc, #116]	; 10b34 <tcgetattr@plt+0x498>
   10abc:	add	r4, pc, r4
   10ac0:	ldr	r3, [pc, #112]	; 10b38 <tcgetattr@plt+0x49c>
   10ac4:	ldr	r3, [r4, r3]
   10ac8:	ldr	r3, [r3]
   10acc:	str	r3, [fp, #-16]
   10ad0:	mov	r2, #1
   10ad4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10ad8:	mov	r0, #0
   10adc:	bl	105e8 <read@plt>
   10ae0:	str	r0, [fp, #-20]	; 0xffffffec
   10ae4:	ldr	r3, [fp, #-20]	; 0xffffffec
   10ae8:	cmn	r3, #1
   10aec:	bne	10b08 <tcgetattr@plt+0x46c>
   10af0:	bl	1066c <__errno_location@plt>
   10af4:	mov	r3, r0
   10af8:	ldr	r3, [r3]
   10afc:	cmp	r3, #4
   10b00:	bne	10b08 <tcgetattr@plt+0x46c>
   10b04:	b	10ad0 <tcgetattr@plt+0x434>
   10b08:	ldr	r3, [fp, #-20]	; 0xffffffec
   10b0c:	mov	r0, r3
   10b10:	ldr	r3, [pc, #32]	; 10b38 <tcgetattr@plt+0x49c>
   10b14:	ldr	r3, [r4, r3]
   10b18:	ldr	r2, [fp, #-16]
   10b1c:	ldr	r3, [r3]
   10b20:	cmp	r2, r3
   10b24:	beq	10b2c <tcgetattr@plt+0x490>
   10b28:	bl	105f4 <__stack_chk_fail@plt>
   10b2c:	sub	sp, fp, #8
   10b30:	pop	{r4, fp, pc}
   10b34:	ldrdeq	r6, [r2], -ip
   10b38:	andeq	r0, r0, r4, asr r0
   10b3c:	push	{r4, fp, lr}
   10b40:	add	fp, sp, #8
   10b44:	sub	sp, sp, #60	; 0x3c
   10b48:	str	r0, [fp, #-64]	; 0xffffffc0
   10b4c:	str	r1, [fp, #-68]	; 0xffffffbc
   10b50:	ldr	r4, [pc, #820]	; 10e8c <tcgetattr@plt+0x7f0>
   10b54:	add	r4, pc, r4
   10b58:	ldr	r3, [pc, #816]	; 10e90 <tcgetattr@plt+0x7f4>
   10b5c:	ldr	r3, [r4, r3]
   10b60:	ldr	r3, [r3]
   10b64:	str	r3, [fp, #-16]
   10b68:	ldr	r3, [pc, #804]	; 10e94 <tcgetattr@plt+0x7f8>
   10b6c:	add	r3, pc, r3
   10b70:	mov	r1, r3
   10b74:	mov	r0, #6
   10b78:	bl	10678 <setlocale@plt>
   10b7c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   10b80:	cmp	r3, #1
   10b84:	bne	10bdc <tcgetattr@plt+0x540>
   10b88:	ldr	r3, [pc, #776]	; 10e98 <tcgetattr@plt+0x7fc>
   10b8c:	add	r3, pc, r3
   10b90:	str	r3, [fp, #-56]	; 0xffffffc8
   10b94:	b	10bc4 <tcgetattr@plt+0x528>
   10b98:	ldr	r1, [fp, #-56]	; 0xffffffc8
   10b9c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   10ba0:	ldr	r2, [r3, #8]
   10ba4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   10ba8:	ldr	r3, [r3, #12]
   10bac:	ldr	r0, [pc, #744]	; 10e9c <tcgetattr@plt+0x800>
   10bb0:	add	r0, pc, r0
   10bb4:	bl	10600 <wprintf@plt>
   10bb8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   10bbc:	add	r3, r3, #16
   10bc0:	str	r3, [fp, #-56]	; 0xffffffc8
   10bc4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   10bc8:	ldrb	r3, [r3]
   10bcc:	cmp	r3, #0
   10bd0:	bne	10b98 <tcgetattr@plt+0x4fc>
   10bd4:	mov	r3, #0
   10bd8:	b	10e64 <tcgetattr@plt+0x7c8>
   10bdc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   10be0:	add	r3, r3, #4
   10be4:	ldr	r3, [r3]
   10be8:	ldr	r2, [pc, #688]	; 10ea0 <tcgetattr@plt+0x804>
   10bec:	add	r2, pc, r2
   10bf0:	mov	r1, r2
   10bf4:	mov	r0, r3
   10bf8:	bl	105dc <strcmp@plt>
   10bfc:	mov	r3, r0
   10c00:	cmp	r3, #0
   10c04:	bne	10d28 <tcgetattr@plt+0x68c>
   10c08:	bl	108c4 <tcgetattr@plt+0x228>
   10c0c:	mov	r3, #0
   10c10:	str	r3, [fp, #-24]	; 0xffffffe8
   10c14:	mov	r3, #0
   10c18:	str	r3, [fp, #-20]	; 0xffffffec
   10c1c:	mov	r3, #0
   10c20:	str	r3, [fp, #-52]	; 0xffffffcc
   10c24:	b	10d10 <tcgetattr@plt+0x674>
   10c28:	sub	r2, fp, #24
   10c2c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   10c30:	add	r3, r2, r3
   10c34:	mov	r0, r3
   10c38:	bl	10aa8 <tcgetattr@plt+0x40c>
   10c3c:	str	r0, [fp, #-40]	; 0xffffffd8
   10c40:	ldr	r3, [fp, #-40]	; 0xffffffd8
   10c44:	cmn	r3, #1
   10c48:	bne	10c78 <tcgetattr@plt+0x5dc>
   10c4c:	bl	10a38 <tcgetattr@plt+0x39c>
   10c50:	ldr	r3, [pc, #588]	; 10ea4 <tcgetattr@plt+0x808>
   10c54:	ldr	r3, [r4, r3]
   10c58:	ldr	r3, [r3]
   10c5c:	mov	r2, #9
   10c60:	mov	r1, #1
   10c64:	ldr	r0, [pc, #572]	; 10ea8 <tcgetattr@plt+0x80c>
   10c68:	add	r0, pc, r0
   10c6c:	bl	10624 <fwrite@plt>
   10c70:	mov	r3, #3
   10c74:	b	10e64 <tcgetattr@plt+0x7c8>
   10c78:	sub	r2, fp, #60	; 0x3c
   10c7c:	sub	r3, fp, #24
   10c80:	mov	r1, r2
   10c84:	mov	r0, r3
   10c88:	bl	107d0 <tcgetattr@plt+0x134>
   10c8c:	str	r0, [fp, #-36]	; 0xffffffdc
   10c90:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10c94:	cmp	r3, #0
   10c98:	beq	10cb4 <tcgetattr@plt+0x618>
   10c9c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10ca0:	cmn	r3, #1
   10ca4:	bne	10ce0 <tcgetattr@plt+0x644>
   10ca8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   10cac:	cmp	r3, #0
   10cb0:	bne	10ce0 <tcgetattr@plt+0x644>
   10cb4:	bl	10a38 <tcgetattr@plt+0x39c>
   10cb8:	ldr	r3, [pc, #484]	; 10ea4 <tcgetattr@plt+0x808>
   10cbc:	ldr	r3, [r4, r3]
   10cc0:	ldr	r3, [r3]
   10cc4:	sub	r2, fp, #24
   10cc8:	ldr	r1, [pc, #476]	; 10eac <tcgetattr@plt+0x810>
   10ccc:	add	r1, pc, r1
   10cd0:	mov	r0, r3
   10cd4:	bl	10660 <fprintf@plt>
   10cd8:	mov	r3, #1
   10cdc:	b	10e64 <tcgetattr@plt+0x7c8>
   10ce0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10ce4:	cmp	r3, #1
   10ce8:	bne	10d04 <tcgetattr@plt+0x668>
   10cec:	bl	10a38 <tcgetattr@plt+0x39c>
   10cf0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   10cf4:	mov	r0, r3
   10cf8:	bl	10618 <putwchar@plt>
   10cfc:	mov	r3, #0
   10d00:	b	10e64 <tcgetattr@plt+0x7c8>
   10d04:	ldr	r3, [fp, #-52]	; 0xffffffcc
   10d08:	add	r3, r3, #1
   10d0c:	str	r3, [fp, #-52]	; 0xffffffcc
   10d10:	ldr	r3, [fp, #-52]	; 0xffffffcc
   10d14:	cmp	r3, #6
   10d18:	bls	10c28 <tcgetattr@plt+0x58c>
   10d1c:	bl	10a38 <tcgetattr@plt+0x39c>
   10d20:	mov	r3, #1
   10d24:	b	10e64 <tcgetattr@plt+0x7c8>
   10d28:	ldr	r3, [fp, #-64]	; 0xffffffc0
   10d2c:	sub	r3, r3, #1
   10d30:	mov	r1, #4
   10d34:	mov	r0, r3
   10d38:	bl	105d0 <calloc@plt>
   10d3c:	mov	r3, r0
   10d40:	str	r3, [fp, #-32]	; 0xffffffe0
   10d44:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10d48:	cmp	r3, #0
   10d4c:	bne	10d60 <tcgetattr@plt+0x6c4>
   10d50:	mov	r0, #0
   10d54:	bl	1060c <perror@plt>
   10d58:	mov	r3, #1
   10d5c:	b	10e64 <tcgetattr@plt+0x7c8>
   10d60:	mov	r3, #1
   10d64:	str	r3, [fp, #-48]	; 0xffffffd0
   10d68:	b	10e08 <tcgetattr@plt+0x76c>
   10d6c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   10d70:	lsl	r3, r3, #2
   10d74:	ldr	r2, [fp, #-68]	; 0xffffffbc
   10d78:	add	r3, r2, r3
   10d7c:	ldr	r0, [r3]
   10d80:	ldr	r3, [fp, #-48]	; 0xffffffd0
   10d84:	sub	r3, r3, #-1073741823	; 0xc0000001
   10d88:	lsl	r3, r3, #2
   10d8c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   10d90:	add	r3, r2, r3
   10d94:	mov	r1, r3
   10d98:	bl	107d0 <tcgetattr@plt+0x134>
   10d9c:	str	r0, [fp, #-28]	; 0xffffffe4
   10da0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10da4:	cmp	r3, #0
   10da8:	bne	10de8 <tcgetattr@plt+0x74c>
   10dac:	ldr	r3, [pc, #240]	; 10ea4 <tcgetattr@plt+0x808>
   10db0:	ldr	r3, [r4, r3]
   10db4:	ldr	r0, [r3]
   10db8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   10dbc:	lsl	r3, r3, #2
   10dc0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   10dc4:	add	r3, r2, r3
   10dc8:	ldr	r3, [r3]
   10dcc:	mov	r2, r3
   10dd0:	ldr	r3, [pc, #216]	; 10eb0 <tcgetattr@plt+0x814>
   10dd4:	add	r3, pc, r3
   10dd8:	mov	r1, r3
   10ddc:	bl	10660 <fprintf@plt>
   10de0:	mov	r3, #1
   10de4:	b	10e64 <tcgetattr@plt+0x7c8>
   10de8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10dec:	cmn	r3, #1
   10df0:	bne	10dfc <tcgetattr@plt+0x760>
   10df4:	mov	r3, #2
   10df8:	b	10e64 <tcgetattr@plt+0x7c8>
   10dfc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   10e00:	add	r3, r3, #1
   10e04:	str	r3, [fp, #-48]	; 0xffffffd0
   10e08:	ldr	r2, [fp, #-48]	; 0xffffffd0
   10e0c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   10e10:	cmp	r2, r3
   10e14:	blt	10d6c <tcgetattr@plt+0x6d0>
   10e18:	mov	r3, #0
   10e1c:	str	r3, [fp, #-44]	; 0xffffffd4
   10e20:	b	10e4c <tcgetattr@plt+0x7b0>
   10e24:	ldr	r3, [fp, #-44]	; 0xffffffd4
   10e28:	lsl	r3, r3, #2
   10e2c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   10e30:	add	r3, r2, r3
   10e34:	ldr	r3, [r3]
   10e38:	mov	r0, r3
   10e3c:	bl	10618 <putwchar@plt>
   10e40:	ldr	r3, [fp, #-44]	; 0xffffffd4
   10e44:	add	r3, r3, #1
   10e48:	str	r3, [fp, #-44]	; 0xffffffd4
   10e4c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   10e50:	sub	r2, r3, #1
   10e54:	ldr	r3, [fp, #-44]	; 0xffffffd4
   10e58:	cmp	r2, r3
   10e5c:	bgt	10e24 <tcgetattr@plt+0x788>
   10e60:	mov	r3, #0
   10e64:	mov	r0, r3
   10e68:	ldr	r3, [pc, #32]	; 10e90 <tcgetattr@plt+0x7f4>
   10e6c:	ldr	r3, [r4, r3]
   10e70:	ldr	r2, [fp, #-16]
   10e74:	ldr	r3, [r3]
   10e78:	cmp	r2, r3
   10e7c:	beq	10e84 <tcgetattr@plt+0x7e8>
   10e80:	bl	105f4 <__stack_chk_fail@plt>
   10e84:	sub	sp, fp, #8
   10e88:	pop	{r4, fp, pc}
   10e8c:	andeq	r6, r2, r4, asr #8
   10e90:	andeq	r0, r0, r4, asr r0
   10e94:	andeq	lr, r0, ip, lsl #2
   10e98:	muleq	r1, ip, ip
   10e9c:	andeq	lr, r0, ip, asr #1
   10ea0:	strheq	lr, [r0], -ip
   10ea4:	andeq	r0, r0, r8, asr r0
   10ea8:	andeq	lr, r0, r4, asr #32
   10eac:	andeq	sp, r0, ip, ror #31
   10eb0:	andeq	sp, r0, r4, ror #29
   10eb4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10eb8:	mov	r7, r0
   10ebc:	ldr	r6, [pc, #72]	; 10f0c <tcgetattr@plt+0x870>
   10ec0:	ldr	r5, [pc, #72]	; 10f10 <tcgetattr@plt+0x874>
   10ec4:	add	r6, pc, r6
   10ec8:	add	r5, pc, r5
   10ecc:	sub	r6, r6, r5
   10ed0:	mov	r8, r1
   10ed4:	mov	r9, r2
   10ed8:	bl	105b0 <calloc@plt-0x20>
   10edc:	asrs	r6, r6, #2
   10ee0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10ee4:	mov	r4, #0
   10ee8:	add	r4, r4, #1
   10eec:	ldr	r3, [r5], #4
   10ef0:	mov	r2, r9
   10ef4:	mov	r1, r8
   10ef8:	mov	r0, r7
   10efc:	blx	r3
   10f00:	cmp	r6, r4
   10f04:	bne	10ee8 <tcgetattr@plt+0x84c>
   10f08:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10f0c:	andeq	lr, r1, ip, asr r9
   10f10:	andeq	lr, r1, r4, asr r9
   10f14:	bx	lr

Disassembly of section .fini:

00010f18 <.fini>:
   10f18:	push	{r3, lr}
   10f1c:	pop	{r3, pc}
