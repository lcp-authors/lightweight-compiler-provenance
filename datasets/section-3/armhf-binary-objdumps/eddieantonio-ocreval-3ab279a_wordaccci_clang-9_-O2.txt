
../repos/eddieantonio-ocreval-3ab279a/wordaccci/wordaccci:     file format elf32-littlearm


Disassembly of section .init:

00010848 <.init>:
   10848:	push	{r3, lr}
   1084c:	bl	109dc <abort@plt+0x48>
   10850:	pop	{r3, pc}

Disassembly of section .plt:

00010854 <calloc@plt-0x14>:
   10854:	push	{lr}		; (str lr, [sp, #-4]!)
   10858:	ldr	lr, [pc, #4]	; 10864 <calloc@plt-0x4>
   1085c:	add	lr, pc, lr
   10860:	ldr	pc, [lr, #8]!
   10864:	muleq	r1, ip, r7

00010868 <calloc@plt>:
   10868:	add	ip, pc, #0, 12
   1086c:	add	ip, ip, #73728	; 0x12000
   10870:	ldr	pc, [ip, #1948]!	; 0x79c

00010874 <strcmp@plt>:
   10874:	add	ip, pc, #0, 12
   10878:	add	ip, ip, #73728	; 0x12000
   1087c:	ldr	pc, [ip, #1940]!	; 0x794

00010880 <strtol@plt>:
   10880:	add	ip, pc, #0, 12
   10884:	add	ip, ip, #73728	; 0x12000
   10888:	ldr	pc, [ip, #1932]!	; 0x78c

0001088c <printf@plt>:
   1088c:	add	ip, pc, #0, 12
   10890:	add	ip, ip, #73728	; 0x12000
   10894:	ldr	pc, [ip, #1924]!	; 0x784

00010898 <fopen@plt>:
   10898:	add	ip, pc, #0, 12
   1089c:	add	ip, ip, #73728	; 0x12000
   108a0:	ldr	pc, [ip, #1916]!	; 0x77c

000108a4 <free@plt>:
   108a4:	add	ip, pc, #0, 12
   108a8:	add	ip, ip, #73728	; 0x12000
   108ac:	ldr	pc, [ip, #1908]!	; 0x774

000108b0 <fgets@plt>:
   108b0:	add	ip, pc, #0, 12
   108b4:	add	ip, ip, #73728	; 0x12000
   108b8:	ldr	pc, [ip, #1900]!	; 0x76c

000108bc <strdup@plt>:
   108bc:	add	ip, pc, #0, 12
   108c0:	add	ip, ip, #73728	; 0x12000
   108c4:	ldr	pc, [ip, #1892]!	; 0x764

000108c8 <unlink@plt>:
   108c8:	add	ip, pc, #0, 12
   108cc:	add	ip, ip, #73728	; 0x12000
   108d0:	ldr	pc, [ip, #1884]!	; 0x75c

000108d4 <__xstat@plt>:
   108d4:	add	ip, pc, #0, 12
   108d8:	add	ip, ip, #73728	; 0x12000
   108dc:	ldr	pc, [ip, #1876]!	; 0x754

000108e0 <fwrite@plt>:
   108e0:	add	ip, pc, #0, 12
   108e4:	add	ip, ip, #73728	; 0x12000
   108e8:	ldr	pc, [ip, #1868]!	; 0x74c

000108ec <__libc_start_main@plt>:
   108ec:	add	ip, pc, #0, 12
   108f0:	add	ip, ip, #73728	; 0x12000
   108f4:	ldr	pc, [ip, #1860]!	; 0x744

000108f8 <__sysv_signal@plt>:
   108f8:	add	ip, pc, #0, 12
   108fc:	add	ip, ip, #73728	; 0x12000
   10900:	ldr	pc, [ip, #1852]!	; 0x73c

00010904 <__gmon_start__@plt>:
   10904:	add	ip, pc, #0, 12
   10908:	add	ip, ip, #73728	; 0x12000
   1090c:	ldr	pc, [ip, #1844]!	; 0x734

00010910 <getpid@plt>:
   10910:	add	ip, pc, #0, 12
   10914:	add	ip, ip, #73728	; 0x12000
   10918:	ldr	pc, [ip, #1836]!	; 0x72c

0001091c <exit@plt>:
   1091c:	add	ip, pc, #0, 12
   10920:	add	ip, ip, #73728	; 0x12000
   10924:	ldr	pc, [ip, #1828]!	; 0x724

00010928 <bcmp@plt>:
   10928:	add	ip, pc, #0, 12
   1092c:	add	ip, ip, #73728	; 0x12000
   10930:	ldr	pc, [ip, #1820]!	; 0x71c

00010934 <strlen@plt>:
   10934:	add	ip, pc, #0, 12
   10938:	add	ip, ip, #73728	; 0x12000
   1093c:	ldr	pc, [ip, #1812]!	; 0x714

00010940 <fprintf@plt>:
   10940:	add	ip, pc, #0, 12
   10944:	add	ip, ip, #73728	; 0x12000
   10948:	ldr	pc, [ip, #1804]!	; 0x70c

0001094c <sqrt@plt>:
   1094c:	add	ip, pc, #0, 12
   10950:	add	ip, ip, #73728	; 0x12000
   10954:	ldr	pc, [ip, #1796]!	; 0x704

00010958 <__isoc99_sscanf@plt>:
   10958:	add	ip, pc, #0, 12
   1095c:	add	ip, ip, #73728	; 0x12000
   10960:	ldr	pc, [ip, #1788]!	; 0x6fc

00010964 <fclose@plt>:
   10964:	add	ip, pc, #0, 12
   10968:	add	ip, ip, #73728	; 0x12000
   1096c:	ldr	pc, [ip, #1780]!	; 0x6f4

00010970 <fputc@plt>:
   10970:	add	ip, pc, #0, 12
   10974:	add	ip, ip, #73728	; 0x12000
   10978:	ldr	pc, [ip, #1772]!	; 0x6ec

0001097c <sprintf@plt>:
   1097c:	add	ip, pc, #0, 12
   10980:	add	ip, ip, #73728	; 0x12000
   10984:	ldr	pc, [ip, #1764]!	; 0x6e4

00010988 <strncmp@plt>:
   10988:	add	ip, pc, #0, 12
   1098c:	add	ip, ip, #73728	; 0x12000
   10990:	ldr	pc, [ip, #1756]!	; 0x6dc

00010994 <abort@plt>:
   10994:	add	ip, pc, #0, 12
   10998:	add	ip, ip, #73728	; 0x12000
   1099c:	ldr	pc, [ip, #1748]!	; 0x6d4

Disassembly of section .text:

000109a0 <error@@Base-0x9cc>:
   109a0:	mov	fp, #0
   109a4:	mov	lr, #0
   109a8:	pop	{r1}		; (ldr r1, [sp], #4)
   109ac:	mov	r2, sp
   109b0:	push	{r2}		; (str r2, [sp, #-4]!)
   109b4:	push	{r0}		; (str r0, [sp, #-4]!)
   109b8:	ldr	ip, [pc, #16]	; 109d0 <abort@plt+0x3c>
   109bc:	push	{ip}		; (str ip, [sp, #-4]!)
   109c0:	ldr	r0, [pc, #12]	; 109d4 <abort@plt+0x40>
   109c4:	ldr	r3, [pc, #12]	; 109d8 <abort@plt+0x44>
   109c8:	bl	108ec <__libc_start_main@plt>
   109cc:	bl	10994 <abort@plt>
   109d0:	andeq	r2, r1, r0, asr #19
   109d4:	andeq	r0, r1, r0, asr #23
   109d8:	andeq	r2, r1, r0, ror #18
   109dc:	ldr	r3, [pc, #20]	; 109f8 <abort@plt+0x64>
   109e0:	ldr	r2, [pc, #20]	; 109fc <abort@plt+0x68>
   109e4:	add	r3, pc, r3
   109e8:	ldr	r2, [r3, r2]
   109ec:	cmp	r2, #0
   109f0:	bxeq	lr
   109f4:	b	10904 <__gmon_start__@plt>
   109f8:	andeq	r2, r1, r4, lsl r6
   109fc:	andeq	r0, r0, r0, lsl #1
   10a00:	ldr	r0, [pc, #24]	; 10a20 <abort@plt+0x8c>
   10a04:	ldr	r3, [pc, #24]	; 10a24 <abort@plt+0x90>
   10a08:	cmp	r3, r0
   10a0c:	bxeq	lr
   10a10:	ldr	r3, [pc, #16]	; 10a28 <abort@plt+0x94>
   10a14:	cmp	r3, #0
   10a18:	bxeq	lr
   10a1c:	bx	r3
   10a20:	strheq	r3, [r2], -r0
   10a24:	strheq	r3, [r2], -r0
   10a28:	andeq	r0, r0, r0
   10a2c:	ldr	r0, [pc, #36]	; 10a58 <abort@plt+0xc4>
   10a30:	ldr	r1, [pc, #36]	; 10a5c <abort@plt+0xc8>
   10a34:	sub	r1, r1, r0
   10a38:	asr	r1, r1, #2
   10a3c:	add	r1, r1, r1, lsr #31
   10a40:	asrs	r1, r1, #1
   10a44:	bxeq	lr
   10a48:	ldr	r3, [pc, #16]	; 10a60 <abort@plt+0xcc>
   10a4c:	cmp	r3, #0
   10a50:	bxeq	lr
   10a54:	bx	r3
   10a58:	strheq	r3, [r2], -r0
   10a5c:	strheq	r3, [r2], -r0
   10a60:	andeq	r0, r0, r0
   10a64:	push	{r4, lr}
   10a68:	ldr	r4, [pc, #24]	; 10a88 <abort@plt+0xf4>
   10a6c:	ldrb	r3, [r4]
   10a70:	cmp	r3, #0
   10a74:	popne	{r4, pc}
   10a78:	bl	10a00 <abort@plt+0x6c>
   10a7c:	mov	r3, #1
   10a80:	strb	r3, [r4]
   10a84:	pop	{r4, pc}
   10a88:	strheq	r3, [r2], -r0
   10a8c:	b	10a2c <abort@plt+0x98>
   10a90:	push	{r4, r5, r6, sl, fp, lr}
   10a94:	add	fp, sp, #16
   10a98:	ldr	r4, [pc, #44]	; 10acc <abort@plt+0x138>
   10a9c:	mov	r1, r0
   10aa0:	ldr	r4, [pc, r4]
   10aa4:	ldm	r4, {r5, r6}
   10aa8:	mov	r0, r4
   10aac:	bl	11618 <error@@Base+0x2ac>
   10ab0:	ldm	r4, {r0, r2}
   10ab4:	sub	r2, r2, r6
   10ab8:	sub	r1, r0, r5
   10abc:	ldr	r0, [pc, #12]	; 10ad0 <abort@plt+0x13c>
   10ac0:	ldr	r0, [pc, r0]
   10ac4:	pop	{r4, r5, r6, sl, fp, lr}
   10ac8:	b	10c68 <abort@plt+0x2d4>
   10acc:	andeq	r2, r1, r0, ror #11
   10ad0:	andeq	r2, r1, r4, asr #11
   10ad4:	nop	{0}
   10ad8:	push	{r4, sl, fp, lr}
   10adc:	add	fp, sp, #8
   10ae0:	sub	sp, sp, #32
   10ae4:	ldr	r4, [pc, #180]	; 10ba0 <abort@plt+0x20c>
   10ae8:	sub	r1, fp, #16
   10aec:	add	r2, sp, #16
   10af0:	ldr	r4, [pc, r4]
   10af4:	mov	r0, r4
   10af8:	bl	10cb8 <abort@plt+0x324>
   10afc:	ldr	r1, [r4, #12]
   10b00:	ldr	r0, [pc, #156]	; 10ba4 <abort@plt+0x210>
   10b04:	add	r0, pc, r0
   10b08:	bl	1088c <printf@plt>
   10b0c:	ldr	r4, [pc, #148]	; 10ba8 <abort@plt+0x214>
   10b10:	ldr	r4, [pc, r4]
   10b14:	ldr	r1, [r4]
   10b18:	ldr	r0, [pc, #140]	; 10bac <abort@plt+0x218>
   10b1c:	add	r0, pc, r0
   10b20:	bl	1088c <printf@plt>
   10b24:	ldr	r1, [r4, #4]
   10b28:	ldr	r0, [pc, #128]	; 10bb0 <abort@plt+0x21c>
   10b2c:	add	r0, pc, r0
   10b30:	bl	1088c <printf@plt>
   10b34:	ldm	r4, {r0, r1}
   10b38:	vldr	d16, [pc, #88]	; 10b98 <abort@plt+0x204>
   10b3c:	sub	r1, r0, r1
   10b40:	vmov	s2, r0
   10b44:	vmov	s0, r1
   10b48:	vcvt.f64.s32	d17, s0
   10b4c:	vcvt.f64.s32	d18, s2
   10b50:	ldr	r0, [pc, #92]	; 10bb4 <abort@plt+0x220>
   10b54:	add	r0, pc, r0
   10b58:	vmul.f64	d16, d17, d16
   10b5c:	vdiv.f64	d16, d16, d18
   10b60:	vmov	r2, r3, d16
   10b64:	bl	1088c <printf@plt>
   10b68:	vldr	d16, [fp, #-16]
   10b6c:	vldr	d17, [sp, #16]
   10b70:	ldr	r0, [pc, #64]	; 10bb8 <abort@plt+0x224>
   10b74:	add	r0, pc, r0
   10b78:	str	r0, [sp, #8]
   10b7c:	vstr	d17, [sp]
   10b80:	vmov	r2, r3, d16
   10b84:	ldr	r0, [pc, #48]	; 10bbc <abort@plt+0x228>
   10b88:	add	r0, pc, r0
   10b8c:	bl	1088c <printf@plt>
   10b90:	sub	sp, fp, #8
   10b94:	pop	{r4, sl, fp, pc}
   10b98:	andeq	r0, r0, r0
   10b9c:	subsmi	r0, r9, r0
   10ba0:	muleq	r1, r4, r5
   10ba4:	andeq	r1, r0, r4, asr #29
   10ba8:	andeq	r2, r1, r0, ror r5
   10bac:	andeq	r1, r0, r2, asr #29
   10bb0:	andeq	r1, r0, r1, asr #29
   10bb4:			; <UNDEFINED> instruction: 0x00001eb0
   10bb8:			; <UNDEFINED> instruction: 0x00001eb9
   10bbc:	muleq	r0, r0, lr
   10bc0:	push	{fp, lr}
   10bc4:	mov	fp, sp
   10bc8:	sub	sp, sp, #8
   10bcc:	str	r0, [sp, #4]
   10bd0:	add	r0, sp, #4
   10bd4:	mov	r3, #0
   10bd8:	mov	r9, r1
   10bdc:	mov	r7, #0
   10be0:	ldr	r2, [pc, #108]	; 10c54 <abort@plt+0x2c0>
   10be4:	add	r2, pc, r2
   10be8:	bl	110e4 <abort@plt+0x750>
   10bec:	ldr	r0, [sp, #4]
   10bf0:	cmp	r0, #2
   10bf4:	blt	10c48 <abort@plt+0x2b4>
   10bf8:	ldr	r5, [pc, #88]	; 10c58 <abort@plt+0x2c4>
   10bfc:	ldr	r5, [pc, r5]
   10c00:	ldr	r8, [pc, #84]	; 10c5c <abort@plt+0x2c8>
   10c04:	ldr	r8, [pc, r8]
   10c08:	ldr	r1, [r9, r7, lsl #2]
   10c0c:	ldr	r6, [r5]
   10c10:	ldr	r4, [r5, #4]
   10c14:	mov	r0, r5
   10c18:	bl	11618 <error@@Base+0x2ac>
   10c1c:	ldm	r5, {r0, r2}
   10c20:	sub	r2, r2, r4
   10c24:	sub	r1, r0, r6
   10c28:	mov	r0, r8
   10c2c:	bl	10c68 <abort@plt+0x2d4>
   10c30:	ldr	r0, [sp, #4]
   10c34:	add	r7, r7, #1
   10c38:	cmp	r7, r0
   10c3c:	blt	10c08 <abort@plt+0x274>
   10c40:	bl	10ad8 <abort@plt+0x144>
   10c44:	bl	11328 <abort@plt+0x994>
   10c48:	ldr	r0, [pc, #16]	; 10c60 <abort@plt+0x2cc>
   10c4c:	add	r0, pc, r0
   10c50:	bl	1136c <error@@Base>
   10c54:	andeq	r1, r0, sl, ror lr
   10c58:	andeq	r2, r1, r4, lsl #9
   10c5c:	andeq	r2, r1, r0, lsl #9
   10c60:	andeq	r1, r0, r2, asr #28
   10c64:	andeq	r0, r0, r0
   10c68:	push	{r4, r5, r6, sl, fp, lr}
   10c6c:	add	fp, sp, #16
   10c70:	mov	r6, r1
   10c74:	mov	r4, r0
   10c78:	mov	r0, #1
   10c7c:	mov	r1, #32
   10c80:	mov	r5, r2
   10c84:	bl	10e9c <abort@plt+0x508>
   10c88:	mov	r1, r0
   10c8c:	str	r6, [r1, #8]
   10c90:	str	r5, [r1, #12]
   10c94:	ldr	r0, [r4, #24]
   10c98:	ldr	r3, [r4, #28]
   10c9c:	add	r0, r0, r6
   10ca0:	add	r3, r3, r5
   10ca4:	str	r0, [r4, #24]
   10ca8:	str	r3, [r4, #28]
   10cac:	mov	r0, r4
   10cb0:	pop	{r4, r5, r6, sl, fp, lr}
   10cb4:	b	122c4 <error@@Base+0xf58>
   10cb8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   10cbc:	add	fp, sp, #24
   10cc0:	vpush	{d8}
   10cc4:	mov	r5, r0
   10cc8:	ldr	r0, [r0]
   10ccc:	cmp	r0, #0
   10cd0:	beq	10e7c <abort@plt+0x4e8>
   10cd4:	mov	r8, r2
   10cd8:	mov	r9, r1
   10cdc:	mov	r1, #0
   10ce0:	mov	r2, r0
   10ce4:	ldr	r3, [r2, #4]
   10ce8:	ldr	r2, [r2, #8]
   10cec:	cmp	r2, #0
   10cf0:	mov	r2, r3
   10cf4:	addgt	r1, r1, #1
   10cf8:	cmp	r3, #0
   10cfc:	bne	10ce4 <abort@plt+0x350>
   10d00:	cmp	r1, #1
   10d04:	bls	10e7c <abort@plt+0x4e8>
   10d08:	ldrd	r2, [r5, #24]
   10d0c:	ldr	r1, [r5, #12]
   10d10:	vldr	d8, [pc, #368]	; 10e88 <abort@plt+0x4f4>
   10d14:	vmov.i32	d19, #0	; 0x00000000
   10d18:	sub	r4, r2, r3
   10d1c:	vmov	s2, r2
   10d20:	vmov	s0, r4
   10d24:	sub	r4, r1, #1
   10d28:	vcvt.f64.s32	d16, s0
   10d2c:	vcvt.f64.s32	d17, s2
   10d30:	vmov	s0, r1
   10d34:	mov	r1, r0
   10d38:	vmul.f64	d18, d16, d8
   10d3c:	vcvt.f64.s32	d16, s0
   10d40:	vmov	s0, r4
   10d44:	vdiv.f64	d20, d18, d17
   10d48:	vcvt.f64.s32	d17, s0
   10d4c:	vmul.f64	d18, d20, d16
   10d50:	vstr	d20, [r5, #32]
   10d54:	ldr	r6, [r1, #12]
   10d58:	ldmib	r1, {r4, r7}
   10d5c:	sub	r7, r2, r7
   10d60:	vmov	s2, r7
   10d64:	cmp	r4, #0
   10d68:	sub	r6, r6, r3
   10d6c:	add	r6, r6, r7
   10d70:	vmov	s0, r6
   10d74:	vcvt.f64.s32	d20, s0
   10d78:	vcvt.f64.s32	d21, s2
   10d7c:	vmul.f64	d20, d20, d8
   10d80:	vdiv.f64	d20, d20, d21
   10d84:	vmov.f64	d21, d18
   10d88:	vmls.f64	d21, d20, d17
   10d8c:	vstr	d20, [r1, #16]
   10d90:	vadd.f64	d19, d19, d20
   10d94:	vstr	d21, [r1, #24]
   10d98:	mov	r1, r4
   10d9c:	bne	10d54 <abort@plt+0x3c0>
   10da0:	vmul.f64	d19, d19, d17
   10da4:	vdiv.f64	d19, d19, d16
   10da8:	vsub.f64	d19, d18, d19
   10dac:	vmov.i32	d18, #0	; 0x00000000
   10db0:	vstr	d19, [r5, #40]	; 0x28
   10db4:	vldr	d20, [r0, #24]
   10db8:	ldr	r0, [r0, #4]
   10dbc:	cmp	r0, #0
   10dc0:	vsub.f64	d20, d20, d19
   10dc4:	vmla.f64	d18, d20, d20
   10dc8:	bne	10db4 <abort@plt+0x420>
   10dcc:	vdiv.f64	d17, d18, d17
   10dd0:	vdiv.f64	d16, d17, d16
   10dd4:	vsqrt.f64	d0, d16
   10dd8:	vcmpe.f64	d0, d0
   10ddc:	vmrs	APSR_nzcv, fpscr
   10de0:	bvc	10dec <abort@plt+0x458>
   10de4:	vmov.f64	d0, d16
   10de8:	bl	1094c <sqrt@plt>
   10dec:	vldr	d16, [pc, #156]	; 10e90 <abort@plt+0x4fc>
   10df0:	vldr	d17, [r5, #40]	; 0x28
   10df4:	vmov.i32	d18, #0	; 0x00000000
   10df8:	vmov.f64	d20, d8
   10dfc:	vmul.f64	d16, d0, d16
   10e00:	vsub.f64	d17, d17, d16
   10e04:	vcmpe.f64	d17, d8
   10e08:	vmrs	APSR_nzcv, fpscr
   10e0c:	vcmpe.f64	d17, #0.0
   10e10:	vselgt.f64	d19, d8, d18
   10e14:	vmrs	APSR_nzcv, fpscr
   10e18:	vcmpe.f64	d17, d8
   10e1c:	vmovmi.f64	d20, d19
   10e20:	vmrs	APSR_nzcv, fpscr
   10e24:	vcmpe.f64	d17, #0.0
   10e28:	vselgt.f64	d19, d20, d17
   10e2c:	vmrs	APSR_nzcv, fpscr
   10e30:	vmovmi.f64	d19, d20
   10e34:	vstr	d19, [r9]
   10e38:	vldr	d17, [r5, #40]	; 0x28
   10e3c:	vadd.f64	d16, d16, d17
   10e40:	vcmpe.f64	d16, d8
   10e44:	vmrs	APSR_nzcv, fpscr
   10e48:	vcmpe.f64	d16, #0.0
   10e4c:	vselgt.f64	d17, d8, d18
   10e50:	vmrs	APSR_nzcv, fpscr
   10e54:	vcmpe.f64	d16, d8
   10e58:	vmovmi.f64	d8, d17
   10e5c:	vmrs	APSR_nzcv, fpscr
   10e60:	vcmpe.f64	d16, #0.0
   10e64:	vselgt.f64	d17, d8, d16
   10e68:	vmrs	APSR_nzcv, fpscr
   10e6c:	vmovmi.f64	d17, d8
   10e70:	vstr	d17, [r8]
   10e74:	vpop	{d8}
   10e78:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   10e7c:	ldr	r0, [pc, #20]	; 10e98 <abort@plt+0x504>
   10e80:	add	r0, pc, r0
   10e84:	bl	1136c <error@@Base>
   10e88:	andeq	r0, r0, r0
   10e8c:	subsmi	r0, r9, r0
   10e90:			; <UNDEFINED> instruction: 0xf5c28f5c
   10e94:	svccc	0x00ff5c28
   10e98:	andeq	r1, r0, r5, lsr #24
   10e9c:	push	{fp, lr}
   10ea0:	mov	fp, sp
   10ea4:	bl	10868 <calloc@plt>
   10ea8:	cmp	r0, #0
   10eac:	popne	{fp, pc}
   10eb0:	ldr	r0, [pc, #4]	; 10ebc <abort@plt+0x528>
   10eb4:	add	r0, pc, r0
   10eb8:	bl	1136c <error@@Base>
   10ebc:	andeq	r1, r0, r9, lsl #24
   10ec0:	push	{r4, r5, r6, sl, fp, lr}
   10ec4:	add	fp, sp, #16
   10ec8:	ldrb	r3, [r0]
   10ecc:	ldrb	ip, [r1]
   10ed0:	mov	r2, r0
   10ed4:	mov	r0, #0
   10ed8:	cmp	r3, #0
   10edc:	beq	10f1c <abort@plt+0x588>
   10ee0:	add	r6, r2, #1
   10ee4:	add	lr, r1, #1
   10ee8:	mov	r2, #0
   10eec:	uxtb	r4, ip
   10ef0:	uxtb	r5, r3
   10ef4:	cmp	r5, r4
   10ef8:	bne	10f2c <abort@plt+0x598>
   10efc:	ldrb	r3, [r6, r2]
   10f00:	ldrb	ip, [lr, r2]
   10f04:	add	r2, r2, #1
   10f08:	cmp	r3, #0
   10f0c:	bne	10eec <abort@plt+0x558>
   10f10:	cmp	ip, #0
   10f14:	bne	10f28 <abort@plt+0x594>
   10f18:	pop	{r4, r5, r6, sl, fp, pc}
   10f1c:	mov	r2, #0
   10f20:	cmp	ip, #0
   10f24:	beq	10f18 <abort@plt+0x584>
   10f28:	mov	r3, #0
   10f2c:	ldrb	r1, [r1, r2]
   10f30:	uxtb	r2, r3
   10f34:	mov	r0, #1
   10f38:	cmp	r2, r1
   10f3c:	mvncc	r0, #0
   10f40:	pop	{r4, r5, r6, sl, fp, pc}
   10f44:	push	{r4, r5, fp, lr}
   10f48:	add	fp, sp, #8
   10f4c:	mov	r5, r1
   10f50:	cmp	r0, #0
   10f54:	beq	10f88 <abort@plt+0x5f4>
   10f58:	mov	r1, r5
   10f5c:	mov	r4, r0
   10f60:	bl	10898 <fopen@plt>
   10f64:	cmp	r0, #0
   10f68:	popne	{r4, r5, fp, pc}
   10f6c:	ldrb	r0, [r5]
   10f70:	cmp	r0, #119	; 0x77
   10f74:	bne	10fac <abort@plt+0x618>
   10f78:	ldr	r0, [pc, #72]	; 10fc8 <abort@plt+0x634>
   10f7c:	mov	r1, r4
   10f80:	add	r0, pc, r0
   10f84:	bl	113bc <error@@Base+0x50>
   10f88:	ldrb	r0, [r5]
   10f8c:	ldr	r1, [pc, #40]	; 10fbc <abort@plt+0x628>
   10f90:	ldr	r1, [pc, r1]
   10f94:	ldr	r2, [pc, #36]	; 10fc0 <abort@plt+0x62c>
   10f98:	cmp	r0, #114	; 0x72
   10f9c:	ldr	r2, [pc, r2]
   10fa0:	moveq	r2, r1
   10fa4:	ldr	r0, [r2]
   10fa8:	pop	{r4, r5, fp, pc}
   10fac:	ldr	r0, [pc, #16]	; 10fc4 <abort@plt+0x630>
   10fb0:	mov	r1, r4
   10fb4:	add	r0, pc, r0
   10fb8:	bl	113bc <error@@Base+0x50>
   10fbc:	strdeq	r2, [r1], -ip
   10fc0:	strdeq	r2, [r1], -r4
   10fc4:	andeq	r1, r0, r9, lsr fp
   10fc8:	andeq	r1, r0, r7, asr fp
   10fcc:	ldr	r1, [pc, #40]	; 10ffc <abort@plt+0x668>
   10fd0:	ldr	r1, [pc, r1]
   10fd4:	ldr	r1, [r1]
   10fd8:	cmp	r1, r0
   10fdc:	bxeq	lr
   10fe0:	ldr	r1, [pc, #24]	; 11000 <abort@plt+0x66c>
   10fe4:	ldr	r1, [pc, r1]
   10fe8:	ldr	r1, [r1]
   10fec:	cmp	r1, r0
   10ff0:	beq	10ff8 <abort@plt+0x664>
   10ff4:	b	10964 <fclose@plt>
   10ff8:	bx	lr
   10ffc:	strheq	r2, [r1], -ip
   11000:	andeq	r2, r1, ip, lsr #1
   11004:	push	{fp, lr}
   11008:	mov	fp, sp
   1100c:	sub	sp, sp, #88	; 0x58
   11010:	mov	r1, r0
   11014:	mov	r2, sp
   11018:	mov	r0, #3
   1101c:	bl	108d4 <__xstat@plt>
   11020:	clz	r0, r0
   11024:	lsr	r0, r0, #5
   11028:	mov	sp, fp
   1102c:	pop	{fp, pc}
   11030:	push	{r4, r5, fp, lr}
   11034:	add	fp, sp, #8
   11038:	sub	sp, sp, #104	; 0x68
   1103c:	ldr	r0, [pc, #92]	; 110a0 <abort@plt+0x70c>
   11040:	add	r0, pc, r0
   11044:	ldrh	r1, [r0]
   11048:	add	r5, r1, #1
   1104c:	strh	r5, [r0]
   11050:	ldr	r0, [pc, #76]	; 110a4 <abort@plt+0x710>
   11054:	ldr	r0, [pc, r0]
   11058:	ldr	r4, [r0]
   1105c:	bl	10910 <getpid@plt>
   11060:	mov	r3, r0
   11064:	sxth	r0, r5
   11068:	add	r5, sp, #4
   1106c:	mov	r2, r4
   11070:	str	r0, [sp]
   11074:	mov	r0, r5
   11078:	ldr	r1, [pc, #40]	; 110a8 <abort@plt+0x714>
   1107c:	add	r1, pc, r1
   11080:	bl	1097c <sprintf@plt>
   11084:	mov	r0, r5
   11088:	bl	108bc <strdup@plt>
   1108c:	mov	r4, r0
   11090:	bl	108c8 <unlink@plt>
   11094:	mov	r0, r4
   11098:	sub	sp, fp, #8
   1109c:	pop	{r4, r5, fp, pc}
   110a0:	andeq	r2, r1, sl, rrx
   110a4:	andeq	r2, r1, r8, lsr #32
   110a8:	muleq	r0, sl, sl
   110ac:	push	{r4, sl, fp, lr}
   110b0:	add	fp, sp, #8
   110b4:	mov	r4, r0
   110b8:	bl	10934 <strlen@plt>
   110bc:	sub	r0, r0, #1
   110c0:	sxth	r0, r0
   110c4:	cmp	r0, #0
   110c8:	bmi	110d8 <abort@plt+0x744>
   110cc:	ldrb	r1, [r4, r0]
   110d0:	cmp	r1, #47	; 0x2f
   110d4:	bne	110bc <abort@plt+0x728>
   110d8:	add	r0, r0, r4
   110dc:	add	r0, r0, #1
   110e0:	pop	{r4, sl, fp, pc}
   110e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   110e8:	add	fp, sp, #28
   110ec:	sub	sp, sp, #12
   110f0:	stmib	sp, {r0, r1}
   110f4:	mov	r6, r3
   110f8:	str	r2, [sp]
   110fc:	ldr	r4, [r1]
   11100:	mov	r0, r4
   11104:	bl	10934 <strlen@plt>
   11108:	sub	r0, r0, #1
   1110c:	sxth	r0, r0
   11110:	cmp	r0, #0
   11114:	bmi	11124 <abort@plt+0x790>
   11118:	ldrb	r1, [r4, r0]
   1111c:	cmp	r1, #47	; 0x2f
   11120:	bne	11108 <abort@plt+0x774>
   11124:	ldr	r1, [pc, #484]	; 11310 <abort@plt+0x97c>
   11128:	add	r0, r0, r4
   1112c:	add	r0, r0, #1
   11130:	ldr	r1, [pc, r1]
   11134:	str	r0, [r1]
   11138:	mov	r0, #2
   1113c:	ldr	r4, [pc, #464]	; 11314 <abort@plt+0x980>
   11140:	add	r4, pc, r4
   11144:	mov	r1, r4
   11148:	bl	108f8 <__sysv_signal@plt>
   1114c:	mov	r0, #15
   11150:	mov	r1, r4
   11154:	bl	108f8 <__sysv_signal@plt>
   11158:	ldr	r0, [sp, #4]
   1115c:	ldr	r5, [r0]
   11160:	cmp	r5, #1
   11164:	bne	1117c <abort@plt+0x7e8>
   11168:	ldr	r0, [pc, #424]	; 11318 <abort@plt+0x984>
   1116c:	ldr	r0, [pc, r0]
   11170:	ldrb	r0, [r0]
   11174:	cmp	r0, #0
   11178:	bne	112f8 <abort@plt+0x964>
   1117c:	ldr	ip, [sp, #8]
   11180:	mov	r8, #0
   11184:	cmp	r5, #2
   11188:	blt	112d4 <abort@plt+0x940>
   1118c:	mov	r8, #0
   11190:	mov	r7, #1
   11194:	mov	r9, #1
   11198:	ldr	r4, [ip, r7, lsl #2]
   1119c:	ldrb	r0, [r4]
   111a0:	cmp	r0, #45	; 0x2d
   111a4:	bne	1127c <abort@plt+0x8e8>
   111a8:	ldrb	sl, [r4, #1]
   111ac:	cmp	sl, #0
   111b0:	beq	1127c <abort@plt+0x8e8>
   111b4:	mov	r0, r4
   111b8:	bl	10934 <strlen@plt>
   111bc:	mov	r2, r0
   111c0:	ldr	r0, [pc, #340]	; 1131c <abort@plt+0x988>
   111c4:	mov	r1, r4
   111c8:	add	r0, pc, r0
   111cc:	bl	10988 <strncmp@plt>
   111d0:	cmp	r0, #0
   111d4:	beq	112f8 <abort@plt+0x964>
   111d8:	ldr	ip, [sp, #8]
   111dc:	add	r1, r7, #1
   111e0:	mov	r0, #0
   111e4:	cmp	r1, r5
   111e8:	ldrlt	r0, [ip, r1, lsl #2]
   111ec:	cmp	r6, #0
   111f0:	ldrbne	r2, [r6]
   111f4:	cmpne	r2, #0
   111f8:	beq	112e8 <abort@plt+0x954>
   111fc:	mov	r1, #0
   11200:	cmp	sl, r2
   11204:	beq	1122c <abort@plt+0x898>
   11208:	mov	r2, #1
   1120c:	sxth	r1, r2
   11210:	add	r3, r1, r1, lsl #1
   11214:	ldrb	r3, [r6, r3, lsl #2]
   11218:	cmp	r3, #0
   1121c:	beq	112e8 <abort@plt+0x954>
   11220:	add	r2, r2, #1
   11224:	cmp	sl, r3
   11228:	bne	1120c <abort@plt+0x878>
   1122c:	add	r1, r1, r1, lsl #1
   11230:	add	r3, r6, r1, lsl #2
   11234:	ldr	r1, [r3, #4]
   11238:	cmp	r1, #0
   1123c:	beq	1129c <abort@plt+0x908>
   11240:	mov	r2, r4
   11244:	cmp	r0, #0
   11248:	ldrb	r7, [r2, #2]!
   1124c:	cmpeq	r7, #0
   11250:	beq	1129c <abort@plt+0x908>
   11254:	ldr	r3, [r1]
   11258:	cmp	r3, #0
   1125c:	bne	11300 <abort@plt+0x96c>
   11260:	cmp	r7, #0
   11264:	movne	r0, r2
   11268:	str	r0, [r1]
   1126c:	ldrb	r0, [r2]
   11270:	cmp	r0, #0
   11274:	addeq	r9, r9, #1
   11278:	b	11288 <abort@plt+0x8f4>
   1127c:	sxth	r0, r8
   11280:	add	r8, r8, #1
   11284:	str	r4, [ip, r0, lsl #2]
   11288:	add	r9, r9, #1
   1128c:	sxth	r7, r9
   11290:	cmp	r5, r7
   11294:	bgt	11198 <abort@plt+0x804>
   11298:	b	112d4 <abort@plt+0x940>
   1129c:	ldr	r0, [r3, #8]
   112a0:	cmp	r0, #0
   112a4:	beq	112e8 <abort@plt+0x954>
   112a8:	ldrb	r1, [r4, #2]
   112ac:	cmp	r1, #0
   112b0:	bne	112e8 <abort@plt+0x954>
   112b4:	ldrb	r1, [r0]
   112b8:	cmp	r1, #0
   112bc:	bne	11300 <abort@plt+0x96c>
   112c0:	mov	r1, #1
   112c4:	strb	r1, [r0]
   112c8:	ldr	r0, [sp, #4]
   112cc:	ldr	r5, [r0]
   112d0:	b	11288 <abort@plt+0x8f4>
   112d4:	ldr	r1, [sp, #4]
   112d8:	sxth	r0, r8
   112dc:	str	r0, [r1]
   112e0:	sub	sp, fp, #28
   112e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   112e8:	ldr	r0, [pc, #52]	; 11324 <abort@plt+0x990>
   112ec:	mov	r1, r4
   112f0:	add	r0, pc, r0
   112f4:	bl	113bc <error@@Base+0x50>
   112f8:	ldr	r0, [sp]
   112fc:	bl	11498 <error@@Base+0x12c>
   11300:	ldr	r0, [pc, #24]	; 11320 <abort@plt+0x98c>
   11304:	mov	r1, r4
   11308:	add	r0, pc, r0
   1130c:	bl	113bc <error@@Base+0x50>
   11310:	andeq	r1, r1, ip, asr #30
   11314:	andeq	r0, r0, r8, lsl r3
   11318:	andeq	r1, r1, r0, lsl #30
   1131c:	andeq	r1, r0, fp, ror #18
   11320:	andeq	r1, r0, pc, asr #16
   11324:	andeq	r1, r0, r8, asr r8
   11328:	push	{fp, lr}
   1132c:	mov	fp, sp
   11330:	mov	r0, #0
   11334:	bl	11338 <abort@plt+0x9a4>
   11338:	push	{fp, lr}
   1133c:	mov	fp, sp
   11340:	mov	r4, r0
   11344:	ldr	r0, [pc, #28]	; 11368 <abort@plt+0x9d4>
   11348:	ldr	r0, [pc, r0]
   1134c:	ldr	r0, [r0]
   11350:	cmp	r0, #0
   11354:	beq	1135c <abort@plt+0x9c8>
   11358:	blx	r0
   1135c:	bl	114f8 <error@@Base+0x18c>
   11360:	mov	r0, r4
   11364:	bl	1091c <exit@plt>
   11368:	andeq	r1, r1, r0, asr #26

0001136c <error@@Base>:
   1136c:	push	{fp, lr}
   11370:	mov	fp, sp
   11374:	mov	r3, r0
   11378:	ldr	r0, [pc, #44]	; 113ac <error@@Base+0x40>
   1137c:	ldr	r0, [pc, r0]
   11380:	ldr	r2, [r0]
   11384:	ldr	r0, [pc, #36]	; 113b0 <error@@Base+0x44>
   11388:	ldr	r0, [pc, r0]
   1138c:	ldr	r0, [r0]
   11390:	ldr	r1, [pc, #28]	; 113b4 <error@@Base+0x48>
   11394:	add	r1, pc, r1
   11398:	bl	10940 <fprintf@plt>
   1139c:	ldr	r0, [pc, #20]	; 113b8 <error@@Base+0x4c>
   113a0:	ldr	r0, [pc, r0]
   113a4:	ldr	r0, [r0]
   113a8:	bl	11338 <abort@plt+0x9a4>
   113ac:	andeq	r1, r1, r0, lsl #26
   113b0:	andeq	r1, r1, ip, ror #25
   113b4:	andeq	r1, r0, sp, ror #14
   113b8:	strdeq	r1, [r1], -r4
   113bc:	push	{fp, lr}
   113c0:	mov	fp, sp
   113c4:	sub	sp, sp, #8
   113c8:	mov	r3, r0
   113cc:	ldr	r0, [pc, #48]	; 11404 <error@@Base+0x98>
   113d0:	ldr	r0, [pc, r0]
   113d4:	ldr	r2, [r0]
   113d8:	ldr	r0, [pc, #40]	; 11408 <error@@Base+0x9c>
   113dc:	ldr	r0, [pc, r0]
   113e0:	str	r1, [sp]
   113e4:	ldr	r0, [r0]
   113e8:	ldr	r1, [pc, #28]	; 1140c <error@@Base+0xa0>
   113ec:	add	r1, pc, r1
   113f0:	bl	10940 <fprintf@plt>
   113f4:	ldr	r0, [pc, #20]	; 11410 <error@@Base+0xa4>
   113f8:	ldr	r0, [pc, r0]
   113fc:	ldr	r0, [r0]
   11400:	bl	11338 <abort@plt+0x9a4>
   11404:	andeq	r1, r1, ip, lsr #25
   11408:	muleq	r1, r8, ip
   1140c:	andeq	r1, r0, sp, lsl r7
   11410:	muleq	r1, ip, ip
   11414:	push	{fp, lr}
   11418:	mov	fp, sp
   1141c:	sub	sp, sp, #8
   11420:	mov	r3, r0
   11424:	ldr	r0, [pc, #40]	; 11454 <error@@Base+0xe8>
   11428:	ldr	r0, [pc, r0]
   1142c:	ldr	r2, [r0]
   11430:	ldr	r0, [pc, #32]	; 11458 <error@@Base+0xec>
   11434:	ldr	r0, [pc, r0]
   11438:	str	r1, [sp]
   1143c:	ldr	r0, [r0]
   11440:	ldr	r1, [pc, #20]	; 1145c <error@@Base+0xf0>
   11444:	add	r1, pc, r1
   11448:	bl	10940 <fprintf@plt>
   1144c:	mov	sp, fp
   11450:	pop	{fp, pc}
   11454:	andeq	r1, r1, r4, asr ip
   11458:	andeq	r1, r1, r0, asr #24
   1145c:	andeq	r1, r0, r5, asr #13
   11460:	push	{fp, lr}
   11464:	mov	fp, sp
   11468:	ldr	r0, [pc, #32]	; 11490 <error@@Base+0x124>
   1146c:	add	r0, pc, r0
   11470:	ldrb	r1, [r0]
   11474:	cmp	r1, #1
   11478:	popeq	{fp, pc}
   1147c:	mov	r1, #1
   11480:	strb	r1, [r0]
   11484:	ldr	r0, [pc, #8]	; 11494 <error@@Base+0x128>
   11488:	add	r0, pc, r0
   1148c:	bl	1136c <error@@Base>
   11490:	andeq	r1, r1, r0, asr #24
   11494:	muleq	r0, ip, r6
   11498:	push	{fp, lr}
   1149c:	mov	fp, sp
   114a0:	mov	r3, r0
   114a4:	ldr	r0, [pc, #60]	; 114e8 <error@@Base+0x17c>
   114a8:	ldr	r0, [pc, r0]
   114ac:	ldr	r0, [r0]
   114b0:	cmp	r0, #0
   114b4:	bne	114e0 <error@@Base+0x174>
   114b8:	ldr	r0, [pc, #44]	; 114ec <error@@Base+0x180>
   114bc:	ldr	r0, [pc, r0]
   114c0:	ldr	r2, [r0]
   114c4:	ldr	r0, [pc, #36]	; 114f0 <error@@Base+0x184>
   114c8:	ldr	r0, [pc, r0]
   114cc:	ldr	r0, [r0]
   114d0:	ldr	r1, [pc, #28]	; 114f4 <error@@Base+0x188>
   114d4:	add	r1, pc, r1
   114d8:	bl	10940 <fprintf@plt>
   114dc:	bl	11328 <abort@plt+0x994>
   114e0:	blx	r0
   114e4:	bl	11328 <abort@plt+0x994>
   114e8:	andeq	r1, r1, r8, asr #23
   114ec:	andeq	r1, r1, r0, asr #23
   114f0:	andeq	r1, r1, ip, lsr #23
   114f4:	andeq	r1, r0, r5, ror #12
   114f8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   114fc:	add	fp, sp, #24
   11500:	sub	sp, sp, #104	; 0x68
   11504:	ldr	r8, [pc, #124]	; 11588 <error@@Base+0x21c>
   11508:	add	r8, pc, r8
   1150c:	ldrsh	r0, [r8]
   11510:	cmp	r0, #1
   11514:	blt	11580 <error@@Base+0x214>
   11518:	ldr	r9, [pc, #108]	; 1158c <error@@Base+0x220>
   1151c:	mov	r7, #1
   11520:	add	r4, sp, #4
   11524:	ldr	r9, [pc, r9]
   11528:	ldr	r5, [pc, #96]	; 11590 <error@@Base+0x224>
   1152c:	add	r5, pc, r5
   11530:	ldr	r6, [r9]
   11534:	bl	10910 <getpid@plt>
   11538:	mov	r3, r0
   1153c:	sxth	r0, r7
   11540:	mov	r1, r5
   11544:	mov	r2, r6
   11548:	str	r0, [sp]
   1154c:	mov	r0, r4
   11550:	bl	1097c <sprintf@plt>
   11554:	mov	r0, r4
   11558:	bl	108bc <strdup@plt>
   1155c:	mov	r6, r0
   11560:	bl	108c8 <unlink@plt>
   11564:	mov	r0, r6
   11568:	bl	108a4 <free@plt>
   1156c:	add	r0, r7, #1
   11570:	sxth	r7, r0
   11574:	ldrsh	r0, [r8]
   11578:	cmp	r7, r0
   1157c:	ble	11530 <error@@Base+0x1c4>
   11580:	sub	sp, fp, #24
   11584:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11588:	andeq	r1, r1, r2, lsr #23
   1158c:	andeq	r1, r1, r8, asr fp
   11590:	andeq	r1, r0, sl, ror #11
   11594:	andeq	r0, r0, r0
   11598:	ldm	r0, {r3, ip}
   1159c:	add	r2, ip, r2
   115a0:	add	r1, r3, r1
   115a4:	stm	r0, {r1, r2}
   115a8:	bx	lr
   115ac:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   115b0:	add	fp, sp, #24
   115b4:	mov	r8, r3
   115b8:	mov	r5, r2
   115bc:	mov	r4, r1
   115c0:	mov	r6, r0
   115c4:	bl	126e8 <error@@Base+0x137c>
   115c8:	mov	r7, r0
   115cc:	cmp	r0, #0
   115d0:	bne	115fc <error@@Base+0x290>
   115d4:	mov	r0, #1
   115d8:	mov	r1, #20
   115dc:	bl	10e9c <abort@plt+0x508>
   115e0:	mov	r7, r0
   115e4:	mov	r0, r4
   115e8:	bl	108bc <strdup@plt>
   115ec:	str	r0, [r7, #8]
   115f0:	mov	r0, r6
   115f4:	mov	r1, r7
   115f8:	bl	12778 <error@@Base+0x140c>
   115fc:	ldr	r0, [r7, #12]
   11600:	ldr	r1, [r7, #16]
   11604:	add	r0, r0, r5
   11608:	add	r1, r1, r8
   1160c:	str	r0, [r7, #12]
   11610:	str	r1, [r7, #16]
   11614:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11618:	push	{r4, r5, r6, r7, fp, lr}
   1161c:	add	fp, sp, #16
   11620:	sub	sp, sp, #8
   11624:	mov	r6, r1
   11628:	ldr	r1, [pc, #484]	; 11814 <error@@Base+0x4a8>
   1162c:	mov	r5, r0
   11630:	mov	r0, r6
   11634:	add	r1, pc, r1
   11638:	bl	10f44 <abort@plt+0x5b0>
   1163c:	mov	r4, r0
   11640:	ldr	r0, [pc, #464]	; 11818 <error@@Base+0x4ac>
   11644:	mov	r1, #99	; 0x63
   11648:	mov	r2, r4
   1164c:	add	r0, pc, r0
   11650:	bl	108b0 <fgets@plt>
   11654:	cmp	r0, #0
   11658:	beq	117f8 <error@@Base+0x48c>
   1165c:	ldr	r0, [pc, #440]	; 1181c <error@@Base+0x4b0>
   11660:	ldr	r1, [pc, #440]	; 11820 <error@@Base+0x4b4>
   11664:	mov	r2, #45	; 0x2d
   11668:	add	r0, pc, r0
   1166c:	add	r1, pc, r1
   11670:	bl	10928 <bcmp@plt>
   11674:	cmp	r0, #0
   11678:	bne	117f8 <error@@Base+0x48c>
   1167c:	ldr	r0, [pc, #416]	; 11824 <error@@Base+0x4b8>
   11680:	mov	r1, #99	; 0x63
   11684:	mov	r2, r4
   11688:	add	r0, pc, r0
   1168c:	bl	108b0 <fgets@plt>
   11690:	cmp	r0, #0
   11694:	beq	117f8 <error@@Base+0x48c>
   11698:	ldr	r0, [pc, #392]	; 11828 <error@@Base+0x4bc>
   1169c:	ldr	r1, [pc, #392]	; 1182c <error@@Base+0x4c0>
   116a0:	mov	r2, #48	; 0x30
   116a4:	add	r0, pc, r0
   116a8:	add	r1, pc, r1
   116ac:	bl	10928 <bcmp@plt>
   116b0:	cmp	r0, #0
   116b4:	bne	117f8 <error@@Base+0x48c>
   116b8:	ldr	r0, [pc, #368]	; 11830 <error@@Base+0x4c4>
   116bc:	mov	r1, #99	; 0x63
   116c0:	mov	r2, r4
   116c4:	add	r0, pc, r0
   116c8:	bl	108b0 <fgets@plt>
   116cc:	cmp	r0, #0
   116d0:	beq	117f8 <error@@Base+0x48c>
   116d4:	ldr	r0, [pc, #344]	; 11834 <error@@Base+0x4c8>
   116d8:	ldr	r1, [pc, #344]	; 11838 <error@@Base+0x4cc>
   116dc:	add	r2, sp, #4
   116e0:	add	r0, pc, r0
   116e4:	add	r1, pc, r1
   116e8:	bl	10958 <__isoc99_sscanf@plt>
   116ec:	cmp	r0, #1
   116f0:	bne	117f8 <error@@Base+0x48c>
   116f4:	ldr	r0, [pc, #320]	; 1183c <error@@Base+0x4d0>
   116f8:	mov	r1, #99	; 0x63
   116fc:	mov	r2, r4
   11700:	add	r0, pc, r0
   11704:	bl	108b0 <fgets@plt>
   11708:	cmp	r0, #0
   1170c:	beq	117f8 <error@@Base+0x48c>
   11710:	ldr	r0, [pc, #296]	; 11840 <error@@Base+0x4d4>
   11714:	ldr	r1, [pc, #296]	; 11844 <error@@Base+0x4d8>
   11718:	mov	r2, sp
   1171c:	add	r0, pc, r0
   11720:	add	r1, pc, r1
   11724:	bl	10958 <__isoc99_sscanf@plt>
   11728:	cmp	r0, #1
   1172c:	bne	117f8 <error@@Base+0x48c>
   11730:	ldr	r0, [pc, #272]	; 11848 <error@@Base+0x4dc>
   11734:	mov	r1, #99	; 0x63
   11738:	mov	r2, r4
   1173c:	add	r0, pc, r0
   11740:	bl	108b0 <fgets@plt>
   11744:	cmp	r0, #0
   11748:	beq	117f8 <error@@Base+0x48c>
   1174c:	ldr	r0, [pc, #248]	; 1184c <error@@Base+0x4e0>
   11750:	mov	r1, #99	; 0x63
   11754:	mov	r2, r4
   11758:	add	r0, pc, r0
   1175c:	bl	108b0 <fgets@plt>
   11760:	cmp	r0, #0
   11764:	beq	117f8 <error@@Base+0x48c>
   11768:	ldr	r2, [sp, #4]
   1176c:	ldm	r5, {r0, r1}
   11770:	add	r0, r0, r2
   11774:	ldr	r2, [sp]
   11778:	add	r1, r1, r2
   1177c:	stm	r5, {r0, r1}
   11780:	add	r1, r5, #8
   11784:	mov	r0, r4
   11788:	bl	11858 <error@@Base+0x4ec>
   1178c:	mov	r7, r0
   11790:	add	r1, r5, #416	; 0x1a0
   11794:	mov	r0, r4
   11798:	bl	11858 <error@@Base+0x4ec>
   1179c:	mov	r6, r0
   117a0:	add	r1, r5, #824	; 0x338
   117a4:	mov	r0, r4
   117a8:	bl	11858 <error@@Base+0x4ec>
   117ac:	ldr	r0, [sp, #4]
   117b0:	cmp	r0, #1
   117b4:	blt	117e8 <error@@Base+0x47c>
   117b8:	add	r1, r5, #920	; 0x398
   117bc:	mov	r0, r4
   117c0:	bl	11858 <error@@Base+0x4ec>
   117c4:	cmp	r7, #1
   117c8:	addge	r1, r5, #992	; 0x3e0
   117cc:	movge	r0, r4
   117d0:	blge	11998 <error@@Base+0x62c>
   117d4:	cmp	r6, #1
   117d8:	movwge	r0, #9048	; 0x2358
   117dc:	addge	r1, r5, r0
   117e0:	movge	r0, r4
   117e4:	blge	11998 <error@@Base+0x62c>
   117e8:	mov	r0, r4
   117ec:	bl	10fcc <abort@plt+0x638>
   117f0:	sub	sp, fp, #16
   117f4:	pop	{r4, r5, r6, r7, fp, pc}
   117f8:	ldr	r1, [pc, #80]	; 11850 <error@@Base+0x4e4>
   117fc:	ldr	r0, [pc, #80]	; 11854 <error@@Base+0x4e8>
   11800:	cmp	r6, #0
   11804:	add	r1, pc, r1
   11808:	movne	r1, r6
   1180c:	add	r0, pc, r0
   11810:	bl	113bc <error@@Base+0x50>
   11814:	andeq	r1, r0, r4, lsr r5
   11818:	andeq	r1, r1, r1, ror #20
   1181c:	andeq	r1, r1, r5, asr #20
   11820:	strdeq	r1, [r0], -lr
   11824:	andeq	r1, r1, r5, lsr #20
   11828:	andeq	r1, r1, r9, lsl #20
   1182c:	strdeq	r1, [r0], -r2
   11830:	andeq	r1, r1, r9, ror #19
   11834:	andeq	r1, r1, sp, asr #19
   11838:	andeq	r1, r0, lr, asr r5
   1183c:	andeq	r1, r1, sp, lsr #19
   11840:	muleq	r1, r1, r9
   11844:	andeq	r1, r0, r2, lsr #10
   11848:	andeq	r1, r1, r1, ror r9
   1184c:	andeq	r1, r1, r5, asr r9
   11850:	ldrdeq	r1, [r0], -r8
   11854:			; <UNDEFINED> instruction: 0x000013be
   11858:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1185c:	add	fp, sp, #28
   11860:	sub	sp, sp, #12
   11864:	mov	r5, r0
   11868:	ldr	r0, [pc, #276]	; 11984 <error@@Base+0x618>
   1186c:	mov	r4, r1
   11870:	mov	r1, #99	; 0x63
   11874:	mov	r2, r5
   11878:	add	r0, pc, r0
   1187c:	bl	108b0 <fgets@plt>
   11880:	mov	r6, #0
   11884:	cmp	r0, #0
   11888:	beq	11978 <error@@Base+0x60c>
   1188c:	ldr	r0, [pc, #244]	; 11988 <error@@Base+0x61c>
   11890:	mov	r1, #99	; 0x63
   11894:	mov	r2, r5
   11898:	add	r0, pc, r0
   1189c:	bl	108b0 <fgets@plt>
   118a0:	cmp	r0, #0
   118a4:	beq	11978 <error@@Base+0x60c>
   118a8:	ldr	r7, [pc, #220]	; 1198c <error@@Base+0x620>
   118ac:	mov	r1, #99	; 0x63
   118b0:	mov	r2, r5
   118b4:	add	r7, pc, r7
   118b8:	mov	r0, r7
   118bc:	bl	108b0 <fgets@plt>
   118c0:	cmp	r0, #0
   118c4:	beq	11978 <error@@Base+0x60c>
   118c8:	mov	r6, #0
   118cc:	add	r9, sp, #8
   118d0:	add	sl, sp, #4
   118d4:	add	r8, r7, #29
   118d8:	b	11938 <error@@Base+0x5cc>
   118dc:	ldr	r1, [pc, #176]	; 11994 <error@@Base+0x628>
   118e0:	mov	r0, r8
   118e4:	mov	r2, #8
   118e8:	add	r1, pc, r1
   118ec:	bl	10928 <bcmp@plt>
   118f0:	ldr	r1, [sp, #8]
   118f4:	cmp	r0, #0
   118f8:	movwne	r0, #11
   118fc:	moveq	r6, r1
   11900:	mov	r2, r4
   11904:	ldr	r0, [r2, r0, lsl #3]!
   11908:	add	r0, r0, r1
   1190c:	ldr	r1, [sp, #4]
   11910:	str	r0, [r2]
   11914:	ldr	r0, [r2, #4]
   11918:	add	r0, r0, r1
   1191c:	mov	r1, #99	; 0x63
   11920:	str	r0, [r2, #4]
   11924:	mov	r0, r7
   11928:	mov	r2, r5
   1192c:	bl	108b0 <fgets@plt>
   11930:	cmp	r0, #0
   11934:	beq	11978 <error@@Base+0x60c>
   11938:	ldr	r1, [pc, #80]	; 11990 <error@@Base+0x624>
   1193c:	mov	r0, r7
   11940:	mov	r2, r9
   11944:	mov	r3, sl
   11948:	add	r1, pc, r1
   1194c:	bl	10958 <__isoc99_sscanf@plt>
   11950:	cmp	r0, #2
   11954:	bne	11978 <error@@Base+0x60c>
   11958:	mov	r0, r8
   1195c:	mov	r1, #0
   11960:	mov	r2, #10
   11964:	bl	10880 <strtol@plt>
   11968:	cmp	r0, #0
   1196c:	beq	118dc <error@@Base+0x570>
   11970:	ldr	r1, [sp, #8]
   11974:	b	11900 <error@@Base+0x594>
   11978:	mov	r0, r6
   1197c:	sub	sp, fp, #28
   11980:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11984:	andeq	r1, r1, r5, lsr r8
   11988:	andeq	r1, r1, r5, lsl r8
   1198c:	strdeq	r1, [r1], -r9
   11990:	strdeq	r1, [r0], -r6
   11994:	andeq	r1, r0, lr, asr #6
   11998:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1199c:	add	fp, sp, #28
   119a0:	sub	sp, sp, #12
   119a4:	mov	r5, r0
   119a8:	ldr	r0, [pc, #276]	; 11ac4 <error@@Base+0x758>
   119ac:	mov	r4, r1
   119b0:	mov	r1, #99	; 0x63
   119b4:	mov	r2, r5
   119b8:	add	r0, pc, r0
   119bc:	bl	108b0 <fgets@plt>
   119c0:	cmp	r0, #0
   119c4:	beq	11abc <error@@Base+0x750>
   119c8:	ldr	r0, [pc, #248]	; 11ac8 <error@@Base+0x75c>
   119cc:	mov	r1, #99	; 0x63
   119d0:	mov	r2, r5
   119d4:	add	r0, pc, r0
   119d8:	bl	108b0 <fgets@plt>
   119dc:	cmp	r0, #0
   119e0:	beq	11abc <error@@Base+0x750>
   119e4:	ldr	r6, [pc, #224]	; 11acc <error@@Base+0x760>
   119e8:	mov	r1, #99	; 0x63
   119ec:	mov	r2, r5
   119f0:	add	r6, pc, r6
   119f4:	mov	r0, r6
   119f8:	bl	108b0 <fgets@plt>
   119fc:	cmp	r0, #0
   11a00:	beq	11abc <error@@Base+0x750>
   11a04:	add	r7, r6, #29
   11a08:	b	11a3c <error@@Base+0x6d0>
   11a0c:	ldr	r0, [r8, #12]
   11a10:	ldr	r1, [r8, #16]
   11a14:	mov	r2, r5
   11a18:	add	r0, r0, r9
   11a1c:	add	r1, r1, sl
   11a20:	str	r0, [r8, #12]
   11a24:	str	r1, [r8, #16]
   11a28:	mov	r0, r6
   11a2c:	mov	r1, #99	; 0x63
   11a30:	bl	108b0 <fgets@plt>
   11a34:	cmp	r0, #0
   11a38:	beq	11abc <error@@Base+0x750>
   11a3c:	ldr	r1, [pc, #140]	; 11ad0 <error@@Base+0x764>
   11a40:	mov	r0, r6
   11a44:	add	r2, sp, #8
   11a48:	add	r3, sp, #4
   11a4c:	add	r1, pc, r1
   11a50:	bl	10958 <__isoc99_sscanf@plt>
   11a54:	cmp	r0, #2
   11a58:	bne	11abc <error@@Base+0x750>
   11a5c:	mov	r0, r6
   11a60:	bl	10934 <strlen@plt>
   11a64:	ldr	r9, [sp, #8]
   11a68:	ldr	sl, [sp, #4]
   11a6c:	add	r0, r0, r6
   11a70:	mov	r1, #0
   11a74:	strb	r1, [r0, #-1]
   11a78:	mov	r0, r4
   11a7c:	mov	r1, r7
   11a80:	bl	126e8 <error@@Base+0x137c>
   11a84:	mov	r8, r0
   11a88:	cmp	r0, #0
   11a8c:	bne	11a0c <error@@Base+0x6a0>
   11a90:	mov	r0, #1
   11a94:	mov	r1, #20
   11a98:	bl	10e9c <abort@plt+0x508>
   11a9c:	mov	r8, r0
   11aa0:	mov	r0, r7
   11aa4:	bl	108bc <strdup@plt>
   11aa8:	str	r0, [r8, #8]
   11aac:	mov	r0, r4
   11ab0:	mov	r1, r8
   11ab4:	bl	12778 <error@@Base+0x140c>
   11ab8:	b	11a0c <error@@Base+0x6a0>
   11abc:	sub	sp, fp, #28
   11ac0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11ac4:	strdeq	r1, [r1], -r5
   11ac8:	ldrdeq	r1, [r1], -r9
   11acc:			; <UNDEFINED> instruction: 0x000116bd
   11ad0:	strdeq	r1, [r0], -r2
   11ad4:	nop	{0}
   11ad8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11adc:	add	fp, sp, #24
   11ae0:	sub	sp, sp, #8
   11ae4:	mov	r2, r1
   11ae8:	ldr	r1, [pc, #448]	; 11cb0 <error@@Base+0x944>
   11aec:	mov	r5, r0
   11af0:	mov	r0, r2
   11af4:	add	r1, pc, r1
   11af8:	bl	10f44 <abort@plt+0x5b0>
   11afc:	ldr	r1, [pc, #432]	; 11cb4 <error@@Base+0x948>
   11b00:	ldr	r2, [pc, #432]	; 11cb8 <error@@Base+0x94c>
   11b04:	ldr	r3, [pc, #432]	; 11cbc <error@@Base+0x950>
   11b08:	mov	r4, r0
   11b0c:	add	r1, pc, r1
   11b10:	add	r2, pc, r2
   11b14:	add	r3, pc, r3
   11b18:	bl	10940 <fprintf@plt>
   11b1c:	ldr	r2, [r5]
   11b20:	ldr	r1, [pc, #408]	; 11cc0 <error@@Base+0x954>
   11b24:	mov	r0, r4
   11b28:	add	r1, pc, r1
   11b2c:	bl	10940 <fprintf@plt>
   11b30:	ldr	r2, [r5, #4]
   11b34:	ldr	r1, [pc, #392]	; 11cc4 <error@@Base+0x958>
   11b38:	mov	r0, r4
   11b3c:	add	r1, pc, r1
   11b40:	bl	10940 <fprintf@plt>
   11b44:	ldr	r0, [r5]
   11b48:	cmp	r0, #0
   11b4c:	beq	11b8c <error@@Base+0x820>
   11b50:	ldr	r1, [r5, #4]
   11b54:	vldr	d16, [pc, #332]	; 11ca8 <error@@Base+0x93c>
   11b58:	vmov	s2, r0
   11b5c:	sub	r1, r0, r1
   11b60:	mov	r0, r4
   11b64:	vmov	s0, r1
   11b68:	vcvt.f64.s32	d17, s0
   11b6c:	vcvt.f64.s32	d18, s2
   11b70:	ldr	r1, [pc, #340]	; 11ccc <error@@Base+0x960>
   11b74:	add	r1, pc, r1
   11b78:	vmul.f64	d16, d17, d16
   11b7c:	vdiv.f64	d16, d16, d18
   11b80:	vmov	r2, r3, d16
   11b84:	bl	10940 <fprintf@plt>
   11b88:	b	11ba4 <error@@Base+0x838>
   11b8c:	ldr	r0, [pc, #308]	; 11cc8 <error@@Base+0x95c>
   11b90:	mov	r1, #8
   11b94:	mov	r2, #1
   11b98:	mov	r3, r4
   11b9c:	add	r0, pc, r0
   11ba0:	bl	108e0 <fwrite@plt>
   11ba4:	ldr	r0, [pc, #292]	; 11cd0 <error@@Base+0x964>
   11ba8:	mov	r1, #12
   11bac:	mov	r2, #1
   11bb0:	mov	r3, r4
   11bb4:	mov	r7, #1
   11bb8:	add	r0, pc, r0
   11bbc:	bl	108e0 <fwrite@plt>
   11bc0:	mov	r8, #0
   11bc4:	str	r7, [sp, #4]
   11bc8:	add	r1, r5, #8
   11bcc:	mov	r0, r4
   11bd0:	mov	r2, #50	; 0x32
   11bd4:	str	r8, [sp]
   11bd8:	ldr	r3, [pc, #244]	; 11cd4 <error@@Base+0x968>
   11bdc:	add	r3, pc, r3
   11be0:	bl	11cf0 <error@@Base+0x984>
   11be4:	str	r8, [sp]
   11be8:	str	r7, [sp, #4]
   11bec:	add	r6, r5, #416	; 0x1a0
   11bf0:	mov	r0, r4
   11bf4:	mov	r2, #50	; 0x32
   11bf8:	ldr	r3, [pc, #216]	; 11cd8 <error@@Base+0x96c>
   11bfc:	mov	r1, r6
   11c00:	add	r3, pc, r3
   11c04:	bl	11cf0 <error@@Base+0x984>
   11c08:	str	r7, [sp]
   11c0c:	str	r7, [sp, #4]
   11c10:	add	r1, r5, #824	; 0x338
   11c14:	mov	r0, r4
   11c18:	mov	r2, #10
   11c1c:	ldr	r3, [pc, #184]	; 11cdc <error@@Base+0x970>
   11c20:	add	r3, pc, r3
   11c24:	bl	11cf0 <error@@Base+0x984>
   11c28:	ldr	r0, [r5]
   11c2c:	cmp	r0, #1
   11c30:	blt	11c98 <error@@Base+0x92c>
   11c34:	str	r8, [sp]
   11c38:	str	r8, [sp, #4]
   11c3c:	add	r1, r5, #920	; 0x398
   11c40:	mov	r0, r4
   11c44:	mov	r2, #8
   11c48:	ldr	r3, [pc, #144]	; 11ce0 <error@@Base+0x974>
   11c4c:	add	r3, pc, r3
   11c50:	bl	11cf0 <error@@Base+0x984>
   11c54:	ldr	r0, [r5, #8]
   11c58:	cmp	r0, #1
   11c5c:	blt	11c74 <error@@Base+0x908>
   11c60:	ldr	r2, [pc, #124]	; 11ce4 <error@@Base+0x978>
   11c64:	add	r1, r5, #992	; 0x3e0
   11c68:	mov	r0, r4
   11c6c:	add	r2, pc, r2
   11c70:	bl	120b0 <error@@Base+0xd44>
   11c74:	ldr	r0, [r6]
   11c78:	cmp	r0, #1
   11c7c:	blt	11c98 <error@@Base+0x92c>
   11c80:	ldr	r2, [pc, #96]	; 11ce8 <error@@Base+0x97c>
   11c84:	movw	r0, #9048	; 0x2358
   11c88:	add	r1, r5, r0
   11c8c:	mov	r0, r4
   11c90:	add	r2, pc, r2
   11c94:	bl	120b0 <error@@Base+0xd44>
   11c98:	mov	r0, r4
   11c9c:	sub	sp, fp, #24
   11ca0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   11ca4:	b	10fcc <abort@plt+0x638>
   11ca8:	andeq	r0, r0, r0
   11cac:	subsmi	r0, r9, r0
   11cb0:	andeq	r1, r0, lr, ror #1
   11cb4:	ldrdeq	r1, [r0], -r8
   11cb8:	andeq	r1, r0, sl, asr r0
   11cbc:	andeq	r1, r0, r6, lsl #1
   11cc0:	andeq	r1, r0, r1, asr #1
   11cc4:	strheq	r1, [r0], -fp
   11cc8:	andeq	r1, r0, sl, lsr #1
   11ccc:	ldrdeq	r1, [r0], -fp
   11cd0:	andeq	r0, r0, r3, asr lr
   11cd4:	andeq	r1, r0, r1, lsr r0
   11cd8:	andeq	r1, r0, r0, lsr #32
   11cdc:	strdeq	r0, [r0], -r7
   11ce0:	andeq	r0, r0, r2, ror #31
   11ce4:	andeq	r0, r0, r1, lsr #31
   11ce8:	muleq	r0, r0, pc	; <UNPREDICTABLE>
   11cec:	nop	{0}
   11cf0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11cf4:	add	fp, sp, #28
   11cf8:	sub	sp, sp, #4
   11cfc:	vpush	{d8}
   11d00:	sub	sp, sp, #8
   11d04:	mov	r5, r1
   11d08:	ldr	r1, [pc, #832]	; 12050 <error@@Base+0xce4>
   11d0c:	mov	r8, r2
   11d10:	mov	r2, r3
   11d14:	mov	r4, r0
   11d18:	add	r1, pc, r1
   11d1c:	bl	10940 <fprintf@plt>
   11d20:	ldr	r0, [pc, #812]	; 12054 <error@@Base+0xce8>
   11d24:	mov	r1, #26
   11d28:	mov	r2, #1
   11d2c:	mov	r3, r4
   11d30:	mov	r7, #1
   11d34:	add	r0, pc, r0
   11d38:	bl	108e0 <fwrite@plt>
   11d3c:	ldr	r0, [pc, #788]	; 12058 <error@@Base+0xcec>
   11d40:	mov	r1, #3
   11d44:	mov	r2, #1
   11d48:	mov	r3, r4
   11d4c:	add	r0, pc, r0
   11d50:	bl	108e0 <fwrite@plt>
   11d54:	ldrb	r1, [fp, #8]
   11d58:	ldr	r0, [pc, #764]	; 1205c <error@@Base+0xcf0>
   11d5c:	ldr	r2, [pc, #764]	; 12060 <error@@Base+0xcf4>
   11d60:	str	r1, [sp]
   11d64:	cmp	r1, #0
   11d68:	add	r0, pc, r0
   11d6c:	add	r2, pc, r2
   11d70:	ldr	r1, [pc, #748]	; 12064 <error@@Base+0xcf8>
   11d74:	movne	r2, r0
   11d78:	mov	r0, r4
   11d7c:	add	r1, pc, r1
   11d80:	bl	10940 <fprintf@plt>
   11d84:	ldr	r1, [fp, #12]
   11d88:	lsl	r0, r8, #16
   11d8c:	sxth	r6, r8
   11d90:	cmp	r0, #65536	; 0x10000
   11d94:	str	r1, [sp, #4]
   11d98:	blt	11e84 <error@@Base+0xb18>
   11d9c:	ldr	sl, [pc, #708]	; 12068 <error@@Base+0xcfc>
   11da0:	vldr	d8, [pc, #672]	; 12048 <error@@Base+0xcdc>
   11da4:	mov	r8, #1
   11da8:	add	sl, pc, sl
   11dac:	b	11e00 <error@@Base+0xa94>
   11db0:	ldr	r0, [pc, #704]	; 12078 <error@@Base+0xd0c>
   11db4:	mov	r1, #26
   11db8:	add	r0, pc, r0
   11dbc:	mov	r2, #1
   11dc0:	mov	r3, r4
   11dc4:	bl	108e0 <fwrite@plt>
   11dc8:	ldr	r0, [pc, #684]	; 1207c <error@@Base+0xd10>
   11dcc:	mov	r1, #3
   11dd0:	mov	r2, #1
   11dd4:	mov	r3, r4
   11dd8:	add	r0, pc, r0
   11ddc:	bl	108e0 <fwrite@plt>
   11de0:	mov	r0, r4
   11de4:	mov	r1, sl
   11de8:	mov	r2, r7
   11dec:	bl	10940 <fprintf@plt>
   11df0:	add	r8, r8, #1
   11df4:	sxth	r7, r8
   11df8:	cmp	r6, r7
   11dfc:	blt	11e84 <error@@Base+0xb18>
   11e00:	mov	r0, r5
   11e04:	ldr	r2, [r0, r7, lsl #3]!
   11e08:	cmp	r2, #1
   11e0c:	blt	11df0 <error@@Base+0xa84>
   11e10:	cmp	r0, #0
   11e14:	beq	11db0 <error@@Base+0xa44>
   11e18:	add	r9, r5, r7, lsl #3
   11e1c:	mov	r0, r4
   11e20:	ldr	r3, [r9, #4]!
   11e24:	ldr	r1, [pc, #576]	; 1206c <error@@Base+0xd00>
   11e28:	add	r1, pc, r1
   11e2c:	bl	10940 <fprintf@plt>
   11e30:	ldr	r0, [r5, r7, lsl #3]
   11e34:	cmp	r0, #0
   11e38:	beq	11e74 <error@@Base+0xb08>
   11e3c:	ldr	r1, [r9]
   11e40:	vmov	s2, r0
   11e44:	sub	r1, r0, r1
   11e48:	mov	r0, r4
   11e4c:	vmov	s0, r1
   11e50:	vcvt.f64.s32	d16, s0
   11e54:	vcvt.f64.s32	d17, s2
   11e58:	ldr	r1, [pc, #532]	; 12074 <error@@Base+0xd08>
   11e5c:	add	r1, pc, r1
   11e60:	vmul.f64	d16, d16, d8
   11e64:	vdiv.f64	d16, d16, d17
   11e68:	vmov	r2, r3, d16
   11e6c:	bl	10940 <fprintf@plt>
   11e70:	b	11dc8 <error@@Base+0xa5c>
   11e74:	ldr	r0, [pc, #500]	; 12070 <error@@Base+0xd04>
   11e78:	mov	r1, #8
   11e7c:	add	r0, pc, r0
   11e80:	b	11dbc <error@@Base+0xa50>
   11e84:	ldr	r0, [sp]
   11e88:	cmp	r0, #0
   11e8c:	beq	11f60 <error@@Base+0xbf4>
   11e90:	add	r7, r6, #1
   11e94:	mov	r0, r5
   11e98:	ldr	r2, [r0, r7, lsl #3]!
   11e9c:	cmp	r2, #1
   11ea0:	blt	11f60 <error@@Base+0xbf4>
   11ea4:	cmp	r0, #0
   11ea8:	beq	11f0c <error@@Base+0xba0>
   11eac:	add	r8, r5, r7, lsl #3
   11eb0:	mov	r0, r4
   11eb4:	ldr	r3, [r8, #4]!
   11eb8:	ldr	r1, [pc, #448]	; 12080 <error@@Base+0xd14>
   11ebc:	add	r1, pc, r1
   11ec0:	bl	10940 <fprintf@plt>
   11ec4:	ldr	r0, [r5, r7, lsl #3]
   11ec8:	cmp	r0, #0
   11ecc:	beq	11f1c <error@@Base+0xbb0>
   11ed0:	ldr	r1, [r8]
   11ed4:	vldr	d16, [pc, #364]	; 12048 <error@@Base+0xcdc>
   11ed8:	vmov	s2, r0
   11edc:	sub	r1, r0, r1
   11ee0:	mov	r0, r4
   11ee4:	vmov	s0, r1
   11ee8:	vcvt.f64.s32	d17, s0
   11eec:	vcvt.f64.s32	d18, s2
   11ef0:	ldr	r1, [pc, #400]	; 12088 <error@@Base+0xd1c>
   11ef4:	add	r1, pc, r1
   11ef8:	vmul.f64	d16, d17, d16
   11efc:	vdiv.f64	d16, d16, d18
   11f00:	vmov	r2, r3, d16
   11f04:	bl	10940 <fprintf@plt>
   11f08:	b	11f34 <error@@Base+0xbc8>
   11f0c:	ldr	r0, [pc, #376]	; 1208c <error@@Base+0xd20>
   11f10:	mov	r1, #26
   11f14:	add	r0, pc, r0
   11f18:	b	11f28 <error@@Base+0xbbc>
   11f1c:	ldr	r0, [pc, #352]	; 12084 <error@@Base+0xd18>
   11f20:	mov	r1, #8
   11f24:	add	r0, pc, r0
   11f28:	mov	r2, #1
   11f2c:	mov	r3, r4
   11f30:	bl	108e0 <fwrite@plt>
   11f34:	ldr	r0, [pc, #340]	; 12090 <error@@Base+0xd24>
   11f38:	mov	r1, #3
   11f3c:	mov	r2, #1
   11f40:	mov	r3, r4
   11f44:	add	r0, pc, r0
   11f48:	bl	108e0 <fwrite@plt>
   11f4c:	ldr	r1, [pc, #320]	; 12094 <error@@Base+0xd28>
   11f50:	mov	r0, r4
   11f54:	mov	r2, r6
   11f58:	add	r1, pc, r1
   11f5c:	bl	10940 <fprintf@plt>
   11f60:	ldr	r0, [sp, #4]
   11f64:	tst	r0, #255	; 0xff
   11f68:	beq	11fd0 <error@@Base+0xc64>
   11f6c:	cmp	r5, #0
   11f70:	beq	11fe0 <error@@Base+0xc74>
   11f74:	ldm	r5, {r2, r3}
   11f78:	ldr	r1, [pc, #280]	; 12098 <error@@Base+0xd2c>
   11f7c:	mov	r0, r4
   11f80:	add	r1, pc, r1
   11f84:	bl	10940 <fprintf@plt>
   11f88:	ldr	r0, [r5]
   11f8c:	cmp	r0, #0
   11f90:	beq	11ff0 <error@@Base+0xc84>
   11f94:	ldr	r1, [r5, #4]
   11f98:	vldr	d16, [pc, #168]	; 12048 <error@@Base+0xcdc>
   11f9c:	vmov	s2, r0
   11fa0:	sub	r1, r0, r1
   11fa4:	mov	r0, r4
   11fa8:	vmov	s0, r1
   11fac:	vcvt.f64.s32	d17, s0
   11fb0:	vcvt.f64.s32	d18, s2
   11fb4:	ldr	r1, [pc, #228]	; 120a0 <error@@Base+0xd34>
   11fb8:	add	r1, pc, r1
   11fbc:	vmul.f64	d16, d17, d16
   11fc0:	vdiv.f64	d16, d16, d18
   11fc4:	vmov	r2, r3, d16
   11fc8:	bl	10940 <fprintf@plt>
   11fcc:	b	12008 <error@@Base+0xc9c>
   11fd0:	sub	sp, fp, #40	; 0x28
   11fd4:	vpop	{d8}
   11fd8:	add	sp, sp, #4
   11fdc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11fe0:	ldr	r0, [pc, #188]	; 120a4 <error@@Base+0xd38>
   11fe4:	mov	r1, #26
   11fe8:	add	r0, pc, r0
   11fec:	b	11ffc <error@@Base+0xc90>
   11ff0:	ldr	r0, [pc, #164]	; 1209c <error@@Base+0xd30>
   11ff4:	mov	r1, #8
   11ff8:	add	r0, pc, r0
   11ffc:	mov	r2, #1
   12000:	mov	r3, r4
   12004:	bl	108e0 <fwrite@plt>
   12008:	ldr	r0, [pc, #152]	; 120a8 <error@@Base+0xd3c>
   1200c:	mov	r1, #3
   12010:	mov	r2, #1
   12014:	mov	r3, r4
   12018:	add	r0, pc, r0
   1201c:	bl	108e0 <fwrite@plt>
   12020:	ldr	r0, [pc, #132]	; 120ac <error@@Base+0xd40>
   12024:	mov	r1, #7
   12028:	mov	r2, #1
   1202c:	mov	r3, r4
   12030:	add	r0, pc, r0
   12034:	sub	sp, fp, #40	; 0x28
   12038:	vpop	{d8}
   1203c:	add	sp, sp, #4
   12040:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12044:	b	108e0 <fwrite@plt>
   12048:	andeq	r0, r0, r0
   1204c:	subsmi	r0, r9, r0
   12050:	andeq	r0, r0, sp, lsr pc
   12054:	andeq	r0, r0, r1, asr pc
   12058:	andeq	r0, r0, r4, asr pc
   1205c:	strdeq	r0, [r0], -r2
   12060:	strdeq	r0, [r0], -r5
   12064:	ldrdeq	r0, [r0], -sl
   12068:	andeq	r0, r0, r0, asr #29
   1206c:	andeq	r0, r0, r2, asr lr
   12070:	andeq	r0, r0, sl, asr #27
   12074:	strdeq	r0, [r0], -r3
   12078:	andeq	r0, r0, sp, asr #29
   1207c:	andeq	r0, r0, r8, asr #29
   12080:			; <UNDEFINED> instruction: 0x00000dbe
   12084:	andeq	r0, r0, r2, lsr #26
   12088:	andeq	r0, r0, fp, asr sp
   1208c:	andeq	r0, r0, r1, ror sp
   12090:	andeq	r0, r0, ip, asr sp
   12094:	andeq	r0, r0, r9, lsl sp
   12098:	strdeq	r0, [r0], -sl
   1209c:	andeq	r0, r0, lr, asr #24
   120a0:	muleq	r0, r7, ip
   120a4:	muleq	r0, sp, ip
   120a8:	andeq	r0, r0, r8, lsl #25
   120ac:	andeq	r0, r0, r6, lsl #24
   120b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   120b4:	add	fp, sp, #28
   120b8:	sub	sp, sp, #4
   120bc:	vpush	{d8}
   120c0:	mov	r5, r0
   120c4:	mov	r0, r1
   120c8:	mov	r6, r2
   120cc:	mov	r4, r1
   120d0:	bl	12888 <error@@Base+0x151c>
   120d4:	movw	r0, #8048	; 0x1f70
   120d8:	ldr	r1, [r4, r0]!
   120dc:	ldr	r0, [r4, #4]
   120e0:	ldr	r2, [pc, #336]	; 12238 <error@@Base+0xecc>
   120e4:	add	r2, pc, r2
   120e8:	bl	12520 <error@@Base+0x11b4>
   120ec:	ldr	r1, [pc, #328]	; 1223c <error@@Base+0xed0>
   120f0:	mov	r0, r5
   120f4:	mov	r2, r6
   120f8:	add	r1, pc, r1
   120fc:	bl	10940 <fprintf@plt>
   12100:	ldr	r0, [pc, #312]	; 12240 <error@@Base+0xed4>
   12104:	mov	r1, #26
   12108:	mov	r2, #1
   1210c:	mov	r3, r5
   12110:	add	r0, pc, r0
   12114:	bl	108e0 <fwrite@plt>
   12118:	ldr	r0, [pc, #292]	; 12244 <error@@Base+0xed8>
   1211c:	mov	r1, #3
   12120:	mov	r2, #1
   12124:	mov	r3, r5
   12128:	add	r0, pc, r0
   1212c:	bl	108e0 <fwrite@plt>
   12130:	mov	r0, #10
   12134:	mov	r1, r5
   12138:	bl	10970 <fputc@plt>
   1213c:	ldr	r0, [r4, #4]
   12140:	cmp	r0, #1
   12144:	blt	12220 <error@@Base+0xeb4>
   12148:	ldr	r9, [pc, #248]	; 12248 <error@@Base+0xedc>
   1214c:	ldr	r7, [pc, #248]	; 1224c <error@@Base+0xee0>
   12150:	ldr	r6, [pc, #248]	; 12250 <error@@Base+0xee4>
   12154:	vldr	d8, [pc, #212]	; 12230 <error@@Base+0xec4>
   12158:	mov	r8, #0
   1215c:	add	r9, pc, r9
   12160:	add	r7, pc, r7
   12164:	add	r6, pc, r6
   12168:	b	121dc <error@@Base+0xe70>
   1216c:	ldr	r1, [sl, #16]
   12170:	vmov	s2, r0
   12174:	sub	r1, r0, r1
   12178:	mov	r0, r5
   1217c:	vmov	s0, r1
   12180:	vcvt.f64.s32	d16, s0
   12184:	vcvt.f64.s32	d17, s2
   12188:	ldr	r1, [pc, #200]	; 12258 <error@@Base+0xeec>
   1218c:	add	r1, pc, r1
   12190:	vmul.f64	d16, d16, d8
   12194:	vdiv.f64	d16, d16, d17
   12198:	vmov	r2, r3, d16
   1219c:	bl	10940 <fprintf@plt>
   121a0:	mov	r0, r7
   121a4:	mov	r1, #3
   121a8:	mov	r2, #1
   121ac:	mov	r3, r5
   121b0:	bl	108e0 <fwrite@plt>
   121b4:	ldr	r0, [r4]
   121b8:	mov	r1, r6
   121bc:	ldr	r0, [r0, r8, lsl #2]
   121c0:	ldr	r2, [r0, #8]
   121c4:	mov	r0, r5
   121c8:	bl	10940 <fprintf@plt>
   121cc:	ldr	r0, [r4, #4]
   121d0:	add	r8, r8, #1
   121d4:	cmp	r8, r0
   121d8:	bge	12220 <error@@Base+0xeb4>
   121dc:	ldr	r0, [r4]
   121e0:	mov	r1, r9
   121e4:	ldr	sl, [r0, r8, lsl #2]
   121e8:	mov	r0, r5
   121ec:	ldr	r2, [sl, #12]
   121f0:	ldr	r3, [sl, #16]
   121f4:	bl	10940 <fprintf@plt>
   121f8:	ldr	r0, [sl, #12]
   121fc:	cmp	r0, #0
   12200:	bne	1216c <error@@Base+0xe00>
   12204:	ldr	r0, [pc, #72]	; 12254 <error@@Base+0xee8>
   12208:	mov	r1, #8
   1220c:	mov	r2, #1
   12210:	mov	r3, r5
   12214:	add	r0, pc, r0
   12218:	bl	108e0 <fwrite@plt>
   1221c:	b	121a0 <error@@Base+0xe34>
   12220:	vpop	{d8}
   12224:	add	sp, sp, #4
   12228:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1222c:	nop	{0}
   12230:	andeq	r0, r0, r0
   12234:	subsmi	r0, r9, r0
   12238:	andeq	r0, r0, r0, ror r1
   1223c:	andeq	r0, r0, sp, asr fp
   12240:	andeq	r0, r0, r5, ror fp
   12244:	andeq	r0, r0, r8, ror fp
   12248:	andeq	r0, r0, lr, lsl fp
   1224c:	andeq	r0, r0, r0, asr #22
   12250:	strdeq	r0, [r0], -r2
   12254:	andeq	r0, r0, r2, lsr sl
   12258:	andeq	r0, r0, r3, asr #21
   1225c:	ldr	r1, [r1, #8]
   12260:	ldr	r0, [r0, #8]
   12264:	b	10ec0 <abort@plt+0x52c>
   12268:	vmov.i32	q8, #0	; 0x00000000
   1226c:	vst1.32	{d16-d17}, [r0]
   12270:	bx	lr
   12274:	push	{r4, r5, fp, lr}
   12278:	add	fp, sp, #8
   1227c:	mov	r4, r0
   12280:	ldr	r0, [r0]
   12284:	mov	r5, #0
   12288:	str	r5, [r1]
   1228c:	cmp	r0, #0
   12290:	str	r0, [r1, #4]
   12294:	str	r1, [r4]
   12298:	addeq	r0, r4, #4
   1229c:	str	r1, [r0]
   122a0:	ldr	r0, [r4, #8]
   122a4:	cmp	r0, #0
   122a8:	beq	122b4 <error@@Base+0xf48>
   122ac:	bl	108a4 <free@plt>
   122b0:	str	r5, [r4, #8]
   122b4:	ldr	r0, [r4, #12]
   122b8:	add	r0, r0, #1
   122bc:	str	r0, [r4, #12]
   122c0:	pop	{r4, r5, fp, pc}
   122c4:	push	{r4, r5, fp, lr}
   122c8:	add	fp, sp, #8
   122cc:	mov	r4, r0
   122d0:	ldr	r0, [r0, #4]
   122d4:	mov	r5, #0
   122d8:	mov	r2, r4
   122dc:	cmp	r0, #0
   122e0:	stm	r1, {r0, r5}
   122e4:	addne	r2, r0, #4
   122e8:	str	r1, [r2]
   122ec:	str	r1, [r4, #4]
   122f0:	ldr	r0, [r4, #8]
   122f4:	cmp	r0, #0
   122f8:	beq	12304 <error@@Base+0xf98>
   122fc:	bl	108a4 <free@plt>
   12300:	str	r5, [r4, #8]
   12304:	ldr	r0, [r4, #12]
   12308:	add	r0, r0, #1
   1230c:	str	r0, [r4, #12]
   12310:	pop	{r4, r5, fp, pc}
   12314:	push	{r4, sl, fp, lr}
   12318:	add	fp, sp, #8
   1231c:	mov	r4, r0
   12320:	ldr	r0, [r2]
   12324:	mov	r3, r4
   12328:	cmp	r0, #0
   1232c:	stm	r1, {r0, r2}
   12330:	addne	r3, r0, #4
   12334:	str	r1, [r3]
   12338:	str	r1, [r2]
   1233c:	ldr	r0, [r4, #8]
   12340:	cmp	r0, #0
   12344:	beq	12354 <error@@Base+0xfe8>
   12348:	bl	108a4 <free@plt>
   1234c:	mov	r0, #0
   12350:	str	r0, [r4, #8]
   12354:	ldr	r0, [r4, #12]
   12358:	add	r0, r0, #1
   1235c:	str	r0, [r4, #12]
   12360:	pop	{r4, sl, fp, pc}
   12364:	push	{r4, sl, fp, lr}
   12368:	add	fp, sp, #8
   1236c:	mov	r4, r0
   12370:	mov	r0, r1
   12374:	cmp	r1, #0
   12378:	ldr	r3, [r0, #4]!
   1237c:	moveq	r0, r4
   12380:	stm	r2, {r1, r3}
   12384:	str	r2, [r0]
   12388:	cmp	r3, #0
   1238c:	addeq	r3, r4, #4
   12390:	str	r2, [r3]
   12394:	ldr	r0, [r4, #8]
   12398:	cmp	r0, #0
   1239c:	beq	123ac <error@@Base+0x1040>
   123a0:	bl	108a4 <free@plt>
   123a4:	mov	r0, #0
   123a8:	str	r0, [r4, #8]
   123ac:	ldr	r0, [r4, #12]
   123b0:	add	r0, r0, #1
   123b4:	str	r0, [r4, #12]
   123b8:	pop	{r4, sl, fp, pc}
   123bc:	push	{r4, r5, fp, lr}
   123c0:	add	fp, sp, #8
   123c4:	mov	r4, r0
   123c8:	ldm	r1, {r0, r2}
   123cc:	cmp	r0, #0
   123d0:	beq	123e0 <error@@Base+0x1074>
   123d4:	str	r2, [r0, #4]
   123d8:	ldr	r2, [r1, #4]
   123dc:	b	123e4 <error@@Base+0x1078>
   123e0:	str	r2, [r4]
   123e4:	cmp	r2, #0
   123e8:	mov	r5, #0
   123ec:	addeq	r2, r4, #4
   123f0:	str	r0, [r2]
   123f4:	str	r5, [r1]
   123f8:	str	r5, [r1, #4]
   123fc:	ldr	r0, [r4, #8]
   12400:	cmp	r0, #0
   12404:	beq	12410 <error@@Base+0x10a4>
   12408:	bl	108a4 <free@plt>
   1240c:	str	r5, [r4, #8]
   12410:	ldr	r0, [r4, #12]
   12414:	sub	r0, r0, #1
   12418:	str	r0, [r4, #12]
   1241c:	pop	{r4, r5, fp, pc}
   12420:	push	{r4, sl, fp, lr}
   12424:	add	fp, sp, #8
   12428:	mov	r4, r0
   1242c:	ldr	r0, [r0, #8]
   12430:	cmp	r0, #0
   12434:	beq	1243c <error@@Base+0x10d0>
   12438:	pop	{r4, sl, fp, pc}
   1243c:	ldr	r0, [r4, #12]
   12440:	cmp	r0, #0
   12444:	beq	12438 <error@@Base+0x10cc>
   12448:	mov	r1, #4
   1244c:	bl	10e9c <abort@plt+0x508>
   12450:	str	r0, [r4, #8]
   12454:	ldr	r1, [r4]
   12458:	cmp	r1, #0
   1245c:	beq	12438 <error@@Base+0x10cc>
   12460:	str	r1, [r0]
   12464:	ldr	r0, [r1, #4]
   12468:	cmp	r0, #0
   1246c:	popeq	{r4, sl, fp, pc}
   12470:	mov	r1, #4
   12474:	ldr	r2, [r4, #8]
   12478:	str	r0, [r2, r1]
   1247c:	add	r1, r1, #4
   12480:	ldr	r0, [r0, #4]
   12484:	cmp	r0, #0
   12488:	bne	12474 <error@@Base+0x1108>
   1248c:	b	12438 <error@@Base+0x10cc>
   12490:	push	{r4, r5, r6, r7, fp, lr}
   12494:	add	fp, sp, #16
   12498:	ldr	r6, [r0]
   1249c:	cmp	r6, #0
   124a0:	beq	1251c <error@@Base+0x11b0>
   124a4:	mov	r4, r1
   124a8:	mov	r5, r0
   124ac:	mov	r7, #0
   124b0:	b	124d4 <error@@Base+0x1168>
   124b4:	ldr	r0, [r5, #12]
   124b8:	sub	r0, r0, #1
   124bc:	str	r0, [r5, #12]
   124c0:	mov	r0, r6
   124c4:	blx	r4
   124c8:	ldr	r6, [r5]
   124cc:	cmp	r6, #0
   124d0:	beq	1251c <error@@Base+0x11b0>
   124d4:	ldm	r6, {r0, r1}
   124d8:	cmp	r0, #0
   124dc:	beq	124ec <error@@Base+0x1180>
   124e0:	str	r1, [r0, #4]
   124e4:	ldr	r1, [r6, #4]
   124e8:	b	124f0 <error@@Base+0x1184>
   124ec:	str	r1, [r5]
   124f0:	cmp	r1, #0
   124f4:	addeq	r1, r5, #4
   124f8:	str	r0, [r1]
   124fc:	str	r7, [r6]
   12500:	str	r7, [r6, #4]
   12504:	ldr	r0, [r5, #8]
   12508:	cmp	r0, #0
   1250c:	beq	124b4 <error@@Base+0x1148>
   12510:	bl	108a4 <free@plt>
   12514:	str	r7, [r5, #8]
   12518:	b	124b4 <error@@Base+0x1148>
   1251c:	pop	{r4, r5, r6, r7, fp, pc}
   12520:	cmp	r0, #2
   12524:	bxlt	lr
   12528:	ldr	r3, [pc, #28]	; 1254c <error@@Base+0x11e0>
   1252c:	add	r3, pc, r3
   12530:	str	r2, [r3]
   12534:	ldr	r2, [pc, #20]	; 12550 <error@@Base+0x11e4>
   12538:	add	r2, pc, r2
   1253c:	str	r1, [r2]
   12540:	sub	r1, r0, #1
   12544:	mov	r0, #0
   12548:	b	12554 <error@@Base+0x11e8>
   1254c:	andeq	r0, r1, ip, ror #23
   12550:	ldrdeq	r0, [r1], -ip
   12554:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12558:	add	fp, sp, #24
   1255c:	mov	r8, r1
   12560:	mov	r5, r0
   12564:	b	12594 <error@@Base+0x1228>
   12568:	mov	r7, r4
   1256c:	ldr	r0, [pc, #308]	; 126a8 <error@@Base+0x133c>
   12570:	ldr	r0, [pc, r0]
   12574:	sub	r1, r4, #1
   12578:	str	r6, [r0, r4, lsl #2]
   1257c:	cmp	r1, r5
   12580:	movgt	r0, r5
   12584:	blgt	12554 <error@@Base+0x11e8>
   12588:	add	r5, r7, #1
   1258c:	cmp	r5, r8
   12590:	bge	12688 <error@@Base+0x131c>
   12594:	ldr	r0, [pc, #240]	; 1268c <error@@Base+0x1320>
   12598:	cmp	r5, r8
   1259c:	mov	r4, r8
   125a0:	mov	r7, r5
   125a4:	ldr	r0, [pc, r0]
   125a8:	ldr	r6, [r0, r5, lsl #2]
   125ac:	bge	12574 <error@@Base+0x1208>
   125b0:	mov	r7, r5
   125b4:	mov	r4, r8
   125b8:	cmp	r7, r4
   125bc:	blt	125d4 <error@@Base+0x1268>
   125c0:	b	12604 <error@@Base+0x1298>
   125c4:	cmp	r7, r4
   125c8:	bge	1256c <error@@Base+0x1200>
   125cc:	cmp	r7, r4
   125d0:	bge	12604 <error@@Base+0x1298>
   125d4:	ldr	r0, [pc, #180]	; 12690 <error@@Base+0x1324>
   125d8:	ldr	r0, [pc, r0]
   125dc:	ldr	r1, [r0, r4, lsl #2]
   125e0:	ldr	r2, [pc, #172]	; 12694 <error@@Base+0x1328>
   125e4:	mov	r0, r6
   125e8:	ldr	r2, [pc, r2]
   125ec:	blx	r2
   125f0:	cmn	r0, #1
   125f4:	bgt	12604 <error@@Base+0x1298>
   125f8:	sub	r4, r4, #1
   125fc:	cmp	r7, r4
   12600:	blt	125d4 <error@@Base+0x1268>
   12604:	cmp	r7, r4
   12608:	bne	12618 <error@@Base+0x12ac>
   1260c:	cmp	r7, r4
   12610:	blt	12634 <error@@Base+0x12c8>
   12614:	b	12668 <error@@Base+0x12fc>
   12618:	ldr	r0, [pc, #120]	; 12698 <error@@Base+0x132c>
   1261c:	ldr	r0, [pc, r0]
   12620:	ldr	r1, [r0, r4, lsl #2]
   12624:	str	r1, [r0, r7, lsl #2]
   12628:	add	r7, r7, #1
   1262c:	cmp	r7, r4
   12630:	bge	12668 <error@@Base+0x12fc>
   12634:	ldr	r0, [pc, #96]	; 1269c <error@@Base+0x1330>
   12638:	ldr	r0, [pc, r0]
   1263c:	ldr	r1, [r0, r7, lsl #2]
   12640:	ldr	r2, [pc, #88]	; 126a0 <error@@Base+0x1334>
   12644:	mov	r0, r6
   12648:	ldr	r2, [pc, r2]
   1264c:	blx	r2
   12650:	cmp	r0, #1
   12654:	blt	12668 <error@@Base+0x12fc>
   12658:	add	r7, r7, #1
   1265c:	cmp	r4, r7
   12660:	bne	12634 <error@@Base+0x12c8>
   12664:	b	12568 <error@@Base+0x11fc>
   12668:	cmp	r7, r4
   1266c:	beq	125c4 <error@@Base+0x1258>
   12670:	ldr	r0, [pc, #44]	; 126a4 <error@@Base+0x1338>
   12674:	ldr	r0, [pc, r0]
   12678:	ldr	r1, [r0, r7, lsl #2]
   1267c:	str	r1, [r0, r4, lsl #2]
   12680:	sub	r4, r4, #1
   12684:	b	125c4 <error@@Base+0x1258>
   12688:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1268c:	andeq	r0, r1, r0, ror fp
   12690:	andeq	r0, r1, ip, lsr fp
   12694:	andeq	r0, r1, r0, lsr fp
   12698:	strdeq	r0, [r1], -r8
   1269c:	ldrdeq	r0, [r1], -ip
   126a0:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   126a4:	andeq	r0, r1, r0, lsr #21
   126a8:	andeq	r0, r1, r4, lsr #23
   126ac:	push	{r4, r5, r6, sl, fp, lr}
   126b0:	add	fp, sp, #16
   126b4:	mov	r4, r0
   126b8:	movw	r0, #8048	; 0x1f70
   126bc:	movw	r6, #503	; 0x1f7
   126c0:	add	r5, r4, r0
   126c4:	mov	r0, r4
   126c8:	bl	12268 <error@@Base+0xefc>
   126cc:	subs	r6, r6, #1
   126d0:	add	r4, r4, #16
   126d4:	bne	126c4 <error@@Base+0x1358>
   126d8:	mov	r0, #0
   126dc:	str	r0, [r5]
   126e0:	str	r0, [r5, #4]
   126e4:	pop	{r4, r5, r6, sl, fp, pc}
   126e8:	push	{r4, r5, r6, sl, fp, lr}
   126ec:	add	fp, sp, #16
   126f0:	mov	r5, r1
   126f4:	ldrb	r1, [r1]
   126f8:	mov	r4, #0
   126fc:	mov	r2, #0
   12700:	cmp	r1, #0
   12704:	beq	12738 <error@@Base+0x13cc>
   12708:	add	r3, r5, #1
   1270c:	mov	r2, #0
   12710:	uxtab	r2, r2, r1
   12714:	ldrb	r1, [r3], #1
   12718:	cmp	r1, #0
   1271c:	bne	12710 <error@@Base+0x13a4>
   12720:	movw	r1, #20065	; 0x4e61
   12724:	movt	r1, #33354	; 0x824a
   12728:	umull	r1, r3, r2, r1
   1272c:	lsr	r1, r3, #8
   12730:	movw	r3, #503	; 0x1f7
   12734:	mls	r2, r1, r3, r2
   12738:	ldr	r6, [r0, r2, lsl #4]
   1273c:	cmp	r6, #0
   12740:	beq	12764 <error@@Base+0x13f8>
   12744:	ldr	r1, [r6, #8]
   12748:	mov	r0, r5
   1274c:	bl	10874 <strcmp@plt>
   12750:	cmp	r0, #0
   12754:	beq	1276c <error@@Base+0x1400>
   12758:	ldr	r6, [r6, #4]
   1275c:	cmp	r6, #0
   12760:	bne	12744 <error@@Base+0x13d8>
   12764:	mov	r0, r4
   12768:	pop	{r4, r5, r6, sl, fp, pc}
   1276c:	mov	r4, r6
   12770:	mov	r0, r4
   12774:	pop	{r4, r5, r6, sl, fp, pc}
   12778:	push	{r4, r5, fp, lr}
   1277c:	add	fp, sp, #8
   12780:	movw	r2, #8048	; 0x1f70
   12784:	add	r5, r0, r2
   12788:	ldr	r2, [r1, #8]
   1278c:	ldrb	r3, [r2]
   12790:	cmp	r3, #0
   12794:	beq	127cc <error@@Base+0x1460>
   12798:	add	r4, r2, #1
   1279c:	mov	r2, #0
   127a0:	uxtab	r2, r2, r3
   127a4:	ldrb	r3, [r4], #1
   127a8:	cmp	r3, #0
   127ac:	bne	127a0 <error@@Base+0x1434>
   127b0:	movw	r3, #20065	; 0x4e61
   127b4:	movt	r3, #33354	; 0x824a
   127b8:	umull	r3, r4, r2, r3
   127bc:	lsr	r3, r4, #8
   127c0:	movw	r4, #503	; 0x1f7
   127c4:	mls	r2, r3, r4, r2
   127c8:	b	127d0 <error@@Base+0x1464>
   127cc:	mov	r2, #0
   127d0:	add	r0, r0, r2, lsl #4
   127d4:	bl	12274 <error@@Base+0xf08>
   127d8:	ldr	r0, [r5]
   127dc:	cmp	r0, #0
   127e0:	beq	127f0 <error@@Base+0x1484>
   127e4:	bl	108a4 <free@plt>
   127e8:	mov	r0, #0
   127ec:	str	r0, [r5]
   127f0:	ldr	r0, [r5, #4]
   127f4:	add	r0, r0, #1
   127f8:	str	r0, [r5, #4]
   127fc:	pop	{r4, r5, fp, pc}
   12800:	push	{r4, r5, fp, lr}
   12804:	add	fp, sp, #8
   12808:	movw	r2, #8048	; 0x1f70
   1280c:	add	r5, r0, r2
   12810:	ldr	r2, [r1, #8]
   12814:	ldrb	r3, [r2]
   12818:	cmp	r3, #0
   1281c:	beq	12854 <error@@Base+0x14e8>
   12820:	add	r4, r2, #1
   12824:	mov	r2, #0
   12828:	uxtab	r2, r2, r3
   1282c:	ldrb	r3, [r4], #1
   12830:	cmp	r3, #0
   12834:	bne	12828 <error@@Base+0x14bc>
   12838:	movw	r3, #20065	; 0x4e61
   1283c:	movt	r3, #33354	; 0x824a
   12840:	umull	r3, r4, r2, r3
   12844:	lsr	r3, r4, #8
   12848:	movw	r4, #503	; 0x1f7
   1284c:	mls	r2, r3, r4, r2
   12850:	b	12858 <error@@Base+0x14ec>
   12854:	mov	r2, #0
   12858:	add	r0, r0, r2, lsl #4
   1285c:	bl	123bc <error@@Base+0x1050>
   12860:	ldr	r0, [r5]
   12864:	cmp	r0, #0
   12868:	beq	12878 <error@@Base+0x150c>
   1286c:	bl	108a4 <free@plt>
   12870:	mov	r0, #0
   12874:	str	r0, [r5]
   12878:	ldr	r0, [r5, #4]
   1287c:	sub	r0, r0, #1
   12880:	str	r0, [r5, #4]
   12884:	pop	{r4, r5, fp, pc}
   12888:	push	{r4, r5, fp, lr}
   1288c:	add	fp, sp, #8
   12890:	mov	r4, r0
   12894:	movw	r0, #8048	; 0x1f70
   12898:	mov	r5, r4
   1289c:	ldr	r0, [r5, r0]!
   128a0:	cmp	r0, #0
   128a4:	bne	12904 <error@@Base+0x1598>
   128a8:	ldr	r0, [r5, #4]
   128ac:	cmp	r0, #0
   128b0:	popeq	{r4, r5, fp, pc}
   128b4:	mov	r1, #4
   128b8:	bl	10e9c <abort@plt+0x508>
   128bc:	str	r0, [r5]
   128c0:	mov	r0, #0
   128c4:	movw	ip, #503	; 0x1f7
   128c8:	mov	r2, #0
   128cc:	b	128dc <error@@Base+0x1570>
   128d0:	add	r2, r2, #1
   128d4:	cmp	r2, ip
   128d8:	beq	12904 <error@@Base+0x1598>
   128dc:	ldr	r3, [r4, r2, lsl #4]
   128e0:	cmp	r3, #0
   128e4:	beq	128d0 <error@@Base+0x1564>
   128e8:	ldr	r1, [r5]
   128ec:	str	r3, [r1, r0, lsl #2]
   128f0:	add	r0, r0, #1
   128f4:	ldr	r3, [r3, #4]
   128f8:	cmp	r3, #0
   128fc:	bne	128e8 <error@@Base+0x157c>
   12900:	b	128d0 <error@@Base+0x1564>
   12904:	pop	{r4, r5, fp, pc}
   12908:	push	{r4, r5, r6, r7, fp, lr}
   1290c:	add	fp, sp, #16
   12910:	mov	r5, r0
   12914:	movw	r0, #8048	; 0x1f70
   12918:	mov	r4, r1
   1291c:	movw	r7, #503	; 0x1f7
   12920:	add	r6, r5, r0
   12924:	mov	r0, r5
   12928:	mov	r1, r4
   1292c:	bl	12490 <error@@Base+0x1124>
   12930:	subs	r7, r7, #1
   12934:	add	r5, r5, #16
   12938:	bne	12924 <error@@Base+0x15b8>
   1293c:	ldr	r0, [r6]
   12940:	cmp	r0, #0
   12944:	beq	12954 <error@@Base+0x15e8>
   12948:	bl	108a4 <free@plt>
   1294c:	mov	r0, #0
   12950:	str	r0, [r6]
   12954:	mov	r0, #0
   12958:	str	r0, [r6, #4]
   1295c:	pop	{r4, r5, r6, r7, fp, pc}
   12960:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12964:	mov	r7, r0
   12968:	ldr	r6, [pc, #72]	; 129b8 <error@@Base+0x164c>
   1296c:	ldr	r5, [pc, #72]	; 129bc <error@@Base+0x1650>
   12970:	add	r6, pc, r6
   12974:	add	r5, pc, r5
   12978:	sub	r6, r6, r5
   1297c:	mov	r8, r1
   12980:	mov	r9, r2
   12984:	bl	10848 <calloc@plt-0x20>
   12988:	asrs	r6, r6, #2
   1298c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12990:	mov	r4, #0
   12994:	add	r4, r4, #1
   12998:	ldr	r3, [r5], #4
   1299c:	mov	r2, r9
   129a0:	mov	r1, r8
   129a4:	mov	r0, r7
   129a8:	blx	r3
   129ac:	cmp	r6, r4
   129b0:	bne	12994 <error@@Base+0x1628>
   129b4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   129b8:	andeq	r0, r1, r4, lsl #11
   129bc:	andeq	r0, r1, ip, ror r5
   129c0:	bx	lr

Disassembly of section .fini:

000129c4 <.fini>:
   129c4:	push	{r3, lr}
   129c8:	pop	{r3, pc}
