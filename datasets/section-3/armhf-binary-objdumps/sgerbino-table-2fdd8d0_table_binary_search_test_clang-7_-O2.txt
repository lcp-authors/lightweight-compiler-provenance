
../repos/sgerbino-table-2fdd8d0/bin/table_binary_search_test:     file format elf32-littlearm


Disassembly of section .init:

00012f58 <.init>:
   12f58:	push	{r3, lr}
   12f5c:	bl	13044 <_start@@Base+0x3c>
   12f60:	pop	{r3, pc}

Disassembly of section .plt:

00012f64 <strcmp@plt-0x14>:
   12f64:	push	{lr}		; (str lr, [sp, #-4]!)
   12f68:	ldr	lr, [pc, #4]	; 12f74 <strcmp@plt-0x4>
   12f6c:	add	lr, pc, lr
   12f70:	ldr	pc, [lr, #8]!
   12f74:	andeq	r5, r1, ip, lsl #1

00012f78 <strcmp@plt>:
   12f78:	add	ip, pc, #0, 12
   12f7c:	add	ip, ip, #86016	; 0x15000
   12f80:	ldr	pc, [ip, #140]!	; 0x8c

00012f84 <printf@plt>:
   12f84:	add	ip, pc, #0, 12
   12f88:	add	ip, ip, #86016	; 0x15000
   12f8c:	ldr	pc, [ip, #132]!	; 0x84

00012f90 <free@plt>:
   12f90:	add	ip, pc, #0, 12
   12f94:	add	ip, ip, #86016	; 0x15000
   12f98:	ldr	pc, [ip, #124]!	; 0x7c

00012f9c <realloc@plt>:
   12f9c:	add	ip, pc, #0, 12
   12fa0:	add	ip, ip, #86016	; 0x15000
   12fa4:	ldr	pc, [ip, #116]!	; 0x74

00012fa8 <strcpy@plt>:
   12fa8:	add	ip, pc, #0, 12
   12fac:	add	ip, ip, #86016	; 0x15000
   12fb0:	ldr	pc, [ip, #108]!	; 0x6c

00012fb4 <malloc@plt>:
   12fb4:	add	ip, pc, #0, 12
   12fb8:	add	ip, ip, #86016	; 0x15000
   12fbc:	ldr	pc, [ip, #100]!	; 0x64

00012fc0 <__libc_start_main@plt>:
   12fc0:	add	ip, pc, #0, 12
   12fc4:	add	ip, ip, #86016	; 0x15000
   12fc8:	ldr	pc, [ip, #92]!	; 0x5c

00012fcc <__gmon_start__@plt>:
   12fcc:	add	ip, pc, #0, 12
   12fd0:	add	ip, ip, #86016	; 0x15000
   12fd4:	ldr	pc, [ip, #84]!	; 0x54

00012fd8 <strlen@plt>:
   12fd8:	add	ip, pc, #0, 12
   12fdc:	add	ip, ip, #86016	; 0x15000
   12fe0:	ldr	pc, [ip, #76]!	; 0x4c

00012fe4 <snprintf@plt>:
   12fe4:	add	ip, pc, #0, 12
   12fe8:	add	ip, ip, #86016	; 0x15000
   12fec:	ldr	pc, [ip, #68]!	; 0x44

00012ff0 <__isoc99_sscanf@plt>:
   12ff0:	add	ip, pc, #0, 12
   12ff4:	add	ip, ip, #86016	; 0x15000
   12ff8:	ldr	pc, [ip, #60]!	; 0x3c

00012ffc <abort@plt>:
   12ffc:	add	ip, pc, #0, 12
   13000:	add	ip, ip, #86016	; 0x15000
   13004:	ldr	pc, [ip, #52]!	; 0x34

Disassembly of section .text:

00013008 <_start@@Base>:
   13008:	mov	fp, #0
   1300c:	mov	lr, #0
   13010:	pop	{r1}		; (ldr r1, [sp], #4)
   13014:	mov	r2, sp
   13018:	push	{r2}		; (str r2, [sp, #-4]!)
   1301c:	push	{r0}		; (str r0, [sp, #-4]!)
   13020:	ldr	ip, [pc, #16]	; 13038 <_start@@Base+0x30>
   13024:	push	{ip}		; (str ip, [sp, #-4]!)
   13028:	ldr	r0, [pc, #12]	; 1303c <_start@@Base+0x34>
   1302c:	ldr	r3, [pc, #12]	; 13040 <_start@@Base+0x38>
   13030:	bl	12fc0 <__libc_start_main@plt>
   13034:	bl	12ffc <abort@plt>
   13038:	strdeq	r7, [r1], -ip
   1303c:	strdeq	r3, [r1], -r8
   13040:	muleq	r1, ip, r6
   13044:	ldr	r3, [pc, #20]	; 13060 <_start@@Base+0x58>
   13048:	ldr	r2, [pc, #20]	; 13064 <_start@@Base+0x5c>
   1304c:	add	r3, pc, r3
   13050:	ldr	r2, [r3, r2]
   13054:	cmp	r2, #0
   13058:	bxeq	lr
   1305c:	b	12fcc <__gmon_start__@plt>
   13060:	andeq	r4, r1, ip, lsr #31
   13064:	andeq	r0, r0, ip, lsr r0
   13068:	ldr	r0, [pc, #24]	; 13088 <_start@@Base+0x80>
   1306c:	ldr	r3, [pc, #24]	; 1308c <_start@@Base+0x84>
   13070:	cmp	r3, r0
   13074:	bxeq	lr
   13078:	ldr	r3, [pc, #16]	; 13090 <_start@@Base+0x88>
   1307c:	cmp	r3, #0
   13080:	bxeq	lr
   13084:	bx	r3
   13088:	andeq	r8, r2, r8, asr #32
   1308c:	andeq	r8, r2, r8, asr #32
   13090:	andeq	r0, r0, r0
   13094:	ldr	r0, [pc, #36]	; 130c0 <_start@@Base+0xb8>
   13098:	ldr	r1, [pc, #36]	; 130c4 <_start@@Base+0xbc>
   1309c:	sub	r1, r1, r0
   130a0:	asr	r1, r1, #2
   130a4:	add	r1, r1, r1, lsr #31
   130a8:	asrs	r1, r1, #1
   130ac:	bxeq	lr
   130b0:	ldr	r3, [pc, #16]	; 130c8 <_start@@Base+0xc0>
   130b4:	cmp	r3, #0
   130b8:	bxeq	lr
   130bc:	bx	r3
   130c0:	andeq	r8, r2, r8, asr #32
   130c4:	andeq	r8, r2, r8, asr #32
   130c8:	andeq	r0, r0, r0
   130cc:	push	{r4, lr}
   130d0:	ldr	r4, [pc, #24]	; 130f0 <_start@@Base+0xe8>
   130d4:	ldrb	r3, [r4]
   130d8:	cmp	r3, #0
   130dc:	popne	{r4, pc}
   130e0:	bl	13068 <_start@@Base+0x60>
   130e4:	mov	r3, #1
   130e8:	strb	r3, [r4]
   130ec:	pop	{r4, pc}
   130f0:	andeq	r8, r2, r8, asr #32
   130f4:	b	13094 <_start@@Base+0x8c>

000130f8 <main@@Base>:
   130f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   130fc:	add	fp, sp, #28
   13100:	sub	sp, sp, #4
   13104:	vpush	{d8-d10}
   13108:	sub	sp, sp, #64	; 0x40
   1310c:	add	r5, sp, #8
   13110:	mov	r0, r5
   13114:	bl	13364 <table_init@@Base>
   13118:	ldr	r1, [pc, #476]	; 132fc <main@@Base+0x204>
   1311c:	mov	r0, r5
   13120:	mov	r2, #0
   13124:	mov	r7, #0
   13128:	add	r1, pc, r1
   1312c:	bl	13dd8 <table_add_column@@Base>
   13130:	ldr	r1, [pc, #456]	; 13300 <main@@Base+0x208>
   13134:	mov	sl, r0
   13138:	mov	r0, r5
   1313c:	mov	r2, #16
   13140:	add	r1, pc, r1
   13144:	bl	13dd8 <table_add_column@@Base>
   13148:	vldr	s18, [pc, #424]	; 132f8 <main@@Base+0x200>
   1314c:	movw	r9, #52429	; 0xcccd
   13150:	mov	r8, r0
   13154:	vmov.f32	s20, #80	; 0x3e800000  0.250
   13158:	mov	r4, #0
   1315c:	movt	r9, #52428	; 0xcccc
   13160:	vmov.f32	s16, s18
   13164:	mov	r0, r5
   13168:	bl	15b40 <table_add_row@@Base>
   1316c:	uxtb	r0, r4
   13170:	cmp	r4, #0
   13174:	umull	r1, r2, r0, r9
   13178:	lsr	r1, r2, #3
   1317c:	mov	r2, sl
   13180:	add	r1, r1, r1, lsl #2
   13184:	sub	r0, r0, r1, lsl #1
   13188:	mov	r1, r4
   1318c:	clz	r0, r0
   13190:	movwne	r1, #1
   13194:	lsr	r0, r0, #5
   13198:	and	r6, r1, r0
   1319c:	mov	r0, r5
   131a0:	mov	r1, r4
   131a4:	add	r7, r7, r6
   131a8:	mov	r3, r7
   131ac:	bl	1609c <table_set_int@@Base>
   131b0:	cmp	r6, #0
   131b4:	mov	r0, r5
   131b8:	mov	r1, r4
   131bc:	mov	r2, r8
   131c0:	vseleq.f32	s0, s16, s18
   131c4:	tst	r4, #1
   131c8:	vadd.f32	s2, s0, s20
   131cc:	vseleq.f32	s2, s2, s0
   131d0:	cmp	r4, #0
   131d4:	vseleq.f32	s16, s0, s2
   131d8:	vmov.f32	s0, s16
   131dc:	bl	168bc <table_set_float@@Base>
   131e0:	add	r4, r4, #1
   131e4:	cmp	r4, #100	; 0x64
   131e8:	bne	13164 <main@@Base+0x6c>
   131ec:	add	r4, sp, #8
   131f0:	mov	r1, sl
   131f4:	mov	r2, #4
   131f8:	mov	r3, #0
   131fc:	mov	r9, #0
   13200:	mov	r0, r4
   13204:	bl	14d6c <table_sorted_find_int@@Base>
   13208:	mov	r7, r0
   1320c:	mov	r0, r4
   13210:	mov	r1, sl
   13214:	mov	r2, #4
   13218:	mov	r3, #1
   1321c:	bl	14d6c <table_sorted_find_int@@Base>
   13220:	mov	r6, r0
   13224:	cmp	r7, #40	; 0x28
   13228:	beq	13240 <main@@Base+0x148>
   1322c:	ldr	r0, [pc, #208]	; 13304 <main@@Base+0x20c>
   13230:	mov	r1, r7
   13234:	add	r0, pc, r0
   13238:	bl	12f84 <printf@plt>
   1323c:	mvn	r9, #0
   13240:	cmp	r6, #49	; 0x31
   13244:	beq	1325c <main@@Base+0x164>
   13248:	ldr	r0, [pc, #184]	; 13308 <main@@Base+0x210>
   1324c:	mov	r1, r6
   13250:	add	r0, pc, r0
   13254:	bl	12f84 <printf@plt>
   13258:	mvn	r9, #0
   1325c:	add	r4, sp, #8
   13260:	vmov.f32	s16, #96	; 0x3f000000  0.5
   13264:	mov	r1, r8
   13268:	mov	r2, #0
   1326c:	mov	r3, r7
   13270:	str	r6, [sp]
   13274:	mov	r0, r4
   13278:	vmov.f32	s0, s16
   1327c:	bl	15760 <table_sorted_subset_find_float@@Base>
   13280:	mov	r5, r0
   13284:	mov	r0, r4
   13288:	mov	r1, r8
   1328c:	vmov.f32	s0, s16
   13290:	mov	r2, #1
   13294:	mov	r3, r7
   13298:	str	r6, [sp]
   1329c:	bl	15760 <table_sorted_subset_find_float@@Base>
   132a0:	mov	r4, r0
   132a4:	cmp	r5, #42	; 0x2a
   132a8:	beq	132c0 <main@@Base+0x1c8>
   132ac:	ldr	r0, [pc, #88]	; 1330c <main@@Base+0x214>
   132b0:	mov	r1, r5
   132b4:	add	r0, pc, r0
   132b8:	bl	12f84 <printf@plt>
   132bc:	mvn	r9, #0
   132c0:	cmp	r4, #43	; 0x2b
   132c4:	beq	132dc <main@@Base+0x1e4>
   132c8:	ldr	r0, [pc, #64]	; 13310 <main@@Base+0x218>
   132cc:	mov	r1, r4
   132d0:	add	r0, pc, r0
   132d4:	bl	12f84 <printf@plt>
   132d8:	mvn	r9, #0
   132dc:	add	r0, sp, #8
   132e0:	bl	133c0 <table_destroy@@Base>
   132e4:	mov	r0, r9
   132e8:	sub	sp, fp, #56	; 0x38
   132ec:	vpop	{d8-d10}
   132f0:	add	sp, sp, #4
   132f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   132f8:	andeq	r0, r0, r0
   132fc:	ldrdeq	r4, [r0], -ip
   13300:	andeq	r4, r0, r6, asr #11
   13304:	ldrdeq	r4, [r0], -r4	; <UNPREDICTABLE>
   13308:	strdeq	r4, [r0], -r0
   1330c:	andeq	r4, r0, r3, asr #9
   13310:	andeq	r4, r0, r5, ror #9

00013314 <table_new@@Base>:
   13314:	push	{fp, lr}
   13318:	mov	fp, sp
   1331c:	mov	r0, #56	; 0x38
   13320:	bl	12fb4 <malloc@plt>
   13324:	mov	r1, #0
   13328:	mov	r2, #10
   1332c:	mov	r3, #20
   13330:	vmov.i32	q8, #0	; 0x00000000
   13334:	str	r1, [r0]
   13338:	stmib	r0, {r1, r2}
   1333c:	str	r1, [r0, #12]
   13340:	str	r1, [r0, #16]
   13344:	str	r1, [r0, #20]
   13348:	str	r3, [r0, #24]
   1334c:	str	r1, [r0, #28]
   13350:	str	r2, [r0, #48]	; 0x30
   13354:	str	r1, [r0, #52]	; 0x34
   13358:	add	r1, r0, #32
   1335c:	vst1.32	{d16-d17}, [r1]
   13360:	pop	{fp, pc}

00013364 <table_init@@Base>:
   13364:	mov	r1, #0
   13368:	mov	r2, #10
   1336c:	mov	r3, #20
   13370:	vmov.i32	q8, #0	; 0x00000000
   13374:	str	r1, [r0]
   13378:	stmib	r0, {r1, r2}
   1337c:	str	r1, [r0, #12]
   13380:	str	r1, [r0, #16]
   13384:	str	r1, [r0, #20]
   13388:	str	r3, [r0, #24]
   1338c:	str	r1, [r0, #28]
   13390:	str	r2, [r0, #48]	; 0x30
   13394:	str	r1, [r0, #52]	; 0x34
   13398:	add	r0, r0, #32
   1339c:	vst1.32	{d16-d17}, [r0]
   133a0:	bx	lr

000133a4 <table_delete@@Base>:
   133a4:	push	{r4, sl, fp, lr}
   133a8:	add	fp, sp, #8
   133ac:	mov	r4, r0
   133b0:	bl	133c0 <table_destroy@@Base>
   133b4:	mov	r0, r4
   133b8:	pop	{r4, sl, fp, lr}
   133bc:	b	12f90 <free@plt>

000133c0 <table_destroy@@Base>:
   133c0:	cmp	r0, #0
   133c4:	bxeq	lr
   133c8:	push	{r4, r5, r6, sl, fp, lr}
   133cc:	add	fp, sp, #16
   133d0:	mvn	r1, #0
   133d4:	mvn	r2, #0
   133d8:	mov	r3, #64	; 0x40
   133dc:	mov	r4, r0
   133e0:	bl	13c5c <table_notify@@Base>
   133e4:	mov	r0, r4
   133e8:	bl	15b38 <table_get_row_length@@Base>
   133ec:	cmp	r0, #1
   133f0:	blt	13414 <table_destroy@@Base+0x54>
   133f4:	mov	r5, r0
   133f8:	mov	r6, #0
   133fc:	mov	r0, r4
   13400:	mov	r1, r6
   13404:	bl	15ae0 <table_row_destroy@@Base>
   13408:	add	r6, r6, #1
   1340c:	cmp	r5, r6
   13410:	bne	133fc <table_destroy@@Base+0x3c>
   13414:	ldr	r0, [r4, #16]
   13418:	cmp	r0, #0
   1341c:	beq	13424 <table_destroy@@Base+0x64>
   13420:	bl	12f90 <free@plt>
   13424:	mov	r0, r4
   13428:	bl	13d50 <table_get_column_length@@Base>
   1342c:	cmp	r0, #1
   13430:	blt	13454 <table_destroy@@Base+0x94>
   13434:	mov	r5, r0
   13438:	mov	r6, #0
   1343c:	mov	r0, r4
   13440:	mov	r1, r6
   13444:	bl	13d38 <table_column_destroy@@Base>
   13448:	add	r6, r6, #1
   1344c:	cmp	r5, r6
   13450:	bne	1343c <table_destroy@@Base+0x7c>
   13454:	ldr	r0, [r4]
   13458:	cmp	r0, #0
   1345c:	beq	13464 <table_destroy@@Base+0xa4>
   13460:	bl	12f90 <free@plt>
   13464:	ldr	r0, [r4, #36]	; 0x24
   13468:	cmp	r0, #0
   1346c:	beq	13474 <table_destroy@@Base+0xb4>
   13470:	bl	12f90 <free@plt>
   13474:	ldr	r0, [r4, #40]	; 0x28
   13478:	cmp	r0, #0
   1347c:	beq	13484 <table_destroy@@Base+0xc4>
   13480:	bl	12f90 <free@plt>
   13484:	ldr	r0, [r4, #44]	; 0x2c
   13488:	cmp	r0, #0
   1348c:	pop	{r4, r5, r6, sl, fp, lr}
   13490:	beq	13498 <table_destroy@@Base+0xd8>
   13494:	b	12f90 <free@plt>
   13498:	bx	lr

0001349c <table_dupe@@Base>:
   1349c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   134a0:	add	fp, sp, #28
   134a4:	sub	sp, sp, #12
   134a8:	mov	r4, r0
   134ac:	bl	15b38 <table_get_row_length@@Base>
   134b0:	mov	r8, r0
   134b4:	mov	r0, r4
   134b8:	bl	13d50 <table_get_column_length@@Base>
   134bc:	mov	r6, r0
   134c0:	mov	r0, #56	; 0x38
   134c4:	bl	12fb4 <malloc@plt>
   134c8:	mov	sl, r0
   134cc:	mov	r5, #0
   134d0:	mov	r0, #10
   134d4:	mov	r1, #20
   134d8:	cmp	r6, #1
   134dc:	vmov.i32	q8, #0	; 0x00000000
   134e0:	str	r5, [sl]
   134e4:	str	r5, [sl, #4]
   134e8:	str	r0, [sl, #8]
   134ec:	str	r5, [sl, #12]
   134f0:	str	r5, [sl, #16]
   134f4:	str	r5, [sl, #20]
   134f8:	str	r1, [sl, #24]
   134fc:	str	r5, [sl, #28]
   13500:	str	r0, [sl, #48]	; 0x30
   13504:	add	r0, sl, #32
   13508:	str	r5, [sl, #52]	; 0x34
   1350c:	vst1.32	{d16-d17}, [r0]
   13510:	blt	1354c <table_dupe@@Base+0xb0>
   13514:	mov	r0, r4
   13518:	mov	r1, r5
   1351c:	bl	13db4 <table_get_column_name@@Base>
   13520:	mov	r7, r0
   13524:	mov	r0, r4
   13528:	mov	r1, r5
   1352c:	bl	13dc4 <table_get_column_data_type@@Base>
   13530:	mov	r2, r0
   13534:	mov	r0, sl
   13538:	mov	r1, r7
   1353c:	bl	13dd8 <table_add_column@@Base>
   13540:	add	r5, r5, #1
   13544:	cmp	r6, r5
   13548:	bne	13514 <table_dupe@@Base+0x78>
   1354c:	cmp	r8, #1
   13550:	blt	139bc <table_dupe@@Base+0x520>
   13554:	mov	r5, #0
   13558:	add	r9, sp, #8
   1355c:	mov	r0, sl
   13560:	bl	15b40 <table_add_row@@Base>
   13564:	cmp	r6, #1
   13568:	blt	139b0 <table_dupe@@Base+0x514>
   1356c:	mov	r7, #0
   13570:	mov	r0, r4
   13574:	mov	r1, r7
   13578:	bl	13dc4 <table_get_column_data_type@@Base>
   1357c:	cmp	r0, #23
   13580:	bhi	139a4 <table_dupe@@Base+0x508>
   13584:	add	r1, pc, #4
   13588:	ldr	r0, [r1, r0, lsl #2]
   1358c:	add	pc, r1, r0
   13590:	andeq	r0, r0, r0, rrx
   13594:	andeq	r0, r0, r8, lsl #1
   13598:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   1359c:	ldrdeq	r0, [r0], -r8
   135a0:	andeq	r0, r0, r0, lsl #2
   135a4:	andeq	r0, r0, r8, lsr #2
   135a8:	andeq	r0, r0, r0, asr r1
   135ac:	andeq	r0, r0, r8, ror r1
   135b0:	andeq	r0, r0, r0, lsr #3
   135b4:	andeq	r0, r0, r8, asr #3
   135b8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   135bc:	andeq	r0, r0, r8, lsl r2
   135c0:	andeq	r0, r0, r0, asr #4
   135c4:	andeq	r0, r0, r8, ror #4
   135c8:	muleq	r0, r0, r2
   135cc:			; <UNDEFINED> instruction: 0x000002b8
   135d0:	andeq	r0, r0, r0, ror #5
   135d4:	andeq	r0, r0, r4, lsl #6
   135d8:	andeq	r0, r0, r8, lsr #6
   135dc:	andeq	r0, r0, ip, asr #6
   135e0:	andeq	r0, r0, r4, ror r3
   135e4:	muleq	r0, ip, r3
   135e8:	andeq	r0, r0, r4, asr #7
   135ec:	andeq	r0, r0, ip, ror #7
   135f0:	mov	r0, r4
   135f4:	mov	r1, r5
   135f8:	mov	r2, r7
   135fc:	bl	15890 <table_get_int@@Base>
   13600:	mov	r3, r0
   13604:	mov	r0, sl
   13608:	mov	r1, r5
   1360c:	mov	r2, r7
   13610:	bl	1609c <table_set_int@@Base>
   13614:	b	139a4 <table_dupe@@Base+0x508>
   13618:	mov	r0, r4
   1361c:	mov	r1, r5
   13620:	mov	r2, r7
   13624:	bl	158a8 <table_get_uint@@Base>
   13628:	mov	r3, r0
   1362c:	mov	r0, sl
   13630:	mov	r1, r5
   13634:	mov	r2, r7
   13638:	bl	1611c <table_set_uint@@Base>
   1363c:	b	139a4 <table_dupe@@Base+0x508>
   13640:	mov	r0, r4
   13644:	mov	r1, r5
   13648:	mov	r2, r7
   1364c:	bl	158c0 <table_get_int8@@Base>
   13650:	mov	r3, r0
   13654:	mov	r0, sl
   13658:	mov	r1, r5
   1365c:	mov	r2, r7
   13660:	bl	1619c <table_set_int8@@Base>
   13664:	b	139a4 <table_dupe@@Base+0x508>
   13668:	mov	r0, r4
   1366c:	mov	r1, r5
   13670:	mov	r2, r7
   13674:	bl	158d8 <table_get_uint8@@Base>
   13678:	mov	r3, r0
   1367c:	mov	r0, sl
   13680:	mov	r1, r5
   13684:	mov	r2, r7
   13688:	bl	1621c <table_set_uint8@@Base>
   1368c:	b	139a4 <table_dupe@@Base+0x508>
   13690:	mov	r0, r4
   13694:	mov	r1, r5
   13698:	mov	r2, r7
   1369c:	bl	158f0 <table_get_int16@@Base>
   136a0:	mov	r3, r0
   136a4:	mov	r0, sl
   136a8:	mov	r1, r5
   136ac:	mov	r2, r7
   136b0:	bl	1629c <table_set_int16@@Base>
   136b4:	b	139a4 <table_dupe@@Base+0x508>
   136b8:	mov	r0, r4
   136bc:	mov	r1, r5
   136c0:	mov	r2, r7
   136c4:	bl	15908 <table_get_uint16@@Base>
   136c8:	mov	r3, r0
   136cc:	mov	r0, sl
   136d0:	mov	r1, r5
   136d4:	mov	r2, r7
   136d8:	bl	1631c <table_set_uint16@@Base>
   136dc:	b	139a4 <table_dupe@@Base+0x508>
   136e0:	mov	r0, r4
   136e4:	mov	r1, r5
   136e8:	mov	r2, r7
   136ec:	bl	15920 <table_get_int32@@Base>
   136f0:	mov	r3, r0
   136f4:	mov	r0, sl
   136f8:	mov	r1, r5
   136fc:	mov	r2, r7
   13700:	bl	1639c <table_set_int32@@Base>
   13704:	b	139a4 <table_dupe@@Base+0x508>
   13708:	mov	r0, r4
   1370c:	mov	r1, r5
   13710:	mov	r2, r7
   13714:	bl	15938 <table_get_uint32@@Base>
   13718:	mov	r3, r0
   1371c:	mov	r0, sl
   13720:	mov	r1, r5
   13724:	mov	r2, r7
   13728:	bl	1641c <table_set_uint32@@Base>
   1372c:	b	139a4 <table_dupe@@Base+0x508>
   13730:	mov	r0, r4
   13734:	mov	r1, r5
   13738:	mov	r2, r7
   1373c:	bl	15950 <table_get_int64@@Base>
   13740:	stm	sp, {r0, r1}
   13744:	mov	r0, sl
   13748:	mov	r1, r5
   1374c:	mov	r2, r7
   13750:	bl	1649c <table_set_int64@@Base>
   13754:	b	139a4 <table_dupe@@Base+0x508>
   13758:	mov	r0, r4
   1375c:	mov	r1, r5
   13760:	mov	r2, r7
   13764:	bl	15968 <table_get_uint64@@Base>
   13768:	stm	sp, {r0, r1}
   1376c:	mov	r0, sl
   13770:	mov	r1, r5
   13774:	mov	r2, r7
   13778:	bl	16524 <table_set_uint64@@Base>
   1377c:	b	139a4 <table_dupe@@Base+0x508>
   13780:	mov	r0, r4
   13784:	mov	r1, r5
   13788:	mov	r2, r7
   1378c:	bl	15980 <table_get_short@@Base>
   13790:	mov	r3, r0
   13794:	mov	r0, sl
   13798:	mov	r1, r5
   1379c:	mov	r2, r7
   137a0:	bl	165ac <table_set_short@@Base>
   137a4:	b	139a4 <table_dupe@@Base+0x508>
   137a8:	mov	r0, r4
   137ac:	mov	r1, r5
   137b0:	mov	r2, r7
   137b4:	bl	15998 <table_get_ushort@@Base>
   137b8:	mov	r3, r0
   137bc:	mov	r0, sl
   137c0:	mov	r1, r5
   137c4:	mov	r2, r7
   137c8:	bl	1662c <table_set_ushort@@Base>
   137cc:	b	139a4 <table_dupe@@Base+0x508>
   137d0:	mov	r0, r4
   137d4:	mov	r1, r5
   137d8:	mov	r2, r7
   137dc:	bl	159b0 <table_get_long@@Base>
   137e0:	mov	r3, r0
   137e4:	mov	r0, sl
   137e8:	mov	r1, r5
   137ec:	mov	r2, r7
   137f0:	bl	166ac <table_set_long@@Base>
   137f4:	b	139a4 <table_dupe@@Base+0x508>
   137f8:	mov	r0, r4
   137fc:	mov	r1, r5
   13800:	mov	r2, r7
   13804:	bl	159c8 <table_get_ulong@@Base>
   13808:	mov	r3, r0
   1380c:	mov	r0, sl
   13810:	mov	r1, r5
   13814:	mov	r2, r7
   13818:	bl	1672c <table_set_ulong@@Base>
   1381c:	b	139a4 <table_dupe@@Base+0x508>
   13820:	mov	r0, r4
   13824:	mov	r1, r5
   13828:	mov	r2, r7
   1382c:	bl	159e0 <table_get_llong@@Base>
   13830:	stm	sp, {r0, r1}
   13834:	mov	r0, sl
   13838:	mov	r1, r5
   1383c:	mov	r2, r7
   13840:	bl	167ac <table_set_llong@@Base>
   13844:	b	139a4 <table_dupe@@Base+0x508>
   13848:	mov	r0, r4
   1384c:	mov	r1, r5
   13850:	mov	r2, r7
   13854:	bl	159f8 <table_get_ullong@@Base>
   13858:	stm	sp, {r0, r1}
   1385c:	mov	r0, sl
   13860:	mov	r1, r5
   13864:	mov	r2, r7
   13868:	bl	16834 <table_set_ullong@@Base>
   1386c:	b	139a4 <table_dupe@@Base+0x508>
   13870:	mov	r0, r4
   13874:	mov	r1, r5
   13878:	mov	r2, r7
   1387c:	bl	15a10 <table_get_float@@Base>
   13880:	mov	r0, sl
   13884:	mov	r1, r5
   13888:	mov	r2, r7
   1388c:	bl	168bc <table_set_float@@Base>
   13890:	b	139a4 <table_dupe@@Base+0x508>
   13894:	mov	r0, r4
   13898:	mov	r1, r5
   1389c:	mov	r2, r7
   138a0:	bl	15a28 <table_get_double@@Base>
   138a4:	mov	r0, sl
   138a8:	mov	r1, r5
   138ac:	mov	r2, r7
   138b0:	bl	16948 <table_set_double@@Base>
   138b4:	b	139a4 <table_dupe@@Base+0x508>
   138b8:	mov	r0, r4
   138bc:	mov	r1, r5
   138c0:	mov	r2, r7
   138c4:	bl	15a40 <table_get_ldouble@@Base>
   138c8:	mov	r0, sl
   138cc:	mov	r1, r5
   138d0:	mov	r2, r7
   138d4:	bl	169d0 <table_set_ldouble@@Base>
   138d8:	b	139a4 <table_dupe@@Base+0x508>
   138dc:	mov	r0, r4
   138e0:	mov	r1, r5
   138e4:	mov	r2, r7
   138e8:	bl	15a58 <table_get_char@@Base>
   138ec:	mov	r3, r0
   138f0:	mov	r0, sl
   138f4:	mov	r1, r5
   138f8:	mov	r2, r7
   138fc:	bl	16a78 <table_set_char@@Base>
   13900:	b	139a4 <table_dupe@@Base+0x508>
   13904:	mov	r0, r4
   13908:	mov	r1, r5
   1390c:	mov	r2, r7
   13910:	bl	15a70 <table_get_uchar@@Base>
   13914:	mov	r3, r0
   13918:	mov	r0, sl
   1391c:	mov	r1, r5
   13920:	mov	r2, r7
   13924:	bl	16af8 <table_set_uchar@@Base>
   13928:	b	139a4 <table_dupe@@Base+0x508>
   1392c:	mov	r0, r4
   13930:	mov	r1, r5
   13934:	mov	r2, r7
   13938:	bl	15a88 <table_get_string@@Base>
   1393c:	mov	r3, r0
   13940:	mov	r0, sl
   13944:	mov	r1, r5
   13948:	mov	r2, r7
   1394c:	bl	16a58 <table_set_string@@Base>
   13950:	b	139a4 <table_dupe@@Base+0x508>
   13954:	mov	r0, r4
   13958:	mov	r1, r5
   1395c:	mov	r2, r7
   13960:	bl	15878 <table_get_bool@@Base>
   13964:	mov	r3, r0
   13968:	mov	r0, sl
   1396c:	mov	r1, r5
   13970:	mov	r2, r7
   13974:	bl	1601c <table_set_bool@@Base>
   13978:	b	139a4 <table_dupe@@Base+0x508>
   1397c:	mov	r0, r4
   13980:	mov	r1, r5
   13984:	mov	r2, r7
   13988:	bl	15a9c <table_get_ptr@@Base>
   1398c:	str	r0, [sp, #8]
   13990:	mov	r0, sl
   13994:	mov	r1, r5
   13998:	mov	r2, r7
   1399c:	mov	r3, r9
   139a0:	bl	16b78 <table_set_ptr@@Base>
   139a4:	add	r7, r7, #1
   139a8:	cmp	r6, r7
   139ac:	bne	13570 <table_dupe@@Base+0xd4>
   139b0:	add	r5, r5, #1
   139b4:	cmp	r5, r8
   139b8:	bne	1355c <table_dupe@@Base+0xc0>
   139bc:	mov	r0, sl
   139c0:	sub	sp, fp, #28
   139c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000139c8 <table_get_major_version@@Base>:
   139c8:	mov	r0, #0
   139cc:	bx	lr

000139d0 <table_get_minor_version@@Base>:
   139d0:	mov	r0, #0
   139d4:	bx	lr

000139d8 <table_get_patch_version@@Base>:
   139d8:	mov	r0, #0
   139dc:	bx	lr

000139e0 <table_get_version@@Base>:
   139e0:	ldr	r0, [pc, #4]	; 139ec <table_get_version@@Base+0xc>
   139e4:	add	r0, pc, r0
   139e8:	bx	lr
   139ec:	andeq	r3, r0, r1, lsr #26

000139f0 <table_get_callback_length@@Base>:
   139f0:	ldr	r0, [r0, #32]
   139f4:	bx	lr

000139f8 <table_register_callback@@Base>:
   139f8:	push	{r4, r5, r6, r7, fp, lr}
   139fc:	add	fp, sp, #16
   13a00:	mov	r5, r0
   13a04:	ldr	r0, [r0, #32]
   13a08:	mov	r4, r3
   13a0c:	mov	r6, r2
   13a10:	mov	r7, r1
   13a14:	cmp	r0, #1
   13a18:	blt	13a4c <table_register_callback@@Base+0x54>
   13a1c:	ldr	r2, [r5, #36]	; 0x24
   13a20:	mov	r1, #0
   13a24:	ldr	r3, [r2, r1, lsl #2]
   13a28:	cmp	r3, r7
   13a2c:	bne	13a40 <table_register_callback@@Base+0x48>
   13a30:	ldr	r3, [r5, #40]	; 0x28
   13a34:	ldr	r3, [r3, r1, lsl #2]
   13a38:	cmp	r3, r6
   13a3c:	beq	13ad0 <table_register_callback@@Base+0xd8>
   13a40:	add	r1, r1, #1
   13a44:	cmp	r1, r0
   13a48:	blt	13a24 <table_register_callback@@Base+0x2c>
   13a4c:	ldr	r1, [r5, #48]	; 0x30
   13a50:	udiv	r2, r0, r1
   13a54:	mls	r2, r2, r1, r0
   13a58:	cmp	r2, #0
   13a5c:	bne	13aa8 <table_register_callback@@Base+0xb0>
   13a60:	ldr	r2, [r5, #52]	; 0x34
   13a64:	ldr	r0, [r5, #36]	; 0x24
   13a68:	add	r1, r2, r1
   13a6c:	str	r1, [r5, #52]	; 0x34
   13a70:	lsl	r1, r1, #2
   13a74:	bl	12f9c <realloc@plt>
   13a78:	str	r0, [r5, #36]	; 0x24
   13a7c:	ldr	r1, [r5, #52]	; 0x34
   13a80:	ldr	r0, [r5, #40]	; 0x28
   13a84:	lsl	r1, r1, #2
   13a88:	bl	12f9c <realloc@plt>
   13a8c:	str	r0, [r5, #40]	; 0x28
   13a90:	ldr	r1, [r5, #52]	; 0x34
   13a94:	ldr	r0, [r5, #44]	; 0x2c
   13a98:	lsl	r1, r1, #2
   13a9c:	bl	12f9c <realloc@plt>
   13aa0:	str	r0, [r5, #44]	; 0x2c
   13aa4:	ldr	r0, [r5, #32]
   13aa8:	ldr	r1, [r5, #36]	; 0x24
   13aac:	str	r7, [r1, r0, lsl #2]
   13ab0:	ldr	r1, [r5, #40]	; 0x28
   13ab4:	str	r6, [r1, r0, lsl #2]
   13ab8:	ldr	r1, [r5, #44]	; 0x2c
   13abc:	str	r4, [r1, r0, lsl #2]
   13ac0:	ldr	r0, [r5, #32]
   13ac4:	add	r0, r0, #1
   13ac8:	str	r0, [r5, #32]
   13acc:	pop	{r4, r5, r6, r7, fp, pc}
   13ad0:	cmp	r1, #0
   13ad4:	ldrne	r0, [r5, #44]	; 0x2c
   13ad8:	ldrne	r2, [r0, r1, lsl #2]
   13adc:	orrne	r2, r2, r4
   13ae0:	strne	r2, [r0, r1, lsl #2]
   13ae4:	popne	{r4, r5, r6, r7, fp, pc}
   13ae8:	b	13a4c <table_register_callback@@Base+0x54>

00013aec <table_unregister_callback@@Base>:
   13aec:	push	{r4, r5, r6, sl, fp, lr}
   13af0:	add	fp, sp, #16
   13af4:	ldr	r4, [r0, #32]
   13af8:	cmp	r4, #1
   13afc:	blt	13b34 <table_unregister_callback@@Base+0x48>
   13b00:	ldr	r3, [r0, #36]	; 0x24
   13b04:	mov	r6, r0
   13b08:	mov	r0, #0
   13b0c:	ldr	r5, [r3, r0, lsl #2]
   13b10:	cmp	r5, r1
   13b14:	bne	13b28 <table_unregister_callback@@Base+0x3c>
   13b18:	ldr	r5, [r6, #40]	; 0x28
   13b1c:	ldr	r5, [r5, r0, lsl #2]
   13b20:	cmp	r5, r2
   13b24:	beq	13b38 <table_unregister_callback@@Base+0x4c>
   13b28:	add	r0, r0, #1
   13b2c:	cmp	r0, r4
   13b30:	blt	13b0c <table_unregister_callback@@Base+0x20>
   13b34:	pop	{r4, r5, r6, sl, fp, pc}
   13b38:	sub	r1, r4, #1
   13b3c:	cmp	r0, r1
   13b40:	bge	13bd0 <table_unregister_callback@@Base+0xe4>
   13b44:	add	r1, r3, r0, lsl #2
   13b48:	ldr	r1, [r1, #4]
   13b4c:	str	r1, [r3, r0, lsl #2]
   13b50:	ldr	r1, [r6, #40]	; 0x28
   13b54:	add	r2, r1, r0, lsl #2
   13b58:	ldr	r2, [r2, #4]
   13b5c:	str	r2, [r1, r0, lsl #2]
   13b60:	ldr	r1, [r6, #44]	; 0x2c
   13b64:	add	r2, r1, r0, lsl #2
   13b68:	ldr	r2, [r2, #4]
   13b6c:	str	r2, [r1, r0, lsl #2]
   13b70:	add	r2, r0, #1
   13b74:	ldr	r1, [r6, #32]
   13b78:	sub	r1, r1, #1
   13b7c:	cmp	r2, r1
   13b80:	bge	13bd0 <table_unregister_callback@@Base+0xe4>
   13b84:	ldr	r1, [r6, #36]	; 0x24
   13b88:	add	r1, r1, r0, lsl #2
   13b8c:	ldr	r2, [r1, #8]
   13b90:	str	r2, [r1, #4]
   13b94:	ldr	r1, [r6, #40]	; 0x28
   13b98:	add	r1, r1, r0, lsl #2
   13b9c:	ldr	r2, [r1, #8]
   13ba0:	str	r2, [r1, #4]
   13ba4:	ldr	r1, [r6, #44]	; 0x2c
   13ba8:	add	r1, r1, r0, lsl #2
   13bac:	ldr	r2, [r1, #8]
   13bb0:	str	r2, [r1, #4]
   13bb4:	add	r2, r0, #1
   13bb8:	add	r0, r0, #2
   13bbc:	ldr	r1, [r6, #32]
   13bc0:	sub	r1, r1, #1
   13bc4:	cmp	r0, r1
   13bc8:	mov	r0, r2
   13bcc:	blt	13b84 <table_unregister_callback@@Base+0x98>
   13bd0:	str	r1, [r6, #32]
   13bd4:	ldr	r2, [r6, #48]	; 0x30
   13bd8:	udiv	r0, r1, r2
   13bdc:	mls	r0, r0, r2, r1
   13be0:	cmp	r0, #0
   13be4:	popne	{r4, r5, r6, sl, fp, pc}
   13be8:	ldr	r1, [r6, #52]	; 0x34
   13bec:	ldr	r0, [r6, #36]	; 0x24
   13bf0:	subs	r1, r1, r2
   13bf4:	str	r1, [r6, #52]	; 0x34
   13bf8:	beq	13c34 <table_unregister_callback@@Base+0x148>
   13bfc:	lsl	r1, r1, #2
   13c00:	bl	12f9c <realloc@plt>
   13c04:	str	r0, [r6, #36]	; 0x24
   13c08:	ldr	r1, [r6, #52]	; 0x34
   13c0c:	ldr	r0, [r6, #40]	; 0x28
   13c10:	lsl	r1, r1, #2
   13c14:	bl	12f9c <realloc@plt>
   13c18:	str	r0, [r6, #40]	; 0x28
   13c1c:	ldr	r1, [r6, #52]	; 0x34
   13c20:	ldr	r0, [r6, #44]	; 0x2c
   13c24:	lsl	r1, r1, #2
   13c28:	bl	12f9c <realloc@plt>
   13c2c:	str	r0, [r6, #44]	; 0x2c
   13c30:	pop	{r4, r5, r6, sl, fp, pc}
   13c34:	bl	12f90 <free@plt>
   13c38:	ldr	r0, [r6, #40]	; 0x28
   13c3c:	bl	12f90 <free@plt>
   13c40:	ldr	r0, [r6, #44]	; 0x2c
   13c44:	bl	12f90 <free@plt>
   13c48:	mov	r0, #0
   13c4c:	str	r0, [r6, #36]	; 0x24
   13c50:	str	r0, [r6, #40]	; 0x28
   13c54:	str	r0, [r6, #44]	; 0x2c
   13c58:	pop	{r4, r5, r6, sl, fp, pc}

00013c5c <table_notify@@Base>:
   13c5c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13c60:	add	fp, sp, #24
   13c64:	sub	sp, sp, #8
   13c68:	mov	r7, r0
   13c6c:	ldr	r0, [r0, #32]
   13c70:	cmp	r0, #1
   13c74:	blt	13cd0 <table_notify@@Base+0x74>
   13c78:	mov	r4, r3
   13c7c:	mov	r8, r2
   13c80:	mov	r9, r1
   13c84:	mov	r5, #0
   13c88:	ldr	r1, [r7, #44]	; 0x2c
   13c8c:	ldr	r1, [r1, r5, lsl #2]
   13c90:	tst	r1, r4
   13c94:	beq	13cc4 <table_notify@@Base+0x68>
   13c98:	ldr	r0, [r7, #36]	; 0x24
   13c9c:	ldr	r1, [r7, #40]	; 0x28
   13ca0:	mov	r2, r8
   13ca4:	mov	r3, r4
   13ca8:	ldr	r6, [r0, r5, lsl #2]
   13cac:	ldr	r0, [r1, r5, lsl #2]
   13cb0:	mov	r1, r9
   13cb4:	str	r0, [sp]
   13cb8:	mov	r0, r7
   13cbc:	blx	r6
   13cc0:	ldr	r0, [r7, #32]
   13cc4:	add	r5, r5, #1
   13cc8:	cmp	r5, r0
   13ccc:	blt	13c88 <table_notify@@Base+0x2c>
   13cd0:	sub	sp, fp, #24
   13cd4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013cd8 <table_column_init@@Base>:
   13cd8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13cdc:	add	fp, sp, #24
   13ce0:	ldr	r7, [r0]
   13ce4:	mov	r0, r2
   13ce8:	mov	r4, r3
   13cec:	mov	r5, r2
   13cf0:	mov	r6, r1
   13cf4:	bl	12fd8 <strlen@plt>
   13cf8:	add	r0, r0, #1
   13cfc:	bl	12fb4 <malloc@plt>
   13d00:	ldr	r8, [fp, #8]
   13d04:	add	r6, r6, r6, lsl #1
   13d08:	cmp	r0, #0
   13d0c:	str	r0, [r7, r6, lsl #2]
   13d10:	beq	13d1c <table_column_init@@Base+0x44>
   13d14:	mov	r1, r5
   13d18:	bl	12fa8 <strcpy@plt>
   13d1c:	add	r0, r7, r6, lsl #2
   13d20:	stmib	r0, {r4, r8}
   13d24:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00013d28 <table_get_col_ptr@@Base>:
   13d28:	ldr	r0, [r0]
   13d2c:	add	r1, r1, r1, lsl #1
   13d30:	add	r0, r0, r1, lsl #2
   13d34:	bx	lr

00013d38 <table_column_destroy@@Base>:
   13d38:	ldr	r0, [r0]
   13d3c:	add	r1, r1, r1, lsl #1
   13d40:	ldr	r0, [r0, r1, lsl #2]
   13d44:	cmp	r0, #0
   13d48:	bxeq	lr
   13d4c:	b	12f90 <free@plt>

00013d50 <table_get_column_length@@Base>:
   13d50:	ldr	r0, [r0, #4]
   13d54:	bx	lr

00013d58 <table_get_column@@Base>:
   13d58:	push	{r4, r5, r6, r7, fp, lr}
   13d5c:	add	fp, sp, #16
   13d60:	ldr	r6, [r0, #4]
   13d64:	cmp	r6, #1
   13d68:	blt	13da0 <table_get_column@@Base+0x48>
   13d6c:	ldr	r7, [r0]
   13d70:	mov	r5, r1
   13d74:	mov	r4, #0
   13d78:	ldr	r0, [r7]
   13d7c:	mov	r1, r5
   13d80:	bl	12f78 <strcmp@plt>
   13d84:	cmp	r0, #0
   13d88:	beq	13da4 <table_get_column@@Base+0x4c>
   13d8c:	add	r4, r4, #1
   13d90:	add	r7, r7, #12
   13d94:	cmp	r4, r6
   13d98:	blt	13d78 <table_get_column@@Base+0x20>
   13d9c:	b	13da4 <table_get_column@@Base+0x4c>
   13da0:	mov	r4, #0
   13da4:	cmp	r4, r6
   13da8:	mvneq	r4, #0
   13dac:	mov	r0, r4
   13db0:	pop	{r4, r5, r6, r7, fp, pc}

00013db4 <table_get_column_name@@Base>:
   13db4:	ldr	r0, [r0]
   13db8:	add	r1, r1, r1, lsl #1
   13dbc:	ldr	r0, [r0, r1, lsl #2]
   13dc0:	bx	lr

00013dc4 <table_get_column_data_type@@Base>:
   13dc4:	ldr	r0, [r0]
   13dc8:	add	r1, r1, r1, lsl #1
   13dcc:	add	r0, r0, r1, lsl #2
   13dd0:	ldr	r0, [r0, #4]
   13dd4:	bx	lr

00013dd8 <table_add_column@@Base>:
   13dd8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ddc:	add	fp, sp, #28
   13de0:	sub	sp, sp, #4
   13de4:	mov	r4, r0
   13de8:	mov	r8, r1
   13dec:	ldr	r0, [r0, #4]
   13df0:	mov	r9, r2
   13df4:	ldr	r1, [r4, #8]
   13df8:	udiv	r2, r0, r1
   13dfc:	mls	r0, r2, r1, r0
   13e00:	cmp	r0, #0
   13e04:	bne	13e70 <table_add_column@@Base+0x98>
   13e08:	ldr	r2, [r4, #12]
   13e0c:	ldr	r0, [r4]
   13e10:	add	r1, r2, r1
   13e14:	str	r1, [r4, #12]
   13e18:	add	r1, r1, r1, lsl #1
   13e1c:	lsl	r1, r1, #2
   13e20:	bl	12f9c <realloc@plt>
   13e24:	str	r0, [r4]
   13e28:	mov	r0, r4
   13e2c:	bl	15b38 <table_get_row_length@@Base>
   13e30:	cmp	r0, #1
   13e34:	blt	13e70 <table_add_column@@Base+0x98>
   13e38:	mov	r6, r0
   13e3c:	mov	r5, #0
   13e40:	mov	r0, r4
   13e44:	mov	r1, r5
   13e48:	bl	15ad4 <table_get_row_ptr@@Base>
   13e4c:	ldr	r1, [r4, #12]
   13e50:	mov	r7, r0
   13e54:	ldr	r0, [r0]
   13e58:	lsl	r1, r1, #2
   13e5c:	bl	12f9c <realloc@plt>
   13e60:	add	r5, r5, #1
   13e64:	str	r0, [r7]
   13e68:	cmp	r6, r5
   13e6c:	bne	13e40 <table_add_column@@Base+0x68>
   13e70:	mov	r0, r4
   13e74:	bl	15b38 <table_get_row_length@@Base>
   13e78:	ldr	r6, [r4, #4]
   13e7c:	mov	r7, r0
   13e80:	mov	r0, r9
   13e84:	bl	14784 <table_get_default_compare_function_for_data_type@@Base>
   13e88:	ldr	r5, [r4]
   13e8c:	mov	sl, r0
   13e90:	mov	r0, r8
   13e94:	bl	12fd8 <strlen@plt>
   13e98:	add	r0, r0, #1
   13e9c:	bl	12fb4 <malloc@plt>
   13ea0:	mov	r1, r8
   13ea4:	add	r8, r6, r6, lsl #1
   13ea8:	cmp	r0, #0
   13eac:	str	r0, [r5, r8, lsl #2]
   13eb0:	beq	13eb8 <table_add_column@@Base+0xe0>
   13eb4:	bl	12fa8 <strcpy@plt>
   13eb8:	add	r0, r5, r8, lsl #2
   13ebc:	cmp	r7, #1
   13ec0:	stmib	r0, {r9, sl}
   13ec4:	blt	13ee8 <table_add_column@@Base+0x110>
   13ec8:	mov	r5, #0
   13ecc:	mov	r0, r4
   13ed0:	mov	r1, r5
   13ed4:	mov	r2, r6
   13ed8:	bl	16bd4 <table_cell_init@@Base>
   13edc:	add	r5, r5, #1
   13ee0:	cmp	r7, r5
   13ee4:	bne	13ecc <table_add_column@@Base+0xf4>
   13ee8:	ldr	r2, [r4, #4]
   13eec:	mov	r0, r4
   13ef0:	mvn	r1, #0
   13ef4:	mov	r3, #8
   13ef8:	bl	13c5c <table_notify@@Base>
   13efc:	ldr	r0, [r4, #4]
   13f00:	add	r1, r0, #1
   13f04:	str	r1, [r4, #4]
   13f08:	sub	sp, fp, #28
   13f0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00013f10 <table_remove_column@@Base>:
   13f10:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13f14:	add	fp, sp, #24
   13f18:	mov	r5, r0
   13f1c:	ldr	r0, [r0]
   13f20:	add	r6, r1, r1, lsl #1
   13f24:	mov	r9, r1
   13f28:	ldr	r0, [r0, r6, lsl #2]
   13f2c:	cmp	r0, #0
   13f30:	beq	13f38 <table_remove_column@@Base+0x28>
   13f34:	bl	12f90 <free@plt>
   13f38:	ldr	r0, [r5, #4]
   13f3c:	sub	r4, r0, #1
   13f40:	cmp	r4, r9
   13f44:	ble	13f74 <table_remove_column@@Base+0x64>
   13f48:	sub	r0, r4, r9
   13f4c:	lsl	r1, r6, #2
   13f50:	ldr	r2, [r5]
   13f54:	subs	r0, r0, #1
   13f58:	add	r2, r2, r1
   13f5c:	add	r1, r1, #12
   13f60:	vldr	d16, [r2, #12]
   13f64:	ldr	r3, [r2, #20]
   13f68:	str	r3, [r2, #8]
   13f6c:	vstr	d16, [r2]
   13f70:	bne	13f50 <table_remove_column@@Base+0x40>
   13f74:	mov	r0, r5
   13f78:	bl	15b38 <table_get_row_length@@Base>
   13f7c:	cmp	r0, #1
   13f80:	blt	13fdc <table_remove_column@@Base+0xcc>
   13f84:	mov	r6, r0
   13f88:	mov	r7, #0
   13f8c:	mov	r0, r5
   13f90:	mov	r1, r7
   13f94:	mov	r2, r9
   13f98:	bl	16c10 <table_cell_destroy@@Base>
   13f9c:	mov	r0, r5
   13fa0:	mov	r1, r7
   13fa4:	bl	15ad4 <table_get_row_ptr@@Base>
   13fa8:	cmp	r4, r9
   13fac:	ble	13fd0 <table_remove_column@@Base+0xc0>
   13fb0:	mov	r1, r9
   13fb4:	ldr	r2, [r0]
   13fb8:	add	r3, r2, r1, lsl #2
   13fbc:	ldr	r3, [r3, #4]
   13fc0:	str	r3, [r2, r1, lsl #2]
   13fc4:	add	r1, r1, #1
   13fc8:	cmp	r4, r1
   13fcc:	bne	13fb4 <table_remove_column@@Base+0xa4>
   13fd0:	add	r7, r7, #1
   13fd4:	cmp	r7, r6
   13fd8:	bne	13f8c <table_remove_column@@Base+0x7c>
   13fdc:	ldmib	r5, {r0, r1}
   13fe0:	sub	r0, r0, #1
   13fe4:	udiv	r2, r0, r1
   13fe8:	str	r0, [r5, #4]
   13fec:	mls	r0, r2, r1, r0
   13ff0:	cmp	r0, #0
   13ff4:	bne	14060 <table_remove_column@@Base+0x150>
   13ff8:	ldr	r2, [r5, #12]
   13ffc:	ldr	r0, [r5]
   14000:	sub	r1, r2, r1
   14004:	str	r1, [r5, #12]
   14008:	add	r1, r1, r1, lsl #1
   1400c:	lsl	r1, r1, #2
   14010:	bl	12f9c <realloc@plt>
   14014:	str	r0, [r5]
   14018:	mov	r0, r5
   1401c:	bl	15b38 <table_get_row_length@@Base>
   14020:	cmp	r0, #1
   14024:	blt	14060 <table_remove_column@@Base+0x150>
   14028:	mov	r8, r0
   1402c:	mov	r7, #0
   14030:	mov	r0, r5
   14034:	mov	r1, r7
   14038:	bl	15ad4 <table_get_row_ptr@@Base>
   1403c:	ldr	r1, [r5, #12]
   14040:	mov	r6, r0
   14044:	ldr	r0, [r0]
   14048:	lsl	r1, r1, #2
   1404c:	bl	12f9c <realloc@plt>
   14050:	add	r7, r7, #1
   14054:	str	r0, [r6]
   14058:	cmp	r8, r7
   1405c:	bne	14030 <table_remove_column@@Base+0x120>
   14060:	mov	r0, r5
   14064:	mvn	r1, #0
   14068:	mov	r2, r9
   1406c:	mov	r3, #16
   14070:	bl	13c5c <table_notify@@Base>
   14074:	mov	r0, #0
   14078:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001407c <table_get_column_compare_function@@Base>:
   1407c:	ldr	r0, [r0]
   14080:	add	r1, r1, r1, lsl #1
   14084:	add	r0, r0, r1, lsl #2
   14088:	ldr	r0, [r0, #8]
   1408c:	bx	lr

00014090 <table_set_column_compare_function@@Base>:
   14090:	ldr	r0, [r0]
   14094:	add	r1, r1, r1, lsl #1
   14098:	add	r0, r0, r1, lsl #2
   1409c:	str	r2, [r0, #8]
   140a0:	bx	lr

000140a4 <table_compare_bool@@Base>:
   140a4:	cmp	r0, #0
   140a8:	beq	140dc <table_compare_bool@@Base+0x38>
   140ac:	cmp	r1, #0
   140b0:	moveq	r1, #1
   140b4:	moveq	r0, r1
   140b8:	bxeq	lr
   140bc:	ldrb	r2, [r1]
   140c0:	ldrb	r0, [r0]
   140c4:	mov	r1, #0
   140c8:	cmp	r0, r2
   140cc:	mvncc	r1, #0
   140d0:	movwhi	r1, #1
   140d4:	mov	r0, r1
   140d8:	bx	lr
   140dc:	cmp	r1, #0
   140e0:	mvnne	r1, #0
   140e4:	mov	r0, r1
   140e8:	bx	lr

000140ec <table_compare_int@@Base>:
   140ec:	cmp	r0, #0
   140f0:	beq	14124 <table_compare_int@@Base+0x38>
   140f4:	cmp	r1, #0
   140f8:	moveq	r1, #1
   140fc:	moveq	r0, r1
   14100:	bxeq	lr
   14104:	ldr	r2, [r1]
   14108:	ldr	r0, [r0]
   1410c:	mov	r1, #0
   14110:	cmp	r0, r2
   14114:	mvnlt	r1, #0
   14118:	movwgt	r1, #1
   1411c:	mov	r0, r1
   14120:	bx	lr
   14124:	cmp	r1, #0
   14128:	mvnne	r1, #0
   1412c:	mov	r0, r1
   14130:	bx	lr

00014134 <table_compare_uint@@Base>:
   14134:	cmp	r0, #0
   14138:	beq	1416c <table_compare_uint@@Base+0x38>
   1413c:	cmp	r1, #0
   14140:	moveq	r1, #1
   14144:	moveq	r0, r1
   14148:	bxeq	lr
   1414c:	ldr	r2, [r1]
   14150:	ldr	r0, [r0]
   14154:	mov	r1, #0
   14158:	cmp	r0, r2
   1415c:	mvncc	r1, #0
   14160:	movwhi	r1, #1
   14164:	mov	r0, r1
   14168:	bx	lr
   1416c:	cmp	r1, #0
   14170:	mvnne	r1, #0
   14174:	mov	r0, r1
   14178:	bx	lr

0001417c <table_compare_int8@@Base>:
   1417c:	cmp	r0, #0
   14180:	beq	141b4 <table_compare_int8@@Base+0x38>
   14184:	cmp	r1, #0
   14188:	moveq	r1, #1
   1418c:	moveq	r0, r1
   14190:	bxeq	lr
   14194:	ldrsb	r2, [r1]
   14198:	ldrsb	r0, [r0]
   1419c:	mov	r1, #0
   141a0:	cmp	r0, r2
   141a4:	mvnlt	r1, #0
   141a8:	movwgt	r1, #1
   141ac:	mov	r0, r1
   141b0:	bx	lr
   141b4:	cmp	r1, #0
   141b8:	mvnne	r1, #0
   141bc:	mov	r0, r1
   141c0:	bx	lr

000141c4 <table_compare_uint8@@Base>:
   141c4:	cmp	r0, #0
   141c8:	beq	141fc <table_compare_uint8@@Base+0x38>
   141cc:	cmp	r1, #0
   141d0:	moveq	r1, #1
   141d4:	moveq	r0, r1
   141d8:	bxeq	lr
   141dc:	ldrb	r2, [r1]
   141e0:	ldrb	r0, [r0]
   141e4:	mov	r1, #0
   141e8:	cmp	r0, r2
   141ec:	mvncc	r1, #0
   141f0:	movwhi	r1, #1
   141f4:	mov	r0, r1
   141f8:	bx	lr
   141fc:	cmp	r1, #0
   14200:	mvnne	r1, #0
   14204:	mov	r0, r1
   14208:	bx	lr

0001420c <table_compare_int16@@Base>:
   1420c:	cmp	r0, #0
   14210:	beq	14244 <table_compare_int16@@Base+0x38>
   14214:	cmp	r1, #0
   14218:	moveq	r1, #1
   1421c:	moveq	r0, r1
   14220:	bxeq	lr
   14224:	ldrsh	r2, [r1]
   14228:	ldrsh	r0, [r0]
   1422c:	mov	r1, #0
   14230:	cmp	r0, r2
   14234:	mvnlt	r1, #0
   14238:	movwgt	r1, #1
   1423c:	mov	r0, r1
   14240:	bx	lr
   14244:	cmp	r1, #0
   14248:	mvnne	r1, #0
   1424c:	mov	r0, r1
   14250:	bx	lr

00014254 <table_compare_uint16@@Base>:
   14254:	cmp	r0, #0
   14258:	beq	1428c <table_compare_uint16@@Base+0x38>
   1425c:	cmp	r1, #0
   14260:	moveq	r1, #1
   14264:	moveq	r0, r1
   14268:	bxeq	lr
   1426c:	ldrh	r2, [r1]
   14270:	ldrh	r0, [r0]
   14274:	mov	r1, #0
   14278:	cmp	r0, r2
   1427c:	mvncc	r1, #0
   14280:	movwhi	r1, #1
   14284:	mov	r0, r1
   14288:	bx	lr
   1428c:	cmp	r1, #0
   14290:	mvnne	r1, #0
   14294:	mov	r0, r1
   14298:	bx	lr

0001429c <table_compare_int32@@Base>:
   1429c:	cmp	r0, #0
   142a0:	beq	142d4 <table_compare_int32@@Base+0x38>
   142a4:	cmp	r1, #0
   142a8:	moveq	r1, #1
   142ac:	moveq	r0, r1
   142b0:	bxeq	lr
   142b4:	ldr	r2, [r1]
   142b8:	ldr	r0, [r0]
   142bc:	mov	r1, #0
   142c0:	cmp	r0, r2
   142c4:	mvnlt	r1, #0
   142c8:	movwgt	r1, #1
   142cc:	mov	r0, r1
   142d0:	bx	lr
   142d4:	cmp	r1, #0
   142d8:	mvnne	r1, #0
   142dc:	mov	r0, r1
   142e0:	bx	lr

000142e4 <table_compare_uint32@@Base>:
   142e4:	cmp	r0, #0
   142e8:	beq	1431c <table_compare_uint32@@Base+0x38>
   142ec:	cmp	r1, #0
   142f0:	moveq	r1, #1
   142f4:	moveq	r0, r1
   142f8:	bxeq	lr
   142fc:	ldr	r2, [r1]
   14300:	ldr	r0, [r0]
   14304:	mov	r1, #0
   14308:	cmp	r0, r2
   1430c:	mvncc	r1, #0
   14310:	movwhi	r1, #1
   14314:	mov	r0, r1
   14318:	bx	lr
   1431c:	cmp	r1, #0
   14320:	mvnne	r1, #0
   14324:	mov	r0, r1
   14328:	bx	lr

0001432c <table_compare_int64@@Base>:
   1432c:	cmp	r0, #0
   14330:	beq	14384 <table_compare_int64@@Base+0x58>
   14334:	cmp	r1, #0
   14338:	moveq	r1, #1
   1433c:	moveq	r0, r1
   14340:	bxeq	lr
   14344:	push	{r5, r7, fp, lr}
   14348:	add	fp, sp, #8
   1434c:	ldm	r1, {r2, r7}
   14350:	ldm	r0, {r0, r5}
   14354:	mov	r1, #0
   14358:	subs	r3, r0, r2
   1435c:	sbcs	r3, r5, r7
   14360:	movwlt	r1, #1
   14364:	cmp	r1, #0
   14368:	mvnne	r1, #0
   1436c:	subs	r0, r2, r0
   14370:	sbcs	r0, r7, r5
   14374:	movwlt	r1, #1
   14378:	pop	{r5, r7, fp, lr}
   1437c:	mov	r0, r1
   14380:	bx	lr
   14384:	cmp	r1, #0
   14388:	mvnne	r1, #0
   1438c:	mov	r0, r1
   14390:	bx	lr

00014394 <table_compare_uint64@@Base>:
   14394:	cmp	r0, #0
   14398:	beq	143ec <table_compare_uint64@@Base+0x58>
   1439c:	cmp	r1, #0
   143a0:	moveq	r1, #1
   143a4:	moveq	r0, r1
   143a8:	bxeq	lr
   143ac:	push	{r5, r7, fp, lr}
   143b0:	add	fp, sp, #8
   143b4:	ldm	r1, {r2, r7}
   143b8:	ldm	r0, {r0, r5}
   143bc:	mov	r1, #0
   143c0:	subs	r3, r0, r2
   143c4:	sbcs	r3, r5, r7
   143c8:	movwcc	r1, #1
   143cc:	cmp	r1, #0
   143d0:	mvnne	r1, #0
   143d4:	subs	r0, r2, r0
   143d8:	sbcs	r0, r7, r5
   143dc:	movwcc	r1, #1
   143e0:	pop	{r5, r7, fp, lr}
   143e4:	mov	r0, r1
   143e8:	bx	lr
   143ec:	cmp	r1, #0
   143f0:	mvnne	r1, #0
   143f4:	mov	r0, r1
   143f8:	bx	lr

000143fc <table_compare_short@@Base>:
   143fc:	cmp	r0, #0
   14400:	beq	14434 <table_compare_short@@Base+0x38>
   14404:	cmp	r1, #0
   14408:	moveq	r1, #1
   1440c:	moveq	r0, r1
   14410:	bxeq	lr
   14414:	ldrsh	r2, [r1]
   14418:	ldrsh	r0, [r0]
   1441c:	mov	r1, #0
   14420:	cmp	r0, r2
   14424:	mvnlt	r1, #0
   14428:	movwgt	r1, #1
   1442c:	mov	r0, r1
   14430:	bx	lr
   14434:	cmp	r1, #0
   14438:	mvnne	r1, #0
   1443c:	mov	r0, r1
   14440:	bx	lr

00014444 <table_compare_ushort@@Base>:
   14444:	cmp	r0, #0
   14448:	beq	1447c <table_compare_ushort@@Base+0x38>
   1444c:	cmp	r1, #0
   14450:	moveq	r1, #1
   14454:	moveq	r0, r1
   14458:	bxeq	lr
   1445c:	ldrh	r2, [r1]
   14460:	ldrh	r0, [r0]
   14464:	mov	r1, #0
   14468:	cmp	r0, r2
   1446c:	mvncc	r1, #0
   14470:	movwhi	r1, #1
   14474:	mov	r0, r1
   14478:	bx	lr
   1447c:	cmp	r1, #0
   14480:	mvnne	r1, #0
   14484:	mov	r0, r1
   14488:	bx	lr

0001448c <table_compare_long@@Base>:
   1448c:	cmp	r0, #0
   14490:	beq	144c4 <table_compare_long@@Base+0x38>
   14494:	cmp	r1, #0
   14498:	moveq	r1, #1
   1449c:	moveq	r0, r1
   144a0:	bxeq	lr
   144a4:	ldr	r2, [r1]
   144a8:	ldr	r0, [r0]
   144ac:	mov	r1, #0
   144b0:	cmp	r0, r2
   144b4:	mvnlt	r1, #0
   144b8:	movwgt	r1, #1
   144bc:	mov	r0, r1
   144c0:	bx	lr
   144c4:	cmp	r1, #0
   144c8:	mvnne	r1, #0
   144cc:	mov	r0, r1
   144d0:	bx	lr

000144d4 <table_compare_ulong@@Base>:
   144d4:	cmp	r0, #0
   144d8:	beq	1450c <table_compare_ulong@@Base+0x38>
   144dc:	cmp	r1, #0
   144e0:	moveq	r1, #1
   144e4:	moveq	r0, r1
   144e8:	bxeq	lr
   144ec:	ldr	r2, [r1]
   144f0:	ldr	r0, [r0]
   144f4:	mov	r1, #0
   144f8:	cmp	r0, r2
   144fc:	mvncc	r1, #0
   14500:	movwhi	r1, #1
   14504:	mov	r0, r1
   14508:	bx	lr
   1450c:	cmp	r1, #0
   14510:	mvnne	r1, #0
   14514:	mov	r0, r1
   14518:	bx	lr

0001451c <table_compare_llong@@Base>:
   1451c:	cmp	r0, #0
   14520:	beq	14574 <table_compare_llong@@Base+0x58>
   14524:	cmp	r1, #0
   14528:	moveq	r1, #1
   1452c:	moveq	r0, r1
   14530:	bxeq	lr
   14534:	push	{r5, r7, fp, lr}
   14538:	add	fp, sp, #8
   1453c:	ldm	r1, {r2, r7}
   14540:	ldm	r0, {r0, r5}
   14544:	mov	r1, #0
   14548:	subs	r3, r0, r2
   1454c:	sbcs	r3, r5, r7
   14550:	movwlt	r1, #1
   14554:	cmp	r1, #0
   14558:	mvnne	r1, #0
   1455c:	subs	r0, r2, r0
   14560:	sbcs	r0, r7, r5
   14564:	movwlt	r1, #1
   14568:	pop	{r5, r7, fp, lr}
   1456c:	mov	r0, r1
   14570:	bx	lr
   14574:	cmp	r1, #0
   14578:	mvnne	r1, #0
   1457c:	mov	r0, r1
   14580:	bx	lr

00014584 <table_compare_ullong@@Base>:
   14584:	cmp	r0, #0
   14588:	beq	145bc <table_compare_ullong@@Base+0x38>
   1458c:	cmp	r1, #0
   14590:	moveq	r1, #1
   14594:	moveq	r0, r1
   14598:	bxeq	lr
   1459c:	ldr	r2, [r1]
   145a0:	ldr	r0, [r0]
   145a4:	mov	r1, #0
   145a8:	cmp	r0, r2
   145ac:	mvncc	r1, #0
   145b0:	movwhi	r1, #1
   145b4:	mov	r0, r1
   145b8:	bx	lr
   145bc:	cmp	r1, #0
   145c0:	mvnne	r1, #0
   145c4:	mov	r0, r1
   145c8:	bx	lr

000145cc <table_compare_float@@Base>:
   145cc:	cmp	r0, #0
   145d0:	beq	14608 <table_compare_float@@Base+0x3c>
   145d4:	cmp	r1, #0
   145d8:	moveq	r1, #1
   145dc:	moveq	r0, r1
   145e0:	bxeq	lr
   145e4:	vldr	s0, [r1]
   145e8:	vldr	s2, [r0]
   145ec:	mov	r1, #0
   145f0:	vcmpe.f32	s2, s0
   145f4:	vmrs	APSR_nzcv, fpscr
   145f8:	mvnmi	r1, #0
   145fc:	movwgt	r1, #1
   14600:	mov	r0, r1
   14604:	bx	lr
   14608:	cmp	r1, #0
   1460c:	mvnne	r1, #0
   14610:	mov	r0, r1
   14614:	bx	lr

00014618 <table_compare_double@@Base>:
   14618:	cmp	r0, #0
   1461c:	beq	14654 <table_compare_double@@Base+0x3c>
   14620:	cmp	r1, #0
   14624:	moveq	r1, #1
   14628:	moveq	r0, r1
   1462c:	bxeq	lr
   14630:	vldr	d16, [r1]
   14634:	vldr	d17, [r0]
   14638:	mov	r1, #0
   1463c:	vcmpe.f64	d17, d16
   14640:	vmrs	APSR_nzcv, fpscr
   14644:	mvnmi	r1, #0
   14648:	movwgt	r1, #1
   1464c:	mov	r0, r1
   14650:	bx	lr
   14654:	cmp	r1, #0
   14658:	mvnne	r1, #0
   1465c:	mov	r0, r1
   14660:	bx	lr

00014664 <table_compare_ldouble@@Base>:
   14664:	cmp	r0, #0
   14668:	beq	146a0 <table_compare_ldouble@@Base+0x3c>
   1466c:	cmp	r1, #0
   14670:	moveq	r1, #1
   14674:	moveq	r0, r1
   14678:	bxeq	lr
   1467c:	vldr	d16, [r1]
   14680:	vldr	d17, [r0]
   14684:	mov	r1, #0
   14688:	vcmpe.f64	d17, d16
   1468c:	vmrs	APSR_nzcv, fpscr
   14690:	mvnmi	r1, #0
   14694:	movwgt	r1, #1
   14698:	mov	r0, r1
   1469c:	bx	lr
   146a0:	cmp	r1, #0
   146a4:	mvnne	r1, #0
   146a8:	mov	r0, r1
   146ac:	bx	lr

000146b0 <table_compare_char@@Base>:
   146b0:	cmp	r0, #0
   146b4:	beq	146e8 <table_compare_char@@Base+0x38>
   146b8:	cmp	r1, #0
   146bc:	moveq	r1, #1
   146c0:	moveq	r0, r1
   146c4:	bxeq	lr
   146c8:	ldrb	r2, [r1]
   146cc:	ldrb	r0, [r0]
   146d0:	mov	r1, #0
   146d4:	cmp	r0, r2
   146d8:	mvncc	r1, #0
   146dc:	movwhi	r1, #1
   146e0:	mov	r0, r1
   146e4:	bx	lr
   146e8:	cmp	r1, #0
   146ec:	mvnne	r1, #0
   146f0:	mov	r0, r1
   146f4:	bx	lr

000146f8 <table_compare_uchar@@Base>:
   146f8:	cmp	r0, #0
   146fc:	beq	14730 <table_compare_uchar@@Base+0x38>
   14700:	cmp	r1, #0
   14704:	moveq	r1, #1
   14708:	moveq	r0, r1
   1470c:	bxeq	lr
   14710:	ldrb	r2, [r1]
   14714:	ldrb	r0, [r0]
   14718:	mov	r1, #0
   1471c:	cmp	r0, r2
   14720:	mvncc	r1, #0
   14724:	movwhi	r1, #1
   14728:	mov	r0, r1
   1472c:	bx	lr
   14730:	cmp	r1, #0
   14734:	mvnne	r1, #0
   14738:	mov	r0, r1
   1473c:	bx	lr

00014740 <table_compare_string@@Base>:
   14740:	cmp	r0, #0
   14744:	beq	1475c <table_compare_string@@Base+0x1c>
   14748:	cmp	r1, #0
   1474c:	moveq	r1, #1
   14750:	moveq	r0, r1
   14754:	bxeq	lr
   14758:	b	12f78 <strcmp@plt>
   1475c:	cmp	r1, #0
   14760:	mvnne	r1, #0
   14764:	mov	r0, r1
   14768:	bx	lr

0001476c <table_compare_ptr@@Base>:
   1476c:	mov	r2, #0
   14770:	cmp	r0, r1
   14774:	mvncc	r2, #0
   14778:	movwhi	r2, #1
   1477c:	mov	r0, r2
   14780:	bx	lr

00014784 <table_get_default_compare_function_for_data_type@@Base>:
   14784:	cmp	r0, #23
   14788:	ldrls	r1, [pc, #12]	; 1479c <table_get_default_compare_function_for_data_type@@Base+0x18>
   1478c:	movhi	r0, #0
   14790:	addls	r1, pc, r1
   14794:	ldrls	r0, [r1, r0, lsl #2]
   14798:	bx	lr
   1479c:	andeq	r3, r1, r8, lsl r7

000147a0 <table_subset_find@@Base>:
   147a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   147a4:	add	fp, sp, #28
   147a8:	sub	sp, sp, #4
   147ac:	mov	r8, r3
   147b0:	mov	r9, r2
   147b4:	mov	r6, r1
   147b8:	mov	r7, r0
   147bc:	bl	1407c <table_get_column_compare_function@@Base>
   147c0:	ldr	r4, [fp, #12]
   147c4:	ldr	r5, [fp, #8]
   147c8:	mov	sl, r0
   147cc:	cmp	r8, #0
   147d0:	beq	14818 <table_subset_find@@Base+0x78>
   147d4:	mvn	r8, #0
   147d8:	cmp	r4, r5
   147dc:	blt	14868 <table_subset_find@@Base+0xc8>
   147e0:	mov	r0, r7
   147e4:	mov	r1, r4
   147e8:	mov	r2, r6
   147ec:	bl	15864 <table_get@@Base>
   147f0:	mov	r1, r0
   147f4:	mov	r0, r9
   147f8:	blx	sl
   147fc:	cmp	r0, #0
   14800:	beq	1485c <table_subset_find@@Base+0xbc>
   14804:	sub	r0, r4, #1
   14808:	cmp	r4, r5
   1480c:	mov	r4, r0
   14810:	bgt	147e0 <table_subset_find@@Base+0x40>
   14814:	b	14868 <table_subset_find@@Base+0xc8>
   14818:	mvn	r8, #0
   1481c:	cmp	r5, r4
   14820:	bgt	14868 <table_subset_find@@Base+0xc8>
   14824:	mov	r0, r7
   14828:	mov	r1, r5
   1482c:	mov	r2, r6
   14830:	bl	15864 <table_get@@Base>
   14834:	mov	r1, r0
   14838:	mov	r0, r9
   1483c:	blx	sl
   14840:	cmp	r0, #0
   14844:	beq	14864 <table_subset_find@@Base+0xc4>
   14848:	add	r0, r5, #1
   1484c:	cmp	r5, r4
   14850:	mov	r5, r0
   14854:	blt	14824 <table_subset_find@@Base+0x84>
   14858:	b	14868 <table_subset_find@@Base+0xc8>
   1485c:	mov	r8, r4
   14860:	b	14868 <table_subset_find@@Base+0xc8>
   14864:	mov	r8, r5
   14868:	mov	r0, r8
   1486c:	sub	sp, fp, #28
   14870:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00014874 <table_find@@Base>:
   14874:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14878:	add	fp, sp, #28
   1487c:	sub	sp, sp, #4
   14880:	mov	r4, r3
   14884:	mov	r9, r2
   14888:	mov	sl, r1
   1488c:	mov	r6, r0
   14890:	bl	15b38 <table_get_row_length@@Base>
   14894:	mov	r5, r0
   14898:	mov	r0, r6
   1489c:	mov	r1, sl
   148a0:	bl	1407c <table_get_column_compare_function@@Base>
   148a4:	mov	r7, r0
   148a8:	mvn	r8, #0
   148ac:	cmp	r4, #0
   148b0:	beq	148f4 <table_find@@Base+0x80>
   148b4:	cmp	r5, #1
   148b8:	blt	14948 <table_find@@Base+0xd4>
   148bc:	sub	r4, r5, #1
   148c0:	mov	r0, r6
   148c4:	mov	r2, sl
   148c8:	mov	r1, r4
   148cc:	bl	15864 <table_get@@Base>
   148d0:	mov	r1, r0
   148d4:	mov	r0, r9
   148d8:	blx	r7
   148dc:	cmp	r0, #0
   148e0:	beq	1493c <table_find@@Base+0xc8>
   148e4:	cmp	r4, #0
   148e8:	mov	r5, r4
   148ec:	bgt	148bc <table_find@@Base+0x48>
   148f0:	b	14948 <table_find@@Base+0xd4>
   148f4:	cmp	r5, #1
   148f8:	blt	14948 <table_find@@Base+0xd4>
   148fc:	sub	r5, r5, #1
   14900:	mov	r4, #0
   14904:	mov	r0, r6
   14908:	mov	r1, r4
   1490c:	mov	r2, sl
   14910:	bl	15864 <table_get@@Base>
   14914:	mov	r1, r0
   14918:	mov	r0, r9
   1491c:	blx	r7
   14920:	cmp	r0, #0
   14924:	beq	14944 <table_find@@Base+0xd0>
   14928:	add	r0, r4, #1
   1492c:	cmp	r4, r5
   14930:	mov	r4, r0
   14934:	blt	14904 <table_find@@Base+0x90>
   14938:	b	14948 <table_find@@Base+0xd4>
   1493c:	sub	r8, r5, #1
   14940:	b	14948 <table_find@@Base+0xd4>
   14944:	mov	r8, r4
   14948:	mov	r0, r8
   1494c:	sub	sp, fp, #28
   14950:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00014954 <table_find_bool@@Base>:
   14954:	push	{fp, lr}
   14958:	mov	fp, sp
   1495c:	sub	sp, sp, #8
   14960:	strb	r2, [fp, #-1]
   14964:	sub	r2, fp, #1
   14968:	bl	14874 <table_find@@Base>
   1496c:	mov	sp, fp
   14970:	pop	{fp, pc}

00014974 <table_find_int@@Base>:
   14974:	push	{fp, lr}
   14978:	mov	fp, sp
   1497c:	sub	sp, sp, #8
   14980:	str	r2, [sp, #4]
   14984:	add	r2, sp, #4
   14988:	bl	14874 <table_find@@Base>
   1498c:	mov	sp, fp
   14990:	pop	{fp, pc}

00014994 <table_find_uint@@Base>:
   14994:	push	{fp, lr}
   14998:	mov	fp, sp
   1499c:	sub	sp, sp, #8
   149a0:	str	r2, [sp, #4]
   149a4:	add	r2, sp, #4
   149a8:	bl	14874 <table_find@@Base>
   149ac:	mov	sp, fp
   149b0:	pop	{fp, pc}

000149b4 <table_find_int8@@Base>:
   149b4:	push	{fp, lr}
   149b8:	mov	fp, sp
   149bc:	sub	sp, sp, #8
   149c0:	strb	r2, [fp, #-1]
   149c4:	sub	r2, fp, #1
   149c8:	bl	14874 <table_find@@Base>
   149cc:	mov	sp, fp
   149d0:	pop	{fp, pc}

000149d4 <table_find_uint8@@Base>:
   149d4:	push	{fp, lr}
   149d8:	mov	fp, sp
   149dc:	sub	sp, sp, #8
   149e0:	strb	r2, [fp, #-1]
   149e4:	sub	r2, fp, #1
   149e8:	bl	14874 <table_find@@Base>
   149ec:	mov	sp, fp
   149f0:	pop	{fp, pc}

000149f4 <table_find_int16@@Base>:
   149f4:	push	{fp, lr}
   149f8:	mov	fp, sp
   149fc:	sub	sp, sp, #8
   14a00:	strh	r2, [fp, #-2]
   14a04:	sub	r2, fp, #2
   14a08:	bl	14874 <table_find@@Base>
   14a0c:	mov	sp, fp
   14a10:	pop	{fp, pc}

00014a14 <table_find_uint16@@Base>:
   14a14:	push	{fp, lr}
   14a18:	mov	fp, sp
   14a1c:	sub	sp, sp, #8
   14a20:	strh	r2, [fp, #-2]
   14a24:	sub	r2, fp, #2
   14a28:	bl	14874 <table_find@@Base>
   14a2c:	mov	sp, fp
   14a30:	pop	{fp, pc}

00014a34 <table_find_int32@@Base>:
   14a34:	push	{fp, lr}
   14a38:	mov	fp, sp
   14a3c:	sub	sp, sp, #8
   14a40:	str	r2, [sp, #4]
   14a44:	add	r2, sp, #4
   14a48:	bl	14874 <table_find@@Base>
   14a4c:	mov	sp, fp
   14a50:	pop	{fp, pc}

00014a54 <table_find_uint32@@Base>:
   14a54:	push	{fp, lr}
   14a58:	mov	fp, sp
   14a5c:	sub	sp, sp, #8
   14a60:	str	r2, [sp, #4]
   14a64:	add	r2, sp, #4
   14a68:	bl	14874 <table_find@@Base>
   14a6c:	mov	sp, fp
   14a70:	pop	{fp, pc}

00014a74 <table_find_int64@@Base>:
   14a74:	push	{fp, lr}
   14a78:	mov	fp, sp
   14a7c:	push	{r2, r3}
   14a80:	ldr	r3, [fp, #8]
   14a84:	mov	r2, sp
   14a88:	bl	14874 <table_find@@Base>
   14a8c:	mov	sp, fp
   14a90:	pop	{fp, pc}

00014a94 <table_find_uint64@@Base>:
   14a94:	push	{fp, lr}
   14a98:	mov	fp, sp
   14a9c:	push	{r2, r3}
   14aa0:	ldr	r3, [fp, #8]
   14aa4:	mov	r2, sp
   14aa8:	bl	14874 <table_find@@Base>
   14aac:	mov	sp, fp
   14ab0:	pop	{fp, pc}

00014ab4 <table_find_short@@Base>:
   14ab4:	push	{fp, lr}
   14ab8:	mov	fp, sp
   14abc:	sub	sp, sp, #8
   14ac0:	strh	r2, [fp, #-2]
   14ac4:	sub	r2, fp, #2
   14ac8:	bl	14874 <table_find@@Base>
   14acc:	mov	sp, fp
   14ad0:	pop	{fp, pc}

00014ad4 <table_find_ushort@@Base>:
   14ad4:	push	{fp, lr}
   14ad8:	mov	fp, sp
   14adc:	sub	sp, sp, #8
   14ae0:	strh	r2, [fp, #-2]
   14ae4:	sub	r2, fp, #2
   14ae8:	bl	14874 <table_find@@Base>
   14aec:	mov	sp, fp
   14af0:	pop	{fp, pc}

00014af4 <table_find_long@@Base>:
   14af4:	push	{fp, lr}
   14af8:	mov	fp, sp
   14afc:	sub	sp, sp, #8
   14b00:	str	r2, [sp, #4]
   14b04:	add	r2, sp, #4
   14b08:	bl	14874 <table_find@@Base>
   14b0c:	mov	sp, fp
   14b10:	pop	{fp, pc}

00014b14 <table_find_ulong@@Base>:
   14b14:	push	{fp, lr}
   14b18:	mov	fp, sp
   14b1c:	sub	sp, sp, #8
   14b20:	str	r2, [sp, #4]
   14b24:	add	r2, sp, #4
   14b28:	bl	14874 <table_find@@Base>
   14b2c:	mov	sp, fp
   14b30:	pop	{fp, pc}

00014b34 <table_find_llong@@Base>:
   14b34:	push	{fp, lr}
   14b38:	mov	fp, sp
   14b3c:	push	{r2, r3}
   14b40:	ldr	r3, [fp, #8]
   14b44:	mov	r2, sp
   14b48:	bl	14874 <table_find@@Base>
   14b4c:	mov	sp, fp
   14b50:	pop	{fp, pc}

00014b54 <table_find_ullong@@Base>:
   14b54:	push	{fp, lr}
   14b58:	mov	fp, sp
   14b5c:	push	{r2, r3}
   14b60:	ldr	r3, [fp, #8]
   14b64:	mov	r2, sp
   14b68:	bl	14874 <table_find@@Base>
   14b6c:	mov	sp, fp
   14b70:	pop	{fp, pc}

00014b74 <table_find_float@@Base>:
   14b74:	push	{fp, lr}
   14b78:	mov	fp, sp
   14b7c:	sub	sp, sp, #8
   14b80:	mov	r3, r2
   14b84:	add	r2, sp, #4
   14b88:	vstr	s0, [sp, #4]
   14b8c:	bl	14874 <table_find@@Base>
   14b90:	mov	sp, fp
   14b94:	pop	{fp, pc}

00014b98 <table_find_double@@Base>:
   14b98:	push	{fp, lr}
   14b9c:	mov	fp, sp
   14ba0:	sub	sp, sp, #8
   14ba4:	mov	r3, r2
   14ba8:	mov	r2, sp
   14bac:	vstr	d0, [sp]
   14bb0:	bl	14874 <table_find@@Base>
   14bb4:	mov	sp, fp
   14bb8:	pop	{fp, pc}

00014bbc <table_find_ldouble@@Base>:
   14bbc:	push	{fp, lr}
   14bc0:	mov	fp, sp
   14bc4:	sub	sp, sp, #8
   14bc8:	mov	r3, r2
   14bcc:	mov	r2, sp
   14bd0:	vstr	d0, [sp]
   14bd4:	bl	14874 <table_find@@Base>
   14bd8:	mov	sp, fp
   14bdc:	pop	{fp, pc}

00014be0 <table_find_char@@Base>:
   14be0:	push	{fp, lr}
   14be4:	mov	fp, sp
   14be8:	sub	sp, sp, #8
   14bec:	strb	r2, [fp, #-1]
   14bf0:	sub	r2, fp, #1
   14bf4:	bl	14874 <table_find@@Base>
   14bf8:	mov	sp, fp
   14bfc:	pop	{fp, pc}

00014c00 <table_find_uchar@@Base>:
   14c00:	push	{fp, lr}
   14c04:	mov	fp, sp
   14c08:	sub	sp, sp, #8
   14c0c:	strb	r2, [fp, #-1]
   14c10:	sub	r2, fp, #1
   14c14:	bl	14874 <table_find@@Base>
   14c18:	mov	sp, fp
   14c1c:	pop	{fp, pc}

00014c20 <table_find_string@@Base>:
   14c20:	push	{fp, lr}
   14c24:	mov	fp, sp
   14c28:	sub	sp, sp, #8
   14c2c:	str	r2, [sp, #4]
   14c30:	add	r2, sp, #4
   14c34:	bl	14874 <table_find@@Base>
   14c38:	mov	sp, fp
   14c3c:	pop	{fp, pc}

00014c40 <table_find_ptr@@Base>:
   14c40:	b	14874 <table_find@@Base>

00014c44 <table_sorted_find@@Base>:
   14c44:	push	{r4, r5, r6, r7, fp, lr}
   14c48:	add	fp, sp, #16
   14c4c:	sub	sp, sp, #8
   14c50:	mov	r4, r3
   14c54:	mov	r5, r2
   14c58:	mov	r6, r1
   14c5c:	mov	r7, r0
   14c60:	bl	15b38 <table_get_row_length@@Base>
   14c64:	sub	r0, r0, #1
   14c68:	mov	r1, #0
   14c6c:	mov	r2, r5
   14c70:	mov	r3, r4
   14c74:	str	r1, [sp]
   14c78:	str	r0, [sp, #4]
   14c7c:	mov	r0, r7
   14c80:	mov	r1, r6
   14c84:	bl	14c90 <table_sorted_subset_find@@Base>
   14c88:	sub	sp, fp, #16
   14c8c:	pop	{r4, r5, r6, r7, fp, pc}

00014c90 <table_sorted_subset_find@@Base>:
   14c90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14c94:	add	fp, sp, #28
   14c98:	push	{r3}		; (str r3, [sp, #-4]!)
   14c9c:	ldr	r6, [fp, #12]
   14ca0:	ldr	r8, [fp, #8]
   14ca4:	mov	r9, r2
   14ca8:	mov	sl, r1
   14cac:	mov	r7, r0
   14cb0:	b	14cb8 <table_sorted_subset_find@@Base+0x28>
   14cb4:	sub	r6, r5, #1
   14cb8:	mov	r0, r7
   14cbc:	mov	r1, sl
   14cc0:	bl	1407c <table_get_column_compare_function@@Base>
   14cc4:	mov	r4, r0
   14cc8:	sub	r0, r6, r8
   14ccc:	mov	r2, sl
   14cd0:	add	r0, r0, r0, lsr #31
   14cd4:	add	r5, r8, r0, asr #1
   14cd8:	mov	r0, r7
   14cdc:	mov	r1, r5
   14ce0:	bl	15864 <table_get@@Base>
   14ce4:	mov	r1, r0
   14ce8:	mov	r0, r9
   14cec:	blx	r4
   14cf0:	cmp	r6, r8
   14cf4:	blt	14d60 <table_sorted_subset_find@@Base+0xd0>
   14cf8:	cmn	r0, #1
   14cfc:	beq	14cb4 <table_sorted_subset_find@@Base+0x24>
   14d00:	cmp	r0, #1
   14d04:	bne	14d10 <table_sorted_subset_find@@Base+0x80>
   14d08:	mov	r8, r5
   14d0c:	b	14cb8 <table_sorted_subset_find@@Base+0x28>
   14d10:	cmp	r0, #0
   14d14:	bne	14d60 <table_sorted_subset_find@@Base+0xd0>
   14d18:	ldr	r8, [sp]
   14d1c:	add	r6, r5, #1
   14d20:	cmp	r8, #0
   14d24:	mov	r0, r7
   14d28:	mov	r2, sl
   14d2c:	subeq	r6, r5, #1
   14d30:	mov	r1, r6
   14d34:	bl	15864 <table_get@@Base>
   14d38:	mov	r1, r9
   14d3c:	blx	r4
   14d40:	cmp	r0, #0
   14d44:	mov	r5, r6
   14d48:	beq	14d1c <table_sorted_subset_find@@Base+0x8c>
   14d4c:	cmp	r8, #0
   14d50:	addeq	r0, r6, #1
   14d54:	subne	r0, r6, #1
   14d58:	sub	sp, fp, #28
   14d5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d60:	rsb	r0, r5, #0
   14d64:	sub	sp, fp, #28
   14d68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00014d6c <table_sorted_find_int@@Base>:
   14d6c:	push	{r4, r5, r6, sl, fp, lr}
   14d70:	add	fp, sp, #16
   14d74:	sub	sp, sp, #16
   14d78:	mov	r4, r3
   14d7c:	mov	r5, r1
   14d80:	mov	r6, r0
   14d84:	str	r2, [sp, #12]
   14d88:	bl	15b38 <table_get_row_length@@Base>
   14d8c:	sub	r0, r0, #1
   14d90:	mov	r1, #0
   14d94:	add	r2, sp, #12
   14d98:	mov	r3, r4
   14d9c:	str	r1, [sp]
   14da0:	str	r0, [sp, #4]
   14da4:	mov	r0, r6
   14da8:	mov	r1, r5
   14dac:	bl	14c90 <table_sorted_subset_find@@Base>
   14db0:	sub	sp, fp, #16
   14db4:	pop	{r4, r5, r6, sl, fp, pc}

00014db8 <table_sorted_find_uint@@Base>:
   14db8:	push	{r4, r5, r6, sl, fp, lr}
   14dbc:	add	fp, sp, #16
   14dc0:	sub	sp, sp, #16
   14dc4:	mov	r4, r3
   14dc8:	mov	r5, r1
   14dcc:	mov	r6, r0
   14dd0:	str	r2, [sp, #12]
   14dd4:	bl	15b38 <table_get_row_length@@Base>
   14dd8:	sub	r0, r0, #1
   14ddc:	mov	r1, #0
   14de0:	add	r2, sp, #12
   14de4:	mov	r3, r4
   14de8:	str	r1, [sp]
   14dec:	str	r0, [sp, #4]
   14df0:	mov	r0, r6
   14df4:	mov	r1, r5
   14df8:	bl	14c90 <table_sorted_subset_find@@Base>
   14dfc:	sub	sp, fp, #16
   14e00:	pop	{r4, r5, r6, sl, fp, pc}

00014e04 <table_sorted_find_int8@@Base>:
   14e04:	push	{r4, r5, r6, sl, fp, lr}
   14e08:	add	fp, sp, #16
   14e0c:	sub	sp, sp, #16
   14e10:	mov	r4, r3
   14e14:	mov	r5, r1
   14e18:	mov	r6, r0
   14e1c:	strb	r2, [sp, #15]
   14e20:	bl	15b38 <table_get_row_length@@Base>
   14e24:	sub	r0, r0, #1
   14e28:	mov	r1, #0
   14e2c:	add	r2, sp, #15
   14e30:	mov	r3, r4
   14e34:	str	r1, [sp]
   14e38:	str	r0, [sp, #4]
   14e3c:	mov	r0, r6
   14e40:	mov	r1, r5
   14e44:	bl	14c90 <table_sorted_subset_find@@Base>
   14e48:	sub	sp, fp, #16
   14e4c:	pop	{r4, r5, r6, sl, fp, pc}

00014e50 <table_sorted_find_uint8@@Base>:
   14e50:	push	{r4, r5, r6, sl, fp, lr}
   14e54:	add	fp, sp, #16
   14e58:	sub	sp, sp, #16
   14e5c:	mov	r4, r3
   14e60:	mov	r5, r1
   14e64:	mov	r6, r0
   14e68:	strb	r2, [sp, #15]
   14e6c:	bl	15b38 <table_get_row_length@@Base>
   14e70:	sub	r0, r0, #1
   14e74:	mov	r1, #0
   14e78:	add	r2, sp, #15
   14e7c:	mov	r3, r4
   14e80:	str	r1, [sp]
   14e84:	str	r0, [sp, #4]
   14e88:	mov	r0, r6
   14e8c:	mov	r1, r5
   14e90:	bl	14c90 <table_sorted_subset_find@@Base>
   14e94:	sub	sp, fp, #16
   14e98:	pop	{r4, r5, r6, sl, fp, pc}

00014e9c <table_sorted_find_int16@@Base>:
   14e9c:	push	{r4, r5, r6, sl, fp, lr}
   14ea0:	add	fp, sp, #16
   14ea4:	sub	sp, sp, #16
   14ea8:	mov	r4, r3
   14eac:	mov	r5, r1
   14eb0:	mov	r6, r0
   14eb4:	strh	r2, [sp, #14]
   14eb8:	bl	15b38 <table_get_row_length@@Base>
   14ebc:	sub	r0, r0, #1
   14ec0:	mov	r1, #0
   14ec4:	add	r2, sp, #14
   14ec8:	mov	r3, r4
   14ecc:	str	r1, [sp]
   14ed0:	str	r0, [sp, #4]
   14ed4:	mov	r0, r6
   14ed8:	mov	r1, r5
   14edc:	bl	14c90 <table_sorted_subset_find@@Base>
   14ee0:	sub	sp, fp, #16
   14ee4:	pop	{r4, r5, r6, sl, fp, pc}

00014ee8 <table_sorted_find_uint16@@Base>:
   14ee8:	push	{r4, r5, r6, sl, fp, lr}
   14eec:	add	fp, sp, #16
   14ef0:	sub	sp, sp, #16
   14ef4:	mov	r4, r3
   14ef8:	mov	r5, r1
   14efc:	mov	r6, r0
   14f00:	strh	r2, [sp, #14]
   14f04:	bl	15b38 <table_get_row_length@@Base>
   14f08:	sub	r0, r0, #1
   14f0c:	mov	r1, #0
   14f10:	add	r2, sp, #14
   14f14:	mov	r3, r4
   14f18:	str	r1, [sp]
   14f1c:	str	r0, [sp, #4]
   14f20:	mov	r0, r6
   14f24:	mov	r1, r5
   14f28:	bl	14c90 <table_sorted_subset_find@@Base>
   14f2c:	sub	sp, fp, #16
   14f30:	pop	{r4, r5, r6, sl, fp, pc}

00014f34 <table_sorted_find_int32@@Base>:
   14f34:	push	{r4, r5, r6, sl, fp, lr}
   14f38:	add	fp, sp, #16
   14f3c:	sub	sp, sp, #16
   14f40:	mov	r4, r3
   14f44:	mov	r5, r1
   14f48:	mov	r6, r0
   14f4c:	str	r2, [sp, #12]
   14f50:	bl	15b38 <table_get_row_length@@Base>
   14f54:	sub	r0, r0, #1
   14f58:	mov	r1, #0
   14f5c:	add	r2, sp, #12
   14f60:	mov	r3, r4
   14f64:	str	r1, [sp]
   14f68:	str	r0, [sp, #4]
   14f6c:	mov	r0, r6
   14f70:	mov	r1, r5
   14f74:	bl	14c90 <table_sorted_subset_find@@Base>
   14f78:	sub	sp, fp, #16
   14f7c:	pop	{r4, r5, r6, sl, fp, pc}

00014f80 <table_sorted_find_uint32@@Base>:
   14f80:	push	{r4, r5, r6, sl, fp, lr}
   14f84:	add	fp, sp, #16
   14f88:	sub	sp, sp, #16
   14f8c:	mov	r4, r3
   14f90:	mov	r5, r1
   14f94:	mov	r6, r0
   14f98:	str	r2, [sp, #12]
   14f9c:	bl	15b38 <table_get_row_length@@Base>
   14fa0:	sub	r0, r0, #1
   14fa4:	mov	r1, #0
   14fa8:	add	r2, sp, #12
   14fac:	mov	r3, r4
   14fb0:	str	r1, [sp]
   14fb4:	str	r0, [sp, #4]
   14fb8:	mov	r0, r6
   14fbc:	mov	r1, r5
   14fc0:	bl	14c90 <table_sorted_subset_find@@Base>
   14fc4:	sub	sp, fp, #16
   14fc8:	pop	{r4, r5, r6, sl, fp, pc}

00014fcc <table_sorted_find_int64@@Base>:
   14fcc:	push	{r4, r5, fp, lr}
   14fd0:	add	fp, sp, #8
   14fd4:	sub	sp, sp, #16
   14fd8:	mov	r4, r1
   14fdc:	mov	r5, r0
   14fe0:	str	r3, [sp, #12]
   14fe4:	str	r2, [sp, #8]
   14fe8:	bl	15b38 <table_get_row_length@@Base>
   14fec:	ldr	r3, [fp, #8]
   14ff0:	sub	r0, r0, #1
   14ff4:	mov	r1, #0
   14ff8:	add	r2, sp, #8
   14ffc:	str	r1, [sp]
   15000:	str	r0, [sp, #4]
   15004:	mov	r0, r5
   15008:	mov	r1, r4
   1500c:	bl	14c90 <table_sorted_subset_find@@Base>
   15010:	sub	sp, fp, #8
   15014:	pop	{r4, r5, fp, pc}

00015018 <table_sorted_find_uint64@@Base>:
   15018:	push	{r4, r5, fp, lr}
   1501c:	add	fp, sp, #8
   15020:	sub	sp, sp, #16
   15024:	mov	r4, r1
   15028:	mov	r5, r0
   1502c:	str	r3, [sp, #12]
   15030:	str	r2, [sp, #8]
   15034:	bl	15b38 <table_get_row_length@@Base>
   15038:	ldr	r3, [fp, #8]
   1503c:	sub	r0, r0, #1
   15040:	mov	r1, #0
   15044:	add	r2, sp, #8
   15048:	str	r1, [sp]
   1504c:	str	r0, [sp, #4]
   15050:	mov	r0, r5
   15054:	mov	r1, r4
   15058:	bl	14c90 <table_sorted_subset_find@@Base>
   1505c:	sub	sp, fp, #8
   15060:	pop	{r4, r5, fp, pc}

00015064 <table_sorted_find_short@@Base>:
   15064:	push	{r4, r5, r6, sl, fp, lr}
   15068:	add	fp, sp, #16
   1506c:	sub	sp, sp, #16
   15070:	mov	r4, r3
   15074:	mov	r5, r1
   15078:	mov	r6, r0
   1507c:	strh	r2, [sp, #14]
   15080:	bl	15b38 <table_get_row_length@@Base>
   15084:	sub	r0, r0, #1
   15088:	mov	r1, #0
   1508c:	add	r2, sp, #14
   15090:	mov	r3, r4
   15094:	str	r1, [sp]
   15098:	str	r0, [sp, #4]
   1509c:	mov	r0, r6
   150a0:	mov	r1, r5
   150a4:	bl	14c90 <table_sorted_subset_find@@Base>
   150a8:	sub	sp, fp, #16
   150ac:	pop	{r4, r5, r6, sl, fp, pc}

000150b0 <table_sorted_find_ushort@@Base>:
   150b0:	push	{r4, r5, r6, sl, fp, lr}
   150b4:	add	fp, sp, #16
   150b8:	sub	sp, sp, #16
   150bc:	mov	r4, r3
   150c0:	mov	r5, r1
   150c4:	mov	r6, r0
   150c8:	strh	r2, [sp, #14]
   150cc:	bl	15b38 <table_get_row_length@@Base>
   150d0:	sub	r0, r0, #1
   150d4:	mov	r1, #0
   150d8:	add	r2, sp, #14
   150dc:	mov	r3, r4
   150e0:	str	r1, [sp]
   150e4:	str	r0, [sp, #4]
   150e8:	mov	r0, r6
   150ec:	mov	r1, r5
   150f0:	bl	14c90 <table_sorted_subset_find@@Base>
   150f4:	sub	sp, fp, #16
   150f8:	pop	{r4, r5, r6, sl, fp, pc}

000150fc <table_sorted_find_long@@Base>:
   150fc:	push	{r4, r5, r6, sl, fp, lr}
   15100:	add	fp, sp, #16
   15104:	sub	sp, sp, #16
   15108:	mov	r4, r3
   1510c:	mov	r5, r1
   15110:	mov	r6, r0
   15114:	str	r2, [sp, #12]
   15118:	bl	15b38 <table_get_row_length@@Base>
   1511c:	sub	r0, r0, #1
   15120:	mov	r1, #0
   15124:	add	r2, sp, #12
   15128:	mov	r3, r4
   1512c:	str	r1, [sp]
   15130:	str	r0, [sp, #4]
   15134:	mov	r0, r6
   15138:	mov	r1, r5
   1513c:	bl	14c90 <table_sorted_subset_find@@Base>
   15140:	sub	sp, fp, #16
   15144:	pop	{r4, r5, r6, sl, fp, pc}

00015148 <table_sorted_find_ulong@@Base>:
   15148:	push	{r4, r5, r6, sl, fp, lr}
   1514c:	add	fp, sp, #16
   15150:	sub	sp, sp, #16
   15154:	mov	r4, r3
   15158:	mov	r5, r1
   1515c:	mov	r6, r0
   15160:	str	r2, [sp, #12]
   15164:	bl	15b38 <table_get_row_length@@Base>
   15168:	sub	r0, r0, #1
   1516c:	mov	r1, #0
   15170:	add	r2, sp, #12
   15174:	mov	r3, r4
   15178:	str	r1, [sp]
   1517c:	str	r0, [sp, #4]
   15180:	mov	r0, r6
   15184:	mov	r1, r5
   15188:	bl	14c90 <table_sorted_subset_find@@Base>
   1518c:	sub	sp, fp, #16
   15190:	pop	{r4, r5, r6, sl, fp, pc}

00015194 <table_sorted_find_llong@@Base>:
   15194:	push	{r4, r5, fp, lr}
   15198:	add	fp, sp, #8
   1519c:	sub	sp, sp, #16
   151a0:	mov	r4, r1
   151a4:	mov	r5, r0
   151a8:	str	r3, [sp, #12]
   151ac:	str	r2, [sp, #8]
   151b0:	bl	15b38 <table_get_row_length@@Base>
   151b4:	ldr	r3, [fp, #8]
   151b8:	sub	r0, r0, #1
   151bc:	mov	r1, #0
   151c0:	add	r2, sp, #8
   151c4:	str	r1, [sp]
   151c8:	str	r0, [sp, #4]
   151cc:	mov	r0, r5
   151d0:	mov	r1, r4
   151d4:	bl	14c90 <table_sorted_subset_find@@Base>
   151d8:	sub	sp, fp, #8
   151dc:	pop	{r4, r5, fp, pc}

000151e0 <table_sorted_find_ullong@@Base>:
   151e0:	push	{r4, r5, fp, lr}
   151e4:	add	fp, sp, #8
   151e8:	sub	sp, sp, #16
   151ec:	mov	r4, r1
   151f0:	mov	r5, r0
   151f4:	str	r3, [sp, #12]
   151f8:	str	r2, [sp, #8]
   151fc:	bl	15b38 <table_get_row_length@@Base>
   15200:	ldr	r3, [fp, #8]
   15204:	sub	r0, r0, #1
   15208:	mov	r1, #0
   1520c:	add	r2, sp, #8
   15210:	str	r1, [sp]
   15214:	str	r0, [sp, #4]
   15218:	mov	r0, r5
   1521c:	mov	r1, r4
   15220:	bl	14c90 <table_sorted_subset_find@@Base>
   15224:	sub	sp, fp, #8
   15228:	pop	{r4, r5, fp, pc}

0001522c <table_sorted_find_float@@Base>:
   1522c:	push	{r4, r5, r6, sl, fp, lr}
   15230:	add	fp, sp, #16
   15234:	sub	sp, sp, #16
   15238:	mov	r4, r2
   1523c:	mov	r5, r1
   15240:	mov	r6, r0
   15244:	vstr	s0, [sp, #12]
   15248:	bl	15b38 <table_get_row_length@@Base>
   1524c:	sub	r0, r0, #1
   15250:	mov	r1, #0
   15254:	add	r2, sp, #12
   15258:	mov	r3, r4
   1525c:	str	r1, [sp]
   15260:	str	r0, [sp, #4]
   15264:	mov	r0, r6
   15268:	mov	r1, r5
   1526c:	bl	14c90 <table_sorted_subset_find@@Base>
   15270:	sub	sp, fp, #16
   15274:	pop	{r4, r5, r6, sl, fp, pc}

00015278 <table_sorted_find_double@@Base>:
   15278:	push	{r4, r5, r6, sl, fp, lr}
   1527c:	add	fp, sp, #16
   15280:	sub	sp, sp, #16
   15284:	mov	r4, r2
   15288:	mov	r5, r1
   1528c:	mov	r6, r0
   15290:	vstr	d0, [sp, #8]
   15294:	bl	15b38 <table_get_row_length@@Base>
   15298:	sub	r0, r0, #1
   1529c:	mov	r1, #0
   152a0:	add	r2, sp, #8
   152a4:	mov	r3, r4
   152a8:	str	r1, [sp]
   152ac:	str	r0, [sp, #4]
   152b0:	mov	r0, r6
   152b4:	mov	r1, r5
   152b8:	bl	14c90 <table_sorted_subset_find@@Base>
   152bc:	sub	sp, fp, #16
   152c0:	pop	{r4, r5, r6, sl, fp, pc}

000152c4 <table_sorted_find_ldouble@@Base>:
   152c4:	push	{r4, r5, r6, sl, fp, lr}
   152c8:	add	fp, sp, #16
   152cc:	sub	sp, sp, #16
   152d0:	mov	r4, r2
   152d4:	mov	r5, r1
   152d8:	mov	r6, r0
   152dc:	vstr	d0, [sp, #8]
   152e0:	bl	15b38 <table_get_row_length@@Base>
   152e4:	sub	r0, r0, #1
   152e8:	mov	r1, #0
   152ec:	add	r2, sp, #8
   152f0:	mov	r3, r4
   152f4:	str	r1, [sp]
   152f8:	str	r0, [sp, #4]
   152fc:	mov	r0, r6
   15300:	mov	r1, r5
   15304:	bl	14c90 <table_sorted_subset_find@@Base>
   15308:	sub	sp, fp, #16
   1530c:	pop	{r4, r5, r6, sl, fp, pc}

00015310 <table_sorted_find_char@@Base>:
   15310:	push	{r4, r5, r6, sl, fp, lr}
   15314:	add	fp, sp, #16
   15318:	sub	sp, sp, #16
   1531c:	mov	r4, r3
   15320:	mov	r5, r1
   15324:	mov	r6, r0
   15328:	strb	r2, [sp, #15]
   1532c:	bl	15b38 <table_get_row_length@@Base>
   15330:	sub	r0, r0, #1
   15334:	mov	r1, #0
   15338:	add	r2, sp, #15
   1533c:	mov	r3, r4
   15340:	str	r1, [sp]
   15344:	str	r0, [sp, #4]
   15348:	mov	r0, r6
   1534c:	mov	r1, r5
   15350:	bl	14c90 <table_sorted_subset_find@@Base>
   15354:	sub	sp, fp, #16
   15358:	pop	{r4, r5, r6, sl, fp, pc}

0001535c <table_sorted_find_uchar@@Base>:
   1535c:	push	{r4, r5, r6, sl, fp, lr}
   15360:	add	fp, sp, #16
   15364:	sub	sp, sp, #16
   15368:	mov	r4, r3
   1536c:	mov	r5, r1
   15370:	mov	r6, r0
   15374:	strb	r2, [sp, #15]
   15378:	bl	15b38 <table_get_row_length@@Base>
   1537c:	sub	r0, r0, #1
   15380:	mov	r1, #0
   15384:	add	r2, sp, #15
   15388:	mov	r3, r4
   1538c:	str	r1, [sp]
   15390:	str	r0, [sp, #4]
   15394:	mov	r0, r6
   15398:	mov	r1, r5
   1539c:	bl	14c90 <table_sorted_subset_find@@Base>
   153a0:	sub	sp, fp, #16
   153a4:	pop	{r4, r5, r6, sl, fp, pc}

000153a8 <table_sorted_find_string@@Base>:
   153a8:	push	{r4, r5, r6, r7, fp, lr}
   153ac:	add	fp, sp, #16
   153b0:	sub	sp, sp, #8
   153b4:	mov	r4, r3
   153b8:	mov	r5, r2
   153bc:	mov	r6, r1
   153c0:	mov	r7, r0
   153c4:	bl	15b38 <table_get_row_length@@Base>
   153c8:	sub	r0, r0, #1
   153cc:	mov	r1, #0
   153d0:	mov	r2, r5
   153d4:	mov	r3, r4
   153d8:	str	r1, [sp]
   153dc:	str	r0, [sp, #4]
   153e0:	mov	r0, r7
   153e4:	mov	r1, r6
   153e8:	bl	14c90 <table_sorted_subset_find@@Base>
   153ec:	sub	sp, fp, #16
   153f0:	pop	{r4, r5, r6, r7, fp, pc}

000153f4 <table_sorted_find_ptr@@Base>:
   153f4:	push	{r4, r5, r6, r7, fp, lr}
   153f8:	add	fp, sp, #16
   153fc:	sub	sp, sp, #8
   15400:	mov	r4, r3
   15404:	mov	r5, r2
   15408:	mov	r6, r1
   1540c:	mov	r7, r0
   15410:	bl	15b38 <table_get_row_length@@Base>
   15414:	sub	r0, r0, #1
   15418:	mov	r1, #0
   1541c:	mov	r2, r5
   15420:	mov	r3, r4
   15424:	str	r1, [sp]
   15428:	str	r0, [sp, #4]
   1542c:	mov	r0, r7
   15430:	mov	r1, r6
   15434:	bl	14c90 <table_sorted_subset_find@@Base>
   15438:	sub	sp, fp, #16
   1543c:	pop	{r4, r5, r6, r7, fp, pc}

00015440 <table_sorted_subset_find_int@@Base>:
   15440:	push	{fp, lr}
   15444:	mov	fp, sp
   15448:	sub	sp, sp, #16
   1544c:	str	r2, [fp, #-4]
   15450:	ldr	r2, [fp, #12]
   15454:	str	r2, [sp, #4]
   15458:	ldr	r2, [fp, #8]
   1545c:	str	r2, [sp]
   15460:	sub	r2, fp, #4
   15464:	bl	14c90 <table_sorted_subset_find@@Base>
   15468:	mov	sp, fp
   1546c:	pop	{fp, pc}

00015470 <table_sorted_subset_find_uint@@Base>:
   15470:	push	{fp, lr}
   15474:	mov	fp, sp
   15478:	sub	sp, sp, #16
   1547c:	str	r2, [fp, #-4]
   15480:	ldr	r2, [fp, #12]
   15484:	str	r2, [sp, #4]
   15488:	ldr	r2, [fp, #8]
   1548c:	str	r2, [sp]
   15490:	sub	r2, fp, #4
   15494:	bl	14c90 <table_sorted_subset_find@@Base>
   15498:	mov	sp, fp
   1549c:	pop	{fp, pc}

000154a0 <table_sorted_subset_find_int8@@Base>:
   154a0:	push	{fp, lr}
   154a4:	mov	fp, sp
   154a8:	sub	sp, sp, #16
   154ac:	strb	r2, [fp, #-1]
   154b0:	ldr	r2, [fp, #12]
   154b4:	str	r2, [sp, #4]
   154b8:	ldr	r2, [fp, #8]
   154bc:	str	r2, [sp]
   154c0:	sub	r2, fp, #1
   154c4:	bl	14c90 <table_sorted_subset_find@@Base>
   154c8:	mov	sp, fp
   154cc:	pop	{fp, pc}

000154d0 <table_sorted_subset_find_uint8@@Base>:
   154d0:	push	{fp, lr}
   154d4:	mov	fp, sp
   154d8:	sub	sp, sp, #16
   154dc:	strb	r2, [fp, #-1]
   154e0:	ldr	r2, [fp, #12]
   154e4:	str	r2, [sp, #4]
   154e8:	ldr	r2, [fp, #8]
   154ec:	str	r2, [sp]
   154f0:	sub	r2, fp, #1
   154f4:	bl	14c90 <table_sorted_subset_find@@Base>
   154f8:	mov	sp, fp
   154fc:	pop	{fp, pc}

00015500 <table_sorted_subset_find_int16@@Base>:
   15500:	push	{fp, lr}
   15504:	mov	fp, sp
   15508:	sub	sp, sp, #16
   1550c:	strh	r2, [fp, #-2]
   15510:	ldr	r2, [fp, #12]
   15514:	str	r2, [sp, #4]
   15518:	ldr	r2, [fp, #8]
   1551c:	str	r2, [sp]
   15520:	sub	r2, fp, #2
   15524:	bl	14c90 <table_sorted_subset_find@@Base>
   15528:	mov	sp, fp
   1552c:	pop	{fp, pc}

00015530 <table_sorted_subset_find_uint16@@Base>:
   15530:	push	{fp, lr}
   15534:	mov	fp, sp
   15538:	sub	sp, sp, #16
   1553c:	strh	r2, [fp, #-2]
   15540:	ldr	r2, [fp, #12]
   15544:	str	r2, [sp, #4]
   15548:	ldr	r2, [fp, #8]
   1554c:	str	r2, [sp]
   15550:	sub	r2, fp, #2
   15554:	bl	14c90 <table_sorted_subset_find@@Base>
   15558:	mov	sp, fp
   1555c:	pop	{fp, pc}

00015560 <table_sorted_subset_find_int32@@Base>:
   15560:	push	{fp, lr}
   15564:	mov	fp, sp
   15568:	sub	sp, sp, #16
   1556c:	str	r2, [fp, #-4]
   15570:	ldr	r2, [fp, #12]
   15574:	str	r2, [sp, #4]
   15578:	ldr	r2, [fp, #8]
   1557c:	str	r2, [sp]
   15580:	sub	r2, fp, #4
   15584:	bl	14c90 <table_sorted_subset_find@@Base>
   15588:	mov	sp, fp
   1558c:	pop	{fp, pc}

00015590 <table_sorted_subset_find_uint32@@Base>:
   15590:	push	{fp, lr}
   15594:	mov	fp, sp
   15598:	sub	sp, sp, #16
   1559c:	str	r2, [fp, #-4]
   155a0:	ldr	r2, [fp, #12]
   155a4:	str	r2, [sp, #4]
   155a8:	ldr	r2, [fp, #8]
   155ac:	str	r2, [sp]
   155b0:	sub	r2, fp, #4
   155b4:	bl	14c90 <table_sorted_subset_find@@Base>
   155b8:	mov	sp, fp
   155bc:	pop	{fp, pc}

000155c0 <table_sorted_subset_find_int64@@Base>:
   155c0:	push	{fp, lr}
   155c4:	mov	fp, sp
   155c8:	sub	sp, sp, #16
   155cc:	str	r2, [sp, #8]
   155d0:	ldr	r2, [fp, #16]
   155d4:	str	r3, [sp, #12]
   155d8:	ldr	r3, [fp, #8]
   155dc:	str	r2, [sp, #4]
   155e0:	ldr	r2, [fp, #12]
   155e4:	str	r2, [sp]
   155e8:	add	r2, sp, #8
   155ec:	bl	14c90 <table_sorted_subset_find@@Base>
   155f0:	mov	sp, fp
   155f4:	pop	{fp, pc}

000155f8 <table_sorted_subset_find_uint64@@Base>:
   155f8:	push	{fp, lr}
   155fc:	mov	fp, sp
   15600:	sub	sp, sp, #16
   15604:	str	r2, [sp, #8]
   15608:	ldr	r2, [fp, #16]
   1560c:	str	r3, [sp, #12]
   15610:	ldr	r3, [fp, #8]
   15614:	str	r2, [sp, #4]
   15618:	ldr	r2, [fp, #12]
   1561c:	str	r2, [sp]
   15620:	add	r2, sp, #8
   15624:	bl	14c90 <table_sorted_subset_find@@Base>
   15628:	mov	sp, fp
   1562c:	pop	{fp, pc}

00015630 <table_sorted_subset_find_short@@Base>:
   15630:	push	{fp, lr}
   15634:	mov	fp, sp
   15638:	sub	sp, sp, #16
   1563c:	strh	r2, [fp, #-2]
   15640:	ldr	r2, [fp, #12]
   15644:	str	r2, [sp, #4]
   15648:	ldr	r2, [fp, #8]
   1564c:	str	r2, [sp]
   15650:	sub	r2, fp, #2
   15654:	bl	14c90 <table_sorted_subset_find@@Base>
   15658:	mov	sp, fp
   1565c:	pop	{fp, pc}

00015660 <table_sorted_subset_find_ushort@@Base>:
   15660:	push	{fp, lr}
   15664:	mov	fp, sp
   15668:	sub	sp, sp, #16
   1566c:	strh	r2, [fp, #-2]
   15670:	ldr	r2, [fp, #12]
   15674:	str	r2, [sp, #4]
   15678:	ldr	r2, [fp, #8]
   1567c:	str	r2, [sp]
   15680:	sub	r2, fp, #2
   15684:	bl	14c90 <table_sorted_subset_find@@Base>
   15688:	mov	sp, fp
   1568c:	pop	{fp, pc}

00015690 <table_sorted_subset_find_long@@Base>:
   15690:	push	{fp, lr}
   15694:	mov	fp, sp
   15698:	sub	sp, sp, #16
   1569c:	str	r2, [fp, #-4]
   156a0:	ldr	r2, [fp, #12]
   156a4:	str	r2, [sp, #4]
   156a8:	ldr	r2, [fp, #8]
   156ac:	str	r2, [sp]
   156b0:	sub	r2, fp, #4
   156b4:	bl	14c90 <table_sorted_subset_find@@Base>
   156b8:	mov	sp, fp
   156bc:	pop	{fp, pc}

000156c0 <table_sorted_subset_find_ulong@@Base>:
   156c0:	push	{fp, lr}
   156c4:	mov	fp, sp
   156c8:	sub	sp, sp, #16
   156cc:	str	r2, [fp, #-4]
   156d0:	ldr	r2, [fp, #12]
   156d4:	str	r2, [sp, #4]
   156d8:	ldr	r2, [fp, #8]
   156dc:	str	r2, [sp]
   156e0:	sub	r2, fp, #4
   156e4:	bl	14c90 <table_sorted_subset_find@@Base>
   156e8:	mov	sp, fp
   156ec:	pop	{fp, pc}

000156f0 <table_sorted_subset_find_llong@@Base>:
   156f0:	push	{fp, lr}
   156f4:	mov	fp, sp
   156f8:	sub	sp, sp, #16
   156fc:	str	r2, [sp, #8]
   15700:	ldr	r2, [fp, #16]
   15704:	str	r3, [sp, #12]
   15708:	ldr	r3, [fp, #8]
   1570c:	str	r2, [sp, #4]
   15710:	ldr	r2, [fp, #12]
   15714:	str	r2, [sp]
   15718:	add	r2, sp, #8
   1571c:	bl	14c90 <table_sorted_subset_find@@Base>
   15720:	mov	sp, fp
   15724:	pop	{fp, pc}

00015728 <table_sorted_subset_find_ullong@@Base>:
   15728:	push	{fp, lr}
   1572c:	mov	fp, sp
   15730:	sub	sp, sp, #16
   15734:	str	r2, [sp, #8]
   15738:	ldr	r2, [fp, #16]
   1573c:	str	r3, [sp, #12]
   15740:	ldr	r3, [fp, #8]
   15744:	str	r2, [sp, #4]
   15748:	ldr	r2, [fp, #12]
   1574c:	str	r2, [sp]
   15750:	add	r2, sp, #8
   15754:	bl	14c90 <table_sorted_subset_find@@Base>
   15758:	mov	sp, fp
   1575c:	pop	{fp, pc}

00015760 <table_sorted_subset_find_float@@Base>:
   15760:	push	{fp, lr}
   15764:	mov	fp, sp
   15768:	sub	sp, sp, #16
   1576c:	mov	ip, r2
   15770:	ldr	r2, [fp, #8]
   15774:	str	r3, [sp]
   15778:	vstr	s0, [fp, #-4]
   1577c:	mov	r3, ip
   15780:	str	r2, [sp, #4]
   15784:	sub	r2, fp, #4
   15788:	bl	14c90 <table_sorted_subset_find@@Base>
   1578c:	mov	sp, fp
   15790:	pop	{fp, pc}

00015794 <table_sorted_subset_find_double@@Base>:
   15794:	push	{fp, lr}
   15798:	mov	fp, sp
   1579c:	sub	sp, sp, #16
   157a0:	mov	ip, r2
   157a4:	ldr	r2, [fp, #8]
   157a8:	str	r3, [sp]
   157ac:	vstr	d0, [sp, #8]
   157b0:	mov	r3, ip
   157b4:	str	r2, [sp, #4]
   157b8:	add	r2, sp, #8
   157bc:	bl	14c90 <table_sorted_subset_find@@Base>
   157c0:	mov	sp, fp
   157c4:	pop	{fp, pc}

000157c8 <table_sorted_subset_find_ldouble@@Base>:
   157c8:	push	{fp, lr}
   157cc:	mov	fp, sp
   157d0:	sub	sp, sp, #16
   157d4:	mov	ip, r2
   157d8:	ldr	r2, [fp, #8]
   157dc:	str	r3, [sp]
   157e0:	vstr	d0, [sp, #8]
   157e4:	mov	r3, ip
   157e8:	str	r2, [sp, #4]
   157ec:	add	r2, sp, #8
   157f0:	bl	14c90 <table_sorted_subset_find@@Base>
   157f4:	mov	sp, fp
   157f8:	pop	{fp, pc}

000157fc <table_sorted_subset_find_char@@Base>:
   157fc:	push	{fp, lr}
   15800:	mov	fp, sp
   15804:	sub	sp, sp, #16
   15808:	strb	r2, [fp, #-1]
   1580c:	ldr	r2, [fp, #12]
   15810:	str	r2, [sp, #4]
   15814:	ldr	r2, [fp, #8]
   15818:	str	r2, [sp]
   1581c:	sub	r2, fp, #1
   15820:	bl	14c90 <table_sorted_subset_find@@Base>
   15824:	mov	sp, fp
   15828:	pop	{fp, pc}

0001582c <table_sorted_subset_find_uchar@@Base>:
   1582c:	push	{fp, lr}
   15830:	mov	fp, sp
   15834:	sub	sp, sp, #16
   15838:	strb	r2, [fp, #-1]
   1583c:	ldr	r2, [fp, #12]
   15840:	str	r2, [sp, #4]
   15844:	ldr	r2, [fp, #8]
   15848:	str	r2, [sp]
   1584c:	sub	r2, fp, #1
   15850:	bl	14c90 <table_sorted_subset_find@@Base>
   15854:	mov	sp, fp
   15858:	pop	{fp, pc}

0001585c <table_sorted_subset_find_string@@Base>:
   1585c:	b	14c90 <table_sorted_subset_find@@Base>

00015860 <table_sorted_subset_find_ptr@@Base>:
   15860:	b	14c90 <table_sorted_subset_find@@Base>

00015864 <table_get@@Base>:
   15864:	push	{fp, lr}
   15868:	mov	fp, sp
   1586c:	bl	16bf4 <table_get_cell_ptr@@Base>
   15870:	ldr	r0, [r0]
   15874:	pop	{fp, pc}

00015878 <table_get_bool@@Base>:
   15878:	push	{fp, lr}
   1587c:	mov	fp, sp
   15880:	bl	16bf4 <table_get_cell_ptr@@Base>
   15884:	ldr	r0, [r0]
   15888:	ldrb	r0, [r0]
   1588c:	pop	{fp, pc}

00015890 <table_get_int@@Base>:
   15890:	push	{fp, lr}
   15894:	mov	fp, sp
   15898:	bl	16bf4 <table_get_cell_ptr@@Base>
   1589c:	ldr	r0, [r0]
   158a0:	ldr	r0, [r0]
   158a4:	pop	{fp, pc}

000158a8 <table_get_uint@@Base>:
   158a8:	push	{fp, lr}
   158ac:	mov	fp, sp
   158b0:	bl	16bf4 <table_get_cell_ptr@@Base>
   158b4:	ldr	r0, [r0]
   158b8:	ldr	r0, [r0]
   158bc:	pop	{fp, pc}

000158c0 <table_get_int8@@Base>:
   158c0:	push	{fp, lr}
   158c4:	mov	fp, sp
   158c8:	bl	16bf4 <table_get_cell_ptr@@Base>
   158cc:	ldr	r0, [r0]
   158d0:	ldrsb	r0, [r0]
   158d4:	pop	{fp, pc}

000158d8 <table_get_uint8@@Base>:
   158d8:	push	{fp, lr}
   158dc:	mov	fp, sp
   158e0:	bl	16bf4 <table_get_cell_ptr@@Base>
   158e4:	ldr	r0, [r0]
   158e8:	ldrb	r0, [r0]
   158ec:	pop	{fp, pc}

000158f0 <table_get_int16@@Base>:
   158f0:	push	{fp, lr}
   158f4:	mov	fp, sp
   158f8:	bl	16bf4 <table_get_cell_ptr@@Base>
   158fc:	ldr	r0, [r0]
   15900:	ldrsh	r0, [r0]
   15904:	pop	{fp, pc}

00015908 <table_get_uint16@@Base>:
   15908:	push	{fp, lr}
   1590c:	mov	fp, sp
   15910:	bl	16bf4 <table_get_cell_ptr@@Base>
   15914:	ldr	r0, [r0]
   15918:	ldrh	r0, [r0]
   1591c:	pop	{fp, pc}

00015920 <table_get_int32@@Base>:
   15920:	push	{fp, lr}
   15924:	mov	fp, sp
   15928:	bl	16bf4 <table_get_cell_ptr@@Base>
   1592c:	ldr	r0, [r0]
   15930:	ldr	r0, [r0]
   15934:	pop	{fp, pc}

00015938 <table_get_uint32@@Base>:
   15938:	push	{fp, lr}
   1593c:	mov	fp, sp
   15940:	bl	16bf4 <table_get_cell_ptr@@Base>
   15944:	ldr	r0, [r0]
   15948:	ldr	r0, [r0]
   1594c:	pop	{fp, pc}

00015950 <table_get_int64@@Base>:
   15950:	push	{fp, lr}
   15954:	mov	fp, sp
   15958:	bl	16bf4 <table_get_cell_ptr@@Base>
   1595c:	ldr	r0, [r0]
   15960:	ldrd	r0, [r0]
   15964:	pop	{fp, pc}

00015968 <table_get_uint64@@Base>:
   15968:	push	{fp, lr}
   1596c:	mov	fp, sp
   15970:	bl	16bf4 <table_get_cell_ptr@@Base>
   15974:	ldr	r0, [r0]
   15978:	ldrd	r0, [r0]
   1597c:	pop	{fp, pc}

00015980 <table_get_short@@Base>:
   15980:	push	{fp, lr}
   15984:	mov	fp, sp
   15988:	bl	16bf4 <table_get_cell_ptr@@Base>
   1598c:	ldr	r0, [r0]
   15990:	ldrsh	r0, [r0]
   15994:	pop	{fp, pc}

00015998 <table_get_ushort@@Base>:
   15998:	push	{fp, lr}
   1599c:	mov	fp, sp
   159a0:	bl	16bf4 <table_get_cell_ptr@@Base>
   159a4:	ldr	r0, [r0]
   159a8:	ldrh	r0, [r0]
   159ac:	pop	{fp, pc}

000159b0 <table_get_long@@Base>:
   159b0:	push	{fp, lr}
   159b4:	mov	fp, sp
   159b8:	bl	16bf4 <table_get_cell_ptr@@Base>
   159bc:	ldr	r0, [r0]
   159c0:	ldr	r0, [r0]
   159c4:	pop	{fp, pc}

000159c8 <table_get_ulong@@Base>:
   159c8:	push	{fp, lr}
   159cc:	mov	fp, sp
   159d0:	bl	16bf4 <table_get_cell_ptr@@Base>
   159d4:	ldr	r0, [r0]
   159d8:	ldr	r0, [r0]
   159dc:	pop	{fp, pc}

000159e0 <table_get_llong@@Base>:
   159e0:	push	{fp, lr}
   159e4:	mov	fp, sp
   159e8:	bl	16bf4 <table_get_cell_ptr@@Base>
   159ec:	ldr	r0, [r0]
   159f0:	ldrd	r0, [r0]
   159f4:	pop	{fp, pc}

000159f8 <table_get_ullong@@Base>:
   159f8:	push	{fp, lr}
   159fc:	mov	fp, sp
   15a00:	bl	16bf4 <table_get_cell_ptr@@Base>
   15a04:	ldr	r0, [r0]
   15a08:	ldrd	r0, [r0]
   15a0c:	pop	{fp, pc}

00015a10 <table_get_float@@Base>:
   15a10:	push	{fp, lr}
   15a14:	mov	fp, sp
   15a18:	bl	16bf4 <table_get_cell_ptr@@Base>
   15a1c:	ldr	r0, [r0]
   15a20:	vldr	s0, [r0]
   15a24:	pop	{fp, pc}

00015a28 <table_get_double@@Base>:
   15a28:	push	{fp, lr}
   15a2c:	mov	fp, sp
   15a30:	bl	16bf4 <table_get_cell_ptr@@Base>
   15a34:	ldr	r0, [r0]
   15a38:	vldr	d0, [r0]
   15a3c:	pop	{fp, pc}

00015a40 <table_get_ldouble@@Base>:
   15a40:	push	{fp, lr}
   15a44:	mov	fp, sp
   15a48:	bl	16bf4 <table_get_cell_ptr@@Base>
   15a4c:	ldr	r0, [r0]
   15a50:	vldr	d0, [r0]
   15a54:	pop	{fp, pc}

00015a58 <table_get_char@@Base>:
   15a58:	push	{fp, lr}
   15a5c:	mov	fp, sp
   15a60:	bl	16bf4 <table_get_cell_ptr@@Base>
   15a64:	ldr	r0, [r0]
   15a68:	ldrb	r0, [r0]
   15a6c:	pop	{fp, pc}

00015a70 <table_get_uchar@@Base>:
   15a70:	push	{fp, lr}
   15a74:	mov	fp, sp
   15a78:	bl	16bf4 <table_get_cell_ptr@@Base>
   15a7c:	ldr	r0, [r0]
   15a80:	ldrb	r0, [r0]
   15a84:	pop	{fp, pc}

00015a88 <table_get_string@@Base>:
   15a88:	push	{fp, lr}
   15a8c:	mov	fp, sp
   15a90:	bl	16bf4 <table_get_cell_ptr@@Base>
   15a94:	ldr	r0, [r0]
   15a98:	pop	{fp, pc}

00015a9c <table_get_ptr@@Base>:
   15a9c:	push	{fp, lr}
   15aa0:	mov	fp, sp
   15aa4:	bl	16bf4 <table_get_cell_ptr@@Base>
   15aa8:	ldr	r0, [r0]
   15aac:	pop	{fp, pc}

00015ab0 <table_row_init@@Base>:
   15ab0:	push	{r4, r5, fp, lr}
   15ab4:	add	fp, sp, #8
   15ab8:	mov	r4, r1
   15abc:	ldr	r1, [r0, #12]
   15ac0:	ldr	r5, [r0, #16]
   15ac4:	lsl	r0, r1, #2
   15ac8:	bl	12fb4 <malloc@plt>
   15acc:	str	r0, [r5, r4, lsl #2]
   15ad0:	pop	{r4, r5, fp, pc}

00015ad4 <table_get_row_ptr@@Base>:
   15ad4:	ldr	r0, [r0, #16]
   15ad8:	add	r0, r0, r1, lsl #2
   15adc:	bx	lr

00015ae0 <table_row_destroy@@Base>:
   15ae0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15ae4:	add	fp, sp, #24
   15ae8:	mov	r4, r1
   15aec:	mov	r5, r0
   15af0:	bl	13d50 <table_get_column_length@@Base>
   15af4:	ldr	r8, [r5, #16]
   15af8:	cmp	r0, #1
   15afc:	blt	15b24 <table_row_destroy@@Base+0x44>
   15b00:	mov	r6, r0
   15b04:	mov	r7, #0
   15b08:	mov	r0, r5
   15b0c:	mov	r1, r4
   15b10:	mov	r2, r7
   15b14:	bl	16c10 <table_cell_destroy@@Base>
   15b18:	add	r7, r7, #1
   15b1c:	cmp	r6, r7
   15b20:	bne	15b08 <table_row_destroy@@Base+0x28>
   15b24:	ldr	r0, [r8, r4, lsl #2]
   15b28:	cmp	r0, #0
   15b2c:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   15b30:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   15b34:	b	12f90 <free@plt>

00015b38 <table_get_row_length@@Base>:
   15b38:	ldr	r0, [r0, #20]
   15b3c:	bx	lr

00015b40 <table_add_row@@Base>:
   15b40:	push	{r4, r5, r6, r7, fp, lr}
   15b44:	add	fp, sp, #16
   15b48:	ldr	r5, [r0, #20]
   15b4c:	ldr	r1, [r0, #24]
   15b50:	mov	r4, r0
   15b54:	udiv	r0, r5, r1
   15b58:	mls	r0, r0, r1, r5
   15b5c:	cmp	r0, #0
   15b60:	bne	15b84 <table_add_row@@Base+0x44>
   15b64:	ldr	r2, [r4, #28]
   15b68:	ldr	r0, [r4, #16]
   15b6c:	add	r1, r2, r1
   15b70:	str	r1, [r4, #28]
   15b74:	lsl	r1, r1, #2
   15b78:	bl	12f9c <realloc@plt>
   15b7c:	str	r0, [r4, #16]
   15b80:	ldr	r5, [r4, #20]
   15b84:	mov	r0, r4
   15b88:	bl	13d50 <table_get_column_length@@Base>
   15b8c:	mov	r6, r0
   15b90:	ldr	r0, [r4, #12]
   15b94:	ldr	r7, [r4, #16]
   15b98:	lsl	r0, r0, #2
   15b9c:	bl	12fb4 <malloc@plt>
   15ba0:	cmp	r6, #1
   15ba4:	str	r0, [r7, r5, lsl #2]
   15ba8:	blt	15bcc <table_add_row@@Base+0x8c>
   15bac:	mov	r7, #0
   15bb0:	mov	r0, r4
   15bb4:	mov	r1, r5
   15bb8:	mov	r2, r7
   15bbc:	bl	16bd4 <table_cell_init@@Base>
   15bc0:	add	r7, r7, #1
   15bc4:	cmp	r6, r7
   15bc8:	bne	15bb0 <table_add_row@@Base+0x70>
   15bcc:	ldr	r1, [r4, #20]
   15bd0:	mov	r0, r4
   15bd4:	mvn	r2, #0
   15bd8:	mov	r3, #2
   15bdc:	bl	13c5c <table_notify@@Base>
   15be0:	ldr	r0, [r4, #20]
   15be4:	add	r1, r0, #1
   15be8:	str	r1, [r4, #20]
   15bec:	pop	{r4, r5, r6, r7, fp, pc}

00015bf0 <table_remove_row@@Base>:
   15bf0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15bf4:	add	fp, sp, #24
   15bf8:	ldr	r8, [r0, #20]
   15bfc:	mov	r4, r1
   15c00:	mov	r5, r0
   15c04:	bl	13d50 <table_get_column_length@@Base>
   15c08:	cmp	r0, #1
   15c0c:	blt	15c58 <table_remove_row@@Base+0x68>
   15c10:	mov	r6, r0
   15c14:	mov	r7, #0
   15c18:	mov	r0, r5
   15c1c:	mov	r1, r7
   15c20:	bl	13dc4 <table_get_column_data_type@@Base>
   15c24:	cmp	r0, #23
   15c28:	beq	15c4c <table_remove_row@@Base+0x5c>
   15c2c:	mov	r0, r5
   15c30:	mov	r1, r4
   15c34:	mov	r2, r7
   15c38:	bl	16bf4 <table_get_cell_ptr@@Base>
   15c3c:	ldr	r0, [r0]
   15c40:	cmp	r0, #0
   15c44:	beq	15c4c <table_remove_row@@Base+0x5c>
   15c48:	bl	12f90 <free@plt>
   15c4c:	add	r7, r7, #1
   15c50:	cmp	r6, r7
   15c54:	bne	15c18 <table_remove_row@@Base+0x28>
   15c58:	ldr	r0, [r5, #16]
   15c5c:	ldr	r0, [r0, r4, lsl #2]
   15c60:	cmp	r0, #0
   15c64:	beq	15c6c <table_remove_row@@Base+0x7c>
   15c68:	bl	12f90 <free@plt>
   15c6c:	sub	r0, r8, #1
   15c70:	cmp	r0, r4
   15c74:	ble	15c98 <table_remove_row@@Base+0xa8>
   15c78:	mov	r1, r4
   15c7c:	ldr	r2, [r5, #16]
   15c80:	add	r3, r2, r1, lsl #2
   15c84:	ldr	r3, [r3, #4]
   15c88:	str	r3, [r2, r1, lsl #2]
   15c8c:	add	r1, r1, #1
   15c90:	cmp	r0, r1
   15c94:	bne	15c7c <table_remove_row@@Base+0x8c>
   15c98:	ldr	r0, [r5, #20]
   15c9c:	ldr	r1, [r5, #24]
   15ca0:	sub	r0, r0, #1
   15ca4:	udiv	r2, r0, r1
   15ca8:	str	r0, [r5, #20]
   15cac:	mls	r0, r2, r1, r0
   15cb0:	cmp	r0, #0
   15cb4:	bne	15cd4 <table_remove_row@@Base+0xe4>
   15cb8:	ldr	r2, [r5, #28]
   15cbc:	ldr	r0, [r5, #16]
   15cc0:	sub	r1, r2, r1
   15cc4:	str	r1, [r5, #28]
   15cc8:	lsl	r1, r1, #2
   15ccc:	bl	12f9c <realloc@plt>
   15cd0:	str	r0, [r5, #16]
   15cd4:	mov	r0, r5
   15cd8:	mov	r1, r4
   15cdc:	mvn	r2, #0
   15ce0:	mov	r3, #4
   15ce4:	bl	13c5c <table_notify@@Base>
   15ce8:	mov	r0, #0
   15cec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00015cf0 <table_set_row_ptr@@Base>:
   15cf0:	ldr	r2, [r2]
   15cf4:	ldr	r0, [r0, #16]
   15cf8:	str	r2, [r0, r1, lsl #2]
   15cfc:	bx	lr

00015d00 <table_set@@Base>:
   15d00:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15d04:	add	fp, sp, #24
   15d08:	mov	r8, r3
   15d0c:	mov	r4, r2
   15d10:	mov	r9, r1
   15d14:	mov	r6, r0
   15d18:	bl	16bf4 <table_get_cell_ptr@@Base>
   15d1c:	mov	r5, r0
   15d20:	mov	r0, r6
   15d24:	mov	r1, r4
   15d28:	bl	13d28 <table_get_col_ptr@@Base>
   15d2c:	ldr	r1, [fp, #8]
   15d30:	mvn	r7, #0
   15d34:	cmp	r1, #23
   15d38:	bhi	16000 <table_set@@Base+0x300>
   15d3c:	add	r2, pc, #4
   15d40:	ldr	r1, [r2, r1, lsl #2]
   15d44:	add	pc, r2, r1
   15d48:	andeq	r0, r0, r0, rrx
   15d4c:	andeq	r0, r0, r0, ror r0
   15d50:	andeq	r0, r0, r0, lsl #1
   15d54:	muleq	r0, r0, r0
   15d58:	andeq	r0, r0, r0, lsr #1
   15d5c:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   15d60:	andeq	r0, r0, r0, asr #1
   15d64:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   15d68:	andeq	r0, r0, r0, ror #1
   15d6c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   15d70:	andeq	r0, r0, r0, lsl #2
   15d74:	andeq	r0, r0, r0, lsl r1
   15d78:	andeq	r0, r0, r8, asr #2
   15d7c:	andeq	r0, r0, r8, asr r1
   15d80:	andeq	r0, r0, r8, ror #2
   15d84:	andeq	r0, r0, r8, ror r1
   15d88:	andeq	r0, r0, r8, lsl #3
   15d8c:	andeq	r0, r0, r0, asr #3
   15d90:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   15d94:	andeq	r0, r0, r0, lsl r2
   15d98:	andeq	r0, r0, r0, lsr #4
   15d9c:	andeq	r0, r0, r0, lsr r2
   15da0:	andeq	r0, r0, ip, ror #4
   15da4:	andeq	r0, r0, r0, asr #5
   15da8:	ldr	r0, [r0, #4]
   15dac:	cmp	r0, #0
   15db0:	bne	16000 <table_set@@Base+0x300>
   15db4:	b	15edc <table_set@@Base+0x1dc>
   15db8:	ldr	r0, [r0, #4]
   15dbc:	cmp	r0, #1
   15dc0:	beq	15edc <table_set@@Base+0x1dc>
   15dc4:	b	16000 <table_set@@Base+0x300>
   15dc8:	ldr	r0, [r0, #4]
   15dcc:	cmp	r0, #2
   15dd0:	beq	15fc0 <table_set@@Base+0x2c0>
   15dd4:	b	16000 <table_set@@Base+0x300>
   15dd8:	ldr	r0, [r0, #4]
   15ddc:	cmp	r0, #3
   15de0:	beq	15fc0 <table_set@@Base+0x2c0>
   15de4:	b	16000 <table_set@@Base+0x300>
   15de8:	ldr	r0, [r0, #4]
   15dec:	cmp	r0, #4
   15df0:	beq	15e64 <table_set@@Base+0x164>
   15df4:	b	16000 <table_set@@Base+0x300>
   15df8:	ldr	r0, [r0, #4]
   15dfc:	cmp	r0, #5
   15e00:	beq	15e64 <table_set@@Base+0x164>
   15e04:	b	16000 <table_set@@Base+0x300>
   15e08:	ldr	r0, [r0, #4]
   15e0c:	cmp	r0, #6
   15e10:	beq	15edc <table_set@@Base+0x1dc>
   15e14:	b	16000 <table_set@@Base+0x300>
   15e18:	ldr	r0, [r0, #4]
   15e1c:	cmp	r0, #7
   15e20:	beq	15edc <table_set@@Base+0x1dc>
   15e24:	b	16000 <table_set@@Base+0x300>
   15e28:	ldr	r0, [r0, #4]
   15e2c:	cmp	r0, #8
   15e30:	beq	15f24 <table_set@@Base+0x224>
   15e34:	b	16000 <table_set@@Base+0x300>
   15e38:	ldr	r0, [r0, #4]
   15e3c:	cmp	r0, #9
   15e40:	beq	15f24 <table_set@@Base+0x224>
   15e44:	b	16000 <table_set@@Base+0x300>
   15e48:	ldr	r0, [r0, #4]
   15e4c:	cmp	r0, #10
   15e50:	beq	15e64 <table_set@@Base+0x164>
   15e54:	b	16000 <table_set@@Base+0x300>
   15e58:	ldr	r0, [r0, #4]
   15e5c:	cmp	r0, #11
   15e60:	bne	16000 <table_set@@Base+0x300>
   15e64:	ldr	r0, [r5]
   15e68:	cmp	r0, #0
   15e6c:	bne	15e84 <table_set@@Base+0x184>
   15e70:	mov	r0, #2
   15e74:	bl	12fb4 <malloc@plt>
   15e78:	cmp	r0, #0
   15e7c:	str	r0, [r5]
   15e80:	beq	16000 <table_set@@Base+0x300>
   15e84:	ldrh	r1, [r8]
   15e88:	strh	r1, [r0]
   15e8c:	b	15fe8 <table_set@@Base+0x2e8>
   15e90:	ldr	r0, [r0, #4]
   15e94:	cmp	r0, #12
   15e98:	beq	15edc <table_set@@Base+0x1dc>
   15e9c:	b	16000 <table_set@@Base+0x300>
   15ea0:	ldr	r0, [r0, #4]
   15ea4:	cmp	r0, #13
   15ea8:	beq	15edc <table_set@@Base+0x1dc>
   15eac:	b	16000 <table_set@@Base+0x300>
   15eb0:	ldr	r0, [r0, #4]
   15eb4:	cmp	r0, #14
   15eb8:	beq	15f24 <table_set@@Base+0x224>
   15ebc:	b	16000 <table_set@@Base+0x300>
   15ec0:	ldr	r0, [r0, #4]
   15ec4:	cmp	r0, #15
   15ec8:	beq	15f24 <table_set@@Base+0x224>
   15ecc:	b	16000 <table_set@@Base+0x300>
   15ed0:	ldr	r0, [r0, #4]
   15ed4:	cmp	r0, #16
   15ed8:	bne	16000 <table_set@@Base+0x300>
   15edc:	ldr	r0, [r5]
   15ee0:	cmp	r0, #0
   15ee4:	bne	15efc <table_set@@Base+0x1fc>
   15ee8:	mov	r0, #4
   15eec:	bl	12fb4 <malloc@plt>
   15ef0:	cmp	r0, #0
   15ef4:	str	r0, [r5]
   15ef8:	beq	16000 <table_set@@Base+0x300>
   15efc:	ldr	r1, [r8]
   15f00:	str	r1, [r0]
   15f04:	b	15fe8 <table_set@@Base+0x2e8>
   15f08:	ldr	r0, [r0, #4]
   15f0c:	cmp	r0, #17
   15f10:	beq	15f24 <table_set@@Base+0x224>
   15f14:	b	16000 <table_set@@Base+0x300>
   15f18:	ldr	r0, [r0, #4]
   15f1c:	cmp	r0, #18
   15f20:	bne	16000 <table_set@@Base+0x300>
   15f24:	ldr	r0, [r5]
   15f28:	cmp	r0, #0
   15f2c:	bne	15f44 <table_set@@Base+0x244>
   15f30:	mov	r0, #8
   15f34:	bl	12fb4 <malloc@plt>
   15f38:	cmp	r0, #0
   15f3c:	str	r0, [r5]
   15f40:	beq	16000 <table_set@@Base+0x300>
   15f44:	ldr	r1, [r8]
   15f48:	ldr	r2, [r8, #4]
   15f4c:	str	r2, [r0, #4]
   15f50:	str	r1, [r0]
   15f54:	b	15fe8 <table_set@@Base+0x2e8>
   15f58:	ldr	r0, [r0, #4]
   15f5c:	cmp	r0, #19
   15f60:	beq	15fc0 <table_set@@Base+0x2c0>
   15f64:	b	16000 <table_set@@Base+0x300>
   15f68:	ldr	r0, [r0, #4]
   15f6c:	cmp	r0, #20
   15f70:	beq	15fc0 <table_set@@Base+0x2c0>
   15f74:	b	16000 <table_set@@Base+0x300>
   15f78:	ldr	r0, [r0, #4]
   15f7c:	cmp	r0, #21
   15f80:	bne	16000 <table_set@@Base+0x300>
   15f84:	mov	r0, r8
   15f88:	bl	12fd8 <strlen@plt>
   15f8c:	ldr	r2, [r5]
   15f90:	add	r1, r0, #1
   15f94:	mov	r0, r2
   15f98:	bl	12f9c <realloc@plt>
   15f9c:	cmp	r0, #0
   15fa0:	str	r0, [r5]
   15fa4:	beq	16000 <table_set@@Base+0x300>
   15fa8:	mov	r1, r8
   15fac:	bl	12fa8 <strcpy@plt>
   15fb0:	b	15fe8 <table_set@@Base+0x2e8>
   15fb4:	ldr	r0, [r0, #4]
   15fb8:	cmp	r0, #22
   15fbc:	bne	16000 <table_set@@Base+0x300>
   15fc0:	ldr	r0, [r5]
   15fc4:	cmp	r0, #0
   15fc8:	bne	15fe0 <table_set@@Base+0x2e0>
   15fcc:	mov	r0, #1
   15fd0:	bl	12fb4 <malloc@plt>
   15fd4:	cmp	r0, #0
   15fd8:	str	r0, [r5]
   15fdc:	beq	16000 <table_set@@Base+0x300>
   15fe0:	ldrb	r1, [r8]
   15fe4:	strb	r1, [r0]
   15fe8:	mov	r0, r6
   15fec:	mov	r1, r9
   15ff0:	mov	r2, r4
   15ff4:	mov	r3, #1
   15ff8:	bl	13c5c <table_notify@@Base>
   15ffc:	mov	r7, #0
   16000:	mov	r0, r7
   16004:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16008:	ldr	r0, [r0, #4]
   1600c:	cmp	r0, #23
   16010:	bne	16000 <table_set@@Base+0x300>
   16014:	str	r8, [r5]
   16018:	b	15fe8 <table_set@@Base+0x2e8>

0001601c <table_set_bool@@Base>:
   1601c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16020:	add	fp, sp, #24
   16024:	mov	r8, r3
   16028:	mov	r4, r2
   1602c:	mov	r9, r1
   16030:	mov	r6, r0
   16034:	bl	16bf4 <table_get_cell_ptr@@Base>
   16038:	mov	r5, r0
   1603c:	mov	r0, r6
   16040:	mov	r1, r4
   16044:	bl	13d28 <table_get_col_ptr@@Base>
   16048:	ldr	r0, [r0, #4]
   1604c:	mvn	r7, #0
   16050:	cmp	r0, #22
   16054:	bne	16094 <table_set_bool@@Base+0x78>
   16058:	ldr	r0, [r5]
   1605c:	cmp	r0, #0
   16060:	bne	16078 <table_set_bool@@Base+0x5c>
   16064:	mov	r0, #1
   16068:	bl	12fb4 <malloc@plt>
   1606c:	cmp	r0, #0
   16070:	str	r0, [r5]
   16074:	beq	16094 <table_set_bool@@Base+0x78>
   16078:	strb	r8, [r0]
   1607c:	mov	r0, r6
   16080:	mov	r1, r9
   16084:	mov	r2, r4
   16088:	mov	r3, #1
   1608c:	bl	13c5c <table_notify@@Base>
   16090:	mov	r7, #0
   16094:	mov	r0, r7
   16098:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001609c <table_set_int@@Base>:
   1609c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   160a0:	add	fp, sp, #24
   160a4:	mov	r8, r3
   160a8:	mov	r4, r2
   160ac:	mov	r5, r1
   160b0:	mov	r6, r0
   160b4:	bl	16bf4 <table_get_cell_ptr@@Base>
   160b8:	mov	r9, r0
   160bc:	mov	r0, r6
   160c0:	mov	r1, r4
   160c4:	bl	13d28 <table_get_col_ptr@@Base>
   160c8:	ldr	r0, [r0, #4]
   160cc:	mvn	r7, #0
   160d0:	cmp	r0, #0
   160d4:	bne	16114 <table_set_int@@Base+0x78>
   160d8:	ldr	r0, [r9]
   160dc:	cmp	r0, #0
   160e0:	bne	160f8 <table_set_int@@Base+0x5c>
   160e4:	mov	r0, #4
   160e8:	bl	12fb4 <malloc@plt>
   160ec:	cmp	r0, #0
   160f0:	str	r0, [r9]
   160f4:	beq	16114 <table_set_int@@Base+0x78>
   160f8:	str	r8, [r0]
   160fc:	mov	r0, r6
   16100:	mov	r1, r5
   16104:	mov	r2, r4
   16108:	mov	r3, #1
   1610c:	bl	13c5c <table_notify@@Base>
   16110:	mov	r7, #0
   16114:	mov	r0, r7
   16118:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001611c <table_set_uint@@Base>:
   1611c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16120:	add	fp, sp, #24
   16124:	mov	r8, r3
   16128:	mov	r4, r2
   1612c:	mov	r5, r1
   16130:	mov	r6, r0
   16134:	bl	16bf4 <table_get_cell_ptr@@Base>
   16138:	mov	r9, r0
   1613c:	mov	r0, r6
   16140:	mov	r1, r4
   16144:	bl	13d28 <table_get_col_ptr@@Base>
   16148:	ldr	r0, [r0, #4]
   1614c:	mvn	r7, #0
   16150:	cmp	r0, #1
   16154:	bne	16194 <table_set_uint@@Base+0x78>
   16158:	ldr	r0, [r9]
   1615c:	cmp	r0, #0
   16160:	bne	16178 <table_set_uint@@Base+0x5c>
   16164:	mov	r0, #4
   16168:	bl	12fb4 <malloc@plt>
   1616c:	cmp	r0, #0
   16170:	str	r0, [r9]
   16174:	beq	16194 <table_set_uint@@Base+0x78>
   16178:	str	r8, [r0]
   1617c:	mov	r0, r6
   16180:	mov	r1, r5
   16184:	mov	r2, r4
   16188:	mov	r3, #1
   1618c:	bl	13c5c <table_notify@@Base>
   16190:	mov	r7, #0
   16194:	mov	r0, r7
   16198:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001619c <table_set_int8@@Base>:
   1619c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   161a0:	add	fp, sp, #24
   161a4:	mov	r8, r3
   161a8:	mov	r4, r2
   161ac:	mov	r9, r1
   161b0:	mov	r6, r0
   161b4:	bl	16bf4 <table_get_cell_ptr@@Base>
   161b8:	mov	r5, r0
   161bc:	mov	r0, r6
   161c0:	mov	r1, r4
   161c4:	bl	13d28 <table_get_col_ptr@@Base>
   161c8:	ldr	r0, [r0, #4]
   161cc:	mvn	r7, #0
   161d0:	cmp	r0, #2
   161d4:	bne	16214 <table_set_int8@@Base+0x78>
   161d8:	ldr	r0, [r5]
   161dc:	cmp	r0, #0
   161e0:	bne	161f8 <table_set_int8@@Base+0x5c>
   161e4:	mov	r0, #1
   161e8:	bl	12fb4 <malloc@plt>
   161ec:	cmp	r0, #0
   161f0:	str	r0, [r5]
   161f4:	beq	16214 <table_set_int8@@Base+0x78>
   161f8:	strb	r8, [r0]
   161fc:	mov	r0, r6
   16200:	mov	r1, r9
   16204:	mov	r2, r4
   16208:	mov	r3, #1
   1620c:	bl	13c5c <table_notify@@Base>
   16210:	mov	r7, #0
   16214:	mov	r0, r7
   16218:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001621c <table_set_uint8@@Base>:
   1621c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16220:	add	fp, sp, #24
   16224:	mov	r8, r3
   16228:	mov	r4, r2
   1622c:	mov	r9, r1
   16230:	mov	r6, r0
   16234:	bl	16bf4 <table_get_cell_ptr@@Base>
   16238:	mov	r5, r0
   1623c:	mov	r0, r6
   16240:	mov	r1, r4
   16244:	bl	13d28 <table_get_col_ptr@@Base>
   16248:	ldr	r0, [r0, #4]
   1624c:	mvn	r7, #0
   16250:	cmp	r0, #3
   16254:	bne	16294 <table_set_uint8@@Base+0x78>
   16258:	ldr	r0, [r5]
   1625c:	cmp	r0, #0
   16260:	bne	16278 <table_set_uint8@@Base+0x5c>
   16264:	mov	r0, #1
   16268:	bl	12fb4 <malloc@plt>
   1626c:	cmp	r0, #0
   16270:	str	r0, [r5]
   16274:	beq	16294 <table_set_uint8@@Base+0x78>
   16278:	strb	r8, [r0]
   1627c:	mov	r0, r6
   16280:	mov	r1, r9
   16284:	mov	r2, r4
   16288:	mov	r3, #1
   1628c:	bl	13c5c <table_notify@@Base>
   16290:	mov	r7, #0
   16294:	mov	r0, r7
   16298:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001629c <table_set_int16@@Base>:
   1629c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   162a0:	add	fp, sp, #24
   162a4:	mov	r8, r3
   162a8:	mov	r4, r2
   162ac:	mov	r9, r1
   162b0:	mov	r6, r0
   162b4:	bl	16bf4 <table_get_cell_ptr@@Base>
   162b8:	mov	r5, r0
   162bc:	mov	r0, r6
   162c0:	mov	r1, r4
   162c4:	bl	13d28 <table_get_col_ptr@@Base>
   162c8:	ldr	r0, [r0, #4]
   162cc:	mvn	r7, #0
   162d0:	cmp	r0, #4
   162d4:	bne	16314 <table_set_int16@@Base+0x78>
   162d8:	ldr	r0, [r5]
   162dc:	cmp	r0, #0
   162e0:	bne	162f8 <table_set_int16@@Base+0x5c>
   162e4:	mov	r0, #2
   162e8:	bl	12fb4 <malloc@plt>
   162ec:	cmp	r0, #0
   162f0:	str	r0, [r5]
   162f4:	beq	16314 <table_set_int16@@Base+0x78>
   162f8:	strh	r8, [r0]
   162fc:	mov	r0, r6
   16300:	mov	r1, r9
   16304:	mov	r2, r4
   16308:	mov	r3, #1
   1630c:	bl	13c5c <table_notify@@Base>
   16310:	mov	r7, #0
   16314:	mov	r0, r7
   16318:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001631c <table_set_uint16@@Base>:
   1631c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16320:	add	fp, sp, #24
   16324:	mov	r8, r3
   16328:	mov	r4, r2
   1632c:	mov	r9, r1
   16330:	mov	r6, r0
   16334:	bl	16bf4 <table_get_cell_ptr@@Base>
   16338:	mov	r5, r0
   1633c:	mov	r0, r6
   16340:	mov	r1, r4
   16344:	bl	13d28 <table_get_col_ptr@@Base>
   16348:	ldr	r0, [r0, #4]
   1634c:	mvn	r7, #0
   16350:	cmp	r0, #5
   16354:	bne	16394 <table_set_uint16@@Base+0x78>
   16358:	ldr	r0, [r5]
   1635c:	cmp	r0, #0
   16360:	bne	16378 <table_set_uint16@@Base+0x5c>
   16364:	mov	r0, #2
   16368:	bl	12fb4 <malloc@plt>
   1636c:	cmp	r0, #0
   16370:	str	r0, [r5]
   16374:	beq	16394 <table_set_uint16@@Base+0x78>
   16378:	strh	r8, [r0]
   1637c:	mov	r0, r6
   16380:	mov	r1, r9
   16384:	mov	r2, r4
   16388:	mov	r3, #1
   1638c:	bl	13c5c <table_notify@@Base>
   16390:	mov	r7, #0
   16394:	mov	r0, r7
   16398:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001639c <table_set_int32@@Base>:
   1639c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   163a0:	add	fp, sp, #24
   163a4:	mov	r8, r3
   163a8:	mov	r4, r2
   163ac:	mov	r5, r1
   163b0:	mov	r6, r0
   163b4:	bl	16bf4 <table_get_cell_ptr@@Base>
   163b8:	mov	r9, r0
   163bc:	mov	r0, r6
   163c0:	mov	r1, r4
   163c4:	bl	13d28 <table_get_col_ptr@@Base>
   163c8:	ldr	r0, [r0, #4]
   163cc:	mvn	r7, #0
   163d0:	cmp	r0, #6
   163d4:	bne	16414 <table_set_int32@@Base+0x78>
   163d8:	ldr	r0, [r9]
   163dc:	cmp	r0, #0
   163e0:	bne	163f8 <table_set_int32@@Base+0x5c>
   163e4:	mov	r0, #4
   163e8:	bl	12fb4 <malloc@plt>
   163ec:	cmp	r0, #0
   163f0:	str	r0, [r9]
   163f4:	beq	16414 <table_set_int32@@Base+0x78>
   163f8:	str	r8, [r0]
   163fc:	mov	r0, r6
   16400:	mov	r1, r5
   16404:	mov	r2, r4
   16408:	mov	r3, #1
   1640c:	bl	13c5c <table_notify@@Base>
   16410:	mov	r7, #0
   16414:	mov	r0, r7
   16418:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001641c <table_set_uint32@@Base>:
   1641c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16420:	add	fp, sp, #24
   16424:	mov	r8, r3
   16428:	mov	r4, r2
   1642c:	mov	r5, r1
   16430:	mov	r6, r0
   16434:	bl	16bf4 <table_get_cell_ptr@@Base>
   16438:	mov	r9, r0
   1643c:	mov	r0, r6
   16440:	mov	r1, r4
   16444:	bl	13d28 <table_get_col_ptr@@Base>
   16448:	ldr	r0, [r0, #4]
   1644c:	mvn	r7, #0
   16450:	cmp	r0, #7
   16454:	bne	16494 <table_set_uint32@@Base+0x78>
   16458:	ldr	r0, [r9]
   1645c:	cmp	r0, #0
   16460:	bne	16478 <table_set_uint32@@Base+0x5c>
   16464:	mov	r0, #4
   16468:	bl	12fb4 <malloc@plt>
   1646c:	cmp	r0, #0
   16470:	str	r0, [r9]
   16474:	beq	16494 <table_set_uint32@@Base+0x78>
   16478:	str	r8, [r0]
   1647c:	mov	r0, r6
   16480:	mov	r1, r5
   16484:	mov	r2, r4
   16488:	mov	r3, #1
   1648c:	bl	13c5c <table_notify@@Base>
   16490:	mov	r7, #0
   16494:	mov	r0, r7
   16498:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001649c <table_set_int64@@Base>:
   1649c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   164a0:	add	fp, sp, #24
   164a4:	mov	r4, r2
   164a8:	mov	r8, r1
   164ac:	mov	r6, r0
   164b0:	bl	16bf4 <table_get_cell_ptr@@Base>
   164b4:	mov	r5, r0
   164b8:	mov	r0, r6
   164bc:	mov	r1, r4
   164c0:	bl	13d28 <table_get_col_ptr@@Base>
   164c4:	ldr	r0, [r0, #4]
   164c8:	mvn	r7, #0
   164cc:	cmp	r0, #8
   164d0:	bne	1651c <table_set_int64@@Base+0x80>
   164d4:	ldr	r0, [r5]
   164d8:	cmp	r0, #0
   164dc:	bne	164f4 <table_set_int64@@Base+0x58>
   164e0:	mov	r0, #8
   164e4:	bl	12fb4 <malloc@plt>
   164e8:	cmp	r0, #0
   164ec:	str	r0, [r5]
   164f0:	beq	1651c <table_set_int64@@Base+0x80>
   164f4:	ldr	r1, [fp, #12]
   164f8:	ldr	r2, [fp, #8]
   164fc:	mov	r3, #1
   16500:	str	r2, [r0]
   16504:	str	r1, [r0, #4]
   16508:	mov	r0, r6
   1650c:	mov	r1, r8
   16510:	mov	r2, r4
   16514:	bl	13c5c <table_notify@@Base>
   16518:	mov	r7, #0
   1651c:	mov	r0, r7
   16520:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00016524 <table_set_uint64@@Base>:
   16524:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16528:	add	fp, sp, #24
   1652c:	mov	r4, r2
   16530:	mov	r8, r1
   16534:	mov	r6, r0
   16538:	bl	16bf4 <table_get_cell_ptr@@Base>
   1653c:	mov	r5, r0
   16540:	mov	r0, r6
   16544:	mov	r1, r4
   16548:	bl	13d28 <table_get_col_ptr@@Base>
   1654c:	ldr	r0, [r0, #4]
   16550:	mvn	r7, #0
   16554:	cmp	r0, #9
   16558:	bne	165a4 <table_set_uint64@@Base+0x80>
   1655c:	ldr	r0, [r5]
   16560:	cmp	r0, #0
   16564:	bne	1657c <table_set_uint64@@Base+0x58>
   16568:	mov	r0, #8
   1656c:	bl	12fb4 <malloc@plt>
   16570:	cmp	r0, #0
   16574:	str	r0, [r5]
   16578:	beq	165a4 <table_set_uint64@@Base+0x80>
   1657c:	ldr	r1, [fp, #12]
   16580:	ldr	r2, [fp, #8]
   16584:	mov	r3, #1
   16588:	str	r2, [r0]
   1658c:	str	r1, [r0, #4]
   16590:	mov	r0, r6
   16594:	mov	r1, r8
   16598:	mov	r2, r4
   1659c:	bl	13c5c <table_notify@@Base>
   165a0:	mov	r7, #0
   165a4:	mov	r0, r7
   165a8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000165ac <table_set_short@@Base>:
   165ac:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   165b0:	add	fp, sp, #24
   165b4:	mov	r8, r3
   165b8:	mov	r4, r2
   165bc:	mov	r9, r1
   165c0:	mov	r6, r0
   165c4:	bl	16bf4 <table_get_cell_ptr@@Base>
   165c8:	mov	r5, r0
   165cc:	mov	r0, r6
   165d0:	mov	r1, r4
   165d4:	bl	13d28 <table_get_col_ptr@@Base>
   165d8:	ldr	r0, [r0, #4]
   165dc:	mvn	r7, #0
   165e0:	cmp	r0, #10
   165e4:	bne	16624 <table_set_short@@Base+0x78>
   165e8:	ldr	r0, [r5]
   165ec:	cmp	r0, #0
   165f0:	bne	16608 <table_set_short@@Base+0x5c>
   165f4:	mov	r0, #2
   165f8:	bl	12fb4 <malloc@plt>
   165fc:	cmp	r0, #0
   16600:	str	r0, [r5]
   16604:	beq	16624 <table_set_short@@Base+0x78>
   16608:	strh	r8, [r0]
   1660c:	mov	r0, r6
   16610:	mov	r1, r9
   16614:	mov	r2, r4
   16618:	mov	r3, #1
   1661c:	bl	13c5c <table_notify@@Base>
   16620:	mov	r7, #0
   16624:	mov	r0, r7
   16628:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001662c <table_set_ushort@@Base>:
   1662c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16630:	add	fp, sp, #24
   16634:	mov	r8, r3
   16638:	mov	r4, r2
   1663c:	mov	r9, r1
   16640:	mov	r6, r0
   16644:	bl	16bf4 <table_get_cell_ptr@@Base>
   16648:	mov	r5, r0
   1664c:	mov	r0, r6
   16650:	mov	r1, r4
   16654:	bl	13d28 <table_get_col_ptr@@Base>
   16658:	ldr	r0, [r0, #4]
   1665c:	mvn	r7, #0
   16660:	cmp	r0, #11
   16664:	bne	166a4 <table_set_ushort@@Base+0x78>
   16668:	ldr	r0, [r5]
   1666c:	cmp	r0, #0
   16670:	bne	16688 <table_set_ushort@@Base+0x5c>
   16674:	mov	r0, #2
   16678:	bl	12fb4 <malloc@plt>
   1667c:	cmp	r0, #0
   16680:	str	r0, [r5]
   16684:	beq	166a4 <table_set_ushort@@Base+0x78>
   16688:	strh	r8, [r0]
   1668c:	mov	r0, r6
   16690:	mov	r1, r9
   16694:	mov	r2, r4
   16698:	mov	r3, #1
   1669c:	bl	13c5c <table_notify@@Base>
   166a0:	mov	r7, #0
   166a4:	mov	r0, r7
   166a8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000166ac <table_set_long@@Base>:
   166ac:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   166b0:	add	fp, sp, #24
   166b4:	mov	r8, r3
   166b8:	mov	r4, r2
   166bc:	mov	r5, r1
   166c0:	mov	r6, r0
   166c4:	bl	16bf4 <table_get_cell_ptr@@Base>
   166c8:	mov	r9, r0
   166cc:	mov	r0, r6
   166d0:	mov	r1, r4
   166d4:	bl	13d28 <table_get_col_ptr@@Base>
   166d8:	ldr	r0, [r0, #4]
   166dc:	mvn	r7, #0
   166e0:	cmp	r0, #12
   166e4:	bne	16724 <table_set_long@@Base+0x78>
   166e8:	ldr	r0, [r9]
   166ec:	cmp	r0, #0
   166f0:	bne	16708 <table_set_long@@Base+0x5c>
   166f4:	mov	r0, #4
   166f8:	bl	12fb4 <malloc@plt>
   166fc:	cmp	r0, #0
   16700:	str	r0, [r9]
   16704:	beq	16724 <table_set_long@@Base+0x78>
   16708:	str	r8, [r0]
   1670c:	mov	r0, r6
   16710:	mov	r1, r5
   16714:	mov	r2, r4
   16718:	mov	r3, #1
   1671c:	bl	13c5c <table_notify@@Base>
   16720:	mov	r7, #0
   16724:	mov	r0, r7
   16728:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001672c <table_set_ulong@@Base>:
   1672c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16730:	add	fp, sp, #24
   16734:	mov	r8, r3
   16738:	mov	r4, r2
   1673c:	mov	r5, r1
   16740:	mov	r6, r0
   16744:	bl	16bf4 <table_get_cell_ptr@@Base>
   16748:	mov	r9, r0
   1674c:	mov	r0, r6
   16750:	mov	r1, r4
   16754:	bl	13d28 <table_get_col_ptr@@Base>
   16758:	ldr	r0, [r0, #4]
   1675c:	mvn	r7, #0
   16760:	cmp	r0, #13
   16764:	bne	167a4 <table_set_ulong@@Base+0x78>
   16768:	ldr	r0, [r9]
   1676c:	cmp	r0, #0
   16770:	bne	16788 <table_set_ulong@@Base+0x5c>
   16774:	mov	r0, #4
   16778:	bl	12fb4 <malloc@plt>
   1677c:	cmp	r0, #0
   16780:	str	r0, [r9]
   16784:	beq	167a4 <table_set_ulong@@Base+0x78>
   16788:	str	r8, [r0]
   1678c:	mov	r0, r6
   16790:	mov	r1, r5
   16794:	mov	r2, r4
   16798:	mov	r3, #1
   1679c:	bl	13c5c <table_notify@@Base>
   167a0:	mov	r7, #0
   167a4:	mov	r0, r7
   167a8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000167ac <table_set_llong@@Base>:
   167ac:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   167b0:	add	fp, sp, #24
   167b4:	mov	r4, r2
   167b8:	mov	r8, r1
   167bc:	mov	r6, r0
   167c0:	bl	16bf4 <table_get_cell_ptr@@Base>
   167c4:	mov	r5, r0
   167c8:	mov	r0, r6
   167cc:	mov	r1, r4
   167d0:	bl	13d28 <table_get_col_ptr@@Base>
   167d4:	ldr	r0, [r0, #4]
   167d8:	mvn	r7, #0
   167dc:	cmp	r0, #14
   167e0:	bne	1682c <table_set_llong@@Base+0x80>
   167e4:	ldr	r0, [r5]
   167e8:	cmp	r0, #0
   167ec:	bne	16804 <table_set_llong@@Base+0x58>
   167f0:	mov	r0, #8
   167f4:	bl	12fb4 <malloc@plt>
   167f8:	cmp	r0, #0
   167fc:	str	r0, [r5]
   16800:	beq	1682c <table_set_llong@@Base+0x80>
   16804:	ldr	r1, [fp, #12]
   16808:	ldr	r2, [fp, #8]
   1680c:	mov	r3, #1
   16810:	str	r2, [r0]
   16814:	str	r1, [r0, #4]
   16818:	mov	r0, r6
   1681c:	mov	r1, r8
   16820:	mov	r2, r4
   16824:	bl	13c5c <table_notify@@Base>
   16828:	mov	r7, #0
   1682c:	mov	r0, r7
   16830:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00016834 <table_set_ullong@@Base>:
   16834:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16838:	add	fp, sp, #24
   1683c:	mov	r4, r2
   16840:	mov	r8, r1
   16844:	mov	r6, r0
   16848:	bl	16bf4 <table_get_cell_ptr@@Base>
   1684c:	mov	r5, r0
   16850:	mov	r0, r6
   16854:	mov	r1, r4
   16858:	bl	13d28 <table_get_col_ptr@@Base>
   1685c:	ldr	r0, [r0, #4]
   16860:	mvn	r7, #0
   16864:	cmp	r0, #15
   16868:	bne	168b4 <table_set_ullong@@Base+0x80>
   1686c:	ldr	r0, [r5]
   16870:	cmp	r0, #0
   16874:	bne	1688c <table_set_ullong@@Base+0x58>
   16878:	mov	r0, #8
   1687c:	bl	12fb4 <malloc@plt>
   16880:	cmp	r0, #0
   16884:	str	r0, [r5]
   16888:	beq	168b4 <table_set_ullong@@Base+0x80>
   1688c:	ldr	r1, [fp, #12]
   16890:	ldr	r2, [fp, #8]
   16894:	mov	r3, #1
   16898:	str	r2, [r0]
   1689c:	str	r1, [r0, #4]
   168a0:	mov	r0, r6
   168a4:	mov	r1, r8
   168a8:	mov	r2, r4
   168ac:	bl	13c5c <table_notify@@Base>
   168b0:	mov	r7, #0
   168b4:	mov	r0, r7
   168b8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000168bc <table_set_float@@Base>:
   168bc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   168c0:	add	fp, sp, #24
   168c4:	vpush	{d8}
   168c8:	vmov.f32	s16, s0
   168cc:	mov	r4, r2
   168d0:	mov	r8, r1
   168d4:	mov	r6, r0
   168d8:	bl	16bf4 <table_get_cell_ptr@@Base>
   168dc:	mov	r5, r0
   168e0:	mov	r0, r6
   168e4:	mov	r1, r4
   168e8:	bl	13d28 <table_get_col_ptr@@Base>
   168ec:	ldr	r0, [r0, #4]
   168f0:	mvn	r7, #0
   168f4:	cmp	r0, #16
   168f8:	bne	1693c <table_set_float@@Base+0x80>
   168fc:	ldr	r0, [r5]
   16900:	cmp	r0, #0
   16904:	bne	1691c <table_set_float@@Base+0x60>
   16908:	mov	r0, #4
   1690c:	bl	12fb4 <malloc@plt>
   16910:	cmp	r0, #0
   16914:	str	r0, [r5]
   16918:	beq	1693c <table_set_float@@Base+0x80>
   1691c:	vmov	r1, s16
   16920:	mov	r2, r4
   16924:	mov	r3, #1
   16928:	str	r1, [r0]
   1692c:	mov	r0, r6
   16930:	mov	r1, r8
   16934:	bl	13c5c <table_notify@@Base>
   16938:	mov	r7, #0
   1693c:	mov	r0, r7
   16940:	vpop	{d8}
   16944:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00016948 <table_set_double@@Base>:
   16948:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1694c:	add	fp, sp, #24
   16950:	vpush	{d8}
   16954:	vorr	d8, d0, d0
   16958:	mov	r4, r2
   1695c:	mov	r5, r1
   16960:	mov	r6, r0
   16964:	bl	16bf4 <table_get_cell_ptr@@Base>
   16968:	mov	r8, r0
   1696c:	mov	r0, r6
   16970:	mov	r1, r4
   16974:	bl	13d28 <table_get_col_ptr@@Base>
   16978:	ldr	r0, [r0, #4]
   1697c:	mvn	r7, #0
   16980:	cmp	r0, #17
   16984:	bne	169c4 <table_set_double@@Base+0x7c>
   16988:	ldr	r0, [r8]
   1698c:	cmp	r0, #0
   16990:	bne	169a8 <table_set_double@@Base+0x60>
   16994:	mov	r0, #8
   16998:	bl	12fb4 <malloc@plt>
   1699c:	cmp	r0, #0
   169a0:	str	r0, [r8]
   169a4:	beq	169c4 <table_set_double@@Base+0x7c>
   169a8:	vst1.8	{d8}, [r0]
   169ac:	mov	r0, r6
   169b0:	mov	r1, r5
   169b4:	mov	r2, r4
   169b8:	mov	r3, #1
   169bc:	bl	13c5c <table_notify@@Base>
   169c0:	mov	r7, #0
   169c4:	mov	r0, r7
   169c8:	vpop	{d8}
   169cc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000169d0 <table_set_ldouble@@Base>:
   169d0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   169d4:	add	fp, sp, #24
   169d8:	vpush	{d8}
   169dc:	vorr	d8, d0, d0
   169e0:	mov	r4, r2
   169e4:	mov	r5, r1
   169e8:	mov	r6, r0
   169ec:	bl	16bf4 <table_get_cell_ptr@@Base>
   169f0:	mov	r8, r0
   169f4:	mov	r0, r6
   169f8:	mov	r1, r4
   169fc:	bl	13d28 <table_get_col_ptr@@Base>
   16a00:	ldr	r0, [r0, #4]
   16a04:	mvn	r7, #0
   16a08:	cmp	r0, #18
   16a0c:	bne	16a4c <table_set_ldouble@@Base+0x7c>
   16a10:	ldr	r0, [r8]
   16a14:	cmp	r0, #0
   16a18:	bne	16a30 <table_set_ldouble@@Base+0x60>
   16a1c:	mov	r0, #8
   16a20:	bl	12fb4 <malloc@plt>
   16a24:	cmp	r0, #0
   16a28:	str	r0, [r8]
   16a2c:	beq	16a4c <table_set_ldouble@@Base+0x7c>
   16a30:	vst1.8	{d8}, [r0]
   16a34:	mov	r0, r6
   16a38:	mov	r1, r5
   16a3c:	mov	r2, r4
   16a40:	mov	r3, #1
   16a44:	bl	13c5c <table_notify@@Base>
   16a48:	mov	r7, #0
   16a4c:	mov	r0, r7
   16a50:	vpop	{d8}
   16a54:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00016a58 <table_set_string@@Base>:
   16a58:	push	{fp, lr}
   16a5c:	mov	fp, sp
   16a60:	sub	sp, sp, #8
   16a64:	mov	ip, #21
   16a68:	str	ip, [sp]
   16a6c:	bl	15d00 <table_set@@Base>
   16a70:	mov	sp, fp
   16a74:	pop	{fp, pc}

00016a78 <table_set_char@@Base>:
   16a78:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16a7c:	add	fp, sp, #24
   16a80:	mov	r8, r3
   16a84:	mov	r4, r2
   16a88:	mov	r9, r1
   16a8c:	mov	r6, r0
   16a90:	bl	16bf4 <table_get_cell_ptr@@Base>
   16a94:	mov	r5, r0
   16a98:	mov	r0, r6
   16a9c:	mov	r1, r4
   16aa0:	bl	13d28 <table_get_col_ptr@@Base>
   16aa4:	ldr	r0, [r0, #4]
   16aa8:	mvn	r7, #0
   16aac:	cmp	r0, #19
   16ab0:	bne	16af0 <table_set_char@@Base+0x78>
   16ab4:	ldr	r0, [r5]
   16ab8:	cmp	r0, #0
   16abc:	bne	16ad4 <table_set_char@@Base+0x5c>
   16ac0:	mov	r0, #1
   16ac4:	bl	12fb4 <malloc@plt>
   16ac8:	cmp	r0, #0
   16acc:	str	r0, [r5]
   16ad0:	beq	16af0 <table_set_char@@Base+0x78>
   16ad4:	strb	r8, [r0]
   16ad8:	mov	r0, r6
   16adc:	mov	r1, r9
   16ae0:	mov	r2, r4
   16ae4:	mov	r3, #1
   16ae8:	bl	13c5c <table_notify@@Base>
   16aec:	mov	r7, #0
   16af0:	mov	r0, r7
   16af4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00016af8 <table_set_uchar@@Base>:
   16af8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16afc:	add	fp, sp, #24
   16b00:	mov	r8, r3
   16b04:	mov	r4, r2
   16b08:	mov	r9, r1
   16b0c:	mov	r6, r0
   16b10:	bl	16bf4 <table_get_cell_ptr@@Base>
   16b14:	mov	r5, r0
   16b18:	mov	r0, r6
   16b1c:	mov	r1, r4
   16b20:	bl	13d28 <table_get_col_ptr@@Base>
   16b24:	ldr	r0, [r0, #4]
   16b28:	mvn	r7, #0
   16b2c:	cmp	r0, #20
   16b30:	bne	16b70 <table_set_uchar@@Base+0x78>
   16b34:	ldr	r0, [r5]
   16b38:	cmp	r0, #0
   16b3c:	bne	16b54 <table_set_uchar@@Base+0x5c>
   16b40:	mov	r0, #1
   16b44:	bl	12fb4 <malloc@plt>
   16b48:	cmp	r0, #0
   16b4c:	str	r0, [r5]
   16b50:	beq	16b70 <table_set_uchar@@Base+0x78>
   16b54:	strb	r8, [r0]
   16b58:	mov	r0, r6
   16b5c:	mov	r1, r9
   16b60:	mov	r2, r4
   16b64:	mov	r3, #1
   16b68:	bl	13c5c <table_notify@@Base>
   16b6c:	mov	r7, #0
   16b70:	mov	r0, r7
   16b74:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00016b78 <table_set_ptr@@Base>:
   16b78:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16b7c:	add	fp, sp, #24
   16b80:	mov	r8, r3
   16b84:	mov	r4, r2
   16b88:	mov	r5, r1
   16b8c:	mov	r6, r0
   16b90:	bl	16bf4 <table_get_cell_ptr@@Base>
   16b94:	mov	r7, r0
   16b98:	mov	r0, r6
   16b9c:	mov	r1, r4
   16ba0:	bl	13d28 <table_get_col_ptr@@Base>
   16ba4:	ldr	r1, [r0, #4]
   16ba8:	mvn	r0, #0
   16bac:	cmp	r1, #23
   16bb0:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   16bb4:	mov	r0, r6
   16bb8:	mov	r1, r5
   16bbc:	mov	r2, r4
   16bc0:	mov	r3, #1
   16bc4:	str	r8, [r7]
   16bc8:	bl	13c5c <table_notify@@Base>
   16bcc:	mov	r0, #0
   16bd0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00016bd4 <table_cell_init@@Base>:
   16bd4:	push	{r4, sl, fp, lr}
   16bd8:	add	fp, sp, #8
   16bdc:	mov	r4, r2
   16be0:	bl	15ad4 <table_get_row_ptr@@Base>
   16be4:	ldr	r0, [r0]
   16be8:	mov	r1, #0
   16bec:	str	r1, [r0, r4, lsl #2]
   16bf0:	pop	{r4, sl, fp, pc}

00016bf4 <table_get_cell_ptr@@Base>:
   16bf4:	push	{r4, sl, fp, lr}
   16bf8:	add	fp, sp, #8
   16bfc:	mov	r4, r2
   16c00:	bl	15ad4 <table_get_row_ptr@@Base>
   16c04:	ldr	r0, [r0]
   16c08:	add	r0, r0, r4, lsl #2
   16c0c:	pop	{r4, sl, fp, pc}

00016c10 <table_cell_destroy@@Base>:
   16c10:	push	{r4, r5, r6, sl, fp, lr}
   16c14:	add	fp, sp, #16
   16c18:	mov	r5, r1
   16c1c:	mov	r1, r2
   16c20:	mov	r4, r2
   16c24:	mov	r6, r0
   16c28:	bl	13dc4 <table_get_column_data_type@@Base>
   16c2c:	cmp	r0, #23
   16c30:	popeq	{r4, r5, r6, sl, fp, pc}
   16c34:	mov	r0, r6
   16c38:	mov	r1, r5
   16c3c:	bl	15ad4 <table_get_row_ptr@@Base>
   16c40:	ldr	r0, [r0]
   16c44:	ldr	r0, [r0, r4, lsl #2]
   16c48:	cmp	r0, #0
   16c4c:	beq	16c58 <table_cell_destroy@@Base+0x48>
   16c50:	pop	{r4, r5, r6, sl, fp, lr}
   16c54:	b	12f90 <free@plt>
   16c58:	pop	{r4, r5, r6, sl, fp, pc}

00016c5c <table_cell_to_buffer@@Base>:
   16c5c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16c60:	add	fp, sp, #24
   16c64:	sub	sp, sp, #8
   16c68:	mov	r7, r1
   16c6c:	mov	r1, r2
   16c70:	mov	r5, r3
   16c74:	mov	r6, r2
   16c78:	mov	r4, r0
   16c7c:	bl	13dc4 <table_get_column_data_type@@Base>
   16c80:	cmp	r0, #23
   16c84:	bhi	16f78 <table_cell_to_buffer@@Base+0x31c>
   16c88:	add	r1, pc, #8
   16c8c:	ldr	r8, [fp, #8]
   16c90:	ldr	r0, [r1, r0, lsl #2]
   16c94:	add	pc, r1, r0
   16c98:	andeq	r0, r0, r0, rrx
   16c9c:	andeq	r0, r0, r4, ror r0
   16ca0:	andeq	r0, r0, r8, lsl #1
   16ca4:	muleq	r0, ip, r0
   16ca8:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   16cac:	andeq	r0, r0, r4, asr #1
   16cb0:	ldrdeq	r0, [r0], -r8
   16cb4:	andeq	r0, r0, ip, ror #1
   16cb8:	andeq	r0, r0, ip, lsl #2
   16cbc:	andeq	r0, r0, r0, lsr #2
   16cc0:	andeq	r0, r0, r4, lsr r1
   16cc4:	andeq	r0, r0, r4, asr r1
   16cc8:	andeq	r0, r0, r4, ror r1
   16ccc:	muleq	r0, r4, r1
   16cd0:			; <UNDEFINED> instruction: 0x000001b4
   16cd4:	ldrdeq	r0, [r0], -r4
   16cd8:	strdeq	r0, [r0], -r4
   16cdc:	andeq	r0, r0, r8, lsl r2
   16ce0:	andeq	r0, r0, r8, lsr r2
   16ce4:	andeq	r0, r0, r4, ror #4
   16ce8:	andeq	r0, r0, r8, ror r2
   16cec:	muleq	r0, r8, r2
   16cf0:			; <UNDEFINED> instruction: 0x000002b8
   16cf4:	andeq	r0, r0, ip, ror #5
   16cf8:	mov	r0, r4
   16cfc:	mov	r1, r7
   16d00:	mov	r2, r6
   16d04:	bl	15890 <table_get_int@@Base>
   16d08:	b	16f60 <table_cell_to_buffer@@Base+0x304>
   16d0c:	mov	r0, r4
   16d10:	mov	r1, r7
   16d14:	mov	r2, r6
   16d18:	bl	158a8 <table_get_uint@@Base>
   16d1c:	b	16d94 <table_cell_to_buffer@@Base+0x138>
   16d20:	mov	r0, r4
   16d24:	mov	r1, r7
   16d28:	mov	r2, r6
   16d2c:	bl	158c0 <table_get_int8@@Base>
   16d30:	b	16f60 <table_cell_to_buffer@@Base+0x304>
   16d34:	mov	r0, r4
   16d38:	mov	r1, r7
   16d3c:	mov	r2, r6
   16d40:	bl	158d8 <table_get_uint8@@Base>
   16d44:	b	16d94 <table_cell_to_buffer@@Base+0x138>
   16d48:	mov	r0, r4
   16d4c:	mov	r1, r7
   16d50:	mov	r2, r6
   16d54:	bl	158f0 <table_get_int16@@Base>
   16d58:	b	16f60 <table_cell_to_buffer@@Base+0x304>
   16d5c:	mov	r0, r4
   16d60:	mov	r1, r7
   16d64:	mov	r2, r6
   16d68:	bl	15908 <table_get_uint16@@Base>
   16d6c:	b	16d94 <table_cell_to_buffer@@Base+0x138>
   16d70:	mov	r0, r4
   16d74:	mov	r1, r7
   16d78:	mov	r2, r6
   16d7c:	bl	15920 <table_get_int32@@Base>
   16d80:	b	16f60 <table_cell_to_buffer@@Base+0x304>
   16d84:	mov	r0, r4
   16d88:	mov	r1, r7
   16d8c:	mov	r2, r6
   16d90:	bl	15938 <table_get_uint32@@Base>
   16d94:	ldr	r2, [pc, #524]	; 16fa8 <table_cell_to_buffer@@Base+0x34c>
   16d98:	mov	r3, r0
   16d9c:	add	r2, pc, r2
   16da0:	b	16f6c <table_cell_to_buffer@@Base+0x310>
   16da4:	mov	r0, r4
   16da8:	mov	r1, r7
   16dac:	mov	r2, r6
   16db0:	bl	15950 <table_get_int64@@Base>
   16db4:	b	16e5c <table_cell_to_buffer@@Base+0x200>
   16db8:	mov	r0, r4
   16dbc:	mov	r1, r7
   16dc0:	mov	r2, r6
   16dc4:	bl	15968 <table_get_uint64@@Base>
   16dc8:	b	16e7c <table_cell_to_buffer@@Base+0x220>
   16dcc:	mov	r0, r4
   16dd0:	mov	r1, r7
   16dd4:	mov	r2, r6
   16dd8:	bl	15980 <table_get_short@@Base>
   16ddc:	ldr	r2, [pc, #464]	; 16fb4 <table_cell_to_buffer@@Base+0x358>
   16de0:	mov	r3, r0
   16de4:	add	r2, pc, r2
   16de8:	b	16f6c <table_cell_to_buffer@@Base+0x310>
   16dec:	mov	r0, r4
   16df0:	mov	r1, r7
   16df4:	mov	r2, r6
   16df8:	bl	15998 <table_get_ushort@@Base>
   16dfc:	ldr	r2, [pc, #436]	; 16fb8 <table_cell_to_buffer@@Base+0x35c>
   16e00:	mov	r3, r0
   16e04:	add	r2, pc, r2
   16e08:	b	16f6c <table_cell_to_buffer@@Base+0x310>
   16e0c:	mov	r0, r4
   16e10:	mov	r1, r7
   16e14:	mov	r2, r6
   16e18:	bl	159b0 <table_get_long@@Base>
   16e1c:	ldr	r2, [pc, #408]	; 16fbc <table_cell_to_buffer@@Base+0x360>
   16e20:	mov	r3, r0
   16e24:	add	r2, pc, r2
   16e28:	b	16f6c <table_cell_to_buffer@@Base+0x310>
   16e2c:	mov	r0, r4
   16e30:	mov	r1, r7
   16e34:	mov	r2, r6
   16e38:	bl	159c8 <table_get_ulong@@Base>
   16e3c:	ldr	r2, [pc, #380]	; 16fc0 <table_cell_to_buffer@@Base+0x364>
   16e40:	mov	r3, r0
   16e44:	add	r2, pc, r2
   16e48:	b	16f6c <table_cell_to_buffer@@Base+0x310>
   16e4c:	mov	r0, r4
   16e50:	mov	r1, r7
   16e54:	mov	r2, r6
   16e58:	bl	159e0 <table_get_llong@@Base>
   16e5c:	stm	sp, {r0, r1}
   16e60:	ldr	r2, [pc, #324]	; 16fac <table_cell_to_buffer@@Base+0x350>
   16e64:	add	r2, pc, r2
   16e68:	b	16eec <table_cell_to_buffer@@Base+0x290>
   16e6c:	mov	r0, r4
   16e70:	mov	r1, r7
   16e74:	mov	r2, r6
   16e78:	bl	159f8 <table_get_ullong@@Base>
   16e7c:	stm	sp, {r0, r1}
   16e80:	ldr	r2, [pc, #296]	; 16fb0 <table_cell_to_buffer@@Base+0x354>
   16e84:	add	r2, pc, r2
   16e88:	b	16eec <table_cell_to_buffer@@Base+0x290>
   16e8c:	mov	r0, r4
   16e90:	mov	r1, r7
   16e94:	mov	r2, r6
   16e98:	bl	15a10 <table_get_float@@Base>
   16e9c:	vcvt.f64.f32	d16, s0
   16ea0:	vstr	d16, [sp]
   16ea4:	ldr	r2, [pc, #284]	; 16fc8 <table_cell_to_buffer@@Base+0x36c>
   16ea8:	add	r2, pc, r2
   16eac:	b	16eec <table_cell_to_buffer@@Base+0x290>
   16eb0:	mov	r0, r4
   16eb4:	mov	r1, r7
   16eb8:	mov	r2, r6
   16ebc:	bl	15a28 <table_get_double@@Base>
   16ec0:	vstr	d0, [sp]
   16ec4:	ldr	r2, [pc, #256]	; 16fcc <table_cell_to_buffer@@Base+0x370>
   16ec8:	add	r2, pc, r2
   16ecc:	b	16eec <table_cell_to_buffer@@Base+0x290>
   16ed0:	mov	r0, r4
   16ed4:	mov	r1, r7
   16ed8:	mov	r2, r6
   16edc:	bl	15a40 <table_get_ldouble@@Base>
   16ee0:	vstr	d0, [sp]
   16ee4:	ldr	r2, [pc, #228]	; 16fd0 <table_cell_to_buffer@@Base+0x374>
   16ee8:	add	r2, pc, r2
   16eec:	mov	r0, r5
   16ef0:	mov	r1, r8
   16ef4:	bl	12fe4 <snprintf@plt>
   16ef8:	b	16f78 <table_cell_to_buffer@@Base+0x31c>
   16efc:	mov	r0, r4
   16f00:	mov	r1, r7
   16f04:	mov	r2, r6
   16f08:	bl	15a58 <table_get_char@@Base>
   16f0c:	b	16f20 <table_cell_to_buffer@@Base+0x2c4>
   16f10:	mov	r0, r4
   16f14:	mov	r1, r7
   16f18:	mov	r2, r6
   16f1c:	bl	15a70 <table_get_uchar@@Base>
   16f20:	ldr	r2, [pc, #172]	; 16fd4 <table_cell_to_buffer@@Base+0x378>
   16f24:	mov	r3, r0
   16f28:	add	r2, pc, r2
   16f2c:	b	16f6c <table_cell_to_buffer@@Base+0x310>
   16f30:	mov	r0, r4
   16f34:	mov	r1, r7
   16f38:	mov	r2, r6
   16f3c:	bl	15a88 <table_get_string@@Base>
   16f40:	ldr	r2, [pc, #124]	; 16fc4 <table_cell_to_buffer@@Base+0x368>
   16f44:	mov	r3, r0
   16f48:	add	r2, pc, r2
   16f4c:	b	16f6c <table_cell_to_buffer@@Base+0x310>
   16f50:	mov	r0, r4
   16f54:	mov	r1, r7
   16f58:	mov	r2, r6
   16f5c:	bl	15878 <table_get_bool@@Base>
   16f60:	ldr	r2, [pc, #60]	; 16fa4 <table_cell_to_buffer@@Base+0x348>
   16f64:	mov	r3, r0
   16f68:	add	r2, pc, r2
   16f6c:	mov	r0, r5
   16f70:	mov	r1, r8
   16f74:	bl	12fe4 <snprintf@plt>
   16f78:	mov	r0, #0
   16f7c:	sub	sp, fp, #24
   16f80:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16f84:	mov	r0, r4
   16f88:	mov	r1, r7
   16f8c:	mov	r2, r6
   16f90:	bl	15a9c <table_get_ptr@@Base>
   16f94:	ldr	r2, [pc, #60]	; 16fd8 <table_cell_to_buffer@@Base+0x37c>
   16f98:	mov	r3, r0
   16f9c:	add	r2, pc, r2
   16fa0:	b	16f6c <table_cell_to_buffer@@Base+0x310>
   16fa4:	ldrdeq	r0, [r0], -r5
   16fa8:	andeq	r0, r0, r6, asr sl
   16fac:	muleq	r0, r1, r9
   16fb0:	andeq	r0, r0, r6, ror r9
   16fb4:	andeq	r0, r0, fp, lsl sl
   16fb8:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   16fbc:	andeq	r0, r0, r3, ror #19
   16fc0:	andeq	r0, r0, r7, asr #19
   16fc4:	andeq	r0, r0, r7, asr #17
   16fc8:	andeq	r0, r0, sl, ror #18
   16fcc:	andeq	r0, r0, sp, asr #18
   16fd0:	andeq	r0, r0, r1, lsr r9
   16fd4:	strdeq	r0, [r0], -r5
   16fd8:	andeq	r0, r0, r4, lsl #17

00016fdc <table_cell_from_buffer@@Base>:
   16fdc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16fe0:	add	fp, sp, #24
   16fe4:	sub	sp, sp, #264	; 0x108
   16fe8:	mov	r5, r1
   16fec:	mov	r1, r2
   16ff0:	mov	r7, r3
   16ff4:	mov	r4, r2
   16ff8:	mov	r6, r0
   16ffc:	bl	13dc4 <table_get_column_data_type@@Base>
   17000:	cmp	r0, #23
   17004:	bhi	175dc <table_cell_from_buffer@@Base+0x600>
   17008:	add	r1, pc, #4
   1700c:	ldr	r0, [r1, r0, lsl #2]
   17010:	add	pc, r1, r0
   17014:	andeq	r0, r0, r0, rrx
   17018:	muleq	r0, r8, r0
   1701c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   17020:	andeq	r0, r0, r8, lsl #2
   17024:	andeq	r0, r0, r0, asr #2
   17028:	andeq	r0, r0, r8, ror r1
   1702c:			; <UNDEFINED> instruction: 0x000001b0
   17030:	andeq	r0, r0, r8, ror #3
   17034:	andeq	r0, r0, r0, lsr #4
   17038:	andeq	r0, r0, r0, ror #4
   1703c:	andeq	r0, r0, r0, lsr #5
   17040:	ldrdeq	r0, [r0], -r8
   17044:	andeq	r0, r0, r0, lsl r3
   17048:	andeq	r0, r0, r8, asr #6
   1704c:	andeq	r0, r0, r0, lsl #7
   17050:	andeq	r0, r0, r0, asr #7
   17054:	andeq	r0, r0, r0, lsl #8
   17058:	andeq	r0, r0, r8, lsr r4
   1705c:	andeq	r0, r0, r0, ror r4
   17060:	andeq	r0, r0, r8, lsr #9
   17064:	andeq	r0, r0, r0, ror #9
   17068:	andeq	r0, r0, r8, lsl r5
   1706c:	andeq	r0, r0, r0, asr r5
   17070:	muleq	r0, r4, r5
   17074:	ldr	r1, [pc, #1420]	; 17608 <table_cell_from_buffer@@Base+0x62c>
   17078:	add	r2, sp, #8
   1707c:	mov	r0, r7
   17080:	add	r1, pc, r1
   17084:	bl	12ff0 <__isoc99_sscanf@plt>
   17088:	mvn	r7, #0
   1708c:	cmp	r0, #1
   17090:	bne	175e0 <table_cell_from_buffer@@Base+0x604>
   17094:	ldr	r3, [sp, #8]
   17098:	mov	r0, r6
   1709c:	mov	r1, r5
   170a0:	mov	r2, r4
   170a4:	bl	1609c <table_set_int@@Base>
   170a8:	b	175dc <table_cell_from_buffer@@Base+0x600>
   170ac:	ldr	r1, [pc, #1368]	; 1760c <table_cell_from_buffer@@Base+0x630>
   170b0:	add	r2, sp, #8
   170b4:	mov	r0, r7
   170b8:	add	r1, pc, r1
   170bc:	bl	12ff0 <__isoc99_sscanf@plt>
   170c0:	mvn	r7, #0
   170c4:	cmp	r0, #1
   170c8:	bne	175e0 <table_cell_from_buffer@@Base+0x604>
   170cc:	ldr	r3, [sp, #8]
   170d0:	mov	r0, r6
   170d4:	mov	r1, r5
   170d8:	mov	r2, r4
   170dc:	bl	1611c <table_set_uint@@Base>
   170e0:	b	175dc <table_cell_from_buffer@@Base+0x600>
   170e4:	ldr	r1, [pc, #1316]	; 17610 <table_cell_from_buffer@@Base+0x634>
   170e8:	add	r2, sp, #8
   170ec:	mov	r0, r7
   170f0:	add	r1, pc, r1
   170f4:	bl	12ff0 <__isoc99_sscanf@plt>
   170f8:	mvn	r7, #0
   170fc:	cmp	r0, #1
   17100:	bne	175e0 <table_cell_from_buffer@@Base+0x604>
   17104:	ldrsb	r3, [sp, #8]
   17108:	mov	r0, r6
   1710c:	mov	r1, r5
   17110:	mov	r2, r4
   17114:	bl	1619c <table_set_int8@@Base>
   17118:	b	175dc <table_cell_from_buffer@@Base+0x600>
   1711c:	ldr	r1, [pc, #1264]	; 17614 <table_cell_from_buffer@@Base+0x638>
   17120:	add	r2, sp, #8
   17124:	mov	r0, r7
   17128:	add	r1, pc, r1
   1712c:	bl	12ff0 <__isoc99_sscanf@plt>
   17130:	mvn	r7, #0
   17134:	cmp	r0, #1
   17138:	bne	175e0 <table_cell_from_buffer@@Base+0x604>
   1713c:	ldrb	r3, [sp, #8]
   17140:	mov	r0, r6
   17144:	mov	r1, r5
   17148:	mov	r2, r4
   1714c:	bl	1621c <table_set_uint8@@Base>
   17150:	b	175dc <table_cell_from_buffer@@Base+0x600>
   17154:	ldr	r1, [pc, #1212]	; 17618 <table_cell_from_buffer@@Base+0x63c>
   17158:	add	r2, sp, #8
   1715c:	mov	r0, r7
   17160:	add	r1, pc, r1
   17164:	bl	12ff0 <__isoc99_sscanf@plt>
   17168:	mvn	r7, #0
   1716c:	cmp	r0, #1
   17170:	bne	175e0 <table_cell_from_buffer@@Base+0x604>
   17174:	ldrsh	r3, [sp, #8]
   17178:	mov	r0, r6
   1717c:	mov	r1, r5
   17180:	mov	r2, r4
   17184:	bl	1629c <table_set_int16@@Base>
   17188:	b	175dc <table_cell_from_buffer@@Base+0x600>
   1718c:	ldr	r1, [pc, #1160]	; 1761c <table_cell_from_buffer@@Base+0x640>
   17190:	add	r2, sp, #8
   17194:	mov	r0, r7
   17198:	add	r1, pc, r1
   1719c:	bl	12ff0 <__isoc99_sscanf@plt>
   171a0:	mvn	r7, #0
   171a4:	cmp	r0, #1
   171a8:	bne	175e0 <table_cell_from_buffer@@Base+0x604>
   171ac:	ldrh	r3, [sp, #8]
   171b0:	mov	r0, r6
   171b4:	mov	r1, r5
   171b8:	mov	r2, r4
   171bc:	bl	1631c <table_set_uint16@@Base>
   171c0:	b	175dc <table_cell_from_buffer@@Base+0x600>
   171c4:	ldr	r1, [pc, #1108]	; 17620 <table_cell_from_buffer@@Base+0x644>
   171c8:	add	r2, sp, #8
   171cc:	mov	r0, r7
   171d0:	add	r1, pc, r1
   171d4:	bl	12ff0 <__isoc99_sscanf@plt>
   171d8:	mvn	r7, #0
   171dc:	cmp	r0, #1
   171e0:	bne	175e0 <table_cell_from_buffer@@Base+0x604>
   171e4:	ldr	r3, [sp, #8]
   171e8:	mov	r0, r6
   171ec:	mov	r1, r5
   171f0:	mov	r2, r4
   171f4:	bl	1639c <table_set_int32@@Base>
   171f8:	b	175dc <table_cell_from_buffer@@Base+0x600>
   171fc:	ldr	r1, [pc, #1056]	; 17624 <table_cell_from_buffer@@Base+0x648>
   17200:	add	r2, sp, #8
   17204:	mov	r0, r7
   17208:	add	r1, pc, r1
   1720c:	bl	12ff0 <__isoc99_sscanf@plt>
   17210:	mvn	r7, #0
   17214:	cmp	r0, #1
   17218:	bne	175e0 <table_cell_from_buffer@@Base+0x604>
   1721c:	ldr	r3, [sp, #8]
   17220:	mov	r0, r6
   17224:	mov	r1, r5
   17228:	mov	r2, r4
   1722c:	bl	1641c <table_set_uint32@@Base>
   17230:	b	175dc <table_cell_from_buffer@@Base+0x600>
   17234:	ldr	r1, [pc, #1004]	; 17628 <table_cell_from_buffer@@Base+0x64c>
   17238:	add	r2, sp, #8
   1723c:	mov	r0, r7
   17240:	add	r1, pc, r1
   17244:	bl	12ff0 <__isoc99_sscanf@plt>
   17248:	mvn	r7, #0
   1724c:	cmp	r0, #1
   17250:	bne	175e0 <table_cell_from_buffer@@Base+0x604>
   17254:	ldr	r0, [sp, #8]
   17258:	ldr	r1, [sp, #12]
   1725c:	mov	r2, r4
   17260:	stm	sp, {r0, r1}
   17264:	mov	r0, r6
   17268:	mov	r1, r5
   1726c:	bl	1649c <table_set_int64@@Base>
   17270:	b	175dc <table_cell_from_buffer@@Base+0x600>
   17274:	ldr	r1, [pc, #944]	; 1762c <table_cell_from_buffer@@Base+0x650>
   17278:	add	r2, sp, #8
   1727c:	mov	r0, r7
   17280:	add	r1, pc, r1
   17284:	bl	12ff0 <__isoc99_sscanf@plt>
   17288:	mvn	r7, #0
   1728c:	cmp	r0, #1
   17290:	bne	175e0 <table_cell_from_buffer@@Base+0x604>
   17294:	ldr	r0, [sp, #8]
   17298:	ldr	r1, [sp, #12]
   1729c:	mov	r2, r4
   172a0:	stm	sp, {r0, r1}
   172a4:	mov	r0, r6
   172a8:	mov	r1, r5
   172ac:	bl	16524 <table_set_uint64@@Base>
   172b0:	b	175dc <table_cell_from_buffer@@Base+0x600>
   172b4:	ldr	r1, [pc, #884]	; 17630 <table_cell_from_buffer@@Base+0x654>
   172b8:	add	r2, sp, #8
   172bc:	mov	r0, r7
   172c0:	add	r1, pc, r1
   172c4:	bl	12ff0 <__isoc99_sscanf@plt>
   172c8:	mvn	r7, #0
   172cc:	cmp	r0, #1
   172d0:	bne	175e0 <table_cell_from_buffer@@Base+0x604>
   172d4:	ldrsh	r3, [sp, #8]
   172d8:	mov	r0, r6
   172dc:	mov	r1, r5
   172e0:	mov	r2, r4
   172e4:	bl	165ac <table_set_short@@Base>
   172e8:	b	175dc <table_cell_from_buffer@@Base+0x600>
   172ec:	ldr	r1, [pc, #832]	; 17634 <table_cell_from_buffer@@Base+0x658>
   172f0:	add	r2, sp, #8
   172f4:	mov	r0, r7
   172f8:	add	r1, pc, r1
   172fc:	bl	12ff0 <__isoc99_sscanf@plt>
   17300:	mvn	r7, #0
   17304:	cmp	r0, #1
   17308:	bne	175e0 <table_cell_from_buffer@@Base+0x604>
   1730c:	ldrh	r3, [sp, #8]
   17310:	mov	r0, r6
   17314:	mov	r1, r5
   17318:	mov	r2, r4
   1731c:	bl	1662c <table_set_ushort@@Base>
   17320:	b	175dc <table_cell_from_buffer@@Base+0x600>
   17324:	ldr	r1, [pc, #780]	; 17638 <table_cell_from_buffer@@Base+0x65c>
   17328:	add	r2, sp, #8
   1732c:	mov	r0, r7
   17330:	add	r1, pc, r1
   17334:	bl	12ff0 <__isoc99_sscanf@plt>
   17338:	mvn	r7, #0
   1733c:	cmp	r0, #1
   17340:	bne	175e0 <table_cell_from_buffer@@Base+0x604>
   17344:	ldr	r3, [sp, #8]
   17348:	mov	r0, r6
   1734c:	mov	r1, r5
   17350:	mov	r2, r4
   17354:	bl	166ac <table_set_long@@Base>
   17358:	b	175dc <table_cell_from_buffer@@Base+0x600>
   1735c:	ldr	r1, [pc, #728]	; 1763c <table_cell_from_buffer@@Base+0x660>
   17360:	add	r2, sp, #8
   17364:	mov	r0, r7
   17368:	add	r1, pc, r1
   1736c:	bl	12ff0 <__isoc99_sscanf@plt>
   17370:	mvn	r7, #0
   17374:	cmp	r0, #1
   17378:	bne	175e0 <table_cell_from_buffer@@Base+0x604>
   1737c:	ldr	r3, [sp, #8]
   17380:	mov	r0, r6
   17384:	mov	r1, r5
   17388:	mov	r2, r4
   1738c:	bl	1672c <table_set_ulong@@Base>
   17390:	b	175dc <table_cell_from_buffer@@Base+0x600>
   17394:	ldr	r1, [pc, #676]	; 17640 <table_cell_from_buffer@@Base+0x664>
   17398:	add	r2, sp, #8
   1739c:	mov	r0, r7
   173a0:	add	r1, pc, r1
   173a4:	bl	12ff0 <__isoc99_sscanf@plt>
   173a8:	mvn	r7, #0
   173ac:	cmp	r0, #1
   173b0:	bne	175e0 <table_cell_from_buffer@@Base+0x604>
   173b4:	ldr	r0, [sp, #8]
   173b8:	ldr	r1, [sp, #12]
   173bc:	mov	r2, r4
   173c0:	stm	sp, {r0, r1}
   173c4:	mov	r0, r6
   173c8:	mov	r1, r5
   173cc:	bl	167ac <table_set_llong@@Base>
   173d0:	b	175dc <table_cell_from_buffer@@Base+0x600>
   173d4:	ldr	r1, [pc, #616]	; 17644 <table_cell_from_buffer@@Base+0x668>
   173d8:	add	r2, sp, #8
   173dc:	mov	r0, r7
   173e0:	add	r1, pc, r1
   173e4:	bl	12ff0 <__isoc99_sscanf@plt>
   173e8:	mvn	r7, #0
   173ec:	cmp	r0, #1
   173f0:	bne	175e0 <table_cell_from_buffer@@Base+0x604>
   173f4:	ldr	r0, [sp, #8]
   173f8:	ldr	r1, [sp, #12]
   173fc:	mov	r2, r4
   17400:	stm	sp, {r0, r1}
   17404:	mov	r0, r6
   17408:	mov	r1, r5
   1740c:	bl	16834 <table_set_ullong@@Base>
   17410:	b	175dc <table_cell_from_buffer@@Base+0x600>
   17414:	ldr	r1, [pc, #560]	; 1764c <table_cell_from_buffer@@Base+0x670>
   17418:	add	r2, sp, #8
   1741c:	mov	r0, r7
   17420:	add	r1, pc, r1
   17424:	bl	12ff0 <__isoc99_sscanf@plt>
   17428:	mvn	r7, #0
   1742c:	cmp	r0, #1
   17430:	bne	175e0 <table_cell_from_buffer@@Base+0x604>
   17434:	vldr	s0, [sp, #8]
   17438:	mov	r0, r6
   1743c:	mov	r1, r5
   17440:	mov	r2, r4
   17444:	bl	168bc <table_set_float@@Base>
   17448:	b	175dc <table_cell_from_buffer@@Base+0x600>
   1744c:	ldr	r1, [pc, #508]	; 17650 <table_cell_from_buffer@@Base+0x674>
   17450:	add	r2, sp, #8
   17454:	mov	r0, r7
   17458:	add	r1, pc, r1
   1745c:	bl	12ff0 <__isoc99_sscanf@plt>
   17460:	mvn	r7, #0
   17464:	cmp	r0, #1
   17468:	bne	175e0 <table_cell_from_buffer@@Base+0x604>
   1746c:	vldr	d0, [sp, #8]
   17470:	mov	r0, r6
   17474:	mov	r1, r5
   17478:	mov	r2, r4
   1747c:	bl	16948 <table_set_double@@Base>
   17480:	b	175dc <table_cell_from_buffer@@Base+0x600>
   17484:	ldr	r1, [pc, #456]	; 17654 <table_cell_from_buffer@@Base+0x678>
   17488:	add	r2, sp, #8
   1748c:	mov	r0, r7
   17490:	add	r1, pc, r1
   17494:	bl	12ff0 <__isoc99_sscanf@plt>
   17498:	mvn	r7, #0
   1749c:	cmp	r0, #1
   174a0:	bne	175e0 <table_cell_from_buffer@@Base+0x604>
   174a4:	vldr	d0, [sp, #8]
   174a8:	mov	r0, r6
   174ac:	mov	r1, r5
   174b0:	mov	r2, r4
   174b4:	bl	169d0 <table_set_ldouble@@Base>
   174b8:	b	175dc <table_cell_from_buffer@@Base+0x600>
   174bc:	ldr	r1, [pc, #408]	; 1765c <table_cell_from_buffer@@Base+0x680>
   174c0:	add	r2, sp, #8
   174c4:	mov	r0, r7
   174c8:	add	r1, pc, r1
   174cc:	bl	12ff0 <__isoc99_sscanf@plt>
   174d0:	mvn	r7, #0
   174d4:	cmp	r0, #1
   174d8:	bne	175e0 <table_cell_from_buffer@@Base+0x604>
   174dc:	ldrb	r3, [sp, #8]
   174e0:	mov	r0, r6
   174e4:	mov	r1, r5
   174e8:	mov	r2, r4
   174ec:	bl	16a78 <table_set_char@@Base>
   174f0:	b	175dc <table_cell_from_buffer@@Base+0x600>
   174f4:	ldr	r1, [pc, #356]	; 17660 <table_cell_from_buffer@@Base+0x684>
   174f8:	add	r2, sp, #8
   174fc:	mov	r0, r7
   17500:	add	r1, pc, r1
   17504:	bl	12ff0 <__isoc99_sscanf@plt>
   17508:	mvn	r7, #0
   1750c:	cmp	r0, #1
   17510:	bne	175e0 <table_cell_from_buffer@@Base+0x604>
   17514:	ldrb	r3, [sp, #8]
   17518:	mov	r0, r6
   1751c:	mov	r1, r5
   17520:	mov	r2, r4
   17524:	bl	16af8 <table_set_uchar@@Base>
   17528:	b	175dc <table_cell_from_buffer@@Base+0x600>
   1752c:	ldr	r1, [pc, #276]	; 17648 <table_cell_from_buffer@@Base+0x66c>
   17530:	add	r2, sp, #8
   17534:	mov	r0, r7
   17538:	add	r1, pc, r1
   1753c:	bl	12ff0 <__isoc99_sscanf@plt>
   17540:	mvn	r7, #0
   17544:	cmp	r0, #1
   17548:	bne	175e0 <table_cell_from_buffer@@Base+0x604>
   1754c:	add	r3, sp, #8
   17550:	mov	r0, r6
   17554:	mov	r1, r5
   17558:	mov	r2, r4
   1755c:	bl	16a58 <table_set_string@@Base>
   17560:	b	175dc <table_cell_from_buffer@@Base+0x600>
   17564:	ldr	r1, [pc, #236]	; 17658 <table_cell_from_buffer@@Base+0x67c>
   17568:	add	r2, sp, #8
   1756c:	mov	r0, r7
   17570:	add	r1, pc, r1
   17574:	bl	12ff0 <__isoc99_sscanf@plt>
   17578:	mvn	r7, #0
   1757c:	cmp	r0, #1
   17580:	bne	175e0 <table_cell_from_buffer@@Base+0x604>
   17584:	ldr	r0, [sp, #8]
   17588:	cmp	r0, #0
   1758c:	beq	175ec <table_cell_from_buffer@@Base+0x610>
   17590:	mov	r0, r6
   17594:	mov	r1, r5
   17598:	mov	r2, r4
   1759c:	mov	r3, #1
   175a0:	bl	1601c <table_set_bool@@Base>
   175a4:	b	175dc <table_cell_from_buffer@@Base+0x600>
   175a8:	ldr	r1, [pc, #180]	; 17664 <table_cell_from_buffer@@Base+0x688>
   175ac:	add	r2, sp, #8
   175b0:	mov	r0, r7
   175b4:	add	r1, pc, r1
   175b8:	bl	12ff0 <__isoc99_sscanf@plt>
   175bc:	mvn	r7, #0
   175c0:	cmp	r0, #1
   175c4:	bne	175e0 <table_cell_from_buffer@@Base+0x604>
   175c8:	ldr	r3, [sp, #8]
   175cc:	mov	r0, r6
   175d0:	mov	r1, r5
   175d4:	mov	r2, r4
   175d8:	bl	16b78 <table_set_ptr@@Base>
   175dc:	mov	r7, #0
   175e0:	mov	r0, r7
   175e4:	sub	sp, fp, #24
   175e8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   175ec:	mov	r0, r6
   175f0:	mov	r1, r5
   175f4:	mov	r2, r4
   175f8:	mov	r3, #0
   175fc:	mov	r7, #0
   17600:	bl	1601c <table_set_bool@@Base>
   17604:	b	175e0 <table_cell_from_buffer@@Base+0x604>
   17608:			; <UNDEFINED> instruction: 0x000006bd
   1760c:	andeq	r0, r0, sl, lsr r7
   17610:	andeq	r0, r0, r3, lsr r7
   17614:	andeq	r0, r0, r0, lsl #14
   17618:	muleq	r0, pc, r6	; <UNPREDICTABLE>
   1761c:	andeq	r0, r0, fp, ror #12
   17620:	andeq	r0, r0, sp, ror #10
   17624:	andeq	r0, r0, sl, ror #11
   17628:			; <UNDEFINED> instruction: 0x000005b5
   1762c:	andeq	r0, r0, sl, ror r5
   17630:	andeq	r0, r0, pc, lsr r5
   17634:	andeq	r0, r0, fp, lsl #10
   17638:	ldrdeq	r0, [r0], -r7
   1763c:	andeq	r0, r0, r3, lsr #9
   17640:	andeq	r0, r0, r5, asr r4
   17644:	andeq	r0, r0, sl, lsl r4
   17648:	ldrdeq	r0, [r0], -r7
   1764c:	strdeq	r0, [r0], -r2
   17650:			; <UNDEFINED> instruction: 0x000003bd
   17654:	andeq	r0, r0, r9, lsl #7
   17658:	andeq	r0, r0, sp, asr #3
   1765c:	andeq	r0, r0, r5, asr r3
   17660:	andeq	r0, r0, sp, lsl r3
   17664:	andeq	r0, r0, ip, ror #4

00017668 <table_cell_nullify@@Base>:
   17668:	push	{r4, r5, fp, lr}
   1766c:	add	fp, sp, #8
   17670:	mov	r4, r2
   17674:	bl	15ad4 <table_get_row_ptr@@Base>
   17678:	ldr	r5, [r0]
   1767c:	ldr	r0, [r5, r4, lsl #2]
   17680:	cmp	r0, #0
   17684:	beq	17694 <table_cell_nullify@@Base+0x2c>
   17688:	bl	12f90 <free@plt>
   1768c:	mov	r0, #0
   17690:	str	r0, [r5, r4, lsl #2]
   17694:	mov	r0, #0
   17698:	pop	{r4, r5, fp, pc}

0001769c <__libc_csu_init@@Base>:
   1769c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   176a0:	mov	r7, r0
   176a4:	ldr	r6, [pc, #72]	; 176f4 <__libc_csu_init@@Base+0x58>
   176a8:	ldr	r5, [pc, #72]	; 176f8 <__libc_csu_init@@Base+0x5c>
   176ac:	add	r6, pc, r6
   176b0:	add	r5, pc, r5
   176b4:	sub	r6, r6, r5
   176b8:	mov	r8, r1
   176bc:	mov	r9, r2
   176c0:	bl	12f58 <strcmp@plt-0x20>
   176c4:	asrs	r6, r6, #2
   176c8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   176cc:	mov	r4, #0
   176d0:	add	r4, r4, #1
   176d4:	ldr	r3, [r5], #4
   176d8:	mov	r2, r9
   176dc:	mov	r1, r8
   176e0:	mov	r0, r7
   176e4:	blx	r3
   176e8:	cmp	r6, r4
   176ec:	bne	176d0 <__libc_csu_init@@Base+0x34>
   176f0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   176f4:	strdeq	r0, [r1], -r8
   176f8:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>

000176fc <__libc_csu_fini@@Base>:
   176fc:	bx	lr

Disassembly of section .fini:

00017700 <.fini>:
   17700:	push	{r3, lr}
   17704:	pop	{r3, pc}
