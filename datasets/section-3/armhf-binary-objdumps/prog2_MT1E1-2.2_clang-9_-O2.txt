
../repos/prog2/MT1E1-2.2:     file format elf32-littlearm


Disassembly of section .init:

000107c8 <.init>:
   107c8:	push	{r3, lr}
   107cc:	bl	108cc <_start@@Base+0x3c>
   107d0:	pop	{r3, pc}

Disassembly of section .plt:

000107d4 <strcmp@plt-0x14>:
   107d4:	push	{lr}		; (str lr, [sp, #-4]!)
   107d8:	ldr	lr, [pc, #4]	; 107e4 <strcmp@plt-0x4>
   107dc:	add	lr, pc, lr
   107e0:	ldr	pc, [lr, #8]!
   107e4:	andeq	r0, r1, ip, lsl r8

000107e8 <strcmp@plt>:
   107e8:	add	ip, pc, #0, 12
   107ec:	add	ip, ip, #16, 20	; 0x10000
   107f0:	ldr	pc, [ip, #2076]!	; 0x81c

000107f4 <__isoc99_fscanf@plt>:
   107f4:	add	ip, pc, #0, 12
   107f8:	add	ip, ip, #16, 20	; 0x10000
   107fc:	ldr	pc, [ip, #2068]!	; 0x814

00010800 <fopen@plt>:
   10800:	add	ip, pc, #0, 12
   10804:	add	ip, ip, #16, 20	; 0x10000
   10808:	ldr	pc, [ip, #2060]!	; 0x80c

0001080c <free@plt>:
   1080c:	add	ip, pc, #0, 12
   10810:	add	ip, ip, #16, 20	; 0x10000
   10814:	ldr	pc, [ip, #2052]!	; 0x804

00010818 <realloc@plt>:
   10818:	add	ip, pc, #0, 12
   1081c:	add	ip, ip, #16, 20	; 0x10000
   10820:	ldr	pc, [ip, #2044]!	; 0x7fc

00010824 <fwrite@plt>:
   10824:	add	ip, pc, #0, 12
   10828:	add	ip, ip, #16, 20	; 0x10000
   1082c:	ldr	pc, [ip, #2036]!	; 0x7f4

00010830 <strcpy@plt>:
   10830:	add	ip, pc, #0, 12
   10834:	add	ip, ip, #16, 20	; 0x10000
   10838:	ldr	pc, [ip, #2028]!	; 0x7ec

0001083c <malloc@plt>:
   1083c:	add	ip, pc, #0, 12
   10840:	add	ip, ip, #16, 20	; 0x10000
   10844:	ldr	pc, [ip, #2020]!	; 0x7e4

00010848 <__libc_start_main@plt>:
   10848:	add	ip, pc, #0, 12
   1084c:	add	ip, ip, #16, 20	; 0x10000
   10850:	ldr	pc, [ip, #2012]!	; 0x7dc

00010854 <__gmon_start__@plt>:
   10854:	add	ip, pc, #0, 12
   10858:	add	ip, ip, #16, 20	; 0x10000
   1085c:	ldr	pc, [ip, #2004]!	; 0x7d4

00010860 <strlen@plt>:
   10860:	add	ip, pc, #0, 12
   10864:	add	ip, ip, #16, 20	; 0x10000
   10868:	ldr	pc, [ip, #1996]!	; 0x7cc

0001086c <fprintf@plt>:
   1086c:	add	ip, pc, #0, 12
   10870:	add	ip, ip, #16, 20	; 0x10000
   10874:	ldr	pc, [ip, #1988]!	; 0x7c4

00010878 <fclose@plt>:
   10878:	add	ip, pc, #0, 12
   1087c:	add	ip, ip, #16, 20	; 0x10000
   10880:	ldr	pc, [ip, #1980]!	; 0x7bc

00010884 <abort@plt>:
   10884:	add	ip, pc, #0, 12
   10888:	add	ip, ip, #16, 20	; 0x10000
   1088c:	ldr	pc, [ip, #1972]!	; 0x7b4

Disassembly of section .text:

00010890 <_start@@Base>:
   10890:	mov	fp, #0
   10894:	mov	lr, #0
   10898:	pop	{r1}		; (ldr r1, [sp], #4)
   1089c:	mov	r2, sp
   108a0:	push	{r2}		; (str r2, [sp, #-4]!)
   108a4:	push	{r0}		; (str r0, [sp, #-4]!)
   108a8:	ldr	ip, [pc, #16]	; 108c0 <_start@@Base+0x30>
   108ac:	push	{ip}		; (str ip, [sp, #-4]!)
   108b0:	ldr	r0, [pc, #12]	; 108c4 <_start@@Base+0x34>
   108b4:	ldr	r3, [pc, #12]	; 108c8 <_start@@Base+0x38>
   108b8:	bl	10848 <__libc_start_main@plt>
   108bc:	bl	10884 <abort@plt>
   108c0:	andeq	r0, r1, ip, lsl #25
   108c4:	andeq	r0, r1, r4, asr fp
   108c8:	andeq	r0, r1, ip, lsr #24
   108cc:	ldr	r3, [pc, #20]	; 108e8 <_start@@Base+0x58>
   108d0:	ldr	r2, [pc, #20]	; 108ec <_start@@Base+0x5c>
   108d4:	add	r3, pc, r3
   108d8:	ldr	r2, [r3, r2]
   108dc:	cmp	r2, #0
   108e0:	bxeq	lr
   108e4:	b	10854 <__gmon_start__@plt>
   108e8:	andeq	r0, r1, r4, lsr #14
   108ec:	andeq	r0, r0, r8, asr #32
   108f0:	ldr	r0, [pc, #24]	; 10910 <_start@@Base+0x80>
   108f4:	ldr	r3, [pc, #24]	; 10914 <_start@@Base+0x84>
   108f8:	cmp	r3, r0
   108fc:	bxeq	lr
   10900:	ldr	r3, [pc, #16]	; 10918 <_start@@Base+0x88>
   10904:	cmp	r3, #0
   10908:	bxeq	lr
   1090c:	bx	r3
   10910:	andeq	r1, r2, r4, asr r0
   10914:	andeq	r1, r2, r4, asr r0
   10918:	andeq	r0, r0, r0
   1091c:	ldr	r0, [pc, #36]	; 10948 <_start@@Base+0xb8>
   10920:	ldr	r1, [pc, #36]	; 1094c <_start@@Base+0xbc>
   10924:	sub	r1, r1, r0
   10928:	asr	r1, r1, #2
   1092c:	add	r1, r1, r1, lsr #31
   10930:	asrs	r1, r1, #1
   10934:	bxeq	lr
   10938:	ldr	r3, [pc, #16]	; 10950 <_start@@Base+0xc0>
   1093c:	cmp	r3, #0
   10940:	bxeq	lr
   10944:	bx	r3
   10948:	andeq	r1, r2, r4, asr r0
   1094c:	andeq	r1, r2, r4, asr r0
   10950:	andeq	r0, r0, r0
   10954:	push	{r4, lr}
   10958:	ldr	r4, [pc, #24]	; 10978 <_start@@Base+0xe8>
   1095c:	ldrb	r3, [r4]
   10960:	cmp	r3, #0
   10964:	popne	{r4, pc}
   10968:	bl	108f0 <_start@@Base+0x60>
   1096c:	mov	r3, #1
   10970:	strb	r3, [r4]
   10974:	pop	{r4, pc}
   10978:	andeq	r1, r2, r4, asr r0
   1097c:	b	1091c <_start@@Base+0x8c>

00010980 <conta_vitorias@@Base>:
   10980:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10984:	add	fp, sp, #28
   10988:	sub	sp, sp, #44	; 0x2c
   1098c:	mov	r4, r0
   10990:	mov	r0, #20
   10994:	mov	r5, r1
   10998:	bl	1083c <malloc@plt>
   1099c:	cmp	r0, #0
   109a0:	beq	10b3c <conta_vitorias@@Base+0x1bc>
   109a4:	mov	r6, r0
   109a8:	mov	r0, #0
   109ac:	add	r7, sp, #29
   109b0:	str	r0, [r5]
   109b4:	mov	r0, r4
   109b8:	mov	r2, r7
   109bc:	ldr	r1, [pc, #392]	; 10b4c <conta_vitorias@@Base+0x1cc>
   109c0:	add	r1, pc, r1
   109c4:	bl	107f4 <__isoc99_fscanf@plt>
   109c8:	cmp	r0, #1
   109cc:	bne	10aa0 <conta_vitorias@@Base+0x120>
   109d0:	mov	sl, #0
   109d4:	str	r4, [sp, #4]
   109d8:	str	r5, [sp]
   109dc:	b	10a14 <conta_vitorias@@Base+0x94>
   109e0:	ldr	r5, [sp]
   109e4:	add	r0, r4, #16
   109e8:	ldr	r1, [r0]
   109ec:	ldr	r4, [sp, #4]
   109f0:	mov	r2, r7
   109f4:	add	r1, r1, #1
   109f8:	str	r1, [r0]
   109fc:	mov	r0, r4
   10a00:	ldr	r1, [pc, #328]	; 10b50 <conta_vitorias@@Base+0x1d0>
   10a04:	add	r1, pc, r1
   10a08:	bl	107f4 <__isoc99_fscanf@plt>
   10a0c:	cmp	r0, #1
   10a10:	bne	10aa0 <conta_vitorias@@Base+0x120>
   10a14:	mov	r0, r7
   10a18:	bl	10860 <strlen@plt>
   10a1c:	strb	sl, [r7, r0]
   10a20:	mov	r8, #0
   10a24:	ldr	r9, [r5]
   10a28:	cmp	r9, #1
   10a2c:	blt	10a5c <conta_vitorias@@Base+0xdc>
   10a30:	mov	r8, #0
   10a34:	mov	r4, r6
   10a38:	mov	r0, r7
   10a3c:	mov	r1, r4
   10a40:	bl	107e8 <strcmp@plt>
   10a44:	cmp	r0, #0
   10a48:	beq	109e0 <conta_vitorias@@Base+0x60>
   10a4c:	add	r8, r8, #1
   10a50:	add	r4, r4, #20
   10a54:	cmp	r8, r9
   10a58:	blt	10a38 <conta_vitorias@@Base+0xb8>
   10a5c:	add	r0, r9, r9, lsl #2
   10a60:	mov	r1, #20
   10a64:	add	r1, r1, r0, lsl #2
   10a68:	mov	r0, r6
   10a6c:	bl	10818 <realloc@plt>
   10a70:	cmp	r0, #0
   10a74:	beq	10b40 <conta_vitorias@@Base+0x1c0>
   10a78:	mov	r6, r0
   10a7c:	add	r0, r8, r8, lsl #2
   10a80:	mov	r1, r7
   10a84:	add	r0, r6, r0, lsl #2
   10a88:	bl	10830 <strcpy@plt>
   10a8c:	ldr	r5, [sp]
   10a90:	mov	r1, #1
   10a94:	str	r1, [r0, #16]
   10a98:	mov	r0, r5
   10a9c:	b	109e8 <conta_vitorias@@Base+0x68>
   10aa0:	ldr	lr, [r5]
   10aa4:	cmp	lr, #2
   10aa8:	blt	10b34 <conta_vitorias@@Base+0x1b4>
   10aac:	add	r4, r6, #16
   10ab0:	mov	r5, #1
   10ab4:	add	ip, sp, #8
   10ab8:	b	10ae0 <conta_vitorias@@Base+0x160>
   10abc:	vld1.64	{d16-d17}, [ip]
   10ac0:	add	r0, r2, r2, lsl #2
   10ac4:	add	r5, r5, #1
   10ac8:	add	r4, r4, #20
   10acc:	cmp	r5, lr
   10ad0:	add	r0, r6, r0, lsl #2
   10ad4:	vst1.32	{d16-d17}, [r0]!
   10ad8:	str	r7, [r0]
   10adc:	bge	10b34 <conta_vitorias@@Base+0x1b4>
   10ae0:	add	r1, r5, r5, lsl #2
   10ae4:	mov	r2, r5
   10ae8:	add	r1, r6, r1, lsl #2
   10aec:	vld1.32	{d16-d17}, [r1]!
   10af0:	ldr	r7, [r1]
   10af4:	mov	r1, r4
   10af8:	vst1.64	{d16-d17}, [ip]
   10afc:	ldr	r3, [r1]
   10b00:	cmp	r7, r3
   10b04:	ble	10abc <conta_vitorias@@Base+0x13c>
   10b08:	sub	r0, r1, #16
   10b0c:	ldr	r3, [r1]
   10b10:	sub	r2, r2, #1
   10b14:	vld1.32	{d16-d17}, [r0]
   10b18:	add	r0, r1, #4
   10b1c:	cmp	r2, #0
   10b20:	str	r3, [r1, #20]
   10b24:	sub	r1, r1, #20
   10b28:	vst1.32	{d16-d17}, [r0]
   10b2c:	bgt	10afc <conta_vitorias@@Base+0x17c>
   10b30:	b	10abc <conta_vitorias@@Base+0x13c>
   10b34:	mov	sl, r6
   10b38:	b	10b40 <conta_vitorias@@Base+0x1c0>
   10b3c:	mov	sl, #0
   10b40:	mov	r0, sl
   10b44:	sub	sp, fp, #28
   10b48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10b4c:	ldrdeq	r0, [r0], -r4
   10b50:	muleq	r0, r0, r2

00010b54 <main@@Base>:
   10b54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10b58:	add	fp, sp, #28
   10b5c:	sub	sp, sp, #4
   10b60:	ldr	r0, [pc, #176]	; 10c18 <main@@Base+0xc4>
   10b64:	ldr	r1, [pc, #176]	; 10c1c <main@@Base+0xc8>
   10b68:	add	r0, pc, r0
   10b6c:	add	r1, pc, r1
   10b70:	bl	10800 <fopen@plt>
   10b74:	mov	r4, r0
   10b78:	mov	r0, #0
   10b7c:	mov	r1, sp
   10b80:	str	r0, [sp]
   10b84:	mov	r0, r4
   10b88:	bl	10980 <conta_vitorias@@Base>
   10b8c:	ldr	r6, [pc, #140]	; 10c20 <main@@Base+0xcc>
   10b90:	mov	r5, r0
   10b94:	mov	r1, #12
   10b98:	mov	r2, #1
   10b9c:	ldr	r6, [pc, r6]
   10ba0:	ldr	r3, [r6]
   10ba4:	ldr	r0, [pc, #120]	; 10c24 <main@@Base+0xd0>
   10ba8:	add	r0, pc, r0
   10bac:	bl	10824 <fwrite@plt>
   10bb0:	cmp	r5, #0
   10bb4:	beq	10bc4 <main@@Base+0x70>
   10bb8:	ldr	r7, [sp]
   10bbc:	cmp	r7, #1
   10bc0:	bge	10be0 <main@@Base+0x8c>
   10bc4:	mov	r0, r5
   10bc8:	bl	1080c <free@plt>
   10bcc:	mov	r0, r4
   10bd0:	bl	10878 <fclose@plt>
   10bd4:	mov	r0, #0
   10bd8:	sub	sp, fp, #28
   10bdc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10be0:	ldr	r8, [pc, #64]	; 10c28 <main@@Base+0xd4>
   10be4:	mov	sl, #0
   10be8:	mov	r9, r5
   10bec:	add	r8, pc, r8
   10bf0:	ldr	r3, [r9, #16]
   10bf4:	ldr	r0, [r6]
   10bf8:	mov	r1, r8
   10bfc:	mov	r2, r9
   10c00:	bl	1086c <fprintf@plt>
   10c04:	add	sl, sl, #1
   10c08:	add	r9, r9, #20
   10c0c:	cmp	sl, r7
   10c10:	bge	10bc4 <main@@Base+0x70>
   10c14:	b	10bf0 <main@@Base+0x9c>
   10c18:	andeq	r0, r0, pc, lsr #2
   10c1c:	andeq	r0, r0, r3, lsr r1
   10c20:	andeq	r0, r1, r0, lsr #9
   10c24:	strdeq	r0, [r0], -r9
   10c28:	andeq	r0, r0, r2, asr #1

00010c2c <__libc_csu_init@@Base>:
   10c2c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10c30:	mov	r7, r0
   10c34:	ldr	r6, [pc, #72]	; 10c84 <__libc_csu_init@@Base+0x58>
   10c38:	ldr	r5, [pc, #72]	; 10c88 <__libc_csu_init@@Base+0x5c>
   10c3c:	add	r6, pc, r6
   10c40:	add	r5, pc, r5
   10c44:	sub	r6, r6, r5
   10c48:	mov	r8, r1
   10c4c:	mov	r9, r2
   10c50:	bl	107c8 <strcmp@plt-0x20>
   10c54:	asrs	r6, r6, #2
   10c58:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10c5c:	mov	r4, #0
   10c60:	add	r4, r4, #1
   10c64:	ldr	r3, [r5], #4
   10c68:	mov	r2, r9
   10c6c:	mov	r1, r8
   10c70:	mov	r0, r7
   10c74:	blx	r3
   10c78:	cmp	r6, r4
   10c7c:	bne	10c60 <__libc_csu_init@@Base+0x34>
   10c80:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10c84:	andeq	r0, r1, r8, asr #5
   10c88:	andeq	r0, r1, r0, asr #5

00010c8c <__libc_csu_fini@@Base>:
   10c8c:	bx	lr

Disassembly of section .fini:

00010c90 <.fini>:
   10c90:	push	{r3, lr}
   10c94:	pop	{r3, pc}
