
../repos/sgerbino-table-2fdd8d0/bin/table_binary_search_test:     file format elf32-littlearm


Disassembly of section .init:

000128e0 <.init>:
   128e0:	push	{r3, lr}
   128e4:	bl	12c0c <_start@@Base+0x3c>
   128e8:	pop	{r3, pc}

Disassembly of section .plt:

000128ec <strcmp@plt-0x14>:
   128ec:	push	{lr}		; (str lr, [sp, #-4]!)
   128f0:	ldr	lr, [pc, #4]	; 128fc <strcmp@plt-0x4>
   128f4:	add	lr, pc, lr
   128f8:	ldr	pc, [lr, #8]!
   128fc:	andeq	r4, r1, r4, lsl #14

00012900 <strcmp@plt>:
   12900:	add	ip, pc, #0, 12
   12904:	add	ip, ip, #20, 20	; 0x14000
   12908:	ldr	pc, [ip, #1796]!	; 0x704

0001290c <printf@plt>:
   1290c:	add	ip, pc, #0, 12
   12910:	add	ip, ip, #20, 20	; 0x14000
   12914:	ldr	pc, [ip, #1788]!	; 0x6fc

00012918 <free@plt>:
   12918:	add	ip, pc, #0, 12
   1291c:	add	ip, ip, #20, 20	; 0x14000
   12920:	ldr	pc, [ip, #1780]!	; 0x6f4

00012924 <realloc@plt>:
   12924:	add	ip, pc, #0, 12
   12928:	add	ip, ip, #20, 20	; 0x14000
   1292c:	ldr	pc, [ip, #1772]!	; 0x6ec

00012930 <strcpy@plt>:
   12930:	add	ip, pc, #0, 12
   12934:	add	ip, ip, #20, 20	; 0x14000
   12938:	ldr	pc, [ip, #1764]!	; 0x6e4

0001293c <malloc@plt>:
   1293c:	add	ip, pc, #0, 12
   12940:	add	ip, ip, #20, 20	; 0x14000
   12944:	ldr	pc, [ip, #1756]!	; 0x6dc

00012948 <__libc_start_main@plt>:
   12948:	add	ip, pc, #0, 12
   1294c:	add	ip, ip, #20, 20	; 0x14000
   12950:	ldr	pc, [ip, #1748]!	; 0x6d4

00012954 <__gmon_start__@plt>:
   12954:	add	ip, pc, #0, 12
   12958:	add	ip, ip, #20, 20	; 0x14000
   1295c:	ldr	pc, [ip, #1740]!	; 0x6cc

00012960 <strlen@plt>:
   12960:	add	ip, pc, #0, 12
   12964:	add	ip, ip, #20, 20	; 0x14000
   12968:	ldr	pc, [ip, #1732]!	; 0x6c4

0001296c <snprintf@plt>:
   1296c:	add	ip, pc, #0, 12
   12970:	add	ip, ip, #20, 20	; 0x14000
   12974:	ldr	pc, [ip, #1724]!	; 0x6bc

00012978 <__isoc99_sscanf@plt>:
   12978:	add	ip, pc, #0, 12
   1297c:	add	ip, ip, #20, 20	; 0x14000
   12980:	ldr	pc, [ip, #1716]!	; 0x6b4

00012984 <abort@plt>:
   12984:	add	ip, pc, #0, 12
   12988:	add	ip, ip, #20, 20	; 0x14000
   1298c:	ldr	pc, [ip, #1708]!	; 0x6ac

Disassembly of section .text:

00012990 <main@@Base>:
   12990:	strd	r4, [sp, #-28]!	; 0xffffffe4
   12994:	mov	r4, #0
   12998:	strd	r6, [sp, #8]
   1299c:	mov	r6, r4
   129a0:	strd	r8, [sp, #16]
   129a4:	movw	r9, #52429	; 0xcccd
   129a8:	movt	r9, #52428	; 0xcccc
   129ac:	str	lr, [sp, #24]
   129b0:	vpush	{d8}
   129b4:	sub	sp, sp, #68	; 0x44
   129b8:	add	r5, sp, #8
   129bc:	vldr	s16, [pc, #488]	; 12bac <main@@Base+0x21c>
   129c0:	mov	r0, r5
   129c4:	bl	12cc0 <table_init@@Base>
   129c8:	ldr	r1, [pc, #488]	; 12bb8 <main@@Base+0x228>
   129cc:	mov	r2, r4
   129d0:	mov	r0, r5
   129d4:	vldr	s17, [pc, #468]	; 12bb0 <main@@Base+0x220>
   129d8:	add	r1, pc, r1
   129dc:	bl	136f0 <table_add_column@@Base>
   129e0:	ldr	r1, [pc, #468]	; 12bbc <main@@Base+0x22c>
   129e4:	mov	r8, r0
   129e8:	mov	r2, #16
   129ec:	mov	r0, r5
   129f0:	add	r1, pc, r1
   129f4:	bl	136f0 <table_add_column@@Base>
   129f8:	mov	r7, r0
   129fc:	b	12a5c <main@@Base+0xcc>
   12a00:	lsr	r3, r3, #3
   12a04:	add	r3, r3, r3, lsl #2
   12a08:	cmp	r4, r3, lsl #1
   12a0c:	bne	12a18 <main@@Base+0x88>
   12a10:	vldr	s16, [pc, #404]	; 12bac <main@@Base+0x21c>
   12a14:	add	r6, r6, #1
   12a18:	tst	r4, #1
   12a1c:	mov	r0, r5
   12a20:	vaddeq.f32	s16, s16, s17
   12a24:	bl	150c0 <table_add_row@@Base>
   12a28:	mov	r3, r6
   12a2c:	mov	r2, r8
   12a30:	mov	r1, r4
   12a34:	mov	r0, r5
   12a38:	bl	15700 <table_set_int@@Base>
   12a3c:	mov	r2, r7
   12a40:	mov	r1, r4
   12a44:	vmov.f32	s0, s16
   12a48:	mov	r0, r5
   12a4c:	bl	15930 <table_set_float@@Base>
   12a50:	cmp	r4, #99	; 0x63
   12a54:	beq	12a9c <main@@Base+0x10c>
   12a58:	add	r4, r4, #1
   12a5c:	cmp	r4, #0
   12a60:	umull	r2, r3, r9, r4
   12a64:	bne	12a00 <main@@Base+0x70>
   12a68:	mov	r0, r5
   12a6c:	bl	150c0 <table_add_row@@Base>
   12a70:	mov	r2, r8
   12a74:	mov	r1, r4
   12a78:	mov	r3, r6
   12a7c:	mov	r0, r5
   12a80:	bl	15700 <table_set_int@@Base>
   12a84:	vmov.f32	s0, s16
   12a88:	mov	r2, r7
   12a8c:	mov	r1, r4
   12a90:	mov	r0, r5
   12a94:	bl	15930 <table_set_float@@Base>
   12a98:	b	12a58 <main@@Base+0xc8>
   12a9c:	mov	r1, r8
   12aa0:	mov	r3, #0
   12aa4:	mov	r2, #4
   12aa8:	mov	r0, r5
   12aac:	bl	14890 <table_sorted_find_int@@Base>
   12ab0:	mov	r6, r0
   12ab4:	mov	r1, r8
   12ab8:	mov	r3, #1
   12abc:	mov	r2, #4
   12ac0:	mov	r0, r5
   12ac4:	bl	14890 <table_sorted_find_int@@Base>
   12ac8:	cmp	r6, #40	; 0x28
   12acc:	mov	r4, r0
   12ad0:	moveq	r8, #0
   12ad4:	beq	12aec <main@@Base+0x15c>
   12ad8:	ldr	r0, [pc, #224]	; 12bc0 <main@@Base+0x230>
   12adc:	mov	r1, r6
   12ae0:	mvn	r8, #0
   12ae4:	add	r0, pc, r0
   12ae8:	bl	1290c <printf@plt>
   12aec:	cmp	r4, #49	; 0x31
   12af0:	beq	12b08 <main@@Base+0x178>
   12af4:	ldr	r0, [pc, #200]	; 12bc4 <main@@Base+0x234>
   12af8:	mov	r1, r4
   12afc:	mvn	r8, #0
   12b00:	add	r0, pc, r0
   12b04:	bl	1290c <printf@plt>
   12b08:	mov	r3, r6
   12b0c:	mov	r2, #0
   12b10:	vldr	s0, [pc, #156]	; 12bb4 <main@@Base+0x224>
   12b14:	mov	r1, r7
   12b18:	mov	r0, r5
   12b1c:	str	r4, [sp]
   12b20:	bl	14dd0 <table_sorted_subset_find_float@@Base>
   12b24:	mov	r9, r0
   12b28:	mov	r3, r6
   12b2c:	vldr	s0, [pc, #128]	; 12bb4 <main@@Base+0x224>
   12b30:	mov	r1, r7
   12b34:	mov	r2, #1
   12b38:	str	r4, [sp]
   12b3c:	mov	r0, r5
   12b40:	bl	14dd0 <table_sorted_subset_find_float@@Base>
   12b44:	cmp	r9, #42	; 0x2a
   12b48:	mov	r4, r0
   12b4c:	beq	12b64 <main@@Base+0x1d4>
   12b50:	ldr	r0, [pc, #112]	; 12bc8 <main@@Base+0x238>
   12b54:	mov	r1, r9
   12b58:	mvn	r8, #0
   12b5c:	add	r0, pc, r0
   12b60:	bl	1290c <printf@plt>
   12b64:	cmp	r4, #43	; 0x2b
   12b68:	bne	12b94 <main@@Base+0x204>
   12b6c:	mov	r0, r5
   12b70:	bl	12d28 <table_destroy@@Base>
   12b74:	mov	r0, r8
   12b78:	add	sp, sp, #68	; 0x44
   12b7c:	vpop	{d8}
   12b80:	ldrd	r4, [sp]
   12b84:	ldrd	r6, [sp, #8]
   12b88:	ldrd	r8, [sp, #16]
   12b8c:	add	sp, sp, #24
   12b90:	pop	{pc}		; (ldr pc, [sp], #4)
   12b94:	ldr	r0, [pc, #48]	; 12bcc <main@@Base+0x23c>
   12b98:	mov	r1, r4
   12b9c:	mvn	r8, #0
   12ba0:	add	r0, pc, r0
   12ba4:	bl	1290c <printf@plt>
   12ba8:	b	12b6c <main@@Base+0x1dc>
   12bac:	andeq	r0, r0, r0
   12bb0:	cdpcc	0, 8, cr0, cr0, cr0, {0}
   12bb4:	svccc	0x00000000
   12bb8:	andeq	r3, r0, r8, ror sp
   12bbc:	andeq	r3, r0, r4, ror #26
   12bc0:	andeq	r3, r0, r4, ror ip
   12bc4:	muleq	r0, r0, ip
   12bc8:	andeq	r3, r0, ip, ror #24
   12bcc:	andeq	r3, r0, r8, ror #24

00012bd0 <_start@@Base>:
   12bd0:	mov	fp, #0
   12bd4:	mov	lr, #0
   12bd8:	pop	{r1}		; (ldr r1, [sp], #4)
   12bdc:	mov	r2, sp
   12be0:	push	{r2}		; (str r2, [sp, #-4]!)
   12be4:	push	{r0}		; (str r0, [sp, #-4]!)
   12be8:	ldr	ip, [pc, #16]	; 12c00 <_start@@Base+0x30>
   12bec:	push	{ip}		; (str ip, [sp, #-4]!)
   12bf0:	ldr	r0, [pc, #12]	; 12c04 <_start@@Base+0x34>
   12bf4:	ldr	r3, [pc, #12]	; 12c08 <_start@@Base+0x38>
   12bf8:	bl	12948 <__libc_start_main@plt>
   12bfc:	bl	12984 <abort@plt>
   12c00:	andeq	r6, r1, r8, asr #14
   12c04:	muleq	r1, r0, r9
   12c08:	andeq	r6, r1, r8, ror #13
   12c0c:	ldr	r3, [pc, #20]	; 12c28 <_start@@Base+0x58>
   12c10:	ldr	r2, [pc, #20]	; 12c2c <_start@@Base+0x5c>
   12c14:	add	r3, pc, r3
   12c18:	ldr	r2, [r3, r2]
   12c1c:	cmp	r2, #0
   12c20:	bxeq	lr
   12c24:	b	12954 <__gmon_start__@plt>
   12c28:	andeq	r4, r1, r4, ror #7
   12c2c:	andeq	r0, r0, r0, rrx
   12c30:	ldr	r0, [pc, #24]	; 12c50 <_start@@Base+0x80>
   12c34:	ldr	r3, [pc, #24]	; 12c54 <_start@@Base+0x84>
   12c38:	cmp	r3, r0
   12c3c:	bxeq	lr
   12c40:	ldr	r3, [pc, #16]	; 12c58 <_start@@Base+0x88>
   12c44:	cmp	r3, #0
   12c48:	bxeq	lr
   12c4c:	bx	r3
   12c50:	andeq	r7, r2, r8, lsr #1
   12c54:	andeq	r7, r2, r8, lsr #1
   12c58:	andeq	r0, r0, r0
   12c5c:	ldr	r0, [pc, #36]	; 12c88 <_start@@Base+0xb8>
   12c60:	ldr	r1, [pc, #36]	; 12c8c <_start@@Base+0xbc>
   12c64:	sub	r1, r1, r0
   12c68:	asr	r1, r1, #2
   12c6c:	add	r1, r1, r1, lsr #31
   12c70:	asrs	r1, r1, #1
   12c74:	bxeq	lr
   12c78:	ldr	r3, [pc, #16]	; 12c90 <_start@@Base+0xc0>
   12c7c:	cmp	r3, #0
   12c80:	bxeq	lr
   12c84:	bx	r3
   12c88:	andeq	r7, r2, r8, lsr #1
   12c8c:	andeq	r7, r2, r8, lsr #1
   12c90:	andeq	r0, r0, r0
   12c94:	push	{r4, lr}
   12c98:	ldr	r4, [pc, #24]	; 12cb8 <_start@@Base+0xe8>
   12c9c:	ldrb	r3, [r4]
   12ca0:	cmp	r3, #0
   12ca4:	popne	{r4, pc}
   12ca8:	bl	12c30 <_start@@Base+0x60>
   12cac:	mov	r3, #1
   12cb0:	strb	r3, [r4]
   12cb4:	pop	{r4, pc}
   12cb8:	andeq	r7, r2, r8, lsr #1
   12cbc:	b	12c5c <_start@@Base+0x8c>

00012cc0 <table_init@@Base>:
   12cc0:	mov	r3, #0
   12cc4:	mov	r2, #10
   12cc8:	mov	r1, #20
   12ccc:	str	r3, [r0]
   12cd0:	str	r3, [r0, #4]
   12cd4:	strd	r2, [r0, #8]
   12cd8:	str	r3, [r0, #16]
   12cdc:	str	r3, [r0, #20]
   12ce0:	str	r1, [r0, #24]
   12ce4:	str	r3, [r0, #28]
   12ce8:	str	r3, [r0, #32]
   12cec:	str	r3, [r0, #36]	; 0x24
   12cf0:	str	r3, [r0, #40]	; 0x28
   12cf4:	str	r3, [r0, #44]	; 0x2c
   12cf8:	strd	r2, [r0, #48]	; 0x30
   12cfc:	bx	lr

00012d00 <table_new@@Base>:
   12d00:	mov	r0, #56	; 0x38
   12d04:	str	r4, [sp, #-8]!
   12d08:	str	lr, [sp, #4]
   12d0c:	bl	1293c <malloc@plt>
   12d10:	mov	r4, r0
   12d14:	bl	12cc0 <table_init@@Base>
   12d18:	mov	r0, r4
   12d1c:	ldr	r4, [sp]
   12d20:	add	sp, sp, #4
   12d24:	pop	{pc}		; (ldr pc, [sp], #4)

00012d28 <table_destroy@@Base>:
   12d28:	strd	r4, [sp, #-16]!
   12d2c:	subs	r4, r0, #0
   12d30:	str	r6, [sp, #8]
   12d34:	str	lr, [sp, #12]
   12d38:	beq	12e04 <table_destroy@@Base+0xdc>
   12d3c:	mvn	r2, #0
   12d40:	mov	r3, #64	; 0x40
   12d44:	mov	r1, r2
   12d48:	bl	135e0 <table_notify@@Base>
   12d4c:	mov	r0, r4
   12d50:	bl	15074 <table_get_row_length@@Base>
   12d54:	subs	r6, r0, #0
   12d58:	ble	12d78 <table_destroy@@Base+0x50>
   12d5c:	mov	r5, #0
   12d60:	mov	r1, r5
   12d64:	mov	r0, r4
   12d68:	add	r5, r5, #1
   12d6c:	bl	15194 <table_row_destroy@@Base>
   12d70:	cmp	r6, r5
   12d74:	bne	12d60 <table_destroy@@Base+0x38>
   12d78:	ldr	r0, [r4, #16]
   12d7c:	cmp	r0, #0
   12d80:	beq	12d88 <table_destroy@@Base+0x60>
   12d84:	bl	12918 <free@plt>
   12d88:	mov	r0, r4
   12d8c:	bl	13674 <table_get_column_length@@Base>
   12d90:	subs	r6, r0, #0
   12d94:	ble	12db4 <table_destroy@@Base+0x8c>
   12d98:	mov	r5, #0
   12d9c:	mov	r1, r5
   12da0:	mov	r0, r4
   12da4:	add	r5, r5, #1
   12da8:	bl	1382c <table_column_destroy@@Base>
   12dac:	cmp	r6, r5
   12db0:	bne	12d9c <table_destroy@@Base+0x74>
   12db4:	ldr	r0, [r4]
   12db8:	cmp	r0, #0
   12dbc:	beq	12dc4 <table_destroy@@Base+0x9c>
   12dc0:	bl	12918 <free@plt>
   12dc4:	ldr	r0, [r4, #36]	; 0x24
   12dc8:	cmp	r0, #0
   12dcc:	beq	12dd4 <table_destroy@@Base+0xac>
   12dd0:	bl	12918 <free@plt>
   12dd4:	ldr	r0, [r4, #40]	; 0x28
   12dd8:	cmp	r0, #0
   12ddc:	beq	12de4 <table_destroy@@Base+0xbc>
   12de0:	bl	12918 <free@plt>
   12de4:	ldr	r0, [r4, #44]	; 0x2c
   12de8:	cmp	r0, #0
   12dec:	beq	12e04 <table_destroy@@Base+0xdc>
   12df0:	ldrd	r4, [sp]
   12df4:	ldr	r6, [sp, #8]
   12df8:	ldr	lr, [sp, #12]
   12dfc:	add	sp, sp, #16
   12e00:	b	12918 <free@plt>
   12e04:	ldrd	r4, [sp]
   12e08:	ldr	r6, [sp, #8]
   12e0c:	add	sp, sp, #12
   12e10:	pop	{pc}		; (ldr pc, [sp], #4)

00012e14 <table_delete@@Base>:
   12e14:	str	r4, [sp, #-8]!
   12e18:	mov	r4, r0
   12e1c:	str	lr, [sp, #4]
   12e20:	bl	12d28 <table_destroy@@Base>
   12e24:	mov	r0, r4
   12e28:	ldr	r4, [sp]
   12e2c:	ldr	lr, [sp, #4]
   12e30:	add	sp, sp, #8
   12e34:	b	12918 <free@plt>

00012e38 <table_dupe@@Base>:
   12e38:	strd	r4, [sp, #-32]!	; 0xffffffe0
   12e3c:	strd	r6, [sp, #8]
   12e40:	mov	r6, r0
   12e44:	strd	r8, [sp, #16]
   12e48:	str	sl, [sp, #24]
   12e4c:	str	lr, [sp, #28]
   12e50:	sub	sp, sp, #16
   12e54:	bl	15074 <table_get_row_length@@Base>
   12e58:	mov	r9, r0
   12e5c:	mov	r0, r6
   12e60:	bl	13674 <table_get_column_length@@Base>
   12e64:	mov	r7, r0
   12e68:	bl	12d00 <table_new@@Base>
   12e6c:	cmp	r7, #0
   12e70:	mov	r8, r0
   12e74:	ble	12eb4 <table_dupe@@Base+0x7c>
   12e78:	mov	r4, #0
   12e7c:	mov	r1, r4
   12e80:	mov	r0, r6
   12e84:	bl	13a1c <table_get_column_name@@Base>
   12e88:	mov	r5, r0
   12e8c:	mov	r1, r4
   12e90:	mov	r0, r6
   12e94:	add	r4, r4, #1
   12e98:	bl	13a00 <table_get_column_data_type@@Base>
   12e9c:	mov	r2, r0
   12ea0:	mov	r1, r5
   12ea4:	mov	r0, r8
   12ea8:	bl	136f0 <table_add_column@@Base>
   12eac:	cmp	r7, r4
   12eb0:	bne	12e7c <table_dupe@@Base+0x44>
   12eb4:	cmp	r9, #0
   12eb8:	ble	12f90 <table_dupe@@Base+0x158>
   12ebc:	mov	r5, #0
   12ec0:	add	sl, sp, #12
   12ec4:	mov	r0, r8
   12ec8:	bl	150c0 <table_add_row@@Base>
   12ecc:	cmp	r7, #0
   12ed0:	ble	12f84 <table_dupe@@Base+0x14c>
   12ed4:	mov	r4, #0
   12ed8:	mov	r1, r4
   12edc:	mov	r0, r6
   12ee0:	bl	13a00 <table_get_column_data_type@@Base>
   12ee4:	cmp	r0, #23
   12ee8:	addls	pc, pc, r0, lsl #2
   12eec:	b	12f78 <table_dupe@@Base+0x140>
   12ef0:	b	13000 <table_dupe@@Base+0x1c8>
   12ef4:	b	13274 <table_dupe@@Base+0x43c>
   12ef8:	b	1324c <table_dupe@@Base+0x414>
   12efc:	b	13224 <table_dupe@@Base+0x3ec>
   12f00:	b	131fc <table_dupe@@Base+0x3c4>
   12f04:	b	13314 <table_dupe@@Base+0x4dc>
   12f08:	b	132ec <table_dupe@@Base+0x4b4>
   12f0c:	b	132c4 <table_dupe@@Base+0x48c>
   12f10:	b	1329c <table_dupe@@Base+0x464>
   12f14:	b	131d4 <table_dupe@@Base+0x39c>
   12f18:	b	131ac <table_dupe@@Base+0x374>
   12f1c:	b	13184 <table_dupe@@Base+0x34c>
   12f20:	b	1315c <table_dupe@@Base+0x324>
   12f24:	b	13134 <table_dupe@@Base+0x2fc>
   12f28:	b	1310c <table_dupe@@Base+0x2d4>
   12f2c:	b	130e4 <table_dupe@@Base+0x2ac>
   12f30:	b	130c0 <table_dupe@@Base+0x288>
   12f34:	b	1309c <table_dupe@@Base+0x264>
   12f38:	b	13078 <table_dupe@@Base+0x240>
   12f3c:	b	13050 <table_dupe@@Base+0x218>
   12f40:	b	13028 <table_dupe@@Base+0x1f0>
   12f44:	b	12fd8 <table_dupe@@Base+0x1a0>
   12f48:	b	12fb0 <table_dupe@@Base+0x178>
   12f4c:	b	12f50 <table_dupe@@Base+0x118>
   12f50:	mov	r2, r4
   12f54:	mov	r1, r5
   12f58:	mov	r0, r6
   12f5c:	bl	15070 <table_get_ptr@@Base>
   12f60:	mov	r3, sl
   12f64:	mov	r2, r4
   12f68:	str	r0, [sp, #12]
   12f6c:	mov	r1, r5
   12f70:	mov	r0, r8
   12f74:	bl	15a00 <table_set_ptr@@Base>
   12f78:	add	r4, r4, #1
   12f7c:	cmp	r7, r4
   12f80:	bne	12ed8 <table_dupe@@Base+0xa0>
   12f84:	add	r5, r5, #1
   12f88:	cmp	r9, r5
   12f8c:	bne	12ec4 <table_dupe@@Base+0x8c>
   12f90:	mov	r0, r8
   12f94:	add	sp, sp, #16
   12f98:	ldrd	r4, [sp]
   12f9c:	ldrd	r6, [sp, #8]
   12fa0:	ldrd	r8, [sp, #16]
   12fa4:	ldr	sl, [sp, #24]
   12fa8:	add	sp, sp, #28
   12fac:	pop	{pc}		; (ldr pc, [sp], #4)
   12fb0:	mov	r2, r4
   12fb4:	mov	r1, r5
   12fb8:	mov	r0, r6
   12fbc:	bl	14ec4 <table_get_bool@@Base>
   12fc0:	mov	r3, r0
   12fc4:	mov	r2, r4
   12fc8:	mov	r1, r5
   12fcc:	mov	r0, r8
   12fd0:	bl	156dc <table_set_bool@@Base>
   12fd4:	b	12f78 <table_dupe@@Base+0x140>
   12fd8:	mov	r2, r4
   12fdc:	mov	r1, r5
   12fe0:	mov	r0, r6
   12fe4:	bl	1506c <table_get_string@@Base>
   12fe8:	mov	r3, r0
   12fec:	mov	r2, r4
   12ff0:	mov	r1, r5
   12ff4:	mov	r0, r8
   12ff8:	bl	1599c <table_set_string@@Base>
   12ffc:	b	12f78 <table_dupe@@Base+0x140>
   13000:	mov	r2, r4
   13004:	mov	r1, r5
   13008:	mov	r0, r6
   1300c:	bl	14ee0 <table_get_int@@Base>
   13010:	mov	r3, r0
   13014:	mov	r2, r4
   13018:	mov	r1, r5
   1301c:	mov	r0, r8
   13020:	bl	15700 <table_set_int@@Base>
   13024:	b	12f78 <table_dupe@@Base+0x140>
   13028:	mov	r2, r4
   1302c:	mov	r1, r5
   13030:	mov	r0, r6
   13034:	bl	15068 <table_get_uchar@@Base>
   13038:	mov	r3, r0
   1303c:	mov	r2, r4
   13040:	mov	r1, r5
   13044:	mov	r0, r8
   13048:	bl	159dc <table_set_uchar@@Base>
   1304c:	b	12f78 <table_dupe@@Base+0x140>
   13050:	mov	r2, r4
   13054:	mov	r1, r5
   13058:	mov	r0, r6
   1305c:	bl	15064 <table_get_char@@Base>
   13060:	mov	r3, r0
   13064:	mov	r2, r4
   13068:	mov	r1, r5
   1306c:	mov	r0, r8
   13070:	bl	159b8 <table_set_char@@Base>
   13074:	b	12f78 <table_dupe@@Base+0x140>
   13078:	mov	r2, r4
   1307c:	mov	r1, r5
   13080:	mov	r0, r6
   13084:	bl	15048 <table_get_ldouble@@Base>
   13088:	mov	r2, r4
   1308c:	mov	r1, r5
   13090:	mov	r0, r8
   13094:	bl	15978 <table_set_ldouble@@Base>
   13098:	b	12f78 <table_dupe@@Base+0x140>
   1309c:	mov	r2, r4
   130a0:	mov	r1, r5
   130a4:	mov	r0, r6
   130a8:	bl	1502c <table_get_double@@Base>
   130ac:	mov	r2, r4
   130b0:	mov	r1, r5
   130b4:	mov	r0, r8
   130b8:	bl	15954 <table_set_double@@Base>
   130bc:	b	12f78 <table_dupe@@Base+0x140>
   130c0:	mov	r2, r4
   130c4:	mov	r1, r5
   130c8:	mov	r0, r6
   130cc:	bl	15010 <table_get_float@@Base>
   130d0:	mov	r2, r4
   130d4:	mov	r1, r5
   130d8:	mov	r0, r8
   130dc:	bl	15930 <table_set_float@@Base>
   130e0:	b	12f78 <table_dupe@@Base+0x140>
   130e4:	mov	r2, r4
   130e8:	mov	r1, r5
   130ec:	mov	r0, r6
   130f0:	bl	1500c <table_get_ullong@@Base>
   130f4:	mov	r2, r4
   130f8:	strd	r0, [sp]
   130fc:	mov	r1, r5
   13100:	mov	r0, r8
   13104:	bl	15910 <table_set_ullong@@Base>
   13108:	b	12f78 <table_dupe@@Base+0x140>
   1310c:	mov	r2, r4
   13110:	mov	r1, r5
   13114:	mov	r0, r6
   13118:	bl	15008 <table_get_llong@@Base>
   1311c:	mov	r2, r4
   13120:	strd	r0, [sp]
   13124:	mov	r1, r5
   13128:	mov	r0, r8
   1312c:	bl	158f0 <table_set_llong@@Base>
   13130:	b	12f78 <table_dupe@@Base+0x140>
   13134:	mov	r2, r4
   13138:	mov	r1, r5
   1313c:	mov	r0, r6
   13140:	bl	14fec <table_get_ulong@@Base>
   13144:	mov	r3, r0
   13148:	mov	r2, r4
   1314c:	mov	r1, r5
   13150:	mov	r0, r8
   13154:	bl	158cc <table_set_ulong@@Base>
   13158:	b	12f78 <table_dupe@@Base+0x140>
   1315c:	mov	r2, r4
   13160:	mov	r1, r5
   13164:	mov	r0, r6
   13168:	bl	14fd0 <table_get_long@@Base>
   1316c:	mov	r3, r0
   13170:	mov	r2, r4
   13174:	mov	r1, r5
   13178:	mov	r0, r8
   1317c:	bl	158a8 <table_set_long@@Base>
   13180:	b	12f78 <table_dupe@@Base+0x140>
   13184:	mov	r2, r4
   13188:	mov	r1, r5
   1318c:	mov	r0, r6
   13190:	bl	14fcc <table_get_ushort@@Base>
   13194:	mov	r3, r0
   13198:	mov	r2, r4
   1319c:	mov	r1, r5
   131a0:	mov	r0, r8
   131a4:	bl	15884 <table_set_ushort@@Base>
   131a8:	b	12f78 <table_dupe@@Base+0x140>
   131ac:	mov	r2, r4
   131b0:	mov	r1, r5
   131b4:	mov	r0, r6
   131b8:	bl	14fc8 <table_get_short@@Base>
   131bc:	mov	r3, r0
   131c0:	mov	r2, r4
   131c4:	mov	r1, r5
   131c8:	mov	r0, r8
   131cc:	bl	15860 <table_set_short@@Base>
   131d0:	b	12f78 <table_dupe@@Base+0x140>
   131d4:	mov	r2, r4
   131d8:	mov	r1, r5
   131dc:	mov	r0, r6
   131e0:	bl	14fac <table_get_uint64@@Base>
   131e4:	mov	r2, r4
   131e8:	strd	r0, [sp]
   131ec:	mov	r1, r5
   131f0:	mov	r0, r8
   131f4:	bl	15840 <table_set_uint64@@Base>
   131f8:	b	12f78 <table_dupe@@Base+0x140>
   131fc:	mov	r2, r4
   13200:	mov	r1, r5
   13204:	mov	r0, r6
   13208:	bl	14f50 <table_get_int16@@Base>
   1320c:	mov	r3, r0
   13210:	mov	r2, r4
   13214:	mov	r1, r5
   13218:	mov	r0, r8
   1321c:	bl	15790 <table_set_int16@@Base>
   13220:	b	12f78 <table_dupe@@Base+0x140>
   13224:	mov	r2, r4
   13228:	mov	r1, r5
   1322c:	mov	r0, r6
   13230:	bl	14f34 <table_get_uint8@@Base>
   13234:	mov	r3, r0
   13238:	mov	r2, r4
   1323c:	mov	r1, r5
   13240:	mov	r0, r8
   13244:	bl	1576c <table_set_uint8@@Base>
   13248:	b	12f78 <table_dupe@@Base+0x140>
   1324c:	mov	r2, r4
   13250:	mov	r1, r5
   13254:	mov	r0, r6
   13258:	bl	14f18 <table_get_int8@@Base>
   1325c:	mov	r3, r0
   13260:	mov	r2, r4
   13264:	mov	r1, r5
   13268:	mov	r0, r8
   1326c:	bl	15748 <table_set_int8@@Base>
   13270:	b	12f78 <table_dupe@@Base+0x140>
   13274:	mov	r2, r4
   13278:	mov	r1, r5
   1327c:	mov	r0, r6
   13280:	bl	14efc <table_get_uint@@Base>
   13284:	mov	r3, r0
   13288:	mov	r2, r4
   1328c:	mov	r1, r5
   13290:	mov	r0, r8
   13294:	bl	15724 <table_set_uint@@Base>
   13298:	b	12f78 <table_dupe@@Base+0x140>
   1329c:	mov	r2, r4
   132a0:	mov	r1, r5
   132a4:	mov	r0, r6
   132a8:	bl	14f90 <table_get_int64@@Base>
   132ac:	mov	r2, r4
   132b0:	strd	r0, [sp]
   132b4:	mov	r1, r5
   132b8:	mov	r0, r8
   132bc:	bl	15820 <table_set_int64@@Base>
   132c0:	b	12f78 <table_dupe@@Base+0x140>
   132c4:	mov	r2, r4
   132c8:	mov	r1, r5
   132cc:	mov	r0, r6
   132d0:	bl	14f8c <table_get_uint32@@Base>
   132d4:	mov	r3, r0
   132d8:	mov	r2, r4
   132dc:	mov	r1, r5
   132e0:	mov	r0, r8
   132e4:	bl	157fc <table_set_uint32@@Base>
   132e8:	b	12f78 <table_dupe@@Base+0x140>
   132ec:	mov	r2, r4
   132f0:	mov	r1, r5
   132f4:	mov	r0, r6
   132f8:	bl	14f88 <table_get_int32@@Base>
   132fc:	mov	r3, r0
   13300:	mov	r2, r4
   13304:	mov	r1, r5
   13308:	mov	r0, r8
   1330c:	bl	157d8 <table_set_int32@@Base>
   13310:	b	12f78 <table_dupe@@Base+0x140>
   13314:	mov	r2, r4
   13318:	mov	r1, r5
   1331c:	mov	r0, r6
   13320:	bl	14f6c <table_get_uint16@@Base>
   13324:	mov	r3, r0
   13328:	mov	r2, r4
   1332c:	mov	r1, r5
   13330:	mov	r0, r8
   13334:	bl	157b4 <table_set_uint16@@Base>
   13338:	b	12f78 <table_dupe@@Base+0x140>

0001333c <table_get_major_version@@Base>:
   1333c:	mov	r0, #0
   13340:	bx	lr

00013344 <table_get_minor_version@@Base>:
   13344:	mov	r0, #0
   13348:	bx	lr

0001334c <table_get_patch_version@@Base>:
   1334c:	mov	r0, #0
   13350:	bx	lr

00013354 <table_get_version@@Base>:
   13354:	ldr	r0, [pc, #4]	; 13360 <table_get_version@@Base+0xc>
   13358:	add	r0, pc, r0
   1335c:	bx	lr
   13360:	andeq	r3, r0, ip, ror #9

00013364 <table_get_callback_length@@Base>:
   13364:	ldr	r0, [r0, #32]
   13368:	bx	lr

0001336c <table_register_callback@@Base>:
   1336c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13370:	ldr	r5, [r0, #32]
   13374:	strd	r6, [sp, #8]
   13378:	str	r8, [sp, #16]
   1337c:	str	lr, [sp, #20]
   13380:	cmp	r5, #0
   13384:	ble	133e0 <table_register_callback@@Base+0x74>
   13388:	ldr	lr, [r0, #36]	; 0x24
   1338c:	mov	ip, #0
   13390:	sub	lr, lr, #4
   13394:	b	133a4 <table_register_callback@@Base+0x38>
   13398:	add	ip, ip, #1
   1339c:	cmp	ip, r5
   133a0:	beq	133e0 <table_register_callback@@Base+0x74>
   133a4:	ldr	r4, [lr, #4]!
   133a8:	lsl	r6, ip, #2
   133ac:	cmp	r1, r4
   133b0:	bne	13398 <table_register_callback@@Base+0x2c>
   133b4:	ldr	r4, [r0, #40]	; 0x28
   133b8:	ldr	r4, [r4, ip, lsl #2]
   133bc:	cmp	r2, r4
   133c0:	bne	13398 <table_register_callback@@Base+0x2c>
   133c4:	cmp	ip, #0
   133c8:	beq	133e0 <table_register_callback@@Base+0x74>
   133cc:	ldr	r2, [r0, #44]	; 0x2c
   133d0:	ldr	r7, [r2, r6]
   133d4:	orr	r7, r7, r3
   133d8:	str	r7, [r2, r6]
   133dc:	b	13430 <table_register_callback@@Base+0xc4>
   133e0:	mov	r7, r3
   133e4:	ldr	r3, [r0, #48]	; 0x30
   133e8:	mov	r6, r2
   133ec:	mov	r8, r1
   133f0:	mov	r4, r0
   133f4:	udiv	r2, r5, r3
   133f8:	mls	r5, r3, r2, r5
   133fc:	cmp	r5, #0
   13400:	beq	13444 <table_register_callback@@Base+0xd8>
   13404:	mov	r0, r4
   13408:	bl	13364 <table_get_callback_length@@Base>
   1340c:	ldr	r3, [r4, #36]	; 0x24
   13410:	str	r8, [r3, r0, lsl #2]
   13414:	ldr	r3, [r4, #40]	; 0x28
   13418:	str	r6, [r3, r0, lsl #2]
   1341c:	ldr	r3, [r4, #44]	; 0x2c
   13420:	str	r7, [r3, r0, lsl #2]
   13424:	ldr	r3, [r4, #32]
   13428:	add	r3, r3, #1
   1342c:	str	r3, [r4, #32]
   13430:	ldrd	r4, [sp]
   13434:	ldrd	r6, [sp, #8]
   13438:	ldr	r8, [sp, #16]
   1343c:	add	sp, sp, #20
   13440:	pop	{pc}		; (ldr pc, [sp], #4)
   13444:	ldr	r2, [r4, #52]	; 0x34
   13448:	ldr	r0, [r0, #36]	; 0x24
   1344c:	add	r3, r3, r2
   13450:	lsl	r1, r3, #2
   13454:	str	r3, [r4, #52]	; 0x34
   13458:	bl	12924 <realloc@plt>
   1345c:	ldr	r1, [r4, #52]	; 0x34
   13460:	str	r0, [r4, #36]	; 0x24
   13464:	ldr	r0, [r4, #40]	; 0x28
   13468:	lsl	r1, r1, #2
   1346c:	bl	12924 <realloc@plt>
   13470:	ldr	r1, [r4, #52]	; 0x34
   13474:	str	r0, [r4, #40]	; 0x28
   13478:	ldr	r0, [r4, #44]	; 0x2c
   1347c:	lsl	r1, r1, #2
   13480:	bl	12924 <realloc@plt>
   13484:	str	r0, [r4, #44]	; 0x2c
   13488:	b	13404 <table_register_callback@@Base+0x98>

0001348c <table_unregister_callback@@Base>:
   1348c:	ldr	ip, [r0, #32]
   13490:	cmp	ip, #0
   13494:	bxle	lr
   13498:	strd	r4, [sp, #-16]!
   1349c:	mov	r3, #0
   134a0:	str	r6, [sp, #8]
   134a4:	ldr	r6, [r0, #36]	; 0x24
   134a8:	str	lr, [sp, #12]
   134ac:	sub	r4, r6, #4
   134b0:	b	134c0 <table_unregister_callback@@Base+0x34>
   134b4:	add	r3, r3, #1
   134b8:	cmp	r3, ip
   134bc:	beq	135a0 <table_unregister_callback@@Base+0x114>
   134c0:	ldr	r5, [r4, #4]!
   134c4:	lsl	lr, r3, #2
   134c8:	cmp	r1, r5
   134cc:	bne	134b4 <table_unregister_callback@@Base+0x28>
   134d0:	ldr	r5, [r0, #40]	; 0x28
   134d4:	ldr	r5, [r5, r3, lsl #2]
   134d8:	cmp	r2, r5
   134dc:	bne	134b4 <table_unregister_callback@@Base+0x28>
   134e0:	sub	ip, ip, #1
   134e4:	cmp	ip, r3
   134e8:	ble	13538 <table_unregister_callback@@Base+0xac>
   134ec:	add	r3, r3, #1
   134f0:	lsl	r2, r3, #2
   134f4:	b	134fc <table_unregister_callback@@Base+0x70>
   134f8:	ldr	r6, [r0, #36]	; 0x24
   134fc:	ldr	r1, [r6, r2]
   13500:	str	r1, [r6, lr]
   13504:	ldr	r1, [r0, #40]	; 0x28
   13508:	ldr	ip, [r1, r2]
   1350c:	str	ip, [r1, lr]
   13510:	ldr	r1, [r0, #44]	; 0x2c
   13514:	ldr	ip, [r1, r2]
   13518:	add	r2, r2, #4
   1351c:	str	ip, [r1, lr]
   13520:	lsl	lr, r3, #2
   13524:	ldr	ip, [r0, #32]
   13528:	sub	ip, ip, #1
   1352c:	cmp	ip, r3
   13530:	add	r3, r3, #1
   13534:	bgt	134f8 <table_unregister_callback@@Base+0x6c>
   13538:	ldr	r2, [r0, #48]	; 0x30
   1353c:	str	ip, [r0, #32]
   13540:	udiv	r3, ip, r2
   13544:	mls	ip, r2, r3, ip
   13548:	cmp	ip, #0
   1354c:	bne	135a0 <table_unregister_callback@@Base+0x114>
   13550:	mov	r4, r0
   13554:	ldr	r0, [r0, #36]	; 0x24
   13558:	ldr	r5, [r4, #52]	; 0x34
   1355c:	sub	r5, r5, r2
   13560:	cmp	r5, #0
   13564:	str	r5, [r4, #52]	; 0x34
   13568:	beq	135b0 <table_unregister_callback@@Base+0x124>
   1356c:	lsl	r1, r5, #2
   13570:	bl	12924 <realloc@plt>
   13574:	ldr	r1, [r4, #52]	; 0x34
   13578:	str	r0, [r4, #36]	; 0x24
   1357c:	ldr	r0, [r4, #40]	; 0x28
   13580:	lsl	r1, r1, #2
   13584:	bl	12924 <realloc@plt>
   13588:	ldr	r1, [r4, #52]	; 0x34
   1358c:	str	r0, [r4, #40]	; 0x28
   13590:	ldr	r0, [r4, #44]	; 0x2c
   13594:	lsl	r1, r1, #2
   13598:	bl	12924 <realloc@plt>
   1359c:	str	r0, [r4, #44]	; 0x2c
   135a0:	ldrd	r4, [sp]
   135a4:	ldr	r6, [sp, #8]
   135a8:	add	sp, sp, #12
   135ac:	pop	{pc}		; (ldr pc, [sp], #4)
   135b0:	bl	12918 <free@plt>
   135b4:	ldr	r0, [r4, #40]	; 0x28
   135b8:	bl	12918 <free@plt>
   135bc:	ldr	r0, [r4, #44]	; 0x2c
   135c0:	bl	12918 <free@plt>
   135c4:	str	r5, [r4, #36]	; 0x24
   135c8:	str	r5, [r4, #40]	; 0x28
   135cc:	str	r5, [r4, #44]	; 0x2c
   135d0:	ldrd	r4, [sp]
   135d4:	ldr	r6, [sp, #8]
   135d8:	add	sp, sp, #12
   135dc:	pop	{pc}		; (ldr pc, [sp], #4)

000135e0 <table_notify@@Base>:
   135e0:	strd	r4, [sp, #-28]!	; 0xffffffe4
   135e4:	strd	r6, [sp, #8]
   135e8:	str	lr, [sp, #24]
   135ec:	ldr	lr, [r0, #32]
   135f0:	strd	r8, [sp, #16]
   135f4:	sub	sp, sp, #12
   135f8:	cmp	lr, #0
   135fc:	ble	1365c <table_notify@@Base+0x7c>
   13600:	mov	r6, r3
   13604:	mov	r8, r2
   13608:	mov	r7, r1
   1360c:	mov	r5, r0
   13610:	mov	r4, #0
   13614:	ldr	ip, [r5, #44]	; 0x2c
   13618:	mov	r3, r6
   1361c:	mov	r2, r8
   13620:	mov	r1, r7
   13624:	mov	r0, r5
   13628:	ldr	ip, [ip, r4, lsl #2]
   1362c:	tst	r6, ip
   13630:	beq	13650 <table_notify@@Base+0x70>
   13634:	ldr	ip, [r5, #36]	; 0x24
   13638:	ldr	lr, [r5, #40]	; 0x28
   1363c:	ldr	lr, [lr, r4, lsl #2]
   13640:	str	lr, [sp]
   13644:	ldr	r9, [ip, r4, lsl #2]
   13648:	blx	r9
   1364c:	ldr	lr, [r5, #32]
   13650:	add	r4, r4, #1
   13654:	cmp	lr, r4
   13658:	bgt	13614 <table_notify@@Base+0x34>
   1365c:	add	sp, sp, #12
   13660:	ldrd	r4, [sp]
   13664:	ldrd	r6, [sp, #8]
   13668:	ldrd	r8, [sp, #16]
   1366c:	add	sp, sp, #24
   13670:	pop	{pc}		; (ldr pc, [sp], #4)

00013674 <table_get_column_length@@Base>:
   13674:	ldr	r0, [r0, #4]
   13678:	bx	lr

0001367c <table_get_col_ptr@@Base>:
   1367c:	ldr	r0, [r0]
   13680:	add	r1, r1, r1, lsl #1
   13684:	add	r0, r0, r1, lsl #2
   13688:	bx	lr

0001368c <table_column_init@@Base>:
   1368c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13690:	mov	r5, r2
   13694:	strd	r6, [sp, #8]
   13698:	mov	r7, r3
   1369c:	str	r8, [sp, #16]
   136a0:	str	lr, [sp, #20]
   136a4:	ldr	r6, [sp, #24]
   136a8:	bl	1367c <table_get_col_ptr@@Base>
   136ac:	mov	r4, r0
   136b0:	mov	r0, r5
   136b4:	bl	12960 <strlen@plt>
   136b8:	add	r0, r0, #1
   136bc:	bl	1293c <malloc@plt>
   136c0:	cmp	r0, #0
   136c4:	str	r0, [r4]
   136c8:	beq	136d4 <table_column_init@@Base+0x48>
   136cc:	mov	r1, r5
   136d0:	bl	12930 <strcpy@plt>
   136d4:	ldr	r8, [sp, #16]
   136d8:	str	r7, [r4, #4]
   136dc:	str	r6, [r4, #8]
   136e0:	ldrd	r4, [sp]
   136e4:	ldrd	r6, [sp, #8]
   136e8:	add	sp, sp, #20
   136ec:	pop	{pc}		; (ldr pc, [sp], #4)

000136f0 <table_add_column@@Base>:
   136f0:	strd	r4, [sp, #-28]!	; 0xffffffe4
   136f4:	mov	r4, r0
   136f8:	strd	r6, [sp, #8]
   136fc:	mov	r7, r1
   13700:	mov	r6, r2
   13704:	strd	r8, [sp, #16]
   13708:	str	lr, [sp, #24]
   1370c:	sub	sp, sp, #12
   13710:	bl	13674 <table_get_column_length@@Base>
   13714:	ldr	r3, [r4, #8]
   13718:	udiv	r5, r0, r3
   1371c:	mls	r5, r5, r3, r0
   13720:	cmp	r5, #0
   13724:	beq	137c8 <table_add_column@@Base+0xd8>
   13728:	mov	r0, r4
   1372c:	bl	15074 <table_get_row_length@@Base>
   13730:	mov	r8, r0
   13734:	mov	r0, r4
   13738:	bl	13674 <table_get_column_length@@Base>
   1373c:	mov	r9, r0
   13740:	mov	r0, r6
   13744:	bl	1416c <table_get_default_compare_function_for_data_type@@Base>
   13748:	mov	r3, r6
   1374c:	mov	r2, r7
   13750:	str	r0, [sp]
   13754:	mov	r1, r9
   13758:	mov	r0, r4
   1375c:	bl	1368c <table_column_init@@Base>
   13760:	cmp	r8, #0
   13764:	ble	13788 <table_add_column@@Base+0x98>
   13768:	mov	r5, #0
   1376c:	mov	r1, r5
   13770:	mov	r2, r9
   13774:	mov	r0, r4
   13778:	add	r5, r5, #1
   1377c:	bl	16628 <table_cell_init@@Base>
   13780:	cmp	r8, r5
   13784:	bne	1376c <table_add_column@@Base+0x7c>
   13788:	mov	r0, r4
   1378c:	bl	13674 <table_get_column_length@@Base>
   13790:	mov	r2, r0
   13794:	mov	r3, #8
   13798:	mov	r0, r4
   1379c:	mvn	r1, #0
   137a0:	bl	135e0 <table_notify@@Base>
   137a4:	ldr	r0, [r4, #4]
   137a8:	add	r3, r0, #1
   137ac:	str	r3, [r4, #4]
   137b0:	add	sp, sp, #12
   137b4:	ldrd	r4, [sp]
   137b8:	ldrd	r6, [sp, #8]
   137bc:	ldrd	r8, [sp, #16]
   137c0:	add	sp, sp, #24
   137c4:	pop	{pc}		; (ldr pc, [sp], #4)
   137c8:	ldr	r0, [r4]
   137cc:	ldr	r2, [r4, #12]
   137d0:	add	r3, r3, r2
   137d4:	add	r1, r3, r3, lsl #1
   137d8:	str	r3, [r4, #12]
   137dc:	lsl	r1, r1, #2
   137e0:	bl	12924 <realloc@plt>
   137e4:	str	r0, [r4]
   137e8:	mov	r0, r4
   137ec:	bl	15074 <table_get_row_length@@Base>
   137f0:	subs	r9, r0, #0
   137f4:	ble	13728 <table_add_column@@Base+0x38>
   137f8:	mov	r1, r5
   137fc:	mov	r0, r4
   13800:	bl	1507c <table_get_row_ptr@@Base>
   13804:	ldr	r1, [r4, #12]
   13808:	mov	r8, r0
   1380c:	add	r5, r5, #1
   13810:	ldr	r0, [r0]
   13814:	lsl	r1, r1, #2
   13818:	bl	12924 <realloc@plt>
   1381c:	cmp	r9, r5
   13820:	str	r0, [r8]
   13824:	bne	137f8 <table_add_column@@Base+0x108>
   13828:	b	13728 <table_add_column@@Base+0x38>

0001382c <table_column_destroy@@Base>:
   1382c:	str	r4, [sp, #-8]!
   13830:	str	lr, [sp, #4]
   13834:	bl	1367c <table_get_col_ptr@@Base>
   13838:	ldr	r0, [r0]
   1383c:	cmp	r0, #0
   13840:	beq	13854 <table_column_destroy@@Base+0x28>
   13844:	ldr	r4, [sp]
   13848:	ldr	lr, [sp, #4]
   1384c:	add	sp, sp, #8
   13850:	b	12918 <free@plt>
   13854:	ldr	r4, [sp]
   13858:	add	sp, sp, #4
   1385c:	pop	{pc}		; (ldr pc, [sp], #4)

00013860 <table_remove_column@@Base>:
   13860:	strd	r4, [sp, #-32]!	; 0xffffffe0
   13864:	mov	r4, r0
   13868:	mov	r5, r1
   1386c:	strd	r6, [sp, #8]
   13870:	strd	r8, [sp, #16]
   13874:	str	sl, [sp, #24]
   13878:	str	lr, [sp, #28]
   1387c:	bl	1382c <table_column_destroy@@Base>
   13880:	mov	r0, r4
   13884:	bl	13674 <table_get_column_length@@Base>
   13888:	sub	r7, r0, #1
   1388c:	cmp	r5, r7
   13890:	bge	138d4 <table_remove_column@@Base+0x74>
   13894:	add	r3, r5, r5, lsl #1
   13898:	mov	r0, r5
   1389c:	lsl	r3, r3, #2
   138a0:	ldr	r2, [r4]
   138a4:	add	r0, r0, #1
   138a8:	cmp	r0, r7
   138ac:	add	r1, r2, r3
   138b0:	add	r3, r3, #12
   138b4:	add	r2, r2, r3
   138b8:	ldr	lr, [r2]
   138bc:	ldr	ip, [r2, #4]
   138c0:	ldr	r2, [r2, #8]
   138c4:	str	lr, [r1]
   138c8:	str	ip, [r1, #4]
   138cc:	str	r2, [r1, #8]
   138d0:	bne	138a0 <table_remove_column@@Base+0x40>
   138d4:	mov	r0, r4
   138d8:	bl	15074 <table_get_row_length@@Base>
   138dc:	subs	r9, r0, #0
   138e0:	ble	13944 <table_remove_column@@Base+0xe4>
   138e4:	lsl	r8, r5, #2
   138e8:	mov	r6, #0
   138ec:	mov	r2, r5
   138f0:	mov	r1, r6
   138f4:	mov	r0, r4
   138f8:	bl	16648 <table_cell_destroy@@Base>
   138fc:	mov	r1, r6
   13900:	mov	r0, r4
   13904:	bl	1507c <table_get_row_ptr@@Base>
   13908:	cmp	r5, r7
   1390c:	bge	13938 <table_remove_column@@Base+0xd8>
   13910:	mov	r3, r8
   13914:	mov	r2, r5
   13918:	ldr	r1, [r0]
   1391c:	add	r2, r2, #1
   13920:	cmp	r2, r7
   13924:	add	ip, r1, r3
   13928:	add	r3, r3, #4
   1392c:	ldr	r1, [r1, r3]
   13930:	str	r1, [ip]
   13934:	bne	13918 <table_remove_column@@Base+0xb8>
   13938:	add	r6, r6, #1
   1393c:	cmp	r9, r6
   13940:	bne	138ec <table_remove_column@@Base+0x8c>
   13944:	ldr	r3, [r4, #4]
   13948:	mov	r0, r4
   1394c:	sub	r3, r3, #1
   13950:	str	r3, [r4, #4]
   13954:	bl	13674 <table_get_column_length@@Base>
   13958:	ldr	r3, [r4, #8]
   1395c:	udiv	r6, r0, r3
   13960:	mls	r6, r6, r3, r0
   13964:	cmp	r6, #0
   13968:	beq	1399c <table_remove_column@@Base+0x13c>
   1396c:	mov	r0, r4
   13970:	mov	r2, r5
   13974:	mov	r3, #16
   13978:	mvn	r1, #0
   1397c:	bl	135e0 <table_notify@@Base>
   13980:	ldrd	r4, [sp]
   13984:	mov	r0, #0
   13988:	ldrd	r6, [sp, #8]
   1398c:	ldrd	r8, [sp, #16]
   13990:	ldr	sl, [sp, #24]
   13994:	add	sp, sp, #28
   13998:	pop	{pc}		; (ldr pc, [sp], #4)
   1399c:	ldr	r0, [r4]
   139a0:	ldr	r2, [r4, #12]
   139a4:	sub	r3, r2, r3
   139a8:	add	r1, r3, r3, lsl #1
   139ac:	str	r3, [r4, #12]
   139b0:	lsl	r1, r1, #2
   139b4:	bl	12924 <realloc@plt>
   139b8:	str	r0, [r4]
   139bc:	mov	r0, r4
   139c0:	bl	15074 <table_get_row_length@@Base>
   139c4:	subs	r8, r0, #0
   139c8:	ble	1396c <table_remove_column@@Base+0x10c>
   139cc:	mov	r1, r6
   139d0:	mov	r0, r4
   139d4:	bl	1507c <table_get_row_ptr@@Base>
   139d8:	ldr	r1, [r4, #12]
   139dc:	mov	r7, r0
   139e0:	add	r6, r6, #1
   139e4:	ldr	r0, [r0]
   139e8:	lsl	r1, r1, #2
   139ec:	bl	12924 <realloc@plt>
   139f0:	cmp	r8, r6
   139f4:	str	r0, [r7]
   139f8:	bne	139cc <table_remove_column@@Base+0x16c>
   139fc:	b	1396c <table_remove_column@@Base+0x10c>

00013a00 <table_get_column_data_type@@Base>:
   13a00:	str	r4, [sp, #-8]!
   13a04:	str	lr, [sp, #4]
   13a08:	bl	1367c <table_get_col_ptr@@Base>
   13a0c:	ldr	r4, [sp]
   13a10:	add	sp, sp, #4
   13a14:	ldr	r0, [r0, #4]
   13a18:	pop	{pc}		; (ldr pc, [sp], #4)

00013a1c <table_get_column_name@@Base>:
   13a1c:	str	r4, [sp, #-8]!
   13a20:	str	lr, [sp, #4]
   13a24:	bl	1367c <table_get_col_ptr@@Base>
   13a28:	ldr	r4, [sp]
   13a2c:	add	sp, sp, #4
   13a30:	ldr	r0, [r0]
   13a34:	pop	{pc}		; (ldr pc, [sp], #4)

00013a38 <table_get_column@@Base>:
   13a38:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13a3c:	mov	r5, r0
   13a40:	strd	r6, [sp, #8]
   13a44:	mov	r6, r1
   13a48:	str	r8, [sp, #16]
   13a4c:	str	lr, [sp, #20]
   13a50:	bl	13674 <table_get_column_length@@Base>
   13a54:	subs	r7, r0, #0
   13a58:	ble	13aa4 <table_get_column@@Base+0x6c>
   13a5c:	mov	r4, #0
   13a60:	b	13a70 <table_get_column@@Base+0x38>
   13a64:	add	r4, r4, #1
   13a68:	cmp	r7, r4
   13a6c:	beq	13ab0 <table_get_column@@Base+0x78>
   13a70:	mov	r1, r4
   13a74:	mov	r0, r5
   13a78:	bl	13a1c <table_get_column_name@@Base>
   13a7c:	mov	r1, r6
   13a80:	bl	12900 <strcmp@plt>
   13a84:	cmp	r0, #0
   13a88:	bne	13a64 <table_get_column@@Base+0x2c>
   13a8c:	mov	r0, r4
   13a90:	ldrd	r4, [sp]
   13a94:	ldrd	r6, [sp, #8]
   13a98:	ldr	r8, [sp, #16]
   13a9c:	add	sp, sp, #20
   13aa0:	pop	{pc}		; (ldr pc, [sp], #4)
   13aa4:	mvneq	r4, #0
   13aa8:	movne	r4, #0
   13aac:	b	13a8c <table_get_column@@Base+0x54>
   13ab0:	mvn	r4, #0
   13ab4:	b	13a8c <table_get_column@@Base+0x54>

00013ab8 <table_get_column_compare_function@@Base>:
   13ab8:	str	r4, [sp, #-8]!
   13abc:	str	lr, [sp, #4]
   13ac0:	bl	1367c <table_get_col_ptr@@Base>
   13ac4:	ldr	r4, [sp]
   13ac8:	add	sp, sp, #4
   13acc:	ldr	r0, [r0, #8]
   13ad0:	pop	{pc}		; (ldr pc, [sp], #4)

00013ad4 <table_set_column_compare_function@@Base>:
   13ad4:	str	r4, [sp, #-8]!
   13ad8:	mov	r4, r2
   13adc:	str	lr, [sp, #4]
   13ae0:	bl	1367c <table_get_col_ptr@@Base>
   13ae4:	str	r4, [r0, #8]
   13ae8:	ldr	r4, [sp]
   13aec:	add	sp, sp, #4
   13af0:	pop	{pc}		; (ldr pc, [sp], #4)

00013af4 <table_compare_ptr@@Base>:
   13af4:	cmp	r0, r1
   13af8:	bhi	13b08 <table_compare_ptr@@Base+0x14>
   13afc:	mvncc	r0, #0
   13b00:	movcs	r0, #0
   13b04:	bx	lr
   13b08:	mov	r0, #1
   13b0c:	bx	lr

00013b10 <table_compare_string@@Base>:
   13b10:	cmp	r0, #0
   13b14:	beq	13b24 <table_compare_string@@Base+0x14>
   13b18:	cmp	r1, #0
   13b1c:	beq	13b34 <table_compare_string@@Base+0x24>
   13b20:	b	12900 <strcmp@plt>
   13b24:	adds	r0, r1, #0
   13b28:	movne	r0, #1
   13b2c:	rsb	r0, r0, #0
   13b30:	bx	lr
   13b34:	mov	r0, #1
   13b38:	bx	lr

00013b3c <table_compare_bool@@Base>:
   13b3c:	cmp	r0, #0
   13b40:	beq	13b70 <table_compare_bool@@Base+0x34>
   13b44:	cmp	r1, #0
   13b48:	beq	13b68 <table_compare_bool@@Base+0x2c>
   13b4c:	ldrb	r2, [r0]
   13b50:	ldrb	r3, [r1]
   13b54:	cmp	r2, r3
   13b58:	bhi	13b68 <table_compare_bool@@Base+0x2c>
   13b5c:	mvncc	r0, #0
   13b60:	movcs	r0, #0
   13b64:	bx	lr
   13b68:	mov	r0, #1
   13b6c:	bx	lr
   13b70:	adds	r1, r1, #0
   13b74:	movne	r1, #1
   13b78:	rsb	r0, r1, #0
   13b7c:	bx	lr

00013b80 <table_compare_int32@@Base>:
   13b80:	cmp	r0, #0
   13b84:	beq	13bb4 <table_compare_int32@@Base+0x34>
   13b88:	cmp	r1, #0
   13b8c:	beq	13bac <table_compare_int32@@Base+0x2c>
   13b90:	ldr	r2, [r0]
   13b94:	ldr	r3, [r1]
   13b98:	cmp	r2, r3
   13b9c:	bgt	13bac <table_compare_int32@@Base+0x2c>
   13ba0:	mvnlt	r0, #0
   13ba4:	movge	r0, #0
   13ba8:	bx	lr
   13bac:	mov	r0, #1
   13bb0:	bx	lr
   13bb4:	adds	r1, r1, #0
   13bb8:	movne	r1, #1
   13bbc:	rsb	r0, r1, #0
   13bc0:	bx	lr

00013bc4 <table_compare_uint32@@Base>:
   13bc4:	cmp	r0, #0
   13bc8:	beq	13bf8 <table_compare_uint32@@Base+0x34>
   13bcc:	cmp	r1, #0
   13bd0:	beq	13bf0 <table_compare_uint32@@Base+0x2c>
   13bd4:	ldr	r2, [r0]
   13bd8:	ldr	r3, [r1]
   13bdc:	cmp	r2, r3
   13be0:	bhi	13bf0 <table_compare_uint32@@Base+0x2c>
   13be4:	mvncc	r0, #0
   13be8:	movcs	r0, #0
   13bec:	bx	lr
   13bf0:	mov	r0, #1
   13bf4:	bx	lr
   13bf8:	adds	r1, r1, #0
   13bfc:	movne	r1, #1
   13c00:	rsb	r0, r1, #0
   13c04:	bx	lr

00013c08 <table_compare_int8@@Base>:
   13c08:	cmp	r0, #0
   13c0c:	beq	13c3c <table_compare_int8@@Base+0x34>
   13c10:	cmp	r1, #0
   13c14:	beq	13c34 <table_compare_int8@@Base+0x2c>
   13c18:	ldrsb	r2, [r0]
   13c1c:	ldrsb	r3, [r1]
   13c20:	cmp	r2, r3
   13c24:	bgt	13c34 <table_compare_int8@@Base+0x2c>
   13c28:	mvnlt	r0, #0
   13c2c:	movge	r0, #0
   13c30:	bx	lr
   13c34:	mov	r0, #1
   13c38:	bx	lr
   13c3c:	adds	r1, r1, #0
   13c40:	movne	r1, #1
   13c44:	rsb	r0, r1, #0
   13c48:	bx	lr

00013c4c <table_compare_char@@Base>:
   13c4c:	cmp	r0, #0
   13c50:	beq	13c80 <table_compare_char@@Base+0x34>
   13c54:	cmp	r1, #0
   13c58:	beq	13c78 <table_compare_char@@Base+0x2c>
   13c5c:	ldrb	r2, [r0]
   13c60:	ldrb	r3, [r1]
   13c64:	cmp	r2, r3
   13c68:	bhi	13c78 <table_compare_char@@Base+0x2c>
   13c6c:	mvncc	r0, #0
   13c70:	movcs	r0, #0
   13c74:	bx	lr
   13c78:	mov	r0, #1
   13c7c:	bx	lr
   13c80:	adds	r1, r1, #0
   13c84:	movne	r1, #1
   13c88:	rsb	r0, r1, #0
   13c8c:	bx	lr

00013c90 <table_compare_short@@Base>:
   13c90:	cmp	r0, #0
   13c94:	beq	13cc4 <table_compare_short@@Base+0x34>
   13c98:	cmp	r1, #0
   13c9c:	beq	13cbc <table_compare_short@@Base+0x2c>
   13ca0:	ldrsh	r2, [r0]
   13ca4:	ldrsh	r3, [r1]
   13ca8:	cmp	r2, r3
   13cac:	bgt	13cbc <table_compare_short@@Base+0x2c>
   13cb0:	mvnlt	r0, #0
   13cb4:	movge	r0, #0
   13cb8:	bx	lr
   13cbc:	mov	r0, #1
   13cc0:	bx	lr
   13cc4:	adds	r1, r1, #0
   13cc8:	movne	r1, #1
   13ccc:	rsb	r0, r1, #0
   13cd0:	bx	lr

00013cd4 <table_compare_ushort@@Base>:
   13cd4:	cmp	r0, #0
   13cd8:	beq	13d08 <table_compare_ushort@@Base+0x34>
   13cdc:	cmp	r1, #0
   13ce0:	beq	13d00 <table_compare_ushort@@Base+0x2c>
   13ce4:	ldrh	r2, [r0]
   13ce8:	ldrh	r3, [r1]
   13cec:	cmp	r2, r3
   13cf0:	bhi	13d00 <table_compare_ushort@@Base+0x2c>
   13cf4:	mvncc	r0, #0
   13cf8:	movcs	r0, #0
   13cfc:	bx	lr
   13d00:	mov	r0, #1
   13d04:	bx	lr
   13d08:	adds	r1, r1, #0
   13d0c:	movne	r1, #1
   13d10:	rsb	r0, r1, #0
   13d14:	bx	lr

00013d18 <table_compare_llong@@Base>:
   13d18:	cmp	r0, #0
   13d1c:	beq	13d60 <table_compare_llong@@Base+0x48>
   13d20:	cmp	r1, #0
   13d24:	beq	13d70 <table_compare_llong@@Base+0x58>
   13d28:	strd	r4, [sp, #-8]!
   13d2c:	ldrd	r2, [r1]
   13d30:	ldrd	r4, [r0]
   13d34:	cmp	r2, r4
   13d38:	sbcs	r1, r3, r5
   13d3c:	movlt	r0, #1
   13d40:	blt	13d54 <table_compare_llong@@Base+0x3c>
   13d44:	cmp	r4, r2
   13d48:	sbcs	r3, r5, r3
   13d4c:	mvnlt	r0, #0
   13d50:	movge	r0, #0
   13d54:	ldrd	r4, [sp]
   13d58:	add	sp, sp, #8
   13d5c:	bx	lr
   13d60:	adds	r1, r1, #0
   13d64:	movne	r1, #1
   13d68:	rsb	r0, r1, #0
   13d6c:	bx	lr
   13d70:	mov	r0, #1
   13d74:	bx	lr

00013d78 <table_compare_uint64@@Base>:
   13d78:	cmp	r0, #0
   13d7c:	beq	13db8 <table_compare_uint64@@Base+0x40>
   13d80:	cmp	r1, #0
   13d84:	beq	13dc8 <table_compare_uint64@@Base+0x50>
   13d88:	strd	r4, [sp, #-8]!
   13d8c:	ldrd	r2, [r1]
   13d90:	ldrd	r4, [r0]
   13d94:	cmp	r5, r3
   13d98:	cmpeq	r4, r2
   13d9c:	movhi	r0, #1
   13da0:	bhi	13dac <table_compare_uint64@@Base+0x34>
   13da4:	mvncc	r0, #0
   13da8:	movcs	r0, #0
   13dac:	ldrd	r4, [sp]
   13db0:	add	sp, sp, #8
   13db4:	bx	lr
   13db8:	adds	r1, r1, #0
   13dbc:	movne	r1, #1
   13dc0:	rsb	r0, r1, #0
   13dc4:	bx	lr
   13dc8:	mov	r0, #1
   13dcc:	bx	lr

00013dd0 <table_compare_long@@Base>:
   13dd0:	cmp	r0, #0
   13dd4:	beq	13e04 <table_compare_long@@Base+0x34>
   13dd8:	cmp	r1, #0
   13ddc:	beq	13dfc <table_compare_long@@Base+0x2c>
   13de0:	ldr	r2, [r0]
   13de4:	ldr	r3, [r1]
   13de8:	cmp	r2, r3
   13dec:	bgt	13dfc <table_compare_long@@Base+0x2c>
   13df0:	mvnlt	r0, #0
   13df4:	movge	r0, #0
   13df8:	bx	lr
   13dfc:	mov	r0, #1
   13e00:	bx	lr
   13e04:	adds	r1, r1, #0
   13e08:	movne	r1, #1
   13e0c:	rsb	r0, r1, #0
   13e10:	bx	lr

00013e14 <table_compare_ullong@@Base>:
   13e14:	cmp	r0, #0
   13e18:	beq	13e48 <table_compare_ullong@@Base+0x34>
   13e1c:	cmp	r1, #0
   13e20:	beq	13e40 <table_compare_ullong@@Base+0x2c>
   13e24:	ldr	r2, [r0]
   13e28:	ldr	r3, [r1]
   13e2c:	cmp	r2, r3
   13e30:	bhi	13e40 <table_compare_ullong@@Base+0x2c>
   13e34:	mvncc	r0, #0
   13e38:	movcs	r0, #0
   13e3c:	bx	lr
   13e40:	mov	r0, #1
   13e44:	bx	lr
   13e48:	adds	r1, r1, #0
   13e4c:	movne	r1, #1
   13e50:	rsb	r0, r1, #0
   13e54:	bx	lr

00013e58 <table_compare_float@@Base>:
   13e58:	cmp	r0, #0
   13e5c:	beq	13e90 <table_compare_float@@Base+0x38>
   13e60:	cmp	r1, #0
   13e64:	beq	13e88 <table_compare_float@@Base+0x30>
   13e68:	vldr	s14, [r0]
   13e6c:	vldr	s15, [r1]
   13e70:	vcmpe.f32	s14, s15
   13e74:	vmrs	APSR_nzcv, fpscr
   13e78:	bgt	13e88 <table_compare_float@@Base+0x30>
   13e7c:	mvnmi	r0, #0
   13e80:	movpl	r0, #0
   13e84:	bx	lr
   13e88:	mov	r0, #1
   13e8c:	bx	lr
   13e90:	adds	r1, r1, #0
   13e94:	movne	r1, #1
   13e98:	rsb	r0, r1, #0
   13e9c:	bx	lr

00013ea0 <table_compare_double@@Base>:
   13ea0:	cmp	r0, #0
   13ea4:	beq	13ed8 <table_compare_double@@Base+0x38>
   13ea8:	cmp	r1, #0
   13eac:	beq	13ed0 <table_compare_double@@Base+0x30>
   13eb0:	vldr	d6, [r0]
   13eb4:	vldr	d7, [r1]
   13eb8:	vcmpe.f64	d6, d7
   13ebc:	vmrs	APSR_nzcv, fpscr
   13ec0:	bgt	13ed0 <table_compare_double@@Base+0x30>
   13ec4:	mvnmi	r0, #0
   13ec8:	movpl	r0, #0
   13ecc:	bx	lr
   13ed0:	mov	r0, #1
   13ed4:	bx	lr
   13ed8:	adds	r1, r1, #0
   13edc:	movne	r1, #1
   13ee0:	rsb	r0, r1, #0
   13ee4:	bx	lr

00013ee8 <table_compare_ldouble@@Base>:
   13ee8:	cmp	r0, #0
   13eec:	beq	13f20 <table_compare_ldouble@@Base+0x38>
   13ef0:	cmp	r1, #0
   13ef4:	beq	13f18 <table_compare_ldouble@@Base+0x30>
   13ef8:	vldr	d6, [r0]
   13efc:	vldr	d7, [r1]
   13f00:	vcmpe.f64	d6, d7
   13f04:	vmrs	APSR_nzcv, fpscr
   13f08:	bgt	13f18 <table_compare_ldouble@@Base+0x30>
   13f0c:	mvnmi	r0, #0
   13f10:	movpl	r0, #0
   13f14:	bx	lr
   13f18:	mov	r0, #1
   13f1c:	bx	lr
   13f20:	adds	r1, r1, #0
   13f24:	movne	r1, #1
   13f28:	rsb	r0, r1, #0
   13f2c:	bx	lr

00013f30 <table_compare_uchar@@Base>:
   13f30:	cmp	r0, #0
   13f34:	beq	13f64 <table_compare_uchar@@Base+0x34>
   13f38:	cmp	r1, #0
   13f3c:	beq	13f5c <table_compare_uchar@@Base+0x2c>
   13f40:	ldrb	r2, [r0]
   13f44:	ldrb	r3, [r1]
   13f48:	cmp	r2, r3
   13f4c:	bhi	13f5c <table_compare_uchar@@Base+0x2c>
   13f50:	mvncc	r0, #0
   13f54:	movcs	r0, #0
   13f58:	bx	lr
   13f5c:	mov	r0, #1
   13f60:	bx	lr
   13f64:	adds	r1, r1, #0
   13f68:	movne	r1, #1
   13f6c:	rsb	r0, r1, #0
   13f70:	bx	lr

00013f74 <table_compare_int@@Base>:
   13f74:	cmp	r0, #0
   13f78:	beq	13fa8 <table_compare_int@@Base+0x34>
   13f7c:	cmp	r1, #0
   13f80:	beq	13fa0 <table_compare_int@@Base+0x2c>
   13f84:	ldr	r2, [r0]
   13f88:	ldr	r3, [r1]
   13f8c:	cmp	r2, r3
   13f90:	bgt	13fa0 <table_compare_int@@Base+0x2c>
   13f94:	mvnlt	r0, #0
   13f98:	movge	r0, #0
   13f9c:	bx	lr
   13fa0:	mov	r0, #1
   13fa4:	bx	lr
   13fa8:	adds	r1, r1, #0
   13fac:	movne	r1, #1
   13fb0:	rsb	r0, r1, #0
   13fb4:	bx	lr

00013fb8 <table_compare_uint@@Base>:
   13fb8:	cmp	r0, #0
   13fbc:	beq	13fec <table_compare_uint@@Base+0x34>
   13fc0:	cmp	r1, #0
   13fc4:	beq	13fe4 <table_compare_uint@@Base+0x2c>
   13fc8:	ldr	r2, [r0]
   13fcc:	ldr	r3, [r1]
   13fd0:	cmp	r2, r3
   13fd4:	bhi	13fe4 <table_compare_uint@@Base+0x2c>
   13fd8:	mvncc	r0, #0
   13fdc:	movcs	r0, #0
   13fe0:	bx	lr
   13fe4:	mov	r0, #1
   13fe8:	bx	lr
   13fec:	adds	r1, r1, #0
   13ff0:	movne	r1, #1
   13ff4:	rsb	r0, r1, #0
   13ff8:	bx	lr

00013ffc <table_compare_uint8@@Base>:
   13ffc:	cmp	r0, #0
   14000:	beq	14030 <table_compare_uint8@@Base+0x34>
   14004:	cmp	r1, #0
   14008:	beq	14028 <table_compare_uint8@@Base+0x2c>
   1400c:	ldrb	r2, [r0]
   14010:	ldrb	r3, [r1]
   14014:	cmp	r2, r3
   14018:	bhi	14028 <table_compare_uint8@@Base+0x2c>
   1401c:	mvncc	r0, #0
   14020:	movcs	r0, #0
   14024:	bx	lr
   14028:	mov	r0, #1
   1402c:	bx	lr
   14030:	adds	r1, r1, #0
   14034:	movne	r1, #1
   14038:	rsb	r0, r1, #0
   1403c:	bx	lr

00014040 <table_compare_int16@@Base>:
   14040:	cmp	r0, #0
   14044:	beq	14074 <table_compare_int16@@Base+0x34>
   14048:	cmp	r1, #0
   1404c:	beq	1406c <table_compare_int16@@Base+0x2c>
   14050:	ldrsh	r2, [r0]
   14054:	ldrsh	r3, [r1]
   14058:	cmp	r2, r3
   1405c:	bgt	1406c <table_compare_int16@@Base+0x2c>
   14060:	mvnlt	r0, #0
   14064:	movge	r0, #0
   14068:	bx	lr
   1406c:	mov	r0, #1
   14070:	bx	lr
   14074:	adds	r1, r1, #0
   14078:	movne	r1, #1
   1407c:	rsb	r0, r1, #0
   14080:	bx	lr

00014084 <table_compare_uint16@@Base>:
   14084:	cmp	r0, #0
   14088:	beq	140b8 <table_compare_uint16@@Base+0x34>
   1408c:	cmp	r1, #0
   14090:	beq	140b0 <table_compare_uint16@@Base+0x2c>
   14094:	ldrh	r2, [r0]
   14098:	ldrh	r3, [r1]
   1409c:	cmp	r2, r3
   140a0:	bhi	140b0 <table_compare_uint16@@Base+0x2c>
   140a4:	mvncc	r0, #0
   140a8:	movcs	r0, #0
   140ac:	bx	lr
   140b0:	mov	r0, #1
   140b4:	bx	lr
   140b8:	adds	r1, r1, #0
   140bc:	movne	r1, #1
   140c0:	rsb	r0, r1, #0
   140c4:	bx	lr

000140c8 <table_compare_ulong@@Base>:
   140c8:	cmp	r0, #0
   140cc:	beq	140fc <table_compare_ulong@@Base+0x34>
   140d0:	cmp	r1, #0
   140d4:	beq	140f4 <table_compare_ulong@@Base+0x2c>
   140d8:	ldr	r2, [r0]
   140dc:	ldr	r3, [r1]
   140e0:	cmp	r2, r3
   140e4:	bhi	140f4 <table_compare_ulong@@Base+0x2c>
   140e8:	mvncc	r0, #0
   140ec:	movcs	r0, #0
   140f0:	bx	lr
   140f4:	mov	r0, #1
   140f8:	bx	lr
   140fc:	adds	r1, r1, #0
   14100:	movne	r1, #1
   14104:	rsb	r0, r1, #0
   14108:	bx	lr

0001410c <table_compare_int64@@Base>:
   1410c:	cmp	r0, #0
   14110:	beq	14154 <table_compare_int64@@Base+0x48>
   14114:	cmp	r1, #0
   14118:	beq	14164 <table_compare_int64@@Base+0x58>
   1411c:	strd	r4, [sp, #-8]!
   14120:	ldrd	r2, [r1]
   14124:	ldrd	r4, [r0]
   14128:	cmp	r2, r4
   1412c:	sbcs	r1, r3, r5
   14130:	movlt	r0, #1
   14134:	blt	14148 <table_compare_int64@@Base+0x3c>
   14138:	cmp	r4, r2
   1413c:	sbcs	r3, r5, r3
   14140:	mvnlt	r0, #0
   14144:	movge	r0, #0
   14148:	ldrd	r4, [sp]
   1414c:	add	sp, sp, #8
   14150:	bx	lr
   14154:	adds	r1, r1, #0
   14158:	movne	r1, #1
   1415c:	rsb	r0, r1, #0
   14160:	bx	lr
   14164:	mov	r0, #1
   14168:	bx	lr

0001416c <table_get_default_compare_function_for_data_type@@Base>:
   1416c:	ldr	r3, [pc, #404]	; 14308 <table_get_default_compare_function_for_data_type@@Base+0x19c>
   14170:	add	r3, pc, r3
   14174:	cmp	r0, #23
   14178:	addls	pc, pc, r0, lsl #2
   1417c:	b	14300 <table_get_default_compare_function_for_data_type@@Base+0x194>
   14180:	b	142f4 <table_get_default_compare_function_for_data_type@@Base+0x188>
   14184:	b	142e8 <table_get_default_compare_function_for_data_type@@Base+0x17c>
   14188:	b	142dc <table_get_default_compare_function_for_data_type@@Base+0x170>
   1418c:	b	142d0 <table_get_default_compare_function_for_data_type@@Base+0x164>
   14190:	b	142c4 <table_get_default_compare_function_for_data_type@@Base+0x158>
   14194:	b	142b8 <table_get_default_compare_function_for_data_type@@Base+0x14c>
   14198:	b	142ac <table_get_default_compare_function_for_data_type@@Base+0x140>
   1419c:	b	142a0 <table_get_default_compare_function_for_data_type@@Base+0x134>
   141a0:	b	14294 <table_get_default_compare_function_for_data_type@@Base+0x128>
   141a4:	b	14288 <table_get_default_compare_function_for_data_type@@Base+0x11c>
   141a8:	b	1427c <table_get_default_compare_function_for_data_type@@Base+0x110>
   141ac:	b	14270 <table_get_default_compare_function_for_data_type@@Base+0x104>
   141b0:	b	14264 <table_get_default_compare_function_for_data_type@@Base+0xf8>
   141b4:	b	14258 <table_get_default_compare_function_for_data_type@@Base+0xec>
   141b8:	b	1424c <table_get_default_compare_function_for_data_type@@Base+0xe0>
   141bc:	b	14240 <table_get_default_compare_function_for_data_type@@Base+0xd4>
   141c0:	b	14234 <table_get_default_compare_function_for_data_type@@Base+0xc8>
   141c4:	b	14228 <table_get_default_compare_function_for_data_type@@Base+0xbc>
   141c8:	b	1421c <table_get_default_compare_function_for_data_type@@Base+0xb0>
   141cc:	b	14210 <table_get_default_compare_function_for_data_type@@Base+0xa4>
   141d0:	b	14204 <table_get_default_compare_function_for_data_type@@Base+0x98>
   141d4:	b	141f8 <table_get_default_compare_function_for_data_type@@Base+0x8c>
   141d8:	b	141ec <table_get_default_compare_function_for_data_type@@Base+0x80>
   141dc:	b	141e0 <table_get_default_compare_function_for_data_type@@Base+0x74>
   141e0:	ldr	r2, [pc, #292]	; 1430c <table_get_default_compare_function_for_data_type@@Base+0x1a0>
   141e4:	ldr	r0, [r3, r2]
   141e8:	bx	lr
   141ec:	ldr	r2, [pc, #284]	; 14310 <table_get_default_compare_function_for_data_type@@Base+0x1a4>
   141f0:	ldr	r0, [r3, r2]
   141f4:	bx	lr
   141f8:	ldr	r2, [pc, #276]	; 14314 <table_get_default_compare_function_for_data_type@@Base+0x1a8>
   141fc:	ldr	r0, [r3, r2]
   14200:	bx	lr
   14204:	ldr	r2, [pc, #268]	; 14318 <table_get_default_compare_function_for_data_type@@Base+0x1ac>
   14208:	ldr	r0, [r3, r2]
   1420c:	bx	lr
   14210:	ldr	r2, [pc, #260]	; 1431c <table_get_default_compare_function_for_data_type@@Base+0x1b0>
   14214:	ldr	r0, [r3, r2]
   14218:	bx	lr
   1421c:	ldr	r2, [pc, #252]	; 14320 <table_get_default_compare_function_for_data_type@@Base+0x1b4>
   14220:	ldr	r0, [r3, r2]
   14224:	bx	lr
   14228:	ldr	r2, [pc, #244]	; 14324 <table_get_default_compare_function_for_data_type@@Base+0x1b8>
   1422c:	ldr	r0, [r3, r2]
   14230:	bx	lr
   14234:	ldr	r2, [pc, #236]	; 14328 <table_get_default_compare_function_for_data_type@@Base+0x1bc>
   14238:	ldr	r0, [r3, r2]
   1423c:	bx	lr
   14240:	ldr	r2, [pc, #228]	; 1432c <table_get_default_compare_function_for_data_type@@Base+0x1c0>
   14244:	ldr	r0, [r3, r2]
   14248:	bx	lr
   1424c:	ldr	r2, [pc, #220]	; 14330 <table_get_default_compare_function_for_data_type@@Base+0x1c4>
   14250:	ldr	r0, [r3, r2]
   14254:	bx	lr
   14258:	ldr	r2, [pc, #212]	; 14334 <table_get_default_compare_function_for_data_type@@Base+0x1c8>
   1425c:	ldr	r0, [r3, r2]
   14260:	bx	lr
   14264:	ldr	r2, [pc, #204]	; 14338 <table_get_default_compare_function_for_data_type@@Base+0x1cc>
   14268:	ldr	r0, [r3, r2]
   1426c:	bx	lr
   14270:	ldr	r2, [pc, #196]	; 1433c <table_get_default_compare_function_for_data_type@@Base+0x1d0>
   14274:	ldr	r0, [r3, r2]
   14278:	bx	lr
   1427c:	ldr	r2, [pc, #188]	; 14340 <table_get_default_compare_function_for_data_type@@Base+0x1d4>
   14280:	ldr	r0, [r3, r2]
   14284:	bx	lr
   14288:	ldr	r2, [pc, #180]	; 14344 <table_get_default_compare_function_for_data_type@@Base+0x1d8>
   1428c:	ldr	r0, [r3, r2]
   14290:	bx	lr
   14294:	ldr	r2, [pc, #172]	; 14348 <table_get_default_compare_function_for_data_type@@Base+0x1dc>
   14298:	ldr	r0, [r3, r2]
   1429c:	bx	lr
   142a0:	ldr	r2, [pc, #164]	; 1434c <table_get_default_compare_function_for_data_type@@Base+0x1e0>
   142a4:	ldr	r0, [r3, r2]
   142a8:	bx	lr
   142ac:	ldr	r2, [pc, #156]	; 14350 <table_get_default_compare_function_for_data_type@@Base+0x1e4>
   142b0:	ldr	r0, [r3, r2]
   142b4:	bx	lr
   142b8:	ldr	r2, [pc, #148]	; 14354 <table_get_default_compare_function_for_data_type@@Base+0x1e8>
   142bc:	ldr	r0, [r3, r2]
   142c0:	bx	lr
   142c4:	ldr	r2, [pc, #140]	; 14358 <table_get_default_compare_function_for_data_type@@Base+0x1ec>
   142c8:	ldr	r0, [r3, r2]
   142cc:	bx	lr
   142d0:	ldr	r2, [pc, #132]	; 1435c <table_get_default_compare_function_for_data_type@@Base+0x1f0>
   142d4:	ldr	r0, [r3, r2]
   142d8:	bx	lr
   142dc:	ldr	r2, [pc, #124]	; 14360 <table_get_default_compare_function_for_data_type@@Base+0x1f4>
   142e0:	ldr	r0, [r3, r2]
   142e4:	bx	lr
   142e8:	ldr	r2, [pc, #116]	; 14364 <table_get_default_compare_function_for_data_type@@Base+0x1f8>
   142ec:	ldr	r0, [r3, r2]
   142f0:	bx	lr
   142f4:	ldr	r2, [pc, #108]	; 14368 <table_get_default_compare_function_for_data_type@@Base+0x1fc>
   142f8:	ldr	r0, [r3, r2]
   142fc:	bx	lr
   14300:	mov	r0, #0
   14304:	bx	lr
   14308:	andeq	r2, r1, r8, lsl #29
   1430c:	andeq	r0, r0, r8, rrx
   14310:	andeq	r0, r0, r4, asr #32
   14314:	muleq	r0, r0, r0
   14318:	muleq	r0, r8, r0
   1431c:	andeq	r0, r0, r8, asr #32
   14320:	andeq	r0, r0, r0, asr #32
   14324:	andeq	r0, r0, ip, asr #32
   14328:	andeq	r0, r0, r0, asr r0
   1432c:	andeq	r0, r0, r0, lsl #1
   14330:	andeq	r0, r0, r8, ror r0
   14334:	andeq	r0, r0, ip, ror r0
   14338:	andeq	r0, r0, r4, ror r0
   1433c:	andeq	r0, r0, r4, asr r0
   14340:	andeq	r0, r0, ip, asr r0
   14344:	andeq	r0, r0, ip, rrx
   14348:	muleq	r0, r4, r0
   1434c:	andeq	r0, r0, r8, lsl #1
   14350:	andeq	r0, r0, r0, ror r0
   14354:	andeq	r0, r0, r8, asr r0
   14358:	andeq	r0, r0, ip, lsl #1
   1435c:	andeq	r0, r0, r4, lsl #1
   14360:	andeq	r0, r0, ip, lsr r0
   14364:	muleq	r0, ip, r0
   14368:	andeq	r0, r0, r4, rrx

0001436c <table_subset_find@@Base>:
   1436c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   14370:	strd	r6, [sp, #8]
   14374:	mov	r7, r0
   14378:	str	sl, [sp, #24]
   1437c:	mov	sl, r3
   14380:	strd	r8, [sp, #16]
   14384:	mov	r9, r2
   14388:	mov	r8, r1
   1438c:	str	lr, [sp, #28]
   14390:	ldr	r5, [sp, #32]
   14394:	ldr	r4, [sp, #36]	; 0x24
   14398:	bl	13ab8 <table_get_column_compare_function@@Base>
   1439c:	cmp	sl, #0
   143a0:	mov	r6, r0
   143a4:	bne	143f4 <table_subset_find@@Base+0x88>
   143a8:	cmp	r5, r4
   143ac:	ble	1440c <table_subset_find@@Base+0xa0>
   143b0:	mvn	r0, #0
   143b4:	ldrd	r4, [sp]
   143b8:	ldrd	r6, [sp, #8]
   143bc:	ldrd	r8, [sp, #16]
   143c0:	ldr	sl, [sp, #24]
   143c4:	add	sp, sp, #28
   143c8:	pop	{pc}		; (ldr pc, [sp], #4)
   143cc:	mov	r2, r8
   143d0:	mov	r1, r4
   143d4:	mov	r0, r7
   143d8:	bl	14ea8 <table_get@@Base>
   143dc:	mov	r1, r0
   143e0:	mov	r0, r9
   143e4:	blx	r6
   143e8:	cmp	r0, #0
   143ec:	beq	14438 <table_subset_find@@Base+0xcc>
   143f0:	sub	r4, r4, #1
   143f4:	cmp	r5, r4
   143f8:	ble	143cc <table_subset_find@@Base+0x60>
   143fc:	b	143b0 <table_subset_find@@Base+0x44>
   14400:	add	r5, r5, #1
   14404:	cmp	r4, r5
   14408:	blt	143b0 <table_subset_find@@Base+0x44>
   1440c:	mov	r2, r8
   14410:	mov	r1, r5
   14414:	mov	r0, r7
   14418:	bl	14ea8 <table_get@@Base>
   1441c:	mov	r1, r0
   14420:	mov	r0, r9
   14424:	blx	r6
   14428:	cmp	r0, #0
   1442c:	bne	14400 <table_subset_find@@Base+0x94>
   14430:	mov	r0, r5
   14434:	b	143b4 <table_subset_find@@Base+0x48>
   14438:	mov	r0, r4
   1443c:	b	143b4 <table_subset_find@@Base+0x48>

00014440 <table_find@@Base>:
   14440:	strd	r4, [sp, #-20]!	; 0xffffffec
   14444:	mov	r5, r1
   14448:	mov	r4, r0
   1444c:	strd	r6, [sp, #8]
   14450:	mov	r6, r2
   14454:	mov	r7, r3
   14458:	str	lr, [sp, #16]
   1445c:	sub	sp, sp, #12
   14460:	bl	15074 <table_get_row_length@@Base>
   14464:	sub	ip, r0, #1
   14468:	mov	lr, #0
   1446c:	mov	r3, r7
   14470:	mov	r2, r6
   14474:	mov	r1, r5
   14478:	mov	r0, r4
   1447c:	str	lr, [sp]
   14480:	str	ip, [sp, #4]
   14484:	bl	1436c <table_subset_find@@Base>
   14488:	add	sp, sp, #12
   1448c:	ldrd	r4, [sp]
   14490:	ldrd	r6, [sp, #8]
   14494:	add	sp, sp, #16
   14498:	pop	{pc}		; (ldr pc, [sp], #4)

0001449c <table_find_bool@@Base>:
   1449c:	push	{lr}		; (str lr, [sp, #-4]!)
   144a0:	sub	sp, sp, #12
   144a4:	strb	r2, [sp, #7]
   144a8:	add	r2, sp, #7
   144ac:	bl	14440 <table_find@@Base>
   144b0:	add	sp, sp, #12
   144b4:	pop	{pc}		; (ldr pc, [sp], #4)

000144b8 <table_find_int@@Base>:
   144b8:	push	{lr}		; (str lr, [sp, #-4]!)
   144bc:	sub	sp, sp, #12
   144c0:	str	r2, [sp, #4]
   144c4:	add	r2, sp, #4
   144c8:	bl	14440 <table_find@@Base>
   144cc:	add	sp, sp, #12
   144d0:	pop	{pc}		; (ldr pc, [sp], #4)

000144d4 <table_find_uint@@Base>:
   144d4:	push	{lr}		; (str lr, [sp, #-4]!)
   144d8:	sub	sp, sp, #12
   144dc:	str	r2, [sp, #4]
   144e0:	add	r2, sp, #4
   144e4:	bl	14440 <table_find@@Base>
   144e8:	add	sp, sp, #12
   144ec:	pop	{pc}		; (ldr pc, [sp], #4)

000144f0 <table_find_int8@@Base>:
   144f0:	push	{lr}		; (str lr, [sp, #-4]!)
   144f4:	sub	sp, sp, #12
   144f8:	strb	r2, [sp, #7]
   144fc:	add	r2, sp, #7
   14500:	bl	14440 <table_find@@Base>
   14504:	add	sp, sp, #12
   14508:	pop	{pc}		; (ldr pc, [sp], #4)

0001450c <table_find_uint8@@Base>:
   1450c:	push	{lr}		; (str lr, [sp, #-4]!)
   14510:	sub	sp, sp, #12
   14514:	strb	r2, [sp, #7]
   14518:	add	r2, sp, #7
   1451c:	bl	14440 <table_find@@Base>
   14520:	add	sp, sp, #12
   14524:	pop	{pc}		; (ldr pc, [sp], #4)

00014528 <table_find_int16@@Base>:
   14528:	push	{lr}		; (str lr, [sp, #-4]!)
   1452c:	sub	sp, sp, #12
   14530:	strh	r2, [sp, #6]
   14534:	add	r2, sp, #6
   14538:	bl	14440 <table_find@@Base>
   1453c:	add	sp, sp, #12
   14540:	pop	{pc}		; (ldr pc, [sp], #4)

00014544 <table_find_uint16@@Base>:
   14544:	push	{lr}		; (str lr, [sp, #-4]!)
   14548:	sub	sp, sp, #12
   1454c:	strh	r2, [sp, #6]
   14550:	add	r2, sp, #6
   14554:	bl	14440 <table_find@@Base>
   14558:	add	sp, sp, #12
   1455c:	pop	{pc}		; (ldr pc, [sp], #4)

00014560 <table_find_int32@@Base>:
   14560:	push	{lr}		; (str lr, [sp, #-4]!)
   14564:	sub	sp, sp, #12
   14568:	str	r2, [sp, #4]
   1456c:	add	r2, sp, #4
   14570:	bl	14440 <table_find@@Base>
   14574:	add	sp, sp, #12
   14578:	pop	{pc}		; (ldr pc, [sp], #4)

0001457c <table_find_uint32@@Base>:
   1457c:	push	{lr}		; (str lr, [sp, #-4]!)
   14580:	sub	sp, sp, #12
   14584:	str	r2, [sp, #4]
   14588:	add	r2, sp, #4
   1458c:	bl	14440 <table_find@@Base>
   14590:	add	sp, sp, #12
   14594:	pop	{pc}		; (ldr pc, [sp], #4)

00014598 <table_find_int64@@Base>:
   14598:	push	{lr}		; (str lr, [sp, #-4]!)
   1459c:	sub	sp, sp, #12
   145a0:	strd	r2, [sp]
   145a4:	mov	r2, sp
   145a8:	ldr	r3, [sp, #16]
   145ac:	bl	14440 <table_find@@Base>
   145b0:	add	sp, sp, #12
   145b4:	pop	{pc}		; (ldr pc, [sp], #4)

000145b8 <table_find_uint64@@Base>:
   145b8:	push	{lr}		; (str lr, [sp, #-4]!)
   145bc:	sub	sp, sp, #12
   145c0:	strd	r2, [sp]
   145c4:	mov	r2, sp
   145c8:	ldr	r3, [sp, #16]
   145cc:	bl	14440 <table_find@@Base>
   145d0:	add	sp, sp, #12
   145d4:	pop	{pc}		; (ldr pc, [sp], #4)

000145d8 <table_find_short@@Base>:
   145d8:	push	{lr}		; (str lr, [sp, #-4]!)
   145dc:	sub	sp, sp, #12
   145e0:	strh	r2, [sp, #6]
   145e4:	add	r2, sp, #6
   145e8:	bl	14440 <table_find@@Base>
   145ec:	add	sp, sp, #12
   145f0:	pop	{pc}		; (ldr pc, [sp], #4)

000145f4 <table_find_ushort@@Base>:
   145f4:	push	{lr}		; (str lr, [sp, #-4]!)
   145f8:	sub	sp, sp, #12
   145fc:	strh	r2, [sp, #6]
   14600:	add	r2, sp, #6
   14604:	bl	14440 <table_find@@Base>
   14608:	add	sp, sp, #12
   1460c:	pop	{pc}		; (ldr pc, [sp], #4)

00014610 <table_find_long@@Base>:
   14610:	push	{lr}		; (str lr, [sp, #-4]!)
   14614:	sub	sp, sp, #12
   14618:	str	r2, [sp, #4]
   1461c:	add	r2, sp, #4
   14620:	bl	14440 <table_find@@Base>
   14624:	add	sp, sp, #12
   14628:	pop	{pc}		; (ldr pc, [sp], #4)

0001462c <table_find_ulong@@Base>:
   1462c:	push	{lr}		; (str lr, [sp, #-4]!)
   14630:	sub	sp, sp, #12
   14634:	str	r2, [sp, #4]
   14638:	add	r2, sp, #4
   1463c:	bl	14440 <table_find@@Base>
   14640:	add	sp, sp, #12
   14644:	pop	{pc}		; (ldr pc, [sp], #4)

00014648 <table_find_llong@@Base>:
   14648:	push	{lr}		; (str lr, [sp, #-4]!)
   1464c:	sub	sp, sp, #12
   14650:	strd	r2, [sp]
   14654:	mov	r2, sp
   14658:	ldr	r3, [sp, #16]
   1465c:	bl	14440 <table_find@@Base>
   14660:	add	sp, sp, #12
   14664:	pop	{pc}		; (ldr pc, [sp], #4)

00014668 <table_find_ullong@@Base>:
   14668:	push	{lr}		; (str lr, [sp, #-4]!)
   1466c:	sub	sp, sp, #12
   14670:	strd	r2, [sp]
   14674:	mov	r2, sp
   14678:	ldr	r3, [sp, #16]
   1467c:	bl	14440 <table_find@@Base>
   14680:	add	sp, sp, #12
   14684:	pop	{pc}		; (ldr pc, [sp], #4)

00014688 <table_find_float@@Base>:
   14688:	push	{lr}		; (str lr, [sp, #-4]!)
   1468c:	sub	sp, sp, #12
   14690:	mov	r3, r2
   14694:	add	r2, sp, #4
   14698:	vstr	s0, [sp, #4]
   1469c:	bl	14440 <table_find@@Base>
   146a0:	add	sp, sp, #12
   146a4:	pop	{pc}		; (ldr pc, [sp], #4)

000146a8 <table_find_double@@Base>:
   146a8:	push	{lr}		; (str lr, [sp, #-4]!)
   146ac:	sub	sp, sp, #12
   146b0:	mov	r3, r2
   146b4:	mov	r2, sp
   146b8:	vstr	d0, [sp]
   146bc:	bl	14440 <table_find@@Base>
   146c0:	add	sp, sp, #12
   146c4:	pop	{pc}		; (ldr pc, [sp], #4)

000146c8 <table_find_ldouble@@Base>:
   146c8:	push	{lr}		; (str lr, [sp, #-4]!)
   146cc:	sub	sp, sp, #12
   146d0:	mov	r3, r2
   146d4:	mov	r2, sp
   146d8:	vstr	d0, [sp]
   146dc:	bl	14440 <table_find@@Base>
   146e0:	add	sp, sp, #12
   146e4:	pop	{pc}		; (ldr pc, [sp], #4)

000146e8 <table_find_char@@Base>:
   146e8:	push	{lr}		; (str lr, [sp, #-4]!)
   146ec:	sub	sp, sp, #12
   146f0:	strb	r2, [sp, #7]
   146f4:	add	r2, sp, #7
   146f8:	bl	14440 <table_find@@Base>
   146fc:	add	sp, sp, #12
   14700:	pop	{pc}		; (ldr pc, [sp], #4)

00014704 <table_find_uchar@@Base>:
   14704:	push	{lr}		; (str lr, [sp, #-4]!)
   14708:	sub	sp, sp, #12
   1470c:	strb	r2, [sp, #7]
   14710:	add	r2, sp, #7
   14714:	bl	14440 <table_find@@Base>
   14718:	add	sp, sp, #12
   1471c:	pop	{pc}		; (ldr pc, [sp], #4)

00014720 <table_find_string@@Base>:
   14720:	push	{lr}		; (str lr, [sp, #-4]!)
   14724:	sub	sp, sp, #12
   14728:	str	r2, [sp, #4]
   1472c:	add	r2, sp, #4
   14730:	bl	14440 <table_find@@Base>
   14734:	add	sp, sp, #12
   14738:	pop	{pc}		; (ldr pc, [sp], #4)

0001473c <table_find_ptr@@Base>:
   1473c:	b	14440 <table_find@@Base>

00014740 <table_sorted_subset_find@@Base>:
   14740:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14744:	mov	r5, r1
   14748:	strd	r6, [sp, #8]
   1474c:	mov	r6, r0
   14750:	strd	r8, [sp, #16]
   14754:	mov	r9, r2
   14758:	strd	sl, [sp, #24]
   1475c:	mov	sl, r3
   14760:	str	lr, [sp, #32]
   14764:	sub	sp, sp, #4
   14768:	ldr	r8, [sp, #40]	; 0x28
   1476c:	ldr	fp, [sp, #44]	; 0x2c
   14770:	sub	r4, fp, r8
   14774:	mov	r1, r5
   14778:	add	r4, r4, r4, lsr #31
   1477c:	mov	r0, r6
   14780:	bl	13ab8 <table_get_column_compare_function@@Base>
   14784:	add	r4, r8, r4, asr #1
   14788:	mov	r7, r0
   1478c:	mov	r2, r5
   14790:	mov	r0, r6
   14794:	mov	r1, r4
   14798:	bl	14ea8 <table_get@@Base>
   1479c:	mov	r1, r0
   147a0:	mov	r0, r9
   147a4:	blx	r7
   147a8:	cmp	fp, r8
   147ac:	blt	147c8 <table_sorted_subset_find@@Base+0x88>
   147b0:	cmp	r0, #0
   147b4:	beq	147e8 <table_sorted_subset_find@@Base+0xa8>
   147b8:	cmp	r0, #1
   147bc:	beq	14824 <table_sorted_subset_find@@Base+0xe4>
   147c0:	cmn	r0, #1
   147c4:	beq	1482c <table_sorted_subset_find@@Base+0xec>
   147c8:	rsb	r0, r4, #0
   147cc:	add	sp, sp, #4
   147d0:	ldrd	r4, [sp]
   147d4:	ldrd	r6, [sp, #8]
   147d8:	ldrd	r8, [sp, #16]
   147dc:	ldrd	sl, [sp, #24]
   147e0:	add	sp, sp, #32
   147e4:	pop	{pc}		; (ldr pc, [sp], #4)
   147e8:	cmp	sl, #0
   147ec:	mov	r2, r5
   147f0:	subeq	r4, r4, #1
   147f4:	addne	r4, r4, #1
   147f8:	mov	r1, r4
   147fc:	mov	r0, r6
   14800:	bl	14ea8 <table_get@@Base>
   14804:	mov	r1, r9
   14808:	blx	r7
   1480c:	cmp	r0, #0
   14810:	beq	147e8 <table_sorted_subset_find@@Base+0xa8>
   14814:	cmp	sl, #0
   14818:	addeq	r0, r4, #1
   1481c:	subne	r0, r4, #1
   14820:	b	147cc <table_sorted_subset_find@@Base+0x8c>
   14824:	mov	r8, r4
   14828:	b	14770 <table_sorted_subset_find@@Base+0x30>
   1482c:	sub	fp, r4, #1
   14830:	b	14770 <table_sorted_subset_find@@Base+0x30>

00014834 <table_sorted_find@@Base>:
   14834:	strd	r4, [sp, #-20]!	; 0xffffffec
   14838:	mov	r5, r1
   1483c:	mov	r4, r0
   14840:	strd	r6, [sp, #8]
   14844:	mov	r6, r2
   14848:	mov	r7, r3
   1484c:	str	lr, [sp, #16]
   14850:	sub	sp, sp, #12
   14854:	bl	15074 <table_get_row_length@@Base>
   14858:	sub	ip, r0, #1
   1485c:	mov	lr, #0
   14860:	mov	r3, r7
   14864:	mov	r2, r6
   14868:	mov	r1, r5
   1486c:	mov	r0, r4
   14870:	str	lr, [sp]
   14874:	str	ip, [sp, #4]
   14878:	bl	14740 <table_sorted_subset_find@@Base>
   1487c:	add	sp, sp, #12
   14880:	ldrd	r4, [sp]
   14884:	ldrd	r6, [sp, #8]
   14888:	add	sp, sp, #16
   1488c:	pop	{pc}		; (ldr pc, [sp], #4)

00014890 <table_sorted_find_int@@Base>:
   14890:	push	{lr}		; (str lr, [sp, #-4]!)
   14894:	sub	sp, sp, #12
   14898:	str	r2, [sp, #4]
   1489c:	add	r2, sp, #4
   148a0:	bl	14834 <table_sorted_find@@Base>
   148a4:	add	sp, sp, #12
   148a8:	pop	{pc}		; (ldr pc, [sp], #4)

000148ac <table_sorted_find_uint@@Base>:
   148ac:	push	{lr}		; (str lr, [sp, #-4]!)
   148b0:	sub	sp, sp, #12
   148b4:	str	r2, [sp, #4]
   148b8:	add	r2, sp, #4
   148bc:	bl	14834 <table_sorted_find@@Base>
   148c0:	add	sp, sp, #12
   148c4:	pop	{pc}		; (ldr pc, [sp], #4)

000148c8 <table_sorted_find_int8@@Base>:
   148c8:	push	{lr}		; (str lr, [sp, #-4]!)
   148cc:	sub	sp, sp, #12
   148d0:	strb	r2, [sp, #7]
   148d4:	add	r2, sp, #7
   148d8:	bl	14834 <table_sorted_find@@Base>
   148dc:	add	sp, sp, #12
   148e0:	pop	{pc}		; (ldr pc, [sp], #4)

000148e4 <table_sorted_find_uint8@@Base>:
   148e4:	push	{lr}		; (str lr, [sp, #-4]!)
   148e8:	sub	sp, sp, #12
   148ec:	strb	r2, [sp, #7]
   148f0:	add	r2, sp, #7
   148f4:	bl	14834 <table_sorted_find@@Base>
   148f8:	add	sp, sp, #12
   148fc:	pop	{pc}		; (ldr pc, [sp], #4)

00014900 <table_sorted_find_int16@@Base>:
   14900:	push	{lr}		; (str lr, [sp, #-4]!)
   14904:	sub	sp, sp, #12
   14908:	strh	r2, [sp, #6]
   1490c:	add	r2, sp, #6
   14910:	bl	14834 <table_sorted_find@@Base>
   14914:	add	sp, sp, #12
   14918:	pop	{pc}		; (ldr pc, [sp], #4)

0001491c <table_sorted_find_uint16@@Base>:
   1491c:	push	{lr}		; (str lr, [sp, #-4]!)
   14920:	sub	sp, sp, #12
   14924:	strh	r2, [sp, #6]
   14928:	add	r2, sp, #6
   1492c:	bl	14834 <table_sorted_find@@Base>
   14930:	add	sp, sp, #12
   14934:	pop	{pc}		; (ldr pc, [sp], #4)

00014938 <table_sorted_find_int32@@Base>:
   14938:	push	{lr}		; (str lr, [sp, #-4]!)
   1493c:	sub	sp, sp, #12
   14940:	str	r2, [sp, #4]
   14944:	add	r2, sp, #4
   14948:	bl	14834 <table_sorted_find@@Base>
   1494c:	add	sp, sp, #12
   14950:	pop	{pc}		; (ldr pc, [sp], #4)

00014954 <table_sorted_find_uint32@@Base>:
   14954:	push	{lr}		; (str lr, [sp, #-4]!)
   14958:	sub	sp, sp, #12
   1495c:	str	r2, [sp, #4]
   14960:	add	r2, sp, #4
   14964:	bl	14834 <table_sorted_find@@Base>
   14968:	add	sp, sp, #12
   1496c:	pop	{pc}		; (ldr pc, [sp], #4)

00014970 <table_sorted_find_int64@@Base>:
   14970:	push	{lr}		; (str lr, [sp, #-4]!)
   14974:	sub	sp, sp, #12
   14978:	strd	r2, [sp]
   1497c:	mov	r2, sp
   14980:	ldr	r3, [sp, #16]
   14984:	bl	14834 <table_sorted_find@@Base>
   14988:	add	sp, sp, #12
   1498c:	pop	{pc}		; (ldr pc, [sp], #4)

00014990 <table_sorted_find_uint64@@Base>:
   14990:	push	{lr}		; (str lr, [sp, #-4]!)
   14994:	sub	sp, sp, #12
   14998:	strd	r2, [sp]
   1499c:	mov	r2, sp
   149a0:	ldr	r3, [sp, #16]
   149a4:	bl	14834 <table_sorted_find@@Base>
   149a8:	add	sp, sp, #12
   149ac:	pop	{pc}		; (ldr pc, [sp], #4)

000149b0 <table_sorted_find_short@@Base>:
   149b0:	push	{lr}		; (str lr, [sp, #-4]!)
   149b4:	sub	sp, sp, #12
   149b8:	strh	r2, [sp, #6]
   149bc:	add	r2, sp, #6
   149c0:	bl	14834 <table_sorted_find@@Base>
   149c4:	add	sp, sp, #12
   149c8:	pop	{pc}		; (ldr pc, [sp], #4)

000149cc <table_sorted_find_ushort@@Base>:
   149cc:	push	{lr}		; (str lr, [sp, #-4]!)
   149d0:	sub	sp, sp, #12
   149d4:	strh	r2, [sp, #6]
   149d8:	add	r2, sp, #6
   149dc:	bl	14834 <table_sorted_find@@Base>
   149e0:	add	sp, sp, #12
   149e4:	pop	{pc}		; (ldr pc, [sp], #4)

000149e8 <table_sorted_find_long@@Base>:
   149e8:	push	{lr}		; (str lr, [sp, #-4]!)
   149ec:	sub	sp, sp, #12
   149f0:	str	r2, [sp, #4]
   149f4:	add	r2, sp, #4
   149f8:	bl	14834 <table_sorted_find@@Base>
   149fc:	add	sp, sp, #12
   14a00:	pop	{pc}		; (ldr pc, [sp], #4)

00014a04 <table_sorted_find_ulong@@Base>:
   14a04:	push	{lr}		; (str lr, [sp, #-4]!)
   14a08:	sub	sp, sp, #12
   14a0c:	str	r2, [sp, #4]
   14a10:	add	r2, sp, #4
   14a14:	bl	14834 <table_sorted_find@@Base>
   14a18:	add	sp, sp, #12
   14a1c:	pop	{pc}		; (ldr pc, [sp], #4)

00014a20 <table_sorted_find_llong@@Base>:
   14a20:	push	{lr}		; (str lr, [sp, #-4]!)
   14a24:	sub	sp, sp, #12
   14a28:	strd	r2, [sp]
   14a2c:	mov	r2, sp
   14a30:	ldr	r3, [sp, #16]
   14a34:	bl	14834 <table_sorted_find@@Base>
   14a38:	add	sp, sp, #12
   14a3c:	pop	{pc}		; (ldr pc, [sp], #4)

00014a40 <table_sorted_find_ullong@@Base>:
   14a40:	push	{lr}		; (str lr, [sp, #-4]!)
   14a44:	sub	sp, sp, #12
   14a48:	strd	r2, [sp]
   14a4c:	mov	r2, sp
   14a50:	ldr	r3, [sp, #16]
   14a54:	bl	14834 <table_sorted_find@@Base>
   14a58:	add	sp, sp, #12
   14a5c:	pop	{pc}		; (ldr pc, [sp], #4)

00014a60 <table_sorted_find_float@@Base>:
   14a60:	push	{lr}		; (str lr, [sp, #-4]!)
   14a64:	sub	sp, sp, #12
   14a68:	mov	r3, r2
   14a6c:	add	r2, sp, #4
   14a70:	vstr	s0, [sp, #4]
   14a74:	bl	14834 <table_sorted_find@@Base>
   14a78:	add	sp, sp, #12
   14a7c:	pop	{pc}		; (ldr pc, [sp], #4)

00014a80 <table_sorted_find_double@@Base>:
   14a80:	push	{lr}		; (str lr, [sp, #-4]!)
   14a84:	sub	sp, sp, #12
   14a88:	mov	r3, r2
   14a8c:	mov	r2, sp
   14a90:	vstr	d0, [sp]
   14a94:	bl	14834 <table_sorted_find@@Base>
   14a98:	add	sp, sp, #12
   14a9c:	pop	{pc}		; (ldr pc, [sp], #4)

00014aa0 <table_sorted_find_ldouble@@Base>:
   14aa0:	push	{lr}		; (str lr, [sp, #-4]!)
   14aa4:	sub	sp, sp, #12
   14aa8:	mov	r3, r2
   14aac:	mov	r2, sp
   14ab0:	vstr	d0, [sp]
   14ab4:	bl	14834 <table_sorted_find@@Base>
   14ab8:	add	sp, sp, #12
   14abc:	pop	{pc}		; (ldr pc, [sp], #4)

00014ac0 <table_sorted_find_char@@Base>:
   14ac0:	push	{lr}		; (str lr, [sp, #-4]!)
   14ac4:	sub	sp, sp, #12
   14ac8:	strb	r2, [sp, #7]
   14acc:	add	r2, sp, #7
   14ad0:	bl	14834 <table_sorted_find@@Base>
   14ad4:	add	sp, sp, #12
   14ad8:	pop	{pc}		; (ldr pc, [sp], #4)

00014adc <table_sorted_find_uchar@@Base>:
   14adc:	push	{lr}		; (str lr, [sp, #-4]!)
   14ae0:	sub	sp, sp, #12
   14ae4:	strb	r2, [sp, #7]
   14ae8:	add	r2, sp, #7
   14aec:	bl	14834 <table_sorted_find@@Base>
   14af0:	add	sp, sp, #12
   14af4:	pop	{pc}		; (ldr pc, [sp], #4)

00014af8 <table_sorted_find_string@@Base>:
   14af8:	b	14834 <table_sorted_find@@Base>

00014afc <table_sorted_find_ptr@@Base>:
   14afc:	b	14834 <table_sorted_find@@Base>

00014b00 <table_sorted_subset_find_int@@Base>:
   14b00:	push	{lr}		; (str lr, [sp, #-4]!)
   14b04:	sub	sp, sp, #20
   14b08:	ldr	lr, [sp, #24]
   14b0c:	ldr	ip, [sp, #28]
   14b10:	str	lr, [sp]
   14b14:	str	r2, [sp, #12]
   14b18:	add	r2, sp, #12
   14b1c:	str	ip, [sp, #4]
   14b20:	bl	14740 <table_sorted_subset_find@@Base>
   14b24:	add	sp, sp, #20
   14b28:	pop	{pc}		; (ldr pc, [sp], #4)

00014b2c <table_sorted_subset_find_uint@@Base>:
   14b2c:	push	{lr}		; (str lr, [sp, #-4]!)
   14b30:	sub	sp, sp, #20
   14b34:	ldr	lr, [sp, #24]
   14b38:	ldr	ip, [sp, #28]
   14b3c:	str	lr, [sp]
   14b40:	str	r2, [sp, #12]
   14b44:	add	r2, sp, #12
   14b48:	str	ip, [sp, #4]
   14b4c:	bl	14740 <table_sorted_subset_find@@Base>
   14b50:	add	sp, sp, #20
   14b54:	pop	{pc}		; (ldr pc, [sp], #4)

00014b58 <table_sorted_subset_find_int8@@Base>:
   14b58:	push	{lr}		; (str lr, [sp, #-4]!)
   14b5c:	sub	sp, sp, #20
   14b60:	ldr	lr, [sp, #24]
   14b64:	ldr	ip, [sp, #28]
   14b68:	str	lr, [sp]
   14b6c:	strb	r2, [sp, #15]
   14b70:	add	r2, sp, #15
   14b74:	str	ip, [sp, #4]
   14b78:	bl	14740 <table_sorted_subset_find@@Base>
   14b7c:	add	sp, sp, #20
   14b80:	pop	{pc}		; (ldr pc, [sp], #4)

00014b84 <table_sorted_subset_find_uint8@@Base>:
   14b84:	push	{lr}		; (str lr, [sp, #-4]!)
   14b88:	sub	sp, sp, #20
   14b8c:	ldr	lr, [sp, #24]
   14b90:	ldr	ip, [sp, #28]
   14b94:	str	lr, [sp]
   14b98:	strb	r2, [sp, #15]
   14b9c:	add	r2, sp, #15
   14ba0:	str	ip, [sp, #4]
   14ba4:	bl	14740 <table_sorted_subset_find@@Base>
   14ba8:	add	sp, sp, #20
   14bac:	pop	{pc}		; (ldr pc, [sp], #4)

00014bb0 <table_sorted_subset_find_int16@@Base>:
   14bb0:	push	{lr}		; (str lr, [sp, #-4]!)
   14bb4:	sub	sp, sp, #20
   14bb8:	ldr	lr, [sp, #24]
   14bbc:	ldr	ip, [sp, #28]
   14bc0:	str	lr, [sp]
   14bc4:	strh	r2, [sp, #14]
   14bc8:	add	r2, sp, #14
   14bcc:	str	ip, [sp, #4]
   14bd0:	bl	14740 <table_sorted_subset_find@@Base>
   14bd4:	add	sp, sp, #20
   14bd8:	pop	{pc}		; (ldr pc, [sp], #4)

00014bdc <table_sorted_subset_find_uint16@@Base>:
   14bdc:	push	{lr}		; (str lr, [sp, #-4]!)
   14be0:	sub	sp, sp, #20
   14be4:	ldr	lr, [sp, #24]
   14be8:	ldr	ip, [sp, #28]
   14bec:	str	lr, [sp]
   14bf0:	strh	r2, [sp, #14]
   14bf4:	add	r2, sp, #14
   14bf8:	str	ip, [sp, #4]
   14bfc:	bl	14740 <table_sorted_subset_find@@Base>
   14c00:	add	sp, sp, #20
   14c04:	pop	{pc}		; (ldr pc, [sp], #4)

00014c08 <table_sorted_subset_find_int32@@Base>:
   14c08:	push	{lr}		; (str lr, [sp, #-4]!)
   14c0c:	sub	sp, sp, #20
   14c10:	ldr	lr, [sp, #24]
   14c14:	ldr	ip, [sp, #28]
   14c18:	str	lr, [sp]
   14c1c:	str	r2, [sp, #12]
   14c20:	add	r2, sp, #12
   14c24:	str	ip, [sp, #4]
   14c28:	bl	14740 <table_sorted_subset_find@@Base>
   14c2c:	add	sp, sp, #20
   14c30:	pop	{pc}		; (ldr pc, [sp], #4)

00014c34 <table_sorted_subset_find_uint32@@Base>:
   14c34:	push	{lr}		; (str lr, [sp, #-4]!)
   14c38:	sub	sp, sp, #20
   14c3c:	ldr	lr, [sp, #24]
   14c40:	ldr	ip, [sp, #28]
   14c44:	str	lr, [sp]
   14c48:	str	r2, [sp, #12]
   14c4c:	add	r2, sp, #12
   14c50:	str	ip, [sp, #4]
   14c54:	bl	14740 <table_sorted_subset_find@@Base>
   14c58:	add	sp, sp, #20
   14c5c:	pop	{pc}		; (ldr pc, [sp], #4)

00014c60 <table_sorted_subset_find_int64@@Base>:
   14c60:	push	{lr}		; (str lr, [sp, #-4]!)
   14c64:	sub	sp, sp, #20
   14c68:	ldr	lr, [sp, #28]
   14c6c:	ldr	ip, [sp, #32]
   14c70:	strd	r2, [sp, #8]
   14c74:	add	r2, sp, #8
   14c78:	ldr	r3, [sp, #24]
   14c7c:	str	lr, [sp]
   14c80:	str	ip, [sp, #4]
   14c84:	bl	14740 <table_sorted_subset_find@@Base>
   14c88:	add	sp, sp, #20
   14c8c:	pop	{pc}		; (ldr pc, [sp], #4)

00014c90 <table_sorted_subset_find_uint64@@Base>:
   14c90:	push	{lr}		; (str lr, [sp, #-4]!)
   14c94:	sub	sp, sp, #20
   14c98:	ldr	lr, [sp, #28]
   14c9c:	ldr	ip, [sp, #32]
   14ca0:	strd	r2, [sp, #8]
   14ca4:	add	r2, sp, #8
   14ca8:	ldr	r3, [sp, #24]
   14cac:	str	lr, [sp]
   14cb0:	str	ip, [sp, #4]
   14cb4:	bl	14740 <table_sorted_subset_find@@Base>
   14cb8:	add	sp, sp, #20
   14cbc:	pop	{pc}		; (ldr pc, [sp], #4)

00014cc0 <table_sorted_subset_find_short@@Base>:
   14cc0:	push	{lr}		; (str lr, [sp, #-4]!)
   14cc4:	sub	sp, sp, #20
   14cc8:	ldr	lr, [sp, #24]
   14ccc:	ldr	ip, [sp, #28]
   14cd0:	str	lr, [sp]
   14cd4:	strh	r2, [sp, #14]
   14cd8:	add	r2, sp, #14
   14cdc:	str	ip, [sp, #4]
   14ce0:	bl	14740 <table_sorted_subset_find@@Base>
   14ce4:	add	sp, sp, #20
   14ce8:	pop	{pc}		; (ldr pc, [sp], #4)

00014cec <table_sorted_subset_find_ushort@@Base>:
   14cec:	push	{lr}		; (str lr, [sp, #-4]!)
   14cf0:	sub	sp, sp, #20
   14cf4:	ldr	lr, [sp, #24]
   14cf8:	ldr	ip, [sp, #28]
   14cfc:	str	lr, [sp]
   14d00:	strh	r2, [sp, #14]
   14d04:	add	r2, sp, #14
   14d08:	str	ip, [sp, #4]
   14d0c:	bl	14740 <table_sorted_subset_find@@Base>
   14d10:	add	sp, sp, #20
   14d14:	pop	{pc}		; (ldr pc, [sp], #4)

00014d18 <table_sorted_subset_find_long@@Base>:
   14d18:	push	{lr}		; (str lr, [sp, #-4]!)
   14d1c:	sub	sp, sp, #20
   14d20:	ldr	lr, [sp, #24]
   14d24:	ldr	ip, [sp, #28]
   14d28:	str	lr, [sp]
   14d2c:	str	r2, [sp, #12]
   14d30:	add	r2, sp, #12
   14d34:	str	ip, [sp, #4]
   14d38:	bl	14740 <table_sorted_subset_find@@Base>
   14d3c:	add	sp, sp, #20
   14d40:	pop	{pc}		; (ldr pc, [sp], #4)

00014d44 <table_sorted_subset_find_ulong@@Base>:
   14d44:	push	{lr}		; (str lr, [sp, #-4]!)
   14d48:	sub	sp, sp, #20
   14d4c:	ldr	lr, [sp, #24]
   14d50:	ldr	ip, [sp, #28]
   14d54:	str	lr, [sp]
   14d58:	str	r2, [sp, #12]
   14d5c:	add	r2, sp, #12
   14d60:	str	ip, [sp, #4]
   14d64:	bl	14740 <table_sorted_subset_find@@Base>
   14d68:	add	sp, sp, #20
   14d6c:	pop	{pc}		; (ldr pc, [sp], #4)

00014d70 <table_sorted_subset_find_llong@@Base>:
   14d70:	push	{lr}		; (str lr, [sp, #-4]!)
   14d74:	sub	sp, sp, #20
   14d78:	ldr	lr, [sp, #28]
   14d7c:	ldr	ip, [sp, #32]
   14d80:	strd	r2, [sp, #8]
   14d84:	add	r2, sp, #8
   14d88:	ldr	r3, [sp, #24]
   14d8c:	str	lr, [sp]
   14d90:	str	ip, [sp, #4]
   14d94:	bl	14740 <table_sorted_subset_find@@Base>
   14d98:	add	sp, sp, #20
   14d9c:	pop	{pc}		; (ldr pc, [sp], #4)

00014da0 <table_sorted_subset_find_ullong@@Base>:
   14da0:	push	{lr}		; (str lr, [sp, #-4]!)
   14da4:	sub	sp, sp, #20
   14da8:	ldr	lr, [sp, #28]
   14dac:	ldr	ip, [sp, #32]
   14db0:	strd	r2, [sp, #8]
   14db4:	add	r2, sp, #8
   14db8:	ldr	r3, [sp, #24]
   14dbc:	str	lr, [sp]
   14dc0:	str	ip, [sp, #4]
   14dc4:	bl	14740 <table_sorted_subset_find@@Base>
   14dc8:	add	sp, sp, #20
   14dcc:	pop	{pc}		; (ldr pc, [sp], #4)

00014dd0 <table_sorted_subset_find_float@@Base>:
   14dd0:	push	{lr}		; (str lr, [sp, #-4]!)
   14dd4:	sub	sp, sp, #20
   14dd8:	ldr	ip, [sp, #24]
   14ddc:	stm	sp, {r3, ip}
   14de0:	mov	r3, r2
   14de4:	add	r2, sp, #12
   14de8:	vstr	s0, [sp, #12]
   14dec:	bl	14740 <table_sorted_subset_find@@Base>
   14df0:	add	sp, sp, #20
   14df4:	pop	{pc}		; (ldr pc, [sp], #4)

00014df8 <table_sorted_subset_find_double@@Base>:
   14df8:	push	{lr}		; (str lr, [sp, #-4]!)
   14dfc:	sub	sp, sp, #20
   14e00:	ldr	ip, [sp, #24]
   14e04:	stm	sp, {r3, ip}
   14e08:	mov	r3, r2
   14e0c:	add	r2, sp, #8
   14e10:	vstr	d0, [sp, #8]
   14e14:	bl	14740 <table_sorted_subset_find@@Base>
   14e18:	add	sp, sp, #20
   14e1c:	pop	{pc}		; (ldr pc, [sp], #4)

00014e20 <table_sorted_subset_find_ldouble@@Base>:
   14e20:	push	{lr}		; (str lr, [sp, #-4]!)
   14e24:	sub	sp, sp, #20
   14e28:	ldr	ip, [sp, #24]
   14e2c:	stm	sp, {r3, ip}
   14e30:	mov	r3, r2
   14e34:	add	r2, sp, #8
   14e38:	vstr	d0, [sp, #8]
   14e3c:	bl	14740 <table_sorted_subset_find@@Base>
   14e40:	add	sp, sp, #20
   14e44:	pop	{pc}		; (ldr pc, [sp], #4)

00014e48 <table_sorted_subset_find_char@@Base>:
   14e48:	push	{lr}		; (str lr, [sp, #-4]!)
   14e4c:	sub	sp, sp, #20
   14e50:	ldr	lr, [sp, #24]
   14e54:	ldr	ip, [sp, #28]
   14e58:	str	lr, [sp]
   14e5c:	strb	r2, [sp, #15]
   14e60:	add	r2, sp, #15
   14e64:	str	ip, [sp, #4]
   14e68:	bl	14740 <table_sorted_subset_find@@Base>
   14e6c:	add	sp, sp, #20
   14e70:	pop	{pc}		; (ldr pc, [sp], #4)

00014e74 <table_sorted_subset_find_uchar@@Base>:
   14e74:	push	{lr}		; (str lr, [sp, #-4]!)
   14e78:	sub	sp, sp, #20
   14e7c:	ldr	lr, [sp, #24]
   14e80:	ldr	ip, [sp, #28]
   14e84:	str	lr, [sp]
   14e88:	strb	r2, [sp, #15]
   14e8c:	add	r2, sp, #15
   14e90:	str	ip, [sp, #4]
   14e94:	bl	14740 <table_sorted_subset_find@@Base>
   14e98:	add	sp, sp, #20
   14e9c:	pop	{pc}		; (ldr pc, [sp], #4)

00014ea0 <table_sorted_subset_find_string@@Base>:
   14ea0:	b	14740 <table_sorted_subset_find@@Base>

00014ea4 <table_sorted_subset_find_ptr@@Base>:
   14ea4:	b	14740 <table_sorted_subset_find@@Base>

00014ea8 <table_get@@Base>:
   14ea8:	str	r4, [sp, #-8]!
   14eac:	str	lr, [sp, #4]
   14eb0:	bl	16604 <table_get_cell_ptr@@Base>
   14eb4:	ldr	r4, [sp]
   14eb8:	add	sp, sp, #4
   14ebc:	ldr	r0, [r0]
   14ec0:	pop	{pc}		; (ldr pc, [sp], #4)

00014ec4 <table_get_bool@@Base>:
   14ec4:	str	r4, [sp, #-8]!
   14ec8:	str	lr, [sp, #4]
   14ecc:	bl	14ea8 <table_get@@Base>
   14ed0:	ldr	r4, [sp]
   14ed4:	add	sp, sp, #4
   14ed8:	ldrb	r0, [r0]
   14edc:	pop	{pc}		; (ldr pc, [sp], #4)

00014ee0 <table_get_int@@Base>:
   14ee0:	str	r4, [sp, #-8]!
   14ee4:	str	lr, [sp, #4]
   14ee8:	bl	14ea8 <table_get@@Base>
   14eec:	ldr	r4, [sp]
   14ef0:	add	sp, sp, #4
   14ef4:	ldr	r0, [r0]
   14ef8:	pop	{pc}		; (ldr pc, [sp], #4)

00014efc <table_get_uint@@Base>:
   14efc:	str	r4, [sp, #-8]!
   14f00:	str	lr, [sp, #4]
   14f04:	bl	14ea8 <table_get@@Base>
   14f08:	ldr	r4, [sp]
   14f0c:	add	sp, sp, #4
   14f10:	ldr	r0, [r0]
   14f14:	pop	{pc}		; (ldr pc, [sp], #4)

00014f18 <table_get_int8@@Base>:
   14f18:	str	r4, [sp, #-8]!
   14f1c:	str	lr, [sp, #4]
   14f20:	bl	14ea8 <table_get@@Base>
   14f24:	ldr	r4, [sp]
   14f28:	add	sp, sp, #4
   14f2c:	ldrsb	r0, [r0]
   14f30:	pop	{pc}		; (ldr pc, [sp], #4)

00014f34 <table_get_uint8@@Base>:
   14f34:	str	r4, [sp, #-8]!
   14f38:	str	lr, [sp, #4]
   14f3c:	bl	14ea8 <table_get@@Base>
   14f40:	ldr	r4, [sp]
   14f44:	add	sp, sp, #4
   14f48:	ldrb	r0, [r0]
   14f4c:	pop	{pc}		; (ldr pc, [sp], #4)

00014f50 <table_get_int16@@Base>:
   14f50:	str	r4, [sp, #-8]!
   14f54:	str	lr, [sp, #4]
   14f58:	bl	14ea8 <table_get@@Base>
   14f5c:	ldr	r4, [sp]
   14f60:	add	sp, sp, #4
   14f64:	ldrsh	r0, [r0]
   14f68:	pop	{pc}		; (ldr pc, [sp], #4)

00014f6c <table_get_uint16@@Base>:
   14f6c:	str	r4, [sp, #-8]!
   14f70:	str	lr, [sp, #4]
   14f74:	bl	14ea8 <table_get@@Base>
   14f78:	ldr	r4, [sp]
   14f7c:	add	sp, sp, #4
   14f80:	ldrh	r0, [r0]
   14f84:	pop	{pc}		; (ldr pc, [sp], #4)

00014f88 <table_get_int32@@Base>:
   14f88:	b	14ee0 <table_get_int@@Base>

00014f8c <table_get_uint32@@Base>:
   14f8c:	b	14efc <table_get_uint@@Base>

00014f90 <table_get_int64@@Base>:
   14f90:	str	r4, [sp, #-8]!
   14f94:	str	lr, [sp, #4]
   14f98:	bl	14ea8 <table_get@@Base>
   14f9c:	ldr	r4, [sp]
   14fa0:	add	sp, sp, #4
   14fa4:	ldrd	r0, [r0]
   14fa8:	pop	{pc}		; (ldr pc, [sp], #4)

00014fac <table_get_uint64@@Base>:
   14fac:	str	r4, [sp, #-8]!
   14fb0:	str	lr, [sp, #4]
   14fb4:	bl	14ea8 <table_get@@Base>
   14fb8:	ldr	r4, [sp]
   14fbc:	add	sp, sp, #4
   14fc0:	ldrd	r0, [r0]
   14fc4:	pop	{pc}		; (ldr pc, [sp], #4)

00014fc8 <table_get_short@@Base>:
   14fc8:	b	14f50 <table_get_int16@@Base>

00014fcc <table_get_ushort@@Base>:
   14fcc:	b	14f6c <table_get_uint16@@Base>

00014fd0 <table_get_long@@Base>:
   14fd0:	str	r4, [sp, #-8]!
   14fd4:	str	lr, [sp, #4]
   14fd8:	bl	14ea8 <table_get@@Base>
   14fdc:	ldr	r4, [sp]
   14fe0:	add	sp, sp, #4
   14fe4:	ldr	r0, [r0]
   14fe8:	pop	{pc}		; (ldr pc, [sp], #4)

00014fec <table_get_ulong@@Base>:
   14fec:	str	r4, [sp, #-8]!
   14ff0:	str	lr, [sp, #4]
   14ff4:	bl	14ea8 <table_get@@Base>
   14ff8:	ldr	r4, [sp]
   14ffc:	add	sp, sp, #4
   15000:	ldr	r0, [r0]
   15004:	pop	{pc}		; (ldr pc, [sp], #4)

00015008 <table_get_llong@@Base>:
   15008:	b	14f90 <table_get_int64@@Base>

0001500c <table_get_ullong@@Base>:
   1500c:	b	14fac <table_get_uint64@@Base>

00015010 <table_get_float@@Base>:
   15010:	str	r4, [sp, #-8]!
   15014:	str	lr, [sp, #4]
   15018:	bl	14ea8 <table_get@@Base>
   1501c:	ldr	r4, [sp]
   15020:	add	sp, sp, #4
   15024:	vldr	s0, [r0]
   15028:	pop	{pc}		; (ldr pc, [sp], #4)

0001502c <table_get_double@@Base>:
   1502c:	str	r4, [sp, #-8]!
   15030:	str	lr, [sp, #4]
   15034:	bl	14ea8 <table_get@@Base>
   15038:	ldr	r4, [sp]
   1503c:	add	sp, sp, #4
   15040:	vldr	d0, [r0]
   15044:	pop	{pc}		; (ldr pc, [sp], #4)

00015048 <table_get_ldouble@@Base>:
   15048:	str	r4, [sp, #-8]!
   1504c:	str	lr, [sp, #4]
   15050:	bl	14ea8 <table_get@@Base>
   15054:	ldr	r4, [sp]
   15058:	add	sp, sp, #4
   1505c:	vldr	d0, [r0]
   15060:	pop	{pc}		; (ldr pc, [sp], #4)

00015064 <table_get_char@@Base>:
   15064:	b	14f34 <table_get_uint8@@Base>

00015068 <table_get_uchar@@Base>:
   15068:	b	14f34 <table_get_uint8@@Base>

0001506c <table_get_string@@Base>:
   1506c:	b	14ea8 <table_get@@Base>

00015070 <table_get_ptr@@Base>:
   15070:	b	14ea8 <table_get@@Base>

00015074 <table_get_row_length@@Base>:
   15074:	ldr	r0, [r0, #20]
   15078:	bx	lr

0001507c <table_get_row_ptr@@Base>:
   1507c:	ldr	r0, [r0, #16]
   15080:	add	r0, r0, r1, lsl #2
   15084:	bx	lr

00015088 <table_row_init@@Base>:
   15088:	strd	r4, [sp, #-16]!
   1508c:	mov	r5, r0
   15090:	str	r6, [sp, #8]
   15094:	str	lr, [sp, #12]
   15098:	bl	1507c <table_get_row_ptr@@Base>
   1509c:	mov	r4, r0
   150a0:	ldr	r0, [r5, #12]
   150a4:	lsl	r0, r0, #2
   150a8:	bl	1293c <malloc@plt>
   150ac:	ldr	r6, [sp, #8]
   150b0:	str	r0, [r4]
   150b4:	ldrd	r4, [sp]
   150b8:	add	sp, sp, #12
   150bc:	pop	{pc}		; (ldr pc, [sp], #4)

000150c0 <table_add_row@@Base>:
   150c0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   150c4:	mov	r4, r0
   150c8:	strd	r6, [sp, #8]
   150cc:	str	r8, [sp, #16]
   150d0:	str	lr, [sp, #20]
   150d4:	bl	15074 <table_get_row_length@@Base>
   150d8:	ldr	r3, [r4, #24]
   150dc:	udiv	r2, r0, r3
   150e0:	mls	r0, r2, r3, r0
   150e4:	cmp	r0, #0
   150e8:	beq	15174 <table_add_row@@Base+0xb4>
   150ec:	mov	r0, r4
   150f0:	bl	15074 <table_get_row_length@@Base>
   150f4:	mov	r6, r0
   150f8:	mov	r0, r4
   150fc:	bl	13674 <table_get_column_length@@Base>
   15100:	mov	r7, r0
   15104:	mov	r1, r6
   15108:	mov	r0, r4
   1510c:	bl	15088 <table_row_init@@Base>
   15110:	cmp	r7, #0
   15114:	ble	15138 <table_add_row@@Base+0x78>
   15118:	mov	r5, #0
   1511c:	mov	r2, r5
   15120:	mov	r1, r6
   15124:	add	r5, r5, #1
   15128:	mov	r0, r4
   1512c:	bl	16628 <table_cell_init@@Base>
   15130:	cmp	r7, r5
   15134:	bne	1511c <table_add_row@@Base+0x5c>
   15138:	mov	r0, r4
   1513c:	bl	15074 <table_get_row_length@@Base>
   15140:	mov	r1, r0
   15144:	mov	r3, #2
   15148:	mov	r0, r4
   1514c:	mvn	r2, #0
   15150:	bl	135e0 <table_notify@@Base>
   15154:	ldr	r0, [r4, #20]
   15158:	ldrd	r6, [sp, #8]
   1515c:	ldr	r8, [sp, #16]
   15160:	add	r3, r0, #1
   15164:	str	r3, [r4, #20]
   15168:	ldrd	r4, [sp]
   1516c:	add	sp, sp, #20
   15170:	pop	{pc}		; (ldr pc, [sp], #4)
   15174:	ldr	r0, [r4, #16]
   15178:	ldr	r2, [r4, #28]
   1517c:	add	r3, r3, r2
   15180:	lsl	r1, r3, #2
   15184:	str	r3, [r4, #28]
   15188:	bl	12924 <realloc@plt>
   1518c:	str	r0, [r4, #16]
   15190:	b	150ec <table_add_row@@Base+0x2c>

00015194 <table_row_destroy@@Base>:
   15194:	strd	r4, [sp, #-24]!	; 0xffffffe8
   15198:	strd	r6, [sp, #8]
   1519c:	mov	r7, r1
   151a0:	mov	r6, r0
   151a4:	str	r8, [sp, #16]
   151a8:	str	lr, [sp, #20]
   151ac:	bl	13674 <table_get_column_length@@Base>
   151b0:	mov	r5, r0
   151b4:	mov	r1, r7
   151b8:	mov	r0, r6
   151bc:	bl	1507c <table_get_row_ptr@@Base>
   151c0:	cmp	r5, #0
   151c4:	mov	r8, r0
   151c8:	ble	151ec <table_row_destroy@@Base+0x58>
   151cc:	mov	r4, #0
   151d0:	mov	r2, r4
   151d4:	mov	r1, r7
   151d8:	add	r4, r4, #1
   151dc:	mov	r0, r6
   151e0:	bl	16648 <table_cell_destroy@@Base>
   151e4:	cmp	r5, r4
   151e8:	bne	151d0 <table_row_destroy@@Base+0x3c>
   151ec:	ldr	r0, [r8]
   151f0:	cmp	r0, #0
   151f4:	beq	15210 <table_row_destroy@@Base+0x7c>
   151f8:	ldrd	r4, [sp]
   151fc:	ldrd	r6, [sp, #8]
   15200:	ldr	r8, [sp, #16]
   15204:	ldr	lr, [sp, #20]
   15208:	add	sp, sp, #24
   1520c:	b	12918 <free@plt>
   15210:	ldrd	r4, [sp]
   15214:	ldrd	r6, [sp, #8]
   15218:	ldr	r8, [sp, #16]
   1521c:	add	sp, sp, #20
   15220:	pop	{pc}		; (ldr pc, [sp], #4)

00015224 <table_remove_row@@Base>:
   15224:	strd	r4, [sp, #-24]!	; 0xffffffe8
   15228:	mov	r4, r0
   1522c:	mov	r5, r1
   15230:	strd	r6, [sp, #8]
   15234:	str	r8, [sp, #16]
   15238:	str	lr, [sp, #20]
   1523c:	bl	15074 <table_get_row_length@@Base>
   15240:	mov	r7, r0
   15244:	mov	r0, r4
   15248:	bl	13674 <table_get_column_length@@Base>
   1524c:	subs	r8, r0, #0
   15250:	ble	15298 <table_remove_row@@Base+0x74>
   15254:	mov	r6, #0
   15258:	mov	r1, r6
   1525c:	mov	r0, r4
   15260:	bl	13a00 <table_get_column_data_type@@Base>
   15264:	cmp	r0, #23
   15268:	mov	r2, r6
   1526c:	mov	r1, r5
   15270:	add	r6, r6, #1
   15274:	mov	r0, r4
   15278:	beq	15290 <table_remove_row@@Base+0x6c>
   1527c:	bl	16604 <table_get_cell_ptr@@Base>
   15280:	ldr	r3, [r0]
   15284:	subs	r0, r3, #0
   15288:	beq	15290 <table_remove_row@@Base+0x6c>
   1528c:	bl	12918 <free@plt>
   15290:	cmp	r8, r6
   15294:	bne	15258 <table_remove_row@@Base+0x34>
   15298:	mov	r1, r5
   1529c:	mov	r0, r4
   152a0:	bl	1507c <table_get_row_ptr@@Base>
   152a4:	ldr	r0, [r0]
   152a8:	cmp	r0, #0
   152ac:	beq	152b4 <table_remove_row@@Base+0x90>
   152b0:	bl	12918 <free@plt>
   152b4:	sub	r0, r7, #1
   152b8:	cmp	r5, r0
   152bc:	bge	152e8 <table_remove_row@@Base+0xc4>
   152c0:	lsl	r3, r5, #2
   152c4:	mov	r2, r5
   152c8:	ldr	r1, [r4, #16]
   152cc:	add	r2, r2, #1
   152d0:	cmp	r2, r0
   152d4:	add	ip, r1, r3
   152d8:	add	r3, r3, #4
   152dc:	ldr	r1, [r1, r3]
   152e0:	str	r1, [ip]
   152e4:	bne	152c8 <table_remove_row@@Base+0xa4>
   152e8:	ldr	r3, [r4, #20]
   152ec:	mov	r0, r4
   152f0:	sub	r3, r3, #1
   152f4:	str	r3, [r4, #20]
   152f8:	bl	15074 <table_get_row_length@@Base>
   152fc:	ldr	r2, [r4, #24]
   15300:	udiv	r3, r0, r2
   15304:	mls	r0, r3, r2, r0
   15308:	cmp	r0, #0
   1530c:	beq	1533c <table_remove_row@@Base+0x118>
   15310:	mov	r0, r4
   15314:	mov	r1, r5
   15318:	mov	r3, #4
   1531c:	mvn	r2, #0
   15320:	bl	135e0 <table_notify@@Base>
   15324:	ldrd	r4, [sp]
   15328:	mov	r0, #0
   1532c:	ldrd	r6, [sp, #8]
   15330:	ldr	r8, [sp, #16]
   15334:	add	sp, sp, #20
   15338:	pop	{pc}		; (ldr pc, [sp], #4)
   1533c:	ldr	r0, [r4, #16]
   15340:	ldr	r3, [r4, #28]
   15344:	sub	r2, r3, r2
   15348:	lsl	r1, r2, #2
   1534c:	str	r2, [r4, #28]
   15350:	bl	12924 <realloc@plt>
   15354:	str	r0, [r4, #16]
   15358:	b	15310 <table_remove_row@@Base+0xec>

0001535c <table_set_row_ptr@@Base>:
   1535c:	ldr	r2, [r2]
   15360:	ldr	r3, [r0, #16]
   15364:	str	r2, [r3, r1, lsl #2]
   15368:	bx	lr

0001536c <table_set@@Base>:
   1536c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   15370:	mov	r5, r0
   15374:	ldr	r4, [sp, #32]
   15378:	strd	r6, [sp, #8]
   1537c:	mov	r6, r2
   15380:	mov	r7, r3
   15384:	strd	r8, [sp, #16]
   15388:	mov	r9, r1
   1538c:	str	sl, [sp, #24]
   15390:	str	lr, [sp, #28]
   15394:	bl	16604 <table_get_cell_ptr@@Base>
   15398:	mov	r8, r0
   1539c:	mov	r1, r6
   153a0:	mov	r0, r5
   153a4:	bl	1367c <table_get_col_ptr@@Base>
   153a8:	cmp	r4, #23
   153ac:	addls	pc, pc, r4, lsl #2
   153b0:	b	15420 <table_set@@Base+0xb4>
   153b4:	b	155d8 <table_set@@Base+0x26c>
   153b8:	b	155c8 <table_set@@Base+0x25c>
   153bc:	b	155b8 <table_set@@Base+0x24c>
   153c0:	b	155a8 <table_set@@Base+0x23c>
   153c4:	b	15598 <table_set@@Base+0x22c>
   153c8:	b	15574 <table_set@@Base+0x208>
   153cc:	b	15564 <table_set@@Base+0x1f8>
   153d0:	b	15554 <table_set@@Base+0x1e8>
   153d4:	b	15618 <table_set@@Base+0x2ac>
   153d8:	b	15608 <table_set@@Base+0x29c>
   153dc:	b	155f8 <table_set@@Base+0x28c>
   153e0:	b	155e8 <table_set@@Base+0x27c>
   153e4:	b	15654 <table_set@@Base+0x2e8>
   153e8:	b	15644 <table_set@@Base+0x2d8>
   153ec:	b	15414 <table_set@@Base+0xa8>
   153f0:	b	15544 <table_set@@Base+0x1d8>
   153f4:	b	15520 <table_set@@Base+0x1b4>
   153f8:	b	15510 <table_set@@Base+0x1a4>
   153fc:	b	154e4 <table_set@@Base+0x178>
   15400:	b	154d4 <table_set@@Base+0x168>
   15404:	b	154c4 <table_set@@Base+0x158>
   15408:	b	1548c <table_set@@Base+0x120>
   1540c:	b	15468 <table_set@@Base+0xfc>
   15410:	b	1543c <table_set@@Base+0xd0>
   15414:	ldr	r3, [r0, #4]
   15418:	cmp	r3, #14
   1541c:	beq	154f0 <table_set@@Base+0x184>
   15420:	mvn	r0, #0
   15424:	ldrd	r4, [sp]
   15428:	ldrd	r6, [sp, #8]
   1542c:	ldrd	r8, [sp, #16]
   15430:	ldr	sl, [sp, #24]
   15434:	add	sp, sp, #28
   15438:	pop	{pc}		; (ldr pc, [sp], #4)
   1543c:	ldr	r3, [r0, #4]
   15440:	cmp	r3, #23
   15444:	bne	15420 <table_set@@Base+0xb4>
   15448:	str	r7, [r8]
   1544c:	mov	r0, r5
   15450:	mov	r2, r6
   15454:	mov	r1, r9
   15458:	mov	r3, #1
   1545c:	bl	135e0 <table_notify@@Base>
   15460:	mov	r0, #0
   15464:	b	15424 <table_set@@Base+0xb8>
   15468:	ldr	r3, [r0, #4]
   1546c:	cmp	r3, #22
   15470:	bne	15420 <table_set@@Base+0xb4>
   15474:	ldr	r0, [r8]
   15478:	cmp	r0, #0
   1547c:	beq	15694 <table_set@@Base+0x328>
   15480:	ldrb	r3, [r7]
   15484:	strb	r3, [r0]
   15488:	b	1544c <table_set@@Base+0xe0>
   1548c:	ldr	r3, [r0, #4]
   15490:	cmp	r3, #21
   15494:	bne	15420 <table_set@@Base+0xb4>
   15498:	mov	r0, r7
   1549c:	bl	12960 <strlen@plt>
   154a0:	add	r1, r0, #1
   154a4:	ldr	r0, [r8]
   154a8:	bl	12924 <realloc@plt>
   154ac:	cmp	r0, #0
   154b0:	str	r0, [r8]
   154b4:	beq	15420 <table_set@@Base+0xb4>
   154b8:	mov	r1, r7
   154bc:	bl	12930 <strcpy@plt>
   154c0:	b	1544c <table_set@@Base+0xe0>
   154c4:	ldr	r3, [r0, #4]
   154c8:	cmp	r3, #20
   154cc:	bne	15420 <table_set@@Base+0xb4>
   154d0:	b	15474 <table_set@@Base+0x108>
   154d4:	ldr	r3, [r0, #4]
   154d8:	cmp	r3, #19
   154dc:	bne	15420 <table_set@@Base+0xb4>
   154e0:	b	15474 <table_set@@Base+0x108>
   154e4:	ldr	r3, [r0, #4]
   154e8:	cmp	r3, #18
   154ec:	bne	15420 <table_set@@Base+0xb4>
   154f0:	ldr	r0, [r8]
   154f4:	cmp	r0, #0
   154f8:	beq	156ac <table_set@@Base+0x340>
   154fc:	ldr	r2, [r7]
   15500:	ldr	r3, [r7, #4]
   15504:	str	r2, [r0]
   15508:	str	r3, [r0, #4]
   1550c:	b	1544c <table_set@@Base+0xe0>
   15510:	ldr	r3, [r0, #4]
   15514:	cmp	r3, #17
   15518:	bne	15420 <table_set@@Base+0xb4>
   1551c:	b	154f0 <table_set@@Base+0x184>
   15520:	ldr	r3, [r0, #4]
   15524:	cmp	r3, #16
   15528:	bne	15420 <table_set@@Base+0xb4>
   1552c:	ldr	r0, [r8]
   15530:	cmp	r0, #0
   15534:	beq	15664 <table_set@@Base+0x2f8>
   15538:	ldr	r3, [r7]
   1553c:	str	r3, [r0]
   15540:	b	1544c <table_set@@Base+0xe0>
   15544:	ldr	r3, [r0, #4]
   15548:	cmp	r3, #15
   1554c:	bne	15420 <table_set@@Base+0xb4>
   15550:	b	154f0 <table_set@@Base+0x184>
   15554:	ldr	r3, [r0, #4]
   15558:	cmp	r3, #7
   1555c:	beq	1552c <table_set@@Base+0x1c0>
   15560:	b	15420 <table_set@@Base+0xb4>
   15564:	ldr	r3, [r0, #4]
   15568:	cmp	r3, #6
   1556c:	beq	1552c <table_set@@Base+0x1c0>
   15570:	b	15420 <table_set@@Base+0xb4>
   15574:	ldr	r3, [r0, #4]
   15578:	cmp	r3, #5
   1557c:	bne	15420 <table_set@@Base+0xb4>
   15580:	ldr	r0, [r8]
   15584:	cmp	r0, #0
   15588:	beq	1567c <table_set@@Base+0x310>
   1558c:	ldrh	r3, [r7]
   15590:	strh	r3, [r0]
   15594:	b	1544c <table_set@@Base+0xe0>
   15598:	ldr	r3, [r0, #4]
   1559c:	cmp	r3, #4
   155a0:	beq	15580 <table_set@@Base+0x214>
   155a4:	b	15420 <table_set@@Base+0xb4>
   155a8:	ldr	r3, [r0, #4]
   155ac:	cmp	r3, #3
   155b0:	beq	15474 <table_set@@Base+0x108>
   155b4:	b	15420 <table_set@@Base+0xb4>
   155b8:	ldr	r3, [r0, #4]
   155bc:	cmp	r3, #2
   155c0:	beq	15474 <table_set@@Base+0x108>
   155c4:	b	15420 <table_set@@Base+0xb4>
   155c8:	ldr	r3, [r0, #4]
   155cc:	cmp	r3, #1
   155d0:	beq	1552c <table_set@@Base+0x1c0>
   155d4:	b	15420 <table_set@@Base+0xb4>
   155d8:	ldr	r3, [r0, #4]
   155dc:	cmp	r3, #0
   155e0:	beq	1552c <table_set@@Base+0x1c0>
   155e4:	b	15420 <table_set@@Base+0xb4>
   155e8:	ldr	r3, [r0, #4]
   155ec:	cmp	r3, #11
   155f0:	beq	15580 <table_set@@Base+0x214>
   155f4:	b	15420 <table_set@@Base+0xb4>
   155f8:	ldr	r3, [r0, #4]
   155fc:	cmp	r3, #10
   15600:	beq	15580 <table_set@@Base+0x214>
   15604:	b	15420 <table_set@@Base+0xb4>
   15608:	ldr	r3, [r0, #4]
   1560c:	cmp	r3, #9
   15610:	beq	154f0 <table_set@@Base+0x184>
   15614:	b	15420 <table_set@@Base+0xb4>
   15618:	ldr	r0, [r0, #4]
   1561c:	cmp	r0, #8
   15620:	bne	15420 <table_set@@Base+0xb4>
   15624:	ldr	r3, [r8]
   15628:	cmp	r3, #0
   1562c:	beq	156c4 <table_set@@Base+0x358>
   15630:	ldr	r1, [r7]
   15634:	ldr	r2, [r7, #4]
   15638:	str	r1, [r3]
   1563c:	str	r2, [r3, #4]
   15640:	b	1544c <table_set@@Base+0xe0>
   15644:	ldr	r3, [r0, #4]
   15648:	cmp	r3, #13
   1564c:	bne	15420 <table_set@@Base+0xb4>
   15650:	b	1552c <table_set@@Base+0x1c0>
   15654:	ldr	r3, [r0, #4]
   15658:	cmp	r3, #12
   1565c:	bne	15420 <table_set@@Base+0xb4>
   15660:	b	1552c <table_set@@Base+0x1c0>
   15664:	mov	r0, #4
   15668:	bl	1293c <malloc@plt>
   1566c:	cmp	r0, #0
   15670:	str	r0, [r8]
   15674:	bne	15538 <table_set@@Base+0x1cc>
   15678:	b	15420 <table_set@@Base+0xb4>
   1567c:	mov	r0, #2
   15680:	bl	1293c <malloc@plt>
   15684:	cmp	r0, #0
   15688:	str	r0, [r8]
   1568c:	bne	1558c <table_set@@Base+0x220>
   15690:	b	15420 <table_set@@Base+0xb4>
   15694:	mov	r0, #1
   15698:	bl	1293c <malloc@plt>
   1569c:	cmp	r0, #0
   156a0:	str	r0, [r8]
   156a4:	bne	15480 <table_set@@Base+0x114>
   156a8:	b	15420 <table_set@@Base+0xb4>
   156ac:	mov	r0, #8
   156b0:	bl	1293c <malloc@plt>
   156b4:	cmp	r0, #0
   156b8:	str	r0, [r8]
   156bc:	bne	154fc <table_set@@Base+0x190>
   156c0:	b	15420 <table_set@@Base+0xb4>
   156c4:	bl	1293c <malloc@plt>
   156c8:	cmp	r0, #0
   156cc:	mov	r3, r0
   156d0:	str	r0, [r8]
   156d4:	bne	15630 <table_set@@Base+0x2c4>
   156d8:	b	15420 <table_set@@Base+0xb4>

000156dc <table_set_bool@@Base>:
   156dc:	mov	ip, #22
   156e0:	push	{lr}		; (str lr, [sp, #-4]!)
   156e4:	sub	sp, sp, #20
   156e8:	str	ip, [sp]
   156ec:	strb	r3, [sp, #15]
   156f0:	add	r3, sp, #15
   156f4:	bl	1536c <table_set@@Base>
   156f8:	add	sp, sp, #20
   156fc:	pop	{pc}		; (ldr pc, [sp], #4)

00015700 <table_set_int@@Base>:
   15700:	mov	ip, #0
   15704:	push	{lr}		; (str lr, [sp, #-4]!)
   15708:	sub	sp, sp, #20
   1570c:	str	ip, [sp]
   15710:	str	r3, [sp, #12]
   15714:	add	r3, sp, #12
   15718:	bl	1536c <table_set@@Base>
   1571c:	add	sp, sp, #20
   15720:	pop	{pc}		; (ldr pc, [sp], #4)

00015724 <table_set_uint@@Base>:
   15724:	mov	ip, #1
   15728:	push	{lr}		; (str lr, [sp, #-4]!)
   1572c:	sub	sp, sp, #20
   15730:	str	ip, [sp]
   15734:	str	r3, [sp, #12]
   15738:	add	r3, sp, #12
   1573c:	bl	1536c <table_set@@Base>
   15740:	add	sp, sp, #20
   15744:	pop	{pc}		; (ldr pc, [sp], #4)

00015748 <table_set_int8@@Base>:
   15748:	mov	ip, #2
   1574c:	push	{lr}		; (str lr, [sp, #-4]!)
   15750:	sub	sp, sp, #20
   15754:	str	ip, [sp]
   15758:	strb	r3, [sp, #15]
   1575c:	add	r3, sp, #15
   15760:	bl	1536c <table_set@@Base>
   15764:	add	sp, sp, #20
   15768:	pop	{pc}		; (ldr pc, [sp], #4)

0001576c <table_set_uint8@@Base>:
   1576c:	mov	ip, #3
   15770:	push	{lr}		; (str lr, [sp, #-4]!)
   15774:	sub	sp, sp, #20
   15778:	str	ip, [sp]
   1577c:	strb	r3, [sp, #15]
   15780:	add	r3, sp, #15
   15784:	bl	1536c <table_set@@Base>
   15788:	add	sp, sp, #20
   1578c:	pop	{pc}		; (ldr pc, [sp], #4)

00015790 <table_set_int16@@Base>:
   15790:	mov	ip, #4
   15794:	push	{lr}		; (str lr, [sp, #-4]!)
   15798:	sub	sp, sp, #20
   1579c:	str	ip, [sp]
   157a0:	strh	r3, [sp, #14]
   157a4:	add	r3, sp, #14
   157a8:	bl	1536c <table_set@@Base>
   157ac:	add	sp, sp, #20
   157b0:	pop	{pc}		; (ldr pc, [sp], #4)

000157b4 <table_set_uint16@@Base>:
   157b4:	mov	ip, #5
   157b8:	push	{lr}		; (str lr, [sp, #-4]!)
   157bc:	sub	sp, sp, #20
   157c0:	str	ip, [sp]
   157c4:	strh	r3, [sp, #14]
   157c8:	add	r3, sp, #14
   157cc:	bl	1536c <table_set@@Base>
   157d0:	add	sp, sp, #20
   157d4:	pop	{pc}		; (ldr pc, [sp], #4)

000157d8 <table_set_int32@@Base>:
   157d8:	mov	ip, #6
   157dc:	push	{lr}		; (str lr, [sp, #-4]!)
   157e0:	sub	sp, sp, #20
   157e4:	str	ip, [sp]
   157e8:	str	r3, [sp, #12]
   157ec:	add	r3, sp, #12
   157f0:	bl	1536c <table_set@@Base>
   157f4:	add	sp, sp, #20
   157f8:	pop	{pc}		; (ldr pc, [sp], #4)

000157fc <table_set_uint32@@Base>:
   157fc:	mov	ip, #7
   15800:	push	{lr}		; (str lr, [sp, #-4]!)
   15804:	sub	sp, sp, #20
   15808:	str	ip, [sp]
   1580c:	str	r3, [sp, #12]
   15810:	add	r3, sp, #12
   15814:	bl	1536c <table_set@@Base>
   15818:	add	sp, sp, #20
   1581c:	pop	{pc}		; (ldr pc, [sp], #4)

00015820 <table_set_int64@@Base>:
   15820:	mov	ip, #8
   15824:	push	{lr}		; (str lr, [sp, #-4]!)
   15828:	sub	sp, sp, #12
   1582c:	add	r3, sp, #16
   15830:	str	ip, [sp]
   15834:	bl	1536c <table_set@@Base>
   15838:	add	sp, sp, #12
   1583c:	pop	{pc}		; (ldr pc, [sp], #4)

00015840 <table_set_uint64@@Base>:
   15840:	mov	ip, #9
   15844:	push	{lr}		; (str lr, [sp, #-4]!)
   15848:	sub	sp, sp, #12
   1584c:	add	r3, sp, #16
   15850:	str	ip, [sp]
   15854:	bl	1536c <table_set@@Base>
   15858:	add	sp, sp, #12
   1585c:	pop	{pc}		; (ldr pc, [sp], #4)

00015860 <table_set_short@@Base>:
   15860:	mov	ip, #10
   15864:	push	{lr}		; (str lr, [sp, #-4]!)
   15868:	sub	sp, sp, #20
   1586c:	str	ip, [sp]
   15870:	strh	r3, [sp, #14]
   15874:	add	r3, sp, #14
   15878:	bl	1536c <table_set@@Base>
   1587c:	add	sp, sp, #20
   15880:	pop	{pc}		; (ldr pc, [sp], #4)

00015884 <table_set_ushort@@Base>:
   15884:	mov	ip, #11
   15888:	push	{lr}		; (str lr, [sp, #-4]!)
   1588c:	sub	sp, sp, #20
   15890:	str	ip, [sp]
   15894:	strh	r3, [sp, #14]
   15898:	add	r3, sp, #14
   1589c:	bl	1536c <table_set@@Base>
   158a0:	add	sp, sp, #20
   158a4:	pop	{pc}		; (ldr pc, [sp], #4)

000158a8 <table_set_long@@Base>:
   158a8:	mov	ip, #12
   158ac:	push	{lr}		; (str lr, [sp, #-4]!)
   158b0:	sub	sp, sp, #20
   158b4:	str	ip, [sp]
   158b8:	str	r3, [sp, #12]
   158bc:	add	r3, sp, ip
   158c0:	bl	1536c <table_set@@Base>
   158c4:	add	sp, sp, #20
   158c8:	pop	{pc}		; (ldr pc, [sp], #4)

000158cc <table_set_ulong@@Base>:
   158cc:	mov	ip, #13
   158d0:	push	{lr}		; (str lr, [sp, #-4]!)
   158d4:	sub	sp, sp, #20
   158d8:	str	ip, [sp]
   158dc:	str	r3, [sp, #12]
   158e0:	add	r3, sp, #12
   158e4:	bl	1536c <table_set@@Base>
   158e8:	add	sp, sp, #20
   158ec:	pop	{pc}		; (ldr pc, [sp], #4)

000158f0 <table_set_llong@@Base>:
   158f0:	mov	ip, #14
   158f4:	push	{lr}		; (str lr, [sp, #-4]!)
   158f8:	sub	sp, sp, #12
   158fc:	add	r3, sp, #16
   15900:	str	ip, [sp]
   15904:	bl	1536c <table_set@@Base>
   15908:	add	sp, sp, #12
   1590c:	pop	{pc}		; (ldr pc, [sp], #4)

00015910 <table_set_ullong@@Base>:
   15910:	mov	ip, #15
   15914:	push	{lr}		; (str lr, [sp, #-4]!)
   15918:	sub	sp, sp, #12
   1591c:	add	r3, sp, #16
   15920:	str	ip, [sp]
   15924:	bl	1536c <table_set@@Base>
   15928:	add	sp, sp, #12
   1592c:	pop	{pc}		; (ldr pc, [sp], #4)

00015930 <table_set_float@@Base>:
   15930:	mov	ip, #16
   15934:	push	{lr}		; (str lr, [sp, #-4]!)
   15938:	sub	sp, sp, #20
   1593c:	add	r3, sp, #12
   15940:	str	ip, [sp]
   15944:	vstr	s0, [sp, #12]
   15948:	bl	1536c <table_set@@Base>
   1594c:	add	sp, sp, #20
   15950:	pop	{pc}		; (ldr pc, [sp], #4)

00015954 <table_set_double@@Base>:
   15954:	mov	ip, #17
   15958:	push	{lr}		; (str lr, [sp, #-4]!)
   1595c:	sub	sp, sp, #20
   15960:	add	r3, sp, #8
   15964:	str	ip, [sp]
   15968:	vstr	d0, [sp, #8]
   1596c:	bl	1536c <table_set@@Base>
   15970:	add	sp, sp, #20
   15974:	pop	{pc}		; (ldr pc, [sp], #4)

00015978 <table_set_ldouble@@Base>:
   15978:	mov	ip, #18
   1597c:	push	{lr}		; (str lr, [sp, #-4]!)
   15980:	sub	sp, sp, #20
   15984:	add	r3, sp, #8
   15988:	str	ip, [sp]
   1598c:	vstr	d0, [sp, #8]
   15990:	bl	1536c <table_set@@Base>
   15994:	add	sp, sp, #20
   15998:	pop	{pc}		; (ldr pc, [sp], #4)

0001599c <table_set_string@@Base>:
   1599c:	mov	ip, #21
   159a0:	push	{lr}		; (str lr, [sp, #-4]!)
   159a4:	sub	sp, sp, #12
   159a8:	str	ip, [sp]
   159ac:	bl	1536c <table_set@@Base>
   159b0:	add	sp, sp, #12
   159b4:	pop	{pc}		; (ldr pc, [sp], #4)

000159b8 <table_set_char@@Base>:
   159b8:	mov	ip, #19
   159bc:	push	{lr}		; (str lr, [sp, #-4]!)
   159c0:	sub	sp, sp, #20
   159c4:	str	ip, [sp]
   159c8:	strb	r3, [sp, #15]
   159cc:	add	r3, sp, #15
   159d0:	bl	1536c <table_set@@Base>
   159d4:	add	sp, sp, #20
   159d8:	pop	{pc}		; (ldr pc, [sp], #4)

000159dc <table_set_uchar@@Base>:
   159dc:	mov	ip, #20
   159e0:	push	{lr}		; (str lr, [sp, #-4]!)
   159e4:	sub	sp, sp, #20
   159e8:	str	ip, [sp]
   159ec:	strb	r3, [sp, #15]
   159f0:	add	r3, sp, #15
   159f4:	bl	1536c <table_set@@Base>
   159f8:	add	sp, sp, #20
   159fc:	pop	{pc}		; (ldr pc, [sp], #4)

00015a00 <table_set_ptr@@Base>:
   15a00:	mov	ip, #23
   15a04:	push	{lr}		; (str lr, [sp, #-4]!)
   15a08:	sub	sp, sp, #12
   15a0c:	str	ip, [sp]
   15a10:	bl	1536c <table_set@@Base>
   15a14:	add	sp, sp, #12
   15a18:	pop	{pc}		; (ldr pc, [sp], #4)

00015a1c <table_cell_to_buffer@@Base>:
   15a1c:	strd	r4, [sp, #-20]!	; 0xffffffec
   15a20:	mov	r4, r2
   15a24:	mov	r5, r3
   15a28:	strd	r6, [sp, #8]
   15a2c:	mov	r7, r1
   15a30:	mov	r1, r2
   15a34:	str	lr, [sp, #16]
   15a38:	sub	sp, sp, #12
   15a3c:	mov	r6, r0
   15a40:	bl	13a00 <table_get_column_data_type@@Base>
   15a44:	cmp	r0, #23
   15a48:	addls	pc, pc, r0, lsl #2
   15a4c:	b	15ad8 <table_cell_to_buffer@@Base+0xbc>
   15a50:	b	15ebc <table_cell_to_buffer@@Base+0x4a0>
   15a54:	b	15e90 <table_cell_to_buffer@@Base+0x474>
   15a58:	b	15e64 <table_cell_to_buffer@@Base+0x448>
   15a5c:	b	15e38 <table_cell_to_buffer@@Base+0x41c>
   15a60:	b	15e0c <table_cell_to_buffer@@Base+0x3f0>
   15a64:	b	15de0 <table_cell_to_buffer@@Base+0x3c4>
   15a68:	b	15db4 <table_cell_to_buffer@@Base+0x398>
   15a6c:	b	15d88 <table_cell_to_buffer@@Base+0x36c>
   15a70:	b	15d5c <table_cell_to_buffer@@Base+0x340>
   15a74:	b	15d30 <table_cell_to_buffer@@Base+0x314>
   15a78:	b	15d04 <table_cell_to_buffer@@Base+0x2e8>
   15a7c:	b	15cd8 <table_cell_to_buffer@@Base+0x2bc>
   15a80:	b	15cac <table_cell_to_buffer@@Base+0x290>
   15a84:	b	15c80 <table_cell_to_buffer@@Base+0x264>
   15a88:	b	15c54 <table_cell_to_buffer@@Base+0x238>
   15a8c:	b	15c28 <table_cell_to_buffer@@Base+0x20c>
   15a90:	b	15bf8 <table_cell_to_buffer@@Base+0x1dc>
   15a94:	b	15bcc <table_cell_to_buffer@@Base+0x1b0>
   15a98:	b	15ba0 <table_cell_to_buffer@@Base+0x184>
   15a9c:	b	15b74 <table_cell_to_buffer@@Base+0x158>
   15aa0:	b	15b48 <table_cell_to_buffer@@Base+0x12c>
   15aa4:	b	15b1c <table_cell_to_buffer@@Base+0x100>
   15aa8:	b	15af0 <table_cell_to_buffer@@Base+0xd4>
   15aac:	b	15ab0 <table_cell_to_buffer@@Base+0x94>
   15ab0:	mov	r2, r4
   15ab4:	mov	r1, r7
   15ab8:	mov	r0, r6
   15abc:	bl	15070 <table_get_ptr@@Base>
   15ac0:	ldr	r2, [pc, #1056]	; 15ee8 <table_cell_to_buffer@@Base+0x4cc>
   15ac4:	mov	r3, r0
   15ac8:	mov	r0, r5
   15acc:	ldr	r1, [sp, #32]
   15ad0:	add	r2, pc, r2
   15ad4:	bl	1296c <snprintf@plt>
   15ad8:	mov	r0, #0
   15adc:	add	sp, sp, #12
   15ae0:	ldrd	r4, [sp]
   15ae4:	ldrd	r6, [sp, #8]
   15ae8:	add	sp, sp, #16
   15aec:	pop	{pc}		; (ldr pc, [sp], #4)
   15af0:	mov	r2, r4
   15af4:	mov	r1, r7
   15af8:	mov	r0, r6
   15afc:	bl	14ec4 <table_get_bool@@Base>
   15b00:	ldr	r2, [pc, #996]	; 15eec <table_cell_to_buffer@@Base+0x4d0>
   15b04:	mov	r3, r0
   15b08:	mov	r0, r5
   15b0c:	ldr	r1, [sp, #32]
   15b10:	add	r2, pc, r2
   15b14:	bl	1296c <snprintf@plt>
   15b18:	b	15ad8 <table_cell_to_buffer@@Base+0xbc>
   15b1c:	mov	r2, r4
   15b20:	mov	r1, r7
   15b24:	mov	r0, r6
   15b28:	bl	1506c <table_get_string@@Base>
   15b2c:	ldr	r2, [pc, #956]	; 15ef0 <table_cell_to_buffer@@Base+0x4d4>
   15b30:	mov	r3, r0
   15b34:	mov	r0, r5
   15b38:	ldr	r1, [sp, #32]
   15b3c:	add	r2, pc, r2
   15b40:	bl	1296c <snprintf@plt>
   15b44:	b	15ad8 <table_cell_to_buffer@@Base+0xbc>
   15b48:	mov	r2, r4
   15b4c:	mov	r1, r7
   15b50:	mov	r0, r6
   15b54:	bl	15068 <table_get_uchar@@Base>
   15b58:	ldr	r2, [pc, #916]	; 15ef4 <table_cell_to_buffer@@Base+0x4d8>
   15b5c:	mov	r3, r0
   15b60:	mov	r0, r5
   15b64:	ldr	r1, [sp, #32]
   15b68:	add	r2, pc, r2
   15b6c:	bl	1296c <snprintf@plt>
   15b70:	b	15ad8 <table_cell_to_buffer@@Base+0xbc>
   15b74:	mov	r2, r4
   15b78:	mov	r1, r7
   15b7c:	mov	r0, r6
   15b80:	bl	15064 <table_get_char@@Base>
   15b84:	ldr	r2, [pc, #876]	; 15ef8 <table_cell_to_buffer@@Base+0x4dc>
   15b88:	mov	r3, r0
   15b8c:	mov	r0, r5
   15b90:	ldr	r1, [sp, #32]
   15b94:	add	r2, pc, r2
   15b98:	bl	1296c <snprintf@plt>
   15b9c:	b	15ad8 <table_cell_to_buffer@@Base+0xbc>
   15ba0:	mov	r2, r4
   15ba4:	mov	r1, r7
   15ba8:	mov	r0, r6
   15bac:	bl	15048 <table_get_ldouble@@Base>
   15bb0:	ldr	r2, [pc, #836]	; 15efc <table_cell_to_buffer@@Base+0x4e0>
   15bb4:	mov	r0, r5
   15bb8:	vstr	d0, [sp]
   15bbc:	ldr	r1, [sp, #32]
   15bc0:	add	r2, pc, r2
   15bc4:	bl	1296c <snprintf@plt>
   15bc8:	b	15ad8 <table_cell_to_buffer@@Base+0xbc>
   15bcc:	mov	r2, r4
   15bd0:	mov	r1, r7
   15bd4:	mov	r0, r6
   15bd8:	bl	1502c <table_get_double@@Base>
   15bdc:	ldr	r2, [pc, #796]	; 15f00 <table_cell_to_buffer@@Base+0x4e4>
   15be0:	mov	r0, r5
   15be4:	vstr	d0, [sp]
   15be8:	ldr	r1, [sp, #32]
   15bec:	add	r2, pc, r2
   15bf0:	bl	1296c <snprintf@plt>
   15bf4:	b	15ad8 <table_cell_to_buffer@@Base+0xbc>
   15bf8:	mov	r2, r4
   15bfc:	mov	r1, r7
   15c00:	mov	r0, r6
   15c04:	bl	15010 <table_get_float@@Base>
   15c08:	vcvt.f64.f32	d0, s0
   15c0c:	ldr	r2, [pc, #752]	; 15f04 <table_cell_to_buffer@@Base+0x4e8>
   15c10:	mov	r0, r5
   15c14:	ldr	r1, [sp, #32]
   15c18:	add	r2, pc, r2
   15c1c:	vstr	d0, [sp]
   15c20:	bl	1296c <snprintf@plt>
   15c24:	b	15ad8 <table_cell_to_buffer@@Base+0xbc>
   15c28:	mov	r2, r4
   15c2c:	mov	r1, r7
   15c30:	mov	r0, r6
   15c34:	bl	1500c <table_get_ullong@@Base>
   15c38:	ldr	r2, [pc, #712]	; 15f08 <table_cell_to_buffer@@Base+0x4ec>
   15c3c:	strd	r0, [sp]
   15c40:	mov	r0, r5
   15c44:	ldr	r1, [sp, #32]
   15c48:	add	r2, pc, r2
   15c4c:	bl	1296c <snprintf@plt>
   15c50:	b	15ad8 <table_cell_to_buffer@@Base+0xbc>
   15c54:	mov	r2, r4
   15c58:	mov	r1, r7
   15c5c:	mov	r0, r6
   15c60:	bl	15008 <table_get_llong@@Base>
   15c64:	ldr	r2, [pc, #672]	; 15f0c <table_cell_to_buffer@@Base+0x4f0>
   15c68:	strd	r0, [sp]
   15c6c:	mov	r0, r5
   15c70:	ldr	r1, [sp, #32]
   15c74:	add	r2, pc, r2
   15c78:	bl	1296c <snprintf@plt>
   15c7c:	b	15ad8 <table_cell_to_buffer@@Base+0xbc>
   15c80:	mov	r2, r4
   15c84:	mov	r1, r7
   15c88:	mov	r0, r6
   15c8c:	bl	14fec <table_get_ulong@@Base>
   15c90:	ldr	r2, [pc, #632]	; 15f10 <table_cell_to_buffer@@Base+0x4f4>
   15c94:	mov	r3, r0
   15c98:	mov	r0, r5
   15c9c:	ldr	r1, [sp, #32]
   15ca0:	add	r2, pc, r2
   15ca4:	bl	1296c <snprintf@plt>
   15ca8:	b	15ad8 <table_cell_to_buffer@@Base+0xbc>
   15cac:	mov	r2, r4
   15cb0:	mov	r1, r7
   15cb4:	mov	r0, r6
   15cb8:	bl	14fd0 <table_get_long@@Base>
   15cbc:	ldr	r2, [pc, #592]	; 15f14 <table_cell_to_buffer@@Base+0x4f8>
   15cc0:	mov	r3, r0
   15cc4:	mov	r0, r5
   15cc8:	ldr	r1, [sp, #32]
   15ccc:	add	r2, pc, r2
   15cd0:	bl	1296c <snprintf@plt>
   15cd4:	b	15ad8 <table_cell_to_buffer@@Base+0xbc>
   15cd8:	mov	r2, r4
   15cdc:	mov	r1, r7
   15ce0:	mov	r0, r6
   15ce4:	bl	14fcc <table_get_ushort@@Base>
   15ce8:	ldr	r2, [pc, #552]	; 15f18 <table_cell_to_buffer@@Base+0x4fc>
   15cec:	mov	r3, r0
   15cf0:	mov	r0, r5
   15cf4:	ldr	r1, [sp, #32]
   15cf8:	add	r2, pc, r2
   15cfc:	bl	1296c <snprintf@plt>
   15d00:	b	15ad8 <table_cell_to_buffer@@Base+0xbc>
   15d04:	mov	r2, r4
   15d08:	mov	r1, r7
   15d0c:	mov	r0, r6
   15d10:	bl	14fc8 <table_get_short@@Base>
   15d14:	ldr	r2, [pc, #512]	; 15f1c <table_cell_to_buffer@@Base+0x500>
   15d18:	mov	r3, r0
   15d1c:	mov	r0, r5
   15d20:	ldr	r1, [sp, #32]
   15d24:	add	r2, pc, r2
   15d28:	bl	1296c <snprintf@plt>
   15d2c:	b	15ad8 <table_cell_to_buffer@@Base+0xbc>
   15d30:	mov	r2, r4
   15d34:	mov	r1, r7
   15d38:	mov	r0, r6
   15d3c:	bl	14fac <table_get_uint64@@Base>
   15d40:	ldr	r2, [pc, #472]	; 15f20 <table_cell_to_buffer@@Base+0x504>
   15d44:	strd	r0, [sp]
   15d48:	mov	r0, r5
   15d4c:	ldr	r1, [sp, #32]
   15d50:	add	r2, pc, r2
   15d54:	bl	1296c <snprintf@plt>
   15d58:	b	15ad8 <table_cell_to_buffer@@Base+0xbc>
   15d5c:	mov	r2, r4
   15d60:	mov	r1, r7
   15d64:	mov	r0, r6
   15d68:	bl	14f90 <table_get_int64@@Base>
   15d6c:	ldr	r2, [pc, #432]	; 15f24 <table_cell_to_buffer@@Base+0x508>
   15d70:	strd	r0, [sp]
   15d74:	mov	r0, r5
   15d78:	ldr	r1, [sp, #32]
   15d7c:	add	r2, pc, r2
   15d80:	bl	1296c <snprintf@plt>
   15d84:	b	15ad8 <table_cell_to_buffer@@Base+0xbc>
   15d88:	mov	r2, r4
   15d8c:	mov	r1, r7
   15d90:	mov	r0, r6
   15d94:	bl	14f8c <table_get_uint32@@Base>
   15d98:	ldr	r2, [pc, #392]	; 15f28 <table_cell_to_buffer@@Base+0x50c>
   15d9c:	mov	r3, r0
   15da0:	mov	r0, r5
   15da4:	ldr	r1, [sp, #32]
   15da8:	add	r2, pc, r2
   15dac:	bl	1296c <snprintf@plt>
   15db0:	b	15ad8 <table_cell_to_buffer@@Base+0xbc>
   15db4:	mov	r2, r4
   15db8:	mov	r1, r7
   15dbc:	mov	r0, r6
   15dc0:	bl	14f88 <table_get_int32@@Base>
   15dc4:	ldr	r2, [pc, #352]	; 15f2c <table_cell_to_buffer@@Base+0x510>
   15dc8:	mov	r3, r0
   15dcc:	mov	r0, r5
   15dd0:	ldr	r1, [sp, #32]
   15dd4:	add	r2, pc, r2
   15dd8:	bl	1296c <snprintf@plt>
   15ddc:	b	15ad8 <table_cell_to_buffer@@Base+0xbc>
   15de0:	mov	r2, r4
   15de4:	mov	r1, r7
   15de8:	mov	r0, r6
   15dec:	bl	14f6c <table_get_uint16@@Base>
   15df0:	ldr	r2, [pc, #312]	; 15f30 <table_cell_to_buffer@@Base+0x514>
   15df4:	mov	r3, r0
   15df8:	mov	r0, r5
   15dfc:	ldr	r1, [sp, #32]
   15e00:	add	r2, pc, r2
   15e04:	bl	1296c <snprintf@plt>
   15e08:	b	15ad8 <table_cell_to_buffer@@Base+0xbc>
   15e0c:	mov	r2, r4
   15e10:	mov	r1, r7
   15e14:	mov	r0, r6
   15e18:	bl	14f50 <table_get_int16@@Base>
   15e1c:	ldr	r2, [pc, #272]	; 15f34 <table_cell_to_buffer@@Base+0x518>
   15e20:	mov	r3, r0
   15e24:	mov	r0, r5
   15e28:	ldr	r1, [sp, #32]
   15e2c:	add	r2, pc, r2
   15e30:	bl	1296c <snprintf@plt>
   15e34:	b	15ad8 <table_cell_to_buffer@@Base+0xbc>
   15e38:	mov	r2, r4
   15e3c:	mov	r1, r7
   15e40:	mov	r0, r6
   15e44:	bl	14f34 <table_get_uint8@@Base>
   15e48:	ldr	r2, [pc, #232]	; 15f38 <table_cell_to_buffer@@Base+0x51c>
   15e4c:	mov	r3, r0
   15e50:	mov	r0, r5
   15e54:	ldr	r1, [sp, #32]
   15e58:	add	r2, pc, r2
   15e5c:	bl	1296c <snprintf@plt>
   15e60:	b	15ad8 <table_cell_to_buffer@@Base+0xbc>
   15e64:	mov	r2, r4
   15e68:	mov	r1, r7
   15e6c:	mov	r0, r6
   15e70:	bl	14f18 <table_get_int8@@Base>
   15e74:	ldr	r2, [pc, #192]	; 15f3c <table_cell_to_buffer@@Base+0x520>
   15e78:	mov	r3, r0
   15e7c:	mov	r0, r5
   15e80:	ldr	r1, [sp, #32]
   15e84:	add	r2, pc, r2
   15e88:	bl	1296c <snprintf@plt>
   15e8c:	b	15ad8 <table_cell_to_buffer@@Base+0xbc>
   15e90:	mov	r2, r4
   15e94:	mov	r1, r7
   15e98:	mov	r0, r6
   15e9c:	bl	14efc <table_get_uint@@Base>
   15ea0:	ldr	r2, [pc, #152]	; 15f40 <table_cell_to_buffer@@Base+0x524>
   15ea4:	mov	r3, r0
   15ea8:	mov	r0, r5
   15eac:	ldr	r1, [sp, #32]
   15eb0:	add	r2, pc, r2
   15eb4:	bl	1296c <snprintf@plt>
   15eb8:	b	15ad8 <table_cell_to_buffer@@Base+0xbc>
   15ebc:	mov	r2, r4
   15ec0:	mov	r1, r7
   15ec4:	mov	r0, r6
   15ec8:	bl	14ee0 <table_get_int@@Base>
   15ecc:	ldr	r2, [pc, #112]	; 15f44 <table_cell_to_buffer@@Base+0x528>
   15ed0:	mov	r3, r0
   15ed4:	mov	r0, r5
   15ed8:	ldr	r1, [sp, #32]
   15edc:	add	r2, pc, r2
   15ee0:	bl	1296c <snprintf@plt>
   15ee4:	b	15ad8 <table_cell_to_buffer@@Base+0xbc>
   15ee8:			; <UNDEFINED> instruction: 0x00000db0
   15eec:			; <UNDEFINED> instruction: 0x00000cb4
   15ef0:	andeq	r0, r0, r0, lsr sp
   15ef4:	andeq	r0, r0, r4, lsl sp
   15ef8:	andeq	r0, r0, r8, ror #25
   15efc:			; <UNDEFINED> instruction: 0x00000cb8
   15f00:	andeq	r0, r0, r8, lsl #25
   15f04:	andeq	r0, r0, r8, asr ip
   15f08:	andeq	r0, r0, ip, lsl #24
   15f0c:	ldrdeq	r0, [r0], -r8
   15f10:	andeq	r0, r0, r8, asr #23
   15f14:	muleq	r0, r8, fp
   15f18:	andeq	r0, r0, r8, ror #22
   15f1c:	andeq	r0, r0, r8, lsr fp
   15f20:	andeq	r0, r0, r4, lsl #22
   15f24:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   15f28:	andeq	r0, r0, r0, lsr #21
   15f2c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   15f30:	andeq	r0, r0, r8, asr #20
   15f34:	muleq	r0, r8, r9
   15f38:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   15f3c:	andeq	r0, r0, r0, asr #18
   15f40:	muleq	r0, r8, r9
   15f44:	andeq	r0, r0, r8, ror #17

00015f48 <table_cell_from_buffer@@Base>:
   15f48:	strd	r4, [sp, #-28]!	; 0xffffffe4
   15f4c:	mov	r4, r2
   15f50:	mov	r5, r3
   15f54:	strd	r6, [sp, #8]
   15f58:	strd	r8, [sp, #16]
   15f5c:	mov	r9, r1
   15f60:	mov	r1, r2
   15f64:	str	lr, [sp, #24]
   15f68:	sub	sp, sp, #268	; 0x10c
   15f6c:	mov	r8, r0
   15f70:	bl	13a00 <table_get_column_data_type@@Base>
   15f74:	cmp	r0, #23
   15f78:	addls	pc, pc, r0, lsl #2
   15f7c:	b	1659c <table_cell_from_buffer@@Base+0x654>
   15f80:	b	16530 <table_cell_from_buffer@@Base+0x5e8>
   15f84:	b	164f8 <table_cell_from_buffer@@Base+0x5b0>
   15f88:	b	164bc <table_cell_from_buffer@@Base+0x574>
   15f8c:	b	16484 <table_cell_from_buffer@@Base+0x53c>
   15f90:	b	16448 <table_cell_from_buffer@@Base+0x500>
   15f94:	b	1640c <table_cell_from_buffer@@Base+0x4c4>
   15f98:	b	163d4 <table_cell_from_buffer@@Base+0x48c>
   15f9c:	b	1639c <table_cell_from_buffer@@Base+0x454>
   15fa0:	b	1635c <table_cell_from_buffer@@Base+0x414>
   15fa4:	b	1631c <table_cell_from_buffer@@Base+0x3d4>
   15fa8:	b	162e0 <table_cell_from_buffer@@Base+0x398>
   15fac:	b	162a4 <table_cell_from_buffer@@Base+0x35c>
   15fb0:	b	1626c <table_cell_from_buffer@@Base+0x324>
   15fb4:	b	16234 <table_cell_from_buffer@@Base+0x2ec>
   15fb8:	b	161f4 <table_cell_from_buffer@@Base+0x2ac>
   15fbc:	b	161b4 <table_cell_from_buffer@@Base+0x26c>
   15fc0:	b	16144 <table_cell_from_buffer@@Base+0x1fc>
   15fc4:	b	1610c <table_cell_from_buffer@@Base+0x1c4>
   15fc8:	b	1617c <table_cell_from_buffer@@Base+0x234>
   15fcc:	b	16060 <table_cell_from_buffer@@Base+0x118>
   15fd0:	b	160d4 <table_cell_from_buffer@@Base+0x18c>
   15fd4:	b	16098 <table_cell_from_buffer@@Base+0x150>
   15fd8:	b	1601c <table_cell_from_buffer@@Base+0xd4>
   15fdc:	b	15fe0 <table_cell_from_buffer@@Base+0x98>
   15fe0:	ldr	r1, [pc, #1468]	; 165a4 <table_cell_from_buffer@@Base+0x65c>
   15fe4:	mov	r0, r5
   15fe8:	add	r2, sp, #8
   15fec:	add	r1, pc, r1
   15ff0:	bl	12978 <__isoc99_sscanf@plt>
   15ff4:	cmp	r0, #1
   15ff8:	beq	16568 <table_cell_from_buffer@@Base+0x620>
   15ffc:	mvn	r5, #0
   16000:	mov	r0, r5
   16004:	add	sp, sp, #268	; 0x10c
   16008:	ldrd	r4, [sp]
   1600c:	ldrd	r6, [sp, #8]
   16010:	ldrd	r8, [sp, #16]
   16014:	add	sp, sp, #24
   16018:	pop	{pc}		; (ldr pc, [sp], #4)
   1601c:	ldr	r1, [pc, #1412]	; 165a8 <table_cell_from_buffer@@Base+0x660>
   16020:	mov	r0, r5
   16024:	add	r2, sp, #8
   16028:	add	r1, pc, r1
   1602c:	bl	12978 <__isoc99_sscanf@plt>
   16030:	cmp	r0, #1
   16034:	bne	15ffc <table_cell_from_buffer@@Base+0xb4>
   16038:	ldr	r5, [sp, #8]
   1603c:	cmp	r5, #0
   16040:	beq	16584 <table_cell_from_buffer@@Base+0x63c>
   16044:	mov	r3, r0
   16048:	mov	r2, r4
   1604c:	mov	r1, r9
   16050:	mov	r0, r8
   16054:	bl	156dc <table_set_bool@@Base>
   16058:	mov	r5, #0
   1605c:	b	16000 <table_cell_from_buffer@@Base+0xb8>
   16060:	ldr	r1, [pc, #1348]	; 165ac <table_cell_from_buffer@@Base+0x664>
   16064:	mov	r0, r5
   16068:	add	r2, sp, #8
   1606c:	add	r1, pc, r1
   16070:	bl	12978 <__isoc99_sscanf@plt>
   16074:	cmp	r0, #1
   16078:	bne	15ffc <table_cell_from_buffer@@Base+0xb4>
   1607c:	mov	r2, r4
   16080:	mov	r1, r9
   16084:	ldrb	r3, [sp, #8]
   16088:	mov	r0, r8
   1608c:	mov	r5, #0
   16090:	bl	159b8 <table_set_char@@Base>
   16094:	b	16000 <table_cell_from_buffer@@Base+0xb8>
   16098:	ldr	r1, [pc, #1296]	; 165b0 <table_cell_from_buffer@@Base+0x668>
   1609c:	add	r6, sp, #8
   160a0:	mov	r0, r5
   160a4:	mov	r2, r6
   160a8:	add	r1, pc, r1
   160ac:	bl	12978 <__isoc99_sscanf@plt>
   160b0:	cmp	r0, #1
   160b4:	bne	15ffc <table_cell_from_buffer@@Base+0xb4>
   160b8:	mov	r3, r6
   160bc:	mov	r2, r4
   160c0:	mov	r1, r9
   160c4:	mov	r0, r8
   160c8:	bl	1599c <table_set_string@@Base>
   160cc:	mov	r5, #0
   160d0:	b	16000 <table_cell_from_buffer@@Base+0xb8>
   160d4:	ldr	r1, [pc, #1240]	; 165b4 <table_cell_from_buffer@@Base+0x66c>
   160d8:	mov	r0, r5
   160dc:	add	r2, sp, #8
   160e0:	add	r1, pc, r1
   160e4:	bl	12978 <__isoc99_sscanf@plt>
   160e8:	cmp	r0, #1
   160ec:	bne	15ffc <table_cell_from_buffer@@Base+0xb4>
   160f0:	mov	r2, r4
   160f4:	mov	r1, r9
   160f8:	ldrb	r3, [sp, #8]
   160fc:	mov	r0, r8
   16100:	mov	r5, #0
   16104:	bl	159dc <table_set_uchar@@Base>
   16108:	b	16000 <table_cell_from_buffer@@Base+0xb8>
   1610c:	ldr	r1, [pc, #1188]	; 165b8 <table_cell_from_buffer@@Base+0x670>
   16110:	mov	r0, r5
   16114:	add	r2, sp, #8
   16118:	add	r1, pc, r1
   1611c:	bl	12978 <__isoc99_sscanf@plt>
   16120:	cmp	r0, #1
   16124:	bne	15ffc <table_cell_from_buffer@@Base+0xb4>
   16128:	mov	r2, r4
   1612c:	mov	r1, r9
   16130:	vldr	d0, [sp, #8]
   16134:	mov	r0, r8
   16138:	mov	r5, #0
   1613c:	bl	15954 <table_set_double@@Base>
   16140:	b	16000 <table_cell_from_buffer@@Base+0xb8>
   16144:	ldr	r1, [pc, #1136]	; 165bc <table_cell_from_buffer@@Base+0x674>
   16148:	mov	r0, r5
   1614c:	add	r2, sp, #8
   16150:	add	r1, pc, r1
   16154:	bl	12978 <__isoc99_sscanf@plt>
   16158:	cmp	r0, #1
   1615c:	bne	15ffc <table_cell_from_buffer@@Base+0xb4>
   16160:	mov	r2, r4
   16164:	mov	r1, r9
   16168:	vldr	s0, [sp, #8]
   1616c:	mov	r0, r8
   16170:	mov	r5, #0
   16174:	bl	15930 <table_set_float@@Base>
   16178:	b	16000 <table_cell_from_buffer@@Base+0xb8>
   1617c:	ldr	r1, [pc, #1084]	; 165c0 <table_cell_from_buffer@@Base+0x678>
   16180:	mov	r0, r5
   16184:	add	r2, sp, #8
   16188:	add	r1, pc, r1
   1618c:	bl	12978 <__isoc99_sscanf@plt>
   16190:	cmp	r0, #1
   16194:	bne	15ffc <table_cell_from_buffer@@Base+0xb4>
   16198:	mov	r2, r4
   1619c:	mov	r1, r9
   161a0:	vldr	d0, [sp, #8]
   161a4:	mov	r0, r8
   161a8:	mov	r5, #0
   161ac:	bl	15978 <table_set_ldouble@@Base>
   161b0:	b	16000 <table_cell_from_buffer@@Base+0xb8>
   161b4:	ldr	r1, [pc, #1032]	; 165c4 <table_cell_from_buffer@@Base+0x67c>
   161b8:	add	r6, sp, #8
   161bc:	mov	r0, r5
   161c0:	mov	r2, r6
   161c4:	add	r1, pc, r1
   161c8:	bl	12978 <__isoc99_sscanf@plt>
   161cc:	cmp	r0, #1
   161d0:	bne	15ffc <table_cell_from_buffer@@Base+0xb4>
   161d4:	ldrd	r6, [r6]
   161d8:	mov	r2, r4
   161dc:	mov	r1, r9
   161e0:	mov	r0, r8
   161e4:	mov	r5, #0
   161e8:	strd	r6, [sp]
   161ec:	bl	15910 <table_set_ullong@@Base>
   161f0:	b	16000 <table_cell_from_buffer@@Base+0xb8>
   161f4:	ldr	r1, [pc, #972]	; 165c8 <table_cell_from_buffer@@Base+0x680>
   161f8:	add	r6, sp, #8
   161fc:	mov	r0, r5
   16200:	mov	r2, r6
   16204:	add	r1, pc, r1
   16208:	bl	12978 <__isoc99_sscanf@plt>
   1620c:	cmp	r0, #1
   16210:	bne	15ffc <table_cell_from_buffer@@Base+0xb4>
   16214:	ldrd	r6, [r6]
   16218:	mov	r2, r4
   1621c:	mov	r1, r9
   16220:	mov	r0, r8
   16224:	mov	r5, #0
   16228:	strd	r6, [sp]
   1622c:	bl	158f0 <table_set_llong@@Base>
   16230:	b	16000 <table_cell_from_buffer@@Base+0xb8>
   16234:	ldr	r1, [pc, #912]	; 165cc <table_cell_from_buffer@@Base+0x684>
   16238:	mov	r0, r5
   1623c:	add	r2, sp, #8
   16240:	add	r1, pc, r1
   16244:	bl	12978 <__isoc99_sscanf@plt>
   16248:	cmp	r0, #1
   1624c:	bne	15ffc <table_cell_from_buffer@@Base+0xb4>
   16250:	mov	r2, r4
   16254:	mov	r1, r9
   16258:	ldr	r3, [sp, #8]
   1625c:	mov	r0, r8
   16260:	mov	r5, #0
   16264:	bl	158cc <table_set_ulong@@Base>
   16268:	b	16000 <table_cell_from_buffer@@Base+0xb8>
   1626c:	ldr	r1, [pc, #860]	; 165d0 <table_cell_from_buffer@@Base+0x688>
   16270:	mov	r0, r5
   16274:	add	r2, sp, #8
   16278:	add	r1, pc, r1
   1627c:	bl	12978 <__isoc99_sscanf@plt>
   16280:	cmp	r0, #1
   16284:	bne	15ffc <table_cell_from_buffer@@Base+0xb4>
   16288:	mov	r2, r4
   1628c:	mov	r1, r9
   16290:	ldr	r3, [sp, #8]
   16294:	mov	r0, r8
   16298:	mov	r5, #0
   1629c:	bl	158a8 <table_set_long@@Base>
   162a0:	b	16000 <table_cell_from_buffer@@Base+0xb8>
   162a4:	ldr	r1, [pc, #808]	; 165d4 <table_cell_from_buffer@@Base+0x68c>
   162a8:	add	r6, sp, #8
   162ac:	mov	r0, r5
   162b0:	mov	r2, r6
   162b4:	add	r1, pc, r1
   162b8:	bl	12978 <__isoc99_sscanf@plt>
   162bc:	cmp	r0, #1
   162c0:	bne	15ffc <table_cell_from_buffer@@Base+0xb4>
   162c4:	ldrh	r3, [r6]
   162c8:	mov	r2, r4
   162cc:	mov	r1, r9
   162d0:	mov	r0, r8
   162d4:	mov	r5, #0
   162d8:	bl	15884 <table_set_ushort@@Base>
   162dc:	b	16000 <table_cell_from_buffer@@Base+0xb8>
   162e0:	ldr	r1, [pc, #752]	; 165d8 <table_cell_from_buffer@@Base+0x690>
   162e4:	add	r6, sp, #8
   162e8:	mov	r0, r5
   162ec:	mov	r2, r6
   162f0:	add	r1, pc, r1
   162f4:	bl	12978 <__isoc99_sscanf@plt>
   162f8:	cmp	r0, #1
   162fc:	bne	15ffc <table_cell_from_buffer@@Base+0xb4>
   16300:	ldrsh	r3, [r6]
   16304:	mov	r2, r4
   16308:	mov	r1, r9
   1630c:	mov	r0, r8
   16310:	mov	r5, #0
   16314:	bl	15860 <table_set_short@@Base>
   16318:	b	16000 <table_cell_from_buffer@@Base+0xb8>
   1631c:	ldr	r1, [pc, #696]	; 165dc <table_cell_from_buffer@@Base+0x694>
   16320:	add	r6, sp, #8
   16324:	mov	r0, r5
   16328:	mov	r2, r6
   1632c:	add	r1, pc, r1
   16330:	bl	12978 <__isoc99_sscanf@plt>
   16334:	cmp	r0, #1
   16338:	bne	15ffc <table_cell_from_buffer@@Base+0xb4>
   1633c:	ldrd	r6, [r6]
   16340:	mov	r2, r4
   16344:	mov	r1, r9
   16348:	mov	r0, r8
   1634c:	mov	r5, #0
   16350:	strd	r6, [sp]
   16354:	bl	15840 <table_set_uint64@@Base>
   16358:	b	16000 <table_cell_from_buffer@@Base+0xb8>
   1635c:	ldr	r1, [pc, #636]	; 165e0 <table_cell_from_buffer@@Base+0x698>
   16360:	add	r6, sp, #8
   16364:	mov	r0, r5
   16368:	mov	r2, r6
   1636c:	add	r1, pc, r1
   16370:	bl	12978 <__isoc99_sscanf@plt>
   16374:	cmp	r0, #1
   16378:	bne	15ffc <table_cell_from_buffer@@Base+0xb4>
   1637c:	ldrd	r6, [r6]
   16380:	mov	r2, r4
   16384:	mov	r1, r9
   16388:	mov	r0, r8
   1638c:	mov	r5, #0
   16390:	strd	r6, [sp]
   16394:	bl	15820 <table_set_int64@@Base>
   16398:	b	16000 <table_cell_from_buffer@@Base+0xb8>
   1639c:	ldr	r1, [pc, #576]	; 165e4 <table_cell_from_buffer@@Base+0x69c>
   163a0:	mov	r0, r5
   163a4:	add	r2, sp, #8
   163a8:	add	r1, pc, r1
   163ac:	bl	12978 <__isoc99_sscanf@plt>
   163b0:	cmp	r0, #1
   163b4:	bne	15ffc <table_cell_from_buffer@@Base+0xb4>
   163b8:	mov	r2, r4
   163bc:	mov	r1, r9
   163c0:	ldr	r3, [sp, #8]
   163c4:	mov	r0, r8
   163c8:	mov	r5, #0
   163cc:	bl	157fc <table_set_uint32@@Base>
   163d0:	b	16000 <table_cell_from_buffer@@Base+0xb8>
   163d4:	ldr	r1, [pc, #524]	; 165e8 <table_cell_from_buffer@@Base+0x6a0>
   163d8:	mov	r0, r5
   163dc:	add	r2, sp, #8
   163e0:	add	r1, pc, r1
   163e4:	bl	12978 <__isoc99_sscanf@plt>
   163e8:	cmp	r0, #1
   163ec:	bne	15ffc <table_cell_from_buffer@@Base+0xb4>
   163f0:	mov	r2, r4
   163f4:	mov	r1, r9
   163f8:	ldr	r3, [sp, #8]
   163fc:	mov	r0, r8
   16400:	mov	r5, #0
   16404:	bl	157d8 <table_set_int32@@Base>
   16408:	b	16000 <table_cell_from_buffer@@Base+0xb8>
   1640c:	ldr	r1, [pc, #472]	; 165ec <table_cell_from_buffer@@Base+0x6a4>
   16410:	add	r6, sp, #8
   16414:	mov	r0, r5
   16418:	mov	r2, r6
   1641c:	add	r1, pc, r1
   16420:	bl	12978 <__isoc99_sscanf@plt>
   16424:	cmp	r0, #1
   16428:	bne	15ffc <table_cell_from_buffer@@Base+0xb4>
   1642c:	ldrh	r3, [r6]
   16430:	mov	r2, r4
   16434:	mov	r1, r9
   16438:	mov	r0, r8
   1643c:	mov	r5, #0
   16440:	bl	157b4 <table_set_uint16@@Base>
   16444:	b	16000 <table_cell_from_buffer@@Base+0xb8>
   16448:	ldr	r1, [pc, #416]	; 165f0 <table_cell_from_buffer@@Base+0x6a8>
   1644c:	add	r6, sp, #8
   16450:	mov	r0, r5
   16454:	mov	r2, r6
   16458:	add	r1, pc, r1
   1645c:	bl	12978 <__isoc99_sscanf@plt>
   16460:	cmp	r0, #1
   16464:	bne	15ffc <table_cell_from_buffer@@Base+0xb4>
   16468:	ldrsh	r3, [r6]
   1646c:	mov	r2, r4
   16470:	mov	r1, r9
   16474:	mov	r0, r8
   16478:	mov	r5, #0
   1647c:	bl	15790 <table_set_int16@@Base>
   16480:	b	16000 <table_cell_from_buffer@@Base+0xb8>
   16484:	ldr	r1, [pc, #360]	; 165f4 <table_cell_from_buffer@@Base+0x6ac>
   16488:	mov	r0, r5
   1648c:	add	r2, sp, #8
   16490:	add	r1, pc, r1
   16494:	bl	12978 <__isoc99_sscanf@plt>
   16498:	cmp	r0, #1
   1649c:	bne	15ffc <table_cell_from_buffer@@Base+0xb4>
   164a0:	mov	r2, r4
   164a4:	mov	r1, r9
   164a8:	ldrb	r3, [sp, #8]
   164ac:	mov	r0, r8
   164b0:	mov	r5, #0
   164b4:	bl	1576c <table_set_uint8@@Base>
   164b8:	b	16000 <table_cell_from_buffer@@Base+0xb8>
   164bc:	ldr	r1, [pc, #308]	; 165f8 <table_cell_from_buffer@@Base+0x6b0>
   164c0:	add	r6, sp, #8
   164c4:	mov	r0, r5
   164c8:	mov	r2, r6
   164cc:	add	r1, pc, r1
   164d0:	bl	12978 <__isoc99_sscanf@plt>
   164d4:	cmp	r0, #1
   164d8:	bne	15ffc <table_cell_from_buffer@@Base+0xb4>
   164dc:	ldrsb	r3, [r6]
   164e0:	mov	r2, r4
   164e4:	mov	r1, r9
   164e8:	mov	r0, r8
   164ec:	mov	r5, #0
   164f0:	bl	15748 <table_set_int8@@Base>
   164f4:	b	16000 <table_cell_from_buffer@@Base+0xb8>
   164f8:	ldr	r1, [pc, #252]	; 165fc <table_cell_from_buffer@@Base+0x6b4>
   164fc:	mov	r0, r5
   16500:	add	r2, sp, #8
   16504:	add	r1, pc, r1
   16508:	bl	12978 <__isoc99_sscanf@plt>
   1650c:	cmp	r0, #1
   16510:	bne	15ffc <table_cell_from_buffer@@Base+0xb4>
   16514:	mov	r2, r4
   16518:	mov	r1, r9
   1651c:	ldr	r3, [sp, #8]
   16520:	mov	r0, r8
   16524:	mov	r5, #0
   16528:	bl	15724 <table_set_uint@@Base>
   1652c:	b	16000 <table_cell_from_buffer@@Base+0xb8>
   16530:	ldr	r1, [pc, #200]	; 16600 <table_cell_from_buffer@@Base+0x6b8>
   16534:	mov	r0, r5
   16538:	add	r2, sp, #8
   1653c:	add	r1, pc, r1
   16540:	bl	12978 <__isoc99_sscanf@plt>
   16544:	cmp	r0, #1
   16548:	bne	15ffc <table_cell_from_buffer@@Base+0xb4>
   1654c:	mov	r2, r4
   16550:	mov	r1, r9
   16554:	ldr	r3, [sp, #8]
   16558:	mov	r0, r8
   1655c:	mov	r5, #0
   16560:	bl	15700 <table_set_int@@Base>
   16564:	b	16000 <table_cell_from_buffer@@Base+0xb8>
   16568:	mov	r2, r4
   1656c:	mov	r1, r9
   16570:	ldr	r3, [sp, #8]
   16574:	mov	r0, r8
   16578:	mov	r5, #0
   1657c:	bl	15a00 <table_set_ptr@@Base>
   16580:	b	16000 <table_cell_from_buffer@@Base+0xb8>
   16584:	mov	r2, r4
   16588:	mov	r1, r9
   1658c:	mov	r0, r8
   16590:	mov	r3, r5
   16594:	bl	156dc <table_set_bool@@Base>
   16598:	b	16000 <table_cell_from_buffer@@Base+0xb8>
   1659c:	mov	r5, #0
   165a0:	b	16000 <table_cell_from_buffer@@Base+0xb8>
   165a4:	muleq	r0, r4, r8
   165a8:	muleq	r0, ip, r7
   165ac:	andeq	r0, r0, r0, lsl r8
   165b0:	andeq	r0, r0, r4, asr #15
   165b4:	muleq	r0, ip, r7
   165b8:	andeq	r0, r0, ip, asr r7
   165bc:	andeq	r0, r0, r0, lsr #14
   165c0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   165c4:	muleq	r0, r0, r6
   165c8:	andeq	r0, r0, r8, asr #12
   165cc:	andeq	r0, r0, r8, lsr #12
   165d0:	andeq	r0, r0, ip, ror #11
   165d4:	andeq	r0, r0, ip, lsr #11
   165d8:	andeq	r0, r0, ip, ror #10
   165dc:	andeq	r0, r0, r8, lsr #10
   165e0:	andeq	r0, r0, r0, ror #9
   165e4:	andeq	r0, r0, r0, lsr #9
   165e8:	andeq	r0, r0, r4, ror #7
   165ec:	andeq	r0, r0, r4, asr #8
   165f0:	andeq	r0, r0, r4, lsl #8
   165f4:	strdeq	r0, [r0], -ip
   165f8:			; <UNDEFINED> instruction: 0x000003b8
   165fc:	andeq	r0, r0, r4, asr #6
   16600:	andeq	r0, r0, r8, lsl #5

00016604 <table_get_cell_ptr@@Base>:
   16604:	str	r4, [sp, #-8]!
   16608:	mov	r4, r2
   1660c:	str	lr, [sp, #4]
   16610:	bl	1507c <table_get_row_ptr@@Base>
   16614:	ldr	r0, [r0]
   16618:	add	r0, r0, r4, lsl #2
   1661c:	ldr	r4, [sp]
   16620:	add	sp, sp, #4
   16624:	pop	{pc}		; (ldr pc, [sp], #4)

00016628 <table_cell_init@@Base>:
   16628:	str	r4, [sp, #-8]!
   1662c:	str	lr, [sp, #4]
   16630:	bl	16604 <table_get_cell_ptr@@Base>
   16634:	mov	r3, #0
   16638:	ldr	r4, [sp]
   1663c:	add	sp, sp, #4
   16640:	str	r3, [r0]
   16644:	pop	{pc}		; (ldr pc, [sp], #4)

00016648 <table_cell_destroy@@Base>:
   16648:	strd	r4, [sp, #-16]!
   1664c:	mov	r4, r2
   16650:	mov	r5, r0
   16654:	str	r6, [sp, #8]
   16658:	mov	r6, r1
   1665c:	mov	r1, r2
   16660:	str	lr, [sp, #12]
   16664:	bl	13a00 <table_get_column_data_type@@Base>
   16668:	cmp	r0, #23
   1666c:	bne	16680 <table_cell_destroy@@Base+0x38>
   16670:	ldrd	r4, [sp]
   16674:	ldr	r6, [sp, #8]
   16678:	add	sp, sp, #12
   1667c:	pop	{pc}		; (ldr pc, [sp], #4)
   16680:	mov	r2, r4
   16684:	mov	r1, r6
   16688:	mov	r0, r5
   1668c:	bl	16604 <table_get_cell_ptr@@Base>
   16690:	ldr	r0, [r0]
   16694:	cmp	r0, #0
   16698:	beq	16670 <table_cell_destroy@@Base+0x28>
   1669c:	ldrd	r4, [sp]
   166a0:	ldr	r6, [sp, #8]
   166a4:	ldr	lr, [sp, #12]
   166a8:	add	sp, sp, #16
   166ac:	b	12918 <free@plt>

000166b0 <table_cell_nullify@@Base>:
   166b0:	str	r4, [sp, #-8]!
   166b4:	str	lr, [sp, #4]
   166b8:	bl	16604 <table_get_cell_ptr@@Base>
   166bc:	mov	r4, r0
   166c0:	ldr	r0, [r0]
   166c4:	cmp	r0, #0
   166c8:	beq	166d8 <table_cell_nullify@@Base+0x28>
   166cc:	bl	12918 <free@plt>
   166d0:	mov	r3, #0
   166d4:	str	r3, [r4]
   166d8:	ldr	r4, [sp]
   166dc:	add	sp, sp, #4
   166e0:	mov	r0, #0
   166e4:	pop	{pc}		; (ldr pc, [sp], #4)

000166e8 <__libc_csu_init@@Base>:
   166e8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   166ec:	mov	r7, r0
   166f0:	ldr	r6, [pc, #72]	; 16740 <__libc_csu_init@@Base+0x58>
   166f4:	ldr	r5, [pc, #72]	; 16744 <__libc_csu_init@@Base+0x5c>
   166f8:	add	r6, pc, r6
   166fc:	add	r5, pc, r5
   16700:	sub	r6, r6, r5
   16704:	mov	r8, r1
   16708:	mov	r9, r2
   1670c:	bl	128e0 <strcmp@plt-0x20>
   16710:	asrs	r6, r6, #2
   16714:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16718:	mov	r4, #0
   1671c:	add	r4, r4, #1
   16720:	ldr	r3, [r5], #4
   16724:	mov	r2, r9
   16728:	mov	r1, r8
   1672c:	mov	r0, r7
   16730:	blx	r3
   16734:	cmp	r6, r4
   16738:	bne	1671c <__libc_csu_init@@Base+0x34>
   1673c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16740:	andeq	r0, r1, r4, lsl r8
   16744:	andeq	r0, r1, ip, lsl #16

00016748 <__libc_csu_fini@@Base>:
   16748:	bx	lr

Disassembly of section .fini:

0001674c <.fini>:
   1674c:	push	{r3, lr}
   16750:	pop	{r3, pc}
