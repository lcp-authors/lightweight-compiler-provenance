
../repos/dvidelabs-flatcc-3b39ef7/test/reflection_test/reflection_test:     file format elf32-littlearm


Disassembly of section .init:

00010848 <.init>:
   10848:	push	{r3, lr}
   1084c:	bl	10970 <_start@@Base+0x3c>
   10850:	pop	{r3, pc}

Disassembly of section .plt:

00010854 <strcmp@plt-0x14>:
   10854:	push	{lr}		; (str lr, [sp, #-4]!)
   10858:	ldr	lr, [pc, #4]	; 10864 <strcmp@plt-0x4>
   1085c:	add	lr, pc, lr
   10860:	ldr	pc, [lr, #8]!
   10864:	muleq	r1, ip, r7

00010868 <strcmp@plt>:
   10868:	add	ip, pc, #0, 12
   1086c:	add	ip, ip, #69632	; 0x11000
   10870:	ldr	pc, [ip, #1948]!	; 0x79c

00010874 <printf@plt>:
   10874:	add	ip, pc, #0, 12
   10878:	add	ip, ip, #69632	; 0x11000
   1087c:	ldr	pc, [ip, #1940]!	; 0x794

00010880 <fopen@plt>:
   10880:	add	ip, pc, #0, 12
   10884:	add	ip, ip, #69632	; 0x11000
   10888:	ldr	pc, [ip, #1932]!	; 0x78c

0001088c <free@plt>:
   1088c:	add	ip, pc, #0, 12
   10890:	add	ip, ip, #69632	; 0x11000
   10894:	ldr	pc, [ip, #1924]!	; 0x784

00010898 <ftell@plt>:
   10898:	add	ip, pc, #0, 12
   1089c:	add	ip, ip, #69632	; 0x11000
   108a0:	ldr	pc, [ip, #1916]!	; 0x77c

000108a4 <rewind@plt>:
   108a4:	add	ip, pc, #0, 12
   108a8:	add	ip, ip, #69632	; 0x11000
   108ac:	ldr	pc, [ip, #1908]!	; 0x774

000108b0 <fwrite@plt>:
   108b0:	add	ip, pc, #0, 12
   108b4:	add	ip, ip, #69632	; 0x11000
   108b8:	ldr	pc, [ip, #1900]!	; 0x76c

000108bc <puts@plt>:
   108bc:	add	ip, pc, #0, 12
   108c0:	add	ip, ip, #69632	; 0x11000
   108c4:	ldr	pc, [ip, #1892]!	; 0x764

000108c8 <malloc@plt>:
   108c8:	add	ip, pc, #0, 12
   108cc:	add	ip, ip, #69632	; 0x11000
   108d0:	ldr	pc, [ip, #1884]!	; 0x75c

000108d4 <__libc_start_main@plt>:
   108d4:	add	ip, pc, #0, 12
   108d8:	add	ip, ip, #69632	; 0x11000
   108dc:	ldr	pc, [ip, #1876]!	; 0x754

000108e0 <__gmon_start__@plt>:
   108e0:	add	ip, pc, #0, 12
   108e4:	add	ip, ip, #69632	; 0x11000
   108e8:	ldr	pc, [ip, #1868]!	; 0x74c

000108ec <exit@plt>:
   108ec:	add	ip, pc, #0, 12
   108f0:	add	ip, ip, #69632	; 0x11000
   108f4:	ldr	pc, [ip, #1860]!	; 0x744

000108f8 <fclose@plt>:
   108f8:	add	ip, pc, #0, 12
   108fc:	add	ip, ip, #69632	; 0x11000
   10900:	ldr	pc, [ip, #1852]!	; 0x73c

00010904 <fread_unlocked@plt>:
   10904:	add	ip, pc, #0, 12
   10908:	add	ip, ip, #69632	; 0x11000
   1090c:	ldr	pc, [ip, #1844]!	; 0x734

00010910 <fseek@plt>:
   10910:	add	ip, pc, #0, 12
   10914:	add	ip, ip, #69632	; 0x11000
   10918:	ldr	pc, [ip, #1836]!	; 0x72c

0001091c <abort@plt>:
   1091c:	add	ip, pc, #0, 12
   10920:	add	ip, ip, #69632	; 0x11000
   10924:	ldr	pc, [ip, #1828]!	; 0x724

00010928 <__assert_fail@plt>:
   10928:	add	ip, pc, #0, 12
   1092c:	add	ip, ip, #69632	; 0x11000
   10930:	ldr	pc, [ip, #1820]!	; 0x71c

Disassembly of section .text:

00010934 <_start@@Base>:
   10934:	mov	fp, #0
   10938:	mov	lr, #0
   1093c:	pop	{r1}		; (ldr r1, [sp], #4)
   10940:	mov	r2, sp
   10944:	push	{r2}		; (str r2, [sp, #-4]!)
   10948:	push	{r0}		; (str r0, [sp, #-4]!)
   1094c:	ldr	ip, [pc, #16]	; 10964 <_start@@Base+0x30>
   10950:	push	{ip}		; (str ip, [sp, #-4]!)
   10954:	ldr	r0, [pc, #12]	; 10968 <_start@@Base+0x34>
   10958:	ldr	r3, [pc, #12]	; 1096c <_start@@Base+0x38>
   1095c:	bl	108d4 <__libc_start_main@plt>
   10960:	bl	1091c <abort@plt>
   10964:	andeq	r1, r1, r0, ror #8
   10968:	andeq	r1, r1, r8, lsl #7
   1096c:	andeq	r1, r1, r0, lsl #8
   10970:	ldr	r3, [pc, #20]	; 1098c <_start@@Base+0x58>
   10974:	ldr	r2, [pc, #20]	; 10990 <_start@@Base+0x5c>
   10978:	add	r3, pc, r3
   1097c:	ldr	r2, [r3, r2]
   10980:	cmp	r2, #0
   10984:	bxeq	lr
   10988:	b	108e0 <__gmon_start__@plt>
   1098c:	andeq	r1, r1, r0, lsl #13
   10990:	andeq	r0, r0, r4, asr r0
   10994:	ldr	r0, [pc, #24]	; 109b4 <_start@@Base+0x80>
   10998:	ldr	r3, [pc, #24]	; 109b8 <_start@@Base+0x84>
   1099c:	cmp	r3, r0
   109a0:	bxeq	lr
   109a4:	ldr	r3, [pc, #16]	; 109bc <_start@@Base+0x88>
   109a8:	cmp	r3, #0
   109ac:	bxeq	lr
   109b0:	bx	r3
   109b4:	andeq	r2, r2, r8, rrx
   109b8:	andeq	r2, r2, r8, rrx
   109bc:	andeq	r0, r0, r0
   109c0:	ldr	r0, [pc, #36]	; 109ec <_start@@Base+0xb8>
   109c4:	ldr	r1, [pc, #36]	; 109f0 <_start@@Base+0xbc>
   109c8:	sub	r1, r1, r0
   109cc:	asr	r1, r1, #2
   109d0:	add	r1, r1, r1, lsr #31
   109d4:	asrs	r1, r1, #1
   109d8:	bxeq	lr
   109dc:	ldr	r3, [pc, #16]	; 109f4 <_start@@Base+0xc0>
   109e0:	cmp	r3, #0
   109e4:	bxeq	lr
   109e8:	bx	r3
   109ec:	andeq	r2, r2, r8, rrx
   109f0:	andeq	r2, r2, r8, rrx
   109f4:	andeq	r0, r0, r0
   109f8:	push	{r4, lr}
   109fc:	ldr	r4, [pc, #24]	; 10a1c <_start@@Base+0xe8>
   10a00:	ldrb	r3, [r4]
   10a04:	cmp	r3, #0
   10a08:	popne	{r4, pc}
   10a0c:	bl	10994 <_start@@Base+0x60>
   10a10:	mov	r3, #1
   10a14:	strb	r3, [r4]
   10a18:	pop	{r4, pc}
   10a1c:	andeq	r2, r2, r8, rrx
   10a20:	b	109c0 <_start@@Base+0x8c>

00010a24 <test_schema@@Base>:
   10a24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10a28:	add	fp, sp, #28
   10a2c:	sub	sp, sp, #4
   10a30:	ldr	r1, [pc, #1816]	; 11150 <test_schema@@Base+0x72c>
   10a34:	add	r1, pc, r1
   10a38:	bl	10880 <fopen@plt>
   10a3c:	cmp	r0, #0
   10a40:	beq	10c94 <test_schema@@Base+0x270>
   10a44:	mov	r1, #0
   10a48:	mov	r2, #2
   10a4c:	mov	r5, r0
   10a50:	bl	10910 <fseek@plt>
   10a54:	mov	r0, r5
   10a58:	bl	10898 <ftell@plt>
   10a5c:	mov	r6, r0
   10a60:	movw	r0, #10000	; 0x2710
   10a64:	cmp	r6, r0
   10a68:	bhi	10c8c <test_schema@@Base+0x268>
   10a6c:	mov	r0, r5
   10a70:	bl	108a4 <rewind@plt>
   10a74:	cmp	r6, #0
   10a78:	mov	r0, r6
   10a7c:	movweq	r0, #1
   10a80:	bl	108c8 <malloc@plt>
   10a84:	cmp	r0, #0
   10a88:	beq	10c8c <test_schema@@Base+0x268>
   10a8c:	mov	r8, r0
   10a90:	mov	r1, #0
   10a94:	mov	r4, r1
   10a98:	add	r0, r8, r1
   10a9c:	sub	r2, r6, r1
   10aa0:	mov	r1, #1
   10aa4:	mov	r3, r5
   10aa8:	bl	10904 <fread_unlocked@plt>
   10aac:	add	r1, r0, r4
   10ab0:	cmp	r0, #0
   10ab4:	bne	10a94 <test_schema@@Base+0x70>
   10ab8:	mov	r0, r5
   10abc:	bl	108f8 <fclose@plt>
   10ac0:	cmp	r6, r4
   10ac4:	bne	10cb0 <test_schema@@Base+0x28c>
   10ac8:	ldr	r0, [r8, #4]
   10acc:	movw	r1, #17986	; 0x4642
   10ad0:	movt	r1, #21314	; 0x5342
   10ad4:	cmp	r0, r1
   10ad8:	bne	11064 <test_schema@@Base+0x640>
   10adc:	ldr	r1, [r8]
   10ae0:	mov	r0, r8
   10ae4:	ldr	r2, [r0, r1]!
   10ae8:	mov	r1, r0
   10aec:	ldrh	r2, [r1, -r2]!	; <UNPREDICTABLE>
   10af0:	cmp	r2, #5
   10af4:	bls	11058 <test_schema@@Base+0x634>
   10af8:	ldrh	r1, [r1, #4]
   10afc:	cmp	r1, #0
   10b00:	beq	11058 <test_schema@@Base+0x634>
   10b04:	ldr	r1, [r0, r1]!
   10b08:	ldr	r1, [r0, r1]!
   10b0c:	cmp	r1, #0
   10b10:	beq	10c70 <test_schema@@Base+0x24c>
   10b14:	ldr	r9, [pc, #1612]	; 11168 <test_schema@@Base+0x744>
   10b18:	add	r6, r0, #4
   10b1c:	mov	r5, #0
   10b20:	mov	r7, r6
   10b24:	add	r9, pc, r9
   10b28:	ldr	r0, [r7]
   10b2c:	adds	r1, r7, r0
   10b30:	beq	11018 <test_schema@@Base+0x5f4>
   10b34:	ldr	r1, [r7, r0]
   10b38:	sub	r1, r0, r1
   10b3c:	add	r1, r7, r1
   10b40:	ldrh	r2, [r1]
   10b44:	cmp	r2, #6
   10b48:	bcc	1100c <test_schema@@Base+0x5e8>
   10b4c:	ldrh	r1, [r1, #4]
   10b50:	cmp	r1, #0
   10b54:	beq	1100c <test_schema@@Base+0x5e8>
   10b58:	add	r2, r0, r1
   10b5c:	ldr	r2, [r7, r2]
   10b60:	add	r0, r2, r0
   10b64:	add	r0, r0, r1
   10b68:	mov	r1, r5
   10b6c:	add	r0, r7, r0
   10b70:	add	r2, r0, #4
   10b74:	mov	r0, r9
   10b78:	bl	10874 <printf@plt>
   10b7c:	ldr	r4, [r6, #-4]
   10b80:	add	r5, r5, #1
   10b84:	add	r7, r7, #4
   10b88:	cmp	r5, r4
   10b8c:	bcc	10b28 <test_schema@@Base+0x104>
   10b90:	cmp	r4, #0
   10b94:	beq	10c70 <test_schema@@Base+0x24c>
   10b98:	mov	sl, #0
   10b9c:	subs	r5, r4, #1
   10ba0:	beq	10c20 <test_schema@@Base+0x1fc>
   10ba4:	ldr	r9, [pc, #1488]	; 1117c <test_schema@@Base+0x758>
   10ba8:	add	r9, pc, r9
   10bac:	sub	r0, r5, sl
   10bb0:	add	r7, sl, r0, lsr #1
   10bb4:	cmp	r4, r7
   10bb8:	bls	11038 <test_schema@@Base+0x614>
   10bbc:	mov	r0, r6
   10bc0:	ldr	r1, [r0, r7, lsl #2]!
   10bc4:	adds	r0, r0, r1
   10bc8:	beq	11018 <test_schema@@Base+0x5f4>
   10bcc:	ldr	r2, [r0]
   10bd0:	mov	r1, r0
   10bd4:	ldrh	r2, [r1, -r2]!	; <UNPREDICTABLE>
   10bd8:	cmp	r2, #6
   10bdc:	bcc	1100c <test_schema@@Base+0x5e8>
   10be0:	ldrh	r1, [r1, #4]
   10be4:	cmp	r1, #0
   10be8:	beq	1100c <test_schema@@Base+0x5e8>
   10bec:	ldr	r1, [r0, r1]!
   10bf0:	add	r0, r0, r1
   10bf4:	mov	r1, r9
   10bf8:	add	r0, r0, #4
   10bfc:	bl	10868 <strcmp@plt>
   10c00:	cmp	r0, #0
   10c04:	movge	r5, r7
   10c08:	addlt	sl, r7, #1
   10c0c:	cmp	r5, sl
   10c10:	bhi	10bac <test_schema@@Base+0x188>
   10c14:	bne	10c70 <test_schema@@Base+0x24c>
   10c18:	cmp	r4, sl
   10c1c:	bls	11038 <test_schema@@Base+0x614>
   10c20:	ldr	r0, [r6, sl, lsl #2]!
   10c24:	adds	r5, r6, r0
   10c28:	beq	11018 <test_schema@@Base+0x5f4>
   10c2c:	ldr	r0, [r5]
   10c30:	mov	r6, r5
   10c34:	ldrh	r7, [r6, -r0]!
   10c38:	cmp	r7, #6
   10c3c:	bcc	1100c <test_schema@@Base+0x5e8>
   10c40:	ldrh	r0, [r6, #4]
   10c44:	cmp	r0, #0
   10c48:	beq	1100c <test_schema@@Base+0x5e8>
   10c4c:	mov	r1, r5
   10c50:	ldr	r0, [r1, r0]!
   10c54:	add	r0, r1, r0
   10c58:	ldr	r1, [pc, #1312]	; 11180 <test_schema@@Base+0x75c>
   10c5c:	add	r0, r0, #4
   10c60:	add	r1, pc, r1
   10c64:	bl	10868 <strcmp@plt>
   10c68:	cmp	r0, #0
   10c6c:	beq	10cbc <test_schema@@Base+0x298>
   10c70:	ldr	r0, [pc, #1292]	; 11184 <test_schema@@Base+0x760>
   10c74:	add	r0, pc, r0
   10c78:	bl	108bc <puts@plt>
   10c7c:	mvn	r5, #0
   10c80:	mov	r0, r8
   10c84:	bl	1088c <free@plt>
   10c88:	b	10ca4 <test_schema@@Base+0x280>
   10c8c:	mov	r0, r5
   10c90:	bl	108f8 <fclose@plt>
   10c94:	ldr	r0, [pc, #1208]	; 11154 <test_schema@@Base+0x730>
   10c98:	add	r0, pc, r0
   10c9c:	bl	108bc <puts@plt>
   10ca0:	mvn	r5, #0
   10ca4:	mov	r0, r5
   10ca8:	sub	sp, fp, #28
   10cac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10cb0:	mov	r0, r8
   10cb4:	bl	1088c <free@plt>
   10cb8:	b	10c94 <test_schema@@Base+0x270>
   10cbc:	cmp	r4, sl
   10cc0:	bls	11038 <test_schema@@Base+0x614>
   10cc4:	cmp	r7, #8
   10cc8:	bcc	11084 <test_schema@@Base+0x660>
   10ccc:	ldrh	r0, [r6, #6]
   10cd0:	cmp	r0, #0
   10cd4:	beq	11084 <test_schema@@Base+0x660>
   10cd8:	ldr	r0, [r5, r0]!
   10cdc:	ldr	r1, [pc, #1188]	; 11188 <test_schema@@Base+0x764>
   10ce0:	add	r0, r5, r0
   10ce4:	add	r1, pc, r1
   10ce8:	add	r5, r0, #4
   10cec:	mov	r0, r5
   10cf0:	bl	1121c <test_schema@@Base+0x7f8>
   10cf4:	cmn	r0, #1
   10cf8:	beq	10f94 <test_schema@@Base+0x570>
   10cfc:	ldr	r1, [r5, #-4]
   10d00:	cmp	r1, r0
   10d04:	bls	110c4 <test_schema@@Base+0x6a0>
   10d08:	mov	r1, r5
   10d0c:	ldr	r0, [r1, r0, lsl #2]!
   10d10:	adds	r4, r1, r0
   10d14:	beq	110e4 <test_schema@@Base+0x6c0>
   10d18:	ldr	r1, [r4]
   10d1c:	mov	r0, r4
   10d20:	ldrh	r1, [r0, -r1]!	; <UNPREDICTABLE>
   10d24:	cmp	r1, #14
   10d28:	bcc	10f18 <test_schema@@Base+0x4f4>
   10d2c:	ldrh	r1, [r0, #12]
   10d30:	cmp	r1, #0
   10d34:	beq	10f18 <test_schema@@Base+0x4f4>
   10d38:	mov	r2, r4
   10d3c:	ldr	r1, [r2, r1]!
   10d40:	ldr	r2, [r2, #4]
   10d44:	eor	r1, r1, #150	; 0x96
   10d48:	orrs	r1, r1, r2
   10d4c:	bne	10f18 <test_schema@@Base+0x4f4>
   10d50:	ldrh	r0, [r0, #6]
   10d54:	cmp	r0, #0
   10d58:	beq	11104 <test_schema@@Base+0x6e0>
   10d5c:	ldr	r0, [r4, r0]!
   10d60:	adds	r0, r4, r0
   10d64:	beq	11124 <test_schema@@Base+0x700>
   10d68:	ldr	r2, [r0]
   10d6c:	mov	r1, r0
   10d70:	ldrh	r2, [r1, -r2]!	; <UNPREDICTABLE>
   10d74:	cmp	r2, #6
   10d78:	bcc	10fb8 <test_schema@@Base+0x594>
   10d7c:	ldrh	r1, [r1, #4]
   10d80:	cmp	r1, #0
   10d84:	beq	10fb8 <test_schema@@Base+0x594>
   10d88:	ldrb	r0, [r0, r1]
   10d8c:	cmp	r0, #5
   10d90:	bne	10fb8 <test_schema@@Base+0x594>
   10d94:	ldr	r1, [pc, #1040]	; 111ac <test_schema@@Base+0x788>
   10d98:	mov	r0, r5
   10d9c:	add	r1, pc, r1
   10da0:	bl	1121c <test_schema@@Base+0x7f8>
   10da4:	cmn	r0, #1
   10da8:	beq	10fd0 <test_schema@@Base+0x5ac>
   10dac:	ldr	r1, [r5, #-4]
   10db0:	cmp	r1, r0
   10db4:	bls	110c4 <test_schema@@Base+0x6a0>
   10db8:	mov	r1, r5
   10dbc:	ldr	r0, [r1, r0, lsl #2]!
   10dc0:	adds	r0, r1, r0
   10dc4:	beq	11144 <test_schema@@Base+0x720>
   10dc8:	ldr	r2, [r0]
   10dcc:	mov	r1, r0
   10dd0:	ldrh	r2, [r1, -r2]!	; <UNPREDICTABLE>
   10dd4:	cmp	r2, #8
   10dd8:	bcc	11104 <test_schema@@Base+0x6e0>
   10ddc:	ldrh	r1, [r1, #6]
   10de0:	cmp	r1, #0
   10de4:	beq	11104 <test_schema@@Base+0x6e0>
   10de8:	ldr	r1, [r0, r1]!
   10dec:	adds	r0, r0, r1
   10df0:	beq	11124 <test_schema@@Base+0x700>
   10df4:	ldr	r2, [r0]
   10df8:	mov	r1, r0
   10dfc:	ldrh	r2, [r1, -r2]!	; <UNPREDICTABLE>
   10e00:	cmp	r2, #6
   10e04:	bcc	10fc4 <test_schema@@Base+0x5a0>
   10e08:	ldrh	r3, [r1, #4]
   10e0c:	cmp	r3, #0
   10e10:	beq	10fc4 <test_schema@@Base+0x5a0>
   10e14:	ldrb	r3, [r0, r3]
   10e18:	cmp	r3, #15
   10e1c:	bne	10fc4 <test_schema@@Base+0x5a0>
   10e20:	mvn	r3, #0
   10e24:	cmp	r2, #10
   10e28:	bcc	10e38 <test_schema@@Base+0x414>
   10e2c:	ldrh	r1, [r1, #8]
   10e30:	cmp	r1, #0
   10e34:	ldrne	r3, [r0, r1]
   10e38:	cmp	r3, sl
   10e3c:	bne	10fdc <test_schema@@Base+0x5b8>
   10e40:	ldr	r1, [pc, #888]	; 111c0 <test_schema@@Base+0x79c>
   10e44:	mov	r0, r5
   10e48:	add	r1, pc, r1
   10e4c:	bl	1121c <test_schema@@Base+0x7f8>
   10e50:	cmn	r0, #1
   10e54:	beq	10ff4 <test_schema@@Base+0x5d0>
   10e58:	ldr	r1, [r5, #-4]
   10e5c:	cmp	r1, r0
   10e60:	bls	110c4 <test_schema@@Base+0x6a0>
   10e64:	ldr	r0, [r5, r0, lsl #2]!
   10e68:	adds	r0, r5, r0
   10e6c:	beq	11144 <test_schema@@Base+0x720>
   10e70:	ldr	r2, [r0]
   10e74:	mov	r1, r0
   10e78:	ldrh	r2, [r1, -r2]!	; <UNPREDICTABLE>
   10e7c:	cmp	r2, #8
   10e80:	bcc	11104 <test_schema@@Base+0x6e0>
   10e84:	ldrh	r1, [r1, #6]
   10e88:	cmp	r1, #0
   10e8c:	beq	11104 <test_schema@@Base+0x6e0>
   10e90:	ldr	r1, [r0, r1]!
   10e94:	adds	r0, r0, r1
   10e98:	beq	11124 <test_schema@@Base+0x700>
   10e9c:	ldr	r2, [r0]
   10ea0:	mov	r1, r0
   10ea4:	ldrh	r2, [r1, -r2]!	; <UNPREDICTABLE>
   10ea8:	cmp	r2, #6
   10eac:	bcc	10fe8 <test_schema@@Base+0x5c4>
   10eb0:	ldrh	r3, [r1, #4]
   10eb4:	cmp	r3, #0
   10eb8:	beq	10fe8 <test_schema@@Base+0x5c4>
   10ebc:	ldrb	r3, [r0, r3]
   10ec0:	cmp	r3, #14
   10ec4:	bne	10fe8 <test_schema@@Base+0x5c4>
   10ec8:	cmp	r2, #8
   10ecc:	bcc	11000 <test_schema@@Base+0x5dc>
   10ed0:	ldrh	r3, [r1, #6]
   10ed4:	cmp	r3, #0
   10ed8:	beq	11000 <test_schema@@Base+0x5dc>
   10edc:	ldrb	r3, [r0, r3]
   10ee0:	cmp	r3, #15
   10ee4:	bne	11000 <test_schema@@Base+0x5dc>
   10ee8:	mvn	r3, #0
   10eec:	cmp	r2, #10
   10ef0:	bcc	10f00 <test_schema@@Base+0x4dc>
   10ef4:	ldrh	r1, [r1, #8]
   10ef8:	cmp	r1, #0
   10efc:	ldrne	r3, [r0, r1]
   10f00:	mov	r5, #0
   10f04:	cmp	r3, sl
   10f08:	beq	10c80 <test_schema@@Base+0x25c>
   10f0c:	ldr	r0, [pc, #700]	; 111d0 <test_schema@@Base+0x7ac>
   10f10:	add	r0, pc, r0
   10f14:	b	10c78 <test_schema@@Base+0x254>
   10f18:	ldr	r0, [pc, #624]	; 11190 <test_schema@@Base+0x76c>
   10f1c:	add	r0, pc, r0
   10f20:	bl	108bc <puts@plt>
   10f24:	ldr	r1, [r4]
   10f28:	mov	r0, r4
   10f2c:	ldrh	r1, [r0, -r1]!	; <UNPREDICTABLE>
   10f30:	cmp	r1, #6
   10f34:	bcc	110a4 <test_schema@@Base+0x680>
   10f38:	ldrh	r0, [r0, #4]
   10f3c:	cmp	r0, #0
   10f40:	beq	110a4 <test_schema@@Base+0x680>
   10f44:	mov	r1, r4
   10f48:	ldr	r0, [r1, r0]!
   10f4c:	add	r0, r1, r0
   10f50:	add	r1, r0, #4
   10f54:	ldr	r0, [pc, #568]	; 11194 <test_schema@@Base+0x770>
   10f58:	add	r0, pc, r0
   10f5c:	bl	10874 <printf@plt>
   10f60:	ldr	r1, [r4]
   10f64:	mov	r0, r4
   10f68:	mov	r2, #0
   10f6c:	mov	r3, #0
   10f70:	ldrh	r1, [r0, -r1]!	; <UNPREDICTABLE>
   10f74:	cmp	r1, #14
   10f78:	bcc	10fa8 <test_schema@@Base+0x584>
   10f7c:	ldrh	r0, [r0, #12]
   10f80:	cmp	r0, #0
   10f84:	beq	10fa0 <test_schema@@Base+0x57c>
   10f88:	ldr	r2, [r4, r0]!
   10f8c:	ldr	r3, [r4, #4]
   10f90:	b	10fa8 <test_schema@@Base+0x584>
   10f94:	ldr	r0, [pc, #496]	; 1118c <test_schema@@Base+0x768>
   10f98:	add	r0, pc, r0
   10f9c:	b	10c78 <test_schema@@Base+0x254>
   10fa0:	mov	r2, #0
   10fa4:	mov	r3, #0
   10fa8:	ldr	r0, [pc, #488]	; 11198 <test_schema@@Base+0x774>
   10fac:	add	r0, pc, r0
   10fb0:	bl	10874 <printf@plt>
   10fb4:	b	10c7c <test_schema@@Base+0x258>
   10fb8:	ldr	r0, [pc, #488]	; 111a8 <test_schema@@Base+0x784>
   10fbc:	add	r0, pc, r0
   10fc0:	b	10c78 <test_schema@@Base+0x254>
   10fc4:	ldr	r0, [pc, #492]	; 111b8 <test_schema@@Base+0x794>
   10fc8:	add	r0, pc, r0
   10fcc:	b	10c78 <test_schema@@Base+0x254>
   10fd0:	ldr	r0, [pc, #472]	; 111b0 <test_schema@@Base+0x78c>
   10fd4:	add	r0, pc, r0
   10fd8:	b	10c78 <test_schema@@Base+0x254>
   10fdc:	ldr	r0, [pc, #472]	; 111bc <test_schema@@Base+0x798>
   10fe0:	add	r0, pc, r0
   10fe4:	b	10c78 <test_schema@@Base+0x254>
   10fe8:	ldr	r0, [pc, #472]	; 111c8 <test_schema@@Base+0x7a4>
   10fec:	add	r0, pc, r0
   10ff0:	b	10c78 <test_schema@@Base+0x254>
   10ff4:	ldr	r0, [pc, #456]	; 111c4 <test_schema@@Base+0x7a0>
   10ff8:	add	r0, pc, r0
   10ffc:	b	10c78 <test_schema@@Base+0x254>
   11000:	ldr	r0, [pc, #452]	; 111cc <test_schema@@Base+0x7a8>
   11004:	add	r0, pc, r0
   11008:	b	10c78 <test_schema@@Base+0x254>
   1100c:	ldr	r0, [pc, #356]	; 11178 <test_schema@@Base+0x754>
   11010:	add	r0, pc, r0
   11014:	b	11020 <test_schema@@Base+0x5fc>
   11018:	ldr	r0, [pc, #332]	; 1116c <test_schema@@Base+0x748>
   1101c:	add	r0, pc, r0
   11020:	ldr	r1, [pc, #328]	; 11170 <test_schema@@Base+0x74c>
   11024:	ldr	r3, [pc, #328]	; 11174 <test_schema@@Base+0x750>
   11028:	mov	r2, #218	; 0xda
   1102c:	add	r1, pc, r1
   11030:	add	r3, pc, r3
   11034:	bl	10928 <__assert_fail@plt>
   11038:	ldr	r0, [pc, #404]	; 111d4 <test_schema@@Base+0x7b0>
   1103c:	ldr	r1, [pc, #404]	; 111d8 <test_schema@@Base+0x7b4>
   11040:	ldr	r3, [pc, #404]	; 111dc <test_schema@@Base+0x7b8>
   11044:	mov	r2, #215	; 0xd7
   11048:	add	r0, pc, r0
   1104c:	add	r1, pc, r1
   11050:	add	r3, pc, r3
   11054:	bl	10928 <__assert_fail@plt>
   11058:	ldr	r0, [pc, #248]	; 11158 <test_schema@@Base+0x734>
   1105c:	add	r0, pc, r0
   11060:	b	1106c <test_schema@@Base+0x648>
   11064:	ldr	r0, [pc, #240]	; 1115c <test_schema@@Base+0x738>
   11068:	add	r0, pc, r0
   1106c:	ldr	r1, [pc, #236]	; 11160 <test_schema@@Base+0x73c>
   11070:	ldr	r3, [pc, #236]	; 11164 <test_schema@@Base+0x740>
   11074:	mov	r2, #237	; 0xed
   11078:	add	r1, pc, r1
   1107c:	add	r3, pc, r3
   11080:	bl	10928 <__assert_fail@plt>
   11084:	ldr	r0, [pc, #340]	; 111e0 <test_schema@@Base+0x7bc>
   11088:	ldr	r1, [pc, #340]	; 111e4 <test_schema@@Base+0x7c0>
   1108c:	ldr	r3, [pc, #340]	; 111e8 <test_schema@@Base+0x7c4>
   11090:	mov	r2, #224	; 0xe0
   11094:	add	r0, pc, r0
   11098:	add	r1, pc, r1
   1109c:	add	r3, pc, r3
   110a0:	bl	10928 <__assert_fail@plt>
   110a4:	ldr	r0, [pc, #344]	; 11204 <test_schema@@Base+0x7e0>
   110a8:	ldr	r1, [pc, #344]	; 11208 <test_schema@@Base+0x7e4>
   110ac:	ldr	r3, [pc, #344]	; 1120c <test_schema@@Base+0x7e8>
   110b0:	mov	r2, #195	; 0xc3
   110b4:	add	r0, pc, r0
   110b8:	add	r1, pc, r1
   110bc:	add	r3, pc, r3
   110c0:	bl	10928 <__assert_fail@plt>
   110c4:	ldr	r0, [pc, #288]	; 111ec <test_schema@@Base+0x7c8>
   110c8:	ldr	r1, [pc, #288]	; 111f0 <test_schema@@Base+0x7cc>
   110cc:	ldr	r3, [pc, #288]	; 111f4 <test_schema@@Base+0x7d0>
   110d0:	mov	r2, #192	; 0xc0
   110d4:	add	r0, pc, r0
   110d8:	add	r1, pc, r1
   110dc:	add	r3, pc, r3
   110e0:	bl	10928 <__assert_fail@plt>
   110e4:	ldr	r0, [pc, #268]	; 111f8 <test_schema@@Base+0x7d4>
   110e8:	ldr	r1, [pc, #268]	; 111fc <test_schema@@Base+0x7d8>
   110ec:	ldr	r3, [pc, #268]	; 11200 <test_schema@@Base+0x7dc>
   110f0:	mov	r2, #204	; 0xcc
   110f4:	add	r0, pc, r0
   110f8:	add	r1, pc, r1
   110fc:	add	r3, pc, r3
   11100:	bl	10928 <__assert_fail@plt>
   11104:	ldr	r0, [pc, #144]	; 1119c <test_schema@@Base+0x778>
   11108:	add	r0, pc, r0
   1110c:	ldr	r1, [pc, #140]	; 111a0 <test_schema@@Base+0x77c>
   11110:	ldr	r3, [pc, #140]	; 111a4 <test_schema@@Base+0x780>
   11114:	mov	r2, #201	; 0xc9
   11118:	add	r1, pc, r1
   1111c:	add	r3, pc, r3
   11120:	bl	10928 <__assert_fail@plt>
   11124:	ldr	r0, [pc, #228]	; 11210 <test_schema@@Base+0x7ec>
   11128:	ldr	r1, [pc, #228]	; 11214 <test_schema@@Base+0x7f0>
   1112c:	ldr	r3, [pc, #228]	; 11218 <test_schema@@Base+0x7f4>
   11130:	mov	r2, #147	; 0x93
   11134:	add	r0, pc, r0
   11138:	add	r1, pc, r1
   1113c:	add	r3, pc, r3
   11140:	bl	10928 <__assert_fail@plt>
   11144:	ldr	r0, [pc, #104]	; 111b4 <test_schema@@Base+0x790>
   11148:	add	r0, pc, r0
   1114c:	b	1110c <test_schema@@Base+0x6e8>
   11150:	strdeq	r0, [r0], -r2
   11154:	andeq	r0, r0, r0, lsr ip
   11158:			; <UNDEFINED> instruction: 0x000005b5
   1115c:	andeq	r0, r0, r1, asr #9
   11160:	ldrdeq	r0, [r0], -r7
   11164:	andeq	r0, r0, r8, asr #10
   11168:	andeq	r0, r0, r8, asr #18
   1116c:	andeq	r0, r0, sp, lsl #10
   11170:	andeq	r0, r0, r3, lsr #10
   11174:	andeq	r0, r0, r2, lsl #12
   11178:	andeq	r0, r0, r1, lsl #12
   1117c:	ldrdeq	r0, [r0], -r7
   11180:	andeq	r0, r0, pc, lsl r8
   11184:	andeq	r0, r0, r4, lsl #28
   11188:			; <UNDEFINED> instruction: 0x000007b2
   1118c:			; <UNDEFINED> instruction: 0x00000ab0
   11190:	strdeq	r0, [r0], -ip
   11194:	andeq	r0, r0, r3, asr #10
   11198:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   1119c:	andeq	r0, r0, r9, lsl #10
   111a0:	andeq	r0, r0, r7, lsr r4
   111a4:	andeq	r0, r0, ip, lsl #14
   111a8:	andeq	r0, r0, ip, lsr sl
   111ac:	andeq	r0, r0, r5, lsl r7
   111b0:	andeq	r0, r0, r4, lsl #20
   111b4:	andeq	r0, r0, r1, ror #7
   111b8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   111bc:			; <UNDEFINED> instruction: 0x000009b8
   111c0:	andeq	r0, r0, pc, ror #12
   111c4:	andeq	r0, r0, r0, lsl #19
   111c8:	andeq	r0, r0, ip, asr r9
   111cc:	andeq	r0, r0, r4, lsl r9
   111d0:	ldrdeq	r0, [r0], -r8
   111d4:	andeq	r0, r0, r1, lsr r6
   111d8:	andeq	r0, r0, r3, lsl #10
   111dc:	andeq	r0, r0, r0, ror #12
   111e0:	andeq	r0, r0, sp, ror r5
   111e4:			; <UNDEFINED> instruction: 0x000004b7
   111e8:	andeq	r0, r0, r8, ror #12
   111ec:	andeq	r0, r0, r5, lsr #11
   111f0:	andeq	r0, r0, r7, ror r4
   111f4:	andeq	r0, r0, r3, ror r6
   111f8:	andeq	r0, r0, r5, lsr r4
   111fc:	andeq	r0, r0, r7, asr r4
   11200:	andeq	r0, r0, r4, lsr #13
   11204:	andeq	r0, r0, sp, asr r5
   11208:	muleq	r0, r7, r4
   1120c:	andeq	r0, r0, r7, lsr #14
   11210:	strdeq	r0, [r0], -r5
   11214:	andeq	r0, r0, r7, lsl r4
   11218:	andeq	r0, r0, r4, lsr r7
   1121c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11220:	add	fp, sp, #24
   11224:	mvn	r4, #0
   11228:	cmp	r0, #0
   1122c:	beq	1130c <test_schema@@Base+0x8e8>
   11230:	ldr	r7, [r0, #-4]
   11234:	mov	r9, r0
   11238:	cmp	r7, #0
   1123c:	beq	1130c <test_schema@@Base+0x8e8>
   11240:	mov	r8, r1
   11244:	mov	r4, #0
   11248:	subs	r5, r7, #1
   1124c:	beq	112c4 <test_schema@@Base+0x8a0>
   11250:	sub	r0, r5, r4
   11254:	add	r6, r4, r0, lsr #1
   11258:	cmp	r7, r6
   1125c:	bls	1132c <test_schema@@Base+0x908>
   11260:	mov	r0, r9
   11264:	ldr	r1, [r0, r6, lsl #2]!
   11268:	adds	r0, r0, r1
   1126c:	beq	1134c <test_schema@@Base+0x928>
   11270:	ldr	r2, [r0]
   11274:	mov	r1, r0
   11278:	ldrh	r2, [r1, -r2]!	; <UNPREDICTABLE>
   1127c:	cmp	r2, #6
   11280:	bcc	11320 <test_schema@@Base+0x8fc>
   11284:	ldrh	r1, [r1, #4]
   11288:	cmp	r1, #0
   1128c:	beq	11320 <test_schema@@Base+0x8fc>
   11290:	ldr	r1, [r0, r1]!
   11294:	add	r0, r0, r1
   11298:	mov	r1, r8
   1129c:	add	r0, r0, #4
   112a0:	bl	10868 <strcmp@plt>
   112a4:	cmp	r0, #0
   112a8:	movge	r5, r6
   112ac:	addlt	r4, r6, #1
   112b0:	cmp	r5, r4
   112b4:	bhi	11250 <test_schema@@Base+0x82c>
   112b8:	bne	11314 <test_schema@@Base+0x8f0>
   112bc:	cmp	r7, r4
   112c0:	bls	1132c <test_schema@@Base+0x908>
   112c4:	ldr	r0, [r9, r4, lsl #2]!
   112c8:	adds	r0, r9, r0
   112cc:	beq	1134c <test_schema@@Base+0x928>
   112d0:	ldr	r2, [r0]
   112d4:	mov	r1, r0
   112d8:	ldrh	r2, [r1, -r2]!	; <UNPREDICTABLE>
   112dc:	cmp	r2, #6
   112e0:	bcc	11320 <test_schema@@Base+0x8fc>
   112e4:	ldrh	r1, [r1, #4]
   112e8:	cmp	r1, #0
   112ec:	beq	11320 <test_schema@@Base+0x8fc>
   112f0:	ldr	r1, [r0, r1]!
   112f4:	add	r0, r0, r1
   112f8:	mov	r1, r8
   112fc:	add	r0, r0, #4
   11300:	bl	10868 <strcmp@plt>
   11304:	cmp	r0, #0
   11308:	mvnne	r4, #0
   1130c:	mov	r0, r4
   11310:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11314:	mvn	r4, #0
   11318:	mov	r0, r4
   1131c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11320:	ldr	r0, [pc, #80]	; 11378 <test_schema@@Base+0x954>
   11324:	add	r0, pc, r0
   11328:	b	11354 <test_schema@@Base+0x930>
   1132c:	ldr	r0, [pc, #72]	; 1137c <test_schema@@Base+0x958>
   11330:	ldr	r1, [pc, #72]	; 11380 <test_schema@@Base+0x95c>
   11334:	ldr	r3, [pc, #72]	; 11384 <test_schema@@Base+0x960>
   11338:	mov	r2, #192	; 0xc0
   1133c:	add	r0, pc, r0
   11340:	add	r1, pc, r1
   11344:	add	r3, pc, r3
   11348:	bl	10928 <__assert_fail@plt>
   1134c:	ldr	r0, [pc, #24]	; 1136c <test_schema@@Base+0x948>
   11350:	add	r0, pc, r0
   11354:	ldr	r1, [pc, #20]	; 11370 <test_schema@@Base+0x94c>
   11358:	ldr	r3, [pc, #20]	; 11374 <test_schema@@Base+0x950>
   1135c:	mov	r2, #195	; 0xc3
   11360:	add	r1, pc, r1
   11364:	add	r3, pc, r3
   11368:	bl	10928 <__assert_fail@plt>
   1136c:	ldrdeq	r0, [r0], -r9
   11370:	andeq	r0, r0, pc, ror #3
   11374:	andeq	r0, r0, pc, ror r4
   11378:	andeq	r0, r0, sp, ror #5
   1137c:	andeq	r0, r0, sp, lsr r3
   11380:	andeq	r0, r0, pc, lsl #4
   11384:	andeq	r0, r0, fp, lsl #8

00011388 <main@@Base>:
   11388:	sub	r2, r0, #1
   1138c:	cmp	r2, #2
   11390:	bcs	113c0 <main@@Base+0x38>
   11394:	cmp	r0, #2
   11398:	bne	113b0 <main@@Base+0x28>
   1139c:	ldr	r0, [r1, #4]
   113a0:	ldr	r1, [pc, #76]	; 113f4 <main@@Base+0x6c>
   113a4:	ldr	r1, [pc, r1]
   113a8:	str	r0, [r1]
   113ac:	b	10a24 <test_schema@@Base>
   113b0:	ldr	r0, [pc, #56]	; 113f0 <main@@Base+0x68>
   113b4:	ldr	r0, [pc, r0]
   113b8:	ldr	r0, [r0]
   113bc:	b	10a24 <test_schema@@Base>
   113c0:	push	{fp, lr}
   113c4:	mov	fp, sp
   113c8:	ldr	r0, [pc, #40]	; 113f8 <main@@Base+0x70>
   113cc:	mov	r1, #64	; 0x40
   113d0:	mov	r2, #1
   113d4:	ldr	r0, [pc, r0]
   113d8:	ldr	r3, [r0]
   113dc:	ldr	r0, [pc, #24]	; 113fc <main@@Base+0x74>
   113e0:	add	r0, pc, r0
   113e4:	bl	108b0 <fwrite@plt>
   113e8:	mov	r0, #1
   113ec:	bl	108ec <exit@plt>
   113f0:	muleq	r1, ip, ip
   113f4:	andeq	r0, r1, ip, lsr #25
   113f8:	andeq	r0, r1, r4, ror ip
   113fc:	andeq	r0, r0, r5, lsl #2

00011400 <__libc_csu_init@@Base>:
   11400:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11404:	mov	r7, r0
   11408:	ldr	r6, [pc, #72]	; 11458 <__libc_csu_init@@Base+0x58>
   1140c:	ldr	r5, [pc, #72]	; 1145c <__libc_csu_init@@Base+0x5c>
   11410:	add	r6, pc, r6
   11414:	add	r5, pc, r5
   11418:	sub	r6, r6, r5
   1141c:	mov	r8, r1
   11420:	mov	r9, r2
   11424:	bl	10848 <strcmp@plt-0x20>
   11428:	asrs	r6, r6, #2
   1142c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11430:	mov	r4, #0
   11434:	add	r4, r4, #1
   11438:	ldr	r3, [r5], #4
   1143c:	mov	r2, r9
   11440:	mov	r1, r8
   11444:	mov	r0, r7
   11448:	blx	r3
   1144c:	cmp	r6, r4
   11450:	bne	11434 <__libc_csu_init@@Base+0x34>
   11454:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11458:	strdeq	r0, [r1], -r4
   1145c:	andeq	r0, r1, ip, ror #21

00011460 <__libc_csu_fini@@Base>:
   11460:	bx	lr

Disassembly of section .fini:

00011464 <.fini>:
   11464:	push	{r3, lr}
   11468:	pop	{r3, pc}
