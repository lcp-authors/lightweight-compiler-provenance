
../repos/eddieantonio-ocreval-3ab279a/editopcost/editopcost:     file format elf32-littlearm


Disassembly of section .init:

000106b8 <.init>:
   106b8:	push	{r3, lr}
   106bc:	bl	108b8 <abort@plt+0xe4>
   106c0:	pop	{r3, pc}

Disassembly of section .plt:

000106c4 <calloc@plt-0x14>:
   106c4:	push	{lr}		; (str lr, [sp, #-4]!)
   106c8:	ldr	lr, [pc, #4]	; 106d4 <calloc@plt-0x4>
   106cc:	add	lr, pc, lr
   106d0:	ldr	pc, [lr, #8]!
   106d4:	andeq	r1, r1, ip, lsr #18

000106d8 <calloc@plt>:
   106d8:	add	ip, pc, #0, 12
   106dc:	add	ip, ip, #69632	; 0x11000
   106e0:	ldr	pc, [ip, #2348]!	; 0x92c

000106e4 <strcmp@plt>:
   106e4:	add	ip, pc, #0, 12
   106e8:	add	ip, ip, #69632	; 0x11000
   106ec:	ldr	pc, [ip, #2340]!	; 0x924

000106f0 <printf@plt>:
   106f0:	add	ip, pc, #0, 12
   106f4:	add	ip, ip, #69632	; 0x11000
   106f8:	ldr	pc, [ip, #2332]!	; 0x91c

000106fc <fopen@plt>:
   106fc:	add	ip, pc, #0, 12
   10700:	add	ip, ip, #69632	; 0x11000
   10704:	ldr	pc, [ip, #2324]!	; 0x914

00010708 <free@plt>:
   10708:	add	ip, pc, #0, 12
   1070c:	add	ip, ip, #69632	; 0x11000
   10710:	ldr	pc, [ip, #2316]!	; 0x90c

00010714 <fgets@plt>:
   10714:	add	ip, pc, #0, 12
   10718:	add	ip, ip, #69632	; 0x11000
   1071c:	ldr	pc, [ip, #2308]!	; 0x904

00010720 <strdup@plt>:
   10720:	add	ip, pc, #0, 12
   10724:	add	ip, ip, #69632	; 0x11000
   10728:	ldr	pc, [ip, #2300]!	; 0x8fc

0001072c <unlink@plt>:
   1072c:	add	ip, pc, #0, 12
   10730:	add	ip, ip, #69632	; 0x11000
   10734:	ldr	pc, [ip, #2292]!	; 0x8f4

00010738 <__xstat@plt>:
   10738:	add	ip, pc, #0, 12
   1073c:	add	ip, ip, #69632	; 0x11000
   10740:	ldr	pc, [ip, #2284]!	; 0x8ec

00010744 <fwrite@plt>:
   10744:	add	ip, pc, #0, 12
   10748:	add	ip, ip, #69632	; 0x11000
   1074c:	ldr	pc, [ip, #2276]!	; 0x8e4

00010750 <__libc_start_main@plt>:
   10750:	add	ip, pc, #0, 12
   10754:	add	ip, ip, #69632	; 0x11000
   10758:	ldr	pc, [ip, #2268]!	; 0x8dc

0001075c <__sysv_signal@plt>:
   1075c:	add	ip, pc, #0, 12
   10760:	add	ip, ip, #69632	; 0x11000
   10764:	ldr	pc, [ip, #2260]!	; 0x8d4

00010768 <__gmon_start__@plt>:
   10768:	add	ip, pc, #0, 12
   1076c:	add	ip, ip, #69632	; 0x11000
   10770:	ldr	pc, [ip, #2252]!	; 0x8cc

00010774 <getpid@plt>:
   10774:	add	ip, pc, #0, 12
   10778:	add	ip, ip, #69632	; 0x11000
   1077c:	ldr	pc, [ip, #2244]!	; 0x8c4

00010780 <exit@plt>:
   10780:	add	ip, pc, #0, 12
   10784:	add	ip, ip, #69632	; 0x11000
   10788:	ldr	pc, [ip, #2236]!	; 0x8bc

0001078c <strlen@plt>:
   1078c:	add	ip, pc, #0, 12
   10790:	add	ip, ip, #69632	; 0x11000
   10794:	ldr	pc, [ip, #2228]!	; 0x8b4

00010798 <fprintf@plt>:
   10798:	add	ip, pc, #0, 12
   1079c:	add	ip, ip, #69632	; 0x11000
   107a0:	ldr	pc, [ip, #2220]!	; 0x8ac

000107a4 <__isoc99_sscanf@plt>:
   107a4:	add	ip, pc, #0, 12
   107a8:	add	ip, ip, #69632	; 0x11000
   107ac:	ldr	pc, [ip, #2212]!	; 0x8a4

000107b0 <fclose@plt>:
   107b0:	add	ip, pc, #0, 12
   107b4:	add	ip, ip, #69632	; 0x11000
   107b8:	ldr	pc, [ip, #2204]!	; 0x89c

000107bc <sprintf@plt>:
   107bc:	add	ip, pc, #0, 12
   107c0:	add	ip, ip, #69632	; 0x11000
   107c4:	ldr	pc, [ip, #2196]!	; 0x894

000107c8 <strncmp@plt>:
   107c8:	add	ip, pc, #0, 12
   107cc:	add	ip, ip, #69632	; 0x11000
   107d0:	ldr	pc, [ip, #2188]!	; 0x88c

000107d4 <abort@plt>:
   107d4:	add	ip, pc, #0, 12
   107d8:	add	ip, ip, #69632	; 0x11000
   107dc:	ldr	pc, [ip, #2180]!	; 0x884

Disassembly of section .text:

000107e0 <error@@Base-0x8e8>:
   107e0:	push	{r4, r5, lr}
   107e4:	sub	sp, sp, #12
   107e8:	add	ip, sp, #8
   107ec:	ldr	r2, [pc, #116]	; 10868 <abort@plt+0x94>
   107f0:	mov	r3, #0
   107f4:	str	r0, [ip, #-4]!
   107f8:	add	r2, pc, r2
   107fc:	mov	r0, ip
   10800:	mov	r5, r1
   10804:	bl	11268 <error@@Base+0x1a0>
   10808:	ldr	r3, [sp, #4]
   1080c:	ldr	r4, [pc, #88]	; 1086c <abort@plt+0x98>
   10810:	sub	r3, r3, #1
   10814:	cmp	r3, #1
   10818:	add	r4, pc, r4
   1081c:	bls	1082c <abort@plt+0x58>
   10820:	ldr	r0, [pc, #72]	; 10870 <abort@plt+0x9c>
   10824:	add	r0, pc, r0
   10828:	bl	110c8 <error@@Base>
   1082c:	ldr	r3, [pc, #64]	; 10874 <abort@plt+0xa0>
   10830:	ldr	r1, [r5]
   10834:	ldr	r0, [r4, r3]
   10838:	bl	10af0 <abort@plt+0x31c>
   1083c:	ldr	r3, [sp, #4]
   10840:	cmp	r3, #2
   10844:	beq	10850 <abort@plt+0x7c>
   10848:	bl	10a20 <abort@plt+0x24c>
   1084c:	bl	11054 <abort@plt+0x880>
   10850:	ldr	r3, [pc, #32]	; 10878 <abort@plt+0xa4>
   10854:	ldr	r1, [r5, #4]
   10858:	ldr	r0, [r4, r3]
   1085c:	bl	10af0 <abort@plt+0x31c>
   10860:	bl	109a4 <abort@plt+0x1d0>
   10864:	b	10848 <abort@plt+0x74>
   10868:	andeq	r0, r0, r0, ror sp
   1086c:	andeq	r1, r1, r0, ror #15
   10870:	andeq	r0, r0, ip, ror #26
   10874:	andeq	r0, r0, r4, lsl #1
   10878:	andeq	r0, r0, r4, rrx
   1087c:	mov	fp, #0
   10880:	mov	lr, #0
   10884:	pop	{r1}		; (ldr r1, [sp], #4)
   10888:	mov	r2, sp
   1088c:	push	{r2}		; (str r2, [sp, #-4]!)
   10890:	push	{r0}		; (str r0, [sp, #-4]!)
   10894:	ldr	ip, [pc, #16]	; 108ac <abort@plt+0xd8>
   10898:	push	{ip}		; (str ip, [sp, #-4]!)
   1089c:	ldr	r0, [pc, #12]	; 108b0 <abort@plt+0xdc>
   108a0:	ldr	r3, [pc, #12]	; 108b4 <abort@plt+0xe0>
   108a4:	bl	10750 <__libc_start_main@plt>
   108a8:	bl	107d4 <abort@plt>
   108ac:	andeq	r1, r1, r4, asr r5
   108b0:	andeq	r0, r1, r0, ror #15
   108b4:	strdeq	r1, [r1], -r4
   108b8:	ldr	r3, [pc, #20]	; 108d4 <abort@plt+0x100>
   108bc:	ldr	r2, [pc, #20]	; 108d8 <abort@plt+0x104>
   108c0:	add	r3, pc, r3
   108c4:	ldr	r2, [r3, r2]
   108c8:	cmp	r2, #0
   108cc:	bxeq	lr
   108d0:	b	10768 <__gmon_start__@plt>
   108d4:	andeq	r1, r1, r8, lsr r7
   108d8:	andeq	r0, r0, r4, ror r0
   108dc:	ldr	r3, [pc, #28]	; 10900 <abort@plt+0x12c>
   108e0:	ldr	r0, [pc, #28]	; 10904 <abort@plt+0x130>
   108e4:	sub	r3, r3, r0
   108e8:	cmp	r3, #6
   108ec:	bxls	lr
   108f0:	ldr	r3, [pc, #16]	; 10908 <abort@plt+0x134>
   108f4:	cmp	r3, #0
   108f8:	bxeq	lr
   108fc:	bx	r3
   10900:	andeq	r2, r2, r3, lsr #1
   10904:	andeq	r2, r2, r0, lsr #1
   10908:	andeq	r0, r0, r0
   1090c:	ldr	r1, [pc, #36]	; 10938 <abort@plt+0x164>
   10910:	ldr	r0, [pc, #36]	; 1093c <abort@plt+0x168>
   10914:	sub	r1, r1, r0
   10918:	asr	r1, r1, #2
   1091c:	add	r1, r1, r1, lsr #31
   10920:	asrs	r1, r1, #1
   10924:	bxeq	lr
   10928:	ldr	r3, [pc, #16]	; 10940 <abort@plt+0x16c>
   1092c:	cmp	r3, #0
   10930:	bxeq	lr
   10934:	bx	r3
   10938:	andeq	r2, r2, r0, lsr #1
   1093c:	andeq	r2, r2, r0, lsr #1
   10940:	andeq	r0, r0, r0
   10944:	push	{r4, lr}
   10948:	ldr	r4, [pc, #24]	; 10968 <abort@plt+0x194>
   1094c:	ldrb	r3, [r4]
   10950:	cmp	r3, #0
   10954:	popne	{r4, pc}
   10958:	bl	108dc <abort@plt+0x108>
   1095c:	mov	r3, #1
   10960:	strb	r3, [r4]
   10964:	pop	{r4, pc}
   10968:	andeq	r2, r2, r0, lsr #1
   1096c:	ldr	r0, [pc, #40]	; 1099c <abort@plt+0x1c8>
   10970:	ldr	r3, [r0]
   10974:	cmp	r3, #0
   10978:	bne	10980 <abort@plt+0x1ac>
   1097c:	b	1090c <abort@plt+0x138>
   10980:	ldr	r3, [pc, #24]	; 109a0 <abort@plt+0x1cc>
   10984:	cmp	r3, #0
   10988:	beq	1097c <abort@plt+0x1a8>
   1098c:	push	{r4, lr}
   10990:	blx	r3
   10994:	pop	{r4, lr}
   10998:	b	1090c <abort@plt+0x138>
   1099c:	andeq	r1, r2, r4, lsl #30
   109a0:	andeq	r0, r0, r0
   109a4:	ldr	r3, [pc, #104]	; 10a14 <abort@plt+0x240>
   109a8:	ldr	r2, [pc, #104]	; 10a18 <abort@plt+0x244>
   109ac:	ldr	r1, [pc, #104]	; 10a1c <abort@plt+0x248>
   109b0:	add	r3, pc, r3
   109b4:	push	{r4, r5, lr}
   109b8:	ldr	r2, [r3, r2]
   109bc:	ldr	r1, [r3, r1]
   109c0:	add	r3, r2, #12
   109c4:	ldr	r4, [r2]
   109c8:	ldr	r5, [r1]
   109cc:	ldr	ip, [r1, #4]
   109d0:	ldr	lr, [r2, #4]
   109d4:	ldr	r0, [r2, #8]
   109d8:	sub	r4, r4, r5
   109dc:	ldr	r5, [r1, #8]
   109e0:	sub	lr, lr, ip
   109e4:	add	r1, r1, #12
   109e8:	add	ip, r2, #412	; 0x19c
   109ec:	sub	r0, r0, r5
   109f0:	stm	r2, {r4, lr}
   109f4:	str	r0, [r2, #8]
   109f8:	ldr	r2, [r3, #4]
   109fc:	ldr	r0, [r1, #4]!
   10a00:	sub	r2, r2, r0
   10a04:	str	r2, [r3, #4]!
   10a08:	cmp	r3, ip
   10a0c:	bne	109f8 <abort@plt+0x224>
   10a10:	pop	{r4, r5, pc}
   10a14:	andeq	r1, r1, r8, asr #12
   10a18:	andeq	r0, r0, r4, lsl #1
   10a1c:	andeq	r0, r0, r4, rrx
   10a20:	ldr	r3, [pc, #80]	; 10a78 <abort@plt+0x2a4>
   10a24:	ldr	r2, [pc, #80]	; 10a7c <abort@plt+0x2a8>
   10a28:	add	r3, pc, r3
   10a2c:	push	{r4, r5, r6, r7, r8, lr}
   10a30:	mov	r4, #0
   10a34:	ldr	r2, [r3, r2]
   10a38:	ldr	r8, [pc, #64]	; 10a80 <abort@plt+0x2ac>
   10a3c:	mov	r7, r2
   10a40:	ldr	r6, [r2]
   10a44:	ldr	r5, [r7, #8]!
   10a48:	add	r8, pc, r8
   10a4c:	mla	r2, r4, r5, r6
   10a50:	mov	r1, r4
   10a54:	mov	r0, r8
   10a58:	bl	106f0 <printf@plt>
   10a5c:	ldr	r3, [r7, #4]!
   10a60:	sub	r5, r5, r3
   10a64:	mla	r6, r4, r3, r6
   10a68:	add	r4, r4, #1
   10a6c:	cmp	r4, #101	; 0x65
   10a70:	bne	10a4c <abort@plt+0x278>
   10a74:	pop	{r4, r5, r6, r7, r8, pc}
   10a78:	ldrdeq	r1, [r1], -r0
   10a7c:	andeq	r0, r0, r4, lsl #1
   10a80:	andeq	r0, r0, r4, lsl fp
   10a84:	push	{r4, r5, r6, lr}
   10a88:	mov	r6, r2
   10a8c:	ldr	r4, [pc, #84]	; 10ae8 <abort@plt+0x314>
   10a90:	mov	r2, r0
   10a94:	add	r4, pc, r4
   10a98:	mov	r5, r1
   10a9c:	mov	r0, r4
   10aa0:	mov	r1, #99	; 0x63
   10aa4:	bl	10714 <fgets@plt>
   10aa8:	cmp	r0, #0
   10aac:	beq	10acc <abort@plt+0x2f8>
   10ab0:	ldr	r1, [pc, #52]	; 10aec <abort@plt+0x318>
   10ab4:	mov	r0, r4
   10ab8:	mov	r2, r5
   10abc:	add	r1, pc, r1
   10ac0:	bl	107a4 <__isoc99_sscanf@plt>
   10ac4:	cmp	r0, #1
   10ac8:	beq	10ad4 <abort@plt+0x300>
   10acc:	mov	r0, #0
   10ad0:	pop	{r4, r5, r6, pc}
   10ad4:	ldr	r2, [r5]
   10ad8:	ldr	r3, [r6]
   10adc:	add	r3, r3, r2
   10ae0:	str	r3, [r6]
   10ae4:	pop	{r4, r5, r6, pc}
   10ae8:	andeq	r1, r1, r8, lsl #12
   10aec:	andeq	r0, r0, ip, asr fp
   10af0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10af4:	mov	r8, r1
   10af8:	ldr	r1, [pc, #444]	; 10cbc <abort@plt+0x4e8>
   10afc:	sub	sp, sp, #16
   10b00:	add	r1, pc, r1
   10b04:	mov	r6, r0
   10b08:	mov	r0, r8
   10b0c:	bl	111d8 <error@@Base+0x110>
   10b10:	ldr	r5, [pc, #424]	; 10cc0 <abort@plt+0x4ec>
   10b14:	mov	r1, #99	; 0x63
   10b18:	add	r5, pc, r5
   10b1c:	mov	r2, r0
   10b20:	mov	r4, r0
   10b24:	mov	r0, r5
   10b28:	bl	10714 <fgets@plt>
   10b2c:	cmp	r0, #0
   10b30:	beq	10c98 <abort@plt+0x4c4>
   10b34:	ldr	r1, [pc, #392]	; 10cc4 <abort@plt+0x4f0>
   10b38:	mov	r2, #42	; 0x2a
   10b3c:	add	r1, pc, r1
   10b40:	mov	r0, r5
   10b44:	bl	107c8 <strncmp@plt>
   10b48:	cmp	r0, #0
   10b4c:	bne	10c98 <abort@plt+0x4c4>
   10b50:	mov	r2, r4
   10b54:	mov	r1, #99	; 0x63
   10b58:	mov	r0, r5
   10b5c:	bl	10714 <fgets@plt>
   10b60:	cmp	r0, #0
   10b64:	beq	10c98 <abort@plt+0x4c4>
   10b68:	ldr	r1, [pc, #344]	; 10cc8 <abort@plt+0x4f4>
   10b6c:	mov	r0, r5
   10b70:	add	r1, pc, r1
   10b74:	bl	106e4 <strcmp@plt>
   10b78:	cmp	r0, #0
   10b7c:	bne	10c98 <abort@plt+0x4c4>
   10b80:	add	r7, sp, #8
   10b84:	mov	r1, r7
   10b88:	mov	r2, r6
   10b8c:	mov	r0, r4
   10b90:	bl	10a84 <abort@plt+0x2b0>
   10b94:	cmp	r0, #0
   10b98:	beq	10c98 <abort@plt+0x4c4>
   10b9c:	add	r2, r6, #4
   10ba0:	mov	r1, r7
   10ba4:	mov	r0, r4
   10ba8:	bl	10a84 <abort@plt+0x2b0>
   10bac:	cmp	r0, #0
   10bb0:	beq	10c98 <abort@plt+0x4c4>
   10bb4:	add	r2, r6, #8
   10bb8:	add	r1, sp, #4
   10bbc:	mov	r0, r4
   10bc0:	bl	10a84 <abort@plt+0x2b0>
   10bc4:	cmp	r0, #0
   10bc8:	beq	10c98 <abort@plt+0x4c4>
   10bcc:	ldr	r3, [sp, #4]
   10bd0:	cmp	r3, #0
   10bd4:	ble	10c6c <abort@plt+0x498>
   10bd8:	mov	r2, r4
   10bdc:	mov	r1, #99	; 0x63
   10be0:	mov	r0, r5
   10be4:	bl	10714 <fgets@plt>
   10be8:	cmp	r0, #0
   10bec:	beq	10c6c <abort@plt+0x498>
   10bf0:	mov	r0, r5
   10bf4:	mov	r2, r4
   10bf8:	mov	r1, #99	; 0x63
   10bfc:	bl	10714 <fgets@plt>
   10c00:	cmp	r0, #0
   10c04:	beq	10c6c <abort@plt+0x498>
   10c08:	ldr	r5, [pc, #188]	; 10ccc <abort@plt+0x4f8>
   10c0c:	mov	r2, r4
   10c10:	add	r5, pc, r5
   10c14:	mov	r0, r5
   10c18:	mov	r1, #99	; 0x63
   10c1c:	bl	10714 <fgets@plt>
   10c20:	cmp	r0, #0
   10c24:	beq	10c6c <abort@plt+0x498>
   10c28:	ldr	sl, [pc, #160]	; 10cd0 <abort@plt+0x4fc>
   10c2c:	mov	r8, #99	; 0x63
   10c30:	add	sl, pc, sl
   10c34:	add	r9, sp, #12
   10c38:	mov	r2, r4
   10c3c:	mov	r1, r8
   10c40:	mov	r0, r5
   10c44:	bl	10714 <fgets@plt>
   10c48:	cmp	r0, #0
   10c4c:	beq	10c6c <abort@plt+0x498>
   10c50:	mov	r3, r9
   10c54:	mov	r2, r7
   10c58:	mov	r1, sl
   10c5c:	mov	r0, r5
   10c60:	bl	107a4 <__isoc99_sscanf@plt>
   10c64:	cmp	r0, #2
   10c68:	beq	10c7c <abort@plt+0x4a8>
   10c6c:	mov	r0, r4
   10c70:	bl	10f6c <abort@plt+0x798>
   10c74:	add	sp, sp, #16
   10c78:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10c7c:	ldr	r3, [sp, #12]
   10c80:	ldr	r1, [sp, #8]
   10c84:	add	r3, r6, r3, lsl #2
   10c88:	ldr	r2, [r3, #12]
   10c8c:	add	r2, r2, r1
   10c90:	str	r2, [r3, #12]
   10c94:	b	10c38 <abort@plt+0x464>
   10c98:	cmp	r8, #0
   10c9c:	beq	10cb0 <abort@plt+0x4dc>
   10ca0:	ldr	r0, [pc, #44]	; 10cd4 <abort@plt+0x500>
   10ca4:	mov	r1, r8
   10ca8:	add	r0, pc, r0
   10cac:	bl	11178 <error@@Base+0xb0>
   10cb0:	ldr	r8, [pc, #32]	; 10cd8 <abort@plt+0x504>
   10cb4:	add	r8, pc, r8
   10cb8:	b	10ca0 <abort@plt+0x4cc>
   10cbc:			; <UNDEFINED> instruction: 0x00000ab0
   10cc0:	andeq	r1, r1, r4, lsl #11
   10cc4:	andeq	r0, r0, r8, ror sl
   10cc8:	andeq	r0, r0, r4, ror sl
   10ccc:	andeq	r1, r1, ip, lsl #9
   10cd0:	andeq	r0, r0, r4, ror #19
   10cd4:	andeq	r0, r0, r4, ror r9
   10cd8:	strdeq	r0, [r0], -r4
   10cdc:	mov	r3, r1
   10ce0:	ldr	r1, [pc, #232]	; 10dd0 <abort@plt+0x5fc>
   10ce4:	push	{r4, r5, r6, r7, r8, lr}
   10ce8:	add	r1, pc, r1
   10cec:	mov	r5, r0
   10cf0:	mov	r0, r3
   10cf4:	bl	111d8 <error@@Base+0x110>
   10cf8:	ldr	r3, [pc, #212]	; 10dd4 <abort@plt+0x600>
   10cfc:	ldr	r2, [pc, #212]	; 10dd8 <abort@plt+0x604>
   10d00:	ldr	r1, [pc, #212]	; 10ddc <abort@plt+0x608>
   10d04:	add	r3, pc, r3
   10d08:	add	r2, pc, r2
   10d0c:	add	r1, pc, r1
   10d10:	ldr	r4, [pc, #200]	; 10de0 <abort@plt+0x60c>
   10d14:	add	r4, pc, r4
   10d18:	mov	r6, r0
   10d1c:	bl	10798 <fprintf@plt>
   10d20:	ldr	r3, [pc, #188]	; 10de4 <abort@plt+0x610>
   10d24:	ldr	r2, [r5]
   10d28:	mov	r1, r4
   10d2c:	add	r3, pc, r3
   10d30:	mov	r0, r6
   10d34:	bl	10798 <fprintf@plt>
   10d38:	ldr	r3, [pc, #168]	; 10de8 <abort@plt+0x614>
   10d3c:	ldr	r2, [r5, #4]
   10d40:	mov	r1, r4
   10d44:	add	r3, pc, r3
   10d48:	mov	r0, r6
   10d4c:	bl	10798 <fprintf@plt>
   10d50:	ldr	r3, [pc, #148]	; 10dec <abort@plt+0x618>
   10d54:	mov	r1, r4
   10d58:	add	r3, pc, r3
   10d5c:	ldr	r2, [r5, #8]
   10d60:	mov	r0, r6
   10d64:	bl	10798 <fprintf@plt>
   10d68:	ldr	r3, [r5, #8]
   10d6c:	cmp	r3, #0
   10d70:	ble	10dc4 <abort@plt+0x5f0>
   10d74:	ldr	r0, [pc, #116]	; 10df0 <abort@plt+0x61c>
   10d78:	mov	r3, r6
   10d7c:	mov	r2, #25
   10d80:	mov	r1, #1
   10d84:	add	r0, pc, r0
   10d88:	bl	10744 <fwrite@plt>
   10d8c:	ldr	r7, [pc, #96]	; 10df4 <abort@plt+0x620>
   10d90:	add	r5, r5, #12
   10d94:	add	r7, pc, r7
   10d98:	mov	r4, #1
   10d9c:	ldr	ip, [r5, #4]!
   10da0:	mov	r3, r4
   10da4:	subs	r2, ip, #0
   10da8:	mov	r1, r7
   10dac:	mov	r0, r6
   10db0:	add	r4, r4, #1
   10db4:	ble	10dbc <abort@plt+0x5e8>
   10db8:	bl	10798 <fprintf@plt>
   10dbc:	cmp	r4, #101	; 0x65
   10dc0:	bne	10d9c <abort@plt+0x5c8>
   10dc4:	mov	r0, r6
   10dc8:	pop	{r4, r5, r6, r7, r8, lr}
   10dcc:	b	10f6c <abort@plt+0x798>
   10dd0:	andeq	r0, r0, r8, asr #18
   10dd4:	andeq	r0, r0, r0, ror #17
   10dd8:	andeq	r0, r0, ip, lsr #17
   10ddc:	andeq	r0, r0, r8, lsr #18
   10de0:	andeq	r0, r0, r4, lsr r9
   10de4:	andeq	r0, r0, r0, lsl r9
   10de8:	andeq	r0, r0, r0, lsl r9
   10dec:	andeq	r0, r0, r8, lsl #18
   10df0:	andeq	r0, r0, r4, ror #17
   10df4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10df8:	ldr	r3, [pc, #76]	; 10e4c <abort@plt+0x678>
   10dfc:	ldr	r2, [pc, #76]	; 10e50 <abort@plt+0x67c>
   10e00:	add	r3, pc, r3
   10e04:	push	{r4, r5, lr}
   10e08:	sub	sp, sp, #116	; 0x74
   10e0c:	ldr	r3, [r3, r2]
   10e10:	mov	r5, r0
   10e14:	ldr	r4, [r3]
   10e18:	bl	10774 <getpid@plt>
   10e1c:	ldr	r1, [pc, #48]	; 10e54 <abort@plt+0x680>
   10e20:	mov	r2, r4
   10e24:	add	r4, sp, #12
   10e28:	add	r1, pc, r1
   10e2c:	str	r5, [sp]
   10e30:	mov	r3, r0
   10e34:	mov	r0, r4
   10e38:	bl	107bc <sprintf@plt>
   10e3c:	mov	r0, r4
   10e40:	bl	10720 <strdup@plt>
   10e44:	add	sp, sp, #116	; 0x74
   10e48:	pop	{r4, r5, pc}
   10e4c:	strdeq	r1, [r1], -r8
   10e50:	andeq	r0, r0, r8, ror r0
   10e54:	andeq	r0, r0, r8, ror #16
   10e58:	ldr	r3, [pc, #108]	; 10ecc <abort@plt+0x6f8>
   10e5c:	ldr	r2, [pc, #108]	; 10ed0 <abort@plt+0x6fc>
   10e60:	add	r3, pc, r3
   10e64:	push	{r7, lr}
   10e68:	mov	r7, r0
   10e6c:	ldr	r3, [r3, r2]
   10e70:	ldr	r3, [r3]
   10e74:	cmp	r3, #0
   10e78:	beq	10e80 <abort@plt+0x6ac>
   10e7c:	blx	r3
   10e80:	ldr	r6, [pc, #76]	; 10ed4 <abort@plt+0x700>
   10e84:	add	r6, pc, r6
   10e88:	ldrsh	r3, [r6]
   10e8c:	cmp	r3, #0
   10e90:	movgt	r4, #1
   10e94:	ble	10ec4 <abort@plt+0x6f0>
   10e98:	mov	r0, r4
   10e9c:	bl	10df8 <abort@plt+0x624>
   10ea0:	add	r4, r4, #1
   10ea4:	sxth	r4, r4
   10ea8:	mov	r5, r0
   10eac:	bl	1072c <unlink@plt>
   10eb0:	mov	r0, r5
   10eb4:	bl	10708 <free@plt>
   10eb8:	ldrsh	r3, [r6]
   10ebc:	cmp	r3, r4
   10ec0:	bge	10e98 <abort@plt+0x6c4>
   10ec4:	mov	r0, r7
   10ec8:	bl	10780 <exit@plt>
   10ecc:	muleq	r1, r8, r1
   10ed0:	andeq	r0, r0, ip, ror r0
   10ed4:	andeq	r1, r1, ip, ror r2
   10ed8:	ldrb	r3, [r0]
   10edc:	cmp	r3, #0
   10ee0:	beq	10f44 <abort@plt+0x770>
   10ee4:	ldrb	ip, [r1]
   10ee8:	cmp	ip, r3
   10eec:	bne	10f54 <abort@plt+0x780>
   10ef0:	push	{lr}		; (str lr, [sp, #-4]!)
   10ef4:	mov	r2, #0
   10ef8:	mov	lr, r1
   10efc:	b	10f0c <abort@plt+0x738>
   10f00:	ldrb	ip, [lr, #1]!
   10f04:	cmp	r3, ip
   10f08:	bne	10f2c <abort@plt+0x758>
   10f0c:	ldrb	r3, [r0, #1]!
   10f10:	add	r2, r2, #1
   10f14:	cmp	r3, #0
   10f18:	bne	10f00 <abort@plt+0x72c>
   10f1c:	ldrb	ip, [r1, r2]
   10f20:	cmp	ip, #0
   10f24:	movne	r3, #0
   10f28:	beq	10f3c <abort@plt+0x768>
   10f2c:	cmp	r3, ip
   10f30:	movcs	r0, #1
   10f34:	mvncc	r0, #0
   10f38:	pop	{pc}		; (ldr pc, [sp], #4)
   10f3c:	mov	r0, ip
   10f40:	pop	{pc}		; (ldr pc, [sp], #4)
   10f44:	ldrb	ip, [r1, r3]
   10f48:	cmp	ip, #0
   10f4c:	movne	r3, #0
   10f50:	beq	10f64 <abort@plt+0x790>
   10f54:	cmp	r3, ip
   10f58:	movcs	r0, #1
   10f5c:	mvncc	r0, #0
   10f60:	bx	lr
   10f64:	mov	r0, ip
   10f68:	bx	lr
   10f6c:	ldr	r2, [pc, #44]	; 10fa0 <abort@plt+0x7cc>
   10f70:	ldr	r3, [pc, #44]	; 10fa4 <abort@plt+0x7d0>
   10f74:	add	r2, pc, r2
   10f78:	ldr	r3, [r2, r3]
   10f7c:	ldr	r3, [r3]
   10f80:	cmp	r3, r0
   10f84:	bxeq	lr
   10f88:	ldr	r3, [pc, #24]	; 10fa8 <abort@plt+0x7d4>
   10f8c:	ldr	r3, [r2, r3]
   10f90:	ldr	r3, [r3]
   10f94:	cmp	r0, r3
   10f98:	bxeq	lr
   10f9c:	b	107b0 <fclose@plt>
   10fa0:	andeq	r1, r1, r4, lsl #1
   10fa4:	andeq	r0, r0, r0, lsl #1
   10fa8:	andeq	r0, r0, r8, lsl #1
   10fac:	push	{lr}		; (str lr, [sp, #-4]!)
   10fb0:	sub	sp, sp, #92	; 0x5c
   10fb4:	mov	r1, r0
   10fb8:	mov	r2, sp
   10fbc:	mov	r0, #3
   10fc0:	bl	10738 <__xstat@plt>
   10fc4:	clz	r0, r0
   10fc8:	lsr	r0, r0, #5
   10fcc:	add	sp, sp, #92	; 0x5c
   10fd0:	pop	{pc}		; (ldr pc, [sp], #4)
   10fd4:	ldr	r2, [pc, #44]	; 11008 <abort@plt+0x834>
   10fd8:	push	{r4, lr}
   10fdc:	add	r2, pc, r2
   10fe0:	ldrh	r3, [r2]
   10fe4:	add	r3, r3, #1
   10fe8:	sxth	r3, r3
   10fec:	mov	r0, r3
   10ff0:	strh	r3, [r2]
   10ff4:	bl	10df8 <abort@plt+0x624>
   10ff8:	mov	r4, r0
   10ffc:	bl	1072c <unlink@plt>
   11000:	mov	r0, r4
   11004:	pop	{r4, pc}
   11008:	andeq	r1, r1, r4, lsr #2
   1100c:	push	{r4, lr}
   11010:	mov	r4, r0
   11014:	bl	1078c <strlen@plt>
   11018:	sub	r0, r0, #1
   1101c:	sxth	r0, r0
   11020:	cmp	r0, #0
   11024:	bge	1103c <abort@plt+0x868>
   11028:	b	11048 <abort@plt+0x874>
   1102c:	sub	r0, r0, #1
   11030:	sxth	r0, r0
   11034:	cmn	r0, #1
   11038:	beq	11048 <abort@plt+0x874>
   1103c:	ldrb	r3, [r4, r0]
   11040:	cmp	r3, #47	; 0x2f
   11044:	bne	1102c <abort@plt+0x858>
   11048:	add	r0, r0, #1
   1104c:	add	r0, r4, r0
   11050:	pop	{r4, pc}
   11054:	push	{r4, lr}
   11058:	mov	r0, #0
   1105c:	bl	10e58 <abort@plt+0x684>
   11060:	ldr	r1, [pc, #76]	; 110b4 <abort@plt+0x8e0>
   11064:	ldr	r2, [pc, #76]	; 110b8 <abort@plt+0x8e4>
   11068:	add	r1, pc, r1
   1106c:	push	{r4, lr}
   11070:	ldr	r2, [r1, r2]
   11074:	ldr	r2, [r2]
   11078:	cmp	r2, #0
   1107c:	beq	11088 <abort@plt+0x8b4>
   11080:	blx	r2
   11084:	bl	11054 <abort@plt+0x880>
   11088:	ldr	r2, [pc, #44]	; 110bc <abort@plt+0x8e8>
   1108c:	ldr	ip, [pc, #44]	; 110c0 <abort@plt+0x8ec>
   11090:	mov	r3, r0
   11094:	ldr	r0, [r1, r2]
   11098:	ldr	ip, [r1, ip]
   1109c:	ldr	r1, [pc, #32]	; 110c4 <abort@plt+0x8f0>
   110a0:	ldr	r0, [r0]
   110a4:	add	r1, pc, r1
   110a8:	ldr	r2, [ip]
   110ac:	bl	10798 <fprintf@plt>
   110b0:	b	11084 <abort@plt+0x8b0>
   110b4:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   110b8:	andeq	r0, r0, ip, rrx
   110bc:	andeq	r0, r0, r0, ror r0
   110c0:	andeq	r0, r0, r8, ror r0
   110c4:	strdeq	r0, [r0], -ip

000110c8 <error@@Base>:
   110c8:	push	{r4, lr}
   110cc:	mov	r3, r0
   110d0:	ldr	r4, [pc, #52]	; 1110c <error@@Base+0x44>
   110d4:	ldr	r1, [pc, #52]	; 11110 <error@@Base+0x48>
   110d8:	ldr	r2, [pc, #52]	; 11114 <error@@Base+0x4c>
   110dc:	add	r4, pc, r4
   110e0:	ldr	ip, [r4, r1]
   110e4:	ldr	r0, [r4, r2]
   110e8:	ldr	r1, [pc, #40]	; 11118 <error@@Base+0x50>
   110ec:	ldr	r2, [ip]
   110f0:	add	r1, pc, r1
   110f4:	ldr	r0, [r0]
   110f8:	bl	10798 <fprintf@plt>
   110fc:	ldr	r3, [pc, #24]	; 1111c <error@@Base+0x54>
   11100:	ldr	r3, [r4, r3]
   11104:	ldr	r0, [r3]
   11108:	bl	10e58 <abort@plt+0x684>
   1110c:	andeq	r0, r1, ip, lsl pc
   11110:	andeq	r0, r0, r8, ror r0
   11114:	andeq	r0, r0, r0, ror r0
   11118:	andeq	r0, r0, r0, asr #11
   1111c:	andeq	r0, r0, ip, lsl #1
   11120:	push	{r4, lr}
   11124:	bl	106d8 <calloc@plt>
   11128:	cmp	r0, #0
   1112c:	popne	{r4, pc}
   11130:	ldr	r0, [pc, #4]	; 1113c <error@@Base+0x74>
   11134:	add	r0, pc, r0
   11138:	bl	110c8 <error@@Base>
   1113c:	andeq	r0, r0, r4, lsl #11
   11140:	ldr	r3, [pc, #40]	; 11170 <error@@Base+0xa8>
   11144:	add	r3, pc, r3
   11148:	ldrb	r2, [r3, #2]
   1114c:	cmp	r2, #0
   11150:	beq	11158 <error@@Base+0x90>
   11154:	bx	lr
   11158:	ldr	r0, [pc, #20]	; 11174 <error@@Base+0xac>
   1115c:	push	{r4, lr}
   11160:	mov	r2, #1
   11164:	add	r0, pc, r0
   11168:	strb	r2, [r3, #2]
   1116c:	bl	110c8 <error@@Base>
   11170:			; <UNDEFINED> instruction: 0x00010fbc
   11174:	andeq	r0, r0, r0, ror r5
   11178:	ldr	r4, [pc, #68]	; 111c4 <error@@Base+0xfc>
   1117c:	ldr	r2, [pc, #68]	; 111c8 <error@@Base+0x100>
   11180:	ldr	ip, [pc, #68]	; 111cc <error@@Base+0x104>
   11184:	add	r4, pc, r4
   11188:	push	{lr}		; (str lr, [sp, #-4]!)
   1118c:	sub	sp, sp, #12
   11190:	mov	r3, r0
   11194:	ldr	ip, [r4, ip]
   11198:	ldr	r0, [r4, r2]
   1119c:	str	r1, [sp]
   111a0:	ldr	r1, [pc, #40]	; 111d0 <error@@Base+0x108>
   111a4:	ldr	r2, [ip]
   111a8:	ldr	r0, [r0]
   111ac:	add	r1, pc, r1
   111b0:	bl	10798 <fprintf@plt>
   111b4:	ldr	r3, [pc, #24]	; 111d4 <error@@Base+0x10c>
   111b8:	ldr	r3, [r4, r3]
   111bc:	ldr	r0, [r3]
   111c0:	bl	10e58 <abort@plt+0x684>
   111c4:	andeq	r0, r1, r4, ror lr
   111c8:	andeq	r0, r0, r0, ror r0
   111cc:	andeq	r0, r0, r8, ror r0
   111d0:	andeq	r0, r0, r8, lsr r5
   111d4:	andeq	r0, r0, ip, lsl #1
   111d8:	ldr	ip, [pc, #116]	; 11254 <error@@Base+0x18c>
   111dc:	subs	r2, r0, #0
   111e0:	push	{r4, r5, r6, lr}
   111e4:	add	ip, pc, ip
   111e8:	mov	r4, r1
   111ec:	beq	1121c <error@@Base+0x154>
   111f0:	mov	r5, r2
   111f4:	bl	106fc <fopen@plt>
   111f8:	cmp	r0, #0
   111fc:	popne	{r4, r5, r6, pc}
   11200:	ldrb	r3, [r4]
   11204:	mov	r1, r5
   11208:	cmp	r3, #119	; 0x77
   1120c:	beq	11248 <error@@Base+0x180>
   11210:	ldr	r0, [pc, #64]	; 11258 <error@@Base+0x190>
   11214:	add	r0, pc, r0
   11218:	bl	11178 <error@@Base+0xb0>
   1121c:	ldrb	r3, [r1]
   11220:	cmp	r3, #114	; 0x72
   11224:	beq	11238 <error@@Base+0x170>
   11228:	ldr	r3, [pc, #44]	; 1125c <error@@Base+0x194>
   1122c:	ldr	r3, [ip, r3]
   11230:	ldr	r0, [r3]
   11234:	pop	{r4, r5, r6, pc}
   11238:	ldr	r3, [pc, #32]	; 11260 <error@@Base+0x198>
   1123c:	ldr	r3, [ip, r3]
   11240:	ldr	r0, [r3]
   11244:	pop	{r4, r5, r6, pc}
   11248:	ldr	r0, [pc, #20]	; 11264 <error@@Base+0x19c>
   1124c:	add	r0, pc, r0
   11250:	bl	11178 <error@@Base+0xb0>
   11254:	andeq	r0, r1, r4, lsl lr
   11258:	strdeq	r0, [r0], -r8
   1125c:	andeq	r0, r0, r8, lsl #1
   11260:	andeq	r0, r0, r0, lsl #1
   11264:	andeq	r0, r0, r8, lsr #9
   11268:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1126c:	sub	sp, sp, #20
   11270:	mov	r7, r0
   11274:	str	r0, [sp, #8]
   11278:	ldr	r0, [r1]
   1127c:	str	r2, [sp, #12]
   11280:	mov	r9, r1
   11284:	mov	r6, r3
   11288:	bl	1100c <abort@plt+0x838>
   1128c:	ldr	r5, [pc, #496]	; 11484 <error@@Base+0x3bc>
   11290:	ldr	r3, [pc, #496]	; 11488 <error@@Base+0x3c0>
   11294:	add	r5, pc, r5
   11298:	ldr	r4, [pc, #492]	; 1148c <error@@Base+0x3c4>
   1129c:	ldr	r3, [r5, r3]
   112a0:	add	r4, pc, r4
   112a4:	mov	r1, r4
   112a8:	str	r0, [r3]
   112ac:	mov	r0, #2
   112b0:	bl	1075c <__sysv_signal@plt>
   112b4:	mov	r1, r4
   112b8:	mov	r0, #15
   112bc:	bl	1075c <__sysv_signal@plt>
   112c0:	ldr	fp, [r7]
   112c4:	cmp	fp, #1
   112c8:	beq	11410 <error@@Base+0x348>
   112cc:	mov	r7, #0
   112d0:	ble	11424 <error@@Base+0x35c>
   112d4:	ldr	r3, [pc, #436]	; 11490 <error@@Base+0x3c8>
   112d8:	mov	sl, #1
   112dc:	add	r3, pc, r3
   112e0:	str	r3, [sp, #4]
   112e4:	mov	r4, sl
   112e8:	mov	r3, fp
   112ec:	b	11310 <error@@Base+0x248>
   112f0:	add	r2, r7, #1
   112f4:	str	r5, [r9, r7, lsl #2]
   112f8:	sxth	r7, r2
   112fc:	add	r4, r4, #1
   11300:	sxth	r4, r4
   11304:	cmp	r4, r3
   11308:	mov	sl, r4
   1130c:	bge	11424 <error@@Base+0x35c>
   11310:	ldr	r5, [r9, r4, lsl #2]
   11314:	lsl	fp, r4, #2
   11318:	ldrb	r2, [r5]
   1131c:	cmp	r2, #45	; 0x2d
   11320:	bne	112f0 <error@@Base+0x228>
   11324:	ldrb	r8, [r5, #1]
   11328:	cmp	r8, #0
   1132c:	beq	112f0 <error@@Base+0x228>
   11330:	mov	r0, r5
   11334:	str	r3, [sp]
   11338:	bl	1078c <strlen@plt>
   1133c:	mov	r1, r5
   11340:	mov	r2, r0
   11344:	ldr	r0, [sp, #4]
   11348:	bl	107c8 <strncmp@plt>
   1134c:	cmp	r0, #0
   11350:	beq	1146c <error@@Base+0x3a4>
   11354:	ldr	r3, [sp]
   11358:	add	sl, sl, #1
   1135c:	cmp	sl, r3
   11360:	addlt	fp, r9, fp
   11364:	movge	ip, #0
   11368:	ldrlt	ip, [fp, #4]
   1136c:	cmp	r6, #0
   11370:	beq	113b4 <error@@Base+0x2ec>
   11374:	ldrb	r2, [r6]
   11378:	cmp	r2, #0
   1137c:	beq	113b4 <error@@Base+0x2ec>
   11380:	cmp	r2, r8
   11384:	beq	113c4 <error@@Base+0x2fc>
   11388:	mov	r2, #0
   1138c:	b	11398 <error@@Base+0x2d0>
   11390:	cmp	r8, r0
   11394:	beq	113c8 <error@@Base+0x300>
   11398:	add	r2, r2, #1
   1139c:	sxth	r2, r2
   113a0:	add	r1, r2, r2, lsl #1
   113a4:	ldrb	r0, [r6, r1, lsl #2]
   113a8:	add	r1, r6, r1, lsl #2
   113ac:	cmp	r0, #0
   113b0:	bne	11390 <error@@Base+0x2c8>
   113b4:	ldr	r0, [pc, #216]	; 11494 <error@@Base+0x3cc>
   113b8:	mov	r1, r5
   113bc:	add	r0, pc, r0
   113c0:	bl	11178 <error@@Base+0xb0>
   113c4:	mov	r1, r6
   113c8:	ldr	r2, [r1, #4]
   113cc:	cmp	r2, #0
   113d0:	beq	11434 <error@@Base+0x36c>
   113d4:	ldrb	r0, [r5, #2]
   113d8:	cmp	r0, #0
   113dc:	cmpeq	ip, #0
   113e0:	beq	11434 <error@@Base+0x36c>
   113e4:	ldr	r1, [r2]
   113e8:	cmp	r1, #0
   113ec:	bne	11474 <error@@Base+0x3ac>
   113f0:	cmp	r0, #0
   113f4:	addne	ip, r5, #2
   113f8:	str	ip, [r2]
   113fc:	ldrb	r2, [r5, #2]
   11400:	cmp	r2, #0
   11404:	addeq	r4, r4, #1
   11408:	sxtheq	r4, r4
   1140c:	b	112fc <error@@Base+0x234>
   11410:	ldr	r3, [pc, #128]	; 11498 <error@@Base+0x3d0>
   11414:	ldr	r3, [r5, r3]
   11418:	ldrb	r7, [r3]
   1141c:	cmp	r7, #0
   11420:	bne	1146c <error@@Base+0x3a4>
   11424:	ldr	r3, [sp, #8]
   11428:	str	r7, [r3]
   1142c:	add	sp, sp, #20
   11430:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11434:	ldr	r3, [r1, #8]
   11438:	cmp	r3, #0
   1143c:	beq	113b4 <error@@Base+0x2ec>
   11440:	ldrb	r2, [r5, #2]
   11444:	cmp	r2, #0
   11448:	bne	113b4 <error@@Base+0x2ec>
   1144c:	ldrb	r2, [r3]
   11450:	cmp	r2, #0
   11454:	bne	11474 <error@@Base+0x3ac>
   11458:	mov	r2, #1
   1145c:	strb	r2, [r3]
   11460:	ldr	r3, [sp, #8]
   11464:	ldr	r3, [r3]
   11468:	b	112fc <error@@Base+0x234>
   1146c:	ldr	r0, [sp, #12]
   11470:	bl	11060 <abort@plt+0x88c>
   11474:	ldr	r0, [pc, #32]	; 1149c <error@@Base+0x3d4>
   11478:	mov	r1, r5
   1147c:	add	r0, pc, r0
   11480:	bl	11178 <error@@Base+0xb0>
   11484:	andeq	r0, r1, r4, ror #26
   11488:	andeq	r0, r0, r8, ror r0
   1148c:			; <UNDEFINED> instruction: 0xfffffe98
   11490:	andeq	r0, r0, r4, asr #8
   11494:	andeq	r0, r0, ip, ror #6
   11498:	andeq	r0, r0, r8, rrx
   1149c:			; <UNDEFINED> instruction: 0x000002bc
   114a0:	ldr	ip, [pc, #60]	; 114e4 <error@@Base+0x41c>
   114a4:	push	{lr}		; (str lr, [sp, #-4]!)
   114a8:	add	ip, pc, ip
   114ac:	ldr	r2, [pc, #52]	; 114e8 <error@@Base+0x420>
   114b0:	ldr	lr, [pc, #52]	; 114ec <error@@Base+0x424>
   114b4:	sub	sp, sp, #12
   114b8:	mov	r3, r0
   114bc:	ldr	lr, [ip, lr]
   114c0:	ldr	r0, [ip, r2]
   114c4:	str	r1, [sp]
   114c8:	ldr	r1, [pc, #32]	; 114f0 <error@@Base+0x428>
   114cc:	ldr	r2, [lr]
   114d0:	add	r1, pc, r1
   114d4:	ldr	r0, [r0]
   114d8:	bl	10798 <fprintf@plt>
   114dc:	add	sp, sp, #12
   114e0:	pop	{pc}		; (ldr pc, [sp], #4)
   114e4:	andeq	r0, r1, r0, asr fp
   114e8:	andeq	r0, r0, r0, ror r0
   114ec:	andeq	r0, r0, r8, ror r0
   114f0:	andeq	r0, r0, r4, lsl r2
   114f4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   114f8:	mov	r7, r0
   114fc:	ldr	r6, [pc, #72]	; 1154c <error@@Base+0x484>
   11500:	ldr	r5, [pc, #72]	; 11550 <error@@Base+0x488>
   11504:	add	r6, pc, r6
   11508:	add	r5, pc, r5
   1150c:	sub	r6, r6, r5
   11510:	mov	r8, r1
   11514:	mov	r9, r2
   11518:	bl	106b8 <calloc@plt-0x20>
   1151c:	asrs	r6, r6, #2
   11520:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11524:	mov	r4, #0
   11528:	add	r4, r4, #1
   1152c:	ldr	r3, [r5], #4
   11530:	mov	r2, r9
   11534:	mov	r1, r8
   11538:	mov	r0, r7
   1153c:	blx	r3
   11540:	cmp	r6, r4
   11544:	bne	11528 <error@@Base+0x460>
   11548:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1154c:	strdeq	r0, [r1], -r4
   11550:	andeq	r0, r1, ip, ror #19
   11554:	bx	lr

Disassembly of section .fini:

00011558 <.fini>:
   11558:	push	{r3, lr}
   1155c:	pop	{r3, pc}
