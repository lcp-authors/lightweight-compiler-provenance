
../repos/sgerbino-table-2fdd8d0/bin/table_callback_test:     file format elf32-littlearm


Disassembly of section .init:

00011a94 <.init>:
   11a94:	push	{r3, lr}
   11a98:	bl	11d10 <_start@@Base+0x3c>
   11a9c:	pop	{r3, pc}

Disassembly of section .plt:

00011aa0 <raise@plt-0x14>:
   11aa0:	push	{lr}		; (str lr, [sp, #-4]!)
   11aa4:	ldr	lr, [pc, #4]	; 11ab0 <raise@plt-0x4>
   11aa8:	add	lr, pc, lr
   11aac:	ldr	pc, [lr, #8]!
   11ab0:	andeq	r3, r1, r0, asr r5

00011ab4 <raise@plt>:
   11ab4:	add	ip, pc, #0, 12
   11ab8:	add	ip, ip, #77824	; 0x13000
   11abc:	ldr	pc, [ip, #1360]!	; 0x550

00011ac0 <strcmp@plt>:
   11ac0:	add	ip, pc, #0, 12
   11ac4:	add	ip, ip, #77824	; 0x13000
   11ac8:	ldr	pc, [ip, #1352]!	; 0x548

00011acc <printf@plt>:
   11acc:	add	ip, pc, #0, 12
   11ad0:	add	ip, ip, #77824	; 0x13000
   11ad4:	ldr	pc, [ip, #1344]!	; 0x540

00011ad8 <free@plt>:
   11ad8:	add	ip, pc, #0, 12
   11adc:	add	ip, ip, #77824	; 0x13000
   11ae0:	ldr	pc, [ip, #1336]!	; 0x538

00011ae4 <realloc@plt>:
   11ae4:	add	ip, pc, #0, 12
   11ae8:	add	ip, ip, #77824	; 0x13000
   11aec:	ldr	pc, [ip, #1328]!	; 0x530

00011af0 <strcpy@plt>:
   11af0:	add	ip, pc, #0, 12
   11af4:	add	ip, ip, #77824	; 0x13000
   11af8:	ldr	pc, [ip, #1320]!	; 0x528

00011afc <puts@plt>:
   11afc:	add	ip, pc, #0, 12
   11b00:	add	ip, ip, #77824	; 0x13000
   11b04:	ldr	pc, [ip, #1312]!	; 0x520

00011b08 <malloc@plt>:
   11b08:	add	ip, pc, #0, 12
   11b0c:	add	ip, ip, #77824	; 0x13000
   11b10:	ldr	pc, [ip, #1304]!	; 0x518

00011b14 <__libc_start_main@plt>:
   11b14:	add	ip, pc, #0, 12
   11b18:	add	ip, ip, #77824	; 0x13000
   11b1c:	ldr	pc, [ip, #1296]!	; 0x510

00011b20 <__gmon_start__@plt>:
   11b20:	add	ip, pc, #0, 12
   11b24:	add	ip, ip, #77824	; 0x13000
   11b28:	ldr	pc, [ip, #1288]!	; 0x508

00011b2c <strlen@plt>:
   11b2c:	add	ip, pc, #0, 12
   11b30:	add	ip, ip, #77824	; 0x13000
   11b34:	ldr	pc, [ip, #1280]!	; 0x500

00011b38 <snprintf@plt>:
   11b38:	add	ip, pc, #0, 12
   11b3c:	add	ip, ip, #77824	; 0x13000
   11b40:	ldr	pc, [ip, #1272]!	; 0x4f8

00011b44 <__isoc99_sscanf@plt>:
   11b44:	add	ip, pc, #0, 12
   11b48:	add	ip, ip, #77824	; 0x13000
   11b4c:	ldr	pc, [ip, #1264]!	; 0x4f0

00011b50 <abort@plt>:
   11b50:	add	ip, pc, #0, 12
   11b54:	add	ip, ip, #77824	; 0x13000
   11b58:	ldr	pc, [ip, #1256]!	; 0x4e8

Disassembly of section .text:

00011b5c <main@@Base>:
   11b5c:	push	{r4, r5, r6, r7, lr}
   11b60:	sub	sp, sp, #68	; 0x44
   11b64:	add	r4, sp, #8
   11b68:	mov	r0, r4
   11b6c:	mov	r5, #0
   11b70:	str	r5, [sp, #4]
   11b74:	bl	11e10 <table_init@@Base>
   11b78:	ldr	r1, [pc, #308]	; 11cb4 <main@@Base+0x158>
   11b7c:	mvn	r3, #0
   11b80:	mov	r0, r4
   11b84:	add	r2, sp, #4
   11b88:	add	r1, pc, r1
   11b8c:	bl	12464 <table_register_callback@@Base>
   11b90:	mov	r0, r4
   11b94:	bl	1325c <table_add_row@@Base>
   11b98:	ldr	r3, [sp, #4]
   11b9c:	tst	r3, #2
   11ba0:	mov	r7, r0
   11ba4:	beq	11c3c <main@@Base+0xe0>
   11ba8:	ldr	r1, [pc, #264]	; 11cb8 <main@@Base+0x15c>
   11bac:	mov	r2, #0
   11bb0:	add	r1, pc, r1
   11bb4:	mov	r0, r4
   11bb8:	bl	1278c <table_add_column@@Base>
   11bbc:	ldr	r3, [sp, #4]
   11bc0:	tst	r3, #8
   11bc4:	mov	r6, r0
   11bc8:	beq	11c8c <main@@Base+0x130>
   11bcc:	mov	r3, #42	; 0x2a
   11bd0:	mov	r2, r6
   11bd4:	mov	r1, r7
   11bd8:	mov	r0, r4
   11bdc:	bl	13810 <table_set_int@@Base>
   11be0:	ldr	r3, [sp, #4]
   11be4:	tst	r3, #1
   11be8:	beq	11c78 <main@@Base+0x11c>
   11bec:	mov	r1, r7
   11bf0:	mov	r0, r4
   11bf4:	bl	13374 <table_remove_row@@Base>
   11bf8:	ldr	r3, [sp, #4]
   11bfc:	tst	r3, #4
   11c00:	beq	11c64 <main@@Base+0x108>
   11c04:	mov	r1, r6
   11c08:	mov	r0, r4
   11c0c:	bl	128c8 <table_remove_column@@Base>
   11c10:	ldr	r3, [sp, #4]
   11c14:	tst	r3, #16
   11c18:	beq	11c50 <main@@Base+0xf4>
   11c1c:	mov	r0, r4
   11c20:	bl	11e74 <table_destroy@@Base>
   11c24:	ldr	r3, [sp, #4]
   11c28:	tst	r3, #64	; 0x40
   11c2c:	beq	11ca0 <main@@Base+0x144>
   11c30:	mov	r0, r5
   11c34:	add	sp, sp, #68	; 0x44
   11c38:	pop	{r4, r5, r6, r7, pc}
   11c3c:	ldr	r0, [pc, #120]	; 11cbc <main@@Base+0x160>
   11c40:	mvn	r5, #0
   11c44:	add	r0, pc, r0
   11c48:	bl	11afc <puts@plt>
   11c4c:	b	11ba8 <main@@Base+0x4c>
   11c50:	ldr	r0, [pc, #104]	; 11cc0 <main@@Base+0x164>
   11c54:	mvn	r5, #0
   11c58:	add	r0, pc, r0
   11c5c:	bl	11acc <printf@plt>
   11c60:	b	11c1c <main@@Base+0xc0>
   11c64:	ldr	r0, [pc, #88]	; 11cc4 <main@@Base+0x168>
   11c68:	mvn	r5, #0
   11c6c:	add	r0, pc, r0
   11c70:	bl	11acc <printf@plt>
   11c74:	b	11c04 <main@@Base+0xa8>
   11c78:	ldr	r0, [pc, #72]	; 11cc8 <main@@Base+0x16c>
   11c7c:	mvn	r5, #0
   11c80:	add	r0, pc, r0
   11c84:	bl	11acc <printf@plt>
   11c88:	b	11bec <main@@Base+0x90>
   11c8c:	ldr	r0, [pc, #56]	; 11ccc <main@@Base+0x170>
   11c90:	mvn	r5, #0
   11c94:	add	r0, pc, r0
   11c98:	bl	11afc <puts@plt>
   11c9c:	b	11bcc <main@@Base+0x70>
   11ca0:	ldr	r0, [pc, #40]	; 11cd0 <main@@Base+0x174>
   11ca4:	mvn	r5, #0
   11ca8:	add	r0, pc, r0
   11cac:	bl	11acc <printf@plt>
   11cb0:	b	11c30 <main@@Base+0xd4>
   11cb4:	andeq	r0, r0, ip, ror #4
   11cb8:			; <UNDEFINED> instruction: 0x00002eb4
   11cbc:	strdeq	r2, [r0], -r8
   11cc0:	muleq	r0, r4, lr
   11cc4:	andeq	r2, r0, r4, asr lr
   11cc8:	andeq	r2, r0, r4, lsl lr
   11ccc:	ldrdeq	r2, [r0], -r4
   11cd0:	andeq	r2, r0, r4, ror lr

00011cd4 <_start@@Base>:
   11cd4:	mov	fp, #0
   11cd8:	mov	lr, #0
   11cdc:	pop	{r1}		; (ldr r1, [sp], #4)
   11ce0:	mov	r2, sp
   11ce4:	push	{r2}		; (str r2, [sp, #-4]!)
   11ce8:	push	{r0}		; (str r0, [sp, #-4]!)
   11cec:	ldr	ip, [pc, #16]	; 11d04 <_start@@Base+0x30>
   11cf0:	push	{ip}		; (str ip, [sp, #-4]!)
   11cf4:	ldr	r0, [pc, #12]	; 11d08 <_start@@Base+0x34>
   11cf8:	ldr	r3, [pc, #12]	; 11d0c <_start@@Base+0x38>
   11cfc:	bl	11b14 <__libc_start_main@plt>
   11d00:	bl	11b50 <abort@plt>
   11d04:	andeq	r4, r1, r4, lsr sl
   11d08:	andeq	r1, r1, ip, asr fp
   11d0c:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   11d10:	ldr	r3, [pc, #20]	; 11d2c <_start@@Base+0x58>
   11d14:	ldr	r2, [pc, #20]	; 11d30 <_start@@Base+0x5c>
   11d18:	add	r3, pc, r3
   11d1c:	ldr	r2, [r3, r2]
   11d20:	cmp	r2, #0
   11d24:	bxeq	lr
   11d28:	b	11b20 <__gmon_start__@plt>
   11d2c:	andeq	r3, r1, r0, ror #5
   11d30:	andeq	r0, r0, r8, rrx
   11d34:	ldr	r3, [pc, #28]	; 11d58 <_start@@Base+0x84>
   11d38:	ldr	r0, [pc, #28]	; 11d5c <_start@@Base+0x88>
   11d3c:	sub	r3, r3, r0
   11d40:	cmp	r3, #6
   11d44:	bxls	lr
   11d48:	ldr	r3, [pc, #16]	; 11d60 <_start@@Base+0x8c>
   11d4c:	cmp	r3, #0
   11d50:	bxeq	lr
   11d54:	bx	r3
   11d58:	strheq	r5, [r2], -r3
   11d5c:	strheq	r5, [r2], -r0
   11d60:	andeq	r0, r0, r0
   11d64:	ldr	r1, [pc, #36]	; 11d90 <_start@@Base+0xbc>
   11d68:	ldr	r0, [pc, #36]	; 11d94 <_start@@Base+0xc0>
   11d6c:	sub	r1, r1, r0
   11d70:	asr	r1, r1, #2
   11d74:	add	r1, r1, r1, lsr #31
   11d78:	asrs	r1, r1, #1
   11d7c:	bxeq	lr
   11d80:	ldr	r3, [pc, #16]	; 11d98 <_start@@Base+0xc4>
   11d84:	cmp	r3, #0
   11d88:	bxeq	lr
   11d8c:	bx	r3
   11d90:	strheq	r5, [r2], -r0
   11d94:	strheq	r5, [r2], -r0
   11d98:	andeq	r0, r0, r0
   11d9c:	push	{r4, lr}
   11da0:	ldr	r4, [pc, #24]	; 11dc0 <_start@@Base+0xec>
   11da4:	ldrb	r3, [r4]
   11da8:	cmp	r3, #0
   11dac:	popne	{r4, pc}
   11db0:	bl	11d34 <_start@@Base+0x60>
   11db4:	mov	r3, #1
   11db8:	strb	r3, [r4]
   11dbc:	pop	{r4, pc}
   11dc0:	strheq	r5, [r2], -r0
   11dc4:	ldr	r0, [pc, #40]	; 11df4 <_start@@Base+0x120>
   11dc8:	ldr	r3, [r0]
   11dcc:	cmp	r3, #0
   11dd0:	bne	11dd8 <_start@@Base+0x104>
   11dd4:	b	11d64 <_start@@Base+0x90>
   11dd8:	ldr	r3, [pc, #24]	; 11df8 <_start@@Base+0x124>
   11ddc:	cmp	r3, #0
   11de0:	beq	11dd4 <_start@@Base+0x100>
   11de4:	push	{r4, lr}
   11de8:	blx	r3
   11dec:	pop	{r4, lr}
   11df0:	b	11d64 <_start@@Base+0x90>
   11df4:	andeq	r4, r2, r4, lsl pc
   11df8:	andeq	r0, r0, r0
   11dfc:	ldr	r1, [sp]
   11e00:	ldr	r2, [r1]
   11e04:	orr	r3, r2, r3
   11e08:	str	r3, [r1]
   11e0c:	bx	lr

00011e10 <table_init@@Base>:
   11e10:	mov	r3, #0
   11e14:	mov	r2, #10
   11e18:	mov	r1, #20
   11e1c:	str	r1, [r0, #24]
   11e20:	str	r3, [r0]
   11e24:	str	r3, [r0, #4]
   11e28:	str	r3, [r0, #12]
   11e2c:	str	r3, [r0, #16]
   11e30:	str	r3, [r0, #20]
   11e34:	str	r3, [r0, #28]
   11e38:	str	r3, [r0, #36]	; 0x24
   11e3c:	str	r3, [r0, #40]	; 0x28
   11e40:	str	r3, [r0, #44]	; 0x2c
   11e44:	str	r3, [r0, #32]
   11e48:	str	r3, [r0, #52]	; 0x34
   11e4c:	str	r2, [r0, #8]
   11e50:	str	r2, [r0, #48]	; 0x30
   11e54:	bx	lr

00011e58 <table_new@@Base>:
   11e58:	push	{r4, lr}
   11e5c:	mov	r0, #56	; 0x38
   11e60:	bl	11b08 <malloc@plt>
   11e64:	mov	r4, r0
   11e68:	bl	11e10 <table_init@@Base>
   11e6c:	mov	r0, r4
   11e70:	pop	{r4, pc}

00011e74 <table_destroy@@Base>:
   11e74:	push	{r4, r5, r6, lr}
   11e78:	subs	r5, r0, #0
   11e7c:	popeq	{r4, r5, r6, pc}
   11e80:	mvn	r2, #0
   11e84:	mov	r1, r2
   11e88:	mov	r3, #64	; 0x40
   11e8c:	bl	126a4 <table_notify@@Base>
   11e90:	mov	r0, r5
   11e94:	bl	13224 <table_get_row_length@@Base>
   11e98:	subs	r6, r0, #0
   11e9c:	movgt	r4, #0
   11ea0:	ble	11ebc <table_destroy@@Base+0x48>
   11ea4:	mov	r1, r4
   11ea8:	mov	r0, r5
   11eac:	add	r4, r4, #1
   11eb0:	bl	13310 <table_row_destroy@@Base>
   11eb4:	cmp	r6, r4
   11eb8:	bne	11ea4 <table_destroy@@Base+0x30>
   11ebc:	ldr	r0, [r5, #16]
   11ec0:	cmp	r0, #0
   11ec4:	beq	11ecc <table_destroy@@Base+0x58>
   11ec8:	bl	11ad8 <free@plt>
   11ecc:	mov	r0, r5
   11ed0:	bl	1272c <table_get_column_length@@Base>
   11ed4:	subs	r6, r0, #0
   11ed8:	movgt	r4, #0
   11edc:	ble	11ef8 <table_destroy@@Base+0x84>
   11ee0:	mov	r1, r4
   11ee4:	mov	r0, r5
   11ee8:	add	r4, r4, #1
   11eec:	bl	128ac <table_column_destroy@@Base>
   11ef0:	cmp	r6, r4
   11ef4:	bne	11ee0 <table_destroy@@Base+0x6c>
   11ef8:	ldr	r0, [r5]
   11efc:	cmp	r0, #0
   11f00:	beq	11f08 <table_destroy@@Base+0x94>
   11f04:	bl	11ad8 <free@plt>
   11f08:	ldr	r0, [r5, #36]	; 0x24
   11f0c:	cmp	r0, #0
   11f10:	beq	11f18 <table_destroy@@Base+0xa4>
   11f14:	bl	11ad8 <free@plt>
   11f18:	ldr	r0, [r5, #40]	; 0x28
   11f1c:	cmp	r0, #0
   11f20:	beq	11f28 <table_destroy@@Base+0xb4>
   11f24:	bl	11ad8 <free@plt>
   11f28:	ldr	r0, [r5, #44]	; 0x2c
   11f2c:	cmp	r0, #0
   11f30:	popeq	{r4, r5, r6, pc}
   11f34:	pop	{r4, r5, r6, lr}
   11f38:	b	11ad8 <free@plt>

00011f3c <table_delete@@Base>:
   11f3c:	push	{r4, lr}
   11f40:	mov	r4, r0
   11f44:	bl	11e74 <table_destroy@@Base>
   11f48:	mov	r0, r4
   11f4c:	pop	{r4, lr}
   11f50:	b	11ad8 <free@plt>

00011f54 <table_dupe@@Base>:
   11f54:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11f58:	sub	sp, sp, #16
   11f5c:	mov	r6, r0
   11f60:	bl	13224 <table_get_row_length@@Base>
   11f64:	mov	r9, r0
   11f68:	mov	r0, r6
   11f6c:	bl	1272c <table_get_column_length@@Base>
   11f70:	mov	r7, r0
   11f74:	bl	11e58 <table_new@@Base>
   11f78:	cmp	r7, #0
   11f7c:	movgt	r4, #0
   11f80:	mov	r8, r0
   11f84:	ble	11fc0 <table_dupe@@Base+0x6c>
   11f88:	mov	r1, r4
   11f8c:	mov	r0, r6
   11f90:	bl	12a58 <table_get_column_name@@Base>
   11f94:	mov	r1, r4
   11f98:	add	r4, r4, #1
   11f9c:	mov	r5, r0
   11fa0:	mov	r0, r6
   11fa4:	bl	12a48 <table_get_column_data_type@@Base>
   11fa8:	mov	r1, r5
   11fac:	mov	r2, r0
   11fb0:	mov	r0, r8
   11fb4:	bl	1278c <table_add_column@@Base>
   11fb8:	cmp	r7, r4
   11fbc:	bne	11f88 <table_dupe@@Base+0x34>
   11fc0:	cmp	r9, #0
   11fc4:	movgt	r5, #0
   11fc8:	addgt	sl, sp, #12
   11fcc:	ble	1209c <table_dupe@@Base+0x148>
   11fd0:	mov	r0, r8
   11fd4:	bl	1325c <table_add_row@@Base>
   11fd8:	cmp	r7, #0
   11fdc:	movgt	r4, #0
   11fe0:	ble	12090 <table_dupe@@Base+0x13c>
   11fe4:	mov	r1, r4
   11fe8:	mov	r0, r6
   11fec:	bl	12a48 <table_get_column_data_type@@Base>
   11ff0:	cmp	r0, #23
   11ff4:	addls	pc, pc, r0, lsl #2
   11ff8:	b	12084 <table_dupe@@Base+0x130>
   11ffc:	b	120f8 <table_dupe@@Base+0x1a4>
   12000:	b	1236c <table_dupe@@Base+0x418>
   12004:	b	12344 <table_dupe@@Base+0x3f0>
   12008:	b	1231c <table_dupe@@Base+0x3c8>
   1200c:	b	122f4 <table_dupe@@Base+0x3a0>
   12010:	b	1240c <table_dupe@@Base+0x4b8>
   12014:	b	123e4 <table_dupe@@Base+0x490>
   12018:	b	123bc <table_dupe@@Base+0x468>
   1201c:	b	12394 <table_dupe@@Base+0x440>
   12020:	b	122cc <table_dupe@@Base+0x378>
   12024:	b	122a4 <table_dupe@@Base+0x350>
   12028:	b	1227c <table_dupe@@Base+0x328>
   1202c:	b	12254 <table_dupe@@Base+0x300>
   12030:	b	1222c <table_dupe@@Base+0x2d8>
   12034:	b	12204 <table_dupe@@Base+0x2b0>
   12038:	b	121dc <table_dupe@@Base+0x288>
   1203c:	b	121b8 <table_dupe@@Base+0x264>
   12040:	b	12194 <table_dupe@@Base+0x240>
   12044:	b	12170 <table_dupe@@Base+0x21c>
   12048:	b	12148 <table_dupe@@Base+0x1f4>
   1204c:	b	12120 <table_dupe@@Base+0x1cc>
   12050:	b	120d0 <table_dupe@@Base+0x17c>
   12054:	b	120a8 <table_dupe@@Base+0x154>
   12058:	b	1205c <table_dupe@@Base+0x108>
   1205c:	mov	r2, r4
   12060:	mov	r1, r5
   12064:	mov	r0, r6
   12068:	bl	13220 <table_get_ptr@@Base>
   1206c:	mov	r3, sl
   12070:	mov	r2, r4
   12074:	mov	r1, r5
   12078:	str	r0, [sp, #12]
   1207c:	mov	r0, r8
   12080:	bl	13b48 <table_set_ptr@@Base>
   12084:	add	r4, r4, #1
   12088:	cmp	r7, r4
   1208c:	bne	11fe4 <table_dupe@@Base+0x90>
   12090:	add	r5, r5, #1
   12094:	cmp	r9, r5
   12098:	bne	11fd0 <table_dupe@@Base+0x7c>
   1209c:	mov	r0, r8
   120a0:	add	sp, sp, #16
   120a4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   120a8:	mov	r2, r4
   120ac:	mov	r1, r5
   120b0:	mov	r0, r6
   120b4:	bl	1311c <table_get_bool@@Base>
   120b8:	mov	r2, r4
   120bc:	mov	r1, r5
   120c0:	mov	r3, r0
   120c4:	mov	r0, r8
   120c8:	bl	137e8 <table_set_bool@@Base>
   120cc:	b	12084 <table_dupe@@Base+0x130>
   120d0:	mov	r2, r4
   120d4:	mov	r1, r5
   120d8:	mov	r0, r6
   120dc:	bl	1321c <table_get_string@@Base>
   120e0:	mov	r2, r4
   120e4:	mov	r1, r5
   120e8:	mov	r3, r0
   120ec:	mov	r0, r8
   120f0:	bl	13adc <table_set_string@@Base>
   120f4:	b	12084 <table_dupe@@Base+0x130>
   120f8:	mov	r2, r4
   120fc:	mov	r1, r5
   12100:	mov	r0, r6
   12104:	bl	1314c <table_get_int@@Base>
   12108:	mov	r2, r4
   1210c:	mov	r1, r5
   12110:	mov	r3, r0
   12114:	mov	r0, r8
   12118:	bl	13810 <table_set_int@@Base>
   1211c:	b	12084 <table_dupe@@Base+0x130>
   12120:	mov	r2, r4
   12124:	mov	r1, r5
   12128:	mov	r0, r6
   1212c:	bl	13204 <table_get_uchar@@Base>
   12130:	mov	r2, r4
   12134:	mov	r1, r5
   12138:	mov	r3, r0
   1213c:	mov	r0, r8
   12140:	bl	13b20 <table_set_uchar@@Base>
   12144:	b	12084 <table_dupe@@Base+0x130>
   12148:	mov	r2, r4
   1214c:	mov	r1, r5
   12150:	mov	r0, r6
   12154:	bl	13214 <table_get_char@@Base>
   12158:	mov	r2, r4
   1215c:	mov	r1, r5
   12160:	mov	r3, r0
   12164:	mov	r0, r8
   12168:	bl	13af8 <table_set_char@@Base>
   1216c:	b	12084 <table_dupe@@Base+0x130>
   12170:	mov	r2, r4
   12174:	mov	r1, r5
   12178:	mov	r0, r6
   1217c:	bl	131f4 <table_get_ldouble@@Base>
   12180:	mov	r2, r4
   12184:	mov	r1, r5
   12188:	mov	r0, r8
   1218c:	bl	13ab8 <table_set_ldouble@@Base>
   12190:	b	12084 <table_dupe@@Base+0x130>
   12194:	mov	r2, r4
   12198:	mov	r1, r5
   1219c:	mov	r0, r6
   121a0:	bl	131e4 <table_get_double@@Base>
   121a4:	mov	r2, r4
   121a8:	mov	r1, r5
   121ac:	mov	r0, r8
   121b0:	bl	13a94 <table_set_double@@Base>
   121b4:	b	12084 <table_dupe@@Base+0x130>
   121b8:	mov	r2, r4
   121bc:	mov	r1, r5
   121c0:	mov	r0, r6
   121c4:	bl	131d4 <table_get_float@@Base>
   121c8:	mov	r2, r4
   121cc:	mov	r1, r5
   121d0:	mov	r0, r8
   121d4:	bl	13a70 <table_set_float@@Base>
   121d8:	b	12084 <table_dupe@@Base+0x130>
   121dc:	mov	r2, r4
   121e0:	mov	r1, r5
   121e4:	mov	r0, r6
   121e8:	bl	131c0 <table_get_ullong@@Base>
   121ec:	mov	r2, r4
   121f0:	strd	r0, [sp]
   121f4:	mov	r1, r5
   121f8:	mov	r0, r8
   121fc:	bl	13a50 <table_set_ullong@@Base>
   12200:	b	12084 <table_dupe@@Base+0x130>
   12204:	mov	r2, r4
   12208:	mov	r1, r5
   1220c:	mov	r0, r6
   12210:	bl	131ac <table_get_llong@@Base>
   12214:	mov	r2, r4
   12218:	strd	r0, [sp]
   1221c:	mov	r1, r5
   12220:	mov	r0, r8
   12224:	bl	13a30 <table_set_llong@@Base>
   12228:	b	12084 <table_dupe@@Base+0x130>
   1222c:	mov	r2, r4
   12230:	mov	r1, r5
   12234:	mov	r0, r6
   12238:	bl	1319c <table_get_ulong@@Base>
   1223c:	mov	r2, r4
   12240:	mov	r1, r5
   12244:	mov	r3, r0
   12248:	mov	r0, r8
   1224c:	bl	13a08 <table_set_ulong@@Base>
   12250:	b	12084 <table_dupe@@Base+0x130>
   12254:	mov	r2, r4
   12258:	mov	r1, r5
   1225c:	mov	r0, r6
   12260:	bl	1318c <table_get_long@@Base>
   12264:	mov	r2, r4
   12268:	mov	r1, r5
   1226c:	mov	r3, r0
   12270:	mov	r0, r8
   12274:	bl	139e0 <table_set_long@@Base>
   12278:	b	12084 <table_dupe@@Base+0x130>
   1227c:	mov	r2, r4
   12280:	mov	r1, r5
   12284:	mov	r0, r6
   12288:	bl	13178 <table_get_ushort@@Base>
   1228c:	mov	r2, r4
   12290:	mov	r1, r5
   12294:	mov	r3, r0
   12298:	mov	r0, r8
   1229c:	bl	139b8 <table_set_ushort@@Base>
   122a0:	b	12084 <table_dupe@@Base+0x130>
   122a4:	mov	r2, r4
   122a8:	mov	r1, r5
   122ac:	mov	r0, r6
   122b0:	bl	13164 <table_get_short@@Base>
   122b4:	mov	r2, r4
   122b8:	mov	r1, r5
   122bc:	mov	r3, r0
   122c0:	mov	r0, r8
   122c4:	bl	13990 <table_set_short@@Base>
   122c8:	b	12084 <table_dupe@@Base+0x130>
   122cc:	mov	r2, r4
   122d0:	mov	r1, r5
   122d4:	mov	r0, r6
   122d8:	bl	131d0 <table_get_uint64@@Base>
   122dc:	mov	r2, r4
   122e0:	strd	r0, [sp]
   122e4:	mov	r1, r5
   122e8:	mov	r0, r8
   122ec:	bl	13970 <table_set_uint64@@Base>
   122f0:	b	12084 <table_dupe@@Base+0x130>
   122f4:	mov	r2, r4
   122f8:	mov	r1, r5
   122fc:	mov	r0, r6
   12300:	bl	13174 <table_get_int16@@Base>
   12304:	mov	r2, r4
   12308:	mov	r1, r5
   1230c:	mov	r3, r0
   12310:	mov	r0, r8
   12314:	bl	138b0 <table_set_int16@@Base>
   12318:	b	12084 <table_dupe@@Base+0x130>
   1231c:	mov	r2, r4
   12320:	mov	r1, r5
   12324:	mov	r0, r6
   12328:	bl	13218 <table_get_uint8@@Base>
   1232c:	mov	r2, r4
   12330:	mov	r1, r5
   12334:	mov	r3, r0
   12338:	mov	r0, r8
   1233c:	bl	13888 <table_set_uint8@@Base>
   12340:	b	12084 <table_dupe@@Base+0x130>
   12344:	mov	r2, r4
   12348:	mov	r1, r5
   1234c:	mov	r0, r6
   12350:	bl	1312c <table_get_int8@@Base>
   12354:	mov	r2, r4
   12358:	mov	r1, r5
   1235c:	mov	r3, r0
   12360:	mov	r0, r8
   12364:	bl	13860 <table_set_int8@@Base>
   12368:	b	12084 <table_dupe@@Base+0x130>
   1236c:	mov	r2, r4
   12370:	mov	r1, r5
   12374:	mov	r0, r6
   12378:	bl	13160 <table_get_uint@@Base>
   1237c:	mov	r2, r4
   12380:	mov	r1, r5
   12384:	mov	r3, r0
   12388:	mov	r0, r8
   1238c:	bl	13838 <table_set_uint@@Base>
   12390:	b	12084 <table_dupe@@Base+0x130>
   12394:	mov	r2, r4
   12398:	mov	r1, r5
   1239c:	mov	r0, r6
   123a0:	bl	131bc <table_get_int64@@Base>
   123a4:	mov	r2, r4
   123a8:	strd	r0, [sp]
   123ac:	mov	r1, r5
   123b0:	mov	r0, r8
   123b4:	bl	13950 <table_set_int64@@Base>
   123b8:	b	12084 <table_dupe@@Base+0x130>
   123bc:	mov	r2, r4
   123c0:	mov	r1, r5
   123c4:	mov	r0, r6
   123c8:	bl	13150 <table_get_uint32@@Base>
   123cc:	mov	r2, r4
   123d0:	mov	r1, r5
   123d4:	mov	r3, r0
   123d8:	mov	r0, r8
   123dc:	bl	13928 <table_set_uint32@@Base>
   123e0:	b	12084 <table_dupe@@Base+0x130>
   123e4:	mov	r2, r4
   123e8:	mov	r1, r5
   123ec:	mov	r0, r6
   123f0:	bl	1313c <table_get_int32@@Base>
   123f4:	mov	r2, r4
   123f8:	mov	r1, r5
   123fc:	mov	r3, r0
   12400:	mov	r0, r8
   12404:	bl	13900 <table_set_int32@@Base>
   12408:	b	12084 <table_dupe@@Base+0x130>
   1240c:	mov	r2, r4
   12410:	mov	r1, r5
   12414:	mov	r0, r6
   12418:	bl	13188 <table_get_uint16@@Base>
   1241c:	mov	r2, r4
   12420:	mov	r1, r5
   12424:	mov	r3, r0
   12428:	mov	r0, r8
   1242c:	bl	138d8 <table_set_uint16@@Base>
   12430:	b	12084 <table_dupe@@Base+0x130>

00012434 <table_get_major_version@@Base>:
   12434:	mov	r0, #0
   12438:	bx	lr

0001243c <table_get_minor_version@@Base>:
   1243c:	mov	r0, #0
   12440:	bx	lr

00012444 <table_get_patch_version@@Base>:
   12444:	mov	r0, #0
   12448:	bx	lr

0001244c <table_get_version@@Base>:
   1244c:	ldr	r0, [pc, #4]	; 12458 <table_get_version@@Base+0xc>
   12450:	add	r0, pc, r0
   12454:	bx	lr
   12458:	andeq	r2, r0, r8, lsr r7

0001245c <table_get_callback_length@@Base>:
   1245c:	ldr	r0, [r0, #32]
   12460:	bx	lr

00012464 <table_register_callback@@Base>:
   12464:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12468:	ldr	r5, [r0, #32]
   1246c:	cmp	r5, #0
   12470:	ble	124cc <table_register_callback@@Base+0x68>
   12474:	ldr	lr, [r0, #36]	; 0x24
   12478:	mov	ip, #0
   1247c:	sub	lr, lr, #4
   12480:	b	12490 <table_register_callback@@Base+0x2c>
   12484:	add	ip, ip, #1
   12488:	cmp	ip, r5
   1248c:	beq	124cc <table_register_callback@@Base+0x68>
   12490:	ldr	r4, [lr, #4]!
   12494:	lsl	r6, ip, #2
   12498:	cmp	r1, r4
   1249c:	bne	12484 <table_register_callback@@Base+0x20>
   124a0:	ldr	r4, [r0, #40]	; 0x28
   124a4:	ldr	r4, [r4, ip, lsl #2]
   124a8:	cmp	r2, r4
   124ac:	bne	12484 <table_register_callback@@Base+0x20>
   124b0:	cmp	ip, #0
   124b4:	beq	124cc <table_register_callback@@Base+0x68>
   124b8:	ldr	r1, [r0, #44]	; 0x2c
   124bc:	ldr	r2, [r1, r6]
   124c0:	orr	r3, r2, r3
   124c4:	str	r3, [r1, r6]
   124c8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   124cc:	ldr	r8, [r0, #48]	; 0x30
   124d0:	mov	r9, r1
   124d4:	mov	r6, r0
   124d8:	mov	r1, r8
   124dc:	mov	r0, r5
   124e0:	mov	r7, r3
   124e4:	mov	r4, r2
   124e8:	bl	149a4 <table_cell_nullify@@Base+0x218>
   124ec:	cmp	r1, #0
   124f0:	beq	12524 <table_register_callback@@Base+0xc0>
   124f4:	mov	r0, r6
   124f8:	bl	1245c <table_get_callback_length@@Base>
   124fc:	ldr	r3, [r6, #36]	; 0x24
   12500:	str	r9, [r3, r0, lsl #2]
   12504:	ldr	r3, [r6, #40]	; 0x28
   12508:	str	r4, [r3, r0, lsl #2]
   1250c:	ldr	r3, [r6, #44]	; 0x2c
   12510:	str	r7, [r3, r0, lsl #2]
   12514:	ldr	r3, [r6, #32]
   12518:	add	r3, r3, #1
   1251c:	str	r3, [r6, #32]
   12520:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12524:	ldr	r1, [r6, #52]	; 0x34
   12528:	ldr	r0, [r6, #36]	; 0x24
   1252c:	add	r1, r8, r1
   12530:	str	r1, [r6, #52]	; 0x34
   12534:	lsl	r1, r1, #2
   12538:	bl	11ae4 <realloc@plt>
   1253c:	ldr	r1, [r6, #52]	; 0x34
   12540:	lsl	r1, r1, #2
   12544:	str	r0, [r6, #36]	; 0x24
   12548:	ldr	r0, [r6, #40]	; 0x28
   1254c:	bl	11ae4 <realloc@plt>
   12550:	ldr	r1, [r6, #52]	; 0x34
   12554:	lsl	r1, r1, #2
   12558:	str	r0, [r6, #40]	; 0x28
   1255c:	ldr	r0, [r6, #44]	; 0x2c
   12560:	bl	11ae4 <realloc@plt>
   12564:	str	r0, [r6, #44]	; 0x2c
   12568:	b	124f4 <table_register_callback@@Base+0x90>

0001256c <table_unregister_callback@@Base>:
   1256c:	push	{r4, r5, r6, lr}
   12570:	ldr	lr, [r0, #32]
   12574:	cmp	lr, #0
   12578:	pople	{r4, r5, r6, pc}
   1257c:	ldr	r6, [r0, #36]	; 0x24
   12580:	mov	r3, #0
   12584:	sub	r4, r6, #4
   12588:	b	12598 <table_unregister_callback@@Base+0x2c>
   1258c:	add	r3, r3, #1
   12590:	cmp	r3, lr
   12594:	beq	12664 <table_unregister_callback@@Base+0xf8>
   12598:	ldr	r5, [r4, #4]!
   1259c:	lsl	ip, r3, #2
   125a0:	cmp	r1, r5
   125a4:	bne	1258c <table_unregister_callback@@Base+0x20>
   125a8:	ldr	r5, [r0, #40]	; 0x28
   125ac:	ldr	r5, [r5, r3, lsl #2]
   125b0:	cmp	r2, r5
   125b4:	bne	1258c <table_unregister_callback@@Base+0x20>
   125b8:	sub	lr, lr, #1
   125bc:	cmp	lr, r3
   125c0:	bgt	125cc <table_unregister_callback@@Base+0x60>
   125c4:	b	12608 <table_unregister_callback@@Base+0x9c>
   125c8:	ldr	r6, [r0, #36]	; 0x24
   125cc:	add	r2, ip, #4
   125d0:	add	r3, r3, #1
   125d4:	ldr	r1, [r6, r2]
   125d8:	str	r1, [r6, ip]
   125dc:	ldr	r1, [r0, #40]	; 0x28
   125e0:	ldr	lr, [r1, r2]
   125e4:	str	lr, [r1, ip]
   125e8:	ldr	r1, [r0, #44]	; 0x2c
   125ec:	ldr	lr, [r1, r2]
   125f0:	str	lr, [r1, ip]
   125f4:	ldr	lr, [r0, #32]
   125f8:	mov	ip, r2
   125fc:	sub	lr, lr, #1
   12600:	cmp	lr, r3
   12604:	bgt	125c8 <table_unregister_callback@@Base+0x5c>
   12608:	ldr	r6, [r0, #48]	; 0x30
   1260c:	str	lr, [r0, #32]
   12610:	mov	r4, r0
   12614:	mov	r1, r6
   12618:	mov	r0, lr
   1261c:	bl	149a4 <table_cell_nullify@@Base+0x218>
   12620:	cmp	r1, #0
   12624:	popne	{r4, r5, r6, pc}
   12628:	ldr	r5, [r4, #52]	; 0x34
   1262c:	sub	r5, r5, r6
   12630:	cmp	r5, #0
   12634:	str	r5, [r4, #52]	; 0x34
   12638:	bne	12668 <table_unregister_callback@@Base+0xfc>
   1263c:	ldr	r0, [r4, #36]	; 0x24
   12640:	bl	11ad8 <free@plt>
   12644:	ldr	r0, [r4, #40]	; 0x28
   12648:	bl	11ad8 <free@plt>
   1264c:	ldr	r0, [r4, #44]	; 0x2c
   12650:	bl	11ad8 <free@plt>
   12654:	str	r5, [r4, #36]	; 0x24
   12658:	str	r5, [r4, #40]	; 0x28
   1265c:	str	r5, [r4, #44]	; 0x2c
   12660:	pop	{r4, r5, r6, pc}
   12664:	pop	{r4, r5, r6, pc}
   12668:	lsl	r1, r5, #2
   1266c:	ldr	r0, [r4, #36]	; 0x24
   12670:	bl	11ae4 <realloc@plt>
   12674:	ldr	r1, [r4, #52]	; 0x34
   12678:	lsl	r1, r1, #2
   1267c:	str	r0, [r4, #36]	; 0x24
   12680:	ldr	r0, [r4, #40]	; 0x28
   12684:	bl	11ae4 <realloc@plt>
   12688:	ldr	r1, [r4, #52]	; 0x34
   1268c:	lsl	r1, r1, #2
   12690:	str	r0, [r4, #40]	; 0x28
   12694:	ldr	r0, [r4, #44]	; 0x2c
   12698:	bl	11ae4 <realloc@plt>
   1269c:	str	r0, [r4, #44]	; 0x2c
   126a0:	pop	{r4, r5, r6, pc}

000126a4 <table_notify@@Base>:
   126a4:	ldr	ip, [r0, #32]
   126a8:	cmp	ip, #0
   126ac:	bxle	lr
   126b0:	push	{r4, r5, r6, r7, r8, r9, lr}
   126b4:	mov	r6, r3
   126b8:	sub	sp, sp, #12
   126bc:	mov	r8, r2
   126c0:	mov	r7, r1
   126c4:	mov	r5, r0
   126c8:	mov	r4, #0
   126cc:	b	126dc <table_notify@@Base+0x38>
   126d0:	add	r4, r4, #1
   126d4:	cmp	ip, r4
   126d8:	ble	12724 <table_notify@@Base+0x80>
   126dc:	ldr	r0, [r5, #44]	; 0x2c
   126e0:	ldr	r0, [r0, r4, lsl #2]
   126e4:	tst	r6, r0
   126e8:	beq	126d0 <table_notify@@Base+0x2c>
   126ec:	ldr	r2, [r5, #40]	; 0x28
   126f0:	ldr	r0, [r5, #36]	; 0x24
   126f4:	mov	r3, r6
   126f8:	ldr	r1, [r2, r4, lsl #2]
   126fc:	mov	r2, r8
   12700:	str	r1, [sp]
   12704:	mov	r1, r7
   12708:	ldr	r9, [r0, r4, lsl #2]
   1270c:	mov	r0, r5
   12710:	blx	r9
   12714:	ldr	ip, [r5, #32]
   12718:	add	r4, r4, #1
   1271c:	cmp	ip, r4
   12720:	bgt	126dc <table_notify@@Base+0x38>
   12724:	add	sp, sp, #12
   12728:	pop	{r4, r5, r6, r7, r8, r9, pc}

0001272c <table_get_column_length@@Base>:
   1272c:	ldr	r0, [r0, #4]
   12730:	bx	lr

00012734 <table_get_col_ptr@@Base>:
   12734:	add	r1, r1, r1, lsl #1
   12738:	ldr	r0, [r0]
   1273c:	add	r0, r0, r1, lsl #2
   12740:	bx	lr

00012744 <table_column_init@@Base>:
   12744:	push	{r4, r5, r6, r7, r8, lr}
   12748:	mov	r5, r2
   1274c:	mov	r7, r3
   12750:	ldr	r6, [sp, #24]
   12754:	bl	12734 <table_get_col_ptr@@Base>
   12758:	mov	r4, r0
   1275c:	mov	r0, r5
   12760:	bl	11b2c <strlen@plt>
   12764:	add	r0, r0, #1
   12768:	bl	11b08 <malloc@plt>
   1276c:	subs	r3, r0, #0
   12770:	str	r0, [r4]
   12774:	beq	12780 <table_column_init@@Base+0x3c>
   12778:	mov	r1, r5
   1277c:	bl	11af0 <strcpy@plt>
   12780:	str	r7, [r4, #4]
   12784:	str	r6, [r4, #8]
   12788:	pop	{r4, r5, r6, r7, r8, pc}

0001278c <table_add_column@@Base>:
   1278c:	push	{r4, r5, r6, r7, r8, r9, lr}
   12790:	mov	r5, r0
   12794:	sub	sp, sp, #12
   12798:	mov	r9, r1
   1279c:	mov	r8, r2
   127a0:	bl	1272c <table_get_column_length@@Base>
   127a4:	ldr	r6, [r5, #8]
   127a8:	mov	r1, r6
   127ac:	bl	149a4 <table_cell_nullify@@Base+0x218>
   127b0:	subs	r4, r1, #0
   127b4:	beq	12848 <table_add_column@@Base+0xbc>
   127b8:	mov	r0, r5
   127bc:	bl	13224 <table_get_row_length@@Base>
   127c0:	mov	r6, r0
   127c4:	mov	r0, r5
   127c8:	bl	1272c <table_get_column_length@@Base>
   127cc:	mov	r7, r0
   127d0:	mov	r0, r8
   127d4:	bl	12f0c <table_get_default_compare_function_for_data_type@@Base>
   127d8:	mov	r3, r8
   127dc:	mov	r2, r9
   127e0:	mov	r1, r7
   127e4:	str	r0, [sp]
   127e8:	mov	r0, r5
   127ec:	bl	12744 <table_column_init@@Base>
   127f0:	cmp	r6, #0
   127f4:	movgt	r4, #0
   127f8:	ble	12818 <table_add_column@@Base+0x8c>
   127fc:	mov	r1, r4
   12800:	mov	r2, r7
   12804:	mov	r0, r5
   12808:	add	r4, r4, #1
   1280c:	bl	14734 <table_cell_init@@Base>
   12810:	cmp	r6, r4
   12814:	bne	127fc <table_add_column@@Base+0x70>
   12818:	mov	r0, r5
   1281c:	bl	1272c <table_get_column_length@@Base>
   12820:	mov	r3, #8
   12824:	mvn	r1, #0
   12828:	mov	r2, r0
   1282c:	mov	r0, r5
   12830:	bl	126a4 <table_notify@@Base>
   12834:	ldr	r0, [r5, #4]
   12838:	add	r3, r0, #1
   1283c:	str	r3, [r5, #4]
   12840:	add	sp, sp, #12
   12844:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12848:	ldr	r1, [r5, #12]
   1284c:	ldr	r0, [r5]
   12850:	add	r6, r6, r1
   12854:	str	r6, [r5, #12]
   12858:	add	r6, r6, r6, lsl #1
   1285c:	lsl	r1, r6, #2
   12860:	bl	11ae4 <realloc@plt>
   12864:	str	r0, [r5]
   12868:	mov	r0, r5
   1286c:	bl	13224 <table_get_row_length@@Base>
   12870:	subs	r7, r0, #0
   12874:	ble	127b8 <table_add_column@@Base+0x2c>
   12878:	mov	r1, r4
   1287c:	mov	r0, r5
   12880:	bl	1322c <table_get_row_ptr@@Base>
   12884:	ldr	r1, [r5, #12]
   12888:	add	r4, r4, #1
   1288c:	lsl	r1, r1, #2
   12890:	mov	r6, r0
   12894:	ldr	r0, [r0]
   12898:	bl	11ae4 <realloc@plt>
   1289c:	cmp	r7, r4
   128a0:	str	r0, [r6]
   128a4:	bne	12878 <table_add_column@@Base+0xec>
   128a8:	b	127b8 <table_add_column@@Base+0x2c>

000128ac <table_column_destroy@@Base>:
   128ac:	push	{r4, lr}
   128b0:	bl	12734 <table_get_col_ptr@@Base>
   128b4:	ldr	r0, [r0]
   128b8:	cmp	r0, #0
   128bc:	popeq	{r4, pc}
   128c0:	pop	{r4, lr}
   128c4:	b	11ad8 <free@plt>

000128c8 <table_remove_column@@Base>:
   128c8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   128cc:	mov	r6, r0
   128d0:	mov	r9, r1
   128d4:	bl	128ac <table_column_destroy@@Base>
   128d8:	mov	r0, r6
   128dc:	bl	1272c <table_get_column_length@@Base>
   128e0:	sub	r4, r0, #1
   128e4:	cmp	r9, r4
   128e8:	addlt	r3, r9, r9, lsl #1
   128ec:	movlt	r0, r9
   128f0:	lsllt	r3, r3, #2
   128f4:	bge	12930 <table_remove_column@@Base+0x68>
   128f8:	ldr	r2, [r6]
   128fc:	add	ip, r3, #12
   12900:	add	r1, r2, ip
   12904:	add	r0, r0, #1
   12908:	ldr	r5, [r1, #4]
   1290c:	ldr	lr, [r1, #8]
   12910:	ldr	r7, [r1]
   12914:	add	r1, r2, r3
   12918:	cmp	r0, r4
   1291c:	str	r7, [r2, r3]
   12920:	str	r5, [r1, #4]
   12924:	str	lr, [r1, #8]
   12928:	mov	r3, ip
   1292c:	bne	128f8 <table_remove_column@@Base+0x30>
   12930:	mov	r0, r6
   12934:	bl	13224 <table_get_row_length@@Base>
   12938:	subs	r7, r0, #0
   1293c:	lslgt	r8, r9, #2
   12940:	movgt	r5, #0
   12944:	ble	129a0 <table_remove_column@@Base+0xd8>
   12948:	mov	r2, r9
   1294c:	mov	r1, r5
   12950:	mov	r0, r6
   12954:	bl	14748 <table_cell_destroy@@Base>
   12958:	mov	r1, r5
   1295c:	mov	r0, r6
   12960:	bl	1322c <table_get_row_ptr@@Base>
   12964:	cmp	r9, r4
   12968:	movlt	r2, r8
   1296c:	movlt	r3, r9
   12970:	bge	12994 <table_remove_column@@Base+0xcc>
   12974:	ldr	ip, [r0]
   12978:	add	r1, r2, #4
   1297c:	add	r3, r3, #1
   12980:	ldr	lr, [ip, r1]
   12984:	cmp	r3, r4
   12988:	str	lr, [ip, r2]
   1298c:	mov	r2, r1
   12990:	bne	12974 <table_remove_column@@Base+0xac>
   12994:	add	r5, r5, #1
   12998:	cmp	r7, r5
   1299c:	bne	12948 <table_remove_column@@Base+0x80>
   129a0:	ldr	r3, [r6, #4]
   129a4:	mov	r0, r6
   129a8:	sub	r3, r3, #1
   129ac:	str	r3, [r6, #4]
   129b0:	bl	1272c <table_get_column_length@@Base>
   129b4:	ldr	r5, [r6, #8]
   129b8:	mov	r1, r5
   129bc:	bl	149a4 <table_cell_nullify@@Base+0x218>
   129c0:	subs	r4, r1, #0
   129c4:	beq	129e4 <table_remove_column@@Base+0x11c>
   129c8:	mov	r0, r6
   129cc:	mov	r2, r9
   129d0:	mov	r3, #16
   129d4:	mvn	r1, #0
   129d8:	bl	126a4 <table_notify@@Base>
   129dc:	mov	r0, #0
   129e0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   129e4:	ldr	r1, [r6, #12]
   129e8:	ldr	r0, [r6]
   129ec:	sub	r1, r1, r5
   129f0:	str	r1, [r6, #12]
   129f4:	add	r1, r1, r1, lsl #1
   129f8:	lsl	r1, r1, #2
   129fc:	bl	11ae4 <realloc@plt>
   12a00:	str	r0, [r6]
   12a04:	mov	r0, r6
   12a08:	bl	13224 <table_get_row_length@@Base>
   12a0c:	subs	r7, r0, #0
   12a10:	ble	129c8 <table_remove_column@@Base+0x100>
   12a14:	mov	r1, r4
   12a18:	mov	r0, r6
   12a1c:	bl	1322c <table_get_row_ptr@@Base>
   12a20:	ldr	r1, [r6, #12]
   12a24:	add	r4, r4, #1
   12a28:	lsl	r1, r1, #2
   12a2c:	mov	r5, r0
   12a30:	ldr	r0, [r0]
   12a34:	bl	11ae4 <realloc@plt>
   12a38:	cmp	r7, r4
   12a3c:	str	r0, [r5]
   12a40:	bne	12a14 <table_remove_column@@Base+0x14c>
   12a44:	b	129c8 <table_remove_column@@Base+0x100>

00012a48 <table_get_column_data_type@@Base>:
   12a48:	push	{r4, lr}
   12a4c:	bl	12734 <table_get_col_ptr@@Base>
   12a50:	ldr	r0, [r0, #4]
   12a54:	pop	{r4, pc}

00012a58 <table_get_column_name@@Base>:
   12a58:	push	{r4, lr}
   12a5c:	bl	12734 <table_get_col_ptr@@Base>
   12a60:	ldr	r0, [r0]
   12a64:	pop	{r4, pc}

00012a68 <table_get_column@@Base>:
   12a68:	push	{r4, r5, r6, r7, r8, lr}
   12a6c:	mov	r6, r1
   12a70:	mov	r5, r0
   12a74:	bl	1272c <table_get_column_length@@Base>
   12a78:	subs	r7, r0, #0
   12a7c:	ble	12ac4 <table_get_column@@Base+0x5c>
   12a80:	mov	r4, #0
   12a84:	b	12a94 <table_get_column@@Base+0x2c>
   12a88:	add	r4, r4, #1
   12a8c:	cmp	r7, r4
   12a90:	beq	12ab8 <table_get_column@@Base+0x50>
   12a94:	mov	r1, r4
   12a98:	mov	r0, r5
   12a9c:	bl	12a58 <table_get_column_name@@Base>
   12aa0:	mov	r1, r6
   12aa4:	bl	11ac0 <strcmp@plt>
   12aa8:	cmp	r0, #0
   12aac:	bne	12a88 <table_get_column@@Base+0x20>
   12ab0:	mov	r0, r4
   12ab4:	pop	{r4, r5, r6, r7, r8, pc}
   12ab8:	mvn	r4, #0
   12abc:	mov	r0, r4
   12ac0:	pop	{r4, r5, r6, r7, r8, pc}
   12ac4:	mvneq	r4, #0
   12ac8:	movne	r4, #0
   12acc:	b	12ab0 <table_get_column@@Base+0x48>

00012ad0 <table_get_column_compare_function@@Base>:
   12ad0:	push	{r4, lr}
   12ad4:	bl	12734 <table_get_col_ptr@@Base>
   12ad8:	ldr	r0, [r0, #8]
   12adc:	pop	{r4, pc}

00012ae0 <table_set_column_compare_function@@Base>:
   12ae0:	push	{r4, lr}
   12ae4:	mov	r4, r2
   12ae8:	bl	12734 <table_get_col_ptr@@Base>
   12aec:	str	r4, [r0, #8]
   12af0:	pop	{r4, pc}

00012af4 <table_compare_bool@@Base>:
   12af4:	cmp	r0, #0
   12af8:	beq	12b28 <table_compare_bool@@Base+0x34>
   12afc:	cmp	r1, #0
   12b00:	beq	12b20 <table_compare_bool@@Base+0x2c>
   12b04:	ldrb	r2, [r0]
   12b08:	ldrb	r3, [r1]
   12b0c:	cmp	r2, r3
   12b10:	bgt	12b20 <table_compare_bool@@Base+0x2c>
   12b14:	mvnlt	r0, #0
   12b18:	movge	r0, #0
   12b1c:	bx	lr
   12b20:	mov	r0, #1
   12b24:	bx	lr
   12b28:	adds	r0, r1, #0
   12b2c:	mvnne	r0, #0
   12b30:	bx	lr

00012b34 <table_compare_int8@@Base>:
   12b34:	cmp	r0, #0
   12b38:	beq	12b68 <table_compare_int8@@Base+0x34>
   12b3c:	cmp	r1, #0
   12b40:	beq	12b60 <table_compare_int8@@Base+0x2c>
   12b44:	ldrsb	r2, [r0]
   12b48:	ldrsb	r3, [r1]
   12b4c:	cmp	r2, r3
   12b50:	bgt	12b60 <table_compare_int8@@Base+0x2c>
   12b54:	mvnlt	r0, #0
   12b58:	movge	r0, #0
   12b5c:	bx	lr
   12b60:	mov	r0, #1
   12b64:	bx	lr
   12b68:	adds	r0, r1, #0
   12b6c:	mvnne	r0, #0
   12b70:	bx	lr

00012b74 <table_compare_int32@@Base>:
   12b74:	cmp	r0, #0
   12b78:	beq	12ba8 <table_compare_int32@@Base+0x34>
   12b7c:	cmp	r1, #0
   12b80:	beq	12ba0 <table_compare_int32@@Base+0x2c>
   12b84:	ldr	r2, [r0]
   12b88:	ldr	r3, [r1]
   12b8c:	cmp	r2, r3
   12b90:	bgt	12ba0 <table_compare_int32@@Base+0x2c>
   12b94:	mvnlt	r0, #0
   12b98:	movge	r0, #0
   12b9c:	bx	lr
   12ba0:	mov	r0, #1
   12ba4:	bx	lr
   12ba8:	adds	r0, r1, #0
   12bac:	mvnne	r0, #0
   12bb0:	bx	lr

00012bb4 <table_compare_uint32@@Base>:
   12bb4:	cmp	r0, #0
   12bb8:	beq	12be8 <table_compare_uint32@@Base+0x34>
   12bbc:	cmp	r1, #0
   12bc0:	beq	12be0 <table_compare_uint32@@Base+0x2c>
   12bc4:	ldr	r2, [r0]
   12bc8:	ldr	r3, [r1]
   12bcc:	cmp	r2, r3
   12bd0:	bhi	12be0 <table_compare_uint32@@Base+0x2c>
   12bd4:	mvncc	r0, #0
   12bd8:	movcs	r0, #0
   12bdc:	bx	lr
   12be0:	mov	r0, #1
   12be4:	bx	lr
   12be8:	adds	r0, r1, #0
   12bec:	mvnne	r0, #0
   12bf0:	bx	lr

00012bf4 <table_compare_uint64@@Base>:
   12bf4:	cmp	r0, #0
   12bf8:	beq	12c30 <table_compare_uint64@@Base+0x3c>
   12bfc:	cmp	r1, #0
   12c00:	beq	12c3c <table_compare_uint64@@Base+0x48>
   12c04:	ldrd	r2, [r1]
   12c08:	push	{r4, r5}
   12c0c:	ldrd	r4, [r0]
   12c10:	cmp	r5, r3
   12c14:	cmpeq	r4, r2
   12c18:	movhi	r0, #1
   12c1c:	bhi	12c28 <table_compare_uint64@@Base+0x34>
   12c20:	mvncc	r0, #0
   12c24:	movcs	r0, #0
   12c28:	pop	{r4, r5}
   12c2c:	bx	lr
   12c30:	adds	r0, r1, #0
   12c34:	mvnne	r0, #0
   12c38:	bx	lr
   12c3c:	mov	r0, #1
   12c40:	bx	lr

00012c44 <table_compare_short@@Base>:
   12c44:	cmp	r0, #0
   12c48:	beq	12c78 <table_compare_short@@Base+0x34>
   12c4c:	cmp	r1, #0
   12c50:	beq	12c70 <table_compare_short@@Base+0x2c>
   12c54:	ldrsh	r2, [r0]
   12c58:	ldrsh	r3, [r1]
   12c5c:	cmp	r2, r3
   12c60:	bgt	12c70 <table_compare_short@@Base+0x2c>
   12c64:	mvnlt	r0, #0
   12c68:	movge	r0, #0
   12c6c:	bx	lr
   12c70:	mov	r0, #1
   12c74:	bx	lr
   12c78:	adds	r0, r1, #0
   12c7c:	mvnne	r0, #0
   12c80:	bx	lr

00012c84 <table_compare_ushort@@Base>:
   12c84:	cmp	r0, #0
   12c88:	beq	12cb8 <table_compare_ushort@@Base+0x34>
   12c8c:	cmp	r1, #0
   12c90:	beq	12cb0 <table_compare_ushort@@Base+0x2c>
   12c94:	ldrh	r2, [r0]
   12c98:	ldrh	r3, [r1]
   12c9c:	cmp	r2, r3
   12ca0:	bhi	12cb0 <table_compare_ushort@@Base+0x2c>
   12ca4:	mvncc	r0, #0
   12ca8:	movcs	r0, #0
   12cac:	bx	lr
   12cb0:	mov	r0, #1
   12cb4:	bx	lr
   12cb8:	adds	r0, r1, #0
   12cbc:	mvnne	r0, #0
   12cc0:	bx	lr

00012cc4 <table_compare_long@@Base>:
   12cc4:	cmp	r0, #0
   12cc8:	beq	12cf8 <table_compare_long@@Base+0x34>
   12ccc:	cmp	r1, #0
   12cd0:	beq	12cf0 <table_compare_long@@Base+0x2c>
   12cd4:	ldr	r2, [r0]
   12cd8:	ldr	r3, [r1]
   12cdc:	cmp	r2, r3
   12ce0:	bgt	12cf0 <table_compare_long@@Base+0x2c>
   12ce4:	mvnlt	r0, #0
   12ce8:	movge	r0, #0
   12cec:	bx	lr
   12cf0:	mov	r0, #1
   12cf4:	bx	lr
   12cf8:	adds	r0, r1, #0
   12cfc:	mvnne	r0, #0
   12d00:	bx	lr

00012d04 <table_compare_llong@@Base>:
   12d04:	cmp	r0, #0
   12d08:	beq	12d48 <table_compare_llong@@Base+0x44>
   12d0c:	cmp	r1, #0
   12d10:	beq	12d54 <table_compare_llong@@Base+0x50>
   12d14:	ldrd	r2, [r1]
   12d18:	push	{r4, r5}
   12d1c:	ldrd	r4, [r0]
   12d20:	cmp	r2, r4
   12d24:	sbcs	r1, r3, r5
   12d28:	movlt	r0, #1
   12d2c:	blt	12d40 <table_compare_llong@@Base+0x3c>
   12d30:	cmp	r4, r2
   12d34:	sbcs	r3, r5, r3
   12d38:	mvnlt	r0, #0
   12d3c:	movge	r0, #0
   12d40:	pop	{r4, r5}
   12d44:	bx	lr
   12d48:	adds	r0, r1, #0
   12d4c:	mvnne	r0, #0
   12d50:	bx	lr
   12d54:	mov	r0, #1
   12d58:	bx	lr

00012d5c <table_compare_ullong@@Base>:
   12d5c:	cmp	r0, #0
   12d60:	beq	12d90 <table_compare_ullong@@Base+0x34>
   12d64:	cmp	r1, #0
   12d68:	beq	12d88 <table_compare_ullong@@Base+0x2c>
   12d6c:	ldr	r2, [r0]
   12d70:	ldr	r3, [r1]
   12d74:	cmp	r2, r3
   12d78:	bhi	12d88 <table_compare_ullong@@Base+0x2c>
   12d7c:	mvncc	r0, #0
   12d80:	movcs	r0, #0
   12d84:	bx	lr
   12d88:	mov	r0, #1
   12d8c:	bx	lr
   12d90:	adds	r0, r1, #0
   12d94:	mvnne	r0, #0
   12d98:	bx	lr

00012d9c <table_compare_float@@Base>:
   12d9c:	cmp	r0, #0
   12da0:	beq	12dd4 <table_compare_float@@Base+0x38>
   12da4:	cmp	r1, #0
   12da8:	beq	12dcc <table_compare_float@@Base+0x30>
   12dac:	vldr	s14, [r0]
   12db0:	vldr	s15, [r1]
   12db4:	vcmpe.f32	s14, s15
   12db8:	vmrs	APSR_nzcv, fpscr
   12dbc:	bgt	12dcc <table_compare_float@@Base+0x30>
   12dc0:	mvnmi	r0, #0
   12dc4:	movpl	r0, #0
   12dc8:	bx	lr
   12dcc:	mov	r0, #1
   12dd0:	bx	lr
   12dd4:	adds	r0, r1, #0
   12dd8:	mvnne	r0, #0
   12ddc:	bx	lr

00012de0 <table_compare_double@@Base>:
   12de0:	cmp	r0, #0
   12de4:	beq	12e18 <table_compare_double@@Base+0x38>
   12de8:	cmp	r1, #0
   12dec:	beq	12e10 <table_compare_double@@Base+0x30>
   12df0:	vldr	d6, [r0]
   12df4:	vldr	d7, [r1]
   12df8:	vcmpe.f64	d6, d7
   12dfc:	vmrs	APSR_nzcv, fpscr
   12e00:	bgt	12e10 <table_compare_double@@Base+0x30>
   12e04:	mvnmi	r0, #0
   12e08:	movpl	r0, #0
   12e0c:	bx	lr
   12e10:	mov	r0, #1
   12e14:	bx	lr
   12e18:	adds	r0, r1, #0
   12e1c:	mvnne	r0, #0
   12e20:	bx	lr

00012e24 <table_compare_ldouble@@Base>:
   12e24:	cmp	r0, #0
   12e28:	beq	12e5c <table_compare_ldouble@@Base+0x38>
   12e2c:	cmp	r1, #0
   12e30:	beq	12e54 <table_compare_ldouble@@Base+0x30>
   12e34:	vldr	d6, [r0]
   12e38:	vldr	d7, [r1]
   12e3c:	vcmpe.f64	d6, d7
   12e40:	vmrs	APSR_nzcv, fpscr
   12e44:	bgt	12e54 <table_compare_ldouble@@Base+0x30>
   12e48:	mvnmi	r0, #0
   12e4c:	movpl	r0, #0
   12e50:	bx	lr
   12e54:	mov	r0, #1
   12e58:	bx	lr
   12e5c:	adds	r0, r1, #0
   12e60:	mvnne	r0, #0
   12e64:	bx	lr

00012e68 <table_compare_uchar@@Base>:
   12e68:	cmp	r0, #0
   12e6c:	beq	12e9c <table_compare_uchar@@Base+0x34>
   12e70:	cmp	r1, #0
   12e74:	beq	12e94 <table_compare_uchar@@Base+0x2c>
   12e78:	ldrb	r2, [r0]
   12e7c:	ldrb	r3, [r1]
   12e80:	cmp	r2, r3
   12e84:	bhi	12e94 <table_compare_uchar@@Base+0x2c>
   12e88:	mvncc	r0, #0
   12e8c:	movcs	r0, #0
   12e90:	bx	lr
   12e94:	mov	r0, #1
   12e98:	bx	lr
   12e9c:	adds	r0, r1, #0
   12ea0:	mvnne	r0, #0
   12ea4:	bx	lr

00012ea8 <table_compare_ptr@@Base>:
   12ea8:	cmp	r0, r1
   12eac:	bhi	12ebc <table_compare_ptr@@Base+0x14>
   12eb0:	mvncc	r0, #0
   12eb4:	movcs	r0, #0
   12eb8:	bx	lr
   12ebc:	mov	r0, #1
   12ec0:	bx	lr

00012ec4 <table_compare_string@@Base>:
   12ec4:	cmp	r0, #0
   12ec8:	beq	12ed8 <table_compare_string@@Base+0x14>
   12ecc:	cmp	r1, #0
   12ed0:	beq	12ee4 <table_compare_string@@Base+0x20>
   12ed4:	b	11ac0 <strcmp@plt>
   12ed8:	adds	r0, r1, #0
   12edc:	mvnne	r0, #0
   12ee0:	bx	lr
   12ee4:	mov	r0, #1
   12ee8:	bx	lr

00012eec <table_compare_uint16@@Base>:
   12eec:	b	12c84 <table_compare_ushort@@Base>

00012ef0 <table_compare_int16@@Base>:
   12ef0:	b	12c44 <table_compare_short@@Base>

00012ef4 <table_compare_int64@@Base>:
   12ef4:	b	12d04 <table_compare_llong@@Base>

00012ef8 <table_compare_char@@Base>:
   12ef8:	b	12e68 <table_compare_uchar@@Base>

00012efc <table_compare_uint8@@Base>:
   12efc:	b	12e68 <table_compare_uchar@@Base>

00012f00 <table_compare_ulong@@Base>:
   12f00:	b	12d5c <table_compare_ullong@@Base>

00012f04 <table_compare_uint@@Base>:
   12f04:	b	12bb4 <table_compare_uint32@@Base>

00012f08 <table_compare_int@@Base>:
   12f08:	b	12b74 <table_compare_int32@@Base>

00012f0c <table_get_default_compare_function_for_data_type@@Base>:
   12f0c:	ldr	r3, [pc, #404]	; 130a8 <table_get_default_compare_function_for_data_type@@Base+0x19c>
   12f10:	add	r3, pc, r3
   12f14:	cmp	r0, #23
   12f18:	addls	pc, pc, r0, lsl #2
   12f1c:	b	130a0 <table_get_default_compare_function_for_data_type@@Base+0x194>
   12f20:	b	13094 <table_get_default_compare_function_for_data_type@@Base+0x188>
   12f24:	b	13088 <table_get_default_compare_function_for_data_type@@Base+0x17c>
   12f28:	b	1307c <table_get_default_compare_function_for_data_type@@Base+0x170>
   12f2c:	b	13070 <table_get_default_compare_function_for_data_type@@Base+0x164>
   12f30:	b	13064 <table_get_default_compare_function_for_data_type@@Base+0x158>
   12f34:	b	13058 <table_get_default_compare_function_for_data_type@@Base+0x14c>
   12f38:	b	1304c <table_get_default_compare_function_for_data_type@@Base+0x140>
   12f3c:	b	13040 <table_get_default_compare_function_for_data_type@@Base+0x134>
   12f40:	b	13034 <table_get_default_compare_function_for_data_type@@Base+0x128>
   12f44:	b	13028 <table_get_default_compare_function_for_data_type@@Base+0x11c>
   12f48:	b	1301c <table_get_default_compare_function_for_data_type@@Base+0x110>
   12f4c:	b	13010 <table_get_default_compare_function_for_data_type@@Base+0x104>
   12f50:	b	13004 <table_get_default_compare_function_for_data_type@@Base+0xf8>
   12f54:	b	12ff8 <table_get_default_compare_function_for_data_type@@Base+0xec>
   12f58:	b	12fec <table_get_default_compare_function_for_data_type@@Base+0xe0>
   12f5c:	b	12fe0 <table_get_default_compare_function_for_data_type@@Base+0xd4>
   12f60:	b	12fd4 <table_get_default_compare_function_for_data_type@@Base+0xc8>
   12f64:	b	12fc8 <table_get_default_compare_function_for_data_type@@Base+0xbc>
   12f68:	b	12fbc <table_get_default_compare_function_for_data_type@@Base+0xb0>
   12f6c:	b	12fb0 <table_get_default_compare_function_for_data_type@@Base+0xa4>
   12f70:	b	12fa4 <table_get_default_compare_function_for_data_type@@Base+0x98>
   12f74:	b	12f98 <table_get_default_compare_function_for_data_type@@Base+0x8c>
   12f78:	b	12f8c <table_get_default_compare_function_for_data_type@@Base+0x80>
   12f7c:	b	12f80 <table_get_default_compare_function_for_data_type@@Base+0x74>
   12f80:	ldr	r2, [pc, #292]	; 130ac <table_get_default_compare_function_for_data_type@@Base+0x1a0>
   12f84:	ldr	r0, [r3, r2]
   12f88:	bx	lr
   12f8c:	ldr	r2, [pc, #284]	; 130b0 <table_get_default_compare_function_for_data_type@@Base+0x1a4>
   12f90:	ldr	r0, [r3, r2]
   12f94:	bx	lr
   12f98:	ldr	r2, [pc, #276]	; 130b4 <table_get_default_compare_function_for_data_type@@Base+0x1a8>
   12f9c:	ldr	r0, [r3, r2]
   12fa0:	bx	lr
   12fa4:	ldr	r2, [pc, #268]	; 130b8 <table_get_default_compare_function_for_data_type@@Base+0x1ac>
   12fa8:	ldr	r0, [r3, r2]
   12fac:	bx	lr
   12fb0:	ldr	r2, [pc, #260]	; 130bc <table_get_default_compare_function_for_data_type@@Base+0x1b0>
   12fb4:	ldr	r0, [r3, r2]
   12fb8:	bx	lr
   12fbc:	ldr	r2, [pc, #252]	; 130c0 <table_get_default_compare_function_for_data_type@@Base+0x1b4>
   12fc0:	ldr	r0, [r3, r2]
   12fc4:	bx	lr
   12fc8:	ldr	r2, [pc, #244]	; 130c4 <table_get_default_compare_function_for_data_type@@Base+0x1b8>
   12fcc:	ldr	r0, [r3, r2]
   12fd0:	bx	lr
   12fd4:	ldr	r2, [pc, #236]	; 130c8 <table_get_default_compare_function_for_data_type@@Base+0x1bc>
   12fd8:	ldr	r0, [r3, r2]
   12fdc:	bx	lr
   12fe0:	ldr	r2, [pc, #228]	; 130cc <table_get_default_compare_function_for_data_type@@Base+0x1c0>
   12fe4:	ldr	r0, [r3, r2]
   12fe8:	bx	lr
   12fec:	ldr	r2, [pc, #220]	; 130d0 <table_get_default_compare_function_for_data_type@@Base+0x1c4>
   12ff0:	ldr	r0, [r3, r2]
   12ff4:	bx	lr
   12ff8:	ldr	r2, [pc, #212]	; 130d4 <table_get_default_compare_function_for_data_type@@Base+0x1c8>
   12ffc:	ldr	r0, [r3, r2]
   13000:	bx	lr
   13004:	ldr	r2, [pc, #204]	; 130d8 <table_get_default_compare_function_for_data_type@@Base+0x1cc>
   13008:	ldr	r0, [r3, r2]
   1300c:	bx	lr
   13010:	ldr	r2, [pc, #196]	; 130dc <table_get_default_compare_function_for_data_type@@Base+0x1d0>
   13014:	ldr	r0, [r3, r2]
   13018:	bx	lr
   1301c:	ldr	r2, [pc, #188]	; 130e0 <table_get_default_compare_function_for_data_type@@Base+0x1d4>
   13020:	ldr	r0, [r3, r2]
   13024:	bx	lr
   13028:	ldr	r2, [pc, #180]	; 130e4 <table_get_default_compare_function_for_data_type@@Base+0x1d8>
   1302c:	ldr	r0, [r3, r2]
   13030:	bx	lr
   13034:	ldr	r2, [pc, #172]	; 130e8 <table_get_default_compare_function_for_data_type@@Base+0x1dc>
   13038:	ldr	r0, [r3, r2]
   1303c:	bx	lr
   13040:	ldr	r2, [pc, #164]	; 130ec <table_get_default_compare_function_for_data_type@@Base+0x1e0>
   13044:	ldr	r0, [r3, r2]
   13048:	bx	lr
   1304c:	ldr	r2, [pc, #156]	; 130f0 <table_get_default_compare_function_for_data_type@@Base+0x1e4>
   13050:	ldr	r0, [r3, r2]
   13054:	bx	lr
   13058:	ldr	r2, [pc, #148]	; 130f4 <table_get_default_compare_function_for_data_type@@Base+0x1e8>
   1305c:	ldr	r0, [r3, r2]
   13060:	bx	lr
   13064:	ldr	r2, [pc, #140]	; 130f8 <table_get_default_compare_function_for_data_type@@Base+0x1ec>
   13068:	ldr	r0, [r3, r2]
   1306c:	bx	lr
   13070:	ldr	r2, [pc, #132]	; 130fc <table_get_default_compare_function_for_data_type@@Base+0x1f0>
   13074:	ldr	r0, [r3, r2]
   13078:	bx	lr
   1307c:	ldr	r2, [pc, #124]	; 13100 <table_get_default_compare_function_for_data_type@@Base+0x1f4>
   13080:	ldr	r0, [r3, r2]
   13084:	bx	lr
   13088:	ldr	r2, [pc, #116]	; 13104 <table_get_default_compare_function_for_data_type@@Base+0x1f8>
   1308c:	ldr	r0, [r3, r2]
   13090:	bx	lr
   13094:	ldr	r2, [pc, #108]	; 13108 <table_get_default_compare_function_for_data_type@@Base+0x1fc>
   13098:	ldr	r0, [r3, r2]
   1309c:	bx	lr
   130a0:	mov	r0, #0
   130a4:	bx	lr
   130a8:	andeq	r2, r1, r8, ror #1
   130ac:	andeq	r0, r0, r0, ror r0
   130b0:	andeq	r0, r0, ip, asr #32
   130b4:	muleq	r0, r8, r0
   130b8:	andeq	r0, r0, r0, lsr #1
   130bc:	andeq	r0, r0, r0, asr r0
   130c0:	andeq	r0, r0, r8, asr #32
   130c4:	andeq	r0, r0, r4, asr r0
   130c8:	andeq	r0, r0, r8, asr r0
   130cc:	andeq	r0, r0, r8, lsl #1
   130d0:	andeq	r0, r0, r0, lsl #1
   130d4:	andeq	r0, r0, r4, lsl #1
   130d8:	andeq	r0, r0, ip, ror r0
   130dc:	andeq	r0, r0, ip, asr r0
   130e0:	andeq	r0, r0, r4, rrx
   130e4:	andeq	r0, r0, r4, ror r0
   130e8:	muleq	r0, ip, r0
   130ec:	muleq	r0, r0, r0
   130f0:	andeq	r0, r0, r8, ror r0
   130f4:	andeq	r0, r0, r0, rrx
   130f8:	muleq	r0, r4, r0
   130fc:	andeq	r0, r0, ip, lsl #1
   13100:	andeq	r0, r0, r4, asr #32
   13104:	andeq	r0, r0, r4, lsr #1
   13108:	andeq	r0, r0, ip, rrx

0001310c <table_get@@Base>:
   1310c:	push	{r4, lr}
   13110:	bl	1471c <table_get_cell_ptr@@Base>
   13114:	ldr	r0, [r0]
   13118:	pop	{r4, pc}

0001311c <table_get_bool@@Base>:
   1311c:	push	{r4, lr}
   13120:	bl	1310c <table_get@@Base>
   13124:	ldrb	r0, [r0]
   13128:	pop	{r4, pc}

0001312c <table_get_int8@@Base>:
   1312c:	push	{r4, lr}
   13130:	bl	1310c <table_get@@Base>
   13134:	ldrsb	r0, [r0]
   13138:	pop	{r4, pc}

0001313c <table_get_int32@@Base>:
   1313c:	push	{r4, lr}
   13140:	bl	1310c <table_get@@Base>
   13144:	ldr	r0, [r0]
   13148:	pop	{r4, pc}

0001314c <table_get_int@@Base>:
   1314c:	b	1313c <table_get_int32@@Base>

00013150 <table_get_uint32@@Base>:
   13150:	push	{r4, lr}
   13154:	bl	1310c <table_get@@Base>
   13158:	ldr	r0, [r0]
   1315c:	pop	{r4, pc}

00013160 <table_get_uint@@Base>:
   13160:	b	13150 <table_get_uint32@@Base>

00013164 <table_get_short@@Base>:
   13164:	push	{r4, lr}
   13168:	bl	1310c <table_get@@Base>
   1316c:	ldrsh	r0, [r0]
   13170:	pop	{r4, pc}

00013174 <table_get_int16@@Base>:
   13174:	b	13164 <table_get_short@@Base>

00013178 <table_get_ushort@@Base>:
   13178:	push	{r4, lr}
   1317c:	bl	1310c <table_get@@Base>
   13180:	ldrh	r0, [r0]
   13184:	pop	{r4, pc}

00013188 <table_get_uint16@@Base>:
   13188:	b	13178 <table_get_ushort@@Base>

0001318c <table_get_long@@Base>:
   1318c:	push	{r4, lr}
   13190:	bl	1310c <table_get@@Base>
   13194:	ldr	r0, [r0]
   13198:	pop	{r4, pc}

0001319c <table_get_ulong@@Base>:
   1319c:	push	{r4, lr}
   131a0:	bl	1310c <table_get@@Base>
   131a4:	ldr	r0, [r0]
   131a8:	pop	{r4, pc}

000131ac <table_get_llong@@Base>:
   131ac:	push	{r4, lr}
   131b0:	bl	1310c <table_get@@Base>
   131b4:	ldrd	r0, [r0]
   131b8:	pop	{r4, pc}

000131bc <table_get_int64@@Base>:
   131bc:	b	131ac <table_get_llong@@Base>

000131c0 <table_get_ullong@@Base>:
   131c0:	push	{r4, lr}
   131c4:	bl	1310c <table_get@@Base>
   131c8:	ldrd	r0, [r0]
   131cc:	pop	{r4, pc}

000131d0 <table_get_uint64@@Base>:
   131d0:	b	131c0 <table_get_ullong@@Base>

000131d4 <table_get_float@@Base>:
   131d4:	push	{r4, lr}
   131d8:	bl	1310c <table_get@@Base>
   131dc:	vldr	s0, [r0]
   131e0:	pop	{r4, pc}

000131e4 <table_get_double@@Base>:
   131e4:	push	{r4, lr}
   131e8:	bl	1310c <table_get@@Base>
   131ec:	vldr	d0, [r0]
   131f0:	pop	{r4, pc}

000131f4 <table_get_ldouble@@Base>:
   131f4:	push	{r4, lr}
   131f8:	bl	1310c <table_get@@Base>
   131fc:	vldr	d0, [r0]
   13200:	pop	{r4, pc}

00013204 <table_get_uchar@@Base>:
   13204:	push	{r4, lr}
   13208:	bl	1310c <table_get@@Base>
   1320c:	ldrb	r0, [r0]
   13210:	pop	{r4, pc}

00013214 <table_get_char@@Base>:
   13214:	b	13204 <table_get_uchar@@Base>

00013218 <table_get_uint8@@Base>:
   13218:	b	13204 <table_get_uchar@@Base>

0001321c <table_get_string@@Base>:
   1321c:	b	1310c <table_get@@Base>

00013220 <table_get_ptr@@Base>:
   13220:	b	1310c <table_get@@Base>

00013224 <table_get_row_length@@Base>:
   13224:	ldr	r0, [r0, #20]
   13228:	bx	lr

0001322c <table_get_row_ptr@@Base>:
   1322c:	ldr	r0, [r0, #16]
   13230:	add	r0, r0, r1, lsl #2
   13234:	bx	lr

00013238 <table_row_init@@Base>:
   13238:	push	{r4, r5, r6, lr}
   1323c:	mov	r5, r0
   13240:	bl	1322c <table_get_row_ptr@@Base>
   13244:	mov	r4, r0
   13248:	ldr	r0, [r5, #12]
   1324c:	lsl	r0, r0, #2
   13250:	bl	11b08 <malloc@plt>
   13254:	str	r0, [r4]
   13258:	pop	{r4, r5, r6, pc}

0001325c <table_add_row@@Base>:
   1325c:	push	{r4, r5, r6, r7, r8, lr}
   13260:	mov	r5, r0
   13264:	bl	13224 <table_get_row_length@@Base>
   13268:	ldr	r4, [r5, #24]
   1326c:	mov	r1, r4
   13270:	bl	149a4 <table_cell_nullify@@Base+0x218>
   13274:	cmp	r1, #0
   13278:	bne	13298 <table_add_row@@Base+0x3c>
   1327c:	ldr	r1, [r5, #28]
   13280:	ldr	r0, [r5, #16]
   13284:	add	r1, r4, r1
   13288:	str	r1, [r5, #28]
   1328c:	lsl	r1, r1, #2
   13290:	bl	11ae4 <realloc@plt>
   13294:	str	r0, [r5, #16]
   13298:	mov	r0, r5
   1329c:	bl	13224 <table_get_row_length@@Base>
   132a0:	mov	r6, r0
   132a4:	mov	r0, r5
   132a8:	bl	1272c <table_get_column_length@@Base>
   132ac:	mov	r1, r6
   132b0:	mov	r7, r0
   132b4:	mov	r0, r5
   132b8:	bl	13238 <table_row_init@@Base>
   132bc:	cmp	r7, #0
   132c0:	ble	132e4 <table_add_row@@Base+0x88>
   132c4:	mov	r4, #0
   132c8:	mov	r2, r4
   132cc:	mov	r1, r6
   132d0:	add	r4, r4, #1
   132d4:	mov	r0, r5
   132d8:	bl	14734 <table_cell_init@@Base>
   132dc:	cmp	r7, r4
   132e0:	bne	132c8 <table_add_row@@Base+0x6c>
   132e4:	mov	r0, r5
   132e8:	bl	13224 <table_get_row_length@@Base>
   132ec:	mov	r3, #2
   132f0:	mvn	r2, #0
   132f4:	mov	r1, r0
   132f8:	mov	r0, r5
   132fc:	bl	126a4 <table_notify@@Base>
   13300:	ldr	r0, [r5, #20]
   13304:	add	r3, r0, #1
   13308:	str	r3, [r5, #20]
   1330c:	pop	{r4, r5, r6, r7, r8, pc}

00013310 <table_row_destroy@@Base>:
   13310:	push	{r4, r5, r6, r7, r8, lr}
   13314:	mov	r7, r1
   13318:	mov	r6, r0
   1331c:	bl	1272c <table_get_column_length@@Base>
   13320:	mov	r1, r7
   13324:	mov	r5, r0
   13328:	mov	r0, r6
   1332c:	bl	1322c <table_get_row_ptr@@Base>
   13330:	cmp	r5, #0
   13334:	movgt	r4, #0
   13338:	mov	r8, r0
   1333c:	ble	1335c <table_row_destroy@@Base+0x4c>
   13340:	mov	r2, r4
   13344:	mov	r1, r7
   13348:	add	r4, r4, #1
   1334c:	mov	r0, r6
   13350:	bl	14748 <table_cell_destroy@@Base>
   13354:	cmp	r5, r4
   13358:	bne	13340 <table_row_destroy@@Base+0x30>
   1335c:	ldr	r0, [r8]
   13360:	cmp	r0, #0
   13364:	beq	13370 <table_row_destroy@@Base+0x60>
   13368:	pop	{r4, r5, r6, r7, r8, lr}
   1336c:	b	11ad8 <free@plt>
   13370:	pop	{r4, r5, r6, r7, r8, pc}

00013374 <table_remove_row@@Base>:
   13374:	push	{r4, r5, r6, r7, r8, lr}
   13378:	mov	r5, r0
   1337c:	mov	r6, r1
   13380:	bl	13224 <table_get_row_length@@Base>
   13384:	mov	r7, r0
   13388:	mov	r0, r5
   1338c:	bl	1272c <table_get_column_length@@Base>
   13390:	subs	r8, r0, #0
   13394:	movgt	r4, #0
   13398:	ble	133dc <table_remove_row@@Base+0x68>
   1339c:	mov	r1, r4
   133a0:	mov	r0, r5
   133a4:	bl	12a48 <table_get_column_data_type@@Base>
   133a8:	mov	r2, r4
   133ac:	mov	r1, r6
   133b0:	add	r4, r4, #1
   133b4:	cmp	r0, #23
   133b8:	mov	r0, r5
   133bc:	beq	133d4 <table_remove_row@@Base+0x60>
   133c0:	bl	1471c <table_get_cell_ptr@@Base>
   133c4:	ldr	r3, [r0]
   133c8:	subs	r0, r3, #0
   133cc:	beq	133d4 <table_remove_row@@Base+0x60>
   133d0:	bl	11ad8 <free@plt>
   133d4:	cmp	r8, r4
   133d8:	bne	1339c <table_remove_row@@Base+0x28>
   133dc:	mov	r1, r6
   133e0:	mov	r0, r5
   133e4:	bl	1322c <table_get_row_ptr@@Base>
   133e8:	ldr	r0, [r0]
   133ec:	cmp	r0, #0
   133f0:	beq	133f8 <table_remove_row@@Base+0x84>
   133f4:	bl	11ad8 <free@plt>
   133f8:	sub	r0, r7, #1
   133fc:	cmp	r6, r0
   13400:	lsllt	r2, r6, #2
   13404:	movlt	r3, r6
   13408:	bge	1342c <table_remove_row@@Base+0xb8>
   1340c:	ldr	ip, [r5, #16]
   13410:	add	r1, r2, #4
   13414:	add	r3, r3, #1
   13418:	ldr	lr, [ip, r1]
   1341c:	cmp	r3, r0
   13420:	str	lr, [ip, r2]
   13424:	mov	r2, r1
   13428:	bne	1340c <table_remove_row@@Base+0x98>
   1342c:	ldr	r3, [r5, #20]
   13430:	mov	r0, r5
   13434:	sub	r3, r3, #1
   13438:	str	r3, [r5, #20]
   1343c:	bl	13224 <table_get_row_length@@Base>
   13440:	ldr	r4, [r5, #24]
   13444:	mov	r1, r4
   13448:	bl	149a4 <table_cell_nullify@@Base+0x218>
   1344c:	cmp	r1, #0
   13450:	bne	13470 <table_remove_row@@Base+0xfc>
   13454:	ldr	r1, [r5, #28]
   13458:	ldr	r0, [r5, #16]
   1345c:	sub	r1, r1, r4
   13460:	str	r1, [r5, #28]
   13464:	lsl	r1, r1, #2
   13468:	bl	11ae4 <realloc@plt>
   1346c:	str	r0, [r5, #16]
   13470:	mov	r0, r5
   13474:	mov	r1, r6
   13478:	mov	r3, #4
   1347c:	mvn	r2, #0
   13480:	bl	126a4 <table_notify@@Base>
   13484:	mov	r0, #0
   13488:	pop	{r4, r5, r6, r7, r8, pc}

0001348c <table_set_row_ptr@@Base>:
   1348c:	ldr	r3, [r0, #16]
   13490:	ldr	r2, [r2]
   13494:	str	r2, [r3, r1, lsl #2]
   13498:	bx	lr

0001349c <table_set@@Base>:
   1349c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   134a0:	mov	r5, r0
   134a4:	mov	r6, r2
   134a8:	ldr	r4, [sp, #32]
   134ac:	mov	r9, r1
   134b0:	mov	r7, r3
   134b4:	bl	1471c <table_get_cell_ptr@@Base>
   134b8:	mov	r1, r6
   134bc:	mov	r8, r0
   134c0:	mov	r0, r5
   134c4:	bl	12734 <table_get_col_ptr@@Base>
   134c8:	cmp	r4, #23
   134cc:	addls	pc, pc, r4, lsl #2
   134d0:	b	13548 <table_set@@Base+0xac>
   134d4:	b	136ec <table_set@@Base+0x250>
   134d8:	b	136dc <table_set@@Base+0x240>
   134dc:	b	136cc <table_set@@Base+0x230>
   134e0:	b	136bc <table_set@@Base+0x220>
   134e4:	b	136ac <table_set@@Base+0x210>
   134e8:	b	13688 <table_set@@Base+0x1ec>
   134ec:	b	13678 <table_set@@Base+0x1dc>
   134f0:	b	13668 <table_set@@Base+0x1cc>
   134f4:	b	1372c <table_set@@Base+0x290>
   134f8:	b	1371c <table_set@@Base+0x280>
   134fc:	b	1370c <table_set@@Base+0x270>
   13500:	b	136fc <table_set@@Base+0x260>
   13504:	b	13778 <table_set@@Base+0x2dc>
   13508:	b	13758 <table_set@@Base+0x2bc>
   1350c:	b	13768 <table_set@@Base+0x2cc>
   13510:	b	13658 <table_set@@Base+0x1bc>
   13514:	b	13634 <table_set@@Base+0x198>
   13518:	b	13624 <table_set@@Base+0x188>
   1351c:	b	135f8 <table_set@@Base+0x15c>
   13520:	b	135e8 <table_set@@Base+0x14c>
   13524:	b	135d8 <table_set@@Base+0x13c>
   13528:	b	135a0 <table_set@@Base+0x104>
   1352c:	b	1357c <table_set@@Base+0xe0>
   13530:	b	13550 <table_set@@Base+0xb4>
   13534:	bl	11b08 <malloc@plt>
   13538:	cmp	r0, #0
   1353c:	mov	r3, r0
   13540:	str	r0, [r8]
   13544:	bne	13744 <table_set@@Base+0x2a8>
   13548:	mvn	r0, #0
   1354c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13550:	ldr	r3, [r0, #4]
   13554:	cmp	r3, #23
   13558:	bne	13548 <table_set@@Base+0xac>
   1355c:	str	r7, [r8]
   13560:	mov	r0, r5
   13564:	mov	r2, r6
   13568:	mov	r1, r9
   1356c:	mov	r3, #1
   13570:	bl	126a4 <table_notify@@Base>
   13574:	mov	r0, #0
   13578:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1357c:	ldr	r3, [r0, #4]
   13580:	cmp	r3, #22
   13584:	bne	13548 <table_set@@Base+0xac>
   13588:	ldr	r0, [r8]
   1358c:	cmp	r0, #0
   13590:	beq	137a0 <table_set@@Base+0x304>
   13594:	ldrb	r3, [r7]
   13598:	strb	r3, [r0]
   1359c:	b	13560 <table_set@@Base+0xc4>
   135a0:	ldr	r3, [r0, #4]
   135a4:	cmp	r3, #21
   135a8:	bne	13548 <table_set@@Base+0xac>
   135ac:	mov	r0, r7
   135b0:	bl	11b2c <strlen@plt>
   135b4:	add	r1, r0, #1
   135b8:	ldr	r0, [r8]
   135bc:	bl	11ae4 <realloc@plt>
   135c0:	cmp	r0, #0
   135c4:	str	r0, [r8]
   135c8:	beq	13548 <table_set@@Base+0xac>
   135cc:	mov	r1, r7
   135d0:	bl	11af0 <strcpy@plt>
   135d4:	b	13560 <table_set@@Base+0xc4>
   135d8:	ldr	r3, [r0, #4]
   135dc:	cmp	r3, #20
   135e0:	beq	13588 <table_set@@Base+0xec>
   135e4:	b	13548 <table_set@@Base+0xac>
   135e8:	ldr	r3, [r0, #4]
   135ec:	cmp	r3, #19
   135f0:	beq	13588 <table_set@@Base+0xec>
   135f4:	b	13548 <table_set@@Base+0xac>
   135f8:	ldr	r3, [r0, #4]
   135fc:	cmp	r3, #18
   13600:	bne	13548 <table_set@@Base+0xac>
   13604:	ldr	r0, [r8]
   13608:	cmp	r0, #0
   1360c:	beq	137b8 <table_set@@Base+0x31c>
   13610:	ldr	r2, [r7]
   13614:	ldr	r3, [r7, #4]
   13618:	str	r2, [r0]
   1361c:	str	r3, [r0, #4]
   13620:	b	13560 <table_set@@Base+0xc4>
   13624:	ldr	r3, [r0, #4]
   13628:	cmp	r3, #17
   1362c:	beq	13604 <table_set@@Base+0x168>
   13630:	b	13548 <table_set@@Base+0xac>
   13634:	ldr	r3, [r0, #4]
   13638:	cmp	r3, #16
   1363c:	bne	13548 <table_set@@Base+0xac>
   13640:	ldr	r0, [r8]
   13644:	cmp	r0, #0
   13648:	beq	13788 <table_set@@Base+0x2ec>
   1364c:	ldr	r3, [r7]
   13650:	str	r3, [r0]
   13654:	b	13560 <table_set@@Base+0xc4>
   13658:	ldr	r3, [r0, #4]
   1365c:	cmp	r3, #15
   13660:	beq	13604 <table_set@@Base+0x168>
   13664:	b	13548 <table_set@@Base+0xac>
   13668:	ldr	r3, [r0, #4]
   1366c:	cmp	r3, #7
   13670:	beq	13640 <table_set@@Base+0x1a4>
   13674:	b	13548 <table_set@@Base+0xac>
   13678:	ldr	r3, [r0, #4]
   1367c:	cmp	r3, #6
   13680:	beq	13640 <table_set@@Base+0x1a4>
   13684:	b	13548 <table_set@@Base+0xac>
   13688:	ldr	r3, [r0, #4]
   1368c:	cmp	r3, #5
   13690:	bne	13548 <table_set@@Base+0xac>
   13694:	ldr	r0, [r8]
   13698:	cmp	r0, #0
   1369c:	beq	137d0 <table_set@@Base+0x334>
   136a0:	ldrh	r3, [r7]
   136a4:	strh	r3, [r0]
   136a8:	b	13560 <table_set@@Base+0xc4>
   136ac:	ldr	r3, [r0, #4]
   136b0:	cmp	r3, #4
   136b4:	beq	13694 <table_set@@Base+0x1f8>
   136b8:	b	13548 <table_set@@Base+0xac>
   136bc:	ldr	r3, [r0, #4]
   136c0:	cmp	r3, #3
   136c4:	beq	13588 <table_set@@Base+0xec>
   136c8:	b	13548 <table_set@@Base+0xac>
   136cc:	ldr	r3, [r0, #4]
   136d0:	cmp	r3, #2
   136d4:	beq	13588 <table_set@@Base+0xec>
   136d8:	b	13548 <table_set@@Base+0xac>
   136dc:	ldr	r3, [r0, #4]
   136e0:	cmp	r3, #1
   136e4:	beq	13640 <table_set@@Base+0x1a4>
   136e8:	b	13548 <table_set@@Base+0xac>
   136ec:	ldr	r3, [r0, #4]
   136f0:	cmp	r3, #0
   136f4:	beq	13640 <table_set@@Base+0x1a4>
   136f8:	b	13548 <table_set@@Base+0xac>
   136fc:	ldr	r3, [r0, #4]
   13700:	cmp	r3, #11
   13704:	beq	13694 <table_set@@Base+0x1f8>
   13708:	b	13548 <table_set@@Base+0xac>
   1370c:	ldr	r3, [r0, #4]
   13710:	cmp	r3, #10
   13714:	beq	13694 <table_set@@Base+0x1f8>
   13718:	b	13548 <table_set@@Base+0xac>
   1371c:	ldr	r3, [r0, #4]
   13720:	cmp	r3, #9
   13724:	beq	13604 <table_set@@Base+0x168>
   13728:	b	13548 <table_set@@Base+0xac>
   1372c:	ldr	r0, [r0, #4]
   13730:	cmp	r0, #8
   13734:	bne	13548 <table_set@@Base+0xac>
   13738:	ldr	r3, [r8]
   1373c:	cmp	r3, #0
   13740:	beq	13534 <table_set@@Base+0x98>
   13744:	ldr	r1, [r7]
   13748:	ldr	r2, [r7, #4]
   1374c:	str	r1, [r3]
   13750:	str	r2, [r3, #4]
   13754:	b	13560 <table_set@@Base+0xc4>
   13758:	ldr	r3, [r0, #4]
   1375c:	cmp	r3, #13
   13760:	beq	13640 <table_set@@Base+0x1a4>
   13764:	b	13548 <table_set@@Base+0xac>
   13768:	ldr	r3, [r0, #4]
   1376c:	cmp	r3, #14
   13770:	beq	13604 <table_set@@Base+0x168>
   13774:	b	13548 <table_set@@Base+0xac>
   13778:	ldr	r3, [r0, #4]
   1377c:	cmp	r3, #12
   13780:	beq	13640 <table_set@@Base+0x1a4>
   13784:	b	13548 <table_set@@Base+0xac>
   13788:	mov	r0, #4
   1378c:	bl	11b08 <malloc@plt>
   13790:	cmp	r0, #0
   13794:	str	r0, [r8]
   13798:	bne	1364c <table_set@@Base+0x1b0>
   1379c:	b	13548 <table_set@@Base+0xac>
   137a0:	mov	r0, #1
   137a4:	bl	11b08 <malloc@plt>
   137a8:	cmp	r0, #0
   137ac:	str	r0, [r8]
   137b0:	bne	13594 <table_set@@Base+0xf8>
   137b4:	b	13548 <table_set@@Base+0xac>
   137b8:	mov	r0, #8
   137bc:	bl	11b08 <malloc@plt>
   137c0:	cmp	r0, #0
   137c4:	str	r0, [r8]
   137c8:	bne	13610 <table_set@@Base+0x174>
   137cc:	b	13548 <table_set@@Base+0xac>
   137d0:	mov	r0, #2
   137d4:	bl	11b08 <malloc@plt>
   137d8:	cmp	r0, #0
   137dc:	str	r0, [r8]
   137e0:	bne	136a0 <table_set@@Base+0x204>
   137e4:	b	13548 <table_set@@Base+0xac>

000137e8 <table_set_bool@@Base>:
   137e8:	push	{lr}		; (str lr, [sp, #-4]!)
   137ec:	sub	sp, sp, #20
   137f0:	add	ip, sp, #16
   137f4:	mov	lr, #22
   137f8:	strb	r3, [ip, #-1]!
   137fc:	str	lr, [sp]
   13800:	mov	r3, ip
   13804:	bl	1349c <table_set@@Base>
   13808:	add	sp, sp, #20
   1380c:	pop	{pc}		; (ldr pc, [sp], #4)

00013810 <table_set_int@@Base>:
   13810:	push	{lr}		; (str lr, [sp, #-4]!)
   13814:	sub	sp, sp, #20
   13818:	add	ip, sp, #16
   1381c:	mov	lr, #0
   13820:	str	r3, [ip, #-4]!
   13824:	str	lr, [sp]
   13828:	mov	r3, ip
   1382c:	bl	1349c <table_set@@Base>
   13830:	add	sp, sp, #20
   13834:	pop	{pc}		; (ldr pc, [sp], #4)

00013838 <table_set_uint@@Base>:
   13838:	push	{lr}		; (str lr, [sp, #-4]!)
   1383c:	sub	sp, sp, #20
   13840:	add	ip, sp, #16
   13844:	mov	lr, #1
   13848:	str	r3, [ip, #-4]!
   1384c:	str	lr, [sp]
   13850:	mov	r3, ip
   13854:	bl	1349c <table_set@@Base>
   13858:	add	sp, sp, #20
   1385c:	pop	{pc}		; (ldr pc, [sp], #4)

00013860 <table_set_int8@@Base>:
   13860:	push	{lr}		; (str lr, [sp, #-4]!)
   13864:	sub	sp, sp, #20
   13868:	add	ip, sp, #16
   1386c:	mov	lr, #2
   13870:	strb	r3, [ip, #-1]!
   13874:	str	lr, [sp]
   13878:	mov	r3, ip
   1387c:	bl	1349c <table_set@@Base>
   13880:	add	sp, sp, #20
   13884:	pop	{pc}		; (ldr pc, [sp], #4)

00013888 <table_set_uint8@@Base>:
   13888:	push	{lr}		; (str lr, [sp, #-4]!)
   1388c:	sub	sp, sp, #20
   13890:	add	ip, sp, #16
   13894:	mov	lr, #3
   13898:	strb	r3, [ip, #-1]!
   1389c:	str	lr, [sp]
   138a0:	mov	r3, ip
   138a4:	bl	1349c <table_set@@Base>
   138a8:	add	sp, sp, #20
   138ac:	pop	{pc}		; (ldr pc, [sp], #4)

000138b0 <table_set_int16@@Base>:
   138b0:	push	{lr}		; (str lr, [sp, #-4]!)
   138b4:	sub	sp, sp, #20
   138b8:	add	ip, sp, #16
   138bc:	mov	lr, #4
   138c0:	strh	r3, [ip, #-2]!
   138c4:	str	lr, [sp]
   138c8:	mov	r3, ip
   138cc:	bl	1349c <table_set@@Base>
   138d0:	add	sp, sp, #20
   138d4:	pop	{pc}		; (ldr pc, [sp], #4)

000138d8 <table_set_uint16@@Base>:
   138d8:	push	{lr}		; (str lr, [sp, #-4]!)
   138dc:	sub	sp, sp, #20
   138e0:	add	ip, sp, #16
   138e4:	mov	lr, #5
   138e8:	strh	r3, [ip, #-2]!
   138ec:	str	lr, [sp]
   138f0:	mov	r3, ip
   138f4:	bl	1349c <table_set@@Base>
   138f8:	add	sp, sp, #20
   138fc:	pop	{pc}		; (ldr pc, [sp], #4)

00013900 <table_set_int32@@Base>:
   13900:	push	{lr}		; (str lr, [sp, #-4]!)
   13904:	sub	sp, sp, #20
   13908:	add	ip, sp, #16
   1390c:	mov	lr, #6
   13910:	str	r3, [ip, #-4]!
   13914:	str	lr, [sp]
   13918:	mov	r3, ip
   1391c:	bl	1349c <table_set@@Base>
   13920:	add	sp, sp, #20
   13924:	pop	{pc}		; (ldr pc, [sp], #4)

00013928 <table_set_uint32@@Base>:
   13928:	push	{lr}		; (str lr, [sp, #-4]!)
   1392c:	sub	sp, sp, #20
   13930:	add	ip, sp, #16
   13934:	mov	lr, #7
   13938:	str	r3, [ip, #-4]!
   1393c:	str	lr, [sp]
   13940:	mov	r3, ip
   13944:	bl	1349c <table_set@@Base>
   13948:	add	sp, sp, #20
   1394c:	pop	{pc}		; (ldr pc, [sp], #4)

00013950 <table_set_int64@@Base>:
   13950:	push	{lr}		; (str lr, [sp, #-4]!)
   13954:	sub	sp, sp, #12
   13958:	mov	r3, #8
   1395c:	str	r3, [sp]
   13960:	add	r3, sp, #16
   13964:	bl	1349c <table_set@@Base>
   13968:	add	sp, sp, #12
   1396c:	pop	{pc}		; (ldr pc, [sp], #4)

00013970 <table_set_uint64@@Base>:
   13970:	push	{lr}		; (str lr, [sp, #-4]!)
   13974:	sub	sp, sp, #12
   13978:	mov	r3, #9
   1397c:	str	r3, [sp]
   13980:	add	r3, sp, #16
   13984:	bl	1349c <table_set@@Base>
   13988:	add	sp, sp, #12
   1398c:	pop	{pc}		; (ldr pc, [sp], #4)

00013990 <table_set_short@@Base>:
   13990:	push	{lr}		; (str lr, [sp, #-4]!)
   13994:	sub	sp, sp, #20
   13998:	add	ip, sp, #16
   1399c:	mov	lr, #10
   139a0:	strh	r3, [ip, #-2]!
   139a4:	str	lr, [sp]
   139a8:	mov	r3, ip
   139ac:	bl	1349c <table_set@@Base>
   139b0:	add	sp, sp, #20
   139b4:	pop	{pc}		; (ldr pc, [sp], #4)

000139b8 <table_set_ushort@@Base>:
   139b8:	push	{lr}		; (str lr, [sp, #-4]!)
   139bc:	sub	sp, sp, #20
   139c0:	add	ip, sp, #16
   139c4:	mov	lr, #11
   139c8:	strh	r3, [ip, #-2]!
   139cc:	str	lr, [sp]
   139d0:	mov	r3, ip
   139d4:	bl	1349c <table_set@@Base>
   139d8:	add	sp, sp, #20
   139dc:	pop	{pc}		; (ldr pc, [sp], #4)

000139e0 <table_set_long@@Base>:
   139e0:	push	{lr}		; (str lr, [sp, #-4]!)
   139e4:	sub	sp, sp, #20
   139e8:	add	ip, sp, #16
   139ec:	mov	lr, #12
   139f0:	str	r3, [ip, #-4]!
   139f4:	str	lr, [sp]
   139f8:	mov	r3, ip
   139fc:	bl	1349c <table_set@@Base>
   13a00:	add	sp, sp, #20
   13a04:	pop	{pc}		; (ldr pc, [sp], #4)

00013a08 <table_set_ulong@@Base>:
   13a08:	push	{lr}		; (str lr, [sp, #-4]!)
   13a0c:	sub	sp, sp, #20
   13a10:	add	ip, sp, #16
   13a14:	mov	lr, #13
   13a18:	str	r3, [ip, #-4]!
   13a1c:	str	lr, [sp]
   13a20:	mov	r3, ip
   13a24:	bl	1349c <table_set@@Base>
   13a28:	add	sp, sp, #20
   13a2c:	pop	{pc}		; (ldr pc, [sp], #4)

00013a30 <table_set_llong@@Base>:
   13a30:	push	{lr}		; (str lr, [sp, #-4]!)
   13a34:	sub	sp, sp, #12
   13a38:	mov	r3, #14
   13a3c:	str	r3, [sp]
   13a40:	add	r3, sp, #16
   13a44:	bl	1349c <table_set@@Base>
   13a48:	add	sp, sp, #12
   13a4c:	pop	{pc}		; (ldr pc, [sp], #4)

00013a50 <table_set_ullong@@Base>:
   13a50:	push	{lr}		; (str lr, [sp, #-4]!)
   13a54:	sub	sp, sp, #12
   13a58:	mov	r3, #15
   13a5c:	str	r3, [sp]
   13a60:	add	r3, sp, #16
   13a64:	bl	1349c <table_set@@Base>
   13a68:	add	sp, sp, #12
   13a6c:	pop	{pc}		; (ldr pc, [sp], #4)

00013a70 <table_set_float@@Base>:
   13a70:	push	{lr}		; (str lr, [sp, #-4]!)
   13a74:	sub	sp, sp, #20
   13a78:	add	r3, sp, #16
   13a7c:	mov	ip, #16
   13a80:	vstmdb	r3!, {s0}
   13a84:	str	ip, [sp]
   13a88:	bl	1349c <table_set@@Base>
   13a8c:	add	sp, sp, #20
   13a90:	pop	{pc}		; (ldr pc, [sp], #4)

00013a94 <table_set_double@@Base>:
   13a94:	push	{lr}		; (str lr, [sp, #-4]!)
   13a98:	sub	sp, sp, #20
   13a9c:	add	r3, sp, #16
   13aa0:	mov	ip, #17
   13aa4:	vstmdb	r3!, {d0}
   13aa8:	str	ip, [sp]
   13aac:	bl	1349c <table_set@@Base>
   13ab0:	add	sp, sp, #20
   13ab4:	pop	{pc}		; (ldr pc, [sp], #4)

00013ab8 <table_set_ldouble@@Base>:
   13ab8:	push	{lr}		; (str lr, [sp, #-4]!)
   13abc:	sub	sp, sp, #20
   13ac0:	add	r3, sp, #16
   13ac4:	mov	ip, #18
   13ac8:	vstmdb	r3!, {d0}
   13acc:	str	ip, [sp]
   13ad0:	bl	1349c <table_set@@Base>
   13ad4:	add	sp, sp, #20
   13ad8:	pop	{pc}		; (ldr pc, [sp], #4)

00013adc <table_set_string@@Base>:
   13adc:	push	{lr}		; (str lr, [sp, #-4]!)
   13ae0:	sub	sp, sp, #12
   13ae4:	mov	ip, #21
   13ae8:	str	ip, [sp]
   13aec:	bl	1349c <table_set@@Base>
   13af0:	add	sp, sp, #12
   13af4:	pop	{pc}		; (ldr pc, [sp], #4)

00013af8 <table_set_char@@Base>:
   13af8:	push	{lr}		; (str lr, [sp, #-4]!)
   13afc:	sub	sp, sp, #20
   13b00:	add	ip, sp, #16
   13b04:	mov	lr, #19
   13b08:	strb	r3, [ip, #-1]!
   13b0c:	str	lr, [sp]
   13b10:	mov	r3, ip
   13b14:	bl	1349c <table_set@@Base>
   13b18:	add	sp, sp, #20
   13b1c:	pop	{pc}		; (ldr pc, [sp], #4)

00013b20 <table_set_uchar@@Base>:
   13b20:	push	{lr}		; (str lr, [sp, #-4]!)
   13b24:	sub	sp, sp, #20
   13b28:	add	ip, sp, #16
   13b2c:	mov	lr, #20
   13b30:	strb	r3, [ip, #-1]!
   13b34:	str	lr, [sp]
   13b38:	mov	r3, ip
   13b3c:	bl	1349c <table_set@@Base>
   13b40:	add	sp, sp, #20
   13b44:	pop	{pc}		; (ldr pc, [sp], #4)

00013b48 <table_set_ptr@@Base>:
   13b48:	push	{lr}		; (str lr, [sp, #-4]!)
   13b4c:	sub	sp, sp, #12
   13b50:	mov	ip, #23
   13b54:	str	ip, [sp]
   13b58:	bl	1349c <table_set@@Base>
   13b5c:	add	sp, sp, #12
   13b60:	pop	{pc}		; (ldr pc, [sp], #4)

00013b64 <table_cell_to_buffer@@Base>:
   13b64:	push	{r4, r5, r6, r7, lr}
   13b68:	mov	r7, r1
   13b6c:	sub	sp, sp, #12
   13b70:	mov	r1, r2
   13b74:	mov	r4, r2
   13b78:	mov	r5, r3
   13b7c:	mov	r6, r0
   13b80:	bl	12a48 <table_get_column_data_type@@Base>
   13b84:	cmp	r0, #23
   13b88:	addls	pc, pc, r0, lsl #2
   13b8c:	b	13c18 <table_cell_to_buffer@@Base+0xb4>
   13b90:	b	13ff0 <table_cell_to_buffer@@Base+0x48c>
   13b94:	b	13fc4 <table_cell_to_buffer@@Base+0x460>
   13b98:	b	13f98 <table_cell_to_buffer@@Base+0x434>
   13b9c:	b	13f6c <table_cell_to_buffer@@Base+0x408>
   13ba0:	b	13f40 <table_cell_to_buffer@@Base+0x3dc>
   13ba4:	b	13f14 <table_cell_to_buffer@@Base+0x3b0>
   13ba8:	b	13ee8 <table_cell_to_buffer@@Base+0x384>
   13bac:	b	13ebc <table_cell_to_buffer@@Base+0x358>
   13bb0:	b	13e90 <table_cell_to_buffer@@Base+0x32c>
   13bb4:	b	13e64 <table_cell_to_buffer@@Base+0x300>
   13bb8:	b	13e38 <table_cell_to_buffer@@Base+0x2d4>
   13bbc:	b	13e0c <table_cell_to_buffer@@Base+0x2a8>
   13bc0:	b	13de0 <table_cell_to_buffer@@Base+0x27c>
   13bc4:	b	13db4 <table_cell_to_buffer@@Base+0x250>
   13bc8:	b	13d88 <table_cell_to_buffer@@Base+0x224>
   13bcc:	b	13d5c <table_cell_to_buffer@@Base+0x1f8>
   13bd0:	b	13d2c <table_cell_to_buffer@@Base+0x1c8>
   13bd4:	b	13d00 <table_cell_to_buffer@@Base+0x19c>
   13bd8:	b	13cd4 <table_cell_to_buffer@@Base+0x170>
   13bdc:	b	13ca8 <table_cell_to_buffer@@Base+0x144>
   13be0:	b	13c7c <table_cell_to_buffer@@Base+0x118>
   13be4:	b	13c50 <table_cell_to_buffer@@Base+0xec>
   13be8:	b	13c24 <table_cell_to_buffer@@Base+0xc0>
   13bec:	b	13bf0 <table_cell_to_buffer@@Base+0x8c>
   13bf0:	mov	r2, r4
   13bf4:	mov	r1, r7
   13bf8:	mov	r0, r6
   13bfc:	bl	13220 <table_get_ptr@@Base>
   13c00:	ldr	r2, [pc, #1044]	; 1401c <table_cell_to_buffer@@Base+0x4b8>
   13c04:	ldr	r1, [sp, #32]
   13c08:	add	r2, pc, r2
   13c0c:	mov	r3, r0
   13c10:	mov	r0, r5
   13c14:	bl	11b38 <snprintf@plt>
   13c18:	mov	r0, #0
   13c1c:	add	sp, sp, #12
   13c20:	pop	{r4, r5, r6, r7, pc}
   13c24:	mov	r2, r4
   13c28:	mov	r1, r7
   13c2c:	mov	r0, r6
   13c30:	bl	1311c <table_get_bool@@Base>
   13c34:	ldr	r2, [pc, #996]	; 14020 <table_cell_to_buffer@@Base+0x4bc>
   13c38:	ldr	r1, [sp, #32]
   13c3c:	add	r2, pc, r2
   13c40:	mov	r3, r0
   13c44:	mov	r0, r5
   13c48:	bl	11b38 <snprintf@plt>
   13c4c:	b	13c18 <table_cell_to_buffer@@Base+0xb4>
   13c50:	mov	r2, r4
   13c54:	mov	r1, r7
   13c58:	mov	r0, r6
   13c5c:	bl	1321c <table_get_string@@Base>
   13c60:	ldr	r2, [pc, #956]	; 14024 <table_cell_to_buffer@@Base+0x4c0>
   13c64:	ldr	r1, [sp, #32]
   13c68:	add	r2, pc, r2
   13c6c:	mov	r3, r0
   13c70:	mov	r0, r5
   13c74:	bl	11b38 <snprintf@plt>
   13c78:	b	13c18 <table_cell_to_buffer@@Base+0xb4>
   13c7c:	mov	r2, r4
   13c80:	mov	r1, r7
   13c84:	mov	r0, r6
   13c88:	bl	13204 <table_get_uchar@@Base>
   13c8c:	ldr	r2, [pc, #916]	; 14028 <table_cell_to_buffer@@Base+0x4c4>
   13c90:	ldr	r1, [sp, #32]
   13c94:	add	r2, pc, r2
   13c98:	mov	r3, r0
   13c9c:	mov	r0, r5
   13ca0:	bl	11b38 <snprintf@plt>
   13ca4:	b	13c18 <table_cell_to_buffer@@Base+0xb4>
   13ca8:	mov	r2, r4
   13cac:	mov	r1, r7
   13cb0:	mov	r0, r6
   13cb4:	bl	13214 <table_get_char@@Base>
   13cb8:	ldr	r2, [pc, #876]	; 1402c <table_cell_to_buffer@@Base+0x4c8>
   13cbc:	ldr	r1, [sp, #32]
   13cc0:	add	r2, pc, r2
   13cc4:	mov	r3, r0
   13cc8:	mov	r0, r5
   13ccc:	bl	11b38 <snprintf@plt>
   13cd0:	b	13c18 <table_cell_to_buffer@@Base+0xb4>
   13cd4:	mov	r2, r4
   13cd8:	mov	r1, r7
   13cdc:	mov	r0, r6
   13ce0:	bl	131f4 <table_get_ldouble@@Base>
   13ce4:	ldr	r2, [pc, #836]	; 14030 <table_cell_to_buffer@@Base+0x4cc>
   13ce8:	mov	r0, r5
   13cec:	add	r2, pc, r2
   13cf0:	ldr	r1, [sp, #32]
   13cf4:	vstr	d0, [sp]
   13cf8:	bl	11b38 <snprintf@plt>
   13cfc:	b	13c18 <table_cell_to_buffer@@Base+0xb4>
   13d00:	mov	r2, r4
   13d04:	mov	r1, r7
   13d08:	mov	r0, r6
   13d0c:	bl	131e4 <table_get_double@@Base>
   13d10:	ldr	r2, [pc, #796]	; 14034 <table_cell_to_buffer@@Base+0x4d0>
   13d14:	mov	r0, r5
   13d18:	add	r2, pc, r2
   13d1c:	ldr	r1, [sp, #32]
   13d20:	vstr	d0, [sp]
   13d24:	bl	11b38 <snprintf@plt>
   13d28:	b	13c18 <table_cell_to_buffer@@Base+0xb4>
   13d2c:	mov	r2, r4
   13d30:	mov	r1, r7
   13d34:	mov	r0, r6
   13d38:	bl	131d4 <table_get_float@@Base>
   13d3c:	ldr	r2, [pc, #756]	; 14038 <table_cell_to_buffer@@Base+0x4d4>
   13d40:	mov	r0, r5
   13d44:	add	r2, pc, r2
   13d48:	ldr	r1, [sp, #32]
   13d4c:	vcvt.f64.f32	d0, s0
   13d50:	vstr	d0, [sp]
   13d54:	bl	11b38 <snprintf@plt>
   13d58:	b	13c18 <table_cell_to_buffer@@Base+0xb4>
   13d5c:	mov	r2, r4
   13d60:	mov	r1, r7
   13d64:	mov	r0, r6
   13d68:	bl	131c0 <table_get_ullong@@Base>
   13d6c:	ldr	r2, [pc, #712]	; 1403c <table_cell_to_buffer@@Base+0x4d8>
   13d70:	add	r2, pc, r2
   13d74:	strd	r0, [sp]
   13d78:	mov	r0, r5
   13d7c:	ldr	r1, [sp, #32]
   13d80:	bl	11b38 <snprintf@plt>
   13d84:	b	13c18 <table_cell_to_buffer@@Base+0xb4>
   13d88:	mov	r2, r4
   13d8c:	mov	r1, r7
   13d90:	mov	r0, r6
   13d94:	bl	131ac <table_get_llong@@Base>
   13d98:	ldr	r2, [pc, #672]	; 14040 <table_cell_to_buffer@@Base+0x4dc>
   13d9c:	add	r2, pc, r2
   13da0:	strd	r0, [sp]
   13da4:	mov	r0, r5
   13da8:	ldr	r1, [sp, #32]
   13dac:	bl	11b38 <snprintf@plt>
   13db0:	b	13c18 <table_cell_to_buffer@@Base+0xb4>
   13db4:	mov	r2, r4
   13db8:	mov	r1, r7
   13dbc:	mov	r0, r6
   13dc0:	bl	1319c <table_get_ulong@@Base>
   13dc4:	ldr	r2, [pc, #632]	; 14044 <table_cell_to_buffer@@Base+0x4e0>
   13dc8:	ldr	r1, [sp, #32]
   13dcc:	add	r2, pc, r2
   13dd0:	mov	r3, r0
   13dd4:	mov	r0, r5
   13dd8:	bl	11b38 <snprintf@plt>
   13ddc:	b	13c18 <table_cell_to_buffer@@Base+0xb4>
   13de0:	mov	r2, r4
   13de4:	mov	r1, r7
   13de8:	mov	r0, r6
   13dec:	bl	1318c <table_get_long@@Base>
   13df0:	ldr	r2, [pc, #592]	; 14048 <table_cell_to_buffer@@Base+0x4e4>
   13df4:	ldr	r1, [sp, #32]
   13df8:	add	r2, pc, r2
   13dfc:	mov	r3, r0
   13e00:	mov	r0, r5
   13e04:	bl	11b38 <snprintf@plt>
   13e08:	b	13c18 <table_cell_to_buffer@@Base+0xb4>
   13e0c:	mov	r2, r4
   13e10:	mov	r1, r7
   13e14:	mov	r0, r6
   13e18:	bl	13178 <table_get_ushort@@Base>
   13e1c:	ldr	r2, [pc, #552]	; 1404c <table_cell_to_buffer@@Base+0x4e8>
   13e20:	ldr	r1, [sp, #32]
   13e24:	add	r2, pc, r2
   13e28:	mov	r3, r0
   13e2c:	mov	r0, r5
   13e30:	bl	11b38 <snprintf@plt>
   13e34:	b	13c18 <table_cell_to_buffer@@Base+0xb4>
   13e38:	mov	r2, r4
   13e3c:	mov	r1, r7
   13e40:	mov	r0, r6
   13e44:	bl	13164 <table_get_short@@Base>
   13e48:	ldr	r2, [pc, #512]	; 14050 <table_cell_to_buffer@@Base+0x4ec>
   13e4c:	ldr	r1, [sp, #32]
   13e50:	add	r2, pc, r2
   13e54:	mov	r3, r0
   13e58:	mov	r0, r5
   13e5c:	bl	11b38 <snprintf@plt>
   13e60:	b	13c18 <table_cell_to_buffer@@Base+0xb4>
   13e64:	mov	r2, r4
   13e68:	mov	r1, r7
   13e6c:	mov	r0, r6
   13e70:	bl	131d0 <table_get_uint64@@Base>
   13e74:	ldr	r2, [pc, #472]	; 14054 <table_cell_to_buffer@@Base+0x4f0>
   13e78:	add	r2, pc, r2
   13e7c:	strd	r0, [sp]
   13e80:	mov	r0, r5
   13e84:	ldr	r1, [sp, #32]
   13e88:	bl	11b38 <snprintf@plt>
   13e8c:	b	13c18 <table_cell_to_buffer@@Base+0xb4>
   13e90:	mov	r2, r4
   13e94:	mov	r1, r7
   13e98:	mov	r0, r6
   13e9c:	bl	131bc <table_get_int64@@Base>
   13ea0:	ldr	r2, [pc, #432]	; 14058 <table_cell_to_buffer@@Base+0x4f4>
   13ea4:	add	r2, pc, r2
   13ea8:	strd	r0, [sp]
   13eac:	mov	r0, r5
   13eb0:	ldr	r1, [sp, #32]
   13eb4:	bl	11b38 <snprintf@plt>
   13eb8:	b	13c18 <table_cell_to_buffer@@Base+0xb4>
   13ebc:	mov	r2, r4
   13ec0:	mov	r1, r7
   13ec4:	mov	r0, r6
   13ec8:	bl	13150 <table_get_uint32@@Base>
   13ecc:	ldr	r2, [pc, #392]	; 1405c <table_cell_to_buffer@@Base+0x4f8>
   13ed0:	ldr	r1, [sp, #32]
   13ed4:	add	r2, pc, r2
   13ed8:	mov	r3, r0
   13edc:	mov	r0, r5
   13ee0:	bl	11b38 <snprintf@plt>
   13ee4:	b	13c18 <table_cell_to_buffer@@Base+0xb4>
   13ee8:	mov	r2, r4
   13eec:	mov	r1, r7
   13ef0:	mov	r0, r6
   13ef4:	bl	1313c <table_get_int32@@Base>
   13ef8:	ldr	r2, [pc, #352]	; 14060 <table_cell_to_buffer@@Base+0x4fc>
   13efc:	ldr	r1, [sp, #32]
   13f00:	add	r2, pc, r2
   13f04:	mov	r3, r0
   13f08:	mov	r0, r5
   13f0c:	bl	11b38 <snprintf@plt>
   13f10:	b	13c18 <table_cell_to_buffer@@Base+0xb4>
   13f14:	mov	r2, r4
   13f18:	mov	r1, r7
   13f1c:	mov	r0, r6
   13f20:	bl	13188 <table_get_uint16@@Base>
   13f24:	ldr	r2, [pc, #312]	; 14064 <table_cell_to_buffer@@Base+0x500>
   13f28:	ldr	r1, [sp, #32]
   13f2c:	add	r2, pc, r2
   13f30:	mov	r3, r0
   13f34:	mov	r0, r5
   13f38:	bl	11b38 <snprintf@plt>
   13f3c:	b	13c18 <table_cell_to_buffer@@Base+0xb4>
   13f40:	mov	r2, r4
   13f44:	mov	r1, r7
   13f48:	mov	r0, r6
   13f4c:	bl	13174 <table_get_int16@@Base>
   13f50:	ldr	r2, [pc, #272]	; 14068 <table_cell_to_buffer@@Base+0x504>
   13f54:	ldr	r1, [sp, #32]
   13f58:	add	r2, pc, r2
   13f5c:	mov	r3, r0
   13f60:	mov	r0, r5
   13f64:	bl	11b38 <snprintf@plt>
   13f68:	b	13c18 <table_cell_to_buffer@@Base+0xb4>
   13f6c:	mov	r2, r4
   13f70:	mov	r1, r7
   13f74:	mov	r0, r6
   13f78:	bl	13218 <table_get_uint8@@Base>
   13f7c:	ldr	r2, [pc, #232]	; 1406c <table_cell_to_buffer@@Base+0x508>
   13f80:	ldr	r1, [sp, #32]
   13f84:	add	r2, pc, r2
   13f88:	mov	r3, r0
   13f8c:	mov	r0, r5
   13f90:	bl	11b38 <snprintf@plt>
   13f94:	b	13c18 <table_cell_to_buffer@@Base+0xb4>
   13f98:	mov	r2, r4
   13f9c:	mov	r1, r7
   13fa0:	mov	r0, r6
   13fa4:	bl	1312c <table_get_int8@@Base>
   13fa8:	ldr	r2, [pc, #192]	; 14070 <table_cell_to_buffer@@Base+0x50c>
   13fac:	ldr	r1, [sp, #32]
   13fb0:	add	r2, pc, r2
   13fb4:	mov	r3, r0
   13fb8:	mov	r0, r5
   13fbc:	bl	11b38 <snprintf@plt>
   13fc0:	b	13c18 <table_cell_to_buffer@@Base+0xb4>
   13fc4:	mov	r2, r4
   13fc8:	mov	r1, r7
   13fcc:	mov	r0, r6
   13fd0:	bl	13160 <table_get_uint@@Base>
   13fd4:	ldr	r2, [pc, #152]	; 14074 <table_cell_to_buffer@@Base+0x510>
   13fd8:	ldr	r1, [sp, #32]
   13fdc:	add	r2, pc, r2
   13fe0:	mov	r3, r0
   13fe4:	mov	r0, r5
   13fe8:	bl	11b38 <snprintf@plt>
   13fec:	b	13c18 <table_cell_to_buffer@@Base+0xb4>
   13ff0:	mov	r2, r4
   13ff4:	mov	r1, r7
   13ff8:	mov	r0, r6
   13ffc:	bl	1314c <table_get_int@@Base>
   14000:	ldr	r2, [pc, #112]	; 14078 <table_cell_to_buffer@@Base+0x514>
   14004:	ldr	r1, [sp, #32]
   14008:	add	r2, pc, r2
   1400c:	mov	r3, r0
   14010:	mov	r0, r5
   14014:	bl	11b38 <snprintf@plt>
   14018:	b	13c18 <table_cell_to_buffer@@Base+0xb4>
   1401c:	andeq	r0, r0, r8, ror pc
   14020:	andeq	r0, r0, r8, lsl #30
   14024:	andeq	r0, r0, r4, lsl #30
   14028:	andeq	r0, r0, r8, ror #29
   1402c:			; <UNDEFINED> instruction: 0x00000ebc
   14030:	andeq	r0, r0, ip, lsl #29
   14034:	andeq	r0, r0, ip, asr lr
   14038:	andeq	r0, r0, ip, lsr #28
   1403c:	andeq	r0, r0, r4, ror #27
   14040:			; <UNDEFINED> instruction: 0x00000db0
   14044:	muleq	r0, ip, sp
   14048:	andeq	r0, r0, ip, ror #26
   1404c:	andeq	r0, r0, ip, lsr sp
   14050:	andeq	r0, r0, ip, lsl #26
   14054:	ldrdeq	r0, [r0], -ip
   14058:	andeq	r0, r0, r8, lsr #25
   1405c:	andeq	r0, r0, r4, ror ip
   14060:	andeq	r0, r0, r4, asr #24
   14064:	andeq	r0, r0, ip, lsl ip
   14068:	andeq	r0, r0, ip, ror #23
   1406c:	andeq	r0, r0, r4, asr #23
   14070:	muleq	r0, r4, fp
   14074:	andeq	r0, r0, ip, ror #22
   14078:	andeq	r0, r0, ip, lsr fp

0001407c <table_cell_from_buffer@@Base>:
   1407c:	push	{r4, r5, r6, r7, r8, lr}
   14080:	mov	r8, r1
   14084:	sub	sp, sp, #264	; 0x108
   14088:	mov	r1, r2
   1408c:	mov	r4, r2
   14090:	mov	r6, r3
   14094:	mov	r5, r0
   14098:	bl	12a48 <table_get_column_data_type@@Base>
   1409c:	cmp	r0, #23
   140a0:	addls	pc, pc, r0, lsl #2
   140a4:	b	146b4 <table_cell_from_buffer@@Base+0x638>
   140a8:	b	14648 <table_cell_from_buffer@@Base+0x5cc>
   140ac:	b	14610 <table_cell_from_buffer@@Base+0x594>
   140b0:	b	145d4 <table_cell_from_buffer@@Base+0x558>
   140b4:	b	1459c <table_cell_from_buffer@@Base+0x520>
   140b8:	b	14560 <table_cell_from_buffer@@Base+0x4e4>
   140bc:	b	14524 <table_cell_from_buffer@@Base+0x4a8>
   140c0:	b	144ec <table_cell_from_buffer@@Base+0x470>
   140c4:	b	144b4 <table_cell_from_buffer@@Base+0x438>
   140c8:	b	14474 <table_cell_from_buffer@@Base+0x3f8>
   140cc:	b	14434 <table_cell_from_buffer@@Base+0x3b8>
   140d0:	b	143f8 <table_cell_from_buffer@@Base+0x37c>
   140d4:	b	143bc <table_cell_from_buffer@@Base+0x340>
   140d8:	b	14384 <table_cell_from_buffer@@Base+0x308>
   140dc:	b	1434c <table_cell_from_buffer@@Base+0x2d0>
   140e0:	b	1430c <table_cell_from_buffer@@Base+0x290>
   140e4:	b	142cc <table_cell_from_buffer@@Base+0x250>
   140e8:	b	1425c <table_cell_from_buffer@@Base+0x1e0>
   140ec:	b	14224 <table_cell_from_buffer@@Base+0x1a8>
   140f0:	b	14294 <table_cell_from_buffer@@Base+0x218>
   140f4:	b	14178 <table_cell_from_buffer@@Base+0xfc>
   140f8:	b	141ec <table_cell_from_buffer@@Base+0x170>
   140fc:	b	141b0 <table_cell_from_buffer@@Base+0x134>
   14100:	b	14134 <table_cell_from_buffer@@Base+0xb8>
   14104:	b	14108 <table_cell_from_buffer@@Base+0x8c>
   14108:	ldr	r1, [pc, #1452]	; 146bc <table_cell_from_buffer@@Base+0x640>
   1410c:	mov	r0, r6
   14110:	add	r2, sp, #8
   14114:	add	r1, pc, r1
   14118:	bl	11b44 <__isoc99_sscanf@plt>
   1411c:	cmp	r0, #1
   14120:	beq	14698 <table_cell_from_buffer@@Base+0x61c>
   14124:	mvn	r6, #0
   14128:	mov	r0, r6
   1412c:	add	sp, sp, #264	; 0x108
   14130:	pop	{r4, r5, r6, r7, r8, pc}
   14134:	ldr	r1, [pc, #1412]	; 146c0 <table_cell_from_buffer@@Base+0x644>
   14138:	mov	r0, r6
   1413c:	add	r2, sp, #8
   14140:	add	r1, pc, r1
   14144:	bl	11b44 <__isoc99_sscanf@plt>
   14148:	cmp	r0, #1
   1414c:	bne	14124 <table_cell_from_buffer@@Base+0xa8>
   14150:	ldr	r6, [sp, #8]
   14154:	cmp	r6, #0
   14158:	beq	14680 <table_cell_from_buffer@@Base+0x604>
   1415c:	mov	r3, r0
   14160:	mov	r2, r4
   14164:	mov	r1, r8
   14168:	mov	r0, r5
   1416c:	bl	137e8 <table_set_bool@@Base>
   14170:	mov	r6, #0
   14174:	b	14128 <table_cell_from_buffer@@Base+0xac>
   14178:	ldr	r1, [pc, #1348]	; 146c4 <table_cell_from_buffer@@Base+0x648>
   1417c:	mov	r0, r6
   14180:	add	r2, sp, #8
   14184:	add	r1, pc, r1
   14188:	bl	11b44 <__isoc99_sscanf@plt>
   1418c:	cmp	r0, #1
   14190:	bne	14124 <table_cell_from_buffer@@Base+0xa8>
   14194:	mov	r2, r4
   14198:	mov	r1, r8
   1419c:	mov	r0, r5
   141a0:	ldrb	r3, [sp, #8]
   141a4:	bl	13af8 <table_set_char@@Base>
   141a8:	mov	r6, #0
   141ac:	b	14128 <table_cell_from_buffer@@Base+0xac>
   141b0:	ldr	r1, [pc, #1296]	; 146c8 <table_cell_from_buffer@@Base+0x64c>
   141b4:	add	r7, sp, #8
   141b8:	mov	r0, r6
   141bc:	mov	r2, r7
   141c0:	add	r1, pc, r1
   141c4:	bl	11b44 <__isoc99_sscanf@plt>
   141c8:	cmp	r0, #1
   141cc:	bne	14124 <table_cell_from_buffer@@Base+0xa8>
   141d0:	mov	r3, r7
   141d4:	mov	r2, r4
   141d8:	mov	r1, r8
   141dc:	mov	r0, r5
   141e0:	bl	13adc <table_set_string@@Base>
   141e4:	mov	r6, #0
   141e8:	b	14128 <table_cell_from_buffer@@Base+0xac>
   141ec:	ldr	r1, [pc, #1240]	; 146cc <table_cell_from_buffer@@Base+0x650>
   141f0:	mov	r0, r6
   141f4:	add	r2, sp, #8
   141f8:	add	r1, pc, r1
   141fc:	bl	11b44 <__isoc99_sscanf@plt>
   14200:	cmp	r0, #1
   14204:	bne	14124 <table_cell_from_buffer@@Base+0xa8>
   14208:	mov	r2, r4
   1420c:	mov	r1, r8
   14210:	mov	r0, r5
   14214:	ldrb	r3, [sp, #8]
   14218:	bl	13b20 <table_set_uchar@@Base>
   1421c:	mov	r6, #0
   14220:	b	14128 <table_cell_from_buffer@@Base+0xac>
   14224:	ldr	r1, [pc, #1188]	; 146d0 <table_cell_from_buffer@@Base+0x654>
   14228:	mov	r0, r6
   1422c:	add	r2, sp, #8
   14230:	add	r1, pc, r1
   14234:	bl	11b44 <__isoc99_sscanf@plt>
   14238:	cmp	r0, #1
   1423c:	bne	14124 <table_cell_from_buffer@@Base+0xa8>
   14240:	mov	r2, r4
   14244:	mov	r1, r8
   14248:	mov	r0, r5
   1424c:	vldr	d0, [sp, #8]
   14250:	bl	13a94 <table_set_double@@Base>
   14254:	mov	r6, #0
   14258:	b	14128 <table_cell_from_buffer@@Base+0xac>
   1425c:	ldr	r1, [pc, #1136]	; 146d4 <table_cell_from_buffer@@Base+0x658>
   14260:	mov	r0, r6
   14264:	add	r2, sp, #8
   14268:	add	r1, pc, r1
   1426c:	bl	11b44 <__isoc99_sscanf@plt>
   14270:	cmp	r0, #1
   14274:	bne	14124 <table_cell_from_buffer@@Base+0xa8>
   14278:	mov	r2, r4
   1427c:	mov	r1, r8
   14280:	mov	r0, r5
   14284:	vldr	s0, [sp, #8]
   14288:	bl	13a70 <table_set_float@@Base>
   1428c:	mov	r6, #0
   14290:	b	14128 <table_cell_from_buffer@@Base+0xac>
   14294:	ldr	r1, [pc, #1084]	; 146d8 <table_cell_from_buffer@@Base+0x65c>
   14298:	mov	r0, r6
   1429c:	add	r2, sp, #8
   142a0:	add	r1, pc, r1
   142a4:	bl	11b44 <__isoc99_sscanf@plt>
   142a8:	cmp	r0, #1
   142ac:	bne	14124 <table_cell_from_buffer@@Base+0xa8>
   142b0:	mov	r2, r4
   142b4:	mov	r1, r8
   142b8:	mov	r0, r5
   142bc:	vldr	d0, [sp, #8]
   142c0:	bl	13ab8 <table_set_ldouble@@Base>
   142c4:	mov	r6, #0
   142c8:	b	14128 <table_cell_from_buffer@@Base+0xac>
   142cc:	ldr	r1, [pc, #1032]	; 146dc <table_cell_from_buffer@@Base+0x660>
   142d0:	add	r7, sp, #8
   142d4:	mov	r0, r6
   142d8:	mov	r2, r7
   142dc:	add	r1, pc, r1
   142e0:	bl	11b44 <__isoc99_sscanf@plt>
   142e4:	cmp	r0, #1
   142e8:	bne	14124 <table_cell_from_buffer@@Base+0xa8>
   142ec:	ldrd	r6, [r7]
   142f0:	mov	r2, r4
   142f4:	mov	r1, r8
   142f8:	strd	r6, [sp]
   142fc:	mov	r0, r5
   14300:	bl	13a50 <table_set_ullong@@Base>
   14304:	mov	r6, #0
   14308:	b	14128 <table_cell_from_buffer@@Base+0xac>
   1430c:	ldr	r1, [pc, #972]	; 146e0 <table_cell_from_buffer@@Base+0x664>
   14310:	add	r7, sp, #8
   14314:	mov	r0, r6
   14318:	mov	r2, r7
   1431c:	add	r1, pc, r1
   14320:	bl	11b44 <__isoc99_sscanf@plt>
   14324:	cmp	r0, #1
   14328:	bne	14124 <table_cell_from_buffer@@Base+0xa8>
   1432c:	ldrd	r6, [r7]
   14330:	mov	r2, r4
   14334:	mov	r1, r8
   14338:	strd	r6, [sp]
   1433c:	mov	r0, r5
   14340:	bl	13a30 <table_set_llong@@Base>
   14344:	mov	r6, #0
   14348:	b	14128 <table_cell_from_buffer@@Base+0xac>
   1434c:	ldr	r1, [pc, #912]	; 146e4 <table_cell_from_buffer@@Base+0x668>
   14350:	mov	r0, r6
   14354:	add	r2, sp, #8
   14358:	add	r1, pc, r1
   1435c:	bl	11b44 <__isoc99_sscanf@plt>
   14360:	cmp	r0, #1
   14364:	bne	14124 <table_cell_from_buffer@@Base+0xa8>
   14368:	mov	r2, r4
   1436c:	mov	r1, r8
   14370:	mov	r0, r5
   14374:	ldr	r3, [sp, #8]
   14378:	bl	13a08 <table_set_ulong@@Base>
   1437c:	mov	r6, #0
   14380:	b	14128 <table_cell_from_buffer@@Base+0xac>
   14384:	ldr	r1, [pc, #860]	; 146e8 <table_cell_from_buffer@@Base+0x66c>
   14388:	mov	r0, r6
   1438c:	add	r2, sp, #8
   14390:	add	r1, pc, r1
   14394:	bl	11b44 <__isoc99_sscanf@plt>
   14398:	cmp	r0, #1
   1439c:	bne	14124 <table_cell_from_buffer@@Base+0xa8>
   143a0:	mov	r2, r4
   143a4:	mov	r1, r8
   143a8:	mov	r0, r5
   143ac:	ldr	r3, [sp, #8]
   143b0:	bl	139e0 <table_set_long@@Base>
   143b4:	mov	r6, #0
   143b8:	b	14128 <table_cell_from_buffer@@Base+0xac>
   143bc:	ldr	r1, [pc, #808]	; 146ec <table_cell_from_buffer@@Base+0x670>
   143c0:	add	r7, sp, #8
   143c4:	mov	r0, r6
   143c8:	mov	r2, r7
   143cc:	add	r1, pc, r1
   143d0:	bl	11b44 <__isoc99_sscanf@plt>
   143d4:	cmp	r0, #1
   143d8:	bne	14124 <table_cell_from_buffer@@Base+0xa8>
   143dc:	ldrh	r3, [r7]
   143e0:	mov	r2, r4
   143e4:	mov	r1, r8
   143e8:	mov	r0, r5
   143ec:	bl	139b8 <table_set_ushort@@Base>
   143f0:	mov	r6, #0
   143f4:	b	14128 <table_cell_from_buffer@@Base+0xac>
   143f8:	ldr	r1, [pc, #752]	; 146f0 <table_cell_from_buffer@@Base+0x674>
   143fc:	add	r7, sp, #8
   14400:	mov	r0, r6
   14404:	mov	r2, r7
   14408:	add	r1, pc, r1
   1440c:	bl	11b44 <__isoc99_sscanf@plt>
   14410:	cmp	r0, #1
   14414:	bne	14124 <table_cell_from_buffer@@Base+0xa8>
   14418:	ldrsh	r3, [r7]
   1441c:	mov	r2, r4
   14420:	mov	r1, r8
   14424:	mov	r0, r5
   14428:	bl	13990 <table_set_short@@Base>
   1442c:	mov	r6, #0
   14430:	b	14128 <table_cell_from_buffer@@Base+0xac>
   14434:	ldr	r1, [pc, #696]	; 146f4 <table_cell_from_buffer@@Base+0x678>
   14438:	add	r7, sp, #8
   1443c:	mov	r0, r6
   14440:	mov	r2, r7
   14444:	add	r1, pc, r1
   14448:	bl	11b44 <__isoc99_sscanf@plt>
   1444c:	cmp	r0, #1
   14450:	bne	14124 <table_cell_from_buffer@@Base+0xa8>
   14454:	ldrd	r6, [r7]
   14458:	mov	r2, r4
   1445c:	mov	r1, r8
   14460:	strd	r6, [sp]
   14464:	mov	r0, r5
   14468:	bl	13970 <table_set_uint64@@Base>
   1446c:	mov	r6, #0
   14470:	b	14128 <table_cell_from_buffer@@Base+0xac>
   14474:	ldr	r1, [pc, #636]	; 146f8 <table_cell_from_buffer@@Base+0x67c>
   14478:	add	r7, sp, #8
   1447c:	mov	r0, r6
   14480:	mov	r2, r7
   14484:	add	r1, pc, r1
   14488:	bl	11b44 <__isoc99_sscanf@plt>
   1448c:	cmp	r0, #1
   14490:	bne	14124 <table_cell_from_buffer@@Base+0xa8>
   14494:	ldrd	r6, [r7]
   14498:	mov	r2, r4
   1449c:	mov	r1, r8
   144a0:	strd	r6, [sp]
   144a4:	mov	r0, r5
   144a8:	bl	13950 <table_set_int64@@Base>
   144ac:	mov	r6, #0
   144b0:	b	14128 <table_cell_from_buffer@@Base+0xac>
   144b4:	ldr	r1, [pc, #576]	; 146fc <table_cell_from_buffer@@Base+0x680>
   144b8:	mov	r0, r6
   144bc:	add	r2, sp, #8
   144c0:	add	r1, pc, r1
   144c4:	bl	11b44 <__isoc99_sscanf@plt>
   144c8:	cmp	r0, #1
   144cc:	bne	14124 <table_cell_from_buffer@@Base+0xa8>
   144d0:	mov	r2, r4
   144d4:	mov	r1, r8
   144d8:	mov	r0, r5
   144dc:	ldr	r3, [sp, #8]
   144e0:	bl	13928 <table_set_uint32@@Base>
   144e4:	mov	r6, #0
   144e8:	b	14128 <table_cell_from_buffer@@Base+0xac>
   144ec:	ldr	r1, [pc, #524]	; 14700 <table_cell_from_buffer@@Base+0x684>
   144f0:	mov	r0, r6
   144f4:	add	r2, sp, #8
   144f8:	add	r1, pc, r1
   144fc:	bl	11b44 <__isoc99_sscanf@plt>
   14500:	cmp	r0, #1
   14504:	bne	14124 <table_cell_from_buffer@@Base+0xa8>
   14508:	mov	r2, r4
   1450c:	mov	r1, r8
   14510:	mov	r0, r5
   14514:	ldr	r3, [sp, #8]
   14518:	bl	13900 <table_set_int32@@Base>
   1451c:	mov	r6, #0
   14520:	b	14128 <table_cell_from_buffer@@Base+0xac>
   14524:	ldr	r1, [pc, #472]	; 14704 <table_cell_from_buffer@@Base+0x688>
   14528:	add	r7, sp, #8
   1452c:	mov	r0, r6
   14530:	mov	r2, r7
   14534:	add	r1, pc, r1
   14538:	bl	11b44 <__isoc99_sscanf@plt>
   1453c:	cmp	r0, #1
   14540:	bne	14124 <table_cell_from_buffer@@Base+0xa8>
   14544:	ldrh	r3, [r7]
   14548:	mov	r2, r4
   1454c:	mov	r1, r8
   14550:	mov	r0, r5
   14554:	bl	138d8 <table_set_uint16@@Base>
   14558:	mov	r6, #0
   1455c:	b	14128 <table_cell_from_buffer@@Base+0xac>
   14560:	ldr	r1, [pc, #416]	; 14708 <table_cell_from_buffer@@Base+0x68c>
   14564:	add	r7, sp, #8
   14568:	mov	r0, r6
   1456c:	mov	r2, r7
   14570:	add	r1, pc, r1
   14574:	bl	11b44 <__isoc99_sscanf@plt>
   14578:	cmp	r0, #1
   1457c:	bne	14124 <table_cell_from_buffer@@Base+0xa8>
   14580:	ldrsh	r3, [r7]
   14584:	mov	r2, r4
   14588:	mov	r1, r8
   1458c:	mov	r0, r5
   14590:	bl	138b0 <table_set_int16@@Base>
   14594:	mov	r6, #0
   14598:	b	14128 <table_cell_from_buffer@@Base+0xac>
   1459c:	ldr	r1, [pc, #360]	; 1470c <table_cell_from_buffer@@Base+0x690>
   145a0:	mov	r0, r6
   145a4:	add	r2, sp, #8
   145a8:	add	r1, pc, r1
   145ac:	bl	11b44 <__isoc99_sscanf@plt>
   145b0:	cmp	r0, #1
   145b4:	bne	14124 <table_cell_from_buffer@@Base+0xa8>
   145b8:	mov	r2, r4
   145bc:	mov	r1, r8
   145c0:	mov	r0, r5
   145c4:	ldrb	r3, [sp, #8]
   145c8:	bl	13888 <table_set_uint8@@Base>
   145cc:	mov	r6, #0
   145d0:	b	14128 <table_cell_from_buffer@@Base+0xac>
   145d4:	ldr	r1, [pc, #308]	; 14710 <table_cell_from_buffer@@Base+0x694>
   145d8:	add	r7, sp, #8
   145dc:	mov	r0, r6
   145e0:	mov	r2, r7
   145e4:	add	r1, pc, r1
   145e8:	bl	11b44 <__isoc99_sscanf@plt>
   145ec:	cmp	r0, #1
   145f0:	bne	14124 <table_cell_from_buffer@@Base+0xa8>
   145f4:	ldrsb	r3, [r7]
   145f8:	mov	r2, r4
   145fc:	mov	r1, r8
   14600:	mov	r0, r5
   14604:	bl	13860 <table_set_int8@@Base>
   14608:	mov	r6, #0
   1460c:	b	14128 <table_cell_from_buffer@@Base+0xac>
   14610:	ldr	r1, [pc, #252]	; 14714 <table_cell_from_buffer@@Base+0x698>
   14614:	mov	r0, r6
   14618:	add	r2, sp, #8
   1461c:	add	r1, pc, r1
   14620:	bl	11b44 <__isoc99_sscanf@plt>
   14624:	cmp	r0, #1
   14628:	bne	14124 <table_cell_from_buffer@@Base+0xa8>
   1462c:	mov	r2, r4
   14630:	mov	r1, r8
   14634:	mov	r0, r5
   14638:	ldr	r3, [sp, #8]
   1463c:	bl	13838 <table_set_uint@@Base>
   14640:	mov	r6, #0
   14644:	b	14128 <table_cell_from_buffer@@Base+0xac>
   14648:	ldr	r1, [pc, #200]	; 14718 <table_cell_from_buffer@@Base+0x69c>
   1464c:	mov	r0, r6
   14650:	add	r2, sp, #8
   14654:	add	r1, pc, r1
   14658:	bl	11b44 <__isoc99_sscanf@plt>
   1465c:	cmp	r0, #1
   14660:	bne	14124 <table_cell_from_buffer@@Base+0xa8>
   14664:	mov	r2, r4
   14668:	mov	r1, r8
   1466c:	mov	r0, r5
   14670:	ldr	r3, [sp, #8]
   14674:	bl	13810 <table_set_int@@Base>
   14678:	mov	r6, #0
   1467c:	b	14128 <table_cell_from_buffer@@Base+0xac>
   14680:	mov	r2, r4
   14684:	mov	r1, r8
   14688:	mov	r0, r5
   1468c:	mov	r3, r6
   14690:	bl	137e8 <table_set_bool@@Base>
   14694:	b	14128 <table_cell_from_buffer@@Base+0xac>
   14698:	mov	r2, r4
   1469c:	mov	r1, r8
   146a0:	mov	r0, r5
   146a4:	ldr	r3, [sp, #8]
   146a8:	bl	13b48 <table_set_ptr@@Base>
   146ac:	mov	r6, #0
   146b0:	b	14128 <table_cell_from_buffer@@Base+0xac>
   146b4:	mov	r6, #0
   146b8:	b	14128 <table_cell_from_buffer@@Base+0xac>
   146bc:	andeq	r0, r0, ip, ror #20
   146c0:	andeq	r0, r0, r4, lsl #20
   146c4:	strdeq	r0, [r0], -r8
   146c8:	andeq	r0, r0, ip, lsr #19
   146cc:	andeq	r0, r0, r4, lsl #19
   146d0:	andeq	r0, r0, r4, asr #18
   146d4:	andeq	r0, r0, r8, lsl #18
   146d8:	ldrdeq	r0, [r0], -r8
   146dc:	andeq	r0, r0, r8, ror r8
   146e0:	andeq	r0, r0, r0, lsr r8
   146e4:	andeq	r0, r0, r0, lsl r8
   146e8:	ldrdeq	r0, [r0], -r4
   146ec:	muleq	r0, r4, r7
   146f0:	andeq	r0, r0, r4, asr r7
   146f4:	andeq	r0, r0, r0, lsl r7
   146f8:	andeq	r0, r0, r8, asr #13
   146fc:	andeq	r0, r0, r8, lsl #13
   14700:	andeq	r0, r0, ip, asr #12
   14704:	andeq	r0, r0, ip, lsr #12
   14708:	andeq	r0, r0, ip, ror #11
   1470c:	andeq	r0, r0, r4, ror #11
   14710:	andeq	r0, r0, r0, lsr #11
   14714:	andeq	r0, r0, ip, lsr #10
   14718:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>

0001471c <table_get_cell_ptr@@Base>:
   1471c:	push	{r4, lr}
   14720:	mov	r4, r2
   14724:	bl	1322c <table_get_row_ptr@@Base>
   14728:	ldr	r0, [r0]
   1472c:	add	r0, r0, r4, lsl #2
   14730:	pop	{r4, pc}

00014734 <table_cell_init@@Base>:
   14734:	push	{r4, lr}
   14738:	bl	1471c <table_get_cell_ptr@@Base>
   1473c:	mov	r3, #0
   14740:	str	r3, [r0]
   14744:	pop	{r4, pc}

00014748 <table_cell_destroy@@Base>:
   14748:	push	{r4, r5, r6, lr}
   1474c:	mov	r6, r1
   14750:	mov	r1, r2
   14754:	mov	r4, r2
   14758:	mov	r5, r0
   1475c:	bl	12a48 <table_get_column_data_type@@Base>
   14760:	cmp	r0, #23
   14764:	popeq	{r4, r5, r6, pc}
   14768:	mov	r2, r4
   1476c:	mov	r1, r6
   14770:	mov	r0, r5
   14774:	bl	1471c <table_get_cell_ptr@@Base>
   14778:	ldr	r0, [r0]
   1477c:	cmp	r0, #0
   14780:	popeq	{r4, r5, r6, pc}
   14784:	pop	{r4, r5, r6, lr}
   14788:	b	11ad8 <free@plt>

0001478c <table_cell_nullify@@Base>:
   1478c:	push	{r4, lr}
   14790:	bl	1471c <table_get_cell_ptr@@Base>
   14794:	mov	r4, r0
   14798:	ldr	r0, [r0]
   1479c:	cmp	r0, #0
   147a0:	beq	147b0 <table_cell_nullify@@Base+0x24>
   147a4:	bl	11ad8 <free@plt>
   147a8:	mov	r3, #0
   147ac:	str	r3, [r4]
   147b0:	mov	r0, #0
   147b4:	pop	{r4, pc}
   147b8:	subs	r2, r1, #1
   147bc:	bxeq	lr
   147c0:	bcc	14998 <table_cell_nullify@@Base+0x20c>
   147c4:	cmp	r0, r1
   147c8:	bls	1497c <table_cell_nullify@@Base+0x1f0>
   147cc:	tst	r1, r2
   147d0:	beq	14988 <table_cell_nullify@@Base+0x1fc>
   147d4:	clz	r3, r0
   147d8:	clz	r2, r1
   147dc:	sub	r3, r2, r3
   147e0:	rsbs	r3, r3, #31
   147e4:	addne	r3, r3, r3, lsl #1
   147e8:	mov	r2, #0
   147ec:	addne	pc, pc, r3, lsl #2
   147f0:	nop			; (mov r0, r0)
   147f4:	cmp	r0, r1, lsl #31
   147f8:	adc	r2, r2, r2
   147fc:	subcs	r0, r0, r1, lsl #31
   14800:	cmp	r0, r1, lsl #30
   14804:	adc	r2, r2, r2
   14808:	subcs	r0, r0, r1, lsl #30
   1480c:	cmp	r0, r1, lsl #29
   14810:	adc	r2, r2, r2
   14814:	subcs	r0, r0, r1, lsl #29
   14818:	cmp	r0, r1, lsl #28
   1481c:	adc	r2, r2, r2
   14820:	subcs	r0, r0, r1, lsl #28
   14824:	cmp	r0, r1, lsl #27
   14828:	adc	r2, r2, r2
   1482c:	subcs	r0, r0, r1, lsl #27
   14830:	cmp	r0, r1, lsl #26
   14834:	adc	r2, r2, r2
   14838:	subcs	r0, r0, r1, lsl #26
   1483c:	cmp	r0, r1, lsl #25
   14840:	adc	r2, r2, r2
   14844:	subcs	r0, r0, r1, lsl #25
   14848:	cmp	r0, r1, lsl #24
   1484c:	adc	r2, r2, r2
   14850:	subcs	r0, r0, r1, lsl #24
   14854:	cmp	r0, r1, lsl #23
   14858:	adc	r2, r2, r2
   1485c:	subcs	r0, r0, r1, lsl #23
   14860:	cmp	r0, r1, lsl #22
   14864:	adc	r2, r2, r2
   14868:	subcs	r0, r0, r1, lsl #22
   1486c:	cmp	r0, r1, lsl #21
   14870:	adc	r2, r2, r2
   14874:	subcs	r0, r0, r1, lsl #21
   14878:	cmp	r0, r1, lsl #20
   1487c:	adc	r2, r2, r2
   14880:	subcs	r0, r0, r1, lsl #20
   14884:	cmp	r0, r1, lsl #19
   14888:	adc	r2, r2, r2
   1488c:	subcs	r0, r0, r1, lsl #19
   14890:	cmp	r0, r1, lsl #18
   14894:	adc	r2, r2, r2
   14898:	subcs	r0, r0, r1, lsl #18
   1489c:	cmp	r0, r1, lsl #17
   148a0:	adc	r2, r2, r2
   148a4:	subcs	r0, r0, r1, lsl #17
   148a8:	cmp	r0, r1, lsl #16
   148ac:	adc	r2, r2, r2
   148b0:	subcs	r0, r0, r1, lsl #16
   148b4:	cmp	r0, r1, lsl #15
   148b8:	adc	r2, r2, r2
   148bc:	subcs	r0, r0, r1, lsl #15
   148c0:	cmp	r0, r1, lsl #14
   148c4:	adc	r2, r2, r2
   148c8:	subcs	r0, r0, r1, lsl #14
   148cc:	cmp	r0, r1, lsl #13
   148d0:	adc	r2, r2, r2
   148d4:	subcs	r0, r0, r1, lsl #13
   148d8:	cmp	r0, r1, lsl #12
   148dc:	adc	r2, r2, r2
   148e0:	subcs	r0, r0, r1, lsl #12
   148e4:	cmp	r0, r1, lsl #11
   148e8:	adc	r2, r2, r2
   148ec:	subcs	r0, r0, r1, lsl #11
   148f0:	cmp	r0, r1, lsl #10
   148f4:	adc	r2, r2, r2
   148f8:	subcs	r0, r0, r1, lsl #10
   148fc:	cmp	r0, r1, lsl #9
   14900:	adc	r2, r2, r2
   14904:	subcs	r0, r0, r1, lsl #9
   14908:	cmp	r0, r1, lsl #8
   1490c:	adc	r2, r2, r2
   14910:	subcs	r0, r0, r1, lsl #8
   14914:	cmp	r0, r1, lsl #7
   14918:	adc	r2, r2, r2
   1491c:	subcs	r0, r0, r1, lsl #7
   14920:	cmp	r0, r1, lsl #6
   14924:	adc	r2, r2, r2
   14928:	subcs	r0, r0, r1, lsl #6
   1492c:	cmp	r0, r1, lsl #5
   14930:	adc	r2, r2, r2
   14934:	subcs	r0, r0, r1, lsl #5
   14938:	cmp	r0, r1, lsl #4
   1493c:	adc	r2, r2, r2
   14940:	subcs	r0, r0, r1, lsl #4
   14944:	cmp	r0, r1, lsl #3
   14948:	adc	r2, r2, r2
   1494c:	subcs	r0, r0, r1, lsl #3
   14950:	cmp	r0, r1, lsl #2
   14954:	adc	r2, r2, r2
   14958:	subcs	r0, r0, r1, lsl #2
   1495c:	cmp	r0, r1, lsl #1
   14960:	adc	r2, r2, r2
   14964:	subcs	r0, r0, r1, lsl #1
   14968:	cmp	r0, r1
   1496c:	adc	r2, r2, r2
   14970:	subcs	r0, r0, r1
   14974:	mov	r0, r2
   14978:	bx	lr
   1497c:	moveq	r0, #1
   14980:	movne	r0, #0
   14984:	bx	lr
   14988:	clz	r2, r1
   1498c:	rsb	r2, r2, #31
   14990:	lsr	r0, r0, r2
   14994:	bx	lr
   14998:	cmp	r0, #0
   1499c:	mvnne	r0, #0
   149a0:	b	149c4 <table_cell_nullify@@Base+0x238>
   149a4:	cmp	r1, #0
   149a8:	beq	14998 <table_cell_nullify@@Base+0x20c>
   149ac:	push	{r0, r1, lr}
   149b0:	bl	147b8 <table_cell_nullify@@Base+0x2c>
   149b4:	pop	{r1, r2, lr}
   149b8:	mul	r3, r2, r0
   149bc:	sub	r1, r1, r3
   149c0:	bx	lr
   149c4:	push	{r1, lr}
   149c8:	mov	r0, #8
   149cc:	bl	11ab4 <raise@plt>
   149d0:	pop	{r1, pc}

000149d4 <__libc_csu_init@@Base>:
   149d4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   149d8:	mov	r7, r0
   149dc:	ldr	r6, [pc, #72]	; 14a2c <__libc_csu_init@@Base+0x58>
   149e0:	ldr	r5, [pc, #72]	; 14a30 <__libc_csu_init@@Base+0x5c>
   149e4:	add	r6, pc, r6
   149e8:	add	r5, pc, r5
   149ec:	sub	r6, r6, r5
   149f0:	mov	r8, r1
   149f4:	mov	r9, r2
   149f8:	bl	11a94 <raise@plt-0x20>
   149fc:	asrs	r6, r6, #2
   14a00:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14a04:	mov	r4, #0
   14a08:	add	r4, r4, #1
   14a0c:	ldr	r3, [r5], #4
   14a10:	mov	r2, r9
   14a14:	mov	r1, r8
   14a18:	mov	r0, r7
   14a1c:	blx	r3
   14a20:	cmp	r6, r4
   14a24:	bne	14a08 <__libc_csu_init@@Base+0x34>
   14a28:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14a2c:	andeq	r0, r1, r4, lsr #10
   14a30:	andeq	r0, r1, ip, lsl r5

00014a34 <__libc_csu_fini@@Base>:
   14a34:	bx	lr

Disassembly of section .fini:

00014a38 <.fini>:
   14a38:	push	{r3, lr}
   14a3c:	pop	{r3, pc}
