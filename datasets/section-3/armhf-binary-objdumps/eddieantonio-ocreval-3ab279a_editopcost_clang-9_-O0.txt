
../repos/eddieantonio-ocreval-3ab279a/editopcost/editopcost:     file format elf32-littlearm


Disassembly of section .init:

00010748 <.init>:
   10748:	push	{r3, lr}
   1074c:	bl	10888 <abort@plt+0x48>
   10750:	pop	{r3, pc}

Disassembly of section .plt:

00010754 <calloc@plt-0x14>:
   10754:	push	{lr}		; (str lr, [sp, #-4]!)
   10758:	ldr	lr, [pc, #4]	; 10764 <calloc@plt-0x4>
   1075c:	add	lr, pc, lr
   10760:	ldr	pc, [lr, #8]!
   10764:	muleq	r1, ip, r8

00010768 <calloc@plt>:
   10768:	add	ip, pc, #0, 12
   1076c:	add	ip, ip, #73728	; 0x12000
   10770:	ldr	pc, [ip, #2204]!	; 0x89c

00010774 <strcmp@plt>:
   10774:	add	ip, pc, #0, 12
   10778:	add	ip, ip, #73728	; 0x12000
   1077c:	ldr	pc, [ip, #2196]!	; 0x894

00010780 <printf@plt>:
   10780:	add	ip, pc, #0, 12
   10784:	add	ip, ip, #73728	; 0x12000
   10788:	ldr	pc, [ip, #2188]!	; 0x88c

0001078c <fopen@plt>:
   1078c:	add	ip, pc, #0, 12
   10790:	add	ip, ip, #73728	; 0x12000
   10794:	ldr	pc, [ip, #2180]!	; 0x884

00010798 <free@plt>:
   10798:	add	ip, pc, #0, 12
   1079c:	add	ip, ip, #73728	; 0x12000
   107a0:	ldr	pc, [ip, #2172]!	; 0x87c

000107a4 <fgets@plt>:
   107a4:	add	ip, pc, #0, 12
   107a8:	add	ip, ip, #73728	; 0x12000
   107ac:	ldr	pc, [ip, #2164]!	; 0x874

000107b0 <strdup@plt>:
   107b0:	add	ip, pc, #0, 12
   107b4:	add	ip, ip, #73728	; 0x12000
   107b8:	ldr	pc, [ip, #2156]!	; 0x86c

000107bc <__xstat@plt>:
   107bc:	add	ip, pc, #0, 12
   107c0:	add	ip, ip, #73728	; 0x12000
   107c4:	ldr	pc, [ip, #2148]!	; 0x864

000107c8 <__libc_start_main@plt>:
   107c8:	add	ip, pc, #0, 12
   107cc:	add	ip, ip, #73728	; 0x12000
   107d0:	ldr	pc, [ip, #2140]!	; 0x85c

000107d4 <__sysv_signal@plt>:
   107d4:	add	ip, pc, #0, 12
   107d8:	add	ip, ip, #73728	; 0x12000
   107dc:	ldr	pc, [ip, #2132]!	; 0x854

000107e0 <__gmon_start__@plt>:
   107e0:	add	ip, pc, #0, 12
   107e4:	add	ip, ip, #73728	; 0x12000
   107e8:	ldr	pc, [ip, #2124]!	; 0x84c

000107ec <exit@plt>:
   107ec:	add	ip, pc, #0, 12
   107f0:	add	ip, ip, #73728	; 0x12000
   107f4:	ldr	pc, [ip, #2116]!	; 0x844

000107f8 <strlen@plt>:
   107f8:	add	ip, pc, #0, 12
   107fc:	add	ip, ip, #73728	; 0x12000
   10800:	ldr	pc, [ip, #2108]!	; 0x83c

00010804 <fprintf@plt>:
   10804:	add	ip, pc, #0, 12
   10808:	add	ip, ip, #73728	; 0x12000
   1080c:	ldr	pc, [ip, #2100]!	; 0x834

00010810 <__isoc99_sscanf@plt>:
   10810:	add	ip, pc, #0, 12
   10814:	add	ip, ip, #73728	; 0x12000
   10818:	ldr	pc, [ip, #2092]!	; 0x82c

0001081c <fclose@plt>:
   1081c:	add	ip, pc, #0, 12
   10820:	add	ip, ip, #73728	; 0x12000
   10824:	ldr	pc, [ip, #2084]!	; 0x824

00010828 <sprintf@plt>:
   10828:	add	ip, pc, #0, 12
   1082c:	add	ip, ip, #73728	; 0x12000
   10830:	ldr	pc, [ip, #2076]!	; 0x81c

00010834 <strncmp@plt>:
   10834:	add	ip, pc, #0, 12
   10838:	add	ip, ip, #73728	; 0x12000
   1083c:	ldr	pc, [ip, #2068]!	; 0x814

00010840 <abort@plt>:
   10840:	add	ip, pc, #0, 12
   10844:	add	ip, ip, #73728	; 0x12000
   10848:	ldr	pc, [ip, #2060]!	; 0x80c

Disassembly of section .text:

0001084c <error@@Base-0xff0>:
   1084c:	mov	fp, #0
   10850:	mov	lr, #0
   10854:	pop	{r1}		; (ldr r1, [sp], #4)
   10858:	mov	r2, sp
   1085c:	push	{r2}		; (str r2, [sp, #-4]!)
   10860:	push	{r0}		; (str r0, [sp, #-4]!)
   10864:	ldr	ip, [pc, #16]	; 1087c <abort@plt+0x3c>
   10868:	push	{ip}		; (str ip, [sp, #-4]!)
   1086c:	ldr	r0, [pc, #12]	; 10880 <abort@plt+0x40>
   10870:	ldr	r3, [pc, #12]	; 10884 <abort@plt+0x44>
   10874:	bl	107c8 <__libc_start_main@plt>
   10878:	bl	10840 <abort@plt>
   1087c:	andeq	r1, r1, r8, ror #27
   10880:	andeq	r0, r1, r8, asr #21
   10884:	andeq	r1, r1, r8, lsl #27
   10888:	ldr	r3, [pc, #20]	; 108a4 <abort@plt+0x64>
   1088c:	ldr	r2, [pc, #20]	; 108a8 <abort@plt+0x68>
   10890:	add	r3, pc, r3
   10894:	ldr	r2, [r3, r2]
   10898:	cmp	r2, #0
   1089c:	bxeq	lr
   108a0:	b	107e0 <__gmon_start__@plt>
   108a4:	andeq	r2, r1, r8, ror #14
   108a8:	andeq	r0, r0, r0, lsl #1
   108ac:	ldr	r0, [pc, #24]	; 108cc <abort@plt+0x8c>
   108b0:	ldr	r3, [pc, #24]	; 108d0 <abort@plt+0x90>
   108b4:	cmp	r3, r0
   108b8:	bxeq	lr
   108bc:	ldr	r3, [pc, #16]	; 108d4 <abort@plt+0x94>
   108c0:	cmp	r3, #0
   108c4:	bxeq	lr
   108c8:	bx	r3
   108cc:	strheq	r3, [r2], -r8
   108d0:	strheq	r3, [r2], -r8
   108d4:	andeq	r0, r0, r0
   108d8:	ldr	r0, [pc, #36]	; 10904 <abort@plt+0xc4>
   108dc:	ldr	r1, [pc, #36]	; 10908 <abort@plt+0xc8>
   108e0:	sub	r1, r1, r0
   108e4:	asr	r1, r1, #2
   108e8:	add	r1, r1, r1, lsr #31
   108ec:	asrs	r1, r1, #1
   108f0:	bxeq	lr
   108f4:	ldr	r3, [pc, #16]	; 1090c <abort@plt+0xcc>
   108f8:	cmp	r3, #0
   108fc:	bxeq	lr
   10900:	bx	r3
   10904:	strheq	r3, [r2], -r8
   10908:	strheq	r3, [r2], -r8
   1090c:	andeq	r0, r0, r0
   10910:	push	{r4, lr}
   10914:	ldr	r4, [pc, #24]	; 10934 <abort@plt+0xf4>
   10918:	ldrb	r3, [r4]
   1091c:	cmp	r3, #0
   10920:	popne	{r4, pc}
   10924:	bl	108ac <abort@plt+0x6c>
   10928:	mov	r3, #1
   1092c:	strb	r3, [r4]
   10930:	pop	{r4, pc}
   10934:	strheq	r3, [r2], -r8
   10938:	b	108d8 <abort@plt+0x98>
   1093c:	sub	sp, sp, #4
   10940:	ldr	r0, [pc, #164]	; 109ec <abort@plt+0x1ac>
   10944:	ldr	r0, [pc, r0]
   10948:	ldr	r1, [pc, #160]	; 109f0 <abort@plt+0x1b0>
   1094c:	ldr	r1, [pc, r1]
   10950:	ldr	r2, [r1]
   10954:	ldr	r3, [r0]
   10958:	sub	r2, r3, r2
   1095c:	str	r2, [r0]
   10960:	ldr	r2, [r1, #4]
   10964:	ldr	r3, [r0, #4]
   10968:	sub	r2, r3, r2
   1096c:	str	r2, [r0, #4]
   10970:	ldr	r1, [r1, #8]
   10974:	ldr	r2, [r0, #8]
   10978:	sub	r1, r2, r1
   1097c:	str	r1, [r0, #8]
   10980:	movw	r0, #1
   10984:	strh	r0, [sp, #2]
   10988:	ldrsh	r0, [sp, #2]
   1098c:	cmp	r0, #100	; 0x64
   10990:	bgt	109e4 <abort@plt+0x1a4>
   10994:	ldr	r0, [pc, #88]	; 109f4 <abort@plt+0x1b4>
   10998:	ldr	r0, [pc, r0]
   1099c:	add	r0, r0, #12
   109a0:	ldrsh	r1, [sp, #2]
   109a4:	ldr	r2, [pc, #76]	; 109f8 <abort@plt+0x1b8>
   109a8:	ldr	r2, [pc, r2]
   109ac:	add	r2, r2, r1, lsl #2
   109b0:	ldr	r2, [r2, #12]
   109b4:	ldr	r3, [pc, #64]	; 109fc <abort@plt+0x1bc>
   109b8:	ldr	r3, [pc, r3]
   109bc:	add	r1, r3, r1, lsl #2
   109c0:	add	r1, r1, #12
   109c4:	ldr	r3, [r1]
   109c8:	sub	r2, r3, r2
   109cc:	str	r2, [r1]
   109d0:	ldrh	r0, [sp, #2]
   109d4:	movw	r1, #1
   109d8:	add	r0, r0, r1
   109dc:	strh	r0, [sp, #2]
   109e0:	b	10988 <abort@plt+0x148>
   109e4:	add	sp, sp, #4
   109e8:	bx	lr
   109ec:	andeq	r2, r1, ip, asr #14
   109f0:	andeq	r2, r1, r8, lsl #14
   109f4:	strdeq	r2, [r1], -r8
   109f8:	andeq	r2, r1, ip, lsr #13
   109fc:	ldrdeq	r2, [r1], -r8
   10a00:	push	{fp, lr}
   10a04:	mov	fp, sp
   10a08:	sub	sp, sp, #16
   10a0c:	ldr	r0, [pc, #164]	; 10ab8 <abort@plt+0x278>
   10a10:	ldr	r0, [pc, r0]
   10a14:	ldr	r1, [r0]
   10a18:	str	r1, [fp, #-4]
   10a1c:	ldr	r0, [r0, #8]
   10a20:	str	r0, [sp, #8]
   10a24:	movw	r0, #0
   10a28:	str	r0, [sp, #4]
   10a2c:	ldr	r0, [sp, #4]
   10a30:	cmp	r0, #100	; 0x64
   10a34:	bgt	10ab0 <abort@plt+0x270>
   10a38:	ldr	r0, [pc, #124]	; 10abc <abort@plt+0x27c>
   10a3c:	ldr	r0, [pc, r0]
   10a40:	add	r0, r0, #12
   10a44:	ldr	r1, [sp, #4]
   10a48:	ldr	r2, [fp, #-4]
   10a4c:	ldr	r3, [sp, #8]
   10a50:	mla	r2, r1, r3, r2
   10a54:	ldr	r3, [pc, #100]	; 10ac0 <abort@plt+0x280>
   10a58:	add	r3, pc, r3
   10a5c:	str	r0, [sp]
   10a60:	mov	r0, r3
   10a64:	bl	10780 <printf@plt>
   10a68:	ldr	r1, [sp, #4]
   10a6c:	ldr	r2, [pc, #80]	; 10ac4 <abort@plt+0x284>
   10a70:	ldr	r2, [pc, r2]
   10a74:	add	r2, r2, #12
   10a78:	ldr	r3, [r2, r1, lsl #2]
   10a7c:	ldr	ip, [fp, #-4]
   10a80:	mla	r1, r1, r3, ip
   10a84:	str	r1, [fp, #-4]
   10a88:	ldr	r1, [sp, #4]
   10a8c:	add	r1, r2, r1, lsl #2
   10a90:	ldr	r1, [r1]
   10a94:	ldr	r2, [sp, #8]
   10a98:	sub	r1, r2, r1
   10a9c:	str	r1, [sp, #8]
   10aa0:	ldr	r0, [sp, #4]
   10aa4:	add	r0, r0, #1
   10aa8:	str	r0, [sp, #4]
   10aac:	b	10a2c <abort@plt+0x1ec>
   10ab0:	mov	sp, fp
   10ab4:	pop	{fp, pc}
   10ab8:	andeq	r2, r1, r0, lsl #13
   10abc:	andeq	r2, r1, r4, asr r6
   10ac0:	andeq	r1, r0, r8, lsr #7
   10ac4:	andeq	r2, r1, r0, lsr #12
   10ac8:	push	{fp, lr}
   10acc:	mov	fp, sp
   10ad0:	sub	sp, sp, #24
   10ad4:	ldr	r2, [pc, #204]	; 10ba8 <abort@plt+0x368>
   10ad8:	add	r2, pc, r2
   10adc:	ldr	r3, [pc, #200]	; 10bac <abort@plt+0x36c>
   10ae0:	ldr	r3, [pc, r3]
   10ae4:	movw	ip, #0
   10ae8:	str	ip, [fp, #-4]
   10aec:	str	r0, [fp, #-8]
   10af0:	str	r1, [sp, #12]
   10af4:	ldr	r1, [sp, #12]
   10af8:	sub	r0, fp, #8
   10afc:	str	r3, [sp, #8]
   10b00:	mov	r3, ip
   10b04:	ldr	ip, [sp, #8]
   10b08:	blx	ip
   10b0c:	ldr	r0, [fp, #-8]
   10b10:	cmp	r0, #1
   10b14:	blt	10b24 <abort@plt+0x2e4>
   10b18:	ldr	r0, [fp, #-8]
   10b1c:	cmp	r0, #2
   10b20:	ble	10b38 <abort@plt+0x2f8>
   10b24:	ldr	r0, [pc, #152]	; 10bc4 <abort@plt+0x384>
   10b28:	add	r0, pc, r0
   10b2c:	ldr	r1, [pc, #148]	; 10bc8 <abort@plt+0x388>
   10b30:	ldr	r1, [pc, r1]
   10b34:	blx	r1
   10b38:	ldr	r0, [pc, #112]	; 10bb0 <abort@plt+0x370>
   10b3c:	ldr	r0, [pc, r0]
   10b40:	ldr	r1, [pc, #108]	; 10bb4 <abort@plt+0x374>
   10b44:	ldr	r1, [pc, r1]
   10b48:	ldr	r2, [sp, #12]
   10b4c:	ldr	r2, [r2]
   10b50:	str	r1, [sp, #4]
   10b54:	mov	r1, r2
   10b58:	ldr	r2, [sp, #4]
   10b5c:	blx	r2
   10b60:	ldr	r0, [fp, #-8]
   10b64:	cmp	r0, #2
   10b68:	bne	10b98 <abort@plt+0x358>
   10b6c:	ldr	r0, [pc, #68]	; 10bb8 <abort@plt+0x378>
   10b70:	ldr	r0, [pc, r0]
   10b74:	ldr	r1, [pc, #64]	; 10bbc <abort@plt+0x37c>
   10b78:	ldr	r1, [pc, r1]
   10b7c:	ldr	r2, [sp, #12]
   10b80:	ldr	r2, [r2, #4]
   10b84:	str	r1, [sp]
   10b88:	mov	r1, r2
   10b8c:	ldr	r2, [sp]
   10b90:	blx	r2
   10b94:	bl	1093c <abort@plt+0xfc>
   10b98:	bl	10a00 <abort@plt+0x1c0>
   10b9c:	ldr	r0, [pc, #28]	; 10bc0 <abort@plt+0x380>
   10ba0:	ldr	r0, [pc, r0]
   10ba4:	blx	r0
   10ba8:	andeq	r1, r0, r4, lsr r3
   10bac:	muleq	r1, r4, r5
   10bb0:	andeq	r2, r1, r4, asr r5
   10bb4:	andeq	r2, r1, r4, lsr #10
   10bb8:	andeq	r2, r1, r4, ror #9
   10bbc:	strdeq	r2, [r1], -r0
   10bc0:	andeq	r2, r1, ip, ror #9
   10bc4:	andeq	r1, r0, fp, lsl #6
   10bc8:	andeq	r2, r1, ip, lsr #10
   10bcc:	push	{fp, lr}
   10bd0:	mov	fp, sp
   10bd4:	sub	sp, sp, #40	; 0x28
   10bd8:	ldr	r2, [pc, #488]	; 10dc8 <abort@plt+0x588>
   10bdc:	add	r2, pc, r2
   10be0:	ldr	r3, [pc, #484]	; 10dcc <abort@plt+0x58c>
   10be4:	ldr	r3, [pc, r3]
   10be8:	str	r0, [fp, #-4]
   10bec:	str	r1, [fp, #-8]
   10bf0:	ldr	r0, [fp, #-8]
   10bf4:	mov	r1, r2
   10bf8:	blx	r3
   10bfc:	str	r0, [fp, #-12]
   10c00:	ldr	r0, [fp, #-12]
   10c04:	bl	10df0 <abort@plt+0x5b0>
   10c08:	and	r0, r0, #255	; 0xff
   10c0c:	cmp	r0, #0
   10c10:	beq	10d54 <abort@plt+0x514>
   10c14:	ldr	r0, [pc, #436]	; 10dd0 <abort@plt+0x590>
   10c18:	add	r0, pc, r0
   10c1c:	ldr	r1, [pc, #432]	; 10dd4 <abort@plt+0x594>
   10c20:	add	r1, pc, r1
   10c24:	movw	r2, #42	; 0x2a
   10c28:	bl	10834 <strncmp@plt>
   10c2c:	cmp	r0, #0
   10c30:	bne	10d54 <abort@plt+0x514>
   10c34:	ldr	r0, [fp, #-12]
   10c38:	bl	10df0 <abort@plt+0x5b0>
   10c3c:	and	r0, r0, #255	; 0xff
   10c40:	cmp	r0, #0
   10c44:	beq	10d54 <abort@plt+0x514>
   10c48:	ldr	r0, [pc, #408]	; 10de8 <abort@plt+0x5a8>
   10c4c:	add	r0, pc, r0
   10c50:	ldr	r1, [pc, #404]	; 10dec <abort@plt+0x5ac>
   10c54:	add	r1, pc, r1
   10c58:	bl	10774 <strcmp@plt>
   10c5c:	cmp	r0, #0
   10c60:	bne	10d54 <abort@plt+0x514>
   10c64:	ldr	r0, [fp, #-12]
   10c68:	ldr	r2, [fp, #-4]
   10c6c:	add	r1, sp, #20
   10c70:	bl	10e44 <abort@plt+0x604>
   10c74:	and	r0, r0, #255	; 0xff
   10c78:	cmp	r0, #0
   10c7c:	beq	10d54 <abort@plt+0x514>
   10c80:	ldr	r0, [fp, #-12]
   10c84:	ldr	r1, [fp, #-4]
   10c88:	add	r2, r1, #4
   10c8c:	add	r1, sp, #20
   10c90:	bl	10e44 <abort@plt+0x604>
   10c94:	and	r0, r0, #255	; 0xff
   10c98:	cmp	r0, #0
   10c9c:	beq	10d54 <abort@plt+0x514>
   10ca0:	ldr	r0, [fp, #-12]
   10ca4:	ldr	r1, [fp, #-4]
   10ca8:	add	r2, r1, #8
   10cac:	sub	r1, fp, #16
   10cb0:	bl	10e44 <abort@plt+0x604>
   10cb4:	and	r0, r0, #255	; 0xff
   10cb8:	cmp	r0, #0
   10cbc:	beq	10d54 <abort@plt+0x514>
   10cc0:	ldr	r0, [fp, #-16]
   10cc4:	cmp	r0, #0
   10cc8:	ble	10d50 <abort@plt+0x510>
   10ccc:	ldr	r0, [fp, #-12]
   10cd0:	bl	10df0 <abort@plt+0x5b0>
   10cd4:	and	r0, r0, #255	; 0xff
   10cd8:	cmp	r0, #0
   10cdc:	beq	10d50 <abort@plt+0x510>
   10ce0:	ldr	r0, [fp, #-12]
   10ce4:	bl	10df0 <abort@plt+0x5b0>
   10ce8:	and	r0, r0, #255	; 0xff
   10cec:	cmp	r0, #0
   10cf0:	beq	10d50 <abort@plt+0x510>
   10cf4:	ldr	r0, [fp, #-12]
   10cf8:	bl	10df0 <abort@plt+0x5b0>
   10cfc:	and	r0, r0, #255	; 0xff
   10d00:	cmp	r0, #0
   10d04:	beq	10d50 <abort@plt+0x510>
   10d08:	b	10d0c <abort@plt+0x4cc>
   10d0c:	ldr	r0, [fp, #-12]
   10d10:	add	r1, sp, #20
   10d14:	add	r2, sp, #16
   10d18:	bl	10ed0 <abort@plt+0x690>
   10d1c:	sxtb	r0, r0
   10d20:	cmp	r0, #0
   10d24:	beq	10d4c <abort@plt+0x50c>
   10d28:	ldr	r0, [sp, #20]
   10d2c:	ldr	r1, [fp, #-4]
   10d30:	add	r1, r1, #12
   10d34:	ldr	r2, [sp, #16]
   10d38:	add	r1, r1, r2, lsl #2
   10d3c:	ldr	r2, [r1]
   10d40:	add	r0, r2, r0
   10d44:	str	r0, [r1]
   10d48:	b	10d0c <abort@plt+0x4cc>
   10d4c:	b	10d50 <abort@plt+0x510>
   10d50:	b	10da4 <abort@plt+0x564>
   10d54:	ldr	r0, [fp, #-8]
   10d58:	movw	r1, #0
   10d5c:	cmp	r0, r1
   10d60:	beq	10d70 <abort@plt+0x530>
   10d64:	ldr	r0, [fp, #-8]
   10d68:	str	r0, [sp, #12]
   10d6c:	b	10d80 <abort@plt+0x540>
   10d70:	ldr	r0, [pc, #96]	; 10dd8 <abort@plt+0x598>
   10d74:	add	r0, pc, r0
   10d78:	str	r0, [sp, #12]
   10d7c:	b	10d80 <abort@plt+0x540>
   10d80:	ldr	r0, [sp, #12]
   10d84:	ldr	r1, [pc, #80]	; 10ddc <abort@plt+0x59c>
   10d88:	add	r1, pc, r1
   10d8c:	ldr	r2, [pc, #76]	; 10de0 <abort@plt+0x5a0>
   10d90:	ldr	r2, [pc, r2]
   10d94:	str	r0, [sp, #8]
   10d98:	mov	r0, r1
   10d9c:	ldr	r1, [sp, #8]
   10da0:	blx	r2
   10da4:	ldr	r0, [pc, #56]	; 10de4 <abort@plt+0x5a4>
   10da8:	ldr	r0, [pc, r0]
   10dac:	ldr	r1, [fp, #-12]
   10db0:	str	r0, [sp, #4]
   10db4:	mov	r0, r1
   10db8:	ldr	r1, [sp, #4]
   10dbc:	blx	r1
   10dc0:	mov	sp, fp
   10dc4:	pop	{fp, pc}
   10dc8:	andeq	r1, r0, pc, ror #4
   10dcc:	andeq	r2, r1, r0, lsl #9
   10dd0:	muleq	r1, r9, r4
   10dd4:	andeq	r1, r0, sp, lsr #4
   10dd8:	andeq	r1, r0, r5, asr #2
   10ddc:	andeq	r1, r0, pc, lsl r1
   10de0:	andeq	r2, r1, ip, lsl #6
   10de4:	andeq	r2, r1, r8, lsr #5
   10de8:	andeq	r2, r1, r5, ror #8
   10dec:	andeq	r1, r0, r6, lsr #4
   10df0:	push	{fp, lr}
   10df4:	mov	fp, sp
   10df8:	sub	sp, sp, #8
   10dfc:	ldr	r1, [pc, #60]	; 10e40 <abort@plt+0x600>
   10e00:	add	r1, pc, r1
   10e04:	str	r0, [sp, #4]
   10e08:	ldr	r2, [sp, #4]
   10e0c:	mov	r0, r1
   10e10:	movw	r1, #99	; 0x63
   10e14:	bl	107a4 <fgets@plt>
   10e18:	movw	r1, #0
   10e1c:	cmp	r0, r1
   10e20:	movw	r0, #0
   10e24:	movne	r0, #1
   10e28:	tst	r0, #1
   10e2c:	movw	r0, #1
   10e30:	moveq	r0, #0
   10e34:	and	r0, r0, #255	; 0xff
   10e38:	mov	sp, fp
   10e3c:	pop	{fp, pc}
   10e40:			; <UNDEFINED> instruction: 0x000122b1
   10e44:	push	{fp, lr}
   10e48:	mov	fp, sp
   10e4c:	sub	sp, sp, #16
   10e50:	str	r0, [sp, #8]
   10e54:	str	r1, [sp, #4]
   10e58:	str	r2, [sp]
   10e5c:	ldr	r0, [sp, #8]
   10e60:	bl	10df0 <abort@plt+0x5b0>
   10e64:	and	r0, r0, #255	; 0xff
   10e68:	cmp	r0, #0
   10e6c:	beq	10eb4 <abort@plt+0x674>
   10e70:	ldr	r0, [pc, #80]	; 10ec8 <abort@plt+0x688>
   10e74:	add	r0, pc, r0
   10e78:	ldr	r1, [pc, #76]	; 10ecc <abort@plt+0x68c>
   10e7c:	add	r1, pc, r1
   10e80:	ldr	r2, [sp, #4]
   10e84:	bl	10810 <__isoc99_sscanf@plt>
   10e88:	cmp	r0, #1
   10e8c:	bne	10eb4 <abort@plt+0x674>
   10e90:	ldr	r0, [sp, #4]
   10e94:	ldr	r0, [r0]
   10e98:	ldr	r1, [sp]
   10e9c:	ldr	r2, [r1]
   10ea0:	add	r0, r2, r0
   10ea4:	str	r0, [r1]
   10ea8:	movw	r0, #1
   10eac:	strb	r0, [fp, #-1]
   10eb0:	b	10ebc <abort@plt+0x67c>
   10eb4:	movw	r0, #0
   10eb8:	strb	r0, [fp, #-1]
   10ebc:	ldrb	r0, [fp, #-1]
   10ec0:	mov	sp, fp
   10ec4:	pop	{fp, pc}
   10ec8:	andeq	r2, r1, sp, lsr r2
   10ecc:	andeq	r1, r0, r3, lsl #1
   10ed0:	push	{fp, lr}
   10ed4:	mov	fp, sp
   10ed8:	sub	sp, sp, #16
   10edc:	str	r0, [fp, #-4]
   10ee0:	str	r1, [sp, #8]
   10ee4:	str	r2, [sp, #4]
   10ee8:	ldr	r0, [fp, #-4]
   10eec:	bl	10df0 <abort@plt+0x5b0>
   10ef0:	and	r0, r0, #255	; 0xff
   10ef4:	cmp	r0, #0
   10ef8:	movw	r0, #0
   10efc:	str	r0, [sp]
   10f00:	beq	10f30 <abort@plt+0x6f0>
   10f04:	ldr	r0, [pc, #64]	; 10f4c <abort@plt+0x70c>
   10f08:	add	r0, pc, r0
   10f0c:	ldr	r1, [pc, #60]	; 10f50 <abort@plt+0x710>
   10f10:	add	r1, pc, r1
   10f14:	ldr	r2, [sp, #8]
   10f18:	ldr	r3, [sp, #4]
   10f1c:	bl	10810 <__isoc99_sscanf@plt>
   10f20:	cmp	r0, #2
   10f24:	movw	r0, #0
   10f28:	moveq	r0, #1
   10f2c:	str	r0, [sp]
   10f30:	ldr	r0, [sp]
   10f34:	tst	r0, #1
   10f38:	movw	r0, #1
   10f3c:	moveq	r0, #0
   10f40:	and	r0, r0, #255	; 0xff
   10f44:	mov	sp, fp
   10f48:	pop	{fp, pc}
   10f4c:	andeq	r2, r1, r9, lsr #3
   10f50:	andeq	r0, r0, fp, ror #31
   10f54:	push	{fp, lr}
   10f58:	mov	fp, sp
   10f5c:	sub	sp, sp, #24
   10f60:	ldr	r2, [pc, #344]	; 110c0 <abort@plt+0x880>
   10f64:	add	r2, pc, r2
   10f68:	ldr	r3, [pc, #340]	; 110c4 <abort@plt+0x884>
   10f6c:	ldr	r3, [pc, r3]
   10f70:	str	r0, [fp, #-4]
   10f74:	str	r1, [fp, #-8]
   10f78:	ldr	r0, [fp, #-8]
   10f7c:	mov	r1, r2
   10f80:	blx	r3
   10f84:	ldr	r1, [pc, #296]	; 110b4 <abort@plt+0x874>
   10f88:	add	r1, pc, r1
   10f8c:	ldr	r2, [pc, #292]	; 110b8 <abort@plt+0x878>
   10f90:	add	r2, pc, r2
   10f94:	ldr	r3, [pc, #288]	; 110bc <abort@plt+0x87c>
   10f98:	add	r3, pc, r3
   10f9c:	str	r0, [sp, #12]
   10fa0:	ldr	r0, [sp, #12]
   10fa4:	bl	10804 <fprintf@plt>
   10fa8:	ldr	r1, [pc, #256]	; 110b0 <abort@plt+0x870>
   10fac:	add	r2, pc, r1
   10fb0:	ldr	r1, [sp, #12]
   10fb4:	ldr	r3, [fp, #-4]
   10fb8:	ldr	r3, [r3]
   10fbc:	str	r0, [sp, #4]
   10fc0:	mov	r0, r1
   10fc4:	mov	r1, r3
   10fc8:	bl	110d0 <abort@plt+0x890>
   10fcc:	ldr	r0, [pc, #216]	; 110ac <abort@plt+0x86c>
   10fd0:	add	r2, pc, r0
   10fd4:	ldr	r0, [sp, #12]
   10fd8:	ldr	r1, [fp, #-4]
   10fdc:	ldr	r1, [r1, #4]
   10fe0:	bl	110d0 <abort@plt+0x890>
   10fe4:	ldr	r0, [pc, #188]	; 110a8 <abort@plt+0x868>
   10fe8:	add	r2, pc, r0
   10fec:	ldr	r0, [sp, #12]
   10ff0:	ldr	r1, [fp, #-4]
   10ff4:	ldr	r1, [r1, #8]
   10ff8:	bl	110d0 <abort@plt+0x890>
   10ffc:	ldr	r0, [fp, #-4]
   11000:	ldr	r0, [r0, #8]
   11004:	cmp	r0, #0
   11008:	ble	11084 <abort@plt+0x844>
   1100c:	ldr	r0, [pc, #180]	; 110c8 <abort@plt+0x888>
   11010:	add	r1, pc, r0
   11014:	ldr	r0, [sp, #12]
   11018:	bl	10804 <fprintf@plt>
   1101c:	movw	r1, #1
   11020:	str	r1, [sp, #8]
   11024:	ldr	r0, [sp, #8]
   11028:	cmp	r0, #100	; 0x64
   1102c:	bgt	11080 <abort@plt+0x840>
   11030:	ldr	r0, [fp, #-4]
   11034:	add	r0, r0, #12
   11038:	ldr	r1, [sp, #8]
   1103c:	add	r0, r0, r1, lsl #2
   11040:	ldr	r0, [r0]
   11044:	cmp	r0, #0
   11048:	ble	1106c <abort@plt+0x82c>
   1104c:	ldr	r0, [sp, #12]
   11050:	ldr	r1, [fp, #-4]
   11054:	add	r1, r1, #12
   11058:	ldr	r2, [sp, #8]
   1105c:	add	r1, r1, r2, lsl #2
   11060:	ldr	r1, [r1]
   11064:	ldr	r2, [sp, #8]
   11068:	bl	11118 <abort@plt+0x8d8>
   1106c:	b	11070 <abort@plt+0x830>
   11070:	ldr	r0, [sp, #8]
   11074:	add	r0, r0, #1
   11078:	str	r0, [sp, #8]
   1107c:	b	11024 <abort@plt+0x7e4>
   11080:	b	11084 <abort@plt+0x844>
   11084:	ldr	r0, [pc, #64]	; 110cc <abort@plt+0x88c>
   11088:	ldr	r0, [pc, r0]
   1108c:	ldr	r1, [sp, #12]
   11090:	str	r0, [sp]
   11094:	mov	r0, r1
   11098:	ldr	r1, [sp]
   1109c:	blx	r1
   110a0:	mov	sp, fp
   110a4:	pop	{fp, pc}
   110a8:	strdeq	r0, [r0], -r3
   110ac:	andeq	r0, r0, r1, lsl #30
   110b0:	andeq	r0, r0, sl, lsl pc
   110b4:	andeq	r0, r0, r9, lsr pc
   110b8:			; <UNDEFINED> instruction: 0x00000ebd
   110bc:	andeq	r0, r0, r2, ror #29
   110c0:	andeq	r0, r0, fp, asr pc
   110c4:	strdeq	r2, [r1], -r8
   110c8:	ldrdeq	r0, [r0], -r1
   110cc:	andeq	r1, r1, r8, asr #31
   110d0:	push	{fp, lr}
   110d4:	mov	fp, sp
   110d8:	sub	sp, sp, #16
   110dc:	ldr	r3, [pc, #48]	; 11114 <abort@plt+0x8d4>
   110e0:	add	r3, pc, r3
   110e4:	str	r0, [fp, #-4]
   110e8:	str	r1, [sp, #8]
   110ec:	str	r2, [sp, #4]
   110f0:	ldr	r0, [fp, #-4]
   110f4:	ldr	r2, [sp, #8]
   110f8:	ldr	r1, [sp, #4]
   110fc:	str	r1, [sp]
   11100:	mov	r1, r3
   11104:	ldr	r3, [sp]
   11108:	bl	10804 <fprintf@plt>
   1110c:	mov	sp, fp
   11110:	pop	{fp, pc}
   11114:	andeq	r0, r0, r3, lsr #28
   11118:	push	{fp, lr}
   1111c:	mov	fp, sp
   11120:	sub	sp, sp, #16
   11124:	ldr	r3, [pc, #48]	; 1115c <abort@plt+0x91c>
   11128:	add	r3, pc, r3
   1112c:	str	r0, [fp, #-4]
   11130:	str	r1, [sp, #8]
   11134:	str	r2, [sp, #4]
   11138:	ldr	r0, [fp, #-4]
   1113c:	ldr	r2, [sp, #8]
   11140:	ldr	r1, [sp, #4]
   11144:	str	r1, [sp]
   11148:	mov	r1, r3
   1114c:	ldr	r3, [sp]
   11150:	bl	10804 <fprintf@plt>
   11154:	mov	sp, fp
   11158:	pop	{fp, pc}
   1115c:	andeq	r0, r0, r6, ror #27
   11160:	push	{fp, lr}
   11164:	mov	fp, sp
   11168:	sub	sp, sp, #16
   1116c:	str	r0, [fp, #-4]
   11170:	str	r1, [sp, #8]
   11174:	ldr	r0, [fp, #-4]
   11178:	ldr	r1, [sp, #8]
   1117c:	bl	10768 <calloc@plt>
   11180:	str	r0, [sp, #4]
   11184:	ldr	r0, [sp, #4]
   11188:	movw	r1, #0
   1118c:	cmp	r0, r1
   11190:	bne	111a0 <abort@plt+0x960>
   11194:	ldr	r0, [pc, #16]	; 111ac <abort@plt+0x96c>
   11198:	add	r0, pc, r0
   1119c:	bl	1183c <error@@Base>
   111a0:	ldr	r0, [sp, #4]
   111a4:	mov	sp, fp
   111a8:	pop	{fp, pc}
   111ac:	andeq	r0, r0, r1, lsl #27
   111b0:	sub	sp, sp, #20
   111b4:	str	r0, [sp, #12]
   111b8:	str	r1, [sp, #8]
   111bc:	movw	r0, #0
   111c0:	str	r0, [sp, #4]
   111c4:	ldr	r0, [sp, #12]
   111c8:	ldr	r1, [sp, #4]
   111cc:	add	r0, r0, r1
   111d0:	ldrb	r0, [r0]
   111d4:	cmp	r0, #0
   111d8:	movw	r0, #0
   111dc:	str	r0, [sp]
   111e0:	beq	11214 <abort@plt+0x9d4>
   111e4:	ldr	r0, [sp, #12]
   111e8:	ldr	r1, [sp, #4]
   111ec:	add	r0, r0, r1
   111f0:	ldrb	r0, [r0]
   111f4:	ldr	r1, [sp, #8]
   111f8:	ldr	r2, [sp, #4]
   111fc:	add	r1, r1, r2
   11200:	ldrb	r1, [r1]
   11204:	cmp	r0, r1
   11208:	movw	r0, #0
   1120c:	moveq	r0, #1
   11210:	str	r0, [sp]
   11214:	ldr	r0, [sp]
   11218:	tst	r0, #1
   1121c:	beq	11234 <abort@plt+0x9f4>
   11220:	b	11224 <abort@plt+0x9e4>
   11224:	ldr	r0, [sp, #4]
   11228:	add	r0, r0, #1
   1122c:	str	r0, [sp, #4]
   11230:	b	111c4 <abort@plt+0x984>
   11234:	ldr	r0, [sp, #12]
   11238:	ldr	r1, [sp, #4]
   1123c:	add	r0, r0, r1
   11240:	ldrb	r0, [r0]
   11244:	cmp	r0, #0
   11248:	bne	11264 <abort@plt+0xa24>
   1124c:	ldr	r0, [sp, #8]
   11250:	ldr	r1, [sp, #4]
   11254:	add	r0, r0, r1
   11258:	ldrb	r0, [r0]
   1125c:	cmp	r0, #0
   11260:	beq	112a4 <abort@plt+0xa64>
   11264:	ldr	r0, [sp, #12]
   11268:	ldr	r1, [sp, #4]
   1126c:	add	r0, r0, r1
   11270:	ldrb	r0, [r0]
   11274:	ldr	r1, [sp, #8]
   11278:	ldr	r2, [sp, #4]
   1127c:	add	r1, r1, r2
   11280:	ldrb	r1, [r1]
   11284:	cmp	r0, r1
   11288:	movw	r0, #0
   1128c:	movlt	r0, #1
   11290:	tst	r0, #1
   11294:	mvn	r0, #0
   11298:	moveq	r0, #1
   1129c:	str	r0, [sp, #16]
   112a0:	b	112ac <abort@plt+0xa6c>
   112a4:	movw	r0, #0
   112a8:	str	r0, [sp, #16]
   112ac:	ldr	r0, [sp, #16]
   112b0:	add	sp, sp, #20
   112b4:	bx	lr
   112b8:	push	{fp, lr}
   112bc:	mov	fp, sp
   112c0:	sub	sp, sp, #24
   112c4:	str	r0, [fp, #-8]
   112c8:	str	r1, [sp, #12]
   112cc:	ldr	r0, [fp, #-8]
   112d0:	movw	r1, #0
   112d4:	cmp	r0, r1
   112d8:	bne	1131c <abort@plt+0xadc>
   112dc:	ldr	r0, [sp, #12]
   112e0:	ldrb	r0, [r0]
   112e4:	cmp	r0, #114	; 0x72
   112e8:	bne	11300 <abort@plt+0xac0>
   112ec:	ldr	r0, [pc, #148]	; 11388 <abort@plt+0xb48>
   112f0:	ldr	r0, [pc, r0]
   112f4:	ldr	r0, [r0]
   112f8:	str	r0, [sp, #4]
   112fc:	b	11310 <abort@plt+0xad0>
   11300:	ldr	r0, [pc, #124]	; 11384 <abort@plt+0xb44>
   11304:	ldr	r0, [pc, r0]
   11308:	ldr	r0, [r0]
   1130c:	str	r0, [sp, #4]
   11310:	ldr	r0, [sp, #4]
   11314:	str	r0, [fp, #-4]
   11318:	b	11378 <abort@plt+0xb38>
   1131c:	ldr	r0, [fp, #-8]
   11320:	ldr	r1, [sp, #12]
   11324:	bl	1078c <fopen@plt>
   11328:	str	r0, [sp, #8]
   1132c:	ldr	r0, [sp, #8]
   11330:	movw	r1, #0
   11334:	cmp	r0, r1
   11338:	beq	11348 <abort@plt+0xb08>
   1133c:	ldr	r0, [sp, #8]
   11340:	str	r0, [fp, #-4]
   11344:	b	11378 <abort@plt+0xb38>
   11348:	ldr	r0, [sp, #12]
   1134c:	ldrb	r0, [r0]
   11350:	cmp	r0, #119	; 0x77
   11354:	bne	11368 <abort@plt+0xb28>
   11358:	ldr	r0, [pc, #48]	; 11390 <abort@plt+0xb50>
   1135c:	add	r0, pc, r0
   11360:	ldr	r1, [fp, #-8]
   11364:	bl	1189c <error@@Base+0x60>
   11368:	ldr	r0, [pc, #28]	; 1138c <abort@plt+0xb4c>
   1136c:	add	r0, pc, r0
   11370:	ldr	r1, [fp, #-8]
   11374:	bl	1189c <error@@Base+0x60>
   11378:	ldr	r0, [fp, #-4]
   1137c:	mov	sp, fp
   11380:	pop	{fp, pc}
   11384:	muleq	r1, r0, sp
   11388:	muleq	r1, r8, sp
   1138c:	ldrdeq	r0, [r0], -sp
   11390:	ldrdeq	r0, [r0], -r7
   11394:	push	{fp, lr}
   11398:	mov	fp, sp
   1139c:	sub	sp, sp, #8
   113a0:	ldr	r1, [pc, #60]	; 113e4 <abort@plt+0xba4>
   113a4:	ldr	r1, [pc, r1]
   113a8:	str	r0, [sp, #4]
   113ac:	ldr	r0, [sp, #4]
   113b0:	ldr	r1, [r1]
   113b4:	cmp	r0, r1
   113b8:	beq	113dc <abort@plt+0xb9c>
   113bc:	ldr	r0, [pc, #36]	; 113e8 <abort@plt+0xba8>
   113c0:	ldr	r0, [pc, r0]
   113c4:	ldr	r1, [sp, #4]
   113c8:	ldr	r0, [r0]
   113cc:	cmp	r1, r0
   113d0:	beq	113dc <abort@plt+0xb9c>
   113d4:	ldr	r0, [sp, #4]
   113d8:	bl	1081c <fclose@plt>
   113dc:	mov	sp, fp
   113e0:	pop	{fp, pc}
   113e4:	andeq	r1, r1, r4, ror #25
   113e8:	ldrdeq	r1, [r1], -r4
   113ec:	push	{fp, lr}
   113f0:	mov	fp, sp
   113f4:	sub	sp, sp, #96	; 0x60
   113f8:	str	r0, [fp, #-4]
   113fc:	ldr	r0, [fp, #-4]
   11400:	mov	r1, sp
   11404:	bl	11dec <error@@Base+0x5b0>
   11408:	cmp	r0, #0
   1140c:	movw	r0, #0
   11410:	moveq	r0, #1
   11414:	tst	r0, #1
   11418:	movw	r0, #1
   1141c:	moveq	r0, #0
   11420:	and	r0, r0, #255	; 0xff
   11424:	mov	sp, fp
   11428:	pop	{fp, pc}
   1142c:	push	{fp, lr}
   11430:	mov	fp, sp
   11434:	sub	sp, sp, #8
   11438:	ldr	r0, [pc, #68]	; 11484 <abort@plt+0xc44>
   1143c:	add	r0, pc, r0
   11440:	ldrh	r1, [r0]
   11444:	movw	r2, #1
   11448:	add	r1, r1, r2
   1144c:	strh	r1, [r0]
   11450:	sxth	r0, r1
   11454:	bl	11488 <abort@plt+0xc48>
   11458:	ldr	r1, [pc, #32]	; 11480 <abort@plt+0xc40>
   1145c:	ldr	r1, [pc, r1]
   11460:	str	r0, [sp, #4]
   11464:	ldr	r0, [sp, #4]
   11468:	blx	r1
   1146c:	ldr	r1, [sp, #4]
   11470:	str	r0, [sp]
   11474:	mov	r0, r1
   11478:	mov	sp, fp
   1147c:	pop	{fp, pc}
   11480:	andeq	r1, r1, r0, lsl ip
   11484:	ldrdeq	r1, [r1], -sl
   11488:	push	{fp, lr}
   1148c:	mov	fp, sp
   11490:	sub	sp, sp, #128	; 0x80
   11494:	ldr	r1, [pc, #112]	; 1150c <abort@plt+0xccc>
   11498:	ldr	r1, [pc, r1]
   1149c:	ldr	r2, [pc, #108]	; 11510 <abort@plt+0xcd0>
   114a0:	ldr	r2, [pc, r2]
   114a4:	add	r3, sp, #26
   114a8:	strh	r0, [fp, #-2]
   114ac:	ldr	r2, [r2]
   114b0:	str	r3, [sp, #20]
   114b4:	str	r2, [sp, #16]
   114b8:	blx	r1
   114bc:	ldr	r1, [pc, #68]	; 11508 <abort@plt+0xcc8>
   114c0:	add	r1, pc, r1
   114c4:	ldrsh	r2, [fp, #-2]
   114c8:	ldr	r3, [sp, #20]
   114cc:	str	r0, [sp, #12]
   114d0:	mov	r0, r3
   114d4:	ldr	ip, [sp, #16]
   114d8:	str	r2, [sp, #8]
   114dc:	mov	r2, ip
   114e0:	ldr	r3, [sp, #12]
   114e4:	ldr	lr, [sp, #8]
   114e8:	str	lr, [sp]
   114ec:	bl	10828 <sprintf@plt>
   114f0:	add	r1, sp, #26
   114f4:	str	r0, [sp, #4]
   114f8:	mov	r0, r1
   114fc:	bl	107b0 <strdup@plt>
   11500:	mov	sp, fp
   11504:	pop	{fp, pc}
   11508:			; <UNDEFINED> instruction: 0x00000ab2
   1150c:	andeq	r1, r1, r8, ror #23
   11510:	ldrdeq	r1, [r1], -ip
   11514:	push	{fp, lr}
   11518:	mov	fp, sp
   1151c:	sub	sp, sp, #16
   11520:	str	r0, [fp, #-4]
   11524:	movw	r0, #47	; 0x2f
   11528:	strb	r0, [fp, #-5]
   1152c:	ldr	r0, [fp, #-4]
   11530:	bl	107f8 <strlen@plt>
   11534:	sub	r0, r0, #1
   11538:	strh	r0, [sp, #8]
   1153c:	ldrsh	r0, [sp, #8]
   11540:	cmp	r0, #0
   11544:	movw	r0, #0
   11548:	str	r0, [sp, #4]
   1154c:	blt	11574 <abort@plt+0xd34>
   11550:	ldr	r0, [fp, #-4]
   11554:	ldrsh	r1, [sp, #8]
   11558:	add	r0, r0, r1
   1155c:	ldrb	r0, [r0]
   11560:	ldrb	r1, [fp, #-5]
   11564:	cmp	r0, r1
   11568:	movw	r0, #0
   1156c:	movne	r0, #1
   11570:	str	r0, [sp, #4]
   11574:	ldr	r0, [sp, #4]
   11578:	tst	r0, #1
   1157c:	beq	11598 <abort@plt+0xd58>
   11580:	b	11584 <abort@plt+0xd44>
   11584:	ldrh	r0, [sp, #8]
   11588:	movw	r1, #65535	; 0xffff
   1158c:	add	r0, r0, r1
   11590:	strh	r0, [sp, #8]
   11594:	b	1153c <abort@plt+0xcfc>
   11598:	ldr	r0, [fp, #-4]
   1159c:	ldrsh	r1, [sp, #8]
   115a0:	add	r1, r1, #1
   115a4:	add	r0, r0, r1
   115a8:	mov	sp, fp
   115ac:	pop	{fp, pc}
   115b0:	push	{fp, lr}
   115b4:	mov	fp, sp
   115b8:	sub	sp, sp, #16
   115bc:	str	r0, [fp, #-4]
   115c0:	str	r1, [sp, #8]
   115c4:	str	r2, [sp, #4]
   115c8:	str	r3, [sp]
   115cc:	ldr	r0, [sp, #8]
   115d0:	ldr	r0, [r0]
   115d4:	bl	11514 <abort@plt+0xcd4>
   115d8:	ldr	r1, [pc, #36]	; 11604 <abort@plt+0xdc4>
   115dc:	ldr	r1, [pc, r1]
   115e0:	str	r0, [r1]
   115e4:	bl	11978 <error@@Base+0x13c>
   115e8:	ldr	r0, [fp, #-4]
   115ec:	ldr	r1, [sp, #8]
   115f0:	ldr	r2, [sp, #4]
   115f4:	ldr	r3, [sp]
   115f8:	bl	11608 <abort@plt+0xdc8>
   115fc:	mov	sp, fp
   11600:	pop	{fp, pc}
   11604:	andeq	r1, r1, r0, lsr #21
   11608:	push	{fp, lr}
   1160c:	mov	fp, sp
   11610:	sub	sp, sp, #48	; 0x30
   11614:	str	r0, [fp, #-4]
   11618:	str	r1, [fp, #-8]
   1161c:	str	r2, [fp, #-12]
   11620:	str	r3, [fp, #-16]
   11624:	movw	r0, #0
   11628:	strh	r0, [fp, #-20]	; 0xffffffec
   1162c:	ldr	r0, [fp, #-4]
   11630:	ldr	r0, [r0]
   11634:	cmp	r0, #1
   11638:	bne	11658 <abort@plt+0xe18>
   1163c:	ldr	r0, [pc, #404]	; 117d8 <abort@plt+0xf98>
   11640:	ldr	r0, [pc, r0]
   11644:	ldrb	r0, [r0]
   11648:	cmp	r0, #0
   1164c:	beq	11658 <abort@plt+0xe18>
   11650:	ldr	r0, [fp, #-12]
   11654:	bl	11a10 <error@@Base+0x1d4>
   11658:	movw	r0, #1
   1165c:	strh	r0, [fp, #-18]	; 0xffffffee
   11660:	ldrsh	r0, [fp, #-18]	; 0xffffffee
   11664:	ldr	r1, [fp, #-4]
   11668:	ldr	r1, [r1]
   1166c:	cmp	r0, r1
   11670:	bge	117c4 <abort@plt+0xf84>
   11674:	ldr	r0, [fp, #-8]
   11678:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   1167c:	add	r0, r0, r1, lsl #2
   11680:	ldr	r0, [r0]
   11684:	ldrb	r0, [r0]
   11688:	cmp	r0, #45	; 0x2d
   1168c:	bne	1178c <abort@plt+0xf4c>
   11690:	ldr	r0, [fp, #-8]
   11694:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   11698:	add	r0, r0, r1, lsl #2
   1169c:	ldr	r0, [r0]
   116a0:	ldrb	r0, [r0, #1]
   116a4:	cmp	r0, #0
   116a8:	beq	1178c <abort@plt+0xf4c>
   116ac:	ldr	r0, [pc, #296]	; 117dc <abort@plt+0xf9c>
   116b0:	add	r0, pc, r0
   116b4:	ldr	r1, [fp, #-8]
   116b8:	ldrsh	r2, [fp, #-18]	; 0xffffffee
   116bc:	ldr	r2, [r1, r2, lsl #2]!
   116c0:	ldr	r1, [r1]
   116c4:	str	r0, [sp, #24]
   116c8:	mov	r0, r1
   116cc:	str	r2, [sp, #20]
   116d0:	bl	107f8 <strlen@plt>
   116d4:	ldr	r1, [sp, #24]
   116d8:	str	r0, [sp, #16]
   116dc:	mov	r0, r1
   116e0:	ldr	r1, [sp, #20]
   116e4:	ldr	r2, [sp, #16]
   116e8:	bl	10834 <strncmp@plt>
   116ec:	cmp	r0, #0
   116f0:	bne	116fc <abort@plt+0xebc>
   116f4:	ldr	r0, [fp, #-12]
   116f8:	bl	11a10 <error@@Base+0x1d4>
   116fc:	ldr	r0, [fp, #-8]
   11700:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   11704:	add	r0, r0, r1, lsl #2
   11708:	ldr	r0, [r0]
   1170c:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   11710:	add	r1, r1, #1
   11714:	ldr	r2, [fp, #-4]
   11718:	ldr	r2, [r2]
   1171c:	cmp	r1, r2
   11720:	str	r0, [sp, #12]
   11724:	bge	11744 <abort@plt+0xf04>
   11728:	ldr	r0, [fp, #-8]
   1172c:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   11730:	add	r1, r1, #1
   11734:	add	r0, r0, r1, lsl #2
   11738:	ldr	r0, [r0]
   1173c:	str	r0, [sp, #8]
   11740:	b	11750 <abort@plt+0xf10>
   11744:	movw	r0, #0
   11748:	str	r0, [sp, #8]
   1174c:	b	11750 <abort@plt+0xf10>
   11750:	ldr	r0, [sp, #8]
   11754:	ldr	r2, [fp, #-16]
   11758:	ldr	r1, [sp, #12]
   1175c:	str	r0, [sp, #4]
   11760:	mov	r0, r1
   11764:	ldr	r1, [sp, #4]
   11768:	bl	11a98 <error@@Base+0x25c>
   1176c:	sxtb	r0, r0
   11770:	cmp	r0, #0
   11774:	beq	11788 <abort@plt+0xf48>
   11778:	ldrh	r0, [fp, #-18]	; 0xffffffee
   1177c:	movw	r1, #1
   11780:	add	r0, r0, r1
   11784:	strh	r0, [fp, #-18]	; 0xffffffee
   11788:	b	117ac <abort@plt+0xf6c>
   1178c:	ldr	r0, [fp, #-8]
   11790:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   11794:	ldr	r1, [r0, r1, lsl #2]
   11798:	ldrsh	r2, [fp, #-20]	; 0xffffffec
   1179c:	add	r3, r2, #1
   117a0:	strh	r3, [fp, #-20]	; 0xffffffec
   117a4:	add	r0, r0, r2, lsl #2
   117a8:	str	r1, [r0]
   117ac:	b	117b0 <abort@plt+0xf70>
   117b0:	ldrh	r0, [fp, #-18]	; 0xffffffee
   117b4:	movw	r1, #1
   117b8:	add	r0, r0, r1
   117bc:	strh	r0, [fp, #-18]	; 0xffffffee
   117c0:	b	11660 <abort@plt+0xe20>
   117c4:	ldrsh	r0, [fp, #-20]	; 0xffffffec
   117c8:	ldr	r1, [fp, #-4]
   117cc:	str	r0, [r1]
   117d0:	mov	sp, fp
   117d4:	pop	{fp, pc}
   117d8:	andeq	r1, r1, r8, lsl sl
   117dc:	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   117e0:	push	{fp, lr}
   117e4:	mov	fp, sp
   117e8:	movw	r0, #0
   117ec:	bl	117f0 <abort@plt+0xfb0>
   117f0:	push	{fp, lr}
   117f4:	mov	fp, sp
   117f8:	sub	sp, sp, #8
   117fc:	ldr	r1, [pc, #48]	; 11834 <abort@plt+0xff4>
   11800:	ldr	r1, [pc, r1]
   11804:	str	r0, [sp, #4]
   11808:	ldr	r0, [r1]
   1180c:	movw	r1, #0
   11810:	cmp	r0, r1
   11814:	beq	11828 <abort@plt+0xfe8>
   11818:	ldr	r0, [pc, #24]	; 11838 <abort@plt+0xff8>
   1181c:	ldr	r0, [pc, r0]
   11820:	ldr	r0, [r0]
   11824:	blx	r0
   11828:	bl	11d0c <error@@Base+0x4d0>
   1182c:	ldr	r0, [sp, #4]
   11830:	bl	107ec <exit@plt>
   11834:	andeq	r1, r1, r4, lsl #17
   11838:	andeq	r1, r1, r8, ror #16

0001183c <error@@Base>:
   1183c:	push	{fp, lr}
   11840:	mov	fp, sp
   11844:	sub	sp, sp, #8
   11848:	ldr	r1, [pc, #64]	; 11890 <error@@Base+0x54>
   1184c:	add	r1, pc, r1
   11850:	ldr	r2, [pc, #60]	; 11894 <error@@Base+0x58>
   11854:	ldr	r2, [pc, r2]
   11858:	ldr	r3, [pc, #56]	; 11898 <error@@Base+0x5c>
   1185c:	ldr	r3, [pc, r3]
   11860:	str	r0, [sp, #4]
   11864:	ldr	r0, [r3]
   11868:	ldr	r2, [r2]
   1186c:	ldr	r3, [sp, #4]
   11870:	bl	10804 <fprintf@plt>
   11874:	ldr	r1, [pc, #16]	; 1188c <error@@Base+0x50>
   11878:	ldr	r1, [pc, r1]
   1187c:	ldr	r1, [r1]
   11880:	str	r0, [sp]
   11884:	mov	r0, r1
   11888:	bl	117f0 <abort@plt+0xfb0>
   1188c:	andeq	r1, r1, r0, lsr #16
   11890:	andeq	r0, r0, r1, lsl r7
   11894:	andeq	r1, r1, r8, lsr #16
   11898:	andeq	r1, r1, r4, lsl r8
   1189c:	push	{fp, lr}
   118a0:	mov	fp, sp
   118a4:	sub	sp, sp, #24
   118a8:	ldr	r2, [pc, #88]	; 11908 <error@@Base+0xcc>
   118ac:	add	r2, pc, r2
   118b0:	ldr	r3, [pc, #84]	; 1190c <error@@Base+0xd0>
   118b4:	ldr	r3, [pc, r3]
   118b8:	ldr	ip, [pc, #80]	; 11910 <error@@Base+0xd4>
   118bc:	ldr	ip, [pc, ip]
   118c0:	str	r0, [fp, #-4]
   118c4:	str	r1, [fp, #-8]
   118c8:	ldr	r0, [ip]
   118cc:	ldr	r1, [r3]
   118d0:	ldr	r3, [fp, #-4]
   118d4:	ldr	ip, [fp, #-8]
   118d8:	str	r1, [sp, #12]
   118dc:	mov	r1, r2
   118e0:	ldr	r2, [sp, #12]
   118e4:	str	ip, [sp]
   118e8:	bl	10804 <fprintf@plt>
   118ec:	ldr	r1, [pc, #16]	; 11904 <error@@Base+0xc8>
   118f0:	ldr	r1, [pc, r1]
   118f4:	ldr	r1, [r1]
   118f8:	str	r0, [sp, #8]
   118fc:	mov	r0, r1
   11900:	bl	117f0 <abort@plt+0xfb0>
   11904:	andeq	r1, r1, r8, lsr #15
   11908:			; <UNDEFINED> instruction: 0x000006b9
   1190c:	andeq	r1, r1, r8, asr #15
   11910:			; <UNDEFINED> instruction: 0x000117b4
   11914:	push	{fp, lr}
   11918:	mov	fp, sp
   1191c:	sub	sp, sp, #16
   11920:	ldr	r2, [pc, #68]	; 1196c <error@@Base+0x130>
   11924:	add	r2, pc, r2
   11928:	ldr	r3, [pc, #64]	; 11970 <error@@Base+0x134>
   1192c:	ldr	r3, [pc, r3]
   11930:	ldr	ip, [pc, #60]	; 11974 <error@@Base+0x138>
   11934:	ldr	ip, [pc, ip]
   11938:	str	r0, [fp, #-4]
   1193c:	str	r1, [sp, #8]
   11940:	ldr	r0, [ip]
   11944:	ldr	r1, [r3]
   11948:	ldr	r3, [fp, #-4]
   1194c:	ldr	ip, [sp, #8]
   11950:	str	r1, [sp, #4]
   11954:	mov	r1, r2
   11958:	ldr	r2, [sp, #4]
   1195c:	str	ip, [sp]
   11960:	bl	10804 <fprintf@plt>
   11964:	mov	sp, fp
   11968:	pop	{fp, pc}
   1196c:	andeq	r0, r0, r1, asr #12
   11970:	andeq	r1, r1, r0, asr r7
   11974:	andeq	r1, r1, ip, lsr r7
   11978:	push	{fp, lr}
   1197c:	mov	fp, sp
   11980:	sub	sp, sp, #8
   11984:	ldr	r0, [pc, #44]	; 119b8 <error@@Base+0x17c>
   11988:	add	r1, pc, r0
   1198c:	movw	r0, #2
   11990:	bl	107d4 <__sysv_signal@plt>
   11994:	ldr	r1, [pc, #24]	; 119b4 <error@@Base+0x178>
   11998:	add	r1, pc, r1
   1199c:	movw	r2, #15
   119a0:	str	r0, [sp, #4]
   119a4:	mov	r0, r2
   119a8:	bl	107d4 <__sysv_signal@plt>
   119ac:	mov	sp, fp
   119b0:	pop	{fp, pc}
   119b4:	andeq	r0, r0, ip, lsl r0
   119b8:	andeq	r0, r0, ip, lsr #32
   119bc:	push	{fp, lr}
   119c0:	mov	fp, sp
   119c4:	sub	sp, sp, #8
   119c8:	ldr	r1, [pc, #52]	; 11a04 <error@@Base+0x1c8>
   119cc:	add	r1, pc, r1
   119d0:	str	r0, [sp, #4]
   119d4:	ldrsb	r0, [r1]
   119d8:	cmp	r0, #0
   119dc:	beq	119e8 <error@@Base+0x1ac>
   119e0:	mov	sp, fp
   119e4:	pop	{fp, pc}
   119e8:	ldr	r0, [pc, #24]	; 11a08 <error@@Base+0x1cc>
   119ec:	add	r0, pc, r0
   119f0:	ldr	r1, [pc, #20]	; 11a0c <error@@Base+0x1d0>
   119f4:	add	r1, pc, r1
   119f8:	movw	r2, #1
   119fc:	strb	r2, [r1]
   11a00:	bl	1183c <error@@Base>
   11a04:	andeq	r1, r1, ip, asr #14
   11a08:	muleq	r0, r4, r5
   11a0c:	andeq	r1, r1, r4, lsr #14
   11a10:	push	{fp, lr}
   11a14:	mov	fp, sp
   11a18:	sub	sp, sp, #8
   11a1c:	ldr	r1, [pc, #96]	; 11a84 <error@@Base+0x248>
   11a20:	ldr	r1, [pc, r1]
   11a24:	str	r0, [sp, #4]
   11a28:	ldr	r0, [r1]
   11a2c:	movw	r1, #0
   11a30:	cmp	r0, r1
   11a34:	beq	11a4c <error@@Base+0x210>
   11a38:	ldr	r0, [pc, #84]	; 11a94 <error@@Base+0x258>
   11a3c:	ldr	r0, [pc, r0]
   11a40:	ldr	r0, [r0]
   11a44:	blx	r0
   11a48:	b	11a80 <error@@Base+0x244>
   11a4c:	ldr	r0, [pc, #52]	; 11a88 <error@@Base+0x24c>
   11a50:	add	r1, pc, r0
   11a54:	ldr	r0, [pc, #48]	; 11a8c <error@@Base+0x250>
   11a58:	ldr	r0, [pc, r0]
   11a5c:	ldr	r2, [pc, #44]	; 11a90 <error@@Base+0x254>
   11a60:	ldr	r2, [pc, r2]
   11a64:	ldr	r2, [r2]
   11a68:	ldr	r0, [r0]
   11a6c:	ldr	r3, [sp, #4]
   11a70:	str	r0, [sp]
   11a74:	mov	r0, r2
   11a78:	ldr	r2, [sp]
   11a7c:	bl	10804 <fprintf@plt>
   11a80:	bl	117e0 <abort@plt+0xfa0>
   11a84:	andeq	r1, r1, r0, asr #12
   11a88:	andeq	r0, r0, r5, asr #10
   11a8c:	andeq	r1, r1, r4, lsr #12
   11a90:	andeq	r1, r1, r0, lsl r6
   11a94:	andeq	r1, r1, r4, lsr #12
   11a98:	push	{fp, lr}
   11a9c:	mov	fp, sp
   11aa0:	sub	sp, sp, #32
   11aa4:	str	r0, [fp, #-8]
   11aa8:	str	r1, [fp, #-12]
   11aac:	str	r2, [sp, #16]
   11ab0:	ldr	r0, [sp, #16]
   11ab4:	movw	r1, #0
   11ab8:	cmp	r0, r1
   11abc:	bne	11ac4 <error@@Base+0x288>
   11ac0:	b	11cd8 <error@@Base+0x49c>
   11ac4:	movw	r0, #0
   11ac8:	strh	r0, [sp, #14]
   11acc:	ldr	r0, [sp, #16]
   11ad0:	ldrsh	r1, [sp, #14]
   11ad4:	movw	r2, #12
   11ad8:	mul	r1, r1, r2
   11adc:	add	r0, r0, r1
   11ae0:	ldrb	r0, [r0]
   11ae4:	cmp	r0, #0
   11ae8:	movw	r0, #0
   11aec:	str	r0, [sp, #8]
   11af0:	beq	11b24 <error@@Base+0x2e8>
   11af4:	ldr	r0, [fp, #-8]
   11af8:	ldrb	r0, [r0, #1]
   11afc:	ldr	r1, [sp, #16]
   11b00:	ldrsh	r2, [sp, #14]
   11b04:	movw	r3, #12
   11b08:	mul	r2, r2, r3
   11b0c:	add	r1, r1, r2
   11b10:	ldrb	r1, [r1]
   11b14:	cmp	r0, r1
   11b18:	movw	r0, #0
   11b1c:	movne	r0, #1
   11b20:	str	r0, [sp, #8]
   11b24:	ldr	r0, [sp, #8]
   11b28:	tst	r0, #1
   11b2c:	beq	11b48 <error@@Base+0x30c>
   11b30:	b	11b34 <error@@Base+0x2f8>
   11b34:	ldrh	r0, [sp, #14]
   11b38:	movw	r1, #1
   11b3c:	add	r0, r0, r1
   11b40:	strh	r0, [sp, #14]
   11b44:	b	11acc <error@@Base+0x290>
   11b48:	ldr	r0, [sp, #16]
   11b4c:	ldrsh	r1, [sp, #14]
   11b50:	movw	r2, #12
   11b54:	mul	r1, r1, r2
   11b58:	add	r0, r0, r1
   11b5c:	ldrsb	r0, [r0]
   11b60:	cmp	r0, #0
   11b64:	bne	11b6c <error@@Base+0x330>
   11b68:	b	11cd8 <error@@Base+0x49c>
   11b6c:	ldr	r0, [sp, #16]
   11b70:	ldrsh	r1, [sp, #14]
   11b74:	movw	r2, #12
   11b78:	mul	r1, r1, r2
   11b7c:	add	r0, r0, r1
   11b80:	ldr	r0, [r0, #4]
   11b84:	movw	r1, #0
   11b88:	cmp	r0, r1
   11b8c:	beq	11c4c <error@@Base+0x410>
   11b90:	ldr	r0, [fp, #-8]
   11b94:	ldrb	r0, [r0, #2]
   11b98:	cmp	r0, #0
   11b9c:	bne	11bb0 <error@@Base+0x374>
   11ba0:	ldr	r0, [fp, #-12]
   11ba4:	movw	r1, #0
   11ba8:	cmp	r0, r1
   11bac:	beq	11c4c <error@@Base+0x410>
   11bb0:	ldr	r0, [sp, #16]
   11bb4:	ldrsh	r1, [sp, #14]
   11bb8:	movw	r2, #12
   11bbc:	mul	r1, r1, r2
   11bc0:	add	r0, r0, r1
   11bc4:	ldr	r0, [r0, #4]
   11bc8:	ldr	r0, [r0]
   11bcc:	movw	r1, #0
   11bd0:	cmp	r0, r1
   11bd4:	beq	11bdc <error@@Base+0x3a0>
   11bd8:	b	11ce8 <error@@Base+0x4ac>
   11bdc:	ldr	r0, [fp, #-8]
   11be0:	ldrb	r0, [r0, #2]
   11be4:	cmp	r0, #0
   11be8:	beq	11bfc <error@@Base+0x3c0>
   11bec:	ldr	r0, [fp, #-8]
   11bf0:	add	r0, r0, #2
   11bf4:	str	r0, [sp, #4]
   11bf8:	b	11c04 <error@@Base+0x3c8>
   11bfc:	ldr	r0, [fp, #-12]
   11c00:	str	r0, [sp, #4]
   11c04:	ldr	r0, [sp, #4]
   11c08:	ldr	r1, [sp, #16]
   11c0c:	ldrsh	r2, [sp, #14]
   11c10:	movw	r3, #12
   11c14:	mul	r2, r2, r3
   11c18:	add	r1, r1, r2
   11c1c:	ldr	r1, [r1, #4]
   11c20:	str	r0, [r1]
   11c24:	ldr	r0, [fp, #-8]
   11c28:	ldrb	r0, [r0, #2]
   11c2c:	cmp	r0, #0
   11c30:	movw	r0, #0
   11c34:	movne	r0, #1
   11c38:	tst	r0, #1
   11c3c:	movw	r0, #0
   11c40:	moveq	r0, #1
   11c44:	strb	r0, [fp, #-1]
   11c48:	b	11cf8 <error@@Base+0x4bc>
   11c4c:	ldr	r0, [sp, #16]
   11c50:	ldrsh	r1, [sp, #14]
   11c54:	movw	r2, #12
   11c58:	mul	r1, r1, r2
   11c5c:	add	r0, r0, r1
   11c60:	ldr	r0, [r0, #8]
   11c64:	movw	r1, #0
   11c68:	cmp	r0, r1
   11c6c:	beq	11cd4 <error@@Base+0x498>
   11c70:	ldr	r0, [fp, #-8]
   11c74:	ldrsb	r0, [r0, #2]
   11c78:	cmp	r0, #0
   11c7c:	bne	11cd4 <error@@Base+0x498>
   11c80:	ldr	r0, [sp, #16]
   11c84:	ldrsh	r1, [sp, #14]
   11c88:	movw	r2, #12
   11c8c:	mul	r1, r1, r2
   11c90:	add	r0, r0, r1
   11c94:	ldr	r0, [r0, #8]
   11c98:	ldrsb	r0, [r0]
   11c9c:	cmp	r0, #0
   11ca0:	beq	11ca8 <error@@Base+0x46c>
   11ca4:	b	11ce8 <error@@Base+0x4ac>
   11ca8:	ldr	r0, [sp, #16]
   11cac:	ldrsh	r1, [sp, #14]
   11cb0:	movw	r2, #12
   11cb4:	mul	r1, r1, r2
   11cb8:	add	r0, r0, r1
   11cbc:	ldr	r0, [r0, #8]
   11cc0:	movw	r1, #1
   11cc4:	strb	r1, [r0]
   11cc8:	movw	r0, #0
   11ccc:	strb	r0, [fp, #-1]
   11cd0:	b	11cf8 <error@@Base+0x4bc>
   11cd4:	b	11cd8 <error@@Base+0x49c>
   11cd8:	ldr	r0, [pc, #36]	; 11d04 <error@@Base+0x4c8>
   11cdc:	add	r0, pc, r0
   11ce0:	ldr	r1, [fp, #-8]
   11ce4:	bl	1189c <error@@Base+0x60>
   11ce8:	ldr	r0, [pc, #24]	; 11d08 <error@@Base+0x4cc>
   11cec:	add	r0, pc, r0
   11cf0:	ldr	r1, [fp, #-8]
   11cf4:	bl	1189c <error@@Base+0x60>
   11cf8:	ldrb	r0, [fp, #-1]
   11cfc:	mov	sp, fp
   11d00:	pop	{fp, pc}
   11d04:	andeq	r0, r0, r8, asr #5
   11d08:	andeq	r0, r0, r7, asr #5
   11d0c:	push	{fp, lr}
   11d10:	mov	fp, sp
   11d14:	sub	sp, sp, #16
   11d18:	movw	r0, #1
   11d1c:	strh	r0, [fp, #-2]
   11d20:	ldr	r0, [pc, #88]	; 11d80 <error@@Base+0x544>
   11d24:	add	r0, pc, r0
   11d28:	ldrsh	r1, [fp, #-2]
   11d2c:	ldrsh	r0, [r0]
   11d30:	cmp	r1, r0
   11d34:	bgt	11d78 <error@@Base+0x53c>
   11d38:	ldrsh	r0, [fp, #-2]
   11d3c:	bl	11488 <abort@plt+0xc48>
   11d40:	ldr	r1, [pc, #60]	; 11d84 <error@@Base+0x548>
   11d44:	ldr	r1, [pc, r1]
   11d48:	str	r0, [sp, #8]
   11d4c:	ldr	r0, [sp, #8]
   11d50:	blx	r1
   11d54:	ldr	r1, [sp, #8]
   11d58:	str	r0, [sp, #4]
   11d5c:	mov	r0, r1
   11d60:	bl	10798 <free@plt>
   11d64:	ldrh	r0, [fp, #-2]
   11d68:	movw	r1, #1
   11d6c:	add	r0, r0, r1
   11d70:	strh	r0, [fp, #-2]
   11d74:	b	11d20 <error@@Base+0x4e4>
   11d78:	mov	sp, fp
   11d7c:	pop	{fp, pc}
   11d80:	strdeq	r1, [r1], -r2
   11d84:	andeq	r1, r1, r8, lsr #6
   11d88:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11d8c:	mov	r7, r0
   11d90:	ldr	r6, [pc, #72]	; 11de0 <error@@Base+0x5a4>
   11d94:	ldr	r5, [pc, #72]	; 11de4 <error@@Base+0x5a8>
   11d98:	add	r6, pc, r6
   11d9c:	add	r5, pc, r5
   11da0:	sub	r6, r6, r5
   11da4:	mov	r8, r1
   11da8:	mov	r9, r2
   11dac:	bl	10748 <calloc@plt-0x20>
   11db0:	asrs	r6, r6, #2
   11db4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11db8:	mov	r4, #0
   11dbc:	add	r4, r4, #1
   11dc0:	ldr	r3, [r5], #4
   11dc4:	mov	r2, r9
   11dc8:	mov	r1, r8
   11dcc:	mov	r0, r7
   11dd0:	blx	r3
   11dd4:	cmp	r6, r4
   11dd8:	bne	11dbc <error@@Base+0x580>
   11ddc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11de0:	andeq	r1, r1, ip, asr r1
   11de4:	andeq	r1, r1, r4, asr r1
   11de8:	bx	lr
   11dec:	mov	r2, r1
   11df0:	mov	r1, r0
   11df4:	mov	r0, #3
   11df8:	b	107bc <__xstat@plt>

Disassembly of section .fini:

00011dfc <.fini>:
   11dfc:	push	{r3, lr}
   11e00:	pop	{r3, pc}
