
../repos/prog2/9:     file format elf32-littlearm


Disassembly of section .init:

00010b00 <.init>:
   10b00:	push	{r3, lr}
   10b04:	bl	10c34 <_start@@Base+0x3c>
   10b08:	pop	{r3, pc}

Disassembly of section .plt:

00010b0c <calloc@plt-0x14>:
   10b0c:	push	{lr}		; (str lr, [sp, #-4]!)
   10b10:	ldr	lr, [pc, #4]	; 10b1c <calloc@plt-0x4>
   10b14:	add	lr, pc, lr
   10b18:	ldr	pc, [lr, #8]!
   10b1c:	andeq	r2, r1, r4, ror #9

00010b20 <calloc@plt>:
   10b20:	add	ip, pc, #0, 12
   10b24:	add	ip, ip, #73728	; 0x12000
   10b28:	ldr	pc, [ip, #1252]!	; 0x4e4

00010b2c <strcmp@plt>:
   10b2c:	add	ip, pc, #0, 12
   10b30:	add	ip, ip, #73728	; 0x12000
   10b34:	ldr	pc, [ip, #1244]!	; 0x4dc

00010b38 <printf@plt>:
   10b38:	add	ip, pc, #0, 12
   10b3c:	add	ip, ip, #73728	; 0x12000
   10b40:	ldr	pc, [ip, #1236]!	; 0x4d4

00010b44 <__isoc99_fscanf@plt>:
   10b44:	add	ip, pc, #0, 12
   10b48:	add	ip, ip, #73728	; 0x12000
   10b4c:	ldr	pc, [ip, #1228]!	; 0x4cc

00010b50 <fopen@plt>:
   10b50:	add	ip, pc, #0, 12
   10b54:	add	ip, ip, #73728	; 0x12000
   10b58:	ldr	pc, [ip, #1220]!	; 0x4c4

00010b5c <fflush@plt>:
   10b5c:	add	ip, pc, #0, 12
   10b60:	add	ip, ip, #73728	; 0x12000
   10b64:	ldr	pc, [ip, #1212]!	; 0x4bc

00010b68 <free@plt>:
   10b68:	add	ip, pc, #0, 12
   10b6c:	add	ip, ip, #73728	; 0x12000
   10b70:	ldr	pc, [ip, #1204]!	; 0x4b4

00010b74 <fgets@plt>:
   10b74:	add	ip, pc, #0, 12
   10b78:	add	ip, ip, #73728	; 0x12000
   10b7c:	ldr	pc, [ip, #1196]!	; 0x4ac

00010b80 <strdup@plt>:
   10b80:	add	ip, pc, #0, 12
   10b84:	add	ip, ip, #73728	; 0x12000
   10b88:	ldr	pc, [ip, #1188]!	; 0x4a4

00010b8c <puts@plt>:
   10b8c:	add	ip, pc, #0, 12
   10b90:	add	ip, ip, #73728	; 0x12000
   10b94:	ldr	pc, [ip, #1180]!	; 0x49c

00010b98 <malloc@plt>:
   10b98:	add	ip, pc, #0, 12
   10b9c:	add	ip, ip, #73728	; 0x12000
   10ba0:	ldr	pc, [ip, #1172]!	; 0x494

00010ba4 <__libc_start_main@plt>:
   10ba4:	add	ip, pc, #0, 12
   10ba8:	add	ip, ip, #73728	; 0x12000
   10bac:	ldr	pc, [ip, #1164]!	; 0x48c

00010bb0 <__gmon_start__@plt>:
   10bb0:	add	ip, pc, #0, 12
   10bb4:	add	ip, ip, #73728	; 0x12000
   10bb8:	ldr	pc, [ip, #1156]!	; 0x484

00010bbc <feof@plt>:
   10bbc:	add	ip, pc, #0, 12
   10bc0:	add	ip, ip, #73728	; 0x12000
   10bc4:	ldr	pc, [ip, #1148]!	; 0x47c

00010bc8 <strlen@plt>:
   10bc8:	add	ip, pc, #0, 12
   10bcc:	add	ip, ip, #73728	; 0x12000
   10bd0:	ldr	pc, [ip, #1140]!	; 0x474

00010bd4 <putchar@plt>:
   10bd4:	add	ip, pc, #0, 12
   10bd8:	add	ip, ip, #73728	; 0x12000
   10bdc:	ldr	pc, [ip, #1132]!	; 0x46c

00010be0 <fclose@plt>:
   10be0:	add	ip, pc, #0, 12
   10be4:	add	ip, ip, #73728	; 0x12000
   10be8:	ldr	pc, [ip, #1124]!	; 0x464

00010bec <abort@plt>:
   10bec:	add	ip, pc, #0, 12
   10bf0:	add	ip, ip, #73728	; 0x12000
   10bf4:	ldr	pc, [ip, #1116]!	; 0x45c

Disassembly of section .text:

00010bf8 <_start@@Base>:
   10bf8:	mov	fp, #0
   10bfc:	mov	lr, #0
   10c00:	pop	{r1}		; (ldr r1, [sp], #4)
   10c04:	mov	r2, sp
   10c08:	push	{r2}		; (str r2, [sp, #-4]!)
   10c0c:	push	{r0}		; (str r0, [sp, #-4]!)
   10c10:	ldr	ip, [pc, #16]	; 10c28 <_start@@Base+0x30>
   10c14:	push	{ip}		; (str ip, [sp, #-4]!)
   10c18:	ldr	r0, [pc, #12]	; 10c2c <_start@@Base+0x34>
   10c1c:	ldr	r3, [pc, #12]	; 10c30 <_start@@Base+0x38>
   10c20:	bl	10ba4 <__libc_start_main@plt>
   10c24:	bl	10bec <abort@plt>
   10c28:	andeq	r2, r1, r8, lsr #1
   10c2c:			; <UNDEFINED> instruction: 0x000111b8
   10c30:	andeq	r2, r1, r8, asr #32
   10c34:	ldr	r3, [pc, #20]	; 10c50 <_start@@Base+0x58>
   10c38:	ldr	r2, [pc, #20]	; 10c54 <_start@@Base+0x5c>
   10c3c:	add	r3, pc, r3
   10c40:	ldr	r2, [r3, r2]
   10c44:	cmp	r2, #0
   10c48:	bxeq	lr
   10c4c:	b	10bb0 <__gmon_start__@plt>
   10c50:			; <UNDEFINED> instruction: 0x000123bc
   10c54:	andeq	r0, r0, r8, asr r0
   10c58:	ldr	r0, [pc, #24]	; 10c78 <_start@@Base+0x80>
   10c5c:	ldr	r3, [pc, #24]	; 10c7c <_start@@Base+0x84>
   10c60:	cmp	r3, r0
   10c64:	bxeq	lr
   10c68:	ldr	r3, [pc, #16]	; 10c80 <_start@@Base+0x88>
   10c6c:	cmp	r3, #0
   10c70:	bxeq	lr
   10c74:	bx	r3
   10c78:	andeq	r3, r2, r8, rrx
   10c7c:	andeq	r3, r2, r8, rrx
   10c80:	andeq	r0, r0, r0
   10c84:	ldr	r0, [pc, #36]	; 10cb0 <_start@@Base+0xb8>
   10c88:	ldr	r1, [pc, #36]	; 10cb4 <_start@@Base+0xbc>
   10c8c:	sub	r1, r1, r0
   10c90:	asr	r1, r1, #2
   10c94:	add	r1, r1, r1, lsr #31
   10c98:	asrs	r1, r1, #1
   10c9c:	bxeq	lr
   10ca0:	ldr	r3, [pc, #16]	; 10cb8 <_start@@Base+0xc0>
   10ca4:	cmp	r3, #0
   10ca8:	bxeq	lr
   10cac:	bx	r3
   10cb0:	andeq	r3, r2, r8, rrx
   10cb4:	andeq	r3, r2, r8, rrx
   10cb8:	andeq	r0, r0, r0
   10cbc:	push	{r4, lr}
   10cc0:	ldr	r4, [pc, #24]	; 10ce0 <_start@@Base+0xe8>
   10cc4:	ldrb	r3, [r4]
   10cc8:	cmp	r3, #0
   10ccc:	popne	{r4, pc}
   10cd0:	bl	10c58 <_start@@Base+0x60>
   10cd4:	mov	r3, #1
   10cd8:	strb	r3, [r4]
   10cdc:	pop	{r4, pc}
   10ce0:	andeq	r3, r2, r8, rrx
   10ce4:	b	10c84 <_start@@Base+0x8c>

00010ce8 <fp_insere@@Base>:
   10ce8:	push	{r4, r5, r6, sl, fp, lr}
   10cec:	add	fp, sp, #16
   10cf0:	cmp	r0, #0
   10cf4:	mvneq	r0, #0
   10cf8:	popeq	{r4, r5, r6, sl, fp, pc}
   10cfc:	ldm	r0, {r3, r6}
   10d00:	mov	r4, r0
   10d04:	mov	r0, #0
   10d08:	cmp	r3, r6
   10d0c:	popeq	{r4, r5, r6, sl, fp, pc}
   10d10:	mov	r0, r2
   10d14:	bl	11de0 <elemento_cria@@Base>
   10d18:	mov	r5, r0
   10d1c:	ldr	r0, [r4]
   10d20:	mov	r6, #0
   10d24:	cmp	r0, #1
   10d28:	blt	10d5c <fp_insere@@Base+0x74>
   10d2c:	ldr	r0, [r4, #8]
   10d30:	mov	r1, r5
   10d34:	ldr	r0, [r0, r6, lsl #2]
   10d38:	bl	11e24 <maior_que@@Base>
   10d3c:	cmp	r0, #0
   10d40:	beq	10d58 <fp_insere@@Base+0x70>
   10d44:	ldr	r0, [r4]
   10d48:	add	r6, r6, #1
   10d4c:	cmp	r6, r0
   10d50:	blt	10d2c <fp_insere@@Base+0x44>
   10d54:	b	10d5c <fp_insere@@Base+0x74>
   10d58:	ldr	r0, [r4]
   10d5c:	ldr	r1, [r4, #8]
   10d60:	cmp	r0, r6
   10d64:	blt	10d88 <fp_insere@@Base+0xa0>
   10d68:	mov	r2, r0
   10d6c:	ldr	r3, [r1, r2, lsl #2]!
   10d70:	cmp	r2, r6
   10d74:	str	r3, [r1, #4]
   10d78:	sub	r3, r2, #1
   10d7c:	ldr	r1, [r4, #8]
   10d80:	mov	r2, r3
   10d84:	bgt	10d6c <fp_insere@@Base+0x84>
   10d88:	add	r0, r0, #1
   10d8c:	str	r5, [r1, r6, lsl #2]
   10d90:	str	r0, [r4]
   10d94:	mov	r0, #1
   10d98:	pop	{r4, r5, r6, sl, fp, pc}

00010d9c <fp_remove@@Base>:
   10d9c:	push	{r4, sl, fp, lr}
   10da0:	add	fp, sp, #8
   10da4:	cmp	r0, #0
   10da8:	mov	r1, #0
   10dac:	ldrne	lr, [r0]
   10db0:	cmpne	lr, #0
   10db4:	bne	10dc0 <fp_remove@@Base+0x24>
   10db8:	mov	r0, r1
   10dbc:	pop	{r4, sl, fp, pc}
   10dc0:	ldr	r1, [r0, #8]
   10dc4:	cmp	lr, #1
   10dc8:	ldr	ip, [r1]
   10dcc:	blt	10e00 <fp_remove@@Base+0x64>
   10dd0:	ldr	r3, [r1, #4]
   10dd4:	str	r3, [r1]
   10dd8:	beq	10e00 <fp_remove@@Base+0x64>
   10ddc:	sub	r3, lr, #1
   10de0:	mov	r1, #0
   10de4:	ldr	r2, [r0, #8]
   10de8:	add	r2, r2, r1, lsl #2
   10dec:	add	r1, r1, #1
   10df0:	ldr	r4, [r2, #8]
   10df4:	cmp	r3, r1
   10df8:	str	r4, [r2, #4]
   10dfc:	bne	10de4 <fp_remove@@Base+0x48>
   10e00:	sub	r1, lr, #1
   10e04:	str	r1, [r0]
   10e08:	ldr	r1, [ip, #4]
   10e0c:	mov	r0, r1
   10e10:	pop	{r4, sl, fp, pc}

00010e14 <fp_carrega@@Base>:
   10e14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10e18:	add	fp, sp, #28
   10e1c:	sub	sp, sp, #268	; 0x10c
   10e20:	mov	r2, r1
   10e24:	ldr	r1, [pc, #324]	; 10f70 <fp_carrega@@Base+0x15c>
   10e28:	mov	r4, r0
   10e2c:	mov	r0, r2
   10e30:	add	r1, pc, r1
   10e34:	bl	10b50 <fopen@plt>
   10e38:	cmp	r0, #0
   10e3c:	beq	10f5c <fp_carrega@@Base+0x148>
   10e40:	mov	r5, r0
   10e44:	bl	10bbc <feof@plt>
   10e48:	cmp	r0, #0
   10e4c:	bne	10f4c <fp_carrega@@Base+0x138>
   10e50:	ldr	r7, [pc, #284]	; 10f74 <fp_carrega@@Base+0x160>
   10e54:	add	r9, sp, #4
   10e58:	add	r6, sp, #8
   10e5c:	mov	sl, #0
   10e60:	add	r7, pc, r7
   10e64:	b	10efc <fp_carrega@@Base+0xe8>
   10e68:	ldr	r0, [sp, #4]
   10e6c:	mov	r1, r6
   10e70:	bl	11de0 <elemento_cria@@Base>
   10e74:	mov	r7, r0
   10e78:	ldr	r0, [r4]
   10e7c:	mov	r8, #0
   10e80:	cmp	r0, #1
   10e84:	blt	10eb8 <fp_carrega@@Base+0xa4>
   10e88:	ldr	r0, [r4, #8]
   10e8c:	mov	r1, r7
   10e90:	ldr	r0, [r0, r8, lsl #2]
   10e94:	bl	11e24 <maior_que@@Base>
   10e98:	cmp	r0, #0
   10e9c:	beq	10eb4 <fp_carrega@@Base+0xa0>
   10ea0:	ldr	r0, [r4]
   10ea4:	add	r8, r8, #1
   10ea8:	cmp	r8, r0
   10eac:	blt	10e88 <fp_carrega@@Base+0x74>
   10eb0:	b	10eb8 <fp_carrega@@Base+0xa4>
   10eb4:	ldr	r0, [r4]
   10eb8:	ldr	r1, [r4, #8]
   10ebc:	cmp	r0, r8
   10ec0:	blt	10ee4 <fp_carrega@@Base+0xd0>
   10ec4:	mov	r2, r0
   10ec8:	ldr	r3, [r1, r2, lsl #2]!
   10ecc:	cmp	r2, r8
   10ed0:	str	r3, [r1, #4]
   10ed4:	sub	r3, r2, #1
   10ed8:	ldr	r1, [r4, #8]
   10edc:	mov	r2, r3
   10ee0:	bgt	10ec8 <fp_carrega@@Base+0xb4>
   10ee4:	add	r0, r0, #1
   10ee8:	str	r7, [r1, r8, lsl #2]
   10eec:	str	r0, [r4]
   10ef0:	ldr	r7, [pc, #128]	; 10f78 <fp_carrega@@Base+0x164>
   10ef4:	add	r7, pc, r7
   10ef8:	b	10f3c <fp_carrega@@Base+0x128>
   10efc:	mov	r0, r5
   10f00:	mov	r1, r7
   10f04:	mov	r2, r9
   10f08:	bl	10b44 <__isoc99_fscanf@plt>
   10f0c:	mov	r0, r6
   10f10:	mov	r1, #256	; 0x100
   10f14:	mov	r2, r5
   10f18:	bl	10b74 <fgets@plt>
   10f1c:	mov	r0, r6
   10f20:	bl	10bc8 <strlen@plt>
   10f24:	add	r0, r6, r0
   10f28:	cmp	r4, #0
   10f2c:	strb	sl, [r0, #-1]
   10f30:	ldmne	r4, {r0, r1}
   10f34:	cmpne	r0, r1
   10f38:	bne	10e68 <fp_carrega@@Base+0x54>
   10f3c:	mov	r0, r5
   10f40:	bl	10bbc <feof@plt>
   10f44:	cmp	r0, #0
   10f48:	beq	10efc <fp_carrega@@Base+0xe8>
   10f4c:	mov	r0, r5
   10f50:	bl	10be0 <fclose@plt>
   10f54:	sub	sp, fp, #28
   10f58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10f5c:	ldr	r0, [pc, #24]	; 10f7c <fp_carrega@@Base+0x168>
   10f60:	add	r0, pc, r0
   10f64:	bl	10b8c <puts@plt>
   10f68:	sub	sp, fp, #28
   10f6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10f70:	andeq	r1, r0, ip, lsl #5
   10f74:	andeq	r1, r0, lr, asr r2
   10f78:	andeq	r1, r0, sl, asr #3
   10f7c:	andeq	r1, r0, r8, asr #7

00010f80 <heap_insere@@Base>:
   10f80:	push	{r4, r5, r6, r7, fp, lr}
   10f84:	add	fp, sp, #16
   10f88:	mov	r4, r0
   10f8c:	mov	r7, r1
   10f90:	ldr	r0, [r0]
   10f94:	mov	r5, #0
   10f98:	ldr	r1, [r4, #4]
   10f9c:	cmp	r0, r1
   10fa0:	beq	11034 <heap_insere@@Base+0xb4>
   10fa4:	mov	r0, r3
   10fa8:	mov	r1, r2
   10fac:	bl	11de0 <elemento_cria@@Base>
   10fb0:	mov	r6, r0
   10fb4:	ldr	r0, [r4]
   10fb8:	cmp	r0, #1
   10fbc:	blt	10ff4 <heap_insere@@Base+0x74>
   10fc0:	mov	r5, #0
   10fc4:	ldr	r0, [r4, #8]
   10fc8:	mov	r1, r6
   10fcc:	ldr	r0, [r0, r5, lsl #2]
   10fd0:	blx	r7
   10fd4:	cmp	r0, #1
   10fd8:	beq	11000 <heap_insere@@Base+0x80>
   10fdc:	ldr	r0, [r4]
   10fe0:	add	r5, r5, #1
   10fe4:	cmp	r5, r0
   10fe8:	blt	10fc4 <heap_insere@@Base+0x44>
   10fec:	ldr	r0, [r4, #8]
   10ff0:	b	1100c <heap_insere@@Base+0x8c>
   10ff4:	ldr	r0, [r4, #8]
   10ff8:	mov	r5, #0
   10ffc:	b	11024 <heap_insere@@Base+0xa4>
   11000:	ldr	r0, [r4, #8]
   11004:	cmp	r5, #0
   11008:	beq	11024 <heap_insere@@Base+0xa4>
   1100c:	mov	r1, r5
   11010:	ldr	r2, [r0, r1, lsl #2]!
   11014:	subs	r1, r1, #1
   11018:	str	r2, [r0, #4]
   1101c:	ldr	r0, [r4, #8]
   11020:	bgt	11010 <heap_insere@@Base+0x90>
   11024:	str	r6, [r0, r5, lsl #2]
   11028:	ldr	r0, [r4]
   1102c:	add	r0, r0, #1
   11030:	str	r0, [r4]
   11034:	mov	r0, r5
   11038:	pop	{r4, r5, r6, r7, fp, pc}

0001103c <heap_remove@@Base>:
   1103c:	mov	r0, #0
   11040:	bx	lr

00011044 <heap_carrega@@Base>:
   11044:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11048:	add	fp, sp, #28
   1104c:	sub	sp, sp, #268	; 0x10c
   11050:	mov	r4, r1
   11054:	ldr	r1, [pc, #332]	; 111a8 <heap_carrega@@Base+0x164>
   11058:	mov	r5, r0
   1105c:	mov	r0, r2
   11060:	add	r1, pc, r1
   11064:	bl	10b50 <fopen@plt>
   11068:	cmp	r0, #0
   1106c:	beq	11194 <heap_carrega@@Base+0x150>
   11070:	mov	r8, r0
   11074:	bl	10bbc <feof@plt>
   11078:	cmp	r0, #0
   1107c:	bne	11184 <heap_carrega@@Base+0x140>
   11080:	ldr	r9, [pc, #292]	; 111ac <heap_carrega@@Base+0x168>
   11084:	add	r6, sp, #4
   11088:	add	sl, sp, #8
   1108c:	mov	r7, #0
   11090:	add	r9, pc, r9
   11094:	mov	r0, r8
   11098:	mov	r1, r9
   1109c:	mov	r2, r6
   110a0:	bl	10b44 <__isoc99_fscanf@plt>
   110a4:	mov	r0, sl
   110a8:	mov	r1, #256	; 0x100
   110ac:	mov	r2, r8
   110b0:	bl	10b74 <fgets@plt>
   110b4:	mov	r0, sl
   110b8:	bl	10bc8 <strlen@plt>
   110bc:	add	r0, sl, r0
   110c0:	strb	r7, [r0, #-1]
   110c4:	ldm	r5, {r0, r1}
   110c8:	cmp	r0, r1
   110cc:	beq	11174 <heap_carrega@@Base+0x130>
   110d0:	ldr	r0, [sp, #4]
   110d4:	mov	r1, sl
   110d8:	bl	11de0 <elemento_cria@@Base>
   110dc:	mov	r7, r0
   110e0:	ldr	r0, [r5]
   110e4:	cmp	r0, #1
   110e8:	blt	11120 <heap_carrega@@Base+0xdc>
   110ec:	mov	r9, #0
   110f0:	ldr	r0, [r5, #8]
   110f4:	mov	r1, r7
   110f8:	ldr	r0, [r0, r9, lsl #2]
   110fc:	blx	r4
   11100:	cmp	r0, #1
   11104:	beq	11128 <heap_carrega@@Base+0xe4>
   11108:	ldr	r0, [r5]
   1110c:	add	r9, r9, #1
   11110:	cmp	r9, r0
   11114:	blt	110f0 <heap_carrega@@Base+0xac>
   11118:	ldr	r0, [r5, #8]
   1111c:	b	11134 <heap_carrega@@Base+0xf0>
   11120:	ldr	r0, [r5, #8]
   11124:	b	11150 <heap_carrega@@Base+0x10c>
   11128:	ldr	r0, [r5, #8]
   1112c:	cmp	r9, #0
   11130:	beq	11150 <heap_carrega@@Base+0x10c>
   11134:	mov	r1, r9
   11138:	ldr	r2, [r0, r1, lsl #2]!
   1113c:	subs	r1, r1, #1
   11140:	str	r2, [r0, #4]
   11144:	ldr	r0, [r5, #8]
   11148:	bgt	11138 <heap_carrega@@Base+0xf4>
   1114c:	b	11154 <heap_carrega@@Base+0x110>
   11150:	mov	r9, #0
   11154:	str	r7, [r0, r9, lsl #2]
   11158:	add	r6, sp, #4
   1115c:	mov	r7, #0
   11160:	ldr	r0, [r5]
   11164:	add	r0, r0, #1
   11168:	str	r0, [r5]
   1116c:	ldr	r9, [pc, #60]	; 111b0 <heap_carrega@@Base+0x16c>
   11170:	add	r9, pc, r9
   11174:	mov	r0, r8
   11178:	bl	10bbc <feof@plt>
   1117c:	cmp	r0, #0
   11180:	beq	11094 <heap_carrega@@Base+0x50>
   11184:	mov	r0, r8
   11188:	bl	10be0 <fclose@plt>
   1118c:	sub	sp, fp, #28
   11190:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11194:	ldr	r0, [pc, #24]	; 111b4 <heap_carrega@@Base+0x170>
   11198:	add	r0, pc, r0
   1119c:	bl	10b8c <puts@plt>
   111a0:	sub	sp, fp, #28
   111a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   111a8:	andeq	r1, r0, ip, asr r0
   111ac:	andeq	r1, r0, lr, lsr #32
   111b0:	andeq	r0, r0, lr, asr #30
   111b4:	muleq	r0, r0, r1

000111b8 <main@@Base>:
   111b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   111bc:	add	fp, sp, #28
   111c0:	sub	sp, sp, #268	; 0x10c
   111c4:	mov	r0, #42	; 0x2a
   111c8:	bl	11d28 <vetor_cria@@Base>
   111cc:	mov	r4, r0
   111d0:	ldr	r0, [pc, #2740]	; 11c8c <main@@Base+0xad4>
   111d4:	add	r0, pc, r0
   111d8:	bl	10b8c <puts@plt>
   111dc:	ldr	r1, [pc, #2732]	; 11c90 <main@@Base+0xad8>
   111e0:	mov	r0, r4
   111e4:	add	r1, pc, r1
   111e8:	bl	10e14 <fp_carrega@@Base>
   111ec:	ldr	r8, [pc, #2720]	; 11c94 <main@@Base+0xadc>
   111f0:	ldr	r8, [pc, r8]
   111f4:	ldr	r1, [r8]
   111f8:	ldr	r0, [pc, #2712]	; 11c98 <main@@Base+0xae0>
   111fc:	add	r0, pc, r0
   11200:	bl	10b38 <printf@plt>
   11204:	mov	r0, r4
   11208:	bl	11f10 <vetor_imprime@@Base>
   1120c:	ldr	r0, [r4]
   11210:	cmp	r0, #42	; 0x2a
   11214:	bne	1125c <main@@Base+0xa4>
   11218:	cmp	r4, #0
   1121c:	beq	11268 <main@@Base+0xb0>
   11220:	ldr	r1, [r4, #8]
   11224:	ldm	r1, {r0, r2}
   11228:	str	r2, [r1]
   1122c:	mov	r1, #0
   11230:	ldr	r2, [r4, #8]
   11234:	sub	r2, r2, r1, lsl #2
   11238:	sub	r1, r1, #1
   1123c:	ldr	r3, [r2, #8]
   11240:	cmn	r1, #41	; 0x29
   11244:	str	r3, [r2, #4]
   11248:	bne	11230 <main@@Base+0x78>
   1124c:	mov	r1, #41	; 0x29
   11250:	str	r1, [r4]
   11254:	ldr	r1, [r0, #4]
   11258:	b	1126c <main@@Base+0xb4>
   1125c:	ldr	r0, [pc, #2616]	; 11c9c <main@@Base+0xae4>
   11260:	add	r0, pc, r0
   11264:	b	117e0 <main@@Base+0x628>
   11268:	mov	r1, #0
   1126c:	ldr	r0, [pc, #2604]	; 11ca0 <main@@Base+0xae8>
   11270:	add	r0, pc, r0
   11274:	bl	10b2c <strcmp@plt>
   11278:	cmp	r0, #0
   1127c:	beq	1128c <main@@Base+0xd4>
   11280:	ldr	r0, [pc, #2588]	; 11ca4 <main@@Base+0xaec>
   11284:	add	r0, pc, r0
   11288:	b	117e0 <main@@Base+0x628>
   1128c:	mov	r1, #0
   11290:	cmp	r4, #0
   11294:	str	r1, [r8]
   11298:	beq	1134c <main@@Base+0x194>
   1129c:	ldr	r0, [r4]
   112a0:	cmp	r0, #0
   112a4:	beq	112dc <main@@Base+0x124>
   112a8:	cmp	r0, #1
   112ac:	blt	112d0 <main@@Base+0x118>
   112b0:	mov	r1, #0
   112b4:	ldr	r2, [r4, #8]
   112b8:	add	r3, r2, r1, lsl #2
   112bc:	ldr	r3, [r3, #4]
   112c0:	str	r3, [r2, r1, lsl #2]
   112c4:	add	r1, r1, #1
   112c8:	cmp	r0, r1
   112cc:	bne	112b4 <main@@Base+0xfc>
   112d0:	sub	r0, r0, #1
   112d4:	str	r0, [r4]
   112d8:	ldr	r1, [r8]
   112dc:	ldr	r0, [pc, #2512]	; 11cb4 <main@@Base+0xafc>
   112e0:	add	r0, pc, r0
   112e4:	bl	10b38 <printf@plt>
   112e8:	mov	r1, #0
   112ec:	str	r1, [r8]
   112f0:	ldm	r4, {r0, r2}
   112f4:	cmp	r0, r2
   112f8:	beq	113d0 <main@@Base+0x218>
   112fc:	ldr	r1, [pc, #2484]	; 11cb8 <main@@Base+0xb00>
   11300:	mov	r0, #99	; 0x63
   11304:	add	r1, pc, r1
   11308:	bl	11de0 <elemento_cria@@Base>
   1130c:	mov	r5, r0
   11310:	ldr	r0, [r4]
   11314:	mov	r6, #0
   11318:	cmp	r0, #1
   1131c:	blt	11394 <main@@Base+0x1dc>
   11320:	ldr	r0, [r4, #8]
   11324:	mov	r1, r5
   11328:	ldr	r0, [r0, r6, lsl #2]
   1132c:	bl	11e24 <maior_que@@Base>
   11330:	cmp	r0, #0
   11334:	beq	11390 <main@@Base+0x1d8>
   11338:	ldr	r0, [r4]
   1133c:	add	r6, r6, #1
   11340:	cmp	r6, r0
   11344:	blt	11320 <main@@Base+0x168>
   11348:	b	11394 <main@@Base+0x1dc>
   1134c:	ldr	r0, [pc, #2388]	; 11ca8 <main@@Base+0xaf0>
   11350:	mov	r1, #0
   11354:	mov	r5, #0
   11358:	add	r0, pc, r0
   1135c:	bl	10b38 <printf@plt>
   11360:	str	r5, [r8]
   11364:	mov	r1, #0
   11368:	ldr	r0, [pc, #2364]	; 11cac <main@@Base+0xaf4>
   1136c:	add	r0, pc, r0
   11370:	bl	10b38 <printf@plt>
   11374:	str	r5, [r8]
   11378:	mov	r1, #0
   1137c:	ldr	r0, [pc, #2348]	; 11cb0 <main@@Base+0xaf8>
   11380:	add	r0, pc, r0
   11384:	bl	10b38 <printf@plt>
   11388:	str	r5, [r8]
   1138c:	b	115ac <main@@Base+0x3f4>
   11390:	ldr	r0, [r4]
   11394:	ldr	r1, [r4, #8]
   11398:	cmp	r0, r6
   1139c:	blt	113c0 <main@@Base+0x208>
   113a0:	mov	r2, r0
   113a4:	ldr	r3, [r1, r2, lsl #2]!
   113a8:	cmp	r2, r6
   113ac:	str	r3, [r1, #4]
   113b0:	sub	r3, r2, #1
   113b4:	ldr	r1, [r4, #8]
   113b8:	mov	r2, r3
   113bc:	bgt	113a4 <main@@Base+0x1ec>
   113c0:	add	r0, r0, #1
   113c4:	str	r5, [r1, r6, lsl #2]
   113c8:	str	r0, [r4]
   113cc:	ldr	r1, [r8]
   113d0:	ldr	r0, [pc, #2276]	; 11cbc <main@@Base+0xb04>
   113d4:	add	r0, pc, r0
   113d8:	bl	10b38 <printf@plt>
   113dc:	ldr	r0, [r4]
   113e0:	cmp	r0, #0
   113e4:	beq	11418 <main@@Base+0x260>
   113e8:	cmp	r0, #1
   113ec:	blt	11410 <main@@Base+0x258>
   113f0:	mov	r1, #0
   113f4:	ldr	r2, [r4, #8]
   113f8:	add	r3, r2, r1, lsl #2
   113fc:	ldr	r3, [r3, #4]
   11400:	str	r3, [r2, r1, lsl #2]
   11404:	add	r1, r1, #1
   11408:	cmp	r0, r1
   1140c:	bne	113f4 <main@@Base+0x23c>
   11410:	sub	r0, r0, #1
   11414:	str	r0, [r4]
   11418:	mov	r1, #0
   1141c:	str	r1, [r8]
   11420:	ldm	r4, {r0, r2}
   11424:	cmp	r0, r2
   11428:	beq	114c0 <main@@Base+0x308>
   1142c:	ldr	r1, [pc, #2188]	; 11cc0 <main@@Base+0xb08>
   11430:	mov	r0, #0
   11434:	mov	r6, #0
   11438:	add	r1, pc, r1
   1143c:	bl	11de0 <elemento_cria@@Base>
   11440:	mov	r5, r0
   11444:	ldr	r0, [r4]
   11448:	cmp	r0, #1
   1144c:	blt	11484 <main@@Base+0x2cc>
   11450:	mov	r6, #0
   11454:	ldr	r0, [r4, #8]
   11458:	mov	r1, r5
   1145c:	ldr	r0, [r0, r6, lsl #2]
   11460:	bl	11e24 <maior_que@@Base>
   11464:	cmp	r0, #0
   11468:	beq	11480 <main@@Base+0x2c8>
   1146c:	ldr	r0, [r4]
   11470:	add	r6, r6, #1
   11474:	cmp	r6, r0
   11478:	blt	11454 <main@@Base+0x29c>
   1147c:	b	11484 <main@@Base+0x2cc>
   11480:	ldr	r0, [r4]
   11484:	ldr	r1, [r4, #8]
   11488:	cmp	r0, r6
   1148c:	blt	114b0 <main@@Base+0x2f8>
   11490:	mov	r2, r0
   11494:	ldr	r3, [r1, r2, lsl #2]!
   11498:	cmp	r2, r6
   1149c:	str	r3, [r1, #4]
   114a0:	sub	r3, r2, #1
   114a4:	ldr	r1, [r4, #8]
   114a8:	mov	r2, r3
   114ac:	bgt	11494 <main@@Base+0x2dc>
   114b0:	add	r0, r0, #1
   114b4:	str	r5, [r1, r6, lsl #2]
   114b8:	str	r0, [r4]
   114bc:	ldr	r1, [r8]
   114c0:	ldr	r0, [pc, #2044]	; 11cc4 <main@@Base+0xb0c>
   114c4:	add	r0, pc, r0
   114c8:	bl	10b38 <printf@plt>
   114cc:	ldr	r0, [r4]
   114d0:	cmp	r0, #0
   114d4:	beq	11508 <main@@Base+0x350>
   114d8:	cmp	r0, #1
   114dc:	blt	11500 <main@@Base+0x348>
   114e0:	mov	r1, #0
   114e4:	ldr	r2, [r4, #8]
   114e8:	add	r3, r2, r1, lsl #2
   114ec:	ldr	r3, [r3, #4]
   114f0:	str	r3, [r2, r1, lsl #2]
   114f4:	add	r1, r1, #1
   114f8:	cmp	r0, r1
   114fc:	bne	114e4 <main@@Base+0x32c>
   11500:	sub	r0, r0, #1
   11504:	str	r0, [r4]
   11508:	mov	r5, #0
   1150c:	str	r5, [r8]
   11510:	ldm	r4, {r0, r1}
   11514:	cmp	r0, r1
   11518:	beq	115ac <main@@Base+0x3f4>
   1151c:	ldr	r1, [pc, #1956]	; 11cc8 <main@@Base+0xb10>
   11520:	mov	r0, #42	; 0x2a
   11524:	add	r1, pc, r1
   11528:	bl	11de0 <elemento_cria@@Base>
   1152c:	mov	r5, r0
   11530:	ldr	r0, [r4]
   11534:	mov	r6, #0
   11538:	cmp	r0, #1
   1153c:	blt	11570 <main@@Base+0x3b8>
   11540:	ldr	r0, [r4, #8]
   11544:	mov	r1, r5
   11548:	ldr	r0, [r0, r6, lsl #2]
   1154c:	bl	11e24 <maior_que@@Base>
   11550:	cmp	r0, #0
   11554:	beq	1156c <main@@Base+0x3b4>
   11558:	ldr	r0, [r4]
   1155c:	add	r6, r6, #1
   11560:	cmp	r6, r0
   11564:	blt	11540 <main@@Base+0x388>
   11568:	b	11570 <main@@Base+0x3b8>
   1156c:	ldr	r0, [r4]
   11570:	ldr	r1, [r4, #8]
   11574:	cmp	r0, r6
   11578:	blt	1159c <main@@Base+0x3e4>
   1157c:	mov	r2, r0
   11580:	ldr	r3, [r1, r2, lsl #2]!
   11584:	cmp	r2, r6
   11588:	str	r3, [r1, #4]
   1158c:	sub	r3, r2, #1
   11590:	ldr	r1, [r4, #8]
   11594:	mov	r2, r3
   11598:	bgt	11580 <main@@Base+0x3c8>
   1159c:	add	r0, r0, #1
   115a0:	str	r5, [r1, r6, lsl #2]
   115a4:	str	r0, [r4]
   115a8:	ldr	r5, [r8]
   115ac:	ldr	r0, [pc, #1816]	; 11ccc <main@@Base+0xb14>
   115b0:	mov	r1, r5
   115b4:	add	r0, pc, r0
   115b8:	bl	10b38 <printf@plt>
   115bc:	ldr	r0, [pc, #1804]	; 11cd0 <main@@Base+0xb18>
   115c0:	add	r0, pc, r0
   115c4:	bl	10b8c <puts@plt>
   115c8:	mov	r0, #42	; 0x2a
   115cc:	bl	11d84 <vetor_criaHeap@@Base>
   115d0:	mov	r4, r0
   115d4:	ldr	r0, [pc, #1784]	; 11cd4 <main@@Base+0xb1c>
   115d8:	ldr	r1, [pc, #1784]	; 11cd8 <main@@Base+0xb20>
   115dc:	add	r0, pc, r0
   115e0:	add	r1, pc, r1
   115e4:	bl	10b50 <fopen@plt>
   115e8:	cmp	r0, #0
   115ec:	beq	11714 <main@@Base+0x55c>
   115f0:	mov	r9, r0
   115f4:	bl	10bbc <feof@plt>
   115f8:	cmp	r0, #0
   115fc:	bne	11700 <main@@Base+0x548>
   11600:	ldr	r7, [pc, #1748]	; 11cdc <main@@Base+0xb24>
   11604:	sub	r6, fp, #36	; 0x24
   11608:	add	sl, sp, #4
   1160c:	mov	r5, #0
   11610:	add	r7, pc, r7
   11614:	mov	r0, r9
   11618:	mov	r1, r7
   1161c:	mov	r2, r6
   11620:	bl	10b44 <__isoc99_fscanf@plt>
   11624:	mov	r0, sl
   11628:	mov	r1, #256	; 0x100
   1162c:	mov	r2, r9
   11630:	bl	10b74 <fgets@plt>
   11634:	mov	r0, sl
   11638:	bl	10bc8 <strlen@plt>
   1163c:	add	r0, sl, r0
   11640:	strb	r5, [r0, #-1]
   11644:	ldm	r4, {r0, r1}
   11648:	cmp	r0, r1
   1164c:	beq	116f0 <main@@Base+0x538>
   11650:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11654:	mov	r1, sl
   11658:	mov	r5, r7
   1165c:	bl	11de0 <elemento_cria@@Base>
   11660:	mov	r7, r0
   11664:	ldr	r0, [r4]
   11668:	cmp	r0, #1
   1166c:	blt	116a4 <main@@Base+0x4ec>
   11670:	mov	r8, #0
   11674:	ldr	r0, [r4, #8]
   11678:	mov	r1, r7
   1167c:	ldr	r0, [r0, r8, lsl #2]
   11680:	bl	11e24 <maior_que@@Base>
   11684:	cmp	r0, #1
   11688:	beq	116ac <main@@Base+0x4f4>
   1168c:	ldr	r0, [r4]
   11690:	add	r8, r8, #1
   11694:	cmp	r8, r0
   11698:	blt	11674 <main@@Base+0x4bc>
   1169c:	ldr	r0, [r4, #8]
   116a0:	b	116b8 <main@@Base+0x500>
   116a4:	ldr	r0, [r4, #8]
   116a8:	b	116d4 <main@@Base+0x51c>
   116ac:	ldr	r0, [r4, #8]
   116b0:	cmp	r8, #0
   116b4:	beq	116d4 <main@@Base+0x51c>
   116b8:	mov	r1, r8
   116bc:	ldr	r2, [r0, r1, lsl #2]!
   116c0:	subs	r1, r1, #1
   116c4:	str	r2, [r0, #4]
   116c8:	ldr	r0, [r4, #8]
   116cc:	bgt	116bc <main@@Base+0x504>
   116d0:	b	116d8 <main@@Base+0x520>
   116d4:	mov	r8, #0
   116d8:	str	r7, [r0, r8, lsl #2]
   116dc:	mov	r7, r5
   116e0:	mov	r5, #0
   116e4:	ldr	r0, [r4]
   116e8:	add	r0, r0, #1
   116ec:	str	r0, [r4]
   116f0:	mov	r0, r9
   116f4:	bl	10bbc <feof@plt>
   116f8:	cmp	r0, #0
   116fc:	beq	11614 <main@@Base+0x45c>
   11700:	mov	r0, r9
   11704:	bl	10be0 <fclose@plt>
   11708:	ldr	r8, [pc, #1488]	; 11ce0 <main@@Base+0xb28>
   1170c:	ldr	r8, [pc, r8]
   11710:	b	11720 <main@@Base+0x568>
   11714:	ldr	r0, [pc, #1540]	; 11d20 <main@@Base+0xb68>
   11718:	add	r0, pc, r0
   1171c:	bl	10b8c <puts@plt>
   11720:	ldr	r1, [r8]
   11724:	ldr	r0, [pc, #1464]	; 11ce4 <main@@Base+0xb2c>
   11728:	add	r0, pc, r0
   1172c:	bl	10b38 <printf@plt>
   11730:	mov	r0, r4
   11734:	bl	11fac <vetor_imprimeHeap@@Base>
   11738:	ldr	r0, [r4]
   1173c:	cmp	r0, #42	; 0x2a
   11740:	bne	117d8 <main@@Base+0x620>
   11744:	ldr	r0, [pc, #1440]	; 11cec <main@@Base+0xb34>
   11748:	mov	r1, #0
   1174c:	mov	r5, #0
   11750:	add	r0, pc, r0
   11754:	bl	10b2c <strcmp@plt>
   11758:	cmp	r0, #0
   1175c:	bne	11280 <main@@Base+0xc8>
   11760:	str	r5, [r8]
   11764:	mov	r1, #0
   11768:	ldr	r0, [pc, #1408]	; 11cf0 <main@@Base+0xb38>
   1176c:	add	r0, pc, r0
   11770:	bl	10b38 <printf@plt>
   11774:	str	r5, [r8]
   11778:	ldm	r4, {r0, r1}
   1177c:	cmp	r0, r1
   11780:	beq	1183c <main@@Base+0x684>
   11784:	ldr	r1, [pc, #1384]	; 11cf4 <main@@Base+0xb3c>
   11788:	mov	r0, #99	; 0x63
   1178c:	add	r1, pc, r1
   11790:	bl	11de0 <elemento_cria@@Base>
   11794:	mov	r5, r0
   11798:	ldr	r0, [r4]
   1179c:	cmp	r0, #1
   117a0:	blt	117f4 <main@@Base+0x63c>
   117a4:	mov	r6, #0
   117a8:	ldr	r0, [r4, #8]
   117ac:	mov	r1, r5
   117b0:	ldr	r0, [r0, r6, lsl #2]
   117b4:	bl	11e24 <maior_que@@Base>
   117b8:	cmp	r0, #1
   117bc:	beq	117fc <main@@Base+0x644>
   117c0:	ldr	r0, [r4]
   117c4:	add	r6, r6, #1
   117c8:	cmp	r6, r0
   117cc:	blt	117a8 <main@@Base+0x5f0>
   117d0:	ldr	r0, [r4, #8]
   117d4:	b	11808 <main@@Base+0x650>
   117d8:	ldr	r0, [pc, #1288]	; 11ce8 <main@@Base+0xb30>
   117dc:	add	r0, pc, r0
   117e0:	bl	10b8c <puts@plt>
   117e4:	mov	r4, #1
   117e8:	mov	r0, r4
   117ec:	sub	sp, fp, #28
   117f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   117f4:	ldr	r0, [r4, #8]
   117f8:	b	11824 <main@@Base+0x66c>
   117fc:	ldr	r0, [r4, #8]
   11800:	cmp	r6, #0
   11804:	beq	11824 <main@@Base+0x66c>
   11808:	mov	r1, r6
   1180c:	ldr	r2, [r0, r1, lsl #2]!
   11810:	subs	r1, r1, #1
   11814:	str	r2, [r0, #4]
   11818:	ldr	r0, [r4, #8]
   1181c:	bgt	1180c <main@@Base+0x654>
   11820:	b	11828 <main@@Base+0x670>
   11824:	mov	r6, #0
   11828:	str	r5, [r0, r6, lsl #2]
   1182c:	ldr	r0, [r4]
   11830:	add	r0, r0, #1
   11834:	str	r0, [r4]
   11838:	ldr	r5, [r8]
   1183c:	ldr	r0, [pc, #1204]	; 11cf8 <main@@Base+0xb40>
   11840:	mov	r1, r5
   11844:	add	r0, pc, r0
   11848:	bl	10b38 <printf@plt>
   1184c:	mov	r5, #0
   11850:	str	r5, [r8]
   11854:	ldm	r4, {r0, r1}
   11858:	cmp	r0, r1
   1185c:	mov	r1, #0
   11860:	beq	11904 <main@@Base+0x74c>
   11864:	ldr	r1, [pc, #1168]	; 11cfc <main@@Base+0xb44>
   11868:	mov	r0, #0
   1186c:	mov	r7, #0
   11870:	add	r1, pc, r1
   11874:	bl	11de0 <elemento_cria@@Base>
   11878:	mov	r6, r0
   1187c:	ldr	r0, [r4]
   11880:	cmp	r0, #1
   11884:	blt	118bc <main@@Base+0x704>
   11888:	mov	r7, #0
   1188c:	ldr	r0, [r4, #8]
   11890:	mov	r1, r6
   11894:	ldr	r0, [r0, r7, lsl #2]
   11898:	bl	11e24 <maior_que@@Base>
   1189c:	cmp	r0, #1
   118a0:	beq	118c4 <main@@Base+0x70c>
   118a4:	ldr	r0, [r4]
   118a8:	add	r7, r7, #1
   118ac:	cmp	r7, r0
   118b0:	blt	1188c <main@@Base+0x6d4>
   118b4:	ldr	r0, [r4, #8]
   118b8:	b	118d0 <main@@Base+0x718>
   118bc:	ldr	r0, [r4, #8]
   118c0:	b	118f0 <main@@Base+0x738>
   118c4:	ldr	r0, [r4, #8]
   118c8:	cmp	r7, #0
   118cc:	beq	118ec <main@@Base+0x734>
   118d0:	mov	r1, r7
   118d4:	ldr	r2, [r0, r1, lsl #2]!
   118d8:	subs	r1, r1, #1
   118dc:	str	r2, [r0, #4]
   118e0:	ldr	r0, [r4, #8]
   118e4:	bgt	118d4 <main@@Base+0x71c>
   118e8:	b	118f0 <main@@Base+0x738>
   118ec:	mov	r7, #0
   118f0:	str	r6, [r0, r7, lsl #2]
   118f4:	ldr	r0, [r4]
   118f8:	add	r0, r0, #1
   118fc:	str	r0, [r4]
   11900:	ldr	r1, [r8]
   11904:	ldr	r0, [pc, #1012]	; 11d00 <main@@Base+0xb48>
   11908:	add	r0, pc, r0
   1190c:	bl	10b38 <printf@plt>
   11910:	str	r5, [r8]
   11914:	ldm	r4, {r0, r1}
   11918:	cmp	r0, r1
   1191c:	beq	119bc <main@@Base+0x804>
   11920:	ldr	r1, [pc, #988]	; 11d04 <main@@Base+0xb4c>
   11924:	mov	r0, #42	; 0x2a
   11928:	add	r1, pc, r1
   1192c:	bl	11de0 <elemento_cria@@Base>
   11930:	mov	r5, r0
   11934:	ldr	r0, [r4]
   11938:	cmp	r0, #1
   1193c:	blt	11974 <main@@Base+0x7bc>
   11940:	mov	r6, #0
   11944:	ldr	r0, [r4, #8]
   11948:	mov	r1, r5
   1194c:	ldr	r0, [r0, r6, lsl #2]
   11950:	bl	11e24 <maior_que@@Base>
   11954:	cmp	r0, #1
   11958:	beq	1197c <main@@Base+0x7c4>
   1195c:	ldr	r0, [r4]
   11960:	add	r6, r6, #1
   11964:	cmp	r6, r0
   11968:	blt	11944 <main@@Base+0x78c>
   1196c:	ldr	r0, [r4, #8]
   11970:	b	11988 <main@@Base+0x7d0>
   11974:	ldr	r0, [r4, #8]
   11978:	b	119a4 <main@@Base+0x7ec>
   1197c:	ldr	r0, [r4, #8]
   11980:	cmp	r6, #0
   11984:	beq	119a4 <main@@Base+0x7ec>
   11988:	mov	r1, r6
   1198c:	ldr	r2, [r0, r1, lsl #2]!
   11990:	subs	r1, r1, #1
   11994:	str	r2, [r0, #4]
   11998:	ldr	r0, [r4, #8]
   1199c:	bgt	1198c <main@@Base+0x7d4>
   119a0:	b	119a8 <main@@Base+0x7f0>
   119a4:	mov	r6, #0
   119a8:	str	r5, [r0, r6, lsl #2]
   119ac:	ldr	r0, [r4]
   119b0:	add	r0, r0, #1
   119b4:	str	r0, [r4]
   119b8:	ldr	r5, [r8]
   119bc:	ldr	r0, [pc, #836]	; 11d08 <main@@Base+0xb50>
   119c0:	mov	r1, r5
   119c4:	add	r0, pc, r0
   119c8:	bl	10b38 <printf@plt>
   119cc:	mov	r0, #42	; 0x2a
   119d0:	bl	11d84 <vetor_criaHeap@@Base>
   119d4:	mov	r4, r0
   119d8:	ldr	r0, [pc, #812]	; 11d0c <main@@Base+0xb54>
   119dc:	ldr	r1, [pc, #812]	; 11d10 <main@@Base+0xb58>
   119e0:	add	r0, pc, r0
   119e4:	add	r1, pc, r1
   119e8:	bl	10b50 <fopen@plt>
   119ec:	cmp	r0, #0
   119f0:	beq	11b18 <main@@Base+0x960>
   119f4:	mov	r9, r0
   119f8:	bl	10bbc <feof@plt>
   119fc:	cmp	r0, #0
   11a00:	bne	11b04 <main@@Base+0x94c>
   11a04:	ldr	r7, [pc, #776]	; 11d14 <main@@Base+0xb5c>
   11a08:	sub	r6, fp, #36	; 0x24
   11a0c:	add	sl, sp, #4
   11a10:	mov	r5, #0
   11a14:	add	r7, pc, r7
   11a18:	mov	r0, r9
   11a1c:	mov	r1, r7
   11a20:	mov	r2, r6
   11a24:	bl	10b44 <__isoc99_fscanf@plt>
   11a28:	mov	r0, sl
   11a2c:	mov	r1, #256	; 0x100
   11a30:	mov	r2, r9
   11a34:	bl	10b74 <fgets@plt>
   11a38:	mov	r0, sl
   11a3c:	bl	10bc8 <strlen@plt>
   11a40:	add	r0, sl, r0
   11a44:	strb	r5, [r0, #-1]
   11a48:	ldm	r4, {r0, r1}
   11a4c:	cmp	r0, r1
   11a50:	beq	11af4 <main@@Base+0x93c>
   11a54:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11a58:	mov	r1, sl
   11a5c:	mov	r5, r7
   11a60:	bl	11de0 <elemento_cria@@Base>
   11a64:	mov	r7, r0
   11a68:	ldr	r0, [r4]
   11a6c:	cmp	r0, #1
   11a70:	blt	11aa8 <main@@Base+0x8f0>
   11a74:	mov	r8, #0
   11a78:	ldr	r0, [r4, #8]
   11a7c:	mov	r1, r7
   11a80:	ldr	r0, [r0, r8, lsl #2]
   11a84:	bl	11e9c <maior_que_HeapSort@@Base>
   11a88:	cmp	r0, #1
   11a8c:	beq	11ab0 <main@@Base+0x8f8>
   11a90:	ldr	r0, [r4]
   11a94:	add	r8, r8, #1
   11a98:	cmp	r8, r0
   11a9c:	blt	11a78 <main@@Base+0x8c0>
   11aa0:	ldr	r0, [r4, #8]
   11aa4:	b	11abc <main@@Base+0x904>
   11aa8:	ldr	r0, [r4, #8]
   11aac:	b	11ad8 <main@@Base+0x920>
   11ab0:	ldr	r0, [r4, #8]
   11ab4:	cmp	r8, #0
   11ab8:	beq	11ad8 <main@@Base+0x920>
   11abc:	mov	r1, r8
   11ac0:	ldr	r2, [r0, r1, lsl #2]!
   11ac4:	subs	r1, r1, #1
   11ac8:	str	r2, [r0, #4]
   11acc:	ldr	r0, [r4, #8]
   11ad0:	bgt	11ac0 <main@@Base+0x908>
   11ad4:	b	11adc <main@@Base+0x924>
   11ad8:	mov	r8, #0
   11adc:	str	r7, [r0, r8, lsl #2]
   11ae0:	mov	r7, r5
   11ae4:	mov	r5, #0
   11ae8:	ldr	r0, [r4]
   11aec:	add	r0, r0, #1
   11af0:	str	r0, [r4]
   11af4:	mov	r0, r9
   11af8:	bl	10bbc <feof@plt>
   11afc:	cmp	r0, #0
   11b00:	beq	11a18 <main@@Base+0x860>
   11b04:	mov	r0, r9
   11b08:	bl	10be0 <fclose@plt>
   11b0c:	ldr	r8, [pc, #516]	; 11d18 <main@@Base+0xb60>
   11b10:	ldr	r8, [pc, r8]
   11b14:	b	11b24 <main@@Base+0x96c>
   11b18:	ldr	r0, [pc, #516]	; 11d24 <main@@Base+0xb6c>
   11b1c:	add	r0, pc, r0
   11b20:	bl	10b8c <puts@plt>
   11b24:	ldr	r1, [r8]
   11b28:	ldr	r0, [pc, #492]	; 11d1c <main@@Base+0xb64>
   11b2c:	add	r0, pc, r0
   11b30:	bl	10b38 <printf@plt>
   11b34:	mov	r0, #0
   11b38:	mov	r4, #0
   11b3c:	bl	10b8c <puts@plt>
   11b40:	mov	r0, #0
   11b44:	bl	10b8c <puts@plt>
   11b48:	mov	r0, #0
   11b4c:	bl	10b8c <puts@plt>
   11b50:	mov	r0, #0
   11b54:	bl	10b8c <puts@plt>
   11b58:	mov	r0, #0
   11b5c:	bl	10b8c <puts@plt>
   11b60:	mov	r0, #0
   11b64:	bl	10b8c <puts@plt>
   11b68:	mov	r0, #0
   11b6c:	bl	10b8c <puts@plt>
   11b70:	mov	r0, #0
   11b74:	bl	10b8c <puts@plt>
   11b78:	mov	r0, #0
   11b7c:	bl	10b8c <puts@plt>
   11b80:	mov	r0, #0
   11b84:	bl	10b8c <puts@plt>
   11b88:	mov	r0, #0
   11b8c:	bl	10b8c <puts@plt>
   11b90:	mov	r0, #0
   11b94:	bl	10b8c <puts@plt>
   11b98:	mov	r0, #0
   11b9c:	bl	10b8c <puts@plt>
   11ba0:	mov	r0, #0
   11ba4:	bl	10b8c <puts@plt>
   11ba8:	mov	r0, #0
   11bac:	bl	10b8c <puts@plt>
   11bb0:	mov	r0, #0
   11bb4:	bl	10b8c <puts@plt>
   11bb8:	mov	r0, #0
   11bbc:	bl	10b8c <puts@plt>
   11bc0:	mov	r0, #0
   11bc4:	bl	10b8c <puts@plt>
   11bc8:	mov	r0, #0
   11bcc:	bl	10b8c <puts@plt>
   11bd0:	mov	r0, #0
   11bd4:	bl	10b8c <puts@plt>
   11bd8:	mov	r0, #0
   11bdc:	bl	10b8c <puts@plt>
   11be0:	mov	r0, #0
   11be4:	bl	10b8c <puts@plt>
   11be8:	mov	r0, #0
   11bec:	bl	10b8c <puts@plt>
   11bf0:	mov	r0, #0
   11bf4:	bl	10b8c <puts@plt>
   11bf8:	mov	r0, #0
   11bfc:	bl	10b8c <puts@plt>
   11c00:	mov	r0, #0
   11c04:	bl	10b8c <puts@plt>
   11c08:	mov	r0, #0
   11c0c:	bl	10b8c <puts@plt>
   11c10:	mov	r0, #0
   11c14:	bl	10b8c <puts@plt>
   11c18:	mov	r0, #0
   11c1c:	bl	10b8c <puts@plt>
   11c20:	mov	r0, #0
   11c24:	bl	10b8c <puts@plt>
   11c28:	mov	r0, #0
   11c2c:	bl	10b8c <puts@plt>
   11c30:	mov	r0, #0
   11c34:	bl	10b8c <puts@plt>
   11c38:	mov	r0, #0
   11c3c:	bl	10b8c <puts@plt>
   11c40:	mov	r0, #0
   11c44:	bl	10b8c <puts@plt>
   11c48:	mov	r0, #0
   11c4c:	bl	10b8c <puts@plt>
   11c50:	mov	r0, #0
   11c54:	bl	10b8c <puts@plt>
   11c58:	mov	r0, #0
   11c5c:	bl	10b8c <puts@plt>
   11c60:	mov	r0, #0
   11c64:	bl	10b8c <puts@plt>
   11c68:	mov	r0, #0
   11c6c:	bl	10b8c <puts@plt>
   11c70:	mov	r0, #0
   11c74:	bl	10b8c <puts@plt>
   11c78:	mov	r0, #0
   11c7c:	bl	10b8c <puts@plt>
   11c80:	mov	r0, #0
   11c84:	bl	10b8c <puts@plt>
   11c88:	b	117e8 <main@@Base+0x630>
   11c8c:	andeq	r1, r0, r4, lsl #3
   11c90:	ldrdeq	r0, [r0], -lr
   11c94:	andeq	r1, r1, ip, asr lr
   11c98:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   11c9c:	strdeq	r1, [r0], -r8
   11ca0:	muleq	r0, r3, lr
   11ca4:	andeq	r1, r0, r4, lsl #3
   11ca8:			; <UNDEFINED> instruction: 0x00000dbd
   11cac:	andeq	r0, r0, fp, ror #27
   11cb0:	andeq	r0, r0, lr, lsl lr
   11cb4:	andeq	r0, r0, r5, lsr lr
   11cb8:	andeq	r0, r0, r5, asr #28
   11cbc:	andeq	r0, r0, r3, lsl #27
   11cc0:	andeq	r0, r0, r1, lsl sp
   11cc4:	ldrdeq	r0, [r0], -sl
   11cc8:	andeq	r0, r0, r5, lsr #24
   11ccc:	andeq	r0, r0, r1, lsr ip
   11cd0:	ldrdeq	r0, [r0], -r8
   11cd4:	andeq	r0, r0, r6, ror #21
   11cd8:	ldrdeq	r0, [r0], -ip
   11cdc:	andeq	r0, r0, lr, lsr #21
   11ce0:	andeq	r1, r1, r0, asr #18
   11ce4:	andeq	r0, r0, r3, lsl #22
   11ce8:	strdeq	r0, [r0], -ip
   11cec:			; <UNDEFINED> instruction: 0x000009b3
   11cf0:	strdeq	r0, [r0], -r6
   11cf4:			; <UNDEFINED> instruction: 0x000009bd
   11cf8:	andeq	r0, r0, r2, asr sl
   11cfc:	ldrdeq	r0, [r0], -r9
   11d00:	ldrdeq	r0, [r0], -r5
   11d04:	andeq	r0, r0, r1, lsr #16
   11d08:	andeq	r0, r0, r1, lsr #16
   11d0c:	andeq	r0, r0, r2, ror #13
   11d10:	ldrdeq	r0, [r0], -r8
   11d14:	andeq	r0, r0, sl, lsr #13
   11d18:	andeq	r1, r1, ip, lsr r5
   11d1c:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   11d20:	andeq	r0, r0, r0, lsl ip
   11d24:	andeq	r0, r0, ip, lsl #16

00011d28 <vetor_cria@@Base>:
   11d28:	push	{r4, r5, fp, lr}
   11d2c:	add	fp, sp, #8
   11d30:	mov	r5, r0
   11d34:	mov	r0, #12
   11d38:	bl	10b98 <malloc@plt>
   11d3c:	cmp	r0, #0
   11d40:	beq	11d78 <vetor_cria@@Base+0x50>
   11d44:	mov	r4, r0
   11d48:	mov	r0, #0
   11d4c:	mov	r1, #4
   11d50:	stm	r4, {r0, r5}
   11d54:	mov	r0, r5
   11d58:	bl	10b20 <calloc@plt>
   11d5c:	cmp	r0, #0
   11d60:	str	r0, [r4, #8]
   11d64:	beq	11d70 <vetor_cria@@Base+0x48>
   11d68:	mov	r0, r4
   11d6c:	pop	{r4, r5, fp, pc}
   11d70:	mov	r0, r4
   11d74:	bl	10b68 <free@plt>
   11d78:	mov	r4, #0
   11d7c:	mov	r0, r4
   11d80:	pop	{r4, r5, fp, pc}

00011d84 <vetor_criaHeap@@Base>:
   11d84:	push	{r4, r5, fp, lr}
   11d88:	add	fp, sp, #8
   11d8c:	mov	r5, r0
   11d90:	mov	r0, #12
   11d94:	bl	10b98 <malloc@plt>
   11d98:	cmp	r0, #0
   11d9c:	beq	11dd4 <vetor_criaHeap@@Base+0x50>
   11da0:	mov	r4, r0
   11da4:	mov	r0, #0
   11da8:	mov	r1, #4
   11dac:	stm	r4, {r0, r5}
   11db0:	add	r0, r5, #1
   11db4:	bl	10b20 <calloc@plt>
   11db8:	cmp	r0, #0
   11dbc:	str	r0, [r4, #8]
   11dc0:	beq	11dcc <vetor_criaHeap@@Base+0x48>
   11dc4:	mov	r0, r4
   11dc8:	pop	{r4, r5, fp, pc}
   11dcc:	mov	r0, r4
   11dd0:	bl	10b68 <free@plt>
   11dd4:	mov	r4, #0
   11dd8:	mov	r0, r4
   11ddc:	pop	{r4, r5, fp, pc}

00011de0 <elemento_cria@@Base>:
   11de0:	push	{r4, r5, r6, sl, fp, lr}
   11de4:	add	fp, sp, #16
   11de8:	mov	r5, r0
   11dec:	mov	r0, #8
   11df0:	mov	r6, r1
   11df4:	bl	10b98 <malloc@plt>
   11df8:	cmp	r0, #0
   11dfc:	moveq	r4, #0
   11e00:	moveq	r0, r4
   11e04:	popeq	{r4, r5, r6, sl, fp, pc}
   11e08:	mov	r4, r0
   11e0c:	mov	r0, r6
   11e10:	bl	10b80 <strdup@plt>
   11e14:	str	r5, [r4]
   11e18:	str	r0, [r4, #4]
   11e1c:	mov	r0, r4
   11e20:	pop	{r4, r5, r6, sl, fp, pc}

00011e24 <maior_que@@Base>:
   11e24:	push	{r4, r5, fp, lr}
   11e28:	add	fp, sp, #8
   11e2c:	cmp	r0, #0
   11e30:	movne	r5, r1
   11e34:	cmpne	r1, #0
   11e38:	bne	11e50 <maior_que@@Base+0x2c>
   11e3c:	ldr	r0, [pc, #76]	; 11e90 <maior_que@@Base+0x6c>
   11e40:	add	r0, pc, r0
   11e44:	bl	10b8c <puts@plt>
   11e48:	mov	r0, #0
   11e4c:	pop	{r4, r5, fp, pc}
   11e50:	mov	r4, r0
   11e54:	ldr	r0, [pc, #56]	; 11e94 <maior_que@@Base+0x70>
   11e58:	ldr	r0, [pc, r0]
   11e5c:	ldr	r0, [r0]
   11e60:	bl	10b5c <fflush@plt>
   11e64:	ldr	r0, [pc, #44]	; 11e98 <maior_que@@Base+0x74>
   11e68:	ldr	r0, [pc, r0]
   11e6c:	ldr	r1, [r0]
   11e70:	add	r1, r1, #1
   11e74:	str	r1, [r0]
   11e78:	mov	r0, #0
   11e7c:	ldr	r1, [r5]
   11e80:	ldr	r2, [r4]
   11e84:	cmp	r2, r1
   11e88:	movwgt	r0, #1
   11e8c:	pop	{r4, r5, fp, pc}
   11e90:	andeq	r0, r0, sl, ror #12
   11e94:	strdeq	r1, [r1], -ip
   11e98:	andeq	r1, r1, r4, ror #3

00011e9c <maior_que_HeapSort@@Base>:
   11e9c:	push	{r4, r5, fp, lr}
   11ea0:	add	fp, sp, #8
   11ea4:	cmp	r0, #0
   11ea8:	movne	r5, r1
   11eac:	cmpne	r1, #0
   11eb0:	bne	11ec8 <maior_que_HeapSort@@Base+0x2c>
   11eb4:	ldr	r0, [pc, #72]	; 11f04 <maior_que_HeapSort@@Base+0x68>
   11eb8:	add	r0, pc, r0
   11ebc:	bl	10b8c <puts@plt>
   11ec0:	mov	r0, #0
   11ec4:	pop	{r4, r5, fp, pc}
   11ec8:	mov	r4, r0
   11ecc:	ldr	r0, [pc, #52]	; 11f08 <maior_que_HeapSort@@Base+0x6c>
   11ed0:	ldr	r0, [pc, r0]
   11ed4:	ldr	r0, [r0]
   11ed8:	bl	10b5c <fflush@plt>
   11edc:	ldr	r0, [pc, #40]	; 11f0c <maior_que_HeapSort@@Base+0x70>
   11ee0:	ldr	r0, [pc, r0]
   11ee4:	ldr	r1, [r0]
   11ee8:	add	r1, r1, #1
   11eec:	str	r1, [r0]
   11ef0:	ldr	r1, [r5, #4]
   11ef4:	ldr	r0, [r4, #4]
   11ef8:	bl	10b2c <strcmp@plt>
   11efc:	lsr	r0, r0, #31
   11f00:	pop	{r4, r5, fp, pc}
   11f04:	strdeq	r0, [r0], -r2
   11f08:	andeq	r1, r1, r4, lsl #3
   11f0c:	andeq	r1, r1, ip, ror #2

00011f10 <vetor_imprime@@Base>:
   11f10:	push	{r4, r5, r6, sl, fp, lr}
   11f14:	add	fp, sp, #16
   11f18:	mov	r4, r0
   11f1c:	ldr	r0, [r0]
   11f20:	cmp	r0, #1
   11f24:	blt	11f90 <vetor_imprime@@Base+0x80>
   11f28:	ldr	r0, [r4, #8]
   11f2c:	ldr	r0, [r0]
   11f30:	ldr	r2, [r0]
   11f34:	ldr	r1, [r0, #4]
   11f38:	ldr	r0, [pc, #96]	; 11fa0 <vetor_imprime@@Base+0x90>
   11f3c:	add	r0, pc, r0
   11f40:	bl	10b38 <printf@plt>
   11f44:	ldr	r0, [r4]
   11f48:	cmp	r0, #2
   11f4c:	blt	11f84 <vetor_imprime@@Base+0x74>
   11f50:	ldr	r5, [pc, #76]	; 11fa4 <vetor_imprime@@Base+0x94>
   11f54:	mov	r6, #1
   11f58:	add	r5, pc, r5
   11f5c:	ldr	r0, [r4, #8]
   11f60:	ldr	r0, [r0, r6, lsl #2]
   11f64:	ldr	r2, [r0]
   11f68:	ldr	r1, [r0, #4]
   11f6c:	mov	r0, r5
   11f70:	bl	10b38 <printf@plt>
   11f74:	ldr	r0, [r4]
   11f78:	add	r6, r6, #1
   11f7c:	cmp	r6, r0
   11f80:	blt	11f5c <vetor_imprime@@Base+0x4c>
   11f84:	mov	r0, #10
   11f88:	pop	{r4, r5, r6, sl, fp, lr}
   11f8c:	b	10bd4 <putchar@plt>
   11f90:	ldr	r0, [pc, #16]	; 11fa8 <vetor_imprime@@Base+0x98>
   11f94:	add	r0, pc, r0
   11f98:	pop	{r4, r5, r6, sl, fp, lr}
   11f9c:	b	10b8c <puts@plt>
   11fa0:	andeq	r0, r0, r2, asr #10
   11fa4:	andeq	r0, r0, r3, asr #10
   11fa8:	andeq	r0, r0, r4, lsr #10

00011fac <vetor_imprimeHeap@@Base>:
   11fac:	push	{r4, r5, r6, sl, fp, lr}
   11fb0:	add	fp, sp, #16
   11fb4:	mov	r4, r0
   11fb8:	ldr	r0, [r0]
   11fbc:	cmp	r0, #1
   11fc0:	blt	1202c <vetor_imprimeHeap@@Base+0x80>
   11fc4:	ldr	r0, [r4, #8]
   11fc8:	ldr	r0, [r0, #4]
   11fcc:	ldr	r2, [r0]
   11fd0:	ldr	r1, [r0, #4]
   11fd4:	ldr	r0, [pc, #96]	; 1203c <vetor_imprimeHeap@@Base+0x90>
   11fd8:	add	r0, pc, r0
   11fdc:	bl	10b38 <printf@plt>
   11fe0:	ldr	r0, [r4]
   11fe4:	cmp	r0, #3
   11fe8:	blt	12020 <vetor_imprimeHeap@@Base+0x74>
   11fec:	ldr	r5, [pc, #76]	; 12040 <vetor_imprimeHeap@@Base+0x94>
   11ff0:	mov	r6, #2
   11ff4:	add	r5, pc, r5
   11ff8:	ldr	r0, [r4, #8]
   11ffc:	ldr	r0, [r0, r6, lsl #2]
   12000:	ldr	r2, [r0]
   12004:	ldr	r1, [r0, #4]
   12008:	mov	r0, r5
   1200c:	bl	10b38 <printf@plt>
   12010:	ldr	r0, [r4]
   12014:	add	r6, r6, #1
   12018:	cmp	r6, r0
   1201c:	blt	11ff8 <vetor_imprimeHeap@@Base+0x4c>
   12020:	mov	r0, #10
   12024:	pop	{r4, r5, r6, sl, fp, lr}
   12028:	b	10bd4 <putchar@plt>
   1202c:	ldr	r0, [pc, #16]	; 12044 <vetor_imprimeHeap@@Base+0x98>
   12030:	add	r0, pc, r0
   12034:	pop	{r4, r5, r6, sl, fp, lr}
   12038:	b	10b8c <puts@plt>
   1203c:	andeq	r0, r0, r6, lsr #9
   12040:	andeq	r0, r0, r7, lsr #9
   12044:	andeq	r0, r0, r8, lsl #9

00012048 <__libc_csu_init@@Base>:
   12048:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1204c:	mov	r7, r0
   12050:	ldr	r6, [pc, #72]	; 120a0 <__libc_csu_init@@Base+0x58>
   12054:	ldr	r5, [pc, #72]	; 120a4 <__libc_csu_init@@Base+0x5c>
   12058:	add	r6, pc, r6
   1205c:	add	r5, pc, r5
   12060:	sub	r6, r6, r5
   12064:	mov	r8, r1
   12068:	mov	r9, r2
   1206c:	bl	10b00 <calloc@plt-0x20>
   12070:	asrs	r6, r6, #2
   12074:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12078:	mov	r4, #0
   1207c:	add	r4, r4, #1
   12080:	ldr	r3, [r5], #4
   12084:	mov	r2, r9
   12088:	mov	r1, r8
   1208c:	mov	r0, r7
   12090:	blx	r3
   12094:	cmp	r6, r4
   12098:	bne	1207c <__libc_csu_init@@Base+0x34>
   1209c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   120a0:	andeq	r0, r1, ip, lsr #29
   120a4:	andeq	r0, r1, r4, lsr #29

000120a8 <__libc_csu_fini@@Base>:
   120a8:	bx	lr

Disassembly of section .fini:

000120ac <.fini>:
   120ac:	push	{r3, lr}
   120b0:	pop	{r3, pc}
