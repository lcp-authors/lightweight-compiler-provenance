
../repos/eddieantonio-ocreval-3ab279a/wordaccci/wordaccci:     file format elf32-littlearm


Disassembly of section .init:

00010804 <.init>:
   10804:	push	{r3, lr}
   10808:	bl	10974 <abort@plt+0x48>
   1080c:	pop	{r3, pc}

Disassembly of section .plt:

00010810 <calloc@plt-0x14>:
   10810:	push	{lr}		; (str lr, [sp, #-4]!)
   10814:	ldr	lr, [pc, #4]	; 10820 <calloc@plt-0x4>
   10818:	add	lr, pc, lr
   1081c:	ldr	pc, [lr, #8]!
   10820:	andeq	r3, r1, r0, ror #15

00010824 <calloc@plt>:
   10824:	add	ip, pc, #0, 12
   10828:	add	ip, ip, #77824	; 0x13000
   1082c:	ldr	pc, [ip, #2016]!	; 0x7e0

00010830 <strcmp@plt>:
   10830:	add	ip, pc, #0, 12
   10834:	add	ip, ip, #77824	; 0x13000
   10838:	ldr	pc, [ip, #2008]!	; 0x7d8

0001083c <printf@plt>:
   1083c:	add	ip, pc, #0, 12
   10840:	add	ip, ip, #77824	; 0x13000
   10844:	ldr	pc, [ip, #2000]!	; 0x7d0

00010848 <fopen@plt>:
   10848:	add	ip, pc, #0, 12
   1084c:	add	ip, ip, #77824	; 0x13000
   10850:	ldr	pc, [ip, #1992]!	; 0x7c8

00010854 <free@plt>:
   10854:	add	ip, pc, #0, 12
   10858:	add	ip, ip, #77824	; 0x13000
   1085c:	ldr	pc, [ip, #1984]!	; 0x7c0

00010860 <fgets@plt>:
   10860:	add	ip, pc, #0, 12
   10864:	add	ip, ip, #77824	; 0x13000
   10868:	ldr	pc, [ip, #1976]!	; 0x7b8

0001086c <strdup@plt>:
   1086c:	add	ip, pc, #0, 12
   10870:	add	ip, ip, #77824	; 0x13000
   10874:	ldr	pc, [ip, #1968]!	; 0x7b0

00010878 <__xstat@plt>:
   10878:	add	ip, pc, #0, 12
   1087c:	add	ip, ip, #77824	; 0x13000
   10880:	ldr	pc, [ip, #1960]!	; 0x7a8

00010884 <__libc_start_main@plt>:
   10884:	add	ip, pc, #0, 12
   10888:	add	ip, ip, #77824	; 0x13000
   1088c:	ldr	pc, [ip, #1952]!	; 0x7a0

00010890 <__sysv_signal@plt>:
   10890:	add	ip, pc, #0, 12
   10894:	add	ip, ip, #77824	; 0x13000
   10898:	ldr	pc, [ip, #1944]!	; 0x798

0001089c <__gmon_start__@plt>:
   1089c:	add	ip, pc, #0, 12
   108a0:	add	ip, ip, #77824	; 0x13000
   108a4:	ldr	pc, [ip, #1936]!	; 0x790

000108a8 <exit@plt>:
   108a8:	add	ip, pc, #0, 12
   108ac:	add	ip, ip, #77824	; 0x13000
   108b0:	ldr	pc, [ip, #1928]!	; 0x788

000108b4 <strlen@plt>:
   108b4:	add	ip, pc, #0, 12
   108b8:	add	ip, ip, #77824	; 0x13000
   108bc:	ldr	pc, [ip, #1920]!	; 0x780

000108c0 <fprintf@plt>:
   108c0:	add	ip, pc, #0, 12
   108c4:	add	ip, ip, #77824	; 0x13000
   108c8:	ldr	pc, [ip, #1912]!	; 0x778

000108cc <sqrt@plt>:
   108cc:	add	ip, pc, #0, 12
   108d0:	add	ip, ip, #77824	; 0x13000
   108d4:	ldr	pc, [ip, #1904]!	; 0x770

000108d8 <__isoc99_sscanf@plt>:
   108d8:	add	ip, pc, #0, 12
   108dc:	add	ip, ip, #77824	; 0x13000
   108e0:	ldr	pc, [ip, #1896]!	; 0x768

000108e4 <fclose@plt>:
   108e4:	add	ip, pc, #0, 12
   108e8:	add	ip, ip, #77824	; 0x13000
   108ec:	ldr	pc, [ip, #1888]!	; 0x760

000108f0 <fputc@plt>:
   108f0:	add	ip, pc, #0, 12
   108f4:	add	ip, ip, #77824	; 0x13000
   108f8:	ldr	pc, [ip, #1880]!	; 0x758

000108fc <sprintf@plt>:
   108fc:	add	ip, pc, #0, 12
   10900:	add	ip, ip, #77824	; 0x13000
   10904:	ldr	pc, [ip, #1872]!	; 0x750

00010908 <atoi@plt>:
   10908:	add	ip, pc, #0, 12
   1090c:	add	ip, ip, #77824	; 0x13000
   10910:	ldr	pc, [ip, #1864]!	; 0x748

00010914 <fputs@plt>:
   10914:	add	ip, pc, #0, 12
   10918:	add	ip, ip, #77824	; 0x13000
   1091c:	ldr	pc, [ip, #1856]!	; 0x740

00010920 <strncmp@plt>:
   10920:	add	ip, pc, #0, 12
   10924:	add	ip, ip, #77824	; 0x13000
   10928:	ldr	pc, [ip, #1848]!	; 0x738

0001092c <abort@plt>:
   1092c:	add	ip, pc, #0, 12
   10930:	add	ip, ip, #77824	; 0x13000
   10934:	ldr	pc, [ip, #1840]!	; 0x730

Disassembly of section .text:

00010938 <error@@Base-0xfb0>:
   10938:	mov	fp, #0
   1093c:	mov	lr, #0
   10940:	pop	{r1}		; (ldr r1, [sp], #4)
   10944:	mov	r2, sp
   10948:	push	{r2}		; (str r2, [sp, #-4]!)
   1094c:	push	{r0}		; (str r0, [sp, #-4]!)
   10950:	ldr	ip, [pc, #16]	; 10968 <abort@plt+0x3c>
   10954:	push	{ip}		; (str ip, [sp, #-4]!)
   10958:	ldr	r0, [pc, #12]	; 1096c <abort@plt+0x40>
   1095c:	ldr	r3, [pc, #12]	; 10970 <abort@plt+0x44>
   10960:	bl	10884 <__libc_start_main@plt>
   10964:	bl	1092c <abort@plt>
   10968:	andeq	r3, r1, ip, lsl r7
   1096c:	andeq	r0, r1, r8, lsr #24
   10970:			; <UNDEFINED> instruction: 0x000136bc
   10974:	ldr	r3, [pc, #20]	; 10990 <abort@plt+0x64>
   10978:	ldr	r2, [pc, #20]	; 10994 <abort@plt+0x68>
   1097c:	add	r3, pc, r3
   10980:	ldr	r2, [r3, r2]
   10984:	cmp	r2, #0
   10988:	bxeq	lr
   1098c:	b	1089c <__gmon_start__@plt>
   10990:	andeq	r3, r1, ip, ror r6
   10994:	andeq	r0, r0, r8, lsr #1
   10998:	ldr	r0, [pc, #24]	; 109b8 <abort@plt+0x8c>
   1099c:	ldr	r3, [pc, #24]	; 109bc <abort@plt+0x90>
   109a0:	cmp	r3, r0
   109a4:	bxeq	lr
   109a8:	ldr	r3, [pc, #16]	; 109c0 <abort@plt+0x94>
   109ac:	cmp	r3, #0
   109b0:	bxeq	lr
   109b4:	bx	r3
   109b8:	strdeq	r4, [r2], -ip
   109bc:	strdeq	r4, [r2], -ip
   109c0:	andeq	r0, r0, r0
   109c4:	ldr	r0, [pc, #36]	; 109f0 <abort@plt+0xc4>
   109c8:	ldr	r1, [pc, #36]	; 109f4 <abort@plt+0xc8>
   109cc:	sub	r1, r1, r0
   109d0:	asr	r1, r1, #2
   109d4:	add	r1, r1, r1, lsr #31
   109d8:	asrs	r1, r1, #1
   109dc:	bxeq	lr
   109e0:	ldr	r3, [pc, #16]	; 109f8 <abort@plt+0xcc>
   109e4:	cmp	r3, #0
   109e8:	bxeq	lr
   109ec:	bx	r3
   109f0:	strdeq	r4, [r2], -ip
   109f4:	strdeq	r4, [r2], -ip
   109f8:	andeq	r0, r0, r0
   109fc:	push	{r4, lr}
   10a00:	ldr	r4, [pc, #24]	; 10a20 <abort@plt+0xf4>
   10a04:	ldrb	r3, [r4]
   10a08:	cmp	r3, #0
   10a0c:	popne	{r4, pc}
   10a10:	bl	10998 <abort@plt+0x6c>
   10a14:	mov	r3, #1
   10a18:	strb	r3, [r4]
   10a1c:	pop	{r4, pc}
   10a20:	andeq	r4, r2, r0, lsl #2
   10a24:	b	109c4 <abort@plt+0x98>
   10a28:	push	{fp, lr}
   10a2c:	mov	fp, sp
   10a30:	sub	sp, sp, #24
   10a34:	ldr	r1, [pc, #132]	; 10ac0 <abort@plt+0x194>
   10a38:	ldr	r1, [pc, r1]
   10a3c:	ldr	r2, [pc, #128]	; 10ac4 <abort@plt+0x198>
   10a40:	ldr	r2, [pc, r2]
   10a44:	str	r0, [fp, #-4]
   10a48:	ldr	r0, [r1]
   10a4c:	str	r0, [fp, #-8]
   10a50:	ldr	r0, [r1, #4]
   10a54:	str	r0, [sp, #12]
   10a58:	ldr	r0, [fp, #-4]
   10a5c:	str	r0, [sp, #8]
   10a60:	mov	r0, r1
   10a64:	ldr	r1, [sp, #8]
   10a68:	blx	r2
   10a6c:	ldr	r0, [pc, #64]	; 10ab4 <abort@plt+0x188>
   10a70:	ldr	r0, [pc, r0]
   10a74:	ldr	r1, [pc, #60]	; 10ab8 <abort@plt+0x18c>
   10a78:	ldr	r1, [pc, r1]
   10a7c:	ldr	r2, [pc, #56]	; 10abc <abort@plt+0x190>
   10a80:	ldr	r2, [pc, r2]
   10a84:	ldr	lr, [r2]
   10a88:	ldr	r3, [fp, #-8]
   10a8c:	sub	r3, lr, r3
   10a90:	ldr	r2, [r2, #4]
   10a94:	ldr	lr, [sp, #12]
   10a98:	sub	r2, r2, lr
   10a9c:	str	r1, [sp, #4]
   10aa0:	mov	r1, r3
   10aa4:	ldr	r3, [sp, #4]
   10aa8:	blx	r3
   10aac:	mov	sp, fp
   10ab0:	pop	{fp, pc}
   10ab4:	andeq	r3, r1, ip, lsr r6
   10ab8:	andeq	r3, r1, ip, lsl #12
   10abc:	andeq	r3, r1, r8, lsr #12
   10ac0:	andeq	r3, r1, r0, ror r6
   10ac4:	andeq	r3, r1, r8, asr #12
   10ac8:	push	{fp, lr}
   10acc:	mov	fp, sp
   10ad0:	sub	sp, sp, #56	; 0x38
   10ad4:	ldr	r0, [pc, #324]	; 10c20 <abort@plt+0x2f4>
   10ad8:	ldr	r0, [pc, r0]
   10adc:	ldr	r1, [pc, #320]	; 10c24 <abort@plt+0x2f8>
   10ae0:	ldr	r1, [pc, r1]
   10ae4:	sub	r2, fp, #8
   10ae8:	str	r1, [fp, #-20]	; 0xffffffec
   10aec:	mov	r1, r2
   10af0:	sub	r2, fp, #16
   10af4:	ldr	r3, [fp, #-20]	; 0xffffffec
   10af8:	blx	r3
   10afc:	ldr	r0, [pc, #276]	; 10c18 <abort@plt+0x2ec>
   10b00:	add	r0, pc, r0
   10b04:	ldr	r1, [pc, #272]	; 10c1c <abort@plt+0x2f0>
   10b08:	ldr	r1, [pc, r1]
   10b0c:	ldr	r1, [r1, #12]
   10b10:	bl	1083c <printf@plt>
   10b14:	ldr	r1, [pc, #244]	; 10c10 <abort@plt+0x2e4>
   10b18:	add	r1, pc, r1
   10b1c:	ldr	r2, [pc, #240]	; 10c14 <abort@plt+0x2e8>
   10b20:	ldr	r2, [pc, r2]
   10b24:	ldr	r2, [r2]
   10b28:	str	r0, [fp, #-24]	; 0xffffffe8
   10b2c:	mov	r0, r1
   10b30:	mov	r1, r2
   10b34:	bl	1083c <printf@plt>
   10b38:	ldr	r1, [pc, #200]	; 10c08 <abort@plt+0x2dc>
   10b3c:	add	r1, pc, r1
   10b40:	ldr	r2, [pc, #196]	; 10c0c <abort@plt+0x2e0>
   10b44:	ldr	r2, [pc, r2]
   10b48:	ldr	r2, [r2, #4]
   10b4c:	str	r0, [sp, #28]
   10b50:	mov	r0, r1
   10b54:	mov	r1, r2
   10b58:	bl	1083c <printf@plt>
   10b5c:	ldr	r1, [pc, #156]	; 10c00 <abort@plt+0x2d4>
   10b60:	add	r1, pc, r1
   10b64:	ldr	r2, [pc, #152]	; 10c04 <abort@plt+0x2d8>
   10b68:	ldr	r2, [pc, r2]
   10b6c:	vldr	d16, [pc, #124]	; 10bf0 <abort@plt+0x2c4>
   10b70:	ldr	r3, [r2]
   10b74:	ldr	lr, [r2, #4]
   10b78:	sub	r3, r3, lr
   10b7c:	vmov	s0, r3
   10b80:	vcvt.f64.s32	d17, s0
   10b84:	vmul.f64	d16, d16, d17
   10b88:	ldr	r2, [r2]
   10b8c:	vmov	s0, r2
   10b90:	vcvt.f64.s32	d17, s0
   10b94:	vdiv.f64	d16, d16, d17
   10b98:	str	r0, [sp, #24]
   10b9c:	mov	r0, r1
   10ba0:	vmov	r2, r3, d16
   10ba4:	bl	1083c <printf@plt>
   10ba8:	ldr	r1, [pc, #72]	; 10bf8 <abort@plt+0x2cc>
   10bac:	add	r1, pc, r1
   10bb0:	ldr	r2, [pc, #68]	; 10bfc <abort@plt+0x2d0>
   10bb4:	add	r2, pc, r2
   10bb8:	vldr	d16, [fp, #-8]
   10bbc:	vldr	d17, [fp, #-16]
   10bc0:	str	r0, [sp, #20]
   10bc4:	mov	r0, r1
   10bc8:	str	r2, [sp, #16]
   10bcc:	vmov	r2, r3, d16
   10bd0:	vstr	d17, [sp]
   10bd4:	ldr	r1, [sp, #16]
   10bd8:	str	r1, [sp, #8]
   10bdc:	bl	1083c <printf@plt>
   10be0:	str	r0, [sp, #12]
   10be4:	mov	sp, fp
   10be8:	pop	{fp, pc}
   10bec:	nop	{0}
   10bf0:	andeq	r0, r0, r0
   10bf4:	subsmi	r0, r9, r0
   10bf8:	ldrdeq	r2, [r0], -r8
   10bfc:	andeq	r2, r0, r5, ror #23
   10c00:	andeq	r2, r0, r0, lsl ip
   10c04:	andeq	r3, r1, r0, asr #10
   10c08:	andeq	r2, r0, sp, lsl ip
   10c0c:	andeq	r3, r1, r4, ror #10
   10c10:	andeq	r2, r0, r2, lsr ip
   10c14:	andeq	r3, r1, r8, lsl #11
   10c18:	andeq	r2, r0, r4, lsr ip
   10c1c:	andeq	r3, r1, r4, lsr #11
   10c20:	ldrdeq	r3, [r1], -r4
   10c24:	ldrdeq	r3, [r1], -ip
   10c28:	push	{fp, lr}
   10c2c:	mov	fp, sp
   10c30:	sub	sp, sp, #24
   10c34:	ldr	r2, [pc, #156]	; 10cd8 <abort@plt+0x3ac>
   10c38:	add	r2, pc, r2
   10c3c:	ldr	r3, [pc, #152]	; 10cdc <abort@plt+0x3b0>
   10c40:	ldr	r3, [pc, r3]
   10c44:	movw	ip, #0
   10c48:	str	ip, [fp, #-4]
   10c4c:	str	r0, [fp, #-8]
   10c50:	str	r1, [sp, #12]
   10c54:	ldr	r1, [sp, #12]
   10c58:	sub	r0, fp, #8
   10c5c:	str	r3, [sp, #4]
   10c60:	mov	r3, ip
   10c64:	ldr	ip, [sp, #4]
   10c68:	blx	ip
   10c6c:	ldr	r0, [fp, #-8]
   10c70:	cmp	r0, #2
   10c74:	bge	10c8c <abort@plt+0x360>
   10c78:	ldr	r0, [pc, #100]	; 10ce4 <abort@plt+0x3b8>
   10c7c:	add	r0, pc, r0
   10c80:	ldr	r1, [pc, #96]	; 10ce8 <abort@plt+0x3bc>
   10c84:	ldr	r1, [pc, r1]
   10c88:	blx	r1
   10c8c:	movw	r0, #0
   10c90:	str	r0, [sp, #8]
   10c94:	ldr	r0, [sp, #8]
   10c98:	ldr	r1, [fp, #-8]
   10c9c:	cmp	r0, r1
   10ca0:	bge	10cc8 <abort@plt+0x39c>
   10ca4:	ldr	r0, [sp, #12]
   10ca8:	ldr	r1, [sp, #8]
   10cac:	add	r0, r0, r1, lsl #2
   10cb0:	ldr	r0, [r0]
   10cb4:	bl	10a28 <abort@plt+0xfc>
   10cb8:	ldr	r0, [sp, #8]
   10cbc:	add	r0, r0, #1
   10cc0:	str	r0, [sp, #8]
   10cc4:	b	10c94 <abort@plt+0x368>
   10cc8:	bl	10ac8 <abort@plt+0x19c>
   10ccc:	ldr	lr, [pc, #12]	; 10ce0 <abort@plt+0x3b4>
   10cd0:	ldr	lr, [pc, lr]
   10cd4:	blx	lr
   10cd8:	muleq	r0, r2, fp
   10cdc:	andeq	r3, r1, r4, asr r4
   10ce0:	strdeq	r3, [r1], -r0
   10ce4:	andeq	r2, r0, lr, ror fp
   10ce8:	andeq	r3, r1, r8, ror #7
   10cec:	andeq	r0, r0, r0
   10cf0:	push	{fp, lr}
   10cf4:	mov	fp, sp
   10cf8:	sub	sp, sp, #24
   10cfc:	ldr	r3, [pc, #136]	; 10d8c <abort@plt+0x460>
   10d00:	ldr	r3, [pc, r3]
   10d04:	str	r0, [fp, #-4]
   10d08:	str	r1, [fp, #-8]
   10d0c:	str	r2, [sp, #12]
   10d10:	movw	r0, #1
   10d14:	movw	r1, #32
   10d18:	blx	r3
   10d1c:	ldr	r1, [pc, #100]	; 10d88 <abort@plt+0x45c>
   10d20:	ldr	r1, [pc, r1]
   10d24:	str	r0, [sp, #8]
   10d28:	ldr	r0, [fp, #-8]
   10d2c:	ldr	r2, [sp, #8]
   10d30:	str	r0, [r2, #8]
   10d34:	ldr	r0, [sp, #12]
   10d38:	ldr	r2, [sp, #8]
   10d3c:	str	r0, [r2, #12]
   10d40:	ldr	r0, [fp, #-8]
   10d44:	ldr	r2, [fp, #-4]
   10d48:	ldr	r3, [r2, #24]
   10d4c:	add	r0, r3, r0
   10d50:	str	r0, [r2, #24]
   10d54:	ldr	r0, [sp, #12]
   10d58:	ldr	r2, [fp, #-4]
   10d5c:	ldr	r3, [r2, #28]
   10d60:	add	r0, r3, r0
   10d64:	str	r0, [r2, #28]
   10d68:	ldr	r0, [fp, #-4]
   10d6c:	ldr	r2, [sp, #8]
   10d70:	str	r1, [sp, #4]
   10d74:	mov	r1, r2
   10d78:	ldr	r2, [sp, #4]
   10d7c:	blx	r2
   10d80:	mov	sp, fp
   10d84:	pop	{fp, pc}
   10d88:	andeq	r3, r1, r8, ror r3
   10d8c:	ldrdeq	r3, [r1], -r4
   10d90:	push	{fp, lr}
   10d94:	mov	fp, sp
   10d98:	sub	sp, sp, #112	; 0x70
   10d9c:	vldr	d16, [pc, #884]	; 11118 <abort@plt+0x7ec>
   10da0:	str	r0, [fp, #-4]
   10da4:	str	r1, [fp, #-8]
   10da8:	str	r2, [fp, #-12]
   10dac:	vstr	d16, [fp, #-32]	; 0xffffffe0
   10db0:	ldr	r0, [fp, #-4]
   10db4:	bl	11138 <abort@plt+0x80c>
   10db8:	sxtb	r0, r0
   10dbc:	cmp	r0, #0
   10dc0:	bne	10dd8 <abort@plt+0x4ac>
   10dc4:	ldr	r0, [pc, #868]	; 11130 <abort@plt+0x804>
   10dc8:	add	r0, pc, r0
   10dcc:	ldr	r1, [pc, #864]	; 11134 <abort@plt+0x808>
   10dd0:	ldr	r1, [pc, r1]
   10dd4:	blx	r1
   10dd8:	ldr	r0, [fp, #-4]
   10ddc:	ldr	r0, [r0, #12]
   10de0:	str	r0, [fp, #-16]
   10de4:	ldr	r0, [fp, #-4]
   10de8:	ldr	r0, [r0, #24]
   10dec:	ldr	r1, [fp, #-4]
   10df0:	ldr	r1, [r1, #28]
   10df4:	bl	111c0 <abort@plt+0x894>
   10df8:	ldr	r0, [fp, #-4]
   10dfc:	vstr	d0, [r0, #32]
   10e00:	ldr	r0, [fp, #-16]
   10e04:	vmov	s2, r0
   10e08:	vcvt.f64.s32	d0, s2
   10e0c:	ldr	r0, [fp, #-4]
   10e10:	vldr	d16, [r0, #32]
   10e14:	vmul.f64	d16, d0, d16
   10e18:	vstr	d16, [fp, #-24]	; 0xffffffe8
   10e1c:	ldr	r0, [fp, #-4]
   10e20:	ldr	r0, [r0]
   10e24:	str	r0, [fp, #-44]	; 0xffffffd4
   10e28:	ldr	r0, [fp, #-44]	; 0xffffffd4
   10e2c:	movw	r1, #0
   10e30:	cmp	r0, r1
   10e34:	beq	10ebc <abort@plt+0x590>
   10e38:	ldr	r0, [fp, #-4]
   10e3c:	ldr	r0, [r0, #24]
   10e40:	ldr	r1, [fp, #-44]	; 0xffffffd4
   10e44:	ldr	r1, [r1, #8]
   10e48:	sub	r0, r0, r1
   10e4c:	ldr	r1, [fp, #-4]
   10e50:	ldr	r1, [r1, #28]
   10e54:	ldr	r2, [fp, #-44]	; 0xffffffd4
   10e58:	ldr	r2, [r2, #12]
   10e5c:	sub	r1, r1, r2
   10e60:	bl	111c0 <abort@plt+0x894>
   10e64:	ldr	r0, [fp, #-44]	; 0xffffffd4
   10e68:	vstr	d0, [r0, #16]
   10e6c:	vldr	d0, [fp, #-24]	; 0xffffffe8
   10e70:	ldr	r0, [fp, #-16]
   10e74:	sub	r0, r0, #1
   10e78:	vmov	s2, r0
   10e7c:	vcvt.f64.s32	d16, s2
   10e80:	ldr	r0, [fp, #-44]	; 0xffffffd4
   10e84:	vldr	d17, [r0, #16]
   10e88:	vmul.f64	d16, d16, d17
   10e8c:	vsub.f64	d16, d0, d16
   10e90:	ldr	r0, [fp, #-44]	; 0xffffffd4
   10e94:	vstr	d16, [r0, #24]
   10e98:	ldr	r0, [fp, #-44]	; 0xffffffd4
   10e9c:	vldr	d16, [r0, #16]
   10ea0:	vldr	d17, [fp, #-32]	; 0xffffffe0
   10ea4:	vadd.f64	d16, d17, d16
   10ea8:	vstr	d16, [fp, #-32]	; 0xffffffe0
   10eac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   10eb0:	ldr	r0, [r0, #4]
   10eb4:	str	r0, [fp, #-44]	; 0xffffffd4
   10eb8:	b	10e28 <abort@plt+0x4fc>
   10ebc:	vldr	d16, [pc, #596]	; 11118 <abort@plt+0x7ec>
   10ec0:	vldr	d17, [fp, #-24]	; 0xffffffe8
   10ec4:	ldr	r0, [fp, #-16]
   10ec8:	sub	r0, r0, #1
   10ecc:	vmov	s0, r0
   10ed0:	vcvt.f64.s32	d18, s0
   10ed4:	vldr	d19, [fp, #-32]	; 0xffffffe0
   10ed8:	vmul.f64	d18, d18, d19
   10edc:	ldr	r0, [fp, #-16]
   10ee0:	vmov	s0, r0
   10ee4:	vcvt.f64.s32	d19, s0
   10ee8:	vdiv.f64	d18, d18, d19
   10eec:	vsub.f64	d17, d17, d18
   10ef0:	ldr	r0, [fp, #-4]
   10ef4:	vstr	d17, [r0, #40]	; 0x28
   10ef8:	vstr	d16, [fp, #-32]	; 0xffffffe0
   10efc:	ldr	r0, [fp, #-4]
   10f00:	ldr	r0, [r0]
   10f04:	str	r0, [fp, #-44]	; 0xffffffd4
   10f08:	ldr	r0, [fp, #-44]	; 0xffffffd4
   10f0c:	movw	r1, #0
   10f10:	cmp	r0, r1
   10f14:	beq	10f60 <abort@plt+0x634>
   10f18:	ldr	r0, [fp, #-44]	; 0xffffffd4
   10f1c:	vldr	d16, [r0, #24]
   10f20:	ldr	r0, [fp, #-4]
   10f24:	vldr	d17, [r0, #40]	; 0x28
   10f28:	vsub.f64	d16, d16, d17
   10f2c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   10f30:	vldr	d17, [r0, #24]
   10f34:	ldr	r0, [fp, #-4]
   10f38:	vldr	d18, [r0, #40]	; 0x28
   10f3c:	vsub.f64	d17, d17, d18
   10f40:	vmul.f64	d16, d16, d17
   10f44:	vldr	d17, [fp, #-32]	; 0xffffffe0
   10f48:	vadd.f64	d16, d17, d16
   10f4c:	vstr	d16, [fp, #-32]	; 0xffffffe0
   10f50:	ldr	r0, [fp, #-44]	; 0xffffffd4
   10f54:	ldr	r0, [r0, #4]
   10f58:	str	r0, [fp, #-44]	; 0xffffffd4
   10f5c:	b	10f08 <abort@plt+0x5dc>
   10f60:	vldr	d16, [pc, #440]	; 11120 <abort@plt+0x7f4>
   10f64:	vldr	d17, [pc, #444]	; 11128 <abort@plt+0x7fc>
   10f68:	vldr	d18, [fp, #-32]	; 0xffffffe0
   10f6c:	ldr	r0, [fp, #-16]
   10f70:	sub	r0, r0, #1
   10f74:	vmov	s0, r0
   10f78:	vcvt.f64.s32	d19, s0
   10f7c:	vdiv.f64	d18, d18, d19
   10f80:	ldr	r0, [fp, #-16]
   10f84:	vmov	s0, r0
   10f88:	vcvt.f64.s32	d19, s0
   10f8c:	vdiv.f64	d0, d18, d19
   10f90:	vstr	d16, [sp, #56]	; 0x38
   10f94:	vstr	d17, [sp, #48]	; 0x30
   10f98:	bl	108cc <sqrt@plt>
   10f9c:	vldr	d16, [sp, #48]	; 0x30
   10fa0:	vmul.f64	d17, d16, d0
   10fa4:	vstr	d17, [fp, #-40]	; 0xffffffd8
   10fa8:	ldr	r0, [fp, #-4]
   10fac:	vldr	d17, [r0, #40]	; 0x28
   10fb0:	vldr	d18, [fp, #-40]	; 0xffffffd8
   10fb4:	vsub.f64	d17, d17, d18
   10fb8:	vldr	d18, [sp, #56]	; 0x38
   10fbc:	vcmpe.f64	d18, d17
   10fc0:	vmrs	APSR_nzcv, fpscr
   10fc4:	bpl	10fd4 <abort@plt+0x6a8>
   10fc8:	vldr	d16, [pc, #336]	; 11120 <abort@plt+0x7f4>
   10fcc:	vstr	d16, [sp, #40]	; 0x28
   10fd0:	b	10fe8 <abort@plt+0x6bc>
   10fd4:	ldr	r0, [fp, #-4]
   10fd8:	vldr	d16, [r0, #40]	; 0x28
   10fdc:	vldr	d17, [fp, #-40]	; 0xffffffd8
   10fe0:	vsub.f64	d16, d16, d17
   10fe4:	vstr	d16, [sp, #40]	; 0x28
   10fe8:	vldr	d16, [sp, #40]	; 0x28
   10fec:	vldr	d17, [pc, #292]	; 11118 <abort@plt+0x7ec>
   10ff0:	vcmpe.f64	d17, d16
   10ff4:	vmrs	APSR_nzcv, fpscr
   10ff8:	ble	11008 <abort@plt+0x6dc>
   10ffc:	vldr	d16, [pc, #276]	; 11118 <abort@plt+0x7ec>
   11000:	vstr	d16, [sp, #32]
   11004:	b	11050 <abort@plt+0x724>
   11008:	vldr	d16, [pc, #272]	; 11120 <abort@plt+0x7f4>
   1100c:	ldr	r0, [fp, #-4]
   11010:	vldr	d17, [r0, #40]	; 0x28
   11014:	vldr	d18, [fp, #-40]	; 0xffffffd8
   11018:	vsub.f64	d17, d17, d18
   1101c:	vcmpe.f64	d16, d17
   11020:	vmrs	APSR_nzcv, fpscr
   11024:	bpl	11034 <abort@plt+0x708>
   11028:	vldr	d16, [pc, #240]	; 11120 <abort@plt+0x7f4>
   1102c:	vstr	d16, [sp, #24]
   11030:	b	11048 <abort@plt+0x71c>
   11034:	ldr	r0, [fp, #-4]
   11038:	vldr	d16, [r0, #40]	; 0x28
   1103c:	vldr	d17, [fp, #-40]	; 0xffffffd8
   11040:	vsub.f64	d16, d16, d17
   11044:	vstr	d16, [sp, #24]
   11048:	vldr	d16, [sp, #24]
   1104c:	vstr	d16, [sp, #32]
   11050:	vldr	d16, [sp, #32]
   11054:	vldr	d17, [pc, #196]	; 11120 <abort@plt+0x7f4>
   11058:	ldr	r0, [fp, #-8]
   1105c:	vstr	d16, [r0]
   11060:	ldr	r0, [fp, #-4]
   11064:	vldr	d16, [r0, #40]	; 0x28
   11068:	vldr	d18, [fp, #-40]	; 0xffffffd8
   1106c:	vadd.f64	d16, d16, d18
   11070:	vcmpe.f64	d17, d16
   11074:	vmrs	APSR_nzcv, fpscr
   11078:	bpl	11088 <abort@plt+0x75c>
   1107c:	vldr	d16, [pc, #156]	; 11120 <abort@plt+0x7f4>
   11080:	vstr	d16, [sp, #16]
   11084:	b	1109c <abort@plt+0x770>
   11088:	ldr	r0, [fp, #-4]
   1108c:	vldr	d16, [r0, #40]	; 0x28
   11090:	vldr	d17, [fp, #-40]	; 0xffffffd8
   11094:	vadd.f64	d16, d16, d17
   11098:	vstr	d16, [sp, #16]
   1109c:	vldr	d16, [sp, #16]
   110a0:	vldr	d17, [pc, #112]	; 11118 <abort@plt+0x7ec>
   110a4:	vcmpe.f64	d17, d16
   110a8:	vmrs	APSR_nzcv, fpscr
   110ac:	ble	110bc <abort@plt+0x790>
   110b0:	vldr	d16, [pc, #96]	; 11118 <abort@plt+0x7ec>
   110b4:	vstr	d16, [sp, #8]
   110b8:	b	11104 <abort@plt+0x7d8>
   110bc:	vldr	d16, [pc, #92]	; 11120 <abort@plt+0x7f4>
   110c0:	ldr	r0, [fp, #-4]
   110c4:	vldr	d17, [r0, #40]	; 0x28
   110c8:	vldr	d18, [fp, #-40]	; 0xffffffd8
   110cc:	vadd.f64	d17, d17, d18
   110d0:	vcmpe.f64	d16, d17
   110d4:	vmrs	APSR_nzcv, fpscr
   110d8:	bpl	110e8 <abort@plt+0x7bc>
   110dc:	vldr	d16, [pc, #60]	; 11120 <abort@plt+0x7f4>
   110e0:	vstr	d16, [sp]
   110e4:	b	110fc <abort@plt+0x7d0>
   110e8:	ldr	r0, [fp, #-4]
   110ec:	vldr	d16, [r0, #40]	; 0x28
   110f0:	vldr	d17, [fp, #-40]	; 0xffffffd8
   110f4:	vadd.f64	d16, d16, d17
   110f8:	vstr	d16, [sp]
   110fc:	vldr	d16, [sp]
   11100:	vstr	d16, [sp, #8]
   11104:	vldr	d16, [sp, #8]
   11108:	ldr	r0, [fp, #-12]
   1110c:	vstr	d16, [r0]
   11110:	mov	sp, fp
   11114:	pop	{fp, pc}
	...
   11124:	subsmi	r0, r9, r0
   11128:			; <UNDEFINED> instruction: 0xf5c28f5c
   1112c:	svccc	0x00ff5c28
   11130:	andeq	r2, r0, r9, asr #20
   11134:	muleq	r1, ip, r2
   11138:	sub	sp, sp, #12
   1113c:	str	r0, [sp, #8]
   11140:	movw	r0, #0
   11144:	str	r0, [sp, #4]
   11148:	ldr	r0, [sp, #8]
   1114c:	ldr	r0, [r0]
   11150:	str	r0, [sp]
   11154:	ldr	r0, [sp]
   11158:	movw	r1, #0
   1115c:	cmp	r0, r1
   11160:	beq	11194 <abort@plt+0x868>
   11164:	ldr	r0, [sp]
   11168:	ldr	r0, [r0, #8]
   1116c:	cmp	r0, #0
   11170:	ble	11180 <abort@plt+0x854>
   11174:	ldr	r0, [sp, #4]
   11178:	add	r0, r0, #1
   1117c:	str	r0, [sp, #4]
   11180:	b	11184 <abort@plt+0x858>
   11184:	ldr	r0, [sp]
   11188:	ldr	r0, [r0, #4]
   1118c:	str	r0, [sp]
   11190:	b	11154 <abort@plt+0x828>
   11194:	ldr	r0, [sp, #4]
   11198:	cmp	r0, #1
   1119c:	movw	r0, #0
   111a0:	movgt	r0, #1
   111a4:	tst	r0, #1
   111a8:	movw	r0, #1
   111ac:	moveq	r0, #0
   111b0:	and	r0, r0, #255	; 0xff
   111b4:	add	sp, sp, #12
   111b8:	bx	lr
   111bc:	nop	{0}
   111c0:	sub	sp, sp, #8
   111c4:	vldr	d16, [pc, #52]	; 11200 <abort@plt+0x8d4>
   111c8:	str	r0, [sp, #4]
   111cc:	str	r1, [sp]
   111d0:	ldr	r0, [sp, #4]
   111d4:	ldr	r1, [sp]
   111d8:	sub	r0, r0, r1
   111dc:	vmov	s0, r0
   111e0:	vcvt.f64.s32	d17, s0
   111e4:	vmul.f64	d16, d16, d17
   111e8:	ldr	r0, [sp, #4]
   111ec:	vmov	s0, r0
   111f0:	vcvt.f64.s32	d17, s0
   111f4:	vdiv.f64	d0, d16, d17
   111f8:	add	sp, sp, #8
   111fc:	bx	lr
   11200:	andeq	r0, r0, r0
   11204:	subsmi	r0, r9, r0
   11208:	push	{fp, lr}
   1120c:	mov	fp, sp
   11210:	sub	sp, sp, #16
   11214:	str	r0, [fp, #-4]
   11218:	str	r1, [sp, #8]
   1121c:	ldr	r0, [fp, #-4]
   11220:	ldr	r1, [sp, #8]
   11224:	bl	10824 <calloc@plt>
   11228:	str	r0, [sp, #4]
   1122c:	ldr	r0, [sp, #4]
   11230:	movw	r1, #0
   11234:	cmp	r0, r1
   11238:	bne	11248 <abort@plt+0x91c>
   1123c:	ldr	r0, [pc, #16]	; 11254 <abort@plt+0x928>
   11240:	add	r0, pc, r0
   11244:	bl	118e8 <error@@Base>
   11248:	ldr	r0, [sp, #4]
   1124c:	mov	sp, fp
   11250:	pop	{fp, pc}
   11254:	andeq	r2, r0, r9, ror #11
   11258:	sub	sp, sp, #20
   1125c:	str	r0, [sp, #12]
   11260:	str	r1, [sp, #8]
   11264:	movw	r0, #0
   11268:	str	r0, [sp, #4]
   1126c:	ldr	r0, [sp, #12]
   11270:	ldr	r1, [sp, #4]
   11274:	add	r0, r0, r1
   11278:	ldrb	r0, [r0]
   1127c:	cmp	r0, #0
   11280:	movw	r0, #0
   11284:	str	r0, [sp]
   11288:	beq	112bc <abort@plt+0x990>
   1128c:	ldr	r0, [sp, #12]
   11290:	ldr	r1, [sp, #4]
   11294:	add	r0, r0, r1
   11298:	ldrb	r0, [r0]
   1129c:	ldr	r1, [sp, #8]
   112a0:	ldr	r2, [sp, #4]
   112a4:	add	r1, r1, r2
   112a8:	ldrb	r1, [r1]
   112ac:	cmp	r0, r1
   112b0:	movw	r0, #0
   112b4:	moveq	r0, #1
   112b8:	str	r0, [sp]
   112bc:	ldr	r0, [sp]
   112c0:	tst	r0, #1
   112c4:	beq	112dc <abort@plt+0x9b0>
   112c8:	b	112cc <abort@plt+0x9a0>
   112cc:	ldr	r0, [sp, #4]
   112d0:	add	r0, r0, #1
   112d4:	str	r0, [sp, #4]
   112d8:	b	1126c <abort@plt+0x940>
   112dc:	ldr	r0, [sp, #12]
   112e0:	ldr	r1, [sp, #4]
   112e4:	add	r0, r0, r1
   112e8:	ldrb	r0, [r0]
   112ec:	cmp	r0, #0
   112f0:	bne	1130c <abort@plt+0x9e0>
   112f4:	ldr	r0, [sp, #8]
   112f8:	ldr	r1, [sp, #4]
   112fc:	add	r0, r0, r1
   11300:	ldrb	r0, [r0]
   11304:	cmp	r0, #0
   11308:	beq	1134c <abort@plt+0xa20>
   1130c:	ldr	r0, [sp, #12]
   11310:	ldr	r1, [sp, #4]
   11314:	add	r0, r0, r1
   11318:	ldrb	r0, [r0]
   1131c:	ldr	r1, [sp, #8]
   11320:	ldr	r2, [sp, #4]
   11324:	add	r1, r1, r2
   11328:	ldrb	r1, [r1]
   1132c:	cmp	r0, r1
   11330:	movw	r0, #0
   11334:	movlt	r0, #1
   11338:	tst	r0, #1
   1133c:	mvn	r0, #0
   11340:	moveq	r0, #1
   11344:	str	r0, [sp, #16]
   11348:	b	11354 <abort@plt+0xa28>
   1134c:	movw	r0, #0
   11350:	str	r0, [sp, #16]
   11354:	ldr	r0, [sp, #16]
   11358:	add	sp, sp, #20
   1135c:	bx	lr
   11360:	push	{fp, lr}
   11364:	mov	fp, sp
   11368:	sub	sp, sp, #24
   1136c:	str	r0, [fp, #-8]
   11370:	str	r1, [sp, #12]
   11374:	ldr	r0, [fp, #-8]
   11378:	movw	r1, #0
   1137c:	cmp	r0, r1
   11380:	bne	113c4 <abort@plt+0xa98>
   11384:	ldr	r0, [sp, #12]
   11388:	ldrb	r0, [r0]
   1138c:	cmp	r0, #114	; 0x72
   11390:	bne	113a8 <abort@plt+0xa7c>
   11394:	ldr	r0, [pc, #148]	; 11430 <abort@plt+0xb04>
   11398:	ldr	r0, [pc, r0]
   1139c:	ldr	r0, [r0]
   113a0:	str	r0, [sp, #4]
   113a4:	b	113b8 <abort@plt+0xa8c>
   113a8:	ldr	r0, [pc, #124]	; 1142c <abort@plt+0xb00>
   113ac:	ldr	r0, [pc, r0]
   113b0:	ldr	r0, [r0]
   113b4:	str	r0, [sp, #4]
   113b8:	ldr	r0, [sp, #4]
   113bc:	str	r0, [fp, #-4]
   113c0:	b	11420 <abort@plt+0xaf4>
   113c4:	ldr	r0, [fp, #-8]
   113c8:	ldr	r1, [sp, #12]
   113cc:	bl	10848 <fopen@plt>
   113d0:	str	r0, [sp, #8]
   113d4:	ldr	r0, [sp, #8]
   113d8:	movw	r1, #0
   113dc:	cmp	r0, r1
   113e0:	beq	113f0 <abort@plt+0xac4>
   113e4:	ldr	r0, [sp, #8]
   113e8:	str	r0, [fp, #-4]
   113ec:	b	11420 <abort@plt+0xaf4>
   113f0:	ldr	r0, [sp, #12]
   113f4:	ldrb	r0, [r0]
   113f8:	cmp	r0, #119	; 0x77
   113fc:	bne	11410 <abort@plt+0xae4>
   11400:	ldr	r0, [pc, #48]	; 11438 <abort@plt+0xb0c>
   11404:	add	r0, pc, r0
   11408:	ldr	r1, [fp, #-8]
   1140c:	bl	11948 <error@@Base+0x60>
   11410:	ldr	r0, [pc, #28]	; 11434 <abort@plt+0xb08>
   11414:	add	r0, pc, r0
   11418:	ldr	r1, [fp, #-8]
   1141c:	bl	11948 <error@@Base+0x60>
   11420:	ldr	r0, [fp, #-4]
   11424:	mov	sp, fp
   11428:	pop	{fp, pc}
   1142c:	andeq	r2, r1, r8, lsl sp
   11430:	andeq	r2, r1, r0, lsr #26
   11434:	andeq	r2, r0, r5, asr #8
   11438:	andeq	r2, r0, pc, lsr r4
   1143c:	push	{fp, lr}
   11440:	mov	fp, sp
   11444:	sub	sp, sp, #8
   11448:	ldr	r1, [pc, #64]	; 11490 <abort@plt+0xb64>
   1144c:	ldr	r1, [pc, r1]
   11450:	str	r0, [sp, #4]
   11454:	ldr	r0, [sp, #4]
   11458:	ldr	r1, [r1]
   1145c:	cmp	r0, r1
   11460:	beq	11488 <abort@plt+0xb5c>
   11464:	ldr	r0, [pc, #40]	; 11494 <abort@plt+0xb68>
   11468:	ldr	r0, [pc, r0]
   1146c:	ldr	r1, [sp, #4]
   11470:	ldr	r0, [r0]
   11474:	cmp	r1, r0
   11478:	beq	11488 <abort@plt+0xb5c>
   1147c:	ldr	r0, [sp, #4]
   11480:	bl	108e4 <fclose@plt>
   11484:	str	r0, [sp]
   11488:	mov	sp, fp
   1148c:	pop	{fp, pc}
   11490:	andeq	r2, r1, ip, ror #24
   11494:	andeq	r2, r1, ip, asr ip
   11498:	push	{fp, lr}
   1149c:	mov	fp, sp
   114a0:	sub	sp, sp, #96	; 0x60
   114a4:	str	r0, [fp, #-4]
   114a8:	ldr	r0, [fp, #-4]
   114ac:	mov	r1, sp
   114b0:	bl	13720 <error@@Base+0x1e38>
   114b4:	cmp	r0, #0
   114b8:	movw	r0, #0
   114bc:	moveq	r0, #1
   114c0:	tst	r0, #1
   114c4:	movw	r0, #1
   114c8:	moveq	r0, #0
   114cc:	and	r0, r0, #255	; 0xff
   114d0:	mov	sp, fp
   114d4:	pop	{fp, pc}
   114d8:	push	{fp, lr}
   114dc:	mov	fp, sp
   114e0:	sub	sp, sp, #8
   114e4:	ldr	r0, [pc, #68]	; 11530 <abort@plt+0xc04>
   114e8:	add	r0, pc, r0
   114ec:	ldrh	r1, [r0]
   114f0:	movw	r2, #1
   114f4:	add	r1, r1, r2
   114f8:	strh	r1, [r0]
   114fc:	sxth	r0, r1
   11500:	bl	11534 <abort@plt+0xc08>
   11504:	ldr	r1, [pc, #32]	; 1152c <abort@plt+0xc00>
   11508:	ldr	r1, [pc, r1]
   1150c:	str	r0, [sp, #4]
   11510:	ldr	r0, [sp, #4]
   11514:	blx	r1
   11518:	ldr	r1, [sp, #4]
   1151c:	str	r0, [sp]
   11520:	mov	r0, r1
   11524:	mov	sp, fp
   11528:	pop	{fp, pc}
   1152c:	andeq	r2, r1, r4, ror fp
   11530:	andeq	r2, r1, r2, lsl ip
   11534:	push	{fp, lr}
   11538:	mov	fp, sp
   1153c:	sub	sp, sp, #128	; 0x80
   11540:	ldr	r1, [pc, #112]	; 115b8 <abort@plt+0xc8c>
   11544:	ldr	r1, [pc, r1]
   11548:	ldr	r2, [pc, #108]	; 115bc <abort@plt+0xc90>
   1154c:	ldr	r2, [pc, r2]
   11550:	add	r3, sp, #26
   11554:	strh	r0, [fp, #-2]
   11558:	ldr	r2, [r2]
   1155c:	str	r3, [sp, #20]
   11560:	str	r2, [sp, #16]
   11564:	blx	r1
   11568:	ldr	r1, [pc, #68]	; 115b4 <abort@plt+0xc88>
   1156c:	add	r1, pc, r1
   11570:	ldrsh	r2, [fp, #-2]
   11574:	ldr	r3, [sp, #20]
   11578:	str	r0, [sp, #12]
   1157c:	mov	r0, r3
   11580:	ldr	lr, [sp, #16]
   11584:	str	r2, [sp, #8]
   11588:	mov	r2, lr
   1158c:	ldr	r3, [sp, #12]
   11590:	ldr	ip, [sp, #8]
   11594:	str	ip, [sp]
   11598:	bl	108fc <sprintf@plt>
   1159c:	add	r1, sp, #26
   115a0:	str	r0, [sp, #4]
   115a4:	mov	r0, r1
   115a8:	bl	1086c <strdup@plt>
   115ac:	mov	sp, fp
   115b0:	pop	{fp, pc}
   115b4:	andeq	r2, r0, r6, lsl r3
   115b8:	andeq	r2, r1, ip, ror #22
   115bc:	andeq	r2, r1, r8, asr fp
   115c0:	push	{fp, lr}
   115c4:	mov	fp, sp
   115c8:	sub	sp, sp, #16
   115cc:	str	r0, [fp, #-4]
   115d0:	movw	r0, #47	; 0x2f
   115d4:	strb	r0, [fp, #-5]
   115d8:	ldr	r0, [fp, #-4]
   115dc:	bl	108b4 <strlen@plt>
   115e0:	sub	r0, r0, #1
   115e4:	strh	r0, [sp, #8]
   115e8:	ldrsh	r0, [sp, #8]
   115ec:	cmp	r0, #0
   115f0:	movw	r0, #0
   115f4:	str	r0, [sp, #4]
   115f8:	blt	11620 <abort@plt+0xcf4>
   115fc:	ldr	r0, [fp, #-4]
   11600:	ldrsh	r1, [sp, #8]
   11604:	add	r0, r0, r1
   11608:	ldrb	r0, [r0]
   1160c:	ldrb	r1, [fp, #-5]
   11610:	cmp	r0, r1
   11614:	movw	r0, #0
   11618:	movne	r0, #1
   1161c:	str	r0, [sp, #4]
   11620:	ldr	r0, [sp, #4]
   11624:	tst	r0, #1
   11628:	beq	11644 <abort@plt+0xd18>
   1162c:	b	11630 <abort@plt+0xd04>
   11630:	ldrh	r0, [sp, #8]
   11634:	movw	r1, #65535	; 0xffff
   11638:	add	r0, r0, r1
   1163c:	strh	r0, [sp, #8]
   11640:	b	115e8 <abort@plt+0xcbc>
   11644:	ldr	r0, [fp, #-4]
   11648:	ldrsh	r1, [sp, #8]
   1164c:	add	r1, r1, #1
   11650:	add	r0, r0, r1
   11654:	mov	sp, fp
   11658:	pop	{fp, pc}
   1165c:	push	{fp, lr}
   11660:	mov	fp, sp
   11664:	sub	sp, sp, #16
   11668:	str	r0, [fp, #-4]
   1166c:	str	r1, [sp, #8]
   11670:	str	r2, [sp, #4]
   11674:	str	r3, [sp]
   11678:	ldr	r0, [sp, #8]
   1167c:	ldr	r0, [r0]
   11680:	bl	115c0 <abort@plt+0xc94>
   11684:	ldr	r1, [pc, #36]	; 116b0 <abort@plt+0xd84>
   11688:	ldr	r1, [pc, r1]
   1168c:	str	r0, [r1]
   11690:	bl	11a28 <error@@Base+0x140>
   11694:	ldr	r0, [fp, #-4]
   11698:	ldr	r1, [sp, #8]
   1169c:	ldr	r2, [sp, #4]
   116a0:	ldr	r3, [sp]
   116a4:	bl	116b4 <abort@plt+0xd88>
   116a8:	mov	sp, fp
   116ac:	pop	{fp, pc}
   116b0:	andeq	r2, r1, ip, lsl sl
   116b4:	push	{fp, lr}
   116b8:	mov	fp, sp
   116bc:	sub	sp, sp, #48	; 0x30
   116c0:	str	r0, [fp, #-4]
   116c4:	str	r1, [fp, #-8]
   116c8:	str	r2, [fp, #-12]
   116cc:	str	r3, [fp, #-16]
   116d0:	movw	r0, #0
   116d4:	strh	r0, [fp, #-20]	; 0xffffffec
   116d8:	ldr	r0, [fp, #-4]
   116dc:	ldr	r0, [r0]
   116e0:	cmp	r0, #1
   116e4:	bne	11704 <abort@plt+0xdd8>
   116e8:	ldr	r0, [pc, #404]	; 11884 <abort@plt+0xf58>
   116ec:	ldr	r0, [pc, r0]
   116f0:	ldrb	r0, [r0]
   116f4:	cmp	r0, #0
   116f8:	beq	11704 <abort@plt+0xdd8>
   116fc:	ldr	r0, [fp, #-12]
   11700:	bl	11ac4 <error@@Base+0x1dc>
   11704:	movw	r0, #1
   11708:	strh	r0, [fp, #-18]	; 0xffffffee
   1170c:	ldrsh	r0, [fp, #-18]	; 0xffffffee
   11710:	ldr	r1, [fp, #-4]
   11714:	ldr	r1, [r1]
   11718:	cmp	r0, r1
   1171c:	bge	11870 <abort@plt+0xf44>
   11720:	ldr	r0, [fp, #-8]
   11724:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   11728:	add	r0, r0, r1, lsl #2
   1172c:	ldr	r0, [r0]
   11730:	ldrb	r0, [r0]
   11734:	cmp	r0, #45	; 0x2d
   11738:	bne	11838 <abort@plt+0xf0c>
   1173c:	ldr	r0, [fp, #-8]
   11740:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   11744:	add	r0, r0, r1, lsl #2
   11748:	ldr	r0, [r0]
   1174c:	ldrb	r0, [r0, #1]
   11750:	cmp	r0, #0
   11754:	beq	11838 <abort@plt+0xf0c>
   11758:	ldr	r0, [pc, #296]	; 11888 <abort@plt+0xf5c>
   1175c:	add	r0, pc, r0
   11760:	ldr	r1, [fp, #-8]
   11764:	ldrsh	r2, [fp, #-18]	; 0xffffffee
   11768:	ldr	r2, [r1, r2, lsl #2]!
   1176c:	ldr	r1, [r1]
   11770:	str	r0, [sp, #24]
   11774:	mov	r0, r1
   11778:	str	r2, [sp, #20]
   1177c:	bl	108b4 <strlen@plt>
   11780:	ldr	r1, [sp, #24]
   11784:	str	r0, [sp, #16]
   11788:	mov	r0, r1
   1178c:	ldr	r1, [sp, #20]
   11790:	ldr	r2, [sp, #16]
   11794:	bl	10920 <strncmp@plt>
   11798:	cmp	r0, #0
   1179c:	bne	117a8 <abort@plt+0xe7c>
   117a0:	ldr	r0, [fp, #-12]
   117a4:	bl	11ac4 <error@@Base+0x1dc>
   117a8:	ldr	r0, [fp, #-8]
   117ac:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   117b0:	add	r0, r0, r1, lsl #2
   117b4:	ldr	r0, [r0]
   117b8:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   117bc:	add	r1, r1, #1
   117c0:	ldr	r2, [fp, #-4]
   117c4:	ldr	r2, [r2]
   117c8:	cmp	r1, r2
   117cc:	str	r0, [sp, #12]
   117d0:	bge	117f0 <abort@plt+0xec4>
   117d4:	ldr	r0, [fp, #-8]
   117d8:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   117dc:	add	r1, r1, #1
   117e0:	add	r0, r0, r1, lsl #2
   117e4:	ldr	r0, [r0]
   117e8:	str	r0, [sp, #8]
   117ec:	b	117fc <abort@plt+0xed0>
   117f0:	movw	r0, #0
   117f4:	str	r0, [sp, #8]
   117f8:	b	117fc <abort@plt+0xed0>
   117fc:	ldr	r0, [sp, #8]
   11800:	ldr	r2, [fp, #-16]
   11804:	ldr	r1, [sp, #12]
   11808:	str	r0, [sp, #4]
   1180c:	mov	r0, r1
   11810:	ldr	r1, [sp, #4]
   11814:	bl	11b50 <error@@Base+0x268>
   11818:	sxtb	r0, r0
   1181c:	cmp	r0, #0
   11820:	beq	11834 <abort@plt+0xf08>
   11824:	ldrh	r0, [fp, #-18]	; 0xffffffee
   11828:	movw	r1, #1
   1182c:	add	r0, r0, r1
   11830:	strh	r0, [fp, #-18]	; 0xffffffee
   11834:	b	11858 <abort@plt+0xf2c>
   11838:	ldr	r0, [fp, #-8]
   1183c:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   11840:	ldr	r1, [r0, r1, lsl #2]
   11844:	ldrsh	r2, [fp, #-20]	; 0xffffffec
   11848:	add	r3, r2, #1
   1184c:	strh	r3, [fp, #-20]	; 0xffffffec
   11850:	add	r0, r0, r2, lsl #2
   11854:	str	r1, [r0]
   11858:	b	1185c <abort@plt+0xf30>
   1185c:	ldrh	r0, [fp, #-18]	; 0xffffffee
   11860:	movw	r1, #1
   11864:	add	r0, r0, r1
   11868:	strh	r0, [fp, #-18]	; 0xffffffee
   1186c:	b	1170c <abort@plt+0xde0>
   11870:	ldrsh	r0, [fp, #-20]	; 0xffffffec
   11874:	ldr	r1, [fp, #-4]
   11878:	str	r0, [r1]
   1187c:	mov	sp, fp
   11880:	pop	{fp, pc}
   11884:	andeq	r2, r1, r8, ror r9
   11888:	andeq	r2, r0, r3, asr #2
   1188c:	push	{fp, lr}
   11890:	mov	fp, sp
   11894:	movw	r0, #0
   11898:	bl	1189c <abort@plt+0xf70>
   1189c:	push	{fp, lr}
   118a0:	mov	fp, sp
   118a4:	sub	sp, sp, #8
   118a8:	ldr	r1, [pc, #48]	; 118e0 <abort@plt+0xfb4>
   118ac:	ldr	r1, [pc, r1]
   118b0:	str	r0, [sp, #4]
   118b4:	ldr	r0, [r1]
   118b8:	movw	r1, #0
   118bc:	cmp	r0, r1
   118c0:	beq	118d4 <abort@plt+0xfa8>
   118c4:	ldr	r0, [pc, #24]	; 118e4 <abort@plt+0xfb8>
   118c8:	ldr	r0, [pc, r0]
   118cc:	ldr	r0, [r0]
   118d0:	blx	r0
   118d4:	bl	11dc4 <error@@Base+0x4dc>
   118d8:	ldr	r0, [sp, #4]
   118dc:	bl	108a8 <exit@plt>
   118e0:	andeq	r2, r1, r8, lsl #16
   118e4:	andeq	r2, r1, ip, ror #15

000118e8 <error@@Base>:
   118e8:	push	{fp, lr}
   118ec:	mov	fp, sp
   118f0:	sub	sp, sp, #8
   118f4:	ldr	r1, [pc, #64]	; 1193c <error@@Base+0x54>
   118f8:	add	r1, pc, r1
   118fc:	ldr	r2, [pc, #60]	; 11940 <error@@Base+0x58>
   11900:	ldr	r2, [pc, r2]
   11904:	ldr	r3, [pc, #56]	; 11944 <error@@Base+0x5c>
   11908:	ldr	r3, [pc, r3]
   1190c:	str	r0, [sp, #4]
   11910:	ldr	r0, [r3]
   11914:	ldr	r2, [r2]
   11918:	ldr	r3, [sp, #4]
   1191c:	bl	108c0 <fprintf@plt>
   11920:	ldr	r1, [pc, #16]	; 11938 <error@@Base+0x50>
   11924:	ldr	r1, [pc, r1]
   11928:	ldr	r1, [r1]
   1192c:	str	r0, [sp]
   11930:	mov	r0, r1
   11934:	bl	1189c <abort@plt+0xf70>
   11938:	andeq	r2, r1, ip, lsr #15
   1193c:	andeq	r1, r0, r5, ror pc
   11940:	andeq	r2, r1, r4, lsr #15
   11944:	andeq	r2, r1, r4, lsl #15
   11948:	push	{fp, lr}
   1194c:	mov	fp, sp
   11950:	sub	sp, sp, #24
   11954:	ldr	r2, [pc, #88]	; 119b4 <error@@Base+0xcc>
   11958:	add	r2, pc, r2
   1195c:	ldr	r3, [pc, #84]	; 119b8 <error@@Base+0xd0>
   11960:	ldr	r3, [pc, r3]
   11964:	ldr	ip, [pc, #80]	; 119bc <error@@Base+0xd4>
   11968:	ldr	ip, [pc, ip]
   1196c:	str	r0, [fp, #-4]
   11970:	str	r1, [fp, #-8]
   11974:	ldr	r0, [ip]
   11978:	ldr	r1, [r3]
   1197c:	ldr	r3, [fp, #-4]
   11980:	ldr	ip, [fp, #-8]
   11984:	str	r1, [sp, #12]
   11988:	mov	r1, r2
   1198c:	ldr	r2, [sp, #12]
   11990:	str	ip, [sp]
   11994:	bl	108c0 <fprintf@plt>
   11998:	ldr	r1, [pc, #16]	; 119b0 <error@@Base+0xc8>
   1199c:	ldr	r1, [pc, r1]
   119a0:	ldr	r1, [r1]
   119a4:	str	r0, [sp, #8]
   119a8:	mov	r0, r1
   119ac:	bl	1189c <abort@plt+0xf70>
   119b0:	andeq	r2, r1, r4, lsr r7
   119b4:	andeq	r1, r0, sp, lsl pc
   119b8:	andeq	r2, r1, r4, asr #14
   119bc:	andeq	r2, r1, r4, lsr #14
   119c0:	push	{fp, lr}
   119c4:	mov	fp, sp
   119c8:	sub	sp, sp, #24
   119cc:	ldr	r2, [pc, #72]	; 11a1c <error@@Base+0x134>
   119d0:	add	r2, pc, r2
   119d4:	ldr	r3, [pc, #68]	; 11a20 <error@@Base+0x138>
   119d8:	ldr	r3, [pc, r3]
   119dc:	ldr	ip, [pc, #64]	; 11a24 <error@@Base+0x13c>
   119e0:	ldr	ip, [pc, ip]
   119e4:	str	r0, [fp, #-4]
   119e8:	str	r1, [fp, #-8]
   119ec:	ldr	r0, [ip]
   119f0:	ldr	r1, [r3]
   119f4:	ldr	r3, [fp, #-4]
   119f8:	ldr	ip, [fp, #-8]
   119fc:	str	r1, [sp, #12]
   11a00:	mov	r1, r2
   11a04:	ldr	r2, [sp, #12]
   11a08:	str	ip, [sp]
   11a0c:	bl	108c0 <fprintf@plt>
   11a10:	str	r0, [sp, #8]
   11a14:	mov	sp, fp
   11a18:	pop	{fp, pc}
   11a1c:	andeq	r1, r0, r5, lsr #29
   11a20:	andeq	r2, r1, ip, asr #13
   11a24:	andeq	r2, r1, ip, lsr #13
   11a28:	push	{fp, lr}
   11a2c:	mov	fp, sp
   11a30:	sub	sp, sp, #8
   11a34:	ldr	r0, [pc, #48]	; 11a6c <error@@Base+0x184>
   11a38:	add	r1, pc, r0
   11a3c:	movw	r0, #2
   11a40:	bl	10890 <__sysv_signal@plt>
   11a44:	ldr	r1, [pc, #28]	; 11a68 <error@@Base+0x180>
   11a48:	add	r1, pc, r1
   11a4c:	movw	lr, #15
   11a50:	str	r0, [sp, #4]
   11a54:	mov	r0, lr
   11a58:	bl	10890 <__sysv_signal@plt>
   11a5c:	str	r0, [sp]
   11a60:	mov	sp, fp
   11a64:	pop	{fp, pc}
   11a68:	andeq	r0, r0, r0, lsr #32
   11a6c:	andeq	r0, r0, r0, lsr r0
   11a70:	push	{fp, lr}
   11a74:	mov	fp, sp
   11a78:	sub	sp, sp, #8
   11a7c:	ldr	r1, [pc, #52]	; 11ab8 <error@@Base+0x1d0>
   11a80:	add	r1, pc, r1
   11a84:	str	r0, [sp, #4]
   11a88:	ldrsb	r0, [r1]
   11a8c:	cmp	r0, #0
   11a90:	beq	11a9c <error@@Base+0x1b4>
   11a94:	mov	sp, fp
   11a98:	pop	{fp, pc}
   11a9c:	ldr	r0, [pc, #24]	; 11abc <error@@Base+0x1d4>
   11aa0:	add	r0, pc, r0
   11aa4:	ldr	r1, [pc, #20]	; 11ac0 <error@@Base+0x1d8>
   11aa8:	add	r1, pc, r1
   11aac:	movw	r2, #1
   11ab0:	strb	r2, [r1]
   11ab4:	bl	118e8 <error@@Base>
   11ab8:	andeq	r2, r1, ip, ror r6
   11abc:	strdeq	r1, [r0], -r0
   11ac0:	andeq	r2, r1, r4, asr r6
   11ac4:	push	{fp, lr}
   11ac8:	mov	fp, sp
   11acc:	sub	sp, sp, #16
   11ad0:	ldr	r1, [pc, #100]	; 11b3c <error@@Base+0x254>
   11ad4:	ldr	r1, [pc, r1]
   11ad8:	str	r0, [fp, #-4]
   11adc:	ldr	r0, [r1]
   11ae0:	movw	r1, #0
   11ae4:	cmp	r0, r1
   11ae8:	beq	11b00 <error@@Base+0x218>
   11aec:	ldr	r0, [pc, #88]	; 11b4c <error@@Base+0x264>
   11af0:	ldr	r0, [pc, r0]
   11af4:	ldr	r0, [r0]
   11af8:	blx	r0
   11afc:	b	11b38 <error@@Base+0x250>
   11b00:	ldr	r0, [pc, #56]	; 11b40 <error@@Base+0x258>
   11b04:	add	r1, pc, r0
   11b08:	ldr	r0, [pc, #52]	; 11b44 <error@@Base+0x25c>
   11b0c:	ldr	r0, [pc, r0]
   11b10:	ldr	r2, [pc, #48]	; 11b48 <error@@Base+0x260>
   11b14:	ldr	r2, [pc, r2]
   11b18:	ldr	r2, [r2]
   11b1c:	ldr	r0, [r0]
   11b20:	ldr	r3, [fp, #-4]
   11b24:	str	r0, [sp, #8]
   11b28:	mov	r0, r2
   11b2c:	ldr	r2, [sp, #8]
   11b30:	bl	108c0 <fprintf@plt>
   11b34:	str	r0, [sp, #4]
   11b38:	bl	1188c <abort@plt+0xf60>
   11b3c:	andeq	r2, r1, r0, lsr #11
   11b40:	andeq	r1, r0, r1, lsr #27
   11b44:	muleq	r1, r8, r5
   11b48:	andeq	r2, r1, r8, ror r5
   11b4c:	andeq	r2, r1, r4, lsl #11
   11b50:	push	{fp, lr}
   11b54:	mov	fp, sp
   11b58:	sub	sp, sp, #32
   11b5c:	str	r0, [fp, #-8]
   11b60:	str	r1, [fp, #-12]
   11b64:	str	r2, [sp, #16]
   11b68:	ldr	r0, [sp, #16]
   11b6c:	movw	r1, #0
   11b70:	cmp	r0, r1
   11b74:	bne	11b7c <error@@Base+0x294>
   11b78:	b	11d90 <error@@Base+0x4a8>
   11b7c:	movw	r0, #0
   11b80:	strh	r0, [sp, #14]
   11b84:	ldr	r0, [sp, #16]
   11b88:	ldrsh	r1, [sp, #14]
   11b8c:	movw	r2, #12
   11b90:	mul	r1, r1, r2
   11b94:	add	r0, r0, r1
   11b98:	ldrb	r0, [r0]
   11b9c:	cmp	r0, #0
   11ba0:	movw	r0, #0
   11ba4:	str	r0, [sp, #8]
   11ba8:	beq	11bdc <error@@Base+0x2f4>
   11bac:	ldr	r0, [fp, #-8]
   11bb0:	ldrb	r0, [r0, #1]
   11bb4:	ldr	r1, [sp, #16]
   11bb8:	ldrsh	r2, [sp, #14]
   11bbc:	movw	r3, #12
   11bc0:	mul	r2, r2, r3
   11bc4:	add	r1, r1, r2
   11bc8:	ldrb	r1, [r1]
   11bcc:	cmp	r0, r1
   11bd0:	movw	r0, #0
   11bd4:	movne	r0, #1
   11bd8:	str	r0, [sp, #8]
   11bdc:	ldr	r0, [sp, #8]
   11be0:	tst	r0, #1
   11be4:	beq	11c00 <error@@Base+0x318>
   11be8:	b	11bec <error@@Base+0x304>
   11bec:	ldrh	r0, [sp, #14]
   11bf0:	movw	r1, #1
   11bf4:	add	r0, r0, r1
   11bf8:	strh	r0, [sp, #14]
   11bfc:	b	11b84 <error@@Base+0x29c>
   11c00:	ldr	r0, [sp, #16]
   11c04:	ldrsh	r1, [sp, #14]
   11c08:	movw	r2, #12
   11c0c:	mul	r1, r1, r2
   11c10:	add	r0, r0, r1
   11c14:	ldrsb	r0, [r0]
   11c18:	cmp	r0, #0
   11c1c:	bne	11c24 <error@@Base+0x33c>
   11c20:	b	11d90 <error@@Base+0x4a8>
   11c24:	ldr	r0, [sp, #16]
   11c28:	ldrsh	r1, [sp, #14]
   11c2c:	movw	r2, #12
   11c30:	mul	r1, r1, r2
   11c34:	add	r0, r0, r1
   11c38:	ldr	r0, [r0, #4]
   11c3c:	movw	r1, #0
   11c40:	cmp	r0, r1
   11c44:	beq	11d04 <error@@Base+0x41c>
   11c48:	ldr	r0, [fp, #-8]
   11c4c:	ldrb	r0, [r0, #2]
   11c50:	cmp	r0, #0
   11c54:	bne	11c68 <error@@Base+0x380>
   11c58:	ldr	r0, [fp, #-12]
   11c5c:	movw	r1, #0
   11c60:	cmp	r0, r1
   11c64:	beq	11d04 <error@@Base+0x41c>
   11c68:	ldr	r0, [sp, #16]
   11c6c:	ldrsh	r1, [sp, #14]
   11c70:	movw	r2, #12
   11c74:	mul	r1, r1, r2
   11c78:	add	r0, r0, r1
   11c7c:	ldr	r0, [r0, #4]
   11c80:	ldr	r0, [r0]
   11c84:	movw	r1, #0
   11c88:	cmp	r0, r1
   11c8c:	beq	11c94 <error@@Base+0x3ac>
   11c90:	b	11da0 <error@@Base+0x4b8>
   11c94:	ldr	r0, [fp, #-8]
   11c98:	ldrb	r0, [r0, #2]
   11c9c:	cmp	r0, #0
   11ca0:	beq	11cb4 <error@@Base+0x3cc>
   11ca4:	ldr	r0, [fp, #-8]
   11ca8:	add	r0, r0, #2
   11cac:	str	r0, [sp, #4]
   11cb0:	b	11cbc <error@@Base+0x3d4>
   11cb4:	ldr	r0, [fp, #-12]
   11cb8:	str	r0, [sp, #4]
   11cbc:	ldr	r0, [sp, #4]
   11cc0:	ldr	r1, [sp, #16]
   11cc4:	ldrsh	r2, [sp, #14]
   11cc8:	movw	r3, #12
   11ccc:	mul	r2, r2, r3
   11cd0:	add	r1, r1, r2
   11cd4:	ldr	r1, [r1, #4]
   11cd8:	str	r0, [r1]
   11cdc:	ldr	r0, [fp, #-8]
   11ce0:	ldrb	r0, [r0, #2]
   11ce4:	cmp	r0, #0
   11ce8:	movw	r0, #0
   11cec:	movne	r0, #1
   11cf0:	tst	r0, #1
   11cf4:	movw	r0, #0
   11cf8:	moveq	r0, #1
   11cfc:	strb	r0, [fp, #-1]
   11d00:	b	11db0 <error@@Base+0x4c8>
   11d04:	ldr	r0, [sp, #16]
   11d08:	ldrsh	r1, [sp, #14]
   11d0c:	movw	r2, #12
   11d10:	mul	r1, r1, r2
   11d14:	add	r0, r0, r1
   11d18:	ldr	r0, [r0, #8]
   11d1c:	movw	r1, #0
   11d20:	cmp	r0, r1
   11d24:	beq	11d8c <error@@Base+0x4a4>
   11d28:	ldr	r0, [fp, #-8]
   11d2c:	ldrsb	r0, [r0, #2]
   11d30:	cmp	r0, #0
   11d34:	bne	11d8c <error@@Base+0x4a4>
   11d38:	ldr	r0, [sp, #16]
   11d3c:	ldrsh	r1, [sp, #14]
   11d40:	movw	r2, #12
   11d44:	mul	r1, r1, r2
   11d48:	add	r0, r0, r1
   11d4c:	ldr	r0, [r0, #8]
   11d50:	ldrsb	r0, [r0]
   11d54:	cmp	r0, #0
   11d58:	beq	11d60 <error@@Base+0x478>
   11d5c:	b	11da0 <error@@Base+0x4b8>
   11d60:	ldr	r0, [sp, #16]
   11d64:	ldrsh	r1, [sp, #14]
   11d68:	movw	r2, #12
   11d6c:	mul	r1, r1, r2
   11d70:	add	r0, r0, r1
   11d74:	ldr	r0, [r0, #8]
   11d78:	movw	r1, #1
   11d7c:	strb	r1, [r0]
   11d80:	movw	r0, #0
   11d84:	strb	r0, [fp, #-1]
   11d88:	b	11db0 <error@@Base+0x4c8>
   11d8c:	b	11d90 <error@@Base+0x4a8>
   11d90:	ldr	r0, [pc, #36]	; 11dbc <error@@Base+0x4d4>
   11d94:	add	r0, pc, r0
   11d98:	ldr	r1, [fp, #-8]
   11d9c:	bl	11948 <error@@Base+0x60>
   11da0:	ldr	r0, [pc, #24]	; 11dc0 <error@@Base+0x4d8>
   11da4:	add	r0, pc, r0
   11da8:	ldr	r1, [fp, #-8]
   11dac:	bl	11948 <error@@Base+0x60>
   11db0:	ldrb	r0, [fp, #-1]
   11db4:	mov	sp, fp
   11db8:	pop	{fp, pc}
   11dbc:	andeq	r1, r0, r0, lsr #22
   11dc0:	andeq	r1, r0, pc, lsl fp
   11dc4:	push	{fp, lr}
   11dc8:	mov	fp, sp
   11dcc:	sub	sp, sp, #16
   11dd0:	movw	r0, #1
   11dd4:	strh	r0, [fp, #-2]
   11dd8:	ldr	r0, [pc, #88]	; 11e38 <error@@Base+0x550>
   11ddc:	add	r0, pc, r0
   11de0:	ldrsh	r1, [fp, #-2]
   11de4:	ldrsh	r0, [r0]
   11de8:	cmp	r1, r0
   11dec:	bgt	11e30 <error@@Base+0x548>
   11df0:	ldrsh	r0, [fp, #-2]
   11df4:	bl	11534 <abort@plt+0xc08>
   11df8:	ldr	lr, [pc, #60]	; 11e3c <error@@Base+0x554>
   11dfc:	ldr	lr, [pc, lr]
   11e00:	str	r0, [sp, #8]
   11e04:	ldr	r0, [sp, #8]
   11e08:	blx	lr
   11e0c:	ldr	lr, [sp, #8]
   11e10:	str	r0, [sp, #4]
   11e14:	mov	r0, lr
   11e18:	bl	10854 <free@plt>
   11e1c:	ldrh	r0, [fp, #-2]
   11e20:	movw	r1, #1
   11e24:	add	r0, r0, r1
   11e28:	strh	r0, [fp, #-2]
   11e2c:	b	11dd8 <error@@Base+0x4f0>
   11e30:	mov	sp, fp
   11e34:	pop	{fp, pc}
   11e38:	andeq	r2, r1, lr, lsl r3
   11e3c:	andeq	r2, r1, r0, lsl #5
   11e40:	sub	sp, sp, #12
   11e44:	str	r0, [sp, #8]
   11e48:	str	r1, [sp, #4]
   11e4c:	str	r2, [sp]
   11e50:	ldr	r0, [sp, #4]
   11e54:	ldr	r1, [sp, #8]
   11e58:	ldr	r2, [r1]
   11e5c:	add	r0, r2, r0
   11e60:	str	r0, [r1]
   11e64:	ldr	r0, [sp]
   11e68:	ldr	r1, [sp, #8]
   11e6c:	ldr	r2, [r1, #4]
   11e70:	add	r0, r2, r0
   11e74:	str	r0, [r1, #4]
   11e78:	add	sp, sp, #12
   11e7c:	bx	lr
   11e80:	push	{fp, lr}
   11e84:	mov	fp, sp
   11e88:	sub	sp, sp, #32
   11e8c:	ldr	ip, [pc, #160]	; 11f34 <error@@Base+0x64c>
   11e90:	ldr	ip, [pc, ip]
   11e94:	str	r0, [fp, #-4]
   11e98:	str	r1, [fp, #-8]
   11e9c:	str	r2, [fp, #-12]
   11ea0:	str	r3, [sp, #16]
   11ea4:	ldr	r0, [fp, #-4]
   11ea8:	ldr	r1, [fp, #-8]
   11eac:	blx	ip
   11eb0:	str	r0, [sp, #12]
   11eb4:	ldr	r0, [sp, #12]
   11eb8:	movw	r1, #0
   11ebc:	cmp	r0, r1
   11ec0:	bne	11f18 <error@@Base+0x630>
   11ec4:	ldr	r0, [pc, #112]	; 11f3c <error@@Base+0x654>
   11ec8:	ldr	r0, [pc, r0]
   11ecc:	movw	r1, #1
   11ed0:	str	r0, [sp, #8]
   11ed4:	mov	r0, r1
   11ed8:	movw	r1, #20
   11edc:	ldr	r2, [sp, #8]
   11ee0:	blx	r2
   11ee4:	str	r0, [sp, #12]
   11ee8:	ldr	r0, [fp, #-8]
   11eec:	bl	1086c <strdup@plt>
   11ef0:	ldr	r1, [pc, #64]	; 11f38 <error@@Base+0x650>
   11ef4:	ldr	r1, [pc, r1]
   11ef8:	ldr	r2, [sp, #12]
   11efc:	str	r0, [r2, #8]
   11f00:	ldr	r0, [fp, #-4]
   11f04:	ldr	r2, [sp, #12]
   11f08:	str	r1, [sp, #4]
   11f0c:	mov	r1, r2
   11f10:	ldr	r2, [sp, #4]
   11f14:	blx	r2
   11f18:	ldr	r0, [sp, #12]
   11f1c:	add	r0, r0, #12
   11f20:	ldr	r1, [fp, #-12]
   11f24:	ldr	r2, [sp, #16]
   11f28:	bl	11e40 <error@@Base+0x558>
   11f2c:	mov	sp, fp
   11f30:	pop	{fp, pc}
   11f34:	andeq	r2, r1, ip, lsl #4
   11f38:	andeq	r2, r1, ip, ror r1
   11f3c:	andeq	r2, r1, ip, lsl #4
   11f40:	push	{fp, lr}
   11f44:	mov	fp, sp
   11f48:	sub	sp, sp, #48	; 0x30
   11f4c:	ldr	r2, [pc, #512]	; 12154 <error@@Base+0x86c>
   11f50:	add	r2, pc, r2
   11f54:	ldr	r3, [pc, #508]	; 12158 <error@@Base+0x870>
   11f58:	ldr	r3, [pc, r3]
   11f5c:	str	r0, [fp, #-4]
   11f60:	str	r1, [fp, #-8]
   11f64:	ldr	r0, [fp, #-8]
   11f68:	mov	r1, r2
   11f6c:	blx	r3
   11f70:	str	r0, [fp, #-12]
   11f74:	ldr	r0, [fp, #-12]
   11f78:	bl	1217c <error@@Base+0x894>
   11f7c:	and	r0, r0, #255	; 0xff
   11f80:	cmp	r0, #0
   11f84:	beq	120e0 <error@@Base+0x7f8>
   11f88:	ldr	r0, [pc, #460]	; 1215c <error@@Base+0x874>
   11f8c:	add	r0, pc, r0
   11f90:	ldr	r1, [pc, #456]	; 12160 <error@@Base+0x878>
   11f94:	add	r1, pc, r1
   11f98:	movw	r2, #45	; 0x2d
   11f9c:	bl	10920 <strncmp@plt>
   11fa0:	cmp	r0, #0
   11fa4:	bne	120e0 <error@@Base+0x7f8>
   11fa8:	ldr	r0, [fp, #-12]
   11fac:	bl	1217c <error@@Base+0x894>
   11fb0:	and	r0, r0, #255	; 0xff
   11fb4:	cmp	r0, #0
   11fb8:	beq	120e0 <error@@Base+0x7f8>
   11fbc:	ldr	r0, [pc, #432]	; 12174 <error@@Base+0x88c>
   11fc0:	add	r0, pc, r0
   11fc4:	ldr	r1, [pc, #428]	; 12178 <error@@Base+0x890>
   11fc8:	add	r1, pc, r1
   11fcc:	bl	10830 <strcmp@plt>
   11fd0:	cmp	r0, #0
   11fd4:	bne	120e0 <error@@Base+0x7f8>
   11fd8:	ldr	r0, [fp, #-12]
   11fdc:	sub	r1, fp, #16
   11fe0:	bl	121d0 <error@@Base+0x8e8>
   11fe4:	and	r0, r0, #255	; 0xff
   11fe8:	cmp	r0, #0
   11fec:	beq	120e0 <error@@Base+0x7f8>
   11ff0:	ldr	r0, [fp, #-12]
   11ff4:	sub	r1, fp, #20
   11ff8:	bl	121d0 <error@@Base+0x8e8>
   11ffc:	and	r0, r0, #255	; 0xff
   12000:	cmp	r0, #0
   12004:	beq	120e0 <error@@Base+0x7f8>
   12008:	ldr	r0, [fp, #-12]
   1200c:	bl	1217c <error@@Base+0x894>
   12010:	and	r0, r0, #255	; 0xff
   12014:	cmp	r0, #0
   12018:	beq	120e0 <error@@Base+0x7f8>
   1201c:	ldr	r0, [fp, #-12]
   12020:	bl	1217c <error@@Base+0x894>
   12024:	and	r0, r0, #255	; 0xff
   12028:	cmp	r0, #0
   1202c:	beq	120e0 <error@@Base+0x7f8>
   12030:	ldr	r0, [fp, #-4]
   12034:	ldr	r1, [fp, #-16]
   12038:	ldr	r2, [fp, #-20]	; 0xffffffec
   1203c:	bl	11e40 <error@@Base+0x558>
   12040:	ldr	r0, [fp, #-12]
   12044:	ldr	r1, [fp, #-4]
   12048:	add	r1, r1, #8
   1204c:	bl	1224c <error@@Base+0x964>
   12050:	str	r0, [sp, #24]
   12054:	ldr	r0, [fp, #-12]
   12058:	ldr	r1, [fp, #-4]
   1205c:	add	r1, r1, #416	; 0x1a0
   12060:	bl	1224c <error@@Base+0x964>
   12064:	str	r0, [sp, #20]
   12068:	ldr	r0, [fp, #-12]
   1206c:	ldr	r1, [fp, #-4]
   12070:	add	r1, r1, #824	; 0x338
   12074:	bl	1224c <error@@Base+0x964>
   12078:	ldr	r1, [fp, #-16]
   1207c:	cmp	r1, #0
   12080:	str	r0, [sp, #16]
   12084:	ble	120dc <error@@Base+0x7f4>
   12088:	ldr	r0, [fp, #-12]
   1208c:	ldr	r1, [fp, #-4]
   12090:	add	r1, r1, #920	; 0x398
   12094:	bl	1224c <error@@Base+0x964>
   12098:	ldr	r1, [sp, #24]
   1209c:	cmp	r1, #0
   120a0:	str	r0, [sp, #12]
   120a4:	ble	120b8 <error@@Base+0x7d0>
   120a8:	ldr	r0, [fp, #-12]
   120ac:	ldr	r1, [fp, #-4]
   120b0:	add	r1, r1, #992	; 0x3e0
   120b4:	bl	12340 <error@@Base+0xa58>
   120b8:	ldr	r0, [sp, #20]
   120bc:	cmp	r0, #0
   120c0:	ble	120d8 <error@@Base+0x7f0>
   120c4:	ldr	r0, [fp, #-12]
   120c8:	ldr	r1, [fp, #-4]
   120cc:	movw	r2, #9048	; 0x2358
   120d0:	add	r1, r1, r2
   120d4:	bl	12340 <error@@Base+0xa58>
   120d8:	b	120dc <error@@Base+0x7f4>
   120dc:	b	12130 <error@@Base+0x848>
   120e0:	ldr	r0, [fp, #-8]
   120e4:	movw	r1, #0
   120e8:	cmp	r0, r1
   120ec:	beq	120fc <error@@Base+0x814>
   120f0:	ldr	r0, [fp, #-8]
   120f4:	str	r0, [sp, #8]
   120f8:	b	1210c <error@@Base+0x824>
   120fc:	ldr	r0, [pc, #96]	; 12164 <error@@Base+0x87c>
   12100:	add	r0, pc, r0
   12104:	str	r0, [sp, #8]
   12108:	b	1210c <error@@Base+0x824>
   1210c:	ldr	r0, [sp, #8]
   12110:	ldr	r1, [pc, #80]	; 12168 <error@@Base+0x880>
   12114:	add	r1, pc, r1
   12118:	ldr	r2, [pc, #76]	; 1216c <error@@Base+0x884>
   1211c:	ldr	r2, [pc, r2]
   12120:	str	r0, [sp, #4]
   12124:	mov	r0, r1
   12128:	ldr	r1, [sp, #4]
   1212c:	blx	r2
   12130:	ldr	r0, [pc, #56]	; 12170 <error@@Base+0x888>
   12134:	ldr	r0, [pc, r0]
   12138:	ldr	r1, [fp, #-12]
   1213c:	str	r0, [sp]
   12140:	mov	r0, r1
   12144:	ldr	r1, [sp]
   12148:	blx	r1
   1214c:	mov	sp, fp
   12150:	pop	{fp, pc}
   12154:	andeq	r1, r0, r4, lsl #19
   12158:	andeq	r2, r1, r0, lsr #2
   1215c:	andeq	r2, r1, r1, ror r1
   12160:	andeq	r1, r0, r2, asr #18
   12164:	andeq	r1, r0, r8, asr #16
   12168:	andeq	r1, r0, r2, lsr #16
   1216c:			; <UNDEFINED> instruction: 0x00011fbc
   12170:	andeq	r1, r1, ip, lsr #30
   12174:	andeq	r2, r1, sp, lsr r1
   12178:	andeq	r1, r0, lr, lsr r9
   1217c:	push	{fp, lr}
   12180:	mov	fp, sp
   12184:	sub	sp, sp, #8
   12188:	ldr	r1, [pc, #60]	; 121cc <error@@Base+0x8e4>
   1218c:	add	r1, pc, r1
   12190:	str	r0, [sp, #4]
   12194:	ldr	r2, [sp, #4]
   12198:	mov	r0, r1
   1219c:	movw	r1, #99	; 0x63
   121a0:	bl	10860 <fgets@plt>
   121a4:	movw	r1, #0
   121a8:	cmp	r0, r1
   121ac:	movw	r0, #0
   121b0:	movne	r0, #1
   121b4:	tst	r0, #1
   121b8:	movw	r0, #1
   121bc:	moveq	r0, #0
   121c0:	and	r0, r0, #255	; 0xff
   121c4:	mov	sp, fp
   121c8:	pop	{fp, pc}
   121cc:	andeq	r1, r1, r1, ror pc
   121d0:	push	{fp, lr}
   121d4:	mov	fp, sp
   121d8:	sub	sp, sp, #16
   121dc:	str	r0, [fp, #-4]
   121e0:	str	r1, [sp, #8]
   121e4:	ldr	r0, [fp, #-4]
   121e8:	bl	1217c <error@@Base+0x894>
   121ec:	and	r0, r0, #255	; 0xff
   121f0:	cmp	r0, #0
   121f4:	movw	r0, #0
   121f8:	str	r0, [sp, #4]
   121fc:	beq	12228 <error@@Base+0x940>
   12200:	ldr	r0, [pc, #60]	; 12244 <error@@Base+0x95c>
   12204:	add	r0, pc, r0
   12208:	ldr	r1, [pc, #56]	; 12248 <error@@Base+0x960>
   1220c:	add	r1, pc, r1
   12210:	ldr	r2, [sp, #8]
   12214:	bl	108d8 <__isoc99_sscanf@plt>
   12218:	cmp	r0, #1
   1221c:	movw	r0, #0
   12220:	moveq	r0, #1
   12224:	str	r0, [sp, #4]
   12228:	ldr	r0, [sp, #4]
   1222c:	tst	r0, #1
   12230:	movw	r0, #1
   12234:	moveq	r0, #0
   12238:	and	r0, r0, #255	; 0xff
   1223c:	mov	sp, fp
   12240:	pop	{fp, pc}
   12244:	strdeq	r1, [r1], -r9
   12248:	andeq	r1, r0, r2, lsr #15
   1224c:	push	{fp, lr}
   12250:	mov	fp, sp
   12254:	sub	sp, sp, #24
   12258:	str	r0, [fp, #-4]
   1225c:	str	r1, [fp, #-8]
   12260:	movw	r0, #0
   12264:	str	r0, [sp]
   12268:	ldr	r0, [fp, #-4]
   1226c:	bl	1217c <error@@Base+0x894>
   12270:	and	r0, r0, #255	; 0xff
   12274:	cmp	r0, #0
   12278:	beq	12328 <error@@Base+0xa40>
   1227c:	ldr	r0, [fp, #-4]
   12280:	bl	1217c <error@@Base+0x894>
   12284:	and	r0, r0, #255	; 0xff
   12288:	cmp	r0, #0
   1228c:	beq	12328 <error@@Base+0xa40>
   12290:	b	12294 <error@@Base+0x9ac>
   12294:	ldr	r0, [fp, #-4]
   12298:	add	r1, sp, #12
   1229c:	add	r2, sp, #8
   122a0:	bl	129f8 <error@@Base+0x1110>
   122a4:	sxtb	r0, r0
   122a8:	cmp	r0, #0
   122ac:	beq	12324 <error@@Base+0xa3c>
   122b0:	ldr	r0, [pc, #124]	; 12334 <error@@Base+0xa4c>
   122b4:	add	r0, pc, r0
   122b8:	add	r0, r0, #29
   122bc:	bl	10908 <atoi@plt>
   122c0:	str	r0, [sp, #4]
   122c4:	ldr	r0, [sp, #4]
   122c8:	cmp	r0, #0
   122cc:	bne	12308 <error@@Base+0xa20>
   122d0:	ldr	r0, [pc, #96]	; 12338 <error@@Base+0xa50>
   122d4:	add	r0, pc, r0
   122d8:	add	r0, r0, #29
   122dc:	ldr	r1, [pc, #88]	; 1233c <error@@Base+0xa54>
   122e0:	add	r1, pc, r1
   122e4:	bl	10830 <strcmp@plt>
   122e8:	cmp	r0, #0
   122ec:	bne	122fc <error@@Base+0xa14>
   122f0:	ldr	r0, [sp, #12]
   122f4:	str	r0, [sp]
   122f8:	b	12304 <error@@Base+0xa1c>
   122fc:	movw	r0, #11
   12300:	str	r0, [sp, #4]
   12304:	b	12308 <error@@Base+0xa20>
   12308:	ldr	r0, [fp, #-8]
   1230c:	ldr	r1, [sp, #4]
   12310:	add	r0, r0, r1, lsl #3
   12314:	ldr	r1, [sp, #12]
   12318:	ldr	r2, [sp, #8]
   1231c:	bl	11e40 <error@@Base+0x558>
   12320:	b	12294 <error@@Base+0x9ac>
   12324:	b	12328 <error@@Base+0xa40>
   12328:	ldr	r0, [sp]
   1232c:	mov	sp, fp
   12330:	pop	{fp, pc}
   12334:	andeq	r1, r1, r9, asr #28
   12338:	andeq	r1, r1, r9, lsr #28
   1233c:	andeq	r1, r0, r2, asr #13
   12340:	push	{fp, lr}
   12344:	mov	fp, sp
   12348:	sub	sp, sp, #24
   1234c:	str	r0, [fp, #-4]
   12350:	str	r1, [fp, #-8]
   12354:	ldr	r0, [fp, #-4]
   12358:	bl	1217c <error@@Base+0x894>
   1235c:	and	r0, r0, #255	; 0xff
   12360:	cmp	r0, #0
   12364:	beq	123f0 <error@@Base+0xb08>
   12368:	ldr	r0, [fp, #-4]
   1236c:	bl	1217c <error@@Base+0x894>
   12370:	and	r0, r0, #255	; 0xff
   12374:	cmp	r0, #0
   12378:	beq	123f0 <error@@Base+0xb08>
   1237c:	b	12380 <error@@Base+0xa98>
   12380:	ldr	r0, [fp, #-4]
   12384:	add	r1, sp, #12
   12388:	add	r2, sp, #8
   1238c:	bl	129f8 <error@@Base+0x1110>
   12390:	sxtb	r0, r0
   12394:	cmp	r0, #0
   12398:	beq	123ec <error@@Base+0xb04>
   1239c:	ldr	r0, [pc, #84]	; 123f8 <error@@Base+0xb10>
   123a0:	add	r0, pc, r0
   123a4:	add	r1, r0, #29
   123a8:	ldr	r2, [pc, #76]	; 123fc <error@@Base+0xb14>
   123ac:	add	r2, pc, r2
   123b0:	str	r0, [sp, #4]
   123b4:	mov	r0, r2
   123b8:	str	r1, [sp]
   123bc:	bl	108b4 <strlen@plt>
   123c0:	sub	r0, r0, #1
   123c4:	ldr	r1, [sp, #4]
   123c8:	add	r0, r1, r0
   123cc:	movw	r2, #0
   123d0:	strb	r2, [r0]
   123d4:	ldr	r0, [fp, #-8]
   123d8:	ldr	r2, [sp, #12]
   123dc:	ldr	r3, [sp, #8]
   123e0:	ldr	r1, [sp]
   123e4:	bl	11e80 <error@@Base+0x598>
   123e8:	b	12380 <error@@Base+0xa98>
   123ec:	b	123f0 <error@@Base+0xb08>
   123f0:	mov	sp, fp
   123f4:	pop	{fp, pc}
   123f8:	andeq	r1, r1, sp, asr sp
   123fc:	andeq	r1, r1, r1, asr sp
   12400:	push	{fp, lr}
   12404:	mov	fp, sp
   12408:	sub	sp, sp, #40	; 0x28
   1240c:	ldr	r2, [pc, #532]	; 12628 <error@@Base+0xd40>
   12410:	add	r2, pc, r2
   12414:	ldr	r3, [pc, #528]	; 1262c <error@@Base+0xd44>
   12418:	ldr	r3, [pc, r3]
   1241c:	str	r0, [fp, #-4]
   12420:	str	r1, [fp, #-8]
   12424:	ldr	r0, [fp, #-8]
   12428:	mov	r1, r2
   1242c:	blx	r3
   12430:	ldr	r1, [pc, #484]	; 1261c <error@@Base+0xd34>
   12434:	add	r1, pc, r1
   12438:	ldr	r2, [pc, #480]	; 12620 <error@@Base+0xd38>
   1243c:	add	r2, pc, r2
   12440:	ldr	r3, [pc, #476]	; 12624 <error@@Base+0xd3c>
   12444:	add	r3, pc, r3
   12448:	str	r0, [fp, #-12]
   1244c:	ldr	r0, [fp, #-12]
   12450:	bl	108c0 <fprintf@plt>
   12454:	ldr	r1, [pc, #444]	; 12618 <error@@Base+0xd30>
   12458:	add	r1, pc, r1
   1245c:	ldr	r2, [fp, #-12]
   12460:	ldr	r3, [fp, #-4]
   12464:	ldr	r3, [r3]
   12468:	str	r0, [fp, #-16]
   1246c:	mov	r0, r2
   12470:	mov	r2, r3
   12474:	bl	108c0 <fprintf@plt>
   12478:	ldr	r1, [pc, #404]	; 12614 <error@@Base+0xd2c>
   1247c:	add	r1, pc, r1
   12480:	ldr	r2, [fp, #-12]
   12484:	ldr	r3, [fp, #-4]
   12488:	ldr	r3, [r3, #4]
   1248c:	str	r0, [sp, #20]
   12490:	mov	r0, r2
   12494:	mov	r2, r3
   12498:	bl	108c0 <fprintf@plt>
   1249c:	ldr	r1, [fp, #-12]
   124a0:	ldr	r2, [fp, #-4]
   124a4:	str	r0, [sp, #16]
   124a8:	mov	r0, r1
   124ac:	mov	r1, r2
   124b0:	bl	12640 <error@@Base+0xd58>
   124b4:	ldr	r0, [pc, #340]	; 12610 <error@@Base+0xd28>
   124b8:	add	r0, pc, r0
   124bc:	ldr	r1, [fp, #-12]
   124c0:	bl	10914 <fputs@plt>
   124c4:	ldr	r1, [pc, #320]	; 1260c <error@@Base+0xd24>
   124c8:	add	r3, pc, r1
   124cc:	ldr	r1, [fp, #-12]
   124d0:	ldr	r2, [fp, #-4]
   124d4:	add	r2, r2, #8
   124d8:	str	r0, [sp, #12]
   124dc:	mov	r0, r1
   124e0:	mov	r1, r2
   124e4:	movw	r2, #50	; 0x32
   124e8:	movw	lr, #0
   124ec:	str	lr, [sp]
   124f0:	movw	lr, #1
   124f4:	str	lr, [sp, #4]
   124f8:	bl	126e8 <error@@Base+0xe00>
   124fc:	ldr	r0, [pc, #260]	; 12608 <error@@Base+0xd20>
   12500:	add	r3, pc, r0
   12504:	ldr	r0, [fp, #-12]
   12508:	ldr	r1, [fp, #-4]
   1250c:	add	r1, r1, #416	; 0x1a0
   12510:	movw	r2, #50	; 0x32
   12514:	movw	lr, #0
   12518:	str	lr, [sp]
   1251c:	movw	lr, #1
   12520:	str	lr, [sp, #4]
   12524:	bl	126e8 <error@@Base+0xe00>
   12528:	ldr	r0, [pc, #212]	; 12604 <error@@Base+0xd1c>
   1252c:	add	r3, pc, r0
   12530:	ldr	r0, [fp, #-12]
   12534:	ldr	r1, [fp, #-4]
   12538:	add	r1, r1, #824	; 0x338
   1253c:	movw	r2, #10
   12540:	movw	lr, #1
   12544:	str	lr, [sp]
   12548:	str	lr, [sp, #4]
   1254c:	bl	126e8 <error@@Base+0xe00>
   12550:	ldr	r0, [fp, #-4]
   12554:	ldr	r0, [r0]
   12558:	cmp	r0, #0
   1255c:	ble	125e0 <error@@Base+0xcf8>
   12560:	ldr	r0, [pc, #200]	; 12630 <error@@Base+0xd48>
   12564:	add	r3, pc, r0
   12568:	ldr	r0, [fp, #-12]
   1256c:	ldr	r1, [fp, #-4]
   12570:	add	r1, r1, #920	; 0x398
   12574:	movw	r2, #8
   12578:	movw	ip, #0
   1257c:	str	ip, [sp]
   12580:	str	ip, [sp, #4]
   12584:	bl	126e8 <error@@Base+0xe00>
   12588:	ldr	r0, [fp, #-4]
   1258c:	ldr	r0, [r0, #8]
   12590:	cmp	r0, #0
   12594:	ble	125b0 <error@@Base+0xcc8>
   12598:	ldr	r0, [pc, #148]	; 12634 <error@@Base+0xd4c>
   1259c:	add	r2, pc, r0
   125a0:	ldr	r0, [fp, #-12]
   125a4:	ldr	r1, [fp, #-4]
   125a8:	add	r1, r1, #992	; 0x3e0
   125ac:	bl	1289c <error@@Base+0xfb4>
   125b0:	ldr	r0, [fp, #-4]
   125b4:	ldr	r0, [r0, #416]	; 0x1a0
   125b8:	cmp	r0, #0
   125bc:	ble	125dc <error@@Base+0xcf4>
   125c0:	ldr	r0, [pc, #112]	; 12638 <error@@Base+0xd50>
   125c4:	add	r2, pc, r0
   125c8:	ldr	r0, [fp, #-12]
   125cc:	ldr	r1, [fp, #-4]
   125d0:	movw	r3, #9048	; 0x2358
   125d4:	add	r1, r1, r3
   125d8:	bl	1289c <error@@Base+0xfb4>
   125dc:	b	125e0 <error@@Base+0xcf8>
   125e0:	ldr	r0, [pc, #84]	; 1263c <error@@Base+0xd54>
   125e4:	ldr	r0, [pc, r0]
   125e8:	ldr	r1, [fp, #-12]
   125ec:	str	r0, [sp, #8]
   125f0:	mov	r0, r1
   125f4:	ldr	r1, [sp, #8]
   125f8:	blx	r1
   125fc:	mov	sp, fp
   12600:	pop	{fp, pc}
   12604:	andeq	r1, r0, r7, asr r4
   12608:	andeq	r1, r0, ip, lsl #9
   1260c:			; <UNDEFINED> instruction: 0x000014b1
   12610:			; <UNDEFINED> instruction: 0x000012bf
   12614:	andeq	r1, r0, r7, ror #9
   12618:	strdeq	r1, [r0], -sp
   1261c:	andeq	r1, r0, ip, lsl r5
   12620:	muleq	r0, sl, r4
   12624:	andeq	r1, r0, r2, asr #9
   12628:	andeq	r1, r0, lr, lsr r5
   1262c:	andeq	r1, r1, r0, ror #24
   12630:	andeq	r1, r0, r6, lsr r4
   12634:	ldrdeq	r1, [r0], -sp
   12638:	andeq	r1, r0, r8, asr #7
   1263c:	andeq	r1, r1, ip, ror sl
   12640:	push	{fp, lr}
   12644:	mov	fp, sp
   12648:	sub	sp, sp, #16
   1264c:	str	r0, [fp, #-4]
   12650:	str	r1, [sp, #8]
   12654:	ldr	r0, [sp, #8]
   12658:	ldr	r0, [r0]
   1265c:	cmp	r0, #0
   12660:	bne	1267c <error@@Base+0xd94>
   12664:	ldr	r0, [pc, #120]	; 126e4 <error@@Base+0xdfc>
   12668:	add	r0, pc, r0
   1266c:	ldr	r1, [fp, #-4]
   12670:	bl	10914 <fputs@plt>
   12674:	str	r0, [sp, #4]
   12678:	b	126cc <error@@Base+0xde4>
   1267c:	ldr	r0, [pc, #92]	; 126e0 <error@@Base+0xdf8>
   12680:	add	r1, pc, r0
   12684:	vldr	d16, [pc, #76]	; 126d8 <error@@Base+0xdf0>
   12688:	ldr	r0, [fp, #-4]
   1268c:	ldr	r2, [sp, #8]
   12690:	ldr	r2, [r2]
   12694:	ldr	r3, [sp, #8]
   12698:	ldr	r3, [r3, #4]
   1269c:	sub	r2, r2, r3
   126a0:	vmov	s0, r2
   126a4:	vcvt.f64.s32	d17, s0
   126a8:	vmul.f64	d16, d16, d17
   126ac:	ldr	r2, [sp, #8]
   126b0:	ldr	r2, [r2]
   126b4:	vmov	s0, r2
   126b8:	vcvt.f64.s32	d17, s0
   126bc:	vdiv.f64	d16, d16, d17
   126c0:	vmov	r2, r3, d16
   126c4:	bl	108c0 <fprintf@plt>
   126c8:	str	r0, [sp]
   126cc:	mov	sp, fp
   126d0:	pop	{fp, pc}
   126d4:	nop	{0}
   126d8:	andeq	r0, r0, r0
   126dc:	subsmi	r0, r9, r0
   126e0:	andeq	r1, r0, fp, lsr r3
   126e4:	andeq	r1, r0, sl, asr #6
   126e8:	push	{r4, sl, fp, lr}
   126ec:	add	fp, sp, #8
   126f0:	sub	sp, sp, #40	; 0x28
   126f4:	ldr	ip, [fp, #12]
   126f8:	ldr	lr, [fp, #8]
   126fc:	ldr	r4, [pc, #392]	; 1288c <error@@Base+0xfa4>
   12700:	add	r4, pc, r4
   12704:	str	r0, [fp, #-12]
   12708:	str	r1, [fp, #-16]
   1270c:	strh	r2, [fp, #-18]	; 0xffffffee
   12710:	str	r3, [sp, #24]
   12714:	strb	lr, [sp, #23]
   12718:	strb	ip, [sp, #22]
   1271c:	ldr	r0, [fp, #-12]
   12720:	ldr	r2, [sp, #24]
   12724:	mov	r1, r4
   12728:	bl	108c0 <fprintf@plt>
   1272c:	ldr	r1, [fp, #-12]
   12730:	str	r0, [sp, #16]
   12734:	mov	r0, r1
   12738:	movw	r1, #0
   1273c:	bl	12a7c <error@@Base+0x1194>
   12740:	ldr	r0, [pc, #312]	; 12880 <error@@Base+0xf98>
   12744:	add	r1, pc, r0
   12748:	ldr	r0, [pc, #308]	; 12884 <error@@Base+0xf9c>
   1274c:	add	r0, pc, r0
   12750:	ldr	r2, [pc, #304]	; 12888 <error@@Base+0xfa0>
   12754:	add	r2, pc, r2
   12758:	ldr	r3, [fp, #-12]
   1275c:	ldrb	ip, [sp, #23]
   12760:	cmp	ip, #0
   12764:	movw	ip, #0
   12768:	movne	ip, #1
   1276c:	tst	ip, #1
   12770:	movne	r2, r0
   12774:	mov	r0, r3
   12778:	bl	108c0 <fprintf@plt>
   1277c:	movw	r1, #1
   12780:	strh	r1, [sp, #20]
   12784:	str	r0, [sp, #12]
   12788:	ldrsh	r0, [sp, #20]
   1278c:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   12790:	cmp	r0, r1
   12794:	bgt	127f4 <error@@Base+0xf0c>
   12798:	ldr	r0, [fp, #-16]
   1279c:	ldrsh	r1, [sp, #20]
   127a0:	add	r0, r0, r1, lsl #3
   127a4:	ldr	r0, [r0]
   127a8:	cmp	r0, #0
   127ac:	ble	127dc <error@@Base+0xef4>
   127b0:	ldr	r0, [fp, #-12]
   127b4:	ldr	r1, [fp, #-16]
   127b8:	ldrsh	r2, [sp, #20]
   127bc:	add	r1, r1, r2, lsl #3
   127c0:	bl	12a7c <error@@Base+0x1194>
   127c4:	ldr	r0, [pc, #204]	; 12898 <error@@Base+0xfb0>
   127c8:	add	r1, pc, r0
   127cc:	ldr	r0, [fp, #-12]
   127d0:	ldrsh	r2, [sp, #20]
   127d4:	bl	108c0 <fprintf@plt>
   127d8:	str	r0, [sp, #8]
   127dc:	b	127e0 <error@@Base+0xef8>
   127e0:	ldrh	r0, [sp, #20]
   127e4:	movw	r1, #1
   127e8:	add	r0, r0, r1
   127ec:	strh	r0, [sp, #20]
   127f0:	b	12788 <error@@Base+0xea0>
   127f4:	ldrb	r0, [sp, #23]
   127f8:	cmp	r0, #0
   127fc:	beq	1284c <error@@Base+0xf64>
   12800:	ldr	r0, [fp, #-16]
   12804:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   12808:	add	r1, r1, #1
   1280c:	add	r0, r0, r1, lsl #3
   12810:	ldr	r0, [r0]
   12814:	cmp	r0, #0
   12818:	ble	1284c <error@@Base+0xf64>
   1281c:	ldr	r0, [fp, #-12]
   12820:	ldr	r1, [fp, #-16]
   12824:	ldrsh	r2, [fp, #-18]	; 0xffffffee
   12828:	add	r2, r2, #1
   1282c:	add	r1, r1, r2, lsl #3
   12830:	bl	12a7c <error@@Base+0x1194>
   12834:	ldr	r0, [pc, #84]	; 12890 <error@@Base+0xfa8>
   12838:	add	r1, pc, r0
   1283c:	ldr	r0, [fp, #-12]
   12840:	ldrsh	r2, [fp, #-18]	; 0xffffffee
   12844:	bl	108c0 <fprintf@plt>
   12848:	str	r0, [sp, #4]
   1284c:	ldrsb	r0, [sp, #22]
   12850:	cmp	r0, #0
   12854:	beq	12878 <error@@Base+0xf90>
   12858:	ldr	r0, [fp, #-12]
   1285c:	ldr	r1, [fp, #-16]
   12860:	bl	12a7c <error@@Base+0x1194>
   12864:	ldr	r0, [pc, #40]	; 12894 <error@@Base+0xfac>
   12868:	add	r0, pc, r0
   1286c:	ldr	r1, [fp, #-12]
   12870:	bl	10914 <fputs@plt>
   12874:	str	r0, [sp]
   12878:	sub	sp, fp, #8
   1287c:	pop	{r4, sl, fp, pc}
   12880:	andeq	r1, r0, lr, ror r2
   12884:	andeq	r1, r0, sl, ror r2
   12888:	andeq	r1, r0, r9, ror r2
   1288c:	andeq	r1, r0, r1, asr #5
   12890:	andeq	r1, r0, r5, lsr #3
   12894:	andeq	r1, r0, sl, lsr r1
   12898:	andeq	r1, r0, ip, lsl #4
   1289c:	push	{fp, lr}
   128a0:	mov	fp, sp
   128a4:	sub	sp, sp, #48	; 0x30
   128a8:	ldr	r3, [pc, #320]	; 129f0 <error@@Base+0x1108>
   128ac:	ldr	r3, [pc, r3]
   128b0:	str	r0, [fp, #-4]
   128b4:	str	r1, [fp, #-8]
   128b8:	str	r2, [fp, #-12]
   128bc:	ldr	r0, [fp, #-8]
   128c0:	blx	r3
   128c4:	ldr	r0, [pc, #284]	; 129e8 <error@@Base+0x1100>
   128c8:	add	r0, pc, r0
   128cc:	ldr	r1, [pc, #280]	; 129ec <error@@Base+0x1104>
   128d0:	ldr	r1, [pc, r1]
   128d4:	ldr	r2, [fp, #-8]
   128d8:	movw	r3, #8052	; 0x1f74
   128dc:	add	r2, r2, r3
   128e0:	ldr	r2, [r2]
   128e4:	ldr	r3, [fp, #-8]
   128e8:	movw	lr, #8048	; 0x1f70
   128ec:	add	r3, r3, lr
   128f0:	ldr	r3, [r3]
   128f4:	str	r0, [fp, #-20]	; 0xffffffec
   128f8:	mov	r0, r2
   128fc:	str	r1, [sp, #24]
   12900:	mov	r1, r3
   12904:	ldr	r2, [fp, #-20]	; 0xffffffec
   12908:	ldr	r3, [sp, #24]
   1290c:	blx	r3
   12910:	ldr	r0, [pc, #204]	; 129e4 <error@@Base+0x10fc>
   12914:	add	r1, pc, r0
   12918:	ldr	r0, [fp, #-4]
   1291c:	ldr	r2, [fp, #-12]
   12920:	bl	108c0 <fprintf@plt>
   12924:	ldr	r1, [fp, #-4]
   12928:	str	r0, [sp, #20]
   1292c:	mov	r0, r1
   12930:	movw	r1, #0
   12934:	bl	12a7c <error@@Base+0x1194>
   12938:	ldr	r1, [fp, #-4]
   1293c:	movw	r0, #10
   12940:	bl	108f0 <fputc@plt>
   12944:	movw	r1, #0
   12948:	str	r1, [fp, #-16]
   1294c:	str	r0, [sp, #16]
   12950:	ldr	r0, [fp, #-16]
   12954:	ldr	r1, [fp, #-8]
   12958:	movw	r2, #8052	; 0x1f74
   1295c:	add	r1, r1, r2
   12960:	ldr	r1, [r1]
   12964:	cmp	r0, r1
   12968:	bge	129dc <error@@Base+0x10f4>
   1296c:	ldr	r0, [pc, #128]	; 129f4 <error@@Base+0x110c>
   12970:	add	r1, pc, r0
   12974:	ldr	r0, [fp, #-4]
   12978:	ldr	r2, [fp, #-8]
   1297c:	movw	r3, #8048	; 0x1f70
   12980:	ldr	r2, [r2, r3]
   12984:	ldr	ip, [fp, #-16]
   12988:	ldr	r2, [r2, ip, lsl #2]
   1298c:	add	r2, r2, #12
   12990:	str	r1, [sp, #12]
   12994:	mov	r1, r2
   12998:	str	r3, [sp, #8]
   1299c:	bl	12a7c <error@@Base+0x1194>
   129a0:	ldr	r0, [fp, #-4]
   129a4:	ldr	r1, [fp, #-8]
   129a8:	ldr	r2, [sp, #8]
   129ac:	ldr	r1, [r1, r2]
   129b0:	ldr	r3, [fp, #-16]
   129b4:	add	r1, r1, r3, lsl #2
   129b8:	ldr	r1, [r1]
   129bc:	ldr	r2, [r1, #8]
   129c0:	ldr	r1, [sp, #12]
   129c4:	bl	108c0 <fprintf@plt>
   129c8:	str	r0, [sp, #4]
   129cc:	ldr	r0, [fp, #-16]
   129d0:	add	r0, r0, #1
   129d4:	str	r0, [fp, #-16]
   129d8:	b	12950 <error@@Base+0x1068>
   129dc:	mov	sp, fp
   129e0:	pop	{fp, pc}
   129e4:	andeq	r1, r0, sp, lsr #1
   129e8:	andeq	r0, r0, r8, asr #4
   129ec:			; <UNDEFINED> instruction: 0x000117b0
   129f0:	andeq	r1, r1, r4, ror #15
   129f4:	andeq	r1, r0, r2, asr r0
   129f8:	push	{fp, lr}
   129fc:	mov	fp, sp
   12a00:	sub	sp, sp, #16
   12a04:	str	r0, [fp, #-4]
   12a08:	str	r1, [sp, #8]
   12a0c:	str	r2, [sp, #4]
   12a10:	ldr	r0, [fp, #-4]
   12a14:	bl	1217c <error@@Base+0x894>
   12a18:	and	r0, r0, #255	; 0xff
   12a1c:	cmp	r0, #0
   12a20:	movw	r0, #0
   12a24:	str	r0, [sp]
   12a28:	beq	12a58 <error@@Base+0x1170>
   12a2c:	ldr	r0, [pc, #64]	; 12a74 <error@@Base+0x118c>
   12a30:	add	r0, pc, r0
   12a34:	ldr	r1, [pc, #60]	; 12a78 <error@@Base+0x1190>
   12a38:	add	r1, pc, r1
   12a3c:	ldr	r2, [sp, #8]
   12a40:	ldr	r3, [sp, #4]
   12a44:	bl	108d8 <__isoc99_sscanf@plt>
   12a48:	cmp	r0, #2
   12a4c:	movw	r0, #0
   12a50:	moveq	r0, #1
   12a54:	str	r0, [sp]
   12a58:	ldr	r0, [sp]
   12a5c:	tst	r0, #1
   12a60:	movw	r0, #1
   12a64:	moveq	r0, #0
   12a68:	and	r0, r0, #255	; 0xff
   12a6c:	mov	sp, fp
   12a70:	pop	{fp, pc}
   12a74:	andeq	r1, r1, sp, asr #13
   12a78:	andeq	r0, r0, r2, ror pc
   12a7c:	push	{fp, lr}
   12a80:	mov	fp, sp
   12a84:	sub	sp, sp, #24
   12a88:	str	r0, [fp, #-4]
   12a8c:	str	r1, [fp, #-8]
   12a90:	ldr	r0, [fp, #-8]
   12a94:	movw	r1, #0
   12a98:	cmp	r0, r1
   12a9c:	beq	12adc <error@@Base+0x11f4>
   12aa0:	ldr	r0, [pc, #104]	; 12b10 <error@@Base+0x1228>
   12aa4:	add	r1, pc, r0
   12aa8:	ldr	r0, [fp, #-4]
   12aac:	ldr	r2, [fp, #-8]
   12ab0:	ldr	r2, [r2]
   12ab4:	ldr	r3, [fp, #-8]
   12ab8:	ldr	r3, [r3, #4]
   12abc:	bl	108c0 <fprintf@plt>
   12ac0:	ldr	r1, [fp, #-4]
   12ac4:	ldr	r2, [fp, #-8]
   12ac8:	str	r0, [sp, #12]
   12acc:	mov	r0, r1
   12ad0:	mov	r1, r2
   12ad4:	bl	12640 <error@@Base+0xd58>
   12ad8:	b	12af0 <error@@Base+0x1208>
   12adc:	ldr	r0, [pc, #40]	; 12b0c <error@@Base+0x1224>
   12ae0:	add	r0, pc, r0
   12ae4:	ldr	r1, [fp, #-4]
   12ae8:	bl	10914 <fputs@plt>
   12aec:	str	r0, [sp, #8]
   12af0:	ldr	r0, [pc, #28]	; 12b14 <error@@Base+0x122c>
   12af4:	add	r0, pc, r0
   12af8:	ldr	r1, [fp, #-4]
   12afc:	bl	10914 <fputs@plt>
   12b00:	str	r0, [sp, #4]
   12b04:	mov	sp, fp
   12b08:	pop	{fp, pc}
   12b0c:	andeq	r0, r0, r1, lsl pc
   12b10:	andeq	r0, r0, r2, asr #30
   12b14:	andeq	r0, r0, r8, lsl pc
   12b18:	push	{fp, lr}
   12b1c:	mov	fp, sp
   12b20:	sub	sp, sp, #8
   12b24:	ldr	r2, [pc, #36]	; 12b50 <error@@Base+0x1268>
   12b28:	ldr	r2, [pc, r2]
   12b2c:	str	r0, [sp, #4]
   12b30:	str	r1, [sp]
   12b34:	ldr	r0, [sp, #4]
   12b38:	ldr	r0, [r0, #8]
   12b3c:	ldr	r1, [sp]
   12b40:	ldr	r1, [r1, #8]
   12b44:	blx	r2
   12b48:	mov	sp, fp
   12b4c:	pop	{fp, pc}
   12b50:	andeq	r1, r1, r4, lsr #11
   12b54:	sub	sp, sp, #4
   12b58:	str	r0, [sp]
   12b5c:	ldr	r0, [sp]
   12b60:	movw	r1, #0
   12b64:	str	r1, [r0, #4]
   12b68:	ldr	r0, [sp]
   12b6c:	str	r1, [r0]
   12b70:	ldr	r0, [sp]
   12b74:	str	r1, [r0, #8]
   12b78:	ldr	r0, [sp]
   12b7c:	str	r1, [r0, #12]
   12b80:	add	sp, sp, #4
   12b84:	bx	lr
   12b88:	push	{fp, lr}
   12b8c:	mov	fp, sp
   12b90:	sub	sp, sp, #8
   12b94:	str	r0, [sp, #4]
   12b98:	str	r1, [sp]
   12b9c:	ldr	r0, [sp, #4]
   12ba0:	ldr	r2, [sp]
   12ba4:	ldr	r1, [sp, #4]
   12ba8:	ldr	r3, [r1]
   12bac:	movw	r1, #0
   12bb0:	bl	12bbc <error@@Base+0x12d4>
   12bb4:	mov	sp, fp
   12bb8:	pop	{fp, pc}
   12bbc:	push	{fp, lr}
   12bc0:	mov	fp, sp
   12bc4:	sub	sp, sp, #16
   12bc8:	str	r0, [fp, #-4]
   12bcc:	str	r1, [sp, #8]
   12bd0:	str	r2, [sp, #4]
   12bd4:	str	r3, [sp]
   12bd8:	ldr	r0, [sp, #8]
   12bdc:	ldr	r1, [sp, #4]
   12be0:	str	r0, [r1]
   12be4:	ldr	r0, [sp]
   12be8:	ldr	r1, [sp, #4]
   12bec:	str	r0, [r1, #4]
   12bf0:	ldr	r0, [sp, #8]
   12bf4:	movw	r1, #0
   12bf8:	cmp	r0, r1
   12bfc:	beq	12c10 <error@@Base+0x1328>
   12c00:	ldr	r0, [sp, #4]
   12c04:	ldr	r1, [sp, #8]
   12c08:	str	r0, [r1, #4]
   12c0c:	b	12c1c <error@@Base+0x1334>
   12c10:	ldr	r0, [sp, #4]
   12c14:	ldr	r1, [fp, #-4]
   12c18:	str	r0, [r1]
   12c1c:	ldr	r0, [sp]
   12c20:	movw	r1, #0
   12c24:	cmp	r0, r1
   12c28:	beq	12c3c <error@@Base+0x1354>
   12c2c:	ldr	r0, [sp, #4]
   12c30:	ldr	r1, [sp]
   12c34:	str	r0, [r1]
   12c38:	b	12c48 <error@@Base+0x1360>
   12c3c:	ldr	r0, [sp, #4]
   12c40:	ldr	r1, [fp, #-4]
   12c44:	str	r0, [r1, #4]
   12c48:	ldr	r0, [fp, #-4]
   12c4c:	bl	12dd0 <error@@Base+0x14e8>
   12c50:	ldr	r0, [fp, #-4]
   12c54:	ldr	lr, [r0, #12]
   12c58:	add	lr, lr, #1
   12c5c:	str	lr, [r0, #12]
   12c60:	mov	sp, fp
   12c64:	pop	{fp, pc}
   12c68:	push	{fp, lr}
   12c6c:	mov	fp, sp
   12c70:	sub	sp, sp, #8
   12c74:	str	r0, [sp, #4]
   12c78:	str	r1, [sp]
   12c7c:	ldr	r0, [sp, #4]
   12c80:	ldr	r1, [sp, #4]
   12c84:	ldr	r1, [r1, #4]
   12c88:	ldr	r2, [sp]
   12c8c:	movw	r3, #0
   12c90:	bl	12bbc <error@@Base+0x12d4>
   12c94:	mov	sp, fp
   12c98:	pop	{fp, pc}
   12c9c:	push	{fp, lr}
   12ca0:	mov	fp, sp
   12ca4:	sub	sp, sp, #16
   12ca8:	str	r0, [fp, #-4]
   12cac:	str	r1, [sp, #8]
   12cb0:	str	r2, [sp, #4]
   12cb4:	ldr	r0, [fp, #-4]
   12cb8:	ldr	r1, [sp, #4]
   12cbc:	ldr	r1, [r1]
   12cc0:	ldr	r2, [sp, #8]
   12cc4:	ldr	r3, [sp, #4]
   12cc8:	bl	12bbc <error@@Base+0x12d4>
   12ccc:	mov	sp, fp
   12cd0:	pop	{fp, pc}
   12cd4:	push	{fp, lr}
   12cd8:	mov	fp, sp
   12cdc:	sub	sp, sp, #16
   12ce0:	str	r0, [fp, #-4]
   12ce4:	str	r1, [sp, #8]
   12ce8:	str	r2, [sp, #4]
   12cec:	ldr	r0, [fp, #-4]
   12cf0:	ldr	r1, [sp, #8]
   12cf4:	ldr	r2, [sp, #4]
   12cf8:	ldr	r3, [sp, #8]
   12cfc:	ldr	r3, [r3, #4]
   12d00:	bl	12bbc <error@@Base+0x12d4>
   12d04:	mov	sp, fp
   12d08:	pop	{fp, pc}
   12d0c:	push	{fp, lr}
   12d10:	mov	fp, sp
   12d14:	sub	sp, sp, #8
   12d18:	str	r0, [sp, #4]
   12d1c:	str	r1, [sp]
   12d20:	ldr	r0, [sp]
   12d24:	ldr	r0, [r0]
   12d28:	movw	r1, #0
   12d2c:	cmp	r0, r1
   12d30:	beq	12d4c <error@@Base+0x1464>
   12d34:	ldr	r0, [sp]
   12d38:	ldr	r0, [r0, #4]
   12d3c:	ldr	r1, [sp]
   12d40:	ldr	r1, [r1]
   12d44:	str	r0, [r1, #4]
   12d48:	b	12d5c <error@@Base+0x1474>
   12d4c:	ldr	r0, [sp]
   12d50:	ldr	r0, [r0, #4]
   12d54:	ldr	r1, [sp, #4]
   12d58:	str	r0, [r1]
   12d5c:	ldr	r0, [sp]
   12d60:	ldr	r0, [r0, #4]
   12d64:	movw	r1, #0
   12d68:	cmp	r0, r1
   12d6c:	beq	12d88 <error@@Base+0x14a0>
   12d70:	ldr	r0, [sp]
   12d74:	ldr	r0, [r0]
   12d78:	ldr	r1, [sp]
   12d7c:	ldr	r1, [r1, #4]
   12d80:	str	r0, [r1]
   12d84:	b	12d98 <error@@Base+0x14b0>
   12d88:	ldr	r0, [sp]
   12d8c:	ldr	r0, [r0]
   12d90:	ldr	r1, [sp, #4]
   12d94:	str	r0, [r1, #4]
   12d98:	ldr	r0, [sp]
   12d9c:	movw	r1, #0
   12da0:	str	r1, [r0, #4]
   12da4:	ldr	r0, [sp]
   12da8:	str	r1, [r0]
   12dac:	ldr	r0, [sp, #4]
   12db0:	bl	12dd0 <error@@Base+0x14e8>
   12db4:	ldr	r0, [sp, #4]
   12db8:	ldr	r1, [r0, #12]
   12dbc:	mvn	lr, #0
   12dc0:	add	r1, r1, lr
   12dc4:	str	r1, [r0, #12]
   12dc8:	mov	sp, fp
   12dcc:	pop	{fp, pc}
   12dd0:	push	{fp, lr}
   12dd4:	mov	fp, sp
   12dd8:	sub	sp, sp, #8
   12ddc:	str	r0, [sp, #4]
   12de0:	ldr	r0, [sp, #4]
   12de4:	ldr	r0, [r0, #8]
   12de8:	movw	r1, #0
   12dec:	cmp	r0, r1
   12df0:	beq	12e0c <error@@Base+0x1524>
   12df4:	ldr	r0, [sp, #4]
   12df8:	ldr	r0, [r0, #8]
   12dfc:	bl	10854 <free@plt>
   12e00:	ldr	r0, [sp, #4]
   12e04:	movw	lr, #0
   12e08:	str	lr, [r0, #8]
   12e0c:	mov	sp, fp
   12e10:	pop	{fp, pc}
   12e14:	push	{fp, lr}
   12e18:	mov	fp, sp
   12e1c:	sub	sp, sp, #16
   12e20:	str	r0, [fp, #-4]
   12e24:	movw	r0, #0
   12e28:	str	r0, [sp, #4]
   12e2c:	ldr	r1, [fp, #-4]
   12e30:	ldr	r1, [r1, #8]
   12e34:	cmp	r1, r0
   12e38:	bne	12e4c <error@@Base+0x1564>
   12e3c:	ldr	r0, [fp, #-4]
   12e40:	ldr	r0, [r0, #12]
   12e44:	cmp	r0, #0
   12e48:	bne	12e50 <error@@Base+0x1568>
   12e4c:	b	12ec8 <error@@Base+0x15e0>
   12e50:	ldr	r0, [pc, #120]	; 12ed0 <error@@Base+0x15e8>
   12e54:	ldr	r0, [pc, r0]
   12e58:	ldr	r1, [fp, #-4]
   12e5c:	ldr	r1, [r1, #12]
   12e60:	str	r0, [sp]
   12e64:	mov	r0, r1
   12e68:	movw	r1, #4
   12e6c:	ldr	r2, [sp]
   12e70:	blx	r2
   12e74:	ldr	r1, [fp, #-4]
   12e78:	str	r0, [r1, #8]
   12e7c:	ldr	r0, [fp, #-4]
   12e80:	ldr	r0, [r0]
   12e84:	str	r0, [sp, #8]
   12e88:	ldr	r0, [sp, #8]
   12e8c:	movw	r1, #0
   12e90:	cmp	r0, r1
   12e94:	beq	12ec8 <error@@Base+0x15e0>
   12e98:	ldr	r0, [sp, #8]
   12e9c:	ldr	r1, [fp, #-4]
   12ea0:	ldr	r1, [r1, #8]
   12ea4:	ldr	r2, [sp, #4]
   12ea8:	add	r3, r2, #1
   12eac:	str	r3, [sp, #4]
   12eb0:	add	r1, r1, r2, lsl #2
   12eb4:	str	r0, [r1]
   12eb8:	ldr	r0, [sp, #8]
   12ebc:	ldr	r0, [r0, #4]
   12ec0:	str	r0, [sp, #8]
   12ec4:	b	12e88 <error@@Base+0x15a0>
   12ec8:	mov	sp, fp
   12ecc:	pop	{fp, pc}
   12ed0:	andeq	r1, r1, r0, lsl #5
   12ed4:	push	{fp, lr}
   12ed8:	mov	fp, sp
   12edc:	sub	sp, sp, #16
   12ee0:	str	r0, [fp, #-4]
   12ee4:	str	r1, [sp, #8]
   12ee8:	ldr	r0, [fp, #-4]
   12eec:	ldr	r0, [r0]
   12ef0:	movw	r1, #0
   12ef4:	cmp	r0, r1
   12ef8:	beq	12f30 <error@@Base+0x1648>
   12efc:	ldr	r0, [fp, #-4]
   12f00:	ldr	r0, [r0]
   12f04:	str	r0, [sp, #4]
   12f08:	ldr	r0, [fp, #-4]
   12f0c:	ldr	r1, [sp, #4]
   12f10:	bl	12d0c <error@@Base+0x1424>
   12f14:	ldr	r0, [sp, #8]
   12f18:	ldr	r1, [sp, #4]
   12f1c:	str	r0, [sp]
   12f20:	mov	r0, r1
   12f24:	ldr	r1, [sp]
   12f28:	blx	r1
   12f2c:	b	12ee8 <error@@Base+0x1600>
   12f30:	mov	sp, fp
   12f34:	pop	{fp, pc}
   12f38:	push	{fp, lr}
   12f3c:	mov	fp, sp
   12f40:	sub	sp, sp, #16
   12f44:	str	r0, [fp, #-4]
   12f48:	str	r1, [sp, #8]
   12f4c:	str	r2, [sp, #4]
   12f50:	ldr	r0, [fp, #-4]
   12f54:	cmp	r0, #2
   12f58:	bge	12f60 <error@@Base+0x1678>
   12f5c:	b	12f90 <error@@Base+0x16a8>
   12f60:	ldr	r0, [pc, #48]	; 12f98 <error@@Base+0x16b0>
   12f64:	add	r0, pc, r0
   12f68:	ldr	r1, [pc, #44]	; 12f9c <error@@Base+0x16b4>
   12f6c:	add	r1, pc, r1
   12f70:	ldr	r2, [sp, #8]
   12f74:	str	r2, [r1]
   12f78:	ldr	r1, [sp, #4]
   12f7c:	str	r1, [r0]
   12f80:	ldr	r0, [fp, #-4]
   12f84:	sub	r1, r0, #1
   12f88:	movw	r0, #0
   12f8c:	bl	12fa0 <error@@Base+0x16b8>
   12f90:	mov	sp, fp
   12f94:	pop	{fp, pc}
   12f98:	andeq	r1, r1, r4, lsl #4
   12f9c:	strdeq	r1, [r1], -r8
   12fa0:	push	{fp, lr}
   12fa4:	mov	fp, sp
   12fa8:	sub	sp, sp, #40	; 0x28
   12fac:	str	r0, [fp, #-4]
   12fb0:	str	r1, [fp, #-8]
   12fb4:	ldr	r0, [fp, #-4]
   12fb8:	str	r0, [fp, #-12]
   12fbc:	ldr	r0, [fp, #-8]
   12fc0:	str	r0, [fp, #-16]
   12fc4:	ldr	r0, [pc, #500]	; 131c0 <error@@Base+0x18d8>
   12fc8:	ldr	r0, [pc, r0]
   12fcc:	ldr	r1, [fp, #-12]
   12fd0:	add	r0, r0, r1, lsl #2
   12fd4:	ldr	r0, [r0]
   12fd8:	str	r0, [sp, #20]
   12fdc:	ldr	r0, [fp, #-12]
   12fe0:	ldr	r1, [fp, #-16]
   12fe4:	cmp	r0, r1
   12fe8:	bge	13154 <error@@Base+0x186c>
   12fec:	b	12ff0 <error@@Base+0x1708>
   12ff0:	ldr	r0, [fp, #-12]
   12ff4:	ldr	r1, [fp, #-16]
   12ff8:	cmp	r0, r1
   12ffc:	movw	r0, #0
   13000:	str	r0, [sp, #16]
   13004:	bge	1304c <error@@Base+0x1764>
   13008:	ldr	r0, [pc, #436]	; 131c4 <error@@Base+0x18dc>
   1300c:	ldr	r0, [pc, r0]
   13010:	ldr	r1, [sp, #20]
   13014:	ldr	r2, [pc, #428]	; 131c8 <error@@Base+0x18e0>
   13018:	ldr	r2, [pc, r2]
   1301c:	ldr	r3, [fp, #-16]
   13020:	add	r2, r2, r3, lsl #2
   13024:	ldr	r2, [r2]
   13028:	str	r0, [sp, #12]
   1302c:	mov	r0, r1
   13030:	mov	r1, r2
   13034:	ldr	r2, [sp, #12]
   13038:	blx	r2
   1303c:	cmp	r0, #0
   13040:	movw	r0, #0
   13044:	movlt	r0, #1
   13048:	str	r0, [sp, #16]
   1304c:	ldr	r0, [sp, #16]
   13050:	tst	r0, #1
   13054:	beq	1306c <error@@Base+0x1784>
   13058:	ldr	r0, [fp, #-16]
   1305c:	mvn	r1, #0
   13060:	add	r0, r0, r1
   13064:	str	r0, [fp, #-16]
   13068:	b	12ff0 <error@@Base+0x1708>
   1306c:	ldr	r0, [fp, #-12]
   13070:	ldr	r1, [fp, #-16]
   13074:	cmp	r0, r1
   13078:	beq	130a0 <error@@Base+0x17b8>
   1307c:	ldr	r0, [pc, #328]	; 131cc <error@@Base+0x18e4>
   13080:	ldr	r0, [pc, r0]
   13084:	ldr	r1, [fp, #-16]
   13088:	ldr	r1, [r0, r1, lsl #2]
   1308c:	ldr	r2, [fp, #-12]
   13090:	add	r3, r2, #1
   13094:	str	r3, [fp, #-12]
   13098:	add	r0, r0, r2, lsl #2
   1309c:	str	r1, [r0]
   130a0:	b	130a4 <error@@Base+0x17bc>
   130a4:	ldr	r0, [fp, #-12]
   130a8:	ldr	r1, [fp, #-16]
   130ac:	cmp	r0, r1
   130b0:	movw	r0, #0
   130b4:	str	r0, [sp, #8]
   130b8:	bge	13100 <error@@Base+0x1818>
   130bc:	ldr	r0, [pc, #268]	; 131d0 <error@@Base+0x18e8>
   130c0:	ldr	r0, [pc, r0]
   130c4:	ldr	r1, [sp, #20]
   130c8:	ldr	r2, [pc, #260]	; 131d4 <error@@Base+0x18ec>
   130cc:	ldr	r2, [pc, r2]
   130d0:	ldr	r3, [fp, #-12]
   130d4:	add	r2, r2, r3, lsl #2
   130d8:	ldr	r2, [r2]
   130dc:	str	r0, [sp, #4]
   130e0:	mov	r0, r1
   130e4:	mov	r1, r2
   130e8:	ldr	r2, [sp, #4]
   130ec:	blx	r2
   130f0:	cmp	r0, #0
   130f4:	movw	r0, #0
   130f8:	movgt	r0, #1
   130fc:	str	r0, [sp, #8]
   13100:	ldr	r0, [sp, #8]
   13104:	tst	r0, #1
   13108:	beq	1311c <error@@Base+0x1834>
   1310c:	ldr	r0, [fp, #-12]
   13110:	add	r0, r0, #1
   13114:	str	r0, [fp, #-12]
   13118:	b	130a4 <error@@Base+0x17bc>
   1311c:	ldr	r0, [fp, #-12]
   13120:	ldr	r1, [fp, #-16]
   13124:	cmp	r0, r1
   13128:	beq	13150 <error@@Base+0x1868>
   1312c:	ldr	r0, [pc, #164]	; 131d8 <error@@Base+0x18f0>
   13130:	ldr	r0, [pc, r0]
   13134:	ldr	r1, [fp, #-12]
   13138:	ldr	r1, [r0, r1, lsl #2]
   1313c:	ldr	r2, [fp, #-16]
   13140:	sub	r3, r2, #1
   13144:	str	r3, [fp, #-16]
   13148:	add	r0, r0, r2, lsl #2
   1314c:	str	r1, [r0]
   13150:	b	12fdc <error@@Base+0x16f4>
   13154:	ldr	r0, [sp, #20]
   13158:	ldr	r1, [pc, #124]	; 131dc <error@@Base+0x18f4>
   1315c:	ldr	r1, [pc, r1]
   13160:	ldr	r2, [fp, #-16]
   13164:	add	r1, r1, r2, lsl #2
   13168:	str	r0, [r1]
   1316c:	ldr	r0, [fp, #-4]
   13170:	ldr	r1, [fp, #-16]
   13174:	mvn	r2, #0
   13178:	add	r1, r1, r2
   1317c:	str	r1, [fp, #-16]
   13180:	cmp	r0, r1
   13184:	bge	13194 <error@@Base+0x18ac>
   13188:	ldr	r0, [fp, #-4]
   1318c:	ldr	r1, [fp, #-16]
   13190:	bl	12fa0 <error@@Base+0x16b8>
   13194:	ldr	r0, [fp, #-12]
   13198:	add	r0, r0, #1
   1319c:	str	r0, [fp, #-12]
   131a0:	ldr	r1, [fp, #-8]
   131a4:	cmp	r0, r1
   131a8:	bge	131b8 <error@@Base+0x18d0>
   131ac:	ldr	r0, [fp, #-12]
   131b0:	ldr	r1, [fp, #-8]
   131b4:	bl	12fa0 <error@@Base+0x16b8>
   131b8:	mov	sp, fp
   131bc:	pop	{fp, pc}
   131c0:	muleq	r1, ip, r1
   131c4:	andeq	r1, r1, ip, asr r1
   131c8:	andeq	r1, r1, ip, asr #2
   131cc:	andeq	r1, r1, r4, ror #1
   131d0:	andeq	r1, r1, r8, lsr #1
   131d4:	muleq	r1, r8, r0
   131d8:	andeq	r1, r1, r4, lsr r0
   131dc:	andeq	r1, r1, r8
   131e0:	push	{fp, lr}
   131e4:	mov	fp, sp
   131e8:	sub	sp, sp, #16
   131ec:	str	r0, [fp, #-4]
   131f0:	movw	r0, #0
   131f4:	strh	r0, [fp, #-6]
   131f8:	ldrsh	r0, [fp, #-6]
   131fc:	movw	r1, #503	; 0x1f7
   13200:	cmp	r0, r1
   13204:	bge	13240 <error@@Base+0x1958>
   13208:	ldr	r0, [pc, #92]	; 1326c <error@@Base+0x1984>
   1320c:	ldr	r0, [pc, r0]
   13210:	ldr	r1, [fp, #-4]
   13214:	ldrsh	r2, [fp, #-6]
   13218:	add	r1, r1, r2, lsl #4
   1321c:	str	r0, [sp, #4]
   13220:	mov	r0, r1
   13224:	ldr	r1, [sp, #4]
   13228:	blx	r1
   1322c:	ldrh	r0, [fp, #-6]
   13230:	movw	r1, #1
   13234:	add	r0, r0, r1
   13238:	strh	r0, [fp, #-6]
   1323c:	b	131f8 <error@@Base+0x1910>
   13240:	ldr	r0, [fp, #-4]
   13244:	movw	r1, #8048	; 0x1f70
   13248:	add	r0, r0, r1
   1324c:	movw	r1, #0
   13250:	str	r1, [r0]
   13254:	ldr	r0, [fp, #-4]
   13258:	movw	r2, #8052	; 0x1f74
   1325c:	add	r0, r0, r2
   13260:	str	r1, [r0]
   13264:	mov	sp, fp
   13268:	pop	{fp, pc}
   1326c:			; <UNDEFINED> instruction: 0x00010ebc
   13270:	push	{fp, lr}
   13274:	mov	fp, sp
   13278:	sub	sp, sp, #24
   1327c:	str	r0, [fp, #-4]
   13280:	str	r1, [fp, #-8]
   13284:	ldr	r0, [fp, #-4]
   13288:	ldr	r1, [fp, #-8]
   1328c:	str	r0, [sp, #8]
   13290:	mov	r0, r1
   13294:	bl	13314 <error@@Base+0x1a2c>
   13298:	mov	r1, r0
   1329c:	ldr	lr, [sp, #8]
   132a0:	add	r0, lr, r0, lsl #4
   132a4:	ldr	r0, [r0]
   132a8:	str	r0, [sp, #12]
   132ac:	str	r1, [sp, #4]
   132b0:	ldr	r0, [sp, #12]
   132b4:	movw	r1, #0
   132b8:	cmp	r0, r1
   132bc:	movw	r0, #0
   132c0:	str	r0, [sp]
   132c4:	beq	132e8 <error@@Base+0x1a00>
   132c8:	ldr	r0, [fp, #-8]
   132cc:	ldr	r1, [sp, #12]
   132d0:	ldr	r1, [r1, #8]
   132d4:	bl	10830 <strcmp@plt>
   132d8:	cmp	r0, #0
   132dc:	movw	r0, #0
   132e0:	movne	r0, #1
   132e4:	str	r0, [sp]
   132e8:	ldr	r0, [sp]
   132ec:	tst	r0, #1
   132f0:	beq	13308 <error@@Base+0x1a20>
   132f4:	b	132f8 <error@@Base+0x1a10>
   132f8:	ldr	r0, [sp, #12]
   132fc:	ldr	r0, [r0, #4]
   13300:	str	r0, [sp, #12]
   13304:	b	132b0 <error@@Base+0x19c8>
   13308:	ldr	r0, [sp, #12]
   1330c:	mov	sp, fp
   13310:	pop	{fp, pc}
   13314:	sub	sp, sp, #16
   13318:	str	r0, [sp, #12]
   1331c:	ldr	r0, [sp, #12]
   13320:	str	r0, [sp, #8]
   13324:	movw	r0, #0
   13328:	str	r0, [sp]
   1332c:	str	r0, [sp, #4]
   13330:	ldr	r0, [sp, #8]
   13334:	ldr	r1, [sp, #4]
   13338:	add	r0, r0, r1
   1333c:	ldrsb	r0, [r0]
   13340:	cmp	r0, #0
   13344:	beq	13374 <error@@Base+0x1a8c>
   13348:	ldr	r0, [sp, #8]
   1334c:	ldr	r1, [sp, #4]
   13350:	add	r0, r0, r1
   13354:	ldrb	r0, [r0]
   13358:	ldr	r1, [sp]
   1335c:	add	r0, r1, r0
   13360:	str	r0, [sp]
   13364:	ldr	r0, [sp, #4]
   13368:	add	r0, r0, #1
   1336c:	str	r0, [sp, #4]
   13370:	b	13330 <error@@Base+0x1a48>
   13374:	ldr	r0, [sp]
   13378:	movw	r1, #20065	; 0x4e61
   1337c:	movt	r1, #33354	; 0x824a
   13380:	smmla	r1, r0, r1, r0
   13384:	asr	r2, r1, #8
   13388:	add	r1, r2, r1, lsr #31
   1338c:	movw	r2, #503	; 0x1f7
   13390:	mls	r0, r1, r2, r0
   13394:	sxth	r0, r0
   13398:	add	sp, sp, #16
   1339c:	bx	lr
   133a0:	push	{fp, lr}
   133a4:	mov	fp, sp
   133a8:	sub	sp, sp, #24
   133ac:	ldr	r2, [pc, #112]	; 13424 <error@@Base+0x1b3c>
   133b0:	ldr	r2, [pc, r2]
   133b4:	str	r0, [fp, #-4]
   133b8:	str	r1, [fp, #-8]
   133bc:	ldr	r0, [fp, #-4]
   133c0:	ldr	r1, [fp, #-8]
   133c4:	ldr	r1, [r1, #8]
   133c8:	str	r0, [sp, #12]
   133cc:	mov	r0, r1
   133d0:	str	r2, [sp, #8]
   133d4:	bl	13314 <error@@Base+0x1a2c>
   133d8:	mov	r1, r0
   133dc:	ldr	r2, [sp, #12]
   133e0:	add	r0, r2, r0, lsl #4
   133e4:	ldr	lr, [fp, #-8]
   133e8:	str	r1, [sp, #4]
   133ec:	mov	r1, lr
   133f0:	ldr	lr, [sp, #8]
   133f4:	blx	lr
   133f8:	ldr	r0, [fp, #-4]
   133fc:	bl	13428 <error@@Base+0x1b40>
   13400:	ldr	r0, [fp, #-4]
   13404:	movw	r1, #8052	; 0x1f74
   13408:	add	r2, r0, r1
   1340c:	ldr	r2, [r2]
   13410:	add	r2, r2, #1
   13414:	add	r0, r0, r1
   13418:	str	r2, [r0]
   1341c:	mov	sp, fp
   13420:	pop	{fp, pc}
   13424:			; <UNDEFINED> instruction: 0x00010cb8
   13428:	push	{fp, lr}
   1342c:	mov	fp, sp
   13430:	sub	sp, sp, #8
   13434:	str	r0, [sp, #4]
   13438:	ldr	r0, [sp, #4]
   1343c:	movw	r1, #8048	; 0x1f70
   13440:	add	r0, r0, r1
   13444:	ldr	r0, [r0]
   13448:	movw	r1, #0
   1344c:	cmp	r0, r1
   13450:	beq	1347c <error@@Base+0x1b94>
   13454:	ldr	r0, [sp, #4]
   13458:	movw	r1, #8048	; 0x1f70
   1345c:	add	r0, r0, r1
   13460:	ldr	r0, [r0]
   13464:	bl	10854 <free@plt>
   13468:	ldr	r0, [sp, #4]
   1346c:	movw	r1, #8048	; 0x1f70
   13470:	add	r0, r0, r1
   13474:	movw	r1, #0
   13478:	str	r1, [r0]
   1347c:	mov	sp, fp
   13480:	pop	{fp, pc}
   13484:	push	{fp, lr}
   13488:	mov	fp, sp
   1348c:	sub	sp, sp, #24
   13490:	ldr	r2, [pc, #116]	; 1350c <error@@Base+0x1c24>
   13494:	ldr	r2, [pc, r2]
   13498:	str	r0, [fp, #-4]
   1349c:	str	r1, [fp, #-8]
   134a0:	ldr	r0, [fp, #-4]
   134a4:	ldr	r1, [fp, #-8]
   134a8:	ldr	r1, [r1, #8]
   134ac:	str	r0, [sp, #12]
   134b0:	mov	r0, r1
   134b4:	str	r2, [sp, #8]
   134b8:	bl	13314 <error@@Base+0x1a2c>
   134bc:	mov	r1, r0
   134c0:	ldr	r2, [sp, #12]
   134c4:	add	r0, r2, r0, lsl #4
   134c8:	ldr	lr, [fp, #-8]
   134cc:	str	r1, [sp, #4]
   134d0:	mov	r1, lr
   134d4:	ldr	lr, [sp, #8]
   134d8:	blx	lr
   134dc:	ldr	r0, [fp, #-4]
   134e0:	bl	13428 <error@@Base+0x1b40>
   134e4:	ldr	r0, [fp, #-4]
   134e8:	movw	r1, #8052	; 0x1f74
   134ec:	add	r2, r0, r1
   134f0:	ldr	r2, [r2]
   134f4:	mvn	lr, #0
   134f8:	add	r2, r2, lr
   134fc:	add	r0, r0, r1
   13500:	str	r2, [r0]
   13504:	mov	sp, fp
   13508:	pop	{fp, pc}
   1350c:	andeq	r0, r1, ip, asr #24
   13510:	push	{fp, lr}
   13514:	mov	fp, sp
   13518:	sub	sp, sp, #24
   1351c:	str	r0, [fp, #-4]
   13520:	movw	r0, #0
   13524:	str	r0, [sp, #8]
   13528:	ldr	r1, [fp, #-4]
   1352c:	movw	r2, #8048	; 0x1f70
   13530:	add	r1, r1, r2
   13534:	ldr	r1, [r1]
   13538:	cmp	r1, r0
   1353c:	bne	13558 <error@@Base+0x1c70>
   13540:	ldr	r0, [fp, #-4]
   13544:	movw	r1, #8052	; 0x1f74
   13548:	add	r0, r0, r1
   1354c:	ldr	r0, [r0]
   13550:	cmp	r0, #0
   13554:	bne	1355c <error@@Base+0x1c74>
   13558:	b	1361c <error@@Base+0x1d34>
   1355c:	ldr	r0, [pc, #192]	; 13624 <error@@Base+0x1d3c>
   13560:	ldr	r0, [pc, r0]
   13564:	ldr	r1, [fp, #-4]
   13568:	movw	r2, #8052	; 0x1f74
   1356c:	add	r1, r1, r2
   13570:	ldr	r1, [r1]
   13574:	str	r0, [sp, #4]
   13578:	mov	r0, r1
   1357c:	movw	r1, #4
   13580:	ldr	r2, [sp, #4]
   13584:	blx	r2
   13588:	ldr	r1, [fp, #-4]
   1358c:	movw	r2, #8048	; 0x1f70
   13590:	add	r1, r1, r2
   13594:	str	r0, [r1]
   13598:	movw	r0, #0
   1359c:	str	r0, [sp, #12]
   135a0:	ldr	r0, [sp, #12]
   135a4:	movw	r1, #503	; 0x1f7
   135a8:	cmp	r0, r1
   135ac:	bge	1361c <error@@Base+0x1d34>
   135b0:	ldr	r0, [fp, #-4]
   135b4:	ldr	r1, [sp, #12]
   135b8:	add	r0, r0, r1, lsl #4
   135bc:	ldr	r0, [r0]
   135c0:	str	r0, [fp, #-8]
   135c4:	ldr	r0, [fp, #-8]
   135c8:	movw	r1, #0
   135cc:	cmp	r0, r1
   135d0:	beq	13608 <error@@Base+0x1d20>
   135d4:	ldr	r0, [fp, #-8]
   135d8:	ldr	r1, [fp, #-4]
   135dc:	movw	r2, #8048	; 0x1f70
   135e0:	ldr	r1, [r1, r2]
   135e4:	ldr	r2, [sp, #8]
   135e8:	add	r3, r2, #1
   135ec:	str	r3, [sp, #8]
   135f0:	add	r1, r1, r2, lsl #2
   135f4:	str	r0, [r1]
   135f8:	ldr	r0, [fp, #-8]
   135fc:	ldr	r0, [r0, #4]
   13600:	str	r0, [fp, #-8]
   13604:	b	135c4 <error@@Base+0x1cdc>
   13608:	b	1360c <error@@Base+0x1d24>
   1360c:	ldr	r0, [sp, #12]
   13610:	add	r0, r0, #1
   13614:	str	r0, [sp, #12]
   13618:	b	135a0 <error@@Base+0x1cb8>
   1361c:	mov	sp, fp
   13620:	pop	{fp, pc}
   13624:	andeq	r0, r1, r4, ror fp
   13628:	push	{fp, lr}
   1362c:	mov	fp, sp
   13630:	sub	sp, sp, #16
   13634:	str	r0, [fp, #-4]
   13638:	str	r1, [sp, #8]
   1363c:	movw	r0, #0
   13640:	strh	r0, [sp, #6]
   13644:	ldrsh	r0, [sp, #6]
   13648:	movw	r1, #503	; 0x1f7
   1364c:	cmp	r0, r1
   13650:	bge	13694 <error@@Base+0x1dac>
   13654:	ldr	r0, [pc, #92]	; 136b8 <error@@Base+0x1dd0>
   13658:	ldr	r0, [pc, r0]
   1365c:	ldr	r1, [fp, #-4]
   13660:	ldrsh	r2, [sp, #6]
   13664:	add	r1, r1, r2, lsl #4
   13668:	ldr	r2, [sp, #8]
   1366c:	str	r0, [sp]
   13670:	mov	r0, r1
   13674:	mov	r1, r2
   13678:	ldr	r2, [sp]
   1367c:	blx	r2
   13680:	ldrh	r0, [sp, #6]
   13684:	movw	r1, #1
   13688:	add	r0, r0, r1
   1368c:	strh	r0, [sp, #6]
   13690:	b	13644 <error@@Base+0x1d5c>
   13694:	ldr	r0, [fp, #-4]
   13698:	bl	13428 <error@@Base+0x1b40>
   1369c:	ldr	r0, [fp, #-4]
   136a0:	movw	lr, #8052	; 0x1f74
   136a4:	add	r0, r0, lr
   136a8:	movw	lr, #0
   136ac:	str	lr, [r0]
   136b0:	mov	sp, fp
   136b4:	pop	{fp, pc}
   136b8:	andeq	r0, r1, r4, lsl #21
   136bc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   136c0:	mov	r7, r0
   136c4:	ldr	r6, [pc, #72]	; 13714 <error@@Base+0x1e2c>
   136c8:	ldr	r5, [pc, #72]	; 13718 <error@@Base+0x1e30>
   136cc:	add	r6, pc, r6
   136d0:	add	r5, pc, r5
   136d4:	sub	r6, r6, r5
   136d8:	mov	r8, r1
   136dc:	mov	r9, r2
   136e0:	bl	10804 <calloc@plt-0x20>
   136e4:	asrs	r6, r6, #2
   136e8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   136ec:	mov	r4, #0
   136f0:	add	r4, r4, #1
   136f4:	ldr	r3, [r5], #4
   136f8:	mov	r2, r9
   136fc:	mov	r1, r8
   13700:	mov	r0, r7
   13704:	blx	r3
   13708:	cmp	r6, r4
   1370c:	bne	136f0 <error@@Base+0x1e08>
   13710:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13714:	andeq	r0, r1, r8, lsr #16
   13718:	andeq	r0, r1, r0, lsr #16
   1371c:	bx	lr
   13720:	mov	r2, r1
   13724:	mov	r1, r0
   13728:	mov	r0, #3
   1372c:	b	10878 <__xstat@plt>

Disassembly of section .fini:

00013730 <.fini>:
   13730:	push	{r3, lr}
   13734:	pop	{r3, pc}
