
../repos/prog2/MT2E1-2:     file format elf32-littlearm


Disassembly of section .init:

00010e4c <.init>:
   10e4c:	push	{r3, lr}
   10e50:	bl	11218 <_start@@Base+0x3c>
   10e54:	pop	{r3, pc}

Disassembly of section .plt:

00010e58 <calloc@plt-0x14>:
   10e58:	push	{lr}		; (str lr, [sp, #-4]!)
   10e5c:	ldr	lr, [pc, #4]	; 10e68 <calloc@plt-0x4>
   10e60:	add	lr, pc, lr
   10e64:	ldr	pc, [lr, #8]!
   10e68:	muleq	r1, r8, r1

00010e6c <calloc@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #73728	; 0x12000
   10e74:	ldr	pc, [ip, #408]!	; 0x198

00010e78 <strcmp@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #73728	; 0x12000
   10e80:	ldr	pc, [ip, #400]!	; 0x190

00010e84 <strtol@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #73728	; 0x12000
   10e8c:	ldr	pc, [ip, #392]!	; 0x188

00010e90 <printf@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #73728	; 0x12000
   10e98:	ldr	pc, [ip, #384]!	; 0x180

00010e9c <__isoc99_fscanf@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #73728	; 0x12000
   10ea4:	ldr	pc, [ip, #376]!	; 0x178

00010ea8 <fopen@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #73728	; 0x12000
   10eb0:	ldr	pc, [ip, #368]!	; 0x170

00010eb4 <free@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #73728	; 0x12000
   10ebc:	ldr	pc, [ip, #360]!	; 0x168

00010ec0 <memcpy@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #73728	; 0x12000
   10ec8:	ldr	pc, [ip, #352]!	; 0x160

00010ecc <realloc@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #73728	; 0x12000
   10ed4:	ldr	pc, [ip, #344]!	; 0x158

00010ed8 <strcpy@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #73728	; 0x12000
   10ee0:	ldr	pc, [ip, #336]!	; 0x150

00010ee4 <puts@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #73728	; 0x12000
   10eec:	ldr	pc, [ip, #328]!	; 0x148

00010ef0 <malloc@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #73728	; 0x12000
   10ef8:	ldr	pc, [ip, #320]!	; 0x140

00010efc <__libc_start_main@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #73728	; 0x12000
   10f04:	ldr	pc, [ip, #312]!	; 0x138

00010f08 <__gmon_start__@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #73728	; 0x12000
   10f10:	ldr	pc, [ip, #304]!	; 0x130

00010f14 <strlen@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #73728	; 0x12000
   10f1c:	ldr	pc, [ip, #296]!	; 0x128

00010f20 <setvbuf@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #73728	; 0x12000
   10f28:	ldr	pc, [ip, #288]!	; 0x120

00010f2c <putchar@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #73728	; 0x12000
   10f34:	ldr	pc, [ip, #280]!	; 0x118

00010f38 <fclose@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #73728	; 0x12000
   10f40:	ldr	pc, [ip, #272]!	; 0x110

00010f44 <getline@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #73728	; 0x12000
   10f4c:	ldr	pc, [ip, #264]!	; 0x108

00010f50 <abort@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #73728	; 0x12000
   10f58:	ldr	pc, [ip, #256]!	; 0x100

Disassembly of section .text:

00010f5c <main@@Base>:
   10f5c:	ldr	r0, [pc, #576]	; 111a4 <main@@Base+0x248>
   10f60:	mov	r3, #0
   10f64:	mov	r2, #2
   10f68:	strd	r4, [sp, #-36]!	; 0xffffffdc
   10f6c:	mov	r1, r3
   10f70:	ldr	ip, [pc, #560]	; 111a8 <main@@Base+0x24c>
   10f74:	strd	r6, [sp, #8]
   10f78:	strd	r8, [sp, #16]
   10f7c:	add	r0, pc, r0
   10f80:	strd	sl, [sp, #24]
   10f84:	str	lr, [sp, #32]
   10f88:	sub	sp, sp, #36	; 0x24
   10f8c:	ldr	r0, [r0, ip]
   10f90:	add	r8, sp, #8
   10f94:	add	r5, sp, #4
   10f98:	ldr	r0, [r0]
   10f9c:	bl	10f20 <setvbuf@plt>
   10fa0:	ldr	r1, [pc, #516]	; 111ac <main@@Base+0x250>
   10fa4:	ldr	r0, [pc, #516]	; 111b0 <main@@Base+0x254>
   10fa8:	add	r1, pc, r1
   10fac:	add	r0, pc, r0
   10fb0:	bl	10ea8 <fopen@plt>
   10fb4:	mov	r7, r0
   10fb8:	bl	1244c <lista_nova@@Base>
   10fbc:	mov	r3, #0
   10fc0:	mov	r6, r0
   10fc4:	mov	r9, r3
   10fc8:	str	r3, [sp, #4]
   10fcc:	str	r3, [sp, #8]
   10fd0:	b	10ff8 <main@@Base+0x9c>
   10fd4:	ldr	r4, [sp, #4]
   10fd8:	mov	r0, r4
   10fdc:	bl	10f14 <strlen@plt>
   10fe0:	add	r4, r4, r0
   10fe4:	mov	r2, #0
   10fe8:	mov	r0, r6
   10fec:	strb	r9, [r4, #-1]
   10ff0:	ldr	r1, [sp, #4]
   10ff4:	bl	12508 <lista_insere@@Base>
   10ff8:	mov	r2, r7
   10ffc:	mov	r1, r8
   11000:	mov	r0, r5
   11004:	bl	10f44 <getline@plt>
   11008:	cmn	r0, #1
   1100c:	bne	10fd4 <main@@Base+0x78>
   11010:	ldr	r0, [sp, #4]
   11014:	add	r5, sp, #20
   11018:	add	r4, sp, #12
   1101c:	bl	10eb4 <free@plt>
   11020:	mov	r0, r7
   11024:	ldr	fp, [pc, #392]	; 111b4 <main@@Base+0x258>
   11028:	bl	10f38 <fclose@plt>
   1102c:	ldr	r1, [pc, #388]	; 111b8 <main@@Base+0x25c>
   11030:	mov	r0, r6
   11034:	add	fp, pc, fp
   11038:	add	r1, pc, r1
   1103c:	bl	11520 <carrega_rotas@@Base>
   11040:	mov	sl, r0
   11044:	ldr	r0, [pc, #368]	; 111bc <main@@Base+0x260>
   11048:	add	r0, pc, r0
   1104c:	bl	10ee4 <puts@plt>
   11050:	ldr	r1, [pc, #360]	; 111c0 <main@@Base+0x264>
   11054:	ldr	r0, [pc, #360]	; 111c4 <main@@Base+0x268>
   11058:	add	r1, pc, r1
   1105c:	add	r0, pc, r0
   11060:	bl	10ea8 <fopen@plt>
   11064:	mov	r8, r0
   11068:	bl	1244c <lista_nova@@Base>
   1106c:	mov	r7, r0
   11070:	bl	1244c <lista_nova@@Base>
   11074:	mov	r9, r0
   11078:	b	11090 <main@@Base+0x134>
   1107c:	bl	12508 <lista_insere@@Base>
   11080:	mov	r2, #0
   11084:	mov	r1, r5
   11088:	mov	r0, r9
   1108c:	bl	12508 <lista_insere@@Base>
   11090:	mov	r2, r4
   11094:	mov	r1, fp
   11098:	mov	r3, r5
   1109c:	mov	r0, r8
   110a0:	bl	10e9c <__isoc99_fscanf@plt>
   110a4:	cmp	r0, #2
   110a8:	mov	r2, #0
   110ac:	mov	r1, r4
   110b0:	mov	r0, r7
   110b4:	beq	1107c <main@@Base+0x120>
   110b8:	mov	r3, #5
   110bc:	mov	r2, r6
   110c0:	mov	r1, r9
   110c4:	bl	112cc <proximas_n_chegadas@@Base>
   110c8:	cmp	r0, #1
   110cc:	beq	110dc <main@@Base+0x180>
   110d0:	ldr	r0, [pc, #240]	; 111c8 <main@@Base+0x26c>
   110d4:	add	r0, pc, r0
   110d8:	bl	10ee4 <puts@plt>
   110dc:	mov	r0, r7
   110e0:	ldr	r4, [pc, #228]	; 111cc <main@@Base+0x270>
   110e4:	bl	12480 <lista_apaga@@Base>
   110e8:	mov	r0, r9
   110ec:	bl	12480 <lista_apaga@@Base>
   110f0:	mov	r0, r8
   110f4:	bl	10f38 <fclose@plt>
   110f8:	ldr	r0, [pc, #208]	; 111d0 <main@@Base+0x274>
   110fc:	add	r4, pc, r4
   11100:	add	r0, pc, r0
   11104:	bl	10ee4 <puts@plt>
   11108:	mov	r2, r4
   1110c:	mov	r1, r6
   11110:	mov	r0, sl
   11114:	bl	11430 <pesquisa_destinos@@Base>
   11118:	subs	r5, r0, #0
   1111c:	beq	11190 <main@@Base+0x234>
   11120:	bl	124e0 <lista_tamanho@@Base>
   11124:	mov	r2, r0
   11128:	ldr	r0, [pc, #164]	; 111d4 <main@@Base+0x278>
   1112c:	mov	r1, r4
   11130:	add	r0, pc, r0
   11134:	bl	10e90 <printf@plt>
   11138:	ldr	r4, [r5]
   1113c:	cmp	r4, #0
   11140:	beq	11158 <main@@Base+0x1fc>
   11144:	ldr	r0, [r4]
   11148:	bl	10ee4 <puts@plt>
   1114c:	ldr	r4, [r4, #4]
   11150:	cmp	r4, #0
   11154:	bne	11144 <main@@Base+0x1e8>
   11158:	mov	r0, r5
   1115c:	bl	12480 <lista_apaga@@Base>
   11160:	mov	r0, sl
   11164:	bl	116a8 <grafo_apaga@@Base>
   11168:	mov	r0, r6
   1116c:	bl	12480 <lista_apaga@@Base>
   11170:	mov	r0, #0
   11174:	add	sp, sp, #36	; 0x24
   11178:	ldrd	r4, [sp]
   1117c:	ldrd	r6, [sp, #8]
   11180:	ldrd	r8, [sp, #16]
   11184:	ldrd	sl, [sp, #24]
   11188:	add	sp, sp, #32
   1118c:	pop	{pc}		; (ldr pc, [sp], #4)
   11190:	ldr	r0, [pc, #64]	; 111d8 <main@@Base+0x27c>
   11194:	mov	r1, r4
   11198:	add	r0, pc, r0
   1119c:	bl	10e90 <printf@plt>
   111a0:	b	11160 <main@@Base+0x204>
   111a4:	andeq	r2, r1, ip, ror r0
   111a8:	andeq	r0, r0, r0, rrx
   111ac:	andeq	r1, r0, r8, lsl ip
   111b0:	andeq	r1, r0, r0, ror #24
   111b4:	andeq	r1, r0, r8, lsl ip
   111b8:	andeq	r1, r0, r4, ror #23
   111bc:	andeq	r1, r0, r0, ror #23
   111c0:	andeq	r1, r0, r8, ror #22
   111c4:	andeq	r1, r0, r0, ror #23
   111c8:	andeq	r1, r0, r0, lsl #23
   111cc:	andeq	r1, r0, r8, lsl #23
   111d0:	andeq	r1, r0, r0, ror fp
   111d4:	andeq	r1, r0, r8, lsl #23
   111d8:	strdeq	r1, [r0], -r8

000111dc <_start@@Base>:
   111dc:	mov	fp, #0
   111e0:	mov	lr, #0
   111e4:	pop	{r1}		; (ldr r1, [sp], #4)
   111e8:	mov	r2, sp
   111ec:	push	{r2}		; (str r2, [sp, #-4]!)
   111f0:	push	{r0}		; (str r0, [sp, #-4]!)
   111f4:	ldr	ip, [pc, #16]	; 1120c <_start@@Base+0x30>
   111f8:	push	{ip}		; (str ip, [sp, #-4]!)
   111fc:	ldr	r0, [pc, #12]	; 11210 <_start@@Base+0x34>
   11200:	ldr	r3, [pc, #12]	; 11214 <_start@@Base+0x38>
   11204:	bl	10efc <__libc_start_main@plt>
   11208:	bl	10f50 <abort@plt>
   1120c:	andeq	r2, r1, ip, lsr #23
   11210:	andeq	r0, r1, ip, asr pc
   11214:	andeq	r2, r1, ip, asr #22
   11218:	ldr	r3, [pc, #20]	; 11234 <_start@@Base+0x58>
   1121c:	ldr	r2, [pc, #20]	; 11238 <_start@@Base+0x5c>
   11220:	add	r3, pc, r3
   11224:	ldr	r2, [r3, r2]
   11228:	cmp	r2, #0
   1122c:	bxeq	lr
   11230:	b	10f08 <__gmon_start__@plt>
   11234:	ldrdeq	r1, [r1], -r8
   11238:	andeq	r0, r0, ip, asr r0
   1123c:	ldr	r0, [pc, #24]	; 1125c <_start@@Base+0x80>
   11240:	ldr	r3, [pc, #24]	; 11260 <_start@@Base+0x84>
   11244:	cmp	r3, r0
   11248:	bxeq	lr
   1124c:	ldr	r3, [pc, #16]	; 11264 <_start@@Base+0x88>
   11250:	cmp	r3, #0
   11254:	bxeq	lr
   11258:	bx	r3
   1125c:	andeq	r3, r2, ip, rrx
   11260:	andeq	r3, r2, ip, rrx
   11264:	andeq	r0, r0, r0
   11268:	ldr	r0, [pc, #36]	; 11294 <_start@@Base+0xb8>
   1126c:	ldr	r1, [pc, #36]	; 11298 <_start@@Base+0xbc>
   11270:	sub	r1, r1, r0
   11274:	asr	r1, r1, #2
   11278:	add	r1, r1, r1, lsr #31
   1127c:	asrs	r1, r1, #1
   11280:	bxeq	lr
   11284:	ldr	r3, [pc, #16]	; 1129c <_start@@Base+0xc0>
   11288:	cmp	r3, #0
   1128c:	bxeq	lr
   11290:	bx	r3
   11294:	andeq	r3, r2, ip, rrx
   11298:	andeq	r3, r2, ip, rrx
   1129c:	andeq	r0, r0, r0
   112a0:	push	{r4, lr}
   112a4:	ldr	r4, [pc, #24]	; 112c4 <_start@@Base+0xe8>
   112a8:	ldrb	r3, [r4]
   112ac:	cmp	r3, #0
   112b0:	popne	{r4, pc}
   112b4:	bl	1123c <_start@@Base+0x60>
   112b8:	mov	r3, #1
   112bc:	strb	r3, [r4]
   112c0:	pop	{r4, pc}
   112c4:	andeq	r3, r2, ip, rrx
   112c8:	b	11268 <_start@@Base+0x8c>

000112cc <proximas_n_chegadas@@Base>:
   112cc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   112d0:	ldr	r4, [r2]
   112d4:	strd	r6, [sp, #8]
   112d8:	mov	r7, r3
   112dc:	strd	sl, [sp, #24]
   112e0:	mov	fp, r0
   112e4:	mov	sl, r1
   112e8:	ldr	r0, [r2, #8]
   112ec:	strd	r8, [sp, #16]
   112f0:	mov	r9, r2
   112f4:	str	lr, [sp, #32]
   112f8:	sub	sp, sp, #4
   112fc:	lsl	r0, r0, #2
   11300:	bl	10ef0 <malloc@plt>
   11304:	cmp	r4, #0
   11308:	mov	r8, r0
   1130c:	beq	11334 <proximas_n_chegadas@@Base+0x68>
   11310:	sub	r5, r0, #4
   11314:	mov	r0, #200	; 0xc8
   11318:	bl	10ef0 <malloc@plt>
   1131c:	str	r0, [r5, #4]!
   11320:	ldr	r1, [r4]
   11324:	bl	10ed8 <strcpy@plt>
   11328:	ldr	r4, [r4, #4]
   1132c:	cmp	r4, #0
   11330:	bne	11314 <proximas_n_chegadas@@Base+0x48>
   11334:	ldr	r0, [fp, #8]
   11338:	bl	11f68 <heap_nova@@Base>
   1133c:	ldr	r4, [fp]
   11340:	mov	r6, r0
   11344:	ldr	r5, [sl]
   11348:	cmp	r4, #0
   1134c:	beq	11394 <proximas_n_chegadas@@Base+0xc8>
   11350:	mov	r2, #10
   11354:	mov	r1, #0
   11358:	ldr	r0, [r5]
   1135c:	bl	10e84 <strtol@plt>
   11360:	ldr	sl, [r8, r0, lsl #2]
   11364:	mov	r2, #10
   11368:	mov	r1, #0
   1136c:	ldr	r0, [r4]
   11370:	bl	10e84 <strtol@plt>
   11374:	mov	r2, r0
   11378:	mov	r0, r6
   1137c:	mov	r1, sl
   11380:	bl	12214 <heap_insere@@Base>
   11384:	ldr	r4, [r4, #4]
   11388:	ldr	r5, [r5, #4]
   1138c:	cmp	r4, #0
   11390:	bne	11350 <proximas_n_chegadas@@Base+0x84>
   11394:	ldr	r5, [r9, #8]
   11398:	cmp	r5, #0
   1139c:	ble	113b8 <proximas_n_chegadas@@Base+0xec>
   113a0:	add	r5, r8, r5, lsl #2
   113a4:	mov	r4, r8
   113a8:	ldr	r0, [r4], #4
   113ac:	bl	10eb4 <free@plt>
   113b0:	cmp	r5, r4
   113b4:	bne	113a8 <proximas_n_chegadas@@Base+0xdc>
   113b8:	mov	r0, r8
   113bc:	bl	10eb4 <free@plt>
   113c0:	cmp	r7, #0
   113c4:	ble	11404 <proximas_n_chegadas@@Base+0x138>
   113c8:	ldr	r8, [pc, #92]	; 1142c <proximas_n_chegadas@@Base+0x160>
   113cc:	mov	r4, #0
   113d0:	add	r8, pc, r8
   113d4:	mov	r0, r6
   113d8:	add	r4, r4, #1
   113dc:	bl	122d4 <heap_remove@@Base>
   113e0:	mov	r2, r0
   113e4:	mov	r5, r0
   113e8:	mov	r1, r4
   113ec:	mov	r0, r8
   113f0:	bl	10e90 <printf@plt>
   113f4:	mov	r0, r5
   113f8:	bl	10eb4 <free@plt>
   113fc:	cmp	r4, r7
   11400:	bne	113d4 <proximas_n_chegadas@@Base+0x108>
   11404:	mov	r0, r6
   11408:	bl	11fd0 <heap_apaga@@Base>
   1140c:	mov	r0, #1
   11410:	add	sp, sp, #4
   11414:	ldrd	r4, [sp]
   11418:	ldrd	r6, [sp, #8]
   1141c:	ldrd	r8, [sp, #16]
   11420:	ldrd	sl, [sp, #24]
   11424:	add	sp, sp, #32
   11428:	pop	{pc}		; (ldr pc, [sp], #4)
   1142c:	andeq	r1, r0, r4, ror #15

00011430 <pesquisa_destinos@@Base>:
   11430:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11434:	strd	r6, [sp, #8]
   11438:	mov	r7, r0
   1143c:	mov	r6, r2
   11440:	strd	r8, [sp, #16]
   11444:	mov	r9, r1
   11448:	str	sl, [sp, #24]
   1144c:	str	lr, [sp, #28]
   11450:	bl	1244c <lista_nova@@Base>
   11454:	ldr	r4, [r9]
   11458:	mov	r8, r0
   1145c:	cmp	r4, #0
   11460:	moveq	r5, r4
   11464:	beq	11494 <pesquisa_destinos@@Base+0x64>
   11468:	mov	r5, #0
   1146c:	b	11480 <pesquisa_destinos@@Base+0x50>
   11470:	ldr	r4, [r4, #4]
   11474:	add	r5, r5, #1
   11478:	cmp	r4, #0
   1147c:	beq	11494 <pesquisa_destinos@@Base+0x64>
   11480:	mov	r1, r6
   11484:	ldr	r0, [r4]
   11488:	bl	10e78 <strcmp@plt>
   1148c:	cmp	r0, #0
   11490:	bne	11470 <pesquisa_destinos@@Base+0x40>
   11494:	mov	r0, r7
   11498:	mov	r1, r5
   1149c:	bl	11a48 <v_sucessores@@Base>
   114a0:	ldr	r3, [r0]
   114a4:	mov	r7, r0
   114a8:	cmp	r3, #0
   114ac:	ble	114fc <pesquisa_destinos@@Base+0xcc>
   114b0:	mov	r6, #0
   114b4:	mov	r4, #0
   114b8:	ldr	r5, [r9]
   114bc:	b	114c4 <pesquisa_destinos@@Base+0x94>
   114c0:	ldr	r5, [r5, #4]
   114c4:	mov	r1, r6
   114c8:	mov	r0, r7
   114cc:	bl	12900 <vetor_elemento@@Base>
   114d0:	cmp	r0, r4
   114d4:	add	r4, r4, #1
   114d8:	bgt	114c0 <pesquisa_destinos@@Base+0x90>
   114dc:	mov	r2, #0
   114e0:	mov	r0, r8
   114e4:	ldr	r1, [r5]
   114e8:	bl	12508 <lista_insere@@Base>
   114ec:	ldr	r3, [r7]
   114f0:	add	r6, r6, #1
   114f4:	cmp	r3, r6
   114f8:	bgt	114b4 <pesquisa_destinos@@Base+0x84>
   114fc:	mov	r0, r7
   11500:	bl	12880 <vetor_apaga@@Base>
   11504:	mov	r0, r8
   11508:	ldrd	r4, [sp]
   1150c:	ldrd	r6, [sp, #8]
   11510:	ldrd	r8, [sp, #16]
   11514:	ldr	sl, [sp, #24]
   11518:	add	sp, sp, #28
   1151c:	pop	{pc}		; (ldr pc, [sp], #4)

00011520 <carrega_rotas@@Base>:
   11520:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11524:	subs	r4, r1, #0
   11528:	strd	r6, [sp, #8]
   1152c:	str	r8, [sp, #16]
   11530:	str	lr, [sp, #20]
   11534:	sub	sp, sp, #8
   11538:	beq	115b4 <carrega_rotas@@Base+0x94>
   1153c:	ldr	r1, [pc, #180]	; 115f8 <carrega_rotas@@Base+0xd8>
   11540:	mov	r6, r0
   11544:	mov	r0, r4
   11548:	add	r1, pc, r1
   1154c:	bl	10ea8 <fopen@plt>
   11550:	subs	r5, r0, #0
   11554:	beq	115d0 <carrega_rotas@@Base+0xb0>
   11558:	mov	r0, r6
   1155c:	bl	124e0 <lista_tamanho@@Base>
   11560:	mov	r1, #0
   11564:	bl	1163c <grafo_novo@@Base>
   11568:	subs	r4, r0, #0
   1156c:	beq	115e8 <carrega_rotas@@Base+0xc8>
   11570:	ldr	r6, [pc, #132]	; 115fc <carrega_rotas@@Base+0xdc>
   11574:	add	r8, sp, #4
   11578:	mov	r7, sp
   1157c:	add	r6, pc, r6
   11580:	b	1158c <carrega_rotas@@Base+0x6c>
   11584:	ldm	sp, {r1, r2}
   11588:	bl	118dc <grafo_adiciona@@Base>
   1158c:	mov	r3, r8
   11590:	mov	r2, r7
   11594:	mov	r1, r6
   11598:	mov	r0, r5
   1159c:	bl	10e9c <__isoc99_fscanf@plt>
   115a0:	cmp	r0, #2
   115a4:	mov	r0, r4
   115a8:	beq	11584 <carrega_rotas@@Base+0x64>
   115ac:	mov	r0, r5
   115b0:	bl	10f38 <fclose@plt>
   115b4:	mov	r0, r4
   115b8:	add	sp, sp, #8
   115bc:	ldrd	r4, [sp]
   115c0:	ldrd	r6, [sp, #8]
   115c4:	ldr	r8, [sp, #16]
   115c8:	add	sp, sp, #20
   115cc:	pop	{pc}		; (ldr pc, [sp], #4)
   115d0:	ldr	r0, [pc, #40]	; 11600 <carrega_rotas@@Base+0xe0>
   115d4:	mov	r1, r4
   115d8:	mov	r4, r5
   115dc:	add	r0, pc, r0
   115e0:	bl	10e90 <printf@plt>
   115e4:	b	115b4 <carrega_rotas@@Base+0x94>
   115e8:	ldr	r0, [pc, #20]	; 11604 <carrega_rotas@@Base+0xe4>
   115ec:	add	r0, pc, r0
   115f0:	bl	10ee4 <puts@plt>
   115f4:	b	115b4 <carrega_rotas@@Base+0x94>
   115f8:	andeq	r1, r0, r8, ror r6
   115fc:	andeq	r1, r0, r8, lsl #13
   11600:	andeq	r1, r0, r8, ror #11
   11604:	strdeq	r1, [r0], -ip

00011608 <cria_no@@Base>:
   11608:	str	r4, [sp, #-8]!
   1160c:	mov	r4, r0
   11610:	mov	r0, #8
   11614:	str	lr, [sp, #4]
   11618:	bl	10ef0 <malloc@plt>
   1161c:	cmp	r0, #0
   11620:	beq	11630 <cria_no@@Base+0x28>
   11624:	mov	r3, #0
   11628:	str	r4, [r0]
   1162c:	str	r3, [r0, #4]
   11630:	ldr	r4, [sp]
   11634:	add	sp, sp, #4
   11638:	pop	{pc}		; (ldr pc, [sp], #4)

0001163c <grafo_novo@@Base>:
   1163c:	strd	r4, [sp, #-16]!
   11640:	mov	r5, r0
   11644:	mov	r0, #12
   11648:	str	r6, [sp, #8]
   1164c:	mov	r6, r1
   11650:	str	lr, [sp, #12]
   11654:	bl	10ef0 <malloc@plt>
   11658:	subs	r4, r0, #0
   1165c:	beq	11684 <grafo_novo@@Base+0x48>
   11660:	mov	r0, r5
   11664:	mov	r1, #8
   11668:	str	r6, [r4]
   1166c:	str	r5, [r4, #4]
   11670:	bl	10e6c <calloc@plt>
   11674:	cmp	r0, #0
   11678:	mov	r3, r0
   1167c:	str	r0, [r4, #8]
   11680:	beq	11698 <grafo_novo@@Base+0x5c>
   11684:	mov	r0, r4
   11688:	ldrd	r4, [sp]
   1168c:	ldr	r6, [sp, #8]
   11690:	add	sp, sp, #12
   11694:	pop	{pc}		; (ldr pc, [sp], #4)
   11698:	mov	r0, r4
   1169c:	mov	r4, r3
   116a0:	bl	10eb4 <free@plt>
   116a4:	b	11684 <grafo_novo@@Base+0x48>

000116a8 <grafo_apaga@@Base>:
   116a8:	strd	r4, [sp, #-16]!
   116ac:	subs	r5, r0, #0
   116b0:	str	r6, [sp, #8]
   116b4:	str	lr, [sp, #12]
   116b8:	beq	1173c <grafo_apaga@@Base+0x94>
   116bc:	ldr	r2, [r5, #8]
   116c0:	cmp	r2, #0
   116c4:	beq	11724 <grafo_apaga@@Base+0x7c>
   116c8:	ldr	r1, [r5, #4]
   116cc:	cmp	r1, #0
   116d0:	movgt	r6, #0
   116d4:	ble	1171c <grafo_apaga@@Base+0x74>
   116d8:	lsl	r4, r6, #3
   116dc:	add	r3, r2, r4
   116e0:	ldr	r0, [r3, #4]
   116e4:	cmp	r0, #0
   116e8:	beq	11710 <grafo_apaga@@Base+0x68>
   116ec:	ldr	r2, [r0, #4]
   116f0:	str	r2, [r3, #4]
   116f4:	bl	10eb4 <free@plt>
   116f8:	ldr	r2, [r5, #8]
   116fc:	add	r3, r2, r4
   11700:	ldr	r0, [r3, #4]
   11704:	cmp	r0, #0
   11708:	bne	116ec <grafo_apaga@@Base+0x44>
   1170c:	ldr	r1, [r5, #4]
   11710:	add	r6, r6, #1
   11714:	cmp	r1, r6
   11718:	bgt	116d8 <grafo_apaga@@Base+0x30>
   1171c:	mov	r0, r2
   11720:	bl	10eb4 <free@plt>
   11724:	mov	r0, r5
   11728:	ldrd	r4, [sp]
   1172c:	ldr	r6, [sp, #8]
   11730:	ldr	lr, [sp, #12]
   11734:	add	sp, sp, #16
   11738:	b	10eb4 <free@plt>
   1173c:	ldrd	r4, [sp]
   11740:	ldr	r6, [sp, #8]
   11744:	add	sp, sp, #12
   11748:	pop	{pc}		; (ldr pc, [sp], #4)

0001174c <grafo_remove@@Base>:
   1174c:	strd	r4, [sp, #-16]!
   11750:	str	r6, [sp, #8]
   11754:	subs	r6, r0, #0
   11758:	str	lr, [sp, #12]
   1175c:	beq	11810 <grafo_remove@@Base+0xc4>
   11760:	ldr	ip, [r6, #8]
   11764:	add	ip, ip, r1, lsl #3
   11768:	ldr	lr, [ip, #4]
   1176c:	cmp	lr, #0
   11770:	beq	11810 <grafo_remove@@Base+0xc4>
   11774:	mov	r4, r2
   11778:	ldrd	r2, [lr]
   1177c:	mov	r5, r1
   11780:	cmp	r2, r4
   11784:	beq	11870 <grafo_remove@@Base+0x124>
   11788:	cmp	r3, #0
   1178c:	beq	117b0 <grafo_remove@@Base+0x64>
   11790:	ldr	r2, [r3]
   11794:	cmp	r4, r2
   11798:	bne	11830 <grafo_remove@@Base+0xe4>
   1179c:	mov	r0, r3
   117a0:	mov	r3, lr
   117a4:	ldr	r2, [r0, #4]
   117a8:	str	r2, [r3, #4]
   117ac:	bl	10eb4 <free@plt>
   117b0:	ldr	r3, [r6]
   117b4:	cmp	r3, #0
   117b8:	bne	11810 <grafo_remove@@Base+0xc4>
   117bc:	ldr	r2, [r6, #8]
   117c0:	add	r4, r2, r4, lsl #3
   117c4:	ldr	r2, [r4, #4]
   117c8:	ldm	r2, {r1, r3}
   117cc:	cmp	r1, r5
   117d0:	moveq	r0, r2
   117d4:	streq	r3, [r4, #4]
   117d8:	beq	1185c <grafo_remove@@Base+0x110>
   117dc:	cmp	r3, #0
   117e0:	beq	11810 <grafo_remove@@Base+0xc4>
   117e4:	ldr	r1, [r3]
   117e8:	cmp	r1, r5
   117ec:	bne	11804 <grafo_remove@@Base+0xb8>
   117f0:	b	1184c <grafo_remove@@Base+0x100>
   117f4:	ldr	r2, [r0]
   117f8:	cmp	r2, r5
   117fc:	beq	11854 <grafo_remove@@Base+0x108>
   11800:	mov	r3, r0
   11804:	ldr	r0, [r3, #4]
   11808:	cmp	r0, #0
   1180c:	bne	117f4 <grafo_remove@@Base+0xa8>
   11810:	ldrd	r4, [sp]
   11814:	ldr	r6, [sp, #8]
   11818:	add	sp, sp, #12
   1181c:	pop	{pc}		; (ldr pc, [sp], #4)
   11820:	ldr	ip, [r0]
   11824:	cmp	ip, r4
   11828:	beq	117a4 <grafo_remove@@Base+0x58>
   1182c:	mov	r3, r0
   11830:	ldr	r0, [r3, #4]
   11834:	cmp	r0, #0
   11838:	bne	11820 <grafo_remove@@Base+0xd4>
   1183c:	ldr	r3, [r6]
   11840:	cmp	r3, #0
   11844:	bne	11810 <grafo_remove@@Base+0xc4>
   11848:	b	117bc <grafo_remove@@Base+0x70>
   1184c:	mov	r0, r3
   11850:	mov	r3, r2
   11854:	ldr	r2, [r0, #4]
   11858:	str	r2, [r3, #4]
   1185c:	ldrd	r4, [sp]
   11860:	ldr	r6, [sp, #8]
   11864:	ldr	lr, [sp, #12]
   11868:	add	sp, sp, #16
   1186c:	b	10eb4 <free@plt>
   11870:	mov	r0, lr
   11874:	str	r3, [ip, #4]
   11878:	bl	10eb4 <free@plt>
   1187c:	ldr	r3, [r6]
   11880:	cmp	r3, #0
   11884:	bne	11810 <grafo_remove@@Base+0xc4>
   11888:	b	117bc <grafo_remove@@Base+0x70>

0001188c <grafo_aresta@@Base>:
   1188c:	cmp	r0, #0
   11890:	beq	118d8 <grafo_aresta@@Base+0x4c>
   11894:	ldr	r3, [r0, #8]
   11898:	add	r3, r3, r1, lsl #3
   1189c:	ldr	r0, [r3, #4]
   118a0:	cmp	r0, #0
   118a4:	beq	118d8 <grafo_aresta@@Base+0x4c>
   118a8:	ldr	r3, [r0]
   118ac:	cmp	r2, r3
   118b0:	bne	118c4 <grafo_aresta@@Base+0x38>
   118b4:	b	118d4 <grafo_aresta@@Base+0x48>
   118b8:	ldr	r3, [r0]
   118bc:	cmp	r3, r2
   118c0:	beq	118d4 <grafo_aresta@@Base+0x48>
   118c4:	ldr	r0, [r0, #4]
   118c8:	cmp	r0, #0
   118cc:	bne	118b8 <grafo_aresta@@Base+0x2c>
   118d0:	bx	lr
   118d4:	mov	r0, #1
   118d8:	bx	lr

000118dc <grafo_adiciona@@Base>:
   118dc:	subs	r3, r0, #0
   118e0:	bxeq	lr
   118e4:	strd	r4, [sp, #-16]!
   118e8:	mov	r4, r1
   118ec:	mov	r5, r3
   118f0:	str	r6, [sp, #8]
   118f4:	mov	r6, r2
   118f8:	str	lr, [sp, #12]
   118fc:	bl	1188c <grafo_aresta@@Base>
   11900:	cmp	r0, #0
   11904:	beq	11918 <grafo_adiciona@@Base+0x3c>
   11908:	ldrd	r4, [sp]
   1190c:	ldr	r6, [sp, #8]
   11910:	add	sp, sp, #12
   11914:	pop	{pc}		; (ldr pc, [sp], #4)
   11918:	mov	r0, r6
   1191c:	bl	11608 <cria_no@@Base>
   11920:	ldr	lr, [r5]
   11924:	ldr	r3, [r5, #8]
   11928:	cmp	lr, #0
   1192c:	add	r1, r3, r4, lsl #3
   11930:	ldr	r2, [r3, r4, lsl #3]
   11934:	ldr	ip, [r1, #4]
   11938:	add	r2, r2, #1
   1193c:	str	ip, [r0, #4]
   11940:	str	r0, [r1, #4]
   11944:	str	r2, [r3, r4, lsl #3]
   11948:	bne	11908 <grafo_adiciona@@Base+0x2c>
   1194c:	mov	r0, r4
   11950:	bl	11608 <cria_no@@Base>
   11954:	ldr	r3, [r5, #8]
   11958:	ldrd	r4, [sp]
   1195c:	add	r1, r3, r6, lsl #3
   11960:	ldr	r2, [r3, r6, lsl #3]
   11964:	ldr	ip, [r1, #4]
   11968:	add	r2, r2, #1
   1196c:	str	ip, [r0, #4]
   11970:	str	r0, [r1, #4]
   11974:	str	r2, [r3, r6, lsl #3]
   11978:	ldr	r6, [sp, #8]
   1197c:	add	sp, sp, #12
   11980:	pop	{pc}		; (ldr pc, [sp], #4)

00011984 <grafo_imprime@@Base>:
   11984:	ldr	r3, [r0, #4]
   11988:	cmp	r3, #0
   1198c:	bxle	lr
   11990:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11994:	mov	r5, #0
   11998:	strd	r6, [sp, #8]
   1199c:	mov	r7, r0
   119a0:	ldr	r6, [pc, #148]	; 11a3c <grafo_imprime@@Base+0xb8>
   119a4:	strd	r8, [sp, #16]
   119a8:	ldr	r8, [pc, #144]	; 11a40 <grafo_imprime@@Base+0xbc>
   119ac:	str	sl, [sp, #24]
   119b0:	ldr	r9, [pc, #140]	; 11a44 <grafo_imprime@@Base+0xc0>
   119b4:	add	r6, pc, r6
   119b8:	str	lr, [sp, #28]
   119bc:	add	r8, pc, r8
   119c0:	add	r9, pc, r9
   119c4:	b	119e0 <grafo_imprime@@Base+0x5c>
   119c8:	mov	r0, #10
   119cc:	add	r5, r5, #1
   119d0:	bl	10f2c <putchar@plt>
   119d4:	ldr	r3, [r7, #4]
   119d8:	cmp	r3, r5
   119dc:	ble	11a24 <grafo_imprime@@Base+0xa0>
   119e0:	ldr	r3, [r7, #8]
   119e4:	mov	r1, r5
   119e8:	mov	r0, r8
   119ec:	add	r3, r3, r5, lsl #3
   119f0:	ldr	r4, [r3, #4]
   119f4:	bl	10e90 <printf@plt>
   119f8:	cmp	r4, #0
   119fc:	beq	119c8 <grafo_imprime@@Base+0x44>
   11a00:	mov	r0, r9
   11a04:	b	11a0c <grafo_imprime@@Base+0x88>
   11a08:	mov	r0, r6
   11a0c:	ldr	r1, [r4]
   11a10:	bl	10e90 <printf@plt>
   11a14:	ldr	r4, [r4, #4]
   11a18:	cmp	r4, #0
   11a1c:	bne	11a08 <grafo_imprime@@Base+0x84>
   11a20:	b	119c8 <grafo_imprime@@Base+0x44>
   11a24:	ldrd	r4, [sp]
   11a28:	ldrd	r6, [sp, #8]
   11a2c:	ldrd	r8, [sp, #16]
   11a30:	ldr	sl, [sp, #24]
   11a34:	add	sp, sp, #28
   11a38:	pop	{pc}		; (ldr pc, [sp], #4)
   11a3c:	andeq	r1, r0, r8, lsr r3
   11a40:	andeq	r1, r0, r4, lsr #6
   11a44:	andeq	r1, r0, r8, lsr #6

00011a48 <v_sucessores@@Base>:
   11a48:	cmp	r0, #0
   11a4c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11a50:	lsrne	r4, r1, #31
   11a54:	moveq	r4, #1
   11a58:	strd	r6, [sp, #8]
   11a5c:	str	r8, [sp, #16]
   11a60:	cmp	r4, #0
   11a64:	str	lr, [sp, #20]
   11a68:	movne	r7, #0
   11a6c:	bne	11ae8 <v_sucessores@@Base+0xa0>
   11a70:	ldr	r3, [r0, #4]
   11a74:	cmp	r3, r1
   11a78:	movle	r7, r4
   11a7c:	ble	11ae8 <v_sucessores@@Base+0xa0>
   11a80:	mov	r5, r0
   11a84:	mov	r6, r1
   11a88:	bl	1284c <vetor_novo@@Base>
   11a8c:	ldr	r3, [r5, #4]
   11a90:	mov	r7, r0
   11a94:	cmp	r3, #0
   11a98:	bgt	11ab0 <v_sucessores@@Base+0x68>
   11a9c:	b	11ae8 <v_sucessores@@Base+0xa0>
   11aa0:	ldr	r3, [r5, #4]
   11aa4:	add	r4, r4, #1
   11aa8:	cmp	r3, r4
   11aac:	ble	11ae8 <v_sucessores@@Base+0xa0>
   11ab0:	mov	r2, r4
   11ab4:	mov	r1, r6
   11ab8:	mov	r0, r5
   11abc:	bl	1188c <grafo_aresta@@Base>
   11ac0:	cmp	r0, #0
   11ac4:	beq	11aa0 <v_sucessores@@Base+0x58>
   11ac8:	mov	r1, r4
   11acc:	mvn	r2, #0
   11ad0:	mov	r0, r7
   11ad4:	add	r4, r4, #1
   11ad8:	bl	12934 <vetor_insere@@Base>
   11adc:	ldr	r3, [r5, #4]
   11ae0:	cmp	r3, r4
   11ae4:	bgt	11ab0 <v_sucessores@@Base+0x68>
   11ae8:	mov	r0, r7
   11aec:	ldrd	r4, [sp]
   11af0:	ldrd	r6, [sp, #8]
   11af4:	ldr	r8, [sp, #16]
   11af8:	add	sp, sp, #20
   11afc:	pop	{pc}		; (ldr pc, [sp], #4)

00011b00 <v_antecessores@@Base>:
   11b00:	cmp	r0, #0
   11b04:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11b08:	lsrne	r4, r1, #31
   11b0c:	moveq	r4, #1
   11b10:	strd	r6, [sp, #8]
   11b14:	str	r8, [sp, #16]
   11b18:	cmp	r4, #0
   11b1c:	str	lr, [sp, #20]
   11b20:	movne	r7, #0
   11b24:	bne	11ba0 <v_antecessores@@Base+0xa0>
   11b28:	ldr	r3, [r0, #4]
   11b2c:	cmp	r3, r1
   11b30:	movle	r7, r4
   11b34:	ble	11ba0 <v_antecessores@@Base+0xa0>
   11b38:	mov	r5, r0
   11b3c:	mov	r6, r1
   11b40:	bl	1284c <vetor_novo@@Base>
   11b44:	ldr	r3, [r5, #4]
   11b48:	mov	r7, r0
   11b4c:	cmp	r3, #0
   11b50:	bgt	11b68 <v_antecessores@@Base+0x68>
   11b54:	b	11ba0 <v_antecessores@@Base+0xa0>
   11b58:	ldr	r3, [r5, #4]
   11b5c:	add	r4, r4, #1
   11b60:	cmp	r3, r4
   11b64:	ble	11ba0 <v_antecessores@@Base+0xa0>
   11b68:	mov	r2, r6
   11b6c:	mov	r1, r4
   11b70:	mov	r0, r5
   11b74:	bl	1188c <grafo_aresta@@Base>
   11b78:	cmp	r0, #0
   11b7c:	beq	11b58 <v_antecessores@@Base+0x58>
   11b80:	mov	r1, r4
   11b84:	mvn	r2, #0
   11b88:	mov	r0, r7
   11b8c:	add	r4, r4, #1
   11b90:	bl	12934 <vetor_insere@@Base>
   11b94:	ldr	r3, [r5, #4]
   11b98:	cmp	r3, r4
   11b9c:	bgt	11b68 <v_antecessores@@Base+0x68>
   11ba0:	mov	r0, r7
   11ba4:	ldrd	r4, [sp]
   11ba8:	ldrd	r6, [sp, #8]
   11bac:	ldr	r8, [sp, #16]
   11bb0:	add	sp, sp, #20
   11bb4:	pop	{pc}		; (ldr pc, [sp], #4)

00011bb8 <dfs_helper@@Base>:
   11bb8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11bbc:	strd	r6, [sp, #8]
   11bc0:	strd	r8, [sp, #16]
   11bc4:	str	sl, [sp, #24]
   11bc8:	str	lr, [sp, #28]
   11bcc:	sub	sp, sp, #8
   11bd0:	ldr	r7, [sp, #40]	; 0x28
   11bd4:	ldr	r8, [r7, r1, lsl #2]
   11bd8:	cmp	r8, #0
   11bdc:	movne	r8, #0
   11be0:	bne	11c64 <dfs_helper@@Base+0xac>
   11be4:	cmp	r1, r2
   11be8:	str	r3, [r7, r1, lsl #2]
   11bec:	moveq	r8, r3
   11bf0:	beq	11c64 <dfs_helper@@Base+0xac>
   11bf4:	mov	r9, r2
   11bf8:	ldr	r2, [r0, #4]
   11bfc:	mov	r5, r0
   11c00:	mov	r6, r1
   11c04:	cmp	r2, #0
   11c08:	ble	11c84 <dfs_helper@@Base+0xcc>
   11c0c:	add	sl, r3, #1
   11c10:	mov	r4, r8
   11c14:	b	11c28 <dfs_helper@@Base+0x70>
   11c18:	ldr	r3, [r5, #4]
   11c1c:	add	r4, r4, #1
   11c20:	cmp	r3, r4
   11c24:	ble	11c84 <dfs_helper@@Base+0xcc>
   11c28:	mov	r2, r4
   11c2c:	mov	r1, r6
   11c30:	mov	r0, r5
   11c34:	bl	1188c <grafo_aresta@@Base>
   11c38:	cmp	r0, #0
   11c3c:	beq	11c18 <dfs_helper@@Base+0x60>
   11c40:	mov	r3, sl
   11c44:	mov	r2, r9
   11c48:	str	r7, [sp]
   11c4c:	mov	r1, r4
   11c50:	mov	r0, r5
   11c54:	bl	11bb8 <dfs_helper@@Base>
   11c58:	cmp	r0, #0
   11c5c:	beq	11c18 <dfs_helper@@Base+0x60>
   11c60:	mov	r8, r0
   11c64:	mov	r0, r8
   11c68:	add	sp, sp, #8
   11c6c:	ldrd	r4, [sp]
   11c70:	ldrd	r6, [sp, #8]
   11c74:	ldrd	r8, [sp, #16]
   11c78:	ldr	sl, [sp, #24]
   11c7c:	add	sp, sp, #28
   11c80:	pop	{pc}		; (ldr pc, [sp], #4)
   11c84:	mov	r3, #0
   11c88:	str	r3, [r7, r6, lsl #2]
   11c8c:	b	11c64 <dfs_helper@@Base+0xac>

00011c90 <grafo_dfs@@Base>:
   11c90:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11c94:	strd	r6, [sp, #8]
   11c98:	subs	r7, r0, #0
   11c9c:	str	r8, [sp, #16]
   11ca0:	moveq	r8, r7
   11ca4:	str	lr, [sp, #20]
   11ca8:	sub	sp, sp, #8
   11cac:	beq	11d5c <grafo_dfs@@Base+0xcc>
   11cb0:	mov	r6, r1
   11cb4:	mov	r1, #4
   11cb8:	ldr	r0, [r7, #4]
   11cbc:	mov	r5, r3
   11cc0:	mov	r8, r2
   11cc4:	bl	10e6c <calloc@plt>
   11cc8:	mov	r4, r0
   11ccc:	mov	r1, r6
   11cd0:	mov	r2, r8
   11cd4:	mov	r3, #1
   11cd8:	mov	r0, r7
   11cdc:	str	r4, [sp]
   11ce0:	bl	11bb8 <dfs_helper@@Base>
   11ce4:	subs	r6, r0, #0
   11ce8:	beq	11d8c <grafo_dfs@@Base+0xfc>
   11cec:	mov	r1, #4
   11cf0:	bl	10e6c <calloc@plt>
   11cf4:	cmp	r6, #0
   11cf8:	mov	r8, r0
   11cfc:	ble	11d50 <grafo_dfs@@Base+0xc0>
   11d00:	ldr	lr, [r7, #4]
   11d04:	mov	ip, #0
   11d08:	sub	r3, r0, #4
   11d0c:	cmp	lr, #0
   11d10:	add	ip, ip, #1
   11d14:	ble	11d48 <grafo_dfs@@Base+0xb8>
   11d18:	ldr	r2, [r4]
   11d1c:	cmp	ip, r2
   11d20:	movne	r1, r4
   11d24:	movne	r2, #0
   11d28:	bne	11d3c <grafo_dfs@@Base+0xac>
   11d2c:	b	11d78 <grafo_dfs@@Base+0xe8>
   11d30:	ldr	r0, [r1, #4]!
   11d34:	cmp	r0, ip
   11d38:	beq	11d7c <grafo_dfs@@Base+0xec>
   11d3c:	add	r2, r2, #1
   11d40:	cmp	r2, lr
   11d44:	bne	11d30 <grafo_dfs@@Base+0xa0>
   11d48:	cmp	r6, ip
   11d4c:	bne	11d0c <grafo_dfs@@Base+0x7c>
   11d50:	mov	r0, r4
   11d54:	str	r6, [r5]
   11d58:	bl	10eb4 <free@plt>
   11d5c:	mov	r0, r8
   11d60:	add	sp, sp, #8
   11d64:	ldrd	r4, [sp]
   11d68:	ldrd	r6, [sp, #8]
   11d6c:	ldr	r8, [sp, #16]
   11d70:	add	sp, sp, #20
   11d74:	pop	{pc}		; (ldr pc, [sp], #4)
   11d78:	mov	r2, #0
   11d7c:	cmp	r6, ip
   11d80:	str	r2, [r3, ip, lsl #2]
   11d84:	bne	11d0c <grafo_dfs@@Base+0x7c>
   11d88:	b	11d50 <grafo_dfs@@Base+0xc0>
   11d8c:	mov	r0, r4
   11d90:	mov	r8, r6
   11d94:	bl	10eb4 <free@plt>
   11d98:	str	r6, [r5]
   11d9c:	b	11d5c <grafo_dfs@@Base+0xcc>

00011da0 <grafo_bfs@@Base>:
   11da0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11da4:	subs	r4, r0, #0
   11da8:	strd	r6, [sp, #8]
   11dac:	strd	r8, [sp, #16]
   11db0:	strd	sl, [sp, #24]
   11db4:	str	lr, [sp, #32]
   11db8:	sub	sp, sp, #20
   11dbc:	streq	r4, [sp, #8]
   11dc0:	str	r3, [sp, #4]
   11dc4:	beq	11ee0 <grafo_bfs@@Base+0x140>
   11dc8:	ldr	r3, [r4, #4]
   11dcc:	mov	r5, r1
   11dd0:	mov	r1, #4
   11dd4:	mov	sl, r2
   11dd8:	mov	r0, r3
   11ddc:	str	r3, [sp, #12]
   11de0:	bl	10e6c <calloc@plt>
   11de4:	ldr	r3, [sp, #12]
   11de8:	mov	r7, r0
   11dec:	mov	r1, #4
   11df0:	mov	r0, r3
   11df4:	bl	10e6c <calloc@plt>
   11df8:	ldr	r3, [sp, #12]
   11dfc:	mov	r9, r0
   11e00:	cmp	r3, #0
   11e04:	addgt	r0, r7, r3, lsl #2
   11e08:	movgt	r2, r7
   11e0c:	mvngt	r1, #0
   11e10:	ble	11e20 <grafo_bfs@@Base+0x80>
   11e14:	str	r1, [r2], #4
   11e18:	cmp	r0, r2
   11e1c:	bne	11e14 <grafo_bfs@@Base+0x74>
   11e20:	mov	r6, #1
   11e24:	mov	r8, #0
   11e28:	str	r5, [r7, r5, lsl #2]
   11e2c:	str	r5, [r9]
   11e30:	add	r8, r8, #1
   11e34:	cmp	r3, #0
   11e38:	sdiv	r2, r8, r3
   11e3c:	mls	r8, r3, r2, r8
   11e40:	ble	11ea4 <grafo_bfs@@Base+0x104>
   11e44:	mov	fp, #0
   11e48:	b	11e5c <grafo_bfs@@Base+0xbc>
   11e4c:	ldr	r3, [r4, #4]
   11e50:	add	fp, fp, #1
   11e54:	cmp	fp, r3
   11e58:	bge	11ea4 <grafo_bfs@@Base+0x104>
   11e5c:	mov	r2, fp
   11e60:	mov	r1, r5
   11e64:	mov	r0, r4
   11e68:	bl	1188c <grafo_aresta@@Base>
   11e6c:	cmp	r0, #0
   11e70:	beq	11e4c <grafo_bfs@@Base+0xac>
   11e74:	ldr	r2, [r7, fp, lsl #2]
   11e78:	ldr	r3, [r4, #4]
   11e7c:	cmn	r2, #1
   11e80:	bne	11e50 <grafo_bfs@@Base+0xb0>
   11e84:	add	r2, r6, #1
   11e88:	str	fp, [r9, r6, lsl #2]
   11e8c:	str	r5, [r7, fp, lsl #2]
   11e90:	add	fp, fp, #1
   11e94:	sdiv	r6, r2, r3
   11e98:	cmp	fp, r3
   11e9c:	mls	r6, r3, r6, r2
   11ea0:	blt	11e5c <grafo_bfs@@Base+0xbc>
   11ea4:	cmp	r8, r6
   11ea8:	beq	11eb8 <grafo_bfs@@Base+0x118>
   11eac:	ldr	r5, [r9, r8, lsl #2]
   11eb0:	ldr	r3, [r4, #4]
   11eb4:	b	11e30 <grafo_bfs@@Base+0x90>
   11eb8:	ldr	r5, [r7, sl, lsl #2]
   11ebc:	cmp	r5, #0
   11ec0:	movlt	r6, #0
   11ec4:	bge	11f00 <grafo_bfs@@Base+0x160>
   11ec8:	mov	r0, r9
   11ecc:	bl	10eb4 <free@plt>
   11ed0:	mov	r0, r7
   11ed4:	bl	10eb4 <free@plt>
   11ed8:	ldr	r3, [sp, #4]
   11edc:	str	r6, [r3]
   11ee0:	ldr	r0, [sp, #8]
   11ee4:	add	sp, sp, #20
   11ee8:	ldrd	r4, [sp]
   11eec:	ldrd	r6, [sp, #8]
   11ef0:	ldrd	r8, [sp, #16]
   11ef4:	ldrd	sl, [sp, #24]
   11ef8:	add	sp, sp, #32
   11efc:	pop	{pc}		; (ldr pc, [sp], #4)
   11f00:	cmp	r5, sl
   11f04:	beq	11f58 <grafo_bfs@@Base+0x1b8>
   11f08:	mov	r3, r5
   11f0c:	mov	r6, #1
   11f10:	ldr	r2, [r7, r3, lsl #2]
   11f14:	add	r6, r6, #1
   11f18:	cmp	r2, r3
   11f1c:	mov	r3, r2
   11f20:	bne	11f10 <grafo_bfs@@Base+0x170>
   11f24:	lsl	r4, r6, #2
   11f28:	mov	r0, r4
   11f2c:	bl	10ef0 <malloc@plt>
   11f30:	mov	r2, r0
   11f34:	add	r3, r0, r4
   11f38:	str	r0, [sp, #8]
   11f3c:	b	11f44 <grafo_bfs@@Base+0x1a4>
   11f40:	ldr	r5, [r7, r5, lsl #2]
   11f44:	str	sl, [r3, #-4]!
   11f48:	cmp	r3, r2
   11f4c:	mov	sl, r5
   11f50:	bne	11f40 <grafo_bfs@@Base+0x1a0>
   11f54:	b	11ec8 <grafo_bfs@@Base+0x128>
   11f58:	mov	r0, #4
   11f5c:	mov	r6, #1
   11f60:	mov	r4, r0
   11f64:	b	11f2c <grafo_bfs@@Base+0x18c>

00011f68 <heap_nova@@Base>:
   11f68:	strd	r4, [sp, #-16]!
   11f6c:	mov	r5, r0
   11f70:	mov	r0, #12
   11f74:	str	r6, [sp, #8]
   11f78:	str	lr, [sp, #12]
   11f7c:	bl	10ef0 <malloc@plt>
   11f80:	subs	r4, r0, #0
   11f84:	beq	11fac <heap_nova@@Base+0x44>
   11f88:	mov	r3, #0
   11f8c:	mov	r0, r5
   11f90:	mov	r1, #4
   11f94:	stm	r4, {r3, r5}
   11f98:	bl	10e6c <calloc@plt>
   11f9c:	cmp	r0, #0
   11fa0:	mov	r3, r0
   11fa4:	str	r0, [r4, #8]
   11fa8:	beq	11fc0 <heap_nova@@Base+0x58>
   11fac:	mov	r0, r4
   11fb0:	ldrd	r4, [sp]
   11fb4:	ldr	r6, [sp, #8]
   11fb8:	add	sp, sp, #12
   11fbc:	pop	{pc}		; (ldr pc, [sp], #4)
   11fc0:	mov	r0, r4
   11fc4:	mov	r4, r3
   11fc8:	bl	10eb4 <free@plt>
   11fcc:	b	11fac <heap_nova@@Base+0x44>

00011fd0 <heap_apaga@@Base>:
   11fd0:	strd	r4, [sp, #-16]!
   11fd4:	subs	r5, r0, #0
   11fd8:	str	r6, [sp, #8]
   11fdc:	str	lr, [sp, #12]
   11fe0:	beq	12048 <heap_apaga@@Base+0x78>
   11fe4:	ldr	r3, [r5]
   11fe8:	ldr	r0, [r5, #8]
   11fec:	cmp	r3, #0
   11ff0:	ble	1202c <heap_apaga@@Base+0x5c>
   11ff4:	mov	r4, #0
   11ff8:	mov	r6, r4
   11ffc:	ldr	r3, [r0, r4, lsl #2]
   12000:	ldr	r0, [r3, #4]
   12004:	bl	10eb4 <free@plt>
   12008:	ldr	r3, [r5, #8]
   1200c:	ldr	r0, [r3, r4, lsl #2]
   12010:	bl	10eb4 <free@plt>
   12014:	ldr	r3, [r5]
   12018:	ldr	r0, [r5, #8]
   1201c:	str	r6, [r0, r4, lsl #2]
   12020:	add	r4, r4, #1
   12024:	cmp	r3, r4
   12028:	bgt	11ffc <heap_apaga@@Base+0x2c>
   1202c:	bl	10eb4 <free@plt>
   12030:	mov	r0, r5
   12034:	ldrd	r4, [sp]
   12038:	ldr	r6, [sp, #8]
   1203c:	ldr	lr, [sp, #12]
   12040:	add	sp, sp, #16
   12044:	b	10eb4 <free@plt>
   12048:	ldrd	r4, [sp]
   1204c:	ldr	r6, [sp, #8]
   12050:	add	sp, sp, #12
   12054:	pop	{pc}		; (ldr pc, [sp], #4)

00012058 <elemento_cria@@Base>:
   12058:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1205c:	mov	r5, r1
   12060:	strd	r6, [sp, #8]
   12064:	mov	r7, r0
   12068:	mov	r0, #8
   1206c:	str	r8, [sp, #16]
   12070:	str	lr, [sp, #20]
   12074:	bl	10ef0 <malloc@plt>
   12078:	subs	r4, r0, #0
   1207c:	beq	120b8 <elemento_cria@@Base+0x60>
   12080:	mov	r0, r5
   12084:	bl	10f14 <strlen@plt>
   12088:	add	r6, r0, #1
   1208c:	mov	r1, #1
   12090:	mov	r0, r6
   12094:	bl	10e6c <calloc@plt>
   12098:	cmp	r0, #0
   1209c:	mov	r3, r0
   120a0:	str	r0, [r4, #4]
   120a4:	beq	120d0 <elemento_cria@@Base+0x78>
   120a8:	mov	r2, r6
   120ac:	mov	r1, r5
   120b0:	bl	10ec0 <memcpy@plt>
   120b4:	str	r7, [r4]
   120b8:	mov	r0, r4
   120bc:	ldrd	r4, [sp]
   120c0:	ldrd	r6, [sp, #8]
   120c4:	ldr	r8, [sp, #16]
   120c8:	add	sp, sp, #20
   120cc:	pop	{pc}		; (ldr pc, [sp], #4)
   120d0:	mov	r0, r4
   120d4:	mov	r4, r3
   120d8:	bl	10eb4 <free@plt>
   120dc:	b	120b8 <elemento_cria@@Base+0x60>

000120e0 <mostraHeap@@Base>:
   120e0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   120e4:	strd	r6, [sp, #8]
   120e8:	mov	r7, r0
   120ec:	mov	r6, r1
   120f0:	ldr	r3, [r7]
   120f4:	strd	r8, [sp, #16]
   120f8:	ldr	r5, [pc, #220]	; 121dc <mostraHeap@@Base+0xfc>
   120fc:	str	sl, [sp, #24]
   12100:	ldr	r9, [pc, #216]	; 121e0 <mostraHeap@@Base+0x100>
   12104:	cmp	r3, r6
   12108:	str	lr, [sp, #28]
   1210c:	add	r5, pc, r5
   12110:	add	r9, pc, r9
   12114:	ble	12188 <mostraHeap@@Base+0xa8>
   12118:	lsl	r8, r6, #1
   1211c:	cmp	r6, #0
   12120:	add	r1, r8, #1
   12124:	ble	121a8 <mostraHeap@@Base+0xc8>
   12128:	mov	r4, r6
   1212c:	mov	r3, #0
   12130:	sub	r4, r4, #1
   12134:	add	r3, r3, #1
   12138:	asrs	r4, r4, #1
   1213c:	bne	12130 <mostraHeap@@Base+0x50>
   12140:	mov	r0, r7
   12144:	add	sl, r3, r3, lsl #1
   12148:	bl	120e0 <mostraHeap@@Base>
   1214c:	add	r4, r4, #1
   12150:	mov	r0, r5
   12154:	bl	10e90 <printf@plt>
   12158:	cmp	r4, sl
   1215c:	blt	1214c <mostraHeap@@Base+0x6c>
   12160:	ldr	r3, [r7, #8]
   12164:	mov	r0, r9
   12168:	ldr	r3, [r3, r6, lsl #2]
   1216c:	add	r6, r8, #2
   12170:	ldr	r2, [r3]
   12174:	ldr	r1, [r3, #4]
   12178:	bl	10e90 <printf@plt>
   1217c:	ldr	r3, [r7]
   12180:	cmp	r3, r6
   12184:	bgt	12118 <mostraHeap@@Base+0x38>
   12188:	mov	r0, #10
   1218c:	ldrd	r4, [sp]
   12190:	ldrd	r6, [sp, #8]
   12194:	ldrd	r8, [sp, #16]
   12198:	ldr	sl, [sp, #24]
   1219c:	ldr	lr, [sp, #28]
   121a0:	add	sp, sp, #32
   121a4:	b	10f2c <putchar@plt>
   121a8:	mov	r0, r7
   121ac:	bl	120e0 <mostraHeap@@Base>
   121b0:	ldr	r3, [r7, #8]
   121b4:	ldr	r0, [pc, #40]	; 121e4 <mostraHeap@@Base+0x104>
   121b8:	ldr	r3, [r3, r6, lsl #2]
   121bc:	add	r0, pc, r0
   121c0:	ldr	r2, [r3]
   121c4:	ldr	r1, [r3, #4]
   121c8:	bl	10e90 <printf@plt>
   121cc:	add	r1, r8, #2
   121d0:	mov	r0, r7
   121d4:	bl	120e0 <mostraHeap@@Base>
   121d8:	b	12188 <mostraHeap@@Base+0xa8>
   121dc:	andeq	r0, r0, r8, ror #23
   121e0:	andeq	r0, r0, ip, ror #23
   121e4:	andeq	r0, r0, r0, asr #22

000121e8 <menor_que@@Base>:
   121e8:	cmp	r1, #0
   121ec:	cmpne	r0, #0
   121f0:	beq	1220c <menor_que@@Base+0x24>
   121f4:	ldr	r0, [r0]
   121f8:	ldr	r3, [r1]
   121fc:	cmp	r0, r3
   12200:	movge	r0, #0
   12204:	movlt	r0, #1
   12208:	bx	lr
   1220c:	mov	r0, #0
   12210:	bx	lr

00012214 <heap_insere@@Base>:
   12214:	ldr	ip, [r0]
   12218:	ldr	r3, [r0, #4]
   1221c:	cmp	ip, r3
   12220:	blt	1222c <heap_insere@@Base+0x18>
   12224:	mov	r0, #0
   12228:	bx	lr
   1222c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12230:	strd	r6, [sp, #8]
   12234:	mov	r7, r0
   12238:	mov	r0, r2
   1223c:	str	r8, [sp, #16]
   12240:	str	lr, [sp, #20]
   12244:	bl	12058 <elemento_cria@@Base>
   12248:	cmp	r0, #0
   1224c:	moveq	r0, #0
   12250:	beq	122c0 <heap_insere@@Base+0xac>
   12254:	ldr	r4, [r7]
   12258:	ldr	r3, [r7, #8]
   1225c:	add	r2, r4, #1
   12260:	cmp	r4, #0
   12264:	str	r0, [r3, r4, lsl #2]
   12268:	str	r2, [r7]
   1226c:	beq	122bc <heap_insere@@Base+0xa8>
   12270:	lsl	r5, r4, #2
   12274:	b	12298 <heap_insere@@Base+0x84>
   12278:	ldr	r3, [r7, #8]
   1227c:	cmp	r4, #0
   12280:	ldr	r2, [r3, r4, lsl #2]
   12284:	ldr	r1, [r3, r6]
   12288:	str	r1, [r3, r4, lsl #2]
   1228c:	str	r2, [r3, r6]
   12290:	beq	122bc <heap_insere@@Base+0xa8>
   12294:	ldr	r0, [r3, r5]
   12298:	sub	r4, r4, #1
   1229c:	mov	r6, r5
   122a0:	add	r4, r4, r4, lsr #31
   122a4:	asr	r4, r4, #1
   122a8:	ldr	r1, [r3, r4, lsl #2]
   122ac:	lsl	r5, r4, #2
   122b0:	bl	121e8 <menor_que@@Base>
   122b4:	cmp	r0, #0
   122b8:	bne	12278 <heap_insere@@Base+0x64>
   122bc:	mov	r0, #1
   122c0:	ldrd	r4, [sp]
   122c4:	ldrd	r6, [sp, #8]
   122c8:	ldr	r8, [sp, #16]
   122cc:	add	sp, sp, #20
   122d0:	pop	{pc}		; (ldr pc, [sp], #4)

000122d4 <heap_remove@@Base>:
   122d4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   122d8:	strd	r6, [sp, #8]
   122dc:	subs	r7, r0, #0
   122e0:	str	r8, [sp, #16]
   122e4:	str	lr, [sp, #20]
   122e8:	beq	123b0 <heap_remove@@Base+0xdc>
   122ec:	ldr	r3, [r7]
   122f0:	cmp	r3, #0
   122f4:	ble	123b0 <heap_remove@@Base+0xdc>
   122f8:	ldr	r3, [r7, #8]
   122fc:	mov	r4, #0
   12300:	ldr	r3, [r3]
   12304:	mov	r0, r3
   12308:	ldr	r6, [r3, #4]
   1230c:	bl	10eb4 <free@plt>
   12310:	ldr	r1, [r7]
   12314:	ldr	r3, [r7, #8]
   12318:	sub	r1, r1, #1
   1231c:	cmp	r1, #1
   12320:	ldr	r2, [r3, r1, lsl #2]
   12324:	str	r1, [r7]
   12328:	str	r2, [r3]
   1232c:	str	r4, [r3, r1, lsl #2]
   12330:	ble	123b4 <heap_remove@@Base+0xe0>
   12334:	mov	r2, #1
   12338:	b	12378 <heap_remove@@Base+0xa4>
   1233c:	ldr	r1, [r3, r5, lsl #2]
   12340:	ldr	r0, [r3, r4, lsl #2]
   12344:	bl	121e8 <menor_que@@Base>
   12348:	cmp	r0, #0
   1234c:	lsl	r2, r4, #1
   12350:	beq	123b4 <heap_remove@@Base+0xe0>
   12354:	ldr	r1, [r7]
   12358:	add	r2, r2, #1
   1235c:	ldr	r3, [r7, #8]
   12360:	cmp	r2, r1
   12364:	ldr	r0, [r3, r4, lsl #2]
   12368:	ldr	ip, [r3, r5, lsl #2]
   1236c:	str	ip, [r3, r4, lsl #2]
   12370:	str	r0, [r3, r5, lsl #2]
   12374:	bge	123b4 <heap_remove@@Base+0xe0>
   12378:	add	r0, r4, #1
   1237c:	mov	r5, r4
   12380:	lsl	r8, r0, #1
   12384:	mov	r4, r2
   12388:	cmp	r8, r1
   1238c:	bge	1233c <heap_remove@@Base+0x68>
   12390:	add	r1, r3, r0, lsl #3
   12394:	ldr	r0, [r3, r0, lsl #3]
   12398:	ldr	r1, [r1, #-4]
   1239c:	bl	121e8 <menor_que@@Base>
   123a0:	cmp	r0, #0
   123a4:	ldr	r3, [r7, #8]
   123a8:	movne	r4, r8
   123ac:	b	1233c <heap_remove@@Base+0x68>
   123b0:	mov	r6, #0
   123b4:	mov	r0, r6
   123b8:	ldrd	r4, [sp]
   123bc:	ldrd	r6, [sp, #8]
   123c0:	ldr	r8, [sp, #16]
   123c4:	add	sp, sp, #20
   123c8:	pop	{pc}		; (ldr pc, [sp], #4)

000123cc <novo_str@@Base>:
   123cc:	strd	r4, [sp, #-16]!
   123d0:	mov	r5, r0
   123d4:	mov	r0, #12
   123d8:	str	r6, [sp, #8]
   123dc:	str	lr, [sp, #12]
   123e0:	bl	10ef0 <malloc@plt>
   123e4:	subs	r4, r0, #0
   123e8:	beq	12428 <novo_str@@Base+0x5c>
   123ec:	mov	r0, r5
   123f0:	bl	10f14 <strlen@plt>
   123f4:	add	r6, r0, #1
   123f8:	mov	r0, r6
   123fc:	bl	10ef0 <malloc@plt>
   12400:	cmp	r0, #0
   12404:	mov	r3, r0
   12408:	str	r0, [r4]
   1240c:	beq	1243c <novo_str@@Base+0x70>
   12410:	mov	r2, r6
   12414:	mov	r1, r5
   12418:	bl	10ec0 <memcpy@plt>
   1241c:	mov	r3, #0
   12420:	str	r3, [r4, #4]
   12424:	str	r3, [r4, #8]
   12428:	mov	r0, r4
   1242c:	ldrd	r4, [sp]
   12430:	ldr	r6, [sp, #8]
   12434:	add	sp, sp, #12
   12438:	pop	{pc}		; (ldr pc, [sp], #4)
   1243c:	mov	r0, r4
   12440:	mov	r4, r3
   12444:	bl	10eb4 <free@plt>
   12448:	b	12428 <novo_str@@Base+0x5c>

0001244c <lista_nova@@Base>:
   1244c:	mov	r0, #12
   12450:	str	r4, [sp, #-8]!
   12454:	str	lr, [sp, #4]
   12458:	bl	10ef0 <malloc@plt>
   1245c:	cmp	r0, #0
   12460:	beq	12474 <lista_nova@@Base+0x28>
   12464:	mov	r3, #0
   12468:	str	r3, [r0]
   1246c:	str	r3, [r0, #4]
   12470:	str	r3, [r0, #8]
   12474:	ldr	r4, [sp]
   12478:	add	sp, sp, #4
   1247c:	pop	{pc}		; (ldr pc, [sp], #4)

00012480 <lista_apaga@@Base>:
   12480:	strd	r4, [sp, #-16]!
   12484:	subs	r5, r0, #0
   12488:	str	r6, [sp, #8]
   1248c:	str	lr, [sp, #12]
   12490:	bne	124ac <lista_apaga@@Base+0x2c>
   12494:	b	124d0 <lista_apaga@@Base+0x50>
   12498:	ldm	r4, {r0, r3}
   1249c:	str	r3, [r5]
   124a0:	bl	10eb4 <free@plt>
   124a4:	mov	r0, r4
   124a8:	bl	10eb4 <free@plt>
   124ac:	ldr	r4, [r5]
   124b0:	cmp	r4, #0
   124b4:	bne	12498 <lista_apaga@@Base+0x18>
   124b8:	mov	r0, r5
   124bc:	ldrd	r4, [sp]
   124c0:	ldr	r6, [sp, #8]
   124c4:	ldr	lr, [sp, #12]
   124c8:	add	sp, sp, #16
   124cc:	b	10eb4 <free@plt>
   124d0:	ldrd	r4, [sp]
   124d4:	ldr	r6, [sp, #8]
   124d8:	add	sp, sp, #12
   124dc:	pop	{pc}		; (ldr pc, [sp], #4)

000124e0 <lista_tamanho@@Base>:
   124e0:	cmp	r0, #0
   124e4:	ldrne	r0, [r0, #8]
   124e8:	mvneq	r0, #0
   124ec:	bx	lr

000124f0 <lista_inicio@@Base>:
   124f0:	cmp	r0, #0
   124f4:	ldrne	r0, [r0]
   124f8:	bx	lr

000124fc <lista_fim@@Base>:
   124fc:	cmp	r0, #0
   12500:	ldrne	r0, [r0, #4]
   12504:	bx	lr

00012508 <lista_insere@@Base>:
   12508:	cmp	r1, #0
   1250c:	cmpne	r0, #0
   12510:	beq	125c8 <lista_insere@@Base+0xc0>
   12514:	strd	r4, [sp, #-16]!
   12518:	mov	r5, r0
   1251c:	mov	r0, r1
   12520:	mov	r4, r2
   12524:	str	r6, [sp, #8]
   12528:	str	lr, [sp, #12]
   1252c:	bl	123cc <novo_str@@Base>
   12530:	cmp	r0, #0
   12534:	beq	1258c <lista_insere@@Base+0x84>
   12538:	cmp	r4, #0
   1253c:	ldr	r2, [r5]
   12540:	ldr	r3, [r5, #8]
   12544:	add	r3, r3, #1
   12548:	str	r3, [r5, #8]
   1254c:	beq	125a0 <lista_insere@@Base+0x98>
   12550:	cmp	r4, r2
   12554:	streq	r4, [r0, #4]
   12558:	streq	r0, [r4, #8]
   1255c:	streq	r0, [r5]
   12560:	beq	1257c <lista_insere@@Base+0x74>
   12564:	ldr	r3, [r4, #8]
   12568:	str	r4, [r0, #4]
   1256c:	str	r3, [r0, #8]
   12570:	ldr	r3, [r4, #8]
   12574:	str	r0, [r3, #4]
   12578:	str	r0, [r4, #8]
   1257c:	ldrd	r4, [sp]
   12580:	ldr	r6, [sp, #8]
   12584:	add	sp, sp, #12
   12588:	pop	{pc}		; (ldr pc, [sp], #4)
   1258c:	ldrd	r4, [sp]
   12590:	mov	r0, #0
   12594:	ldr	r6, [sp, #8]
   12598:	add	sp, sp, #12
   1259c:	pop	{pc}		; (ldr pc, [sp], #4)
   125a0:	cmp	r2, #0
   125a4:	ldr	r6, [sp, #8]
   125a8:	ldrne	r3, [r5, #4]
   125ac:	streq	r0, [r5]
   125b0:	strne	r3, [r0, #8]
   125b4:	strne	r0, [r3, #4]
   125b8:	str	r0, [r5, #4]
   125bc:	ldrd	r4, [sp]
   125c0:	add	sp, sp, #12
   125c4:	pop	{pc}		; (ldr pc, [sp], #4)
   125c8:	mov	r0, #0
   125cc:	bx	lr

000125d0 <lista_remove@@Base>:
   125d0:	cmp	r1, #0
   125d4:	cmpne	r0, #0
   125d8:	strd	r4, [sp, #-16]!
   125dc:	moveq	r5, #0
   125e0:	str	r6, [sp, #8]
   125e4:	str	lr, [sp, #12]
   125e8:	beq	12630 <lista_remove@@Base+0x60>
   125ec:	ldr	r3, [r0, #8]
   125f0:	mov	r4, r1
   125f4:	ldr	r2, [r1, #8]
   125f8:	ldr	r5, [r1, #4]
   125fc:	sub	r3, r3, #1
   12600:	cmp	r2, #0
   12604:	str	r3, [r0, #8]
   12608:	strne	r5, [r2, #4]
   1260c:	ldrne	r5, [r1, #4]
   12610:	streq	r5, [r0]
   12614:	cmp	r5, #0
   12618:	streq	r2, [r0, #4]
   1261c:	strne	r2, [r5, #8]
   12620:	ldr	r0, [r1]
   12624:	bl	10eb4 <free@plt>
   12628:	mov	r0, r4
   1262c:	bl	10eb4 <free@plt>
   12630:	mov	r0, r5
   12634:	ldrd	r4, [sp]
   12638:	ldr	r6, [sp, #8]
   1263c:	add	sp, sp, #12
   12640:	pop	{pc}		; (ldr pc, [sp], #4)

00012644 <lista_pesquisa@@Base>:
   12644:	strd	r4, [sp, #-16]!
   12648:	clz	r4, r1
   1264c:	cmp	r0, #0
   12650:	lsr	r4, r4, #5
   12654:	moveq	r4, #1
   12658:	str	r6, [sp, #8]
   1265c:	str	lr, [sp, #12]
   12660:	cmp	r4, #0
   12664:	movne	r4, #0
   12668:	bne	126b0 <lista_pesquisa@@Base+0x6c>
   1266c:	cmp	r2, #1
   12670:	bhi	126b0 <lista_pesquisa@@Base+0x6c>
   12674:	cmp	r2, #0
   12678:	mov	r5, r1
   1267c:	bne	126c4 <lista_pesquisa@@Base+0x80>
   12680:	ldr	r4, [r0]
   12684:	cmp	r4, #0
   12688:	bne	1269c <lista_pesquisa@@Base+0x58>
   1268c:	b	126b0 <lista_pesquisa@@Base+0x6c>
   12690:	ldr	r4, [r4, #4]
   12694:	cmp	r4, #0
   12698:	beq	126b0 <lista_pesquisa@@Base+0x6c>
   1269c:	mov	r1, r5
   126a0:	ldr	r0, [r4]
   126a4:	bl	10e78 <strcmp@plt>
   126a8:	cmp	r0, #0
   126ac:	bne	12690 <lista_pesquisa@@Base+0x4c>
   126b0:	mov	r0, r4
   126b4:	ldrd	r4, [sp]
   126b8:	ldr	r6, [sp, #8]
   126bc:	add	sp, sp, #12
   126c0:	pop	{pc}		; (ldr pc, [sp], #4)
   126c4:	ldr	r4, [r0, #4]
   126c8:	cmp	r4, #0
   126cc:	bne	126e0 <lista_pesquisa@@Base+0x9c>
   126d0:	b	126b0 <lista_pesquisa@@Base+0x6c>
   126d4:	ldr	r4, [r4, #8]
   126d8:	cmp	r4, #0
   126dc:	beq	126b0 <lista_pesquisa@@Base+0x6c>
   126e0:	mov	r1, r5
   126e4:	ldr	r0, [r4]
   126e8:	bl	10e78 <strcmp@plt>
   126ec:	cmp	r0, #0
   126f0:	bne	126d4 <lista_pesquisa@@Base+0x90>
   126f4:	b	126b0 <lista_pesquisa@@Base+0x6c>

000126f8 <lista_ordena@@Base>:
   126f8:	cmp	r0, #0
   126fc:	beq	1279c <lista_ordena@@Base+0xa4>
   12700:	ldr	r3, [r0, #8]
   12704:	cmp	r3, #0
   12708:	beq	12794 <lista_ordena@@Base+0x9c>
   1270c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12710:	strd	r6, [sp, #8]
   12714:	ldr	r6, [r0]
   12718:	str	r8, [sp, #16]
   1271c:	str	lr, [sp, #20]
   12720:	ldr	r7, [r6, #4]
   12724:	cmp	r7, #0
   12728:	beq	1277c <lista_ordena@@Base+0x84>
   1272c:	mov	r5, r6
   12730:	mov	r4, r7
   12734:	ldr	r0, [r4]
   12738:	ldr	r1, [r5]
   1273c:	bl	10e78 <strcmp@plt>
   12740:	cmp	r0, #0
   12744:	movlt	r5, r4
   12748:	ldr	r4, [r4, #4]
   1274c:	cmp	r4, #0
   12750:	bne	12734 <lista_ordena@@Base+0x3c>
   12754:	cmp	r6, r5
   12758:	beq	1276c <lista_ordena@@Base+0x74>
   1275c:	ldr	r2, [r5]
   12760:	ldr	r3, [r6]
   12764:	str	r2, [r6]
   12768:	str	r3, [r5]
   1276c:	mov	r6, r7
   12770:	ldr	r7, [r6, #4]
   12774:	cmp	r7, #0
   12778:	bne	1272c <lista_ordena@@Base+0x34>
   1277c:	ldrd	r4, [sp]
   12780:	mov	r0, #0
   12784:	ldrd	r6, [sp, #8]
   12788:	ldr	r8, [sp, #16]
   1278c:	add	sp, sp, #20
   12790:	pop	{pc}		; (ldr pc, [sp], #4)
   12794:	mov	r0, #0
   12798:	bx	lr
   1279c:	mvn	r0, #0
   127a0:	bx	lr

000127a4 <lista_inverte@@Base>:
   127a4:	strd	r4, [sp, #-12]!
   127a8:	subs	r5, r0, #0
   127ac:	str	lr, [sp, #8]
   127b0:	beq	12844 <lista_inverte@@Base+0xa0>
   127b4:	ldr	r4, [r5, #8]
   127b8:	cmp	r4, #1
   127bc:	movle	r0, #0
   127c0:	ble	12830 <lista_inverte@@Base+0x8c>
   127c4:	ldr	r1, [r5]
   127c8:	cmp	r4, #2
   127cc:	ldr	r3, [r1, #4]
   127d0:	beq	1283c <lista_inverte@@Base+0x98>
   127d4:	sub	r4, r4, #2
   127d8:	mov	ip, #0
   127dc:	b	127e4 <lista_inverte@@Base+0x40>
   127e0:	mov	r3, r2
   127e4:	ldmib	r3, {r2, lr}
   127e8:	add	ip, ip, #1
   127ec:	cmp	r4, ip
   127f0:	str	r2, [lr, #4]
   127f4:	str	lr, [r2, #8]
   127f8:	str	r1, [r3, #4]
   127fc:	str	r3, [r1, #8]
   12800:	mov	r1, r3
   12804:	bne	127e0 <lista_inverte@@Base+0x3c>
   12808:	ldr	r2, [r5, #4]
   1280c:	mov	r1, #0
   12810:	mov	r0, r1
   12814:	ldr	ip, [r2, #8]
   12818:	str	ip, [r5, #4]
   1281c:	str	r1, [ip, #4]
   12820:	str	r3, [r2, #4]
   12824:	str	r1, [r2, #8]
   12828:	str	r2, [r3, #8]
   1282c:	str	r2, [r5]
   12830:	ldrd	r4, [sp]
   12834:	add	sp, sp, #8
   12838:	pop	{pc}		; (ldr pc, [sp], #4)
   1283c:	mov	r3, r1
   12840:	b	12808 <lista_inverte@@Base+0x64>
   12844:	mvn	r0, #0
   12848:	b	12830 <lista_inverte@@Base+0x8c>

0001284c <vetor_novo@@Base>:
   1284c:	mov	r0, #12
   12850:	str	r4, [sp, #-8]!
   12854:	str	lr, [sp, #4]
   12858:	bl	10ef0 <malloc@plt>
   1285c:	cmp	r0, #0
   12860:	beq	12874 <vetor_novo@@Base+0x28>
   12864:	mov	r3, #0
   12868:	str	r3, [r0]
   1286c:	str	r3, [r0, #4]
   12870:	str	r3, [r0, #8]
   12874:	ldr	r4, [sp]
   12878:	add	sp, sp, #4
   1287c:	pop	{pc}		; (ldr pc, [sp], #4)

00012880 <vetor_apaga@@Base>:
   12880:	str	r4, [sp, #-8]!
   12884:	subs	r4, r0, #0
   12888:	str	lr, [sp, #4]
   1288c:	beq	128ac <vetor_apaga@@Base+0x2c>
   12890:	ldr	r0, [r4, #8]
   12894:	bl	10eb4 <free@plt>
   12898:	mov	r0, r4
   1289c:	ldr	r4, [sp]
   128a0:	ldr	lr, [sp, #4]
   128a4:	add	sp, sp, #8
   128a8:	b	10eb4 <free@plt>
   128ac:	ldr	r4, [sp]
   128b0:	add	sp, sp, #4
   128b4:	pop	{pc}		; (ldr pc, [sp], #4)

000128b8 <vetor_atribui@@Base>:
   128b8:	cmp	r0, #0
   128bc:	lsrne	r3, r1, #31
   128c0:	moveq	r3, #1
   128c4:	cmp	r3, #0
   128c8:	bne	128e8 <vetor_atribui@@Base+0x30>
   128cc:	ldr	r3, [r0]
   128d0:	cmp	r3, r1
   128d4:	ble	128e8 <vetor_atribui@@Base+0x30>
   128d8:	ldr	r3, [r0, #8]
   128dc:	mov	r0, r1
   128e0:	str	r2, [r3, r1, lsl #2]
   128e4:	bx	lr
   128e8:	mvn	r0, #0
   128ec:	bx	lr

000128f0 <vetor_tamanho@@Base>:
   128f0:	cmp	r0, #0
   128f4:	ldrne	r0, [r0]
   128f8:	mvneq	r0, #0
   128fc:	bx	lr

00012900 <vetor_elemento@@Base>:
   12900:	cmp	r0, #0
   12904:	lsrne	r3, r1, #31
   12908:	moveq	r3, #1
   1290c:	cmp	r3, #0
   12910:	bne	1292c <vetor_elemento@@Base+0x2c>
   12914:	ldr	r3, [r0]
   12918:	cmp	r3, r1
   1291c:	ble	1292c <vetor_elemento@@Base+0x2c>
   12920:	ldr	r3, [r0, #8]
   12924:	ldr	r0, [r3, r1, lsl #2]
   12928:	bx	lr
   1292c:	mov	r0, #-2147483648	; 0x80000000
   12930:	bx	lr

00012934 <vetor_insere@@Base>:
   12934:	cmn	r2, #1
   12938:	movge	r3, #0
   1293c:	movlt	r3, #1
   12940:	cmp	r0, #0
   12944:	moveq	r3, #1
   12948:	cmp	r3, #0
   1294c:	bne	12a04 <vetor_insere@@Base+0xd0>
   12950:	strd	r4, [sp, #-16]!
   12954:	mov	r4, r2
   12958:	mov	r5, r0
   1295c:	str	r6, [sp, #8]
   12960:	mov	r6, r1
   12964:	ldr	r1, [r0]
   12968:	str	lr, [sp, #12]
   1296c:	cmp	r1, r2
   12970:	blt	129fc <vetor_insere@@Base+0xc8>
   12974:	ldr	r3, [r0, #4]
   12978:	cmn	r2, #1
   1297c:	moveq	r4, r1
   12980:	ldr	r0, [r0, #8]
   12984:	cmp	r1, r3
   12988:	beq	129cc <vetor_insere@@Base+0x98>
   1298c:	cmp	r4, r1
   12990:	addlt	r3, r0, r1, lsl #2
   12994:	addlt	r2, r0, r4, lsl #2
   12998:	bge	129ac <vetor_insere@@Base+0x78>
   1299c:	ldr	ip, [r3, #-4]
   129a0:	str	ip, [r3], #-4
   129a4:	cmp	r2, r3
   129a8:	bne	1299c <vetor_insere@@Base+0x68>
   129ac:	add	r1, r1, #1
   129b0:	str	r6, [r0, r4, lsl #2]
   129b4:	mov	r0, r4
   129b8:	str	r1, [r5]
   129bc:	ldrd	r4, [sp]
   129c0:	ldr	r6, [sp, #8]
   129c4:	add	sp, sp, #12
   129c8:	pop	{pc}		; (ldr pc, [sp], #4)
   129cc:	cmp	r1, #0
   129d0:	lslne	r3, r1, #1
   129d4:	moveq	r3, #1
   129d8:	moveq	r1, #4
   129dc:	lslne	r1, r1, #3
   129e0:	str	r3, [r5, #4]
   129e4:	bl	10ecc <realloc@plt>
   129e8:	cmp	r0, #0
   129ec:	str	r0, [r5, #8]
   129f0:	beq	129fc <vetor_insere@@Base+0xc8>
   129f4:	ldr	r1, [r5]
   129f8:	b	1298c <vetor_insere@@Base+0x58>
   129fc:	mvn	r0, #0
   12a00:	b	129bc <vetor_insere@@Base+0x88>
   12a04:	mvn	r0, #0
   12a08:	bx	lr

00012a0c <vetor_remove@@Base>:
   12a0c:	cmp	r0, #0
   12a10:	lsrne	r3, r1, #31
   12a14:	moveq	r3, #1
   12a18:	cmp	r3, #0
   12a1c:	bne	12a6c <vetor_remove@@Base+0x60>
   12a20:	ldr	ip, [r0]
   12a24:	cmp	ip, r1
   12a28:	ble	12a6c <vetor_remove@@Base+0x60>
   12a2c:	add	r3, r1, #1
   12a30:	cmp	ip, r3
   12a34:	ble	12a58 <vetor_remove@@Base+0x4c>
   12a38:	ldr	r3, [r0, #8]
   12a3c:	sub	r2, r3, #4
   12a40:	add	r1, r3, r1, lsl #2
   12a44:	add	r2, r2, ip, lsl #2
   12a48:	ldr	r3, [r1, #4]
   12a4c:	str	r3, [r1], #4
   12a50:	cmp	r1, r2
   12a54:	bne	12a48 <vetor_remove@@Base+0x3c>
   12a58:	sub	ip, ip, #1
   12a5c:	mov	r3, #0
   12a60:	str	ip, [r0]
   12a64:	mov	r0, r3
   12a68:	bx	lr
   12a6c:	mvn	r3, #0
   12a70:	b	12a64 <vetor_remove@@Base+0x58>

00012a74 <vetor_pesquisa@@Base>:
   12a74:	cmp	r0, #0
   12a78:	beq	12ab8 <vetor_pesquisa@@Base+0x44>
   12a7c:	ldr	ip, [r0]
   12a80:	cmp	ip, #0
   12a84:	ble	12ab8 <vetor_pesquisa@@Base+0x44>
   12a88:	ldr	r3, [r0, #8]
   12a8c:	mov	r0, #0
   12a90:	ldr	r2, [r3]
   12a94:	cmp	r1, r2
   12a98:	bne	12aac <vetor_pesquisa@@Base+0x38>
   12a9c:	b	12ac0 <vetor_pesquisa@@Base+0x4c>
   12aa0:	ldr	r2, [r3, #4]!
   12aa4:	cmp	r2, r1
   12aa8:	beq	12ac0 <vetor_pesquisa@@Base+0x4c>
   12aac:	add	r0, r0, #1
   12ab0:	cmp	ip, r0
   12ab4:	bne	12aa0 <vetor_pesquisa@@Base+0x2c>
   12ab8:	mvn	r0, #0
   12abc:	bx	lr
   12ac0:	bx	lr

00012ac4 <vetor_ordena@@Base>:
   12ac4:	cmp	r0, #0
   12ac8:	beq	12b44 <vetor_ordena@@Base+0x80>
   12acc:	strd	r4, [sp, #-16]!
   12ad0:	ldr	r5, [r0]
   12ad4:	str	r6, [sp, #8]
   12ad8:	str	lr, [sp, #12]
   12adc:	cmp	r5, #1
   12ae0:	ble	12b30 <vetor_ordena@@Base+0x6c>
   12ae4:	ldr	r6, [r0, #8]
   12ae8:	mov	lr, #1
   12aec:	mov	r4, r6
   12af0:	ldr	ip, [r4, #4]!
   12af4:	mov	r2, lr
   12af8:	mov	r3, r4
   12afc:	ldr	r1, [r3, #-4]
   12b00:	mov	r0, r3
   12b04:	cmp	r1, ip
   12b08:	ble	12b20 <vetor_ordena@@Base+0x5c>
   12b0c:	subs	r2, r2, #1
   12b10:	str	r1, [r3]
   12b14:	sub	r3, r0, #4
   12b18:	bne	12afc <vetor_ordena@@Base+0x38>
   12b1c:	mov	r0, r6
   12b20:	add	lr, lr, #1
   12b24:	str	ip, [r0]
   12b28:	cmp	lr, r5
   12b2c:	bne	12af0 <vetor_ordena@@Base+0x2c>
   12b30:	ldrd	r4, [sp]
   12b34:	mov	r0, #0
   12b38:	ldr	r6, [sp, #8]
   12b3c:	add	sp, sp, #12
   12b40:	pop	{pc}		; (ldr pc, [sp], #4)
   12b44:	mvn	r0, #0
   12b48:	bx	lr

00012b4c <__libc_csu_init@@Base>:
   12b4c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12b50:	mov	r7, r0
   12b54:	ldr	r6, [pc, #72]	; 12ba4 <__libc_csu_init@@Base+0x58>
   12b58:	ldr	r5, [pc, #72]	; 12ba8 <__libc_csu_init@@Base+0x5c>
   12b5c:	add	r6, pc, r6
   12b60:	add	r5, pc, r5
   12b64:	sub	r6, r6, r5
   12b68:	mov	r8, r1
   12b6c:	mov	r9, r2
   12b70:	bl	10e4c <calloc@plt-0x20>
   12b74:	asrs	r6, r6, #2
   12b78:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12b7c:	mov	r4, #0
   12b80:	add	r4, r4, #1
   12b84:	ldr	r3, [r5], #4
   12b88:	mov	r2, r9
   12b8c:	mov	r1, r8
   12b90:	mov	r0, r7
   12b94:	blx	r3
   12b98:	cmp	r6, r4
   12b9c:	bne	12b80 <__libc_csu_init@@Base+0x34>
   12ba0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12ba4:			; <UNDEFINED> instruction: 0x000103b0
   12ba8:	andeq	r0, r1, r8, lsr #7

00012bac <__libc_csu_fini@@Base>:
   12bac:	bx	lr

Disassembly of section .fini:

00012bb0 <.fini>:
   12bb0:	push	{r3, lr}
   12bb4:	pop	{r3, pc}
