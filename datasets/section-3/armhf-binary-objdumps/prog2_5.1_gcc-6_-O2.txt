
../repos/prog2/5.1:     file format elf32-littlearm


Disassembly of section .init:

00010a08 <.init>:
   10a08:	push	{r3, lr}
   10a0c:	bl	11050 <_start@@Base+0x3c>
   10a10:	pop	{r3, pc}

Disassembly of section .plt:

00010a14 <calloc@plt-0x14>:
   10a14:	push	{lr}		; (str lr, [sp, #-4]!)
   10a18:	ldr	lr, [pc, #4]	; 10a24 <calloc@plt-0x4>
   10a1c:	add	lr, pc, lr
   10a20:	ldr	pc, [lr, #8]!
   10a24:	ldrdeq	r1, [r1], -ip

00010a28 <calloc@plt>:
   10a28:	add	ip, pc, #0, 12
   10a2c:	add	ip, ip, #69632	; 0x11000
   10a30:	ldr	pc, [ip, #1500]!	; 0x5dc

00010a34 <printf@plt>:
   10a34:	add	ip, pc, #0, 12
   10a38:	add	ip, ip, #69632	; 0x11000
   10a3c:	ldr	pc, [ip, #1492]!	; 0x5d4

00010a40 <free@plt>:
   10a40:	add	ip, pc, #0, 12
   10a44:	add	ip, ip, #69632	; 0x11000
   10a48:	ldr	pc, [ip, #1484]!	; 0x5cc

00010a4c <memcpy@plt>:
   10a4c:	add	ip, pc, #0, 12
   10a50:	add	ip, ip, #69632	; 0x11000
   10a54:	ldr	pc, [ip, #1476]!	; 0x5c4

00010a58 <puts@plt>:
   10a58:	add	ip, pc, #0, 12
   10a5c:	add	ip, ip, #69632	; 0x11000
   10a60:	ldr	pc, [ip, #1468]!	; 0x5bc

00010a64 <malloc@plt>:
   10a64:	add	ip, pc, #0, 12
   10a68:	add	ip, ip, #69632	; 0x11000
   10a6c:	ldr	pc, [ip, #1460]!	; 0x5b4

00010a70 <__libc_start_main@plt>:
   10a70:	add	ip, pc, #0, 12
   10a74:	add	ip, ip, #69632	; 0x11000
   10a78:	ldr	pc, [ip, #1452]!	; 0x5ac

00010a7c <__gmon_start__@plt>:
   10a7c:	add	ip, pc, #0, 12
   10a80:	add	ip, ip, #69632	; 0x11000
   10a84:	ldr	pc, [ip, #1444]!	; 0x5a4

00010a88 <strlen@plt>:
   10a88:	add	ip, pc, #0, 12
   10a8c:	add	ip, ip, #69632	; 0x11000
   10a90:	ldr	pc, [ip, #1436]!	; 0x59c

00010a94 <putchar@plt>:
   10a94:	add	ip, pc, #0, 12
   10a98:	add	ip, ip, #69632	; 0x11000
   10a9c:	ldr	pc, [ip, #1428]!	; 0x594

00010aa0 <abort@plt>:
   10aa0:	add	ip, pc, #0, 12
   10aa4:	add	ip, ip, #69632	; 0x11000
   10aa8:	ldr	pc, [ip, #1420]!	; 0x58c

Disassembly of section .text:

00010aac <main@@Base>:
   10aac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10ab0:	mov	r1, #3
   10ab4:	sub	sp, sp, #28
   10ab8:	mov	r0, #4
   10abc:	bl	11280 <armazem_novo@@Base>
   10ac0:	mov	r7, r0
   10ac4:	ldr	r0, [pc, #1064]	; 10ef4 <main@@Base+0x448>
   10ac8:	add	r0, pc, r0
   10acc:	bl	10a58 <puts@plt>
   10ad0:	ldr	r0, [pc, #1056]	; 10ef8 <main@@Base+0x44c>
   10ad4:	vldr	s0, [pc, #1000]	; 10ec4 <main@@Base+0x418>
   10ad8:	add	r0, pc, r0
   10adc:	bl	1145c <contentor_novo@@Base>
   10ae0:	vldr	s0, [pc, #992]	; 10ec8 <main@@Base+0x41c>
   10ae4:	mov	fp, r0
   10ae8:	ldr	r0, [pc, #1036]	; 10efc <main@@Base+0x450>
   10aec:	add	r0, pc, r0
   10af0:	bl	1145c <contentor_novo@@Base>
   10af4:	vldr	s0, [pc, #976]	; 10ecc <main@@Base+0x420>
   10af8:	mov	sl, r0
   10afc:	ldr	r0, [pc, #1020]	; 10f00 <main@@Base+0x454>
   10b00:	add	r0, pc, r0
   10b04:	bl	1145c <contentor_novo@@Base>
   10b08:	vldr	s0, [pc, #960]	; 10ed0 <main@@Base+0x424>
   10b0c:	mov	r4, r0
   10b10:	ldr	r0, [pc, #1004]	; 10f04 <main@@Base+0x458>
   10b14:	add	r0, pc, r0
   10b18:	bl	1145c <contentor_novo@@Base>
   10b1c:	vldr	s0, [pc, #944]	; 10ed4 <main@@Base+0x428>
   10b20:	mov	r9, r0
   10b24:	ldr	r0, [pc, #988]	; 10f08 <main@@Base+0x45c>
   10b28:	add	r0, pc, r0
   10b2c:	bl	1145c <contentor_novo@@Base>
   10b30:	vldr	s0, [pc, #928]	; 10ed8 <main@@Base+0x42c>
   10b34:	mov	r8, r0
   10b38:	ldr	r0, [pc, #972]	; 10f0c <main@@Base+0x460>
   10b3c:	add	r0, pc, r0
   10b40:	bl	1145c <contentor_novo@@Base>
   10b44:	vldr	s0, [pc, #912]	; 10edc <main@@Base+0x430>
   10b48:	str	r0, [sp]
   10b4c:	ldr	r0, [pc, #956]	; 10f10 <main@@Base+0x464>
   10b50:	add	r0, pc, r0
   10b54:	bl	1145c <contentor_novo@@Base>
   10b58:	vldr	s0, [pc, #896]	; 10ee0 <main@@Base+0x434>
   10b5c:	mov	r6, r0
   10b60:	ldr	r0, [pc, #940]	; 10f14 <main@@Base+0x468>
   10b64:	add	r0, pc, r0
   10b68:	bl	1145c <contentor_novo@@Base>
   10b6c:	vldr	s0, [pc, #864]	; 10ed4 <main@@Base+0x428>
   10b70:	str	r0, [sp, #4]
   10b74:	ldr	r0, [pc, #924]	; 10f18 <main@@Base+0x46c>
   10b78:	add	r0, pc, r0
   10b7c:	bl	1145c <contentor_novo@@Base>
   10b80:	vldr	s0, [pc, #860]	; 10ee4 <main@@Base+0x438>
   10b84:	str	r0, [sp, #8]
   10b88:	ldr	r0, [pc, #908]	; 10f1c <main@@Base+0x470>
   10b8c:	add	r0, pc, r0
   10b90:	bl	1145c <contentor_novo@@Base>
   10b94:	vldr	s0, [pc, #844]	; 10ee8 <main@@Base+0x43c>
   10b98:	str	r0, [sp, #12]
   10b9c:	ldr	r0, [pc, #892]	; 10f20 <main@@Base+0x474>
   10ba0:	add	r0, pc, r0
   10ba4:	bl	1145c <contentor_novo@@Base>
   10ba8:	vldr	s0, [pc, #828]	; 10eec <main@@Base+0x440>
   10bac:	str	r0, [sp, #16]
   10bb0:	ldr	r0, [pc, #876]	; 10f24 <main@@Base+0x478>
   10bb4:	add	r0, pc, r0
   10bb8:	bl	1145c <contentor_novo@@Base>
   10bbc:	vldr	s0, [pc, #812]	; 10ef0 <main@@Base+0x444>
   10bc0:	mov	r5, r0
   10bc4:	ldr	r0, [pc, #860]	; 10f28 <main@@Base+0x47c>
   10bc8:	add	r0, pc, r0
   10bcc:	bl	1145c <contentor_novo@@Base>
   10bd0:	str	r0, [sp, #20]
   10bd4:	ldr	r0, [pc, #848]	; 10f2c <main@@Base+0x480>
   10bd8:	add	r0, pc, r0
   10bdc:	bl	10a58 <puts@plt>
   10be0:	mov	r0, r7
   10be4:	bl	1113c <imprimeArmazem@@Base>
   10be8:	ldr	r0, [pc, #832]	; 10f30 <main@@Base+0x484>
   10bec:	add	r0, pc, r0
   10bf0:	bl	10a58 <puts@plt>
   10bf4:	mov	r1, fp
   10bf8:	mov	r0, r7
   10bfc:	bl	11328 <armazenar_contentor@@Base>
   10c00:	cmp	r0, #0
   10c04:	bne	11000 <main@@Base+0x554>
   10c08:	mov	r1, sl
   10c0c:	mov	r0, r7
   10c10:	bl	11328 <armazenar_contentor@@Base>
   10c14:	cmp	r0, #0
   10c18:	bne	10fec <main@@Base+0x540>
   10c1c:	mov	r1, r4
   10c20:	mov	r0, r7
   10c24:	bl	11328 <armazenar_contentor@@Base>
   10c28:	cmp	r0, #0
   10c2c:	bne	10fd8 <main@@Base+0x52c>
   10c30:	mov	r1, r9
   10c34:	mov	r0, r7
   10c38:	bl	11328 <armazenar_contentor@@Base>
   10c3c:	cmp	r0, #0
   10c40:	bne	10fc4 <main@@Base+0x518>
   10c44:	ldr	r0, [pc, #744]	; 10f34 <main@@Base+0x488>
   10c48:	add	r0, pc, r0
   10c4c:	bl	10a58 <puts@plt>
   10c50:	mov	r0, r7
   10c54:	bl	1113c <imprimeArmazem@@Base>
   10c58:	ldr	r0, [pc, #728]	; 10f38 <main@@Base+0x48c>
   10c5c:	add	r0, pc, r0
   10c60:	bl	10a58 <puts@plt>
   10c64:	mov	r1, r8
   10c68:	mov	r0, r7
   10c6c:	bl	11328 <armazenar_contentor@@Base>
   10c70:	cmp	r0, #0
   10c74:	bne	10fb0 <main@@Base+0x504>
   10c78:	ldr	r1, [sp]
   10c7c:	mov	r0, r7
   10c80:	bl	11328 <armazenar_contentor@@Base>
   10c84:	cmp	r0, #0
   10c88:	bne	10f98 <main@@Base+0x4ec>
   10c8c:	mov	r1, r6
   10c90:	mov	r0, r7
   10c94:	bl	11328 <armazenar_contentor@@Base>
   10c98:	cmp	r0, #0
   10c9c:	bne	10eb0 <main@@Base+0x404>
   10ca0:	ldr	r1, [sp, #4]
   10ca4:	mov	r0, r7
   10ca8:	bl	11328 <armazenar_contentor@@Base>
   10cac:	cmp	r0, #0
   10cb0:	bne	10e98 <main@@Base+0x3ec>
   10cb4:	ldr	r1, [sp, #8]
   10cb8:	mov	r0, r7
   10cbc:	bl	11328 <armazenar_contentor@@Base>
   10cc0:	cmp	r0, #0
   10cc4:	bne	10e80 <main@@Base+0x3d4>
   10cc8:	ldr	r1, [sp, #12]
   10ccc:	mov	r0, r7
   10cd0:	bl	11328 <armazenar_contentor@@Base>
   10cd4:	cmp	r0, #0
   10cd8:	bne	10e68 <main@@Base+0x3bc>
   10cdc:	ldr	r1, [sp, #16]
   10ce0:	mov	r0, r7
   10ce4:	bl	11328 <armazenar_contentor@@Base>
   10ce8:	cmp	r0, #0
   10cec:	bne	10e50 <main@@Base+0x3a4>
   10cf0:	mov	r1, r5
   10cf4:	mov	r0, r7
   10cf8:	bl	11328 <armazenar_contentor@@Base>
   10cfc:	cmp	r0, #0
   10d00:	bne	10e3c <main@@Base+0x390>
   10d04:	ldr	r0, [pc, #560]	; 10f3c <main@@Base+0x490>
   10d08:	add	r0, pc, r0
   10d0c:	bl	10a58 <puts@plt>
   10d10:	mov	r0, r7
   10d14:	bl	1113c <imprimeArmazem@@Base>
   10d18:	mov	r0, r7
   10d1c:	bl	112d8 <armazem_cheio@@Base>
   10d20:	cmp	r0, #0
   10d24:	beq	10e08 <main@@Base+0x35c>
   10d28:	ldr	r0, [pc, #528]	; 10f40 <main@@Base+0x494>
   10d2c:	add	r0, pc, r0
   10d30:	bl	10a58 <puts@plt>
   10d34:	ldr	r1, [sp, #20]
   10d38:	mov	r0, r7
   10d3c:	bl	11328 <armazenar_contentor@@Base>
   10d40:	cmp	r0, #0
   10d44:	bne	10e28 <main@@Base+0x37c>
   10d48:	ldr	r0, [pc, #500]	; 10f44 <main@@Base+0x498>
   10d4c:	ldr	r6, [pc, #500]	; 10f48 <main@@Base+0x49c>
   10d50:	add	r0, pc, r0
   10d54:	bl	10a58 <puts@plt>
   10d58:	add	r6, pc, r6
   10d5c:	mov	r4, #8
   10d60:	mov	r0, r7
   10d64:	bl	113c8 <expedir_contentor@@Base>
   10d68:	mov	r5, r0
   10d6c:	mov	r0, r6
   10d70:	bl	10a58 <puts@plt>
   10d74:	mov	r0, r5
   10d78:	bl	114c8 <contentor_imprime@@Base>
   10d7c:	subs	r4, r4, #1
   10d80:	bne	10d60 <main@@Base+0x2b4>
   10d84:	ldr	r0, [pc, #448]	; 10f4c <main@@Base+0x4a0>
   10d88:	mov	r4, #4
   10d8c:	add	r0, pc, r0
   10d90:	bl	10a58 <puts@plt>
   10d94:	mov	r0, r7
   10d98:	bl	1113c <imprimeArmazem@@Base>
   10d9c:	ldr	r0, [pc, #428]	; 10f50 <main@@Base+0x4a4>
   10da0:	add	r0, pc, r0
   10da4:	bl	10a58 <puts@plt>
   10da8:	mov	r0, r7
   10dac:	bl	113c8 <expedir_contentor@@Base>
   10db0:	mov	r5, r0
   10db4:	mov	r0, r6
   10db8:	bl	10a58 <puts@plt>
   10dbc:	mov	r0, r5
   10dc0:	bl	114c8 <contentor_imprime@@Base>
   10dc4:	subs	r4, r4, #1
   10dc8:	bne	10da8 <main@@Base+0x2fc>
   10dcc:	ldr	r0, [pc, #384]	; 10f54 <main@@Base+0x4a8>
   10dd0:	add	r0, pc, r0
   10dd4:	bl	10a58 <puts@plt>
   10dd8:	mov	r0, r7
   10ddc:	bl	1113c <imprimeArmazem@@Base>
   10de0:	mov	r0, r7
   10de4:	bl	112b0 <armazem_vazio@@Base>
   10de8:	cmp	r0, #0
   10dec:	bne	10e18 <main@@Base+0x36c>
   10df0:	ldr	r0, [pc, #352]	; 10f58 <main@@Base+0x4ac>
   10df4:	add	r0, pc, r0
   10df8:	bl	10a58 <puts@plt>
   10dfc:	mov	r0, #0
   10e00:	add	sp, sp, #28
   10e04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10e08:	ldr	r0, [pc, #332]	; 10f5c <main@@Base+0x4b0>
   10e0c:	add	r0, pc, r0
   10e10:	bl	10a58 <puts@plt>
   10e14:	b	10d34 <main@@Base+0x288>
   10e18:	ldr	r0, [pc, #320]	; 10f60 <main@@Base+0x4b4>
   10e1c:	add	r0, pc, r0
   10e20:	bl	10a58 <puts@plt>
   10e24:	b	10dfc <main@@Base+0x350>
   10e28:	ldr	r0, [pc, #308]	; 10f64 <main@@Base+0x4b8>
   10e2c:	ldr	r1, [r4]
   10e30:	add	r0, pc, r0
   10e34:	bl	10a34 <printf@plt>
   10e38:	b	10d48 <main@@Base+0x29c>
   10e3c:	ldr	r0, [pc, #292]	; 10f68 <main@@Base+0x4bc>
   10e40:	ldr	r1, [r5]
   10e44:	add	r0, pc, r0
   10e48:	bl	10a34 <printf@plt>
   10e4c:	b	10d04 <main@@Base+0x258>
   10e50:	ldr	r3, [sp, #16]
   10e54:	ldr	r0, [pc, #272]	; 10f6c <main@@Base+0x4c0>
   10e58:	ldr	r1, [r3]
   10e5c:	add	r0, pc, r0
   10e60:	bl	10a34 <printf@plt>
   10e64:	b	10cf0 <main@@Base+0x244>
   10e68:	ldr	r3, [sp, #12]
   10e6c:	ldr	r0, [pc, #252]	; 10f70 <main@@Base+0x4c4>
   10e70:	ldr	r1, [r3]
   10e74:	add	r0, pc, r0
   10e78:	bl	10a34 <printf@plt>
   10e7c:	b	10cdc <main@@Base+0x230>
   10e80:	ldr	r3, [sp, #8]
   10e84:	ldr	r0, [pc, #232]	; 10f74 <main@@Base+0x4c8>
   10e88:	ldr	r1, [r3]
   10e8c:	add	r0, pc, r0
   10e90:	bl	10a34 <printf@plt>
   10e94:	b	10cc8 <main@@Base+0x21c>
   10e98:	ldr	r3, [sp, #4]
   10e9c:	ldr	r0, [pc, #212]	; 10f78 <main@@Base+0x4cc>
   10ea0:	ldr	r1, [r3]
   10ea4:	add	r0, pc, r0
   10ea8:	bl	10a34 <printf@plt>
   10eac:	b	10cb4 <main@@Base+0x208>
   10eb0:	ldr	r0, [pc, #196]	; 10f7c <main@@Base+0x4d0>
   10eb4:	ldr	r1, [r6]
   10eb8:	add	r0, pc, r0
   10ebc:	bl	10a34 <printf@plt>
   10ec0:	b	10ca0 <main@@Base+0x1f4>
   10ec4:	cmnmi	r6, #0
   10ec8:	cmnmi	sl, #0
   10ecc:	strmi	r8, [r4], #-0
   10ed0:	ldrtmi	r8, [r1], #-0
   10ed4:			; <UNDEFINED> instruction: 0x43be0000
   10ed8:	bicmi	r0, r3, #0
   10edc:	sbcmi	r0, r8, #0
   10ee0:	adcmi	r0, r0, #0
   10ee4:	tstmi	r6, #0
   10ee8:	orrmi	r0, r7, #0
   10eec:	bicsmi	r0, r7, #0
   10ef0:	movtmi	r0, #32768	; 0x8000
   10ef4:			; <UNDEFINED> instruction: 0x00000db4
   10ef8:			; <UNDEFINED> instruction: 0x00000db8
   10efc:	andeq	r0, r0, ip, lsr #27
   10f00:	muleq	r0, ip, sp
   10f04:	muleq	r0, r0, sp
   10f08:	andeq	r0, r0, r4, lsl #27
   10f0c:	andeq	r0, r0, r8, ror sp
   10f10:	andeq	r0, r0, ip, ror #26
   10f14:	andeq	r0, r0, r4, ror #26
   10f18:	andeq	r0, r0, r8, asr sp
   10f1c:	andeq	r0, r0, r0, asr sp
   10f20:	andeq	r0, r0, r4, asr #26
   10f24:	andeq	r0, r0, ip, lsr sp
   10f28:	andeq	r0, r0, r0, lsr sp
   10f2c:	andeq	r0, r0, r8, lsr #26
   10f30:	andeq	r0, r0, r0, lsr sp
   10f34:	andeq	r0, r0, r0, lsr #26
   10f38:	andeq	r0, r0, r8, lsr #26
   10f3c:	andeq	r0, r0, r0, lsr #25
   10f40:	muleq	r0, r8, ip
   10f44:	strdeq	r0, [r0], -r8
   10f48:	andeq	r0, r0, r4, lsl sp
   10f4c:	andeq	r0, r0, r0, lsl #26
   10f50:	andeq	r0, r0, r8, lsl #26
   10f54:	strdeq	r0, [r0], -ip
   10f58:	andeq	r0, r0, r4, lsl #26
   10f5c:	andeq	r0, r0, r8, asr #23
   10f60:	andeq	r0, r0, ip, asr #25
   10f64:	andeq	r0, r0, ip, asr #23
   10f68:	strdeq	r0, [r0], -ip
   10f6c:	andeq	r0, r0, r4, ror #21
   10f70:	andeq	r0, r0, ip, asr #21
   10f74:			; <UNDEFINED> instruction: 0x00000ab4
   10f78:	muleq	r0, ip, sl
   10f7c:	andeq	r0, r0, r8, lsl #21
   10f80:	muleq	r0, ip, r9
   10f84:	andeq	r0, r0, r8, lsl #19
   10f88:	andeq	r0, r0, r4, ror r9
   10f8c:	andeq	r0, r0, r0, ror #18
   10f90:	andeq	r0, r0, ip, asr #18
   10f94:	andeq	r0, r0, r8, lsr r9
   10f98:	ldr	r3, [sp]
   10f9c:	ldr	r0, [pc, #-36]	; 10f80 <main@@Base+0x4d4>
   10fa0:	ldr	r1, [r3]
   10fa4:	add	r0, pc, r0
   10fa8:	bl	10a34 <printf@plt>
   10fac:	b	10c8c <main@@Base+0x1e0>
   10fb0:	ldr	r0, [pc, #-52]	; 10f84 <main@@Base+0x4d8>
   10fb4:	ldr	r1, [r8]
   10fb8:	add	r0, pc, r0
   10fbc:	bl	10a34 <printf@plt>
   10fc0:	b	10c78 <main@@Base+0x1cc>
   10fc4:	ldr	r0, [pc, #-68]	; 10f88 <main@@Base+0x4dc>
   10fc8:	ldr	r1, [r9]
   10fcc:	add	r0, pc, r0
   10fd0:	bl	10a34 <printf@plt>
   10fd4:	b	10c44 <main@@Base+0x198>
   10fd8:	ldr	r0, [pc, #-84]	; 10f8c <main@@Base+0x4e0>
   10fdc:	ldr	r1, [r4]
   10fe0:	add	r0, pc, r0
   10fe4:	bl	10a34 <printf@plt>
   10fe8:	b	10c30 <main@@Base+0x184>
   10fec:	ldr	r0, [pc, #-100]	; 10f90 <main@@Base+0x4e4>
   10ff0:	ldr	r1, [sl]
   10ff4:	add	r0, pc, r0
   10ff8:	bl	10a34 <printf@plt>
   10ffc:	b	10c1c <main@@Base+0x170>
   11000:	ldr	r0, [pc, #-116]	; 10f94 <main@@Base+0x4e8>
   11004:	ldr	r1, [fp]
   11008:	add	r0, pc, r0
   1100c:	bl	10a34 <printf@plt>
   11010:	b	10c08 <main@@Base+0x15c>

00011014 <_start@@Base>:
   11014:	mov	fp, #0
   11018:	mov	lr, #0
   1101c:	pop	{r1}		; (ldr r1, [sp], #4)
   11020:	mov	r2, sp
   11024:	push	{r2}		; (str r2, [sp, #-4]!)
   11028:	push	{r0}		; (str r0, [sp, #-4]!)
   1102c:	ldr	ip, [pc, #16]	; 11044 <_start@@Base+0x30>
   11030:	push	{ip}		; (str ip, [sp, #-4]!)
   11034:	ldr	r0, [pc, #12]	; 11048 <_start@@Base+0x34>
   11038:	ldr	r3, [pc, #12]	; 1104c <_start@@Base+0x38>
   1103c:	bl	10a70 <__libc_start_main@plt>
   11040:	bl	10aa0 <abort@plt>
   11044:	andeq	r1, r1, r4, asr r8
   11048:	andeq	r0, r1, ip, lsr #21
   1104c:	strdeq	r1, [r1], -r4
   11050:	ldr	r3, [pc, #20]	; 1106c <_start@@Base+0x58>
   11054:	ldr	r2, [pc, #20]	; 11070 <_start@@Base+0x5c>
   11058:	add	r3, pc, r3
   1105c:	ldr	r2, [r3, r2]
   11060:	cmp	r2, #0
   11064:	bxeq	lr
   11068:	b	10a7c <__gmon_start__@plt>
   1106c:	andeq	r0, r1, r0, lsr #31
   11070:	andeq	r0, r0, r8, lsr r0
   11074:	ldr	r3, [pc, #28]	; 11098 <_start@@Base+0x84>
   11078:	ldr	r0, [pc, #28]	; 1109c <_start@@Base+0x88>
   1107c:	sub	r3, r3, r0
   11080:	cmp	r3, #6
   11084:	bxls	lr
   11088:	ldr	r3, [pc, #16]	; 110a0 <_start@@Base+0x8c>
   1108c:	cmp	r3, #0
   11090:	bxeq	lr
   11094:	bx	r3
   11098:	andeq	r2, r2, r7, asr #32
   1109c:	andeq	r2, r2, r4, asr #32
   110a0:	andeq	r0, r0, r0
   110a4:	ldr	r1, [pc, #36]	; 110d0 <_start@@Base+0xbc>
   110a8:	ldr	r0, [pc, #36]	; 110d4 <_start@@Base+0xc0>
   110ac:	sub	r1, r1, r0
   110b0:	asr	r1, r1, #2
   110b4:	add	r1, r1, r1, lsr #31
   110b8:	asrs	r1, r1, #1
   110bc:	bxeq	lr
   110c0:	ldr	r3, [pc, #16]	; 110d8 <_start@@Base+0xc4>
   110c4:	cmp	r3, #0
   110c8:	bxeq	lr
   110cc:	bx	r3
   110d0:	andeq	r2, r2, r4, asr #32
   110d4:	andeq	r2, r2, r4, asr #32
   110d8:	andeq	r0, r0, r0
   110dc:	push	{r4, lr}
   110e0:	ldr	r4, [pc, #24]	; 11100 <_start@@Base+0xec>
   110e4:	ldrb	r3, [r4]
   110e8:	cmp	r3, #0
   110ec:	popne	{r4, pc}
   110f0:	bl	11074 <_start@@Base+0x60>
   110f4:	mov	r3, #1
   110f8:	strb	r3, [r4]
   110fc:	pop	{r4, pc}
   11100:	andeq	r2, r2, r4, asr #32
   11104:	ldr	r0, [pc, #40]	; 11134 <_start@@Base+0x120>
   11108:	ldr	r3, [r0]
   1110c:	cmp	r3, #0
   11110:	bne	11118 <_start@@Base+0x104>
   11114:	b	110a4 <_start@@Base+0x90>
   11118:	ldr	r3, [pc, #24]	; 11138 <_start@@Base+0x124>
   1111c:	cmp	r3, #0
   11120:	beq	11114 <_start@@Base+0x100>
   11124:	push	{r4, lr}
   11128:	blx	r3
   1112c:	pop	{r4, lr}
   11130:	b	110a4 <_start@@Base+0x90>
   11134:	andeq	r1, r2, r4, lsl pc
   11138:	andeq	r0, r0, r0

0001113c <imprimeArmazem@@Base>:
   1113c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11140:	subs	r8, r0, #0
   11144:	sub	sp, sp, #12
   11148:	beq	11260 <imprimeArmazem@@Base+0x124>
   1114c:	ldr	r4, [r8, #8]
   11150:	cmp	r4, #0
   11154:	beq	11260 <imprimeArmazem@@Base+0x124>
   11158:	ldr	r5, [r4, #4]
   1115c:	mov	r1, #4
   11160:	mov	r0, r5
   11164:	bl	10a28 <calloc@plt>
   11168:	ldr	r3, [r4]
   1116c:	cmp	r3, #0
   11170:	mov	r9, r0
   11174:	subne	r2, r0, #4
   11178:	beq	11190 <imprimeArmazem@@Base+0x54>
   1117c:	ldm	r3, {r1, r3}
   11180:	ldr	r1, [r1, #4]
   11184:	cmp	r3, #0
   11188:	str	r1, [r2, #4]!
   1118c:	bne	1117c <imprimeArmazem@@Base+0x40>
   11190:	mov	r0, #10
   11194:	bl	10a94 <putchar@plt>
   11198:	ldr	r4, [r8, #4]
   1119c:	cmp	r4, #0
   111a0:	ble	11208 <imprimeArmazem@@Base+0xcc>
   111a4:	ldr	r6, [pc, #188]	; 11268 <imprimeArmazem@@Base+0x12c>
   111a8:	ldr	r7, [pc, #188]	; 1126c <imprimeArmazem@@Base+0x130>
   111ac:	ldr	r3, [pc, #188]	; 11270 <imprimeArmazem@@Base+0x134>
   111b0:	add	r6, pc, r6
   111b4:	add	r7, pc, r7
   111b8:	add	r3, pc, r3
   111bc:	str	r3, [sp, #4]
   111c0:	ldr	r0, [sp, #4]
   111c4:	bl	10a34 <printf@plt>
   111c8:	cmp	r5, #0
   111cc:	subgt	fp, r9, #4
   111d0:	movgt	sl, #0
   111d4:	ble	111f8 <imprimeArmazem@@Base+0xbc>
   111d8:	ldr	r1, [fp, #4]!
   111dc:	mov	r0, r6
   111e0:	cmp	r1, r4
   111e4:	movge	r0, r7
   111e8:	add	sl, sl, #1
   111ec:	bl	10a34 <printf@plt>
   111f0:	cmp	r5, sl
   111f4:	bne	111d8 <imprimeArmazem@@Base+0x9c>
   111f8:	mov	r0, #10
   111fc:	bl	10a94 <putchar@plt>
   11200:	subs	r4, r4, #1
   11204:	bne	111c0 <imprimeArmazem@@Base+0x84>
   11208:	ldr	r0, [pc, #100]	; 11274 <imprimeArmazem@@Base+0x138>
   1120c:	ldr	r5, [pc, #100]	; 11278 <imprimeArmazem@@Base+0x13c>
   11210:	add	r0, pc, r0
   11214:	bl	10a34 <printf@plt>
   11218:	ldr	r3, [r8]
   1121c:	add	r5, pc, r5
   11220:	cmp	r3, #0
   11224:	mov	r4, #0
   11228:	ble	11244 <imprimeArmazem@@Base+0x108>
   1122c:	mov	r0, r5
   11230:	bl	10a34 <printf@plt>
   11234:	ldr	r3, [r8]
   11238:	add	r4, r4, #1
   1123c:	cmp	r3, r4
   11240:	bgt	1122c <imprimeArmazem@@Base+0xf0>
   11244:	ldr	r0, [pc, #48]	; 1127c <imprimeArmazem@@Base+0x140>
   11248:	add	r0, pc, r0
   1124c:	bl	10a58 <puts@plt>
   11250:	mov	r0, r9
   11254:	add	sp, sp, #12
   11258:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1125c:	b	10a40 <free@plt>
   11260:	add	sp, sp, #12
   11264:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11268:			; <UNDEFINED> instruction: 0x000006bc
   1126c:			; <UNDEFINED> instruction: 0x000006b0
   11270:	andeq	r0, r0, r8, lsr #13
   11274:	andeq	r0, r0, ip, asr #12
   11278:	andeq	r0, r0, r8, asr r6
   1127c:	andeq	r0, r0, ip, lsl r7

00011280 <armazem_novo@@Base>:
   11280:	push	{r4, r5, r6, lr}
   11284:	mov	r6, r0
   11288:	mov	r0, #12
   1128c:	mov	r5, r1
   11290:	bl	10a64 <malloc@plt>
   11294:	str	r6, [r0]
   11298:	str	r5, [r0, #4]
   1129c:	mov	r4, r0
   112a0:	bl	11540 <fila_nova@@Base>
   112a4:	str	r0, [r4, #8]
   112a8:	mov	r0, r4
   112ac:	pop	{r4, r5, r6, pc}

000112b0 <armazem_vazio@@Base>:
   112b0:	cmp	r0, #0
   112b4:	beq	112d0 <armazem_vazio@@Base+0x20>
   112b8:	push	{r4, lr}
   112bc:	ldr	r0, [r0, #8]
   112c0:	bl	115a0 <fila_tamanho@@Base>
   112c4:	clz	r0, r0
   112c8:	lsr	r0, r0, #5
   112cc:	pop	{r4, pc}
   112d0:	mov	r0, #1
   112d4:	bx	lr

000112d8 <armazem_cheio@@Base>:
   112d8:	push	{r4, lr}
   112dc:	mov	r4, r0
   112e0:	bl	112b0 <armazem_vazio@@Base>
   112e4:	cmp	r0, #0
   112e8:	beq	112f4 <armazem_cheio@@Base+0x1c>
   112ec:	mov	r0, #0
   112f0:	pop	{r4, pc}
   112f4:	ldr	r0, [r4, #8]
   112f8:	bl	115a0 <fila_tamanho@@Base>
   112fc:	ldr	r3, [r4]
   11300:	cmp	r0, r3
   11304:	bne	112ec <armazem_cheio@@Base+0x14>
   11308:	ldr	r0, [r4, #8]
   1130c:	bl	115d0 <fila_back@@Base>
   11310:	ldr	r3, [r4, #4]
   11314:	ldr	r0, [r0, #4]
   11318:	sub	r0, r0, r3
   1131c:	clz	r0, r0
   11320:	lsr	r0, r0, #5
   11324:	pop	{r4, pc}

00011328 <armazenar_contentor@@Base>:
   11328:	push	{r4, r5, r6, r7, r8, lr}
   1132c:	mov	r4, r0
   11330:	mov	r5, r1
   11334:	bl	116f4 <pilha_nova@@Base>
   11338:	cmp	r5, #0
   1133c:	cmpne	r4, #0
   11340:	bne	1134c <armazenar_contentor@@Base+0x24>
   11344:	mov	r0, #0
   11348:	pop	{r4, r5, r6, r7, r8, pc}
   1134c:	mov	r6, r0
   11350:	mov	r0, r4
   11354:	bl	112d8 <armazem_cheio@@Base>
   11358:	cmp	r0, #0
   1135c:	bne	11344 <armazenar_contentor@@Base+0x1c>
   11360:	mov	r0, r4
   11364:	bl	112b0 <armazem_vazio@@Base>
   11368:	cmp	r0, #0
   1136c:	bne	113a0 <armazenar_contentor@@Base+0x78>
   11370:	ldr	r0, [r4, #8]
   11374:	bl	115d0 <fila_back@@Base>
   11378:	ldr	r3, [r4, #4]
   1137c:	ldr	r2, [r0, #4]
   11380:	cmp	r2, r3
   11384:	beq	113b8 <armazenar_contentor@@Base+0x90>
   11388:	ldr	r0, [r4, #8]
   1138c:	bl	115d0 <fila_back@@Base>
   11390:	mov	r1, r5
   11394:	bl	11784 <pilha_push@@Base>
   11398:	mov	r0, #1
   1139c:	pop	{r4, r5, r6, r7, r8, pc}
   113a0:	ldr	r7, [r4, #8]
   113a4:	bl	116f4 <pilha_nova@@Base>
   113a8:	mov	r1, r0
   113ac:	mov	r0, r7
   113b0:	bl	1160c <fila_push@@Base>
   113b4:	b	11370 <armazenar_contentor@@Base+0x48>
   113b8:	mov	r1, r6
   113bc:	ldr	r0, [r4, #8]
   113c0:	bl	1160c <fila_push@@Base>
   113c4:	b	11388 <armazenar_contentor@@Base+0x60>

000113c8 <expedir_contentor@@Base>:
   113c8:	push	{r4, r5, r6, lr}
   113cc:	mov	r4, r0
   113d0:	bl	112b0 <armazem_vazio@@Base>
   113d4:	cmp	r0, #0
   113d8:	bne	11444 <expedir_contentor@@Base+0x7c>
   113dc:	ldr	r0, [r4, #8]
   113e0:	bl	115b0 <fila_front@@Base>
   113e4:	bl	11764 <pilha_top@@Base>
   113e8:	cmp	r0, #0
   113ec:	beq	11444 <expedir_contentor@@Base+0x7c>
   113f0:	ldr	r0, [r4, #8]
   113f4:	bl	115b0 <fila_front@@Base>
   113f8:	bl	11764 <pilha_top@@Base>
   113fc:	ldr	r5, [r0]
   11400:	ldr	r0, [r4, #8]
   11404:	bl	115b0 <fila_front@@Base>
   11408:	bl	11764 <pilha_top@@Base>
   1140c:	vldr	s0, [r0, #4]
   11410:	mov	r0, r5
   11414:	bl	1145c <contentor_novo@@Base>
   11418:	mov	r5, r0
   1141c:	ldr	r0, [r4, #8]
   11420:	bl	115b0 <fila_front@@Base>
   11424:	ldr	r3, [r0, #4]
   11428:	ldr	r0, [r4, #8]
   1142c:	cmp	r3, #1
   11430:	ble	11450 <expedir_contentor@@Base+0x88>
   11434:	bl	115b0 <fila_front@@Base>
   11438:	bl	117bc <pilha_pop@@Base>
   1143c:	mov	r0, r5
   11440:	pop	{r4, r5, r6, pc}
   11444:	mov	r5, #0
   11448:	mov	r0, r5
   1144c:	pop	{r4, r5, r6, pc}
   11450:	bl	11664 <fila_pop@@Base>
   11454:	mov	r0, r5
   11458:	pop	{r4, r5, r6, pc}

0001145c <contentor_novo@@Base>:
   1145c:	push	{r4, r5, r6, lr}
   11460:	mov	r5, r0
   11464:	vpush	{d8}
   11468:	mov	r0, #8
   1146c:	vmov.f32	s16, s0
   11470:	bl	10a64 <malloc@plt>
   11474:	mov	r4, r0
   11478:	mov	r0, r5
   1147c:	bl	10a88 <strlen@plt>
   11480:	add	r6, r0, #1
   11484:	mov	r0, r6
   11488:	bl	10a64 <malloc@plt>
   1148c:	mov	r2, r6
   11490:	mov	r1, r5
   11494:	str	r0, [r4]
   11498:	bl	10a4c <memcpy@plt>
   1149c:	vstr	s16, [r4, #4]
   114a0:	vpop	{d8}
   114a4:	mov	r0, r4
   114a8:	pop	{r4, r5, r6, pc}

000114ac <contentor_apaga@@Base>:
   114ac:	push	{r4, lr}
   114b0:	mov	r4, r0
   114b4:	ldr	r0, [r0]
   114b8:	bl	10a40 <free@plt>
   114bc:	mov	r0, r4
   114c0:	pop	{r4, lr}
   114c4:	b	10a40 <free@plt>

000114c8 <contentor_imprime@@Base>:
   114c8:	cmp	r0, #0
   114cc:	beq	114ec <contentor_imprime@@Base+0x24>
   114d0:	vldr	s15, [r0, #4]
   114d4:	ldr	r1, [r0]
   114d8:	ldr	r0, [pc, #24]	; 114f8 <contentor_imprime@@Base+0x30>
   114dc:	vcvt.f64.f32	d7, s15
   114e0:	add	r0, pc, r0
   114e4:	vmov	r2, r3, d7
   114e8:	b	10a34 <printf@plt>
   114ec:	ldr	r0, [pc, #8]	; 114fc <contentor_imprime@@Base+0x34>
   114f0:	add	r0, pc, r0
   114f4:	b	10a58 <puts@plt>
   114f8:	andeq	r0, r0, r0, asr r6
   114fc:	andeq	r0, r0, r0, lsr r6

00011500 <fila_novo_elemento@@Base>:
   11500:	push	{r4, lr}
   11504:	mov	r4, r0
   11508:	mov	r0, #8
   1150c:	bl	10a64 <malloc@plt>
   11510:	subs	r3, r0, #0
   11514:	beq	1152c <fila_novo_elemento@@Base+0x2c>
   11518:	cmp	r4, #0
   1151c:	movne	r2, #0
   11520:	str	r4, [r3]
   11524:	strne	r2, [r3, #4]
   11528:	beq	11534 <fila_novo_elemento@@Base+0x34>
   1152c:	mov	r0, r3
   11530:	pop	{r4, pc}
   11534:	bl	10a40 <free@plt>
   11538:	mov	r3, r4
   1153c:	b	1152c <fila_novo_elemento@@Base+0x2c>

00011540 <fila_nova@@Base>:
   11540:	push	{r4, lr}
   11544:	mov	r0, #8
   11548:	bl	10a64 <malloc@plt>
   1154c:	cmp	r0, #0
   11550:	movne	r3, #0
   11554:	strne	r3, [r0]
   11558:	strne	r3, [r0, #4]
   1155c:	pop	{r4, pc}

00011560 <fila_apaga@@Base>:
   11560:	push	{r4, r5, r6, lr}
   11564:	subs	r5, r0, #0
   11568:	bne	11584 <fila_apaga@@Base+0x24>
   1156c:	b	1159c <fila_apaga@@Base+0x3c>
   11570:	ldm	r4, {r0, r3}
   11574:	str	r3, [r5]
   11578:	bl	11714 <pilha_apaga@@Base>
   1157c:	mov	r0, r4
   11580:	bl	10a40 <free@plt>
   11584:	ldr	r4, [r5]
   11588:	cmp	r4, #0
   1158c:	bne	11570 <fila_apaga@@Base+0x10>
   11590:	mov	r0, r5
   11594:	pop	{r4, r5, r6, lr}
   11598:	b	10a40 <free@plt>
   1159c:	pop	{r4, r5, r6, pc}

000115a0 <fila_tamanho@@Base>:
   115a0:	cmp	r0, #0
   115a4:	ldrne	r0, [r0, #4]
   115a8:	mvneq	r0, #0
   115ac:	bx	lr

000115b0 <fila_front@@Base>:
   115b0:	cmp	r0, #0
   115b4:	bxeq	lr
   115b8:	ldr	r3, [r0, #4]
   115bc:	cmp	r3, #0
   115c0:	ldrne	r3, [r0]
   115c4:	ldrne	r0, [r3]
   115c8:	moveq	r0, r3
   115cc:	bx	lr

000115d0 <fila_back@@Base>:
   115d0:	cmp	r0, #0
   115d4:	bxeq	lr
   115d8:	ldr	r3, [r0, #4]
   115dc:	cmp	r3, #0
   115e0:	beq	11604 <fila_back@@Base+0x34>
   115e4:	ldr	r2, [r0]
   115e8:	b	115f0 <fila_back@@Base+0x20>
   115ec:	mov	r2, r3
   115f0:	ldr	r3, [r2, #4]
   115f4:	cmp	r3, #0
   115f8:	bne	115ec <fila_back@@Base+0x1c>
   115fc:	ldr	r0, [r2]
   11600:	bx	lr
   11604:	mov	r0, r3
   11608:	bx	lr

0001160c <fila_push@@Base>:
   1160c:	push	{r4, r5, r6, lr}
   11610:	subs	r5, r0, #0
   11614:	popeq	{r4, r5, r6, pc}
   11618:	mov	r0, r1
   1161c:	ldr	r4, [r5]
   11620:	bl	11500 <fila_novo_elemento@@Base>
   11624:	cmp	r0, #0
   11628:	popeq	{r4, r5, r6, pc}
   1162c:	ldr	r3, [r5, #4]
   11630:	cmp	r4, #0
   11634:	add	r3, r3, #1
   11638:	str	r3, [r5, #4]
   1163c:	bne	11648 <fila_push@@Base+0x3c>
   11640:	b	1165c <fila_push@@Base+0x50>
   11644:	mov	r4, r3
   11648:	ldr	r3, [r4, #4]
   1164c:	cmp	r3, #0
   11650:	bne	11644 <fila_push@@Base+0x38>
   11654:	str	r0, [r4, #4]
   11658:	pop	{r4, r5, r6, pc}
   1165c:	str	r0, [r5]
   11660:	pop	{r4, r5, r6, pc}

00011664 <fila_pop@@Base>:
   11664:	subs	r3, r0, #0
   11668:	bxeq	lr
   1166c:	ldr	r2, [r3, #4]
   11670:	cmp	r2, #0
   11674:	bxeq	lr
   11678:	push	{r4, lr}
   1167c:	sub	r2, r2, #1
   11680:	ldr	r4, [r3]
   11684:	str	r2, [r3, #4]
   11688:	ldm	r4, {r0, r2}
   1168c:	str	r2, [r3]
   11690:	bl	11714 <pilha_apaga@@Base>
   11694:	mov	r0, r4
   11698:	pop	{r4, lr}
   1169c:	b	10a40 <free@plt>

000116a0 <pilha_novo_elemento@@Base>:
   116a0:	push	{r4, r5, r6, lr}
   116a4:	mov	r5, r0
   116a8:	mov	r0, #8
   116ac:	bl	10a64 <malloc@plt>
   116b0:	subs	r4, r0, #0
   116b4:	beq	116dc <pilha_novo_elemento@@Base+0x3c>
   116b8:	vldr	s0, [r5, #4]
   116bc:	ldr	r0, [r5]
   116c0:	bl	1145c <contentor_novo@@Base>
   116c4:	cmp	r0, #0
   116c8:	movne	r3, #0
   116cc:	mov	r5, r0
   116d0:	str	r0, [r4]
   116d4:	strne	r3, [r4, #4]
   116d8:	beq	116e4 <pilha_novo_elemento@@Base+0x44>
   116dc:	mov	r0, r4
   116e0:	pop	{r4, r5, r6, pc}
   116e4:	mov	r0, r4
   116e8:	bl	10a40 <free@plt>
   116ec:	mov	r4, r5
   116f0:	b	116dc <pilha_novo_elemento@@Base+0x3c>

000116f4 <pilha_nova@@Base>:
   116f4:	push	{r4, lr}
   116f8:	mov	r0, #8
   116fc:	bl	10a64 <malloc@plt>
   11700:	cmp	r0, #0
   11704:	movne	r3, #0
   11708:	strne	r3, [r0]
   1170c:	strne	r3, [r0, #4]
   11710:	pop	{r4, pc}

00011714 <pilha_apaga@@Base>:
   11714:	push	{r4, r5, r6, lr}
   11718:	subs	r5, r0, #0
   1171c:	bne	11738 <pilha_apaga@@Base+0x24>
   11720:	b	11750 <pilha_apaga@@Base+0x3c>
   11724:	ldm	r4, {r0, r3}
   11728:	str	r3, [r5]
   1172c:	bl	114ac <contentor_apaga@@Base>
   11730:	mov	r0, r4
   11734:	bl	10a40 <free@plt>
   11738:	ldr	r4, [r5]
   1173c:	cmp	r4, #0
   11740:	bne	11724 <pilha_apaga@@Base+0x10>
   11744:	mov	r0, r5
   11748:	pop	{r4, r5, r6, lr}
   1174c:	b	10a40 <free@plt>
   11750:	pop	{r4, r5, r6, pc}

00011754 <pilha_tamanho@@Base>:
   11754:	cmp	r0, #0
   11758:	ldrne	r0, [r0, #4]
   1175c:	mvneq	r0, #0
   11760:	bx	lr

00011764 <pilha_top@@Base>:
   11764:	cmp	r0, #0
   11768:	bxeq	lr
   1176c:	ldr	r3, [r0, #4]
   11770:	cmp	r3, #0
   11774:	ldrne	r3, [r0]
   11778:	ldrne	r0, [r3]
   1177c:	moveq	r0, r3
   11780:	bx	lr

00011784 <pilha_push@@Base>:
   11784:	push	{r4, lr}
   11788:	subs	r4, r0, #0
   1178c:	popeq	{r4, pc}
   11790:	mov	r0, r1
   11794:	bl	116a0 <pilha_novo_elemento@@Base>
   11798:	cmp	r0, #0
   1179c:	popeq	{r4, pc}
   117a0:	ldm	r4, {r2, r3}
   117a4:	add	r3, r3, #1
   117a8:	cmp	r2, #0
   117ac:	str	r3, [r4, #4]
   117b0:	strne	r2, [r0, #4]
   117b4:	str	r0, [r4]
   117b8:	pop	{r4, pc}

000117bc <pilha_pop@@Base>:
   117bc:	subs	r3, r0, #0
   117c0:	bxeq	lr
   117c4:	ldr	r2, [r3, #4]
   117c8:	cmp	r2, #0
   117cc:	bxeq	lr
   117d0:	push	{r4, lr}
   117d4:	sub	r2, r2, #1
   117d8:	ldr	r4, [r3]
   117dc:	ldm	r4, {r0, r1}
   117e0:	stm	r3, {r1, r2}
   117e4:	bl	114ac <contentor_apaga@@Base>
   117e8:	mov	r0, r4
   117ec:	pop	{r4, lr}
   117f0:	b	10a40 <free@plt>

000117f4 <__libc_csu_init@@Base>:
   117f4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   117f8:	mov	r7, r0
   117fc:	ldr	r6, [pc, #72]	; 1184c <__libc_csu_init@@Base+0x58>
   11800:	ldr	r5, [pc, #72]	; 11850 <__libc_csu_init@@Base+0x5c>
   11804:	add	r6, pc, r6
   11808:	add	r5, pc, r5
   1180c:	sub	r6, r6, r5
   11810:	mov	r8, r1
   11814:	mov	r9, r2
   11818:	bl	10a08 <calloc@plt-0x20>
   1181c:	asrs	r6, r6, #2
   11820:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11824:	mov	r4, #0
   11828:	add	r4, r4, #1
   1182c:	ldr	r3, [r5], #4
   11830:	mov	r2, r9
   11834:	mov	r1, r8
   11838:	mov	r0, r7
   1183c:	blx	r3
   11840:	cmp	r6, r4
   11844:	bne	11828 <__libc_csu_init@@Base+0x34>
   11848:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1184c:	andeq	r0, r1, r4, lsl #14
   11850:	strdeq	r0, [r1], -ip

00011854 <__libc_csu_fini@@Base>:
   11854:	bx	lr

Disassembly of section .fini:

00011858 <.fini>:
   11858:	push	{r3, lr}
   1185c:	pop	{r3, pc}
