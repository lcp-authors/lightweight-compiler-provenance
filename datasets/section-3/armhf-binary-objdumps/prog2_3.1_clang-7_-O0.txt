
../repos/prog2/3.1:     file format elf32-littlearm


Disassembly of section .init:

00010b70 <.init>:
   10b70:	push	{r3, lr}
   10b74:	bl	10cb0 <_start@@Base+0x3c>
   10b78:	pop	{r3, pc}

Disassembly of section .plt:

00010b7c <calloc@plt-0x14>:
   10b7c:	push	{lr}		; (str lr, [sp, #-4]!)
   10b80:	ldr	lr, [pc, #4]	; 10b8c <calloc@plt-0x4>
   10b84:	add	lr, pc, lr
   10b88:	ldr	pc, [lr, #8]!
   10b8c:	andeq	r1, r1, r4, ror r4

00010b90 <calloc@plt>:
   10b90:	add	ip, pc, #0, 12
   10b94:	add	ip, ip, #69632	; 0x11000
   10b98:	ldr	pc, [ip, #1140]!	; 0x474

00010b9c <strstr@plt>:
   10b9c:	add	ip, pc, #0, 12
   10ba0:	add	ip, ip, #69632	; 0x11000
   10ba4:	ldr	pc, [ip, #1132]!	; 0x46c

00010ba8 <strcmp@plt>:
   10ba8:	add	ip, pc, #0, 12
   10bac:	add	ip, ip, #69632	; 0x11000
   10bb0:	ldr	pc, [ip, #1124]!	; 0x464

00010bb4 <printf@plt>:
   10bb4:	add	ip, pc, #0, 12
   10bb8:	add	ip, ip, #69632	; 0x11000
   10bbc:	ldr	pc, [ip, #1116]!	; 0x45c

00010bc0 <fopen@plt>:
   10bc0:	add	ip, pc, #0, 12
   10bc4:	add	ip, ip, #69632	; 0x11000
   10bc8:	ldr	pc, [ip, #1108]!	; 0x454

00010bcc <free@plt>:
   10bcc:	add	ip, pc, #0, 12
   10bd0:	add	ip, ip, #69632	; 0x11000
   10bd4:	ldr	pc, [ip, #1100]!	; 0x44c

00010bd8 <fgets@plt>:
   10bd8:	add	ip, pc, #0, 12
   10bdc:	add	ip, ip, #69632	; 0x11000
   10be0:	ldr	pc, [ip, #1092]!	; 0x444

00010be4 <time@plt>:
   10be4:	add	ip, pc, #0, 12
   10be8:	add	ip, ip, #69632	; 0x11000
   10bec:	ldr	pc, [ip, #1084]!	; 0x43c

00010bf0 <realloc@plt>:
   10bf0:	add	ip, pc, #0, 12
   10bf4:	add	ip, ip, #69632	; 0x11000
   10bf8:	ldr	pc, [ip, #1076]!	; 0x434

00010bfc <strcat@plt>:
   10bfc:	add	ip, pc, #0, 12
   10c00:	add	ip, ip, #69632	; 0x11000
   10c04:	ldr	pc, [ip, #1068]!	; 0x42c

00010c08 <strcpy@plt>:
   10c08:	add	ip, pc, #0, 12
   10c0c:	add	ip, ip, #69632	; 0x11000
   10c10:	ldr	pc, [ip, #1060]!	; 0x424

00010c14 <malloc@plt>:
   10c14:	add	ip, pc, #0, 12
   10c18:	add	ip, ip, #69632	; 0x11000
   10c1c:	ldr	pc, [ip, #1052]!	; 0x41c

00010c20 <__libc_start_main@plt>:
   10c20:	add	ip, pc, #0, 12
   10c24:	add	ip, ip, #69632	; 0x11000
   10c28:	ldr	pc, [ip, #1044]!	; 0x414

00010c2c <__gmon_start__@plt>:
   10c2c:	add	ip, pc, #0, 12
   10c30:	add	ip, ip, #69632	; 0x11000
   10c34:	ldr	pc, [ip, #1036]!	; 0x40c

00010c38 <strlen@plt>:
   10c38:	add	ip, pc, #0, 12
   10c3c:	add	ip, ip, #69632	; 0x11000
   10c40:	ldr	pc, [ip, #1028]!	; 0x404

00010c44 <srand@plt>:
   10c44:	add	ip, pc, #0, 12
   10c48:	add	ip, ip, #69632	; 0x11000
   10c4c:	ldr	pc, [ip, #1020]!	; 0x3fc

00010c50 <rand@plt>:
   10c50:	add	ip, pc, #0, 12
   10c54:	add	ip, ip, #69632	; 0x11000
   10c58:	ldr	pc, [ip, #1012]!	; 0x3f4

00010c5c <fclose@plt>:
   10c5c:	add	ip, pc, #0, 12
   10c60:	add	ip, ip, #69632	; 0x11000
   10c64:	ldr	pc, [ip, #1004]!	; 0x3ec

00010c68 <abort@plt>:
   10c68:	add	ip, pc, #0, 12
   10c6c:	add	ip, ip, #69632	; 0x11000
   10c70:	ldr	pc, [ip, #996]!	; 0x3e4

Disassembly of section .text:

00010c74 <_start@@Base>:
   10c74:	mov	fp, #0
   10c78:	mov	lr, #0
   10c7c:	pop	{r1}		; (ldr r1, [sp], #4)
   10c80:	mov	r2, sp
   10c84:	push	{r2}		; (str r2, [sp, #-4]!)
   10c88:	push	{r0}		; (str r0, [sp, #-4]!)
   10c8c:	ldr	ip, [pc, #16]	; 10ca4 <_start@@Base+0x30>
   10c90:	push	{ip}		; (str ip, [sp, #-4]!)
   10c94:	ldr	r0, [pc, #12]	; 10ca8 <_start@@Base+0x34>
   10c98:	ldr	r3, [pc, #12]	; 10cac <_start@@Base+0x38>
   10c9c:	bl	10c20 <__libc_start_main@plt>
   10ca0:	bl	10c68 <abort@plt>
   10ca4:	andeq	r1, r1, r0, lsr #25
   10ca8:	andeq	r0, r1, r4, ror #26
   10cac:	andeq	r1, r1, r0, asr #24
   10cb0:	ldr	r3, [pc, #20]	; 10ccc <_start@@Base+0x58>
   10cb4:	ldr	r2, [pc, #20]	; 10cd0 <_start@@Base+0x5c>
   10cb8:	add	r3, pc, r3
   10cbc:	ldr	r2, [r3, r2]
   10cc0:	cmp	r2, #0
   10cc4:	bxeq	lr
   10cc8:	b	10c2c <__gmon_start__@plt>
   10ccc:	andeq	r1, r1, r0, asr #6
   10cd0:	andeq	r0, r0, ip, asr r0
   10cd4:	ldr	r0, [pc, #24]	; 10cf4 <_start@@Base+0x80>
   10cd8:	ldr	r3, [pc, #24]	; 10cf8 <_start@@Base+0x84>
   10cdc:	cmp	r3, r0
   10ce0:	bxeq	lr
   10ce4:	ldr	r3, [pc, #16]	; 10cfc <_start@@Base+0x88>
   10ce8:	cmp	r3, #0
   10cec:	bxeq	lr
   10cf0:	bx	r3
   10cf4:	andeq	r2, r2, r8, rrx
   10cf8:	andeq	r2, r2, r8, rrx
   10cfc:	andeq	r0, r0, r0
   10d00:	ldr	r0, [pc, #36]	; 10d2c <_start@@Base+0xb8>
   10d04:	ldr	r1, [pc, #36]	; 10d30 <_start@@Base+0xbc>
   10d08:	sub	r1, r1, r0
   10d0c:	asr	r1, r1, #2
   10d10:	add	r1, r1, r1, lsr #31
   10d14:	asrs	r1, r1, #1
   10d18:	bxeq	lr
   10d1c:	ldr	r3, [pc, #16]	; 10d34 <_start@@Base+0xc0>
   10d20:	cmp	r3, #0
   10d24:	bxeq	lr
   10d28:	bx	r3
   10d2c:	andeq	r2, r2, r8, rrx
   10d30:	andeq	r2, r2, r8, rrx
   10d34:	andeq	r0, r0, r0
   10d38:	push	{r4, lr}
   10d3c:	ldr	r4, [pc, #24]	; 10d5c <_start@@Base+0xe8>
   10d40:	ldrb	r3, [r4]
   10d44:	cmp	r3, #0
   10d48:	popne	{r4, pc}
   10d4c:	bl	10cd4 <_start@@Base+0x60>
   10d50:	mov	r3, #1
   10d54:	strb	r3, [r4]
   10d58:	pop	{r4, pc}
   10d5c:	andeq	r2, r2, r8, rrx
   10d60:	b	10d00 <_start@@Base+0x8c>

00010d64 <main@@Base>:
   10d64:	push	{fp, lr}
   10d68:	mov	fp, sp
   10d6c:	sub	sp, sp, #168	; 0xa8
   10d70:	ldr	r0, [pc, #472]	; 10f50 <main@@Base+0x1ec>
   10d74:	ldr	r0, [pc, r0]
   10d78:	movw	r1, #0
   10d7c:	str	r1, [fp, #-4]
   10d80:	str	r1, [sp, #56]	; 0x38
   10d84:	str	r1, [sp, #52]	; 0x34
   10d88:	blx	r0
   10d8c:	ldr	r1, [pc, #436]	; 10f48 <main@@Base+0x1e4>
   10d90:	add	r1, pc, r1
   10d94:	ldr	lr, [pc, #432]	; 10f4c <main@@Base+0x1e8>
   10d98:	add	lr, pc, lr
   10d9c:	str	r0, [sp, #48]	; 0x30
   10da0:	mov	r0, r1
   10da4:	mov	r1, lr
   10da8:	bl	10bc0 <fopen@plt>
   10dac:	str	r0, [fp, #-8]
   10db0:	add	r0, sp, #60	; 0x3c
   10db4:	ldr	r2, [fp, #-8]
   10db8:	movw	r1, #100	; 0x64
   10dbc:	bl	10bd8 <fgets@plt>
   10dc0:	movw	r1, #0
   10dc4:	cmp	r0, r1
   10dc8:	beq	10e30 <main@@Base+0xcc>
   10dcc:	add	r0, sp, #60	; 0x3c
   10dd0:	str	r0, [sp, #40]	; 0x28
   10dd4:	bl	10c38 <strlen@plt>
   10dd8:	sub	r0, r0, #1
   10ddc:	ldr	lr, [sp, #40]	; 0x28
   10de0:	add	r0, lr, r0
   10de4:	movw	r1, #0
   10de8:	strb	r1, [r0]
   10dec:	ldr	r0, [sp, #48]	; 0x30
   10df0:	ldr	r2, [sp, #56]	; 0x38
   10df4:	mov	r1, lr
   10df8:	bl	11554 <vetor_insere@@Base>
   10dfc:	cmn	r0, #1
   10e00:	bne	10e20 <main@@Base+0xbc>
   10e04:	ldr	r0, [pc, #360]	; 10f74 <main@@Base+0x210>
   10e08:	add	r0, pc, r0
   10e0c:	bl	10bb4 <printf@plt>
   10e10:	mvn	lr, #0
   10e14:	str	lr, [fp, #-4]
   10e18:	str	r0, [sp, #36]	; 0x24
   10e1c:	b	10f3c <main@@Base+0x1d8>
   10e20:	ldr	r0, [sp, #56]	; 0x38
   10e24:	add	r0, r0, #1
   10e28:	str	r0, [sp, #56]	; 0x38
   10e2c:	b	10db0 <main@@Base+0x4c>
   10e30:	ldr	r0, [pc, #292]	; 10f5c <main@@Base+0x1f8>
   10e34:	add	r0, pc, r0
   10e38:	ldr	r1, [sp, #56]	; 0x38
   10e3c:	bl	10bb4 <printf@plt>
   10e40:	ldr	r1, [sp, #48]	; 0x30
   10e44:	str	r0, [sp, #32]
   10e48:	mov	r0, r1
   10e4c:	bl	10f78 <vetor_imprime@@Base>
   10e50:	ldr	r0, [pc, #256]	; 10f58 <main@@Base+0x1f4>
   10e54:	add	r1, pc, r0
   10e58:	ldr	r0, [sp, #48]	; 0x30
   10e5c:	bl	117f0 <vetor_pesquisa@@Base>
   10e60:	ldr	r1, [pc, #236]	; 10f54 <main@@Base+0x1f0>
   10e64:	add	r1, pc, r1
   10e68:	str	r0, [sp, #28]
   10e6c:	mov	r0, r1
   10e70:	ldr	r1, [sp, #28]
   10e74:	bl	10bb4 <printf@plt>
   10e78:	ldr	r1, [sp, #48]	; 0x30
   10e7c:	str	r0, [sp, #24]
   10e80:	mov	r0, r1
   10e84:	bl	11894 <vetor_ordena@@Base>
   10e88:	cmp	r0, #0
   10e8c:	bne	10e9c <main@@Base+0x138>
   10e90:	ldr	r0, [sp, #48]	; 0x30
   10e94:	bl	10f78 <vetor_imprime@@Base>
   10e98:	b	10eac <main@@Base+0x148>
   10e9c:	ldr	r0, [pc, #188]	; 10f60 <main@@Base+0x1fc>
   10ea0:	add	r0, pc, r0
   10ea4:	bl	10bb4 <printf@plt>
   10ea8:	str	r0, [sp, #20]
   10eac:	ldr	r0, [pc, #188]	; 10f70 <main@@Base+0x20c>
   10eb0:	add	r1, pc, r0
   10eb4:	ldr	r0, [sp, #48]	; 0x30
   10eb8:	bl	11000 <vetor_num_ocorrencias@@Base>
   10ebc:	ldr	r1, [pc, #168]	; 10f6c <main@@Base+0x208>
   10ec0:	add	r1, pc, r1
   10ec4:	str	r0, [sp, #16]
   10ec8:	mov	r0, r1
   10ecc:	ldr	r1, [sp, #16]
   10ed0:	bl	10bb4 <printf@plt>
   10ed4:	ldr	r1, [sp, #48]	; 0x30
   10ed8:	str	r0, [sp, #12]
   10edc:	mov	r0, r1
   10ee0:	bl	110a0 <vetor_remove_repetidas@@Base>
   10ee4:	ldr	r0, [pc, #124]	; 10f68 <main@@Base+0x204>
   10ee8:	add	r0, pc, r0
   10eec:	ldr	r1, [sp, #48]	; 0x30
   10ef0:	ldr	r1, [r1]
   10ef4:	sub	r1, r1, #1
   10ef8:	bl	10bb4 <printf@plt>
   10efc:	ldr	r1, [pc, #96]	; 10f64 <main@@Base+0x200>
   10f00:	add	r1, pc, r1
   10f04:	ldr	lr, [sp, #48]	; 0x30
   10f08:	str	r0, [sp, #8]
   10f0c:	mov	r0, lr
   10f10:	bl	111c8 <vetor_pesquisa_parcial@@Base>
   10f14:	str	r0, [sp, #44]	; 0x2c
   10f18:	ldr	r0, [sp, #44]	; 0x2c
   10f1c:	bl	10f78 <vetor_imprime@@Base>
   10f20:	ldr	r0, [sp, #44]	; 0x2c
   10f24:	bl	11308 <vetor_apaga@@Base>
   10f28:	ldr	r0, [sp, #48]	; 0x30
   10f2c:	bl	11308 <vetor_apaga@@Base>
   10f30:	ldr	r0, [fp, #-8]
   10f34:	bl	10c5c <fclose@plt>
   10f38:	str	r0, [sp, #4]
   10f3c:	ldr	r0, [fp, #-4]
   10f40:	mov	sp, fp
   10f44:	pop	{fp, pc}
   10f48:	andeq	r0, r0, r8, lsl pc
   10f4c:	andeq	r0, r0, r6, lsr #30
   10f50:	ldrdeq	r1, [r1], -ip
   10f54:	andeq	r0, r0, r3, lsr #29
   10f58:	strdeq	r0, [r0], -sl
   10f5c:			; <UNDEFINED> instruction: 0x00000eba
   10f60:	ldrdeq	r0, [r0], -r1
   10f64:	andeq	r0, r0, r0, lsr #30
   10f68:	strdeq	r0, [r0], -fp
   10f6c:	ldrdeq	r0, [r0], -r8
   10f70:	andeq	r0, r0, r0, lsr #30
   10f74:			; <UNDEFINED> instruction: 0x00000eb8

00010f78 <vetor_imprime@@Base>:
   10f78:	push	{fp, lr}
   10f7c:	mov	fp, sp
   10f80:	sub	sp, sp, #24
   10f84:	str	r0, [fp, #-4]
   10f88:	ldr	r0, [fp, #-4]
   10f8c:	ldr	r0, [r0]
   10f90:	str	r0, [sp, #12]
   10f94:	movw	r0, #0
   10f98:	str	r0, [fp, #-8]
   10f9c:	ldr	r0, [fp, #-8]
   10fa0:	ldr	r1, [sp, #12]
   10fa4:	cmp	r0, r1
   10fa8:	bge	10ff4 <vetor_imprime@@Base+0x7c>
   10fac:	ldr	r1, [fp, #-8]
   10fb0:	ldr	r0, [fp, #-4]
   10fb4:	ldr	r2, [fp, #-8]
   10fb8:	str	r1, [sp, #8]
   10fbc:	mov	r1, r2
   10fc0:	bl	114e8 <vetor_elemento@@Base>
   10fc4:	ldr	r1, [pc, #48]	; 10ffc <vetor_imprime@@Base+0x84>
   10fc8:	add	r1, pc, r1
   10fcc:	str	r0, [sp, #4]
   10fd0:	mov	r0, r1
   10fd4:	ldr	r1, [sp, #8]
   10fd8:	ldr	r2, [sp, #4]
   10fdc:	bl	10bb4 <printf@plt>
   10fe0:	str	r0, [sp]
   10fe4:	ldr	r0, [fp, #-8]
   10fe8:	add	r0, r0, #1
   10fec:	str	r0, [fp, #-8]
   10ff0:	b	10f9c <vetor_imprime@@Base+0x24>
   10ff4:	mov	sp, fp
   10ff8:	pop	{fp, pc}
   10ffc:	andeq	r0, r0, pc, asr lr

00011000 <vetor_num_ocorrencias@@Base>:
   11000:	push	{fp, lr}
   11004:	mov	fp, sp
   11008:	sub	sp, sp, #32
   1100c:	str	r0, [fp, #-4]
   11010:	str	r1, [fp, #-8]
   11014:	movw	r0, #0
   11018:	str	r0, [fp, #-12]
   1101c:	ldr	r1, [fp, #-4]
   11020:	ldr	r1, [r1]
   11024:	str	r1, [sp, #16]
   11028:	str	r0, [sp, #12]
   1102c:	ldr	r0, [sp, #12]
   11030:	ldr	r1, [sp, #16]
   11034:	cmp	r0, r1
   11038:	bge	11094 <vetor_num_ocorrencias@@Base+0x94>
   1103c:	ldr	r0, [fp, #-8]
   11040:	ldr	r1, [fp, #-4]
   11044:	ldr	r2, [sp, #12]
   11048:	str	r0, [sp, #8]
   1104c:	mov	r0, r1
   11050:	mov	r1, r2
   11054:	bl	114e8 <vetor_elemento@@Base>
   11058:	ldr	r1, [sp, #8]
   1105c:	str	r0, [sp, #4]
   11060:	mov	r0, r1
   11064:	ldr	r1, [sp, #4]
   11068:	bl	10ba8 <strcmp@plt>
   1106c:	cmp	r0, #0
   11070:	bne	11080 <vetor_num_ocorrencias@@Base+0x80>
   11074:	ldr	r0, [fp, #-12]
   11078:	add	r0, r0, #1
   1107c:	str	r0, [fp, #-12]
   11080:	b	11084 <vetor_num_ocorrencias@@Base+0x84>
   11084:	ldr	r0, [sp, #12]
   11088:	add	r0, r0, #1
   1108c:	str	r0, [sp, #12]
   11090:	b	1102c <vetor_num_ocorrencias@@Base+0x2c>
   11094:	ldr	r0, [fp, #-12]
   11098:	mov	sp, fp
   1109c:	pop	{fp, pc}

000110a0 <vetor_remove_repetidas@@Base>:
   110a0:	push	{fp, lr}
   110a4:	mov	fp, sp
   110a8:	sub	sp, sp, #136	; 0x88
   110ac:	str	r0, [fp, #-4]
   110b0:	movw	r0, #0
   110b4:	str	r0, [fp, #-8]
   110b8:	ldr	r0, [fp, #-8]
   110bc:	ldr	r1, [fp, #-4]
   110c0:	ldr	r1, [r1]
   110c4:	cmp	r0, r1
   110c8:	bge	111bc <vetor_remove_repetidas@@Base+0x11c>
   110cc:	add	r0, sp, #24
   110d0:	ldr	r1, [fp, #-4]
   110d4:	ldr	r2, [fp, #-8]
   110d8:	str	r0, [sp, #20]
   110dc:	mov	r0, r1
   110e0:	mov	r1, r2
   110e4:	bl	114e8 <vetor_elemento@@Base>
   110e8:	ldr	r1, [sp, #20]
   110ec:	str	r0, [sp, #16]
   110f0:	mov	r0, r1
   110f4:	ldr	r1, [sp, #16]
   110f8:	bl	10c08 <strcpy@plt>
   110fc:	ldr	r1, [fp, #-8]
   11100:	add	r1, r1, #1
   11104:	str	r1, [fp, #-12]
   11108:	str	r0, [sp, #12]
   1110c:	ldr	r0, [fp, #-12]
   11110:	ldr	r1, [fp, #-4]
   11114:	ldr	r1, [r1]
   11118:	cmp	r0, r1
   1111c:	bge	111a8 <vetor_remove_repetidas@@Base+0x108>
   11120:	add	r0, sp, #24
   11124:	ldr	r1, [fp, #-4]
   11128:	ldr	r2, [fp, #-12]
   1112c:	str	r0, [sp, #8]
   11130:	mov	r0, r1
   11134:	mov	r1, r2
   11138:	bl	114e8 <vetor_elemento@@Base>
   1113c:	ldr	r1, [sp, #8]
   11140:	str	r0, [sp, #4]
   11144:	mov	r0, r1
   11148:	ldr	r1, [sp, #4]
   1114c:	bl	10ba8 <strcmp@plt>
   11150:	cmp	r0, #0
   11154:	bne	11194 <vetor_remove_repetidas@@Base+0xf4>
   11158:	ldr	r0, [fp, #-4]
   1115c:	ldr	r1, [fp, #-12]
   11160:	bl	11714 <vetor_remove@@Base>
   11164:	cmn	r0, #1
   11168:	bne	11180 <vetor_remove_repetidas@@Base+0xe0>
   1116c:	ldr	r0, [pc, #80]	; 111c4 <vetor_remove_repetidas@@Base+0x124>
   11170:	add	r0, pc, r0
   11174:	bl	10bb4 <printf@plt>
   11178:	str	r0, [sp]
   1117c:	b	11190 <vetor_remove_repetidas@@Base+0xf0>
   11180:	ldr	r0, [fp, #-12]
   11184:	mvn	r1, #0
   11188:	add	r0, r0, r1
   1118c:	str	r0, [fp, #-12]
   11190:	b	11194 <vetor_remove_repetidas@@Base+0xf4>
   11194:	b	11198 <vetor_remove_repetidas@@Base+0xf8>
   11198:	ldr	r0, [fp, #-12]
   1119c:	add	r0, r0, #1
   111a0:	str	r0, [fp, #-12]
   111a4:	b	1110c <vetor_remove_repetidas@@Base+0x6c>
   111a8:	b	111ac <vetor_remove_repetidas@@Base+0x10c>
   111ac:	ldr	r0, [fp, #-8]
   111b0:	add	r0, r0, #1
   111b4:	str	r0, [fp, #-8]
   111b8:	b	110b8 <vetor_remove_repetidas@@Base+0x18>
   111bc:	mov	sp, fp
   111c0:	pop	{fp, pc}
   111c4:	andeq	r0, r0, r4, asr #25

000111c8 <vetor_pesquisa_parcial@@Base>:
   111c8:	push	{fp, lr}
   111cc:	mov	fp, sp
   111d0:	sub	sp, sp, #32
   111d4:	ldr	r2, [pc, #192]	; 1129c <vetor_pesquisa_parcial@@Base+0xd4>
   111d8:	ldr	r2, [pc, r2]
   111dc:	str	r0, [fp, #-4]
   111e0:	str	r1, [fp, #-8]
   111e4:	blx	r2
   111e8:	str	r0, [fp, #-12]
   111ec:	movw	r0, #0
   111f0:	str	r0, [sp, #12]
   111f4:	str	r0, [sp, #16]
   111f8:	ldr	r0, [sp, #16]
   111fc:	ldr	r1, [fp, #-4]
   11200:	ldr	r1, [r1]
   11204:	cmp	r0, r1
   11208:	bge	11290 <vetor_pesquisa_parcial@@Base+0xc8>
   1120c:	ldr	r0, [fp, #-4]
   11210:	ldr	r1, [sp, #16]
   11214:	bl	114e8 <vetor_elemento@@Base>
   11218:	ldr	r1, [fp, #-8]
   1121c:	bl	10b9c <strstr@plt>
   11220:	movw	r1, #0
   11224:	cmp	r0, r1
   11228:	beq	1127c <vetor_pesquisa_parcial@@Base+0xb4>
   1122c:	ldr	r0, [fp, #-12]
   11230:	ldr	r1, [fp, #-4]
   11234:	ldr	r2, [sp, #16]
   11238:	str	r0, [sp, #8]
   1123c:	mov	r0, r1
   11240:	mov	r1, r2
   11244:	bl	114e8 <vetor_elemento@@Base>
   11248:	ldr	r2, [sp, #12]
   1124c:	ldr	r1, [sp, #8]
   11250:	str	r0, [sp, #4]
   11254:	mov	r0, r1
   11258:	ldr	r1, [sp, #4]
   1125c:	bl	11554 <vetor_insere@@Base>
   11260:	cmn	r0, #1
   11264:	bne	11278 <vetor_pesquisa_parcial@@Base+0xb0>
   11268:	ldr	r0, [pc, #48]	; 112a0 <vetor_pesquisa_parcial@@Base+0xd8>
   1126c:	add	r0, pc, r0
   11270:	bl	10bb4 <printf@plt>
   11274:	str	r0, [sp]
   11278:	b	1127c <vetor_pesquisa_parcial@@Base+0xb4>
   1127c:	b	11280 <vetor_pesquisa_parcial@@Base+0xb8>
   11280:	ldr	r0, [sp, #16]
   11284:	add	r0, r0, #1
   11288:	str	r0, [sp, #16]
   1128c:	b	111f8 <vetor_pesquisa_parcial@@Base+0x30>
   11290:	ldr	r0, [fp, #-12]
   11294:	mov	sp, fp
   11298:	pop	{fp, pc}
   1129c:	andeq	r0, r1, r8, ror lr
   112a0:	strdeq	r0, [r0], -r3

000112a4 <vetor_novo@@Base>:
   112a4:	push	{fp, lr}
   112a8:	mov	fp, sp
   112ac:	sub	sp, sp, #8
   112b0:	movw	r0, #12
   112b4:	bl	10c14 <malloc@plt>
   112b8:	str	r0, [sp]
   112bc:	ldr	r0, [sp]
   112c0:	movw	lr, #0
   112c4:	cmp	r0, lr
   112c8:	bne	112d8 <vetor_novo@@Base+0x34>
   112cc:	movw	r0, #0
   112d0:	str	r0, [sp, #4]
   112d4:	b	112fc <vetor_novo@@Base+0x58>
   112d8:	ldr	r0, [sp]
   112dc:	movw	r1, #0
   112e0:	str	r1, [r0]
   112e4:	ldr	r0, [sp]
   112e8:	str	r1, [r0, #4]
   112ec:	ldr	r0, [sp]
   112f0:	str	r1, [r0, #8]
   112f4:	ldr	r0, [sp]
   112f8:	str	r0, [sp, #4]
   112fc:	ldr	r0, [sp, #4]
   11300:	mov	sp, fp
   11304:	pop	{fp, pc}

00011308 <vetor_apaga@@Base>:
   11308:	push	{fp, lr}
   1130c:	mov	fp, sp
   11310:	sub	sp, sp, #8
   11314:	str	r0, [sp, #4]
   11318:	ldr	r0, [sp, #4]
   1131c:	movw	r1, #0
   11320:	cmp	r0, r1
   11324:	bne	1132c <vetor_apaga@@Base+0x24>
   11328:	b	11384 <vetor_apaga@@Base+0x7c>
   1132c:	movw	r0, #0
   11330:	str	r0, [sp]
   11334:	ldr	r0, [sp]
   11338:	ldr	r1, [sp, #4]
   1133c:	ldr	r1, [r1]
   11340:	cmp	r0, r1
   11344:	bge	11370 <vetor_apaga@@Base+0x68>
   11348:	ldr	r0, [sp, #4]
   1134c:	ldr	r0, [r0, #8]
   11350:	ldr	r1, [sp]
   11354:	add	r0, r0, r1, lsl #2
   11358:	ldr	r0, [r0]
   1135c:	bl	10bcc <free@plt>
   11360:	ldr	r0, [sp]
   11364:	add	r0, r0, #1
   11368:	str	r0, [sp]
   1136c:	b	11334 <vetor_apaga@@Base+0x2c>
   11370:	ldr	r0, [sp, #4]
   11374:	ldr	r0, [r0, #8]
   11378:	bl	10bcc <free@plt>
   1137c:	ldr	r0, [sp, #4]
   11380:	bl	10bcc <free@plt>
   11384:	mov	sp, fp
   11388:	pop	{fp, pc}

0001138c <vetor_atribui@@Base>:
   1138c:	push	{fp, lr}
   11390:	mov	fp, sp
   11394:	sub	sp, sp, #32
   11398:	str	r0, [fp, #-8]
   1139c:	str	r1, [fp, #-12]
   113a0:	str	r2, [sp, #16]
   113a4:	ldr	r0, [fp, #-8]
   113a8:	movw	r1, #0
   113ac:	cmp	r0, r1
   113b0:	beq	113d4 <vetor_atribui@@Base+0x48>
   113b4:	ldr	r0, [fp, #-12]
   113b8:	cmp	r0, #0
   113bc:	blt	113d4 <vetor_atribui@@Base+0x48>
   113c0:	ldr	r0, [fp, #-12]
   113c4:	ldr	r1, [fp, #-8]
   113c8:	ldr	r1, [r1]
   113cc:	cmp	r0, r1
   113d0:	blt	113e0 <vetor_atribui@@Base+0x54>
   113d4:	mvn	r0, #0
   113d8:	str	r0, [fp, #-4]
   113dc:	b	114a0 <vetor_atribui@@Base+0x114>
   113e0:	ldr	r0, [sp, #16]
   113e4:	bl	10c38 <strlen@plt>
   113e8:	str	r0, [sp, #12]
   113ec:	ldr	r0, [sp, #12]
   113f0:	ldr	lr, [fp, #-8]
   113f4:	ldr	lr, [lr, #8]
   113f8:	ldr	r1, [fp, #-12]
   113fc:	add	r1, lr, r1, lsl #2
   11400:	ldr	r1, [r1]
   11404:	str	r0, [sp, #8]
   11408:	mov	r0, r1
   1140c:	bl	10c38 <strlen@plt>
   11410:	ldr	r1, [sp, #8]
   11414:	cmp	r1, r0
   11418:	bls	11478 <vetor_atribui@@Base+0xec>
   1141c:	ldr	r0, [fp, #-8]
   11420:	ldr	r0, [r0, #8]
   11424:	ldr	r1, [fp, #-12]
   11428:	ldr	r0, [r0, r1, lsl #2]
   1142c:	ldr	r1, [sp, #12]
   11430:	add	r1, r1, #1
   11434:	bl	10bf0 <realloc@plt>
   11438:	ldr	r1, [fp, #-8]
   1143c:	ldr	r1, [r1, #8]
   11440:	ldr	lr, [fp, #-12]
   11444:	str	r0, [r1, lr, lsl #2]
   11448:	ldr	r0, [fp, #-8]
   1144c:	ldr	r0, [r0, #8]
   11450:	ldr	r1, [fp, #-12]
   11454:	add	r0, r0, r1, lsl #2
   11458:	ldr	r0, [r0]
   1145c:	movw	r1, #0
   11460:	cmp	r0, r1
   11464:	bne	11474 <vetor_atribui@@Base+0xe8>
   11468:	mvn	r0, #0
   1146c:	str	r0, [fp, #-4]
   11470:	b	114a0 <vetor_atribui@@Base+0x114>
   11474:	b	11478 <vetor_atribui@@Base+0xec>
   11478:	ldr	r0, [fp, #-8]
   1147c:	ldr	r0, [r0, #8]
   11480:	ldr	r1, [fp, #-12]
   11484:	add	r0, r0, r1, lsl #2
   11488:	ldr	r0, [r0]
   1148c:	ldr	r1, [sp, #16]
   11490:	bl	10c08 <strcpy@plt>
   11494:	ldr	r1, [fp, #-12]
   11498:	str	r1, [fp, #-4]
   1149c:	str	r0, [sp, #4]
   114a0:	ldr	r0, [fp, #-4]
   114a4:	mov	sp, fp
   114a8:	pop	{fp, pc}

000114ac <vetor_tamanho@@Base>:
   114ac:	sub	sp, sp, #8
   114b0:	str	r0, [sp]
   114b4:	ldr	r0, [sp]
   114b8:	movw	r1, #0
   114bc:	cmp	r0, r1
   114c0:	bne	114d0 <vetor_tamanho@@Base+0x24>
   114c4:	mvn	r0, #0
   114c8:	str	r0, [sp, #4]
   114cc:	b	114dc <vetor_tamanho@@Base+0x30>
   114d0:	ldr	r0, [sp]
   114d4:	ldr	r0, [r0]
   114d8:	str	r0, [sp, #4]
   114dc:	ldr	r0, [sp, #4]
   114e0:	add	sp, sp, #8
   114e4:	bx	lr

000114e8 <vetor_elemento@@Base>:
   114e8:	sub	sp, sp, #12
   114ec:	str	r0, [sp, #4]
   114f0:	str	r1, [sp]
   114f4:	ldr	r0, [sp, #4]
   114f8:	movw	r1, #0
   114fc:	cmp	r0, r1
   11500:	beq	11524 <vetor_elemento@@Base+0x3c>
   11504:	ldr	r0, [sp]
   11508:	cmp	r0, #0
   1150c:	blt	11524 <vetor_elemento@@Base+0x3c>
   11510:	ldr	r0, [sp]
   11514:	ldr	r1, [sp, #4]
   11518:	ldr	r1, [r1]
   1151c:	cmp	r0, r1
   11520:	blt	11530 <vetor_elemento@@Base+0x48>
   11524:	movw	r0, #0
   11528:	str	r0, [sp, #8]
   1152c:	b	11548 <vetor_elemento@@Base+0x60>
   11530:	ldr	r0, [sp, #4]
   11534:	ldr	r0, [r0, #8]
   11538:	ldr	r1, [sp]
   1153c:	add	r0, r0, r1, lsl #2
   11540:	ldr	r0, [r0]
   11544:	str	r0, [sp, #8]
   11548:	ldr	r0, [sp, #8]
   1154c:	add	sp, sp, #12
   11550:	bx	lr

00011554 <vetor_insere@@Base>:
   11554:	push	{fp, lr}
   11558:	mov	fp, sp
   1155c:	sub	sp, sp, #24
   11560:	str	r0, [fp, #-8]
   11564:	str	r1, [sp, #12]
   11568:	str	r2, [sp, #8]
   1156c:	ldr	r0, [fp, #-8]
   11570:	movw	r1, #0
   11574:	cmp	r0, r1
   11578:	beq	1159c <vetor_insere@@Base+0x48>
   1157c:	ldr	r0, [sp, #8]
   11580:	cmp	r0, #0
   11584:	blt	1159c <vetor_insere@@Base+0x48>
   11588:	ldr	r0, [sp, #8]
   1158c:	ldr	r1, [fp, #-8]
   11590:	ldr	r1, [r1]
   11594:	cmp	r0, r1
   11598:	ble	115a8 <vetor_insere@@Base+0x54>
   1159c:	mvn	r0, #0
   115a0:	str	r0, [fp, #-4]
   115a4:	b	11708 <vetor_insere@@Base+0x1b4>
   115a8:	ldr	r0, [fp, #-8]
   115ac:	ldr	r0, [r0]
   115b0:	ldr	r1, [fp, #-8]
   115b4:	ldr	r1, [r1, #4]
   115b8:	cmp	r0, r1
   115bc:	bne	11630 <vetor_insere@@Base+0xdc>
   115c0:	ldr	r0, [fp, #-8]
   115c4:	ldr	r0, [r0, #4]
   115c8:	cmp	r0, #0
   115cc:	bne	115e0 <vetor_insere@@Base+0x8c>
   115d0:	ldr	r0, [fp, #-8]
   115d4:	movw	r1, #1
   115d8:	str	r1, [r0, #4]
   115dc:	b	115f0 <vetor_insere@@Base+0x9c>
   115e0:	ldr	r0, [fp, #-8]
   115e4:	ldr	r1, [r0, #4]
   115e8:	lsl	r1, r1, #1
   115ec:	str	r1, [r0, #4]
   115f0:	ldr	r0, [fp, #-8]
   115f4:	ldr	r1, [r0, #4]
   115f8:	ldr	r0, [r0, #8]
   115fc:	lsl	r1, r1, #2
   11600:	bl	10bf0 <realloc@plt>
   11604:	ldr	r1, [fp, #-8]
   11608:	str	r0, [r1, #8]
   1160c:	ldr	r0, [fp, #-8]
   11610:	ldr	r0, [r0, #8]
   11614:	movw	r1, #0
   11618:	cmp	r0, r1
   1161c:	bne	1162c <vetor_insere@@Base+0xd8>
   11620:	mvn	r0, #0
   11624:	str	r0, [fp, #-4]
   11628:	b	11708 <vetor_insere@@Base+0x1b4>
   1162c:	b	11630 <vetor_insere@@Base+0xdc>
   11630:	ldr	r0, [fp, #-8]
   11634:	ldr	r0, [r0]
   11638:	sub	r0, r0, #1
   1163c:	str	r0, [sp, #4]
   11640:	ldr	r0, [sp, #4]
   11644:	ldr	r1, [sp, #8]
   11648:	cmp	r0, r1
   1164c:	blt	11680 <vetor_insere@@Base+0x12c>
   11650:	ldr	r0, [fp, #-8]
   11654:	ldr	r0, [r0, #8]
   11658:	ldr	r1, [sp, #4]
   1165c:	add	r0, r0, r1, lsl #2
   11660:	add	r1, r0, #4
   11664:	ldr	r0, [r0]
   11668:	str	r0, [r1]
   1166c:	ldr	r0, [sp, #4]
   11670:	mvn	r1, #0
   11674:	add	r0, r0, r1
   11678:	str	r0, [sp, #4]
   1167c:	b	11640 <vetor_insere@@Base+0xec>
   11680:	ldr	r0, [sp, #12]
   11684:	bl	10c38 <strlen@plt>
   11688:	add	r0, r0, #1
   1168c:	mov	r1, #1
   11690:	bl	10b90 <calloc@plt>
   11694:	ldr	r1, [fp, #-8]
   11698:	ldr	r1, [r1, #8]
   1169c:	ldr	lr, [sp, #8]
   116a0:	str	r0, [r1, lr, lsl #2]
   116a4:	ldr	r0, [fp, #-8]
   116a8:	ldr	r0, [r0, #8]
   116ac:	ldr	r1, [sp, #8]
   116b0:	add	r0, r0, r1, lsl #2
   116b4:	ldr	r0, [r0]
   116b8:	movw	r1, #0
   116bc:	cmp	r0, r1
   116c0:	bne	116d0 <vetor_insere@@Base+0x17c>
   116c4:	mvn	r0, #0
   116c8:	str	r0, [fp, #-4]
   116cc:	b	11708 <vetor_insere@@Base+0x1b4>
   116d0:	ldr	r0, [fp, #-8]
   116d4:	ldr	r0, [r0, #8]
   116d8:	ldr	r1, [sp, #8]
   116dc:	add	r0, r0, r1, lsl #2
   116e0:	ldr	r0, [r0]
   116e4:	ldr	r1, [sp, #12]
   116e8:	bl	10c08 <strcpy@plt>
   116ec:	ldr	r1, [fp, #-8]
   116f0:	ldr	lr, [r1]
   116f4:	add	lr, lr, #1
   116f8:	str	lr, [r1]
   116fc:	ldr	r1, [sp, #8]
   11700:	str	r1, [fp, #-4]
   11704:	str	r0, [sp]
   11708:	ldr	r0, [fp, #-4]
   1170c:	mov	sp, fp
   11710:	pop	{fp, pc}

00011714 <vetor_remove@@Base>:
   11714:	push	{fp, lr}
   11718:	mov	fp, sp
   1171c:	sub	sp, sp, #16
   11720:	str	r0, [sp, #8]
   11724:	str	r1, [sp, #4]
   11728:	ldr	r0, [sp, #8]
   1172c:	movw	r1, #0
   11730:	cmp	r0, r1
   11734:	beq	11758 <vetor_remove@@Base+0x44>
   11738:	ldr	r0, [sp, #4]
   1173c:	cmp	r0, #0
   11740:	blt	11758 <vetor_remove@@Base+0x44>
   11744:	ldr	r0, [sp, #4]
   11748:	ldr	r1, [sp, #8]
   1174c:	ldr	r1, [r1]
   11750:	cmp	r0, r1
   11754:	blt	11764 <vetor_remove@@Base+0x50>
   11758:	mvn	r0, #0
   1175c:	str	r0, [fp, #-4]
   11760:	b	117e4 <vetor_remove@@Base+0xd0>
   11764:	ldr	r0, [sp, #8]
   11768:	ldr	r0, [r0, #8]
   1176c:	ldr	r1, [sp, #4]
   11770:	add	r0, r0, r1, lsl #2
   11774:	ldr	r0, [r0]
   11778:	bl	10bcc <free@plt>
   1177c:	ldr	r0, [sp, #4]
   11780:	add	r0, r0, #1
   11784:	str	r0, [sp]
   11788:	ldr	r0, [sp]
   1178c:	ldr	r1, [sp, #8]
   11790:	ldr	r1, [r1]
   11794:	cmp	r0, r1
   11798:	bge	117c8 <vetor_remove@@Base+0xb4>
   1179c:	ldr	r0, [sp, #8]
   117a0:	ldr	r0, [r0, #8]
   117a4:	ldr	r1, [sp]
   117a8:	add	r0, r0, r1, lsl #2
   117ac:	sub	r1, r0, #4
   117b0:	ldr	r0, [r0]
   117b4:	str	r0, [r1]
   117b8:	ldr	r0, [sp]
   117bc:	add	r0, r0, #1
   117c0:	str	r0, [sp]
   117c4:	b	11788 <vetor_remove@@Base+0x74>
   117c8:	ldr	r0, [sp, #8]
   117cc:	ldr	r1, [r0]
   117d0:	mvn	r2, #0
   117d4:	add	r1, r1, r2
   117d8:	str	r1, [r0]
   117dc:	movw	r0, #0
   117e0:	str	r0, [fp, #-4]
   117e4:	ldr	r0, [fp, #-4]
   117e8:	mov	sp, fp
   117ec:	pop	{fp, pc}

000117f0 <vetor_pesquisa@@Base>:
   117f0:	push	{fp, lr}
   117f4:	mov	fp, sp
   117f8:	sub	sp, sp, #16
   117fc:	str	r0, [sp, #8]
   11800:	str	r1, [sp, #4]
   11804:	ldr	r0, [sp, #8]
   11808:	movw	r1, #0
   1180c:	cmp	r0, r1
   11810:	bne	11820 <vetor_pesquisa@@Base+0x30>
   11814:	mvn	r0, #0
   11818:	str	r0, [fp, #-4]
   1181c:	b	11888 <vetor_pesquisa@@Base+0x98>
   11820:	movw	r0, #0
   11824:	str	r0, [sp]
   11828:	ldr	r0, [sp]
   1182c:	ldr	r1, [sp, #8]
   11830:	ldr	r1, [r1]
   11834:	cmp	r0, r1
   11838:	bge	11880 <vetor_pesquisa@@Base+0x90>
   1183c:	ldr	r0, [sp, #8]
   11840:	ldr	r0, [r0, #8]
   11844:	ldr	r1, [sp]
   11848:	add	r0, r0, r1, lsl #2
   1184c:	ldr	r0, [r0]
   11850:	ldr	r1, [sp, #4]
   11854:	bl	10ba8 <strcmp@plt>
   11858:	cmp	r0, #0
   1185c:	bne	1186c <vetor_pesquisa@@Base+0x7c>
   11860:	ldr	r0, [sp]
   11864:	str	r0, [fp, #-4]
   11868:	b	11888 <vetor_pesquisa@@Base+0x98>
   1186c:	b	11870 <vetor_pesquisa@@Base+0x80>
   11870:	ldr	r0, [sp]
   11874:	add	r0, r0, #1
   11878:	str	r0, [sp]
   1187c:	b	11828 <vetor_pesquisa@@Base+0x38>
   11880:	mvn	r0, #0
   11884:	str	r0, [fp, #-4]
   11888:	ldr	r0, [fp, #-4]
   1188c:	mov	sp, fp
   11890:	pop	{fp, pc}

00011894 <vetor_ordena@@Base>:
   11894:	push	{fp, lr}
   11898:	mov	fp, sp
   1189c:	sub	sp, sp, #24
   118a0:	str	r0, [fp, #-8]
   118a4:	ldr	r0, [fp, #-8]
   118a8:	movw	r1, #0
   118ac:	cmp	r0, r1
   118b0:	bne	118c0 <vetor_ordena@@Base+0x2c>
   118b4:	mvn	r0, #0
   118b8:	str	r0, [fp, #-4]
   118bc:	b	119b0 <vetor_ordena@@Base+0x11c>
   118c0:	movw	r0, #1
   118c4:	str	r0, [sp, #12]
   118c8:	ldr	r0, [sp, #12]
   118cc:	ldr	r1, [fp, #-8]
   118d0:	ldr	r1, [r1]
   118d4:	cmp	r0, r1
   118d8:	bge	119a8 <vetor_ordena@@Base+0x114>
   118dc:	ldr	r0, [fp, #-8]
   118e0:	ldr	r0, [r0, #8]
   118e4:	ldr	r1, [sp, #12]
   118e8:	add	r0, r0, r1, lsl #2
   118ec:	ldr	r0, [r0]
   118f0:	str	r0, [sp, #4]
   118f4:	ldr	r0, [sp, #12]
   118f8:	str	r0, [sp, #8]
   118fc:	ldr	r0, [sp, #8]
   11900:	cmp	r0, #0
   11904:	movw	r0, #0
   11908:	str	r0, [sp]
   1190c:	ble	11940 <vetor_ordena@@Base+0xac>
   11910:	ldr	r0, [sp, #4]
   11914:	ldr	r1, [fp, #-8]
   11918:	ldr	r1, [r1, #8]
   1191c:	ldr	r2, [sp, #8]
   11920:	sub	r2, r2, #1
   11924:	add	r1, r1, r2, lsl #2
   11928:	ldr	r1, [r1]
   1192c:	bl	10ba8 <strcmp@plt>
   11930:	cmp	r0, #0
   11934:	movw	r0, #0
   11938:	movlt	r0, #1
   1193c:	str	r0, [sp]
   11940:	ldr	r0, [sp]
   11944:	tst	r0, #1
   11948:	beq	11980 <vetor_ordena@@Base+0xec>
   1194c:	ldr	r0, [fp, #-8]
   11950:	ldr	r0, [r0, #8]
   11954:	ldr	r1, [sp, #8]
   11958:	add	r2, r0, r1, lsl #2
   1195c:	sub	r1, r1, #1
   11960:	add	r0, r0, r1, lsl #2
   11964:	ldr	r0, [r0]
   11968:	str	r0, [r2]
   1196c:	ldr	r0, [sp, #8]
   11970:	mvn	r1, #0
   11974:	add	r0, r0, r1
   11978:	str	r0, [sp, #8]
   1197c:	b	118fc <vetor_ordena@@Base+0x68>
   11980:	ldr	r0, [sp, #4]
   11984:	ldr	r1, [fp, #-8]
   11988:	ldr	r1, [r1, #8]
   1198c:	ldr	r2, [sp, #8]
   11990:	add	r1, r1, r2, lsl #2
   11994:	str	r0, [r1]
   11998:	ldr	r0, [sp, #12]
   1199c:	add	r0, r0, #1
   119a0:	str	r0, [sp, #12]
   119a4:	b	118c8 <vetor_ordena@@Base+0x34>
   119a8:	movw	r0, #0
   119ac:	str	r0, [fp, #-4]
   119b0:	ldr	r0, [fp, #-4]
   119b4:	mov	sp, fp
   119b8:	pop	{fp, pc}

000119bc <vetor_concatena@@Base>:
   119bc:	push	{fp, lr}
   119c0:	mov	fp, sp
   119c4:	sub	sp, sp, #24
   119c8:	str	r0, [fp, #-8]
   119cc:	str	r1, [sp, #12]
   119d0:	ldr	r0, [fp, #-8]
   119d4:	movw	r1, #0
   119d8:	cmp	r0, r1
   119dc:	beq	119f0 <vetor_concatena@@Base+0x34>
   119e0:	ldr	r0, [sp, #12]
   119e4:	movw	r1, #0
   119e8:	cmp	r0, r1
   119ec:	bne	119fc <vetor_concatena@@Base+0x40>
   119f0:	movw	r0, #0
   119f4:	str	r0, [fp, #-4]
   119f8:	b	11a8c <vetor_concatena@@Base+0xd0>
   119fc:	bl	112a4 <vetor_novo@@Base>
   11a00:	str	r0, [sp, #8]
   11a04:	ldr	r0, [fp, #-8]
   11a08:	ldr	r0, [r0]
   11a0c:	ldr	lr, [sp, #12]
   11a10:	ldr	lr, [lr]
   11a14:	add	r0, r0, lr, lsl #2
   11a18:	ldr	lr, [sp, #8]
   11a1c:	str	r0, [lr, #8]
   11a20:	ldr	r0, [fp, #-8]
   11a24:	ldr	r0, [r0, #4]
   11a28:	ldr	lr, [sp, #12]
   11a2c:	ldr	lr, [lr, #4]
   11a30:	add	r0, r0, lr
   11a34:	ldr	lr, [sp, #8]
   11a38:	str	r0, [lr, #4]
   11a3c:	ldr	r0, [sp, #8]
   11a40:	ldr	r0, [r0, #8]
   11a44:	ldr	r0, [r0]
   11a48:	ldr	lr, [fp, #-8]
   11a4c:	ldr	lr, [lr, #8]
   11a50:	ldr	r1, [lr]
   11a54:	bl	10c08 <strcpy@plt>
   11a58:	ldr	r1, [sp, #8]
   11a5c:	ldr	r1, [r1, #8]
   11a60:	ldr	r1, [r1]
   11a64:	ldr	lr, [sp, #12]
   11a68:	ldr	lr, [lr, #8]
   11a6c:	ldr	lr, [lr]
   11a70:	str	r0, [sp, #4]
   11a74:	mov	r0, r1
   11a78:	mov	r1, lr
   11a7c:	bl	10bfc <strcat@plt>
   11a80:	ldr	r1, [sp, #8]
   11a84:	str	r1, [fp, #-4]
   11a88:	str	r0, [sp]
   11a8c:	ldr	r0, [fp, #-4]
   11a90:	mov	sp, fp
   11a94:	pop	{fp, pc}

00011a98 <vetor_inverte@@Base>:
   11a98:	push	{fp, lr}
   11a9c:	mov	fp, sp
   11aa0:	sub	sp, sp, #24
   11aa4:	str	r0, [fp, #-4]
   11aa8:	ldr	r0, [fp, #-4]
   11aac:	bl	114ac <vetor_tamanho@@Base>
   11ab0:	str	r0, [fp, #-8]
   11ab4:	ldr	r0, [fp, #-8]
   11ab8:	str	r0, [sp, #8]
   11abc:	ldr	r0, [fp, #-8]
   11ac0:	cmp	r0, #0
   11ac4:	ble	11b74 <vetor_inverte@@Base+0xdc>
   11ac8:	movw	r0, #0
   11acc:	str	r0, [sp, #12]
   11ad0:	ldr	r0, [sp, #12]
   11ad4:	ldr	r1, [fp, #-8]
   11ad8:	cmp	r0, r1
   11adc:	movw	r0, #0
   11ae0:	str	r0, [sp]
   11ae4:	bge	11b00 <vetor_inverte@@Base+0x68>
   11ae8:	ldr	r0, [sp, #12]
   11aec:	ldr	r1, [sp, #8]
   11af0:	cmp	r0, r1
   11af4:	movw	r0, #0
   11af8:	movlt	r0, #1
   11afc:	str	r0, [sp]
   11b00:	ldr	r0, [sp]
   11b04:	tst	r0, #1
   11b08:	beq	11b70 <vetor_inverte@@Base+0xd8>
   11b0c:	ldr	r0, [fp, #-4]
   11b10:	ldr	r0, [r0, #8]
   11b14:	ldr	r1, [sp, #12]
   11b18:	ldr	r0, [r0, r1, lsl #2]
   11b1c:	str	r0, [sp, #4]
   11b20:	ldr	r0, [fp, #-4]
   11b24:	ldr	r0, [r0, #8]
   11b28:	ldr	r1, [sp, #12]
   11b2c:	ldr	r2, [sp, #8]
   11b30:	ldr	r2, [r0, r2, lsl #2]
   11b34:	str	r2, [r0, r1, lsl #2]
   11b38:	ldr	r0, [fp, #-4]
   11b3c:	ldr	r0, [r0, #8]
   11b40:	ldr	r1, [sp, #8]
   11b44:	add	r0, r0, r1, lsl #2
   11b48:	ldr	r1, [sp, #4]
   11b4c:	str	r1, [r0]
   11b50:	ldr	r0, [sp, #8]
   11b54:	mvn	r1, #0
   11b58:	add	r0, r0, r1
   11b5c:	str	r0, [sp, #8]
   11b60:	ldr	r0, [sp, #12]
   11b64:	add	r0, r0, #1
   11b68:	str	r0, [sp, #12]
   11b6c:	b	11ad0 <vetor_inverte@@Base+0x38>
   11b70:	b	11b74 <vetor_inverte@@Base+0xdc>
   11b74:	movw	r0, #0
   11b78:	mov	sp, fp
   11b7c:	pop	{fp, pc}

00011b80 <vetor_baralha@@Base>:
   11b80:	push	{fp, lr}
   11b84:	mov	fp, sp
   11b88:	sub	sp, sp, #32
   11b8c:	str	r0, [fp, #-4]
   11b90:	ldr	r0, [fp, #-4]
   11b94:	ldr	r0, [r0]
   11b98:	str	r0, [fp, #-12]
   11b9c:	bl	112a4 <vetor_novo@@Base>
   11ba0:	str	r0, [sp, #8]
   11ba4:	add	r0, sp, #16
   11ba8:	bl	10be4 <time@plt>
   11bac:	bl	10c44 <srand@plt>
   11bb0:	movw	r0, #0
   11bb4:	str	r0, [fp, #-8]
   11bb8:	ldr	r0, [fp, #-8]
   11bbc:	ldr	r1, [fp, #-12]
   11bc0:	cmp	r0, r1
   11bc4:	bge	11c34 <vetor_baralha@@Base+0xb4>
   11bc8:	bl	10c50 <rand@plt>
   11bcc:	ldr	lr, [fp, #-12]
   11bd0:	add	lr, lr, #1
   11bd4:	sdiv	r1, r0, lr
   11bd8:	mls	r0, r1, lr, r0
   11bdc:	str	r0, [sp, #4]
   11be0:	ldr	r0, [sp, #8]
   11be4:	ldr	r0, [r0, #8]
   11be8:	ldr	r1, [fp, #-8]
   11bec:	ldr	r0, [r0, r1, lsl #2]
   11bf0:	str	r0, [sp, #12]
   11bf4:	ldr	r0, [sp, #8]
   11bf8:	ldr	r0, [r0, #8]
   11bfc:	ldr	r1, [fp, #-8]
   11c00:	ldr	lr, [sp, #4]
   11c04:	ldr	lr, [r0, lr, lsl #2]
   11c08:	str	lr, [r0, r1, lsl #2]
   11c0c:	ldr	r0, [sp, #8]
   11c10:	ldr	r0, [r0, #8]
   11c14:	ldr	r1, [sp, #4]
   11c18:	add	r0, r0, r1, lsl #2
   11c1c:	ldr	r1, [sp, #12]
   11c20:	str	r1, [r0]
   11c24:	ldr	r0, [fp, #-8]
   11c28:	add	r0, r0, #1
   11c2c:	str	r0, [fp, #-8]
   11c30:	b	11bb8 <vetor_baralha@@Base+0x38>
   11c34:	ldr	r0, [sp, #8]
   11c38:	mov	sp, fp
   11c3c:	pop	{fp, pc}

00011c40 <__libc_csu_init@@Base>:
   11c40:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11c44:	mov	r7, r0
   11c48:	ldr	r6, [pc, #72]	; 11c98 <__libc_csu_init@@Base+0x58>
   11c4c:	ldr	r5, [pc, #72]	; 11c9c <__libc_csu_init@@Base+0x5c>
   11c50:	add	r6, pc, r6
   11c54:	add	r5, pc, r5
   11c58:	sub	r6, r6, r5
   11c5c:	mov	r8, r1
   11c60:	mov	r9, r2
   11c64:	bl	10b70 <calloc@plt-0x20>
   11c68:	asrs	r6, r6, #2
   11c6c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11c70:	mov	r4, #0
   11c74:	add	r4, r4, #1
   11c78:	ldr	r3, [r5], #4
   11c7c:	mov	r2, r9
   11c80:	mov	r1, r8
   11c84:	mov	r0, r7
   11c88:	blx	r3
   11c8c:	cmp	r6, r4
   11c90:	bne	11c74 <__libc_csu_init@@Base+0x34>
   11c94:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11c98:			; <UNDEFINED> instruction: 0x000102b4
   11c9c:	andeq	r0, r1, ip, lsr #5

00011ca0 <__libc_csu_fini@@Base>:
   11ca0:	bx	lr

Disassembly of section .fini:

00011ca4 <.fini>:
   11ca4:	push	{r3, lr}
   11ca8:	pop	{r3, pc}
