
../repos/eddieantonio-ocreval-3ab279a/groupacc/groupacc:     file format elf32-littlearm


Disassembly of section .init:

000109c4 <.init>:
   109c4:	push	{r3, lr}
   109c8:	bl	10b94 <getc@plt+0x48>
   109cc:	pop	{r3, pc}

Disassembly of section .plt:

000109d0 <calloc@plt-0x14>:
   109d0:	push	{lr}		; (str lr, [sp, #-4]!)
   109d4:	ldr	lr, [pc, #4]	; 109e0 <calloc@plt-0x4>
   109d8:	add	lr, pc, lr
   109dc:	ldr	pc, [lr, #8]!
   109e0:	andeq	r4, r1, r0, lsr #12

000109e4 <calloc@plt>:
   109e4:	add	ip, pc, #0, 12
   109e8:	add	ip, ip, #20, 20	; 0x14000
   109ec:	ldr	pc, [ip, #1568]!	; 0x620

000109f0 <strcmp@plt>:
   109f0:	add	ip, pc, #0, 12
   109f4:	add	ip, ip, #20, 20	; 0x14000
   109f8:	ldr	pc, [ip, #1560]!	; 0x618

000109fc <fopen@plt>:
   109fc:	add	ip, pc, #0, 12
   10a00:	add	ip, ip, #20, 20	; 0x14000
   10a04:	ldr	pc, [ip, #1552]!	; 0x610

00010a08 <free@plt>:
   10a08:	add	ip, pc, #0, 12
   10a0c:	add	ip, ip, #20, 20	; 0x14000
   10a10:	ldr	pc, [ip, #1544]!	; 0x608

00010a14 <utf8proc_get_property@plt>:
   10a14:	add	ip, pc, #0, 12
   10a18:	add	ip, ip, #20, 20	; 0x14000
   10a1c:	ldr	pc, [ip, #1536]!	; 0x600

00010a20 <fgets@plt>:
   10a20:	add	ip, pc, #0, 12
   10a24:	add	ip, ip, #20, 20	; 0x14000
   10a28:	ldr	pc, [ip, #1528]!	; 0x5f8

00010a2c <utf8proc_encode_char@plt>:
   10a2c:	add	ip, pc, #0, 12
   10a30:	add	ip, ip, #20, 20	; 0x14000
   10a34:	ldr	pc, [ip, #1520]!	; 0x5f0

00010a38 <strdup@plt>:
   10a38:	add	ip, pc, #0, 12
   10a3c:	add	ip, ip, #20, 20	; 0x14000
   10a40:	ldr	pc, [ip, #1512]!	; 0x5e8

00010a44 <rewind@plt>:
   10a44:	add	ip, pc, #0, 12
   10a48:	add	ip, ip, #20, 20	; 0x14000
   10a4c:	ldr	pc, [ip, #1504]!	; 0x5e0

00010a50 <unlink@plt>:
   10a50:	add	ip, pc, #0, 12
   10a54:	add	ip, ip, #20, 20	; 0x14000
   10a58:	ldr	pc, [ip, #1496]!	; 0x5d8

00010a5c <utf8proc_tolower@plt>:
   10a5c:	add	ip, pc, #0, 12
   10a60:	add	ip, ip, #20, 20	; 0x14000
   10a64:	ldr	pc, [ip, #1488]!	; 0x5d0

00010a68 <__xstat@plt>:
   10a68:	add	ip, pc, #0, 12
   10a6c:	add	ip, ip, #20, 20	; 0x14000
   10a70:	ldr	pc, [ip, #1480]!	; 0x5c8

00010a74 <fwrite@plt>:
   10a74:	add	ip, pc, #0, 12
   10a78:	add	ip, ip, #20, 20	; 0x14000
   10a7c:	ldr	pc, [ip, #1472]!	; 0x5c0

00010a80 <fread@plt>:
   10a80:	add	ip, pc, #0, 12
   10a84:	add	ip, ip, #20, 20	; 0x14000
   10a88:	ldr	pc, [ip, #1464]!	; 0x5b8

00010a8c <utf8proc_iterate@plt>:
   10a8c:	add	ip, pc, #0, 12
   10a90:	add	ip, ip, #20, 20	; 0x14000
   10a94:	ldr	pc, [ip, #1456]!	; 0x5b0

00010a98 <__libc_start_main@plt>:
   10a98:	add	ip, pc, #0, 12
   10a9c:	add	ip, ip, #20, 20	; 0x14000
   10aa0:	ldr	pc, [ip, #1448]!	; 0x5a8

00010aa4 <__sysv_signal@plt>:
   10aa4:	add	ip, pc, #0, 12
   10aa8:	add	ip, ip, #20, 20	; 0x14000
   10aac:	ldr	pc, [ip, #1440]!	; 0x5a0

00010ab0 <__gmon_start__@plt>:
   10ab0:	add	ip, pc, #0, 12
   10ab4:	add	ip, ip, #20, 20	; 0x14000
   10ab8:	ldr	pc, [ip, #1432]!	; 0x598

00010abc <getpid@plt>:
   10abc:	add	ip, pc, #0, 12
   10ac0:	add	ip, ip, #20, 20	; 0x14000
   10ac4:	ldr	pc, [ip, #1424]!	; 0x590

00010ac8 <exit@plt>:
   10ac8:	add	ip, pc, #0, 12
   10acc:	add	ip, ip, #20, 20	; 0x14000
   10ad0:	ldr	pc, [ip, #1416]!	; 0x588

00010ad4 <utf8proc_category@plt>:
   10ad4:	add	ip, pc, #0, 12
   10ad8:	add	ip, ip, #20, 20	; 0x14000
   10adc:	ldr	pc, [ip, #1408]!	; 0x580

00010ae0 <strlen@plt>:
   10ae0:	add	ip, pc, #0, 12
   10ae4:	add	ip, ip, #20, 20	; 0x14000
   10ae8:	ldr	pc, [ip, #1400]!	; 0x578

00010aec <fprintf@plt>:
   10aec:	add	ip, pc, #0, 12
   10af0:	add	ip, ip, #20, 20	; 0x14000
   10af4:	ldr	pc, [ip, #1392]!	; 0x570

00010af8 <__isoc99_sscanf@plt>:
   10af8:	add	ip, pc, #0, 12
   10afc:	add	ip, ip, #20, 20	; 0x14000
   10b00:	ldr	pc, [ip, #1384]!	; 0x568

00010b04 <fclose@plt>:
   10b04:	add	ip, pc, #0, 12
   10b08:	add	ip, ip, #20, 20	; 0x14000
   10b0c:	ldr	pc, [ip, #1376]!	; 0x560

00010b10 <sprintf@plt>:
   10b10:	add	ip, pc, #0, 12
   10b14:	add	ip, ip, #20, 20	; 0x14000
   10b18:	ldr	pc, [ip, #1368]!	; 0x558

00010b1c <utf8proc_errmsg@plt>:
   10b1c:	add	ip, pc, #0, 12
   10b20:	add	ip, ip, #20, 20	; 0x14000
   10b24:	ldr	pc, [ip, #1360]!	; 0x550

00010b28 <fputs@plt>:
   10b28:	add	ip, pc, #0, 12
   10b2c:	add	ip, ip, #20, 20	; 0x14000
   10b30:	ldr	pc, [ip, #1352]!	; 0x548

00010b34 <strncmp@plt>:
   10b34:	add	ip, pc, #0, 12
   10b38:	add	ip, ip, #20, 20	; 0x14000
   10b3c:	ldr	pc, [ip, #1344]!	; 0x540

00010b40 <abort@plt>:
   10b40:	add	ip, pc, #0, 12
   10b44:	add	ip, ip, #20, 20	; 0x14000
   10b48:	ldr	pc, [ip, #1336]!	; 0x538

00010b4c <getc@plt>:
   10b4c:	add	ip, pc, #0, 12
   10b50:	add	ip, ip, #20, 20	; 0x14000
   10b54:	ldr	pc, [ip, #1328]!	; 0x530

Disassembly of section .text:

00010b58 <error@@Base-0x1fb8>:
   10b58:	mov	fp, #0
   10b5c:	mov	lr, #0
   10b60:	pop	{r1}		; (ldr r1, [sp], #4)
   10b64:	mov	r2, sp
   10b68:	push	{r2}		; (str r2, [sp, #-4]!)
   10b6c:	push	{r0}		; (str r0, [sp, #-4]!)
   10b70:	ldr	ip, [pc, #16]	; 10b88 <getc@plt+0x3c>
   10b74:	push	{ip}		; (str ip, [sp, #-4]!)
   10b78:	ldr	r0, [pc, #12]	; 10b8c <getc@plt+0x40>
   10b7c:	ldr	r3, [pc, #12]	; 10b90 <getc@plt+0x44>
   10b80:	bl	10a98 <__libc_start_main@plt>
   10b84:	bl	10b40 <abort@plt>
   10b88:	andeq	r3, r1, r4, asr #13
   10b8c:	andeq	r0, r1, r0, lsl pc
   10b90:	andeq	r3, r1, r4, ror #12
   10b94:	ldr	r3, [pc, #20]	; 10bb0 <getc@plt+0x64>
   10b98:	ldr	r2, [pc, #20]	; 10bb4 <getc@plt+0x68>
   10b9c:	add	r3, pc, r3
   10ba0:	ldr	r2, [r3, r2]
   10ba4:	cmp	r2, #0
   10ba8:	bxeq	lr
   10bac:	b	10ab0 <__gmon_start__@plt>
   10bb0:	andeq	r4, r1, ip, asr r4
   10bb4:	andeq	r0, r0, r0, lsr #1
   10bb8:	ldr	r0, [pc, #24]	; 10bd8 <getc@plt+0x8c>
   10bbc:	ldr	r3, [pc, #24]	; 10bdc <getc@plt+0x90>
   10bc0:	cmp	r3, r0
   10bc4:	bxeq	lr
   10bc8:	ldr	r3, [pc, #16]	; 10be0 <getc@plt+0x94>
   10bcc:	cmp	r3, #0
   10bd0:	bxeq	lr
   10bd4:	bx	r3
   10bd8:	ldrdeq	r5, [r2], -r8
   10bdc:	ldrdeq	r5, [r2], -r8
   10be0:	andeq	r0, r0, r0
   10be4:	ldr	r0, [pc, #36]	; 10c10 <getc@plt+0xc4>
   10be8:	ldr	r1, [pc, #36]	; 10c14 <getc@plt+0xc8>
   10bec:	sub	r1, r1, r0
   10bf0:	asr	r1, r1, #2
   10bf4:	add	r1, r1, r1, lsr #31
   10bf8:	asrs	r1, r1, #1
   10bfc:	bxeq	lr
   10c00:	ldr	r3, [pc, #16]	; 10c18 <getc@plt+0xcc>
   10c04:	cmp	r3, #0
   10c08:	bxeq	lr
   10c0c:	bx	r3
   10c10:	ldrdeq	r5, [r2], -r8
   10c14:	ldrdeq	r5, [r2], -r8
   10c18:	andeq	r0, r0, r0
   10c1c:	push	{r4, lr}
   10c20:	ldr	r4, [pc, #24]	; 10c40 <getc@plt+0xf4>
   10c24:	ldrb	r3, [r4]
   10c28:	cmp	r3, #0
   10c2c:	popne	{r4, pc}
   10c30:	bl	10bb8 <getc@plt+0x6c>
   10c34:	mov	r3, #1
   10c38:	strb	r3, [r4]
   10c3c:	pop	{r4, pc}
   10c40:	ldrdeq	r5, [r2], -r8
   10c44:	b	10be4 <getc@plt+0x98>
   10c48:	push	{r4, r5, r6, sl, fp, lr}
   10c4c:	add	fp, sp, #16
   10c50:	mov	r5, r1
   10c54:	ldr	r1, [pc, #124]	; 10cd8 <getc@plt+0x18c>
   10c58:	mov	r6, r2
   10c5c:	mov	r4, r0
   10c60:	mov	r2, r5
   10c64:	mov	r3, r6
   10c68:	add	r1, pc, r1
   10c6c:	bl	10aec <fprintf@plt>
   10c70:	cmp	r5, #0
   10c74:	beq	10cb0 <getc@plt+0x164>
   10c78:	sub	r0, r5, r6
   10c7c:	vldr	d16, [pc, #76]	; 10cd0 <getc@plt+0x184>
   10c80:	vmov	s2, r5
   10c84:	vmov	s0, r0
   10c88:	mov	r0, r4
   10c8c:	vcvt.f64.s32	d17, s0
   10c90:	vcvt.f64.s32	d18, s2
   10c94:	ldr	r1, [pc, #68]	; 10ce0 <getc@plt+0x194>
   10c98:	vmul.f64	d16, d17, d16
   10c9c:	vdiv.f64	d16, d16, d18
   10ca0:	vmov	r2, r3, d16
   10ca4:	add	r1, pc, r1
   10ca8:	pop	{r4, r5, r6, sl, fp, lr}
   10cac:	b	10aec <fprintf@plt>
   10cb0:	ldr	r0, [pc, #36]	; 10cdc <getc@plt+0x190>
   10cb4:	mov	r1, #11
   10cb8:	mov	r2, #1
   10cbc:	mov	r3, r4
   10cc0:	add	r0, pc, r0
   10cc4:	pop	{r4, r5, r6, sl, fp, lr}
   10cc8:	b	10a74 <fwrite@plt>
   10ccc:	nop	{0}
   10cd0:	andeq	r0, r0, r0
   10cd4:	subsmi	r0, r9, r0
   10cd8:	andeq	r2, r0, r4, ror #20
   10cdc:	andeq	r2, r0, r7, lsl sl
   10ce0:	andeq	r2, r0, pc, lsr sl
   10ce4:	nop	{0}
   10ce8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10cec:	add	fp, sp, #28
   10cf0:	sub	sp, sp, #4
   10cf4:	vpush	{d8}
   10cf8:	sub	sp, sp, #24
   10cfc:	ldr	r1, [pc, #476]	; 10ee0 <getc@plt+0x394>
   10d00:	add	r1, pc, r1
   10d04:	bl	126f0 <getc@plt+0x1ba4>
   10d08:	ldr	r1, [pc, #468]	; 10ee4 <getc@plt+0x398>
   10d0c:	mov	r4, r0
   10d10:	add	r1, pc, r1
   10d14:	bl	10aec <fprintf@plt>
   10d18:	ldr	r0, [pc, #456]	; 10ee8 <getc@plt+0x39c>
   10d1c:	ldr	r0, [pc, r0]
   10d20:	ldr	sl, [r0]
   10d24:	cmp	sl, #0
   10d28:	beq	10e78 <getc@plt+0x32c>
   10d2c:	str	r4, [sp, #4]
   10d30:	vldr	d8, [pc, #416]	; 10ed8 <getc@plt+0x38c>
   10d34:	mov	r5, #0
   10d38:	movw	r4, #10180	; 0x27c4
   10d3c:	mov	r6, #0
   10d40:	ldr	r3, [pc, #420]	; 10eec <getc@plt+0x3a0>
   10d44:	ldr	r3, [pc, r3]
   10d48:	b	10df4 <getc@plt+0x2a8>
   10d4c:	movw	r1, #10184	; 0x27c8
   10d50:	ldr	r4, [sp, #4]
   10d54:	mov	r2, r8
   10d58:	ldr	r9, [r0, r1]
   10d5c:	ldr	r1, [pc, #396]	; 10ef0 <getc@plt+0x3a4>
   10d60:	str	r6, [sp, #8]
   10d64:	mov	r6, r5
   10d68:	mov	r5, r3
   10d6c:	mov	r0, r4
   10d70:	add	r1, pc, r1
   10d74:	mov	r3, r9
   10d78:	bl	10aec <fprintf@plt>
   10d7c:	sub	r0, r8, r9
   10d80:	vmov	s2, r8
   10d84:	vmov	s0, r0
   10d88:	mov	r0, r4
   10d8c:	vcvt.f64.s32	d16, s0
   10d90:	vcvt.f64.s32	d17, s2
   10d94:	ldr	r1, [pc, #344]	; 10ef4 <getc@plt+0x3a8>
   10d98:	vmul.f64	d16, d16, d8
   10d9c:	vdiv.f64	d16, d16, d17
   10da0:	vmov	r2, r3, d16
   10da4:	add	r1, pc, r1
   10da8:	bl	10aec <fprintf@plt>
   10dac:	ldr	r1, [sl, #12]
   10db0:	add	r7, sp, #15
   10db4:	mov	r0, #0
   10db8:	mov	r3, #1
   10dbc:	mov	r2, r7
   10dc0:	bl	13124 <error@@Base+0x614>
   10dc4:	ldr	r1, [pc, #300]	; 10ef8 <getc@plt+0x3ac>
   10dc8:	mov	r0, r4
   10dcc:	mov	r2, r7
   10dd0:	add	r1, pc, r1
   10dd4:	bl	10aec <fprintf@plt>
   10dd8:	mov	r3, r5
   10ddc:	mov	r5, r6
   10de0:	ldr	r6, [sp, #8]
   10de4:	movw	r4, #10180	; 0x27c4
   10de8:	add	r5, r8, r5
   10dec:	add	r6, r9, r6
   10df0:	b	10e14 <getc@plt+0x2c8>
   10df4:	ldr	r1, [sl, #12]
   10df8:	add	r0, r3, r1, lsl #3
   10dfc:	ldr	r8, [r0, r4]
   10e00:	cmp	r8, #1
   10e04:	blt	10e14 <getc@plt+0x2c8>
   10e08:	cmp	r1, #10
   10e0c:	cmpne	r1, #32
   10e10:	bne	10d4c <getc@plt+0x200>
   10e14:	ldr	sl, [sl, #4]
   10e18:	cmp	sl, #0
   10e1c:	bne	10df4 <getc@plt+0x2a8>
   10e20:	ldr	r1, [pc, #212]	; 10efc <getc@plt+0x3b0>
   10e24:	ldr	r4, [sp, #4]
   10e28:	mov	r2, r5
   10e2c:	mov	r3, r6
   10e30:	add	r1, pc, r1
   10e34:	mov	r0, r4
   10e38:	bl	10aec <fprintf@plt>
   10e3c:	cmp	r5, #0
   10e40:	beq	10e90 <getc@plt+0x344>
   10e44:	sub	r0, r5, r6
   10e48:	vmov	s2, r5
   10e4c:	vmov	s0, r0
   10e50:	mov	r0, r4
   10e54:	vcvt.f64.s32	d16, s0
   10e58:	vcvt.f64.s32	d17, s2
   10e5c:	ldr	r1, [pc, #160]	; 10f04 <getc@plt+0x3b8>
   10e60:	vmul.f64	d16, d16, d8
   10e64:	vdiv.f64	d16, d16, d17
   10e68:	vmov	r2, r3, d16
   10e6c:	add	r1, pc, r1
   10e70:	bl	10aec <fprintf@plt>
   10e74:	b	10ea8 <getc@plt+0x35c>
   10e78:	ldr	r1, [pc, #140]	; 10f0c <getc@plt+0x3c0>
   10e7c:	mov	r0, r4
   10e80:	mov	r2, #0
   10e84:	mov	r3, #0
   10e88:	add	r1, pc, r1
   10e8c:	bl	10aec <fprintf@plt>
   10e90:	ldr	r0, [pc, #104]	; 10f00 <getc@plt+0x3b4>
   10e94:	mov	r1, #11
   10e98:	mov	r2, #1
   10e9c:	mov	r3, r4
   10ea0:	add	r0, pc, r0
   10ea4:	bl	10a74 <fwrite@plt>
   10ea8:	ldr	r0, [pc, #88]	; 10f08 <getc@plt+0x3bc>
   10eac:	mov	r1, #6
   10eb0:	mov	r2, #1
   10eb4:	mov	r3, r4
   10eb8:	add	r0, pc, r0
   10ebc:	bl	10a74 <fwrite@plt>
   10ec0:	mov	r0, r4
   10ec4:	bl	12778 <getc@plt+0x1c2c>
   10ec8:	sub	sp, fp, #40	; 0x28
   10ecc:	vpop	{d8}
   10ed0:	add	sp, sp, #4
   10ed4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10ed8:	andeq	r0, r0, r0
   10edc:	subsmi	r0, r9, r0
   10ee0:	andeq	r2, r0, r0, asr #27
   10ee4:	andeq	r2, r0, sl, lsr #22
   10ee8:	andeq	r4, r1, r4, ror #6
   10eec:	andeq	r4, r1, r4, asr #6
   10ef0:	andeq	r2, r0, ip, asr r9
   10ef4:	andeq	r2, r0, pc, lsr r9
   10ef8:	andeq	r2, r0, fp, ror #21
   10efc:	muleq	r0, ip, r8
   10f00:	andeq	r2, r0, r7, lsr r8
   10f04:	andeq	r2, r0, r7, ror r8
   10f08:	andeq	r2, r0, r4, lsr r8
   10f0c:	andeq	r2, r0, r4, asr #16
   10f10:	push	{fp, lr}
   10f14:	mov	fp, sp
   10f18:	sub	sp, sp, #8
   10f1c:	str	r0, [sp, #4]
   10f20:	add	r0, sp, #4
   10f24:	mov	r3, #0
   10f28:	mov	r4, r1
   10f2c:	mov	r5, #0
   10f30:	ldr	r2, [pc, #96]	; 10f98 <getc@plt+0x44c>
   10f34:	add	r2, pc, r2
   10f38:	bl	12888 <getc@plt+0x1d3c>
   10f3c:	ldr	r0, [sp, #4]
   10f40:	bic	r0, r0, #1
   10f44:	cmp	r0, #2
   10f48:	bne	10f8c <getc@plt+0x440>
   10f4c:	ldr	r1, [r4]
   10f50:	ldr	r0, [pc, #68]	; 10f9c <getc@plt+0x450>
   10f54:	ldr	r0, [pc, r0]
   10f58:	ldr	r2, [pc, #64]	; 10fa0 <getc@plt+0x454>
   10f5c:	ldr	r2, [pc, r2]
   10f60:	bl	12d70 <error@@Base+0x260>
   10f64:	ldr	r1, [r4, #4]
   10f68:	ldr	r0, [pc, #52]	; 10fa4 <getc@plt+0x458>
   10f6c:	ldr	r0, [pc, r0]
   10f70:	bl	110a4 <getc@plt+0x558>
   10f74:	ldr	r0, [sp, #4]
   10f78:	cmp	r0, #3
   10f7c:	ldreq	r5, [r4, #8]
   10f80:	mov	r0, r5
   10f84:	bl	10ce8 <getc@plt+0x19c>
   10f88:	bl	12acc <getc@plt+0x1f80>
   10f8c:	ldr	r0, [pc, #20]	; 10fa8 <getc@plt+0x45c>
   10f90:	add	r0, pc, r0
   10f94:	bl	12b10 <error@@Base>
   10f98:			; <UNDEFINED> instruction: 0x000027bf
   10f9c:	andeq	r4, r1, ip, lsr #2
   10fa0:	andeq	r4, r1, r4, lsr r1
   10fa4:	andeq	r4, r1, ip, lsl r1
   10fa8:	andeq	r2, r0, pc, lsl #15
   10fac:	andeq	r0, r0, r0
   10fb0:	push	{r4, r5, r6, r7, fp, lr}
   10fb4:	add	fp, sp, #16
   10fb8:	mov	r7, r0
   10fbc:	mov	r0, r1
   10fc0:	mov	r4, r3
   10fc4:	mov	r5, r2
   10fc8:	mov	r6, r1
   10fcc:	bl	12324 <getc@plt+0x17d8>
   10fd0:	add	r0, r7, r0, lsl #3
   10fd4:	ldr	r1, [r0, #68]	; 0x44
   10fd8:	ldr	r2, [r0, #72]	; 0x48
   10fdc:	add	r1, r1, r5
   10fe0:	add	r2, r2, r4
   10fe4:	str	r1, [r0, #68]	; 0x44
   10fe8:	str	r2, [r0, #72]	; 0x48
   10fec:	ldr	r0, [r7, #2116]	; 0x844
   10ff0:	ldr	r1, [r7, #2120]	; 0x848
   10ff4:	add	r0, r0, r5
   10ff8:	add	r1, r1, r4
   10ffc:	str	r0, [r7, #2116]	; 0x844
   11000:	str	r1, [r7, #2120]	; 0x848
   11004:	add	r0, r7, r6, lsl #3
   11008:	movw	r1, #10180	; 0x27c4
   1100c:	ldr	r1, [r0, r1]!
   11010:	add	r1, r1, r5
   11014:	str	r1, [r0]
   11018:	ldr	r1, [r0, #4]
   1101c:	add	r1, r1, r4
   11020:	str	r1, [r0, #4]
   11024:	pop	{r4, r5, r6, r7, fp, pc}
   11028:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1102c:	add	fp, sp, #24
   11030:	mov	r7, r1
   11034:	movw	r1, #2124	; 0x84c
   11038:	mov	r8, r3
   1103c:	mov	r5, r2
   11040:	add	r6, r0, r1
   11044:	mov	r1, r7
   11048:	mov	r0, r6
   1104c:	bl	12098 <getc@plt+0x154c>
   11050:	cmp	r0, #0
   11054:	beq	11074 <getc@plt+0x528>
   11058:	ldr	r1, [r0, #12]
   1105c:	ldr	r2, [r0, #16]
   11060:	add	r1, r1, r5
   11064:	add	r2, r2, r8
   11068:	str	r1, [r0, #12]
   1106c:	str	r2, [r0, #16]
   11070:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11074:	mov	r0, #1
   11078:	mov	r1, #20
   1107c:	bl	12650 <getc@plt+0x1b04>
   11080:	mov	r4, r0
   11084:	mov	r0, r7
   11088:	bl	10a38 <strdup@plt>
   1108c:	add	r1, r4, #8
   11090:	stm	r1, {r0, r5, r8}
   11094:	mov	r0, r6
   11098:	mov	r1, r4
   1109c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   110a0:	b	12128 <getc@plt+0x15dc>
   110a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   110a8:	add	fp, sp, #28
   110ac:	sub	sp, sp, #76	; 0x4c
   110b0:	bfc	sp, #0, #4
   110b4:	mov	r8, r1
   110b8:	ldr	r1, [pc, #1664]	; 11740 <getc@plt+0xbf4>
   110bc:	mov	r4, r0
   110c0:	mov	r0, r8
   110c4:	add	r1, pc, r1
   110c8:	bl	126f0 <getc@plt+0x1ba4>
   110cc:	mov	r7, r0
   110d0:	ldr	r0, [pc, #1644]	; 11744 <getc@plt+0xbf8>
   110d4:	mov	r1, #99	; 0x63
   110d8:	mov	r2, r7
   110dc:	add	r0, pc, r0
   110e0:	bl	10a20 <fgets@plt>
   110e4:	cmp	r0, #0
   110e8:	beq	11724 <getc@plt+0xbd8>
   110ec:	ldr	r0, [pc, #1620]	; 11748 <getc@plt+0xbfc>
   110f0:	ldr	r1, [pc, #1620]	; 1174c <getc@plt+0xc00>
   110f4:	mov	r2, #40	; 0x28
   110f8:	add	r0, pc, r0
   110fc:	add	r1, pc, r1
   11100:	bl	10b34 <strncmp@plt>
   11104:	cmp	r0, #0
   11108:	bne	11724 <getc@plt+0xbd8>
   1110c:	ldr	r0, [pc, #1596]	; 11750 <getc@plt+0xc04>
   11110:	mov	r1, #99	; 0x63
   11114:	mov	r2, r7
   11118:	add	r0, pc, r0
   1111c:	bl	10a20 <fgets@plt>
   11120:	cmp	r0, #0
   11124:	beq	11724 <getc@plt+0xbd8>
   11128:	ldr	r0, [pc, #1572]	; 11754 <getc@plt+0xc08>
   1112c:	ldr	r1, [pc, #1572]	; 11758 <getc@plt+0xc0c>
   11130:	add	r0, pc, r0
   11134:	add	r1, pc, r1
   11138:	bl	109f0 <strcmp@plt>
   1113c:	cmp	r0, #0
   11140:	bne	11724 <getc@plt+0xbd8>
   11144:	ldr	r0, [pc, #1552]	; 1175c <getc@plt+0xc10>
   11148:	mov	r1, #99	; 0x63
   1114c:	mov	r2, r7
   11150:	add	r0, pc, r0
   11154:	bl	10a20 <fgets@plt>
   11158:	cmp	r0, #0
   1115c:	beq	11724 <getc@plt+0xbd8>
   11160:	ldr	r0, [pc, #1528]	; 11760 <getc@plt+0xc14>
   11164:	ldr	r1, [pc, #1528]	; 11764 <getc@plt+0xc18>
   11168:	add	r2, sp, #44	; 0x2c
   1116c:	add	r0, pc, r0
   11170:	add	r1, pc, r1
   11174:	bl	10af8 <__isoc99_sscanf@plt>
   11178:	cmp	r0, #1
   1117c:	bne	11724 <getc@plt+0xbd8>
   11180:	ldr	r0, [r4]
   11184:	ldr	r1, [sp, #44]	; 0x2c
   11188:	mov	r2, r7
   1118c:	add	r0, r0, r1
   11190:	mov	r1, #99	; 0x63
   11194:	str	r0, [r4]
   11198:	ldr	r0, [pc, #1480]	; 11768 <getc@plt+0xc1c>
   1119c:	add	r0, pc, r0
   111a0:	bl	10a20 <fgets@plt>
   111a4:	cmp	r0, #0
   111a8:	beq	11724 <getc@plt+0xbd8>
   111ac:	ldr	r0, [pc, #1464]	; 1176c <getc@plt+0xc20>
   111b0:	ldr	r1, [pc, #1464]	; 11770 <getc@plt+0xc24>
   111b4:	add	r2, sp, #40	; 0x28
   111b8:	add	r0, pc, r0
   111bc:	add	r1, pc, r1
   111c0:	bl	10af8 <__isoc99_sscanf@plt>
   111c4:	cmp	r0, #1
   111c8:	bne	11724 <getc@plt+0xbd8>
   111cc:	ldr	r0, [r4, #4]
   111d0:	ldr	r1, [sp, #40]	; 0x28
   111d4:	mov	r2, r7
   111d8:	add	r0, r0, r1
   111dc:	mov	r1, #99	; 0x63
   111e0:	str	r0, [r4, #4]
   111e4:	ldr	r0, [pc, #1416]	; 11774 <getc@plt+0xc28>
   111e8:	add	r0, pc, r0
   111ec:	bl	10a20 <fgets@plt>
   111f0:	cmp	r0, #0
   111f4:	beq	11724 <getc@plt+0xbd8>
   111f8:	ldr	r0, [pc, #1400]	; 11778 <getc@plt+0xc2c>
   111fc:	mov	r1, #99	; 0x63
   11200:	mov	r2, r7
   11204:	add	r0, pc, r0
   11208:	bl	10a20 <fgets@plt>
   1120c:	cmp	r0, #0
   11210:	beq	11724 <getc@plt+0xbd8>
   11214:	ldr	r0, [pc, #1376]	; 1177c <getc@plt+0xc30>
   11218:	mov	r1, #99	; 0x63
   1121c:	mov	r2, r7
   11220:	add	r0, pc, r0
   11224:	bl	10a20 <fgets@plt>
   11228:	cmp	r0, #0
   1122c:	beq	11724 <getc@plt+0xbd8>
   11230:	ldr	r0, [pc, #1352]	; 11780 <getc@plt+0xc34>
   11234:	ldr	r1, [pc, #1352]	; 11784 <getc@plt+0xc38>
   11238:	add	r2, sp, #36	; 0x24
   1123c:	add	r0, pc, r0
   11240:	add	r1, pc, r1
   11244:	bl	10af8 <__isoc99_sscanf@plt>
   11248:	cmp	r0, #1
   1124c:	bne	11724 <getc@plt+0xbd8>
   11250:	ldr	r0, [r4, #8]
   11254:	ldr	r1, [sp, #36]	; 0x24
   11258:	mov	r2, r7
   1125c:	add	r0, r0, r1
   11260:	mov	r1, #99	; 0x63
   11264:	str	r0, [r4, #8]
   11268:	ldr	r0, [pc, #1304]	; 11788 <getc@plt+0xc3c>
   1126c:	add	r0, pc, r0
   11270:	bl	10a20 <fgets@plt>
   11274:	cmp	r0, #0
   11278:	beq	11724 <getc@plt+0xbd8>
   1127c:	ldr	r0, [pc, #1288]	; 1178c <getc@plt+0xc40>
   11280:	ldr	r1, [pc, #1288]	; 11790 <getc@plt+0xc44>
   11284:	add	r2, sp, #36	; 0x24
   11288:	add	r0, pc, r0
   1128c:	add	r1, pc, r1
   11290:	bl	10af8 <__isoc99_sscanf@plt>
   11294:	cmp	r0, #1
   11298:	bne	11724 <getc@plt+0xbd8>
   1129c:	ldr	r0, [r4, #12]
   112a0:	ldr	r1, [sp, #36]	; 0x24
   112a4:	mov	r2, r7
   112a8:	add	r0, r0, r1
   112ac:	mov	r1, #99	; 0x63
   112b0:	str	r0, [r4, #12]
   112b4:	ldr	r0, [pc, #1240]	; 11794 <getc@plt+0xc48>
   112b8:	add	r0, pc, r0
   112bc:	bl	10a20 <fgets@plt>
   112c0:	cmp	r0, #0
   112c4:	beq	11724 <getc@plt+0xbd8>
   112c8:	ldr	r0, [pc, #1224]	; 11798 <getc@plt+0xc4c>
   112cc:	ldr	r1, [pc, #1224]	; 1179c <getc@plt+0xc50>
   112d0:	add	r2, sp, #36	; 0x24
   112d4:	add	r0, pc, r0
   112d8:	add	r1, pc, r1
   112dc:	bl	10af8 <__isoc99_sscanf@plt>
   112e0:	cmp	r0, #1
   112e4:	bne	11724 <getc@plt+0xbd8>
   112e8:	ldr	r0, [r4, #16]
   112ec:	ldr	r1, [sp, #36]	; 0x24
   112f0:	mov	r2, r7
   112f4:	add	r0, r0, r1
   112f8:	mov	r1, #99	; 0x63
   112fc:	str	r0, [r4, #16]
   11300:	ldr	r0, [pc, #1176]	; 117a0 <getc@plt+0xc54>
   11304:	add	r0, pc, r0
   11308:	bl	10a20 <fgets@plt>
   1130c:	cmp	r0, #0
   11310:	beq	11724 <getc@plt+0xbd8>
   11314:	ldr	r0, [pc, #1160]	; 117a4 <getc@plt+0xc58>
   11318:	mov	r1, #99	; 0x63
   1131c:	mov	r2, r7
   11320:	add	r0, pc, r0
   11324:	bl	10a20 <fgets@plt>
   11328:	cmp	r0, #0
   1132c:	beq	11724 <getc@plt+0xbd8>
   11330:	ldr	r0, [pc, #1136]	; 117a8 <getc@plt+0xc5c>
   11334:	mov	r1, #99	; 0x63
   11338:	mov	r2, r7
   1133c:	add	r0, pc, r0
   11340:	bl	10a20 <fgets@plt>
   11344:	cmp	r0, #0
   11348:	beq	11724 <getc@plt+0xbd8>
   1134c:	ldr	r0, [pc, #1112]	; 117ac <getc@plt+0xc60>
   11350:	mov	r1, #99	; 0x63
   11354:	mov	r2, r7
   11358:	add	r0, pc, r0
   1135c:	bl	10a20 <fgets@plt>
   11360:	cmp	r0, #0
   11364:	beq	11724 <getc@plt+0xbd8>
   11368:	ldr	r0, [pc, #1088]	; 117b0 <getc@plt+0xc64>
   1136c:	mov	r1, #99	; 0x63
   11370:	mov	r2, r7
   11374:	add	r0, pc, r0
   11378:	bl	10a20 <fgets@plt>
   1137c:	cmp	r0, #0
   11380:	beq	11724 <getc@plt+0xbd8>
   11384:	add	r5, sp, #48	; 0x30
   11388:	orr	r9, r5, #12
   1138c:	orr	r6, r5, #8
   11390:	orr	sl, r5, #4
   11394:	mov	r2, r5
   11398:	stm	sp, {r6, r9}
   1139c:	mov	r3, sl
   113a0:	ldr	r0, [pc, #1036]	; 117b4 <getc@plt+0xc68>
   113a4:	ldr	r1, [pc, #1036]	; 117b8 <getc@plt+0xc6c>
   113a8:	add	r0, pc, r0
   113ac:	add	r1, pc, r1
   113b0:	bl	10af8 <__isoc99_sscanf@plt>
   113b4:	cmp	r0, #4
   113b8:	bne	11724 <getc@plt+0xbd8>
   113bc:	add	r0, r4, #20
   113c0:	vld1.64	{d16-d17}, [r5 :128]
   113c4:	mov	r1, #99	; 0x63
   113c8:	mov	r2, r7
   113cc:	vld1.32	{d18-d19}, [r0]
   113d0:	vadd.i32	q8, q9, q8
   113d4:	vst1.32	{d16-d17}, [r0]
   113d8:	ldr	r0, [pc, #988]	; 117bc <getc@plt+0xc70>
   113dc:	add	r0, pc, r0
   113e0:	bl	10a20 <fgets@plt>
   113e4:	cmp	r0, #0
   113e8:	beq	11724 <getc@plt+0xbd8>
   113ec:	stm	sp, {r6, r9}
   113f0:	mov	r2, r5
   113f4:	mov	r3, sl
   113f8:	ldr	r0, [pc, #960]	; 117c0 <getc@plt+0xc74>
   113fc:	ldr	r1, [pc, #960]	; 117c4 <getc@plt+0xc78>
   11400:	add	r0, pc, r0
   11404:	add	r1, pc, r1
   11408:	bl	10af8 <__isoc99_sscanf@plt>
   1140c:	cmp	r0, #4
   11410:	bne	11724 <getc@plt+0xbd8>
   11414:	add	r0, r4, #36	; 0x24
   11418:	vld1.64	{d16-d17}, [r5 :128]
   1141c:	mov	r1, #99	; 0x63
   11420:	mov	r2, r7
   11424:	vld1.32	{d18-d19}, [r0]
   11428:	vadd.i32	q8, q9, q8
   1142c:	vst1.32	{d16-d17}, [r0]
   11430:	ldr	r0, [pc, #912]	; 117c8 <getc@plt+0xc7c>
   11434:	add	r0, pc, r0
   11438:	bl	10a20 <fgets@plt>
   1143c:	cmp	r0, #0
   11440:	beq	11724 <getc@plt+0xbd8>
   11444:	stm	sp, {r6, r9}
   11448:	mov	r2, r5
   1144c:	mov	r3, sl
   11450:	ldr	r0, [pc, #884]	; 117cc <getc@plt+0xc80>
   11454:	ldr	r1, [pc, #884]	; 117d0 <getc@plt+0xc84>
   11458:	add	r0, pc, r0
   1145c:	add	r1, pc, r1
   11460:	bl	10af8 <__isoc99_sscanf@plt>
   11464:	cmp	r0, #4
   11468:	bne	11724 <getc@plt+0xbd8>
   1146c:	add	r0, r4, #52	; 0x34
   11470:	vld1.64	{d16-d17}, [r5 :128]
   11474:	mov	r1, #99	; 0x63
   11478:	mov	r2, r7
   1147c:	vld1.32	{d18-d19}, [r0]
   11480:	vadd.i32	q8, q9, q8
   11484:	vst1.32	{d16-d17}, [r0]
   11488:	ldr	r6, [pc, #836]	; 117d4 <getc@plt+0xc88>
   1148c:	add	r6, pc, r6
   11490:	mov	r0, r6
   11494:	bl	10a20 <fgets@plt>
   11498:	cmp	r0, #0
   1149c:	beq	11724 <getc@plt+0xbd8>
   114a0:	str	r4, [sp, #20]
   114a4:	mov	r0, r6
   114a8:	mov	r1, #99	; 0x63
   114ac:	mov	r2, r7
   114b0:	bl	10a20 <fgets@plt>
   114b4:	cmp	r0, #0
   114b8:	ldrbne	r0, [r6]
   114bc:	cmpne	r0, #10
   114c0:	bne	114a4 <getc@plt+0x958>
   114c4:	ldr	r0, [sp, #40]	; 0x28
   114c8:	cmp	r0, #1
   114cc:	blt	115dc <getc@plt+0xa90>
   114d0:	ldr	r0, [pc, #768]	; 117d8 <getc@plt+0xc8c>
   114d4:	mov	r1, #99	; 0x63
   114d8:	mov	r2, r7
   114dc:	add	r0, pc, r0
   114e0:	bl	10a20 <fgets@plt>
   114e4:	cmp	r0, #0
   114e8:	beq	115dc <getc@plt+0xa90>
   114ec:	ldr	r4, [pc, #744]	; 117dc <getc@plt+0xc90>
   114f0:	mov	r1, #99	; 0x63
   114f4:	mov	r2, r7
   114f8:	add	r4, pc, r4
   114fc:	mov	r0, r4
   11500:	bl	10a20 <fgets@plt>
   11504:	cmp	r0, #0
   11508:	beq	115dc <getc@plt+0xa90>
   1150c:	ldr	r1, [sp, #20]
   11510:	movw	r0, #2124	; 0x84c
   11514:	add	r8, sp, #36	; 0x24
   11518:	add	r0, r1, r0
   1151c:	str	r0, [sp, #28]
   11520:	add	r0, r4, #20
   11524:	ldr	r9, [pc, #692]	; 117e0 <getc@plt+0xc94>
   11528:	str	r0, [sp, #24]
   1152c:	ldr	r5, [sp, #24]
   11530:	add	r9, pc, r9
   11534:	mov	r0, r4
   11538:	mov	r1, r9
   1153c:	mov	r2, r8
   11540:	add	r3, sp, #48	; 0x30
   11544:	bl	10af8 <__isoc99_sscanf@plt>
   11548:	cmp	r0, #2
   1154c:	bne	115dc <getc@plt+0xa90>
   11550:	ldr	r0, [sp, #28]
   11554:	ldr	sl, [sp, #48]	; 0x30
   11558:	ldr	r6, [sp, #36]	; 0x24
   1155c:	mov	r1, r5
   11560:	bl	12098 <getc@plt+0x154c>
   11564:	cmp	r0, #0
   11568:	beq	11588 <getc@plt+0xa3c>
   1156c:	ldr	r1, [r0, #12]
   11570:	ldr	r2, [r0, #16]
   11574:	add	r1, r1, r6
   11578:	add	r2, r2, sl
   1157c:	str	r1, [r0, #12]
   11580:	str	r2, [r0, #16]
   11584:	b	115c4 <getc@plt+0xa78>
   11588:	mov	r0, #1
   1158c:	mov	r1, #20
   11590:	bl	12650 <getc@plt+0x1b04>
   11594:	mov	r4, r9
   11598:	mov	r9, r0
   1159c:	mov	r0, r5
   115a0:	bl	10a38 <strdup@plt>
   115a4:	add	r1, r9, #8
   115a8:	stm	r1, {r0, r6, sl}
   115ac:	mov	r1, r9
   115b0:	mov	r9, r4
   115b4:	ldr	r0, [sp, #28]
   115b8:	ldr	r4, [pc, #548]	; 117e4 <getc@plt+0xc98>
   115bc:	add	r4, pc, r4
   115c0:	bl	12128 <getc@plt+0x15dc>
   115c4:	mov	r0, r4
   115c8:	mov	r1, #99	; 0x63
   115cc:	mov	r2, r7
   115d0:	bl	10a20 <fgets@plt>
   115d4:	cmp	r0, #0
   115d8:	bne	11534 <getc@plt+0x9e8>
   115dc:	ldr	r0, [sp, #44]	; 0x2c
   115e0:	ldr	r4, [sp, #20]
   115e4:	cmp	r0, #1
   115e8:	blt	11714 <getc@plt+0xbc8>
   115ec:	ldr	r0, [pc, #500]	; 117e8 <getc@plt+0xc9c>
   115f0:	mov	r1, #99	; 0x63
   115f4:	mov	r2, r7
   115f8:	add	r0, pc, r0
   115fc:	bl	10a20 <fgets@plt>
   11600:	cmp	r0, #0
   11604:	beq	11714 <getc@plt+0xbc8>
   11608:	ldr	r6, [pc, #476]	; 117ec <getc@plt+0xca0>
   1160c:	mov	r1, #99	; 0x63
   11610:	mov	r2, r7
   11614:	add	r6, pc, r6
   11618:	mov	r0, r6
   1161c:	bl	10a20 <fgets@plt>
   11620:	cmp	r0, #0
   11624:	beq	11714 <getc@plt+0xbc8>
   11628:	add	r5, sp, #48	; 0x30
   1162c:	add	r0, r6, #31
   11630:	str	r0, [sp, #28]
   11634:	ldr	r1, [pc, #436]	; 117f0 <getc@plt+0xca4>
   11638:	mov	r0, r6
   1163c:	add	r2, sp, #36	; 0x24
   11640:	mov	r3, r5
   11644:	add	r1, pc, r1
   11648:	bl	10af8 <__isoc99_sscanf@plt>
   1164c:	cmp	r0, #2
   11650:	bne	11714 <getc@plt+0xbc8>
   11654:	ldrb	r0, [r6, #31]
   11658:	cmp	r0, #92	; 0x5c
   1165c:	beq	11674 <getc@plt+0xb28>
   11660:	cmp	r0, #125	; 0x7d
   11664:	bne	11680 <getc@plt+0xb34>
   11668:	ldrb	sl, [r6, #30]
   1166c:	str	sl, [sp, #32]
   11670:	b	11698 <getc@plt+0xb4c>
   11674:	mov	sl, #10
   11678:	str	sl, [sp, #32]
   1167c:	b	11698 <getc@plt+0xb4c>
   11680:	ldr	r0, [sp, #28]
   11684:	ldr	r1, [pc, #360]	; 117f4 <getc@plt+0xca8>
   11688:	add	r2, sp, #32
   1168c:	add	r1, pc, r1
   11690:	bl	10af8 <__isoc99_sscanf@plt>
   11694:	ldr	sl, [sp, #32]
   11698:	ldr	r8, [sp, #48]	; 0x30
   1169c:	ldr	r9, [sp, #36]	; 0x24
   116a0:	mov	r0, sl
   116a4:	bl	12324 <getc@plt+0x17d8>
   116a8:	add	r0, r4, r0, lsl #3
   116ac:	ldr	r1, [r0, #68]	; 0x44
   116b0:	ldr	r2, [r0, #72]	; 0x48
   116b4:	add	r1, r1, r9
   116b8:	add	r2, r2, r8
   116bc:	str	r1, [r0, #68]	; 0x44
   116c0:	str	r2, [r0, #72]	; 0x48
   116c4:	mov	r2, r7
   116c8:	ldr	r0, [r4, #2116]	; 0x844
   116cc:	ldr	r1, [r4, #2120]	; 0x848
   116d0:	add	r0, r0, r9
   116d4:	add	r1, r1, r8
   116d8:	str	r0, [r4, #2116]	; 0x844
   116dc:	str	r1, [r4, #2120]	; 0x848
   116e0:	add	r0, r4, sl, lsl #3
   116e4:	movw	r1, #10180	; 0x27c4
   116e8:	ldr	r1, [r0, r1]!
   116ec:	add	r1, r1, r9
   116f0:	str	r1, [r0]
   116f4:	ldr	r1, [r0, #4]
   116f8:	add	r1, r1, r8
   116fc:	str	r1, [r0, #4]
   11700:	mov	r0, r6
   11704:	mov	r1, #99	; 0x63
   11708:	bl	10a20 <fgets@plt>
   1170c:	cmp	r0, #0
   11710:	bne	11634 <getc@plt+0xae8>
   11714:	mov	r0, r7
   11718:	bl	12778 <getc@plt+0x1c2c>
   1171c:	sub	sp, fp, #28
   11720:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11724:	ldr	r1, [pc, #204]	; 117f8 <getc@plt+0xcac>
   11728:	ldr	r0, [pc, #204]	; 117fc <getc@plt+0xcb0>
   1172c:	cmp	r8, #0
   11730:	add	r1, pc, r1
   11734:	add	r0, pc, r0
   11738:	movne	r1, r8
   1173c:	bl	12b60 <error@@Base+0x50>
   11740:	andeq	r2, r0, r7, ror #30
   11744:	strdeq	r3, [r1], -r5
   11748:	ldrdeq	r3, [r1], -r9
   1174c:	andeq	r2, r0, fp, lsr r6
   11750:			; <UNDEFINED> instruction: 0x00013fb9
   11754:	andeq	r3, r1, r1, lsr #31
   11758:			; <UNDEFINED> instruction: 0x00002eb6
   1175c:	andeq	r3, r1, r1, lsl #31
   11760:	andeq	r3, r1, r5, ror #30
   11764:	andeq	r2, r0, fp, lsl r7
   11768:	andeq	r3, r1, r5, lsr pc
   1176c:	andeq	r3, r1, r9, lsl pc
   11770:	andeq	r2, r0, pc, asr #13
   11774:	andeq	r3, r1, r9, ror #29
   11778:	andeq	r3, r1, sp, asr #29
   1177c:			; <UNDEFINED> instruction: 0x00013eb1
   11780:	muleq	r1, r5, lr
   11784:	andeq	r2, r0, fp, asr #12
   11788:	andeq	r3, r1, r5, ror #28
   1178c:	andeq	r3, r1, r9, asr #28
   11790:	strdeq	r2, [r0], -pc	; <UNPREDICTABLE>
   11794:	andeq	r3, r1, r9, lsl lr
   11798:	strdeq	r3, [r1], -sp
   1179c:			; <UNDEFINED> instruction: 0x000025b3
   117a0:	andeq	r3, r1, sp, asr #27
   117a4:			; <UNDEFINED> instruction: 0x00013db1
   117a8:	muleq	r1, r5, sp
   117ac:	andeq	r3, r1, r9, ror sp
   117b0:	andeq	r3, r1, sp, asr sp
   117b4:	andeq	r3, r1, r9, lsr #26
   117b8:	ldrdeq	r2, [r0], -r3
   117bc:	strdeq	r3, [r1], -r5
   117c0:	ldrdeq	r3, [r1], -r1
   117c4:	andeq	r2, r0, fp, ror r4
   117c8:	muleq	r1, sp, ip
   117cc:	andeq	r3, r1, r9, ror ip
   117d0:	andeq	r2, r0, r3, lsr #8
   117d4:	andeq	r3, r1, r5, asr #24
   117d8:	strdeq	r3, [r1], -r5
   117dc:	ldrdeq	r3, [r1], -r9
   117e0:	andeq	r2, r0, r7, asr r3
   117e4:	andeq	r3, r1, r5, lsl fp
   117e8:	ldrdeq	r3, [r1], -r9
   117ec:			; <UNDEFINED> instruction: 0x00013abd
   117f0:	andeq	r2, r0, r3, asr #4
   117f4:	ldrdeq	r2, [r0], -r6
   117f8:	andeq	r2, r0, r8, asr #32
   117fc:	andeq	r2, r0, r2, lsr r0
   11800:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11804:	add	fp, sp, #28
   11808:	sub	sp, sp, #4
   1180c:	vpush	{d8}
   11810:	sub	sp, sp, #24
   11814:	mov	r2, r1
   11818:	ldr	r1, [pc, #1512]	; 11e08 <getc@plt+0x12bc>
   1181c:	mov	sl, r0
   11820:	mov	r0, r2
   11824:	add	r1, pc, r1
   11828:	bl	126f0 <getc@plt+0x1ba4>
   1182c:	ldr	r1, [pc, #1496]	; 11e0c <getc@plt+0x12c0>
   11830:	ldr	r2, [pc, #1496]	; 11e10 <getc@plt+0x12c4>
   11834:	ldr	r3, [pc, #1496]	; 11e14 <getc@plt+0x12c8>
   11838:	mov	r4, r0
   1183c:	add	r1, pc, r1
   11840:	add	r2, pc, r2
   11844:	add	r3, pc, r3
   11848:	bl	10aec <fprintf@plt>
   1184c:	ldr	r2, [sl]
   11850:	ldr	r6, [pc, #1472]	; 11e18 <getc@plt+0x12cc>
   11854:	ldr	r3, [pc, #1472]	; 11e1c <getc@plt+0x12d0>
   11858:	mov	r0, r4
   1185c:	add	r6, pc, r6
   11860:	add	r3, pc, r3
   11864:	mov	r1, r6
   11868:	bl	10aec <fprintf@plt>
   1186c:	ldr	r2, [sl, #4]
   11870:	ldr	r3, [pc, #1448]	; 11e20 <getc@plt+0x12d4>
   11874:	mov	r0, r4
   11878:	mov	r1, r6
   1187c:	add	r3, pc, r3
   11880:	bl	10aec <fprintf@plt>
   11884:	ldr	r0, [sl]
   11888:	cmp	r0, #0
   1188c:	beq	118cc <getc@plt+0xd80>
   11890:	ldr	r1, [sl, #4]
   11894:	vldr	d16, [pc, #900]	; 11c20 <getc@plt+0x10d4>
   11898:	vmov	s2, r0
   1189c:	sub	r1, r0, r1
   118a0:	mov	r0, r4
   118a4:	vmov	s0, r1
   118a8:	vcvt.f64.s32	d17, s0
   118ac:	vcvt.f64.s32	d18, s2
   118b0:	ldr	r1, [pc, #1392]	; 11e28 <getc@plt+0x12dc>
   118b4:	vmul.f64	d16, d17, d16
   118b8:	vdiv.f64	d16, d16, d18
   118bc:	vmov	r2, r3, d16
   118c0:	add	r1, pc, r1
   118c4:	bl	10aec <fprintf@plt>
   118c8:	b	118e4 <getc@plt+0xd98>
   118cc:	ldr	r0, [pc, #1360]	; 11e24 <getc@plt+0x12d8>
   118d0:	mov	r1, #8
   118d4:	mov	r2, #1
   118d8:	mov	r3, r4
   118dc:	add	r0, pc, r0
   118e0:	bl	10a74 <fwrite@plt>
   118e4:	ldr	r1, [pc, #1344]	; 11e2c <getc@plt+0x12e0>
   118e8:	mov	r0, r4
   118ec:	add	r1, pc, r1
   118f0:	bl	10aec <fprintf@plt>
   118f4:	ldr	r2, [sl, #8]
   118f8:	ldr	r6, [pc, #1328]	; 11e30 <getc@plt+0x12e4>
   118fc:	ldr	r3, [pc, #1328]	; 11e34 <getc@plt+0x12e8>
   11900:	mov	r0, r4
   11904:	add	r6, pc, r6
   11908:	add	r3, pc, r3
   1190c:	mov	r1, r6
   11910:	bl	10aec <fprintf@plt>
   11914:	ldr	r2, [sl, #12]
   11918:	ldr	r3, [pc, #1304]	; 11e38 <getc@plt+0x12ec>
   1191c:	mov	r0, r4
   11920:	mov	r1, r6
   11924:	add	r3, pc, r3
   11928:	bl	10aec <fprintf@plt>
   1192c:	ldr	r2, [sl, #16]
   11930:	ldr	r3, [pc, #1284]	; 11e3c <getc@plt+0x12f0>
   11934:	mov	r0, r4
   11938:	mov	r1, r6
   1193c:	add	r3, pc, r3
   11940:	bl	10aec <fprintf@plt>
   11944:	ldr	r0, [sl]
   11948:	cmp	r0, #0
   1194c:	beq	11990 <getc@plt+0xe44>
   11950:	ldr	r1, [sl, #8]
   11954:	ldr	r2, [sl, #12]
   11958:	vldr	d16, [pc, #704]	; 11c20 <getc@plt+0x10d4>
   1195c:	vmov	s2, r0
   11960:	mov	r0, r4
   11964:	add	r1, r2, r1
   11968:	vmov	s0, r1
   1196c:	vcvt.f64.s32	d17, s0
   11970:	vcvt.f64.s32	d18, s2
   11974:	ldr	r1, [pc, #1224]	; 11e44 <getc@plt+0x12f8>
   11978:	vmul.f64	d16, d17, d16
   1197c:	vdiv.f64	d16, d16, d18
   11980:	vmov	r2, r3, d16
   11984:	add	r1, pc, r1
   11988:	bl	10aec <fprintf@plt>
   1198c:	b	119a8 <getc@plt+0xe5c>
   11990:	ldr	r0, [pc, #1192]	; 11e40 <getc@plt+0x12f4>
   11994:	mov	r1, #8
   11998:	mov	r2, #1
   1199c:	mov	r3, r4
   119a0:	add	r0, pc, r0
   119a4:	bl	10a74 <fwrite@plt>
   119a8:	ldr	r1, [pc, #1176]	; 11e48 <getc@plt+0x12fc>
   119ac:	mov	r0, r4
   119b0:	add	r1, pc, r1
   119b4:	bl	10aec <fprintf@plt>
   119b8:	ldr	r0, [sl]
   119bc:	cmp	r0, #0
   119c0:	beq	11a00 <getc@plt+0xeb4>
   119c4:	ldr	r1, [sl, #48]	; 0x30
   119c8:	vldr	d16, [pc, #592]	; 11c20 <getc@plt+0x10d4>
   119cc:	vmov	s2, r0
   119d0:	sub	r1, r0, r1
   119d4:	mov	r0, r4
   119d8:	vmov	s0, r1
   119dc:	vcvt.f64.s32	d17, s0
   119e0:	vcvt.f64.s32	d18, s2
   119e4:	ldr	r1, [pc, #1124]	; 11e50 <getc@plt+0x1304>
   119e8:	vmul.f64	d16, d17, d16
   119ec:	vdiv.f64	d16, d16, d18
   119f0:	vmov	r2, r3, d16
   119f4:	add	r1, pc, r1
   119f8:	bl	10aec <fprintf@plt>
   119fc:	b	11a18 <getc@plt+0xecc>
   11a00:	ldr	r0, [pc, #1092]	; 11e4c <getc@plt+0x1300>
   11a04:	mov	r1, #8
   11a08:	mov	r2, #1
   11a0c:	mov	r3, r4
   11a10:	add	r0, pc, r0
   11a14:	bl	10a74 <fwrite@plt>
   11a18:	ldr	r1, [pc, #1076]	; 11e54 <getc@plt+0x1308>
   11a1c:	mov	r0, r4
   11a20:	add	r1, pc, r1
   11a24:	bl	10aec <fprintf@plt>
   11a28:	ldr	r0, [pc, #1064]	; 11e58 <getc@plt+0x130c>
   11a2c:	mov	r1, #37	; 0x25
   11a30:	mov	r2, #1
   11a34:	mov	r3, r4
   11a38:	add	r0, pc, r0
   11a3c:	bl	10a74 <fwrite@plt>
   11a40:	ldr	r2, [sl, #20]
   11a44:	ldr	r3, [sl, #24]
   11a48:	ldr	r0, [sl, #28]
   11a4c:	ldr	r1, [sl, #32]
   11a50:	ldr	r7, [pc, #1028]	; 11e5c <getc@plt+0x1310>
   11a54:	add	r7, pc, r7
   11a58:	stm	sp, {r0, r1, r7}
   11a5c:	mov	r0, r4
   11a60:	ldr	r6, [pc, #1016]	; 11e60 <getc@plt+0x1314>
   11a64:	add	r6, pc, r6
   11a68:	mov	r1, r6
   11a6c:	bl	10aec <fprintf@plt>
   11a70:	ldr	r2, [sl, #36]	; 0x24
   11a74:	ldr	r3, [sl, #40]	; 0x28
   11a78:	ldr	r0, [sl, #44]	; 0x2c
   11a7c:	ldr	r1, [sl, #48]	; 0x30
   11a80:	ldr	r7, [pc, #988]	; 11e64 <getc@plt+0x1318>
   11a84:	add	r7, pc, r7
   11a88:	stm	sp, {r0, r1, r7}
   11a8c:	mov	r0, r4
   11a90:	mov	r1, r6
   11a94:	bl	10aec <fprintf@plt>
   11a98:	ldr	r2, [sl, #52]	; 0x34
   11a9c:	ldr	r3, [sl, #56]	; 0x38
   11aa0:	ldr	r0, [sl, #60]	; 0x3c
   11aa4:	ldr	r1, [sl, #64]	; 0x40
   11aa8:	ldr	r7, [pc, #952]	; 11e68 <getc@plt+0x131c>
   11aac:	add	r7, pc, r7
   11ab0:	stm	sp, {r0, r1, r7}
   11ab4:	mov	r0, r4
   11ab8:	mov	r1, r6
   11abc:	bl	10aec <fprintf@plt>
   11ac0:	ldr	r1, [pc, #932]	; 11e6c <getc@plt+0x1320>
   11ac4:	mov	r0, r4
   11ac8:	add	r1, pc, r1
   11acc:	bl	10aec <fprintf@plt>
   11ad0:	ldr	r7, [pc, #920]	; 11e70 <getc@plt+0x1324>
   11ad4:	vldr	d8, [pc, #804]	; 11e00 <getc@plt+0x12b4>
   11ad8:	mov	r6, #0
   11adc:	add	r9, sp, #15
   11ae0:	add	r7, pc, r7
   11ae4:	add	r5, sl, r6, lsl #3
   11ae8:	ldr	r0, [r5, #68]	; 0x44
   11aec:	cmp	r0, #1
   11af0:	blt	11bb8 <getc@plt+0x106c>
   11af4:	mov	r0, r6
   11af8:	bl	124ac <getc@plt+0x1960>
   11afc:	ldr	r2, [r5, #68]	; 0x44
   11b00:	ldr	r3, [r5, #72]	; 0x48
   11b04:	mov	r8, r0
   11b08:	mov	r0, r4
   11b0c:	mov	r1, r7
   11b10:	bl	10aec <fprintf@plt>
   11b14:	ldr	r0, [r5, #68]	; 0x44
   11b18:	cmp	r0, #0
   11b1c:	beq	11b70 <getc@plt+0x1024>
   11b20:	ldr	r1, [r5, #72]	; 0x48
   11b24:	vmov	s2, r0
   11b28:	sub	r1, r0, r1
   11b2c:	mov	r0, r4
   11b30:	vmov	s0, r1
   11b34:	vcvt.f64.s32	d16, s0
   11b38:	vcvt.f64.s32	d17, s2
   11b3c:	ldr	r1, [pc, #820]	; 11e78 <getc@plt+0x132c>
   11b40:	vmul.f64	d16, d16, d8
   11b44:	vdiv.f64	d16, d16, d17
   11b48:	vmov	r2, r3, d16
   11b4c:	add	r1, pc, r1
   11b50:	bl	10aec <fprintf@plt>
   11b54:	cmp	r8, #0
   11b58:	beq	11b90 <getc@plt+0x1044>
   11b5c:	ldr	r1, [pc, #792]	; 11e7c <getc@plt+0x1330>
   11b60:	mov	r0, r4
   11b64:	mov	r2, r8
   11b68:	add	r1, pc, r1
   11b6c:	b	11bb4 <getc@plt+0x1068>
   11b70:	ldr	r0, [pc, #764]	; 11e74 <getc@plt+0x1328>
   11b74:	mov	r1, #8
   11b78:	mov	r2, #1
   11b7c:	mov	r3, r4
   11b80:	add	r0, pc, r0
   11b84:	bl	10a74 <fwrite@plt>
   11b88:	cmp	r8, #0
   11b8c:	bne	11b5c <getc@plt+0x1010>
   11b90:	mov	r0, #0
   11b94:	mov	r1, #0
   11b98:	mov	r2, r9
   11b9c:	mov	r3, #1
   11ba0:	bl	13124 <error@@Base+0x614>
   11ba4:	ldr	r1, [pc, #724]	; 11e80 <getc@plt+0x1334>
   11ba8:	mov	r0, r4
   11bac:	mov	r2, r9
   11bb0:	add	r1, pc, r1
   11bb4:	bl	10aec <fprintf@plt>
   11bb8:	add	r6, r6, #1
   11bbc:	cmp	r6, #256	; 0x100
   11bc0:	bne	11ae4 <getc@plt+0xf98>
   11bc4:	ldr	r2, [sl, #2116]	; 0x844
   11bc8:	ldr	r3, [sl, #2120]	; 0x848
   11bcc:	ldr	r1, [pc, #688]	; 11e84 <getc@plt+0x1338>
   11bd0:	mov	r0, r4
   11bd4:	add	r1, pc, r1
   11bd8:	bl	10aec <fprintf@plt>
   11bdc:	ldr	r0, [sl, #2116]	; 0x844
   11be0:	cmp	r0, #0
   11be4:	beq	11c28 <getc@plt+0x10dc>
   11be8:	ldr	r1, [sl, #2120]	; 0x848
   11bec:	vmov	s2, r0
   11bf0:	sub	r1, r0, r1
   11bf4:	mov	r0, r4
   11bf8:	vmov	s0, r1
   11bfc:	vcvt.f64.s32	d16, s0
   11c00:	vcvt.f64.s32	d17, s2
   11c04:	ldr	r1, [pc, #640]	; 11e8c <getc@plt+0x1340>
   11c08:	vmul.f64	d16, d16, d8
   11c0c:	vdiv.f64	d16, d16, d17
   11c10:	vmov	r2, r3, d16
   11c14:	add	r1, pc, r1
   11c18:	bl	10aec <fprintf@plt>
   11c1c:	b	11c40 <getc@plt+0x10f4>
   11c20:	andeq	r0, r0, r0
   11c24:	subsmi	r0, r9, r0
   11c28:	ldr	r0, [pc, #600]	; 11e88 <getc@plt+0x133c>
   11c2c:	mov	r1, #8
   11c30:	mov	r2, #1
   11c34:	mov	r3, r4
   11c38:	add	r0, pc, r0
   11c3c:	bl	10a74 <fwrite@plt>
   11c40:	ldr	r1, [pc, #584]	; 11e90 <getc@plt+0x1344>
   11c44:	ldr	r2, [pc, #584]	; 11e94 <getc@plt+0x1348>
   11c48:	mov	r0, r4
   11c4c:	add	r1, pc, r1
   11c50:	add	r2, pc, r2
   11c54:	bl	10aec <fprintf@plt>
   11c58:	ldr	r0, [sl, #4]
   11c5c:	cmp	r0, #1
   11c60:	blt	11cf0 <getc@plt+0x11a4>
   11c64:	movw	r0, #2124	; 0x84c
   11c68:	add	r0, sl, r0
   11c6c:	bl	12248 <getc@plt+0x16fc>
   11c70:	mov	r0, #10176	; 0x27c0
   11c74:	mov	r7, sl
   11c78:	ldr	r0, [r7, r0]!
   11c7c:	mov	r5, r7
   11c80:	ldr	r1, [r5, #-4]!
   11c84:	ldr	r2, [pc, #524]	; 11e98 <getc@plt+0x134c>
   11c88:	add	r2, pc, r2
   11c8c:	bl	11eec <getc@plt+0x13a0>
   11c90:	ldr	r0, [pc, #516]	; 11e9c <getc@plt+0x1350>
   11c94:	mov	r1, #39	; 0x27
   11c98:	mov	r2, #1
   11c9c:	mov	r3, r4
   11ca0:	add	r0, pc, r0
   11ca4:	bl	10a74 <fwrite@plt>
   11ca8:	ldr	r0, [r7]
   11cac:	cmp	r0, #1
   11cb0:	blt	11cf0 <getc@plt+0x11a4>
   11cb4:	ldr	r8, [pc, #484]	; 11ea0 <getc@plt+0x1354>
   11cb8:	mov	r6, #0
   11cbc:	add	r8, pc, r8
   11cc0:	ldr	r0, [r5]
   11cc4:	ldr	r0, [r0, r6, lsl #2]
   11cc8:	add	r3, r0, #8
   11ccc:	mov	r0, r4
   11cd0:	ldm	r3, {r1, r2, r3}
   11cd4:	str	r1, [sp]
   11cd8:	mov	r1, r8
   11cdc:	bl	10aec <fprintf@plt>
   11ce0:	ldr	r0, [r7]
   11ce4:	add	r6, r6, #1
   11ce8:	cmp	r6, r0
   11cec:	blt	11cc0 <getc@plt+0x1174>
   11cf0:	ldr	r0, [sl]
   11cf4:	cmp	r0, #1
   11cf8:	blt	11de4 <getc@plt+0x1298>
   11cfc:	ldr	r1, [pc, #416]	; 11ea4 <getc@plt+0x1358>
   11d00:	mov	r0, r4
   11d04:	add	r1, pc, r1
   11d08:	bl	10aec <fprintf@plt>
   11d0c:	ldr	r6, [pc, #404]	; 11ea8 <getc@plt+0x135c>
   11d10:	movw	r0, #10180	; 0x27c4
   11d14:	movw	r9, #65535	; 0xffff
   11d18:	mov	r5, #0
   11d1c:	add	r7, sp, #15
   11d20:	add	r8, sl, r0
   11d24:	movw	r0, #10184	; 0x27c8
   11d28:	movt	r9, #16
   11d2c:	add	sl, sl, r0
   11d30:	add	r6, pc, r6
   11d34:	ldr	r2, [r8, r5, lsl #3]
   11d38:	cmp	r2, #1
   11d3c:	blt	11dd8 <getc@plt+0x128c>
   11d40:	ldr	r3, [sl, r5, lsl #3]
   11d44:	ldr	r1, [pc, #352]	; 11eac <getc@plt+0x1360>
   11d48:	mov	r0, r4
   11d4c:	add	r1, pc, r1
   11d50:	bl	10aec <fprintf@plt>
   11d54:	ldr	r0, [r8, r5, lsl #3]
   11d58:	cmp	r0, #0
   11d5c:	beq	11d9c <getc@plt+0x1250>
   11d60:	lsl	r1, r5, #1
   11d64:	vmov	s2, r0
   11d68:	ldr	r1, [sl, r1, lsl #2]
   11d6c:	sub	r1, r0, r1
   11d70:	mov	r0, r4
   11d74:	vmov	s0, r1
   11d78:	vcvt.f64.s32	d16, s0
   11d7c:	vcvt.f64.s32	d17, s2
   11d80:	ldr	r1, [pc, #300]	; 11eb4 <getc@plt+0x1368>
   11d84:	vmul.f64	d16, d16, d8
   11d88:	vdiv.f64	d16, d16, d17
   11d8c:	vmov	r2, r3, d16
   11d90:	add	r1, pc, r1
   11d94:	bl	10aec <fprintf@plt>
   11d98:	b	11db4 <getc@plt+0x1268>
   11d9c:	ldr	r0, [pc, #268]	; 11eb0 <getc@plt+0x1364>
   11da0:	mov	r1, #8
   11da4:	mov	r2, #1
   11da8:	mov	r3, r4
   11dac:	add	r0, pc, r0
   11db0:	bl	10a74 <fwrite@plt>
   11db4:	mov	r0, #0
   11db8:	mov	r1, r5
   11dbc:	mov	r2, r7
   11dc0:	mov	r3, #1
   11dc4:	bl	13124 <error@@Base+0x614>
   11dc8:	mov	r0, r4
   11dcc:	mov	r1, r6
   11dd0:	mov	r2, r7
   11dd4:	bl	10aec <fprintf@plt>
   11dd8:	add	r5, r5, #1
   11ddc:	cmp	r5, r9
   11de0:	bne	11d34 <getc@plt+0x11e8>
   11de4:	mov	r0, r4
   11de8:	bl	12778 <getc@plt+0x1c2c>
   11dec:	sub	sp, fp, #40	; 0x28
   11df0:	vpop	{d8}
   11df4:	add	sp, sp, #4
   11df8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11dfc:	nop	{0}
   11e00:	andeq	r0, r0, r0
   11e04:	subsmi	r0, r9, r0
   11e08:	muleq	r0, ip, r2
   11e0c:	andeq	r1, r0, r2, asr #30
   11e10:	strdeq	r1, [r0], -r7
   11e14:	andeq	r2, r0, r6, lsr #15
   11e18:	andeq	r2, r0, r1, asr r0
   11e1c:	andeq	r2, r0, r2, asr r1
   11e20:	andeq	r1, r0, r7, lsl #30
   11e24:			; <UNDEFINED> instruction: 0x00001fb3
   11e28:	ldrdeq	r1, [r0], -r8
   11e2c:	muleq	r0, lr, lr
   11e30:	andeq	r1, r0, r9, lsr #31
   11e34:	muleq	r0, r1, lr
   11e38:	andeq	r1, r0, r7, lsl #29
   11e3c:	andeq	r1, r0, pc, ror lr
   11e40:	andeq	r1, r0, pc, ror #29
   11e44:	andeq	r1, r0, r4, lsl pc
   11e48:	andeq	r1, r0, r7, lsl lr
   11e4c:	andeq	r1, r0, pc, ror lr
   11e50:	andeq	r1, r0, r4, lsr #29
   11e54:			; <UNDEFINED> instruction: 0x00001dbe
   11e58:	andeq	r1, r0, r5, asr #27
   11e5c:	andeq	r1, r0, pc, asr #27
   11e60:	andeq	r1, r0, sl, lsr lr
   11e64:	andeq	r1, r0, r6, lsr #27
   11e68:	andeq	r1, r0, r7, lsl #27
   11e6c:	andeq	r1, r0, r1, ror sp
   11e70:	andeq	r1, r0, ip, ror #23
   11e74:	andeq	r1, r0, pc, lsl #26
   11e78:	andeq	r1, r0, ip, asr #26
   11e7c:	andeq	r1, r0, r9, asr #26
   11e80:	andeq	r1, r0, r8, lsl #26
   11e84:	strdeq	r1, [r0], -r8
   11e88:	andeq	r1, r0, r7, asr ip
   11e8c:	andeq	r1, r0, r4, lsl #25
   11e90:	andeq	r1, r0, r5, ror #24
   11e94:	andeq	r1, r0, r3, ror #23
   11e98:	andeq	r0, r0, r8, lsr #4
   11e9c:			; <UNDEFINED> instruction: 0x00001bb7
   11ea0:	andeq	r1, r0, r5, lsl #24
   11ea4:	andeq	r1, r0, r5, lsr fp
   11ea8:	andeq	r1, r0, r8, lsl #23
   11eac:	andeq	r1, r0, r0, lsl #19
   11eb0:	andeq	r1, r0, r3, ror #21
   11eb4:	andeq	r1, r0, r8, lsl #22
   11eb8:	ldr	r2, [r1, #12]
   11ebc:	ldr	r3, [r0, #12]
   11ec0:	cmp	r2, r3
   11ec4:	bne	11ee4 <getc@plt+0x1398>
   11ec8:	ldr	r2, [r1, #16]
   11ecc:	ldr	r3, [r0, #16]
   11ed0:	cmp	r2, r3
   11ed4:	bne	11ee4 <getc@plt+0x1398>
   11ed8:	ldr	r1, [r1, #8]
   11edc:	ldr	r0, [r0, #8]
   11ee0:	b	12674 <getc@plt+0x1b28>
   11ee4:	sub	r0, r2, r3
   11ee8:	bx	lr
   11eec:	cmp	r0, #2
   11ef0:	bxlt	lr
   11ef4:	ldr	r3, [pc, #28]	; 11f18 <getc@plt+0x13cc>
   11ef8:	add	r3, pc, r3
   11efc:	str	r2, [r3]
   11f00:	ldr	r2, [pc, #20]	; 11f1c <getc@plt+0x13d0>
   11f04:	add	r2, pc, r2
   11f08:	str	r1, [r2]
   11f0c:	sub	r1, r0, #1
   11f10:	mov	r0, #0
   11f14:	b	11f20 <getc@plt+0x13d4>
   11f18:	andeq	r3, r1, r4, asr #4
   11f1c:	andeq	r3, r1, r4, lsr r2
   11f20:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11f24:	add	fp, sp, #24
   11f28:	mov	r8, r1
   11f2c:	mov	r5, r0
   11f30:	b	11f54 <getc@plt+0x1408>
   11f34:	sub	r1, r4, #1
   11f38:	str	r6, [r0, r4, lsl #2]
   11f3c:	cmp	r1, r5
   11f40:	movgt	r0, r5
   11f44:	blgt	11f20 <getc@plt+0x13d4>
   11f48:	add	r5, r7, #1
   11f4c:	cmp	r5, r8
   11f50:	popge	{r4, r5, r6, r7, r8, sl, fp, pc}
   11f54:	ldr	r0, [pc, #220]	; 12038 <getc@plt+0x14ec>
   11f58:	cmp	r5, r8
   11f5c:	mov	r4, r8
   11f60:	mov	r7, r5
   11f64:	ldr	r0, [pc, r0]
   11f68:	ldr	r6, [r0, r5, lsl #2]
   11f6c:	bge	11f34 <getc@plt+0x13e8>
   11f70:	mov	r7, r5
   11f74:	mov	r4, r8
   11f78:	cmp	r7, r4
   11f7c:	blt	11f90 <getc@plt+0x1444>
   11f80:	b	11fb4 <getc@plt+0x1468>
   11f84:	sub	r4, r4, #1
   11f88:	cmp	r7, r4
   11f8c:	bge	11fb4 <getc@plt+0x1468>
   11f90:	ldr	r0, [pc, #164]	; 1203c <getc@plt+0x14f0>
   11f94:	ldr	r0, [pc, r0]
   11f98:	ldr	r1, [r0, r4, lsl #2]
   11f9c:	ldr	r2, [pc, #156]	; 12040 <getc@plt+0x14f4>
   11fa0:	mov	r0, r6
   11fa4:	ldr	r2, [pc, r2]
   11fa8:	blx	r2
   11fac:	cmn	r0, #1
   11fb0:	ble	11f84 <getc@plt+0x1438>
   11fb4:	cmp	r7, r4
   11fb8:	beq	11fd0 <getc@plt+0x1484>
   11fbc:	ldr	r0, [pc, #128]	; 12044 <getc@plt+0x14f8>
   11fc0:	ldr	r0, [pc, r0]
   11fc4:	ldr	r1, [r0, r4, lsl #2]
   11fc8:	str	r1, [r0, r7, lsl #2]
   11fcc:	add	r7, r7, #1
   11fd0:	cmp	r7, r4
   11fd4:	bge	11ffc <getc@plt+0x14b0>
   11fd8:	ldr	r0, [pc, #104]	; 12048 <getc@plt+0x14fc>
   11fdc:	ldr	r0, [pc, r0]
   11fe0:	ldr	r1, [r0, r7, lsl #2]
   11fe4:	ldr	r2, [pc, #96]	; 1204c <getc@plt+0x1500>
   11fe8:	mov	r0, r6
   11fec:	ldr	r2, [pc, r2]
   11ff0:	blx	r2
   11ff4:	cmp	r0, #1
   11ff8:	bge	11fcc <getc@plt+0x1480>
   11ffc:	cmp	r7, r4
   12000:	bne	12010 <getc@plt+0x14c4>
   12004:	cmp	r7, r4
   12008:	blt	11f88 <getc@plt+0x143c>
   1200c:	b	1202c <getc@plt+0x14e0>
   12010:	ldr	r0, [pc, #56]	; 12050 <getc@plt+0x1504>
   12014:	ldr	r0, [pc, r0]
   12018:	ldr	r1, [r0, r7, lsl #2]
   1201c:	str	r1, [r0, r4, lsl #2]
   12020:	sub	r4, r4, #1
   12024:	cmp	r7, r4
   12028:	blt	11f88 <getc@plt+0x143c>
   1202c:	ldr	r0, [pc, #32]	; 12054 <getc@plt+0x1508>
   12030:	ldr	r0, [pc, r0]
   12034:	b	11f34 <getc@plt+0x13e8>
   12038:	ldrdeq	r3, [r1], -r4
   1203c:	andeq	r3, r1, r4, lsr #3
   12040:	muleq	r1, r8, r1
   12044:	andeq	r3, r1, r8, ror r1
   12048:	andeq	r3, r1, ip, asr r1
   1204c:	andeq	r3, r1, r0, asr r1
   12050:	andeq	r3, r1, r4, lsr #2
   12054:	andeq	r3, r1, r8, lsl #2
   12058:	push	{r4, r5, r6, sl, fp, lr}
   1205c:	add	fp, sp, #16
   12060:	mov	r4, r0
   12064:	movw	r6, #503	; 0x1f7
   12068:	mov	r5, r0
   1206c:	mov	r0, r5
   12070:	bl	133c4 <error@@Base+0x8b4>
   12074:	subs	r6, r6, #1
   12078:	add	r5, r5, #16
   1207c:	bne	1206c <getc@plt+0x1520>
   12080:	movw	r0, #8052	; 0x1f74
   12084:	mov	r1, #0
   12088:	str	r1, [r4, r0]
   1208c:	movw	r0, #8048	; 0x1f70
   12090:	str	r1, [r4, r0]
   12094:	pop	{r4, r5, r6, sl, fp, pc}
   12098:	push	{r4, r5, r6, sl, fp, lr}
   1209c:	add	fp, sp, #16
   120a0:	mov	r5, r1
   120a4:	ldrb	r1, [r1]
   120a8:	mov	r4, #0
   120ac:	mov	r2, #0
   120b0:	cmp	r1, #0
   120b4:	beq	120e8 <getc@plt+0x159c>
   120b8:	add	r3, r5, #1
   120bc:	mov	r2, #0
   120c0:	uxtab	r2, r2, r1
   120c4:	ldrb	r1, [r3], #1
   120c8:	cmp	r1, #0
   120cc:	bne	120c0 <getc@plt+0x1574>
   120d0:	movw	r1, #20065	; 0x4e61
   120d4:	movt	r1, #33354	; 0x824a
   120d8:	umull	r1, r3, r2, r1
   120dc:	lsr	r1, r3, #8
   120e0:	movw	r3, #503	; 0x1f7
   120e4:	mls	r2, r1, r3, r2
   120e8:	ldr	r6, [r0, r2, lsl #4]
   120ec:	cmp	r6, #0
   120f0:	bne	12108 <getc@plt+0x15bc>
   120f4:	mov	r0, r4
   120f8:	pop	{r4, r5, r6, sl, fp, pc}
   120fc:	ldr	r6, [r6, #4]
   12100:	cmp	r6, #0
   12104:	beq	120f4 <getc@plt+0x15a8>
   12108:	ldr	r1, [r6, #8]
   1210c:	mov	r0, r5
   12110:	bl	109f0 <strcmp@plt>
   12114:	cmp	r0, #0
   12118:	bne	120fc <getc@plt+0x15b0>
   1211c:	mov	r4, r6
   12120:	mov	r0, r4
   12124:	pop	{r4, r5, r6, sl, fp, pc}
   12128:	push	{r4, r5, fp, lr}
   1212c:	add	fp, sp, #8
   12130:	mov	r4, r0
   12134:	ldr	r0, [r1, #8]
   12138:	ldrb	r2, [r0]
   1213c:	cmp	r2, #0
   12140:	beq	12178 <getc@plt+0x162c>
   12144:	add	r3, r0, #1
   12148:	mov	r0, #0
   1214c:	uxtab	r0, r0, r2
   12150:	ldrb	r2, [r3], #1
   12154:	cmp	r2, #0
   12158:	bne	1214c <getc@plt+0x1600>
   1215c:	movw	r2, #20065	; 0x4e61
   12160:	movt	r2, #33354	; 0x824a
   12164:	umull	r2, r3, r0, r2
   12168:	lsr	r2, r3, #8
   1216c:	movw	r3, #503	; 0x1f7
   12170:	mls	r0, r2, r3, r0
   12174:	b	1217c <getc@plt+0x1630>
   12178:	mov	r0, #0
   1217c:	add	r0, r4, r0, lsl #4
   12180:	bl	133d0 <error@@Base+0x8c0>
   12184:	movw	r0, #8048	; 0x1f70
   12188:	mov	r5, r4
   1218c:	ldr	r0, [r5, r0]!
   12190:	cmp	r0, #0
   12194:	beq	121a4 <getc@plt+0x1658>
   12198:	bl	10a08 <free@plt>
   1219c:	mov	r0, #0
   121a0:	str	r0, [r5]
   121a4:	movw	r0, #8052	; 0x1f74
   121a8:	ldr	r0, [r4, r0]!
   121ac:	add	r0, r0, #1
   121b0:	str	r0, [r4]
   121b4:	pop	{r4, r5, fp, pc}
   121b8:	push	{r4, r5, fp, lr}
   121bc:	add	fp, sp, #8
   121c0:	mov	r4, r0
   121c4:	ldr	r0, [r1, #8]
   121c8:	ldrb	r2, [r0]
   121cc:	cmp	r2, #0
   121d0:	beq	12208 <getc@plt+0x16bc>
   121d4:	add	r3, r0, #1
   121d8:	mov	r0, #0
   121dc:	uxtab	r0, r0, r2
   121e0:	ldrb	r2, [r3], #1
   121e4:	cmp	r2, #0
   121e8:	bne	121dc <getc@plt+0x1690>
   121ec:	movw	r2, #20065	; 0x4e61
   121f0:	movt	r2, #33354	; 0x824a
   121f4:	umull	r2, r3, r0, r2
   121f8:	lsr	r2, r3, #8
   121fc:	movw	r3, #503	; 0x1f7
   12200:	mls	r0, r2, r3, r0
   12204:	b	1220c <getc@plt+0x16c0>
   12208:	mov	r0, #0
   1220c:	add	r0, r4, r0, lsl #4
   12210:	bl	13518 <error@@Base+0xa08>
   12214:	movw	r0, #8048	; 0x1f70
   12218:	mov	r5, r4
   1221c:	ldr	r0, [r5, r0]!
   12220:	cmp	r0, #0
   12224:	beq	12234 <getc@plt+0x16e8>
   12228:	bl	10a08 <free@plt>
   1222c:	mov	r0, #0
   12230:	str	r0, [r5]
   12234:	movw	r0, #8052	; 0x1f74
   12238:	ldr	r0, [r4, r0]!
   1223c:	sub	r0, r0, #1
   12240:	str	r0, [r4]
   12244:	pop	{r4, r5, fp, pc}
   12248:	push	{r4, r5, fp, lr}
   1224c:	add	fp, sp, #8
   12250:	mov	r4, r0
   12254:	movw	r0, #8048	; 0x1f70
   12258:	mov	r5, r4
   1225c:	ldr	r0, [r5, r0]!
   12260:	cmp	r0, #0
   12264:	bne	122c0 <getc@plt+0x1774>
   12268:	movw	r0, #8052	; 0x1f74
   1226c:	ldr	r0, [r4, r0]
   12270:	cmp	r0, #0
   12274:	popeq	{r4, r5, fp, pc}
   12278:	mov	r1, #4
   1227c:	bl	12650 <getc@plt+0x1b04>
   12280:	str	r0, [r5]
   12284:	mov	r0, #0
   12288:	movw	ip, #503	; 0x1f7
   1228c:	mov	r2, #0
   12290:	ldr	r3, [r4, r2, lsl #4]
   12294:	cmp	r3, #0
   12298:	beq	122b4 <getc@plt+0x1768>
   1229c:	ldr	r1, [r5]
   122a0:	str	r3, [r1, r0, lsl #2]
   122a4:	add	r0, r0, #1
   122a8:	ldr	r3, [r3, #4]
   122ac:	cmp	r3, #0
   122b0:	bne	1229c <getc@plt+0x1750>
   122b4:	add	r2, r2, #1
   122b8:	cmp	r2, ip
   122bc:	bne	12290 <getc@plt+0x1744>
   122c0:	pop	{r4, r5, fp, pc}
   122c4:	push	{r4, r5, r6, r7, fp, lr}
   122c8:	add	fp, sp, #16
   122cc:	mov	r5, r1
   122d0:	mov	r4, r0
   122d4:	movw	r7, #503	; 0x1f7
   122d8:	mov	r6, r0
   122dc:	mov	r0, r6
   122e0:	mov	r1, r5
   122e4:	bl	135e4 <error@@Base+0xad4>
   122e8:	subs	r7, r7, #1
   122ec:	add	r6, r6, #16
   122f0:	bne	122dc <getc@plt+0x1790>
   122f4:	movw	r0, #8048	; 0x1f70
   122f8:	mov	r5, r4
   122fc:	ldr	r0, [r5, r0]!
   12300:	cmp	r0, #0
   12304:	beq	12314 <getc@plt+0x17c8>
   12308:	bl	10a08 <free@plt>
   1230c:	mov	r0, #0
   12310:	str	r0, [r5]
   12314:	movw	r0, #8052	; 0x1f74
   12318:	mov	r1, #0
   1231c:	str	r1, [r4, r0]
   12320:	pop	{r4, r5, r6, r7, fp, pc}
   12324:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12328:	add	fp, sp, #28
   1232c:	push	{r0}		; (str r0, [sp, #-4]!)
   12330:	ldr	r0, [pc, #332]	; 12484 <getc@plt+0x1938>
   12334:	add	r0, pc, r0
   12338:	ldrh	r0, [r0]
   1233c:	cmp	r0, #0
   12340:	bne	12460 <getc@plt+0x1914>
   12344:	ldr	r3, [pc, #316]	; 12488 <getc@plt+0x193c>
   12348:	ldr	r6, [pc, #316]	; 1248c <getc@plt+0x1940>
   1234c:	mov	r4, #0
   12350:	mov	r7, #0
   12354:	mov	r8, #0
   12358:	add	r3, pc, r3
   1235c:	add	r6, pc, r6
   12360:	sxth	sl, r7
   12364:	cmp	sl, #1
   12368:	blt	123d8 <getc@plt+0x188c>
   1236c:	ldr	r1, [pc, #284]	; 12490 <getc@plt+0x1944>
   12370:	add	r0, r8, r8, lsl #1
   12374:	add	r0, r3, r0, lsl #2
   12378:	ldr	r5, [r0, #8]
   1237c:	ldr	r1, [pc, r1]
   12380:	mov	r0, r5
   12384:	bl	109f0 <strcmp@plt>
   12388:	cmp	r0, #0
   1238c:	mov	r0, r4
   12390:	mov	r9, #0
   12394:	beq	123e0 <getc@plt+0x1894>
   12398:	ldr	r7, [pc, #244]	; 12494 <getc@plt+0x1948>
   1239c:	sxth	sl, r4
   123a0:	mov	r1, #1
   123a4:	add	r7, pc, r7
   123a8:	mov	r9, r1
   123ac:	cmp	r1, sl
   123b0:	bge	123cc <getc@plt+0x1880>
   123b4:	ldr	r1, [r7, r9, lsl #2]
   123b8:	mov	r0, r5
   123bc:	bl	109f0 <strcmp@plt>
   123c0:	add	r1, r9, #1
   123c4:	cmp	r0, #0
   123c8:	bne	123a8 <getc@plt+0x185c>
   123cc:	mov	r0, r4
   123d0:	mov	r7, r4
   123d4:	b	123e0 <getc@plt+0x1894>
   123d8:	mov	r0, r7
   123dc:	mov	r9, #0
   123e0:	ldr	r3, [pc, #176]	; 12498 <getc@plt+0x194c>
   123e4:	cmp	r9, sl
   123e8:	add	r3, pc, r3
   123ec:	bne	12428 <getc@plt+0x18dc>
   123f0:	uxth	r0, r7
   123f4:	cmp	r0, #256	; 0x100
   123f8:	beq	12478 <getc@plt+0x192c>
   123fc:	ldr	r0, [pc, #152]	; 1249c <getc@plt+0x1950>
   12400:	add	r4, r7, #1
   12404:	add	r0, pc, r0
   12408:	strh	r4, [r0]
   1240c:	add	r0, r8, r8, lsl #1
   12410:	add	r0, r3, r0, lsl #2
   12414:	ldr	r1, [pc, #132]	; 124a0 <getc@plt+0x1954>
   12418:	ldr	r0, [r0, #8]
   1241c:	add	r1, pc, r1
   12420:	str	r0, [r1, r9, lsl #2]
   12424:	mov	r0, r4
   12428:	add	r1, r8, r8, lsl #1
   1242c:	mov	r2, r3
   12430:	ldr	r1, [r2, r1, lsl #2]!
   12434:	ldr	r2, [r2, #4]
   12438:	cmp	r1, r2
   1243c:	bhi	12450 <getc@plt+0x1904>
   12440:	strb	r9, [r6, r1]
   12444:	add	r1, r1, #1
   12448:	cmp	r1, r2
   1244c:	bls	12440 <getc@plt+0x18f4>
   12450:	add	r8, r8, #1
   12454:	mov	r7, r0
   12458:	cmp	r8, #91	; 0x5b
   1245c:	bcc	12360 <getc@plt+0x1814>
   12460:	ldr	r0, [pc, #60]	; 124a4 <getc@plt+0x1958>
   12464:	ldr	r1, [sp]
   12468:	add	r0, pc, r0
   1246c:	ldrb	r0, [r0, r1]
   12470:	sub	sp, fp, #28
   12474:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12478:	ldr	r0, [pc, #40]	; 124a8 <getc@plt+0x195c>
   1247c:	add	r0, pc, r0
   12480:	bl	12b10 <error@@Base>
   12484:	andeq	r2, r1, ip, lsl #28
   12488:	andeq	r2, r1, ip, asr r7
   1248c:	andeq	r2, r1, r6, ror #27
   12490:	andseq	r2, r2, r8, asr #27
   12494:	andseq	r2, r2, r0, lsr #27
   12498:	andeq	r2, r1, ip, asr #13
   1249c:	andeq	r2, r1, ip, lsr sp
   124a0:	andseq	r2, r2, r8, lsr #26
   124a4:	ldrdeq	r2, [r1], -sl
   124a8:	andeq	r1, r0, ip, ror #8
   124ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   124b0:	add	fp, sp, #28
   124b4:	push	{r0}		; (str r0, [sp, #-4]!)
   124b8:	ldr	r0, [pc, #356]	; 12624 <getc@plt+0x1ad8>
   124bc:	add	r0, pc, r0
   124c0:	ldrh	r6, [r0]
   124c4:	cmp	r6, #0
   124c8:	bne	125e8 <getc@plt+0x1a9c>
   124cc:	ldr	r3, [pc, #340]	; 12628 <getc@plt+0x1adc>
   124d0:	ldr	r4, [pc, #340]	; 1262c <getc@plt+0x1ae0>
   124d4:	mov	r6, #0
   124d8:	mov	r7, #0
   124dc:	mov	r8, #0
   124e0:	add	r3, pc, r3
   124e4:	add	r4, pc, r4
   124e8:	sxth	sl, r7
   124ec:	cmp	sl, #1
   124f0:	blt	12560 <getc@plt+0x1a14>
   124f4:	ldr	r1, [pc, #308]	; 12630 <getc@plt+0x1ae4>
   124f8:	add	r0, r8, r8, lsl #1
   124fc:	add	r0, r3, r0, lsl #2
   12500:	ldr	r5, [r0, #8]
   12504:	ldr	r1, [pc, r1]
   12508:	mov	r0, r5
   1250c:	bl	109f0 <strcmp@plt>
   12510:	cmp	r0, #0
   12514:	mov	r0, r6
   12518:	mov	r9, #0
   1251c:	beq	12568 <getc@plt+0x1a1c>
   12520:	ldr	r7, [pc, #268]	; 12634 <getc@plt+0x1ae8>
   12524:	sxth	sl, r6
   12528:	mov	r1, #1
   1252c:	add	r7, pc, r7
   12530:	mov	r9, r1
   12534:	cmp	r1, sl
   12538:	bge	12554 <getc@plt+0x1a08>
   1253c:	ldr	r1, [r7, r9, lsl #2]
   12540:	mov	r0, r5
   12544:	bl	109f0 <strcmp@plt>
   12548:	add	r1, r9, #1
   1254c:	cmp	r0, #0
   12550:	bne	12530 <getc@plt+0x19e4>
   12554:	mov	r0, r6
   12558:	mov	r7, r6
   1255c:	b	12568 <getc@plt+0x1a1c>
   12560:	mov	r0, r7
   12564:	mov	r9, #0
   12568:	ldr	r3, [pc, #200]	; 12638 <getc@plt+0x1aec>
   1256c:	cmp	r9, sl
   12570:	add	r3, pc, r3
   12574:	bne	125b0 <getc@plt+0x1a64>
   12578:	uxth	r0, r7
   1257c:	cmp	r0, #256	; 0x100
   12580:	beq	12618 <getc@plt+0x1acc>
   12584:	ldr	r0, [pc, #176]	; 1263c <getc@plt+0x1af0>
   12588:	add	r6, r7, #1
   1258c:	add	r0, pc, r0
   12590:	strh	r6, [r0]
   12594:	add	r0, r8, r8, lsl #1
   12598:	add	r0, r3, r0, lsl #2
   1259c:	ldr	r1, [pc, #156]	; 12640 <getc@plt+0x1af4>
   125a0:	ldr	r0, [r0, #8]
   125a4:	add	r1, pc, r1
   125a8:	str	r0, [r1, r9, lsl #2]
   125ac:	mov	r0, r6
   125b0:	add	r1, r8, r8, lsl #1
   125b4:	mov	r2, r3
   125b8:	ldr	r1, [r2, r1, lsl #2]!
   125bc:	ldr	r2, [r2, #4]
   125c0:	cmp	r1, r2
   125c4:	bhi	125d8 <getc@plt+0x1a8c>
   125c8:	strb	r9, [r4, r1]
   125cc:	add	r1, r1, #1
   125d0:	cmp	r1, r2
   125d4:	bls	125c8 <getc@plt+0x1a7c>
   125d8:	add	r8, r8, #1
   125dc:	mov	r7, r0
   125e0:	cmp	r8, #91	; 0x5b
   125e4:	bcc	124e8 <getc@plt+0x199c>
   125e8:	ldr	r0, [sp]
   125ec:	sxth	r1, r6
   125f0:	uxtb	r0, r0
   125f4:	cmp	r0, r1
   125f8:	ldrlt	r1, [pc, #68]	; 12644 <getc@plt+0x1af8>
   125fc:	addlt	r1, pc, r1
   12600:	ldrlt	r0, [r1, r0, lsl #2]
   12604:	sublt	sp, fp, #28
   12608:	poplt	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1260c:	ldr	r0, [pc, #56]	; 1264c <getc@plt+0x1b00>
   12610:	add	r0, pc, r0
   12614:	bl	12b10 <error@@Base>
   12618:	ldr	r0, [pc, #40]	; 12648 <getc@plt+0x1afc>
   1261c:	add	r0, pc, r0
   12620:	bl	12b10 <error@@Base>
   12624:	andeq	r2, r1, r4, lsl #25
   12628:	ldrdeq	r2, [r1], -r4
   1262c:	andeq	r2, r1, lr, asr ip
   12630:	andseq	r2, r2, r0, asr #24
   12634:	andseq	r2, r2, r8, lsl ip
   12638:	andeq	r2, r1, r4, asr #10
   1263c:			; <UNDEFINED> instruction: 0x00012bb4
   12640:	andseq	r2, r2, r0, lsr #23
   12644:	andseq	r2, r2, r8, asr #22
   12648:	andeq	r1, r0, ip, asr #5
   1264c:	andeq	r1, r0, r0, asr #5
   12650:	push	{fp, lr}
   12654:	mov	fp, sp
   12658:	bl	109e4 <calloc@plt>
   1265c:	cmp	r0, #0
   12660:	popne	{fp, pc}
   12664:	ldr	r0, [pc, #4]	; 12670 <getc@plt+0x1b24>
   12668:	add	r0, pc, r0
   1266c:	bl	12b10 <error@@Base>
   12670:	andeq	r1, r0, lr, asr #16
   12674:	push	{r4, r5, r6, sl, fp, lr}
   12678:	add	fp, sp, #16
   1267c:	ldrb	r3, [r0]
   12680:	ldrb	ip, [r1]
   12684:	mov	r2, r0
   12688:	mov	r0, #0
   1268c:	cmp	r3, #0
   12690:	beq	126c8 <getc@plt+0x1b7c>
   12694:	add	r6, r2, #1
   12698:	add	lr, r1, #1
   1269c:	mov	r2, #0
   126a0:	uxtb	r4, ip
   126a4:	uxtb	r5, r3
   126a8:	cmp	r5, r4
   126ac:	bne	126d8 <getc@plt+0x1b8c>
   126b0:	ldrb	r3, [r6, r2]
   126b4:	ldrb	ip, [lr, r2]
   126b8:	add	r2, r2, #1
   126bc:	cmp	r3, #0
   126c0:	bne	126a0 <getc@plt+0x1b54>
   126c4:	b	126cc <getc@plt+0x1b80>
   126c8:	mov	r2, #0
   126cc:	cmp	ip, #0
   126d0:	popeq	{r4, r5, r6, sl, fp, pc}
   126d4:	mov	r3, #0
   126d8:	ldrb	r1, [r1, r2]
   126dc:	uxtb	r2, r3
   126e0:	mov	r0, #1
   126e4:	cmp	r2, r1
   126e8:	mvncc	r0, #0
   126ec:	pop	{r4, r5, r6, sl, fp, pc}
   126f0:	push	{r4, r5, fp, lr}
   126f4:	add	fp, sp, #8
   126f8:	mov	r5, r1
   126fc:	cmp	r0, #0
   12700:	beq	12734 <getc@plt+0x1be8>
   12704:	mov	r1, r5
   12708:	mov	r4, r0
   1270c:	bl	109fc <fopen@plt>
   12710:	cmp	r0, #0
   12714:	popne	{r4, r5, fp, pc}
   12718:	ldrb	r0, [r5]
   1271c:	cmp	r0, #119	; 0x77
   12720:	bne	12758 <getc@plt+0x1c0c>
   12724:	ldr	r0, [pc, #72]	; 12774 <getc@plt+0x1c28>
   12728:	mov	r1, r4
   1272c:	add	r0, pc, r0
   12730:	bl	12b60 <error@@Base+0x50>
   12734:	ldrb	r0, [r5]
   12738:	ldr	r1, [pc, #40]	; 12768 <getc@plt+0x1c1c>
   1273c:	ldr	r1, [pc, r1]
   12740:	ldr	r2, [pc, #36]	; 1276c <getc@plt+0x1c20>
   12744:	cmp	r0, #114	; 0x72
   12748:	ldr	r2, [pc, r2]
   1274c:	moveq	r2, r1
   12750:	ldr	r0, [r2]
   12754:	pop	{r4, r5, fp, pc}
   12758:	ldr	r0, [pc, #16]	; 12770 <getc@plt+0x1c24>
   1275c:	mov	r1, r4
   12760:	add	r0, pc, r0
   12764:	bl	12b60 <error@@Base+0x50>
   12768:	andeq	r2, r1, ip, ror #18
   1276c:	andeq	r2, r1, r4, ror #18
   12770:	andeq	r1, r0, r6, lsl #15
   12774:	andeq	r1, r0, r4, lsr #15
   12778:	ldr	r1, [pc, #32]	; 127a0 <getc@plt+0x1c54>
   1277c:	ldr	r1, [pc, r1]
   12780:	ldr	r1, [r1]
   12784:	cmp	r1, r0
   12788:	ldrne	r1, [pc, #20]	; 127a4 <getc@plt+0x1c58>
   1278c:	ldrne	r1, [pc, r1]
   12790:	ldrne	r1, [r1]
   12794:	cmpne	r1, r0
   12798:	bxeq	lr
   1279c:	b	10b04 <fclose@plt>
   127a0:	andeq	r2, r1, ip, lsr #18
   127a4:	andeq	r2, r1, r0, lsr #18
   127a8:	push	{fp, lr}
   127ac:	mov	fp, sp
   127b0:	sub	sp, sp, #88	; 0x58
   127b4:	mov	r1, r0
   127b8:	mov	r2, sp
   127bc:	mov	r0, #3
   127c0:	bl	10a68 <__xstat@plt>
   127c4:	clz	r0, r0
   127c8:	lsr	r0, r0, #5
   127cc:	mov	sp, fp
   127d0:	pop	{fp, pc}
   127d4:	push	{r4, r5, fp, lr}
   127d8:	add	fp, sp, #8
   127dc:	sub	sp, sp, #104	; 0x68
   127e0:	ldr	r0, [pc, #92]	; 12844 <getc@plt+0x1cf8>
   127e4:	add	r0, pc, r0
   127e8:	ldrh	r1, [r0]
   127ec:	add	r5, r1, #1
   127f0:	strh	r5, [r0]
   127f4:	ldr	r0, [pc, #76]	; 12848 <getc@plt+0x1cfc>
   127f8:	ldr	r0, [pc, r0]
   127fc:	ldr	r4, [r0]
   12800:	bl	10abc <getpid@plt>
   12804:	mov	r3, r0
   12808:	sxth	r0, r5
   1280c:	add	r5, sp, #4
   12810:	mov	r2, r4
   12814:	str	r0, [sp]
   12818:	mov	r0, r5
   1281c:	ldr	r1, [pc, #40]	; 1284c <getc@plt+0x1d00>
   12820:	add	r1, pc, r1
   12824:	bl	10b10 <sprintf@plt>
   12828:	mov	r0, r5
   1282c:	bl	10a38 <strdup@plt>
   12830:	mov	r4, r0
   12834:	bl	10a50 <unlink@plt>
   12838:	mov	r0, r4
   1283c:	sub	sp, fp, #8
   12840:	pop	{r4, r5, fp, pc}
   12844:	andseq	r2, r2, r0, ror #26
   12848:	andeq	r2, r1, r4, lsr #17
   1284c:	andeq	r1, r0, pc, ror #13
   12850:	push	{r4, sl, fp, lr}
   12854:	add	fp, sp, #8
   12858:	mov	r4, r0
   1285c:	bl	10ae0 <strlen@plt>
   12860:	sub	r0, r0, #1
   12864:	sxth	r0, r0
   12868:	cmp	r0, #0
   1286c:	blt	1287c <getc@plt+0x1d30>
   12870:	ldrb	r1, [r4, r0]
   12874:	cmp	r1, #47	; 0x2f
   12878:	bne	12860 <getc@plt+0x1d14>
   1287c:	add	r0, r4, r0
   12880:	add	r0, r0, #1
   12884:	pop	{r4, sl, fp, pc}
   12888:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1288c:	add	fp, sp, #28
   12890:	sub	sp, sp, #12
   12894:	str	r2, [sp]
   12898:	stmib	sp, {r0, r1}
   1289c:	mov	r6, r3
   128a0:	ldr	r4, [r1]
   128a4:	mov	r0, r4
   128a8:	bl	10ae0 <strlen@plt>
   128ac:	sub	r0, r0, #1
   128b0:	sxth	r0, r0
   128b4:	cmp	r0, #0
   128b8:	blt	128c8 <getc@plt+0x1d7c>
   128bc:	ldrb	r1, [r4, r0]
   128c0:	cmp	r1, #47	; 0x2f
   128c4:	bne	128ac <getc@plt+0x1d60>
   128c8:	ldr	r1, [pc, #484]	; 12ab4 <getc@plt+0x1f68>
   128cc:	add	r0, r4, r0
   128d0:	add	r0, r0, #1
   128d4:	ldr	r1, [pc, r1]
   128d8:	str	r0, [r1]
   128dc:	mov	r0, #2
   128e0:	ldr	r4, [pc, #464]	; 12ab8 <getc@plt+0x1f6c>
   128e4:	add	r4, pc, r4
   128e8:	mov	r1, r4
   128ec:	bl	10aa4 <__sysv_signal@plt>
   128f0:	mov	r0, #15
   128f4:	mov	r1, r4
   128f8:	bl	10aa4 <__sysv_signal@plt>
   128fc:	ldr	r0, [sp, #4]
   12900:	ldr	r5, [r0]
   12904:	cmp	r5, #1
   12908:	bne	12920 <getc@plt+0x1dd4>
   1290c:	ldr	r0, [pc, #424]	; 12abc <getc@plt+0x1f70>
   12910:	ldr	r0, [pc, r0]
   12914:	ldrb	r0, [r0]
   12918:	cmp	r0, #0
   1291c:	bne	12a9c <getc@plt+0x1f50>
   12920:	ldr	ip, [sp, #8]
   12924:	mov	r8, #0
   12928:	cmp	r5, #2
   1292c:	blt	12a78 <getc@plt+0x1f2c>
   12930:	mov	r8, #0
   12934:	mov	r7, #1
   12938:	mov	r9, #1
   1293c:	ldr	r4, [ip, r7, lsl #2]
   12940:	ldrb	r0, [r4]
   12944:	cmp	r0, #45	; 0x2d
   12948:	bne	12a20 <getc@plt+0x1ed4>
   1294c:	ldrb	sl, [r4, #1]
   12950:	cmp	sl, #0
   12954:	beq	12a20 <getc@plt+0x1ed4>
   12958:	mov	r0, r4
   1295c:	bl	10ae0 <strlen@plt>
   12960:	mov	r2, r0
   12964:	ldr	r0, [pc, #340]	; 12ac0 <getc@plt+0x1f74>
   12968:	mov	r1, r4
   1296c:	add	r0, pc, r0
   12970:	bl	10b34 <strncmp@plt>
   12974:	cmp	r0, #0
   12978:	beq	12a9c <getc@plt+0x1f50>
   1297c:	ldr	ip, [sp, #8]
   12980:	add	r1, r7, #1
   12984:	mov	r0, #0
   12988:	cmp	r1, r5
   1298c:	ldrlt	r0, [ip, r1, lsl #2]
   12990:	cmp	r6, #0
   12994:	ldrbne	r2, [r6]
   12998:	cmpne	r2, #0
   1299c:	beq	12a8c <getc@plt+0x1f40>
   129a0:	mov	r1, #0
   129a4:	cmp	sl, r2
   129a8:	beq	129d0 <getc@plt+0x1e84>
   129ac:	mov	r2, #1
   129b0:	sxth	r1, r2
   129b4:	add	r3, r1, r1, lsl #1
   129b8:	ldrb	r3, [r6, r3, lsl #2]
   129bc:	cmp	r3, #0
   129c0:	beq	12a8c <getc@plt+0x1f40>
   129c4:	add	r2, r2, #1
   129c8:	cmp	sl, r3
   129cc:	bne	129b0 <getc@plt+0x1e64>
   129d0:	add	r1, r1, r1, lsl #1
   129d4:	add	r3, r6, r1, lsl #2
   129d8:	ldr	r1, [r3, #4]
   129dc:	cmp	r1, #0
   129e0:	beq	12a40 <getc@plt+0x1ef4>
   129e4:	mov	r2, r4
   129e8:	cmp	r0, #0
   129ec:	ldrb	r7, [r2, #2]!
   129f0:	cmpeq	r7, #0
   129f4:	beq	12a40 <getc@plt+0x1ef4>
   129f8:	ldr	r3, [r1]
   129fc:	cmp	r3, #0
   12a00:	bne	12aa4 <getc@plt+0x1f58>
   12a04:	cmp	r7, #0
   12a08:	movne	r0, r2
   12a0c:	str	r0, [r1]
   12a10:	ldrb	r0, [r2]
   12a14:	cmp	r0, #0
   12a18:	addeq	r9, r9, #1
   12a1c:	b	12a2c <getc@plt+0x1ee0>
   12a20:	sxth	r0, r8
   12a24:	add	r8, r8, #1
   12a28:	str	r4, [ip, r0, lsl #2]
   12a2c:	add	r9, r9, #1
   12a30:	sxth	r7, r9
   12a34:	cmp	r5, r7
   12a38:	bgt	1293c <getc@plt+0x1df0>
   12a3c:	b	12a78 <getc@plt+0x1f2c>
   12a40:	ldr	r0, [r3, #8]
   12a44:	cmp	r0, #0
   12a48:	beq	12a8c <getc@plt+0x1f40>
   12a4c:	ldrb	r1, [r4, #2]
   12a50:	cmp	r1, #0
   12a54:	bne	12a8c <getc@plt+0x1f40>
   12a58:	ldrb	r1, [r0]
   12a5c:	cmp	r1, #0
   12a60:	bne	12aa4 <getc@plt+0x1f58>
   12a64:	mov	r1, #1
   12a68:	strb	r1, [r0]
   12a6c:	ldr	r0, [sp, #4]
   12a70:	ldr	r5, [r0]
   12a74:	b	12a2c <getc@plt+0x1ee0>
   12a78:	ldr	r1, [sp, #4]
   12a7c:	sxth	r0, r8
   12a80:	str	r0, [r1]
   12a84:	sub	sp, fp, #28
   12a88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12a8c:	ldr	r0, [pc, #52]	; 12ac8 <getc@plt+0x1f7c>
   12a90:	mov	r1, r4
   12a94:	add	r0, pc, r0
   12a98:	bl	12b60 <error@@Base+0x50>
   12a9c:	ldr	r0, [sp]
   12aa0:	bl	12c3c <error@@Base+0x12c>
   12aa4:	ldr	r0, [pc, #24]	; 12ac4 <getc@plt+0x1f78>
   12aa8:	mov	r1, r4
   12aac:	add	r0, pc, r0
   12ab0:	bl	12b60 <error@@Base+0x50>
   12ab4:	andeq	r2, r1, r8, asr #15
   12ab8:	andeq	r0, r0, r8, lsl r3
   12abc:	andeq	r2, r1, r4, ror r7
   12ac0:	andeq	r1, r0, r0, asr #11
   12ac4:	andeq	r1, r0, r4, lsr #9
   12ac8:	andeq	r1, r0, sp, lsr #9
   12acc:	push	{fp, lr}
   12ad0:	mov	fp, sp
   12ad4:	mov	r0, #0
   12ad8:	bl	12adc <getc@plt+0x1f90>
   12adc:	push	{fp, lr}
   12ae0:	mov	fp, sp
   12ae4:	mov	r4, r0
   12ae8:	ldr	r0, [pc, #28]	; 12b0c <getc@plt+0x1fc0>
   12aec:	ldr	r0, [pc, r0]
   12af0:	ldr	r0, [r0]
   12af4:	cmp	r0, #0
   12af8:	beq	12b00 <getc@plt+0x1fb4>
   12afc:	blx	r0
   12b00:	bl	12c9c <error@@Base+0x18c>
   12b04:	mov	r0, r4
   12b08:	bl	10ac8 <exit@plt>
   12b0c:			; <UNDEFINED> instruction: 0x000125b4

00012b10 <error@@Base>:
   12b10:	push	{fp, lr}
   12b14:	mov	fp, sp
   12b18:	mov	r3, r0
   12b1c:	ldr	r0, [pc, #44]	; 12b50 <error@@Base+0x40>
   12b20:	ldr	r0, [pc, r0]
   12b24:	ldr	r2, [r0]
   12b28:	ldr	r0, [pc, #36]	; 12b54 <error@@Base+0x44>
   12b2c:	ldr	r0, [pc, r0]
   12b30:	ldr	r0, [r0]
   12b34:	ldr	r1, [pc, #28]	; 12b58 <error@@Base+0x48>
   12b38:	add	r1, pc, r1
   12b3c:	bl	10aec <fprintf@plt>
   12b40:	ldr	r0, [pc, #20]	; 12b5c <error@@Base+0x4c>
   12b44:	ldr	r0, [pc, r0]
   12b48:	ldr	r0, [r0]
   12b4c:	bl	12adc <getc@plt+0x1f90>
   12b50:	andeq	r2, r1, ip, ror r5
   12b54:	andeq	r2, r1, r8, ror #10
   12b58:	andeq	r1, r0, r2, asr #7
   12b5c:	andeq	r2, r1, ip, ror #10
   12b60:	push	{fp, lr}
   12b64:	mov	fp, sp
   12b68:	sub	sp, sp, #8
   12b6c:	mov	r3, r0
   12b70:	ldr	r0, [pc, #48]	; 12ba8 <error@@Base+0x98>
   12b74:	ldr	r0, [pc, r0]
   12b78:	ldr	r2, [r0]
   12b7c:	ldr	r0, [pc, #40]	; 12bac <error@@Base+0x9c>
   12b80:	ldr	r0, [pc, r0]
   12b84:	str	r1, [sp]
   12b88:	ldr	r0, [r0]
   12b8c:	ldr	r1, [pc, #28]	; 12bb0 <error@@Base+0xa0>
   12b90:	add	r1, pc, r1
   12b94:	bl	10aec <fprintf@plt>
   12b98:	ldr	r0, [pc, #20]	; 12bb4 <error@@Base+0xa4>
   12b9c:	ldr	r0, [pc, r0]
   12ba0:	ldr	r0, [r0]
   12ba4:	bl	12adc <getc@plt+0x1f90>
   12ba8:	andeq	r2, r1, r8, lsr #10
   12bac:	andeq	r2, r1, r4, lsl r5
   12bb0:	andeq	r1, r0, r2, ror r3
   12bb4:	andeq	r2, r1, r4, lsl r5
   12bb8:	push	{fp, lr}
   12bbc:	mov	fp, sp
   12bc0:	sub	sp, sp, #8
   12bc4:	mov	r3, r0
   12bc8:	ldr	r0, [pc, #40]	; 12bf8 <error@@Base+0xe8>
   12bcc:	ldr	r0, [pc, r0]
   12bd0:	ldr	r2, [r0]
   12bd4:	ldr	r0, [pc, #32]	; 12bfc <error@@Base+0xec>
   12bd8:	ldr	r0, [pc, r0]
   12bdc:	str	r1, [sp]
   12be0:	ldr	r0, [r0]
   12be4:	ldr	r1, [pc, #20]	; 12c00 <error@@Base+0xf0>
   12be8:	add	r1, pc, r1
   12bec:	bl	10aec <fprintf@plt>
   12bf0:	mov	sp, fp
   12bf4:	pop	{fp, pc}
   12bf8:	ldrdeq	r2, [r1], -r0
   12bfc:			; <UNDEFINED> instruction: 0x000124bc
   12c00:	andeq	r1, r0, sl, lsl r3
   12c04:	ldr	r0, [pc, #40]	; 12c34 <error@@Base+0x124>
   12c08:	add	r0, pc, r0
   12c0c:	ldrb	r1, [r0]
   12c10:	cmp	r1, #1
   12c14:	bxeq	lr
   12c18:	push	{fp, lr}
   12c1c:	mov	fp, sp
   12c20:	mov	r1, #1
   12c24:	strb	r1, [r0]
   12c28:	ldr	r0, [pc, #8]	; 12c38 <error@@Base+0x128>
   12c2c:	add	r0, pc, r0
   12c30:	bl	12b10 <error@@Base>
   12c34:	andseq	r2, r2, lr, lsr r9
   12c38:	strdeq	r1, [r0], -r1	; <UNPREDICTABLE>
   12c3c:	push	{fp, lr}
   12c40:	mov	fp, sp
   12c44:	mov	r3, r0
   12c48:	ldr	r0, [pc, #60]	; 12c8c <error@@Base+0x17c>
   12c4c:	ldr	r0, [pc, r0]
   12c50:	ldr	r0, [r0]
   12c54:	cmp	r0, #0
   12c58:	bne	12c84 <error@@Base+0x174>
   12c5c:	ldr	r0, [pc, #44]	; 12c90 <error@@Base+0x180>
   12c60:	ldr	r0, [pc, r0]
   12c64:	ldr	r2, [r0]
   12c68:	ldr	r0, [pc, #36]	; 12c94 <error@@Base+0x184>
   12c6c:	ldr	r0, [pc, r0]
   12c70:	ldr	r0, [r0]
   12c74:	ldr	r1, [pc, #28]	; 12c98 <error@@Base+0x188>
   12c78:	add	r1, pc, r1
   12c7c:	bl	10aec <fprintf@plt>
   12c80:	bl	12acc <getc@plt+0x1f80>
   12c84:	blx	r0
   12c88:	bl	12acc <getc@plt+0x1f80>
   12c8c:	andeq	r2, r1, r0, asr #8
   12c90:	andeq	r2, r1, ip, lsr r4
   12c94:	andeq	r2, r1, r8, lsr #8
   12c98:			; <UNDEFINED> instruction: 0x000012ba
   12c9c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12ca0:	add	fp, sp, #24
   12ca4:	sub	sp, sp, #104	; 0x68
   12ca8:	ldr	r8, [pc, #124]	; 12d2c <error@@Base+0x21c>
   12cac:	add	r8, pc, r8
   12cb0:	ldrsh	r0, [r8]
   12cb4:	cmp	r0, #1
   12cb8:	blt	12d24 <error@@Base+0x214>
   12cbc:	ldr	r9, [pc, #108]	; 12d30 <error@@Base+0x220>
   12cc0:	mov	r7, #1
   12cc4:	add	r4, sp, #4
   12cc8:	ldr	r9, [pc, r9]
   12ccc:	ldr	r5, [pc, #96]	; 12d34 <error@@Base+0x224>
   12cd0:	add	r5, pc, r5
   12cd4:	ldr	r6, [r9]
   12cd8:	bl	10abc <getpid@plt>
   12cdc:	mov	r3, r0
   12ce0:	sxth	r0, r7
   12ce4:	mov	r1, r5
   12ce8:	mov	r2, r6
   12cec:	str	r0, [sp]
   12cf0:	mov	r0, r4
   12cf4:	bl	10b10 <sprintf@plt>
   12cf8:	mov	r0, r4
   12cfc:	bl	10a38 <strdup@plt>
   12d00:	mov	r6, r0
   12d04:	bl	10a50 <unlink@plt>
   12d08:	mov	r0, r6
   12d0c:	bl	10a08 <free@plt>
   12d10:	add	r0, r7, #1
   12d14:	sxth	r7, r0
   12d18:	ldrsh	r0, [r8]
   12d1c:	cmp	r7, r0
   12d20:	ble	12cd4 <error@@Base+0x1c4>
   12d24:	sub	sp, fp, #24
   12d28:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12d2c:	mulseq	r2, r8, r8
   12d30:	ldrdeq	r2, [r1], -r4
   12d34:	andeq	r1, r0, pc, lsr r2
   12d38:	push	{r4, r5, r6, sl, fp, lr}
   12d3c:	add	fp, sp, #16
   12d40:	mov	r5, r1
   12d44:	mov	r6, r0
   12d48:	mov	r0, #1
   12d4c:	mov	r1, #16
   12d50:	mov	r4, r2
   12d54:	bl	12650 <getc@plt+0x1b04>
   12d58:	strb	r5, [r0, #8]
   12d5c:	mov	r1, r0
   12d60:	str	r4, [r0, #12]
   12d64:	mov	r0, r6
   12d68:	pop	{r4, r5, r6, sl, fp, lr}
   12d6c:	b	13420 <error@@Base+0x910>
   12d70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12d74:	add	fp, sp, #28
   12d78:	sub	sp, sp, #124	; 0x7c
   12d7c:	mov	r4, r2
   12d80:	mov	r2, r1
   12d84:	cmp	r1, #0
   12d88:	str	r0, [sp, #16]
   12d8c:	bne	12d9c <error@@Base+0x28c>
   12d90:	ldrb	r0, [r4]
   12d94:	cmp	r0, #0
   12d98:	bne	130c8 <error@@Base+0x5b8>
   12d9c:	ldr	r0, [sp, #16]
   12da0:	ldr	r0, [r0, #4]
   12da4:	str	r0, [sp, #4]
   12da8:	mov	r0, r2
   12dac:	ldr	r1, [pc, #808]	; 130dc <error@@Base+0x5cc>
   12db0:	add	r1, pc, r1
   12db4:	bl	126f0 <getc@plt+0x1ba4>
   12db8:	mov	r6, r0
   12dbc:	ldrb	r0, [r4]
   12dc0:	cmp	r0, #0
   12dc4:	beq	12e0c <error@@Base+0x2fc>
   12dc8:	add	r0, sp, #20
   12dcc:	mov	r1, #99	; 0x63
   12dd0:	mov	r2, r6
   12dd4:	bl	10a20 <fgets@plt>
   12dd8:	cmp	r0, #0
   12ddc:	beq	12dfc <error@@Base+0x2ec>
   12de0:	ldr	r1, [pc, #760]	; 130e0 <error@@Base+0x5d0>
   12de4:	add	r0, sp, #20
   12de8:	mov	r2, #51	; 0x33
   12dec:	add	r1, pc, r1
   12df0:	bl	10b34 <strncmp@plt>
   12df4:	cmp	r0, #0
   12df8:	beq	13058 <error@@Base+0x548>
   12dfc:	mov	r0, r6
   12e00:	bl	10a44 <rewind@plt>
   12e04:	mov	r5, #0
   12e08:	strb	r5, [r4, #11]
   12e0c:	ldr	r9, [r4, #4]
   12e10:	ldrb	r8, [r4, #1]
   12e14:	mov	r0, r6
   12e18:	str	r4, [sp, #8]
   12e1c:	cmp	r9, #0
   12e20:	movweq	r9, #94	; 0x5e
   12e24:	bl	10b4c <getc@plt>
   12e28:	cmn	r0, #1
   12e2c:	beq	12ef0 <error@@Base+0x3e0>
   12e30:	add	r1, sp, #20
   12e34:	mov	sl, #0
   12e38:	sub	r4, fp, #32
   12e3c:	add	r1, r1, #1
   12e40:	str	r1, [sp, #12]
   12e44:	ldr	r1, [pc, #668]	; 130e8 <error@@Base+0x5d8>
   12e48:	ldr	r1, [pc, r1]
   12e4c:	add	r1, r1, r0
   12e50:	ldrsb	r5, [r1]
   12e54:	cmp	r5, #0
   12e58:	ble	130a8 <error@@Base+0x598>
   12e5c:	cmp	r5, #1
   12e60:	strb	r0, [sp, #20]
   12e64:	beq	12e88 <error@@Base+0x378>
   12e68:	ldr	r0, [sp, #12]
   12e6c:	sub	r7, r5, #1
   12e70:	mov	r1, #1
   12e74:	mov	r3, r6
   12e78:	mov	r2, r7
   12e7c:	bl	10a80 <fread@plt>
   12e80:	cmp	r0, r7
   12e84:	bne	130bc <error@@Base+0x5ac>
   12e88:	add	r0, sp, #20
   12e8c:	mov	r1, #4
   12e90:	mov	r2, r4
   12e94:	bl	10a8c <utf8proc_iterate@plt>
   12e98:	cmp	r0, r5
   12e9c:	bne	130b4 <error@@Base+0x5a4>
   12ea0:	ldr	r5, [fp, #-32]	; 0xffffffe0
   12ea4:	cmp	r8, #0
   12ea8:	beq	12eb8 <error@@Base+0x3a8>
   12eac:	mov	r7, #1
   12eb0:	cmp	r5, r9
   12eb4:	beq	12edc <error@@Base+0x3cc>
   12eb8:	mov	r0, #1
   12ebc:	mov	r1, #16
   12ec0:	bl	12650 <getc@plt+0x1b04>
   12ec4:	strb	sl, [r0, #8]
   12ec8:	mov	r1, r0
   12ecc:	str	r5, [r0, #12]
   12ed0:	ldr	r0, [sp, #16]
   12ed4:	bl	13420 <error@@Base+0x910>
   12ed8:	mov	r7, #0
   12edc:	mov	r0, r6
   12ee0:	bl	10b4c <getc@plt>
   12ee4:	cmn	r0, #1
   12ee8:	mov	sl, r7
   12eec:	bne	12e44 <error@@Base+0x334>
   12ef0:	mov	r0, r6
   12ef4:	bl	12778 <getc@plt+0x1c2c>
   12ef8:	ldr	r8, [sp, #8]
   12efc:	ldr	r9, [sp, #4]
   12f00:	ldrb	r0, [r8, #9]
   12f04:	cmp	r0, #0
   12f08:	beq	13014 <error@@Base+0x504>
   12f0c:	ldr	r0, [sp, #16]
   12f10:	cmp	r9, #0
   12f14:	addne	r0, r9, #4
   12f18:	ldr	r6, [r0]
   12f1c:	cmp	r6, #0
   12f20:	beq	13014 <error@@Base+0x504>
   12f24:	mov	r5, #32
   12f28:	mov	r7, r6
   12f2c:	ldr	r4, [r7, #12]
   12f30:	mov	r0, r4
   12f34:	bl	10a14 <utf8proc_get_property@plt>
   12f38:	cmp	r4, #10
   12f3c:	ble	12f58 <error@@Base+0x448>
   12f40:	sub	r1, r4, #11
   12f44:	cmp	r1, #3
   12f48:	bcc	12f7c <error@@Base+0x46c>
   12f4c:	cmp	r4, #160	; 0xa0
   12f50:	beq	12f7c <error@@Base+0x46c>
   12f54:	b	12f68 <error@@Base+0x458>
   12f58:	cmp	r4, #9
   12f5c:	beq	12f7c <error@@Base+0x46c>
   12f60:	cmp	r4, #10
   12f64:	beq	12f80 <error@@Base+0x470>
   12f68:	ldrsh	r0, [r0]
   12f6c:	sub	r0, r0, #23
   12f70:	cmp	r0, #2
   12f74:	strls	r5, [r7, #12]
   12f78:	b	12f80 <error@@Base+0x470>
   12f7c:	str	r5, [r7, #12]
   12f80:	ldr	r7, [r7, #4]
   12f84:	cmp	r7, #0
   12f88:	bne	12f2c <error@@Base+0x41c>
   12f8c:	mov	r4, #0
   12f90:	ldr	r1, [r6, #12]
   12f94:	ldr	r5, [r6, #4]
   12f98:	cmp	r1, #32
   12f9c:	bne	12fd8 <error@@Base+0x4c8>
   12fa0:	tst	r4, #255	; 0xff
   12fa4:	beq	12ff4 <error@@Base+0x4e4>
   12fa8:	cmp	r5, #0
   12fac:	ldrne	r1, [r5, #12]
   12fb0:	cmpne	r1, #10
   12fb4:	beq	12ff4 <error@@Base+0x4e4>
   12fb8:	mov	r0, #1
   12fbc:	cmp	r1, #32
   12fc0:	bne	12fec <error@@Base+0x4dc>
   12fc4:	ldrb	r0, [r6, #8]
   12fc8:	ldrb	r1, [r5, #8]
   12fcc:	orr	r0, r1, r0
   12fd0:	strb	r0, [r5, #8]
   12fd4:	b	12ff4 <error@@Base+0x4e4>
   12fd8:	subs	r0, r1, #10
   12fdc:	movwne	r0, #1
   12fe0:	tst	r4, #255	; 0xff
   12fe4:	cmpeq	r1, #10
   12fe8:	beq	12ff4 <error@@Base+0x4e4>
   12fec:	mov	r4, r0
   12ff0:	b	13008 <error@@Base+0x4f8>
   12ff4:	ldr	r0, [sp, #16]
   12ff8:	mov	r1, r6
   12ffc:	bl	13518 <error@@Base+0xa08>
   13000:	mov	r0, r6
   13004:	bl	10a08 <free@plt>
   13008:	cmp	r5, #0
   1300c:	mov	r6, r5
   13010:	bne	12f90 <error@@Base+0x480>
   13014:	ldrb	r0, [r8, #10]
   13018:	cmp	r0, #0
   1301c:	beq	13050 <error@@Base+0x540>
   13020:	ldr	r0, [sp, #16]
   13024:	cmp	r9, #0
   13028:	addne	r0, r9, #4
   1302c:	ldr	r4, [r0]
   13030:	cmp	r4, #0
   13034:	beq	13050 <error@@Base+0x540>
   13038:	ldr	r0, [r4, #12]
   1303c:	bl	10a5c <utf8proc_tolower@plt>
   13040:	str	r0, [r4, #12]
   13044:	ldr	r4, [r4, #4]
   13048:	cmp	r4, #0
   1304c:	bne	13038 <error@@Base+0x528>
   13050:	sub	sp, fp, #28
   13054:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13058:	ldr	r8, [pc, #132]	; 130e4 <error@@Base+0x5d4>
   1305c:	mov	r7, #0
   13060:	add	r9, sp, #20
   13064:	mov	r5, #1
   13068:	add	r8, pc, r8
   1306c:	mov	r0, r9
   13070:	mov	r1, #99	; 0x63
   13074:	mov	r2, r6
   13078:	bl	10a20 <fgets@plt>
   1307c:	cmp	r0, #0
   13080:	beq	12e08 <error@@Base+0x2f8>
   13084:	mov	r0, r9
   13088:	mov	r1, r8
   1308c:	bl	109f0 <strcmp@plt>
   13090:	cmp	r0, #0
   13094:	addeq	r7, r7, #1
   13098:	sxth	r7, r7
   1309c:	cmp	r7, #2
   130a0:	blt	1306c <error@@Base+0x55c>
   130a4:	b	12e08 <error@@Base+0x2f8>
   130a8:	ldr	r0, [pc, #68]	; 130f4 <error@@Base+0x5e4>
   130ac:	add	r0, pc, r0
   130b0:	bl	12b10 <error@@Base>
   130b4:	bl	10b1c <utf8proc_errmsg@plt>
   130b8:	bl	12b10 <error@@Base>
   130bc:	ldr	r0, [pc, #52]	; 130f8 <error@@Base+0x5e8>
   130c0:	add	r0, pc, r0
   130c4:	bl	12b10 <error@@Base>
   130c8:	ldr	r0, [pc, #28]	; 130ec <error@@Base+0x5dc>
   130cc:	ldr	r1, [pc, #28]	; 130f0 <error@@Base+0x5e0>
   130d0:	add	r0, pc, r0
   130d4:	add	r1, pc, r1
   130d8:	bl	12b60 <error@@Base+0x50>
   130dc:	andeq	r1, r0, fp, ror r2
   130e0:			; <UNDEFINED> instruction: 0x000011b9
   130e4:	andeq	r0, r0, r5, ror pc
   130e8:	andeq	r2, r1, ip, asr r2
   130ec:	muleq	r0, r1, lr
   130f0:	muleq	r0, sp, lr
   130f4:	andeq	r0, r0, r9, ror #30
   130f8:	andeq	r0, r0, sp, ror #30
   130fc:	push	{fp, lr}
   13100:	mov	fp, sp
   13104:	bl	10a2c <utf8proc_encode_char@plt>
   13108:	cmp	r0, #0
   1310c:	sxtbgt	r0, r0
   13110:	popgt	{fp, pc}
   13114:	ldr	r0, [pc, #4]	; 13120 <error@@Base+0x610>
   13118:	add	r0, pc, r0
   1311c:	bl	12b10 <error@@Base>
   13120:	andeq	r0, r0, r3, ror #28
   13124:	push	{r4, r5, r6, r7, fp, lr}
   13128:	add	fp, sp, #16
   1312c:	mov	r6, r3
   13130:	mov	r4, r2
   13134:	mov	r5, r1
   13138:	tst	r0, #255	; 0xff
   1313c:	beq	13184 <error@@Base+0x674>
   13140:	mov	r0, #94	; 0x5e
   13144:	mov	r1, r4
   13148:	bl	10a2c <utf8proc_encode_char@plt>
   1314c:	cmp	r0, #0
   13150:	ble	131fc <error@@Base+0x6ec>
   13154:	sxtb	r7, r0
   13158:	cmp	r5, #10
   1315c:	bne	13190 <error@@Base+0x680>
   13160:	ldr	r0, [pc, #224]	; 13248 <error@@Base+0x738>
   13164:	ldr	r1, [pc, #224]	; 1324c <error@@Base+0x73c>
   13168:	tst	r6, #255	; 0xff
   1316c:	add	r0, pc, r0
   13170:	add	r1, pc, r1
   13174:	moveq	r1, r0
   13178:	add	r0, r4, r7
   1317c:	pop	{r4, r5, r6, r7, fp, lr}
   13180:	b	10b10 <sprintf@plt>
   13184:	mov	r7, #0
   13188:	cmp	r5, #10
   1318c:	beq	13160 <error@@Base+0x650>
   13190:	mov	r0, r5
   13194:	bl	10a14 <utf8proc_get_property@plt>
   13198:	cmp	r5, #32
   1319c:	beq	131b0 <error@@Base+0x6a0>
   131a0:	ldrsh	r0, [r0]
   131a4:	sub	r1, r0, #1
   131a8:	cmp	r1, #22
   131ac:	bcs	13208 <error@@Base+0x6f8>
   131b0:	mov	r0, r5
   131b4:	bl	10ad4 <utf8proc_category@plt>
   131b8:	sub	r0, r0, #6
   131bc:	cmp	r0, #2
   131c0:	bhi	131dc <error@@Base+0x6cc>
   131c4:	add	r1, r4, r7
   131c8:	movw	r0, #9676	; 0x25cc
   131cc:	bl	10a2c <utf8proc_encode_char@plt>
   131d0:	cmp	r0, #0
   131d4:	ble	131fc <error@@Base+0x6ec>
   131d8:	sxtab	r7, r7, r0
   131dc:	add	r1, r4, r7
   131e0:	mov	r0, r5
   131e4:	bl	10a2c <utf8proc_encode_char@plt>
   131e8:	cmp	r0, #0
   131ec:	sxtabgt	r0, r7, r0
   131f0:	movgt	r1, #0
   131f4:	strbgt	r1, [r4, r0]
   131f8:	popgt	{r4, r5, r6, r7, fp, pc}
   131fc:	ldr	r0, [pc, #64]	; 13244 <error@@Base+0x734>
   13200:	add	r0, pc, r0
   13204:	bl	12b10 <error@@Base>
   13208:	cmp	r0, #29
   1320c:	beq	131b0 <error@@Base+0x6a0>
   13210:	add	r0, r4, r7
   13214:	cmp	r5, #255	; 0xff
   13218:	bhi	13228 <error@@Base+0x718>
   1321c:	ldr	r1, [pc, #24]	; 1323c <error@@Base+0x72c>
   13220:	add	r1, pc, r1
   13224:	b	13230 <error@@Base+0x720>
   13228:	ldr	r1, [pc, #16]	; 13240 <error@@Base+0x730>
   1322c:	add	r1, pc, r1
   13230:	mov	r2, r5
   13234:	pop	{r4, r5, r6, r7, fp, lr}
   13238:	b	10b10 <sprintf@plt>
   1323c:	andeq	r0, r0, r7, ror sp
   13240:	andeq	r0, r0, r2, ror sp
   13244:	andeq	r0, r0, fp, ror sp
   13248:	andeq	r0, r0, fp, lsr #12
   1324c:	andeq	r0, r0, r2, lsr #28
   13250:	push	{r4, r5, r6, r7, fp, lr}
   13254:	add	fp, sp, #16
   13258:	sub	sp, sp, #16
   1325c:	mov	r6, r2
   13260:	mov	r2, r1
   13264:	ldr	r1, [pc, #180]	; 13320 <error@@Base+0x810>
   13268:	mov	r5, r0
   1326c:	mov	r0, r2
   13270:	add	r1, pc, r1
   13274:	bl	126f0 <getc@plt+0x1ba4>
   13278:	mov	r4, r0
   1327c:	cmp	r6, #0
   13280:	beq	132d4 <error@@Base+0x7c4>
   13284:	ldr	r0, [pc, #152]	; 13324 <error@@Base+0x814>
   13288:	mov	r1, #55	; 0x37
   1328c:	mov	r2, #1
   13290:	mov	r3, r4
   13294:	add	r0, pc, r0
   13298:	bl	10a74 <fwrite@plt>
   1329c:	ldr	r7, [pc, #132]	; 13328 <error@@Base+0x818>
   132a0:	mov	r1, #55	; 0x37
   132a4:	mov	r2, #1
   132a8:	mov	r3, r4
   132ac:	add	r7, pc, r7
   132b0:	mov	r0, r7
   132b4:	bl	10a74 <fwrite@plt>
   132b8:	mov	r0, r4
   132bc:	blx	r6
   132c0:	mov	r0, r7
   132c4:	mov	r1, #55	; 0x37
   132c8:	mov	r2, #1
   132cc:	mov	r3, r4
   132d0:	bl	10a74 <fwrite@plt>
   132d4:	ldr	r6, [r5]
   132d8:	cmp	r6, #0
   132dc:	beq	13310 <error@@Base+0x800>
   132e0:	add	r5, sp, #7
   132e4:	ldr	r1, [r6, #12]
   132e8:	ldrb	r0, [r6, #8]
   132ec:	mov	r2, r5
   132f0:	mov	r3, #0
   132f4:	bl	13124 <error@@Base+0x614>
   132f8:	mov	r0, r5
   132fc:	mov	r1, r4
   13300:	bl	10b28 <fputs@plt>
   13304:	ldr	r6, [r6, #4]
   13308:	cmp	r6, #0
   1330c:	bne	132e4 <error@@Base+0x7d4>
   13310:	mov	r0, r4
   13314:	bl	12778 <getc@plt+0x1c2c>
   13318:	sub	sp, fp, #16
   1331c:	pop	{r4, r5, r6, r7, fp, pc}
   13320:	andeq	r0, r0, r0, asr r8
   13324:	andeq	r0, r0, r1, lsl sp
   13328:	andeq	r0, r0, r1, lsr sp
   1332c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13330:	add	fp, sp, #28
   13334:	sub	sp, sp, #4
   13338:	mov	r9, #0
   1333c:	mov	sl, r0
   13340:	str	r9, [sp]
   13344:	ldrb	r0, [r1]
   13348:	cmp	r0, #0
   1334c:	beq	133ac <error@@Base+0x89c>
   13350:	mov	r4, r1
   13354:	mov	r8, sp
   13358:	mov	r7, #1
   1335c:	mov	r0, r4
   13360:	mvn	r1, #0
   13364:	mov	r2, r8
   13368:	bl	10a8c <utf8proc_iterate@plt>
   1336c:	cmp	r0, #1
   13370:	blt	133b4 <error@@Base+0x8a4>
   13374:	ldr	r5, [sp]
   13378:	mov	r6, r0
   1337c:	mov	r0, #1
   13380:	mov	r1, #16
   13384:	bl	12650 <getc@plt+0x1b04>
   13388:	strb	r9, [r0, #8]
   1338c:	mov	r1, r0
   13390:	str	r5, [r0, #12]
   13394:	mov	r0, sl
   13398:	bl	13420 <error@@Base+0x910>
   1339c:	ldrb	r0, [r4, r6]!
   133a0:	cmp	r0, #0
   133a4:	bne	1335c <error@@Base+0x84c>
   133a8:	b	133b8 <error@@Base+0x8a8>
   133ac:	mov	r7, #1
   133b0:	b	133b8 <error@@Base+0x8a8>
   133b4:	mov	r7, #0
   133b8:	mov	r0, r7
   133bc:	sub	sp, fp, #28
   133c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   133c4:	vmov.i32	q8, #0	; 0x00000000
   133c8:	vst1.32	{d16-d17}, [r0]
   133cc:	bx	lr
   133d0:	push	{r4, r5, fp, lr}
   133d4:	add	fp, sp, #8
   133d8:	mov	r4, r0
   133dc:	ldr	r0, [r0]
   133e0:	mov	r5, #0
   133e4:	str	r5, [r1]
   133e8:	cmp	r0, #0
   133ec:	str	r0, [r1, #4]
   133f0:	str	r1, [r4]
   133f4:	addeq	r0, r4, #4
   133f8:	str	r1, [r0]
   133fc:	ldr	r0, [r4, #8]
   13400:	cmp	r0, #0
   13404:	beq	13410 <error@@Base+0x900>
   13408:	bl	10a08 <free@plt>
   1340c:	str	r5, [r4, #8]
   13410:	ldr	r0, [r4, #12]
   13414:	add	r0, r0, #1
   13418:	str	r0, [r4, #12]
   1341c:	pop	{r4, r5, fp, pc}
   13420:	push	{r4, r5, fp, lr}
   13424:	add	fp, sp, #8
   13428:	mov	r4, r0
   1342c:	ldr	r0, [r0, #4]
   13430:	mov	r5, #0
   13434:	mov	r2, r4
   13438:	cmp	r0, #0
   1343c:	stm	r1, {r0, r5}
   13440:	addne	r2, r0, #4
   13444:	str	r1, [r2]
   13448:	str	r1, [r4, #4]
   1344c:	ldr	r0, [r4, #8]
   13450:	cmp	r0, #0
   13454:	beq	13460 <error@@Base+0x950>
   13458:	bl	10a08 <free@plt>
   1345c:	str	r5, [r4, #8]
   13460:	ldr	r0, [r4, #12]
   13464:	add	r0, r0, #1
   13468:	str	r0, [r4, #12]
   1346c:	pop	{r4, r5, fp, pc}
   13470:	push	{r4, sl, fp, lr}
   13474:	add	fp, sp, #8
   13478:	mov	r4, r0
   1347c:	ldr	r0, [r2]
   13480:	mov	r3, r4
   13484:	cmp	r0, #0
   13488:	stm	r1, {r0, r2}
   1348c:	addne	r3, r0, #4
   13490:	str	r1, [r3]
   13494:	str	r1, [r2]
   13498:	ldr	r0, [r4, #8]
   1349c:	cmp	r0, #0
   134a0:	beq	134b0 <error@@Base+0x9a0>
   134a4:	bl	10a08 <free@plt>
   134a8:	mov	r0, #0
   134ac:	str	r0, [r4, #8]
   134b0:	ldr	r0, [r4, #12]
   134b4:	add	r0, r0, #1
   134b8:	str	r0, [r4, #12]
   134bc:	pop	{r4, sl, fp, pc}
   134c0:	push	{r4, sl, fp, lr}
   134c4:	add	fp, sp, #8
   134c8:	mov	r4, r0
   134cc:	mov	r0, r1
   134d0:	cmp	r1, #0
   134d4:	ldr	r3, [r0, #4]!
   134d8:	moveq	r0, r4
   134dc:	cmp	r3, #0
   134e0:	stm	r2, {r1, r3}
   134e4:	addeq	r3, r4, #4
   134e8:	str	r2, [r0]
   134ec:	str	r2, [r3]
   134f0:	ldr	r0, [r4, #8]
   134f4:	cmp	r0, #0
   134f8:	beq	13508 <error@@Base+0x9f8>
   134fc:	bl	10a08 <free@plt>
   13500:	mov	r0, #0
   13504:	str	r0, [r4, #8]
   13508:	ldr	r0, [r4, #12]
   1350c:	add	r0, r0, #1
   13510:	str	r0, [r4, #12]
   13514:	pop	{r4, sl, fp, pc}
   13518:	push	{r4, r5, fp, lr}
   1351c:	add	fp, sp, #8
   13520:	mov	r4, r0
   13524:	ldm	r1, {r0, r2}
   13528:	mov	r5, #0
   1352c:	cmp	r0, #0
   13530:	streq	r2, [r4]
   13534:	strne	r2, [r0, #4]
   13538:	ldrne	r2, [r1, #4]
   1353c:	cmp	r2, #0
   13540:	addeq	r2, r4, #4
   13544:	str	r0, [r2]
   13548:	str	r5, [r1]
   1354c:	str	r5, [r1, #4]
   13550:	ldr	r0, [r4, #8]
   13554:	cmp	r0, #0
   13558:	beq	13564 <error@@Base+0xa54>
   1355c:	bl	10a08 <free@plt>
   13560:	str	r5, [r4, #8]
   13564:	ldr	r0, [r4, #12]
   13568:	sub	r0, r0, #1
   1356c:	str	r0, [r4, #12]
   13570:	pop	{r4, r5, fp, pc}
   13574:	push	{r4, sl, fp, lr}
   13578:	add	fp, sp, #8
   1357c:	mov	r4, r0
   13580:	ldr	r0, [r0, #8]
   13584:	cmp	r0, #0
   13588:	beq	13590 <error@@Base+0xa80>
   1358c:	pop	{r4, sl, fp, pc}
   13590:	ldr	r0, [r4, #12]
   13594:	cmp	r0, #0
   13598:	beq	1358c <error@@Base+0xa7c>
   1359c:	mov	r1, #4
   135a0:	bl	12650 <getc@plt+0x1b04>
   135a4:	str	r0, [r4, #8]
   135a8:	ldr	r1, [r4]
   135ac:	cmp	r1, #0
   135b0:	beq	1358c <error@@Base+0xa7c>
   135b4:	str	r1, [r0]
   135b8:	ldr	r0, [r1, #4]
   135bc:	cmp	r0, #0
   135c0:	popeq	{r4, sl, fp, pc}
   135c4:	mov	r1, #4
   135c8:	ldr	r2, [r4, #8]
   135cc:	str	r0, [r2, r1]
   135d0:	add	r1, r1, #4
   135d4:	ldr	r0, [r0, #4]
   135d8:	cmp	r0, #0
   135dc:	bne	135c8 <error@@Base+0xab8>
   135e0:	b	1358c <error@@Base+0xa7c>
   135e4:	push	{r4, r5, r6, r7, fp, lr}
   135e8:	add	fp, sp, #16
   135ec:	ldr	r6, [r0]
   135f0:	cmp	r6, #0
   135f4:	popeq	{r4, r5, r6, r7, fp, pc}
   135f8:	mov	r4, r1
   135fc:	mov	r5, r0
   13600:	mov	r7, #0
   13604:	ldm	r6, {r0, r1}
   13608:	cmp	r0, #0
   1360c:	streq	r1, [r5]
   13610:	strne	r1, [r0, #4]
   13614:	ldrne	r1, [r6, #4]
   13618:	cmp	r1, #0
   1361c:	addeq	r1, r5, #4
   13620:	str	r0, [r1]
   13624:	str	r7, [r6]
   13628:	str	r7, [r6, #4]
   1362c:	ldr	r0, [r5, #8]
   13630:	cmp	r0, #0
   13634:	beq	13640 <error@@Base+0xb30>
   13638:	bl	10a08 <free@plt>
   1363c:	str	r7, [r5, #8]
   13640:	ldr	r0, [r5, #12]
   13644:	sub	r0, r0, #1
   13648:	str	r0, [r5, #12]
   1364c:	mov	r0, r6
   13650:	blx	r4
   13654:	ldr	r6, [r5]
   13658:	cmp	r6, #0
   1365c:	bne	13604 <error@@Base+0xaf4>
   13660:	pop	{r4, r5, r6, r7, fp, pc}
   13664:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13668:	mov	r7, r0
   1366c:	ldr	r6, [pc, #72]	; 136bc <error@@Base+0xbac>
   13670:	ldr	r5, [pc, #72]	; 136c0 <error@@Base+0xbb0>
   13674:	add	r6, pc, r6
   13678:	add	r5, pc, r5
   1367c:	sub	r6, r6, r5
   13680:	mov	r8, r1
   13684:	mov	r9, r2
   13688:	bl	109c4 <calloc@plt-0x20>
   1368c:	asrs	r6, r6, #2
   13690:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   13694:	mov	r4, #0
   13698:	add	r4, r4, #1
   1369c:	ldr	r3, [r5], #4
   136a0:	mov	r2, r9
   136a4:	mov	r1, r8
   136a8:	mov	r0, r7
   136ac:	blx	r3
   136b0:	cmp	r6, r4
   136b4:	bne	13698 <error@@Base+0xb88>
   136b8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   136bc:	andeq	r1, r1, ip, lsr r4
   136c0:	andeq	r1, r1, r4, lsr r4
   136c4:	bx	lr

Disassembly of section .fini:

000136c8 <.fini>:
   136c8:	push	{r3, lr}
   136cc:	pop	{r3, pc}
