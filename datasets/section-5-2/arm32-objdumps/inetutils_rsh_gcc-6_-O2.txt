
../repos/inetutils/src/rsh:     file format elf32-littlearm


Disassembly of section .init:

00010fc8 <.init>:
   10fc8:	push	{r3, lr}
   10fcc:	bl	117cc <__assert_fail@plt+0x4f0>
   10fd0:	pop	{r3, pc}

Disassembly of section .plt:

00010fd4 <fputs_unlocked@plt-0x14>:
   10fd4:	push	{lr}		; (str lr, [sp, #-4]!)
   10fd8:	ldr	lr, [pc, #4]	; 10fe4 <fputs_unlocked@plt-0x4>
   10fdc:	add	lr, pc, lr
   10fe0:	ldr	pc, [lr, #8]!
   10fe4:	andeq	r8, r1, ip, lsl r0

00010fe8 <fputs_unlocked@plt>:
   10fe8:	add	ip, pc, #0, 12
   10fec:	add	ip, ip, #24, 20	; 0x18000
   10ff0:	ldr	pc, [ip, #28]!

00010ff4 <strcmp@plt>:
   10ff4:	add	ip, pc, #0, 12
   10ff8:	add	ip, ip, #24, 20	; 0x18000
   10ffc:	ldr	pc, [ip, #20]!

00011000 <strtol@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #24, 20	; 0x18000
   11008:	ldr	pc, [ip, #12]!

0001100c <getpwuid@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #24, 20	; 0x18000
   11014:	ldr	pc, [ip, #4]!

00011018 <setsockopt@plt>:
   11018:	add	ip, pc, #0, 12
   1101c:	add	ip, ip, #94208	; 0x17000
   11020:	ldr	pc, [ip, #4092]!	; 0xffc

00011024 <printf@plt>:
   11024:	add	ip, pc, #0, 12
   11028:	add	ip, ip, #94208	; 0x17000
   1102c:	ldr	pc, [ip, #4084]!	; 0xff4

00011030 <read@plt>:
   11030:	add	ip, pc, #0, 12
   11034:	add	ip, ip, #94208	; 0x17000
   11038:	ldr	pc, [ip, #4076]!	; 0xfec

0001103c <getuid@plt>:
   1103c:	add	ip, pc, #0, 12
   11040:	add	ip, ip, #94208	; 0x17000
   11044:	ldr	pc, [ip, #4068]!	; 0xfe4

00011048 <sigprocmask@plt>:
   11048:	add	ip, pc, #0, 12
   1104c:	add	ip, ip, #94208	; 0x17000
   11050:	ldr	pc, [ip, #4060]!	; 0xfdc

00011054 <memmove@plt>:
   11054:	add	ip, pc, #0, 12
   11058:	add	ip, ip, #94208	; 0x17000
   1105c:	ldr	pc, [ip, #4052]!	; 0xfd4

00011060 <strchrnul@plt>:
   11060:	add	ip, pc, #0, 12
   11064:	add	ip, ip, #94208	; 0x17000
   11068:	ldr	pc, [ip, #4044]!	; 0xfcc

0001106c <free@plt>:
   1106c:	add	ip, pc, #0, 12
   11070:	add	ip, ip, #94208	; 0x17000
   11074:	ldr	pc, [ip, #4036]!	; 0xfc4

00011078 <strndup@plt>:
   11078:	add	ip, pc, #0, 12
   1107c:	add	ip, ip, #94208	; 0x17000
   11080:	ldr	pc, [ip, #4028]!	; 0xfbc

00011084 <memcpy@plt>:
   11084:	add	ip, pc, #0, 12
   11088:	add	ip, ip, #94208	; 0x17000
   1108c:	ldr	pc, [ip, #4020]!	; 0xfb4

00011090 <signal@plt>:
   11090:	add	ip, pc, #0, 12
   11094:	add	ip, ip, #94208	; 0x17000
   11098:	ldr	pc, [ip, #4012]!	; 0xfac

0001109c <fwrite_unlocked@plt>:
   1109c:	add	ip, pc, #0, 12
   110a0:	add	ip, ip, #94208	; 0x17000
   110a4:	ldr	pc, [ip, #4004]!	; 0xfa4

000110a8 <select@plt>:
   110a8:	add	ip, pc, #0, 12
   110ac:	add	ip, ip, #94208	; 0x17000
   110b0:	ldr	pc, [ip, #3996]!	; 0xf9c

000110b4 <sleep@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #94208	; 0x17000
   110bc:	ldr	pc, [ip, #3988]!	; 0xf94

000110c0 <realloc@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #94208	; 0x17000
   110c8:	ldr	pc, [ip, #3980]!	; 0xf8c

000110cc <strcasecmp@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #94208	; 0x17000
   110d4:	ldr	pc, [ip, #3972]!	; 0xf84

000110d8 <funlockfile@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #94208	; 0x17000
   110e0:	ldr	pc, [ip, #3964]!	; 0xf7c

000110e4 <seteuid@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #94208	; 0x17000
   110ec:	ldr	pc, [ip, #3956]!	; 0xf74

000110f0 <sigaction@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #94208	; 0x17000
   110f8:	ldr	pc, [ip, #3948]!	; 0xf6c

000110fc <fwrite@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #94208	; 0x17000
   11104:	ldr	pc, [ip, #3940]!	; 0xf64

00011108 <ioctl@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #94208	; 0x17000
   11110:	ldr	pc, [ip, #3932]!	; 0xf5c

00011114 <strcpy@plt>:
   11114:	add	ip, pc, #0, 12
   11118:	add	ip, ip, #94208	; 0x17000
   1111c:	ldr	pc, [ip, #3924]!	; 0xf54

00011120 <error@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #94208	; 0x17000
   11128:	ldr	pc, [ip, #3916]!	; 0xf4c

0001112c <getenv@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #94208	; 0x17000
   11134:	ldr	pc, [ip, #3908]!	; 0xf44

00011138 <malloc@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #94208	; 0x17000
   11140:	ldr	pc, [ip, #3900]!	; 0xf3c

00011144 <sigaddset@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #94208	; 0x17000
   1114c:	ldr	pc, [ip, #3892]!	; 0xf34

00011150 <__libc_start_main@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #94208	; 0x17000
   11158:	ldr	pc, [ip, #3884]!	; 0xf2c

0001115c <strerror@plt>:
   1115c:	add	ip, pc, #0, 12
   11160:	add	ip, ip, #94208	; 0x17000
   11164:	ldr	pc, [ip, #3876]!	; 0xf24

00011168 <__ctype_tolower_loc@plt>:
   11168:	add	ip, pc, #0, 12
   1116c:	add	ip, ip, #94208	; 0x17000
   11170:	ldr	pc, [ip, #3868]!	; 0xf1c

00011174 <__gmon_start__@plt>:
   11174:	add	ip, pc, #0, 12
   11178:	add	ip, ip, #94208	; 0x17000
   1117c:	ldr	pc, [ip, #3860]!	; 0xf14

00011180 <rcmd_af@plt>:
   11180:	add	ip, pc, #0, 12
   11184:	add	ip, ip, #94208	; 0x17000
   11188:	ldr	pc, [ip, #3852]!	; 0xf0c

0001118c <mempcpy@plt>:
   1118c:	add	ip, pc, #0, 12
   11190:	add	ip, ip, #94208	; 0x17000
   11194:	ldr	pc, [ip, #3844]!	; 0xf04

00011198 <kill@plt>:
   11198:	add	ip, pc, #0, 12
   1119c:	add	ip, ip, #94208	; 0x17000
   111a0:	ldr	pc, [ip, #3836]!	; 0xefc

000111a4 <__ctype_b_loc@plt>:
   111a4:	add	ip, pc, #0, 12
   111a8:	add	ip, ip, #94208	; 0x17000
   111ac:	ldr	pc, [ip, #3828]!	; 0xef4

000111b0 <exit@plt>:
   111b0:	add	ip, pc, #0, 12
   111b4:	add	ip, ip, #94208	; 0x17000
   111b8:	ldr	pc, [ip, #3820]!	; 0xeec

000111bc <strlen@plt>:
   111bc:	add	ip, pc, #0, 12
   111c0:	add	ip, ip, #94208	; 0x17000
   111c4:	ldr	pc, [ip, #3812]!	; 0xee4

000111c8 <strchr@plt>:
   111c8:	add	ip, pc, #0, 12
   111cc:	add	ip, ip, #94208	; 0x17000
   111d0:	ldr	pc, [ip, #3804]!	; 0xedc

000111d4 <fprintf@plt>:
   111d4:	add	ip, pc, #0, 12
   111d8:	add	ip, ip, #94208	; 0x17000
   111dc:	ldr	pc, [ip, #3796]!	; 0xed4

000111e0 <execv@plt>:
   111e0:	add	ip, pc, #0, 12
   111e4:	add	ip, ip, #94208	; 0x17000
   111e8:	ldr	pc, [ip, #3788]!	; 0xecc

000111ec <__errno_location@plt>:
   111ec:	add	ip, pc, #0, 12
   111f0:	add	ip, ip, #94208	; 0x17000
   111f4:	ldr	pc, [ip, #3780]!	; 0xec4

000111f8 <getservbyname@plt>:
   111f8:	add	ip, pc, #0, 12
   111fc:	add	ip, ip, #94208	; 0x17000
   11200:	ldr	pc, [ip, #3772]!	; 0xebc

00011204 <strerror_r@plt>:
   11204:	add	ip, pc, #0, 12
   11208:	add	ip, ip, #94208	; 0x17000
   1120c:	ldr	pc, [ip, #3764]!	; 0xeb4

00011210 <memset@plt>:
   11210:	add	ip, pc, #0, 12
   11214:	add	ip, ip, #94208	; 0x17000
   11218:	ldr	pc, [ip, #3756]!	; 0xeac

0001121c <write@plt>:
   1121c:	add	ip, pc, #0, 12
   11220:	add	ip, ip, #94208	; 0x17000
   11224:	ldr	pc, [ip, #3748]!	; 0xea4

00011228 <memchr@plt>:
   11228:	add	ip, pc, #0, 12
   1122c:	add	ip, ip, #94208	; 0x17000
   11230:	ldr	pc, [ip, #3740]!	; 0xe9c

00011234 <shutdown@plt>:
   11234:	add	ip, pc, #0, 12
   11238:	add	ip, ip, #94208	; 0x17000
   1123c:	ldr	pc, [ip, #3732]!	; 0xe94

00011240 <__overflow@plt>:
   11240:	add	ip, pc, #0, 12
   11244:	add	ip, ip, #94208	; 0x17000
   11248:	ldr	pc, [ip, #3724]!	; 0xe8c

0001124c <sigemptyset@plt>:
   1124c:	add	ip, pc, #0, 12
   11250:	add	ip, ip, #94208	; 0x17000
   11254:	ldr	pc, [ip, #3716]!	; 0xe84

00011258 <fork@plt>:
   11258:	add	ip, pc, #0, 12
   1125c:	add	ip, ip, #94208	; 0x17000
   11260:	ldr	pc, [ip, #3708]!	; 0xe7c

00011264 <strrchr@plt>:
   11264:	add	ip, pc, #0, 12
   11268:	add	ip, ip, #94208	; 0x17000
   1126c:	ldr	pc, [ip, #3700]!	; 0xe74

00011270 <vfprintf@plt>:
   11270:	add	ip, pc, #0, 12
   11274:	add	ip, ip, #94208	; 0x17000
   11278:	ldr	pc, [ip, #3692]!	; 0xe6c

0001127c <fputc@plt>:
   1127c:	add	ip, pc, #0, 12
   11280:	add	ip, ip, #94208	; 0x17000
   11284:	ldr	pc, [ip, #3684]!	; 0xe64

00011288 <setuid@plt>:
   11288:	add	ip, pc, #0, 12
   1128c:	add	ip, ip, #94208	; 0x17000
   11290:	ldr	pc, [ip, #3676]!	; 0xe5c

00011294 <flockfile@plt>:
   11294:	add	ip, pc, #0, 12
   11298:	add	ip, ip, #94208	; 0x17000
   1129c:	ldr	pc, [ip, #3668]!	; 0xe54

000112a0 <vsnprintf@plt>:
   112a0:	add	ip, pc, #0, 12
   112a4:	add	ip, ip, #94208	; 0x17000
   112a8:	ldr	pc, [ip, #3660]!	; 0xe4c

000112ac <qsort@plt>:
   112ac:	add	ip, pc, #0, 12
   112b0:	add	ip, ip, #94208	; 0x17000
   112b4:	ldr	pc, [ip, #3652]!	; 0xe44

000112b8 <strncmp@plt>:
   112b8:	add	ip, pc, #0, 12
   112bc:	add	ip, ip, #94208	; 0x17000
   112c0:	ldr	pc, [ip, #3644]!	; 0xe3c

000112c4 <abort@plt>:
   112c4:	add	ip, pc, #0, 12
   112c8:	add	ip, ip, #94208	; 0x17000
   112cc:	ldr	pc, [ip, #3636]!	; 0xe34

000112d0 <close@plt>:
   112d0:	add	ip, pc, #0, 12
   112d4:	add	ip, ip, #94208	; 0x17000
   112d8:	ldr	pc, [ip, #3628]!	; 0xe2c

000112dc <__assert_fail@plt>:
   112dc:	add	ip, pc, #0, 12
   112e0:	add	ip, ip, #94208	; 0x17000
   112e4:	ldr	pc, [ip, #3620]!	; 0xe24

Disassembly of section .text:

000112e8 <argp_parse@@Base-0x11fc>:
   112e8:	push	{r4, r5, r6, r7, r8, r9, lr}
   112ec:	mov	r5, r1
   112f0:	ldr	r4, [pc, #1088]	; 11738 <__assert_fail@plt+0x45c>
   112f4:	sub	sp, sp, #292	; 0x124
   112f8:	mov	r7, r0
   112fc:	ldr	r0, [r1]
   11300:	bl	134b4 <argp_parse@@Base+0xfd0>
   11304:	mov	r3, #0
   11308:	str	r3, [r4, #8]
   1130c:	ldr	r6, [r5]
   11310:	mov	r1, #47	; 0x2f
   11314:	mov	r0, r6
   11318:	str	r3, [sp, #24]
   1131c:	bl	11264 <strrchr@plt>
   11320:	ldr	r1, [pc, #1044]	; 1173c <__assert_fail@plt+0x460>
   11324:	cmp	r0, #0
   11328:	addne	r6, r0, #1
   1132c:	mov	r0, r6
   11330:	bl	10ff4 <strcmp@plt>
   11334:	ldr	r3, [pc, #1028]	; 11740 <__assert_fail@plt+0x464>
   11338:	ldr	r2, [pc, #1028]	; 11744 <__assert_fail@plt+0x468>
   1133c:	ldr	r1, [pc, #1028]	; 11748 <__assert_fail@plt+0x46c>
   11340:	str	r2, [r3]
   11344:	cmp	r0, #0
   11348:	ldr	r0, [pc, #1004]	; 1173c <__assert_fail@plt+0x460>
   1134c:	strne	r6, [sp, #24]
   11350:	movne	r8, #0
   11354:	moveq	r8, #1
   11358:	bl	132a8 <argp_parse@@Base+0xdc4>
   1135c:	mov	r2, #0
   11360:	add	r3, sp, #20
   11364:	str	r2, [sp, #4]
   11368:	str	r3, [sp]
   1136c:	mov	r2, r5
   11370:	mov	r3, #8
   11374:	mov	r1, r7
   11378:	ldr	r0, [pc, #972]	; 1174c <__assert_fail@plt+0x470>
   1137c:	bl	124e4 <argp_parse@@Base>
   11380:	ldr	r3, [sp, #20]
   11384:	cmp	r7, r3
   11388:	ldrgt	r2, [r5, r3, lsl #2]
   1138c:	addgt	r3, r3, #1
   11390:	strgt	r3, [sp, #20]
   11394:	strgt	r2, [sp, #24]
   11398:	ldr	r1, [sp, #24]
   1139c:	cmp	r1, #0
   113a0:	beq	116b8 <__assert_fail@plt+0x3dc>
   113a4:	ldr	r0, [sp, #20]
   113a8:	ldr	r3, [r5, r0, lsl #2]
   113ac:	add	r6, r5, r0, lsl #2
   113b0:	cmp	r3, #0
   113b4:	beq	11634 <__assert_fail@plt+0x358>
   113b8:	bl	1103c <getuid@plt>
   113bc:	mov	r5, r0
   113c0:	bl	1100c <getpwuid@plt>
   113c4:	subs	r7, r0, #0
   113c8:	beq	116a4 <__assert_fail@plt+0x3c8>
   113cc:	mov	r1, #64	; 0x40
   113d0:	ldr	r0, [sp, #24]
   113d4:	bl	111c8 <strchr@plt>
   113d8:	cmp	r0, #0
   113dc:	beq	11408 <__assert_fail@plt+0x12c>
   113e0:	mov	r3, #0
   113e4:	strb	r3, [r0]
   113e8:	ldr	r3, [r4, #8]
   113ec:	cmp	r3, #0
   113f0:	beq	11694 <__assert_fail@plt+0x3b8>
   113f4:	add	r3, r0, #1
   113f8:	str	r3, [sp, #24]
   113fc:	ldrb	r1, [r0, #1]
   11400:	cmp	r1, #0
   11404:	beq	11624 <__assert_fail@plt+0x348>
   11408:	mov	r0, r6
   1140c:	bl	11ebc <__assert_fail@plt+0xbe0>
   11410:	ldr	r1, [pc, #824]	; 11750 <__assert_fail@plt+0x474>
   11414:	mov	r8, r0
   11418:	ldr	r0, [pc, #820]	; 11754 <__assert_fail@plt+0x478>
   1141c:	bl	111f8 <getservbyname@plt>
   11420:	subs	r6, r0, #0
   11424:	beq	116c8 <__assert_fail@plt+0x3ec>
   11428:	ldr	r3, [r4, #8]
   1142c:	ldrh	r0, [r4]
   11430:	ldr	r2, [r7]
   11434:	ldrh	r1, [r6, #8]
   11438:	ldr	r6, [pc, #792]	; 11758 <__assert_fail@plt+0x47c>
   1143c:	cmp	r3, #0
   11440:	moveq	r3, r2
   11444:	str	r8, [sp]
   11448:	str	r0, [sp, #8]
   1144c:	str	r6, [sp, #4]
   11450:	add	r0, sp, #24
   11454:	streq	r2, [r4, #8]
   11458:	bl	11180 <rcmd_af@plt>
   1145c:	subs	r8, r0, #0
   11460:	blt	1170c <__assert_fail@plt+0x430>
   11464:	ldr	r3, [r6]
   11468:	cmp	r3, #0
   1146c:	blt	11680 <__assert_fail@plt+0x3a4>
   11470:	ldr	r3, [r4, #4]
   11474:	cmp	r3, #0
   11478:	addeq	r7, sp, #160	; 0xa0
   1147c:	bne	115bc <__assert_fail@plt+0x2e0>
   11480:	mov	r0, r5
   11484:	bl	110e4 <seteuid@plt>
   11488:	mov	r0, r5
   1148c:	bl	11288 <setuid@plt>
   11490:	add	r0, sp, #32
   11494:	bl	1124c <sigemptyset@plt>
   11498:	mov	r1, #2
   1149c:	add	r0, sp, #32
   114a0:	bl	11144 <sigaddset@plt>
   114a4:	mov	r1, #3
   114a8:	add	r0, sp, #32
   114ac:	bl	11144 <sigaddset@plt>
   114b0:	mov	r1, #15
   114b4:	add	r0, sp, #32
   114b8:	bl	11144 <sigaddset@plt>
   114bc:	mov	r2, r7
   114c0:	add	r1, sp, #32
   114c4:	mov	r0, #0
   114c8:	bl	11048 <sigprocmask@plt>
   114cc:	mov	r1, #1
   114d0:	mov	r0, #2
   114d4:	bl	11090 <signal@plt>
   114d8:	cmp	r0, #1
   114dc:	beq	114ec <__assert_fail@plt+0x210>
   114e0:	ldr	r1, [pc, #628]	; 1175c <__assert_fail@plt+0x480>
   114e4:	mov	r0, #2
   114e8:	bl	11090 <signal@plt>
   114ec:	mov	r1, #1
   114f0:	mov	r0, #3
   114f4:	bl	11090 <signal@plt>
   114f8:	cmp	r0, #1
   114fc:	beq	1150c <__assert_fail@plt+0x230>
   11500:	ldr	r1, [pc, #596]	; 1175c <__assert_fail@plt+0x480>
   11504:	mov	r0, #3
   11508:	bl	11090 <signal@plt>
   1150c:	mov	r1, #1
   11510:	mov	r0, #15
   11514:	bl	11090 <signal@plt>
   11518:	cmp	r0, #1
   1151c:	beq	1152c <__assert_fail@plt+0x250>
   11520:	ldr	r1, [pc, #564]	; 1175c <__assert_fail@plt+0x480>
   11524:	mov	r0, #15
   11528:	bl	11090 <signal@plt>
   1152c:	ldr	r3, [r4, #12]
   11530:	cmp	r3, #0
   11534:	bne	115a8 <__assert_fail@plt+0x2cc>
   11538:	bl	11258 <fork@plt>
   1153c:	subs	r9, r0, #0
   11540:	blt	116dc <__assert_fail@plt+0x400>
   11544:	add	r5, sp, #288	; 0x120
   11548:	mov	r3, #1
   1154c:	str	r3, [r5, #-260]!	; 0xfffffefc
   11550:	ldr	r1, [pc, #520]	; 11760 <__assert_fail@plt+0x484>
   11554:	mov	r2, r5
   11558:	ldr	r0, [r6]
   1155c:	bl	13484 <argp_parse@@Base+0xfa0>
   11560:	mov	r2, r5
   11564:	ldr	r1, [pc, #500]	; 11760 <__assert_fail@plt+0x484>
   11568:	mov	r0, r8
   1156c:	bl	13484 <argp_parse@@Base+0xfa0>
   11570:	mov	r3, r8
   11574:	mov	r2, r9
   11578:	mov	r1, r7
   1157c:	ldr	r0, [r4, #12]
   11580:	bl	11a90 <__assert_fail@plt+0x7b4>
   11584:	ldr	r3, [r4, #12]
   11588:	cmp	r3, #0
   1158c:	bne	1159c <__assert_fail@plt+0x2c0>
   11590:	mov	r0, r9
   11594:	mov	r1, #9
   11598:	bl	11198 <kill@plt>
   1159c:	mov	r0, #0
   115a0:	add	sp, sp, #292	; 0x124
   115a4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   115a8:	mov	r1, #1
   115ac:	mov	r0, r8
   115b0:	bl	11234 <shutdown@plt>
   115b4:	mov	r9, #0
   115b8:	b	11544 <__assert_fail@plt+0x268>
   115bc:	add	r7, sp, #288	; 0x120
   115c0:	mov	r2, #1
   115c4:	mov	r0, #4
   115c8:	str	r2, [r7, #-128]!	; 0xffffff80
   115cc:	mov	r1, r2
   115d0:	str	r0, [sp]
   115d4:	mov	r3, r7
   115d8:	mov	r0, r8
   115dc:	bl	11018 <setsockopt@plt>
   115e0:	cmp	r0, #0
   115e4:	blt	116f4 <__assert_fail@plt+0x418>
   115e8:	mov	r3, #4
   115ec:	mov	r2, #1
   115f0:	str	r3, [sp]
   115f4:	mov	r1, r2
   115f8:	mov	r3, r7
   115fc:	ldr	r0, [r6]
   11600:	bl	11018 <setsockopt@plt>
   11604:	cmp	r0, #0
   11608:	bge	11480 <__assert_fail@plt+0x1a4>
   1160c:	bl	111ec <__errno_location@plt>
   11610:	ldr	r2, [pc, #332]	; 11764 <__assert_fail@plt+0x488>
   11614:	ldr	r1, [r0]
   11618:	mov	r0, #0
   1161c:	bl	11120 <error@plt>
   11620:	b	11480 <__assert_fail@plt+0x1a4>
   11624:	ldr	r2, [pc, #316]	; 11768 <__assert_fail@plt+0x48c>
   11628:	mov	r0, #1
   1162c:	bl	11120 <error@plt>
   11630:	b	11408 <__assert_fail@plt+0x12c>
   11634:	cmp	r8, #0
   11638:	ldrne	r3, [pc, #300]	; 1176c <__assert_fail@plt+0x490>
   1163c:	strne	r3, [r5]
   11640:	bl	1103c <getuid@plt>
   11644:	bl	110e4 <seteuid@plt>
   11648:	bl	1103c <getuid@plt>
   1164c:	bl	11288 <setuid@plt>
   11650:	mov	r1, r5
   11654:	ldr	r0, [pc, #276]	; 11770 <__assert_fail@plt+0x494>
   11658:	bl	111e0 <execv@plt>
   1165c:	bl	111ec <__errno_location@plt>
   11660:	ldr	r3, [pc, #264]	; 11770 <__assert_fail@plt+0x494>
   11664:	ldr	r2, [pc, #264]	; 11774 <__assert_fail@plt+0x498>
   11668:	ldr	r1, [r0]
   1166c:	mov	r0, #1
   11670:	bl	11120 <error@plt>
   11674:	ldr	r0, [sp, #20]
   11678:	add	r6, r5, r0, lsl #2
   1167c:	b	113b8 <__assert_fail@plt+0xdc>
   11680:	ldr	r2, [pc, #240]	; 11778 <__assert_fail@plt+0x49c>
   11684:	mov	r1, #0
   11688:	mov	r0, #1
   1168c:	bl	11120 <error@plt>
   11690:	b	11470 <__assert_fail@plt+0x194>
   11694:	ldr	r3, [sp, #24]
   11698:	cmp	r0, r3
   1169c:	strhi	r3, [r4, #8]
   116a0:	b	113f4 <__assert_fail@plt+0x118>
   116a4:	ldr	r2, [pc, #208]	; 1177c <__assert_fail@plt+0x4a0>
   116a8:	mov	r1, r7
   116ac:	mov	r0, #1
   116b0:	bl	11120 <error@plt>
   116b4:	b	113cc <__assert_fail@plt+0xf0>
   116b8:	ldr	r2, [pc, #192]	; 11780 <__assert_fail@plt+0x4a4>
   116bc:	mov	r0, #1
   116c0:	bl	11120 <error@plt>
   116c4:	b	113a4 <__assert_fail@plt+0xc8>
   116c8:	ldr	r2, [pc, #180]	; 11784 <__assert_fail@plt+0x4a8>
   116cc:	mov	r1, r6
   116d0:	mov	r0, #1
   116d4:	bl	11120 <error@plt>
   116d8:	b	11428 <__assert_fail@plt+0x14c>
   116dc:	bl	111ec <__errno_location@plt>
   116e0:	ldr	r2, [pc, #160]	; 11788 <__assert_fail@plt+0x4ac>
   116e4:	ldr	r1, [r0]
   116e8:	mov	r0, #1
   116ec:	bl	11120 <error@plt>
   116f0:	b	11544 <__assert_fail@plt+0x268>
   116f4:	bl	111ec <__errno_location@plt>
   116f8:	ldr	r2, [pc, #100]	; 11764 <__assert_fail@plt+0x488>
   116fc:	ldr	r1, [r0]
   11700:	mov	r0, #0
   11704:	bl	11120 <error@plt>
   11708:	b	115e8 <__assert_fail@plt+0x30c>
   1170c:	bl	111ec <__errno_location@plt>
   11710:	ldr	r3, [r0]
   11714:	cmp	r3, #13
   11718:	beq	11724 <__assert_fail@plt+0x448>
   1171c:	mov	r0, #1
   11720:	bl	111b0 <exit@plt>
   11724:	ldr	r2, [pc, #96]	; 1178c <__assert_fail@plt+0x4b0>
   11728:	mov	r1, #0
   1172c:	mov	r0, #1
   11730:	bl	11120 <error@plt>
   11734:	b	1171c <__assert_fail@plt+0x440>
   11738:	andeq	r9, r2, ip, asr #4
   1173c:	muleq	r1, r4, r1
   11740:	muleq	r2, ip, r2
   11744:	muleq	r1, r8, r1
   11748:	strdeq	r9, [r2], -r4
   1174c:	andeq	r9, r2, r8, lsl r1
   11750:	andeq	r8, r1, r8, lsl r2
   11754:	andeq	r8, r1, ip, lsl r2
   11758:	muleq	r2, r8, r2
   1175c:	andeq	r1, r1, r4, ror #20
   11760:	andeq	r5, r0, r1, lsr #8
   11764:	andeq	r8, r1, r8, ror r2
   11768:	andeq	r8, r1, r8, lsl #4
   1176c:	andeq	r8, r1, r4, asr #3
   11770:	andeq	r8, r1, ip, asr #3
   11774:	andeq	r8, r1, r4, ror #3
   11778:	andeq	r8, r1, r0, ror #4
   1177c:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   11780:			; <UNDEFINED> instruction: 0x000181b0
   11784:	andeq	r8, r1, r4, lsr #4
   11788:	muleq	r1, r4, r2
   1178c:	andeq	r8, r1, r0, asr #4
   11790:	mov	fp, #0
   11794:	mov	lr, #0
   11798:	pop	{r1}		; (ldr r1, [sp], #4)
   1179c:	mov	r2, sp
   117a0:	push	{r2}		; (str r2, [sp, #-4]!)
   117a4:	push	{r0}		; (str r0, [sp, #-4]!)
   117a8:	ldr	ip, [pc, #16]	; 117c0 <__assert_fail@plt+0x4e4>
   117ac:	push	{ip}		; (str ip, [sp, #-4]!)
   117b0:	ldr	r0, [pc, #12]	; 117c4 <__assert_fail@plt+0x4e8>
   117b4:	ldr	r3, [pc, #12]	; 117c8 <__assert_fail@plt+0x4ec>
   117b8:	bl	11150 <__libc_start_main@plt>
   117bc:	bl	112c4 <abort@plt>
   117c0:	andeq	r8, r1, r0, asr #2
   117c4:	andeq	r1, r1, r8, ror #5
   117c8:	andeq	r8, r1, r0, ror #1
   117cc:	ldr	r3, [pc, #20]	; 117e8 <__assert_fail@plt+0x50c>
   117d0:	ldr	r2, [pc, #20]	; 117ec <__assert_fail@plt+0x510>
   117d4:	add	r3, pc, r3
   117d8:	ldr	r2, [r3, r2]
   117dc:	cmp	r2, #0
   117e0:	bxeq	lr
   117e4:	b	11174 <__gmon_start__@plt>
   117e8:	andeq	r7, r1, r4, lsr #16
   117ec:	andeq	r0, r0, ip, lsl #2
   117f0:	ldr	r3, [pc, #28]	; 11814 <__assert_fail@plt+0x538>
   117f4:	ldr	r0, [pc, #28]	; 11818 <__assert_fail@plt+0x53c>
   117f8:	sub	r3, r3, r0
   117fc:	cmp	r3, #6
   11800:	bxls	lr
   11804:	ldr	r3, [pc, #16]	; 1181c <__assert_fail@plt+0x540>
   11808:	cmp	r3, #0
   1180c:	bxeq	lr
   11810:	bx	r3
   11814:	andeq	r9, r2, r7, lsr r2
   11818:	andeq	r9, r2, r4, lsr r2
   1181c:	andeq	r0, r0, r0
   11820:	ldr	r1, [pc, #36]	; 1184c <__assert_fail@plt+0x570>
   11824:	ldr	r0, [pc, #36]	; 11850 <__assert_fail@plt+0x574>
   11828:	sub	r1, r1, r0
   1182c:	asr	r1, r1, #2
   11830:	add	r1, r1, r1, lsr #31
   11834:	asrs	r1, r1, #1
   11838:	bxeq	lr
   1183c:	ldr	r3, [pc, #16]	; 11854 <__assert_fail@plt+0x578>
   11840:	cmp	r3, #0
   11844:	bxeq	lr
   11848:	bx	r3
   1184c:	andeq	r9, r2, r4, lsr r2
   11850:	andeq	r9, r2, r4, lsr r2
   11854:	andeq	r0, r0, r0
   11858:	push	{r4, lr}
   1185c:	ldr	r4, [pc, #24]	; 1187c <__assert_fail@plt+0x5a0>
   11860:	ldrb	r3, [r4]
   11864:	cmp	r3, #0
   11868:	popne	{r4, pc}
   1186c:	bl	117f0 <__assert_fail@plt+0x514>
   11870:	mov	r3, #1
   11874:	strb	r3, [r4]
   11878:	pop	{r4, pc}
   1187c:	andeq	r9, r2, r8, asr #4
   11880:	ldr	r0, [pc, #40]	; 118b0 <__assert_fail@plt+0x5d4>
   11884:	ldr	r3, [r0]
   11888:	cmp	r3, #0
   1188c:	bne	11894 <__assert_fail@plt+0x5b8>
   11890:	b	11820 <__assert_fail@plt+0x544>
   11894:	ldr	r3, [pc, #24]	; 118b4 <__assert_fail@plt+0x5d8>
   11898:	cmp	r3, #0
   1189c:	beq	11890 <__assert_fail@plt+0x5b4>
   118a0:	push	{r4, lr}
   118a4:	blx	r3
   118a8:	pop	{r4, lr}
   118ac:	b	11820 <__assert_fail@plt+0x544>
   118b0:	andeq	r8, r2, ip, lsl #30
   118b4:	andeq	r0, r0, r0
   118b8:	sub	r0, r0, #52	; 0x34
   118bc:	cmp	r0, #67	; 0x43
   118c0:	ldrls	pc, [pc, r0, lsl #2]
   118c4:	b	11a40 <__assert_fail@plt+0x764>
   118c8:	andeq	r1, r1, ip, ror #19
   118cc:	andeq	r1, r1, r0, asr #20
   118d0:	andeq	r1, r1, r0, lsl #20
   118d4:	andeq	r1, r1, r0, asr #20
   118d8:	andeq	r1, r1, r4, lsl sl
   118dc:	andeq	r1, r1, r0, asr #20
   118e0:	andeq	r1, r1, r0, asr #20
   118e4:	andeq	r1, r1, r0, asr #20
   118e8:	andeq	r1, r1, r0, asr #20
   118ec:	andeq	r1, r1, r0, asr #20
   118f0:	andeq	r1, r1, r0, asr #20
   118f4:	andeq	r1, r1, r0, asr #20
   118f8:	andeq	r1, r1, r0, asr #20
   118fc:	andeq	r1, r1, r0, asr #20
   11900:	andeq	r1, r1, r0, asr #20
   11904:	andeq	r1, r1, r0, asr #20
   11908:	andeq	r1, r1, r0, asr #20
   1190c:	andeq	r1, r1, r0, asr #20
   11910:	andeq	r1, r1, r0, asr #20
   11914:	andeq	r1, r1, r0, asr #20
   11918:	andeq	r1, r1, r0, asr #20
   1191c:	andeq	r1, r1, r0, asr #20
   11920:	andeq	r1, r1, r0, asr #20
   11924:	andeq	r1, r1, r0, asr #20
   11928:	andeq	r1, r1, r4, lsl sl
   1192c:	andeq	r1, r1, r0, asr #20
   11930:	andeq	r1, r1, r0, asr #20
   11934:	andeq	r1, r1, r0, asr #20
   11938:	andeq	r1, r1, r0, asr #20
   1193c:	andeq	r1, r1, r0, asr #20
   11940:	andeq	r1, r1, r0, asr #20
   11944:	andeq	r1, r1, r0, asr #20
   11948:	andeq	r1, r1, r0, asr #20
   1194c:	andeq	r1, r1, r0, asr #20
   11950:	andeq	r1, r1, r0, asr #20
   11954:	andeq	r1, r1, r0, asr #20
   11958:	andeq	r1, r1, r0, asr #20
   1195c:	andeq	r1, r1, r0, asr #20
   11960:	andeq	r1, r1, r0, asr #20
   11964:	andeq	r1, r1, r0, asr #20
   11968:	andeq	r1, r1, r0, asr #20
   1196c:	andeq	r1, r1, r0, asr #20
   11970:	andeq	r1, r1, r0, asr #20
   11974:	andeq	r1, r1, r0, asr #20
   11978:	andeq	r1, r1, r0, asr #20
   1197c:	andeq	r1, r1, r0, asr #20
   11980:	andeq	r1, r1, r0, asr #20
   11984:	andeq	r1, r1, r0, asr #20
   11988:	andeq	r1, r1, ip, lsl sl
   1198c:	andeq	r1, r1, r4, lsl sl
   11990:	andeq	r1, r1, r0, asr #20
   11994:	andeq	r1, r1, r0, asr #20
   11998:	andeq	r1, r1, r0, asr #20
   1199c:	andeq	r1, r1, r0, asr #20
   119a0:	andeq	r1, r1, r0, asr #20
   119a4:	andeq	r1, r1, r0, asr #20
   119a8:	andeq	r1, r1, r0, lsr sl
   119ac:	andeq	r1, r1, r0, asr #20
   119b0:	ldrdeq	r1, [r1], -r8
   119b4:	andeq	r1, r1, r0, asr #20
   119b8:	andeq	r1, r1, r0, asr #20
   119bc:	andeq	r1, r1, r0, asr #20
   119c0:	andeq	r1, r1, r0, asr #20
   119c4:	andeq	r1, r1, r0, asr #20
   119c8:	andeq	r1, r1, r0, asr #20
   119cc:	andeq	r1, r1, r0, asr #20
   119d0:	andeq	r1, r1, r0, asr #20
   119d4:	andeq	r1, r1, r4, lsl sl
   119d8:	ldr	r3, [pc, #104]	; 11a48 <__assert_fail@plt+0x76c>
   119dc:	mov	r2, #1
   119e0:	mov	r0, #0
   119e4:	str	r2, [r3, #12]
   119e8:	bx	lr
   119ec:	ldr	r3, [pc, #84]	; 11a48 <__assert_fail@plt+0x76c>
   119f0:	mov	r2, #2
   119f4:	mov	r0, #0
   119f8:	strh	r2, [r3]
   119fc:	bx	lr
   11a00:	ldr	r3, [pc, #64]	; 11a48 <__assert_fail@plt+0x76c>
   11a04:	mov	r2, #10
   11a08:	mov	r0, #0
   11a0c:	strh	r2, [r3]
   11a10:	bx	lr
   11a14:	mov	r0, #0
   11a18:	bx	lr
   11a1c:	ldr	r3, [pc, #36]	; 11a48 <__assert_fail@plt+0x76c>
   11a20:	mov	r2, #1
   11a24:	mov	r0, #0
   11a28:	str	r2, [r3, #4]
   11a2c:	bx	lr
   11a30:	ldr	r3, [pc, #16]	; 11a48 <__assert_fail@plt+0x76c>
   11a34:	mov	r0, #0
   11a38:	str	r1, [r3, #8]
   11a3c:	bx	lr
   11a40:	mov	r0, #7
   11a44:	bx	lr
   11a48:	andeq	r9, r2, ip, asr #4
   11a4c:	ldr	r2, [pc, #12]	; 11a60 <__assert_fail@plt+0x784>
   11a50:	ldr	r3, [r2, #16]
   11a54:	add	r3, r3, #1
   11a58:	str	r3, [r2, #16]
   11a5c:	bx	lr
   11a60:	andeq	r9, r2, ip, asr #4
   11a64:	push	{lr}		; (str lr, [sp, #-4]!)
   11a68:	sub	sp, sp, #12
   11a6c:	ldr	r3, [pc, #24]	; 11a8c <__assert_fail@plt+0x7b0>
   11a70:	add	r1, sp, #8
   11a74:	mov	r2, #1
   11a78:	strb	r0, [r1, #-1]!
   11a7c:	ldr	r0, [r3]
   11a80:	bl	1121c <write@plt>
   11a84:	add	sp, sp, #12
   11a88:	pop	{pc}		; (ldr pc, [sp], #4)
   11a8c:	muleq	r2, r8, r2
   11a90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11a94:	cmp	r0, #0
   11a98:	cmpeq	r2, #0
   11a9c:	sub	sp, sp, #8576	; 0x2180
   11aa0:	sub	sp, sp, #44	; 0x2c
   11aa4:	moveq	r4, #1
   11aa8:	movne	r4, #0
   11aac:	mov	r6, r3
   11ab0:	beq	11d80 <__assert_fail@plt+0xaa4>
   11ab4:	mov	r2, r4
   11ab8:	mov	r0, #2
   11abc:	bl	11048 <sigprocmask@plt>
   11ac0:	add	r3, sp, #296	; 0x128
   11ac4:	sub	r3, r3, #12
   11ac8:	add	r0, sp, #288	; 0x120
   11acc:	str	r3, [sp, #12]
   11ad0:	add	r5, sp, #424	; 0x1a8
   11ad4:	bl	1124c <sigemptyset@plt>
   11ad8:	ldr	r3, [pc, #972]	; 11eac <__assert_fail@plt+0xbd0>
   11adc:	ldr	r1, [sp, #12]
   11ae0:	mov	ip, #268435456	; 0x10000000
   11ae4:	mov	r2, r4
   11ae8:	mov	r0, #13
   11aec:	str	r3, [r5, #-140]	; 0xffffff74
   11af0:	str	ip, [r5, #-8]
   11af4:	bl	110f0 <sigaction@plt>
   11af8:	mov	r2, r4
   11afc:	add	r3, sp, #24
   11b00:	add	r1, sp, #152	; 0x98
   11b04:	str	r2, [r3, #4]!
   11b08:	cmp	r1, r3
   11b0c:	bne	11b04 <__assert_fail@plt+0x828>
   11b10:	ldr	r8, [pc, #920]	; 11eb0 <__assert_fail@plt+0xbd4>
   11b14:	cmp	r6, #0
   11b18:	add	sl, r6, #31
   11b1c:	ldr	r4, [r8]
   11b20:	movge	sl, r6
   11b24:	cmp	r4, #0
   11b28:	add	r3, r4, #31
   11b2c:	movge	r3, r4
   11b30:	asr	r1, r4, #31
   11b34:	asr	r3, r3, #5
   11b38:	lsr	ip, r1, #27
   11b3c:	asr	r2, r6, #31
   11b40:	add	r3, r5, r3, lsl #2
   11b44:	add	r1, r4, ip
   11b48:	lsr	r2, r2, #27
   11b4c:	and	r1, r1, #31
   11b50:	asr	sl, sl, #5
   11b54:	ldr	r0, [r3, #-396]	; 0xfffffe74
   11b58:	sub	r1, r1, ip
   11b5c:	mov	r7, #1
   11b60:	add	r9, r6, r2
   11b64:	lsl	sl, sl, #2
   11b68:	and	r9, r9, #31
   11b6c:	orr	r0, r0, r7, lsl r1
   11b70:	sub	r9, r9, r2
   11b74:	add	r1, r5, sl
   11b78:	str	r0, [r3, #-396]	; 0xfffffe74
   11b7c:	lsl	r9, r7, r9
   11b80:	ldr	r3, [r1, #-396]	; 0xfffffe74
   11b84:	sub	r2, r5, #268	; 0x10c
   11b88:	str	r2, [sp, #12]
   11b8c:	orr	r3, r3, r9
   11b90:	sub	r2, r5, #396	; 0x18c
   11b94:	ldr	fp, [pc, #792]	; 11eb4 <__assert_fail@plt+0xbd8>
   11b98:	str	r2, [sp, #16]
   11b9c:	str	r3, [r1, #-396]	; 0xfffffe74
   11ba0:	b	11c40 <__assert_fail@plt+0x964>
   11ba4:	ldr	r3, [r8]
   11ba8:	cmp	r3, #0
   11bac:	add	r2, r3, #31
   11bb0:	movge	r2, r3
   11bb4:	asr	r1, r3, #31
   11bb8:	asr	r2, r2, #5
   11bbc:	lsr	r1, r1, #27
   11bc0:	add	r2, r5, r2, lsl #2
   11bc4:	add	r3, r3, r1
   11bc8:	and	r3, r3, #31
   11bcc:	ldr	r2, [r2, #-268]	; 0xfffffef4
   11bd0:	sub	r3, r3, r1
   11bd4:	ands	r3, r2, r7, lsl r3
   11bd8:	bne	11cd8 <__assert_fail@plt+0x9fc>
   11bdc:	add	r4, r5, sl
   11be0:	ldr	r3, [r4, #-268]	; 0xfffffef4
   11be4:	tst	r9, r3
   11be8:	bne	11ca0 <__assert_fail@plt+0x9c4>
   11bec:	ldr	r4, [r8]
   11bf0:	cmp	r4, #0
   11bf4:	add	r3, r4, #31
   11bf8:	movge	r3, r4
   11bfc:	asr	r1, r4, #31
   11c00:	asr	r3, r3, #5
   11c04:	lsr	r1, r1, #27
   11c08:	add	r3, r5, r3, lsl #2
   11c0c:	add	r2, r4, r1
   11c10:	and	r2, r2, #31
   11c14:	ldr	r0, [r3, #-396]	; 0xfffffe74
   11c18:	sub	r3, r2, r1
   11c1c:	ands	r3, r0, r7, lsl r3
   11c20:	bne	11c34 <__assert_fail@plt+0x958>
   11c24:	add	r3, r5, sl
   11c28:	ldr	r3, [r3, #-396]	; 0xfffffe74
   11c2c:	tst	r9, r3
   11c30:	beq	11d74 <__assert_fail@plt+0xa98>
   11c34:	ldr	r3, [fp, #16]
   11c38:	cmp	r3, #0
   11c3c:	bne	11d74 <__assert_fail@plt+0xa98>
   11c40:	mov	r2, #128	; 0x80
   11c44:	ldr	r1, [sp, #16]
   11c48:	ldr	r0, [sp, #12]
   11c4c:	bl	11084 <memcpy@plt>
   11c50:	cmp	r6, r4
   11c54:	movlt	r0, r4
   11c58:	movge	r0, r6
   11c5c:	mov	r4, #0
   11c60:	str	r4, [sp]
   11c64:	mov	r3, r4
   11c68:	mov	r2, r4
   11c6c:	add	r1, sp, #156	; 0x9c
   11c70:	add	r0, r0, #1
   11c74:	bl	110a8 <select@plt>
   11c78:	cmp	r0, r4
   11c7c:	bge	11ba4 <__assert_fail@plt+0x8c8>
   11c80:	bl	111ec <__errno_location@plt>
   11c84:	ldr	r1, [r0]
   11c88:	cmp	r1, #4
   11c8c:	beq	11bec <__assert_fail@plt+0x910>
   11c90:	ldr	r2, [pc, #544]	; 11eb8 <__assert_fail@plt+0xbdc>
   11c94:	mov	r0, r7
   11c98:	bl	11120 <error@plt>
   11c9c:	b	11bec <__assert_fail@plt+0x910>
   11ca0:	bl	111ec <__errno_location@plt>
   11ca4:	mov	r2, #0
   11ca8:	mov	r1, r5
   11cac:	str	r2, [r0]
   11cb0:	str	r0, [sp, #20]
   11cb4:	mov	r2, #8192	; 0x2000
   11cb8:	mov	r0, r6
   11cbc:	bl	11030 <read@plt>
   11cc0:	subs	r2, r0, #0
   11cc4:	ble	11d0c <__assert_fail@plt+0xa30>
   11cc8:	mov	r1, r5
   11ccc:	mov	r0, r7
   11cd0:	bl	1121c <write@plt>
   11cd4:	b	11bec <__assert_fail@plt+0x910>
   11cd8:	bl	111ec <__errno_location@plt>
   11cdc:	mov	r2, #8192	; 0x2000
   11ce0:	mov	r1, r5
   11ce4:	str	r4, [r0]
   11ce8:	str	r0, [sp, #20]
   11cec:	ldr	r0, [r8]
   11cf0:	bl	11030 <read@plt>
   11cf4:	subs	r2, r0, #0
   11cf8:	ble	11d28 <__assert_fail@plt+0xa4c>
   11cfc:	mov	r1, r5
   11d00:	mov	r0, #2
   11d04:	bl	1121c <write@plt>
   11d08:	b	11bdc <__assert_fail@plt+0x900>
   11d0c:	ldr	r3, [sp, #20]
   11d10:	ldr	r3, [r3]
   11d14:	cmp	r3, #11
   11d18:	ldrne	r3, [r4, #-396]	; 0xfffffe74
   11d1c:	bicne	r3, r3, r9
   11d20:	strne	r3, [r4, #-396]	; 0xfffffe74
   11d24:	b	11bec <__assert_fail@plt+0x910>
   11d28:	ldr	r3, [sp, #20]
   11d2c:	ldr	r3, [r3]
   11d30:	cmp	r3, #11
   11d34:	beq	11bdc <__assert_fail@plt+0x900>
   11d38:	ldr	r3, [r8]
   11d3c:	cmp	r3, #0
   11d40:	add	r2, r3, #31
   11d44:	movge	r2, r3
   11d48:	asr	r1, r3, #31
   11d4c:	asr	r2, r2, #5
   11d50:	lsr	r1, r1, #27
   11d54:	add	r2, r5, r2, lsl #2
   11d58:	add	r3, r3, r1
   11d5c:	and	r3, r3, #31
   11d60:	ldr	r0, [r2, #-396]	; 0xfffffe74
   11d64:	sub	r3, r3, r1
   11d68:	bic	r3, r0, r7, lsl r3
   11d6c:	str	r3, [r2, #-396]	; 0xfffffe74
   11d70:	b	11bdc <__assert_fail@plt+0x900>
   11d74:	add	sp, sp, #8576	; 0x2180
   11d78:	add	sp, sp, #44	; 0x2c
   11d7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11d80:	ldr	r3, [pc, #296]	; 11eb0 <__assert_fail@plt+0xbd4>
   11d84:	add	r5, sp, #424	; 0x1a8
   11d88:	add	r7, sp, #408	; 0x198
   11d8c:	ldr	r0, [r3]
   11d90:	bl	112d0 <close@plt>
   11d94:	bl	111ec <__errno_location@plt>
   11d98:	asr	r2, r6, #31
   11d9c:	cmp	r6, #0
   11da0:	lsr	r2, r2, #27
   11da4:	add	r1, r6, r2
   11da8:	add	r3, r6, #31
   11dac:	and	r1, r1, #31
   11db0:	movge	r3, r6
   11db4:	sub	r2, r1, r2
   11db8:	mov	r1, #1
   11dbc:	asr	r3, r3, #5
   11dc0:	lsl	sl, r1, r2
   11dc4:	add	fp, r5, r3, lsl #2
   11dc8:	mov	r8, r0
   11dcc:	mov	r4, #0
   11dd0:	str	r4, [r8]
   11dd4:	mov	r0, r4
   11dd8:	mov	r2, #8192	; 0x2000
   11ddc:	mov	r1, r5
   11de0:	bl	11030 <read@plt>
   11de4:	subs	r9, r0, #0
   11de8:	ble	11e98 <__assert_fail@plt+0xbbc>
   11dec:	add	r3, r6, #1
   11df0:	str	r3, [sp, #16]
   11df4:	str	r5, [sp, #12]
   11df8:	add	r3, sp, #280	; 0x118
   11dfc:	str	r4, [r3, #4]!
   11e00:	cmp	r7, r3
   11e04:	bne	11dfc <__assert_fail@plt+0xb20>
   11e08:	ldr	ip, [fp, #-140]	; 0xffffff74
   11e0c:	mov	r3, r4
   11e10:	orr	ip, ip, sl
   11e14:	str	r4, [sp]
   11e18:	add	r2, sp, #284	; 0x11c
   11e1c:	mov	r1, #0
   11e20:	ldr	r0, [sp, #16]
   11e24:	str	ip, [fp, #-140]	; 0xffffff74
   11e28:	bl	110a8 <select@plt>
   11e2c:	cmp	r0, #0
   11e30:	blt	11e70 <__assert_fail@plt+0xb94>
   11e34:	ldr	r3, [fp, #-140]	; 0xffffff74
   11e38:	tst	sl, r3
   11e3c:	beq	11df8 <__assert_fail@plt+0xb1c>
   11e40:	mov	r2, r9
   11e44:	ldr	r1, [sp, #12]
   11e48:	mov	r0, r6
   11e4c:	bl	1121c <write@plt>
   11e50:	cmp	r0, #0
   11e54:	blt	11e8c <__assert_fail@plt+0xbb0>
   11e58:	ldr	r3, [sp, #12]
   11e5c:	subs	r9, r9, r0
   11e60:	add	r3, r3, r0
   11e64:	str	r3, [sp, #12]
   11e68:	bne	11df8 <__assert_fail@plt+0xb1c>
   11e6c:	b	11dcc <__assert_fail@plt+0xaf0>
   11e70:	ldr	r1, [r8]
   11e74:	cmp	r1, #4
   11e78:	beq	11df8 <__assert_fail@plt+0xb1c>
   11e7c:	ldr	r2, [pc, #52]	; 11eb8 <__assert_fail@plt+0xbdc>
   11e80:	mov	r0, #1
   11e84:	bl	11120 <error@plt>
   11e88:	b	11df8 <__assert_fail@plt+0xb1c>
   11e8c:	ldr	r3, [r8]
   11e90:	cmp	r3, #11
   11e94:	beq	11df8 <__assert_fail@plt+0xb1c>
   11e98:	mov	r0, r6
   11e9c:	mov	r1, #1
   11ea0:	bl	11234 <shutdown@plt>
   11ea4:	mov	r0, #0
   11ea8:	bl	111b0 <exit@plt>
   11eac:	andeq	r1, r1, ip, asr #20
   11eb0:	muleq	r2, r8, r2
   11eb4:	andeq	r9, r2, ip, asr #4
   11eb8:	andeq	r8, r1, r0, lsl #3
   11ebc:	ldr	r3, [r0]
   11ec0:	push	{r4, r5, r6, r7, r8, lr}
   11ec4:	cmp	r3, #0
   11ec8:	mov	r5, r0
   11ecc:	beq	11f60 <__assert_fail@plt+0xc84>
   11ed0:	mov	r6, r0
   11ed4:	mov	r4, #0
   11ed8:	mov	r0, r3
   11edc:	bl	111bc <strlen@plt>
   11ee0:	ldr	r3, [r6, #4]!
   11ee4:	add	r4, r4, #1
   11ee8:	cmp	r3, #0
   11eec:	add	r4, r4, r0
   11ef0:	mov	r0, r4
   11ef4:	bne	11ed8 <__assert_fail@plt+0xbfc>
   11ef8:	bl	1395c <argp_parse@@Base+0x1478>
   11efc:	subs	r6, r0, #0
   11f00:	beq	11f68 <__assert_fail@plt+0xc8c>
   11f04:	ldr	r4, [r5]
   11f08:	cmp	r4, #0
   11f0c:	beq	11f58 <__assert_fail@plt+0xc7c>
   11f10:	mov	r3, r6
   11f14:	mov	r7, #32
   11f18:	mov	r0, r3
   11f1c:	mov	r1, r4
   11f20:	bl	11114 <strcpy@plt>
   11f24:	mov	r1, r4
   11f28:	bl	11114 <strcpy@plt>
   11f2c:	ldrb	r3, [r0]
   11f30:	cmp	r3, #0
   11f34:	beq	11f44 <__assert_fail@plt+0xc68>
   11f38:	ldrb	r3, [r0, #1]!
   11f3c:	cmp	r3, #0
   11f40:	bne	11f38 <__assert_fail@plt+0xc5c>
   11f44:	ldr	r4, [r5, #4]!
   11f48:	cmp	r4, #0
   11f4c:	strbne	r7, [r0]
   11f50:	addne	r3, r0, #1
   11f54:	bne	11f18 <__assert_fail@plt+0xc3c>
   11f58:	mov	r0, r6
   11f5c:	pop	{r4, r5, r6, r7, r8, pc}
   11f60:	mov	r0, r3
   11f64:	b	11ef8 <__assert_fail@plt+0xc1c>
   11f68:	bl	111ec <__errno_location@plt>
   11f6c:	ldr	r2, [pc, #12]	; 11f80 <__assert_fail@plt+0xca4>
   11f70:	ldr	r1, [r0]
   11f74:	mov	r0, #1
   11f78:	bl	11120 <error@plt>
   11f7c:	b	11f04 <__assert_fail@plt+0xc28>
   11f80:	andeq	r8, r1, r8, lsl #3
   11f84:	ldr	r3, [r0]
   11f88:	push	{r4, r5, r6, lr}
   11f8c:	cmp	r3, #0
   11f90:	ldr	r5, [r0, #16]
   11f94:	beq	11ffc <__assert_fail@plt+0xd20>
   11f98:	ldr	r0, [r1, #8]
   11f9c:	mov	r2, #0
   11fa0:	add	r0, r0, #1
   11fa4:	str	r0, [r1, #8]
   11fa8:	b	11fb0 <__assert_fail@plt+0xcd4>
   11fac:	add	r2, r2, #1
   11fb0:	add	r3, r3, #24
   11fb4:	ldr	r0, [r3, #-20]	; 0xffffffec
   11fb8:	cmp	r0, #0
   11fbc:	bne	11fac <__assert_fail@plt+0xcd0>
   11fc0:	ldr	r0, [r3, #-24]	; 0xffffffe8
   11fc4:	cmp	r0, #0
   11fc8:	bne	11fac <__assert_fail@plt+0xcd0>
   11fcc:	ldr	r0, [r3, #-8]
   11fd0:	cmp	r0, #0
   11fd4:	bne	11fac <__assert_fail@plt+0xcd0>
   11fd8:	ldr	r0, [r3, #-4]
   11fdc:	cmp	r0, #0
   11fe0:	bne	11fac <__assert_fail@plt+0xcd0>
   11fe4:	ldm	r1, {r0, r3}
   11fe8:	add	ip, r2, r2, lsl #1
   11fec:	add	r0, r0, ip
   11ff0:	add	r2, r3, r2
   11ff4:	stm	r1, {r0, r2}
   11ff8:	b	12010 <__assert_fail@plt+0xd34>
   11ffc:	ldr	r3, [r0, #4]
   12000:	cmp	r3, #0
   12004:	ldrne	r3, [r1, #8]
   12008:	addne	r3, r3, #1
   1200c:	strne	r3, [r1, #8]
   12010:	cmp	r5, #0
   12014:	popeq	{r4, r5, r6, pc}
   12018:	ldr	r0, [r5]
   1201c:	cmp	r0, #0
   12020:	popeq	{r4, r5, r6, pc}
   12024:	mov	r4, r1
   12028:	mov	r1, r4
   1202c:	bl	11f84 <__assert_fail@plt+0xca8>
   12030:	ldr	r3, [r4, #12]
   12034:	ldr	r0, [r5, #16]!
   12038:	add	r3, r3, #1
   1203c:	cmp	r0, #0
   12040:	str	r3, [r4, #12]
   12044:	bne	12028 <__assert_fail@plt+0xd4c>
   12048:	pop	{r4, r5, r6, pc}
   1204c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12050:	sub	sp, sp, #36	; 0x24
   12054:	ldr	sl, [r0]
   12058:	str	r0, [sp, #12]
   1205c:	cmp	sl, #0
   12060:	str	r1, [sp, #16]
   12064:	str	r2, [sp, #20]
   12068:	mov	r9, r3
   1206c:	ldr	r8, [r0, #16]
   12070:	ldr	r7, [sp, #72]	; 0x48
   12074:	beq	12240 <__assert_fail@plt+0xf64>
   12078:	add	fp, sl, #24
   1207c:	str	r8, [sp, #28]
   12080:	str	r3, [sp, #24]
   12084:	ldr	r4, [fp, #-20]	; 0xffffffec
   12088:	sub	r1, fp, #24
   1208c:	cmp	r4, #0
   12090:	bne	120a0 <__assert_fail@plt+0xdc4>
   12094:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12098:	cmp	r3, #0
   1209c:	beq	12214 <__assert_fail@plt+0xf38>
   120a0:	ldr	r3, [fp, #-12]
   120a4:	tst	r3, #4
   120a8:	moveq	sl, r1
   120ac:	moveq	r5, r3
   120b0:	ldrne	r5, [sl, #12]
   120b4:	ands	r5, r5, #8
   120b8:	bne	121fc <__assert_fail@plt+0xf20>
   120bc:	tst	r3, #8
   120c0:	bne	1213c <__assert_fail@plt+0xe60>
   120c4:	sub	r3, r4, #1
   120c8:	cmp	r3, #254	; 0xfe
   120cc:	bhi	1213c <__assert_fail@plt+0xe60>
   120d0:	bl	111a4 <__ctype_b_loc@plt>
   120d4:	lsl	r3, r4, #1
   120d8:	ldr	r1, [r0]
   120dc:	ldrh	r3, [r1, r3]
   120e0:	tst	r3, #16384	; 0x4000
   120e4:	beq	1213c <__assert_fail@plt+0xe60>
   120e8:	ldr	r3, [r7, #4]
   120ec:	add	r1, r3, #1
   120f0:	str	r1, [r7, #4]
   120f4:	strb	r4, [r3]
   120f8:	ldr	r3, [sl, #8]
   120fc:	cmp	r3, #0
   12100:	beq	12130 <__assert_fail@plt+0xe54>
   12104:	ldr	r3, [r7, #4]
   12108:	mov	r2, #58	; 0x3a
   1210c:	add	r1, r3, #1
   12110:	str	r1, [r7, #4]
   12114:	strb	r2, [r3]
   12118:	ldr	r3, [sl, #12]
   1211c:	tst	r3, #1
   12120:	ldrne	r3, [r7, #4]
   12124:	addne	r1, r3, #1
   12128:	strne	r1, [r7, #4]
   1212c:	strbne	r2, [r3]
   12130:	ldr	r3, [r7, #4]
   12134:	mov	r2, #0
   12138:	strb	r2, [r3]
   1213c:	ldr	r4, [fp, #-24]	; 0xffffffe8
   12140:	cmp	r4, #0
   12144:	beq	121fc <__assert_fail@plt+0xf20>
   12148:	ldr	r8, [r7]
   1214c:	ldr	r6, [r8, #8]
   12150:	ldr	r0, [r6]
   12154:	cmp	r0, #0
   12158:	beq	1217c <__assert_fail@plt+0xea0>
   1215c:	mov	r9, r6
   12160:	mov	r1, r4
   12164:	bl	10ff4 <strcmp@plt>
   12168:	cmp	r0, #0
   1216c:	beq	12204 <__assert_fail@plt+0xf28>
   12170:	ldr	r0, [r9, #16]!
   12174:	cmp	r0, #0
   12178:	bne	12160 <__assert_fail@plt+0xe84>
   1217c:	ldr	r3, [sl, #8]
   12180:	ldr	r1, [r7, #8]
   12184:	cmp	r3, #0
   12188:	str	r4, [r1]
   1218c:	beq	121a0 <__assert_fail@plt+0xec4>
   12190:	ldr	r3, [sl, #12]
   12194:	tst	r3, #1
   12198:	moveq	r5, #1
   1219c:	movne	r5, #2
   121a0:	str	r5, [r1, #4]
   121a4:	ldr	ip, [fp, #-20]	; 0xffffffec
   121a8:	mov	r3, #0
   121ac:	cmp	ip, r3
   121b0:	str	r3, [r1, #8]
   121b4:	ldr	r2, [sp, #24]
   121b8:	ldr	r3, [r8, #48]	; 0x30
   121bc:	ldreq	ip, [sl, #4]
   121c0:	sub	r3, r2, r3
   121c4:	bic	ip, ip, #-16777216	; 0xff000000
   121c8:	asr	r3, r3, #2
   121cc:	add	lr, r1, #16
   121d0:	rsb	r0, r3, r3, lsl #3
   121d4:	add	r0, r0, r0, lsl #6
   121d8:	add	r0, r3, r0, lsl #3
   121dc:	rsb	r0, r0, r0, lsl #15
   121e0:	add	r3, r3, r0, lsl #3
   121e4:	add	r3, r3, #1
   121e8:	add	r3, ip, r3, lsl #24
   121ec:	str	r3, [r1, #12]
   121f0:	mov	r3, #0
   121f4:	str	lr, [r7, #8]
   121f8:	str	r3, [r1, #16]
   121fc:	add	fp, fp, #24
   12200:	b	12084 <__assert_fail@plt+0xda8>
   12204:	sub	r6, r9, r6
   12208:	cmn	r6, #15
   1220c:	bge	121fc <__assert_fail@plt+0xf20>
   12210:	b	1217c <__assert_fail@plt+0xea0>
   12214:	ldr	r3, [fp, #-8]
   12218:	cmp	r3, #0
   1221c:	bne	120a0 <__assert_fail@plt+0xdc4>
   12220:	ldr	r3, [fp, #-4]
   12224:	cmp	r3, #0
   12228:	bne	120a0 <__assert_fail@plt+0xdc4>
   1222c:	ldr	r3, [sp, #12]
   12230:	ldr	r8, [sp, #28]
   12234:	ldr	r9, [sp, #24]
   12238:	ldr	r3, [r3, #4]
   1223c:	b	12258 <__assert_fail@plt+0xf7c>
   12240:	ldr	r3, [sp, #12]
   12244:	ldr	r3, [r3, #4]
   12248:	cmp	r3, #0
   1224c:	moveq	r0, r9
   12250:	moveq	r9, r3
   12254:	beq	122c8 <__assert_fail@plt+0xfec>
   12258:	ldr	r2, [r7, #4]
   1225c:	ldr	r1, [sp, #12]
   12260:	str	r3, [r9]
   12264:	cmp	r8, #0
   12268:	stmib	r9, {r1, r2}
   1226c:	ldr	r2, [sp, #16]
   12270:	mov	r3, #0
   12274:	str	r2, [r9, #16]
   12278:	ldr	r2, [sp, #20]
   1227c:	str	r3, [r9, #12]
   12280:	str	r2, [r9, #20]
   12284:	str	r3, [r9, #24]
   12288:	str	r3, [r9, #32]
   1228c:	str	r3, [r9, #28]
   12290:	beq	122c4 <__assert_fail@plt+0xfe8>
   12294:	ldr	r2, [r8]
   12298:	cmp	r2, r3
   1229c:	beq	12310 <__assert_fail@plt+0x1034>
   122a0:	add	r3, r3, #1
   122a4:	ldr	r2, [r8, r3, lsl #4]
   122a8:	cmp	r2, #0
   122ac:	bne	122a0 <__assert_fail@plt+0xfc4>
   122b0:	lsl	r3, r3, #2
   122b4:	ldr	r2, [r7, #12]
   122b8:	add	r3, r2, r3
   122bc:	str	r2, [r9, #28]
   122c0:	str	r3, [r7, #12]
   122c4:	add	r0, r9, #36	; 0x24
   122c8:	cmp	r8, #0
   122cc:	beq	12308 <__assert_fail@plt+0x102c>
   122d0:	ldr	r1, [r8]
   122d4:	cmp	r1, #0
   122d8:	beq	12308 <__assert_fail@plt+0x102c>
   122dc:	mov	r2, #0
   122e0:	add	r4, r2, #1
   122e4:	mov	r3, r0
   122e8:	str	r7, [sp]
   122ec:	mov	r0, r1
   122f0:	mov	r1, r9
   122f4:	bl	1204c <__assert_fail@plt+0xd70>
   122f8:	ldr	r1, [r8, r4, lsl #4]
   122fc:	mov	r2, r4
   12300:	cmp	r1, #0
   12304:	bne	122e0 <__assert_fail@plt+0x1004>
   12308:	add	sp, sp, #36	; 0x24
   1230c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12310:	mov	r3, r2
   12314:	b	122b4 <__assert_fail@plt+0xfd8>
   12318:	cmp	r0, #86	; 0x56
   1231c:	beq	12328 <__assert_fail@plt+0x104c>
   12320:	mov	r0, #7
   12324:	bx	lr
   12328:	ldr	r3, [pc, #104]	; 12398 <__assert_fail@plt+0x10bc>
   1232c:	push	{r4, lr}
   12330:	mov	r4, r2
   12334:	ldr	r3, [r3]
   12338:	cmp	r3, #0
   1233c:	beq	12360 <__assert_fail@plt+0x1084>
   12340:	mov	r1, r2
   12344:	ldr	r0, [r2, #48]	; 0x30
   12348:	blx	r3
   1234c:	ldr	r0, [r4, #16]
   12350:	ands	r0, r0, #32
   12354:	beq	12394 <__assert_fail@plt+0x10b8>
   12358:	mov	r0, #0
   1235c:	pop	{r4, pc}
   12360:	ldr	r3, [pc, #52]	; 1239c <__assert_fail@plt+0x10c0>
   12364:	ldr	r2, [r3]
   12368:	cmp	r2, #0
   1236c:	beq	12380 <__assert_fail@plt+0x10a4>
   12370:	ldr	r1, [pc, #40]	; 123a0 <__assert_fail@plt+0x10c4>
   12374:	ldr	r0, [r4, #48]	; 0x30
   12378:	bl	111d4 <fprintf@plt>
   1237c:	b	1234c <__assert_fail@plt+0x1070>
   12380:	ldr	r2, [pc, #28]	; 123a4 <__assert_fail@plt+0x10c8>
   12384:	ldr	r1, [pc, #28]	; 123a8 <__assert_fail@plt+0x10cc>
   12388:	mov	r0, r4
   1238c:	bl	16b84 <argp_error@@Base>
   12390:	b	1234c <__assert_fail@plt+0x1070>
   12394:	bl	111b0 <exit@plt>
   12398:	andeq	r9, r2, r4, ror #4
   1239c:	andeq	r9, r2, r0, lsr #5
   123a0:			; <UNDEFINED> instruction: 0x000186b8
   123a4:	andeq	r8, r1, r8, lsl r5
   123a8:	andeq	r8, r1, ip, lsr r5
   123ac:	cmn	r0, #3
   123b0:	push	{r4, r5, lr}
   123b4:	mov	r4, r2
   123b8:	sub	sp, sp, #12
   123bc:	beq	124a0 <__assert_fail@plt+0x11c4>
   123c0:	ble	12430 <__assert_fail@plt+0x1154>
   123c4:	cmn	r0, #2
   123c8:	beq	123f0 <__assert_fail@plt+0x1114>
   123cc:	cmp	r0, #63	; 0x3f
   123d0:	bne	12494 <__assert_fail@plt+0x11b8>
   123d4:	mov	r0, r4
   123d8:	ldr	r2, [pc, #236]	; 124cc <__assert_fail@plt+0x11f0>
   123dc:	ldr	r1, [r4, #48]	; 0x30
   123e0:	bl	16ad4 <argp_state_help@@Base>
   123e4:	mov	r0, #0
   123e8:	add	sp, sp, #12
   123ec:	pop	{r4, r5, pc}
   123f0:	ldr	r3, [pc, #216]	; 124d0 <__assert_fail@plt+0x11f4>
   123f4:	mov	r0, r1
   123f8:	str	r1, [sp, #4]
   123fc:	str	r1, [r3]
   12400:	bl	132d0 <argp_parse@@Base+0xdec>
   12404:	ldr	r3, [r4, #16]
   12408:	ldr	r2, [pc, #196]	; 124d4 <__assert_fail@plt+0x11f8>
   1240c:	and	r3, r3, #3
   12410:	cmp	r3, #1
   12414:	ldr	r1, [sp, #4]
   12418:	str	r0, [r4, #40]	; 0x28
   1241c:	str	r0, [r2]
   12420:	beq	124bc <__assert_fail@plt+0x11e0>
   12424:	mov	r0, #0
   12428:	add	sp, sp, #12
   1242c:	pop	{r4, r5, pc}
   12430:	cmn	r0, #4
   12434:	bne	12494 <__assert_fail@plt+0x11b8>
   12438:	cmp	r1, #0
   1243c:	ldr	r0, [pc, #148]	; 124d8 <__assert_fail@plt+0x11fc>
   12440:	mov	r2, #10
   12444:	movne	r0, r1
   12448:	mov	r1, #0
   1244c:	bl	11000 <strtol@plt>
   12450:	ldr	r4, [pc, #132]	; 124dc <__assert_fail@plt+0x1200>
   12454:	str	r0, [r4]
   12458:	ldr	r3, [r4]
   1245c:	cmp	r3, #0
   12460:	sub	r3, r3, #1
   12464:	str	r3, [r4]
   12468:	ble	12424 <__assert_fail@plt+0x1148>
   1246c:	mov	r5, #1
   12470:	mov	r0, r5
   12474:	bl	110b4 <sleep@plt>
   12478:	ldr	r3, [r4]
   1247c:	cmp	r3, #0
   12480:	sub	r3, r3, #1
   12484:	str	r3, [r4]
   12488:	bgt	12470 <__assert_fail@plt+0x1194>
   1248c:	mov	r0, #0
   12490:	b	12428 <__assert_fail@plt+0x114c>
   12494:	mov	r0, #7
   12498:	add	sp, sp, #12
   1249c:	pop	{r4, r5, pc}
   124a0:	mov	r0, r4
   124a4:	ldr	r2, [pc, #52]	; 124e0 <__assert_fail@plt+0x1204>
   124a8:	ldr	r1, [r4, #48]	; 0x30
   124ac:	bl	16ad4 <argp_state_help@@Base>
   124b0:	mov	r0, #0
   124b4:	add	sp, sp, #12
   124b8:	pop	{r4, r5, pc}
   124bc:	ldr	r3, [r4, #8]
   124c0:	mov	r0, #0
   124c4:	str	r1, [r3]
   124c8:	b	123e8 <__assert_fail@plt+0x110c>
   124cc:	andeq	r0, r0, sl, ror r2
   124d0:	andeq	r9, r2, ip, lsr r2
   124d4:	andeq	r9, r2, r8, lsr r2
   124d8:	andeq	r8, r1, r0, asr #10
   124dc:	andeq	r9, r2, r0, ror #4
   124e0:	andeq	r0, r0, r1, lsl #4

000124e4 <argp_parse@@Base>:
   124e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   124e8:	add	fp, sp, #32
   124ec:	tst	r3, #1
   124f0:	sub	sp, sp, #228	; 0xe4
   124f4:	mov	r6, r3
   124f8:	mov	r7, r0
   124fc:	str	r1, [fp, #-240]	; 0xffffff10
   12500:	str	r2, [fp, #-232]	; 0xffffff18
   12504:	bne	12530 <argp_parse@@Base+0x4c>
   12508:	ldr	r3, [pc, #3260]	; 131cc <argp_parse@@Base+0xce8>
   1250c:	ldr	r4, [pc, #3260]	; 131d0 <argp_parse@@Base+0xcec>
   12510:	ldr	r2, [r3]
   12514:	cmp	r2, #0
   12518:	ldreq	r2, [fp, #-232]	; 0xffffff18
   1251c:	ldreq	r2, [r2]
   12520:	streq	r2, [r3]
   12524:	ldr	r3, [r4]
   12528:	cmp	r3, #0
   1252c:	beq	12bd0 <argp_parse@@Base+0x6ec>
   12530:	ands	r3, r6, #16
   12534:	beq	12ad8 <argp_parse@@Base+0x5f4>
   12538:	sub	r4, fp, #196	; 0xc4
   1253c:	mov	r0, r4
   12540:	mov	r2, #36	; 0x24
   12544:	mov	r1, #0
   12548:	bl	11210 <memset@plt>
   1254c:	ands	r3, r6, #4
   12550:	str	r3, [fp, #-244]	; 0xffffff0c
   12554:	mov	r3, #0
   12558:	moveq	r0, #1
   1255c:	movne	r0, #0
   12560:	cmp	r7, r3
   12564:	str	r3, [fp, #-224]	; 0xffffff20
   12568:	str	r3, [fp, #-220]	; 0xffffff24
   1256c:	str	r3, [fp, #-216]	; 0xffffff28
   12570:	str	r0, [fp, #-228]	; 0xffffff1c
   12574:	beq	129dc <argp_parse@@Base+0x4f8>
   12578:	mov	r0, r7
   1257c:	sub	r1, fp, #228	; 0xe4
   12580:	bl	11f84 <__assert_fail@plt+0xca8>
   12584:	ldr	r5, [fp, #-220]	; 0xffffff24
   12588:	ldr	r9, [fp, #-216]	; 0xffffff28
   1258c:	add	r5, r5, #1
   12590:	ldr	r3, [fp, #-224]	; 0xffffff20
   12594:	add	r5, r5, r5, lsl #3
   12598:	lsl	r2, r9, #2
   1259c:	lsl	r5, r5, #2
   125a0:	add	r3, r3, #1
   125a4:	add	sl, r2, r5
   125a8:	ldr	r0, [fp, #-228]	; 0xffffff1c
   125ac:	add	r9, sl, r3, lsl #4
   125b0:	str	r2, [fp, #-236]	; 0xffffff14
   125b4:	add	r0, r9, r0
   125b8:	add	r0, r0, #1
   125bc:	bl	1395c <argp_parse@@Base+0x1478>
   125c0:	cmp	r0, #0
   125c4:	mov	r8, r0
   125c8:	str	r0, [fp, #-40]	; 0xffffffd8
   125cc:	moveq	r5, #12
   125d0:	beq	129d0 <argp_parse@@Base+0x4ec>
   125d4:	mov	r3, #1
   125d8:	str	r3, [fp, #-196]	; 0xffffff3c
   125dc:	str	r3, [fp, #-192]	; 0xffffff40
   125e0:	ldm	r4!, {r0, r1, r2, r3}
   125e4:	sub	ip, fp, #148	; 0x94
   125e8:	add	r5, r8, r5
   125ec:	str	r5, [fp, #-104]	; 0xffffff98
   125f0:	stmia	ip!, {r0, r1, r2, r3}
   125f4:	add	r3, r8, sl
   125f8:	mov	lr, r3
   125fc:	ldm	r4!, {r0, r1, r2, r3}
   12600:	add	sl, r8, r9
   12604:	str	lr, [fp, #-248]	; 0xffffff08
   12608:	str	lr, [fp, #-152]	; 0xffffff68
   1260c:	ldr	lr, [r4]
   12610:	stmia	ip!, {r0, r1, r2, r3}
   12614:	mov	r0, r5
   12618:	ldr	r2, [fp, #-236]	; 0xffffff14
   1261c:	mov	r1, #0
   12620:	str	lr, [ip]
   12624:	str	r8, [fp, #-112]	; 0xffffff90
   12628:	str	sl, [fp, #-156]	; 0xffffff64
   1262c:	bl	11210 <memset@plt>
   12630:	ldr	lr, [fp, #-248]	; 0xffffff08
   12634:	sub	r4, fp, #160	; 0xa0
   12638:	tst	r6, #8
   1263c:	str	lr, [fp, #-204]	; 0xffffff34
   12640:	str	sl, [fp, #-208]	; 0xffffff30
   12644:	str	r5, [fp, #-200]	; 0xffffff38
   12648:	str	r4, [fp, #-212]	; 0xffffff2c
   1264c:	bne	129f0 <argp_parse@@Base+0x50c>
   12650:	ldr	r3, [fp, #-244]	; 0xffffff0c
   12654:	cmp	r3, #0
   12658:	addne	r3, sl, #1
   1265c:	movne	r2, #43	; 0x2b
   12660:	strbne	r2, [sl]
   12664:	movne	sl, r3
   12668:	strne	r3, [fp, #-208]	; 0xffffff30
   1266c:	mov	r2, #0
   12670:	strb	r2, [sl]
   12674:	ldr	r3, [fp, #-204]	; 0xffffff34
   12678:	cmp	r7, r2
   1267c:	str	r2, [r3]
   12680:	str	r7, [fp, #-160]	; 0xffffff60
   12684:	beq	12b98 <argp_parse@@Base+0x6b4>
   12688:	sub	r1, fp, #212	; 0xd4
   1268c:	mov	r0, r7
   12690:	str	r1, [sp]
   12694:	ldr	r3, [fp, #-112]	; 0xffffff90
   12698:	mov	r1, r2
   1269c:	bl	1204c <__assert_fail@plt+0xd70>
   126a0:	ldr	r7, [fp, #-160]	; 0xffffff60
   126a4:	ldr	r5, [fp, #-112]	; 0xffffff90
   126a8:	mov	r8, r0
   126ac:	str	r0, [fp, #-108]	; 0xffffff94
   126b0:	mov	r2, #56	; 0x38
   126b4:	mov	r1, #0
   126b8:	sub	r0, fp, #96	; 0x60
   126bc:	bl	11210 <memset@plt>
   126c0:	ldr	r2, [pc, #2828]	; 131d4 <argp_parse@@Base+0xcf0>
   126c4:	ldr	r3, [pc, #2828]	; 131d8 <argp_parse@@Base+0xcf4>
   126c8:	ldr	r0, [fp, #-240]	; 0xffffff10
   126cc:	ldr	r1, [r2]
   126d0:	str	r0, [fp, #-92]	; 0xffffffa4
   126d4:	ldr	r2, [r3]
   126d8:	ldr	r0, [fp, #-232]	; 0xffffff18
   126dc:	mov	r3, #1
   126e0:	cmp	r5, r8
   126e4:	str	r7, [fp, #-96]	; 0xffffffa0
   126e8:	str	r0, [fp, #-88]	; 0xffffffa8
   126ec:	str	r6, [fp, #-80]	; 0xffffffb0
   126f0:	str	r4, [fp, #-44]	; 0xffffffd4
   126f4:	str	r1, [fp, #-52]	; 0xffffffcc
   126f8:	str	r2, [fp, #-48]	; 0xffffffd0
   126fc:	str	r3, [fp, #-100]	; 0xffffff9c
   12700:	bcc	12a04 <argp_parse@@Base+0x520>
   12704:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12708:	tst	r3, #2
   1270c:	bne	12ba8 <argp_parse@@Base+0x6c4>
   12710:	ldr	r3, [fp, #-88]	; 0xffffffa8
   12714:	ldr	r4, [fp, #-92]	; 0xffffffa4
   12718:	mov	r2, #1
   1271c:	str	r2, [fp, #-144]	; 0xffffff70
   12720:	ldr	r2, [fp, #-232]	; 0xffffff18
   12724:	cmp	r2, r3
   12728:	beq	130a8 <argp_parse@@Base+0xbc4>
   1272c:	ldr	r3, [pc, #2716]	; 131d0 <argp_parse@@Base+0xcec>
   12730:	ldr	r3, [r3]
   12734:	str	r3, [fp, #-56]	; 0xffffffc8
   12738:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1273c:	ldr	r5, [fp, #-84]	; 0xffffffac
   12740:	ldr	sl, [pc, #2708]	; 131dc <argp_parse@@Base+0xcf8>
   12744:	mov	r0, r4
   12748:	mov	r6, #0
   1274c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   12750:	cmp	r3, #0
   12754:	beq	12be4 <argp_parse@@Base+0x700>
   12758:	cmp	r3, r5
   1275c:	strgt	r6, [fp, #-72]	; 0xffffffb8
   12760:	bgt	12be4 <argp_parse@@Base+0x700>
   12764:	cmp	r5, r0
   12768:	blt	12f80 <argp_parse@@Base+0xa9c>
   1276c:	cmp	r5, r0
   12770:	bne	12f8c <argp_parse@@Base+0xaa8>
   12774:	ldr	r3, [fp, #-112]	; 0xffffff90
   12778:	ldr	ip, [fp, #-108]	; 0xffffff94
   1277c:	cmp	r3, ip
   12780:	bcs	13170 <argp_parse@@Base+0xc8c>
   12784:	mov	r5, #0
   12788:	add	r4, r3, #36	; 0x24
   1278c:	mov	r7, r5
   12790:	ldr	r6, [pc, #2632]	; 131e0 <argp_parse@@Base+0xcfc>
   12794:	mov	r0, r5
   12798:	b	127e0 <argp_parse@@Base+0x2fc>
   1279c:	ldr	ip, [r4, #-4]
   127a0:	str	ip, [fp, #-60]	; 0xffffffc4
   127a4:	ldr	ip, [r4, #-12]
   127a8:	str	ip, [fp, #-68]	; 0xffffffbc
   127ac:	ldr	ip, [r4, #-8]
   127b0:	str	r3, [fp, #-76]	; 0xffffffb4
   127b4:	str	ip, [fp, #-64]	; 0xffffffc0
   127b8:	blx	r5
   127bc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   127c0:	str	r3, [r4, #-4]
   127c4:	ldr	ip, [fp, #-108]	; 0xffffff94
   127c8:	cmp	ip, r4
   127cc:	bls	13118 <argp_parse@@Base+0xc34>
   127d0:	cmp	r0, #7
   127d4:	cmpne	r0, #0
   127d8:	bne	130f4 <argp_parse@@Base+0xc10>
   127dc:	add	r4, r4, #36	; 0x24
   127e0:	ldr	r3, [r4, #-24]	; 0xffffffe8
   127e4:	cmp	r3, #0
   127e8:	bne	127c8 <argp_parse@@Base+0x2e4>
   127ec:	ldr	r5, [r4, #-36]	; 0xffffffdc
   127f0:	sub	r2, fp, #96	; 0x60
   127f4:	cmp	r5, #0
   127f8:	mov	r1, r7
   127fc:	mov	r0, r6
   12800:	bne	1279c <argp_parse@@Base+0x2b8>
   12804:	cmp	ip, r4
   12808:	mov	r0, #7
   1280c:	bhi	127dc <argp_parse@@Base+0x2f8>
   12810:	ldr	r3, [fp, #-112]	; 0xffffff90
   12814:	sub	r4, ip, #36	; 0x24
   12818:	cmp	r4, r3
   1281c:	movcs	r5, #7
   12820:	bcc	128a8 <argp_parse@@Base+0x3c4>
   12824:	cmp	r5, #7
   12828:	cmpne	r5, #0
   1282c:	bne	13108 <argp_parse@@Base+0xc24>
   12830:	sub	r4, r4, #36	; 0x24
   12834:	mov	r7, #0
   12838:	ldr	r6, [pc, #2468]	; 131e4 <argp_parse@@Base+0xd00>
   1283c:	b	12888 <argp_parse@@Base+0x3a4>
   12840:	ldr	r3, [r4, #68]	; 0x44
   12844:	ldr	ip, [r4, #48]	; 0x30
   12848:	str	r3, [fp, #-60]	; 0xffffffc4
   1284c:	ldr	r3, [r4, #60]	; 0x3c
   12850:	str	r3, [fp, #-68]	; 0xffffffbc
   12854:	ldr	r3, [r4, #64]	; 0x40
   12858:	str	ip, [fp, #-76]	; 0xffffffb4
   1285c:	str	r3, [fp, #-64]	; 0xffffffc0
   12860:	blx	r5
   12864:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12868:	str	r3, [r4, #68]	; 0x44
   1286c:	ldr	r3, [fp, #-112]	; 0xffffff90
   12870:	cmp	r4, r3
   12874:	bcc	13168 <argp_parse@@Base+0xc84>
   12878:	cmp	r0, #7
   1287c:	cmpne	r0, #0
   12880:	bne	130d8 <argp_parse@@Base+0xbf4>
   12884:	sub	r4, r4, #36	; 0x24
   12888:	ldr	r5, [r4, #36]	; 0x24
   1288c:	sub	r2, fp, #96	; 0x60
   12890:	cmp	r5, #0
   12894:	mov	r1, r7
   12898:	mov	r0, r6
   1289c:	bne	12840 <argp_parse@@Base+0x35c>
   128a0:	cmp	r4, r3
   128a4:	bcs	12884 <argp_parse@@Base+0x3a0>
   128a8:	ldr	r2, [fp, #4]
   128ac:	cmp	r2, #0
   128b0:	beq	128cc <argp_parse@@Base+0x3e8>
   128b4:	mov	r5, #0
   128b8:	ldr	r1, [fp, #4]
   128bc:	ldr	r2, [fp, #-84]	; 0xffffffac
   128c0:	str	r2, [r1]
   128c4:	cmp	r5, #0
   128c8:	bne	130e8 <argp_parse@@Base+0xc04>
   128cc:	ldr	ip, [fp, #-108]	; 0xffffff94
   128d0:	b	12fa4 <argp_parse@@Base+0xac0>
   128d4:	ldr	r3, [fp, #-112]	; 0xffffff90
   128d8:	mov	r5, r0
   128dc:	ldr	ip, [fp, #-108]	; 0xffffff94
   128e0:	cmp	ip, r3
   128e4:	bls	130a0 <argp_parse@@Base+0xbbc>
   128e8:	ldr	r7, [pc, #2296]	; 131e8 <argp_parse@@Base+0xd04>
   128ec:	add	r4, r3, #36	; 0x24
   128f0:	mov	r8, #0
   128f4:	ldr	r3, [r4, #-36]	; 0xffffffdc
   128f8:	sub	r2, fp, #96	; 0x60
   128fc:	cmp	r3, #0
   12900:	mov	r1, r8
   12904:	mov	r0, r7
   12908:	mov	r6, r4
   1290c:	beq	12940 <argp_parse@@Base+0x45c>
   12910:	ldr	ip, [r4, #-4]
   12914:	ldr	lr, [r4, #-24]	; 0xffffffe8
   12918:	str	ip, [fp, #-60]	; 0xffffffc4
   1291c:	ldr	ip, [r4, #-12]
   12920:	str	ip, [fp, #-68]	; 0xffffffbc
   12924:	ldr	ip, [r4, #-8]
   12928:	str	lr, [fp, #-76]	; 0xffffffb4
   1292c:	str	ip, [fp, #-64]	; 0xffffffc0
   12930:	blx	r3
   12934:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12938:	str	r3, [r4, #-4]
   1293c:	ldr	ip, [fp, #-108]	; 0xffffff94
   12940:	cmp	ip, r6
   12944:	add	r4, r4, #36	; 0x24
   12948:	bhi	128f4 <argp_parse@@Base+0x410>
   1294c:	ldr	r3, [fp, #-112]	; 0xffffff90
   12950:	sub	ip, ip, #36	; 0x24
   12954:	cmp	r3, ip
   12958:	bhi	129c0 <argp_parse@@Base+0x4dc>
   1295c:	ldr	r8, [pc, #2184]	; 131ec <argp_parse@@Base+0xd08>
   12960:	sub	r4, ip, #36	; 0x24
   12964:	mov	r9, #0
   12968:	ldr	r6, [r4, #36]	; 0x24
   1296c:	sub	r2, fp, #96	; 0x60
   12970:	cmp	r6, #0
   12974:	mov	r1, r9
   12978:	mov	r0, r8
   1297c:	mov	r7, r4
   12980:	beq	129b4 <argp_parse@@Base+0x4d0>
   12984:	ldr	r3, [r4, #68]	; 0x44
   12988:	ldr	ip, [r4, #48]	; 0x30
   1298c:	str	r3, [fp, #-60]	; 0xffffffc4
   12990:	ldr	r3, [r4, #60]	; 0x3c
   12994:	str	r3, [fp, #-68]	; 0xffffffbc
   12998:	ldr	r3, [r4, #64]	; 0x40
   1299c:	str	ip, [fp, #-76]	; 0xffffffb4
   129a0:	str	r3, [fp, #-64]	; 0xffffffc0
   129a4:	blx	r6
   129a8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   129ac:	str	r3, [r4, #68]	; 0x44
   129b0:	ldr	r3, [fp, #-112]	; 0xffffff90
   129b4:	cmp	r3, r7
   129b8:	sub	r4, r4, #36	; 0x24
   129bc:	bls	12968 <argp_parse@@Base+0x484>
   129c0:	cmp	r5, #7
   129c4:	moveq	r5, #22
   129c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   129cc:	bl	1337c <argp_parse@@Base+0xe98>
   129d0:	mov	r0, r5
   129d4:	sub	sp, fp, #32
   129d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   129dc:	mov	sl, #36	; 0x24
   129e0:	mov	r5, sl
   129e4:	mov	r9, #52	; 0x34
   129e8:	str	r7, [fp, #-236]	; 0xffffff14
   129ec:	b	125b4 <argp_parse@@Base+0xd0>
   129f0:	add	sl, sl, #1
   129f4:	mov	r3, #45	; 0x2d
   129f8:	str	sl, [fp, #-208]	; 0xffffff30
   129fc:	strb	r3, [r8, r9]
   12a00:	b	1266c <argp_parse@@Base+0x188>
   12a04:	ldr	r3, [fp, #8]
   12a08:	add	r4, r5, #36	; 0x24
   12a0c:	str	r3, [r5, #24]
   12a10:	mov	r7, #0
   12a14:	ldr	r6, [pc, #2004]	; 131f0 <argp_parse@@Base+0xd0c>
   12a18:	b	12a70 <argp_parse@@Base+0x58c>
   12a1c:	ldr	r2, [r4, #-4]
   12a20:	ldr	r0, [r4, #-24]	; 0xffffffe8
   12a24:	str	r2, [fp, #-60]	; 0xffffffc4
   12a28:	ldr	r1, [r4, #-12]
   12a2c:	sub	r2, fp, #96	; 0x60
   12a30:	str	r1, [fp, #-68]	; 0xffffffbc
   12a34:	ldr	ip, [r4, #-8]
   12a38:	mov	r1, r7
   12a3c:	str	r0, [fp, #-76]	; 0xffffffb4
   12a40:	str	ip, [fp, #-64]	; 0xffffffc0
   12a44:	mov	r0, r6
   12a48:	blx	r3
   12a4c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12a50:	str	r3, [r4, #-4]
   12a54:	ldr	r3, [fp, #-108]	; 0xffffff94
   12a58:	cmp	r3, r4
   12a5c:	bls	1318c <argp_parse@@Base+0xca8>
   12a60:	cmp	r0, #7
   12a64:	cmpne	r0, #0
   12a68:	bne	12b88 <argp_parse@@Base+0x6a4>
   12a6c:	add	r4, r4, #36	; 0x24
   12a70:	ldr	r3, [r4, #-20]	; 0xffffffec
   12a74:	cmp	r3, #0
   12a78:	ldrne	r3, [r3, #28]
   12a7c:	ldrne	r2, [r4, #-16]
   12a80:	ldrne	r3, [r3, r2, lsl #2]
   12a84:	strne	r3, [r4, #-12]
   12a88:	ldr	r3, [r4, #-36]	; 0xffffffdc
   12a8c:	cmp	r3, #0
   12a90:	bne	12a1c <argp_parse@@Base+0x538>
   12a94:	ldr	r3, [r4, #-32]	; 0xffffffe0
   12a98:	ldr	r3, [r3, #16]
   12a9c:	cmp	r3, #0
   12aa0:	beq	12ac8 <argp_parse@@Base+0x5e4>
   12aa4:	ldr	r3, [r3]
   12aa8:	cmp	r3, #0
   12aac:	beq	12ac8 <argp_parse@@Base+0x5e4>
   12ab0:	ldr	r3, [r4, #-8]
   12ab4:	ldr	r2, [r4, #-12]
   12ab8:	str	r2, [r3]
   12abc:	ldr	r3, [r4, #-36]	; 0xffffffdc
   12ac0:	cmp	r3, #0
   12ac4:	bne	12a1c <argp_parse@@Base+0x538>
   12ac8:	ldr	r3, [fp, #-108]	; 0xffffff94
   12acc:	cmp	r3, r4
   12ad0:	bhi	12a6c <argp_parse@@Base+0x588>
   12ad4:	b	12704 <argp_parse@@Base+0x220>
   12ad8:	sub	sp, sp, #72	; 0x48
   12adc:	add	r4, sp, #8
   12ae0:	sub	sp, sp, #40	; 0x28
   12ae4:	add	r5, sp, #8
   12ae8:	mov	r1, r3
   12aec:	mov	r0, r4
   12af0:	mov	r2, #64	; 0x40
   12af4:	str	r3, [r5]
   12af8:	str	r3, [r5, #4]
   12afc:	str	r3, [r5, #8]
   12b00:	str	r3, [r5, #12]
   12b04:	str	r3, [r5, #20]
   12b08:	str	r3, [r5, #24]
   12b0c:	str	r4, [r5, #16]
   12b10:	bl	11210 <memset@plt>
   12b14:	ldr	r3, [pc, #1752]	; 131f4 <argp_parse@@Base+0xd10>
   12b18:	cmp	r7, #0
   12b1c:	strne	r7, [r4]
   12b20:	ldr	r3, [r3]
   12b24:	addne	r4, r4, #16
   12b28:	ldr	r2, [pc, #1736]	; 131f8 <argp_parse@@Base+0xd14>
   12b2c:	cmp	r3, #0
   12b30:	str	r2, [r4]
   12b34:	beq	130c0 <argp_parse@@Base+0xbdc>
   12b38:	ldr	r2, [pc, #1724]	; 131fc <argp_parse@@Base+0xd18>
   12b3c:	add	r3, r4, #32
   12b40:	str	r2, [r4, #16]
   12b44:	mov	r8, #0
   12b48:	sub	r4, fp, #196	; 0xc4
   12b4c:	str	r8, [r3]
   12b50:	mov	r1, r8
   12b54:	mov	r0, r4
   12b58:	mov	r2, #36	; 0x24
   12b5c:	bl	11210 <memset@plt>
   12b60:	ands	r3, r6, #4
   12b64:	str	r3, [fp, #-244]	; 0xffffff0c
   12b68:	moveq	r3, #1
   12b6c:	movne	r3, r8
   12b70:	mov	r7, r5
   12b74:	str	r8, [fp, #-224]	; 0xffffff20
   12b78:	str	r8, [fp, #-220]	; 0xffffff24
   12b7c:	str	r8, [fp, #-216]	; 0xffffff28
   12b80:	str	r3, [fp, #-228]	; 0xffffff1c
   12b84:	b	12578 <argp_parse@@Base+0x94>
   12b88:	mov	r5, r0
   12b8c:	mov	r0, r5
   12b90:	sub	sp, fp, #32
   12b94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12b98:	ldr	r5, [fp, #-112]	; 0xffffff90
   12b9c:	mov	r8, r5
   12ba0:	str	r5, [fp, #-108]	; 0xffffff94
   12ba4:	b	126b0 <argp_parse@@Base+0x1cc>
   12ba8:	tst	r3, #1
   12bac:	mov	r3, #0
   12bb0:	str	r3, [fp, #-144]	; 0xffffff70
   12bb4:	ldr	r4, [fp, #-92]	; 0xffffffa4
   12bb8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   12bbc:	subne	r3, r3, #4
   12bc0:	addne	r4, r4, #1
   12bc4:	strne	r3, [fp, #-88]	; 0xffffffa8
   12bc8:	strne	r4, [fp, #-92]	; 0xffffffa4
   12bcc:	b	12720 <argp_parse@@Base+0x23c>
   12bd0:	ldr	r3, [fp, #-232]	; 0xffffff18
   12bd4:	ldr	r0, [r3]
   12bd8:	bl	132d0 <argp_parse@@Base+0xdec>
   12bdc:	str	r0, [r4]
   12be0:	b	12530 <argp_parse@@Base+0x4c>
   12be4:	cmp	r2, #0
   12be8:	beq	12764 <argp_parse@@Base+0x280>
   12bec:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12bf0:	str	r5, [fp, #-148]	; 0xffffff6c
   12bf4:	ands	ip, r3, #64	; 0x40
   12bf8:	mvn	r3, #0
   12bfc:	str	r3, [fp, #-140]	; 0xffffff74
   12c00:	ldr	r2, [fp, #-156]	; 0xffffff64
   12c04:	ldr	r3, [fp, #-152]	; 0xffffff68
   12c08:	ldr	r1, [fp, #-88]	; 0xffffffa8
   12c0c:	beq	12f2c <argp_parse@@Base+0xa48>
   12c10:	sub	ip, fp, #148	; 0x94
   12c14:	stm	sp, {r6, ip}
   12c18:	bl	13450 <argp_parse@@Base+0xf6c>
   12c1c:	ldr	r5, [fp, #-148]	; 0xffffff6c
   12c20:	str	r5, [fp, #-84]	; 0xffffffac
   12c24:	mov	r7, r0
   12c28:	cmn	r7, #1
   12c2c:	beq	12f4c <argp_parse@@Base+0xa68>
   12c30:	cmp	r7, #63	; 0x3f
   12c34:	beq	13050 <argp_parse@@Base+0xb6c>
   12c38:	cmp	r7, #1
   12c3c:	beq	12d94 <argp_parse@@Base+0x8b0>
   12c40:	asrs	r8, r7, #24
   12c44:	bne	12cf0 <argp_parse@@Base+0x80c>
   12c48:	mov	r1, r7
   12c4c:	ldr	r0, [fp, #-156]	; 0xffffff64
   12c50:	bl	111c8 <strchr@plt>
   12c54:	cmp	r0, #0
   12c58:	beq	12d60 <argp_parse@@Base+0x87c>
   12c5c:	ldr	r4, [fp, #-112]	; 0xffffff90
   12c60:	ldr	r2, [fp, #-108]	; 0xffffff94
   12c64:	cmp	r4, r2
   12c68:	bcc	12c7c <argp_parse@@Base+0x798>
   12c6c:	b	12d60 <argp_parse@@Base+0x87c>
   12c70:	add	r4, r4, #36	; 0x24
   12c74:	cmp	r4, r2
   12c78:	bcs	12d60 <argp_parse@@Base+0x87c>
   12c7c:	ldr	r3, [r4, #8]
   12c80:	cmp	r0, r3
   12c84:	bcs	12c70 <argp_parse@@Base+0x78c>
   12c88:	ldr	r3, [r4]
   12c8c:	cmp	r3, #0
   12c90:	beq	12d60 <argp_parse@@Base+0x87c>
   12c94:	ldr	r2, [r4, #32]
   12c98:	ldr	r0, [r4, #28]
   12c9c:	ldr	ip, [r4, #24]
   12ca0:	str	r2, [fp, #-60]	; 0xffffffc4
   12ca4:	ldr	r2, [r4, #12]
   12ca8:	ldr	r1, [fp, #-136]	; 0xffffff78
   12cac:	str	r0, [fp, #-64]	; 0xffffffc0
   12cb0:	str	r2, [fp, #-76]	; 0xffffffb4
   12cb4:	str	ip, [fp, #-68]	; 0xffffffbc
   12cb8:	sub	r2, fp, #96	; 0x60
   12cbc:	mov	r0, r7
   12cc0:	blx	r3
   12cc4:	mov	r8, r6
   12cc8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12ccc:	str	r3, [r4, #32]
   12cd0:	cmp	r0, #7
   12cd4:	beq	12d58 <argp_parse@@Base+0x874>
   12cd8:	cmp	r0, #0
   12cdc:	bne	128d4 <argp_parse@@Base+0x3f0>
   12ce0:	ldr	r2, [fp, #-100]	; 0xffffff9c
   12ce4:	ldr	r5, [fp, #-84]	; 0xffffffac
   12ce8:	ldr	r0, [fp, #-92]	; 0xffffffa4
   12cec:	b	1274c <argp_parse@@Base+0x268>
   12cf0:	add	r3, r8, r8, lsl #3
   12cf4:	ldr	r2, [fp, #-112]	; 0xffffff90
   12cf8:	lsl	r3, r3, #2
   12cfc:	sub	r3, r3, #36	; 0x24
   12d00:	add	r4, r2, r3
   12d04:	ldr	r5, [r2, r3]
   12d08:	ands	r3, r7, #8388608	; 0x800000
   12d0c:	movne	r3, #-16777216	; 0xff000000
   12d10:	cmp	r5, #0
   12d14:	beq	12ee4 <argp_parse@@Base+0xa00>
   12d18:	ldr	r0, [r4, #32]
   12d1c:	ldr	r2, [r4, #24]
   12d20:	str	r0, [fp, #-60]	; 0xffffffc4
   12d24:	ldr	r0, [r4, #28]
   12d28:	str	r2, [fp, #-68]	; 0xffffffbc
   12d2c:	ldr	r2, [r4, #12]
   12d30:	str	r0, [fp, #-64]	; 0xffffffc0
   12d34:	bic	r0, r7, #-16777216	; 0xff000000
   12d38:	str	r2, [fp, #-76]	; 0xffffffb4
   12d3c:	orr	r0, r0, r3
   12d40:	ldr	r1, [fp, #-136]	; 0xffffff78
   12d44:	sub	r2, fp, #96	; 0x60
   12d48:	blx	r5
   12d4c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12d50:	str	r3, [r4, #32]
   12d54:	b	12cd0 <argp_parse@@Base+0x7ec>
   12d58:	cmp	r8, #0
   12d5c:	bne	12ee4 <argp_parse@@Base+0xa00>
   12d60:	mov	r2, r7
   12d64:	ldr	r3, [pc, #1172]	; 13200 <argp_parse@@Base+0xd1c>
   12d68:	ldr	r1, [pc, #1172]	; 13204 <argp_parse@@Base+0xd20>
   12d6c:	sub	r0, fp, #96	; 0x60
   12d70:	bl	16b84 <argp_error@@Base>
   12d74:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12d78:	mov	r2, #260	; 0x104
   12d7c:	sub	r0, fp, #96	; 0x60
   12d80:	bl	16ad4 <argp_state_help@@Base>
   12d84:	mov	r5, #7
   12d88:	ldr	r3, [fp, #-112]	; 0xffffff90
   12d8c:	ldr	ip, [fp, #-108]	; 0xffffff94
   12d90:	b	128e0 <argp_parse@@Base+0x3fc>
   12d94:	ldr	r7, [fp, #-136]	; 0xffffff78
   12d98:	ldr	r3, [fp, #-112]	; 0xffffff90
   12d9c:	ldr	ip, [fp, #-108]	; 0xffffff94
   12da0:	sub	r8, r5, #1
   12da4:	cmp	r3, ip
   12da8:	str	r8, [fp, #-84]	; 0xffffffac
   12dac:	bcs	12ed8 <argp_parse@@Base+0x9f4>
   12db0:	mov	lr, r8
   12db4:	add	r4, r3, #36	; 0x24
   12db8:	ldr	r3, [r4, #-36]	; 0xffffffdc
   12dbc:	add	r5, lr, #1
   12dc0:	cmp	r3, #0
   12dc4:	str	r5, [fp, #-84]	; 0xffffffac
   12dc8:	sub	r2, fp, #96	; 0x60
   12dcc:	mov	r1, r7
   12dd0:	mov	r0, r6
   12dd4:	sub	r5, r4, #36	; 0x24
   12dd8:	mov	r9, r4
   12ddc:	streq	lr, [fp, #-84]	; 0xffffffac
   12de0:	beq	12ecc <argp_parse@@Base+0x9e8>
   12de4:	ldr	ip, [r4, #-4]
   12de8:	ldr	lr, [r4, #-24]	; 0xffffffe8
   12dec:	str	ip, [fp, #-60]	; 0xffffffc4
   12df0:	ldr	ip, [r4, #-12]
   12df4:	str	ip, [fp, #-68]	; 0xffffffbc
   12df8:	ldr	ip, [r4, #-8]
   12dfc:	str	lr, [fp, #-76]	; 0xffffffb4
   12e00:	str	ip, [fp, #-64]	; 0xffffffc0
   12e04:	blx	r3
   12e08:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12e0c:	str	r3, [r4, #-4]
   12e10:	cmp	r0, #7
   12e14:	beq	12e50 <argp_parse@@Base+0x96c>
   12e18:	cmp	r0, #0
   12e1c:	bne	128d4 <argp_parse@@Base+0x3f0>
   12e20:	ldr	r0, [fp, #-92]	; 0xffffffa4
   12e24:	ldr	r5, [fp, #-84]	; 0xffffffac
   12e28:	cmp	r8, r5
   12e2c:	sublt	r8, r5, r8
   12e30:	ldrlt	r3, [r4, #-24]	; 0xffffffe8
   12e34:	movge	r3, #1
   12e38:	addlt	r8, r3, r8
   12e3c:	strlt	r8, [r4, #-24]	; 0xffffffe8
   12e40:	ldrlt	r2, [fp, #-100]	; 0xffffff9c
   12e44:	strge	r3, [fp, #-100]	; 0xffffff9c
   12e48:	movge	r2, r3
   12e4c:	b	1274c <argp_parse@@Base+0x268>
   12e50:	ldr	lr, [fp, #-84]	; 0xffffffac
   12e54:	ldr	r3, [r4, #-36]	; 0xffffffdc
   12e58:	sub	lr, lr, #1
   12e5c:	cmp	r3, #0
   12e60:	str	lr, [fp, #-84]	; 0xffffffac
   12e64:	beq	12ec8 <argp_parse@@Base+0x9e4>
   12e68:	add	r0, r5, #24
   12e6c:	ldr	r2, [r5, #12]
   12e70:	ldm	r0, {r0, r1, ip}
   12e74:	str	r2, [fp, #-76]	; 0xffffffb4
   12e78:	sub	r2, fp, #96	; 0x60
   12e7c:	str	ip, [fp, #-60]	; 0xffffffc4
   12e80:	str	r0, [fp, #-68]	; 0xffffffbc
   12e84:	str	r1, [fp, #-64]	; 0xffffffc0
   12e88:	mov	r0, sl
   12e8c:	mov	r1, r6
   12e90:	blx	r3
   12e94:	ldr	ip, [fp, #-108]	; 0xffffff94
   12e98:	ldr	r2, [fp, #-60]	; 0xffffffc4
   12e9c:	cmp	r4, ip
   12ea0:	movcs	r1, #0
   12ea4:	movcc	r1, #1
   12ea8:	mov	r3, r4
   12eac:	str	r2, [r5, #32]
   12eb0:	cmp	r0, #7
   12eb4:	movne	r1, #0
   12eb8:	cmp	r1, #0
   12ebc:	beq	131a4 <argp_parse@@Base+0xcc0>
   12ec0:	ldr	lr, [fp, #-84]	; 0xffffffac
   12ec4:	b	12db4 <argp_parse@@Base+0x8d0>
   12ec8:	ldr	ip, [fp, #-108]	; 0xffffff94
   12ecc:	cmp	r9, ip
   12ed0:	add	r4, r4, #36	; 0x24
   12ed4:	bcc	12db8 <argp_parse@@Base+0x8d4>
   12ed8:	ldr	r5, [fp, #-84]	; 0xffffffac
   12edc:	ldr	r0, [fp, #-92]	; 0xffffffa4
   12ee0:	b	1276c <argp_parse@@Base+0x288>
   12ee4:	ldr	r3, [fp, #-152]	; 0xffffff68
   12ee8:	ldr	r2, [r3, #12]
   12eec:	cmp	r2, r7
   12ef0:	bne	12f08 <argp_parse@@Base+0xa24>
   12ef4:	b	1303c <argp_parse@@Base+0xb58>
   12ef8:	add	r3, r3, #16
   12efc:	ldr	r2, [r3, #12]
   12f00:	cmp	r2, r7
   12f04:	beq	1303c <argp_parse@@Base+0xb58>
   12f08:	ldr	r2, [r3]
   12f0c:	cmp	r2, #0
   12f10:	bne	12ef8 <argp_parse@@Base+0xa14>
   12f14:	ldr	r2, [pc, #748]	; 13208 <argp_parse@@Base+0xd24>
   12f18:	ldr	r3, [pc, #736]	; 13200 <argp_parse@@Base+0xd1c>
   12f1c:	ldr	r1, [pc, #744]	; 1320c <argp_parse@@Base+0xd28>
   12f20:	sub	r0, fp, #96	; 0x60
   12f24:	bl	16b84 <argp_error@@Base>
   12f28:	b	12d74 <argp_parse@@Base+0x890>
   12f2c:	sub	lr, fp, #148	; 0x94
   12f30:	stm	sp, {ip, lr}
   12f34:	bl	133fc <argp_parse@@Base+0xf18>
   12f38:	ldr	r5, [fp, #-148]	; 0xffffff6c
   12f3c:	str	r5, [fp, #-84]	; 0xffffffac
   12f40:	mov	r7, r0
   12f44:	cmn	r7, #1
   12f48:	bne	12c30 <argp_parse@@Base+0x74c>
   12f4c:	cmp	r5, #1
   12f50:	str	r6, [fp, #-100]	; 0xffffff9c
   12f54:	ble	12f74 <argp_parse@@Base+0xa90>
   12f58:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12f5c:	sub	r3, r5, #-1073741823	; 0xc0000001
   12f60:	ldr	r1, [pc, #680]	; 13210 <argp_parse@@Base+0xd2c>
   12f64:	ldr	r0, [r2, r3, lsl #2]
   12f68:	bl	10ff4 <strcmp@plt>
   12f6c:	cmp	r0, #0
   12f70:	streq	r5, [fp, #-72]	; 0xffffffb8
   12f74:	ldr	r0, [fp, #-92]	; 0xffffffa4
   12f78:	cmp	r5, r0
   12f7c:	bge	1276c <argp_parse@@Base+0x288>
   12f80:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12f84:	tst	r3, #4
   12f88:	beq	13060 <argp_parse@@Base+0xb7c>
   12f8c:	ldr	r3, [fp, #4]
   12f90:	cmp	r3, #0
   12f94:	beq	13138 <argp_parse@@Base+0xc54>
   12f98:	str	r5, [r3]
   12f9c:	ldr	ip, [fp, #-108]	; 0xffffff94
   12fa0:	ldr	r3, [fp, #-112]	; 0xffffff90
   12fa4:	sub	r2, ip, #36	; 0x24
   12fa8:	cmp	r3, r2
   12fac:	bhi	13094 <argp_parse@@Base+0xbb0>
   12fb0:	ldr	r6, [pc, #604]	; 13214 <argp_parse@@Base+0xd30>
   12fb4:	sub	r4, ip, #72	; 0x48
   12fb8:	mov	r7, #0
   12fbc:	ldr	r5, [r4, #36]	; 0x24
   12fc0:	sub	r2, fp, #96	; 0x60
   12fc4:	cmp	r5, #0
   12fc8:	mov	r1, r7
   12fcc:	mov	r0, r6
   12fd0:	beq	1302c <argp_parse@@Base+0xb48>
   12fd4:	ldr	r3, [r4, #68]	; 0x44
   12fd8:	ldr	ip, [r4, #48]	; 0x30
   12fdc:	str	r3, [fp, #-60]	; 0xffffffc4
   12fe0:	ldr	r3, [r4, #60]	; 0x3c
   12fe4:	str	r3, [fp, #-68]	; 0xffffffbc
   12fe8:	ldr	r3, [r4, #64]	; 0x40
   12fec:	str	ip, [fp, #-76]	; 0xffffffb4
   12ff0:	str	r3, [fp, #-64]	; 0xffffffc0
   12ff4:	blx	r5
   12ff8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12ffc:	str	r3, [r4, #68]	; 0x44
   13000:	ldr	r3, [fp, #-112]	; 0xffffff90
   13004:	cmp	r4, r3
   13008:	bcc	13074 <argp_parse@@Base+0xb90>
   1300c:	cmp	r0, #7
   13010:	cmpne	r0, #0
   13014:	sub	r4, r4, #36	; 0x24
   13018:	beq	12fbc <argp_parse@@Base+0xad8>
   1301c:	ldr	ip, [fp, #-108]	; 0xffffff94
   13020:	mov	r5, r0
   13024:	sub	ip, ip, #36	; 0x24
   13028:	b	12954 <argp_parse@@Base+0x470>
   1302c:	cmp	r4, r3
   13030:	bcc	13080 <argp_parse@@Base+0xb9c>
   13034:	sub	r4, r4, #36	; 0x24
   13038:	b	12fbc <argp_parse@@Base+0xad8>
   1303c:	ldr	r2, [r3]
   13040:	ldr	r3, [pc, #448]	; 13208 <argp_parse@@Base+0xd24>
   13044:	cmp	r2, #0
   13048:	moveq	r2, r3
   1304c:	b	12f18 <argp_parse@@Base+0xa34>
   13050:	ldr	r3, [fp, #-140]	; 0xffffff74
   13054:	cmn	r3, #1
   13058:	bne	12d74 <argp_parse@@Base+0x890>
   1305c:	b	12c48 <argp_parse@@Base+0x764>
   13060:	ldr	r3, [fp, #-88]	; 0xffffffa8
   13064:	ldr	r7, [r3, r5, lsl #2]
   13068:	add	r5, r5, #1
   1306c:	str	r7, [fp, #-136]	; 0xffffff78
   13070:	b	12d98 <argp_parse@@Base+0x8b4>
   13074:	cmp	r0, #7
   13078:	mov	r5, r0
   1307c:	bne	1309c <argp_parse@@Base+0xbb8>
   13080:	ldr	ip, [fp, #-108]	; 0xffffff94
   13084:	sub	ip, ip, #36	; 0x24
   13088:	cmp	ip, r3
   1308c:	movcs	r5, #0
   13090:	bcs	1295c <argp_parse@@Base+0x478>
   13094:	mov	r5, #0
   13098:	b	129c8 <argp_parse@@Base+0x4e4>
   1309c:	ldr	ip, [fp, #-108]	; 0xffffff94
   130a0:	sub	ip, ip, #36	; 0x24
   130a4:	b	12954 <argp_parse@@Base+0x470>
   130a8:	ldr	r0, [r2]
   130ac:	cmp	r0, #0
   130b0:	beq	1272c <argp_parse@@Base+0x248>
   130b4:	bl	132d0 <argp_parse@@Base+0xdec>
   130b8:	str	r0, [fp, #-56]	; 0xffffffc8
   130bc:	b	12738 <argp_parse@@Base+0x254>
   130c0:	ldr	r3, [pc, #336]	; 13218 <argp_parse@@Base+0xd34>
   130c4:	ldr	r3, [r3]
   130c8:	cmp	r3, #0
   130cc:	addeq	r3, r4, #16
   130d0:	bne	12b38 <argp_parse@@Base+0x654>
   130d4:	b	12b44 <argp_parse@@Base+0x660>
   130d8:	mov	r5, r0
   130dc:	ldr	r2, [fp, #4]
   130e0:	cmp	r2, #0
   130e4:	bne	128b8 <argp_parse@@Base+0x3d4>
   130e8:	cmp	r5, #7
   130ec:	bne	128dc <argp_parse@@Base+0x3f8>
   130f0:	b	12d74 <argp_parse@@Base+0x890>
   130f4:	ldr	r3, [fp, #-112]	; 0xffffff90
   130f8:	sub	ip, ip, #36	; 0x24
   130fc:	cmp	r3, ip
   13100:	mov	r5, r0
   13104:	bls	130dc <argp_parse@@Base+0xbf8>
   13108:	ldr	r2, [fp, #4]
   1310c:	cmp	r2, #0
   13110:	bne	128b8 <argp_parse@@Base+0x3d4>
   13114:	b	128c4 <argp_parse@@Base+0x3e0>
   13118:	ldr	r3, [fp, #-112]	; 0xffffff90
   1311c:	sub	r4, ip, #36	; 0x24
   13120:	cmp	r4, r3
   13124:	mov	r5, r0
   13128:	bcs	12824 <argp_parse@@Base+0x340>
   1312c:	cmp	r5, #7
   13130:	beq	128a8 <argp_parse@@Base+0x3c4>
   13134:	b	13108 <argp_parse@@Base+0xc24>
   13138:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1313c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13140:	tst	r3, #2
   13144:	bne	12d78 <argp_parse@@Base+0x894>
   13148:	cmp	r1, #0
   1314c:	beq	12d78 <argp_parse@@Base+0x894>
   13150:	mov	r0, r1
   13154:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13158:	ldr	r1, [pc, #188]	; 1321c <argp_parse@@Base+0xd38>
   1315c:	bl	111d4 <fprintf@plt>
   13160:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13164:	b	12d78 <argp_parse@@Base+0x894>
   13168:	mov	r5, r0
   1316c:	b	1312c <argp_parse@@Base+0xc48>
   13170:	sub	r4, ip, #36	; 0x24
   13174:	cmp	r3, r4
   13178:	bls	12830 <argp_parse@@Base+0x34c>
   1317c:	ldr	r2, [fp, #4]
   13180:	cmp	r2, #0
   13184:	bne	128b4 <argp_parse@@Base+0x3d0>
   13188:	b	12fa4 <argp_parse@@Base+0xac0>
   1318c:	cmp	r0, #7
   13190:	mov	r5, r0
   13194:	beq	12704 <argp_parse@@Base+0x220>
   13198:	cmp	r0, #0
   1319c:	beq	12704 <argp_parse@@Base+0x220>
   131a0:	b	129d0 <argp_parse@@Base+0x4ec>
   131a4:	cmp	r0, #0
   131a8:	ldreq	r0, [fp, #-92]	; 0xffffffa4
   131ac:	moveq	r5, r0
   131b0:	streq	r0, [fp, #-84]	; 0xffffffac
   131b4:	beq	12e28 <argp_parse@@Base+0x944>
   131b8:	cmp	r0, #7
   131bc:	mov	r5, r0
   131c0:	beq	12ed8 <argp_parse@@Base+0x9f4>
   131c4:	ldr	r3, [fp, #-112]	; 0xffffff90
   131c8:	b	128e0 <argp_parse@@Base+0x3fc>
   131cc:	andeq	r9, r2, ip, lsr r2
   131d0:	andeq	r9, r2, r8, lsr r2
   131d4:	andeq	r9, r2, r0, asr #4
   131d8:	andeq	r9, r2, r4, asr #4
   131dc:	tsteq	r0, r6
   131e0:	tsteq	r0, r2
   131e4:	tsteq	r0, r1
   131e8:	tsteq	r0, r5
   131ec:	tsteq	r0, r7
   131f0:	tsteq	r0, r3
   131f4:	andeq	r9, r2, r0, lsr #5
   131f8:	andeq	r8, r1, r0, lsl #8
   131fc:	andeq	r8, r1, ip, lsl r4
   13200:	andeq	r8, r1, r8, lsr r4
   13204:	andeq	r8, r1, r0, asr r5
   13208:	andeq	r8, r1, r8, asr #10
   1320c:	andeq	r8, r1, r8, asr r5
   13210:	andeq	r8, r1, ip, asr #10
   13214:	tsteq	r0, r4
   13218:	andeq	r9, r2, r4, ror #4
   1321c:	andeq	r8, r1, r4, ror #10
   13220:	cmp	r1, #0
   13224:	beq	13264 <argp_parse@@Base+0xd80>
   13228:	ldr	r2, [r1, #52]	; 0x34
   1322c:	ldr	r3, [r2, #48]	; 0x30
   13230:	ldr	r1, [r2, #52]	; 0x34
   13234:	cmp	r3, r1
   13238:	bcs	13264 <argp_parse@@Base+0xd80>
   1323c:	ldr	r2, [r3, #4]
   13240:	cmp	r0, r2
   13244:	bne	13258 <argp_parse@@Base+0xd74>
   13248:	b	1326c <argp_parse@@Base+0xd88>
   1324c:	ldr	r2, [r3, #4]
   13250:	cmp	r2, r0
   13254:	beq	1326c <argp_parse@@Base+0xd88>
   13258:	add	r3, r3, #36	; 0x24
   1325c:	cmp	r3, r1
   13260:	bcc	1324c <argp_parse@@Base+0xd68>
   13264:	mov	r0, #0
   13268:	bx	lr
   1326c:	ldr	r0, [r3, #24]
   13270:	bx	lr
   13274:	ldr	ip, [pc, #32]	; 1329c <argp_parse@@Base+0xdb8>
   13278:	push	{lr}		; (str lr, [sp, #-4]!)
   1327c:	sub	sp, sp, #12
   13280:	ldm	ip, {r1, ip}
   13284:	ldr	r3, [pc, #20]	; 132a0 <argp_parse@@Base+0xdbc>
   13288:	ldr	r2, [pc, #20]	; 132a4 <argp_parse@@Base+0xdc0>
   1328c:	str	ip, [sp]
   13290:	bl	13810 <argp_parse@@Base+0x132c>
   13294:	add	sp, sp, #12
   13298:	pop	{pc}		; (ldr pc, [sp], #4)
   1329c:	andeq	r9, r2, r8, ror #4
   132a0:	andeq	r8, r1, ip, asr #12
   132a4:	andeq	r8, r1, ip, asr r6
   132a8:	ldr	r3, [pc, #20]	; 132c4 <argp_parse@@Base+0xde0>
   132ac:	ldr	r2, [pc, #20]	; 132c8 <argp_parse@@Base+0xde4>
   132b0:	ldr	ip, [pc, #20]	; 132cc <argp_parse@@Base+0xde8>
   132b4:	str	r0, [r3]
   132b8:	str	ip, [r2]
   132bc:	str	r1, [r3, #4]
   132c0:	bx	lr
   132c4:	andeq	r9, r2, r8, ror #4
   132c8:	andeq	r9, r2, r4, ror #4
   132cc:	andeq	r3, r1, r4, ror r2
   132d0:	ldrb	r3, [r0]
   132d4:	cmp	r3, #47	; 0x2f
   132d8:	bne	132e8 <argp_parse@@Base+0xe04>
   132dc:	ldrb	r3, [r0, #1]!
   132e0:	cmp	r3, #47	; 0x2f
   132e4:	beq	132dc <argp_parse@@Base+0xdf8>
   132e8:	cmp	r3, #0
   132ec:	bxeq	lr
   132f0:	mov	r2, #0
   132f4:	push	{lr}		; (str lr, [sp, #-4]!)
   132f8:	mov	ip, r2
   132fc:	mov	r1, r0
   13300:	mov	lr, #1
   13304:	cmp	r3, #47	; 0x2f
   13308:	moveq	r2, lr
   1330c:	beq	1331c <argp_parse@@Base+0xe38>
   13310:	cmp	r2, #0
   13314:	movne	r0, r1
   13318:	movne	r2, ip
   1331c:	ldrb	r3, [r1, #1]!
   13320:	cmp	r3, #0
   13324:	bne	13304 <argp_parse@@Base+0xe20>
   13328:	pop	{pc}		; (ldr pc, [sp], #4)
   1332c:	push	{r4, lr}
   13330:	mov	r4, r0
   13334:	bl	111bc <strlen@plt>
   13338:	cmp	r0, #1
   1333c:	popls	{r4, pc}
   13340:	sub	r3, r0, #1
   13344:	add	r2, r4, r3
   13348:	ldrb	r1, [r4, r3]
   1334c:	cmp	r1, #47	; 0x2f
   13350:	popne	{r4, pc}
   13354:	cmp	r3, #1
   13358:	beq	1336c <argp_parse@@Base+0xe88>
   1335c:	ldrb	r1, [r2, #-1]!
   13360:	sub	r0, r3, #1
   13364:	cmp	r1, #47	; 0x2f
   13368:	beq	13374 <argp_parse@@Base+0xe90>
   1336c:	mov	r0, r3
   13370:	pop	{r4, pc}
   13374:	mov	r3, r0
   13378:	b	13354 <argp_parse@@Base+0xe70>
   1337c:	push	{r4, r5, lr}
   13380:	sub	sp, sp, #12
   13384:	mov	r5, r0
   13388:	bl	111ec <__errno_location@plt>
   1338c:	mov	r2, #0
   13390:	mov	r4, r0
   13394:	ldr	r3, [r0]
   13398:	str	r2, [r4]
   1339c:	mov	r0, r5
   133a0:	str	r3, [sp]
   133a4:	str	r3, [sp, #4]
   133a8:	bl	1106c <free@plt>
   133ac:	ldr	r3, [r4]
   133b0:	add	r2, sp, #8
   133b4:	cmp	r3, #0
   133b8:	moveq	r3, #4
   133bc:	movne	r3, #0
   133c0:	add	r3, r2, r3
   133c4:	ldr	r3, [r3, #-8]
   133c8:	str	r3, [r4]
   133cc:	add	sp, sp, #12
   133d0:	pop	{r4, r5, pc}
   133d4:	push	{lr}		; (str lr, [sp, #-4]!)
   133d8:	sub	sp, sp, #20
   133dc:	mov	ip, #0
   133e0:	ldr	lr, [sp, #24]
   133e4:	str	ip, [sp, #8]
   133e8:	str	lr, [sp]
   133ec:	str	ip, [sp, #4]
   133f0:	bl	17828 <argp_error@@Base+0xca4>
   133f4:	add	sp, sp, #20
   133f8:	pop	{pc}		; (ldr pc, [sp], #4)
   133fc:	push	{r4, lr}
   13400:	sub	sp, sp, #16
   13404:	mov	ip, #0
   13408:	ldr	r4, [sp, #24]
   1340c:	ldr	lr, [sp, #28]
   13410:	str	r4, [sp]
   13414:	str	lr, [sp, #8]
   13418:	str	ip, [sp, #12]
   1341c:	str	ip, [sp, #4]
   13420:	bl	172c8 <argp_error@@Base+0x744>
   13424:	add	sp, sp, #16
   13428:	pop	{r4, pc}
   1342c:	push	{r4, lr}
   13430:	sub	sp, sp, #16
   13434:	mov	lr, #0
   13438:	ldr	r4, [sp, #24]
   1343c:	mov	ip, #1
   13440:	stm	sp, {r4, ip, lr}
   13444:	bl	17828 <argp_error@@Base+0xca4>
   13448:	add	sp, sp, #16
   1344c:	pop	{r4, pc}
   13450:	push	{r4, r5, lr}
   13454:	sub	sp, sp, #20
   13458:	mov	lr, #0
   1345c:	ldr	r5, [sp, #32]
   13460:	ldr	r4, [sp, #36]	; 0x24
   13464:	mov	ip, #1
   13468:	str	r5, [sp]
   1346c:	str	r4, [sp, #8]
   13470:	str	lr, [sp, #12]
   13474:	str	ip, [sp, #4]
   13478:	bl	172c8 <argp_error@@Base+0x744>
   1347c:	add	sp, sp, #20
   13480:	pop	{r4, r5, pc}
   13484:	push	{r1, r2, r3}
   13488:	push	{lr}		; (str lr, [sp, #-4]!)
   1348c:	sub	sp, sp, #8
   13490:	add	r3, sp, #16
   13494:	ldr	r2, [sp, #16]
   13498:	ldr	r1, [sp, #12]
   1349c:	str	r3, [sp, #4]
   134a0:	bl	11108 <ioctl@plt>
   134a4:	add	sp, sp, #8
   134a8:	pop	{lr}		; (ldr lr, [sp], #4)
   134ac:	add	sp, sp, #12
   134b0:	bx	lr
   134b4:	push	{r4, r5, r6, lr}
   134b8:	subs	r4, r0, #0
   134bc:	beq	13530 <argp_parse@@Base+0x104c>
   134c0:	mov	r1, #47	; 0x2f
   134c4:	bl	11264 <strrchr@plt>
   134c8:	subs	r5, r0, #0
   134cc:	beq	1351c <argp_parse@@Base+0x1038>
   134d0:	add	r6, r5, #1
   134d4:	sub	r3, r6, r4
   134d8:	cmp	r3, #6
   134dc:	ble	1351c <argp_parse@@Base+0x1038>
   134e0:	mov	r2, #7
   134e4:	ldr	r1, [pc, #96]	; 1354c <argp_parse@@Base+0x1068>
   134e8:	sub	r0, r5, #6
   134ec:	bl	112b8 <strncmp@plt>
   134f0:	cmp	r0, #0
   134f4:	bne	1351c <argp_parse@@Base+0x1038>
   134f8:	mov	r2, #3
   134fc:	ldr	r1, [pc, #76]	; 13550 <argp_parse@@Base+0x106c>
   13500:	mov	r0, r6
   13504:	bl	112b8 <strncmp@plt>
   13508:	cmp	r0, #0
   1350c:	movne	r4, r6
   13510:	ldreq	r3, [pc, #60]	; 13554 <argp_parse@@Base+0x1070>
   13514:	addeq	r4, r5, #4
   13518:	streq	r4, [r3]
   1351c:	ldr	r2, [pc, #52]	; 13558 <argp_parse@@Base+0x1074>
   13520:	ldr	r3, [pc, #52]	; 1355c <argp_parse@@Base+0x1078>
   13524:	str	r4, [r2]
   13528:	str	r4, [r3]
   1352c:	pop	{r4, r5, r6, pc}
   13530:	ldr	r3, [pc, #40]	; 13560 <argp_parse@@Base+0x107c>
   13534:	mov	r2, #55	; 0x37
   13538:	mov	r1, #1
   1353c:	ldr	r3, [r3]
   13540:	ldr	r0, [pc, #28]	; 13564 <argp_parse@@Base+0x1080>
   13544:	bl	110fc <fwrite@plt>
   13548:	bl	112c4 <abort@plt>
   1354c:	andeq	r8, r1, r4, lsr #13
   13550:	andeq	r8, r1, ip, lsr #13
   13554:	andeq	r9, r2, r8, lsr r2
   13558:	andeq	r9, r2, r0, ror r2
   1355c:	andeq	r9, r2, ip, lsr r2
   13560:	andeq	r9, r2, r0, asr #4
   13564:	andeq	r8, r1, ip, ror #12
   13568:	push	{r4, r5, r6, r7, lr}
   1356c:	sub	sp, sp, #36	; 0x24
   13570:	cmp	r1, #0
   13574:	mov	r4, r0
   13578:	ldr	r5, [sp, #56]	; 0x38
   1357c:	ldr	r6, [sp, #60]	; 0x3c
   13580:	beq	137c0 <argp_parse@@Base+0x12dc>
   13584:	str	r3, [sp]
   13588:	mov	r3, r2
   1358c:	mov	r2, r1
   13590:	ldr	r1, [pc, #564]	; 137cc <argp_parse@@Base+0x12e8>
   13594:	bl	111d4 <fprintf@plt>
   13598:	ldr	r3, [pc, #560]	; 137d0 <argp_parse@@Base+0x12ec>
   1359c:	ldr	r2, [pc, #560]	; 137d4 <argp_parse@@Base+0x12f0>
   135a0:	ldr	r1, [pc, #560]	; 137d8 <argp_parse@@Base+0x12f4>
   135a4:	mov	r0, r4
   135a8:	bl	111d4 <fprintf@plt>
   135ac:	mov	r1, r4
   135b0:	mov	r0, #10
   135b4:	bl	1127c <fputc@plt>
   135b8:	ldr	r1, [pc, #540]	; 137dc <argp_parse@@Base+0x12f8>
   135bc:	ldr	r2, [pc, #540]	; 137e0 <argp_parse@@Base+0x12fc>
   135c0:	mov	r0, r4
   135c4:	bl	111d4 <fprintf@plt>
   135c8:	mov	r1, r4
   135cc:	mov	r0, #10
   135d0:	bl	1127c <fputc@plt>
   135d4:	cmp	r6, #9
   135d8:	ldrls	pc, [pc, r6, lsl #2]
   135dc:	b	13608 <argp_parse@@Base+0x1124>
   135e0:	andeq	r3, r1, r8, asr #12
   135e4:	muleq	r1, r4, r6
   135e8:	andeq	r3, r1, ip, lsr #13
   135ec:	andeq	r3, r1, r4, asr #13
   135f0:	andeq	r3, r1, r4, ror #13
   135f4:	andeq	r3, r1, ip, lsl #14
   135f8:	andeq	r3, r1, ip, lsr #14
   135fc:	andeq	r3, r1, r4, asr r7
   13600:	andeq	r3, r1, r4, lsl #15
   13604:	andeq	r3, r1, r0, asr r6
   13608:	ldr	ip, [r5, #32]
   1360c:	ldr	r1, [r5, #28]
   13610:	ldm	r5, {r2, r3}
   13614:	ldr	r7, [r5, #24]
   13618:	ldr	r6, [r5, #20]
   1361c:	str	ip, [sp, #24]
   13620:	ldr	lr, [r5, #16]
   13624:	str	r1, [sp, #20]
   13628:	ldr	r1, [r5, #8]
   1362c:	ldr	ip, [r5, #12]
   13630:	mov	r0, r4
   13634:	str	r7, [sp, #16]
   13638:	stm	sp, {r1, ip, lr}
   1363c:	str	r6, [sp, #12]
   13640:	ldr	r1, [pc, #412]	; 137e4 <argp_parse@@Base+0x1300>
   13644:	bl	111d4 <fprintf@plt>
   13648:	add	sp, sp, #36	; 0x24
   1364c:	pop	{r4, r5, r6, r7, pc}
   13650:	ldr	ip, [r5, #32]
   13654:	ldr	r1, [r5, #28]
   13658:	ldm	r5, {r2, r3}
   1365c:	ldr	r7, [r5, #24]
   13660:	ldr	r6, [r5, #20]
   13664:	str	ip, [sp, #24]
   13668:	ldr	lr, [r5, #16]
   1366c:	str	r1, [sp, #20]
   13670:	ldr	r1, [r5, #8]
   13674:	ldr	ip, [r5, #12]
   13678:	mov	r0, r4
   1367c:	str	r7, [sp, #16]
   13680:	stm	sp, {r1, ip, lr}
   13684:	str	r6, [sp, #12]
   13688:	ldr	r1, [pc, #344]	; 137e8 <argp_parse@@Base+0x1304>
   1368c:	bl	111d4 <fprintf@plt>
   13690:	b	13648 <argp_parse@@Base+0x1164>
   13694:	ldr	r2, [r5]
   13698:	mov	r0, r4
   1369c:	ldr	r1, [pc, #328]	; 137ec <argp_parse@@Base+0x1308>
   136a0:	add	sp, sp, #36	; 0x24
   136a4:	pop	{r4, r5, r6, r7, lr}
   136a8:	b	111d4 <fprintf@plt>
   136ac:	mov	r0, r4
   136b0:	ldm	r5, {r2, r3}
   136b4:	ldr	r1, [pc, #308]	; 137f0 <argp_parse@@Base+0x130c>
   136b8:	add	sp, sp, #36	; 0x24
   136bc:	pop	{r4, r5, r6, r7, lr}
   136c0:	b	111d4 <fprintf@plt>
   136c4:	ldr	r1, [r5, #8]
   136c8:	ldm	r5, {r2, r3}
   136cc:	mov	r0, r4
   136d0:	str	r1, [sp, #56]	; 0x38
   136d4:	ldr	r1, [pc, #280]	; 137f4 <argp_parse@@Base+0x1310>
   136d8:	add	sp, sp, #36	; 0x24
   136dc:	pop	{r4, r5, r6, r7, lr}
   136e0:	b	111d4 <fprintf@plt>
   136e4:	ldr	r1, [r5, #8]
   136e8:	ldr	ip, [r5, #12]
   136ec:	ldm	r5, {r2, r3}
   136f0:	mov	r0, r4
   136f4:	str	r1, [sp, #56]	; 0x38
   136f8:	str	ip, [sp, #60]	; 0x3c
   136fc:	ldr	r1, [pc, #244]	; 137f8 <argp_parse@@Base+0x1314>
   13700:	add	sp, sp, #36	; 0x24
   13704:	pop	{r4, r5, r6, r7, lr}
   13708:	b	111d4 <fprintf@plt>
   1370c:	add	r1, r5, #8
   13710:	ldm	r5, {r2, r3}
   13714:	ldm	r1, {r1, ip, lr}
   13718:	mov	r0, r4
   1371c:	stm	sp, {r1, ip, lr}
   13720:	ldr	r1, [pc, #212]	; 137fc <argp_parse@@Base+0x1318>
   13724:	bl	111d4 <fprintf@plt>
   13728:	b	13648 <argp_parse@@Base+0x1164>
   1372c:	add	r1, r5, #8
   13730:	ldr	r6, [r5, #20]
   13734:	ldm	r1, {r1, ip, lr}
   13738:	mov	r0, r4
   1373c:	ldm	r5, {r2, r3}
   13740:	str	r6, [sp, #12]
   13744:	stm	sp, {r1, ip, lr}
   13748:	ldr	r1, [pc, #176]	; 13800 <argp_parse@@Base+0x131c>
   1374c:	bl	111d4 <fprintf@plt>
   13750:	b	13648 <argp_parse@@Base+0x1164>
   13754:	add	r1, r5, #8
   13758:	ldr	r7, [r5, #24]
   1375c:	ldm	r1, {r1, ip, lr}
   13760:	mov	r0, r4
   13764:	ldr	r6, [r5, #20]
   13768:	ldm	r5, {r2, r3}
   1376c:	stm	sp, {r1, ip, lr}
   13770:	str	r7, [sp, #16]
   13774:	str	r6, [sp, #12]
   13778:	ldr	r1, [pc, #132]	; 13804 <argp_parse@@Base+0x1320>
   1377c:	bl	111d4 <fprintf@plt>
   13780:	b	13648 <argp_parse@@Base+0x1164>
   13784:	ldr	r1, [r5, #28]
   13788:	ldm	r5, {r2, r3}
   1378c:	ldr	r7, [r5, #24]
   13790:	ldr	r6, [r5, #20]
   13794:	ldr	lr, [r5, #16]
   13798:	str	r1, [sp, #20]
   1379c:	ldr	r1, [r5, #8]
   137a0:	ldr	ip, [r5, #12]
   137a4:	mov	r0, r4
   137a8:	str	r7, [sp, #16]
   137ac:	stm	sp, {r1, ip, lr}
   137b0:	str	r6, [sp, #12]
   137b4:	ldr	r1, [pc, #76]	; 13808 <argp_parse@@Base+0x1324>
   137b8:	bl	111d4 <fprintf@plt>
   137bc:	b	13648 <argp_parse@@Base+0x1164>
   137c0:	ldr	r1, [pc, #68]	; 1380c <argp_parse@@Base+0x1328>
   137c4:	bl	111d4 <fprintf@plt>
   137c8:	b	13598 <argp_parse@@Base+0x10b4>
   137cc:			; <UNDEFINED> instruction: 0x000186b0
   137d0:	andeq	r0, r0, r6, ror #15
   137d4:	andeq	r8, r1, r4, asr #13
   137d8:	andeq	r8, r1, r4, asr #19
   137dc:	andeq	r8, r1, ip, ror #13
   137e0:	andeq	r8, r1, r8, asr #13
   137e4:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   137e8:	andeq	r8, r1, r4, lsr #17
   137ec:	muleq	r1, r8, r7
   137f0:	andeq	r8, r1, r8, lsr #15
   137f4:	andeq	r8, r1, r0, asr #15
   137f8:	ldrdeq	r8, [r1], -ip
   137fc:	strdeq	r8, [r1], -ip
   13800:	andeq	r8, r1, r0, lsr #16
   13804:	andeq	r8, r1, r8, asr #16
   13808:	andeq	r8, r1, r4, ror r8
   1380c:			; <UNDEFINED> instruction: 0x000186bc
   13810:	push	{r4, r5, lr}
   13814:	sub	sp, sp, #12
   13818:	ldr	r5, [sp, #24]
   1381c:	ldr	ip, [r5]
   13820:	cmp	ip, #0
   13824:	beq	13840 <argp_parse@@Base+0x135c>
   13828:	mov	lr, r5
   1382c:	mov	ip, #0
   13830:	ldr	r4, [lr, #4]!
   13834:	add	ip, ip, #1
   13838:	cmp	r4, #0
   1383c:	bne	13830 <argp_parse@@Base+0x134c>
   13840:	stm	sp, {r5, ip}
   13844:	bl	13568 <argp_parse@@Base+0x1084>
   13848:	add	sp, sp, #12
   1384c:	pop	{r4, r5, pc}
   13850:	push	{r4, r5, lr}
   13854:	sub	sp, sp, #52	; 0x34
   13858:	add	r5, sp, #4
   1385c:	ldr	r4, [sp, #64]	; 0x40
   13860:	mov	ip, #0
   13864:	sub	r4, r4, #4
   13868:	ldr	lr, [r4, #4]!
   1386c:	cmp	lr, #0
   13870:	str	lr, [r5, #4]!
   13874:	beq	13884 <argp_parse@@Base+0x13a0>
   13878:	add	ip, ip, #1
   1387c:	cmp	ip, #10
   13880:	bne	13868 <argp_parse@@Base+0x1384>
   13884:	add	lr, sp, #8
   13888:	str	ip, [sp, #4]
   1388c:	str	lr, [sp]
   13890:	bl	13568 <argp_parse@@Base+0x1084>
   13894:	add	sp, sp, #52	; 0x34
   13898:	pop	{r4, r5, pc}
   1389c:	push	{r3}		; (str r3, [sp, #-4]!)
   138a0:	push	{r4, lr}
   138a4:	sub	sp, sp, #60	; 0x3c
   138a8:	add	lr, sp, #56	; 0x38
   138ac:	add	r3, sp, #72	; 0x48
   138b0:	str	r3, [lr, #-44]!	; 0xffffffd4
   138b4:	add	r4, sp, #68	; 0x44
   138b8:	mov	r3, #0
   138bc:	ldr	ip, [r4, #4]!
   138c0:	cmp	ip, #0
   138c4:	str	ip, [lr, #4]!
   138c8:	beq	138d8 <argp_parse@@Base+0x13f4>
   138cc:	add	r3, r3, #1
   138d0:	cmp	r3, #10
   138d4:	bne	138bc <argp_parse@@Base+0x13d8>
   138d8:	add	ip, sp, #16
   138dc:	str	r3, [sp, #4]
   138e0:	str	ip, [sp]
   138e4:	ldr	r3, [sp, #68]	; 0x44
   138e8:	bl	13568 <argp_parse@@Base+0x1084>
   138ec:	add	sp, sp, #60	; 0x3c
   138f0:	pop	{r4, lr}
   138f4:	add	sp, sp, #4
   138f8:	bx	lr
   138fc:	ldr	r3, [pc, #56]	; 1393c <argp_parse@@Base+0x1458>
   13900:	push	{r4, lr}
   13904:	mov	r0, #10
   13908:	ldr	r1, [r3]
   1390c:	bl	1127c <fputc@plt>
   13910:	ldr	r1, [pc, #40]	; 13940 <argp_parse@@Base+0x145c>
   13914:	ldr	r0, [pc, #40]	; 13944 <argp_parse@@Base+0x1460>
   13918:	bl	11024 <printf@plt>
   1391c:	ldr	r1, [pc, #36]	; 13948 <argp_parse@@Base+0x1464>
   13920:	ldr	r2, [pc, #36]	; 1394c <argp_parse@@Base+0x1468>
   13924:	ldr	r0, [pc, #36]	; 13950 <argp_parse@@Base+0x146c>
   13928:	bl	11024 <printf@plt>
   1392c:	ldr	r1, [pc, #32]	; 13954 <argp_parse@@Base+0x1470>
   13930:	ldr	r0, [pc, #32]	; 13958 <argp_parse@@Base+0x1474>
   13934:	pop	{r4, lr}
   13938:	b	11024 <printf@plt>
   1393c:	andeq	r9, r2, r4, asr #4
   13940:	andeq	r8, r1, r4, lsl r9
   13944:	andeq	r8, r1, ip, lsr #18
   13948:	andeq	r8, r1, ip, asr r6
   1394c:	andeq	r8, r1, r0, asr #18
   13950:	andeq	r8, r1, r8, ror #18
   13954:	andeq	r8, r1, ip, ror r9
   13958:	muleq	r1, ip, r9
   1395c:	cmp	r0, #0
   13960:	moveq	r0, #1
   13964:	cmp	r0, #0
   13968:	blt	13970 <argp_parse@@Base+0x148c>
   1396c:	b	11138 <malloc@plt>
   13970:	push	{r4, lr}
   13974:	bl	111ec <__errno_location@plt>
   13978:	mov	r3, #12
   1397c:	str	r3, [r0]
   13980:	mov	r0, #0
   13984:	pop	{r4, pc}
   13988:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1398c:	sub	sp, sp, #20
   13990:	ldr	r5, [r0, #4]
   13994:	ldr	r4, [r0]
   13998:	cmp	r5, #0
   1399c:	ldr	r7, [r0, #8]
   139a0:	beq	13a78 <argp_parse@@Base+0x1594>
   139a4:	stmib	sp, {r1, r2, r3}
   139a8:	mov	r6, #1
   139ac:	str	r4, [sp]
   139b0:	mov	r8, #0
   139b4:	b	139d4 <argp_parse@@Base+0x14f0>
   139b8:	mov	r3, r6
   139bc:	subs	r5, r5, #1
   139c0:	moveq	r3, #0
   139c4:	andne	r3, r3, #1
   139c8:	cmp	r3, #0
   139cc:	add	r4, r4, #24
   139d0:	beq	13a40 <argp_parse@@Base+0x155c>
   139d4:	ldr	fp, [r4, #12]
   139d8:	ands	r9, fp, #8
   139dc:	movne	r3, r6
   139e0:	movne	r9, r8
   139e4:	bne	139bc <argp_parse@@Base+0x14d8>
   139e8:	ldr	sl, [r4, #4]
   139ec:	sub	r3, sl, #1
   139f0:	cmp	r3, #254	; 0xfe
   139f4:	bhi	139b8 <argp_parse@@Base+0x14d4>
   139f8:	bl	111a4 <__ctype_b_loc@plt>
   139fc:	lsl	r3, sl, #1
   13a00:	ldr	r1, [r0]
   13a04:	ldrh	r3, [r1, r3]
   13a08:	tst	r3, #16384	; 0x4000
   13a0c:	beq	139b8 <argp_parse@@Base+0x14d4>
   13a10:	ldrb	r3, [r7]
   13a14:	cmp	r3, sl
   13a18:	bne	139b8 <argp_parse@@Base+0x14d4>
   13a1c:	ldr	r3, [sp]
   13a20:	tst	fp, #4
   13a24:	moveq	r3, r4
   13a28:	tst	fp, #2
   13a2c:	str	r3, [sp]
   13a30:	movne	r3, r6
   13a34:	beq	13a50 <argp_parse@@Base+0x156c>
   13a38:	add	r7, r7, #1
   13a3c:	b	139bc <argp_parse@@Base+0x14d8>
   13a40:	mov	sl, r9
   13a44:	mov	r0, sl
   13a48:	add	sp, sp, #20
   13a4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13a50:	ldr	r3, [sp, #12]
   13a54:	ldr	r2, [sp, #8]
   13a58:	ldr	r1, [sp]
   13a5c:	mov	r0, r4
   13a60:	ldr	ip, [sp, #4]
   13a64:	blx	ip
   13a68:	clz	r3, r0
   13a6c:	mov	r9, r0
   13a70:	lsr	r3, r3, #5
   13a74:	b	13a38 <argp_parse@@Base+0x1554>
   13a78:	mov	sl, r5
   13a7c:	b	13a44 <argp_parse@@Base+0x1560>
   13a80:	push	{r4, r5, r6, lr}
   13a84:	ldr	r4, [r0, #12]
   13a88:	ands	r4, r4, #8
   13a8c:	movne	r4, #0
   13a90:	bne	13abc <argp_parse@@Base+0x15d8>
   13a94:	ldr	r5, [r0, #4]
   13a98:	sub	r3, r5, #1
   13a9c:	cmp	r3, #254	; 0xfe
   13aa0:	bhi	13abc <argp_parse@@Base+0x15d8>
   13aa4:	bl	111a4 <__ctype_b_loc@plt>
   13aa8:	lsl	r3, r5, #1
   13aac:	ldr	r2, [r0]
   13ab0:	ldrh	r3, [r2, r3]
   13ab4:	tst	r3, #16384	; 0x4000
   13ab8:	movne	r4, r5
   13abc:	mov	r0, r4
   13ac0:	pop	{r4, r5, r6, pc}
   13ac4:	push	{r4, lr}
   13ac8:	mov	r4, r0
   13acc:	bl	111a4 <__ctype_b_loc@plt>
   13ad0:	ldr	r2, [r4]
   13ad4:	ldr	lr, [r0]
   13ad8:	b	13ae0 <argp_parse@@Base+0x15fc>
   13adc:	str	r2, [r4]
   13ae0:	ldrb	r1, [r2]
   13ae4:	mov	r3, r2
   13ae8:	add	r2, r2, #1
   13aec:	lsl	r0, r1, #1
   13af0:	ldrh	ip, [lr, r0]
   13af4:	tst	ip, #8192	; 0x2000
   13af8:	bne	13adc <argp_parse@@Base+0x15f8>
   13afc:	subs	r0, r1, #45	; 0x2d
   13b00:	movne	r0, #1
   13b04:	cmp	r1, #0
   13b08:	popeq	{r4, pc}
   13b0c:	tst	ip, #8
   13b10:	popne	{r4, pc}
   13b14:	add	r3, r3, #1
   13b18:	str	r3, [r4]
   13b1c:	ldrb	r2, [r3]
   13b20:	cmp	r2, #0
   13b24:	lsl	r2, r2, #1
   13b28:	popeq	{r4, pc}
   13b2c:	ldrh	r2, [lr, r2]
   13b30:	tst	r2, #8
   13b34:	beq	13b14 <argp_parse@@Base+0x1630>
   13b38:	pop	{r4, pc}
   13b3c:	push	{r4, r5, r6, lr}
   13b40:	mov	r5, r0
   13b44:	ldr	r0, [r0, #12]
   13b48:	cmp	r0, #0
   13b4c:	beq	13b60 <argp_parse@@Base+0x167c>
   13b50:	ldr	r4, [r0, #24]
   13b54:	bl	1337c <argp_parse@@Base+0xe98>
   13b58:	subs	r0, r4, #0
   13b5c:	bne	13b50 <argp_parse@@Base+0x166c>
   13b60:	ldr	r3, [r5, #4]
   13b64:	cmp	r3, #0
   13b68:	beq	13b7c <argp_parse@@Base+0x1698>
   13b6c:	ldr	r0, [r5]
   13b70:	bl	1337c <argp_parse@@Base+0xe98>
   13b74:	ldr	r0, [r5, #8]
   13b78:	bl	1337c <argp_parse@@Base+0xe98>
   13b7c:	mov	r0, r5
   13b80:	pop	{r4, r5, r6, lr}
   13b84:	b	1337c <argp_parse@@Base+0xe98>
   13b88:	push	{r4, r5, r6, r7, r8, lr}
   13b8c:	mov	r5, r1
   13b90:	ldr	r3, [r0, #28]
   13b94:	ldr	r1, [r0, #24]
   13b98:	ldr	r2, [r0, #16]
   13b9c:	sub	r3, r3, r1
   13ba0:	cmp	r3, r2
   13ba4:	mov	r4, r0
   13ba8:	bhi	13c14 <argp_parse@@Base+0x1730>
   13bac:	ldr	r1, [r4, #20]
   13bb0:	mov	r6, #32
   13bb4:	cmp	r1, #0
   13bb8:	subge	r5, r5, r1
   13bbc:	mov	r7, #1
   13bc0:	cmp	r5, #0
   13bc4:	sub	r5, r5, #1
   13bc8:	ble	13bf4 <argp_parse@@Base+0x1710>
   13bcc:	ldr	r3, [r4, #28]
   13bd0:	ldr	r2, [r4, #32]
   13bd4:	cmp	r3, r2
   13bd8:	bcs	13bf8 <argp_parse@@Base+0x1714>
   13bdc:	add	r2, r3, #1
   13be0:	cmp	r5, #0
   13be4:	str	r2, [r4, #28]
   13be8:	sub	r5, r5, #1
   13bec:	strb	r6, [r3]
   13bf0:	bgt	13bcc <argp_parse@@Base+0x16e8>
   13bf4:	pop	{r4, r5, r6, r7, r8, pc}
   13bf8:	mov	r1, r7
   13bfc:	mov	r0, r4
   13c00:	bl	17fc8 <argp_error@@Base+0x1444>
   13c04:	cmp	r0, #0
   13c08:	beq	13bc0 <argp_parse@@Base+0x16dc>
   13c0c:	ldr	r3, [r4, #28]
   13c10:	b	13bdc <argp_parse@@Base+0x16f8>
   13c14:	bl	17938 <argp_error@@Base+0xdb4>
   13c18:	b	13bac <argp_parse@@Base+0x16c8>
   13c1c:	push	{r4, r5, r6, lr}
   13c20:	subs	r4, r2, #0
   13c24:	popeq	{r4, r5, r6, pc}
   13c28:	ldr	ip, [r4, #20]
   13c2c:	cmp	ip, #0
   13c30:	popeq	{r4, r5, r6, pc}
   13c34:	mov	r6, r1
   13c38:	mov	r5, r0
   13c3c:	mov	r1, r3
   13c40:	mov	r0, r4
   13c44:	bl	13220 <argp_parse@@Base+0xd3c>
   13c48:	ldr	r3, [r4, #20]
   13c4c:	mov	r1, r5
   13c50:	mov	r2, r0
   13c54:	mov	r0, r6
   13c58:	pop	{r4, r5, r6, lr}
   13c5c:	bx	r3
   13c60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13c64:	mov	r5, r2
   13c68:	sub	sp, sp, #12
   13c6c:	mov	r2, r1
   13c70:	ldr	r3, [r5, #16]
   13c74:	ldr	r1, [pc, #488]	; 13e64 <argp_parse@@Base+0x1980>
   13c78:	mov	r8, r0
   13c7c:	bl	13c1c <argp_parse@@Base+0x1738>
   13c80:	subs	r6, r0, #0
   13c84:	beq	13d90 <argp_parse@@Base+0x18ac>
   13c88:	ldrb	r3, [r6]
   13c8c:	cmp	r3, #0
   13c90:	beq	13d84 <argp_parse@@Base+0x18a0>
   13c94:	ldr	r3, [r5, #8]
   13c98:	ldr	r3, [r3]
   13c9c:	cmp	r3, #0
   13ca0:	beq	13cc8 <argp_parse@@Base+0x17e4>
   13ca4:	ldr	r4, [r5, #4]
   13ca8:	ldr	r3, [r4, #28]
   13cac:	ldr	r2, [r4, #32]
   13cb0:	cmp	r3, r2
   13cb4:	bcs	13e48 <argp_parse@@Base+0x1964>
   13cb8:	add	r1, r3, #1
   13cbc:	mov	r2, #10
   13cc0:	str	r1, [r4, #28]
   13cc4:	strb	r2, [r3]
   13cc8:	ldr	sl, [pc, #408]	; 13e68 <argp_parse@@Base+0x1984>
   13ccc:	ldr	r0, [r5, #4]
   13cd0:	ldr	r1, [sl, #24]
   13cd4:	bl	13b88 <argp_parse@@Base+0x16a4>
   13cd8:	ldr	r4, [r5, #4]
   13cdc:	ldr	r9, [sl, #24]
   13ce0:	ldr	r7, [r4, #28]
   13ce4:	ldr	r3, [r4, #24]
   13ce8:	ldr	r2, [r4, #16]
   13cec:	sub	r3, r7, r3
   13cf0:	cmp	r3, r2
   13cf4:	strls	r9, [r4, #4]
   13cf8:	movls	fp, r4
   13cfc:	bhi	13dcc <argp_parse@@Base+0x18e8>
   13d00:	str	r9, [fp, #12]
   13d04:	mov	r0, r6
   13d08:	bl	111bc <strlen@plt>
   13d0c:	subs	r9, r0, #0
   13d10:	beq	13d48 <argp_parse@@Base+0x1864>
   13d14:	ldr	r2, [r4, #32]
   13d18:	add	r3, r7, r9
   13d1c:	cmp	r2, r3
   13d20:	bcc	13db0 <argp_parse@@Base+0x18cc>
   13d24:	mov	r2, r9
   13d28:	mov	r0, r7
   13d2c:	mov	r1, r6
   13d30:	bl	11084 <memcpy@plt>
   13d34:	ldr	r3, [r4, #28]
   13d38:	add	r9, r3, r9
   13d3c:	str	r9, [r4, #28]
   13d40:	ldr	r4, [r5, #4]
   13d44:	ldr	r7, [r4, #28]
   13d48:	ldr	r3, [r4, #24]
   13d4c:	ldr	r2, [r4, #16]
   13d50:	sub	r3, r7, r3
   13d54:	cmp	r3, r2
   13d58:	movls	r9, r4
   13d5c:	bhi	13e18 <argp_parse@@Base+0x1934>
   13d60:	ldr	r2, [r9, #32]
   13d64:	mov	r3, #0
   13d68:	cmp	r2, r7
   13d6c:	str	r3, [r4, #4]
   13d70:	bls	13e2c <argp_parse@@Base+0x1948>
   13d74:	add	r2, r7, #1
   13d78:	mov	r3, #10
   13d7c:	str	r2, [r9, #28]
   13d80:	strb	r3, [r7]
   13d84:	ldr	r3, [r5, #8]
   13d88:	mov	r2, #1
   13d8c:	str	r2, [r3, #4]
   13d90:	cmp	r8, r6
   13d94:	beq	13da8 <argp_parse@@Base+0x18c4>
   13d98:	mov	r0, r6
   13d9c:	add	sp, sp, #12
   13da0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13da4:	b	1337c <argp_parse@@Base+0xe98>
   13da8:	add	sp, sp, #12
   13dac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13db0:	mov	r1, r9
   13db4:	mov	r0, r4
   13db8:	bl	17fc8 <argp_error@@Base+0x1444>
   13dbc:	cmp	r0, #0
   13dc0:	beq	13d40 <argp_parse@@Base+0x185c>
   13dc4:	ldr	r7, [r4, #28]
   13dc8:	b	13d24 <argp_parse@@Base+0x1840>
   13dcc:	mov	r0, r4
   13dd0:	str	r9, [sp, #4]
   13dd4:	bl	17938 <argp_error@@Base+0xdb4>
   13dd8:	ldr	fp, [r5, #4]
   13ddc:	ldr	r3, [sp, #4]
   13de0:	ldr	r9, [sl, #24]
   13de4:	ldr	r7, [fp, #28]
   13de8:	ldr	r2, [fp, #24]
   13dec:	ldr	r1, [fp, #16]
   13df0:	sub	r2, r7, r2
   13df4:	cmp	r2, r1
   13df8:	str	r3, [r4, #4]
   13dfc:	movls	r4, fp
   13e00:	bls	13d00 <argp_parse@@Base+0x181c>
   13e04:	mov	r0, fp
   13e08:	bl	17938 <argp_error@@Base+0xdb4>
   13e0c:	ldr	r4, [r5, #4]
   13e10:	ldr	r7, [r4, #28]
   13e14:	b	13d00 <argp_parse@@Base+0x181c>
   13e18:	mov	r0, r4
   13e1c:	bl	17938 <argp_error@@Base+0xdb4>
   13e20:	ldr	r9, [r5, #4]
   13e24:	ldr	r7, [r9, #28]
   13e28:	b	13d60 <argp_parse@@Base+0x187c>
   13e2c:	mov	r1, #1
   13e30:	mov	r0, r9
   13e34:	bl	17fc8 <argp_error@@Base+0x1444>
   13e38:	cmp	r0, #0
   13e3c:	beq	13d84 <argp_parse@@Base+0x18a0>
   13e40:	ldr	r7, [r9, #28]
   13e44:	b	13d74 <argp_parse@@Base+0x1890>
   13e48:	mov	r1, #1
   13e4c:	mov	r0, r4
   13e50:	bl	17fc8 <argp_error@@Base+0x1444>
   13e54:	cmp	r0, #0
   13e58:	beq	13cc8 <argp_parse@@Base+0x17e4>
   13e5c:	ldr	r3, [r4, #28]
   13e60:	b	13cb8 <argp_parse@@Base+0x17d4>
   13e64:	andeq	r0, r0, #3
   13e68:	strdeq	r9, [r2], -ip
   13e6c:	ldr	r3, [r1, #12]
   13e70:	push	{r4, r5, r6, r7, r8, lr}
   13e74:	cmp	r3, #0
   13e78:	mov	r4, r1
   13e7c:	mov	r6, r0
   13e80:	beq	13f68 <argp_parse@@Base+0x1a84>
   13e84:	ldr	r3, [r1, #8]
   13e88:	ldr	r2, [r1]
   13e8c:	ldr	r7, [r3]
   13e90:	ldr	r3, [r3, #4]
   13e94:	ldr	r5, [r2, #16]
   13e98:	cmp	r3, #0
   13e9c:	cmpne	r7, #0
   13ea0:	beq	13ed8 <argp_parse@@Base+0x19f4>
   13ea4:	ldr	r2, [r2, #12]
   13ea8:	ldr	r3, [r7, #12]
   13eac:	cmp	r2, r3
   13eb0:	beq	13ed8 <argp_parse@@Base+0x19f4>
   13eb4:	ldr	r8, [r1, #4]
   13eb8:	ldr	r3, [r8, #28]
   13ebc:	ldr	r2, [r8, #32]
   13ec0:	cmp	r3, r2
   13ec4:	bcs	13ff8 <argp_parse@@Base+0x1b14>
   13ec8:	add	r1, r3, #1
   13ecc:	mov	r2, #10
   13ed0:	str	r1, [r8, #28]
   13ed4:	strb	r2, [r3]
   13ed8:	cmp	r5, #0
   13edc:	beq	13fc4 <argp_parse@@Base+0x1ae0>
   13ee0:	ldr	r0, [r5]
   13ee4:	cmp	r0, #0
   13ee8:	beq	13fc4 <argp_parse@@Base+0x1ae0>
   13eec:	ldrb	r3, [r0]
   13ef0:	cmp	r3, #0
   13ef4:	beq	13fc4 <argp_parse@@Base+0x1ae0>
   13ef8:	cmp	r7, #0
   13efc:	beq	13f2c <argp_parse@@Base+0x1a48>
   13f00:	ldr	r3, [r7, #16]
   13f04:	cmp	r5, r3
   13f08:	beq	13fc4 <argp_parse@@Base+0x1ae0>
   13f0c:	cmp	r3, #0
   13f10:	beq	13f2c <argp_parse@@Base+0x1a48>
   13f14:	ldr	r3, [r3, #12]
   13f18:	cmp	r3, #0
   13f1c:	cmpne	r5, r3
   13f20:	bne	13f14 <argp_parse@@Base+0x1a30>
   13f24:	cmp	r5, r3
   13f28:	beq	13fc4 <argp_parse@@Base+0x1ae0>
   13f2c:	ldr	r3, [r4, #4]
   13f30:	ldr	r1, [r5, #16]
   13f34:	mov	r2, r4
   13f38:	ldr	r7, [r3, #12]
   13f3c:	bl	13c60 <argp_parse@@Base+0x177c>
   13f40:	ldr	r5, [r4, #4]
   13f44:	mov	r0, r5
   13f48:	ldr	r3, [r5, #28]
   13f4c:	ldr	r1, [r5, #24]
   13f50:	ldr	r2, [r5, #16]
   13f54:	sub	r3, r3, r1
   13f58:	cmp	r3, r2
   13f5c:	bhi	13fec <argp_parse@@Base+0x1b08>
   13f60:	str	r7, [r5, #12]
   13f64:	b	13fc8 <argp_parse@@Base+0x1ae4>
   13f68:	ldr	r5, [r1, #4]
   13f6c:	ldr	r3, [r5, #28]
   13f70:	ldr	r1, [r5, #32]
   13f74:	add	r2, r3, #2
   13f78:	cmp	r1, r2
   13f7c:	bcc	13fa8 <argp_parse@@Base+0x1ac4>
   13f80:	ldr	r2, [pc, #140]	; 14014 <argp_parse@@Base+0x1b30>
   13f84:	mov	r1, r6
   13f88:	ldrh	r2, [r2]
   13f8c:	strh	r2, [r3]
   13f90:	ldr	r3, [r5, #28]
   13f94:	ldr	r0, [r4, #4]
   13f98:	add	r3, r3, #2
   13f9c:	str	r3, [r5, #28]
   13fa0:	pop	{r4, r5, r6, r7, r8, lr}
   13fa4:	b	13b88 <argp_parse@@Base+0x16a4>
   13fa8:	mov	r1, #2
   13fac:	mov	r0, r5
   13fb0:	bl	17fc8 <argp_error@@Base+0x1444>
   13fb4:	cmp	r0, #0
   13fb8:	beq	13fdc <argp_parse@@Base+0x1af8>
   13fbc:	ldr	r3, [r5, #28]
   13fc0:	b	13f80 <argp_parse@@Base+0x1a9c>
   13fc4:	ldr	r0, [r4, #4]
   13fc8:	mov	r3, #0
   13fcc:	str	r3, [r4, #12]
   13fd0:	mov	r1, r6
   13fd4:	pop	{r4, r5, r6, r7, r8, lr}
   13fd8:	b	13b88 <argp_parse@@Base+0x16a4>
   13fdc:	ldr	r0, [r4, #4]
   13fe0:	mov	r1, r6
   13fe4:	pop	{r4, r5, r6, r7, r8, lr}
   13fe8:	b	13b88 <argp_parse@@Base+0x16a4>
   13fec:	bl	17938 <argp_error@@Base+0xdb4>
   13ff0:	ldr	r0, [r4, #4]
   13ff4:	b	13f60 <argp_parse@@Base+0x1a7c>
   13ff8:	mov	r1, #1
   13ffc:	mov	r0, r8
   14000:	bl	17fc8 <argp_error@@Base+0x1444>
   14004:	cmp	r0, #0
   14008:	beq	13ed8 <argp_parse@@Base+0x19f4>
   1400c:	ldr	r3, [r8, #28]
   14010:	b	13ec8 <argp_parse@@Base+0x19e4>
   14014:	muleq	r1, ip, sl
   14018:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1401c:	mov	r7, r3
   14020:	ldr	sl, [r0, #12]
   14024:	sub	sp, sp, #36	; 0x24
   14028:	ldr	r3, [r0, #16]
   1402c:	cmp	sl, #0
   14030:	mov	fp, r0
   14034:	mov	r6, r2
   14038:	str	r3, [sp, #16]
   1403c:	mov	r9, r1
   14040:	ldr	r8, [sp, #72]	; 0x48
   14044:	ldr	r5, [sp, #76]	; 0x4c
   14048:	beq	14418 <argp_parse@@Base+0x1f34>
   1404c:	mov	r1, #11
   14050:	mov	r0, sl
   14054:	bl	111c8 <strchr@plt>
   14058:	cmp	r6, #0
   1405c:	bne	14334 <argp_parse@@Base+0x1e50>
   14060:	cmp	r0, #0
   14064:	ldr	r3, [fp, #20]
   14068:	beq	14570 <argp_parse@@Base+0x208c>
   1406c:	cmp	r3, #0
   14070:	sub	r4, r0, sl
   14074:	beq	14508 <argp_parse@@Base+0x2024>
   14078:	cmp	r4, #0
   1407c:	beq	144a8 <argp_parse@@Base+0x1fc4>
   14080:	mov	r0, sl
   14084:	mov	r1, r4
   14088:	bl	11078 <strndup@plt>
   1408c:	mov	r3, #1
   14090:	str	r3, [sp, #24]
   14094:	mov	sl, r0
   14098:	adds	r3, r0, #0
   1409c:	movne	r3, #1
   140a0:	str	r3, [sp, #20]
   140a4:	mov	r1, r9
   140a8:	mov	r0, fp
   140ac:	bl	13220 <argp_parse@@Base+0xd3c>
   140b0:	ldr	r3, [fp, #20]
   140b4:	str	r0, [sp, #12]
   140b8:	ldr	r0, [pc, #1272]	; 145b8 <argp_parse@@Base+0x20d4>
   140bc:	ldr	r2, [sp, #12]
   140c0:	mov	r1, sl
   140c4:	blx	r3
   140c8:	subs	r3, r0, #0
   140cc:	beq	14458 <argp_parse@@Base+0x1f74>
   140d0:	cmp	r7, #0
   140d4:	beq	140f8 <argp_parse@@Base+0x1c14>
   140d8:	ldr	r2, [r5, #28]
   140dc:	ldr	r1, [r5, #32]
   140e0:	cmp	r2, r1
   140e4:	bcs	14460 <argp_parse@@Base+0x1f7c>
   140e8:	add	r0, r2, #1
   140ec:	mov	r1, #10
   140f0:	str	r0, [r5, #28]
   140f4:	strb	r1, [r2]
   140f8:	ldr	r2, [sp, #24]
   140fc:	cmp	r3, sl
   14100:	movne	r2, #0
   14104:	andeq	r2, r2, #1
   14108:	cmp	r2, #0
   1410c:	beq	14378 <argp_parse@@Base+0x1e94>
   14110:	ldr	r0, [r5, #28]
   14114:	ldr	r1, [r5, #32]
   14118:	add	r2, r0, r4
   1411c:	cmp	r1, r2
   14120:	bcs	143d8 <argp_parse@@Base+0x1ef4>
   14124:	mov	r1, r4
   14128:	mov	r0, r5
   1412c:	str	r3, [sp, #24]
   14130:	bl	17fc8 <argp_error@@Base+0x1444>
   14134:	ldr	r3, [sp, #24]
   14138:	cmp	r0, #0
   1413c:	bne	143d4 <argp_parse@@Base+0x1ef0>
   14140:	ldr	r4, [r5, #28]
   14144:	ldr	r1, [r5, #24]
   14148:	ldr	r2, [r5, #16]
   1414c:	sub	r4, r4, r1
   14150:	cmp	r4, r2
   14154:	bhi	143fc <argp_parse@@Base+0x1f18>
   14158:	ldr	r2, [r5, #20]
   1415c:	ldr	r1, [r5, #4]
   14160:	bic	r2, r2, r2, asr #31
   14164:	cmp	r1, r2
   14168:	bcs	1418c <argp_parse@@Base+0x1ca8>
   1416c:	ldr	r2, [r5, #28]
   14170:	ldr	r1, [r5, #32]
   14174:	cmp	r2, r1
   14178:	bcs	14484 <argp_parse@@Base+0x1fa0>
   1417c:	add	r0, r2, #1
   14180:	mov	r1, #10
   14184:	str	r0, [r5, #28]
   14188:	strb	r1, [r2]
   1418c:	cmp	r3, sl
   14190:	moveq	r4, #1
   14194:	beq	141a4 <argp_parse@@Base+0x1cc0>
   14198:	mov	r0, r3
   1419c:	bl	1337c <argp_parse@@Base+0xe98>
   141a0:	mov	r4, #1
   141a4:	ldr	r3, [sp, #20]
   141a8:	cmp	r3, #0
   141ac:	beq	141c4 <argp_parse@@Base+0x1ce0>
   141b0:	ldr	r3, [fp, #20]
   141b4:	cmp	r3, #0
   141b8:	beq	142a8 <argp_parse@@Base+0x1dc4>
   141bc:	mov	r0, sl
   141c0:	bl	1337c <argp_parse@@Base+0xe98>
   141c4:	cmp	r6, #0
   141c8:	beq	142a8 <argp_parse@@Base+0x1dc4>
   141cc:	ldr	r3, [fp, #20]
   141d0:	cmp	r3, #0
   141d4:	beq	142a8 <argp_parse@@Base+0x1dc4>
   141d8:	ldr	r2, [sp, #12]
   141dc:	mov	r1, #0
   141e0:	ldr	r0, [pc, #980]	; 145bc <argp_parse@@Base+0x20d8>
   141e4:	blx	r3
   141e8:	subs	sl, r0, #0
   141ec:	beq	142a8 <argp_parse@@Base+0x1dc4>
   141f0:	orrs	r3, r7, r4
   141f4:	beq	14218 <argp_parse@@Base+0x1d34>
   141f8:	ldr	r3, [r5, #28]
   141fc:	ldr	r2, [r5, #32]
   14200:	cmp	r3, r2
   14204:	bcs	14540 <argp_parse@@Base+0x205c>
   14208:	add	r1, r3, #1
   1420c:	mov	r2, #10
   14210:	str	r1, [r5, #28]
   14214:	strb	r2, [r3]
   14218:	mov	r0, sl
   1421c:	bl	111bc <strlen@plt>
   14220:	subs	r4, r0, #0
   14224:	beq	14250 <argp_parse@@Base+0x1d6c>
   14228:	ldr	r0, [r5, #28]
   1422c:	ldr	r2, [r5, #32]
   14230:	add	r3, r0, r4
   14234:	cmp	r2, r3
   14238:	bcs	144b8 <argp_parse@@Base+0x1fd4>
   1423c:	mov	r1, r4
   14240:	mov	r0, r5
   14244:	bl	17fc8 <argp_error@@Base+0x1444>
   14248:	cmp	r0, #0
   1424c:	bne	144b4 <argp_parse@@Base+0x1fd0>
   14250:	mov	r0, sl
   14254:	bl	1337c <argp_parse@@Base+0xe98>
   14258:	ldr	r3, [r5, #28]
   1425c:	ldr	r1, [r5, #24]
   14260:	ldr	r2, [r5, #16]
   14264:	sub	r3, r3, r1
   14268:	cmp	r3, r2
   1426c:	bhi	144d4 <argp_parse@@Base+0x1ff0>
   14270:	ldr	r3, [r5, #20]
   14274:	ldr	r2, [r5, #4]
   14278:	bic	r3, r3, r3, asr #31
   1427c:	cmp	r2, r3
   14280:	bcs	14410 <argp_parse@@Base+0x1f2c>
   14284:	ldr	r3, [r5, #28]
   14288:	ldr	r2, [r5, #32]
   1428c:	cmp	r3, r2
   14290:	bcs	14524 <argp_parse@@Base+0x2040>
   14294:	mov	r4, #1
   14298:	add	r2, r3, r4
   1429c:	str	r2, [r5, #28]
   142a0:	mov	r2, #10
   142a4:	strb	r2, [r3]
   142a8:	ldr	fp, [sp, #16]
   142ac:	cmp	fp, #0
   142b0:	beq	14328 <argp_parse@@Base+0x1e44>
   142b4:	ldr	r3, [fp]
   142b8:	cmp	r3, #0
   142bc:	beq	14328 <argp_parse@@Base+0x1e44>
   142c0:	eor	r2, r4, #1
   142c4:	and	r2, r2, #1
   142c8:	clz	sl, r8
   142cc:	lsr	sl, sl, #5
   142d0:	orrs	r2, sl, r2
   142d4:	bne	142f0 <argp_parse@@Base+0x1e0c>
   142d8:	b	1455c <argp_parse@@Base+0x2078>
   142dc:	cmp	r4, #0
   142e0:	movne	r2, sl
   142e4:	orreq	r2, sl, #1
   142e8:	cmp	r2, #0
   142ec:	beq	14328 <argp_parse@@Base+0x1e44>
   142f0:	orrs	r2, r7, r4
   142f4:	mov	r0, r3
   142f8:	str	r5, [sp, #4]
   142fc:	movne	r3, #1
   14300:	moveq	r3, #0
   14304:	str	r8, [sp]
   14308:	mov	r2, r6
   1430c:	mov	r1, r9
   14310:	bl	14018 <argp_parse@@Base+0x1b34>
   14314:	ldr	r3, [fp, #16]
   14318:	add	fp, fp, #16
   1431c:	cmp	r3, #0
   14320:	orr	r4, r4, r0
   14324:	bne	142dc <argp_parse@@Base+0x1df8>
   14328:	mov	r0, r4
   1432c:	add	sp, sp, #36	; 0x24
   14330:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14334:	cmp	r0, #0
   14338:	addne	sl, r0, #1
   1433c:	beq	14500 <argp_parse@@Base+0x201c>
   14340:	ldr	r3, [fp, #20]
   14344:	cmp	r3, #0
   14348:	beq	144e0 <argp_parse@@Base+0x1ffc>
   1434c:	mov	r3, #0
   14350:	mov	r1, r9
   14354:	mov	r0, fp
   14358:	mov	r4, r3
   1435c:	str	r3, [sp, #20]
   14360:	bl	13220 <argp_parse@@Base+0xd3c>
   14364:	str	r4, [sp, #24]
   14368:	ldr	r3, [fp, #20]
   1436c:	str	r0, [sp, #12]
   14370:	ldr	r0, [pc, #584]	; 145c0 <argp_parse@@Base+0x20dc>
   14374:	b	140bc <argp_parse@@Base+0x1bd8>
   14378:	mov	r0, r3
   1437c:	str	r3, [sp, #24]
   14380:	bl	111bc <strlen@plt>
   14384:	ldr	r3, [sp, #24]
   14388:	subs	r4, r0, #0
   1438c:	beq	14140 <argp_parse@@Base+0x1c5c>
   14390:	ldr	r0, [r5, #28]
   14394:	ldr	r1, [r5, #32]
   14398:	add	r2, r0, r4
   1439c:	cmp	r1, r2
   143a0:	bcs	143c4 <argp_parse@@Base+0x1ee0>
   143a4:	mov	r1, r4
   143a8:	mov	r0, r5
   143ac:	str	r3, [sp, #24]
   143b0:	bl	17fc8 <argp_error@@Base+0x1444>
   143b4:	ldr	r3, [sp, #24]
   143b8:	cmp	r0, #0
   143bc:	beq	14140 <argp_parse@@Base+0x1c5c>
   143c0:	ldr	r0, [r5, #28]
   143c4:	mov	r2, r4
   143c8:	mov	r1, r3
   143cc:	str	r3, [sp, #24]
   143d0:	b	143e4 <argp_parse@@Base+0x1f00>
   143d4:	ldr	r0, [r5, #28]
   143d8:	mov	r2, r4
   143dc:	mov	r1, sl
   143e0:	str	r3, [sp, #24]
   143e4:	bl	11084 <memcpy@plt>
   143e8:	ldr	r2, [r5, #28]
   143ec:	ldr	r3, [sp, #24]
   143f0:	add	r4, r2, r4
   143f4:	str	r4, [r5, #28]
   143f8:	b	14144 <argp_parse@@Base+0x1c60>
   143fc:	mov	r0, r5
   14400:	str	r3, [sp, #24]
   14404:	bl	17938 <argp_error@@Base+0xdb4>
   14408:	ldr	r3, [sp, #24]
   1440c:	b	14158 <argp_parse@@Base+0x1c74>
   14410:	mov	r4, #1
   14414:	b	142a8 <argp_parse@@Base+0x1dc4>
   14418:	ldr	r4, [r0, #20]
   1441c:	cmp	r4, #0
   14420:	beq	14568 <argp_parse@@Base+0x2084>
   14424:	bl	13220 <argp_parse@@Base+0xd3c>
   14428:	cmp	r6, #0
   1442c:	ldr	r3, [fp, #20]
   14430:	strne	sl, [sp, #20]
   14434:	strne	sl, [sp, #24]
   14438:	movne	r4, sl
   1443c:	streq	r6, [sp, #20]
   14440:	streq	r6, [sp, #24]
   14444:	moveq	r4, r6
   14448:	str	r0, [sp, #12]
   1444c:	ldrne	r0, [pc, #364]	; 145c0 <argp_parse@@Base+0x20dc>
   14450:	ldreq	r0, [pc, #352]	; 145b8 <argp_parse@@Base+0x20d4>
   14454:	b	140bc <argp_parse@@Base+0x1bd8>
   14458:	mov	r4, r3
   1445c:	b	141a4 <argp_parse@@Base+0x1cc0>
   14460:	mov	r1, #1
   14464:	mov	r0, r5
   14468:	str	r3, [sp, #28]
   1446c:	bl	17fc8 <argp_error@@Base+0x1444>
   14470:	ldr	r3, [sp, #28]
   14474:	cmp	r0, #0
   14478:	beq	140f8 <argp_parse@@Base+0x1c14>
   1447c:	ldr	r2, [r5, #28]
   14480:	b	140e8 <argp_parse@@Base+0x1c04>
   14484:	mov	r1, #1
   14488:	mov	r0, r5
   1448c:	str	r3, [sp, #24]
   14490:	bl	17fc8 <argp_error@@Base+0x1444>
   14494:	ldr	r3, [sp, #24]
   14498:	cmp	r0, #0
   1449c:	beq	1418c <argp_parse@@Base+0x1ca8>
   144a0:	ldr	r2, [r5, #28]
   144a4:	b	1417c <argp_parse@@Base+0x1c98>
   144a8:	str	r4, [sp, #20]
   144ac:	str	r4, [sp, #24]
   144b0:	b	140a4 <argp_parse@@Base+0x1bc0>
   144b4:	ldr	r0, [r5, #28]
   144b8:	mov	r2, r4
   144bc:	mov	r1, sl
   144c0:	bl	11084 <memcpy@plt>
   144c4:	ldr	r3, [r5, #28]
   144c8:	add	r4, r3, r4
   144cc:	str	r4, [r5, #28]
   144d0:	b	14250 <argp_parse@@Base+0x1d6c>
   144d4:	mov	r0, r5
   144d8:	bl	17938 <argp_error@@Base+0xdb4>
   144dc:	b	14270 <argp_parse@@Base+0x1d8c>
   144e0:	cmp	sl, #0
   144e4:	beq	14564 <argp_parse@@Base+0x2080>
   144e8:	str	r3, [sp, #20]
   144ec:	str	r3, [sp, #24]
   144f0:	mov	r4, r3
   144f4:	str	r3, [sp, #12]
   144f8:	mov	r3, sl
   144fc:	b	140d0 <argp_parse@@Base+0x1bec>
   14500:	mov	sl, r0
   14504:	b	14340 <argp_parse@@Base+0x1e5c>
   14508:	adds	r3, r4, #0
   1450c:	movne	r3, #1
   14510:	str	r3, [sp, #24]
   14514:	str	r3, [sp, #20]
   14518:	str	r6, [sp, #12]
   1451c:	mov	r3, sl
   14520:	b	140d0 <argp_parse@@Base+0x1bec>
   14524:	mov	r1, #1
   14528:	mov	r0, r5
   1452c:	bl	17fc8 <argp_error@@Base+0x1444>
   14530:	cmp	r0, #0
   14534:	beq	14410 <argp_parse@@Base+0x1f2c>
   14538:	ldr	r3, [r5, #28]
   1453c:	b	14294 <argp_parse@@Base+0x1db0>
   14540:	mov	r1, #1
   14544:	mov	r0, r5
   14548:	bl	17fc8 <argp_error@@Base+0x1444>
   1454c:	cmp	r0, #0
   14550:	beq	14218 <argp_parse@@Base+0x1d34>
   14554:	ldr	r3, [r5, #28]
   14558:	b	14208 <argp_parse@@Base+0x1d24>
   1455c:	mov	r4, #1
   14560:	b	14328 <argp_parse@@Base+0x1e44>
   14564:	mov	r4, sl
   14568:	str	r4, [sp, #12]
   1456c:	b	141c4 <argp_parse@@Base+0x1ce0>
   14570:	cmp	r3, #0
   14574:	beq	145a0 <argp_parse@@Base+0x20bc>
   14578:	mov	r1, r9
   1457c:	mov	r0, fp
   14580:	bl	13220 <argp_parse@@Base+0xd3c>
   14584:	mov	r4, r6
   14588:	ldr	r3, [fp, #20]
   1458c:	str	r6, [sp, #20]
   14590:	str	r6, [sp, #24]
   14594:	str	r0, [sp, #12]
   14598:	ldr	r0, [pc, #24]	; 145b8 <argp_parse@@Base+0x20d4>
   1459c:	b	140bc <argp_parse@@Base+0x1bd8>
   145a0:	mov	r3, sl
   145a4:	str	r6, [sp, #20]
   145a8:	str	r6, [sp, #24]
   145ac:	mov	r4, r6
   145b0:	str	r6, [sp, #12]
   145b4:	b	140d0 <argp_parse@@Base+0x1bec>
   145b8:	andeq	r0, r0, #1
   145bc:	andeq	r0, r0, #4
   145c0:	andeq	r0, r0, #2
   145c4:	ldr	r3, [r0, #12]
   145c8:	ldr	r2, [r1, #12]
   145cc:	push	{r4, r5, r6, lr}
   145d0:	cmp	r3, r2
   145d4:	beq	14624 <argp_parse@@Base+0x2140>
   145d8:	mov	r5, r1
   145dc:	mov	r4, r0
   145e0:	mov	r1, r2
   145e4:	mov	r0, r3
   145e8:	bl	145c4 <argp_parse@@Base+0x20e0>
   145ec:	cmp	r0, #0
   145f0:	popne	{r4, r5, r6, pc}
   145f4:	ldr	r3, [r5, #8]
   145f8:	ldr	r0, [r4, #8]
   145fc:	mvn	r2, r3
   14600:	lsr	r2, r2, #31
   14604:	cmp	r2, r0, lsr #31
   14608:	subne	r0, r0, r3
   1460c:	subeq	r0, r3, r0
   14610:	cmp	r0, #0
   14614:	ldreq	r3, [r5, #4]
   14618:	ldreq	r0, [r4, #4]
   1461c:	subeq	r0, r3, r0
   14620:	pop	{r4, r5, r6, pc}
   14624:	ldr	r3, [r1, #8]
   14628:	ldr	r2, [r0, #8]
   1462c:	mvn	ip, r3
   14630:	ldr	lr, [r1, #4]
   14634:	lsr	ip, ip, #31
   14638:	cmp	ip, r2, lsr #31
   1463c:	ldr	r1, [r0, #4]
   14640:	subne	r0, r2, r3
   14644:	subeq	r0, r3, r2
   14648:	cmp	r0, #0
   1464c:	subeq	r0, lr, r1
   14650:	pop	{r4, r5, r6, pc}
   14654:	push	{r4, r5, r6, r7, r8, r9, lr}
   14658:	sub	sp, sp, #12
   1465c:	ldr	lr, [r0, #16]
   14660:	cmp	lr, #0
   14664:	movne	r2, lr
   14668:	bne	14674 <argp_parse@@Base+0x2190>
   1466c:	b	14938 <argp_parse@@Base+0x2454>
   14670:	mov	r2, r3
   14674:	ldr	r3, [r2, #12]
   14678:	cmp	r3, #0
   1467c:	bne	14670 <argp_parse@@Base+0x218c>
   14680:	ldr	ip, [r1, #16]
   14684:	ldr	r4, [r2, #8]
   14688:	cmp	ip, #0
   1468c:	movne	r2, ip
   14690:	bne	1469c <argp_parse@@Base+0x21b8>
   14694:	b	1494c <argp_parse@@Base+0x2468>
   14698:	mov	r2, r3
   1469c:	ldr	r3, [r2, #12]
   146a0:	cmp	r3, #0
   146a4:	bne	14698 <argp_parse@@Base+0x21b4>
   146a8:	ldr	r3, [r2, #8]
   146ac:	mvn	r2, r3
   146b0:	lsr	r2, r2, #31
   146b4:	cmp	r2, r4, lsr #31
   146b8:	subne	r4, r4, r3
   146bc:	subeq	r4, r3, r4
   146c0:	cmp	r4, #0
   146c4:	bne	1472c <argp_parse@@Base+0x2248>
   146c8:	adds	r4, ip, #0
   146cc:	movne	r4, #1
   146d0:	cmp	lr, #0
   146d4:	rsbeq	r4, r4, #0
   146d8:	rsbne	r4, r4, #1
   146dc:	cmp	r4, #0
   146e0:	bne	1472c <argp_parse@@Base+0x2248>
   146e4:	cmp	lr, #0
   146e8:	mov	r5, r1
   146ec:	mov	r6, r0
   146f0:	beq	14748 <argp_parse@@Base+0x2264>
   146f4:	ldr	r0, [lr, #20]
   146f8:	ldr	r2, [ip, #20]
   146fc:	cmp	r0, r2
   14700:	ble	1490c <argp_parse@@Base+0x2428>
   14704:	mov	r0, lr
   14708:	ldr	r0, [r0, #12]
   1470c:	ldr	r3, [r0, #20]
   14710:	cmp	r2, r3
   14714:	blt	14708 <argp_parse@@Base+0x2224>
   14718:	mov	r1, ip
   1471c:	bl	145c4 <argp_parse@@Base+0x20e0>
   14720:	cmp	r0, #0
   14724:	movne	r4, r0
   14728:	moveq	r4, #1
   1472c:	mov	r0, r4
   14730:	add	sp, sp, #12
   14734:	pop	{r4, r5, r6, r7, r8, r9, pc}
   14738:	mov	r0, lr
   1473c:	bl	145c4 <argp_parse@@Base+0x20e0>
   14740:	subs	r4, r0, #0
   14744:	bne	1472c <argp_parse@@Base+0x2248>
   14748:	ldr	r4, [r5, #12]
   1474c:	ldr	r3, [r6, #12]
   14750:	mvn	r2, r4
   14754:	lsr	r2, r2, #31
   14758:	cmp	r2, r3, lsr #31
   1475c:	subne	r4, r3, r4
   14760:	subeq	r4, r4, r3
   14764:	cmp	r4, #0
   14768:	bne	1472c <argp_parse@@Base+0x2248>
   1476c:	ldr	r2, [r6, #4]
   14770:	ldr	lr, [r6]
   14774:	cmp	r2, #0
   14778:	beq	147a4 <argp_parse@@Base+0x22c0>
   1477c:	add	r3, lr, #24
   14780:	ldr	r1, [r3, #-24]	; 0xffffffe8
   14784:	cmp	r1, #0
   14788:	beq	14798 <argp_parse@@Base+0x22b4>
   1478c:	ldr	r0, [r3, #-12]
   14790:	tst	r0, #2
   14794:	beq	14954 <argp_parse@@Base+0x2470>
   14798:	subs	r2, r2, #1
   1479c:	add	r3, r3, #24
   147a0:	bne	14780 <argp_parse@@Base+0x229c>
   147a4:	ldr	r2, [r5, #4]
   147a8:	mov	ip, #0
   147ac:	cmp	r2, ip
   147b0:	str	ip, [sp]
   147b4:	ldr	r3, [r5]
   147b8:	beq	149c4 <argp_parse@@Base+0x24e0>
   147bc:	add	r3, r3, #24
   147c0:	ldr	r1, [r3, #-24]	; 0xffffffe8
   147c4:	cmp	r1, #0
   147c8:	beq	147d8 <argp_parse@@Base+0x22f4>
   147cc:	ldr	r0, [r3, #-12]
   147d0:	tst	r0, #2
   147d4:	beq	147e8 <argp_parse@@Base+0x2304>
   147d8:	subs	r2, r2, #1
   147dc:	add	r3, r3, #24
   147e0:	bne	147c0 <argp_parse@@Base+0x22dc>
   147e4:	mov	r1, r2
   147e8:	ldr	r3, [lr, #12]
   147ec:	str	r1, [sp, #4]
   147f0:	ands	r3, ip, r3, lsr #3
   147f4:	beq	149bc <argp_parse@@Base+0x24d8>
   147f8:	mov	r0, sp
   147fc:	bl	13ac4 <argp_parse@@Base+0x15e0>
   14800:	ldr	r3, [r5]
   14804:	cmp	r0, #0
   14808:	bne	149a8 <argp_parse@@Base+0x24c4>
   1480c:	ldr	r3, [r3, #12]
   14810:	tst	r3, #8
   14814:	beq	1483c <argp_parse@@Base+0x2358>
   14818:	ldr	r3, [sp, #4]
   1481c:	cmp	r3, #0
   14820:	beq	1483c <argp_parse@@Base+0x2358>
   14824:	add	r0, sp, #4
   14828:	bl	13ac4 <argp_parse@@Base+0x15e0>
   1482c:	cmp	r0, #0
   14830:	subne	r4, r4, #1
   14834:	cmp	r4, #0
   14838:	bne	1472c <argp_parse@@Base+0x2248>
   1483c:	ldr	r2, [r6, #20]
   14840:	mov	r0, r6
   14844:	mov	r3, #0
   14848:	ldr	r2, [r2, #24]
   1484c:	ldr	r1, [pc, #408]	; 149ec <argp_parse@@Base+0x2508>
   14850:	bl	13988 <argp_parse@@Base+0x14a4>
   14854:	ldr	r2, [r5, #20]
   14858:	mov	r3, #0
   1485c:	ldr	r1, [pc, #392]	; 149ec <argp_parse@@Base+0x2508>
   14860:	ldr	r2, [r2, #24]
   14864:	uxtb	r6, r0
   14868:	mov	r0, r5
   1486c:	bl	13988 <argp_parse@@Base+0x14a4>
   14870:	cmp	r6, #0
   14874:	lslne	r4, r6, #2
   14878:	movne	r7, r6
   1487c:	uxtb	r5, r0
   14880:	beq	1498c <argp_parse@@Base+0x24a8>
   14884:	cmp	r5, #0
   14888:	lslne	r9, r5, #2
   1488c:	movne	r8, r5
   14890:	beq	14970 <argp_parse@@Base+0x248c>
   14894:	bl	11168 <__ctype_tolower_loc@plt>
   14898:	ldr	r3, [r0]
   1489c:	ldr	r4, [r3, r4]
   148a0:	ldr	r3, [r3, r9]
   148a4:	subs	r4, r4, r3
   148a8:	bne	1472c <argp_parse@@Base+0x2248>
   148ac:	subs	r4, r8, r7
   148b0:	bne	1472c <argp_parse@@Base+0x2248>
   148b4:	adds	r4, r5, #0
   148b8:	movne	r4, #1
   148bc:	cmp	r6, #0
   148c0:	rsbeq	r4, r4, #0
   148c4:	rsbne	r4, r4, #1
   148c8:	cmp	r4, #0
   148cc:	bne	1472c <argp_parse@@Base+0x2248>
   148d0:	cmp	r6, #0
   148d4:	bne	1472c <argp_parse@@Base+0x2248>
   148d8:	ldm	sp, {r0, r1}
   148dc:	adds	r4, r1, #0
   148e0:	movne	r4, #1
   148e4:	cmp	r0, #0
   148e8:	rsbeq	r4, r4, #0
   148ec:	rsbne	r4, r4, #1
   148f0:	cmp	r4, #0
   148f4:	bne	1472c <argp_parse@@Base+0x2248>
   148f8:	cmp	r0, #0
   148fc:	beq	1472c <argp_parse@@Base+0x2248>
   14900:	bl	110cc <strcasecmp@plt>
   14904:	mov	r4, r0
   14908:	b	1472c <argp_parse@@Base+0x2248>
   1490c:	mov	r1, ip
   14910:	bge	14738 <argp_parse@@Base+0x2254>
   14914:	ldr	r1, [r1, #12]
   14918:	ldr	r3, [r1, #20]
   1491c:	cmp	r0, r3
   14920:	blt	14914 <argp_parse@@Base+0x2430>
   14924:	mov	r0, lr
   14928:	bl	145c4 <argp_parse@@Base+0x20e0>
   1492c:	subs	r4, r0, #0
   14930:	mvneq	r4, #0
   14934:	b	1472c <argp_parse@@Base+0x2248>
   14938:	ldr	ip, [r1, #16]
   1493c:	ldr	r4, [r0, #12]
   14940:	cmp	ip, #0
   14944:	movne	r2, ip
   14948:	bne	1469c <argp_parse@@Base+0x21b8>
   1494c:	ldr	r3, [r1, #12]
   14950:	b	146ac <argp_parse@@Base+0x21c8>
   14954:	ldr	r2, [r5, #4]
   14958:	str	r1, [sp]
   1495c:	cmp	r2, #0
   14960:	ldr	r3, [r5]
   14964:	beq	149cc <argp_parse@@Base+0x24e8>
   14968:	mov	ip, #1
   1496c:	b	147bc <argp_parse@@Base+0x22d8>
   14970:	ldr	r3, [sp, #4]
   14974:	cmp	r3, #0
   14978:	moveq	r9, r5
   1497c:	ldrbne	r8, [r3]
   14980:	moveq	r8, r5
   14984:	lslne	r9, r8, #2
   14988:	b	14894 <argp_parse@@Base+0x23b0>
   1498c:	ldr	r3, [sp]
   14990:	cmp	r3, #0
   14994:	moveq	r4, r6
   14998:	ldrbne	r7, [r3]
   1499c:	moveq	r7, r6
   149a0:	lslne	r4, r7, #2
   149a4:	b	14884 <argp_parse@@Base+0x23a0>
   149a8:	ldr	r3, [r3, #12]
   149ac:	tst	r3, #8
   149b0:	bne	149d8 <argp_parse@@Base+0x24f4>
   149b4:	mov	r4, #1
   149b8:	b	1472c <argp_parse@@Base+0x2248>
   149bc:	ldr	r3, [r5]
   149c0:	b	1480c <argp_parse@@Base+0x2328>
   149c4:	str	r2, [sp, #4]
   149c8:	b	1483c <argp_parse@@Base+0x2358>
   149cc:	mov	r1, r2
   149d0:	mov	ip, #1
   149d4:	b	147e8 <argp_parse@@Base+0x2304>
   149d8:	ldr	r3, [sp, #4]
   149dc:	mov	r4, #1
   149e0:	cmp	r3, #0
   149e4:	bne	14824 <argp_parse@@Base+0x2340>
   149e8:	b	1472c <argp_parse@@Base+0x2248>
   149ec:	andeq	r3, r1, r0, lsl #21
   149f0:	ldr	r3, [r0, #28]
   149f4:	ldr	r2, [r0, #24]
   149f8:	push	{r4, r5, r6, lr}
   149fc:	mov	r5, r1
   14a00:	ldr	r1, [r0, #16]
   14a04:	sub	r2, r3, r2
   14a08:	cmp	r2, r1
   14a0c:	mov	r4, r0
   14a10:	movls	r2, r3
   14a14:	bhi	14a70 <argp_parse@@Base+0x258c>
   14a18:	ldr	r1, [r4, #20]
   14a1c:	ldr	r0, [r4, #8]
   14a20:	cmp	r1, #0
   14a24:	addge	r5, r5, r1
   14a28:	cmp	r5, r0
   14a2c:	bcc	14a50 <argp_parse@@Base+0x256c>
   14a30:	ldr	r1, [r4, #32]
   14a34:	cmp	r1, r3
   14a38:	bls	14a80 <argp_parse@@Base+0x259c>
   14a3c:	add	r1, r2, #1
   14a40:	mov	r3, #10
   14a44:	str	r1, [r4, #28]
   14a48:	strb	r3, [r2]
   14a4c:	pop	{r4, r5, r6, pc}
   14a50:	ldr	r2, [r4, #32]
   14a54:	cmp	r2, r3
   14a58:	bls	14a9c <argp_parse@@Base+0x25b8>
   14a5c:	add	r1, r3, #1
   14a60:	mov	r2, #32
   14a64:	str	r1, [r4, #28]
   14a68:	strb	r2, [r3]
   14a6c:	pop	{r4, r5, r6, pc}
   14a70:	bl	17938 <argp_error@@Base+0xdb4>
   14a74:	ldr	r3, [r4, #28]
   14a78:	mov	r2, r3
   14a7c:	b	14a18 <argp_parse@@Base+0x2534>
   14a80:	mov	r1, #1
   14a84:	mov	r0, r4
   14a88:	bl	17fc8 <argp_error@@Base+0x1444>
   14a8c:	cmp	r0, #0
   14a90:	popeq	{r4, r5, r6, pc}
   14a94:	ldr	r2, [r4, #28]
   14a98:	b	14a3c <argp_parse@@Base+0x2558>
   14a9c:	mov	r1, #1
   14aa0:	mov	r0, r4
   14aa4:	bl	17fc8 <argp_error@@Base+0x1444>
   14aa8:	cmp	r0, #0
   14aac:	popeq	{r4, r5, r6, pc}
   14ab0:	ldr	r3, [r4, #28]
   14ab4:	b	14a5c <argp_parse@@Base+0x2578>
   14ab8:	push	{r4, r5, r6, lr}
   14abc:	ldr	r5, [r0, #8]
   14ac0:	ldr	r2, [r0, #12]
   14ac4:	ldr	ip, [r1, #12]
   14ac8:	cmp	r5, #0
   14acc:	orr	r2, r2, ip
   14ad0:	beq	14b38 <argp_parse@@Base+0x2654>
   14ad4:	tst	r2, #16
   14ad8:	bne	14b14 <argp_parse@@Base+0x2630>
   14adc:	tst	r2, #1
   14ae0:	mov	r6, r3
   14ae4:	mov	r4, r0
   14ae8:	bne	14b1c <argp_parse@@Base+0x2638>
   14aec:	mov	r0, r5
   14af0:	bl	111bc <strlen@plt>
   14af4:	add	r1, r0, #6
   14af8:	mov	r0, r6
   14afc:	bl	149f0 <argp_parse@@Base+0x250c>
   14b00:	mov	r3, r5
   14b04:	ldr	r2, [r4, #4]
   14b08:	mov	r0, r6
   14b0c:	ldr	r1, [pc, #56]	; 14b4c <argp_parse@@Base+0x2668>
   14b10:	bl	17fe8 <argp_error@@Base+0x1464>
   14b14:	mov	r0, #0
   14b18:	pop	{r4, r5, r6, pc}
   14b1c:	ldr	r2, [r0, #4]
   14b20:	mov	r3, r5
   14b24:	mov	r0, r6
   14b28:	ldr	r1, [pc, #32]	; 14b50 <argp_parse@@Base+0x266c>
   14b2c:	bl	17fe8 <argp_error@@Base+0x1464>
   14b30:	mov	r0, #0
   14b34:	pop	{r4, r5, r6, pc}
   14b38:	ldr	r5, [r1, #8]
   14b3c:	cmp	r5, #0
   14b40:	bne	14ad4 <argp_parse@@Base+0x25f0>
   14b44:	mov	r0, #0
   14b48:	pop	{r4, r5, r6, pc}
   14b4c:	andeq	r8, r1, ip, lsr #21
   14b50:	andeq	r8, r1, r0, lsr #21
   14b54:	mov	ip, r0
   14b58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14b5c:	mov	r8, r2
   14b60:	sub	sp, sp, #28
   14b64:	mov	r2, ip
   14b68:	ldr	ip, [ip, #16]
   14b6c:	mov	r9, r1
   14b70:	ldr	r1, [r0, #8]
   14b74:	str	ip, [sp, #8]
   14b78:	ldr	ip, [r8]
   14b7c:	str	r1, [sp, #16]
   14b80:	mov	r0, r1
   14b84:	mov	r4, r3
   14b88:	ldr	r1, [pc, #456]	; 14d58 <argp_parse@@Base+0x2874>
   14b8c:	mov	r3, r9
   14b90:	mov	r5, ip
   14b94:	str	ip, [sp, #20]
   14b98:	ldr	r6, [sp, #64]	; 0x40
   14b9c:	bl	13c1c <argp_parse@@Base+0x1738>
   14ba0:	subs	r3, r0, #0
   14ba4:	str	r3, [sp, #12]
   14ba8:	beq	14d04 <argp_parse@@Base+0x2820>
   14bac:	mov	r1, #10
   14bb0:	bl	11060 <strchrnul@plt>
   14bb4:	ldrb	sl, [r0]
   14bb8:	mov	r7, r0
   14bbc:	cmp	sl, #0
   14bc0:	bne	14cc0 <argp_parse@@Base+0x27dc>
   14bc4:	ldr	r5, [sp, #12]
   14bc8:	add	r1, r7, #1
   14bcc:	sub	r1, r1, r5
   14bd0:	mov	r0, r6
   14bd4:	bl	149f0 <argp_parse@@Base+0x250c>
   14bd8:	ldr	r0, [r6, #28]
   14bdc:	sub	fp, r7, r5
   14be0:	ldr	r1, [r6, #32]
   14be4:	add	r2, r0, fp
   14be8:	cmp	r1, r2
   14bec:	bcs	14c08 <argp_parse@@Base+0x2724>
   14bf0:	mov	r1, fp
   14bf4:	mov	r0, r6
   14bf8:	bl	17fc8 <argp_error@@Base+0x1444>
   14bfc:	cmp	r0, #0
   14c00:	beq	14c20 <argp_parse@@Base+0x273c>
   14c04:	ldr	r0, [r6, #28]
   14c08:	mov	r2, fp
   14c0c:	mov	r1, r5
   14c10:	bl	11084 <memcpy@plt>
   14c14:	ldr	r3, [r6, #28]
   14c18:	add	fp, r3, fp
   14c1c:	str	fp, [r6, #28]
   14c20:	ldr	r3, [sp, #16]
   14c24:	ldr	r2, [sp, #12]
   14c28:	cmp	r3, r2
   14c2c:	beq	14c38 <argp_parse@@Base+0x2754>
   14c30:	mov	r0, r2
   14c34:	bl	1337c <argp_parse@@Base+0xe98>
   14c38:	ldr	r3, [sp, #8]
   14c3c:	cmp	r3, #0
   14c40:	beq	14c84 <argp_parse@@Base+0x27a0>
   14c44:	ldr	r2, [r3]
   14c48:	cmp	r2, #0
   14c4c:	beq	14c84 <argp_parse@@Base+0x27a0>
   14c50:	ldr	r5, [sp, #8]
   14c54:	mov	r3, r4
   14c58:	mov	r0, r2
   14c5c:	str	r6, [sp]
   14c60:	mov	r2, r8
   14c64:	mov	r1, r9
   14c68:	bl	14b54 <argp_parse@@Base+0x2670>
   14c6c:	ldr	r2, [r5, #16]!
   14c70:	cmp	r2, #0
   14c74:	clz	r3, r0
   14c78:	lsr	r3, r3, #5
   14c7c:	bne	14c58 <argp_parse@@Base+0x2774>
   14c80:	mov	r4, r3
   14c84:	cmp	r4, #0
   14c88:	moveq	sl, #0
   14c8c:	andne	sl, sl, #1
   14c90:	cmp	sl, #0
   14c94:	beq	14d24 <argp_parse@@Base+0x2840>
   14c98:	ldrb	r0, [r7]
   14c9c:	cmp	r0, #0
   14ca0:	bne	14d34 <argp_parse@@Base+0x2850>
   14ca4:	ldr	r3, [sp, #20]
   14ca8:	ldrb	r4, [r3]
   14cac:	cmp	r4, #0
   14cb0:	moveq	r0, r4
   14cb4:	strbne	r0, [r3]
   14cb8:	add	sp, sp, #28
   14cbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14cc0:	ldrb	sl, [r5]
   14cc4:	cmp	sl, #0
   14cc8:	beq	14d50 <argp_parse@@Base+0x286c>
   14ccc:	mov	fp, #0
   14cd0:	add	r5, r0, #1
   14cd4:	add	fp, fp, #1
   14cd8:	mov	r0, r5
   14cdc:	mov	r1, #10
   14ce0:	bl	11060 <strchrnul@plt>
   14ce4:	cmp	fp, sl
   14ce8:	bne	14cd0 <argp_parse@@Base+0x27ec>
   14cec:	mov	r7, r0
   14cf0:	ldr	r2, [r8]
   14cf4:	mov	sl, #1
   14cf8:	add	r2, r2, sl
   14cfc:	str	r2, [r8]
   14d00:	b	14bc8 <argp_parse@@Base+0x26e4>
   14d04:	ldr	r3, [sp, #8]
   14d08:	cmp	r3, #0
   14d0c:	beq	14d24 <argp_parse@@Base+0x2840>
   14d10:	ldr	r2, [r3]
   14d14:	cmp	r2, #0
   14d18:	ldrne	r7, [sp, #12]
   14d1c:	movne	sl, r7
   14d20:	bne	14c50 <argp_parse@@Base+0x276c>
   14d24:	clz	r0, r4
   14d28:	lsr	r0, r0, #5
   14d2c:	add	sp, sp, #28
   14d30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d34:	ldr	r2, [sp, #20]
   14d38:	mov	r0, #1
   14d3c:	ldrb	r3, [r2]
   14d40:	add	r3, r3, r0
   14d44:	strb	r3, [r2]
   14d48:	add	sp, sp, #28
   14d4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d50:	ldr	r5, [sp, #12]
   14d54:	b	14cf0 <argp_parse@@Base+0x280c>
   14d58:	andeq	r0, r0, #6
   14d5c:	ldr	r2, [r0, #8]
   14d60:	cmp	r2, #0
   14d64:	beq	14d70 <argp_parse@@Base+0x288c>
   14d68:	mov	r0, #0
   14d6c:	bx	lr
   14d70:	ldr	r2, [r1, #8]
   14d74:	cmp	r2, #0
   14d78:	bne	14d68 <argp_parse@@Base+0x2884>
   14d7c:	ldr	r1, [r1, #12]
   14d80:	ldr	r2, [r0, #12]
   14d84:	orr	r2, r2, r1
   14d88:	tst	r2, #16
   14d8c:	ldreq	r2, [r3]
   14d90:	ldreq	r1, [r0, #4]
   14d94:	addeq	r0, r2, #1
   14d98:	streq	r0, [r3]
   14d9c:	strbeq	r1, [r2]
   14da0:	b	14d68 <argp_parse@@Base+0x2884>
   14da4:	mov	r3, r0
   14da8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14dac:	sub	sp, sp, #52	; 0x34
   14db0:	ldr	r2, [r3, #16]
   14db4:	str	r0, [sp, #24]
   14db8:	mov	r0, #16
   14dbc:	ldr	r4, [r3]
   14dc0:	str	r1, [sp, #28]
   14dc4:	str	r2, [sp, #8]
   14dc8:	bl	1395c <argp_parse@@Base+0x1478>
   14dcc:	subs	r3, r0, #0
   14dd0:	str	r3, [sp, #20]
   14dd4:	beq	15438 <argp_parse@@Base+0x2f54>
   14dd8:	ldr	r2, [sp, #20]
   14ddc:	mov	r3, #0
   14de0:	cmp	r4, #0
   14de4:	str	r3, [r2, #4]
   14de8:	str	r3, [r2, #12]
   14dec:	beq	14ff0 <argp_parse@@Base+0x2b0c>
   14df0:	ldr	r5, [r4, #12]
   14df4:	ands	r5, r5, #4
   14df8:	bne	1544c <argp_parse@@Base+0x2f68>
   14dfc:	add	r6, r4, #24
   14e00:	mov	r9, r5
   14e04:	mov	sl, r5
   14e08:	mov	fp, r2
   14e0c:	b	14e50 <argp_parse@@Base+0x296c>
   14e10:	ldr	r3, [r6, #-12]
   14e14:	tst	r3, #4
   14e18:	addeq	r9, r9, #1
   14e1c:	streq	r9, [fp, #4]
   14e20:	tst	r3, #8
   14e24:	bne	14e4c <argp_parse@@Base+0x2968>
   14e28:	sub	r3, r8, #1
   14e2c:	cmp	r3, #254	; 0xfe
   14e30:	bhi	14e4c <argp_parse@@Base+0x2968>
   14e34:	bl	111a4 <__ctype_b_loc@plt>
   14e38:	lsl	r8, r8, #1
   14e3c:	ldr	r3, [r0]
   14e40:	ldrh	r3, [r3, r8]
   14e44:	tst	r3, #16384	; 0x4000
   14e48:	addne	sl, sl, #1
   14e4c:	add	r6, r6, #24
   14e50:	ldr	r8, [r6, #-20]	; 0xffffffec
   14e54:	cmp	r8, #0
   14e58:	bne	14e10 <argp_parse@@Base+0x292c>
   14e5c:	ldr	r3, [r6, #-24]	; 0xffffffe8
   14e60:	cmp	r3, #0
   14e64:	bne	14e10 <argp_parse@@Base+0x292c>
   14e68:	ldr	r3, [r6, #-8]
   14e6c:	cmp	r3, #0
   14e70:	bne	14e10 <argp_parse@@Base+0x292c>
   14e74:	ldr	r7, [r6, #-4]
   14e78:	cmp	r7, #0
   14e7c:	bne	14e10 <argp_parse@@Base+0x292c>
   14e80:	rsb	r9, r9, r9, lsl #3
   14e84:	lsl	r0, r9, #2
   14e88:	bl	1395c <argp_parse@@Base+0x1478>
   14e8c:	ldr	r6, [sp, #20]
   14e90:	str	r0, [r6]
   14e94:	add	r0, sl, #1
   14e98:	bl	1395c <argp_parse@@Base+0x1478>
   14e9c:	ldr	r8, [r6]
   14ea0:	mov	r3, r6
   14ea4:	cmp	r0, #0
   14ea8:	cmpne	r8, #0
   14eac:	mov	sl, r0
   14eb0:	str	r0, [r3, #8]
   14eb4:	beq	153fc <argp_parse@@Base+0x2f18>
   14eb8:	ldr	r2, [sp, #20]
   14ebc:	ldr	r3, [pc, #1436]	; 15460 <argp_parse@@Base+0x2f7c>
   14ec0:	ldr	r2, [r2, #4]
   14ec4:	cmp	r2, r3
   14ec8:	bhi	153e8 <argp_parse@@Base+0x2f04>
   14ecc:	add	r8, r8, #28
   14ed0:	mov	r2, r8
   14ed4:	ldr	r3, [r4, #4]
   14ed8:	mov	r8, sl
   14edc:	mov	r9, r2
   14ee0:	cmp	r3, #0
   14ee4:	bne	14ef4 <argp_parse@@Base+0x2a10>
   14ee8:	ldr	r2, [r4]
   14eec:	cmp	r2, #0
   14ef0:	beq	153a0 <argp_parse@@Base+0x2ebc>
   14ef4:	str	r7, [r9, #-24]	; 0xffffffe8
   14ef8:	ldr	r6, [r4, #20]
   14efc:	str	r4, [r9, #-28]	; 0xffffffe4
   14f00:	cmp	r6, #0
   14f04:	str	sl, [r9, #-20]	; 0xffffffec
   14f08:	bne	14f20 <argp_parse@@Base+0x2a3c>
   14f0c:	ldr	r2, [r4]
   14f10:	cmp	r2, #0
   14f14:	cmpeq	r3, #0
   14f18:	movne	r6, r5
   14f1c:	beq	153c4 <argp_parse@@Base+0x2ee0>
   14f20:	ldr	r1, [sp, #28]
   14f24:	str	r6, [r9, #-16]
   14f28:	mov	r5, r4
   14f2c:	ldr	r2, [r4, #12]
   14f30:	mov	r3, r7
   14f34:	str	r1, [r9, #-12]
   14f38:	ldr	r1, [sp, #24]
   14f3c:	str	r1, [r9, #-8]
   14f40:	add	r3, r3, #1
   14f44:	tst	r2, #8
   14f48:	str	r3, [r9, #-24]	; 0xffffffe8
   14f4c:	bne	14fb8 <argp_parse@@Base+0x2ad4>
   14f50:	ldr	fp, [r4, #4]
   14f54:	sub	r3, fp, #1
   14f58:	cmp	r3, #254	; 0xfe
   14f5c:	bhi	14fb8 <argp_parse@@Base+0x2ad4>
   14f60:	bl	111a4 <__ctype_b_loc@plt>
   14f64:	lsl	r3, fp, #1
   14f68:	ldr	r2, [r0]
   14f6c:	ldrh	r3, [r2, r3]
   14f70:	tst	r3, #16384	; 0x4000
   14f74:	beq	14fb8 <argp_parse@@Base+0x2ad4>
   14f78:	cmp	r8, sl
   14f7c:	uxtb	r1, fp
   14f80:	bcs	14fb0 <argp_parse@@Base+0x2acc>
   14f84:	ldrb	r3, [r8]
   14f88:	cmp	r3, r1
   14f8c:	movne	r3, r8
   14f90:	subne	r0, sl, #1
   14f94:	bne	14fa8 <argp_parse@@Base+0x2ac4>
   14f98:	b	14fb8 <argp_parse@@Base+0x2ad4>
   14f9c:	ldrb	r2, [r3, #1]!
   14fa0:	cmp	r2, r1
   14fa4:	beq	14fb8 <argp_parse@@Base+0x2ad4>
   14fa8:	cmp	r0, r3
   14fac:	bne	14f9c <argp_parse@@Base+0x2ab8>
   14fb0:	strb	r1, [sl]
   14fb4:	add	sl, sl, #1
   14fb8:	ldr	r3, [r5, #28]
   14fbc:	add	r4, r4, #24
   14fc0:	cmp	r3, #0
   14fc4:	bne	14fd4 <argp_parse@@Base+0x2af0>
   14fc8:	ldr	r2, [r5, #24]
   14fcc:	cmp	r2, #0
   14fd0:	beq	1537c <argp_parse@@Base+0x2e98>
   14fd4:	ldr	r2, [r5, #36]	; 0x24
   14fd8:	tst	r2, #4
   14fdc:	beq	15394 <argp_parse@@Base+0x2eb0>
   14fe0:	ldr	r3, [r9, #-24]	; 0xffffffe8
   14fe4:	mov	r5, r4
   14fe8:	b	14f40 <argp_parse@@Base+0x2a5c>
   14fec:	strb	r3, [sl]
   14ff0:	ldr	r3, [sp, #8]
   14ff4:	cmp	r3, #0
   14ff8:	beq	15134 <argp_parse@@Base+0x2c50>
   14ffc:	ldr	r3, [r3]
   15000:	cmp	r3, #0
   15004:	beq	15134 <argp_parse@@Base+0x2c50>
   15008:	ldr	r3, [sp, #20]
   1500c:	add	r3, r3, #12
   15010:	str	r3, [sp, #44]	; 0x2c
   15014:	ldr	r3, [sp, #8]
   15018:	ldr	r5, [r3, #12]
   1501c:	cmp	r5, #0
   15020:	ldrne	r6, [r3, #8]
   15024:	bne	15038 <argp_parse@@Base+0x2b54>
   15028:	ldr	r3, [sp, #8]
   1502c:	ldr	r6, [r3, #8]
   15030:	cmp	r6, #0
   15034:	beq	1535c <argp_parse@@Base+0x2e78>
   15038:	ldr	r7, [sp, #24]
   1503c:	ldr	r2, [sp, #8]
   15040:	mov	r0, #28
   15044:	ldr	r3, [r7, #16]
   15048:	sub	r3, r2, r3
   1504c:	asr	r4, r3, #4
   15050:	bl	1395c <argp_parse@@Base+0x1478>
   15054:	subs	r1, r0, #0
   15058:	beq	15098 <argp_parse@@Base+0x2bb4>
   1505c:	ldr	r3, [sp, #28]
   15060:	ldr	r0, [sp, #20]
   15064:	cmp	r3, #0
   15068:	str	r3, [r1, #12]
   1506c:	ldrne	r3, [r3, #20]
   15070:	ldr	r2, [r0, #12]
   15074:	addne	r3, r3, #1
   15078:	moveq	r3, #0
   1507c:	str	r5, [r1, #8]
   15080:	str	r6, [r1]
   15084:	str	r4, [r1, #4]
   15088:	str	r7, [r1, #16]
   1508c:	str	r3, [r1, #20]
   15090:	str	r2, [r1, #24]
   15094:	str	r1, [r0, #12]
   15098:	ldr	r3, [sp, #8]
   1509c:	ldr	r0, [r3]
   150a0:	bl	14da4 <argp_parse@@Base+0x28c0>
   150a4:	ldr	r3, [sp, #20]
   150a8:	ldr	r2, [r3, #12]
   150ac:	cmp	r2, #0
   150b0:	str	r0, [sp, #16]
   150b4:	bne	150c0 <argp_parse@@Base+0x2bdc>
   150b8:	b	15364 <argp_parse@@Base+0x2e80>
   150bc:	mov	r2, r3
   150c0:	ldr	r3, [r2, #24]
   150c4:	cmp	r3, #0
   150c8:	bne	150bc <argp_parse@@Base+0x2bd8>
   150cc:	add	r2, r2, #24
   150d0:	ldr	r0, [sp, #16]
   150d4:	mov	ip, r0
   150d8:	ldr	r3, [r0, #4]
   150dc:	ldr	r1, [r0, #12]
   150e0:	cmp	r3, #0
   150e4:	str	r1, [r2]
   150e8:	mov	r2, #0
   150ec:	str	r2, [r0, #12]
   150f0:	beq	15118 <argp_parse@@Base+0x2c34>
   150f4:	ldr	lr, [sp, #20]
   150f8:	ldr	r2, [lr, #4]
   150fc:	cmp	r2, #0
   15100:	bne	15140 <argp_parse@@Base+0x2c5c>
   15104:	ldr	r0, [r0]
   15108:	ldr	r1, [ip, #8]
   1510c:	stm	lr, {r0, r3}
   15110:	str	r1, [lr, #8]
   15114:	str	r2, [ip, #4]
   15118:	ldr	r0, [sp, #16]
   1511c:	bl	13b3c <argp_parse@@Base+0x1658>
   15120:	ldr	r2, [sp, #8]
   15124:	ldr	r3, [r2, #16]!
   15128:	cmp	r3, #0
   1512c:	str	r2, [sp, #8]
   15130:	bne	15014 <argp_parse@@Base+0x2b30>
   15134:	ldr	r0, [sp, #20]
   15138:	add	sp, sp, #52	; 0x34
   1513c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15140:	add	r3, r3, r2
   15144:	str	r3, [sp, #36]	; 0x24
   15148:	rsb	r0, r3, r3, lsl #3
   1514c:	lsl	r0, r0, #2
   15150:	bl	1395c <argp_parse@@Base+0x1478>
   15154:	ldr	r3, [sp, #20]
   15158:	mov	r4, r0
   1515c:	str	r0, [sp, #32]
   15160:	ldr	r0, [r3, #8]
   15164:	bl	111bc <strlen@plt>
   15168:	ldr	r3, [sp, #16]
   1516c:	mov	r8, r0
   15170:	ldr	r0, [r3, #8]
   15174:	bl	111bc <strlen@plt>
   15178:	add	r0, r8, r0
   1517c:	add	r0, r0, #1
   15180:	bl	1395c <argp_parse@@Base+0x1478>
   15184:	cmp	r4, #0
   15188:	cmpne	r0, #0
   1518c:	mov	r7, r0
   15190:	beq	15410 <argp_parse@@Base+0x2f2c>
   15194:	ldr	r3, [sp, #36]	; 0x24
   15198:	ldr	r2, [pc, #704]	; 15460 <argp_parse@@Base+0x2f7c>
   1519c:	cmp	r3, r2
   151a0:	bhi	15424 <argp_parse@@Base+0x2f40>
   151a4:	ldr	r5, [sp, #20]
   151a8:	ldr	r9, [sp, #32]
   151ac:	ldm	r5, {r3, r4}
   151b0:	mov	r0, r9
   151b4:	rsb	r6, r4, r4, lsl #3
   151b8:	mov	r1, r3
   151bc:	lsl	r6, r6, #2
   151c0:	mov	r2, r6
   151c4:	str	r3, [sp, #40]	; 0x28
   151c8:	bl	1118c <mempcpy@plt>
   151cc:	ldr	r3, [sp, #16]
   151d0:	ldr	r1, [r3, #4]
   151d4:	mov	ip, r1
   151d8:	str	r1, [sp, #4]
   151dc:	rsb	r2, ip, ip, lsl #3
   151e0:	ldr	r1, [r3]
   151e4:	lsl	r2, r2, #2
   151e8:	bl	11084 <memcpy@plt>
   151ec:	ldr	r5, [r5, #8]
   151f0:	mov	r2, r8
   151f4:	mov	r1, r5
   151f8:	mov	r0, r7
   151fc:	bl	11084 <memcpy@plt>
   15200:	cmp	r4, #0
   15204:	beq	15374 <argp_parse@@Base+0x2e90>
   15208:	mov	r2, r9
   1520c:	ldr	r3, [r2, #8]
   15210:	subs	r4, r4, #1
   15214:	sub	r3, r3, r5
   15218:	add	r3, r7, r3
   1521c:	str	r3, [r2, #8]
   15220:	add	r2, r2, #28
   15224:	bne	1520c <argp_parse@@Base+0x2d28>
   15228:	ldr	r3, [sp, #32]
   1522c:	add	r1, r3, r6
   15230:	ldr	r3, [sp, #4]
   15234:	ldr	r2, [sp, #16]
   15238:	cmp	r3, #0
   1523c:	add	r3, r7, r8
   15240:	str	r3, [sp, #12]
   15244:	ldr	sl, [r2, #8]
   15248:	beq	1536c <argp_parse@@Base+0x2e88>
   1524c:	sub	r8, r3, #1
   15250:	add	fp, r1, #28
   15254:	mov	r9, r3
   15258:	mov	r3, r8
   1525c:	mov	r8, fp
   15260:	mov	fp, sl
   15264:	mov	sl, r3
   15268:	ldr	r5, [r8, #-24]	; 0xffffffe8
   1526c:	str	r9, [r8, #-20]	; 0xffffffec
   15270:	cmp	r5, #0
   15274:	ldr	r4, [r8, #-28]	; 0xffffffe4
   15278:	bne	1528c <argp_parse@@Base+0x2da8>
   1527c:	b	15318 <argp_parse@@Base+0x2e34>
   15280:	subs	r5, r5, #1
   15284:	add	r4, r4, #24
   15288:	beq	15318 <argp_parse@@Base+0x2e34>
   1528c:	ldr	r3, [r4, #12]
   15290:	tst	r3, #8
   15294:	bne	15280 <argp_parse@@Base+0x2d9c>
   15298:	ldr	r6, [r4, #4]
   1529c:	sub	r3, r6, #1
   152a0:	cmp	r3, #254	; 0xfe
   152a4:	bhi	15280 <argp_parse@@Base+0x2d9c>
   152a8:	bl	111a4 <__ctype_b_loc@plt>
   152ac:	lsl	r3, r6, #1
   152b0:	ldr	r2, [r0]
   152b4:	ldrh	r3, [r2, r3]
   152b8:	tst	r3, #16384	; 0x4000
   152bc:	beq	15280 <argp_parse@@Base+0x2d9c>
   152c0:	ldrb	r1, [fp]
   152c4:	cmp	r1, r6
   152c8:	bne	15280 <argp_parse@@Base+0x2d9c>
   152cc:	ldr	r3, [sp, #12]
   152d0:	cmp	r7, r3
   152d4:	bcs	15300 <argp_parse@@Base+0x2e1c>
   152d8:	ldrb	r3, [r7]
   152dc:	cmp	r3, r1
   152e0:	movne	r3, r7
   152e4:	bne	152f8 <argp_parse@@Base+0x2e14>
   152e8:	b	15308 <argp_parse@@Base+0x2e24>
   152ec:	ldrb	r2, [r3, #1]!
   152f0:	cmp	r2, r1
   152f4:	beq	15308 <argp_parse@@Base+0x2e24>
   152f8:	cmp	sl, r3
   152fc:	bne	152ec <argp_parse@@Base+0x2e08>
   15300:	strb	r1, [r9]
   15304:	add	r9, r9, #1
   15308:	subs	r5, r5, #1
   1530c:	add	fp, fp, #1
   15310:	add	r4, r4, #24
   15314:	bne	1528c <argp_parse@@Base+0x2da8>
   15318:	ldr	r3, [sp, #4]
   1531c:	add	r8, r8, #28
   15320:	subs	r3, r3, #1
   15324:	str	r3, [sp, #4]
   15328:	bne	15268 <argp_parse@@Base+0x2d84>
   1532c:	mov	r3, #0
   15330:	strb	r3, [r9]
   15334:	ldr	r0, [sp, #40]	; 0x28
   15338:	bl	1337c <argp_parse@@Base+0xe98>
   1533c:	ldr	r4, [sp, #20]
   15340:	ldr	r0, [r4, #8]
   15344:	bl	1337c <argp_parse@@Base+0xe98>
   15348:	ldr	r2, [sp, #32]
   1534c:	str	r2, [r4]
   15350:	ldr	r2, [sp, #36]	; 0x24
   15354:	stmib	r4, {r2, r7}
   15358:	b	15118 <argp_parse@@Base+0x2c34>
   1535c:	ldr	r1, [sp, #28]
   15360:	b	15098 <argp_parse@@Base+0x2bb4>
   15364:	ldr	r2, [sp, #44]	; 0x2c
   15368:	b	150d0 <argp_parse@@Base+0x2bec>
   1536c:	ldr	r9, [sp, #12]
   15370:	b	1532c <argp_parse@@Base+0x2e48>
   15374:	ldr	r1, [sp, #32]
   15378:	b	15230 <argp_parse@@Base+0x2d4c>
   1537c:	ldr	r2, [r5, #40]	; 0x28
   15380:	cmp	r2, #0
   15384:	bne	14fd4 <argp_parse@@Base+0x2af0>
   15388:	ldr	r2, [r5, #44]	; 0x2c
   1538c:	cmp	r2, #0
   15390:	bne	14fd4 <argp_parse@@Base+0x2af0>
   15394:	add	r9, r9, #28
   15398:	mov	r5, r6
   1539c:	b	14ee0 <argp_parse@@Base+0x29fc>
   153a0:	ldr	r2, [r4, #16]
   153a4:	cmp	r2, #0
   153a8:	beq	153cc <argp_parse@@Base+0x2ee8>
   153ac:	str	r3, [r9, #-24]	; 0xffffffe8
   153b0:	ldr	r6, [r4, #20]
   153b4:	str	r4, [r9, #-28]	; 0xffffffe4
   153b8:	cmp	r6, #0
   153bc:	str	sl, [r9, #-20]	; 0xffffffec
   153c0:	bne	14f20 <argp_parse@@Base+0x2a3c>
   153c4:	add	r6, r5, #1
   153c8:	b	14f20 <argp_parse@@Base+0x2a3c>
   153cc:	ldr	r6, [r4, #20]
   153d0:	cmp	r6, #0
   153d4:	beq	14fec <argp_parse@@Base+0x2b08>
   153d8:	str	r4, [r9, #-28]	; 0xffffffe4
   153dc:	str	r3, [r9, #-24]	; 0xffffffe8
   153e0:	str	sl, [r9, #-20]	; 0xffffffec
   153e4:	b	14f20 <argp_parse@@Base+0x2a3c>
   153e8:	ldr	r3, [pc, #116]	; 15464 <argp_parse@@Base+0x2f80>
   153ec:	mov	r2, #476	; 0x1dc
   153f0:	ldr	r1, [pc, #112]	; 15468 <argp_parse@@Base+0x2f84>
   153f4:	ldr	r0, [pc, #112]	; 1546c <argp_parse@@Base+0x2f88>
   153f8:	bl	112dc <__assert_fail@plt>
   153fc:	ldr	r3, [pc, #96]	; 15464 <argp_parse@@Base+0x2f80>
   15400:	ldr	r2, [pc, #104]	; 15470 <argp_parse@@Base+0x2f8c>
   15404:	ldr	r1, [pc, #92]	; 15468 <argp_parse@@Base+0x2f84>
   15408:	ldr	r0, [pc, #100]	; 15474 <argp_parse@@Base+0x2f90>
   1540c:	bl	112dc <__assert_fail@plt>
   15410:	ldr	r3, [pc, #96]	; 15478 <argp_parse@@Base+0x2f94>
   15414:	ldr	r2, [pc, #96]	; 1547c <argp_parse@@Base+0x2f98>
   15418:	ldr	r1, [pc, #72]	; 15468 <argp_parse@@Base+0x2f84>
   1541c:	ldr	r0, [pc, #92]	; 15480 <argp_parse@@Base+0x2f9c>
   15420:	bl	112dc <__assert_fail@plt>
   15424:	ldr	r3, [pc, #76]	; 15478 <argp_parse@@Base+0x2f94>
   15428:	mov	r2, #972	; 0x3cc
   1542c:	ldr	r1, [pc, #52]	; 15468 <argp_parse@@Base+0x2f84>
   15430:	ldr	r0, [pc, #76]	; 15484 <argp_parse@@Base+0x2fa0>
   15434:	bl	112dc <__assert_fail@plt>
   15438:	ldr	r3, [pc, #36]	; 15464 <argp_parse@@Base+0x2f80>
   1543c:	ldr	r2, [pc, #68]	; 15488 <argp_parse@@Base+0x2fa4>
   15440:	ldr	r1, [pc, #32]	; 15468 <argp_parse@@Base+0x2f84>
   15444:	ldr	r0, [pc, #64]	; 1548c <argp_parse@@Base+0x2fa8>
   15448:	bl	112dc <__assert_fail@plt>
   1544c:	ldr	r3, [pc, #16]	; 15464 <argp_parse@@Base+0x2f80>
   15450:	mov	r2, #460	; 0x1cc
   15454:	ldr	r1, [pc, #12]	; 15468 <argp_parse@@Base+0x2f84>
   15458:	ldr	r0, [pc, #48]	; 15490 <argp_parse@@Base+0x2fac>
   1545c:	bl	112dc <__assert_fail@plt>
   15460:	stmdbeq	r4!, {r0, r3, r6, r9, ip, pc}
   15464:	strdeq	r8, [r1], -r4
   15468:			; <UNDEFINED> instruction: 0x00018ab8
   1546c:	strdeq	r8, [r1], -ip
   15470:	ldrdeq	r0, [r0], -sl
   15474:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   15478:	andeq	r8, r1, r0, lsl #20
   1547c:	andeq	r0, r0, sl, asr #7
   15480:	andeq	r8, r1, r8, lsr fp
   15484:	andeq	r8, r1, r4, asr fp
   15488:	andeq	r0, r0, r2, asr #3
   1548c:	andeq	r8, r1, r4, asr #21
   15490:	andeq	r8, r1, r8, asr #21
   15494:	cmp	r1, #0
   15498:	push	{r4, r5, r6, r7, r8, lr}
   1549c:	beq	15514 <argp_parse@@Base+0x3030>
   154a0:	sub	r7, r1, #1
   154a4:	mov	r8, r2
   154a8:	mov	r6, r0
   154ac:	ldm	r6, {r4, r5}
   154b0:	cmp	r5, #0
   154b4:	sub	r5, r5, #1
   154b8:	beq	154f8 <argp_parse@@Base+0x3014>
   154bc:	add	r4, r4, #24
   154c0:	ldr	r3, [r4, #-24]	; 0xffffffe8
   154c4:	mov	r1, r8
   154c8:	subs	r0, r3, #0
   154cc:	sub	r5, r5, #1
   154d0:	beq	154ec <argp_parse@@Base+0x3008>
   154d4:	ldr	r3, [r4, #-12]
   154d8:	tst	r3, #2
   154dc:	bne	154ec <argp_parse@@Base+0x3008>
   154e0:	bl	10ff4 <strcmp@plt>
   154e4:	cmp	r0, #0
   154e8:	beq	1550c <argp_parse@@Base+0x3028>
   154ec:	cmn	r5, #1
   154f0:	add	r4, r4, #24
   154f4:	bne	154c0 <argp_parse@@Base+0x2fdc>
   154f8:	sub	r7, r7, #1
   154fc:	cmn	r7, #1
   15500:	add	r6, r6, #28
   15504:	bne	154ac <argp_parse@@Base+0x2fc8>
   15508:	mov	r6, #0
   1550c:	mov	r0, r6
   15510:	pop	{r4, r5, r6, r7, r8, pc}
   15514:	mov	r6, r1
   15518:	b	1550c <argp_parse@@Base+0x3028>
   1551c:	push	{r4, r5, r6, lr}
   15520:	subs	r4, r0, #0
   15524:	mov	r5, r1
   15528:	beq	1553c <argp_parse@@Base+0x3058>
   1552c:	mov	r1, #10
   15530:	bl	111c8 <strchr@plt>
   15534:	adds	r4, r0, #0
   15538:	movne	r4, #1
   1553c:	cmp	r5, #0
   15540:	beq	1556c <argp_parse@@Base+0x3088>
   15544:	ldr	r3, [r5]
   15548:	cmp	r3, #0
   1554c:	beq	1556c <argp_parse@@Base+0x3088>
   15550:	ldr	r1, [r3, #16]
   15554:	ldr	r0, [r3, #8]
   15558:	bl	1551c <argp_parse@@Base+0x3038>
   1555c:	ldr	r3, [r5, #16]!
   15560:	cmp	r3, #0
   15564:	add	r4, r4, r0
   15568:	bne	15550 <argp_parse@@Base+0x306c>
   1556c:	mov	r0, r4
   15570:	pop	{r4, r5, r6, pc}
   15574:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15578:	add	fp, sp, #32
   1557c:	sub	sp, sp, #12
   15580:	ldr	r5, [r0, #4]
   15584:	cmp	r5, #0
   15588:	bne	15594 <argp_parse@@Base+0x30b0>
   1558c:	sub	sp, fp, #32
   15590:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15594:	mov	r6, r0
   15598:	ldr	r0, [r0, #8]
   1559c:	mov	r9, r1
   155a0:	bl	111bc <strlen@plt>
   155a4:	ldr	r8, [pc, #360]	; 15714 <argp_parse@@Base+0x3230>
   155a8:	ldr	r4, [r6]
   155ac:	sub	r7, fp, #36	; 0x24
   155b0:	add	r3, r0, #15
   155b4:	bic	r3, r3, #7
   155b8:	sub	sp, sp, r3
   155bc:	mov	sl, sp
   155c0:	str	sp, [r7, #-4]!
   155c4:	ldr	r2, [r4, #20]
   155c8:	mov	r0, r4
   155cc:	mov	r3, r7
   155d0:	mov	r1, r8
   155d4:	ldr	r2, [r2, #24]
   155d8:	bl	13988 <argp_parse@@Base+0x14a4>
   155dc:	subs	r5, r5, #1
   155e0:	add	r4, r4, #28
   155e4:	bne	155c4 <argp_parse@@Base+0x30e0>
   155e8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   155ec:	cmp	sl, r3
   155f0:	bcc	156f4 <argp_parse@@Base+0x3210>
   155f4:	ldm	r6, {r4, r5}
   155f8:	cmp	r5, #0
   155fc:	beq	1558c <argp_parse@@Base+0x30a8>
   15600:	ldr	r7, [pc, #272]	; 15718 <argp_parse@@Base+0x3234>
   15604:	ldr	r2, [r4, #20]
   15608:	mov	r0, r4
   1560c:	mov	r3, r9
   15610:	mov	r1, r7
   15614:	ldr	r2, [r2, #24]
   15618:	bl	13988 <argp_parse@@Base+0x14a4>
   1561c:	subs	r5, r5, #1
   15620:	add	r4, r4, #28
   15624:	bne	15604 <argp_parse@@Base+0x3120>
   15628:	ldm	r6, {r7, r8}
   1562c:	cmp	r8, #0
   15630:	beq	1558c <argp_parse@@Base+0x30a8>
   15634:	ldr	sl, [pc, #224]	; 1571c <argp_parse@@Base+0x3238>
   15638:	add	r7, r7, #28
   1563c:	ldr	r5, [r7, #-24]	; 0xffffffe8
   15640:	ldr	r4, [r7, #-28]	; 0xffffffe4
   15644:	cmp	r5, #0
   15648:	movne	r6, r4
   1564c:	bne	15660 <argp_parse@@Base+0x317c>
   15650:	b	156bc <argp_parse@@Base+0x31d8>
   15654:	subs	r5, r5, #1
   15658:	add	r4, r4, #24
   1565c:	beq	156bc <argp_parse@@Base+0x31d8>
   15660:	ldr	r2, [r4]
   15664:	cmp	r2, #0
   15668:	beq	15654 <argp_parse@@Base+0x3170>
   1566c:	ldr	r1, [r4, #12]
   15670:	tst	r1, #4
   15674:	moveq	r6, r4
   15678:	tst	r1, #2
   1567c:	bne	15654 <argp_parse@@Base+0x3170>
   15680:	ldr	r3, [r4, #8]
   15684:	ldr	r0, [r6, #12]
   15688:	cmp	r3, #0
   1568c:	orr	r1, r1, r0
   15690:	beq	156d0 <argp_parse@@Base+0x31ec>
   15694:	tst	r1, #16
   15698:	bne	15654 <argp_parse@@Base+0x3170>
   1569c:	tst	r1, #1
   156a0:	moveq	r1, sl
   156a4:	ldrne	r1, [pc, #116]	; 15720 <argp_parse@@Base+0x323c>
   156a8:	mov	r0, r9
   156ac:	bl	17fe8 <argp_error@@Base+0x1464>
   156b0:	subs	r5, r5, #1
   156b4:	add	r4, r4, #24
   156b8:	bne	15660 <argp_parse@@Base+0x317c>
   156bc:	subs	r8, r8, #1
   156c0:	add	r7, r7, #28
   156c4:	bne	1563c <argp_parse@@Base+0x3158>
   156c8:	sub	sp, fp, #32
   156cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   156d0:	tst	r1, #16
   156d4:	bne	15654 <argp_parse@@Base+0x3170>
   156d8:	ldr	r3, [r6, #8]
   156dc:	cmp	r3, #0
   156e0:	bne	1569c <argp_parse@@Base+0x31b8>
   156e4:	ldr	r1, [pc, #56]	; 15724 <argp_parse@@Base+0x3240>
   156e8:	mov	r0, r9
   156ec:	bl	17fe8 <argp_error@@Base+0x1464>
   156f0:	b	15654 <argp_parse@@Base+0x3170>
   156f4:	add	r1, r3, #1
   156f8:	str	r1, [fp, #-40]	; 0xffffffd8
   156fc:	mov	r2, sl
   15700:	ldr	r1, [pc, #32]	; 15728 <argp_parse@@Base+0x3244>
   15704:	strb	r5, [r3]
   15708:	mov	r0, r9
   1570c:	bl	17fe8 <argp_error@@Base+0x1464>
   15710:	b	155f4 <argp_parse@@Base+0x3110>
   15714:	andeq	r4, r1, ip, asr sp
   15718:			; <UNDEFINED> instruction: 0x00014ab8
   1571c:	andeq	r8, r1, r0, lsr #23
   15720:	muleq	r1, r0, fp
   15724:	andeq	r8, r1, ip, lsr #23
   15728:	andeq	r8, r1, r8, lsl #23

0001572c <argp_failure@@Base>:
   1572c:	push	{r3}		; (str r3, [sp, #-4]!)
   15730:	push	{r4, r5, r6, r7, lr}
   15734:	subs	r5, r0, #0
   15738:	sub	sp, sp, #200	; 0xc8
   1573c:	mov	r7, r1
   15740:	mov	r6, r2
   15744:	beq	15894 <argp_failure@@Base+0x168>
   15748:	ldr	r3, [r5, #16]
   1574c:	tst	r3, #2
   15750:	bne	15884 <argp_failure@@Base+0x158>
   15754:	ldr	r4, [r5, #44]	; 0x2c
   15758:	cmp	r4, #0
   1575c:	beq	15884 <argp_failure@@Base+0x158>
   15760:	mov	r0, r4
   15764:	bl	11294 <flockfile@plt>
   15768:	ldr	r0, [r5, #40]	; 0x28
   1576c:	mov	r1, r4
   15770:	bl	10fe8 <fputs_unlocked@plt>
   15774:	ldr	r3, [sp, #220]	; 0xdc
   15778:	cmp	r3, #0
   1577c:	beq	157d8 <argp_failure@@Base+0xac>
   15780:	ldr	r3, [r4, #20]
   15784:	ldr	r1, [r4, #24]
   15788:	add	r2, sp, #224	; 0xe0
   1578c:	cmp	r3, r1
   15790:	str	r2, [sp]
   15794:	addcc	r1, r3, #1
   15798:	movcc	r2, #58	; 0x3a
   1579c:	strcc	r1, [r4, #20]
   157a0:	strbcc	r2, [r3]
   157a4:	bcs	158e0 <argp_failure@@Base+0x1b4>
   157a8:	ldr	r3, [r4, #20]
   157ac:	ldr	r2, [r4, #24]
   157b0:	cmp	r3, r2
   157b4:	addcc	r1, r3, #1
   157b8:	movcc	r2, #32
   157bc:	strcc	r1, [r4, #20]
   157c0:	strbcc	r2, [r3]
   157c4:	bcs	158d0 <argp_failure@@Base+0x1a4>
   157c8:	ldr	r2, [sp]
   157cc:	ldr	r1, [sp, #220]	; 0xdc
   157d0:	mov	r0, r4
   157d4:	bl	11270 <vfprintf@plt>
   157d8:	cmp	r6, #0
   157dc:	beq	15840 <argp_failure@@Base+0x114>
   157e0:	ldr	r3, [r4, #20]
   157e4:	ldr	r2, [r4, #24]
   157e8:	cmp	r3, r2
   157ec:	addcc	r1, r3, #1
   157f0:	movcc	r2, #58	; 0x3a
   157f4:	strcc	r1, [r4, #20]
   157f8:	strbcc	r2, [r3]
   157fc:	bcs	15900 <argp_failure@@Base+0x1d4>
   15800:	ldr	r3, [r4, #20]
   15804:	ldr	r2, [r4, #24]
   15808:	cmp	r3, r2
   1580c:	addcc	r1, r3, #1
   15810:	movcc	r2, #32
   15814:	strcc	r1, [r4, #20]
   15818:	strbcc	r2, [r3]
   1581c:	bcs	158f0 <argp_failure@@Base+0x1c4>
   15820:	mov	r2, #200	; 0xc8
   15824:	mov	r1, sp
   15828:	mov	r0, r6
   1582c:	bl	11204 <strerror_r@plt>
   15830:	cmp	r0, #0
   15834:	beq	15910 <argp_failure@@Base+0x1e4>
   15838:	mov	r1, r4
   1583c:	bl	10fe8 <fputs_unlocked@plt>
   15840:	ldr	r3, [r4, #20]
   15844:	ldr	r2, [r4, #24]
   15848:	cmp	r3, r2
   1584c:	addcc	r1, r3, #1
   15850:	movcc	r2, #10
   15854:	strcc	r1, [r4, #20]
   15858:	strbcc	r2, [r3]
   1585c:	bcs	158b8 <argp_failure@@Base+0x18c>
   15860:	mov	r0, r4
   15864:	bl	110d8 <funlockfile@plt>
   15868:	cmp	r7, #0
   1586c:	beq	15884 <argp_failure@@Base+0x158>
   15870:	cmp	r5, #0
   15874:	beq	158c8 <argp_failure@@Base+0x19c>
   15878:	ldr	r3, [r5, #16]
   1587c:	tst	r3, #32
   15880:	beq	158c8 <argp_failure@@Base+0x19c>
   15884:	add	sp, sp, #200	; 0xc8
   15888:	pop	{r4, r5, r6, r7, lr}
   1588c:	add	sp, sp, #4
   15890:	bx	lr
   15894:	ldr	r3, [pc, #140]	; 15928 <argp_failure@@Base+0x1fc>
   15898:	ldr	r4, [r3]
   1589c:	cmp	r4, #0
   158a0:	beq	15884 <argp_failure@@Base+0x158>
   158a4:	mov	r0, r4
   158a8:	bl	11294 <flockfile@plt>
   158ac:	ldr	r3, [pc, #120]	; 1592c <argp_failure@@Base+0x200>
   158b0:	ldr	r0, [r3]
   158b4:	b	1576c <argp_failure@@Base+0x40>
   158b8:	mov	r1, #10
   158bc:	mov	r0, r4
   158c0:	bl	11240 <__overflow@plt>
   158c4:	b	15860 <argp_failure@@Base+0x134>
   158c8:	mov	r0, r7
   158cc:	bl	111b0 <exit@plt>
   158d0:	mov	r1, #32
   158d4:	mov	r0, r4
   158d8:	bl	11240 <__overflow@plt>
   158dc:	b	157c8 <argp_failure@@Base+0x9c>
   158e0:	mov	r1, #58	; 0x3a
   158e4:	mov	r0, r4
   158e8:	bl	11240 <__overflow@plt>
   158ec:	b	157a8 <argp_failure@@Base+0x7c>
   158f0:	mov	r1, #32
   158f4:	mov	r0, r4
   158f8:	bl	11240 <__overflow@plt>
   158fc:	b	15820 <argp_failure@@Base+0xf4>
   15900:	mov	r1, #58	; 0x3a
   15904:	mov	r0, r4
   15908:	bl	11240 <__overflow@plt>
   1590c:	b	15800 <argp_failure@@Base+0xd4>
   15910:	mov	r0, r6
   15914:	bl	1115c <strerror@plt>
   15918:	ldr	r3, [pc, #16]	; 15930 <argp_failure@@Base+0x204>
   1591c:	cmp	r0, #0
   15920:	moveq	r0, r3
   15924:	b	15838 <argp_failure@@Base+0x10c>
   15928:	andeq	r9, r2, r0, asr #4
   1592c:	andeq	r9, r2, r8, lsr r2
   15930:			; <UNDEFINED> instruction: 0x00018bb4
   15934:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15938:	add	fp, sp, #32
   1593c:	cmp	r2, #0
   15940:	sub	sp, sp, #116	; 0x74
   15944:	str	r2, [fp, #-132]	; 0xffffff7c
   15948:	str	r0, [fp, #-112]	; 0xffffff90
   1594c:	str	r1, [fp, #-104]	; 0xffffff98
   15950:	str	r3, [fp, #-96]	; 0xffffffa0
   15954:	beq	15a0c <argp_failure@@Base+0x2e0>
   15958:	ldr	sl, [pc, #4064]	; 16940 <argp_failure@@Base+0x1214>
   1595c:	mov	r0, r2
   15960:	bl	11294 <flockfile@plt>
   15964:	ldr	r3, [sl, #36]	; 0x24
   15968:	cmp	r3, #0
   1596c:	str	r3, [fp, #-108]	; 0xffffff94
   15970:	beq	15ebc <argp_failure@@Base+0x790>
   15974:	mov	r3, #0
   15978:	mov	r1, r3
   1597c:	ldr	r2, [sl, #32]
   15980:	ldr	r0, [fp, #-132]	; 0xffffff7c
   15984:	bl	178bc <argp_error@@Base+0xd38>
   15988:	subs	r9, r0, #0
   1598c:	beq	16a00 <argp_failure@@Base+0x12d4>
   15990:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15994:	ands	r3, r3, #11
   15998:	streq	r3, [fp, #-136]	; 0xffffff78
   1599c:	bne	16318 <argp_failure@@Base+0xbec>
   159a0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   159a4:	ands	r4, r3, #3
   159a8:	bne	1610c <argp_failure@@Base+0x9e0>
   159ac:	ldr	r3, [fp, #-96]	; 0xffffffa0
   159b0:	tst	r3, #16
   159b4:	bne	160e8 <argp_failure@@Base+0x9bc>
   159b8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   159bc:	tst	r3, #4
   159c0:	bne	160cc <argp_failure@@Base+0x9a0>
   159c4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   159c8:	tst	r3, #8
   159cc:	bne	15a60 <argp_failure@@Base+0x334>
   159d0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   159d4:	tst	r3, #32
   159d8:	bne	15e94 <argp_failure@@Base+0x768>
   159dc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   159e0:	tst	r3, #64	; 0x40
   159e4:	bne	15a14 <argp_failure@@Base+0x2e8>
   159e8:	ldr	r0, [fp, #-132]	; 0xffffff7c
   159ec:	bl	110d8 <funlockfile@plt>
   159f0:	ldr	r3, [fp, #-136]	; 0xffffff78
   159f4:	cmp	r3, #0
   159f8:	beq	15a04 <argp_failure@@Base+0x2d8>
   159fc:	mov	r0, r3
   15a00:	bl	13b3c <argp_parse@@Base+0x1658>
   15a04:	mov	r0, r9
   15a08:	bl	17ea8 <argp_error@@Base+0x1324>
   15a0c:	sub	sp, fp, #32
   15a10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15a14:	ldr	r5, [pc, #3880]	; 16944 <argp_failure@@Base+0x1218>
   15a18:	ldr	r2, [r5]
   15a1c:	cmp	r2, #0
   15a20:	beq	159e8 <argp_failure@@Base+0x2bc>
   15a24:	cmp	r4, #0
   15a28:	beq	15a50 <argp_failure@@Base+0x324>
   15a2c:	ldr	r3, [r9, #28]
   15a30:	ldr	r2, [r9, #32]
   15a34:	cmp	r3, r2
   15a38:	bcs	169e4 <argp_failure@@Base+0x12b8>
   15a3c:	add	r1, r3, #1
   15a40:	mov	r2, #10
   15a44:	str	r1, [r9, #28]
   15a48:	strb	r2, [r3]
   15a4c:	ldr	r2, [r5]
   15a50:	ldr	r1, [pc, #3824]	; 16948 <argp_failure@@Base+0x121c>
   15a54:	mov	r0, r9
   15a58:	bl	17fe8 <argp_error@@Base+0x1464>
   15a5c:	b	159e8 <argp_failure@@Base+0x2bc>
   15a60:	ldr	r3, [fp, #-136]	; 0xffffff78
   15a64:	ldr	r3, [r3, #4]
   15a68:	cmp	r3, #0
   15a6c:	str	r3, [fp, #-108]	; 0xffffff94
   15a70:	beq	159d0 <argp_failure@@Base+0x2a4>
   15a74:	cmp	r4, #0
   15a78:	beq	16894 <argp_failure@@Base+0x1168>
   15a7c:	ldr	r3, [r9, #28]
   15a80:	ldr	r2, [r9, #32]
   15a84:	cmp	r3, r2
   15a88:	bcs	16a38 <argp_failure@@Base+0x130c>
   15a8c:	add	r1, r3, #1
   15a90:	mov	r2, #10
   15a94:	str	r1, [r9, #28]
   15a98:	strb	r2, [r3]
   15a9c:	ldr	r3, [fp, #-136]	; 0xffffff78
   15aa0:	ldr	r2, [fp, #-136]	; 0xffffff78
   15aa4:	ldr	r3, [r3, #4]
   15aa8:	ldr	r8, [r2]
   15aac:	str	r3, [fp, #-108]	; 0xffffff94
   15ab0:	ldr	r3, [fp, #-108]	; 0xffffff94
   15ab4:	cmp	r3, #0
   15ab8:	mov	r3, #0
   15abc:	str	r3, [fp, #-88]	; 0xffffffa8
   15ac0:	str	r3, [fp, #-84]	; 0xffffffac
   15ac4:	str	r3, [fp, #-80]	; 0xffffffb0
   15ac8:	beq	15e84 <argp_failure@@Base+0x758>
   15acc:	str	sl, [fp, #-100]	; 0xffffff9c
   15ad0:	ldr	lr, [r9, #28]
   15ad4:	ldr	r3, [r9, #24]
   15ad8:	ldr	r5, [r9, #16]
   15adc:	sub	lr, lr, r3
   15ae0:	cmp	lr, r5
   15ae4:	ldr	r6, [r8]
   15ae8:	ldr	sl, [r8, #8]
   15aec:	bhi	165ec <argp_failure@@Base+0xec0>
   15af0:	ldr	r1, [r9, #4]
   15af4:	ldr	r7, [r6, #12]
   15af8:	str	r1, [fp, #-116]	; 0xffffff8c
   15afc:	ldr	r1, [r9, #12]
   15b00:	mov	r3, #0
   15b04:	str	r1, [fp, #-120]	; 0xffffff88
   15b08:	sub	r1, fp, #88	; 0x58
   15b0c:	str	r3, [r9, #4]
   15b10:	and	r2, r7, #8
   15b14:	str	r1, [fp, #-68]	; 0xffffffbc
   15b18:	ldr	r1, [fp, #-104]	; 0xffffff98
   15b1c:	mov	r0, #1
   15b20:	cmp	r2, r3
   15b24:	mov	r4, r2
   15b28:	str	r0, [fp, #-64]	; 0xffffffc0
   15b2c:	str	r8, [fp, #-76]	; 0xffffffb4
   15b30:	str	r9, [fp, #-72]	; 0xffffffb8
   15b34:	str	r1, [fp, #-60]	; 0xffffffc4
   15b38:	bne	16478 <argp_failure@@Base+0xd4c>
   15b3c:	ldr	ip, [r8, #4]
   15b40:	cmp	ip, r3
   15b44:	beq	15b70 <argp_failure@@Base+0x444>
   15b48:	add	r0, r6, #24
   15b4c:	ldr	r3, [r0, #-24]	; 0xffffffe8
   15b50:	cmp	r3, #0
   15b54:	beq	15b64 <argp_failure@@Base+0x438>
   15b58:	ldr	r3, [r0, #-12]
   15b5c:	tst	r3, #2
   15b60:	beq	16474 <argp_failure@@Base+0xd48>
   15b64:	subs	ip, ip, #1
   15b68:	add	r0, r0, #24
   15b6c:	bne	15b4c <argp_failure@@Base+0x420>
   15b70:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15b74:	cmp	lr, r5
   15b78:	str	r2, [fp, #-128]	; 0xffffff80
   15b7c:	ldr	r5, [r3, #8]
   15b80:	bhi	1648c <argp_failure@@Base+0xd60>
   15b84:	str	r5, [r9, #12]
   15b88:	ldr	r5, [r8, #4]
   15b8c:	cmp	r5, #0
   15b90:	beq	15c14 <argp_failure@@Base+0x4e8>
   15b94:	mov	r4, r6
   15b98:	str	r8, [fp, #-124]	; 0xffffff84
   15b9c:	b	15bb4 <argp_failure@@Base+0x488>
   15ba0:	subs	r5, r5, #1
   15ba4:	add	r4, r4, #24
   15ba8:	beq	15c08 <argp_failure@@Base+0x4dc>
   15bac:	ldr	r7, [r4, #12]
   15bb0:	and	r2, r7, #8
   15bb4:	cmp	r2, #0
   15bb8:	bne	15ba0 <argp_failure@@Base+0x474>
   15bbc:	ldr	r8, [r4, #4]
   15bc0:	sub	r2, r8, #1
   15bc4:	cmp	r2, #254	; 0xfe
   15bc8:	bhi	15ba0 <argp_failure@@Base+0x474>
   15bcc:	bl	111a4 <__ctype_b_loc@plt>
   15bd0:	lsl	r2, r8, #1
   15bd4:	ldr	r1, [r0]
   15bd8:	ldrh	r2, [r1, r2]
   15bdc:	tst	r2, #16384	; 0x4000
   15be0:	beq	15ba0 <argp_failure@@Base+0x474>
   15be4:	ldrb	r2, [sl]
   15be8:	cmp	r8, r2
   15bec:	bne	15ba0 <argp_failure@@Base+0x474>
   15bf0:	tst	r7, #2
   15bf4:	beq	16538 <argp_failure@@Base+0xe0c>
   15bf8:	subs	r5, r5, #1
   15bfc:	add	sl, sl, #1
   15c00:	add	r4, r4, #24
   15c04:	bne	15bac <argp_failure@@Base+0x480>
   15c08:	ldr	r4, [r6, #12]
   15c0c:	ldr	r8, [fp, #-124]	; 0xffffff84
   15c10:	and	r4, r4, #8
   15c14:	ldr	r3, [r9, #28]
   15c18:	ldr	r1, [r9, #24]
   15c1c:	cmp	r4, #0
   15c20:	ldr	r2, [r9, #16]
   15c24:	sub	r3, r3, r1
   15c28:	beq	164a4 <argp_failure@@Base+0xd78>
   15c2c:	cmp	r3, r2
   15c30:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15c34:	ldr	r4, [r3, #16]
   15c38:	bhi	1676c <argp_failure@@Base+0x1040>
   15c3c:	str	r4, [r9, #12]
   15c40:	ldr	r5, [r8, #4]
   15c44:	cmp	r5, #0
   15c48:	addne	r4, r6, #24
   15c4c:	bne	15c60 <argp_failure@@Base+0x534>
   15c50:	b	15cf0 <argp_failure@@Base+0x5c4>
   15c54:	subs	r5, r5, #1
   15c58:	add	r4, r4, #24
   15c5c:	beq	15cf0 <argp_failure@@Base+0x5c4>
   15c60:	ldr	r3, [r4, #-24]	; 0xffffffe8
   15c64:	cmp	r3, #0
   15c68:	beq	15c54 <argp_failure@@Base+0x528>
   15c6c:	ldr	r3, [r4, #-12]
   15c70:	tst	r3, #2
   15c74:	bne	15c54 <argp_failure@@Base+0x528>
   15c78:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15c7c:	sub	r1, fp, #76	; 0x4c
   15c80:	ldr	r0, [r3, #16]
   15c84:	bl	13e6c <argp_parse@@Base+0x1988>
   15c88:	ldr	sl, [r4, #-24]	; 0xffffffe8
   15c8c:	mov	r0, sl
   15c90:	bl	111bc <strlen@plt>
   15c94:	subs	r7, r0, #0
   15c98:	beq	15c54 <argp_failure@@Base+0x528>
   15c9c:	ldr	r2, [r9, #28]
   15ca0:	ldr	lr, [r9, #32]
   15ca4:	add	ip, r2, r7
   15ca8:	cmp	lr, ip
   15cac:	mov	r1, r7
   15cb0:	mov	r0, r9
   15cb4:	bcs	15cc8 <argp_failure@@Base+0x59c>
   15cb8:	bl	17fc8 <argp_error@@Base+0x1444>
   15cbc:	cmp	r0, #0
   15cc0:	beq	15c54 <argp_failure@@Base+0x528>
   15cc4:	ldr	r2, [r9, #28]
   15cc8:	mov	r0, r2
   15ccc:	mov	r1, sl
   15cd0:	mov	r2, r7
   15cd4:	bl	11084 <memcpy@plt>
   15cd8:	ldr	r2, [r9, #28]
   15cdc:	subs	r5, r5, #1
   15ce0:	add	r3, r2, r7
   15ce4:	str	r3, [r9, #28]
   15ce8:	add	r4, r4, #24
   15cec:	bne	15c60 <argp_failure@@Base+0x534>
   15cf0:	ldr	r3, [r9, #28]
   15cf4:	ldr	r1, [r9, #24]
   15cf8:	ldr	r2, [r9, #16]
   15cfc:	sub	r3, r3, r1
   15d00:	cmp	r3, r2
   15d04:	bhi	16720 <argp_failure@@Base+0xff4>
   15d08:	ldr	r2, [fp, #-64]	; 0xffffffc0
   15d0c:	mov	r3, #0
   15d10:	cmp	r2, r3
   15d14:	str	r3, [r9, #4]
   15d18:	beq	16608 <argp_failure@@Base+0xedc>
   15d1c:	ldr	r3, [r6, #12]
   15d20:	tst	r3, #8
   15d24:	bne	15d50 <argp_failure@@Base+0x624>
   15d28:	ldr	r4, [r6, #4]
   15d2c:	sub	r3, r4, #1
   15d30:	cmp	r3, #254	; 0xfe
   15d34:	bhi	15d50 <argp_failure@@Base+0x624>
   15d38:	bl	111a4 <__ctype_b_loc@plt>
   15d3c:	lsl	r4, r4, #1
   15d40:	ldr	r3, [r0]
   15d44:	ldrh	r3, [r3, r4]
   15d48:	tst	r3, #16384	; 0x4000
   15d4c:	bne	15d5c <argp_failure@@Base+0x630>
   15d50:	ldr	r3, [r6]
   15d54:	cmp	r3, #0
   15d58:	beq	169d0 <argp_failure@@Base+0x12a4>
   15d5c:	ldr	r3, [r9, #28]
   15d60:	ldr	r1, [r9, #24]
   15d64:	ldr	r2, [r9, #16]
   15d68:	sub	r3, r3, r1
   15d6c:	cmp	r3, r2
   15d70:	bhi	165b8 <argp_failure@@Base+0xe8c>
   15d74:	ldr	r3, [fp, #-116]	; 0xffffff8c
   15d78:	str	r3, [r9, #4]
   15d7c:	ldr	r3, [fp, #-108]	; 0xffffff94
   15d80:	add	r8, r8, #28
   15d84:	subs	r3, r3, #1
   15d88:	str	r3, [fp, #-108]	; 0xffffff94
   15d8c:	ldr	r3, [fp, #-120]	; 0xffffff88
   15d90:	str	r3, [r9, #12]
   15d94:	bne	15ad0 <argp_failure@@Base+0x3a4>
   15d98:	ldr	r3, [fp, #-80]	; 0xffffffb0
   15d9c:	ldr	sl, [fp, #-100]	; 0xffffff9c
   15da0:	cmp	r3, #0
   15da4:	beq	15e84 <argp_failure@@Base+0x758>
   15da8:	ldr	r3, [sl, #4]
   15dac:	cmp	r3, #0
   15db0:	beq	15e84 <argp_failure@@Base+0x758>
   15db4:	ldr	r3, [fp, #-104]	; 0xffffff98
   15db8:	ldr	r1, [pc, #2956]	; 1694c <argp_failure@@Base+0x1220>
   15dbc:	cmp	r3, #0
   15dc0:	ldr	r0, [pc, #2952]	; 16950 <argp_failure@@Base+0x1224>
   15dc4:	ldrne	r2, [r3]
   15dc8:	ldreq	r2, [fp, #-104]	; 0xffffff98
   15dcc:	ldr	r3, [fp, #-104]	; 0xffffff98
   15dd0:	bl	13c1c <argp_parse@@Base+0x1738>
   15dd4:	subs	r4, r0, #0
   15dd8:	beq	15e84 <argp_failure@@Base+0x758>
   15ddc:	ldrb	r3, [r4]
   15de0:	cmp	r3, #0
   15de4:	beq	15e78 <argp_failure@@Base+0x74c>
   15de8:	ldr	r3, [r9, #28]
   15dec:	ldr	r2, [r9, #32]
   15df0:	cmp	r3, r2
   15df4:	bcs	16a94 <argp_failure@@Base+0x1368>
   15df8:	add	r1, r3, #1
   15dfc:	mov	r2, #10
   15e00:	str	r1, [r9, #28]
   15e04:	strb	r2, [r3]
   15e08:	mov	r0, r4
   15e0c:	bl	111bc <strlen@plt>
   15e10:	subs	r5, r0, #0
   15e14:	beq	16a70 <argp_failure@@Base+0x1344>
   15e18:	ldr	r0, [r9, #28]
   15e1c:	ldr	r2, [r9, #32]
   15e20:	add	r3, r0, r5
   15e24:	cmp	r2, r3
   15e28:	bcs	15e44 <argp_failure@@Base+0x718>
   15e2c:	mov	r1, r5
   15e30:	mov	r0, r9
   15e34:	bl	17fc8 <argp_error@@Base+0x1444>
   15e38:	cmp	r0, #0
   15e3c:	beq	16a70 <argp_failure@@Base+0x1344>
   15e40:	ldr	r0, [r9, #28]
   15e44:	mov	r2, r5
   15e48:	mov	r1, r4
   15e4c:	bl	11084 <memcpy@plt>
   15e50:	ldr	r3, [r9, #28]
   15e54:	add	r3, r3, r5
   15e58:	str	r3, [r9, #28]
   15e5c:	ldr	r2, [r9, #32]
   15e60:	cmp	r2, r3
   15e64:	bls	16a78 <argp_failure@@Base+0x134c>
   15e68:	add	r1, r3, #1
   15e6c:	mov	r2, #10
   15e70:	str	r1, [r9, #28]
   15e74:	strb	r2, [r3]
   15e78:	ldr	r3, [pc, #2768]	; 16950 <argp_failure@@Base+0x1224>
   15e7c:	cmp	r4, r3
   15e80:	bne	169c4 <argp_failure@@Base+0x1298>
   15e84:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15e88:	mov	r4, #1
   15e8c:	tst	r3, #32
   15e90:	beq	159dc <argp_failure@@Base+0x2b0>
   15e94:	mov	r3, #0
   15e98:	str	r3, [sp]
   15e9c:	str	r9, [sp, #4]
   15ea0:	mov	r3, r4
   15ea4:	ldr	r1, [fp, #-104]	; 0xffffff98
   15ea8:	ldr	r0, [fp, #-112]	; 0xffffff90
   15eac:	mov	r2, #1
   15eb0:	bl	14018 <argp_parse@@Base+0x1b34>
   15eb4:	orr	r4, r4, r0
   15eb8:	b	159dc <argp_failure@@Base+0x2b0>
   15ebc:	ldr	r0, [pc, #2704]	; 16954 <argp_failure@@Base+0x1228>
   15ec0:	bl	1112c <getenv@plt>
   15ec4:	mov	lr, sl
   15ec8:	sub	r3, fp, #76	; 0x4c
   15ecc:	mov	ip, r3
   15ed0:	str	r3, [fp, #-100]	; 0xffffff9c
   15ed4:	mov	r6, r0
   15ed8:	ldm	lr!, {r0, r1, r2, r3}
   15edc:	cmp	r6, #0
   15ee0:	stmia	ip!, {r0, r1, r2, r3}
   15ee4:	ldm	lr!, {r0, r1, r2, r3}
   15ee8:	stmia	ip!, {r0, r1, r2, r3}
   15eec:	ldm	lr, {r0, r1}
   15ef0:	stm	ip, {r0, r1}
   15ef4:	beq	15974 <argp_failure@@Base+0x248>
   15ef8:	ldrb	r9, [r6]
   15efc:	ldr	r8, [pc, #2644]	; 16958 <argp_failure@@Base+0x122c>
   15f00:	cmp	r9, #0
   15f04:	beq	16058 <argp_failure@@Base+0x92c>
   15f08:	bl	111a4 <__ctype_b_loc@plt>
   15f0c:	mov	r5, r0
   15f10:	ldr	r1, [r0]
   15f14:	b	15f1c <argp_failure@@Base+0x7f0>
   15f18:	ldrb	r9, [r6, #1]!
   15f1c:	lsl	r3, r9, #1
   15f20:	ldrh	r3, [r1, r3]
   15f24:	tst	r3, #8192	; 0x2000
   15f28:	bne	15f18 <argp_failure@@Base+0x7ec>
   15f2c:	ands	r2, r3, #1024	; 0x400
   15f30:	beq	16050 <argp_failure@@Base+0x924>
   15f34:	cmp	r9, #95	; 0x5f
   15f38:	cmpne	r9, #45	; 0x2d
   15f3c:	lsl	r3, r3, #28
   15f40:	moveq	r7, #1
   15f44:	movne	r7, #0
   15f48:	orrs	r3, r7, r3, lsr #31
   15f4c:	beq	1680c <argp_failure@@Base+0x10e0>
   15f50:	mov	r4, r6
   15f54:	ldrb	r3, [r4, #1]!
   15f58:	cmp	r3, #95	; 0x5f
   15f5c:	cmpne	r3, #45	; 0x2d
   15f60:	lsl	r2, r3, #1
   15f64:	moveq	r0, #1
   15f68:	ldrh	r2, [r1, r2]
   15f6c:	movne	r0, #0
   15f70:	lsl	ip, r2, #28
   15f74:	orrs	r0, r0, ip, lsr #31
   15f78:	bne	15f54 <argp_failure@@Base+0x828>
   15f7c:	tst	r2, #8192	; 0x2000
   15f80:	sub	r7, r4, r6
   15f84:	beq	15f9c <argp_failure@@Base+0x870>
   15f88:	ldrb	r3, [r4, #1]!
   15f8c:	lsl	r2, r3, #1
   15f90:	ldrh	r2, [r1, r2]
   15f94:	tst	r2, #8192	; 0x2000
   15f98:	bne	15f88 <argp_failure@@Base+0x85c>
   15f9c:	cmp	r3, #44	; 0x2c
   15fa0:	cmpne	r3, #0
   15fa4:	beq	160b8 <argp_failure@@Base+0x98c>
   15fa8:	cmp	r3, #61	; 0x3d
   15fac:	beq	16414 <argp_failure@@Base+0xce8>
   15fb0:	ldrb	r3, [r4]
   15fb4:	lsl	r3, r3, #1
   15fb8:	ldrh	r3, [r1, r3]
   15fbc:	tst	r3, #2048	; 0x800
   15fc0:	bne	163b4 <argp_failure@@Base+0xc88>
   15fc4:	ldr	r3, [fp, #-108]	; 0xffffff94
   15fc8:	mov	r9, r3
   15fcc:	str	r3, [fp, #-116]	; 0xffffff8c
   15fd0:	ldr	r5, [pc, #2436]	; 1695c <argp_failure@@Base+0x1230>
   15fd4:	b	15fe4 <argp_failure@@Base+0x8b8>
   15fd8:	add	r5, r5, #16
   15fdc:	cmp	r5, r8
   15fe0:	beq	16874 <argp_failure@@Base+0x1148>
   15fe4:	mov	r0, r5
   15fe8:	bl	111bc <strlen@plt>
   15fec:	cmp	r0, r7
   15ff0:	bne	15fd8 <argp_failure@@Base+0x8ac>
   15ff4:	mov	r2, r7
   15ff8:	mov	r1, r5
   15ffc:	mov	r0, r6
   16000:	bl	112b8 <strncmp@plt>
   16004:	cmp	r0, #0
   16008:	bne	15fd8 <argp_failure@@Base+0x8ac>
   1600c:	cmp	r9, #0
   16010:	beq	16020 <argp_failure@@Base+0x8f4>
   16014:	ldrb	r1, [r5, #14]
   16018:	cmp	r1, #0
   1601c:	beq	16a54 <argp_failure@@Base+0x1328>
   16020:	ldrb	r3, [r5, #15]
   16024:	sub	r2, fp, #36	; 0x24
   16028:	add	r3, r2, r3
   1602c:	ldr	r2, [fp, #-116]	; 0xffffff8c
   16030:	str	r2, [r3, #-40]	; 0xffffffd8
   16034:	cmp	r5, r8
   16038:	beq	16874 <argp_failure@@Base+0x1148>
   1603c:	ldrb	r9, [r4]
   16040:	cmp	r9, #44	; 0x2c
   16044:	beq	16754 <argp_failure@@Base+0x1028>
   16048:	mov	r6, r4
   1604c:	b	15f00 <argp_failure@@Base+0x7d4>
   16050:	cmp	r9, #0
   16054:	bne	169ac <argp_failure@@Base+0x1280>
   16058:	ldr	lr, [fp, #-44]	; 0xffffffd4
   1605c:	ldr	r1, [pc, #2296]	; 1695c <argp_failure@@Base+0x1230>
   16060:	add	r3, r1, #16
   16064:	cmp	r3, r8
   16068:	mov	r1, r3
   1606c:	beq	167b0 <argp_failure@@Base+0x1084>
   16070:	ldrb	r2, [r3, #14]
   16074:	cmp	r2, #0
   16078:	bne	16060 <argp_failure@@Base+0x934>
   1607c:	ldrb	r0, [r3, #15]
   16080:	sub	ip, fp, #36	; 0x24
   16084:	cmp	r0, #32
   16088:	add	ip, ip, r0
   1608c:	beq	16060 <argp_failure@@Base+0x934>
   16090:	ldr	r0, [ip, #-40]	; 0xffffffd8
   16094:	cmp	r0, lr
   16098:	blt	16060 <argp_failure@@Base+0x934>
   1609c:	ldr	r1, [pc, #2236]	; 16960 <argp_failure@@Base+0x1234>
   160a0:	ldr	r0, [fp, #-104]	; 0xffffff98
   160a4:	stm	sp, {r1, r3}
   160a8:	ldr	r3, [pc, #2228]	; 16964 <argp_failure@@Base+0x1238>
   160ac:	mov	r1, r2
   160b0:	bl	1572c <argp_failure@@Base>
   160b4:	b	15974 <argp_failure@@Base+0x248>
   160b8:	cmp	r9, #110	; 0x6e
   160bc:	beq	16444 <argp_failure@@Base+0xd18>
   160c0:	mov	r9, #1
   160c4:	str	r9, [fp, #-116]	; 0xffffff8c
   160c8:	b	15fd0 <argp_failure@@Base+0x8a4>
   160cc:	ldr	r3, [fp, #4]
   160d0:	ldr	r1, [pc, #2192]	; 16968 <argp_failure@@Base+0x123c>
   160d4:	mov	r2, r3
   160d8:	mov	r0, r9
   160dc:	bl	17fe8 <argp_error@@Base+0x1464>
   160e0:	mov	r4, #1
   160e4:	b	159c4 <argp_failure@@Base+0x298>
   160e8:	mov	r2, #1
   160ec:	mov	r3, #0
   160f0:	stm	sp, {r2, r9}
   160f4:	ldr	r1, [fp, #-104]	; 0xffffff98
   160f8:	mov	r2, r3
   160fc:	ldr	r0, [fp, #-112]	; 0xffffff90
   16100:	bl	14018 <argp_parse@@Base+0x1b34>
   16104:	orr	r4, r4, r0
   16108:	b	159b8 <argp_failure@@Base+0x28c>
   1610c:	ldr	r3, [fp, #-112]	; 0xffffff90
   16110:	mov	r4, #1
   16114:	mov	r6, r4
   16118:	ldr	r1, [r3, #16]
   1611c:	ldr	r0, [r3, #8]
   16120:	bl	1551c <argp_parse@@Base+0x3038>
   16124:	mov	r1, #0
   16128:	add	r3, r0, #14
   1612c:	bic	r3, r3, #7
   16130:	sub	sp, sp, r3
   16134:	add	r7, sp, #8
   16138:	mov	r2, r0
   1613c:	mov	r0, r7
   16140:	bl	11210 <memset@plt>
   16144:	sub	r3, fp, #76	; 0x4c
   16148:	str	r3, [fp, #-100]	; 0xffffff9c
   1614c:	ldr	r8, [fp, #-136]	; 0xffffff78
   16150:	str	r7, [fp, #-108]	; 0xffffff94
   16154:	b	16270 <argp_failure@@Base+0xb44>
   16158:	cmp	r4, #0
   1615c:	ldr	r3, [fp, #-108]	; 0xffffff94
   16160:	ldr	r5, [r9, #12]
   16164:	ldrne	r2, [pc, #2048]	; 1696c <argp_failure@@Base+0x1240>
   16168:	str	r7, [r9, #12]
   1616c:	ldreq	r2, [pc, #2044]	; 16970 <argp_failure@@Base+0x1244>
   16170:	str	r3, [fp, #-76]	; 0xffffffb4
   16174:	ldr	r1, [pc, #2040]	; 16974 <argp_failure@@Base+0x1248>
   16178:	ldr	r3, [fp, #4]
   1617c:	mov	r0, r9
   16180:	bl	17fe8 <argp_error@@Base+0x1464>
   16184:	ldr	r3, [r9, #28]
   16188:	ldr	r1, [r9, #24]
   1618c:	ldr	r2, [r9, #16]
   16190:	sub	r3, r3, r1
   16194:	cmp	r3, r2
   16198:	ldr	r7, [sl, #28]
   1619c:	bhi	16304 <argp_failure@@Base+0xbd8>
   161a0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   161a4:	ldr	r4, [r9, #4]
   161a8:	tst	r3, #2
   161ac:	str	r7, [r9, #4]
   161b0:	beq	162e8 <argp_failure@@Base+0xbbc>
   161b4:	ldr	r3, [r8, #4]
   161b8:	cmp	r3, #0
   161bc:	beq	1620c <argp_failure@@Base+0xae0>
   161c0:	ldr	ip, [r9, #28]
   161c4:	ldr	r2, [r9, #32]
   161c8:	add	r3, ip, #12
   161cc:	cmp	r2, r3
   161d0:	bcs	161ec <argp_failure@@Base+0xac0>
   161d4:	mov	r1, #12
   161d8:	mov	r0, r9
   161dc:	bl	17fc8 <argp_error@@Base+0x1444>
   161e0:	cmp	r0, #0
   161e4:	beq	1620c <argp_failure@@Base+0xae0>
   161e8:	ldr	ip, [r9, #28]
   161ec:	ldr	r3, [pc, #1924]	; 16978 <argp_failure@@Base+0x124c>
   161f0:	ldm	r3!, {r0, r1, r2}
   161f4:	str	r0, [ip]
   161f8:	str	r1, [ip, #4]
   161fc:	str	r2, [ip, #8]
   16200:	ldr	r3, [r9, #28]
   16204:	add	r3, r3, #12
   16208:	str	r3, [r9, #28]
   1620c:	mov	r3, r6
   16210:	ldr	r1, [fp, #-104]	; 0xffffff98
   16214:	str	r9, [sp]
   16218:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1621c:	ldr	r0, [fp, #-112]	; 0xffffff90
   16220:	bl	14b54 <argp_parse@@Base+0x2670>
   16224:	ldr	r3, [r9, #28]
   16228:	ldr	r1, [r9, #24]
   1622c:	sub	r1, r3, r1
   16230:	mov	r7, r0
   16234:	ldr	r0, [r9, #16]
   16238:	cmp	r1, r0
   1623c:	strls	r5, [r9, #12]
   16240:	bhi	162b4 <argp_failure@@Base+0xb88>
   16244:	ldr	r1, [r9, #32]
   16248:	str	r4, [r9, #4]
   1624c:	cmp	r1, r3
   16250:	bls	16298 <argp_failure@@Base+0xb6c>
   16254:	add	r1, r3, #1
   16258:	mov	r2, #10
   1625c:	str	r1, [r9, #28]
   16260:	strb	r2, [r3]
   16264:	cmp	r7, #0
   16268:	mov	r4, #0
   1626c:	beq	16310 <argp_failure@@Base+0xbe4>
   16270:	ldr	r3, [r9, #28]
   16274:	ldr	r1, [r9, #24]
   16278:	ldr	r2, [r9, #16]
   1627c:	sub	r3, r3, r1
   16280:	cmp	r3, r2
   16284:	ldr	r7, [sl, #28]
   16288:	bls	16158 <argp_failure@@Base+0xa2c>
   1628c:	mov	r0, r9
   16290:	bl	17938 <argp_error@@Base+0xdb4>
   16294:	b	16158 <argp_failure@@Base+0xa2c>
   16298:	mov	r1, r6
   1629c:	mov	r0, r9
   162a0:	bl	17fc8 <argp_error@@Base+0x1444>
   162a4:	cmp	r0, #0
   162a8:	beq	16264 <argp_failure@@Base+0xb38>
   162ac:	ldr	r3, [r9, #28]
   162b0:	b	16254 <argp_failure@@Base+0xb28>
   162b4:	mov	r0, r9
   162b8:	bl	17938 <argp_error@@Base+0xdb4>
   162bc:	ldr	r3, [r9, #28]
   162c0:	ldr	r1, [r9, #24]
   162c4:	ldr	r0, [r9, #16]
   162c8:	sub	r1, r3, r1
   162cc:	cmp	r1, r0
   162d0:	str	r5, [r9, #12]
   162d4:	bls	16244 <argp_failure@@Base+0xb18>
   162d8:	mov	r0, r9
   162dc:	bl	17938 <argp_error@@Base+0xdb4>
   162e0:	ldr	r3, [r9, #28]
   162e4:	b	16244 <argp_failure@@Base+0xb18>
   162e8:	mov	r1, r9
   162ec:	mov	r0, r8
   162f0:	bl	15574 <argp_parse@@Base+0x3090>
   162f4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   162f8:	orr	r3, r3, #2
   162fc:	str	r3, [fp, #-96]	; 0xffffffa0
   16300:	b	1620c <argp_failure@@Base+0xae0>
   16304:	mov	r0, r9
   16308:	bl	17938 <argp_error@@Base+0xdb4>
   1630c:	b	161a0 <argp_failure@@Base+0xa74>
   16310:	mov	r4, #1
   16314:	b	159ac <argp_failure@@Base+0x280>
   16318:	mov	r1, #0
   1631c:	ldr	r0, [fp, #-112]	; 0xffffff90
   16320:	bl	14da4 <argp_parse@@Base+0x28c0>
   16324:	ldr	r2, [pc, #1616]	; 1697c <argp_failure@@Base+0x1250>
   16328:	ldr	r4, [r0, #4]
   1632c:	ldr	r5, [r0]
   16330:	mov	r1, r4
   16334:	mov	r6, r0
   16338:	str	r0, [fp, #-136]	; 0xffffff78
   1633c:	mov	r0, r5
   16340:	bl	15494 <argp_parse@@Base+0x2fb0>
   16344:	ldr	r2, [pc, #1588]	; 16980 <argp_failure@@Base+0x1254>
   16348:	cmp	r0, #0
   1634c:	mvnne	r3, #0
   16350:	strne	r3, [r0, #12]
   16354:	movne	r3, r6
   16358:	mov	r0, r5
   1635c:	ldrne	r4, [r3, #4]
   16360:	mov	r1, r4
   16364:	bl	15494 <argp_parse@@Base+0x2fb0>
   16368:	cmp	r0, #0
   1636c:	mvnne	r3, #0
   16370:	strne	r3, [r0, #12]
   16374:	ldrne	r3, [fp, #-136]	; 0xffffff78
   16378:	ldrne	r4, [r3, #4]
   1637c:	cmp	r4, #0
   16380:	beq	159a0 <argp_failure@@Base+0x274>
   16384:	mov	r3, r5
   16388:	mov	r1, #0
   1638c:	str	r1, [r3, #24]
   16390:	add	r1, r1, #1
   16394:	cmp	r1, r4
   16398:	add	r3, r3, #28
   1639c:	bne	1638c <argp_failure@@Base+0xc60>
   163a0:	mov	r0, r5
   163a4:	ldr	r3, [pc, #1496]	; 16984 <argp_failure@@Base+0x1258>
   163a8:	mov	r2, #28
   163ac:	bl	112ac <qsort@plt>
   163b0:	b	159a0 <argp_failure@@Base+0x274>
   163b4:	mov	r2, #10
   163b8:	mov	r1, #0
   163bc:	mov	r0, r4
   163c0:	bl	11000 <strtol@plt>
   163c4:	ldrb	r3, [r4]
   163c8:	ldr	r2, [r5]
   163cc:	lsl	r3, r3, #1
   163d0:	ldrh	r3, [r2, r3]
   163d4:	tst	r3, #2048	; 0x800
   163d8:	str	r0, [fp, #-116]	; 0xffffff8c
   163dc:	beq	16404 <argp_failure@@Base+0xcd8>
   163e0:	ldrb	r3, [r4, #1]!
   163e4:	lsl	r3, r3, #1
   163e8:	ldrh	r3, [r2, r3]
   163ec:	tst	r3, #2048	; 0x800
   163f0:	bne	163e0 <argp_failure@@Base+0xcb4>
   163f4:	b	16404 <argp_failure@@Base+0xcd8>
   163f8:	ldrb	r3, [r4, #1]!
   163fc:	lsl	r3, r3, #1
   16400:	ldrh	r3, [r2, r3]
   16404:	tst	r3, #8192	; 0x2000
   16408:	bne	163f8 <argp_failure@@Base+0xccc>
   1640c:	ldr	r9, [fp, #-108]	; 0xffffff94
   16410:	b	15fd0 <argp_failure@@Base+0x8a4>
   16414:	ldrb	r3, [r4, #1]
   16418:	add	r4, r4, #1
   1641c:	lsl	r3, r3, #1
   16420:	ldrh	r3, [r1, r3]
   16424:	tst	r3, #8192	; 0x2000
   16428:	beq	15fbc <argp_failure@@Base+0x890>
   1642c:	ldrb	r3, [r4, #1]!
   16430:	lsl	r3, r3, #1
   16434:	ldrh	r3, [r1, r3]
   16438:	tst	r3, #8192	; 0x2000
   1643c:	bne	1642c <argp_failure@@Base+0xd00>
   16440:	b	15fbc <argp_failure@@Base+0x890>
   16444:	ldrb	r3, [r6, #1]
   16448:	cmp	r3, #111	; 0x6f
   1644c:	bne	160c0 <argp_failure@@Base+0x994>
   16450:	ldrb	r3, [r6, #2]
   16454:	cmp	r3, #45	; 0x2d
   16458:	bne	160c0 <argp_failure@@Base+0x994>
   1645c:	ldr	r3, [fp, #-108]	; 0xffffff94
   16460:	add	r6, r6, #3
   16464:	sub	r7, r7, #3
   16468:	str	r3, [fp, #-116]	; 0xffffff8c
   1646c:	mov	r9, #1
   16470:	b	15fd0 <argp_failure@@Base+0x8a4>
   16474:	mov	r3, #1
   16478:	str	r3, [fp, #-128]	; 0xffffff80
   1647c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16480:	cmp	lr, r5
   16484:	ldr	r5, [r3, #8]
   16488:	bls	15b84 <argp_failure@@Base+0x458>
   1648c:	mov	r0, r9
   16490:	bl	17938 <argp_error@@Base+0xdb4>
   16494:	ldr	r7, [r6, #12]
   16498:	and	r2, r7, #8
   1649c:	mov	r4, r2
   164a0:	b	15b84 <argp_failure@@Base+0x458>
   164a4:	cmp	r3, r2
   164a8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   164ac:	ldr	r4, [r3, #12]
   164b0:	bhi	16760 <argp_failure@@Base+0x1034>
   164b4:	str	r4, [r9, #12]
   164b8:	ldr	r5, [r8, #4]
   164bc:	cmp	r5, #0
   164c0:	beq	15cf0 <argp_failure@@Base+0x5c4>
   164c4:	add	r4, r6, #24
   164c8:	ldr	r7, [fp, #-100]	; 0xffffff9c
   164cc:	b	164dc <argp_failure@@Base+0xdb0>
   164d0:	subs	r5, r5, #1
   164d4:	add	r4, r4, #24
   164d8:	beq	15cf0 <argp_failure@@Base+0x5c4>
   164dc:	ldr	r3, [r4, #-24]	; 0xffffffe8
   164e0:	cmp	r3, #0
   164e4:	beq	164d0 <argp_failure@@Base+0xda4>
   164e8:	ldr	r3, [r4, #-12]
   164ec:	tst	r3, #2
   164f0:	bne	164d0 <argp_failure@@Base+0xda4>
   164f4:	sub	r1, fp, #76	; 0x4c
   164f8:	ldr	r0, [r7, #12]
   164fc:	bl	13e6c <argp_parse@@Base+0x1988>
   16500:	ldr	r2, [r4, #-24]	; 0xffffffe8
   16504:	ldr	r1, [pc, #1148]	; 16988 <argp_failure@@Base+0x125c>
   16508:	mov	r0, r9
   1650c:	bl	17fe8 <argp_error@@Base+0x1464>
   16510:	ldr	r3, [r6, #8]
   16514:	ldr	r1, [pc, #1136]	; 1698c <argp_failure@@Base+0x1260>
   16518:	subs	r2, r3, #0
   1651c:	mov	r0, r9
   16520:	beq	164d0 <argp_failure@@Base+0xda4>
   16524:	ldr	ip, [r6, #12]
   16528:	tst	ip, #1
   1652c:	ldrne	r1, [pc, #1116]	; 16990 <argp_failure@@Base+0x1264>
   16530:	bl	17fe8 <argp_error@@Base+0x1464>
   16534:	b	164d0 <argp_failure@@Base+0xda4>
   16538:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1653c:	sub	r1, fp, #76	; 0x4c
   16540:	ldr	r0, [r3, #8]
   16544:	bl	13e6c <argp_parse@@Base+0x1988>
   16548:	ldr	r3, [r9, #28]
   1654c:	ldr	r2, [r9, #32]
   16550:	cmp	r3, r2
   16554:	bcs	16794 <argp_failure@@Base+0x1068>
   16558:	add	r2, r3, #1
   1655c:	str	r2, [r9, #28]
   16560:	mov	r2, #45	; 0x2d
   16564:	strb	r2, [r3]
   16568:	ldr	r3, [r9, #28]
   1656c:	ldr	r2, [r9, #32]
   16570:	ldrb	r7, [sl]
   16574:	cmp	r3, r2
   16578:	bcs	16778 <argp_failure@@Base+0x104c>
   1657c:	add	r2, r3, #1
   16580:	str	r2, [r9, #28]
   16584:	strb	r7, [r3]
   16588:	ldr	r3, [fp, #-128]	; 0xffffff80
   1658c:	cmp	r3, #0
   16590:	beq	1672c <argp_failure@@Base+0x1000>
   16594:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16598:	ldr	r3, [r3]
   1659c:	cmp	r3, #0
   165a0:	bne	1672c <argp_failure@@Base+0x1000>
   165a4:	ldr	r3, [r6, #8]
   165a8:	cmp	r3, #0
   165ac:	movne	r3, #1
   165b0:	strne	r3, [fp, #-80]	; 0xffffffb0
   165b4:	b	15bf8 <argp_failure@@Base+0x4cc>
   165b8:	mov	r0, r9
   165bc:	bl	17938 <argp_error@@Base+0xdb4>
   165c0:	ldr	r2, [fp, #-116]	; 0xffffff8c
   165c4:	ldr	r3, [r9, #28]
   165c8:	ldr	r1, [r9, #24]
   165cc:	str	r2, [r9, #4]
   165d0:	ldr	r2, [r9, #16]
   165d4:	sub	r3, r3, r1
   165d8:	cmp	r3, r2
   165dc:	bls	15d7c <argp_failure@@Base+0x650>
   165e0:	mov	r0, r9
   165e4:	bl	17938 <argp_error@@Base+0xdb4>
   165e8:	b	15d7c <argp_failure@@Base+0x650>
   165ec:	mov	r0, r9
   165f0:	bl	17938 <argp_error@@Base+0xdb4>
   165f4:	ldr	lr, [r9, #28]
   165f8:	ldr	r2, [r9, #24]
   165fc:	ldr	r5, [r9, #16]
   16600:	sub	lr, lr, r2
   16604:	b	15af0 <argp_failure@@Base+0x3c4>
   16608:	ldr	r4, [r6, #16]
   1660c:	ldr	r1, [r6, #4]
   16610:	mov	r0, r4
   16614:	ldr	r3, [fp, #-104]	; 0xffffff98
   16618:	ldr	r2, [r8, #20]
   1661c:	bl	13c1c <argp_parse@@Base+0x1738>
   16620:	subs	r5, r0, #0
   16624:	beq	166dc <argp_failure@@Base+0xfb0>
   16628:	ldrb	r3, [r5]
   1662c:	cmp	r3, #0
   16630:	beq	166cc <argp_failure@@Base+0xfa0>
   16634:	ldr	r3, [r9, #28]
   16638:	ldr	r1, [r9, #24]
   1663c:	ldr	r2, [r9, #16]
   16640:	sub	r3, r3, r1
   16644:	cmp	r3, r2
   16648:	bhi	168cc <argp_failure@@Base+0x11a0>
   1664c:	ldr	r7, [r9, #20]
   16650:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16654:	bic	r7, r7, r7, asr #31
   16658:	ldr	r6, [r3, #20]
   1665c:	mov	r3, r6
   16660:	str	r6, [r9, #4]
   16664:	add	r2, r6, #3
   16668:	cmp	r2, r7
   1666c:	str	r3, [r9, #12]
   16670:	bcs	1681c <argp_failure@@Base+0x10f0>
   16674:	ldr	r3, [r9, #28]
   16678:	ldr	r2, [r9, #32]
   1667c:	cmp	r3, r2
   16680:	bcs	16a1c <argp_failure@@Base+0x12f0>
   16684:	add	r1, r3, #1
   16688:	mov	r2, #10
   1668c:	str	r1, [r9, #28]
   16690:	strb	r2, [r3]
   16694:	mov	r0, r5
   16698:	bl	111bc <strlen@plt>
   1669c:	subs	r6, r0, #0
   166a0:	beq	166cc <argp_failure@@Base+0xfa0>
   166a4:	ldr	r0, [r9, #28]
   166a8:	ldr	r2, [r9, #32]
   166ac:	add	r3, r0, r6
   166b0:	cmp	r2, r3
   166b4:	bcs	168b0 <argp_failure@@Base+0x1184>
   166b8:	mov	r1, r6
   166bc:	mov	r0, r9
   166c0:	bl	17fc8 <argp_error@@Base+0x1444>
   166c4:	cmp	r0, #0
   166c8:	bne	168ac <argp_failure@@Base+0x1180>
   166cc:	cmp	r4, r5
   166d0:	beq	166dc <argp_failure@@Base+0xfb0>
   166d4:	mov	r0, r5
   166d8:	bl	1337c <argp_parse@@Base+0xe98>
   166dc:	ldr	r3, [r9, #28]
   166e0:	ldr	r2, [r9, #24]
   166e4:	ldr	r1, [r9, #16]
   166e8:	sub	r2, r3, r2
   166ec:	cmp	r2, r1
   166f0:	bhi	167fc <argp_failure@@Base+0x10d0>
   166f4:	ldr	r1, [r9, #32]
   166f8:	mov	r2, #0
   166fc:	cmp	r1, r3
   16700:	str	r2, [r9, #4]
   16704:	bls	167e0 <argp_failure@@Base+0x10b4>
   16708:	add	r1, r3, #1
   1670c:	mov	r2, #10
   16710:	str	r1, [r9, #28]
   16714:	strb	r2, [r3]
   16718:	str	r8, [fp, #-88]	; 0xffffffa8
   1671c:	b	15d5c <argp_failure@@Base+0x630>
   16720:	mov	r0, r9
   16724:	bl	17938 <argp_error@@Base+0xdb4>
   16728:	b	15d08 <argp_failure@@Base+0x5dc>
   1672c:	ldr	r2, [r6, #8]
   16730:	cmp	r2, #0
   16734:	beq	15bf8 <argp_failure@@Base+0x4cc>
   16738:	ldr	r3, [r6, #12]
   1673c:	mov	r0, r9
   16740:	tst	r3, #1
   16744:	ldrne	r1, [pc, #584]	; 16994 <argp_failure@@Base+0x1268>
   16748:	ldreq	r1, [pc, #584]	; 16998 <argp_failure@@Base+0x126c>
   1674c:	bl	17fe8 <argp_error@@Base+0x1464>
   16750:	b	15bf8 <argp_failure@@Base+0x4cc>
   16754:	ldrb	r9, [r4, #1]
   16758:	add	r4, r4, #1
   1675c:	b	16048 <argp_failure@@Base+0x91c>
   16760:	mov	r0, r9
   16764:	bl	17938 <argp_error@@Base+0xdb4>
   16768:	b	164b4 <argp_failure@@Base+0xd88>
   1676c:	mov	r0, r9
   16770:	bl	17938 <argp_error@@Base+0xdb4>
   16774:	b	15c3c <argp_failure@@Base+0x510>
   16778:	mov	r1, #1
   1677c:	mov	r0, r9
   16780:	bl	17fc8 <argp_error@@Base+0x1444>
   16784:	cmp	r0, #0
   16788:	beq	16588 <argp_failure@@Base+0xe5c>
   1678c:	ldr	r3, [r9, #28]
   16790:	b	1657c <argp_failure@@Base+0xe50>
   16794:	mov	r1, #1
   16798:	mov	r0, r9
   1679c:	bl	17fc8 <argp_error@@Base+0x1444>
   167a0:	cmp	r0, #0
   167a4:	beq	16568 <argp_failure@@Base+0xe3c>
   167a8:	ldr	r3, [r9, #28]
   167ac:	b	16558 <argp_failure@@Base+0xe2c>
   167b0:	ldr	lr, [fp, #-100]	; 0xffffff9c
   167b4:	ldr	sl, [pc, #388]	; 16940 <argp_failure@@Base+0x1214>
   167b8:	mov	r4, #1
   167bc:	ldm	lr!, {r0, r1, r2, r3}
   167c0:	mov	ip, sl
   167c4:	stmia	ip!, {r0, r1, r2, r3}
   167c8:	ldm	lr!, {r0, r1, r2, r3}
   167cc:	stmia	ip!, {r0, r1, r2, r3}
   167d0:	ldm	lr, {r0, r1}
   167d4:	stm	ip, {r0, r1}
   167d8:	str	r4, [sl, #36]	; 0x24
   167dc:	b	15974 <argp_failure@@Base+0x248>
   167e0:	mov	r1, #1
   167e4:	mov	r0, r9
   167e8:	bl	17fc8 <argp_error@@Base+0x1444>
   167ec:	cmp	r0, #0
   167f0:	beq	16718 <argp_failure@@Base+0xfec>
   167f4:	ldr	r3, [r9, #28]
   167f8:	b	16708 <argp_failure@@Base+0xfdc>
   167fc:	mov	r0, r9
   16800:	bl	17938 <argp_error@@Base+0xdb4>
   16804:	ldr	r3, [r9, #28]
   16808:	b	166f4 <argp_failure@@Base+0xfc8>
   1680c:	mov	r7, r3
   16810:	mov	r4, r6
   16814:	mov	r3, r9
   16818:	b	15f9c <argp_failure@@Base+0x870>
   1681c:	cmp	r6, r7
   16820:	bhi	16a0c <argp_failure@@Base+0x12e0>
   16824:	ldr	r3, [r9, #28]
   16828:	ldr	r1, [r9, #32]
   1682c:	add	r2, r3, #3
   16830:	cmp	r1, r2
   16834:	bcs	16850 <argp_failure@@Base+0x1124>
   16838:	mov	r1, #3
   1683c:	mov	r0, r9
   16840:	bl	17fc8 <argp_error@@Base+0x1444>
   16844:	cmp	r0, #0
   16848:	beq	16694 <argp_failure@@Base+0xf68>
   1684c:	ldr	r3, [r9, #28]
   16850:	ldr	r2, [pc, #324]	; 1699c <argp_failure@@Base+0x1270>
   16854:	ldrh	r1, [r2]
   16858:	ldrb	r2, [r2, #2]
   1685c:	strh	r1, [r3]
   16860:	strb	r2, [r3, #2]
   16864:	ldr	r3, [r9, #28]
   16868:	add	r3, r3, #3
   1686c:	str	r3, [r9, #28]
   16870:	b	16694 <argp_failure@@Base+0xf68>
   16874:	mov	r2, #0
   16878:	str	r6, [sp, #4]
   1687c:	str	r7, [sp]
   16880:	ldr	r3, [pc, #280]	; 169a0 <argp_failure@@Base+0x1274>
   16884:	mov	r1, r2
   16888:	ldr	r0, [fp, #-104]	; 0xffffff98
   1688c:	bl	1572c <argp_failure@@Base>
   16890:	b	1603c <argp_failure@@Base+0x910>
   16894:	ldr	r3, [fp, #-136]	; 0xffffff78
   16898:	ldr	r8, [r3]
   1689c:	str	r4, [fp, #-88]	; 0xffffffa8
   168a0:	str	r4, [fp, #-84]	; 0xffffffac
   168a4:	str	r4, [fp, #-80]	; 0xffffffb0
   168a8:	b	15acc <argp_failure@@Base+0x3a0>
   168ac:	ldr	r0, [r9, #28]
   168b0:	mov	r2, r6
   168b4:	mov	r1, r5
   168b8:	bl	11084 <memcpy@plt>
   168bc:	ldr	r3, [r9, #28]
   168c0:	add	r6, r3, r6
   168c4:	str	r6, [r9, #28]
   168c8:	b	166cc <argp_failure@@Base+0xfa0>
   168cc:	mov	r0, r9
   168d0:	bl	17938 <argp_error@@Base+0xdb4>
   168d4:	ldr	r3, [r9, #28]
   168d8:	ldr	r1, [r9, #24]
   168dc:	ldr	r2, [r9, #16]
   168e0:	ldr	r7, [r9, #20]
   168e4:	ldr	sl, [fp, #-100]	; 0xffffff9c
   168e8:	sub	r3, r3, r1
   168ec:	cmp	r3, r2
   168f0:	ldr	r6, [sl, #20]
   168f4:	bic	r7, r7, r7, asr #31
   168f8:	bls	1665c <argp_failure@@Base+0xf30>
   168fc:	mov	r0, r9
   16900:	bl	17938 <argp_error@@Base+0xdb4>
   16904:	ldr	r3, [r9, #28]
   16908:	ldr	r1, [r9, #24]
   1690c:	ldr	r2, [r9, #16]
   16910:	sub	r3, r3, r1
   16914:	cmp	r3, r2
   16918:	ldr	r3, [sl, #20]
   1691c:	str	r6, [r9, #4]
   16920:	movls	r6, r3
   16924:	bls	16664 <argp_failure@@Base+0xf38>
   16928:	mov	r0, r9
   1692c:	str	r3, [fp, #-124]	; 0xffffff84
   16930:	bl	17938 <argp_error@@Base+0xdb4>
   16934:	ldr	r6, [sl, #20]
   16938:	ldr	r3, [fp, #-124]	; 0xffffff84
   1693c:	b	16664 <argp_failure@@Base+0xf38>
   16940:	strdeq	r9, [r2], -ip
   16944:	muleq	r2, ip, r2
   16948:	andeq	r8, r1, r4, lsl #27
   1694c:	andeq	r0, r0, #5
   16950:	andeq	r8, r1, r0, lsl sp
   16954:	andeq	r8, r1, ip, asr #23
   16958:	muleq	r1, ip, sl
   1695c:	andeq	r8, r1, ip, lsl #20
   16960:	andeq	r8, r1, r8, lsl #25
   16964:	andeq	r8, r1, r4, asr ip
   16968:			; <UNDEFINED> instruction: 0x00018cb8
   1696c:	muleq	r1, r0, ip
   16970:	andeq	r8, r1, r0, lsr #25
   16974:	muleq	r1, r8, ip
   16978:	andeq	r8, r1, r8, lsr #25
   1697c:	andeq	r8, r1, r4, lsr #11
   16980:	andeq	r8, r1, r4, lsl #11
   16984:	andeq	r4, r1, r4, asr r6
   16988:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   1698c:	andeq	r8, r1, r8, lsl #26
   16990:	andeq	r8, r1, r0, lsl #26
   16994:	strdeq	r8, [r1], -r0
   16998:	andeq	r8, r1, r4, asr r5
   1699c:	andeq	r8, r1, ip, lsl #26
   169a0:	andeq	r8, r1, ip, lsl #24
   169a4:	andeq	r8, r1, r4, lsr ip
   169a8:	ldrdeq	r8, [r1], -ip
   169ac:	str	r6, [sp]
   169b0:	ldr	r3, [pc, #-20]	; 169a4 <argp_failure@@Base+0x1278>
   169b4:	mov	r1, r2
   169b8:	ldr	r0, [fp, #-104]	; 0xffffff98
   169bc:	bl	1572c <argp_failure@@Base>
   169c0:	b	16058 <argp_failure@@Base+0x92c>
   169c4:	mov	r0, r4
   169c8:	bl	1337c <argp_parse@@Base+0xe98>
   169cc:	b	15e84 <argp_failure@@Base+0x758>
   169d0:	ldr	r0, [r6, #16]
   169d4:	sub	r2, fp, #76	; 0x4c
   169d8:	ldr	r1, [r8, #20]
   169dc:	bl	13c60 <argp_parse@@Base+0x177c>
   169e0:	b	16718 <argp_failure@@Base+0xfec>
   169e4:	mov	r1, #1
   169e8:	mov	r0, r9
   169ec:	bl	17fc8 <argp_error@@Base+0x1444>
   169f0:	cmp	r0, #0
   169f4:	beq	15a4c <argp_failure@@Base+0x320>
   169f8:	ldr	r3, [r9, #28]
   169fc:	b	15a3c <argp_failure@@Base+0x310>
   16a00:	ldr	r0, [fp, #-132]	; 0xffffff7c
   16a04:	bl	110d8 <funlockfile@plt>
   16a08:	b	15a0c <argp_failure@@Base+0x2e0>
   16a0c:	mov	r1, r6
   16a10:	mov	r0, r9
   16a14:	bl	13b88 <argp_parse@@Base+0x16a4>
   16a18:	b	16694 <argp_failure@@Base+0xf68>
   16a1c:	mov	r1, #1
   16a20:	mov	r0, r9
   16a24:	bl	17fc8 <argp_error@@Base+0x1444>
   16a28:	cmp	r0, #0
   16a2c:	beq	16694 <argp_failure@@Base+0xf68>
   16a30:	ldr	r3, [r9, #28]
   16a34:	b	16684 <argp_failure@@Base+0xf58>
   16a38:	mov	r1, #1
   16a3c:	mov	r0, r9
   16a40:	bl	17fc8 <argp_error@@Base+0x1444>
   16a44:	cmp	r0, #0
   16a48:	beq	15a9c <argp_failure@@Base+0x370>
   16a4c:	ldr	r3, [r9, #28]
   16a50:	b	15a8c <argp_failure@@Base+0x360>
   16a54:	str	r6, [sp, #4]
   16a58:	str	r7, [sp]
   16a5c:	ldr	r3, [pc, #-188]	; 169a8 <argp_failure@@Base+0x127c>
   16a60:	mov	r2, #0
   16a64:	ldr	r0, [fp, #-104]	; 0xffffff98
   16a68:	bl	1572c <argp_failure@@Base>
   16a6c:	b	16034 <argp_failure@@Base+0x908>
   16a70:	ldr	r3, [r9, #28]
   16a74:	b	15e5c <argp_failure@@Base+0x730>
   16a78:	mov	r1, #1
   16a7c:	mov	r0, r9
   16a80:	bl	17fc8 <argp_error@@Base+0x1444>
   16a84:	cmp	r0, #0
   16a88:	beq	15e78 <argp_failure@@Base+0x74c>
   16a8c:	ldr	r3, [r9, #28]
   16a90:	b	15e68 <argp_failure@@Base+0x73c>
   16a94:	mov	r1, #1
   16a98:	mov	r0, r9
   16a9c:	bl	17fc8 <argp_error@@Base+0x1444>
   16aa0:	cmp	r0, #0
   16aa4:	beq	15e08 <argp_failure@@Base+0x6dc>
   16aa8:	ldr	r3, [r9, #28]
   16aac:	b	15df8 <argp_failure@@Base+0x6cc>

00016ab0 <argp_help@@Base>:
   16ab0:	push	{lr}		; (str lr, [sp, #-4]!)
   16ab4:	sub	sp, sp, #12
   16ab8:	str	r3, [sp]
   16abc:	mov	r3, r2
   16ac0:	mov	r2, r1
   16ac4:	mov	r1, #0
   16ac8:	bl	15934 <argp_failure@@Base+0x208>
   16acc:	add	sp, sp, #12
   16ad0:	pop	{pc}		; (ldr pc, [sp], #4)

00016ad4 <argp_state_help@@Base>:
   16ad4:	push	{r4, r5, lr}
   16ad8:	subs	r4, r0, #0
   16adc:	sub	sp, sp, #12
   16ae0:	mov	r5, r2
   16ae4:	beq	16b44 <argp_state_help@@Base+0x70>
   16ae8:	ldr	r3, [r4, #16]
   16aec:	tst	r3, #2
   16af0:	bne	16b3c <argp_state_help@@Base+0x68>
   16af4:	cmp	r1, #0
   16af8:	beq	16b3c <argp_state_help@@Base+0x68>
   16afc:	tst	r3, #64	; 0x40
   16b00:	ldr	r3, [r4, #40]	; 0x28
   16b04:	orrne	r5, r5, #128	; 0x80
   16b08:	ldr	r0, [r4]
   16b0c:	mov	r2, r1
   16b10:	str	r3, [sp]
   16b14:	mov	r1, r4
   16b18:	mov	r3, r5
   16b1c:	bl	15934 <argp_failure@@Base+0x208>
   16b20:	ldr	r3, [r4, #16]
   16b24:	tst	r3, #32
   16b28:	bne	16b3c <argp_state_help@@Base+0x68>
   16b2c:	ands	r0, r5, #256	; 0x100
   16b30:	bne	16b70 <argp_state_help@@Base+0x9c>
   16b34:	tst	r5, #512	; 0x200
   16b38:	bne	16b6c <argp_state_help@@Base+0x98>
   16b3c:	add	sp, sp, #12
   16b40:	pop	{r4, r5, pc}
   16b44:	cmp	r1, #0
   16b48:	beq	16b3c <argp_state_help@@Base+0x68>
   16b4c:	ldr	r3, [pc, #40]	; 16b7c <argp_state_help@@Base+0xa8>
   16b50:	mov	r2, r1
   16b54:	mov	r1, r4
   16b58:	ldr	ip, [r3]
   16b5c:	mov	r3, r5
   16b60:	str	ip, [sp]
   16b64:	bl	15934 <argp_failure@@Base+0x208>
   16b68:	b	16b2c <argp_state_help@@Base+0x58>
   16b6c:	bl	111b0 <exit@plt>
   16b70:	ldr	r3, [pc, #8]	; 16b80 <argp_state_help@@Base+0xac>
   16b74:	ldr	r0, [r3]
   16b78:	bl	111b0 <exit@plt>
   16b7c:	andeq	r9, r2, r8, lsr r2
   16b80:	andeq	r9, r2, r0, lsr r2

00016b84 <argp_error@@Base>:
   16b84:	push	{r1, r2, r3}
   16b88:	push	{r4, r5, lr}
   16b8c:	subs	r5, r0, #0
   16b90:	sub	sp, sp, #8
   16b94:	beq	16c64 <argp_error@@Base+0xe0>
   16b98:	ldr	r3, [r5, #16]
   16b9c:	tst	r3, #2
   16ba0:	bne	16c54 <argp_error@@Base+0xd0>
   16ba4:	ldr	r4, [r5, #44]	; 0x2c
   16ba8:	cmp	r4, #0
   16bac:	beq	16c54 <argp_error@@Base+0xd0>
   16bb0:	mov	r0, r4
   16bb4:	bl	11294 <flockfile@plt>
   16bb8:	ldr	r0, [r5, #40]	; 0x28
   16bbc:	add	r3, sp, #24
   16bc0:	str	r3, [sp, #4]
   16bc4:	mov	r1, r4
   16bc8:	bl	10fe8 <fputs_unlocked@plt>
   16bcc:	ldr	r3, [r4, #20]
   16bd0:	ldr	r2, [r4, #24]
   16bd4:	cmp	r3, r2
   16bd8:	addcc	r1, r3, #1
   16bdc:	movcc	r2, #58	; 0x3a
   16be0:	strcc	r1, [r4, #20]
   16be4:	strbcc	r2, [r3]
   16be8:	bcs	16cb0 <argp_error@@Base+0x12c>
   16bec:	ldr	r3, [r4, #20]
   16bf0:	ldr	r2, [r4, #24]
   16bf4:	cmp	r3, r2
   16bf8:	addcc	r1, r3, #1
   16bfc:	movcc	r2, #32
   16c00:	strcc	r1, [r4, #20]
   16c04:	strbcc	r2, [r3]
   16c08:	bcs	16ca0 <argp_error@@Base+0x11c>
   16c0c:	ldr	r1, [sp, #20]
   16c10:	ldr	r2, [sp, #4]
   16c14:	mov	r0, r4
   16c18:	bl	11270 <vfprintf@plt>
   16c1c:	ldr	r3, [r4, #20]
   16c20:	ldr	r2, [r4, #24]
   16c24:	cmp	r3, r2
   16c28:	addcc	r1, r3, #1
   16c2c:	movcc	r2, #10
   16c30:	strcc	r1, [r4, #20]
   16c34:	strbcc	r2, [r3]
   16c38:	bcs	16c90 <argp_error@@Base+0x10c>
   16c3c:	mov	r0, r5
   16c40:	mov	r2, #260	; 0x104
   16c44:	mov	r1, r4
   16c48:	bl	16ad4 <argp_state_help@@Base>
   16c4c:	mov	r0, r4
   16c50:	bl	110d8 <funlockfile@plt>
   16c54:	add	sp, sp, #8
   16c58:	pop	{r4, r5, lr}
   16c5c:	add	sp, sp, #12
   16c60:	bx	lr
   16c64:	ldr	r3, [pc, #84]	; 16cc0 <argp_error@@Base+0x13c>
   16c68:	ldr	r4, [r3]
   16c6c:	cmp	r4, #0
   16c70:	beq	16c54 <argp_error@@Base+0xd0>
   16c74:	mov	r0, r4
   16c78:	bl	11294 <flockfile@plt>
   16c7c:	ldr	r2, [pc, #64]	; 16cc4 <argp_error@@Base+0x140>
   16c80:	add	r3, sp, #24
   16c84:	str	r3, [sp, #4]
   16c88:	ldr	r0, [r2]
   16c8c:	b	16bc4 <argp_error@@Base+0x40>
   16c90:	mov	r1, #10
   16c94:	mov	r0, r4
   16c98:	bl	11240 <__overflow@plt>
   16c9c:	b	16c3c <argp_error@@Base+0xb8>
   16ca0:	mov	r1, #32
   16ca4:	mov	r0, r4
   16ca8:	bl	11240 <__overflow@plt>
   16cac:	b	16c0c <argp_error@@Base+0x88>
   16cb0:	mov	r1, #58	; 0x3a
   16cb4:	mov	r0, r4
   16cb8:	bl	11240 <__overflow@plt>
   16cbc:	b	16bec <argp_error@@Base+0x68>
   16cc0:	andeq	r9, r2, r0, asr #4
   16cc4:	andeq	r9, r2, r8, lsr r2
   16cc8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16ccc:	ldr	r4, [r1, #32]
   16cd0:	ldr	r8, [r1, #28]
   16cd4:	ldr	r7, [r1]
   16cd8:	add	r6, r0, r4, lsl #2
   16cdc:	mov	r2, r8
   16ce0:	mov	r5, r7
   16ce4:	cmp	r5, r4
   16ce8:	movle	r3, #0
   16cec:	movgt	r3, #1
   16cf0:	cmp	r2, r4
   16cf4:	movge	r3, #0
   16cf8:	cmp	r3, #0
   16cfc:	beq	16d70 <argp_error@@Base+0x1ec>
   16d00:	sub	r3, r5, r4
   16d04:	sub	sl, r4, r2
   16d08:	cmp	r3, sl
   16d0c:	ble	16d40 <argp_error@@Base+0x1bc>
   16d10:	sub	r5, r5, sl
   16d14:	add	sl, sl, r2
   16d18:	add	ip, r0, r5, lsl #2
   16d1c:	add	sl, r0, sl, lsl #2
   16d20:	add	r3, r0, r2, lsl #2
   16d24:	ldr	r9, [ip]
   16d28:	ldr	lr, [r3]
   16d2c:	str	r9, [r3], #4
   16d30:	cmp	sl, r3
   16d34:	str	lr, [ip], #4
   16d38:	bne	16d24 <argp_error@@Base+0x1a0>
   16d3c:	b	16ce4 <argp_error@@Base+0x160>
   16d40:	add	sl, r3, r2
   16d44:	add	r3, r0, r2, lsl #2
   16d48:	add	r9, r0, sl, lsl #2
   16d4c:	mov	r2, r6
   16d50:	ldr	lr, [r2]
   16d54:	ldr	ip, [r3]
   16d58:	str	lr, [r3], #4
   16d5c:	cmp	r3, r9
   16d60:	str	ip, [r2], #4
   16d64:	bne	16d50 <argp_error@@Base+0x1cc>
   16d68:	mov	r2, sl
   16d6c:	b	16ce4 <argp_error@@Base+0x160>
   16d70:	sub	r4, r7, r4
   16d74:	add	r8, r4, r8
   16d78:	str	r8, [r1, #28]
   16d7c:	str	r7, [r1, #32]
   16d80:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16d84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16d88:	sub	sp, sp, #44	; 0x2c
   16d8c:	str	r1, [sp, #20]
   16d90:	ldr	r1, [sp, #88]	; 0x58
   16d94:	str	r0, [sp, #24]
   16d98:	str	r2, [sp, #28]
   16d9c:	ldr	r8, [r1, #20]
   16da0:	str	r3, [sp, #12]
   16da4:	mov	r7, r8
   16da8:	ldrb	r5, [r8]
   16dac:	cmp	r5, #61	; 0x3d
   16db0:	cmpne	r5, #0
   16db4:	movne	r5, #1
   16db8:	moveq	r5, #0
   16dbc:	beq	16dd4 <argp_error@@Base+0x250>
   16dc0:	ldrb	r3, [r7, #1]!
   16dc4:	cmp	r3, #0
   16dc8:	cmpne	r3, #61	; 0x3d
   16dcc:	bne	16dc0 <argp_error@@Base+0x23c>
   16dd0:	sub	r5, r7, r8
   16dd4:	ldr	r3, [sp, #12]
   16dd8:	ldr	sl, [r3]
   16ddc:	cmp	sl, #0
   16de0:	beq	17094 <argp_error@@Base+0x510>
   16de4:	mov	fp, r3
   16de8:	mov	r4, sl
   16dec:	mov	r6, #0
   16df0:	mov	r2, r5
   16df4:	mov	r1, r8
   16df8:	mov	r0, r4
   16dfc:	bl	112b8 <strncmp@plt>
   16e00:	mov	r9, fp
   16e04:	cmp	r0, #0
   16e08:	mov	r0, r4
   16e0c:	bne	16e1c <argp_error@@Base+0x298>
   16e10:	bl	111bc <strlen@plt>
   16e14:	cmp	r0, r5
   16e18:	beq	16ea8 <argp_error@@Base+0x324>
   16e1c:	ldr	r4, [fp, #16]!
   16e20:	add	r6, r6, #1
   16e24:	cmp	r4, #0
   16e28:	bne	16df0 <argp_error@@Base+0x26c>
   16e2c:	ldr	r3, [sp, #12]
   16e30:	ldr	fp, [sp, #88]	; 0x58
   16e34:	mov	r0, sl
   16e38:	mov	r1, r8
   16e3c:	mov	r9, r4
   16e40:	mov	sl, r4
   16e44:	mov	r8, r3
   16e48:	mvn	r2, #0
   16e4c:	str	r4, [sp, #36]	; 0x24
   16e50:	str	r4, [sp, #16]
   16e54:	str	r2, [sp, #32]
   16e58:	mov	r2, r5
   16e5c:	bl	112b8 <strncmp@plt>
   16e60:	cmp	r0, #0
   16e64:	bne	16e84 <argp_error@@Base+0x300>
   16e68:	cmp	r9, #0
   16e6c:	beq	17104 <argp_error@@Base+0x580>
   16e70:	ldr	r3, [sp, #84]	; 0x54
   16e74:	cmp	r3, #0
   16e78:	beq	16f4c <argp_error@@Base+0x3c8>
   16e7c:	cmp	r4, #0
   16e80:	beq	16f80 <argp_error@@Base+0x3fc>
   16e84:	ldr	r0, [r8, #16]!
   16e88:	add	sl, sl, #1
   16e8c:	cmp	r0, #0
   16e90:	beq	16fb4 <argp_error@@Base+0x430>
   16e94:	ldr	r1, [fp, #20]
   16e98:	b	16e58 <argp_error@@Base+0x2d4>
   16e9c:	cmp	r9, #0
   16ea0:	beq	17094 <argp_error@@Base+0x510>
   16ea4:	ldr	r6, [sp, #32]
   16ea8:	ldr	r3, [sp, #88]	; 0x58
   16eac:	ldr	r0, [sp, #88]	; 0x58
   16eb0:	mov	r1, #0
   16eb4:	ldr	r2, [r3]
   16eb8:	str	r1, [r0, #20]
   16ebc:	add	r3, r2, #1
   16ec0:	str	r3, [r0]
   16ec4:	ldrb	r1, [r7]
   16ec8:	cmp	r1, #0
   16ecc:	bne	16f0c <argp_error@@Base+0x388>
   16ed0:	ldr	r1, [r9, #4]
   16ed4:	cmp	r1, #1
   16ed8:	beq	17110 <argp_error@@Base+0x58c>
   16edc:	ldr	r3, [sp, #80]	; 0x50
   16ee0:	ldr	r2, [r9, #8]
   16ee4:	cmp	r3, #0
   16ee8:	strne	r6, [r3]
   16eec:	cmp	r2, #0
   16ef0:	movne	r3, #0
   16ef4:	ldreq	r3, [r9, #12]
   16ef8:	ldrne	r1, [r9, #12]
   16efc:	strne	r1, [r2]
   16f00:	mov	r0, r3
   16f04:	add	sp, sp, #44	; 0x2c
   16f08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16f0c:	ldr	r3, [r9, #4]
   16f10:	cmp	r3, #0
   16f14:	movne	r3, r0
   16f18:	addne	r7, r7, #1
   16f1c:	strne	r7, [r3, #12]
   16f20:	bne	16edc <argp_error@@Base+0x358>
   16f24:	ldr	r3, [sp, #92]	; 0x5c
   16f28:	cmp	r3, #0
   16f2c:	bne	1705c <argp_error@@Base+0x4d8>
   16f30:	ldr	r1, [sp, #88]	; 0x58
   16f34:	ldr	r2, [r9, #12]
   16f38:	mov	r3, #63	; 0x3f
   16f3c:	str	r2, [r1, #8]
   16f40:	mov	r0, r3
   16f44:	add	sp, sp, #44	; 0x2c
   16f48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16f4c:	ldr	r2, [r9, #4]
   16f50:	ldr	r3, [r8, #4]
   16f54:	cmp	r2, r3
   16f58:	bne	16e7c <argp_error@@Base+0x2f8>
   16f5c:	ldr	r2, [r9, #8]
   16f60:	ldr	r3, [r8, #8]
   16f64:	cmp	r2, r3
   16f68:	bne	16e7c <argp_error@@Base+0x2f8>
   16f6c:	ldr	r2, [r9, #12]
   16f70:	ldr	r3, [r8, #12]
   16f74:	cmp	r2, r3
   16f78:	bne	16e7c <argp_error@@Base+0x2f8>
   16f7c:	b	16e84 <argp_error@@Base+0x300>
   16f80:	ldr	r3, [sp, #92]	; 0x5c
   16f84:	cmp	r3, #0
   16f88:	ldr	r3, [sp, #16]
   16f8c:	beq	1704c <argp_error@@Base+0x4c8>
   16f90:	cmp	r3, #0
   16f94:	beq	17268 <argp_error@@Base+0x6e4>
   16f98:	ldr	r3, [sp, #16]
   16f9c:	ldr	r0, [r8, #16]!
   16fa0:	mov	r2, #1
   16fa4:	cmp	r0, #0
   16fa8:	strb	r2, [r3, sl]
   16fac:	add	sl, sl, #1
   16fb0:	bne	16e94 <argp_error@@Base+0x310>
   16fb4:	ldr	r3, [sp, #16]
   16fb8:	cmp	r3, #0
   16fbc:	cmpeq	r4, #0
   16fc0:	beq	16e9c <argp_error@@Base+0x318>
   16fc4:	ldr	r3, [sp, #92]	; 0x5c
   16fc8:	cmp	r3, #0
   16fcc:	beq	1714c <argp_error@@Base+0x5c8>
   16fd0:	cmp	r4, #0
   16fd4:	bne	171d4 <argp_error@@Base+0x650>
   16fd8:	ldr	r5, [pc, #716]	; 172ac <argp_error@@Base+0x728>
   16fdc:	ldr	r8, [sp, #16]
   16fe0:	ldr	r7, [pc, #712]	; 172b0 <argp_error@@Base+0x72c>
   16fe4:	ldr	r0, [r5]
   16fe8:	bl	11294 <flockfile@plt>
   16fec:	ldr	r3, [sp, #20]
   16ff0:	ldr	r0, [r5]
   16ff4:	ldr	r1, [pc, #696]	; 172b4 <argp_error@@Base+0x730>
   16ff8:	ldr	r2, [r3]
   16ffc:	ldr	r3, [sp, #88]	; 0x58
   17000:	add	r6, r8, r6
   17004:	ldr	r3, [r3, #20]
   17008:	str	r3, [sp]
   1700c:	ldr	r3, [sp, #96]	; 0x60
   17010:	bl	111d4 <fprintf@plt>
   17014:	ldr	r9, [sp, #12]
   17018:	b	17028 <argp_error@@Base+0x4a4>
   1701c:	cmp	r8, r6
   17020:	add	r4, r4, #1
   17024:	beq	17138 <argp_error@@Base+0x5b4>
   17028:	ldrb	r3, [r8], #1
   1702c:	cmp	r3, #0
   17030:	beq	1701c <argp_error@@Base+0x498>
   17034:	ldr	r3, [r9, r4, lsl #4]
   17038:	ldr	r2, [sp, #96]	; 0x60
   1703c:	mov	r1, r7
   17040:	ldr	r0, [r5]
   17044:	bl	111d4 <fprintf@plt>
   17048:	b	1701c <argp_error@@Base+0x498>
   1704c:	cmp	r3, #0
   17050:	mov	r4, #1
   17054:	bne	16f98 <argp_error@@Base+0x414>
   17058:	b	16e84 <argp_error@@Base+0x300>
   1705c:	ldr	r3, [sp, #20]
   17060:	ldr	r1, [pc, #580]	; 172ac <argp_error@@Base+0x728>
   17064:	ldr	r2, [r3]
   17068:	ldr	r3, [r9]
   1706c:	ldr	r0, [r1]
   17070:	str	r3, [sp]
   17074:	ldr	r1, [pc, #572]	; 172b8 <argp_error@@Base+0x734>
   17078:	ldr	r3, [sp, #96]	; 0x60
   1707c:	bl	111d4 <fprintf@plt>
   17080:	ldr	r1, [sp, #88]	; 0x58
   17084:	ldr	r2, [r9, #12]
   17088:	mov	r3, #63	; 0x3f
   1708c:	str	r2, [r1, #8]
   17090:	b	16f40 <argp_error@@Base+0x3bc>
   17094:	ldr	r3, [sp, #84]	; 0x54
   17098:	cmp	r3, #0
   1709c:	bne	17228 <argp_error@@Base+0x6a4>
   170a0:	ldr	r3, [sp, #92]	; 0x5c
   170a4:	cmp	r3, #0
   170a8:	beq	170d4 <argp_error@@Base+0x550>
   170ac:	ldr	r3, [sp, #20]
   170b0:	ldr	r1, [pc, #500]	; 172ac <argp_error@@Base+0x728>
   170b4:	ldr	r2, [r3]
   170b8:	ldr	r3, [sp, #88]	; 0x58
   170bc:	ldr	r0, [r1]
   170c0:	ldr	r1, [pc, #500]	; 172bc <argp_error@@Base+0x738>
   170c4:	ldr	r3, [r3, #20]
   170c8:	str	r3, [sp]
   170cc:	ldr	r3, [sp, #96]	; 0x60
   170d0:	bl	111d4 <fprintf@plt>
   170d4:	ldr	r3, [sp, #88]	; 0x58
   170d8:	ldr	r1, [sp, #88]	; 0x58
   170dc:	mov	r2, #0
   170e0:	ldr	r3, [r3]
   170e4:	str	r2, [r1, #20]
   170e8:	add	r3, r3, #1
   170ec:	str	r3, [r1]
   170f0:	mov	r3, #63	; 0x3f
   170f4:	mov	r0, r3
   170f8:	str	r2, [r1, #8]
   170fc:	add	sp, sp, #44	; 0x2c
   17100:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17104:	str	sl, [sp, #32]
   17108:	mov	r9, r8
   1710c:	b	16e84 <argp_error@@Base+0x300>
   17110:	ldr	r1, [sp, #24]
   17114:	cmp	r3, r1
   17118:	bge	171a4 <argp_error@@Base+0x620>
   1711c:	ldr	r1, [sp, #20]
   17120:	add	r2, r2, #2
   17124:	ldr	r3, [r1, r3, lsl #2]
   17128:	ldr	r1, [sp, #88]	; 0x58
   1712c:	str	r3, [r1, #12]
   17130:	str	r2, [r1]
   17134:	b	16edc <argp_error@@Base+0x358>
   17138:	ldr	r1, [r5]
   1713c:	mov	r0, #10
   17140:	bl	1127c <fputc@plt>
   17144:	ldr	r0, [r5]
   17148:	bl	110d8 <funlockfile@plt>
   1714c:	ldr	r3, [sp, #36]	; 0x24
   17150:	cmp	r3, #0
   17154:	beq	17160 <argp_error@@Base+0x5dc>
   17158:	ldr	r0, [sp, #16]
   1715c:	bl	1337c <argp_parse@@Base+0xe98>
   17160:	ldr	r3, [sp, #88]	; 0x58
   17164:	ldr	r4, [r3, #20]
   17168:	mov	r0, r4
   1716c:	bl	111bc <strlen@plt>
   17170:	ldr	r3, [sp, #88]	; 0x58
   17174:	ldr	r1, [sp, #88]	; 0x58
   17178:	mov	r2, #0
   1717c:	ldr	r3, [r3]
   17180:	str	r2, [r1, #8]
   17184:	add	r3, r3, #1
   17188:	str	r3, [r1]
   1718c:	mov	r3, #63	; 0x3f
   17190:	add	r0, r4, r0
   17194:	str	r0, [r1, #20]
   17198:	mov	r0, r3
   1719c:	add	sp, sp, #44	; 0x2c
   171a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   171a4:	ldr	r3, [sp, #92]	; 0x5c
   171a8:	cmp	r3, #0
   171ac:	bne	17200 <argp_error@@Base+0x67c>
   171b0:	ldr	r2, [sp, #88]	; 0x58
   171b4:	ldr	r3, [r9, #12]
   171b8:	str	r3, [r2, #8]
   171bc:	ldr	r3, [sp, #28]
   171c0:	ldrb	r3, [r3]
   171c4:	cmp	r3, #58	; 0x3a
   171c8:	movne	r3, #63	; 0x3f
   171cc:	moveq	r3, #58	; 0x3a
   171d0:	b	16f00 <argp_error@@Base+0x37c>
   171d4:	ldr	r3, [sp, #20]
   171d8:	ldr	r1, [pc, #204]	; 172ac <argp_error@@Base+0x728>
   171dc:	ldr	r2, [r3]
   171e0:	ldr	r3, [sp, #88]	; 0x58
   171e4:	ldr	r0, [r1]
   171e8:	ldr	r1, [pc, #208]	; 172c0 <argp_error@@Base+0x73c>
   171ec:	ldr	r3, [r3, #20]
   171f0:	str	r3, [sp]
   171f4:	ldr	r3, [sp, #96]	; 0x60
   171f8:	bl	111d4 <fprintf@plt>
   171fc:	b	1714c <argp_error@@Base+0x5c8>
   17200:	ldr	r3, [sp, #20]
   17204:	ldr	r1, [pc, #160]	; 172ac <argp_error@@Base+0x728>
   17208:	ldr	r2, [r3]
   1720c:	ldr	r3, [r9]
   17210:	ldr	r0, [r1]
   17214:	str	r3, [sp]
   17218:	ldr	r1, [pc, #164]	; 172c4 <argp_error@@Base+0x740>
   1721c:	ldr	r3, [sp, #96]	; 0x60
   17220:	bl	111d4 <fprintf@plt>
   17224:	b	171b0 <argp_error@@Base+0x62c>
   17228:	ldr	r3, [sp, #88]	; 0x58
   1722c:	ldr	r2, [sp, #20]
   17230:	ldr	r3, [r3]
   17234:	ldr	r3, [r2, r3, lsl #2]
   17238:	ldrb	r3, [r3, #1]
   1723c:	cmp	r3, #45	; 0x2d
   17240:	beq	170a0 <argp_error@@Base+0x51c>
   17244:	ldr	r3, [sp, #88]	; 0x58
   17248:	ldr	r0, [sp, #28]
   1724c:	ldr	r3, [r3, #20]
   17250:	ldrb	r1, [r3]
   17254:	bl	111c8 <strchr@plt>
   17258:	cmp	r0, #0
   1725c:	beq	170a0 <argp_error@@Base+0x51c>
   17260:	mvn	r3, #0
   17264:	b	16f00 <argp_error@@Base+0x37c>
   17268:	mov	r0, r6
   1726c:	bl	1395c <argp_parse@@Base+0x1478>
   17270:	subs	r3, r0, #0
   17274:	str	r3, [sp, #16]
   17278:	beq	172a4 <argp_error@@Base+0x720>
   1727c:	mov	r2, r6
   17280:	mov	r1, #0
   17284:	bl	11210 <memset@plt>
   17288:	mov	r3, #1
   1728c:	str	r3, [sp, #36]	; 0x24
   17290:	ldr	r2, [sp, #32]
   17294:	ldr	r3, [sp, #16]
   17298:	mov	r1, #1
   1729c:	strb	r1, [r3, r2]
   172a0:	b	16f98 <argp_error@@Base+0x414>
   172a4:	mov	r4, #1
   172a8:	b	16e84 <argp_error@@Base+0x300>
   172ac:	andeq	r9, r2, r0, asr #4
   172b0:	andeq	r8, r1, r8, ror #27
   172b4:			; <UNDEFINED> instruction: 0x00018db8
   172b8:	andeq	r8, r1, r0, lsl lr
   172bc:	strdeq	r8, [r1], -r0
   172c0:	muleq	r1, r8, sp
   172c4:	andeq	r8, r1, r0, asr #28
   172c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   172cc:	sub	sp, sp, #36	; 0x24
   172d0:	subs	r6, r0, #0
   172d4:	ldr	r4, [sp, #80]	; 0x50
   172d8:	ldr	r8, [r4, #4]
   172dc:	ble	174b8 <argp_error@@Base+0x934>
   172e0:	mov	sl, r3
   172e4:	ldr	r3, [r4]
   172e8:	mov	r7, r2
   172ec:	mov	r2, #0
   172f0:	cmp	r3, r2
   172f4:	mov	r9, r1
   172f8:	str	r2, [r4, #12]
   172fc:	beq	17540 <argp_error@@Base+0x9bc>
   17300:	ldr	r2, [r4, #16]
   17304:	cmp	r2, #0
   17308:	bne	174c4 <argp_error@@Base+0x940>
   1730c:	mov	r5, #0
   17310:	str	r3, [r4, #32]
   17314:	str	r3, [r4, #28]
   17318:	str	r5, [r4, #20]
   1731c:	ldrb	r3, [r7]
   17320:	cmp	r3, #45	; 0x2d
   17324:	moveq	r3, #2
   17328:	addeq	r7, r7, #1
   1732c:	streq	r3, [r4, #24]
   17330:	beq	17358 <argp_error@@Base+0x7d4>
   17334:	cmp	r3, #43	; 0x2b
   17338:	streq	r5, [r4, #24]
   1733c:	addeq	r7, r7, #1
   17340:	beq	17358 <argp_error@@Base+0x7d4>
   17344:	ldr	r3, [sp, #84]	; 0x54
   17348:	cmp	r3, #0
   1734c:	beq	175e0 <argp_error@@Base+0xa5c>
   17350:	mov	r3, #0
   17354:	str	r3, [r4, #24]
   17358:	mov	r3, #1
   1735c:	str	r3, [r4, #16]
   17360:	ldrb	r3, [r7]
   17364:	cmp	r3, #58	; 0x3a
   17368:	moveq	r8, #0
   1736c:	cmp	r5, #0
   17370:	beq	17424 <argp_error@@Base+0x8a0>
   17374:	ldrb	r3, [r5]
   17378:	cmp	r3, #0
   1737c:	beq	17424 <argp_error@@Base+0x8a0>
   17380:	add	r3, r5, #1
   17384:	str	r3, [r4, #20]
   17388:	ldrb	fp, [r5]
   1738c:	mov	r0, r7
   17390:	str	r3, [sp, #28]
   17394:	mov	r1, fp
   17398:	bl	111c8 <strchr@plt>
   1739c:	ldrb	r1, [r5, #1]
   173a0:	ldr	r3, [sp, #28]
   173a4:	cmp	r1, #0
   173a8:	ldreq	r1, [r4]
   173ac:	addeq	r1, r1, #1
   173b0:	streq	r1, [r4]
   173b4:	sub	r1, fp, #58	; 0x3a
   173b8:	mov	r2, r0
   173bc:	cmp	r2, #0
   173c0:	cmpne	r1, #1
   173c4:	mov	r0, fp
   173c8:	bls	17510 <argp_error@@Base+0x98c>
   173cc:	ldrb	r1, [r2]
   173d0:	cmp	r1, #87	; 0x57
   173d4:	ldrb	r1, [r2, #1]
   173d8:	beq	17664 <argp_error@@Base+0xae0>
   173dc:	cmp	r1, #58	; 0x3a
   173e0:	bne	17508 <argp_error@@Base+0x984>
   173e4:	ldrb	r2, [r2, #2]
   173e8:	cmp	r2, #58	; 0x3a
   173ec:	ldrb	r2, [r5, #1]
   173f0:	beq	176ec <argp_error@@Base+0xb68>
   173f4:	cmp	r2, #0
   173f8:	bne	176f8 <argp_error@@Base+0xb74>
   173fc:	ldr	r3, [r4]
   17400:	cmp	r6, r3
   17404:	beq	17798 <argp_error@@Base+0xc14>
   17408:	ldr	r2, [r9, r3, lsl #2]
   1740c:	add	r3, r3, #1
   17410:	str	r2, [r4, #12]
   17414:	str	r3, [r4]
   17418:	mov	r3, #0
   1741c:	str	r3, [r4, #20]
   17420:	b	17508 <argp_error@@Base+0x984>
   17424:	ldr	fp, [r4]
   17428:	ldr	r3, [r4, #32]
   1742c:	cmp	r3, fp
   17430:	ldr	r3, [r4, #28]
   17434:	strgt	fp, [r4, #32]
   17438:	cmp	fp, r3
   1743c:	ldr	r3, [r4, #24]
   17440:	strlt	fp, [r4, #28]
   17444:	cmp	r3, #1
   17448:	beq	17550 <argp_error@@Base+0x9cc>
   1744c:	cmp	r6, fp
   17450:	beq	175c8 <argp_error@@Base+0xa44>
   17454:	ldr	r3, [pc, #944]	; 1780c <argp_error@@Base+0xc88>
   17458:	ldr	r5, [r9, fp, lsl #2]
   1745c:	mov	r1, r3
   17460:	mov	r0, r5
   17464:	str	r3, [sp, #28]
   17468:	bl	10ff4 <strcmp@plt>
   1746c:	ldr	r3, [sp, #28]
   17470:	cmp	r0, #0
   17474:	bne	174e0 <argp_error@@Base+0x95c>
   17478:	ldr	r3, [r4, #28]
   1747c:	ldr	r2, [r4, #32]
   17480:	add	fp, fp, #1
   17484:	cmp	r3, r2
   17488:	str	fp, [r4]
   1748c:	beq	17658 <argp_error@@Base+0xad4>
   17490:	cmp	fp, r2
   17494:	beq	174a8 <argp_error@@Base+0x924>
   17498:	mov	r0, r9
   1749c:	mov	r1, r4
   174a0:	bl	16cc8 <argp_error@@Base+0x144>
   174a4:	ldr	r3, [r4, #28]
   174a8:	cmp	r3, r6
   174ac:	str	r6, [r4]
   174b0:	str	r6, [r4, #32]
   174b4:	strne	r3, [r4]
   174b8:	mvn	r0, #0
   174bc:	add	sp, sp, #36	; 0x24
   174c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   174c4:	ldrb	r3, [r7]
   174c8:	ldr	r5, [r4, #20]
   174cc:	sub	r2, r3, #43	; 0x2b
   174d0:	tst	r2, #253	; 0xfd
   174d4:	ldrbeq	r3, [r7, #1]
   174d8:	addeq	r7, r7, #1
   174dc:	b	17364 <argp_error@@Base+0x7e0>
   174e0:	ldrb	r2, [r5]
   174e4:	cmp	r2, #45	; 0x2d
   174e8:	beq	1760c <argp_error@@Base+0xa88>
   174ec:	ldr	r3, [r4, #24]
   174f0:	cmp	r3, #0
   174f4:	beq	174b8 <argp_error@@Base+0x934>
   174f8:	mov	r0, #1
   174fc:	add	fp, fp, #1
   17500:	str	fp, [r4]
   17504:	str	r5, [r4, #12]
   17508:	add	sp, sp, #36	; 0x24
   1750c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17510:	cmp	r8, #0
   17514:	beq	17530 <argp_error@@Base+0x9ac>
   17518:	ldr	r1, [pc, #752]	; 17810 <argp_error@@Base+0xc8c>
   1751c:	ldr	r2, [r9]
   17520:	mov	r3, fp
   17524:	ldr	r0, [r1]
   17528:	ldr	r1, [pc, #740]	; 17814 <argp_error@@Base+0xc90>
   1752c:	bl	111d4 <fprintf@plt>
   17530:	mov	r0, #63	; 0x3f
   17534:	str	fp, [r4, #8]
   17538:	add	sp, sp, #36	; 0x24
   1753c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17540:	mov	r2, #1
   17544:	mov	r3, r2
   17548:	str	r2, [r4]
   1754c:	b	1730c <argp_error@@Base+0x788>
   17550:	ldr	r2, [r4, #28]
   17554:	ldr	r3, [r4, #32]
   17558:	cmp	r2, r3
   1755c:	beq	176dc <argp_error@@Base+0xb58>
   17560:	cmp	fp, r3
   17564:	beq	17578 <argp_error@@Base+0x9f4>
   17568:	mov	r1, r4
   1756c:	mov	r0, r9
   17570:	bl	16cc8 <argp_error@@Base+0x144>
   17574:	ldr	r3, [r4]
   17578:	cmp	r6, r3
   1757c:	movle	fp, r3
   17580:	ble	175bc <argp_error@@Base+0xa38>
   17584:	add	r1, r9, r3, lsl #2
   17588:	b	1759c <argp_error@@Base+0xa18>
   1758c:	add	r3, r3, #1
   17590:	cmp	r6, r3
   17594:	str	r3, [r4]
   17598:	beq	17600 <argp_error@@Base+0xa7c>
   1759c:	ldr	r2, [r1], #4
   175a0:	ldrb	r0, [r2]
   175a4:	cmp	r0, #45	; 0x2d
   175a8:	bne	1758c <argp_error@@Base+0xa08>
   175ac:	ldrb	r2, [r2, #1]
   175b0:	cmp	r2, #0
   175b4:	beq	1758c <argp_error@@Base+0xa08>
   175b8:	ldr	fp, [r4]
   175bc:	str	r3, [r4, #32]
   175c0:	cmp	r6, fp
   175c4:	bne	17454 <argp_error@@Base+0x8d0>
   175c8:	ldr	r3, [r4, #28]
   175cc:	ldr	r6, [r4, #32]
   175d0:	mvn	r0, #0
   175d4:	cmp	r3, r6
   175d8:	strne	r3, [r4]
   175dc:	b	174bc <argp_error@@Base+0x938>
   175e0:	ldr	r0, [pc, #560]	; 17818 <argp_error@@Base+0xc94>
   175e4:	bl	1112c <getenv@plt>
   175e8:	ldr	r5, [r4, #20]
   175ec:	cmp	r0, #0
   175f0:	bne	17350 <argp_error@@Base+0x7cc>
   175f4:	mov	r3, #1
   175f8:	str	r3, [r4, #24]
   175fc:	b	17358 <argp_error@@Base+0x7d4>
   17600:	mov	fp, r6
   17604:	str	r3, [r4, #32]
   17608:	b	175c0 <argp_error@@Base+0xa3c>
   1760c:	ldrb	r1, [r5, #1]
   17610:	cmp	r1, #0
   17614:	beq	174ec <argp_error@@Base+0x968>
   17618:	cmp	sl, #0
   1761c:	beq	17650 <argp_error@@Base+0xacc>
   17620:	cmp	r1, #45	; 0x2d
   17624:	beq	1775c <argp_error@@Base+0xbd8>
   17628:	ldr	r3, [sp, #76]	; 0x4c
   1762c:	cmp	r3, #0
   17630:	beq	17650 <argp_error@@Base+0xacc>
   17634:	ldrb	r3, [r5, #2]
   17638:	cmp	r3, #0
   1763c:	bne	1770c <argp_error@@Base+0xb88>
   17640:	mov	r0, r7
   17644:	bl	111c8 <strchr@plt>
   17648:	cmp	r0, #0
   1764c:	beq	1770c <argp_error@@Base+0xb88>
   17650:	add	r5, r5, #1
   17654:	b	17380 <argp_error@@Base+0x7fc>
   17658:	mov	r3, fp
   1765c:	str	fp, [r4, #28]
   17660:	b	174a8 <argp_error@@Base+0x924>
   17664:	cmp	sl, #0
   17668:	sub	ip, r1, #59	; 0x3b
   1766c:	clz	ip, ip
   17670:	lsr	ip, ip, #5
   17674:	moveq	ip, #0
   17678:	cmp	ip, #0
   1767c:	beq	173dc <argp_error@@Base+0x858>
   17680:	ldrb	r2, [r5, #1]
   17684:	cmp	r2, #0
   17688:	bne	1769c <argp_error@@Base+0xb18>
   1768c:	ldr	r3, [r4]
   17690:	cmp	r6, r3
   17694:	ldrne	r3, [r9, r3, lsl #2]
   17698:	beq	177b8 <argp_error@@Base+0xc34>
   1769c:	str	r3, [r4, #20]
   176a0:	ldr	lr, [pc, #372]	; 1781c <argp_error@@Base+0xc98>
   176a4:	ldr	r3, [sp, #72]	; 0x48
   176a8:	mov	ip, #0
   176ac:	str	r3, [sp]
   176b0:	str	r8, [sp, #12]
   176b4:	str	r4, [sp, #8]
   176b8:	str	lr, [sp, #16]
   176bc:	mov	r3, sl
   176c0:	str	ip, [r4, #12]
   176c4:	mov	r2, r7
   176c8:	mov	r1, r9
   176cc:	mov	r0, r6
   176d0:	str	ip, [sp, #4]
   176d4:	bl	16d84 <argp_error@@Base+0x200>
   176d8:	b	17508 <argp_error@@Base+0x984>
   176dc:	cmp	fp, r3
   176e0:	movne	r3, fp
   176e4:	strne	fp, [r4, #28]
   176e8:	b	17578 <argp_error@@Base+0x9f4>
   176ec:	cmp	r2, #0
   176f0:	streq	r2, [r4, #12]
   176f4:	beq	17418 <argp_error@@Base+0x894>
   176f8:	ldr	r2, [r4]
   176fc:	str	r3, [r4, #12]
   17700:	add	r3, r2, #1
   17704:	str	r3, [r4]
   17708:	b	17418 <argp_error@@Base+0x894>
   1770c:	ldr	r2, [sp, #76]	; 0x4c
   17710:	add	r5, r5, #1
   17714:	str	r5, [r4, #20]
   17718:	ldr	r3, [pc, #256]	; 17820 <argp_error@@Base+0xc9c>
   1771c:	str	r2, [sp, #4]
   17720:	ldr	r2, [sp, #72]	; 0x48
   17724:	str	r3, [sp, #16]
   17728:	str	r2, [sp]
   1772c:	str	r8, [sp, #12]
   17730:	str	r4, [sp, #8]
   17734:	mov	r3, sl
   17738:	mov	r2, r7
   1773c:	mov	r1, r9
   17740:	mov	r0, r6
   17744:	bl	16d84 <argp_error@@Base+0x200>
   17748:	cmn	r0, #1
   1774c:	bne	17508 <argp_error@@Base+0x984>
   17750:	ldr	r3, [r4]
   17754:	ldr	r5, [r9, r3, lsl #2]
   17758:	b	17650 <argp_error@@Base+0xacc>
   1775c:	add	r5, r5, #2
   17760:	str	r5, [r4, #20]
   17764:	str	r3, [sp, #16]
   17768:	ldr	r3, [sp, #76]	; 0x4c
   1776c:	str	r8, [sp, #12]
   17770:	str	r3, [sp, #4]
   17774:	ldr	r3, [sp, #72]	; 0x48
   17778:	str	r4, [sp, #8]
   1777c:	str	r3, [sp]
   17780:	mov	r2, r7
   17784:	mov	r3, sl
   17788:	mov	r1, r9
   1778c:	mov	r0, r6
   17790:	bl	16d84 <argp_error@@Base+0x200>
   17794:	b	17508 <argp_error@@Base+0x984>
   17798:	cmp	r8, #0
   1779c:	bne	177f0 <argp_error@@Base+0xc6c>
   177a0:	str	fp, [r4, #8]
   177a4:	ldrb	r0, [r7]
   177a8:	cmp	r0, #58	; 0x3a
   177ac:	movne	r0, #63	; 0x3f
   177b0:	moveq	r0, #58	; 0x3a
   177b4:	b	17418 <argp_error@@Base+0x894>
   177b8:	cmp	r8, #0
   177bc:	beq	177d8 <argp_error@@Base+0xc54>
   177c0:	ldr	r1, [pc, #72]	; 17810 <argp_error@@Base+0xc8c>
   177c4:	ldr	r2, [r9]
   177c8:	mov	r3, fp
   177cc:	ldr	r0, [r1]
   177d0:	ldr	r1, [pc, #76]	; 17824 <argp_error@@Base+0xca0>
   177d4:	bl	111d4 <fprintf@plt>
   177d8:	str	fp, [r4, #8]
   177dc:	ldrb	r0, [r7]
   177e0:	cmp	r0, #58	; 0x3a
   177e4:	movne	r0, #63	; 0x3f
   177e8:	moveq	r0, #58	; 0x3a
   177ec:	b	17508 <argp_error@@Base+0x984>
   177f0:	ldr	r1, [pc, #24]	; 17810 <argp_error@@Base+0xc8c>
   177f4:	ldr	r2, [r9]
   177f8:	mov	r3, fp
   177fc:	ldr	r0, [r1]
   17800:	ldr	r1, [pc, #28]	; 17824 <argp_error@@Base+0xca0>
   17804:	bl	111d4 <fprintf@plt>
   17808:	b	177a0 <argp_error@@Base+0xc1c>
   1780c:	andeq	r8, r1, ip, asr #10
   17810:	andeq	r9, r2, r0, asr #4
   17814:	andeq	r8, r1, ip, ror lr
   17818:	andeq	r8, r1, r8, ror #28
   1781c:	andeq	r8, r1, r4, asr #29
   17820:	andeq	r8, r1, r8, ror lr
   17824:	muleq	r1, r8, lr
   17828:	push	{r4, r5, r6, lr}
   1782c:	sub	sp, sp, #16
   17830:	ldr	r5, [pc, #84]	; 1788c <argp_error@@Base+0xd08>
   17834:	ldr	ip, [sp, #32]
   17838:	ldr	r4, [pc, #80]	; 17890 <argp_error@@Base+0xd0c>
   1783c:	str	ip, [sp]
   17840:	ldr	ip, [sp, #40]	; 0x28
   17844:	ldr	r6, [sp, #36]	; 0x24
   17848:	ldr	lr, [r5]
   1784c:	str	ip, [sp, #12]
   17850:	ldr	ip, [r5, #4]
   17854:	str	r4, [sp, #8]
   17858:	str	r6, [sp, #4]
   1785c:	str	ip, [r4, #4]
   17860:	str	lr, [r4]
   17864:	bl	172c8 <argp_error@@Base+0x744>
   17868:	ldr	r3, [pc, #36]	; 17894 <argp_error@@Base+0xd10>
   1786c:	ldr	ip, [r4]
   17870:	ldr	r1, [r4, #8]
   17874:	ldr	r2, [r4, #12]
   17878:	str	ip, [r5]
   1787c:	str	r1, [r5, #8]
   17880:	str	r2, [r3]
   17884:	add	sp, sp, #16
   17888:	pop	{r4, r5, r6, pc}
   1788c:	andeq	r9, r2, r4, lsr #4
   17890:	andeq	r9, r2, r4, ror r2
   17894:	andeq	r9, r2, r4, lsr #5
   17898:	push	{lr}		; (str lr, [sp, #-4]!)
   1789c:	mov	r3, #0
   178a0:	sub	sp, sp, #20
   178a4:	mov	ip, #1
   178a8:	str	r3, [sp]
   178ac:	stmib	sp, {r3, ip}
   178b0:	bl	17828 <argp_error@@Base+0xca4>
   178b4:	add	sp, sp, #20
   178b8:	pop	{pc}		; (ldr pc, [sp], #4)
   178bc:	push	{r4, r5, r6, r7, r8, lr}
   178c0:	mov	r8, r0
   178c4:	mov	r0, #36	; 0x24
   178c8:	mov	r7, r1
   178cc:	mov	r6, r2
   178d0:	mov	r5, r3
   178d4:	bl	1395c <argp_parse@@Base+0x1478>
   178d8:	subs	r4, r0, #0
   178dc:	beq	17920 <argp_error@@Base+0xd9c>
   178e0:	mov	r0, #0
   178e4:	str	r5, [r4, #12]
   178e8:	str	r0, [r4, #20]
   178ec:	str	r0, [r4, #16]
   178f0:	str	r8, [r4]
   178f4:	str	r7, [r4, #4]
   178f8:	str	r6, [r4, #8]
   178fc:	mov	r0, #200	; 0xc8
   17900:	bl	1395c <argp_parse@@Base+0x1478>
   17904:	cmp	r0, #0
   17908:	addne	r3, r0, #200	; 0xc8
   1790c:	mov	r5, r0
   17910:	str	r0, [r4, #24]
   17914:	strne	r0, [r4, #28]
   17918:	strne	r3, [r4, #32]
   1791c:	beq	17928 <argp_error@@Base+0xda4>
   17920:	mov	r0, r4
   17924:	pop	{r4, r5, r6, r7, r8, pc}
   17928:	mov	r0, r4
   1792c:	bl	1337c <argp_parse@@Base+0xe98>
   17930:	mov	r4, r5
   17934:	b	17920 <argp_error@@Base+0xd9c>
   17938:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1793c:	mov	r7, r0
   17940:	ldr	r6, [r0, #24]
   17944:	ldr	r3, [r0, #16]
   17948:	ldr	fp, [r0, #28]
   1794c:	sub	sp, sp, #12
   17950:	add	r6, r6, r3
   17954:	mov	r9, #32
   17958:	cmp	r6, fp
   1795c:	bcs	17a38 <argp_error@@Base+0xeb4>
   17960:	ldr	r8, [r7, #20]
   17964:	cmp	r8, #0
   17968:	bne	179d8 <argp_error@@Base+0xe54>
   1796c:	ldr	r4, [r7, #4]
   17970:	cmp	r4, #0
   17974:	beq	17c7c <argp_error@@Base+0x10f8>
   17978:	ldr	r2, [r7, #32]
   1797c:	add	r3, fp, r4
   17980:	cmp	r2, r3
   17984:	bls	17998 <argp_error@@Base+0xe14>
   17988:	b	17dc4 <argp_error@@Base+0x1240>
   1798c:	add	r8, r8, #1
   17990:	cmp	r4, r8
   17994:	beq	179cc <argp_error@@Base+0xe48>
   17998:	ldr	r0, [r7]
   1799c:	ldr	r3, [r0, #20]
   179a0:	ldr	r2, [r0, #24]
   179a4:	add	r1, r3, #1
   179a8:	cmp	r3, r2
   179ac:	strcc	r1, [r0, #20]
   179b0:	strbcc	r9, [r3]
   179b4:	bcc	1798c <argp_error@@Base+0xe08>
   179b8:	mov	r1, r9
   179bc:	add	r8, r8, #1
   179c0:	bl	11240 <__overflow@plt>
   179c4:	cmp	r4, r8
   179c8:	bne	17998 <argp_error@@Base+0xe14>
   179cc:	ldr	fp, [r7, #28]
   179d0:	mov	r8, r4
   179d4:	str	r4, [r7, #20]
   179d8:	sub	sl, fp, r6
   179dc:	mov	r2, sl
   179e0:	mov	r1, #10
   179e4:	mov	r0, r6
   179e8:	bl	11228 <memchr@plt>
   179ec:	cmp	r8, #0
   179f0:	movlt	r8, #0
   179f4:	movlt	r3, r8
   179f8:	str	r6, [sp]
   179fc:	mov	r4, r0
   17a00:	strlt	r3, [r7, #20]
   17a04:	cmp	r4, #0
   17a08:	beq	17ca0 <argp_error@@Base+0x111c>
   17a0c:	sub	r2, r4, r6
   17a10:	ldr	r3, [r7, #8]
   17a14:	add	r2, r2, r8
   17a18:	cmp	r2, r3
   17a1c:	bge	17a4c <argp_error@@Base+0xec8>
   17a20:	ldr	fp, [r7, #28]
   17a24:	add	r6, r4, #1
   17a28:	mov	r3, #0
   17a2c:	cmp	r6, fp
   17a30:	str	r3, [r7, #20]
   17a34:	bcc	17960 <argp_error@@Base+0xddc>
   17a38:	ldr	r3, [r7, #24]
   17a3c:	sub	r3, fp, r3
   17a40:	str	r3, [r7, #16]
   17a44:	add	sp, sp, #12
   17a48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17a4c:	ldr	r2, [r7, #12]
   17a50:	sub	r5, r3, #1
   17a54:	cmp	r2, #0
   17a58:	str	r2, [sp, #4]
   17a5c:	blt	17d58 <argp_error@@Base+0x11d4>
   17a60:	add	r5, r5, #1
   17a64:	sub	r8, r5, r8
   17a68:	adds	r8, r6, r8
   17a6c:	bcs	17cd8 <argp_error@@Base+0x1154>
   17a70:	bl	111a4 <__ctype_b_loc@plt>
   17a74:	mov	r3, r8
   17a78:	ldr	r0, [r0]
   17a7c:	b	17a88 <argp_error@@Base+0xf04>
   17a80:	cmp	r3, r6
   17a84:	bcc	17cdc <argp_error@@Base+0x1158>
   17a88:	mov	r1, r3
   17a8c:	sub	r3, r3, #1
   17a90:	ldrb	r2, [r1]
   17a94:	mov	r5, r3
   17a98:	lsl	r2, r2, #1
   17a9c:	ldrh	r2, [r0, r2]
   17aa0:	tst	r2, #1
   17aa4:	beq	17a80 <argp_error@@Base+0xefc>
   17aa8:	add	r5, r1, #1
   17aac:	cmp	r5, r6
   17ab0:	bls	17cf0 <argp_error@@Base+0x116c>
   17ab4:	cmp	r1, r6
   17ab8:	bcc	17ce8 <argp_error@@Base+0x1164>
   17abc:	mov	r1, r3
   17ac0:	sub	r8, r6, #1
   17ac4:	b	17ae0 <argp_error@@Base+0xf5c>
   17ac8:	ldrb	r3, [r1]
   17acc:	sub	r1, r1, #1
   17ad0:	lsl	r3, r3, #1
   17ad4:	ldrh	r3, [r0, r3]
   17ad8:	tst	r3, #1
   17adc:	beq	17e08 <argp_error@@Base+0x1284>
   17ae0:	cmp	r8, r1
   17ae4:	mov	r2, r1
   17ae8:	bne	17ac8 <argp_error@@Base+0xf44>
   17aec:	add	r8, r8, #1
   17af0:	add	r3, sl, #1
   17af4:	add	r3, r6, r3
   17af8:	cmp	r5, r3
   17afc:	beq	17be4 <argp_error@@Base+0x1060>
   17b00:	add	r3, r8, #1
   17b04:	ldr	r1, [sp, #4]
   17b08:	sub	r2, r5, r3
   17b0c:	cmp	r2, r1
   17b10:	bge	17c00 <argp_error@@Base+0x107c>
   17b14:	cmp	r5, fp
   17b18:	bcs	17bf8 <argp_error@@Base+0x1074>
   17b1c:	ldr	r3, [r7, #32]
   17b20:	ldr	r2, [sp, #4]
   17b24:	sub	r3, r3, fp
   17b28:	add	r0, r2, #1
   17b2c:	cmp	r3, r0
   17b30:	bgt	17e38 <argp_error@@Base+0x12b4>
   17b34:	ldr	r0, [r7, #24]
   17b38:	cmp	r8, r0
   17b3c:	bls	17b50 <argp_error@@Base+0xfcc>
   17b40:	sub	r2, r8, r0
   17b44:	ldr	r3, [r7]
   17b48:	mov	r1, #1
   17b4c:	bl	1109c <fwrite_unlocked@plt>
   17b50:	ldr	r0, [r7]
   17b54:	ldr	r2, [r0, #24]
   17b58:	ldr	r3, [r0, #20]
   17b5c:	cmp	r3, r2
   17b60:	addcc	r2, r3, #1
   17b64:	strcc	r2, [r0, #20]
   17b68:	movcc	r2, #10
   17b6c:	strbcc	r2, [r3]
   17b70:	bcs	17e78 <argp_error@@Base+0x12f4>
   17b74:	ldr	r6, [r7, #24]
   17b78:	ldr	r3, [sp]
   17b7c:	sub	r2, r5, r6
   17b80:	sub	r3, r3, r6
   17b84:	add	sl, sl, r3
   17b88:	mov	fp, r2
   17b8c:	mov	r4, r6
   17b90:	ldr	r3, [r7, #12]
   17b94:	cmp	r3, r2
   17b98:	bgt	17c20 <argp_error@@Base+0x109c>
   17b9c:	cmp	r3, #0
   17ba0:	movgt	r2, r6
   17ba4:	ble	17bc0 <argp_error@@Base+0x103c>
   17ba8:	strb	r9, [r2], #1
   17bac:	ldr	r3, [r7, #12]
   17bb0:	sub	r1, r2, r6
   17bb4:	cmp	r3, r1
   17bb8:	bgt	17ba8 <argp_error@@Base+0x1024>
   17bbc:	mov	r6, r2
   17bc0:	cmp	r6, r5
   17bc4:	bcc	17da8 <argp_error@@Base+0x1224>
   17bc8:	sub	fp, sl, fp
   17bcc:	cmp	r3, #0
   17bd0:	add	fp, r6, fp
   17bd4:	mvneq	r3, #0
   17bd8:	str	fp, [r7, #28]
   17bdc:	str	r3, [r7, #20]
   17be0:	b	17958 <argp_error@@Base+0xdd4>
   17be4:	ldr	r3, [r7, #32]
   17be8:	ldr	r2, [sp, #4]
   17bec:	sub	r3, r3, r8
   17bf0:	cmp	r3, r2
   17bf4:	ble	17b14 <argp_error@@Base+0xf90>
   17bf8:	add	r3, r8, #1
   17bfc:	sub	r2, r5, r3
   17c00:	sub	fp, r5, r6
   17c04:	mov	r4, r6
   17c08:	mov	r6, r3
   17c0c:	mov	r3, #10
   17c10:	strb	r3, [r8]
   17c14:	ldr	r3, [r7, #12]
   17c18:	cmp	r3, r2
   17c1c:	ble	17b9c <argp_error@@Base+0x1018>
   17c20:	add	r2, sl, #1
   17c24:	add	r2, r4, r2
   17c28:	cmp	r5, r2
   17c2c:	beq	17e24 <argp_error@@Base+0x12a0>
   17c30:	cmp	r3, #0
   17c34:	movgt	r8, #0
   17c38:	bgt	17c50 <argp_error@@Base+0x10cc>
   17c3c:	b	17bc0 <argp_error@@Base+0x103c>
   17c40:	ldr	r3, [r7, #12]
   17c44:	add	r8, r8, #1
   17c48:	cmp	r3, r8
   17c4c:	ble	17bc0 <argp_error@@Base+0x103c>
   17c50:	ldr	r0, [r7]
   17c54:	ldr	r3, [r0, #20]
   17c58:	ldr	r2, [r0, #24]
   17c5c:	add	r1, r3, #1
   17c60:	cmp	r3, r2
   17c64:	strcc	r1, [r0, #20]
   17c68:	strbcc	r9, [r3]
   17c6c:	bcc	17c40 <argp_error@@Base+0x10bc>
   17c70:	mov	r1, r9
   17c74:	bl	11240 <__overflow@plt>
   17c78:	b	17c40 <argp_error@@Base+0x10bc>
   17c7c:	sub	sl, fp, r6
   17c80:	mov	r2, sl
   17c84:	mov	r1, #10
   17c88:	mov	r0, r6
   17c8c:	bl	11228 <memchr@plt>
   17c90:	str	r6, [sp]
   17c94:	mov	r4, r0
   17c98:	cmp	r4, #0
   17c9c:	bne	17a0c <argp_error@@Base+0xe88>
   17ca0:	ldr	r5, [r7, #8]
   17ca4:	add	r3, r8, sl
   17ca8:	cmp	r3, r5
   17cac:	bcc	17e9c <argp_error@@Base+0x1318>
   17cb0:	ldr	r2, [r7, #12]
   17cb4:	sub	r5, r5, #1
   17cb8:	cmp	r2, #0
   17cbc:	str	r2, [sp, #4]
   17cc0:	blt	17e88 <argp_error@@Base+0x1304>
   17cc4:	add	r5, r5, #1
   17cc8:	sub	r8, r5, r8
   17ccc:	adds	r8, r6, r8
   17cd0:	mov	r4, fp
   17cd4:	bcc	17a70 <argp_error@@Base+0xeec>
   17cd8:	mov	r5, r8
   17cdc:	add	r5, r5, #1
   17ce0:	cmp	r5, r6
   17ce4:	bls	17cf0 <argp_error@@Base+0x116c>
   17ce8:	mov	r8, r5
   17cec:	b	17af0 <argp_error@@Base+0xf6c>
   17cf0:	cmp	r8, r4
   17cf4:	bcs	17d2c <argp_error@@Base+0x11a8>
   17cf8:	add	r5, r8, #1
   17cfc:	b	17d20 <argp_error@@Base+0x119c>
   17d00:	bl	111a4 <__ctype_b_loc@plt>
   17d04:	ldrb	r3, [r5]
   17d08:	add	r5, r5, #1
   17d0c:	lsl	r3, r3, #1
   17d10:	ldr	r2, [r0]
   17d14:	ldrh	r3, [r2, r3]
   17d18:	tst	r3, #1
   17d1c:	bne	17d3c <argp_error@@Base+0x11b8>
   17d20:	cmp	r5, r4
   17d24:	mov	r8, r5
   17d28:	bne	17d00 <argp_error@@Base+0x117c>
   17d2c:	cmp	r8, r4
   17d30:	beq	17e10 <argp_error@@Base+0x128c>
   17d34:	bl	111a4 <__ctype_b_loc@plt>
   17d38:	ldr	r2, [r0]
   17d3c:	mov	r5, r8
   17d40:	ldrb	r3, [r5, #1]!
   17d44:	lsl	r3, r3, #1
   17d48:	ldrh	r3, [r2, r3]
   17d4c:	tst	r3, #1
   17d50:	bne	17d40 <argp_error@@Base+0x11bc>
   17d54:	b	17af0 <argp_error@@Base+0xf6c>
   17d58:	cmp	r4, fp
   17d5c:	str	r3, [sp]
   17d60:	bcs	17e84 <argp_error@@Base+0x1300>
   17d64:	sub	r0, r5, r8
   17d68:	sub	r2, fp, r4
   17d6c:	add	r0, r6, r0
   17d70:	mov	r1, r4
   17d74:	bl	11054 <memmove@plt>
   17d78:	ldr	r2, [r7, #20]
   17d7c:	ldr	fp, [r7, #28]
   17d80:	sub	r5, r5, r2
   17d84:	add	r5, r6, r5
   17d88:	mov	r3, #0
   17d8c:	sub	r4, r5, r4
   17d90:	str	r3, [r7, #20]
   17d94:	ldr	r3, [sp]
   17d98:	sub	fp, fp, r4
   17d9c:	add	r6, r6, r3
   17da0:	str	fp, [r7, #28]
   17da4:	b	17958 <argp_error@@Base+0xdd4>
   17da8:	add	r2, r4, sl
   17dac:	sub	r2, r2, r5
   17db0:	mov	r1, r5
   17db4:	mov	r0, r6
   17db8:	bl	11054 <memmove@plt>
   17dbc:	ldr	r3, [r7, #12]
   17dc0:	b	17bc8 <argp_error@@Base+0x1044>
   17dc4:	add	r5, r6, r4
   17dc8:	sub	r2, fp, r6
   17dcc:	mov	r1, r6
   17dd0:	mov	r0, r5
   17dd4:	bl	11054 <memmove@plt>
   17dd8:	ldr	r3, [r7, #28]
   17ddc:	mov	r0, r6
   17de0:	add	r3, r3, r4
   17de4:	str	r3, [r7, #28]
   17de8:	mov	r2, r4
   17dec:	mov	r1, r9
   17df0:	bl	11210 <memset@plt>
   17df4:	mov	r6, r5
   17df8:	ldr	fp, [r7, #28]
   17dfc:	mov	r8, r4
   17e00:	str	r4, [r7, #20]
   17e04:	b	179d8 <argp_error@@Base+0xe54>
   17e08:	add	r8, r2, #1
   17e0c:	b	17af0 <argp_error@@Base+0xf6c>
   17e10:	mov	r3, #0
   17e14:	str	r3, [r7, #20]
   17e18:	add	r6, r8, #1
   17e1c:	ldr	fp, [r7, #28]
   17e20:	b	17958 <argp_error@@Base+0xdd4>
   17e24:	ldr	r2, [r7, #32]
   17e28:	sub	r2, r2, r5
   17e2c:	cmp	r3, r2
   17e30:	ble	17b9c <argp_error@@Base+0x1018>
   17e34:	b	17c30 <argp_error@@Base+0x10ac>
   17e38:	sub	fp, fp, r5
   17e3c:	mov	r2, fp
   17e40:	mov	r1, r5
   17e44:	add	r0, r8, r0
   17e48:	bl	11054 <memmove@plt>
   17e4c:	ldr	r2, [r7, #12]
   17e50:	mov	r3, #10
   17e54:	add	r5, r2, #1
   17e58:	add	r5, r8, r5
   17e5c:	add	fp, r5, fp
   17e60:	sub	sl, fp, r6
   17e64:	mov	r4, r6
   17e68:	sub	fp, r5, r6
   17e6c:	strb	r3, [r8]
   17e70:	add	r6, r8, #1
   17e74:	b	17b90 <argp_error@@Base+0x100c>
   17e78:	mov	r1, #10
   17e7c:	bl	11240 <__overflow@plt>
   17e80:	b	17b74 <argp_error@@Base+0xff0>
   17e84:	add	r3, r8, sl
   17e88:	sub	r5, r5, r3
   17e8c:	add	fp, fp, r5
   17e90:	str	fp, [r7, #28]
   17e94:	str	r3, [r7, #20]
   17e98:	b	17a38 <argp_error@@Base+0xeb4>
   17e9c:	str	r3, [r7, #20]
   17ea0:	ldr	fp, [r7, #28]
   17ea4:	b	17a38 <argp_error@@Base+0xeb4>
   17ea8:	push	{r4, lr}
   17eac:	mov	r4, r0
   17eb0:	bl	17938 <argp_error@@Base+0xdb4>
   17eb4:	ldr	r2, [r4, #28]
   17eb8:	ldr	r0, [r4, #24]
   17ebc:	cmp	r2, r0
   17ec0:	bls	17ed8 <argp_error@@Base+0x1354>
   17ec4:	sub	r2, r2, r0
   17ec8:	ldr	r3, [r4]
   17ecc:	mov	r1, #1
   17ed0:	bl	1109c <fwrite_unlocked@plt>
   17ed4:	ldr	r0, [r4, #24]
   17ed8:	bl	1337c <argp_parse@@Base+0xe98>
   17edc:	mov	r0, r4
   17ee0:	pop	{r4, lr}
   17ee4:	b	1337c <argp_parse@@Base+0xe98>
   17ee8:	push	{r4, r5, r6, lr}
   17eec:	mov	r4, r0
   17ef0:	mov	r5, r1
   17ef4:	bl	17938 <argp_error@@Base+0xdb4>
   17ef8:	ldr	r3, [r4, #24]
   17efc:	ldr	r2, [r4, #28]
   17f00:	mov	r0, r3
   17f04:	sub	r2, r2, r3
   17f08:	mov	r1, #1
   17f0c:	ldr	r3, [r4]
   17f10:	bl	1109c <fwrite_unlocked@plt>
   17f14:	ldr	r2, [r4, #28]
   17f18:	ldr	r3, [r4, #24]
   17f1c:	sub	r1, r2, r3
   17f20:	cmp	r0, r1
   17f24:	bne	17f68 <argp_error@@Base+0x13e4>
   17f28:	ldr	r1, [r4, #32]
   17f2c:	mov	r2, #0
   17f30:	sub	r1, r1, r3
   17f34:	cmp	r1, r5
   17f38:	str	r3, [r4, #28]
   17f3c:	str	r2, [r4, #16]
   17f40:	movcs	r3, #1
   17f44:	bcs	17f60 <argp_error@@Base+0x13dc>
   17f48:	adds	r5, r1, r5
   17f4c:	bcc	17f98 <argp_error@@Base+0x1414>
   17f50:	bl	111ec <__errno_location@plt>
   17f54:	mov	r3, #0
   17f58:	mov	r2, #12
   17f5c:	str	r2, [r0]
   17f60:	mov	r0, r3
   17f64:	pop	{r4, r5, r6, pc}
   17f68:	ldr	r1, [r4, #16]
   17f6c:	sub	r2, r2, r0
   17f70:	sub	r1, r1, r0
   17f74:	str	r2, [r4, #28]
   17f78:	str	r1, [r4, #16]
   17f7c:	sub	r2, r2, r3
   17f80:	add	r1, r3, r0
   17f84:	mov	r0, r3
   17f88:	bl	11054 <memmove@plt>
   17f8c:	mov	r3, #0
   17f90:	mov	r0, r3
   17f94:	pop	{r4, r5, r6, pc}
   17f98:	mov	r0, r3
   17f9c:	mov	r1, r5
   17fa0:	bl	18084 <argp_error@@Base+0x1500>
   17fa4:	cmp	r0, #0
   17fa8:	beq	17f50 <argp_error@@Base+0x13cc>
   17fac:	add	r1, r0, r5
   17fb0:	mov	r3, #1
   17fb4:	str	r0, [r4, #24]
   17fb8:	str	r0, [r4, #28]
   17fbc:	str	r1, [r4, #32]
   17fc0:	mov	r0, r3
   17fc4:	pop	{r4, r5, r6, pc}
   17fc8:	ldr	r3, [r0, #32]
   17fcc:	ldr	r2, [r0, #28]
   17fd0:	sub	r3, r3, r2
   17fd4:	cmp	r3, r1
   17fd8:	bcc	17fe4 <argp_error@@Base+0x1460>
   17fdc:	mov	r0, #1
   17fe0:	bx	lr
   17fe4:	b	17ee8 <argp_error@@Base+0x1364>
   17fe8:	push	{r1, r2, r3}
   17fec:	mov	r1, #150	; 0x96
   17ff0:	push	{r4, r5, r6, r7, lr}
   17ff4:	sub	sp, sp, #8
   17ff8:	mov	r5, r0
   17ffc:	ldr	r7, [sp, #28]
   18000:	add	r6, sp, #32
   18004:	ldr	r3, [r5, #32]
   18008:	ldr	r0, [r5, #28]
   1800c:	sub	r2, r3, r0
   18010:	cmp	r1, r2
   18014:	bhi	18058 <argp_error@@Base+0x14d4>
   18018:	sub	r4, r3, r0
   1801c:	mov	r1, r4
   18020:	mov	r3, r6
   18024:	mov	r2, r7
   18028:	str	r6, [sp, #4]
   1802c:	bl	112a0 <vsnprintf@plt>
   18030:	cmp	r4, r0
   18034:	addls	r1, r0, #1
   18038:	bls	18004 <argp_error@@Base+0x1480>
   1803c:	ldr	r3, [r5, #28]
   18040:	add	r3, r3, r0
   18044:	str	r3, [r5, #28]
   18048:	add	sp, sp, #8
   1804c:	pop	{r4, r5, r6, r7, lr}
   18050:	add	sp, sp, #12
   18054:	bx	lr
   18058:	mov	r0, r5
   1805c:	bl	17ee8 <argp_error@@Base+0x1364>
   18060:	cmp	r0, #0
   18064:	ldrne	r3, [r5, #32]
   18068:	ldrne	r0, [r5, #28]
   1806c:	bne	18018 <argp_error@@Base+0x1494>
   18070:	mvn	r0, #0
   18074:	add	sp, sp, #8
   18078:	pop	{r4, r5, r6, r7, lr}
   1807c:	add	sp, sp, #12
   18080:	bx	lr
   18084:	cmp	r0, #0
   18088:	beq	180ac <argp_error@@Base+0x1528>
   1808c:	cmp	r1, #0
   18090:	push	{lr}		; (str lr, [sp, #-4]!)
   18094:	sub	sp, sp, #12
   18098:	beq	180b4 <argp_error@@Base+0x1530>
   1809c:	blt	180cc <argp_error@@Base+0x1548>
   180a0:	add	sp, sp, #12
   180a4:	pop	{lr}		; (ldr lr, [sp], #4)
   180a8:	b	110c0 <realloc@plt>
   180ac:	mov	r0, r1
   180b0:	b	1395c <argp_parse@@Base+0x1478>
   180b4:	str	r1, [sp, #4]
   180b8:	bl	1337c <argp_parse@@Base+0xe98>
   180bc:	ldr	r3, [sp, #4]
   180c0:	mov	r0, r3
   180c4:	add	sp, sp, #12
   180c8:	pop	{pc}		; (ldr pc, [sp], #4)
   180cc:	bl	111ec <__errno_location@plt>
   180d0:	mov	r2, #12
   180d4:	mov	r3, #0
   180d8:	str	r2, [r0]
   180dc:	b	180c0 <argp_error@@Base+0x153c>
   180e0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   180e4:	mov	r7, r0
   180e8:	ldr	r6, [pc, #72]	; 18138 <argp_error@@Base+0x15b4>
   180ec:	ldr	r5, [pc, #72]	; 1813c <argp_error@@Base+0x15b8>
   180f0:	add	r6, pc, r6
   180f4:	add	r5, pc, r5
   180f8:	sub	r6, r6, r5
   180fc:	mov	r8, r1
   18100:	mov	r9, r2
   18104:	bl	10fc8 <fputs_unlocked@plt-0x20>
   18108:	asrs	r6, r6, #2
   1810c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   18110:	mov	r4, #0
   18114:	add	r4, r4, #1
   18118:	ldr	r3, [r5], #4
   1811c:	mov	r2, r9
   18120:	mov	r1, r8
   18124:	mov	r0, r7
   18128:	blx	r3
   1812c:	cmp	r6, r4
   18130:	bne	18114 <argp_error@@Base+0x1590>
   18134:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18138:	andeq	r0, r1, r0, lsl lr
   1813c:	andeq	r0, r1, r8, lsl #28
   18140:	bx	lr

Disassembly of section .fini:

00018144 <.fini>:
   18144:	push	{r3, lr}
   18148:	pop	{r3, pc}
