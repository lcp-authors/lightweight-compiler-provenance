
../repos/dvidelabs-flatcc-3b39ef7/test/reflection_test/reflection_test:     file format elf32-littlearm


Disassembly of section .init:

0001084c <.init>:
   1084c:	push	{r3, lr}
   10850:	bl	10974 <_start@@Base+0x3c>
   10854:	pop	{r3, pc}

Disassembly of section .plt:

00010858 <strcmp@plt-0x14>:
   10858:	push	{lr}		; (str lr, [sp, #-4]!)
   1085c:	ldr	lr, [pc, #4]	; 10868 <strcmp@plt-0x4>
   10860:	add	lr, pc, lr
   10864:	ldr	pc, [lr, #8]!
   10868:	muleq	r1, r8, r7

0001086c <strcmp@plt>:
   1086c:	add	ip, pc, #0, 12
   10870:	add	ip, ip, #69632	; 0x11000
   10874:	ldr	pc, [ip, #1944]!	; 0x798

00010878 <printf@plt>:
   10878:	add	ip, pc, #0, 12
   1087c:	add	ip, ip, #69632	; 0x11000
   10880:	ldr	pc, [ip, #1936]!	; 0x790

00010884 <fopen@plt>:
   10884:	add	ip, pc, #0, 12
   10888:	add	ip, ip, #69632	; 0x11000
   1088c:	ldr	pc, [ip, #1928]!	; 0x788

00010890 <free@plt>:
   10890:	add	ip, pc, #0, 12
   10894:	add	ip, ip, #69632	; 0x11000
   10898:	ldr	pc, [ip, #1920]!	; 0x780

0001089c <ftell@plt>:
   1089c:	add	ip, pc, #0, 12
   108a0:	add	ip, ip, #69632	; 0x11000
   108a4:	ldr	pc, [ip, #1912]!	; 0x778

000108a8 <rewind@plt>:
   108a8:	add	ip, pc, #0, 12
   108ac:	add	ip, ip, #69632	; 0x11000
   108b0:	ldr	pc, [ip, #1904]!	; 0x770

000108b4 <fwrite@plt>:
   108b4:	add	ip, pc, #0, 12
   108b8:	add	ip, ip, #69632	; 0x11000
   108bc:	ldr	pc, [ip, #1896]!	; 0x768

000108c0 <puts@plt>:
   108c0:	add	ip, pc, #0, 12
   108c4:	add	ip, ip, #69632	; 0x11000
   108c8:	ldr	pc, [ip, #1888]!	; 0x760

000108cc <malloc@plt>:
   108cc:	add	ip, pc, #0, 12
   108d0:	add	ip, ip, #69632	; 0x11000
   108d4:	ldr	pc, [ip, #1880]!	; 0x758

000108d8 <__libc_start_main@plt>:
   108d8:	add	ip, pc, #0, 12
   108dc:	add	ip, ip, #69632	; 0x11000
   108e0:	ldr	pc, [ip, #1872]!	; 0x750

000108e4 <__gmon_start__@plt>:
   108e4:	add	ip, pc, #0, 12
   108e8:	add	ip, ip, #69632	; 0x11000
   108ec:	ldr	pc, [ip, #1864]!	; 0x748

000108f0 <exit@plt>:
   108f0:	add	ip, pc, #0, 12
   108f4:	add	ip, ip, #69632	; 0x11000
   108f8:	ldr	pc, [ip, #1856]!	; 0x740

000108fc <fclose@plt>:
   108fc:	add	ip, pc, #0, 12
   10900:	add	ip, ip, #69632	; 0x11000
   10904:	ldr	pc, [ip, #1848]!	; 0x738

00010908 <fread_unlocked@plt>:
   10908:	add	ip, pc, #0, 12
   1090c:	add	ip, ip, #69632	; 0x11000
   10910:	ldr	pc, [ip, #1840]!	; 0x730

00010914 <fseek@plt>:
   10914:	add	ip, pc, #0, 12
   10918:	add	ip, ip, #69632	; 0x11000
   1091c:	ldr	pc, [ip, #1832]!	; 0x728

00010920 <abort@plt>:
   10920:	add	ip, pc, #0, 12
   10924:	add	ip, ip, #69632	; 0x11000
   10928:	ldr	pc, [ip, #1824]!	; 0x720

0001092c <__assert_fail@plt>:
   1092c:	add	ip, pc, #0, 12
   10930:	add	ip, ip, #69632	; 0x11000
   10934:	ldr	pc, [ip, #1816]!	; 0x718

Disassembly of section .text:

00010938 <_start@@Base>:
   10938:	mov	fp, #0
   1093c:	mov	lr, #0
   10940:	pop	{r1}		; (ldr r1, [sp], #4)
   10944:	mov	r2, sp
   10948:	push	{r2}		; (str r2, [sp, #-4]!)
   1094c:	push	{r0}		; (str r0, [sp, #-4]!)
   10950:	ldr	ip, [pc, #16]	; 10968 <_start@@Base+0x30>
   10954:	push	{ip}		; (str ip, [sp, #-4]!)
   10958:	ldr	r0, [pc, #12]	; 1096c <_start@@Base+0x34>
   1095c:	ldr	r3, [pc, #12]	; 10970 <_start@@Base+0x38>
   10960:	bl	108d8 <__libc_start_main@plt>
   10964:	bl	10920 <abort@plt>
   10968:	andeq	r1, r1, r8, ror #5
   1096c:	andeq	r1, r1, ip, lsl r2
   10970:	andeq	r1, r1, r8, lsl #5
   10974:	ldr	r3, [pc, #20]	; 10990 <_start@@Base+0x58>
   10978:	ldr	r2, [pc, #20]	; 10994 <_start@@Base+0x5c>
   1097c:	add	r3, pc, r3
   10980:	ldr	r2, [r3, r2]
   10984:	cmp	r2, #0
   10988:	bxeq	lr
   1098c:	b	108e4 <__gmon_start__@plt>
   10990:	andeq	r1, r1, ip, ror r6
   10994:	andeq	r0, r0, r0, asr r0
   10998:	ldr	r0, [pc, #24]	; 109b8 <_start@@Base+0x80>
   1099c:	ldr	r3, [pc, #24]	; 109bc <_start@@Base+0x84>
   109a0:	cmp	r3, r0
   109a4:	bxeq	lr
   109a8:	ldr	r3, [pc, #16]	; 109c0 <_start@@Base+0x88>
   109ac:	cmp	r3, #0
   109b0:	bxeq	lr
   109b4:	bx	r3
   109b8:	andeq	r2, r2, r0, rrx
   109bc:	andeq	r2, r2, r0, rrx
   109c0:	andeq	r0, r0, r0
   109c4:	ldr	r0, [pc, #36]	; 109f0 <_start@@Base+0xb8>
   109c8:	ldr	r1, [pc, #36]	; 109f4 <_start@@Base+0xbc>
   109cc:	sub	r1, r1, r0
   109d0:	asr	r1, r1, #2
   109d4:	add	r1, r1, r1, lsr #31
   109d8:	asrs	r1, r1, #1
   109dc:	bxeq	lr
   109e0:	ldr	r3, [pc, #16]	; 109f8 <_start@@Base+0xc0>
   109e4:	cmp	r3, #0
   109e8:	bxeq	lr
   109ec:	bx	r3
   109f0:	andeq	r2, r2, r0, rrx
   109f4:	andeq	r2, r2, r0, rrx
   109f8:	andeq	r0, r0, r0
   109fc:	push	{r4, lr}
   10a00:	ldr	r4, [pc, #24]	; 10a20 <_start@@Base+0xe8>
   10a04:	ldrb	r3, [r4]
   10a08:	cmp	r3, #0
   10a0c:	popne	{r4, pc}
   10a10:	bl	10998 <_start@@Base+0x60>
   10a14:	mov	r3, #1
   10a18:	strb	r3, [r4]
   10a1c:	pop	{r4, pc}
   10a20:	andeq	r2, r2, r4, rrx
   10a24:	b	109c4 <_start@@Base+0x8c>

00010a28 <test_schema@@Base>:
   10a28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10a2c:	add	fp, sp, #28
   10a30:	sub	sp, sp, #4
   10a34:	movw	r1, #5042	; 0x13b2
   10a38:	movt	r1, #1
   10a3c:	bl	10884 <fopen@plt>
   10a40:	cmp	r0, #0
   10a44:	beq	10c80 <test_schema@@Base+0x258>
   10a48:	mov	r1, #0
   10a4c:	mov	r2, #2
   10a50:	mov	r5, r0
   10a54:	bl	10914 <fseek@plt>
   10a58:	mov	r0, r5
   10a5c:	bl	1089c <ftell@plt>
   10a60:	mov	r6, r0
   10a64:	movw	r0, #10000	; 0x2710
   10a68:	cmp	r6, r0
   10a6c:	bhi	10c78 <test_schema@@Base+0x250>
   10a70:	mov	r0, r5
   10a74:	bl	108a8 <rewind@plt>
   10a78:	cmp	r6, #0
   10a7c:	mov	r0, r6
   10a80:	movweq	r0, #1
   10a84:	bl	108cc <malloc@plt>
   10a88:	cmp	r0, #0
   10a8c:	beq	10c78 <test_schema@@Base+0x250>
   10a90:	mov	r8, r0
   10a94:	mov	r1, #0
   10a98:	mov	r4, r1
   10a9c:	add	r0, r8, r1
   10aa0:	sub	r2, r6, r1
   10aa4:	mov	r1, #1
   10aa8:	mov	r3, r5
   10aac:	bl	10908 <fread_unlocked@plt>
   10ab0:	add	r1, r0, r4
   10ab4:	cmp	r0, #0
   10ab8:	bne	10a98 <test_schema@@Base+0x70>
   10abc:	mov	r0, r5
   10ac0:	bl	108fc <fclose@plt>
   10ac4:	cmp	r6, r4
   10ac8:	bne	10c9c <test_schema@@Base+0x274>
   10acc:	ldr	r0, [r8, #4]
   10ad0:	movw	r1, #17986	; 0x4642
   10ad4:	movt	r1, #21314	; 0x5342
   10ad8:	cmp	r0, r1
   10adc:	bne	1102c <test_schema@@Base+0x604>
   10ae0:	ldr	r1, [r8]
   10ae4:	mov	r0, r8
   10ae8:	ldr	r2, [r0, r1]!
   10aec:	mov	r1, r0
   10af0:	ldrh	r2, [r1, -r2]!	; <UNPREDICTABLE>
   10af4:	cmp	r2, #5
   10af8:	bls	11020 <test_schema@@Base+0x5f8>
   10afc:	ldrh	r1, [r1, #4]
   10b00:	cmp	r1, #0
   10b04:	beq	11020 <test_schema@@Base+0x5f8>
   10b08:	ldr	r1, [r0, r1]!
   10b0c:	ldr	r1, [r0, r1]!
   10b10:	cmp	r1, #0
   10b14:	beq	10c5c <test_schema@@Base+0x234>
   10b18:	movw	r6, #4856	; 0x12f8
   10b1c:	add	sl, r0, #4
   10b20:	mov	r5, #0
   10b24:	movt	r6, #1
   10b28:	mov	r7, sl
   10b2c:	ldr	r0, [r7]
   10b30:	ldr	r1, [r7, r0]
   10b34:	sub	r1, r0, r1
   10b38:	add	r1, r7, r1
   10b3c:	ldrh	r2, [r1]
   10b40:	cmp	r2, #6
   10b44:	bcc	10fe0 <test_schema@@Base+0x5b8>
   10b48:	ldrh	r1, [r1, #4]
   10b4c:	cmp	r1, #0
   10b50:	beq	10fe0 <test_schema@@Base+0x5b8>
   10b54:	add	r2, r0, r1
   10b58:	ldr	r2, [r7, r2]
   10b5c:	add	r0, r2, r0
   10b60:	add	r0, r0, r1
   10b64:	mov	r1, r5
   10b68:	add	r0, r7, r0
   10b6c:	add	r2, r0, #4
   10b70:	mov	r0, r6
   10b74:	bl	10878 <printf@plt>
   10b78:	ldr	r4, [sl, #-4]
   10b7c:	add	r5, r5, #1
   10b80:	add	r7, r7, #4
   10b84:	cmp	r5, r4
   10b88:	bcc	10b2c <test_schema@@Base+0x104>
   10b8c:	cmp	r4, #0
   10b90:	beq	10c5c <test_schema@@Base+0x234>
   10b94:	mov	r6, #0
   10b98:	subs	r5, r4, #1
   10b9c:	beq	10c14 <test_schema@@Base+0x1ec>
   10ba0:	movw	r9, #4875	; 0x130b
   10ba4:	movt	r9, #1
   10ba8:	sub	r0, r5, r6
   10bac:	add	r7, r6, r0, lsr #1
   10bb0:	cmp	r4, r7
   10bb4:	bls	11000 <test_schema@@Base+0x5d8>
   10bb8:	mov	r0, sl
   10bbc:	ldr	r1, [r0, r7, lsl #2]!
   10bc0:	ldr	r2, [r0, r1]!
   10bc4:	mov	r1, r0
   10bc8:	ldrh	r2, [r1, -r2]!	; <UNPREDICTABLE>
   10bcc:	cmp	r2, #6
   10bd0:	bcc	10fe0 <test_schema@@Base+0x5b8>
   10bd4:	ldrh	r1, [r1, #4]
   10bd8:	cmp	r1, #0
   10bdc:	beq	10fe0 <test_schema@@Base+0x5b8>
   10be0:	ldr	r1, [r0, r1]!
   10be4:	add	r0, r0, r1
   10be8:	mov	r1, r9
   10bec:	add	r0, r0, #4
   10bf0:	bl	1086c <strcmp@plt>
   10bf4:	cmp	r0, #0
   10bf8:	movpl	r5, r7
   10bfc:	addmi	r6, r7, #1
   10c00:	cmp	r5, r6
   10c04:	bhi	10ba8 <test_schema@@Base+0x180>
   10c08:	bne	10c5c <test_schema@@Base+0x234>
   10c0c:	cmp	r4, r6
   10c10:	bls	11000 <test_schema@@Base+0x5d8>
   10c14:	ldr	r0, [sl, r6, lsl #2]!
   10c18:	ldr	r0, [sl, r0]!
   10c1c:	mov	r5, sl
   10c20:	ldrh	r7, [r5, -r0]!
   10c24:	cmp	r7, #6
   10c28:	bcc	10fe0 <test_schema@@Base+0x5b8>
   10c2c:	ldrh	r0, [r5, #4]
   10c30:	cmp	r0, #0
   10c34:	beq	10fe0 <test_schema@@Base+0x5b8>
   10c38:	mov	r1, sl
   10c3c:	ldr	r0, [r1, r0]!
   10c40:	add	r0, r1, r0
   10c44:	movw	r1, #4875	; 0x130b
   10c48:	movt	r1, #1
   10c4c:	add	r0, r0, #4
   10c50:	bl	1086c <strcmp@plt>
   10c54:	cmp	r0, #0
   10c58:	beq	10ca8 <test_schema@@Base+0x280>
   10c5c:	movw	r0, #6222	; 0x184e
   10c60:	movt	r0, #1
   10c64:	bl	108c0 <puts@plt>
   10c68:	mvn	r5, #0
   10c6c:	mov	r0, r8
   10c70:	bl	10890 <free@plt>
   10c74:	b	10c90 <test_schema@@Base+0x268>
   10c78:	mov	r0, r5
   10c7c:	bl	108fc <fclose@plt>
   10c80:	movw	r0, #5872	; 0x16f0
   10c84:	movt	r0, #1
   10c88:	bl	108c0 <puts@plt>
   10c8c:	mvn	r5, #0
   10c90:	mov	r0, r5
   10c94:	sub	sp, fp, #28
   10c98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10c9c:	mov	r0, r8
   10ca0:	bl	10890 <free@plt>
   10ca4:	b	10c80 <test_schema@@Base+0x258>
   10ca8:	cmp	r4, r6
   10cac:	bls	11000 <test_schema@@Base+0x5d8>
   10cb0:	cmp	r7, #8
   10cb4:	bcc	1104c <test_schema@@Base+0x624>
   10cb8:	ldrh	r0, [r5, #6]
   10cbc:	cmp	r0, #0
   10cc0:	beq	1104c <test_schema@@Base+0x624>
   10cc4:	ldr	r0, [sl, r0]!
   10cc8:	movw	r1, #4898	; 0x1322
   10ccc:	movt	r1, #1
   10cd0:	add	r0, sl, r0
   10cd4:	add	r5, r0, #4
   10cd8:	mov	r0, r5
   10cdc:	bl	110ec <test_schema@@Base+0x6c4>
   10ce0:	cmn	r0, #1
   10ce4:	beq	10f68 <test_schema@@Base+0x540>
   10ce8:	ldr	r1, [r5, #-4]
   10cec:	cmp	r1, r0
   10cf0:	bls	1108c <test_schema@@Base+0x664>
   10cf4:	mov	r4, r5
   10cf8:	ldr	r0, [r4, r0, lsl #2]!
   10cfc:	ldr	r1, [r4, r0]!
   10d00:	mov	r0, r4
   10d04:	ldrh	r1, [r0, -r1]!	; <UNPREDICTABLE>
   10d08:	cmp	r1, #14
   10d0c:	bcc	10eec <test_schema@@Base+0x4c4>
   10d10:	ldrh	r1, [r0, #12]
   10d14:	cmp	r1, #0
   10d18:	beq	10eec <test_schema@@Base+0x4c4>
   10d1c:	mov	r2, r4
   10d20:	ldr	r1, [r2, r1]!
   10d24:	ldr	r2, [r2, #4]
   10d28:	eor	r1, r1, #150	; 0x96
   10d2c:	orrs	r1, r1, r2
   10d30:	bne	10eec <test_schema@@Base+0x4c4>
   10d34:	ldrh	r0, [r0, #6]
   10d38:	cmp	r0, #0
   10d3c:	beq	110ac <test_schema@@Base+0x684>
   10d40:	ldr	r0, [r4, r0]!
   10d44:	adds	r0, r4, r0
   10d48:	beq	110cc <test_schema@@Base+0x6a4>
   10d4c:	ldr	r2, [r0]
   10d50:	mov	r1, r0
   10d54:	ldrh	r2, [r1, -r2]!	; <UNPREDICTABLE>
   10d58:	cmp	r2, #6
   10d5c:	bcc	10f8c <test_schema@@Base+0x564>
   10d60:	ldrh	r1, [r1, #4]
   10d64:	cmp	r1, #0
   10d68:	beq	10f8c <test_schema@@Base+0x564>
   10d6c:	ldrb	r0, [r0, r1]
   10d70:	cmp	r0, #5
   10d74:	bne	10f8c <test_schema@@Base+0x564>
   10d78:	movw	r1, #4925	; 0x133d
   10d7c:	mov	r0, r5
   10d80:	movt	r1, #1
   10d84:	bl	110ec <test_schema@@Base+0x6c4>
   10d88:	cmn	r0, #1
   10d8c:	beq	10fa4 <test_schema@@Base+0x57c>
   10d90:	ldr	r1, [r5, #-4]
   10d94:	cmp	r1, r0
   10d98:	bls	1108c <test_schema@@Base+0x664>
   10d9c:	mov	r1, r5
   10da0:	ldr	r0, [r1, r0, lsl #2]!
   10da4:	ldr	r2, [r1, r0]!
   10da8:	mov	r0, r1
   10dac:	ldrh	r2, [r0, -r2]!	; <UNPREDICTABLE>
   10db0:	cmp	r2, #8
   10db4:	bcc	110ac <test_schema@@Base+0x684>
   10db8:	ldrh	r0, [r0, #6]
   10dbc:	cmp	r0, #0
   10dc0:	beq	110ac <test_schema@@Base+0x684>
   10dc4:	ldr	r0, [r1, r0]!
   10dc8:	adds	r0, r1, r0
   10dcc:	beq	110cc <test_schema@@Base+0x6a4>
   10dd0:	ldr	r2, [r0]
   10dd4:	mov	r1, r0
   10dd8:	ldrh	r2, [r1, -r2]!	; <UNPREDICTABLE>
   10ddc:	cmp	r2, #6
   10de0:	bcc	10f98 <test_schema@@Base+0x570>
   10de4:	ldrh	r3, [r1, #4]
   10de8:	cmp	r3, #0
   10dec:	beq	10f98 <test_schema@@Base+0x570>
   10df0:	ldrb	r3, [r0, r3]
   10df4:	cmp	r3, #15
   10df8:	bne	10f98 <test_schema@@Base+0x570>
   10dfc:	mvn	r3, #0
   10e00:	cmp	r2, #10
   10e04:	bcc	10e14 <test_schema@@Base+0x3ec>
   10e08:	ldrh	r1, [r1, #8]
   10e0c:	cmp	r1, #0
   10e10:	ldrne	r3, [r0, r1]
   10e14:	cmp	r3, r6
   10e18:	bne	10fb0 <test_schema@@Base+0x588>
   10e1c:	movw	r1, #4931	; 0x1343
   10e20:	mov	r0, r5
   10e24:	movt	r1, #1
   10e28:	bl	110ec <test_schema@@Base+0x6c4>
   10e2c:	cmn	r0, #1
   10e30:	beq	10fc8 <test_schema@@Base+0x5a0>
   10e34:	ldr	r1, [r5, #-4]
   10e38:	cmp	r1, r0
   10e3c:	bls	1108c <test_schema@@Base+0x664>
   10e40:	ldr	r0, [r5, r0, lsl #2]!
   10e44:	ldr	r1, [r5, r0]!
   10e48:	mov	r0, r5
   10e4c:	ldrh	r1, [r0, -r1]!	; <UNPREDICTABLE>
   10e50:	cmp	r1, #8
   10e54:	bcc	110ac <test_schema@@Base+0x684>
   10e58:	ldrh	r0, [r0, #6]
   10e5c:	cmp	r0, #0
   10e60:	beq	110ac <test_schema@@Base+0x684>
   10e64:	ldr	r0, [r5, r0]!
   10e68:	adds	r0, r5, r0
   10e6c:	beq	110cc <test_schema@@Base+0x6a4>
   10e70:	ldr	r2, [r0]
   10e74:	mov	r1, r0
   10e78:	ldrh	r2, [r1, -r2]!	; <UNPREDICTABLE>
   10e7c:	cmp	r2, #6
   10e80:	bcc	10fbc <test_schema@@Base+0x594>
   10e84:	ldrh	r3, [r1, #4]
   10e88:	cmp	r3, #0
   10e8c:	beq	10fbc <test_schema@@Base+0x594>
   10e90:	ldrb	r3, [r0, r3]
   10e94:	cmp	r3, #14
   10e98:	bne	10fbc <test_schema@@Base+0x594>
   10e9c:	cmp	r2, #8
   10ea0:	bcc	10fd4 <test_schema@@Base+0x5ac>
   10ea4:	ldrh	r3, [r1, #6]
   10ea8:	cmp	r3, #0
   10eac:	beq	10fd4 <test_schema@@Base+0x5ac>
   10eb0:	ldrb	r3, [r0, r3]
   10eb4:	cmp	r3, #15
   10eb8:	bne	10fd4 <test_schema@@Base+0x5ac>
   10ebc:	mvn	r3, #0
   10ec0:	cmp	r2, #10
   10ec4:	bcc	10ed4 <test_schema@@Base+0x4ac>
   10ec8:	ldrh	r1, [r1, #8]
   10ecc:	cmp	r1, #0
   10ed0:	ldrne	r3, [r0, r1]
   10ed4:	mov	r5, #0
   10ed8:	cmp	r3, r6
   10edc:	beq	10c6c <test_schema@@Base+0x244>
   10ee0:	movw	r0, #5901	; 0x170d
   10ee4:	movt	r0, #1
   10ee8:	b	10c64 <test_schema@@Base+0x23c>
   10eec:	movw	r0, #6145	; 0x1801
   10ef0:	movt	r0, #1
   10ef4:	bl	108c0 <puts@plt>
   10ef8:	ldr	r1, [r4]
   10efc:	mov	r0, r4
   10f00:	ldrh	r1, [r0, -r1]!	; <UNPREDICTABLE>
   10f04:	cmp	r1, #6
   10f08:	bcc	1106c <test_schema@@Base+0x644>
   10f0c:	ldrh	r0, [r0, #4]
   10f10:	cmp	r0, #0
   10f14:	beq	1106c <test_schema@@Base+0x644>
   10f18:	mov	r1, r4
   10f1c:	ldr	r0, [r1, r0]!
   10f20:	add	r0, r1, r0
   10f24:	add	r1, r0, #4
   10f28:	movw	r0, #4903	; 0x1327
   10f2c:	movt	r0, #1
   10f30:	bl	10878 <printf@plt>
   10f34:	ldr	r1, [r4]
   10f38:	mov	r0, r4
   10f3c:	mov	r2, #0
   10f40:	mov	r3, #0
   10f44:	ldrh	r1, [r0, -r1]!	; <UNPREDICTABLE>
   10f48:	cmp	r1, #14
   10f4c:	bcc	10f7c <test_schema@@Base+0x554>
   10f50:	ldrh	r0, [r0, #12]
   10f54:	cmp	r0, #0
   10f58:	beq	10f74 <test_schema@@Base+0x54c>
   10f5c:	ldr	r2, [r4, r0]!
   10f60:	ldr	r3, [r4, #4]
   10f64:	b	10f7c <test_schema@@Base+0x554>
   10f68:	movw	r0, #6180	; 0x1824
   10f6c:	movt	r0, #1
   10f70:	b	10c64 <test_schema@@Base+0x23c>
   10f74:	mov	r2, #0
   10f78:	mov	r3, #0
   10f7c:	movw	r0, #4919	; 0x1337
   10f80:	movt	r0, #1
   10f84:	bl	10878 <printf@plt>
   10f88:	b	10c68 <test_schema@@Base+0x240>
   10f8c:	movw	r0, #6119	; 0x17e7
   10f90:	movt	r0, #1
   10f94:	b	10c64 <test_schema@@Base+0x23c>
   10f98:	movw	r0, #6074	; 0x17ba
   10f9c:	movt	r0, #1
   10fa0:	b	10c64 <test_schema@@Base+0x23c>
   10fa4:	movw	r0, #6097	; 0x17d1
   10fa8:	movt	r0, #1
   10fac:	b	10c64 <test_schema@@Base+0x23c>
   10fb0:	movw	r0, #6051	; 0x17a3
   10fb4:	movt	r0, #1
   10fb8:	b	10c64 <test_schema@@Base+0x23c>
   10fbc:	movw	r0, #5987	; 0x1763
   10fc0:	movt	r0, #1
   10fc4:	b	10c64 <test_schema@@Base+0x23c>
   10fc8:	movw	r0, #6025	; 0x1789
   10fcc:	movt	r0, #1
   10fd0:	b	10c64 <test_schema@@Base+0x23c>
   10fd4:	movw	r0, #5941	; 0x1735
   10fd8:	movt	r0, #1
   10fdc:	b	10c64 <test_schema@@Base+0x23c>
   10fe0:	movw	r0, #5254	; 0x1486
   10fe4:	movw	r1, #5083	; 0x13db
   10fe8:	movw	r3, #5287	; 0x14a7
   10fec:	mov	r2, #218	; 0xda
   10ff0:	movt	r0, #1
   10ff4:	movt	r1, #1
   10ff8:	movt	r3, #1
   10ffc:	bl	1092c <__assert_fail@plt>
   11000:	movw	r0, #5358	; 0x14ee
   11004:	movw	r1, #5083	; 0x13db
   11008:	movw	r3, #5413	; 0x1525
   1100c:	mov	r2, #215	; 0xd7
   11010:	movt	r0, #1
   11014:	movt	r1, #1
   11018:	movt	r3, #1
   1101c:	bl	1092c <__assert_fail@plt>
   11020:	movw	r0, #5254	; 0x1486
   11024:	movt	r0, #1
   11028:	b	11034 <test_schema@@Base+0x60c>
   1102c:	movw	r0, #5045	; 0x13b5
   11030:	movt	r0, #1
   11034:	movw	r1, #5083	; 0x13db
   11038:	movw	r3, #5177	; 0x1439
   1103c:	mov	r2, #237	; 0xed
   11040:	movt	r1, #1
   11044:	movt	r3, #1
   11048:	bl	1092c <__assert_fail@plt>
   1104c:	movw	r0, #5254	; 0x1486
   11050:	movw	r1, #5083	; 0x13db
   11054:	movw	r3, #5497	; 0x1579
   11058:	mov	r2, #224	; 0xe0
   1105c:	movt	r0, #1
   11060:	movt	r1, #1
   11064:	movt	r3, #1
   11068:	bl	1092c <__assert_fail@plt>
   1106c:	movw	r0, #5254	; 0x1486
   11070:	movw	r1, #5083	; 0x13db
   11074:	movw	r3, #5653	; 0x1615
   11078:	mov	r2, #195	; 0xc3
   1107c:	movt	r0, #1
   11080:	movt	r1, #1
   11084:	movt	r3, #1
   11088:	bl	1092c <__assert_fail@plt>
   1108c:	movw	r0, #5358	; 0x14ee
   11090:	movw	r1, #5083	; 0x13db
   11094:	movw	r3, #5572	; 0x15c4
   11098:	mov	r2, #192	; 0xc0
   1109c:	movt	r0, #1
   110a0:	movt	r1, #1
   110a4:	movt	r3, #1
   110a8:	bl	1092c <__assert_fail@plt>
   110ac:	movw	r0, #5254	; 0x1486
   110b0:	movw	r1, #5083	; 0x13db
   110b4:	movw	r3, #5722	; 0x165a
   110b8:	mov	r2, #201	; 0xc9
   110bc:	movt	r0, #1
   110c0:	movt	r1, #1
   110c4:	movt	r3, #1
   110c8:	bl	1092c <__assert_fail@plt>
   110cc:	movw	r0, #5045	; 0x13b5
   110d0:	movw	r1, #5083	; 0x13db
   110d4:	movw	r3, #5794	; 0x16a2
   110d8:	mov	r2, #147	; 0x93
   110dc:	movt	r0, #1
   110e0:	movt	r1, #1
   110e4:	movt	r3, #1
   110e8:	bl	1092c <__assert_fail@plt>
   110ec:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   110f0:	add	fp, sp, #24
   110f4:	mvn	r4, #0
   110f8:	cmp	r0, #0
   110fc:	beq	111d4 <test_schema@@Base+0x7ac>
   11100:	ldr	r7, [r0, #-4]
   11104:	mov	r9, r0
   11108:	cmp	r7, #0
   1110c:	beq	111d4 <test_schema@@Base+0x7ac>
   11110:	mov	r8, r1
   11114:	mov	r4, #0
   11118:	subs	r5, r7, #1
   1111c:	beq	1118c <test_schema@@Base+0x764>
   11120:	sub	r0, r5, r4
   11124:	add	r6, r4, r0, lsr #1
   11128:	cmp	r7, r6
   1112c:	bls	111fc <test_schema@@Base+0x7d4>
   11130:	mov	r0, r9
   11134:	ldr	r1, [r0, r6, lsl #2]!
   11138:	ldr	r2, [r0, r1]!
   1113c:	mov	r1, r0
   11140:	ldrh	r2, [r1, -r2]!	; <UNPREDICTABLE>
   11144:	cmp	r2, #6
   11148:	bcc	111dc <test_schema@@Base+0x7b4>
   1114c:	ldrh	r1, [r1, #4]
   11150:	cmp	r1, #0
   11154:	beq	111dc <test_schema@@Base+0x7b4>
   11158:	ldr	r1, [r0, r1]!
   1115c:	add	r0, r0, r1
   11160:	mov	r1, r8
   11164:	add	r0, r0, #4
   11168:	bl	1086c <strcmp@plt>
   1116c:	cmp	r0, #0
   11170:	movpl	r5, r6
   11174:	addmi	r4, r6, #1
   11178:	cmp	r5, r4
   1117c:	bhi	11120 <test_schema@@Base+0x6f8>
   11180:	bne	111d0 <test_schema@@Base+0x7a8>
   11184:	cmp	r7, r4
   11188:	bls	111fc <test_schema@@Base+0x7d4>
   1118c:	ldr	r0, [r9, r4, lsl #2]!
   11190:	ldr	r1, [r9, r0]!
   11194:	mov	r0, r9
   11198:	ldrh	r1, [r0, -r1]!	; <UNPREDICTABLE>
   1119c:	cmp	r1, #6
   111a0:	bcc	111dc <test_schema@@Base+0x7b4>
   111a4:	ldrh	r0, [r0, #4]
   111a8:	cmp	r0, #0
   111ac:	beq	111dc <test_schema@@Base+0x7b4>
   111b0:	ldr	r0, [r9, r0]!
   111b4:	mov	r1, r8
   111b8:	add	r0, r9, r0
   111bc:	add	r0, r0, #4
   111c0:	bl	1086c <strcmp@plt>
   111c4:	cmp	r0, #0
   111c8:	mvnne	r4, #0
   111cc:	b	111d4 <test_schema@@Base+0x7ac>
   111d0:	mvn	r4, #0
   111d4:	mov	r0, r4
   111d8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   111dc:	movw	r0, #5254	; 0x1486
   111e0:	movw	r1, #5083	; 0x13db
   111e4:	movw	r3, #5653	; 0x1615
   111e8:	mov	r2, #195	; 0xc3
   111ec:	movt	r0, #1
   111f0:	movt	r1, #1
   111f4:	movt	r3, #1
   111f8:	bl	1092c <__assert_fail@plt>
   111fc:	movw	r0, #5358	; 0x14ee
   11200:	movw	r1, #5083	; 0x13db
   11204:	movw	r3, #5572	; 0x15c4
   11208:	mov	r2, #192	; 0xc0
   1120c:	movt	r0, #1
   11210:	movt	r1, #1
   11214:	movt	r3, #1
   11218:	bl	1092c <__assert_fail@plt>

0001121c <main@@Base>:
   1121c:	push	{fp, lr}
   11220:	mov	fp, sp
   11224:	sub	r2, r0, #1
   11228:	cmp	r2, #2
   1122c:	bcs	11260 <main@@Base+0x44>
   11230:	cmp	r0, #2
   11234:	bne	1124c <main@@Base+0x30>
   11238:	ldr	r0, [r1, #4]
   1123c:	movw	r1, #8284	; 0x205c
   11240:	movt	r1, #2
   11244:	str	r0, [r1]
   11248:	b	11258 <main@@Base+0x3c>
   1124c:	movw	r0, #8284	; 0x205c
   11250:	movt	r0, #2
   11254:	ldr	r0, [r0]
   11258:	pop	{fp, lr}
   1125c:	b	10a28 <test_schema@@Base>
   11260:	movw	r0, #8288	; 0x2060
   11264:	mov	r1, #64	; 0x40
   11268:	mov	r2, #1
   1126c:	movt	r0, #2
   11270:	ldr	r3, [r0]
   11274:	movw	r0, #4977	; 0x1371
   11278:	movt	r0, #1
   1127c:	bl	108b4 <fwrite@plt>
   11280:	mov	r0, #1
   11284:	bl	108f0 <exit@plt>

00011288 <__libc_csu_init@@Base>:
   11288:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1128c:	mov	r7, r0
   11290:	ldr	r6, [pc, #72]	; 112e0 <__libc_csu_init@@Base+0x58>
   11294:	ldr	r5, [pc, #72]	; 112e4 <__libc_csu_init@@Base+0x5c>
   11298:	add	r6, pc, r6
   1129c:	add	r5, pc, r5
   112a0:	sub	r6, r6, r5
   112a4:	mov	r8, r1
   112a8:	mov	r9, r2
   112ac:	bl	1084c <strcmp@plt-0x20>
   112b0:	asrs	r6, r6, #2
   112b4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   112b8:	mov	r4, #0
   112bc:	add	r4, r4, #1
   112c0:	ldr	r3, [r5], #4
   112c4:	mov	r2, r9
   112c8:	mov	r1, r8
   112cc:	mov	r0, r7
   112d0:	blx	r3
   112d4:	cmp	r6, r4
   112d8:	bne	112bc <__libc_csu_init@@Base+0x34>
   112dc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   112e0:	andeq	r0, r1, ip, ror #24
   112e4:	andeq	r0, r1, r4, ror #24

000112e8 <__libc_csu_fini@@Base>:
   112e8:	bx	lr

Disassembly of section .fini:

000112ec <.fini>:
   112ec:	push	{r3, lr}
   112f0:	pop	{r3, pc}
