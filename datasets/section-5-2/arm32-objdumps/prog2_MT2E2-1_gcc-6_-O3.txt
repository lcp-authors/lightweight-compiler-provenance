
../repos/prog2/MT2E2-1:     file format elf32-littlearm


Disassembly of section .init:

00010eb0 <.init>:
   10eb0:	push	{r3, lr}
   10eb4:	bl	11180 <_start@@Base+0x3c>
   10eb8:	pop	{r3, pc}

Disassembly of section .plt:

00010ebc <calloc@plt-0x14>:
   10ebc:	push	{lr}		; (str lr, [sp, #-4]!)
   10ec0:	ldr	lr, [pc, #4]	; 10ecc <calloc@plt-0x4>
   10ec4:	add	lr, pc, lr
   10ec8:	ldr	pc, [lr, #8]!
   10ecc:	andeq	r4, r1, r4, lsr r1

00010ed0 <calloc@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #20, 20	; 0x14000
   10ed8:	ldr	pc, [ip, #308]!	; 0x134

00010edc <raise@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #20, 20	; 0x14000
   10ee4:	ldr	pc, [ip, #300]!	; 0x12c

00010ee8 <strcmp@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #20, 20	; 0x14000
   10ef0:	ldr	pc, [ip, #292]!	; 0x124

00010ef4 <printf@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #20, 20	; 0x14000
   10efc:	ldr	pc, [ip, #284]!	; 0x11c

00010f00 <__isoc99_fscanf@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #20, 20	; 0x14000
   10f08:	ldr	pc, [ip, #276]!	; 0x114

00010f0c <fopen@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #20, 20	; 0x14000
   10f14:	ldr	pc, [ip, #268]!	; 0x10c

00010f18 <free@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #20, 20	; 0x14000
   10f20:	ldr	pc, [ip, #260]!	; 0x104

00010f24 <memcpy@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #20, 20	; 0x14000
   10f2c:	ldr	pc, [ip, #252]!	; 0xfc

00010f30 <realloc@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #20, 20	; 0x14000
   10f38:	ldr	pc, [ip, #244]!	; 0xf4

00010f3c <strcpy@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #20, 20	; 0x14000
   10f44:	ldr	pc, [ip, #236]!	; 0xec

00010f48 <puts@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #20, 20	; 0x14000
   10f50:	ldr	pc, [ip, #228]!	; 0xe4

00010f54 <malloc@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #20, 20	; 0x14000
   10f5c:	ldr	pc, [ip, #220]!	; 0xdc

00010f60 <__libc_start_main@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #20, 20	; 0x14000
   10f68:	ldr	pc, [ip, #212]!	; 0xd4

00010f6c <__gmon_start__@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #20, 20	; 0x14000
   10f74:	ldr	pc, [ip, #204]!	; 0xcc

00010f78 <strlen@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #20, 20	; 0x14000
   10f80:	ldr	pc, [ip, #196]!	; 0xc4

00010f84 <putchar@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #20, 20	; 0x14000
   10f8c:	ldr	pc, [ip, #188]!	; 0xbc

00010f90 <fclose@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #20, 20	; 0x14000
   10f98:	ldr	pc, [ip, #180]!	; 0xb4

00010f9c <abort@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #20, 20	; 0x14000
   10fa4:	ldr	pc, [ip, #172]!	; 0xac

Disassembly of section .text:

00010fa8 <main@@Base>:
   10fa8:	push	{r4, r5, r6, lr}
   10fac:	sub	sp, sp, #376	; 0x178
   10fb0:	ldr	lr, [pc, #352]	; 11118 <main@@Base+0x170>
   10fb4:	add	ip, sp, #76	; 0x4c
   10fb8:	mov	r4, ip
   10fbc:	ldm	lr!, {r0, r1, r2, r3}
   10fc0:	add	r6, sp, #128	; 0x80
   10fc4:	stmia	ip!, {r0, r1, r2, r3}
   10fc8:	ldm	lr!, {r0, r1, r2, r3}
   10fcc:	stmia	ip!, {r0, r1, r2, r3}
   10fd0:	ldm	lr!, {r0, r1, r2, r3}
   10fd4:	ldr	lr, [lr]
   10fd8:	stmia	ip!, {r0, r1, r2, r3}
   10fdc:	ldr	r0, [pc, #312]	; 1111c <main@@Base+0x174>
   10fe0:	str	lr, [ip]
   10fe4:	bl	10f48 <puts@plt>
   10fe8:	bl	11694 <avl_nova@@Base>
   10fec:	mov	r5, r0
   10ff0:	mov	r1, r4
   10ff4:	mov	r0, r5
   10ff8:	add	r4, r4, #4
   10ffc:	bl	11d90 <avl_insere@@Base>
   11000:	cmp	r4, r6
   11004:	bne	10ff0 <main@@Base+0x48>
   11008:	ldr	r0, [pc, #272]	; 11120 <main@@Base+0x178>
   1100c:	bl	10ef4 <printf@plt>
   11010:	ldr	r0, [r5]
   11014:	bl	1377c <avl_imprime@@Base>
   11018:	ldr	r0, [pc, #260]	; 11124 <main@@Base+0x17c>
   1101c:	bl	10ef4 <printf@plt>
   11020:	ldr	r0, [r5]
   11024:	bl	1126c <crescente@@Base>
   11028:	ldr	r0, [pc, #248]	; 11128 <main@@Base+0x180>
   1102c:	bl	10f48 <puts@plt>
   11030:	mov	r2, #300	; 0x12c
   11034:	ldr	r1, [pc, #240]	; 1112c <main@@Base+0x184>
   11038:	add	r0, sp, #76	; 0x4c
   1103c:	bl	10f24 <memcpy@plt>
   11040:	mov	r2, #75	; 0x4b
   11044:	ldr	r1, [pc, #228]	; 11130 <main@@Base+0x188>
   11048:	mov	r0, sp
   1104c:	bl	10f24 <memcpy@plt>
   11050:	ldr	r0, [pc, #220]	; 11134 <main@@Base+0x18c>
   11054:	bl	10f48 <puts@plt>
   11058:	ldr	r1, [pc, #216]	; 11138 <main@@Base+0x190>
   1105c:	ldr	r0, [pc, #216]	; 1113c <main@@Base+0x194>
   11060:	bl	10f0c <fopen@plt>
   11064:	subs	r6, r0, #0
   11068:	beq	11108 <main@@Base+0x160>
   1106c:	bl	13828 <lista_nova@@Base>
   11070:	add	r1, sp, #76	; 0x4c
   11074:	mov	r2, #0
   11078:	mov	r5, r0
   1107c:	bl	138b4 <lista_insere@@Base>
   11080:	mov	r2, #0
   11084:	add	r1, sp, #176	; 0xb0
   11088:	mov	r0, r5
   1108c:	bl	138b4 <lista_insere@@Base>
   11090:	mov	r2, #0
   11094:	add	r1, sp, #276	; 0x114
   11098:	mov	r0, r5
   1109c:	bl	138b4 <lista_insere@@Base>
   110a0:	bl	13828 <lista_nova@@Base>
   110a4:	mov	r2, #0
   110a8:	mov	r1, sp
   110ac:	mov	r4, r0
   110b0:	bl	138b4 <lista_insere@@Base>
   110b4:	mov	r2, #0
   110b8:	add	r1, sp, #25
   110bc:	mov	r0, r4
   110c0:	bl	138b4 <lista_insere@@Base>
   110c4:	add	r1, sp, #50	; 0x32
   110c8:	mov	r2, #0
   110cc:	mov	r0, r4
   110d0:	bl	138b4 <lista_insere@@Base>
   110d4:	mov	r2, r4
   110d8:	mov	r1, r5
   110dc:	mov	r0, r6
   110e0:	bl	115a8 <valida_passwds@@Base>
   110e4:	mov	r0, r5
   110e8:	bl	1384c <lista_apaga@@Base>
   110ec:	mov	r0, r4
   110f0:	bl	1384c <lista_apaga@@Base>
   110f4:	mov	r0, r6
   110f8:	bl	10f90 <fclose@plt>
   110fc:	mov	r0, #0
   11100:	add	sp, sp, #376	; 0x178
   11104:	pop	{r4, r5, r6, pc}
   11108:	ldr	r0, [pc, #48]	; 11140 <main@@Base+0x198>
   1110c:	bl	10f48 <puts@plt>
   11110:	mvn	r0, #0
   11114:	b	11100 <main@@Base+0x158>
   11118:	strdeq	r4, [r1], -ip
   1111c:	andeq	r4, r1, r0, lsl #14
   11120:	andeq	r4, r1, r4, lsl r7
   11124:	andeq	r4, r1, r8, lsr #14
   11128:	andeq	r4, r1, r8, asr #14
   1112c:	andeq	r4, r1, r0, lsr r5
   11130:	andeq	r4, r1, ip, asr r6
   11134:	andeq	r4, r1, ip, asr #14
   11138:	andeq	r4, r1, r0, ror #14
   1113c:	andeq	r4, r1, r4, ror #14
   11140:	andeq	r4, r1, r4, ror r7

00011144 <_start@@Base>:
   11144:	mov	fp, #0
   11148:	mov	lr, #0
   1114c:	pop	{r1}		; (ldr r1, [sp], #4)
   11150:	mov	r2, sp
   11154:	push	{r2}		; (str r2, [sp, #-4]!)
   11158:	push	{r0}		; (str r0, [sp, #-4]!)
   1115c:	ldr	ip, [pc, #16]	; 11174 <_start@@Base+0x30>
   11160:	push	{ip}		; (str ip, [sp, #-4]!)
   11164:	ldr	r0, [pc, #12]	; 11178 <_start@@Base+0x34>
   11168:	ldr	r3, [pc, #12]	; 1117c <_start@@Base+0x38>
   1116c:	bl	10f60 <__libc_start_main@plt>
   11170:	bl	10f9c <abort@plt>
   11174:	andeq	r4, r1, ip, ror #9
   11178:	andeq	r0, r1, r8, lsr #31
   1117c:	andeq	r4, r1, ip, lsl #9
   11180:	ldr	r3, [pc, #20]	; 1119c <_start@@Base+0x58>
   11184:	ldr	r2, [pc, #20]	; 111a0 <_start@@Base+0x5c>
   11188:	add	r3, pc, r3
   1118c:	ldr	r2, [r3, r2]
   11190:	cmp	r2, #0
   11194:	bxeq	lr
   11198:	b	10f6c <__gmon_start__@plt>
   1119c:	andeq	r3, r1, r0, ror lr
   111a0:	andeq	r0, r0, r4, asr r0
   111a4:	ldr	r3, [pc, #28]	; 111c8 <_start@@Base+0x84>
   111a8:	ldr	r0, [pc, #28]	; 111cc <_start@@Base+0x88>
   111ac:	sub	r3, r3, r0
   111b0:	cmp	r3, #6
   111b4:	bxls	lr
   111b8:	ldr	r3, [pc, #16]	; 111d0 <_start@@Base+0x8c>
   111bc:	cmp	r3, #0
   111c0:	bxeq	lr
   111c4:	bx	r3
   111c8:	andeq	r5, r2, r3, rrx
   111cc:	andeq	r5, r2, r0, rrx
   111d0:	andeq	r0, r0, r0
   111d4:	ldr	r1, [pc, #36]	; 11200 <_start@@Base+0xbc>
   111d8:	ldr	r0, [pc, #36]	; 11204 <_start@@Base+0xc0>
   111dc:	sub	r1, r1, r0
   111e0:	asr	r1, r1, #2
   111e4:	add	r1, r1, r1, lsr #31
   111e8:	asrs	r1, r1, #1
   111ec:	bxeq	lr
   111f0:	ldr	r3, [pc, #16]	; 11208 <_start@@Base+0xc4>
   111f4:	cmp	r3, #0
   111f8:	bxeq	lr
   111fc:	bx	r3
   11200:	andeq	r5, r2, r0, rrx
   11204:	andeq	r5, r2, r0, rrx
   11208:	andeq	r0, r0, r0
   1120c:	push	{r4, lr}
   11210:	ldr	r4, [pc, #24]	; 11230 <_start@@Base+0xec>
   11214:	ldrb	r3, [r4]
   11218:	cmp	r3, #0
   1121c:	popne	{r4, pc}
   11220:	bl	111a4 <_start@@Base+0x60>
   11224:	mov	r3, #1
   11228:	strb	r3, [r4]
   1122c:	pop	{r4, pc}
   11230:	andeq	r5, r2, r0, rrx
   11234:	ldr	r0, [pc, #40]	; 11264 <_start@@Base+0x120>
   11238:	ldr	r3, [r0]
   1123c:	cmp	r3, #0
   11240:	bne	11248 <_start@@Base+0x104>
   11244:	b	111d4 <_start@@Base+0x90>
   11248:	ldr	r3, [pc, #24]	; 11268 <_start@@Base+0x124>
   1124c:	cmp	r3, #0
   11250:	beq	11244 <_start@@Base+0x100>
   11254:	push	{r4, lr}
   11258:	blx	r3
   1125c:	pop	{r4, lr}
   11260:	b	111d4 <_start@@Base+0x90>
   11264:	andeq	r4, r2, r4, lsl pc
   11268:	andeq	r0, r0, r0

0001126c <crescente@@Base>:
   1126c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11270:	sub	sp, sp, #12
   11274:	subs	r3, r0, #0
   11278:	str	r3, [sp, #4]
   1127c:	beq	113d8 <crescente@@Base+0x16c>
   11280:	ldr	r4, [pc, #344]	; 113e0 <crescente@@Base+0x174>
   11284:	ldr	r3, [r3, #4]
   11288:	cmp	r3, #0
   1128c:	str	r3, [sp]
   11290:	beq	113b8 <crescente@@Base+0x14c>
   11294:	ldr	r8, [r3, #4]
   11298:	cmp	r8, #0
   1129c:	beq	11398 <crescente@@Base+0x12c>
   112a0:	ldr	r9, [r8, #4]
   112a4:	cmp	r9, #0
   112a8:	beq	11380 <crescente@@Base+0x114>
   112ac:	ldr	sl, [r9, #4]
   112b0:	cmp	sl, #0
   112b4:	beq	11368 <crescente@@Base+0xfc>
   112b8:	ldr	fp, [sl, #4]
   112bc:	cmp	fp, #0
   112c0:	beq	11350 <crescente@@Base+0xe4>
   112c4:	ldr	r6, [fp, #4]
   112c8:	cmp	r6, #0
   112cc:	beq	11338 <crescente@@Base+0xcc>
   112d0:	ldr	r5, [r6, #4]
   112d4:	cmp	r5, #0
   112d8:	beq	11320 <crescente@@Base+0xb4>
   112dc:	ldr	r7, [r5, #4]
   112e0:	cmp	r7, #0
   112e4:	beq	11308 <crescente@@Base+0x9c>
   112e8:	ldr	r0, [r7, #4]
   112ec:	bl	1126c <crescente@@Base>
   112f0:	ldr	r1, [r7]
   112f4:	mov	r0, r4
   112f8:	bl	10ef4 <printf@plt>
   112fc:	ldr	r7, [r7, #8]
   11300:	cmp	r7, #0
   11304:	bne	112e8 <crescente@@Base+0x7c>
   11308:	ldr	r1, [r5]
   1130c:	mov	r0, r4
   11310:	bl	10ef4 <printf@plt>
   11314:	ldr	r5, [r5, #8]
   11318:	cmp	r5, #0
   1131c:	bne	112dc <crescente@@Base+0x70>
   11320:	ldr	r1, [r6]
   11324:	mov	r0, r4
   11328:	bl	10ef4 <printf@plt>
   1132c:	ldr	r6, [r6, #8]
   11330:	cmp	r6, #0
   11334:	bne	112d0 <crescente@@Base+0x64>
   11338:	ldr	r1, [fp]
   1133c:	mov	r0, r4
   11340:	bl	10ef4 <printf@plt>
   11344:	ldr	fp, [fp, #8]
   11348:	cmp	fp, #0
   1134c:	bne	112c4 <crescente@@Base+0x58>
   11350:	ldr	r1, [sl]
   11354:	mov	r0, r4
   11358:	bl	10ef4 <printf@plt>
   1135c:	ldr	sl, [sl, #8]
   11360:	cmp	sl, #0
   11364:	bne	112b8 <crescente@@Base+0x4c>
   11368:	ldr	r1, [r9]
   1136c:	mov	r0, r4
   11370:	bl	10ef4 <printf@plt>
   11374:	ldr	r9, [r9, #8]
   11378:	cmp	r9, #0
   1137c:	bne	112ac <crescente@@Base+0x40>
   11380:	ldr	r1, [r8]
   11384:	mov	r0, r4
   11388:	bl	10ef4 <printf@plt>
   1138c:	ldr	r8, [r8, #8]
   11390:	cmp	r8, #0
   11394:	bne	112a0 <crescente@@Base+0x34>
   11398:	ldr	r5, [sp]
   1139c:	mov	r0, r4
   113a0:	ldr	r1, [r5]
   113a4:	bl	10ef4 <printf@plt>
   113a8:	ldr	r3, [r5, #8]
   113ac:	cmp	r3, #0
   113b0:	str	r3, [sp]
   113b4:	bne	11294 <crescente@@Base+0x28>
   113b8:	ldr	r5, [sp, #4]
   113bc:	mov	r0, r4
   113c0:	ldr	r1, [r5]
   113c4:	bl	10ef4 <printf@plt>
   113c8:	ldr	r3, [r5, #8]
   113cc:	cmp	r3, #0
   113d0:	str	r3, [sp, #4]
   113d4:	bne	11284 <crescente@@Base+0x18>
   113d8:	add	sp, sp, #12
   113dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   113e0:	andeq	r4, r1, r8, lsr #13

000113e4 <decrescente@@Base>:
   113e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   113e8:	sub	sp, sp, #12
   113ec:	subs	r3, r0, #0
   113f0:	str	r3, [sp, #4]
   113f4:	beq	11550 <decrescente@@Base+0x16c>
   113f8:	ldr	r4, [pc, #344]	; 11558 <decrescente@@Base+0x174>
   113fc:	ldr	r3, [r3, #8]
   11400:	cmp	r3, #0
   11404:	str	r3, [sp]
   11408:	beq	11530 <decrescente@@Base+0x14c>
   1140c:	ldr	r8, [r3, #8]
   11410:	cmp	r8, #0
   11414:	beq	11510 <decrescente@@Base+0x12c>
   11418:	ldr	r9, [r8, #8]
   1141c:	cmp	r9, #0
   11420:	beq	114f8 <decrescente@@Base+0x114>
   11424:	ldr	sl, [r9, #8]
   11428:	cmp	sl, #0
   1142c:	beq	114e0 <decrescente@@Base+0xfc>
   11430:	ldr	fp, [sl, #8]
   11434:	cmp	fp, #0
   11438:	beq	114c8 <decrescente@@Base+0xe4>
   1143c:	ldr	r6, [fp, #8]
   11440:	cmp	r6, #0
   11444:	beq	114b0 <decrescente@@Base+0xcc>
   11448:	ldr	r5, [r6, #8]
   1144c:	cmp	r5, #0
   11450:	beq	11498 <decrescente@@Base+0xb4>
   11454:	ldr	r7, [r5, #8]
   11458:	cmp	r7, #0
   1145c:	beq	11480 <decrescente@@Base+0x9c>
   11460:	ldr	r0, [r7, #8]
   11464:	bl	113e4 <decrescente@@Base>
   11468:	ldr	r1, [r7]
   1146c:	mov	r0, r4
   11470:	bl	10ef4 <printf@plt>
   11474:	ldr	r7, [r7, #4]
   11478:	cmp	r7, #0
   1147c:	bne	11460 <decrescente@@Base+0x7c>
   11480:	ldr	r1, [r5]
   11484:	mov	r0, r4
   11488:	bl	10ef4 <printf@plt>
   1148c:	ldr	r5, [r5, #4]
   11490:	cmp	r5, #0
   11494:	bne	11454 <decrescente@@Base+0x70>
   11498:	ldr	r1, [r6]
   1149c:	mov	r0, r4
   114a0:	bl	10ef4 <printf@plt>
   114a4:	ldr	r6, [r6, #4]
   114a8:	cmp	r6, #0
   114ac:	bne	11448 <decrescente@@Base+0x64>
   114b0:	ldr	r1, [fp]
   114b4:	mov	r0, r4
   114b8:	bl	10ef4 <printf@plt>
   114bc:	ldr	fp, [fp, #4]
   114c0:	cmp	fp, #0
   114c4:	bne	1143c <decrescente@@Base+0x58>
   114c8:	ldr	r1, [sl]
   114cc:	mov	r0, r4
   114d0:	bl	10ef4 <printf@plt>
   114d4:	ldr	sl, [sl, #4]
   114d8:	cmp	sl, #0
   114dc:	bne	11430 <decrescente@@Base+0x4c>
   114e0:	ldr	r1, [r9]
   114e4:	mov	r0, r4
   114e8:	bl	10ef4 <printf@plt>
   114ec:	ldr	r9, [r9, #4]
   114f0:	cmp	r9, #0
   114f4:	bne	11424 <decrescente@@Base+0x40>
   114f8:	ldr	r1, [r8]
   114fc:	mov	r0, r4
   11500:	bl	10ef4 <printf@plt>
   11504:	ldr	r8, [r8, #4]
   11508:	cmp	r8, #0
   1150c:	bne	11418 <decrescente@@Base+0x34>
   11510:	ldr	r5, [sp]
   11514:	mov	r0, r4
   11518:	ldr	r1, [r5]
   1151c:	bl	10ef4 <printf@plt>
   11520:	ldr	r3, [r5, #4]
   11524:	cmp	r3, #0
   11528:	str	r3, [sp]
   1152c:	bne	1140c <decrescente@@Base+0x28>
   11530:	ldr	r5, [sp, #4]
   11534:	mov	r0, r4
   11538:	ldr	r1, [r5]
   1153c:	bl	10ef4 <printf@plt>
   11540:	ldr	r3, [r5, #4]
   11544:	cmp	r3, #0
   11548:	str	r3, [sp, #4]
   1154c:	bne	113fc <decrescente@@Base+0x18>
   11550:	add	sp, sp, #12
   11554:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11558:	andeq	r4, r1, r8, lsr #13

0001155c <avl_imprime_ord@@Base>:
   1155c:	cmp	r1, #0
   11560:	blt	1159c <avl_imprime_ord@@Base+0x40>
   11564:	push	{r4, r5, r6, lr}
   11568:	ldr	r4, [r0]
   1156c:	cmp	r4, #0
   11570:	popeq	{r4, r5, r6, pc}
   11574:	ldr	r5, [pc, #40]	; 115a4 <avl_imprime_ord@@Base+0x48>
   11578:	ldr	r0, [r4, #4]
   1157c:	bl	1126c <crescente@@Base>
   11580:	ldr	r1, [r4]
   11584:	mov	r0, r5
   11588:	bl	10ef4 <printf@plt>
   1158c:	ldr	r4, [r4, #8]
   11590:	cmp	r4, #0
   11594:	bne	11578 <avl_imprime_ord@@Base+0x1c>
   11598:	pop	{r4, r5, r6, pc}
   1159c:	ldr	r0, [r0]
   115a0:	b	113e4 <decrescente@@Base>
   115a4:	andeq	r4, r1, r8, lsr #13

000115a8 <valida_passwds@@Base>:
   115a8:	push	{r4, r5, r6, r7, r8, r9, lr}
   115ac:	mov	r5, r0
   115b0:	sub	sp, sp, #60	; 0x3c
   115b4:	mov	r8, r1
   115b8:	mov	r0, #10
   115bc:	ldr	r1, [pc, #188]	; 11680 <valida_passwds@@Base+0xd8>
   115c0:	mov	r7, r2
   115c4:	bl	13bf4 <tabela_nova@@Base>
   115c8:	ldr	r4, [pc, #180]	; 11684 <valida_passwds@@Base+0xdc>
   115cc:	mov	r6, r0
   115d0:	b	115d8 <valida_passwds@@Base+0x30>
   115d4:	bl	13cc4 <tabela_adiciona@@Base>
   115d8:	mov	r2, sp
   115dc:	mov	r1, r4
   115e0:	add	r3, sp, #28
   115e4:	mov	r0, r5
   115e8:	bl	10f00 <__isoc99_fscanf@plt>
   115ec:	add	r2, sp, #28
   115f0:	mov	r1, sp
   115f4:	cmp	r0, #2
   115f8:	mov	r0, r6
   115fc:	beq	115d4 <valida_passwds@@Base+0x2c>
   11600:	ldr	r4, [r8]
   11604:	ldr	r5, [r7]
   11608:	cmp	r4, #0
   1160c:	cmpne	r5, #0
   11610:	beq	11668 <valida_passwds@@Base+0xc0>
   11614:	ldr	r8, [pc, #108]	; 11688 <valida_passwds@@Base+0xe0>
   11618:	ldr	r9, [pc, #108]	; 1168c <valida_passwds@@Base+0xe4>
   1161c:	ldr	r7, [pc, #108]	; 11690 <valida_passwds@@Base+0xe8>
   11620:	ldr	r2, [r5]
   11624:	ldr	r1, [r4]
   11628:	mov	r0, r8
   1162c:	bl	10ef4 <printf@plt>
   11630:	ldr	r1, [r4]
   11634:	mov	r0, r6
   11638:	bl	13ecc <tabela_valor@@Base>
   1163c:	ldr	r1, [r5]
   11640:	bl	10ee8 <strcmp@plt>
   11644:	cmp	r0, #0
   11648:	mov	r0, r7
   1164c:	movne	r0, r9
   11650:	bl	10f48 <puts@plt>
   11654:	ldr	r4, [r4, #4]
   11658:	ldr	r5, [r5, #4]
   1165c:	cmp	r4, #0
   11660:	cmpne	r5, #0
   11664:	bne	11620 <valida_passwds@@Base+0x78>
   11668:	mov	r0, r6
   1166c:	bl	13f34 <tabela_esvazia@@Base>
   11670:	mov	r0, r6
   11674:	bl	10f18 <free@plt>
   11678:	add	sp, sp, #60	; 0x3c
   1167c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11680:	andeq	r4, r1, r4, asr #2
   11684:	andeq	r4, r1, ip, lsr #13
   11688:			; <UNDEFINED> instruction: 0x000146b4
   1168c:	andeq	r4, r1, r8, ror #13
   11690:	andeq	r4, r1, ip, asr #13

00011694 <avl_nova@@Base>:
   11694:	push	{r4, lr}
   11698:	mov	r0, #4
   1169c:	bl	10f54 <malloc@plt>
   116a0:	cmp	r0, #0
   116a4:	movne	r3, #0
   116a8:	strne	r3, [r0]
   116ac:	pop	{r4, pc}

000116b0 <avl_pesquisa@@Base>:
   116b0:	cmp	r1, #0
   116b4:	cmpne	r0, #0
   116b8:	push	{r4, r5, r6, lr}
   116bc:	moveq	r4, #0
   116c0:	beq	116fc <avl_pesquisa@@Base+0x4c>
   116c4:	ldr	r4, [r0]
   116c8:	mov	r5, r1
   116cc:	cmp	r4, #0
   116d0:	beq	116fc <avl_pesquisa@@Base+0x4c>
   116d4:	ldr	r1, [r4]
   116d8:	mov	r0, r5
   116dc:	bl	10ee8 <strcmp@plt>
   116e0:	cmp	r0, #0
   116e4:	ldrlt	r4, [r4, #4]
   116e8:	blt	116f4 <avl_pesquisa@@Base+0x44>
   116ec:	beq	116fc <avl_pesquisa@@Base+0x4c>
   116f0:	ldr	r4, [r4, #8]
   116f4:	cmp	r4, #0
   116f8:	bne	116d4 <avl_pesquisa@@Base+0x24>
   116fc:	mov	r0, r4
   11700:	pop	{r4, r5, r6, pc}

00011704 <avl_min@@Base>:
   11704:	cmp	r0, #0
   11708:	bne	11714 <avl_min@@Base+0x10>
   1170c:	b	11728 <avl_min@@Base+0x24>
   11710:	mov	r0, r3
   11714:	ldr	r3, [r0, #4]
   11718:	cmp	r3, #0
   1171c:	bne	11710 <avl_min@@Base+0xc>
   11720:	ldr	r0, [r0]
   11724:	bx	lr
   11728:	bx	lr

0001172c <avl_max@@Base>:
   1172c:	cmp	r0, #0
   11730:	bne	1173c <avl_max@@Base+0x10>
   11734:	b	11750 <avl_max@@Base+0x24>
   11738:	mov	r0, r3
   1173c:	ldr	r3, [r0, #8]
   11740:	cmp	r3, #0
   11744:	bne	11738 <avl_max@@Base+0xc>
   11748:	ldr	r0, [r0]
   1174c:	bx	lr
   11750:	bx	lr

00011754 <avl_altura@@Base>:
   11754:	cmp	r0, #0
   11758:	ldrne	r0, [r0, #12]
   1175c:	mvneq	r0, #0
   11760:	bx	lr

00011764 <max@@Base>:
   11764:	cmp	r1, r0
   11768:	movge	r0, r1
   1176c:	bx	lr

00011770 <avl_novo_no@@Base>:
   11770:	push	{r4, r5, r6, lr}
   11774:	mov	r5, r0
   11778:	mov	r0, #16
   1177c:	bl	10f54 <malloc@plt>
   11780:	mov	r4, r0
   11784:	mov	r0, r5
   11788:	bl	10f78 <strlen@plt>
   1178c:	add	r6, r0, #1
   11790:	mov	r0, r6
   11794:	bl	10f54 <malloc@plt>
   11798:	mov	r2, r6
   1179c:	mov	r1, r5
   117a0:	str	r0, [r4]
   117a4:	bl	10f24 <memcpy@plt>
   117a8:	mov	r3, #0
   117ac:	str	r3, [r4, #4]
   117b0:	str	r3, [r4, #8]
   117b4:	str	r3, [r4, #12]
   117b8:	mov	r0, r4
   117bc:	pop	{r4, r5, r6, pc}

000117c0 <roda_direita@@Base>:
   117c0:	ldr	r2, [r0, #4]
   117c4:	ldr	r3, [r2, #8]
   117c8:	str	r0, [r2, #8]
   117cc:	cmp	r3, #0
   117d0:	ldr	r1, [r0, #8]
   117d4:	str	r3, [r0, #4]
   117d8:	ldrne	r3, [r3, #12]
   117dc:	mvneq	r3, #0
   117e0:	cmp	r1, #0
   117e4:	mvneq	r1, #0
   117e8:	ldrne	r1, [r1, #12]
   117ec:	ldr	ip, [r2, #4]
   117f0:	cmp	r3, r1
   117f4:	movlt	r3, r1
   117f8:	cmp	ip, #0
   117fc:	add	r3, r3, #1
   11800:	str	r3, [r0, #12]
   11804:	ldrne	r1, [ip, #12]
   11808:	beq	11824 <roda_direita@@Base+0x64>
   1180c:	cmp	r3, r1
   11810:	movlt	r3, r1
   11814:	add	r3, r3, #1
   11818:	str	r3, [r2, #12]
   1181c:	mov	r0, r2
   11820:	bx	lr
   11824:	mvn	r1, #0
   11828:	b	1180c <roda_direita@@Base+0x4c>

0001182c <roda_esquerda@@Base>:
   1182c:	ldr	r2, [r0, #8]
   11830:	ldr	r1, [r2, #4]
   11834:	str	r0, [r2, #4]
   11838:	ldr	r3, [r0, #4]
   1183c:	str	r1, [r0, #8]
   11840:	cmp	r3, #0
   11844:	mvneq	r3, #0
   11848:	ldrne	r3, [r3, #12]
   1184c:	cmp	r1, #0
   11850:	beq	11890 <roda_esquerda@@Base+0x64>
   11854:	ldr	r1, [r1, #12]
   11858:	cmp	r3, r1
   1185c:	movlt	r3, r1
   11860:	add	r3, r3, #1
   11864:	str	r3, [r0, #12]
   11868:	ldr	r1, [r2, #8]
   1186c:	mov	r0, r2
   11870:	cmp	r1, #0
   11874:	mvneq	r1, #0
   11878:	ldrne	r1, [r1, #12]
   1187c:	cmp	r3, r1
   11880:	movlt	r3, r1
   11884:	add	r3, r3, #1
   11888:	str	r3, [r2, #12]
   1188c:	bx	lr
   11890:	orr	r3, r3, r3, asr #31
   11894:	add	r3, r3, #1
   11898:	str	r3, [r0, #12]
   1189c:	b	11868 <roda_esquerda@@Base+0x3c>

000118a0 <calc_balanceamento@@Base>:
   118a0:	cmp	r0, #0
   118a4:	bxeq	lr
   118a8:	ldr	r3, [r0, #8]
   118ac:	ldr	r2, [r0, #4]
   118b0:	cmp	r3, #0
   118b4:	mvneq	r3, #0
   118b8:	ldrne	r3, [r3, #12]
   118bc:	cmp	r2, #0
   118c0:	mvneq	r0, #0
   118c4:	ldrne	r0, [r2, #12]
   118c8:	sub	r0, r3, r0
   118cc:	bx	lr

000118d0 <avl_pesquisa_impl@@Base>:
   118d0:	push	{r4, r5, r6, lr}
   118d4:	subs	r4, r0, #0
   118d8:	beq	11908 <avl_pesquisa_impl@@Base+0x38>
   118dc:	mov	r5, r1
   118e0:	ldr	r1, [r4]
   118e4:	mov	r0, r5
   118e8:	bl	10ee8 <strcmp@plt>
   118ec:	cmp	r0, #0
   118f0:	ldrlt	r4, [r4, #4]
   118f4:	blt	11900 <avl_pesquisa_impl@@Base+0x30>
   118f8:	beq	11908 <avl_pesquisa_impl@@Base+0x38>
   118fc:	ldr	r4, [r4, #8]
   11900:	cmp	r4, #0
   11904:	bne	118e0 <avl_pesquisa_impl@@Base+0x10>
   11908:	mov	r0, r4
   1190c:	pop	{r4, r5, r6, pc}

00011910 <avl_insere_impl@@Base>:
   11910:	push	{r4, r5, r6, r7, r8, lr}
   11914:	subs	r5, r0, #0
   11918:	mov	r6, r1
   1191c:	beq	11ca4 <avl_insere_impl@@Base+0x394>
   11920:	ldr	r1, [r5]
   11924:	mov	r0, r6
   11928:	bl	10ee8 <strcmp@plt>
   1192c:	cmp	r0, #0
   11930:	blt	11bf8 <avl_insere_impl@@Base+0x2e8>
   11934:	beq	11a24 <avl_insere_impl@@Base+0x114>
   11938:	mov	r1, r6
   1193c:	ldr	r0, [r5, #8]
   11940:	bl	11910 <avl_insere_impl@@Base>
   11944:	mov	r4, r0
   11948:	ldr	r0, [r5, #4]
   1194c:	str	r4, [r5, #8]
   11950:	cmp	r0, #0
   11954:	beq	11a4c <avl_insere_impl@@Base+0x13c>
   11958:	cmp	r4, #0
   1195c:	ldr	r3, [r0, #12]
   11960:	beq	11a30 <avl_insere_impl@@Base+0x120>
   11964:	ldr	r2, [r4, #12]
   11968:	cmp	r3, r2
   1196c:	movlt	r3, r2
   11970:	add	r3, r3, #1
   11974:	str	r3, [r5, #12]
   11978:	ldr	r3, [r4, #12]
   1197c:	ldr	r2, [r0, #12]
   11980:	sub	r3, r3, r2
   11984:	cmp	r3, #1
   11988:	ble	11a74 <avl_insere_impl@@Base+0x164>
   1198c:	cmp	r4, #0
   11990:	beq	11c10 <avl_insere_impl@@Base+0x300>
   11994:	ldmib	r4, {r2, r3}
   11998:	cmp	r3, #0
   1199c:	beq	11c18 <avl_insere_impl@@Base+0x308>
   119a0:	cmp	r2, #0
   119a4:	ldr	r3, [r3, #12]
   119a8:	mvneq	r1, #0
   119ac:	beq	119b4 <avl_insere_impl@@Base+0xa4>
   119b0:	ldr	r1, [r2, #12]
   119b4:	sub	r3, r3, r1
   119b8:	cmp	r3, #0
   119bc:	blt	11b48 <avl_insere_impl@@Base+0x238>
   119c0:	str	r5, [r4, #4]
   119c4:	ldr	r3, [r5, #4]
   119c8:	str	r2, [r5, #8]
   119cc:	cmp	r3, #0
   119d0:	mvneq	r1, #0
   119d4:	beq	119dc <avl_insere_impl@@Base+0xcc>
   119d8:	ldr	r1, [r3, #12]
   119dc:	cmp	r2, #0
   119e0:	mvneq	r3, #0
   119e4:	ldrne	r3, [r2, #12]
   119e8:	cmp	r3, r1
   119ec:	ldr	r2, [r4, #8]
   119f0:	movlt	r3, r1
   119f4:	add	r3, r3, #1
   119f8:	cmp	r2, #0
   119fc:	str	r3, [r5, #12]
   11a00:	beq	11ce4 <avl_insere_impl@@Base+0x3d4>
   11a04:	ldr	r2, [r2, #12]
   11a08:	cmp	r3, r2
   11a0c:	movlt	r3, r2
   11a10:	add	r3, r3, #1
   11a14:	str	r3, [r4, #12]
   11a18:	mov	r0, r4
   11a1c:	pop	{r4, r5, r6, r7, r8, pc}
   11a20:	str	r4, [r5, #12]
   11a24:	mov	r4, r5
   11a28:	mov	r0, r4
   11a2c:	pop	{r4, r5, r6, r7, r8, pc}
   11a30:	mvn	r2, #0
   11a34:	cmp	r3, r2
   11a38:	movlt	r3, r2
   11a3c:	add	r3, r3, #1
   11a40:	str	r3, [r5, #12]
   11a44:	mov	r3, r2
   11a48:	b	1197c <avl_insere_impl@@Base+0x6c>
   11a4c:	cmp	r4, #0
   11a50:	beq	11a20 <avl_insere_impl@@Base+0x110>
   11a54:	ldr	r3, [r4, #12]
   11a58:	orr	r3, r3, r3, asr #31
   11a5c:	add	r3, r3, #1
   11a60:	str	r3, [r5, #12]
   11a64:	ldr	r3, [r4, #12]
   11a68:	add	r3, r3, #1
   11a6c:	cmp	r3, #1
   11a70:	bgt	11994 <avl_insere_impl@@Base+0x84>
   11a74:	cmn	r3, #1
   11a78:	bge	11a24 <avl_insere_impl@@Base+0x114>
   11a7c:	cmp	r0, #0
   11a80:	ldr	r4, [r0, #8]
   11a84:	beq	11cec <avl_insere_impl@@Base+0x3dc>
   11a88:	cmp	r4, #0
   11a8c:	ldr	r2, [r0, #4]
   11a90:	beq	11c44 <avl_insere_impl@@Base+0x334>
   11a94:	cmp	r2, #0
   11a98:	ldr	r3, [r4, #12]
   11a9c:	beq	11d44 <avl_insere_impl@@Base+0x434>
   11aa0:	ldr	r2, [r2, #12]
   11aa4:	sub	r3, r3, r2
   11aa8:	cmp	r3, #0
   11aac:	ble	11cec <avl_insere_impl@@Base+0x3dc>
   11ab0:	ldr	r3, [r4, #4]
   11ab4:	str	r0, [r4, #4]
   11ab8:	ldr	r2, [r0, #4]
   11abc:	str	r3, [r0, #8]
   11ac0:	cmp	r2, #0
   11ac4:	mvneq	r2, #0
   11ac8:	ldrne	r2, [r2, #12]
   11acc:	cmp	r3, #0
   11ad0:	beq	11d58 <avl_insere_impl@@Base+0x448>
   11ad4:	ldr	r3, [r3, #12]
   11ad8:	cmp	r2, r3
   11adc:	movlt	r2, r3
   11ae0:	add	r2, r2, #1
   11ae4:	ldr	r1, [r4, #8]
   11ae8:	str	r2, [r0, #12]
   11aec:	cmp	r1, #0
   11af0:	beq	11d64 <avl_insere_impl@@Base+0x454>
   11af4:	ldr	r3, [r1, #12]
   11af8:	str	r5, [r4, #8]
   11afc:	cmp	r2, r3
   11b00:	movlt	r2, r3
   11b04:	add	r2, r2, #1
   11b08:	str	r2, [r4, #12]
   11b0c:	ldr	r2, [r1, #12]
   11b10:	str	r1, [r5, #4]
   11b14:	ldr	r3, [r5, #8]
   11b18:	ldr	r1, [r4, #4]
   11b1c:	cmp	r3, #0
   11b20:	mvneq	r3, #0
   11b24:	ldrne	r3, [r3, #12]
   11b28:	cmp	r3, r2
   11b2c:	movlt	r3, r2
   11b30:	add	r3, r3, #1
   11b34:	cmp	r1, #0
   11b38:	str	r3, [r5, #12]
   11b3c:	beq	11ce4 <avl_insere_impl@@Base+0x3d4>
   11b40:	ldr	r2, [r1, #12]
   11b44:	b	11a08 <avl_insere_impl@@Base+0xf8>
   11b48:	ldr	r3, [r2, #8]
   11b4c:	str	r4, [r2, #8]
   11b50:	cmp	r3, #0
   11b54:	str	r3, [r4, #4]
   11b58:	ldrne	r1, [r3, #12]
   11b5c:	ldr	r3, [r4, #8]
   11b60:	mvneq	r1, #0
   11b64:	cmp	r3, #0
   11b68:	mvneq	r3, #0
   11b6c:	ldrne	r3, [r3, #12]
   11b70:	ldr	r0, [r2, #4]
   11b74:	cmp	r3, r1
   11b78:	movlt	r3, r1
   11b7c:	add	r3, r3, #1
   11b80:	cmp	r0, #0
   11b84:	str	r3, [r4, #12]
   11b88:	beq	11d04 <avl_insere_impl@@Base+0x3f4>
   11b8c:	ldr	ip, [r0, #12]
   11b90:	str	r5, [r2, #4]
   11b94:	ldr	r1, [r5, #4]
   11b98:	cmp	r3, ip
   11b9c:	movlt	r3, ip
   11ba0:	cmp	r1, #0
   11ba4:	add	r3, r3, #1
   11ba8:	str	r3, [r2, #12]
   11bac:	ldrne	r3, [r1, #12]
   11bb0:	ldr	r1, [r0, #12]
   11bb4:	mvneq	r3, #0
   11bb8:	cmp	r3, r1
   11bbc:	movlt	r3, r1
   11bc0:	add	r3, r3, #1
   11bc4:	str	r0, [r5, #8]
   11bc8:	ldr	r1, [r2, #8]
   11bcc:	str	r3, [r5, #12]
   11bd0:	cmp	r1, #0
   11bd4:	mvneq	r1, #0
   11bd8:	ldrne	r1, [r1, #12]
   11bdc:	mov	r4, r2
   11be0:	cmp	r1, r3
   11be4:	movge	r3, r1
   11be8:	add	r3, r3, #1
   11bec:	str	r3, [r2, #12]
   11bf0:	mov	r0, r4
   11bf4:	pop	{r4, r5, r6, r7, r8, pc}
   11bf8:	mov	r1, r6
   11bfc:	ldr	r0, [r5, #4]
   11c00:	bl	11910 <avl_insere_impl@@Base>
   11c04:	ldr	r4, [r5, #8]
   11c08:	str	r0, [r5, #4]
   11c0c:	b	11950 <avl_insere_impl@@Base+0x40>
   11c10:	ldr	r2, [r4, #4]
   11c14:	b	119c0 <avl_insere_impl@@Base+0xb0>
   11c18:	cmp	r2, #0
   11c1c:	mvnne	r3, #0
   11c20:	bne	119b0 <avl_insere_impl@@Base+0xa0>
   11c24:	str	r5, [r4, #4]
   11c28:	ldr	r3, [r5, #4]
   11c2c:	str	r2, [r5, #8]
   11c30:	cmp	r3, #0
   11c34:	bne	119d8 <avl_insere_impl@@Base+0xc8>
   11c38:	mvn	r1, #0
   11c3c:	mov	r3, r1
   11c40:	b	119e8 <avl_insere_impl@@Base+0xd8>
   11c44:	cmp	r2, #0
   11c48:	mvnne	r3, #0
   11c4c:	bne	11aa0 <avl_insere_impl@@Base+0x190>
   11c50:	mvn	r1, #0
   11c54:	str	r5, [r0, #8]
   11c58:	str	r2, [r5, #4]
   11c5c:	ldr	r3, [r5, #8]
   11c60:	ldr	r2, [r0, #4]
   11c64:	cmp	r3, #0
   11c68:	mvneq	r3, #0
   11c6c:	ldrne	r3, [r3, #12]
   11c70:	mov	r4, r0
   11c74:	cmp	r3, r1
   11c78:	movlt	r3, r1
   11c7c:	cmp	r2, #0
   11c80:	add	r3, r3, #1
   11c84:	str	r3, [r5, #12]
   11c88:	ldrne	r2, [r2, #12]
   11c8c:	mvneq	r2, #0
   11c90:	cmp	r3, r2
   11c94:	movlt	r3, r2
   11c98:	add	r3, r3, #1
   11c9c:	str	r3, [r0, #12]
   11ca0:	b	11a18 <avl_insere_impl@@Base+0x108>
   11ca4:	mov	r0, #16
   11ca8:	bl	10f54 <malloc@plt>
   11cac:	mov	r4, r0
   11cb0:	mov	r0, r6
   11cb4:	bl	10f78 <strlen@plt>
   11cb8:	add	r7, r0, #1
   11cbc:	mov	r0, r7
   11cc0:	bl	10f54 <malloc@plt>
   11cc4:	mov	r2, r7
   11cc8:	mov	r1, r6
   11ccc:	str	r0, [r4]
   11cd0:	bl	10f24 <memcpy@plt>
   11cd4:	str	r5, [r4, #4]
   11cd8:	str	r5, [r4, #8]
   11cdc:	str	r5, [r4, #12]
   11ce0:	b	11a18 <avl_insere_impl@@Base+0x108>
   11ce4:	mvn	r2, #0
   11ce8:	b	11a08 <avl_insere_impl@@Base+0xf8>
   11cec:	cmp	r4, #0
   11cf0:	str	r5, [r0, #8]
   11cf4:	str	r4, [r5, #4]
   11cf8:	beq	11d88 <avl_insere_impl@@Base+0x478>
   11cfc:	ldr	r1, [r4, #12]
   11d00:	b	11c5c <avl_insere_impl@@Base+0x34c>
   11d04:	mvn	ip, #0
   11d08:	cmp	r3, ip
   11d0c:	str	r5, [r2, #4]
   11d10:	ldr	r1, [r5, #4]
   11d14:	movlt	r3, ip
   11d18:	add	r3, r3, #1
   11d1c:	cmp	r1, #0
   11d20:	str	r3, [r2, #12]
   11d24:	str	r0, [r5, #8]
   11d28:	moveq	r3, r1
   11d2c:	beq	11bc8 <avl_insere_impl@@Base+0x2b8>
   11d30:	ldr	r3, [r1, #12]
   11d34:	cmp	r3, ip
   11d38:	movlt	r3, ip
   11d3c:	add	r3, r3, #1
   11d40:	b	11bc8 <avl_insere_impl@@Base+0x2b8>
   11d44:	cmp	r3, #0
   11d48:	bge	11ab0 <avl_insere_impl@@Base+0x1a0>
   11d4c:	str	r5, [r0, #8]
   11d50:	str	r4, [r5, #4]
   11d54:	b	11cfc <avl_insere_impl@@Base+0x3ec>
   11d58:	orr	r2, r2, r2, asr #31
   11d5c:	add	r2, r2, #1
   11d60:	b	11ae4 <avl_insere_impl@@Base+0x1d4>
   11d64:	mvn	r3, #0
   11d68:	cmp	r2, r3
   11d6c:	movlt	r2, r3
   11d70:	add	r2, r2, #1
   11d74:	str	r2, [r4, #12]
   11d78:	str	r5, [r4, #8]
   11d7c:	mov	r2, r3
   11d80:	str	r1, [r5, #4]
   11d84:	b	11b14 <avl_insere_impl@@Base+0x204>
   11d88:	mvn	r1, #0
   11d8c:	b	11c5c <avl_insere_impl@@Base+0x34c>

00011d90 <avl_insere@@Base>:
   11d90:	cmp	r1, #0
   11d94:	cmpne	r0, #0
   11d98:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11d9c:	moveq	r8, #1
   11da0:	movne	r8, #0
   11da4:	beq	1229c <avl_insere@@Base+0x50c>
   11da8:	ldr	r5, [r0]
   11dac:	mov	r6, r1
   11db0:	cmp	r5, #0
   11db4:	mov	r7, r0
   11db8:	beq	12418 <avl_insere@@Base+0x688>
   11dbc:	ldr	r1, [r5]
   11dc0:	mov	r0, r6
   11dc4:	bl	10ee8 <strcmp@plt>
   11dc8:	cmp	r0, #0
   11dcc:	blt	12284 <avl_insere@@Base+0x4f4>
   11dd0:	beq	11fac <avl_insere@@Base+0x21c>
   11dd4:	ldr	r4, [r5, #8]
   11dd8:	cmp	r4, #0
   11ddc:	beq	124a8 <avl_insere@@Base+0x718>
   11de0:	ldr	r1, [r4]
   11de4:	mov	r0, r6
   11de8:	bl	10ee8 <strcmp@plt>
   11dec:	cmp	r0, #0
   11df0:	blt	12374 <avl_insere@@Base+0x5e4>
   11df4:	beq	11ed8 <avl_insere@@Base+0x148>
   11df8:	mov	r1, r6
   11dfc:	ldr	r0, [r4, #8]
   11e00:	bl	11910 <avl_insere_impl@@Base>
   11e04:	ldr	r1, [r4, #4]
   11e08:	str	r0, [r4, #8]
   11e0c:	cmp	r1, #0
   11e10:	beq	11fb8 <avl_insere@@Base+0x228>
   11e14:	cmp	r0, #0
   11e18:	ldr	r3, [r1, #12]
   11e1c:	beq	12458 <avl_insere@@Base+0x6c8>
   11e20:	ldr	r2, [r0, #12]
   11e24:	cmp	r3, r2
   11e28:	movlt	r3, r2
   11e2c:	add	r3, r3, #1
   11e30:	str	r3, [r4, #12]
   11e34:	ldr	r3, [r0, #12]
   11e38:	ldr	r2, [r1, #12]
   11e3c:	sub	r3, r3, r2
   11e40:	cmp	r3, #1
   11e44:	ble	11fe0 <avl_insere@@Base+0x250>
   11e48:	cmp	r0, #0
   11e4c:	beq	12474 <avl_insere@@Base+0x6e4>
   11e50:	ldmib	r0, {r2, r3}
   11e54:	cmp	r3, #0
   11e58:	beq	1247c <avl_insere@@Base+0x6ec>
   11e5c:	cmp	r2, #0
   11e60:	ldr	r3, [r3, #12]
   11e64:	mvneq	r1, #0
   11e68:	beq	11e70 <avl_insere@@Base+0xe0>
   11e6c:	ldr	r1, [r2, #12]
   11e70:	sub	r3, r3, r1
   11e74:	cmp	r3, #0
   11e78:	blt	122c8 <avl_insere@@Base+0x538>
   11e7c:	str	r4, [r0, #4]
   11e80:	ldr	r3, [r4, #4]
   11e84:	str	r2, [r4, #8]
   11e88:	cmp	r3, #0
   11e8c:	mvneq	r1, #0
   11e90:	beq	11e98 <avl_insere@@Base+0x108>
   11e94:	ldr	r1, [r3, #12]
   11e98:	cmp	r2, #0
   11e9c:	mvneq	r3, #0
   11ea0:	ldrne	r3, [r2, #12]
   11ea4:	ldr	r2, [r0, #8]
   11ea8:	cmp	r3, r1
   11eac:	movlt	r3, r1
   11eb0:	cmp	r2, #0
   11eb4:	add	r3, r3, #1
   11eb8:	str	r3, [r4, #12]
   11ebc:	ldrne	r2, [r2, #12]
   11ec0:	mvneq	r2, #0
   11ec4:	cmp	r3, r2
   11ec8:	movlt	r3, r2
   11ecc:	mov	r4, r0
   11ed0:	add	r3, r3, #1
   11ed4:	str	r3, [r0, #12]
   11ed8:	ldr	r0, [r5, #4]
   11edc:	str	r4, [r5, #8]
   11ee0:	cmp	r0, #0
   11ee4:	beq	120c8 <avl_insere@@Base+0x338>
   11ee8:	cmp	r4, #0
   11eec:	ldr	r3, [r0, #12]
   11ef0:	beq	122a4 <avl_insere@@Base+0x514>
   11ef4:	ldr	r2, [r4, #12]
   11ef8:	cmp	r3, r2
   11efc:	movlt	r3, r2
   11f00:	add	r3, r3, #1
   11f04:	str	r3, [r5, #12]
   11f08:	ldr	r3, [r4, #12]
   11f0c:	ldr	r2, [r0, #12]
   11f10:	sub	r3, r3, r2
   11f14:	cmp	r3, #1
   11f18:	ble	120f0 <avl_insere@@Base+0x360>
   11f1c:	cmp	r4, #0
   11f20:	beq	122c0 <avl_insere@@Base+0x530>
   11f24:	ldmib	r4, {r2, r3}
   11f28:	cmp	r3, #0
   11f2c:	beq	12390 <avl_insere@@Base+0x600>
   11f30:	cmp	r2, #0
   11f34:	ldr	r3, [r3, #12]
   11f38:	mvneq	r1, #0
   11f3c:	beq	11f44 <avl_insere@@Base+0x1b4>
   11f40:	ldr	r1, [r2, #12]
   11f44:	sub	r3, r3, r1
   11f48:	cmp	r3, #0
   11f4c:	blt	121d8 <avl_insere@@Base+0x448>
   11f50:	str	r5, [r4, #4]
   11f54:	ldr	r3, [r5, #4]
   11f58:	str	r2, [r5, #8]
   11f5c:	cmp	r3, #0
   11f60:	mvneq	r1, #0
   11f64:	beq	11f6c <avl_insere@@Base+0x1dc>
   11f68:	ldr	r1, [r3, #12]
   11f6c:	cmp	r2, #0
   11f70:	mvneq	r3, #0
   11f74:	ldrne	r3, [r2, #12]
   11f78:	ldr	r2, [r4, #8]
   11f7c:	cmp	r3, r1
   11f80:	movlt	r3, r1
   11f84:	cmp	r2, #0
   11f88:	add	r3, r3, #1
   11f8c:	str	r3, [r5, #12]
   11f90:	ldrne	r2, [r2, #12]
   11f94:	mvneq	r2, #0
   11f98:	cmp	r3, r2
   11f9c:	movlt	r3, r2
   11fa0:	mov	r5, r4
   11fa4:	add	r3, r3, #1
   11fa8:	str	r3, [r4, #12]
   11fac:	str	r5, [r7]
   11fb0:	mov	r0, #0
   11fb4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11fb8:	cmp	r0, #0
   11fbc:	beq	125e8 <avl_insere@@Base+0x858>
   11fc0:	ldr	r3, [r0, #12]
   11fc4:	orr	r3, r3, r3, asr #31
   11fc8:	add	r3, r3, #1
   11fcc:	str	r3, [r4, #12]
   11fd0:	ldr	r3, [r0, #12]
   11fd4:	add	r3, r3, #1
   11fd8:	cmp	r3, #1
   11fdc:	bgt	11e50 <avl_insere@@Base+0xc0>
   11fe0:	cmn	r3, #1
   11fe4:	bge	11ed8 <avl_insere@@Base+0x148>
   11fe8:	cmp	r1, #0
   11fec:	ldr	r3, [r1, #8]
   11ff0:	beq	12530 <avl_insere@@Base+0x7a0>
   11ff4:	cmp	r3, #0
   11ff8:	ldr	r0, [r1, #4]
   11ffc:	beq	12610 <avl_insere@@Base+0x880>
   12000:	cmp	r0, #0
   12004:	ldr	r2, [r3, #12]
   12008:	beq	12650 <avl_insere@@Base+0x8c0>
   1200c:	ldr	r0, [r0, #12]
   12010:	sub	r2, r2, r0
   12014:	cmp	r2, #0
   12018:	ble	12530 <avl_insere@@Base+0x7a0>
   1201c:	ldr	r2, [r3, #4]
   12020:	str	r1, [r3, #4]
   12024:	ldr	r0, [r1, #4]
   12028:	str	r2, [r1, #8]
   1202c:	cmp	r0, #0
   12030:	mvneq	r0, #0
   12034:	ldrne	r0, [r0, #12]
   12038:	cmp	r2, #0
   1203c:	beq	12664 <avl_insere@@Base+0x8d4>
   12040:	ldr	r2, [r2, #12]
   12044:	cmp	r0, r2
   12048:	movlt	r0, r2
   1204c:	add	r0, r0, #1
   12050:	ldr	ip, [r3, #8]
   12054:	str	r0, [r1, #12]
   12058:	cmp	ip, #0
   1205c:	beq	12678 <avl_insere@@Base+0x8e8>
   12060:	ldr	r2, [ip, #12]
   12064:	str	r4, [r3, #8]
   12068:	cmp	r0, r2
   1206c:	movlt	r0, r2
   12070:	add	r0, r0, #1
   12074:	str	r0, [r3, #12]
   12078:	ldr	r1, [ip, #12]
   1207c:	str	ip, [r4, #4]
   12080:	ldr	r2, [r4, #8]
   12084:	ldr	r0, [r3, #4]
   12088:	cmp	r2, #0
   1208c:	mvneq	r2, #0
   12090:	ldrne	r2, [r2, #12]
   12094:	cmp	r2, r1
   12098:	movlt	r2, r1
   1209c:	cmp	r0, #0
   120a0:	add	r2, r2, #1
   120a4:	str	r2, [r4, #12]
   120a8:	ldrne	r1, [r0, #12]
   120ac:	mvneq	r1, #0
   120b0:	cmp	r2, r1
   120b4:	movlt	r2, r1
   120b8:	add	r2, r2, #1
   120bc:	str	r2, [r3, #12]
   120c0:	mov	r4, r3
   120c4:	b	11ed8 <avl_insere@@Base+0x148>
   120c8:	cmp	r4, #0
   120cc:	beq	12528 <avl_insere@@Base+0x798>
   120d0:	ldr	r3, [r4, #12]
   120d4:	orr	r3, r3, r3, asr #31
   120d8:	add	r3, r3, #1
   120dc:	str	r3, [r5, #12]
   120e0:	ldr	r3, [r4, #12]
   120e4:	add	r3, r3, #1
   120e8:	cmp	r3, #1
   120ec:	bgt	11f24 <avl_insere@@Base+0x194>
   120f0:	cmn	r3, #1
   120f4:	bge	11fac <avl_insere@@Base+0x21c>
   120f8:	cmp	r0, #0
   120fc:	ldr	r3, [r0, #8]
   12100:	beq	123bc <avl_insere@@Base+0x62c>
   12104:	cmp	r3, #0
   12108:	ldr	r1, [r0, #4]
   1210c:	beq	125cc <avl_insere@@Base+0x83c>
   12110:	cmp	r1, #0
   12114:	ldr	r2, [r3, #12]
   12118:	beq	125f0 <avl_insere@@Base+0x860>
   1211c:	ldr	r1, [r1, #12]
   12120:	sub	r2, r2, r1
   12124:	cmp	r2, #0
   12128:	ble	123bc <avl_insere@@Base+0x62c>
   1212c:	ldr	r2, [r3, #4]
   12130:	str	r0, [r3, #4]
   12134:	ldr	r1, [r0, #4]
   12138:	str	r2, [r0, #8]
   1213c:	cmp	r1, #0
   12140:	mvneq	r1, #0
   12144:	ldrne	r1, [r1, #12]
   12148:	cmp	r2, #0
   1214c:	beq	12604 <avl_insere@@Base+0x874>
   12150:	ldr	r2, [r2, #12]
   12154:	cmp	r1, r2
   12158:	movlt	r1, r2
   1215c:	add	r1, r1, #1
   12160:	ldr	ip, [r3, #8]
   12164:	str	r1, [r0, #12]
   12168:	cmp	ip, #0
   1216c:	beq	1262c <avl_insere@@Base+0x89c>
   12170:	ldr	r2, [ip, #12]
   12174:	str	r5, [r3, #8]
   12178:	cmp	r1, r2
   1217c:	movlt	r1, r2
   12180:	add	r1, r1, #1
   12184:	str	r1, [r3, #12]
   12188:	ldr	r1, [ip, #12]
   1218c:	str	ip, [r5, #4]
   12190:	ldr	r2, [r5, #8]
   12194:	ldr	r0, [r3, #4]
   12198:	cmp	r2, #0
   1219c:	mvneq	r2, #0
   121a0:	ldrne	r2, [r2, #12]
   121a4:	cmp	r2, r1
   121a8:	movlt	r2, r1
   121ac:	cmp	r0, #0
   121b0:	add	r2, r2, #1
   121b4:	str	r2, [r5, #12]
   121b8:	ldrne	r1, [r0, #12]
   121bc:	mvneq	r1, #0
   121c0:	cmp	r2, r1
   121c4:	movlt	r2, r1
   121c8:	add	r2, r2, #1
   121cc:	str	r2, [r3, #12]
   121d0:	mov	r5, r3
   121d4:	b	11fac <avl_insere@@Base+0x21c>
   121d8:	ldr	r3, [r2, #8]
   121dc:	str	r4, [r2, #8]
   121e0:	cmp	r3, #0
   121e4:	str	r3, [r4, #4]
   121e8:	ldrne	r1, [r3, #12]
   121ec:	ldr	r3, [r4, #8]
   121f0:	mvneq	r1, #0
   121f4:	cmp	r3, #0
   121f8:	mvneq	r3, #0
   121fc:	ldrne	r3, [r3, #12]
   12200:	ldr	r0, [r2, #4]
   12204:	cmp	r3, r1
   12208:	movlt	r3, r1
   1220c:	add	r3, r3, #1
   12210:	cmp	r0, #0
   12214:	str	r3, [r4, #12]
   12218:	beq	124e8 <avl_insere@@Base+0x758>
   1221c:	ldr	ip, [r0, #12]
   12220:	str	r5, [r2, #4]
   12224:	ldr	r1, [r5, #4]
   12228:	cmp	r3, ip
   1222c:	movlt	r3, ip
   12230:	cmp	r1, #0
   12234:	add	r3, r3, #1
   12238:	str	r3, [r2, #12]
   1223c:	ldrne	r3, [r1, #12]
   12240:	ldr	r1, [r0, #12]
   12244:	mvneq	r3, #0
   12248:	cmp	r3, r1
   1224c:	movlt	r3, r1
   12250:	add	r3, r3, #1
   12254:	str	r0, [r5, #8]
   12258:	ldr	r1, [r2, #8]
   1225c:	str	r3, [r5, #12]
   12260:	cmp	r1, #0
   12264:	mvneq	r1, #0
   12268:	ldrne	r1, [r1, #12]
   1226c:	mov	r5, r2
   12270:	cmp	r3, r1
   12274:	movlt	r3, r1
   12278:	add	r3, r3, #1
   1227c:	str	r3, [r2, #12]
   12280:	b	11fac <avl_insere@@Base+0x21c>
   12284:	mov	r1, r6
   12288:	ldr	r0, [r5, #4]
   1228c:	bl	11910 <avl_insere_impl@@Base>
   12290:	ldr	r4, [r5, #8]
   12294:	str	r0, [r5, #4]
   12298:	b	11ee0 <avl_insere@@Base+0x150>
   1229c:	mvn	r0, #0
   122a0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   122a4:	mvn	r2, #0
   122a8:	cmp	r3, r2
   122ac:	movlt	r3, r2
   122b0:	add	r3, r3, #1
   122b4:	str	r3, [r5, #12]
   122b8:	mov	r3, r2
   122bc:	b	11f0c <avl_insere@@Base+0x17c>
   122c0:	ldr	r2, [r4, #4]
   122c4:	b	11f50 <avl_insere@@Base+0x1c0>
   122c8:	ldr	r3, [r2, #8]
   122cc:	str	r0, [r2, #8]
   122d0:	cmp	r3, #0
   122d4:	str	r3, [r0, #4]
   122d8:	ldrne	ip, [r3, #12]
   122dc:	ldr	r3, [r0, #8]
   122e0:	mvneq	ip, #0
   122e4:	cmp	r3, #0
   122e8:	mvneq	r3, #0
   122ec:	ldrne	r3, [r3, #12]
   122f0:	ldr	r1, [r2, #4]
   122f4:	cmp	r3, ip
   122f8:	movlt	r3, ip
   122fc:	add	r3, r3, #1
   12300:	cmp	r1, #0
   12304:	str	r3, [r0, #12]
   12308:	beq	1258c <avl_insere@@Base+0x7fc>
   1230c:	ldr	ip, [r1, #12]
   12310:	str	r4, [r2, #4]
   12314:	ldr	r0, [r4, #4]
   12318:	cmp	r3, ip
   1231c:	movlt	r3, ip
   12320:	cmp	r0, #0
   12324:	add	r3, r3, #1
   12328:	str	r3, [r2, #12]
   1232c:	str	r1, [r4, #8]
   12330:	ldrne	r3, [r0, #12]
   12334:	ldr	r1, [r1, #12]
   12338:	mvneq	r3, #0
   1233c:	cmp	r3, r1
   12340:	movlt	r3, r1
   12344:	add	r3, r3, #1
   12348:	ldr	r1, [r2, #8]
   1234c:	str	r3, [r4, #12]
   12350:	cmp	r1, #0
   12354:	mvneq	r1, #0
   12358:	ldrne	r1, [r1, #12]
   1235c:	mov	r4, r2
   12360:	cmp	r1, r3
   12364:	movge	r3, r1
   12368:	add	r3, r3, #1
   1236c:	str	r3, [r2, #12]
   12370:	b	11ed8 <avl_insere@@Base+0x148>
   12374:	mov	r1, r6
   12378:	ldr	r0, [r4, #4]
   1237c:	bl	11910 <avl_insere_impl@@Base>
   12380:	mov	r1, r0
   12384:	str	r0, [r4, #4]
   12388:	ldr	r0, [r4, #8]
   1238c:	b	11e0c <avl_insere@@Base+0x7c>
   12390:	cmp	r2, #0
   12394:	mvnne	r3, #0
   12398:	bne	11f40 <avl_insere@@Base+0x1b0>
   1239c:	str	r5, [r4, #4]
   123a0:	ldr	r3, [r5, #4]
   123a4:	str	r2, [r5, #8]
   123a8:	cmp	r3, #0
   123ac:	bne	11f68 <avl_insere@@Base+0x1d8>
   123b0:	mvn	r1, #0
   123b4:	mov	r3, r1
   123b8:	b	11f78 <avl_insere@@Base+0x1e8>
   123bc:	cmp	r3, #0
   123c0:	str	r5, [r0, #8]
   123c4:	str	r3, [r5, #4]
   123c8:	beq	12670 <avl_insere@@Base+0x8e0>
   123cc:	ldr	r2, [r3, #12]
   123d0:	ldr	r3, [r5, #8]
   123d4:	ldr	r1, [r0, #4]
   123d8:	cmp	r3, #0
   123dc:	mvneq	r3, #0
   123e0:	ldrne	r3, [r3, #12]
   123e4:	cmp	r3, r2
   123e8:	movlt	r3, r2
   123ec:	cmp	r1, #0
   123f0:	add	r3, r3, #1
   123f4:	str	r3, [r5, #12]
   123f8:	ldrne	r2, [r1, #12]
   123fc:	mvneq	r2, #0
   12400:	cmp	r3, r2
   12404:	movlt	r3, r2
   12408:	add	r3, r3, #1
   1240c:	mov	r5, r0
   12410:	str	r3, [r0, #12]
   12414:	b	11fac <avl_insere@@Base+0x21c>
   12418:	mov	r0, #16
   1241c:	bl	10f54 <malloc@plt>
   12420:	mov	r5, r0
   12424:	mov	r0, r6
   12428:	bl	10f78 <strlen@plt>
   1242c:	add	r4, r0, #1
   12430:	mov	r0, r4
   12434:	bl	10f54 <malloc@plt>
   12438:	mov	r2, r4
   1243c:	mov	r1, r6
   12440:	str	r0, [r5]
   12444:	bl	10f24 <memcpy@plt>
   12448:	str	r8, [r5, #4]
   1244c:	str	r8, [r5, #8]
   12450:	str	r8, [r5, #12]
   12454:	b	11fac <avl_insere@@Base+0x21c>
   12458:	mvn	r2, #0
   1245c:	cmp	r3, r2
   12460:	movlt	r3, r2
   12464:	add	r3, r3, #1
   12468:	str	r3, [r4, #12]
   1246c:	mov	r3, r2
   12470:	b	11e38 <avl_insere@@Base+0xa8>
   12474:	ldr	r2, [r0, #4]
   12478:	b	11e7c <avl_insere@@Base+0xec>
   1247c:	cmp	r2, #0
   12480:	mvnne	r3, #0
   12484:	bne	11e6c <avl_insere@@Base+0xdc>
   12488:	str	r4, [r0, #4]
   1248c:	ldr	r3, [r4, #4]
   12490:	str	r2, [r4, #8]
   12494:	cmp	r3, #0
   12498:	bne	11e94 <avl_insere@@Base+0x104>
   1249c:	mvn	r1, #0
   124a0:	mov	r3, r1
   124a4:	b	11ea4 <avl_insere@@Base+0x114>
   124a8:	mov	r0, #16
   124ac:	bl	10f54 <malloc@plt>
   124b0:	mov	r4, r0
   124b4:	mov	r0, r6
   124b8:	bl	10f78 <strlen@plt>
   124bc:	add	r9, r0, #1
   124c0:	mov	r0, r9
   124c4:	bl	10f54 <malloc@plt>
   124c8:	mov	r2, r9
   124cc:	mov	r1, r6
   124d0:	str	r0, [r4]
   124d4:	bl	10f24 <memcpy@plt>
   124d8:	str	r8, [r4, #4]
   124dc:	str	r8, [r4, #8]
   124e0:	str	r8, [r4, #12]
   124e4:	b	11ed8 <avl_insere@@Base+0x148>
   124e8:	mvn	ip, #0
   124ec:	cmp	r3, ip
   124f0:	str	r5, [r2, #4]
   124f4:	ldr	r1, [r5, #4]
   124f8:	movlt	r3, ip
   124fc:	add	r3, r3, #1
   12500:	cmp	r1, #0
   12504:	str	r3, [r2, #12]
   12508:	str	r0, [r5, #8]
   1250c:	moveq	r3, r1
   12510:	beq	12258 <avl_insere@@Base+0x4c8>
   12514:	ldr	r3, [r1, #12]
   12518:	cmp	r3, ip
   1251c:	movlt	r3, ip
   12520:	add	r3, r3, #1
   12524:	b	12258 <avl_insere@@Base+0x4c8>
   12528:	str	r4, [r5, #12]
   1252c:	b	11fac <avl_insere@@Base+0x21c>
   12530:	cmp	r3, #0
   12534:	str	r4, [r1, #8]
   12538:	str	r3, [r4, #4]
   1253c:	beq	126a0 <avl_insere@@Base+0x910>
   12540:	ldr	r2, [r3, #12]
   12544:	ldr	r3, [r4, #8]
   12548:	ldr	r0, [r1, #4]
   1254c:	cmp	r3, #0
   12550:	mvneq	r3, #0
   12554:	ldrne	r3, [r3, #12]
   12558:	cmp	r3, r2
   1255c:	movlt	r3, r2
   12560:	cmp	r0, #0
   12564:	add	r3, r3, #1
   12568:	str	r3, [r4, #12]
   1256c:	ldrne	r2, [r0, #12]
   12570:	mvneq	r2, #0
   12574:	cmp	r3, r2
   12578:	movlt	r3, r2
   1257c:	add	r3, r3, #1
   12580:	mov	r4, r1
   12584:	str	r3, [r1, #12]
   12588:	b	11ed8 <avl_insere@@Base+0x148>
   1258c:	mvn	ip, #0
   12590:	cmp	r3, ip
   12594:	str	r4, [r2, #4]
   12598:	ldr	r0, [r4, #4]
   1259c:	movlt	r3, ip
   125a0:	add	r3, r3, #1
   125a4:	cmp	r0, #0
   125a8:	str	r3, [r2, #12]
   125ac:	str	r1, [r4, #8]
   125b0:	moveq	r3, r0
   125b4:	beq	12348 <avl_insere@@Base+0x5b8>
   125b8:	ldr	r3, [r0, #12]
   125bc:	cmp	r3, ip
   125c0:	movlt	r3, ip
   125c4:	add	r3, r3, #1
   125c8:	b	12348 <avl_insere@@Base+0x5b8>
   125cc:	cmp	r1, #0
   125d0:	mvnne	r2, #0
   125d4:	bne	1211c <avl_insere@@Base+0x38c>
   125d8:	str	r5, [r0, #8]
   125dc:	mvn	r2, #0
   125e0:	str	r1, [r5, #4]
   125e4:	b	123d0 <avl_insere@@Base+0x640>
   125e8:	str	r0, [r4, #12]
   125ec:	b	11ed8 <avl_insere@@Base+0x148>
   125f0:	cmp	r2, #0
   125f4:	bge	1212c <avl_insere@@Base+0x39c>
   125f8:	str	r5, [r0, #8]
   125fc:	str	r3, [r5, #4]
   12600:	b	123cc <avl_insere@@Base+0x63c>
   12604:	orr	r1, r1, r1, asr #31
   12608:	add	r1, r1, #1
   1260c:	b	12160 <avl_insere@@Base+0x3d0>
   12610:	cmp	r0, #0
   12614:	mvnne	r2, #0
   12618:	bne	1200c <avl_insere@@Base+0x27c>
   1261c:	str	r4, [r1, #8]
   12620:	mvn	r2, #0
   12624:	str	r0, [r4, #4]
   12628:	b	12544 <avl_insere@@Base+0x7b4>
   1262c:	mvn	r2, #0
   12630:	cmp	r1, r2
   12634:	movlt	r1, r2
   12638:	add	r1, r1, #1
   1263c:	str	r1, [r3, #12]
   12640:	str	r5, [r3, #8]
   12644:	mov	r1, r2
   12648:	str	ip, [r5, #4]
   1264c:	b	12190 <avl_insere@@Base+0x400>
   12650:	cmp	r2, #0
   12654:	bge	1201c <avl_insere@@Base+0x28c>
   12658:	str	r4, [r1, #8]
   1265c:	str	r3, [r4, #4]
   12660:	b	12540 <avl_insere@@Base+0x7b0>
   12664:	orr	r0, r0, r0, asr #31
   12668:	add	r0, r0, #1
   1266c:	b	12050 <avl_insere@@Base+0x2c0>
   12670:	mvn	r2, #0
   12674:	b	123d0 <avl_insere@@Base+0x640>
   12678:	mvn	r2, #0
   1267c:	cmp	r0, r2
   12680:	movge	r1, r0
   12684:	movlt	r1, r2
   12688:	add	r1, r1, #1
   1268c:	str	r1, [r3, #12]
   12690:	str	r4, [r3, #8]
   12694:	mov	r1, r2
   12698:	str	ip, [r4, #4]
   1269c:	b	12080 <avl_insere@@Base+0x2f0>
   126a0:	mvn	r2, #0
   126a4:	b	12544 <avl_insere@@Base+0x7b4>

000126a8 <avl_no_valormin@@Base>:
   126a8:	b	126b0 <avl_no_valormin@@Base+0x8>
   126ac:	mov	r0, r3
   126b0:	ldr	r3, [r0, #4]
   126b4:	cmp	r3, #0
   126b8:	bne	126ac <avl_no_valormin@@Base+0x4>
   126bc:	bx	lr

000126c0 <avl_no_valormax@@Base>:
   126c0:	b	126c8 <avl_no_valormax@@Base+0x8>
   126c4:	mov	r0, r3
   126c8:	ldr	r3, [r0, #8]
   126cc:	cmp	r3, #0
   126d0:	bne	126c4 <avl_no_valormax@@Base+0x4>
   126d4:	bx	lr

000126d8 <avl_remove_impl@@Base>:
   126d8:	push	{r4, r5, r6, r7, r8, lr}
   126dc:	subs	r4, r0, #0
   126e0:	beq	12888 <avl_remove_impl@@Base+0x1b0>
   126e4:	ldr	r7, [r4]
   126e8:	mov	r0, r1
   126ec:	mov	r6, r1
   126f0:	mov	r1, r7
   126f4:	bl	10ee8 <strcmp@plt>
   126f8:	cmp	r0, #0
   126fc:	blt	129f8 <avl_remove_impl@@Base+0x320>
   12700:	beq	127ec <avl_remove_impl@@Base+0x114>
   12704:	mov	r1, r6
   12708:	ldr	r0, [r4, #8]
   1270c:	bl	126d8 <avl_remove_impl@@Base>
   12710:	mov	r5, r0
   12714:	str	r0, [r4, #8]
   12718:	ldr	r0, [r4, #4]
   1271c:	cmp	r0, #0
   12720:	beq	12858 <avl_remove_impl@@Base+0x180>
   12724:	cmp	r5, #0
   12728:	ldr	r3, [r0, #12]
   1272c:	beq	12a10 <avl_remove_impl@@Base+0x338>
   12730:	ldr	r2, [r5, #12]
   12734:	cmp	r3, r2
   12738:	movlt	r3, r2
   1273c:	add	r3, r3, #1
   12740:	str	r3, [r4, #12]
   12744:	ldr	r3, [r5, #12]
   12748:	ldr	r2, [r0, #12]
   1274c:	sub	r3, r3, r2
   12750:	cmp	r3, #1
   12754:	ble	12880 <avl_remove_impl@@Base+0x1a8>
   12758:	cmp	r5, #0
   1275c:	beq	12a2c <avl_remove_impl@@Base+0x354>
   12760:	ldmib	r5, {r2, r3}
   12764:	cmp	r3, #0
   12768:	beq	12a34 <avl_remove_impl@@Base+0x35c>
   1276c:	cmp	r2, #0
   12770:	ldr	r3, [r3, #12]
   12774:	mvneq	r1, #0
   12778:	beq	12780 <avl_remove_impl@@Base+0xa8>
   1277c:	ldr	r1, [r2, #12]
   12780:	sub	r3, r3, r1
   12784:	cmp	r3, #0
   12788:	blt	12948 <avl_remove_impl@@Base+0x270>
   1278c:	str	r4, [r5, #4]
   12790:	ldr	r3, [r4, #4]
   12794:	str	r2, [r4, #8]
   12798:	cmp	r3, #0
   1279c:	mvneq	r1, #0
   127a0:	beq	127a8 <avl_remove_impl@@Base+0xd0>
   127a4:	ldr	r1, [r3, #12]
   127a8:	cmp	r2, #0
   127ac:	mvneq	r3, #0
   127b0:	ldrne	r3, [r2, #12]
   127b4:	ldr	r2, [r5, #8]
   127b8:	cmp	r3, r1
   127bc:	movlt	r3, r1
   127c0:	cmp	r2, #0
   127c4:	add	r3, r3, #1
   127c8:	str	r3, [r4, #12]
   127cc:	ldrne	r2, [r2, #12]
   127d0:	mvneq	r2, #0
   127d4:	cmp	r3, r2
   127d8:	movlt	r3, r2
   127dc:	add	r3, r3, #1
   127e0:	str	r3, [r5, #12]
   127e4:	mov	r0, r5
   127e8:	pop	{r4, r5, r6, r7, r8, pc}
   127ec:	ldr	r5, [r4, #4]
   127f0:	cmp	r5, #0
   127f4:	beq	12b64 <avl_remove_impl@@Base+0x48c>
   127f8:	ldr	r6, [r4, #8]
   127fc:	cmp	r6, #0
   12800:	bne	1280c <avl_remove_impl@@Base+0x134>
   12804:	b	12a60 <avl_remove_impl@@Base+0x388>
   12808:	mov	r6, r3
   1280c:	ldr	r3, [r6, #4]
   12810:	cmp	r3, #0
   12814:	bne	12808 <avl_remove_impl@@Base+0x130>
   12818:	ldr	r0, [r6]
   1281c:	bl	10f78 <strlen@plt>
   12820:	add	r1, r0, #1
   12824:	mov	r0, r7
   12828:	bl	10f30 <realloc@plt>
   1282c:	str	r0, [r4]
   12830:	ldr	r1, [r6]
   12834:	bl	10f3c <strcpy@plt>
   12838:	ldr	r1, [r6]
   1283c:	ldr	r0, [r4, #8]
   12840:	bl	126d8 <avl_remove_impl@@Base>
   12844:	mov	r5, r0
   12848:	ldr	r0, [r4, #4]
   1284c:	str	r5, [r4, #8]
   12850:	cmp	r0, #0
   12854:	bne	12724 <avl_remove_impl@@Base+0x4c>
   12858:	cmp	r5, #0
   1285c:	beq	12b5c <avl_remove_impl@@Base+0x484>
   12860:	ldr	r3, [r5, #12]
   12864:	orr	r3, r3, r3, asr #31
   12868:	add	r3, r3, #1
   1286c:	str	r3, [r4, #12]
   12870:	ldr	r3, [r5, #12]
   12874:	add	r3, r3, #1
   12878:	cmp	r3, #1
   1287c:	bgt	12760 <avl_remove_impl@@Base+0x88>
   12880:	cmn	r3, #1
   12884:	blt	12894 <avl_remove_impl@@Base+0x1bc>
   12888:	mov	r5, r4
   1288c:	mov	r0, r5
   12890:	pop	{r4, r5, r6, r7, r8, pc}
   12894:	cmp	r0, #0
   12898:	ldr	r5, [r0, #8]
   1289c:	beq	12aa0 <avl_remove_impl@@Base+0x3c8>
   128a0:	cmp	r5, #0
   128a4:	ldr	r2, [r0, #4]
   128a8:	beq	12b84 <avl_remove_impl@@Base+0x4ac>
   128ac:	cmp	r2, #0
   128b0:	ldr	r3, [r5, #12]
   128b4:	beq	12afc <avl_remove_impl@@Base+0x424>
   128b8:	ldr	r2, [r2, #12]
   128bc:	sub	r3, r3, r2
   128c0:	cmp	r3, #0
   128c4:	ble	12aa0 <avl_remove_impl@@Base+0x3c8>
   128c8:	ldr	r2, [r5, #4]
   128cc:	str	r0, [r5, #4]
   128d0:	ldr	r3, [r0, #4]
   128d4:	str	r2, [r0, #8]
   128d8:	cmp	r3, #0
   128dc:	mvneq	r3, #0
   128e0:	ldrne	r3, [r3, #12]
   128e4:	cmp	r2, #0
   128e8:	beq	12b10 <avl_remove_impl@@Base+0x438>
   128ec:	ldr	r2, [r2, #12]
   128f0:	cmp	r3, r2
   128f4:	movlt	r3, r2
   128f8:	add	r3, r3, #1
   128fc:	ldr	r2, [r5, #8]
   12900:	str	r3, [r0, #12]
   12904:	cmp	r2, #0
   12908:	beq	12ba0 <avl_remove_impl@@Base+0x4c8>
   1290c:	ldr	r1, [r2, #12]
   12910:	str	r4, [r5, #8]
   12914:	cmp	r3, r1
   12918:	movlt	r3, r1
   1291c:	add	r3, r3, #1
   12920:	str	r3, [r5, #12]
   12924:	ldr	r1, [r2, #12]
   12928:	str	r2, [r4, #4]
   1292c:	ldr	r3, [r4, #8]
   12930:	ldr	r2, [r5, #4]
   12934:	cmp	r3, #0
   12938:	mvneq	r3, #0
   1293c:	ldrne	r3, [r3, #12]
   12940:	cmp	r3, r1
   12944:	b	127bc <avl_remove_impl@@Base+0xe4>
   12948:	ldr	r3, [r2, #8]
   1294c:	str	r5, [r2, #8]
   12950:	cmp	r3, #0
   12954:	str	r3, [r5, #4]
   12958:	ldrne	r1, [r3, #12]
   1295c:	ldr	r3, [r5, #8]
   12960:	mvneq	r1, #0
   12964:	cmp	r3, #0
   12968:	mvneq	r3, #0
   1296c:	ldrne	r3, [r3, #12]
   12970:	ldr	r0, [r2, #4]
   12974:	cmp	r3, r1
   12978:	movlt	r3, r1
   1297c:	add	r3, r3, #1
   12980:	cmp	r0, #0
   12984:	str	r3, [r5, #12]
   12988:	beq	12b1c <avl_remove_impl@@Base+0x444>
   1298c:	ldr	ip, [r0, #12]
   12990:	str	r4, [r2, #4]
   12994:	ldr	r1, [r4, #4]
   12998:	cmp	r3, ip
   1299c:	movlt	r3, ip
   129a0:	cmp	r1, #0
   129a4:	add	r3, r3, #1
   129a8:	str	r3, [r2, #12]
   129ac:	ldrne	r3, [r1, #12]
   129b0:	ldr	r1, [r0, #12]
   129b4:	mvneq	r3, #0
   129b8:	cmp	r3, r1
   129bc:	movlt	r3, r1
   129c0:	add	r3, r3, #1
   129c4:	str	r0, [r4, #8]
   129c8:	ldr	r1, [r2, #8]
   129cc:	str	r3, [r4, #12]
   129d0:	cmp	r1, #0
   129d4:	mvneq	r1, #0
   129d8:	ldrne	r1, [r1, #12]
   129dc:	mov	r5, r2
   129e0:	cmp	r3, r1
   129e4:	movlt	r3, r1
   129e8:	add	r3, r3, #1
   129ec:	str	r3, [r2, #12]
   129f0:	mov	r0, r5
   129f4:	pop	{r4, r5, r6, r7, r8, pc}
   129f8:	mov	r1, r6
   129fc:	ldr	r0, [r4, #4]
   12a00:	bl	126d8 <avl_remove_impl@@Base>
   12a04:	ldr	r5, [r4, #8]
   12a08:	str	r0, [r4, #4]
   12a0c:	b	1271c <avl_remove_impl@@Base+0x44>
   12a10:	mvn	r2, #0
   12a14:	cmp	r3, r2
   12a18:	movlt	r3, r2
   12a1c:	add	r3, r3, #1
   12a20:	str	r3, [r4, #12]
   12a24:	mov	r3, r2
   12a28:	b	12748 <avl_remove_impl@@Base+0x70>
   12a2c:	ldr	r2, [r5, #4]
   12a30:	b	1278c <avl_remove_impl@@Base+0xb4>
   12a34:	cmp	r2, #0
   12a38:	mvnne	r3, #0
   12a3c:	bne	1277c <avl_remove_impl@@Base+0xa4>
   12a40:	str	r4, [r5, #4]
   12a44:	ldr	r3, [r4, #4]
   12a48:	str	r2, [r4, #8]
   12a4c:	cmp	r3, #0
   12a50:	bne	127a4 <avl_remove_impl@@Base+0xcc>
   12a54:	mvn	r1, #0
   12a58:	mov	r3, r1
   12a5c:	b	127b4 <avl_remove_impl@@Base+0xdc>
   12a60:	ldr	r0, [r5]
   12a64:	bl	10f78 <strlen@plt>
   12a68:	add	r1, r0, #1
   12a6c:	mov	r0, r7
   12a70:	bl	10f30 <realloc@plt>
   12a74:	str	r0, [r4]
   12a78:	ldr	r1, [r5]
   12a7c:	bl	10f3c <strcpy@plt>
   12a80:	ldmib	r5, {r1, r2, r3}
   12a84:	ldr	r0, [r5]
   12a88:	stmib	r4, {r1, r2, r3}
   12a8c:	bl	10f18 <free@plt>
   12a90:	mov	r0, r5
   12a94:	bl	10f18 <free@plt>
   12a98:	ldmib	r4, {r0, r5}
   12a9c:	b	1271c <avl_remove_impl@@Base+0x44>
   12aa0:	cmp	r5, #0
   12aa4:	str	r4, [r0, #8]
   12aa8:	str	r5, [r4, #4]
   12aac:	beq	12bc0 <avl_remove_impl@@Base+0x4e8>
   12ab0:	ldr	r1, [r5, #12]
   12ab4:	ldr	r3, [r4, #8]
   12ab8:	ldr	r2, [r0, #4]
   12abc:	cmp	r3, #0
   12ac0:	mvneq	r3, #0
   12ac4:	ldrne	r3, [r3, #12]
   12ac8:	mov	r5, r0
   12acc:	cmp	r3, r1
   12ad0:	movlt	r3, r1
   12ad4:	cmp	r2, #0
   12ad8:	add	r3, r3, #1
   12adc:	str	r3, [r4, #12]
   12ae0:	ldrne	r2, [r2, #12]
   12ae4:	mvneq	r2, #0
   12ae8:	cmp	r3, r2
   12aec:	movlt	r3, r2
   12af0:	add	r3, r3, #1
   12af4:	str	r3, [r0, #12]
   12af8:	b	127e4 <avl_remove_impl@@Base+0x10c>
   12afc:	cmp	r3, #0
   12b00:	bge	128c8 <avl_remove_impl@@Base+0x1f0>
   12b04:	str	r4, [r0, #8]
   12b08:	str	r5, [r4, #4]
   12b0c:	b	12ab0 <avl_remove_impl@@Base+0x3d8>
   12b10:	orr	r3, r3, r3, asr #31
   12b14:	add	r3, r3, #1
   12b18:	b	128fc <avl_remove_impl@@Base+0x224>
   12b1c:	mvn	ip, #0
   12b20:	cmp	r3, ip
   12b24:	str	r4, [r2, #4]
   12b28:	ldr	r1, [r4, #4]
   12b2c:	movlt	r3, ip
   12b30:	add	r3, r3, #1
   12b34:	cmp	r1, #0
   12b38:	str	r3, [r2, #12]
   12b3c:	str	r0, [r4, #8]
   12b40:	moveq	r3, r1
   12b44:	beq	129c8 <avl_remove_impl@@Base+0x2f0>
   12b48:	ldr	r3, [r1, #12]
   12b4c:	cmp	r3, ip
   12b50:	movlt	r3, ip
   12b54:	add	r3, r3, #1
   12b58:	b	129c8 <avl_remove_impl@@Base+0x2f0>
   12b5c:	str	r5, [r4, #12]
   12b60:	b	12888 <avl_remove_impl@@Base+0x1b0>
   12b64:	ldr	r5, [r4, #8]
   12b68:	cmp	r5, #0
   12b6c:	bne	12a60 <avl_remove_impl@@Base+0x388>
   12b70:	mov	r0, r7
   12b74:	bl	10f18 <free@plt>
   12b78:	mov	r0, r4
   12b7c:	bl	10f18 <free@plt>
   12b80:	b	127e4 <avl_remove_impl@@Base+0x10c>
   12b84:	cmp	r2, #0
   12b88:	mvnne	r3, #0
   12b8c:	bne	128b8 <avl_remove_impl@@Base+0x1e0>
   12b90:	str	r4, [r0, #8]
   12b94:	mvn	r1, #0
   12b98:	str	r2, [r4, #4]
   12b9c:	b	12ab4 <avl_remove_impl@@Base+0x3dc>
   12ba0:	mvn	r1, #0
   12ba4:	cmp	r3, r1
   12ba8:	movlt	r3, r1
   12bac:	add	r3, r3, #1
   12bb0:	str	r4, [r5, #8]
   12bb4:	str	r3, [r5, #12]
   12bb8:	str	r2, [r4, #4]
   12bbc:	b	1292c <avl_remove_impl@@Base+0x254>
   12bc0:	mvn	r1, #0
   12bc4:	b	12ab4 <avl_remove_impl@@Base+0x3dc>

00012bc8 <avl_apaga@@Base>:
   12bc8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12bcc:	subs	r6, r0, #0
   12bd0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12bd4:	ldr	r4, [r6]
   12bd8:	cmp	r4, #0
   12bdc:	beq	12d44 <avl_apaga@@Base+0x17c>
   12be0:	ldr	r3, [r4, #4]
   12be4:	mvn	r7, #0
   12be8:	subs	r9, r3, #0
   12bec:	mov	r8, #0
   12bf0:	ldr	sl, [r4]
   12bf4:	beq	12d28 <avl_apaga@@Base+0x160>
   12bf8:	ldr	r5, [r4, #8]
   12bfc:	cmp	r5, #0
   12c00:	bne	12c0c <avl_apaga@@Base+0x44>
   12c04:	b	12d50 <avl_apaga@@Base+0x188>
   12c08:	mov	r5, r3
   12c0c:	ldr	r3, [r5, #4]
   12c10:	cmp	r3, #0
   12c14:	bne	12c08 <avl_apaga@@Base+0x40>
   12c18:	ldr	r0, [r5]
   12c1c:	bl	10f78 <strlen@plt>
   12c20:	add	r1, r0, #1
   12c24:	mov	r0, sl
   12c28:	bl	10f30 <realloc@plt>
   12c2c:	str	r0, [r4]
   12c30:	ldr	r1, [r5]
   12c34:	bl	10f3c <strcpy@plt>
   12c38:	ldr	r1, [r5]
   12c3c:	ldr	r0, [r4, #8]
   12c40:	bl	126d8 <avl_remove_impl@@Base>
   12c44:	ldr	r3, [r4, #4]
   12c48:	cmp	r3, #0
   12c4c:	str	r0, [r4, #8]
   12c50:	beq	12d98 <avl_apaga@@Base+0x1d0>
   12c54:	cmp	r0, #0
   12c58:	ldr	r2, [r3, #12]
   12c5c:	beq	12f60 <avl_apaga@@Base+0x398>
   12c60:	ldr	r1, [r0, #12]
   12c64:	cmp	r2, r1
   12c68:	movlt	r2, r1
   12c6c:	add	r2, r2, #1
   12c70:	str	r2, [r4, #12]
   12c74:	ldr	r2, [r0, #12]
   12c78:	ldr	r1, [r3, #12]
   12c7c:	sub	r2, r2, r1
   12c80:	cmp	r2, #1
   12c84:	ble	12dc4 <avl_apaga@@Base+0x1fc>
   12c88:	cmp	r0, #0
   12c8c:	beq	12f78 <avl_apaga@@Base+0x3b0>
   12c90:	ldmib	r0, {r2, r3}
   12c94:	cmp	r3, #0
   12c98:	beq	12f80 <avl_apaga@@Base+0x3b8>
   12c9c:	cmp	r2, #0
   12ca0:	ldr	r3, [r3, #12]
   12ca4:	moveq	r1, r7
   12ca8:	beq	12cb0 <avl_apaga@@Base+0xe8>
   12cac:	ldr	r1, [r2, #12]
   12cb0:	sub	r3, r3, r1
   12cb4:	cmp	r3, #0
   12cb8:	blt	12eb0 <avl_apaga@@Base+0x2e8>
   12cbc:	str	r4, [r0, #4]
   12cc0:	ldr	r3, [r4, #4]
   12cc4:	str	r2, [r4, #8]
   12cc8:	cmp	r3, #0
   12ccc:	moveq	r1, r7
   12cd0:	ldrne	r1, [r3, #12]
   12cd4:	cmp	r2, #0
   12cd8:	beq	12fa4 <avl_apaga@@Base+0x3dc>
   12cdc:	ldr	r3, [r2, #12]
   12ce0:	ldr	r2, [r0, #8]
   12ce4:	cmp	r3, r1
   12ce8:	movlt	r3, r1
   12cec:	cmp	r2, #0
   12cf0:	add	r3, r3, #1
   12cf4:	str	r3, [r4, #12]
   12cf8:	ldrne	r2, [r2, #12]
   12cfc:	moveq	r2, r7
   12d00:	cmp	r3, r2
   12d04:	movlt	r3, r2
   12d08:	add	r3, r3, #1
   12d0c:	str	r3, [r0, #12]
   12d10:	ldr	r3, [r0, #4]
   12d14:	mov	r4, r0
   12d18:	subs	r9, r3, #0
   12d1c:	str	r4, [r6]
   12d20:	ldr	sl, [r4]
   12d24:	bne	12bf8 <avl_apaga@@Base+0x30>
   12d28:	ldr	r9, [r4, #8]
   12d2c:	cmp	r9, #0
   12d30:	bne	12d50 <avl_apaga@@Base+0x188>
   12d34:	mov	r0, sl
   12d38:	bl	10f18 <free@plt>
   12d3c:	mov	r0, r4
   12d40:	bl	10f18 <free@plt>
   12d44:	mov	r0, r6
   12d48:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   12d4c:	b	10f18 <free@plt>
   12d50:	ldr	r0, [r9]
   12d54:	bl	10f78 <strlen@plt>
   12d58:	add	r1, r0, #1
   12d5c:	mov	r0, sl
   12d60:	bl	10f30 <realloc@plt>
   12d64:	str	r0, [r4]
   12d68:	ldr	r1, [r9]
   12d6c:	bl	10f3c <strcpy@plt>
   12d70:	ldmib	r9, {r1, r2, r3}
   12d74:	ldr	r0, [r9]
   12d78:	stmib	r4, {r1, r2, r3}
   12d7c:	bl	10f18 <free@plt>
   12d80:	mov	r0, r9
   12d84:	bl	10f18 <free@plt>
   12d88:	ldr	r3, [r4, #4]
   12d8c:	ldr	r0, [r4, #8]
   12d90:	cmp	r3, #0
   12d94:	bne	12c54 <avl_apaga@@Base+0x8c>
   12d98:	cmp	r0, #0
   12d9c:	beq	1305c <avl_apaga@@Base+0x494>
   12da0:	ldr	r2, [r0, #12]
   12da4:	cmp	r2, r7
   12da8:	movlt	r2, r7
   12dac:	add	r2, r2, #1
   12db0:	str	r2, [r4, #12]
   12db4:	ldr	r2, [r0, #12]
   12db8:	add	r2, r2, #1
   12dbc:	cmp	r2, #1
   12dc0:	bgt	12c90 <avl_apaga@@Base+0xc8>
   12dc4:	cmn	r2, #1
   12dc8:	bge	12d18 <avl_apaga@@Base+0x150>
   12dcc:	cmp	r3, #0
   12dd0:	ldr	r2, [r3, #8]
   12dd4:	beq	12fac <avl_apaga@@Base+0x3e4>
   12dd8:	cmp	r2, #0
   12ddc:	ldr	r0, [r3, #4]
   12de0:	beq	13064 <avl_apaga@@Base+0x49c>
   12de4:	cmp	r0, #0
   12de8:	ldr	r1, [r2, #12]
   12dec:	beq	13048 <avl_apaga@@Base+0x480>
   12df0:	ldr	r0, [r0, #12]
   12df4:	sub	r1, r1, r0
   12df8:	cmp	r1, #0
   12dfc:	ble	12fac <avl_apaga@@Base+0x3e4>
   12e00:	ldr	r0, [r2, #4]
   12e04:	str	r3, [r2, #4]
   12e08:	ldr	r1, [r3, #4]
   12e0c:	str	r0, [r3, #8]
   12e10:	cmp	r1, #0
   12e14:	moveq	r1, r7
   12e18:	ldrne	r1, [r1, #12]
   12e1c:	cmp	r0, #0
   12e20:	beq	13080 <avl_apaga@@Base+0x4b8>
   12e24:	ldr	r0, [r0, #12]
   12e28:	cmp	r1, r0
   12e2c:	movlt	r1, r0
   12e30:	add	r1, r1, #1
   12e34:	ldr	r0, [r2, #8]
   12e38:	str	r1, [r3, #12]
   12e3c:	cmp	r0, #0
   12e40:	beq	13090 <avl_apaga@@Base+0x4c8>
   12e44:	ldr	r3, [r0, #12]
   12e48:	str	r4, [r2, #8]
   12e4c:	cmp	r1, r3
   12e50:	movge	r3, r1
   12e54:	add	r3, r3, #1
   12e58:	str	r3, [r2, #12]
   12e5c:	ldr	r1, [r0, #12]
   12e60:	str	r0, [r4, #4]
   12e64:	ldr	r3, [r4, #8]
   12e68:	ldr	r0, [r2, #4]
   12e6c:	cmp	r3, #0
   12e70:	moveq	r3, r7
   12e74:	ldrne	r3, [r3, #12]
   12e78:	cmp	r3, r1
   12e7c:	movlt	r3, r1
   12e80:	cmp	r0, #0
   12e84:	add	r3, r3, #1
   12e88:	str	r3, [r4, #12]
   12e8c:	ldrne	r1, [r0, #12]
   12e90:	moveq	r1, r7
   12e94:	cmp	r3, r1
   12e98:	movlt	r3, r1
   12e9c:	add	r3, r3, #1
   12ea0:	str	r3, [r2, #12]
   12ea4:	mov	r4, r2
   12ea8:	ldr	r3, [r2, #4]
   12eac:	b	12d18 <avl_apaga@@Base+0x150>
   12eb0:	ldr	r3, [r2, #8]
   12eb4:	str	r0, [r2, #8]
   12eb8:	cmp	r3, #0
   12ebc:	str	r3, [r0, #4]
   12ec0:	ldrne	ip, [r3, #12]
   12ec4:	ldr	r3, [r0, #8]
   12ec8:	moveq	ip, r7
   12ecc:	cmp	r3, #0
   12ed0:	moveq	r3, r7
   12ed4:	ldrne	r3, [r3, #12]
   12ed8:	ldr	r1, [r2, #4]
   12edc:	cmp	r3, ip
   12ee0:	movlt	r3, ip
   12ee4:	add	r3, r3, #1
   12ee8:	cmp	r1, #0
   12eec:	str	r3, [r0, #12]
   12ef0:	beq	13010 <avl_apaga@@Base+0x448>
   12ef4:	ldr	r0, [r1, #12]
   12ef8:	str	r4, [r2, #4]
   12efc:	ldr	ip, [r4, #4]
   12f00:	cmp	r3, r0
   12f04:	movlt	r3, r0
   12f08:	cmp	ip, #0
   12f0c:	add	r3, r3, #1
   12f10:	str	r3, [r2, #12]
   12f14:	str	r1, [r4, #8]
   12f18:	ldrne	r3, [ip, #12]
   12f1c:	ldr	r1, [r1, #12]
   12f20:	moveq	r3, r7
   12f24:	cmp	r3, r1
   12f28:	movlt	r3, r1
   12f2c:	add	r3, r3, #1
   12f30:	ldr	r1, [r2, #8]
   12f34:	str	r3, [r4, #12]
   12f38:	cmp	r1, #0
   12f3c:	moveq	r1, r7
   12f40:	ldrne	r1, [r1, #12]
   12f44:	mov	r4, r2
   12f48:	cmp	r1, r3
   12f4c:	movge	r3, r1
   12f50:	add	r3, r3, #1
   12f54:	str	r3, [r2, #12]
   12f58:	ldr	r3, [r2, #4]
   12f5c:	b	12d18 <avl_apaga@@Base+0x150>
   12f60:	cmp	r2, r7
   12f64:	movlt	r2, r7
   12f68:	add	r2, r2, #1
   12f6c:	str	r2, [r4, #12]
   12f70:	mvn	r2, #0
   12f74:	b	12c78 <avl_apaga@@Base+0xb0>
   12f78:	ldr	r2, [r0, #4]
   12f7c:	b	12cbc <avl_apaga@@Base+0xf4>
   12f80:	cmp	r2, #0
   12f84:	movne	r3, r7
   12f88:	bne	12cac <avl_apaga@@Base+0xe4>
   12f8c:	str	r4, [r0, #4]
   12f90:	ldr	r3, [r4, #4]
   12f94:	str	r2, [r4, #8]
   12f98:	cmp	r3, #0
   12f9c:	beq	130b4 <avl_apaga@@Base+0x4ec>
   12fa0:	ldr	r1, [r3, #12]
   12fa4:	mov	r3, r7
   12fa8:	b	12ce0 <avl_apaga@@Base+0x118>
   12fac:	cmp	r2, #0
   12fb0:	str	r4, [r3, #8]
   12fb4:	moveq	r1, r7
   12fb8:	str	r2, [r4, #4]
   12fbc:	beq	12fc4 <avl_apaga@@Base+0x3fc>
   12fc0:	ldr	r1, [r2, #12]
   12fc4:	ldr	r2, [r4, #8]
   12fc8:	ldr	r0, [r3, #4]
   12fcc:	cmp	r2, #0
   12fd0:	moveq	r2, r7
   12fd4:	ldrne	r2, [r2, #12]
   12fd8:	cmp	r2, r1
   12fdc:	movlt	r2, r1
   12fe0:	cmp	r0, #0
   12fe4:	add	r2, r2, #1
   12fe8:	str	r2, [r4, #12]
   12fec:	ldrne	r1, [r0, #12]
   12ff0:	moveq	r1, r7
   12ff4:	cmp	r2, r1
   12ff8:	movlt	r2, r1
   12ffc:	add	r2, r2, #1
   13000:	str	r2, [r3, #12]
   13004:	mov	r4, r3
   13008:	ldr	r3, [r3, #4]
   1300c:	b	12d18 <avl_apaga@@Base+0x150>
   13010:	cmp	r3, r7
   13014:	str	r4, [r2, #4]
   13018:	ldr	r0, [r4, #4]
   1301c:	movlt	r3, r7
   13020:	add	r3, r3, #1
   13024:	cmp	r0, #0
   13028:	str	r3, [r2, #12]
   1302c:	str	r1, [r4, #8]
   13030:	beq	130c0 <avl_apaga@@Base+0x4f8>
   13034:	ldr	r3, [r0, #12]
   13038:	cmp	r3, r7
   1303c:	movlt	r3, r7
   13040:	add	r3, r3, #1
   13044:	b	12f30 <avl_apaga@@Base+0x368>
   13048:	cmp	r1, #0
   1304c:	bge	12e00 <avl_apaga@@Base+0x238>
   13050:	str	r4, [r3, #8]
   13054:	str	r2, [r4, #4]
   13058:	b	12fc0 <avl_apaga@@Base+0x3f8>
   1305c:	str	r3, [r4, #12]
   13060:	b	12d18 <avl_apaga@@Base+0x150>
   13064:	cmp	r0, #0
   13068:	streq	r4, [r3, #8]
   1306c:	moveq	r1, r7
   13070:	streq	r0, [r4, #4]
   13074:	beq	12fc4 <avl_apaga@@Base+0x3fc>
   13078:	mov	r1, r7
   1307c:	b	12df0 <avl_apaga@@Base+0x228>
   13080:	cmp	r1, r7
   13084:	movlt	r1, r7
   13088:	add	r1, r1, #1
   1308c:	b	12e34 <avl_apaga@@Base+0x26c>
   13090:	cmp	r1, r7
   13094:	movge	r3, r1
   13098:	movlt	r3, r7
   1309c:	add	r3, r3, #1
   130a0:	str	r3, [r2, #12]
   130a4:	str	r4, [r2, #8]
   130a8:	mvn	r1, #0
   130ac:	str	r0, [r4, #4]
   130b0:	b	12e64 <avl_apaga@@Base+0x29c>
   130b4:	mov	r1, r7
   130b8:	mvn	r3, #0
   130bc:	b	12ce0 <avl_apaga@@Base+0x118>
   130c0:	mov	r3, r8
   130c4:	b	12f30 <avl_apaga@@Base+0x368>

000130c8 <avl_remove@@Base>:
   130c8:	cmp	r1, #0
   130cc:	cmpne	r0, #0
   130d0:	beq	13450 <avl_remove@@Base+0x388>
   130d4:	push	{r4, r5, r6, r7, r8, lr}
   130d8:	mov	r5, r1
   130dc:	ldr	r4, [r0]
   130e0:	mov	r6, r0
   130e4:	cmp	r4, #0
   130e8:	beq	131e8 <avl_remove@@Base+0x120>
   130ec:	ldr	r7, [r4]
   130f0:	mov	r0, r1
   130f4:	mov	r1, r7
   130f8:	bl	10ee8 <strcmp@plt>
   130fc:	cmp	r0, #0
   13100:	blt	13418 <avl_remove@@Base+0x350>
   13104:	beq	131f4 <avl_remove@@Base+0x12c>
   13108:	mov	r1, r5
   1310c:	ldr	r0, [r4, #8]
   13110:	bl	126d8 <avl_remove_impl@@Base>
   13114:	ldr	r1, [r4, #4]
   13118:	str	r0, [r4, #8]
   1311c:	cmp	r1, #0
   13120:	beq	1325c <avl_remove@@Base+0x194>
   13124:	cmp	r0, #0
   13128:	ldr	r3, [r1, #12]
   1312c:	beq	13434 <avl_remove@@Base+0x36c>
   13130:	ldr	r2, [r0, #12]
   13134:	cmp	r3, r2
   13138:	movlt	r3, r2
   1313c:	add	r3, r3, #1
   13140:	str	r3, [r4, #12]
   13144:	ldr	r3, [r0, #12]
   13148:	ldr	r2, [r1, #12]
   1314c:	sub	r3, r3, r2
   13150:	cmp	r3, #1
   13154:	ble	13284 <avl_remove@@Base+0x1bc>
   13158:	cmp	r0, #0
   1315c:	beq	13458 <avl_remove@@Base+0x390>
   13160:	ldmib	r0, {r2, r3}
   13164:	cmp	r3, #0
   13168:	beq	13460 <avl_remove@@Base+0x398>
   1316c:	cmp	r2, #0
   13170:	ldr	r3, [r3, #12]
   13174:	mvneq	r1, #0
   13178:	beq	13180 <avl_remove@@Base+0xb8>
   1317c:	ldr	r1, [r2, #12]
   13180:	sub	r3, r3, r1
   13184:	cmp	r3, #0
   13188:	blt	1336c <avl_remove@@Base+0x2a4>
   1318c:	str	r4, [r0, #4]
   13190:	ldr	r3, [r4, #4]
   13194:	str	r2, [r4, #8]
   13198:	cmp	r3, #0
   1319c:	mvneq	r1, #0
   131a0:	beq	131a8 <avl_remove@@Base+0xe0>
   131a4:	ldr	r1, [r3, #12]
   131a8:	cmp	r2, #0
   131ac:	mvneq	r3, #0
   131b0:	ldrne	r3, [r2, #12]
   131b4:	ldr	r2, [r0, #8]
   131b8:	cmp	r3, r1
   131bc:	movlt	r3, r1
   131c0:	cmp	r2, #0
   131c4:	add	r3, r3, #1
   131c8:	str	r3, [r4, #12]
   131cc:	ldrne	r2, [r2, #12]
   131d0:	mvneq	r2, #0
   131d4:	cmp	r3, r2
   131d8:	movlt	r3, r2
   131dc:	mov	r4, r0
   131e0:	add	r3, r3, #1
   131e4:	str	r3, [r0, #12]
   131e8:	str	r4, [r6]
   131ec:	mov	r0, #0
   131f0:	pop	{r4, r5, r6, r7, r8, pc}
   131f4:	ldr	r8, [r4, #4]
   131f8:	cmp	r8, #0
   131fc:	beq	13588 <avl_remove@@Base+0x4c0>
   13200:	ldr	r5, [r4, #8]
   13204:	cmp	r5, #0
   13208:	bne	13214 <avl_remove@@Base+0x14c>
   1320c:	b	1348c <avl_remove@@Base+0x3c4>
   13210:	mov	r5, r3
   13214:	ldr	r3, [r5, #4]
   13218:	cmp	r3, #0
   1321c:	bne	13210 <avl_remove@@Base+0x148>
   13220:	ldr	r0, [r5]
   13224:	bl	10f78 <strlen@plt>
   13228:	add	r1, r0, #1
   1322c:	mov	r0, r7
   13230:	bl	10f30 <realloc@plt>
   13234:	str	r0, [r4]
   13238:	ldr	r1, [r5]
   1323c:	bl	10f3c <strcpy@plt>
   13240:	ldr	r1, [r5]
   13244:	ldr	r0, [r4, #8]
   13248:	bl	126d8 <avl_remove_impl@@Base>
   1324c:	ldr	r1, [r4, #4]
   13250:	cmp	r1, #0
   13254:	str	r0, [r4, #8]
   13258:	bne	13124 <avl_remove@@Base+0x5c>
   1325c:	cmp	r0, #0
   13260:	beq	13580 <avl_remove@@Base+0x4b8>
   13264:	ldr	r3, [r0, #12]
   13268:	orr	r3, r3, r3, asr #31
   1326c:	add	r3, r3, #1
   13270:	str	r3, [r4, #12]
   13274:	ldr	r3, [r0, #12]
   13278:	add	r3, r3, #1
   1327c:	cmp	r3, #1
   13280:	bgt	13160 <avl_remove@@Base+0x98>
   13284:	cmn	r3, #1
   13288:	bge	131e8 <avl_remove@@Base+0x120>
   1328c:	cmp	r1, #0
   13290:	ldr	r3, [r1, #8]
   13294:	beq	134d0 <avl_remove@@Base+0x408>
   13298:	cmp	r3, #0
   1329c:	ldr	r0, [r1, #4]
   132a0:	beq	135ac <avl_remove@@Base+0x4e4>
   132a4:	cmp	r0, #0
   132a8:	ldr	r2, [r3, #12]
   132ac:	beq	1352c <avl_remove@@Base+0x464>
   132b0:	ldr	r0, [r0, #12]
   132b4:	sub	r2, r2, r0
   132b8:	cmp	r2, #0
   132bc:	ble	134d0 <avl_remove@@Base+0x408>
   132c0:	ldr	r0, [r3, #4]
   132c4:	str	r1, [r3, #4]
   132c8:	ldr	r2, [r1, #4]
   132cc:	str	r0, [r1, #8]
   132d0:	cmp	r2, #0
   132d4:	mvneq	r2, #0
   132d8:	ldrne	r2, [r2, #12]
   132dc:	cmp	r0, #0
   132e0:	beq	135c8 <avl_remove@@Base+0x500>
   132e4:	ldr	r0, [r0, #12]
   132e8:	cmp	r2, r0
   132ec:	movlt	r2, r0
   132f0:	add	r2, r2, #1
   132f4:	ldr	r0, [r3, #8]
   132f8:	str	r2, [r1, #12]
   132fc:	cmp	r0, #0
   13300:	beq	135d4 <avl_remove@@Base+0x50c>
   13304:	ldr	r1, [r0, #12]
   13308:	str	r4, [r3, #8]
   1330c:	cmp	r2, r1
   13310:	movlt	r2, r1
   13314:	add	r2, r2, #1
   13318:	str	r2, [r3, #12]
   1331c:	ldr	r1, [r0, #12]
   13320:	str	r0, [r4, #4]
   13324:	ldr	r2, [r4, #8]
   13328:	ldr	r0, [r3, #4]
   1332c:	cmp	r2, #0
   13330:	mvneq	r2, #0
   13334:	ldrne	r2, [r2, #12]
   13338:	cmp	r2, r1
   1333c:	movlt	r2, r1
   13340:	cmp	r0, #0
   13344:	add	r2, r2, #1
   13348:	str	r2, [r4, #12]
   1334c:	ldrne	r1, [r0, #12]
   13350:	mvneq	r1, #0
   13354:	cmp	r2, r1
   13358:	movlt	r2, r1
   1335c:	add	r2, r2, #1
   13360:	str	r2, [r3, #12]
   13364:	mov	r4, r3
   13368:	b	131e8 <avl_remove@@Base+0x120>
   1336c:	ldr	r3, [r2, #8]
   13370:	str	r0, [r2, #8]
   13374:	cmp	r3, #0
   13378:	str	r3, [r0, #4]
   1337c:	ldrne	r1, [r3, #12]
   13380:	ldr	r3, [r0, #8]
   13384:	mvneq	r1, #0
   13388:	cmp	r3, #0
   1338c:	mvneq	r3, #0
   13390:	ldrne	r3, [r3, #12]
   13394:	ldr	ip, [r2, #4]
   13398:	cmp	r3, r1
   1339c:	movlt	r3, r1
   133a0:	add	r3, r3, #1
   133a4:	cmp	ip, #0
   133a8:	str	r3, [r0, #12]
   133ac:	beq	13540 <avl_remove@@Base+0x478>
   133b0:	ldr	r0, [ip, #12]
   133b4:	str	r4, [r2, #4]
   133b8:	ldr	r1, [r4, #4]
   133bc:	cmp	r3, r0
   133c0:	movlt	r3, r0
   133c4:	cmp	r1, #0
   133c8:	add	r3, r3, #1
   133cc:	str	r3, [r2, #12]
   133d0:	ldrne	r3, [r1, #12]
   133d4:	ldr	r1, [ip, #12]
   133d8:	mvneq	r3, #0
   133dc:	cmp	r3, r1
   133e0:	movlt	r3, r1
   133e4:	add	r3, r3, #1
   133e8:	str	ip, [r4, #8]
   133ec:	ldr	r1, [r2, #8]
   133f0:	str	r3, [r4, #12]
   133f4:	cmp	r1, #0
   133f8:	mvneq	r1, #0
   133fc:	ldrne	r1, [r1, #12]
   13400:	mov	r4, r2
   13404:	cmp	r1, r3
   13408:	movge	r3, r1
   1340c:	add	r3, r3, #1
   13410:	str	r3, [r2, #12]
   13414:	b	131e8 <avl_remove@@Base+0x120>
   13418:	mov	r1, r5
   1341c:	ldr	r0, [r4, #4]
   13420:	bl	126d8 <avl_remove_impl@@Base>
   13424:	mov	r1, r0
   13428:	str	r0, [r4, #4]
   1342c:	ldr	r0, [r4, #8]
   13430:	b	1311c <avl_remove@@Base+0x54>
   13434:	mvn	r2, #0
   13438:	cmp	r3, r2
   1343c:	movlt	r3, r2
   13440:	add	r3, r3, #1
   13444:	str	r3, [r4, #12]
   13448:	mov	r3, r2
   1344c:	b	13148 <avl_remove@@Base+0x80>
   13450:	mvn	r0, #0
   13454:	bx	lr
   13458:	ldr	r2, [r0, #4]
   1345c:	b	1318c <avl_remove@@Base+0xc4>
   13460:	cmp	r2, #0
   13464:	mvnne	r3, #0
   13468:	bne	1317c <avl_remove@@Base+0xb4>
   1346c:	str	r4, [r0, #4]
   13470:	ldr	r3, [r4, #4]
   13474:	str	r2, [r4, #8]
   13478:	cmp	r3, #0
   1347c:	bne	131a4 <avl_remove@@Base+0xdc>
   13480:	mvn	r1, #0
   13484:	mov	r3, r1
   13488:	b	131b4 <avl_remove@@Base+0xec>
   1348c:	ldr	r0, [r8]
   13490:	bl	10f78 <strlen@plt>
   13494:	add	r1, r0, #1
   13498:	mov	r0, r7
   1349c:	bl	10f30 <realloc@plt>
   134a0:	str	r0, [r4]
   134a4:	ldr	r1, [r8]
   134a8:	bl	10f3c <strcpy@plt>
   134ac:	ldmib	r8, {r1, r2, r3}
   134b0:	ldr	r0, [r8]
   134b4:	stmib	r4, {r1, r2, r3}
   134b8:	bl	10f18 <free@plt>
   134bc:	mov	r0, r8
   134c0:	bl	10f18 <free@plt>
   134c4:	ldr	r1, [r4, #4]
   134c8:	ldr	r0, [r4, #8]
   134cc:	b	1311c <avl_remove@@Base+0x54>
   134d0:	cmp	r3, #0
   134d4:	str	r4, [r1, #8]
   134d8:	str	r3, [r4, #4]
   134dc:	beq	135f4 <avl_remove@@Base+0x52c>
   134e0:	ldr	r2, [r3, #12]
   134e4:	ldr	r3, [r4, #8]
   134e8:	ldr	r0, [r1, #4]
   134ec:	cmp	r3, #0
   134f0:	mvneq	r3, #0
   134f4:	ldrne	r3, [r3, #12]
   134f8:	cmp	r3, r2
   134fc:	movlt	r3, r2
   13500:	cmp	r0, #0
   13504:	add	r3, r3, #1
   13508:	str	r3, [r4, #12]
   1350c:	ldrne	r2, [r0, #12]
   13510:	mvneq	r2, #0
   13514:	cmp	r3, r2
   13518:	movlt	r3, r2
   1351c:	add	r3, r3, #1
   13520:	mov	r4, r1
   13524:	str	r3, [r1, #12]
   13528:	b	131e8 <avl_remove@@Base+0x120>
   1352c:	cmp	r2, #0
   13530:	bge	132c0 <avl_remove@@Base+0x1f8>
   13534:	str	r4, [r1, #8]
   13538:	str	r3, [r4, #4]
   1353c:	b	134e0 <avl_remove@@Base+0x418>
   13540:	mvn	r0, #0
   13544:	cmp	r3, r0
   13548:	str	r4, [r2, #4]
   1354c:	ldr	r1, [r4, #4]
   13550:	movlt	r3, r0
   13554:	add	r3, r3, #1
   13558:	cmp	r1, #0
   1355c:	str	r3, [r2, #12]
   13560:	str	ip, [r4, #8]
   13564:	moveq	r3, r1
   13568:	beq	133ec <avl_remove@@Base+0x324>
   1356c:	ldr	r3, [r1, #12]
   13570:	cmp	r3, r0
   13574:	movlt	r3, r0
   13578:	add	r3, r3, #1
   1357c:	b	133ec <avl_remove@@Base+0x324>
   13580:	str	r0, [r4, #12]
   13584:	b	131e8 <avl_remove@@Base+0x120>
   13588:	ldr	r8, [r4, #8]
   1358c:	cmp	r8, #0
   13590:	bne	1348c <avl_remove@@Base+0x3c4>
   13594:	mov	r0, r7
   13598:	bl	10f18 <free@plt>
   1359c:	mov	r0, r4
   135a0:	bl	10f18 <free@plt>
   135a4:	mov	r4, r8
   135a8:	b	131e8 <avl_remove@@Base+0x120>
   135ac:	cmp	r0, #0
   135b0:	mvnne	r2, #0
   135b4:	bne	132b0 <avl_remove@@Base+0x1e8>
   135b8:	str	r4, [r1, #8]
   135bc:	mvn	r2, #0
   135c0:	str	r0, [r4, #4]
   135c4:	b	134e4 <avl_remove@@Base+0x41c>
   135c8:	orr	r2, r2, r2, asr #31
   135cc:	add	r2, r2, #1
   135d0:	b	132f4 <avl_remove@@Base+0x22c>
   135d4:	mvn	r1, #0
   135d8:	cmp	r2, r1
   135dc:	movlt	r2, r1
   135e0:	add	r2, r2, #1
   135e4:	str	r4, [r3, #8]
   135e8:	str	r2, [r3, #12]
   135ec:	str	r0, [r4, #4]
   135f0:	b	13324 <avl_remove@@Base+0x25c>
   135f4:	mvn	r2, #0
   135f8:	b	134e4 <avl_remove@@Base+0x41c>

000135fc <avl_preordem_impl@@Base>:
   135fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13600:	sub	sp, sp, #12
   13604:	subs	r3, r0, #0
   13608:	str	r3, [sp, #4]
   1360c:	beq	13770 <avl_preordem_impl@@Base+0x174>
   13610:	ldr	r4, [pc, #352]	; 13778 <avl_preordem_impl@@Base+0x17c>
   13614:	ldr	r5, [sp, #4]
   13618:	mov	r0, r4
   1361c:	ldr	r1, [r5]
   13620:	bl	10ef4 <printf@plt>
   13624:	ldr	r3, [r5, #4]
   13628:	cmp	r3, #0
   1362c:	str	r3, [sp]
   13630:	beq	1375c <avl_preordem_impl@@Base+0x160>
   13634:	ldr	r5, [sp]
   13638:	mov	r0, r4
   1363c:	ldr	r1, [r5]
   13640:	bl	10ef4 <printf@plt>
   13644:	ldr	r8, [r5, #4]
   13648:	cmp	r8, #0
   1364c:	beq	13748 <avl_preordem_impl@@Base+0x14c>
   13650:	ldr	r1, [r8]
   13654:	mov	r0, r4
   13658:	bl	10ef4 <printf@plt>
   1365c:	ldr	r9, [r8, #4]
   13660:	cmp	r9, #0
   13664:	beq	1373c <avl_preordem_impl@@Base+0x140>
   13668:	ldr	r1, [r9]
   1366c:	mov	r0, r4
   13670:	bl	10ef4 <printf@plt>
   13674:	ldr	sl, [r9, #4]
   13678:	cmp	sl, #0
   1367c:	beq	13730 <avl_preordem_impl@@Base+0x134>
   13680:	ldr	r1, [sl]
   13684:	mov	r0, r4
   13688:	bl	10ef4 <printf@plt>
   1368c:	ldr	fp, [sl, #4]
   13690:	cmp	fp, #0
   13694:	beq	13724 <avl_preordem_impl@@Base+0x128>
   13698:	ldr	r1, [fp]
   1369c:	mov	r0, r4
   136a0:	bl	10ef4 <printf@plt>
   136a4:	ldr	r6, [fp, #4]
   136a8:	cmp	r6, #0
   136ac:	beq	13718 <avl_preordem_impl@@Base+0x11c>
   136b0:	ldr	r1, [r6]
   136b4:	mov	r0, r4
   136b8:	bl	10ef4 <printf@plt>
   136bc:	ldr	r5, [r6, #4]
   136c0:	cmp	r5, #0
   136c4:	beq	1370c <avl_preordem_impl@@Base+0x110>
   136c8:	ldr	r1, [r5]
   136cc:	mov	r0, r4
   136d0:	bl	10ef4 <printf@plt>
   136d4:	ldr	r7, [r5, #4]
   136d8:	cmp	r7, #0
   136dc:	beq	13700 <avl_preordem_impl@@Base+0x104>
   136e0:	ldr	r1, [r7]
   136e4:	mov	r0, r4
   136e8:	bl	10ef4 <printf@plt>
   136ec:	ldr	r0, [r7, #4]
   136f0:	bl	135fc <avl_preordem_impl@@Base>
   136f4:	ldr	r7, [r7, #8]
   136f8:	cmp	r7, #0
   136fc:	bne	136e0 <avl_preordem_impl@@Base+0xe4>
   13700:	ldr	r5, [r5, #8]
   13704:	cmp	r5, #0
   13708:	bne	136c8 <avl_preordem_impl@@Base+0xcc>
   1370c:	ldr	r6, [r6, #8]
   13710:	cmp	r6, #0
   13714:	bne	136b0 <avl_preordem_impl@@Base+0xb4>
   13718:	ldr	fp, [fp, #8]
   1371c:	cmp	fp, #0
   13720:	bne	13698 <avl_preordem_impl@@Base+0x9c>
   13724:	ldr	sl, [sl, #8]
   13728:	cmp	sl, #0
   1372c:	bne	13680 <avl_preordem_impl@@Base+0x84>
   13730:	ldr	r9, [r9, #8]
   13734:	cmp	r9, #0
   13738:	bne	13668 <avl_preordem_impl@@Base+0x6c>
   1373c:	ldr	r8, [r8, #8]
   13740:	cmp	r8, #0
   13744:	bne	13650 <avl_preordem_impl@@Base+0x54>
   13748:	ldr	r3, [sp]
   1374c:	ldr	r3, [r3, #8]
   13750:	cmp	r3, #0
   13754:	str	r3, [sp]
   13758:	bne	13634 <avl_preordem_impl@@Base+0x38>
   1375c:	ldr	r3, [sp, #4]
   13760:	ldr	r3, [r3, #8]
   13764:	cmp	r3, #0
   13768:	str	r3, [sp, #4]
   1376c:	bne	13614 <avl_preordem_impl@@Base+0x18>
   13770:	add	sp, sp, #12
   13774:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13778:	andeq	r4, r1, r8, lsr #13

0001377c <avl_imprime@@Base>:
   1377c:	push	{r4, r5, r6, lr}
   13780:	subs	r4, r0, #0
   13784:	popeq	{r4, r5, r6, pc}
   13788:	ldr	r5, [pc, #40]	; 137b8 <avl_imprime@@Base+0x3c>
   1378c:	ldr	r1, [r4]
   13790:	mov	r0, r5
   13794:	bl	10ef4 <printf@plt>
   13798:	ldr	r0, [r4, #4]
   1379c:	bl	135fc <avl_preordem_impl@@Base>
   137a0:	ldr	r4, [r4, #8]
   137a4:	cmp	r4, #0
   137a8:	bne	1378c <avl_imprime@@Base+0x10>
   137ac:	mov	r0, #10
   137b0:	pop	{r4, r5, r6, lr}
   137b4:	b	10f84 <putchar@plt>
   137b8:	andeq	r4, r1, r8, lsr #13

000137bc <novo_str@@Base>:
   137bc:	push	{r4, r5, r6, r7, r8, lr}
   137c0:	mov	r5, r0
   137c4:	mov	r0, #12
   137c8:	bl	10f54 <malloc@plt>
   137cc:	subs	r4, r0, #0
   137d0:	beq	13810 <novo_str@@Base+0x54>
   137d4:	mov	r0, r5
   137d8:	bl	10f78 <strlen@plt>
   137dc:	add	r7, r0, #1
   137e0:	mov	r0, r7
   137e4:	bl	10f54 <malloc@plt>
   137e8:	cmp	r0, #0
   137ec:	mov	r6, r0
   137f0:	str	r0, [r4]
   137f4:	beq	13818 <novo_str@@Base+0x5c>
   137f8:	mov	r2, r7
   137fc:	mov	r1, r5
   13800:	bl	10f24 <memcpy@plt>
   13804:	mov	r3, #0
   13808:	str	r3, [r4, #4]
   1380c:	str	r3, [r4, #8]
   13810:	mov	r0, r4
   13814:	pop	{r4, r5, r6, r7, r8, pc}
   13818:	mov	r0, r4
   1381c:	bl	10f18 <free@plt>
   13820:	mov	r4, r6
   13824:	b	13810 <novo_str@@Base+0x54>

00013828 <lista_nova@@Base>:
   13828:	push	{r4, lr}
   1382c:	mov	r0, #12
   13830:	bl	10f54 <malloc@plt>
   13834:	cmp	r0, #0
   13838:	movne	r3, #0
   1383c:	strne	r3, [r0]
   13840:	strne	r3, [r0, #4]
   13844:	strne	r3, [r0, #8]
   13848:	pop	{r4, pc}

0001384c <lista_apaga@@Base>:
   1384c:	push	{r4, r5, r6, lr}
   13850:	subs	r5, r0, #0
   13854:	bne	13870 <lista_apaga@@Base+0x24>
   13858:	b	13888 <lista_apaga@@Base+0x3c>
   1385c:	ldm	r4, {r0, r3}
   13860:	str	r3, [r5]
   13864:	bl	10f18 <free@plt>
   13868:	mov	r0, r4
   1386c:	bl	10f18 <free@plt>
   13870:	ldr	r4, [r5]
   13874:	cmp	r4, #0
   13878:	bne	1385c <lista_apaga@@Base+0x10>
   1387c:	mov	r0, r5
   13880:	pop	{r4, r5, r6, lr}
   13884:	b	10f18 <free@plt>
   13888:	pop	{r4, r5, r6, pc}

0001388c <lista_tamanho@@Base>:
   1388c:	cmp	r0, #0
   13890:	ldrne	r0, [r0, #8]
   13894:	mvneq	r0, #0
   13898:	bx	lr

0001389c <lista_inicio@@Base>:
   1389c:	cmp	r0, #0
   138a0:	ldrne	r0, [r0]
   138a4:	bx	lr

000138a8 <lista_fim@@Base>:
   138a8:	cmp	r0, #0
   138ac:	ldrne	r0, [r0, #4]
   138b0:	bx	lr

000138b4 <lista_insere@@Base>:
   138b4:	cmp	r1, #0
   138b8:	cmpne	r0, #0
   138bc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   138c0:	moveq	r8, #1
   138c4:	movne	r8, #0
   138c8:	beq	13964 <lista_insere@@Base+0xb0>
   138cc:	mov	r9, r0
   138d0:	mov	r0, #12
   138d4:	mov	sl, r1
   138d8:	mov	r5, r2
   138dc:	bl	10f54 <malloc@plt>
   138e0:	subs	r4, r0, #0
   138e4:	beq	13964 <lista_insere@@Base+0xb0>
   138e8:	mov	r0, sl
   138ec:	bl	10f78 <strlen@plt>
   138f0:	add	r6, r0, #1
   138f4:	mov	r0, r6
   138f8:	bl	10f54 <malloc@plt>
   138fc:	cmp	r0, #0
   13900:	mov	r7, r0
   13904:	str	r0, [r4]
   13908:	beq	13994 <lista_insere@@Base+0xe0>
   1390c:	mov	r2, r6
   13910:	mov	r1, sl
   13914:	bl	10f24 <memcpy@plt>
   13918:	ldr	r3, [r9, #8]
   1391c:	cmp	r5, #0
   13920:	add	r3, r3, #1
   13924:	str	r3, [r9, #8]
   13928:	str	r8, [r4, #4]
   1392c:	str	r8, [r4, #8]
   13930:	ldr	r3, [r9]
   13934:	beq	13970 <lista_insere@@Base+0xbc>
   13938:	cmp	r5, r3
   1393c:	streq	r4, [r5, #8]
   13940:	ldrne	r3, [r5, #8]
   13944:	strne	r5, [r4, #4]
   13948:	strne	r3, [r4, #8]
   1394c:	streq	r5, [r4, #4]
   13950:	strne	r4, [r3, #4]
   13954:	streq	r4, [r9]
   13958:	strne	r4, [r5, #8]
   1395c:	mov	r0, r4
   13960:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13964:	mov	r4, #0
   13968:	mov	r0, r4
   1396c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13970:	cmp	r3, #0
   13974:	streq	r4, [r9, #4]
   13978:	ldrne	r3, [r9, #4]
   1397c:	streq	r4, [r9]
   13980:	strne	r3, [r4, #8]
   13984:	mov	r0, r4
   13988:	strne	r4, [r3, #4]
   1398c:	strne	r4, [r9, #4]
   13990:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13994:	mov	r0, r4
   13998:	bl	10f18 <free@plt>
   1399c:	mov	r4, r7
   139a0:	b	1395c <lista_insere@@Base+0xa8>

000139a4 <lista_remove@@Base>:
   139a4:	cmp	r1, #0
   139a8:	cmpne	r0, #0
   139ac:	push	{r4, r5, r6, lr}
   139b0:	beq	13a04 <lista_remove@@Base+0x60>
   139b4:	ldr	r2, [r1, #8]
   139b8:	ldr	r3, [r0, #8]
   139bc:	cmp	r2, #0
   139c0:	sub	r3, r3, #1
   139c4:	str	r3, [r0, #8]
   139c8:	ldrne	r3, [r1, #4]
   139cc:	ldreq	r5, [r1, #4]
   139d0:	strne	r3, [r2, #4]
   139d4:	ldrne	r5, [r1, #4]
   139d8:	streq	r5, [r0]
   139dc:	cmp	r5, #0
   139e0:	streq	r2, [r0, #4]
   139e4:	mov	r4, r1
   139e8:	ldr	r0, [r1]
   139ec:	strne	r2, [r5, #8]
   139f0:	bl	10f18 <free@plt>
   139f4:	mov	r0, r4
   139f8:	bl	10f18 <free@plt>
   139fc:	mov	r0, r5
   13a00:	pop	{r4, r5, r6, pc}
   13a04:	mov	r5, #0
   13a08:	mov	r0, r5
   13a0c:	pop	{r4, r5, r6, pc}

00013a10 <lista_pesquisa@@Base>:
   13a10:	cmp	r1, #0
   13a14:	cmpne	r0, #0
   13a18:	push	{r4, r5, r6, lr}
   13a1c:	moveq	r4, #1
   13a20:	movne	r4, #0
   13a24:	beq	13aac <lista_pesquisa@@Base+0x9c>
   13a28:	cmp	r2, #1
   13a2c:	bhi	13a6c <lista_pesquisa@@Base+0x5c>
   13a30:	cmp	r2, #0
   13a34:	mov	r5, r1
   13a38:	bne	13a74 <lista_pesquisa@@Base+0x64>
   13a3c:	ldr	r4, [r0]
   13a40:	cmp	r4, #0
   13a44:	bne	13a58 <lista_pesquisa@@Base+0x48>
   13a48:	b	13a6c <lista_pesquisa@@Base+0x5c>
   13a4c:	ldr	r4, [r4, #4]
   13a50:	cmp	r4, #0
   13a54:	beq	13a6c <lista_pesquisa@@Base+0x5c>
   13a58:	mov	r1, r5
   13a5c:	ldr	r0, [r4]
   13a60:	bl	10ee8 <strcmp@plt>
   13a64:	cmp	r0, #0
   13a68:	bne	13a4c <lista_pesquisa@@Base+0x3c>
   13a6c:	mov	r0, r4
   13a70:	pop	{r4, r5, r6, pc}
   13a74:	ldr	r4, [r0, #4]
   13a78:	cmp	r4, #0
   13a7c:	bne	13a90 <lista_pesquisa@@Base+0x80>
   13a80:	b	13a6c <lista_pesquisa@@Base+0x5c>
   13a84:	ldr	r4, [r4, #8]
   13a88:	cmp	r4, #0
   13a8c:	beq	13a6c <lista_pesquisa@@Base+0x5c>
   13a90:	mov	r1, r5
   13a94:	ldr	r0, [r4]
   13a98:	bl	10ee8 <strcmp@plt>
   13a9c:	cmp	r0, #0
   13aa0:	bne	13a84 <lista_pesquisa@@Base+0x74>
   13aa4:	mov	r0, r4
   13aa8:	pop	{r4, r5, r6, pc}
   13aac:	mov	r4, #0
   13ab0:	mov	r0, r4
   13ab4:	pop	{r4, r5, r6, pc}

00013ab8 <lista_ordena@@Base>:
   13ab8:	cmp	r0, #0
   13abc:	beq	13b44 <lista_ordena@@Base+0x8c>
   13ac0:	ldr	r3, [r0, #8]
   13ac4:	cmp	r3, #0
   13ac8:	beq	13b3c <lista_ordena@@Base+0x84>
   13acc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13ad0:	ldr	r8, [r0]
   13ad4:	ldr	r9, [r8, #4]
   13ad8:	cmp	r9, #0
   13adc:	beq	13b34 <lista_ordena@@Base+0x7c>
   13ae0:	ldr	sl, [r8]
   13ae4:	mov	r7, r8
   13ae8:	mov	r5, sl
   13aec:	mov	r4, r9
   13af0:	ldr	r6, [r4]
   13af4:	mov	r1, r5
   13af8:	mov	r0, r6
   13afc:	bl	10ee8 <strcmp@plt>
   13b00:	cmp	r0, #0
   13b04:	movlt	r7, r4
   13b08:	ldr	r4, [r4, #4]
   13b0c:	movlt	r5, r6
   13b10:	cmp	r4, #0
   13b14:	bne	13af0 <lista_ordena@@Base+0x38>
   13b18:	cmp	r8, r7
   13b1c:	strne	r5, [r8]
   13b20:	mov	r8, r9
   13b24:	strne	sl, [r7]
   13b28:	ldr	r9, [r8, #4]
   13b2c:	cmp	r9, #0
   13b30:	bne	13ae0 <lista_ordena@@Base+0x28>
   13b34:	mov	r0, #0
   13b38:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13b3c:	mov	r0, #0
   13b40:	bx	lr
   13b44:	mvn	r0, #0
   13b48:	bx	lr

00013b4c <lista_inverte@@Base>:
   13b4c:	push	{r4, r5, lr}
   13b50:	subs	r5, r0, #0
   13b54:	beq	13bec <lista_inverte@@Base+0xa0>
   13b58:	ldr	r4, [r5, #8]
   13b5c:	cmp	r4, #1
   13b60:	ble	13bdc <lista_inverte@@Base+0x90>
   13b64:	ldr	r2, [r5]
   13b68:	cmp	r4, #2
   13b6c:	ldr	r3, [r2, #4]
   13b70:	beq	13be4 <lista_inverte@@Base+0x98>
   13b74:	sub	r4, r4, #2
   13b78:	mov	r1, #0
   13b7c:	b	13b84 <lista_inverte@@Base+0x38>
   13b80:	mov	r3, lr
   13b84:	ldr	ip, [r3, #8]
   13b88:	ldr	lr, [r3, #4]
   13b8c:	add	r1, r1, #1
   13b90:	str	lr, [ip, #4]
   13b94:	ldr	lr, [r3, #4]
   13b98:	cmp	r1, r4
   13b9c:	str	ip, [lr, #8]
   13ba0:	str	r2, [r3, #4]
   13ba4:	str	r3, [r2, #8]
   13ba8:	mov	r2, r3
   13bac:	bne	13b80 <lista_inverte@@Base+0x34>
   13bb0:	ldr	r2, [r5, #4]
   13bb4:	mov	r1, #0
   13bb8:	mov	r0, r1
   13bbc:	ldr	ip, [r2, #8]
   13bc0:	str	ip, [r5, #4]
   13bc4:	str	r1, [ip, #4]
   13bc8:	str	r1, [r2, #8]
   13bcc:	str	r3, [r2, #4]
   13bd0:	str	r2, [r3, #8]
   13bd4:	str	r2, [r5]
   13bd8:	pop	{r4, r5, pc}
   13bdc:	mov	r0, #0
   13be0:	pop	{r4, r5, pc}
   13be4:	mov	r3, r2
   13be8:	b	13bb0 <lista_inverte@@Base+0x64>
   13bec:	mvn	r0, #0
   13bf0:	pop	{r4, r5, pc}

00013bf4 <tabela_nova@@Base>:
   13bf4:	cmp	r1, #0
   13bf8:	cmpne	r0, #0
   13bfc:	push	{r4, r5, r6, r7, r8, lr}
   13c00:	ble	13c48 <tabela_nova@@Base+0x54>
   13c04:	mov	r5, r0
   13c08:	mov	r0, #12
   13c0c:	mov	r6, r1
   13c10:	bl	10f54 <malloc@plt>
   13c14:	subs	r4, r0, #0
   13c18:	beq	13c48 <tabela_nova@@Base+0x54>
   13c1c:	mov	r1, #4
   13c20:	mov	r0, r5
   13c24:	bl	10ed0 <calloc@plt>
   13c28:	cmp	r0, #0
   13c2c:	mov	r7, r0
   13c30:	str	r0, [r4, #4]
   13c34:	strne	r5, [r4, #8]
   13c38:	strne	r6, [r4]
   13c3c:	beq	13c54 <tabela_nova@@Base+0x60>
   13c40:	mov	r0, r4
   13c44:	pop	{r4, r5, r6, r7, r8, pc}
   13c48:	mov	r4, #0
   13c4c:	mov	r0, r4
   13c50:	pop	{r4, r5, r6, r7, r8, pc}
   13c54:	mov	r0, r4
   13c58:	bl	10f18 <free@plt>
   13c5c:	mov	r4, r7
   13c60:	b	13c40 <tabela_nova@@Base+0x4c>

00013c64 <tabela_apaga@@Base>:
   13c64:	push	{r4, r5, r6, r7, r8, lr}
   13c68:	subs	r7, r0, #0
   13c6c:	popeq	{r4, r5, r6, r7, r8, pc}
   13c70:	ldmib	r7, {r0, r3}
   13c74:	cmp	r3, #0
   13c78:	ble	13cb4 <tabela_apaga@@Base+0x50>
   13c7c:	mov	r6, #0
   13c80:	ldr	r4, [r0, r6, lsl #2]
   13c84:	cmp	r4, #0
   13c88:	beq	13ca8 <tabela_apaga@@Base+0x44>
   13c8c:	ldm	r4, {r0, r5}
   13c90:	bl	10f18 <free@plt>
   13c94:	mov	r0, r4
   13c98:	bl	10f18 <free@plt>
   13c9c:	subs	r4, r5, #0
   13ca0:	bne	13c8c <tabela_apaga@@Base+0x28>
   13ca4:	ldmib	r7, {r0, r3}
   13ca8:	add	r6, r6, #1
   13cac:	cmp	r6, r3
   13cb0:	blt	13c80 <tabela_apaga@@Base+0x1c>
   13cb4:	bl	10f18 <free@plt>
   13cb8:	mov	r0, r7
   13cbc:	pop	{r4, r5, r6, r7, r8, lr}
   13cc0:	b	10f18 <free@plt>

00013cc4 <tabela_adiciona@@Base>:
   13cc4:	cmp	r2, #0
   13cc8:	cmpne	r1, #0
   13ccc:	moveq	r3, #1
   13cd0:	movne	r3, #0
   13cd4:	cmp	r0, #0
   13cd8:	orreq	r3, r3, #1
   13cdc:	cmp	r3, #0
   13ce0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13ce4:	bne	13da8 <tabela_adiciona@@Base+0xe4>
   13ce8:	mov	r6, r1
   13cec:	mov	r4, r0
   13cf0:	ldr	r3, [r0]
   13cf4:	ldr	r1, [r0, #8]
   13cf8:	mov	r0, r6
   13cfc:	mov	r8, r2
   13d00:	blx	r3
   13d04:	ldr	sl, [r4, #4]
   13d08:	ldr	r4, [sl, r0, lsl #2]
   13d0c:	mov	r9, r0
   13d10:	cmp	r4, #0
   13d14:	bne	13d28 <tabela_adiciona@@Base+0x64>
   13d18:	b	13d54 <tabela_adiciona@@Base+0x90>
   13d1c:	ldr	r4, [r4, #4]
   13d20:	cmp	r4, #0
   13d24:	beq	13d54 <tabela_adiciona@@Base+0x90>
   13d28:	ldr	r5, [r4]
   13d2c:	mov	r1, r6
   13d30:	mov	r0, r5
   13d34:	bl	10ee8 <strcmp@plt>
   13d38:	subs	r7, r0, #0
   13d3c:	bne	13d1c <tabela_adiciona@@Base+0x58>
   13d40:	mov	r1, r8
   13d44:	add	r0, r5, #25
   13d48:	bl	10f3c <strcpy@plt>
   13d4c:	mov	r0, r7
   13d50:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13d54:	mov	r0, #8
   13d58:	bl	10f54 <malloc@plt>
   13d5c:	subs	r4, r0, #0
   13d60:	beq	13da8 <tabela_adiciona@@Base+0xe4>
   13d64:	mov	r0, #125	; 0x7d
   13d68:	bl	10f54 <malloc@plt>
   13d6c:	cmp	r0, #0
   13d70:	mov	r5, r0
   13d74:	str	r0, [r4]
   13d78:	beq	13da8 <tabela_adiciona@@Base+0xe4>
   13d7c:	mov	r1, r6
   13d80:	bl	10f3c <strcpy@plt>
   13d84:	mov	r1, r8
   13d88:	add	r0, r5, #25
   13d8c:	bl	10f3c <strcpy@plt>
   13d90:	ldr	r3, [sl, r9, lsl #2]
   13d94:	mov	r7, #0
   13d98:	str	r3, [r4, #4]
   13d9c:	mov	r0, r7
   13da0:	str	r4, [sl, r9, lsl #2]
   13da4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13da8:	mvn	r7, #1
   13dac:	b	13d4c <tabela_adiciona@@Base+0x88>

00013db0 <tabela_remove@@Base>:
   13db0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13db4:	subs	r4, r0, #0
   13db8:	beq	13e44 <tabela_remove@@Base+0x94>
   13dbc:	mov	r6, r1
   13dc0:	ldr	r3, [r4]
   13dc4:	ldr	r1, [r4, #8]
   13dc8:	mov	r0, r6
   13dcc:	blx	r3
   13dd0:	ldr	sl, [r4, #4]
   13dd4:	ldr	r4, [sl, r0, lsl #2]
   13dd8:	mov	r9, r0
   13ddc:	cmp	r4, #0
   13de0:	beq	13e38 <tabela_remove@@Base+0x88>
   13de4:	mov	r8, #0
   13de8:	b	13df8 <tabela_remove@@Base+0x48>
   13dec:	mov	r8, r4
   13df0:	subs	r4, r3, #0
   13df4:	beq	13e38 <tabela_remove@@Base+0x88>
   13df8:	ldr	r5, [r4]
   13dfc:	mov	r1, r6
   13e00:	mov	r0, r5
   13e04:	bl	10ee8 <strcmp@plt>
   13e08:	ldr	r3, [r4, #4]
   13e0c:	subs	r7, r0, #0
   13e10:	bne	13dec <tabela_remove@@Base+0x3c>
   13e14:	cmp	r8, #0
   13e18:	strne	r3, [r8, #4]
   13e1c:	streq	r3, [sl, r9, lsl #2]
   13e20:	mov	r0, r5
   13e24:	bl	10f18 <free@plt>
   13e28:	mov	r0, r4
   13e2c:	bl	10f18 <free@plt>
   13e30:	mov	r0, r7
   13e34:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13e38:	mvn	r7, #2
   13e3c:	mov	r0, r7
   13e40:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13e44:	mvn	r7, #1
   13e48:	b	13e3c <tabela_remove@@Base+0x8c>

00013e4c <tabela_existe@@Base>:
   13e4c:	cmp	r0, #0
   13e50:	cmpne	r1, #0
   13e54:	beq	13ec4 <tabela_existe@@Base+0x78>
   13e58:	push	{r4, r5, r6, lr}
   13e5c:	mov	r6, r1
   13e60:	mov	r4, r0
   13e64:	ldr	r3, [r0]
   13e68:	ldr	r1, [r0, #8]
   13e6c:	mov	r0, r6
   13e70:	blx	r3
   13e74:	ldr	r3, [r4, #4]
   13e78:	ldr	r4, [r3, r0, lsl #2]
   13e7c:	cmp	r4, #0
   13e80:	bne	13e94 <tabela_existe@@Base+0x48>
   13e84:	b	13ebc <tabela_existe@@Base+0x70>
   13e88:	ldr	r4, [r4, #4]
   13e8c:	cmp	r4, #0
   13e90:	beq	13ebc <tabela_existe@@Base+0x70>
   13e94:	ldr	r5, [r4]
   13e98:	mov	r1, r6
   13e9c:	mov	r0, r5
   13ea0:	bl	10ee8 <strcmp@plt>
   13ea4:	cmp	r0, #0
   13ea8:	bne	13e88 <tabela_existe@@Base+0x3c>
   13eac:	cmn	r5, #25
   13eb0:	mvneq	r0, #2
   13eb4:	movne	r0, #1
   13eb8:	pop	{r4, r5, r6, pc}
   13ebc:	mvn	r0, #2
   13ec0:	pop	{r4, r5, r6, pc}
   13ec4:	mvn	r0, #1
   13ec8:	bx	lr

00013ecc <tabela_valor@@Base>:
   13ecc:	push	{r4, r5, r6, lr}
   13ed0:	subs	r4, r0, #0
   13ed4:	beq	13f2c <tabela_valor@@Base+0x60>
   13ed8:	mov	r6, r1
   13edc:	ldr	r3, [r4]
   13ee0:	ldr	r1, [r4, #8]
   13ee4:	mov	r0, r6
   13ee8:	blx	r3
   13eec:	ldr	r3, [r4, #4]
   13ef0:	ldr	r4, [r3, r0, lsl #2]
   13ef4:	cmp	r4, #0
   13ef8:	bne	13f0c <tabela_valor@@Base+0x40>
   13efc:	b	13f2c <tabela_valor@@Base+0x60>
   13f00:	ldr	r4, [r4, #4]
   13f04:	cmp	r4, #0
   13f08:	beq	13f2c <tabela_valor@@Base+0x60>
   13f0c:	ldr	r5, [r4]
   13f10:	mov	r1, r6
   13f14:	mov	r0, r5
   13f18:	bl	10ee8 <strcmp@plt>
   13f1c:	cmp	r0, #0
   13f20:	bne	13f00 <tabela_valor@@Base+0x34>
   13f24:	add	r0, r5, #25
   13f28:	pop	{r4, r5, r6, pc}
   13f2c:	mov	r0, #0
   13f30:	pop	{r4, r5, r6, pc}

00013f34 <tabela_esvazia@@Base>:
   13f34:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13f38:	subs	r8, r0, #0
   13f3c:	beq	13fa8 <tabela_esvazia@@Base+0x74>
   13f40:	ldr	r1, [r8, #8]
   13f44:	cmp	r1, #0
   13f48:	ble	13fa0 <tabela_esvazia@@Base+0x6c>
   13f4c:	mov	r6, #0
   13f50:	ldr	r3, [r8, #4]
   13f54:	mov	r9, r6
   13f58:	ldr	r4, [r3, r6, lsl #2]
   13f5c:	lsl	r7, r6, #2
   13f60:	cmp	r4, #0
   13f64:	add	r2, r3, r7
   13f68:	beq	13f90 <tabela_esvazia@@Base+0x5c>
   13f6c:	ldm	r4, {r0, r5}
   13f70:	bl	10f18 <free@plt>
   13f74:	mov	r0, r4
   13f78:	bl	10f18 <free@plt>
   13f7c:	subs	r4, r5, #0
   13f80:	bne	13f6c <tabela_esvazia@@Base+0x38>
   13f84:	ldr	r3, [r8, #4]
   13f88:	ldr	r1, [r8, #8]
   13f8c:	add	r2, r3, r7
   13f90:	add	r6, r6, #1
   13f94:	cmp	r6, r1
   13f98:	str	r9, [r2]
   13f9c:	blt	13f58 <tabela_esvazia@@Base+0x24>
   13fa0:	mov	r0, #0
   13fa4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13fa8:	mvn	r0, #1
   13fac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00013fb0 <tabela_numelementos@@Base>:
   13fb0:	cmp	r0, #0
   13fb4:	beq	14000 <tabela_numelementos@@Base+0x50>
   13fb8:	ldr	r1, [r0, #8]
   13fbc:	cmp	r1, #0
   13fc0:	ble	13ff8 <tabela_numelementos@@Base+0x48>
   13fc4:	ldr	r2, [r0, #4]
   13fc8:	mov	r0, #0
   13fcc:	add	r1, r2, r1, lsl #2
   13fd0:	ldr	r3, [r2], #4
   13fd4:	cmp	r3, #0
   13fd8:	beq	13fec <tabela_numelementos@@Base+0x3c>
   13fdc:	ldr	r3, [r3, #4]
   13fe0:	add	r0, r0, #1
   13fe4:	cmp	r3, #0
   13fe8:	bne	13fdc <tabela_numelementos@@Base+0x2c>
   13fec:	cmp	r1, r2
   13ff0:	bne	13fd0 <tabela_numelementos@@Base+0x20>
   13ff4:	bx	lr
   13ff8:	mov	r0, #0
   13ffc:	bx	lr
   14000:	mvn	r0, #1
   14004:	bx	lr

00014008 <tabela_elementos@@Base>:
   14008:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1400c:	subs	r4, r0, #0
   14010:	beq	140dc <tabela_elementos@@Base+0xd4>
   14014:	ldr	lr, [r4, #8]
   14018:	cmp	lr, #0
   1401c:	ble	140f0 <tabela_elementos@@Base+0xe8>
   14020:	ldr	r7, [r4, #4]
   14024:	mov	r2, #0
   14028:	add	lr, r7, lr, lsl #2
   1402c:	mov	r6, r7
   14030:	mov	ip, r7
   14034:	ldr	r3, [ip], #4
   14038:	cmp	r3, #0
   1403c:	beq	14050 <tabela_elementos@@Base+0x48>
   14040:	ldr	r3, [r3, #4]
   14044:	add	r2, r2, #1
   14048:	cmp	r3, #0
   1404c:	bne	14040 <tabela_elementos@@Base+0x38>
   14050:	cmp	ip, lr
   14054:	bne	14034 <tabela_elementos@@Base+0x2c>
   14058:	cmp	r2, #0
   1405c:	str	r2, [r1]
   14060:	beq	14100 <tabela_elementos@@Base+0xf8>
   14064:	rsb	r0, r2, r2, lsl #5
   14068:	add	r0, r2, r0, lsl #2
   1406c:	bl	10f54 <malloc@plt>
   14070:	subs	r8, r0, #0
   14074:	beq	14100 <tabela_elementos@@Base+0xf8>
   14078:	ldr	r3, [r4, #8]
   1407c:	cmp	r3, #0
   14080:	ble	140d4 <tabela_elementos@@Base+0xcc>
   14084:	add	r7, r7, r3, lsl #2
   14088:	mov	r9, #0
   1408c:	mov	r5, #125	; 0x7d
   14090:	ldr	r4, [r6], #4
   14094:	cmp	r4, #0
   14098:	beq	140cc <tabela_elementos@@Base+0xc4>
   1409c:	rsb	r3, r9, r9, lsl #5
   140a0:	add	r3, r9, r3, lsl #2
   140a4:	add	r3, r8, r3
   140a8:	ldr	r1, [r4]
   140ac:	mov	r0, r3
   140b0:	mov	r2, r5
   140b4:	bl	10f24 <memcpy@plt>
   140b8:	ldr	r4, [r4, #4]
   140bc:	add	r9, r9, #1
   140c0:	cmp	r4, #0
   140c4:	add	r3, r0, #125	; 0x7d
   140c8:	bne	140a8 <tabela_elementos@@Base+0xa0>
   140cc:	cmp	r7, r6
   140d0:	bne	14090 <tabela_elementos@@Base+0x88>
   140d4:	mov	r0, r8
   140d8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   140dc:	mvn	r3, #1
   140e0:	mov	r8, r4
   140e4:	str	r3, [r1]
   140e8:	mov	r0, r8
   140ec:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   140f0:	mov	r3, #0
   140f4:	mov	r8, r3
   140f8:	str	r3, [r1]
   140fc:	b	140d4 <tabela_elementos@@Base+0xcc>
   14100:	mov	r8, #0
   14104:	b	140d4 <tabela_elementos@@Base+0xcc>

00014108 <hash_krm@@Base>:
   14108:	push	{r4, lr}
   1410c:	ldrb	r3, [r0]
   14110:	cmp	r3, #0
   14114:	beq	1413c <hash_krm@@Base+0x34>
   14118:	mov	r2, r0
   1411c:	mov	r0, #7
   14120:	add	r0, r0, r3
   14124:	ldrb	r3, [r2, #1]!
   14128:	cmp	r3, #0
   1412c:	bne	14120 <hash_krm@@Base+0x18>
   14130:	bl	1445c <mostraTabela@@Base+0x2dc>
   14134:	mov	r0, r1
   14138:	pop	{r4, pc}
   1413c:	mov	r0, #7
   14140:	b	14130 <hash_krm@@Base+0x28>

00014144 <hash_djbm@@Base>:
   14144:	push	{r4, lr}
   14148:	ldrb	r2, [r0]
   1414c:	ldr	r3, [pc, #40]	; 1417c <hash_djbm@@Base+0x38>
   14150:	cmp	r2, #0
   14154:	beq	1416c <hash_djbm@@Base+0x28>
   14158:	rsb	r3, r3, r3, lsl #5
   1415c:	eor	r3, r3, r2
   14160:	ldrb	r2, [r0, #1]!
   14164:	cmp	r2, #0
   14168:	bne	14158 <hash_djbm@@Base+0x14>
   1416c:	mov	r0, r3
   14170:	bl	1445c <mostraTabela@@Base+0x2dc>
   14174:	mov	r0, r1
   14178:	pop	{r4, pc}
   1417c:	andeq	r1, r0, r3, ror #9

00014180 <mostraTabela@@Base>:
   14180:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14184:	subs	r7, r0, #0
   14188:	mvneq	r1, #1
   1418c:	beq	141cc <mostraTabela@@Base+0x4c>
   14190:	ldr	r0, [r7, #8]
   14194:	cmp	r0, #0
   14198:	ble	1425c <mostraTabela@@Base+0xdc>
   1419c:	ldr	r2, [r7, #4]
   141a0:	mov	r1, #0
   141a4:	add	r0, r2, r0, lsl #2
   141a8:	ldr	r3, [r2], #4
   141ac:	cmp	r3, #0
   141b0:	beq	141c4 <mostraTabela@@Base+0x44>
   141b4:	ldr	r3, [r3, #4]
   141b8:	add	r1, r1, #1
   141bc:	cmp	r3, #0
   141c0:	bne	141b4 <mostraTabela@@Base+0x34>
   141c4:	cmp	r0, r2
   141c8:	bne	141a8 <mostraTabela@@Base+0x28>
   141cc:	ldr	r0, [pc, #144]	; 14264 <mostraTabela@@Base+0xe4>
   141d0:	bl	10ef4 <printf@plt>
   141d4:	ldr	r2, [r7, #8]
   141d8:	cmp	r2, #0
   141dc:	ble	14250 <mostraTabela@@Base+0xd0>
   141e0:	ldr	r9, [pc, #128]	; 14268 <mostraTabela@@Base+0xe8>
   141e4:	ldr	r5, [pc, #128]	; 1426c <mostraTabela@@Base+0xec>
   141e8:	mov	r6, #0
   141ec:	mov	r8, #10
   141f0:	ldr	r3, [r7, #4]
   141f4:	ldr	r3, [r3, r6, lsl #2]
   141f8:	cmp	r3, #0
   141fc:	beq	14244 <mostraTabela@@Base+0xc4>
   14200:	mov	r1, r6
   14204:	mov	r0, r9
   14208:	bl	10ef4 <printf@plt>
   1420c:	ldr	r3, [r7, #4]
   14210:	ldr	r4, [r3, r6, lsl #2]
   14214:	cmp	r4, #0
   14218:	beq	14238 <mostraTabela@@Base+0xb8>
   1421c:	ldr	r1, [r4]
   14220:	mov	r0, r5
   14224:	add	r2, r1, #25
   14228:	bl	10ef4 <printf@plt>
   1422c:	ldr	r4, [r4, #4]
   14230:	cmp	r4, #0
   14234:	bne	1421c <mostraTabela@@Base+0x9c>
   14238:	mov	r0, r8
   1423c:	bl	10f84 <putchar@plt>
   14240:	ldr	r2, [r7, #8]
   14244:	add	r6, r6, #1
   14248:	cmp	r6, r2
   1424c:	blt	141f0 <mostraTabela@@Base+0x70>
   14250:	mov	r0, #10
   14254:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   14258:	b	10f84 <putchar@plt>
   1425c:	mov	r1, #0
   14260:	b	141cc <mostraTabela@@Base+0x4c>
   14264:	muleq	r1, r8, r7
   14268:			; <UNDEFINED> instruction: 0x000147bc
   1426c:	andeq	r4, r1, r4, asr #15
   14270:	subs	r2, r1, #1
   14274:	bxeq	lr
   14278:	bcc	14450 <mostraTabela@@Base+0x2d0>
   1427c:	cmp	r0, r1
   14280:	bls	14434 <mostraTabela@@Base+0x2b4>
   14284:	tst	r1, r2
   14288:	beq	14440 <mostraTabela@@Base+0x2c0>
   1428c:	clz	r3, r0
   14290:	clz	r2, r1
   14294:	sub	r3, r2, r3
   14298:	rsbs	r3, r3, #31
   1429c:	addne	r3, r3, r3, lsl #1
   142a0:	mov	r2, #0
   142a4:	addne	pc, pc, r3, lsl #2
   142a8:	nop			; (mov r0, r0)
   142ac:	cmp	r0, r1, lsl #31
   142b0:	adc	r2, r2, r2
   142b4:	subcs	r0, r0, r1, lsl #31
   142b8:	cmp	r0, r1, lsl #30
   142bc:	adc	r2, r2, r2
   142c0:	subcs	r0, r0, r1, lsl #30
   142c4:	cmp	r0, r1, lsl #29
   142c8:	adc	r2, r2, r2
   142cc:	subcs	r0, r0, r1, lsl #29
   142d0:	cmp	r0, r1, lsl #28
   142d4:	adc	r2, r2, r2
   142d8:	subcs	r0, r0, r1, lsl #28
   142dc:	cmp	r0, r1, lsl #27
   142e0:	adc	r2, r2, r2
   142e4:	subcs	r0, r0, r1, lsl #27
   142e8:	cmp	r0, r1, lsl #26
   142ec:	adc	r2, r2, r2
   142f0:	subcs	r0, r0, r1, lsl #26
   142f4:	cmp	r0, r1, lsl #25
   142f8:	adc	r2, r2, r2
   142fc:	subcs	r0, r0, r1, lsl #25
   14300:	cmp	r0, r1, lsl #24
   14304:	adc	r2, r2, r2
   14308:	subcs	r0, r0, r1, lsl #24
   1430c:	cmp	r0, r1, lsl #23
   14310:	adc	r2, r2, r2
   14314:	subcs	r0, r0, r1, lsl #23
   14318:	cmp	r0, r1, lsl #22
   1431c:	adc	r2, r2, r2
   14320:	subcs	r0, r0, r1, lsl #22
   14324:	cmp	r0, r1, lsl #21
   14328:	adc	r2, r2, r2
   1432c:	subcs	r0, r0, r1, lsl #21
   14330:	cmp	r0, r1, lsl #20
   14334:	adc	r2, r2, r2
   14338:	subcs	r0, r0, r1, lsl #20
   1433c:	cmp	r0, r1, lsl #19
   14340:	adc	r2, r2, r2
   14344:	subcs	r0, r0, r1, lsl #19
   14348:	cmp	r0, r1, lsl #18
   1434c:	adc	r2, r2, r2
   14350:	subcs	r0, r0, r1, lsl #18
   14354:	cmp	r0, r1, lsl #17
   14358:	adc	r2, r2, r2
   1435c:	subcs	r0, r0, r1, lsl #17
   14360:	cmp	r0, r1, lsl #16
   14364:	adc	r2, r2, r2
   14368:	subcs	r0, r0, r1, lsl #16
   1436c:	cmp	r0, r1, lsl #15
   14370:	adc	r2, r2, r2
   14374:	subcs	r0, r0, r1, lsl #15
   14378:	cmp	r0, r1, lsl #14
   1437c:	adc	r2, r2, r2
   14380:	subcs	r0, r0, r1, lsl #14
   14384:	cmp	r0, r1, lsl #13
   14388:	adc	r2, r2, r2
   1438c:	subcs	r0, r0, r1, lsl #13
   14390:	cmp	r0, r1, lsl #12
   14394:	adc	r2, r2, r2
   14398:	subcs	r0, r0, r1, lsl #12
   1439c:	cmp	r0, r1, lsl #11
   143a0:	adc	r2, r2, r2
   143a4:	subcs	r0, r0, r1, lsl #11
   143a8:	cmp	r0, r1, lsl #10
   143ac:	adc	r2, r2, r2
   143b0:	subcs	r0, r0, r1, lsl #10
   143b4:	cmp	r0, r1, lsl #9
   143b8:	adc	r2, r2, r2
   143bc:	subcs	r0, r0, r1, lsl #9
   143c0:	cmp	r0, r1, lsl #8
   143c4:	adc	r2, r2, r2
   143c8:	subcs	r0, r0, r1, lsl #8
   143cc:	cmp	r0, r1, lsl #7
   143d0:	adc	r2, r2, r2
   143d4:	subcs	r0, r0, r1, lsl #7
   143d8:	cmp	r0, r1, lsl #6
   143dc:	adc	r2, r2, r2
   143e0:	subcs	r0, r0, r1, lsl #6
   143e4:	cmp	r0, r1, lsl #5
   143e8:	adc	r2, r2, r2
   143ec:	subcs	r0, r0, r1, lsl #5
   143f0:	cmp	r0, r1, lsl #4
   143f4:	adc	r2, r2, r2
   143f8:	subcs	r0, r0, r1, lsl #4
   143fc:	cmp	r0, r1, lsl #3
   14400:	adc	r2, r2, r2
   14404:	subcs	r0, r0, r1, lsl #3
   14408:	cmp	r0, r1, lsl #2
   1440c:	adc	r2, r2, r2
   14410:	subcs	r0, r0, r1, lsl #2
   14414:	cmp	r0, r1, lsl #1
   14418:	adc	r2, r2, r2
   1441c:	subcs	r0, r0, r1, lsl #1
   14420:	cmp	r0, r1
   14424:	adc	r2, r2, r2
   14428:	subcs	r0, r0, r1
   1442c:	mov	r0, r2
   14430:	bx	lr
   14434:	moveq	r0, #1
   14438:	movne	r0, #0
   1443c:	bx	lr
   14440:	clz	r2, r1
   14444:	rsb	r2, r2, #31
   14448:	lsr	r0, r0, r2
   1444c:	bx	lr
   14450:	cmp	r0, #0
   14454:	mvnne	r0, #0
   14458:	b	1447c <mostraTabela@@Base+0x2fc>
   1445c:	cmp	r1, #0
   14460:	beq	14450 <mostraTabela@@Base+0x2d0>
   14464:	push	{r0, r1, lr}
   14468:	bl	14270 <mostraTabela@@Base+0xf0>
   1446c:	pop	{r1, r2, lr}
   14470:	mul	r3, r2, r0
   14474:	sub	r1, r1, r3
   14478:	bx	lr
   1447c:	push	{r1, lr}
   14480:	mov	r0, #8
   14484:	bl	10edc <raise@plt>
   14488:	pop	{r1, pc}

0001448c <__libc_csu_init@@Base>:
   1448c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14490:	mov	r7, r0
   14494:	ldr	r6, [pc, #72]	; 144e4 <__libc_csu_init@@Base+0x58>
   14498:	ldr	r5, [pc, #72]	; 144e8 <__libc_csu_init@@Base+0x5c>
   1449c:	add	r6, pc, r6
   144a0:	add	r5, pc, r5
   144a4:	sub	r6, r6, r5
   144a8:	mov	r8, r1
   144ac:	mov	r9, r2
   144b0:	bl	10eb0 <calloc@plt-0x20>
   144b4:	asrs	r6, r6, #2
   144b8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   144bc:	mov	r4, #0
   144c0:	add	r4, r4, #1
   144c4:	ldr	r3, [r5], #4
   144c8:	mov	r2, r9
   144cc:	mov	r1, r8
   144d0:	mov	r0, r7
   144d4:	blx	r3
   144d8:	cmp	r6, r4
   144dc:	bne	144c0 <__libc_csu_init@@Base+0x34>
   144e0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   144e4:	andeq	r0, r1, ip, ror #20
   144e8:	andeq	r0, r1, r4, ror #20

000144ec <__libc_csu_fini@@Base>:
   144ec:	bx	lr

Disassembly of section .fini:

000144f0 <.fini>:
   144f0:	push	{r3, lr}
   144f4:	pop	{r3, pc}
