
../repos/coreutils/src/tty:     file format elf32-littlearm


Disassembly of section .init:

00010b20 <.init>:
   10b20:	push	{r3, lr}
   10b24:	bl	10f7c <abort@plt+0x220>
   10b28:	pop	{r3, pc}

Disassembly of section .plt:

00010b2c <calloc@plt-0x14>:
   10b2c:	push	{lr}		; (str lr, [sp, #-4]!)
   10b30:	ldr	lr, [pc, #4]	; 10b3c <calloc@plt-0x4>
   10b34:	add	lr, pc, lr
   10b38:	ldr	pc, [lr, #8]!
   10b3c:	andeq	r7, r1, r4, asr #9

00010b40 <calloc@plt>:
   10b40:	add	ip, pc, #0, 12
   10b44:	add	ip, ip, #94208	; 0x17000
   10b48:	ldr	pc, [ip, #1220]!	; 0x4c4

00010b4c <fputs_unlocked@plt>:
   10b4c:	add	ip, pc, #0, 12
   10b50:	add	ip, ip, #94208	; 0x17000
   10b54:	ldr	pc, [ip, #1212]!	; 0x4bc

00010b58 <raise@plt>:
   10b58:	add	ip, pc, #0, 12
   10b5c:	add	ip, ip, #94208	; 0x17000
   10b60:	ldr	pc, [ip, #1204]!	; 0x4b4

00010b64 <strcmp@plt>:
   10b64:	add	ip, pc, #0, 12
   10b68:	add	ip, ip, #94208	; 0x17000
   10b6c:	ldr	pc, [ip, #1196]!	; 0x4ac

00010b70 <fflush@plt>:
   10b70:	add	ip, pc, #0, 12
   10b74:	add	ip, ip, #94208	; 0x17000
   10b78:	ldr	pc, [ip, #1188]!	; 0x4a4

00010b7c <free@plt>:
   10b7c:	add	ip, pc, #0, 12
   10b80:	add	ip, ip, #94208	; 0x17000
   10b84:	ldr	pc, [ip, #1180]!	; 0x49c

00010b88 <_exit@plt>:
   10b88:	add	ip, pc, #0, 12
   10b8c:	add	ip, ip, #94208	; 0x17000
   10b90:	ldr	pc, [ip, #1172]!	; 0x494

00010b94 <memcpy@plt>:
   10b94:	add	ip, pc, #0, 12
   10b98:	add	ip, ip, #94208	; 0x17000
   10b9c:	ldr	pc, [ip, #1164]!	; 0x48c

00010ba0 <mbsinit@plt>:
   10ba0:	add	ip, pc, #0, 12
   10ba4:	add	ip, ip, #94208	; 0x17000
   10ba8:	ldr	pc, [ip, #1156]!	; 0x484

00010bac <memcmp@plt>:
   10bac:	add	ip, pc, #0, 12
   10bb0:	add	ip, ip, #94208	; 0x17000
   10bb4:	ldr	pc, [ip, #1148]!	; 0x47c

00010bb8 <fputc_unlocked@plt>:
   10bb8:	add	ip, pc, #0, 12
   10bbc:	add	ip, ip, #94208	; 0x17000
   10bc0:	ldr	pc, [ip, #1140]!	; 0x474

00010bc4 <dcgettext@plt>:
   10bc4:	add	ip, pc, #0, 12
   10bc8:	add	ip, ip, #94208	; 0x17000
   10bcc:	ldr	pc, [ip, #1132]!	; 0x46c

00010bd0 <realloc@plt>:
   10bd0:	add	ip, pc, #0, 12
   10bd4:	add	ip, ip, #94208	; 0x17000
   10bd8:	ldr	pc, [ip, #1124]!	; 0x464

00010bdc <textdomain@plt>:
   10bdc:	add	ip, pc, #0, 12
   10be0:	add	ip, ip, #94208	; 0x17000
   10be4:	ldr	pc, [ip, #1116]!	; 0x45c

00010be8 <iswprint@plt>:
   10be8:	add	ip, pc, #0, 12
   10bec:	add	ip, ip, #94208	; 0x17000
   10bf0:	ldr	pc, [ip, #1108]!	; 0x454

00010bf4 <fwrite@plt>:
   10bf4:	add	ip, pc, #0, 12
   10bf8:	add	ip, ip, #94208	; 0x17000
   10bfc:	ldr	pc, [ip, #1100]!	; 0x44c

00010c00 <lseek64@plt>:
   10c00:	add	ip, pc, #0, 12
   10c04:	add	ip, ip, #94208	; 0x17000
   10c08:	ldr	pc, [ip, #1092]!	; 0x444

00010c0c <__ctype_get_mb_cur_max@plt>:
   10c0c:	add	ip, pc, #0, 12
   10c10:	add	ip, ip, #94208	; 0x17000
   10c14:	ldr	pc, [ip, #1084]!	; 0x43c

00010c18 <__fpending@plt>:
   10c18:	add	ip, pc, #0, 12
   10c1c:	add	ip, ip, #94208	; 0x17000
   10c20:	ldr	pc, [ip, #1076]!	; 0x434

00010c24 <mbrtowc@plt>:
   10c24:	add	ip, pc, #0, 12
   10c28:	add	ip, ip, #94208	; 0x17000
   10c2c:	ldr	pc, [ip, #1068]!	; 0x42c

00010c30 <error@plt>:
   10c30:	add	ip, pc, #0, 12
   10c34:	add	ip, ip, #94208	; 0x17000
   10c38:	ldr	pc, [ip, #1060]!	; 0x424

00010c3c <puts@plt>:
   10c3c:	add	ip, pc, #0, 12
   10c40:	add	ip, ip, #94208	; 0x17000
   10c44:	ldr	pc, [ip, #1052]!	; 0x41c

00010c48 <malloc@plt>:
   10c48:	add	ip, pc, #0, 12
   10c4c:	add	ip, ip, #94208	; 0x17000
   10c50:	ldr	pc, [ip, #1044]!	; 0x414

00010c54 <__libc_start_main@plt>:
   10c54:	add	ip, pc, #0, 12
   10c58:	add	ip, ip, #94208	; 0x17000
   10c5c:	ldr	pc, [ip, #1036]!	; 0x40c

00010c60 <__freading@plt>:
   10c60:	add	ip, pc, #0, 12
   10c64:	add	ip, ip, #94208	; 0x17000
   10c68:	ldr	pc, [ip, #1028]!	; 0x404

00010c6c <__gmon_start__@plt>:
   10c6c:	add	ip, pc, #0, 12
   10c70:	add	ip, ip, #94208	; 0x17000
   10c74:	ldr	pc, [ip, #1020]!	; 0x3fc

00010c78 <getopt_long@plt>:
   10c78:	add	ip, pc, #0, 12
   10c7c:	add	ip, ip, #94208	; 0x17000
   10c80:	ldr	pc, [ip, #1012]!	; 0x3f4

00010c84 <__ctype_b_loc@plt>:
   10c84:	add	ip, pc, #0, 12
   10c88:	add	ip, ip, #94208	; 0x17000
   10c8c:	ldr	pc, [ip, #1004]!	; 0x3ec

00010c90 <exit@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #94208	; 0x17000
   10c98:	ldr	pc, [ip, #996]!	; 0x3e4

00010c9c <ttyname@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #94208	; 0x17000
   10ca4:	ldr	pc, [ip, #988]!	; 0x3dc

00010ca8 <strlen@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #94208	; 0x17000
   10cb0:	ldr	pc, [ip, #980]!	; 0x3d4

00010cb4 <__errno_location@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #94208	; 0x17000
   10cbc:	ldr	pc, [ip, #972]!	; 0x3cc

00010cc0 <__cxa_atexit@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #94208	; 0x17000
   10cc8:	ldr	pc, [ip, #964]!	; 0x3c4

00010ccc <memset@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #94208	; 0x17000
   10cd4:	ldr	pc, [ip, #956]!	; 0x3bc

00010cd8 <__printf_chk@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #94208	; 0x17000
   10ce0:	ldr	pc, [ip, #948]!	; 0x3b4

00010ce4 <fileno@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #94208	; 0x17000
   10cec:	ldr	pc, [ip, #940]!	; 0x3ac

00010cf0 <__fprintf_chk@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #94208	; 0x17000
   10cf8:	ldr	pc, [ip, #932]!	; 0x3a4

00010cfc <fclose@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #94208	; 0x17000
   10d04:	ldr	pc, [ip, #924]!	; 0x39c

00010d08 <fseeko64@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #94208	; 0x17000
   10d10:	ldr	pc, [ip, #916]!	; 0x394

00010d14 <setlocale@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #94208	; 0x17000
   10d1c:	ldr	pc, [ip, #908]!	; 0x38c

00010d20 <strrchr@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #94208	; 0x17000
   10d28:	ldr	pc, [ip, #900]!	; 0x384

00010d2c <nl_langinfo@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #94208	; 0x17000
   10d34:	ldr	pc, [ip, #892]!	; 0x37c

00010d38 <bindtextdomain@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #94208	; 0x17000
   10d40:	ldr	pc, [ip, #884]!	; 0x374

00010d44 <isatty@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #94208	; 0x17000
   10d4c:	ldr	pc, [ip, #876]!	; 0x36c

00010d50 <strncmp@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #94208	; 0x17000
   10d58:	ldr	pc, [ip, #868]!	; 0x364

00010d5c <abort@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #94208	; 0x17000
   10d64:	ldr	pc, [ip, #860]!	; 0x35c

Disassembly of section .text:

00010d68 <.text>:
   10d68:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10d6c:	mov	r6, r0
   10d70:	sub	sp, sp, #8
   10d74:	ldr	r0, [r1]
   10d78:	mov	r5, r1
   10d7c:	bl	11434 <abort@plt+0x6d8>
   10d80:	ldr	r1, [pc, #376]	; 10f00 <abort@plt+0x1a4>
   10d84:	mov	r0, #6
   10d88:	bl	10d14 <setlocale@plt>
   10d8c:	ldr	r1, [pc, #368]	; 10f04 <abort@plt+0x1a8>
   10d90:	ldr	r0, [pc, #368]	; 10f08 <abort@plt+0x1ac>
   10d94:	bl	10d38 <bindtextdomain@plt>
   10d98:	ldr	r0, [pc, #360]	; 10f08 <abort@plt+0x1ac>
   10d9c:	bl	10bdc <textdomain@plt>
   10da0:	ldr	r3, [pc, #356]	; 10f0c <abort@plt+0x1b0>
   10da4:	mov	r2, #3
   10da8:	ldr	r0, [pc, #352]	; 10f10 <abort@plt+0x1b4>
   10dac:	str	r2, [r3]
   10db0:	ldr	r7, [pc, #348]	; 10f14 <abort@plt+0x1b8>
   10db4:	bl	16f10 <abort@plt+0x61b4>
   10db8:	ldr	r9, [pc, #344]	; 10f18 <abort@plt+0x1bc>
   10dbc:	mov	r3, #0
   10dc0:	ldr	r8, [pc, #340]	; 10f1c <abort@plt+0x1c0>
   10dc4:	mov	r4, r3
   10dc8:	mov	sl, #1
   10dcc:	strb	r3, [r7]
   10dd0:	str	r4, [sp]
   10dd4:	mov	r3, r9
   10dd8:	mov	r2, r8
   10ddc:	mov	r1, r5
   10de0:	mov	r0, r6
   10de4:	bl	10c78 <getopt_long@plt>
   10de8:	cmn	r0, #1
   10dec:	beq	10e50 <abort@plt+0xf4>
   10df0:	cmn	r0, #2
   10df4:	beq	10e48 <abort@plt+0xec>
   10df8:	cmp	r0, #115	; 0x73
   10dfc:	beq	10e40 <abort@plt+0xe4>
   10e00:	cmn	r0, #3
   10e04:	beq	10e10 <abort@plt+0xb4>
   10e08:	mov	r0, #2
   10e0c:	bl	11068 <abort@plt+0x30c>
   10e10:	ldr	r1, [pc, #264]	; 10f20 <abort@plt+0x1c4>
   10e14:	ldr	r3, [pc, #264]	; 10f24 <abort@plt+0x1c8>
   10e18:	ldr	r2, [pc, #264]	; 10f28 <abort@plt+0x1cc>
   10e1c:	str	r4, [sp, #4]
   10e20:	ldr	r0, [r1]
   10e24:	ldr	r3, [r3]
   10e28:	ldr	r1, [pc, #252]	; 10f2c <abort@plt+0x1d0>
   10e2c:	str	r2, [sp]
   10e30:	ldr	r2, [pc, #248]	; 10f30 <abort@plt+0x1d4>
   10e34:	bl	15cd4 <abort@plt+0x4f78>
   10e38:	mov	r0, #0
   10e3c:	bl	10c90 <exit@plt>
   10e40:	strb	sl, [r7]
   10e44:	b	10dd0 <abort@plt+0x74>
   10e48:	mov	r0, #0
   10e4c:	bl	11068 <abort@plt+0x30c>
   10e50:	ldr	r4, [pc, #220]	; 10f34 <abort@plt+0x1d8>
   10e54:	ldr	r3, [r4]
   10e58:	cmp	r6, r3
   10e5c:	bgt	10ec8 <abort@plt+0x16c>
   10e60:	bl	10cb4 <__errno_location@plt>
   10e64:	ldrb	r4, [r7]
   10e68:	mov	r3, #2
   10e6c:	cmp	r4, #0
   10e70:	str	r3, [r0]
   10e74:	bne	10e9c <abort@plt+0x140>
   10e78:	mov	r0, r4
   10e7c:	bl	10c9c <ttyname@plt>
   10e80:	subs	r3, r0, #0
   10e84:	beq	10eb0 <abort@plt+0x154>
   10e88:	mov	r0, r3
   10e8c:	bl	10c3c <puts@plt>
   10e90:	mov	r0, r4
   10e94:	add	sp, sp, #8
   10e98:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10e9c:	mov	r0, #0
   10ea0:	bl	10d44 <isatty@plt>
   10ea4:	clz	r4, r0
   10ea8:	lsr	r4, r4, #5
   10eac:	b	10e90 <abort@plt+0x134>
   10eb0:	mov	r2, #5
   10eb4:	ldr	r1, [pc, #124]	; 10f38 <abort@plt+0x1dc>
   10eb8:	bl	10bc4 <dcgettext@plt>
   10ebc:	mov	r4, #1
   10ec0:	mov	r3, r0
   10ec4:	b	10e88 <abort@plt+0x12c>
   10ec8:	mov	r2, #5
   10ecc:	ldr	r1, [pc, #104]	; 10f3c <abort@plt+0x1e0>
   10ed0:	mov	r0, #0
   10ed4:	bl	10bc4 <dcgettext@plt>
   10ed8:	ldr	r3, [r4]
   10edc:	mov	r6, r0
   10ee0:	ldr	r0, [r5, r3, lsl #2]
   10ee4:	bl	15300 <abort@plt+0x45a4>
   10ee8:	mov	r1, #0
   10eec:	mov	r2, r6
   10ef0:	mov	r3, r0
   10ef4:	mov	r0, r1
   10ef8:	bl	10c30 <error@plt>
   10efc:	b	10e08 <abort@plt+0xac>
   10f00:	strheq	r7, [r1], -r4
   10f04:	ldrdeq	r7, [r1], -ip
   10f08:	andeq	r7, r1, r4, lsr r1
   10f0c:	ldrdeq	r8, [r2], -r4
   10f10:	andeq	r1, r1, r0, asr r3
   10f14:	andeq	r8, r2, r1, lsr r1
   10f18:	andeq	r6, r1, ip, ror #30
   10f1c:	andeq	r7, r1, ip, lsr r1
   10f20:	andeq	r8, r2, ip, lsr #2
   10f24:	ldrdeq	r8, [r2], -r0
   10f28:	strdeq	r7, [r1], -r4
   10f2c:			; <UNDEFINED> instruction: 0x00016fbc
   10f30:	andeq	r7, r1, r0, lsr r1
   10f34:	andeq	r8, r2, r0, lsr #2
   10f38:	andeq	r7, r1, r8, lsl r2
   10f3c:	andeq	r7, r1, r4, lsl #4
   10f40:	mov	fp, #0
   10f44:	mov	lr, #0
   10f48:	pop	{r1}		; (ldr r1, [sp], #4)
   10f4c:	mov	r2, sp
   10f50:	push	{r2}		; (str r2, [sp, #-4]!)
   10f54:	push	{r0}		; (str r0, [sp, #-4]!)
   10f58:	ldr	ip, [pc, #16]	; 10f70 <abort@plt+0x214>
   10f5c:	push	{ip}		; (str ip, [sp, #-4]!)
   10f60:	ldr	r0, [pc, #12]	; 10f74 <abort@plt+0x218>
   10f64:	ldr	r3, [pc, #12]	; 10f78 <abort@plt+0x21c>
   10f68:	bl	10c54 <__libc_start_main@plt>
   10f6c:	bl	10d5c <abort@plt>
   10f70:	andeq	r6, r1, ip, lsl #30
   10f74:	andeq	r0, r1, r8, ror #26
   10f78:	andeq	r6, r1, ip, lsr #29
   10f7c:	ldr	r3, [pc, #20]	; 10f98 <abort@plt+0x23c>
   10f80:	ldr	r2, [pc, #20]	; 10f9c <abort@plt+0x240>
   10f84:	add	r3, pc, r3
   10f88:	ldr	r2, [r3, r2]
   10f8c:	cmp	r2, #0
   10f90:	bxeq	lr
   10f94:	b	10c6c <__gmon_start__@plt>
   10f98:	andeq	r7, r1, r4, ror r0
   10f9c:	andeq	r0, r0, r4, asr #1
   10fa0:	ldr	r3, [pc, #28]	; 10fc4 <abort@plt+0x268>
   10fa4:	ldr	r0, [pc, #28]	; 10fc8 <abort@plt+0x26c>
   10fa8:	sub	r3, r3, r0
   10fac:	cmp	r3, #6
   10fb0:	bxls	lr
   10fb4:	ldr	r3, [pc, #16]	; 10fcc <abort@plt+0x270>
   10fb8:	cmp	r3, #0
   10fbc:	bxeq	lr
   10fc0:	bx	r3
   10fc4:	andeq	r8, r2, fp, lsl r1
   10fc8:	andeq	r8, r2, r8, lsl r1
   10fcc:	andeq	r0, r0, r0
   10fd0:	ldr	r1, [pc, #36]	; 10ffc <abort@plt+0x2a0>
   10fd4:	ldr	r0, [pc, #36]	; 11000 <abort@plt+0x2a4>
   10fd8:	sub	r1, r1, r0
   10fdc:	asr	r1, r1, #2
   10fe0:	add	r1, r1, r1, lsr #31
   10fe4:	asrs	r1, r1, #1
   10fe8:	bxeq	lr
   10fec:	ldr	r3, [pc, #16]	; 11004 <abort@plt+0x2a8>
   10ff0:	cmp	r3, #0
   10ff4:	bxeq	lr
   10ff8:	bx	r3
   10ffc:	andeq	r8, r2, r8, lsl r1
   11000:	andeq	r8, r2, r8, lsl r1
   11004:	andeq	r0, r0, r0
   11008:	push	{r4, lr}
   1100c:	ldr	r4, [pc, #24]	; 1102c <abort@plt+0x2d0>
   11010:	ldrb	r3, [r4]
   11014:	cmp	r3, #0
   11018:	popne	{r4, pc}
   1101c:	bl	10fa0 <abort@plt+0x244>
   11020:	mov	r3, #1
   11024:	strb	r3, [r4]
   11028:	pop	{r4, pc}
   1102c:	andeq	r8, r2, r0, lsr r1
   11030:	ldr	r0, [pc, #40]	; 11060 <abort@plt+0x304>
   11034:	ldr	r3, [r0]
   11038:	cmp	r3, #0
   1103c:	bne	11044 <abort@plt+0x2e8>
   11040:	b	10fd0 <abort@plt+0x274>
   11044:	ldr	r3, [pc, #24]	; 11064 <abort@plt+0x308>
   11048:	cmp	r3, #0
   1104c:	beq	11040 <abort@plt+0x2e4>
   11050:	push	{r4, lr}
   11054:	blx	r3
   11058:	pop	{r4, lr}
   1105c:	b	10fd0 <abort@plt+0x274>
   11060:	andeq	r7, r2, r4, lsl pc
   11064:	andeq	r0, r0, r0
   11068:	subs	r6, r0, #0
   1106c:	push	{r7, lr}
   11070:	sub	sp, sp, #56	; 0x38
   11074:	beq	110b0 <abort@plt+0x354>
   11078:	ldr	r3, [pc, #612]	; 112e4 <abort@plt+0x588>
   1107c:	mov	r2, #5
   11080:	ldr	r1, [pc, #608]	; 112e8 <abort@plt+0x58c>
   11084:	mov	r0, #0
   11088:	ldr	r4, [r3]
   1108c:	bl	10bc4 <dcgettext@plt>
   11090:	ldr	r3, [pc, #596]	; 112ec <abort@plt+0x590>
   11094:	mov	r1, #1
   11098:	ldr	r3, [r3]
   1109c:	mov	r2, r0
   110a0:	mov	r0, r4
   110a4:	bl	10cf0 <__fprintf_chk@plt>
   110a8:	mov	r0, r6
   110ac:	bl	10c90 <exit@plt>
   110b0:	mov	r2, #5
   110b4:	ldr	r1, [pc, #564]	; 112f0 <abort@plt+0x594>
   110b8:	bl	10bc4 <dcgettext@plt>
   110bc:	ldr	r3, [pc, #552]	; 112ec <abort@plt+0x590>
   110c0:	ldr	r7, [pc, #556]	; 112f4 <abort@plt+0x598>
   110c4:	ldr	r4, [pc, #556]	; 112f8 <abort@plt+0x59c>
   110c8:	ldr	r2, [r3]
   110cc:	mov	r1, r0
   110d0:	mov	r0, #1
   110d4:	bl	10cd8 <__printf_chk@plt>
   110d8:	mov	r2, #5
   110dc:	ldr	r1, [pc, #536]	; 112fc <abort@plt+0x5a0>
   110e0:	mov	r0, r6
   110e4:	bl	10bc4 <dcgettext@plt>
   110e8:	ldr	r1, [r7]
   110ec:	bl	10b4c <fputs_unlocked@plt>
   110f0:	mov	r2, #5
   110f4:	ldr	r1, [pc, #516]	; 11300 <abort@plt+0x5a4>
   110f8:	mov	r0, r6
   110fc:	bl	10bc4 <dcgettext@plt>
   11100:	ldr	r1, [r7]
   11104:	bl	10b4c <fputs_unlocked@plt>
   11108:	mov	r2, #5
   1110c:	ldr	r1, [pc, #496]	; 11304 <abort@plt+0x5a8>
   11110:	mov	r0, r6
   11114:	bl	10bc4 <dcgettext@plt>
   11118:	ldr	r1, [r7]
   1111c:	bl	10b4c <fputs_unlocked@plt>
   11120:	ldm	r4!, {r0, r1, r2, r3}
   11124:	mov	lr, sp
   11128:	stmia	lr!, {r0, r1, r2, r3}
   1112c:	ldm	r4!, {r0, r1, r2, r3}
   11130:	ldr	ip, [sp]
   11134:	stmia	lr!, {r0, r1, r2, r3}
   11138:	cmp	ip, #0
   1113c:	ldm	r4!, {r0, r1, r2, r3}
   11140:	stmia	lr!, {r0, r1, r2, r3}
   11144:	ldm	r4, {r0, r1}
   11148:	moveq	r4, sp
   1114c:	stm	lr, {r0, r1}
   11150:	beq	11180 <abort@plt+0x424>
   11154:	ldr	r5, [pc, #428]	; 11308 <abort@plt+0x5ac>
   11158:	mov	r4, sp
   1115c:	b	1116c <abort@plt+0x410>
   11160:	ldr	ip, [r4, #8]!
   11164:	cmp	ip, #0
   11168:	beq	11180 <abort@plt+0x424>
   1116c:	mov	r1, ip
   11170:	mov	r0, r5
   11174:	bl	10b64 <strcmp@plt>
   11178:	cmp	r0, #0
   1117c:	bne	11160 <abort@plt+0x404>
   11180:	ldr	r4, [r4, #4]
   11184:	mov	r2, #5
   11188:	cmp	r4, #0
   1118c:	ldr	r1, [pc, #376]	; 1130c <abort@plt+0x5b0>
   11190:	beq	11238 <abort@plt+0x4dc>
   11194:	mov	r0, #0
   11198:	bl	10bc4 <dcgettext@plt>
   1119c:	ldr	r3, [pc, #364]	; 11310 <abort@plt+0x5b4>
   111a0:	ldr	r2, [pc, #364]	; 11314 <abort@plt+0x5b8>
   111a4:	mov	r1, r0
   111a8:	mov	r0, #1
   111ac:	bl	10cd8 <__printf_chk@plt>
   111b0:	mov	r1, #0
   111b4:	mov	r0, #5
   111b8:	bl	10d14 <setlocale@plt>
   111bc:	cmp	r0, #0
   111c0:	ldreq	r5, [pc, #320]	; 11308 <abort@plt+0x5ac>
   111c4:	beq	111e0 <abort@plt+0x484>
   111c8:	mov	r2, #3
   111cc:	ldr	r1, [pc, #324]	; 11318 <abort@plt+0x5bc>
   111d0:	bl	10d50 <strncmp@plt>
   111d4:	ldr	r5, [pc, #300]	; 11308 <abort@plt+0x5ac>
   111d8:	cmp	r0, #0
   111dc:	bne	112c8 <abort@plt+0x56c>
   111e0:	mov	r2, #5
   111e4:	ldr	r1, [pc, #304]	; 1131c <abort@plt+0x5c0>
   111e8:	mov	r0, #0
   111ec:	bl	10bc4 <dcgettext@plt>
   111f0:	ldr	r3, [pc, #272]	; 11308 <abort@plt+0x5ac>
   111f4:	ldr	r2, [pc, #276]	; 11310 <abort@plt+0x5b4>
   111f8:	mov	r1, r0
   111fc:	mov	r0, #1
   11200:	bl	10cd8 <__printf_chk@plt>
   11204:	mov	r2, #5
   11208:	ldr	r1, [pc, #272]	; 11320 <abort@plt+0x5c4>
   1120c:	mov	r0, #0
   11210:	bl	10bc4 <dcgettext@plt>
   11214:	ldr	r2, [pc, #264]	; 11324 <abort@plt+0x5c8>
   11218:	cmp	r4, r5
   1121c:	ldr	r3, [pc, #260]	; 11328 <abort@plt+0x5cc>
   11220:	movne	r3, r2
   11224:	mov	r1, r0
   11228:	mov	r2, r4
   1122c:	mov	r0, #1
   11230:	bl	10cd8 <__printf_chk@plt>
   11234:	b	110a8 <abort@plt+0x34c>
   11238:	mov	r0, r4
   1123c:	bl	10bc4 <dcgettext@plt>
   11240:	ldr	r3, [pc, #200]	; 11310 <abort@plt+0x5b4>
   11244:	ldr	r2, [pc, #200]	; 11314 <abort@plt+0x5b8>
   11248:	mov	r1, r0
   1124c:	mov	r0, #1
   11250:	bl	10cd8 <__printf_chk@plt>
   11254:	mov	r1, r4
   11258:	mov	r0, #5
   1125c:	bl	10d14 <setlocale@plt>
   11260:	cmp	r0, #0
   11264:	beq	1127c <abort@plt+0x520>
   11268:	mov	r2, #3
   1126c:	ldr	r1, [pc, #164]	; 11318 <abort@plt+0x5bc>
   11270:	bl	10d50 <strncmp@plt>
   11274:	cmp	r0, #0
   11278:	bne	112c0 <abort@plt+0x564>
   1127c:	mov	r2, #5
   11280:	ldr	r1, [pc, #148]	; 1131c <abort@plt+0x5c0>
   11284:	mov	r0, #0
   11288:	bl	10bc4 <dcgettext@plt>
   1128c:	ldr	r3, [pc, #116]	; 11308 <abort@plt+0x5ac>
   11290:	ldr	r2, [pc, #120]	; 11310 <abort@plt+0x5b4>
   11294:	mov	r4, r3
   11298:	mov	r1, r0
   1129c:	mov	r0, #1
   112a0:	bl	10cd8 <__printf_chk@plt>
   112a4:	ldr	r1, [pc, #116]	; 11320 <abort@plt+0x5c4>
   112a8:	mov	r2, #5
   112ac:	mov	r0, #0
   112b0:	bl	10bc4 <dcgettext@plt>
   112b4:	ldr	r3, [pc, #108]	; 11328 <abort@plt+0x5cc>
   112b8:	mov	r1, r0
   112bc:	b	11228 <abort@plt+0x4cc>
   112c0:	ldr	r5, [pc, #64]	; 11308 <abort@plt+0x5ac>
   112c4:	mov	r4, r5
   112c8:	mov	r2, #5
   112cc:	ldr	r1, [pc, #88]	; 1132c <abort@plt+0x5d0>
   112d0:	mov	r0, #0
   112d4:	bl	10bc4 <dcgettext@plt>
   112d8:	ldr	r1, [r7]
   112dc:	bl	10b4c <fputs_unlocked@plt>
   112e0:	b	111e0 <abort@plt+0x484>
   112e4:	andeq	r8, r2, r8, lsr #2
   112e8:	andeq	r6, r1, r0, asr #31
   112ec:	andeq	r8, r2, ip, lsr r1
   112f0:	andeq	r6, r1, r8, ror #31
   112f4:	andeq	r8, r2, ip, lsr #2
   112f8:	andeq	r6, r1, r4, lsr pc
   112fc:	andeq	r7, r1, r0
   11300:	andeq	r7, r1, r8, lsl #1
   11304:	strheq	r7, [r1], -r8
   11308:			; <UNDEFINED> instruction: 0x00016fbc
   1130c:	strdeq	r7, [r1], -r0
   11310:	andeq	r7, r1, r8, lsl #2
   11314:	andeq	r7, r1, r0, lsr r1
   11318:	andeq	r7, r1, r0, asr #2
   1131c:	andeq	r7, r1, ip, lsl #3
   11320:	andeq	r7, r1, r8, lsr #3
   11324:	strheq	r7, [r1], -r4
   11328:	andeq	r7, r1, ip, lsr #4
   1132c:	andeq	r7, r1, r4, asr #2
   11330:	ldr	r3, [pc, #4]	; 1133c <abort@plt+0x5e0>
   11334:	str	r0, [r3]
   11338:	bx	lr
   1133c:	andeq	r8, r2, r4, lsr r1
   11340:	ldr	r3, [pc, #4]	; 1134c <abort@plt+0x5f0>
   11344:	strb	r0, [r3, #4]
   11348:	bx	lr
   1134c:	andeq	r8, r2, r4, lsr r1
   11350:	ldr	r3, [pc, #192]	; 11418 <abort@plt+0x6bc>
   11354:	push	{r4, r5, r6, lr}
   11358:	sub	sp, sp, #8
   1135c:	ldr	r0, [r3]
   11360:	bl	16614 <abort@plt+0x58b8>
   11364:	cmp	r0, #0
   11368:	beq	1138c <abort@plt+0x630>
   1136c:	ldr	r4, [pc, #168]	; 1141c <abort@plt+0x6c0>
   11370:	ldrb	r3, [r4, #4]
   11374:	cmp	r3, #0
   11378:	beq	113a8 <abort@plt+0x64c>
   1137c:	bl	10cb4 <__errno_location@plt>
   11380:	ldr	r3, [r0]
   11384:	cmp	r3, #32
   11388:	bne	113a8 <abort@plt+0x64c>
   1138c:	ldr	r3, [pc, #140]	; 11420 <abort@plt+0x6c4>
   11390:	ldr	r0, [r3]
   11394:	bl	16614 <abort@plt+0x58b8>
   11398:	cmp	r0, #0
   1139c:	bne	113f0 <abort@plt+0x694>
   113a0:	add	sp, sp, #8
   113a4:	pop	{r4, r5, r6, pc}
   113a8:	mov	r2, #5
   113ac:	ldr	r1, [pc, #112]	; 11424 <abort@plt+0x6c8>
   113b0:	mov	r0, #0
   113b4:	bl	10bc4 <dcgettext@plt>
   113b8:	ldr	r4, [r4]
   113bc:	cmp	r4, #0
   113c0:	mov	r5, r0
   113c4:	beq	113fc <abort@plt+0x6a0>
   113c8:	bl	10cb4 <__errno_location@plt>
   113cc:	ldr	r6, [r0]
   113d0:	mov	r0, r4
   113d4:	bl	140a0 <abort@plt+0x3344>
   113d8:	mov	r1, r6
   113dc:	str	r5, [sp]
   113e0:	ldr	r2, [pc, #64]	; 11428 <abort@plt+0x6cc>
   113e4:	mov	r3, r0
   113e8:	mov	r0, #0
   113ec:	bl	10c30 <error@plt>
   113f0:	ldr	r3, [pc, #52]	; 1142c <abort@plt+0x6d0>
   113f4:	ldr	r0, [r3]
   113f8:	bl	10b88 <_exit@plt>
   113fc:	bl	10cb4 <__errno_location@plt>
   11400:	mov	r3, r5
   11404:	ldr	r2, [pc, #36]	; 11430 <abort@plt+0x6d4>
   11408:	ldr	r1, [r0]
   1140c:	mov	r0, r4
   11410:	bl	10c30 <error@plt>
   11414:	b	113f0 <abort@plt+0x694>
   11418:	andeq	r8, r2, ip, lsr #2
   1141c:	andeq	r8, r2, r4, lsr r1
   11420:	andeq	r8, r2, r8, lsr #2
   11424:	andeq	r7, r1, r0, asr #5
   11428:	andeq	r7, r1, ip, asr #5
   1142c:	ldrdeq	r8, [r2], -r4
   11430:	ldrdeq	r7, [r1], -r0
   11434:	push	{r4, r5, r6, lr}
   11438:	subs	r4, r0, #0
   1143c:	beq	114b0 <abort@plt+0x754>
   11440:	mov	r1, #47	; 0x2f
   11444:	bl	10d20 <strrchr@plt>
   11448:	subs	r5, r0, #0
   1144c:	beq	1149c <abort@plt+0x740>
   11450:	add	r6, r5, #1
   11454:	sub	r3, r6, r4
   11458:	cmp	r3, #6
   1145c:	ble	1149c <abort@plt+0x740>
   11460:	mov	r2, #7
   11464:	ldr	r1, [pc, #96]	; 114cc <abort@plt+0x770>
   11468:	sub	r0, r5, #6
   1146c:	bl	10d50 <strncmp@plt>
   11470:	cmp	r0, #0
   11474:	bne	1149c <abort@plt+0x740>
   11478:	mov	r2, #3
   1147c:	ldr	r1, [pc, #76]	; 114d0 <abort@plt+0x774>
   11480:	mov	r0, r6
   11484:	bl	10d50 <strncmp@plt>
   11488:	cmp	r0, #0
   1148c:	movne	r4, r6
   11490:	ldreq	r3, [pc, #60]	; 114d4 <abort@plt+0x778>
   11494:	addeq	r4, r5, #4
   11498:	streq	r4, [r3]
   1149c:	ldr	r2, [pc, #52]	; 114d8 <abort@plt+0x77c>
   114a0:	ldr	r3, [pc, #52]	; 114dc <abort@plt+0x780>
   114a4:	str	r4, [r2]
   114a8:	str	r4, [r3]
   114ac:	pop	{r4, r5, r6, pc}
   114b0:	ldr	r3, [pc, #40]	; 114e0 <abort@plt+0x784>
   114b4:	mov	r2, #55	; 0x37
   114b8:	mov	r1, #1
   114bc:	ldr	r3, [r3]
   114c0:	ldr	r0, [pc, #28]	; 114e4 <abort@plt+0x788>
   114c4:	bl	10bf4 <fwrite@plt>
   114c8:	bl	10d5c <abort@plt>
   114cc:	andeq	r7, r1, ip, lsl #6
   114d0:	andeq	r7, r1, r4, lsl r3
   114d4:	andeq	r8, r2, r8, lsl r1
   114d8:	andeq	r8, r2, ip, lsr r1
   114dc:	andeq	r8, r2, ip, lsl r1
   114e0:	andeq	r8, r2, r8, lsr #2
   114e4:	ldrdeq	r7, [r1], -r4
   114e8:	push	{r4, r5, r6, lr}
   114ec:	mov	r4, r0
   114f0:	mov	r5, r1
   114f4:	bl	16888 <abort@plt+0x5b2c>
   114f8:	ldrb	r3, [r0]
   114fc:	bic	r3, r3, #32
   11500:	cmp	r3, #85	; 0x55
   11504:	bne	11564 <abort@plt+0x808>
   11508:	ldrb	r3, [r0, #1]
   1150c:	bic	r3, r3, #32
   11510:	cmp	r3, #84	; 0x54
   11514:	bne	115a0 <abort@plt+0x844>
   11518:	ldrb	r3, [r0, #2]
   1151c:	bic	r3, r3, #32
   11520:	cmp	r3, #70	; 0x46
   11524:	bne	115a0 <abort@plt+0x844>
   11528:	ldrb	r3, [r0, #3]
   1152c:	cmp	r3, #45	; 0x2d
   11530:	bne	115a0 <abort@plt+0x844>
   11534:	ldrb	r3, [r0, #4]
   11538:	cmp	r3, #56	; 0x38
   1153c:	bne	115a0 <abort@plt+0x844>
   11540:	ldrb	r3, [r0, #5]
   11544:	cmp	r3, #0
   11548:	bne	115a0 <abort@plt+0x844>
   1154c:	ldrb	r2, [r4]
   11550:	ldr	r3, [pc, #152]	; 115f0 <abort@plt+0x894>
   11554:	ldr	r0, [pc, #152]	; 115f4 <abort@plt+0x898>
   11558:	cmp	r2, #96	; 0x60
   1155c:	movne	r0, r3
   11560:	pop	{r4, r5, r6, pc}
   11564:	cmp	r3, #71	; 0x47
   11568:	bne	115a0 <abort@plt+0x844>
   1156c:	ldrb	r3, [r0, #1]
   11570:	bic	r3, r3, #32
   11574:	cmp	r3, #66	; 0x42
   11578:	bne	115a0 <abort@plt+0x844>
   1157c:	ldrb	r3, [r0, #2]
   11580:	cmp	r3, #49	; 0x31
   11584:	bne	115a0 <abort@plt+0x844>
   11588:	ldrb	r3, [r0, #3]
   1158c:	cmp	r3, #56	; 0x38
   11590:	bne	115a0 <abort@plt+0x844>
   11594:	ldrb	r3, [r0, #4]
   11598:	cmp	r3, #48	; 0x30
   1159c:	beq	115b4 <abort@plt+0x858>
   115a0:	ldr	r3, [pc, #80]	; 115f8 <abort@plt+0x89c>
   115a4:	cmp	r5, #9
   115a8:	ldr	r0, [pc, #76]	; 115fc <abort@plt+0x8a0>
   115ac:	movne	r0, r3
   115b0:	pop	{r4, r5, r6, pc}
   115b4:	ldrb	r3, [r0, #5]
   115b8:	cmp	r3, #51	; 0x33
   115bc:	bne	115a0 <abort@plt+0x844>
   115c0:	ldrb	r3, [r0, #6]
   115c4:	cmp	r3, #48	; 0x30
   115c8:	bne	115a0 <abort@plt+0x844>
   115cc:	ldrb	r3, [r0, #7]
   115d0:	cmp	r3, #0
   115d4:	bne	115a0 <abort@plt+0x844>
   115d8:	ldrb	r2, [r4]
   115dc:	ldr	r3, [pc, #28]	; 11600 <abort@plt+0x8a4>
   115e0:	ldr	r0, [pc, #28]	; 11604 <abort@plt+0x8a8>
   115e4:	cmp	r2, #96	; 0x60
   115e8:	movne	r0, r3
   115ec:	pop	{r4, r5, r6, pc}
   115f0:	andeq	r7, r1, r0, ror r3
   115f4:	andeq	r7, r1, ip, ror #6
   115f8:	andeq	r7, r1, r0, lsl #7
   115fc:	andeq	r7, r1, ip, ror r3
   11600:	andeq	r7, r1, r8, ror r3
   11604:	andeq	r7, r1, r4, ror r3
   11608:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1160c:	sub	sp, sp, #140	; 0x8c
   11610:	mov	r9, r1
   11614:	str	r3, [sp, #24]
   11618:	mov	r3, #1
   1161c:	mov	sl, r0
   11620:	str	r2, [sp, #44]	; 0x2c
   11624:	str	r3, [sp, #28]
   11628:	bl	10c0c <__ctype_get_mb_cur_max@plt>
   1162c:	ldr	r3, [sp, #180]	; 0xb4
   11630:	mov	fp, r9
   11634:	mov	r9, sl
   11638:	lsr	r3, r3, #1
   1163c:	and	r3, r3, #1
   11640:	str	r3, [sp, #40]	; 0x28
   11644:	ldr	r3, [sp, #180]	; 0xb4
   11648:	mov	r2, #0
   1164c:	and	r3, r3, #4
   11650:	str	r3, [sp, #100]	; 0x64
   11654:	ldr	r3, [sp, #180]	; 0xb4
   11658:	str	r2, [sp, #76]	; 0x4c
   1165c:	and	r3, r3, #1
   11660:	str	r3, [sp, #96]	; 0x60
   11664:	str	r2, [sp, #36]	; 0x24
   11668:	str	r2, [sp, #56]	; 0x38
   1166c:	str	r2, [sp, #68]	; 0x44
   11670:	str	r2, [sp, #72]	; 0x48
   11674:	str	r2, [sp, #84]	; 0x54
   11678:	str	r0, [sp, #80]	; 0x50
   1167c:	ldr	r3, [sp, #176]	; 0xb0
   11680:	cmp	r3, #10
   11684:	ldrls	pc, [pc, r3, lsl #2]
   11688:	b	12860 <abort@plt+0x1b04>
   1168c:			; <UNDEFINED> instruction: 0x000116b8
   11690:	ldrdeq	r1, [r1], -r8
   11694:	andeq	r1, r1, r0, lsr fp
   11698:	andeq	r1, r1, ip, lsl #20
   1169c:	andeq	r1, r1, r4, lsl #23
   116a0:	andeq	r1, r1, r4, ror #22
   116a4:	andeq	r1, r1, ip, lsr #20
   116a8:	andeq	r1, r1, r0, asr sl
   116ac:	andeq	r1, r1, r8, ror sl
   116b0:	andeq	r1, r1, r8, ror sl
   116b4:	andeq	r1, r1, r8, ror sl
   116b8:	mov	r3, #0
   116bc:	ldr	r1, [sp, #56]	; 0x38
   116c0:	ldr	r2, [sp, #176]	; 0xb0
   116c4:	ldr	lr, [sp, #176]	; 0xb0
   116c8:	mov	r8, r3
   116cc:	mov	ip, r3
   116d0:	str	r3, [sp, #40]	; 0x28
   116d4:	mov	r3, r1
   116d8:	cmp	r2, #2
   116dc:	moveq	r3, #0
   116e0:	andne	r3, r3, #1
   116e4:	mov	r0, r3
   116e8:	str	r3, [sp, #92]	; 0x5c
   116ec:	ldr	r3, [sp, #68]	; 0x44
   116f0:	sub	lr, lr, #2
   116f4:	adds	r2, r3, #0
   116f8:	movne	r2, #1
   116fc:	and	r3, r1, ip
   11700:	and	r3, r2, r3
   11704:	clz	lr, lr
   11708:	str	r3, [sp, #88]	; 0x58
   1170c:	lsr	lr, lr, #5
   11710:	mov	r3, ip
   11714:	and	r3, r3, lr
   11718:	mov	sl, #0
   1171c:	and	r0, r2, r0
   11720:	str	r3, [sp, #64]	; 0x40
   11724:	eor	r3, r1, #1
   11728:	str	lr, [sp, #52]	; 0x34
   1172c:	str	r0, [sp, #48]	; 0x30
   11730:	str	r3, [sp, #60]	; 0x3c
   11734:	ldr	r3, [sp, #24]
   11738:	cmn	r3, #1
   1173c:	beq	11c6c <abort@plt+0xf10>
   11740:	subs	r7, r3, sl
   11744:	movne	r7, #1
   11748:	cmp	r7, #0
   1174c:	beq	11c84 <abort@plt+0xf28>
   11750:	ldr	r3, [sp, #48]	; 0x30
   11754:	cmp	r3, #0
   11758:	beq	11ff0 <abort@plt+0x1294>
   1175c:	ldr	r2, [sp, #68]	; 0x44
   11760:	ldr	r1, [sp, #24]
   11764:	cmp	r2, #1
   11768:	mov	r3, r2
   1176c:	movls	r3, #0
   11770:	movhi	r3, #1
   11774:	cmn	r1, #1
   11778:	movne	r3, #0
   1177c:	cmp	r3, #0
   11780:	add	r4, sl, r2
   11784:	beq	11794 <abort@plt+0xa38>
   11788:	ldr	r0, [sp, #44]	; 0x2c
   1178c:	bl	10ca8 <strlen@plt>
   11790:	str	r0, [sp, #24]
   11794:	ldr	r3, [sp, #24]
   11798:	cmp	r3, r4
   1179c:	ldr	r3, [sp, #44]	; 0x2c
   117a0:	add	r5, r3, sl
   117a4:	bcc	11ff8 <abort@plt+0x129c>
   117a8:	mov	r0, r5
   117ac:	ldr	r2, [sp, #68]	; 0x44
   117b0:	ldr	r1, [sp, #72]	; 0x48
   117b4:	bl	10bac <memcmp@plt>
   117b8:	cmp	r0, #0
   117bc:	bne	11ff8 <abort@plt+0x129c>
   117c0:	ldr	r3, [sp, #40]	; 0x28
   117c4:	cmp	r3, #0
   117c8:	bne	129b4 <abort@plt+0x1c58>
   117cc:	ldrb	r4, [r5]
   117d0:	cmp	r4, #126	; 0x7e
   117d4:	ldrls	pc, [pc, r4, lsl #2]
   117d8:	b	128f0 <abort@plt+0x1b94>
   117dc:			; <UNDEFINED> instruction: 0x00011eb0
   117e0:	strdeq	r2, [r1], -r0
   117e4:	strdeq	r2, [r1], -r0
   117e8:	strdeq	r2, [r1], -r0
   117ec:	strdeq	r2, [r1], -r0
   117f0:	strdeq	r2, [r1], -r0
   117f4:	strdeq	r2, [r1], -r0
   117f8:	muleq	r1, ip, lr
   117fc:	andeq	r1, r1, r8, lsl #29
   11800:	andeq	r1, r1, r4, ror #28
   11804:	andeq	r1, r1, r4, asr #28
   11808:	andeq	r1, r1, r4, ror lr
   1180c:	andeq	r1, r1, ip, lsr #27
   11810:	andeq	r1, r1, r0, ror #31
   11814:	strdeq	r2, [r1], -r0
   11818:	strdeq	r2, [r1], -r0
   1181c:	strdeq	r2, [r1], -r0
   11820:	strdeq	r2, [r1], -r0
   11824:	strdeq	r2, [r1], -r0
   11828:	strdeq	r2, [r1], -r0
   1182c:	strdeq	r2, [r1], -r0
   11830:	strdeq	r2, [r1], -r0
   11834:	strdeq	r2, [r1], -r0
   11838:	strdeq	r2, [r1], -r0
   1183c:	strdeq	r2, [r1], -r0
   11840:	strdeq	r2, [r1], -r0
   11844:	strdeq	r2, [r1], -r0
   11848:	strdeq	r2, [r1], -r0
   1184c:	strdeq	r2, [r1], -r0
   11850:	strdeq	r2, [r1], -r0
   11854:	strdeq	r2, [r1], -r0
   11858:	strdeq	r2, [r1], -r0
   1185c:	ldrdeq	r1, [r1], -r0
   11860:			; <UNDEFINED> instruction: 0x00011fb0
   11864:			; <UNDEFINED> instruction: 0x00011fb0
   11868:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   1186c:			; <UNDEFINED> instruction: 0x00011fb0
   11870:	muleq	r1, ip, sp
   11874:			; <UNDEFINED> instruction: 0x00011fb0
   11878:	andeq	r1, r1, r8, ror sp
   1187c:			; <UNDEFINED> instruction: 0x00011fb0
   11880:			; <UNDEFINED> instruction: 0x00011fb0
   11884:			; <UNDEFINED> instruction: 0x00011fb0
   11888:	muleq	r1, ip, sp
   1188c:	muleq	r1, ip, sp
   11890:	muleq	r1, ip, sp
   11894:	muleq	r1, ip, sp
   11898:	muleq	r1, ip, sp
   1189c:	muleq	r1, ip, sp
   118a0:	muleq	r1, ip, sp
   118a4:	muleq	r1, ip, sp
   118a8:	muleq	r1, ip, sp
   118ac:	muleq	r1, ip, sp
   118b0:	muleq	r1, ip, sp
   118b4:	muleq	r1, ip, sp
   118b8:	muleq	r1, ip, sp
   118bc:	muleq	r1, ip, sp
   118c0:	muleq	r1, ip, sp
   118c4:	muleq	r1, ip, sp
   118c8:			; <UNDEFINED> instruction: 0x00011fb0
   118cc:			; <UNDEFINED> instruction: 0x00011fb0
   118d0:			; <UNDEFINED> instruction: 0x00011fb0
   118d4:			; <UNDEFINED> instruction: 0x00011fb0
   118d8:	andeq	r1, r1, r8, lsr #26
   118dc:	strdeq	r2, [r1], -r0
   118e0:	muleq	r1, ip, sp
   118e4:	muleq	r1, ip, sp
   118e8:	muleq	r1, ip, sp
   118ec:	muleq	r1, ip, sp
   118f0:	muleq	r1, ip, sp
   118f4:	muleq	r1, ip, sp
   118f8:	muleq	r1, ip, sp
   118fc:	muleq	r1, ip, sp
   11900:	muleq	r1, ip, sp
   11904:	muleq	r1, ip, sp
   11908:	muleq	r1, ip, sp
   1190c:	muleq	r1, ip, sp
   11910:	muleq	r1, ip, sp
   11914:	muleq	r1, ip, sp
   11918:	muleq	r1, ip, sp
   1191c:	muleq	r1, ip, sp
   11920:	muleq	r1, ip, sp
   11924:	muleq	r1, ip, sp
   11928:	muleq	r1, ip, sp
   1192c:	muleq	r1, ip, sp
   11930:	muleq	r1, ip, sp
   11934:	muleq	r1, ip, sp
   11938:	muleq	r1, ip, sp
   1193c:	muleq	r1, ip, sp
   11940:	muleq	r1, ip, sp
   11944:	muleq	r1, ip, sp
   11948:			; <UNDEFINED> instruction: 0x00011fb0
   1194c:	strdeq	r1, [r1], -r4
   11950:	muleq	r1, ip, sp
   11954:			; <UNDEFINED> instruction: 0x00011fb0
   11958:	muleq	r1, ip, sp
   1195c:			; <UNDEFINED> instruction: 0x00011fb0
   11960:	muleq	r1, ip, sp
   11964:	muleq	r1, ip, sp
   11968:	muleq	r1, ip, sp
   1196c:	muleq	r1, ip, sp
   11970:	muleq	r1, ip, sp
   11974:	muleq	r1, ip, sp
   11978:	muleq	r1, ip, sp
   1197c:	muleq	r1, ip, sp
   11980:	muleq	r1, ip, sp
   11984:	muleq	r1, ip, sp
   11988:	muleq	r1, ip, sp
   1198c:	muleq	r1, ip, sp
   11990:	muleq	r1, ip, sp
   11994:	muleq	r1, ip, sp
   11998:	muleq	r1, ip, sp
   1199c:	muleq	r1, ip, sp
   119a0:	muleq	r1, ip, sp
   119a4:	muleq	r1, ip, sp
   119a8:	muleq	r1, ip, sp
   119ac:	muleq	r1, ip, sp
   119b0:	muleq	r1, ip, sp
   119b4:	muleq	r1, ip, sp
   119b8:	muleq	r1, ip, sp
   119bc:	muleq	r1, ip, sp
   119c0:	muleq	r1, ip, sp
   119c4:	muleq	r1, ip, sp
   119c8:	andeq	r1, r1, ip, lsr #23
   119cc:			; <UNDEFINED> instruction: 0x00011fb0
   119d0:	andeq	r1, r1, ip, lsr #23
   119d4:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   119d8:	mov	r3, #1
   119dc:	str	r3, [sp, #40]	; 0x28
   119e0:	str	r3, [sp, #68]	; 0x44
   119e4:	mov	r8, #0
   119e8:	ldr	r3, [pc, #4056]	; 129c8 <abort@plt+0x1c6c>
   119ec:	str	r3, [sp, #72]	; 0x48
   119f0:	mov	r3, #2
   119f4:	str	r3, [sp, #176]	; 0xb0
   119f8:	ldr	r1, [sp, #56]	; 0x38
   119fc:	mov	r2, r3
   11a00:	ldr	ip, [sp, #40]	; 0x28
   11a04:	mov	lr, r3
   11a08:	b	116d4 <abort@plt+0x978>
   11a0c:	mov	r3, #1
   11a10:	str	r3, [sp, #56]	; 0x38
   11a14:	str	r3, [sp, #68]	; 0x44
   11a18:	str	r3, [sp, #40]	; 0x28
   11a1c:	ldr	r3, [pc, #4004]	; 129c8 <abort@plt+0x1c6c>
   11a20:	mov	r8, #0
   11a24:	str	r3, [sp, #72]	; 0x48
   11a28:	b	119f0 <abort@plt+0xc94>
   11a2c:	mov	r3, #1
   11a30:	str	r3, [sp, #56]	; 0x38
   11a34:	str	r3, [sp, #68]	; 0x44
   11a38:	str	r3, [sp, #40]	; 0x28
   11a3c:	ldr	r3, [pc, #3976]	; 129cc <abort@plt+0x1c70>
   11a40:	mov	r8, #0
   11a44:	str	r3, [sp, #72]	; 0x48
   11a48:	mov	r3, #5
   11a4c:	b	119f4 <abort@plt+0xc98>
   11a50:	mov	r3, #0
   11a54:	str	r3, [sp, #40]	; 0x28
   11a58:	mov	r3, #1
   11a5c:	str	r3, [sp, #56]	; 0x38
   11a60:	mov	r8, #0
   11a64:	mov	r1, r3
   11a68:	ldr	r2, [sp, #176]	; 0xb0
   11a6c:	ldr	ip, [sp, #40]	; 0x28
   11a70:	ldr	lr, [sp, #176]	; 0xb0
   11a74:	b	116d4 <abort@plt+0x978>
   11a78:	ldr	r3, [sp, #176]	; 0xb0
   11a7c:	cmp	r3, #10
   11a80:	beq	11ac4 <abort@plt+0xd68>
   11a84:	mov	r2, #5
   11a88:	ldr	r1, [pc, #3904]	; 129d0 <abort@plt+0x1c74>
   11a8c:	mov	r0, #0
   11a90:	bl	10bc4 <dcgettext@plt>
   11a94:	ldr	r2, [pc, #3892]	; 129d0 <abort@plt+0x1c74>
   11a98:	cmp	r0, r2
   11a9c:	str	r0, [sp, #188]	; 0xbc
   11aa0:	beq	12b5c <abort@plt+0x1e00>
   11aa4:	mov	r2, #5
   11aa8:	ldr	r1, [pc, #3864]	; 129c8 <abort@plt+0x1c6c>
   11aac:	mov	r0, #0
   11ab0:	bl	10bc4 <dcgettext@plt>
   11ab4:	ldr	r2, [pc, #3852]	; 129c8 <abort@plt+0x1c6c>
   11ab8:	cmp	r0, r2
   11abc:	str	r0, [sp, #192]	; 0xc0
   11ac0:	beq	12b4c <abort@plt+0x1df0>
   11ac4:	ldr	r8, [sp, #40]	; 0x28
   11ac8:	cmp	r8, #0
   11acc:	movne	r8, #0
   11ad0:	bne	11b00 <abort@plt+0xda4>
   11ad4:	ldr	r3, [sp, #188]	; 0xbc
   11ad8:	ldrb	r3, [r3]
   11adc:	cmp	r3, #0
   11ae0:	beq	11b00 <abort@plt+0xda4>
   11ae4:	ldr	r2, [sp, #188]	; 0xbc
   11ae8:	cmp	fp, r8
   11aec:	strbhi	r3, [r9, r8]
   11af0:	ldrb	r3, [r2, #1]!
   11af4:	add	r8, r8, #1
   11af8:	cmp	r3, #0
   11afc:	bne	11ae8 <abort@plt+0xd8c>
   11b00:	ldr	r0, [sp, #192]	; 0xc0
   11b04:	bl	10ca8 <strlen@plt>
   11b08:	ldr	r3, [sp, #192]	; 0xc0
   11b0c:	ldr	r2, [sp, #176]	; 0xb0
   11b10:	str	r3, [sp, #72]	; 0x48
   11b14:	mov	r3, #1
   11b18:	str	r3, [sp, #56]	; 0x38
   11b1c:	mov	r1, r3
   11b20:	ldr	ip, [sp, #40]	; 0x28
   11b24:	ldr	lr, [sp, #176]	; 0xb0
   11b28:	str	r0, [sp, #68]	; 0x44
   11b2c:	b	116d4 <abort@plt+0x978>
   11b30:	ldr	r3, [sp, #40]	; 0x28
   11b34:	cmp	r3, #0
   11b38:	beq	127e0 <abort@plt+0x1a84>
   11b3c:	mov	r3, #1
   11b40:	str	r3, [sp, #68]	; 0x44
   11b44:	ldr	r3, [pc, #3708]	; 129c8 <abort@plt+0x1c6c>
   11b48:	str	r3, [sp, #72]	; 0x48
   11b4c:	mov	r8, #0
   11b50:	ldr	r1, [sp, #56]	; 0x38
   11b54:	ldr	r2, [sp, #176]	; 0xb0
   11b58:	ldr	ip, [sp, #40]	; 0x28
   11b5c:	ldr	lr, [sp, #176]	; 0xb0
   11b60:	b	116d4 <abort@plt+0x978>
   11b64:	ldr	r3, [sp, #40]	; 0x28
   11b68:	cmp	r3, #0
   11b6c:	beq	12864 <abort@plt+0x1b08>
   11b70:	str	r3, [sp, #56]	; 0x38
   11b74:	mov	r3, #1
   11b78:	str	r3, [sp, #68]	; 0x44
   11b7c:	ldr	r3, [pc, #3656]	; 129cc <abort@plt+0x1c70>
   11b80:	b	11b48 <abort@plt+0xdec>
   11b84:	ldr	r3, [sp, #40]	; 0x28
   11b88:	cmp	r3, #0
   11b8c:	mov	r3, #1
   11b90:	streq	r3, [sp, #56]	; 0x38
   11b94:	beq	127e0 <abort@plt+0x1a84>
   11b98:	str	r3, [sp, #68]	; 0x44
   11b9c:	ldr	r3, [pc, #3620]	; 129c8 <abort@plt+0x1c6c>
   11ba0:	mov	r8, #0
   11ba4:	str	r3, [sp, #72]	; 0x48
   11ba8:	b	119f0 <abort@plt+0xc94>
   11bac:	ldr	r3, [sp, #24]
   11bb0:	ldr	r6, [sp, #48]	; 0x30
   11bb4:	cmn	r3, #1
   11bb8:	beq	12214 <abort@plt+0x14b8>
   11bbc:	subs	r3, r3, #1
   11bc0:	movne	r3, #1
   11bc4:	cmp	r3, #0
   11bc8:	beq	11f94 <abort@plt+0x1238>
   11bcc:	ldr	r1, [sp, #52]	; 0x34
   11bd0:	mov	r7, r3
   11bd4:	mov	r3, #0
   11bd8:	str	r3, [sp, #32]
   11bdc:	ldr	r3, [sp, #60]	; 0x3c
   11be0:	orr	r2, r1, r3
   11be4:	ldr	r3, [sp, #40]	; 0x28
   11be8:	eor	r2, r2, #1
   11bec:	orr	r2, r3, r2
   11bf0:	tst	r2, #255	; 0xff
   11bf4:	bne	12518 <abort@plt+0x17bc>
   11bf8:	cmp	r6, #0
   11bfc:	bne	11dd8 <abort@plt+0x107c>
   11c00:	ldr	r3, [sp, #36]	; 0x24
   11c04:	add	sl, sl, #1
   11c08:	and	r3, r3, r7
   11c0c:	uxtb	r6, r3
   11c10:	cmp	r6, #0
   11c14:	beq	11c40 <abort@plt+0xee4>
   11c18:	cmp	fp, r8
   11c1c:	movhi	r3, #39	; 0x27
   11c20:	strbhi	r3, [r9, r8]
   11c24:	add	r3, r8, #1
   11c28:	cmp	fp, r3
   11c2c:	movhi	r2, #39	; 0x27
   11c30:	add	r8, r8, #2
   11c34:	strbhi	r2, [r9, r3]
   11c38:	mov	r3, #0
   11c3c:	str	r3, [sp, #36]	; 0x24
   11c40:	ldr	r2, [sp, #32]
   11c44:	cmp	r8, fp
   11c48:	ldr	r3, [sp, #28]
   11c4c:	strbcc	r4, [r9, r8]
   11c50:	cmp	r2, #0
   11c54:	moveq	r3, #0
   11c58:	str	r3, [sp, #28]
   11c5c:	ldr	r3, [sp, #24]
   11c60:	add	r8, r8, #1
   11c64:	cmn	r3, #1
   11c68:	bne	11740 <abort@plt+0x9e4>
   11c6c:	ldr	r3, [sp, #44]	; 0x2c
   11c70:	ldrb	r3, [r3, sl]
   11c74:	adds	r7, r3, #0
   11c78:	movne	r7, #1
   11c7c:	cmp	r7, #0
   11c80:	bne	11750 <abort@plt+0x9f4>
   11c84:	ldr	r3, [sp, #64]	; 0x40
   11c88:	cmp	r8, #0
   11c8c:	movne	r3, #0
   11c90:	andeq	r3, r3, #1
   11c94:	cmp	r3, #0
   11c98:	str	r3, [sp, #64]	; 0x40
   11c9c:	bne	12740 <abort@plt+0x19e4>
   11ca0:	ldr	r3, [sp, #40]	; 0x28
   11ca4:	ldr	r2, [sp, #52]	; 0x34
   11ca8:	eor	r3, r3, #1
   11cac:	ands	r2, r2, r3
   11cb0:	beq	12b6c <abort@plt+0x1e10>
   11cb4:	ldr	r3, [sp, #76]	; 0x4c
   11cb8:	cmp	r3, #0
   11cbc:	beq	12b3c <abort@plt+0x1de0>
   11cc0:	ldr	r3, [sp, #28]
   11cc4:	cmp	r3, #0
   11cc8:	bne	12af8 <abort@plt+0x1d9c>
   11ccc:	ldr	r2, [sp, #84]	; 0x54
   11cd0:	clz	r3, fp
   11cd4:	cmp	r2, #0
   11cd8:	lsr	r3, r3, #5
   11cdc:	moveq	r3, #0
   11ce0:	cmp	r3, #0
   11ce4:	beq	12a98 <abort@plt+0x1d3c>
   11ce8:	mov	fp, r2
   11cec:	str	r3, [sp, #76]	; 0x4c
   11cf0:	b	1167c <abort@plt+0x920>
   11cf4:	ldr	r3, [sp, #176]	; 0xb0
   11cf8:	ldr	r6, [sp, #48]	; 0x30
   11cfc:	cmp	r3, #2
   11d00:	beq	12238 <abort@plt+0x14dc>
   11d04:	ldr	r3, [sp, #88]	; 0x58
   11d08:	cmp	r3, #0
   11d0c:	beq	127bc <abort@plt+0x1a60>
   11d10:	mov	r3, #0
   11d14:	add	sl, sl, #1
   11d18:	ldr	r6, [sp, #36]	; 0x24
   11d1c:	str	r3, [sp, #32]
   11d20:	mov	r4, #92	; 0x5c
   11d24:	b	11c10 <abort@plt+0xeb4>
   11d28:	ldr	r3, [sp, #176]	; 0xb0
   11d2c:	ldr	r6, [sp, #48]	; 0x30
   11d30:	cmp	r3, #2
   11d34:	beq	12268 <abort@plt+0x150c>
   11d38:	cmp	r3, #5
   11d3c:	bne	127cc <abort@plt+0x1a70>
   11d40:	ldr	r3, [sp, #100]	; 0x64
   11d44:	cmp	r3, #0
   11d48:	beq	12830 <abort@plt+0x1ad4>
   11d4c:	ldr	r2, [sp, #24]
   11d50:	add	r3, sl, #2
   11d54:	cmp	r2, r3
   11d58:	bls	11d68 <abort@plt+0x100c>
   11d5c:	ldrb	r4, [r5, #1]
   11d60:	cmp	r4, #63	; 0x3f
   11d64:	beq	129d8 <abort@plt+0x1c7c>
   11d68:	mov	r1, #0
   11d6c:	str	r1, [sp, #32]
   11d70:	mov	r4, #63	; 0x3f
   11d74:	b	11bdc <abort@plt+0xe80>
   11d78:	ldr	r3, [sp, #176]	; 0xb0
   11d7c:	ldr	r6, [sp, #48]	; 0x30
   11d80:	cmp	r3, #2
   11d84:	beq	12294 <abort@plt+0x1538>
   11d88:	str	r7, [sp, #32]
   11d8c:	str	r7, [sp, #76]	; 0x4c
   11d90:	mov	r1, #0
   11d94:	mov	r4, #39	; 0x27
   11d98:	b	11bdc <abort@plt+0xe80>
   11d9c:	ldr	r6, [sp, #48]	; 0x30
   11da0:	ldr	r1, [sp, #52]	; 0x34
   11da4:	str	r7, [sp, #32]
   11da8:	b	11bdc <abort@plt+0xe80>
   11dac:	ldr	r6, [sp, #48]	; 0x30
   11db0:	ldr	r1, [sp, #52]	; 0x34
   11db4:	mov	r4, #12
   11db8:	mov	r3, #102	; 0x66
   11dbc:	ldr	r2, [sp, #56]	; 0x38
   11dc0:	cmp	r2, #0
   11dc4:	streq	r2, [sp, #32]
   11dc8:	beq	11bdc <abort@plt+0xe80>
   11dcc:	mov	r4, r3
   11dd0:	mov	r3, #0
   11dd4:	str	r3, [sp, #32]
   11dd8:	ldr	r3, [sp, #40]	; 0x28
   11ddc:	cmp	r3, #0
   11de0:	bne	12550 <abort@plt+0x17f4>
   11de4:	ldr	r3, [sp, #36]	; 0x24
   11de8:	eor	r3, r3, #1
   11dec:	and	r3, r3, r1
   11df0:	ands	r3, r3, #255	; 0xff
   11df4:	beq	11e2c <abort@plt+0x10d0>
   11df8:	cmp	fp, r8
   11dfc:	movhi	r2, #39	; 0x27
   11e00:	strbhi	r2, [r9, r8]
   11e04:	add	r2, r8, #1
   11e08:	cmp	fp, r2
   11e0c:	movhi	r1, #36	; 0x24
   11e10:	strbhi	r1, [r9, r2]
   11e14:	add	r2, r8, #2
   11e18:	cmp	fp, r2
   11e1c:	add	r8, r8, #3
   11e20:	movhi	r1, #39	; 0x27
   11e24:	strbhi	r1, [r9, r2]
   11e28:	str	r3, [sp, #36]	; 0x24
   11e2c:	cmp	fp, r8
   11e30:	movhi	r3, #92	; 0x5c
   11e34:	strbhi	r3, [r9, r8]
   11e38:	add	sl, sl, #1
   11e3c:	add	r8, r8, #1
   11e40:	b	11c40 <abort@plt+0xee4>
   11e44:	ldr	r6, [sp, #48]	; 0x30
   11e48:	mov	r4, #10
   11e4c:	mov	r3, #110	; 0x6e
   11e50:	ldr	r2, [sp, #64]	; 0x40
   11e54:	cmp	r2, #0
   11e58:	bne	128d8 <abort@plt+0x1b7c>
   11e5c:	ldr	r1, [sp, #52]	; 0x34
   11e60:	b	11dbc <abort@plt+0x1060>
   11e64:	ldr	r6, [sp, #48]	; 0x30
   11e68:	ldr	r1, [sp, #52]	; 0x34
   11e6c:	mov	r3, #116	; 0x74
   11e70:	b	11dbc <abort@plt+0x1060>
   11e74:	ldr	r6, [sp, #48]	; 0x30
   11e78:	ldr	r1, [sp, #52]	; 0x34
   11e7c:	mov	r4, #11
   11e80:	mov	r3, #118	; 0x76
   11e84:	b	11dbc <abort@plt+0x1060>
   11e88:	ldr	r6, [sp, #48]	; 0x30
   11e8c:	ldr	r1, [sp, #52]	; 0x34
   11e90:	mov	r4, #8
   11e94:	mov	r3, #98	; 0x62
   11e98:	b	11dbc <abort@plt+0x1060>
   11e9c:	ldr	r6, [sp, #48]	; 0x30
   11ea0:	ldr	r1, [sp, #52]	; 0x34
   11ea4:	mov	r4, #7
   11ea8:	mov	r3, #97	; 0x61
   11eac:	b	11dbc <abort@plt+0x1060>
   11eb0:	ldr	r3, [sp, #56]	; 0x38
   11eb4:	ldr	r6, [sp, #48]	; 0x30
   11eb8:	cmp	r3, #0
   11ebc:	beq	12380 <abort@plt+0x1624>
   11ec0:	ldr	r3, [sp, #40]	; 0x28
   11ec4:	cmp	r3, #0
   11ec8:	bne	129b4 <abort@plt+0x1c58>
   11ecc:	ldr	r3, [sp, #36]	; 0x24
   11ed0:	ldr	r2, [sp, #52]	; 0x34
   11ed4:	eor	r3, r3, #1
   11ed8:	ands	r3, r2, r3
   11edc:	moveq	r2, r8
   11ee0:	beq	11f18 <abort@plt+0x11bc>
   11ee4:	cmp	fp, r8
   11ee8:	movhi	r2, #39	; 0x27
   11eec:	strbhi	r2, [r9, r8]
   11ef0:	add	r2, r8, #1
   11ef4:	cmp	fp, r2
   11ef8:	movhi	r1, #36	; 0x24
   11efc:	strbhi	r1, [r9, r2]
   11f00:	add	r2, r8, #2
   11f04:	cmp	fp, r2
   11f08:	movhi	r1, #39	; 0x27
   11f0c:	strbhi	r1, [r9, r2]
   11f10:	add	r2, r8, #3
   11f14:	str	r3, [sp, #36]	; 0x24
   11f18:	cmp	fp, r2
   11f1c:	movhi	r3, #92	; 0x5c
   11f20:	strbhi	r3, [r9, r2]
   11f24:	ldr	r3, [sp, #92]	; 0x5c
   11f28:	add	r8, r2, #1
   11f2c:	cmp	r3, #0
   11f30:	beq	128b4 <abort@plt+0x1b58>
   11f34:	ldr	r1, [sp, #24]
   11f38:	add	r3, sl, #1
   11f3c:	cmp	r1, r3
   11f40:	bls	11f78 <abort@plt+0x121c>
   11f44:	ldr	r1, [sp, #44]	; 0x2c
   11f48:	ldrb	r3, [r1, r3]
   11f4c:	sub	r3, r3, #48	; 0x30
   11f50:	cmp	r3, #9
   11f54:	bhi	11f78 <abort@plt+0x121c>
   11f58:	cmp	fp, r8
   11f5c:	movhi	r3, #48	; 0x30
   11f60:	strbhi	r3, [r9, r8]
   11f64:	add	r3, r2, #2
   11f68:	cmp	fp, r3
   11f6c:	add	r8, r2, #3
   11f70:	movhi	r1, #48	; 0x30
   11f74:	strbhi	r1, [r9, r3]
   11f78:	ldr	r3, [sp, #40]	; 0x28
   11f7c:	ldr	r1, [sp, #52]	; 0x34
   11f80:	mov	r7, r3
   11f84:	str	r3, [sp, #32]
   11f88:	mov	r4, #48	; 0x30
   11f8c:	b	11bdc <abort@plt+0xe80>
   11f90:	ldr	r6, [sp, #48]	; 0x30
   11f94:	cmp	sl, #0
   11f98:	streq	r7, [sp, #32]
   11f9c:	beq	11fbc <abort@plt+0x1260>
   11fa0:	mov	r3, #0
   11fa4:	ldr	r1, [sp, #52]	; 0x34
   11fa8:	str	r3, [sp, #32]
   11fac:	b	11bdc <abort@plt+0xe80>
   11fb0:	ldr	r6, [sp, #48]	; 0x30
   11fb4:	mov	r3, #0
   11fb8:	str	r3, [sp, #32]
   11fbc:	ldr	r3, [sp, #64]	; 0x40
   11fc0:	cmp	r3, #0
   11fc4:	bne	12740 <abort@plt+0x19e4>
   11fc8:	ldr	r1, [sp, #52]	; 0x34
   11fcc:	b	11bdc <abort@plt+0xe80>
   11fd0:	ldr	r3, [sp, #48]	; 0x30
   11fd4:	mov	r6, r3
   11fd8:	str	r3, [sp, #32]
   11fdc:	b	11fbc <abort@plt+0x1260>
   11fe0:	ldr	r6, [sp, #48]	; 0x30
   11fe4:	mov	r4, #13
   11fe8:	mov	r3, #114	; 0x72
   11fec:	b	11e50 <abort@plt+0x10f4>
   11ff0:	ldr	r3, [sp, #44]	; 0x2c
   11ff4:	add	r5, r3, sl
   11ff8:	ldrb	r4, [r5]
   11ffc:	cmp	r4, #126	; 0x7e
   12000:	ldrls	pc, [pc, r4, lsl #2]
   12004:	b	123a0 <abort@plt+0x1644>
   12008:	andeq	r2, r1, r0, ror r3
   1200c:	andeq	r2, r1, r0, lsr #7
   12010:	andeq	r2, r1, r0, lsr #7
   12014:	andeq	r2, r1, r0, lsr #7
   12018:	andeq	r2, r1, r0, lsr #7
   1201c:	andeq	r2, r1, r0, lsr #7
   12020:	andeq	r2, r1, r0, lsr #7
   12024:	andeq	r2, r1, r8, ror #6
   12028:	andeq	r2, r1, r0, ror #6
   1202c:	andeq	r2, r1, r4, asr r3
   12030:	andeq	r2, r1, ip, asr #6
   12034:	andeq	r2, r1, r4, asr #6
   12038:	andeq	r2, r1, ip, lsr r3
   1203c:	andeq	r2, r1, r4, lsr r3
   12040:	andeq	r2, r1, r0, lsr #7
   12044:	andeq	r2, r1, r0, lsr #7
   12048:	andeq	r2, r1, r0, lsr #7
   1204c:	andeq	r2, r1, r0, lsr #7
   12050:	andeq	r2, r1, r0, lsr #7
   12054:	andeq	r2, r1, r0, lsr #7
   12058:	andeq	r2, r1, r0, lsr #7
   1205c:	andeq	r2, r1, r0, lsr #7
   12060:	andeq	r2, r1, r0, lsr #7
   12064:	andeq	r2, r1, r0, lsr #7
   12068:	andeq	r2, r1, r0, lsr #7
   1206c:	andeq	r2, r1, r0, lsr #7
   12070:	andeq	r2, r1, r0, lsr #7
   12074:	andeq	r2, r1, r0, lsr #7
   12078:	andeq	r2, r1, r0, lsr #7
   1207c:	andeq	r2, r1, r0, lsr #7
   12080:	andeq	r2, r1, r0, lsr #7
   12084:	andeq	r2, r1, r0, lsr #7
   12088:	andeq	r2, r1, r8, lsr #6
   1208c:	andeq	r2, r1, r0, lsr #6
   12090:	andeq	r2, r1, r0, lsr #6
   12094:	andeq	r2, r1, r8, lsl r3
   12098:	andeq	r2, r1, r0, lsr #6
   1209c:	andeq	r2, r1, r0, lsl r3
   120a0:	andeq	r2, r1, r0, lsr #6
   120a4:	andeq	r2, r1, r4, lsl #5
   120a8:	andeq	r2, r1, r0, lsr #6
   120ac:	andeq	r2, r1, r0, lsr #6
   120b0:	andeq	r2, r1, r0, lsr #6
   120b4:	andeq	r2, r1, r0, lsl r3
   120b8:	andeq	r2, r1, r0, lsl r3
   120bc:	andeq	r2, r1, r0, lsl r3
   120c0:	andeq	r2, r1, r0, lsl r3
   120c4:	andeq	r2, r1, r0, lsl r3
   120c8:	andeq	r2, r1, r0, lsl r3
   120cc:	andeq	r2, r1, r0, lsl r3
   120d0:	andeq	r2, r1, r0, lsl r3
   120d4:	andeq	r2, r1, r0, lsl r3
   120d8:	andeq	r2, r1, r0, lsl r3
   120dc:	andeq	r2, r1, r0, lsl r3
   120e0:	andeq	r2, r1, r0, lsl r3
   120e4:	andeq	r2, r1, r0, lsl r3
   120e8:	andeq	r2, r1, r0, lsl r3
   120ec:	andeq	r2, r1, r0, lsl r3
   120f0:	andeq	r2, r1, r0, lsl r3
   120f4:	andeq	r2, r1, r0, lsr #6
   120f8:	andeq	r2, r1, r0, lsr #6
   120fc:	andeq	r2, r1, r0, lsr #6
   12100:	andeq	r2, r1, r0, lsr #6
   12104:	andeq	r2, r1, r8, asr r2
   12108:	andeq	r2, r1, r0, lsr #7
   1210c:	andeq	r2, r1, r0, lsl r3
   12110:	andeq	r2, r1, r0, lsl r3
   12114:	andeq	r2, r1, r0, lsl r3
   12118:	andeq	r2, r1, r0, lsl r3
   1211c:	andeq	r2, r1, r0, lsl r3
   12120:	andeq	r2, r1, r0, lsl r3
   12124:	andeq	r2, r1, r0, lsl r3
   12128:	andeq	r2, r1, r0, lsl r3
   1212c:	andeq	r2, r1, r0, lsl r3
   12130:	andeq	r2, r1, r0, lsl r3
   12134:	andeq	r2, r1, r0, lsl r3
   12138:	andeq	r2, r1, r0, lsl r3
   1213c:	andeq	r2, r1, r0, lsl r3
   12140:	andeq	r2, r1, r0, lsl r3
   12144:	andeq	r2, r1, r0, lsl r3
   12148:	andeq	r2, r1, r0, lsl r3
   1214c:	andeq	r2, r1, r0, lsl r3
   12150:	andeq	r2, r1, r0, lsl r3
   12154:	andeq	r2, r1, r0, lsl r3
   12158:	andeq	r2, r1, r0, lsl r3
   1215c:	andeq	r2, r1, r0, lsl r3
   12160:	andeq	r2, r1, r0, lsl r3
   12164:	andeq	r2, r1, r0, lsl r3
   12168:	andeq	r2, r1, r0, lsl r3
   1216c:	andeq	r2, r1, r0, lsl r3
   12170:	andeq	r2, r1, r0, lsl r3
   12174:	andeq	r2, r1, r0, lsr #6
   12178:	andeq	r2, r1, r8, lsr #4
   1217c:	andeq	r2, r1, r0, lsl r3
   12180:	andeq	r2, r1, r0, lsr #6
   12184:	andeq	r2, r1, r0, lsl r3
   12188:	andeq	r2, r1, r0, lsr #6
   1218c:	andeq	r2, r1, r0, lsl r3
   12190:	andeq	r2, r1, r0, lsl r3
   12194:	andeq	r2, r1, r0, lsl r3
   12198:	andeq	r2, r1, r0, lsl r3
   1219c:	andeq	r2, r1, r0, lsl r3
   121a0:	andeq	r2, r1, r0, lsl r3
   121a4:	andeq	r2, r1, r0, lsl r3
   121a8:	andeq	r2, r1, r0, lsl r3
   121ac:	andeq	r2, r1, r0, lsl r3
   121b0:	andeq	r2, r1, r0, lsl r3
   121b4:	andeq	r2, r1, r0, lsl r3
   121b8:	andeq	r2, r1, r0, lsl r3
   121bc:	andeq	r2, r1, r0, lsl r3
   121c0:	andeq	r2, r1, r0, lsl r3
   121c4:	andeq	r2, r1, r0, lsl r3
   121c8:	andeq	r2, r1, r0, lsl r3
   121cc:	andeq	r2, r1, r0, lsl r3
   121d0:	andeq	r2, r1, r0, lsl r3
   121d4:	andeq	r2, r1, r0, lsl r3
   121d8:	andeq	r2, r1, r0, lsl r3
   121dc:	andeq	r2, r1, r0, lsl r3
   121e0:	andeq	r2, r1, r0, lsl r3
   121e4:	andeq	r2, r1, r0, lsl r3
   121e8:	andeq	r2, r1, r0, lsl r3
   121ec:	andeq	r2, r1, r0, lsl r3
   121f0:	andeq	r2, r1, r0, lsl r3
   121f4:	andeq	r2, r1, r4, lsl #4
   121f8:	andeq	r2, r1, r0, lsr #6
   121fc:	andeq	r2, r1, r4, lsl #4
   12200:	andeq	r2, r1, r8, lsl r3
   12204:	ldr	r3, [sp, #24]
   12208:	mov	r6, #0
   1220c:	cmn	r3, #1
   12210:	bne	11bbc <abort@plt+0xe60>
   12214:	ldr	r3, [sp, #44]	; 0x2c
   12218:	ldrb	r3, [r3, #1]
   1221c:	adds	r3, r3, #0
   12220:	movne	r3, #1
   12224:	b	11bc4 <abort@plt+0xe68>
   12228:	ldr	r3, [sp, #176]	; 0xb0
   1222c:	mov	r6, #0
   12230:	cmp	r3, #2
   12234:	bne	11d04 <abort@plt+0xfa8>
   12238:	ldr	r3, [sp, #64]	; 0x40
   1223c:	cmp	r3, #0
   12240:	bne	12a78 <abort@plt+0x1d1c>
   12244:	add	sl, sl, #1
   12248:	ldr	r6, [sp, #36]	; 0x24
   1224c:	str	r3, [sp, #32]
   12250:	mov	r4, #92	; 0x5c
   12254:	b	11c10 <abort@plt+0xeb4>
   12258:	ldr	r3, [sp, #176]	; 0xb0
   1225c:	mov	r6, #0
   12260:	cmp	r3, #2
   12264:	bne	11d38 <abort@plt+0xfdc>
   12268:	ldr	r3, [sp, #40]	; 0x28
   1226c:	cmp	r3, #0
   12270:	bne	12554 <abort@plt+0x17f8>
   12274:	mov	r1, r7
   12278:	str	r3, [sp, #32]
   1227c:	mov	r4, #63	; 0x3f
   12280:	b	11bdc <abort@plt+0xe80>
   12284:	ldr	r3, [sp, #176]	; 0xb0
   12288:	mov	r6, #0
   1228c:	cmp	r3, #2
   12290:	bne	11d88 <abort@plt+0x102c>
   12294:	ldr	r3, [sp, #64]	; 0x40
   12298:	cmp	r3, #0
   1229c:	bne	12a78 <abort@plt+0x1d1c>
   122a0:	ldr	r2, [sp, #84]	; 0x54
   122a4:	adds	r3, fp, #0
   122a8:	movne	r3, #1
   122ac:	cmp	r2, #0
   122b0:	movne	r3, #0
   122b4:	cmp	r3, #0
   122b8:	strne	fp, [sp, #84]	; 0x54
   122bc:	movne	fp, #0
   122c0:	bne	122f0 <abort@plt+0x1594>
   122c4:	cmp	fp, r8
   122c8:	movhi	r3, #39	; 0x27
   122cc:	strbhi	r3, [r9, r8]
   122d0:	add	r3, r8, #1
   122d4:	cmp	fp, r3
   122d8:	movhi	r2, #92	; 0x5c
   122dc:	strbhi	r2, [r9, r3]
   122e0:	add	r3, r8, #2
   122e4:	cmp	fp, r3
   122e8:	movhi	r2, #39	; 0x27
   122ec:	strbhi	r2, [r9, r3]
   122f0:	ldr	r3, [sp, #64]	; 0x40
   122f4:	add	r8, r8, #3
   122f8:	mov	r1, r7
   122fc:	str	r7, [sp, #32]
   12300:	str	r7, [sp, #76]	; 0x4c
   12304:	str	r3, [sp, #36]	; 0x24
   12308:	mov	r4, #39	; 0x27
   1230c:	b	11bdc <abort@plt+0xe80>
   12310:	mov	r6, #0
   12314:	b	11da0 <abort@plt+0x1044>
   12318:	mov	r6, #0
   1231c:	b	11f94 <abort@plt+0x1238>
   12320:	mov	r6, #0
   12324:	b	11fb4 <abort@plt+0x1258>
   12328:	str	r7, [sp, #32]
   1232c:	mov	r6, #0
   12330:	b	11fbc <abort@plt+0x1260>
   12334:	mov	r6, #0
   12338:	b	11fe4 <abort@plt+0x1288>
   1233c:	mov	r6, #0
   12340:	b	11db0 <abort@plt+0x1054>
   12344:	mov	r6, #0
   12348:	b	11e78 <abort@plt+0x111c>
   1234c:	mov	r6, #0
   12350:	b	11e48 <abort@plt+0x10ec>
   12354:	mov	r6, #0
   12358:	mov	r3, #116	; 0x74
   1235c:	b	11e50 <abort@plt+0x10f4>
   12360:	mov	r6, #0
   12364:	b	11e8c <abort@plt+0x1130>
   12368:	mov	r6, #0
   1236c:	b	11ea0 <abort@plt+0x1144>
   12370:	ldr	r3, [sp, #56]	; 0x38
   12374:	mov	r6, #0
   12378:	cmp	r3, #0
   1237c:	bne	11ec0 <abort@plt+0x1164>
   12380:	ldr	r3, [sp, #96]	; 0x60
   12384:	cmp	r3, #0
   12388:	addne	sl, sl, #1
   1238c:	bne	11734 <abort@plt+0x9d8>
   12390:	ldr	r1, [sp, #52]	; 0x34
   12394:	str	r3, [sp, #32]
   12398:	mov	r4, r3
   1239c:	b	11bdc <abort@plt+0xe80>
   123a0:	mov	r6, #0
   123a4:	ldr	r3, [sp, #80]	; 0x50
   123a8:	cmp	r3, #1
   123ac:	bne	1259c <abort@plt+0x1840>
   123b0:	bl	10c84 <__ctype_b_loc@plt>
   123b4:	ldr	r2, [sp, #80]	; 0x50
   123b8:	sxth	r3, r4
   123bc:	mov	r1, r2
   123c0:	lsl	r3, r3, #1
   123c4:	ldr	r2, [r0]
   123c8:	ldrh	r3, [r2, r3]
   123cc:	and	r3, r3, #16384	; 0x4000
   123d0:	cmp	r3, #0
   123d4:	movne	r3, #1
   123d8:	moveq	r3, #0
   123dc:	str	r3, [sp, #32]
   123e0:	moveq	r3, #1
   123e4:	movne	r3, #0
   123e8:	ldr	r2, [sp, #56]	; 0x38
   123ec:	and	r3, r3, r2
   123f0:	ands	r3, r3, #255	; 0xff
   123f4:	beq	11fc8 <abort@plt+0x126c>
   123f8:	add	r1, sl, r1
   123fc:	mov	r0, #0
   12400:	ldr	r7, [sp, #40]	; 0x28
   12404:	ldr	r2, [sp, #36]	; 0x24
   12408:	ldr	lr, [sp, #52]	; 0x34
   1240c:	b	124bc <abort@plt+0x1760>
   12410:	cmp	r7, #0
   12414:	bne	12810 <abort@plt+0x1ab4>
   12418:	eor	r0, r2, #1
   1241c:	ands	r0, lr, r0
   12420:	beq	12458 <abort@plt+0x16fc>
   12424:	cmp	fp, r8
   12428:	movhi	r2, #39	; 0x27
   1242c:	strbhi	r2, [r9, r8]
   12430:	add	r2, r8, #1
   12434:	cmp	fp, r2
   12438:	movhi	ip, #36	; 0x24
   1243c:	strbhi	ip, [r9, r2]
   12440:	add	r2, r8, #2
   12444:	cmp	fp, r2
   12448:	movhi	ip, #39	; 0x27
   1244c:	strbhi	ip, [r9, r2]
   12450:	add	r8, r8, #3
   12454:	mov	r2, r0
   12458:	cmp	fp, r8
   1245c:	movhi	r0, #92	; 0x5c
   12460:	strbhi	r0, [r9, r8]
   12464:	add	r0, r8, #1
   12468:	cmp	fp, r0
   1246c:	lsrhi	ip, r4, #6
   12470:	addhi	ip, ip, #48	; 0x30
   12474:	strbhi	ip, [r9, r0]
   12478:	add	ip, r8, #2
   1247c:	cmp	fp, ip
   12480:	lsrhi	r0, r4, #3
   12484:	andhi	r0, r0, #7
   12488:	addhi	r0, r0, #48	; 0x30
   1248c:	add	sl, sl, #1
   12490:	strbhi	r0, [r9, ip]
   12494:	and	r4, r4, #7
   12498:	cmp	sl, r1
   1249c:	add	r4, r4, #48	; 0x30
   124a0:	add	r8, r8, #3
   124a4:	bcs	12828 <abort@plt+0x1acc>
   124a8:	mov	r0, r3
   124ac:	cmp	fp, r8
   124b0:	strbhi	r4, [r9, r8]
   124b4:	ldrb	r4, [r5, #1]!
   124b8:	add	r8, r8, #1
   124bc:	cmp	r3, #0
   124c0:	bne	12410 <abort@plt+0x16b4>
   124c4:	cmp	r6, #0
   124c8:	bne	1256c <abort@plt+0x1810>
   124cc:	eor	r6, r0, #1
   124d0:	and	r6, r6, r2
   124d4:	add	sl, sl, #1
   124d8:	cmp	r1, sl
   124dc:	uxtb	r6, r6
   124e0:	bls	12594 <abort@plt+0x1838>
   124e4:	cmp	r6, #0
   124e8:	beq	124ac <abort@plt+0x1750>
   124ec:	cmp	fp, r8
   124f0:	movhi	r2, #39	; 0x27
   124f4:	strbhi	r2, [r9, r8]
   124f8:	add	r2, r8, #1
   124fc:	cmp	fp, r2
   12500:	movhi	ip, #39	; 0x27
   12504:	strbhi	ip, [r9, r2]
   12508:	add	r8, r8, #2
   1250c:	mov	r6, r3
   12510:	mov	r2, r3
   12514:	b	124ac <abort@plt+0x1750>
   12518:	ldr	r3, [sp, #184]	; 0xb8
   1251c:	cmp	r3, #0
   12520:	beq	11bf8 <abort@plt+0xe9c>
   12524:	lsr	r2, r4, #5
   12528:	mov	r0, r3
   1252c:	uxtb	r2, r2
   12530:	and	r3, r4, #31
   12534:	ldr	r2, [r0, r2, lsl #2]
   12538:	lsr	r3, r2, r3
   1253c:	tst	r3, #1
   12540:	beq	11bf8 <abort@plt+0xe9c>
   12544:	ldr	r3, [sp, #40]	; 0x28
   12548:	cmp	r3, #0
   1254c:	beq	11de4 <abort@plt+0x1088>
   12550:	mov	r3, r1
   12554:	str	r3, [sp, #64]	; 0x40
   12558:	mov	sl, r9
   1255c:	ldr	r3, [sp, #56]	; 0x38
   12560:	mov	r9, fp
   12564:	ldr	r2, [sp, #64]	; 0x40
   12568:	b	12758 <abort@plt+0x19fc>
   1256c:	cmp	fp, r8
   12570:	eor	r6, r0, #1
   12574:	movhi	ip, #92	; 0x5c
   12578:	and	r6, r6, r2
   1257c:	add	sl, sl, #1
   12580:	strbhi	ip, [r9, r8]
   12584:	cmp	r1, sl
   12588:	add	r8, r8, #1
   1258c:	uxtb	r6, r6
   12590:	bhi	124e4 <abort@plt+0x1788>
   12594:	str	r2, [sp, #36]	; 0x24
   12598:	b	11c10 <abort@plt+0xeb4>
   1259c:	ldr	r3, [sp, #24]
   125a0:	cmn	r3, #1
   125a4:	mov	r3, #0
   125a8:	str	r3, [sp, #128]	; 0x80
   125ac:	str	r3, [sp, #132]	; 0x84
   125b0:	beq	128a4 <abort@plt+0x1b48>
   125b4:	mov	r2, r7
   125b8:	mov	r3, #0
   125bc:	str	r7, [sp, #104]	; 0x68
   125c0:	str	r5, [sp, #116]	; 0x74
   125c4:	mov	r7, r3
   125c8:	mov	r5, r2
   125cc:	str	r4, [sp, #32]
   125d0:	str	r6, [sp, #108]	; 0x6c
   125d4:	str	r8, [sp, #112]	; 0x70
   125d8:	ldr	r3, [sp, #44]	; 0x2c
   125dc:	add	r6, sl, r7
   125e0:	add	r4, r3, r6
   125e4:	ldr	r3, [sp, #24]
   125e8:	mov	r1, r4
   125ec:	sub	r2, r3, r6
   125f0:	add	r0, sp, #124	; 0x7c
   125f4:	add	r3, sp, #128	; 0x80
   125f8:	bl	168bc <abort@plt+0x5b60>
   125fc:	subs	r8, r0, #0
   12600:	beq	12988 <abort@plt+0x1c2c>
   12604:	cmn	r8, #1
   12608:	beq	12960 <abort@plt+0x1c04>
   1260c:	cmn	r8, #2
   12610:	beq	128f8 <abort@plt+0x1b9c>
   12614:	ldr	r3, [sp, #64]	; 0x40
   12618:	cmp	r3, #0
   1261c:	beq	126dc <abort@plt+0x1980>
   12620:	cmp	r8, #1
   12624:	beq	126dc <abort@plt+0x1980>
   12628:	sub	r3, r8, #1
   1262c:	add	r6, r3, r6
   12630:	ldr	r3, [sp, #44]	; 0x2c
   12634:	add	r6, r3, r6
   12638:	ldrb	r3, [r4, #1]!
   1263c:	sub	r3, r3, #91	; 0x5b
   12640:	cmp	r3, #33	; 0x21
   12644:	ldrls	pc, [pc, r3, lsl #2]
   12648:	b	126d4 <abort@plt+0x1978>
   1264c:	andeq	r2, r1, r0, asr #14
   12650:	andeq	r2, r1, r0, asr #14
   12654:	ldrdeq	r2, [r1], -r4
   12658:	andeq	r2, r1, r0, asr #14
   1265c:	ldrdeq	r2, [r1], -r4
   12660:	andeq	r2, r1, r0, asr #14
   12664:	ldrdeq	r2, [r1], -r4
   12668:	ldrdeq	r2, [r1], -r4
   1266c:	ldrdeq	r2, [r1], -r4
   12670:	ldrdeq	r2, [r1], -r4
   12674:	ldrdeq	r2, [r1], -r4
   12678:	ldrdeq	r2, [r1], -r4
   1267c:	ldrdeq	r2, [r1], -r4
   12680:	ldrdeq	r2, [r1], -r4
   12684:	ldrdeq	r2, [r1], -r4
   12688:	ldrdeq	r2, [r1], -r4
   1268c:	ldrdeq	r2, [r1], -r4
   12690:	ldrdeq	r2, [r1], -r4
   12694:	ldrdeq	r2, [r1], -r4
   12698:	ldrdeq	r2, [r1], -r4
   1269c:	ldrdeq	r2, [r1], -r4
   126a0:	ldrdeq	r2, [r1], -r4
   126a4:	ldrdeq	r2, [r1], -r4
   126a8:	ldrdeq	r2, [r1], -r4
   126ac:	ldrdeq	r2, [r1], -r4
   126b0:	ldrdeq	r2, [r1], -r4
   126b4:	ldrdeq	r2, [r1], -r4
   126b8:	ldrdeq	r2, [r1], -r4
   126bc:	ldrdeq	r2, [r1], -r4
   126c0:	ldrdeq	r2, [r1], -r4
   126c4:	ldrdeq	r2, [r1], -r4
   126c8:	ldrdeq	r2, [r1], -r4
   126cc:	ldrdeq	r2, [r1], -r4
   126d0:	andeq	r2, r1, r0, asr #14
   126d4:	cmp	r6, r4
   126d8:	bne	12638 <abort@plt+0x18dc>
   126dc:	ldr	r0, [sp, #124]	; 0x7c
   126e0:	bl	10be8 <iswprint@plt>
   126e4:	add	r7, r7, r8
   126e8:	cmp	r0, #0
   126ec:	add	r0, sp, #128	; 0x80
   126f0:	moveq	r5, #0
   126f4:	bl	10ba0 <mbsinit@plt>
   126f8:	cmp	r0, #0
   126fc:	beq	125d8 <abort@plt+0x187c>
   12700:	ldr	r4, [sp, #32]
   12704:	str	r5, [sp, #32]
   12708:	ldr	r3, [sp, #32]
   1270c:	mov	r1, r7
   12710:	eor	r3, r3, #1
   12714:	ldr	r7, [sp, #104]	; 0x68
   12718:	ldr	r6, [sp, #108]	; 0x6c
   1271c:	ldr	r8, [sp, #112]	; 0x70
   12720:	ldr	r5, [sp, #116]	; 0x74
   12724:	uxtb	r3, r3
   12728:	cmp	r1, #1
   1272c:	bls	123e8 <abort@plt+0x168c>
   12730:	ldr	r2, [sp, #56]	; 0x38
   12734:	and	r3, r3, r2
   12738:	uxtb	r3, r3
   1273c:	b	123f8 <abort@plt+0x169c>
   12740:	mov	r3, #2
   12744:	str	r3, [sp, #176]	; 0xb0
   12748:	ldr	r2, [sp, #64]	; 0x40
   1274c:	ldr	r3, [sp, #56]	; 0x38
   12750:	mov	sl, r9
   12754:	mov	r9, fp
   12758:	and	r3, r3, r2
   1275c:	tst	r3, #255	; 0xff
   12760:	ldr	r3, [sp, #176]	; 0xb0
   12764:	movne	r3, #4
   12768:	str	r3, [sp, #176]	; 0xb0
   1276c:	ldr	r3, [sp, #180]	; 0xb4
   12770:	mov	ip, #0
   12774:	bic	r3, r3, #2
   12778:	str	r3, [sp, #4]
   1277c:	ldr	r3, [sp, #192]	; 0xc0
   12780:	ldr	r2, [sp, #44]	; 0x2c
   12784:	str	r3, [sp, #16]
   12788:	ldr	r3, [sp, #188]	; 0xbc
   1278c:	mov	r1, r9
   12790:	str	r3, [sp, #12]
   12794:	ldr	r3, [sp, #176]	; 0xb0
   12798:	mov	r0, sl
   1279c:	str	r3, [sp]
   127a0:	str	ip, [sp, #8]
   127a4:	ldr	r3, [sp, #24]
   127a8:	bl	11608 <abort@plt+0x8ac>
   127ac:	mov	fp, r0
   127b0:	mov	r0, fp
   127b4:	add	sp, sp, #140	; 0x8c
   127b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   127bc:	mov	r4, #92	; 0x5c
   127c0:	mov	r1, #0
   127c4:	mov	r3, r4
   127c8:	b	11dbc <abort@plt+0x1060>
   127cc:	mov	r3, #0
   127d0:	ldr	r1, [sp, #52]	; 0x34
   127d4:	str	r3, [sp, #32]
   127d8:	mov	r4, #63	; 0x3f
   127dc:	b	11bdc <abort@plt+0xe80>
   127e0:	cmp	fp, #0
   127e4:	beq	12840 <abort@plt+0x1ae4>
   127e8:	mov	r3, #39	; 0x27
   127ec:	strb	r3, [r9]
   127f0:	mov	r3, #0
   127f4:	str	r3, [sp, #40]	; 0x28
   127f8:	mov	r3, #1
   127fc:	str	r3, [sp, #68]	; 0x44
   12800:	ldr	r3, [pc, #448]	; 129c8 <abort@plt+0x1c6c>
   12804:	mov	r8, #1
   12808:	str	r3, [sp, #72]	; 0x48
   1280c:	b	119f0 <abort@plt+0xc94>
   12810:	ldr	r3, [sp, #40]	; 0x28
   12814:	mov	sl, r9
   12818:	str	r3, [sp, #56]	; 0x38
   1281c:	mov	r9, fp
   12820:	ldr	r2, [sp, #64]	; 0x40
   12824:	b	12758 <abort@plt+0x19fc>
   12828:	str	r2, [sp, #36]	; 0x24
   1282c:	b	11c40 <abort@plt+0xee4>
   12830:	mov	r1, #0
   12834:	str	r3, [sp, #32]
   12838:	mov	r4, #63	; 0x3f
   1283c:	b	11bdc <abort@plt+0xe80>
   12840:	ldr	r3, [pc, #384]	; 129c8 <abort@plt+0x1c6c>
   12844:	str	r3, [sp, #72]	; 0x48
   12848:	mov	r3, #0
   1284c:	str	r3, [sp, #40]	; 0x28
   12850:	mov	r3, #1
   12854:	str	r3, [sp, #68]	; 0x44
   12858:	mov	r8, r3
   1285c:	b	119f0 <abort@plt+0xc94>
   12860:	bl	10d5c <abort@plt>
   12864:	cmp	fp, #0
   12868:	beq	128c8 <abort@plt+0x1b6c>
   1286c:	mov	r2, #1
   12870:	mov	r3, #34	; 0x22
   12874:	strb	r3, [r9]
   12878:	mov	r8, r2
   1287c:	mov	r3, r2
   12880:	str	r2, [sp, #68]	; 0x44
   12884:	str	r3, [sp, #56]	; 0x38
   12888:	ldr	r3, [pc, #316]	; 129cc <abort@plt+0x1c70>
   1288c:	ldr	r1, [sp, #56]	; 0x38
   12890:	str	r3, [sp, #72]	; 0x48
   12894:	ldr	r2, [sp, #176]	; 0xb0
   12898:	ldr	ip, [sp, #40]	; 0x28
   1289c:	ldr	lr, [sp, #176]	; 0xb0
   128a0:	b	116d4 <abort@plt+0x978>
   128a4:	ldr	r0, [sp, #44]	; 0x2c
   128a8:	bl	10ca8 <strlen@plt>
   128ac:	str	r0, [sp, #24]
   128b0:	b	125b4 <abort@plt+0x1858>
   128b4:	mov	r7, #0
   128b8:	ldr	r1, [sp, #52]	; 0x34
   128bc:	str	r3, [sp, #32]
   128c0:	mov	r4, #48	; 0x30
   128c4:	b	11bdc <abort@plt+0xe80>
   128c8:	mov	r3, #1
   128cc:	str	r3, [sp, #68]	; 0x44
   128d0:	mov	r8, r3
   128d4:	b	12884 <abort@plt+0x1b28>
   128d8:	mov	r3, #2
   128dc:	mov	sl, r9
   128e0:	str	r3, [sp, #176]	; 0xb0
   128e4:	mov	r9, fp
   128e8:	ldr	r3, [sp, #56]	; 0x38
   128ec:	b	12758 <abort@plt+0x19fc>
   128f0:	ldr	r6, [sp, #48]	; 0x30
   128f4:	b	123a4 <abort@plt+0x1648>
   128f8:	ldr	r0, [sp, #24]
   128fc:	mov	ip, r6
   12900:	cmp	r0, ip
   12904:	mov	r1, r7
   12908:	mov	r2, r4
   1290c:	ldr	r7, [sp, #104]	; 0x68
   12910:	ldr	r4, [sp, #32]
   12914:	ldr	r6, [sp, #108]	; 0x6c
   12918:	ldr	r8, [sp, #112]	; 0x70
   1291c:	ldr	r5, [sp, #116]	; 0x74
   12920:	bls	12950 <abort@plt+0x1bf4>
   12924:	ldrb	r3, [r2]
   12928:	cmp	r3, #0
   1292c:	bne	12940 <abort@plt+0x1be4>
   12930:	b	12a60 <abort@plt+0x1d04>
   12934:	ldrb	r3, [r2, #1]!
   12938:	cmp	r3, #0
   1293c:	beq	12a60 <abort@plt+0x1d04>
   12940:	add	r1, r1, #1
   12944:	add	r3, sl, r1
   12948:	cmp	r0, r3
   1294c:	bhi	12934 <abort@plt+0x1bd8>
   12950:	mov	r2, #0
   12954:	mov	r3, r7
   12958:	str	r2, [sp, #32]
   1295c:	b	12728 <abort@plt+0x19cc>
   12960:	mov	r1, r7
   12964:	ldr	r7, [sp, #104]	; 0x68
   12968:	mov	r2, #0
   1296c:	ldr	r4, [sp, #32]
   12970:	ldr	r6, [sp, #108]	; 0x6c
   12974:	ldr	r8, [sp, #112]	; 0x70
   12978:	ldr	r5, [sp, #116]	; 0x74
   1297c:	mov	r3, r7
   12980:	str	r2, [sp, #32]
   12984:	b	12728 <abort@plt+0x19cc>
   12988:	mov	r3, r5
   1298c:	eor	r3, r3, #1
   12990:	ldr	r4, [sp, #32]
   12994:	mov	r1, r7
   12998:	str	r5, [sp, #32]
   1299c:	ldr	r7, [sp, #104]	; 0x68
   129a0:	ldr	r6, [sp, #108]	; 0x6c
   129a4:	ldr	r8, [sp, #112]	; 0x70
   129a8:	ldr	r5, [sp, #116]	; 0x74
   129ac:	uxtb	r3, r3
   129b0:	b	12728 <abort@plt+0x19cc>
   129b4:	mov	sl, r9
   129b8:	str	r3, [sp, #56]	; 0x38
   129bc:	mov	r9, fp
   129c0:	ldr	r2, [sp, #64]	; 0x40
   129c4:	b	12758 <abort@plt+0x19fc>
   129c8:	andeq	r7, r1, r0, lsl #7
   129cc:	andeq	r7, r1, ip, ror r3
   129d0:	andeq	r7, r1, r4, lsl #7
   129d4:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   129d8:	ldr	r2, [sp, #44]	; 0x2c
   129dc:	ldrb	r1, [r2, r3]
   129e0:	sub	r2, r1, #33	; 0x21
   129e4:	uxtb	r2, r2
   129e8:	cmp	r2, #29
   129ec:	bhi	12a6c <abort@plt+0x1d10>
   129f0:	ldr	r0, [pc, #-36]	; 129d4 <abort@plt+0x1c78>
   129f4:	mov	ip, #1
   129f8:	ands	r2, r0, ip, lsl r2
   129fc:	beq	12a8c <abort@plt+0x1d30>
   12a00:	ldr	r2, [sp, #40]	; 0x28
   12a04:	cmp	r2, #0
   12a08:	bne	12b80 <abort@plt+0x1e24>
   12a0c:	add	r2, r8, #1
   12a10:	cmp	fp, r8
   12a14:	strbhi	r4, [r9, r8]
   12a18:	cmp	fp, r2
   12a1c:	movhi	r0, #34	; 0x22
   12a20:	strbhi	r0, [r9, r2]
   12a24:	add	r2, r8, #2
   12a28:	cmp	fp, r2
   12a2c:	movhi	r0, #34	; 0x22
   12a30:	strbhi	r0, [r9, r2]
   12a34:	add	r2, r8, #3
   12a38:	cmp	fp, r2
   12a3c:	mov	sl, r3
   12a40:	ldr	r3, [sp, #40]	; 0x28
   12a44:	movhi	r0, #63	; 0x3f
   12a48:	mov	r4, r1
   12a4c:	strbhi	r0, [r9, r2]
   12a50:	add	r8, r8, #4
   12a54:	mov	r1, r3
   12a58:	str	r3, [sp, #32]
   12a5c:	b	11bdc <abort@plt+0xe80>
   12a60:	str	r3, [sp, #32]
   12a64:	mov	r3, r7
   12a68:	b	12728 <abort@plt+0x19cc>
   12a6c:	mov	r1, #0
   12a70:	str	r1, [sp, #32]
   12a74:	b	11bdc <abort@plt+0xe80>
   12a78:	mov	sl, r9
   12a7c:	ldr	r3, [sp, #56]	; 0x38
   12a80:	mov	r9, fp
   12a84:	ldr	r2, [sp, #64]	; 0x40
   12a88:	b	12758 <abort@plt+0x19fc>
   12a8c:	str	r2, [sp, #32]
   12a90:	mov	r1, #0
   12a94:	b	11bdc <abort@plt+0xe80>
   12a98:	ldr	r2, [sp, #76]	; 0x4c
   12a9c:	mov	sl, r9
   12aa0:	mov	r9, fp
   12aa4:	mov	fp, r8
   12aa8:	ldr	r1, [sp, #72]	; 0x48
   12aac:	cmp	r1, #0
   12ab0:	moveq	r3, #0
   12ab4:	andne	r3, r2, #1
   12ab8:	cmp	r3, #0
   12abc:	beq	12ae8 <abort@plt+0x1d8c>
   12ac0:	ldrb	r3, [r1]
   12ac4:	cmp	r3, #0
   12ac8:	beq	12ae8 <abort@plt+0x1d8c>
   12acc:	mov	r2, r1
   12ad0:	cmp	r9, fp
   12ad4:	strbhi	r3, [sl, fp]
   12ad8:	ldrb	r3, [r2, #1]!
   12adc:	add	fp, fp, #1
   12ae0:	cmp	r3, #0
   12ae4:	bne	12ad0 <abort@plt+0x1d74>
   12ae8:	cmp	r9, fp
   12aec:	movhi	r3, #0
   12af0:	strbhi	r3, [sl, fp]
   12af4:	b	127b0 <abort@plt+0x1a54>
   12af8:	ldr	r3, [sp, #192]	; 0xc0
   12afc:	mov	ip, #5
   12b00:	str	r3, [sp, #16]
   12b04:	ldr	r3, [sp, #188]	; 0xbc
   12b08:	ldr	r2, [sp, #44]	; 0x2c
   12b0c:	str	r3, [sp, #12]
   12b10:	ldr	r3, [sp, #184]	; 0xb8
   12b14:	ldr	r1, [sp, #84]	; 0x54
   12b18:	str	r3, [sp, #8]
   12b1c:	ldr	r3, [sp, #180]	; 0xb4
   12b20:	mov	r0, r9
   12b24:	str	r3, [sp, #4]
   12b28:	str	ip, [sp]
   12b2c:	ldr	r3, [sp, #24]
   12b30:	bl	11608 <abort@plt+0x8ac>
   12b34:	mov	fp, r0
   12b38:	b	127b0 <abort@plt+0x1a54>
   12b3c:	mov	sl, r9
   12b40:	mov	r9, fp
   12b44:	mov	fp, r8
   12b48:	b	12aa8 <abort@plt+0x1d4c>
   12b4c:	ldr	r1, [sp, #176]	; 0xb0
   12b50:	bl	114e8 <abort@plt+0x78c>
   12b54:	str	r0, [sp, #192]	; 0xc0
   12b58:	b	11ac4 <abort@plt+0xd68>
   12b5c:	ldr	r1, [sp, #176]	; 0xb0
   12b60:	bl	114e8 <abort@plt+0x78c>
   12b64:	str	r0, [sp, #188]	; 0xbc
   12b68:	b	11aa4 <abort@plt+0xd48>
   12b6c:	mov	sl, r9
   12b70:	mov	r2, r3
   12b74:	mov	r9, fp
   12b78:	mov	fp, r8
   12b7c:	b	12aa8 <abort@plt+0x1d4c>
   12b80:	mov	sl, r9
   12b84:	mov	r9, fp
   12b88:	b	1276c <abort@plt+0x1a10>
   12b8c:	push	{r4, r5, r6, lr}
   12b90:	mov	r5, r0
   12b94:	bl	10cb4 <__errno_location@plt>
   12b98:	cmp	r5, #0
   12b9c:	mov	r1, #48	; 0x30
   12ba0:	mov	r4, r0
   12ba4:	ldr	r0, [pc, #16]	; 12bbc <abort@plt+0x1e60>
   12ba8:	ldr	r6, [r4]
   12bac:	movne	r0, r5
   12bb0:	bl	16428 <abort@plt+0x56cc>
   12bb4:	str	r6, [r4]
   12bb8:	pop	{r4, r5, r6, pc}
   12bbc:	andeq	r8, r2, r0, asr #2
   12bc0:	ldr	r3, [pc, #12]	; 12bd4 <abort@plt+0x1e78>
   12bc4:	cmp	r0, #0
   12bc8:	moveq	r0, r3
   12bcc:	ldr	r0, [r0]
   12bd0:	bx	lr
   12bd4:	andeq	r8, r2, r0, asr #2
   12bd8:	ldr	r3, [pc, #12]	; 12bec <abort@plt+0x1e90>
   12bdc:	cmp	r0, #0
   12be0:	moveq	r0, r3
   12be4:	str	r1, [r0]
   12be8:	bx	lr
   12bec:	andeq	r8, r2, r0, asr #2
   12bf0:	ldr	r3, [pc, #52]	; 12c2c <abort@plt+0x1ed0>
   12bf4:	cmp	r0, #0
   12bf8:	moveq	r0, r3
   12bfc:	add	r3, r0, #8
   12c00:	push	{lr}		; (str lr, [sp, #-4]!)
   12c04:	lsr	lr, r1, #5
   12c08:	and	r1, r1, #31
   12c0c:	ldr	ip, [r3, lr, lsl #2]
   12c10:	lsr	r0, ip, r1
   12c14:	eor	r2, r2, r0
   12c18:	and	r2, r2, #1
   12c1c:	and	r0, r0, #1
   12c20:	eor	r1, ip, r2, lsl r1
   12c24:	str	r1, [r3, lr, lsl #2]
   12c28:	pop	{pc}		; (ldr pc, [sp], #4)
   12c2c:	andeq	r8, r2, r0, asr #2
   12c30:	ldr	r3, [pc, #16]	; 12c48 <abort@plt+0x1eec>
   12c34:	cmp	r0, #0
   12c38:	movne	r3, r0
   12c3c:	ldr	r0, [r3, #4]
   12c40:	str	r1, [r3, #4]
   12c44:	bx	lr
   12c48:	andeq	r8, r2, r0, asr #2
   12c4c:	ldr	r3, [pc, #44]	; 12c80 <abort@plt+0x1f24>
   12c50:	cmp	r0, #0
   12c54:	moveq	r0, r3
   12c58:	mov	ip, #10
   12c5c:	cmp	r2, #0
   12c60:	cmpne	r1, #0
   12c64:	str	ip, [r0]
   12c68:	beq	12c78 <abort@plt+0x1f1c>
   12c6c:	str	r1, [r0, #40]	; 0x28
   12c70:	str	r2, [r0, #44]	; 0x2c
   12c74:	bx	lr
   12c78:	push	{r4, lr}
   12c7c:	bl	10d5c <abort@plt>
   12c80:	andeq	r8, r2, r0, asr #2
   12c84:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12c88:	sub	sp, sp, #24
   12c8c:	ldr	ip, [pc, #108]	; 12d00 <abort@plt+0x1fa4>
   12c90:	ldr	r4, [sp, #56]	; 0x38
   12c94:	mov	r9, r2
   12c98:	cmp	r4, #0
   12c9c:	moveq	r4, ip
   12ca0:	mov	sl, r3
   12ca4:	mov	r7, r0
   12ca8:	mov	r8, r1
   12cac:	bl	10cb4 <__errno_location@plt>
   12cb0:	ldr	r3, [r4, #44]	; 0x2c
   12cb4:	mov	r1, r8
   12cb8:	ldr	r6, [r0]
   12cbc:	str	r3, [sp, #16]
   12cc0:	ldr	r2, [r4, #40]	; 0x28
   12cc4:	add	r3, r4, #8
   12cc8:	str	r3, [sp, #8]
   12ccc:	str	r2, [sp, #12]
   12cd0:	ldr	r2, [r4, #4]
   12cd4:	mov	r5, r0
   12cd8:	str	r2, [sp, #4]
   12cdc:	ldr	ip, [r4]
   12ce0:	mov	r3, sl
   12ce4:	mov	r2, r9
   12ce8:	mov	r0, r7
   12cec:	str	ip, [sp]
   12cf0:	bl	11608 <abort@plt+0x8ac>
   12cf4:	str	r6, [r5]
   12cf8:	add	sp, sp, #24
   12cfc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12d00:	andeq	r8, r2, r0, asr #2
   12d04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12d08:	cmp	r2, #0
   12d0c:	sub	sp, sp, #36	; 0x24
   12d10:	ldr	r4, [pc, #164]	; 12dbc <abort@plt+0x2060>
   12d14:	mov	r8, r1
   12d18:	movne	r4, r2
   12d1c:	mov	r7, r0
   12d20:	bl	10cb4 <__errno_location@plt>
   12d24:	ldr	r3, [r4, #44]	; 0x2c
   12d28:	ldr	r5, [r4, #4]
   12d2c:	add	r9, r4, #8
   12d30:	orr	r5, r5, #1
   12d34:	mov	r1, #0
   12d38:	mov	r2, r7
   12d3c:	ldr	fp, [r0]
   12d40:	str	r3, [sp, #16]
   12d44:	ldr	r3, [r4, #40]	; 0x28
   12d48:	stmib	sp, {r5, r9}
   12d4c:	str	r3, [sp, #12]
   12d50:	ldr	r3, [r4]
   12d54:	mov	r6, r0
   12d58:	str	r3, [sp]
   12d5c:	mov	r0, r1
   12d60:	mov	r3, r8
   12d64:	bl	11608 <abort@plt+0x8ac>
   12d68:	add	r1, r0, #1
   12d6c:	mov	r0, r1
   12d70:	str	r1, [sp, #28]
   12d74:	bl	15ee4 <abort@plt+0x5188>
   12d78:	ldr	r3, [r4, #44]	; 0x2c
   12d7c:	ldr	r1, [sp, #28]
   12d80:	str	r3, [sp, #16]
   12d84:	ldr	r3, [r4, #40]	; 0x28
   12d88:	str	r5, [sp, #4]
   12d8c:	str	r3, [sp, #12]
   12d90:	str	r9, [sp, #8]
   12d94:	ldr	ip, [r4]
   12d98:	mov	r3, r8
   12d9c:	mov	r2, r7
   12da0:	str	ip, [sp]
   12da4:	mov	sl, r0
   12da8:	bl	11608 <abort@plt+0x8ac>
   12dac:	mov	r0, sl
   12db0:	str	fp, [r6]
   12db4:	add	sp, sp, #36	; 0x24
   12db8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12dbc:	andeq	r8, r2, r0, asr #2
   12dc0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12dc4:	cmp	r3, #0
   12dc8:	sub	sp, sp, #44	; 0x2c
   12dcc:	ldr	r4, [pc, #192]	; 12e94 <abort@plt+0x2138>
   12dd0:	mov	r6, r2
   12dd4:	movne	r4, r3
   12dd8:	mov	r9, r1
   12ddc:	mov	r8, r0
   12de0:	bl	10cb4 <__errno_location@plt>
   12de4:	ldr	r3, [r4, #44]	; 0x2c
   12de8:	ldr	r5, [r4, #4]
   12dec:	add	sl, r4, #8
   12df0:	cmp	r6, #0
   12df4:	orreq	r5, r5, #1
   12df8:	mov	r1, #0
   12dfc:	ldr	r2, [r0]
   12e00:	str	r3, [sp, #16]
   12e04:	ldr	r3, [r4, #40]	; 0x28
   12e08:	stmib	sp, {r5, sl}
   12e0c:	str	r3, [sp, #12]
   12e10:	ldr	r3, [r4]
   12e14:	mov	r7, r0
   12e18:	str	r2, [sp, #28]
   12e1c:	str	r3, [sp]
   12e20:	mov	r2, r8
   12e24:	mov	r3, r9
   12e28:	mov	r0, r1
   12e2c:	bl	11608 <abort@plt+0x8ac>
   12e30:	add	r1, r0, #1
   12e34:	mov	fp, r0
   12e38:	mov	r0, r1
   12e3c:	str	r1, [sp, #36]	; 0x24
   12e40:	bl	15ee4 <abort@plt+0x5188>
   12e44:	ldr	r3, [r4, #44]	; 0x2c
   12e48:	mov	r2, r8
   12e4c:	str	r3, [sp, #16]
   12e50:	ldr	r3, [r4, #40]	; 0x28
   12e54:	str	r5, [sp, #4]
   12e58:	str	r3, [sp, #12]
   12e5c:	str	sl, [sp, #8]
   12e60:	ldr	ip, [r4]
   12e64:	ldr	r1, [sp, #36]	; 0x24
   12e68:	mov	r3, r9
   12e6c:	str	ip, [sp]
   12e70:	str	r0, [sp, #32]
   12e74:	bl	11608 <abort@plt+0x8ac>
   12e78:	ldr	r2, [sp, #28]
   12e7c:	cmp	r6, #0
   12e80:	str	r2, [r7]
   12e84:	ldr	r0, [sp, #32]
   12e88:	strne	fp, [r6]
   12e8c:	add	sp, sp, #44	; 0x2c
   12e90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12e94:	andeq	r8, r2, r0, asr #2
   12e98:	push	{r4, r5, r6, r7, r8, lr}
   12e9c:	ldr	r6, [pc, #116]	; 12f18 <abort@plt+0x21bc>
   12ea0:	ldr	r3, [r6, #4]
   12ea4:	ldr	r7, [r6]
   12ea8:	cmp	r3, #1
   12eac:	movgt	r5, r7
   12eb0:	movgt	r4, #1
   12eb4:	ble	12ed4 <abort@plt+0x2178>
   12eb8:	ldr	r0, [r5, #12]
   12ebc:	bl	16790 <abort@plt+0x5a34>
   12ec0:	ldr	r3, [r6, #4]
   12ec4:	add	r4, r4, #1
   12ec8:	cmp	r3, r4
   12ecc:	add	r5, r5, #8
   12ed0:	bgt	12eb8 <abort@plt+0x215c>
   12ed4:	ldr	r0, [r7, #4]
   12ed8:	ldr	r4, [pc, #60]	; 12f1c <abort@plt+0x21c0>
   12edc:	cmp	r0, r4
   12ee0:	beq	12ef4 <abort@plt+0x2198>
   12ee4:	bl	16790 <abort@plt+0x5a34>
   12ee8:	mov	r3, #256	; 0x100
   12eec:	str	r4, [r6, #12]
   12ef0:	str	r3, [r6, #8]
   12ef4:	ldr	r4, [pc, #36]	; 12f20 <abort@plt+0x21c4>
   12ef8:	cmp	r7, r4
   12efc:	beq	12f0c <abort@plt+0x21b0>
   12f00:	mov	r0, r7
   12f04:	bl	16790 <abort@plt+0x5a34>
   12f08:	str	r4, [r6]
   12f0c:	mov	r3, #1
   12f10:	str	r3, [r6, #4]
   12f14:	pop	{r4, r5, r6, r7, r8, pc}
   12f18:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   12f1c:	andeq	r8, r2, r0, ror r1
   12f20:	andeq	r8, r2, r0, ror #1
   12f24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12f28:	sub	sp, sp, #44	; 0x2c
   12f2c:	mov	r5, r0
   12f30:	mov	sl, r1
   12f34:	bl	10cb4 <__errno_location@plt>
   12f38:	ldr	r4, [pc, #400]	; 130d0 <abort@plt+0x2374>
   12f3c:	cmn	r5, #-2147483647	; 0x80000001
   12f40:	ldr	r6, [r4]
   12f44:	mov	r8, r0
   12f48:	movne	r0, #0
   12f4c:	moveq	r0, #1
   12f50:	ldr	r3, [r8]
   12f54:	orrs	r0, r0, r5, lsr #31
   12f58:	str	r3, [sp, #24]
   12f5c:	bne	130cc <abort@plt+0x2370>
   12f60:	ldr	r2, [r4, #4]
   12f64:	cmp	r5, r2
   12f68:	blt	12fc8 <abort@plt+0x226c>
   12f6c:	add	r7, r4, #8
   12f70:	cmp	r6, r7
   12f74:	str	r2, [sp, #36]	; 0x24
   12f78:	beq	1309c <abort@plt+0x2340>
   12f7c:	mov	r3, #8
   12f80:	sub	r2, r5, r2
   12f84:	mov	r0, r6
   12f88:	str	r3, [sp]
   12f8c:	add	r2, r2, #1
   12f90:	mvn	r3, #-2147483648	; 0x80000000
   12f94:	add	r1, sp, #36	; 0x24
   12f98:	bl	16100 <abort@plt+0x53a4>
   12f9c:	mov	r6, r0
   12fa0:	str	r0, [r4]
   12fa4:	ldr	r0, [r4, #4]
   12fa8:	ldr	r2, [sp, #36]	; 0x24
   12fac:	mov	r1, #0
   12fb0:	sub	r2, r2, r0
   12fb4:	add	r0, r6, r0, lsl #3
   12fb8:	lsl	r2, r2, #3
   12fbc:	bl	10ccc <memset@plt>
   12fc0:	ldr	r3, [sp, #36]	; 0x24
   12fc4:	str	r3, [r4, #4]
   12fc8:	ldr	r4, [pc, #260]	; 130d4 <abort@plt+0x2378>
   12fcc:	add	fp, r6, r5, lsl #3
   12fd0:	ldr	r9, [r6, r5, lsl #3]
   12fd4:	ldr	r0, [r4, #4]
   12fd8:	ldr	r3, [r4]
   12fdc:	ldr	r7, [fp, #4]
   12fe0:	ldr	r1, [r4, #44]	; 0x2c
   12fe4:	ldr	r2, [r4, #40]	; 0x28
   12fe8:	orr	r0, r0, #1
   12fec:	str	r3, [sp]
   12ff0:	add	r3, r4, #8
   12ff4:	str	r0, [sp, #28]
   12ff8:	str	r0, [sp, #4]
   12ffc:	str	r1, [sp, #16]
   13000:	str	r2, [sp, #12]
   13004:	str	r3, [sp, #8]
   13008:	mov	r0, r7
   1300c:	mov	r1, r9
   13010:	mvn	r3, #0
   13014:	mov	r2, sl
   13018:	bl	11608 <abort@plt+0x8ac>
   1301c:	cmp	r9, r0
   13020:	bhi	13088 <abort@plt+0x232c>
   13024:	add	r3, r4, #48	; 0x30
   13028:	add	r9, r0, #1
   1302c:	cmp	r7, r3
   13030:	str	r9, [r6, r5, lsl #3]
   13034:	beq	13040 <abort@plt+0x22e4>
   13038:	mov	r0, r7
   1303c:	bl	16790 <abort@plt+0x5a34>
   13040:	mov	r0, r9
   13044:	bl	15ee4 <abort@plt+0x5188>
   13048:	ldr	ip, [r4, #44]	; 0x2c
   1304c:	ldr	r3, [r4]
   13050:	ldr	lr, [r4, #40]	; 0x28
   13054:	ldr	r4, [pc, #124]	; 130d8 <abort@plt+0x237c>
   13058:	mov	r2, sl
   1305c:	mov	r1, r9
   13060:	str	r0, [fp, #4]
   13064:	str	r4, [sp, #8]
   13068:	ldr	r4, [sp, #28]
   1306c:	str	r3, [sp]
   13070:	str	r4, [sp, #4]
   13074:	str	ip, [sp, #16]
   13078:	str	lr, [sp, #12]
   1307c:	mvn	r3, #0
   13080:	mov	r7, r0
   13084:	bl	11608 <abort@plt+0x8ac>
   13088:	ldr	r3, [sp, #24]
   1308c:	mov	r0, r7
   13090:	str	r3, [r8]
   13094:	add	sp, sp, #44	; 0x2c
   13098:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1309c:	mov	r3, #8
   130a0:	sub	r2, r5, r2
   130a4:	str	r3, [sp]
   130a8:	add	r1, sp, #36	; 0x24
   130ac:	add	r2, r2, #1
   130b0:	mvn	r3, #-2147483648	; 0x80000000
   130b4:	bl	16100 <abort@plt+0x53a4>
   130b8:	mov	r6, r0
   130bc:	ldm	r7, {r0, r1}
   130c0:	str	r6, [r4]
   130c4:	stm	r6, {r0, r1}
   130c8:	b	12fa4 <abort@plt+0x2248>
   130cc:	bl	10d5c <abort@plt>
   130d0:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   130d4:	andeq	r8, r2, r0, asr #2
   130d8:	andeq	r8, r2, r8, asr #2
   130dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   130e0:	sub	sp, sp, #52	; 0x34
   130e4:	mov	r5, r0
   130e8:	mov	sl, r1
   130ec:	mov	fp, r2
   130f0:	bl	10cb4 <__errno_location@plt>
   130f4:	ldr	r4, [pc, #408]	; 13294 <abort@plt+0x2538>
   130f8:	cmn	r5, #-2147483647	; 0x80000001
   130fc:	ldr	r6, [r4]
   13100:	mov	r8, r0
   13104:	movne	r0, #0
   13108:	moveq	r0, #1
   1310c:	ldr	r3, [r8]
   13110:	orrs	r0, r0, r5, lsr #31
   13114:	str	r3, [sp, #28]
   13118:	bne	13290 <abort@plt+0x2534>
   1311c:	ldr	r2, [r4, #4]
   13120:	cmp	r5, r2
   13124:	blt	13184 <abort@plt+0x2428>
   13128:	add	r7, r4, #8
   1312c:	cmp	r6, r7
   13130:	str	r2, [sp, #44]	; 0x2c
   13134:	beq	13260 <abort@plt+0x2504>
   13138:	mov	r3, #8
   1313c:	sub	r2, r5, r2
   13140:	mov	r0, r6
   13144:	str	r3, [sp]
   13148:	add	r2, r2, #1
   1314c:	mvn	r3, #-2147483648	; 0x80000000
   13150:	add	r1, sp, #44	; 0x2c
   13154:	bl	16100 <abort@plt+0x53a4>
   13158:	mov	r6, r0
   1315c:	str	r0, [r4]
   13160:	ldr	r0, [r4, #4]
   13164:	ldr	r2, [sp, #44]	; 0x2c
   13168:	mov	r1, #0
   1316c:	sub	r2, r2, r0
   13170:	add	r0, r6, r0, lsl #3
   13174:	lsl	r2, r2, #3
   13178:	bl	10ccc <memset@plt>
   1317c:	ldr	r3, [sp, #44]	; 0x2c
   13180:	str	r3, [r4, #4]
   13184:	ldr	r4, [pc, #268]	; 13298 <abort@plt+0x253c>
   13188:	add	r3, r6, r5, lsl #3
   1318c:	str	r3, [sp, #32]
   13190:	ldr	r7, [r3, #4]
   13194:	ldr	r0, [r4, #4]
   13198:	ldr	r3, [r4]
   1319c:	ldr	r9, [r6, r5, lsl #3]
   131a0:	ldr	r1, [r4, #44]	; 0x2c
   131a4:	ldr	r2, [r4, #40]	; 0x28
   131a8:	orr	r0, r0, #1
   131ac:	str	r3, [sp]
   131b0:	add	r3, r4, #8
   131b4:	str	r0, [sp, #36]	; 0x24
   131b8:	str	r0, [sp, #4]
   131bc:	str	r1, [sp, #16]
   131c0:	str	r2, [sp, #12]
   131c4:	str	r3, [sp, #8]
   131c8:	mov	r0, r7
   131cc:	mov	r1, r9
   131d0:	mov	r3, fp
   131d4:	mov	r2, sl
   131d8:	bl	11608 <abort@plt+0x8ac>
   131dc:	cmp	r9, r0
   131e0:	bhi	1324c <abort@plt+0x24f0>
   131e4:	add	r3, r4, #48	; 0x30
   131e8:	add	r9, r0, #1
   131ec:	cmp	r7, r3
   131f0:	str	r9, [r6, r5, lsl #3]
   131f4:	beq	13200 <abort@plt+0x24a4>
   131f8:	mov	r0, r7
   131fc:	bl	16790 <abort@plt+0x5a34>
   13200:	mov	r0, r9
   13204:	bl	15ee4 <abort@plt+0x5188>
   13208:	ldr	ip, [sp, #32]
   1320c:	ldr	lr, [r4, #44]	; 0x2c
   13210:	ldr	r5, [r4, #40]	; 0x28
   13214:	mov	r3, fp
   13218:	mov	r2, sl
   1321c:	mov	r1, r9
   13220:	str	r0, [ip, #4]
   13224:	ldr	ip, [r4]
   13228:	ldr	r4, [pc, #108]	; 1329c <abort@plt+0x2540>
   1322c:	str	lr, [sp, #16]
   13230:	str	r4, [sp, #8]
   13234:	ldr	r4, [sp, #36]	; 0x24
   13238:	str	r5, [sp, #12]
   1323c:	str	r4, [sp, #4]
   13240:	str	ip, [sp]
   13244:	mov	r7, r0
   13248:	bl	11608 <abort@plt+0x8ac>
   1324c:	ldr	r3, [sp, #28]
   13250:	mov	r0, r7
   13254:	str	r3, [r8]
   13258:	add	sp, sp, #52	; 0x34
   1325c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13260:	mov	r3, #8
   13264:	sub	r2, r5, r2
   13268:	str	r3, [sp]
   1326c:	add	r1, sp, #44	; 0x2c
   13270:	add	r2, r2, #1
   13274:	mvn	r3, #-2147483648	; 0x80000000
   13278:	bl	16100 <abort@plt+0x53a4>
   1327c:	mov	r6, r0
   13280:	ldm	r7, {r0, r1}
   13284:	str	r6, [r4]
   13288:	stm	r6, {r0, r1}
   1328c:	b	13160 <abort@plt+0x2404>
   13290:	bl	10d5c <abort@plt>
   13294:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   13298:	andeq	r8, r2, r0, asr #2
   1329c:	andeq	r8, r2, r8, asr #2
   132a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   132a4:	sub	sp, sp, #44	; 0x2c
   132a8:	mov	sl, r0
   132ac:	bl	10cb4 <__errno_location@plt>
   132b0:	ldr	r4, [pc, #352]	; 13418 <abort@plt+0x26bc>
   132b4:	ldr	r2, [r4, #4]
   132b8:	ldr	r5, [r4]
   132bc:	cmp	r2, #0
   132c0:	ldr	r3, [r0]
   132c4:	mov	r8, r0
   132c8:	str	r3, [sp, #28]
   132cc:	bgt	13328 <abort@plt+0x25cc>
   132d0:	add	r6, r4, #8
   132d4:	cmp	r5, r6
   132d8:	str	r2, [sp, #36]	; 0x24
   132dc:	beq	133e8 <abort@plt+0x268c>
   132e0:	mov	r3, #8
   132e4:	mov	r0, r5
   132e8:	str	r3, [sp]
   132ec:	rsb	r2, r2, #1
   132f0:	mvn	r3, #-2147483648	; 0x80000000
   132f4:	add	r1, sp, #36	; 0x24
   132f8:	bl	16100 <abort@plt+0x53a4>
   132fc:	mov	r5, r0
   13300:	str	r0, [r4]
   13304:	ldr	r0, [r4, #4]
   13308:	ldr	r2, [sp, #36]	; 0x24
   1330c:	mov	r1, #0
   13310:	sub	r2, r2, r0
   13314:	add	r0, r5, r0, lsl #3
   13318:	lsl	r2, r2, #3
   1331c:	bl	10ccc <memset@plt>
   13320:	ldr	r3, [sp, #36]	; 0x24
   13324:	str	r3, [r4, #4]
   13328:	ldr	r4, [pc, #236]	; 1341c <abort@plt+0x26c0>
   1332c:	ldr	r9, [r5]
   13330:	ldr	r6, [r5, #4]
   13334:	ldr	r7, [r4, #4]
   13338:	ldr	r1, [r4, #44]	; 0x2c
   1333c:	ldr	r2, [r4, #40]	; 0x28
   13340:	ldr	r3, [r4]
   13344:	orr	r7, r7, #1
   13348:	add	fp, r4, #8
   1334c:	str	r1, [sp, #16]
   13350:	str	r2, [sp, #12]
   13354:	str	r3, [sp]
   13358:	str	r7, [sp, #4]
   1335c:	str	fp, [sp, #8]
   13360:	mov	r1, r9
   13364:	mov	r0, r6
   13368:	mvn	r3, #0
   1336c:	mov	r2, sl
   13370:	bl	11608 <abort@plt+0x8ac>
   13374:	cmp	r9, r0
   13378:	bhi	133d4 <abort@plt+0x2678>
   1337c:	add	r3, r4, #48	; 0x30
   13380:	add	r9, r0, #1
   13384:	cmp	r6, r3
   13388:	str	r9, [r5]
   1338c:	beq	13398 <abort@plt+0x263c>
   13390:	mov	r0, r6
   13394:	bl	16790 <abort@plt+0x5a34>
   13398:	mov	r0, r9
   1339c:	bl	15ee4 <abort@plt+0x5188>
   133a0:	ldr	ip, [r4, #44]	; 0x2c
   133a4:	ldr	r3, [r4]
   133a8:	ldr	lr, [r4, #40]	; 0x28
   133ac:	mov	r2, sl
   133b0:	mov	r1, r9
   133b4:	str	r0, [r5, #4]
   133b8:	str	r3, [sp]
   133bc:	stmib	sp, {r7, fp}
   133c0:	str	ip, [sp, #16]
   133c4:	str	lr, [sp, #12]
   133c8:	mvn	r3, #0
   133cc:	mov	r6, r0
   133d0:	bl	11608 <abort@plt+0x8ac>
   133d4:	ldr	r3, [sp, #28]
   133d8:	mov	r0, r6
   133dc:	str	r3, [r8]
   133e0:	add	sp, sp, #44	; 0x2c
   133e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   133e8:	mov	r3, #8
   133ec:	str	r3, [sp]
   133f0:	add	r1, sp, #36	; 0x24
   133f4:	rsb	r2, r2, #1
   133f8:	mvn	r3, #-2147483648	; 0x80000000
   133fc:	mov	r0, #0
   13400:	bl	16100 <abort@plt+0x53a4>
   13404:	mov	r5, r0
   13408:	ldm	r6, {r0, r1}
   1340c:	str	r5, [r4]
   13410:	stm	r5, {r0, r1}
   13414:	b	13304 <abort@plt+0x25a8>
   13418:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   1341c:	andeq	r8, r2, r0, asr #2
   13420:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13424:	sub	sp, sp, #44	; 0x2c
   13428:	mov	r9, r0
   1342c:	mov	sl, r1
   13430:	bl	10cb4 <__errno_location@plt>
   13434:	ldr	r4, [pc, #364]	; 135a8 <abort@plt+0x284c>
   13438:	ldr	r2, [r4, #4]
   1343c:	ldr	r5, [r4]
   13440:	cmp	r2, #0
   13444:	ldr	r3, [r0]
   13448:	mov	r7, r0
   1344c:	str	r3, [sp, #24]
   13450:	bgt	134ac <abort@plt+0x2750>
   13454:	add	r6, r4, #8
   13458:	cmp	r5, r6
   1345c:	str	r2, [sp, #36]	; 0x24
   13460:	beq	13578 <abort@plt+0x281c>
   13464:	mov	r3, #8
   13468:	mov	r0, r5
   1346c:	str	r3, [sp]
   13470:	rsb	r2, r2, #1
   13474:	mvn	r3, #-2147483648	; 0x80000000
   13478:	add	r1, sp, #36	; 0x24
   1347c:	bl	16100 <abort@plt+0x53a4>
   13480:	mov	r5, r0
   13484:	str	r0, [r4]
   13488:	ldr	r0, [r4, #4]
   1348c:	ldr	r2, [sp, #36]	; 0x24
   13490:	mov	r1, #0
   13494:	sub	r2, r2, r0
   13498:	add	r0, r5, r0, lsl #3
   1349c:	lsl	r2, r2, #3
   134a0:	bl	10ccc <memset@plt>
   134a4:	ldr	r3, [sp, #36]	; 0x24
   134a8:	str	r3, [r4, #4]
   134ac:	ldr	r4, [pc, #248]	; 135ac <abort@plt+0x2850>
   134b0:	ldr	r8, [r5]
   134b4:	ldr	r6, [r5, #4]
   134b8:	ldr	r0, [r4, #4]
   134bc:	ldr	r1, [r4, #44]	; 0x2c
   134c0:	ldr	r2, [r4, #40]	; 0x28
   134c4:	ldr	r3, [r4]
   134c8:	orr	r0, r0, #1
   134cc:	add	fp, r4, #8
   134d0:	str	r0, [sp, #28]
   134d4:	str	r0, [sp, #4]
   134d8:	str	r1, [sp, #16]
   134dc:	str	r2, [sp, #12]
   134e0:	str	r3, [sp]
   134e4:	str	fp, [sp, #8]
   134e8:	mov	r1, r8
   134ec:	mov	r0, r6
   134f0:	mov	r3, sl
   134f4:	mov	r2, r9
   134f8:	bl	11608 <abort@plt+0x8ac>
   134fc:	cmp	r8, r0
   13500:	bhi	13564 <abort@plt+0x2808>
   13504:	add	r3, r4, #48	; 0x30
   13508:	add	r8, r0, #1
   1350c:	cmp	r6, r3
   13510:	str	r8, [r5]
   13514:	beq	13520 <abort@plt+0x27c4>
   13518:	mov	r0, r6
   1351c:	bl	16790 <abort@plt+0x5a34>
   13520:	mov	r0, r8
   13524:	bl	15ee4 <abort@plt+0x5188>
   13528:	ldr	lr, [r4, #44]	; 0x2c
   1352c:	ldr	ip, [r4]
   13530:	mov	r3, sl
   13534:	mov	r2, r9
   13538:	mov	r1, r8
   1353c:	str	r0, [r5, #4]
   13540:	ldr	r5, [r4, #40]	; 0x28
   13544:	ldr	r4, [sp, #28]
   13548:	str	fp, [sp, #8]
   1354c:	str	r4, [sp, #4]
   13550:	str	lr, [sp, #16]
   13554:	str	r5, [sp, #12]
   13558:	str	ip, [sp]
   1355c:	mov	r6, r0
   13560:	bl	11608 <abort@plt+0x8ac>
   13564:	ldr	r3, [sp, #24]
   13568:	mov	r0, r6
   1356c:	str	r3, [r7]
   13570:	add	sp, sp, #44	; 0x2c
   13574:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13578:	mov	r3, #8
   1357c:	str	r3, [sp]
   13580:	add	r1, sp, #36	; 0x24
   13584:	rsb	r2, r2, #1
   13588:	mvn	r3, #-2147483648	; 0x80000000
   1358c:	mov	r0, #0
   13590:	bl	16100 <abort@plt+0x53a4>
   13594:	mov	r5, r0
   13598:	ldm	r6, {r0, r1}
   1359c:	str	r5, [r4]
   135a0:	stm	r5, {r0, r1}
   135a4:	b	13488 <abort@plt+0x272c>
   135a8:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   135ac:	andeq	r8, r2, r0, asr #2
   135b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   135b4:	sub	sp, sp, #132	; 0x84
   135b8:	mov	r5, r1
   135bc:	mov	r4, r0
   135c0:	mov	r9, r2
   135c4:	add	r0, sp, #80	; 0x50
   135c8:	mov	r2, #48	; 0x30
   135cc:	mov	r1, #0
   135d0:	bl	10ccc <memset@plt>
   135d4:	cmp	r5, #10
   135d8:	beq	13790 <abort@plt+0x2a34>
   135dc:	add	lr, sp, #80	; 0x50
   135e0:	str	r5, [sp, #80]	; 0x50
   135e4:	ldm	lr!, {r0, r1, r2, r3}
   135e8:	add	ip, sp, #32
   135ec:	ldr	r6, [pc, #416]	; 13794 <abort@plt+0x2a38>
   135f0:	stmia	ip!, {r0, r1, r2, r3}
   135f4:	ldm	lr!, {r0, r1, r2, r3}
   135f8:	stmia	ip!, {r0, r1, r2, r3}
   135fc:	ldm	lr, {r0, r1, r2, r3}
   13600:	stm	ip, {r0, r1, r2, r3}
   13604:	bl	10cb4 <__errno_location@plt>
   13608:	cmn	r4, #-2147483647	; 0x80000001
   1360c:	ldr	r5, [r6]
   13610:	mov	r7, r0
   13614:	movne	r0, #0
   13618:	moveq	r0, #1
   1361c:	ldr	r3, [r7]
   13620:	orrs	r0, r0, r4, lsr #31
   13624:	str	r3, [sp, #24]
   13628:	bne	13790 <abort@plt+0x2a34>
   1362c:	ldr	r2, [r6, #4]
   13630:	cmp	r4, r2
   13634:	blt	13694 <abort@plt+0x2938>
   13638:	add	r8, r6, #8
   1363c:	cmp	r5, r8
   13640:	str	r2, [sp, #80]	; 0x50
   13644:	beq	13760 <abort@plt+0x2a04>
   13648:	mov	r3, #8
   1364c:	sub	r2, r4, r2
   13650:	mov	r0, r5
   13654:	str	r3, [sp]
   13658:	add	r2, r2, #1
   1365c:	add	r1, sp, #80	; 0x50
   13660:	mvn	r3, #-2147483648	; 0x80000000
   13664:	bl	16100 <abort@plt+0x53a4>
   13668:	mov	r5, r0
   1366c:	str	r0, [r6]
   13670:	ldr	r0, [r6, #4]
   13674:	ldr	r2, [sp, #80]	; 0x50
   13678:	mov	r1, #0
   1367c:	sub	r2, r2, r0
   13680:	add	r0, r5, r0, lsl #3
   13684:	lsl	r2, r2, #3
   13688:	bl	10ccc <memset@plt>
   1368c:	ldr	r3, [sp, #80]	; 0x50
   13690:	str	r3, [r6, #4]
   13694:	add	fp, r5, r4, lsl #3
   13698:	ldr	r1, [sp, #36]	; 0x24
   1369c:	ldr	r8, [r5, r4, lsl #3]
   136a0:	ldr	r6, [fp, #4]
   136a4:	ldr	r2, [sp, #72]	; 0x48
   136a8:	ldr	r3, [sp, #32]
   136ac:	ldr	ip, [sp, #76]	; 0x4c
   136b0:	orr	r1, r1, #1
   136b4:	add	sl, sp, #40	; 0x28
   136b8:	str	r1, [sp, #28]
   136bc:	str	r1, [sp, #4]
   136c0:	str	r2, [sp, #12]
   136c4:	str	r3, [sp]
   136c8:	mov	r0, r6
   136cc:	mov	r1, r8
   136d0:	str	ip, [sp, #16]
   136d4:	str	sl, [sp, #8]
   136d8:	mvn	r3, #0
   136dc:	mov	r2, r9
   136e0:	bl	11608 <abort@plt+0x8ac>
   136e4:	cmp	r8, r0
   136e8:	bhi	1374c <abort@plt+0x29f0>
   136ec:	ldr	r3, [pc, #164]	; 13798 <abort@plt+0x2a3c>
   136f0:	add	r8, r0, #1
   136f4:	cmp	r6, r3
   136f8:	str	r8, [r5, r4, lsl #3]
   136fc:	beq	13708 <abort@plt+0x29ac>
   13700:	mov	r0, r6
   13704:	bl	16790 <abort@plt+0x5a34>
   13708:	mov	r0, r8
   1370c:	bl	15ee4 <abort@plt+0x5188>
   13710:	ldr	lr, [sp, #76]	; 0x4c
   13714:	ldr	r3, [sp, #32]
   13718:	ldr	ip, [sp, #72]	; 0x48
   1371c:	ldr	r4, [sp, #28]
   13720:	mov	r2, r9
   13724:	mov	r1, r8
   13728:	str	r0, [fp, #4]
   1372c:	str	r3, [sp]
   13730:	str	sl, [sp, #8]
   13734:	str	r4, [sp, #4]
   13738:	str	lr, [sp, #16]
   1373c:	str	ip, [sp, #12]
   13740:	mvn	r3, #0
   13744:	mov	r6, r0
   13748:	bl	11608 <abort@plt+0x8ac>
   1374c:	ldr	r3, [sp, #24]
   13750:	mov	r0, r6
   13754:	str	r3, [r7]
   13758:	add	sp, sp, #132	; 0x84
   1375c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13760:	mov	r3, #8
   13764:	sub	r2, r4, r2
   13768:	add	r1, sp, #80	; 0x50
   1376c:	str	r3, [sp]
   13770:	add	r2, r2, #1
   13774:	mvn	r3, #-2147483648	; 0x80000000
   13778:	bl	16100 <abort@plt+0x53a4>
   1377c:	mov	r5, r0
   13780:	ldm	r8, {r0, r1}
   13784:	str	r5, [r6]
   13788:	stm	r5, {r0, r1}
   1378c:	b	13670 <abort@plt+0x2914>
   13790:	bl	10d5c <abort@plt>
   13794:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   13798:	andeq	r8, r2, r0, ror r1
   1379c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   137a0:	sub	sp, sp, #132	; 0x84
   137a4:	mov	r5, r1
   137a8:	mov	r4, r0
   137ac:	mov	r9, r2
   137b0:	add	r0, sp, #80	; 0x50
   137b4:	mov	r2, #48	; 0x30
   137b8:	mov	r1, #0
   137bc:	mov	sl, r3
   137c0:	bl	10ccc <memset@plt>
   137c4:	cmp	r5, #10
   137c8:	beq	13984 <abort@plt+0x2c28>
   137cc:	add	lr, sp, #80	; 0x50
   137d0:	str	r5, [sp, #80]	; 0x50
   137d4:	ldm	lr!, {r0, r1, r2, r3}
   137d8:	add	ip, sp, #32
   137dc:	ldr	r6, [pc, #420]	; 13988 <abort@plt+0x2c2c>
   137e0:	stmia	ip!, {r0, r1, r2, r3}
   137e4:	ldm	lr!, {r0, r1, r2, r3}
   137e8:	stmia	ip!, {r0, r1, r2, r3}
   137ec:	ldm	lr, {r0, r1, r2, r3}
   137f0:	stm	ip, {r0, r1, r2, r3}
   137f4:	bl	10cb4 <__errno_location@plt>
   137f8:	cmn	r4, #-2147483647	; 0x80000001
   137fc:	ldr	r5, [r6]
   13800:	mov	r7, r0
   13804:	movne	r0, #0
   13808:	moveq	r0, #1
   1380c:	ldr	r3, [r7]
   13810:	orrs	r0, r0, r4, lsr #31
   13814:	str	r3, [sp, #24]
   13818:	bne	13984 <abort@plt+0x2c28>
   1381c:	ldr	r2, [r6, #4]
   13820:	cmp	r4, r2
   13824:	blt	13884 <abort@plt+0x2b28>
   13828:	add	r8, r6, #8
   1382c:	cmp	r5, r8
   13830:	str	r2, [sp, #80]	; 0x50
   13834:	beq	13954 <abort@plt+0x2bf8>
   13838:	mov	r3, #8
   1383c:	sub	r2, r4, r2
   13840:	mov	r0, r5
   13844:	str	r3, [sp]
   13848:	add	r2, r2, #1
   1384c:	add	r1, sp, #80	; 0x50
   13850:	mvn	r3, #-2147483648	; 0x80000000
   13854:	bl	16100 <abort@plt+0x53a4>
   13858:	mov	r5, r0
   1385c:	str	r0, [r6]
   13860:	ldr	r0, [r6, #4]
   13864:	ldr	r2, [sp, #80]	; 0x50
   13868:	mov	r1, #0
   1386c:	sub	r2, r2, r0
   13870:	add	r0, r5, r0, lsl #3
   13874:	lsl	r2, r2, #3
   13878:	bl	10ccc <memset@plt>
   1387c:	ldr	r3, [sp, #80]	; 0x50
   13880:	str	r3, [r6, #4]
   13884:	add	fp, r5, r4, lsl #3
   13888:	ldr	r3, [sp, #32]
   1388c:	ldr	r1, [sp, #36]	; 0x24
   13890:	ldr	r8, [r5, r4, lsl #3]
   13894:	ldr	r6, [fp, #4]
   13898:	ldr	r2, [sp, #72]	; 0x48
   1389c:	ldr	ip, [sp, #76]	; 0x4c
   138a0:	orr	r1, r1, #1
   138a4:	str	r3, [sp]
   138a8:	add	r3, sp, #40	; 0x28
   138ac:	str	r1, [sp, #28]
   138b0:	str	r1, [sp, #4]
   138b4:	str	r2, [sp, #12]
   138b8:	str	r3, [sp, #8]
   138bc:	mov	r0, r6
   138c0:	mov	r1, r8
   138c4:	str	ip, [sp, #16]
   138c8:	mov	r3, sl
   138cc:	mov	r2, r9
   138d0:	bl	11608 <abort@plt+0x8ac>
   138d4:	cmp	r8, r0
   138d8:	bhi	13940 <abort@plt+0x2be4>
   138dc:	ldr	r3, [pc, #168]	; 1398c <abort@plt+0x2c30>
   138e0:	add	r8, r0, #1
   138e4:	cmp	r6, r3
   138e8:	str	r8, [r5, r4, lsl #3]
   138ec:	beq	138f8 <abort@plt+0x2b9c>
   138f0:	mov	r0, r6
   138f4:	bl	16790 <abort@plt+0x5a34>
   138f8:	mov	r0, r8
   138fc:	bl	15ee4 <abort@plt+0x5188>
   13900:	add	lr, sp, #40	; 0x28
   13904:	ldr	ip, [sp, #76]	; 0x4c
   13908:	ldr	r4, [sp, #72]	; 0x48
   1390c:	ldr	r5, [sp, #28]
   13910:	mov	r3, sl
   13914:	mov	r2, r9
   13918:	mov	r1, r8
   1391c:	str	r0, [fp, #4]
   13920:	str	lr, [sp, #8]
   13924:	ldr	lr, [sp, #32]
   13928:	str	r5, [sp, #4]
   1392c:	str	ip, [sp, #16]
   13930:	str	r4, [sp, #12]
   13934:	str	lr, [sp]
   13938:	mov	r6, r0
   1393c:	bl	11608 <abort@plt+0x8ac>
   13940:	ldr	r3, [sp, #24]
   13944:	mov	r0, r6
   13948:	str	r3, [r7]
   1394c:	add	sp, sp, #132	; 0x84
   13950:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13954:	mov	r3, #8
   13958:	sub	r2, r4, r2
   1395c:	add	r1, sp, #80	; 0x50
   13960:	str	r3, [sp]
   13964:	add	r2, r2, #1
   13968:	mvn	r3, #-2147483648	; 0x80000000
   1396c:	bl	16100 <abort@plt+0x53a4>
   13970:	mov	r5, r0
   13974:	ldm	r8, {r0, r1}
   13978:	str	r5, [r6]
   1397c:	stm	r5, {r0, r1}
   13980:	b	13860 <abort@plt+0x2b04>
   13984:	bl	10d5c <abort@plt>
   13988:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   1398c:	andeq	r8, r2, r0, ror r1
   13990:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13994:	sub	sp, sp, #124	; 0x7c
   13998:	mov	r4, r0
   1399c:	mov	r9, r1
   139a0:	add	r0, sp, #72	; 0x48
   139a4:	mov	r2, #48	; 0x30
   139a8:	mov	r1, #0
   139ac:	bl	10ccc <memset@plt>
   139b0:	cmp	r4, #10
   139b4:	beq	13b40 <abort@plt+0x2de4>
   139b8:	add	lr, sp, #72	; 0x48
   139bc:	str	r4, [sp, #72]	; 0x48
   139c0:	ldm	lr!, {r0, r1, r2, r3}
   139c4:	add	ip, sp, #24
   139c8:	ldr	r5, [pc, #372]	; 13b44 <abort@plt+0x2de8>
   139cc:	stmia	ip!, {r0, r1, r2, r3}
   139d0:	ldm	lr!, {r0, r1, r2, r3}
   139d4:	stmia	ip!, {r0, r1, r2, r3}
   139d8:	ldm	lr, {r0, r1, r2, r3}
   139dc:	stm	ip, {r0, r1, r2, r3}
   139e0:	bl	10cb4 <__errno_location@plt>
   139e4:	ldr	r2, [r5, #4]
   139e8:	ldr	r4, [r5]
   139ec:	cmp	r2, #0
   139f0:	mov	r7, r0
   139f4:	ldr	fp, [r0]
   139f8:	bgt	13a54 <abort@plt+0x2cf8>
   139fc:	add	r6, r5, #8
   13a00:	cmp	r4, r6
   13a04:	str	r2, [sp, #72]	; 0x48
   13a08:	beq	13b10 <abort@plt+0x2db4>
   13a0c:	mov	r3, #8
   13a10:	mov	r0, r4
   13a14:	str	r3, [sp]
   13a18:	rsb	r2, r2, #1
   13a1c:	add	r1, sp, #72	; 0x48
   13a20:	mvn	r3, #-2147483648	; 0x80000000
   13a24:	bl	16100 <abort@plt+0x53a4>
   13a28:	mov	r4, r0
   13a2c:	str	r0, [r5]
   13a30:	ldr	r0, [r5, #4]
   13a34:	ldr	r2, [sp, #72]	; 0x48
   13a38:	mov	r1, #0
   13a3c:	sub	r2, r2, r0
   13a40:	add	r0, r4, r0, lsl #3
   13a44:	lsl	r2, r2, #3
   13a48:	bl	10ccc <memset@plt>
   13a4c:	ldr	r3, [sp, #72]	; 0x48
   13a50:	str	r3, [r5, #4]
   13a54:	ldr	r6, [sp, #28]
   13a58:	ldr	r8, [r4]
   13a5c:	ldr	r5, [r4, #4]
   13a60:	ldr	r2, [sp, #64]	; 0x40
   13a64:	ldr	r3, [sp, #24]
   13a68:	ldr	ip, [sp, #68]	; 0x44
   13a6c:	orr	r6, r6, #1
   13a70:	add	sl, sp, #32
   13a74:	str	r2, [sp, #12]
   13a78:	str	r3, [sp]
   13a7c:	str	r6, [sp, #4]
   13a80:	mov	r1, r8
   13a84:	mov	r0, r5
   13a88:	str	ip, [sp, #16]
   13a8c:	str	sl, [sp, #8]
   13a90:	mvn	r3, #0
   13a94:	mov	r2, r9
   13a98:	bl	11608 <abort@plt+0x8ac>
   13a9c:	cmp	r8, r0
   13aa0:	bhi	13b00 <abort@plt+0x2da4>
   13aa4:	ldr	r3, [pc, #156]	; 13b48 <abort@plt+0x2dec>
   13aa8:	add	r8, r0, #1
   13aac:	cmp	r5, r3
   13ab0:	str	r8, [r4]
   13ab4:	beq	13ac0 <abort@plt+0x2d64>
   13ab8:	mov	r0, r5
   13abc:	bl	16790 <abort@plt+0x5a34>
   13ac0:	mov	r0, r8
   13ac4:	bl	15ee4 <abort@plt+0x5188>
   13ac8:	ldr	lr, [sp, #68]	; 0x44
   13acc:	ldr	r3, [sp, #24]
   13ad0:	ldr	ip, [sp, #64]	; 0x40
   13ad4:	mov	r2, r9
   13ad8:	mov	r1, r8
   13adc:	str	r0, [r4, #4]
   13ae0:	str	r3, [sp]
   13ae4:	str	sl, [sp, #8]
   13ae8:	str	r6, [sp, #4]
   13aec:	str	lr, [sp, #16]
   13af0:	str	ip, [sp, #12]
   13af4:	mvn	r3, #0
   13af8:	mov	r5, r0
   13afc:	bl	11608 <abort@plt+0x8ac>
   13b00:	mov	r0, r5
   13b04:	str	fp, [r7]
   13b08:	add	sp, sp, #124	; 0x7c
   13b0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13b10:	mov	r3, #8
   13b14:	add	r1, sp, #72	; 0x48
   13b18:	str	r3, [sp]
   13b1c:	rsb	r2, r2, #1
   13b20:	mvn	r3, #-2147483648	; 0x80000000
   13b24:	mov	r0, #0
   13b28:	bl	16100 <abort@plt+0x53a4>
   13b2c:	mov	r4, r0
   13b30:	ldm	r6, {r0, r1}
   13b34:	str	r4, [r5]
   13b38:	stm	r4, {r0, r1}
   13b3c:	b	13a30 <abort@plt+0x2cd4>
   13b40:	bl	10d5c <abort@plt>
   13b44:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   13b48:	andeq	r8, r2, r0, ror r1
   13b4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13b50:	sub	sp, sp, #132	; 0x84
   13b54:	mov	r4, r0
   13b58:	mov	r9, r1
   13b5c:	mov	sl, r2
   13b60:	add	r0, sp, #80	; 0x50
   13b64:	mov	r2, #48	; 0x30
   13b68:	mov	r1, #0
   13b6c:	bl	10ccc <memset@plt>
   13b70:	cmp	r4, #10
   13b74:	beq	13d08 <abort@plt+0x2fac>
   13b78:	add	lr, sp, #80	; 0x50
   13b7c:	str	r4, [sp, #80]	; 0x50
   13b80:	ldm	lr!, {r0, r1, r2, r3}
   13b84:	add	ip, sp, #32
   13b88:	ldr	r5, [pc, #380]	; 13d0c <abort@plt+0x2fb0>
   13b8c:	stmia	ip!, {r0, r1, r2, r3}
   13b90:	ldm	lr!, {r0, r1, r2, r3}
   13b94:	stmia	ip!, {r0, r1, r2, r3}
   13b98:	ldm	lr, {r0, r1, r2, r3}
   13b9c:	stm	ip, {r0, r1, r2, r3}
   13ba0:	bl	10cb4 <__errno_location@plt>
   13ba4:	ldr	r2, [r5, #4]
   13ba8:	ldr	r4, [r5]
   13bac:	cmp	r2, #0
   13bb0:	ldr	r3, [r0]
   13bb4:	mov	r7, r0
   13bb8:	str	r3, [sp, #28]
   13bbc:	bgt	13c18 <abort@plt+0x2ebc>
   13bc0:	add	r6, r5, #8
   13bc4:	cmp	r4, r6
   13bc8:	str	r2, [sp, #80]	; 0x50
   13bcc:	beq	13cd8 <abort@plt+0x2f7c>
   13bd0:	mov	r3, #8
   13bd4:	mov	r0, r4
   13bd8:	str	r3, [sp]
   13bdc:	rsb	r2, r2, #1
   13be0:	add	r1, sp, #80	; 0x50
   13be4:	mvn	r3, #-2147483648	; 0x80000000
   13be8:	bl	16100 <abort@plt+0x53a4>
   13bec:	mov	r4, r0
   13bf0:	str	r0, [r5]
   13bf4:	ldr	r0, [r5, #4]
   13bf8:	ldr	r2, [sp, #80]	; 0x50
   13bfc:	mov	r1, #0
   13c00:	sub	r2, r2, r0
   13c04:	add	r0, r4, r0, lsl #3
   13c08:	lsl	r2, r2, #3
   13c0c:	bl	10ccc <memset@plt>
   13c10:	ldr	r3, [sp, #80]	; 0x50
   13c14:	str	r3, [r5, #4]
   13c18:	ldr	r6, [sp, #36]	; 0x24
   13c1c:	ldr	r8, [r4]
   13c20:	ldr	r5, [r4, #4]
   13c24:	ldr	r2, [sp, #72]	; 0x48
   13c28:	ldr	r3, [sp, #32]
   13c2c:	ldr	ip, [sp, #76]	; 0x4c
   13c30:	orr	r6, r6, #1
   13c34:	add	fp, sp, #40	; 0x28
   13c38:	str	r2, [sp, #12]
   13c3c:	str	r3, [sp]
   13c40:	str	r6, [sp, #4]
   13c44:	mov	r1, r8
   13c48:	mov	r0, r5
   13c4c:	str	ip, [sp, #16]
   13c50:	str	fp, [sp, #8]
   13c54:	mov	r3, sl
   13c58:	mov	r2, r9
   13c5c:	bl	11608 <abort@plt+0x8ac>
   13c60:	cmp	r8, r0
   13c64:	bhi	13cc4 <abort@plt+0x2f68>
   13c68:	ldr	r3, [pc, #160]	; 13d10 <abort@plt+0x2fb4>
   13c6c:	add	r8, r0, #1
   13c70:	cmp	r5, r3
   13c74:	str	r8, [r4]
   13c78:	beq	13c84 <abort@plt+0x2f28>
   13c7c:	mov	r0, r5
   13c80:	bl	16790 <abort@plt+0x5a34>
   13c84:	mov	r0, r8
   13c88:	bl	15ee4 <abort@plt+0x5188>
   13c8c:	ldr	ip, [sp, #76]	; 0x4c
   13c90:	ldr	lr, [sp, #32]
   13c94:	mov	r3, sl
   13c98:	mov	r2, r9
   13c9c:	mov	r1, r8
   13ca0:	str	r0, [r4, #4]
   13ca4:	ldr	r4, [sp, #72]	; 0x48
   13ca8:	str	fp, [sp, #8]
   13cac:	str	r6, [sp, #4]
   13cb0:	str	ip, [sp, #16]
   13cb4:	str	r4, [sp, #12]
   13cb8:	str	lr, [sp]
   13cbc:	mov	r5, r0
   13cc0:	bl	11608 <abort@plt+0x8ac>
   13cc4:	ldr	r3, [sp, #28]
   13cc8:	mov	r0, r5
   13ccc:	str	r3, [r7]
   13cd0:	add	sp, sp, #132	; 0x84
   13cd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13cd8:	mov	r3, #8
   13cdc:	add	r1, sp, #80	; 0x50
   13ce0:	str	r3, [sp]
   13ce4:	rsb	r2, r2, #1
   13ce8:	mvn	r3, #-2147483648	; 0x80000000
   13cec:	mov	r0, #0
   13cf0:	bl	16100 <abort@plt+0x53a4>
   13cf4:	mov	r4, r0
   13cf8:	ldm	r6, {r0, r1}
   13cfc:	str	r4, [r5]
   13d00:	stm	r4, {r0, r1}
   13d04:	b	13bf4 <abort@plt+0x2e98>
   13d08:	bl	10d5c <abort@plt>
   13d0c:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   13d10:	andeq	r8, r2, r0, ror r1
   13d14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13d18:	mov	r4, r2
   13d1c:	ldr	lr, [pc, #432]	; 13ed4 <abort@plt+0x3178>
   13d20:	mov	sl, r0
   13d24:	mov	fp, r1
   13d28:	ldm	lr!, {r0, r1, r2, r3}
   13d2c:	sub	sp, sp, #92	; 0x5c
   13d30:	add	ip, sp, #40	; 0x28
   13d34:	lsr	r7, r4, #5
   13d38:	stmia	ip!, {r0, r1, r2, r3}
   13d3c:	add	r6, sp, #48	; 0x30
   13d40:	ldm	lr!, {r0, r1, r2, r3}
   13d44:	and	r4, r4, #31
   13d48:	ldr	r5, [pc, #392]	; 13ed8 <abort@plt+0x317c>
   13d4c:	stmia	ip!, {r0, r1, r2, r3}
   13d50:	ldm	lr, {r0, r1, r2, r3}
   13d54:	stm	ip, {r0, r1, r2, r3}
   13d58:	ldr	r2, [r6, r7, lsl #2]
   13d5c:	lsr	r3, r2, r4
   13d60:	eor	r3, r3, #1
   13d64:	and	r3, r3, #1
   13d68:	eor	r4, r2, r3, lsl r4
   13d6c:	str	r4, [r6, r7, lsl #2]
   13d70:	bl	10cb4 <__errno_location@plt>
   13d74:	ldr	r2, [r5, #4]
   13d78:	ldr	r4, [r5]
   13d7c:	cmp	r2, #0
   13d80:	ldr	r3, [r0]
   13d84:	mov	r8, r0
   13d88:	str	r3, [sp, #28]
   13d8c:	bgt	13de8 <abort@plt+0x308c>
   13d90:	add	r7, r5, #8
   13d94:	cmp	r4, r7
   13d98:	str	r2, [sp, #36]	; 0x24
   13d9c:	beq	13ea4 <abort@plt+0x3148>
   13da0:	mov	r3, #8
   13da4:	mov	r0, r4
   13da8:	str	r3, [sp]
   13dac:	rsb	r2, r2, #1
   13db0:	mvn	r3, #-2147483648	; 0x80000000
   13db4:	add	r1, sp, #36	; 0x24
   13db8:	bl	16100 <abort@plt+0x53a4>
   13dbc:	mov	r4, r0
   13dc0:	str	r0, [r5]
   13dc4:	ldr	r0, [r5, #4]
   13dc8:	ldr	r2, [sp, #36]	; 0x24
   13dcc:	mov	r1, #0
   13dd0:	sub	r2, r2, r0
   13dd4:	add	r0, r4, r0, lsl #3
   13dd8:	lsl	r2, r2, #3
   13ddc:	bl	10ccc <memset@plt>
   13de0:	ldr	r3, [sp, #36]	; 0x24
   13de4:	str	r3, [r5, #4]
   13de8:	ldr	r7, [sp, #44]	; 0x2c
   13dec:	ldr	r9, [r4]
   13df0:	ldr	r5, [r4, #4]
   13df4:	ldr	r2, [sp, #80]	; 0x50
   13df8:	ldr	r3, [sp, #40]	; 0x28
   13dfc:	ldr	ip, [sp, #84]	; 0x54
   13e00:	orr	r7, r7, #1
   13e04:	str	r2, [sp, #12]
   13e08:	str	r3, [sp]
   13e0c:	str	r7, [sp, #4]
   13e10:	str	r6, [sp, #8]
   13e14:	mov	r1, r9
   13e18:	mov	r0, r5
   13e1c:	str	ip, [sp, #16]
   13e20:	mov	r3, fp
   13e24:	mov	r2, sl
   13e28:	bl	11608 <abort@plt+0x8ac>
   13e2c:	cmp	r9, r0
   13e30:	bhi	13e90 <abort@plt+0x3134>
   13e34:	ldr	r3, [pc, #160]	; 13edc <abort@plt+0x3180>
   13e38:	add	r9, r0, #1
   13e3c:	cmp	r5, r3
   13e40:	str	r9, [r4]
   13e44:	beq	13e50 <abort@plt+0x30f4>
   13e48:	mov	r0, r5
   13e4c:	bl	16790 <abort@plt+0x5a34>
   13e50:	mov	r0, r9
   13e54:	bl	15ee4 <abort@plt+0x5188>
   13e58:	ldr	ip, [sp, #84]	; 0x54
   13e5c:	ldr	lr, [sp, #40]	; 0x28
   13e60:	mov	r3, fp
   13e64:	mov	r2, sl
   13e68:	mov	r1, r9
   13e6c:	str	r0, [r4, #4]
   13e70:	ldr	r4, [sp, #80]	; 0x50
   13e74:	str	r6, [sp, #8]
   13e78:	str	r7, [sp, #4]
   13e7c:	str	ip, [sp, #16]
   13e80:	str	r4, [sp, #12]
   13e84:	str	lr, [sp]
   13e88:	mov	r5, r0
   13e8c:	bl	11608 <abort@plt+0x8ac>
   13e90:	ldr	r3, [sp, #28]
   13e94:	mov	r0, r5
   13e98:	str	r3, [r8]
   13e9c:	add	sp, sp, #92	; 0x5c
   13ea0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13ea4:	mov	r3, #8
   13ea8:	str	r3, [sp]
   13eac:	add	r1, sp, #36	; 0x24
   13eb0:	rsb	r2, r2, #1
   13eb4:	mvn	r3, #-2147483648	; 0x80000000
   13eb8:	mov	r0, #0
   13ebc:	bl	16100 <abort@plt+0x53a4>
   13ec0:	mov	r4, r0
   13ec4:	ldm	r7, {r0, r1}
   13ec8:	str	r4, [r5]
   13ecc:	stm	r4, {r0, r1}
   13ed0:	b	13dc4 <abort@plt+0x3068>
   13ed4:	andeq	r8, r2, r0, asr #2
   13ed8:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   13edc:	andeq	r8, r2, r0, ror r1
   13ee0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ee4:	mov	r4, r1
   13ee8:	ldr	lr, [pc, #420]	; 14094 <abort@plt+0x3338>
   13eec:	mov	r6, r0
   13ef0:	sub	sp, sp, #84	; 0x54
   13ef4:	ldm	lr!, {r0, r1, r2, r3}
   13ef8:	add	ip, sp, #32
   13efc:	lsr	r8, r4, #5
   13f00:	add	r5, sp, #40	; 0x28
   13f04:	stmia	ip!, {r0, r1, r2, r3}
   13f08:	and	r4, r4, #31
   13f0c:	ldm	lr!, {r0, r1, r2, r3}
   13f10:	ldr	r7, [pc, #384]	; 14098 <abort@plt+0x333c>
   13f14:	stmia	ip!, {r0, r1, r2, r3}
   13f18:	ldm	lr, {r0, r1, r2, r3}
   13f1c:	stm	ip, {r0, r1, r2, r3}
   13f20:	ldr	r2, [r5, r8, lsl #2]
   13f24:	lsr	r3, r2, r4
   13f28:	eor	r3, r3, #1
   13f2c:	and	r3, r3, #1
   13f30:	eor	r4, r2, r3, lsl r4
   13f34:	str	r4, [r5, r8, lsl #2]
   13f38:	bl	10cb4 <__errno_location@plt>
   13f3c:	ldr	r2, [r7, #4]
   13f40:	ldr	r4, [r7]
   13f44:	cmp	r2, #0
   13f48:	mov	r9, r0
   13f4c:	ldr	sl, [r0]
   13f50:	bgt	13fac <abort@plt+0x3250>
   13f54:	add	r8, r7, #8
   13f58:	cmp	r4, r8
   13f5c:	str	r2, [sp, #28]
   13f60:	beq	14064 <abort@plt+0x3308>
   13f64:	mov	r3, #8
   13f68:	mov	r0, r4
   13f6c:	str	r3, [sp]
   13f70:	rsb	r2, r2, #1
   13f74:	mvn	r3, #-2147483648	; 0x80000000
   13f78:	add	r1, sp, #28
   13f7c:	bl	16100 <abort@plt+0x53a4>
   13f80:	mov	r4, r0
   13f84:	str	r0, [r7]
   13f88:	ldr	r0, [r7, #4]
   13f8c:	ldr	r2, [sp, #28]
   13f90:	mov	r1, #0
   13f94:	sub	r2, r2, r0
   13f98:	add	r0, r4, r0, lsl #3
   13f9c:	lsl	r2, r2, #3
   13fa0:	bl	10ccc <memset@plt>
   13fa4:	ldr	r3, [sp, #28]
   13fa8:	str	r3, [r7, #4]
   13fac:	ldr	r8, [sp, #36]	; 0x24
   13fb0:	ldr	fp, [r4]
   13fb4:	ldr	r7, [r4, #4]
   13fb8:	ldr	r2, [sp, #72]	; 0x48
   13fbc:	ldr	r3, [sp, #32]
   13fc0:	ldr	ip, [sp, #76]	; 0x4c
   13fc4:	orr	r8, r8, #1
   13fc8:	str	r2, [sp, #12]
   13fcc:	str	r3, [sp]
   13fd0:	str	r8, [sp, #4]
   13fd4:	str	r5, [sp, #8]
   13fd8:	mov	r1, fp
   13fdc:	mov	r0, r7
   13fe0:	str	ip, [sp, #16]
   13fe4:	mvn	r3, #0
   13fe8:	mov	r2, r6
   13fec:	bl	11608 <abort@plt+0x8ac>
   13ff0:	cmp	fp, r0
   13ff4:	bhi	14054 <abort@plt+0x32f8>
   13ff8:	ldr	r3, [pc, #156]	; 1409c <abort@plt+0x3340>
   13ffc:	add	fp, r0, #1
   14000:	cmp	r7, r3
   14004:	str	fp, [r4]
   14008:	beq	14014 <abort@plt+0x32b8>
   1400c:	mov	r0, r7
   14010:	bl	16790 <abort@plt+0x5a34>
   14014:	mov	r0, fp
   14018:	bl	15ee4 <abort@plt+0x5188>
   1401c:	ldr	lr, [sp, #76]	; 0x4c
   14020:	ldr	r3, [sp, #32]
   14024:	ldr	ip, [sp, #72]	; 0x48
   14028:	mov	r2, r6
   1402c:	mov	r1, fp
   14030:	str	r0, [r4, #4]
   14034:	str	r3, [sp]
   14038:	str	r5, [sp, #8]
   1403c:	str	r8, [sp, #4]
   14040:	str	lr, [sp, #16]
   14044:	str	ip, [sp, #12]
   14048:	mvn	r3, #0
   1404c:	mov	r7, r0
   14050:	bl	11608 <abort@plt+0x8ac>
   14054:	mov	r0, r7
   14058:	str	sl, [r9]
   1405c:	add	sp, sp, #84	; 0x54
   14060:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14064:	mov	r3, #8
   14068:	str	r3, [sp]
   1406c:	add	r1, sp, #28
   14070:	rsb	r2, r2, #1
   14074:	mvn	r3, #-2147483648	; 0x80000000
   14078:	mov	r0, #0
   1407c:	bl	16100 <abort@plt+0x53a4>
   14080:	mov	r4, r0
   14084:	ldm	r8, {r0, r1}
   14088:	str	r4, [r7]
   1408c:	stm	r4, {r0, r1}
   14090:	b	13f88 <abort@plt+0x322c>
   14094:	andeq	r8, r2, r0, asr #2
   14098:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   1409c:	andeq	r8, r2, r0, ror r1
   140a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   140a4:	mov	r6, r0
   140a8:	ldr	lr, [pc, #404]	; 14244 <abort@plt+0x34e8>
   140ac:	sub	sp, sp, #84	; 0x54
   140b0:	add	ip, sp, #32
   140b4:	ldm	lr!, {r0, r1, r2, r3}
   140b8:	ldr	r5, [pc, #392]	; 14248 <abort@plt+0x34ec>
   140bc:	stmia	ip!, {r0, r1, r2, r3}
   140c0:	ldm	lr!, {r0, r1, r2, r3}
   140c4:	ldr	r4, [sp, #44]	; 0x2c
   140c8:	stmia	ip!, {r0, r1, r2, r3}
   140cc:	ldm	lr, {r0, r1, r2, r3}
   140d0:	mvn	lr, r4
   140d4:	and	lr, lr, #67108864	; 0x4000000
   140d8:	eor	lr, lr, r4
   140dc:	stm	ip, {r0, r1, r2, r3}
   140e0:	str	lr, [sp, #44]	; 0x2c
   140e4:	bl	10cb4 <__errno_location@plt>
   140e8:	ldr	r2, [r5, #4]
   140ec:	ldr	r4, [r5]
   140f0:	cmp	r2, #0
   140f4:	mov	r8, r0
   140f8:	ldr	sl, [r0]
   140fc:	bgt	14158 <abort@plt+0x33fc>
   14100:	add	r7, r5, #8
   14104:	cmp	r4, r7
   14108:	str	r2, [sp, #28]
   1410c:	beq	14214 <abort@plt+0x34b8>
   14110:	mov	r3, #8
   14114:	mov	r0, r4
   14118:	str	r3, [sp]
   1411c:	rsb	r2, r2, #1
   14120:	mvn	r3, #-2147483648	; 0x80000000
   14124:	add	r1, sp, #28
   14128:	bl	16100 <abort@plt+0x53a4>
   1412c:	mov	r4, r0
   14130:	str	r0, [r5]
   14134:	ldr	r0, [r5, #4]
   14138:	ldr	r2, [sp, #28]
   1413c:	mov	r1, #0
   14140:	sub	r2, r2, r0
   14144:	add	r0, r4, r0, lsl #3
   14148:	lsl	r2, r2, #3
   1414c:	bl	10ccc <memset@plt>
   14150:	ldr	r3, [sp, #28]
   14154:	str	r3, [r5, #4]
   14158:	ldr	r7, [sp, #36]	; 0x24
   1415c:	ldr	r9, [r4]
   14160:	ldr	r5, [r4, #4]
   14164:	ldr	r2, [sp, #72]	; 0x48
   14168:	ldr	r3, [sp, #32]
   1416c:	ldr	ip, [sp, #76]	; 0x4c
   14170:	orr	r7, r7, #1
   14174:	add	fp, sp, #40	; 0x28
   14178:	str	r2, [sp, #12]
   1417c:	str	r3, [sp]
   14180:	str	r7, [sp, #4]
   14184:	mov	r1, r9
   14188:	mov	r0, r5
   1418c:	str	ip, [sp, #16]
   14190:	str	fp, [sp, #8]
   14194:	mvn	r3, #0
   14198:	mov	r2, r6
   1419c:	bl	11608 <abort@plt+0x8ac>
   141a0:	cmp	r9, r0
   141a4:	bhi	14204 <abort@plt+0x34a8>
   141a8:	ldr	r3, [pc, #156]	; 1424c <abort@plt+0x34f0>
   141ac:	add	r9, r0, #1
   141b0:	cmp	r5, r3
   141b4:	str	r9, [r4]
   141b8:	beq	141c4 <abort@plt+0x3468>
   141bc:	mov	r0, r5
   141c0:	bl	16790 <abort@plt+0x5a34>
   141c4:	mov	r0, r9
   141c8:	bl	15ee4 <abort@plt+0x5188>
   141cc:	ldr	lr, [sp, #76]	; 0x4c
   141d0:	ldr	r3, [sp, #32]
   141d4:	ldr	ip, [sp, #72]	; 0x48
   141d8:	mov	r2, r6
   141dc:	mov	r1, r9
   141e0:	str	r0, [r4, #4]
   141e4:	str	r3, [sp]
   141e8:	str	fp, [sp, #8]
   141ec:	str	r7, [sp, #4]
   141f0:	str	lr, [sp, #16]
   141f4:	str	ip, [sp, #12]
   141f8:	mvn	r3, #0
   141fc:	mov	r5, r0
   14200:	bl	11608 <abort@plt+0x8ac>
   14204:	mov	r0, r5
   14208:	str	sl, [r8]
   1420c:	add	sp, sp, #84	; 0x54
   14210:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14214:	mov	r3, #8
   14218:	str	r3, [sp]
   1421c:	add	r1, sp, #28
   14220:	rsb	r2, r2, #1
   14224:	mvn	r3, #-2147483648	; 0x80000000
   14228:	mov	r0, #0
   1422c:	bl	16100 <abort@plt+0x53a4>
   14230:	mov	r4, r0
   14234:	ldm	r7, {r0, r1}
   14238:	str	r4, [r5]
   1423c:	stm	r4, {r0, r1}
   14240:	b	14134 <abort@plt+0x33d8>
   14244:	andeq	r8, r2, r0, asr #2
   14248:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   1424c:	andeq	r8, r2, r0, ror r1
   14250:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14254:	mov	r9, r0
   14258:	ldr	lr, [pc, #416]	; 14400 <abort@plt+0x36a4>
   1425c:	mov	sl, r1
   14260:	sub	sp, sp, #92	; 0x5c
   14264:	ldm	lr!, {r0, r1, r2, r3}
   14268:	add	ip, sp, #40	; 0x28
   1426c:	ldr	r5, [pc, #400]	; 14404 <abort@plt+0x36a8>
   14270:	stmia	ip!, {r0, r1, r2, r3}
   14274:	ldm	lr!, {r0, r1, r2, r3}
   14278:	ldr	r4, [sp, #52]	; 0x34
   1427c:	stmia	ip!, {r0, r1, r2, r3}
   14280:	ldm	lr, {r0, r1, r2, r3}
   14284:	mvn	lr, r4
   14288:	and	lr, lr, #67108864	; 0x4000000
   1428c:	eor	lr, lr, r4
   14290:	stm	ip, {r0, r1, r2, r3}
   14294:	str	lr, [sp, #52]	; 0x34
   14298:	bl	10cb4 <__errno_location@plt>
   1429c:	ldr	r2, [r5, #4]
   142a0:	ldr	r4, [r5]
   142a4:	cmp	r2, #0
   142a8:	ldr	r3, [r0]
   142ac:	mov	r7, r0
   142b0:	str	r3, [sp, #28]
   142b4:	bgt	14310 <abort@plt+0x35b4>
   142b8:	add	r6, r5, #8
   142bc:	cmp	r4, r6
   142c0:	str	r2, [sp, #36]	; 0x24
   142c4:	beq	143d0 <abort@plt+0x3674>
   142c8:	mov	r3, #8
   142cc:	mov	r0, r4
   142d0:	str	r3, [sp]
   142d4:	rsb	r2, r2, #1
   142d8:	mvn	r3, #-2147483648	; 0x80000000
   142dc:	add	r1, sp, #36	; 0x24
   142e0:	bl	16100 <abort@plt+0x53a4>
   142e4:	mov	r4, r0
   142e8:	str	r0, [r5]
   142ec:	ldr	r0, [r5, #4]
   142f0:	ldr	r2, [sp, #36]	; 0x24
   142f4:	mov	r1, #0
   142f8:	sub	r2, r2, r0
   142fc:	add	r0, r4, r0, lsl #3
   14300:	lsl	r2, r2, #3
   14304:	bl	10ccc <memset@plt>
   14308:	ldr	r3, [sp, #36]	; 0x24
   1430c:	str	r3, [r5, #4]
   14310:	ldr	r6, [sp, #44]	; 0x2c
   14314:	ldr	r8, [r4]
   14318:	ldr	r5, [r4, #4]
   1431c:	ldr	r2, [sp, #80]	; 0x50
   14320:	ldr	r3, [sp, #40]	; 0x28
   14324:	ldr	ip, [sp, #84]	; 0x54
   14328:	orr	r6, r6, #1
   1432c:	add	fp, sp, #48	; 0x30
   14330:	str	r2, [sp, #12]
   14334:	str	r3, [sp]
   14338:	str	r6, [sp, #4]
   1433c:	mov	r1, r8
   14340:	mov	r0, r5
   14344:	str	ip, [sp, #16]
   14348:	str	fp, [sp, #8]
   1434c:	mov	r3, sl
   14350:	mov	r2, r9
   14354:	bl	11608 <abort@plt+0x8ac>
   14358:	cmp	r8, r0
   1435c:	bhi	143bc <abort@plt+0x3660>
   14360:	ldr	r3, [pc, #160]	; 14408 <abort@plt+0x36ac>
   14364:	add	r8, r0, #1
   14368:	cmp	r5, r3
   1436c:	str	r8, [r4]
   14370:	beq	1437c <abort@plt+0x3620>
   14374:	mov	r0, r5
   14378:	bl	16790 <abort@plt+0x5a34>
   1437c:	mov	r0, r8
   14380:	bl	15ee4 <abort@plt+0x5188>
   14384:	ldr	ip, [sp, #84]	; 0x54
   14388:	ldr	lr, [sp, #40]	; 0x28
   1438c:	mov	r3, sl
   14390:	mov	r2, r9
   14394:	mov	r1, r8
   14398:	str	r0, [r4, #4]
   1439c:	ldr	r4, [sp, #80]	; 0x50
   143a0:	str	fp, [sp, #8]
   143a4:	str	r6, [sp, #4]
   143a8:	str	ip, [sp, #16]
   143ac:	str	r4, [sp, #12]
   143b0:	str	lr, [sp]
   143b4:	mov	r5, r0
   143b8:	bl	11608 <abort@plt+0x8ac>
   143bc:	ldr	r3, [sp, #28]
   143c0:	mov	r0, r5
   143c4:	str	r3, [r7]
   143c8:	add	sp, sp, #92	; 0x5c
   143cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   143d0:	mov	r3, #8
   143d4:	str	r3, [sp]
   143d8:	add	r1, sp, #36	; 0x24
   143dc:	rsb	r2, r2, #1
   143e0:	mvn	r3, #-2147483648	; 0x80000000
   143e4:	mov	r0, #0
   143e8:	bl	16100 <abort@plt+0x53a4>
   143ec:	mov	r4, r0
   143f0:	ldm	r6, {r0, r1}
   143f4:	str	r4, [r5]
   143f8:	stm	r4, {r0, r1}
   143fc:	b	142ec <abort@plt+0x3590>
   14400:	andeq	r8, r2, r0, asr #2
   14404:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   14408:	andeq	r8, r2, r0, ror r1
   1440c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14410:	sub	sp, sp, #180	; 0xb4
   14414:	mov	r6, r1
   14418:	mov	r4, r0
   1441c:	mov	r9, r2
   14420:	add	r0, sp, #80	; 0x50
   14424:	mov	r2, #48	; 0x30
   14428:	mov	r1, #0
   1442c:	bl	10ccc <memset@plt>
   14430:	cmp	r6, #10
   14434:	beq	14614 <abort@plt+0x38b8>
   14438:	add	r5, sp, #80	; 0x50
   1443c:	str	r6, [sp, #80]	; 0x50
   14440:	ldm	r5!, {r0, r1, r2, r3}
   14444:	add	ip, sp, #128	; 0x80
   14448:	mov	r7, ip
   1444c:	add	lr, sp, #32
   14450:	stmia	ip!, {r0, r1, r2, r3}
   14454:	mov	r8, #67108864	; 0x4000000
   14458:	ldm	r5!, {r0, r1, r2, r3}
   1445c:	ldr	r6, [pc, #436]	; 14618 <abort@plt+0x38bc>
   14460:	stmia	ip!, {r0, r1, r2, r3}
   14464:	ldm	r5, {r0, r1, r2, r3}
   14468:	stm	ip, {r0, r1, r2, r3}
   1446c:	ldm	r7!, {r0, r1, r2, r3}
   14470:	stmia	lr!, {r0, r1, r2, r3}
   14474:	ldm	r7!, {r0, r1, r2, r3}
   14478:	str	r8, [sp, #44]	; 0x2c
   1447c:	stmia	lr!, {r0, r1, r2, r3}
   14480:	ldm	ip, {r0, r1, r2, r3}
   14484:	stm	lr, {r0, r1, r2, r3}
   14488:	bl	10cb4 <__errno_location@plt>
   1448c:	cmn	r4, #-2147483647	; 0x80000001
   14490:	ldr	r5, [r6]
   14494:	mov	r7, r0
   14498:	movne	r0, #0
   1449c:	moveq	r0, #1
   144a0:	ldr	r3, [r7]
   144a4:	orrs	r0, r0, r4, lsr #31
   144a8:	str	r3, [sp, #24]
   144ac:	bne	14614 <abort@plt+0x38b8>
   144b0:	ldr	r2, [r6, #4]
   144b4:	cmp	r4, r2
   144b8:	blt	14518 <abort@plt+0x37bc>
   144bc:	add	r8, r6, #8
   144c0:	cmp	r5, r8
   144c4:	str	r2, [sp, #80]	; 0x50
   144c8:	beq	145e4 <abort@plt+0x3888>
   144cc:	mov	r3, #8
   144d0:	sub	r2, r4, r2
   144d4:	mov	r0, r5
   144d8:	str	r3, [sp]
   144dc:	add	r2, r2, #1
   144e0:	add	r1, sp, #80	; 0x50
   144e4:	mvn	r3, #-2147483648	; 0x80000000
   144e8:	bl	16100 <abort@plt+0x53a4>
   144ec:	mov	r5, r0
   144f0:	str	r0, [r6]
   144f4:	ldr	r0, [r6, #4]
   144f8:	ldr	r2, [sp, #80]	; 0x50
   144fc:	mov	r1, #0
   14500:	sub	r2, r2, r0
   14504:	add	r0, r5, r0, lsl #3
   14508:	lsl	r2, r2, #3
   1450c:	bl	10ccc <memset@plt>
   14510:	ldr	r3, [sp, #80]	; 0x50
   14514:	str	r3, [r6, #4]
   14518:	add	fp, r5, r4, lsl #3
   1451c:	ldr	r1, [sp, #36]	; 0x24
   14520:	ldr	r8, [r5, r4, lsl #3]
   14524:	ldr	r6, [fp, #4]
   14528:	ldr	r2, [sp, #72]	; 0x48
   1452c:	ldr	r3, [sp, #32]
   14530:	ldr	ip, [sp, #76]	; 0x4c
   14534:	orr	r1, r1, #1
   14538:	add	sl, sp, #40	; 0x28
   1453c:	str	r1, [sp, #28]
   14540:	str	r1, [sp, #4]
   14544:	str	r2, [sp, #12]
   14548:	str	r3, [sp]
   1454c:	mov	r0, r6
   14550:	mov	r1, r8
   14554:	str	ip, [sp, #16]
   14558:	str	sl, [sp, #8]
   1455c:	mvn	r3, #0
   14560:	mov	r2, r9
   14564:	bl	11608 <abort@plt+0x8ac>
   14568:	cmp	r8, r0
   1456c:	bhi	145d0 <abort@plt+0x3874>
   14570:	ldr	r3, [pc, #164]	; 1461c <abort@plt+0x38c0>
   14574:	add	r8, r0, #1
   14578:	cmp	r6, r3
   1457c:	str	r8, [r5, r4, lsl #3]
   14580:	beq	1458c <abort@plt+0x3830>
   14584:	mov	r0, r6
   14588:	bl	16790 <abort@plt+0x5a34>
   1458c:	mov	r0, r8
   14590:	bl	15ee4 <abort@plt+0x5188>
   14594:	ldr	lr, [sp, #76]	; 0x4c
   14598:	ldr	r3, [sp, #32]
   1459c:	ldr	ip, [sp, #72]	; 0x48
   145a0:	ldr	r4, [sp, #28]
   145a4:	mov	r2, r9
   145a8:	mov	r1, r8
   145ac:	str	r0, [fp, #4]
   145b0:	str	r3, [sp]
   145b4:	str	sl, [sp, #8]
   145b8:	str	r4, [sp, #4]
   145bc:	str	lr, [sp, #16]
   145c0:	str	ip, [sp, #12]
   145c4:	mvn	r3, #0
   145c8:	mov	r6, r0
   145cc:	bl	11608 <abort@plt+0x8ac>
   145d0:	ldr	r3, [sp, #24]
   145d4:	mov	r0, r6
   145d8:	str	r3, [r7]
   145dc:	add	sp, sp, #180	; 0xb4
   145e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   145e4:	mov	r3, #8
   145e8:	sub	r2, r4, r2
   145ec:	add	r1, sp, #80	; 0x50
   145f0:	str	r3, [sp]
   145f4:	add	r2, r2, #1
   145f8:	mvn	r3, #-2147483648	; 0x80000000
   145fc:	bl	16100 <abort@plt+0x53a4>
   14600:	mov	r5, r0
   14604:	ldm	r8, {r0, r1}
   14608:	str	r5, [r6]
   1460c:	stm	r5, {r0, r1}
   14610:	b	144f4 <abort@plt+0x3798>
   14614:	bl	10d5c <abort@plt>
   14618:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   1461c:	andeq	r8, r2, r0, ror r1
   14620:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14624:	mov	r7, r1
   14628:	ldr	lr, [pc, #492]	; 1481c <abort@plt+0x3ac0>
   1462c:	mov	r8, r2
   14630:	mov	r4, r0
   14634:	mov	fp, r3
   14638:	ldm	lr!, {r0, r1, r2, r3}
   1463c:	sub	sp, sp, #100	; 0x64
   14640:	add	ip, sp, #48	; 0x30
   14644:	mov	sl, #10
   14648:	stmia	ip!, {r0, r1, r2, r3}
   1464c:	cmp	r8, #0
   14650:	cmpne	r7, #0
   14654:	ldm	lr!, {r0, r1, r2, r3}
   14658:	str	sl, [sp, #48]	; 0x30
   1465c:	stmia	ip!, {r0, r1, r2, r3}
   14660:	ldm	lr, {r0, r1, r2, r3}
   14664:	stm	ip, {r0, r1, r2, r3}
   14668:	beq	14818 <abort@plt+0x3abc>
   1466c:	str	r7, [sp, #88]	; 0x58
   14670:	str	r8, [sp, #92]	; 0x5c
   14674:	bl	10cb4 <__errno_location@plt>
   14678:	ldr	r6, [pc, #416]	; 14820 <abort@plt+0x3ac4>
   1467c:	cmn	r4, #-2147483647	; 0x80000001
   14680:	ldr	r5, [r6]
   14684:	mov	r9, r0
   14688:	movne	r0, #0
   1468c:	moveq	r0, #1
   14690:	ldr	r3, [r9]
   14694:	orrs	r0, r0, r4, lsr #31
   14698:	str	r3, [sp, #28]
   1469c:	bne	14818 <abort@plt+0x3abc>
   146a0:	ldr	r2, [r6, #4]
   146a4:	cmp	r4, r2
   146a8:	movlt	r3, sl
   146ac:	blt	14718 <abort@plt+0x39bc>
   146b0:	add	r7, r6, #8
   146b4:	cmp	r5, r7
   146b8:	str	r2, [sp, #44]	; 0x2c
   146bc:	beq	147e8 <abort@plt+0x3a8c>
   146c0:	mov	r3, #8
   146c4:	sub	r2, r4, r2
   146c8:	mov	r0, r5
   146cc:	str	r3, [sp]
   146d0:	add	r2, r2, #1
   146d4:	mvn	r3, #-2147483648	; 0x80000000
   146d8:	add	r1, sp, #44	; 0x2c
   146dc:	bl	16100 <abort@plt+0x53a4>
   146e0:	mov	r5, r0
   146e4:	str	r0, [r6]
   146e8:	ldr	r0, [r6, #4]
   146ec:	ldr	r2, [sp, #44]	; 0x2c
   146f0:	mov	r1, #0
   146f4:	sub	r2, r2, r0
   146f8:	add	r0, r5, r0, lsl #3
   146fc:	lsl	r2, r2, #3
   14700:	bl	10ccc <memset@plt>
   14704:	ldr	r3, [sp, #48]	; 0x30
   14708:	ldr	r7, [sp, #88]	; 0x58
   1470c:	ldr	r8, [sp, #92]	; 0x5c
   14710:	ldr	r2, [sp, #44]	; 0x2c
   14714:	str	r2, [r6, #4]
   14718:	add	r2, r5, r4, lsl #3
   1471c:	mov	r1, r2
   14720:	str	r2, [sp, #32]
   14724:	ldr	r2, [sp, #52]	; 0x34
   14728:	ldr	r6, [r1, #4]
   1472c:	ldr	sl, [r5, r4, lsl #3]
   14730:	orr	r2, r2, #1
   14734:	str	r3, [sp]
   14738:	add	r3, sp, #56	; 0x38
   1473c:	str	r2, [sp, #36]	; 0x24
   14740:	str	r2, [sp, #4]
   14744:	str	r3, [sp, #8]
   14748:	mov	r0, r6
   1474c:	str	r8, [sp, #16]
   14750:	str	r7, [sp, #12]
   14754:	mov	r1, sl
   14758:	mvn	r3, #0
   1475c:	mov	r2, fp
   14760:	bl	11608 <abort@plt+0x8ac>
   14764:	cmp	sl, r0
   14768:	bhi	147d4 <abort@plt+0x3a78>
   1476c:	ldr	r3, [pc, #176]	; 14824 <abort@plt+0x3ac8>
   14770:	add	r7, r0, #1
   14774:	cmp	r6, r3
   14778:	str	r7, [r5, r4, lsl #3]
   1477c:	beq	14788 <abort@plt+0x3a2c>
   14780:	mov	r0, r6
   14784:	bl	16790 <abort@plt+0x5a34>
   14788:	mov	r0, r7
   1478c:	bl	15ee4 <abort@plt+0x5188>
   14790:	ldr	r3, [sp, #32]
   14794:	ldr	lr, [sp, #92]	; 0x5c
   14798:	ldr	ip, [sp, #88]	; 0x58
   1479c:	ldr	r4, [sp, #36]	; 0x24
   147a0:	mov	r2, fp
   147a4:	mov	r1, r7
   147a8:	str	r0, [r3, #4]
   147ac:	add	r3, sp, #56	; 0x38
   147b0:	str	r3, [sp, #8]
   147b4:	ldr	r3, [sp, #48]	; 0x30
   147b8:	str	r4, [sp, #4]
   147bc:	str	r3, [sp]
   147c0:	str	lr, [sp, #16]
   147c4:	str	ip, [sp, #12]
   147c8:	mvn	r3, #0
   147cc:	mov	r6, r0
   147d0:	bl	11608 <abort@plt+0x8ac>
   147d4:	ldr	r3, [sp, #28]
   147d8:	mov	r0, r6
   147dc:	str	r3, [r9]
   147e0:	add	sp, sp, #100	; 0x64
   147e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   147e8:	mov	r3, #8
   147ec:	sub	r2, r4, r2
   147f0:	str	r3, [sp]
   147f4:	add	r1, sp, #44	; 0x2c
   147f8:	add	r2, r2, #1
   147fc:	mvn	r3, #-2147483648	; 0x80000000
   14800:	bl	16100 <abort@plt+0x53a4>
   14804:	mov	r5, r0
   14808:	ldm	r7, {r0, r1}
   1480c:	str	r5, [r6]
   14810:	stm	r5, {r0, r1}
   14814:	b	146e8 <abort@plt+0x398c>
   14818:	bl	10d5c <abort@plt>
   1481c:	andeq	r8, r2, r0, asr #2
   14820:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   14824:	andeq	r8, r2, r0, ror r1
   14828:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1482c:	mov	r7, r1
   14830:	ldr	lr, [pc, #492]	; 14a24 <abort@plt+0x3cc8>
   14834:	mov	r8, r2
   14838:	mov	r4, r0
   1483c:	mov	fp, r3
   14840:	ldm	lr!, {r0, r1, r2, r3}
   14844:	sub	sp, sp, #100	; 0x64
   14848:	add	ip, sp, #48	; 0x30
   1484c:	mov	sl, #10
   14850:	stmia	ip!, {r0, r1, r2, r3}
   14854:	cmp	r8, #0
   14858:	cmpne	r7, #0
   1485c:	ldm	lr!, {r0, r1, r2, r3}
   14860:	str	sl, [sp, #48]	; 0x30
   14864:	stmia	ip!, {r0, r1, r2, r3}
   14868:	ldm	lr, {r0, r1, r2, r3}
   1486c:	stm	ip, {r0, r1, r2, r3}
   14870:	beq	14a20 <abort@plt+0x3cc4>
   14874:	str	r7, [sp, #88]	; 0x58
   14878:	str	r8, [sp, #92]	; 0x5c
   1487c:	bl	10cb4 <__errno_location@plt>
   14880:	ldr	r6, [pc, #416]	; 14a28 <abort@plt+0x3ccc>
   14884:	cmn	r4, #-2147483647	; 0x80000001
   14888:	ldr	r5, [r6]
   1488c:	mov	r9, r0
   14890:	movne	r0, #0
   14894:	moveq	r0, #1
   14898:	ldr	r3, [r9]
   1489c:	orrs	r0, r0, r4, lsr #31
   148a0:	str	r3, [sp, #28]
   148a4:	bne	14a20 <abort@plt+0x3cc4>
   148a8:	ldr	r2, [r6, #4]
   148ac:	cmp	r4, r2
   148b0:	movlt	r3, sl
   148b4:	blt	14920 <abort@plt+0x3bc4>
   148b8:	add	r7, r6, #8
   148bc:	cmp	r5, r7
   148c0:	str	r2, [sp, #44]	; 0x2c
   148c4:	beq	149f0 <abort@plt+0x3c94>
   148c8:	mov	r3, #8
   148cc:	sub	r2, r4, r2
   148d0:	mov	r0, r5
   148d4:	str	r3, [sp]
   148d8:	add	r2, r2, #1
   148dc:	mvn	r3, #-2147483648	; 0x80000000
   148e0:	add	r1, sp, #44	; 0x2c
   148e4:	bl	16100 <abort@plt+0x53a4>
   148e8:	mov	r5, r0
   148ec:	str	r0, [r6]
   148f0:	ldr	r0, [r6, #4]
   148f4:	ldr	r2, [sp, #44]	; 0x2c
   148f8:	mov	r1, #0
   148fc:	sub	r2, r2, r0
   14900:	add	r0, r5, r0, lsl #3
   14904:	lsl	r2, r2, #3
   14908:	bl	10ccc <memset@plt>
   1490c:	ldr	r3, [sp, #48]	; 0x30
   14910:	ldr	r7, [sp, #88]	; 0x58
   14914:	ldr	r8, [sp, #92]	; 0x5c
   14918:	ldr	r2, [sp, #44]	; 0x2c
   1491c:	str	r2, [r6, #4]
   14920:	add	r2, r5, r4, lsl #3
   14924:	mov	r1, r2
   14928:	str	r2, [sp, #32]
   1492c:	ldr	r2, [sp, #52]	; 0x34
   14930:	ldr	r6, [r1, #4]
   14934:	ldr	sl, [r5, r4, lsl #3]
   14938:	orr	r2, r2, #1
   1493c:	str	r3, [sp]
   14940:	add	r3, sp, #56	; 0x38
   14944:	str	r2, [sp, #36]	; 0x24
   14948:	str	r2, [sp, #4]
   1494c:	str	r3, [sp, #8]
   14950:	mov	r0, r6
   14954:	str	r8, [sp, #16]
   14958:	str	r7, [sp, #12]
   1495c:	mov	r1, sl
   14960:	ldr	r3, [sp, #136]	; 0x88
   14964:	mov	r2, fp
   14968:	bl	11608 <abort@plt+0x8ac>
   1496c:	cmp	sl, r0
   14970:	bhi	149dc <abort@plt+0x3c80>
   14974:	ldr	r3, [pc, #176]	; 14a2c <abort@plt+0x3cd0>
   14978:	add	r7, r0, #1
   1497c:	cmp	r6, r3
   14980:	str	r7, [r5, r4, lsl #3]
   14984:	beq	14990 <abort@plt+0x3c34>
   14988:	mov	r0, r6
   1498c:	bl	16790 <abort@plt+0x5a34>
   14990:	mov	r0, r7
   14994:	bl	15ee4 <abort@plt+0x5188>
   14998:	ldr	r3, [sp, #32]
   1499c:	ldr	lr, [sp, #92]	; 0x5c
   149a0:	ldr	ip, [sp, #88]	; 0x58
   149a4:	ldr	r4, [sp, #36]	; 0x24
   149a8:	mov	r2, fp
   149ac:	mov	r1, r7
   149b0:	str	r0, [r3, #4]
   149b4:	add	r3, sp, #56	; 0x38
   149b8:	str	r3, [sp, #8]
   149bc:	ldr	r3, [sp, #48]	; 0x30
   149c0:	str	r4, [sp, #4]
   149c4:	str	r3, [sp]
   149c8:	str	lr, [sp, #16]
   149cc:	str	ip, [sp, #12]
   149d0:	ldr	r3, [sp, #136]	; 0x88
   149d4:	mov	r6, r0
   149d8:	bl	11608 <abort@plt+0x8ac>
   149dc:	ldr	r3, [sp, #28]
   149e0:	mov	r0, r6
   149e4:	str	r3, [r9]
   149e8:	add	sp, sp, #100	; 0x64
   149ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   149f0:	mov	r3, #8
   149f4:	sub	r2, r4, r2
   149f8:	str	r3, [sp]
   149fc:	add	r1, sp, #44	; 0x2c
   14a00:	add	r2, r2, #1
   14a04:	mvn	r3, #-2147483648	; 0x80000000
   14a08:	bl	16100 <abort@plt+0x53a4>
   14a0c:	mov	r5, r0
   14a10:	ldm	r7, {r0, r1}
   14a14:	str	r5, [r6]
   14a18:	stm	r5, {r0, r1}
   14a1c:	b	148f0 <abort@plt+0x3b94>
   14a20:	bl	10d5c <abort@plt>
   14a24:	andeq	r8, r2, r0, asr #2
   14a28:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   14a2c:	andeq	r8, r2, r0, ror r1
   14a30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14a34:	mov	r5, r0
   14a38:	ldr	lr, [pc, #452]	; 14c04 <abort@plt+0x3ea8>
   14a3c:	mov	r6, r1
   14a40:	mov	sl, r2
   14a44:	ldm	lr!, {r0, r1, r2, r3}
   14a48:	sub	sp, sp, #92	; 0x5c
   14a4c:	add	ip, sp, #40	; 0x28
   14a50:	cmp	r6, #0
   14a54:	cmpne	r5, #0
   14a58:	stmia	ip!, {r0, r1, r2, r3}
   14a5c:	mov	r9, #10
   14a60:	ldm	lr!, {r0, r1, r2, r3}
   14a64:	moveq	fp, #1
   14a68:	movne	fp, #0
   14a6c:	str	r9, [sp, #40]	; 0x28
   14a70:	stmia	ip!, {r0, r1, r2, r3}
   14a74:	ldm	lr, {r0, r1, r2, r3}
   14a78:	stm	ip, {r0, r1, r2, r3}
   14a7c:	beq	14c00 <abort@plt+0x3ea4>
   14a80:	str	r5, [sp, #80]	; 0x50
   14a84:	str	r6, [sp, #84]	; 0x54
   14a88:	bl	10cb4 <__errno_location@plt>
   14a8c:	ldr	r7, [pc, #372]	; 14c08 <abort@plt+0x3eac>
   14a90:	ldr	r2, [r7, #4]
   14a94:	ldr	r4, [r7]
   14a98:	cmp	r2, #0
   14a9c:	ldr	r3, [r0]
   14aa0:	mov	r8, r0
   14aa4:	str	r3, [sp, #24]
   14aa8:	movgt	r3, r9
   14aac:	bgt	14b14 <abort@plt+0x3db8>
   14ab0:	add	r5, r7, #8
   14ab4:	cmp	r4, r5
   14ab8:	str	r2, [sp, #36]	; 0x24
   14abc:	beq	14bd0 <abort@plt+0x3e74>
   14ac0:	mov	r3, #8
   14ac4:	mov	r0, r4
   14ac8:	str	r3, [sp]
   14acc:	rsb	r2, r2, #1
   14ad0:	mvn	r3, #-2147483648	; 0x80000000
   14ad4:	add	r1, sp, #36	; 0x24
   14ad8:	bl	16100 <abort@plt+0x53a4>
   14adc:	mov	r4, r0
   14ae0:	str	r0, [r7]
   14ae4:	ldr	r0, [r7, #4]
   14ae8:	ldr	r2, [sp, #36]	; 0x24
   14aec:	mov	r1, #0
   14af0:	sub	r2, r2, r0
   14af4:	add	r0, r4, r0, lsl #3
   14af8:	lsl	r2, r2, #3
   14afc:	bl	10ccc <memset@plt>
   14b00:	ldr	r3, [sp, #40]	; 0x28
   14b04:	ldr	r5, [sp, #80]	; 0x50
   14b08:	ldr	r6, [sp, #84]	; 0x54
   14b0c:	ldr	r2, [sp, #36]	; 0x24
   14b10:	str	r2, [r7, #4]
   14b14:	ldr	r2, [sp, #44]	; 0x2c
   14b18:	ldr	r9, [r4]
   14b1c:	ldr	r7, [r4, #4]
   14b20:	orr	r2, r2, #1
   14b24:	add	fp, sp, #48	; 0x30
   14b28:	str	r2, [sp, #28]
   14b2c:	str	r2, [sp, #4]
   14b30:	str	r3, [sp]
   14b34:	str	r6, [sp, #16]
   14b38:	str	r5, [sp, #12]
   14b3c:	mov	r1, r9
   14b40:	mov	r0, r7
   14b44:	str	fp, [sp, #8]
   14b48:	mvn	r3, #0
   14b4c:	mov	r2, sl
   14b50:	bl	11608 <abort@plt+0x8ac>
   14b54:	cmp	r9, r0
   14b58:	bhi	14bbc <abort@plt+0x3e60>
   14b5c:	ldr	r3, [pc, #168]	; 14c0c <abort@plt+0x3eb0>
   14b60:	add	r5, r0, #1
   14b64:	cmp	r7, r3
   14b68:	str	r5, [r4]
   14b6c:	beq	14b78 <abort@plt+0x3e1c>
   14b70:	mov	r0, r7
   14b74:	bl	16790 <abort@plt+0x5a34>
   14b78:	mov	r0, r5
   14b7c:	bl	15ee4 <abort@plt+0x5188>
   14b80:	ldr	lr, [sp, #84]	; 0x54
   14b84:	ldr	r3, [sp, #40]	; 0x28
   14b88:	ldr	ip, [sp, #80]	; 0x50
   14b8c:	mov	r2, sl
   14b90:	mov	r1, r5
   14b94:	str	r0, [r4, #4]
   14b98:	ldr	r4, [sp, #28]
   14b9c:	str	r3, [sp]
   14ba0:	str	fp, [sp, #8]
   14ba4:	str	r4, [sp, #4]
   14ba8:	str	lr, [sp, #16]
   14bac:	str	ip, [sp, #12]
   14bb0:	mvn	r3, #0
   14bb4:	mov	r7, r0
   14bb8:	bl	11608 <abort@plt+0x8ac>
   14bbc:	ldr	r3, [sp, #24]
   14bc0:	mov	r0, r7
   14bc4:	str	r3, [r8]
   14bc8:	add	sp, sp, #92	; 0x5c
   14bcc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14bd0:	mov	r3, #8
   14bd4:	str	r3, [sp]
   14bd8:	add	r1, sp, #36	; 0x24
   14bdc:	rsb	r2, r2, #1
   14be0:	mov	r0, fp
   14be4:	mvn	r3, #-2147483648	; 0x80000000
   14be8:	bl	16100 <abort@plt+0x53a4>
   14bec:	mov	r4, r0
   14bf0:	ldm	r5, {r0, r1}
   14bf4:	str	r4, [r7]
   14bf8:	stm	r4, {r0, r1}
   14bfc:	b	14ae4 <abort@plt+0x3d88>
   14c00:	bl	10d5c <abort@plt>
   14c04:	andeq	r8, r2, r0, asr #2
   14c08:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   14c0c:	andeq	r8, r2, r0, ror r1
   14c10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14c14:	mov	r5, r0
   14c18:	ldr	lr, [pc, #464]	; 14df0 <abort@plt+0x4094>
   14c1c:	mov	r6, r1
   14c20:	mov	sl, r2
   14c24:	mov	fp, r3
   14c28:	ldm	lr!, {r0, r1, r2, r3}
   14c2c:	sub	sp, sp, #92	; 0x5c
   14c30:	add	ip, sp, #40	; 0x28
   14c34:	cmp	r6, #0
   14c38:	cmpne	r5, #0
   14c3c:	stmia	ip!, {r0, r1, r2, r3}
   14c40:	moveq	r4, #1
   14c44:	ldm	lr!, {r0, r1, r2, r3}
   14c48:	movne	r4, #0
   14c4c:	mov	r9, #10
   14c50:	str	r4, [sp, #28]
   14c54:	stmia	ip!, {r0, r1, r2, r3}
   14c58:	ldm	lr, {r0, r1, r2, r3}
   14c5c:	str	r9, [sp, #40]	; 0x28
   14c60:	stm	ip, {r0, r1, r2, r3}
   14c64:	beq	14dec <abort@plt+0x4090>
   14c68:	str	r5, [sp, #80]	; 0x50
   14c6c:	str	r6, [sp, #84]	; 0x54
   14c70:	bl	10cb4 <__errno_location@plt>
   14c74:	ldr	r7, [pc, #376]	; 14df4 <abort@plt+0x4098>
   14c78:	ldr	r2, [r7, #4]
   14c7c:	ldr	r4, [r7]
   14c80:	cmp	r2, #0
   14c84:	ldr	r3, [r0]
   14c88:	mov	r8, r0
   14c8c:	str	r3, [sp, #24]
   14c90:	movgt	r3, r9
   14c94:	bgt	14cfc <abort@plt+0x3fa0>
   14c98:	add	r5, r7, #8
   14c9c:	cmp	r4, r5
   14ca0:	str	r2, [sp, #36]	; 0x24
   14ca4:	beq	14dbc <abort@plt+0x4060>
   14ca8:	mov	r3, #8
   14cac:	mov	r0, r4
   14cb0:	str	r3, [sp]
   14cb4:	rsb	r2, r2, #1
   14cb8:	mvn	r3, #-2147483648	; 0x80000000
   14cbc:	add	r1, sp, #36	; 0x24
   14cc0:	bl	16100 <abort@plt+0x53a4>
   14cc4:	mov	r4, r0
   14cc8:	str	r0, [r7]
   14ccc:	ldr	r0, [r7, #4]
   14cd0:	ldr	r2, [sp, #36]	; 0x24
   14cd4:	mov	r1, #0
   14cd8:	sub	r2, r2, r0
   14cdc:	add	r0, r4, r0, lsl #3
   14ce0:	lsl	r2, r2, #3
   14ce4:	bl	10ccc <memset@plt>
   14ce8:	ldr	r3, [sp, #40]	; 0x28
   14cec:	ldr	r5, [sp, #80]	; 0x50
   14cf0:	ldr	r6, [sp, #84]	; 0x54
   14cf4:	ldr	r2, [sp, #36]	; 0x24
   14cf8:	str	r2, [r7, #4]
   14cfc:	ldr	r2, [sp, #44]	; 0x2c
   14d00:	ldr	r9, [r4]
   14d04:	ldr	r7, [r4, #4]
   14d08:	orr	r2, r2, #1
   14d0c:	str	r3, [sp]
   14d10:	add	r3, sp, #48	; 0x30
   14d14:	str	r2, [sp, #28]
   14d18:	str	r2, [sp, #4]
   14d1c:	str	r3, [sp, #8]
   14d20:	str	r6, [sp, #16]
   14d24:	str	r5, [sp, #12]
   14d28:	mov	r1, r9
   14d2c:	mov	r0, r7
   14d30:	mov	r3, fp
   14d34:	mov	r2, sl
   14d38:	bl	11608 <abort@plt+0x8ac>
   14d3c:	cmp	r9, r0
   14d40:	bhi	14da8 <abort@plt+0x404c>
   14d44:	ldr	r3, [pc, #172]	; 14df8 <abort@plt+0x409c>
   14d48:	add	r5, r0, #1
   14d4c:	cmp	r7, r3
   14d50:	str	r5, [r4]
   14d54:	beq	14d60 <abort@plt+0x4004>
   14d58:	mov	r0, r7
   14d5c:	bl	16790 <abort@plt+0x5a34>
   14d60:	mov	r0, r5
   14d64:	bl	15ee4 <abort@plt+0x5188>
   14d68:	add	lr, sp, #48	; 0x30
   14d6c:	ldr	ip, [sp, #84]	; 0x54
   14d70:	mov	r1, r5
   14d74:	ldr	r5, [sp, #28]
   14d78:	mov	r3, fp
   14d7c:	mov	r2, sl
   14d80:	str	r0, [r4, #4]
   14d84:	ldr	r4, [sp, #80]	; 0x50
   14d88:	str	lr, [sp, #8]
   14d8c:	ldr	lr, [sp, #40]	; 0x28
   14d90:	str	r5, [sp, #4]
   14d94:	str	ip, [sp, #16]
   14d98:	str	r4, [sp, #12]
   14d9c:	str	lr, [sp]
   14da0:	mov	r7, r0
   14da4:	bl	11608 <abort@plt+0x8ac>
   14da8:	ldr	r3, [sp, #24]
   14dac:	mov	r0, r7
   14db0:	str	r3, [r8]
   14db4:	add	sp, sp, #92	; 0x5c
   14db8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14dbc:	mov	r3, #8
   14dc0:	str	r3, [sp]
   14dc4:	add	r1, sp, #36	; 0x24
   14dc8:	rsb	r2, r2, #1
   14dcc:	ldr	r0, [sp, #28]
   14dd0:	mvn	r3, #-2147483648	; 0x80000000
   14dd4:	bl	16100 <abort@plt+0x53a4>
   14dd8:	mov	r4, r0
   14ddc:	ldm	r5, {r0, r1}
   14de0:	str	r4, [r7]
   14de4:	stm	r4, {r0, r1}
   14de8:	b	14ccc <abort@plt+0x3f70>
   14dec:	bl	10d5c <abort@plt>
   14df0:	andeq	r8, r2, r0, asr #2
   14df4:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   14df8:	andeq	r8, r2, r0, ror r1
   14dfc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14e00:	sub	sp, sp, #52	; 0x34
   14e04:	mov	r5, r0
   14e08:	mov	sl, r1
   14e0c:	mov	fp, r2
   14e10:	bl	10cb4 <__errno_location@plt>
   14e14:	ldr	r4, [pc, #404]	; 14fb0 <abort@plt+0x4254>
   14e18:	cmn	r5, #-2147483647	; 0x80000001
   14e1c:	ldr	r6, [r4]
   14e20:	mov	r8, r0
   14e24:	movne	r0, #0
   14e28:	moveq	r0, #1
   14e2c:	ldr	r3, [r8]
   14e30:	orrs	r0, r0, r5, lsr #31
   14e34:	str	r3, [sp, #28]
   14e38:	bne	14fac <abort@plt+0x4250>
   14e3c:	ldr	r2, [r4, #4]
   14e40:	cmp	r5, r2
   14e44:	blt	14ea4 <abort@plt+0x4148>
   14e48:	add	r7, r4, #8
   14e4c:	cmp	r6, r7
   14e50:	str	r2, [sp, #44]	; 0x2c
   14e54:	beq	14f7c <abort@plt+0x4220>
   14e58:	mov	r3, #8
   14e5c:	sub	r2, r5, r2
   14e60:	mov	r0, r6
   14e64:	str	r3, [sp]
   14e68:	add	r2, r2, #1
   14e6c:	mvn	r3, #-2147483648	; 0x80000000
   14e70:	add	r1, sp, #44	; 0x2c
   14e74:	bl	16100 <abort@plt+0x53a4>
   14e78:	mov	r6, r0
   14e7c:	str	r0, [r4]
   14e80:	ldr	r0, [r4, #4]
   14e84:	ldr	r2, [sp, #44]	; 0x2c
   14e88:	mov	r1, #0
   14e8c:	sub	r2, r2, r0
   14e90:	add	r0, r6, r0, lsl #3
   14e94:	lsl	r2, r2, #3
   14e98:	bl	10ccc <memset@plt>
   14e9c:	ldr	r3, [sp, #44]	; 0x2c
   14ea0:	str	r3, [r4, #4]
   14ea4:	ldr	r2, [r4, #56]	; 0x38
   14ea8:	add	r3, r6, r5, lsl #3
   14eac:	ldr	r1, [r4, #20]
   14eb0:	ldr	r7, [r3, #4]
   14eb4:	ldr	r9, [r6, r5, lsl #3]
   14eb8:	ldr	ip, [r4, #60]	; 0x3c
   14ebc:	str	r3, [sp, #32]
   14ec0:	ldr	r3, [r4, #16]
   14ec4:	str	r2, [sp, #12]
   14ec8:	ldr	r2, [pc, #228]	; 14fb4 <abort@plt+0x4258>
   14ecc:	orr	r1, r1, #1
   14ed0:	str	r1, [sp, #36]	; 0x24
   14ed4:	str	r1, [sp, #4]
   14ed8:	str	r2, [sp, #8]
   14edc:	str	r3, [sp]
   14ee0:	mov	r0, r7
   14ee4:	mov	r1, r9
   14ee8:	str	ip, [sp, #16]
   14eec:	mov	r3, fp
   14ef0:	mov	r2, sl
   14ef4:	bl	11608 <abort@plt+0x8ac>
   14ef8:	cmp	r9, r0
   14efc:	bhi	14f68 <abort@plt+0x420c>
   14f00:	ldr	r3, [pc, #176]	; 14fb8 <abort@plt+0x425c>
   14f04:	add	r9, r0, #1
   14f08:	cmp	r7, r3
   14f0c:	str	r9, [r6, r5, lsl #3]
   14f10:	beq	14f1c <abort@plt+0x41c0>
   14f14:	mov	r0, r7
   14f18:	bl	16790 <abort@plt+0x5a34>
   14f1c:	mov	r0, r9
   14f20:	bl	15ee4 <abort@plt+0x5188>
   14f24:	ldr	ip, [sp, #32]
   14f28:	ldr	lr, [r4, #60]	; 0x3c
   14f2c:	ldr	r5, [r4, #56]	; 0x38
   14f30:	mov	r3, fp
   14f34:	mov	r2, sl
   14f38:	mov	r1, r9
   14f3c:	str	r0, [ip, #4]
   14f40:	ldr	ip, [r4, #16]
   14f44:	ldr	r4, [pc, #104]	; 14fb4 <abort@plt+0x4258>
   14f48:	str	lr, [sp, #16]
   14f4c:	str	r4, [sp, #8]
   14f50:	ldr	r4, [sp, #36]	; 0x24
   14f54:	str	r5, [sp, #12]
   14f58:	str	r4, [sp, #4]
   14f5c:	str	ip, [sp]
   14f60:	mov	r7, r0
   14f64:	bl	11608 <abort@plt+0x8ac>
   14f68:	ldr	r3, [sp, #28]
   14f6c:	mov	r0, r7
   14f70:	str	r3, [r8]
   14f74:	add	sp, sp, #52	; 0x34
   14f78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14f7c:	mov	r3, #8
   14f80:	sub	r2, r5, r2
   14f84:	str	r3, [sp]
   14f88:	add	r1, sp, #44	; 0x2c
   14f8c:	add	r2, r2, #1
   14f90:	mvn	r3, #-2147483648	; 0x80000000
   14f94:	bl	16100 <abort@plt+0x53a4>
   14f98:	mov	r6, r0
   14f9c:	ldm	r7, {r0, r1}
   14fa0:	str	r6, [r4]
   14fa4:	stm	r6, {r0, r1}
   14fa8:	b	14e80 <abort@plt+0x4124>
   14fac:	bl	10d5c <abort@plt>
   14fb0:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   14fb4:	strdeq	r8, [r2], -r0
   14fb8:	andeq	r8, r2, r0, ror r1
   14fbc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14fc0:	sub	sp, sp, #44	; 0x2c
   14fc4:	mov	r9, r0
   14fc8:	mov	sl, r1
   14fcc:	bl	10cb4 <__errno_location@plt>
   14fd0:	ldr	r4, [pc, #360]	; 15140 <abort@plt+0x43e4>
   14fd4:	ldr	r2, [r4, #4]
   14fd8:	ldr	r5, [r4]
   14fdc:	cmp	r2, #0
   14fe0:	ldr	r3, [r0]
   14fe4:	mov	r7, r0
   14fe8:	str	r3, [sp, #24]
   14fec:	bgt	15048 <abort@plt+0x42ec>
   14ff0:	add	r6, r4, #8
   14ff4:	cmp	r5, r6
   14ff8:	str	r2, [sp, #36]	; 0x24
   14ffc:	beq	15110 <abort@plt+0x43b4>
   15000:	mov	r3, #8
   15004:	mov	r0, r5
   15008:	str	r3, [sp]
   1500c:	rsb	r2, r2, #1
   15010:	mvn	r3, #-2147483648	; 0x80000000
   15014:	add	r1, sp, #36	; 0x24
   15018:	bl	16100 <abort@plt+0x53a4>
   1501c:	mov	r5, r0
   15020:	str	r0, [r4]
   15024:	ldr	r0, [r4, #4]
   15028:	ldr	r2, [sp, #36]	; 0x24
   1502c:	mov	r1, #0
   15030:	sub	r2, r2, r0
   15034:	add	r0, r5, r0, lsl #3
   15038:	lsl	r2, r2, #3
   1503c:	bl	10ccc <memset@plt>
   15040:	ldr	r3, [sp, #36]	; 0x24
   15044:	str	r3, [r4, #4]
   15048:	ldr	r1, [r4, #20]
   1504c:	ldr	r8, [r5]
   15050:	ldr	r6, [r5, #4]
   15054:	ldr	r2, [r4, #56]	; 0x38
   15058:	ldr	r3, [r4, #16]
   1505c:	ldr	ip, [r4, #60]	; 0x3c
   15060:	ldr	fp, [pc, #220]	; 15144 <abort@plt+0x43e8>
   15064:	orr	r1, r1, #1
   15068:	str	r1, [sp, #28]
   1506c:	str	r1, [sp, #4]
   15070:	str	r2, [sp, #12]
   15074:	str	r3, [sp]
   15078:	mov	r1, r8
   1507c:	mov	r0, r6
   15080:	str	ip, [sp, #16]
   15084:	str	fp, [sp, #8]
   15088:	mov	r3, sl
   1508c:	mov	r2, r9
   15090:	bl	11608 <abort@plt+0x8ac>
   15094:	cmp	r8, r0
   15098:	bhi	150fc <abort@plt+0x43a0>
   1509c:	ldr	r3, [pc, #164]	; 15148 <abort@plt+0x43ec>
   150a0:	add	r8, r0, #1
   150a4:	cmp	r6, r3
   150a8:	str	r8, [r5]
   150ac:	beq	150b8 <abort@plt+0x435c>
   150b0:	mov	r0, r6
   150b4:	bl	16790 <abort@plt+0x5a34>
   150b8:	mov	r0, r8
   150bc:	bl	15ee4 <abort@plt+0x5188>
   150c0:	ldr	lr, [r4, #60]	; 0x3c
   150c4:	ldr	ip, [r4, #16]
   150c8:	mov	r3, sl
   150cc:	mov	r2, r9
   150d0:	mov	r1, r8
   150d4:	str	r0, [r5, #4]
   150d8:	ldr	r5, [r4, #56]	; 0x38
   150dc:	ldr	r4, [sp, #28]
   150e0:	str	fp, [sp, #8]
   150e4:	str	r4, [sp, #4]
   150e8:	str	lr, [sp, #16]
   150ec:	str	r5, [sp, #12]
   150f0:	str	ip, [sp]
   150f4:	mov	r6, r0
   150f8:	bl	11608 <abort@plt+0x8ac>
   150fc:	ldr	r3, [sp, #24]
   15100:	mov	r0, r6
   15104:	str	r3, [r7]
   15108:	add	sp, sp, #44	; 0x2c
   1510c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15110:	mov	r3, #8
   15114:	str	r3, [sp]
   15118:	add	r1, sp, #36	; 0x24
   1511c:	rsb	r2, r2, #1
   15120:	mvn	r3, #-2147483648	; 0x80000000
   15124:	mov	r0, #0
   15128:	bl	16100 <abort@plt+0x53a4>
   1512c:	mov	r5, r0
   15130:	ldm	r6, {r0, r1}
   15134:	str	r5, [r4]
   15138:	stm	r5, {r0, r1}
   1513c:	b	15024 <abort@plt+0x42c8>
   15140:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   15144:	strdeq	r8, [r2], -r0
   15148:	andeq	r8, r2, r0, ror r1
   1514c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15150:	sub	sp, sp, #44	; 0x2c
   15154:	mov	r5, r0
   15158:	mov	sl, r1
   1515c:	bl	10cb4 <__errno_location@plt>
   15160:	ldr	r4, [pc, #396]	; 152f4 <abort@plt+0x4598>
   15164:	cmn	r5, #-2147483647	; 0x80000001
   15168:	ldr	r6, [r4]
   1516c:	mov	r8, r0
   15170:	movne	r0, #0
   15174:	moveq	r0, #1
   15178:	ldr	r3, [r8]
   1517c:	orrs	r0, r0, r5, lsr #31
   15180:	str	r3, [sp, #24]
   15184:	bne	152f0 <abort@plt+0x4594>
   15188:	ldr	r2, [r4, #4]
   1518c:	cmp	r5, r2
   15190:	blt	151f0 <abort@plt+0x4494>
   15194:	add	r7, r4, #8
   15198:	cmp	r6, r7
   1519c:	str	r2, [sp, #36]	; 0x24
   151a0:	beq	152c0 <abort@plt+0x4564>
   151a4:	mov	r3, #8
   151a8:	sub	r2, r5, r2
   151ac:	mov	r0, r6
   151b0:	str	r3, [sp]
   151b4:	add	r2, r2, #1
   151b8:	mvn	r3, #-2147483648	; 0x80000000
   151bc:	add	r1, sp, #36	; 0x24
   151c0:	bl	16100 <abort@plt+0x53a4>
   151c4:	mov	r6, r0
   151c8:	str	r0, [r4]
   151cc:	ldr	r0, [r4, #4]
   151d0:	ldr	r2, [sp, #36]	; 0x24
   151d4:	mov	r1, #0
   151d8:	sub	r2, r2, r0
   151dc:	add	r0, r6, r0, lsl #3
   151e0:	lsl	r2, r2, #3
   151e4:	bl	10ccc <memset@plt>
   151e8:	ldr	r3, [sp, #36]	; 0x24
   151ec:	str	r3, [r4, #4]
   151f0:	ldr	r2, [r4, #56]	; 0x38
   151f4:	add	fp, r6, r5, lsl #3
   151f8:	ldr	r1, [r4, #20]
   151fc:	ldr	r9, [r6, r5, lsl #3]
   15200:	ldr	r7, [fp, #4]
   15204:	ldr	r3, [r4, #16]
   15208:	ldr	ip, [r4, #60]	; 0x3c
   1520c:	str	r2, [sp, #12]
   15210:	ldr	r2, [pc, #224]	; 152f8 <abort@plt+0x459c>
   15214:	orr	r1, r1, #1
   15218:	str	r1, [sp, #28]
   1521c:	str	r1, [sp, #4]
   15220:	str	r2, [sp, #8]
   15224:	str	r3, [sp]
   15228:	mov	r0, r7
   1522c:	mov	r1, r9
   15230:	str	ip, [sp, #16]
   15234:	mvn	r3, #0
   15238:	mov	r2, sl
   1523c:	bl	11608 <abort@plt+0x8ac>
   15240:	cmp	r9, r0
   15244:	bhi	152ac <abort@plt+0x4550>
   15248:	ldr	r3, [pc, #172]	; 152fc <abort@plt+0x45a0>
   1524c:	add	r9, r0, #1
   15250:	cmp	r7, r3
   15254:	str	r9, [r6, r5, lsl #3]
   15258:	beq	15264 <abort@plt+0x4508>
   1525c:	mov	r0, r7
   15260:	bl	16790 <abort@plt+0x5a34>
   15264:	mov	r0, r9
   15268:	bl	15ee4 <abort@plt+0x5188>
   1526c:	ldr	ip, [r4, #60]	; 0x3c
   15270:	ldr	r3, [r4, #16]
   15274:	ldr	lr, [r4, #56]	; 0x38
   15278:	ldr	r4, [pc, #120]	; 152f8 <abort@plt+0x459c>
   1527c:	mov	r2, sl
   15280:	mov	r1, r9
   15284:	str	r0, [fp, #4]
   15288:	str	r4, [sp, #8]
   1528c:	ldr	r4, [sp, #28]
   15290:	str	r3, [sp]
   15294:	str	r4, [sp, #4]
   15298:	str	ip, [sp, #16]
   1529c:	str	lr, [sp, #12]
   152a0:	mvn	r3, #0
   152a4:	mov	r7, r0
   152a8:	bl	11608 <abort@plt+0x8ac>
   152ac:	ldr	r3, [sp, #24]
   152b0:	mov	r0, r7
   152b4:	str	r3, [r8]
   152b8:	add	sp, sp, #44	; 0x2c
   152bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   152c0:	mov	r3, #8
   152c4:	sub	r2, r5, r2
   152c8:	str	r3, [sp]
   152cc:	add	r1, sp, #36	; 0x24
   152d0:	add	r2, r2, #1
   152d4:	mvn	r3, #-2147483648	; 0x80000000
   152d8:	bl	16100 <abort@plt+0x53a4>
   152dc:	mov	r6, r0
   152e0:	ldm	r7, {r0, r1}
   152e4:	str	r6, [r4]
   152e8:	stm	r6, {r0, r1}
   152ec:	b	151cc <abort@plt+0x4470>
   152f0:	bl	10d5c <abort@plt>
   152f4:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   152f8:	strdeq	r8, [r2], -r0
   152fc:	andeq	r8, r2, r0, ror r1
   15300:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15304:	sub	sp, sp, #44	; 0x2c
   15308:	mov	sl, r0
   1530c:	bl	10cb4 <__errno_location@plt>
   15310:	ldr	r4, [pc, #348]	; 15474 <abort@plt+0x4718>
   15314:	ldr	r2, [r4, #4]
   15318:	ldr	r5, [r4]
   1531c:	cmp	r2, #0
   15320:	ldr	r3, [r0]
   15324:	mov	r8, r0
   15328:	str	r3, [sp, #28]
   1532c:	bgt	15388 <abort@plt+0x462c>
   15330:	add	r6, r4, #8
   15334:	cmp	r5, r6
   15338:	str	r2, [sp, #36]	; 0x24
   1533c:	beq	15444 <abort@plt+0x46e8>
   15340:	mov	r3, #8
   15344:	mov	r0, r5
   15348:	str	r3, [sp]
   1534c:	rsb	r2, r2, #1
   15350:	mvn	r3, #-2147483648	; 0x80000000
   15354:	add	r1, sp, #36	; 0x24
   15358:	bl	16100 <abort@plt+0x53a4>
   1535c:	mov	r5, r0
   15360:	str	r0, [r4]
   15364:	ldr	r0, [r4, #4]
   15368:	ldr	r2, [sp, #36]	; 0x24
   1536c:	mov	r1, #0
   15370:	sub	r2, r2, r0
   15374:	add	r0, r5, r0, lsl #3
   15378:	lsl	r2, r2, #3
   1537c:	bl	10ccc <memset@plt>
   15380:	ldr	r3, [sp, #36]	; 0x24
   15384:	str	r3, [r4, #4]
   15388:	ldr	r7, [r4, #20]
   1538c:	ldr	r9, [r5]
   15390:	ldr	r6, [r5, #4]
   15394:	ldr	r2, [r4, #56]	; 0x38
   15398:	ldr	r3, [r4, #16]
   1539c:	ldr	ip, [r4, #60]	; 0x3c
   153a0:	ldr	fp, [pc, #208]	; 15478 <abort@plt+0x471c>
   153a4:	orr	r7, r7, #1
   153a8:	str	r2, [sp, #12]
   153ac:	str	r3, [sp]
   153b0:	str	r7, [sp, #4]
   153b4:	mov	r1, r9
   153b8:	mov	r0, r6
   153bc:	str	ip, [sp, #16]
   153c0:	str	fp, [sp, #8]
   153c4:	mvn	r3, #0
   153c8:	mov	r2, sl
   153cc:	bl	11608 <abort@plt+0x8ac>
   153d0:	cmp	r9, r0
   153d4:	bhi	15430 <abort@plt+0x46d4>
   153d8:	ldr	r3, [pc, #156]	; 1547c <abort@plt+0x4720>
   153dc:	add	r9, r0, #1
   153e0:	cmp	r6, r3
   153e4:	str	r9, [r5]
   153e8:	beq	153f4 <abort@plt+0x4698>
   153ec:	mov	r0, r6
   153f0:	bl	16790 <abort@plt+0x5a34>
   153f4:	mov	r0, r9
   153f8:	bl	15ee4 <abort@plt+0x5188>
   153fc:	ldr	ip, [r4, #60]	; 0x3c
   15400:	ldr	r3, [r4, #16]
   15404:	ldr	lr, [r4, #56]	; 0x38
   15408:	mov	r2, sl
   1540c:	mov	r1, r9
   15410:	str	r0, [r5, #4]
   15414:	str	r3, [sp]
   15418:	stmib	sp, {r7, fp}
   1541c:	str	ip, [sp, #16]
   15420:	str	lr, [sp, #12]
   15424:	mvn	r3, #0
   15428:	mov	r6, r0
   1542c:	bl	11608 <abort@plt+0x8ac>
   15430:	ldr	r3, [sp, #28]
   15434:	mov	r0, r6
   15438:	str	r3, [r8]
   1543c:	add	sp, sp, #44	; 0x2c
   15440:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15444:	mov	r3, #8
   15448:	str	r3, [sp]
   1544c:	add	r1, sp, #36	; 0x24
   15450:	rsb	r2, r2, #1
   15454:	mvn	r3, #-2147483648	; 0x80000000
   15458:	mov	r0, #0
   1545c:	bl	16100 <abort@plt+0x53a4>
   15460:	mov	r5, r0
   15464:	ldm	r6, {r0, r1}
   15468:	str	r5, [r4]
   1546c:	stm	r5, {r0, r1}
   15470:	b	15364 <abort@plt+0x4608>
   15474:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   15478:	strdeq	r8, [r2], -r0
   1547c:	andeq	r8, r2, r0, ror r1
   15480:	push	{r4, r5, r6, lr}
   15484:	sub	sp, sp, #32
   15488:	cmp	r1, #0
   1548c:	mov	r4, r0
   15490:	ldr	r5, [sp, #48]	; 0x30
   15494:	ldr	r6, [sp, #52]	; 0x34
   15498:	beq	157b0 <abort@plt+0x4a54>
   1549c:	stm	sp, {r2, r3}
   154a0:	mov	r3, r1
   154a4:	ldr	r2, [pc, #808]	; 157d4 <abort@plt+0x4a78>
   154a8:	mov	r1, #1
   154ac:	bl	10cf0 <__fprintf_chk@plt>
   154b0:	mov	r2, #5
   154b4:	ldr	r1, [pc, #796]	; 157d8 <abort@plt+0x4a7c>
   154b8:	mov	r0, #0
   154bc:	bl	10bc4 <dcgettext@plt>
   154c0:	ldr	r3, [pc, #788]	; 157dc <abort@plt+0x4a80>
   154c4:	ldr	r2, [pc, #788]	; 157e0 <abort@plt+0x4a84>
   154c8:	str	r3, [sp]
   154cc:	mov	r1, #1
   154d0:	mov	r3, r0
   154d4:	mov	r0, r4
   154d8:	bl	10cf0 <__fprintf_chk@plt>
   154dc:	mov	r1, r4
   154e0:	mov	r0, #10
   154e4:	bl	10bb8 <fputc_unlocked@plt>
   154e8:	mov	r2, #5
   154ec:	ldr	r1, [pc, #752]	; 157e4 <abort@plt+0x4a88>
   154f0:	mov	r0, #0
   154f4:	bl	10bc4 <dcgettext@plt>
   154f8:	mov	r1, #1
   154fc:	ldr	r3, [pc, #740]	; 157e8 <abort@plt+0x4a8c>
   15500:	mov	r2, r0
   15504:	mov	r0, r4
   15508:	bl	10cf0 <__fprintf_chk@plt>
   1550c:	mov	r1, r4
   15510:	mov	r0, #10
   15514:	bl	10bb8 <fputc_unlocked@plt>
   15518:	cmp	r6, #9
   1551c:	ldrls	pc, [pc, r6, lsl #2]
   15520:	b	157c8 <abort@plt+0x4a6c>
   15524:	andeq	r5, r1, r8, lsr #11
   15528:			; <UNDEFINED> instruction: 0x000155b0
   1552c:	ldrdeq	r5, [r1], -ip
   15530:	andeq	r5, r1, r0, lsl r6
   15534:	andeq	r5, r1, ip, asr #12
   15538:	andeq	r5, r1, r8, lsl #13
   1553c:	andeq	r5, r1, r4, asr #13
   15540:	andeq	r5, r1, r8, lsl #14
   15544:	andeq	r5, r1, r8, asr r7
   15548:	andeq	r5, r1, ip, asr #10
   1554c:	ldr	r1, [pc, #664]	; 157ec <abort@plt+0x4a90>
   15550:	mov	r2, #5
   15554:	mov	r0, #0
   15558:	bl	10bc4 <dcgettext@plt>
   1555c:	ldr	ip, [r5, #32]
   15560:	ldr	r1, [r5, #28]
   15564:	ldr	r2, [r5, #24]
   15568:	ldr	r3, [r5]
   1556c:	ldr	r6, [r5, #20]
   15570:	str	ip, [sp, #28]
   15574:	ldr	lr, [r5, #16]
   15578:	str	r1, [sp, #24]
   1557c:	ldr	ip, [r5, #12]
   15580:	str	r2, [sp, #20]
   15584:	ldr	r1, [r5, #8]
   15588:	ldr	r2, [r5, #4]
   1558c:	str	r6, [sp, #16]
   15590:	stmib	sp, {r1, ip, lr}
   15594:	mov	r1, #1
   15598:	str	r2, [sp]
   1559c:	mov	r2, r0
   155a0:	mov	r0, r4
   155a4:	bl	10cf0 <__fprintf_chk@plt>
   155a8:	add	sp, sp, #32
   155ac:	pop	{r4, r5, r6, pc}
   155b0:	mov	r2, #5
   155b4:	ldr	r1, [pc, #564]	; 157f0 <abort@plt+0x4a94>
   155b8:	mov	r0, #0
   155bc:	bl	10bc4 <dcgettext@plt>
   155c0:	ldr	r3, [r5]
   155c4:	mov	r1, #1
   155c8:	mov	r2, r0
   155cc:	mov	r0, r4
   155d0:	add	sp, sp, #32
   155d4:	pop	{r4, r5, r6, lr}
   155d8:	b	10cf0 <__fprintf_chk@plt>
   155dc:	mov	r2, #5
   155e0:	ldr	r1, [pc, #524]	; 157f4 <abort@plt+0x4a98>
   155e4:	mov	r0, #0
   155e8:	bl	10bc4 <dcgettext@plt>
   155ec:	ldr	r2, [r5, #4]
   155f0:	ldr	r3, [r5]
   155f4:	mov	r1, #1
   155f8:	str	r2, [sp, #48]	; 0x30
   155fc:	mov	r2, r0
   15600:	mov	r0, r4
   15604:	add	sp, sp, #32
   15608:	pop	{r4, r5, r6, lr}
   1560c:	b	10cf0 <__fprintf_chk@plt>
   15610:	mov	r2, #5
   15614:	ldr	r1, [pc, #476]	; 157f8 <abort@plt+0x4a9c>
   15618:	mov	r0, #0
   1561c:	bl	10bc4 <dcgettext@plt>
   15620:	ldr	r1, [r5, #8]
   15624:	ldr	r2, [r5, #4]
   15628:	ldr	r3, [r5]
   1562c:	str	r1, [sp, #52]	; 0x34
   15630:	str	r2, [sp, #48]	; 0x30
   15634:	mov	r1, #1
   15638:	mov	r2, r0
   1563c:	mov	r0, r4
   15640:	add	sp, sp, #32
   15644:	pop	{r4, r5, r6, lr}
   15648:	b	10cf0 <__fprintf_chk@plt>
   1564c:	mov	r2, #5
   15650:	ldr	r1, [pc, #420]	; 157fc <abort@plt+0x4aa0>
   15654:	mov	r0, #0
   15658:	bl	10bc4 <dcgettext@plt>
   1565c:	ldr	r1, [r5, #8]
   15660:	ldr	ip, [r5, #12]
   15664:	ldr	r2, [r5, #4]
   15668:	ldr	r3, [r5]
   1566c:	stmib	sp, {r1, ip}
   15670:	str	r2, [sp]
   15674:	mov	r1, #1
   15678:	mov	r2, r0
   1567c:	mov	r0, r4
   15680:	bl	10cf0 <__fprintf_chk@plt>
   15684:	b	155a8 <abort@plt+0x484c>
   15688:	mov	r2, #5
   1568c:	ldr	r1, [pc, #364]	; 15800 <abort@plt+0x4aa4>
   15690:	mov	r0, #0
   15694:	bl	10bc4 <dcgettext@plt>
   15698:	add	r1, r5, #8
   1569c:	ldr	r2, [r5, #4]
   156a0:	ldm	r1, {r1, ip, lr}
   156a4:	ldr	r3, [r5]
   156a8:	str	r2, [sp]
   156ac:	stmib	sp, {r1, ip, lr}
   156b0:	mov	r1, #1
   156b4:	mov	r2, r0
   156b8:	mov	r0, r4
   156bc:	bl	10cf0 <__fprintf_chk@plt>
   156c0:	b	155a8 <abort@plt+0x484c>
   156c4:	mov	r2, #5
   156c8:	ldr	r1, [pc, #308]	; 15804 <abort@plt+0x4aa8>
   156cc:	mov	r0, #0
   156d0:	bl	10bc4 <dcgettext@plt>
   156d4:	add	r1, r5, #8
   156d8:	ldr	r2, [r5, #4]
   156dc:	ldm	r1, {r1, ip, lr}
   156e0:	ldr	r6, [r5, #20]
   156e4:	ldr	r3, [r5]
   156e8:	stmib	sp, {r1, ip, lr}
   156ec:	mov	r1, #1
   156f0:	str	r2, [sp]
   156f4:	str	r6, [sp, #16]
   156f8:	mov	r2, r0
   156fc:	mov	r0, r4
   15700:	bl	10cf0 <__fprintf_chk@plt>
   15704:	b	155a8 <abort@plt+0x484c>
   15708:	mov	r2, #5
   1570c:	ldr	r1, [pc, #244]	; 15808 <abort@plt+0x4aac>
   15710:	mov	r0, #0
   15714:	bl	10bc4 <dcgettext@plt>
   15718:	ldr	r2, [r5, #24]
   1571c:	ldr	r3, [r5]
   15720:	ldr	r6, [r5, #20]
   15724:	ldr	lr, [r5, #16]
   15728:	ldr	ip, [r5, #12]
   1572c:	str	r2, [sp, #20]
   15730:	ldr	r1, [r5, #8]
   15734:	ldr	r2, [r5, #4]
   15738:	str	r6, [sp, #16]
   1573c:	stmib	sp, {r1, ip, lr}
   15740:	mov	r1, #1
   15744:	str	r2, [sp]
   15748:	mov	r2, r0
   1574c:	mov	r0, r4
   15750:	bl	10cf0 <__fprintf_chk@plt>
   15754:	b	155a8 <abort@plt+0x484c>
   15758:	mov	r2, #5
   1575c:	ldr	r1, [pc, #168]	; 1580c <abort@plt+0x4ab0>
   15760:	mov	r0, #0
   15764:	bl	10bc4 <dcgettext@plt>
   15768:	ldr	r1, [r5, #28]
   1576c:	ldr	r2, [r5, #24]
   15770:	ldr	r3, [r5]
   15774:	ldr	r6, [r5, #20]
   15778:	ldr	lr, [r5, #16]
   1577c:	str	r1, [sp, #24]
   15780:	ldr	ip, [r5, #12]
   15784:	str	r2, [sp, #20]
   15788:	ldr	r1, [r5, #8]
   1578c:	ldr	r2, [r5, #4]
   15790:	str	r6, [sp, #16]
   15794:	stmib	sp, {r1, ip, lr}
   15798:	mov	r1, #1
   1579c:	str	r2, [sp]
   157a0:	mov	r2, r0
   157a4:	mov	r0, r4
   157a8:	bl	10cf0 <__fprintf_chk@plt>
   157ac:	b	155a8 <abort@plt+0x484c>
   157b0:	str	r3, [sp]
   157b4:	mov	r1, #1
   157b8:	mov	r3, r2
   157bc:	ldr	r2, [pc, #76]	; 15810 <abort@plt+0x4ab4>
   157c0:	bl	10cf0 <__fprintf_chk@plt>
   157c4:	b	154b0 <abort@plt+0x4754>
   157c8:	mov	r2, #5
   157cc:	ldr	r1, [pc, #64]	; 15814 <abort@plt+0x4ab8>
   157d0:	b	15554 <abort@plt+0x47f8>
   157d4:	strdeq	r7, [r1], -r0
   157d8:	andeq	r7, r1, r4, lsl #8
   157dc:	andeq	r0, r0, r6, ror #15
   157e0:	ldrdeq	r7, [r1], -ip
   157e4:	andeq	r7, r1, r8, lsl #8
   157e8:			; <UNDEFINED> instruction: 0x000174b4
   157ec:	andeq	r7, r1, r4, ror #11
   157f0:	ldrdeq	r7, [r1], -r8
   157f4:	andeq	r7, r1, r8, ror #9
   157f8:	andeq	r7, r1, r0, lsl #10
   157fc:	andeq	r7, r1, ip, lsl r5
   15800:	andeq	r7, r1, ip, lsr r5
   15804:	andeq	r7, r1, r0, ror #10
   15808:	andeq	r7, r1, r8, lsl #11
   1580c:			; <UNDEFINED> instruction: 0x000175b4
   15810:	strdeq	r7, [r1], -ip
   15814:	andeq	r7, r1, r8, lsl r6
   15818:	push	{r4, r5, lr}
   1581c:	sub	sp, sp, #12
   15820:	ldr	r5, [sp, #24]
   15824:	ldr	ip, [r5]
   15828:	cmp	ip, #0
   1582c:	beq	15848 <abort@plt+0x4aec>
   15830:	mov	lr, r5
   15834:	mov	ip, #0
   15838:	ldr	r4, [lr, #4]!
   1583c:	add	ip, ip, #1
   15840:	cmp	r4, #0
   15844:	bne	15838 <abort@plt+0x4adc>
   15848:	stm	sp, {r5, ip}
   1584c:	bl	15480 <abort@plt+0x4724>
   15850:	add	sp, sp, #12
   15854:	pop	{r4, r5, pc}
   15858:	push	{r4, r5, lr}
   1585c:	sub	sp, sp, #76	; 0x4c
   15860:	mov	r5, r0
   15864:	ldr	ip, [sp, #88]	; 0x58
   15868:	ldr	r0, [ip]
   1586c:	cmp	r0, #0
   15870:	str	r0, [sp, #32]
   15874:	beq	15c48 <abort@plt+0x4eec>
   15878:	ldr	r0, [ip, #4]
   1587c:	cmp	r0, #0
   15880:	str	r0, [sp, #36]	; 0x24
   15884:	beq	15c50 <abort@plt+0x4ef4>
   15888:	ldr	r0, [ip, #8]
   1588c:	cmp	r0, #0
   15890:	str	r0, [sp, #40]	; 0x28
   15894:	beq	15c58 <abort@plt+0x4efc>
   15898:	ldr	r0, [ip, #12]
   1589c:	cmp	r0, #0
   158a0:	str	r0, [sp, #44]	; 0x2c
   158a4:	beq	15c60 <abort@plt+0x4f04>
   158a8:	ldr	r0, [ip, #16]
   158ac:	cmp	r0, #0
   158b0:	str	r0, [sp, #48]	; 0x30
   158b4:	beq	15c68 <abort@plt+0x4f0c>
   158b8:	ldr	r0, [ip, #20]
   158bc:	cmp	r0, #0
   158c0:	str	r0, [sp, #52]	; 0x34
   158c4:	beq	15c70 <abort@plt+0x4f14>
   158c8:	ldr	r0, [ip, #24]
   158cc:	cmp	r0, #0
   158d0:	str	r0, [sp, #56]	; 0x38
   158d4:	beq	15c78 <abort@plt+0x4f1c>
   158d8:	ldr	r0, [ip, #28]
   158dc:	cmp	r0, #0
   158e0:	str	r0, [sp, #60]	; 0x3c
   158e4:	beq	15c80 <abort@plt+0x4f24>
   158e8:	ldr	r0, [ip, #32]
   158ec:	cmp	r0, #0
   158f0:	str	r0, [sp, #64]	; 0x40
   158f4:	beq	15c88 <abort@plt+0x4f2c>
   158f8:	ldr	r0, [ip, #36]	; 0x24
   158fc:	cmp	r0, #0
   15900:	movne	r4, #10
   15904:	moveq	r4, #9
   15908:	cmp	r1, #0
   1590c:	beq	15c20 <abort@plt+0x4ec4>
   15910:	stm	sp, {r2, r3}
   15914:	mov	r0, r5
   15918:	mov	r3, r1
   1591c:	ldr	r2, [pc, #876]	; 15c90 <abort@plt+0x4f34>
   15920:	mov	r1, #1
   15924:	bl	10cf0 <__fprintf_chk@plt>
   15928:	mov	r2, #5
   1592c:	ldr	r1, [pc, #864]	; 15c94 <abort@plt+0x4f38>
   15930:	mov	r0, #0
   15934:	bl	10bc4 <dcgettext@plt>
   15938:	ldr	r3, [pc, #856]	; 15c98 <abort@plt+0x4f3c>
   1593c:	ldr	r2, [pc, #856]	; 15c9c <abort@plt+0x4f40>
   15940:	str	r3, [sp]
   15944:	mov	r1, #1
   15948:	mov	r3, r0
   1594c:	mov	r0, r5
   15950:	bl	10cf0 <__fprintf_chk@plt>
   15954:	mov	r1, r5
   15958:	mov	r0, #10
   1595c:	bl	10bb8 <fputc_unlocked@plt>
   15960:	mov	r2, #5
   15964:	ldr	r1, [pc, #820]	; 15ca0 <abort@plt+0x4f44>
   15968:	mov	r0, #0
   1596c:	bl	10bc4 <dcgettext@plt>
   15970:	mov	r1, #1
   15974:	ldr	r3, [pc, #808]	; 15ca4 <abort@plt+0x4f48>
   15978:	mov	r2, r0
   1597c:	mov	r0, r5
   15980:	bl	10cf0 <__fprintf_chk@plt>
   15984:	mov	r1, r5
   15988:	mov	r0, #10
   1598c:	bl	10bb8 <fputc_unlocked@plt>
   15990:	cmp	r4, #9
   15994:	ldrls	pc, [pc, r4, lsl #2]
   15998:	b	15c3c <abort@plt+0x4ee0>
   1599c:	andeq	r5, r1, r0, lsr #20
   159a0:	andeq	r5, r1, r8, lsr #20
   159a4:	andeq	r5, r1, r4, asr sl
   159a8:	andeq	r5, r1, r8, lsl #21
   159ac:	andeq	r5, r1, r0, asr #21
   159b0:	strdeq	r5, [r1], -ip
   159b4:	andeq	r5, r1, r8, lsr fp
   159b8:	andeq	r5, r1, ip, ror fp
   159bc:	andeq	r5, r1, r8, asr #23
   159c0:	andeq	r5, r1, r4, asr #19
   159c4:	ldr	r1, [pc, #732]	; 15ca8 <abort@plt+0x4f4c>
   159c8:	mov	r2, #5
   159cc:	mov	r0, #0
   159d0:	bl	10bc4 <dcgettext@plt>
   159d4:	ldr	ip, [sp, #64]	; 0x40
   159d8:	ldr	r1, [sp, #60]	; 0x3c
   159dc:	ldr	r2, [sp, #56]	; 0x38
   159e0:	ldr	lr, [sp, #48]	; 0x30
   159e4:	str	ip, [sp, #28]
   159e8:	str	r1, [sp, #24]
   159ec:	ldr	ip, [sp, #44]	; 0x2c
   159f0:	ldr	r1, [sp, #40]	; 0x28
   159f4:	ldr	r4, [sp, #52]	; 0x34
   159f8:	str	r2, [sp, #20]
   159fc:	ldr	r2, [sp, #36]	; 0x24
   15a00:	stmib	sp, {r1, ip, lr}
   15a04:	mov	r1, #1
   15a08:	str	r2, [sp]
   15a0c:	ldr	r3, [sp, #32]
   15a10:	str	r4, [sp, #16]
   15a14:	mov	r2, r0
   15a18:	mov	r0, r5
   15a1c:	bl	10cf0 <__fprintf_chk@plt>
   15a20:	add	sp, sp, #76	; 0x4c
   15a24:	pop	{r4, r5, pc}
   15a28:	mov	r2, #5
   15a2c:	ldr	r1, [pc, #632]	; 15cac <abort@plt+0x4f50>
   15a30:	mov	r0, #0
   15a34:	bl	10bc4 <dcgettext@plt>
   15a38:	ldr	r3, [sp, #32]
   15a3c:	mov	r1, #1
   15a40:	mov	r2, r0
   15a44:	mov	r0, r5
   15a48:	add	sp, sp, #76	; 0x4c
   15a4c:	pop	{r4, r5, lr}
   15a50:	b	10cf0 <__fprintf_chk@plt>
   15a54:	mov	r2, #5
   15a58:	ldr	r1, [pc, #592]	; 15cb0 <abort@plt+0x4f54>
   15a5c:	mov	r0, #0
   15a60:	bl	10bc4 <dcgettext@plt>
   15a64:	ldr	r2, [sp, #36]	; 0x24
   15a68:	ldr	r3, [sp, #32]
   15a6c:	str	r2, [sp, #88]	; 0x58
   15a70:	mov	r1, #1
   15a74:	mov	r2, r0
   15a78:	mov	r0, r5
   15a7c:	add	sp, sp, #76	; 0x4c
   15a80:	pop	{r4, r5, lr}
   15a84:	b	10cf0 <__fprintf_chk@plt>
   15a88:	mov	r2, #5
   15a8c:	ldr	r1, [pc, #544]	; 15cb4 <abort@plt+0x4f58>
   15a90:	mov	r0, #0
   15a94:	bl	10bc4 <dcgettext@plt>
   15a98:	ldr	r1, [sp, #40]	; 0x28
   15a9c:	ldr	r2, [sp, #36]	; 0x24
   15aa0:	str	r1, [sp, #4]
   15aa4:	str	r2, [sp]
   15aa8:	ldr	r3, [sp, #32]
   15aac:	mov	r1, #1
   15ab0:	mov	r2, r0
   15ab4:	mov	r0, r5
   15ab8:	bl	10cf0 <__fprintf_chk@plt>
   15abc:	b	15a20 <abort@plt+0x4cc4>
   15ac0:	mov	r2, #5
   15ac4:	ldr	r1, [pc, #492]	; 15cb8 <abort@plt+0x4f5c>
   15ac8:	mov	r0, #0
   15acc:	bl	10bc4 <dcgettext@plt>
   15ad0:	ldr	r1, [sp, #40]	; 0x28
   15ad4:	ldr	ip, [sp, #44]	; 0x2c
   15ad8:	ldr	r2, [sp, #36]	; 0x24
   15adc:	ldr	r3, [sp, #32]
   15ae0:	stmib	sp, {r1, ip}
   15ae4:	str	r2, [sp]
   15ae8:	mov	r1, #1
   15aec:	mov	r2, r0
   15af0:	mov	r0, r5
   15af4:	bl	10cf0 <__fprintf_chk@plt>
   15af8:	b	15a20 <abort@plt+0x4cc4>
   15afc:	mov	r2, #5
   15b00:	ldr	r1, [pc, #436]	; 15cbc <abort@plt+0x4f60>
   15b04:	mov	r0, #0
   15b08:	bl	10bc4 <dcgettext@plt>
   15b0c:	add	r1, sp, #40	; 0x28
   15b10:	ldr	r2, [sp, #36]	; 0x24
   15b14:	ldm	r1, {r1, ip, lr}
   15b18:	ldr	r3, [sp, #32]
   15b1c:	str	r2, [sp]
   15b20:	stmib	sp, {r1, ip, lr}
   15b24:	mov	r1, #1
   15b28:	mov	r2, r0
   15b2c:	mov	r0, r5
   15b30:	bl	10cf0 <__fprintf_chk@plt>
   15b34:	b	15a20 <abort@plt+0x4cc4>
   15b38:	mov	r2, #5
   15b3c:	ldr	r1, [pc, #380]	; 15cc0 <abort@plt+0x4f64>
   15b40:	mov	r0, #0
   15b44:	bl	10bc4 <dcgettext@plt>
   15b48:	add	r1, sp, #40	; 0x28
   15b4c:	ldr	r2, [sp, #36]	; 0x24
   15b50:	ldm	r1, {r1, ip, lr}
   15b54:	ldr	r4, [sp, #52]	; 0x34
   15b58:	str	r2, [sp]
   15b5c:	stmib	sp, {r1, ip, lr}
   15b60:	mov	r1, #1
   15b64:	ldr	r3, [sp, #32]
   15b68:	str	r4, [sp, #16]
   15b6c:	mov	r2, r0
   15b70:	mov	r0, r5
   15b74:	bl	10cf0 <__fprintf_chk@plt>
   15b78:	b	15a20 <abort@plt+0x4cc4>
   15b7c:	mov	r2, #5
   15b80:	ldr	r1, [pc, #316]	; 15cc4 <abort@plt+0x4f68>
   15b84:	mov	r0, #0
   15b88:	bl	10bc4 <dcgettext@plt>
   15b8c:	add	r1, sp, #40	; 0x28
   15b90:	ldr	r2, [sp, #56]	; 0x38
   15b94:	ldm	r1, {r1, ip, lr}
   15b98:	ldr	r4, [sp, #52]	; 0x34
   15b9c:	str	r2, [sp, #20]
   15ba0:	ldr	r2, [sp, #36]	; 0x24
   15ba4:	stmib	sp, {r1, ip, lr}
   15ba8:	mov	r1, #1
   15bac:	str	r2, [sp]
   15bb0:	ldr	r3, [sp, #32]
   15bb4:	str	r4, [sp, #16]
   15bb8:	mov	r2, r0
   15bbc:	mov	r0, r5
   15bc0:	bl	10cf0 <__fprintf_chk@plt>
   15bc4:	b	15a20 <abort@plt+0x4cc4>
   15bc8:	mov	r2, #5
   15bcc:	ldr	r1, [pc, #244]	; 15cc8 <abort@plt+0x4f6c>
   15bd0:	mov	r0, #0
   15bd4:	bl	10bc4 <dcgettext@plt>
   15bd8:	ldr	r1, [sp, #60]	; 0x3c
   15bdc:	ldr	r2, [sp, #56]	; 0x38
   15be0:	ldr	lr, [sp, #48]	; 0x30
   15be4:	ldr	ip, [sp, #44]	; 0x2c
   15be8:	str	r1, [sp, #24]
   15bec:	ldr	r1, [sp, #40]	; 0x28
   15bf0:	ldr	r4, [sp, #52]	; 0x34
   15bf4:	str	r2, [sp, #20]
   15bf8:	ldr	r2, [sp, #36]	; 0x24
   15bfc:	stmib	sp, {r1, ip, lr}
   15c00:	mov	r1, #1
   15c04:	str	r2, [sp]
   15c08:	ldr	r3, [sp, #32]
   15c0c:	str	r4, [sp, #16]
   15c10:	mov	r2, r0
   15c14:	mov	r0, r5
   15c18:	bl	10cf0 <__fprintf_chk@plt>
   15c1c:	b	15a20 <abort@plt+0x4cc4>
   15c20:	str	r3, [sp]
   15c24:	mov	r1, #1
   15c28:	mov	r3, r2
   15c2c:	mov	r0, r5
   15c30:	ldr	r2, [pc, #148]	; 15ccc <abort@plt+0x4f70>
   15c34:	bl	10cf0 <__fprintf_chk@plt>
   15c38:	b	15928 <abort@plt+0x4bcc>
   15c3c:	mov	r2, #5
   15c40:	ldr	r1, [pc, #136]	; 15cd0 <abort@plt+0x4f74>
   15c44:	b	159cc <abort@plt+0x4c70>
   15c48:	mov	r4, r0
   15c4c:	b	15908 <abort@plt+0x4bac>
   15c50:	mov	r4, #1
   15c54:	b	15908 <abort@plt+0x4bac>
   15c58:	mov	r4, #2
   15c5c:	b	15908 <abort@plt+0x4bac>
   15c60:	mov	r4, #3
   15c64:	b	15908 <abort@plt+0x4bac>
   15c68:	mov	r4, #4
   15c6c:	b	15908 <abort@plt+0x4bac>
   15c70:	mov	r4, #5
   15c74:	b	15908 <abort@plt+0x4bac>
   15c78:	mov	r4, #6
   15c7c:	b	15908 <abort@plt+0x4bac>
   15c80:	mov	r4, #7
   15c84:	b	15908 <abort@plt+0x4bac>
   15c88:	mov	r4, #8
   15c8c:	b	15908 <abort@plt+0x4bac>
   15c90:	strdeq	r7, [r1], -r0
   15c94:	andeq	r7, r1, r4, lsl #8
   15c98:	andeq	r0, r0, r6, ror #15
   15c9c:	ldrdeq	r7, [r1], -ip
   15ca0:	andeq	r7, r1, r8, lsl #8
   15ca4:			; <UNDEFINED> instruction: 0x000174b4
   15ca8:	andeq	r7, r1, r4, ror #11
   15cac:	ldrdeq	r7, [r1], -r8
   15cb0:	andeq	r7, r1, r8, ror #9
   15cb4:	andeq	r7, r1, r0, lsl #10
   15cb8:	andeq	r7, r1, ip, lsl r5
   15cbc:	andeq	r7, r1, ip, lsr r5
   15cc0:	andeq	r7, r1, r0, ror #10
   15cc4:	andeq	r7, r1, r8, lsl #11
   15cc8:			; <UNDEFINED> instruction: 0x000175b4
   15ccc:	strdeq	r7, [r1], -ip
   15cd0:	andeq	r7, r1, r8, lsl r6
   15cd4:	push	{r3}		; (str r3, [sp, #-4]!)
   15cd8:	push	{lr}		; (str lr, [sp, #-4]!)
   15cdc:	sub	sp, sp, #56	; 0x38
   15ce0:	add	r3, sp, #64	; 0x40
   15ce4:	ldr	ip, [sp, #64]	; 0x40
   15ce8:	str	r3, [sp, #12]
   15cec:	cmp	ip, #0
   15cf0:	str	ip, [sp, #16]
   15cf4:	beq	15d8c <abort@plt+0x5030>
   15cf8:	ldr	ip, [sp, #68]	; 0x44
   15cfc:	cmp	ip, #0
   15d00:	str	ip, [sp, #20]
   15d04:	beq	15dac <abort@plt+0x5050>
   15d08:	ldr	ip, [sp, #72]	; 0x48
   15d0c:	cmp	ip, #0
   15d10:	str	ip, [sp, #24]
   15d14:	beq	15db4 <abort@plt+0x5058>
   15d18:	ldr	ip, [sp, #76]	; 0x4c
   15d1c:	cmp	ip, #0
   15d20:	str	ip, [sp, #28]
   15d24:	beq	15dbc <abort@plt+0x5060>
   15d28:	ldr	ip, [sp, #80]	; 0x50
   15d2c:	cmp	ip, #0
   15d30:	str	ip, [sp, #32]
   15d34:	beq	15dc4 <abort@plt+0x5068>
   15d38:	ldr	ip, [sp, #84]	; 0x54
   15d3c:	cmp	ip, #0
   15d40:	str	ip, [sp, #36]	; 0x24
   15d44:	beq	15dcc <abort@plt+0x5070>
   15d48:	ldr	ip, [sp, #88]	; 0x58
   15d4c:	cmp	ip, #0
   15d50:	str	ip, [sp, #40]	; 0x28
   15d54:	beq	15dd4 <abort@plt+0x5078>
   15d58:	ldr	ip, [sp, #92]	; 0x5c
   15d5c:	cmp	ip, #0
   15d60:	str	ip, [sp, #44]	; 0x2c
   15d64:	beq	15ddc <abort@plt+0x5080>
   15d68:	ldr	ip, [sp, #96]	; 0x60
   15d6c:	cmp	ip, #0
   15d70:	str	ip, [sp, #48]	; 0x30
   15d74:	beq	15de4 <abort@plt+0x5088>
   15d78:	ldr	ip, [sp, #100]	; 0x64
   15d7c:	cmp	ip, #0
   15d80:	str	ip, [sp, #52]	; 0x34
   15d84:	movne	ip, #10
   15d88:	moveq	ip, #9
   15d8c:	add	r3, sp, #16
   15d90:	stm	sp, {r3, ip}
   15d94:	ldr	r3, [sp, #60]	; 0x3c
   15d98:	bl	15480 <abort@plt+0x4724>
   15d9c:	add	sp, sp, #56	; 0x38
   15da0:	pop	{lr}		; (ldr lr, [sp], #4)
   15da4:	add	sp, sp, #4
   15da8:	bx	lr
   15dac:	mov	ip, #1
   15db0:	b	15d8c <abort@plt+0x5030>
   15db4:	mov	ip, #2
   15db8:	b	15d8c <abort@plt+0x5030>
   15dbc:	mov	ip, #3
   15dc0:	b	15d8c <abort@plt+0x5030>
   15dc4:	mov	ip, #4
   15dc8:	b	15d8c <abort@plt+0x5030>
   15dcc:	mov	ip, #5
   15dd0:	b	15d8c <abort@plt+0x5030>
   15dd4:	mov	ip, #6
   15dd8:	b	15d8c <abort@plt+0x5030>
   15ddc:	mov	ip, #7
   15de0:	b	15d8c <abort@plt+0x5030>
   15de4:	mov	ip, #8
   15de8:	b	15d8c <abort@plt+0x5030>
   15dec:	ldr	r3, [pc, #116]	; 15e68 <abort@plt+0x510c>
   15df0:	push	{r4, lr}
   15df4:	mov	r0, #10
   15df8:	ldr	r1, [r3]
   15dfc:	bl	10bb8 <fputc_unlocked@plt>
   15e00:	mov	r2, #5
   15e04:	ldr	r1, [pc, #96]	; 15e6c <abort@plt+0x5110>
   15e08:	mov	r0, #0
   15e0c:	bl	10bc4 <dcgettext@plt>
   15e10:	ldr	r2, [pc, #88]	; 15e70 <abort@plt+0x5114>
   15e14:	mov	r1, r0
   15e18:	mov	r0, #1
   15e1c:	bl	10cd8 <__printf_chk@plt>
   15e20:	mov	r2, #5
   15e24:	ldr	r1, [pc, #72]	; 15e74 <abort@plt+0x5118>
   15e28:	mov	r0, #0
   15e2c:	bl	10bc4 <dcgettext@plt>
   15e30:	ldr	r3, [pc, #64]	; 15e78 <abort@plt+0x511c>
   15e34:	ldr	r2, [pc, #64]	; 15e7c <abort@plt+0x5120>
   15e38:	mov	r1, r0
   15e3c:	mov	r0, #1
   15e40:	bl	10cd8 <__printf_chk@plt>
   15e44:	mov	r2, #5
   15e48:	ldr	r1, [pc, #48]	; 15e80 <abort@plt+0x5124>
   15e4c:	mov	r0, #0
   15e50:	bl	10bc4 <dcgettext@plt>
   15e54:	ldr	r2, [pc, #40]	; 15e84 <abort@plt+0x5128>
   15e58:	pop	{r4, lr}
   15e5c:	mov	r1, r0
   15e60:	mov	r0, #1
   15e64:	b	10cd8 <__printf_chk@plt>
   15e68:	andeq	r8, r2, ip, lsr #2
   15e6c:	andeq	r7, r1, r4, asr r6
   15e70:	andeq	r7, r1, r8, ror #12
   15e74:	andeq	r7, r1, r0, lsl #13
   15e78:	andeq	r7, r1, r8, lsl #2
   15e7c:	andeq	r7, r1, r0, lsr r1
   15e80:	muleq	r1, r4, r6
   15e84:			; <UNDEFINED> instruction: 0x000176bc
   15e88:	push	{r4, r5, r6, lr}
   15e8c:	mov	r6, r0
   15e90:	mov	r5, r1
   15e94:	mov	r4, r2
   15e98:	bl	16910 <abort@plt+0x5bb4>
   15e9c:	cmp	r0, #0
   15ea0:	popne	{r4, r5, r6, pc}
   15ea4:	cmp	r6, #0
   15ea8:	beq	15eb8 <abort@plt+0x515c>
   15eac:	cmp	r5, #0
   15eb0:	cmpne	r4, #0
   15eb4:	popeq	{r4, r5, r6, pc}
   15eb8:	bl	16504 <abort@plt+0x57a8>
   15ebc:	push	{r4, lr}
   15ec0:	bl	1658c <abort@plt+0x5830>
   15ec4:	cmp	r0, #0
   15ec8:	popne	{r4, pc}
   15ecc:	bl	16504 <abort@plt+0x57a8>
   15ed0:	push	{r4, lr}
   15ed4:	bl	1658c <abort@plt+0x5830>
   15ed8:	cmp	r0, #0
   15edc:	popne	{r4, pc}
   15ee0:	bl	16504 <abort@plt+0x57a8>
   15ee4:	push	{r4, lr}
   15ee8:	bl	1658c <abort@plt+0x5830>
   15eec:	cmp	r0, #0
   15ef0:	popne	{r4, pc}
   15ef4:	bl	16504 <abort@plt+0x57a8>
   15ef8:	push	{r4, r5, r6, lr}
   15efc:	mov	r5, r0
   15f00:	mov	r4, r1
   15f04:	bl	165b8 <abort@plt+0x585c>
   15f08:	cmp	r0, #0
   15f0c:	popne	{r4, r5, r6, pc}
   15f10:	adds	r4, r4, #0
   15f14:	movne	r4, #1
   15f18:	cmp	r5, #0
   15f1c:	orreq	r4, r4, #1
   15f20:	cmp	r4, #0
   15f24:	popeq	{r4, r5, r6, pc}
   15f28:	bl	16504 <abort@plt+0x57a8>
   15f2c:	push	{r4, lr}
   15f30:	cmp	r1, #0
   15f34:	orreq	r1, r1, #1
   15f38:	bl	165b8 <abort@plt+0x585c>
   15f3c:	cmp	r0, #0
   15f40:	popne	{r4, pc}
   15f44:	bl	16504 <abort@plt+0x57a8>
   15f48:	push	{r4, r5, r6, lr}
   15f4c:	mov	r6, r0
   15f50:	mov	r5, r1
   15f54:	mov	r4, r2
   15f58:	bl	16910 <abort@plt+0x5bb4>
   15f5c:	cmp	r0, #0
   15f60:	popne	{r4, r5, r6, pc}
   15f64:	cmp	r6, #0
   15f68:	beq	15f78 <abort@plt+0x521c>
   15f6c:	cmp	r5, #0
   15f70:	cmpne	r4, #0
   15f74:	popeq	{r4, r5, r6, pc}
   15f78:	bl	16504 <abort@plt+0x57a8>
   15f7c:	cmp	r2, #0
   15f80:	cmpne	r1, #0
   15f84:	moveq	r2, #1
   15f88:	moveq	r1, r2
   15f8c:	push	{r4, lr}
   15f90:	bl	16910 <abort@plt+0x5bb4>
   15f94:	cmp	r0, #0
   15f98:	popne	{r4, pc}
   15f9c:	bl	16504 <abort@plt+0x57a8>
   15fa0:	push	{r4, lr}
   15fa4:	mov	r2, r1
   15fa8:	mov	r1, r0
   15fac:	mov	r0, #0
   15fb0:	bl	16910 <abort@plt+0x5bb4>
   15fb4:	cmp	r0, #0
   15fb8:	popne	{r4, pc}
   15fbc:	bl	16504 <abort@plt+0x57a8>
   15fc0:	cmp	r1, #0
   15fc4:	cmpne	r0, #0
   15fc8:	moveq	r2, #1
   15fcc:	movne	r2, r1
   15fd0:	moveq	r1, r2
   15fd4:	movne	r1, r0
   15fd8:	push	{r4, lr}
   15fdc:	mov	r0, #0
   15fe0:	bl	16910 <abort@plt+0x5bb4>
   15fe4:	cmp	r0, #0
   15fe8:	popne	{r4, pc}
   15fec:	bl	16504 <abort@plt+0x57a8>
   15ff0:	cmp	r0, #0
   15ff4:	push	{r4, r5, r6, lr}
   15ff8:	mov	r5, r1
   15ffc:	ldr	r4, [r1]
   16000:	beq	1603c <abort@plt+0x52e0>
   16004:	lsr	r2, r4, #1
   16008:	add	r3, r2, #1
   1600c:	mvn	r3, r3
   16010:	cmp	r4, r3
   16014:	bhi	16058 <abort@plt+0x52fc>
   16018:	add	r4, r4, #1
   1601c:	add	r4, r4, r2
   16020:	mov	r1, r4
   16024:	mov	r2, #1
   16028:	bl	16910 <abort@plt+0x5bb4>
   1602c:	cmp	r0, #0
   16030:	beq	1605c <abort@plt+0x5300>
   16034:	str	r4, [r5]
   16038:	pop	{r4, r5, r6, pc}
   1603c:	cmp	r4, #0
   16040:	moveq	r4, #64	; 0x40
   16044:	mov	r1, r4
   16048:	mov	r2, #1
   1604c:	bl	16910 <abort@plt+0x5bb4>
   16050:	cmp	r0, #0
   16054:	bne	16034 <abort@plt+0x52d8>
   16058:	bl	16504 <abort@plt+0x57a8>
   1605c:	cmp	r4, #0
   16060:	bne	16058 <abort@plt+0x52fc>
   16064:	str	r4, [r5]
   16068:	pop	{r4, r5, r6, pc}
   1606c:	cmp	r0, #0
   16070:	push	{r4, r5, r6, lr}
   16074:	mov	r5, r1
   16078:	ldr	r4, [r1]
   1607c:	mov	r6, r2
   16080:	beq	160c4 <abort@plt+0x5368>
   16084:	lsr	r1, r4, #1
   16088:	add	r3, r1, #1
   1608c:	mvn	r3, r3
   16090:	cmp	r4, r3
   16094:	bhi	160fc <abort@plt+0x53a0>
   16098:	add	r4, r4, #1
   1609c:	add	r4, r4, r1
   160a0:	mov	r1, r4
   160a4:	bl	16910 <abort@plt+0x5bb4>
   160a8:	cmp	r0, #0
   160ac:	bne	160bc <abort@plt+0x5360>
   160b0:	cmp	r4, #0
   160b4:	cmpne	r6, #0
   160b8:	bne	160fc <abort@plt+0x53a0>
   160bc:	str	r4, [r5]
   160c0:	pop	{r4, r5, r6, pc}
   160c4:	cmp	r4, #0
   160c8:	bne	160e4 <abort@plt+0x5388>
   160cc:	mov	r1, r2
   160d0:	mov	r0, #64	; 0x40
   160d4:	bl	16a50 <abort@plt+0x5cf4>
   160d8:	cmp	r0, #0
   160dc:	movne	r4, r0
   160e0:	addeq	r4, r0, #1
   160e4:	mov	r2, r6
   160e8:	mov	r1, r4
   160ec:	mov	r0, #0
   160f0:	bl	16910 <abort@plt+0x5bb4>
   160f4:	cmp	r0, #0
   160f8:	bne	160bc <abort@plt+0x5360>
   160fc:	bl	16504 <abort@plt+0x57a8>
   16100:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16104:	sub	sp, sp, #12
   16108:	ldr	r6, [r1]
   1610c:	mov	r8, r1
   16110:	mov	r9, r0
   16114:	asrs	r4, r6, #1
   16118:	mov	sl, r2
   1611c:	mov	fp, r3
   16120:	ldr	r7, [sp, #48]	; 0x30
   16124:	bmi	162a0 <abort@plt+0x5544>
   16128:	mvn	r1, #-2147483648	; 0x80000000
   1612c:	sub	r1, r1, r4
   16130:	cmp	r6, r1
   16134:	movle	r1, #0
   16138:	movgt	r1, #1
   1613c:	mvn	r3, fp
   16140:	cmp	r1, #0
   16144:	addeq	r4, r4, r6
   16148:	mvnne	r4, #-2147483648	; 0x80000000
   1614c:	lsr	r3, r3, #31
   16150:	cmp	fp, r4
   16154:	movge	r2, #0
   16158:	andlt	r2, r3, #1
   1615c:	cmp	r2, #0
   16160:	beq	16250 <abort@plt+0x54f4>
   16164:	cmp	r7, #0
   16168:	blt	16338 <abort@plt+0x55dc>
   1616c:	bne	16330 <abort@plt+0x55d4>
   16170:	mov	r5, #64	; 0x40
   16174:	mov	r1, r7
   16178:	mov	r0, r5
   1617c:	str	r3, [sp, #4]
   16180:	bl	16c5c <abort@plt+0x5f00>
   16184:	mov	r1, r7
   16188:	mov	r4, r0
   1618c:	mov	r0, r5
   16190:	bl	16e7c <abort@plt+0x6120>
   16194:	ldr	r3, [sp, #4]
   16198:	sub	r5, r5, r1
   1619c:	cmp	r9, #0
   161a0:	sub	r2, r4, r6
   161a4:	streq	r9, [r8]
   161a8:	cmp	r2, sl
   161ac:	bge	16230 <abort@plt+0x54d4>
   161b0:	cmp	sl, #0
   161b4:	blt	162d0 <abort@plt+0x5574>
   161b8:	cmp	r6, #0
   161bc:	blt	161dc <abort@plt+0x5480>
   161c0:	mvn	r2, #-2147483648	; 0x80000000
   161c4:	sub	r2, r2, sl
   161c8:	cmp	r6, r2
   161cc:	movle	r2, #0
   161d0:	movgt	r2, #1
   161d4:	cmp	r2, #0
   161d8:	bne	162cc <abort@plt+0x5570>
   161dc:	add	r6, r6, sl
   161e0:	cmp	fp, r6
   161e4:	movge	r3, #0
   161e8:	andlt	r3, r3, #1
   161ec:	cmp	r3, #0
   161f0:	mov	r4, r6
   161f4:	bne	162cc <abort@plt+0x5570>
   161f8:	cmp	r7, #0
   161fc:	blt	162e4 <abort@plt+0x5588>
   16200:	beq	1622c <abort@plt+0x54d0>
   16204:	cmp	r6, #0
   16208:	blt	16388 <abort@plt+0x562c>
   1620c:	mov	r1, r7
   16210:	mvn	r0, #-2147483648	; 0x80000000
   16214:	bl	16c5c <abort@plt+0x5f00>
   16218:	cmp	r6, r0
   1621c:	movle	r0, #0
   16220:	movgt	r0, #1
   16224:	cmp	r0, #0
   16228:	bne	162cc <abort@plt+0x5570>
   1622c:	mul	r5, r6, r7
   16230:	mov	r1, r5
   16234:	mov	r0, r9
   16238:	bl	165b8 <abort@plt+0x585c>
   1623c:	cmp	r0, #0
   16240:	beq	162b4 <abort@plt+0x5558>
   16244:	str	r4, [r8]
   16248:	add	sp, sp, #12
   1624c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16250:	cmp	r7, #0
   16254:	blt	16310 <abort@plt+0x55b4>
   16258:	beq	16170 <abort@plt+0x5414>
   1625c:	cmp	r4, #0
   16260:	blt	16340 <abort@plt+0x55e4>
   16264:	mov	r1, r7
   16268:	mvn	r0, #-2147483648	; 0x80000000
   1626c:	str	r3, [sp, #4]
   16270:	bl	16c5c <abort@plt+0x5f00>
   16274:	ldr	r3, [sp, #4]
   16278:	cmp	r0, r4
   1627c:	movge	r0, #0
   16280:	movlt	r0, #1
   16284:	cmp	r0, #0
   16288:	mvnne	r5, #-2147483648	; 0x80000000
   1628c:	bne	16174 <abort@plt+0x5418>
   16290:	mul	r5, r7, r4
   16294:	cmp	r5, #63	; 0x3f
   16298:	bgt	1619c <abort@plt+0x5440>
   1629c:	b	16170 <abort@plt+0x5414>
   162a0:	rsb	r1, r4, #-2147483648	; 0x80000000
   162a4:	cmp	r6, r1
   162a8:	movge	r1, #0
   162ac:	movlt	r1, #1
   162b0:	b	1613c <abort@plt+0x53e0>
   162b4:	adds	r5, r5, #0
   162b8:	movne	r5, #1
   162bc:	cmp	r9, #0
   162c0:	orreq	r5, r5, #1
   162c4:	cmp	r5, #0
   162c8:	beq	16244 <abort@plt+0x54e8>
   162cc:	bl	16504 <abort@plt+0x57a8>
   162d0:	rsb	r2, sl, #-2147483648	; 0x80000000
   162d4:	cmp	r6, r2
   162d8:	movge	r2, #0
   162dc:	movlt	r2, #1
   162e0:	b	161d4 <abort@plt+0x5478>
   162e4:	cmp	r6, #0
   162e8:	blt	1636c <abort@plt+0x5610>
   162ec:	cmn	r7, #1
   162f0:	beq	1622c <abort@plt+0x54d0>
   162f4:	mov	r1, r7
   162f8:	mov	r0, #-2147483648	; 0x80000000
   162fc:	bl	16c5c <abort@plt+0x5f00>
   16300:	cmp	r6, r0
   16304:	movle	r0, #0
   16308:	movgt	r0, #1
   1630c:	b	16224 <abort@plt+0x54c8>
   16310:	cmp	r4, #0
   16314:	blt	163ac <abort@plt+0x5650>
   16318:	cmn	r7, #1
   1631c:	beq	16290 <abort@plt+0x5534>
   16320:	str	r3, [sp, #4]
   16324:	mov	r1, r7
   16328:	mov	r0, #-2147483648	; 0x80000000
   1632c:	b	16270 <abort@plt+0x5514>
   16330:	mov	r4, fp
   16334:	b	16264 <abort@plt+0x5508>
   16338:	mov	r4, fp
   1633c:	b	16318 <abort@plt+0x55bc>
   16340:	cmn	r4, #1
   16344:	beq	16290 <abort@plt+0x5534>
   16348:	mov	r1, r4
   1634c:	mov	r0, #-2147483648	; 0x80000000
   16350:	str	r3, [sp, #4]
   16354:	bl	16c5c <abort@plt+0x5f00>
   16358:	ldr	r3, [sp, #4]
   1635c:	cmp	r7, r0
   16360:	movle	r0, #0
   16364:	movgt	r0, #1
   16368:	b	16284 <abort@plt+0x5528>
   1636c:	mov	r1, r7
   16370:	mvn	r0, #-2147483648	; 0x80000000
   16374:	bl	16c5c <abort@plt+0x5f00>
   16378:	cmp	r6, r0
   1637c:	movge	r0, #0
   16380:	movlt	r0, #1
   16384:	b	16224 <abort@plt+0x54c8>
   16388:	cmn	r6, #1
   1638c:	beq	1622c <abort@plt+0x54d0>
   16390:	mov	r1, r6
   16394:	mov	r0, #-2147483648	; 0x80000000
   16398:	bl	16c5c <abort@plt+0x5f00>
   1639c:	cmp	r7, r0
   163a0:	movle	r0, #0
   163a4:	movgt	r0, #1
   163a8:	b	16224 <abort@plt+0x54c8>
   163ac:	mov	r1, r7
   163b0:	mvn	r0, #-2147483648	; 0x80000000
   163b4:	str	r3, [sp, #4]
   163b8:	bl	16c5c <abort@plt+0x5f00>
   163bc:	ldr	r3, [sp, #4]
   163c0:	cmp	r0, r4
   163c4:	movle	r0, #0
   163c8:	movgt	r0, #1
   163cc:	b	16284 <abort@plt+0x5528>
   163d0:	push	{r4, lr}
   163d4:	mov	r1, #1
   163d8:	bl	16544 <abort@plt+0x57e8>
   163dc:	cmp	r0, #0
   163e0:	popne	{r4, pc}
   163e4:	bl	16504 <abort@plt+0x57a8>
   163e8:	push	{r4, lr}
   163ec:	mov	r1, #1
   163f0:	bl	16544 <abort@plt+0x57e8>
   163f4:	cmp	r0, #0
   163f8:	popne	{r4, pc}
   163fc:	bl	16504 <abort@plt+0x57a8>
   16400:	push	{r4, lr}
   16404:	bl	16544 <abort@plt+0x57e8>
   16408:	cmp	r0, #0
   1640c:	popne	{r4, pc}
   16410:	bl	16504 <abort@plt+0x57a8>
   16414:	push	{r4, lr}
   16418:	bl	16544 <abort@plt+0x57e8>
   1641c:	cmp	r0, #0
   16420:	popne	{r4, pc}
   16424:	bl	16504 <abort@plt+0x57a8>
   16428:	push	{r4, r5, r6, lr}
   1642c:	mov	r6, r0
   16430:	mov	r0, r1
   16434:	mov	r4, r1
   16438:	bl	1658c <abort@plt+0x5830>
   1643c:	subs	r5, r0, #0
   16440:	beq	16458 <abort@plt+0x56fc>
   16444:	mov	r2, r4
   16448:	mov	r1, r6
   1644c:	bl	10b94 <memcpy@plt>
   16450:	mov	r0, r5
   16454:	pop	{r4, r5, r6, pc}
   16458:	bl	16504 <abort@plt+0x57a8>
   1645c:	push	{r4, r5, r6, lr}
   16460:	mov	r6, r0
   16464:	mov	r0, r1
   16468:	mov	r4, r1
   1646c:	bl	1658c <abort@plt+0x5830>
   16470:	subs	r5, r0, #0
   16474:	beq	1648c <abort@plt+0x5730>
   16478:	mov	r2, r4
   1647c:	mov	r1, r6
   16480:	bl	10b94 <memcpy@plt>
   16484:	mov	r0, r5
   16488:	pop	{r4, r5, r6, pc}
   1648c:	bl	16504 <abort@plt+0x57a8>
   16490:	push	{r4, r5, r6, lr}
   16494:	mov	r6, r0
   16498:	add	r0, r1, #1
   1649c:	mov	r4, r1
   164a0:	bl	1658c <abort@plt+0x5830>
   164a4:	subs	r5, r0, #0
   164a8:	beq	164c8 <abort@plt+0x576c>
   164ac:	mov	r3, #0
   164b0:	mov	r1, r6
   164b4:	strb	r3, [r5, r4]
   164b8:	mov	r2, r4
   164bc:	bl	10b94 <memcpy@plt>
   164c0:	mov	r0, r5
   164c4:	pop	{r4, r5, r6, pc}
   164c8:	bl	16504 <abort@plt+0x57a8>
   164cc:	push	{r4, r5, r6, lr}
   164d0:	mov	r6, r0
   164d4:	bl	10ca8 <strlen@plt>
   164d8:	add	r4, r0, #1
   164dc:	mov	r0, r4
   164e0:	bl	1658c <abort@plt+0x5830>
   164e4:	subs	r5, r0, #0
   164e8:	beq	16500 <abort@plt+0x57a4>
   164ec:	mov	r2, r4
   164f0:	mov	r1, r6
   164f4:	bl	10b94 <memcpy@plt>
   164f8:	mov	r0, r5
   164fc:	pop	{r4, r5, r6, pc}
   16500:	bl	16504 <abort@plt+0x57a8>
   16504:	ldr	r3, [pc, #44]	; 16538 <abort@plt+0x57dc>
   16508:	push	{r4, lr}
   1650c:	mov	r2, #5
   16510:	ldr	r1, [pc, #36]	; 1653c <abort@plt+0x57e0>
   16514:	mov	r0, #0
   16518:	ldr	r4, [r3]
   1651c:	bl	10bc4 <dcgettext@plt>
   16520:	ldr	r2, [pc, #24]	; 16540 <abort@plt+0x57e4>
   16524:	mov	r1, #0
   16528:	mov	r3, r0
   1652c:	mov	r0, r4
   16530:	bl	10c30 <error@plt>
   16534:	bl	10d5c <abort@plt>
   16538:	ldrdeq	r8, [r2], -r4
   1653c:	andeq	r7, r1, ip, lsl #14
   16540:	ldrdeq	r7, [r1], -r0
   16544:	cmp	r1, #0
   16548:	cmpne	r0, #0
   1654c:	moveq	r1, #1
   16550:	moveq	r0, r1
   16554:	umull	r2, r3, r0, r1
   16558:	adds	r3, r3, #0
   1655c:	movne	r3, #1
   16560:	cmp	r2, #0
   16564:	blt	16574 <abort@plt+0x5818>
   16568:	cmp	r3, #0
   1656c:	bne	16574 <abort@plt+0x5818>
   16570:	b	10b40 <calloc@plt>
   16574:	push	{r4, lr}
   16578:	bl	10cb4 <__errno_location@plt>
   1657c:	mov	r3, #12
   16580:	str	r3, [r0]
   16584:	mov	r0, #0
   16588:	pop	{r4, pc}
   1658c:	cmp	r0, #0
   16590:	moveq	r0, #1
   16594:	cmp	r0, #0
   16598:	blt	165a0 <abort@plt+0x5844>
   1659c:	b	10c48 <malloc@plt>
   165a0:	push	{r4, lr}
   165a4:	bl	10cb4 <__errno_location@plt>
   165a8:	mov	r3, #12
   165ac:	str	r3, [r0]
   165b0:	mov	r0, #0
   165b4:	pop	{r4, pc}
   165b8:	cmp	r0, #0
   165bc:	beq	165e0 <abort@plt+0x5884>
   165c0:	cmp	r1, #0
   165c4:	push	{lr}		; (str lr, [sp, #-4]!)
   165c8:	sub	sp, sp, #12
   165cc:	beq	165e8 <abort@plt+0x588c>
   165d0:	blt	16600 <abort@plt+0x58a4>
   165d4:	add	sp, sp, #12
   165d8:	pop	{lr}		; (ldr lr, [sp], #4)
   165dc:	b	10bd0 <realloc@plt>
   165e0:	mov	r0, r1
   165e4:	b	1658c <abort@plt+0x5830>
   165e8:	str	r1, [sp, #4]
   165ec:	bl	16790 <abort@plt+0x5a34>
   165f0:	ldr	r3, [sp, #4]
   165f4:	mov	r0, r3
   165f8:	add	sp, sp, #12
   165fc:	pop	{pc}		; (ldr pc, [sp], #4)
   16600:	bl	10cb4 <__errno_location@plt>
   16604:	mov	r2, #12
   16608:	mov	r3, #0
   1660c:	str	r2, [r0]
   16610:	b	165f4 <abort@plt+0x5898>
   16614:	push	{r4, r5, r6, lr}
   16618:	mov	r4, r0
   1661c:	bl	10c18 <__fpending@plt>
   16620:	ldr	r5, [r4]
   16624:	and	r5, r5, #32
   16628:	mov	r6, r0
   1662c:	mov	r0, r4
   16630:	bl	16690 <abort@plt+0x5934>
   16634:	cmp	r5, #0
   16638:	mov	r4, r0
   1663c:	bne	1665c <abort@plt+0x5900>
   16640:	cmp	r0, #0
   16644:	beq	16654 <abort@plt+0x58f8>
   16648:	cmp	r6, #0
   1664c:	beq	16678 <abort@plt+0x591c>
   16650:	mvn	r4, #0
   16654:	mov	r0, r4
   16658:	pop	{r4, r5, r6, pc}
   1665c:	cmp	r0, #0
   16660:	bne	16650 <abort@plt+0x58f4>
   16664:	bl	10cb4 <__errno_location@plt>
   16668:	str	r4, [r0]
   1666c:	mvn	r4, #0
   16670:	mov	r0, r4
   16674:	pop	{r4, r5, r6, pc}
   16678:	bl	10cb4 <__errno_location@plt>
   1667c:	ldr	r4, [r0]
   16680:	subs	r4, r4, #9
   16684:	mvnne	r4, #0
   16688:	mov	r0, r4
   1668c:	pop	{r4, r5, r6, pc}
   16690:	push	{r4, r5, lr}
   16694:	sub	sp, sp, #12
   16698:	mov	r4, r0
   1669c:	bl	10ce4 <fileno@plt>
   166a0:	cmp	r0, #0
   166a4:	mov	r0, r4
   166a8:	blt	16724 <abort@plt+0x59c8>
   166ac:	bl	10c60 <__freading@plt>
   166b0:	cmp	r0, #0
   166b4:	bne	166f0 <abort@plt+0x5994>
   166b8:	mov	r0, r4
   166bc:	bl	16730 <abort@plt+0x59d4>
   166c0:	cmp	r0, #0
   166c4:	beq	16720 <abort@plt+0x59c4>
   166c8:	bl	10cb4 <__errno_location@plt>
   166cc:	mov	r5, r0
   166d0:	mov	r0, r4
   166d4:	ldr	r4, [r5]
   166d8:	bl	10cfc <fclose@plt>
   166dc:	cmp	r4, #0
   166e0:	mvnne	r0, #0
   166e4:	strne	r4, [r5]
   166e8:	add	sp, sp, #12
   166ec:	pop	{r4, r5, pc}
   166f0:	mov	r0, r4
   166f4:	bl	10ce4 <fileno@plt>
   166f8:	mov	r3, #1
   166fc:	str	r3, [sp]
   16700:	mov	r2, #0
   16704:	mov	r3, #0
   16708:	bl	10c00 <lseek64@plt>
   1670c:	mvn	r3, #0
   16710:	mvn	r2, #0
   16714:	cmp	r1, r3
   16718:	cmpeq	r0, r2
   1671c:	bne	166b8 <abort@plt+0x595c>
   16720:	mov	r0, r4
   16724:	add	sp, sp, #12
   16728:	pop	{r4, r5, lr}
   1672c:	b	10cfc <fclose@plt>
   16730:	push	{r4, lr}
   16734:	subs	r4, r0, #0
   16738:	sub	sp, sp, #8
   1673c:	beq	16758 <abort@plt+0x59fc>
   16740:	bl	10c60 <__freading@plt>
   16744:	cmp	r0, #0
   16748:	beq	16758 <abort@plt+0x59fc>
   1674c:	ldr	r3, [r4]
   16750:	tst	r3, #256	; 0x100
   16754:	bne	16768 <abort@plt+0x5a0c>
   16758:	mov	r0, r4
   1675c:	add	sp, sp, #8
   16760:	pop	{r4, lr}
   16764:	b	10b70 <fflush@plt>
   16768:	mov	r3, #1
   1676c:	str	r3, [sp]
   16770:	mov	r2, #0
   16774:	mov	r3, #0
   16778:	mov	r0, r4
   1677c:	bl	167e8 <abort@plt+0x5a8c>
   16780:	mov	r0, r4
   16784:	add	sp, sp, #8
   16788:	pop	{r4, lr}
   1678c:	b	10b70 <fflush@plt>
   16790:	push	{r4, r5, lr}
   16794:	sub	sp, sp, #12
   16798:	mov	r5, r0
   1679c:	bl	10cb4 <__errno_location@plt>
   167a0:	mov	r2, #0
   167a4:	mov	r4, r0
   167a8:	ldr	r3, [r0]
   167ac:	str	r2, [r4]
   167b0:	mov	r0, r5
   167b4:	str	r3, [sp]
   167b8:	str	r3, [sp, #4]
   167bc:	bl	10b7c <free@plt>
   167c0:	ldr	r3, [r4]
   167c4:	add	r2, sp, #8
   167c8:	cmp	r3, #0
   167cc:	moveq	r3, #4
   167d0:	movne	r3, #0
   167d4:	add	r3, r2, r3
   167d8:	ldr	r3, [r3, #-8]
   167dc:	str	r3, [r4]
   167e0:	add	sp, sp, #12
   167e4:	pop	{r4, r5, pc}
   167e8:	push	{r4, r5, r6, r7, r8, lr}
   167ec:	sub	sp, sp, #8
   167f0:	ldmib	r0, {ip, lr}
   167f4:	mov	r4, r0
   167f8:	ldr	r5, [sp, #32]
   167fc:	cmp	lr, ip
   16800:	beq	16818 <abort@plt+0x5abc>
   16804:	str	r5, [sp, #32]
   16808:	mov	r0, r4
   1680c:	add	sp, sp, #8
   16810:	pop	{r4, r5, r6, r7, r8, lr}
   16814:	b	10d08 <fseeko64@plt>
   16818:	ldr	lr, [r0, #20]
   1681c:	ldr	ip, [r0, #16]
   16820:	cmp	lr, ip
   16824:	bne	16804 <abort@plt+0x5aa8>
   16828:	ldr	r8, [r0, #36]	; 0x24
   1682c:	cmp	r8, #0
   16830:	bne	16804 <abort@plt+0x5aa8>
   16834:	mov	r6, r2
   16838:	mov	r7, r3
   1683c:	bl	10ce4 <fileno@plt>
   16840:	mov	r2, r6
   16844:	mov	r3, r7
   16848:	str	r5, [sp]
   1684c:	bl	10c00 <lseek64@plt>
   16850:	mvn	r3, #0
   16854:	mvn	r2, #0
   16858:	cmp	r1, r3
   1685c:	cmpeq	r0, r2
   16860:	beq	16880 <abort@plt+0x5b24>
   16864:	ldr	r3, [r4]
   16868:	strd	r0, [r4, #80]	; 0x50
   1686c:	mov	r0, r8
   16870:	bic	r3, r3, #16
   16874:	str	r3, [r4]
   16878:	add	sp, sp, #8
   1687c:	pop	{r4, r5, r6, r7, r8, pc}
   16880:	mvn	r0, #0
   16884:	b	16878 <abort@plt+0x5b1c>
   16888:	push	{r4, lr}
   1688c:	mov	r0, #14
   16890:	bl	10d2c <nl_langinfo@plt>
   16894:	cmp	r0, #0
   16898:	beq	168b0 <abort@plt+0x5b54>
   1689c:	ldrb	r2, [r0]
   168a0:	ldr	r3, [pc, #16]	; 168b8 <abort@plt+0x5b5c>
   168a4:	cmp	r2, #0
   168a8:	moveq	r0, r3
   168ac:	pop	{r4, pc}
   168b0:	ldr	r0, [pc]	; 168b8 <abort@plt+0x5b5c>
   168b4:	pop	{r4, pc}
   168b8:	andeq	r7, r1, r0, lsr #14
   168bc:	push	{r4, r5, r6, r7, lr}
   168c0:	subs	r6, r0, #0
   168c4:	sub	sp, sp, #12
   168c8:	addeq	r6, sp, #4
   168cc:	mov	r0, r6
   168d0:	mov	r5, r2
   168d4:	mov	r7, r1
   168d8:	bl	10c24 <mbrtowc@plt>
   168dc:	cmp	r5, #0
   168e0:	cmnne	r0, #3
   168e4:	mov	r4, r0
   168e8:	bls	16904 <abort@plt+0x5ba8>
   168ec:	mov	r0, #0
   168f0:	bl	1695c <abort@plt+0x5c00>
   168f4:	cmp	r0, #0
   168f8:	moveq	r4, #1
   168fc:	ldrbeq	r3, [r7]
   16900:	streq	r3, [r6]
   16904:	mov	r0, r4
   16908:	add	sp, sp, #12
   1690c:	pop	{r4, r5, r6, r7, pc}
   16910:	push	{r4, r5, r6, lr}
   16914:	subs	r4, r2, #0
   16918:	mov	r6, r0
   1691c:	mov	r5, r1
   16920:	beq	1694c <abort@plt+0x5bf0>
   16924:	mov	r1, r4
   16928:	mvn	r0, #0
   1692c:	bl	16a50 <abort@plt+0x5cf4>
   16930:	cmp	r0, r5
   16934:	bcs	1694c <abort@plt+0x5bf0>
   16938:	bl	10cb4 <__errno_location@plt>
   1693c:	mov	r3, #12
   16940:	str	r3, [r0]
   16944:	mov	r0, #0
   16948:	pop	{r4, r5, r6, pc}
   1694c:	mul	r1, r5, r4
   16950:	mov	r0, r6
   16954:	pop	{r4, r5, r6, lr}
   16958:	b	165b8 <abort@plt+0x585c>
   1695c:	push	{lr}		; (str lr, [sp, #-4]!)
   16960:	sub	sp, sp, #268	; 0x10c
   16964:	add	r1, sp, #4
   16968:	ldr	r2, [pc, #60]	; 169ac <abort@plt+0x5c50>
   1696c:	bl	169b8 <abort@plt+0x5c5c>
   16970:	cmp	r0, #0
   16974:	movne	r0, #0
   16978:	bne	169a4 <abort@plt+0x5c48>
   1697c:	ldr	r1, [pc, #44]	; 169b0 <abort@plt+0x5c54>
   16980:	add	r0, sp, #4
   16984:	bl	10b64 <strcmp@plt>
   16988:	cmp	r0, #0
   1698c:	beq	169a4 <abort@plt+0x5c48>
   16990:	add	r0, sp, #4
   16994:	ldr	r1, [pc, #24]	; 169b4 <abort@plt+0x5c58>
   16998:	bl	10b64 <strcmp@plt>
   1699c:	adds	r0, r0, #0
   169a0:	movne	r0, #1
   169a4:	add	sp, sp, #268	; 0x10c
   169a8:	pop	{pc}		; (ldr pc, [sp], #4)
   169ac:	andeq	r0, r0, r1, lsl #2
   169b0:	andeq	r7, r1, r8, lsr #14
   169b4:	andeq	r7, r1, ip, lsr #14
   169b8:	push	{r4, r5, r6, lr}
   169bc:	mov	r5, r1
   169c0:	mov	r1, #0
   169c4:	mov	r4, r2
   169c8:	bl	10d14 <setlocale@plt>
   169cc:	subs	r6, r0, #0
   169d0:	beq	16a2c <abort@plt+0x5cd0>
   169d4:	bl	10ca8 <strlen@plt>
   169d8:	cmp	r4, r0
   169dc:	bhi	16a14 <abort@plt+0x5cb8>
   169e0:	cmp	r4, #0
   169e4:	bne	169f0 <abort@plt+0x5c94>
   169e8:	mov	r0, #34	; 0x22
   169ec:	pop	{r4, r5, r6, pc}
   169f0:	sub	r4, r4, #1
   169f4:	mov	r1, r6
   169f8:	mov	r2, r4
   169fc:	mov	r0, r5
   16a00:	bl	10b94 <memcpy@plt>
   16a04:	mov	r3, #0
   16a08:	strb	r3, [r5, r4]
   16a0c:	mov	r0, #34	; 0x22
   16a10:	pop	{r4, r5, r6, pc}
   16a14:	add	r2, r0, #1
   16a18:	mov	r1, r6
   16a1c:	mov	r0, r5
   16a20:	bl	10b94 <memcpy@plt>
   16a24:	mov	r0, #0
   16a28:	pop	{r4, r5, r6, pc}
   16a2c:	cmp	r4, #0
   16a30:	beq	16a40 <abort@plt+0x5ce4>
   16a34:	strb	r6, [r5]
   16a38:	mov	r0, #22
   16a3c:	pop	{r4, r5, r6, pc}
   16a40:	mov	r0, #22
   16a44:	pop	{r4, r5, r6, pc}
   16a48:	mov	r1, #0
   16a4c:	b	10d14 <setlocale@plt>
   16a50:	subs	r2, r1, #1
   16a54:	bxeq	lr
   16a58:	bcc	16c30 <abort@plt+0x5ed4>
   16a5c:	cmp	r0, r1
   16a60:	bls	16c14 <abort@plt+0x5eb8>
   16a64:	tst	r1, r2
   16a68:	beq	16c20 <abort@plt+0x5ec4>
   16a6c:	clz	r3, r0
   16a70:	clz	r2, r1
   16a74:	sub	r3, r2, r3
   16a78:	rsbs	r3, r3, #31
   16a7c:	addne	r3, r3, r3, lsl #1
   16a80:	mov	r2, #0
   16a84:	addne	pc, pc, r3, lsl #2
   16a88:	nop			; (mov r0, r0)
   16a8c:	cmp	r0, r1, lsl #31
   16a90:	adc	r2, r2, r2
   16a94:	subcs	r0, r0, r1, lsl #31
   16a98:	cmp	r0, r1, lsl #30
   16a9c:	adc	r2, r2, r2
   16aa0:	subcs	r0, r0, r1, lsl #30
   16aa4:	cmp	r0, r1, lsl #29
   16aa8:	adc	r2, r2, r2
   16aac:	subcs	r0, r0, r1, lsl #29
   16ab0:	cmp	r0, r1, lsl #28
   16ab4:	adc	r2, r2, r2
   16ab8:	subcs	r0, r0, r1, lsl #28
   16abc:	cmp	r0, r1, lsl #27
   16ac0:	adc	r2, r2, r2
   16ac4:	subcs	r0, r0, r1, lsl #27
   16ac8:	cmp	r0, r1, lsl #26
   16acc:	adc	r2, r2, r2
   16ad0:	subcs	r0, r0, r1, lsl #26
   16ad4:	cmp	r0, r1, lsl #25
   16ad8:	adc	r2, r2, r2
   16adc:	subcs	r0, r0, r1, lsl #25
   16ae0:	cmp	r0, r1, lsl #24
   16ae4:	adc	r2, r2, r2
   16ae8:	subcs	r0, r0, r1, lsl #24
   16aec:	cmp	r0, r1, lsl #23
   16af0:	adc	r2, r2, r2
   16af4:	subcs	r0, r0, r1, lsl #23
   16af8:	cmp	r0, r1, lsl #22
   16afc:	adc	r2, r2, r2
   16b00:	subcs	r0, r0, r1, lsl #22
   16b04:	cmp	r0, r1, lsl #21
   16b08:	adc	r2, r2, r2
   16b0c:	subcs	r0, r0, r1, lsl #21
   16b10:	cmp	r0, r1, lsl #20
   16b14:	adc	r2, r2, r2
   16b18:	subcs	r0, r0, r1, lsl #20
   16b1c:	cmp	r0, r1, lsl #19
   16b20:	adc	r2, r2, r2
   16b24:	subcs	r0, r0, r1, lsl #19
   16b28:	cmp	r0, r1, lsl #18
   16b2c:	adc	r2, r2, r2
   16b30:	subcs	r0, r0, r1, lsl #18
   16b34:	cmp	r0, r1, lsl #17
   16b38:	adc	r2, r2, r2
   16b3c:	subcs	r0, r0, r1, lsl #17
   16b40:	cmp	r0, r1, lsl #16
   16b44:	adc	r2, r2, r2
   16b48:	subcs	r0, r0, r1, lsl #16
   16b4c:	cmp	r0, r1, lsl #15
   16b50:	adc	r2, r2, r2
   16b54:	subcs	r0, r0, r1, lsl #15
   16b58:	cmp	r0, r1, lsl #14
   16b5c:	adc	r2, r2, r2
   16b60:	subcs	r0, r0, r1, lsl #14
   16b64:	cmp	r0, r1, lsl #13
   16b68:	adc	r2, r2, r2
   16b6c:	subcs	r0, r0, r1, lsl #13
   16b70:	cmp	r0, r1, lsl #12
   16b74:	adc	r2, r2, r2
   16b78:	subcs	r0, r0, r1, lsl #12
   16b7c:	cmp	r0, r1, lsl #11
   16b80:	adc	r2, r2, r2
   16b84:	subcs	r0, r0, r1, lsl #11
   16b88:	cmp	r0, r1, lsl #10
   16b8c:	adc	r2, r2, r2
   16b90:	subcs	r0, r0, r1, lsl #10
   16b94:	cmp	r0, r1, lsl #9
   16b98:	adc	r2, r2, r2
   16b9c:	subcs	r0, r0, r1, lsl #9
   16ba0:	cmp	r0, r1, lsl #8
   16ba4:	adc	r2, r2, r2
   16ba8:	subcs	r0, r0, r1, lsl #8
   16bac:	cmp	r0, r1, lsl #7
   16bb0:	adc	r2, r2, r2
   16bb4:	subcs	r0, r0, r1, lsl #7
   16bb8:	cmp	r0, r1, lsl #6
   16bbc:	adc	r2, r2, r2
   16bc0:	subcs	r0, r0, r1, lsl #6
   16bc4:	cmp	r0, r1, lsl #5
   16bc8:	adc	r2, r2, r2
   16bcc:	subcs	r0, r0, r1, lsl #5
   16bd0:	cmp	r0, r1, lsl #4
   16bd4:	adc	r2, r2, r2
   16bd8:	subcs	r0, r0, r1, lsl #4
   16bdc:	cmp	r0, r1, lsl #3
   16be0:	adc	r2, r2, r2
   16be4:	subcs	r0, r0, r1, lsl #3
   16be8:	cmp	r0, r1, lsl #2
   16bec:	adc	r2, r2, r2
   16bf0:	subcs	r0, r0, r1, lsl #2
   16bf4:	cmp	r0, r1, lsl #1
   16bf8:	adc	r2, r2, r2
   16bfc:	subcs	r0, r0, r1, lsl #1
   16c00:	cmp	r0, r1
   16c04:	adc	r2, r2, r2
   16c08:	subcs	r0, r0, r1
   16c0c:	mov	r0, r2
   16c10:	bx	lr
   16c14:	moveq	r0, #1
   16c18:	movne	r0, #0
   16c1c:	bx	lr
   16c20:	clz	r2, r1
   16c24:	rsb	r2, r2, #31
   16c28:	lsr	r0, r0, r2
   16c2c:	bx	lr
   16c30:	cmp	r0, #0
   16c34:	mvnne	r0, #0
   16c38:	b	16e9c <abort@plt+0x6140>
   16c3c:	cmp	r1, #0
   16c40:	beq	16c30 <abort@plt+0x5ed4>
   16c44:	push	{r0, r1, lr}
   16c48:	bl	16a50 <abort@plt+0x5cf4>
   16c4c:	pop	{r1, r2, lr}
   16c50:	mul	r3, r2, r0
   16c54:	sub	r1, r1, r3
   16c58:	bx	lr
   16c5c:	cmp	r1, #0
   16c60:	beq	16e6c <abort@plt+0x6110>
   16c64:	eor	ip, r0, r1
   16c68:	rsbmi	r1, r1, #0
   16c6c:	subs	r2, r1, #1
   16c70:	beq	16e38 <abort@plt+0x60dc>
   16c74:	movs	r3, r0
   16c78:	rsbmi	r3, r0, #0
   16c7c:	cmp	r3, r1
   16c80:	bls	16e44 <abort@plt+0x60e8>
   16c84:	tst	r1, r2
   16c88:	beq	16e54 <abort@plt+0x60f8>
   16c8c:	clz	r2, r3
   16c90:	clz	r0, r1
   16c94:	sub	r2, r0, r2
   16c98:	rsbs	r2, r2, #31
   16c9c:	addne	r2, r2, r2, lsl #1
   16ca0:	mov	r0, #0
   16ca4:	addne	pc, pc, r2, lsl #2
   16ca8:	nop			; (mov r0, r0)
   16cac:	cmp	r3, r1, lsl #31
   16cb0:	adc	r0, r0, r0
   16cb4:	subcs	r3, r3, r1, lsl #31
   16cb8:	cmp	r3, r1, lsl #30
   16cbc:	adc	r0, r0, r0
   16cc0:	subcs	r3, r3, r1, lsl #30
   16cc4:	cmp	r3, r1, lsl #29
   16cc8:	adc	r0, r0, r0
   16ccc:	subcs	r3, r3, r1, lsl #29
   16cd0:	cmp	r3, r1, lsl #28
   16cd4:	adc	r0, r0, r0
   16cd8:	subcs	r3, r3, r1, lsl #28
   16cdc:	cmp	r3, r1, lsl #27
   16ce0:	adc	r0, r0, r0
   16ce4:	subcs	r3, r3, r1, lsl #27
   16ce8:	cmp	r3, r1, lsl #26
   16cec:	adc	r0, r0, r0
   16cf0:	subcs	r3, r3, r1, lsl #26
   16cf4:	cmp	r3, r1, lsl #25
   16cf8:	adc	r0, r0, r0
   16cfc:	subcs	r3, r3, r1, lsl #25
   16d00:	cmp	r3, r1, lsl #24
   16d04:	adc	r0, r0, r0
   16d08:	subcs	r3, r3, r1, lsl #24
   16d0c:	cmp	r3, r1, lsl #23
   16d10:	adc	r0, r0, r0
   16d14:	subcs	r3, r3, r1, lsl #23
   16d18:	cmp	r3, r1, lsl #22
   16d1c:	adc	r0, r0, r0
   16d20:	subcs	r3, r3, r1, lsl #22
   16d24:	cmp	r3, r1, lsl #21
   16d28:	adc	r0, r0, r0
   16d2c:	subcs	r3, r3, r1, lsl #21
   16d30:	cmp	r3, r1, lsl #20
   16d34:	adc	r0, r0, r0
   16d38:	subcs	r3, r3, r1, lsl #20
   16d3c:	cmp	r3, r1, lsl #19
   16d40:	adc	r0, r0, r0
   16d44:	subcs	r3, r3, r1, lsl #19
   16d48:	cmp	r3, r1, lsl #18
   16d4c:	adc	r0, r0, r0
   16d50:	subcs	r3, r3, r1, lsl #18
   16d54:	cmp	r3, r1, lsl #17
   16d58:	adc	r0, r0, r0
   16d5c:	subcs	r3, r3, r1, lsl #17
   16d60:	cmp	r3, r1, lsl #16
   16d64:	adc	r0, r0, r0
   16d68:	subcs	r3, r3, r1, lsl #16
   16d6c:	cmp	r3, r1, lsl #15
   16d70:	adc	r0, r0, r0
   16d74:	subcs	r3, r3, r1, lsl #15
   16d78:	cmp	r3, r1, lsl #14
   16d7c:	adc	r0, r0, r0
   16d80:	subcs	r3, r3, r1, lsl #14
   16d84:	cmp	r3, r1, lsl #13
   16d88:	adc	r0, r0, r0
   16d8c:	subcs	r3, r3, r1, lsl #13
   16d90:	cmp	r3, r1, lsl #12
   16d94:	adc	r0, r0, r0
   16d98:	subcs	r3, r3, r1, lsl #12
   16d9c:	cmp	r3, r1, lsl #11
   16da0:	adc	r0, r0, r0
   16da4:	subcs	r3, r3, r1, lsl #11
   16da8:	cmp	r3, r1, lsl #10
   16dac:	adc	r0, r0, r0
   16db0:	subcs	r3, r3, r1, lsl #10
   16db4:	cmp	r3, r1, lsl #9
   16db8:	adc	r0, r0, r0
   16dbc:	subcs	r3, r3, r1, lsl #9
   16dc0:	cmp	r3, r1, lsl #8
   16dc4:	adc	r0, r0, r0
   16dc8:	subcs	r3, r3, r1, lsl #8
   16dcc:	cmp	r3, r1, lsl #7
   16dd0:	adc	r0, r0, r0
   16dd4:	subcs	r3, r3, r1, lsl #7
   16dd8:	cmp	r3, r1, lsl #6
   16ddc:	adc	r0, r0, r0
   16de0:	subcs	r3, r3, r1, lsl #6
   16de4:	cmp	r3, r1, lsl #5
   16de8:	adc	r0, r0, r0
   16dec:	subcs	r3, r3, r1, lsl #5
   16df0:	cmp	r3, r1, lsl #4
   16df4:	adc	r0, r0, r0
   16df8:	subcs	r3, r3, r1, lsl #4
   16dfc:	cmp	r3, r1, lsl #3
   16e00:	adc	r0, r0, r0
   16e04:	subcs	r3, r3, r1, lsl #3
   16e08:	cmp	r3, r1, lsl #2
   16e0c:	adc	r0, r0, r0
   16e10:	subcs	r3, r3, r1, lsl #2
   16e14:	cmp	r3, r1, lsl #1
   16e18:	adc	r0, r0, r0
   16e1c:	subcs	r3, r3, r1, lsl #1
   16e20:	cmp	r3, r1
   16e24:	adc	r0, r0, r0
   16e28:	subcs	r3, r3, r1
   16e2c:	cmp	ip, #0
   16e30:	rsbmi	r0, r0, #0
   16e34:	bx	lr
   16e38:	teq	ip, r0
   16e3c:	rsbmi	r0, r0, #0
   16e40:	bx	lr
   16e44:	movcc	r0, #0
   16e48:	asreq	r0, ip, #31
   16e4c:	orreq	r0, r0, #1
   16e50:	bx	lr
   16e54:	clz	r2, r1
   16e58:	rsb	r2, r2, #31
   16e5c:	cmp	ip, #0
   16e60:	lsr	r0, r3, r2
   16e64:	rsbmi	r0, r0, #0
   16e68:	bx	lr
   16e6c:	cmp	r0, #0
   16e70:	mvngt	r0, #-2147483648	; 0x80000000
   16e74:	movlt	r0, #-2147483648	; 0x80000000
   16e78:	b	16e9c <abort@plt+0x6140>
   16e7c:	cmp	r1, #0
   16e80:	beq	16e6c <abort@plt+0x6110>
   16e84:	push	{r0, r1, lr}
   16e88:	bl	16c64 <abort@plt+0x5f08>
   16e8c:	pop	{r1, r2, lr}
   16e90:	mul	r3, r2, r0
   16e94:	sub	r1, r1, r3
   16e98:	bx	lr
   16e9c:	push	{r1, lr}
   16ea0:	mov	r0, #8
   16ea4:	bl	10b58 <raise@plt>
   16ea8:	pop	{r1, pc}
   16eac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16eb0:	mov	r7, r0
   16eb4:	ldr	r6, [pc, #72]	; 16f04 <abort@plt+0x61a8>
   16eb8:	ldr	r5, [pc, #72]	; 16f08 <abort@plt+0x61ac>
   16ebc:	add	r6, pc, r6
   16ec0:	add	r5, pc, r5
   16ec4:	sub	r6, r6, r5
   16ec8:	mov	r8, r1
   16ecc:	mov	r9, r2
   16ed0:	bl	10b20 <calloc@plt-0x20>
   16ed4:	asrs	r6, r6, #2
   16ed8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16edc:	mov	r4, #0
   16ee0:	add	r4, r4, #1
   16ee4:	ldr	r3, [r5], #4
   16ee8:	mov	r2, r9
   16eec:	mov	r1, r8
   16ef0:	mov	r0, r7
   16ef4:	blx	r3
   16ef8:	cmp	r6, r4
   16efc:	bne	16ee0 <abort@plt+0x6184>
   16f00:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16f04:	andeq	r1, r1, ip, asr #32
   16f08:	andeq	r1, r1, r4, asr #32
   16f0c:	bx	lr
   16f10:	ldr	r3, [pc, #12]	; 16f24 <abort@plt+0x61c8>
   16f14:	mov	r1, #0
   16f18:	add	r3, pc, r3
   16f1c:	ldr	r2, [r3]
   16f20:	b	10cc0 <__cxa_atexit@plt>
   16f24:	andeq	r1, r1, ip, lsr #3

Disassembly of section .fini:

00016f28 <.fini>:
   16f28:	push	{r3, lr}
   16f2c:	pop	{r3, pc}
