
../repos/prog2/MT1E1-1.1:     file format elf32-littlearm


Disassembly of section .init:

00010c78 <.init>:
   10c78:	push	{r3, lr}
   10c7c:	bl	10dac <_start@@Base+0x3c>
   10c80:	pop	{r3, pc}

Disassembly of section .plt:

00010c84 <calloc@plt-0x14>:
   10c84:	push	{lr}		; (str lr, [sp, #-4]!)
   10c88:	ldr	lr, [pc, #4]	; 10c94 <calloc@plt-0x4>
   10c8c:	add	lr, pc, lr
   10c90:	ldr	pc, [lr, #8]!
   10c94:	andeq	r1, r1, ip, ror #6

00010c98 <calloc@plt>:
   10c98:	add	ip, pc, #0, 12
   10c9c:	add	ip, ip, #69632	; 0x11000
   10ca0:	ldr	pc, [ip, #876]!	; 0x36c

00010ca4 <strcmp@plt>:
   10ca4:	add	ip, pc, #0, 12
   10ca8:	add	ip, ip, #69632	; 0x11000
   10cac:	ldr	pc, [ip, #868]!	; 0x364

00010cb0 <printf@plt>:
   10cb0:	add	ip, pc, #0, 12
   10cb4:	add	ip, ip, #69632	; 0x11000
   10cb8:	ldr	pc, [ip, #860]!	; 0x35c

00010cbc <fopen@plt>:
   10cbc:	add	ip, pc, #0, 12
   10cc0:	add	ip, ip, #69632	; 0x11000
   10cc4:	ldr	pc, [ip, #852]!	; 0x354

00010cc8 <free@plt>:
   10cc8:	add	ip, pc, #0, 12
   10ccc:	add	ip, ip, #69632	; 0x11000
   10cd0:	ldr	pc, [ip, #844]!	; 0x34c

00010cd4 <fgets@plt>:
   10cd4:	add	ip, pc, #0, 12
   10cd8:	add	ip, ip, #69632	; 0x11000
   10cdc:	ldr	pc, [ip, #836]!	; 0x344

00010ce0 <realloc@plt>:
   10ce0:	add	ip, pc, #0, 12
   10ce4:	add	ip, ip, #69632	; 0x11000
   10ce8:	ldr	pc, [ip, #828]!	; 0x33c

00010cec <strcpy@plt>:
   10cec:	add	ip, pc, #0, 12
   10cf0:	add	ip, ip, #69632	; 0x11000
   10cf4:	ldr	pc, [ip, #820]!	; 0x334

00010cf8 <puts@plt>:
   10cf8:	add	ip, pc, #0, 12
   10cfc:	add	ip, ip, #69632	; 0x11000
   10d00:	ldr	pc, [ip, #812]!	; 0x32c

00010d04 <malloc@plt>:
   10d04:	add	ip, pc, #0, 12
   10d08:	add	ip, ip, #69632	; 0x11000
   10d0c:	ldr	pc, [ip, #804]!	; 0x324

00010d10 <__libc_start_main@plt>:
   10d10:	add	ip, pc, #0, 12
   10d14:	add	ip, ip, #69632	; 0x11000
   10d18:	ldr	pc, [ip, #796]!	; 0x31c

00010d1c <__gmon_start__@plt>:
   10d1c:	add	ip, pc, #0, 12
   10d20:	add	ip, ip, #69632	; 0x11000
   10d24:	ldr	pc, [ip, #788]!	; 0x314

00010d28 <feof@plt>:
   10d28:	add	ip, pc, #0, 12
   10d2c:	add	ip, ip, #69632	; 0x11000
   10d30:	ldr	pc, [ip, #780]!	; 0x30c

00010d34 <strlen@plt>:
   10d34:	add	ip, pc, #0, 12
   10d38:	add	ip, ip, #69632	; 0x11000
   10d3c:	ldr	pc, [ip, #772]!	; 0x304

00010d40 <strchr@plt>:
   10d40:	add	ip, pc, #0, 12
   10d44:	add	ip, ip, #69632	; 0x11000
   10d48:	ldr	pc, [ip, #764]!	; 0x2fc

00010d4c <fclose@plt>:
   10d4c:	add	ip, pc, #0, 12
   10d50:	add	ip, ip, #69632	; 0x11000
   10d54:	ldr	pc, [ip, #756]!	; 0x2f4

00010d58 <atoi@plt>:
   10d58:	add	ip, pc, #0, 12
   10d5c:	add	ip, ip, #69632	; 0x11000
   10d60:	ldr	pc, [ip, #748]!	; 0x2ec

00010d64 <abort@plt>:
   10d64:	add	ip, pc, #0, 12
   10d68:	add	ip, ip, #69632	; 0x11000
   10d6c:	ldr	pc, [ip, #740]!	; 0x2e4

Disassembly of section .text:

00010d70 <_start@@Base>:
   10d70:	mov	fp, #0
   10d74:	mov	lr, #0
   10d78:	pop	{r1}		; (ldr r1, [sp], #4)
   10d7c:	mov	r2, sp
   10d80:	push	{r2}		; (str r2, [sp, #-4]!)
   10d84:	push	{r0}		; (str r0, [sp, #-4]!)
   10d88:	ldr	ip, [pc, #16]	; 10da0 <_start@@Base+0x30>
   10d8c:	push	{ip}		; (str ip, [sp, #-4]!)
   10d90:	ldr	r0, [pc, #12]	; 10da4 <_start@@Base+0x34>
   10d94:	ldr	r3, [pc, #12]	; 10da8 <_start@@Base+0x38>
   10d98:	bl	10d10 <__libc_start_main@plt>
   10d9c:	bl	10d64 <abort@plt>
   10da0:	andeq	r1, r1, ip, asr #21
   10da4:	andeq	r1, r1, ip, asr #2
   10da8:	andeq	r1, r1, ip, ror #20
   10dac:	ldr	r3, [pc, #20]	; 10dc8 <_start@@Base+0x58>
   10db0:	ldr	r2, [pc, #20]	; 10dcc <_start@@Base+0x5c>
   10db4:	add	r3, pc, r3
   10db8:	ldr	r2, [r3, r2]
   10dbc:	cmp	r2, #0
   10dc0:	bxeq	lr
   10dc4:	b	10d1c <__gmon_start__@plt>
   10dc8:	andeq	r1, r1, r4, asr #4
   10dcc:	andeq	r0, r0, r4, asr r0
   10dd0:	ldr	r0, [pc, #24]	; 10df0 <_start@@Base+0x80>
   10dd4:	ldr	r3, [pc, #24]	; 10df4 <_start@@Base+0x84>
   10dd8:	cmp	r3, r0
   10ddc:	bxeq	lr
   10de0:	ldr	r3, [pc, #16]	; 10df8 <_start@@Base+0x88>
   10de4:	cmp	r3, #0
   10de8:	bxeq	lr
   10dec:	bx	r3
   10df0:	andeq	r2, r2, r0, rrx
   10df4:	andeq	r2, r2, r0, rrx
   10df8:	andeq	r0, r0, r0
   10dfc:	ldr	r0, [pc, #36]	; 10e28 <_start@@Base+0xb8>
   10e00:	ldr	r1, [pc, #36]	; 10e2c <_start@@Base+0xbc>
   10e04:	sub	r1, r1, r0
   10e08:	asr	r1, r1, #2
   10e0c:	add	r1, r1, r1, lsr #31
   10e10:	asrs	r1, r1, #1
   10e14:	bxeq	lr
   10e18:	ldr	r3, [pc, #16]	; 10e30 <_start@@Base+0xc0>
   10e1c:	cmp	r3, #0
   10e20:	bxeq	lr
   10e24:	bx	r3
   10e28:	andeq	r2, r2, r0, rrx
   10e2c:	andeq	r2, r2, r0, rrx
   10e30:	andeq	r0, r0, r0
   10e34:	push	{r4, lr}
   10e38:	ldr	r4, [pc, #24]	; 10e58 <_start@@Base+0xe8>
   10e3c:	ldrb	r3, [r4]
   10e40:	cmp	r3, #0
   10e44:	popne	{r4, pc}
   10e48:	bl	10dd0 <_start@@Base+0x60>
   10e4c:	mov	r3, #1
   10e50:	strb	r3, [r4]
   10e54:	pop	{r4, pc}
   10e58:	andeq	r2, r2, r0, rrx
   10e5c:	b	10dfc <_start@@Base+0x8c>

00010e60 <retira_duplicados@@Base>:
   10e60:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   10e64:	add	fp, sp, #24
   10e68:	mov	r4, r0
   10e6c:	bl	113dc <vetor_tamanho@@Base>
   10e70:	cmp	r0, #2
   10e74:	blt	10f08 <retira_duplicados@@Base+0xa8>
   10e78:	mov	r8, #0
   10e7c:	b	10e94 <retira_duplicados@@Base+0x34>
   10e80:	mov	r0, r4
   10e84:	bl	113dc <vetor_tamanho@@Base>
   10e88:	sub	r0, r0, #1
   10e8c:	cmp	r8, r0
   10e90:	popge	{r4, r5, r6, r7, r8, sl, fp, pc}
   10e94:	mov	r5, r8
   10e98:	add	r8, r8, #1
   10e9c:	mov	r0, r4
   10ea0:	bl	113dc <vetor_tamanho@@Base>
   10ea4:	cmp	r8, r0
   10ea8:	bge	10e80 <retira_duplicados@@Base+0x20>
   10eac:	mov	r6, r8
   10eb0:	mov	r0, r4
   10eb4:	mov	r1, r5
   10eb8:	bl	113ec <vetor_elemento@@Base>
   10ebc:	mov	r7, r0
   10ec0:	mov	r0, r4
   10ec4:	mov	r1, r6
   10ec8:	bl	113ec <vetor_elemento@@Base>
   10ecc:	mov	r1, r0
   10ed0:	mov	r0, r7
   10ed4:	bl	10ca4 <strcmp@plt>
   10ed8:	cmp	r0, #0
   10edc:	bne	10ef0 <retira_duplicados@@Base+0x90>
   10ee0:	mov	r0, r4
   10ee4:	mov	r1, r6
   10ee8:	bl	114e8 <vetor_remove@@Base>
   10eec:	sub	r6, r6, #1
   10ef0:	add	r6, r6, #1
   10ef4:	mov	r0, r4
   10ef8:	bl	113dc <vetor_tamanho@@Base>
   10efc:	cmp	r6, r0
   10f00:	blt	10eb0 <retira_duplicados@@Base+0x50>
   10f04:	b	10e80 <retira_duplicados@@Base+0x20>
   10f08:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00010f0c <interseta@@Base>:
   10f0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10f10:	add	fp, sp, #28
   10f14:	sub	sp, sp, #4
   10f18:	mov	r4, r1
   10f1c:	mov	sl, r0
   10f20:	bl	112c8 <vetor_novo@@Base>
   10f24:	mov	r8, r0
   10f28:	ldr	r7, [sl]
   10f2c:	cmp	r7, #0
   10f30:	bne	10f40 <interseta@@Base+0x34>
   10f34:	ldr	r0, [sl, #8]
   10f38:	cmp	r0, #1
   10f3c:	blt	10fbc <interseta@@Base+0xb0>
   10f40:	mov	r9, #0
   10f44:	mov	r0, #1
   10f48:	mov	r5, r0
   10f4c:	ldr	r1, [r7]
   10f50:	mov	r0, r4
   10f54:	mov	r2, #0
   10f58:	bl	118a4 <lista_pesquisa@@Base>
   10f5c:	cmp	r0, #0
   10f60:	beq	10fa0 <interseta@@Base+0x94>
   10f64:	ldr	r6, [r7]
   10f68:	mov	r0, r4
   10f6c:	mov	r1, r6
   10f70:	mov	r2, #0
   10f74:	bl	118a4 <lista_pesquisa@@Base>
   10f78:	ldr	r1, [r0]
   10f7c:	mov	r0, r6
   10f80:	bl	10ca4 <strcmp@plt>
   10f84:	cmp	r0, #0
   10f88:	bne	10fa0 <interseta@@Base+0x94>
   10f8c:	ldr	r1, [r7]
   10f90:	mov	r0, r8
   10f94:	mov	r2, r9
   10f98:	bl	11414 <vetor_insere@@Base>
   10f9c:	add	r9, r9, #1
   10fa0:	add	r0, r5, #1
   10fa4:	ldr	r1, [sl, #8]
   10fa8:	ldr	r7, [r7, #4]
   10fac:	cmp	r7, #0
   10fb0:	bne	10f48 <interseta@@Base+0x3c>
   10fb4:	cmp	r5, r1
   10fb8:	blt	10f48 <interseta@@Base+0x3c>
   10fbc:	mov	r0, r8
   10fc0:	sub	sp, fp, #28
   10fc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00010fc8 <anteriores@@Base>:
   10fc8:	push	{r4, r5, r6, r7, fp, lr}
   10fcc:	add	fp, sp, #16
   10fd0:	mov	r4, r1
   10fd4:	mov	r6, r0
   10fd8:	bl	112c8 <vetor_novo@@Base>
   10fdc:	mov	r5, r0
   10fe0:	ldr	r7, [r6]
   10fe4:	b	10fec <anteriores@@Base+0x24>
   10fe8:	ldr	r7, [r7, #4]
   10fec:	cmp	r7, #0
   10ff0:	moveq	r0, r5
   10ff4:	popeq	{r4, r5, r6, r7, fp, pc}
   10ff8:	ldr	r6, [r7]
   10ffc:	mov	r0, r6
   11000:	bl	10d34 <strlen@plt>
   11004:	add	r0, r6, r0
   11008:	sub	r0, r0, #5
   1100c:	bl	10d58 <atoi@plt>
   11010:	cmp	r0, r4
   11014:	bge	10fe8 <anteriores@@Base+0x20>
   11018:	ldr	r2, [r5]
   1101c:	mov	r0, r5
   11020:	mov	r1, r6
   11024:	bl	11414 <vetor_insere@@Base>
   11028:	b	10fe8 <anteriores@@Base+0x20>

0001102c <lerAtores@@Base>:
   1102c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11030:	add	fp, sp, #24
   11034:	sub	sp, sp, #256	; 0x100
   11038:	cmp	r0, #0
   1103c:	beq	110ac <lerAtores@@Base+0x80>
   11040:	mov	r5, r0
   11044:	bl	112c8 <vetor_novo@@Base>
   11048:	mov	r4, r0
   1104c:	mov	r0, r5
   11050:	bl	10d28 <feof@plt>
   11054:	cmp	r0, #0
   11058:	bne	110b0 <lerAtores@@Base+0x84>
   1105c:	mov	r6, sp
   11060:	mov	r7, #0
   11064:	mov	r0, r6
   11068:	mov	r1, #255	; 0xff
   1106c:	mov	r2, r5
   11070:	bl	10cd4 <fgets@plt>
   11074:	mov	r0, r6
   11078:	mov	r1, #10
   1107c:	bl	10d40 <strchr@plt>
   11080:	cmp	r0, #0
   11084:	strbne	r7, [r0]
   11088:	ldr	r2, [r4]
   1108c:	mov	r0, r4
   11090:	mov	r1, r6
   11094:	bl	11414 <vetor_insere@@Base>
   11098:	mov	r0, r5
   1109c:	bl	10d28 <feof@plt>
   110a0:	cmp	r0, #0
   110a4:	beq	11064 <lerAtores@@Base+0x38>
   110a8:	b	110b0 <lerAtores@@Base+0x84>
   110ac:	mov	r4, #0
   110b0:	mov	r0, r4
   110b4:	sub	sp, fp, #24
   110b8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000110bc <lerFilmes@@Base>:
   110bc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   110c0:	add	fp, sp, #24
   110c4:	sub	sp, sp, #256	; 0x100
   110c8:	cmp	r0, #0
   110cc:	beq	1113c <lerFilmes@@Base+0x80>
   110d0:	mov	r5, r0
   110d4:	bl	116dc <lista_nova@@Base>
   110d8:	mov	r4, r0
   110dc:	mov	r0, r5
   110e0:	bl	10d28 <feof@plt>
   110e4:	cmp	r0, #0
   110e8:	bne	11140 <lerFilmes@@Base+0x84>
   110ec:	mov	r6, sp
   110f0:	mov	r7, #0
   110f4:	mov	r0, r6
   110f8:	mov	r1, #255	; 0xff
   110fc:	mov	r2, r5
   11100:	bl	10cd4 <fgets@plt>
   11104:	mov	r0, r6
   11108:	mov	r1, #10
   1110c:	bl	10d40 <strchr@plt>
   11110:	cmp	r0, #0
   11114:	strbne	r7, [r0]
   11118:	mov	r0, r4
   1111c:	mov	r1, r6
   11120:	mov	r2, #0
   11124:	bl	11784 <lista_insere@@Base>
   11128:	mov	r0, r5
   1112c:	bl	10d28 <feof@plt>
   11130:	cmp	r0, #0
   11134:	beq	110f4 <lerFilmes@@Base+0x38>
   11138:	b	11140 <lerFilmes@@Base+0x84>
   1113c:	mov	r4, #0
   11140:	mov	r0, r4
   11144:	sub	sp, fp, #24
   11148:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001114c <main@@Base>:
   1114c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11150:	add	fp, sp, #28
   11154:	sub	sp, sp, #4
   11158:	movw	r0, #6884	; 0x1ae4
   1115c:	movt	r0, #1
   11160:	movw	r4, #6896	; 0x1af0
   11164:	movt	r4, #1
   11168:	mov	r1, r4
   1116c:	bl	10cbc <fopen@plt>
   11170:	mov	r5, r0
   11174:	movw	r0, #6898	; 0x1af2
   11178:	movt	r0, #1
   1117c:	mov	r1, r4
   11180:	bl	10cbc <fopen@plt>
   11184:	mov	r9, r0
   11188:	movw	r0, #6909	; 0x1afd
   1118c:	movt	r0, #1
   11190:	mov	r1, r4
   11194:	bl	10cbc <fopen@plt>
   11198:	mov	sl, r0
   1119c:	str	r5, [sp]
   111a0:	mov	r0, r5
   111a4:	bl	1102c <lerAtores@@Base>
   111a8:	mov	r5, r0
   111ac:	mov	r0, r9
   111b0:	bl	110bc <lerFilmes@@Base>
   111b4:	mov	r7, r0
   111b8:	mov	r0, sl
   111bc:	bl	110bc <lerFilmes@@Base>
   111c0:	mov	r4, r0
   111c4:	mov	r0, r5
   111c8:	bl	113dc <vetor_tamanho@@Base>
   111cc:	mov	r1, r0
   111d0:	movw	r0, #6921	; 0x1b09
   111d4:	movt	r0, #1
   111d8:	bl	10cb0 <printf@plt>
   111dc:	mov	r0, r5
   111e0:	bl	10e60 <retira_duplicados@@Base>
   111e4:	mov	r0, r5
   111e8:	bl	113dc <vetor_tamanho@@Base>
   111ec:	mov	r1, r0
   111f0:	movw	r0, #6940	; 0x1b1c
   111f4:	movt	r0, #1
   111f8:	bl	10cb0 <printf@plt>
   111fc:	mov	r0, r7
   11200:	mov	r1, r4
   11204:	bl	10f0c <interseta@@Base>
   11208:	mov	r6, r0
   1120c:	cmp	r0, #0
   11210:	beq	11230 <main@@Base+0xe4>
   11214:	mov	r0, r6
   11218:	bl	113dc <vetor_tamanho@@Base>
   1121c:	mov	r1, r0
   11220:	movw	r0, #6968	; 0x1b38
   11224:	movt	r0, #1
   11228:	bl	10cb0 <printf@plt>
   1122c:	b	1123c <main@@Base+0xf0>
   11230:	movw	r0, #7040	; 0x1b80
   11234:	movt	r0, #1
   11238:	bl	10cf8 <puts@plt>
   1123c:	mov	r0, r7
   11240:	mov	r1, #2000	; 0x7d0
   11244:	bl	10fc8 <anteriores@@Base>
   11248:	mov	r8, r0
   1124c:	cmp	r0, #0
   11250:	beq	11270 <main@@Base+0x124>
   11254:	mov	r0, r8
   11258:	bl	113dc <vetor_tamanho@@Base>
   1125c:	mov	r1, r0
   11260:	movw	r0, #6999	; 0x1b57
   11264:	movt	r0, #1
   11268:	bl	10cb0 <printf@plt>
   1126c:	b	1127c <main@@Base+0x130>
   11270:	movw	r0, #7072	; 0x1ba0
   11274:	movt	r0, #1
   11278:	bl	10cf8 <puts@plt>
   1127c:	mov	r0, r5
   11280:	bl	112f8 <vetor_apaga@@Base>
   11284:	mov	r0, r6
   11288:	bl	112f8 <vetor_apaga@@Base>
   1128c:	mov	r0, r8
   11290:	bl	112f8 <vetor_apaga@@Base>
   11294:	mov	r0, r7
   11298:	bl	1170c <lista_apaga@@Base>
   1129c:	mov	r0, r4
   112a0:	bl	1170c <lista_apaga@@Base>
   112a4:	ldr	r0, [sp]
   112a8:	bl	10d4c <fclose@plt>
   112ac:	mov	r0, r9
   112b0:	bl	10d4c <fclose@plt>
   112b4:	mov	r0, sl
   112b8:	bl	10d4c <fclose@plt>
   112bc:	mov	r0, #0
   112c0:	sub	sp, fp, #28
   112c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000112c8 <vetor_novo@@Base>:
   112c8:	push	{fp, lr}
   112cc:	mov	fp, sp
   112d0:	mov	r0, #12
   112d4:	bl	10d04 <malloc@plt>
   112d8:	cmp	r0, #0
   112dc:	movne	r1, #0
   112e0:	strne	r1, [r0]
   112e4:	strne	r1, [r0, #4]
   112e8:	strne	r1, [r0, #8]
   112ec:	popne	{fp, pc}
   112f0:	mov	r0, #0
   112f4:	pop	{fp, pc}

000112f8 <vetor_apaga@@Base>:
   112f8:	cmp	r0, #0
   112fc:	bxeq	lr
   11300:	push	{r4, r5, fp, lr}
   11304:	add	fp, sp, #8
   11308:	mov	r4, r0
   1130c:	ldr	r1, [r0]
   11310:	ldr	r0, [r0, #8]
   11314:	cmp	r1, #1
   11318:	blt	1133c <vetor_apaga@@Base+0x44>
   1131c:	mov	r5, #0
   11320:	ldr	r0, [r0, r5, lsl #2]
   11324:	bl	10cc8 <free@plt>
   11328:	add	r5, r5, #1
   1132c:	ldr	r1, [r4]
   11330:	ldr	r0, [r4, #8]
   11334:	cmp	r5, r1
   11338:	blt	11320 <vetor_apaga@@Base+0x28>
   1133c:	bl	10cc8 <free@plt>
   11340:	mov	r0, r4
   11344:	pop	{r4, r5, fp, lr}
   11348:	b	10cc8 <free@plt>

0001134c <vetor_atribui@@Base>:
   1134c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11350:	add	fp, sp, #24
   11354:	mvn	r4, #0
   11358:	cmp	r0, #0
   1135c:	beq	113d4 <vetor_atribui@@Base+0x88>
   11360:	mov	r5, r1
   11364:	cmp	r1, #0
   11368:	blt	113d4 <vetor_atribui@@Base+0x88>
   1136c:	mov	r7, r0
   11370:	ldr	r0, [r0]
   11374:	cmp	r0, r5
   11378:	ble	113d4 <vetor_atribui@@Base+0x88>
   1137c:	mov	r6, r2
   11380:	mov	r0, r2
   11384:	bl	10d34 <strlen@plt>
   11388:	mov	r8, r0
   1138c:	ldr	r0, [r7, #8]
   11390:	ldr	r9, [r0, r5, lsl #2]
   11394:	mov	r0, r9
   11398:	bl	10d34 <strlen@plt>
   1139c:	cmp	r8, r0
   113a0:	bls	113c0 <vetor_atribui@@Base+0x74>
   113a4:	add	r1, r8, #1
   113a8:	mov	r0, r9
   113ac:	bl	10ce0 <realloc@plt>
   113b0:	ldr	r1, [r7, #8]
   113b4:	str	r0, [r1, r5, lsl #2]
   113b8:	cmp	r0, #0
   113bc:	beq	113d4 <vetor_atribui@@Base+0x88>
   113c0:	ldr	r0, [r7, #8]
   113c4:	ldr	r0, [r0, r5, lsl #2]
   113c8:	mov	r1, r6
   113cc:	bl	10cec <strcpy@plt>
   113d0:	mov	r4, r5
   113d4:	mov	r0, r4
   113d8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000113dc <vetor_tamanho@@Base>:
   113dc:	cmp	r0, #0
   113e0:	ldrne	r0, [r0]
   113e4:	mvneq	r0, #0
   113e8:	bx	lr

000113ec <vetor_elemento@@Base>:
   113ec:	mov	r2, r0
   113f0:	mov	r0, #0
   113f4:	cmp	r2, #0
   113f8:	bxeq	lr
   113fc:	cmp	r1, #0
   11400:	ldrge	r3, [r2]
   11404:	cmpge	r3, r1
   11408:	ldrgt	r0, [r2, #8]
   1140c:	ldrgt	r0, [r0, r1, lsl #2]
   11410:	bx	lr

00011414 <vetor_insere@@Base>:
   11414:	push	{r4, r5, r6, r7, fp, lr}
   11418:	add	fp, sp, #16
   1141c:	mvn	r4, #0
   11420:	cmp	r0, #0
   11424:	beq	114e0 <vetor_insere@@Base+0xcc>
   11428:	mov	r5, r2
   1142c:	cmp	r2, #0
   11430:	blt	114e0 <vetor_insere@@Base+0xcc>
   11434:	mov	r7, r1
   11438:	mov	r6, r0
   1143c:	ldr	r1, [r0]
   11440:	cmp	r1, r5
   11444:	blt	114e0 <vetor_insere@@Base+0xcc>
   11448:	ldr	r0, [r6, #4]
   1144c:	cmp	r1, r0
   11450:	bne	1147c <vetor_insere@@Base+0x68>
   11454:	lsl	r1, r0, #1
   11458:	cmp	r0, #0
   1145c:	movweq	r1, #1
   11460:	str	r1, [r6, #4]
   11464:	lsl	r1, r1, #2
   11468:	ldr	r0, [r6, #8]
   1146c:	bl	10ce0 <realloc@plt>
   11470:	str	r0, [r6, #8]
   11474:	cmp	r0, #0
   11478:	beq	114e0 <vetor_insere@@Base+0xcc>
   1147c:	ldr	r0, [r6]
   11480:	cmp	r0, r5
   11484:	ble	114a4 <vetor_insere@@Base+0x90>
   11488:	ldr	r1, [r6, #8]
   1148c:	add	r2, r1, r0, lsl #2
   11490:	ldr	r2, [r2, #-4]
   11494:	str	r2, [r1, r0, lsl #2]
   11498:	sub	r0, r0, #1
   1149c:	cmp	r0, r5
   114a0:	bgt	11488 <vetor_insere@@Base+0x74>
   114a4:	mov	r0, r7
   114a8:	bl	10d34 <strlen@plt>
   114ac:	add	r0, r0, #1
   114b0:	mov	r1, #1
   114b4:	bl	10c98 <calloc@plt>
   114b8:	ldr	r1, [r6, #8]
   114bc:	str	r0, [r1, r5, lsl #2]
   114c0:	cmp	r0, #0
   114c4:	beq	114e0 <vetor_insere@@Base+0xcc>
   114c8:	mov	r1, r7
   114cc:	bl	10cec <strcpy@plt>
   114d0:	ldr	r0, [r6]
   114d4:	add	r0, r0, #1
   114d8:	str	r0, [r6]
   114dc:	mov	r4, r5
   114e0:	mov	r0, r4
   114e4:	pop	{r4, r5, r6, r7, fp, pc}

000114e8 <vetor_remove@@Base>:
   114e8:	push	{r4, r5, fp, lr}
   114ec:	add	fp, sp, #8
   114f0:	mov	r4, r0
   114f4:	mvn	r0, #0
   114f8:	cmp	r4, #0
   114fc:	popeq	{r4, r5, fp, pc}
   11500:	mov	r5, r1
   11504:	cmp	r1, #0
   11508:	ldrge	r1, [r4]
   1150c:	cmpge	r1, r5
   11510:	bgt	11518 <vetor_remove@@Base+0x30>
   11514:	pop	{r4, r5, fp, pc}
   11518:	ldr	r0, [r4, #8]
   1151c:	ldr	r0, [r0, r5, lsl #2]
   11520:	bl	10cc8 <free@plt>
   11524:	ldr	r0, [r4]
   11528:	add	r1, r5, #1
   1152c:	cmp	r1, r0
   11530:	bge	1155c <vetor_remove@@Base+0x74>
   11534:	ldr	r0, [r4]
   11538:	ldr	r1, [r4, #8]
   1153c:	add	r2, r1, r5, lsl #2
   11540:	ldr	r2, [r2, #4]
   11544:	str	r2, [r1, r5, lsl #2]
   11548:	add	r1, r5, #1
   1154c:	add	r2, r5, #2
   11550:	cmp	r2, r0
   11554:	mov	r5, r1
   11558:	blt	11538 <vetor_remove@@Base+0x50>
   1155c:	sub	r0, r0, #1
   11560:	str	r0, [r4]
   11564:	mov	r0, #0
   11568:	pop	{r4, r5, fp, pc}

0001156c <vetor_pesquisa@@Base>:
   1156c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11570:	add	fp, sp, #24
   11574:	mvn	r8, #0
   11578:	cmp	r0, #0
   1157c:	beq	115c4 <vetor_pesquisa@@Base+0x58>
   11580:	mov	r6, r0
   11584:	ldr	r0, [r0]
   11588:	cmp	r0, #1
   1158c:	blt	115c4 <vetor_pesquisa@@Base+0x58>
   11590:	mov	r5, r1
   11594:	ldr	r4, [r6, #8]
   11598:	mov	r7, #0
   1159c:	ldr	r0, [r4, r7, lsl #2]
   115a0:	mov	r1, r5
   115a4:	bl	10ca4 <strcmp@plt>
   115a8:	cmp	r0, #0
   115ac:	moveq	r0, r7
   115b0:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   115b4:	add	r7, r7, #1
   115b8:	ldr	r0, [r6]
   115bc:	cmp	r7, r0
   115c0:	blt	1159c <vetor_pesquisa@@Base+0x30>
   115c4:	mov	r0, r8
   115c8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000115cc <vetor_ordena@@Base>:
   115cc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   115d0:	add	fp, sp, #24
   115d4:	cmp	r0, #0
   115d8:	mvneq	r0, #0
   115dc:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   115e0:	mov	r4, r0
   115e4:	ldr	r1, [r0]
   115e8:	mov	r0, #0
   115ec:	cmp	r1, #2
   115f0:	poplt	{r4, r5, r6, r7, r8, r9, fp, pc}
   115f4:	mov	r9, #1
   115f8:	mov	r8, #0
   115fc:	ldr	r0, [r4, #8]
   11600:	ldr	r5, [r0, r9, lsl #2]
   11604:	mov	r7, r8
   11608:	ldr	r6, [r4, #8]
   1160c:	ldr	r1, [r6, r7, lsl #2]
   11610:	mov	r0, r5
   11614:	bl	10ca4 <strcmp@plt>
   11618:	cmn	r0, #1
   1161c:	bgt	11644 <vetor_ordena@@Base+0x78>
   11620:	ldr	r0, [r6, r7, lsl #2]!
   11624:	str	r0, [r6, #4]
   11628:	sub	r0, r7, #1
   1162c:	add	r1, r7, #1
   11630:	cmp	r1, #1
   11634:	mov	r7, r0
   11638:	bgt	11608 <vetor_ordena@@Base+0x3c>
   1163c:	add	r0, r0, #1
   11640:	b	11648 <vetor_ordena@@Base+0x7c>
   11644:	add	r0, r7, #1
   11648:	ldr	r1, [r4, #8]
   1164c:	str	r5, [r1, r0, lsl #2]
   11650:	add	r8, r8, #1
   11654:	add	r9, r9, #1
   11658:	ldr	r0, [r4]
   1165c:	cmp	r9, r0
   11660:	blt	115fc <vetor_ordena@@Base+0x30>
   11664:	mov	r0, #0
   11668:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001166c <novo_str@@Base>:
   1166c:	push	{r4, r5, r6, sl, fp, lr}
   11670:	add	fp, sp, #16
   11674:	mov	r6, r0
   11678:	mov	r0, #12
   1167c:	bl	10d04 <malloc@plt>
   11680:	mov	r5, #0
   11684:	cmp	r0, #0
   11688:	beq	116c4 <novo_str@@Base+0x58>
   1168c:	mov	r4, r0
   11690:	mov	r0, r6
   11694:	bl	10d34 <strlen@plt>
   11698:	add	r0, r0, #1
   1169c:	bl	10d04 <malloc@plt>
   116a0:	str	r0, [r4]
   116a4:	cmp	r0, #0
   116a8:	beq	116cc <novo_str@@Base+0x60>
   116ac:	mov	r1, r6
   116b0:	bl	10cec <strcpy@plt>
   116b4:	mov	r0, #0
   116b8:	str	r0, [r4, #4]
   116bc:	str	r0, [r4, #8]
   116c0:	mov	r5, r4
   116c4:	mov	r0, r5
   116c8:	pop	{r4, r5, r6, sl, fp, pc}
   116cc:	mov	r0, r4
   116d0:	bl	10cc8 <free@plt>
   116d4:	mov	r0, r5
   116d8:	pop	{r4, r5, r6, sl, fp, pc}

000116dc <lista_nova@@Base>:
   116dc:	push	{fp, lr}
   116e0:	mov	fp, sp
   116e4:	mov	r0, #12
   116e8:	bl	10d04 <malloc@plt>
   116ec:	cmp	r0, #0
   116f0:	movne	r1, #0
   116f4:	strne	r1, [r0]
   116f8:	strne	r1, [r0, #4]
   116fc:	strne	r1, [r0, #8]
   11700:	popne	{fp, pc}
   11704:	mov	r0, #0
   11708:	pop	{fp, pc}

0001170c <lista_apaga@@Base>:
   1170c:	cmp	r0, #0
   11710:	bxeq	lr
   11714:	push	{r4, r5, fp, lr}
   11718:	add	fp, sp, #8
   1171c:	mov	r4, r0
   11720:	b	1173c <lista_apaga@@Base+0x30>
   11724:	ldr	r0, [r5, #4]
   11728:	str	r0, [r4]
   1172c:	ldr	r0, [r5]
   11730:	bl	10cc8 <free@plt>
   11734:	mov	r0, r5
   11738:	bl	10cc8 <free@plt>
   1173c:	ldr	r5, [r4]
   11740:	cmp	r5, #0
   11744:	bne	11724 <lista_apaga@@Base+0x18>
   11748:	mov	r0, r4
   1174c:	pop	{r4, r5, fp, lr}
   11750:	b	10cc8 <free@plt>

00011754 <lista_tamanho@@Base>:
   11754:	cmp	r0, #0
   11758:	ldrne	r0, [r0, #8]
   1175c:	mvneq	r0, #0
   11760:	bx	lr

00011764 <lista_inicio@@Base>:
   11764:	cmp	r0, #0
   11768:	ldrne	r0, [r0]
   1176c:	moveq	r0, #0
   11770:	bx	lr

00011774 <lista_fim@@Base>:
   11774:	cmp	r0, #0
   11778:	ldrne	r0, [r0, #4]
   1177c:	moveq	r0, #0
   11780:	bx	lr

00011784 <lista_insere@@Base>:
   11784:	push	{r4, r5, r6, sl, fp, lr}
   11788:	add	fp, sp, #16
   1178c:	mov	r6, #0
   11790:	cmp	r0, #0
   11794:	cmpne	r1, #0
   11798:	bne	117a4 <lista_insere@@Base+0x20>
   1179c:	mov	r0, r6
   117a0:	pop	{r4, r5, r6, sl, fp, pc}
   117a4:	mov	r5, r2
   117a8:	mov	r4, r0
   117ac:	mov	r0, r1
   117b0:	bl	1166c <novo_str@@Base>
   117b4:	cmp	r0, #0
   117b8:	beq	1179c <lista_insere@@Base+0x18>
   117bc:	ldr	r1, [r4]
   117c0:	ldr	r2, [r4, #8]
   117c4:	add	r2, r2, #1
   117c8:	str	r2, [r4, #8]
   117cc:	cmp	r5, #0
   117d0:	beq	117f4 <lista_insere@@Base+0x70>
   117d4:	cmp	r1, r5
   117d8:	beq	1180c <lista_insere@@Base+0x88>
   117dc:	ldr	r1, [r5, #8]
   117e0:	str	r5, [r0, #4]
   117e4:	str	r1, [r0, #8]
   117e8:	str	r0, [r1, #4]
   117ec:	str	r0, [r5, #8]
   117f0:	b	11824 <lista_insere@@Base+0xa0>
   117f4:	cmp	r1, #0
   117f8:	beq	1181c <lista_insere@@Base+0x98>
   117fc:	ldr	r1, [r4, #4]
   11800:	str	r1, [r0, #8]
   11804:	str	r0, [r1, #4]
   11808:	b	11820 <lista_insere@@Base+0x9c>
   1180c:	str	r1, [r0, #4]
   11810:	str	r0, [r1, #8]
   11814:	str	r0, [r4]
   11818:	b	11824 <lista_insere@@Base+0xa0>
   1181c:	str	r0, [r4]
   11820:	str	r0, [r4, #4]
   11824:	mov	r6, r0
   11828:	mov	r0, r6
   1182c:	pop	{r4, r5, r6, sl, fp, pc}

00011830 <lista_remove@@Base>:
   11830:	push	{r4, r5, fp, lr}
   11834:	add	fp, sp, #8
   11838:	mov	r5, #0
   1183c:	cmp	r0, #0
   11840:	movne	r4, r1
   11844:	cmpne	r1, #0
   11848:	bne	11854 <lista_remove@@Base+0x24>
   1184c:	mov	r0, r5
   11850:	pop	{r4, r5, fp, pc}
   11854:	ldr	r1, [r0, #8]
   11858:	sub	r1, r1, #1
   1185c:	str	r1, [r0, #8]
   11860:	ldmib	r4, {r1, r2}
   11864:	cmp	r2, #0
   11868:	mov	r3, r0
   1186c:	addne	r3, r2, #4
   11870:	str	r1, [r3]
   11874:	ldr	r5, [r4, #4]
   11878:	ldr	r1, [r4, #8]
   1187c:	add	r2, r5, #8
   11880:	cmp	r5, #0
   11884:	addeq	r2, r0, #4
   11888:	str	r1, [r2]
   1188c:	ldr	r0, [r4]
   11890:	bl	10cc8 <free@plt>
   11894:	mov	r0, r4
   11898:	bl	10cc8 <free@plt>
   1189c:	mov	r0, r5
   118a0:	pop	{r4, r5, fp, pc}

000118a4 <lista_pesquisa@@Base>:
   118a4:	push	{r4, r5, r6, sl, fp, lr}
   118a8:	add	fp, sp, #16
   118ac:	mov	r4, #0
   118b0:	cmp	r0, #0
   118b4:	movne	r5, r1
   118b8:	cmpne	r1, #0
   118bc:	bne	118c8 <lista_pesquisa@@Base+0x24>
   118c0:	mov	r0, r4
   118c4:	pop	{r4, r5, r6, sl, fp, pc}
   118c8:	cmp	r2, #1
   118cc:	bhi	118c0 <lista_pesquisa@@Base+0x1c>
   118d0:	cmp	r2, #0
   118d4:	beq	1190c <lista_pesquisa@@Base+0x68>
   118d8:	ldr	r6, [r0, #4]
   118dc:	cmp	r6, #0
   118e0:	bne	118f4 <lista_pesquisa@@Base+0x50>
   118e4:	b	118c0 <lista_pesquisa@@Base+0x1c>
   118e8:	ldr	r6, [r6, #8]
   118ec:	cmp	r6, #0
   118f0:	beq	118c0 <lista_pesquisa@@Base+0x1c>
   118f4:	ldr	r0, [r6]
   118f8:	mov	r1, r5
   118fc:	bl	10ca4 <strcmp@plt>
   11900:	cmp	r0, #0
   11904:	bne	118e8 <lista_pesquisa@@Base+0x44>
   11908:	b	1193c <lista_pesquisa@@Base+0x98>
   1190c:	ldr	r6, [r0]
   11910:	cmp	r6, #0
   11914:	bne	11928 <lista_pesquisa@@Base+0x84>
   11918:	b	118c0 <lista_pesquisa@@Base+0x1c>
   1191c:	ldr	r6, [r6, #4]
   11920:	cmp	r6, #0
   11924:	beq	118c0 <lista_pesquisa@@Base+0x1c>
   11928:	ldr	r0, [r6]
   1192c:	mov	r1, r5
   11930:	bl	10ca4 <strcmp@plt>
   11934:	cmp	r0, #0
   11938:	bne	1191c <lista_pesquisa@@Base+0x78>
   1193c:	mov	r4, r6
   11940:	mov	r0, r4
   11944:	pop	{r4, r5, r6, sl, fp, pc}

00011948 <lista_ordena@@Base>:
   11948:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1194c:	add	fp, sp, #24
   11950:	cmp	r0, #0
   11954:	beq	119c4 <lista_ordena@@Base+0x7c>
   11958:	ldr	r4, [r0]
   1195c:	mov	r5, r4
   11960:	ldr	r7, [r5, #4]!
   11964:	mov	r8, #0
   11968:	cmp	r7, #0
   1196c:	bne	1199c <lista_ordena@@Base+0x54>
   11970:	b	119c8 <lista_ordena@@Base+0x80>
   11974:	cmp	r6, r4
   11978:	ldrne	r0, [r4]
   1197c:	ldrne	r1, [r6]
   11980:	strne	r1, [r4]
   11984:	strne	r0, [r6]
   11988:	ldr	r4, [r5]
   1198c:	mov	r5, r4
   11990:	ldr	r7, [r5, #4]!
   11994:	cmp	r7, #0
   11998:	beq	119c8 <lista_ordena@@Base+0x80>
   1199c:	mov	r6, r4
   119a0:	ldr	r1, [r6]
   119a4:	ldr	r0, [r7]
   119a8:	bl	10ca4 <strcmp@plt>
   119ac:	cmp	r0, #0
   119b0:	movlt	r6, r7
   119b4:	ldr	r7, [r7, #4]
   119b8:	cmp	r7, #0
   119bc:	bne	119a0 <lista_ordena@@Base+0x58>
   119c0:	b	11974 <lista_ordena@@Base+0x2c>
   119c4:	mvn	r8, #0
   119c8:	mov	r0, r8
   119cc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000119d0 <lista_inverte@@Base>:
   119d0:	cmp	r0, #0
   119d4:	mvneq	r1, #0
   119d8:	moveq	r0, r1
   119dc:	bxeq	lr
   119e0:	ldr	r2, [r0, #8]
   119e4:	mov	r1, #0
   119e8:	cmp	r2, #2
   119ec:	blt	11a64 <lista_inverte@@Base+0x94>
   119f0:	beq	11a38 <lista_inverte@@Base+0x68>
   119f4:	sub	r1, r2, #2
   119f8:	ldr	r2, [r0]
   119fc:	ldr	r2, [r2, #4]
   11a00:	ldr	ip, [r2, #4]
   11a04:	ldr	r3, [r2, #8]
   11a08:	str	ip, [r3, #4]
   11a0c:	ldr	ip, [r2, #4]
   11a10:	ldr	r3, [r2, #8]
   11a14:	str	r3, [ip, #8]
   11a18:	ldr	r3, [r0]
   11a1c:	str	r3, [r2, #4]
   11a20:	ldr	r3, [r0]
   11a24:	str	r2, [r3, #8]
   11a28:	str	r2, [r0]
   11a2c:	subs	r1, r1, #1
   11a30:	mov	r2, ip
   11a34:	bne	11a00 <lista_inverte@@Base+0x30>
   11a38:	ldr	r2, [r0, #4]
   11a3c:	ldr	r3, [r2, #8]
   11a40:	str	r3, [r0, #4]
   11a44:	mov	r1, #0
   11a48:	str	r1, [r3, #4]
   11a4c:	str	r1, [r2, #8]
   11a50:	ldr	r3, [r0]
   11a54:	str	r3, [r2, #4]
   11a58:	ldr	r3, [r0]
   11a5c:	str	r2, [r3, #8]
   11a60:	str	r2, [r0]
   11a64:	mov	r0, r1
   11a68:	bx	lr

00011a6c <__libc_csu_init@@Base>:
   11a6c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11a70:	mov	r7, r0
   11a74:	ldr	r6, [pc, #72]	; 11ac4 <__libc_csu_init@@Base+0x58>
   11a78:	ldr	r5, [pc, #72]	; 11ac8 <__libc_csu_init@@Base+0x5c>
   11a7c:	add	r6, pc, r6
   11a80:	add	r5, pc, r5
   11a84:	sub	r6, r6, r5
   11a88:	mov	r8, r1
   11a8c:	mov	r9, r2
   11a90:	bl	10c78 <calloc@plt-0x20>
   11a94:	asrs	r6, r6, #2
   11a98:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11a9c:	mov	r4, #0
   11aa0:	add	r4, r4, #1
   11aa4:	ldr	r3, [r5], #4
   11aa8:	mov	r2, r9
   11aac:	mov	r1, r8
   11ab0:	mov	r0, r7
   11ab4:	blx	r3
   11ab8:	cmp	r6, r4
   11abc:	bne	11aa0 <__libc_csu_init@@Base+0x34>
   11ac0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11ac4:	andeq	r0, r1, r8, lsl #9
   11ac8:	andeq	r0, r1, r0, lsl #9

00011acc <__libc_csu_fini@@Base>:
   11acc:	bx	lr

Disassembly of section .fini:

00011ad0 <.fini>:
   11ad0:	push	{r3, lr}
   11ad4:	pop	{r3, pc}
