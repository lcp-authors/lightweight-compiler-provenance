
../repos/charybdis/modules/.libs/m_kline.so:     file format elf32-littlearm


Disassembly of section .init:

00000d48 <_init>:
 d48:	push	{r3, lr}
 d4c:	bl	f6c <call_weak_fn>
 d50:	pop	{r3, pc}

Disassembly of section .plt:

00000d54 <.plt>:
 d54:	push	{lr}		; (str lr, [sp, #-4]!)
 d58:	ldr	lr, [pc, #4]	; d64 <.plt+0x10>
 d5c:	add	lr, pc, lr
 d60:	ldr	pc, [lr, #8]!
 d64:	.word	0x0001329c

00000d68 <propagate_generic@plt>:
 d68:	add	ip, pc, #0, 12
 d6c:	add	ip, ip, #77824	; 0x13000
 d70:	ldr	pc, [ip, #668]!	; 0x29c

00000d74 <make_conf@plt>:
 d74:	add	ip, pc, #0, 12
 d78:	add	ip, ip, #77824	; 0x13000
 d7c:	ldr	pc, [ip, #660]!	; 0x294

00000d80 <parse_netmask_strict@plt>:
 d80:	add	ip, pc, #0, 12
 d84:	add	ip, ip, #77824	; 0x13000
 d88:	ldr	pc, [ip, #652]!	; 0x28c

00000d8c <rb_current_time@plt>:
 d8c:	add	ip, pc, #0, 12
 d90:	add	ip, ip, #77824	; 0x13000
 d94:	ldr	pc, [ip, #644]!	; 0x284

00000d98 <__cxa_finalize@plt>:
 d98:	add	ip, pc, #0, 12
 d9c:	add	ip, ip, #77824	; 0x13000
 da0:	ldr	pc, [ip, #636]!	; 0x27c

00000da4 <strtol@plt>:
 da4:	add	ip, pc, #0, 12
 da8:	add	ip, ip, #77824	; 0x13000
 dac:	ldr	pc, [ip, #628]!	; 0x274

00000db0 <sendto_one@plt>:
 db0:	add	ip, pc, #0, 12
 db4:	add	ip, ip, #77824	; 0x13000
 db8:	ldr	pc, [ip, #620]!	; 0x26c

00000dbc <find_conf_by_address@plt>:
 dbc:	add	ip, pc, #0, 12
 dc0:	add	ip, ip, #77824	; 0x13000
 dc4:	ldr	pc, [ip, #612]!	; 0x264

00000dc8 <add_temp_kline@plt>:
 dc8:	add	ip, pc, #0, 12
 dcc:	add	ip, ip, #77824	; 0x13000
 dd0:	ldr	pc, [ip, #604]!	; 0x25c

00000dd4 <replace_old_ban@plt>:
 dd4:	add	ip, pc, #0, 12
 dd8:	add	ip, ip, #77824	; 0x13000
 ddc:	ldr	pc, [ip, #596]!	; 0x254

00000de0 <rb_outofmemory@plt>:
 de0:	add	ip, pc, #0, 12
 de4:	add	ip, ip, #77824	; 0x13000
 de8:	ldr	pc, [ip, #588]!	; 0x24c

00000dec <operhash_delete@plt>:
 dec:	add	ip, pc, #0, 12
 df0:	add	ip, ip, #77824	; 0x13000
 df4:	ldr	pc, [ip, #580]!	; 0x244

00000df8 <sendto_realops_snomask@plt>:
 df8:	add	ip, pc, #0, 12
 dfc:	add	ip, ip, #77824	; 0x13000
 e00:	ldr	pc, [ip, #572]!	; 0x23c

00000e04 <bandb_add@plt>:
 e04:	add	ip, pc, #0, 12
 e08:	add	ip, ip, #77824	; 0x13000
 e0c:	ldr	pc, [ip, #564]!	; 0x234

00000e10 <deactivate_conf@plt>:
 e10:	add	ip, pc, #0, 12
 e14:	add	ip, ip, #77824	; 0x13000
 e18:	ldr	pc, [ip, #556]!	; 0x22c

00000e1c <get_oper_name@plt>:
 e1c:	add	ip, pc, #0, 12
 e20:	add	ip, ip, #77824	; 0x13000
 e24:	ldr	pc, [ip, #548]!	; 0x224

00000e28 <rb_free_rb_dlink_node@plt>:
 e28:	add	ip, pc, #0, 12
 e2c:	add	ip, ip, #77824	; 0x13000
 e30:	ldr	pc, [ip, #540]!	; 0x21c

00000e34 <cluster_generic@plt>:
 e34:	add	ip, pc, #0, 12
 e38:	add	ip, ip, #77824	; 0x13000
 e3c:	ldr	pc, [ip, #532]!	; 0x214

00000e40 <operhash_add@plt>:
 e40:	add	ip, pc, #0, 12
 e44:	add	ip, ip, #77824	; 0x13000
 e48:	ldr	pc, [ip, #524]!	; 0x20c

00000e4c <check_one_kline@plt>:
 e4c:	add	ip, pc, #0, 12
 e50:	add	ip, ip, #77824	; 0x13000
 e54:	ldr	pc, [ip, #516]!	; 0x204

00000e58 <strcpy@plt>:
 e58:	add	ip, pc, #0, 12
 e5c:	add	ip, ip, #77824	; 0x13000
 e60:	ldr	pc, [ip, #508]!	; 0x1fc

00000e64 <sendto_server@plt>:
 e64:	add	ip, pc, #0, 12
 e68:	add	ip, ip, #77824	; 0x13000
 e6c:	ldr	pc, [ip, #500]!	; 0x1f4

00000e70 <rb_set_time@plt>:
 e70:	add	ip, pc, #0, 12
 e74:	add	ip, ip, #77824	; 0x13000
 e78:	ldr	pc, [ip, #492]!	; 0x1ec

00000e7c <valid_wild_card@plt>:
 e7c:	add	ip, pc, #0, 12
 e80:	add	ip, ip, #77824	; 0x13000
 e84:	ldr	pc, [ip, #484]!	; 0x1e4

00000e88 <malloc@plt>:
 e88:	add	ip, pc, #0, 12
 e8c:	add	ip, ip, #77824	; 0x13000
 e90:	ldr	pc, [ip, #476]!	; 0x1dc

00000e94 <add_conf_by_address@plt>:
 e94:	add	ip, pc, #0, 12
 e98:	add	ip, ip, #77824	; 0x13000
 e9c:	ldr	pc, [ip, #468]!	; 0x1d4

00000ea0 <__gmon_start__@plt>:
 ea0:	add	ip, pc, #0, 12
 ea4:	add	ip, ip, #77824	; 0x13000
 ea8:	ldr	pc, [ip, #460]!	; 0x1cc

00000eac <rb_make_rb_dlink_node@plt>:
 eac:	add	ip, pc, #0, 12
 eb0:	add	ip, ip, #77824	; 0x13000
 eb4:	ldr	pc, [ip, #452]!	; 0x1c4

00000eb8 <strlen@plt>:
 eb8:	add	ip, pc, #0, 12
 ebc:	add	ip, ip, #77824	; 0x13000
 ec0:	ldr	pc, [ip, #444]!	; 0x1bc

00000ec4 <strchr@plt>:
 ec4:	add	ip, pc, #0, 12
 ec8:	add	ip, ip, #77824	; 0x13000
 ecc:	ldr	pc, [ip, #436]!	; 0x1b4

00000ed0 <delete_one_address_conf@plt>:
 ed0:	add	ip, pc, #0, 12
 ed4:	add	ip, ip, #77824	; 0x13000
 ed8:	ldr	pc, [ip, #428]!	; 0x1ac

00000edc <ilog@plt>:
 edc:	add	ip, pc, #0, 12
 ee0:	add	ip, ip, #77824	; 0x13000
 ee4:	ldr	pc, [ip, #420]!	; 0x1a4

00000ee8 <match@plt>:
 ee8:	add	ip, pc, #0, 12
 eec:	add	ip, ip, #77824	; 0x13000
 ef0:	ldr	pc, [ip, #412]!	; 0x19c

00000ef4 <valid_temp_time@plt>:
 ef4:	add	ip, pc, #0, 12
 ef8:	add	ip, ip, #77824	; 0x13000
 efc:	ldr	pc, [ip, #404]!	; 0x194

00000f00 <remove_reject_mask@plt>:
 f00:	add	ip, pc, #0, 12
 f04:	add	ip, ip, #77824	; 0x13000
 f08:	ldr	pc, [ip, #396]!	; 0x18c

00000f0c <sendto_one_notice@plt>:
 f0c:	add	ip, pc, #0, 12
 f10:	add	ip, ip, #77824	; 0x13000
 f14:	ldr	pc, [ip, #388]!	; 0x184

00000f18 <bandb_del@plt>:
 f18:	add	ip, pc, #0, 12
 f1c:	add	ip, ip, #77824	; 0x13000
 f20:	ldr	pc, [ip, #380]!	; 0x17c

00000f24 <find_exact_conf_by_address@plt>:
 f24:	add	ip, pc, #0, 12
 f28:	add	ip, ip, #77824	; 0x13000
 f2c:	ldr	pc, [ip, #372]!	; 0x174

00000f30 <rb_strlcpy@plt>:
 f30:	add	ip, pc, #0, 12
 f34:	add	ip, ip, #77824	; 0x13000
 f38:	ldr	pc, [ip, #364]!	; 0x16c

00000f3c <find_shared_conf@plt>:
 f3c:	add	ip, pc, #0, 12
 f40:	add	ip, ip, #77824	; 0x13000
 f44:	ldr	pc, [ip, #356]!	; 0x164

00000f48 <privilegeset_in_set@plt>:
 f48:	add	ip, pc, #0, 12
 f4c:	add	ip, ip, #77824	; 0x13000
 f50:	ldr	pc, [ip, #348]!	; 0x15c

00000f54 <irccmp@plt>:
 f54:	add	ip, pc, #0, 12
 f58:	add	ip, ip, #77824	; 0x13000
 f5c:	ldr	pc, [ip, #340]!	; 0x154

00000f60 <__assert_fail@plt>:
 f60:	add	ip, pc, #0, 12
 f64:	add	ip, ip, #77824	; 0x13000
 f68:	ldr	pc, [ip, #332]!	; 0x14c

Disassembly of section .text:

00000f6c <call_weak_fn>:
     f6c:	ldr	r3, [pc, #20]	; f88 <call_weak_fn+0x1c>
     f70:	ldr	r2, [pc, #20]	; f8c <call_weak_fn+0x20>
     f74:	add	r3, pc, r3
     f78:	ldr	r2, [r3, r2]
     f7c:	cmp	r2, #0
     f80:	bxeq	lr
     f84:	b	ea0 <__gmon_start__@plt>
     f88:	.word	0x00013084
     f8c:	.word	0x000000d0

00000f90 <deregister_tm_clones>:
     f90:	ldr	r0, [pc, #44]	; fc4 <deregister_tm_clones+0x34>
     f94:	ldr	r3, [pc, #44]	; fc8 <deregister_tm_clones+0x38>
     f98:	add	r0, pc, r0
     f9c:	add	r3, pc, r3
     fa0:	cmp	r3, r0
     fa4:	ldr	r3, [pc, #32]	; fcc <deregister_tm_clones+0x3c>
     fa8:	add	r3, pc, r3
     fac:	bxeq	lr
     fb0:	ldr	r2, [pc, #24]	; fd0 <deregister_tm_clones+0x40>
     fb4:	ldr	r3, [r3, r2]
     fb8:	cmp	r3, #0
     fbc:	bxeq	lr
     fc0:	bx	r3
     fc4:	.word	0x0001320c
     fc8:	.word	0x00013208
     fcc:	.word	0x00013050
     fd0:	.word	0x000000c0

00000fd4 <register_tm_clones>:
     fd4:	ldr	r0, [pc, #56]	; 1014 <register_tm_clones+0x40>
     fd8:	ldr	r3, [pc, #56]	; 1018 <register_tm_clones+0x44>
     fdc:	add	r0, pc, r0
     fe0:	add	r3, pc, r3
     fe4:	sub	r1, r3, r0
     fe8:	ldr	r3, [pc, #44]	; 101c <register_tm_clones+0x48>
     fec:	asr	r1, r1, #2
     ff0:	add	r3, pc, r3
     ff4:	add	r1, r1, r1, lsr #31
     ff8:	asrs	r1, r1, #1
     ffc:	bxeq	lr
    1000:	ldr	r2, [pc, #24]	; 1020 <register_tm_clones+0x4c>
    1004:	ldr	r3, [r3, r2]
    1008:	cmp	r3, #0
    100c:	bxeq	lr
    1010:	bx	r3
    1014:	.word	0x000131c8
    1018:	.word	0x000131c4
    101c:	.word	0x00013008
    1020:	.word	0x000000e0

00001024 <__do_global_dtors_aux>:
    1024:	ldr	r3, [pc, #76]	; 1078 <__do_global_dtors_aux+0x54>
    1028:	ldr	r2, [pc, #76]	; 107c <__do_global_dtors_aux+0x58>
    102c:	add	r3, pc, r3
    1030:	add	r2, pc, r2
    1034:	ldrb	r3, [r3]
    1038:	cmp	r3, #0
    103c:	bxne	lr
    1040:	ldr	r3, [pc, #56]	; 1080 <__do_global_dtors_aux+0x5c>
    1044:	push	{r4, lr}
    1048:	ldr	r3, [r2, r3]
    104c:	cmp	r3, #0
    1050:	beq	1060 <__do_global_dtors_aux+0x3c>
    1054:	ldr	r3, [pc, #40]	; 1084 <__do_global_dtors_aux+0x60>
    1058:	ldr	r0, [pc, r3]
    105c:	bl	d98 <__cxa_finalize@plt>
    1060:	bl	f90 <deregister_tm_clones>
    1064:	ldr	r3, [pc, #28]	; 1088 <__do_global_dtors_aux+0x64>
    1068:	mov	r2, #1
    106c:	add	r3, pc, r3
    1070:	strb	r2, [r3]
    1074:	pop	{r4, pc}
    1078:	.word	0x00013178
    107c:	.word	0x00012fc8
    1080:	.word	0x000000b8
    1084:	.word	0x0001308c
    1088:	.word	0x00013138

0000108c <frame_dummy>:
    108c:	b	fd4 <register_tm_clones>

00001090 <ms_kline>:
    1090:	push	{r4, r5, r6, r7, fp, lr}
    1094:	add	fp, sp, #16
    1098:	sub	sp, sp, #24
    109c:	ldr	r7, [fp, #8]
    10a0:	mov	r4, r2
    10a4:	mov	r1, #0
    10a8:	mov	r2, #10
    10ac:	mov	r6, r3
    10b0:	ldr	r0, [r7, #8]
    10b4:	bl	da4 <strtol@plt>
    10b8:	cmp	r6, #6
    10bc:	blt	1168 <ms_kline+0xd8>
    10c0:	mov	r5, r0
    10c4:	ldr	r0, [r7, #20]
    10c8:	cmp	r0, #0
    10cc:	beq	1168 <ms_kline+0xd8>
    10d0:	ldrb	r1, [r0]
    10d4:	cmp	r1, #0
    10d8:	beq	1168 <ms_kline+0xd8>
    10dc:	ldr	r1, [pc, #140]	; 1170 <ms_kline+0xe0>
    10e0:	ldr	r1, [pc, r1]
    10e4:	ldr	r2, [r7, #4]
    10e8:	ldr	ip, [r7, #12]
    10ec:	ldr	r6, [r7, #16]
    10f0:	ldr	r3, [r1]
    10f4:	ldr	r1, [pc, #120]	; 1174 <ms_kline+0xe4>
    10f8:	add	r1, pc, r1
    10fc:	stm	sp, {r1, r5, ip}
    1100:	str	r0, [sp, #16]
    1104:	str	r6, [sp, #12]
    1108:	mov	r0, r4
    110c:	ldr	r1, [pc, #100]	; 1178 <ms_kline+0xe8>
    1110:	add	r1, pc, r1
    1114:	bl	d68 <propagate_generic@plt>
    1118:	ldr	r0, [r7, #4]
    111c:	ldr	r1, [pc, #88]	; 117c <ms_kline+0xec>
    1120:	ldr	r1, [pc, r1]
    1124:	add	r1, r1, #88	; 0x58
    1128:	bl	ee8 <match@plt>
    112c:	cmp	r0, #0
    1130:	beq	1168 <ms_kline+0xd8>
    1134:	ldrh	r0, [r4, #80]	; 0x50
    1138:	cmp	r0, #64	; 0x40
    113c:	bne	1168 <ms_kline+0xd8>
    1140:	ldr	r0, [r4, #24]
    1144:	cmp	r0, #0
    1148:	beq	1168 <ms_kline+0xd8>
    114c:	ldr	r0, [r7, #20]
    1150:	ldr	r2, [r7, #12]
    1154:	ldr	r3, [r7, #16]
    1158:	mov	r1, r5
    115c:	str	r0, [sp]
    1160:	mov	r0, r4
    1164:	bl	25a4 <handle_remote_kline>
    1168:	sub	sp, fp, #16
    116c:	pop	{r4, r5, r6, r7, fp, pc}
    1170:	.word	0x00012ff0
    1174:	.word	0x00001b5d
    1178:	.word	0x00001a96
    117c:	.word	0x00012fbc

00001180 <me_kline>:
    1180:	push	{r4, r5, fp, lr}
    1184:	add	fp, sp, #8
    1188:	sub	sp, sp, #8
    118c:	ldrh	r0, [r2, #80]	; 0x50
    1190:	cmp	r0, #64	; 0x40
    1194:	bne	11d8 <me_kline+0x58>
    1198:	ldr	r0, [r2, #24]
    119c:	mov	r4, r2
    11a0:	cmp	r0, #0
    11a4:	beq	11d8 <me_kline+0x58>
    11a8:	ldr	r5, [fp, #8]
    11ac:	mov	r1, #0
    11b0:	mov	r2, #10
    11b4:	ldr	r0, [r5, #4]
    11b8:	bl	da4 <strtol@plt>
    11bc:	mov	r1, r0
    11c0:	ldr	r0, [r5, #16]
    11c4:	ldr	r2, [r5, #8]
    11c8:	ldr	r3, [r5, #12]
    11cc:	str	r0, [sp]
    11d0:	mov	r0, r4
    11d4:	bl	25a4 <handle_remote_kline>
    11d8:	sub	sp, fp, #8
    11dc:	pop	{r4, r5, fp, pc}

000011e0 <mo_kline>:
    11e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    11e4:	add	fp, sp, #28
    11e8:	sub	sp, sp, #100	; 0x64
    11ec:	ldr	r0, [r2, #24]
    11f0:	ldr	r1, [pc, #2300]	; 1af4 <mo_kline+0x914>
    11f4:	mov	r4, r2
    11f8:	ldr	r1, [pc, r1]
    11fc:	ldr	r8, [r1, #324]	; 0x144
    1200:	cmp	r8, #0
    1204:	mov	sl, r8
    1208:	movwne	sl, #1
    120c:	cmp	r0, #0
    1210:	beq	12ac <mo_kline+0xcc>
    1214:	ldr	r0, [r0, #36]	; 0x24
    1218:	cmp	r0, #0
    121c:	beq	12ac <mo_kline+0xcc>
    1220:	ldr	r1, [pc, #2256]	; 1af8 <mo_kline+0x918>
    1224:	mov	r6, r3
    1228:	add	r1, pc, r1
    122c:	bl	f48 <privilegeset_in_set@plt>
    1230:	cmp	r0, #0
    1234:	beq	12ac <mo_kline+0xcc>
    1238:	ldr	r5, [fp, #8]
    123c:	sub	r0, fp, #110	; 0x6e
    1240:	str	r4, [fp, #-116]	; 0xffffff8c
    1244:	add	r0, r0, #1
    1248:	str	r0, [fp, #-120]	; 0xffffff88
    124c:	ldr	r0, [r5, #4]
    1250:	bl	ef4 <valid_temp_time@plt>
    1254:	cmn	r0, #1
    1258:	mov	r9, #1
    125c:	mov	r4, #0
    1260:	mov	r1, #64	; 0x40
    1264:	movwgt	r9, #2
    1268:	movle	r0, r4
    126c:	ldr	r7, [r5, r9, lsl #2]
    1270:	str	r0, [fp, #-124]	; 0xffffff84
    1274:	mov	r0, r7
    1278:	bl	ec4 <strchr@plt>
    127c:	cmp	r0, #0
    1280:	beq	12e8 <mo_kline+0x108>
    1284:	mov	r5, r0
    1288:	strb	r4, [r5], #1
    128c:	ldrb	r0, [r7]
    1290:	cmp	r0, #0
    1294:	beq	1330 <mo_kline+0x150>
    1298:	sub	r0, fp, #44	; 0x2c
    129c:	mov	r1, r7
    12a0:	mov	r2, #11
    12a4:	bl	f30 <rb_strlcpy@plt>
    12a8:	b	1338 <mo_kline+0x158>
    12ac:	sub	sp, sp, #8
    12b0:	ldr	r0, [pc, #2116]	; 1afc <mo_kline+0x91c>
    12b4:	add	r0, pc, r0
    12b8:	str	r0, [sp]
    12bc:	add	r3, r4, #88	; 0x58
    12c0:	ldr	r0, [pc, #2104]	; 1b00 <mo_kline+0x920>
    12c4:	ldr	r0, [pc, r0]
    12c8:	ldr	r1, [pc, #2100]	; 1b04 <mo_kline+0x924>
    12cc:	add	r2, r0, #88	; 0x58
    12d0:	add	r1, pc, r1
    12d4:	mov	r0, r4
    12d8:	bl	db0 <sendto_one@plt>
    12dc:	add	sp, sp, #8
    12e0:	sub	sp, fp, #28
    12e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    12e8:	mov	r0, r7
    12ec:	mov	r1, #46	; 0x2e
    12f0:	bl	ec4 <strchr@plt>
    12f4:	cmp	r0, #0
    12f8:	bne	1310 <mo_kline+0x130>
    12fc:	mov	r0, r7
    1300:	mov	r1, #58	; 0x3a
    1304:	bl	ec4 <strchr@plt>
    1308:	cmp	r0, #0
    130c:	beq	1528 <mo_kline+0x348>
    1310:	mov	r0, #42	; 0x2a
    1314:	mov	r1, r7
    1318:	mov	r2, #64	; 0x40
    131c:	strh	r0, [fp, #-44]	; 0xffffffd4
    1320:	ldr	r0, [fp, #-120]	; 0xffffff88
    1324:	bl	f30 <rb_strlcpy@plt>
    1328:	ldr	r4, [fp, #-116]	; 0xffffff8c
    132c:	b	1364 <mo_kline+0x184>
    1330:	mov	r0, #42	; 0x2a
    1334:	strh	r0, [fp, #-44]	; 0xffffffd4
    1338:	ldrb	r0, [r5]
    133c:	ldr	r4, [fp, #-116]	; 0xffffff8c
    1340:	cmp	r0, #0
    1344:	beq	135c <mo_kline+0x17c>
    1348:	ldr	r0, [fp, #-120]	; 0xffffff88
    134c:	mov	r1, r5
    1350:	mov	r2, #64	; 0x40
    1354:	bl	f30 <rb_strlcpy@plt>
    1358:	b	1364 <mo_kline+0x184>
    135c:	mov	r0, #42	; 0x2a
    1360:	strh	r0, [fp, #-109]	; 0xffffff93
    1364:	ldrb	r0, [fp, #-44]	; 0xffffffd4
    1368:	cmp	r0, #58	; 0x3a
    136c:	ldrbne	r0, [fp, #-109]	; 0xffffff93
    1370:	cmpne	r0, #58	; 0x3a
    1374:	bne	1390 <mo_kline+0x1b0>
    1378:	ldr	r1, [pc, #1932]	; 1b0c <mo_kline+0x92c>
    137c:	add	r1, pc, r1
    1380:	mov	r0, r4
    1384:	bl	f0c <sendto_one_notice@plt>
    1388:	sub	sp, fp, #28
    138c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1390:	add	r7, r9, #3
    1394:	mov	r0, #0
    1398:	add	r5, r9, #1
    139c:	cmp	r7, r6
    13a0:	str	r0, [fp, #-128]	; 0xffffff80
    13a4:	bgt	13c4 <mo_kline+0x1e4>
    13a8:	ldr	r0, [fp, #8]
    13ac:	ldr	r0, [r0, r5, lsl #2]
    13b0:	ldr	r1, [pc, #1880]	; 1b10 <mo_kline+0x930>
    13b4:	add	r1, pc, r1
    13b8:	bl	f54 <irccmp@plt>
    13bc:	cmp	r0, #0
    13c0:	beq	14a4 <mo_kline+0x2c4>
    13c4:	cmp	r5, r6
    13c8:	bge	14ec <mo_kline+0x30c>
    13cc:	ldr	r0, [fp, #8]
    13d0:	ldr	r5, [r0, r5, lsl #2]
    13d4:	cmp	r5, #0
    13d8:	beq	14ec <mo_kline+0x30c>
    13dc:	ldrb	r0, [r5]
    13e0:	cmp	r0, #0
    13e4:	beq	14ec <mo_kline+0x30c>
    13e8:	mov	r0, r5
    13ec:	bl	eb8 <strlen@plt>
    13f0:	add	r0, r0, #8
    13f4:	bic	r0, r0, #7
    13f8:	sub	r9, sp, r0
    13fc:	mov	sp, r9
    1400:	mov	r0, r9
    1404:	mov	r1, r5
    1408:	bl	e58 <strcpy@plt>
    140c:	ldr	r7, [fp, #-120]	; 0xffffff88
    1410:	mov	r1, #0
    1414:	mov	r2, #0
    1418:	mov	r0, r7
    141c:	bl	d80 <parse_netmask_strict@plt>
    1420:	cmp	r0, #0
    1424:	beq	1538 <mo_kline+0x358>
    1428:	ldr	r6, [fp, #-128]	; 0xffffff80
    142c:	cmp	r6, #0
    1430:	beq	1558 <mo_kline+0x378>
    1434:	ldr	r0, [pc, #1776]	; 1b2c <mo_kline+0x94c>
    1438:	ldr	r0, [pc, r0]
    143c:	ldr	r3, [r0]
    1440:	sub	sp, sp, #24
    1444:	ldr	r1, [pc, #1764]	; 1b30 <mo_kline+0x950>
    1448:	ldr	r5, [fp, #-124]	; 0xffffff84
    144c:	sub	r0, fp, #44	; 0x2c
    1450:	mov	r2, r6
    1454:	add	r1, pc, r1
    1458:	str	r5, [sp, #4]
    145c:	str	r1, [sp]
    1460:	add	r1, sp, #8
    1464:	stm	r1, {r0, r7, r9}
    1468:	mov	r0, r4
    146c:	ldr	r1, [pc, #1728]	; 1b34 <mo_kline+0x954>
    1470:	add	r1, pc, r1
    1474:	bl	d68 <propagate_generic@plt>
    1478:	add	sp, sp, #24
    147c:	ldr	r0, [pc, #1716]	; 1b38 <mo_kline+0x958>
    1480:	ldr	r0, [pc, r0]
    1484:	add	r1, r0, #88	; 0x58
    1488:	mov	r0, r6
    148c:	bl	ee8 <match@plt>
    1490:	mov	sl, #0
    1494:	cmp	r0, #0
    1498:	bne	15cc <mo_kline+0x3ec>
    149c:	sub	sp, fp, #28
    14a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    14a4:	ldr	r0, [r4, #24]
    14a8:	cmp	r0, #0
    14ac:	beq	1518 <mo_kline+0x338>
    14b0:	ldr	r0, [r0, #36]	; 0x24
    14b4:	cmp	r0, #0
    14b8:	beq	1518 <mo_kline+0x338>
    14bc:	ldr	r1, [pc, #1616]	; 1b14 <mo_kline+0x934>
    14c0:	add	r1, pc, r1
    14c4:	bl	f48 <privilegeset_in_set@plt>
    14c8:	cmp	r0, #0
    14cc:	beq	1518 <mo_kline+0x338>
    14d0:	ldr	r0, [fp, #8]
    14d4:	mov	r5, r7
    14d8:	add	r0, r0, r9, lsl #2
    14dc:	ldr	r0, [r0, #8]
    14e0:	str	r0, [fp, #-128]	; 0xffffff80
    14e4:	cmp	r5, r6
    14e8:	blt	13cc <mo_kline+0x1ec>
    14ec:	sub	sp, sp, #8
    14f0:	ldr	r0, [pc, #1572]	; 1b1c <mo_kline+0x93c>
    14f4:	add	r3, r4, #88	; 0x58
    14f8:	add	r0, pc, r0
    14fc:	str	r0, [sp]
    1500:	ldr	r0, [pc, #1560]	; 1b20 <mo_kline+0x940>
    1504:	ldr	r0, [pc, r0]
    1508:	ldr	r1, [pc, #1556]	; 1b24 <mo_kline+0x944>
    150c:	add	r2, r0, #88	; 0x58
    1510:	add	r1, pc, r1
    1514:	b	12d4 <mo_kline+0xf4>
    1518:	sub	sp, sp, #8
    151c:	ldr	r0, [pc, #1524]	; 1b18 <mo_kline+0x938>
    1520:	add	r0, pc, r0
    1524:	b	12b8 <mo_kline+0xd8>
    1528:	ldr	r1, [pc, #1496]	; 1b08 <mo_kline+0x928>
    152c:	ldr	r0, [fp, #-116]	; 0xffffff8c
    1530:	add	r1, pc, r1
    1534:	b	1384 <mo_kline+0x1a4>
    1538:	ldr	r1, [pc, #1512]	; 1b28 <mo_kline+0x948>
    153c:	sub	r2, fp, #44	; 0x2c
    1540:	mov	r0, r4
    1544:	mov	r3, r7
    1548:	add	r1, pc, r1
    154c:	bl	f0c <sendto_one_notice@plt>
    1550:	sub	sp, fp, #28
    1554:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1558:	ldr	r0, [pc, #1500]	; 1b3c <mo_kline+0x95c>
    155c:	ldr	r0, [pc, r0]
    1560:	ldr	r0, [r0, #8]
    1564:	cmp	r0, #0
    1568:	beq	15c8 <mo_kline+0x3e8>
    156c:	cmp	r8, #0
    1570:	bne	15c8 <mo_kline+0x3e8>
    1574:	ldr	r0, [pc, #1476]	; 1b40 <mo_kline+0x960>
    1578:	ldr	r0, [pc, r0]
    157c:	ldr	r3, [r0]
    1580:	sub	sp, sp, #24
    1584:	ldr	r1, [pc, #1464]	; 1b44 <mo_kline+0x964>
    1588:	ldr	r5, [fp, #-124]	; 0xffffff84
    158c:	sub	r0, fp, #44	; 0x2c
    1590:	mov	r2, #2
    1594:	add	r1, pc, r1
    1598:	str	r5, [sp, #4]
    159c:	cmp	r5, #0
    15a0:	str	r1, [sp]
    15a4:	add	r1, sp, #8
    15a8:	movwgt	r2, #1
    15ac:	stm	r1, {r0, r7, r9}
    15b0:	mov	r0, r4
    15b4:	ldr	r1, [pc, #1420]	; 1b48 <mo_kline+0x968>
    15b8:	add	r1, pc, r1
    15bc:	bl	e34 <cluster_generic@plt>
    15c0:	add	sp, sp, #24
    15c4:	b	15cc <mo_kline+0x3ec>
    15c8:	ldr	r5, [fp, #-124]	; 0xffffff84
    15cc:	mov	r0, r7
    15d0:	mov	r1, #35	; 0x23
    15d4:	bl	ec4 <strchr@plt>
    15d8:	cmp	r0, #0
    15dc:	bne	1378 <mo_kline+0x198>
    15e0:	sub	r0, fp, #44	; 0x2c
    15e4:	mov	r1, #35	; 0x23
    15e8:	bl	ec4 <strchr@plt>
    15ec:	cmp	r0, #0
    15f0:	bne	1378 <mo_kline+0x198>
    15f4:	sub	r0, fp, #44	; 0x2c
    15f8:	mov	r1, #33	; 0x21
    15fc:	bl	ec4 <strchr@plt>
    1600:	cmp	r0, #0
    1604:	bne	1378 <mo_kline+0x198>
    1608:	mov	r0, r7
    160c:	mov	r1, #64	; 0x40
    1610:	bl	ec4 <strchr@plt>
    1614:	cmp	r0, #0
    1618:	bne	1378 <mo_kline+0x198>
    161c:	sub	r0, fp, #44	; 0x2c
    1620:	mov	r1, r7
    1624:	bl	e7c <valid_wild_card@plt>
    1628:	cmp	r0, #0
    162c:	beq	1654 <mo_kline+0x474>
    1630:	cmp	r5, #0
    1634:	mov	r1, r5
    1638:	eor	r0, sl, #1
    163c:	movwne	r1, #1
    1640:	orrs	r0, r1, r0
    1644:	bne	1678 <mo_kline+0x498>
    1648:	ldr	r1, [pc, #1284]	; 1b54 <mo_kline+0x974>
    164c:	add	r1, pc, r1
    1650:	b	1380 <mo_kline+0x1a0>
    1654:	ldr	r0, [pc, #1264]	; 1b4c <mo_kline+0x96c>
    1658:	ldr	r0, [pc, r0]
    165c:	ldr	r2, [r0, #236]	; 0xec
    1660:	ldr	r1, [pc, #1256]	; 1b50 <mo_kline+0x970>
    1664:	mov	r0, r4
    1668:	add	r1, pc, r1
    166c:	bl	f0c <sendto_one_notice@plt>
    1670:	sub	sp, fp, #28
    1674:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1678:	sub	r1, fp, #44	; 0x2c
    167c:	mov	r0, r4
    1680:	mov	r2, r7
    1684:	mov	r3, r5
    1688:	bl	2158 <already_placed_kline>
    168c:	cmp	r0, #0
    1690:	bne	149c <mo_kline+0x2bc>
    1694:	bl	e70 <rb_set_time@plt>
    1698:	bl	d74 <make_conf@plt>
    169c:	mov	r5, r0
    16a0:	mov	r0, #64	; 0x40
    16a4:	str	r0, [r5]
    16a8:	bl	d8c <rb_current_time@plt>
    16ac:	str	r0, [r5, #40]	; 0x28
    16b0:	mov	r0, r7
    16b4:	bl	eb8 <strlen@plt>
    16b8:	add	r0, r0, #1
    16bc:	bl	e88 <malloc@plt>
    16c0:	cmp	r0, #0
    16c4:	beq	1ad0 <mo_kline+0x8f0>
    16c8:	ldr	r1, [fp, #-120]	; 0xffffff88
    16cc:	bl	e58 <strcpy@plt>
    16d0:	str	r0, [r5, #16]
    16d4:	sub	r0, fp, #44	; 0x2c
    16d8:	bl	eb8 <strlen@plt>
    16dc:	add	r0, r0, #1
    16e0:	bl	e88 <malloc@plt>
    16e4:	cmp	r0, #0
    16e8:	beq	1ad0 <mo_kline+0x8f0>
    16ec:	sub	r1, fp, #44	; 0x2c
    16f0:	bl	e58 <strcpy@plt>
    16f4:	str	r0, [r5, #28]
    16f8:	mov	r0, #0
    16fc:	mov	r1, #0
    1700:	str	r0, [fp, #-120]	; 0xffffff88
    1704:	ldr	r0, [fp, #-116]	; 0xffffff8c
    1708:	str	r1, [r5, #32]
    170c:	bl	e1c <get_oper_name@plt>
    1710:	bl	e40 <operhash_add@plt>
    1714:	str	r0, [r5, #12]
    1718:	mov	r0, r9
    171c:	bl	eb8 <strlen@plt>
    1720:	movw	r1, #391	; 0x187
    1724:	cmp	r0, r1
    1728:	mov	r1, #124	; 0x7c
    172c:	movcs	r0, #0
    1730:	strbcs	r0, [r9, #390]	; 0x186
    1734:	mov	r0, r9
    1738:	bl	ec4 <strchr@plt>
    173c:	cmp	r0, #0
    1740:	beq	1784 <mo_kline+0x5a4>
    1744:	mov	r7, r0
    1748:	mov	r0, #0
    174c:	strb	r0, [r7]
    1750:	ldrb	r0, [r7, #1]!
    1754:	cmp	r0, #0
    1758:	beq	1780 <mo_kline+0x5a0>
    175c:	mov	r0, r7
    1760:	bl	eb8 <strlen@plt>
    1764:	add	r0, r0, #1
    1768:	bl	e88 <malloc@plt>
    176c:	cmp	r0, #0
    1770:	beq	1ad0 <mo_kline+0x8f0>
    1774:	mov	r1, r7
    1778:	bl	e58 <strcpy@plt>
    177c:	str	r0, [r5, #24]
    1780:	str	r7, [fp, #-120]	; 0xffffff88
    1784:	mov	r0, r9
    1788:	bl	eb8 <strlen@plt>
    178c:	add	r0, r0, #1
    1790:	bl	e88 <malloc@plt>
    1794:	cmp	r0, #0
    1798:	beq	1ad0 <mo_kline+0x8f0>
    179c:	mov	r1, r9
    17a0:	bl	e58 <strcpy@plt>
    17a4:	cmp	sl, #0
    17a8:	str	r0, [r5, #20]
    17ac:	beq	1814 <mo_kline+0x634>
    17b0:	ldr	r0, [r5, #4]
    17b4:	orr	r0, r0, #8912896	; 0x880000
    17b8:	str	r0, [r5, #4]
    17bc:	bl	d8c <rb_current_time@plt>
    17c0:	ldr	r1, [fp, #-124]	; 0xffffff84
    17c4:	add	r0, r0, r1
    17c8:	str	r0, [r5, #44]	; 0x2c
    17cc:	str	r0, [r5, #36]	; 0x24
    17d0:	mov	r0, r5
    17d4:	bl	dd4 <replace_old_ban@plt>
    17d8:	bl	eac <rb_make_rb_dlink_node@plt>
    17dc:	cmp	r0, #0
    17e0:	beq	1ad4 <mo_kline+0x8f4>
    17e4:	mov	r1, #0
    17e8:	str	r1, [r0, #4]
    17ec:	str	r5, [r0]
    17f0:	ldr	r1, [pc, #864]	; 1b58 <mo_kline+0x978>
    17f4:	ldr	r1, [pc, r1]
    17f8:	ldr	r2, [r1]
    17fc:	cmp	r2, #0
    1800:	str	r2, [r0, #8]
    1804:	beq	1860 <mo_kline+0x680>
    1808:	add	r2, r2, #4
    180c:	str	r0, [r2]
    1810:	b	1870 <mo_kline+0x690>
    1814:	ldr	r0, [fp, #-124]	; 0xffffff84
    1818:	cmp	r0, #1
    181c:	blt	1848 <mo_kline+0x668>
    1820:	sub	sp, sp, #8
    1824:	ldr	r0, [fp, #-124]	; 0xffffff84
    1828:	ldr	r3, [fp, #-120]	; 0xffffff88
    182c:	mov	r1, r5
    1830:	mov	r2, r9
    1834:	str	r0, [sp]
    1838:	ldr	r0, [fp, #-116]	; 0xffffff8c
    183c:	bl	22c0 <apply_tkline>
    1840:	add	sp, sp, #8
    1844:	b	1ac0 <mo_kline+0x8e0>
    1848:	ldr	r0, [fp, #-116]	; 0xffffff8c
    184c:	ldr	r3, [fp, #-120]	; 0xffffff88
    1850:	mov	r1, r5
    1854:	mov	r2, r9
    1858:	bl	243c <apply_kline>
    185c:	b	1ac0 <mo_kline+0x8e0>
    1860:	mov	r2, r1
    1864:	ldr	r3, [r2, #4]!
    1868:	cmp	r3, #0
    186c:	streq	r0, [r2]
    1870:	str	r0, [r1]
    1874:	ldr	r0, [r1, #8]
    1878:	add	r0, r0, #1
    187c:	str	r0, [r1, #8]
    1880:	ldr	r0, [r5, #16]
    1884:	ldr	r2, [r5, #28]
    1888:	sub	sp, sp, #8
    188c:	mov	r1, #64	; 0x40
    1890:	mov	r3, #0
    1894:	str	r5, [sp]
    1898:	bl	e94 <add_conf_by_address@plt>
    189c:	add	sp, sp, #8
    18a0:	ldr	r0, [fp, #-120]	; 0xffffff88
    18a4:	cmp	r0, #0
    18a8:	beq	1950 <mo_kline+0x770>
    18ac:	ldr	r0, [fp, #-120]	; 0xffffff88
    18b0:	ldrb	r0, [r0]
    18b4:	cmp	r0, #0
    18b8:	beq	1950 <mo_kline+0x770>
    18bc:	ldr	r8, [fp, #-116]	; 0xffffff8c
    18c0:	mov	r0, r8
    18c4:	bl	e1c <get_oper_name@plt>
    18c8:	ldr	r1, [r5, #28]
    18cc:	mov	r3, r0
    18d0:	ldr	r0, [r5, #16]
    18d4:	sub	sp, sp, #24
    18d8:	ldr	r7, [fp, #-124]	; 0xffffff84
    18dc:	movw	r2, #34953	; 0x8889
    18e0:	ldr	r4, [fp, #-120]	; 0xffffff88
    18e4:	str	r1, [sp, #4]
    18e8:	str	r0, [sp, #8]
    18ec:	str	r9, [sp, #12]
    18f0:	mov	r0, #256	; 0x100
    18f4:	mov	r1, #0
    18f8:	movt	r2, #34952	; 0x8888
    18fc:	smmla	r2, r7, r2, r7
    1900:	str	r4, [sp, #16]
    1904:	asr	r7, r2, #5
    1908:	add	r7, r7, r2, lsr #31
    190c:	str	r7, [sp]
    1910:	ldr	r2, [pc, #588]	; 1b64 <mo_kline+0x984>
    1914:	add	r2, pc, r2
    1918:	bl	df8 <sendto_realops_snomask@plt>
    191c:	add	sp, sp, #24
    1920:	mov	r0, r8
    1924:	bl	e1c <get_oper_name@plt>
    1928:	ldr	r1, [r5, #28]
    192c:	mov	r2, r0
    1930:	ldr	r0, [r5, #16]
    1934:	sub	sp, sp, #16
    1938:	str	r1, [sp]
    193c:	stmib	sp, {r0, r9}
    1940:	str	r4, [sp, #12]
    1944:	ldr	r1, [pc, #540]	; 1b68 <mo_kline+0x988>
    1948:	add	r1, pc, r1
    194c:	b	19d4 <mo_kline+0x7f4>
    1950:	ldr	r4, [fp, #-116]	; 0xffffff8c
    1954:	mov	r0, r4
    1958:	bl	e1c <get_oper_name@plt>
    195c:	ldr	r1, [r5, #28]
    1960:	mov	r3, r0
    1964:	ldr	r0, [r5, #16]
    1968:	sub	sp, sp, #16
    196c:	ldr	r7, [fp, #-124]	; 0xffffff84
    1970:	movw	r2, #34953	; 0x8889
    1974:	str	r1, [sp, #4]
    1978:	str	r0, [sp, #8]
    197c:	str	r9, [sp, #12]
    1980:	mov	r0, #256	; 0x100
    1984:	mov	r1, #0
    1988:	movt	r2, #34952	; 0x8888
    198c:	smmla	r2, r7, r2, r7
    1990:	asr	r7, r2, #5
    1994:	add	r7, r7, r2, lsr #31
    1998:	str	r7, [sp]
    199c:	ldr	r2, [pc, #440]	; 1b5c <mo_kline+0x97c>
    19a0:	add	r2, pc, r2
    19a4:	bl	df8 <sendto_realops_snomask@plt>
    19a8:	add	sp, sp, #16
    19ac:	mov	r0, r4
    19b0:	bl	e1c <get_oper_name@plt>
    19b4:	ldr	r1, [r5, #28]
    19b8:	mov	r2, r0
    19bc:	ldr	r0, [r5, #16]
    19c0:	sub	sp, sp, #16
    19c4:	str	r1, [sp]
    19c8:	stmib	sp, {r0, r9}
    19cc:	ldr	r1, [pc, #396]	; 1b60 <mo_kline+0x980>
    19d0:	add	r1, pc, r1
    19d4:	mov	r0, #7
    19d8:	mov	r3, r7
    19dc:	bl	edc <ilog@plt>
    19e0:	add	sp, sp, #16
    19e4:	ldr	r0, [r5, #16]
    19e8:	ldr	r3, [r5, #28]
    19ec:	sub	sp, sp, #8
    19f0:	str	r0, [sp]
    19f4:	mov	r2, r7
    19f8:	ldr	r1, [pc, #364]	; 1b6c <mo_kline+0x98c>
    19fc:	ldr	r6, [fp, #-116]	; 0xffffff8c
    1a00:	add	r1, pc, r1
    1a04:	mov	r0, r6
    1a08:	bl	f0c <sendto_one_notice@plt>
    1a0c:	add	sp, sp, #8
    1a10:	ldr	r0, [pc, #344]	; 1b70 <mo_kline+0x990>
    1a14:	ldr	r0, [pc, r0]
    1a18:	ldr	r0, [r0]
    1a1c:	str	r0, [fp, #-124]	; 0xffffff84
    1a20:	ldr	r1, [pc, #332]	; 1b74 <mo_kline+0x994>
    1a24:	ldr	r1, [pc, r1]
    1a28:	ldr	sl, [r5, #36]	; 0x24
    1a2c:	ldr	r3, [r5, #40]	; 0x28
    1a30:	ldr	r7, [r5, #44]	; 0x2c
    1a34:	ldr	r8, [r5, #16]
    1a38:	ldr	ip, [r5, #28]
    1a3c:	ldr	lr, [r1]
    1a40:	ldr	r4, [pc, #304]	; 1b78 <mo_kline+0x998>
    1a44:	ldr	r0, [fp, #-120]	; 0xffffff88
    1a48:	add	r4, pc, r4
    1a4c:	cmp	r0, #0
    1a50:	mov	r1, r4
    1a54:	movne	r1, r0
    1a58:	sub	sp, sp, #40	; 0x28
    1a5c:	ldr	r2, [pc, #280]	; 1b7c <mo_kline+0x99c>
    1a60:	cmp	r0, #0
    1a64:	str	r1, [sp, #36]	; 0x24
    1a68:	add	r1, r6, #396	; 0x18c
    1a6c:	add	r2, pc, r2
    1a70:	moveq	r2, r4
    1a74:	sub	r4, r7, r3
    1a78:	sub	r7, sl, r3
    1a7c:	str	r2, [sp, #32]
    1a80:	ldr	r2, [pc, #248]	; 1b80 <mo_kline+0x9a0>
    1a84:	ldr	r0, [fp, #-124]	; 0xffffff84
    1a88:	add	r2, pc, r2
    1a8c:	str	r2, [sp]
    1a90:	stmib	sp, {r1, ip}
    1a94:	str	r3, [sp, #16]
    1a98:	orr	r2, r0, lr
    1a9c:	mov	r0, #0
    1aa0:	mov	r1, #0
    1aa4:	mov	r3, #0
    1aa8:	str	r8, [sp, #12]
    1aac:	str	r7, [sp, #20]
    1ab0:	str	r4, [sp, #24]
    1ab4:	str	r9, [sp, #28]
    1ab8:	bl	e64 <sendto_server@plt>
    1abc:	add	sp, sp, #40	; 0x28
    1ac0:	mov	r0, r5
    1ac4:	bl	e4c <check_one_kline@plt>
    1ac8:	sub	sp, fp, #28
    1acc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1ad0:	bl	de0 <rb_outofmemory@plt>
    1ad4:	ldr	r0, [pc, #168]	; 1b84 <mo_kline+0x9a4>
    1ad8:	ldr	r1, [pc, #168]	; 1b88 <mo_kline+0x9a8>
    1adc:	ldr	r3, [pc, #168]	; 1b8c <mo_kline+0x9ac>
    1ae0:	mov	r2, #144	; 0x90
    1ae4:	add	r0, pc, r0
    1ae8:	add	r1, pc, r1
    1aec:	add	r3, pc, r3
    1af0:	bl	f60 <__assert_fail@plt>
    1af4:	.word	0x00012ee8
    1af8:	.word	0x00001984
    1afc:	.word	0x000018fd
    1b00:	.word	0x00012e18
    1b04:	.word	0x000018e7
    1b08:	.word	0x000017aa
    1b0c:	.word	0x00001982
    1b10:	.word	0x0000182a
    1b14:	.word	0x00001721
    1b18:	.word	0x000016c6
    1b1c:	.word	0x000016ae
    1b20:	.word	0x00012bd8
    1b24:	.word	0x000016e0
    1b28:	.word	0x000016cd
    1b2c:	.word	0x00012c98
    1b30:	.word	0x00001801
    1b34:	.word	0x00001736
    1b38:	.word	0x00012c5c
    1b3c:	.word	0x00012b70
    1b40:	.word	0x00012b58
    1b44:	.word	0x000016ce
    1b48:	.word	0x000015ee
    1b4c:	.word	0x00012a88
    1b50:	.word	0x00001608
    1b54:	.word	0x0000166b
    1b58:	.word	0x000128c8
    1b5c:	.word	0x000013a3
    1b60:	.word	0x000013a3
    1b64:	.word	0x00001470
    1b68:	.word	0x0000146f
    1b6c:	.word	0x000013cb
    1b70:	.word	0x000126b0
    1b74:	.word	0x0001269c
    1b78:	.word	0x00001424
    1b7c:	.word	0x000013a8
    1b80:	.word	0x00001368
    1b84:	.word	0x00001389
    1b88:	.word	0x0000132e
    1b8c:	.word	0x00001346

00001b90 <ms_unkline>:
    1b90:	push	{r4, r5, r6, sl, fp, lr}
    1b94:	add	fp, sp, #16
    1b98:	sub	sp, sp, #16
    1b9c:	ldr	r0, [pc, #140]	; 1c30 <ms_unkline+0xa0>
    1ba0:	mov	r6, r2
    1ba4:	ldr	r0, [pc, r0]
    1ba8:	ldr	r5, [fp, #8]
    1bac:	ldr	r3, [r0]
    1bb0:	ldr	r2, [r5, #4]
    1bb4:	ldr	r0, [r5, #8]
    1bb8:	ldr	r1, [r5, #12]
    1bbc:	ldr	r4, [pc, #112]	; 1c34 <ms_unkline+0xa4>
    1bc0:	add	r4, pc, r4
    1bc4:	str	r4, [sp]
    1bc8:	stmib	sp, {r0, r1}
    1bcc:	mov	r0, r6
    1bd0:	ldr	r1, [pc, #96]	; 1c38 <ms_unkline+0xa8>
    1bd4:	add	r1, pc, r1
    1bd8:	bl	d68 <propagate_generic@plt>
    1bdc:	ldr	r0, [r5, #4]
    1be0:	ldr	r1, [pc, #84]	; 1c3c <ms_unkline+0xac>
    1be4:	ldr	r1, [pc, r1]
    1be8:	add	r1, r1, #88	; 0x58
    1bec:	bl	ee8 <match@plt>
    1bf0:	cmp	r0, #0
    1bf4:	beq	1c28 <ms_unkline+0x98>
    1bf8:	ldrh	r0, [r6, #80]	; 0x50
    1bfc:	cmp	r0, #64	; 0x40
    1c00:	bne	1c28 <ms_unkline+0x98>
    1c04:	ldr	r0, [r6, #24]
    1c08:	cmp	r0, #0
    1c0c:	beq	1c28 <ms_unkline+0x98>
    1c10:	ldr	r1, [r5, #8]
    1c14:	ldr	r2, [r5, #12]
    1c18:	mov	r0, r6
    1c1c:	sub	sp, fp, #16
    1c20:	pop	{r4, r5, r6, sl, fp, lr}
    1c24:	b	2af0 <handle_remote_unkline>
    1c28:	sub	sp, fp, #16
    1c2c:	pop	{r4, r5, r6, sl, fp, pc}
    1c30:	.word	0x00012510
    1c34:	.word	0x00001373
    1c38:	.word	0x00000fd0
    1c3c:	.word	0x000124f8

00001c40 <me_unkline>:
    1c40:	ldrh	r0, [r2, #80]	; 0x50
    1c44:	cmp	r0, #64	; 0x40
    1c48:	bxne	lr
    1c4c:	ldr	r0, [r2, #24]
    1c50:	cmp	r0, #0
    1c54:	beq	1c6c <me_unkline+0x2c>
    1c58:	ldr	r0, [sp]
    1c5c:	ldmib	r0, {r1, r3}
    1c60:	mov	r0, r2
    1c64:	mov	r2, r3
    1c68:	b	2af0 <handle_remote_unkline>
    1c6c:	bx	lr

00001c70 <mo_unkline>:
    1c70:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    1c74:	add	fp, sp, #24
    1c78:	sub	sp, sp, #8
    1c7c:	ldr	r8, [fp, #8]
    1c80:	mov	r0, #42	; 0x2a
    1c84:	mov	r6, r3
    1c88:	mov	r4, r2
    1c8c:	strh	r0, [fp, #-30]	; 0xffffffe2
    1c90:	ldr	r7, [r8, #4]
    1c94:	mov	r0, r7
    1c98:	bl	eb8 <strlen@plt>
    1c9c:	add	r0, r0, #8
    1ca0:	bic	r0, r0, #7
    1ca4:	sub	r5, sp, r0
    1ca8:	mov	sp, r5
    1cac:	mov	r0, r5
    1cb0:	mov	r1, r7
    1cb4:	bl	e58 <strcpy@plt>
    1cb8:	ldr	r0, [r4, #24]
    1cbc:	cmp	r0, #0
    1cc0:	beq	1d30 <mo_unkline+0xc0>
    1cc4:	ldr	r0, [r0, #36]	; 0x24
    1cc8:	cmp	r0, #0
    1ccc:	beq	1d30 <mo_unkline+0xc0>
    1cd0:	ldr	r1, [pc, #1052]	; 20f4 <mo_unkline+0x484>
    1cd4:	add	r1, pc, r1
    1cd8:	bl	f48 <privilegeset_in_set@plt>
    1cdc:	cmp	r0, #0
    1ce0:	beq	1d30 <mo_unkline+0xc0>
    1ce4:	mov	r0, r5
    1ce8:	mov	r1, #64	; 0x40
    1cec:	bl	ec4 <strchr@plt>
    1cf0:	cmp	r0, #0
    1cf4:	beq	1d6c <mo_unkline+0xfc>
    1cf8:	mov	r1, #0
    1cfc:	sub	r2, fp, #30
    1d00:	mov	r7, r5
    1d04:	strb	r1, [r0]
    1d08:	ldrb	r1, [r5]
    1d0c:	cmp	r1, #0
    1d10:	ldrb	r1, [r0, #1]!
    1d14:	moveq	r7, r2
    1d18:	cmp	r1, #0
    1d1c:	moveq	r0, r2
    1d20:	mov	r5, r0
    1d24:	cmp	r6, #4
    1d28:	bge	1dac <mo_unkline+0x13c>
    1d2c:	b	1dc4 <mo_unkline+0x154>
    1d30:	sub	sp, sp, #8
    1d34:	ldr	r0, [pc, #956]	; 20f8 <mo_unkline+0x488>
    1d38:	add	r0, pc, r0
    1d3c:	str	r0, [sp]
    1d40:	add	r3, r4, #88	; 0x58
    1d44:	ldr	r0, [pc, #944]	; 20fc <mo_unkline+0x48c>
    1d48:	ldr	r0, [pc, r0]
    1d4c:	ldr	r1, [pc, #940]	; 2100 <mo_unkline+0x490>
    1d50:	add	r2, r0, #88	; 0x58
    1d54:	add	r1, pc, r1
    1d58:	mov	r0, r4
    1d5c:	bl	db0 <sendto_one@plt>
    1d60:	add	sp, sp, #8
    1d64:	sub	sp, fp, #24
    1d68:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    1d6c:	ldrb	r0, [r5]
    1d70:	sub	r7, fp, #30
    1d74:	cmp	r0, #42	; 0x2a
    1d78:	beq	1da4 <mo_unkline+0x134>
    1d7c:	mov	r0, r5
    1d80:	mov	r1, #46	; 0x2e
    1d84:	bl	ec4 <strchr@plt>
    1d88:	cmp	r0, #0
    1d8c:	bne	1da4 <mo_unkline+0x134>
    1d90:	mov	r0, r5
    1d94:	mov	r1, #58	; 0x3a
    1d98:	bl	ec4 <strchr@plt>
    1d9c:	cmp	r0, #0
    1da0:	beq	20dc <mo_unkline+0x46c>
    1da4:	cmp	r6, #4
    1da8:	blt	1dc4 <mo_unkline+0x154>
    1dac:	ldr	r0, [r8, #8]
    1db0:	ldr	r1, [pc, #848]	; 2108 <mo_unkline+0x498>
    1db4:	add	r1, pc, r1
    1db8:	bl	f54 <irccmp@plt>
    1dbc:	cmp	r0, #0
    1dc0:	beq	1e88 <mo_unkline+0x218>
    1dc4:	mov	r0, r5
    1dc8:	mov	r1, #64	; 0x40
    1dcc:	mov	r2, r7
    1dd0:	bl	f24 <find_exact_conf_by_address@plt>
    1dd4:	mov	r6, r0
    1dd8:	cmp	r0, #0
    1ddc:	beq	1dec <mo_unkline+0x17c>
    1de0:	ldr	r0, [r6, #44]	; 0x2c
    1de4:	cmp	r0, #0
    1de8:	bne	1e58 <mo_unkline+0x1e8>
    1dec:	ldr	r0, [pc, #816]	; 2124 <mo_unkline+0x4b4>
    1df0:	mov	r8, #1
    1df4:	ldr	r0, [pc, r0]
    1df8:	ldr	r0, [r0, #8]
    1dfc:	cmp	r0, #0
    1e00:	beq	1e3c <mo_unkline+0x1cc>
    1e04:	ldr	r0, [pc, #796]	; 2128 <mo_unkline+0x4b8>
    1e08:	ldr	r0, [pc, r0]
    1e0c:	ldr	r3, [r0]
    1e10:	sub	sp, sp, #16
    1e14:	ldr	r0, [pc, #784]	; 212c <mo_unkline+0x4bc>
    1e18:	mov	r2, #4
    1e1c:	add	r0, pc, r0
    1e20:	stm	sp, {r0, r7}
    1e24:	str	r5, [sp, #8]
    1e28:	mov	r0, r4
    1e2c:	ldr	r1, [pc, #764]	; 2130 <mo_unkline+0x4c0>
    1e30:	add	r1, pc, r1
    1e34:	bl	e34 <cluster_generic@plt>
    1e38:	add	sp, sp, #16
    1e3c:	cmp	r6, #0
    1e40:	beq	1f28 <mo_unkline+0x2b8>
    1e44:	ldr	r0, [r6, #44]	; 0x2c
    1e48:	cmp	r0, #0
    1e4c:	beq	2098 <mo_unkline+0x428>
    1e50:	cmp	r8, #0
    1e54:	beq	20bc <mo_unkline+0x44c>
    1e58:	ldr	r0, [pc, #728]	; 2138 <mo_unkline+0x4c8>
    1e5c:	ldr	r0, [pc, r0]
    1e60:	ldr	r5, [r0]
    1e64:	cmp	r5, #0
    1e68:	beq	20b4 <mo_unkline+0x444>
    1e6c:	ldr	r0, [r5]
    1e70:	cmp	r0, r6
    1e74:	beq	1f44 <mo_unkline+0x2d4>
    1e78:	ldr	r5, [r5, #8]
    1e7c:	cmp	r5, #0
    1e80:	bne	1e6c <mo_unkline+0x1fc>
    1e84:	b	20b4 <mo_unkline+0x444>
    1e88:	ldr	r0, [r4, #24]
    1e8c:	cmp	r0, #0
    1e90:	beq	1f34 <mo_unkline+0x2c4>
    1e94:	ldr	r0, [r0, #36]	; 0x24
    1e98:	cmp	r0, #0
    1e9c:	beq	1f34 <mo_unkline+0x2c4>
    1ea0:	ldr	r1, [pc, #612]	; 210c <mo_unkline+0x49c>
    1ea4:	add	r1, pc, r1
    1ea8:	bl	f48 <privilegeset_in_set@plt>
    1eac:	cmp	r0, #0
    1eb0:	beq	1f34 <mo_unkline+0x2c4>
    1eb4:	ldr	r2, [r8, #12]
    1eb8:	ldr	r0, [pc, #596]	; 2114 <mo_unkline+0x4a4>
    1ebc:	ldr	r0, [pc, r0]
    1ec0:	ldr	r3, [r0]
    1ec4:	sub	sp, sp, #16
    1ec8:	ldr	r0, [pc, #584]	; 2118 <mo_unkline+0x4a8>
    1ecc:	add	r0, pc, r0
    1ed0:	stm	sp, {r0, r7}
    1ed4:	str	r5, [sp, #8]
    1ed8:	mov	r0, r4
    1edc:	ldr	r1, [pc, #568]	; 211c <mo_unkline+0x4ac>
    1ee0:	add	r1, pc, r1
    1ee4:	bl	d68 <propagate_generic@plt>
    1ee8:	add	sp, sp, #16
    1eec:	ldr	r0, [r8, #12]
    1ef0:	ldr	r1, [pc, #552]	; 2120 <mo_unkline+0x4b0>
    1ef4:	ldr	r1, [pc, r1]
    1ef8:	add	r1, r1, #88	; 0x58
    1efc:	bl	ee8 <match@plt>
    1f00:	cmp	r0, #0
    1f04:	beq	20b4 <mo_unkline+0x444>
    1f08:	mov	r0, r5
    1f0c:	mov	r1, #64	; 0x40
    1f10:	mov	r2, r7
    1f14:	bl	f24 <find_exact_conf_by_address@plt>
    1f18:	mov	r6, r0
    1f1c:	mov	r8, #0
    1f20:	cmp	r6, #0
    1f24:	bne	1e44 <mo_unkline+0x1d4>
    1f28:	ldr	r1, [pc, #516]	; 2134 <mo_unkline+0x4c4>
    1f2c:	add	r1, pc, r1
    1f30:	b	20c4 <mo_unkline+0x454>
    1f34:	sub	sp, sp, #8
    1f38:	ldr	r0, [pc, #464]	; 2110 <mo_unkline+0x4a0>
    1f3c:	add	r0, pc, r0
    1f40:	b	1d3c <mo_unkline+0xcc>
    1f44:	ldr	r3, [r6, #16]
    1f48:	ldr	r2, [r6, #28]
    1f4c:	ldr	r1, [pc, #488]	; 213c <mo_unkline+0x4cc>
    1f50:	mov	r0, r4
    1f54:	add	r1, pc, r1
    1f58:	bl	f0c <sendto_one_notice@plt>
    1f5c:	mov	r0, r4
    1f60:	bl	e1c <get_oper_name@plt>
    1f64:	mov	r3, r0
    1f68:	ldr	r0, [r6, #16]
    1f6c:	ldr	r1, [r6, #28]
    1f70:	sub	sp, sp, #8
    1f74:	str	r1, [sp]
    1f78:	str	r0, [sp, #4]
    1f7c:	mov	r0, #256	; 0x100
    1f80:	mov	r1, #0
    1f84:	mov	r8, #0
    1f88:	ldr	r2, [pc, #432]	; 2140 <mo_unkline+0x4d0>
    1f8c:	add	r2, pc, r2
    1f90:	bl	df8 <sendto_realops_snomask@plt>
    1f94:	add	sp, sp, #8
    1f98:	mov	r0, r4
    1f9c:	bl	e1c <get_oper_name@plt>
    1fa0:	mov	r2, r0
    1fa4:	ldr	r0, [r6, #16]
    1fa8:	ldr	r3, [r6, #28]
    1fac:	sub	sp, sp, #8
    1fb0:	str	r0, [sp]
    1fb4:	mov	r0, #7
    1fb8:	ldr	r1, [pc, #388]	; 2144 <mo_unkline+0x4d4>
    1fbc:	add	r1, pc, r1
    1fc0:	bl	edc <ilog@plt>
    1fc4:	add	sp, sp, #8
    1fc8:	bl	d8c <rb_current_time@plt>
    1fcc:	ldr	r1, [r6, #40]	; 0x28
    1fd0:	mov	r9, r0
    1fd4:	ldr	r0, [r6, #12]
    1fd8:	mov	r2, r9
    1fdc:	cmp	r1, r9
    1fe0:	addge	r2, r1, #1
    1fe4:	str	r2, [r6, #36]	; 0x24
    1fe8:	str	r2, [r6, #40]	; 0x28
    1fec:	bl	dec <operhash_delete@plt>
    1ff0:	mov	r0, r4
    1ff4:	bl	e1c <get_oper_name@plt>
    1ff8:	bl	e40 <operhash_add@plt>
    1ffc:	str	r0, [r6, #12]
    2000:	ldr	r0, [r6, #4]
    2004:	ldr	r3, [r6, #40]	; 0x28
    2008:	ldr	r7, [r6, #44]	; 0x2c
    200c:	ldr	ip, [r6, #16]
    2010:	ldr	lr, [r6, #28]
    2014:	orr	r0, r0, #8912896	; 0x880000
    2018:	str	r0, [r6, #4]
    201c:	sub	r0, r7, r3
    2020:	ldr	r7, [pc, #288]	; 2148 <mo_unkline+0x4d8>
    2024:	ldr	r7, [pc, r7]
    2028:	ldr	r7, [r7]
    202c:	ldr	r1, [pc, #280]	; 214c <mo_unkline+0x4dc>
    2030:	ldr	r1, [pc, r1]
    2034:	ldr	r1, [r1]
    2038:	sub	sp, sp, #32
    203c:	ldr	r2, [pc, #268]	; 2150 <mo_unkline+0x4e0>
    2040:	add	r4, r4, #396	; 0x18c
    2044:	add	r2, pc, r2
    2048:	stm	sp, {r2, r4, lr}
    204c:	str	r3, [sp, #16]
    2050:	str	r0, [sp, #24]
    2054:	orr	r2, r1, r7
    2058:	mov	r0, #0
    205c:	mov	r1, #0
    2060:	mov	r3, #0
    2064:	str	ip, [sp, #12]
    2068:	str	r8, [sp, #20]
    206c:	bl	e64 <sendto_server@plt>
    2070:	add	sp, sp, #32
    2074:	ldr	r1, [r6, #16]
    2078:	ldr	r0, [r6, #28]
    207c:	bl	f00 <remove_reject_mask@plt>
    2080:	mov	r0, r6
    2084:	mov	r1, r5
    2088:	mov	r2, r9
    208c:	bl	e10 <deactivate_conf@plt>
    2090:	sub	sp, fp, #24
    2094:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    2098:	mov	r0, r4
    209c:	mov	r1, r6
    20a0:	bl	2830 <remove_temp_kline>
    20a4:	cmp	r0, #0
    20a8:	moveq	r0, r4
    20ac:	moveq	r1, r6
    20b0:	bleq	2a34 <remove_permkline_match>
    20b4:	sub	sp, fp, #24
    20b8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    20bc:	ldr	r1, [pc, #144]	; 2154 <mo_unkline+0x4e4>
    20c0:	add	r1, pc, r1
    20c4:	mov	r0, r4
    20c8:	mov	r2, r7
    20cc:	mov	r3, r5
    20d0:	bl	f0c <sendto_one_notice@plt>
    20d4:	sub	sp, fp, #24
    20d8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    20dc:	ldr	r1, [pc, #32]	; 2104 <mo_unkline+0x494>
    20e0:	mov	r0, r4
    20e4:	add	r1, pc, r1
    20e8:	bl	f0c <sendto_one_notice@plt>
    20ec:	sub	sp, fp, #24
    20f0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    20f4:	.word	0x000012b2
    20f8:	.word	0x00001253
    20fc:	.word	0x00012394
    2100:	.word	0x00000e63
    2104:	.word	0x00000eaf
    2108:	.word	0x00000e2a
    210c:	.word	0x00000d3d
    2110:	.word	0x00000caa
    2114:	.word	0x000121f8
    2118:	.word	0x00001067
    211c:	.word	0x00000cc4
    2120:	.word	0x000121e8
    2124:	.word	0x000122d8
    2128:	.word	0x000122ac
    212c:	.word	0x00001117
    2130:	.word	0x00000d74
    2134:	.word	0x0000107b
    2138:	.word	0x00012260
    213c:	.word	0x0000109f
    2140:	.word	0x0000108e
    2144:	.word	0x0000108c
    2148:	.word	0x0001209c
    214c:	.word	0x00012094
    2150:	.word	0x00001010
    2154:	.word	0x00000efc

00002158 <already_placed_kline>:
    2158:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    215c:	add	fp, sp, #28
    2160:	sub	sp, sp, #148	; 0x94
    2164:	mov	r5, r1
    2168:	mov	r8, r0
    216c:	mov	r4, r2
    2170:	mov	r0, r2
    2174:	mov	r1, #64	; 0x40
    2178:	mov	r9, r3
    217c:	mov	r2, r5
    2180:	bl	f24 <find_exact_conf_by_address@plt>
    2184:	mov	r7, r0
    2188:	cmp	r0, #0
    218c:	bne	2240 <already_placed_kline+0xe8>
    2190:	ldr	r0, [pc, #284]	; 22b4 <already_placed_kline+0x15c>
    2194:	ldr	r0, [pc, r0]
    2198:	ldr	r0, [r0, #140]	; 0x8c
    219c:	cmp	r0, #0
    21a0:	beq	2240 <already_placed_kline+0xe8>
    21a4:	add	r7, sp, #20
    21a8:	mov	r6, #0
    21ac:	add	r2, sp, #16
    21b0:	mov	r0, r4
    21b4:	mov	r1, r7
    21b8:	str	r6, [sp, #16]
    21bc:	bl	d80 <parse_netmask_strict@plt>
    21c0:	cmp	r0, #2
    21c4:	beq	21d4 <already_placed_kline+0x7c>
    21c8:	cmp	r0, #3
    21cc:	movne	r7, #0
    21d0:	moveq	r0, #10
    21d4:	mov	r1, #64	; 0x40
    21d8:	mov	r2, #0
    21dc:	mov	r3, r7
    21e0:	str	r1, [sp]
    21e4:	stmib	sp, {r0, r5, r6}
    21e8:	mov	r0, r4
    21ec:	mov	r1, #0
    21f0:	bl	dbc <find_conf_by_address@plt>
    21f4:	cmp	r0, #0
    21f8:	beq	22a8 <already_placed_kline+0x150>
    21fc:	mov	r7, r0
    2200:	ldr	r0, [r0, #16]
    2204:	mov	r1, #47	; 0x2f
    2208:	bl	ec4 <strchr@plt>
    220c:	ldr	sl, [sp, #16]
    2210:	cmp	sl, #1
    2214:	blt	2248 <already_placed_kline+0xf0>
    2218:	cmp	r0, #0
    221c:	beq	22a8 <already_placed_kline+0x150>
    2220:	add	r0, r0, #1
    2224:	mov	r1, #0
    2228:	mov	r2, #10
    222c:	mov	r6, #0
    2230:	bl	da4 <strtol@plt>
    2234:	cmp	sl, r0
    2238:	bge	2248 <already_placed_kline+0xf0>
    223c:	b	22a8 <already_placed_kline+0x150>
    2240:	cmp	r7, #0
    2244:	beq	22a4 <already_placed_kline+0x14c>
    2248:	cmp	r9, #0
    224c:	bne	2260 <already_placed_kline+0x108>
    2250:	ldrb	r0, [r7, #6]
    2254:	mov	r6, #0
    2258:	tst	r0, #128	; 0x80
    225c:	bne	22a8 <already_placed_kline+0x150>
    2260:	ldr	r1, [r7, #20]
    2264:	ldr	r0, [r7, #16]
    2268:	ldr	r2, [r7, #28]
    226c:	ldr	r3, [pc, #68]	; 22b8 <already_placed_kline+0x160>
    2270:	cmp	r1, #0
    2274:	add	r3, pc, r3
    2278:	str	r2, [sp]
    227c:	mov	r2, r5
    2280:	movne	r3, r1
    2284:	stmib	sp, {r0, r3}
    2288:	mov	r0, r8
    228c:	mov	r3, r4
    2290:	ldr	r1, [pc, #36]	; 22bc <already_placed_kline+0x164>
    2294:	add	r1, pc, r1
    2298:	bl	f0c <sendto_one_notice@plt>
    229c:	mov	r6, #1
    22a0:	b	22a8 <already_placed_kline+0x150>
    22a4:	mov	r6, #0
    22a8:	mov	r0, r6
    22ac:	sub	sp, fp, #28
    22b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    22b4:	.word	0x00011f4c
    22b8:	.word	0x00000a9a
    22bc:	.word	0x00000a86

000022c0 <apply_tkline>:
    22c0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    22c4:	add	fp, sp, #24
    22c8:	sub	sp, sp, #24
    22cc:	ldr	r7, [fp, #8]
    22d0:	mov	r6, r3
    22d4:	mov	r8, r2
    22d8:	mov	r5, r1
    22dc:	mov	r4, r0
    22e0:	bl	d8c <rb_current_time@plt>
    22e4:	add	r0, r0, r7
    22e8:	str	r0, [r5, #36]	; 0x24
    22ec:	mov	r0, r5
    22f0:	bl	dc8 <add_temp_kline@plt>
    22f4:	cmp	r6, #0
    22f8:	beq	2384 <apply_tkline+0xc4>
    22fc:	ldrb	r0, [r6]
    2300:	cmp	r0, #0
    2304:	beq	2384 <apply_tkline+0xc4>
    2308:	mov	r0, r4
    230c:	bl	e1c <get_oper_name@plt>
    2310:	movw	r2, #34953	; 0x8889
    2314:	mov	r3, r0
    2318:	ldr	r0, [r5, #16]
    231c:	ldr	r1, [r5, #28]
    2320:	str	r8, [sp, #12]
    2324:	str	r6, [sp, #16]
    2328:	movt	r2, #34952	; 0x8888
    232c:	smmla	r2, r7, r2, r7
    2330:	str	r1, [sp, #4]
    2334:	str	r0, [sp, #8]
    2338:	mov	r0, #256	; 0x100
    233c:	mov	r1, #0
    2340:	asr	r7, r2, #5
    2344:	add	r7, r7, r2, lsr #31
    2348:	str	r7, [sp]
    234c:	ldr	r2, [pc, #220]	; 2430 <apply_tkline+0x170>
    2350:	add	r2, pc, r2
    2354:	bl	df8 <sendto_realops_snomask@plt>
    2358:	mov	r0, r4
    235c:	bl	e1c <get_oper_name@plt>
    2360:	mov	r2, r0
    2364:	ldr	r0, [r5, #16]
    2368:	ldr	r1, [r5, #28]
    236c:	str	r1, [sp]
    2370:	stmib	sp, {r0, r8}
    2374:	str	r6, [sp, #12]
    2378:	ldr	r1, [pc, #180]	; 2434 <apply_tkline+0x174>
    237c:	add	r1, pc, r1
    2380:	b	23f4 <apply_tkline+0x134>
    2384:	mov	r0, r4
    2388:	bl	e1c <get_oper_name@plt>
    238c:	movw	r2, #34953	; 0x8889
    2390:	mov	r3, r0
    2394:	ldr	r0, [r5, #16]
    2398:	ldr	r1, [r5, #28]
    239c:	str	r8, [sp, #12]
    23a0:	movt	r2, #34952	; 0x8888
    23a4:	smmla	r2, r7, r2, r7
    23a8:	str	r1, [sp, #4]
    23ac:	str	r0, [sp, #8]
    23b0:	mov	r0, #256	; 0x100
    23b4:	mov	r1, #0
    23b8:	asr	r7, r2, #5
    23bc:	add	r7, r7, r2, lsr #31
    23c0:	str	r7, [sp]
    23c4:	ldr	r2, [pc, #92]	; 2428 <apply_tkline+0x168>
    23c8:	add	r2, pc, r2
    23cc:	bl	df8 <sendto_realops_snomask@plt>
    23d0:	mov	r0, r4
    23d4:	bl	e1c <get_oper_name@plt>
    23d8:	mov	r2, r0
    23dc:	ldr	r0, [r5, #16]
    23e0:	ldr	r1, [r5, #28]
    23e4:	str	r1, [sp]
    23e8:	stmib	sp, {r0, r8}
    23ec:	ldr	r1, [pc, #56]	; 242c <apply_tkline+0x16c>
    23f0:	add	r1, pc, r1
    23f4:	mov	r0, #7
    23f8:	mov	r3, r7
    23fc:	bl	edc <ilog@plt>
    2400:	ldr	r0, [r5, #16]
    2404:	ldr	r3, [r5, #28]
    2408:	mov	r2, r7
    240c:	str	r0, [sp]
    2410:	mov	r0, r4
    2414:	ldr	r1, [pc, #28]	; 2438 <apply_tkline+0x178>
    2418:	add	r1, pc, r1
    241c:	bl	f0c <sendto_one_notice@plt>
    2420:	sub	sp, fp, #24
    2424:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    2428:	.word	0x00000aaf
    242c:	.word	0x00000983
    2430:	.word	0x00000b5a
    2434:	.word	0x00000a3b
    2438:	.word	0x00000ac8

0000243c <apply_kline>:
    243c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    2440:	add	fp, sp, #24
    2444:	sub	sp, sp, #16
    2448:	mov	r6, r2
    244c:	mov	r4, r0
    2450:	ldr	r0, [r1, #16]
    2454:	ldr	r2, [r1, #28]
    2458:	mov	r7, r3
    245c:	mov	r5, r1
    2460:	str	r1, [sp]
    2464:	mov	r1, #64	; 0x40
    2468:	mov	r3, #0
    246c:	mov	r8, #0
    2470:	bl	e94 <add_conf_by_address@plt>
    2474:	ldr	r3, [r5, #16]
    2478:	ldr	r2, [r5, #28]
    247c:	cmp	r7, #0
    2480:	beq	2504 <apply_kline+0xc8>
    2484:	ldrb	r0, [r7]
    2488:	str	r6, [sp]
    248c:	mov	r1, r4
    2490:	cmp	r0, #0
    2494:	movne	r0, r7
    2498:	stmib	sp, {r0, r8}
    249c:	mov	r0, #0
    24a0:	bl	e04 <bandb_add@plt>
    24a4:	ldrb	r0, [r7]
    24a8:	cmp	r0, #0
    24ac:	beq	2518 <apply_kline+0xdc>
    24b0:	mov	r0, r4
    24b4:	bl	e1c <get_oper_name@plt>
    24b8:	mov	r3, r0
    24bc:	ldr	r0, [r5, #16]
    24c0:	ldr	r1, [r5, #28]
    24c4:	str	r1, [sp]
    24c8:	stmib	sp, {r0, r6, r7}
    24cc:	mov	r0, #256	; 0x100
    24d0:	mov	r1, #0
    24d4:	ldr	r2, [pc, #180]	; 2590 <apply_kline+0x154>
    24d8:	add	r2, pc, r2
    24dc:	bl	df8 <sendto_realops_snomask@plt>
    24e0:	mov	r0, r4
    24e4:	bl	e1c <get_oper_name@plt>
    24e8:	mov	r2, r0
    24ec:	ldr	r0, [r5, #16]
    24f0:	ldr	r3, [r5, #28]
    24f4:	stm	sp, {r0, r6, r7}
    24f8:	ldr	r1, [pc, #148]	; 2594 <apply_kline+0x158>
    24fc:	add	r1, pc, r1
    2500:	b	2568 <apply_kline+0x12c>
    2504:	mov	r0, #0
    2508:	mov	r1, r4
    250c:	stm	sp, {r6, r8}
    2510:	str	r8, [sp, #8]
    2514:	bl	e04 <bandb_add@plt>
    2518:	mov	r0, r4
    251c:	bl	e1c <get_oper_name@plt>
    2520:	mov	r3, r0
    2524:	ldr	r0, [r5, #16]
    2528:	ldr	r1, [r5, #28]
    252c:	str	r1, [sp]
    2530:	stmib	sp, {r0, r6}
    2534:	mov	r0, #256	; 0x100
    2538:	mov	r1, #0
    253c:	ldr	r2, [pc, #84]	; 2598 <apply_kline+0x15c>
    2540:	add	r2, pc, r2
    2544:	bl	df8 <sendto_realops_snomask@plt>
    2548:	mov	r0, r4
    254c:	bl	e1c <get_oper_name@plt>
    2550:	mov	r2, r0
    2554:	ldr	r0, [r5, #16]
    2558:	ldr	r3, [r5, #28]
    255c:	stm	sp, {r0, r6}
    2560:	ldr	r1, [pc, #52]	; 259c <apply_kline+0x160>
    2564:	add	r1, pc, r1
    2568:	mov	r0, #7
    256c:	bl	edc <ilog@plt>
    2570:	ldr	r3, [r5, #16]
    2574:	ldr	r2, [r5, #28]
    2578:	ldr	r1, [pc, #32]	; 25a0 <apply_kline+0x164>
    257c:	mov	r0, r4
    2580:	add	r1, pc, r1
    2584:	sub	sp, fp, #24
    2588:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
    258c:	b	f0c <sendto_one_notice@plt>
    2590:	.word	0x00000a61
    2594:	.word	0x00000a61
    2598:	.word	0x000009c8
    259c:	.word	0x000009c5
    25a0:	.word	0x000009f0

000025a4 <handle_remote_kline>:
    25a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    25a8:	add	fp, sp, #28
    25ac:	sub	sp, sp, #4
    25b0:	ldr	r5, [fp, #8]
    25b4:	mov	r4, r0
    25b8:	mov	r7, r3
    25bc:	mov	sl, r2
    25c0:	mov	r9, r1
    25c4:	mov	r0, r5
    25c8:	bl	eb8 <strlen@plt>
    25cc:	add	r0, r0, #8
    25d0:	bic	r0, r0, #7
    25d4:	sub	r6, sp, r0
    25d8:	mov	sp, r6
    25dc:	mov	r0, r6
    25e0:	mov	r1, r5
    25e4:	bl	e58 <strcpy@plt>
    25e8:	ldr	r2, [r4, #32]
    25ec:	cmp	r9, #0
    25f0:	mov	r3, #2
    25f4:	add	r0, r4, #152	; 0x98
    25f8:	add	r1, r4, #163	; 0xa3
    25fc:	movwgt	r3, #1
    2600:	add	r2, r2, #88	; 0x58
    2604:	bl	f3c <find_shared_conf@plt>
    2608:	cmp	r0, #0
    260c:	beq	2818 <handle_remote_kline+0x274>
    2610:	mov	r0, r7
    2614:	mov	r1, #35	; 0x23
    2618:	bl	ec4 <strchr@plt>
    261c:	cmp	r0, #0
    2620:	bne	2660 <handle_remote_kline+0xbc>
    2624:	mov	r0, sl
    2628:	mov	r1, #35	; 0x23
    262c:	bl	ec4 <strchr@plt>
    2630:	cmp	r0, #0
    2634:	bne	2660 <handle_remote_kline+0xbc>
    2638:	mov	r0, sl
    263c:	mov	r1, #33	; 0x21
    2640:	bl	ec4 <strchr@plt>
    2644:	cmp	r0, #0
    2648:	bne	2660 <handle_remote_kline+0xbc>
    264c:	mov	r0, r7
    2650:	mov	r1, #64	; 0x40
    2654:	bl	ec4 <strchr@plt>
    2658:	cmp	r0, #0
    265c:	beq	2678 <handle_remote_kline+0xd4>
    2660:	ldr	r1, [pc, #444]	; 2824 <handle_remote_kline+0x280>
    2664:	mov	r0, r4
    2668:	add	r1, pc, r1
    266c:	bl	f0c <sendto_one_notice@plt>
    2670:	sub	sp, fp, #28
    2674:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2678:	mov	r0, sl
    267c:	mov	r1, r7
    2680:	bl	e7c <valid_wild_card@plt>
    2684:	cmp	r0, #0
    2688:	beq	2784 <handle_remote_kline+0x1e0>
    268c:	mov	r0, r4
    2690:	mov	r1, sl
    2694:	mov	r2, r7
    2698:	mov	r3, r9
    269c:	bl	2158 <already_placed_kline>
    26a0:	cmp	r0, #0
    26a4:	bne	2818 <handle_remote_kline+0x274>
    26a8:	bl	d74 <make_conf@plt>
    26ac:	mov	r8, r0
    26b0:	mov	r0, #64	; 0x40
    26b4:	str	r0, [r8]
    26b8:	bl	d8c <rb_current_time@plt>
    26bc:	str	r0, [r8, #40]	; 0x28
    26c0:	mov	r0, sl
    26c4:	bl	eb8 <strlen@plt>
    26c8:	add	r0, r0, #1
    26cc:	bl	e88 <malloc@plt>
    26d0:	cmp	r0, #0
    26d4:	beq	2820 <handle_remote_kline+0x27c>
    26d8:	mov	r1, sl
    26dc:	bl	e58 <strcpy@plt>
    26e0:	str	r0, [r8, #28]
    26e4:	mov	r0, r7
    26e8:	bl	eb8 <strlen@plt>
    26ec:	add	r0, r0, #1
    26f0:	bl	e88 <malloc@plt>
    26f4:	cmp	r0, #0
    26f8:	beq	2820 <handle_remote_kline+0x27c>
    26fc:	mov	r1, r7
    2700:	bl	e58 <strcpy@plt>
    2704:	str	r0, [r8, #16]
    2708:	mov	r0, r4
    270c:	bl	e1c <get_oper_name@plt>
    2710:	bl	e40 <operhash_add@plt>
    2714:	str	r0, [r8, #12]
    2718:	mov	r0, r6
    271c:	bl	eb8 <strlen@plt>
    2720:	movw	r1, #391	; 0x187
    2724:	cmp	r0, r1
    2728:	mov	r1, #124	; 0x7c
    272c:	movcs	r0, #0
    2730:	strbcs	r0, [r6, #390]	; 0x186
    2734:	mov	r0, r6
    2738:	bl	ec4 <strchr@plt>
    273c:	cmp	r0, #0
    2740:	beq	27a8 <handle_remote_kline+0x204>
    2744:	mov	r5, r0
    2748:	mov	r0, #0
    274c:	strb	r0, [r5]
    2750:	ldrb	r0, [r5, #1]!
    2754:	cmp	r0, #0
    2758:	beq	27ac <handle_remote_kline+0x208>
    275c:	mov	r0, r5
    2760:	bl	eb8 <strlen@plt>
    2764:	add	r0, r0, #1
    2768:	bl	e88 <malloc@plt>
    276c:	cmp	r0, #0
    2770:	beq	2820 <handle_remote_kline+0x27c>
    2774:	mov	r1, r5
    2778:	bl	e58 <strcpy@plt>
    277c:	str	r0, [r8, #24]
    2780:	b	27ac <handle_remote_kline+0x208>
    2784:	ldr	r0, [pc, #156]	; 2828 <handle_remote_kline+0x284>
    2788:	ldr	r0, [pc, r0]
    278c:	ldr	r2, [r0, #236]	; 0xec
    2790:	ldr	r1, [pc, #148]	; 282c <handle_remote_kline+0x288>
    2794:	mov	r0, r4
    2798:	add	r1, pc, r1
    279c:	bl	f0c <sendto_one_notice@plt>
    27a0:	sub	sp, fp, #28
    27a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    27a8:	mov	r5, #0
    27ac:	mov	r0, r6
    27b0:	bl	eb8 <strlen@plt>
    27b4:	add	r0, r0, #1
    27b8:	bl	e88 <malloc@plt>
    27bc:	cmp	r0, #0
    27c0:	beq	2820 <handle_remote_kline+0x27c>
    27c4:	mov	r1, r6
    27c8:	bl	e58 <strcpy@plt>
    27cc:	cmp	r9, #1
    27d0:	str	r0, [r8, #20]
    27d4:	blt	27fc <handle_remote_kline+0x258>
    27d8:	sub	sp, sp, #8
    27dc:	mov	r0, r4
    27e0:	mov	r1, r8
    27e4:	mov	r2, r6
    27e8:	mov	r3, r5
    27ec:	str	r9, [sp]
    27f0:	bl	22c0 <apply_tkline>
    27f4:	add	sp, sp, #8
    27f8:	b	2810 <handle_remote_kline+0x26c>
    27fc:	mov	r0, r4
    2800:	mov	r1, r8
    2804:	mov	r2, r6
    2808:	mov	r3, r5
    280c:	bl	243c <apply_kline>
    2810:	mov	r0, r8
    2814:	bl	e4c <check_one_kline@plt>
    2818:	sub	sp, fp, #28
    281c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2820:	bl	de0 <rb_outofmemory@plt>
    2824:	.word	0x00000696
    2828:	.word	0x00011958
    282c:	.word	0x000004d8

00002830 <remove_temp_kline>:
    2830:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    2834:	add	fp, sp, #24
    2838:	sub	sp, sp, #8
    283c:	ldr	r7, [pc, #468]	; 2a18 <remove_temp_kline+0x1e8>
    2840:	mov	r4, r1
    2844:	mov	r6, r0
    2848:	ldr	r7, [pc, r7]
    284c:	ldr	r5, [r7]
    2850:	cmp	r5, #0
    2854:	beq	2870 <remove_temp_kline+0x40>
    2858:	ldr	r0, [r5]
    285c:	cmp	r0, r4
    2860:	beq	28fc <remove_temp_kline+0xcc>
    2864:	ldr	r5, [r5, #8]
    2868:	cmp	r5, #0
    286c:	bne	2858 <remove_temp_kline+0x28>
    2870:	ldr	r1, [pc, #440]	; 2a30 <remove_temp_kline+0x200>
    2874:	ldr	r1, [pc, r1]
    2878:	ldr	r5, [r1, #12]
    287c:	cmp	r5, #0
    2880:	beq	28a0 <remove_temp_kline+0x70>
    2884:	add	r7, r1, #12
    2888:	ldr	r0, [r5]
    288c:	cmp	r0, r4
    2890:	beq	2904 <remove_temp_kline+0xd4>
    2894:	ldr	r5, [r5, #8]
    2898:	cmp	r5, #0
    289c:	bne	2888 <remove_temp_kline+0x58>
    28a0:	ldr	r5, [r1, #24]
    28a4:	cmp	r5, #0
    28a8:	beq	28c8 <remove_temp_kline+0x98>
    28ac:	add	r7, r1, #24
    28b0:	ldr	r0, [r5]
    28b4:	cmp	r0, r4
    28b8:	beq	290c <remove_temp_kline+0xdc>
    28bc:	ldr	r5, [r5, #8]
    28c0:	cmp	r5, #0
    28c4:	bne	28b0 <remove_temp_kline+0x80>
    28c8:	ldr	r5, [r1, #36]	; 0x24
    28cc:	mov	r0, #0
    28d0:	cmp	r5, #0
    28d4:	beq	28f4 <remove_temp_kline+0xc4>
    28d8:	add	r7, r1, #36	; 0x24
    28dc:	ldr	r1, [r5]
    28e0:	cmp	r1, r4
    28e4:	beq	2914 <remove_temp_kline+0xe4>
    28e8:	ldr	r5, [r5, #8]
    28ec:	cmp	r5, #0
    28f0:	bne	28dc <remove_temp_kline+0xac>
    28f4:	sub	sp, fp, #24
    28f8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    28fc:	mov	r8, #0
    2900:	b	2918 <remove_temp_kline+0xe8>
    2904:	mov	r8, #1
    2908:	b	2918 <remove_temp_kline+0xe8>
    290c:	mov	r8, #2
    2910:	b	2918 <remove_temp_kline+0xe8>
    2914:	mov	r8, #3
    2918:	ldr	r3, [r4, #16]
    291c:	ldr	r2, [r4, #28]
    2920:	ldr	r1, [pc, #244]	; 2a1c <remove_temp_kline+0x1ec>
    2924:	mov	r0, r6
    2928:	add	r1, pc, r1
    292c:	bl	f0c <sendto_one_notice@plt>
    2930:	mov	r0, r6
    2934:	bl	e1c <get_oper_name@plt>
    2938:	mov	r3, r0
    293c:	ldr	r0, [r4, #16]
    2940:	ldr	r1, [r4, #28]
    2944:	str	r1, [sp]
    2948:	str	r0, [sp, #4]
    294c:	mov	r0, #256	; 0x100
    2950:	mov	r1, #0
    2954:	ldr	r2, [pc, #196]	; 2a20 <remove_temp_kline+0x1f0>
    2958:	add	r2, pc, r2
    295c:	bl	df8 <sendto_realops_snomask@plt>
    2960:	mov	r0, r6
    2964:	bl	e1c <get_oper_name@plt>
    2968:	mov	r2, r0
    296c:	ldr	r0, [r4, #16]
    2970:	ldr	r3, [r4, #28]
    2974:	str	r0, [sp]
    2978:	mov	r0, #7
    297c:	ldr	r1, [pc, #160]	; 2a24 <remove_temp_kline+0x1f4>
    2980:	add	r1, pc, r1
    2984:	bl	edc <ilog@plt>
    2988:	ldr	r0, [r5, #8]
    298c:	ldr	r1, [r5, #4]
    2990:	cmp	r0, #0
    2994:	beq	29a4 <remove_temp_kline+0x174>
    2998:	str	r1, [r0, #4]
    299c:	ldr	r1, [r5, #4]
    29a0:	b	29b8 <remove_temp_kline+0x188>
    29a4:	ldr	r3, [pc, #124]	; 2a28 <remove_temp_kline+0x1f8>
    29a8:	add	r2, r8, r8, lsl #1
    29ac:	ldr	r3, [pc, r3]
    29b0:	add	r2, r3, r2, lsl #2
    29b4:	str	r1, [r2, #4]
    29b8:	cmp	r1, #0
    29bc:	addne	r7, r1, #8
    29c0:	str	r0, [r7]
    29c4:	mov	r0, #0
    29c8:	str	r0, [r5, #4]
    29cc:	str	r0, [r5, #8]
    29d0:	add	r0, r8, r8, lsl #1
    29d4:	ldr	r1, [pc, #80]	; 2a2c <remove_temp_kline+0x1fc>
    29d8:	ldr	r1, [pc, r1]
    29dc:	add	r0, r1, r0, lsl #2
    29e0:	ldr	r1, [r0, #8]
    29e4:	sub	r1, r1, #1
    29e8:	str	r1, [r0, #8]
    29ec:	mov	r0, r5
    29f0:	bl	e28 <rb_free_rb_dlink_node@plt>
    29f4:	ldr	r1, [r4, #16]
    29f8:	ldr	r0, [r4, #28]
    29fc:	bl	f00 <remove_reject_mask@plt>
    2a00:	ldr	r0, [r4, #16]
    2a04:	mov	r1, r4
    2a08:	bl	ed0 <delete_one_address_conf@plt>
    2a0c:	mov	r0, #1
    2a10:	sub	sp, fp, #24
    2a14:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    2a18:	.word	0x0001188c
    2a1c:	.word	0x0000074b
    2a20:	.word	0x00000745
    2a24:	.word	0x000006c8
    2a28:	.word	0x00011728
    2a2c:	.word	0x000116fc
    2a30:	.word	0x00011860

00002a34 <remove_permkline_match>:
    2a34:	push	{r4, r5, fp, lr}
    2a38:	add	fp, sp, #8
    2a3c:	sub	sp, sp, #8
    2a40:	mov	r4, r1
    2a44:	ldr	r3, [r1, #16]
    2a48:	ldr	r2, [r1, #28]
    2a4c:	ldr	r1, [pc, #144]	; 2ae4 <remove_permkline_match+0xb0>
    2a50:	mov	r5, r0
    2a54:	add	r1, pc, r1
    2a58:	bl	f0c <sendto_one_notice@plt>
    2a5c:	mov	r0, r5
    2a60:	bl	e1c <get_oper_name@plt>
    2a64:	mov	r3, r0
    2a68:	ldr	r0, [r4, #16]
    2a6c:	ldr	r1, [r4, #28]
    2a70:	str	r1, [sp]
    2a74:	str	r0, [sp, #4]
    2a78:	mov	r0, #256	; 0x100
    2a7c:	mov	r1, #0
    2a80:	ldr	r2, [pc, #96]	; 2ae8 <remove_permkline_match+0xb4>
    2a84:	add	r2, pc, r2
    2a88:	bl	df8 <sendto_realops_snomask@plt>
    2a8c:	mov	r0, r5
    2a90:	bl	e1c <get_oper_name@plt>
    2a94:	mov	r2, r0
    2a98:	ldr	r0, [r4, #16]
    2a9c:	ldr	r3, [r4, #28]
    2aa0:	str	r0, [sp]
    2aa4:	mov	r0, #7
    2aa8:	ldr	r1, [pc, #60]	; 2aec <remove_permkline_match+0xb8>
    2aac:	add	r1, pc, r1
    2ab0:	bl	edc <ilog@plt>
    2ab4:	ldr	r1, [r4, #16]
    2ab8:	ldr	r0, [r4, #28]
    2abc:	bl	f00 <remove_reject_mask@plt>
    2ac0:	ldr	r2, [r4, #16]
    2ac4:	ldr	r1, [r4, #28]
    2ac8:	mov	r0, #0
    2acc:	bl	f18 <bandb_del@plt>
    2ad0:	ldr	r0, [r4, #16]
    2ad4:	mov	r1, r4
    2ad8:	sub	sp, fp, #8
    2adc:	pop	{r4, r5, fp, lr}
    2ae0:	b	ed0 <delete_one_address_conf@plt>
    2ae4:	.word	0x0000067a
    2ae8:	.word	0x00000669
    2aec:	.word	0x0000059c

00002af0 <handle_remote_unkline>:
    2af0:	push	{r4, r5, r6, r7, fp, lr}
    2af4:	add	fp, sp, #16
    2af8:	mov	r5, r2
    2afc:	ldr	r2, [r0, #32]
    2b00:	mov	r4, r0
    2b04:	mov	r6, r1
    2b08:	add	r0, r0, #152	; 0x98
    2b0c:	mov	r3, #4
    2b10:	add	r1, r4, #163	; 0xa3
    2b14:	add	r2, r2, #88	; 0x58
    2b18:	bl	f3c <find_shared_conf@plt>
    2b1c:	cmp	r0, #0
    2b20:	popeq	{r4, r5, r6, r7, fp, pc}
    2b24:	mov	r0, r5
    2b28:	mov	r1, #64	; 0x40
    2b2c:	mov	r2, r6
    2b30:	bl	f24 <find_exact_conf_by_address@plt>
    2b34:	cmp	r0, #0
    2b38:	beq	2b58 <handle_remote_unkline+0x68>
    2b3c:	mov	r7, r0
    2b40:	ldr	r0, [r0, #44]	; 0x2c
    2b44:	cmp	r0, #0
    2b48:	beq	2b74 <handle_remote_unkline+0x84>
    2b4c:	ldr	r1, [pc, #76]	; 2ba0 <handle_remote_unkline+0xb0>
    2b50:	add	r1, pc, r1
    2b54:	b	2b60 <handle_remote_unkline+0x70>
    2b58:	ldr	r1, [pc, #60]	; 2b9c <handle_remote_unkline+0xac>
    2b5c:	add	r1, pc, r1
    2b60:	mov	r0, r4
    2b64:	mov	r2, r6
    2b68:	mov	r3, r5
    2b6c:	pop	{r4, r5, r6, r7, fp, lr}
    2b70:	b	f0c <sendto_one_notice@plt>
    2b74:	mov	r0, r4
    2b78:	mov	r1, r7
    2b7c:	bl	2830 <remove_temp_kline>
    2b80:	cmp	r0, #0
    2b84:	beq	2b8c <handle_remote_unkline+0x9c>
    2b88:	pop	{r4, r5, r6, r7, fp, pc}
    2b8c:	mov	r0, r4
    2b90:	mov	r1, r7
    2b94:	pop	{r4, r5, r6, r7, fp, lr}
    2b98:	b	2a34 <remove_permkline_match>
    2b9c:	.word	0x0000044b
    2ba0:	.word	0x0000046c

Disassembly of section .fini:

00002ba4 <_fini>:
    2ba4:	push	{r3, lr}
    2ba8:	pop	{r3, pc}
