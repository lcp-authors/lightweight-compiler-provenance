
../repos/prog2/MT1E1-2.1:     file format elf32-littlearm


Disassembly of section .init:

00010b08 <.init>:
   10b08:	push	{r3, lr}
   10b0c:	bl	10fc4 <_start@@Base+0x3c>
   10b10:	pop	{r3, pc}

Disassembly of section .plt:

00010b14 <calloc@plt-0x14>:
   10b14:	push	{lr}		; (str lr, [sp, #-4]!)
   10b18:	ldr	lr, [pc, #4]	; 10b24 <calloc@plt-0x4>
   10b1c:	add	lr, pc, lr
   10b20:	ldr	pc, [lr, #8]!
   10b24:	ldrdeq	r1, [r1], -ip

00010b28 <calloc@plt>:
   10b28:	add	ip, pc, #0, 12
   10b2c:	add	ip, ip, #69632	; 0x11000
   10b30:	ldr	pc, [ip, #1244]!	; 0x4dc

00010b34 <strcmp@plt>:
   10b34:	add	ip, pc, #0, 12
   10b38:	add	ip, ip, #69632	; 0x11000
   10b3c:	ldr	pc, [ip, #1236]!	; 0x4d4

00010b40 <free@plt>:
   10b40:	add	ip, pc, #0, 12
   10b44:	add	ip, ip, #69632	; 0x11000
   10b48:	ldr	pc, [ip, #1228]!	; 0x4cc

00010b4c <memcpy@plt>:
   10b4c:	add	ip, pc, #0, 12
   10b50:	add	ip, ip, #69632	; 0x11000
   10b54:	ldr	pc, [ip, #1220]!	; 0x4c4

00010b58 <realloc@plt>:
   10b58:	add	ip, pc, #0, 12
   10b5c:	add	ip, ip, #69632	; 0x11000
   10b60:	ldr	pc, [ip, #1212]!	; 0x4bc

00010b64 <fwrite@plt>:
   10b64:	add	ip, pc, #0, 12
   10b68:	add	ip, ip, #69632	; 0x11000
   10b6c:	ldr	pc, [ip, #1204]!	; 0x4b4

00010b70 <strcpy@plt>:
   10b70:	add	ip, pc, #0, 12
   10b74:	add	ip, ip, #69632	; 0x11000
   10b78:	ldr	pc, [ip, #1196]!	; 0x4ac

00010b7c <puts@plt>:
   10b7c:	add	ip, pc, #0, 12
   10b80:	add	ip, ip, #69632	; 0x11000
   10b84:	ldr	pc, [ip, #1188]!	; 0x4a4

00010b88 <malloc@plt>:
   10b88:	add	ip, pc, #0, 12
   10b8c:	add	ip, ip, #69632	; 0x11000
   10b90:	ldr	pc, [ip, #1180]!	; 0x49c

00010b94 <__libc_start_main@plt>:
   10b94:	add	ip, pc, #0, 12
   10b98:	add	ip, ip, #69632	; 0x11000
   10b9c:	ldr	pc, [ip, #1172]!	; 0x494

00010ba0 <__gmon_start__@plt>:
   10ba0:	add	ip, pc, #0, 12
   10ba4:	add	ip, ip, #69632	; 0x11000
   10ba8:	ldr	pc, [ip, #1164]!	; 0x48c

00010bac <strlen@plt>:
   10bac:	add	ip, pc, #0, 12
   10bb0:	add	ip, ip, #69632	; 0x11000
   10bb4:	ldr	pc, [ip, #1156]!	; 0x484

00010bb8 <fprintf@plt>:
   10bb8:	add	ip, pc, #0, 12
   10bbc:	add	ip, ip, #69632	; 0x11000
   10bc0:	ldr	pc, [ip, #1148]!	; 0x47c

00010bc4 <sprintf@plt>:
   10bc4:	add	ip, pc, #0, 12
   10bc8:	add	ip, ip, #69632	; 0x11000
   10bcc:	ldr	pc, [ip, #1140]!	; 0x474

00010bd0 <abort@plt>:
   10bd0:	add	ip, pc, #0, 12
   10bd4:	add	ip, ip, #69632	; 0x11000
   10bd8:	ldr	pc, [ip, #1132]!	; 0x46c

Disassembly of section .text:

00010bdc <main@@Base>:
   10bdc:	movw	r3, #8276	; 0x2054
   10be0:	movt	r3, #2
   10be4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   10be8:	strd	r6, [sp, #8]
   10bec:	mov	r5, r3
   10bf0:	mov	r6, r3
   10bf4:	strd	r8, [sp, #16]
   10bf8:	mov	r4, #0
   10bfc:	strd	sl, [sp, #24]
   10c00:	str	lr, [sp, #32]
   10c04:	sub	sp, sp, #28
   10c08:	str	r3, [sp, #4]
   10c0c:	bl	11330 <vetor_novo@@Base>
   10c10:	mov	r8, r0
   10c14:	mov	r2, r4
   10c18:	mov	r0, r8
   10c1c:	ldr	r1, [r6], #4
   10c20:	add	r4, r4, #1
   10c24:	bl	114e0 <vetor_insere@@Base>
   10c28:	cmp	r4, #4
   10c2c:	bne	10c14 <main@@Base+0x38>
   10c30:	ldr	fp, [pc, #832]	; 10f78 <main@@Base+0x39c>
   10c34:	movw	r9, #7416	; 0x1cf8
   10c38:	movt	r9, #1
   10c3c:	bl	11818 <lista_nova@@Base>
   10c40:	movw	r7, #7412	; 0x1cf4
   10c44:	movt	r7, #1
   10c48:	mov	r4, r0
   10c4c:	mov	sl, #65	; 0x41
   10c50:	add	r6, fp, #208	; 0xd0
   10c54:	b	10cb0 <main@@Base+0xd4>
   10c58:	cmp	r2, #8
   10c5c:	beq	10cd0 <main@@Base+0xf4>
   10c60:	cmp	r2, #9
   10c64:	moveq	r3, #74	; 0x4a
   10c68:	strheq	r3, [sp, #20]
   10c6c:	beq	10c98 <main@@Base+0xbc>
   10c70:	cmp	r2, #10
   10c74:	moveq	r3, #81	; 0x51
   10c78:	strheq	r3, [sp, #20]
   10c7c:	beq	10c98 <main@@Base+0xbc>
   10c80:	cmp	r2, #11
   10c84:	moveq	r3, #75	; 0x4b
   10c88:	strheq	r3, [sp, #20]
   10c8c:	beq	10c98 <main@@Base+0xbc>
   10c90:	cmp	r2, #12
   10c94:	strheq	sl, [sp, #20]
   10c98:	add	r1, sp, #20
   10c9c:	mov	r0, r4
   10ca0:	ldr	r2, [r4]
   10ca4:	bl	118e0 <lista_insere@@Base>
   10ca8:	cmp	fp, r6
   10cac:	beq	10ce4 <main@@Base+0x108>
   10cb0:	ldr	r2, [fp, #4]!
   10cb4:	cmp	r2, #7
   10cb8:	bgt	10c58 <main@@Base+0x7c>
   10cbc:	add	r2, r2, #50	; 0x32
   10cc0:	mov	r1, r7
   10cc4:	add	r0, sp, #20
   10cc8:	bl	10bc4 <sprintf@plt>
   10ccc:	b	10c98 <main@@Base+0xbc>
   10cd0:	ldrh	r2, [r9]
   10cd4:	ldrb	r3, [r9, #2]
   10cd8:	strh	r2, [sp, #20]
   10cdc:	strb	r3, [sp, #22]
   10ce0:	b	10c98 <main@@Base+0xbc>
   10ce4:	ldr	r6, [pc, #656]	; 10f7c <main@@Base+0x3a0>
   10ce8:	bl	11818 <lista_nova@@Base>
   10cec:	mov	r9, r0
   10cf0:	add	r7, r6, #52	; 0x34
   10cf4:	ldr	r1, [r6], #4
   10cf8:	mov	r2, #0
   10cfc:	mov	r0, r9
   10d00:	bl	118e0 <lista_insere@@Base>
   10d04:	cmp	r6, r7
   10d08:	bne	10cf4 <main@@Base+0x118>
   10d0c:	movw	fp, #8608	; 0x21a0
   10d10:	movt	fp, #2
   10d14:	ldr	r6, [fp]
   10d18:	mov	r1, r9
   10d1c:	mov	r0, r4
   10d20:	str	fp, [sp]
   10d24:	movw	r7, #7512	; 0x1d58
   10d28:	movt	r7, #1
   10d2c:	bl	11078 <tira_carta@@Base>
   10d30:	mov	r2, r0
   10d34:	movw	r1, #7420	; 0x1cfc
   10d38:	movt	r1, #1
   10d3c:	mov	r0, r6
   10d40:	mov	r6, #0
   10d44:	bl	10bb8 <fprintf@plt>
   10d48:	ldr	sl, [fp]
   10d4c:	mov	r1, r9
   10d50:	mov	r0, r4
   10d54:	bl	11078 <tira_carta@@Base>
   10d58:	mov	r2, r0
   10d5c:	movw	r1, #7452	; 0x1d1c
   10d60:	movt	r1, #1
   10d64:	mov	r0, sl
   10d68:	bl	10bb8 <fprintf@plt>
   10d6c:	ldr	sl, [fp]
   10d70:	mov	r1, r9
   10d74:	mov	r0, r4
   10d78:	bl	11078 <tira_carta@@Base>
   10d7c:	mov	r2, r0
   10d80:	movw	r1, #7480	; 0x1d38
   10d84:	movt	r1, #1
   10d88:	mov	r0, sl
   10d8c:	mov	sl, fp
   10d90:	bl	10bb8 <fprintf@plt>
   10d94:	mov	r0, r4
   10d98:	ldr	r1, [r5, #212]	; 0xd4
   10d9c:	bl	11264 <insere_carta@@Base>
   10da0:	mov	r0, r4
   10da4:	ldr	r1, [r5, #216]	; 0xd8
   10da8:	bl	11264 <insere_carta@@Base>
   10dac:	mov	r0, r4
   10db0:	ldr	r1, [r5, #220]	; 0xdc
   10db4:	bl	11264 <insere_carta@@Base>
   10db8:	bl	11330 <vetor_novo@@Base>
   10dbc:	mov	r5, r0
   10dc0:	mov	r2, r9
   10dc4:	mov	r1, r4
   10dc8:	mov	r0, r8
   10dcc:	bl	110e4 <faz_jogada@@Base>
   10dd0:	subs	r1, r0, #0
   10dd4:	mov	r2, r6
   10dd8:	mov	r0, r5
   10ddc:	add	r6, r6, #1
   10de0:	beq	10de8 <main@@Base+0x20c>
   10de4:	bl	114e0 <vetor_insere@@Base>
   10de8:	mov	r0, r8
   10dec:	bl	1149c <vetor_tamanho@@Base>
   10df0:	cmp	r0, #4
   10df4:	mov	r2, #44	; 0x2c
   10df8:	mov	r1, #1
   10dfc:	mov	r0, r7
   10e00:	beq	10e0c <main@@Base+0x230>
   10e04:	ldr	r3, [sl]
   10e08:	bl	10b64 <fwrite@plt>
   10e0c:	cmp	r6, #13
   10e10:	bne	10dc0 <main@@Base+0x1e4>
   10e14:	movw	r0, #7560	; 0x1d88
   10e18:	movt	r0, #1
   10e1c:	bl	10b7c <puts@plt>
   10e20:	ldr	r3, [r5]
   10e24:	cmp	r3, #0
   10e28:	ble	10e74 <main@@Base+0x298>
   10e2c:	ldr	r7, [sp]
   10e30:	movw	sl, #7600	; 0x1db0
   10e34:	movt	sl, #1
   10e38:	mov	r1, #0
   10e3c:	ldr	fp, [r7]
   10e40:	mov	r0, r5
   10e44:	add	r6, r1, #1
   10e48:	bl	114ac <vetor_elemento@@Base>
   10e4c:	mov	r3, r0
   10e50:	mov	r1, sl
   10e54:	mov	r2, r6
   10e58:	mov	r0, fp
   10e5c:	bl	10bb8 <fprintf@plt>
   10e60:	ldr	r3, [r5]
   10e64:	mov	r1, r6
   10e68:	cmp	r6, #2
   10e6c:	cmple	r6, r3
   10e70:	blt	10e3c <main@@Base+0x260>
   10e74:	ldr	r6, [pc, #260]	; 10f80 <main@@Base+0x3a4>
   10e78:	mov	r0, r5
   10e7c:	mov	r5, #0
   10e80:	bl	11370 <vetor_apaga@@Base>
   10e84:	bl	11330 <vetor_novo@@Base>
   10e88:	mov	sl, r0
   10e8c:	mov	r2, r5
   10e90:	mov	r0, sl
   10e94:	ldr	r1, [r6], #4
   10e98:	add	r5, r5, #1
   10e9c:	bl	114e0 <vetor_insere@@Base>
   10ea0:	cmp	r5, #13
   10ea4:	bne	10e8c <main@@Base+0x2b0>
   10ea8:	movw	r0, #7556	; 0x1d84
   10eac:	movt	r0, #1
   10eb0:	movw	r5, #7616	; 0x1dc0
   10eb4:	movt	r5, #1
   10eb8:	bl	10b7c <puts@plt>
   10ebc:	strd	r8, [sp, #8]
   10ec0:	mov	r9, r5
   10ec4:	ldr	r8, [sp, #4]
   10ec8:	str	r4, [sp, #4]
   10ecc:	ldr	r5, [sl]
   10ed0:	ldr	r3, [sp]
   10ed4:	ldr	r6, [r8], #4
   10ed8:	cmp	r5, #0
   10edc:	ldr	fp, [r3]
   10ee0:	ble	10f70 <main@@Base+0x394>
   10ee4:	mov	r7, #0
   10ee8:	ldr	r4, [sl, #8]
   10eec:	add	r5, r4, r5, lsl #2
   10ef0:	ldr	r1, [r4], #4
   10ef4:	mov	r0, r6
   10ef8:	bl	10b34 <strcmp@plt>
   10efc:	cmp	r0, #0
   10f00:	addeq	r7, r7, #1
   10f04:	cmp	r5, r4
   10f08:	bne	10ef0 <main@@Base+0x314>
   10f0c:	mov	r3, r7
   10f10:	mov	r2, r6
   10f14:	mov	r0, fp
   10f18:	mov	r1, r9
   10f1c:	bl	10bb8 <fprintf@plt>
   10f20:	ldr	r3, [pc, #92]	; 10f84 <main@@Base+0x3a8>
   10f24:	cmp	r8, r3
   10f28:	bne	10ecc <main@@Base+0x2f0>
   10f2c:	ldmib	sp, {r4, r8, r9}
   10f30:	mov	r0, r8
   10f34:	bl	11370 <vetor_apaga@@Base>
   10f38:	mov	r0, r4
   10f3c:	bl	11858 <lista_apaga@@Base>
   10f40:	mov	r0, r9
   10f44:	bl	11858 <lista_apaga@@Base>
   10f48:	mov	r0, sl
   10f4c:	bl	11370 <vetor_apaga@@Base>
   10f50:	mov	r0, #0
   10f54:	add	sp, sp, #28
   10f58:	ldrd	r4, [sp]
   10f5c:	ldrd	r6, [sp, #8]
   10f60:	ldrd	r8, [sp, #16]
   10f64:	ldrd	sl, [sp, #24]
   10f68:	add	sp, sp, #32
   10f6c:	pop	{pc}		; (ldr pc, [sp], #4)
   10f70:	mov	r7, #0
   10f74:	b	10f0c <main@@Base+0x330>
   10f78:	andeq	r2, r2, r0, rrx
   10f7c:	andeq	r2, r2, r4, lsr r1
   10f80:	andeq	r2, r2, r8, ror #2
   10f84:	andeq	r2, r2, r4, rrx

00010f88 <_start@@Base>:
   10f88:	mov	fp, #0
   10f8c:	mov	lr, #0
   10f90:	pop	{r1}		; (ldr r1, [sp], #4)
   10f94:	mov	r2, sp
   10f98:	push	{r2}		; (str r2, [sp, #-4]!)
   10f9c:	push	{r0}		; (str r0, [sp, #-4]!)
   10fa0:	ldr	ip, [pc, #16]	; 10fb8 <_start@@Base+0x30>
   10fa4:	push	{ip}		; (str ip, [sp, #-4]!)
   10fa8:	ldr	r0, [pc, #12]	; 10fbc <_start@@Base+0x34>
   10fac:	ldr	r3, [pc, #12]	; 10fc0 <_start@@Base+0x38>
   10fb0:	bl	10b94 <__libc_start_main@plt>
   10fb4:	bl	10bd0 <abort@plt>
   10fb8:	andeq	r1, r1, r4, ror #25
   10fbc:	ldrdeq	r0, [r1], -ip
   10fc0:	andeq	r1, r1, r4, lsl #25
   10fc4:	ldr	r3, [pc, #20]	; 10fe0 <_start@@Base+0x58>
   10fc8:	ldr	r2, [pc, #20]	; 10fe4 <_start@@Base+0x5c>
   10fcc:	add	r3, pc, r3
   10fd0:	ldr	r2, [r3, r2]
   10fd4:	cmp	r2, #0
   10fd8:	bxeq	lr
   10fdc:	b	10ba0 <__gmon_start__@plt>
   10fe0:	andeq	r1, r1, ip, lsr #32
   10fe4:	andeq	r0, r0, r8, asr #32
   10fe8:	ldr	r0, [pc, #24]	; 11008 <_start@@Base+0x80>
   10fec:	ldr	r3, [pc, #24]	; 1100c <_start@@Base+0x84>
   10ff0:	cmp	r3, r0
   10ff4:	bxeq	lr
   10ff8:	ldr	r3, [pc, #16]	; 11010 <_start@@Base+0x88>
   10ffc:	cmp	r3, #0
   11000:	bxeq	lr
   11004:	bx	r3
   11008:	muleq	r2, ip, r1
   1100c:	muleq	r2, ip, r1
   11010:	andeq	r0, r0, r0
   11014:	ldr	r0, [pc, #36]	; 11040 <_start@@Base+0xb8>
   11018:	ldr	r1, [pc, #36]	; 11044 <_start@@Base+0xbc>
   1101c:	sub	r1, r1, r0
   11020:	asr	r1, r1, #2
   11024:	add	r1, r1, r1, lsr #31
   11028:	asrs	r1, r1, #1
   1102c:	bxeq	lr
   11030:	ldr	r3, [pc, #16]	; 11048 <_start@@Base+0xc0>
   11034:	cmp	r3, #0
   11038:	bxeq	lr
   1103c:	bx	r3
   11040:	muleq	r2, ip, r1
   11044:	muleq	r2, ip, r1
   11048:	andeq	r0, r0, r0
   1104c:	push	{r4, lr}
   11050:	ldr	r4, [pc, #24]	; 11070 <_start@@Base+0xe8>
   11054:	ldrb	r3, [r4]
   11058:	cmp	r3, #0
   1105c:	popne	{r4, pc}
   11060:	bl	10fe8 <_start@@Base+0x60>
   11064:	mov	r3, #1
   11068:	strb	r3, [r4]
   1106c:	pop	{r4, pc}
   11070:	andeq	r2, r2, r4, lsr #3
   11074:	b	11014 <_start@@Base+0x8c>

00011078 <tira_carta@@Base>:
   11078:	ldr	r3, [r1]
   1107c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11080:	mov	r5, #0
   11084:	ldr	r4, [r3, #4]
   11088:	strd	r6, [sp, #8]
   1108c:	mov	r7, r0
   11090:	str	r8, [sp, #16]
   11094:	ldr	r8, [r0]
   11098:	str	lr, [sp, #20]
   1109c:	ldr	r0, [r3]
   110a0:	ldr	r6, [r8]
   110a4:	b	110b0 <tira_carta@@Base+0x38>
   110a8:	ldm	r4, {r0, r4}
   110ac:	add	r5, r5, #1
   110b0:	mov	r1, r6
   110b4:	bl	10b34 <strcmp@plt>
   110b8:	cmp	r0, #0
   110bc:	bne	110a8 <tira_carta@@Base+0x30>
   110c0:	mov	r1, r8
   110c4:	mov	r0, r7
   110c8:	bl	119f4 <lista_remove@@Base>
   110cc:	mov	r0, r5
   110d0:	ldrd	r4, [sp]
   110d4:	ldrd	r6, [sp, #8]
   110d8:	ldr	r8, [sp, #16]
   110dc:	add	sp, sp, #20
   110e0:	pop	{pc}		; (ldr pc, [sp], #4)

000110e4 <faz_jogada@@Base>:
   110e4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   110e8:	mov	r5, r1
   110ec:	ldr	r4, [r0]
   110f0:	strd	r6, [sp, #8]
   110f4:	strd	r8, [sp, #16]
   110f8:	strd	sl, [sp, #24]
   110fc:	mov	fp, r2
   11100:	str	lr, [sp, #32]
   11104:	sub	sp, sp, #20
   11108:	str	r0, [sp, #4]
   1110c:	lsl	r0, r4, #2
   11110:	bl	10b88 <malloc@plt>
   11114:	cmp	r4, #0
   11118:	str	r0, [sp, #8]
   1111c:	ble	111f4 <faz_jogada@@Base+0x110>
   11120:	sub	r7, r0, #4
   11124:	mov	r6, #0
   11128:	mov	r8, r7
   1112c:	mov	r9, r5
   11130:	str	r7, [sp, #12]
   11134:	ldr	r4, [r9]
   11138:	mov	sl, #0
   1113c:	ldr	r1, [fp]
   11140:	ldr	r7, [r4]
   11144:	ldm	r1, {r0, r5}
   11148:	b	11154 <faz_jogada@@Base+0x70>
   1114c:	ldm	r5, {r0, r5}
   11150:	add	sl, sl, #1
   11154:	mov	r1, r7
   11158:	bl	10b34 <strcmp@plt>
   1115c:	cmp	r0, #0
   11160:	bne	1114c <faz_jogada@@Base+0x68>
   11164:	mov	r5, r0
   11168:	mov	r1, r4
   1116c:	mov	r0, r9
   11170:	add	r6, r6, #1
   11174:	bl	119f4 <lista_remove@@Base>
   11178:	ldr	r3, [sp, #4]
   1117c:	str	sl, [r8, #4]!
   11180:	ldr	r2, [r3]
   11184:	cmp	r2, r6
   11188:	bgt	11134 <faz_jogada@@Base+0x50>
   1118c:	cmp	r2, #0
   11190:	mov	r4, r5
   11194:	ldr	r7, [sp, #12]
   11198:	ble	111f4 <faz_jogada@@Base+0x110>
   1119c:	mvn	r0, #0
   111a0:	mov	r3, r0
   111a4:	ldr	r1, [r7, #4]!
   111a8:	cmp	r1, r3
   111ac:	movgt	r0, r4
   111b0:	add	r4, r4, #1
   111b4:	movgt	r3, r1
   111b8:	cmp	r2, r4
   111bc:	bne	111a4 <faz_jogada@@Base+0xc0>
   111c0:	lsl	r4, r0, #2
   111c4:	ldr	r0, [sp, #8]
   111c8:	bl	10b40 <free@plt>
   111cc:	ldr	r3, [sp, #4]
   111d0:	ldr	r3, [r3, #8]
   111d4:	ldr	r0, [r3, r4]
   111d8:	add	sp, sp, #20
   111dc:	ldrd	r4, [sp]
   111e0:	ldrd	r6, [sp, #8]
   111e4:	ldrd	r8, [sp, #16]
   111e8:	ldrd	sl, [sp, #24]
   111ec:	add	sp, sp, #32
   111f0:	pop	{pc}		; (ldr pc, [sp], #4)
   111f4:	mvn	r4, #3
   111f8:	b	111c4 <faz_jogada@@Base+0xe0>

000111fc <numero_vitorias@@Base>:
   111fc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11200:	ldr	r5, [r0]
   11204:	strd	r6, [sp, #8]
   11208:	str	r8, [sp, #16]
   1120c:	str	lr, [sp, #20]
   11210:	cmp	r5, #0
   11214:	ble	1125c <numero_vitorias@@Base+0x60>
   11218:	ldr	r4, [r0, #8]
   1121c:	mov	r6, r1
   11220:	mov	r7, #0
   11224:	add	r5, r4, r5, lsl #2
   11228:	ldr	r1, [r4], #4
   1122c:	mov	r0, r6
   11230:	bl	10b34 <strcmp@plt>
   11234:	cmp	r0, #0
   11238:	addeq	r7, r7, #1
   1123c:	cmp	r4, r5
   11240:	bne	11228 <numero_vitorias@@Base+0x2c>
   11244:	mov	r0, r7
   11248:	ldrd	r4, [sp]
   1124c:	ldrd	r6, [sp, #8]
   11250:	ldr	r8, [sp, #16]
   11254:	add	sp, sp, #20
   11258:	pop	{pc}		; (ldr pc, [sp], #4)
   1125c:	mov	r7, #0
   11260:	b	11244 <numero_vitorias@@Base+0x48>

00011264 <insere_carta@@Base>:
   11264:	cmp	r1, #7
   11268:	strd	r4, [sp, #-12]!
   1126c:	mov	r4, r0
   11270:	str	lr, [sp, #8]
   11274:	sub	sp, sp, #12
   11278:	ble	112f4 <insere_carta@@Base+0x90>
   1127c:	cmp	r1, #8
   11280:	beq	11310 <insere_carta@@Base+0xac>
   11284:	cmp	r1, #9
   11288:	moveq	r3, #74	; 0x4a
   1128c:	addeq	r5, sp, #4
   11290:	strheq	r3, [sp, #4]
   11294:	beq	112d4 <insere_carta@@Base+0x70>
   11298:	cmp	r1, #10
   1129c:	moveq	r3, #81	; 0x51
   112a0:	addeq	r5, sp, #4
   112a4:	strheq	r3, [sp, #4]
   112a8:	beq	112d4 <insere_carta@@Base+0x70>
   112ac:	cmp	r1, #11
   112b0:	moveq	r3, #75	; 0x4b
   112b4:	addeq	r5, sp, #4
   112b8:	strheq	r3, [sp, #4]
   112bc:	beq	112d4 <insere_carta@@Base+0x70>
   112c0:	cmp	r1, #12
   112c4:	moveq	r3, #65	; 0x41
   112c8:	addne	r5, sp, #4
   112cc:	addeq	r5, sp, #4
   112d0:	strheq	r3, [sp, #4]
   112d4:	ldr	r2, [r4]
   112d8:	mov	r1, r5
   112dc:	mov	r0, r4
   112e0:	bl	118e0 <lista_insere@@Base>
   112e4:	add	sp, sp, #12
   112e8:	ldrd	r4, [sp]
   112ec:	add	sp, sp, #8
   112f0:	pop	{pc}		; (ldr pc, [sp], #4)
   112f4:	add	r5, sp, #4
   112f8:	add	r2, r1, #50	; 0x32
   112fc:	mov	r0, r5
   11300:	movw	r1, #7412	; 0x1cf4
   11304:	movt	r1, #1
   11308:	bl	10bc4 <sprintf@plt>
   1130c:	b	112d4 <insere_carta@@Base+0x70>
   11310:	movw	r3, #7416	; 0x1cf8
   11314:	movt	r3, #1
   11318:	ldrh	r2, [r3]
   1131c:	add	r5, sp, #4
   11320:	ldrb	r3, [r3, #2]
   11324:	strh	r2, [sp, #4]
   11328:	strb	r3, [r5, #2]
   1132c:	b	112d4 <insere_carta@@Base+0x70>

00011330 <vetor_novo@@Base>:
   11330:	mov	r0, #12
   11334:	strd	r4, [sp, #-16]!
   11338:	str	r6, [sp, #8]
   1133c:	str	lr, [sp, #12]
   11340:	bl	10b88 <malloc@plt>
   11344:	cmp	r0, #0
   11348:	beq	11360 <vetor_novo@@Base+0x30>
   1134c:	mov	r4, #0
   11350:	mov	r5, #0
   11354:	mov	r3, #0
   11358:	strd	r4, [r0]
   1135c:	str	r3, [r0, #8]
   11360:	ldrd	r4, [sp]
   11364:	ldr	r6, [sp, #8]
   11368:	add	sp, sp, #12
   1136c:	pop	{pc}		; (ldr pc, [sp], #4)

00011370 <vetor_apaga@@Base>:
   11370:	strd	r4, [sp, #-16]!
   11374:	subs	r5, r0, #0
   11378:	str	r6, [sp, #8]
   1137c:	str	lr, [sp, #12]
   11380:	beq	113d0 <vetor_apaga@@Base+0x60>
   11384:	ldr	r3, [r5]
   11388:	cmp	r3, #0
   1138c:	ble	113b0 <vetor_apaga@@Base+0x40>
   11390:	mov	r4, #0
   11394:	ldr	r3, [r5, #8]
   11398:	ldr	r0, [r3, r4, lsl #2]
   1139c:	add	r4, r4, #1
   113a0:	bl	10b40 <free@plt>
   113a4:	ldr	r3, [r5]
   113a8:	cmp	r3, r4
   113ac:	bgt	11394 <vetor_apaga@@Base+0x24>
   113b0:	ldr	r0, [r5, #8]
   113b4:	bl	10b40 <free@plt>
   113b8:	mov	r0, r5
   113bc:	ldrd	r4, [sp]
   113c0:	ldr	r6, [sp, #8]
   113c4:	ldr	lr, [sp, #12]
   113c8:	add	sp, sp, #16
   113cc:	b	10b40 <free@plt>
   113d0:	ldrd	r4, [sp]
   113d4:	ldr	r6, [sp, #8]
   113d8:	add	sp, sp, #12
   113dc:	pop	{pc}		; (ldr pc, [sp], #4)

000113e0 <vetor_atribui@@Base>:
   113e0:	cmp	r0, #0
   113e4:	lsrne	r3, r1, #31
   113e8:	moveq	r3, #1
   113ec:	cmp	r3, #0
   113f0:	bne	11494 <vetor_atribui@@Base+0xb4>
   113f4:	ldr	r3, [r0]
   113f8:	cmp	r3, r1
   113fc:	ble	11494 <vetor_atribui@@Base+0xb4>
   11400:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11404:	mov	r5, r0
   11408:	mov	r0, r2
   1140c:	mov	r4, r1
   11410:	strd	r6, [sp, #8]
   11414:	mov	r6, r2
   11418:	strd	r8, [sp, #16]
   1141c:	str	sl, [sp, #24]
   11420:	str	lr, [sp, #28]
   11424:	bl	10bac <strlen@plt>
   11428:	ldr	r8, [r5, #8]
   1142c:	mov	r9, r0
   11430:	ldr	r7, [r8, r4, lsl #2]
   11434:	mov	r0, r7
   11438:	bl	10bac <strlen@plt>
   1143c:	cmp	r0, r9
   11440:	bcc	1146c <vetor_atribui@@Base+0x8c>
   11444:	mov	r1, r6
   11448:	mov	r0, r7
   1144c:	bl	10b70 <strcpy@plt>
   11450:	mov	r0, r4
   11454:	ldrd	r4, [sp]
   11458:	ldrd	r6, [sp, #8]
   1145c:	ldrd	r8, [sp, #16]
   11460:	ldr	sl, [sp, #24]
   11464:	add	sp, sp, #28
   11468:	pop	{pc}		; (ldr pc, [sp], #4)
   1146c:	mov	r0, r7
   11470:	add	r1, r9, #1
   11474:	bl	10b58 <realloc@plt>
   11478:	ldr	r3, [r5, #8]
   1147c:	str	r0, [r8, r4, lsl #2]
   11480:	ldr	r7, [r3, r4, lsl #2]
   11484:	cmp	r7, #0
   11488:	bne	11444 <vetor_atribui@@Base+0x64>
   1148c:	mvn	r0, #0
   11490:	b	11454 <vetor_atribui@@Base+0x74>
   11494:	mvn	r0, #0
   11498:	bx	lr

0001149c <vetor_tamanho@@Base>:
   1149c:	cmp	r0, #0
   114a0:	ldrne	r0, [r0]
   114a4:	mvneq	r0, #0
   114a8:	bx	lr

000114ac <vetor_elemento@@Base>:
   114ac:	cmp	r0, #0
   114b0:	lsrne	r3, r1, #31
   114b4:	moveq	r3, #1
   114b8:	cmp	r3, #0
   114bc:	bne	114d8 <vetor_elemento@@Base+0x2c>
   114c0:	ldr	r2, [r0]
   114c4:	cmp	r2, r1
   114c8:	ble	114d8 <vetor_elemento@@Base+0x2c>
   114cc:	ldr	r3, [r0, #8]
   114d0:	ldr	r0, [r3, r1, lsl #2]
   114d4:	bx	lr
   114d8:	mov	r0, #0
   114dc:	bx	lr

000114e0 <vetor_insere@@Base>:
   114e0:	cmp	r0, #0
   114e4:	lsrne	r3, r2, #31
   114e8:	moveq	r3, #1
   114ec:	cmp	r3, #0
   114f0:	bne	115d0 <vetor_insere@@Base+0xf0>
   114f4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   114f8:	strd	r6, [sp, #8]
   114fc:	ldr	r6, [r0]
   11500:	str	r8, [sp, #16]
   11504:	str	lr, [sp, #20]
   11508:	cmp	r6, r2
   1150c:	blt	115c8 <vetor_insere@@Base+0xe8>
   11510:	ldmib	r0, {r3, r5}
   11514:	mov	r7, r0
   11518:	mov	r8, r1
   1151c:	mov	r4, r2
   11520:	cmp	r6, r3
   11524:	beq	11590 <vetor_insere@@Base+0xb0>
   11528:	cmp	r4, r6
   1152c:	addlt	r3, r5, r6, lsl #2
   11530:	addlt	r2, r5, r4, lsl #2
   11534:	bge	11548 <vetor_insere@@Base+0x68>
   11538:	ldr	ip, [r3, #-4]
   1153c:	str	ip, [r3], #-4
   11540:	cmp	r2, r3
   11544:	bne	11538 <vetor_insere@@Base+0x58>
   11548:	mov	r0, r8
   1154c:	bl	10bac <strlen@plt>
   11550:	add	r0, r0, #1
   11554:	mov	r1, #1
   11558:	bl	10b28 <calloc@plt>
   1155c:	cmp	r0, #0
   11560:	str	r0, [r5, r4, lsl #2]
   11564:	beq	115c8 <vetor_insere@@Base+0xe8>
   11568:	mov	r1, r8
   1156c:	bl	10b70 <strcpy@plt>
   11570:	add	r1, r6, #1
   11574:	mov	r0, r4
   11578:	str	r1, [r7]
   1157c:	ldrd	r4, [sp]
   11580:	ldrd	r6, [sp, #8]
   11584:	ldr	r8, [sp, #16]
   11588:	add	sp, sp, #20
   1158c:	pop	{pc}		; (ldr pc, [sp], #4)
   11590:	cmp	r6, #0
   11594:	mov	r0, r5
   11598:	lslne	r3, r6, #1
   1159c:	moveq	r3, #1
   115a0:	moveq	r1, #4
   115a4:	lslne	r1, r6, #3
   115a8:	str	r3, [r7, #4]
   115ac:	bl	10b58 <realloc@plt>
   115b0:	cmp	r0, #0
   115b4:	mov	r5, r0
   115b8:	str	r0, [r7, #8]
   115bc:	beq	115c8 <vetor_insere@@Base+0xe8>
   115c0:	ldr	r6, [r7]
   115c4:	b	11528 <vetor_insere@@Base+0x48>
   115c8:	mvn	r0, #0
   115cc:	b	1157c <vetor_insere@@Base+0x9c>
   115d0:	mvn	r0, #0
   115d4:	bx	lr

000115d8 <vetor_remove@@Base>:
   115d8:	cmp	r0, #0
   115dc:	lsrne	r3, r1, #31
   115e0:	moveq	r3, #1
   115e4:	cmp	r3, #0
   115e8:	bne	11668 <vetor_remove@@Base+0x90>
   115ec:	ldr	r3, [r0]
   115f0:	cmp	r3, r1
   115f4:	ble	11668 <vetor_remove@@Base+0x90>
   115f8:	ldr	r3, [r0, #8]
   115fc:	strd	r4, [sp, #-16]!
   11600:	mov	r5, r0
   11604:	mov	r4, r1
   11608:	ldr	r0, [r3, r1, lsl #2]
   1160c:	str	r6, [sp, #8]
   11610:	lsl	r6, r1, #2
   11614:	str	lr, [sp, #12]
   11618:	bl	10b40 <free@plt>
   1161c:	ldr	r0, [r5]
   11620:	add	r1, r4, #1
   11624:	cmp	r1, r0
   11628:	bge	1164c <vetor_remove@@Base+0x74>
   1162c:	ldr	r3, [r5, #8]
   11630:	sub	r1, r3, #4
   11634:	add	r3, r3, r6
   11638:	add	r1, r1, r0, lsl #2
   1163c:	ldr	r2, [r3, #4]
   11640:	str	r2, [r3], #4
   11644:	cmp	r1, r3
   11648:	bne	1163c <vetor_remove@@Base+0x64>
   1164c:	sub	r3, r0, #1
   11650:	ldr	r6, [sp, #8]
   11654:	mov	r0, #0
   11658:	str	r3, [r5]
   1165c:	ldrd	r4, [sp]
   11660:	add	sp, sp, #12
   11664:	pop	{pc}		; (ldr pc, [sp], #4)
   11668:	mvn	r0, #0
   1166c:	bx	lr

00011670 <vetor_pesquisa@@Base>:
   11670:	cmp	r0, #0
   11674:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11678:	strd	r6, [sp, #8]
   1167c:	str	r8, [sp, #16]
   11680:	str	lr, [sp, #20]
   11684:	beq	116e0 <vetor_pesquisa@@Base+0x70>
   11688:	ldr	r7, [r0]
   1168c:	cmp	r7, #0
   11690:	ble	116e0 <vetor_pesquisa@@Base+0x70>
   11694:	ldr	r5, [r0, #8]
   11698:	mov	r6, r1
   1169c:	mov	r4, #0
   116a0:	sub	r5, r5, #4
   116a4:	b	116b4 <vetor_pesquisa@@Base+0x44>
   116a8:	add	r4, r4, #1
   116ac:	cmp	r7, r4
   116b0:	beq	116e0 <vetor_pesquisa@@Base+0x70>
   116b4:	mov	r1, r6
   116b8:	ldr	r0, [r5, #4]!
   116bc:	bl	10b34 <strcmp@plt>
   116c0:	cmp	r0, #0
   116c4:	bne	116a8 <vetor_pesquisa@@Base+0x38>
   116c8:	mov	r0, r4
   116cc:	ldrd	r4, [sp]
   116d0:	ldrd	r6, [sp, #8]
   116d4:	ldr	r8, [sp, #16]
   116d8:	add	sp, sp, #20
   116dc:	pop	{pc}		; (ldr pc, [sp], #4)
   116e0:	mvn	r4, #0
   116e4:	b	116c8 <vetor_pesquisa@@Base+0x58>

000116e8 <vetor_ordena@@Base>:
   116e8:	cmp	r0, #0
   116ec:	beq	11790 <vetor_ordena@@Base+0xa8>
   116f0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   116f4:	strd	r6, [sp, #8]
   116f8:	strd	sl, [sp, #24]
   116fc:	ldr	sl, [r0]
   11700:	strd	r8, [sp, #16]
   11704:	str	lr, [sp, #32]
   11708:	sub	sp, sp, #12
   1170c:	cmp	sl, #1
   11710:	ble	11770 <vetor_ordena@@Base+0x88>
   11714:	ldr	r3, [r0, #8]
   11718:	mov	r8, #1
   1171c:	mov	r9, r3
   11720:	str	r3, [sp, #4]
   11724:	ldr	r7, [r9, #4]!
   11728:	mov	r5, r8
   1172c:	mov	r4, r9
   11730:	ldr	r6, [r4, #-4]
   11734:	mov	r0, r7
   11738:	mov	fp, r4
   1173c:	mov	r1, r6
   11740:	bl	10b34 <strcmp@plt>
   11744:	cmp	r0, #0
   11748:	bge	11760 <vetor_ordena@@Base+0x78>
   1174c:	subs	r5, r5, #1
   11750:	str	r6, [r4]
   11754:	sub	r4, fp, #4
   11758:	bne	11730 <vetor_ordena@@Base+0x48>
   1175c:	ldr	fp, [sp, #4]
   11760:	add	r8, r8, #1
   11764:	str	r7, [fp]
   11768:	cmp	r8, sl
   1176c:	bne	11724 <vetor_ordena@@Base+0x3c>
   11770:	mov	r0, #0
   11774:	add	sp, sp, #12
   11778:	ldrd	r4, [sp]
   1177c:	ldrd	r6, [sp, #8]
   11780:	ldrd	r8, [sp, #16]
   11784:	ldrd	sl, [sp, #24]
   11788:	add	sp, sp, #32
   1178c:	pop	{pc}		; (ldr pc, [sp], #4)
   11790:	mvn	r0, #0
   11794:	bx	lr

00011798 <novo_str@@Base>:
   11798:	strd	r4, [sp, #-16]!
   1179c:	mov	r5, r0
   117a0:	mov	r0, #12
   117a4:	str	r6, [sp, #8]
   117a8:	str	lr, [sp, #12]
   117ac:	bl	10b88 <malloc@plt>
   117b0:	subs	r4, r0, #0
   117b4:	beq	117f4 <novo_str@@Base+0x5c>
   117b8:	mov	r0, r5
   117bc:	bl	10bac <strlen@plt>
   117c0:	add	r6, r0, #1
   117c4:	mov	r0, r6
   117c8:	bl	10b88 <malloc@plt>
   117cc:	cmp	r0, #0
   117d0:	mov	r3, r0
   117d4:	str	r0, [r4]
   117d8:	beq	11808 <novo_str@@Base+0x70>
   117dc:	mov	r2, r6
   117e0:	mov	r1, r5
   117e4:	bl	10b4c <memcpy@plt>
   117e8:	mov	r3, #0
   117ec:	str	r3, [r4, #4]
   117f0:	str	r3, [r4, #8]
   117f4:	mov	r0, r4
   117f8:	ldrd	r4, [sp]
   117fc:	ldr	r6, [sp, #8]
   11800:	add	sp, sp, #12
   11804:	pop	{pc}		; (ldr pc, [sp], #4)
   11808:	mov	r0, r4
   1180c:	mov	r4, r3
   11810:	bl	10b40 <free@plt>
   11814:	b	117f4 <novo_str@@Base+0x5c>

00011818 <lista_nova@@Base>:
   11818:	mov	r0, #12
   1181c:	strd	r4, [sp, #-16]!
   11820:	str	r6, [sp, #8]
   11824:	str	lr, [sp, #12]
   11828:	bl	10b88 <malloc@plt>
   1182c:	cmp	r0, #0
   11830:	beq	11848 <lista_nova@@Base+0x30>
   11834:	mov	r4, #0
   11838:	mov	r5, #0
   1183c:	mov	r3, #0
   11840:	strd	r4, [r0]
   11844:	str	r3, [r0, #8]
   11848:	ldrd	r4, [sp]
   1184c:	ldr	r6, [sp, #8]
   11850:	add	sp, sp, #12
   11854:	pop	{pc}		; (ldr pc, [sp], #4)

00011858 <lista_apaga@@Base>:
   11858:	strd	r4, [sp, #-16]!
   1185c:	subs	r5, r0, #0
   11860:	str	r6, [sp, #8]
   11864:	str	lr, [sp, #12]
   11868:	bne	11884 <lista_apaga@@Base+0x2c>
   1186c:	b	118a8 <lista_apaga@@Base+0x50>
   11870:	ldm	r4, {r0, r3}
   11874:	str	r3, [r5]
   11878:	bl	10b40 <free@plt>
   1187c:	mov	r0, r4
   11880:	bl	10b40 <free@plt>
   11884:	ldr	r4, [r5]
   11888:	cmp	r4, #0
   1188c:	bne	11870 <lista_apaga@@Base+0x18>
   11890:	mov	r0, r5
   11894:	ldrd	r4, [sp]
   11898:	ldr	r6, [sp, #8]
   1189c:	ldr	lr, [sp, #12]
   118a0:	add	sp, sp, #16
   118a4:	b	10b40 <free@plt>
   118a8:	ldrd	r4, [sp]
   118ac:	ldr	r6, [sp, #8]
   118b0:	add	sp, sp, #12
   118b4:	pop	{pc}		; (ldr pc, [sp], #4)

000118b8 <lista_tamanho@@Base>:
   118b8:	cmp	r0, #0
   118bc:	ldrne	r0, [r0, #8]
   118c0:	mvneq	r0, #0
   118c4:	bx	lr

000118c8 <lista_inicio@@Base>:
   118c8:	cmp	r0, #0
   118cc:	ldrne	r0, [r0]
   118d0:	bx	lr

000118d4 <lista_fim@@Base>:
   118d4:	cmp	r0, #0
   118d8:	ldrne	r0, [r0, #4]
   118dc:	bx	lr

000118e0 <lista_insere@@Base>:
   118e0:	clz	r3, r1
   118e4:	cmp	r0, #0
   118e8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   118ec:	lsr	r3, r3, #5
   118f0:	strd	r6, [sp, #8]
   118f4:	moveq	r7, #1
   118f8:	strd	r8, [sp, #16]
   118fc:	movne	r7, r3
   11900:	str	sl, [sp, #24]
   11904:	cmp	r7, #0
   11908:	str	lr, [sp, #28]
   1190c:	bne	119c0 <lista_insere@@Base+0xe0>
   11910:	mov	r5, r0
   11914:	mov	r0, #12
   11918:	mov	r8, r1
   1191c:	mov	r6, r2
   11920:	bl	10b88 <malloc@plt>
   11924:	subs	r4, r0, #0
   11928:	beq	119c0 <lista_insere@@Base+0xe0>
   1192c:	mov	r0, r8
   11930:	bl	10bac <strlen@plt>
   11934:	add	r9, r0, #1
   11938:	mov	r0, r9
   1193c:	bl	10b88 <malloc@plt>
   11940:	cmp	r0, #0
   11944:	mov	r3, r0
   11948:	str	r0, [r4]
   1194c:	beq	119e4 <lista_insere@@Base+0x104>
   11950:	mov	r2, r9
   11954:	mov	r1, r8
   11958:	bl	10b4c <memcpy@plt>
   1195c:	cmp	r6, #0
   11960:	str	r7, [r4, #4]
   11964:	ldr	r3, [r5, #8]
   11968:	str	r7, [r4, #8]
   1196c:	ldr	r2, [r5]
   11970:	add	r3, r3, #1
   11974:	str	r3, [r5, #8]
   11978:	beq	119c8 <lista_insere@@Base+0xe8>
   1197c:	cmp	r6, r2
   11980:	streq	r6, [r4, #4]
   11984:	streq	r4, [r6, #8]
   11988:	streq	r4, [r5]
   1198c:	beq	119a4 <lista_insere@@Base+0xc4>
   11990:	ldr	r3, [r6, #8]
   11994:	str	r6, [r4, #4]
   11998:	str	r3, [r4, #8]
   1199c:	str	r4, [r3, #4]
   119a0:	str	r4, [r6, #8]
   119a4:	mov	r0, r4
   119a8:	ldrd	r4, [sp]
   119ac:	ldrd	r6, [sp, #8]
   119b0:	ldrd	r8, [sp, #16]
   119b4:	ldr	sl, [sp, #24]
   119b8:	add	sp, sp, #28
   119bc:	pop	{pc}		; (ldr pc, [sp], #4)
   119c0:	mov	r4, #0
   119c4:	b	119a4 <lista_insere@@Base+0xc4>
   119c8:	cmp	r2, #0
   119cc:	ldrne	r3, [r5, #4]
   119d0:	streq	r4, [r5]
   119d4:	strne	r3, [r4, #8]
   119d8:	strne	r4, [r3, #4]
   119dc:	str	r4, [r5, #4]
   119e0:	b	119a4 <lista_insere@@Base+0xc4>
   119e4:	mov	r0, r4
   119e8:	mov	r4, r3
   119ec:	bl	10b40 <free@plt>
   119f0:	b	119a4 <lista_insere@@Base+0xc4>

000119f4 <lista_remove@@Base>:
   119f4:	cmp	r1, #0
   119f8:	cmpne	r0, #0
   119fc:	strd	r4, [sp, #-16]!
   11a00:	moveq	r5, #0
   11a04:	str	r6, [sp, #8]
   11a08:	str	lr, [sp, #12]
   11a0c:	beq	11a54 <lista_remove@@Base+0x60>
   11a10:	ldr	r3, [r0, #8]
   11a14:	mov	r4, r1
   11a18:	ldr	r2, [r1, #8]
   11a1c:	ldr	r5, [r1, #4]
   11a20:	sub	r3, r3, #1
   11a24:	cmp	r2, #0
   11a28:	str	r3, [r0, #8]
   11a2c:	strne	r5, [r2, #4]
   11a30:	ldrne	r5, [r1, #4]
   11a34:	streq	r5, [r0]
   11a38:	cmp	r5, #0
   11a3c:	streq	r2, [r0, #4]
   11a40:	strne	r2, [r5, #8]
   11a44:	ldr	r0, [r1]
   11a48:	bl	10b40 <free@plt>
   11a4c:	mov	r0, r4
   11a50:	bl	10b40 <free@plt>
   11a54:	mov	r0, r5
   11a58:	ldrd	r4, [sp]
   11a5c:	ldr	r6, [sp, #8]
   11a60:	add	sp, sp, #12
   11a64:	pop	{pc}		; (ldr pc, [sp], #4)

00011a68 <lista_pesquisa@@Base>:
   11a68:	strd	r4, [sp, #-16]!
   11a6c:	clz	r4, r1
   11a70:	cmp	r0, #0
   11a74:	lsr	r4, r4, #5
   11a78:	moveq	r4, #1
   11a7c:	str	r6, [sp, #8]
   11a80:	str	lr, [sp, #12]
   11a84:	cmp	r4, #0
   11a88:	movne	r4, #0
   11a8c:	bne	11ad4 <lista_pesquisa@@Base+0x6c>
   11a90:	cmp	r2, #1
   11a94:	bhi	11ad4 <lista_pesquisa@@Base+0x6c>
   11a98:	cmp	r2, #0
   11a9c:	mov	r5, r1
   11aa0:	bne	11ae8 <lista_pesquisa@@Base+0x80>
   11aa4:	ldr	r4, [r0]
   11aa8:	cmp	r4, #0
   11aac:	bne	11ac0 <lista_pesquisa@@Base+0x58>
   11ab0:	b	11ad4 <lista_pesquisa@@Base+0x6c>
   11ab4:	ldr	r4, [r4, #4]
   11ab8:	cmp	r4, #0
   11abc:	beq	11ad4 <lista_pesquisa@@Base+0x6c>
   11ac0:	mov	r1, r5
   11ac4:	ldr	r0, [r4]
   11ac8:	bl	10b34 <strcmp@plt>
   11acc:	cmp	r0, #0
   11ad0:	bne	11ab4 <lista_pesquisa@@Base+0x4c>
   11ad4:	mov	r0, r4
   11ad8:	ldrd	r4, [sp]
   11adc:	ldr	r6, [sp, #8]
   11ae0:	add	sp, sp, #12
   11ae4:	pop	{pc}		; (ldr pc, [sp], #4)
   11ae8:	ldr	r4, [r0, #4]
   11aec:	cmp	r4, #0
   11af0:	bne	11b04 <lista_pesquisa@@Base+0x9c>
   11af4:	b	11ad4 <lista_pesquisa@@Base+0x6c>
   11af8:	ldr	r4, [r4, #8]
   11afc:	cmp	r4, #0
   11b00:	beq	11ad4 <lista_pesquisa@@Base+0x6c>
   11b04:	mov	r1, r5
   11b08:	ldr	r0, [r4]
   11b0c:	bl	10b34 <strcmp@plt>
   11b10:	cmp	r0, #0
   11b14:	bne	11af8 <lista_pesquisa@@Base+0x90>
   11b18:	b	11ad4 <lista_pesquisa@@Base+0x6c>

00011b1c <lista_ordena@@Base>:
   11b1c:	cmp	r0, #0
   11b20:	beq	11bd4 <lista_ordena@@Base+0xb8>
   11b24:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11b28:	strd	r6, [sp, #8]
   11b2c:	strd	r8, [sp, #16]
   11b30:	ldr	r8, [r0]
   11b34:	str	sl, [sp, #24]
   11b38:	str	lr, [sp, #28]
   11b3c:	ldr	r9, [r8, #4]
   11b40:	cmp	r9, #0
   11b44:	beq	11bcc <lista_ordena@@Base+0xb0>
   11b48:	ldr	sl, [r8]
   11b4c:	mov	r7, r8
   11b50:	mov	r4, r9
   11b54:	mov	r5, sl
   11b58:	ldr	r6, [r4]
   11b5c:	mov	r1, r5
   11b60:	mov	r0, r6
   11b64:	bl	10b34 <strcmp@plt>
   11b68:	cmp	r0, #0
   11b6c:	movlt	r7, r4
   11b70:	ldr	r4, [r4, #4]
   11b74:	movlt	r5, r6
   11b78:	cmp	r4, #0
   11b7c:	bne	11b58 <lista_ordena@@Base+0x3c>
   11b80:	cmp	r7, r8
   11b84:	ldr	r3, [r9, #4]
   11b88:	beq	11ba8 <lista_ordena@@Base+0x8c>
   11b8c:	cmp	r3, #0
   11b90:	str	r5, [r8]
   11b94:	str	sl, [r7]
   11b98:	beq	11bb0 <lista_ordena@@Base+0x94>
   11b9c:	mov	r8, r9
   11ba0:	mov	r9, r3
   11ba4:	b	11b48 <lista_ordena@@Base+0x2c>
   11ba8:	cmp	r3, #0
   11bac:	bne	11b9c <lista_ordena@@Base+0x80>
   11bb0:	mov	r0, r4
   11bb4:	ldrd	r4, [sp]
   11bb8:	ldrd	r6, [sp, #8]
   11bbc:	ldrd	r8, [sp, #16]
   11bc0:	ldr	sl, [sp, #24]
   11bc4:	add	sp, sp, #28
   11bc8:	pop	{pc}		; (ldr pc, [sp], #4)
   11bcc:	mov	r0, r9
   11bd0:	b	11bb4 <lista_ordena@@Base+0x98>
   11bd4:	mvn	r0, #0
   11bd8:	bx	lr

00011bdc <lista_inverte@@Base>:
   11bdc:	strd	r4, [sp, #-12]!
   11be0:	subs	r5, r0, #0
   11be4:	str	lr, [sp, #8]
   11be8:	beq	11c7c <lista_inverte@@Base+0xa0>
   11bec:	ldr	r4, [r5, #8]
   11bf0:	cmp	r4, #1
   11bf4:	movle	r0, #0
   11bf8:	ble	11c68 <lista_inverte@@Base+0x8c>
   11bfc:	ldr	r1, [r5]
   11c00:	cmp	r4, #2
   11c04:	ldr	r3, [r1, #4]
   11c08:	beq	11c74 <lista_inverte@@Base+0x98>
   11c0c:	sub	r4, r4, #2
   11c10:	mov	ip, #0
   11c14:	b	11c1c <lista_inverte@@Base+0x40>
   11c18:	mov	r3, r2
   11c1c:	ldmib	r3, {r2, lr}
   11c20:	add	ip, ip, #1
   11c24:	cmp	r4, ip
   11c28:	str	r2, [lr, #4]
   11c2c:	str	lr, [r2, #8]
   11c30:	str	r1, [r3, #4]
   11c34:	str	r3, [r1, #8]
   11c38:	mov	r1, r3
   11c3c:	bne	11c18 <lista_inverte@@Base+0x3c>
   11c40:	ldr	r2, [r5, #4]
   11c44:	mov	r1, #0
   11c48:	mov	r0, r1
   11c4c:	ldr	ip, [r2, #8]
   11c50:	str	ip, [r5, #4]
   11c54:	str	r1, [ip, #4]
   11c58:	str	r3, [r2, #4]
   11c5c:	str	r1, [r2, #8]
   11c60:	str	r2, [r3, #8]
   11c64:	str	r2, [r5]
   11c68:	ldrd	r4, [sp]
   11c6c:	add	sp, sp, #8
   11c70:	pop	{pc}		; (ldr pc, [sp], #4)
   11c74:	mov	r3, r1
   11c78:	b	11c40 <lista_inverte@@Base+0x64>
   11c7c:	mvn	r0, #0
   11c80:	b	11c68 <lista_inverte@@Base+0x8c>

00011c84 <__libc_csu_init@@Base>:
   11c84:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11c88:	mov	r7, r0
   11c8c:	ldr	r6, [pc, #72]	; 11cdc <__libc_csu_init@@Base+0x58>
   11c90:	ldr	r5, [pc, #72]	; 11ce0 <__libc_csu_init@@Base+0x5c>
   11c94:	add	r6, pc, r6
   11c98:	add	r5, pc, r5
   11c9c:	sub	r6, r6, r5
   11ca0:	mov	r8, r1
   11ca4:	mov	r9, r2
   11ca8:	bl	10b08 <calloc@plt-0x20>
   11cac:	asrs	r6, r6, #2
   11cb0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11cb4:	mov	r4, #0
   11cb8:	add	r4, r4, #1
   11cbc:	ldr	r3, [r5], #4
   11cc0:	mov	r2, r9
   11cc4:	mov	r1, r8
   11cc8:	mov	r0, r7
   11ccc:	blx	r3
   11cd0:	cmp	r6, r4
   11cd4:	bne	11cb8 <__libc_csu_init@@Base+0x34>
   11cd8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11cdc:	andeq	r0, r1, r8, ror r2
   11ce0:	andeq	r0, r1, r0, ror r2

00011ce4 <__libc_csu_fini@@Base>:
   11ce4:	bx	lr

Disassembly of section .fini:

00011ce8 <.fini>:
   11ce8:	push	{r3, lr}
   11cec:	pop	{r3, pc}
