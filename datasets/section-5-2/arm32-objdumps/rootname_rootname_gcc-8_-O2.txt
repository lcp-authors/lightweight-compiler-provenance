
../repos/rootname/rootname:     file format elf32-littlearm


Disassembly of section .init:

00010918 <.init>:
   10918:	push	{r3, lr}
   1091c:	bl	10c78 <_start@@Base+0x3c>
   10920:	pop	{r3, pc}

Disassembly of section .plt:

00010924 <raise@plt-0x14>:
   10924:	push	{lr}		; (str lr, [sp, #-4]!)
   10928:	ldr	lr, [pc, #4]	; 10934 <raise@plt-0x4>
   1092c:	add	lr, pc, lr
   10930:	ldr	pc, [lr, #8]!
   10934:	andeq	r1, r1, ip, asr #13

00010938 <raise@plt>:
   10938:	add	ip, pc, #0, 12
   1093c:	add	ip, ip, #69632	; 0x11000
   10940:	ldr	pc, [ip, #1740]!	; 0x6cc

00010944 <fopen@plt>:
   10944:	add	ip, pc, #0, 12
   10948:	add	ip, ip, #69632	; 0x11000
   1094c:	ldr	pc, [ip, #1732]!	; 0x6c4

00010950 <time@plt>:
   10950:	add	ip, pc, #0, 12
   10954:	add	ip, ip, #69632	; 0x11000
   10958:	ldr	pc, [ip, #1724]!	; 0x6bc

0001095c <xcb_connect@plt>:
   1095c:	add	ip, pc, #0, 12
   10960:	add	ip, ip, #69632	; 0x11000
   10964:	ldr	pc, [ip, #1716]!	; 0x6b4

00010968 <sleep@plt>:
   10968:	add	ip, pc, #0, 12
   1096c:	add	ip, ip, #69632	; 0x11000
   10970:	ldr	pc, [ip, #1708]!	; 0x6ac

00010974 <xcb_flush@plt>:
   10974:	add	ip, pc, #0, 12
   10978:	add	ip, ip, #69632	; 0x11000
   1097c:	ldr	pc, [ip, #1700]!	; 0x6a4

00010980 <rewind@plt>:
   10980:	add	ip, pc, #0, 12
   10984:	add	ip, ip, #69632	; 0x11000
   10988:	ldr	pc, [ip, #1692]!	; 0x69c

0001098c <xcb_screen_next@plt>:
   1098c:	add	ip, pc, #0, 12
   10990:	add	ip, ip, #69632	; 0x11000
   10994:	ldr	pc, [ip, #1684]!	; 0x694

00010998 <fread@plt>:
   10998:	add	ip, pc, #0, 12
   1099c:	add	ip, ip, #69632	; 0x11000
   109a0:	ldr	pc, [ip, #1676]!	; 0x68c

000109a4 <xcb_setup_roots_iterator@plt>:
   109a4:	add	ip, pc, #0, 12
   109a8:	add	ip, ip, #69632	; 0x11000
   109ac:	ldr	pc, [ip, #1668]!	; 0x684

000109b0 <puts@plt>:
   109b0:	add	ip, pc, #0, 12
   109b4:	add	ip, ip, #69632	; 0x11000
   109b8:	ldr	pc, [ip, #1660]!	; 0x67c

000109bc <__libc_start_main@plt>:
   109bc:	add	ip, pc, #0, 12
   109c0:	add	ip, ip, #69632	; 0x11000
   109c4:	ldr	pc, [ip, #1652]!	; 0x674

000109c8 <localtime@plt>:
   109c8:	add	ip, pc, #0, 12
   109cc:	add	ip, ip, #69632	; 0x11000
   109d0:	ldr	pc, [ip, #1644]!	; 0x66c

000109d4 <__gmon_start__@plt>:
   109d4:	add	ip, pc, #0, 12
   109d8:	add	ip, ip, #69632	; 0x11000
   109dc:	ldr	pc, [ip, #1636]!	; 0x664

000109e0 <exit@plt>:
   109e0:	add	ip, pc, #0, 12
   109e4:	add	ip, ip, #69632	; 0x11000
   109e8:	ldr	pc, [ip, #1628]!	; 0x65c

000109ec <snprintf@plt>:
   109ec:	add	ip, pc, #0, 12
   109f0:	add	ip, ip, #69632	; 0x11000
   109f4:	ldr	pc, [ip, #1620]!	; 0x654

000109f8 <__isoc99_sscanf@plt>:
   109f8:	add	ip, pc, #0, 12
   109fc:	add	ip, ip, #69632	; 0x11000
   10a00:	ldr	pc, [ip, #1612]!	; 0x64c

00010a04 <fclose@plt>:
   10a04:	add	ip, pc, #0, 12
   10a08:	add	ip, ip, #69632	; 0x11000
   10a0c:	ldr	pc, [ip, #1604]!	; 0x644

00010a10 <xcb_disconnect@plt>:
   10a10:	add	ip, pc, #0, 12
   10a14:	add	ip, ip, #69632	; 0x11000
   10a18:	ldr	pc, [ip, #1596]!	; 0x63c

00010a1c <xcb_connection_has_error@plt>:
   10a1c:	add	ip, pc, #0, 12
   10a20:	add	ip, ip, #69632	; 0x11000
   10a24:	ldr	pc, [ip, #1588]!	; 0x634

00010a28 <xcb_get_setup@plt>:
   10a28:	add	ip, pc, #0, 12
   10a2c:	add	ip, ip, #69632	; 0x11000
   10a30:	ldr	pc, [ip, #1580]!	; 0x62c

00010a34 <xcb_change_property@plt>:
   10a34:	add	ip, pc, #0, 12
   10a38:	add	ip, ip, #69632	; 0x11000
   10a3c:	ldr	pc, [ip, #1572]!	; 0x624

00010a40 <abort@plt>:
   10a40:	add	ip, pc, #0, 12
   10a44:	add	ip, ip, #69632	; 0x11000
   10a48:	ldr	pc, [ip, #1564]!	; 0x61c

Disassembly of section .text:

00010a4c <main@@Base>:
   10a4c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   10a50:	mov	r0, #0
   10a54:	strd	r6, [sp, #8]
   10a58:	strd	r8, [sp, #16]
   10a5c:	strd	sl, [sp, #24]
   10a60:	str	lr, [sp, #32]
   10a64:	sub	sp, sp, #156	; 0x9c
   10a68:	add	r3, sp, #32
   10a6c:	mov	r1, r3
   10a70:	str	r3, [sp, #20]
   10a74:	bl	1095c <xcb_connect@plt>
   10a78:	mov	r6, r0
   10a7c:	bl	10a1c <xcb_connection_has_error@plt>
   10a80:	cmp	r0, #0
   10a84:	bne	10c14 <main@@Base+0x1c8>
   10a88:	mov	r0, r6
   10a8c:	add	r5, sp, #68	; 0x44
   10a90:	bl	10a28 <xcb_get_setup@plt>
   10a94:	mov	r1, r0
   10a98:	mov	r0, r5
   10a9c:	bl	109a4 <xcb_setup_roots_iterator@plt>
   10aa0:	b	10aac <main@@Base+0x60>
   10aa4:	mov	r0, r5
   10aa8:	bl	1098c <xcb_screen_next@plt>
   10aac:	ldr	r3, [sp, #32]
   10ab0:	sub	r2, r3, #1
   10ab4:	cmp	r3, #0
   10ab8:	str	r2, [sp, #32]
   10abc:	bne	10aa4 <main@@Base+0x58>
   10ac0:	ldr	r9, [pc, #360]	; 10c30 <main@@Base+0x1e4>
   10ac4:	add	fp, sp, #28
   10ac8:	mov	sl, #0
   10acc:	ldr	r3, [sp, #68]	; 0x44
   10ad0:	ldr	r0, [sp, #20]
   10ad4:	add	r9, pc, r9
   10ad8:	ldr	r3, [r3]
   10adc:	str	r3, [sp, #16]
   10ae0:	bl	10da0 <init_bat@@Base>
   10ae4:	b	10b80 <main@@Base+0x134>
   10ae8:	mov	r0, #0
   10aec:	bl	10950 <time@plt>
   10af0:	str	r0, [sp, #28]
   10af4:	mov	r0, fp
   10af8:	bl	109c8 <localtime@plt>
   10afc:	mov	ip, r0
   10b00:	mov	r1, r8
   10b04:	ldr	lr, [ip, #4]
   10b08:	mov	r2, r9
   10b0c:	mov	r0, r7
   10b10:	ldr	r3, [ip, #20]
   10b14:	str	lr, [sp, #12]
   10b18:	ldr	lr, [ip, #8]
   10b1c:	add	r3, r3, #1888	; 0x760
   10b20:	add	r3, r3, #12
   10b24:	str	lr, [sp, #8]
   10b28:	ldr	lr, [ip, #12]
   10b2c:	str	lr, [sp, #4]
   10b30:	ldr	ip, [ip, #16]
   10b34:	add	ip, ip, #1
   10b38:	str	ip, [sp]
   10b3c:	bl	109ec <snprintf@plt>
   10b40:	add	r4, r0, r4
   10b44:	mov	ip, #31
   10b48:	ldr	r2, [sp, #16]
   10b4c:	mov	r0, #8
   10b50:	mov	r3, #39	; 0x27
   10b54:	mov	r1, #0
   10b58:	str	ip, [sp]
   10b5c:	stmib	sp, {r0, r4, r5}
   10b60:	mov	r0, r6
   10b64:	bl	10a34 <xcb_change_property@plt>
   10b68:	mov	r0, r6
   10b6c:	bl	10974 <xcb_flush@plt>
   10b70:	cmp	r0, #0
   10b74:	ble	10bb8 <main@@Base+0x16c>
   10b78:	mov	r0, #60	; 0x3c
   10b7c:	bl	10968 <sleep@plt>
   10b80:	ldrb	r4, [sp, #56]	; 0x38
   10b84:	strb	sl, [sp, #148]	; 0x94
   10b88:	cmp	r4, #0
   10b8c:	moveq	r8, #80	; 0x50
   10b90:	moveq	r7, r5
   10b94:	beq	10ae8 <main@@Base+0x9c>
   10b98:	mov	r2, #80	; 0x50
   10b9c:	mov	r1, r5
   10ba0:	ldr	r0, [sp, #20]
   10ba4:	bl	10f3c <bat@@Base>
   10ba8:	mov	r4, r0
   10bac:	add	r7, r5, r0
   10bb0:	rsb	r8, r0, #80	; 0x50
   10bb4:	b	10ae8 <main@@Base+0x9c>
   10bb8:	ldr	r0, [pc, #116]	; 10c34 <main@@Base+0x1e8>
   10bbc:	add	r0, pc, r0
   10bc0:	bl	109b0 <puts@plt>
   10bc4:	mov	r0, r6
   10bc8:	bl	10a10 <xcb_disconnect@plt>
   10bcc:	ldrb	r3, [sp, #56]	; 0x38
   10bd0:	cmp	r3, #0
   10bd4:	bne	10bf8 <main@@Base+0x1ac>
   10bd8:	mov	r0, #2
   10bdc:	add	sp, sp, #156	; 0x9c
   10be0:	ldrd	r4, [sp]
   10be4:	ldrd	r6, [sp, #8]
   10be8:	ldrd	r8, [sp, #16]
   10bec:	ldrd	sl, [sp, #24]
   10bf0:	add	sp, sp, #32
   10bf4:	pop	{pc}		; (ldr pc, [sp], #4)
   10bf8:	ldr	r0, [sp, #32]
   10bfc:	bl	10a04 <fclose@plt>
   10c00:	ldr	r0, [sp, #40]	; 0x28
   10c04:	bl	10a04 <fclose@plt>
   10c08:	ldr	r0, [sp, #36]	; 0x24
   10c0c:	bl	10a04 <fclose@plt>
   10c10:	b	10bd8 <main@@Base+0x18c>
   10c14:	ldr	r0, [pc, #28]	; 10c38 <main@@Base+0x1ec>
   10c18:	add	r0, pc, r0
   10c1c:	bl	109b0 <puts@plt>
   10c20:	mov	r0, r6
   10c24:	bl	10a10 <xcb_disconnect@plt>
   10c28:	mov	r0, #1
   10c2c:	bl	109e0 <exit@plt>
   10c30:	ldrdeq	r0, [r0], -ip
   10c34:	andeq	r0, r0, r0, lsl r7
   10c38:	andeq	r0, r0, r0, lsl #13

00010c3c <_start@@Base>:
   10c3c:	mov	fp, #0
   10c40:	mov	lr, #0
   10c44:	pop	{r1}		; (ldr r1, [sp], #4)
   10c48:	mov	r2, sp
   10c4c:	push	{r2}		; (str r2, [sp, #-4]!)
   10c50:	push	{r0}		; (str r0, [sp, #-4]!)
   10c54:	ldr	ip, [pc, #16]	; 10c6c <_start@@Base+0x30>
   10c58:	push	{ip}		; (str ip, [sp, #-4]!)
   10c5c:	ldr	r0, [pc, #12]	; 10c70 <_start@@Base+0x34>
   10c60:	ldr	r3, [pc, #12]	; 10c74 <_start@@Base+0x38>
   10c64:	bl	109bc <__libc_start_main@plt>
   10c68:	bl	10a40 <abort@plt>
   10c6c:	muleq	r1, r0, r2
   10c70:	andeq	r0, r1, ip, asr #20
   10c74:	andeq	r1, r1, r0, lsr r2
   10c78:	ldr	r3, [pc, #20]	; 10c94 <_start@@Base+0x58>
   10c7c:	ldr	r2, [pc, #20]	; 10c98 <_start@@Base+0x5c>
   10c80:	add	r3, pc, r3
   10c84:	ldr	r2, [r3, r2]
   10c88:	cmp	r2, #0
   10c8c:	bxeq	lr
   10c90:	b	109d4 <__gmon_start__@plt>
   10c94:	andeq	r1, r1, r8, ror r3
   10c98:	andeq	r0, r0, r8, rrx
   10c9c:	ldr	r0, [pc, #24]	; 10cbc <_start@@Base+0x80>
   10ca0:	ldr	r3, [pc, #24]	; 10cc0 <_start@@Base+0x84>
   10ca4:	cmp	r3, r0
   10ca8:	bxeq	lr
   10cac:	ldr	r3, [pc, #16]	; 10cc4 <_start@@Base+0x88>
   10cb0:	cmp	r3, #0
   10cb4:	bxeq	lr
   10cb8:	bx	r3
   10cbc:	andeq	r2, r2, r4, ror r0
   10cc0:	andeq	r2, r2, r4, ror r0
   10cc4:	andeq	r0, r0, r0
   10cc8:	ldr	r0, [pc, #36]	; 10cf4 <_start@@Base+0xb8>
   10ccc:	ldr	r1, [pc, #36]	; 10cf8 <_start@@Base+0xbc>
   10cd0:	sub	r1, r1, r0
   10cd4:	asr	r1, r1, #2
   10cd8:	add	r1, r1, r1, lsr #31
   10cdc:	asrs	r1, r1, #1
   10ce0:	bxeq	lr
   10ce4:	ldr	r3, [pc, #16]	; 10cfc <_start@@Base+0xc0>
   10ce8:	cmp	r3, #0
   10cec:	bxeq	lr
   10cf0:	bx	r3
   10cf4:	andeq	r2, r2, r4, ror r0
   10cf8:	andeq	r2, r2, r4, ror r0
   10cfc:	andeq	r0, r0, r0
   10d00:	push	{r4, lr}
   10d04:	ldr	r4, [pc, #24]	; 10d24 <_start@@Base+0xe8>
   10d08:	ldrb	r3, [r4]
   10d0c:	cmp	r3, #0
   10d10:	popne	{r4, pc}
   10d14:	bl	10c9c <_start@@Base+0x60>
   10d18:	mov	r3, #1
   10d1c:	strb	r3, [r4]
   10d20:	pop	{r4, pc}
   10d24:	andeq	r2, r2, r4, ror r0
   10d28:	b	10cc8 <_start@@Base+0x8c>

00010d2c <read_int@@Base>:
   10d2c:	str	r4, [sp, #-8]!
   10d30:	mov	r4, r0
   10d34:	str	lr, [sp, #4]
   10d38:	sub	sp, sp, #48	; 0x30
   10d3c:	bl	10980 <rewind@plt>
   10d40:	mov	r3, r4
   10d44:	add	r4, sp, #8
   10d48:	mov	r0, r4
   10d4c:	mov	r2, #40	; 0x28
   10d50:	mov	r1, #1
   10d54:	bl	10998 <fread@plt>
   10d58:	ldr	r1, [pc, #60]	; 10d9c <read_int@@Base+0x70>
   10d5c:	add	r3, sp, #48	; 0x30
   10d60:	mov	ip, #0
   10d64:	add	r3, r3, r0
   10d68:	mov	r2, sp
   10d6c:	mov	r0, r4
   10d70:	strb	ip, [r3, #-40]	; 0xffffffd8
   10d74:	add	r1, pc, r1
   10d78:	bl	109f8 <__isoc99_sscanf@plt>
   10d7c:	cmp	r0, #1
   10d80:	ldrdeq	r0, [sp]
   10d84:	mvnne	r0, #0
   10d88:	movne	r1, #0
   10d8c:	add	sp, sp, #48	; 0x30
   10d90:	ldr	r4, [sp]
   10d94:	add	sp, sp, #4
   10d98:	pop	{pc}		; (ldr pc, [sp], #4)
   10d9c:	andeq	r0, r0, r8, ror r5

00010da0 <init_bat@@Base>:
   10da0:	strd	r4, [sp, #-16]!
   10da4:	mov	r4, r0
   10da8:	str	r6, [sp, #8]
   10dac:	ldr	r6, [pc, #268]	; 10ec0 <init_bat@@Base+0x120>
   10db0:	str	lr, [sp, #12]
   10db4:	ldr	r0, [pc, #264]	; 10ec4 <init_bat@@Base+0x124>
   10db8:	add	r6, pc, r6
   10dbc:	mov	r1, r6
   10dc0:	add	r0, pc, r0
   10dc4:	bl	10944 <fopen@plt>
   10dc8:	subs	r5, r0, #0
   10dcc:	beq	10e58 <init_bat@@Base+0xb8>
   10dd0:	mov	r3, #1
   10dd4:	mov	r0, r5
   10dd8:	ldr	r6, [pc, #232]	; 10ec8 <init_bat@@Base+0x128>
   10ddc:	strb	r3, [r4, #24]
   10de0:	bl	10d2c <read_int@@Base>
   10de4:	strd	r0, [r4, #16]
   10de8:	ldr	r0, [pc, #220]	; 10ecc <init_bat@@Base+0x12c>
   10dec:	add	r6, pc, r6
   10df0:	mov	r1, r6
   10df4:	add	r0, pc, r0
   10df8:	bl	10944 <fopen@plt>
   10dfc:	str	r0, [r4]
   10e00:	mov	r1, r6
   10e04:	ldr	r0, [pc, #196]	; 10ed0 <init_bat@@Base+0x130>
   10e08:	add	r0, pc, r0
   10e0c:	bl	10944 <fopen@plt>
   10e10:	cmp	r0, #0
   10e14:	str	r0, [r4, #4]
   10e18:	beq	10ea8 <init_bat@@Base+0x108>
   10e1c:	ldr	r6, [pc, #176]	; 10ed4 <init_bat@@Base+0x134>
   10e20:	ldr	r0, [pc, #176]	; 10ed8 <init_bat@@Base+0x138>
   10e24:	add	r6, pc, r6
   10e28:	mov	r1, r6
   10e2c:	add	r0, pc, r0
   10e30:	bl	10944 <fopen@plt>
   10e34:	cmp	r0, #0
   10e38:	str	r0, [r4, #8]
   10e3c:	beq	10e90 <init_bat@@Base+0xf0>
   10e40:	mov	r0, r5
   10e44:	ldrd	r4, [sp]
   10e48:	ldr	r6, [sp, #8]
   10e4c:	ldr	lr, [sp, #12]
   10e50:	add	sp, sp, #16
   10e54:	b	10a04 <fclose@plt>
   10e58:	ldr	r0, [pc, #124]	; 10edc <init_bat@@Base+0x13c>
   10e5c:	mov	r1, r6
   10e60:	add	r0, pc, r0
   10e64:	bl	10944 <fopen@plt>
   10e68:	subs	r5, r0, #0
   10e6c:	bne	10dd0 <init_bat@@Base+0x30>
   10e70:	ldr	r6, [sp, #8]
   10e74:	str	r5, [r4]
   10e78:	str	r5, [r4, #4]
   10e7c:	str	r5, [r4, #8]
   10e80:	strb	r5, [r4, #24]
   10e84:	ldrd	r4, [sp]
   10e88:	add	sp, sp, #12
   10e8c:	pop	{pc}		; (ldr pc, [sp], #4)
   10e90:	ldr	r0, [pc, #72]	; 10ee0 <init_bat@@Base+0x140>
   10e94:	mov	r1, r6
   10e98:	add	r0, pc, r0
   10e9c:	bl	10944 <fopen@plt>
   10ea0:	str	r0, [r4, #8]
   10ea4:	b	10e40 <init_bat@@Base+0xa0>
   10ea8:	ldr	r0, [pc, #52]	; 10ee4 <init_bat@@Base+0x144>
   10eac:	mov	r1, r6
   10eb0:	add	r0, pc, r0
   10eb4:	bl	10944 <fopen@plt>
   10eb8:	str	r0, [r4, #4]
   10ebc:	b	10e1c <init_bat@@Base+0x7c>
   10ec0:	andeq	r0, r0, ip, lsr r5
   10ec4:	andeq	r0, r0, r8, lsr r5
   10ec8:	andeq	r0, r0, r8, lsl #10
   10ecc:	andeq	r0, r0, ip, asr r5
   10ed0:	andeq	r0, r0, ip, ror #10
   10ed4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10ed8:	muleq	r0, r8, r5
   10edc:	andeq	r0, r0, r4, asr #9
   10ee0:	andeq	r0, r0, r4, asr r5
   10ee4:	andeq	r0, r0, ip, ror #9

00010ee8 <close_bat@@Base>:
   10ee8:	str	r4, [sp, #-8]!
   10eec:	mov	r4, r0
   10ef0:	ldr	r0, [r0]
   10ef4:	str	lr, [sp, #4]
   10ef8:	cmp	r0, #0
   10efc:	beq	10f04 <close_bat@@Base+0x1c>
   10f00:	bl	10a04 <fclose@plt>
   10f04:	ldr	r0, [r4, #4]
   10f08:	cmp	r0, #0
   10f0c:	beq	10f14 <close_bat@@Base+0x2c>
   10f10:	bl	10a04 <fclose@plt>
   10f14:	ldr	r0, [r4, #8]
   10f18:	cmp	r0, #0
   10f1c:	beq	10f30 <close_bat@@Base+0x48>
   10f20:	ldr	r4, [sp]
   10f24:	ldr	lr, [sp, #4]
   10f28:	add	sp, sp, #8
   10f2c:	b	10a04 <fclose@plt>
   10f30:	ldr	r4, [sp]
   10f34:	add	sp, sp, #4
   10f38:	pop	{pc}		; (ldr pc, [sp], #4)

00010f3c <bat@@Base>:
   10f3c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   10f40:	strd	r6, [sp, #8]
   10f44:	strd	r8, [sp, #16]
   10f48:	strd	sl, [sp, #24]
   10f4c:	mov	sl, r0
   10f50:	mov	fp, r2
   10f54:	str	lr, [sp, #32]
   10f58:	sub	sp, sp, #20
   10f5c:	ldr	r0, [r0]
   10f60:	str	r1, [sp, #12]
   10f64:	bl	10d2c <read_int@@Base>
   10f68:	mov	r8, r0
   10f6c:	ldr	r0, [sl, #4]
   10f70:	mov	r9, r1
   10f74:	bl	10d2c <read_int@@Base>
   10f78:	mov	r4, r0
   10f7c:	ldr	r0, [sl, #8]
   10f80:	mov	r5, r1
   10f84:	bl	10d2c <read_int@@Base>
   10f88:	adds	ip, r4, r4
   10f8c:	mov	r7, r1
   10f90:	ldrd	r2, [sl, #16]
   10f94:	adc	r1, r5, r5
   10f98:	adds	ip, ip, r4
   10f9c:	adc	r1, r1, r5
   10fa0:	mov	r6, r0
   10fa4:	lsl	r0, ip, #5
   10fa8:	lsl	lr, r1, #5
   10fac:	adds	r0, ip, r0
   10fb0:	orr	lr, lr, ip, lsr #27
   10fb4:	adc	r1, r1, lr
   10fb8:	adds	r0, r0, r4
   10fbc:	adc	r1, r1, r5
   10fc0:	bl	110bc <bat@@Base+0x180>
   10fc4:	orrs	r3, r8, r9
   10fc8:	mov	sl, r0
   10fcc:	bne	1109c <bat@@Base+0x160>
   10fd0:	orrs	r3, r6, r7
   10fd4:	bne	1100c <bat@@Base+0xd0>
   10fd8:	ldr	r2, [pc, #208]	; 110b0 <bat@@Base+0x174>
   10fdc:	mov	r3, r0
   10fe0:	mov	r1, fp
   10fe4:	add	r2, pc, r2
   10fe8:	ldr	r0, [sp, #12]
   10fec:	add	sp, sp, #20
   10ff0:	ldrd	r4, [sp]
   10ff4:	ldrd	r6, [sp, #8]
   10ff8:	ldrd	r8, [sp, #16]
   10ffc:	ldrd	sl, [sp, #24]
   11000:	ldr	lr, [sp, #32]
   11004:	add	sp, sp, #36	; 0x24
   11008:	b	109ec <snprintf@plt>
   1100c:	lsl	r1, r5, #4
   11010:	ldr	r8, [pc, #156]	; 110b4 <bat@@Base+0x178>
   11014:	mov	r2, r6
   11018:	lsl	r0, r4, #4
   1101c:	mov	r3, r7
   11020:	orr	r1, r1, r4, lsr #28
   11024:	subs	r0, r0, r4
   11028:	sbc	r1, r1, r5
   1102c:	lsl	ip, r0, #2
   11030:	lsl	r1, r1, #2
   11034:	add	r8, pc, r8
   11038:	orr	r1, r1, r0, lsr #30
   1103c:	mov	r0, ip
   11040:	bl	110bc <bat@@Base+0x180>
   11044:	mov	r2, #60	; 0x3c
   11048:	mov	r3, #0
   1104c:	bl	110bc <bat@@Base+0x180>
   11050:	mov	r3, r7
   11054:	mov	r0, r4
   11058:	str	r2, [sp, #4]
   1105c:	mov	r1, r5
   11060:	mov	r2, r6
   11064:	bl	110bc <bat@@Base+0x180>
   11068:	mov	r3, sl
   1106c:	mov	r1, fp
   11070:	str	r0, [sp]
   11074:	mov	r2, r8
   11078:	ldr	r0, [sp, #12]
   1107c:	bl	109ec <snprintf@plt>
   11080:	add	sp, sp, #20
   11084:	ldrd	r4, [sp]
   11088:	ldrd	r6, [sp, #8]
   1108c:	ldrd	r8, [sp, #16]
   11090:	ldrd	sl, [sp, #24]
   11094:	add	sp, sp, #32
   11098:	pop	{pc}		; (ldr pc, [sp], #4)
   1109c:	ldr	r2, [pc, #20]	; 110b8 <bat@@Base+0x17c>
   110a0:	mov	r3, r0
   110a4:	mov	r1, fp
   110a8:	add	r2, pc, r2
   110ac:	b	10fe8 <bat@@Base+0xac>
   110b0:	andeq	r0, r0, r4, asr r4
   110b4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   110b8:	andeq	r0, r0, r0, ror r3
   110bc:	cmp	r3, #0
   110c0:	cmpeq	r2, #0
   110c4:	bne	110dc <bat@@Base+0x1a0>
   110c8:	cmp	r1, #0
   110cc:	cmpeq	r0, #0
   110d0:	mvnne	r1, #0
   110d4:	mvnne	r0, #0
   110d8:	b	110f8 <bat@@Base+0x1bc>
   110dc:	sub	sp, sp, #8
   110e0:	push	{sp, lr}
   110e4:	bl	11108 <bat@@Base+0x1cc>
   110e8:	ldr	lr, [sp, #4]
   110ec:	add	sp, sp, #8
   110f0:	pop	{r2, r3}
   110f4:	bx	lr
   110f8:	push	{r1, lr}
   110fc:	mov	r0, #8
   11100:	bl	10938 <raise@plt>
   11104:	pop	{r1, pc}
   11108:	cmp	r1, r3
   1110c:	cmpeq	r0, r2
   11110:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11114:	mov	r4, r0
   11118:	movcc	r0, #0
   1111c:	mov	r5, r1
   11120:	ldr	lr, [sp, #36]	; 0x24
   11124:	movcc	r1, r0
   11128:	bcc	11224 <bat@@Base+0x2e8>
   1112c:	cmp	r3, #0
   11130:	clzeq	ip, r2
   11134:	clzne	ip, r3
   11138:	addeq	ip, ip, #32
   1113c:	cmp	r5, #0
   11140:	clzeq	r1, r4
   11144:	addeq	r1, r1, #32
   11148:	clzne	r1, r5
   1114c:	sub	ip, ip, r1
   11150:	sub	sl, ip, #32
   11154:	lsl	r9, r3, ip
   11158:	rsb	fp, ip, #32
   1115c:	orr	r9, r9, r2, lsl sl
   11160:	orr	r9, r9, r2, lsr fp
   11164:	lsl	r8, r2, ip
   11168:	cmp	r5, r9
   1116c:	cmpeq	r4, r8
   11170:	movcc	r0, #0
   11174:	movcc	r1, r0
   11178:	bcc	11194 <bat@@Base+0x258>
   1117c:	mov	r0, #1
   11180:	subs	r4, r4, r8
   11184:	lsl	r1, r0, sl
   11188:	orr	r1, r1, r0, lsr fp
   1118c:	lsl	r0, r0, ip
   11190:	sbc	r5, r5, r9
   11194:	cmp	ip, #0
   11198:	beq	11224 <bat@@Base+0x2e8>
   1119c:	lsr	r6, r8, #1
   111a0:	orr	r6, r6, r9, lsl #31
   111a4:	lsr	r7, r9, #1
   111a8:	mov	r2, ip
   111ac:	b	111d0 <bat@@Base+0x294>
   111b0:	subs	r3, r4, r6
   111b4:	sbc	r8, r5, r7
   111b8:	adds	r3, r3, r3
   111bc:	adc	r8, r8, r8
   111c0:	adds	r4, r3, #1
   111c4:	adc	r5, r8, #0
   111c8:	subs	r2, r2, #1
   111cc:	beq	111ec <bat@@Base+0x2b0>
   111d0:	cmp	r5, r7
   111d4:	cmpeq	r4, r6
   111d8:	bcs	111b0 <bat@@Base+0x274>
   111dc:	adds	r4, r4, r4
   111e0:	adc	r5, r5, r5
   111e4:	subs	r2, r2, #1
   111e8:	bne	111d0 <bat@@Base+0x294>
   111ec:	lsr	r3, r4, ip
   111f0:	orr	r3, r3, r5, lsl fp
   111f4:	lsr	r2, r5, ip
   111f8:	orr	r3, r3, r5, lsr sl
   111fc:	adds	r0, r0, r4
   11200:	mov	r4, r3
   11204:	lsl	r3, r2, ip
   11208:	orr	r3, r3, r4, lsl sl
   1120c:	lsl	ip, r4, ip
   11210:	orr	r3, r3, r4, lsr fp
   11214:	adc	r1, r1, r5
   11218:	subs	r0, r0, ip
   1121c:	mov	r5, r2
   11220:	sbc	r1, r1, r3
   11224:	cmp	lr, #0
   11228:	strdne	r4, [lr]
   1122c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00011230 <__libc_csu_init@@Base>:
   11230:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11234:	mov	r7, r0
   11238:	ldr	r6, [pc, #72]	; 11288 <__libc_csu_init@@Base+0x58>
   1123c:	ldr	r5, [pc, #72]	; 1128c <__libc_csu_init@@Base+0x5c>
   11240:	add	r6, pc, r6
   11244:	add	r5, pc, r5
   11248:	sub	r6, r6, r5
   1124c:	mov	r8, r1
   11250:	mov	r9, r2
   11254:	bl	10918 <raise@plt-0x20>
   11258:	asrs	r6, r6, #2
   1125c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11260:	mov	r4, #0
   11264:	add	r4, r4, #1
   11268:	ldr	r3, [r5], #4
   1126c:	mov	r2, r9
   11270:	mov	r1, r8
   11274:	mov	r0, r7
   11278:	blx	r3
   1127c:	cmp	r6, r4
   11280:	bne	11264 <__libc_csu_init@@Base+0x34>
   11284:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11288:	andeq	r0, r1, r4, asr #25
   1128c:			; <UNDEFINED> instruction: 0x00010cbc

00011290 <__libc_csu_fini@@Base>:
   11290:	bx	lr

Disassembly of section .fini:

00011294 <.fini>:
   11294:	push	{r3, lr}
   11298:	pop	{r3, pc}
