
../repos/prog2/MT2E2-2:     file format elf32-littlearm


Disassembly of section .init:

00010db0 <.init>:
   10db0:	push	{r3, lr}
   10db4:	bl	10ef0 <_start@@Base+0x3c>
   10db8:	pop	{r3, pc}

Disassembly of section .plt:

00010dbc <calloc@plt-0x14>:
   10dbc:	push	{lr}		; (str lr, [sp, #-4]!)
   10dc0:	ldr	lr, [pc, #4]	; 10dcc <calloc@plt-0x4>
   10dc4:	add	lr, pc, lr
   10dc8:	ldr	pc, [lr, #8]!
   10dcc:	andeq	r2, r1, r4, lsr r2

00010dd0 <calloc@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #73728	; 0x12000
   10dd8:	ldr	pc, [ip, #564]!	; 0x234

00010ddc <strcmp@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #73728	; 0x12000
   10de4:	ldr	pc, [ip, #556]!	; 0x22c

00010de8 <strtol@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #73728	; 0x12000
   10df0:	ldr	pc, [ip, #548]!	; 0x224

00010df4 <printf@plt>:
   10df4:	add	ip, pc, #0, 12
   10df8:	add	ip, ip, #73728	; 0x12000
   10dfc:	ldr	pc, [ip, #540]!	; 0x21c

00010e00 <__isoc99_fscanf@plt>:
   10e00:	add	ip, pc, #0, 12
   10e04:	add	ip, ip, #73728	; 0x12000
   10e08:	ldr	pc, [ip, #532]!	; 0x214

00010e0c <fopen@plt>:
   10e0c:	add	ip, pc, #0, 12
   10e10:	add	ip, ip, #73728	; 0x12000
   10e14:	ldr	pc, [ip, #524]!	; 0x20c

00010e18 <free@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #73728	; 0x12000
   10e20:	ldr	pc, [ip, #516]!	; 0x204

00010e24 <realloc@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #73728	; 0x12000
   10e2c:	ldr	pc, [ip, #508]!	; 0x1fc

00010e30 <strcpy@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #73728	; 0x12000
   10e38:	ldr	pc, [ip, #500]!	; 0x1f4

00010e3c <puts@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #73728	; 0x12000
   10e44:	ldr	pc, [ip, #492]!	; 0x1ec

00010e48 <malloc@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #73728	; 0x12000
   10e50:	ldr	pc, [ip, #484]!	; 0x1e4

00010e54 <__libc_start_main@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #73728	; 0x12000
   10e5c:	ldr	pc, [ip, #476]!	; 0x1dc

00010e60 <__gmon_start__@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #73728	; 0x12000
   10e68:	ldr	pc, [ip, #468]!	; 0x1d4

00010e6c <strlen@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #73728	; 0x12000
   10e74:	ldr	pc, [ip, #460]!	; 0x1cc

00010e78 <memset@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #73728	; 0x12000
   10e80:	ldr	pc, [ip, #452]!	; 0x1c4

00010e84 <putchar@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #73728	; 0x12000
   10e8c:	ldr	pc, [ip, #444]!	; 0x1bc

00010e90 <fclose@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #73728	; 0x12000
   10e98:	ldr	pc, [ip, #436]!	; 0x1b4

00010e9c <sprintf@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #73728	; 0x12000
   10ea4:	ldr	pc, [ip, #428]!	; 0x1ac

00010ea8 <abort@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #73728	; 0x12000
   10eb0:	ldr	pc, [ip, #420]!	; 0x1a4

Disassembly of section .text:

00010eb4 <_start@@Base>:
   10eb4:	mov	fp, #0
   10eb8:	mov	lr, #0
   10ebc:	pop	{r1}		; (ldr r1, [sp], #4)
   10ec0:	mov	r2, sp
   10ec4:	push	{r2}		; (str r2, [sp, #-4]!)
   10ec8:	push	{r0}		; (str r0, [sp, #-4]!)
   10ecc:	ldr	ip, [pc, #16]	; 10ee4 <_start@@Base+0x30>
   10ed0:	push	{ip}		; (str ip, [sp, #-4]!)
   10ed4:	ldr	r0, [pc, #12]	; 10ee8 <_start@@Base+0x34>
   10ed8:	ldr	r3, [pc, #12]	; 10eec <_start@@Base+0x38>
   10edc:	bl	10e54 <__libc_start_main@plt>
   10ee0:	bl	10ea8 <abort@plt>
   10ee4:	andeq	r2, r1, ip, lsl #12
   10ee8:	andeq	r1, r1, r8, lsl #3
   10eec:	andeq	r2, r1, ip, lsr #11
   10ef0:	ldr	r3, [pc, #20]	; 10f0c <_start@@Base+0x58>
   10ef4:	ldr	r2, [pc, #20]	; 10f10 <_start@@Base+0x5c>
   10ef8:	add	r3, pc, r3
   10efc:	ldr	r2, [r3, r2]
   10f00:	cmp	r2, #0
   10f04:	bxeq	lr
   10f08:	b	10e60 <__gmon_start__@plt>
   10f0c:	andeq	r2, r1, r0, lsl #2
   10f10:	andeq	r0, r0, r8, asr r0
   10f14:	ldr	r0, [pc, #24]	; 10f34 <_start@@Base+0x80>
   10f18:	ldr	r3, [pc, #24]	; 10f38 <_start@@Base+0x84>
   10f1c:	cmp	r3, r0
   10f20:	bxeq	lr
   10f24:	ldr	r3, [pc, #16]	; 10f3c <_start@@Base+0x88>
   10f28:	cmp	r3, #0
   10f2c:	bxeq	lr
   10f30:	bx	r3
   10f34:	andeq	r3, r2, r4, rrx
   10f38:	andeq	r3, r2, r4, rrx
   10f3c:	andeq	r0, r0, r0
   10f40:	ldr	r0, [pc, #36]	; 10f6c <_start@@Base+0xb8>
   10f44:	ldr	r1, [pc, #36]	; 10f70 <_start@@Base+0xbc>
   10f48:	sub	r1, r1, r0
   10f4c:	asr	r1, r1, #2
   10f50:	add	r1, r1, r1, lsr #31
   10f54:	asrs	r1, r1, #1
   10f58:	bxeq	lr
   10f5c:	ldr	r3, [pc, #16]	; 10f74 <_start@@Base+0xc0>
   10f60:	cmp	r3, #0
   10f64:	bxeq	lr
   10f68:	bx	r3
   10f6c:	andeq	r3, r2, r4, rrx
   10f70:	andeq	r3, r2, r4, rrx
   10f74:	andeq	r0, r0, r0
   10f78:	push	{r4, lr}
   10f7c:	ldr	r4, [pc, #24]	; 10f9c <_start@@Base+0xe8>
   10f80:	ldrb	r3, [r4]
   10f84:	cmp	r3, #0
   10f88:	popne	{r4, pc}
   10f8c:	bl	10f14 <_start@@Base+0x60>
   10f90:	mov	r3, #1
   10f94:	strb	r3, [r4]
   10f98:	pop	{r4, pc}
   10f9c:	andeq	r3, r2, r4, rrx
   10fa0:	b	10f40 <_start@@Base+0x8c>

00010fa4 <descobre_caminho@@Base>:
   10fa4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10fa8:	add	fp, sp, #28
   10fac:	sub	sp, sp, #12
   10fb0:	mov	r6, r3
   10fb4:	str	r2, [sp]
   10fb8:	mov	r5, r1
   10fbc:	mov	sl, r0
   10fc0:	bl	11fbc <lista_nova@@Base>
   10fc4:	mov	r4, r0
   10fc8:	mov	r1, r5
   10fcc:	add	r3, sp, #8
   10fd0:	mov	r0, sl
   10fd4:	mov	r2, r6
   10fd8:	mov	r5, r6
   10fdc:	bl	11918 <grafo_bfs@@Base>
   10fe0:	mov	r9, r0
   10fe4:	ldr	r0, [sp, #8]
   10fe8:	cmp	r0, #1
   10fec:	blt	11030 <descobre_caminho@@Base+0x8c>
   10ff0:	movw	r6, #9910	; 0x26b6
   10ff4:	mov	r8, #0
   10ff8:	add	r7, sp, #5
   10ffc:	movt	r6, #1
   11000:	ldr	r2, [r9, r8, lsl #2]
   11004:	mov	r0, r7
   11008:	mov	r1, r6
   1100c:	bl	10e9c <sprintf@plt>
   11010:	mov	r0, r4
   11014:	mov	r1, r7
   11018:	mvn	r2, #0
   1101c:	bl	12124 <lista_insere@@Base>
   11020:	ldr	r0, [sp, #8]
   11024:	add	r8, r8, #1
   11028:	cmp	r8, r0
   1102c:	blt	11000 <descobre_caminho@@Base+0x5c>
   11030:	ldr	r2, [sp]
   11034:	add	r3, sp, #8
   11038:	mov	r0, sl
   1103c:	mov	r1, r5
   11040:	bl	11918 <grafo_bfs@@Base>
   11044:	mov	r6, r0
   11048:	ldr	r0, [sp, #8]
   1104c:	cmp	r0, #2
   11050:	blt	11094 <descobre_caminho@@Base+0xf0>
   11054:	movw	r8, #9910	; 0x26b6
   11058:	mov	r5, #1
   1105c:	add	r7, sp, #5
   11060:	movt	r8, #1
   11064:	ldr	r2, [r6, r5, lsl #2]
   11068:	mov	r0, r7
   1106c:	mov	r1, r8
   11070:	bl	10e9c <sprintf@plt>
   11074:	mov	r0, r4
   11078:	mov	r1, r7
   1107c:	mvn	r2, #0
   11080:	bl	12124 <lista_insere@@Base>
   11084:	ldr	r0, [sp, #8]
   11088:	add	r5, r5, #1
   1108c:	cmp	r5, r0
   11090:	blt	11064 <descobre_caminho@@Base+0xc0>
   11094:	mov	r0, r6
   11098:	bl	10e18 <free@plt>
   1109c:	mov	r0, r9
   110a0:	bl	10e18 <free@plt>
   110a4:	mov	r0, r4
   110a8:	sub	sp, fp, #28
   110ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000110b0 <simula_acontecimentos@@Base>:
   110b0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   110b4:	add	fp, sp, #24
   110b8:	sub	sp, sp, #24
   110bc:	mov	r9, r0
   110c0:	mov	r0, #0
   110c4:	cmp	r2, #20
   110c8:	bgt	11180 <simula_acontecimentos@@Base+0xd0>
   110cc:	mov	r0, r2
   110d0:	mov	r4, r2
   110d4:	mov	r8, r1
   110d8:	bl	11b30 <heap_nova@@Base>
   110dc:	mov	r5, r0
   110e0:	cmp	r4, #1
   110e4:	blt	11174 <simula_acontecimentos@@Base+0xc4>
   110e8:	mov	r6, #0
   110ec:	add	r7, sp, #4
   110f0:	mov	r0, r9
   110f4:	mov	r1, r6
   110f8:	bl	12044 <lista_elemento@@Base>
   110fc:	mov	r1, r0
   11100:	mov	r0, r7
   11104:	bl	10e30 <strcpy@plt>
   11108:	mov	r0, r8
   1110c:	mov	r1, r6
   11110:	bl	12044 <lista_elemento@@Base>
   11114:	mov	r1, #0
   11118:	mov	r2, #10
   1111c:	bl	10de8 <strtol@plt>
   11120:	mov	r2, r0
   11124:	mov	r0, r5
   11128:	mov	r1, r7
   1112c:	bl	11c6c <heap_insere@@Base>
   11130:	add	r6, r6, #1
   11134:	cmp	r4, r6
   11138:	bne	110f0 <simula_acontecimentos@@Base+0x40>
   1113c:	cmp	r4, #1
   11140:	blt	11174 <simula_acontecimentos@@Base+0xc4>
   11144:	movw	r7, #9756	; 0x261c
   11148:	mov	r6, #0
   1114c:	movt	r7, #1
   11150:	ldr	r0, [r5, #8]
   11154:	ldr	r0, [r0, r6, lsl #2]
   11158:	add	r6, r6, #1
   1115c:	mov	r1, r6
   11160:	ldr	r2, [r0, #4]
   11164:	mov	r0, r7
   11168:	bl	10df4 <printf@plt>
   1116c:	cmp	r4, r6
   11170:	bne	11150 <simula_acontecimentos@@Base+0xa0>
   11174:	mov	r0, r5
   11178:	bl	11b8c <heap_apaga@@Base>
   1117c:	mov	r0, #1
   11180:	sub	sp, fp, #24
   11184:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00011188 <main@@Base>:
   11188:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1118c:	add	fp, sp, #24
   11190:	sub	sp, sp, #32
   11194:	movw	r0, #9843	; 0x2673
   11198:	movt	r0, #1
   1119c:	bl	10e3c <puts@plt>
   111a0:	mov	r0, #8
   111a4:	mov	r1, #1
   111a8:	bl	11408 <grafo_novo@@Base>
   111ac:	mov	r1, #1
   111b0:	mov	r2, #3
   111b4:	mov	r4, r0
   111b8:	bl	11508 <grafo_adiciona@@Base>
   111bc:	mov	r0, r4
   111c0:	mov	r1, #2
   111c4:	mov	r2, #3
   111c8:	bl	11508 <grafo_adiciona@@Base>
   111cc:	mov	r0, r4
   111d0:	mov	r1, #2
   111d4:	mov	r2, #4
   111d8:	bl	11508 <grafo_adiciona@@Base>
   111dc:	mov	r0, r4
   111e0:	mov	r1, #2
   111e4:	mov	r2, #5
   111e8:	bl	11508 <grafo_adiciona@@Base>
   111ec:	mov	r0, r4
   111f0:	mov	r1, #3
   111f4:	mov	r2, #2
   111f8:	bl	11508 <grafo_adiciona@@Base>
   111fc:	mov	r0, r4
   11200:	mov	r1, #3
   11204:	mov	r2, #4
   11208:	bl	11508 <grafo_adiciona@@Base>
   1120c:	mov	r0, r4
   11210:	mov	r1, #4
   11214:	mov	r2, #6
   11218:	bl	11508 <grafo_adiciona@@Base>
   1121c:	mov	r0, r4
   11220:	mov	r1, #4
   11224:	mov	r2, #7
   11228:	bl	11508 <grafo_adiciona@@Base>
   1122c:	mov	r0, r4
   11230:	mov	r1, #5
   11234:	mov	r2, #4
   11238:	bl	11508 <grafo_adiciona@@Base>
   1123c:	mov	r0, r4
   11240:	mov	r1, #5
   11244:	mov	r2, #6
   11248:	bl	11508 <grafo_adiciona@@Base>
   1124c:	mov	r0, r4
   11250:	mov	r1, #5
   11254:	mov	r2, #7
   11258:	bl	11508 <grafo_adiciona@@Base>
   1125c:	mov	r0, r4
   11260:	mov	r1, #6
   11264:	mov	r2, #7
   11268:	bl	11508 <grafo_adiciona@@Base>
   1126c:	mov	r0, r4
   11270:	mov	r1, #1
   11274:	mov	r2, #7
   11278:	mov	r3, #5
   1127c:	bl	10fa4 <descobre_caminho@@Base>
   11280:	mov	r5, r0
   11284:	movw	r0, #9764	; 0x2624
   11288:	movt	r0, #1
   1128c:	bl	10df4 <printf@plt>
   11290:	mov	r0, r5
   11294:	bl	12034 <lista_tamanho@@Base>
   11298:	cmp	r0, #1
   1129c:	blt	112d8 <main@@Base+0x150>
   112a0:	movw	r7, #9840	; 0x2670
   112a4:	mov	r6, #0
   112a8:	movt	r7, #1
   112ac:	mov	r0, r5
   112b0:	mov	r1, r6
   112b4:	bl	12044 <lista_elemento@@Base>
   112b8:	mov	r1, r0
   112bc:	mov	r0, r7
   112c0:	bl	10df4 <printf@plt>
   112c4:	mov	r0, r5
   112c8:	add	r6, r6, #1
   112cc:	bl	12034 <lista_tamanho@@Base>
   112d0:	cmp	r6, r0
   112d4:	blt	112ac <main@@Base+0x124>
   112d8:	movw	r0, #9926	; 0x26c6
   112dc:	movt	r0, #1
   112e0:	bl	10e3c <puts@plt>
   112e4:	mov	r0, r4
   112e8:	bl	11468 <grafo_apaga@@Base>
   112ec:	mov	r0, r5
   112f0:	bl	11fe4 <lista_apaga@@Base>
   112f4:	movw	r0, #9860	; 0x2684
   112f8:	movt	r0, #1
   112fc:	bl	10e3c <puts@plt>
   11300:	movw	r0, #9825	; 0x2661
   11304:	movw	r1, #9835	; 0x266b
   11308:	movt	r0, #1
   1130c:	movt	r1, #1
   11310:	bl	10e0c <fopen@plt>
   11314:	mov	r8, r0
   11318:	bl	11fbc <lista_nova@@Base>
   1131c:	mov	r5, r0
   11320:	bl	11fbc <lista_nova@@Base>
   11324:	movw	r1, #9837	; 0x266d
   11328:	mov	r6, r0
   1132c:	add	r2, sp, #11
   11330:	add	r3, sp, #6
   11334:	mov	r0, r8
   11338:	movt	r1, #1
   1133c:	bl	10e00 <__isoc99_fscanf@plt>
   11340:	cmp	r0, #2
   11344:	bne	11394 <main@@Base+0x20c>
   11348:	movw	r9, #9837	; 0x266d
   1134c:	add	r7, sp, #11
   11350:	add	r4, sp, #6
   11354:	movt	r9, #1
   11358:	mov	r0, r5
   1135c:	mov	r1, r7
   11360:	mvn	r2, #0
   11364:	bl	12124 <lista_insere@@Base>
   11368:	mov	r0, r6
   1136c:	mov	r1, r4
   11370:	mvn	r2, #0
   11374:	bl	12124 <lista_insere@@Base>
   11378:	mov	r0, r8
   1137c:	mov	r1, r9
   11380:	mov	r2, r7
   11384:	mov	r3, r4
   11388:	bl	10e00 <__isoc99_fscanf@plt>
   1138c:	cmp	r0, #2
   11390:	beq	11358 <main@@Base+0x1d0>
   11394:	mov	r0, r5
   11398:	mov	r1, r6
   1139c:	mov	r2, #4
   113a0:	bl	110b0 <simula_acontecimentos@@Base>
   113a4:	cmp	r0, #0
   113a8:	bne	113b8 <main@@Base+0x230>
   113ac:	movw	r0, #9877	; 0x2695
   113b0:	movt	r0, #1
   113b4:	bl	10e3c <puts@plt>
   113b8:	mov	r0, r5
   113bc:	bl	11fe4 <lista_apaga@@Base>
   113c0:	mov	r0, r6
   113c4:	bl	11fe4 <lista_apaga@@Base>
   113c8:	mov	r0, r8
   113cc:	bl	10e90 <fclose@plt>
   113d0:	mov	r0, #0
   113d4:	sub	sp, fp, #24
   113d8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000113dc <cria_no@@Base>:
   113dc:	push	{r4, sl, fp, lr}
   113e0:	add	fp, sp, #8
   113e4:	mov	r4, r0
   113e8:	mov	r0, #8
   113ec:	bl	10e48 <malloc@plt>
   113f0:	cmp	r0, #0
   113f4:	moveq	r0, #0
   113f8:	movne	r1, #0
   113fc:	strne	r4, [r0]
   11400:	strne	r1, [r0, #4]
   11404:	pop	{r4, sl, fp, pc}

00011408 <grafo_novo@@Base>:
   11408:	push	{r4, r5, r6, sl, fp, lr}
   1140c:	add	fp, sp, #16
   11410:	mov	r5, r0
   11414:	mov	r0, #12
   11418:	mov	r6, r1
   1141c:	bl	10e48 <malloc@plt>
   11420:	cmp	r0, #0
   11424:	beq	1145c <grafo_novo@@Base+0x54>
   11428:	str	r6, [r0]
   1142c:	mov	r4, r0
   11430:	str	r5, [r0, #4]
   11434:	mov	r0, r5
   11438:	mov	r1, #8
   1143c:	bl	10dd0 <calloc@plt>
   11440:	cmp	r0, #0
   11444:	str	r0, [r4, #8]
   11448:	beq	11454 <grafo_novo@@Base+0x4c>
   1144c:	mov	r0, r4
   11450:	pop	{r4, r5, r6, sl, fp, pc}
   11454:	mov	r0, r4
   11458:	bl	10e18 <free@plt>
   1145c:	mov	r4, #0
   11460:	mov	r0, r4
   11464:	pop	{r4, r5, r6, sl, fp, pc}

00011468 <grafo_apaga@@Base>:
   11468:	cmp	r0, #0
   1146c:	bxeq	lr
   11470:	push	{r4, r5, fp, lr}
   11474:	add	fp, sp, #8
   11478:	mov	r4, r0
   1147c:	ldr	r0, [r0, #8]
   11480:	cmp	r0, #0
   11484:	beq	114fc <grafo_apaga@@Base+0x94>
   11488:	ldr	r2, [r4, #4]
   1148c:	cmp	r2, #1
   11490:	blt	114f8 <grafo_apaga@@Base+0x90>
   11494:	mov	r5, #0
   11498:	add	r3, r0, r5, lsl #3
   1149c:	ldr	r1, [r3, #4]!
   114a0:	cmp	r1, #0
   114a4:	bne	114c4 <grafo_apaga@@Base+0x5c>
   114a8:	add	r5, r5, #1
   114ac:	cmp	r5, r2
   114b0:	bge	114f8 <grafo_apaga@@Base+0x90>
   114b4:	add	r3, r0, r5, lsl #3
   114b8:	ldr	r1, [r3, #4]!
   114bc:	cmp	r1, #0
   114c0:	beq	114a8 <grafo_apaga@@Base+0x40>
   114c4:	ldr	r0, [r1, #4]
   114c8:	str	r0, [r3]
   114cc:	mov	r0, r1
   114d0:	bl	10e18 <free@plt>
   114d4:	ldr	r0, [r4, #8]
   114d8:	add	r3, r0, r5, lsl #3
   114dc:	ldr	r1, [r3, #4]!
   114e0:	cmp	r1, #0
   114e4:	bne	114c4 <grafo_apaga@@Base+0x5c>
   114e8:	ldr	r2, [r4, #4]
   114ec:	add	r5, r5, #1
   114f0:	cmp	r5, r2
   114f4:	blt	114b4 <grafo_apaga@@Base+0x4c>
   114f8:	bl	10e18 <free@plt>
   114fc:	mov	r0, r4
   11500:	pop	{r4, r5, fp, lr}
   11504:	b	10e18 <free@plt>

00011508 <grafo_adiciona@@Base>:
   11508:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1150c:	add	fp, sp, #24
   11510:	cmp	r0, #0
   11514:	beq	115a8 <grafo_adiciona@@Base+0xa0>
   11518:	ldr	r8, [r0, #8]
   1151c:	mov	r6, r0
   11520:	mov	r4, r2
   11524:	mov	r5, r1
   11528:	add	r7, r8, r1, lsl #3
   1152c:	ldr	r0, [r7, #4]!
   11530:	cmp	r0, #0
   11534:	beq	11550 <grafo_adiciona@@Base+0x48>
   11538:	ldr	r1, [r0]
   1153c:	cmp	r1, r4
   11540:	beq	115a8 <grafo_adiciona@@Base+0xa0>
   11544:	ldr	r0, [r0, #4]
   11548:	cmp	r0, #0
   1154c:	bne	11538 <grafo_adiciona@@Base+0x30>
   11550:	mov	r0, #8
   11554:	bl	10e48 <malloc@plt>
   11558:	str	r4, [r0]
   1155c:	ldr	r1, [r7]
   11560:	str	r1, [r0, #4]
   11564:	str	r0, [r7]
   11568:	ldr	r0, [r8, r5, lsl #3]
   1156c:	add	r0, r0, #1
   11570:	str	r0, [r8, r5, lsl #3]
   11574:	ldr	r0, [r6]
   11578:	cmp	r0, #0
   1157c:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   11580:	mov	r0, #8
   11584:	bl	10e48 <malloc@plt>
   11588:	add	r1, r8, r4, lsl #3
   1158c:	str	r5, [r0]
   11590:	ldr	r2, [r1, #4]
   11594:	str	r2, [r0, #4]
   11598:	ldr	r2, [r8, r4, lsl #3]
   1159c:	add	r2, r2, #1
   115a0:	str	r2, [r8, r4, lsl #3]
   115a4:	str	r0, [r1, #4]
   115a8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000115ac <grafo_existe@@Base>:
   115ac:	mov	r3, r0
   115b0:	mov	r0, #0
   115b4:	cmp	r3, #0
   115b8:	beq	115e0 <grafo_existe@@Base+0x34>
   115bc:	ldr	r3, [r3, #8]
   115c0:	add	r1, r3, r1, lsl #3
   115c4:	ldr	r1, [r1, #4]
   115c8:	cmp	r1, #0
   115cc:	bxeq	lr
   115d0:	ldr	r3, [r1]
   115d4:	cmp	r3, r2
   115d8:	bne	115c4 <grafo_existe@@Base+0x18>
   115dc:	mov	r0, #1
   115e0:	bx	lr

000115e4 <grafo_remove@@Base>:
   115e4:	push	{r4, r5, r6, sl, fp, lr}
   115e8:	add	fp, sp, #16
   115ec:	cmp	r0, #0
   115f0:	beq	116ac <grafo_remove@@Base+0xc8>
   115f4:	mov	r6, r0
   115f8:	ldr	r0, [r0, #8]
   115fc:	mov	r4, r1
   11600:	add	r1, r0, r1, lsl #3
   11604:	ldr	r0, [r1, #4]!
   11608:	cmp	r0, #0
   1160c:	beq	116ac <grafo_remove@@Base+0xc8>
   11610:	mov	r5, r2
   11614:	ldr	r2, [r0]
   11618:	cmp	r2, r5
   1161c:	beq	11640 <grafo_remove@@Base+0x5c>
   11620:	mov	r1, r0
   11624:	ldr	r0, [r0, #4]
   11628:	cmp	r0, #0
   1162c:	beq	1164c <grafo_remove@@Base+0x68>
   11630:	ldr	r2, [r0]
   11634:	cmp	r2, r5
   11638:	bne	11620 <grafo_remove@@Base+0x3c>
   1163c:	add	r1, r1, #4
   11640:	ldr	r2, [r0, #4]
   11644:	str	r2, [r1]
   11648:	bl	10e18 <free@plt>
   1164c:	ldr	r0, [r6]
   11650:	cmp	r0, #0
   11654:	popne	{r4, r5, r6, sl, fp, pc}
   11658:	ldr	r0, [r6, #8]
   1165c:	add	r1, r0, r5, lsl #3
   11660:	ldr	r0, [r1, #4]!
   11664:	ldr	r2, [r0]
   11668:	cmp	r2, r4
   1166c:	bne	11680 <grafo_remove@@Base+0x9c>
   11670:	ldr	r2, [r0, #4]
   11674:	str	r2, [r1]
   11678:	pop	{r4, r5, r6, sl, fp, lr}
   1167c:	b	10e18 <free@plt>
   11680:	mov	r1, r0
   11684:	ldr	r0, [r0, #4]
   11688:	cmp	r0, #0
   1168c:	beq	116ac <grafo_remove@@Base+0xc8>
   11690:	ldr	r2, [r0]
   11694:	cmp	r2, r4
   11698:	bne	11680 <grafo_remove@@Base+0x9c>
   1169c:	ldr	r2, [r0, #4]
   116a0:	str	r2, [r1, #4]
   116a4:	pop	{r4, r5, r6, sl, fp, lr}
   116a8:	b	10e18 <free@plt>
   116ac:	pop	{r4, r5, r6, sl, fp, pc}

000116b0 <grafo_imprime@@Base>:
   116b0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   116b4:	add	fp, sp, #24
   116b8:	mov	r4, r0
   116bc:	ldr	r0, [r0, #4]
   116c0:	cmp	r0, #1
   116c4:	blt	11754 <grafo_imprime@@Base+0xa4>
   116c8:	movw	r9, #9903	; 0x26af
   116cc:	movw	r8, #9910	; 0x26b6
   116d0:	movw	r7, #9908	; 0x26b4
   116d4:	mov	r5, #0
   116d8:	movt	r9, #1
   116dc:	movt	r8, #1
   116e0:	movt	r7, #1
   116e4:	b	11700 <grafo_imprime@@Base+0x50>
   116e8:	mov	r0, #10
   116ec:	bl	10e84 <putchar@plt>
   116f0:	ldr	r0, [r4, #4]
   116f4:	add	r5, r5, #1
   116f8:	cmp	r5, r0
   116fc:	bge	11754 <grafo_imprime@@Base+0xa4>
   11700:	ldr	r0, [r4, #8]
   11704:	mov	r1, r5
   11708:	add	r0, r0, r5, lsl #3
   1170c:	ldr	r6, [r0, #4]
   11710:	mov	r0, r9
   11714:	bl	10df4 <printf@plt>
   11718:	cmp	r6, #0
   1171c:	beq	116e8 <grafo_imprime@@Base+0x38>
   11720:	ldr	r1, [r6]
   11724:	mov	r0, r8
   11728:	bl	10df4 <printf@plt>
   1172c:	ldr	r6, [r6, #4]
   11730:	cmp	r6, #0
   11734:	beq	116e8 <grafo_imprime@@Base+0x38>
   11738:	ldr	r1, [r6]
   1173c:	mov	r0, r7
   11740:	bl	10df4 <printf@plt>
   11744:	ldr	r6, [r6, #4]
   11748:	cmp	r6, #0
   1174c:	bne	11738 <grafo_imprime@@Base+0x88>
   11750:	b	116e8 <grafo_imprime@@Base+0x38>
   11754:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00011758 <dfs_helper@@Base>:
   11758:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1175c:	add	fp, sp, #24
   11760:	sub	sp, sp, #8
   11764:	ldr	r9, [fp, #8]
   11768:	mov	r4, r1
   1176c:	mov	r6, r0
   11770:	mov	r0, #0
   11774:	ldr	r1, [r9, r1, lsl #2]
   11778:	cmp	r1, #0
   1177c:	beq	11788 <dfs_helper@@Base+0x30>
   11780:	sub	sp, fp, #24
   11784:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11788:	mov	r5, r2
   1178c:	cmp	r4, r2
   11790:	str	r3, [r9, r4, lsl #2]
   11794:	bne	117a4 <dfs_helper@@Base+0x4c>
   11798:	mov	r0, r3
   1179c:	sub	sp, fp, #24
   117a0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   117a4:	ldr	r0, [r6, #4]
   117a8:	cmp	r0, #1
   117ac:	blt	11810 <dfs_helper@@Base+0xb8>
   117b0:	add	r8, r3, #1
   117b4:	mov	r7, #0
   117b8:	b	117c8 <dfs_helper@@Base+0x70>
   117bc:	add	r7, r7, #1
   117c0:	cmp	r7, r0
   117c4:	bge	11810 <dfs_helper@@Base+0xb8>
   117c8:	ldr	r1, [r6, #8]
   117cc:	add	r1, r1, r4, lsl #3
   117d0:	ldr	r1, [r1, #4]
   117d4:	cmp	r1, #0
   117d8:	beq	117bc <dfs_helper@@Base+0x64>
   117dc:	ldr	r2, [r1]
   117e0:	cmp	r2, r7
   117e4:	bne	117d0 <dfs_helper@@Base+0x78>
   117e8:	mov	r0, r6
   117ec:	mov	r1, r7
   117f0:	mov	r2, r5
   117f4:	mov	r3, r8
   117f8:	str	r9, [sp]
   117fc:	bl	11758 <dfs_helper@@Base>
   11800:	cmp	r0, #0
   11804:	bne	11780 <dfs_helper@@Base+0x28>
   11808:	ldr	r0, [r6, #4]
   1180c:	b	117bc <dfs_helper@@Base+0x64>
   11810:	mov	r0, #0
   11814:	str	r0, [r9, r4, lsl #2]
   11818:	sub	sp, fp, #24
   1181c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00011820 <grafo_dfs@@Base>:
   11820:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11824:	add	fp, sp, #24
   11828:	sub	sp, sp, #8
   1182c:	cmp	r0, #0
   11830:	beq	118ec <grafo_dfs@@Base+0xcc>
   11834:	mov	r4, r0
   11838:	ldr	r0, [r0, #4]
   1183c:	mov	r7, r1
   11840:	mov	r1, #4
   11844:	mov	r8, r3
   11848:	mov	r6, r2
   1184c:	bl	10dd0 <calloc@plt>
   11850:	mov	r5, r0
   11854:	str	r0, [sp]
   11858:	mov	r0, r4
   1185c:	mov	r1, r7
   11860:	mov	r2, r6
   11864:	mov	r3, #1
   11868:	bl	11758 <dfs_helper@@Base>
   1186c:	cmp	r0, #0
   11870:	beq	118fc <grafo_dfs@@Base+0xdc>
   11874:	mov	r1, #4
   11878:	mov	r7, r0
   1187c:	bl	10dd0 <calloc@plt>
   11880:	mov	r6, r0
   11884:	cmp	r7, #1
   11888:	blt	118d4 <grafo_dfs@@Base+0xb4>
   1188c:	ldr	r0, [r4, #4]
   11890:	cmp	r0, #1
   11894:	blt	118d4 <grafo_dfs@@Base+0xb4>
   11898:	mov	r1, #0
   1189c:	b	118ac <grafo_dfs@@Base+0x8c>
   118a0:	str	r3, [r6, r2, lsl #2]
   118a4:	cmp	r1, r7
   118a8:	beq	118d4 <grafo_dfs@@Base+0xb4>
   118ac:	mov	r2, r1
   118b0:	add	r1, r1, #1
   118b4:	mov	r3, #0
   118b8:	ldr	r4, [r5, r3, lsl #2]
   118bc:	cmp	r4, r1
   118c0:	beq	118a0 <grafo_dfs@@Base+0x80>
   118c4:	add	r3, r3, #1
   118c8:	cmp	r3, r0
   118cc:	blt	118b8 <grafo_dfs@@Base+0x98>
   118d0:	b	118a4 <grafo_dfs@@Base+0x84>
   118d4:	mov	r0, r5
   118d8:	str	r7, [r8]
   118dc:	bl	10e18 <free@plt>
   118e0:	mov	r0, r6
   118e4:	sub	sp, fp, #24
   118e8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   118ec:	mov	r6, #0
   118f0:	mov	r0, r6
   118f4:	sub	sp, fp, #24
   118f8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   118fc:	mov	r0, r5
   11900:	bl	10e18 <free@plt>
   11904:	mov	r6, #0
   11908:	str	r6, [r8]
   1190c:	mov	r0, r6
   11910:	sub	sp, fp, #24
   11914:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00011918 <grafo_bfs@@Base>:
   11918:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1191c:	add	fp, sp, #28
   11920:	sub	sp, sp, #12
   11924:	cmp	r0, #0
   11928:	beq	11a1c <grafo_bfs@@Base+0x104>
   1192c:	ldr	r4, [r0, #4]
   11930:	mov	r7, r1
   11934:	mov	sl, r0
   11938:	mov	r1, #4
   1193c:	mov	r8, r3
   11940:	mov	r6, r2
   11944:	mov	r0, r4
   11948:	bl	10dd0 <calloc@plt>
   1194c:	mov	r5, r0
   11950:	mov	r0, r4
   11954:	mov	r1, #4
   11958:	bl	10dd0 <calloc@plt>
   1195c:	mov	r9, r0
   11960:	cmp	r4, #0
   11964:	str	r6, [sp, #8]
   11968:	ble	11a2c <grafo_bfs@@Base+0x114>
   1196c:	lsl	r2, r4, #2
   11970:	mov	r0, r5
   11974:	mov	r1, #255	; 0xff
   11978:	bl	10e78 <memset@plt>
   1197c:	str	r7, [r5, r7, lsl #2]
   11980:	str	r7, [r9]
   11984:	mov	lr, #0
   11988:	mov	r2, #1
   1198c:	ldr	ip, [sl, #8]
   11990:	add	r0, lr, #1
   11994:	sdiv	r1, r0, r4
   11998:	mls	lr, r1, r4, r0
   1199c:	add	r0, ip, r7, lsl #3
   119a0:	ldr	r6, [r0, #4]
   119a4:	cmp	r6, #0
   119a8:	beq	11a0c <grafo_bfs@@Base+0xf4>
   119ac:	mov	r0, #0
   119b0:	b	119cc <grafo_bfs@@Base+0xb4>
   119b4:	ldr	r1, [r5, r0, lsl #2]
   119b8:	cmn	r1, #1
   119bc:	beq	119ec <grafo_bfs@@Base+0xd4>
   119c0:	add	r0, r0, #1
   119c4:	cmp	r0, r4
   119c8:	beq	11a0c <grafo_bfs@@Base+0xf4>
   119cc:	mov	r3, r6
   119d0:	ldr	r1, [r3]
   119d4:	cmp	r1, r0
   119d8:	beq	119b4 <grafo_bfs@@Base+0x9c>
   119dc:	ldr	r3, [r3, #4]
   119e0:	cmp	r3, #0
   119e4:	bne	119d0 <grafo_bfs@@Base+0xb8>
   119e8:	b	119c0 <grafo_bfs@@Base+0xa8>
   119ec:	add	r1, r2, #1
   119f0:	str	r0, [r9, r2, lsl #2]
   119f4:	str	r7, [r5, r0, lsl #2]
   119f8:	sdiv	r2, r1, r4
   119fc:	mls	r2, r2, r4, r1
   11a00:	add	r0, r0, #1
   11a04:	cmp	r0, r4
   11a08:	bne	119cc <grafo_bfs@@Base+0xb4>
   11a0c:	cmp	lr, r2
   11a10:	beq	11a4c <grafo_bfs@@Base+0x134>
   11a14:	ldr	r7, [r9, lr, lsl #2]
   11a18:	b	11990 <grafo_bfs@@Base+0x78>
   11a1c:	mov	sl, #0
   11a20:	mov	r0, sl
   11a24:	sub	sp, fp, #28
   11a28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11a2c:	mov	r0, #0
   11a30:	str	r7, [r5, r7, lsl #2]
   11a34:	str	r7, [r9]
   11a38:	add	r0, r0, #1
   11a3c:	sdiv	r1, r0, r4
   11a40:	mls	r0, r1, r4, r0
   11a44:	cmp	r0, #1
   11a48:	bne	11a38 <grafo_bfs@@Base+0x120>
   11a4c:	ldr	r6, [sp, #8]
   11a50:	ldr	r4, [r5, r6, lsl #2]
   11a54:	cmp	r4, #0
   11a58:	bmi	11a74 <grafo_bfs@@Base+0x15c>
   11a5c:	cmp	r4, r6
   11a60:	str	r8, [sp, #4]
   11a64:	bne	11a7c <grafo_bfs@@Base+0x164>
   11a68:	mov	r8, #2
   11a6c:	mov	r7, #1
   11a70:	b	11a9c <grafo_bfs@@Base+0x184>
   11a74:	mov	r7, #0
   11a78:	b	11b10 <grafo_bfs@@Base+0x1f8>
   11a7c:	mov	r7, #1
   11a80:	mov	r0, r4
   11a84:	ldr	r1, [r5, r0, lsl #2]
   11a88:	add	r7, r7, #1
   11a8c:	cmp	r1, r0
   11a90:	mov	r0, r1
   11a94:	bne	11a84 <grafo_bfs@@Base+0x16c>
   11a98:	add	r8, r7, #1
   11a9c:	lsl	r0, r7, #2
   11aa0:	bl	10e48 <malloc@plt>
   11aa4:	add	r3, r0, r7, lsl #2
   11aa8:	mov	sl, r0
   11aac:	cmp	r8, #2
   11ab0:	str	r6, [r3, #-4]
   11ab4:	bne	11ac0 <grafo_bfs@@Base+0x1a8>
   11ab8:	ldr	r8, [sp, #4]
   11abc:	b	11b10 <grafo_bfs@@Base+0x1f8>
   11ac0:	sub	r0, r8, #2
   11ac4:	mov	r1, #2
   11ac8:	cmp	r8, #3
   11acc:	and	r0, r0, #1
   11ad0:	beq	11b00 <grafo_bfs@@Base+0x1e8>
   11ad4:	sub	r2, r8, r0
   11ad8:	sub	r3, r3, #12
   11adc:	mov	r1, #2
   11ae0:	ldr	r6, [r5, r4, lsl #2]
   11ae4:	str	r4, [r3, #4]
   11ae8:	add	r1, r1, #2
   11aec:	cmp	r2, r1
   11af0:	ldr	r4, [r5, r6, lsl #2]
   11af4:	str	r6, [r3]
   11af8:	sub	r3, r3, #8
   11afc:	bne	11ae0 <grafo_bfs@@Base+0x1c8>
   11b00:	ldr	r8, [sp, #4]
   11b04:	cmp	r0, #0
   11b08:	subne	r0, r7, r1
   11b0c:	strne	r4, [sl, r0, lsl #2]
   11b10:	mov	r0, r9
   11b14:	bl	10e18 <free@plt>
   11b18:	mov	r0, r5
   11b1c:	bl	10e18 <free@plt>
   11b20:	str	r7, [r8]
   11b24:	mov	r0, sl
   11b28:	sub	sp, fp, #28
   11b2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00011b30 <heap_nova@@Base>:
   11b30:	push	{r4, r5, fp, lr}
   11b34:	add	fp, sp, #8
   11b38:	mov	r5, r0
   11b3c:	mov	r0, #12
   11b40:	bl	10e48 <malloc@plt>
   11b44:	cmp	r0, #0
   11b48:	beq	11b80 <heap_nova@@Base+0x50>
   11b4c:	mov	r4, r0
   11b50:	mov	r0, #0
   11b54:	mov	r1, #4
   11b58:	stm	r4, {r0, r5}
   11b5c:	mov	r0, r5
   11b60:	bl	10dd0 <calloc@plt>
   11b64:	cmp	r0, #0
   11b68:	str	r0, [r4, #8]
   11b6c:	beq	11b78 <heap_nova@@Base+0x48>
   11b70:	mov	r0, r4
   11b74:	pop	{r4, r5, fp, pc}
   11b78:	mov	r0, r4
   11b7c:	bl	10e18 <free@plt>
   11b80:	mov	r4, #0
   11b84:	mov	r0, r4
   11b88:	pop	{r4, r5, fp, pc}

00011b8c <heap_apaga@@Base>:
   11b8c:	cmp	r0, #0
   11b90:	bxeq	lr
   11b94:	push	{r4, r5, r6, sl, fp, lr}
   11b98:	add	fp, sp, #16
   11b9c:	ldr	r1, [r0]
   11ba0:	mov	r4, r0
   11ba4:	ldr	r0, [r0, #8]
   11ba8:	cmp	r1, #1
   11bac:	blt	11bec <heap_apaga@@Base+0x60>
   11bb0:	mov	r5, #0
   11bb4:	mov	r6, #0
   11bb8:	ldr	r0, [r0, r6, lsl #2]
   11bbc:	ldr	r0, [r0, #4]
   11bc0:	bl	10e18 <free@plt>
   11bc4:	ldr	r0, [r4, #8]
   11bc8:	ldr	r0, [r0, r6, lsl #2]
   11bcc:	bl	10e18 <free@plt>
   11bd0:	ldr	r0, [r4, #8]
   11bd4:	str	r5, [r0, r6, lsl #2]
   11bd8:	add	r6, r6, #1
   11bdc:	ldr	r1, [r4]
   11be0:	ldr	r0, [r4, #8]
   11be4:	cmp	r6, r1
   11be8:	blt	11bb8 <heap_apaga@@Base+0x2c>
   11bec:	bl	10e18 <free@plt>
   11bf0:	mov	r0, r4
   11bf4:	pop	{r4, r5, r6, sl, fp, lr}
   11bf8:	b	10e18 <free@plt>

00011bfc <elemento_cria@@Base>:
   11bfc:	push	{r4, r5, r6, r7, fp, lr}
   11c00:	add	fp, sp, #16
   11c04:	mov	r4, r0
   11c08:	mov	r0, #8
   11c0c:	mov	r7, r1
   11c10:	bl	10e48 <malloc@plt>
   11c14:	mov	r5, #0
   11c18:	cmp	r0, #0
   11c1c:	beq	11c54 <elemento_cria@@Base+0x58>
   11c20:	mov	r6, r0
   11c24:	mov	r0, r7
   11c28:	bl	10e6c <strlen@plt>
   11c2c:	add	r0, r0, #1
   11c30:	mov	r1, #1
   11c34:	bl	10dd0 <calloc@plt>
   11c38:	cmp	r0, #0
   11c3c:	str	r0, [r6, #4]
   11c40:	beq	11c5c <elemento_cria@@Base+0x60>
   11c44:	mov	r1, r7
   11c48:	bl	10e30 <strcpy@plt>
   11c4c:	mov	r5, r6
   11c50:	str	r4, [r6]
   11c54:	mov	r0, r5
   11c58:	pop	{r4, r5, r6, r7, fp, pc}
   11c5c:	mov	r0, r6
   11c60:	bl	10e18 <free@plt>
   11c64:	mov	r0, r5
   11c68:	pop	{r4, r5, r6, r7, fp, pc}

00011c6c <heap_insere@@Base>:
   11c6c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11c70:	add	fp, sp, #24
   11c74:	mov	r4, r0
   11c78:	mov	r7, r1
   11c7c:	ldr	r0, [r0]
   11c80:	mov	r5, #0
   11c84:	ldr	r1, [r4, #4]
   11c88:	cmp	r0, r1
   11c8c:	bge	11d40 <heap_insere@@Base+0xd4>
   11c90:	mov	r0, #8
   11c94:	mov	r8, r2
   11c98:	bl	10e48 <malloc@plt>
   11c9c:	cmp	r0, #0
   11ca0:	beq	11d40 <heap_insere@@Base+0xd4>
   11ca4:	mov	r6, r0
   11ca8:	mov	r0, r7
   11cac:	bl	10e6c <strlen@plt>
   11cb0:	add	r0, r0, #1
   11cb4:	mov	r1, #1
   11cb8:	bl	10dd0 <calloc@plt>
   11cbc:	cmp	r0, #0
   11cc0:	str	r0, [r6, #4]
   11cc4:	beq	11d48 <heap_insere@@Base+0xdc>
   11cc8:	mov	r1, r7
   11ccc:	bl	10e30 <strcpy@plt>
   11cd0:	str	r8, [r6]
   11cd4:	ldr	r0, [r4]
   11cd8:	ldr	r1, [r4, #8]
   11cdc:	str	r6, [r1, r0, lsl #2]
   11ce0:	add	r1, r0, #1
   11ce4:	cmp	r0, #0
   11ce8:	str	r1, [r4]
   11cec:	beq	11d3c <heap_insere@@Base+0xd0>
   11cf0:	ldr	r1, [r4, #8]
   11cf4:	ldr	r2, [r1, r0, lsl #2]
   11cf8:	cmp	r2, #0
   11cfc:	subne	r3, r0, #1
   11d00:	addne	r3, r3, r3, lsr #31
   11d04:	asrne	r3, r3, #1
   11d08:	ldrne	r7, [r1, r3, lsl #2]
   11d0c:	cmpne	r7, #0
   11d10:	beq	11d3c <heap_insere@@Base+0xd0>
   11d14:	ldr	r6, [r7]
   11d18:	ldr	r5, [r2]
   11d1c:	cmp	r5, r6
   11d20:	bge	11d3c <heap_insere@@Base+0xd0>
   11d24:	str	r2, [r1, r3, lsl #2]
   11d28:	cmp	r0, #2
   11d2c:	ldr	r1, [r4, #8]
   11d30:	str	r7, [r1, r0, lsl #2]
   11d34:	mov	r0, r3
   11d38:	bhi	11cf0 <heap_insere@@Base+0x84>
   11d3c:	mov	r5, #1
   11d40:	mov	r0, r5
   11d44:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11d48:	mov	r0, r6
   11d4c:	bl	10e18 <free@plt>
   11d50:	mov	r0, r5
   11d54:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00011d58 <menor_que@@Base>:
   11d58:	mov	r2, r0
   11d5c:	mov	r0, #0
   11d60:	cmp	r2, #0
   11d64:	cmpne	r1, #0
   11d68:	bne	11d70 <menor_que@@Base+0x18>
   11d6c:	bx	lr
   11d70:	ldr	r1, [r1]
   11d74:	ldr	r2, [r2]
   11d78:	mov	r0, #0
   11d7c:	cmp	r2, r1
   11d80:	movwlt	r0, #1
   11d84:	bx	lr

00011d88 <heap_remove@@Base>:
   11d88:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11d8c:	add	fp, sp, #24
   11d90:	mov	r8, #0
   11d94:	cmp	r0, #0
   11d98:	beq	11e78 <heap_remove@@Base+0xf0>
   11d9c:	mov	r5, r0
   11da0:	ldr	r0, [r0]
   11da4:	cmp	r0, #1
   11da8:	blt	11e78 <heap_remove@@Base+0xf0>
   11dac:	ldr	r0, [r5, #8]
   11db0:	ldr	r0, [r0]
   11db4:	ldr	r8, [r0, #4]
   11db8:	bl	10e18 <free@plt>
   11dbc:	ldr	r0, [r5]
   11dc0:	ldr	r1, [r5, #8]
   11dc4:	sub	lr, r0, #1
   11dc8:	str	lr, [r5]
   11dcc:	cmp	lr, #2
   11dd0:	ldr	r2, [r1, lr, lsl #2]
   11dd4:	str	r2, [r1]
   11dd8:	mov	r1, #0
   11ddc:	ldr	r2, [r5, #8]
   11de0:	str	r1, [r2, lr, lsl #2]
   11de4:	blt	11e78 <heap_remove@@Base+0xf0>
   11de8:	mov	ip, #1
   11dec:	mov	r4, #1
   11df0:	mov	r2, #0
   11df4:	add	r3, r1, #2
   11df8:	ldr	r1, [r5, #8]
   11dfc:	cmp	r3, lr
   11e00:	bge	11e18 <heap_remove@@Base+0x90>
   11e04:	ldr	r6, [r1, r3, lsl #2]
   11e08:	cmp	r6, #0
   11e0c:	ldrne	r7, [r1, r4, lsl #2]
   11e10:	cmpne	r7, #0
   11e14:	bne	11e64 <heap_remove@@Base+0xdc>
   11e18:	mov	r3, r4
   11e1c:	ldr	r4, [r1, r3, lsl #2]
   11e20:	cmp	r4, #0
   11e24:	ldrne	r6, [r1, r2, lsl #2]
   11e28:	cmpne	r6, #0
   11e2c:	beq	11e78 <heap_remove@@Base+0xf0>
   11e30:	ldr	r7, [r6]
   11e34:	ldr	r0, [r4]
   11e38:	cmp	r0, r7
   11e3c:	bge	11e78 <heap_remove@@Base+0xf0>
   11e40:	str	r6, [r1, r3, lsl #2]
   11e44:	lsl	r1, r3, #1
   11e48:	ldr	r0, [r5, #8]
   11e4c:	str	r4, [r0, r2, lsl #2]
   11e50:	orr	r4, ip, r3, lsl #1
   11e54:	mov	r2, r3
   11e58:	cmp	r4, lr
   11e5c:	blt	11df4 <heap_remove@@Base+0x6c>
   11e60:	b	11e78 <heap_remove@@Base+0xf0>
   11e64:	ldr	r7, [r7]
   11e68:	ldr	r6, [r6]
   11e6c:	cmp	r6, r7
   11e70:	movge	r3, r4
   11e74:	b	11e1c <heap_remove@@Base+0x94>
   11e78:	mov	r0, r8
   11e7c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00011e80 <mostraHeap@@Base>:
   11e80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11e84:	add	fp, sp, #28
   11e88:	sub	sp, sp, #4
   11e8c:	mov	r9, r0
   11e90:	ldr	r0, [r0]
   11e94:	cmp	r0, r1
   11e98:	ble	11f40 <mostraHeap@@Base+0xc0>
   11e9c:	mov	sl, r1
   11ea0:	mov	r7, #0
   11ea4:	cmp	r1, #1
   11ea8:	blt	11ec8 <mostraHeap@@Base+0x48>
   11eac:	mov	r0, sl
   11eb0:	sub	r1, r0, #1
   11eb4:	add	r7, r7, #1
   11eb8:	add	r0, r1, r1, lsr #31
   11ebc:	cmp	r1, #1
   11ec0:	asr	r0, r0, #1
   11ec4:	bgt	11eb0 <mostraHeap@@Base+0x30>
   11ec8:	mov	r0, #1
   11ecc:	orr	r1, r0, sl, lsl #1
   11ed0:	mov	r0, r9
   11ed4:	bl	11e80 <mostraHeap@@Base>
   11ed8:	lsl	r8, sl, #1
   11edc:	cmp	r7, #0
   11ee0:	beq	11f08 <mostraHeap@@Base+0x88>
   11ee4:	movw	r6, #9913	; 0x26b9
   11ee8:	add	r4, r7, r7, lsl #1
   11eec:	mov	r5, #0
   11ef0:	movt	r6, #1
   11ef4:	mov	r0, r6
   11ef8:	bl	10df4 <printf@plt>
   11efc:	add	r5, r5, #1
   11f00:	cmp	r5, r4
   11f04:	bcc	11ef4 <mostraHeap@@Base+0x74>
   11f08:	ldr	r0, [r9, #8]
   11f0c:	ldr	r0, [r0, sl, lsl #2]
   11f10:	ldr	r2, [r0]
   11f14:	ldr	r1, [r0, #4]
   11f18:	movw	r0, #9919	; 0x26bf
   11f1c:	movt	r0, #1
   11f20:	bl	10df4 <printf@plt>
   11f24:	add	r1, r8, #2
   11f28:	mov	r0, r9
   11f2c:	bl	11e80 <mostraHeap@@Base>
   11f30:	cmp	r7, #0
   11f34:	beq	11f40 <mostraHeap@@Base+0xc0>
   11f38:	sub	sp, fp, #28
   11f3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f40:	mov	r0, #10
   11f44:	sub	sp, fp, #28
   11f48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11f4c:	b	10e84 <putchar@plt>

00011f50 <novo_str@@Base>:
   11f50:	push	{r4, r5, r6, sl, fp, lr}
   11f54:	add	fp, sp, #16
   11f58:	mov	r6, r0
   11f5c:	mov	r0, #8
   11f60:	bl	10e48 <malloc@plt>
   11f64:	mov	r5, #0
   11f68:	cmp	r0, #0
   11f6c:	beq	11fa4 <novo_str@@Base+0x54>
   11f70:	mov	r4, r0
   11f74:	mov	r0, r6
   11f78:	bl	10e6c <strlen@plt>
   11f7c:	add	r0, r0, #1
   11f80:	bl	10e48 <malloc@plt>
   11f84:	cmp	r0, #0
   11f88:	str	r0, [r4]
   11f8c:	beq	11fac <novo_str@@Base+0x5c>
   11f90:	mov	r1, r6
   11f94:	bl	10e30 <strcpy@plt>
   11f98:	mov	r0, #0
   11f9c:	mov	r5, r4
   11fa0:	str	r0, [r4, #4]
   11fa4:	mov	r0, r5
   11fa8:	pop	{r4, r5, r6, sl, fp, pc}
   11fac:	mov	r0, r4
   11fb0:	bl	10e18 <free@plt>
   11fb4:	mov	r0, r5
   11fb8:	pop	{r4, r5, r6, sl, fp, pc}

00011fbc <lista_nova@@Base>:
   11fbc:	push	{fp, lr}
   11fc0:	mov	fp, sp
   11fc4:	mov	r0, #8
   11fc8:	bl	10e48 <malloc@plt>
   11fcc:	cmp	r0, #0
   11fd0:	moveq	r0, #0
   11fd4:	movne	r1, #0
   11fd8:	strne	r1, [r0]
   11fdc:	strne	r1, [r0, #4]
   11fe0:	pop	{fp, pc}

00011fe4 <lista_apaga@@Base>:
   11fe4:	cmp	r0, #0
   11fe8:	bxeq	lr
   11fec:	push	{r4, r5, fp, lr}
   11ff0:	add	fp, sp, #8
   11ff4:	mov	r4, r0
   11ff8:	ldr	r5, [r4]
   11ffc:	cmp	r5, #0
   12000:	beq	12028 <lista_apaga@@Base+0x44>
   12004:	ldr	r0, [r5, #4]
   12008:	str	r0, [r4]
   1200c:	ldr	r0, [r5]
   12010:	bl	10e18 <free@plt>
   12014:	mov	r0, r5
   12018:	bl	10e18 <free@plt>
   1201c:	ldr	r5, [r4]
   12020:	cmp	r5, #0
   12024:	bne	12004 <lista_apaga@@Base+0x20>
   12028:	mov	r0, r4
   1202c:	pop	{r4, r5, fp, lr}
   12030:	b	10e18 <free@plt>

00012034 <lista_tamanho@@Base>:
   12034:	cmp	r0, #0
   12038:	ldrne	r0, [r0, #4]
   1203c:	mvneq	r0, #0
   12040:	bx	lr

00012044 <lista_elemento@@Base>:
   12044:	mov	r2, r0
   12048:	mov	r0, #0
   1204c:	cmp	r2, #0
   12050:	beq	12094 <lista_elemento@@Base+0x50>
   12054:	cmp	r1, #0
   12058:	bxmi	lr
   1205c:	ldr	r2, [r2]
   12060:	cmp	r1, #1
   12064:	blt	1208c <lista_elemento@@Base+0x48>
   12068:	cmp	r2, #0
   1206c:	beq	1208c <lista_elemento@@Base+0x48>
   12070:	mov	r3, #1
   12074:	ldr	r2, [r2, #4]
   12078:	cmp	r3, r1
   1207c:	bge	1208c <lista_elemento@@Base+0x48>
   12080:	add	r3, r3, #1
   12084:	cmp	r2, #0
   12088:	bne	12074 <lista_elemento@@Base+0x30>
   1208c:	cmp	r2, #0
   12090:	ldrne	r0, [r2]
   12094:	bx	lr

00012098 <lista_atribui@@Base>:
   12098:	push	{r4, r5, r6, r7, fp, lr}
   1209c:	add	fp, sp, #16
   120a0:	mov	r4, r1
   120a4:	mov	r1, r0
   120a8:	mvn	r0, #0
   120ac:	cmp	r1, #0
   120b0:	beq	12120 <lista_atribui@@Base+0x88>
   120b4:	cmp	r4, #0
   120b8:	bmi	12120 <lista_atribui@@Base+0x88>
   120bc:	ldr	r7, [r1]
   120c0:	mov	r5, r2
   120c4:	cmp	r4, #1
   120c8:	blt	120f0 <lista_atribui@@Base+0x58>
   120cc:	cmp	r7, #0
   120d0:	beq	120f0 <lista_atribui@@Base+0x58>
   120d4:	mov	r1, #1
   120d8:	ldr	r7, [r7, #4]
   120dc:	cmp	r1, r4
   120e0:	bge	120f0 <lista_atribui@@Base+0x58>
   120e4:	add	r1, r1, #1
   120e8:	cmp	r7, #0
   120ec:	bne	120d8 <lista_atribui@@Base+0x40>
   120f0:	cmp	r7, #0
   120f4:	beq	12120 <lista_atribui@@Base+0x88>
   120f8:	ldr	r6, [r7]
   120fc:	mov	r0, r5
   12100:	bl	10e6c <strlen@plt>
   12104:	add	r1, r0, #1
   12108:	mov	r0, r6
   1210c:	bl	10e24 <realloc@plt>
   12110:	mov	r1, r5
   12114:	str	r0, [r7]
   12118:	bl	10e30 <strcpy@plt>
   1211c:	mov	r0, r4
   12120:	pop	{r4, r5, r6, r7, fp, pc}

00012124 <lista_insere@@Base>:
   12124:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12128:	add	fp, sp, #24
   1212c:	cmp	r0, #0
   12130:	beq	121d8 <lista_insere@@Base+0xb4>
   12134:	mov	r4, r2
   12138:	cmn	r2, #1
   1213c:	blt	121d8 <lista_insere@@Base+0xb4>
   12140:	mov	r7, r1
   12144:	mov	r6, r0
   12148:	cmp	r4, #0
   1214c:	beq	1215c <lista_insere@@Base+0x38>
   12150:	ldr	r0, [r6, #4]
   12154:	cmp	r0, r4
   12158:	ble	121d8 <lista_insere@@Base+0xb4>
   1215c:	ldr	r5, [r6]
   12160:	mov	r0, #8
   12164:	bl	10e48 <malloc@plt>
   12168:	cmp	r0, #0
   1216c:	beq	121d8 <lista_insere@@Base+0xb4>
   12170:	mov	r8, r0
   12174:	mov	r0, r7
   12178:	bl	10e6c <strlen@plt>
   1217c:	add	r0, r0, #1
   12180:	bl	10e48 <malloc@plt>
   12184:	cmp	r0, #0
   12188:	str	r0, [r8]
   1218c:	beq	121d0 <lista_insere@@Base+0xac>
   12190:	mov	r1, r7
   12194:	bl	10e30 <strcpy@plt>
   12198:	mov	r0, #0
   1219c:	cmn	r4, #1
   121a0:	str	r0, [r8, #4]
   121a4:	ldr	r0, [r6, #4]
   121a8:	add	r1, r0, #1
   121ac:	str	r1, [r6, #4]
   121b0:	beq	121e4 <lista_insere@@Base+0xc0>
   121b4:	cmp	r4, #0
   121b8:	bne	12204 <lista_insere@@Base+0xe0>
   121bc:	mov	r4, #0
   121c0:	str	r5, [r8, #4]
   121c4:	str	r8, [r6]
   121c8:	mov	r0, r4
   121cc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   121d0:	mov	r0, r8
   121d4:	bl	10e18 <free@plt>
   121d8:	mvn	r4, #0
   121dc:	mov	r0, r4
   121e0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   121e4:	cmp	r5, #0
   121e8:	beq	12238 <lista_insere@@Base+0x114>
   121ec:	mov	r1, r5
   121f0:	ldr	r5, [r5, #4]
   121f4:	cmp	r5, #0
   121f8:	bne	121ec <lista_insere@@Base+0xc8>
   121fc:	str	r8, [r1, #4]
   12200:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12204:	sub	r0, r4, #1
   12208:	mov	r1, #0
   1220c:	mov	r2, r5
   12210:	ldr	r5, [r5, #4]
   12214:	cmp	r1, r0
   12218:	bge	12228 <lista_insere@@Base+0x104>
   1221c:	add	r1, r1, #1
   12220:	cmp	r2, #0
   12224:	bne	1220c <lista_insere@@Base+0xe8>
   12228:	mov	r0, r4
   1222c:	str	r5, [r8, #4]
   12230:	str	r8, [r2, #4]
   12234:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12238:	str	r8, [r6]
   1223c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00012240 <lista_remove@@Base>:
   12240:	push	{r4, sl, fp, lr}
   12244:	add	fp, sp, #8
   12248:	mov	r2, r0
   1224c:	mvn	r0, #0
   12250:	cmp	r2, #0
   12254:	beq	122d0 <lista_remove@@Base+0x90>
   12258:	cmp	r1, #0
   1225c:	bmi	122d0 <lista_remove@@Base+0x90>
   12260:	ldr	r3, [r2, #4]
   12264:	cmp	r3, r1
   12268:	pople	{r4, sl, fp, pc}
   1226c:	sub	r0, r3, #1
   12270:	cmp	r1, #0
   12274:	str	r0, [r2, #4]
   12278:	ldr	r4, [r2]
   1227c:	beq	122a4 <lista_remove@@Base+0x64>
   12280:	mov	r0, r4
   12284:	ldr	r4, [r4, #4]
   12288:	subs	r1, r1, #1
   1228c:	beq	122b0 <lista_remove@@Base+0x70>
   12290:	mov	r2, r4
   12294:	ldr	r3, [r2, #4]!
   12298:	cmp	r3, #0
   1229c:	bne	12280 <lista_remove@@Base+0x40>
   122a0:	b	122b4 <lista_remove@@Base+0x74>
   122a4:	ldr	r0, [r4, #4]
   122a8:	str	r0, [r2]
   122ac:	b	122bc <lista_remove@@Base+0x7c>
   122b0:	add	r2, r4, #4
   122b4:	ldr	r1, [r2]
   122b8:	str	r1, [r0, #4]
   122bc:	ldr	r0, [r4]
   122c0:	bl	10e18 <free@plt>
   122c4:	mov	r0, r4
   122c8:	bl	10e18 <free@plt>
   122cc:	mov	r0, #0
   122d0:	pop	{r4, sl, fp, pc}

000122d4 <lista_pesquisa@@Base>:
   122d4:	push	{r4, r5, r6, r7, fp, lr}
   122d8:	add	fp, sp, #16
   122dc:	cmp	r0, #0
   122e0:	beq	12370 <lista_pesquisa@@Base+0x9c>
   122e4:	ldr	r6, [r0]
   122e8:	cmp	r6, #0
   122ec:	beq	12370 <lista_pesquisa@@Base+0x9c>
   122f0:	mov	r4, r2
   122f4:	mov	r5, r1
   122f8:	cmp	r2, #0
   122fc:	beq	12354 <lista_pesquisa@@Base+0x80>
   12300:	cmn	r4, #1
   12304:	bne	12334 <lista_pesquisa@@Base+0x60>
   12308:	mov	r7, #0
   1230c:	ldr	r0, [r6]
   12310:	mov	r1, r5
   12314:	bl	10ddc <strcmp@plt>
   12318:	ldr	r6, [r6, #4]
   1231c:	cmp	r0, #0
   12320:	moveq	r4, r7
   12324:	add	r7, r7, #1
   12328:	cmp	r6, #0
   1232c:	bne	1230c <lista_pesquisa@@Base+0x38>
   12330:	b	12368 <lista_pesquisa@@Base+0x94>
   12334:	ldr	r6, [r6, #4]
   12338:	cmp	r6, #0
   1233c:	bne	12334 <lista_pesquisa@@Base+0x60>
   12340:	b	12370 <lista_pesquisa@@Base+0x9c>
   12344:	ldr	r6, [r6, #4]
   12348:	add	r4, r4, #1
   1234c:	cmp	r6, #0
   12350:	beq	12370 <lista_pesquisa@@Base+0x9c>
   12354:	ldr	r0, [r6]
   12358:	mov	r1, r5
   1235c:	bl	10ddc <strcmp@plt>
   12360:	cmp	r0, #0
   12364:	bne	12344 <lista_pesquisa@@Base+0x70>
   12368:	mov	r0, r4
   1236c:	pop	{r4, r5, r6, r7, fp, pc}
   12370:	mvn	r4, #0
   12374:	mov	r0, r4
   12378:	pop	{r4, r5, r6, r7, fp, pc}

0001237c <lista_ordena@@Base>:
   1237c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12380:	add	fp, sp, #28
   12384:	sub	sp, sp, #4
   12388:	cmp	r0, #0
   1238c:	beq	12460 <lista_ordena@@Base+0xe4>
   12390:	ldr	sl, [r0]
   12394:	mov	r9, r0
   12398:	mov	r0, #0
   1239c:	mov	r4, sl
   123a0:	ldr	r7, [r4, #4]!
   123a4:	cmp	r7, #0
   123a8:	beq	12458 <lista_ordena@@Base+0xdc>
   123ac:	mov	r5, sl
   123b0:	b	123c8 <lista_ordena@@Base+0x4c>
   123b4:	mov	r5, r7
   123b8:	mov	r4, r5
   123bc:	ldr	r7, [r4, #4]!
   123c0:	cmp	r7, #0
   123c4:	beq	12454 <lista_ordena@@Base+0xd8>
   123c8:	ldr	r6, [r7]
   123cc:	ldr	r0, [r5]
   123d0:	mov	r1, r6
   123d4:	bl	10ddc <strcmp@plt>
   123d8:	cmp	r0, #1
   123dc:	blt	123b4 <lista_ordena@@Base+0x38>
   123e0:	ldr	r0, [r7, #4]
   123e4:	str	r0, [r4]
   123e8:	ldr	r0, [r7, #4]
   123ec:	cmp	r0, r5
   123f0:	beq	123b8 <lista_ordena@@Base+0x3c>
   123f4:	ldr	r0, [sl]
   123f8:	mov	r1, r6
   123fc:	bl	10ddc <strcmp@plt>
   12400:	cmp	r0, #0
   12404:	mov	r0, sl
   12408:	mov	r4, sl
   1240c:	bgt	12430 <lista_ordena@@Base+0xb4>
   12410:	ldr	r8, [r4, #4]
   12414:	mov	r1, r6
   12418:	ldr	r0, [r8]
   1241c:	bl	10ddc <strcmp@plt>
   12420:	cmp	r0, #0
   12424:	mov	r0, r4
   12428:	mov	r4, r8
   1242c:	ble	12410 <lista_ordena@@Base+0x94>
   12430:	cmp	r4, sl
   12434:	str	r4, [r7, #4]
   12438:	moveq	sl, r7
   1243c:	strne	r7, [r0, #4]
   12440:	streq	r7, [r9]
   12444:	mov	r4, r5
   12448:	ldr	r7, [r4, #4]!
   1244c:	cmp	r7, #0
   12450:	bne	123c8 <lista_ordena@@Base+0x4c>
   12454:	mov	r0, #0
   12458:	sub	sp, fp, #28
   1245c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12460:	mvn	r0, #0
   12464:	sub	sp, fp, #28
   12468:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001246c <lista_compara@@Base>:
   1246c:	push	{r4, r5, r6, sl, fp, lr}
   12470:	add	fp, sp, #16
   12474:	cmp	r0, #0
   12478:	mvn	r4, #0
   1247c:	cmpne	r1, #0
   12480:	bne	1248c <lista_compara@@Base+0x20>
   12484:	mov	r0, r4
   12488:	pop	{r4, r5, r6, sl, fp, pc}
   1248c:	ldr	r2, [r1, #4]
   12490:	ldr	r3, [r0, #4]
   12494:	mov	r4, #0
   12498:	cmp	r3, r2
   1249c:	bne	12484 <lista_compara@@Base+0x18>
   124a0:	ldr	r6, [r0]
   124a4:	ldr	r5, [r1]
   124a8:	cmp	r6, #0
   124ac:	beq	124d4 <lista_compara@@Base+0x68>
   124b0:	ldr	r1, [r5]
   124b4:	ldr	r0, [r6]
   124b8:	bl	10ddc <strcmp@plt>
   124bc:	cmp	r0, #0
   124c0:	bne	12484 <lista_compara@@Base+0x18>
   124c4:	ldr	r6, [r6, #4]
   124c8:	ldr	r5, [r5, #4]
   124cc:	cmp	r6, #0
   124d0:	bne	124b0 <lista_compara@@Base+0x44>
   124d4:	cmp	r5, #0
   124d8:	mvn	r4, #0
   124dc:	movweq	r4, #1
   124e0:	mov	r0, r4
   124e4:	pop	{r4, r5, r6, sl, fp, pc}

000124e8 <lista_inverte@@Base>:
   124e8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   124ec:	add	fp, sp, #24
   124f0:	mov	r5, #0
   124f4:	cmp	r0, #0
   124f8:	beq	125a4 <lista_inverte@@Base+0xbc>
   124fc:	mov	r6, r0
   12500:	mov	r0, #8
   12504:	bl	10e48 <malloc@plt>
   12508:	cmp	r0, #0
   1250c:	beq	125a4 <lista_inverte@@Base+0xbc>
   12510:	mov	r7, #0
   12514:	mov	r8, r0
   12518:	str	r7, [r0]
   1251c:	str	r7, [r0, #4]
   12520:	ldr	r4, [r6]
   12524:	cmp	r4, #0
   12528:	beq	125a0 <lista_inverte@@Base+0xb8>
   1252c:	mov	r9, #0
   12530:	b	12558 <lista_inverte@@Base+0x70>
   12534:	mov	r1, r6
   12538:	bl	10e30 <strcpy@plt>
   1253c:	add	r7, r7, #1
   12540:	str	r9, [r5, #4]
   12544:	mov	r9, r5
   12548:	stm	r8, {r5, r7}
   1254c:	ldr	r4, [r4, #4]
   12550:	cmp	r4, #0
   12554:	beq	125a0 <lista_inverte@@Base+0xb8>
   12558:	ldr	r6, [r4]
   1255c:	mov	r0, #8
   12560:	bl	10e48 <malloc@plt>
   12564:	cmp	r0, #0
   12568:	beq	1254c <lista_inverte@@Base+0x64>
   1256c:	mov	r5, r0
   12570:	mov	r0, r6
   12574:	bl	10e6c <strlen@plt>
   12578:	add	r0, r0, #1
   1257c:	bl	10e48 <malloc@plt>
   12580:	cmp	r0, #0
   12584:	str	r0, [r5]
   12588:	bne	12534 <lista_inverte@@Base+0x4c>
   1258c:	mov	r0, r5
   12590:	bl	10e18 <free@plt>
   12594:	ldr	r4, [r4, #4]
   12598:	cmp	r4, #0
   1259c:	bne	12558 <lista_inverte@@Base+0x70>
   125a0:	mov	r5, r8
   125a4:	mov	r0, r5
   125a8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000125ac <__libc_csu_init@@Base>:
   125ac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   125b0:	mov	r7, r0
   125b4:	ldr	r6, [pc, #72]	; 12604 <__libc_csu_init@@Base+0x58>
   125b8:	ldr	r5, [pc, #72]	; 12608 <__libc_csu_init@@Base+0x5c>
   125bc:	add	r6, pc, r6
   125c0:	add	r5, pc, r5
   125c4:	sub	r6, r6, r5
   125c8:	mov	r8, r1
   125cc:	mov	r9, r2
   125d0:	bl	10db0 <calloc@plt-0x20>
   125d4:	asrs	r6, r6, #2
   125d8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   125dc:	mov	r4, #0
   125e0:	add	r4, r4, #1
   125e4:	ldr	r3, [r5], #4
   125e8:	mov	r2, r9
   125ec:	mov	r1, r8
   125f0:	mov	r0, r7
   125f4:	blx	r3
   125f8:	cmp	r6, r4
   125fc:	bne	125e0 <__libc_csu_init@@Base+0x34>
   12600:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12604:	andeq	r0, r1, r8, asr #18
   12608:	andeq	r0, r1, r0, asr #18

0001260c <__libc_csu_fini@@Base>:
   1260c:	bx	lr

Disassembly of section .fini:

00012610 <.fini>:
   12610:	push	{r3, lr}
   12614:	pop	{r3, pc}
