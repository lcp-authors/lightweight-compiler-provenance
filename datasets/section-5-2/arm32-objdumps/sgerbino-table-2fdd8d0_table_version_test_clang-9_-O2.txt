
../repos/sgerbino-table-2fdd8d0/bin/table_version_test:     file format elf32-littlearm


Disassembly of section .init:

00011e70 <.init>:
   11e70:	push	{r3, lr}
   11e74:	bl	11f5c <_start@@Base+0x3c>
   11e78:	pop	{r3, pc}

Disassembly of section .plt:

00011e7c <strcmp@plt-0x14>:
   11e7c:	push	{lr}		; (str lr, [sp, #-4]!)
   11e80:	ldr	lr, [pc, #4]	; 11e8c <strcmp@plt-0x4>
   11e84:	add	lr, pc, lr
   11e88:	ldr	pc, [lr, #8]!
   11e8c:	andeq	r4, r1, r4, ror r1

00011e90 <strcmp@plt>:
   11e90:	add	ip, pc, #0, 12
   11e94:	add	ip, ip, #20, 20	; 0x14000
   11e98:	ldr	pc, [ip, #372]!	; 0x174

00011e9c <printf@plt>:
   11e9c:	add	ip, pc, #0, 12
   11ea0:	add	ip, ip, #20, 20	; 0x14000
   11ea4:	ldr	pc, [ip, #364]!	; 0x16c

00011ea8 <free@plt>:
   11ea8:	add	ip, pc, #0, 12
   11eac:	add	ip, ip, #20, 20	; 0x14000
   11eb0:	ldr	pc, [ip, #356]!	; 0x164

00011eb4 <realloc@plt>:
   11eb4:	add	ip, pc, #0, 12
   11eb8:	add	ip, ip, #20, 20	; 0x14000
   11ebc:	ldr	pc, [ip, #348]!	; 0x15c

00011ec0 <strcpy@plt>:
   11ec0:	add	ip, pc, #0, 12
   11ec4:	add	ip, ip, #20, 20	; 0x14000
   11ec8:	ldr	pc, [ip, #340]!	; 0x154

00011ecc <malloc@plt>:
   11ecc:	add	ip, pc, #0, 12
   11ed0:	add	ip, ip, #20, 20	; 0x14000
   11ed4:	ldr	pc, [ip, #332]!	; 0x14c

00011ed8 <__libc_start_main@plt>:
   11ed8:	add	ip, pc, #0, 12
   11edc:	add	ip, ip, #20, 20	; 0x14000
   11ee0:	ldr	pc, [ip, #324]!	; 0x144

00011ee4 <__gmon_start__@plt>:
   11ee4:	add	ip, pc, #0, 12
   11ee8:	add	ip, ip, #20, 20	; 0x14000
   11eec:	ldr	pc, [ip, #316]!	; 0x13c

00011ef0 <strlen@plt>:
   11ef0:	add	ip, pc, #0, 12
   11ef4:	add	ip, ip, #20, 20	; 0x14000
   11ef8:	ldr	pc, [ip, #308]!	; 0x134

00011efc <snprintf@plt>:
   11efc:	add	ip, pc, #0, 12
   11f00:	add	ip, ip, #20, 20	; 0x14000
   11f04:	ldr	pc, [ip, #300]!	; 0x12c

00011f08 <__isoc99_sscanf@plt>:
   11f08:	add	ip, pc, #0, 12
   11f0c:	add	ip, ip, #20, 20	; 0x14000
   11f10:	ldr	pc, [ip, #292]!	; 0x124

00011f14 <abort@plt>:
   11f14:	add	ip, pc, #0, 12
   11f18:	add	ip, ip, #20, 20	; 0x14000
   11f1c:	ldr	pc, [ip, #284]!	; 0x11c

Disassembly of section .text:

00011f20 <_start@@Base>:
   11f20:	mov	fp, #0
   11f24:	mov	lr, #0
   11f28:	pop	{r1}		; (ldr r1, [sp], #4)
   11f2c:	mov	r2, sp
   11f30:	push	{r2}		; (str r2, [sp, #-4]!)
   11f34:	push	{r0}		; (str r0, [sp, #-4]!)
   11f38:	ldr	ip, [pc, #16]	; 11f50 <_start@@Base+0x30>
   11f3c:	push	{ip}		; (str ip, [sp, #-4]!)
   11f40:	ldr	r0, [pc, #12]	; 11f54 <_start@@Base+0x34>
   11f44:	ldr	r3, [pc, #12]	; 11f58 <_start@@Base+0x38>
   11f48:	bl	11ed8 <__libc_start_main@plt>
   11f4c:	bl	11f14 <abort@plt>
   11f50:			; <UNDEFINED> instruction: 0x000154b4
   11f54:	andeq	r2, r1, r0, lsl r0
   11f58:	andeq	r5, r1, r4, asr r4
   11f5c:	ldr	r3, [pc, #20]	; 11f78 <_start@@Base+0x58>
   11f60:	ldr	r2, [pc, #20]	; 11f7c <_start@@Base+0x5c>
   11f64:	add	r3, pc, r3
   11f68:	ldr	r2, [r3, r2]
   11f6c:	cmp	r2, #0
   11f70:	bxeq	lr
   11f74:	b	11ee4 <__gmon_start__@plt>
   11f78:	muleq	r1, r4, r0
   11f7c:	andeq	r0, r0, ip, lsr r0
   11f80:	ldr	r0, [pc, #24]	; 11fa0 <_start@@Base+0x80>
   11f84:	ldr	r3, [pc, #24]	; 11fa4 <_start@@Base+0x84>
   11f88:	cmp	r3, r0
   11f8c:	bxeq	lr
   11f90:	ldr	r3, [pc, #16]	; 11fa8 <_start@@Base+0x88>
   11f94:	cmp	r3, #0
   11f98:	bxeq	lr
   11f9c:	bx	r3
   11fa0:	andeq	r6, r2, r8, asr #32
   11fa4:	andeq	r6, r2, r8, asr #32
   11fa8:	andeq	r0, r0, r0
   11fac:	ldr	r0, [pc, #36]	; 11fd8 <_start@@Base+0xb8>
   11fb0:	ldr	r1, [pc, #36]	; 11fdc <_start@@Base+0xbc>
   11fb4:	sub	r1, r1, r0
   11fb8:	asr	r1, r1, #2
   11fbc:	add	r1, r1, r1, lsr #31
   11fc0:	asrs	r1, r1, #1
   11fc4:	bxeq	lr
   11fc8:	ldr	r3, [pc, #16]	; 11fe0 <_start@@Base+0xc0>
   11fcc:	cmp	r3, #0
   11fd0:	bxeq	lr
   11fd4:	bx	r3
   11fd8:	andeq	r6, r2, r8, asr #32
   11fdc:	andeq	r6, r2, r8, asr #32
   11fe0:	andeq	r0, r0, r0
   11fe4:	push	{r4, lr}
   11fe8:	ldr	r4, [pc, #24]	; 12008 <_start@@Base+0xe8>
   11fec:	ldrb	r3, [r4]
   11ff0:	cmp	r3, #0
   11ff4:	popne	{r4, pc}
   11ff8:	bl	11f80 <_start@@Base+0x60>
   11ffc:	mov	r3, #1
   12000:	strb	r3, [r4]
   12004:	pop	{r4, pc}
   12008:	andeq	r6, r2, r8, asr #32
   1200c:	b	11fac <_start@@Base+0x8c>

00012010 <main@@Base>:
   12010:	push	{fp, lr}
   12014:	mov	fp, sp
   12018:	bl	1273c <table_get_major_version@@Base>
   1201c:	mov	r1, r0
   12020:	ldr	r0, [pc, #72]	; 12070 <main@@Base+0x60>
   12024:	add	r0, pc, r0
   12028:	bl	11e9c <printf@plt>
   1202c:	bl	12744 <table_get_minor_version@@Base>
   12030:	mov	r1, r0
   12034:	ldr	r0, [pc, #56]	; 12074 <main@@Base+0x64>
   12038:	add	r0, pc, r0
   1203c:	bl	11e9c <printf@plt>
   12040:	bl	1274c <table_get_patch_version@@Base>
   12044:	mov	r1, r0
   12048:	ldr	r0, [pc, #40]	; 12078 <main@@Base+0x68>
   1204c:	add	r0, pc, r0
   12050:	bl	11e9c <printf@plt>
   12054:	bl	12754 <table_get_version@@Base>
   12058:	mov	r1, r0
   1205c:	ldr	r0, [pc, #24]	; 1207c <main@@Base+0x6c>
   12060:	add	r0, pc, r0
   12064:	bl	11e9c <printf@plt>
   12068:	mov	r0, #0
   1206c:	pop	{fp, pc}
   12070:	muleq	r0, r8, r4
   12074:	muleq	r0, sp, r4
   12078:	andeq	r3, r0, r2, lsr #9
   1207c:	andeq	r3, r0, r7, lsr #9

00012080 <table_new@@Base>:
   12080:	push	{fp, lr}
   12084:	mov	fp, sp
   12088:	mov	r0, #56	; 0x38
   1208c:	bl	11ecc <malloc@plt>
   12090:	vmov.i32	q8, #0	; 0x00000000
   12094:	mov	r1, #0
   12098:	mov	r2, #10
   1209c:	mov	r3, #20
   120a0:	str	r1, [r0]
   120a4:	stmib	r0, {r1, r2}
   120a8:	str	r1, [r0, #12]
   120ac:	str	r1, [r0, #16]
   120b0:	str	r1, [r0, #20]
   120b4:	str	r3, [r0, #24]
   120b8:	str	r1, [r0, #28]
   120bc:	str	r2, [r0, #48]	; 0x30
   120c0:	str	r1, [r0, #52]	; 0x34
   120c4:	add	r1, r0, #32
   120c8:	vst1.32	{d16-d17}, [r1]
   120cc:	pop	{fp, pc}

000120d0 <table_init@@Base>:
   120d0:	vmov.i32	q8, #0	; 0x00000000
   120d4:	mov	r1, #0
   120d8:	mov	r2, #10
   120dc:	mov	r3, #20
   120e0:	str	r1, [r0]
   120e4:	stmib	r0, {r1, r2}
   120e8:	str	r1, [r0, #12]
   120ec:	str	r1, [r0, #16]
   120f0:	str	r1, [r0, #20]
   120f4:	str	r3, [r0, #24]
   120f8:	str	r1, [r0, #28]
   120fc:	str	r2, [r0, #48]	; 0x30
   12100:	str	r1, [r0, #52]	; 0x34
   12104:	add	r0, r0, #32
   12108:	vst1.32	{d16-d17}, [r0]
   1210c:	bx	lr

00012110 <table_delete@@Base>:
   12110:	push	{r4, sl, fp, lr}
   12114:	add	fp, sp, #8
   12118:	mov	r4, r0
   1211c:	bl	1212c <table_destroy@@Base>
   12120:	mov	r0, r4
   12124:	pop	{r4, sl, fp, lr}
   12128:	b	11ea8 <free@plt>

0001212c <table_destroy@@Base>:
   1212c:	cmp	r0, #0
   12130:	bxeq	lr
   12134:	push	{r4, r5, r6, sl, fp, lr}
   12138:	add	fp, sp, #16
   1213c:	mvn	r1, #0
   12140:	mvn	r2, #0
   12144:	mov	r3, #64	; 0x40
   12148:	mov	r4, r0
   1214c:	bl	129c4 <table_notify@@Base>
   12150:	mov	r0, r4
   12154:	bl	13860 <table_get_row_length@@Base>
   12158:	cmp	r0, #1
   1215c:	blt	12180 <table_destroy@@Base+0x54>
   12160:	mov	r5, r0
   12164:	mov	r6, #0
   12168:	mov	r0, r4
   1216c:	mov	r1, r6
   12170:	bl	13804 <table_row_destroy@@Base>
   12174:	add	r6, r6, #1
   12178:	cmp	r5, r6
   1217c:	bne	12168 <table_destroy@@Base+0x3c>
   12180:	ldr	r0, [r4, #16]
   12184:	cmp	r0, #0
   12188:	beq	12190 <table_destroy@@Base+0x64>
   1218c:	bl	11ea8 <free@plt>
   12190:	mov	r0, r4
   12194:	bl	12ac0 <table_get_column_length@@Base>
   12198:	cmp	r0, #1
   1219c:	blt	121c0 <table_destroy@@Base+0x94>
   121a0:	mov	r5, r0
   121a4:	mov	r6, #0
   121a8:	mov	r0, r4
   121ac:	mov	r1, r6
   121b0:	bl	12aa8 <table_column_destroy@@Base>
   121b4:	add	r6, r6, #1
   121b8:	cmp	r5, r6
   121bc:	bne	121a8 <table_destroy@@Base+0x7c>
   121c0:	ldr	r0, [r4]
   121c4:	cmp	r0, #0
   121c8:	beq	121d0 <table_destroy@@Base+0xa4>
   121cc:	bl	11ea8 <free@plt>
   121d0:	ldr	r0, [r4, #36]	; 0x24
   121d4:	cmp	r0, #0
   121d8:	beq	121e0 <table_destroy@@Base+0xb4>
   121dc:	bl	11ea8 <free@plt>
   121e0:	ldr	r0, [r4, #40]	; 0x28
   121e4:	cmp	r0, #0
   121e8:	beq	121f0 <table_destroy@@Base+0xc4>
   121ec:	bl	11ea8 <free@plt>
   121f0:	ldr	r0, [r4, #44]	; 0x2c
   121f4:	cmp	r0, #0
   121f8:	pop	{r4, r5, r6, sl, fp, lr}
   121fc:	beq	12204 <table_destroy@@Base+0xd8>
   12200:	b	11ea8 <free@plt>
   12204:	bx	lr

00012208 <table_dupe@@Base>:
   12208:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1220c:	add	fp, sp, #28
   12210:	sub	sp, sp, #12
   12214:	mov	r4, r0
   12218:	bl	13860 <table_get_row_length@@Base>
   1221c:	mov	r8, r0
   12220:	mov	r0, r4
   12224:	bl	12ac0 <table_get_column_length@@Base>
   12228:	mov	r6, r0
   1222c:	mov	r0, #56	; 0x38
   12230:	bl	11ecc <malloc@plt>
   12234:	vmov.i32	q8, #0	; 0x00000000
   12238:	mov	sl, r0
   1223c:	mov	r5, #0
   12240:	mov	r0, #10
   12244:	mov	r1, #20
   12248:	cmp	r6, #1
   1224c:	str	r5, [sl]
   12250:	str	r5, [sl, #4]
   12254:	str	r0, [sl, #8]
   12258:	str	r5, [sl, #12]
   1225c:	str	r5, [sl, #16]
   12260:	str	r5, [sl, #20]
   12264:	str	r1, [sl, #24]
   12268:	str	r5, [sl, #28]
   1226c:	str	r0, [sl, #48]	; 0x30
   12270:	add	r0, sl, #32
   12274:	str	r5, [sl, #52]	; 0x34
   12278:	vst1.32	{d16-d17}, [r0]
   1227c:	blt	122b8 <table_dupe@@Base+0xb0>
   12280:	mov	r0, r4
   12284:	mov	r1, r5
   12288:	bl	12b28 <table_get_column_name@@Base>
   1228c:	mov	r7, r0
   12290:	mov	r0, r4
   12294:	mov	r1, r5
   12298:	bl	12b38 <table_get_column_data_type@@Base>
   1229c:	mov	r2, r0
   122a0:	mov	r0, sl
   122a4:	mov	r1, r7
   122a8:	bl	12b4c <table_add_column@@Base>
   122ac:	add	r5, r5, #1
   122b0:	cmp	r6, r5
   122b4:	bne	12280 <table_dupe@@Base+0x78>
   122b8:	cmp	r8, #1
   122bc:	blt	12730 <table_dupe@@Base+0x528>
   122c0:	mov	r5, #0
   122c4:	add	r9, sp, #8
   122c8:	b	122d8 <table_dupe@@Base+0xd0>
   122cc:	add	r5, r5, #1
   122d0:	cmp	r5, r8
   122d4:	beq	12730 <table_dupe@@Base+0x528>
   122d8:	mov	r0, sl
   122dc:	bl	13868 <table_add_row@@Base>
   122e0:	cmp	r6, #1
   122e4:	blt	122cc <table_dupe@@Base+0xc4>
   122e8:	mov	r7, #0
   122ec:	b	12324 <table_dupe@@Base+0x11c>
   122f0:	mov	r0, r4
   122f4:	mov	r1, r5
   122f8:	mov	r2, r7
   122fc:	bl	137c0 <table_get_ptr@@Base>
   12300:	str	r0, [sp, #8]
   12304:	mov	r0, sl
   12308:	mov	r1, r5
   1230c:	mov	r2, r7
   12310:	mov	r3, r9
   12314:	bl	148f4 <table_set_ptr@@Base>
   12318:	add	r7, r7, #1
   1231c:	cmp	r6, r7
   12320:	beq	122cc <table_dupe@@Base+0xc4>
   12324:	mov	r0, r4
   12328:	mov	r1, r7
   1232c:	bl	12b38 <table_get_column_data_type@@Base>
   12330:	cmp	r0, #23
   12334:	bhi	12318 <table_dupe@@Base+0x110>
   12338:	add	r1, pc, #4
   1233c:	ldr	r0, [r1, r0, lsl #2]
   12340:	add	pc, r1, r0
   12344:	andeq	r0, r0, r0, rrx
   12348:	andeq	r0, r0, r8, lsl #1
   1234c:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   12350:	ldrdeq	r0, [r0], -r8
   12354:	andeq	r0, r0, r0, lsl #2
   12358:	andeq	r0, r0, r8, lsr #2
   1235c:	andeq	r0, r0, r0, asr r1
   12360:	andeq	r0, r0, r8, ror r1
   12364:	andeq	r0, r0, r0, lsr #3
   12368:	andeq	r0, r0, r8, asr #3
   1236c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   12370:	andeq	r0, r0, r8, lsl r2
   12374:	andeq	r0, r0, r0, asr #4
   12378:	andeq	r0, r0, r8, ror #4
   1237c:	muleq	r0, r0, r2
   12380:			; <UNDEFINED> instruction: 0x000002b8
   12384:	andeq	r0, r0, r0, ror #5
   12388:	andeq	r0, r0, r4, lsl #6
   1238c:	andeq	r0, r0, r8, lsr #6
   12390:	andeq	r0, r0, ip, asr #6
   12394:	andeq	r0, r0, r4, ror r3
   12398:	muleq	r0, ip, r3
   1239c:	andeq	r0, r0, r4, asr #7
   123a0:			; <UNDEFINED> instruction: 0xffffffac
   123a4:	mov	r0, r4
   123a8:	mov	r1, r5
   123ac:	mov	r2, r7
   123b0:	bl	135b4 <table_get_int@@Base>
   123b4:	mov	r3, r0
   123b8:	mov	r0, sl
   123bc:	mov	r1, r5
   123c0:	mov	r2, r7
   123c4:	bl	13e18 <table_set_int@@Base>
   123c8:	b	12318 <table_dupe@@Base+0x110>
   123cc:	mov	r0, r4
   123d0:	mov	r1, r5
   123d4:	mov	r2, r7
   123d8:	bl	135cc <table_get_uint@@Base>
   123dc:	mov	r3, r0
   123e0:	mov	r0, sl
   123e4:	mov	r1, r5
   123e8:	mov	r2, r7
   123ec:	bl	13e98 <table_set_uint@@Base>
   123f0:	b	12318 <table_dupe@@Base+0x110>
   123f4:	mov	r0, r4
   123f8:	mov	r1, r5
   123fc:	mov	r2, r7
   12400:	bl	135e4 <table_get_int8@@Base>
   12404:	mov	r3, r0
   12408:	mov	r0, sl
   1240c:	mov	r1, r5
   12410:	mov	r2, r7
   12414:	bl	13f18 <table_set_int8@@Base>
   12418:	b	12318 <table_dupe@@Base+0x110>
   1241c:	mov	r0, r4
   12420:	mov	r1, r5
   12424:	mov	r2, r7
   12428:	bl	135fc <table_get_uint8@@Base>
   1242c:	mov	r3, r0
   12430:	mov	r0, sl
   12434:	mov	r1, r5
   12438:	mov	r2, r7
   1243c:	bl	13f98 <table_set_uint8@@Base>
   12440:	b	12318 <table_dupe@@Base+0x110>
   12444:	mov	r0, r4
   12448:	mov	r1, r5
   1244c:	mov	r2, r7
   12450:	bl	13614 <table_get_int16@@Base>
   12454:	mov	r3, r0
   12458:	mov	r0, sl
   1245c:	mov	r1, r5
   12460:	mov	r2, r7
   12464:	bl	14018 <table_set_int16@@Base>
   12468:	b	12318 <table_dupe@@Base+0x110>
   1246c:	mov	r0, r4
   12470:	mov	r1, r5
   12474:	mov	r2, r7
   12478:	bl	1362c <table_get_uint16@@Base>
   1247c:	mov	r3, r0
   12480:	mov	r0, sl
   12484:	mov	r1, r5
   12488:	mov	r2, r7
   1248c:	bl	14098 <table_set_uint16@@Base>
   12490:	b	12318 <table_dupe@@Base+0x110>
   12494:	mov	r0, r4
   12498:	mov	r1, r5
   1249c:	mov	r2, r7
   124a0:	bl	13644 <table_get_int32@@Base>
   124a4:	mov	r3, r0
   124a8:	mov	r0, sl
   124ac:	mov	r1, r5
   124b0:	mov	r2, r7
   124b4:	bl	14118 <table_set_int32@@Base>
   124b8:	b	12318 <table_dupe@@Base+0x110>
   124bc:	mov	r0, r4
   124c0:	mov	r1, r5
   124c4:	mov	r2, r7
   124c8:	bl	1365c <table_get_uint32@@Base>
   124cc:	mov	r3, r0
   124d0:	mov	r0, sl
   124d4:	mov	r1, r5
   124d8:	mov	r2, r7
   124dc:	bl	14198 <table_set_uint32@@Base>
   124e0:	b	12318 <table_dupe@@Base+0x110>
   124e4:	mov	r0, r4
   124e8:	mov	r1, r5
   124ec:	mov	r2, r7
   124f0:	bl	13674 <table_get_int64@@Base>
   124f4:	stm	sp, {r0, r1}
   124f8:	mov	r0, sl
   124fc:	mov	r1, r5
   12500:	mov	r2, r7
   12504:	bl	14218 <table_set_int64@@Base>
   12508:	b	12318 <table_dupe@@Base+0x110>
   1250c:	mov	r0, r4
   12510:	mov	r1, r5
   12514:	mov	r2, r7
   12518:	bl	1368c <table_get_uint64@@Base>
   1251c:	stm	sp, {r0, r1}
   12520:	mov	r0, sl
   12524:	mov	r1, r5
   12528:	mov	r2, r7
   1252c:	bl	142a0 <table_set_uint64@@Base>
   12530:	b	12318 <table_dupe@@Base+0x110>
   12534:	mov	r0, r4
   12538:	mov	r1, r5
   1253c:	mov	r2, r7
   12540:	bl	136a4 <table_get_short@@Base>
   12544:	mov	r3, r0
   12548:	mov	r0, sl
   1254c:	mov	r1, r5
   12550:	mov	r2, r7
   12554:	bl	14328 <table_set_short@@Base>
   12558:	b	12318 <table_dupe@@Base+0x110>
   1255c:	mov	r0, r4
   12560:	mov	r1, r5
   12564:	mov	r2, r7
   12568:	bl	136bc <table_get_ushort@@Base>
   1256c:	mov	r3, r0
   12570:	mov	r0, sl
   12574:	mov	r1, r5
   12578:	mov	r2, r7
   1257c:	bl	143a8 <table_set_ushort@@Base>
   12580:	b	12318 <table_dupe@@Base+0x110>
   12584:	mov	r0, r4
   12588:	mov	r1, r5
   1258c:	mov	r2, r7
   12590:	bl	136d4 <table_get_long@@Base>
   12594:	mov	r3, r0
   12598:	mov	r0, sl
   1259c:	mov	r1, r5
   125a0:	mov	r2, r7
   125a4:	bl	14428 <table_set_long@@Base>
   125a8:	b	12318 <table_dupe@@Base+0x110>
   125ac:	mov	r0, r4
   125b0:	mov	r1, r5
   125b4:	mov	r2, r7
   125b8:	bl	136ec <table_get_ulong@@Base>
   125bc:	mov	r3, r0
   125c0:	mov	r0, sl
   125c4:	mov	r1, r5
   125c8:	mov	r2, r7
   125cc:	bl	144a8 <table_set_ulong@@Base>
   125d0:	b	12318 <table_dupe@@Base+0x110>
   125d4:	mov	r0, r4
   125d8:	mov	r1, r5
   125dc:	mov	r2, r7
   125e0:	bl	13704 <table_get_llong@@Base>
   125e4:	stm	sp, {r0, r1}
   125e8:	mov	r0, sl
   125ec:	mov	r1, r5
   125f0:	mov	r2, r7
   125f4:	bl	14528 <table_set_llong@@Base>
   125f8:	b	12318 <table_dupe@@Base+0x110>
   125fc:	mov	r0, r4
   12600:	mov	r1, r5
   12604:	mov	r2, r7
   12608:	bl	1371c <table_get_ullong@@Base>
   1260c:	stm	sp, {r0, r1}
   12610:	mov	r0, sl
   12614:	mov	r1, r5
   12618:	mov	r2, r7
   1261c:	bl	145b0 <table_set_ullong@@Base>
   12620:	b	12318 <table_dupe@@Base+0x110>
   12624:	mov	r0, r4
   12628:	mov	r1, r5
   1262c:	mov	r2, r7
   12630:	bl	13734 <table_get_float@@Base>
   12634:	mov	r0, sl
   12638:	mov	r1, r5
   1263c:	mov	r2, r7
   12640:	bl	14638 <table_set_float@@Base>
   12644:	b	12318 <table_dupe@@Base+0x110>
   12648:	mov	r0, r4
   1264c:	mov	r1, r5
   12650:	mov	r2, r7
   12654:	bl	1374c <table_get_double@@Base>
   12658:	mov	r0, sl
   1265c:	mov	r1, r5
   12660:	mov	r2, r7
   12664:	bl	146c4 <table_set_double@@Base>
   12668:	b	12318 <table_dupe@@Base+0x110>
   1266c:	mov	r0, r4
   12670:	mov	r1, r5
   12674:	mov	r2, r7
   12678:	bl	13764 <table_get_ldouble@@Base>
   1267c:	mov	r0, sl
   12680:	mov	r1, r5
   12684:	mov	r2, r7
   12688:	bl	1474c <table_set_ldouble@@Base>
   1268c:	b	12318 <table_dupe@@Base+0x110>
   12690:	mov	r0, r4
   12694:	mov	r1, r5
   12698:	mov	r2, r7
   1269c:	bl	1377c <table_get_char@@Base>
   126a0:	mov	r3, r0
   126a4:	mov	r0, sl
   126a8:	mov	r1, r5
   126ac:	mov	r2, r7
   126b0:	bl	147f4 <table_set_char@@Base>
   126b4:	b	12318 <table_dupe@@Base+0x110>
   126b8:	mov	r0, r4
   126bc:	mov	r1, r5
   126c0:	mov	r2, r7
   126c4:	bl	13794 <table_get_uchar@@Base>
   126c8:	mov	r3, r0
   126cc:	mov	r0, sl
   126d0:	mov	r1, r5
   126d4:	mov	r2, r7
   126d8:	bl	14874 <table_set_uchar@@Base>
   126dc:	b	12318 <table_dupe@@Base+0x110>
   126e0:	mov	r0, r4
   126e4:	mov	r1, r5
   126e8:	mov	r2, r7
   126ec:	bl	137ac <table_get_string@@Base>
   126f0:	mov	r3, r0
   126f4:	mov	r0, sl
   126f8:	mov	r1, r5
   126fc:	mov	r2, r7
   12700:	bl	147d4 <table_set_string@@Base>
   12704:	b	12318 <table_dupe@@Base+0x110>
   12708:	mov	r0, r4
   1270c:	mov	r1, r5
   12710:	mov	r2, r7
   12714:	bl	1359c <table_get_bool@@Base>
   12718:	mov	r3, r0
   1271c:	mov	r0, sl
   12720:	mov	r1, r5
   12724:	mov	r2, r7
   12728:	bl	13d98 <table_set_bool@@Base>
   1272c:	b	12318 <table_dupe@@Base+0x110>
   12730:	mov	r0, sl
   12734:	sub	sp, fp, #28
   12738:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001273c <table_get_major_version@@Base>:
   1273c:	mov	r0, #0
   12740:	bx	lr

00012744 <table_get_minor_version@@Base>:
   12744:	mov	r0, #0
   12748:	bx	lr

0001274c <table_get_patch_version@@Base>:
   1274c:	mov	r0, #0
   12750:	bx	lr

00012754 <table_get_version@@Base>:
   12754:	ldr	r0, [pc, #4]	; 12760 <table_get_version@@Base+0xc>
   12758:	add	r0, pc, r0
   1275c:	bx	lr
   12760:	andeq	r2, r0, lr, lsr #27

00012764 <table_get_callback_length@@Base>:
   12764:	ldr	r0, [r0, #32]
   12768:	bx	lr

0001276c <table_register_callback@@Base>:
   1276c:	push	{r4, r5, r6, r7, fp, lr}
   12770:	add	fp, sp, #16
   12774:	mov	r5, r0
   12778:	ldr	r0, [r0, #32]
   1277c:	mov	r4, r3
   12780:	mov	r6, r2
   12784:	mov	r7, r1
   12788:	cmp	r0, #1
   1278c:	blt	127e0 <table_register_callback@@Base+0x74>
   12790:	ldr	r2, [r5, #36]	; 0x24
   12794:	mov	r1, #0
   12798:	b	127a8 <table_register_callback@@Base+0x3c>
   1279c:	add	r1, r1, #1
   127a0:	cmp	r0, r1
   127a4:	beq	127e0 <table_register_callback@@Base+0x74>
   127a8:	ldr	r3, [r2, r1, lsl #2]
   127ac:	cmp	r3, r7
   127b0:	bne	1279c <table_register_callback@@Base+0x30>
   127b4:	ldr	r3, [r5, #40]	; 0x28
   127b8:	ldr	r3, [r3, r1, lsl #2]
   127bc:	cmp	r3, r6
   127c0:	bne	1279c <table_register_callback@@Base+0x30>
   127c4:	cmp	r1, #0
   127c8:	beq	127e0 <table_register_callback@@Base+0x74>
   127cc:	ldr	r0, [r5, #44]	; 0x2c
   127d0:	ldr	r2, [r0, r1, lsl #2]
   127d4:	orr	r2, r2, r4
   127d8:	str	r2, [r0, r1, lsl #2]
   127dc:	pop	{r4, r5, r6, r7, fp, pc}
   127e0:	ldr	r1, [r5, #48]	; 0x30
   127e4:	udiv	r2, r0, r1
   127e8:	mls	r2, r2, r1, r0
   127ec:	cmp	r2, #0
   127f0:	bne	1283c <table_register_callback@@Base+0xd0>
   127f4:	ldr	r2, [r5, #52]	; 0x34
   127f8:	ldr	r0, [r5, #36]	; 0x24
   127fc:	add	r1, r2, r1
   12800:	str	r1, [r5, #52]	; 0x34
   12804:	lsl	r1, r1, #2
   12808:	bl	11eb4 <realloc@plt>
   1280c:	str	r0, [r5, #36]	; 0x24
   12810:	ldr	r1, [r5, #52]	; 0x34
   12814:	ldr	r0, [r5, #40]	; 0x28
   12818:	lsl	r1, r1, #2
   1281c:	bl	11eb4 <realloc@plt>
   12820:	str	r0, [r5, #40]	; 0x28
   12824:	ldr	r1, [r5, #52]	; 0x34
   12828:	ldr	r0, [r5, #44]	; 0x2c
   1282c:	lsl	r1, r1, #2
   12830:	bl	11eb4 <realloc@plt>
   12834:	str	r0, [r5, #44]	; 0x2c
   12838:	ldr	r0, [r5, #32]
   1283c:	ldr	r1, [r5, #36]	; 0x24
   12840:	str	r7, [r1, r0, lsl #2]
   12844:	ldr	r1, [r5, #40]	; 0x28
   12848:	str	r6, [r1, r0, lsl #2]
   1284c:	ldr	r1, [r5, #44]	; 0x2c
   12850:	str	r4, [r1, r0, lsl #2]
   12854:	ldr	r0, [r5, #32]
   12858:	add	r0, r0, #1
   1285c:	str	r0, [r5, #32]
   12860:	pop	{r4, r5, r6, r7, fp, pc}

00012864 <table_unregister_callback@@Base>:
   12864:	push	{r4, r5, r6, sl, fp, lr}
   12868:	add	fp, sp, #16
   1286c:	ldr	r4, [r0, #32]
   12870:	cmp	r4, #1
   12874:	blt	129c0 <table_unregister_callback@@Base+0x15c>
   12878:	ldr	r3, [r0, #36]	; 0x24
   1287c:	mov	r6, r0
   12880:	mov	r0, #0
   12884:	b	12894 <table_unregister_callback@@Base+0x30>
   12888:	add	r0, r0, #1
   1288c:	cmp	r0, r4
   12890:	beq	129c0 <table_unregister_callback@@Base+0x15c>
   12894:	ldr	r5, [r3, r0, lsl #2]
   12898:	cmp	r5, r1
   1289c:	bne	12888 <table_unregister_callback@@Base+0x24>
   128a0:	ldr	r5, [r6, #40]	; 0x28
   128a4:	ldr	r5, [r5, r0, lsl #2]
   128a8:	cmp	r5, r2
   128ac:	bne	12888 <table_unregister_callback@@Base+0x24>
   128b0:	sub	r1, r4, #1
   128b4:	cmp	r0, r1
   128b8:	bge	1293c <table_unregister_callback@@Base+0xd8>
   128bc:	add	r2, r0, #1
   128c0:	ldr	r1, [r3, r2, lsl #2]
   128c4:	str	r1, [r3, r0, lsl #2]
   128c8:	ldr	r1, [r6, #40]	; 0x28
   128cc:	ldr	r3, [r1, r2, lsl #2]
   128d0:	str	r3, [r1, r0, lsl #2]
   128d4:	ldr	r1, [r6, #44]	; 0x2c
   128d8:	ldr	r3, [r1, r2, lsl #2]
   128dc:	str	r3, [r1, r0, lsl #2]
   128e0:	ldr	r1, [r6, #32]
   128e4:	sub	r1, r1, #1
   128e8:	cmp	r2, r1
   128ec:	bge	1293c <table_unregister_callback@@Base+0xd8>
   128f0:	ldr	r1, [r6, #36]	; 0x24
   128f4:	add	r1, r1, r0, lsl #2
   128f8:	ldr	r2, [r1, #8]
   128fc:	str	r2, [r1, #4]
   12900:	ldr	r1, [r6, #40]	; 0x28
   12904:	add	r1, r1, r0, lsl #2
   12908:	ldr	r2, [r1, #8]
   1290c:	str	r2, [r1, #4]
   12910:	ldr	r1, [r6, #44]	; 0x2c
   12914:	add	r1, r1, r0, lsl #2
   12918:	ldr	r2, [r1, #8]
   1291c:	str	r2, [r1, #4]
   12920:	add	r2, r0, #1
   12924:	add	r0, r0, #2
   12928:	ldr	r1, [r6, #32]
   1292c:	sub	r1, r1, #1
   12930:	cmp	r0, r1
   12934:	mov	r0, r2
   12938:	blt	128f0 <table_unregister_callback@@Base+0x8c>
   1293c:	str	r1, [r6, #32]
   12940:	ldr	r2, [r6, #48]	; 0x30
   12944:	udiv	r0, r1, r2
   12948:	mls	r0, r0, r2, r1
   1294c:	cmp	r0, #0
   12950:	popne	{r4, r5, r6, sl, fp, pc}
   12954:	ldr	r1, [r6, #52]	; 0x34
   12958:	ldr	r0, [r6, #36]	; 0x24
   1295c:	subs	r1, r1, r2
   12960:	str	r1, [r6, #52]	; 0x34
   12964:	beq	1299c <table_unregister_callback@@Base+0x138>
   12968:	lsl	r1, r1, #2
   1296c:	bl	11eb4 <realloc@plt>
   12970:	str	r0, [r6, #36]	; 0x24
   12974:	ldr	r1, [r6, #52]	; 0x34
   12978:	ldr	r0, [r6, #40]	; 0x28
   1297c:	lsl	r1, r1, #2
   12980:	bl	11eb4 <realloc@plt>
   12984:	str	r0, [r6, #40]	; 0x28
   12988:	ldr	r1, [r6, #52]	; 0x34
   1298c:	ldr	r0, [r6, #44]	; 0x2c
   12990:	lsl	r1, r1, #2
   12994:	bl	11eb4 <realloc@plt>
   12998:	b	129bc <table_unregister_callback@@Base+0x158>
   1299c:	bl	11ea8 <free@plt>
   129a0:	ldr	r0, [r6, #40]	; 0x28
   129a4:	bl	11ea8 <free@plt>
   129a8:	ldr	r0, [r6, #44]	; 0x2c
   129ac:	bl	11ea8 <free@plt>
   129b0:	mov	r0, #0
   129b4:	str	r0, [r6, #36]	; 0x24
   129b8:	str	r0, [r6, #40]	; 0x28
   129bc:	str	r0, [r6, #44]	; 0x2c
   129c0:	pop	{r4, r5, r6, sl, fp, pc}

000129c4 <table_notify@@Base>:
   129c4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   129c8:	add	fp, sp, #24
   129cc:	sub	sp, sp, #8
   129d0:	mov	r7, r0
   129d4:	ldr	r0, [r0, #32]
   129d8:	cmp	r0, #1
   129dc:	blt	12a40 <table_notify@@Base+0x7c>
   129e0:	mov	r4, r3
   129e4:	mov	r8, r2
   129e8:	mov	r9, r1
   129ec:	mov	r5, #0
   129f0:	b	12a00 <table_notify@@Base+0x3c>
   129f4:	add	r5, r5, #1
   129f8:	cmp	r5, r0
   129fc:	bge	12a40 <table_notify@@Base+0x7c>
   12a00:	ldr	r1, [r7, #44]	; 0x2c
   12a04:	ldr	r1, [r1, r5, lsl #2]
   12a08:	tst	r1, r4
   12a0c:	beq	129f4 <table_notify@@Base+0x30>
   12a10:	ldr	r0, [r7, #36]	; 0x24
   12a14:	ldr	r1, [r7, #40]	; 0x28
   12a18:	mov	r2, r8
   12a1c:	mov	r3, r4
   12a20:	ldr	r6, [r0, r5, lsl #2]
   12a24:	ldr	r0, [r1, r5, lsl #2]
   12a28:	mov	r1, r9
   12a2c:	str	r0, [sp]
   12a30:	mov	r0, r7
   12a34:	blx	r6
   12a38:	ldr	r0, [r7, #32]
   12a3c:	b	129f4 <table_notify@@Base+0x30>
   12a40:	sub	sp, fp, #24
   12a44:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012a48 <table_column_init@@Base>:
   12a48:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12a4c:	add	fp, sp, #24
   12a50:	ldr	r7, [r0]
   12a54:	mov	r0, r2
   12a58:	mov	r4, r3
   12a5c:	mov	r5, r2
   12a60:	mov	r6, r1
   12a64:	bl	11ef0 <strlen@plt>
   12a68:	add	r0, r0, #1
   12a6c:	bl	11ecc <malloc@plt>
   12a70:	ldr	r8, [fp, #8]
   12a74:	add	r6, r6, r6, lsl #1
   12a78:	cmp	r0, #0
   12a7c:	str	r0, [r7, r6, lsl #2]
   12a80:	beq	12a8c <table_column_init@@Base+0x44>
   12a84:	mov	r1, r5
   12a88:	bl	11ec0 <strcpy@plt>
   12a8c:	add	r0, r7, r6, lsl #2
   12a90:	stmib	r0, {r4, r8}
   12a94:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00012a98 <table_get_col_ptr@@Base>:
   12a98:	ldr	r0, [r0]
   12a9c:	add	r1, r1, r1, lsl #1
   12aa0:	add	r0, r0, r1, lsl #2
   12aa4:	bx	lr

00012aa8 <table_column_destroy@@Base>:
   12aa8:	ldr	r0, [r0]
   12aac:	add	r1, r1, r1, lsl #1
   12ab0:	ldr	r0, [r0, r1, lsl #2]
   12ab4:	cmp	r0, #0
   12ab8:	bxeq	lr
   12abc:	b	11ea8 <free@plt>

00012ac0 <table_get_column_length@@Base>:
   12ac0:	ldr	r0, [r0, #4]
   12ac4:	bx	lr

00012ac8 <table_get_column@@Base>:
   12ac8:	push	{r4, r5, r6, r7, fp, lr}
   12acc:	add	fp, sp, #16
   12ad0:	ldr	r6, [r0, #4]
   12ad4:	cmp	r6, #1
   12ad8:	blt	12b14 <table_get_column@@Base+0x4c>
   12adc:	ldr	r7, [r0]
   12ae0:	mov	r5, r1
   12ae4:	mov	r4, #0
   12ae8:	ldr	r0, [r7]
   12aec:	mov	r1, r5
   12af0:	bl	11e90 <strcmp@plt>
   12af4:	cmp	r0, #0
   12af8:	beq	12b18 <table_get_column@@Base+0x50>
   12afc:	add	r4, r4, #1
   12b00:	add	r7, r7, #12
   12b04:	cmp	r6, r4
   12b08:	bne	12ae8 <table_get_column@@Base+0x20>
   12b0c:	mov	r4, r6
   12b10:	b	12b18 <table_get_column@@Base+0x50>
   12b14:	mov	r4, #0
   12b18:	cmp	r4, r6
   12b1c:	mvneq	r4, #0
   12b20:	mov	r0, r4
   12b24:	pop	{r4, r5, r6, r7, fp, pc}

00012b28 <table_get_column_name@@Base>:
   12b28:	ldr	r0, [r0]
   12b2c:	add	r1, r1, r1, lsl #1
   12b30:	ldr	r0, [r0, r1, lsl #2]
   12b34:	bx	lr

00012b38 <table_get_column_data_type@@Base>:
   12b38:	ldr	r0, [r0]
   12b3c:	add	r1, r1, r1, lsl #1
   12b40:	add	r0, r0, r1, lsl #2
   12b44:	ldr	r0, [r0, #4]
   12b48:	bx	lr

00012b4c <table_add_column@@Base>:
   12b4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12b50:	add	fp, sp, #28
   12b54:	sub	sp, sp, #4
   12b58:	mov	r4, r0
   12b5c:	mov	r8, r1
   12b60:	ldr	r0, [r0, #4]
   12b64:	mov	r9, r2
   12b68:	ldr	r1, [r4, #8]
   12b6c:	udiv	r2, r0, r1
   12b70:	mls	r0, r2, r1, r0
   12b74:	cmp	r0, #0
   12b78:	bne	12be4 <table_add_column@@Base+0x98>
   12b7c:	ldr	r2, [r4, #12]
   12b80:	ldr	r0, [r4]
   12b84:	add	r1, r2, r1
   12b88:	str	r1, [r4, #12]
   12b8c:	add	r1, r1, r1, lsl #1
   12b90:	lsl	r1, r1, #2
   12b94:	bl	11eb4 <realloc@plt>
   12b98:	str	r0, [r4]
   12b9c:	mov	r0, r4
   12ba0:	bl	13860 <table_get_row_length@@Base>
   12ba4:	cmp	r0, #1
   12ba8:	blt	12be4 <table_add_column@@Base+0x98>
   12bac:	mov	r6, r0
   12bb0:	mov	r5, #0
   12bb4:	mov	r0, r4
   12bb8:	mov	r1, r5
   12bbc:	bl	137f8 <table_get_row_ptr@@Base>
   12bc0:	ldr	r1, [r4, #12]
   12bc4:	mov	r7, r0
   12bc8:	ldr	r0, [r0]
   12bcc:	lsl	r1, r1, #2
   12bd0:	bl	11eb4 <realloc@plt>
   12bd4:	add	r5, r5, #1
   12bd8:	str	r0, [r7]
   12bdc:	cmp	r6, r5
   12be0:	bne	12bb4 <table_add_column@@Base+0x68>
   12be4:	mov	r0, r4
   12be8:	bl	13860 <table_get_row_length@@Base>
   12bec:	ldr	r6, [r4, #4]
   12bf0:	mov	r7, r0
   12bf4:	mov	r0, r9
   12bf8:	bl	13568 <table_get_default_compare_function_for_data_type@@Base>
   12bfc:	ldr	r5, [r4]
   12c00:	mov	sl, r0
   12c04:	mov	r0, r8
   12c08:	bl	11ef0 <strlen@plt>
   12c0c:	add	r0, r0, #1
   12c10:	bl	11ecc <malloc@plt>
   12c14:	mov	r1, r8
   12c18:	add	r8, r6, r6, lsl #1
   12c1c:	cmp	r0, #0
   12c20:	str	r0, [r5, r8, lsl #2]
   12c24:	beq	12c2c <table_add_column@@Base+0xe0>
   12c28:	bl	11ec0 <strcpy@plt>
   12c2c:	add	r0, r5, r8, lsl #2
   12c30:	cmp	r7, #1
   12c34:	stmib	r0, {r9, sl}
   12c38:	blt	12c5c <table_add_column@@Base+0x110>
   12c3c:	mov	r5, #0
   12c40:	mov	r0, r4
   12c44:	mov	r1, r5
   12c48:	mov	r2, r6
   12c4c:	bl	14950 <table_cell_init@@Base>
   12c50:	add	r5, r5, #1
   12c54:	cmp	r7, r5
   12c58:	bne	12c40 <table_add_column@@Base+0xf4>
   12c5c:	ldr	r2, [r4, #4]
   12c60:	mov	r0, r4
   12c64:	mvn	r1, #0
   12c68:	mov	r3, #8
   12c6c:	bl	129c4 <table_notify@@Base>
   12c70:	ldr	r0, [r4, #4]
   12c74:	add	r1, r0, #1
   12c78:	str	r1, [r4, #4]
   12c7c:	sub	sp, fp, #28
   12c80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012c84 <table_remove_column@@Base>:
   12c84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c88:	add	fp, sp, #28
   12c8c:	sub	sp, sp, #12
   12c90:	mov	r5, r0
   12c94:	ldr	r0, [r0]
   12c98:	add	r6, r1, r1, lsl #1
   12c9c:	mov	r4, r1
   12ca0:	ldr	r0, [r0, r6, lsl #2]
   12ca4:	cmp	r0, #0
   12ca8:	beq	12cb0 <table_remove_column@@Base+0x2c>
   12cac:	bl	11ea8 <free@plt>
   12cb0:	ldr	r7, [r5, #4]
   12cb4:	sub	r8, r7, #1
   12cb8:	cmp	r8, r4
   12cbc:	ble	12cf0 <table_remove_column@@Base+0x6c>
   12cc0:	mvn	r0, r4
   12cc4:	lsl	r1, r6, #2
   12cc8:	add	r0, r0, r7
   12ccc:	ldr	r2, [r5]
   12cd0:	subs	r0, r0, #1
   12cd4:	add	r2, r2, r1
   12cd8:	add	r1, r1, #12
   12cdc:	vldr	d16, [r2, #12]
   12ce0:	ldr	r3, [r2, #20]
   12ce4:	str	r3, [r2, #8]
   12ce8:	vstr	d16, [r2]
   12cec:	bne	12ccc <table_remove_column@@Base+0x48>
   12cf0:	mov	r0, r5
   12cf4:	bl	13860 <table_get_row_length@@Base>
   12cf8:	cmp	r0, #1
   12cfc:	blt	12dbc <table_remove_column@@Base+0x138>
   12d00:	mov	r9, r0
   12d04:	mvn	r0, r4
   12d08:	sub	sl, r7, #2
   12d0c:	add	r0, r7, r0
   12d10:	mov	r7, #0
   12d14:	and	r0, r0, #1
   12d18:	str	r0, [sp, #8]
   12d1c:	add	r0, r4, #1
   12d20:	str	r0, [sp, #4]
   12d24:	b	12d34 <table_remove_column@@Base+0xb0>
   12d28:	add	r7, r7, #1
   12d2c:	cmp	r7, r9
   12d30:	beq	12dbc <table_remove_column@@Base+0x138>
   12d34:	mov	r0, r5
   12d38:	mov	r1, r7
   12d3c:	mov	r2, r4
   12d40:	bl	1498c <table_cell_destroy@@Base>
   12d44:	mov	r0, r5
   12d48:	mov	r1, r7
   12d4c:	bl	137f8 <table_get_row_ptr@@Base>
   12d50:	cmp	r8, r4
   12d54:	ble	12d28 <table_remove_column@@Base+0xa4>
   12d58:	ldr	r1, [sp, #8]
   12d5c:	mov	r2, r4
   12d60:	cmp	r1, #0
   12d64:	beq	12d7c <table_remove_column@@Base+0xf8>
   12d68:	ldr	r1, [r0]
   12d6c:	add	r2, r1, r4, lsl #2
   12d70:	ldr	r2, [r2, #4]
   12d74:	str	r2, [r1, r4, lsl #2]
   12d78:	ldr	r2, [sp, #4]
   12d7c:	cmp	sl, r4
   12d80:	beq	12d28 <table_remove_column@@Base+0xa4>
   12d84:	sub	r1, r8, r2
   12d88:	lsl	r2, r2, #2
   12d8c:	ldr	r3, [r0]
   12d90:	subs	r1, r1, #2
   12d94:	add	r6, r3, r2
   12d98:	ldr	r6, [r6, #4]
   12d9c:	str	r6, [r3, r2]
   12da0:	ldr	r3, [r0]
   12da4:	add	r3, r3, r2
   12da8:	add	r2, r2, #8
   12dac:	ldr	r6, [r3, #8]
   12db0:	str	r6, [r3, #4]
   12db4:	bne	12d8c <table_remove_column@@Base+0x108>
   12db8:	b	12d28 <table_remove_column@@Base+0xa4>
   12dbc:	ldmib	r5, {r0, r1}
   12dc0:	sub	r0, r0, #1
   12dc4:	udiv	r2, r0, r1
   12dc8:	str	r0, [r5, #4]
   12dcc:	mls	r0, r2, r1, r0
   12dd0:	cmp	r0, #0
   12dd4:	bne	12e40 <table_remove_column@@Base+0x1bc>
   12dd8:	ldr	r2, [r5, #12]
   12ddc:	ldr	r0, [r5]
   12de0:	sub	r1, r2, r1
   12de4:	str	r1, [r5, #12]
   12de8:	add	r1, r1, r1, lsl #1
   12dec:	lsl	r1, r1, #2
   12df0:	bl	11eb4 <realloc@plt>
   12df4:	str	r0, [r5]
   12df8:	mov	r0, r5
   12dfc:	bl	13860 <table_get_row_length@@Base>
   12e00:	cmp	r0, #1
   12e04:	blt	12e40 <table_remove_column@@Base+0x1bc>
   12e08:	mov	r8, r0
   12e0c:	mov	r7, #0
   12e10:	mov	r0, r5
   12e14:	mov	r1, r7
   12e18:	bl	137f8 <table_get_row_ptr@@Base>
   12e1c:	ldr	r1, [r5, #12]
   12e20:	mov	r6, r0
   12e24:	ldr	r0, [r0]
   12e28:	lsl	r1, r1, #2
   12e2c:	bl	11eb4 <realloc@plt>
   12e30:	add	r7, r7, #1
   12e34:	str	r0, [r6]
   12e38:	cmp	r8, r7
   12e3c:	bne	12e10 <table_remove_column@@Base+0x18c>
   12e40:	mov	r0, r5
   12e44:	mvn	r1, #0
   12e48:	mov	r2, r4
   12e4c:	mov	r3, #16
   12e50:	bl	129c4 <table_notify@@Base>
   12e54:	mov	r0, #0
   12e58:	sub	sp, fp, #28
   12e5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012e60 <table_get_column_compare_function@@Base>:
   12e60:	ldr	r0, [r0]
   12e64:	add	r1, r1, r1, lsl #1
   12e68:	add	r0, r0, r1, lsl #2
   12e6c:	ldr	r0, [r0, #8]
   12e70:	bx	lr

00012e74 <table_set_column_compare_function@@Base>:
   12e74:	ldr	r0, [r0]
   12e78:	add	r1, r1, r1, lsl #1
   12e7c:	add	r0, r0, r1, lsl #2
   12e80:	str	r2, [r0, #8]
   12e84:	bx	lr

00012e88 <table_compare_bool@@Base>:
   12e88:	cmp	r0, #0
   12e8c:	beq	12ec0 <table_compare_bool@@Base+0x38>
   12e90:	cmp	r1, #0
   12e94:	moveq	r1, #1
   12e98:	moveq	r0, r1
   12e9c:	bxeq	lr
   12ea0:	ldrb	r2, [r1]
   12ea4:	ldrb	r0, [r0]
   12ea8:	mov	r1, #0
   12eac:	cmp	r0, r2
   12eb0:	mvncc	r1, #0
   12eb4:	movwhi	r1, #1
   12eb8:	mov	r0, r1
   12ebc:	bx	lr
   12ec0:	cmp	r1, #0
   12ec4:	mvnne	r1, #0
   12ec8:	mov	r0, r1
   12ecc:	bx	lr

00012ed0 <table_compare_int@@Base>:
   12ed0:	cmp	r0, #0
   12ed4:	beq	12f08 <table_compare_int@@Base+0x38>
   12ed8:	cmp	r1, #0
   12edc:	moveq	r1, #1
   12ee0:	moveq	r0, r1
   12ee4:	bxeq	lr
   12ee8:	ldr	r2, [r1]
   12eec:	ldr	r0, [r0]
   12ef0:	mov	r1, #0
   12ef4:	cmp	r0, r2
   12ef8:	mvnlt	r1, #0
   12efc:	movwgt	r1, #1
   12f00:	mov	r0, r1
   12f04:	bx	lr
   12f08:	cmp	r1, #0
   12f0c:	mvnne	r1, #0
   12f10:	mov	r0, r1
   12f14:	bx	lr

00012f18 <table_compare_uint@@Base>:
   12f18:	cmp	r0, #0
   12f1c:	beq	12f50 <table_compare_uint@@Base+0x38>
   12f20:	cmp	r1, #0
   12f24:	moveq	r1, #1
   12f28:	moveq	r0, r1
   12f2c:	bxeq	lr
   12f30:	ldr	r2, [r1]
   12f34:	ldr	r0, [r0]
   12f38:	mov	r1, #0
   12f3c:	cmp	r0, r2
   12f40:	mvncc	r1, #0
   12f44:	movwhi	r1, #1
   12f48:	mov	r0, r1
   12f4c:	bx	lr
   12f50:	cmp	r1, #0
   12f54:	mvnne	r1, #0
   12f58:	mov	r0, r1
   12f5c:	bx	lr

00012f60 <table_compare_int8@@Base>:
   12f60:	cmp	r0, #0
   12f64:	beq	12f98 <table_compare_int8@@Base+0x38>
   12f68:	cmp	r1, #0
   12f6c:	moveq	r1, #1
   12f70:	moveq	r0, r1
   12f74:	bxeq	lr
   12f78:	ldrsb	r2, [r1]
   12f7c:	ldrsb	r0, [r0]
   12f80:	mov	r1, #0
   12f84:	cmp	r0, r2
   12f88:	mvnlt	r1, #0
   12f8c:	movwgt	r1, #1
   12f90:	mov	r0, r1
   12f94:	bx	lr
   12f98:	cmp	r1, #0
   12f9c:	mvnne	r1, #0
   12fa0:	mov	r0, r1
   12fa4:	bx	lr

00012fa8 <table_compare_uint8@@Base>:
   12fa8:	cmp	r0, #0
   12fac:	beq	12fe0 <table_compare_uint8@@Base+0x38>
   12fb0:	cmp	r1, #0
   12fb4:	moveq	r1, #1
   12fb8:	moveq	r0, r1
   12fbc:	bxeq	lr
   12fc0:	ldrb	r2, [r1]
   12fc4:	ldrb	r0, [r0]
   12fc8:	mov	r1, #0
   12fcc:	cmp	r0, r2
   12fd0:	mvncc	r1, #0
   12fd4:	movwhi	r1, #1
   12fd8:	mov	r0, r1
   12fdc:	bx	lr
   12fe0:	cmp	r1, #0
   12fe4:	mvnne	r1, #0
   12fe8:	mov	r0, r1
   12fec:	bx	lr

00012ff0 <table_compare_int16@@Base>:
   12ff0:	cmp	r0, #0
   12ff4:	beq	13028 <table_compare_int16@@Base+0x38>
   12ff8:	cmp	r1, #0
   12ffc:	moveq	r1, #1
   13000:	moveq	r0, r1
   13004:	bxeq	lr
   13008:	ldrsh	r2, [r1]
   1300c:	ldrsh	r0, [r0]
   13010:	mov	r1, #0
   13014:	cmp	r0, r2
   13018:	mvnlt	r1, #0
   1301c:	movwgt	r1, #1
   13020:	mov	r0, r1
   13024:	bx	lr
   13028:	cmp	r1, #0
   1302c:	mvnne	r1, #0
   13030:	mov	r0, r1
   13034:	bx	lr

00013038 <table_compare_uint16@@Base>:
   13038:	cmp	r0, #0
   1303c:	beq	13070 <table_compare_uint16@@Base+0x38>
   13040:	cmp	r1, #0
   13044:	moveq	r1, #1
   13048:	moveq	r0, r1
   1304c:	bxeq	lr
   13050:	ldrh	r2, [r1]
   13054:	ldrh	r0, [r0]
   13058:	mov	r1, #0
   1305c:	cmp	r0, r2
   13060:	mvncc	r1, #0
   13064:	movwhi	r1, #1
   13068:	mov	r0, r1
   1306c:	bx	lr
   13070:	cmp	r1, #0
   13074:	mvnne	r1, #0
   13078:	mov	r0, r1
   1307c:	bx	lr

00013080 <table_compare_int32@@Base>:
   13080:	cmp	r0, #0
   13084:	beq	130b8 <table_compare_int32@@Base+0x38>
   13088:	cmp	r1, #0
   1308c:	moveq	r1, #1
   13090:	moveq	r0, r1
   13094:	bxeq	lr
   13098:	ldr	r2, [r1]
   1309c:	ldr	r0, [r0]
   130a0:	mov	r1, #0
   130a4:	cmp	r0, r2
   130a8:	mvnlt	r1, #0
   130ac:	movwgt	r1, #1
   130b0:	mov	r0, r1
   130b4:	bx	lr
   130b8:	cmp	r1, #0
   130bc:	mvnne	r1, #0
   130c0:	mov	r0, r1
   130c4:	bx	lr

000130c8 <table_compare_uint32@@Base>:
   130c8:	cmp	r0, #0
   130cc:	beq	13100 <table_compare_uint32@@Base+0x38>
   130d0:	cmp	r1, #0
   130d4:	moveq	r1, #1
   130d8:	moveq	r0, r1
   130dc:	bxeq	lr
   130e0:	ldr	r2, [r1]
   130e4:	ldr	r0, [r0]
   130e8:	mov	r1, #0
   130ec:	cmp	r0, r2
   130f0:	mvncc	r1, #0
   130f4:	movwhi	r1, #1
   130f8:	mov	r0, r1
   130fc:	bx	lr
   13100:	cmp	r1, #0
   13104:	mvnne	r1, #0
   13108:	mov	r0, r1
   1310c:	bx	lr

00013110 <table_compare_int64@@Base>:
   13110:	cmp	r0, #0
   13114:	beq	13168 <table_compare_int64@@Base+0x58>
   13118:	cmp	r1, #0
   1311c:	moveq	r1, #1
   13120:	moveq	r0, r1
   13124:	bxeq	lr
   13128:	push	{r5, r7, fp, lr}
   1312c:	add	fp, sp, #8
   13130:	ldm	r0, {r0, r5}
   13134:	ldm	r1, {r2, r7}
   13138:	mov	r1, #0
   1313c:	subs	r3, r0, r2
   13140:	sbcs	r3, r5, r7
   13144:	movwlt	r1, #1
   13148:	cmp	r1, #0
   1314c:	mvnne	r1, #0
   13150:	subs	r0, r2, r0
   13154:	sbcs	r0, r7, r5
   13158:	movwlt	r1, #1
   1315c:	pop	{r5, r7, fp, lr}
   13160:	mov	r0, r1
   13164:	bx	lr
   13168:	cmp	r1, #0
   1316c:	mvnne	r1, #0
   13170:	mov	r0, r1
   13174:	bx	lr

00013178 <table_compare_uint64@@Base>:
   13178:	cmp	r0, #0
   1317c:	beq	131d0 <table_compare_uint64@@Base+0x58>
   13180:	cmp	r1, #0
   13184:	moveq	r1, #1
   13188:	moveq	r0, r1
   1318c:	bxeq	lr
   13190:	push	{r5, r7, fp, lr}
   13194:	add	fp, sp, #8
   13198:	ldm	r0, {r0, r5}
   1319c:	ldm	r1, {r2, r7}
   131a0:	mov	r1, #0
   131a4:	subs	r3, r0, r2
   131a8:	sbcs	r3, r5, r7
   131ac:	movwcc	r1, #1
   131b0:	cmp	r1, #0
   131b4:	mvnne	r1, #0
   131b8:	subs	r0, r2, r0
   131bc:	sbcs	r0, r7, r5
   131c0:	movwcc	r1, #1
   131c4:	pop	{r5, r7, fp, lr}
   131c8:	mov	r0, r1
   131cc:	bx	lr
   131d0:	cmp	r1, #0
   131d4:	mvnne	r1, #0
   131d8:	mov	r0, r1
   131dc:	bx	lr

000131e0 <table_compare_short@@Base>:
   131e0:	cmp	r0, #0
   131e4:	beq	13218 <table_compare_short@@Base+0x38>
   131e8:	cmp	r1, #0
   131ec:	moveq	r1, #1
   131f0:	moveq	r0, r1
   131f4:	bxeq	lr
   131f8:	ldrsh	r2, [r1]
   131fc:	ldrsh	r0, [r0]
   13200:	mov	r1, #0
   13204:	cmp	r0, r2
   13208:	mvnlt	r1, #0
   1320c:	movwgt	r1, #1
   13210:	mov	r0, r1
   13214:	bx	lr
   13218:	cmp	r1, #0
   1321c:	mvnne	r1, #0
   13220:	mov	r0, r1
   13224:	bx	lr

00013228 <table_compare_ushort@@Base>:
   13228:	cmp	r0, #0
   1322c:	beq	13260 <table_compare_ushort@@Base+0x38>
   13230:	cmp	r1, #0
   13234:	moveq	r1, #1
   13238:	moveq	r0, r1
   1323c:	bxeq	lr
   13240:	ldrh	r2, [r1]
   13244:	ldrh	r0, [r0]
   13248:	mov	r1, #0
   1324c:	cmp	r0, r2
   13250:	mvncc	r1, #0
   13254:	movwhi	r1, #1
   13258:	mov	r0, r1
   1325c:	bx	lr
   13260:	cmp	r1, #0
   13264:	mvnne	r1, #0
   13268:	mov	r0, r1
   1326c:	bx	lr

00013270 <table_compare_long@@Base>:
   13270:	cmp	r0, #0
   13274:	beq	132a8 <table_compare_long@@Base+0x38>
   13278:	cmp	r1, #0
   1327c:	moveq	r1, #1
   13280:	moveq	r0, r1
   13284:	bxeq	lr
   13288:	ldr	r2, [r1]
   1328c:	ldr	r0, [r0]
   13290:	mov	r1, #0
   13294:	cmp	r0, r2
   13298:	mvnlt	r1, #0
   1329c:	movwgt	r1, #1
   132a0:	mov	r0, r1
   132a4:	bx	lr
   132a8:	cmp	r1, #0
   132ac:	mvnne	r1, #0
   132b0:	mov	r0, r1
   132b4:	bx	lr

000132b8 <table_compare_ulong@@Base>:
   132b8:	cmp	r0, #0
   132bc:	beq	132f0 <table_compare_ulong@@Base+0x38>
   132c0:	cmp	r1, #0
   132c4:	moveq	r1, #1
   132c8:	moveq	r0, r1
   132cc:	bxeq	lr
   132d0:	ldr	r2, [r1]
   132d4:	ldr	r0, [r0]
   132d8:	mov	r1, #0
   132dc:	cmp	r0, r2
   132e0:	mvncc	r1, #0
   132e4:	movwhi	r1, #1
   132e8:	mov	r0, r1
   132ec:	bx	lr
   132f0:	cmp	r1, #0
   132f4:	mvnne	r1, #0
   132f8:	mov	r0, r1
   132fc:	bx	lr

00013300 <table_compare_llong@@Base>:
   13300:	cmp	r0, #0
   13304:	beq	13358 <table_compare_llong@@Base+0x58>
   13308:	cmp	r1, #0
   1330c:	moveq	r1, #1
   13310:	moveq	r0, r1
   13314:	bxeq	lr
   13318:	push	{r5, r7, fp, lr}
   1331c:	add	fp, sp, #8
   13320:	ldm	r0, {r0, r5}
   13324:	ldm	r1, {r2, r7}
   13328:	mov	r1, #0
   1332c:	subs	r3, r0, r2
   13330:	sbcs	r3, r5, r7
   13334:	movwlt	r1, #1
   13338:	cmp	r1, #0
   1333c:	mvnne	r1, #0
   13340:	subs	r0, r2, r0
   13344:	sbcs	r0, r7, r5
   13348:	movwlt	r1, #1
   1334c:	pop	{r5, r7, fp, lr}
   13350:	mov	r0, r1
   13354:	bx	lr
   13358:	cmp	r1, #0
   1335c:	mvnne	r1, #0
   13360:	mov	r0, r1
   13364:	bx	lr

00013368 <table_compare_ullong@@Base>:
   13368:	cmp	r0, #0
   1336c:	beq	133a0 <table_compare_ullong@@Base+0x38>
   13370:	cmp	r1, #0
   13374:	moveq	r1, #1
   13378:	moveq	r0, r1
   1337c:	bxeq	lr
   13380:	ldr	r2, [r1]
   13384:	ldr	r0, [r0]
   13388:	mov	r1, #0
   1338c:	cmp	r0, r2
   13390:	mvncc	r1, #0
   13394:	movwhi	r1, #1
   13398:	mov	r0, r1
   1339c:	bx	lr
   133a0:	cmp	r1, #0
   133a4:	mvnne	r1, #0
   133a8:	mov	r0, r1
   133ac:	bx	lr

000133b0 <table_compare_float@@Base>:
   133b0:	cmp	r0, #0
   133b4:	beq	133ec <table_compare_float@@Base+0x3c>
   133b8:	cmp	r1, #0
   133bc:	moveq	r1, #1
   133c0:	moveq	r0, r1
   133c4:	bxeq	lr
   133c8:	vldr	s0, [r1]
   133cc:	vldr	s2, [r0]
   133d0:	mov	r1, #0
   133d4:	vcmpe.f32	s2, s0
   133d8:	vmrs	APSR_nzcv, fpscr
   133dc:	mvnmi	r1, #0
   133e0:	movwgt	r1, #1
   133e4:	mov	r0, r1
   133e8:	bx	lr
   133ec:	cmp	r1, #0
   133f0:	mvnne	r1, #0
   133f4:	mov	r0, r1
   133f8:	bx	lr

000133fc <table_compare_double@@Base>:
   133fc:	cmp	r0, #0
   13400:	beq	13438 <table_compare_double@@Base+0x3c>
   13404:	cmp	r1, #0
   13408:	moveq	r1, #1
   1340c:	moveq	r0, r1
   13410:	bxeq	lr
   13414:	vldr	d16, [r1]
   13418:	vldr	d17, [r0]
   1341c:	mov	r1, #0
   13420:	vcmpe.f64	d17, d16
   13424:	vmrs	APSR_nzcv, fpscr
   13428:	mvnmi	r1, #0
   1342c:	movwgt	r1, #1
   13430:	mov	r0, r1
   13434:	bx	lr
   13438:	cmp	r1, #0
   1343c:	mvnne	r1, #0
   13440:	mov	r0, r1
   13444:	bx	lr

00013448 <table_compare_ldouble@@Base>:
   13448:	cmp	r0, #0
   1344c:	beq	13484 <table_compare_ldouble@@Base+0x3c>
   13450:	cmp	r1, #0
   13454:	moveq	r1, #1
   13458:	moveq	r0, r1
   1345c:	bxeq	lr
   13460:	vldr	d16, [r1]
   13464:	vldr	d17, [r0]
   13468:	mov	r1, #0
   1346c:	vcmpe.f64	d17, d16
   13470:	vmrs	APSR_nzcv, fpscr
   13474:	mvnmi	r1, #0
   13478:	movwgt	r1, #1
   1347c:	mov	r0, r1
   13480:	bx	lr
   13484:	cmp	r1, #0
   13488:	mvnne	r1, #0
   1348c:	mov	r0, r1
   13490:	bx	lr

00013494 <table_compare_char@@Base>:
   13494:	cmp	r0, #0
   13498:	beq	134cc <table_compare_char@@Base+0x38>
   1349c:	cmp	r1, #0
   134a0:	moveq	r1, #1
   134a4:	moveq	r0, r1
   134a8:	bxeq	lr
   134ac:	ldrb	r2, [r1]
   134b0:	ldrb	r0, [r0]
   134b4:	mov	r1, #0
   134b8:	cmp	r0, r2
   134bc:	mvncc	r1, #0
   134c0:	movwhi	r1, #1
   134c4:	mov	r0, r1
   134c8:	bx	lr
   134cc:	cmp	r1, #0
   134d0:	mvnne	r1, #0
   134d4:	mov	r0, r1
   134d8:	bx	lr

000134dc <table_compare_uchar@@Base>:
   134dc:	cmp	r0, #0
   134e0:	beq	13514 <table_compare_uchar@@Base+0x38>
   134e4:	cmp	r1, #0
   134e8:	moveq	r1, #1
   134ec:	moveq	r0, r1
   134f0:	bxeq	lr
   134f4:	ldrb	r2, [r1]
   134f8:	ldrb	r0, [r0]
   134fc:	mov	r1, #0
   13500:	cmp	r0, r2
   13504:	mvncc	r1, #0
   13508:	movwhi	r1, #1
   1350c:	mov	r0, r1
   13510:	bx	lr
   13514:	cmp	r1, #0
   13518:	mvnne	r1, #0
   1351c:	mov	r0, r1
   13520:	bx	lr

00013524 <table_compare_string@@Base>:
   13524:	cmp	r0, #0
   13528:	beq	13540 <table_compare_string@@Base+0x1c>
   1352c:	cmp	r1, #0
   13530:	moveq	r1, #1
   13534:	moveq	r0, r1
   13538:	bxeq	lr
   1353c:	b	11e90 <strcmp@plt>
   13540:	cmp	r1, #0
   13544:	mvnne	r1, #0
   13548:	mov	r0, r1
   1354c:	bx	lr

00013550 <table_compare_ptr@@Base>:
   13550:	cmp	r0, r1
   13554:	mov	r2, #0
   13558:	mvncc	r2, #0
   1355c:	movwhi	r2, #1
   13560:	mov	r0, r2
   13564:	bx	lr

00013568 <table_get_default_compare_function_for_data_type@@Base>:
   13568:	cmp	r0, #23
   1356c:	movhi	r0, #0
   13570:	bxhi	lr
   13574:	ldr	r1, [pc, #8]	; 13584 <table_get_default_compare_function_for_data_type@@Base+0x1c>
   13578:	add	r1, pc, r1
   1357c:	ldr	r0, [r1, r0, lsl #2]
   13580:	bx	lr
   13584:	andeq	r2, r1, r0, lsr r9

00013588 <table_get@@Base>:
   13588:	push	{fp, lr}
   1358c:	mov	fp, sp
   13590:	bl	14970 <table_get_cell_ptr@@Base>
   13594:	ldr	r0, [r0]
   13598:	pop	{fp, pc}

0001359c <table_get_bool@@Base>:
   1359c:	push	{fp, lr}
   135a0:	mov	fp, sp
   135a4:	bl	14970 <table_get_cell_ptr@@Base>
   135a8:	ldr	r0, [r0]
   135ac:	ldrb	r0, [r0]
   135b0:	pop	{fp, pc}

000135b4 <table_get_int@@Base>:
   135b4:	push	{fp, lr}
   135b8:	mov	fp, sp
   135bc:	bl	14970 <table_get_cell_ptr@@Base>
   135c0:	ldr	r0, [r0]
   135c4:	ldr	r0, [r0]
   135c8:	pop	{fp, pc}

000135cc <table_get_uint@@Base>:
   135cc:	push	{fp, lr}
   135d0:	mov	fp, sp
   135d4:	bl	14970 <table_get_cell_ptr@@Base>
   135d8:	ldr	r0, [r0]
   135dc:	ldr	r0, [r0]
   135e0:	pop	{fp, pc}

000135e4 <table_get_int8@@Base>:
   135e4:	push	{fp, lr}
   135e8:	mov	fp, sp
   135ec:	bl	14970 <table_get_cell_ptr@@Base>
   135f0:	ldr	r0, [r0]
   135f4:	ldrsb	r0, [r0]
   135f8:	pop	{fp, pc}

000135fc <table_get_uint8@@Base>:
   135fc:	push	{fp, lr}
   13600:	mov	fp, sp
   13604:	bl	14970 <table_get_cell_ptr@@Base>
   13608:	ldr	r0, [r0]
   1360c:	ldrb	r0, [r0]
   13610:	pop	{fp, pc}

00013614 <table_get_int16@@Base>:
   13614:	push	{fp, lr}
   13618:	mov	fp, sp
   1361c:	bl	14970 <table_get_cell_ptr@@Base>
   13620:	ldr	r0, [r0]
   13624:	ldrsh	r0, [r0]
   13628:	pop	{fp, pc}

0001362c <table_get_uint16@@Base>:
   1362c:	push	{fp, lr}
   13630:	mov	fp, sp
   13634:	bl	14970 <table_get_cell_ptr@@Base>
   13638:	ldr	r0, [r0]
   1363c:	ldrh	r0, [r0]
   13640:	pop	{fp, pc}

00013644 <table_get_int32@@Base>:
   13644:	push	{fp, lr}
   13648:	mov	fp, sp
   1364c:	bl	14970 <table_get_cell_ptr@@Base>
   13650:	ldr	r0, [r0]
   13654:	ldr	r0, [r0]
   13658:	pop	{fp, pc}

0001365c <table_get_uint32@@Base>:
   1365c:	push	{fp, lr}
   13660:	mov	fp, sp
   13664:	bl	14970 <table_get_cell_ptr@@Base>
   13668:	ldr	r0, [r0]
   1366c:	ldr	r0, [r0]
   13670:	pop	{fp, pc}

00013674 <table_get_int64@@Base>:
   13674:	push	{fp, lr}
   13678:	mov	fp, sp
   1367c:	bl	14970 <table_get_cell_ptr@@Base>
   13680:	ldr	r0, [r0]
   13684:	ldrd	r0, [r0]
   13688:	pop	{fp, pc}

0001368c <table_get_uint64@@Base>:
   1368c:	push	{fp, lr}
   13690:	mov	fp, sp
   13694:	bl	14970 <table_get_cell_ptr@@Base>
   13698:	ldr	r0, [r0]
   1369c:	ldrd	r0, [r0]
   136a0:	pop	{fp, pc}

000136a4 <table_get_short@@Base>:
   136a4:	push	{fp, lr}
   136a8:	mov	fp, sp
   136ac:	bl	14970 <table_get_cell_ptr@@Base>
   136b0:	ldr	r0, [r0]
   136b4:	ldrsh	r0, [r0]
   136b8:	pop	{fp, pc}

000136bc <table_get_ushort@@Base>:
   136bc:	push	{fp, lr}
   136c0:	mov	fp, sp
   136c4:	bl	14970 <table_get_cell_ptr@@Base>
   136c8:	ldr	r0, [r0]
   136cc:	ldrh	r0, [r0]
   136d0:	pop	{fp, pc}

000136d4 <table_get_long@@Base>:
   136d4:	push	{fp, lr}
   136d8:	mov	fp, sp
   136dc:	bl	14970 <table_get_cell_ptr@@Base>
   136e0:	ldr	r0, [r0]
   136e4:	ldr	r0, [r0]
   136e8:	pop	{fp, pc}

000136ec <table_get_ulong@@Base>:
   136ec:	push	{fp, lr}
   136f0:	mov	fp, sp
   136f4:	bl	14970 <table_get_cell_ptr@@Base>
   136f8:	ldr	r0, [r0]
   136fc:	ldr	r0, [r0]
   13700:	pop	{fp, pc}

00013704 <table_get_llong@@Base>:
   13704:	push	{fp, lr}
   13708:	mov	fp, sp
   1370c:	bl	14970 <table_get_cell_ptr@@Base>
   13710:	ldr	r0, [r0]
   13714:	ldrd	r0, [r0]
   13718:	pop	{fp, pc}

0001371c <table_get_ullong@@Base>:
   1371c:	push	{fp, lr}
   13720:	mov	fp, sp
   13724:	bl	14970 <table_get_cell_ptr@@Base>
   13728:	ldr	r0, [r0]
   1372c:	ldrd	r0, [r0]
   13730:	pop	{fp, pc}

00013734 <table_get_float@@Base>:
   13734:	push	{fp, lr}
   13738:	mov	fp, sp
   1373c:	bl	14970 <table_get_cell_ptr@@Base>
   13740:	ldr	r0, [r0]
   13744:	vldr	s0, [r0]
   13748:	pop	{fp, pc}

0001374c <table_get_double@@Base>:
   1374c:	push	{fp, lr}
   13750:	mov	fp, sp
   13754:	bl	14970 <table_get_cell_ptr@@Base>
   13758:	ldr	r0, [r0]
   1375c:	vldr	d0, [r0]
   13760:	pop	{fp, pc}

00013764 <table_get_ldouble@@Base>:
   13764:	push	{fp, lr}
   13768:	mov	fp, sp
   1376c:	bl	14970 <table_get_cell_ptr@@Base>
   13770:	ldr	r0, [r0]
   13774:	vldr	d0, [r0]
   13778:	pop	{fp, pc}

0001377c <table_get_char@@Base>:
   1377c:	push	{fp, lr}
   13780:	mov	fp, sp
   13784:	bl	14970 <table_get_cell_ptr@@Base>
   13788:	ldr	r0, [r0]
   1378c:	ldrb	r0, [r0]
   13790:	pop	{fp, pc}

00013794 <table_get_uchar@@Base>:
   13794:	push	{fp, lr}
   13798:	mov	fp, sp
   1379c:	bl	14970 <table_get_cell_ptr@@Base>
   137a0:	ldr	r0, [r0]
   137a4:	ldrb	r0, [r0]
   137a8:	pop	{fp, pc}

000137ac <table_get_string@@Base>:
   137ac:	push	{fp, lr}
   137b0:	mov	fp, sp
   137b4:	bl	14970 <table_get_cell_ptr@@Base>
   137b8:	ldr	r0, [r0]
   137bc:	pop	{fp, pc}

000137c0 <table_get_ptr@@Base>:
   137c0:	push	{fp, lr}
   137c4:	mov	fp, sp
   137c8:	bl	14970 <table_get_cell_ptr@@Base>
   137cc:	ldr	r0, [r0]
   137d0:	pop	{fp, pc}

000137d4 <table_row_init@@Base>:
   137d4:	push	{r4, r5, fp, lr}
   137d8:	add	fp, sp, #8
   137dc:	mov	r4, r1
   137e0:	ldr	r1, [r0, #12]
   137e4:	ldr	r5, [r0, #16]
   137e8:	lsl	r0, r1, #2
   137ec:	bl	11ecc <malloc@plt>
   137f0:	str	r0, [r5, r4, lsl #2]
   137f4:	pop	{r4, r5, fp, pc}

000137f8 <table_get_row_ptr@@Base>:
   137f8:	ldr	r0, [r0, #16]
   137fc:	add	r0, r0, r1, lsl #2
   13800:	bx	lr

00013804 <table_row_destroy@@Base>:
   13804:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13808:	add	fp, sp, #24
   1380c:	mov	r4, r1
   13810:	mov	r5, r0
   13814:	bl	12ac0 <table_get_column_length@@Base>
   13818:	ldr	r8, [r5, #16]
   1381c:	cmp	r0, #1
   13820:	blt	13848 <table_row_destroy@@Base+0x44>
   13824:	mov	r6, r0
   13828:	mov	r7, #0
   1382c:	mov	r0, r5
   13830:	mov	r1, r4
   13834:	mov	r2, r7
   13838:	bl	1498c <table_cell_destroy@@Base>
   1383c:	add	r7, r7, #1
   13840:	cmp	r6, r7
   13844:	bne	1382c <table_row_destroy@@Base+0x28>
   13848:	ldr	r0, [r8, r4, lsl #2]
   1384c:	cmp	r0, #0
   13850:	beq	1385c <table_row_destroy@@Base+0x58>
   13854:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   13858:	b	11ea8 <free@plt>
   1385c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00013860 <table_get_row_length@@Base>:
   13860:	ldr	r0, [r0, #20]
   13864:	bx	lr

00013868 <table_add_row@@Base>:
   13868:	push	{r4, r5, r6, r7, fp, lr}
   1386c:	add	fp, sp, #16
   13870:	ldr	r5, [r0, #20]
   13874:	ldr	r1, [r0, #24]
   13878:	mov	r4, r0
   1387c:	udiv	r0, r5, r1
   13880:	mls	r0, r0, r1, r5
   13884:	cmp	r0, #0
   13888:	bne	138ac <table_add_row@@Base+0x44>
   1388c:	ldr	r2, [r4, #28]
   13890:	ldr	r0, [r4, #16]
   13894:	add	r1, r2, r1
   13898:	str	r1, [r4, #28]
   1389c:	lsl	r1, r1, #2
   138a0:	bl	11eb4 <realloc@plt>
   138a4:	str	r0, [r4, #16]
   138a8:	ldr	r5, [r4, #20]
   138ac:	mov	r0, r4
   138b0:	bl	12ac0 <table_get_column_length@@Base>
   138b4:	mov	r6, r0
   138b8:	ldr	r0, [r4, #12]
   138bc:	ldr	r7, [r4, #16]
   138c0:	lsl	r0, r0, #2
   138c4:	bl	11ecc <malloc@plt>
   138c8:	cmp	r6, #1
   138cc:	str	r0, [r7, r5, lsl #2]
   138d0:	blt	138f4 <table_add_row@@Base+0x8c>
   138d4:	mov	r7, #0
   138d8:	mov	r0, r4
   138dc:	mov	r1, r5
   138e0:	mov	r2, r7
   138e4:	bl	14950 <table_cell_init@@Base>
   138e8:	add	r7, r7, #1
   138ec:	cmp	r6, r7
   138f0:	bne	138d8 <table_add_row@@Base+0x70>
   138f4:	ldr	r1, [r4, #20]
   138f8:	mov	r0, r4
   138fc:	mvn	r2, #0
   13900:	mov	r3, #2
   13904:	bl	129c4 <table_notify@@Base>
   13908:	ldr	r0, [r4, #20]
   1390c:	add	r1, r0, #1
   13910:	str	r1, [r4, #20]
   13914:	pop	{r4, r5, r6, r7, fp, pc}

00013918 <table_remove_row@@Base>:
   13918:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1391c:	add	fp, sp, #24
   13920:	ldr	r8, [r0, #20]
   13924:	mov	r4, r1
   13928:	mov	r5, r0
   1392c:	bl	12ac0 <table_get_column_length@@Base>
   13930:	cmp	r0, #1
   13934:	blt	13988 <table_remove_row@@Base+0x70>
   13938:	mov	r6, r0
   1393c:	mov	r7, #0
   13940:	b	13950 <table_remove_row@@Base+0x38>
   13944:	add	r7, r7, #1
   13948:	cmp	r6, r7
   1394c:	beq	13988 <table_remove_row@@Base+0x70>
   13950:	mov	r0, r5
   13954:	mov	r1, r7
   13958:	bl	12b38 <table_get_column_data_type@@Base>
   1395c:	cmp	r0, #23
   13960:	beq	13944 <table_remove_row@@Base+0x2c>
   13964:	mov	r0, r5
   13968:	mov	r1, r4
   1396c:	mov	r2, r7
   13970:	bl	14970 <table_get_cell_ptr@@Base>
   13974:	ldr	r0, [r0]
   13978:	cmp	r0, #0
   1397c:	beq	13944 <table_remove_row@@Base+0x2c>
   13980:	bl	11ea8 <free@plt>
   13984:	b	13944 <table_remove_row@@Base+0x2c>
   13988:	ldr	r0, [r5, #16]
   1398c:	ldr	r0, [r0, r4, lsl #2]
   13990:	cmp	r0, #0
   13994:	beq	1399c <table_remove_row@@Base+0x84>
   13998:	bl	11ea8 <free@plt>
   1399c:	sub	r0, r8, #1
   139a0:	cmp	r0, r4
   139a4:	ble	13a14 <table_remove_row@@Base+0xfc>
   139a8:	mvn	r0, r4
   139ac:	add	r1, r8, r0
   139b0:	sub	r0, r8, #2
   139b4:	tst	r1, #1
   139b8:	mov	r1, r4
   139bc:	beq	139d4 <table_remove_row@@Base+0xbc>
   139c0:	ldr	r1, [r5, #16]
   139c4:	add	r2, r1, r4, lsl #2
   139c8:	ldr	r2, [r2, #4]
   139cc:	str	r2, [r1, r4, lsl #2]
   139d0:	add	r1, r4, #1
   139d4:	cmp	r0, r4
   139d8:	beq	13a14 <table_remove_row@@Base+0xfc>
   139dc:	mvn	r0, r1
   139e0:	lsl	r1, r1, #2
   139e4:	add	r0, r0, r8
   139e8:	ldr	r2, [r5, #16]
   139ec:	subs	r0, r0, #2
   139f0:	add	r3, r2, r1
   139f4:	ldr	r3, [r3, #4]
   139f8:	str	r3, [r2, r1]
   139fc:	ldr	r2, [r5, #16]
   13a00:	add	r2, r2, r1
   13a04:	add	r1, r1, #8
   13a08:	ldr	r3, [r2, #8]
   13a0c:	str	r3, [r2, #4]
   13a10:	bne	139e8 <table_remove_row@@Base+0xd0>
   13a14:	ldr	r0, [r5, #20]
   13a18:	ldr	r1, [r5, #24]
   13a1c:	sub	r0, r0, #1
   13a20:	udiv	r2, r0, r1
   13a24:	str	r0, [r5, #20]
   13a28:	mls	r0, r2, r1, r0
   13a2c:	cmp	r0, #0
   13a30:	bne	13a50 <table_remove_row@@Base+0x138>
   13a34:	ldr	r2, [r5, #28]
   13a38:	ldr	r0, [r5, #16]
   13a3c:	sub	r1, r2, r1
   13a40:	str	r1, [r5, #28]
   13a44:	lsl	r1, r1, #2
   13a48:	bl	11eb4 <realloc@plt>
   13a4c:	str	r0, [r5, #16]
   13a50:	mov	r0, r5
   13a54:	mov	r1, r4
   13a58:	mvn	r2, #0
   13a5c:	mov	r3, #4
   13a60:	bl	129c4 <table_notify@@Base>
   13a64:	mov	r0, #0
   13a68:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00013a6c <table_set_row_ptr@@Base>:
   13a6c:	ldr	r2, [r2]
   13a70:	ldr	r0, [r0, #16]
   13a74:	str	r2, [r0, r1, lsl #2]
   13a78:	bx	lr

00013a7c <table_set@@Base>:
   13a7c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13a80:	add	fp, sp, #24
   13a84:	mov	r8, r3
   13a88:	mov	r4, r2
   13a8c:	mov	r9, r1
   13a90:	mov	r6, r0
   13a94:	bl	14970 <table_get_cell_ptr@@Base>
   13a98:	mov	r5, r0
   13a9c:	mov	r0, r6
   13aa0:	mov	r1, r4
   13aa4:	bl	12a98 <table_get_col_ptr@@Base>
   13aa8:	ldr	r1, [fp, #8]
   13aac:	mvn	r7, #0
   13ab0:	cmp	r1, #23
   13ab4:	bhi	13d7c <table_set@@Base+0x300>
   13ab8:	add	r2, pc, #4
   13abc:	ldr	r1, [r2, r1, lsl #2]
   13ac0:	add	pc, r2, r1
   13ac4:	andeq	r0, r0, r0, rrx
   13ac8:	andeq	r0, r0, r0, ror r0
   13acc:	andeq	r0, r0, r0, lsl #1
   13ad0:	muleq	r0, r0, r0
   13ad4:	andeq	r0, r0, r0, lsr #1
   13ad8:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   13adc:	andeq	r0, r0, r0, asr #1
   13ae0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   13ae4:	andeq	r0, r0, r0, ror #1
   13ae8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   13aec:	andeq	r0, r0, r0, lsl #2
   13af0:	andeq	r0, r0, r0, lsl r1
   13af4:	andeq	r0, r0, r8, asr #2
   13af8:	andeq	r0, r0, r8, asr r1
   13afc:	andeq	r0, r0, r8, ror #2
   13b00:	andeq	r0, r0, r8, ror r1
   13b04:	andeq	r0, r0, r8, lsl #3
   13b08:	andeq	r0, r0, r0, asr #3
   13b0c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   13b10:	andeq	r0, r0, r0, lsl r2
   13b14:	andeq	r0, r0, r0, lsr #4
   13b18:	andeq	r0, r0, r0, lsr r2
   13b1c:	andeq	r0, r0, ip, ror #4
   13b20:	andeq	r0, r0, r0, asr #5
   13b24:	ldr	r0, [r0, #4]
   13b28:	cmp	r0, #0
   13b2c:	bne	13d7c <table_set@@Base+0x300>
   13b30:	b	13c58 <table_set@@Base+0x1dc>
   13b34:	ldr	r0, [r0, #4]
   13b38:	cmp	r0, #1
   13b3c:	beq	13c58 <table_set@@Base+0x1dc>
   13b40:	b	13d7c <table_set@@Base+0x300>
   13b44:	ldr	r0, [r0, #4]
   13b48:	cmp	r0, #2
   13b4c:	beq	13d3c <table_set@@Base+0x2c0>
   13b50:	b	13d7c <table_set@@Base+0x300>
   13b54:	ldr	r0, [r0, #4]
   13b58:	cmp	r0, #3
   13b5c:	beq	13d3c <table_set@@Base+0x2c0>
   13b60:	b	13d7c <table_set@@Base+0x300>
   13b64:	ldr	r0, [r0, #4]
   13b68:	cmp	r0, #4
   13b6c:	beq	13be0 <table_set@@Base+0x164>
   13b70:	b	13d7c <table_set@@Base+0x300>
   13b74:	ldr	r0, [r0, #4]
   13b78:	cmp	r0, #5
   13b7c:	beq	13be0 <table_set@@Base+0x164>
   13b80:	b	13d7c <table_set@@Base+0x300>
   13b84:	ldr	r0, [r0, #4]
   13b88:	cmp	r0, #6
   13b8c:	beq	13c58 <table_set@@Base+0x1dc>
   13b90:	b	13d7c <table_set@@Base+0x300>
   13b94:	ldr	r0, [r0, #4]
   13b98:	cmp	r0, #7
   13b9c:	beq	13c58 <table_set@@Base+0x1dc>
   13ba0:	b	13d7c <table_set@@Base+0x300>
   13ba4:	ldr	r0, [r0, #4]
   13ba8:	cmp	r0, #8
   13bac:	beq	13ca0 <table_set@@Base+0x224>
   13bb0:	b	13d7c <table_set@@Base+0x300>
   13bb4:	ldr	r0, [r0, #4]
   13bb8:	cmp	r0, #9
   13bbc:	beq	13ca0 <table_set@@Base+0x224>
   13bc0:	b	13d7c <table_set@@Base+0x300>
   13bc4:	ldr	r0, [r0, #4]
   13bc8:	cmp	r0, #10
   13bcc:	beq	13be0 <table_set@@Base+0x164>
   13bd0:	b	13d7c <table_set@@Base+0x300>
   13bd4:	ldr	r0, [r0, #4]
   13bd8:	cmp	r0, #11
   13bdc:	bne	13d7c <table_set@@Base+0x300>
   13be0:	ldr	r0, [r5]
   13be4:	cmp	r0, #0
   13be8:	bne	13c00 <table_set@@Base+0x184>
   13bec:	mov	r0, #2
   13bf0:	bl	11ecc <malloc@plt>
   13bf4:	cmp	r0, #0
   13bf8:	str	r0, [r5]
   13bfc:	beq	13d7c <table_set@@Base+0x300>
   13c00:	ldrh	r1, [r8]
   13c04:	strh	r1, [r0]
   13c08:	b	13d64 <table_set@@Base+0x2e8>
   13c0c:	ldr	r0, [r0, #4]
   13c10:	cmp	r0, #12
   13c14:	beq	13c58 <table_set@@Base+0x1dc>
   13c18:	b	13d7c <table_set@@Base+0x300>
   13c1c:	ldr	r0, [r0, #4]
   13c20:	cmp	r0, #13
   13c24:	beq	13c58 <table_set@@Base+0x1dc>
   13c28:	b	13d7c <table_set@@Base+0x300>
   13c2c:	ldr	r0, [r0, #4]
   13c30:	cmp	r0, #14
   13c34:	beq	13ca0 <table_set@@Base+0x224>
   13c38:	b	13d7c <table_set@@Base+0x300>
   13c3c:	ldr	r0, [r0, #4]
   13c40:	cmp	r0, #15
   13c44:	beq	13ca0 <table_set@@Base+0x224>
   13c48:	b	13d7c <table_set@@Base+0x300>
   13c4c:	ldr	r0, [r0, #4]
   13c50:	cmp	r0, #16
   13c54:	bne	13d7c <table_set@@Base+0x300>
   13c58:	ldr	r0, [r5]
   13c5c:	cmp	r0, #0
   13c60:	bne	13c78 <table_set@@Base+0x1fc>
   13c64:	mov	r0, #4
   13c68:	bl	11ecc <malloc@plt>
   13c6c:	cmp	r0, #0
   13c70:	str	r0, [r5]
   13c74:	beq	13d7c <table_set@@Base+0x300>
   13c78:	ldr	r1, [r8]
   13c7c:	str	r1, [r0]
   13c80:	b	13d64 <table_set@@Base+0x2e8>
   13c84:	ldr	r0, [r0, #4]
   13c88:	cmp	r0, #17
   13c8c:	beq	13ca0 <table_set@@Base+0x224>
   13c90:	b	13d7c <table_set@@Base+0x300>
   13c94:	ldr	r0, [r0, #4]
   13c98:	cmp	r0, #18
   13c9c:	bne	13d7c <table_set@@Base+0x300>
   13ca0:	ldr	r0, [r5]
   13ca4:	cmp	r0, #0
   13ca8:	bne	13cc0 <table_set@@Base+0x244>
   13cac:	mov	r0, #8
   13cb0:	bl	11ecc <malloc@plt>
   13cb4:	cmp	r0, #0
   13cb8:	str	r0, [r5]
   13cbc:	beq	13d7c <table_set@@Base+0x300>
   13cc0:	ldr	r1, [r8]
   13cc4:	ldr	r2, [r8, #4]
   13cc8:	str	r2, [r0, #4]
   13ccc:	str	r1, [r0]
   13cd0:	b	13d64 <table_set@@Base+0x2e8>
   13cd4:	ldr	r0, [r0, #4]
   13cd8:	cmp	r0, #19
   13cdc:	beq	13d3c <table_set@@Base+0x2c0>
   13ce0:	b	13d7c <table_set@@Base+0x300>
   13ce4:	ldr	r0, [r0, #4]
   13ce8:	cmp	r0, #20
   13cec:	beq	13d3c <table_set@@Base+0x2c0>
   13cf0:	b	13d7c <table_set@@Base+0x300>
   13cf4:	ldr	r0, [r0, #4]
   13cf8:	cmp	r0, #21
   13cfc:	bne	13d7c <table_set@@Base+0x300>
   13d00:	mov	r0, r8
   13d04:	bl	11ef0 <strlen@plt>
   13d08:	ldr	r2, [r5]
   13d0c:	add	r1, r0, #1
   13d10:	mov	r0, r2
   13d14:	bl	11eb4 <realloc@plt>
   13d18:	cmp	r0, #0
   13d1c:	str	r0, [r5]
   13d20:	beq	13d7c <table_set@@Base+0x300>
   13d24:	mov	r1, r8
   13d28:	bl	11ec0 <strcpy@plt>
   13d2c:	b	13d64 <table_set@@Base+0x2e8>
   13d30:	ldr	r0, [r0, #4]
   13d34:	cmp	r0, #22
   13d38:	bne	13d7c <table_set@@Base+0x300>
   13d3c:	ldr	r0, [r5]
   13d40:	cmp	r0, #0
   13d44:	bne	13d5c <table_set@@Base+0x2e0>
   13d48:	mov	r0, #1
   13d4c:	bl	11ecc <malloc@plt>
   13d50:	cmp	r0, #0
   13d54:	str	r0, [r5]
   13d58:	beq	13d7c <table_set@@Base+0x300>
   13d5c:	ldrb	r1, [r8]
   13d60:	strb	r1, [r0]
   13d64:	mov	r0, r6
   13d68:	mov	r1, r9
   13d6c:	mov	r2, r4
   13d70:	mov	r3, #1
   13d74:	bl	129c4 <table_notify@@Base>
   13d78:	mov	r7, #0
   13d7c:	mov	r0, r7
   13d80:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13d84:	ldr	r0, [r0, #4]
   13d88:	cmp	r0, #23
   13d8c:	bne	13d7c <table_set@@Base+0x300>
   13d90:	str	r8, [r5]
   13d94:	b	13d64 <table_set@@Base+0x2e8>

00013d98 <table_set_bool@@Base>:
   13d98:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13d9c:	add	fp, sp, #24
   13da0:	mov	r8, r3
   13da4:	mov	r4, r2
   13da8:	mov	r9, r1
   13dac:	mov	r6, r0
   13db0:	bl	14970 <table_get_cell_ptr@@Base>
   13db4:	mov	r5, r0
   13db8:	mov	r0, r6
   13dbc:	mov	r1, r4
   13dc0:	bl	12a98 <table_get_col_ptr@@Base>
   13dc4:	ldr	r0, [r0, #4]
   13dc8:	mvn	r7, #0
   13dcc:	cmp	r0, #22
   13dd0:	bne	13e10 <table_set_bool@@Base+0x78>
   13dd4:	ldr	r0, [r5]
   13dd8:	cmp	r0, #0
   13ddc:	bne	13df4 <table_set_bool@@Base+0x5c>
   13de0:	mov	r0, #1
   13de4:	bl	11ecc <malloc@plt>
   13de8:	cmp	r0, #0
   13dec:	str	r0, [r5]
   13df0:	beq	13e10 <table_set_bool@@Base+0x78>
   13df4:	strb	r8, [r0]
   13df8:	mov	r0, r6
   13dfc:	mov	r1, r9
   13e00:	mov	r2, r4
   13e04:	mov	r3, #1
   13e08:	bl	129c4 <table_notify@@Base>
   13e0c:	mov	r7, #0
   13e10:	mov	r0, r7
   13e14:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013e18 <table_set_int@@Base>:
   13e18:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13e1c:	add	fp, sp, #24
   13e20:	mov	r8, r3
   13e24:	mov	r4, r2
   13e28:	mov	r5, r1
   13e2c:	mov	r6, r0
   13e30:	bl	14970 <table_get_cell_ptr@@Base>
   13e34:	mov	r9, r0
   13e38:	mov	r0, r6
   13e3c:	mov	r1, r4
   13e40:	bl	12a98 <table_get_col_ptr@@Base>
   13e44:	ldr	r0, [r0, #4]
   13e48:	mvn	r7, #0
   13e4c:	cmp	r0, #0
   13e50:	bne	13e90 <table_set_int@@Base+0x78>
   13e54:	ldr	r0, [r9]
   13e58:	cmp	r0, #0
   13e5c:	bne	13e74 <table_set_int@@Base+0x5c>
   13e60:	mov	r0, #4
   13e64:	bl	11ecc <malloc@plt>
   13e68:	cmp	r0, #0
   13e6c:	str	r0, [r9]
   13e70:	beq	13e90 <table_set_int@@Base+0x78>
   13e74:	str	r8, [r0]
   13e78:	mov	r0, r6
   13e7c:	mov	r1, r5
   13e80:	mov	r2, r4
   13e84:	mov	r3, #1
   13e88:	bl	129c4 <table_notify@@Base>
   13e8c:	mov	r7, #0
   13e90:	mov	r0, r7
   13e94:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013e98 <table_set_uint@@Base>:
   13e98:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13e9c:	add	fp, sp, #24
   13ea0:	mov	r8, r3
   13ea4:	mov	r4, r2
   13ea8:	mov	r5, r1
   13eac:	mov	r6, r0
   13eb0:	bl	14970 <table_get_cell_ptr@@Base>
   13eb4:	mov	r9, r0
   13eb8:	mov	r0, r6
   13ebc:	mov	r1, r4
   13ec0:	bl	12a98 <table_get_col_ptr@@Base>
   13ec4:	ldr	r0, [r0, #4]
   13ec8:	mvn	r7, #0
   13ecc:	cmp	r0, #1
   13ed0:	bne	13f10 <table_set_uint@@Base+0x78>
   13ed4:	ldr	r0, [r9]
   13ed8:	cmp	r0, #0
   13edc:	bne	13ef4 <table_set_uint@@Base+0x5c>
   13ee0:	mov	r0, #4
   13ee4:	bl	11ecc <malloc@plt>
   13ee8:	cmp	r0, #0
   13eec:	str	r0, [r9]
   13ef0:	beq	13f10 <table_set_uint@@Base+0x78>
   13ef4:	str	r8, [r0]
   13ef8:	mov	r0, r6
   13efc:	mov	r1, r5
   13f00:	mov	r2, r4
   13f04:	mov	r3, #1
   13f08:	bl	129c4 <table_notify@@Base>
   13f0c:	mov	r7, #0
   13f10:	mov	r0, r7
   13f14:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013f18 <table_set_int8@@Base>:
   13f18:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13f1c:	add	fp, sp, #24
   13f20:	mov	r8, r3
   13f24:	mov	r4, r2
   13f28:	mov	r9, r1
   13f2c:	mov	r6, r0
   13f30:	bl	14970 <table_get_cell_ptr@@Base>
   13f34:	mov	r5, r0
   13f38:	mov	r0, r6
   13f3c:	mov	r1, r4
   13f40:	bl	12a98 <table_get_col_ptr@@Base>
   13f44:	ldr	r0, [r0, #4]
   13f48:	mvn	r7, #0
   13f4c:	cmp	r0, #2
   13f50:	bne	13f90 <table_set_int8@@Base+0x78>
   13f54:	ldr	r0, [r5]
   13f58:	cmp	r0, #0
   13f5c:	bne	13f74 <table_set_int8@@Base+0x5c>
   13f60:	mov	r0, #1
   13f64:	bl	11ecc <malloc@plt>
   13f68:	cmp	r0, #0
   13f6c:	str	r0, [r5]
   13f70:	beq	13f90 <table_set_int8@@Base+0x78>
   13f74:	strb	r8, [r0]
   13f78:	mov	r0, r6
   13f7c:	mov	r1, r9
   13f80:	mov	r2, r4
   13f84:	mov	r3, #1
   13f88:	bl	129c4 <table_notify@@Base>
   13f8c:	mov	r7, #0
   13f90:	mov	r0, r7
   13f94:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013f98 <table_set_uint8@@Base>:
   13f98:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13f9c:	add	fp, sp, #24
   13fa0:	mov	r8, r3
   13fa4:	mov	r4, r2
   13fa8:	mov	r9, r1
   13fac:	mov	r6, r0
   13fb0:	bl	14970 <table_get_cell_ptr@@Base>
   13fb4:	mov	r5, r0
   13fb8:	mov	r0, r6
   13fbc:	mov	r1, r4
   13fc0:	bl	12a98 <table_get_col_ptr@@Base>
   13fc4:	ldr	r0, [r0, #4]
   13fc8:	mvn	r7, #0
   13fcc:	cmp	r0, #3
   13fd0:	bne	14010 <table_set_uint8@@Base+0x78>
   13fd4:	ldr	r0, [r5]
   13fd8:	cmp	r0, #0
   13fdc:	bne	13ff4 <table_set_uint8@@Base+0x5c>
   13fe0:	mov	r0, #1
   13fe4:	bl	11ecc <malloc@plt>
   13fe8:	cmp	r0, #0
   13fec:	str	r0, [r5]
   13ff0:	beq	14010 <table_set_uint8@@Base+0x78>
   13ff4:	strb	r8, [r0]
   13ff8:	mov	r0, r6
   13ffc:	mov	r1, r9
   14000:	mov	r2, r4
   14004:	mov	r3, #1
   14008:	bl	129c4 <table_notify@@Base>
   1400c:	mov	r7, #0
   14010:	mov	r0, r7
   14014:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014018 <table_set_int16@@Base>:
   14018:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1401c:	add	fp, sp, #24
   14020:	mov	r8, r3
   14024:	mov	r4, r2
   14028:	mov	r9, r1
   1402c:	mov	r6, r0
   14030:	bl	14970 <table_get_cell_ptr@@Base>
   14034:	mov	r5, r0
   14038:	mov	r0, r6
   1403c:	mov	r1, r4
   14040:	bl	12a98 <table_get_col_ptr@@Base>
   14044:	ldr	r0, [r0, #4]
   14048:	mvn	r7, #0
   1404c:	cmp	r0, #4
   14050:	bne	14090 <table_set_int16@@Base+0x78>
   14054:	ldr	r0, [r5]
   14058:	cmp	r0, #0
   1405c:	bne	14074 <table_set_int16@@Base+0x5c>
   14060:	mov	r0, #2
   14064:	bl	11ecc <malloc@plt>
   14068:	cmp	r0, #0
   1406c:	str	r0, [r5]
   14070:	beq	14090 <table_set_int16@@Base+0x78>
   14074:	strh	r8, [r0]
   14078:	mov	r0, r6
   1407c:	mov	r1, r9
   14080:	mov	r2, r4
   14084:	mov	r3, #1
   14088:	bl	129c4 <table_notify@@Base>
   1408c:	mov	r7, #0
   14090:	mov	r0, r7
   14094:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014098 <table_set_uint16@@Base>:
   14098:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1409c:	add	fp, sp, #24
   140a0:	mov	r8, r3
   140a4:	mov	r4, r2
   140a8:	mov	r9, r1
   140ac:	mov	r6, r0
   140b0:	bl	14970 <table_get_cell_ptr@@Base>
   140b4:	mov	r5, r0
   140b8:	mov	r0, r6
   140bc:	mov	r1, r4
   140c0:	bl	12a98 <table_get_col_ptr@@Base>
   140c4:	ldr	r0, [r0, #4]
   140c8:	mvn	r7, #0
   140cc:	cmp	r0, #5
   140d0:	bne	14110 <table_set_uint16@@Base+0x78>
   140d4:	ldr	r0, [r5]
   140d8:	cmp	r0, #0
   140dc:	bne	140f4 <table_set_uint16@@Base+0x5c>
   140e0:	mov	r0, #2
   140e4:	bl	11ecc <malloc@plt>
   140e8:	cmp	r0, #0
   140ec:	str	r0, [r5]
   140f0:	beq	14110 <table_set_uint16@@Base+0x78>
   140f4:	strh	r8, [r0]
   140f8:	mov	r0, r6
   140fc:	mov	r1, r9
   14100:	mov	r2, r4
   14104:	mov	r3, #1
   14108:	bl	129c4 <table_notify@@Base>
   1410c:	mov	r7, #0
   14110:	mov	r0, r7
   14114:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014118 <table_set_int32@@Base>:
   14118:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1411c:	add	fp, sp, #24
   14120:	mov	r8, r3
   14124:	mov	r4, r2
   14128:	mov	r5, r1
   1412c:	mov	r6, r0
   14130:	bl	14970 <table_get_cell_ptr@@Base>
   14134:	mov	r9, r0
   14138:	mov	r0, r6
   1413c:	mov	r1, r4
   14140:	bl	12a98 <table_get_col_ptr@@Base>
   14144:	ldr	r0, [r0, #4]
   14148:	mvn	r7, #0
   1414c:	cmp	r0, #6
   14150:	bne	14190 <table_set_int32@@Base+0x78>
   14154:	ldr	r0, [r9]
   14158:	cmp	r0, #0
   1415c:	bne	14174 <table_set_int32@@Base+0x5c>
   14160:	mov	r0, #4
   14164:	bl	11ecc <malloc@plt>
   14168:	cmp	r0, #0
   1416c:	str	r0, [r9]
   14170:	beq	14190 <table_set_int32@@Base+0x78>
   14174:	str	r8, [r0]
   14178:	mov	r0, r6
   1417c:	mov	r1, r5
   14180:	mov	r2, r4
   14184:	mov	r3, #1
   14188:	bl	129c4 <table_notify@@Base>
   1418c:	mov	r7, #0
   14190:	mov	r0, r7
   14194:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014198 <table_set_uint32@@Base>:
   14198:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1419c:	add	fp, sp, #24
   141a0:	mov	r8, r3
   141a4:	mov	r4, r2
   141a8:	mov	r5, r1
   141ac:	mov	r6, r0
   141b0:	bl	14970 <table_get_cell_ptr@@Base>
   141b4:	mov	r9, r0
   141b8:	mov	r0, r6
   141bc:	mov	r1, r4
   141c0:	bl	12a98 <table_get_col_ptr@@Base>
   141c4:	ldr	r0, [r0, #4]
   141c8:	mvn	r7, #0
   141cc:	cmp	r0, #7
   141d0:	bne	14210 <table_set_uint32@@Base+0x78>
   141d4:	ldr	r0, [r9]
   141d8:	cmp	r0, #0
   141dc:	bne	141f4 <table_set_uint32@@Base+0x5c>
   141e0:	mov	r0, #4
   141e4:	bl	11ecc <malloc@plt>
   141e8:	cmp	r0, #0
   141ec:	str	r0, [r9]
   141f0:	beq	14210 <table_set_uint32@@Base+0x78>
   141f4:	str	r8, [r0]
   141f8:	mov	r0, r6
   141fc:	mov	r1, r5
   14200:	mov	r2, r4
   14204:	mov	r3, #1
   14208:	bl	129c4 <table_notify@@Base>
   1420c:	mov	r7, #0
   14210:	mov	r0, r7
   14214:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014218 <table_set_int64@@Base>:
   14218:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1421c:	add	fp, sp, #24
   14220:	mov	r4, r2
   14224:	mov	r8, r1
   14228:	mov	r6, r0
   1422c:	bl	14970 <table_get_cell_ptr@@Base>
   14230:	mov	r5, r0
   14234:	mov	r0, r6
   14238:	mov	r1, r4
   1423c:	bl	12a98 <table_get_col_ptr@@Base>
   14240:	ldr	r0, [r0, #4]
   14244:	mvn	r7, #0
   14248:	cmp	r0, #8
   1424c:	bne	14298 <table_set_int64@@Base+0x80>
   14250:	ldr	r0, [r5]
   14254:	cmp	r0, #0
   14258:	bne	14270 <table_set_int64@@Base+0x58>
   1425c:	mov	r0, #8
   14260:	bl	11ecc <malloc@plt>
   14264:	cmp	r0, #0
   14268:	str	r0, [r5]
   1426c:	beq	14298 <table_set_int64@@Base+0x80>
   14270:	ldr	r1, [fp, #12]
   14274:	ldr	r2, [fp, #8]
   14278:	mov	r3, #1
   1427c:	str	r2, [r0]
   14280:	str	r1, [r0, #4]
   14284:	mov	r0, r6
   14288:	mov	r1, r8
   1428c:	mov	r2, r4
   14290:	bl	129c4 <table_notify@@Base>
   14294:	mov	r7, #0
   14298:	mov	r0, r7
   1429c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000142a0 <table_set_uint64@@Base>:
   142a0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   142a4:	add	fp, sp, #24
   142a8:	mov	r4, r2
   142ac:	mov	r8, r1
   142b0:	mov	r6, r0
   142b4:	bl	14970 <table_get_cell_ptr@@Base>
   142b8:	mov	r5, r0
   142bc:	mov	r0, r6
   142c0:	mov	r1, r4
   142c4:	bl	12a98 <table_get_col_ptr@@Base>
   142c8:	ldr	r0, [r0, #4]
   142cc:	mvn	r7, #0
   142d0:	cmp	r0, #9
   142d4:	bne	14320 <table_set_uint64@@Base+0x80>
   142d8:	ldr	r0, [r5]
   142dc:	cmp	r0, #0
   142e0:	bne	142f8 <table_set_uint64@@Base+0x58>
   142e4:	mov	r0, #8
   142e8:	bl	11ecc <malloc@plt>
   142ec:	cmp	r0, #0
   142f0:	str	r0, [r5]
   142f4:	beq	14320 <table_set_uint64@@Base+0x80>
   142f8:	ldr	r1, [fp, #12]
   142fc:	ldr	r2, [fp, #8]
   14300:	mov	r3, #1
   14304:	str	r2, [r0]
   14308:	str	r1, [r0, #4]
   1430c:	mov	r0, r6
   14310:	mov	r1, r8
   14314:	mov	r2, r4
   14318:	bl	129c4 <table_notify@@Base>
   1431c:	mov	r7, #0
   14320:	mov	r0, r7
   14324:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014328 <table_set_short@@Base>:
   14328:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1432c:	add	fp, sp, #24
   14330:	mov	r8, r3
   14334:	mov	r4, r2
   14338:	mov	r9, r1
   1433c:	mov	r6, r0
   14340:	bl	14970 <table_get_cell_ptr@@Base>
   14344:	mov	r5, r0
   14348:	mov	r0, r6
   1434c:	mov	r1, r4
   14350:	bl	12a98 <table_get_col_ptr@@Base>
   14354:	ldr	r0, [r0, #4]
   14358:	mvn	r7, #0
   1435c:	cmp	r0, #10
   14360:	bne	143a0 <table_set_short@@Base+0x78>
   14364:	ldr	r0, [r5]
   14368:	cmp	r0, #0
   1436c:	bne	14384 <table_set_short@@Base+0x5c>
   14370:	mov	r0, #2
   14374:	bl	11ecc <malloc@plt>
   14378:	cmp	r0, #0
   1437c:	str	r0, [r5]
   14380:	beq	143a0 <table_set_short@@Base+0x78>
   14384:	strh	r8, [r0]
   14388:	mov	r0, r6
   1438c:	mov	r1, r9
   14390:	mov	r2, r4
   14394:	mov	r3, #1
   14398:	bl	129c4 <table_notify@@Base>
   1439c:	mov	r7, #0
   143a0:	mov	r0, r7
   143a4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000143a8 <table_set_ushort@@Base>:
   143a8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   143ac:	add	fp, sp, #24
   143b0:	mov	r8, r3
   143b4:	mov	r4, r2
   143b8:	mov	r9, r1
   143bc:	mov	r6, r0
   143c0:	bl	14970 <table_get_cell_ptr@@Base>
   143c4:	mov	r5, r0
   143c8:	mov	r0, r6
   143cc:	mov	r1, r4
   143d0:	bl	12a98 <table_get_col_ptr@@Base>
   143d4:	ldr	r0, [r0, #4]
   143d8:	mvn	r7, #0
   143dc:	cmp	r0, #11
   143e0:	bne	14420 <table_set_ushort@@Base+0x78>
   143e4:	ldr	r0, [r5]
   143e8:	cmp	r0, #0
   143ec:	bne	14404 <table_set_ushort@@Base+0x5c>
   143f0:	mov	r0, #2
   143f4:	bl	11ecc <malloc@plt>
   143f8:	cmp	r0, #0
   143fc:	str	r0, [r5]
   14400:	beq	14420 <table_set_ushort@@Base+0x78>
   14404:	strh	r8, [r0]
   14408:	mov	r0, r6
   1440c:	mov	r1, r9
   14410:	mov	r2, r4
   14414:	mov	r3, #1
   14418:	bl	129c4 <table_notify@@Base>
   1441c:	mov	r7, #0
   14420:	mov	r0, r7
   14424:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014428 <table_set_long@@Base>:
   14428:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1442c:	add	fp, sp, #24
   14430:	mov	r8, r3
   14434:	mov	r4, r2
   14438:	mov	r5, r1
   1443c:	mov	r6, r0
   14440:	bl	14970 <table_get_cell_ptr@@Base>
   14444:	mov	r9, r0
   14448:	mov	r0, r6
   1444c:	mov	r1, r4
   14450:	bl	12a98 <table_get_col_ptr@@Base>
   14454:	ldr	r0, [r0, #4]
   14458:	mvn	r7, #0
   1445c:	cmp	r0, #12
   14460:	bne	144a0 <table_set_long@@Base+0x78>
   14464:	ldr	r0, [r9]
   14468:	cmp	r0, #0
   1446c:	bne	14484 <table_set_long@@Base+0x5c>
   14470:	mov	r0, #4
   14474:	bl	11ecc <malloc@plt>
   14478:	cmp	r0, #0
   1447c:	str	r0, [r9]
   14480:	beq	144a0 <table_set_long@@Base+0x78>
   14484:	str	r8, [r0]
   14488:	mov	r0, r6
   1448c:	mov	r1, r5
   14490:	mov	r2, r4
   14494:	mov	r3, #1
   14498:	bl	129c4 <table_notify@@Base>
   1449c:	mov	r7, #0
   144a0:	mov	r0, r7
   144a4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000144a8 <table_set_ulong@@Base>:
   144a8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   144ac:	add	fp, sp, #24
   144b0:	mov	r8, r3
   144b4:	mov	r4, r2
   144b8:	mov	r5, r1
   144bc:	mov	r6, r0
   144c0:	bl	14970 <table_get_cell_ptr@@Base>
   144c4:	mov	r9, r0
   144c8:	mov	r0, r6
   144cc:	mov	r1, r4
   144d0:	bl	12a98 <table_get_col_ptr@@Base>
   144d4:	ldr	r0, [r0, #4]
   144d8:	mvn	r7, #0
   144dc:	cmp	r0, #13
   144e0:	bne	14520 <table_set_ulong@@Base+0x78>
   144e4:	ldr	r0, [r9]
   144e8:	cmp	r0, #0
   144ec:	bne	14504 <table_set_ulong@@Base+0x5c>
   144f0:	mov	r0, #4
   144f4:	bl	11ecc <malloc@plt>
   144f8:	cmp	r0, #0
   144fc:	str	r0, [r9]
   14500:	beq	14520 <table_set_ulong@@Base+0x78>
   14504:	str	r8, [r0]
   14508:	mov	r0, r6
   1450c:	mov	r1, r5
   14510:	mov	r2, r4
   14514:	mov	r3, #1
   14518:	bl	129c4 <table_notify@@Base>
   1451c:	mov	r7, #0
   14520:	mov	r0, r7
   14524:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014528 <table_set_llong@@Base>:
   14528:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1452c:	add	fp, sp, #24
   14530:	mov	r4, r2
   14534:	mov	r8, r1
   14538:	mov	r6, r0
   1453c:	bl	14970 <table_get_cell_ptr@@Base>
   14540:	mov	r5, r0
   14544:	mov	r0, r6
   14548:	mov	r1, r4
   1454c:	bl	12a98 <table_get_col_ptr@@Base>
   14550:	ldr	r0, [r0, #4]
   14554:	mvn	r7, #0
   14558:	cmp	r0, #14
   1455c:	bne	145a8 <table_set_llong@@Base+0x80>
   14560:	ldr	r0, [r5]
   14564:	cmp	r0, #0
   14568:	bne	14580 <table_set_llong@@Base+0x58>
   1456c:	mov	r0, #8
   14570:	bl	11ecc <malloc@plt>
   14574:	cmp	r0, #0
   14578:	str	r0, [r5]
   1457c:	beq	145a8 <table_set_llong@@Base+0x80>
   14580:	ldr	r1, [fp, #12]
   14584:	ldr	r2, [fp, #8]
   14588:	mov	r3, #1
   1458c:	str	r2, [r0]
   14590:	str	r1, [r0, #4]
   14594:	mov	r0, r6
   14598:	mov	r1, r8
   1459c:	mov	r2, r4
   145a0:	bl	129c4 <table_notify@@Base>
   145a4:	mov	r7, #0
   145a8:	mov	r0, r7
   145ac:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000145b0 <table_set_ullong@@Base>:
   145b0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   145b4:	add	fp, sp, #24
   145b8:	mov	r4, r2
   145bc:	mov	r8, r1
   145c0:	mov	r6, r0
   145c4:	bl	14970 <table_get_cell_ptr@@Base>
   145c8:	mov	r5, r0
   145cc:	mov	r0, r6
   145d0:	mov	r1, r4
   145d4:	bl	12a98 <table_get_col_ptr@@Base>
   145d8:	ldr	r0, [r0, #4]
   145dc:	mvn	r7, #0
   145e0:	cmp	r0, #15
   145e4:	bne	14630 <table_set_ullong@@Base+0x80>
   145e8:	ldr	r0, [r5]
   145ec:	cmp	r0, #0
   145f0:	bne	14608 <table_set_ullong@@Base+0x58>
   145f4:	mov	r0, #8
   145f8:	bl	11ecc <malloc@plt>
   145fc:	cmp	r0, #0
   14600:	str	r0, [r5]
   14604:	beq	14630 <table_set_ullong@@Base+0x80>
   14608:	ldr	r1, [fp, #12]
   1460c:	ldr	r2, [fp, #8]
   14610:	mov	r3, #1
   14614:	str	r2, [r0]
   14618:	str	r1, [r0, #4]
   1461c:	mov	r0, r6
   14620:	mov	r1, r8
   14624:	mov	r2, r4
   14628:	bl	129c4 <table_notify@@Base>
   1462c:	mov	r7, #0
   14630:	mov	r0, r7
   14634:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014638 <table_set_float@@Base>:
   14638:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1463c:	add	fp, sp, #24
   14640:	vpush	{d8}
   14644:	vmov.f32	s16, s0
   14648:	mov	r4, r2
   1464c:	mov	r8, r1
   14650:	mov	r6, r0
   14654:	bl	14970 <table_get_cell_ptr@@Base>
   14658:	mov	r5, r0
   1465c:	mov	r0, r6
   14660:	mov	r1, r4
   14664:	bl	12a98 <table_get_col_ptr@@Base>
   14668:	ldr	r0, [r0, #4]
   1466c:	mvn	r7, #0
   14670:	cmp	r0, #16
   14674:	bne	146b8 <table_set_float@@Base+0x80>
   14678:	ldr	r0, [r5]
   1467c:	cmp	r0, #0
   14680:	bne	14698 <table_set_float@@Base+0x60>
   14684:	mov	r0, #4
   14688:	bl	11ecc <malloc@plt>
   1468c:	cmp	r0, #0
   14690:	str	r0, [r5]
   14694:	beq	146b8 <table_set_float@@Base+0x80>
   14698:	vmov	r1, s16
   1469c:	mov	r2, r4
   146a0:	mov	r3, #1
   146a4:	str	r1, [r0]
   146a8:	mov	r0, r6
   146ac:	mov	r1, r8
   146b0:	bl	129c4 <table_notify@@Base>
   146b4:	mov	r7, #0
   146b8:	mov	r0, r7
   146bc:	vpop	{d8}
   146c0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000146c4 <table_set_double@@Base>:
   146c4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   146c8:	add	fp, sp, #24
   146cc:	vpush	{d8}
   146d0:	vorr	d8, d0, d0
   146d4:	mov	r4, r2
   146d8:	mov	r5, r1
   146dc:	mov	r6, r0
   146e0:	bl	14970 <table_get_cell_ptr@@Base>
   146e4:	mov	r8, r0
   146e8:	mov	r0, r6
   146ec:	mov	r1, r4
   146f0:	bl	12a98 <table_get_col_ptr@@Base>
   146f4:	ldr	r0, [r0, #4]
   146f8:	mvn	r7, #0
   146fc:	cmp	r0, #17
   14700:	bne	14740 <table_set_double@@Base+0x7c>
   14704:	ldr	r0, [r8]
   14708:	cmp	r0, #0
   1470c:	bne	14724 <table_set_double@@Base+0x60>
   14710:	mov	r0, #8
   14714:	bl	11ecc <malloc@plt>
   14718:	cmp	r0, #0
   1471c:	str	r0, [r8]
   14720:	beq	14740 <table_set_double@@Base+0x7c>
   14724:	vst1.8	{d8}, [r0]
   14728:	mov	r0, r6
   1472c:	mov	r1, r5
   14730:	mov	r2, r4
   14734:	mov	r3, #1
   14738:	bl	129c4 <table_notify@@Base>
   1473c:	mov	r7, #0
   14740:	mov	r0, r7
   14744:	vpop	{d8}
   14748:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001474c <table_set_ldouble@@Base>:
   1474c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14750:	add	fp, sp, #24
   14754:	vpush	{d8}
   14758:	vorr	d8, d0, d0
   1475c:	mov	r4, r2
   14760:	mov	r5, r1
   14764:	mov	r6, r0
   14768:	bl	14970 <table_get_cell_ptr@@Base>
   1476c:	mov	r8, r0
   14770:	mov	r0, r6
   14774:	mov	r1, r4
   14778:	bl	12a98 <table_get_col_ptr@@Base>
   1477c:	ldr	r0, [r0, #4]
   14780:	mvn	r7, #0
   14784:	cmp	r0, #18
   14788:	bne	147c8 <table_set_ldouble@@Base+0x7c>
   1478c:	ldr	r0, [r8]
   14790:	cmp	r0, #0
   14794:	bne	147ac <table_set_ldouble@@Base+0x60>
   14798:	mov	r0, #8
   1479c:	bl	11ecc <malloc@plt>
   147a0:	cmp	r0, #0
   147a4:	str	r0, [r8]
   147a8:	beq	147c8 <table_set_ldouble@@Base+0x7c>
   147ac:	vst1.8	{d8}, [r0]
   147b0:	mov	r0, r6
   147b4:	mov	r1, r5
   147b8:	mov	r2, r4
   147bc:	mov	r3, #1
   147c0:	bl	129c4 <table_notify@@Base>
   147c4:	mov	r7, #0
   147c8:	mov	r0, r7
   147cc:	vpop	{d8}
   147d0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000147d4 <table_set_string@@Base>:
   147d4:	push	{fp, lr}
   147d8:	mov	fp, sp
   147dc:	sub	sp, sp, #8
   147e0:	mov	ip, #21
   147e4:	str	ip, [sp]
   147e8:	bl	13a7c <table_set@@Base>
   147ec:	mov	sp, fp
   147f0:	pop	{fp, pc}

000147f4 <table_set_char@@Base>:
   147f4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   147f8:	add	fp, sp, #24
   147fc:	mov	r8, r3
   14800:	mov	r4, r2
   14804:	mov	r9, r1
   14808:	mov	r6, r0
   1480c:	bl	14970 <table_get_cell_ptr@@Base>
   14810:	mov	r5, r0
   14814:	mov	r0, r6
   14818:	mov	r1, r4
   1481c:	bl	12a98 <table_get_col_ptr@@Base>
   14820:	ldr	r0, [r0, #4]
   14824:	mvn	r7, #0
   14828:	cmp	r0, #19
   1482c:	bne	1486c <table_set_char@@Base+0x78>
   14830:	ldr	r0, [r5]
   14834:	cmp	r0, #0
   14838:	bne	14850 <table_set_char@@Base+0x5c>
   1483c:	mov	r0, #1
   14840:	bl	11ecc <malloc@plt>
   14844:	cmp	r0, #0
   14848:	str	r0, [r5]
   1484c:	beq	1486c <table_set_char@@Base+0x78>
   14850:	strb	r8, [r0]
   14854:	mov	r0, r6
   14858:	mov	r1, r9
   1485c:	mov	r2, r4
   14860:	mov	r3, #1
   14864:	bl	129c4 <table_notify@@Base>
   14868:	mov	r7, #0
   1486c:	mov	r0, r7
   14870:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014874 <table_set_uchar@@Base>:
   14874:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14878:	add	fp, sp, #24
   1487c:	mov	r8, r3
   14880:	mov	r4, r2
   14884:	mov	r9, r1
   14888:	mov	r6, r0
   1488c:	bl	14970 <table_get_cell_ptr@@Base>
   14890:	mov	r5, r0
   14894:	mov	r0, r6
   14898:	mov	r1, r4
   1489c:	bl	12a98 <table_get_col_ptr@@Base>
   148a0:	ldr	r0, [r0, #4]
   148a4:	mvn	r7, #0
   148a8:	cmp	r0, #20
   148ac:	bne	148ec <table_set_uchar@@Base+0x78>
   148b0:	ldr	r0, [r5]
   148b4:	cmp	r0, #0
   148b8:	bne	148d0 <table_set_uchar@@Base+0x5c>
   148bc:	mov	r0, #1
   148c0:	bl	11ecc <malloc@plt>
   148c4:	cmp	r0, #0
   148c8:	str	r0, [r5]
   148cc:	beq	148ec <table_set_uchar@@Base+0x78>
   148d0:	strb	r8, [r0]
   148d4:	mov	r0, r6
   148d8:	mov	r1, r9
   148dc:	mov	r2, r4
   148e0:	mov	r3, #1
   148e4:	bl	129c4 <table_notify@@Base>
   148e8:	mov	r7, #0
   148ec:	mov	r0, r7
   148f0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000148f4 <table_set_ptr@@Base>:
   148f4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   148f8:	add	fp, sp, #24
   148fc:	mov	r8, r3
   14900:	mov	r4, r2
   14904:	mov	r5, r1
   14908:	mov	r6, r0
   1490c:	bl	14970 <table_get_cell_ptr@@Base>
   14910:	mov	r7, r0
   14914:	mov	r0, r6
   14918:	mov	r1, r4
   1491c:	bl	12a98 <table_get_col_ptr@@Base>
   14920:	ldr	r1, [r0, #4]
   14924:	mvn	r0, #0
   14928:	cmp	r1, #23
   1492c:	bne	1494c <table_set_ptr@@Base+0x58>
   14930:	mov	r0, r6
   14934:	mov	r1, r5
   14938:	mov	r2, r4
   1493c:	mov	r3, #1
   14940:	str	r8, [r7]
   14944:	bl	129c4 <table_notify@@Base>
   14948:	mov	r0, #0
   1494c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014950 <table_cell_init@@Base>:
   14950:	push	{r4, sl, fp, lr}
   14954:	add	fp, sp, #8
   14958:	mov	r4, r2
   1495c:	bl	137f8 <table_get_row_ptr@@Base>
   14960:	ldr	r0, [r0]
   14964:	mov	r1, #0
   14968:	str	r1, [r0, r4, lsl #2]
   1496c:	pop	{r4, sl, fp, pc}

00014970 <table_get_cell_ptr@@Base>:
   14970:	push	{r4, sl, fp, lr}
   14974:	add	fp, sp, #8
   14978:	mov	r4, r2
   1497c:	bl	137f8 <table_get_row_ptr@@Base>
   14980:	ldr	r0, [r0]
   14984:	add	r0, r0, r4, lsl #2
   14988:	pop	{r4, sl, fp, pc}

0001498c <table_cell_destroy@@Base>:
   1498c:	push	{r4, r5, r6, sl, fp, lr}
   14990:	add	fp, sp, #16
   14994:	mov	r5, r1
   14998:	mov	r1, r2
   1499c:	mov	r4, r2
   149a0:	mov	r6, r0
   149a4:	bl	12b38 <table_get_column_data_type@@Base>
   149a8:	cmp	r0, #23
   149ac:	popeq	{r4, r5, r6, sl, fp, pc}
   149b0:	mov	r0, r6
   149b4:	mov	r1, r5
   149b8:	bl	137f8 <table_get_row_ptr@@Base>
   149bc:	ldr	r0, [r0]
   149c0:	ldr	r0, [r0, r4, lsl #2]
   149c4:	cmp	r0, #0
   149c8:	beq	149d4 <table_cell_destroy@@Base+0x48>
   149cc:	pop	{r4, r5, r6, sl, fp, lr}
   149d0:	b	11ea8 <free@plt>
   149d4:	pop	{r4, r5, r6, sl, fp, pc}

000149d8 <table_cell_to_buffer@@Base>:
   149d8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   149dc:	add	fp, sp, #24
   149e0:	sub	sp, sp, #8
   149e4:	mov	r7, r1
   149e8:	mov	r1, r2
   149ec:	mov	r5, r3
   149f0:	mov	r6, r2
   149f4:	mov	r4, r0
   149f8:	bl	12b38 <table_get_column_data_type@@Base>
   149fc:	cmp	r0, #23
   14a00:	bhi	14cf4 <table_cell_to_buffer@@Base+0x31c>
   14a04:	add	r1, pc, #8
   14a08:	ldr	r8, [fp, #8]
   14a0c:	ldr	r0, [r1, r0, lsl #2]
   14a10:	add	pc, r1, r0
   14a14:	andeq	r0, r0, r0, rrx
   14a18:	andeq	r0, r0, r4, ror r0
   14a1c:	andeq	r0, r0, r8, lsl #1
   14a20:	muleq	r0, ip, r0
   14a24:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   14a28:	andeq	r0, r0, r4, asr #1
   14a2c:	ldrdeq	r0, [r0], -r8
   14a30:	andeq	r0, r0, ip, ror #1
   14a34:	andeq	r0, r0, ip, lsl #2
   14a38:	andeq	r0, r0, r0, lsr #2
   14a3c:	andeq	r0, r0, r4, lsr r1
   14a40:	andeq	r0, r0, r4, asr r1
   14a44:	andeq	r0, r0, r4, ror r1
   14a48:	muleq	r0, r4, r1
   14a4c:			; <UNDEFINED> instruction: 0x000001b4
   14a50:	ldrdeq	r0, [r0], -r4
   14a54:	strdeq	r0, [r0], -r4
   14a58:	andeq	r0, r0, r8, lsl r2
   14a5c:	andeq	r0, r0, r8, lsr r2
   14a60:	andeq	r0, r0, r4, ror #4
   14a64:	andeq	r0, r0, r8, ror r2
   14a68:	muleq	r0, r8, r2
   14a6c:			; <UNDEFINED> instruction: 0x000002b8
   14a70:	andeq	r0, r0, ip, ror #5
   14a74:	mov	r0, r4
   14a78:	mov	r1, r7
   14a7c:	mov	r2, r6
   14a80:	bl	135b4 <table_get_int@@Base>
   14a84:	b	14cdc <table_cell_to_buffer@@Base+0x304>
   14a88:	mov	r0, r4
   14a8c:	mov	r1, r7
   14a90:	mov	r2, r6
   14a94:	bl	135cc <table_get_uint@@Base>
   14a98:	b	14b10 <table_cell_to_buffer@@Base+0x138>
   14a9c:	mov	r0, r4
   14aa0:	mov	r1, r7
   14aa4:	mov	r2, r6
   14aa8:	bl	135e4 <table_get_int8@@Base>
   14aac:	b	14cdc <table_cell_to_buffer@@Base+0x304>
   14ab0:	mov	r0, r4
   14ab4:	mov	r1, r7
   14ab8:	mov	r2, r6
   14abc:	bl	135fc <table_get_uint8@@Base>
   14ac0:	b	14b10 <table_cell_to_buffer@@Base+0x138>
   14ac4:	mov	r0, r4
   14ac8:	mov	r1, r7
   14acc:	mov	r2, r6
   14ad0:	bl	13614 <table_get_int16@@Base>
   14ad4:	b	14cdc <table_cell_to_buffer@@Base+0x304>
   14ad8:	mov	r0, r4
   14adc:	mov	r1, r7
   14ae0:	mov	r2, r6
   14ae4:	bl	1362c <table_get_uint16@@Base>
   14ae8:	b	14b10 <table_cell_to_buffer@@Base+0x138>
   14aec:	mov	r0, r4
   14af0:	mov	r1, r7
   14af4:	mov	r2, r6
   14af8:	bl	13644 <table_get_int32@@Base>
   14afc:	b	14cdc <table_cell_to_buffer@@Base+0x304>
   14b00:	mov	r0, r4
   14b04:	mov	r1, r7
   14b08:	mov	r2, r6
   14b0c:	bl	1365c <table_get_uint32@@Base>
   14b10:	ldr	r2, [pc, #524]	; 14d24 <table_cell_to_buffer@@Base+0x34c>
   14b14:	mov	r3, r0
   14b18:	add	r2, pc, r2
   14b1c:	b	14ce8 <table_cell_to_buffer@@Base+0x310>
   14b20:	mov	r0, r4
   14b24:	mov	r1, r7
   14b28:	mov	r2, r6
   14b2c:	bl	13674 <table_get_int64@@Base>
   14b30:	b	14bd8 <table_cell_to_buffer@@Base+0x200>
   14b34:	mov	r0, r4
   14b38:	mov	r1, r7
   14b3c:	mov	r2, r6
   14b40:	bl	1368c <table_get_uint64@@Base>
   14b44:	b	14bf8 <table_cell_to_buffer@@Base+0x220>
   14b48:	mov	r0, r4
   14b4c:	mov	r1, r7
   14b50:	mov	r2, r6
   14b54:	bl	136a4 <table_get_short@@Base>
   14b58:	ldr	r2, [pc, #464]	; 14d30 <table_cell_to_buffer@@Base+0x358>
   14b5c:	mov	r3, r0
   14b60:	add	r2, pc, r2
   14b64:	b	14ce8 <table_cell_to_buffer@@Base+0x310>
   14b68:	mov	r0, r4
   14b6c:	mov	r1, r7
   14b70:	mov	r2, r6
   14b74:	bl	136bc <table_get_ushort@@Base>
   14b78:	ldr	r2, [pc, #436]	; 14d34 <table_cell_to_buffer@@Base+0x35c>
   14b7c:	mov	r3, r0
   14b80:	add	r2, pc, r2
   14b84:	b	14ce8 <table_cell_to_buffer@@Base+0x310>
   14b88:	mov	r0, r4
   14b8c:	mov	r1, r7
   14b90:	mov	r2, r6
   14b94:	bl	136d4 <table_get_long@@Base>
   14b98:	ldr	r2, [pc, #408]	; 14d38 <table_cell_to_buffer@@Base+0x360>
   14b9c:	mov	r3, r0
   14ba0:	add	r2, pc, r2
   14ba4:	b	14ce8 <table_cell_to_buffer@@Base+0x310>
   14ba8:	mov	r0, r4
   14bac:	mov	r1, r7
   14bb0:	mov	r2, r6
   14bb4:	bl	136ec <table_get_ulong@@Base>
   14bb8:	ldr	r2, [pc, #380]	; 14d3c <table_cell_to_buffer@@Base+0x364>
   14bbc:	mov	r3, r0
   14bc0:	add	r2, pc, r2
   14bc4:	b	14ce8 <table_cell_to_buffer@@Base+0x310>
   14bc8:	mov	r0, r4
   14bcc:	mov	r1, r7
   14bd0:	mov	r2, r6
   14bd4:	bl	13704 <table_get_llong@@Base>
   14bd8:	stm	sp, {r0, r1}
   14bdc:	ldr	r2, [pc, #324]	; 14d28 <table_cell_to_buffer@@Base+0x350>
   14be0:	add	r2, pc, r2
   14be4:	b	14c68 <table_cell_to_buffer@@Base+0x290>
   14be8:	mov	r0, r4
   14bec:	mov	r1, r7
   14bf0:	mov	r2, r6
   14bf4:	bl	1371c <table_get_ullong@@Base>
   14bf8:	stm	sp, {r0, r1}
   14bfc:	ldr	r2, [pc, #296]	; 14d2c <table_cell_to_buffer@@Base+0x354>
   14c00:	add	r2, pc, r2
   14c04:	b	14c68 <table_cell_to_buffer@@Base+0x290>
   14c08:	mov	r0, r4
   14c0c:	mov	r1, r7
   14c10:	mov	r2, r6
   14c14:	bl	13734 <table_get_float@@Base>
   14c18:	vcvt.f64.f32	d16, s0
   14c1c:	vstr	d16, [sp]
   14c20:	ldr	r2, [pc, #284]	; 14d44 <table_cell_to_buffer@@Base+0x36c>
   14c24:	add	r2, pc, r2
   14c28:	b	14c68 <table_cell_to_buffer@@Base+0x290>
   14c2c:	mov	r0, r4
   14c30:	mov	r1, r7
   14c34:	mov	r2, r6
   14c38:	bl	1374c <table_get_double@@Base>
   14c3c:	vstr	d0, [sp]
   14c40:	ldr	r2, [pc, #256]	; 14d48 <table_cell_to_buffer@@Base+0x370>
   14c44:	add	r2, pc, r2
   14c48:	b	14c68 <table_cell_to_buffer@@Base+0x290>
   14c4c:	mov	r0, r4
   14c50:	mov	r1, r7
   14c54:	mov	r2, r6
   14c58:	bl	13764 <table_get_ldouble@@Base>
   14c5c:	vstr	d0, [sp]
   14c60:	ldr	r2, [pc, #228]	; 14d4c <table_cell_to_buffer@@Base+0x374>
   14c64:	add	r2, pc, r2
   14c68:	mov	r0, r5
   14c6c:	mov	r1, r8
   14c70:	bl	11efc <snprintf@plt>
   14c74:	b	14cf4 <table_cell_to_buffer@@Base+0x31c>
   14c78:	mov	r0, r4
   14c7c:	mov	r1, r7
   14c80:	mov	r2, r6
   14c84:	bl	1377c <table_get_char@@Base>
   14c88:	b	14c9c <table_cell_to_buffer@@Base+0x2c4>
   14c8c:	mov	r0, r4
   14c90:	mov	r1, r7
   14c94:	mov	r2, r6
   14c98:	bl	13794 <table_get_uchar@@Base>
   14c9c:	ldr	r2, [pc, #172]	; 14d50 <table_cell_to_buffer@@Base+0x378>
   14ca0:	mov	r3, r0
   14ca4:	add	r2, pc, r2
   14ca8:	b	14ce8 <table_cell_to_buffer@@Base+0x310>
   14cac:	mov	r0, r4
   14cb0:	mov	r1, r7
   14cb4:	mov	r2, r6
   14cb8:	bl	137ac <table_get_string@@Base>
   14cbc:	ldr	r2, [pc, #124]	; 14d40 <table_cell_to_buffer@@Base+0x368>
   14cc0:	mov	r3, r0
   14cc4:	add	r2, pc, r2
   14cc8:	b	14ce8 <table_cell_to_buffer@@Base+0x310>
   14ccc:	mov	r0, r4
   14cd0:	mov	r1, r7
   14cd4:	mov	r2, r6
   14cd8:	bl	1359c <table_get_bool@@Base>
   14cdc:	ldr	r2, [pc, #60]	; 14d20 <table_cell_to_buffer@@Base+0x348>
   14ce0:	mov	r3, r0
   14ce4:	add	r2, pc, r2
   14ce8:	mov	r0, r5
   14cec:	mov	r1, r8
   14cf0:	bl	11efc <snprintf@plt>
   14cf4:	mov	r0, #0
   14cf8:	sub	sp, fp, #24
   14cfc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14d00:	mov	r0, r4
   14d04:	mov	r1, r7
   14d08:	mov	r2, r6
   14d0c:	bl	137c0 <table_get_ptr@@Base>
   14d10:	ldr	r2, [pc, #60]	; 14d54 <table_cell_to_buffer@@Base+0x37c>
   14d14:	mov	r3, r0
   14d18:	add	r2, pc, r2
   14d1c:	b	14ce8 <table_cell_to_buffer@@Base+0x310>
   14d20:	andeq	r0, r0, r6, lsr r8
   14d24:	andeq	r0, r0, r5, lsl #20
   14d28:	andeq	r0, r0, r0, asr #18
   14d2c:	andeq	r0, r0, r5, lsr #18
   14d30:	andeq	r0, r0, sl, asr #19
   14d34:	andeq	r0, r0, lr, lsr #19
   14d38:	muleq	r0, r2, r9
   14d3c:	andeq	r0, r0, r6, ror r9
   14d40:	andeq	r0, r0, r6, ror r8
   14d44:	andeq	r0, r0, r9, lsl r9
   14d48:	strdeq	r0, [r0], -ip
   14d4c:	andeq	r0, r0, r0, ror #17
   14d50:	andeq	r0, r0, r4, lsr #17
   14d54:	andeq	r0, r0, r3, lsr r8

00014d58 <table_cell_from_buffer@@Base>:
   14d58:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14d5c:	add	fp, sp, #24
   14d60:	sub	sp, sp, #264	; 0x108
   14d64:	mov	r5, r1
   14d68:	mov	r1, r2
   14d6c:	mov	r7, r3
   14d70:	mov	r4, r2
   14d74:	mov	r6, r0
   14d78:	bl	12b38 <table_get_column_data_type@@Base>
   14d7c:	cmp	r0, #23
   14d80:	bhi	153b4 <table_cell_from_buffer@@Base+0x65c>
   14d84:	add	r1, pc, #4
   14d88:	ldr	r0, [r1, r0, lsl #2]
   14d8c:	add	pc, r1, r0
   14d90:	andeq	r0, r0, r0, rrx
   14d94:	muleq	r0, ip, r0
   14d98:	ldrdeq	r0, [r0], -r8
   14d9c:	andeq	r0, r0, r4, lsl r1
   14da0:	andeq	r0, r0, r0, asr r1
   14da4:	andeq	r0, r0, ip, lsl #3
   14da8:	andeq	r0, r0, r8, asr #3
   14dac:	andeq	r0, r0, r4, lsl #4
   14db0:	andeq	r0, r0, r0, asr #4
   14db4:	andeq	r0, r0, r4, lsl #5
   14db8:	andeq	r0, r0, r8, asr #5
   14dbc:	andeq	r0, r0, r4, lsl #6
   14dc0:	andeq	r0, r0, r0, asr #6
   14dc4:	andeq	r0, r0, ip, ror r3
   14dc8:			; <UNDEFINED> instruction: 0x000003b8
   14dcc:	strdeq	r0, [r0], -ip
   14dd0:	andeq	r0, r0, r0, asr #8
   14dd4:	andeq	r0, r0, ip, ror r4
   14dd8:			; <UNDEFINED> instruction: 0x000004b8
   14ddc:	strdeq	r0, [r0], -r4
   14de0:	andeq	r0, r0, r0, lsr r5
   14de4:	andeq	r0, r0, ip, ror #10
   14de8:	andeq	r0, r0, r8, lsr #11
   14dec:	andeq	r0, r0, ip, ror #11
   14df0:	ldr	r1, [pc, #1480]	; 153c0 <table_cell_from_buffer@@Base+0x668>
   14df4:	add	r2, sp, #8
   14df8:	mov	r0, r7
   14dfc:	add	r1, pc, r1
   14e00:	bl	11f08 <__isoc99_sscanf@plt>
   14e04:	mov	r1, r0
   14e08:	mvn	r0, #0
   14e0c:	cmp	r1, #1
   14e10:	bne	153b8 <table_cell_from_buffer@@Base+0x660>
   14e14:	ldr	r3, [sp, #8]
   14e18:	mov	r0, r6
   14e1c:	mov	r1, r5
   14e20:	mov	r2, r4
   14e24:	bl	13e18 <table_set_int@@Base>
   14e28:	b	153b4 <table_cell_from_buffer@@Base+0x65c>
   14e2c:	ldr	r1, [pc, #1424]	; 153c4 <table_cell_from_buffer@@Base+0x66c>
   14e30:	add	r2, sp, #8
   14e34:	mov	r0, r7
   14e38:	add	r1, pc, r1
   14e3c:	bl	11f08 <__isoc99_sscanf@plt>
   14e40:	mov	r1, r0
   14e44:	mvn	r0, #0
   14e48:	cmp	r1, #1
   14e4c:	bne	153b8 <table_cell_from_buffer@@Base+0x660>
   14e50:	ldr	r3, [sp, #8]
   14e54:	mov	r0, r6
   14e58:	mov	r1, r5
   14e5c:	mov	r2, r4
   14e60:	bl	13e98 <table_set_uint@@Base>
   14e64:	b	153b4 <table_cell_from_buffer@@Base+0x65c>
   14e68:	ldr	r1, [pc, #1368]	; 153c8 <table_cell_from_buffer@@Base+0x670>
   14e6c:	add	r2, sp, #8
   14e70:	mov	r0, r7
   14e74:	add	r1, pc, r1
   14e78:	bl	11f08 <__isoc99_sscanf@plt>
   14e7c:	mov	r1, r0
   14e80:	mvn	r0, #0
   14e84:	cmp	r1, #1
   14e88:	bne	153b8 <table_cell_from_buffer@@Base+0x660>
   14e8c:	ldrsb	r3, [sp, #8]
   14e90:	mov	r0, r6
   14e94:	mov	r1, r5
   14e98:	mov	r2, r4
   14e9c:	bl	13f18 <table_set_int8@@Base>
   14ea0:	b	153b4 <table_cell_from_buffer@@Base+0x65c>
   14ea4:	ldr	r1, [pc, #1312]	; 153cc <table_cell_from_buffer@@Base+0x674>
   14ea8:	add	r2, sp, #8
   14eac:	mov	r0, r7
   14eb0:	add	r1, pc, r1
   14eb4:	bl	11f08 <__isoc99_sscanf@plt>
   14eb8:	mov	r1, r0
   14ebc:	mvn	r0, #0
   14ec0:	cmp	r1, #1
   14ec4:	bne	153b8 <table_cell_from_buffer@@Base+0x660>
   14ec8:	ldrb	r3, [sp, #8]
   14ecc:	mov	r0, r6
   14ed0:	mov	r1, r5
   14ed4:	mov	r2, r4
   14ed8:	bl	13f98 <table_set_uint8@@Base>
   14edc:	b	153b4 <table_cell_from_buffer@@Base+0x65c>
   14ee0:	ldr	r1, [pc, #1256]	; 153d0 <table_cell_from_buffer@@Base+0x678>
   14ee4:	add	r2, sp, #8
   14ee8:	mov	r0, r7
   14eec:	add	r1, pc, r1
   14ef0:	bl	11f08 <__isoc99_sscanf@plt>
   14ef4:	mov	r1, r0
   14ef8:	mvn	r0, #0
   14efc:	cmp	r1, #1
   14f00:	bne	153b8 <table_cell_from_buffer@@Base+0x660>
   14f04:	ldrsh	r3, [sp, #8]
   14f08:	mov	r0, r6
   14f0c:	mov	r1, r5
   14f10:	mov	r2, r4
   14f14:	bl	14018 <table_set_int16@@Base>
   14f18:	b	153b4 <table_cell_from_buffer@@Base+0x65c>
   14f1c:	ldr	r1, [pc, #1200]	; 153d4 <table_cell_from_buffer@@Base+0x67c>
   14f20:	add	r2, sp, #8
   14f24:	mov	r0, r7
   14f28:	add	r1, pc, r1
   14f2c:	bl	11f08 <__isoc99_sscanf@plt>
   14f30:	mov	r1, r0
   14f34:	mvn	r0, #0
   14f38:	cmp	r1, #1
   14f3c:	bne	153b8 <table_cell_from_buffer@@Base+0x660>
   14f40:	ldrh	r3, [sp, #8]
   14f44:	mov	r0, r6
   14f48:	mov	r1, r5
   14f4c:	mov	r2, r4
   14f50:	bl	14098 <table_set_uint16@@Base>
   14f54:	b	153b4 <table_cell_from_buffer@@Base+0x65c>
   14f58:	ldr	r1, [pc, #1144]	; 153d8 <table_cell_from_buffer@@Base+0x680>
   14f5c:	add	r2, sp, #8
   14f60:	mov	r0, r7
   14f64:	add	r1, pc, r1
   14f68:	bl	11f08 <__isoc99_sscanf@plt>
   14f6c:	mov	r1, r0
   14f70:	mvn	r0, #0
   14f74:	cmp	r1, #1
   14f78:	bne	153b8 <table_cell_from_buffer@@Base+0x660>
   14f7c:	ldr	r3, [sp, #8]
   14f80:	mov	r0, r6
   14f84:	mov	r1, r5
   14f88:	mov	r2, r4
   14f8c:	bl	14118 <table_set_int32@@Base>
   14f90:	b	153b4 <table_cell_from_buffer@@Base+0x65c>
   14f94:	ldr	r1, [pc, #1088]	; 153dc <table_cell_from_buffer@@Base+0x684>
   14f98:	add	r2, sp, #8
   14f9c:	mov	r0, r7
   14fa0:	add	r1, pc, r1
   14fa4:	bl	11f08 <__isoc99_sscanf@plt>
   14fa8:	mov	r1, r0
   14fac:	mvn	r0, #0
   14fb0:	cmp	r1, #1
   14fb4:	bne	153b8 <table_cell_from_buffer@@Base+0x660>
   14fb8:	ldr	r3, [sp, #8]
   14fbc:	mov	r0, r6
   14fc0:	mov	r1, r5
   14fc4:	mov	r2, r4
   14fc8:	bl	14198 <table_set_uint32@@Base>
   14fcc:	b	153b4 <table_cell_from_buffer@@Base+0x65c>
   14fd0:	ldr	r1, [pc, #1032]	; 153e0 <table_cell_from_buffer@@Base+0x688>
   14fd4:	add	r2, sp, #8
   14fd8:	mov	r0, r7
   14fdc:	add	r1, pc, r1
   14fe0:	bl	11f08 <__isoc99_sscanf@plt>
   14fe4:	mov	r1, r0
   14fe8:	mvn	r0, #0
   14fec:	cmp	r1, #1
   14ff0:	bne	153b8 <table_cell_from_buffer@@Base+0x660>
   14ff4:	ldr	r0, [sp, #8]
   14ff8:	ldr	r1, [sp, #12]
   14ffc:	mov	r2, r4
   15000:	stm	sp, {r0, r1}
   15004:	mov	r0, r6
   15008:	mov	r1, r5
   1500c:	bl	14218 <table_set_int64@@Base>
   15010:	b	153b4 <table_cell_from_buffer@@Base+0x65c>
   15014:	ldr	r1, [pc, #968]	; 153e4 <table_cell_from_buffer@@Base+0x68c>
   15018:	add	r2, sp, #8
   1501c:	mov	r0, r7
   15020:	add	r1, pc, r1
   15024:	bl	11f08 <__isoc99_sscanf@plt>
   15028:	mov	r1, r0
   1502c:	mvn	r0, #0
   15030:	cmp	r1, #1
   15034:	bne	153b8 <table_cell_from_buffer@@Base+0x660>
   15038:	ldr	r0, [sp, #8]
   1503c:	ldr	r1, [sp, #12]
   15040:	mov	r2, r4
   15044:	stm	sp, {r0, r1}
   15048:	mov	r0, r6
   1504c:	mov	r1, r5
   15050:	bl	142a0 <table_set_uint64@@Base>
   15054:	b	153b4 <table_cell_from_buffer@@Base+0x65c>
   15058:	ldr	r1, [pc, #904]	; 153e8 <table_cell_from_buffer@@Base+0x690>
   1505c:	add	r2, sp, #8
   15060:	mov	r0, r7
   15064:	add	r1, pc, r1
   15068:	bl	11f08 <__isoc99_sscanf@plt>
   1506c:	mov	r1, r0
   15070:	mvn	r0, #0
   15074:	cmp	r1, #1
   15078:	bne	153b8 <table_cell_from_buffer@@Base+0x660>
   1507c:	ldrsh	r3, [sp, #8]
   15080:	mov	r0, r6
   15084:	mov	r1, r5
   15088:	mov	r2, r4
   1508c:	bl	14328 <table_set_short@@Base>
   15090:	b	153b4 <table_cell_from_buffer@@Base+0x65c>
   15094:	ldr	r1, [pc, #848]	; 153ec <table_cell_from_buffer@@Base+0x694>
   15098:	add	r2, sp, #8
   1509c:	mov	r0, r7
   150a0:	add	r1, pc, r1
   150a4:	bl	11f08 <__isoc99_sscanf@plt>
   150a8:	mov	r1, r0
   150ac:	mvn	r0, #0
   150b0:	cmp	r1, #1
   150b4:	bne	153b8 <table_cell_from_buffer@@Base+0x660>
   150b8:	ldrh	r3, [sp, #8]
   150bc:	mov	r0, r6
   150c0:	mov	r1, r5
   150c4:	mov	r2, r4
   150c8:	bl	143a8 <table_set_ushort@@Base>
   150cc:	b	153b4 <table_cell_from_buffer@@Base+0x65c>
   150d0:	ldr	r1, [pc, #792]	; 153f0 <table_cell_from_buffer@@Base+0x698>
   150d4:	add	r2, sp, #8
   150d8:	mov	r0, r7
   150dc:	add	r1, pc, r1
   150e0:	bl	11f08 <__isoc99_sscanf@plt>
   150e4:	mov	r1, r0
   150e8:	mvn	r0, #0
   150ec:	cmp	r1, #1
   150f0:	bne	153b8 <table_cell_from_buffer@@Base+0x660>
   150f4:	ldr	r3, [sp, #8]
   150f8:	mov	r0, r6
   150fc:	mov	r1, r5
   15100:	mov	r2, r4
   15104:	bl	14428 <table_set_long@@Base>
   15108:	b	153b4 <table_cell_from_buffer@@Base+0x65c>
   1510c:	ldr	r1, [pc, #736]	; 153f4 <table_cell_from_buffer@@Base+0x69c>
   15110:	add	r2, sp, #8
   15114:	mov	r0, r7
   15118:	add	r1, pc, r1
   1511c:	bl	11f08 <__isoc99_sscanf@plt>
   15120:	mov	r1, r0
   15124:	mvn	r0, #0
   15128:	cmp	r1, #1
   1512c:	bne	153b8 <table_cell_from_buffer@@Base+0x660>
   15130:	ldr	r3, [sp, #8]
   15134:	mov	r0, r6
   15138:	mov	r1, r5
   1513c:	mov	r2, r4
   15140:	bl	144a8 <table_set_ulong@@Base>
   15144:	b	153b4 <table_cell_from_buffer@@Base+0x65c>
   15148:	ldr	r1, [pc, #680]	; 153f8 <table_cell_from_buffer@@Base+0x6a0>
   1514c:	add	r2, sp, #8
   15150:	mov	r0, r7
   15154:	add	r1, pc, r1
   15158:	bl	11f08 <__isoc99_sscanf@plt>
   1515c:	mov	r1, r0
   15160:	mvn	r0, #0
   15164:	cmp	r1, #1
   15168:	bne	153b8 <table_cell_from_buffer@@Base+0x660>
   1516c:	ldr	r0, [sp, #8]
   15170:	ldr	r1, [sp, #12]
   15174:	mov	r2, r4
   15178:	stm	sp, {r0, r1}
   1517c:	mov	r0, r6
   15180:	mov	r1, r5
   15184:	bl	14528 <table_set_llong@@Base>
   15188:	b	153b4 <table_cell_from_buffer@@Base+0x65c>
   1518c:	ldr	r1, [pc, #616]	; 153fc <table_cell_from_buffer@@Base+0x6a4>
   15190:	add	r2, sp, #8
   15194:	mov	r0, r7
   15198:	add	r1, pc, r1
   1519c:	bl	11f08 <__isoc99_sscanf@plt>
   151a0:	mov	r1, r0
   151a4:	mvn	r0, #0
   151a8:	cmp	r1, #1
   151ac:	bne	153b8 <table_cell_from_buffer@@Base+0x660>
   151b0:	ldr	r0, [sp, #8]
   151b4:	ldr	r1, [sp, #12]
   151b8:	mov	r2, r4
   151bc:	stm	sp, {r0, r1}
   151c0:	mov	r0, r6
   151c4:	mov	r1, r5
   151c8:	bl	145b0 <table_set_ullong@@Base>
   151cc:	b	153b4 <table_cell_from_buffer@@Base+0x65c>
   151d0:	ldr	r1, [pc, #556]	; 15404 <table_cell_from_buffer@@Base+0x6ac>
   151d4:	add	r2, sp, #8
   151d8:	mov	r0, r7
   151dc:	add	r1, pc, r1
   151e0:	bl	11f08 <__isoc99_sscanf@plt>
   151e4:	mov	r1, r0
   151e8:	mvn	r0, #0
   151ec:	cmp	r1, #1
   151f0:	bne	153b8 <table_cell_from_buffer@@Base+0x660>
   151f4:	vldr	s0, [sp, #8]
   151f8:	mov	r0, r6
   151fc:	mov	r1, r5
   15200:	mov	r2, r4
   15204:	bl	14638 <table_set_float@@Base>
   15208:	b	153b4 <table_cell_from_buffer@@Base+0x65c>
   1520c:	ldr	r1, [pc, #500]	; 15408 <table_cell_from_buffer@@Base+0x6b0>
   15210:	add	r2, sp, #8
   15214:	mov	r0, r7
   15218:	add	r1, pc, r1
   1521c:	bl	11f08 <__isoc99_sscanf@plt>
   15220:	mov	r1, r0
   15224:	mvn	r0, #0
   15228:	cmp	r1, #1
   1522c:	bne	153b8 <table_cell_from_buffer@@Base+0x660>
   15230:	vldr	d0, [sp, #8]
   15234:	mov	r0, r6
   15238:	mov	r1, r5
   1523c:	mov	r2, r4
   15240:	bl	146c4 <table_set_double@@Base>
   15244:	b	153b4 <table_cell_from_buffer@@Base+0x65c>
   15248:	ldr	r1, [pc, #444]	; 1540c <table_cell_from_buffer@@Base+0x6b4>
   1524c:	add	r2, sp, #8
   15250:	mov	r0, r7
   15254:	add	r1, pc, r1
   15258:	bl	11f08 <__isoc99_sscanf@plt>
   1525c:	mov	r1, r0
   15260:	mvn	r0, #0
   15264:	cmp	r1, #1
   15268:	bne	153b8 <table_cell_from_buffer@@Base+0x660>
   1526c:	vldr	d0, [sp, #8]
   15270:	mov	r0, r6
   15274:	mov	r1, r5
   15278:	mov	r2, r4
   1527c:	bl	1474c <table_set_ldouble@@Base>
   15280:	b	153b4 <table_cell_from_buffer@@Base+0x65c>
   15284:	ldr	r1, [pc, #392]	; 15414 <table_cell_from_buffer@@Base+0x6bc>
   15288:	add	r2, sp, #8
   1528c:	mov	r0, r7
   15290:	add	r1, pc, r1
   15294:	bl	11f08 <__isoc99_sscanf@plt>
   15298:	mov	r1, r0
   1529c:	mvn	r0, #0
   152a0:	cmp	r1, #1
   152a4:	bne	153b8 <table_cell_from_buffer@@Base+0x660>
   152a8:	ldrb	r3, [sp, #8]
   152ac:	mov	r0, r6
   152b0:	mov	r1, r5
   152b4:	mov	r2, r4
   152b8:	bl	147f4 <table_set_char@@Base>
   152bc:	b	153b4 <table_cell_from_buffer@@Base+0x65c>
   152c0:	ldr	r1, [pc, #336]	; 15418 <table_cell_from_buffer@@Base+0x6c0>
   152c4:	add	r2, sp, #8
   152c8:	mov	r0, r7
   152cc:	add	r1, pc, r1
   152d0:	bl	11f08 <__isoc99_sscanf@plt>
   152d4:	mov	r1, r0
   152d8:	mvn	r0, #0
   152dc:	cmp	r1, #1
   152e0:	bne	153b8 <table_cell_from_buffer@@Base+0x660>
   152e4:	ldrb	r3, [sp, #8]
   152e8:	mov	r0, r6
   152ec:	mov	r1, r5
   152f0:	mov	r2, r4
   152f4:	bl	14874 <table_set_uchar@@Base>
   152f8:	b	153b4 <table_cell_from_buffer@@Base+0x65c>
   152fc:	ldr	r1, [pc, #252]	; 15400 <table_cell_from_buffer@@Base+0x6a8>
   15300:	add	r2, sp, #8
   15304:	mov	r0, r7
   15308:	add	r1, pc, r1
   1530c:	bl	11f08 <__isoc99_sscanf@plt>
   15310:	mov	r1, r0
   15314:	mvn	r0, #0
   15318:	cmp	r1, #1
   1531c:	bne	153b8 <table_cell_from_buffer@@Base+0x660>
   15320:	add	r3, sp, #8
   15324:	mov	r0, r6
   15328:	mov	r1, r5
   1532c:	mov	r2, r4
   15330:	bl	147d4 <table_set_string@@Base>
   15334:	b	153b4 <table_cell_from_buffer@@Base+0x65c>
   15338:	ldr	r1, [pc, #208]	; 15410 <table_cell_from_buffer@@Base+0x6b8>
   1533c:	add	r2, sp, #8
   15340:	mov	r0, r7
   15344:	add	r1, pc, r1
   15348:	bl	11f08 <__isoc99_sscanf@plt>
   1534c:	mov	r1, r0
   15350:	mvn	r0, #0
   15354:	cmp	r1, #1
   15358:	bne	153b8 <table_cell_from_buffer@@Base+0x660>
   1535c:	ldr	r3, [sp, #8]
   15360:	mov	r0, r6
   15364:	mov	r1, r5
   15368:	mov	r2, r4
   1536c:	cmp	r3, #0
   15370:	movwne	r3, #1
   15374:	bl	13d98 <table_set_bool@@Base>
   15378:	b	153b4 <table_cell_from_buffer@@Base+0x65c>
   1537c:	ldr	r1, [pc, #152]	; 1541c <table_cell_from_buffer@@Base+0x6c4>
   15380:	add	r2, sp, #8
   15384:	mov	r0, r7
   15388:	add	r1, pc, r1
   1538c:	bl	11f08 <__isoc99_sscanf@plt>
   15390:	mov	r1, r0
   15394:	mvn	r0, #0
   15398:	cmp	r1, #1
   1539c:	bne	153b8 <table_cell_from_buffer@@Base+0x660>
   153a0:	ldr	r3, [sp, #8]
   153a4:	mov	r0, r6
   153a8:	mov	r1, r5
   153ac:	mov	r2, r4
   153b0:	bl	148f4 <table_set_ptr@@Base>
   153b4:	mov	r0, #0
   153b8:	sub	sp, fp, #24
   153bc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   153c0:	andeq	r0, r0, lr, lsl r7
   153c4:	andeq	r0, r0, r5, ror #13
   153c8:	ldrdeq	r0, [r0], -sl
   153cc:	andeq	r0, r0, r3, lsr #13
   153d0:	andeq	r0, r0, lr, lsr r6
   153d4:	andeq	r0, r0, r6, lsl #12
   153d8:			; <UNDEFINED> instruction: 0x000005b6
   153dc:	andeq	r0, r0, sp, ror r5
   153e0:	andeq	r0, r0, r4, asr #10
   153e4:	andeq	r0, r0, r5, lsl #10
   153e8:	andeq	r0, r0, r6, asr #9
   153ec:	andeq	r0, r0, lr, lsl #9
   153f0:	andeq	r0, r0, r6, asr r4
   153f4:	andeq	r0, r0, lr, lsl r4
   153f8:	andeq	r0, r0, ip, asr #7
   153fc:	andeq	r0, r0, sp, lsl #7
   15400:	andeq	r0, r0, r2, lsr r2
   15404:	andeq	r0, r0, r1, ror #6
   15408:	andeq	r0, r0, r8, lsr #6
   1540c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   15410:	ldrdeq	r0, [r0], -r6
   15414:			; <UNDEFINED> instruction: 0x000002b8
   15418:	andeq	r0, r0, ip, ror r2
   1541c:	andeq	r0, r0, r3, asr #3

00015420 <table_cell_nullify@@Base>:
   15420:	push	{r4, r5, fp, lr}
   15424:	add	fp, sp, #8
   15428:	mov	r4, r2
   1542c:	bl	137f8 <table_get_row_ptr@@Base>
   15430:	ldr	r5, [r0]
   15434:	ldr	r0, [r5, r4, lsl #2]
   15438:	cmp	r0, #0
   1543c:	beq	1544c <table_cell_nullify@@Base+0x2c>
   15440:	bl	11ea8 <free@plt>
   15444:	mov	r0, #0
   15448:	str	r0, [r5, r4, lsl #2]
   1544c:	mov	r0, #0
   15450:	pop	{r4, r5, fp, pc}

00015454 <__libc_csu_init@@Base>:
   15454:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15458:	mov	r7, r0
   1545c:	ldr	r6, [pc, #72]	; 154ac <__libc_csu_init@@Base+0x58>
   15460:	ldr	r5, [pc, #72]	; 154b0 <__libc_csu_init@@Base+0x5c>
   15464:	add	r6, pc, r6
   15468:	add	r5, pc, r5
   1546c:	sub	r6, r6, r5
   15470:	mov	r8, r1
   15474:	mov	r9, r2
   15478:	bl	11e70 <strcmp@plt-0x20>
   1547c:	asrs	r6, r6, #2
   15480:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15484:	mov	r4, #0
   15488:	add	r4, r4, #1
   1548c:	ldr	r3, [r5], #4
   15490:	mov	r2, r9
   15494:	mov	r1, r8
   15498:	mov	r0, r7
   1549c:	blx	r3
   154a0:	cmp	r6, r4
   154a4:	bne	15488 <__libc_csu_init@@Base+0x34>
   154a8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   154ac:	andeq	r0, r1, r0, asr #20
   154b0:	andeq	r0, r1, r8, lsr sl

000154b4 <__libc_csu_fini@@Base>:
   154b4:	bx	lr

Disassembly of section .fini:

000154b8 <.fini>:
   154b8:	push	{r3, lr}
   154bc:	pop	{r3, pc}
