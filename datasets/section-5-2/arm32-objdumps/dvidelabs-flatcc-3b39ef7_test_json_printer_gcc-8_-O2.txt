
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/test_json_printer:     file format elf32-littlearm


Disassembly of section .init:

000123c4 <.init>:
   123c4:	push	{r3, lr}
   123c8:	bl	12624 <_start@@Base+0x3c>
   123cc:	pop	{r3, pc}

Disassembly of section .plt:

000123d0 <raise@plt-0x14>:
   123d0:	push	{lr}		; (str lr, [sp, #-4]!)
   123d4:	ldr	lr, [pc, #4]	; 123e0 <raise@plt-0x4>
   123d8:	add	lr, pc, lr
   123dc:	ldr	pc, [lr, #8]!
   123e0:	andeq	r1, r2, r0, lsr #24

000123e4 <raise@plt>:
   123e4:	add	ip, pc, #0, 12
   123e8:	add	ip, ip, #135168	; 0x21000
   123ec:	ldr	pc, [ip, #3104]!	; 0xc20

000123f0 <strcmp@plt>:
   123f0:	add	ip, pc, #0, 12
   123f4:	add	ip, ip, #135168	; 0x21000
   123f8:	ldr	pc, [ip, #3096]!	; 0xc18

000123fc <fopen@plt>:
   123fc:	add	ip, pc, #0, 12
   12400:	add	ip, ip, #135168	; 0x21000
   12404:	ldr	pc, [ip, #3088]!	; 0xc10

00012408 <memmove@plt>:
   12408:	add	ip, pc, #0, 12
   1240c:	add	ip, ip, #135168	; 0x21000
   12410:	ldr	pc, [ip, #3080]!	; 0xc08

00012414 <free@plt>:
   12414:	add	ip, pc, #0, 12
   12418:	add	ip, ip, #135168	; 0x21000
   1241c:	ldr	pc, [ip, #3072]!	; 0xc00

00012420 <memcpy@plt>:
   12420:	add	ip, pc, #0, 12
   12424:	add	ip, ip, #135168	; 0x21000
   12428:	ldr	pc, [ip, #3064]!	; 0xbf8

0001242c <ftell@plt>:
   1242c:	add	ip, pc, #0, 12
   12430:	add	ip, ip, #135168	; 0x21000
   12434:	ldr	pc, [ip, #3056]!	; 0xbf0

00012438 <memcmp@plt>:
   12438:	add	ip, pc, #0, 12
   1243c:	add	ip, ip, #135168	; 0x21000
   12440:	ldr	pc, [ip, #3048]!	; 0xbe8

00012444 <rewind@plt>:
   12444:	add	ip, pc, #0, 12
   12448:	add	ip, ip, #135168	; 0x21000
   1244c:	ldr	pc, [ip, #3040]!	; 0xbe0

00012450 <realloc@plt>:
   12450:	add	ip, pc, #0, 12
   12454:	add	ip, ip, #135168	; 0x21000
   12458:	ldr	pc, [ip, #3032]!	; 0xbd8

0001245c <fwrite@plt>:
   1245c:	add	ip, pc, #0, 12
   12460:	add	ip, ip, #135168	; 0x21000
   12464:	ldr	pc, [ip, #3024]!	; 0xbd0

00012468 <fread@plt>:
   12468:	add	ip, pc, #0, 12
   1246c:	add	ip, ip, #135168	; 0x21000
   12470:	ldr	pc, [ip, #3016]!	; 0xbc8

00012474 <puts@plt>:
   12474:	add	ip, pc, #0, 12
   12478:	add	ip, ip, #135168	; 0x21000
   1247c:	ldr	pc, [ip, #3008]!	; 0xbc0

00012480 <malloc@plt>:
   12480:	add	ip, pc, #0, 12
   12484:	add	ip, ip, #135168	; 0x21000
   12488:	ldr	pc, [ip, #3000]!	; 0xbb8

0001248c <__libc_start_main@plt>:
   1248c:	add	ip, pc, #0, 12
   12490:	add	ip, ip, #135168	; 0x21000
   12494:	ldr	pc, [ip, #2992]!	; 0xbb0

00012498 <__gmon_start__@plt>:
   12498:	add	ip, pc, #0, 12
   1249c:	add	ip, ip, #135168	; 0x21000
   124a0:	ldr	pc, [ip, #2984]!	; 0xba8

000124a4 <exit@plt>:
   124a4:	add	ip, pc, #0, 12
   124a8:	add	ip, ip, #135168	; 0x21000
   124ac:	ldr	pc, [ip, #2976]!	; 0xba0

000124b0 <fprintf@plt>:
   124b0:	add	ip, pc, #0, 12
   124b4:	add	ip, ip, #135168	; 0x21000
   124b8:	ldr	pc, [ip, #2968]!	; 0xb98

000124bc <memset@plt>:
   124bc:	add	ip, pc, #0, 12
   124c0:	add	ip, ip, #135168	; 0x21000
   124c4:	ldr	pc, [ip, #2960]!	; 0xb90

000124c8 <strncpy@plt>:
   124c8:	add	ip, pc, #0, 12
   124cc:	add	ip, ip, #135168	; 0x21000
   124d0:	ldr	pc, [ip, #2952]!	; 0xb88

000124d4 <fclose@plt>:
   124d4:	add	ip, pc, #0, 12
   124d8:	add	ip, ip, #135168	; 0x21000
   124dc:	ldr	pc, [ip, #2944]!	; 0xb80

000124e0 <sprintf@plt>:
   124e0:	add	ip, pc, #0, 12
   124e4:	add	ip, ip, #135168	; 0x21000
   124e8:	ldr	pc, [ip, #2936]!	; 0xb78

000124ec <fseek@plt>:
   124ec:	add	ip, pc, #0, 12
   124f0:	add	ip, ip, #135168	; 0x21000
   124f4:	ldr	pc, [ip, #2928]!	; 0xb70

000124f8 <abort@plt>:
   124f8:	add	ip, pc, #0, 12
   124fc:	add	ip, ip, #135168	; 0x21000
   12500:	ldr	pc, [ip, #2920]!	; 0xb68

00012504 <__assert_fail@plt>:
   12504:	add	ip, pc, #0, 12
   12508:	add	ip, ip, #135168	; 0x21000
   1250c:	ldr	pc, [ip, #2912]!	; 0xb60

Disassembly of section .text:

00012510 <main@@Base>:
   12510:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12514:	mov	r5, r0
   12518:	mov	r2, #24
   1251c:	ldr	r4, [pc, #168]	; 125cc <main@@Base+0xbc>
   12520:	strd	r6, [sp, #8]
   12524:	mov	r6, r1
   12528:	mov	r1, #1
   1252c:	ldr	r3, [pc, #156]	; 125d0 <main@@Base+0xc0>
   12530:	str	r8, [sp, #16]
   12534:	ldr	r0, [pc, #152]	; 125d4 <main@@Base+0xc4>
   12538:	add	r4, pc, r4
   1253c:	str	lr, [sp, #20]
   12540:	ldr	r7, [r4, r3]
   12544:	add	r0, pc, r0
   12548:	ldr	r3, [r7]
   1254c:	bl	1245c <fwrite@plt>
   12550:	cmp	r5, #1
   12554:	cmpne	r5, #4
   12558:	bne	125ac <main@@Base+0x9c>
   1255c:	cmp	r5, #4
   12560:	bne	12594 <main@@Base+0x84>
   12564:	ldr	r3, [pc, #108]	; 125d8 <main@@Base+0xc8>
   12568:	ldr	r2, [pc, #108]	; 125dc <main@@Base+0xcc>
   1256c:	ldr	r0, [r6, #4]
   12570:	ldr	r1, [r4, r3]
   12574:	ldr	r3, [pc, #100]	; 125e0 <main@@Base+0xd0>
   12578:	str	r0, [r1]
   1257c:	ldr	r1, [r4, r2]
   12580:	ldr	r0, [r6, #8]
   12584:	ldr	r2, [r6, #12]
   12588:	str	r0, [r1]
   1258c:	ldr	r3, [r4, r3]
   12590:	str	r2, [r3]
   12594:	ldrd	r4, [sp]
   12598:	ldrd	r6, [sp, #8]
   1259c:	ldr	r8, [sp, #16]
   125a0:	ldr	lr, [sp, #20]
   125a4:	add	sp, sp, #24
   125a8:	b	13a9c <test_print@@Base>
   125ac:	ldr	r0, [pc, #48]	; 125e4 <main@@Base+0xd4>
   125b0:	mov	r2, #191	; 0xbf
   125b4:	mov	r1, #1
   125b8:	ldr	r3, [r7]
   125bc:	add	r0, pc, r0
   125c0:	bl	1245c <fwrite@plt>
   125c4:	mov	r0, #1
   125c8:	bl	124a4 <exit@plt>
   125cc:	andeq	r1, r2, r0, asr #21
   125d0:	andeq	r0, r0, r0, ror r0
   125d4:	andeq	r0, r1, r8, lsl #4
   125d8:	andeq	r0, r0, ip, ror r0
   125dc:	andeq	r0, r0, r4, ror r0
   125e0:	andeq	r0, r0, r4, lsl #1
   125e4:	andeq	r0, r1, ip, lsr #3

000125e8 <_start@@Base>:
   125e8:	mov	fp, #0
   125ec:	mov	lr, #0
   125f0:	pop	{r1}		; (ldr r1, [sp], #4)
   125f4:	mov	r2, sp
   125f8:	push	{r2}		; (str r2, [sp, #-4]!)
   125fc:	push	{r0}		; (str r0, [sp, #-4]!)
   12600:	ldr	ip, [pc, #16]	; 12618 <_start@@Base+0x30>
   12604:	push	{ip}		; (str ip, [sp, #-4]!)
   12608:	ldr	r0, [pc, #12]	; 1261c <_start@@Base+0x34>
   1260c:	ldr	r3, [pc, #12]	; 12620 <_start@@Base+0x38>
   12610:	bl	1248c <__libc_start_main@plt>
   12614:	bl	124f8 <abort@plt>
   12618:	andeq	r2, r2, r8, asr #1
   1261c:	andeq	r2, r1, r0, lsl r5
   12620:	andeq	r2, r2, r8, rrx
   12624:	ldr	r3, [pc, #20]	; 12640 <_start@@Base+0x58>
   12628:	ldr	r2, [pc, #20]	; 12644 <_start@@Base+0x5c>
   1262c:	add	r3, pc, r3
   12630:	ldr	r2, [r3, r2]
   12634:	cmp	r2, #0
   12638:	bxeq	lr
   1263c:	b	12498 <__gmon_start__@plt>
   12640:	andeq	r1, r2, ip, asr #19
   12644:	andeq	r0, r0, r8, ror r0
   12648:	ldr	r0, [pc, #24]	; 12668 <_start@@Base+0x80>
   1264c:	ldr	r3, [pc, #24]	; 1266c <_start@@Base+0x84>
   12650:	cmp	r3, r0
   12654:	bxeq	lr
   12658:	ldr	r3, [pc, #16]	; 12670 <_start@@Base+0x88>
   1265c:	cmp	r3, #0
   12660:	bxeq	lr
   12664:	bx	r3
   12668:	muleq	r3, r8, r0
   1266c:	muleq	r3, r8, r0
   12670:	andeq	r0, r0, r0
   12674:	ldr	r0, [pc, #36]	; 126a0 <_start@@Base+0xb8>
   12678:	ldr	r1, [pc, #36]	; 126a4 <_start@@Base+0xbc>
   1267c:	sub	r1, r1, r0
   12680:	asr	r1, r1, #2
   12684:	add	r1, r1, r1, lsr #31
   12688:	asrs	r1, r1, #1
   1268c:	bxeq	lr
   12690:	ldr	r3, [pc, #16]	; 126a8 <_start@@Base+0xc0>
   12694:	cmp	r3, #0
   12698:	bxeq	lr
   1269c:	bx	r3
   126a0:	muleq	r3, r8, r0
   126a4:	muleq	r3, r8, r0
   126a8:	andeq	r0, r0, r0
   126ac:	push	{r4, lr}
   126b0:	ldr	r4, [pc, #24]	; 126d0 <_start@@Base+0xe8>
   126b4:	ldrb	r3, [r4]
   126b8:	cmp	r3, #0
   126bc:	popne	{r4, pc}
   126c0:	bl	12648 <_start@@Base+0x60>
   126c4:	mov	r3, #1
   126c8:	strb	r3, [r4]
   126cc:	pop	{r4, pc}
   126d0:	muleq	r3, r8, r0
   126d4:	b	12674 <_start@@Base+0x8c>
   126d8:	bx	lr
   126dc:	ldr	ip, [pc, #144]	; 12774 <_start@@Base+0x18c>
   126e0:	mov	r3, #21
   126e4:	mov	r2, #0
   126e8:	strd	r4, [sp, #-16]!
   126ec:	mov	r5, r0
   126f0:	mov	r4, #22
   126f4:	str	r6, [sp, #8]
   126f8:	mov	r6, r1
   126fc:	str	lr, [sp, #12]
   12700:	sub	sp, sp, #8
   12704:	add	ip, pc, ip
   12708:	stm	sp, {r3, ip}
   1270c:	ldr	r3, [pc, #100]	; 12778 <_start@@Base+0x190>
   12710:	add	r3, pc, r3
   12714:	bl	207d4 <flatcc_json_printer_table_field@@Base>
   12718:	ldr	ip, [pc, #92]	; 1277c <_start@@Base+0x194>
   1271c:	mov	r1, r6
   12720:	mov	r0, r5
   12724:	mov	r2, #1
   12728:	ldr	r3, [pc, #80]	; 12780 <_start@@Base+0x198>
   1272c:	add	ip, pc, ip
   12730:	add	r3, pc, r3
   12734:	stm	sp, {r4, ip}
   12738:	bl	207d4 <flatcc_json_printer_table_field@@Base>
   1273c:	ldr	ip, [pc, #64]	; 12784 <_start@@Base+0x19c>
   12740:	mov	r1, r6
   12744:	mov	r0, r5
   12748:	mov	r2, #2
   1274c:	ldr	r3, [pc, #52]	; 12788 <_start@@Base+0x1a0>
   12750:	add	ip, pc, ip
   12754:	add	r3, pc, r3
   12758:	stm	sp, {r4, ip}
   1275c:	bl	207d4 <flatcc_json_printer_table_field@@Base>
   12760:	add	sp, sp, #8
   12764:	ldrd	r4, [sp]
   12768:	ldr	r6, [sp, #8]
   1276c:	add	sp, sp, #12
   12770:	pop	{pc}		; (ldr pc, [sp], #4)
   12774:			; <UNDEFINED> instruction: 0x000001b4
   12778:	andeq	pc, r0, r4, ror #21
   1277c:	andeq	r0, r0, ip, lsl #2
   12780:	ldrdeq	pc, [r0], -ip
   12784:	andeq	r0, r0, r8, rrx
   12788:	ldrdeq	pc, [r0], -r0
   1278c:	ldr	r3, [pc, #40]	; 127bc <_start@@Base+0x1d4>
   12790:	mov	ip, #0
   12794:	push	{lr}		; (str lr, [sp, #-4]!)
   12798:	mov	lr, #19
   1279c:	sub	sp, sp, #12
   127a0:	mov	r2, ip
   127a4:	str	lr, [sp]
   127a8:	str	ip, [sp, #4]
   127ac:	add	r3, pc, r3
   127b0:	bl	17a60 <flatcc_json_printer_int32_field@@Base>
   127b4:	add	sp, sp, #12
   127b8:	pop	{pc}		; (ldr pc, [sp], #4)
   127bc:	muleq	r0, r0, sl
   127c0:	ldr	r3, [pc, #112]	; 12838 <_start@@Base+0x250>
   127c4:	mov	ip, #15
   127c8:	mov	r2, #0
   127cc:	strd	r4, [sp, #-20]!	; 0xffffffec
   127d0:	mov	r4, r0
   127d4:	mov	r5, r1
   127d8:	strd	r6, [sp, #8]
   127dc:	mov	r6, #0
   127e0:	mov	r7, #0
   127e4:	str	lr, [sp, #16]
   127e8:	sub	sp, sp, #20
   127ec:	add	r3, pc, r3
   127f0:	str	ip, [sp]
   127f4:	strd	r6, [sp, #8]
   127f8:	bl	17c84 <flatcc_json_printer_int64_field@@Base>
   127fc:	ldr	r3, [pc, #56]	; 1283c <_start@@Base+0x254>
   12800:	mov	ip, #0
   12804:	mov	lr, #21
   12808:	mov	r1, r5
   1280c:	mov	r0, r4
   12810:	mov	r2, #1
   12814:	str	lr, [sp]
   12818:	str	ip, [sp, #4]
   1281c:	add	r3, pc, r3
   12820:	bl	171f8 <flatcc_json_printer_uint32_field@@Base>
   12824:	add	sp, sp, #20
   12828:	ldrd	r4, [sp]
   1282c:	ldrd	r6, [sp, #8]
   12830:	add	sp, sp, #16
   12834:	pop	{pc}		; (ldr pc, [sp], #4)
   12838:	andeq	pc, r0, r4, ror #20
   1283c:	andeq	pc, r0, r4, asr #20
   12840:	ldr	r3, [pc, #112]	; 128b8 <_start@@Base+0x2d0>
   12844:	mov	ip, #15
   12848:	mov	r2, #0
   1284c:	strd	r4, [sp, #-20]!	; 0xffffffec
   12850:	mov	r4, r0
   12854:	mov	r5, r1
   12858:	strd	r6, [sp, #8]
   1285c:	mov	r6, #0
   12860:	mov	r7, #0
   12864:	str	lr, [sp, #16]
   12868:	sub	sp, sp, #20
   1286c:	add	r3, pc, r3
   12870:	str	ip, [sp]
   12874:	strd	r6, [sp, #8]
   12878:	bl	17c84 <flatcc_json_printer_int64_field@@Base>
   1287c:	ldr	r3, [pc, #56]	; 128bc <_start@@Base+0x2d4>
   12880:	mov	ip, #0
   12884:	mov	lr, #16
   12888:	mov	r1, r5
   1288c:	mov	r0, r4
   12890:	mov	r2, #1
   12894:	str	lr, [sp]
   12898:	str	ip, [sp, #4]
   1289c:	add	r3, pc, r3
   128a0:	bl	171f8 <flatcc_json_printer_uint32_field@@Base>
   128a4:	add	sp, sp, #20
   128a8:	ldrd	r4, [sp]
   128ac:	ldrd	r6, [sp, #8]
   128b0:	add	sp, sp, #16
   128b4:	pop	{pc}		; (ldr pc, [sp], #4)
   128b8:	andeq	pc, r0, r4, ror #19
   128bc:	ldrdeq	pc, [r0], -ip
   128c0:	ldr	r3, [pc, #344]	; 12a20 <_start@@Base+0x438>
   128c4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   128c8:	mov	r4, r0
   128cc:	mov	r5, r1
   128d0:	strd	r6, [sp, #8]
   128d4:	mov	r7, #4
   128d8:	mov	r6, #8
   128dc:	strd	r8, [sp, #16]
   128e0:	mov	r8, #0
   128e4:	mov	r9, #0
   128e8:	strd	sl, [sp, #24]
   128ec:	mov	sl, #0
   128f0:	mov	fp, #9
   128f4:	str	lr, [sp, #32]
   128f8:	sub	sp, sp, #20
   128fc:	mov	r2, sl
   12900:	add	r3, pc, r3
   12904:	str	r7, [sp]
   12908:	bl	1689c <flatcc_json_printer_string_field@@Base>
   1290c:	ldr	r3, [pc, #272]	; 12a24 <_start@@Base+0x43c>
   12910:	mov	r1, r5
   12914:	mov	r0, r4
   12918:	mov	r2, #1
   1291c:	str	fp, [sp]
   12920:	str	sl, [sp, #4]
   12924:	add	r3, pc, r3
   12928:	bl	171f8 <flatcc_json_printer_uint32_field@@Base>
   1292c:	ldr	r3, [pc, #244]	; 12a28 <_start@@Base+0x440>
   12930:	mov	r1, r5
   12934:	mov	r0, r4
   12938:	mov	r2, #2
   1293c:	str	r7, [sp]
   12940:	add	r3, pc, r3
   12944:	bl	1689c <flatcc_json_printer_string_field@@Base>
   12948:	ldr	r3, [pc, #220]	; 12a2c <_start@@Base+0x444>
   1294c:	mov	r1, r5
   12950:	mov	r0, r4
   12954:	mov	r2, #3
   12958:	str	r6, [sp]
   1295c:	strd	r8, [sp, #8]
   12960:	add	r3, pc, r3
   12964:	bl	17c84 <flatcc_json_printer_int64_field@@Base>
   12968:	ldr	r3, [pc, #192]	; 12a30 <_start@@Base+0x448>
   1296c:	mov	r2, r7
   12970:	mov	r1, r5
   12974:	mov	r0, r4
   12978:	str	r7, [sp]
   1297c:	add	r3, pc, r3
   12980:	bl	1689c <flatcc_json_printer_string_field@@Base>
   12984:	ldr	r3, [pc, #168]	; 12a34 <_start@@Base+0x44c>
   12988:	mov	r1, r5
   1298c:	mov	r0, r4
   12990:	mov	r2, #5
   12994:	str	r6, [sp]
   12998:	strd	r8, [sp, #8]
   1299c:	add	r3, pc, r3
   129a0:	bl	17c84 <flatcc_json_printer_int64_field@@Base>
   129a4:	ldr	r3, [pc, #140]	; 12a38 <_start@@Base+0x450>
   129a8:	mov	r1, r5
   129ac:	mov	r0, r4
   129b0:	mov	r2, #6
   129b4:	str	fp, [sp]
   129b8:	str	sl, [sp, #4]
   129bc:	add	r3, pc, r3
   129c0:	bl	171f8 <flatcc_json_printer_uint32_field@@Base>
   129c4:	ldr	r3, [pc, #112]	; 12a3c <_start@@Base+0x454>
   129c8:	mov	r1, r5
   129cc:	mov	r0, r4
   129d0:	mov	r2, #7
   129d4:	str	r6, [sp]
   129d8:	strd	r8, [sp, #8]
   129dc:	add	r3, pc, r3
   129e0:	bl	17c84 <flatcc_json_printer_int64_field@@Base>
   129e4:	ldr	r3, [pc, #84]	; 12a40 <_start@@Base+0x458>
   129e8:	mov	r2, r6
   129ec:	mov	r1, r5
   129f0:	mov	r0, r4
   129f4:	str	fp, [sp]
   129f8:	str	sl, [sp, #4]
   129fc:	add	r3, pc, r3
   12a00:	bl	171f8 <flatcc_json_printer_uint32_field@@Base>
   12a04:	add	sp, sp, #20
   12a08:	ldrd	r4, [sp]
   12a0c:	ldrd	r6, [sp, #8]
   12a10:	ldrd	r8, [sp, #16]
   12a14:	ldrd	sl, [sp, #24]
   12a18:	add	sp, sp, #32
   12a1c:	pop	{pc}		; (ldr pc, [sp], #4)
   12a20:	andeq	pc, r0, ip, lsl #19
   12a24:	andeq	pc, r0, r0, ror r9	; <UNPREDICTABLE>
   12a28:	andeq	pc, r0, r0, ror #18
   12a2c:	andeq	pc, r0, r8, asr #18
   12a30:	andeq	pc, r0, r8, lsr r9	; <UNPREDICTABLE>
   12a34:	andeq	pc, r0, r0, lsr #18
   12a38:	andeq	pc, r0, ip, lsl #18
   12a3c:	strdeq	pc, [r0], -r8
   12a40:	andeq	pc, r0, r4, ror #17
   12a44:	ldr	ip, [pc, #1268]	; 12f40 <_start@@Base+0x958>
   12a48:	mov	r2, #0
   12a4c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12a50:	mov	r4, r0
   12a54:	mov	r5, r1
   12a58:	ldr	r3, [pc, #1252]	; 12f44 <_start@@Base+0x95c>
   12a5c:	strd	r6, [sp, #8]
   12a60:	mov	r7, #4
   12a64:	mov	r6, #17
   12a68:	strd	r8, [sp, #16]
   12a6c:	mov	r9, r2
   12a70:	mov	r8, #16
   12a74:	add	ip, pc, ip
   12a78:	strd	sl, [sp, #24]
   12a7c:	mov	sl, #3
   12a80:	str	lr, [sp, #32]
   12a84:	sub	sp, sp, #28
   12a88:	mov	fp, #9
   12a8c:	add	r3, pc, r3
   12a90:	stm	sp, {sl, ip}
   12a94:	bl	211c4 <flatcc_json_printer_struct_field@@Base>
   12a98:	ldr	r3, [pc, #1192]	; 12f48 <_start@@Base+0x960>
   12a9c:	mov	ip, #150	; 0x96
   12aa0:	mov	r1, r5
   12aa4:	mov	r0, r4
   12aa8:	mov	r2, #1
   12aac:	stm	sp, {r7, ip}
   12ab0:	add	r3, pc, r3
   12ab4:	bl	17838 <flatcc_json_printer_int16_field@@Base>
   12ab8:	ldr	r3, [pc, #1164]	; 12f4c <_start@@Base+0x964>
   12abc:	mov	ip, #100	; 0x64
   12ac0:	mov	r2, #2
   12ac4:	mov	r1, r5
   12ac8:	mov	r0, r4
   12acc:	stm	sp, {r2, ip}
   12ad0:	add	r3, pc, r3
   12ad4:	bl	17838 <flatcc_json_printer_int16_field@@Base>
   12ad8:	ldr	r3, [pc, #1136]	; 12f50 <_start@@Base+0x968>
   12adc:	mov	r2, sl
   12ae0:	mov	r1, r5
   12ae4:	mov	r0, r4
   12ae8:	str	r7, [sp]
   12aec:	ldr	sl, [pc, #1120]	; 12f54 <_start@@Base+0x96c>
   12af0:	add	r3, pc, r3
   12af4:	bl	1689c <flatcc_json_printer_string_field@@Base>
   12af8:	ldr	r3, [pc, #1112]	; 12f58 <_start@@Base+0x970>
   12afc:	mov	r1, r5
   12b00:	mov	r0, r4
   12b04:	mov	r2, #5
   12b08:	str	fp, [sp]
   12b0c:	add	sl, pc, sl
   12b10:	add	r3, pc, r3
   12b14:	bl	1bd04 <flatcc_json_printer_uint8_vector_field@@Base>
   12b18:	mov	lr, #8
   12b1c:	mov	r3, #5
   12b20:	ldr	ip, [pc, #1076]	; 12f5c <_start@@Base+0x974>
   12b24:	mov	r1, r5
   12b28:	mov	r0, r4
   12b2c:	stm	sp, {r3, lr}
   12b30:	mov	r2, #6
   12b34:	ldr	r3, [pc, #1060]	; 12f60 <_start@@Base+0x978>
   12b38:	add	ip, pc, ip
   12b3c:	str	ip, [sp, #8]
   12b40:	add	r3, pc, r3
   12b44:	bl	18df0 <flatcc_json_printer_int8_enum_field@@Base>
   12b48:	ldr	ip, [pc, #1044]	; 12f64 <_start@@Base+0x97c>
   12b4c:	mov	r1, r5
   12b50:	mov	r0, r4
   12b54:	mov	r2, #8
   12b58:	str	r7, [sp]
   12b5c:	ldr	r3, [pc, #1028]	; 12f68 <_start@@Base+0x980>
   12b60:	add	ip, pc, ip
   12b64:	add	r3, pc, r3
   12b68:	stmib	sp, {r3, ip}
   12b6c:	ldr	r3, [pc, #1016]	; 12f6c <_start@@Base+0x984>
   12b70:	add	r3, pc, r3
   12b74:	bl	20aa0 <flatcc_json_printer_union_field@@Base>
   12b78:	mov	ip, #5
   12b7c:	ldr	r3, [pc, #1004]	; 12f70 <_start@@Base+0x988>
   12b80:	mov	r2, fp
   12b84:	mov	r1, r5
   12b88:	mov	r0, r4
   12b8c:	str	ip, [sp]
   12b90:	ldr	ip, [pc, #988]	; 12f74 <_start@@Base+0x98c>
   12b94:	str	r7, [sp, #4]
   12b98:	add	r3, pc, r3
   12b9c:	add	ip, pc, ip
   12ba0:	str	ip, [sp, #8]
   12ba4:	str	ip, [sp, #20]
   12ba8:	bl	1f808 <flatcc_json_printer_struct_vector_field@@Base>
   12bac:	ldr	r3, [pc, #964]	; 12f78 <_start@@Base+0x990>
   12bb0:	mov	r1, r5
   12bb4:	mov	r0, r4
   12bb8:	mov	r2, #10
   12bbc:	str	r6, [sp]
   12bc0:	add	r3, pc, r3
   12bc4:	bl	1fb94 <flatcc_json_printer_string_vector_field@@Base>
   12bc8:	ldr	r3, [pc, #940]	; 12f7c <_start@@Base+0x994>
   12bcc:	mov	r1, r5
   12bd0:	mov	r0, r4
   12bd4:	mov	r2, #11
   12bd8:	stm	sp, {r6, sl}
   12bdc:	add	r3, pc, r3
   12be0:	bl	1ff8c <flatcc_json_printer_table_vector_field@@Base>
   12be4:	ldr	r3, [pc, #916]	; 12f80 <_start@@Base+0x998>
   12be8:	mov	ip, #5
   12bec:	mov	r1, r5
   12bf0:	mov	r0, r4
   12bf4:	mov	r2, #12
   12bf8:	str	ip, [sp]
   12bfc:	str	sl, [sp, #4]
   12c00:	add	r3, pc, r3
   12c04:	bl	207d4 <flatcc_json_printer_table_field@@Base>
   12c08:	ldr	r3, [pc, #884]	; 12f84 <_start@@Base+0x99c>
   12c0c:	mov	lr, #20
   12c10:	mov	r1, r5
   12c14:	mov	r0, r4
   12c18:	mov	r2, #13
   12c1c:	str	lr, [sp]
   12c20:	stmib	sp, {r9, sl}
   12c24:	mov	sl, #0
   12c28:	add	r3, pc, r3
   12c2c:	bl	21874 <flatcc_json_printer_table_as_nested_root@@Base>
   12c30:	ldr	ip, [pc, #848]	; 12f88 <_start@@Base+0x9a0>
   12c34:	mov	r1, r5
   12c38:	mov	r0, r4
   12c3c:	mov	r2, #14
   12c40:	ldr	r3, [pc, #836]	; 12f8c <_start@@Base+0x9a4>
   12c44:	add	ip, pc, ip
   12c48:	add	r3, pc, r3
   12c4c:	stm	sp, {fp, ip}
   12c50:	mov	fp, #0
   12c54:	bl	207d4 <flatcc_json_printer_table_field@@Base>
   12c58:	ldr	r3, [pc, #816]	; 12f90 <_start@@Base+0x9a8>
   12c5c:	mov	lr, #8
   12c60:	mov	r2, #1
   12c64:	mov	r1, r5
   12c68:	mov	r0, r4
   12c6c:	str	lr, [sp]
   12c70:	str	r2, [sp, #4]
   12c74:	mov	r2, #15
   12c78:	add	r3, pc, r3
   12c7c:	bl	17ec0 <flatcc_json_printer_bool_field@@Base>
   12c80:	ldr	r3, [pc, #780]	; 12f94 <_start@@Base+0x9ac>
   12c84:	mov	r1, r5
   12c88:	mov	r0, r4
   12c8c:	mov	r2, r8
   12c90:	strd	r8, [sp]
   12c94:	add	r3, pc, r3
   12c98:	bl	17a60 <flatcc_json_printer_int32_field@@Base>
   12c9c:	ldr	r3, [pc, #756]	; 12f98 <_start@@Base+0x9b0>
   12ca0:	mov	r2, r6
   12ca4:	mov	r1, r5
   12ca8:	mov	r0, r4
   12cac:	strd	r8, [sp]
   12cb0:	add	r3, pc, r3
   12cb4:	bl	171f8 <flatcc_json_printer_uint32_field@@Base>
   12cb8:	ldr	r3, [pc, #732]	; 12f9c <_start@@Base+0x9b4>
   12cbc:	mov	r1, r5
   12cc0:	mov	r0, r4
   12cc4:	mov	r2, #18
   12cc8:	str	r8, [sp]
   12ccc:	strd	sl, [sp, #8]
   12cd0:	add	r3, pc, r3
   12cd4:	bl	17c84 <flatcc_json_printer_int64_field@@Base>
   12cd8:	ldr	r3, [pc, #704]	; 12fa0 <_start@@Base+0x9b8>
   12cdc:	mov	r1, r5
   12ce0:	mov	r0, r4
   12ce4:	mov	r2, #19
   12ce8:	str	r8, [sp]
   12cec:	strd	sl, [sp, #8]
   12cf0:	add	r3, pc, r3
   12cf4:	bl	173fc <flatcc_json_printer_uint64_field@@Base>
   12cf8:	ldr	r3, [pc, #676]	; 12fa4 <_start@@Base+0x9bc>
   12cfc:	mov	r1, r5
   12d00:	mov	r0, r4
   12d04:	mov	r2, #20
   12d08:	stm	sp, {r6, r9}
   12d0c:	add	r3, pc, r3
   12d10:	bl	17a60 <flatcc_json_printer_int32_field@@Base>
   12d14:	ldr	r3, [pc, #652]	; 12fa8 <_start@@Base+0x9c0>
   12d18:	mov	r1, r5
   12d1c:	mov	r0, r4
   12d20:	mov	r2, #21
   12d24:	stm	sp, {r6, r9}
   12d28:	mov	r9, #6
   12d2c:	add	r3, pc, r3
   12d30:	bl	171f8 <flatcc_json_printer_uint32_field@@Base>
   12d34:	ldr	r3, [pc, #624]	; 12fac <_start@@Base+0x9c4>
   12d38:	mov	r1, r5
   12d3c:	mov	r0, r4
   12d40:	mov	r2, #22
   12d44:	str	r6, [sp]
   12d48:	strd	sl, [sp, #8]
   12d4c:	add	r3, pc, r3
   12d50:	bl	17c84 <flatcc_json_printer_int64_field@@Base>
   12d54:	ldr	r3, [pc, #596]	; 12fb0 <_start@@Base+0x9c8>
   12d58:	mov	r1, r5
   12d5c:	mov	r0, r4
   12d60:	mov	r2, #23
   12d64:	str	r6, [sp]
   12d68:	strd	sl, [sp, #8]
   12d6c:	add	r3, pc, r3
   12d70:	bl	173fc <flatcc_json_printer_uint64_field@@Base>
   12d74:	ldr	r3, [pc, #568]	; 12fb4 <_start@@Base+0x9cc>
   12d78:	mov	r1, r5
   12d7c:	mov	r0, r4
   12d80:	mov	r2, #24
   12d84:	str	r8, [sp]
   12d88:	mov	r8, #5
   12d8c:	add	r3, pc, r3
   12d90:	bl	1d520 <flatcc_json_printer_bool_vector_field@@Base>
   12d94:	ldr	r3, [pc, #540]	; 12fb8 <_start@@Base+0x9d0>
   12d98:	mov	r1, r5
   12d9c:	mov	r0, r4
   12da0:	mov	r2, #25
   12da4:	str	r8, [sp]
   12da8:	vldr	s0, [pc, #388]	; 12f34 <_start@@Base+0x94c>
   12dac:	add	r3, pc, r3
   12db0:	bl	180c4 <flatcc_json_printer_float_field@@Base>
   12db4:	ldr	r3, [pc, #512]	; 12fbc <_start@@Base+0x9d4>
   12db8:	mov	r1, r5
   12dbc:	mov	r0, r4
   12dc0:	mov	r2, #26
   12dc4:	str	r9, [sp]
   12dc8:	vldr	s0, [pc, #360]	; 12f38 <_start@@Base+0x950>
   12dcc:	add	r3, pc, r3
   12dd0:	bl	180c4 <flatcc_json_printer_float_field@@Base>
   12dd4:	ldr	r3, [pc, #484]	; 12fc0 <_start@@Base+0x9d8>
   12dd8:	mov	r1, r5
   12ddc:	mov	r0, r4
   12de0:	mov	r2, #27
   12de4:	str	r9, [sp]
   12de8:	vldr	s0, [pc, #332]	; 12f3c <_start@@Base+0x954>
   12dec:	add	r3, pc, r3
   12df0:	bl	180c4 <flatcc_json_printer_float_field@@Base>
   12df4:	ldr	r3, [pc, #456]	; 12fc4 <_start@@Base+0x9dc>
   12df8:	mov	ip, #18
   12dfc:	mov	r1, r5
   12e00:	mov	r0, r4
   12e04:	mov	r2, #28
   12e08:	str	ip, [sp]
   12e0c:	add	r3, pc, r3
   12e10:	bl	1fb94 <flatcc_json_printer_string_vector_field@@Base>
   12e14:	ldr	ip, [pc, #428]	; 12fc8 <_start@@Base+0x9e0>
   12e18:	mov	r3, #8
   12e1c:	mov	lr, #23
   12e20:	mov	r1, r5
   12e24:	mov	r0, r4
   12e28:	mov	r2, #29
   12e2c:	str	lr, [sp]
   12e30:	add	ip, pc, ip
   12e34:	stmib	sp, {r3, ip}
   12e38:	ldr	r3, [pc, #396]	; 12fcc <_start@@Base+0x9e4>
   12e3c:	add	r3, pc, r3
   12e40:	bl	1f808 <flatcc_json_printer_struct_vector_field@@Base>
   12e44:	ldr	r3, [pc, #388]	; 12fd0 <_start@@Base+0x9e8>
   12e48:	mov	r1, r5
   12e4c:	mov	r0, r4
   12e50:	mov	r2, #30
   12e54:	str	r7, [sp]
   12e58:	add	r3, pc, r3
   12e5c:	bl	1bd04 <flatcc_json_printer_uint8_vector_field@@Base>
   12e60:	ldr	r3, [pc, #364]	; 12fd4 <_start@@Base+0x9ec>
   12e64:	mov	r1, r5
   12e68:	mov	r0, r4
   12e6c:	mov	r2, #31
   12e70:	str	r8, [sp]
   12e74:	ldr	ip, [sp, #20]
   12e78:	add	r3, pc, r3
   12e7c:	stmib	sp, {r7, ip}
   12e80:	bl	1f808 <flatcc_json_printer_struct_vector_field@@Base>
   12e84:	ldr	r3, [pc, #332]	; 12fd8 <_start@@Base+0x9f0>
   12e88:	mov	ip, #15
   12e8c:	mov	r1, r5
   12e90:	mov	r0, r4
   12e94:	mov	r2, #32
   12e98:	str	ip, [sp]
   12e9c:	add	r3, pc, r3
   12ea0:	bl	1d244 <flatcc_json_printer_int64_vector_field@@Base>
   12ea4:	ldr	r3, [pc, #304]	; 12fdc <_start@@Base+0x9f4>
   12ea8:	mov	r1, r5
   12eac:	mov	r0, r4
   12eb0:	mov	r2, #33	; 0x21
   12eb4:	str	r6, [sp]
   12eb8:	add	r3, pc, r3
   12ebc:	bl	1dac4 <flatcc_json_printer_double_vector_field@@Base>
   12ec0:	ldr	ip, [pc, #280]	; 12fe0 <_start@@Base+0x9f8>
   12ec4:	mov	lr, #21
   12ec8:	mov	r1, r5
   12ecc:	mov	r0, r4
   12ed0:	mov	r2, #34	; 0x22
   12ed4:	ldr	r3, [pc, #264]	; 12fe4 <_start@@Base+0x9fc>
   12ed8:	str	lr, [sp]
   12edc:	add	ip, pc, ip
   12ee0:	add	r3, pc, r3
   12ee4:	str	ip, [sp, #4]
   12ee8:	bl	207d4 <flatcc_json_printer_table_field@@Base>
   12eec:	ldr	ip, [pc, #244]	; 12fe8 <_start@@Base+0xa00>
   12ef0:	mov	lr, #10
   12ef4:	mov	r1, r5
   12ef8:	mov	r0, r4
   12efc:	mov	r2, #35	; 0x23
   12f00:	ldr	r3, [pc, #228]	; 12fec <_start@@Base+0xa04>
   12f04:	str	lr, [sp]
   12f08:	add	ip, pc, ip
   12f0c:	add	r3, pc, r3
   12f10:	str	ip, [sp, #4]
   12f14:	bl	207d4 <flatcc_json_printer_table_field@@Base>
   12f18:	add	sp, sp, #28
   12f1c:	ldrd	r4, [sp]
   12f20:	ldrd	r6, [sp, #8]
   12f24:	ldrd	r8, [sp, #16]
   12f28:	ldrd	sl, [sp, #24]
   12f2c:	add	sp, sp, #32
   12f30:	pop	{pc}		; (ldr pc, [sp], #4)
   12f34:	ldmmi	r9, {r5, r6, r7, r8, sl, sp, lr}
   12f38:	submi	r0, r0, r0
   12f3c:	andeq	r0, r0, r0
   12f40:	andeq	r0, r0, r8, ror #26
   12f44:	andeq	pc, r0, r0, ror #16
   12f48:	andeq	pc, r0, r0, asr #16
   12f4c:	andeq	pc, r0, r8, lsr #16
   12f50:	andeq	pc, r0, ip, lsl #16
   12f54:			; <UNDEFINED> instruction: 0xffffff30
   12f58:	strdeq	pc, [r0], -r4
   12f5c:	muleq	r0, ip, fp
   12f60:	ldrdeq	pc, [r0], -r0
   12f64:	andeq	r0, r0, r0, asr #13
   12f68:			; <UNDEFINED> instruction: 0x00000db0
   12f6c:	andeq	pc, r0, r8, lsr #15
   12f70:	andeq	pc, r0, r8, lsl #15
   12f74:	andeq	r0, r0, r8, lsl #12
   12f78:	andeq	pc, r0, r8, ror #14
   12f7c:	andeq	pc, r0, r0, ror #14
   12f80:	andeq	pc, r0, r0, asr r7	; <UNPREDICTABLE>
   12f84:	andeq	pc, r0, r0, lsr r7	; <UNPREDICTABLE>
   12f88:			; <UNDEFINED> instruction: 0x000004b4
   12f8c:	andeq	pc, r0, r8, lsr #14
   12f90:	andeq	pc, r0, r4, lsl #14
   12f94:	strdeq	pc, [r0], -r4
   12f98:	andeq	pc, r0, ip, ror #13
   12f9c:	andeq	pc, r0, r0, ror #13
   12fa0:	ldrdeq	pc, [r0], -r4
   12fa4:	andeq	pc, r0, ip, asr #13
   12fa8:	andeq	pc, r0, r0, asr #13
   12fac:			; <UNDEFINED> instruction: 0x0000f6b4
   12fb0:	andeq	pc, r0, r8, lsr #13
   12fb4:	muleq	r0, ip, r6
   12fb8:	muleq	r0, r0, r6
   12fbc:	andeq	pc, r0, r8, ror r6	; <UNPREDICTABLE>
   12fc0:	andeq	pc, r0, r0, ror #12
   12fc4:	andeq	pc, r0, r8, asr #12
   12fc8:	andeq	r0, r0, r8, asr r2
   12fcc:	andeq	pc, r0, ip, lsr #12
   12fd0:	andeq	pc, r0, r8, lsr #12
   12fd4:	andeq	pc, r0, r0, lsl r6	; <UNPREDICTABLE>
   12fd8:	strdeq	pc, [r0], -r4
   12fdc:	andeq	pc, r0, r8, ror #11
   12fe0:			; <UNDEFINED> instruction: 0xfffff7f4
   12fe4:	ldrdeq	pc, [r0], -r4
   12fe8:	andeq	r0, r0, r0, ror #1
   12fec:	andeq	pc, r0, r0, asr #11
   12ff0:	ldr	r3, [pc, #140]	; 13084 <_start@@Base+0xa9c>
   12ff4:	mov	ip, #4
   12ff8:	strd	r4, [sp, #-16]!
   12ffc:	mov	r4, #0
   13000:	mov	r5, r0
   13004:	str	r6, [sp, #8]
   13008:	mov	r2, r4
   1300c:	mov	r6, r1
   13010:	str	lr, [sp, #12]
   13014:	sub	sp, sp, #8
   13018:	add	r3, pc, r3
   1301c:	str	ip, [sp]
   13020:	str	r4, [sp, #4]
   13024:	bl	16a90 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   13028:	ldr	r3, [pc, #88]	; 13088 <_start@@Base+0xaa0>
   1302c:	mov	ip, #1
   13030:	mov	r2, #7
   13034:	mov	r1, r6
   13038:	mov	r0, r5
   1303c:	stm	sp, {r2, ip}
   13040:	mov	r2, ip
   13044:	add	r3, pc, r3
   13048:	bl	16a90 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   1304c:	ldr	r3, [pc, #56]	; 1308c <_start@@Base+0xaa4>
   13050:	mov	ip, #6
   13054:	mov	r1, r6
   13058:	mov	r0, r5
   1305c:	mov	r2, #2
   13060:	str	ip, [sp]
   13064:	str	r4, [sp, #4]
   13068:	add	r3, pc, r3
   1306c:	bl	16a90 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   13070:	add	sp, sp, #8
   13074:	ldrd	r4, [sp]
   13078:	ldr	r6, [sp, #8]
   1307c:	add	sp, sp, #12
   13080:	pop	{pc}		; (ldr pc, [sp], #4)
   13084:			; <UNDEFINED> instruction: 0x0000f6b0
   13088:	muleq	r0, r4, r4
   1308c:	andeq	pc, r0, r8, ror r4	; <UNPREDICTABLE>
   13090:	ldr	ip, [pc, #96]	; 130f8 <_start@@Base+0xb10>
   13094:	mov	r3, #0
   13098:	mov	r2, r1
   1309c:	strd	r4, [sp, #-12]!
   130a0:	mov	r4, r1
   130a4:	mov	r1, r3
   130a8:	str	lr, [sp, #8]
   130ac:	sub	sp, sp, #12
   130b0:	mov	lr, #2
   130b4:	mov	r5, r0
   130b8:	add	ip, pc, ip
   130bc:	stm	sp, {ip, lr}
   130c0:	bl	19d0c <flatcc_json_printer_uint32_struct_field@@Base>
   130c4:	ldr	ip, [pc, #48]	; 130fc <_start@@Base+0xb14>
   130c8:	mov	lr, #8
   130cc:	mov	r2, r4
   130d0:	mov	r0, r5
   130d4:	mov	r3, #4
   130d8:	mov	r1, #1
   130dc:	add	ip, pc, ip
   130e0:	stm	sp, {ip, lr}
   130e4:	bl	19d0c <flatcc_json_printer_uint32_struct_field@@Base>
   130e8:	add	sp, sp, #12
   130ec:	ldrd	r4, [sp]
   130f0:	add	sp, sp, #8
   130f4:	pop	{pc}		; (ldr pc, [sp], #4)
   130f8:	andeq	pc, r0, r0, lsr r4	; <UNPREDICTABLE>
   130fc:	andeq	pc, r0, r0, lsl r4	; <UNPREDICTABLE>
   13100:	ldr	r3, [pc, #152]	; 131a0 <_start@@Base+0xbb8>
   13104:	mov	r2, #0
   13108:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1310c:	mov	r4, r0
   13110:	mov	r5, r1
   13114:	str	r6, [sp, #8]
   13118:	mov	r6, #2
   1311c:	strd	r8, [sp, #12]
   13120:	mov	r8, #0
   13124:	mov	r9, #0
   13128:	str	lr, [sp, #20]
   1312c:	sub	sp, sp, #16
   13130:	add	r3, pc, r3
   13134:	str	r6, [sp]
   13138:	bl	1689c <flatcc_json_printer_string_field@@Base>
   1313c:	ldr	r3, [pc, #96]	; 131a4 <_start@@Base+0xbbc>
   13140:	mov	r2, #3
   13144:	mov	r1, r5
   13148:	mov	r0, r4
   1314c:	str	r2, [sp]
   13150:	mov	r2, #1
   13154:	strd	r8, [sp, #8]
   13158:	add	r3, pc, r3
   1315c:	bl	17c84 <flatcc_json_printer_int64_field@@Base>
   13160:	ldr	r3, [pc, #64]	; 131a8 <_start@@Base+0xbc0>
   13164:	mov	ip, #0
   13168:	mov	lr, #5
   1316c:	mov	r2, r6
   13170:	mov	r1, r5
   13174:	mov	r0, r4
   13178:	str	lr, [sp]
   1317c:	str	ip, [sp, #4]
   13180:	add	r3, pc, r3
   13184:	bl	16ff4 <flatcc_json_printer_uint16_field@@Base>
   13188:	add	sp, sp, #16
   1318c:	ldrd	r4, [sp]
   13190:	ldr	r6, [sp, #8]
   13194:	ldrd	r8, [sp, #12]
   13198:	add	sp, sp, #20
   1319c:	pop	{pc}		; (ldr pc, [sp], #4)
   131a0:			; <UNDEFINED> instruction: 0x0000f3b8
   131a4:	andeq	pc, r0, r0, lsr #7
   131a8:	andeq	pc, r0, ip, ror r3	; <UNPREDICTABLE>
   131ac:	ldr	ip, [pc, #108]	; 13220 <_start@@Base+0xc38>
   131b0:	mov	r3, #0
   131b4:	mov	r2, r1
   131b8:	strd	r4, [sp, #-16]!
   131bc:	mov	r4, #1
   131c0:	mov	r5, r1
   131c4:	str	r6, [sp, #8]
   131c8:	mov	r1, r3
   131cc:	mov	r6, r0
   131d0:	str	lr, [sp, #12]
   131d4:	sub	sp, sp, #8
   131d8:	add	ip, pc, ip
   131dc:	str	ip, [sp]
   131e0:	str	r4, [sp, #4]
   131e4:	bl	1a1e4 <flatcc_json_printer_int16_struct_field@@Base>
   131e8:	ldr	ip, [pc, #52]	; 13224 <_start@@Base+0xc3c>
   131ec:	mov	r2, r5
   131f0:	mov	r1, r4
   131f4:	mov	r0, r6
   131f8:	mov	r3, #2
   131fc:	str	r4, [sp, #4]
   13200:	add	ip, pc, ip
   13204:	str	ip, [sp]
   13208:	bl	1a030 <flatcc_json_printer_int8_struct_field@@Base>
   1320c:	add	sp, sp, #8
   13210:	ldrd	r4, [sp]
   13214:	ldr	r6, [sp, #8]
   13218:	add	sp, sp, #12
   1321c:	pop	{pc}		; (ldr pc, [sp], #4)
   13220:	andeq	pc, r0, r0, lsl r2	; <UNPREDICTABLE>
   13224:	andeq	pc, r0, r4, lsl #6
   13228:	ldrb	r3, [r1, #8]
   1322c:	sub	r3, r3, #1
   13230:	cmp	r3, #3
   13234:	addls	pc, pc, r3, lsl #2
   13238:	b	1327c <_start@@Base+0xc94>
   1323c:	b	13270 <_start@@Base+0xc88>
   13240:	b	13264 <_start@@Base+0xc7c>
   13244:	b	13258 <_start@@Base+0xc70>
   13248:	b	1324c <_start@@Base+0xc64>
   1324c:	ldr	r2, [pc, #44]	; 13280 <_start@@Base+0xc98>
   13250:	add	r2, pc, r2
   13254:	b	20d78 <flatcc_json_printer_union_table@@Base>
   13258:	ldr	r2, [pc, #36]	; 13284 <_start@@Base+0xc9c>
   1325c:	add	r2, pc, r2
   13260:	b	20d78 <flatcc_json_printer_union_table@@Base>
   13264:	ldr	r2, [pc, #28]	; 13288 <_start@@Base+0xca0>
   13268:	add	r2, pc, r2
   1326c:	b	20d78 <flatcc_json_printer_union_table@@Base>
   13270:	ldr	r2, [pc, #20]	; 1328c <_start@@Base+0xca4>
   13274:	add	r2, pc, r2
   13278:	b	20d78 <flatcc_json_printer_union_table@@Base>
   1327c:	bx	lr
   13280:	andeq	r0, r0, r8, lsr r0
   13284:	andeq	r0, r0, r4, lsr r8
   13288:	muleq	r0, ip, r3
   1328c:			; <UNDEFINED> instruction: 0xfffff7c8
   13290:	ldr	ip, [pc, #148]	; 1332c <_start@@Base+0xd44>
   13294:	mov	r3, #6
   13298:	mov	r2, #0
   1329c:	strd	r4, [sp, #-12]!
   132a0:	mov	r4, r0
   132a4:	mov	r5, r1
   132a8:	str	lr, [sp, #8]
   132ac:	sub	sp, sp, #20
   132b0:	add	ip, pc, ip
   132b4:	stm	sp, {r3, ip}
   132b8:	ldr	r3, [pc, #112]	; 13330 <_start@@Base+0xd48>
   132bc:	add	r3, pc, r3
   132c0:	bl	207d4 <flatcc_json_printer_table_field@@Base>
   132c4:	ldr	ip, [pc, #104]	; 13334 <_start@@Base+0xd4c>
   132c8:	mov	r3, #5
   132cc:	mov	r1, r5
   132d0:	mov	r0, r4
   132d4:	mov	r2, #1
   132d8:	add	ip, pc, ip
   132dc:	stm	sp, {r3, ip}
   132e0:	ldr	r3, [pc, #80]	; 13338 <_start@@Base+0xd50>
   132e4:	add	r3, pc, r3
   132e8:	bl	207d4 <flatcc_json_printer_table_field@@Base>
   132ec:	ldr	lr, [pc, #72]	; 1333c <_start@@Base+0xd54>
   132f0:	mov	r3, #7
   132f4:	mov	r1, r5
   132f8:	mov	r0, r4
   132fc:	mov	r2, #3
   13300:	ldr	ip, [pc, #56]	; 13340 <_start@@Base+0xd58>
   13304:	add	lr, pc, lr
   13308:	add	ip, pc, ip
   1330c:	stm	sp, {r3, ip, lr}
   13310:	ldr	r3, [pc, #44]	; 13344 <_start@@Base+0xd5c>
   13314:	add	r3, pc, r3
   13318:	bl	20448 <flatcc_json_printer_union_vector_field@@Base>
   1331c:	add	sp, sp, #20
   13320:	ldrd	r4, [sp]
   13324:	add	sp, sp, #8
   13328:	pop	{pc}		; (ldr pc, [sp], #4)
   1332c:			; <UNDEFINED> instruction: 0xfffff424
   13330:	andeq	pc, r0, ip, asr #4
   13334:	andeq	r0, r0, r8, rrx
   13338:	andeq	pc, r0, ip, lsr #4
   1333c:			; <UNDEFINED> instruction: 0xffffff1c
   13340:	andeq	r0, r0, ip, lsl #12
   13344:	andeq	pc, r0, r4, lsl #4
   13348:	strd	r4, [sp, #-28]!	; 0xffffffe4
   1334c:	mov	r3, #14
   13350:	mov	r2, #1
   13354:	ldr	r5, [pc, #232]	; 13444 <_start@@Base+0xe5c>
   13358:	strd	r6, [sp, #8]
   1335c:	mov	r6, r0
   13360:	mov	r7, r1
   13364:	ldr	r4, [pc, #220]	; 13448 <_start@@Base+0xe60>
   13368:	strd	r8, [sp, #16]
   1336c:	mov	r8, #10
   13370:	mov	r9, #9
   13374:	str	lr, [sp, #24]
   13378:	sub	sp, sp, #20
   1337c:	add	r5, pc, r5
   13380:	stm	sp, {r3, r5}
   13384:	add	r4, pc, r4
   13388:	ldr	r3, [pc, #188]	; 1344c <_start@@Base+0xe64>
   1338c:	str	r4, [sp, #8]
   13390:	add	r3, pc, r3
   13394:	bl	20aa0 <flatcc_json_printer_union_field@@Base>
   13398:	ldr	r3, [pc, #176]	; 13450 <_start@@Base+0xe68>
   1339c:	mov	r1, r7
   133a0:	mov	r0, r6
   133a4:	mov	r2, #3
   133a8:	str	r8, [sp]
   133ac:	str	r5, [sp, #4]
   133b0:	str	r4, [sp, #8]
   133b4:	add	r3, pc, r3
   133b8:	bl	20aa0 <flatcc_json_printer_union_field@@Base>
   133bc:	ldr	r3, [pc, #144]	; 13454 <_start@@Base+0xe6c>
   133c0:	mov	r1, r7
   133c4:	mov	r0, r6
   133c8:	mov	r2, #5
   133cc:	str	r9, [sp]
   133d0:	str	r5, [sp, #4]
   133d4:	str	r4, [sp, #8]
   133d8:	add	r3, pc, r3
   133dc:	bl	20aa0 <flatcc_json_printer_union_field@@Base>
   133e0:	ldr	r3, [pc, #112]	; 13458 <_start@@Base+0xe70>
   133e4:	mov	ip, #5
   133e8:	mov	r1, r7
   133ec:	mov	r0, r6
   133f0:	mov	r2, #7
   133f4:	str	ip, [sp]
   133f8:	str	r5, [sp, #4]
   133fc:	str	r4, [sp, #8]
   13400:	add	r3, pc, r3
   13404:	bl	20aa0 <flatcc_json_printer_union_field@@Base>
   13408:	ldr	r3, [pc, #76]	; 1345c <_start@@Base+0xe74>
   1340c:	mov	r2, r9
   13410:	mov	r1, r7
   13414:	mov	r0, r6
   13418:	str	r8, [sp]
   1341c:	str	r5, [sp, #4]
   13420:	str	r4, [sp, #8]
   13424:	add	r3, pc, r3
   13428:	bl	20448 <flatcc_json_printer_union_vector_field@@Base>
   1342c:	add	sp, sp, #20
   13430:	ldrd	r4, [sp]
   13434:	ldrd	r6, [sp, #8]
   13438:	ldrd	r8, [sp, #16]
   1343c:	add	sp, sp, #24
   13440:	pop	{pc}		; (ldr pc, [sp], #4)
   13444:	andeq	r0, r0, r4, asr #3
   13448:	ldrdeq	r0, [r0], -r4
   1344c:	muleq	r0, r0, r1
   13450:	andeq	pc, r0, ip, ror r1	; <UNPREDICTABLE>
   13454:	andeq	pc, r0, r4, ror #2
   13458:	andeq	pc, r0, r8, asr #2
   1345c:	andeq	pc, r0, ip, lsr #2
   13460:	ldrb	r3, [r1, #8]
   13464:	mov	r2, r1
   13468:	mov	ip, r0
   1346c:	cmp	r3, #10
   13470:	bhi	13498 <_start@@Base+0xeb0>
   13474:	cmp	r3, #9
   13478:	bcs	134bc <_start@@Base+0xed4>
   1347c:	cmp	r3, #2
   13480:	beq	134c8 <_start@@Base+0xee0>
   13484:	cmp	r3, #8
   13488:	bne	134b4 <_start@@Base+0xecc>
   1348c:	ldr	r2, [pc, #64]	; 134d4 <_start@@Base+0xeec>
   13490:	add	r2, pc, r2
   13494:	b	20ea4 <flatcc_json_printer_union_struct@@Base>
   13498:	cmp	r3, #11
   1349c:	beq	134a8 <_start@@Base+0xec0>
   134a0:	cmp	r3, #255	; 0xff
   134a4:	bne	134b8 <_start@@Base+0xed0>
   134a8:	mov	r1, r2
   134ac:	mov	r0, ip
   134b0:	b	20f78 <flatcc_json_printer_union_string@@Base>
   134b4:	bx	lr
   134b8:	bx	lr
   134bc:	ldr	r2, [pc, #20]	; 134d8 <_start@@Base+0xef0>
   134c0:	add	r2, pc, r2
   134c4:	b	20ea4 <flatcc_json_printer_union_struct@@Base>
   134c8:	ldr	r2, [pc, #12]	; 134dc <_start@@Base+0xef4>
   134cc:	add	r2, pc, r2
   134d0:	b	20d78 <flatcc_json_printer_union_table@@Base>
   134d4:	andeq	r0, r0, ip, ror r0
   134d8:	andeq	r0, r0, r8, lsl r0
   134dc:			; <UNDEFINED> instruction: 0xfffff2b8
   134e0:	ldr	ip, [pc, #40]	; 13510 <_start@@Base+0xf28>
   134e4:	mov	r3, #0
   134e8:	mov	r2, r1
   134ec:	push	{lr}		; (str lr, [sp, #-4]!)
   134f0:	mov	lr, #10
   134f4:	sub	sp, sp, #12
   134f8:	mov	r1, r3
   134fc:	add	ip, pc, ip
   13500:	stm	sp, {ip, lr}
   13504:	bl	1a398 <flatcc_json_printer_int32_struct_field@@Base>
   13508:	add	sp, sp, #12
   1350c:	pop	{pc}		; (ldr pc, [sp], #4)
   13510:	andeq	pc, r0, r0, rrx
   13514:	ldr	ip, [pc, #40]	; 13544 <_start@@Base+0xf5c>
   13518:	mov	r3, #0
   1351c:	mov	r2, r1
   13520:	push	{lr}		; (str lr, [sp, #-4]!)
   13524:	mov	lr, #11
   13528:	sub	sp, sp, #12
   1352c:	mov	r1, r3
   13530:	add	ip, pc, ip
   13534:	stm	sp, {ip, lr}
   13538:	bl	19b7c <flatcc_json_printer_uint16_struct_field@@Base>
   1353c:	add	sp, sp, #12
   13540:	pop	{pc}		; (ldr pc, [sp], #4)
   13544:	andeq	pc, r0, r8, lsr r0	; <UNPREDICTABLE>
   13548:	cmp	r1, #9
   1354c:	mov	r3, r0
   13550:	beq	1359c <_start@@Base+0xfb4>
   13554:	bls	1357c <_start@@Base+0xf94>
   13558:	cmp	r1, #11
   1355c:	beq	135ac <_start@@Base+0xfc4>
   13560:	bcc	135bc <_start@@Base+0xfd4>
   13564:	cmp	r1, #255	; 0xff
   13568:	bne	135cc <_start@@Base+0xfe4>
   1356c:	ldr	r1, [pc, #124]	; 135f0 <_start@@Base+0x1008>
   13570:	mov	r2, #6
   13574:	add	r1, pc, r1
   13578:	b	16750 <flatcc_json_printer_enum@@Base>
   1357c:	cmp	r1, #2
   13580:	beq	135e0 <_start@@Base+0xff8>
   13584:	cmp	r1, #8
   13588:	bne	135cc <_start@@Base+0xfe4>
   1358c:	mov	r2, r1
   13590:	ldr	r1, [pc, #92]	; 135f4 <_start@@Base+0x100c>
   13594:	add	r1, pc, r1
   13598:	b	16750 <flatcc_json_printer_enum@@Base>
   1359c:	ldr	r1, [pc, #84]	; 135f8 <_start@@Base+0x1010>
   135a0:	mov	r2, #5
   135a4:	add	r1, pc, r1
   135a8:	b	16750 <flatcc_json_printer_enum@@Base>
   135ac:	ldr	r1, [pc, #72]	; 135fc <_start@@Base+0x1014>
   135b0:	mov	r2, #5
   135b4:	add	r1, pc, r1
   135b8:	b	16750 <flatcc_json_printer_enum@@Base>
   135bc:	ldr	r1, [pc, #60]	; 13600 <_start@@Base+0x1018>
   135c0:	mov	r2, #7
   135c4:	add	r1, pc, r1
   135c8:	b	16750 <flatcc_json_printer_enum@@Base>
   135cc:	ldr	r1, [pc, #48]	; 13604 <_start@@Base+0x101c>
   135d0:	mov	r0, r3
   135d4:	mov	r2, #4
   135d8:	add	r1, pc, r1
   135dc:	b	16750 <flatcc_json_printer_enum@@Base>
   135e0:	ldr	r1, [pc, #32]	; 13608 <_start@@Base+0x1020>
   135e4:	mov	r2, #5
   135e8:	add	r1, pc, r1
   135ec:	b	16750 <flatcc_json_printer_enum@@Base>
   135f0:	andeq	pc, r0, ip, lsr #32
   135f4:	andeq	lr, r0, r8, ror #31
   135f8:	andeq	lr, r0, r4, ror #31
   135fc:	andeq	lr, r0, r4, ror #31
   13600:	andeq	lr, r0, ip, asr #31
   13604:	ldrdeq	lr, [r0], -r0
   13608:	andeq	lr, r0, ip, lsl #31
   1360c:	strd	r4, [sp, #-20]!	; 0xffffffec
   13610:	mov	ip, #5
   13614:	mov	r4, #2
   13618:	ldr	r5, [pc, #168]	; 136c8 <_start@@Base+0x10e0>
   1361c:	mov	r2, #0
   13620:	strd	r6, [sp, #8]
   13624:	mov	r6, r0
   13628:	mov	r7, r1
   1362c:	ldr	r3, [pc, #152]	; 136cc <_start@@Base+0x10e4>
   13630:	str	lr, [sp, #16]
   13634:	sub	sp, sp, #20
   13638:	add	r5, pc, r5
   1363c:	str	ip, [sp]
   13640:	add	r3, pc, r3
   13644:	strd	r4, [sp, #4]
   13648:	bl	18df0 <flatcc_json_printer_int8_enum_field@@Base>
   1364c:	ldr	r3, [pc, #124]	; 136d0 <_start@@Base+0x10e8>
   13650:	mov	ip, #6
   13654:	mov	r1, r7
   13658:	mov	r0, r6
   1365c:	mov	r2, #1
   13660:	str	ip, [sp]
   13664:	strd	r4, [sp, #4]
   13668:	add	r3, pc, r3
   1366c:	bl	18df0 <flatcc_json_printer_int8_enum_field@@Base>
   13670:	ldr	r3, [pc, #92]	; 136d4 <_start@@Base+0x10ec>
   13674:	mov	r2, r4
   13678:	mov	r1, r7
   1367c:	mov	r0, r6
   13680:	str	r4, [sp]
   13684:	str	r4, [sp, #4]
   13688:	add	r3, pc, r3
   1368c:	bl	16df0 <flatcc_json_printer_uint8_field@@Base>
   13690:	ldr	r3, [pc, #64]	; 136d8 <_start@@Base+0x10f0>
   13694:	mov	ip, #3
   13698:	mov	r1, r7
   1369c:	mov	r0, r6
   136a0:	mov	r2, ip
   136a4:	str	ip, [sp]
   136a8:	str	r4, [sp, #4]
   136ac:	add	r3, pc, r3
   136b0:	bl	16df0 <flatcc_json_printer_uint8_field@@Base>
   136b4:	add	sp, sp, #20
   136b8:	ldrd	r4, [sp]
   136bc:	ldrd	r6, [sp, #8]
   136c0:	add	sp, sp, #16
   136c4:	pop	{pc}		; (ldr pc, [sp], #4)
   136c8:	muleq	r0, ip, r0
   136cc:	ldrdeq	lr, [r0], -r0
   136d0:	andeq	lr, r0, r8, asr #30
   136d4:	andeq	lr, r0, r0, lsr pc
   136d8:	andeq	lr, r0, r0, lsl pc
   136dc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   136e0:	uxtb	r4, r1
   136e4:	tst	r4, #244	; 0xf4
   136e8:	strd	r6, [sp, #8]
   136ec:	movne	r5, #1
   136f0:	moveq	r5, #0
   136f4:	str	r8, [sp, #16]
   136f8:	cmp	r4, #0
   136fc:	str	lr, [sp, #20]
   13700:	moveq	r5, #1
   13704:	cmp	r5, #0
   13708:	beq	13724 <_start@@Base+0x113c>
   1370c:	ldrd	r4, [sp]
   13710:	ldrd	r6, [sp, #8]
   13714:	ldr	r8, [sp, #16]
   13718:	ldr	lr, [sp, #20]
   1371c:	add	sp, sp, #24
   13720:	b	1657c <flatcc_json_printer_int8@@Base>
   13724:	sub	r3, r4, #1
   13728:	mov	r6, r0
   1372c:	tst	r3, r4
   13730:	movne	r7, #1
   13734:	moveq	r7, #0
   13738:	mov	r1, r7
   1373c:	bl	167e0 <flatcc_json_printer_delimit_enum_flags@@Base>
   13740:	ands	r1, r4, #1
   13744:	bne	13778 <_start@@Base+0x1190>
   13748:	tst	r4, #2
   1374c:	bne	1379c <_start@@Base+0x11b4>
   13750:	tst	r4, #8
   13754:	bne	137c0 <_start@@Base+0x11d8>
   13758:	mov	r1, r7
   1375c:	mov	r0, r6
   13760:	ldrd	r4, [sp]
   13764:	ldrd	r6, [sp, #8]
   13768:	ldr	r8, [sp, #16]
   1376c:	ldr	lr, [sp, #20]
   13770:	add	sp, sp, #24
   13774:	b	167e0 <flatcc_json_printer_delimit_enum_flags@@Base>
   13778:	ldr	r2, [pc, #88]	; 137d8 <_start@@Base+0x11f0>
   1377c:	mov	r1, r5
   13780:	mov	r3, #3
   13784:	mov	r0, r6
   13788:	add	r2, pc, r2
   1378c:	bl	16810 <flatcc_json_printer_enum_flag@@Base>
   13790:	tst	r4, #2
   13794:	mov	r1, #1
   13798:	beq	13750 <_start@@Base+0x1168>
   1379c:	ldr	r2, [pc, #56]	; 137dc <_start@@Base+0x11f4>
   137a0:	mov	r3, #5
   137a4:	mov	r0, r6
   137a8:	add	r5, r1, #1
   137ac:	add	r2, pc, r2
   137b0:	bl	16810 <flatcc_json_printer_enum_flag@@Base>
   137b4:	tst	r4, #8
   137b8:	mov	r1, r5
   137bc:	beq	13758 <_start@@Base+0x1170>
   137c0:	ldr	r2, [pc, #24]	; 137e0 <_start@@Base+0x11f8>
   137c4:	mov	r3, #4
   137c8:	mov	r0, r6
   137cc:	add	r2, pc, r2
   137d0:	bl	16810 <flatcc_json_printer_enum_flag@@Base>
   137d4:	b	13758 <_start@@Base+0x1170>
   137d8:	andeq	lr, r0, r8, lsr lr
   137dc:	andeq	lr, r0, r8, lsl lr
   137e0:	andeq	lr, r0, r0, lsl #28
   137e4:	ldr	ip, [pc, #272]	; 138fc <_start@@Base+0x1314>
   137e8:	mov	r3, #0
   137ec:	mov	r2, r1
   137f0:	strd	r4, [sp, #-20]!	; 0xffffffec
   137f4:	mov	r4, r1
   137f8:	mov	r1, r3
   137fc:	strd	r6, [sp, #8]
   13800:	mov	r7, #1
   13804:	mov	r5, r0
   13808:	str	lr, [sp, #16]
   1380c:	sub	sp, sp, #20
   13810:	mov	r6, #5
   13814:	add	ip, pc, ip
   13818:	str	ip, [sp]
   1381c:	str	r7, [sp, #4]
   13820:	bl	1a894 <flatcc_json_printer_float_struct_field@@Base>
   13824:	ldr	ip, [pc, #212]	; 13900 <_start@@Base+0x1318>
   13828:	mov	r2, r4
   1382c:	mov	r1, r7
   13830:	mov	r0, r5
   13834:	mov	r3, #4
   13838:	str	r7, [sp, #4]
   1383c:	add	ip, pc, ip
   13840:	str	ip, [sp]
   13844:	bl	1a894 <flatcc_json_printer_float_struct_field@@Base>
   13848:	ldr	ip, [pc, #180]	; 13904 <_start@@Base+0x131c>
   1384c:	mov	r2, r4
   13850:	mov	r0, r5
   13854:	mov	r3, #8
   13858:	mov	r1, #2
   1385c:	str	r7, [sp, #4]
   13860:	add	ip, pc, ip
   13864:	str	ip, [sp]
   13868:	bl	1a894 <flatcc_json_printer_float_struct_field@@Base>
   1386c:	ldr	ip, [pc, #148]	; 13908 <_start@@Base+0x1320>
   13870:	mov	r2, r4
   13874:	mov	r0, r5
   13878:	mov	r3, #16
   1387c:	mov	r1, #3
   13880:	str	r6, [sp, #4]
   13884:	add	ip, pc, ip
   13888:	str	ip, [sp]
   1388c:	bl	1aa28 <flatcc_json_printer_double_struct_field@@Base>
   13890:	ldr	lr, [pc, #116]	; 1390c <_start@@Base+0x1324>
   13894:	mov	r2, r4
   13898:	mov	r0, r5
   1389c:	mov	r3, #24
   138a0:	mov	r1, #4
   138a4:	ldr	ip, [pc, #100]	; 13910 <_start@@Base+0x1328>
   138a8:	add	lr, pc, lr
   138ac:	add	ip, pc, ip
   138b0:	str	ip, [sp]
   138b4:	stmib	sp, {r6, lr}
   138b8:	bl	1b324 <flatcc_json_printer_int8_enum_struct_field@@Base>
   138bc:	ldr	lr, [pc, #80]	; 13914 <_start@@Base+0x132c>
   138c0:	mov	r2, r4
   138c4:	mov	r1, r6
   138c8:	mov	r0, r5
   138cc:	mov	r3, #26
   138d0:	ldr	ip, [pc, #64]	; 13918 <_start@@Base+0x1330>
   138d4:	add	lr, pc, lr
   138d8:	add	ip, pc, ip
   138dc:	str	ip, [sp]
   138e0:	stmib	sp, {r6, lr}
   138e4:	bl	20f90 <flatcc_json_printer_embedded_struct_field@@Base>
   138e8:	add	sp, sp, #20
   138ec:	ldrd	r4, [sp]
   138f0:	ldrd	r6, [sp, #8]
   138f4:	add	sp, sp, #16
   138f8:	pop	{pc}		; (ldr pc, [sp], #4)
   138fc:	andeq	lr, r0, r0, asr #27
   13900:	andeq	lr, r0, r8, lsl fp
   13904:	andeq	lr, r0, r8, ror sp
   13908:	andeq	lr, r0, r8, asr sp
   1390c:			; <UNDEFINED> instruction: 0xfffffe2c
   13910:	andeq	lr, r0, r8, lsr sp
   13914:			; <UNDEFINED> instruction: 0xfffff8d0
   13918:	andeq	lr, r0, r4, lsl sp
   1391c:	sub	r1, r1, #1
   13920:	cmp	r1, #3
   13924:	addls	pc, pc, r1, lsl #2
   13928:	b	1397c <_start@@Base+0x1394>
   1392c:	b	1396c <_start@@Base+0x1384>
   13930:	b	1395c <_start@@Base+0x1374>
   13934:	b	1394c <_start@@Base+0x1364>
   13938:	b	1393c <_start@@Base+0x1354>
   1393c:	ldr	r1, [pc, #72]	; 1398c <_start@@Base+0x13a4>
   13940:	mov	r2, #3
   13944:	add	r1, pc, r1
   13948:	b	16750 <flatcc_json_printer_enum@@Base>
   1394c:	ldr	r1, [pc, #60]	; 13990 <_start@@Base+0x13a8>
   13950:	mov	r2, #8
   13954:	add	r1, pc, r1
   13958:	b	16750 <flatcc_json_printer_enum@@Base>
   1395c:	ldr	r1, [pc, #48]	; 13994 <_start@@Base+0x13ac>
   13960:	mov	r2, #23
   13964:	add	r1, pc, r1
   13968:	b	16750 <flatcc_json_printer_enum@@Base>
   1396c:	ldr	r1, [pc, #36]	; 13998 <_start@@Base+0x13b0>
   13970:	mov	r2, #7
   13974:	add	r1, pc, r1
   13978:	b	16750 <flatcc_json_printer_enum@@Base>
   1397c:	ldr	r1, [pc, #24]	; 1399c <_start@@Base+0x13b4>
   13980:	mov	r2, #4
   13984:	add	r1, pc, r1
   13988:	b	16750 <flatcc_json_printer_enum@@Base>
   1398c:	ldrdeq	lr, [r0], -ip
   13990:	andeq	lr, r0, r0, asr #25
   13994:	muleq	r0, r8, ip
   13998:	andeq	lr, r0, r0, lsl #25
   1399c:	andeq	lr, r0, r4, lsr #24
   139a0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   139a4:	strd	r6, [sp, #8]
   139a8:	str	r8, [sp, #16]
   139ac:	mov	r8, r1
   139b0:	ldr	r1, [pc, #220]	; 13a94 <_start@@Base+0x14ac>
   139b4:	str	lr, [sp, #20]
   139b8:	add	r1, pc, r1
   139bc:	bl	123fc <fopen@plt>
   139c0:	subs	r6, r0, #0
   139c4:	beq	13a80 <_start@@Base+0x1498>
   139c8:	mov	r2, #2
   139cc:	mov	r1, #0
   139d0:	bl	124ec <fseek@plt>
   139d4:	mov	r0, r6
   139d8:	bl	1242c <ftell@plt>
   139dc:	mov	r5, r0
   139e0:	mov	r0, r6
   139e4:	cmp	r5, #10240	; 0x2800
   139e8:	str	r5, [r8]
   139ec:	bhi	13a78 <_start@@Base+0x1490>
   139f0:	bl	12444 <rewind@plt>
   139f4:	cmp	r5, #0
   139f8:	movne	r0, r5
   139fc:	moveq	r0, #1
   13a00:	bl	12480 <malloc@plt>
   13a04:	subs	r7, r0, #0
   13a08:	beq	13a88 <_start@@Base+0x14a0>
   13a0c:	mov	r4, #0
   13a10:	b	13a18 <_start@@Base+0x1430>
   13a14:	add	r4, r4, r0
   13a18:	mov	r3, r6
   13a1c:	sub	r2, r5, r4
   13a20:	mov	r1, #1
   13a24:	add	r0, r7, r4
   13a28:	bl	12468 <fread@plt>
   13a2c:	cmp	r0, #0
   13a30:	bne	13a14 <_start@@Base+0x142c>
   13a34:	cmp	r5, r4
   13a38:	mov	r0, r6
   13a3c:	bne	13a60 <_start@@Base+0x1478>
   13a40:	bl	124d4 <fclose@plt>
   13a44:	str	r5, [r8]
   13a48:	mov	r0, r7
   13a4c:	ldrd	r4, [sp]
   13a50:	ldrd	r6, [sp, #8]
   13a54:	ldr	r8, [sp, #16]
   13a58:	add	sp, sp, #20
   13a5c:	pop	{pc}		; (ldr pc, [sp], #4)
   13a60:	bl	124d4 <fclose@plt>
   13a64:	mov	r0, r7
   13a68:	bl	12414 <free@plt>
   13a6c:	mov	r7, #0
   13a70:	str	r5, [r8]
   13a74:	b	13a48 <_start@@Base+0x1460>
   13a78:	bl	124d4 <fclose@plt>
   13a7c:	b	13a6c <_start@@Base+0x1484>
   13a80:	mov	r5, r6
   13a84:	b	13a6c <_start@@Base+0x1484>
   13a88:	mov	r0, r6
   13a8c:	bl	124d4 <fclose@plt>
   13a90:	b	13a6c <_start@@Base+0x1484>
   13a94:	andeq	lr, r0, ip, ror #24
   13a98:	bx	lr

00013a9c <test_print@@Base>:
   13a9c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   13aa0:	mov	r2, #0
   13aa4:	ldr	r4, [pc, #708]	; 13d70 <test_print@@Base+0x2d4>
   13aa8:	strd	r6, [sp, #8]
   13aac:	ldr	r3, [pc, #704]	; 13d74 <test_print@@Base+0x2d8>
   13ab0:	strd	r8, [sp, #16]
   13ab4:	strd	sl, [sp, #24]
   13ab8:	str	lr, [sp, #32]
   13abc:	sub	sp, sp, #76	; 0x4c
   13ac0:	add	r4, pc, r4
   13ac4:	ldr	r1, [pc, #684]	; 13d78 <test_print@@Base+0x2dc>
   13ac8:	str	r2, [sp, #12]
   13acc:	str	r2, [sp, #16]
   13ad0:	str	r2, [sp, #20]
   13ad4:	ldr	r7, [r4, r3]
   13ad8:	add	r1, pc, r1
   13adc:	ldr	r0, [r7]
   13ae0:	bl	123fc <fopen@plt>
   13ae4:	subs	r6, r0, #0
   13ae8:	beq	13d4c <test_print@@Base+0x2b0>
   13aec:	add	r5, sp, #24
   13af0:	mov	r1, r6
   13af4:	mov	r0, r5
   13af8:	bl	21b68 <flatcc_json_printer_init@@Base>
   13afc:	ldr	r3, [pc, #632]	; 13d7c <test_print@@Base+0x2e0>
   13b00:	mov	r1, #2
   13b04:	mov	r2, #1
   13b08:	strb	r1, [sp, #49]	; 0x31
   13b0c:	strh	r2, [sp, #50]	; 0x32
   13b10:	ldr	r8, [r4, r3]
   13b14:	ldr	r9, [r8]
   13b18:	cmp	r9, #0
   13b1c:	beq	13b38 <test_print@@Base+0x9c>
   13b20:	ldr	r1, [pc, #600]	; 13d80 <test_print@@Base+0x2e4>
   13b24:	mov	r0, r9
   13b28:	add	r1, pc, r1
   13b2c:	bl	123f0 <strcmp@plt>
   13b30:	cmp	r0, #0
   13b34:	bne	13c5c <test_print@@Base+0x1c0>
   13b38:	ldr	r9, [pc, #580]	; 13d84 <test_print@@Base+0x2e8>
   13b3c:	mov	r3, #288	; 0x120
   13b40:	str	r3, [sp, #12]
   13b44:	add	r9, pc, r9
   13b48:	ldr	r3, [pc, #568]	; 13d88 <test_print@@Base+0x2ec>
   13b4c:	add	r1, sp, #16
   13b50:	ldr	fp, [r4, r3]
   13b54:	ldr	r0, [fp]
   13b58:	bl	139a0 <_start@@Base+0x13b8>
   13b5c:	subs	sl, r0, #0
   13b60:	beq	13cdc <test_print@@Base+0x240>
   13b64:	ldr	ip, [pc, #544]	; 13d8c <test_print@@Base+0x2f0>
   13b68:	mov	r1, r9
   13b6c:	mov	r0, r5
   13b70:	ldr	r3, [pc, #536]	; 13d90 <test_print@@Base+0x2f4>
   13b74:	ldr	r2, [sp, #12]
   13b78:	add	ip, pc, ip
   13b7c:	add	r3, pc, r3
   13b80:	str	ip, [sp]
   13b84:	bl	2157c <flatcc_json_printer_table_as_root@@Base>
   13b88:	mov	r1, #1
   13b8c:	mov	r0, r5
   13b90:	ldr	r3, [sp, #68]	; 0x44
   13b94:	blx	r3
   13b98:	ldr	r3, [sp, #60]	; 0x3c
   13b9c:	cmp	r3, #0
   13ba0:	bne	13ca4 <test_print@@Base+0x208>
   13ba4:	mov	r0, r6
   13ba8:	bl	124d4 <fclose@plt>
   13bac:	add	r1, sp, #20
   13bb0:	ldr	r0, [r7]
   13bb4:	bl	139a0 <_start@@Base+0x13b8>
   13bb8:	subs	fp, r0, #0
   13bbc:	ldr	r3, [pc, #464]	; 13d94 <test_print@@Base+0x2f8>
   13bc0:	beq	13d18 <test_print@@Base+0x27c>
   13bc4:	ldr	r1, [sp, #16]
   13bc8:	ldr	r2, [sp, #20]
   13bcc:	ldr	r3, [r4, r3]
   13bd0:	cmp	r2, r1
   13bd4:	ldr	r4, [r3]
   13bd8:	bne	13bec <test_print@@Base+0x150>
   13bdc:	mov	r1, sl
   13be0:	bl	12438 <memcmp@plt>
   13be4:	subs	r6, r0, #0
   13be8:	beq	13cc0 <test_print@@Base+0x224>
   13bec:	ldr	r0, [pc, #420]	; 13d98 <test_print@@Base+0x2fc>
   13bf0:	mov	r3, r4
   13bf4:	mov	r2, #54	; 0x36
   13bf8:	mov	r1, #1
   13bfc:	mvn	r6, #0
   13c00:	add	r0, pc, r0
   13c04:	bl	1245c <fwrite@plt>
   13c08:	mov	r0, r5
   13c0c:	bl	21ddc <flatcc_json_printer_clear@@Base>
   13c10:	ldr	r3, [r8]
   13c14:	cmp	r3, #0
   13c18:	beq	13cb4 <test_print@@Base+0x218>
   13c1c:	mov	r0, r9
   13c20:	bl	12414 <free@plt>
   13c24:	mov	r0, sl
   13c28:	bl	12414 <free@plt>
   13c2c:	cmp	fp, #0
   13c30:	beq	13c3c <test_print@@Base+0x1a0>
   13c34:	mov	r0, fp
   13c38:	bl	12414 <free@plt>
   13c3c:	mov	r0, r6
   13c40:	add	sp, sp, #76	; 0x4c
   13c44:	ldrd	r4, [sp]
   13c48:	ldrd	r6, [sp, #8]
   13c4c:	ldrd	r8, [sp, #16]
   13c50:	ldrd	sl, [sp, #24]
   13c54:	add	sp, sp, #32
   13c58:	pop	{pc}		; (ldr pc, [sp], #4)
   13c5c:	mov	r0, r9
   13c60:	add	r1, sp, #12
   13c64:	bl	139a0 <_start@@Base+0x13b8>
   13c68:	subs	r9, r0, #0
   13c6c:	bne	13b48 <test_print@@Base+0xac>
   13c70:	ldr	r3, [pc, #284]	; 13d94 <test_print@@Base+0x2f8>
   13c74:	ldr	r1, [pc, #288]	; 13d9c <test_print@@Base+0x300>
   13c78:	ldr	r2, [r8]
   13c7c:	ldr	r3, [r4, r3]
   13c80:	add	r1, pc, r1
   13c84:	ldr	r0, [r3]
   13c88:	bl	124b0 <fprintf@plt>
   13c8c:	mov	r0, r5
   13c90:	bl	21ddc <flatcc_json_printer_clear@@Base>
   13c94:	mov	r0, r6
   13c98:	mvn	r6, #0
   13c9c:	bl	124d4 <fclose@plt>
   13ca0:	b	13c3c <test_print@@Base+0x1a0>
   13ca4:	ldr	r0, [pc, #244]	; 13da0 <test_print@@Base+0x304>
   13ca8:	add	r0, pc, r0
   13cac:	bl	12474 <puts@plt>
   13cb0:	b	13ba4 <test_print@@Base+0x108>
   13cb4:	mov	r0, sl
   13cb8:	bl	12414 <free@plt>
   13cbc:	b	13c34 <test_print@@Base+0x198>
   13cc0:	ldr	r0, [pc, #220]	; 13da4 <test_print@@Base+0x308>
   13cc4:	mov	r3, r4
   13cc8:	mov	r2, #26
   13ccc:	mov	r1, #1
   13cd0:	add	r0, pc, r0
   13cd4:	bl	1245c <fwrite@plt>
   13cd8:	b	13c08 <test_print@@Base+0x16c>
   13cdc:	ldr	r3, [pc, #176]	; 13d94 <test_print@@Base+0x2f8>
   13ce0:	ldr	r1, [pc, #192]	; 13da8 <test_print@@Base+0x30c>
   13ce4:	ldr	r2, [fp]
   13ce8:	ldr	r3, [r4, r3]
   13cec:	add	r1, pc, r1
   13cf0:	ldr	r0, [r3]
   13cf4:	bl	124b0 <fprintf@plt>
   13cf8:	mov	r0, r5
   13cfc:	bl	21ddc <flatcc_json_printer_clear@@Base>
   13d00:	ldr	r3, [r8]
   13d04:	cmp	r3, #0
   13d08:	beq	13c94 <test_print@@Base+0x1f8>
   13d0c:	mov	r0, r9
   13d10:	bl	12414 <free@plt>
   13d14:	b	13c94 <test_print@@Base+0x1f8>
   13d18:	ldr	r1, [pc, #140]	; 13dac <test_print@@Base+0x310>
   13d1c:	mvn	r6, #0
   13d20:	ldr	r3, [r4, r3]
   13d24:	ldr	r2, [r7]
   13d28:	add	r1, pc, r1
   13d2c:	ldr	r0, [r3]
   13d30:	bl	124b0 <fprintf@plt>
   13d34:	mov	r0, r5
   13d38:	bl	21ddc <flatcc_json_printer_clear@@Base>
   13d3c:	ldr	r3, [r8]
   13d40:	cmp	r3, #0
   13d44:	bne	13c1c <test_print@@Base+0x180>
   13d48:	b	13c24 <test_print@@Base+0x188>
   13d4c:	ldr	r3, [pc, #64]	; 13d94 <test_print@@Base+0x2f8>
   13d50:	mvn	r6, #0
   13d54:	ldr	r1, [pc, #84]	; 13db0 <test_print@@Base+0x314>
   13d58:	ldr	r2, [r7]
   13d5c:	ldr	r3, [r4, r3]
   13d60:	add	r1, pc, r1
   13d64:	ldr	r0, [r3]
   13d68:	bl	124b0 <fprintf@plt>
   13d6c:	b	13c3c <test_print@@Base+0x1a0>
   13d70:	andeq	r0, r2, r8, lsr r5
   13d74:	andeq	r0, r0, r4, lsl #1
   13d78:	andeq	lr, r0, r0, asr fp
   13d7c:	andeq	r0, r0, ip, ror r0
   13d80:	andeq	lr, r0, r4, lsr #22
   13d84:	muleq	r0, r0, r5
   13d88:	andeq	r0, r0, r4, ror r0
   13d8c:			; <UNDEFINED> instruction: 0xffffeec4
   13d90:	andeq	lr, r0, ip, lsr #22
   13d94:	andeq	r0, r0, r0, ror r0
   13d98:	strdeq	lr, [r0], -r8
   13d9c:	ldrdeq	lr, [r0], -r0
   13da0:	andeq	lr, r0, r8, lsl #20
   13da4:	andeq	lr, r0, r0, ror #20
   13da8:	muleq	r0, r0, r9
   13dac:	andeq	lr, r0, r8, lsr #19
   13db0:	andeq	lr, r0, ip, asr #17
   13db4:	andeq	r0, r0, r0
   13db8:	cmp	r0, #1000	; 0x3e8
   13dbc:	strd	r4, [sp, #-12]!
   13dc0:	str	lr, [sp, #8]
   13dc4:	bcc	13ec4 <test_print@@Base+0x428>
   13dc8:	movw	r3, #34079	; 0x851f
   13dcc:	movt	r3, #20971	; 0x51eb
   13dd0:	ldr	r4, [pc, #316]	; 13f14 <test_print@@Base+0x478>
   13dd4:	mov	r2, #100	; 0x64
   13dd8:	movw	ip, #9999	; 0x270f
   13ddc:	umull	lr, r3, r3, r0
   13de0:	cmp	r0, ip
   13de4:	lsr	r3, r3, #5
   13de8:	add	r4, pc, r4
   13dec:	uxth	ip, r3
   13df0:	mls	r3, r2, r3, r0
   13df4:	mov	r2, #0
   13df8:	uxth	r3, r3
   13dfc:	add	r5, r4, r3, lsl #1
   13e00:	bls	13e7c <test_print@@Base+0x3e0>
   13e04:	strb	r2, [r1, #5]
   13e08:	add	lr, r1, #3
   13e0c:	mov	r2, #5
   13e10:	ldrb	r3, [r4, r3, lsl #1]
   13e14:	strb	r3, [r1, #3]
   13e18:	ldrb	r3, [r5, #1]
   13e1c:	strb	r3, [r1, #4]
   13e20:	movw	r3, #34079	; 0x851f
   13e24:	movt	r3, #20971	; 0x51eb
   13e28:	ldr	r1, [pc, #232]	; 13f18 <test_print@@Base+0x47c>
   13e2c:	mov	r0, #100	; 0x64
   13e30:	sub	r4, lr, #2
   13e34:	umull	r5, r3, r3, ip
   13e38:	lsr	r3, r3, #5
   13e3c:	add	r1, pc, r1
   13e40:	mls	ip, r0, r3, ip
   13e44:	uxth	r0, r3
   13e48:	mov	r3, r1
   13e4c:	uxth	ip, ip
   13e50:	ldrb	r1, [r1, ip, lsl #1]
   13e54:	add	r3, r3, ip, lsl #1
   13e58:	strb	r1, [lr, #-2]
   13e5c:	ldrb	r3, [r3, #1]
   13e60:	strb	r3, [lr, #-1]
   13e64:	add	r3, r0, #48	; 0x30
   13e68:	mov	r0, r2
   13e6c:	strb	r3, [r4, #-1]
   13e70:	ldrd	r4, [sp]
   13e74:	add	sp, sp, #8
   13e78:	pop	{pc}		; (ldr pc, [sp], #4)
   13e7c:	strb	r2, [r1, #4]
   13e80:	add	r0, r1, #2
   13e84:	mov	r2, #4
   13e88:	ldrb	r3, [r4, r3, lsl #1]
   13e8c:	strb	r3, [r1, #2]
   13e90:	ldrb	r3, [r5, #1]
   13e94:	strb	r3, [r1, #3]
   13e98:	ldr	r3, [pc, #124]	; 13f1c <test_print@@Base+0x480>
   13e9c:	add	r3, pc, r3
   13ea0:	ldrb	r1, [r3, ip, lsl #1]
   13ea4:	add	ip, r3, ip, lsl #1
   13ea8:	strb	r1, [r0, #-2]
   13eac:	ldrb	r3, [ip, #1]
   13eb0:	strb	r3, [r0, #-1]
   13eb4:	mov	r0, r2
   13eb8:	ldrd	r4, [sp]
   13ebc:	add	sp, sp, #8
   13ec0:	pop	{pc}		; (ldr pc, [sp], #4)
   13ec4:	cmp	r0, #99	; 0x63
   13ec8:	bhi	13ee8 <test_print@@Base+0x44c>
   13ecc:	cmp	r0, #9
   13ed0:	mov	r3, #0
   13ed4:	bhi	13f00 <test_print@@Base+0x464>
   13ed8:	add	r4, r1, #1
   13edc:	mov	r2, #1
   13ee0:	strb	r3, [r1, #1]
   13ee4:	b	13e64 <test_print@@Base+0x3c8>
   13ee8:	mov	r3, #0
   13eec:	mov	ip, r0
   13ef0:	add	lr, r1, #3
   13ef4:	mov	r2, #3
   13ef8:	strb	r3, [r1, #3]
   13efc:	b	13e20 <test_print@@Base+0x384>
   13f00:	mov	ip, r0
   13f04:	mov	r2, #2
   13f08:	strb	r3, [r1, #2]
   13f0c:	add	r0, r1, #2
   13f10:	b	13e98 <test_print@@Base+0x3fc>
   13f14:	andeq	lr, r0, r8, ror sl
   13f18:	andeq	lr, r0, r4, lsr #20
   13f1c:	andeq	lr, r0, r4, asr #19
   13f20:	movw	r2, #9999	; 0x270f
   13f24:	mov	r3, r0
   13f28:	strd	r4, [sp, #-32]!	; 0xffffffe0
   13f2c:	cmp	r0, r2
   13f30:	strd	r6, [sp, #8]
   13f34:	strd	r8, [sp, #16]
   13f38:	str	sl, [sp, #24]
   13f3c:	str	lr, [sp, #28]
   13f40:	bls	14080 <test_print@@Base+0x5e4>
   13f44:	movw	r2, #34079	; 0x851f
   13f48:	movt	r2, #20971	; 0x51eb
   13f4c:	ldr	r4, [pc, #744]	; 1423c <test_print@@Base+0x7a0>
   13f50:	mov	r5, #100	; 0x64
   13f54:	movw	lr, #5977	; 0x1759
   13f58:	movt	lr, #53687	; 0xd1b7
   13f5c:	umull	ip, r0, r2, r0
   13f60:	movw	ip, #38527	; 0x967f
   13f64:	movt	ip, #152	; 0x98
   13f68:	cmp	r3, ip
   13f6c:	umull	r6, lr, lr, r3
   13f70:	lsr	ip, r0, #5
   13f74:	add	r4, pc, r4
   13f78:	lsr	lr, lr, #13
   13f7c:	umull	r6, r0, r2, ip
   13f80:	mls	r7, r5, ip, r3
   13f84:	lsr	r0, r0, #5
   13f88:	add	r6, r4, r7, lsl #1
   13f8c:	mls	r0, r5, r0, ip
   13f90:	add	ip, r4, r0, lsl #1
   13f94:	bls	140e8 <test_print@@Base+0x64c>
   13f98:	umull	r0, r8, r2, lr
   13f9c:	movw	r0, #56963	; 0xde83
   13fa0:	movt	r0, #17179	; 0x431b
   13fa4:	movw	r9, #51711	; 0xc9ff
   13fa8:	movt	r9, #15258	; 0x3b9a
   13fac:	umull	sl, r0, r0, r3
   13fb0:	cmp	r3, r9
   13fb4:	lsr	r8, r8, #5
   13fb8:	mls	r8, r5, r8, lr
   13fbc:	lsr	lr, r0, #18
   13fc0:	add	r8, r4, r8, lsl #1
   13fc4:	bhi	14180 <test_print@@Base+0x6e4>
   13fc8:	movw	r2, #57599	; 0xe0ff
   13fcc:	movt	r2, #1525	; 0x5f5
   13fd0:	cmp	r3, r2
   13fd4:	mov	r3, #0
   13fd8:	bls	14200 <test_print@@Base+0x764>
   13fdc:	strb	r3, [r1, #9]
   13fe0:	add	r5, r1, #7
   13fe4:	mov	r0, #9
   13fe8:	ldrb	r3, [r4, r7, lsl #1]
   13fec:	strb	r3, [r1, #7]
   13ff0:	ldrb	r3, [r6, #1]
   13ff4:	mov	r6, ip
   13ff8:	mov	ip, r8
   13ffc:	strb	r3, [r1, #8]
   14000:	movw	r3, #34079	; 0x851f
   14004:	movt	r3, #20971	; 0x51eb
   14008:	ldrb	r7, [r6]
   1400c:	mov	r4, #100	; 0x64
   14010:	sub	r1, r5, #2
   14014:	umull	r2, r3, r3, lr
   14018:	ldr	r2, [pc, #544]	; 14240 <test_print@@Base+0x7a4>
   1401c:	lsr	r3, r3, #5
   14020:	strb	r7, [r5, #-2]
   14024:	ldrb	r6, [r6, #1]
   14028:	add	r2, pc, r2
   1402c:	mls	lr, r4, r3, lr
   14030:	add	r2, r2, lr, lsl #1
   14034:	strb	r6, [r5, #-1]
   14038:	ldrb	r4, [ip]
   1403c:	sub	lr, r1, #2
   14040:	strb	r4, [r1, #-2]
   14044:	ldrb	ip, [ip, #1]
   14048:	strb	ip, [r1, #-1]
   1404c:	ldrb	r1, [r2]
   14050:	sub	ip, lr, #2
   14054:	strb	r1, [lr, #-2]
   14058:	ldrb	r2, [r2, #1]
   1405c:	strb	r2, [lr, #-1]
   14060:	add	r3, r3, #48	; 0x30
   14064:	strb	r3, [ip, #-1]
   14068:	ldrd	r4, [sp]
   1406c:	ldrd	r6, [sp, #8]
   14070:	ldrd	r8, [sp, #16]
   14074:	ldr	sl, [sp, #24]
   14078:	add	sp, sp, #28
   1407c:	pop	{pc}		; (ldr pc, [sp], #4)
   14080:	cmp	r0, #99	; 0x63
   14084:	bls	140cc <test_print@@Base+0x630>
   14088:	movw	ip, #34079	; 0x851f
   1408c:	movt	ip, #20971	; 0x51eb
   14090:	ldr	r2, [pc, #428]	; 14244 <test_print@@Base+0x7a8>
   14094:	mov	r0, #100	; 0x64
   14098:	cmp	r3, #1000	; 0x3e8
   1409c:	umull	lr, ip, ip, r3
   140a0:	lsr	ip, ip, #5
   140a4:	add	r2, pc, r2
   140a8:	mov	lr, ip
   140ac:	mls	r3, r0, ip, r3
   140b0:	add	r2, r2, r3, lsl #1
   140b4:	bcc	14168 <test_print@@Base+0x6cc>
   140b8:	mov	ip, #0
   140bc:	add	r3, r1, #4
   140c0:	mov	r0, #4
   140c4:	strb	ip, [r1, #4]
   140c8:	b	14134 <test_print@@Base+0x698>
   140cc:	cmp	r0, #9
   140d0:	mov	r2, #0
   140d4:	bhi	141ec <test_print@@Base+0x750>
   140d8:	add	ip, r1, #1
   140dc:	mov	r0, #1
   140e0:	strb	r2, [r1, #1]
   140e4:	b	14060 <test_print@@Base+0x5c4>
   140e8:	movw	r2, #16959	; 0x423f
   140ec:	movt	r2, #15
   140f0:	cmp	r3, r2
   140f4:	bhi	141d8 <test_print@@Base+0x73c>
   140f8:	movw	r2, #34463	; 0x869f
   140fc:	movt	r2, #1
   14100:	cmp	r3, r2
   14104:	bls	1421c <test_print@@Base+0x780>
   14108:	mov	r3, #0
   1410c:	mov	r2, ip
   14110:	mov	r8, r6
   14114:	add	r4, r1, #6
   14118:	mov	r0, #6
   1411c:	strb	r3, [r1, #6]
   14120:	ldrb	r1, [r8]
   14124:	sub	r3, r4, #2
   14128:	strb	r1, [r4, #-2]
   1412c:	ldrb	r1, [r8, #1]
   14130:	strb	r1, [r4, #-1]
   14134:	ldrb	r1, [r2]
   14138:	sub	ip, r3, #2
   1413c:	strb	r1, [r3, #-2]
   14140:	ldrb	r2, [r2, #1]
   14144:	strb	r2, [r3, #-1]
   14148:	ldr	r2, [pc, #248]	; 14248 <test_print@@Base+0x7ac>
   1414c:	add	r2, pc, r2
   14150:	ldrb	r3, [r2, lr, lsl #1]
   14154:	add	r2, r2, lr, lsl #1
   14158:	strb	r3, [ip, #-2]
   1415c:	ldrb	r3, [r2, #1]
   14160:	strb	r3, [ip, #-1]
   14164:	b	14068 <test_print@@Base+0x5cc>
   14168:	mov	r4, #0
   1416c:	mov	r3, ip
   14170:	add	lr, r1, #3
   14174:	mov	r0, #3
   14178:	strb	r4, [r1, #3]
   1417c:	b	1404c <test_print@@Base+0x5b0>
   14180:	umull	r0, r2, r2, lr
   14184:	mov	r9, #0
   14188:	movw	r0, #15241	; 0x3b89
   1418c:	movt	r0, #21990	; 0x55e6
   14190:	strb	r9, [r1, #10]
   14194:	ldrb	r9, [r4, r7, lsl #1]
   14198:	lsr	r2, r2, #5
   1419c:	add	r7, r1, #8
   141a0:	umull	r0, r3, r0, r3
   141a4:	mov	r0, #10
   141a8:	mls	r2, r5, r2, lr
   141ac:	lsr	lr, r3, #25
   141b0:	strb	r9, [r1, #8]
   141b4:	ldrb	r3, [r6, #1]
   141b8:	add	r2, r4, r2, lsl #1
   141bc:	strb	r3, [r1, #9]
   141c0:	ldrb	r3, [ip]
   141c4:	sub	r4, r7, #2
   141c8:	strb	r3, [r7, #-2]
   141cc:	ldrb	r3, [ip, #1]
   141d0:	strb	r3, [r7, #-1]
   141d4:	b	14120 <test_print@@Base+0x684>
   141d8:	mov	r3, #0
   141dc:	add	r5, r1, #7
   141e0:	mov	r0, #7
   141e4:	strb	r3, [r1, #7]
   141e8:	b	14000 <test_print@@Base+0x564>
   141ec:	mov	lr, r0
   141f0:	add	ip, r1, #2
   141f4:	strb	r2, [r1, #2]
   141f8:	mov	r0, #2
   141fc:	b	14148 <test_print@@Base+0x6ac>
   14200:	mov	r2, r8
   14204:	add	r7, r1, #8
   14208:	strb	r3, [r1, #8]
   1420c:	mov	r8, ip
   14210:	mov	r0, #8
   14214:	mov	ip, r6
   14218:	b	141c0 <test_print@@Base+0x724>
   1421c:	mov	r0, #0
   14220:	mov	r2, ip
   14224:	mov	r3, lr
   14228:	mov	ip, r6
   1422c:	add	r1, r1, #5
   14230:	strb	r0, [r1]
   14234:	mov	r0, #5
   14238:	b	14038 <test_print@@Base+0x59c>
   1423c:	andeq	lr, r0, ip, ror #17
   14240:	andeq	lr, r0, r8, lsr r8
   14244:			; <UNDEFINED> instruction: 0x0000e7bc
   14248:	andeq	lr, r0, r4, lsl r7
   1424c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14250:	strd	r6, [sp, #8]
   14254:	add	r7, pc, #932	; 0x3a4
   14258:	ldrd	r6, [r7]
   1425c:	strd	r8, [sp, #16]
   14260:	mov	r8, r0
   14264:	strd	sl, [sp, #24]
   14268:	str	lr, [sp, #32]
   1426c:	sub	sp, sp, #28
   14270:	cmp	r1, r7
   14274:	cmpeq	r0, r6
   14278:	bls	145d8 <test_print@@Base+0xb3c>
   1427c:	mov	fp, r2
   14280:	mov	r3, #0
   14284:	ldr	r6, [pc, #932]	; 14630 <test_print@@Base+0xb94>
   14288:	mov	r2, #100	; 0x64
   1428c:	mov	r9, r1
   14290:	bl	21ef4 <flatcc_json_printer_clear@@Base+0x118>
   14294:	mov	r4, r2
   14298:	mov	r3, #0
   1429c:	mov	r2, #100	; 0x64
   142a0:	mov	r0, r8
   142a4:	mov	r1, r9
   142a8:	add	r6, pc, r6
   142ac:	bl	21ef4 <flatcc_json_printer_clear@@Base+0x118>
   142b0:	add	r3, pc, #848	; 0x350
   142b4:	ldrd	r2, [r3]
   142b8:	mov	sl, r0
   142bc:	add	r7, r6, r4, lsl #1
   142c0:	str	r1, [sp]
   142c4:	str	r4, [sp, #16]
   142c8:	cmp	r9, r3
   142cc:	cmpeq	r8, r2
   142d0:	bls	14508 <test_print@@Base+0xa6c>
   142d4:	mov	r2, #100	; 0x64
   142d8:	mov	r3, #0
   142dc:	bl	21ef4 <flatcc_json_printer_clear@@Base+0x118>
   142e0:	add	r3, r6, r2, lsl #1
   142e4:	mov	r0, r8
   142e8:	movw	r2, #10000	; 0x2710
   142ec:	mov	r1, r9
   142f0:	str	r3, [sp, #12]
   142f4:	mov	r3, #0
   142f8:	bl	21ef4 <flatcc_json_printer_clear@@Base+0x118>
   142fc:	mov	r2, #100	; 0x64
   14300:	mov	r3, #0
   14304:	str	r1, [sp]
   14308:	mov	sl, r0
   1430c:	bl	21ef4 <flatcc_json_printer_clear@@Base+0x118>
   14310:	add	r1, r6, r2, lsl #1
   14314:	mov	r3, #0
   14318:	mov	r0, r8
   1431c:	movw	r2, #16960	; 0x4240
   14320:	movt	r2, #15
   14324:	str	r1, [sp, #8]
   14328:	mov	r1, r9
   1432c:	bl	21ef4 <flatcc_json_printer_clear@@Base+0x118>
   14330:	add	r3, pc, #728	; 0x2d8
   14334:	ldrd	r2, [r3]
   14338:	mov	r5, r0
   1433c:	mov	r4, r1
   14340:	cmp	r9, r3
   14344:	cmpeq	r8, r2
   14348:	bhi	1463c <test_print@@Base+0xba0>
   1434c:	add	r3, pc, #708	; 0x2c4
   14350:	ldrd	r2, [r3]
   14354:	cmp	r9, r3
   14358:	cmpeq	r8, r2
   1435c:	bls	147a0 <test_print@@Base+0xd04>
   14360:	ldr	r2, [sp, #8]
   14364:	mov	r3, #0
   14368:	add	ip, fp, #16
   1436c:	mov	r9, #16
   14370:	str	r7, [sp, #8]
   14374:	strb	r3, [fp, #16]
   14378:	mov	r7, r2
   1437c:	ldr	r8, [sp, #8]
   14380:	mov	r0, r5
   14384:	mov	r1, r4
   14388:	mov	r2, #100	; 0x64
   1438c:	mov	r3, #0
   14390:	sub	r6, ip, #2
   14394:	ldrb	lr, [r8]
   14398:	strb	lr, [ip, #-2]
   1439c:	ldrb	lr, [r8, #1]
   143a0:	ldr	r8, [pc, #652]	; 14634 <test_print@@Base+0xb98>
   143a4:	strb	lr, [ip, #-1]
   143a8:	bl	21ef4 <flatcc_json_printer_clear@@Base+0x118>
   143ac:	add	r8, pc, r8
   143b0:	mov	r0, r5
   143b4:	add	r3, r8, r2, lsl #1
   143b8:	mov	r1, r4
   143bc:	mov	r2, #100	; 0x64
   143c0:	str	r3, [sp, #4]
   143c4:	mov	r3, #0
   143c8:	bl	21ef4 <flatcc_json_printer_clear@@Base+0x118>
   143cc:	mov	r5, r0
   143d0:	mov	r4, r1
   143d4:	ldr	r1, [sp, #12]
   143d8:	sub	r3, r6, #2
   143dc:	ldrb	r2, [r1]
   143e0:	strb	r2, [r6, #-2]
   143e4:	ldrb	r2, [r1, #1]
   143e8:	strb	r2, [r6, #-1]
   143ec:	ldrb	r1, [r7]
   143f0:	sub	r2, r3, #2
   143f4:	strb	r1, [r3, #-2]
   143f8:	ldrb	r1, [r7, #1]
   143fc:	strb	r1, [r3, #-1]
   14400:	ldr	r1, [sp, #4]
   14404:	sub	r7, r2, #2
   14408:	ldrb	r3, [r1]
   1440c:	strb	r3, [r2, #-2]
   14410:	ldrb	r3, [r1, #1]
   14414:	strb	r3, [r2, #-1]
   14418:	ldr	r6, [pc, #536]	; 14638 <test_print@@Base+0xb9c>
   1441c:	mov	r0, r5
   14420:	mov	r1, r4
   14424:	mov	r2, #100	; 0x64
   14428:	mov	r3, #0
   1442c:	bl	21ef4 <flatcc_json_printer_clear@@Base+0x118>
   14430:	mov	r0, r5
   14434:	mov	r1, r4
   14438:	mov	r3, #0
   1443c:	add	r6, pc, r6
   14440:	ldrb	lr, [r6, r2, lsl #1]
   14444:	add	ip, r6, r2, lsl #1
   14448:	mov	r2, #100	; 0x64
   1444c:	strb	lr, [r7, #-2]
   14450:	ldrb	ip, [ip, #1]
   14454:	strb	ip, [r7, #-1]
   14458:	bl	21ef4 <flatcc_json_printer_clear@@Base+0x118>
   1445c:	mov	r2, #100	; 0x64
   14460:	mov	r3, #0
   14464:	bl	21ef4 <flatcc_json_printer_clear@@Base+0x118>
   14468:	ldrb	lr, [r6, r2, lsl #1]
   1446c:	add	ip, r6, r2, lsl #1
   14470:	mov	r0, r5
   14474:	mov	r1, r4
   14478:	movw	r2, #10000	; 0x2710
   1447c:	mov	r3, #0
   14480:	strb	lr, [r7, #-4]
   14484:	ldrb	ip, [ip, #1]
   14488:	strb	ip, [r7, #-3]
   1448c:	bl	21ef4 <flatcc_json_printer_clear@@Base+0x118>
   14490:	mov	r2, #100	; 0x64
   14494:	mov	r3, #0
   14498:	bl	21ef4 <flatcc_json_printer_clear@@Base+0x118>
   1449c:	ldrb	lr, [r6, r2, lsl #1]
   144a0:	add	ip, r6, r2, lsl #1
   144a4:	mov	r0, r5
   144a8:	mov	r1, r4
   144ac:	mov	r3, #0
   144b0:	movw	r2, #16960	; 0x4240
   144b4:	movt	r2, #15
   144b8:	strb	lr, [r7, #-6]
   144bc:	ldrb	ip, [ip, #1]
   144c0:	strb	ip, [r7, #-5]
   144c4:	bl	21ef4 <flatcc_json_printer_clear@@Base+0x118>
   144c8:	mov	r2, #100	; 0x64
   144cc:	mov	r3, #0
   144d0:	bl	21ef4 <flatcc_json_printer_clear@@Base+0x118>
   144d4:	ldrb	r3, [r6, r2, lsl #1]
   144d8:	add	r6, r6, r2, lsl #1
   144dc:	mov	r0, r9
   144e0:	strb	r3, [r7, #-8]
   144e4:	ldrb	r3, [r6, #1]
   144e8:	strb	r3, [r7, #-7]
   144ec:	add	sp, sp, #28
   144f0:	ldrd	r4, [sp]
   144f4:	ldrd	r6, [sp, #8]
   144f8:	ldrd	r8, [sp, #16]
   144fc:	ldrd	sl, [sp, #24]
   14500:	add	sp, sp, #32
   14504:	pop	{pc}		; (ldr pc, [sp], #4)
   14508:	add	r3, pc, #272	; 0x110
   1450c:	ldrd	r2, [r3]
   14510:	cmp	r9, r3
   14514:	cmpeq	r8, r2
   14518:	bls	14720 <test_print@@Base+0xc84>
   1451c:	mov	r2, #100	; 0x64
   14520:	mov	r3, #0
   14524:	bl	21ef4 <flatcc_json_printer_clear@@Base+0x118>
   14528:	add	r3, r6, r2, lsl #1
   1452c:	mov	r0, r8
   14530:	movw	r2, #10000	; 0x2710
   14534:	mov	r1, r9
   14538:	str	r3, [sp, #4]
   1453c:	mov	r3, #0
   14540:	bl	21ef4 <flatcc_json_printer_clear@@Base+0x118>
   14544:	add	r3, pc, #220	; 0xdc
   14548:	ldrd	r2, [r3]
   1454c:	mov	r5, r0
   14550:	mov	r4, r1
   14554:	cmp	r9, r3
   14558:	cmpeq	r8, r2
   1455c:	mov	r2, #0
   14560:	bls	14830 <test_print@@Base+0xd94>
   14564:	add	r3, fp, #13
   14568:	mov	r9, #13
   1456c:	strb	r2, [fp, #13]
   14570:	ldrb	r2, [r7]
   14574:	sub	r6, r3, #2
   14578:	strb	r2, [r3, #-2]
   1457c:	ldrb	r2, [r7, #1]
   14580:	strb	r2, [r3, #-1]
   14584:	ldr	lr, [sp, #4]
   14588:	mov	r0, r5
   1458c:	mov	r1, r4
   14590:	mov	r2, #10
   14594:	mov	r3, #0
   14598:	sub	r7, r6, #3
   1459c:	ldrb	ip, [lr]
   145a0:	strb	ip, [r6, #-2]
   145a4:	ldrb	ip, [lr, #1]
   145a8:	strb	ip, [r6, #-1]
   145ac:	bl	21ef4 <flatcc_json_printer_clear@@Base+0x118>
   145b0:	add	r2, r2, #48	; 0x30
   145b4:	mov	r0, sl
   145b8:	ldr	r1, [sp]
   145bc:	mov	r3, #0
   145c0:	strb	r2, [r6, #-3]
   145c4:	mov	r2, #1000	; 0x3e8
   145c8:	bl	21ef4 <flatcc_json_printer_clear@@Base+0x118>
   145cc:	mov	r5, r0
   145d0:	mov	r4, r1
   145d4:	b	14418 <test_print@@Base+0x97c>
   145d8:	mov	r1, r2
   145dc:	add	sp, sp, #28
   145e0:	ldrd	r4, [sp]
   145e4:	ldrd	r6, [sp, #8]
   145e8:	ldrd	r8, [sp, #16]
   145ec:	ldrd	sl, [sp, #24]
   145f0:	ldr	lr, [sp, #32]
   145f4:	add	sp, sp, #36	; 0x24
   145f8:	b	13f20 <test_print@@Base+0x484>
   145fc:	nop	{0}
   14600:	blcc	fe6c6e04 <__bss_end__@@Base+0xfe692d64>
   14604:	andeq	r0, r0, r0
   14608:	mrcmi	15, 3, r9, cr2, cr15, {7}
   1460c:	andeq	r0, r0, r8, lsl r9
   14610:	svcvs	0x00c0ffff
   14614:	strdeq	r8, [r3], -r2	; <UNPREDICTABLE>
   14618:	strbge	r7, [r6], #4095	; 0xfff
   1461c:	andeq	r8, r3, lr, ror sp
   14620:	ldmdami	r6!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, sp, lr, pc}^
   14624:	andeq	r0, r0, r7, lsl r0
   14628:	strtle	r0, [r5], #4095	; 0xfff
   1462c:	andeq	r0, r0, r8, ror #1
   14630:			; <UNDEFINED> instruction: 0x0000e5b8
   14634:			; <UNDEFINED> instruction: 0x0000e4b4
   14638:	andeq	lr, r0, r4, lsr #8
   1463c:	mov	r2, #100	; 0x64
   14640:	mov	r3, #0
   14644:	bl	21ef4 <flatcc_json_printer_clear@@Base+0x118>
   14648:	add	r1, r6, r2, lsl #1
   1464c:	mov	r0, r8
   14650:	add	r3, pc, #584	; 0x248
   14654:	ldrd	r2, [r3]
   14658:	str	r1, [sp, #20]
   1465c:	mov	r1, r9
   14660:	bl	21ef4 <flatcc_json_printer_clear@@Base+0x118>
   14664:	add	r3, pc, #572	; 0x23c
   14668:	ldrd	r2, [r3]
   1466c:	mov	sl, r0
   14670:	str	r1, [sp]
   14674:	cmp	r9, r3
   14678:	cmpeq	r8, r2
   1467c:	bls	147d4 <test_print@@Base+0xd38>
   14680:	mov	r2, #100	; 0x64
   14684:	mov	r3, #0
   14688:	bl	21ef4 <flatcc_json_printer_clear@@Base+0x118>
   1468c:	add	r0, r6, r2, lsl #1
   14690:	mov	r1, r9
   14694:	add	r3, pc, #532	; 0x214
   14698:	ldrd	r2, [r3]
   1469c:	str	r0, [sp, #4]
   146a0:	mov	r0, r8
   146a4:	bl	21ef4 <flatcc_json_printer_clear@@Base+0x118>
   146a8:	add	r3, pc, #520	; 0x208
   146ac:	ldrd	r2, [r3]
   146b0:	mov	r5, r0
   146b4:	mov	r4, r1
   146b8:	cmp	r9, r3
   146bc:	cmpeq	r8, r2
   146c0:	bhi	14754 <test_print@@Base+0xcb8>
   146c4:	mov	r2, #0
   146c8:	add	r3, fp, #17
   146cc:	mov	r9, #19
   146d0:	strb	r2, [fp, #19]
   146d4:	ldr	r2, [sp, #16]
   146d8:	ldrb	r2, [r6, r2, lsl #1]
   146dc:	strb	r2, [fp, #17]
   146e0:	ldrb	r2, [r7, #1]
   146e4:	ldr	r7, [sp, #20]
   146e8:	strb	r2, [fp, #18]
   146ec:	ldr	r0, [sp, #12]
   146f0:	sub	r2, r3, #2
   146f4:	ldrb	r1, [r0]
   146f8:	strb	r1, [r3, #-2]
   146fc:	ldrb	r1, [r0, #1]
   14700:	strb	r1, [r3, #-1]
   14704:	ldr	r0, [sp, #8]
   14708:	sub	r3, r2, #2
   1470c:	ldrb	r1, [r0]
   14710:	strb	r1, [r2, #-2]
   14714:	ldrb	r1, [r0, #1]
   14718:	strb	r1, [r2, #-1]
   1471c:	b	14570 <test_print@@Base+0xad4>
   14720:	add	r3, pc, #408	; 0x198
   14724:	ldrd	r2, [r3]
   14728:	mov	r5, r0
   1472c:	str	r7, [sp, #4]
   14730:	ldr	r4, [sp]
   14734:	cmp	r9, r3
   14738:	mov	r3, #0
   1473c:	cmpeq	r8, r2
   14740:	bhi	14818 <test_print@@Base+0xd7c>
   14744:	add	r2, fp, #10
   14748:	mov	r9, #10
   1474c:	strb	r3, [fp, #10]
   14750:	b	14400 <test_print@@Base+0x964>
   14754:	mov	r1, #0
   14758:	mov	r9, #20
   1475c:	ldr	r2, [sp, #12]
   14760:	ldr	ip, [sp, #16]
   14764:	strb	r1, [fp, #20]
   14768:	ldr	r3, [sp, #20]
   1476c:	ldrb	r1, [r6, ip, lsl #1]
   14770:	str	r3, [sp, #12]
   14774:	add	r3, fp, #18
   14778:	strb	r1, [fp, #18]
   1477c:	ldrb	r1, [r7, #1]
   14780:	ldr	r7, [sp, #4]
   14784:	strb	r1, [fp, #19]
   14788:	ldrb	r1, [r2]
   1478c:	sub	ip, r3, #2
   14790:	strb	r1, [r3, #-2]
   14794:	ldrb	r2, [r2, #1]
   14798:	strb	r2, [r3, #-1]
   1479c:	b	1437c <test_print@@Base+0x8e0>
   147a0:	add	r3, pc, #288	; 0x120
   147a4:	ldrd	r2, [r3]
   147a8:	cmp	r9, r3
   147ac:	mov	r3, #0
   147b0:	cmpeq	r8, r2
   147b4:	bls	1487c <test_print@@Base+0xde0>
   147b8:	ldr	r2, [sp, #8]
   147bc:	mov	r9, #15
   147c0:	strb	r3, [fp, #15]
   147c4:	stmib	sp, {r2, r7}
   147c8:	add	r2, fp, #15
   147cc:	ldr	r7, [sp, #12]
   147d0:	b	14704 <test_print@@Base+0xc68>
   147d4:	add	r3, pc, #244	; 0xf4
   147d8:	ldrd	r2, [r3]
   147dc:	cmp	r9, r3
   147e0:	cmpeq	r8, r2
   147e4:	bls	14840 <test_print@@Base+0xda4>
   147e8:	mov	r5, r0
   147ec:	mov	r3, #0
   147f0:	ldr	r4, [sp]
   147f4:	mov	r2, r7
   147f8:	mov	r9, #18
   147fc:	ldr	r1, [sp, #8]
   14800:	strb	r3, [fp, #18]
   14804:	add	r3, fp, #18
   14808:	ldr	r0, [sp, #12]
   1480c:	ldr	r7, [sp, #20]
   14810:	strd	r0, [sp, #8]
   14814:	b	14788 <test_print@@Base+0xcec>
   14818:	add	r6, fp, #11
   1481c:	mov	sl, r8
   14820:	str	r9, [sp]
   14824:	mov	r9, #11
   14828:	strb	r3, [fp, #11]
   1482c:	b	14584 <test_print@@Base+0xae8>
   14830:	add	r3, fp, #12
   14834:	mov	r9, #12
   14838:	strb	r2, [fp, #12]
   1483c:	b	143ec <test_print@@Base+0x950>
   14840:	ldr	r3, [sp, #12]
   14844:	mov	r2, #0
   14848:	mov	sl, r5
   1484c:	mov	r9, #17
   14850:	mov	r5, r0
   14854:	str	r4, [sp]
   14858:	str	r7, [sp, #12]
   1485c:	mov	r4, r1
   14860:	ldr	r7, [sp, #8]
   14864:	strb	r2, [fp, #17]
   14868:	str	r3, [sp, #8]
   1486c:	ldr	r3, [sp, #20]
   14870:	str	r3, [sp, #4]
   14874:	add	r3, fp, #17
   14878:	b	146ec <test_print@@Base+0xc50>
   1487c:	ldr	r1, [sp, #8]
   14880:	add	r6, fp, #14
   14884:	mov	r9, #14
   14888:	strb	r3, [fp, #14]
   1488c:	ldr	r2, [sp, #12]
   14890:	str	r1, [sp, #4]
   14894:	str	r7, [sp, #12]
   14898:	mov	r7, r2
   1489c:	b	143d4 <test_print@@Base+0x938>
   148a0:	ldrbeq	lr, [r5, #256]!	; 0x100
   148a4:	andeq	r0, r0, r0
   148a8:			; <UNDEFINED> instruction: 0xa763ffff
   148ac:	stcleq	6, cr11, [r0, #716]!	; 0x2cc
   148b0:	strpl	lr, [fp], #-1024	; 0xfffffc00
   148b4:	andeq	r0, r0, r2
   148b8:	stmibhi	r7!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}^
   148bc:	bhi	ff1dd4d4 <__bss_end__@@Base+0xff1a9434>
   148c0:	strpl	lr, [fp], #-1023	; 0xfffffc01
   148c4:	andeq	r0, r0, r2
   148c8:	ldrshtne	r3, [sl], #-255	; 0xffffff01
   148cc:	strdeq	r5, [r0], -r3
   148d0:	stcpl	15, cr15, [r9, #1020]	; 0x3fc
   148d4:	smceq	13400	; 0x3458
   148d8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   148dc:	strd	r6, [sp, #8]
   148e0:	strd	r8, [sp, #16]
   148e4:	strd	sl, [sp, #24]
   148e8:	str	lr, [sp, #32]
   148ec:	sub	sp, sp, #116	; 0x74
   148f0:	ldr	ip, [sp, #152]	; 0x98
   148f4:	strd	r2, [sp, #24]
   148f8:	ldr	lr, [sp, #176]	; 0xb0
   148fc:	strd	r0, [sp, #48]	; 0x30
   14900:	ldr	sl, [sp, #180]	; 0xb4
   14904:	str	ip, [sp, #64]	; 0x40
   14908:	ldr	fp, [sp, #156]	; 0x9c
   1490c:	subs	r2, r2, lr
   14910:	ldrd	r0, [sp, #160]	; 0xa0
   14914:	sbc	r3, r3, sl
   14918:	strd	r2, [sp, #16]
   1491c:	ldrd	r2, [sp, #16]
   14920:	str	fp, [sp, #68]	; 0x44
   14924:	cmp	r3, r1
   14928:	cmpeq	r2, r0
   1492c:	ldrd	r2, [sp, #168]	; 0xa8
   14930:	bls	14b4c <test_print@@Base+0x10b0>
   14934:	subs	r6, ip, r0
   14938:	sbc	r7, fp, r1
   1493c:	cmp	r3, r7
   14940:	cmpeq	r2, r6
   14944:	bhi	14b58 <test_print@@Base+0x10bc>
   14948:	subs	ip, ip, r2
   1494c:	ldr	r6, [sp, #52]	; 0x34
   14950:	sbc	r7, fp, r3
   14954:	subs	r4, ip, r0
   14958:	str	lr, [sp, #32]
   1495c:	ldr	ip, [sp, #48]	; 0x30
   14960:	sbc	r5, r7, r1
   14964:	str	sl, [sp, #36]	; 0x24
   14968:	sub	r6, r6, #1
   1496c:	add	r6, ip, r6
   14970:	mov	fp, r6
   14974:	ldrd	r6, [sp, #16]
   14978:	adds	r8, r2, r0
   1497c:	adc	r9, r3, r1
   14980:	cmp	r9, r7
   14984:	cmpeq	r8, r6
   14988:	bcc	14ad4 <test_print@@Base+0x1038>
   1498c:	subs	ip, r6, r0
   14990:	ldr	r4, [sp, #28]
   14994:	str	ip, [sp]
   14998:	sbc	ip, r7, r1
   1499c:	ldr	lr, [sp, #32]
   149a0:	str	ip, [sp, #4]
   149a4:	ldr	ip, [sp, #24]
   149a8:	ldr	sl, [sp, #36]	; 0x24
   149ac:	subs	ip, lr, ip
   149b0:	sbc	r4, sl, r4
   149b4:	adds	ip, ip, r8
   149b8:	str	ip, [sp, #8]
   149bc:	adc	ip, r4, r9
   149c0:	ldrd	r4, [sp]
   149c4:	str	ip, [sp, #12]
   149c8:	ldrd	r6, [sp, #8]
   149cc:	cmp	r5, r7
   149d0:	cmpeq	r4, r6
   149d4:	bcc	14b4c <test_print@@Base+0x10b0>
   149d8:	ldr	ip, [sp, #48]	; 0x30
   149dc:	ldr	r1, [sp, #52]	; 0x34
   149e0:	sub	r1, r1, #1
   149e4:	ldrb	r0, [ip, r1]
   149e8:	sub	r0, r0, #1
   149ec:	strb	r0, [ip, r1]
   149f0:	ldr	r1, [sp, #24]
   149f4:	adds	r1, r1, lr
   149f8:	str	r1, [sp, #56]	; 0x38
   149fc:	ldr	r1, [sp, #28]
   14a00:	adc	r1, r1, sl
   14a04:	str	r1, [sp, #60]	; 0x3c
   14a08:	ldrd	r0, [sp, #56]	; 0x38
   14a0c:	cmp	r1, r9
   14a10:	cmpeq	r0, r8
   14a14:	bls	14a94 <test_print@@Base+0xff8>
   14a18:	ldr	ip, [sp, #64]	; 0x40
   14a1c:	subs	ip, ip, r8
   14a20:	str	ip, [sp, #80]	; 0x50
   14a24:	ldr	ip, [sp, #68]	; 0x44
   14a28:	sbc	ip, ip, r9
   14a2c:	str	ip, [sp, #84]	; 0x54
   14a30:	ldrd	r4, [sp, #80]	; 0x50
   14a34:	cmp	r5, r3
   14a38:	cmpeq	r4, r2
   14a3c:	bcc	14a94 <test_print@@Base+0xff8>
   14a40:	adds	ip, r2, r8
   14a44:	adc	r3, r3, r9
   14a48:	str	ip, [sp, #88]	; 0x58
   14a4c:	str	r3, [sp, #92]	; 0x5c
   14a50:	ldrd	r2, [sp, #88]	; 0x58
   14a54:	cmp	r3, r1
   14a58:	cmpeq	r2, r0
   14a5c:	bcc	14ab4 <test_print@@Base+0x1018>
   14a60:	subs	ip, r0, r8
   14a64:	str	ip, [sp, #96]	; 0x60
   14a68:	sbc	ip, r1, r9
   14a6c:	str	ip, [sp, #100]	; 0x64
   14a70:	subs	ip, r2, r0
   14a74:	sbc	r3, r3, r1
   14a78:	str	ip, [sp, #104]	; 0x68
   14a7c:	str	r3, [sp, #108]	; 0x6c
   14a80:	ldrd	r2, [sp, #96]	; 0x60
   14a84:	ldrd	r0, [sp, #104]	; 0x68
   14a88:	cmp	r3, r1
   14a8c:	cmpeq	r2, r0
   14a90:	bhi	14ab4 <test_print@@Base+0x1018>
   14a94:	adds	r3, lr, lr
   14a98:	str	r3, [sp, #40]	; 0x28
   14a9c:	adc	r3, sl, sl
   14aa0:	str	r3, [sp, #44]	; 0x2c
   14aa4:	ldrd	r2, [sp, #40]	; 0x28
   14aa8:	cmp	r3, r9
   14aac:	cmpeq	r2, r8
   14ab0:	bls	14b10 <test_print@@Base+0x1074>
   14ab4:	mov	r0, #0
   14ab8:	add	sp, sp, #116	; 0x74
   14abc:	ldrd	r4, [sp]
   14ac0:	ldrd	r6, [sp, #8]
   14ac4:	ldrd	r8, [sp, #16]
   14ac8:	ldrd	sl, [sp, #24]
   14acc:	add	sp, sp, #32
   14ad0:	pop	{pc}		; (ldr pc, [sp], #4)
   14ad4:	ldrb	ip, [fp]
   14ad8:	subs	sl, r4, r2
   14adc:	mov	r0, r8
   14ae0:	sbc	lr, r5, r3
   14ae4:	cmp	r5, r3
   14ae8:	cmpeq	r4, r2
   14aec:	mov	r1, r9
   14af0:	mov	r4, sl
   14af4:	mov	r5, lr
   14af8:	sub	ip, ip, #1
   14afc:	strb	ip, [fp]
   14b00:	bcs	14974 <test_print@@Base+0xed8>
   14b04:	ldr	lr, [sp, #32]
   14b08:	ldr	sl, [sp, #36]	; 0x24
   14b0c:	b	14a94 <test_print@@Base+0xff8>
   14b10:	ldr	r2, [sp, #64]	; 0x40
   14b14:	lsl	r3, lr, #2
   14b18:	lsl	sl, sl, #2
   14b1c:	orr	sl, sl, lr, lsr #30
   14b20:	subs	r3, r2, r3
   14b24:	str	r3, [sp, #72]	; 0x48
   14b28:	ldr	r3, [sp, #68]	; 0x44
   14b2c:	sbc	r3, r3, sl
   14b30:	str	r3, [sp, #76]	; 0x4c
   14b34:	ldrd	r2, [sp, #72]	; 0x48
   14b38:	cmp	r3, r9
   14b3c:	cmpeq	r2, r8
   14b40:	movcs	r0, #1
   14b44:	bcs	14ab8 <test_print@@Base+0x101c>
   14b48:	b	14ab4 <test_print@@Base+0x1018>
   14b4c:	mov	r8, r0
   14b50:	mov	r9, r1
   14b54:	b	149f0 <test_print@@Base+0xf54>
   14b58:	mov	r8, r0
   14b5c:	mov	r9, r1
   14b60:	b	14a94 <test_print@@Base+0xff8>
   14b64:	cmp	r0, #0
   14b68:	strd	r4, [sp, #-16]!
   14b6c:	str	r6, [sp, #8]
   14b70:	mov	r6, r1
   14b74:	str	lr, [sp, #12]
   14b78:	bge	14b88 <test_print@@Base+0x10ec>
   14b7c:	mov	r3, #45	; 0x2d
   14b80:	rsb	r0, r0, #0
   14b84:	strb	r3, [r6], #1
   14b88:	movw	ip, #52429	; 0xcccd
   14b8c:	movt	ip, #52428	; 0xcccc
   14b90:	mov	lr, r6
   14b94:	mvn	r4, #9
   14b98:	umull	r2, r3, ip, r0
   14b9c:	lsr	r3, r3, #3
   14ba0:	mla	r2, r4, r3, r0
   14ba4:	subs	r0, r3, #0
   14ba8:	add	r3, r2, #48	; 0x30
   14bac:	strb	r3, [lr], #1
   14bb0:	bne	14b98 <test_print@@Base+0x10fc>
   14bb4:	sub	r3, lr, r6
   14bb8:	strb	r0, [lr]
   14bbc:	add	r0, r3, r3, lsr #31
   14bc0:	cmp	r3, #1
   14bc4:	asr	r0, r0, #1
   14bc8:	ble	14bf8 <test_print@@Base+0x115c>
   14bcc:	sub	r3, r6, #1
   14bd0:	mov	ip, lr
   14bd4:	ldrb	r4, [r3, #1]
   14bd8:	add	r2, r3, #2
   14bdc:	add	r3, r3, #1
   14be0:	sub	r2, r2, r6
   14be4:	ldrb	r5, [ip, #-1]!
   14be8:	cmp	r0, r2
   14bec:	strb	r5, [r3]
   14bf0:	strb	r4, [ip]
   14bf4:	bgt	14bd4 <test_print@@Base+0x1138>
   14bf8:	ldrd	r4, [sp]
   14bfc:	sub	r0, lr, r1
   14c00:	ldr	r6, [sp, #8]
   14c04:	add	sp, sp, #12
   14c08:	pop	{pc}		; (ldr pc, [sp], #4)
   14c0c:	ldrd	r2, [r0, #16]
   14c10:	cmp	r3, r2
   14c14:	bcc	14c44 <test_print@@Base+0x11a8>
   14c18:	ldr	r1, [r0]
   14c1c:	ldr	r2, [r0, #36]	; 0x24
   14c20:	sub	ip, r3, r1
   14c24:	mov	r3, r1
   14c28:	str	r1, [r0, #20]
   14c2c:	cmp	r2, #0
   14c30:	moveq	r2, #3
   14c34:	streq	r2, [r0, #36]	; 0x24
   14c38:	ldr	r2, [r0, #12]
   14c3c:	add	r2, r2, ip
   14c40:	str	r2, [r0, #12]
   14c44:	mov	r2, #0
   14c48:	strb	r2, [r3]
   14c4c:	bx	lr
   14c50:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14c54:	mov	r5, r0
   14c58:	ldr	r4, [r0, #16]
   14c5c:	ldr	r3, [r0, #20]
   14c60:	strd	r6, [sp, #8]
   14c64:	mov	r6, r1
   14c68:	mov	r7, r2
   14c6c:	str	r8, [sp, #16]
   14c70:	str	lr, [sp, #20]
   14c74:	cmp	r3, r4
   14c78:	bcc	14c90 <test_print@@Base+0x11f4>
   14c7c:	mov	r1, #0
   14c80:	ldr	r3, [r0, #44]	; 0x2c
   14c84:	blx	r3
   14c88:	ldr	r4, [r5, #16]
   14c8c:	ldr	r3, [r5, #20]
   14c90:	sub	r4, r4, r3
   14c94:	cmp	r4, r7
   14c98:	bcs	14ce4 <test_print@@Base+0x1248>
   14c9c:	mov	r2, r4
   14ca0:	mov	r1, r6
   14ca4:	mov	r0, r3
   14ca8:	sub	r7, r7, r4
   14cac:	bl	12420 <memcpy@plt>
   14cb0:	ldr	r3, [r5, #20]
   14cb4:	add	r6, r6, r4
   14cb8:	mov	r1, #0
   14cbc:	mov	r0, r5
   14cc0:	ldr	r2, [r5, #44]	; 0x2c
   14cc4:	add	r4, r3, r4
   14cc8:	str	r4, [r5, #20]
   14ccc:	blx	r2
   14cd0:	ldr	r4, [r5, #16]
   14cd4:	ldr	r3, [r5, #20]
   14cd8:	sub	r4, r4, r3
   14cdc:	cmp	r7, r4
   14ce0:	bhi	14c9c <test_print@@Base+0x1200>
   14ce4:	mov	r1, r6
   14ce8:	mov	r0, r3
   14cec:	mov	r2, r7
   14cf0:	bl	12420 <memcpy@plt>
   14cf4:	ldr	r3, [r5, #20]
   14cf8:	ldr	r8, [sp, #16]
   14cfc:	add	r7, r3, r7
   14d00:	str	r7, [r5, #20]
   14d04:	ldrd	r4, [sp]
   14d08:	ldrd	r6, [sp, #8]
   14d0c:	add	sp, sp, #20
   14d10:	pop	{pc}		; (ldr pc, [sp], #4)
   14d14:	strd	r4, [sp, #-16]!
   14d18:	mov	r4, r0
   14d1c:	ldr	r5, [r0, #16]
   14d20:	ldr	r3, [r0, #20]
   14d24:	str	r6, [sp, #8]
   14d28:	mov	r6, r1
   14d2c:	str	lr, [sp, #12]
   14d30:	cmp	r3, r5
   14d34:	bcc	14d4c <test_print@@Base+0x12b0>
   14d38:	mov	r1, #0
   14d3c:	ldr	r3, [r0, #44]	; 0x2c
   14d40:	blx	r3
   14d44:	ldr	r5, [r4, #16]
   14d48:	ldr	r3, [r4, #20]
   14d4c:	sub	r5, r5, r3
   14d50:	cmp	r5, r6
   14d54:	bcs	14d9c <test_print@@Base+0x1300>
   14d58:	mov	r2, r5
   14d5c:	mov	r0, r3
   14d60:	mov	r1, #32
   14d64:	sub	r6, r6, r5
   14d68:	bl	124bc <memset@plt>
   14d6c:	ldr	r3, [r4, #20]
   14d70:	mov	r1, #0
   14d74:	mov	r0, r4
   14d78:	ldr	r2, [r4, #44]	; 0x2c
   14d7c:	add	r5, r3, r5
   14d80:	str	r5, [r4, #20]
   14d84:	blx	r2
   14d88:	ldr	r5, [r4, #16]
   14d8c:	ldr	r3, [r4, #20]
   14d90:	sub	r5, r5, r3
   14d94:	cmp	r6, r5
   14d98:	bhi	14d58 <test_print@@Base+0x12bc>
   14d9c:	mov	r0, r3
   14da0:	mov	r2, r6
   14da4:	mov	r1, #32
   14da8:	bl	124bc <memset@plt>
   14dac:	ldr	r3, [r4, #20]
   14db0:	add	r6, r3, r6
   14db4:	str	r6, [r4, #20]
   14db8:	ldrd	r4, [sp]
   14dbc:	ldr	r6, [sp, #8]
   14dc0:	add	sp, sp, #12
   14dc4:	pop	{pc}		; (ldr pc, [sp], #4)
   14dc8:	strd	r4, [sp, #-16]!
   14dcc:	ldr	ip, [r0, #16]
   14dd0:	ldr	r2, [r0, #20]
   14dd4:	ldr	r5, [r0, #32]
   14dd8:	str	r6, [sp, #8]
   14ddc:	str	lr, [sp, #12]
   14de0:	ldrb	r1, [r0, #25]
   14de4:	mul	r5, r5, r1
   14de8:	add	r1, r2, r5
   14dec:	cmp	ip, r1
   14df0:	bcs	14e0c <test_print@@Base+0x1370>
   14df4:	mov	r1, r5
   14df8:	ldrd	r4, [sp]
   14dfc:	ldr	r6, [sp, #8]
   14e00:	ldr	lr, [sp, #12]
   14e04:	add	sp, sp, #16
   14e08:	b	14d14 <test_print@@Base+0x1278>
   14e0c:	mov	r4, r0
   14e10:	mov	r1, #32
   14e14:	mov	r0, r2
   14e18:	mov	r2, r5
   14e1c:	bl	124bc <memset@plt>
   14e20:	ldr	r3, [r4, #20]
   14e24:	ldr	r6, [sp, #8]
   14e28:	add	r5, r3, r5
   14e2c:	str	r5, [r4, #20]
   14e30:	ldrd	r4, [sp]
   14e34:	add	sp, sp, #12
   14e38:	pop	{pc}		; (ldr pc, [sp], #4)
   14e3c:	cmp	r1, #0
   14e40:	strd	r4, [sp, #-16]!
   14e44:	mov	r4, r0
   14e48:	ldr	r0, [r0]
   14e4c:	ldr	ip, [r4, #20]
   14e50:	ldr	r3, [r4, #40]	; 0x28
   14e54:	str	r6, [sp, #8]
   14e58:	str	lr, [sp, #12]
   14e5c:	bne	14e6c <test_print@@Base+0x13d0>
   14e60:	ldr	r5, [r4, #16]
   14e64:	cmp	r5, ip
   14e68:	bls	14ea8 <test_print@@Base+0x140c>
   14e6c:	sub	r5, ip, r0
   14e70:	mov	r2, #1
   14e74:	mov	r1, r5
   14e78:	bl	1245c <fwrite@plt>
   14e7c:	ldr	r3, [r4]
   14e80:	ldr	ip, [r4, #12]
   14e84:	str	r3, [r4, #20]
   14e88:	add	ip, ip, r5
   14e8c:	str	ip, [r4, #12]
   14e90:	mov	r2, #0
   14e94:	strb	r2, [r3]
   14e98:	ldrd	r4, [sp]
   14e9c:	ldr	r6, [sp, #8]
   14ea0:	add	sp, sp, #12
   14ea4:	pop	{pc}		; (ldr pc, [sp], #4)
   14ea8:	mov	r2, #1
   14eac:	ldr	r1, [r4, #8]
   14eb0:	sub	r5, ip, r5
   14eb4:	bl	1245c <fwrite@plt>
   14eb8:	ldr	r3, [r4]
   14ebc:	mov	r2, r5
   14ec0:	ldr	r1, [r4, #8]
   14ec4:	mov	r0, r3
   14ec8:	add	r1, r3, r1
   14ecc:	bl	12420 <memcpy@plt>
   14ed0:	ldr	r3, [r4]
   14ed4:	ldr	r1, [r4, #8]
   14ed8:	ldr	r2, [r4, #12]
   14edc:	add	r3, r3, r5
   14ee0:	str	r3, [r4, #20]
   14ee4:	add	r2, r2, r1
   14ee8:	str	r2, [r4, #12]
   14eec:	b	14e90 <test_print@@Base+0x13f4>
   14ef0:	ldr	r3, [r0, #20]
   14ef4:	mov	r2, #0
   14ef8:	strd	r4, [sp, #-16]!
   14efc:	ldr	r5, [r0]
   14f00:	str	r6, [sp, #8]
   14f04:	str	lr, [sp, #12]
   14f08:	strb	r2, [r3]
   14f0c:	ldr	r2, [r0, #16]
   14f10:	ldr	r1, [r0, #20]
   14f14:	cmp	r1, r2
   14f18:	bcs	14f2c <test_print@@Base+0x1490>
   14f1c:	ldrd	r4, [sp]
   14f20:	ldr	r6, [sp, #8]
   14f24:	add	sp, sp, #12
   14f28:	pop	{pc}		; (ldr pc, [sp], #4)
   14f2c:	mov	r4, r0
   14f30:	ldrd	r0, [r0]
   14f34:	sub	r5, r3, r5
   14f38:	lsl	r1, r1, #1
   14f3c:	bl	12450 <realloc@plt>
   14f40:	cmp	r0, #0
   14f44:	beq	14f84 <test_print@@Base+0x14e8>
   14f48:	ldr	r3, [r4, #4]
   14f4c:	add	r2, r0, r5
   14f50:	str	r2, [r4, #20]
   14f54:	lsl	r3, r3, #1
   14f58:	sub	r1, r3, #64	; 0x40
   14f5c:	stm	r4, {r0, r3}
   14f60:	add	r0, r0, r1
   14f64:	str	r1, [r4, #8]
   14f68:	str	r0, [r4, #16]
   14f6c:	mov	r3, #0
   14f70:	strb	r3, [r2]
   14f74:	ldrd	r4, [sp]
   14f78:	ldr	r6, [sp, #8]
   14f7c:	add	sp, sp, #12
   14f80:	pop	{pc}		; (ldr pc, [sp], #4)
   14f84:	ldr	r2, [r4]
   14f88:	ldr	r3, [r4, #36]	; 0x24
   14f8c:	str	r2, [r4, #20]
   14f90:	cmp	r3, #0
   14f94:	moveq	r3, #3
   14f98:	streq	r3, [r4, #36]	; 0x24
   14f9c:	ldr	r3, [r4, #12]
   14fa0:	add	r3, r3, r5
   14fa4:	str	r3, [r4, #12]
   14fa8:	b	14f6c <test_print@@Base+0x14d0>
   14fac:	cmp	r0, #99	; 0x63
   14fb0:	mov	r3, r0
   14fb4:	bhi	14fd8 <test_print@@Base+0x153c>
   14fb8:	cmp	r0, #9
   14fbc:	bhi	15038 <test_print@@Base+0x159c>
   14fc0:	add	r3, r0, #48	; 0x30
   14fc4:	mov	r2, #0
   14fc8:	mov	r0, #1
   14fcc:	strb	r3, [r1]
   14fd0:	strb	r2, [r1, #1]
   14fd4:	bx	lr
   14fd8:	movw	r2, #34079	; 0x851f
   14fdc:	movt	r2, #20971	; 0x51eb
   14fe0:	str	r4, [sp, #-8]!
   14fe4:	ldr	ip, [pc, #124]	; 15068 <test_print@@Base+0x15cc>
   14fe8:	mov	r0, #0
   14fec:	umull	r4, r2, r2, r3
   14ff0:	str	lr, [sp, #4]
   14ff4:	mov	lr, #100	; 0x64
   14ff8:	strb	r0, [r1, #3]
   14ffc:	mov	r0, #3
   15000:	ldr	r4, [sp]
   15004:	add	sp, sp, #4
   15008:	lsr	r2, r2, #5
   1500c:	add	ip, pc, ip
   15010:	mls	r3, lr, r2, r3
   15014:	add	r2, r2, #48	; 0x30
   15018:	uxtb	r3, r3
   1501c:	ldrb	lr, [ip, r3, lsl #1]
   15020:	add	ip, ip, r3, lsl #1
   15024:	strb	lr, [r1, #1]
   15028:	ldrb	r3, [ip, #1]
   1502c:	strb	r2, [r1]
   15030:	strb	r3, [r1, #2]
   15034:	pop	{pc}		; (ldr pc, [sp], #4)
   15038:	ldr	r2, [pc, #44]	; 1506c <test_print@@Base+0x15d0>
   1503c:	mov	ip, #0
   15040:	sxth	r3, r0
   15044:	mov	r0, #2
   15048:	strb	ip, [r1, #2]
   1504c:	add	r2, pc, r2
   15050:	ldrb	ip, [r2, r3, lsl #1]
   15054:	add	r3, r2, r3, lsl #1
   15058:	strb	ip, [r1]
   1505c:	ldrb	r3, [r3, #1]
   15060:	strb	r3, [r1, #1]
   15064:	bx	lr
   15068:	andeq	sp, r0, r4, asr r8
   1506c:	andeq	sp, r0, r4, lsl r8
   15070:	ldr	r3, [pc, #36]	; 1509c <test_print@@Base+0x1600>
   15074:	mov	r2, #260	; 0x104
   15078:	str	r4, [sp, #-8]!
   1507c:	ldr	r1, [pc, #28]	; 150a0 <test_print@@Base+0x1604>
   15080:	str	lr, [sp, #4]
   15084:	ldr	r0, [pc, #24]	; 150a4 <test_print@@Base+0x1608>
   15088:	add	r3, pc, r3
   1508c:	add	r3, r3, #204	; 0xcc
   15090:	add	r1, pc, r1
   15094:	add	r0, pc, r0
   15098:	bl	12504 <__assert_fail@plt>
   1509c:	ldrdeq	sp, [r0], -r8
   150a0:	andeq	sp, r0, r0, lsl pc
   150a4:	andeq	sp, r0, ip, ror pc
   150a8:	ldr	r3, [pc, #36]	; 150d4 <test_print@@Base+0x1638>
   150ac:	mov	r2, #239	; 0xef
   150b0:	str	r4, [sp, #-8]!
   150b4:	ldr	r1, [pc, #28]	; 150d8 <test_print@@Base+0x163c>
   150b8:	str	lr, [sp, #4]
   150bc:	ldr	r0, [pc, #24]	; 150dc <test_print@@Base+0x1640>
   150c0:	add	r3, pc, r3
   150c4:	add	r3, r3, #228	; 0xe4
   150c8:	add	r1, pc, r1
   150cc:	add	r0, pc, r0
   150d0:	bl	12504 <__assert_fail@plt>
   150d4:	andeq	sp, r0, r0, lsr #15
   150d8:	ldrdeq	sp, [r0], -r8
   150dc:	andeq	sp, r0, r0, asr pc
   150e0:	cmp	r0, #0
   150e4:	beq	15108 <test_print@@Base+0x166c>
   150e8:	ldr	r3, [pc, #60]	; 1512c <test_print@@Base+0x1690>
   150ec:	mov	r0, #4
   150f0:	add	r3, pc, r3
   150f4:	ldrb	r2, [r3, #252]	; 0xfc
   150f8:	ldr	r3, [r3, #248]	; 0xf8
   150fc:	str	r3, [r1]
   15100:	strb	r2, [r1, #4]
   15104:	bx	lr
   15108:	ldr	r3, [pc, #32]	; 15130 <test_print@@Base+0x1694>
   1510c:	mov	r0, #5
   15110:	add	r3, pc, r3
   15114:	add	ip, r3, #256	; 0x100
   15118:	ldr	r2, [r3, #256]	; 0x100
   1511c:	ldrh	r3, [ip, #4]
   15120:	str	r2, [r1]
   15124:	strh	r3, [r1, #4]
   15128:	bx	lr
   1512c:	andeq	sp, r0, r0, ror r7
   15130:	andeq	sp, r0, r0, asr r7
   15134:	mov	ip, #0
   15138:	strd	r4, [sp, #-12]!
   1513c:	mov	r5, r0
   15140:	str	lr, [sp, #8]
   15144:	sub	sp, sp, #12
   15148:	cmp	r1, ip
   1514c:	cmpne	r2, #7
   15150:	str	ip, [sp, #4]
   15154:	bls	1519c <test_print@@Base+0x1700>
   15158:	cmp	r3, #0
   1515c:	beq	15188 <test_print@@Base+0x16ec>
   15160:	mov	r2, #4
   15164:	mov	r4, r1
   15168:	add	r0, sp, r2
   1516c:	mov	r1, r3
   15170:	bl	124c8 <strncpy@plt>
   15174:	ldr	r2, [r4, #4]
   15178:	ldr	r3, [sp, #4]
   1517c:	cmp	r2, r3
   15180:	cmpne	r3, #0
   15184:	bne	151d0 <test_print@@Base+0x1734>
   15188:	mov	r0, #1
   1518c:	add	sp, sp, #12
   15190:	ldrd	r4, [sp]
   15194:	add	sp, sp, #8
   15198:	pop	{pc}		; (ldr pc, [sp], #4)
   1519c:	ldr	r3, [r0, #36]	; 0x24
   151a0:	movw	r2, #1019	; 0x3fb
   151a4:	ldr	r1, [pc, #88]	; 15204 <test_print@@Base+0x1768>
   151a8:	cmp	r3, ip
   151ac:	moveq	r3, #1
   151b0:	add	r1, pc, r1
   151b4:	streq	r3, [r0, #36]	; 0x24
   151b8:	ldr	r3, [pc, #72]	; 15208 <test_print@@Base+0x176c>
   151bc:	ldr	r0, [pc, #72]	; 1520c <test_print@@Base+0x1770>
   151c0:	add	r3, pc, r3
   151c4:	add	r3, r3, #264	; 0x108
   151c8:	add	r0, pc, r0
   151cc:	bl	12504 <__assert_fail@plt>
   151d0:	ldr	r3, [r5, #36]	; 0x24
   151d4:	movw	r2, #1028	; 0x404
   151d8:	ldr	r1, [pc, #48]	; 15210 <test_print@@Base+0x1774>
   151dc:	ldr	r0, [pc, #48]	; 15214 <test_print@@Base+0x1778>
   151e0:	cmp	r3, #0
   151e4:	moveq	r3, #1
   151e8:	add	r1, pc, r1
   151ec:	streq	r3, [r5, #36]	; 0x24
   151f0:	ldr	r3, [pc, #32]	; 15218 <test_print@@Base+0x177c>
   151f4:	add	r0, pc, r0
   151f8:	add	r3, pc, r3
   151fc:	add	r3, r3, #264	; 0x108
   15200:	bl	12504 <__assert_fail@plt>
   15204:	andeq	sp, r0, r8, lsl #29
   15208:	andeq	sp, r0, r0, lsr #13
   1520c:	ldrdeq	sp, [r0], -r4
   15210:	andeq	sp, r0, r0, asr lr
   15214:	andeq	sp, r0, r8, asr #29
   15218:	andeq	sp, r0, r8, ror #12
   1521c:	bics	ip, r3, #224	; 0xe0
   15220:	strd	r4, [sp, #-20]!	; 0xffffffec
   15224:	strd	r6, [sp, #8]
   15228:	mov	r7, r0
   1522c:	str	lr, [sp, #16]
   15230:	ldr	r6, [r2]
   15234:	beq	15348 <test_print@@Base+0x18ac>
   15238:	cmp	ip, #1
   1523c:	movne	r3, #0
   15240:	movne	r0, #3
   15244:	bne	15334 <test_print@@Base+0x1898>
   15248:	ldr	r5, [pc, #328]	; 15398 <test_print@@Base+0x18fc>
   1524c:	add	r5, pc, r5
   15250:	cmp	r6, #2
   15254:	bls	152d0 <test_print@@Base+0x1834>
   15258:	add	r4, r7, #4
   1525c:	add	ip, r1, #3
   15260:	ldrb	r0, [ip, #-3]
   15264:	sub	r6, r6, #3
   15268:	mov	r1, ip
   1526c:	cmp	r6, #2
   15270:	mov	r7, r4
   15274:	add	ip, ip, #3
   15278:	add	r4, r4, #4
   1527c:	ldrb	r0, [r5, r0, lsr #2]
   15280:	strb	r0, [r4, #-8]
   15284:	ldrb	lr, [ip, #-6]
   15288:	ldrb	r0, [ip, #-5]
   1528c:	lsl	lr, lr, #4
   15290:	and	lr, lr, #48	; 0x30
   15294:	orr	lr, lr, r0, lsr #4
   15298:	ldrb	r0, [r5, lr]
   1529c:	strb	r0, [r4, #-7]
   152a0:	ldrb	lr, [ip, #-5]
   152a4:	ldrb	r0, [ip, #-4]
   152a8:	lsl	lr, lr, #2
   152ac:	and	lr, lr, #60	; 0x3c
   152b0:	orr	lr, lr, r0, lsr #6
   152b4:	ldrb	r0, [r5, lr]
   152b8:	strb	r0, [r4, #-6]
   152bc:	ldrb	r0, [ip, #-4]
   152c0:	and	r0, r0, #63	; 0x3f
   152c4:	ldrb	r0, [r5, r0]
   152c8:	strb	r0, [r4, #-5]
   152cc:	bhi	15260 <test_print@@Base+0x17c4>
   152d0:	cmp	r6, #1
   152d4:	and	r0, r3, #128	; 0x80
   152d8:	beq	15360 <test_print@@Base+0x18c4>
   152dc:	cmp	r6, #2
   152e0:	bne	15354 <test_print@@Base+0x18b8>
   152e4:	ldrb	r3, [r1]
   152e8:	cmp	r0, #0
   152ec:	movne	r0, #0
   152f0:	ldrb	r3, [r5, r3, lsr #2]
   152f4:	strb	r3, [r7]
   152f8:	ldrb	r3, [r1]
   152fc:	ldrb	ip, [r1, #1]
   15300:	lsl	r3, r3, #4
   15304:	and	r3, r3, #48	; 0x30
   15308:	orr	r3, r3, ip, lsr #4
   1530c:	ldrb	r3, [r5, r3]
   15310:	strb	r3, [r7, #1]
   15314:	ldrb	r3, [r1, #1]
   15318:	lsl	r3, r3, #2
   1531c:	and	r3, r3, #60	; 0x3c
   15320:	ldrb	r3, [r5, r3]
   15324:	strb	r3, [r7, #2]
   15328:	movne	r3, #61	; 0x3d
   1532c:	strbne	r3, [r7, #3]
   15330:	ldr	r3, [r2]
   15334:	str	r3, [r2]
   15338:	ldrd	r4, [sp]
   1533c:	ldrd	r6, [sp, #8]
   15340:	add	sp, sp, #16
   15344:	pop	{pc}		; (ldr pc, [sp], #4)
   15348:	ldr	r5, [pc, #76]	; 1539c <test_print@@Base+0x1900>
   1534c:	add	r5, pc, r5
   15350:	b	15250 <test_print@@Base+0x17b4>
   15354:	mov	r0, #0
   15358:	ldr	r3, [r2]
   1535c:	b	15334 <test_print@@Base+0x1898>
   15360:	ldrb	r3, [r1]
   15364:	cmp	r0, #0
   15368:	movne	r0, #0
   1536c:	ldrb	r3, [r5, r3, lsr #2]
   15370:	strb	r3, [r7]
   15374:	ldrb	r3, [r1]
   15378:	lsl	r3, r3, #4
   1537c:	and	r3, r3, #48	; 0x30
   15380:	ldrb	r3, [r5, r3]
   15384:	strb	r3, [r7, #1]
   15388:	movne	r3, #61	; 0x3d
   1538c:	strbne	r3, [r7, #2]
   15390:	strbne	r3, [r7, #3]
   15394:	b	15330 <test_print@@Base+0x1894>
   15398:	andeq	sp, r0, ip, lsl #29
   1539c:	ldrdeq	sp, [r0], -r0
   153a0:	subs	r1, r0, #0
   153a4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   153a8:	strd	r6, [sp, #8]
   153ac:	strd	r8, [sp, #16]
   153b0:	strd	sl, [sp, #24]
   153b4:	str	lr, [sp, #32]
   153b8:	sub	sp, sp, #164	; 0xa4
   153bc:	vstr	d0, [sp, #48]	; 0x30
   153c0:	str	r1, [sp, #60]	; 0x3c
   153c4:	beq	15ebc <test_print@@Base+0x2420>
   153c8:	vmov	r4, r5, d0
   153cc:	mov	r7, #0
   153d0:	movt	r7, #65504	; 0xffe0
   153d4:	mov	r6, #0
   153d8:	adds	r2, r4, r4
   153dc:	adc	r3, r5, r5
   153e0:	cmp	r3, r7
   153e4:	cmpeq	r2, r6
   153e8:	bhi	15c48 <test_print@@Base+0x21ac>
   153ec:	cmp	r4, #0
   153f0:	sbcs	r3, r5, #0
   153f4:	blt	15be0 <test_print@@Base+0x2144>
   153f8:	ldr	r3, [sp, #60]	; 0x3c
   153fc:	str	r3, [sp, #56]	; 0x38
   15400:	orrs	r3, r4, r5
   15404:	beq	15c0c <test_print@@Base+0x2170>
   15408:	mov	r3, #0
   1540c:	movt	r3, #32752	; 0x7ff0
   15410:	mov	r2, #0
   15414:	cmp	r5, r3
   15418:	cmpeq	r4, r2
   1541c:	beq	15c90 <test_print@@Base+0x21f4>
   15420:	ldrd	r2, [sp, #48]	; 0x30
   15424:	mov	r8, #0
   15428:	bic	r9, r3, #-2147483648	; 0x80000000
   1542c:	mov	r0, r3
   15430:	str	r2, [sp, #72]	; 0x48
   15434:	lsr	r9, r9, #20
   15438:	ubfx	r3, r0, #0, #20
   1543c:	lsl	r9, r9, #20
   15440:	str	r3, [sp, #76]	; 0x4c
   15444:	orrs	r3, r8, r9
   15448:	beq	15c64 <test_print@@Base+0x21c8>
   1544c:	ldrd	r2, [sp, #72]	; 0x48
   15450:	ubfx	r0, r0, #20, #11
   15454:	sub	r0, r0, #1072	; 0x430
   15458:	adds	r4, r2, #0
   1545c:	adc	r7, r3, #1048576	; 0x100000
   15460:	sub	r3, r0, #3
   15464:	sub	r0, r0, #4
   15468:	str	r3, [sp, #120]	; 0x78
   1546c:	ldr	ip, [sp, #120]	; 0x78
   15470:	mov	lr, #0
   15474:	movt	lr, #65472	; 0xffc0
   15478:	str	r4, [sp, #32]
   1547c:	mov	r5, #0
   15480:	str	r7, [sp, #36]	; 0x24
   15484:	strd	sl, [sp, #112]	; 0x70
   15488:	mov	fp, r7
   1548c:	ldrd	r2, [sp, #32]
   15490:	strd	r8, [sp, #32]
   15494:	mov	r9, r4
   15498:	mov	r4, r0
   1549c:	mov	r0, lr
   154a0:	lsl	r1, r3, #10
   154a4:	mov	r6, r5
   154a8:	sub	ip, ip, #10
   154ac:	lsl	lr, r2, #10
   154b0:	orr	r1, r1, r2, lsr #22
   154b4:	mov	r2, lr
   154b8:	and	r7, r1, r0
   154bc:	mov	r3, r1
   154c0:	orrs	r1, r6, r7
   154c4:	beq	154a0 <test_print@@Base+0x1a04>
   154c8:	cmp	lr, #0
   154cc:	mov	r0, r4
   154d0:	str	ip, [sp, #88]	; 0x58
   154d4:	mov	r4, r9
   154d8:	ldrd	r8, [sp, #32]
   154dc:	mov	r7, fp
   154e0:	strd	r2, [sp, #32]
   154e4:	sbcs	r3, r3, #0
   154e8:	blt	15514 <test_print@@Base+0x1a78>
   154ec:	ldrd	r2, [sp, #32]
   154f0:	mov	r1, ip
   154f4:	adds	r2, r2, r2
   154f8:	sub	r1, r1, #1
   154fc:	adc	r3, r3, r3
   15500:	cmp	r2, #0
   15504:	sbcs	ip, r3, #0
   15508:	bge	154f4 <test_print@@Base+0x1a58>
   1550c:	strd	r2, [sp, #32]
   15510:	str	r1, [sp, #88]	; 0x58
   15514:	adds	lr, r4, r4
   15518:	mov	r6, #0
   1551c:	movt	r6, #65472	; 0xffc0
   15520:	adc	r3, r7, r7
   15524:	strd	r8, [sp, #136]	; 0x88
   15528:	adds	sl, lr, #1
   1552c:	sub	r5, r0, #10
   15530:	str	lr, [sp, #144]	; 0x90
   15534:	adc	fp, r3, #0
   15538:	mov	ip, #0
   1553c:	str	r3, [sp, #148]	; 0x94
   15540:	mov	r9, r7
   15544:	mov	r3, r4
   15548:	mov	lr, r6
   1554c:	mov	r4, r0
   15550:	lsl	r1, fp, #10
   15554:	mov	r0, r5
   15558:	mov	r6, ip
   1555c:	lsl	r5, sl, #10
   15560:	orr	r1, r1, sl, lsr #22
   15564:	mov	sl, r5
   15568:	sub	r5, r0, #10
   1556c:	and	r7, r1, lr
   15570:	mov	fp, r1
   15574:	orrs	r2, r6, r7
   15578:	beq	15550 <test_print@@Base+0x1ab4>
   1557c:	mov	r1, r0
   15580:	cmp	sl, #0
   15584:	ldr	lr, [sp, #144]	; 0x90
   15588:	mov	r0, r4
   1558c:	mov	r4, r3
   15590:	sbcs	r3, fp, #0
   15594:	mov	r7, r9
   15598:	str	r1, [sp, #112]	; 0x70
   1559c:	ldrd	r8, [sp, #136]	; 0x88
   155a0:	blt	155c8 <test_print@@Base+0x1b2c>
   155a4:	ldrd	r2, [sp, #32]
   155a8:	adds	sl, sl, sl
   155ac:	sub	r1, r1, #1
   155b0:	adc	fp, fp, fp
   155b4:	cmp	sl, #0
   155b8:	sbcs	ip, fp, #0
   155bc:	bge	155a8 <test_print@@Base+0x1b0c>
   155c0:	strd	r2, [sp, #32]
   155c4:	str	r1, [sp, #112]	; 0x70
   155c8:	vldr	d7, [sp, #48]	; 0x30
   155cc:	vcmpe.f64	d7, #0.0
   155d0:	vmrs	APSR_nzcv, fpscr
   155d4:	ble	15ee0 <test_print@@Base+0x2444>
   155d8:	vldr	d7, [pc, #888]	; 15958 <test_print@@Base+0x1ebc>
   155dc:	vldr	d6, [sp, #48]	; 0x30
   155e0:	vcmpe.f64	d6, d7
   155e4:	vmrs	APSR_nzcv, fpscr
   155e8:	bhi	15ee0 <test_print@@Base+0x2444>
   155ec:	orrs	r3, r8, r9
   155f0:	ldrd	r2, [sp, #72]	; 0x48
   155f4:	movne	r1, #1
   155f8:	moveq	r1, #0
   155fc:	mov	ip, r2
   15600:	orrs	r3, ip, r3
   15604:	movne	r1, #0
   15608:	cmp	r1, #0
   1560c:	bne	15dc8 <test_print@@Base+0x232c>
   15610:	ldr	r3, [sp, #148]	; 0x94
   15614:	subs	lr, lr, #1
   15618:	sbc	ip, r3, #0
   1561c:	ldr	r3, [sp, #112]	; 0x70
   15620:	mvn	r1, #60	; 0x3c
   15624:	vldr	d6, [pc, #820]	; 15960 <test_print@@Base+0x1ec4>
   15628:	sub	r0, r0, r3
   1562c:	ldr	r3, [sp, #88]	; 0x58
   15630:	lsl	ip, ip, r0
   15634:	sub	r4, r0, #32
   15638:	lsl	r7, lr, r0
   1563c:	orr	ip, ip, lr, lsl r4
   15640:	sub	r3, r1, r3
   15644:	rsb	r1, r0, #32
   15648:	orr	ip, ip, lr, lsr r1
   1564c:	vmov	s14, r3
   15650:	vcvt.f64.s32	d7, s14
   15654:	vmul.f64	d7, d7, d6
   15658:	vcmpe.f64	d7, #0.0
   1565c:	vcvt.s32.f64	s13, d7
   15660:	vmrs	APSR_nzcv, fpscr
   15664:	bmi	15688 <test_print@@Base+0x1bec>
   15668:	vcvt.f64.s32	d5, s13
   1566c:	vsub.f64	d7, d7, d5
   15670:	vcmp.f64	d7, #0.0
   15674:	vmrs	APSR_nzcv, fpscr
   15678:	beq	15688 <test_print@@Base+0x1bec>
   1567c:	vmov	r3, s13
   15680:	add	r3, r3, #1
   15684:	vmov	s13, r3
   15688:	vmov	r3, s13
   1568c:	mov	r1, #0
   15690:	add	r9, r3, #344	; 0x158
   15694:	ldr	r3, [pc, #716]	; 15968 <test_print@@Base+0x1ecc>
   15698:	add	lr, r9, #10
   1569c:	add	r9, r9, #3
   156a0:	cmp	r9, r1
   156a4:	movlt	r9, lr
   156a8:	asr	r9, r9, #3
   156ac:	add	r3, pc, r3
   156b0:	add	r9, r9, #1
   156b4:	add	r0, r3, #320	; 0x140
   156b8:	lsl	lr, r9, #4
   156bc:	add	r4, r3, #312	; 0x138
   156c0:	str	r3, [sp, #144]	; 0x90
   156c4:	ldrd	r2, [sp, #32]
   156c8:	add	r0, r0, lr
   156cc:	add	r9, r4, lr
   156d0:	ldr	lr, [r0, #-8]
   156d4:	ldr	r8, [r0, #-4]
   156d8:	umull	r4, r5, r3, lr
   156dc:	mov	r3, r2
   156e0:	umull	r2, r3, r3, lr
   156e4:	str	r5, [sp, #72]	; 0x48
   156e8:	adds	r2, r3, r4
   156ec:	ldr	r3, [sp, #32]
   156f0:	adc	r6, r1, r1
   156f4:	adds	r2, r2, #-2147483648	; 0x80000000
   156f8:	adc	r6, r6, r1
   156fc:	umull	r4, r5, r3, r8
   15700:	ldr	r3, [sp, #72]	; 0x48
   15704:	mov	r0, r4
   15708:	adds	r2, r2, r0
   1570c:	ldrsh	r0, [r9, #8]
   15710:	adc	r6, r6, r1
   15714:	adds	r3, r3, r5
   15718:	umull	r4, r5, lr, r7
   1571c:	mov	r4, #0
   15720:	str	r3, [sp, #104]	; 0x68
   15724:	adc	r3, r1, r1
   15728:	ldr	r1, [sp, #88]	; 0x58
   1572c:	str	r3, [sp, #108]	; 0x6c
   15730:	umull	r2, r3, lr, ip
   15734:	strd	r2, [sp, #120]	; 0x78
   15738:	ldrsh	r3, [r9, #10]
   1573c:	ldr	r9, [sp, #36]	; 0x24
   15740:	str	r3, [sp, #136]	; 0x88
   15744:	ldrd	r2, [sp, #104]	; 0x68
   15748:	umlal	r2, r3, r8, r9
   1574c:	add	r9, r0, r1
   15750:	umull	r0, r1, r8, r7
   15754:	strd	r0, [sp, #72]	; 0x48
   15758:	adds	r1, r6, r2
   1575c:	adc	r3, r4, r3
   15760:	str	r1, [sp, #128]	; 0x80
   15764:	umull	r0, r1, r8, ip
   15768:	str	r3, [sp, #132]	; 0x84
   1576c:	ldrd	r2, [sp, #120]	; 0x78
   15770:	strd	r0, [sp, #32]
   15774:	umull	r0, r1, lr, fp
   15778:	adds	r5, r5, r2
   1577c:	mov	r6, r3
   15780:	ldrd	r2, [sp, #72]	; 0x48
   15784:	adc	ip, r4, r4
   15788:	adds	r5, r5, #-2147483648	; 0x80000000
   1578c:	strd	r0, [sp, #72]	; 0x48
   15790:	adc	ip, ip, r4
   15794:	umull	r0, r1, lr, sl
   15798:	mov	r7, r3
   1579c:	ldr	r3, [sp, #32]
   157a0:	adds	r5, r5, r2
   157a4:	adc	ip, ip, r4
   157a8:	subs	r2, r3, #1
   157ac:	ldr	r3, [sp, #36]	; 0x24
   157b0:	sbc	r3, r3, #0
   157b4:	adds	r6, r2, r6
   157b8:	adc	r3, r3, r4
   157bc:	adds	lr, r6, r7
   157c0:	umull	r6, r7, r8, sl
   157c4:	adc	r3, r3, r4
   157c8:	mov	r2, r1
   157cc:	umull	sl, fp, r8, fp
   157d0:	adds	r1, ip, lr
   157d4:	adc	r3, r4, r3
   157d8:	str	r1, [sp, #96]	; 0x60
   157dc:	ldrd	r0, [sp, #72]	; 0x48
   157e0:	str	r3, [sp, #100]	; 0x64
   157e4:	adds	r2, r2, r0
   157e8:	adc	r3, r4, r4
   157ec:	adds	r2, r2, #-2147483648	; 0x80000000
   157f0:	adc	r3, r3, r4
   157f4:	adds	r2, r2, r6
   157f8:	adc	r3, r3, r4
   157fc:	mov	r2, r1
   15800:	adds	r0, sl, #1
   15804:	adc	r1, fp, r4
   15808:	adds	r2, r0, r2
   1580c:	adc	r1, r1, r4
   15810:	adds	r2, r2, r7
   15814:	mov	r0, r4
   15818:	adc	r4, r1, r4
   1581c:	adds	r3, r3, r2
   15820:	str	r3, [sp, #80]	; 0x50
   15824:	adc	r3, r0, r4
   15828:	str	r3, [sp, #84]	; 0x54
   1582c:	ldrd	r0, [sp, #80]	; 0x50
   15830:	ldrd	r2, [sp, #96]	; 0x60
   15834:	subs	ip, r0, r2
   15838:	str	ip, [sp, #64]	; 0x40
   1583c:	sbc	ip, r1, r3
   15840:	cmp	r3, r1
   15844:	cmpeq	r2, r0
   15848:	str	ip, [sp, #68]	; 0x44
   1584c:	bhi	15eb8 <test_print@@Base+0x241c>
   15850:	add	r3, r9, #129	; 0x81
   15854:	movw	r4, #1233	; 0x4d1
   15858:	ldr	r6, [sp, #144]	; 0x90
   1585c:	mvn	r0, #63	; 0x3f
   15860:	mov	r2, #1
   15864:	mul	r4, r4, r3
   15868:	sub	r0, r0, r9
   1586c:	ldrd	r8, [sp, #80]	; 0x50
   15870:	sub	r7, r0, #32
   15874:	lsl	ip, r2, r0
   15878:	rsb	sl, r0, #32
   1587c:	lsl	r5, r2, r7
   15880:	asr	r4, r4, #12
   15884:	str	r7, [sp, #72]	; 0x48
   15888:	str	ip, [sp, #148]	; 0x94
   1588c:	add	lr, r4, r2
   15890:	lsr	r3, r8, r0
   15894:	add	r1, r6, lr, lsl #2
   15898:	orr	r2, r5, r2, lsr sl
   1589c:	subs	r5, ip, #1
   158a0:	ldr	ip, [r1, #1704]	; 0x6a8
   158a4:	orr	r3, r3, r9, lsl sl
   158a8:	mov	r1, r8
   158ac:	and	r1, r1, r5
   158b0:	orr	r3, r3, r9, lsr r7
   158b4:	str	r2, [sp, #144]	; 0x90
   158b8:	sbc	r2, r2, #0
   158bc:	str	r1, [sp, #32]
   158c0:	cmp	r3, ip
   158c4:	str	r5, [sp, #96]	; 0x60
   158c8:	str	r2, [sp, #104]	; 0x68
   158cc:	and	r2, r9, r2
   158d0:	str	r2, [sp, #36]	; 0x24
   158d4:	bcs	158e8 <test_print@@Base+0x1e4c>
   158d8:	add	r2, r6, r4, lsl #2
   158dc:	mov	lr, r4
   158e0:	sub	r4, r4, #1
   158e4:	ldr	ip, [r2, #1704]	; 0x6a8
   158e8:	cmp	lr, #0
   158ec:	ble	15e40 <test_print@@Base+0x23a4>
   158f0:	udiv	r2, r3, ip
   158f4:	ldrd	r6, [sp, #32]
   158f8:	mls	r8, ip, r2, r3
   158fc:	ldr	r3, [sp, #56]	; 0x38
   15900:	add	r2, r2, #48	; 0x30
   15904:	lsl	r1, r8, r0
   15908:	strb	r2, [r3]
   1590c:	ldr	r3, [sp, #72]	; 0x48
   15910:	lsl	r2, r8, r3
   15914:	adds	r3, r1, r6
   15918:	orr	r2, r2, r8, lsr sl
   1591c:	str	r3, [sp, #40]	; 0x28
   15920:	adc	r3, r2, r7
   15924:	ldrd	r6, [sp, #64]	; 0x40
   15928:	str	r3, [sp, #44]	; 0x2c
   1592c:	ldrd	r2, [sp, #40]	; 0x28
   15930:	cmp	r7, r3
   15934:	cmpeq	r6, r2
   15938:	bhi	15cc4 <test_print@@Base+0x2228>
   1593c:	movw	fp, #52429	; 0xcccd
   15940:	movt	fp, #52428	; 0xcccc
   15944:	ldr	lr, [sp, #56]	; 0x38
   15948:	mov	r5, #1
   1594c:	mov	r3, r8
   15950:	b	159d8 <test_print@@Base+0x1f3c>
   15954:	nop	{0}
   15958:			; <UNDEFINED> instruction: 0xffffffff
   1595c:	svcvc	0x00efffff
   15960:			; <UNDEFINED> instruction: 0x509f79fe
   15964:	svccc	0x00d34413
   15968:			; <UNDEFINED> instruction: 0x0000d1b4
   1596c:	andeq	sp, r0, r0, lsl #11
   15970:	andeq	sp, r0, r8, lsl r4
   15974:	muleq	r0, r4, r9
   15978:	andeq	sp, r0, ip, lsl #5
   1597c:	strdeq	sp, [r0], -r8
   15980:	andeq	ip, r0, r0, ror r9
   15984:	andeq	sp, r0, r8, ror #4
   15988:	andeq	sp, r0, r8, ror #5
   1598c:	udiv	r2, r3, ip
   15990:	ldrd	r8, [sp, #32]
   15994:	mov	r5, r1
   15998:	mls	r3, ip, r2, r3
   1599c:	add	r2, r2, #48	; 0x30
   159a0:	strb	r2, [lr, #1]!
   159a4:	ldr	r2, [sp, #72]	; 0x48
   159a8:	lsl	r6, r3, r0
   159ac:	adds	r6, r6, r8
   159b0:	str	r6, [sp, #40]	; 0x28
   159b4:	lsl	r2, r3, r2
   159b8:	ldrd	r6, [sp, #64]	; 0x40
   159bc:	orr	r2, r2, r3, lsr sl
   159c0:	adc	r2, r2, r9
   159c4:	str	r2, [sp, #44]	; 0x2c
   159c8:	ldrd	r8, [sp, #40]	; 0x28
   159cc:	cmp	r7, r9
   159d0:	cmpeq	r6, r8
   159d4:	bhi	15cc8 <test_print@@Base+0x222c>
   159d8:	umull	r2, ip, fp, ip
   159dc:	sub	r4, r4, #1
   159e0:	add	r6, r5, #1
   159e4:	cmn	r4, #1
   159e8:	mov	r1, r6
   159ec:	lsr	ip, ip, #3
   159f0:	bne	1598c <test_print@@Base+0x1ef0>
   159f4:	mov	lr, #0
   159f8:	add	r2, lr, r5
   159fc:	sub	r3, r5, #1
   15a00:	ldrd	r8, [sp, #32]
   15a04:	mov	ip, #1
   15a08:	mov	lr, #0
   15a0c:	str	r2, [sp, #40]	; 0x28
   15a10:	ldr	r2, [sp, #56]	; 0x38
   15a14:	str	r0, [sp, #120]	; 0x78
   15a18:	ldrd	r0, [sp, #64]	; 0x40
   15a1c:	str	sl, [sp, #64]	; 0x40
   15a20:	ldr	sl, [sp, #72]	; 0x48
   15a24:	add	r5, r2, r3
   15a28:	str	r5, [sp, #32]
   15a2c:	b	15a34 <test_print@@Base+0x1f98>
   15a30:	add	r6, r6, #1
   15a34:	lsl	r2, r9, #2
   15a38:	ldr	r5, [sp, #96]	; 0x60
   15a3c:	lsl	r3, r8, #2
   15a40:	orr	r2, r2, r8, lsr #30
   15a44:	adds	r3, r3, r8
   15a48:	lsl	r4, lr, #2
   15a4c:	adc	r2, r2, r9
   15a50:	adds	r3, r3, r3
   15a54:	lsl	fp, ip, #2
   15a58:	and	r8, r5, r3
   15a5c:	ldr	r5, [sp, #120]	; 0x78
   15a60:	orr	r4, r4, ip, lsr #30
   15a64:	adc	r2, r2, r2
   15a68:	adds	ip, fp, ip
   15a6c:	lsl	fp, r1, #2
   15a70:	adc	lr, r4, lr
   15a74:	ldr	r4, [sp, #64]	; 0x40
   15a78:	adds	ip, ip, ip
   15a7c:	orr	fp, fp, r0, lsr #30
   15a80:	adc	lr, lr, lr
   15a84:	lsr	r3, r3, r5
   15a88:	ldr	r5, [sp, #104]	; 0x68
   15a8c:	orr	r3, r3, r2, lsl r4
   15a90:	orr	r3, r3, r2, lsr sl
   15a94:	and	r9, r5, r2
   15a98:	lsl	r2, r0, #2
   15a9c:	add	r3, r3, #48	; 0x30
   15aa0:	adds	r2, r2, r0
   15aa4:	adc	fp, fp, r1
   15aa8:	adds	r0, r2, r2
   15aac:	ldr	r2, [sp, #32]
   15ab0:	adc	r1, fp, fp
   15ab4:	cmp	r1, r9
   15ab8:	cmpeq	r0, r8
   15abc:	strb	r3, [r2, #1]!
   15ac0:	ldr	r3, [sp, #40]	; 0x28
   15ac4:	str	r2, [sp, #32]
   15ac8:	sub	r4, r3, r6
   15acc:	bls	15a30 <test_print@@Base+0x1f94>
   15ad0:	ldrd	sl, [sp, #80]	; 0x50
   15ad4:	mov	r5, r6
   15ad8:	strd	r8, [sp, #32]
   15adc:	ldr	r8, [sp, #112]	; 0x70
   15ae0:	ldrd	r2, [sp, #128]	; 0x80
   15ae4:	subs	r6, sl, r2
   15ae8:	sbc	r7, fp, r3
   15aec:	cmp	r3, fp
   15af0:	cmpeq	r2, sl
   15af4:	ldr	r2, [sp, #88]	; 0x58
   15af8:	movhi	r3, #1
   15afc:	movls	r3, #0
   15b00:	cmp	r2, r8
   15b04:	orrne	r3, r3, #1
   15b08:	cmp	r3, #0
   15b0c:	bne	15eb8 <test_print@@Base+0x241c>
   15b10:	ldrd	r8, [sp, #32]
   15b14:	mul	r7, ip, r7
   15b18:	umull	r2, r3, ip, r6
   15b1c:	strd	r0, [sp]
   15b20:	mov	r1, r5
   15b24:	ldr	r0, [sp, #56]	; 0x38
   15b28:	mla	r6, r6, lr, r7
   15b2c:	ldr	r7, [sp, #144]	; 0x90
   15b30:	strd	r8, [sp, #8]
   15b34:	ldr	r8, [sp, #148]	; 0x94
   15b38:	add	r3, r6, r3
   15b3c:	str	ip, [sp, #24]
   15b40:	str	lr, [sp, #28]
   15b44:	str	r8, [sp, #16]
   15b48:	str	r7, [sp, #20]
   15b4c:	bl	148d8 <test_print@@Base+0xe3c>
   15b50:	ldr	r3, [sp, #136]	; 0x88
   15b54:	cmp	r0, #0
   15b58:	sub	r6, r4, r3
   15b5c:	beq	15de8 <test_print@@Base+0x234c>
   15b60:	ldr	r3, [sp, #136]	; 0x88
   15b64:	cmp	r5, #2
   15b68:	movge	r0, r5
   15b6c:	movlt	r0, #2
   15b70:	sub	r4, r3, r4
   15b74:	cmp	r0, r4
   15b78:	suble	r0, r0, #1
   15b7c:	movgt	r0, r4
   15b80:	cmp	r6, #0
   15b84:	blt	15d48 <test_print@@Base+0x22ac>
   15b88:	ldr	r3, [sp, #56]	; 0x38
   15b8c:	cmp	r6, #2
   15b90:	add	r3, r3, r5
   15b94:	bgt	15e18 <test_print@@Base+0x237c>
   15b98:	cmp	r6, #0
   15b9c:	sub	r1, r6, #1
   15ba0:	movgt	r0, r3
   15ba4:	movgt	r2, #48	; 0x30
   15ba8:	addgt	r6, r0, r6
   15bac:	ble	15bcc <test_print@@Base+0x2130>
   15bb0:	strb	r2, [r0], #1
   15bb4:	cmp	r6, r0
   15bb8:	bne	15bb0 <test_print@@Base+0x2114>
   15bbc:	ldr	r3, [sp, #56]	; 0x38
   15bc0:	add	r0, r5, #1
   15bc4:	add	r0, r0, r1
   15bc8:	add	r3, r3, r0
   15bcc:	ldr	r1, [sp, #60]	; 0x3c
   15bd0:	mov	r2, #0
   15bd4:	strb	r2, [r3]
   15bd8:	sub	r0, r3, r1
   15bdc:	b	15c2c <test_print@@Base+0x2190>
   15be0:	vldr	d7, [sp, #48]	; 0x30
   15be4:	add	r3, r5, #-2147483648	; 0x80000000
   15be8:	mov	r2, #45	; 0x2d
   15bec:	mov	r5, r3
   15bf0:	ldr	r0, [sp, #60]	; 0x3c
   15bf4:	orrs	r3, r4, r5
   15bf8:	vneg.f64	d7, d7
   15bfc:	strb	r2, [r0], #1
   15c00:	vstr	d7, [sp, #48]	; 0x30
   15c04:	str	r0, [sp, #56]	; 0x38
   15c08:	bne	15408 <test_print@@Base+0x196c>
   15c0c:	ldr	r1, [sp, #56]	; 0x38
   15c10:	mov	r3, #0
   15c14:	mov	r2, #48	; 0x30
   15c18:	mov	r0, r1
   15c1c:	strb	r2, [r1]
   15c20:	strb	r3, [r0, #1]!
   15c24:	ldr	r3, [sp, #60]	; 0x3c
   15c28:	sub	r0, r0, r3
   15c2c:	add	sp, sp, #164	; 0xa4
   15c30:	ldrd	r4, [sp]
   15c34:	ldrd	r6, [sp, #8]
   15c38:	ldrd	r8, [sp, #16]
   15c3c:	ldrd	sl, [sp, #24]
   15c40:	add	sp, sp, #32
   15c44:	pop	{pc}		; (ldr pc, [sp], #4)
   15c48:	ldr	r1, [pc, #-740]	; 1596c <test_print@@Base+0x1ed0>
   15c4c:	mov	r2, r5
   15c50:	vmov	r3, s0
   15c54:	add	r1, pc, r1
   15c58:	bl	124e0 <sprintf@plt>
   15c5c:	mov	r0, #21
   15c60:	b	15c2c <test_print@@Base+0x2190>
   15c64:	ldrd	r2, [sp, #72]	; 0x48
   15c68:	orrs	r1, r2, r3
   15c6c:	beq	15f04 <test_print@@Base+0x2468>
   15c70:	movw	r1, #64462	; 0xfbce
   15c74:	movt	r1, #65535	; 0xffff
   15c78:	movw	r0, #64461	; 0xfbcd
   15c7c:	movt	r0, #65535	; 0xffff
   15c80:	mov	r4, r2
   15c84:	mov	r7, r3
   15c88:	str	r1, [sp, #120]	; 0x78
   15c8c:	b	1546c <test_print@@Base+0x19d0>
   15c90:	ldr	ip, [sp, #56]	; 0x38
   15c94:	mov	r3, #105	; 0x69
   15c98:	mov	r1, #110	; 0x6e
   15c9c:	mov	r2, #102	; 0x66
   15ca0:	mov	r0, ip
   15ca4:	strb	r3, [ip]
   15ca8:	mov	r3, #0
   15cac:	strb	r1, [ip, #1]
   15cb0:	strb	r2, [ip, #2]
   15cb4:	strb	r3, [r0, #3]!
   15cb8:	ldr	r3, [sp, #60]	; 0x3c
   15cbc:	sub	r0, r0, r3
   15cc0:	b	15c2c <test_print@@Base+0x2190>
   15cc4:	mov	r1, #1
   15cc8:	ldrd	r6, [sp, #80]	; 0x50
   15ccc:	ldr	r5, [sp, #88]	; 0x58
   15cd0:	ldrd	r8, [sp, #128]	; 0x80
   15cd4:	subs	r2, r6, r8
   15cd8:	mov	lr, r9
   15cdc:	sbc	r3, r7, r9
   15ce0:	cmp	r9, r7
   15ce4:	cmpeq	r8, r6
   15ce8:	ldr	r6, [sp, #112]	; 0x70
   15cec:	movhi	lr, #1
   15cf0:	movls	lr, #0
   15cf4:	cmp	r5, r6
   15cf8:	orrne	lr, lr, #1
   15cfc:	cmp	lr, #0
   15d00:	bne	15eb8 <test_print@@Base+0x241c>
   15d04:	ldrd	r6, [sp, #64]	; 0x40
   15d08:	lsl	r9, ip, r0
   15d0c:	mov	r5, r1
   15d10:	ldr	lr, [sp, #72]	; 0x48
   15d14:	ldr	r0, [sp, #56]	; 0x38
   15d18:	strd	r6, [sp]
   15d1c:	mov	r6, #1
   15d20:	mov	r7, #0
   15d24:	str	r9, [sp, #16]
   15d28:	lsl	lr, ip, lr
   15d2c:	strd	r6, [sp, #24]
   15d30:	orr	lr, lr, ip, lsr sl
   15d34:	ldrd	sl, [sp, #40]	; 0x28
   15d38:	strd	sl, [sp, #8]
   15d3c:	str	lr, [sp, #20]
   15d40:	bl	148d8 <test_print@@Base+0xe3c>
   15d44:	b	15b50 <test_print@@Base+0x20b4>
   15d48:	add	r3, r6, r5
   15d4c:	cmp	r4, r5
   15d50:	cmnge	r3, #2
   15d54:	bge	15e4c <test_print@@Base+0x23b0>
   15d58:	cmp	r5, #1
   15d5c:	beq	15e10 <test_print@@Base+0x2374>
   15d60:	cmp	r0, #0
   15d64:	ble	15d84 <test_print@@Base+0x22e8>
   15d68:	ldr	r3, [sp, #56]	; 0x38
   15d6c:	add	r3, r3, r5
   15d70:	sub	r1, r3, r0
   15d74:	ldrb	r2, [r3, #-1]
   15d78:	strb	r2, [r3], #-1
   15d7c:	cmp	r1, r3
   15d80:	bne	15d74 <test_print@@Base+0x22d8>
   15d84:	ldr	ip, [sp, #56]	; 0x38
   15d88:	sub	r3, r5, r0
   15d8c:	mov	r1, #46	; 0x2e
   15d90:	add	r2, r5, #1
   15d94:	adds	r0, r0, r6
   15d98:	strb	r1, [ip, r3]
   15d9c:	add	r3, ip, r2
   15da0:	beq	15bcc <test_print@@Base+0x2130>
   15da4:	ldr	r4, [sp, #56]	; 0x38
   15da8:	mov	r3, #101	; 0x65
   15dac:	add	r5, r5, #2
   15db0:	add	r1, r4, r5
   15db4:	strb	r3, [r4, r2]
   15db8:	bl	14b64 <test_print@@Base+0x10c8>
   15dbc:	add	r0, r5, r0
   15dc0:	add	r3, r4, r0
   15dc4:	b	15bcc <test_print@@Base+0x2130>
   15dc8:	ldr	r3, [sp, #120]	; 0x78
   15dcc:	lsl	ip, r7, #2
   15dd0:	lsl	lr, r4, #2
   15dd4:	orr	ip, ip, r4, lsr #30
   15dd8:	subs	lr, lr, #1
   15ddc:	sbc	ip, ip, #0
   15de0:	sub	r0, r3, #2
   15de4:	b	1561c <test_print@@Base+0x1b80>
   15de8:	ldr	r1, [pc, #-1152]	; 15970 <test_print@@Base+0x1ed4>
   15dec:	ldrd	r2, [sp, #48]	; 0x30
   15df0:	ldr	r4, [sp, #56]	; 0x38
   15df4:	add	r1, pc, r1
   15df8:	mov	r0, r4
   15dfc:	bl	124e0 <sprintf@plt>
   15e00:	ldr	r2, [sp, #60]	; 0x3c
   15e04:	sub	r3, r4, r2
   15e08:	add	r0, r3, r0
   15e0c:	b	15c2c <test_print@@Base+0x2190>
   15e10:	ldr	r3, [sp, #56]	; 0x38
   15e14:	add	r3, r3, #1
   15e18:	ldr	r4, [sp, #56]	; 0x38
   15e1c:	mov	r2, #101	; 0x65
   15e20:	add	r5, r5, #1
   15e24:	mov	r0, r6
   15e28:	strb	r2, [r3]
   15e2c:	add	r1, r4, r5
   15e30:	bl	14b64 <test_print@@Base+0x10c8>
   15e34:	add	r0, r5, r0
   15e38:	add	r3, r4, r0
   15e3c:	b	15bcc <test_print@@Base+0x2130>
   15e40:	mov	r5, #0
   15e44:	mov	r6, #1
   15e48:	b	159f8 <test_print@@Base+0x1f5c>
   15e4c:	ldr	r4, [sp, #56]	; 0x38
   15e50:	rsb	r0, r5, #2
   15e54:	mov	r2, r5
   15e58:	sub	r0, r0, r6
   15e5c:	mov	r1, r4
   15e60:	add	r0, r4, r0
   15e64:	bl	12408 <memmove@plt>
   15e68:	rsb	r3, r6, #2
   15e6c:	mov	r0, #48	; 0x30
   15e70:	sub	r3, r3, r5
   15e74:	mov	r2, #46	; 0x2e
   15e78:	cmp	r3, #2
   15e7c:	strb	r0, [r4]
   15e80:	strb	r2, [r4, #1]
   15e84:	ble	15eb0 <test_print@@Base+0x2414>
   15e88:	sub	r1, r4, #1
   15e8c:	add	r2, r4, #1
   15e90:	add	r1, r1, r3
   15e94:	strb	r0, [r2, #1]!
   15e98:	cmp	r1, r2
   15e9c:	bne	15e94 <test_print@@Base+0x23f8>
   15ea0:	ldr	r2, [sp, #56]	; 0x38
   15ea4:	add	r3, r3, r5
   15ea8:	add	r3, r2, r3
   15eac:	b	15bcc <test_print@@Base+0x2130>
   15eb0:	mov	r3, #2
   15eb4:	b	15ea0 <test_print@@Base+0x2404>
   15eb8:	bl	150a8 <test_print@@Base+0x160c>
   15ebc:	ldr	r3, [pc, #-1360]	; 15974 <test_print@@Base+0x1ed8>
   15ec0:	mov	r2, #189	; 0xbd
   15ec4:	ldr	r1, [pc, #-1364]	; 15978 <test_print@@Base+0x1edc>
   15ec8:	ldr	r0, [pc, #-1364]	; 1597c <test_print@@Base+0x1ee0>
   15ecc:	add	r3, pc, r3
   15ed0:	add	r3, r3, #280	; 0x118
   15ed4:	add	r1, pc, r1
   15ed8:	add	r0, pc, r0
   15edc:	bl	12504 <__assert_fail@plt>
   15ee0:	ldr	r3, [pc, #-1384]	; 15980 <test_print@@Base+0x1ee4>
   15ee4:	mov	r2, #138	; 0x8a
   15ee8:	ldr	r1, [pc, #-1388]	; 15984 <test_print@@Base+0x1ee8>
   15eec:	ldr	r0, [pc, #-1388]	; 15988 <test_print@@Base+0x1eec>
   15ef0:	add	r3, pc, r3
   15ef4:	add	r3, r3, #300	; 0x12c
   15ef8:	add	r1, pc, r1
   15efc:	add	r0, pc, r0
   15f00:	bl	12504 <__assert_fail@plt>
   15f04:	bl	15070 <test_print@@Base+0x15d4>
   15f08:	ldr	r3, [r0, #20]
   15f0c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   15f10:	strd	r6, [sp, #8]
   15f14:	mov	r6, r0
   15f18:	strd	r8, [sp, #16]
   15f1c:	mov	r8, r2
   15f20:	mov	r9, #92	; 0x5c
   15f24:	mov	r2, #34	; 0x22
   15f28:	str	sl, [sp, #24]
   15f2c:	mov	sl, #102	; 0x66
   15f30:	add	r0, r3, #1
   15f34:	str	lr, [sp, #28]
   15f38:	str	r0, [r6, #20]
   15f3c:	strb	r2, [r3]
   15f40:	ldrb	r4, [r1]
   15f44:	mov	r5, r1
   15f48:	cmp	r4, #34	; 0x22
   15f4c:	cmpne	r4, #31
   15f50:	movhi	r7, #1
   15f54:	movls	r7, #0
   15f58:	bls	15f88 <test_print@@Base+0x24ec>
   15f5c:	cmp	r4, #92	; 0x5c
   15f60:	bne	15f70 <test_print@@Base+0x24d4>
   15f64:	b	16150 <test_print@@Base+0x26b4>
   15f68:	cmp	r4, #92	; 0x5c
   15f6c:	beq	15f80 <test_print@@Base+0x24e4>
   15f70:	ldrb	r4, [r5, #1]!
   15f74:	cmp	r4, #34	; 0x22
   15f78:	cmpne	r4, #31
   15f7c:	bhi	15f68 <test_print@@Base+0x24cc>
   15f80:	sub	r7, r5, r1
   15f84:	sub	r8, r8, r7
   15f88:	ldr	r2, [r6, #16]
   15f8c:	ldr	r0, [r6, #20]
   15f90:	add	r3, r0, r7
   15f94:	cmp	r2, r3
   15f98:	mov	r2, r7
   15f9c:	bhi	160a0 <test_print@@Base+0x2604>
   15fa0:	mov	r0, r6
   15fa4:	bl	14c50 <test_print@@Base+0x11b4>
   15fa8:	ldr	r7, [r6, #20]
   15fac:	cmp	r8, #0
   15fb0:	add	r3, r7, #1
   15fb4:	beq	160bc <test_print@@Base+0x2620>
   15fb8:	cmp	r4, #12
   15fbc:	str	r3, [r6, #20]
   15fc0:	strb	r9, [r7]
   15fc4:	beq	1610c <test_print@@Base+0x2670>
   15fc8:	bhi	16070 <test_print@@Base+0x25d4>
   15fcc:	cmp	r4, #9
   15fd0:	beq	16138 <test_print@@Base+0x269c>
   15fd4:	cmp	r4, #10
   15fd8:	beq	16120 <test_print@@Base+0x2684>
   15fdc:	cmp	r4, #8
   15fe0:	beq	160f4 <test_print@@Base+0x2658>
   15fe4:	ldr	r2, [r6, #20]
   15fe8:	mov	r1, #117	; 0x75
   15fec:	mov	r0, #48	; 0x30
   15ff0:	lsr	r3, r4, #4
   15ff4:	and	r4, r4, #15
   15ff8:	cmp	r3, #10
   15ffc:	add	ip, r2, #1
   16000:	str	ip, [r6, #20]
   16004:	strb	r1, [r2]
   16008:	movcc	r2, r0
   1600c:	movcs	r2, #87	; 0x57
   16010:	ldr	r1, [r6, #20]
   16014:	cmp	r4, #10
   16018:	add	r2, r2, r3
   1601c:	movcc	r3, r0
   16020:	movcs	r3, #87	; 0x57
   16024:	add	r3, r3, r4
   16028:	add	ip, r1, #1
   1602c:	str	ip, [r6, #20]
   16030:	strb	r0, [r1]
   16034:	ldr	r1, [r6, #20]
   16038:	add	ip, r1, #1
   1603c:	str	ip, [r6, #20]
   16040:	strb	r0, [r1]
   16044:	ldr	r1, [r6, #20]
   16048:	add	r0, r1, #1
   1604c:	str	r0, [r6, #20]
   16050:	strb	r2, [r1]
   16054:	ldr	r2, [r6, #20]
   16058:	add	r1, r2, #1
   1605c:	str	r1, [r6, #20]
   16060:	strb	r3, [r2]
   16064:	sub	r8, r8, #1
   16068:	add	r1, r5, #1
   1606c:	b	15f40 <test_print@@Base+0x24a4>
   16070:	cmp	r4, #34	; 0x22
   16074:	beq	160e0 <test_print@@Base+0x2644>
   16078:	cmp	r4, #92	; 0x5c
   1607c:	beq	160e0 <test_print@@Base+0x2644>
   16080:	cmp	r4, #13
   16084:	bne	15fe4 <test_print@@Base+0x2548>
   16088:	ldr	r3, [r6, #20]
   1608c:	mov	r2, #114	; 0x72
   16090:	add	r1, r3, #1
   16094:	str	r1, [r6, #20]
   16098:	strb	r2, [r3]
   1609c:	b	16064 <test_print@@Base+0x25c8>
   160a0:	bl	12420 <memcpy@plt>
   160a4:	ldr	r3, [r6, #20]
   160a8:	cmp	r8, #0
   160ac:	add	r7, r3, r7
   160b0:	add	r3, r7, #1
   160b4:	str	r7, [r6, #20]
   160b8:	bne	15fb8 <test_print@@Base+0x251c>
   160bc:	mov	r2, #34	; 0x22
   160c0:	str	r3, [r6, #20]
   160c4:	strb	r2, [r7]
   160c8:	ldrd	r4, [sp]
   160cc:	ldrd	r6, [sp, #8]
   160d0:	ldrd	r8, [sp, #16]
   160d4:	ldr	sl, [sp, #24]
   160d8:	add	sp, sp, #28
   160dc:	pop	{pc}		; (ldr pc, [sp], #4)
   160e0:	ldr	r3, [r6, #20]
   160e4:	add	r2, r3, #1
   160e8:	str	r2, [r6, #20]
   160ec:	strb	r4, [r3]
   160f0:	b	16064 <test_print@@Base+0x25c8>
   160f4:	ldr	r3, [r6, #20]
   160f8:	mov	r2, #98	; 0x62
   160fc:	add	r1, r3, #1
   16100:	str	r1, [r6, #20]
   16104:	strb	r2, [r3]
   16108:	b	16064 <test_print@@Base+0x25c8>
   1610c:	ldr	r3, [r6, #20]
   16110:	add	r2, r3, #1
   16114:	str	r2, [r6, #20]
   16118:	strb	sl, [r3]
   1611c:	b	16064 <test_print@@Base+0x25c8>
   16120:	ldr	r3, [r6, #20]
   16124:	mov	r2, #110	; 0x6e
   16128:	add	r1, r3, #1
   1612c:	str	r1, [r6, #20]
   16130:	strb	r2, [r3]
   16134:	b	16064 <test_print@@Base+0x25c8>
   16138:	ldr	r3, [r6, #20]
   1613c:	mov	r2, #116	; 0x74
   16140:	add	r1, r3, #1
   16144:	str	r1, [r6, #20]
   16148:	strb	r2, [r3]
   1614c:	b	16064 <test_print@@Base+0x25c8>
   16150:	mov	r7, #0
   16154:	b	15f88 <test_print@@Base+0x24ec>
   16158:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1615c:	mov	r5, r2
   16160:	mov	r4, r0
   16164:	ldr	r2, [r0, #20]
   16168:	strd	r6, [sp, #8]
   1616c:	mov	r6, r1
   16170:	str	r8, [sp, #16]
   16174:	str	lr, [sp, #20]
   16178:	ldrb	r1, [r0, #25]
   1617c:	cmp	r1, #0
   16180:	bne	1625c <test_print@@Base+0x27c0>
   16184:	ldr	r3, [r0, #16]
   16188:	cmp	r3, r2
   1618c:	bls	16234 <test_print@@Base+0x2798>
   16190:	mov	r3, #34	; 0x22
   16194:	strb	r3, [r2]
   16198:	ldrb	r3, [r4, #26]
   1619c:	ldr	r2, [r4, #16]
   161a0:	ldr	r0, [r4, #20]
   161a4:	cmp	r3, #0
   161a8:	addeq	r0, r0, #1
   161ac:	add	r3, r0, r5
   161b0:	cmp	r2, r3
   161b4:	str	r0, [r4, #20]
   161b8:	bls	16244 <test_print@@Base+0x27a8>
   161bc:	mov	r2, r5
   161c0:	mov	r1, r6
   161c4:	bl	12420 <memcpy@plt>
   161c8:	ldr	r2, [r4, #20]
   161cc:	add	r2, r2, r5
   161d0:	str	r2, [r4, #20]
   161d4:	mov	r3, #34	; 0x22
   161d8:	mov	ip, #58	; 0x3a
   161dc:	mov	r0, #32
   161e0:	strb	r3, [r2]
   161e4:	ldrb	r3, [r4, #26]
   161e8:	ldr	r1, [r4, #20]
   161ec:	clz	r3, r3
   161f0:	lsr	r3, r3, #5
   161f4:	add	r2, r1, r3
   161f8:	add	r2, r2, #1
   161fc:	str	r2, [r4, #20]
   16200:	strb	ip, [r1, r3]
   16204:	ldr	r3, [r4, #20]
   16208:	strb	r0, [r3]
   1620c:	ldrb	r2, [r4, #25]
   16210:	ldr	r3, [r4, #20]
   16214:	ldrd	r6, [sp, #8]
   16218:	ldr	r8, [sp, #16]
   1621c:	cmp	r2, #0
   16220:	addne	r3, r3, #1
   16224:	str	r3, [r4, #20]
   16228:	ldrd	r4, [sp]
   1622c:	add	sp, sp, #20
   16230:	pop	{pc}		; (ldr pc, [sp], #4)
   16234:	ldr	r3, [r0, #44]	; 0x2c
   16238:	blx	r3
   1623c:	ldr	r2, [r4, #20]
   16240:	b	16190 <test_print@@Base+0x26f4>
   16244:	mov	r2, r5
   16248:	mov	r1, r6
   1624c:	mov	r0, r4
   16250:	bl	14c50 <test_print@@Base+0x11b4>
   16254:	ldr	r2, [r4, #20]
   16258:	b	161d4 <test_print@@Base+0x2738>
   1625c:	add	r1, r2, #1
   16260:	mov	r3, #10
   16264:	str	r1, [r0, #20]
   16268:	strb	r3, [r2]
   1626c:	ldrb	r7, [r0, #25]
   16270:	ldr	r1, [r0, #16]
   16274:	ldr	r2, [r0, #32]
   16278:	ldr	r3, [r0, #20]
   1627c:	mul	r7, r2, r7
   16280:	add	r2, r3, r7
   16284:	cmp	r1, r2
   16288:	bcs	1629c <test_print@@Base+0x2800>
   1628c:	mov	r1, r7
   16290:	bl	14d14 <test_print@@Base+0x1278>
   16294:	ldr	r2, [r4, #20]
   16298:	b	16190 <test_print@@Base+0x26f4>
   1629c:	mov	r2, r7
   162a0:	mov	r0, r3
   162a4:	mov	r1, #32
   162a8:	bl	124bc <memset@plt>
   162ac:	ldr	r2, [r4, #20]
   162b0:	add	r2, r2, r7
   162b4:	str	r2, [r4, #20]
   162b8:	b	16190 <test_print@@Base+0x26f4>

000162bc <flatcc_json_printer_error_string@@Base>:
   162bc:	cmp	r0, #3
   162c0:	addls	pc, pc, r0, lsl #2
   162c4:	b	16308 <flatcc_json_printer_error_string@@Base+0x4c>
   162c8:	b	162d8 <flatcc_json_printer_error_string@@Base+0x1c>
   162cc:	b	162fc <flatcc_json_printer_error_string@@Base+0x40>
   162d0:	b	162f0 <flatcc_json_printer_error_string@@Base+0x34>
   162d4:	b	162e4 <flatcc_json_printer_error_string@@Base+0x28>
   162d8:	ldr	r0, [pc, #52]	; 16314 <flatcc_json_printer_error_string@@Base+0x58>
   162dc:	add	r0, pc, r0
   162e0:	bx	lr
   162e4:	ldr	r0, [pc, #44]	; 16318 <flatcc_json_printer_error_string@@Base+0x5c>
   162e8:	add	r0, pc, r0
   162ec:	bx	lr
   162f0:	ldr	r0, [pc, #36]	; 1631c <flatcc_json_printer_error_string@@Base+0x60>
   162f4:	add	r0, pc, r0
   162f8:	bx	lr
   162fc:	ldr	r0, [pc, #28]	; 16320 <flatcc_json_printer_error_string@@Base+0x64>
   16300:	add	r0, pc, r0
   16304:	bx	lr
   16308:	ldr	r0, [pc, #20]	; 16324 <flatcc_json_printer_error_string@@Base+0x68>
   1630c:	add	r0, pc, r0
   16310:	bx	lr
   16314:	andeq	ip, r0, r0, asr #30
   16318:	andeq	ip, r0, r8, asr #30
   1631c:	andeq	ip, r0, ip, lsr #30
   16320:	andeq	ip, r0, ip, lsr pc
   16324:	andeq	ip, r0, r8, lsl #30

00016328 <flatcc_json_printer_fmt_float@@Base>:
   16328:	vcvt.f64.f32	d0, s0
   1632c:	b	153a0 <test_print@@Base+0x1904>

00016330 <flatcc_json_printer_fmt_double@@Base>:
   16330:	b	153a0 <test_print@@Base+0x1904>

00016334 <flatcc_json_printer_fmt_bool@@Base>:
   16334:	cmp	r1, #0
   16338:	mov	r2, r0
   1633c:	bne	16360 <flatcc_json_printer_fmt_bool@@Base+0x2c>
   16340:	ldr	r3, [pc, #48]	; 16378 <flatcc_json_printer_fmt_bool@@Base+0x44>
   16344:	mov	r0, #5
   16348:	add	r3, pc, r3
   1634c:	ldrb	r1, [r3, #4]
   16350:	ldr	r3, [r3]
   16354:	str	r3, [r2]
   16358:	strb	r1, [r2, #4]
   1635c:	bx	lr
   16360:	ldr	r3, [pc, #20]	; 1637c <flatcc_json_printer_fmt_bool@@Base+0x48>
   16364:	mov	r0, #4
   16368:	add	r3, pc, r3
   1636c:	ldr	r3, [r3]
   16370:	str	r3, [r2]
   16374:	bx	lr
   16378:	andeq	ip, r0, r8, lsl #30
   1637c:	andeq	ip, r0, r0, ror #29

00016380 <flatcc_json_printer_string@@Base>:
   16380:	b	15f08 <test_print@@Base+0x246c>

00016384 <flatcc_json_printer_write@@Base>:
   16384:	strd	r4, [sp, #-16]!
   16388:	ldr	ip, [r0, #16]
   1638c:	str	r6, [sp, #8]
   16390:	str	lr, [sp, #12]
   16394:	ldr	lr, [r0, #20]
   16398:	add	r4, lr, r2
   1639c:	cmp	ip, r4
   163a0:	bhi	163b8 <flatcc_json_printer_write@@Base+0x34>
   163a4:	ldrd	r4, [sp]
   163a8:	ldr	r6, [sp, #8]
   163ac:	ldr	lr, [sp, #12]
   163b0:	add	sp, sp, #16
   163b4:	b	14c50 <test_print@@Base+0x11b4>
   163b8:	mov	r4, r0
   163bc:	mov	r0, lr
   163c0:	mov	r5, r2
   163c4:	bl	12420 <memcpy@plt>
   163c8:	ldr	ip, [r4, #20]
   163cc:	ldr	r6, [sp, #8]
   163d0:	add	ip, ip, r5
   163d4:	str	ip, [r4, #20]
   163d8:	ldrd	r4, [sp]
   163dc:	add	sp, sp, #12
   163e0:	pop	{pc}		; (ldr pc, [sp], #4)

000163e4 <flatcc_json_printer_nl@@Base>:
   163e4:	ldr	r2, [r0, #20]
   163e8:	mov	r1, #10
   163ec:	add	ip, r2, #1
   163f0:	str	ip, [r0, #20]
   163f4:	strb	r1, [r2]
   163f8:	ldr	r2, [r0, #16]
   163fc:	ldr	r1, [r0, #20]
   16400:	cmp	r1, r2
   16404:	bcc	16414 <flatcc_json_printer_nl@@Base+0x30>
   16408:	mov	r1, #0
   1640c:	ldr	r3, [r0, #44]	; 0x2c
   16410:	bx	r3
   16414:	bx	lr

00016418 <flatcc_json_printer_char@@Base>:
   16418:	ldr	r3, [r0, #20]
   1641c:	add	r2, r3, #1
   16420:	str	r2, [r0, #20]
   16424:	strb	r1, [r3]
   16428:	bx	lr

0001642c <flatcc_json_printer_indent@@Base>:
   1642c:	strd	r4, [sp, #-16]!
   16430:	ldr	ip, [r0, #16]
   16434:	ldr	r2, [r0, #20]
   16438:	ldr	r5, [r0, #32]
   1643c:	str	r6, [sp, #8]
   16440:	str	lr, [sp, #12]
   16444:	ldrb	r1, [r0, #25]
   16448:	mul	r5, r5, r1
   1644c:	add	r1, r2, r5
   16450:	cmp	ip, r1
   16454:	bcs	16470 <flatcc_json_printer_indent@@Base+0x44>
   16458:	mov	r1, r5
   1645c:	ldrd	r4, [sp]
   16460:	ldr	r6, [sp, #8]
   16464:	ldr	lr, [sp, #12]
   16468:	add	sp, sp, #16
   1646c:	b	14d14 <test_print@@Base+0x1278>
   16470:	mov	r4, r0
   16474:	mov	r1, #32
   16478:	mov	r0, r2
   1647c:	mov	r2, r5
   16480:	bl	124bc <memset@plt>
   16484:	ldr	r3, [r4, #20]
   16488:	ldr	r6, [sp, #8]
   1648c:	add	r5, r3, r5
   16490:	str	r5, [r4, #20]
   16494:	ldrd	r4, [sp]
   16498:	add	sp, sp, #12
   1649c:	pop	{pc}		; (ldr pc, [sp], #4)

000164a0 <flatcc_json_printer_add_level@@Base>:
   164a0:	ldr	r3, [r0, #32]
   164a4:	add	r1, r3, r1
   164a8:	str	r1, [r0, #32]
   164ac:	bx	lr

000164b0 <flatcc_json_printer_get_level@@Base>:
   164b0:	ldr	r0, [r0, #32]
   164b4:	bx	lr

000164b8 <flatcc_json_printer_uint8@@Base>:
   164b8:	str	r4, [sp, #-8]!
   164bc:	mov	r4, r0
   164c0:	mov	r0, r1
   164c4:	ldr	r1, [r4, #20]
   164c8:	str	lr, [sp, #4]
   164cc:	bl	14fac <test_print@@Base+0x1510>
   164d0:	ldr	r3, [r4, #20]
   164d4:	add	r0, r3, r0
   164d8:	str	r0, [r4, #20]
   164dc:	ldr	r4, [sp]
   164e0:	add	sp, sp, #4
   164e4:	pop	{pc}		; (ldr pc, [sp], #4)

000164e8 <flatcc_json_printer_uint16@@Base>:
   164e8:	str	r4, [sp, #-8]!
   164ec:	mov	r4, r0
   164f0:	mov	r0, r1
   164f4:	ldr	r1, [r4, #20]
   164f8:	str	lr, [sp, #4]
   164fc:	bl	13db8 <test_print@@Base+0x31c>
   16500:	ldr	r3, [r4, #20]
   16504:	add	r0, r3, r0
   16508:	str	r0, [r4, #20]
   1650c:	ldr	r4, [sp]
   16510:	add	sp, sp, #4
   16514:	pop	{pc}		; (ldr pc, [sp], #4)

00016518 <flatcc_json_printer_uint32@@Base>:
   16518:	str	r4, [sp, #-8]!
   1651c:	mov	r4, r0
   16520:	mov	r0, r1
   16524:	ldr	r1, [r4, #20]
   16528:	str	lr, [sp, #4]
   1652c:	bl	13f20 <test_print@@Base+0x484>
   16530:	ldr	r3, [r4, #20]
   16534:	add	r0, r3, r0
   16538:	str	r0, [r4, #20]
   1653c:	ldr	r4, [sp]
   16540:	add	sp, sp, #4
   16544:	pop	{pc}		; (ldr pc, [sp], #4)

00016548 <flatcc_json_printer_uint64@@Base>:
   16548:	str	r4, [sp, #-8]!
   1654c:	mov	r4, r0
   16550:	mov	r1, r3
   16554:	mov	r0, r2
   16558:	ldr	r2, [r4, #20]
   1655c:	str	lr, [sp, #4]
   16560:	bl	1424c <test_print@@Base+0x7b0>
   16564:	ldr	r3, [r4, #20]
   16568:	add	r0, r3, r0
   1656c:	str	r0, [r4, #20]
   16570:	ldr	r4, [sp]
   16574:	add	sp, sp, #4
   16578:	pop	{pc}		; (ldr pc, [sp], #4)

0001657c <flatcc_json_printer_int8@@Base>:
   1657c:	cmp	r1, #0
   16580:	strd	r4, [sp, #-16]!
   16584:	mov	r4, r0
   16588:	lsr	r5, r1, #31
   1658c:	uxtb	r0, r1
   16590:	ldr	r1, [r4, #20]
   16594:	str	r6, [sp, #8]
   16598:	str	lr, [sp, #12]
   1659c:	bge	165b0 <flatcc_json_printer_int8@@Base+0x34>
   165a0:	rsb	r0, r0, #0
   165a4:	mov	r3, #45	; 0x2d
   165a8:	uxtb	r0, r0
   165ac:	strb	r3, [r1], #1
   165b0:	bl	14fac <test_print@@Base+0x1510>
   165b4:	ldr	r3, [r4, #20]
   165b8:	add	r0, r5, r0
   165bc:	ldr	r6, [sp, #8]
   165c0:	add	r3, r3, r0
   165c4:	str	r3, [r4, #20]
   165c8:	ldrd	r4, [sp]
   165cc:	add	sp, sp, #12
   165d0:	pop	{pc}		; (ldr pc, [sp], #4)

000165d4 <flatcc_json_printer_int16@@Base>:
   165d4:	cmp	r1, #0
   165d8:	strd	r4, [sp, #-16]!
   165dc:	mov	r4, r0
   165e0:	lsr	r5, r1, #31
   165e4:	uxth	r0, r1
   165e8:	ldr	r1, [r4, #20]
   165ec:	str	r6, [sp, #8]
   165f0:	str	lr, [sp, #12]
   165f4:	bge	16608 <flatcc_json_printer_int16@@Base+0x34>
   165f8:	rsb	r0, r0, #0
   165fc:	mov	r3, #45	; 0x2d
   16600:	uxth	r0, r0
   16604:	strb	r3, [r1], #1
   16608:	bl	13db8 <test_print@@Base+0x31c>
   1660c:	ldr	r3, [r4, #20]
   16610:	add	r0, r5, r0
   16614:	ldr	r6, [sp, #8]
   16618:	add	r3, r3, r0
   1661c:	str	r3, [r4, #20]
   16620:	ldrd	r4, [sp]
   16624:	add	sp, sp, #12
   16628:	pop	{pc}		; (ldr pc, [sp], #4)

0001662c <flatcc_json_printer_int32@@Base>:
   1662c:	cmp	r1, #0
   16630:	mov	r3, r1
   16634:	strd	r4, [sp, #-16]!
   16638:	lsr	r5, r1, #31
   1663c:	mov	r4, r0
   16640:	ldr	r1, [r0, #20]
   16644:	str	r6, [sp, #8]
   16648:	str	lr, [sp, #12]
   1664c:	bge	1665c <flatcc_json_printer_int32@@Base+0x30>
   16650:	mov	r2, #45	; 0x2d
   16654:	rsb	r3, r3, #0
   16658:	strb	r2, [r1], #1
   1665c:	mov	r0, r3
   16660:	bl	13f20 <test_print@@Base+0x484>
   16664:	ldr	r3, [r4, #20]
   16668:	add	r0, r5, r0
   1666c:	ldr	r6, [sp, #8]
   16670:	add	r3, r3, r0
   16674:	str	r3, [r4, #20]
   16678:	ldrd	r4, [sp]
   1667c:	add	sp, sp, #12
   16680:	pop	{pc}		; (ldr pc, [sp], #4)

00016684 <flatcc_json_printer_int64@@Base>:
   16684:	cmp	r2, #0
   16688:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1668c:	mov	r5, r3
   16690:	sbcs	r3, r3, #0
   16694:	mov	r4, r2
   16698:	ldr	r2, [r0, #20]
   1669c:	strd	r6, [sp, #8]
   166a0:	mov	r6, r0
   166a4:	lsr	r7, r5, #31
   166a8:	str	r8, [sp, #16]
   166ac:	str	lr, [sp, #20]
   166b0:	bge	166c4 <flatcc_json_printer_int64@@Base+0x40>
   166b4:	rsbs	r4, r4, #0
   166b8:	mov	r3, #45	; 0x2d
   166bc:	rsc	r5, r5, #0
   166c0:	strb	r3, [r2], #1
   166c4:	mov	r0, r4
   166c8:	mov	r1, r5
   166cc:	bl	1424c <test_print@@Base+0x7b0>
   166d0:	ldr	r3, [r6, #20]
   166d4:	add	r0, r7, r0
   166d8:	ldrd	r4, [sp]
   166dc:	ldr	r8, [sp, #16]
   166e0:	add	r3, r3, r0
   166e4:	str	r3, [r6, #20]
   166e8:	ldrd	r6, [sp, #8]
   166ec:	add	sp, sp, #20
   166f0:	pop	{pc}		; (ldr pc, [sp], #4)

000166f4 <flatcc_json_printer_float@@Base>:
   166f4:	vcvt.f64.f32	d0, s0
   166f8:	str	r4, [sp, #-8]!
   166fc:	mov	r4, r0
   16700:	ldr	r0, [r0, #20]
   16704:	str	lr, [sp, #4]
   16708:	bl	153a0 <test_print@@Base+0x1904>
   1670c:	ldr	r3, [r4, #20]
   16710:	add	r0, r3, r0
   16714:	str	r0, [r4, #20]
   16718:	ldr	r4, [sp]
   1671c:	add	sp, sp, #4
   16720:	pop	{pc}		; (ldr pc, [sp], #4)

00016724 <flatcc_json_printer_double@@Base>:
   16724:	str	r4, [sp, #-8]!
   16728:	mov	r4, r0
   1672c:	ldr	r0, [r0, #20]
   16730:	str	lr, [sp, #4]
   16734:	bl	153a0 <test_print@@Base+0x1904>
   16738:	ldr	r3, [r4, #20]
   1673c:	add	r0, r3, r0
   16740:	str	r0, [r4, #20]
   16744:	ldr	r4, [sp]
   16748:	add	sp, sp, #4
   1674c:	pop	{pc}		; (ldr pc, [sp], #4)

00016750 <flatcc_json_printer_enum@@Base>:
   16750:	ldr	r3, [r0, #20]
   16754:	mov	ip, #34	; 0x22
   16758:	strd	r4, [sp, #-16]!
   1675c:	mov	r4, r0
   16760:	str	r6, [sp, #8]
   16764:	str	lr, [sp, #12]
   16768:	strb	ip, [r3]
   1676c:	ldrb	ip, [r0, #26]
   16770:	ldr	lr, [r0, #16]
   16774:	ldr	r3, [r0, #20]
   16778:	cmp	ip, #0
   1677c:	addeq	r3, r3, #1
   16780:	add	ip, r3, r2
   16784:	cmp	lr, ip
   16788:	str	r3, [r0, #20]
   1678c:	bls	167d4 <flatcc_json_printer_enum@@Base+0x84>
   16790:	mov	r0, r3
   16794:	mov	r5, r2
   16798:	bl	12420 <memcpy@plt>
   1679c:	ldr	r2, [r4, #20]
   167a0:	add	r2, r2, r5
   167a4:	str	r2, [r4, #20]
   167a8:	mov	r3, #34	; 0x22
   167ac:	strb	r3, [r2]
   167b0:	ldrb	r2, [r4, #26]
   167b4:	ldr	r3, [r4, #20]
   167b8:	ldr	r6, [sp, #8]
   167bc:	cmp	r2, #0
   167c0:	addeq	r3, r3, #1
   167c4:	str	r3, [r4, #20]
   167c8:	ldrd	r4, [sp]
   167cc:	add	sp, sp, #12
   167d0:	pop	{pc}		; (ldr pc, [sp], #4)
   167d4:	bl	14c50 <test_print@@Base+0x11b4>
   167d8:	ldr	r2, [r4, #20]
   167dc:	b	167a8 <flatcc_json_printer_enum@@Base+0x58>

000167e0 <flatcc_json_printer_delimit_enum_flags@@Base>:
   167e0:	ldr	r3, [r0, #20]
   167e4:	mov	ip, #34	; 0x22
   167e8:	adds	r1, r1, #0
   167ec:	movne	r1, #1
   167f0:	ldrb	r2, [r0, #26]
   167f4:	strb	ip, [r3]
   167f8:	ldr	r3, [r0, #20]
   167fc:	cmp	r2, #0
   16800:	moveq	r1, #1
   16804:	add	r3, r3, r1
   16808:	str	r3, [r0, #20]
   1680c:	bx	lr

00016810 <flatcc_json_printer_enum_flag@@Base>:
   16810:	strd	r4, [sp, #-16]!
   16814:	mov	r5, #32
   16818:	mov	r4, r2
   1681c:	str	r6, [sp, #8]
   16820:	str	lr, [sp, #12]
   16824:	ldr	lr, [r0, #20]
   16828:	strb	r5, [lr]
   1682c:	ldr	r5, [r0, #16]
   16830:	ldr	lr, [r0, #20]
   16834:	cmp	r1, #0
   16838:	addgt	lr, lr, #1
   1683c:	add	r2, lr, r3
   16840:	cmp	r5, r2
   16844:	str	lr, [r0, #20]
   16848:	bhi	16868 <flatcc_json_printer_enum_flag@@Base+0x58>
   1684c:	mov	r1, r4
   16850:	mov	r2, r3
   16854:	ldrd	r4, [sp]
   16858:	ldr	r6, [sp, #8]
   1685c:	ldr	lr, [sp, #12]
   16860:	add	sp, sp, #16
   16864:	b	14c50 <test_print@@Base+0x11b4>
   16868:	mov	r1, r4
   1686c:	mov	r2, r3
   16870:	mov	r4, r0
   16874:	mov	r0, lr
   16878:	mov	r5, r3
   1687c:	bl	12420 <memcpy@plt>
   16880:	ldr	r3, [r4, #20]
   16884:	ldr	r6, [sp, #8]
   16888:	add	r3, r3, r5
   1688c:	str	r3, [r4, #20]
   16890:	ldrd	r4, [sp]
   16894:	add	sp, sp, #12
   16898:	pop	{pc}		; (ldr pc, [sp], #4)

0001689c <flatcc_json_printer_string_field@@Base>:
   1689c:	ldr	ip, [r1, #8]
   168a0:	add	r2, r2, #2
   168a4:	lsl	r2, r2, #1
   168a8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   168ac:	strd	r6, [sp, #8]
   168b0:	strd	r8, [sp, #16]
   168b4:	str	sl, [sp, #24]
   168b8:	cmp	r2, ip
   168bc:	str	lr, [sp, #28]
   168c0:	ldr	r7, [sp, #32]
   168c4:	bge	169f0 <flatcc_json_printer_string_field@@Base+0x154>
   168c8:	ldr	ip, [r1, #4]
   168cc:	ldrh	r5, [ip, r2]
   168d0:	cmp	r5, #0
   168d4:	beq	169f0 <flatcc_json_printer_string_field@@Base+0x154>
   168d8:	ldr	r6, [r1]
   168dc:	adds	r8, r6, r5
   168e0:	beq	169f0 <flatcc_json_printer_string_field@@Base+0x154>
   168e4:	ldr	ip, [r1, #16]
   168e8:	ldr	r2, [r0, #20]
   168ec:	cmp	ip, #0
   168f0:	add	ip, ip, #1
   168f4:	str	ip, [r1, #16]
   168f8:	beq	16910 <flatcc_json_printer_string_field@@Base+0x74>
   168fc:	add	ip, r2, #1
   16900:	mov	r1, #44	; 0x2c
   16904:	str	ip, [r0, #20]
   16908:	strb	r1, [r2]
   1690c:	ldr	r2, [r0, #20]
   16910:	mov	r9, r3
   16914:	mov	r4, r0
   16918:	ldrb	r1, [r0, #25]
   1691c:	cmp	r1, #0
   16920:	bne	16a30 <flatcc_json_printer_string_field@@Base+0x194>
   16924:	ldr	r3, [r0, #16]
   16928:	cmp	r3, r2
   1692c:	bls	16a20 <flatcc_json_printer_string_field@@Base+0x184>
   16930:	mov	r3, #34	; 0x22
   16934:	strb	r3, [r2]
   16938:	ldrb	r3, [r4, #26]
   1693c:	ldr	r2, [r4, #16]
   16940:	ldr	r0, [r4, #20]
   16944:	cmp	r3, #0
   16948:	addeq	r0, r0, #1
   1694c:	add	r3, r0, r7
   16950:	cmp	r2, r3
   16954:	str	r0, [r4, #20]
   16958:	bls	16a08 <flatcc_json_printer_string_field@@Base+0x16c>
   1695c:	mov	r2, r7
   16960:	mov	r1, r9
   16964:	bl	12420 <memcpy@plt>
   16968:	ldr	r3, [r4, #20]
   1696c:	add	r7, r3, r7
   16970:	str	r7, [r4, #20]
   16974:	mov	r3, #34	; 0x22
   16978:	mov	lr, #58	; 0x3a
   1697c:	mov	ip, #32
   16980:	mov	r0, r4
   16984:	strb	r3, [r7]
   16988:	ldrb	r3, [r4, #26]
   1698c:	ldr	r1, [r4, #20]
   16990:	clz	r3, r3
   16994:	lsr	r3, r3, #5
   16998:	add	r2, r1, r3
   1699c:	add	r2, r2, #1
   169a0:	str	r2, [r4, #20]
   169a4:	strb	lr, [r1, r3]
   169a8:	ldr	r3, [r4, #20]
   169ac:	strb	ip, [r3]
   169b0:	ldrb	r1, [r4, #25]
   169b4:	ldr	r3, [r4, #20]
   169b8:	ldr	r2, [r6, r5]
   169bc:	ldrd	r6, [sp, #8]
   169c0:	cmp	r1, #0
   169c4:	addne	r3, r3, #1
   169c8:	ldr	sl, [sp, #24]
   169cc:	add	r1, r8, r2
   169d0:	add	r1, r1, #4
   169d4:	ldr	r2, [r8, r2]
   169d8:	ldrd	r8, [sp, #16]
   169dc:	ldr	lr, [sp, #28]
   169e0:	str	r3, [r4, #20]
   169e4:	ldrd	r4, [sp]
   169e8:	add	sp, sp, #32
   169ec:	b	15f08 <test_print@@Base+0x246c>
   169f0:	ldrd	r4, [sp]
   169f4:	ldrd	r6, [sp, #8]
   169f8:	ldrd	r8, [sp, #16]
   169fc:	ldr	sl, [sp, #24]
   16a00:	add	sp, sp, #28
   16a04:	pop	{pc}		; (ldr pc, [sp], #4)
   16a08:	mov	r2, r7
   16a0c:	mov	r1, r9
   16a10:	mov	r0, r4
   16a14:	bl	14c50 <test_print@@Base+0x11b4>
   16a18:	ldr	r7, [r4, #20]
   16a1c:	b	16974 <flatcc_json_printer_string_field@@Base+0xd8>
   16a20:	ldr	r3, [r0, #44]	; 0x2c
   16a24:	blx	r3
   16a28:	ldr	r2, [r4, #20]
   16a2c:	b	16930 <flatcc_json_printer_string_field@@Base+0x94>
   16a30:	add	r1, r2, #1
   16a34:	mov	r3, #10
   16a38:	str	r1, [r0, #20]
   16a3c:	strb	r3, [r2]
   16a40:	ldrb	r3, [r0, #25]
   16a44:	ldr	r2, [r4, #32]
   16a48:	ldr	r1, [r0, #16]
   16a4c:	ldr	r0, [r0, #20]
   16a50:	mul	sl, r2, r3
   16a54:	add	r3, r0, sl
   16a58:	cmp	r1, r3
   16a5c:	bcs	16a74 <flatcc_json_printer_string_field@@Base+0x1d8>
   16a60:	mov	r1, sl
   16a64:	mov	r0, r4
   16a68:	bl	14d14 <test_print@@Base+0x1278>
   16a6c:	ldr	r2, [r4, #20]
   16a70:	b	16930 <flatcc_json_printer_string_field@@Base+0x94>
   16a74:	mov	r2, sl
   16a78:	mov	r1, #32
   16a7c:	bl	124bc <memset@plt>
   16a80:	ldr	r2, [r4, #20]
   16a84:	add	r2, r2, sl
   16a88:	str	r2, [r4, #20]
   16a8c:	b	16930 <flatcc_json_printer_string_field@@Base+0x94>

00016a90 <flatcc_json_printer_uint8_vector_base64_field@@Base>:
   16a90:	ldr	ip, [r1, #8]
   16a94:	add	r2, r2, #2
   16a98:	lsl	r2, r2, #1
   16a9c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   16aa0:	strd	r6, [sp, #8]
   16aa4:	strd	r8, [sp, #16]
   16aa8:	strd	sl, [sp, #24]
   16aac:	cmp	r2, ip
   16ab0:	str	lr, [sp, #32]
   16ab4:	sub	sp, sp, #20
   16ab8:	ldr	r5, [sp, #56]	; 0x38
   16abc:	bge	16d20 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x290>
   16ac0:	ldr	ip, [r1, #4]
   16ac4:	ldrh	r8, [ip, r2]
   16ac8:	cmp	r8, #0
   16acc:	beq	16d20 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x290>
   16ad0:	ldr	r2, [sp, #60]	; 0x3c
   16ad4:	ldr	r9, [r1]
   16ad8:	adds	r7, r2, #0
   16adc:	movne	r7, #1
   16ae0:	adds	r6, r9, r8
   16ae4:	orr	sl, r7, #128	; 0x80
   16ae8:	beq	16d20 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x290>
   16aec:	ldr	ip, [r1, #16]
   16af0:	ldr	r2, [r0, #20]
   16af4:	cmp	ip, #0
   16af8:	add	ip, ip, #1
   16afc:	str	ip, [r1, #16]
   16b00:	beq	16b18 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x88>
   16b04:	add	ip, r2, #1
   16b08:	mov	r1, #44	; 0x2c
   16b0c:	str	ip, [r0, #20]
   16b10:	strb	r1, [r2]
   16b14:	ldr	r2, [r0, #20]
   16b18:	mov	fp, r3
   16b1c:	mov	r4, r0
   16b20:	ldrb	r1, [r0, #25]
   16b24:	cmp	r1, #0
   16b28:	bne	16d3c <flatcc_json_printer_uint8_vector_base64_field@@Base+0x2ac>
   16b2c:	ldr	r3, [r0, #16]
   16b30:	cmp	r3, r2
   16b34:	bhi	16b44 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xb4>
   16b38:	ldr	r3, [r0, #44]	; 0x2c
   16b3c:	blx	r3
   16b40:	ldr	r2, [r4, #20]
   16b44:	mov	r3, #34	; 0x22
   16b48:	strb	r3, [r2]
   16b4c:	ldrb	r3, [r4, #26]
   16b50:	ldr	r2, [r4, #16]
   16b54:	ldr	r0, [r4, #20]
   16b58:	cmp	r3, #0
   16b5c:	addeq	r0, r0, #1
   16b60:	add	r3, r0, r5
   16b64:	cmp	r2, r3
   16b68:	str	r0, [r4, #20]
   16b6c:	bls	16d80 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x2f0>
   16b70:	mov	r2, r5
   16b74:	mov	r1, fp
   16b78:	bl	12420 <memcpy@plt>
   16b7c:	ldr	r3, [r4, #20]
   16b80:	add	r5, r3, r5
   16b84:	str	r5, [r4, #20]
   16b88:	mov	r1, #34	; 0x22
   16b8c:	mov	fp, #58	; 0x3a
   16b90:	mov	lr, #32
   16b94:	movw	r2, #43691	; 0xaaab
   16b98:	movt	r2, #43690	; 0xaaaa
   16b9c:	strb	r1, [r5]
   16ba0:	ldrb	r3, [r4, #26]
   16ba4:	ldr	ip, [r4, #20]
   16ba8:	clz	r3, r3
   16bac:	lsr	r3, r3, #5
   16bb0:	add	r0, ip, r3
   16bb4:	add	r0, r0, #1
   16bb8:	str	r0, [r4, #20]
   16bbc:	strb	fp, [ip, r3]
   16bc0:	ldr	r3, [r4, #20]
   16bc4:	strb	lr, [r3]
   16bc8:	ldrb	r3, [r4, #25]
   16bcc:	ldr	r0, [r9, r8]
   16bd0:	ldr	ip, [r4, #20]
   16bd4:	adds	r3, r3, #0
   16bd8:	movne	r3, #1
   16bdc:	ldr	lr, [r6, r0]
   16be0:	add	r6, r6, r0
   16be4:	add	r6, r6, #4
   16be8:	add	r0, ip, r3
   16bec:	add	r0, r0, #1
   16bf0:	str	lr, [sp, #8]
   16bf4:	str	r0, [r4, #20]
   16bf8:	strb	r1, [ip, r3]
   16bfc:	ldr	r5, [sp, #8]
   16c00:	ldr	r3, [r4, #16]
   16c04:	ldr	r0, [r4, #20]
   16c08:	lsl	r5, r5, #2
   16c0c:	umull	r2, r5, r2, r5
   16c10:	lsr	r5, r5, #1
   16c14:	add	r5, r5, #3
   16c18:	bic	r5, r5, #3
   16c1c:	add	r2, r0, r5
   16c20:	cmp	r2, r3
   16c24:	bcc	16c44 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1b4>
   16c28:	mov	r0, r4
   16c2c:	mov	r1, #0
   16c30:	ldr	r3, [r4, #44]	; 0x2c
   16c34:	blx	r3
   16c38:	ldr	r3, [r4, #16]
   16c3c:	ldr	r0, [r4, #20]
   16c40:	add	r2, r0, r5
   16c44:	cmp	r3, r2
   16c48:	bcs	16cf8 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x268>
   16c4c:	sub	r5, r3, r0
   16c50:	bic	r5, r5, #3
   16c54:	add	fp, r5, r5, lsl #1
   16c58:	cmp	fp, #3
   16c5c:	lsr	fp, fp, #2
   16c60:	bls	16dbc <flatcc_json_printer_uint8_vector_base64_field@@Base+0x32c>
   16c64:	movw	r8, #43691	; 0xaaab
   16c68:	movt	r8, #43690	; 0xaaaa
   16c6c:	add	r9, sp, #12
   16c70:	b	16c8c <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1fc>
   16c74:	sub	r5, r3, r0
   16c78:	bic	r5, r5, #3
   16c7c:	add	fp, r5, r5, lsl #1
   16c80:	cmp	fp, #3
   16c84:	lsr	fp, fp, #2
   16c88:	bls	16dbc <flatcc_json_printer_uint8_vector_base64_field@@Base+0x32c>
   16c8c:	mov	r1, r6
   16c90:	mov	r3, r7
   16c94:	str	fp, [sp, #12]
   16c98:	mov	r2, r9
   16c9c:	add	r6, r6, fp
   16ca0:	bl	1521c <test_print@@Base+0x1780>
   16ca4:	ldr	ip, [sp, #8]
   16ca8:	mov	r0, r4
   16cac:	mov	r1, #0
   16cb0:	ldr	r2, [r4, #20]
   16cb4:	ldr	r3, [r4, #44]	; 0x2c
   16cb8:	sub	fp, ip, fp
   16cbc:	add	r5, r2, r5
   16cc0:	str	fp, [sp, #8]
   16cc4:	str	r5, [r4, #20]
   16cc8:	blx	r3
   16ccc:	ldr	r5, [sp, #8]
   16cd0:	ldr	r3, [r4, #16]
   16cd4:	ldr	r0, [r4, #20]
   16cd8:	lsl	r5, r5, #2
   16cdc:	umull	r2, r5, r8, r5
   16ce0:	lsr	r5, r5, #1
   16ce4:	add	r5, r5, #3
   16ce8:	bic	r5, r5, #3
   16cec:	add	r2, r0, r5
   16cf0:	cmp	r3, r2
   16cf4:	bcc	16c74 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1e4>
   16cf8:	mov	r3, sl
   16cfc:	mov	r1, r6
   16d00:	add	r2, sp, #8
   16d04:	bl	1521c <test_print@@Base+0x1780>
   16d08:	ldr	r2, [r4, #20]
   16d0c:	mov	r1, #34	; 0x22
   16d10:	add	r3, r2, r5
   16d14:	add	r3, r3, #1
   16d18:	str	r3, [r4, #20]
   16d1c:	strb	r1, [r2, r5]
   16d20:	add	sp, sp, #20
   16d24:	ldrd	r4, [sp]
   16d28:	ldrd	r6, [sp, #8]
   16d2c:	ldrd	r8, [sp, #16]
   16d30:	ldrd	sl, [sp, #24]
   16d34:	add	sp, sp, #32
   16d38:	pop	{pc}		; (ldr pc, [sp], #4)
   16d3c:	add	r1, r2, #1
   16d40:	mov	r3, #10
   16d44:	str	r1, [r0, #20]
   16d48:	strb	r3, [r2]
   16d4c:	ldrb	r3, [r0, #25]
   16d50:	ldr	r2, [r4, #32]
   16d54:	ldr	r1, [r0, #16]
   16d58:	ldr	r0, [r0, #20]
   16d5c:	mul	r3, r2, r3
   16d60:	add	r2, r0, r3
   16d64:	cmp	r1, r2
   16d68:	bcs	16d98 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x308>
   16d6c:	mov	r1, r3
   16d70:	mov	r0, r4
   16d74:	bl	14d14 <test_print@@Base+0x1278>
   16d78:	ldr	r2, [r4, #20]
   16d7c:	b	16b44 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xb4>
   16d80:	mov	r2, r5
   16d84:	mov	r1, fp
   16d88:	mov	r0, r4
   16d8c:	bl	14c50 <test_print@@Base+0x11b4>
   16d90:	ldr	r5, [r4, #20]
   16d94:	b	16b88 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xf8>
   16d98:	mov	r2, r3
   16d9c:	mov	r1, #32
   16da0:	str	r3, [sp, #4]
   16da4:	bl	124bc <memset@plt>
   16da8:	ldr	r3, [sp, #4]
   16dac:	ldr	r2, [r4, #20]
   16db0:	add	r2, r2, r3
   16db4:	str	r2, [r4, #20]
   16db8:	b	16b44 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xb4>
   16dbc:	ldr	r3, [pc, #32]	; 16de4 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x354>
   16dc0:	movw	r2, #277	; 0x115
   16dc4:	ldr	r1, [pc, #28]	; 16de8 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x358>
   16dc8:	ldr	r0, [pc, #28]	; 16dec <flatcc_json_printer_uint8_vector_base64_field@@Base+0x35c>
   16dcc:	add	r3, pc, r3
   16dd0:	add	r3, r3, #1744	; 0x6d0
   16dd4:	add	r1, pc, r1
   16dd8:	add	r3, r3, #4
   16ddc:	add	r0, pc, r0
   16de0:	bl	12504 <__assert_fail@plt>
   16de4:	muleq	r0, r4, sl
   16de8:	andeq	ip, r0, r4, ror #4
   16dec:	andeq	ip, r0, ip, ror r4

00016df0 <flatcc_json_printer_uint8_field@@Base>:
   16df0:	ldr	ip, [r1, #8]
   16df4:	add	r2, r2, #2
   16df8:	lsl	r2, r2, #1
   16dfc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   16e00:	strd	r6, [sp, #8]
   16e04:	str	r8, [sp, #16]
   16e08:	str	lr, [sp, #20]
   16e0c:	cmp	r2, ip
   16e10:	ldrb	lr, [sp, #28]
   16e14:	ldr	r5, [sp, #24]
   16e18:	bge	16f58 <flatcc_json_printer_uint8_field@@Base+0x168>
   16e1c:	ldr	ip, [r1, #4]
   16e20:	ldrh	r2, [ip, r2]
   16e24:	cmp	r2, #0
   16e28:	beq	16f58 <flatcc_json_printer_uint8_field@@Base+0x168>
   16e2c:	ldr	ip, [r1]
   16e30:	cmn	ip, r2
   16e34:	beq	16f58 <flatcc_json_printer_uint8_field@@Base+0x168>
   16e38:	ldrb	r6, [ip, r2]
   16e3c:	cmp	lr, r6
   16e40:	beq	16fe4 <flatcc_json_printer_uint8_field@@Base+0x1f4>
   16e44:	ldr	ip, [r1, #16]
   16e48:	ldr	r2, [r0, #20]
   16e4c:	cmp	ip, #0
   16e50:	add	ip, ip, #1
   16e54:	str	ip, [r1, #16]
   16e58:	beq	16e70 <flatcc_json_printer_uint8_field@@Base+0x80>
   16e5c:	add	ip, r2, #1
   16e60:	mov	r1, #44	; 0x2c
   16e64:	str	ip, [r0, #20]
   16e68:	strb	r1, [r2]
   16e6c:	ldr	r2, [r0, #20]
   16e70:	mov	r7, r3
   16e74:	mov	r4, r0
   16e78:	ldrb	r1, [r0, #25]
   16e7c:	cmp	r1, #0
   16e80:	bne	16f84 <flatcc_json_printer_uint8_field@@Base+0x194>
   16e84:	ldr	r3, [r0, #16]
   16e88:	cmp	r3, r2
   16e8c:	bhi	16e9c <flatcc_json_printer_uint8_field@@Base+0xac>
   16e90:	ldr	r3, [r0, #44]	; 0x2c
   16e94:	blx	r3
   16e98:	ldr	r2, [r4, #20]
   16e9c:	mov	r3, #34	; 0x22
   16ea0:	strb	r3, [r2]
   16ea4:	ldrb	r3, [r4, #26]
   16ea8:	ldr	r2, [r4, #16]
   16eac:	ldr	r0, [r4, #20]
   16eb0:	cmp	r3, #0
   16eb4:	addeq	r0, r0, #1
   16eb8:	add	r3, r0, r5
   16ebc:	cmp	r2, r3
   16ec0:	str	r0, [r4, #20]
   16ec4:	bls	16f6c <flatcc_json_printer_uint8_field@@Base+0x17c>
   16ec8:	mov	r2, r5
   16ecc:	mov	r1, r7
   16ed0:	bl	12420 <memcpy@plt>
   16ed4:	ldr	r3, [r4, #20]
   16ed8:	add	r5, r3, r5
   16edc:	str	r5, [r4, #20]
   16ee0:	mov	r3, #34	; 0x22
   16ee4:	mov	lr, #58	; 0x3a
   16ee8:	mov	ip, #32
   16eec:	mov	r0, r6
   16ef0:	strb	r3, [r5]
   16ef4:	ldrb	r3, [r4, #26]
   16ef8:	ldr	r1, [r4, #20]
   16efc:	clz	r3, r3
   16f00:	lsr	r3, r3, #5
   16f04:	add	r2, r1, r3
   16f08:	add	r2, r2, #1
   16f0c:	str	r2, [r4, #20]
   16f10:	strb	lr, [r1, r3]
   16f14:	ldr	r3, [r4, #20]
   16f18:	strb	ip, [r3]
   16f1c:	ldrb	r2, [r4, #25]
   16f20:	ldr	r3, [r4, #20]
   16f24:	cmp	r2, #0
   16f28:	addne	r3, r3, #1
   16f2c:	mov	r1, r3
   16f30:	str	r3, [r4, #20]
   16f34:	bl	14fac <test_print@@Base+0x1510>
   16f38:	ldr	r3, [r4, #20]
   16f3c:	add	r0, r3, r0
   16f40:	str	r0, [r4, #20]
   16f44:	ldrd	r4, [sp]
   16f48:	ldrd	r6, [sp, #8]
   16f4c:	ldr	r8, [sp, #16]
   16f50:	add	sp, sp, #20
   16f54:	pop	{pc}		; (ldr pc, [sp], #4)
   16f58:	ldrb	r2, [r0, #29]
   16f5c:	cmp	r2, #0
   16f60:	beq	16f44 <flatcc_json_printer_uint8_field@@Base+0x154>
   16f64:	mov	r6, lr
   16f68:	b	16e44 <flatcc_json_printer_uint8_field@@Base+0x54>
   16f6c:	mov	r2, r5
   16f70:	mov	r1, r7
   16f74:	mov	r0, r4
   16f78:	bl	14c50 <test_print@@Base+0x11b4>
   16f7c:	ldr	r5, [r4, #20]
   16f80:	b	16ee0 <flatcc_json_printer_uint8_field@@Base+0xf0>
   16f84:	add	r1, r2, #1
   16f88:	mov	r3, #10
   16f8c:	str	r1, [r0, #20]
   16f90:	strb	r3, [r2]
   16f94:	ldrb	r8, [r0, #25]
   16f98:	ldr	r2, [r4, #32]
   16f9c:	ldr	r1, [r0, #16]
   16fa0:	ldr	r0, [r0, #20]
   16fa4:	mul	r8, r2, r8
   16fa8:	add	r3, r0, r8
   16fac:	cmp	r1, r3
   16fb0:	bcs	16fc8 <flatcc_json_printer_uint8_field@@Base+0x1d8>
   16fb4:	mov	r1, r8
   16fb8:	mov	r0, r4
   16fbc:	bl	14d14 <test_print@@Base+0x1278>
   16fc0:	ldr	r2, [r4, #20]
   16fc4:	b	16e9c <flatcc_json_printer_uint8_field@@Base+0xac>
   16fc8:	mov	r2, r8
   16fcc:	mov	r1, #32
   16fd0:	bl	124bc <memset@plt>
   16fd4:	ldr	r2, [r4, #20]
   16fd8:	add	r2, r2, r8
   16fdc:	str	r2, [r4, #20]
   16fe0:	b	16e9c <flatcc_json_printer_uint8_field@@Base+0xac>
   16fe4:	ldrb	r2, [r0, #28]
   16fe8:	cmp	r2, #0
   16fec:	beq	16e44 <flatcc_json_printer_uint8_field@@Base+0x54>
   16ff0:	b	16f44 <flatcc_json_printer_uint8_field@@Base+0x154>

00016ff4 <flatcc_json_printer_uint16_field@@Base>:
   16ff4:	ldr	ip, [r1, #8]
   16ff8:	add	r2, r2, #2
   16ffc:	lsl	r2, r2, #1
   17000:	strd	r4, [sp, #-24]!	; 0xffffffe8
   17004:	strd	r6, [sp, #8]
   17008:	str	r8, [sp, #16]
   1700c:	str	lr, [sp, #20]
   17010:	cmp	r2, ip
   17014:	ldrh	lr, [sp, #28]
   17018:	ldr	r5, [sp, #24]
   1701c:	bge	1715c <flatcc_json_printer_uint16_field@@Base+0x168>
   17020:	ldr	ip, [r1, #4]
   17024:	ldrh	r2, [ip, r2]
   17028:	cmp	r2, #0
   1702c:	beq	1715c <flatcc_json_printer_uint16_field@@Base+0x168>
   17030:	ldr	ip, [r1]
   17034:	cmn	ip, r2
   17038:	beq	1715c <flatcc_json_printer_uint16_field@@Base+0x168>
   1703c:	ldrh	r6, [ip, r2]
   17040:	cmp	lr, r6
   17044:	beq	171e8 <flatcc_json_printer_uint16_field@@Base+0x1f4>
   17048:	ldr	ip, [r1, #16]
   1704c:	ldr	r2, [r0, #20]
   17050:	cmp	ip, #0
   17054:	add	ip, ip, #1
   17058:	str	ip, [r1, #16]
   1705c:	beq	17074 <flatcc_json_printer_uint16_field@@Base+0x80>
   17060:	add	ip, r2, #1
   17064:	mov	r1, #44	; 0x2c
   17068:	str	ip, [r0, #20]
   1706c:	strb	r1, [r2]
   17070:	ldr	r2, [r0, #20]
   17074:	mov	r7, r3
   17078:	mov	r4, r0
   1707c:	ldrb	r1, [r0, #25]
   17080:	cmp	r1, #0
   17084:	bne	17188 <flatcc_json_printer_uint16_field@@Base+0x194>
   17088:	ldr	r3, [r0, #16]
   1708c:	cmp	r3, r2
   17090:	bhi	170a0 <flatcc_json_printer_uint16_field@@Base+0xac>
   17094:	ldr	r3, [r0, #44]	; 0x2c
   17098:	blx	r3
   1709c:	ldr	r2, [r4, #20]
   170a0:	mov	r3, #34	; 0x22
   170a4:	strb	r3, [r2]
   170a8:	ldrb	r3, [r4, #26]
   170ac:	ldr	r2, [r4, #16]
   170b0:	ldr	r0, [r4, #20]
   170b4:	cmp	r3, #0
   170b8:	addeq	r0, r0, #1
   170bc:	add	r3, r0, r5
   170c0:	cmp	r2, r3
   170c4:	str	r0, [r4, #20]
   170c8:	bls	17170 <flatcc_json_printer_uint16_field@@Base+0x17c>
   170cc:	mov	r2, r5
   170d0:	mov	r1, r7
   170d4:	bl	12420 <memcpy@plt>
   170d8:	ldr	r3, [r4, #20]
   170dc:	add	r5, r3, r5
   170e0:	str	r5, [r4, #20]
   170e4:	mov	r3, #34	; 0x22
   170e8:	mov	lr, #58	; 0x3a
   170ec:	mov	ip, #32
   170f0:	mov	r0, r6
   170f4:	strb	r3, [r5]
   170f8:	ldrb	r3, [r4, #26]
   170fc:	ldr	r1, [r4, #20]
   17100:	clz	r3, r3
   17104:	lsr	r3, r3, #5
   17108:	add	r2, r1, r3
   1710c:	add	r2, r2, #1
   17110:	str	r2, [r4, #20]
   17114:	strb	lr, [r1, r3]
   17118:	ldr	r3, [r4, #20]
   1711c:	strb	ip, [r3]
   17120:	ldrb	r2, [r4, #25]
   17124:	ldr	r3, [r4, #20]
   17128:	cmp	r2, #0
   1712c:	addne	r3, r3, #1
   17130:	mov	r1, r3
   17134:	str	r3, [r4, #20]
   17138:	bl	13db8 <test_print@@Base+0x31c>
   1713c:	ldr	r3, [r4, #20]
   17140:	add	r0, r3, r0
   17144:	str	r0, [r4, #20]
   17148:	ldrd	r4, [sp]
   1714c:	ldrd	r6, [sp, #8]
   17150:	ldr	r8, [sp, #16]
   17154:	add	sp, sp, #20
   17158:	pop	{pc}		; (ldr pc, [sp], #4)
   1715c:	ldrb	r2, [r0, #29]
   17160:	cmp	r2, #0
   17164:	beq	17148 <flatcc_json_printer_uint16_field@@Base+0x154>
   17168:	mov	r6, lr
   1716c:	b	17048 <flatcc_json_printer_uint16_field@@Base+0x54>
   17170:	mov	r2, r5
   17174:	mov	r1, r7
   17178:	mov	r0, r4
   1717c:	bl	14c50 <test_print@@Base+0x11b4>
   17180:	ldr	r5, [r4, #20]
   17184:	b	170e4 <flatcc_json_printer_uint16_field@@Base+0xf0>
   17188:	add	r1, r2, #1
   1718c:	mov	r3, #10
   17190:	str	r1, [r0, #20]
   17194:	strb	r3, [r2]
   17198:	ldrb	r8, [r0, #25]
   1719c:	ldr	r2, [r4, #32]
   171a0:	ldr	r1, [r0, #16]
   171a4:	ldr	r0, [r0, #20]
   171a8:	mul	r8, r2, r8
   171ac:	add	r3, r0, r8
   171b0:	cmp	r1, r3
   171b4:	bcs	171cc <flatcc_json_printer_uint16_field@@Base+0x1d8>
   171b8:	mov	r1, r8
   171bc:	mov	r0, r4
   171c0:	bl	14d14 <test_print@@Base+0x1278>
   171c4:	ldr	r2, [r4, #20]
   171c8:	b	170a0 <flatcc_json_printer_uint16_field@@Base+0xac>
   171cc:	mov	r2, r8
   171d0:	mov	r1, #32
   171d4:	bl	124bc <memset@plt>
   171d8:	ldr	r2, [r4, #20]
   171dc:	add	r2, r2, r8
   171e0:	str	r2, [r4, #20]
   171e4:	b	170a0 <flatcc_json_printer_uint16_field@@Base+0xac>
   171e8:	ldrb	r2, [r0, #28]
   171ec:	cmp	r2, #0
   171f0:	beq	17048 <flatcc_json_printer_uint16_field@@Base+0x54>
   171f4:	b	17148 <flatcc_json_printer_uint16_field@@Base+0x154>

000171f8 <flatcc_json_printer_uint32_field@@Base>:
   171f8:	ldr	ip, [r1, #8]
   171fc:	add	r2, r2, #2
   17200:	lsl	r2, r2, #1
   17204:	strd	r4, [sp, #-24]!	; 0xffffffe8
   17208:	strd	r6, [sp, #8]
   1720c:	str	r8, [sp, #16]
   17210:	str	lr, [sp, #20]
   17214:	cmp	r2, ip
   17218:	ldr	r5, [sp, #24]
   1721c:	bge	17360 <flatcc_json_printer_uint32_field@@Base+0x168>
   17220:	ldr	ip, [r1, #4]
   17224:	ldrh	r2, [ip, r2]
   17228:	cmp	r2, #0
   1722c:	beq	17360 <flatcc_json_printer_uint32_field@@Base+0x168>
   17230:	ldr	ip, [r1]
   17234:	cmn	ip, r2
   17238:	beq	17360 <flatcc_json_printer_uint32_field@@Base+0x168>
   1723c:	ldr	r6, [ip, r2]
   17240:	ldr	r2, [sp, #28]
   17244:	cmp	r2, r6
   17248:	beq	173ec <flatcc_json_printer_uint32_field@@Base+0x1f4>
   1724c:	ldr	ip, [r1, #16]
   17250:	ldr	r2, [r0, #20]
   17254:	cmp	ip, #0
   17258:	add	ip, ip, #1
   1725c:	str	ip, [r1, #16]
   17260:	beq	17278 <flatcc_json_printer_uint32_field@@Base+0x80>
   17264:	add	ip, r2, #1
   17268:	mov	r1, #44	; 0x2c
   1726c:	str	ip, [r0, #20]
   17270:	strb	r1, [r2]
   17274:	ldr	r2, [r0, #20]
   17278:	mov	r7, r3
   1727c:	mov	r4, r0
   17280:	ldrb	r1, [r0, #25]
   17284:	cmp	r1, #0
   17288:	bne	1738c <flatcc_json_printer_uint32_field@@Base+0x194>
   1728c:	ldr	r3, [r0, #16]
   17290:	cmp	r3, r2
   17294:	bhi	172a4 <flatcc_json_printer_uint32_field@@Base+0xac>
   17298:	ldr	r3, [r0, #44]	; 0x2c
   1729c:	blx	r3
   172a0:	ldr	r2, [r4, #20]
   172a4:	mov	r3, #34	; 0x22
   172a8:	strb	r3, [r2]
   172ac:	ldrb	r3, [r4, #26]
   172b0:	ldr	r2, [r4, #16]
   172b4:	ldr	r0, [r4, #20]
   172b8:	cmp	r3, #0
   172bc:	addeq	r0, r0, #1
   172c0:	add	r3, r0, r5
   172c4:	cmp	r2, r3
   172c8:	str	r0, [r4, #20]
   172cc:	bls	17374 <flatcc_json_printer_uint32_field@@Base+0x17c>
   172d0:	mov	r2, r5
   172d4:	mov	r1, r7
   172d8:	bl	12420 <memcpy@plt>
   172dc:	ldr	r3, [r4, #20]
   172e0:	add	r5, r3, r5
   172e4:	str	r5, [r4, #20]
   172e8:	mov	r3, #34	; 0x22
   172ec:	mov	lr, #58	; 0x3a
   172f0:	mov	ip, #32
   172f4:	mov	r0, r6
   172f8:	strb	r3, [r5]
   172fc:	ldrb	r3, [r4, #26]
   17300:	ldr	r1, [r4, #20]
   17304:	clz	r3, r3
   17308:	lsr	r3, r3, #5
   1730c:	add	r2, r1, r3
   17310:	add	r2, r2, #1
   17314:	str	r2, [r4, #20]
   17318:	strb	lr, [r1, r3]
   1731c:	ldr	r3, [r4, #20]
   17320:	strb	ip, [r3]
   17324:	ldrb	r2, [r4, #25]
   17328:	ldr	r3, [r4, #20]
   1732c:	cmp	r2, #0
   17330:	addne	r3, r3, #1
   17334:	mov	r1, r3
   17338:	str	r3, [r4, #20]
   1733c:	bl	13f20 <test_print@@Base+0x484>
   17340:	ldr	r3, [r4, #20]
   17344:	add	r0, r3, r0
   17348:	str	r0, [r4, #20]
   1734c:	ldrd	r4, [sp]
   17350:	ldrd	r6, [sp, #8]
   17354:	ldr	r8, [sp, #16]
   17358:	add	sp, sp, #20
   1735c:	pop	{pc}		; (ldr pc, [sp], #4)
   17360:	ldrb	r2, [r0, #29]
   17364:	cmp	r2, #0
   17368:	beq	1734c <flatcc_json_printer_uint32_field@@Base+0x154>
   1736c:	ldr	r6, [sp, #28]
   17370:	b	1724c <flatcc_json_printer_uint32_field@@Base+0x54>
   17374:	mov	r2, r5
   17378:	mov	r1, r7
   1737c:	mov	r0, r4
   17380:	bl	14c50 <test_print@@Base+0x11b4>
   17384:	ldr	r5, [r4, #20]
   17388:	b	172e8 <flatcc_json_printer_uint32_field@@Base+0xf0>
   1738c:	add	r1, r2, #1
   17390:	mov	r3, #10
   17394:	str	r1, [r0, #20]
   17398:	strb	r3, [r2]
   1739c:	ldrb	r8, [r0, #25]
   173a0:	ldr	r2, [r4, #32]
   173a4:	ldr	r1, [r0, #16]
   173a8:	ldr	r0, [r0, #20]
   173ac:	mul	r8, r2, r8
   173b0:	add	r3, r0, r8
   173b4:	cmp	r1, r3
   173b8:	bcs	173d0 <flatcc_json_printer_uint32_field@@Base+0x1d8>
   173bc:	mov	r1, r8
   173c0:	mov	r0, r4
   173c4:	bl	14d14 <test_print@@Base+0x1278>
   173c8:	ldr	r2, [r4, #20]
   173cc:	b	172a4 <flatcc_json_printer_uint32_field@@Base+0xac>
   173d0:	mov	r2, r8
   173d4:	mov	r1, #32
   173d8:	bl	124bc <memset@plt>
   173dc:	ldr	r2, [r4, #20]
   173e0:	add	r2, r2, r8
   173e4:	str	r2, [r4, #20]
   173e8:	b	172a4 <flatcc_json_printer_uint32_field@@Base+0xac>
   173ec:	ldrb	r2, [r0, #28]
   173f0:	cmp	r2, #0
   173f4:	beq	1724c <flatcc_json_printer_uint32_field@@Base+0x54>
   173f8:	b	1734c <flatcc_json_printer_uint32_field@@Base+0x154>

000173fc <flatcc_json_printer_uint64_field@@Base>:
   173fc:	ldr	ip, [r1, #8]
   17400:	add	r2, r2, #2
   17404:	lsl	r2, r2, #1
   17408:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1740c:	strd	r6, [sp, #8]
   17410:	strd	r8, [sp, #16]
   17414:	str	sl, [sp, #24]
   17418:	cmp	r2, ip
   1741c:	str	lr, [sp, #28]
   17420:	ldr	r5, [sp, #32]
   17424:	bge	17574 <flatcc_json_printer_uint64_field@@Base+0x178>
   17428:	ldr	ip, [r1, #4]
   1742c:	ldrh	r2, [ip, r2]
   17430:	cmp	r2, #0
   17434:	beq	17574 <flatcc_json_printer_uint64_field@@Base+0x178>
   17438:	ldr	ip, [r1]
   1743c:	cmn	ip, r2
   17440:	beq	17574 <flatcc_json_printer_uint64_field@@Base+0x178>
   17444:	ldrd	r6, [ip, r2]
   17448:	ldrd	r8, [sp, #40]	; 0x28
   1744c:	cmp	r9, r7
   17450:	cmpeq	r8, r6
   17454:	beq	17600 <flatcc_json_printer_uint64_field@@Base+0x204>
   17458:	ldr	ip, [r1, #16]
   1745c:	ldr	r2, [r0, #20]
   17460:	cmp	ip, #0
   17464:	add	ip, ip, #1
   17468:	str	ip, [r1, #16]
   1746c:	beq	17484 <flatcc_json_printer_uint64_field@@Base+0x88>
   17470:	add	ip, r2, #1
   17474:	mov	r1, #44	; 0x2c
   17478:	str	ip, [r0, #20]
   1747c:	strb	r1, [r2]
   17480:	ldr	r2, [r0, #20]
   17484:	mov	r8, r3
   17488:	mov	r4, r0
   1748c:	ldrb	r1, [r0, #25]
   17490:	cmp	r1, #0
   17494:	bne	175a0 <flatcc_json_printer_uint64_field@@Base+0x1a4>
   17498:	ldr	r3, [r0, #16]
   1749c:	cmp	r3, r2
   174a0:	bhi	174b0 <flatcc_json_printer_uint64_field@@Base+0xb4>
   174a4:	ldr	r3, [r0, #44]	; 0x2c
   174a8:	blx	r3
   174ac:	ldr	r2, [r4, #20]
   174b0:	mov	r3, #34	; 0x22
   174b4:	strb	r3, [r2]
   174b8:	ldrb	r3, [r4, #26]
   174bc:	ldr	r2, [r4, #16]
   174c0:	ldr	r0, [r4, #20]
   174c4:	cmp	r3, #0
   174c8:	addeq	r0, r0, #1
   174cc:	add	r3, r0, r5
   174d0:	cmp	r2, r3
   174d4:	str	r0, [r4, #20]
   174d8:	bls	17588 <flatcc_json_printer_uint64_field@@Base+0x18c>
   174dc:	mov	r2, r5
   174e0:	mov	r1, r8
   174e4:	bl	12420 <memcpy@plt>
   174e8:	ldr	r3, [r4, #20]
   174ec:	add	r5, r3, r5
   174f0:	str	r5, [r4, #20]
   174f4:	mov	r3, #34	; 0x22
   174f8:	mov	r0, r6
   174fc:	mov	r6, #58	; 0x3a
   17500:	mov	lr, #32
   17504:	strb	r3, [r5]
   17508:	mov	r1, r7
   1750c:	ldrb	r3, [r4, #26]
   17510:	ldr	ip, [r4, #20]
   17514:	clz	r3, r3
   17518:	lsr	r3, r3, #5
   1751c:	add	r2, ip, r3
   17520:	add	r2, r2, #1
   17524:	str	r2, [r4, #20]
   17528:	strb	r6, [ip, r3]
   1752c:	ldr	r3, [r4, #20]
   17530:	strb	lr, [r3]
   17534:	ldrb	r2, [r4, #25]
   17538:	ldr	r3, [r4, #20]
   1753c:	cmp	r2, #0
   17540:	addne	r3, r3, #1
   17544:	mov	r2, r3
   17548:	str	r3, [r4, #20]
   1754c:	bl	1424c <test_print@@Base+0x7b0>
   17550:	ldr	r3, [r4, #20]
   17554:	add	r0, r3, r0
   17558:	str	r0, [r4, #20]
   1755c:	ldrd	r4, [sp]
   17560:	ldrd	r6, [sp, #8]
   17564:	ldrd	r8, [sp, #16]
   17568:	ldr	sl, [sp, #24]
   1756c:	add	sp, sp, #28
   17570:	pop	{pc}		; (ldr pc, [sp], #4)
   17574:	ldrb	r2, [r0, #29]
   17578:	cmp	r2, #0
   1757c:	beq	1755c <flatcc_json_printer_uint64_field@@Base+0x160>
   17580:	ldrd	r6, [sp, #40]	; 0x28
   17584:	b	17458 <flatcc_json_printer_uint64_field@@Base+0x5c>
   17588:	mov	r2, r5
   1758c:	mov	r1, r8
   17590:	mov	r0, r4
   17594:	bl	14c50 <test_print@@Base+0x11b4>
   17598:	ldr	r5, [r4, #20]
   1759c:	b	174f4 <flatcc_json_printer_uint64_field@@Base+0xf8>
   175a0:	add	r1, r2, #1
   175a4:	mov	r3, #10
   175a8:	str	r1, [r0, #20]
   175ac:	strb	r3, [r2]
   175b0:	ldrb	r3, [r0, #25]
   175b4:	ldr	r2, [r4, #32]
   175b8:	ldr	r1, [r0, #16]
   175bc:	ldr	r0, [r0, #20]
   175c0:	mul	r9, r2, r3
   175c4:	add	r3, r0, r9
   175c8:	cmp	r1, r3
   175cc:	bcs	175e4 <flatcc_json_printer_uint64_field@@Base+0x1e8>
   175d0:	mov	r1, r9
   175d4:	mov	r0, r4
   175d8:	bl	14d14 <test_print@@Base+0x1278>
   175dc:	ldr	r2, [r4, #20]
   175e0:	b	174b0 <flatcc_json_printer_uint64_field@@Base+0xb4>
   175e4:	mov	r2, r9
   175e8:	mov	r1, #32
   175ec:	bl	124bc <memset@plt>
   175f0:	ldr	r2, [r4, #20]
   175f4:	add	r2, r2, r9
   175f8:	str	r2, [r4, #20]
   175fc:	b	174b0 <flatcc_json_printer_uint64_field@@Base+0xb4>
   17600:	ldrb	r2, [r0, #28]
   17604:	cmp	r2, #0
   17608:	beq	17458 <flatcc_json_printer_uint64_field@@Base+0x5c>
   1760c:	b	1755c <flatcc_json_printer_uint64_field@@Base+0x160>

00017610 <flatcc_json_printer_int8_field@@Base>:
   17610:	ldr	ip, [r1, #8]
   17614:	add	r2, r2, #2
   17618:	lsl	r2, r2, #1
   1761c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   17620:	strd	r6, [sp, #8]
   17624:	str	r8, [sp, #16]
   17628:	str	lr, [sp, #20]
   1762c:	cmp	r2, ip
   17630:	ldrsb	lr, [sp, #28]
   17634:	ldr	r6, [sp, #24]
   17638:	bge	1779c <flatcc_json_printer_int8_field@@Base+0x18c>
   1763c:	ldr	ip, [r1, #4]
   17640:	ldrh	r2, [ip, r2]
   17644:	cmp	r2, #0
   17648:	beq	1779c <flatcc_json_printer_int8_field@@Base+0x18c>
   1764c:	ldr	ip, [r1]
   17650:	cmn	ip, r2
   17654:	beq	1779c <flatcc_json_printer_int8_field@@Base+0x18c>
   17658:	ldrsb	r5, [ip, r2]
   1765c:	cmp	lr, r5
   17660:	beq	17828 <flatcc_json_printer_int8_field@@Base+0x218>
   17664:	ldr	ip, [r1, #16]
   17668:	ldr	r2, [r0, #20]
   1766c:	cmp	ip, #0
   17670:	add	ip, ip, #1
   17674:	str	ip, [r1, #16]
   17678:	beq	17690 <flatcc_json_printer_int8_field@@Base+0x80>
   1767c:	add	ip, r2, #1
   17680:	mov	r1, #44	; 0x2c
   17684:	str	ip, [r0, #20]
   17688:	strb	r1, [r2]
   1768c:	ldr	r2, [r0, #20]
   17690:	mov	r7, r3
   17694:	mov	r4, r0
   17698:	ldrb	r1, [r0, #25]
   1769c:	cmp	r1, #0
   176a0:	bne	177c8 <flatcc_json_printer_int8_field@@Base+0x1b8>
   176a4:	ldr	r3, [r0, #16]
   176a8:	cmp	r3, r2
   176ac:	bhi	176bc <flatcc_json_printer_int8_field@@Base+0xac>
   176b0:	ldr	r3, [r0, #44]	; 0x2c
   176b4:	blx	r3
   176b8:	ldr	r2, [r4, #20]
   176bc:	mov	r3, #34	; 0x22
   176c0:	strb	r3, [r2]
   176c4:	ldrb	r3, [r4, #26]
   176c8:	ldr	r2, [r4, #16]
   176cc:	ldr	r0, [r4, #20]
   176d0:	cmp	r3, #0
   176d4:	addeq	r0, r0, #1
   176d8:	add	r3, r0, r6
   176dc:	cmp	r2, r3
   176e0:	str	r0, [r4, #20]
   176e4:	bls	177b0 <flatcc_json_printer_int8_field@@Base+0x1a0>
   176e8:	mov	r2, r6
   176ec:	mov	r1, r7
   176f0:	bl	12420 <memcpy@plt>
   176f4:	ldr	r3, [r4, #20]
   176f8:	add	r6, r3, r6
   176fc:	str	r6, [r4, #20]
   17700:	mov	r3, #34	; 0x22
   17704:	mov	lr, #58	; 0x3a
   17708:	lsr	r7, r5, #31
   1770c:	mov	ip, #32
   17710:	uxtb	r0, r5
   17714:	strb	r3, [r6]
   17718:	ldrb	r3, [r4, #26]
   1771c:	ldr	r1, [r4, #20]
   17720:	clz	r3, r3
   17724:	lsr	r3, r3, #5
   17728:	add	r2, r1, r3
   1772c:	add	r2, r2, #1
   17730:	str	r2, [r4, #20]
   17734:	strb	lr, [r1, r3]
   17738:	ldr	r3, [r4, #20]
   1773c:	strb	ip, [r3]
   17740:	ldrb	r3, [r4, #25]
   17744:	ldr	r2, [r4, #20]
   17748:	adds	r3, r3, #0
   1774c:	movne	r3, #1
   17750:	cmp	r5, #0
   17754:	add	r1, r2, r3
   17758:	str	r1, [r4, #20]
   1775c:	bge	17774 <flatcc_json_printer_int8_field@@Base+0x164>
   17760:	rsb	r0, r0, #0
   17764:	mov	ip, #45	; 0x2d
   17768:	add	r1, r1, #1
   1776c:	uxtb	r0, r0
   17770:	strb	ip, [r2, r3]
   17774:	bl	14fac <test_print@@Base+0x1510>
   17778:	ldr	r3, [r4, #20]
   1777c:	add	r0, r7, r0
   17780:	add	r3, r3, r0
   17784:	str	r3, [r4, #20]
   17788:	ldrd	r4, [sp]
   1778c:	ldrd	r6, [sp, #8]
   17790:	ldr	r8, [sp, #16]
   17794:	add	sp, sp, #20
   17798:	pop	{pc}		; (ldr pc, [sp], #4)
   1779c:	ldrb	r2, [r0, #29]
   177a0:	cmp	r2, #0
   177a4:	beq	17788 <flatcc_json_printer_int8_field@@Base+0x178>
   177a8:	mov	r5, lr
   177ac:	b	17664 <flatcc_json_printer_int8_field@@Base+0x54>
   177b0:	mov	r2, r6
   177b4:	mov	r1, r7
   177b8:	mov	r0, r4
   177bc:	bl	14c50 <test_print@@Base+0x11b4>
   177c0:	ldr	r6, [r4, #20]
   177c4:	b	17700 <flatcc_json_printer_int8_field@@Base+0xf0>
   177c8:	add	r1, r2, #1
   177cc:	mov	r3, #10
   177d0:	str	r1, [r0, #20]
   177d4:	strb	r3, [r2]
   177d8:	ldrb	r8, [r0, #25]
   177dc:	ldr	r2, [r4, #32]
   177e0:	ldr	r1, [r0, #16]
   177e4:	ldr	r0, [r0, #20]
   177e8:	mul	r8, r2, r8
   177ec:	add	r3, r0, r8
   177f0:	cmp	r1, r3
   177f4:	bcs	1780c <flatcc_json_printer_int8_field@@Base+0x1fc>
   177f8:	mov	r1, r8
   177fc:	mov	r0, r4
   17800:	bl	14d14 <test_print@@Base+0x1278>
   17804:	ldr	r2, [r4, #20]
   17808:	b	176bc <flatcc_json_printer_int8_field@@Base+0xac>
   1780c:	mov	r2, r8
   17810:	mov	r1, #32
   17814:	bl	124bc <memset@plt>
   17818:	ldr	r2, [r4, #20]
   1781c:	add	r2, r2, r8
   17820:	str	r2, [r4, #20]
   17824:	b	176bc <flatcc_json_printer_int8_field@@Base+0xac>
   17828:	ldrb	r2, [r0, #28]
   1782c:	cmp	r2, #0
   17830:	beq	17664 <flatcc_json_printer_int8_field@@Base+0x54>
   17834:	b	17788 <flatcc_json_printer_int8_field@@Base+0x178>

00017838 <flatcc_json_printer_int16_field@@Base>:
   17838:	ldr	ip, [r1, #8]
   1783c:	add	r2, r2, #2
   17840:	lsl	r2, r2, #1
   17844:	strd	r4, [sp, #-24]!	; 0xffffffe8
   17848:	strd	r6, [sp, #8]
   1784c:	str	r8, [sp, #16]
   17850:	str	lr, [sp, #20]
   17854:	cmp	r2, ip
   17858:	ldrsh	lr, [sp, #28]
   1785c:	ldr	r6, [sp, #24]
   17860:	bge	179c4 <flatcc_json_printer_int16_field@@Base+0x18c>
   17864:	ldr	ip, [r1, #4]
   17868:	ldrh	r2, [ip, r2]
   1786c:	cmp	r2, #0
   17870:	beq	179c4 <flatcc_json_printer_int16_field@@Base+0x18c>
   17874:	ldr	ip, [r1]
   17878:	cmn	ip, r2
   1787c:	beq	179c4 <flatcc_json_printer_int16_field@@Base+0x18c>
   17880:	ldrsh	r5, [ip, r2]
   17884:	cmp	lr, r5
   17888:	beq	17a50 <flatcc_json_printer_int16_field@@Base+0x218>
   1788c:	ldr	ip, [r1, #16]
   17890:	ldr	r2, [r0, #20]
   17894:	cmp	ip, #0
   17898:	add	ip, ip, #1
   1789c:	str	ip, [r1, #16]
   178a0:	beq	178b8 <flatcc_json_printer_int16_field@@Base+0x80>
   178a4:	add	ip, r2, #1
   178a8:	mov	r1, #44	; 0x2c
   178ac:	str	ip, [r0, #20]
   178b0:	strb	r1, [r2]
   178b4:	ldr	r2, [r0, #20]
   178b8:	mov	r7, r3
   178bc:	mov	r4, r0
   178c0:	ldrb	r1, [r0, #25]
   178c4:	cmp	r1, #0
   178c8:	bne	179f0 <flatcc_json_printer_int16_field@@Base+0x1b8>
   178cc:	ldr	r3, [r0, #16]
   178d0:	cmp	r3, r2
   178d4:	bhi	178e4 <flatcc_json_printer_int16_field@@Base+0xac>
   178d8:	ldr	r3, [r0, #44]	; 0x2c
   178dc:	blx	r3
   178e0:	ldr	r2, [r4, #20]
   178e4:	mov	r3, #34	; 0x22
   178e8:	strb	r3, [r2]
   178ec:	ldrb	r3, [r4, #26]
   178f0:	ldr	r2, [r4, #16]
   178f4:	ldr	r0, [r4, #20]
   178f8:	cmp	r3, #0
   178fc:	addeq	r0, r0, #1
   17900:	add	r3, r0, r6
   17904:	cmp	r2, r3
   17908:	str	r0, [r4, #20]
   1790c:	bls	179d8 <flatcc_json_printer_int16_field@@Base+0x1a0>
   17910:	mov	r2, r6
   17914:	mov	r1, r7
   17918:	bl	12420 <memcpy@plt>
   1791c:	ldr	r3, [r4, #20]
   17920:	add	r6, r3, r6
   17924:	str	r6, [r4, #20]
   17928:	mov	r3, #34	; 0x22
   1792c:	mov	lr, #58	; 0x3a
   17930:	lsr	r7, r5, #31
   17934:	mov	ip, #32
   17938:	uxth	r0, r5
   1793c:	strb	r3, [r6]
   17940:	ldrb	r3, [r4, #26]
   17944:	ldr	r1, [r4, #20]
   17948:	clz	r3, r3
   1794c:	lsr	r3, r3, #5
   17950:	add	r2, r1, r3
   17954:	add	r2, r2, #1
   17958:	str	r2, [r4, #20]
   1795c:	strb	lr, [r1, r3]
   17960:	ldr	r3, [r4, #20]
   17964:	strb	ip, [r3]
   17968:	ldrb	r3, [r4, #25]
   1796c:	ldr	r2, [r4, #20]
   17970:	adds	r3, r3, #0
   17974:	movne	r3, #1
   17978:	cmp	r5, #0
   1797c:	add	r1, r2, r3
   17980:	str	r1, [r4, #20]
   17984:	bge	1799c <flatcc_json_printer_int16_field@@Base+0x164>
   17988:	rsb	r0, r0, #0
   1798c:	mov	ip, #45	; 0x2d
   17990:	add	r1, r1, #1
   17994:	uxth	r0, r0
   17998:	strb	ip, [r2, r3]
   1799c:	bl	13db8 <test_print@@Base+0x31c>
   179a0:	ldr	r3, [r4, #20]
   179a4:	add	r0, r7, r0
   179a8:	add	r3, r3, r0
   179ac:	str	r3, [r4, #20]
   179b0:	ldrd	r4, [sp]
   179b4:	ldrd	r6, [sp, #8]
   179b8:	ldr	r8, [sp, #16]
   179bc:	add	sp, sp, #20
   179c0:	pop	{pc}		; (ldr pc, [sp], #4)
   179c4:	ldrb	r2, [r0, #29]
   179c8:	cmp	r2, #0
   179cc:	beq	179b0 <flatcc_json_printer_int16_field@@Base+0x178>
   179d0:	mov	r5, lr
   179d4:	b	1788c <flatcc_json_printer_int16_field@@Base+0x54>
   179d8:	mov	r2, r6
   179dc:	mov	r1, r7
   179e0:	mov	r0, r4
   179e4:	bl	14c50 <test_print@@Base+0x11b4>
   179e8:	ldr	r6, [r4, #20]
   179ec:	b	17928 <flatcc_json_printer_int16_field@@Base+0xf0>
   179f0:	add	r1, r2, #1
   179f4:	mov	r3, #10
   179f8:	str	r1, [r0, #20]
   179fc:	strb	r3, [r2]
   17a00:	ldrb	r8, [r0, #25]
   17a04:	ldr	r2, [r4, #32]
   17a08:	ldr	r1, [r0, #16]
   17a0c:	ldr	r0, [r0, #20]
   17a10:	mul	r8, r2, r8
   17a14:	add	r3, r0, r8
   17a18:	cmp	r1, r3
   17a1c:	bcs	17a34 <flatcc_json_printer_int16_field@@Base+0x1fc>
   17a20:	mov	r1, r8
   17a24:	mov	r0, r4
   17a28:	bl	14d14 <test_print@@Base+0x1278>
   17a2c:	ldr	r2, [r4, #20]
   17a30:	b	178e4 <flatcc_json_printer_int16_field@@Base+0xac>
   17a34:	mov	r2, r8
   17a38:	mov	r1, #32
   17a3c:	bl	124bc <memset@plt>
   17a40:	ldr	r2, [r4, #20]
   17a44:	add	r2, r2, r8
   17a48:	str	r2, [r4, #20]
   17a4c:	b	178e4 <flatcc_json_printer_int16_field@@Base+0xac>
   17a50:	ldrb	r2, [r0, #28]
   17a54:	cmp	r2, #0
   17a58:	beq	1788c <flatcc_json_printer_int16_field@@Base+0x54>
   17a5c:	b	179b0 <flatcc_json_printer_int16_field@@Base+0x178>

00017a60 <flatcc_json_printer_int32_field@@Base>:
   17a60:	ldr	ip, [r1, #8]
   17a64:	add	r2, r2, #2
   17a68:	lsl	r2, r2, #1
   17a6c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   17a70:	strd	r6, [sp, #8]
   17a74:	str	r8, [sp, #16]
   17a78:	str	lr, [sp, #20]
   17a7c:	cmp	r2, ip
   17a80:	ldr	r6, [sp, #24]
   17a84:	bge	17be8 <flatcc_json_printer_int32_field@@Base+0x188>
   17a88:	ldr	ip, [r1, #4]
   17a8c:	ldrh	r2, [ip, r2]
   17a90:	cmp	r2, #0
   17a94:	beq	17be8 <flatcc_json_printer_int32_field@@Base+0x188>
   17a98:	ldr	ip, [r1]
   17a9c:	cmn	ip, r2
   17aa0:	beq	17be8 <flatcc_json_printer_int32_field@@Base+0x188>
   17aa4:	ldr	r5, [ip, r2]
   17aa8:	ldr	r2, [sp, #28]
   17aac:	cmp	r2, r5
   17ab0:	beq	17c74 <flatcc_json_printer_int32_field@@Base+0x214>
   17ab4:	ldr	ip, [r1, #16]
   17ab8:	ldr	r2, [r0, #20]
   17abc:	cmp	ip, #0
   17ac0:	add	ip, ip, #1
   17ac4:	str	ip, [r1, #16]
   17ac8:	beq	17ae0 <flatcc_json_printer_int32_field@@Base+0x80>
   17acc:	add	ip, r2, #1
   17ad0:	mov	r1, #44	; 0x2c
   17ad4:	str	ip, [r0, #20]
   17ad8:	strb	r1, [r2]
   17adc:	ldr	r2, [r0, #20]
   17ae0:	mov	r7, r3
   17ae4:	mov	r4, r0
   17ae8:	ldrb	r1, [r0, #25]
   17aec:	cmp	r1, #0
   17af0:	bne	17c14 <flatcc_json_printer_int32_field@@Base+0x1b4>
   17af4:	ldr	r3, [r0, #16]
   17af8:	cmp	r3, r2
   17afc:	bhi	17b0c <flatcc_json_printer_int32_field@@Base+0xac>
   17b00:	ldr	r3, [r0, #44]	; 0x2c
   17b04:	blx	r3
   17b08:	ldr	r2, [r4, #20]
   17b0c:	mov	r3, #34	; 0x22
   17b10:	strb	r3, [r2]
   17b14:	ldrb	r3, [r4, #26]
   17b18:	ldr	r2, [r4, #16]
   17b1c:	ldr	r0, [r4, #20]
   17b20:	cmp	r3, #0
   17b24:	addeq	r0, r0, #1
   17b28:	add	r3, r0, r6
   17b2c:	cmp	r2, r3
   17b30:	str	r0, [r4, #20]
   17b34:	bls	17bfc <flatcc_json_printer_int32_field@@Base+0x19c>
   17b38:	mov	r2, r6
   17b3c:	mov	r1, r7
   17b40:	bl	12420 <memcpy@plt>
   17b44:	ldr	r3, [r4, #20]
   17b48:	add	r6, r3, r6
   17b4c:	str	r6, [r4, #20]
   17b50:	mov	r3, #34	; 0x22
   17b54:	mov	ip, #58	; 0x3a
   17b58:	lsr	r7, r5, #31
   17b5c:	mov	r0, #32
   17b60:	strb	r3, [r6]
   17b64:	ldrb	r3, [r4, #26]
   17b68:	ldr	r1, [r4, #20]
   17b6c:	clz	r3, r3
   17b70:	lsr	r3, r3, #5
   17b74:	add	r2, r1, r3
   17b78:	add	r2, r2, #1
   17b7c:	str	r2, [r4, #20]
   17b80:	strb	ip, [r1, r3]
   17b84:	ldr	r3, [r4, #20]
   17b88:	strb	r0, [r3]
   17b8c:	ldrb	r3, [r4, #25]
   17b90:	ldr	r2, [r4, #20]
   17b94:	adds	r3, r3, #0
   17b98:	movne	r3, #1
   17b9c:	cmp	r5, #0
   17ba0:	add	r1, r2, r3
   17ba4:	str	r1, [r4, #20]
   17ba8:	bge	17bbc <flatcc_json_printer_int32_field@@Base+0x15c>
   17bac:	mov	r0, #45	; 0x2d
   17bb0:	rsb	r5, r5, #0
   17bb4:	add	r1, r1, #1
   17bb8:	strb	r0, [r2, r3]
   17bbc:	mov	r0, r5
   17bc0:	bl	13f20 <test_print@@Base+0x484>
   17bc4:	ldr	r3, [r4, #20]
   17bc8:	add	r0, r7, r0
   17bcc:	add	r3, r3, r0
   17bd0:	str	r3, [r4, #20]
   17bd4:	ldrd	r4, [sp]
   17bd8:	ldrd	r6, [sp, #8]
   17bdc:	ldr	r8, [sp, #16]
   17be0:	add	sp, sp, #20
   17be4:	pop	{pc}		; (ldr pc, [sp], #4)
   17be8:	ldrb	r2, [r0, #29]
   17bec:	cmp	r2, #0
   17bf0:	beq	17bd4 <flatcc_json_printer_int32_field@@Base+0x174>
   17bf4:	ldr	r5, [sp, #28]
   17bf8:	b	17ab4 <flatcc_json_printer_int32_field@@Base+0x54>
   17bfc:	mov	r2, r6
   17c00:	mov	r1, r7
   17c04:	mov	r0, r4
   17c08:	bl	14c50 <test_print@@Base+0x11b4>
   17c0c:	ldr	r6, [r4, #20]
   17c10:	b	17b50 <flatcc_json_printer_int32_field@@Base+0xf0>
   17c14:	add	r1, r2, #1
   17c18:	mov	r3, #10
   17c1c:	str	r1, [r0, #20]
   17c20:	strb	r3, [r2]
   17c24:	ldrb	r8, [r0, #25]
   17c28:	ldr	r2, [r4, #32]
   17c2c:	ldr	r1, [r0, #16]
   17c30:	ldr	r0, [r0, #20]
   17c34:	mul	r8, r2, r8
   17c38:	add	r3, r0, r8
   17c3c:	cmp	r1, r3
   17c40:	bcs	17c58 <flatcc_json_printer_int32_field@@Base+0x1f8>
   17c44:	mov	r1, r8
   17c48:	mov	r0, r4
   17c4c:	bl	14d14 <test_print@@Base+0x1278>
   17c50:	ldr	r2, [r4, #20]
   17c54:	b	17b0c <flatcc_json_printer_int32_field@@Base+0xac>
   17c58:	mov	r2, r8
   17c5c:	mov	r1, #32
   17c60:	bl	124bc <memset@plt>
   17c64:	ldr	r2, [r4, #20]
   17c68:	add	r2, r2, r8
   17c6c:	str	r2, [r4, #20]
   17c70:	b	17b0c <flatcc_json_printer_int32_field@@Base+0xac>
   17c74:	ldrb	r2, [r0, #28]
   17c78:	cmp	r2, #0
   17c7c:	beq	17ab4 <flatcc_json_printer_int32_field@@Base+0x54>
   17c80:	b	17bd4 <flatcc_json_printer_int32_field@@Base+0x174>

00017c84 <flatcc_json_printer_int64_field@@Base>:
   17c84:	ldr	ip, [r1, #8]
   17c88:	add	r2, r2, #2
   17c8c:	lsl	r2, r2, #1
   17c90:	strd	r4, [sp, #-32]!	; 0xffffffe0
   17c94:	strd	r6, [sp, #8]
   17c98:	strd	r8, [sp, #16]
   17c9c:	str	sl, [sp, #24]
   17ca0:	cmp	r2, ip
   17ca4:	str	lr, [sp, #28]
   17ca8:	ldr	r5, [sp, #32]
   17cac:	bge	17e24 <flatcc_json_printer_int64_field@@Base+0x1a0>
   17cb0:	ldr	ip, [r1, #4]
   17cb4:	ldrh	r2, [ip, r2]
   17cb8:	cmp	r2, #0
   17cbc:	beq	17e24 <flatcc_json_printer_int64_field@@Base+0x1a0>
   17cc0:	ldr	ip, [r1]
   17cc4:	cmn	ip, r2
   17cc8:	beq	17e24 <flatcc_json_printer_int64_field@@Base+0x1a0>
   17ccc:	ldrd	r6, [ip, r2]
   17cd0:	ldrd	r8, [sp, #40]	; 0x28
   17cd4:	cmp	r9, r7
   17cd8:	cmpeq	r8, r6
   17cdc:	beq	17eb0 <flatcc_json_printer_int64_field@@Base+0x22c>
   17ce0:	ldr	ip, [r1, #16]
   17ce4:	ldr	r2, [r0, #20]
   17ce8:	cmp	ip, #0
   17cec:	add	ip, ip, #1
   17cf0:	str	ip, [r1, #16]
   17cf4:	beq	17d0c <flatcc_json_printer_int64_field@@Base+0x88>
   17cf8:	add	ip, r2, #1
   17cfc:	mov	r1, #44	; 0x2c
   17d00:	str	ip, [r0, #20]
   17d04:	strb	r1, [r2]
   17d08:	ldr	r2, [r0, #20]
   17d0c:	mov	r8, r3
   17d10:	mov	r4, r0
   17d14:	ldrb	r1, [r0, #25]
   17d18:	cmp	r1, #0
   17d1c:	bne	17e50 <flatcc_json_printer_int64_field@@Base+0x1cc>
   17d20:	ldr	r3, [r0, #16]
   17d24:	cmp	r3, r2
   17d28:	bhi	17d38 <flatcc_json_printer_int64_field@@Base+0xb4>
   17d2c:	ldr	r3, [r0, #44]	; 0x2c
   17d30:	blx	r3
   17d34:	ldr	r2, [r4, #20]
   17d38:	mov	r3, #34	; 0x22
   17d3c:	strb	r3, [r2]
   17d40:	ldrb	r3, [r4, #26]
   17d44:	ldr	r2, [r4, #16]
   17d48:	ldr	r0, [r4, #20]
   17d4c:	cmp	r3, #0
   17d50:	addeq	r0, r0, #1
   17d54:	add	r3, r0, r5
   17d58:	cmp	r2, r3
   17d5c:	str	r0, [r4, #20]
   17d60:	bls	17e38 <flatcc_json_printer_int64_field@@Base+0x1b4>
   17d64:	mov	r2, r5
   17d68:	mov	r1, r8
   17d6c:	bl	12420 <memcpy@plt>
   17d70:	ldr	r3, [r4, #20]
   17d74:	add	r5, r3, r5
   17d78:	str	r5, [r4, #20]
   17d7c:	mov	r3, #34	; 0x22
   17d80:	mov	ip, #58	; 0x3a
   17d84:	lsr	r8, r7, #31
   17d88:	mov	r0, #32
   17d8c:	strb	r3, [r5]
   17d90:	ldrb	r3, [r4, #26]
   17d94:	ldr	r1, [r4, #20]
   17d98:	clz	r3, r3
   17d9c:	lsr	r3, r3, #5
   17da0:	add	r2, r1, r3
   17da4:	add	r2, r2, #1
   17da8:	str	r2, [r4, #20]
   17dac:	strb	ip, [r1, r3]
   17db0:	ldr	r3, [r4, #20]
   17db4:	strb	r0, [r3]
   17db8:	ldrb	r3, [r4, #25]
   17dbc:	ldr	r1, [r4, #20]
   17dc0:	adds	r3, r3, #0
   17dc4:	movne	r3, #1
   17dc8:	cmp	r6, #0
   17dcc:	sbcs	r2, r7, #0
   17dd0:	add	r2, r1, r3
   17dd4:	str	r2, [r4, #20]
   17dd8:	bge	17df0 <flatcc_json_printer_int64_field@@Base+0x16c>
   17ddc:	rsbs	r6, r6, #0
   17de0:	mov	r0, #45	; 0x2d
   17de4:	rsc	r7, r7, #0
   17de8:	add	r2, r2, #1
   17dec:	strb	r0, [r1, r3]
   17df0:	mov	r0, r6
   17df4:	mov	r1, r7
   17df8:	bl	1424c <test_print@@Base+0x7b0>
   17dfc:	ldr	r3, [r4, #20]
   17e00:	add	r0, r8, r0
   17e04:	add	r3, r3, r0
   17e08:	str	r3, [r4, #20]
   17e0c:	ldrd	r4, [sp]
   17e10:	ldrd	r6, [sp, #8]
   17e14:	ldrd	r8, [sp, #16]
   17e18:	ldr	sl, [sp, #24]
   17e1c:	add	sp, sp, #28
   17e20:	pop	{pc}		; (ldr pc, [sp], #4)
   17e24:	ldrb	r2, [r0, #29]
   17e28:	cmp	r2, #0
   17e2c:	beq	17e0c <flatcc_json_printer_int64_field@@Base+0x188>
   17e30:	ldrd	r6, [sp, #40]	; 0x28
   17e34:	b	17ce0 <flatcc_json_printer_int64_field@@Base+0x5c>
   17e38:	mov	r2, r5
   17e3c:	mov	r1, r8
   17e40:	mov	r0, r4
   17e44:	bl	14c50 <test_print@@Base+0x11b4>
   17e48:	ldr	r5, [r4, #20]
   17e4c:	b	17d7c <flatcc_json_printer_int64_field@@Base+0xf8>
   17e50:	add	r1, r2, #1
   17e54:	mov	r3, #10
   17e58:	str	r1, [r0, #20]
   17e5c:	strb	r3, [r2]
   17e60:	ldrb	r3, [r0, #25]
   17e64:	ldr	r2, [r4, #32]
   17e68:	ldr	r1, [r0, #16]
   17e6c:	ldr	r0, [r0, #20]
   17e70:	mul	r9, r2, r3
   17e74:	add	r3, r0, r9
   17e78:	cmp	r1, r3
   17e7c:	bcs	17e94 <flatcc_json_printer_int64_field@@Base+0x210>
   17e80:	mov	r1, r9
   17e84:	mov	r0, r4
   17e88:	bl	14d14 <test_print@@Base+0x1278>
   17e8c:	ldr	r2, [r4, #20]
   17e90:	b	17d38 <flatcc_json_printer_int64_field@@Base+0xb4>
   17e94:	mov	r2, r9
   17e98:	mov	r1, #32
   17e9c:	bl	124bc <memset@plt>
   17ea0:	ldr	r2, [r4, #20]
   17ea4:	add	r2, r2, r9
   17ea8:	str	r2, [r4, #20]
   17eac:	b	17d38 <flatcc_json_printer_int64_field@@Base+0xb4>
   17eb0:	ldrb	r2, [r0, #28]
   17eb4:	cmp	r2, #0
   17eb8:	beq	17ce0 <flatcc_json_printer_int64_field@@Base+0x5c>
   17ebc:	b	17e0c <flatcc_json_printer_int64_field@@Base+0x188>

00017ec0 <flatcc_json_printer_bool_field@@Base>:
   17ec0:	ldr	ip, [r1, #8]
   17ec4:	add	r2, r2, #2
   17ec8:	lsl	r2, r2, #1
   17ecc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   17ed0:	strd	r6, [sp, #8]
   17ed4:	str	r8, [sp, #16]
   17ed8:	str	lr, [sp, #20]
   17edc:	cmp	r2, ip
   17ee0:	ldrb	lr, [sp, #28]
   17ee4:	ldr	r5, [sp, #24]
   17ee8:	bge	18028 <flatcc_json_printer_bool_field@@Base+0x168>
   17eec:	ldr	ip, [r1, #4]
   17ef0:	ldrh	r2, [ip, r2]
   17ef4:	cmp	r2, #0
   17ef8:	beq	18028 <flatcc_json_printer_bool_field@@Base+0x168>
   17efc:	ldr	ip, [r1]
   17f00:	cmn	ip, r2
   17f04:	beq	18028 <flatcc_json_printer_bool_field@@Base+0x168>
   17f08:	ldrb	r6, [ip, r2]
   17f0c:	cmp	lr, r6
   17f10:	beq	180b4 <flatcc_json_printer_bool_field@@Base+0x1f4>
   17f14:	ldr	ip, [r1, #16]
   17f18:	ldr	r2, [r0, #20]
   17f1c:	cmp	ip, #0
   17f20:	add	ip, ip, #1
   17f24:	str	ip, [r1, #16]
   17f28:	beq	17f40 <flatcc_json_printer_bool_field@@Base+0x80>
   17f2c:	add	ip, r2, #1
   17f30:	mov	r1, #44	; 0x2c
   17f34:	str	ip, [r0, #20]
   17f38:	strb	r1, [r2]
   17f3c:	ldr	r2, [r0, #20]
   17f40:	mov	r7, r3
   17f44:	mov	r4, r0
   17f48:	ldrb	r1, [r0, #25]
   17f4c:	cmp	r1, #0
   17f50:	bne	18054 <flatcc_json_printer_bool_field@@Base+0x194>
   17f54:	ldr	r3, [r0, #16]
   17f58:	cmp	r3, r2
   17f5c:	bhi	17f6c <flatcc_json_printer_bool_field@@Base+0xac>
   17f60:	ldr	r3, [r0, #44]	; 0x2c
   17f64:	blx	r3
   17f68:	ldr	r2, [r4, #20]
   17f6c:	mov	r3, #34	; 0x22
   17f70:	strb	r3, [r2]
   17f74:	ldrb	r3, [r4, #26]
   17f78:	ldr	r2, [r4, #16]
   17f7c:	ldr	r0, [r4, #20]
   17f80:	cmp	r3, #0
   17f84:	addeq	r0, r0, #1
   17f88:	add	r3, r0, r5
   17f8c:	cmp	r2, r3
   17f90:	str	r0, [r4, #20]
   17f94:	bls	1803c <flatcc_json_printer_bool_field@@Base+0x17c>
   17f98:	mov	r2, r5
   17f9c:	mov	r1, r7
   17fa0:	bl	12420 <memcpy@plt>
   17fa4:	ldr	r3, [r4, #20]
   17fa8:	add	r5, r3, r5
   17fac:	str	r5, [r4, #20]
   17fb0:	mov	r3, #34	; 0x22
   17fb4:	mov	lr, #58	; 0x3a
   17fb8:	mov	ip, #32
   17fbc:	mov	r0, r6
   17fc0:	strb	r3, [r5]
   17fc4:	ldrb	r3, [r4, #26]
   17fc8:	ldr	r1, [r4, #20]
   17fcc:	clz	r3, r3
   17fd0:	lsr	r3, r3, #5
   17fd4:	add	r2, r1, r3
   17fd8:	add	r2, r2, #1
   17fdc:	str	r2, [r4, #20]
   17fe0:	strb	lr, [r1, r3]
   17fe4:	ldr	r3, [r4, #20]
   17fe8:	strb	ip, [r3]
   17fec:	ldrb	r2, [r4, #25]
   17ff0:	ldr	r3, [r4, #20]
   17ff4:	cmp	r2, #0
   17ff8:	addne	r3, r3, #1
   17ffc:	mov	r1, r3
   18000:	str	r3, [r4, #20]
   18004:	bl	150e0 <test_print@@Base+0x1644>
   18008:	ldr	r3, [r4, #20]
   1800c:	add	r0, r3, r0
   18010:	str	r0, [r4, #20]
   18014:	ldrd	r4, [sp]
   18018:	ldrd	r6, [sp, #8]
   1801c:	ldr	r8, [sp, #16]
   18020:	add	sp, sp, #20
   18024:	pop	{pc}		; (ldr pc, [sp], #4)
   18028:	ldrb	r2, [r0, #29]
   1802c:	cmp	r2, #0
   18030:	beq	18014 <flatcc_json_printer_bool_field@@Base+0x154>
   18034:	mov	r6, lr
   18038:	b	17f14 <flatcc_json_printer_bool_field@@Base+0x54>
   1803c:	mov	r2, r5
   18040:	mov	r1, r7
   18044:	mov	r0, r4
   18048:	bl	14c50 <test_print@@Base+0x11b4>
   1804c:	ldr	r5, [r4, #20]
   18050:	b	17fb0 <flatcc_json_printer_bool_field@@Base+0xf0>
   18054:	add	r1, r2, #1
   18058:	mov	r3, #10
   1805c:	str	r1, [r0, #20]
   18060:	strb	r3, [r2]
   18064:	ldrb	r8, [r0, #25]
   18068:	ldr	r2, [r4, #32]
   1806c:	ldr	r1, [r0, #16]
   18070:	ldr	r0, [r0, #20]
   18074:	mul	r8, r2, r8
   18078:	add	r3, r0, r8
   1807c:	cmp	r1, r3
   18080:	bcs	18098 <flatcc_json_printer_bool_field@@Base+0x1d8>
   18084:	mov	r1, r8
   18088:	mov	r0, r4
   1808c:	bl	14d14 <test_print@@Base+0x1278>
   18090:	ldr	r2, [r4, #20]
   18094:	b	17f6c <flatcc_json_printer_bool_field@@Base+0xac>
   18098:	mov	r2, r8
   1809c:	mov	r1, #32
   180a0:	bl	124bc <memset@plt>
   180a4:	ldr	r2, [r4, #20]
   180a8:	add	r2, r2, r8
   180ac:	str	r2, [r4, #20]
   180b0:	b	17f6c <flatcc_json_printer_bool_field@@Base+0xac>
   180b4:	ldrb	r2, [r0, #28]
   180b8:	cmp	r2, #0
   180bc:	beq	17f14 <flatcc_json_printer_bool_field@@Base+0x54>
   180c0:	b	18014 <flatcc_json_printer_bool_field@@Base+0x154>

000180c4 <flatcc_json_printer_float_field@@Base>:
   180c4:	ldr	ip, [r1, #8]
   180c8:	add	r2, r2, #2
   180cc:	lsl	r2, r2, #1
   180d0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   180d4:	strd	r6, [sp, #8]
   180d8:	str	r8, [sp, #16]
   180dc:	str	lr, [sp, #20]
   180e0:	cmp	r2, ip
   180e4:	vpush	{d8}
   180e8:	ldr	r5, [sp, #32]
   180ec:	bge	18140 <flatcc_json_printer_float_field@@Base+0x7c>
   180f0:	ldr	ip, [r1, #4]
   180f4:	ldrh	ip, [ip, r2]
   180f8:	cmp	ip, #0
   180fc:	beq	18140 <flatcc_json_printer_float_field@@Base+0x7c>
   18100:	ldr	r2, [r1]
   18104:	adds	r2, r2, ip
   18108:	beq	18140 <flatcc_json_printer_float_field@@Base+0x7c>
   1810c:	vldr	s16, [r2]
   18110:	vcmp.f32	s0, s16
   18114:	vmrs	APSR_nzcv, fpscr
   18118:	bne	18150 <flatcc_json_printer_float_field@@Base+0x8c>
   1811c:	ldrb	r2, [r0, #28]
   18120:	cmp	r2, #0
   18124:	beq	18150 <flatcc_json_printer_float_field@@Base+0x8c>
   18128:	vpop	{d8}
   1812c:	ldrd	r4, [sp]
   18130:	ldrd	r6, [sp, #8]
   18134:	ldr	r8, [sp, #16]
   18138:	add	sp, sp, #20
   1813c:	pop	{pc}		; (ldr pc, [sp], #4)
   18140:	ldrb	r2, [r0, #29]
   18144:	cmp	r2, #0
   18148:	beq	18128 <flatcc_json_printer_float_field@@Base+0x64>
   1814c:	vmov.f32	s16, s0
   18150:	ldr	ip, [r1, #16]
   18154:	ldr	r2, [r0, #20]
   18158:	cmp	ip, #0
   1815c:	add	ip, ip, #1
   18160:	str	ip, [r1, #16]
   18164:	beq	1817c <flatcc_json_printer_float_field@@Base+0xb8>
   18168:	add	ip, r2, #1
   1816c:	mov	r1, #44	; 0x2c
   18170:	str	ip, [r0, #20]
   18174:	strb	r1, [r2]
   18178:	ldr	r2, [r0, #20]
   1817c:	mov	r6, r3
   18180:	mov	r4, r0
   18184:	ldrb	r1, [r0, #25]
   18188:	cmp	r1, #0
   1818c:	bne	1826c <flatcc_json_printer_float_field@@Base+0x1a8>
   18190:	ldr	r3, [r0, #16]
   18194:	cmp	r3, r2
   18198:	bhi	181a8 <flatcc_json_printer_float_field@@Base+0xe4>
   1819c:	ldr	r3, [r0, #44]	; 0x2c
   181a0:	blx	r3
   181a4:	ldr	r2, [r4, #20]
   181a8:	mov	r3, #34	; 0x22
   181ac:	strb	r3, [r2]
   181b0:	ldrb	r3, [r4, #26]
   181b4:	ldr	r2, [r4, #16]
   181b8:	ldr	r0, [r4, #20]
   181bc:	cmp	r3, #0
   181c0:	addeq	r0, r0, #1
   181c4:	add	r3, r0, r5
   181c8:	cmp	r2, r3
   181cc:	str	r0, [r4, #20]
   181d0:	bls	18254 <flatcc_json_printer_float_field@@Base+0x190>
   181d4:	mov	r2, r5
   181d8:	mov	r1, r6
   181dc:	bl	12420 <memcpy@plt>
   181e0:	ldr	r3, [r4, #20]
   181e4:	add	r5, r3, r5
   181e8:	str	r5, [r4, #20]
   181ec:	mov	r3, #34	; 0x22
   181f0:	mov	ip, #58	; 0x3a
   181f4:	vcvt.f64.f32	d0, s16
   181f8:	mov	r0, #32
   181fc:	strb	r3, [r5]
   18200:	ldrb	r3, [r4, #26]
   18204:	ldr	r1, [r4, #20]
   18208:	clz	r3, r3
   1820c:	lsr	r3, r3, #5
   18210:	add	r2, r1, r3
   18214:	add	r2, r2, #1
   18218:	str	r2, [r4, #20]
   1821c:	strb	ip, [r1, r3]
   18220:	ldr	r3, [r4, #20]
   18224:	strb	r0, [r3]
   18228:	ldrb	r2, [r4, #25]
   1822c:	ldr	r3, [r4, #20]
   18230:	cmp	r2, #0
   18234:	addne	r3, r3, #1
   18238:	mov	r0, r3
   1823c:	str	r3, [r4, #20]
   18240:	bl	153a0 <test_print@@Base+0x1904>
   18244:	ldr	r3, [r4, #20]
   18248:	add	r0, r3, r0
   1824c:	str	r0, [r4, #20]
   18250:	b	18128 <flatcc_json_printer_float_field@@Base+0x64>
   18254:	mov	r2, r5
   18258:	mov	r1, r6
   1825c:	mov	r0, r4
   18260:	bl	14c50 <test_print@@Base+0x11b4>
   18264:	ldr	r5, [r4, #20]
   18268:	b	181ec <flatcc_json_printer_float_field@@Base+0x128>
   1826c:	add	r1, r2, #1
   18270:	mov	r3, #10
   18274:	str	r1, [r0, #20]
   18278:	strb	r3, [r2]
   1827c:	ldrb	r7, [r0, #25]
   18280:	ldr	r2, [r4, #32]
   18284:	ldr	r1, [r0, #16]
   18288:	ldr	r0, [r0, #20]
   1828c:	mul	r7, r2, r7
   18290:	add	r3, r0, r7
   18294:	cmp	r1, r3
   18298:	bcs	182b0 <flatcc_json_printer_float_field@@Base+0x1ec>
   1829c:	mov	r1, r7
   182a0:	mov	r0, r4
   182a4:	bl	14d14 <test_print@@Base+0x1278>
   182a8:	ldr	r2, [r4, #20]
   182ac:	b	181a8 <flatcc_json_printer_float_field@@Base+0xe4>
   182b0:	mov	r2, r7
   182b4:	mov	r1, #32
   182b8:	bl	124bc <memset@plt>
   182bc:	ldr	r2, [r4, #20]
   182c0:	add	r2, r2, r7
   182c4:	str	r2, [r4, #20]
   182c8:	b	181a8 <flatcc_json_printer_float_field@@Base+0xe4>

000182cc <flatcc_json_printer_double_field@@Base>:
   182cc:	ldr	ip, [r1, #8]
   182d0:	add	r2, r2, #2
   182d4:	lsl	r2, r2, #1
   182d8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   182dc:	strd	r6, [sp, #8]
   182e0:	str	r8, [sp, #16]
   182e4:	str	lr, [sp, #20]
   182e8:	cmp	r2, ip
   182ec:	vpush	{d8}
   182f0:	ldr	r5, [sp, #32]
   182f4:	bge	18348 <flatcc_json_printer_double_field@@Base+0x7c>
   182f8:	ldr	ip, [r1, #4]
   182fc:	ldrh	ip, [ip, r2]
   18300:	cmp	ip, #0
   18304:	beq	18348 <flatcc_json_printer_double_field@@Base+0x7c>
   18308:	ldr	r2, [r1]
   1830c:	adds	r2, r2, ip
   18310:	beq	18348 <flatcc_json_printer_double_field@@Base+0x7c>
   18314:	vldr	d8, [r2]
   18318:	vcmp.f64	d0, d8
   1831c:	vmrs	APSR_nzcv, fpscr
   18320:	bne	18358 <flatcc_json_printer_double_field@@Base+0x8c>
   18324:	ldrb	r2, [r0, #28]
   18328:	cmp	r2, #0
   1832c:	beq	18358 <flatcc_json_printer_double_field@@Base+0x8c>
   18330:	vpop	{d8}
   18334:	ldrd	r4, [sp]
   18338:	ldrd	r6, [sp, #8]
   1833c:	ldr	r8, [sp, #16]
   18340:	add	sp, sp, #20
   18344:	pop	{pc}		; (ldr pc, [sp], #4)
   18348:	ldrb	r2, [r0, #29]
   1834c:	cmp	r2, #0
   18350:	beq	18330 <flatcc_json_printer_double_field@@Base+0x64>
   18354:	vmov.f64	d8, d0
   18358:	ldr	ip, [r1, #16]
   1835c:	ldr	r2, [r0, #20]
   18360:	cmp	ip, #0
   18364:	add	ip, ip, #1
   18368:	str	ip, [r1, #16]
   1836c:	beq	18384 <flatcc_json_printer_double_field@@Base+0xb8>
   18370:	add	ip, r2, #1
   18374:	mov	r1, #44	; 0x2c
   18378:	str	ip, [r0, #20]
   1837c:	strb	r1, [r2]
   18380:	ldr	r2, [r0, #20]
   18384:	mov	r6, r3
   18388:	mov	r4, r0
   1838c:	ldrb	r1, [r0, #25]
   18390:	cmp	r1, #0
   18394:	bne	18474 <flatcc_json_printer_double_field@@Base+0x1a8>
   18398:	ldr	r3, [r0, #16]
   1839c:	cmp	r3, r2
   183a0:	bhi	183b0 <flatcc_json_printer_double_field@@Base+0xe4>
   183a4:	ldr	r3, [r0, #44]	; 0x2c
   183a8:	blx	r3
   183ac:	ldr	r2, [r4, #20]
   183b0:	mov	r3, #34	; 0x22
   183b4:	strb	r3, [r2]
   183b8:	ldrb	r3, [r4, #26]
   183bc:	ldr	r2, [r4, #16]
   183c0:	ldr	r0, [r4, #20]
   183c4:	cmp	r3, #0
   183c8:	addeq	r0, r0, #1
   183cc:	add	r3, r0, r5
   183d0:	cmp	r2, r3
   183d4:	str	r0, [r4, #20]
   183d8:	bls	1845c <flatcc_json_printer_double_field@@Base+0x190>
   183dc:	mov	r2, r5
   183e0:	mov	r1, r6
   183e4:	bl	12420 <memcpy@plt>
   183e8:	ldr	r3, [r4, #20]
   183ec:	add	r5, r3, r5
   183f0:	str	r5, [r4, #20]
   183f4:	mov	r3, #34	; 0x22
   183f8:	mov	ip, #58	; 0x3a
   183fc:	vmov.f64	d0, d8
   18400:	mov	r0, #32
   18404:	strb	r3, [r5]
   18408:	ldrb	r3, [r4, #26]
   1840c:	ldr	r1, [r4, #20]
   18410:	clz	r3, r3
   18414:	lsr	r3, r3, #5
   18418:	add	r2, r1, r3
   1841c:	add	r2, r2, #1
   18420:	str	r2, [r4, #20]
   18424:	strb	ip, [r1, r3]
   18428:	ldr	r3, [r4, #20]
   1842c:	strb	r0, [r3]
   18430:	ldrb	r2, [r4, #25]
   18434:	ldr	r3, [r4, #20]
   18438:	cmp	r2, #0
   1843c:	addne	r3, r3, #1
   18440:	mov	r0, r3
   18444:	str	r3, [r4, #20]
   18448:	bl	153a0 <test_print@@Base+0x1904>
   1844c:	ldr	r3, [r4, #20]
   18450:	add	r0, r3, r0
   18454:	str	r0, [r4, #20]
   18458:	b	18330 <flatcc_json_printer_double_field@@Base+0x64>
   1845c:	mov	r2, r5
   18460:	mov	r1, r6
   18464:	mov	r0, r4
   18468:	bl	14c50 <test_print@@Base+0x11b4>
   1846c:	ldr	r5, [r4, #20]
   18470:	b	183f4 <flatcc_json_printer_double_field@@Base+0x128>
   18474:	add	r1, r2, #1
   18478:	mov	r3, #10
   1847c:	str	r1, [r0, #20]
   18480:	strb	r3, [r2]
   18484:	ldrb	r7, [r0, #25]
   18488:	ldr	r2, [r4, #32]
   1848c:	ldr	r1, [r0, #16]
   18490:	ldr	r0, [r0, #20]
   18494:	mul	r7, r2, r7
   18498:	add	r3, r0, r7
   1849c:	cmp	r1, r3
   184a0:	bcs	184b8 <flatcc_json_printer_double_field@@Base+0x1ec>
   184a4:	mov	r1, r7
   184a8:	mov	r0, r4
   184ac:	bl	14d14 <test_print@@Base+0x1278>
   184b0:	ldr	r2, [r4, #20]
   184b4:	b	183b0 <flatcc_json_printer_double_field@@Base+0xe4>
   184b8:	mov	r2, r7
   184bc:	mov	r1, #32
   184c0:	bl	124bc <memset@plt>
   184c4:	ldr	r2, [r4, #20]
   184c8:	add	r2, r2, r7
   184cc:	str	r2, [r4, #20]
   184d0:	b	183b0 <flatcc_json_printer_double_field@@Base+0xe4>

000184d4 <flatcc_json_printer_uint8_enum_field@@Base>:
   184d4:	ldr	ip, [r1, #8]
   184d8:	add	r2, r2, #2
   184dc:	lsl	r2, r2, #1
   184e0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   184e4:	strd	r6, [sp, #8]
   184e8:	strd	r8, [sp, #16]
   184ec:	str	sl, [sp, #24]
   184f0:	cmp	r2, ip
   184f4:	str	lr, [sp, #28]
   184f8:	ldrb	lr, [sp, #36]	; 0x24
   184fc:	ldr	r7, [sp, #32]
   18500:	ldr	r5, [sp, #40]	; 0x28
   18504:	bge	1864c <flatcc_json_printer_uint8_enum_field@@Base+0x178>
   18508:	ldr	ip, [r1, #4]
   1850c:	ldrh	r2, [ip, r2]
   18510:	cmp	r2, #0
   18514:	beq	1864c <flatcc_json_printer_uint8_enum_field@@Base+0x178>
   18518:	ldr	ip, [r1]
   1851c:	cmn	ip, r2
   18520:	beq	1864c <flatcc_json_printer_uint8_enum_field@@Base+0x178>
   18524:	ldrb	r6, [ip, r2]
   18528:	cmp	lr, r6
   1852c:	beq	18704 <flatcc_json_printer_uint8_enum_field@@Base+0x230>
   18530:	ldr	ip, [r1, #16]
   18534:	ldr	r2, [r0, #20]
   18538:	cmp	ip, #0
   1853c:	add	ip, ip, #1
   18540:	str	ip, [r1, #16]
   18544:	beq	1855c <flatcc_json_printer_uint8_enum_field@@Base+0x88>
   18548:	add	ip, r2, #1
   1854c:	mov	r1, #44	; 0x2c
   18550:	str	ip, [r0, #20]
   18554:	strb	r1, [r2]
   18558:	ldr	r2, [r0, #20]
   1855c:	mov	r8, r3
   18560:	mov	r4, r0
   18564:	ldrb	r1, [r0, #25]
   18568:	cmp	r1, #0
   1856c:	bne	186a4 <flatcc_json_printer_uint8_enum_field@@Base+0x1d0>
   18570:	ldr	r3, [r0, #16]
   18574:	cmp	r3, r2
   18578:	bhi	18588 <flatcc_json_printer_uint8_enum_field@@Base+0xb4>
   1857c:	ldr	r3, [r0, #44]	; 0x2c
   18580:	blx	r3
   18584:	ldr	r2, [r4, #20]
   18588:	mov	r3, #34	; 0x22
   1858c:	strb	r3, [r2]
   18590:	ldrb	r3, [r4, #26]
   18594:	ldr	r2, [r4, #16]
   18598:	ldr	r0, [r4, #20]
   1859c:	cmp	r3, #0
   185a0:	addeq	r0, r0, #1
   185a4:	add	r3, r0, r7
   185a8:	cmp	r2, r3
   185ac:	str	r0, [r4, #20]
   185b0:	bls	1868c <flatcc_json_printer_uint8_enum_field@@Base+0x1b8>
   185b4:	mov	r2, r7
   185b8:	mov	r1, r8
   185bc:	bl	12420 <memcpy@plt>
   185c0:	ldr	r3, [r4, #20]
   185c4:	add	r7, r3, r7
   185c8:	str	r7, [r4, #20]
   185cc:	mov	r3, #34	; 0x22
   185d0:	mov	ip, #58	; 0x3a
   185d4:	mov	r0, #32
   185d8:	strb	r3, [r7]
   185dc:	ldrb	r3, [r4, #26]
   185e0:	ldr	r1, [r4, #20]
   185e4:	clz	r3, r3
   185e8:	lsr	r3, r3, #5
   185ec:	add	r2, r1, r3
   185f0:	add	r2, r2, #1
   185f4:	str	r2, [r4, #20]
   185f8:	strb	ip, [r1, r3]
   185fc:	ldr	r3, [r4, #20]
   18600:	strb	r0, [r3]
   18604:	ldrb	r2, [r4, #25]
   18608:	ldr	r1, [r4, #20]
   1860c:	ldrb	r3, [r4, #27]
   18610:	cmp	r2, #0
   18614:	addne	r1, r1, #1
   18618:	cmp	r3, #0
   1861c:	str	r1, [r4, #20]
   18620:	bne	18660 <flatcc_json_printer_uint8_enum_field@@Base+0x18c>
   18624:	mov	r1, r6
   18628:	mov	r0, r4
   1862c:	ldrd	r6, [sp, #8]
   18630:	mov	r3, r5
   18634:	ldrd	r4, [sp]
   18638:	ldrd	r8, [sp, #16]
   1863c:	ldr	sl, [sp, #24]
   18640:	ldr	lr, [sp, #28]
   18644:	add	sp, sp, #32
   18648:	bx	r3
   1864c:	ldrb	r2, [r0, #29]
   18650:	cmp	r2, #0
   18654:	beq	18674 <flatcc_json_printer_uint8_enum_field@@Base+0x1a0>
   18658:	mov	r6, lr
   1865c:	b	18530 <flatcc_json_printer_uint8_enum_field@@Base+0x5c>
   18660:	mov	r0, r6
   18664:	bl	14fac <test_print@@Base+0x1510>
   18668:	ldr	r3, [r4, #20]
   1866c:	add	r0, r3, r0
   18670:	str	r0, [r4, #20]
   18674:	ldrd	r4, [sp]
   18678:	ldrd	r6, [sp, #8]
   1867c:	ldrd	r8, [sp, #16]
   18680:	ldr	sl, [sp, #24]
   18684:	add	sp, sp, #28
   18688:	pop	{pc}		; (ldr pc, [sp], #4)
   1868c:	mov	r2, r7
   18690:	mov	r1, r8
   18694:	mov	r0, r4
   18698:	bl	14c50 <test_print@@Base+0x11b4>
   1869c:	ldr	r7, [r4, #20]
   186a0:	b	185cc <flatcc_json_printer_uint8_enum_field@@Base+0xf8>
   186a4:	add	r1, r2, #1
   186a8:	mov	r3, #10
   186ac:	str	r1, [r0, #20]
   186b0:	strb	r3, [r2]
   186b4:	ldrb	r3, [r0, #25]
   186b8:	ldr	r2, [r4, #32]
   186bc:	ldr	r1, [r0, #16]
   186c0:	ldr	r0, [r0, #20]
   186c4:	mul	r9, r2, r3
   186c8:	add	r3, r0, r9
   186cc:	cmp	r1, r3
   186d0:	bcs	186e8 <flatcc_json_printer_uint8_enum_field@@Base+0x214>
   186d4:	mov	r1, r9
   186d8:	mov	r0, r4
   186dc:	bl	14d14 <test_print@@Base+0x1278>
   186e0:	ldr	r2, [r4, #20]
   186e4:	b	18588 <flatcc_json_printer_uint8_enum_field@@Base+0xb4>
   186e8:	mov	r2, r9
   186ec:	mov	r1, #32
   186f0:	bl	124bc <memset@plt>
   186f4:	ldr	r2, [r4, #20]
   186f8:	add	r2, r2, r9
   186fc:	str	r2, [r4, #20]
   18700:	b	18588 <flatcc_json_printer_uint8_enum_field@@Base+0xb4>
   18704:	ldrb	r2, [r0, #28]
   18708:	cmp	r2, #0
   1870c:	beq	18530 <flatcc_json_printer_uint8_enum_field@@Base+0x5c>
   18710:	b	18674 <flatcc_json_printer_uint8_enum_field@@Base+0x1a0>

00018714 <flatcc_json_printer_uint16_enum_field@@Base>:
   18714:	ldr	ip, [r1, #8]
   18718:	add	r2, r2, #2
   1871c:	lsl	r2, r2, #1
   18720:	strd	r4, [sp, #-32]!	; 0xffffffe0
   18724:	strd	r6, [sp, #8]
   18728:	strd	r8, [sp, #16]
   1872c:	str	sl, [sp, #24]
   18730:	cmp	r2, ip
   18734:	str	lr, [sp, #28]
   18738:	ldrh	lr, [sp, #36]	; 0x24
   1873c:	ldr	r7, [sp, #32]
   18740:	ldr	r5, [sp, #40]	; 0x28
   18744:	bge	1888c <flatcc_json_printer_uint16_enum_field@@Base+0x178>
   18748:	ldr	ip, [r1, #4]
   1874c:	ldrh	r2, [ip, r2]
   18750:	cmp	r2, #0
   18754:	beq	1888c <flatcc_json_printer_uint16_enum_field@@Base+0x178>
   18758:	ldr	ip, [r1]
   1875c:	cmn	ip, r2
   18760:	beq	1888c <flatcc_json_printer_uint16_enum_field@@Base+0x178>
   18764:	ldrh	r6, [ip, r2]
   18768:	cmp	lr, r6
   1876c:	beq	18944 <flatcc_json_printer_uint16_enum_field@@Base+0x230>
   18770:	ldr	ip, [r1, #16]
   18774:	ldr	r2, [r0, #20]
   18778:	cmp	ip, #0
   1877c:	add	ip, ip, #1
   18780:	str	ip, [r1, #16]
   18784:	beq	1879c <flatcc_json_printer_uint16_enum_field@@Base+0x88>
   18788:	add	ip, r2, #1
   1878c:	mov	r1, #44	; 0x2c
   18790:	str	ip, [r0, #20]
   18794:	strb	r1, [r2]
   18798:	ldr	r2, [r0, #20]
   1879c:	mov	r8, r3
   187a0:	mov	r4, r0
   187a4:	ldrb	r1, [r0, #25]
   187a8:	cmp	r1, #0
   187ac:	bne	188e4 <flatcc_json_printer_uint16_enum_field@@Base+0x1d0>
   187b0:	ldr	r3, [r0, #16]
   187b4:	cmp	r3, r2
   187b8:	bhi	187c8 <flatcc_json_printer_uint16_enum_field@@Base+0xb4>
   187bc:	ldr	r3, [r0, #44]	; 0x2c
   187c0:	blx	r3
   187c4:	ldr	r2, [r4, #20]
   187c8:	mov	r3, #34	; 0x22
   187cc:	strb	r3, [r2]
   187d0:	ldrb	r3, [r4, #26]
   187d4:	ldr	r2, [r4, #16]
   187d8:	ldr	r0, [r4, #20]
   187dc:	cmp	r3, #0
   187e0:	addeq	r0, r0, #1
   187e4:	add	r3, r0, r7
   187e8:	cmp	r2, r3
   187ec:	str	r0, [r4, #20]
   187f0:	bls	188cc <flatcc_json_printer_uint16_enum_field@@Base+0x1b8>
   187f4:	mov	r2, r7
   187f8:	mov	r1, r8
   187fc:	bl	12420 <memcpy@plt>
   18800:	ldr	r3, [r4, #20]
   18804:	add	r7, r3, r7
   18808:	str	r7, [r4, #20]
   1880c:	mov	r3, #34	; 0x22
   18810:	mov	ip, #58	; 0x3a
   18814:	mov	r0, #32
   18818:	strb	r3, [r7]
   1881c:	ldrb	r3, [r4, #26]
   18820:	ldr	r1, [r4, #20]
   18824:	clz	r3, r3
   18828:	lsr	r3, r3, #5
   1882c:	add	r2, r1, r3
   18830:	add	r2, r2, #1
   18834:	str	r2, [r4, #20]
   18838:	strb	ip, [r1, r3]
   1883c:	ldr	r3, [r4, #20]
   18840:	strb	r0, [r3]
   18844:	ldrb	r2, [r4, #25]
   18848:	ldr	r1, [r4, #20]
   1884c:	ldrb	r3, [r4, #27]
   18850:	cmp	r2, #0
   18854:	addne	r1, r1, #1
   18858:	cmp	r3, #0
   1885c:	str	r1, [r4, #20]
   18860:	bne	188a0 <flatcc_json_printer_uint16_enum_field@@Base+0x18c>
   18864:	mov	r1, r6
   18868:	mov	r0, r4
   1886c:	ldrd	r6, [sp, #8]
   18870:	mov	r3, r5
   18874:	ldrd	r4, [sp]
   18878:	ldrd	r8, [sp, #16]
   1887c:	ldr	sl, [sp, #24]
   18880:	ldr	lr, [sp, #28]
   18884:	add	sp, sp, #32
   18888:	bx	r3
   1888c:	ldrb	r2, [r0, #29]
   18890:	cmp	r2, #0
   18894:	beq	188b4 <flatcc_json_printer_uint16_enum_field@@Base+0x1a0>
   18898:	mov	r6, lr
   1889c:	b	18770 <flatcc_json_printer_uint16_enum_field@@Base+0x5c>
   188a0:	mov	r0, r6
   188a4:	bl	13db8 <test_print@@Base+0x31c>
   188a8:	ldr	r3, [r4, #20]
   188ac:	add	r0, r3, r0
   188b0:	str	r0, [r4, #20]
   188b4:	ldrd	r4, [sp]
   188b8:	ldrd	r6, [sp, #8]
   188bc:	ldrd	r8, [sp, #16]
   188c0:	ldr	sl, [sp, #24]
   188c4:	add	sp, sp, #28
   188c8:	pop	{pc}		; (ldr pc, [sp], #4)
   188cc:	mov	r2, r7
   188d0:	mov	r1, r8
   188d4:	mov	r0, r4
   188d8:	bl	14c50 <test_print@@Base+0x11b4>
   188dc:	ldr	r7, [r4, #20]
   188e0:	b	1880c <flatcc_json_printer_uint16_enum_field@@Base+0xf8>
   188e4:	add	r1, r2, #1
   188e8:	mov	r3, #10
   188ec:	str	r1, [r0, #20]
   188f0:	strb	r3, [r2]
   188f4:	ldrb	r3, [r0, #25]
   188f8:	ldr	r2, [r4, #32]
   188fc:	ldr	r1, [r0, #16]
   18900:	ldr	r0, [r0, #20]
   18904:	mul	r9, r2, r3
   18908:	add	r3, r0, r9
   1890c:	cmp	r1, r3
   18910:	bcs	18928 <flatcc_json_printer_uint16_enum_field@@Base+0x214>
   18914:	mov	r1, r9
   18918:	mov	r0, r4
   1891c:	bl	14d14 <test_print@@Base+0x1278>
   18920:	ldr	r2, [r4, #20]
   18924:	b	187c8 <flatcc_json_printer_uint16_enum_field@@Base+0xb4>
   18928:	mov	r2, r9
   1892c:	mov	r1, #32
   18930:	bl	124bc <memset@plt>
   18934:	ldr	r2, [r4, #20]
   18938:	add	r2, r2, r9
   1893c:	str	r2, [r4, #20]
   18940:	b	187c8 <flatcc_json_printer_uint16_enum_field@@Base+0xb4>
   18944:	ldrb	r2, [r0, #28]
   18948:	cmp	r2, #0
   1894c:	beq	18770 <flatcc_json_printer_uint16_enum_field@@Base+0x5c>
   18950:	b	188b4 <flatcc_json_printer_uint16_enum_field@@Base+0x1a0>

00018954 <flatcc_json_printer_uint32_enum_field@@Base>:
   18954:	ldr	ip, [r1, #8]
   18958:	add	r2, r2, #2
   1895c:	lsl	r2, r2, #1
   18960:	strd	r4, [sp, #-32]!	; 0xffffffe0
   18964:	strd	r6, [sp, #8]
   18968:	strd	r8, [sp, #16]
   1896c:	str	sl, [sp, #24]
   18970:	cmp	r2, ip
   18974:	str	lr, [sp, #28]
   18978:	ldr	r5, [sp, #32]
   1897c:	ldr	lr, [sp, #36]	; 0x24
   18980:	ldr	r6, [sp, #40]	; 0x28
   18984:	bge	18acc <flatcc_json_printer_uint32_enum_field@@Base+0x178>
   18988:	ldr	ip, [r1, #4]
   1898c:	ldrh	r2, [ip, r2]
   18990:	cmp	r2, #0
   18994:	beq	18acc <flatcc_json_printer_uint32_enum_field@@Base+0x178>
   18998:	ldr	ip, [r1]
   1899c:	cmn	ip, r2
   189a0:	beq	18acc <flatcc_json_printer_uint32_enum_field@@Base+0x178>
   189a4:	ldr	r7, [ip, r2]
   189a8:	cmp	lr, r7
   189ac:	beq	18b84 <flatcc_json_printer_uint32_enum_field@@Base+0x230>
   189b0:	ldr	ip, [r1, #16]
   189b4:	ldr	r2, [r0, #20]
   189b8:	cmp	ip, #0
   189bc:	add	ip, ip, #1
   189c0:	str	ip, [r1, #16]
   189c4:	beq	189dc <flatcc_json_printer_uint32_enum_field@@Base+0x88>
   189c8:	add	ip, r2, #1
   189cc:	mov	r1, #44	; 0x2c
   189d0:	str	ip, [r0, #20]
   189d4:	strb	r1, [r2]
   189d8:	ldr	r2, [r0, #20]
   189dc:	mov	r8, r3
   189e0:	mov	r4, r0
   189e4:	ldrb	r1, [r0, #25]
   189e8:	cmp	r1, #0
   189ec:	bne	18b24 <flatcc_json_printer_uint32_enum_field@@Base+0x1d0>
   189f0:	ldr	r3, [r0, #16]
   189f4:	cmp	r3, r2
   189f8:	bhi	18a08 <flatcc_json_printer_uint32_enum_field@@Base+0xb4>
   189fc:	ldr	r3, [r0, #44]	; 0x2c
   18a00:	blx	r3
   18a04:	ldr	r2, [r4, #20]
   18a08:	mov	r3, #34	; 0x22
   18a0c:	strb	r3, [r2]
   18a10:	ldrb	r3, [r4, #26]
   18a14:	ldr	r2, [r4, #16]
   18a18:	ldr	r0, [r4, #20]
   18a1c:	cmp	r3, #0
   18a20:	addeq	r0, r0, #1
   18a24:	add	r3, r0, r5
   18a28:	cmp	r2, r3
   18a2c:	str	r0, [r4, #20]
   18a30:	bls	18b0c <flatcc_json_printer_uint32_enum_field@@Base+0x1b8>
   18a34:	mov	r2, r5
   18a38:	mov	r1, r8
   18a3c:	bl	12420 <memcpy@plt>
   18a40:	ldr	r3, [r4, #20]
   18a44:	add	r5, r3, r5
   18a48:	str	r5, [r4, #20]
   18a4c:	mov	r3, #34	; 0x22
   18a50:	mov	ip, #58	; 0x3a
   18a54:	mov	r0, #32
   18a58:	strb	r3, [r5]
   18a5c:	ldrb	r3, [r4, #26]
   18a60:	ldr	r1, [r4, #20]
   18a64:	clz	r3, r3
   18a68:	lsr	r3, r3, #5
   18a6c:	add	r2, r1, r3
   18a70:	add	r2, r2, #1
   18a74:	str	r2, [r4, #20]
   18a78:	strb	ip, [r1, r3]
   18a7c:	ldr	r3, [r4, #20]
   18a80:	strb	r0, [r3]
   18a84:	ldrb	r2, [r4, #25]
   18a88:	ldr	r1, [r4, #20]
   18a8c:	ldrb	r3, [r4, #27]
   18a90:	cmp	r2, #0
   18a94:	addne	r1, r1, #1
   18a98:	cmp	r3, #0
   18a9c:	str	r1, [r4, #20]
   18aa0:	bne	18ae0 <flatcc_json_printer_uint32_enum_field@@Base+0x18c>
   18aa4:	mov	r1, r7
   18aa8:	mov	r0, r4
   18aac:	ldrd	r4, [sp]
   18ab0:	mov	r3, r6
   18ab4:	ldrd	r6, [sp, #8]
   18ab8:	ldrd	r8, [sp, #16]
   18abc:	ldr	sl, [sp, #24]
   18ac0:	ldr	lr, [sp, #28]
   18ac4:	add	sp, sp, #32
   18ac8:	bx	r3
   18acc:	ldrb	r2, [r0, #29]
   18ad0:	cmp	r2, #0
   18ad4:	beq	18af4 <flatcc_json_printer_uint32_enum_field@@Base+0x1a0>
   18ad8:	mov	r7, lr
   18adc:	b	189b0 <flatcc_json_printer_uint32_enum_field@@Base+0x5c>
   18ae0:	mov	r0, r7
   18ae4:	bl	13f20 <test_print@@Base+0x484>
   18ae8:	ldr	r3, [r4, #20]
   18aec:	add	r0, r3, r0
   18af0:	str	r0, [r4, #20]
   18af4:	ldrd	r4, [sp]
   18af8:	ldrd	r6, [sp, #8]
   18afc:	ldrd	r8, [sp, #16]
   18b00:	ldr	sl, [sp, #24]
   18b04:	add	sp, sp, #28
   18b08:	pop	{pc}		; (ldr pc, [sp], #4)
   18b0c:	mov	r2, r5
   18b10:	mov	r1, r8
   18b14:	mov	r0, r4
   18b18:	bl	14c50 <test_print@@Base+0x11b4>
   18b1c:	ldr	r5, [r4, #20]
   18b20:	b	18a4c <flatcc_json_printer_uint32_enum_field@@Base+0xf8>
   18b24:	add	r1, r2, #1
   18b28:	mov	r3, #10
   18b2c:	str	r1, [r0, #20]
   18b30:	strb	r3, [r2]
   18b34:	ldrb	r3, [r0, #25]
   18b38:	ldr	r2, [r4, #32]
   18b3c:	ldr	r1, [r0, #16]
   18b40:	ldr	r0, [r0, #20]
   18b44:	mul	r9, r2, r3
   18b48:	add	r3, r0, r9
   18b4c:	cmp	r1, r3
   18b50:	bcs	18b68 <flatcc_json_printer_uint32_enum_field@@Base+0x214>
   18b54:	mov	r1, r9
   18b58:	mov	r0, r4
   18b5c:	bl	14d14 <test_print@@Base+0x1278>
   18b60:	ldr	r2, [r4, #20]
   18b64:	b	18a08 <flatcc_json_printer_uint32_enum_field@@Base+0xb4>
   18b68:	mov	r2, r9
   18b6c:	mov	r1, #32
   18b70:	bl	124bc <memset@plt>
   18b74:	ldr	r2, [r4, #20]
   18b78:	add	r2, r2, r9
   18b7c:	str	r2, [r4, #20]
   18b80:	b	18a08 <flatcc_json_printer_uint32_enum_field@@Base+0xb4>
   18b84:	ldrb	r2, [r0, #28]
   18b88:	cmp	r2, #0
   18b8c:	beq	189b0 <flatcc_json_printer_uint32_enum_field@@Base+0x5c>
   18b90:	b	18af4 <flatcc_json_printer_uint32_enum_field@@Base+0x1a0>

00018b94 <flatcc_json_printer_uint64_enum_field@@Base>:
   18b94:	ldr	ip, [r1, #8]
   18b98:	add	r2, r2, #2
   18b9c:	lsl	r2, r2, #1
   18ba0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   18ba4:	strd	r6, [sp, #8]
   18ba8:	strd	r8, [sp, #16]
   18bac:	strd	sl, [sp, #24]
   18bb0:	cmp	r2, ip
   18bb4:	str	lr, [sp, #32]
   18bb8:	sub	sp, sp, #4
   18bbc:	ldr	r8, [sp, #40]	; 0x28
   18bc0:	ldrd	sl, [sp, #48]	; 0x30
   18bc4:	ldr	r5, [sp, #56]	; 0x38
   18bc8:	bge	18d1c <flatcc_json_printer_uint64_enum_field@@Base+0x188>
   18bcc:	ldr	ip, [r1, #4]
   18bd0:	ldrh	r2, [ip, r2]
   18bd4:	cmp	r2, #0
   18bd8:	beq	18d1c <flatcc_json_printer_uint64_enum_field@@Base+0x188>
   18bdc:	ldr	ip, [r1]
   18be0:	cmn	ip, r2
   18be4:	beq	18d1c <flatcc_json_printer_uint64_enum_field@@Base+0x188>
   18be8:	ldrd	r6, [ip, r2]
   18bec:	cmp	fp, r7
   18bf0:	cmpeq	sl, r6
   18bf4:	beq	18de0 <flatcc_json_printer_uint64_enum_field@@Base+0x24c>
   18bf8:	ldr	ip, [r1, #16]
   18bfc:	ldr	r2, [r0, #20]
   18c00:	cmp	ip, #0
   18c04:	add	ip, ip, #1
   18c08:	str	ip, [r1, #16]
   18c0c:	beq	18c24 <flatcc_json_printer_uint64_enum_field@@Base+0x90>
   18c10:	add	ip, r2, #1
   18c14:	mov	r1, #44	; 0x2c
   18c18:	str	ip, [r0, #20]
   18c1c:	strb	r1, [r2]
   18c20:	ldr	r2, [r0, #20]
   18c24:	mov	r9, r3
   18c28:	mov	r4, r0
   18c2c:	ldrb	r1, [r0, #25]
   18c30:	cmp	r1, #0
   18c34:	bne	18d80 <flatcc_json_printer_uint64_enum_field@@Base+0x1ec>
   18c38:	ldr	r3, [r0, #16]
   18c3c:	cmp	r3, r2
   18c40:	bhi	18c50 <flatcc_json_printer_uint64_enum_field@@Base+0xbc>
   18c44:	ldr	r3, [r0, #44]	; 0x2c
   18c48:	blx	r3
   18c4c:	ldr	r2, [r4, #20]
   18c50:	mov	r3, #34	; 0x22
   18c54:	strb	r3, [r2]
   18c58:	ldrb	r3, [r4, #26]
   18c5c:	ldr	r2, [r4, #16]
   18c60:	ldr	r0, [r4, #20]
   18c64:	cmp	r3, #0
   18c68:	addeq	r0, r0, #1
   18c6c:	add	r3, r0, r8
   18c70:	cmp	r2, r3
   18c74:	str	r0, [r4, #20]
   18c78:	bls	18d68 <flatcc_json_printer_uint64_enum_field@@Base+0x1d4>
   18c7c:	mov	r2, r8
   18c80:	mov	r1, r9
   18c84:	bl	12420 <memcpy@plt>
   18c88:	ldr	r3, [r4, #20]
   18c8c:	add	r8, r3, r8
   18c90:	str	r8, [r4, #20]
   18c94:	mov	r3, #34	; 0x22
   18c98:	mov	ip, #58	; 0x3a
   18c9c:	mov	r0, #32
   18ca0:	strb	r3, [r8]
   18ca4:	ldrb	r3, [r4, #26]
   18ca8:	ldr	r1, [r4, #20]
   18cac:	clz	r3, r3
   18cb0:	lsr	r3, r3, #5
   18cb4:	add	r2, r1, r3
   18cb8:	add	r2, r2, #1
   18cbc:	str	r2, [r4, #20]
   18cc0:	strb	ip, [r1, r3]
   18cc4:	ldr	r3, [r4, #20]
   18cc8:	strb	r0, [r3]
   18ccc:	ldrb	r1, [r4, #25]
   18cd0:	ldr	r2, [r4, #20]
   18cd4:	ldrb	r3, [r4, #27]
   18cd8:	cmp	r1, #0
   18cdc:	addne	r2, r2, #1
   18ce0:	cmp	r3, #0
   18ce4:	str	r2, [r4, #20]
   18ce8:	bne	18d34 <flatcc_json_printer_uint64_enum_field@@Base+0x1a0>
   18cec:	mov	r2, r6
   18cf0:	mov	r3, r7
   18cf4:	mov	r0, r4
   18cf8:	mov	r1, r5
   18cfc:	add	sp, sp, #4
   18d00:	ldrd	r4, [sp]
   18d04:	ldrd	r6, [sp, #8]
   18d08:	ldrd	r8, [sp, #16]
   18d0c:	ldrd	sl, [sp, #24]
   18d10:	ldr	lr, [sp, #32]
   18d14:	add	sp, sp, #36	; 0x24
   18d18:	bx	r1
   18d1c:	ldrb	r2, [r0, #29]
   18d20:	cmp	r2, #0
   18d24:	beq	18d4c <flatcc_json_printer_uint64_enum_field@@Base+0x1b8>
   18d28:	mov	r6, sl
   18d2c:	mov	r7, fp
   18d30:	b	18bf8 <flatcc_json_printer_uint64_enum_field@@Base+0x64>
   18d34:	mov	r0, r6
   18d38:	mov	r1, r7
   18d3c:	bl	1424c <test_print@@Base+0x7b0>
   18d40:	ldr	r3, [r4, #20]
   18d44:	add	r0, r3, r0
   18d48:	str	r0, [r4, #20]
   18d4c:	add	sp, sp, #4
   18d50:	ldrd	r4, [sp]
   18d54:	ldrd	r6, [sp, #8]
   18d58:	ldrd	r8, [sp, #16]
   18d5c:	ldrd	sl, [sp, #24]
   18d60:	add	sp, sp, #32
   18d64:	pop	{pc}		; (ldr pc, [sp], #4)
   18d68:	mov	r2, r8
   18d6c:	mov	r1, r9
   18d70:	mov	r0, r4
   18d74:	bl	14c50 <test_print@@Base+0x11b4>
   18d78:	ldr	r8, [r4, #20]
   18d7c:	b	18c94 <flatcc_json_printer_uint64_enum_field@@Base+0x100>
   18d80:	add	r1, r2, #1
   18d84:	mov	r3, #10
   18d88:	str	r1, [r0, #20]
   18d8c:	strb	r3, [r2]
   18d90:	ldrb	r3, [r0, #25]
   18d94:	ldr	r2, [r4, #32]
   18d98:	ldr	r1, [r0, #16]
   18d9c:	ldr	r0, [r0, #20]
   18da0:	mul	sl, r2, r3
   18da4:	add	r3, r0, sl
   18da8:	cmp	r1, r3
   18dac:	bcs	18dc4 <flatcc_json_printer_uint64_enum_field@@Base+0x230>
   18db0:	mov	r1, sl
   18db4:	mov	r0, r4
   18db8:	bl	14d14 <test_print@@Base+0x1278>
   18dbc:	ldr	r2, [r4, #20]
   18dc0:	b	18c50 <flatcc_json_printer_uint64_enum_field@@Base+0xbc>
   18dc4:	mov	r2, sl
   18dc8:	mov	r1, #32
   18dcc:	bl	124bc <memset@plt>
   18dd0:	ldr	r2, [r4, #20]
   18dd4:	add	r2, r2, sl
   18dd8:	str	r2, [r4, #20]
   18ddc:	b	18c50 <flatcc_json_printer_uint64_enum_field@@Base+0xbc>
   18de0:	ldrb	r2, [r0, #28]
   18de4:	cmp	r2, #0
   18de8:	beq	18bf8 <flatcc_json_printer_uint64_enum_field@@Base+0x64>
   18dec:	b	18d4c <flatcc_json_printer_uint64_enum_field@@Base+0x1b8>

00018df0 <flatcc_json_printer_int8_enum_field@@Base>:
   18df0:	ldr	ip, [r1, #8]
   18df4:	add	r2, r2, #2
   18df8:	lsl	r2, r2, #1
   18dfc:	strd	r4, [sp, #-32]!	; 0xffffffe0
   18e00:	strd	r6, [sp, #8]
   18e04:	strd	r8, [sp, #16]
   18e08:	str	sl, [sp, #24]
   18e0c:	cmp	r2, ip
   18e10:	str	lr, [sp, #28]
   18e14:	ldrsb	lr, [sp, #36]	; 0x24
   18e18:	ldr	r7, [sp, #32]
   18e1c:	ldr	r6, [sp, #40]	; 0x28
   18e20:	bge	18f94 <flatcc_json_printer_int8_enum_field@@Base+0x1a4>
   18e24:	ldr	ip, [r1, #4]
   18e28:	ldrh	r2, [ip, r2]
   18e2c:	cmp	r2, #0
   18e30:	beq	18f94 <flatcc_json_printer_int8_enum_field@@Base+0x1a4>
   18e34:	ldr	ip, [r1]
   18e38:	cmn	ip, r2
   18e3c:	beq	18f94 <flatcc_json_printer_int8_enum_field@@Base+0x1a4>
   18e40:	ldrsb	r5, [ip, r2]
   18e44:	cmp	lr, r5
   18e48:	beq	19048 <flatcc_json_printer_int8_enum_field@@Base+0x258>
   18e4c:	ldr	ip, [r1, #16]
   18e50:	ldr	r2, [r0, #20]
   18e54:	cmp	ip, #0
   18e58:	add	ip, ip, #1
   18e5c:	str	ip, [r1, #16]
   18e60:	beq	18e78 <flatcc_json_printer_int8_enum_field@@Base+0x88>
   18e64:	add	ip, r2, #1
   18e68:	mov	r1, #44	; 0x2c
   18e6c:	str	ip, [r0, #20]
   18e70:	strb	r1, [r2]
   18e74:	ldr	r2, [r0, #20]
   18e78:	mov	r8, r3
   18e7c:	mov	r4, r0
   18e80:	ldrb	r1, [r0, #25]
   18e84:	cmp	r1, #0
   18e88:	bne	18fe8 <flatcc_json_printer_int8_enum_field@@Base+0x1f8>
   18e8c:	ldr	r3, [r0, #16]
   18e90:	cmp	r3, r2
   18e94:	bhi	18ea4 <flatcc_json_printer_int8_enum_field@@Base+0xb4>
   18e98:	ldr	r3, [r0, #44]	; 0x2c
   18e9c:	blx	r3
   18ea0:	ldr	r2, [r4, #20]
   18ea4:	mov	r3, #34	; 0x22
   18ea8:	strb	r3, [r2]
   18eac:	ldrb	r3, [r4, #26]
   18eb0:	ldr	r2, [r4, #16]
   18eb4:	ldr	r0, [r4, #20]
   18eb8:	cmp	r3, #0
   18ebc:	addeq	r0, r0, #1
   18ec0:	add	r3, r0, r7
   18ec4:	cmp	r2, r3
   18ec8:	str	r0, [r4, #20]
   18ecc:	bls	18fd0 <flatcc_json_printer_int8_enum_field@@Base+0x1e0>
   18ed0:	mov	r2, r7
   18ed4:	mov	r1, r8
   18ed8:	bl	12420 <memcpy@plt>
   18edc:	ldr	r3, [r4, #20]
   18ee0:	add	r7, r3, r7
   18ee4:	str	r7, [r4, #20]
   18ee8:	mov	r3, #34	; 0x22
   18eec:	mov	ip, #58	; 0x3a
   18ef0:	mov	r0, #32
   18ef4:	strb	r3, [r7]
   18ef8:	ldrb	r3, [r4, #26]
   18efc:	ldr	r1, [r4, #20]
   18f00:	clz	r3, r3
   18f04:	lsr	r3, r3, #5
   18f08:	add	r2, r1, r3
   18f0c:	add	r2, r2, #1
   18f10:	str	r2, [r4, #20]
   18f14:	strb	ip, [r1, r3]
   18f18:	ldr	r3, [r4, #20]
   18f1c:	strb	r0, [r3]
   18f20:	ldrb	r3, [r4, #25]
   18f24:	ldr	r2, [r4, #20]
   18f28:	ldrb	r0, [r4, #27]
   18f2c:	adds	r3, r3, #0
   18f30:	movne	r3, #1
   18f34:	add	r1, r2, r3
   18f38:	cmp	r0, #0
   18f3c:	str	r1, [r4, #20]
   18f40:	beq	18fa8 <flatcc_json_printer_int8_enum_field@@Base+0x1b8>
   18f44:	cmp	r5, #0
   18f48:	lsr	r6, r5, #31
   18f4c:	uxtb	r0, r5
   18f50:	bge	18f68 <flatcc_json_printer_int8_enum_field@@Base+0x178>
   18f54:	rsb	r0, r0, #0
   18f58:	mov	ip, #45	; 0x2d
   18f5c:	add	r1, r1, #1
   18f60:	uxtb	r0, r0
   18f64:	strb	ip, [r2, r3]
   18f68:	bl	14fac <test_print@@Base+0x1510>
   18f6c:	ldr	r3, [r4, #20]
   18f70:	add	r0, r6, r0
   18f74:	add	r3, r3, r0
   18f78:	str	r3, [r4, #20]
   18f7c:	ldrd	r4, [sp]
   18f80:	ldrd	r6, [sp, #8]
   18f84:	ldrd	r8, [sp, #16]
   18f88:	ldr	sl, [sp, #24]
   18f8c:	add	sp, sp, #28
   18f90:	pop	{pc}		; (ldr pc, [sp], #4)
   18f94:	ldrb	r2, [r0, #29]
   18f98:	cmp	r2, #0
   18f9c:	beq	18f7c <flatcc_json_printer_int8_enum_field@@Base+0x18c>
   18fa0:	mov	r5, lr
   18fa4:	b	18e4c <flatcc_json_printer_int8_enum_field@@Base+0x5c>
   18fa8:	mov	r1, r5
   18fac:	mov	r0, r4
   18fb0:	ldrd	r4, [sp]
   18fb4:	mov	r3, r6
   18fb8:	ldrd	r6, [sp, #8]
   18fbc:	ldrd	r8, [sp, #16]
   18fc0:	ldr	sl, [sp, #24]
   18fc4:	ldr	lr, [sp, #28]
   18fc8:	add	sp, sp, #32
   18fcc:	bx	r3
   18fd0:	mov	r2, r7
   18fd4:	mov	r1, r8
   18fd8:	mov	r0, r4
   18fdc:	bl	14c50 <test_print@@Base+0x11b4>
   18fe0:	ldr	r7, [r4, #20]
   18fe4:	b	18ee8 <flatcc_json_printer_int8_enum_field@@Base+0xf8>
   18fe8:	add	r1, r2, #1
   18fec:	mov	r3, #10
   18ff0:	str	r1, [r0, #20]
   18ff4:	strb	r3, [r2]
   18ff8:	ldrb	r3, [r0, #25]
   18ffc:	ldr	r2, [r4, #32]
   19000:	ldr	r1, [r0, #16]
   19004:	ldr	r0, [r0, #20]
   19008:	mul	r9, r2, r3
   1900c:	add	r3, r0, r9
   19010:	cmp	r1, r3
   19014:	bcs	1902c <flatcc_json_printer_int8_enum_field@@Base+0x23c>
   19018:	mov	r1, r9
   1901c:	mov	r0, r4
   19020:	bl	14d14 <test_print@@Base+0x1278>
   19024:	ldr	r2, [r4, #20]
   19028:	b	18ea4 <flatcc_json_printer_int8_enum_field@@Base+0xb4>
   1902c:	mov	r2, r9
   19030:	mov	r1, #32
   19034:	bl	124bc <memset@plt>
   19038:	ldr	r2, [r4, #20]
   1903c:	add	r2, r2, r9
   19040:	str	r2, [r4, #20]
   19044:	b	18ea4 <flatcc_json_printer_int8_enum_field@@Base+0xb4>
   19048:	ldrb	r2, [r0, #28]
   1904c:	cmp	r2, #0
   19050:	beq	18e4c <flatcc_json_printer_int8_enum_field@@Base+0x5c>
   19054:	b	18f7c <flatcc_json_printer_int8_enum_field@@Base+0x18c>

00019058 <flatcc_json_printer_int16_enum_field@@Base>:
   19058:	ldr	ip, [r1, #8]
   1905c:	add	r2, r2, #2
   19060:	lsl	r2, r2, #1
   19064:	strd	r4, [sp, #-32]!	; 0xffffffe0
   19068:	strd	r6, [sp, #8]
   1906c:	strd	r8, [sp, #16]
   19070:	str	sl, [sp, #24]
   19074:	cmp	r2, ip
   19078:	str	lr, [sp, #28]
   1907c:	ldrsh	lr, [sp, #36]	; 0x24
   19080:	ldr	r7, [sp, #32]
   19084:	ldr	r6, [sp, #40]	; 0x28
   19088:	bge	191fc <flatcc_json_printer_int16_enum_field@@Base+0x1a4>
   1908c:	ldr	ip, [r1, #4]
   19090:	ldrh	r2, [ip, r2]
   19094:	cmp	r2, #0
   19098:	beq	191fc <flatcc_json_printer_int16_enum_field@@Base+0x1a4>
   1909c:	ldr	ip, [r1]
   190a0:	cmn	ip, r2
   190a4:	beq	191fc <flatcc_json_printer_int16_enum_field@@Base+0x1a4>
   190a8:	ldrsh	r5, [ip, r2]
   190ac:	cmp	lr, r5
   190b0:	beq	192b0 <flatcc_json_printer_int16_enum_field@@Base+0x258>
   190b4:	ldr	ip, [r1, #16]
   190b8:	ldr	r2, [r0, #20]
   190bc:	cmp	ip, #0
   190c0:	add	ip, ip, #1
   190c4:	str	ip, [r1, #16]
   190c8:	beq	190e0 <flatcc_json_printer_int16_enum_field@@Base+0x88>
   190cc:	add	ip, r2, #1
   190d0:	mov	r1, #44	; 0x2c
   190d4:	str	ip, [r0, #20]
   190d8:	strb	r1, [r2]
   190dc:	ldr	r2, [r0, #20]
   190e0:	mov	r8, r3
   190e4:	mov	r4, r0
   190e8:	ldrb	r1, [r0, #25]
   190ec:	cmp	r1, #0
   190f0:	bne	19250 <flatcc_json_printer_int16_enum_field@@Base+0x1f8>
   190f4:	ldr	r3, [r0, #16]
   190f8:	cmp	r3, r2
   190fc:	bhi	1910c <flatcc_json_printer_int16_enum_field@@Base+0xb4>
   19100:	ldr	r3, [r0, #44]	; 0x2c
   19104:	blx	r3
   19108:	ldr	r2, [r4, #20]
   1910c:	mov	r3, #34	; 0x22
   19110:	strb	r3, [r2]
   19114:	ldrb	r3, [r4, #26]
   19118:	ldr	r2, [r4, #16]
   1911c:	ldr	r0, [r4, #20]
   19120:	cmp	r3, #0
   19124:	addeq	r0, r0, #1
   19128:	add	r3, r0, r7
   1912c:	cmp	r2, r3
   19130:	str	r0, [r4, #20]
   19134:	bls	19238 <flatcc_json_printer_int16_enum_field@@Base+0x1e0>
   19138:	mov	r2, r7
   1913c:	mov	r1, r8
   19140:	bl	12420 <memcpy@plt>
   19144:	ldr	r3, [r4, #20]
   19148:	add	r7, r3, r7
   1914c:	str	r7, [r4, #20]
   19150:	mov	r3, #34	; 0x22
   19154:	mov	ip, #58	; 0x3a
   19158:	mov	r0, #32
   1915c:	strb	r3, [r7]
   19160:	ldrb	r3, [r4, #26]
   19164:	ldr	r1, [r4, #20]
   19168:	clz	r3, r3
   1916c:	lsr	r3, r3, #5
   19170:	add	r2, r1, r3
   19174:	add	r2, r2, #1
   19178:	str	r2, [r4, #20]
   1917c:	strb	ip, [r1, r3]
   19180:	ldr	r3, [r4, #20]
   19184:	strb	r0, [r3]
   19188:	ldrb	r3, [r4, #25]
   1918c:	ldr	r2, [r4, #20]
   19190:	ldrb	r0, [r4, #27]
   19194:	adds	r3, r3, #0
   19198:	movne	r3, #1
   1919c:	add	r1, r2, r3
   191a0:	cmp	r0, #0
   191a4:	str	r1, [r4, #20]
   191a8:	beq	19210 <flatcc_json_printer_int16_enum_field@@Base+0x1b8>
   191ac:	cmp	r5, #0
   191b0:	lsr	r6, r5, #31
   191b4:	uxth	r0, r5
   191b8:	bge	191d0 <flatcc_json_printer_int16_enum_field@@Base+0x178>
   191bc:	rsb	r0, r0, #0
   191c0:	mov	ip, #45	; 0x2d
   191c4:	add	r1, r1, #1
   191c8:	uxth	r0, r0
   191cc:	strb	ip, [r2, r3]
   191d0:	bl	13db8 <test_print@@Base+0x31c>
   191d4:	ldr	r3, [r4, #20]
   191d8:	add	r0, r6, r0
   191dc:	add	r3, r3, r0
   191e0:	str	r3, [r4, #20]
   191e4:	ldrd	r4, [sp]
   191e8:	ldrd	r6, [sp, #8]
   191ec:	ldrd	r8, [sp, #16]
   191f0:	ldr	sl, [sp, #24]
   191f4:	add	sp, sp, #28
   191f8:	pop	{pc}		; (ldr pc, [sp], #4)
   191fc:	ldrb	r2, [r0, #29]
   19200:	cmp	r2, #0
   19204:	beq	191e4 <flatcc_json_printer_int16_enum_field@@Base+0x18c>
   19208:	mov	r5, lr
   1920c:	b	190b4 <flatcc_json_printer_int16_enum_field@@Base+0x5c>
   19210:	mov	r1, r5
   19214:	mov	r0, r4
   19218:	ldrd	r4, [sp]
   1921c:	mov	r3, r6
   19220:	ldrd	r6, [sp, #8]
   19224:	ldrd	r8, [sp, #16]
   19228:	ldr	sl, [sp, #24]
   1922c:	ldr	lr, [sp, #28]
   19230:	add	sp, sp, #32
   19234:	bx	r3
   19238:	mov	r2, r7
   1923c:	mov	r1, r8
   19240:	mov	r0, r4
   19244:	bl	14c50 <test_print@@Base+0x11b4>
   19248:	ldr	r7, [r4, #20]
   1924c:	b	19150 <flatcc_json_printer_int16_enum_field@@Base+0xf8>
   19250:	add	r1, r2, #1
   19254:	mov	r3, #10
   19258:	str	r1, [r0, #20]
   1925c:	strb	r3, [r2]
   19260:	ldrb	r3, [r0, #25]
   19264:	ldr	r2, [r4, #32]
   19268:	ldr	r1, [r0, #16]
   1926c:	ldr	r0, [r0, #20]
   19270:	mul	r9, r2, r3
   19274:	add	r3, r0, r9
   19278:	cmp	r1, r3
   1927c:	bcs	19294 <flatcc_json_printer_int16_enum_field@@Base+0x23c>
   19280:	mov	r1, r9
   19284:	mov	r0, r4
   19288:	bl	14d14 <test_print@@Base+0x1278>
   1928c:	ldr	r2, [r4, #20]
   19290:	b	1910c <flatcc_json_printer_int16_enum_field@@Base+0xb4>
   19294:	mov	r2, r9
   19298:	mov	r1, #32
   1929c:	bl	124bc <memset@plt>
   192a0:	ldr	r2, [r4, #20]
   192a4:	add	r2, r2, r9
   192a8:	str	r2, [r4, #20]
   192ac:	b	1910c <flatcc_json_printer_int16_enum_field@@Base+0xb4>
   192b0:	ldrb	r2, [r0, #28]
   192b4:	cmp	r2, #0
   192b8:	beq	190b4 <flatcc_json_printer_int16_enum_field@@Base+0x5c>
   192bc:	b	191e4 <flatcc_json_printer_int16_enum_field@@Base+0x18c>

000192c0 <flatcc_json_printer_int32_enum_field@@Base>:
   192c0:	ldr	ip, [r1, #8]
   192c4:	add	r2, r2, #2
   192c8:	lsl	r2, r2, #1
   192cc:	strd	r4, [sp, #-32]!	; 0xffffffe0
   192d0:	strd	r6, [sp, #8]
   192d4:	strd	r8, [sp, #16]
   192d8:	str	sl, [sp, #24]
   192dc:	cmp	r2, ip
   192e0:	str	lr, [sp, #28]
   192e4:	ldr	r6, [sp, #32]
   192e8:	ldr	lr, [sp, #36]	; 0x24
   192ec:	ldr	r5, [sp, #40]	; 0x28
   192f0:	bge	19460 <flatcc_json_printer_int32_enum_field@@Base+0x1a0>
   192f4:	ldr	ip, [r1, #4]
   192f8:	ldrh	r2, [ip, r2]
   192fc:	cmp	r2, #0
   19300:	beq	19460 <flatcc_json_printer_int32_enum_field@@Base+0x1a0>
   19304:	ldr	ip, [r1]
   19308:	cmn	ip, r2
   1930c:	beq	19460 <flatcc_json_printer_int32_enum_field@@Base+0x1a0>
   19310:	ldr	r7, [ip, r2]
   19314:	cmp	lr, r7
   19318:	beq	19514 <flatcc_json_printer_int32_enum_field@@Base+0x254>
   1931c:	ldr	ip, [r1, #16]
   19320:	ldr	r2, [r0, #20]
   19324:	cmp	ip, #0
   19328:	add	ip, ip, #1
   1932c:	str	ip, [r1, #16]
   19330:	beq	19348 <flatcc_json_printer_int32_enum_field@@Base+0x88>
   19334:	add	ip, r2, #1
   19338:	mov	r1, #44	; 0x2c
   1933c:	str	ip, [r0, #20]
   19340:	strb	r1, [r2]
   19344:	ldr	r2, [r0, #20]
   19348:	mov	r8, r3
   1934c:	mov	r4, r0
   19350:	ldrb	r1, [r0, #25]
   19354:	cmp	r1, #0
   19358:	bne	194b4 <flatcc_json_printer_int32_enum_field@@Base+0x1f4>
   1935c:	ldr	r3, [r0, #16]
   19360:	cmp	r3, r2
   19364:	bhi	19374 <flatcc_json_printer_int32_enum_field@@Base+0xb4>
   19368:	ldr	r3, [r0, #44]	; 0x2c
   1936c:	blx	r3
   19370:	ldr	r2, [r4, #20]
   19374:	mov	r3, #34	; 0x22
   19378:	strb	r3, [r2]
   1937c:	ldrb	r3, [r4, #26]
   19380:	ldr	r2, [r4, #16]
   19384:	ldr	r0, [r4, #20]
   19388:	cmp	r3, #0
   1938c:	addeq	r0, r0, #1
   19390:	add	r3, r0, r6
   19394:	cmp	r2, r3
   19398:	str	r0, [r4, #20]
   1939c:	bls	1949c <flatcc_json_printer_int32_enum_field@@Base+0x1dc>
   193a0:	mov	r2, r6
   193a4:	mov	r1, r8
   193a8:	bl	12420 <memcpy@plt>
   193ac:	ldr	r3, [r4, #20]
   193b0:	add	r6, r3, r6
   193b4:	str	r6, [r4, #20]
   193b8:	mov	r3, #34	; 0x22
   193bc:	mov	ip, #58	; 0x3a
   193c0:	mov	r0, #32
   193c4:	strb	r3, [r6]
   193c8:	ldrb	r3, [r4, #26]
   193cc:	ldr	r1, [r4, #20]
   193d0:	clz	r3, r3
   193d4:	lsr	r3, r3, #5
   193d8:	add	r2, r1, r3
   193dc:	add	r2, r2, #1
   193e0:	str	r2, [r4, #20]
   193e4:	strb	ip, [r1, r3]
   193e8:	ldr	r3, [r4, #20]
   193ec:	strb	r0, [r3]
   193f0:	ldrb	r3, [r4, #25]
   193f4:	ldr	r2, [r4, #20]
   193f8:	ldrb	r0, [r4, #27]
   193fc:	adds	r3, r3, #0
   19400:	movne	r3, #1
   19404:	add	r1, r2, r3
   19408:	cmp	r0, #0
   1940c:	str	r1, [r4, #20]
   19410:	beq	19474 <flatcc_json_printer_int32_enum_field@@Base+0x1b4>
   19414:	cmp	r7, #0
   19418:	lsr	r5, r7, #31
   1941c:	bge	19430 <flatcc_json_printer_int32_enum_field@@Base+0x170>
   19420:	mov	r0, #45	; 0x2d
   19424:	rsb	r7, r7, #0
   19428:	add	r1, r1, #1
   1942c:	strb	r0, [r2, r3]
   19430:	mov	r0, r7
   19434:	bl	13f20 <test_print@@Base+0x484>
   19438:	ldr	r3, [r4, #20]
   1943c:	add	r0, r5, r0
   19440:	add	r3, r3, r0
   19444:	str	r3, [r4, #20]
   19448:	ldrd	r4, [sp]
   1944c:	ldrd	r6, [sp, #8]
   19450:	ldrd	r8, [sp, #16]
   19454:	ldr	sl, [sp, #24]
   19458:	add	sp, sp, #28
   1945c:	pop	{pc}		; (ldr pc, [sp], #4)
   19460:	ldrb	r2, [r0, #29]
   19464:	cmp	r2, #0
   19468:	beq	19448 <flatcc_json_printer_int32_enum_field@@Base+0x188>
   1946c:	mov	r7, lr
   19470:	b	1931c <flatcc_json_printer_int32_enum_field@@Base+0x5c>
   19474:	mov	r1, r7
   19478:	mov	r0, r4
   1947c:	ldrd	r6, [sp, #8]
   19480:	mov	r3, r5
   19484:	ldrd	r4, [sp]
   19488:	ldrd	r8, [sp, #16]
   1948c:	ldr	sl, [sp, #24]
   19490:	ldr	lr, [sp, #28]
   19494:	add	sp, sp, #32
   19498:	bx	r3
   1949c:	mov	r2, r6
   194a0:	mov	r1, r8
   194a4:	mov	r0, r4
   194a8:	bl	14c50 <test_print@@Base+0x11b4>
   194ac:	ldr	r6, [r4, #20]
   194b0:	b	193b8 <flatcc_json_printer_int32_enum_field@@Base+0xf8>
   194b4:	add	r1, r2, #1
   194b8:	mov	r3, #10
   194bc:	str	r1, [r0, #20]
   194c0:	strb	r3, [r2]
   194c4:	ldrb	r3, [r0, #25]
   194c8:	ldr	r2, [r4, #32]
   194cc:	ldr	r1, [r0, #16]
   194d0:	ldr	r0, [r0, #20]
   194d4:	mul	r9, r2, r3
   194d8:	add	r3, r0, r9
   194dc:	cmp	r1, r3
   194e0:	bcs	194f8 <flatcc_json_printer_int32_enum_field@@Base+0x238>
   194e4:	mov	r1, r9
   194e8:	mov	r0, r4
   194ec:	bl	14d14 <test_print@@Base+0x1278>
   194f0:	ldr	r2, [r4, #20]
   194f4:	b	19374 <flatcc_json_printer_int32_enum_field@@Base+0xb4>
   194f8:	mov	r2, r9
   194fc:	mov	r1, #32
   19500:	bl	124bc <memset@plt>
   19504:	ldr	r2, [r4, #20]
   19508:	add	r2, r2, r9
   1950c:	str	r2, [r4, #20]
   19510:	b	19374 <flatcc_json_printer_int32_enum_field@@Base+0xb4>
   19514:	ldrb	r2, [r0, #28]
   19518:	cmp	r2, #0
   1951c:	beq	1931c <flatcc_json_printer_int32_enum_field@@Base+0x5c>
   19520:	b	19448 <flatcc_json_printer_int32_enum_field@@Base+0x188>

00019524 <flatcc_json_printer_int64_enum_field@@Base>:
   19524:	ldr	ip, [r1, #8]
   19528:	add	r2, r2, #2
   1952c:	lsl	r2, r2, #1
   19530:	strd	r4, [sp, #-36]!	; 0xffffffdc
   19534:	strd	r6, [sp, #8]
   19538:	strd	r8, [sp, #16]
   1953c:	strd	sl, [sp, #24]
   19540:	cmp	r2, ip
   19544:	str	lr, [sp, #32]
   19548:	sub	sp, sp, #4
   1954c:	ldr	r8, [sp, #40]	; 0x28
   19550:	ldrd	sl, [sp, #48]	; 0x30
   19554:	ldr	r5, [sp, #56]	; 0x38
   19558:	bge	196dc <flatcc_json_printer_int64_enum_field@@Base+0x1b8>
   1955c:	ldr	ip, [r1, #4]
   19560:	ldrh	r2, [ip, r2]
   19564:	cmp	r2, #0
   19568:	beq	196dc <flatcc_json_printer_int64_enum_field@@Base+0x1b8>
   1956c:	ldr	ip, [r1]
   19570:	cmn	ip, r2
   19574:	beq	196dc <flatcc_json_printer_int64_enum_field@@Base+0x1b8>
   19578:	ldrd	r6, [ip, r2]
   1957c:	cmp	fp, r7
   19580:	cmpeq	sl, r6
   19584:	beq	1979c <flatcc_json_printer_int64_enum_field@@Base+0x278>
   19588:	ldr	ip, [r1, #16]
   1958c:	ldr	r2, [r0, #20]
   19590:	cmp	ip, #0
   19594:	add	ip, ip, #1
   19598:	str	ip, [r1, #16]
   1959c:	beq	195b4 <flatcc_json_printer_int64_enum_field@@Base+0x90>
   195a0:	add	ip, r2, #1
   195a4:	mov	r1, #44	; 0x2c
   195a8:	str	ip, [r0, #20]
   195ac:	strb	r1, [r2]
   195b0:	ldr	r2, [r0, #20]
   195b4:	mov	r9, r3
   195b8:	mov	r4, r0
   195bc:	ldrb	r1, [r0, #25]
   195c0:	cmp	r1, #0
   195c4:	bne	1973c <flatcc_json_printer_int64_enum_field@@Base+0x218>
   195c8:	ldr	r3, [r0, #16]
   195cc:	cmp	r3, r2
   195d0:	bhi	195e0 <flatcc_json_printer_int64_enum_field@@Base+0xbc>
   195d4:	ldr	r3, [r0, #44]	; 0x2c
   195d8:	blx	r3
   195dc:	ldr	r2, [r4, #20]
   195e0:	mov	r3, #34	; 0x22
   195e4:	strb	r3, [r2]
   195e8:	ldrb	r3, [r4, #26]
   195ec:	ldr	r2, [r4, #16]
   195f0:	ldr	r0, [r4, #20]
   195f4:	cmp	r3, #0
   195f8:	addeq	r0, r0, #1
   195fc:	add	r3, r0, r8
   19600:	cmp	r2, r3
   19604:	str	r0, [r4, #20]
   19608:	bls	19724 <flatcc_json_printer_int64_enum_field@@Base+0x200>
   1960c:	mov	r2, r8
   19610:	mov	r1, r9
   19614:	bl	12420 <memcpy@plt>
   19618:	ldr	r3, [r4, #20]
   1961c:	add	r8, r3, r8
   19620:	str	r8, [r4, #20]
   19624:	mov	r3, #34	; 0x22
   19628:	mov	ip, #58	; 0x3a
   1962c:	mov	r0, #32
   19630:	strb	r3, [r8]
   19634:	ldrb	r3, [r4, #26]
   19638:	ldr	r1, [r4, #20]
   1963c:	clz	r3, r3
   19640:	lsr	r3, r3, #5
   19644:	add	r2, r1, r3
   19648:	add	r2, r2, #1
   1964c:	str	r2, [r4, #20]
   19650:	strb	ip, [r1, r3]
   19654:	ldr	r3, [r4, #20]
   19658:	strb	r0, [r3]
   1965c:	ldrb	r3, [r4, #25]
   19660:	ldr	r1, [r4, #20]
   19664:	ldrb	r0, [r4, #27]
   19668:	adds	r3, r3, #0
   1966c:	movne	r3, #1
   19670:	add	r2, r1, r3
   19674:	cmp	r0, #0
   19678:	str	r2, [r4, #20]
   1967c:	beq	196f4 <flatcc_json_printer_int64_enum_field@@Base+0x1d0>
   19680:	cmp	r6, #0
   19684:	lsr	r5, r7, #31
   19688:	sbcs	r0, r7, #0
   1968c:	bge	196a4 <flatcc_json_printer_int64_enum_field@@Base+0x180>
   19690:	rsbs	r6, r6, #0
   19694:	mov	r0, #45	; 0x2d
   19698:	rsc	r7, r7, #0
   1969c:	add	r2, r2, #1
   196a0:	strb	r0, [r1, r3]
   196a4:	mov	r0, r6
   196a8:	mov	r1, r7
   196ac:	bl	1424c <test_print@@Base+0x7b0>
   196b0:	ldr	r3, [r4, #20]
   196b4:	add	r0, r5, r0
   196b8:	add	r3, r3, r0
   196bc:	str	r3, [r4, #20]
   196c0:	add	sp, sp, #4
   196c4:	ldrd	r4, [sp]
   196c8:	ldrd	r6, [sp, #8]
   196cc:	ldrd	r8, [sp, #16]
   196d0:	ldrd	sl, [sp, #24]
   196d4:	add	sp, sp, #32
   196d8:	pop	{pc}		; (ldr pc, [sp], #4)
   196dc:	ldrb	r2, [r0, #29]
   196e0:	cmp	r2, #0
   196e4:	beq	196c0 <flatcc_json_printer_int64_enum_field@@Base+0x19c>
   196e8:	mov	r6, sl
   196ec:	mov	r7, fp
   196f0:	b	19588 <flatcc_json_printer_int64_enum_field@@Base+0x64>
   196f4:	mov	r2, r6
   196f8:	mov	r3, r7
   196fc:	mov	r0, r4
   19700:	mov	r1, r5
   19704:	add	sp, sp, #4
   19708:	ldrd	r4, [sp]
   1970c:	ldrd	r6, [sp, #8]
   19710:	ldrd	r8, [sp, #16]
   19714:	ldrd	sl, [sp, #24]
   19718:	ldr	lr, [sp, #32]
   1971c:	add	sp, sp, #36	; 0x24
   19720:	bx	r1
   19724:	mov	r2, r8
   19728:	mov	r1, r9
   1972c:	mov	r0, r4
   19730:	bl	14c50 <test_print@@Base+0x11b4>
   19734:	ldr	r8, [r4, #20]
   19738:	b	19624 <flatcc_json_printer_int64_enum_field@@Base+0x100>
   1973c:	add	r1, r2, #1
   19740:	mov	r3, #10
   19744:	str	r1, [r0, #20]
   19748:	strb	r3, [r2]
   1974c:	ldrb	r3, [r0, #25]
   19750:	ldr	r2, [r4, #32]
   19754:	ldr	r1, [r0, #16]
   19758:	ldr	r0, [r0, #20]
   1975c:	mul	sl, r2, r3
   19760:	add	r3, r0, sl
   19764:	cmp	r1, r3
   19768:	bcs	19780 <flatcc_json_printer_int64_enum_field@@Base+0x25c>
   1976c:	mov	r1, sl
   19770:	mov	r0, r4
   19774:	bl	14d14 <test_print@@Base+0x1278>
   19778:	ldr	r2, [r4, #20]
   1977c:	b	195e0 <flatcc_json_printer_int64_enum_field@@Base+0xbc>
   19780:	mov	r2, sl
   19784:	mov	r1, #32
   19788:	bl	124bc <memset@plt>
   1978c:	ldr	r2, [r4, #20]
   19790:	add	r2, r2, sl
   19794:	str	r2, [r4, #20]
   19798:	b	195e0 <flatcc_json_printer_int64_enum_field@@Base+0xbc>
   1979c:	ldrb	r2, [r0, #28]
   197a0:	cmp	r2, #0
   197a4:	beq	19588 <flatcc_json_printer_int64_enum_field@@Base+0x64>
   197a8:	b	196c0 <flatcc_json_printer_int64_enum_field@@Base+0x19c>

000197ac <flatcc_json_printer_bool_enum_field@@Base>:
   197ac:	ldr	ip, [r1, #8]
   197b0:	add	r2, r2, #2
   197b4:	lsl	r2, r2, #1
   197b8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   197bc:	strd	r6, [sp, #8]
   197c0:	strd	r8, [sp, #16]
   197c4:	str	sl, [sp, #24]
   197c8:	cmp	r2, ip
   197cc:	str	lr, [sp, #28]
   197d0:	ldrb	lr, [sp, #36]	; 0x24
   197d4:	ldr	r7, [sp, #32]
   197d8:	ldr	r5, [sp, #40]	; 0x28
   197dc:	bge	19924 <flatcc_json_printer_bool_enum_field@@Base+0x178>
   197e0:	ldr	ip, [r1, #4]
   197e4:	ldrh	r2, [ip, r2]
   197e8:	cmp	r2, #0
   197ec:	beq	19924 <flatcc_json_printer_bool_enum_field@@Base+0x178>
   197f0:	ldr	ip, [r1]
   197f4:	cmn	ip, r2
   197f8:	beq	19924 <flatcc_json_printer_bool_enum_field@@Base+0x178>
   197fc:	ldrb	r6, [ip, r2]
   19800:	cmp	lr, r6
   19804:	beq	199dc <flatcc_json_printer_bool_enum_field@@Base+0x230>
   19808:	ldr	ip, [r1, #16]
   1980c:	ldr	r2, [r0, #20]
   19810:	cmp	ip, #0
   19814:	add	ip, ip, #1
   19818:	str	ip, [r1, #16]
   1981c:	beq	19834 <flatcc_json_printer_bool_enum_field@@Base+0x88>
   19820:	add	ip, r2, #1
   19824:	mov	r1, #44	; 0x2c
   19828:	str	ip, [r0, #20]
   1982c:	strb	r1, [r2]
   19830:	ldr	r2, [r0, #20]
   19834:	mov	r8, r3
   19838:	mov	r4, r0
   1983c:	ldrb	r1, [r0, #25]
   19840:	cmp	r1, #0
   19844:	bne	1997c <flatcc_json_printer_bool_enum_field@@Base+0x1d0>
   19848:	ldr	r3, [r0, #16]
   1984c:	cmp	r3, r2
   19850:	bhi	19860 <flatcc_json_printer_bool_enum_field@@Base+0xb4>
   19854:	ldr	r3, [r0, #44]	; 0x2c
   19858:	blx	r3
   1985c:	ldr	r2, [r4, #20]
   19860:	mov	r3, #34	; 0x22
   19864:	strb	r3, [r2]
   19868:	ldrb	r3, [r4, #26]
   1986c:	ldr	r2, [r4, #16]
   19870:	ldr	r0, [r4, #20]
   19874:	cmp	r3, #0
   19878:	addeq	r0, r0, #1
   1987c:	add	r3, r0, r7
   19880:	cmp	r2, r3
   19884:	str	r0, [r4, #20]
   19888:	bls	19964 <flatcc_json_printer_bool_enum_field@@Base+0x1b8>
   1988c:	mov	r2, r7
   19890:	mov	r1, r8
   19894:	bl	12420 <memcpy@plt>
   19898:	ldr	r3, [r4, #20]
   1989c:	add	r7, r3, r7
   198a0:	str	r7, [r4, #20]
   198a4:	mov	r3, #34	; 0x22
   198a8:	mov	ip, #58	; 0x3a
   198ac:	mov	r0, #32
   198b0:	strb	r3, [r7]
   198b4:	ldrb	r3, [r4, #26]
   198b8:	ldr	r1, [r4, #20]
   198bc:	clz	r3, r3
   198c0:	lsr	r3, r3, #5
   198c4:	add	r2, r1, r3
   198c8:	add	r2, r2, #1
   198cc:	str	r2, [r4, #20]
   198d0:	strb	ip, [r1, r3]
   198d4:	ldr	r3, [r4, #20]
   198d8:	strb	r0, [r3]
   198dc:	ldrb	r2, [r4, #25]
   198e0:	ldr	r1, [r4, #20]
   198e4:	ldrb	r3, [r4, #27]
   198e8:	cmp	r2, #0
   198ec:	addne	r1, r1, #1
   198f0:	cmp	r3, #0
   198f4:	str	r1, [r4, #20]
   198f8:	bne	19938 <flatcc_json_printer_bool_enum_field@@Base+0x18c>
   198fc:	mov	r1, r6
   19900:	mov	r0, r4
   19904:	ldrd	r6, [sp, #8]
   19908:	mov	r3, r5
   1990c:	ldrd	r4, [sp]
   19910:	ldrd	r8, [sp, #16]
   19914:	ldr	sl, [sp, #24]
   19918:	ldr	lr, [sp, #28]
   1991c:	add	sp, sp, #32
   19920:	bx	r3
   19924:	ldrb	r2, [r0, #29]
   19928:	cmp	r2, #0
   1992c:	beq	1994c <flatcc_json_printer_bool_enum_field@@Base+0x1a0>
   19930:	mov	r6, lr
   19934:	b	19808 <flatcc_json_printer_bool_enum_field@@Base+0x5c>
   19938:	mov	r0, r6
   1993c:	bl	150e0 <test_print@@Base+0x1644>
   19940:	ldr	r3, [r4, #20]
   19944:	add	r0, r3, r0
   19948:	str	r0, [r4, #20]
   1994c:	ldrd	r4, [sp]
   19950:	ldrd	r6, [sp, #8]
   19954:	ldrd	r8, [sp, #16]
   19958:	ldr	sl, [sp, #24]
   1995c:	add	sp, sp, #28
   19960:	pop	{pc}		; (ldr pc, [sp], #4)
   19964:	mov	r2, r7
   19968:	mov	r1, r8
   1996c:	mov	r0, r4
   19970:	bl	14c50 <test_print@@Base+0x11b4>
   19974:	ldr	r7, [r4, #20]
   19978:	b	198a4 <flatcc_json_printer_bool_enum_field@@Base+0xf8>
   1997c:	add	r1, r2, #1
   19980:	mov	r3, #10
   19984:	str	r1, [r0, #20]
   19988:	strb	r3, [r2]
   1998c:	ldrb	r3, [r0, #25]
   19990:	ldr	r2, [r4, #32]
   19994:	ldr	r1, [r0, #16]
   19998:	ldr	r0, [r0, #20]
   1999c:	mul	r9, r2, r3
   199a0:	add	r3, r0, r9
   199a4:	cmp	r1, r3
   199a8:	bcs	199c0 <flatcc_json_printer_bool_enum_field@@Base+0x214>
   199ac:	mov	r1, r9
   199b0:	mov	r0, r4
   199b4:	bl	14d14 <test_print@@Base+0x1278>
   199b8:	ldr	r2, [r4, #20]
   199bc:	b	19860 <flatcc_json_printer_bool_enum_field@@Base+0xb4>
   199c0:	mov	r2, r9
   199c4:	mov	r1, #32
   199c8:	bl	124bc <memset@plt>
   199cc:	ldr	r2, [r4, #20]
   199d0:	add	r2, r2, r9
   199d4:	str	r2, [r4, #20]
   199d8:	b	19860 <flatcc_json_printer_bool_enum_field@@Base+0xb4>
   199dc:	ldrb	r2, [r0, #28]
   199e0:	cmp	r2, #0
   199e4:	beq	19808 <flatcc_json_printer_bool_enum_field@@Base+0x5c>
   199e8:	b	1994c <flatcc_json_printer_bool_enum_field@@Base+0x1a0>

000199ec <flatcc_json_printer_uint8_struct_field@@Base>:
   199ec:	cmp	r1, #0
   199f0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   199f4:	mov	r4, r0
   199f8:	strd	r6, [sp, #8]
   199fc:	str	r8, [sp, #16]
   19a00:	str	lr, [sp, #20]
   19a04:	ldrb	r5, [r2, r3]
   19a08:	ldr	r2, [r0, #20]
   19a0c:	ldr	r6, [sp, #28]
   19a10:	beq	19a28 <flatcc_json_printer_uint8_struct_field@@Base+0x3c>
   19a14:	add	r1, r2, #1
   19a18:	mov	r3, #44	; 0x2c
   19a1c:	str	r1, [r0, #20]
   19a20:	strb	r3, [r2]
   19a24:	ldr	r2, [r0, #20]
   19a28:	ldrb	r1, [r4, #25]
   19a2c:	cmp	r1, #0
   19a30:	bne	19b1c <flatcc_json_printer_uint8_struct_field@@Base+0x130>
   19a34:	ldr	r3, [r4, #16]
   19a38:	cmp	r3, r2
   19a3c:	bhi	19a50 <flatcc_json_printer_uint8_struct_field@@Base+0x64>
   19a40:	mov	r0, r4
   19a44:	ldr	r3, [r4, #44]	; 0x2c
   19a48:	blx	r3
   19a4c:	ldr	r2, [r4, #20]
   19a50:	mov	r3, #34	; 0x22
   19a54:	ldr	r1, [sp, #24]
   19a58:	strb	r3, [r2]
   19a5c:	ldrb	r3, [r4, #26]
   19a60:	ldr	r2, [r4, #16]
   19a64:	ldr	r0, [r4, #20]
   19a68:	cmp	r3, #0
   19a6c:	addeq	r0, r0, #1
   19a70:	add	r3, r0, r6
   19a74:	cmp	r2, r3
   19a78:	mov	r2, r6
   19a7c:	str	r0, [r4, #20]
   19a80:	bhi	19b08 <flatcc_json_printer_uint8_struct_field@@Base+0x11c>
   19a84:	mov	r0, r4
   19a88:	bl	14c50 <test_print@@Base+0x11b4>
   19a8c:	ldr	r2, [r4, #20]
   19a90:	mov	r3, #34	; 0x22
   19a94:	mov	lr, #58	; 0x3a
   19a98:	mov	ip, #32
   19a9c:	mov	r0, r5
   19aa0:	strb	r3, [r2]
   19aa4:	ldrb	r3, [r4, #26]
   19aa8:	ldr	r1, [r4, #20]
   19aac:	clz	r3, r3
   19ab0:	lsr	r3, r3, #5
   19ab4:	add	r2, r1, r3
   19ab8:	add	r2, r2, #1
   19abc:	str	r2, [r4, #20]
   19ac0:	strb	lr, [r1, r3]
   19ac4:	ldr	r3, [r4, #20]
   19ac8:	strb	ip, [r3]
   19acc:	ldrb	r2, [r4, #25]
   19ad0:	ldr	r3, [r4, #20]
   19ad4:	cmp	r2, #0
   19ad8:	addne	r3, r3, #1
   19adc:	mov	r1, r3
   19ae0:	str	r3, [r4, #20]
   19ae4:	bl	14fac <test_print@@Base+0x1510>
   19ae8:	ldr	r3, [r4, #20]
   19aec:	ldrd	r6, [sp, #8]
   19af0:	ldr	r8, [sp, #16]
   19af4:	add	r0, r3, r0
   19af8:	str	r0, [r4, #20]
   19afc:	ldrd	r4, [sp]
   19b00:	add	sp, sp, #20
   19b04:	pop	{pc}		; (ldr pc, [sp], #4)
   19b08:	bl	12420 <memcpy@plt>
   19b0c:	ldr	r2, [r4, #20]
   19b10:	add	r2, r2, r6
   19b14:	str	r2, [r4, #20]
   19b18:	b	19a90 <flatcc_json_printer_uint8_struct_field@@Base+0xa4>
   19b1c:	add	r1, r2, #1
   19b20:	mov	r3, #10
   19b24:	str	r1, [r4, #20]
   19b28:	strb	r3, [r2]
   19b2c:	ldrb	r7, [r4, #25]
   19b30:	ldr	r1, [r4, #16]
   19b34:	ldr	r2, [r4, #32]
   19b38:	ldr	r0, [r4, #20]
   19b3c:	mul	r7, r2, r7
   19b40:	add	r3, r0, r7
   19b44:	cmp	r1, r3
   19b48:	bcs	19b60 <flatcc_json_printer_uint8_struct_field@@Base+0x174>
   19b4c:	mov	r1, r7
   19b50:	mov	r0, r4
   19b54:	bl	14d14 <test_print@@Base+0x1278>
   19b58:	ldr	r2, [r4, #20]
   19b5c:	b	19a50 <flatcc_json_printer_uint8_struct_field@@Base+0x64>
   19b60:	mov	r2, r7
   19b64:	mov	r1, #32
   19b68:	bl	124bc <memset@plt>
   19b6c:	ldr	r2, [r4, #20]
   19b70:	add	r2, r2, r7
   19b74:	str	r2, [r4, #20]
   19b78:	b	19a50 <flatcc_json_printer_uint8_struct_field@@Base+0x64>

00019b7c <flatcc_json_printer_uint16_struct_field@@Base>:
   19b7c:	cmp	r1, #0
   19b80:	strd	r4, [sp, #-24]!	; 0xffffffe8
   19b84:	mov	r4, r0
   19b88:	ldrh	r5, [r2, r3]
   19b8c:	ldr	r2, [r0, #20]
   19b90:	strd	r6, [sp, #8]
   19b94:	str	r8, [sp, #16]
   19b98:	str	lr, [sp, #20]
   19b9c:	ldr	r6, [sp, #28]
   19ba0:	beq	19bb8 <flatcc_json_printer_uint16_struct_field@@Base+0x3c>
   19ba4:	add	r1, r2, #1
   19ba8:	mov	r3, #44	; 0x2c
   19bac:	str	r1, [r0, #20]
   19bb0:	strb	r3, [r2]
   19bb4:	ldr	r2, [r0, #20]
   19bb8:	ldrb	r1, [r4, #25]
   19bbc:	cmp	r1, #0
   19bc0:	bne	19cac <flatcc_json_printer_uint16_struct_field@@Base+0x130>
   19bc4:	ldr	r3, [r4, #16]
   19bc8:	cmp	r3, r2
   19bcc:	bhi	19be0 <flatcc_json_printer_uint16_struct_field@@Base+0x64>
   19bd0:	mov	r0, r4
   19bd4:	ldr	r3, [r4, #44]	; 0x2c
   19bd8:	blx	r3
   19bdc:	ldr	r2, [r4, #20]
   19be0:	mov	r3, #34	; 0x22
   19be4:	ldr	r1, [sp, #24]
   19be8:	strb	r3, [r2]
   19bec:	ldrb	r3, [r4, #26]
   19bf0:	ldr	r2, [r4, #16]
   19bf4:	ldr	r0, [r4, #20]
   19bf8:	cmp	r3, #0
   19bfc:	addeq	r0, r0, #1
   19c00:	add	r3, r0, r6
   19c04:	cmp	r2, r3
   19c08:	mov	r2, r6
   19c0c:	str	r0, [r4, #20]
   19c10:	bhi	19c98 <flatcc_json_printer_uint16_struct_field@@Base+0x11c>
   19c14:	mov	r0, r4
   19c18:	bl	14c50 <test_print@@Base+0x11b4>
   19c1c:	ldr	r2, [r4, #20]
   19c20:	mov	r3, #34	; 0x22
   19c24:	mov	lr, #58	; 0x3a
   19c28:	mov	ip, #32
   19c2c:	mov	r0, r5
   19c30:	strb	r3, [r2]
   19c34:	ldrb	r3, [r4, #26]
   19c38:	ldr	r1, [r4, #20]
   19c3c:	clz	r3, r3
   19c40:	lsr	r3, r3, #5
   19c44:	add	r2, r1, r3
   19c48:	add	r2, r2, #1
   19c4c:	str	r2, [r4, #20]
   19c50:	strb	lr, [r1, r3]
   19c54:	ldr	r3, [r4, #20]
   19c58:	strb	ip, [r3]
   19c5c:	ldrb	r2, [r4, #25]
   19c60:	ldr	r3, [r4, #20]
   19c64:	cmp	r2, #0
   19c68:	addne	r3, r3, #1
   19c6c:	mov	r1, r3
   19c70:	str	r3, [r4, #20]
   19c74:	bl	13db8 <test_print@@Base+0x31c>
   19c78:	ldr	r3, [r4, #20]
   19c7c:	ldrd	r6, [sp, #8]
   19c80:	ldr	r8, [sp, #16]
   19c84:	add	r0, r3, r0
   19c88:	str	r0, [r4, #20]
   19c8c:	ldrd	r4, [sp]
   19c90:	add	sp, sp, #20
   19c94:	pop	{pc}		; (ldr pc, [sp], #4)
   19c98:	bl	12420 <memcpy@plt>
   19c9c:	ldr	r2, [r4, #20]
   19ca0:	add	r2, r2, r6
   19ca4:	str	r2, [r4, #20]
   19ca8:	b	19c20 <flatcc_json_printer_uint16_struct_field@@Base+0xa4>
   19cac:	add	r1, r2, #1
   19cb0:	mov	r3, #10
   19cb4:	str	r1, [r4, #20]
   19cb8:	strb	r3, [r2]
   19cbc:	ldrb	r7, [r4, #25]
   19cc0:	ldr	r1, [r4, #16]
   19cc4:	ldr	r2, [r4, #32]
   19cc8:	ldr	r0, [r4, #20]
   19ccc:	mul	r7, r2, r7
   19cd0:	add	r3, r0, r7
   19cd4:	cmp	r1, r3
   19cd8:	bcs	19cf0 <flatcc_json_printer_uint16_struct_field@@Base+0x174>
   19cdc:	mov	r1, r7
   19ce0:	mov	r0, r4
   19ce4:	bl	14d14 <test_print@@Base+0x1278>
   19ce8:	ldr	r2, [r4, #20]
   19cec:	b	19be0 <flatcc_json_printer_uint16_struct_field@@Base+0x64>
   19cf0:	mov	r2, r7
   19cf4:	mov	r1, #32
   19cf8:	bl	124bc <memset@plt>
   19cfc:	ldr	r2, [r4, #20]
   19d00:	add	r2, r2, r7
   19d04:	str	r2, [r4, #20]
   19d08:	b	19be0 <flatcc_json_printer_uint16_struct_field@@Base+0x64>

00019d0c <flatcc_json_printer_uint32_struct_field@@Base>:
   19d0c:	cmp	r1, #0
   19d10:	strd	r4, [sp, #-24]!	; 0xffffffe8
   19d14:	mov	r4, r0
   19d18:	ldr	r5, [r2, r3]
   19d1c:	ldr	r2, [r0, #20]
   19d20:	strd	r6, [sp, #8]
   19d24:	str	r8, [sp, #16]
   19d28:	str	lr, [sp, #20]
   19d2c:	ldr	r6, [sp, #28]
   19d30:	beq	19d48 <flatcc_json_printer_uint32_struct_field@@Base+0x3c>
   19d34:	add	r1, r2, #1
   19d38:	mov	r3, #44	; 0x2c
   19d3c:	str	r1, [r0, #20]
   19d40:	strb	r3, [r2]
   19d44:	ldr	r2, [r0, #20]
   19d48:	ldrb	r1, [r4, #25]
   19d4c:	cmp	r1, #0
   19d50:	bne	19e3c <flatcc_json_printer_uint32_struct_field@@Base+0x130>
   19d54:	ldr	r3, [r4, #16]
   19d58:	cmp	r3, r2
   19d5c:	bhi	19d70 <flatcc_json_printer_uint32_struct_field@@Base+0x64>
   19d60:	mov	r0, r4
   19d64:	ldr	r3, [r4, #44]	; 0x2c
   19d68:	blx	r3
   19d6c:	ldr	r2, [r4, #20]
   19d70:	mov	r3, #34	; 0x22
   19d74:	ldr	r1, [sp, #24]
   19d78:	strb	r3, [r2]
   19d7c:	ldrb	r3, [r4, #26]
   19d80:	ldr	r2, [r4, #16]
   19d84:	ldr	r0, [r4, #20]
   19d88:	cmp	r3, #0
   19d8c:	addeq	r0, r0, #1
   19d90:	add	r3, r0, r6
   19d94:	cmp	r2, r3
   19d98:	mov	r2, r6
   19d9c:	str	r0, [r4, #20]
   19da0:	bhi	19e28 <flatcc_json_printer_uint32_struct_field@@Base+0x11c>
   19da4:	mov	r0, r4
   19da8:	bl	14c50 <test_print@@Base+0x11b4>
   19dac:	ldr	r2, [r4, #20]
   19db0:	mov	r3, #34	; 0x22
   19db4:	mov	lr, #58	; 0x3a
   19db8:	mov	ip, #32
   19dbc:	mov	r0, r5
   19dc0:	strb	r3, [r2]
   19dc4:	ldrb	r3, [r4, #26]
   19dc8:	ldr	r1, [r4, #20]
   19dcc:	clz	r3, r3
   19dd0:	lsr	r3, r3, #5
   19dd4:	add	r2, r1, r3
   19dd8:	add	r2, r2, #1
   19ddc:	str	r2, [r4, #20]
   19de0:	strb	lr, [r1, r3]
   19de4:	ldr	r3, [r4, #20]
   19de8:	strb	ip, [r3]
   19dec:	ldrb	r2, [r4, #25]
   19df0:	ldr	r3, [r4, #20]
   19df4:	cmp	r2, #0
   19df8:	addne	r3, r3, #1
   19dfc:	mov	r1, r3
   19e00:	str	r3, [r4, #20]
   19e04:	bl	13f20 <test_print@@Base+0x484>
   19e08:	ldr	r3, [r4, #20]
   19e0c:	ldrd	r6, [sp, #8]
   19e10:	ldr	r8, [sp, #16]
   19e14:	add	r0, r3, r0
   19e18:	str	r0, [r4, #20]
   19e1c:	ldrd	r4, [sp]
   19e20:	add	sp, sp, #20
   19e24:	pop	{pc}		; (ldr pc, [sp], #4)
   19e28:	bl	12420 <memcpy@plt>
   19e2c:	ldr	r2, [r4, #20]
   19e30:	add	r2, r2, r6
   19e34:	str	r2, [r4, #20]
   19e38:	b	19db0 <flatcc_json_printer_uint32_struct_field@@Base+0xa4>
   19e3c:	add	r1, r2, #1
   19e40:	mov	r3, #10
   19e44:	str	r1, [r4, #20]
   19e48:	strb	r3, [r2]
   19e4c:	ldrb	r7, [r4, #25]
   19e50:	ldr	r1, [r4, #16]
   19e54:	ldr	r2, [r4, #32]
   19e58:	ldr	r0, [r4, #20]
   19e5c:	mul	r7, r2, r7
   19e60:	add	r3, r0, r7
   19e64:	cmp	r1, r3
   19e68:	bcs	19e80 <flatcc_json_printer_uint32_struct_field@@Base+0x174>
   19e6c:	mov	r1, r7
   19e70:	mov	r0, r4
   19e74:	bl	14d14 <test_print@@Base+0x1278>
   19e78:	ldr	r2, [r4, #20]
   19e7c:	b	19d70 <flatcc_json_printer_uint32_struct_field@@Base+0x64>
   19e80:	mov	r2, r7
   19e84:	mov	r1, #32
   19e88:	bl	124bc <memset@plt>
   19e8c:	ldr	r2, [r4, #20]
   19e90:	add	r2, r2, r7
   19e94:	str	r2, [r4, #20]
   19e98:	b	19d70 <flatcc_json_printer_uint32_struct_field@@Base+0x64>

00019e9c <flatcc_json_printer_uint64_struct_field@@Base>:
   19e9c:	cmp	r1, #0
   19ea0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   19ea4:	mov	r4, r0
   19ea8:	strd	r6, [sp, #8]
   19eac:	str	r8, [sp, #16]
   19eb0:	str	lr, [sp, #20]
   19eb4:	ldrd	r6, [r2, r3]
   19eb8:	ldr	r2, [r0, #20]
   19ebc:	ldr	r5, [sp, #28]
   19ec0:	beq	19ed8 <flatcc_json_printer_uint64_struct_field@@Base+0x3c>
   19ec4:	add	r1, r2, #1
   19ec8:	mov	r3, #44	; 0x2c
   19ecc:	str	r1, [r0, #20]
   19ed0:	strb	r3, [r2]
   19ed4:	ldr	r2, [r0, #20]
   19ed8:	ldrb	r1, [r4, #25]
   19edc:	cmp	r1, #0
   19ee0:	bne	19fd0 <flatcc_json_printer_uint64_struct_field@@Base+0x134>
   19ee4:	ldr	r3, [r4, #16]
   19ee8:	cmp	r3, r2
   19eec:	bhi	19f00 <flatcc_json_printer_uint64_struct_field@@Base+0x64>
   19ef0:	mov	r0, r4
   19ef4:	ldr	r3, [r4, #44]	; 0x2c
   19ef8:	blx	r3
   19efc:	ldr	r2, [r4, #20]
   19f00:	mov	r3, #34	; 0x22
   19f04:	ldr	r1, [sp, #24]
   19f08:	strb	r3, [r2]
   19f0c:	ldrb	r3, [r4, #26]
   19f10:	ldr	r2, [r4, #16]
   19f14:	ldr	r0, [r4, #20]
   19f18:	cmp	r3, #0
   19f1c:	addeq	r0, r0, #1
   19f20:	add	r3, r0, r5
   19f24:	cmp	r2, r3
   19f28:	mov	r2, r5
   19f2c:	str	r0, [r4, #20]
   19f30:	bhi	19fbc <flatcc_json_printer_uint64_struct_field@@Base+0x120>
   19f34:	mov	r0, r4
   19f38:	bl	14c50 <test_print@@Base+0x11b4>
   19f3c:	ldr	r2, [r4, #20]
   19f40:	mov	r3, #34	; 0x22
   19f44:	mov	r5, #58	; 0x3a
   19f48:	mov	lr, #32
   19f4c:	mov	r0, r6
   19f50:	strb	r3, [r2]
   19f54:	mov	r1, r7
   19f58:	ldrb	r3, [r4, #26]
   19f5c:	ldr	ip, [r4, #20]
   19f60:	clz	r3, r3
   19f64:	lsr	r3, r3, #5
   19f68:	add	r2, ip, r3
   19f6c:	add	r2, r2, #1
   19f70:	str	r2, [r4, #20]
   19f74:	strb	r5, [ip, r3]
   19f78:	ldr	r3, [r4, #20]
   19f7c:	strb	lr, [r3]
   19f80:	ldrb	r2, [r4, #25]
   19f84:	ldr	r3, [r4, #20]
   19f88:	cmp	r2, #0
   19f8c:	addne	r3, r3, #1
   19f90:	mov	r2, r3
   19f94:	str	r3, [r4, #20]
   19f98:	bl	1424c <test_print@@Base+0x7b0>
   19f9c:	ldr	r3, [r4, #20]
   19fa0:	ldrd	r6, [sp, #8]
   19fa4:	ldr	r8, [sp, #16]
   19fa8:	add	r0, r3, r0
   19fac:	str	r0, [r4, #20]
   19fb0:	ldrd	r4, [sp]
   19fb4:	add	sp, sp, #20
   19fb8:	pop	{pc}		; (ldr pc, [sp], #4)
   19fbc:	bl	12420 <memcpy@plt>
   19fc0:	ldr	r2, [r4, #20]
   19fc4:	add	r2, r2, r5
   19fc8:	str	r2, [r4, #20]
   19fcc:	b	19f40 <flatcc_json_printer_uint64_struct_field@@Base+0xa4>
   19fd0:	add	r1, r2, #1
   19fd4:	mov	r3, #10
   19fd8:	str	r1, [r4, #20]
   19fdc:	strb	r3, [r2]
   19fe0:	ldrb	r8, [r4, #25]
   19fe4:	ldr	r1, [r4, #16]
   19fe8:	ldr	r2, [r4, #32]
   19fec:	ldr	r0, [r4, #20]
   19ff0:	mul	r8, r2, r8
   19ff4:	add	r3, r0, r8
   19ff8:	cmp	r1, r3
   19ffc:	bcs	1a014 <flatcc_json_printer_uint64_struct_field@@Base+0x178>
   1a000:	mov	r1, r8
   1a004:	mov	r0, r4
   1a008:	bl	14d14 <test_print@@Base+0x1278>
   1a00c:	ldr	r2, [r4, #20]
   1a010:	b	19f00 <flatcc_json_printer_uint64_struct_field@@Base+0x64>
   1a014:	mov	r2, r8
   1a018:	mov	r1, #32
   1a01c:	bl	124bc <memset@plt>
   1a020:	ldr	r2, [r4, #20]
   1a024:	add	r2, r2, r8
   1a028:	str	r2, [r4, #20]
   1a02c:	b	19f00 <flatcc_json_printer_uint64_struct_field@@Base+0x64>

0001a030 <flatcc_json_printer_int8_struct_field@@Base>:
   1a030:	cmp	r1, #0
   1a034:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1a038:	mov	r4, r0
   1a03c:	strd	r6, [sp, #8]
   1a040:	str	r8, [sp, #16]
   1a044:	str	lr, [sp, #20]
   1a048:	ldrsb	r5, [r2, r3]
   1a04c:	ldr	r2, [r0, #20]
   1a050:	ldr	r6, [sp, #28]
   1a054:	beq	1a06c <flatcc_json_printer_int8_struct_field@@Base+0x3c>
   1a058:	add	r1, r2, #1
   1a05c:	mov	r3, #44	; 0x2c
   1a060:	str	r1, [r0, #20]
   1a064:	strb	r3, [r2]
   1a068:	ldr	r2, [r0, #20]
   1a06c:	ldrb	r1, [r4, #25]
   1a070:	cmp	r1, #0
   1a074:	bne	1a184 <flatcc_json_printer_int8_struct_field@@Base+0x154>
   1a078:	ldr	r3, [r4, #16]
   1a07c:	cmp	r3, r2
   1a080:	bhi	1a094 <flatcc_json_printer_int8_struct_field@@Base+0x64>
   1a084:	mov	r0, r4
   1a088:	ldr	r3, [r4, #44]	; 0x2c
   1a08c:	blx	r3
   1a090:	ldr	r2, [r4, #20]
   1a094:	mov	r3, #34	; 0x22
   1a098:	ldr	r1, [sp, #24]
   1a09c:	strb	r3, [r2]
   1a0a0:	ldrb	r3, [r4, #26]
   1a0a4:	ldr	r2, [r4, #16]
   1a0a8:	ldr	r0, [r4, #20]
   1a0ac:	cmp	r3, #0
   1a0b0:	addeq	r0, r0, #1
   1a0b4:	add	r3, r0, r6
   1a0b8:	cmp	r2, r3
   1a0bc:	mov	r2, r6
   1a0c0:	str	r0, [r4, #20]
   1a0c4:	bhi	1a170 <flatcc_json_printer_int8_struct_field@@Base+0x140>
   1a0c8:	mov	r0, r4
   1a0cc:	bl	14c50 <test_print@@Base+0x11b4>
   1a0d0:	ldr	r2, [r4, #20]
   1a0d4:	mov	r3, #34	; 0x22
   1a0d8:	mov	lr, #58	; 0x3a
   1a0dc:	lsr	r6, r5, #31
   1a0e0:	mov	ip, #32
   1a0e4:	uxtb	r0, r5
   1a0e8:	strb	r3, [r2]
   1a0ec:	ldrb	r3, [r4, #26]
   1a0f0:	ldr	r1, [r4, #20]
   1a0f4:	clz	r3, r3
   1a0f8:	lsr	r3, r3, #5
   1a0fc:	add	r2, r1, r3
   1a100:	add	r2, r2, #1
   1a104:	str	r2, [r4, #20]
   1a108:	strb	lr, [r1, r3]
   1a10c:	ldr	r3, [r4, #20]
   1a110:	strb	ip, [r3]
   1a114:	ldrb	r3, [r4, #25]
   1a118:	ldr	r2, [r4, #20]
   1a11c:	adds	r3, r3, #0
   1a120:	movne	r3, #1
   1a124:	cmp	r5, #0
   1a128:	add	r1, r2, r3
   1a12c:	str	r1, [r4, #20]
   1a130:	bge	1a148 <flatcc_json_printer_int8_struct_field@@Base+0x118>
   1a134:	rsb	r0, r0, #0
   1a138:	mov	ip, #45	; 0x2d
   1a13c:	add	r1, r1, #1
   1a140:	uxtb	r0, r0
   1a144:	strb	ip, [r2, r3]
   1a148:	bl	14fac <test_print@@Base+0x1510>
   1a14c:	ldr	r3, [r4, #20]
   1a150:	add	r0, r6, r0
   1a154:	ldrd	r6, [sp, #8]
   1a158:	ldr	r8, [sp, #16]
   1a15c:	add	r3, r3, r0
   1a160:	str	r3, [r4, #20]
   1a164:	ldrd	r4, [sp]
   1a168:	add	sp, sp, #20
   1a16c:	pop	{pc}		; (ldr pc, [sp], #4)
   1a170:	bl	12420 <memcpy@plt>
   1a174:	ldr	r2, [r4, #20]
   1a178:	add	r2, r2, r6
   1a17c:	str	r2, [r4, #20]
   1a180:	b	1a0d4 <flatcc_json_printer_int8_struct_field@@Base+0xa4>
   1a184:	add	r1, r2, #1
   1a188:	mov	r3, #10
   1a18c:	str	r1, [r4, #20]
   1a190:	strb	r3, [r2]
   1a194:	ldrb	r7, [r4, #25]
   1a198:	ldr	r1, [r4, #16]
   1a19c:	ldr	r2, [r4, #32]
   1a1a0:	ldr	r0, [r4, #20]
   1a1a4:	mul	r7, r2, r7
   1a1a8:	add	r3, r0, r7
   1a1ac:	cmp	r1, r3
   1a1b0:	bcs	1a1c8 <flatcc_json_printer_int8_struct_field@@Base+0x198>
   1a1b4:	mov	r1, r7
   1a1b8:	mov	r0, r4
   1a1bc:	bl	14d14 <test_print@@Base+0x1278>
   1a1c0:	ldr	r2, [r4, #20]
   1a1c4:	b	1a094 <flatcc_json_printer_int8_struct_field@@Base+0x64>
   1a1c8:	mov	r2, r7
   1a1cc:	mov	r1, #32
   1a1d0:	bl	124bc <memset@plt>
   1a1d4:	ldr	r2, [r4, #20]
   1a1d8:	add	r2, r2, r7
   1a1dc:	str	r2, [r4, #20]
   1a1e0:	b	1a094 <flatcc_json_printer_int8_struct_field@@Base+0x64>

0001a1e4 <flatcc_json_printer_int16_struct_field@@Base>:
   1a1e4:	cmp	r1, #0
   1a1e8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1a1ec:	mov	r4, r0
   1a1f0:	ldrsh	r5, [r2, r3]
   1a1f4:	ldr	r2, [r0, #20]
   1a1f8:	strd	r6, [sp, #8]
   1a1fc:	str	r8, [sp, #16]
   1a200:	str	lr, [sp, #20]
   1a204:	ldr	r6, [sp, #28]
   1a208:	beq	1a220 <flatcc_json_printer_int16_struct_field@@Base+0x3c>
   1a20c:	add	r1, r2, #1
   1a210:	mov	r3, #44	; 0x2c
   1a214:	str	r1, [r0, #20]
   1a218:	strb	r3, [r2]
   1a21c:	ldr	r2, [r0, #20]
   1a220:	ldrb	r1, [r4, #25]
   1a224:	cmp	r1, #0
   1a228:	bne	1a338 <flatcc_json_printer_int16_struct_field@@Base+0x154>
   1a22c:	ldr	r3, [r4, #16]
   1a230:	cmp	r3, r2
   1a234:	bhi	1a248 <flatcc_json_printer_int16_struct_field@@Base+0x64>
   1a238:	mov	r0, r4
   1a23c:	ldr	r3, [r4, #44]	; 0x2c
   1a240:	blx	r3
   1a244:	ldr	r2, [r4, #20]
   1a248:	mov	r3, #34	; 0x22
   1a24c:	ldr	r1, [sp, #24]
   1a250:	strb	r3, [r2]
   1a254:	ldrb	r3, [r4, #26]
   1a258:	ldr	r2, [r4, #16]
   1a25c:	ldr	r0, [r4, #20]
   1a260:	cmp	r3, #0
   1a264:	addeq	r0, r0, #1
   1a268:	add	r3, r0, r6
   1a26c:	cmp	r2, r3
   1a270:	mov	r2, r6
   1a274:	str	r0, [r4, #20]
   1a278:	bhi	1a324 <flatcc_json_printer_int16_struct_field@@Base+0x140>
   1a27c:	mov	r0, r4
   1a280:	bl	14c50 <test_print@@Base+0x11b4>
   1a284:	ldr	r2, [r4, #20]
   1a288:	mov	r3, #34	; 0x22
   1a28c:	mov	lr, #58	; 0x3a
   1a290:	lsr	r6, r5, #31
   1a294:	mov	ip, #32
   1a298:	uxth	r0, r5
   1a29c:	strb	r3, [r2]
   1a2a0:	ldrb	r3, [r4, #26]
   1a2a4:	ldr	r1, [r4, #20]
   1a2a8:	clz	r3, r3
   1a2ac:	lsr	r3, r3, #5
   1a2b0:	add	r2, r1, r3
   1a2b4:	add	r2, r2, #1
   1a2b8:	str	r2, [r4, #20]
   1a2bc:	strb	lr, [r1, r3]
   1a2c0:	ldr	r3, [r4, #20]
   1a2c4:	strb	ip, [r3]
   1a2c8:	ldrb	r3, [r4, #25]
   1a2cc:	ldr	r2, [r4, #20]
   1a2d0:	adds	r3, r3, #0
   1a2d4:	movne	r3, #1
   1a2d8:	cmp	r5, #0
   1a2dc:	add	r1, r2, r3
   1a2e0:	str	r1, [r4, #20]
   1a2e4:	bge	1a2fc <flatcc_json_printer_int16_struct_field@@Base+0x118>
   1a2e8:	rsb	r0, r0, #0
   1a2ec:	mov	ip, #45	; 0x2d
   1a2f0:	add	r1, r1, #1
   1a2f4:	uxth	r0, r0
   1a2f8:	strb	ip, [r2, r3]
   1a2fc:	bl	13db8 <test_print@@Base+0x31c>
   1a300:	ldr	r3, [r4, #20]
   1a304:	add	r0, r6, r0
   1a308:	ldrd	r6, [sp, #8]
   1a30c:	ldr	r8, [sp, #16]
   1a310:	add	r3, r3, r0
   1a314:	str	r3, [r4, #20]
   1a318:	ldrd	r4, [sp]
   1a31c:	add	sp, sp, #20
   1a320:	pop	{pc}		; (ldr pc, [sp], #4)
   1a324:	bl	12420 <memcpy@plt>
   1a328:	ldr	r2, [r4, #20]
   1a32c:	add	r2, r2, r6
   1a330:	str	r2, [r4, #20]
   1a334:	b	1a288 <flatcc_json_printer_int16_struct_field@@Base+0xa4>
   1a338:	add	r1, r2, #1
   1a33c:	mov	r3, #10
   1a340:	str	r1, [r4, #20]
   1a344:	strb	r3, [r2]
   1a348:	ldrb	r7, [r4, #25]
   1a34c:	ldr	r1, [r4, #16]
   1a350:	ldr	r2, [r4, #32]
   1a354:	ldr	r0, [r4, #20]
   1a358:	mul	r7, r2, r7
   1a35c:	add	r3, r0, r7
   1a360:	cmp	r1, r3
   1a364:	bcs	1a37c <flatcc_json_printer_int16_struct_field@@Base+0x198>
   1a368:	mov	r1, r7
   1a36c:	mov	r0, r4
   1a370:	bl	14d14 <test_print@@Base+0x1278>
   1a374:	ldr	r2, [r4, #20]
   1a378:	b	1a248 <flatcc_json_printer_int16_struct_field@@Base+0x64>
   1a37c:	mov	r2, r7
   1a380:	mov	r1, #32
   1a384:	bl	124bc <memset@plt>
   1a388:	ldr	r2, [r4, #20]
   1a38c:	add	r2, r2, r7
   1a390:	str	r2, [r4, #20]
   1a394:	b	1a248 <flatcc_json_printer_int16_struct_field@@Base+0x64>

0001a398 <flatcc_json_printer_int32_struct_field@@Base>:
   1a398:	cmp	r1, #0
   1a39c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1a3a0:	mov	r4, r0
   1a3a4:	ldr	r5, [r2, r3]
   1a3a8:	ldr	r2, [r0, #20]
   1a3ac:	strd	r6, [sp, #8]
   1a3b0:	str	r8, [sp, #16]
   1a3b4:	str	lr, [sp, #20]
   1a3b8:	ldr	r6, [sp, #28]
   1a3bc:	beq	1a3d4 <flatcc_json_printer_int32_struct_field@@Base+0x3c>
   1a3c0:	add	r1, r2, #1
   1a3c4:	mov	r3, #44	; 0x2c
   1a3c8:	str	r1, [r0, #20]
   1a3cc:	strb	r3, [r2]
   1a3d0:	ldr	r2, [r0, #20]
   1a3d4:	ldrb	r1, [r4, #25]
   1a3d8:	cmp	r1, #0
   1a3dc:	bne	1a4e8 <flatcc_json_printer_int32_struct_field@@Base+0x150>
   1a3e0:	ldr	r3, [r4, #16]
   1a3e4:	cmp	r3, r2
   1a3e8:	bhi	1a3fc <flatcc_json_printer_int32_struct_field@@Base+0x64>
   1a3ec:	mov	r0, r4
   1a3f0:	ldr	r3, [r4, #44]	; 0x2c
   1a3f4:	blx	r3
   1a3f8:	ldr	r2, [r4, #20]
   1a3fc:	mov	r3, #34	; 0x22
   1a400:	ldr	r1, [sp, #24]
   1a404:	strb	r3, [r2]
   1a408:	ldrb	r3, [r4, #26]
   1a40c:	ldr	r2, [r4, #16]
   1a410:	ldr	r0, [r4, #20]
   1a414:	cmp	r3, #0
   1a418:	addeq	r0, r0, #1
   1a41c:	add	r3, r0, r6
   1a420:	cmp	r2, r3
   1a424:	mov	r2, r6
   1a428:	str	r0, [r4, #20]
   1a42c:	bhi	1a4d4 <flatcc_json_printer_int32_struct_field@@Base+0x13c>
   1a430:	mov	r0, r4
   1a434:	bl	14c50 <test_print@@Base+0x11b4>
   1a438:	ldr	r2, [r4, #20]
   1a43c:	mov	r3, #34	; 0x22
   1a440:	mov	ip, #58	; 0x3a
   1a444:	lsr	r6, r5, #31
   1a448:	mov	r0, #32
   1a44c:	strb	r3, [r2]
   1a450:	ldrb	r3, [r4, #26]
   1a454:	ldr	r1, [r4, #20]
   1a458:	clz	r3, r3
   1a45c:	lsr	r3, r3, #5
   1a460:	add	r2, r1, r3
   1a464:	add	r2, r2, #1
   1a468:	str	r2, [r4, #20]
   1a46c:	strb	ip, [r1, r3]
   1a470:	ldr	r3, [r4, #20]
   1a474:	strb	r0, [r3]
   1a478:	ldrb	r3, [r4, #25]
   1a47c:	ldr	r2, [r4, #20]
   1a480:	adds	r3, r3, #0
   1a484:	movne	r3, #1
   1a488:	cmp	r5, #0
   1a48c:	add	r1, r2, r3
   1a490:	str	r1, [r4, #20]
   1a494:	bge	1a4a8 <flatcc_json_printer_int32_struct_field@@Base+0x110>
   1a498:	mov	r0, #45	; 0x2d
   1a49c:	rsb	r5, r5, #0
   1a4a0:	add	r1, r1, #1
   1a4a4:	strb	r0, [r2, r3]
   1a4a8:	mov	r0, r5
   1a4ac:	bl	13f20 <test_print@@Base+0x484>
   1a4b0:	ldr	r3, [r4, #20]
   1a4b4:	add	r0, r6, r0
   1a4b8:	ldrd	r6, [sp, #8]
   1a4bc:	ldr	r8, [sp, #16]
   1a4c0:	add	r3, r3, r0
   1a4c4:	str	r3, [r4, #20]
   1a4c8:	ldrd	r4, [sp]
   1a4cc:	add	sp, sp, #20
   1a4d0:	pop	{pc}		; (ldr pc, [sp], #4)
   1a4d4:	bl	12420 <memcpy@plt>
   1a4d8:	ldr	r2, [r4, #20]
   1a4dc:	add	r2, r2, r6
   1a4e0:	str	r2, [r4, #20]
   1a4e4:	b	1a43c <flatcc_json_printer_int32_struct_field@@Base+0xa4>
   1a4e8:	add	r1, r2, #1
   1a4ec:	mov	r3, #10
   1a4f0:	str	r1, [r4, #20]
   1a4f4:	strb	r3, [r2]
   1a4f8:	ldrb	r7, [r4, #25]
   1a4fc:	ldr	r1, [r4, #16]
   1a500:	ldr	r2, [r4, #32]
   1a504:	ldr	r0, [r4, #20]
   1a508:	mul	r7, r2, r7
   1a50c:	add	r3, r0, r7
   1a510:	cmp	r1, r3
   1a514:	bcs	1a52c <flatcc_json_printer_int32_struct_field@@Base+0x194>
   1a518:	mov	r1, r7
   1a51c:	mov	r0, r4
   1a520:	bl	14d14 <test_print@@Base+0x1278>
   1a524:	ldr	r2, [r4, #20]
   1a528:	b	1a3fc <flatcc_json_printer_int32_struct_field@@Base+0x64>
   1a52c:	mov	r2, r7
   1a530:	mov	r1, #32
   1a534:	bl	124bc <memset@plt>
   1a538:	ldr	r2, [r4, #20]
   1a53c:	add	r2, r2, r7
   1a540:	str	r2, [r4, #20]
   1a544:	b	1a3fc <flatcc_json_printer_int32_struct_field@@Base+0x64>

0001a548 <flatcc_json_printer_int64_struct_field@@Base>:
   1a548:	cmp	r1, #0
   1a54c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1a550:	mov	r4, r0
   1a554:	strd	r6, [sp, #8]
   1a558:	str	r8, [sp, #16]
   1a55c:	str	lr, [sp, #20]
   1a560:	ldrd	r6, [r2, r3]
   1a564:	ldr	r2, [r0, #20]
   1a568:	ldr	r5, [sp, #28]
   1a56c:	beq	1a584 <flatcc_json_printer_int64_struct_field@@Base+0x3c>
   1a570:	add	r1, r2, #1
   1a574:	mov	r3, #44	; 0x2c
   1a578:	str	r1, [r0, #20]
   1a57c:	strb	r3, [r2]
   1a580:	ldr	r2, [r0, #20]
   1a584:	ldrb	r1, [r4, #25]
   1a588:	cmp	r1, #0
   1a58c:	bne	1a6a4 <flatcc_json_printer_int64_struct_field@@Base+0x15c>
   1a590:	ldr	r3, [r4, #16]
   1a594:	cmp	r3, r2
   1a598:	bhi	1a5ac <flatcc_json_printer_int64_struct_field@@Base+0x64>
   1a59c:	mov	r0, r4
   1a5a0:	ldr	r3, [r4, #44]	; 0x2c
   1a5a4:	blx	r3
   1a5a8:	ldr	r2, [r4, #20]
   1a5ac:	mov	r3, #34	; 0x22
   1a5b0:	ldr	r1, [sp, #24]
   1a5b4:	strb	r3, [r2]
   1a5b8:	ldrb	r3, [r4, #26]
   1a5bc:	ldr	r2, [r4, #16]
   1a5c0:	ldr	r0, [r4, #20]
   1a5c4:	cmp	r3, #0
   1a5c8:	addeq	r0, r0, #1
   1a5cc:	add	r3, r0, r5
   1a5d0:	cmp	r2, r3
   1a5d4:	mov	r2, r5
   1a5d8:	str	r0, [r4, #20]
   1a5dc:	bhi	1a690 <flatcc_json_printer_int64_struct_field@@Base+0x148>
   1a5e0:	mov	r0, r4
   1a5e4:	bl	14c50 <test_print@@Base+0x11b4>
   1a5e8:	ldr	r2, [r4, #20]
   1a5ec:	mov	r3, #34	; 0x22
   1a5f0:	mov	ip, #58	; 0x3a
   1a5f4:	lsr	r5, r7, #31
   1a5f8:	mov	r0, #32
   1a5fc:	strb	r3, [r2]
   1a600:	ldrb	r3, [r4, #26]
   1a604:	ldr	r1, [r4, #20]
   1a608:	clz	r3, r3
   1a60c:	lsr	r3, r3, #5
   1a610:	add	r2, r1, r3
   1a614:	add	r2, r2, #1
   1a618:	str	r2, [r4, #20]
   1a61c:	strb	ip, [r1, r3]
   1a620:	ldr	r3, [r4, #20]
   1a624:	strb	r0, [r3]
   1a628:	ldrb	r3, [r4, #25]
   1a62c:	ldr	r1, [r4, #20]
   1a630:	adds	r3, r3, #0
   1a634:	movne	r3, #1
   1a638:	cmp	r6, #0
   1a63c:	sbcs	r2, r7, #0
   1a640:	add	r2, r1, r3
   1a644:	str	r2, [r4, #20]
   1a648:	bge	1a660 <flatcc_json_printer_int64_struct_field@@Base+0x118>
   1a64c:	rsbs	r6, r6, #0
   1a650:	mov	r0, #45	; 0x2d
   1a654:	rsc	r7, r7, #0
   1a658:	add	r2, r2, #1
   1a65c:	strb	r0, [r1, r3]
   1a660:	mov	r0, r6
   1a664:	mov	r1, r7
   1a668:	bl	1424c <test_print@@Base+0x7b0>
   1a66c:	ldr	r3, [r4, #20]
   1a670:	add	r0, r5, r0
   1a674:	ldrd	r6, [sp, #8]
   1a678:	ldr	r8, [sp, #16]
   1a67c:	add	r3, r3, r0
   1a680:	str	r3, [r4, #20]
   1a684:	ldrd	r4, [sp]
   1a688:	add	sp, sp, #20
   1a68c:	pop	{pc}		; (ldr pc, [sp], #4)
   1a690:	bl	12420 <memcpy@plt>
   1a694:	ldr	r2, [r4, #20]
   1a698:	add	r2, r2, r5
   1a69c:	str	r2, [r4, #20]
   1a6a0:	b	1a5ec <flatcc_json_printer_int64_struct_field@@Base+0xa4>
   1a6a4:	add	r1, r2, #1
   1a6a8:	mov	r3, #10
   1a6ac:	str	r1, [r4, #20]
   1a6b0:	strb	r3, [r2]
   1a6b4:	ldrb	r8, [r4, #25]
   1a6b8:	ldr	r1, [r4, #16]
   1a6bc:	ldr	r2, [r4, #32]
   1a6c0:	ldr	r0, [r4, #20]
   1a6c4:	mul	r8, r2, r8
   1a6c8:	add	r3, r0, r8
   1a6cc:	cmp	r1, r3
   1a6d0:	bcs	1a6e8 <flatcc_json_printer_int64_struct_field@@Base+0x1a0>
   1a6d4:	mov	r1, r8
   1a6d8:	mov	r0, r4
   1a6dc:	bl	14d14 <test_print@@Base+0x1278>
   1a6e0:	ldr	r2, [r4, #20]
   1a6e4:	b	1a5ac <flatcc_json_printer_int64_struct_field@@Base+0x64>
   1a6e8:	mov	r2, r8
   1a6ec:	mov	r1, #32
   1a6f0:	bl	124bc <memset@plt>
   1a6f4:	ldr	r2, [r4, #20]
   1a6f8:	add	r2, r2, r8
   1a6fc:	str	r2, [r4, #20]
   1a700:	b	1a5ac <flatcc_json_printer_int64_struct_field@@Base+0x64>

0001a704 <flatcc_json_printer_bool_struct_field@@Base>:
   1a704:	cmp	r1, #0
   1a708:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1a70c:	mov	r4, r0
   1a710:	strd	r6, [sp, #8]
   1a714:	str	r8, [sp, #16]
   1a718:	str	lr, [sp, #20]
   1a71c:	ldrb	r5, [r2, r3]
   1a720:	ldr	r2, [r0, #20]
   1a724:	ldr	r6, [sp, #28]
   1a728:	beq	1a740 <flatcc_json_printer_bool_struct_field@@Base+0x3c>
   1a72c:	add	r1, r2, #1
   1a730:	mov	r3, #44	; 0x2c
   1a734:	str	r1, [r0, #20]
   1a738:	strb	r3, [r2]
   1a73c:	ldr	r2, [r0, #20]
   1a740:	ldrb	r1, [r4, #25]
   1a744:	cmp	r1, #0
   1a748:	bne	1a834 <flatcc_json_printer_bool_struct_field@@Base+0x130>
   1a74c:	ldr	r3, [r4, #16]
   1a750:	cmp	r3, r2
   1a754:	bhi	1a768 <flatcc_json_printer_bool_struct_field@@Base+0x64>
   1a758:	mov	r0, r4
   1a75c:	ldr	r3, [r4, #44]	; 0x2c
   1a760:	blx	r3
   1a764:	ldr	r2, [r4, #20]
   1a768:	mov	r3, #34	; 0x22
   1a76c:	ldr	r1, [sp, #24]
   1a770:	strb	r3, [r2]
   1a774:	ldrb	r3, [r4, #26]
   1a778:	ldr	r2, [r4, #16]
   1a77c:	ldr	r0, [r4, #20]
   1a780:	cmp	r3, #0
   1a784:	addeq	r0, r0, #1
   1a788:	add	r3, r0, r6
   1a78c:	cmp	r2, r3
   1a790:	mov	r2, r6
   1a794:	str	r0, [r4, #20]
   1a798:	bhi	1a820 <flatcc_json_printer_bool_struct_field@@Base+0x11c>
   1a79c:	mov	r0, r4
   1a7a0:	bl	14c50 <test_print@@Base+0x11b4>
   1a7a4:	ldr	r2, [r4, #20]
   1a7a8:	mov	r3, #34	; 0x22
   1a7ac:	mov	lr, #58	; 0x3a
   1a7b0:	mov	ip, #32
   1a7b4:	mov	r0, r5
   1a7b8:	strb	r3, [r2]
   1a7bc:	ldrb	r3, [r4, #26]
   1a7c0:	ldr	r1, [r4, #20]
   1a7c4:	clz	r3, r3
   1a7c8:	lsr	r3, r3, #5
   1a7cc:	add	r2, r1, r3
   1a7d0:	add	r2, r2, #1
   1a7d4:	str	r2, [r4, #20]
   1a7d8:	strb	lr, [r1, r3]
   1a7dc:	ldr	r3, [r4, #20]
   1a7e0:	strb	ip, [r3]
   1a7e4:	ldrb	r2, [r4, #25]
   1a7e8:	ldr	r3, [r4, #20]
   1a7ec:	cmp	r2, #0
   1a7f0:	addne	r3, r3, #1
   1a7f4:	mov	r1, r3
   1a7f8:	str	r3, [r4, #20]
   1a7fc:	bl	150e0 <test_print@@Base+0x1644>
   1a800:	ldr	r3, [r4, #20]
   1a804:	ldrd	r6, [sp, #8]
   1a808:	ldr	r8, [sp, #16]
   1a80c:	add	r0, r3, r0
   1a810:	str	r0, [r4, #20]
   1a814:	ldrd	r4, [sp]
   1a818:	add	sp, sp, #20
   1a81c:	pop	{pc}		; (ldr pc, [sp], #4)
   1a820:	bl	12420 <memcpy@plt>
   1a824:	ldr	r2, [r4, #20]
   1a828:	add	r2, r2, r6
   1a82c:	str	r2, [r4, #20]
   1a830:	b	1a7a8 <flatcc_json_printer_bool_struct_field@@Base+0xa4>
   1a834:	add	r1, r2, #1
   1a838:	mov	r3, #10
   1a83c:	str	r1, [r4, #20]
   1a840:	strb	r3, [r2]
   1a844:	ldrb	r7, [r4, #25]
   1a848:	ldr	r1, [r4, #16]
   1a84c:	ldr	r2, [r4, #32]
   1a850:	ldr	r0, [r4, #20]
   1a854:	mul	r7, r2, r7
   1a858:	add	r3, r0, r7
   1a85c:	cmp	r1, r3
   1a860:	bcs	1a878 <flatcc_json_printer_bool_struct_field@@Base+0x174>
   1a864:	mov	r1, r7
   1a868:	mov	r0, r4
   1a86c:	bl	14d14 <test_print@@Base+0x1278>
   1a870:	ldr	r2, [r4, #20]
   1a874:	b	1a768 <flatcc_json_printer_bool_struct_field@@Base+0x64>
   1a878:	mov	r2, r7
   1a87c:	mov	r1, #32
   1a880:	bl	124bc <memset@plt>
   1a884:	ldr	r2, [r4, #20]
   1a888:	add	r2, r2, r7
   1a88c:	str	r2, [r4, #20]
   1a890:	b	1a768 <flatcc_json_printer_bool_struct_field@@Base+0x64>

0001a894 <flatcc_json_printer_float_struct_field@@Base>:
   1a894:	add	r3, r2, r3
   1a898:	cmp	r1, #0
   1a89c:	strd	r4, [sp, #-16]!
   1a8a0:	ldr	r2, [r0, #20]
   1a8a4:	mov	r4, r0
   1a8a8:	str	r6, [sp, #8]
   1a8ac:	str	lr, [sp, #12]
   1a8b0:	vpush	{d8}
   1a8b4:	vldr	s16, [r3]
   1a8b8:	ldr	r5, [sp, #28]
   1a8bc:	beq	1a8d4 <flatcc_json_printer_float_struct_field@@Base+0x40>
   1a8c0:	add	r1, r2, #1
   1a8c4:	mov	r3, #44	; 0x2c
   1a8c8:	str	r1, [r0, #20]
   1a8cc:	strb	r3, [r2]
   1a8d0:	ldr	r2, [r0, #20]
   1a8d4:	ldrb	r1, [r4, #25]
   1a8d8:	cmp	r1, #0
   1a8dc:	bne	1a9c8 <flatcc_json_printer_float_struct_field@@Base+0x134>
   1a8e0:	ldr	r3, [r4, #16]
   1a8e4:	cmp	r3, r2
   1a8e8:	bhi	1a8fc <flatcc_json_printer_float_struct_field@@Base+0x68>
   1a8ec:	mov	r0, r4
   1a8f0:	ldr	r3, [r4, #44]	; 0x2c
   1a8f4:	blx	r3
   1a8f8:	ldr	r2, [r4, #20]
   1a8fc:	mov	r3, #34	; 0x22
   1a900:	ldr	r1, [sp, #24]
   1a904:	strb	r3, [r2]
   1a908:	ldrb	r3, [r4, #26]
   1a90c:	ldr	r2, [r4, #16]
   1a910:	ldr	r0, [r4, #20]
   1a914:	cmp	r3, #0
   1a918:	addeq	r0, r0, #1
   1a91c:	add	r3, r0, r5
   1a920:	cmp	r2, r3
   1a924:	mov	r2, r5
   1a928:	str	r0, [r4, #20]
   1a92c:	bhi	1a9b4 <flatcc_json_printer_float_struct_field@@Base+0x120>
   1a930:	mov	r0, r4
   1a934:	bl	14c50 <test_print@@Base+0x11b4>
   1a938:	ldr	r2, [r4, #20]
   1a93c:	mov	r3, #34	; 0x22
   1a940:	mov	ip, #58	; 0x3a
   1a944:	vcvt.f64.f32	d0, s16
   1a948:	mov	r0, #32
   1a94c:	strb	r3, [r2]
   1a950:	ldrb	r3, [r4, #26]
   1a954:	ldr	r1, [r4, #20]
   1a958:	clz	r3, r3
   1a95c:	lsr	r3, r3, #5
   1a960:	add	r2, r1, r3
   1a964:	add	r2, r2, #1
   1a968:	str	r2, [r4, #20]
   1a96c:	strb	ip, [r1, r3]
   1a970:	ldr	r3, [r4, #20]
   1a974:	strb	r0, [r3]
   1a978:	ldrb	r2, [r4, #25]
   1a97c:	ldr	r3, [r4, #20]
   1a980:	cmp	r2, #0
   1a984:	addne	r3, r3, #1
   1a988:	mov	r0, r3
   1a98c:	str	r3, [r4, #20]
   1a990:	bl	153a0 <test_print@@Base+0x1904>
   1a994:	ldr	r3, [r4, #20]
   1a998:	vpop	{d8}
   1a99c:	add	r0, r3, r0
   1a9a0:	ldr	r6, [sp, #8]
   1a9a4:	str	r0, [r4, #20]
   1a9a8:	ldrd	r4, [sp]
   1a9ac:	add	sp, sp, #12
   1a9b0:	pop	{pc}		; (ldr pc, [sp], #4)
   1a9b4:	bl	12420 <memcpy@plt>
   1a9b8:	ldr	r2, [r4, #20]
   1a9bc:	add	r2, r2, r5
   1a9c0:	str	r2, [r4, #20]
   1a9c4:	b	1a93c <flatcc_json_printer_float_struct_field@@Base+0xa8>
   1a9c8:	add	r1, r2, #1
   1a9cc:	mov	r3, #10
   1a9d0:	str	r1, [r4, #20]
   1a9d4:	strb	r3, [r2]
   1a9d8:	ldrb	r6, [r4, #25]
   1a9dc:	ldr	r1, [r4, #16]
   1a9e0:	ldr	r2, [r4, #32]
   1a9e4:	ldr	r0, [r4, #20]
   1a9e8:	mul	r6, r2, r6
   1a9ec:	add	r3, r0, r6
   1a9f0:	cmp	r1, r3
   1a9f4:	bcs	1aa0c <flatcc_json_printer_float_struct_field@@Base+0x178>
   1a9f8:	mov	r1, r6
   1a9fc:	mov	r0, r4
   1aa00:	bl	14d14 <test_print@@Base+0x1278>
   1aa04:	ldr	r2, [r4, #20]
   1aa08:	b	1a8fc <flatcc_json_printer_float_struct_field@@Base+0x68>
   1aa0c:	mov	r2, r6
   1aa10:	mov	r1, #32
   1aa14:	bl	124bc <memset@plt>
   1aa18:	ldr	r2, [r4, #20]
   1aa1c:	add	r2, r2, r6
   1aa20:	str	r2, [r4, #20]
   1aa24:	b	1a8fc <flatcc_json_printer_float_struct_field@@Base+0x68>

0001aa28 <flatcc_json_printer_double_struct_field@@Base>:
   1aa28:	add	r3, r2, r3
   1aa2c:	cmp	r1, #0
   1aa30:	strd	r4, [sp, #-16]!
   1aa34:	ldr	r2, [r0, #20]
   1aa38:	mov	r4, r0
   1aa3c:	str	r6, [sp, #8]
   1aa40:	str	lr, [sp, #12]
   1aa44:	vpush	{d8}
   1aa48:	vldr	d8, [r3]
   1aa4c:	ldr	r5, [sp, #28]
   1aa50:	beq	1aa68 <flatcc_json_printer_double_struct_field@@Base+0x40>
   1aa54:	add	r1, r2, #1
   1aa58:	mov	r3, #44	; 0x2c
   1aa5c:	str	r1, [r0, #20]
   1aa60:	strb	r3, [r2]
   1aa64:	ldr	r2, [r0, #20]
   1aa68:	ldrb	r1, [r4, #25]
   1aa6c:	cmp	r1, #0
   1aa70:	bne	1ab5c <flatcc_json_printer_double_struct_field@@Base+0x134>
   1aa74:	ldr	r3, [r4, #16]
   1aa78:	cmp	r3, r2
   1aa7c:	bhi	1aa90 <flatcc_json_printer_double_struct_field@@Base+0x68>
   1aa80:	mov	r0, r4
   1aa84:	ldr	r3, [r4, #44]	; 0x2c
   1aa88:	blx	r3
   1aa8c:	ldr	r2, [r4, #20]
   1aa90:	mov	r3, #34	; 0x22
   1aa94:	ldr	r1, [sp, #24]
   1aa98:	strb	r3, [r2]
   1aa9c:	ldrb	r3, [r4, #26]
   1aaa0:	ldr	r2, [r4, #16]
   1aaa4:	ldr	r0, [r4, #20]
   1aaa8:	cmp	r3, #0
   1aaac:	addeq	r0, r0, #1
   1aab0:	add	r3, r0, r5
   1aab4:	cmp	r2, r3
   1aab8:	mov	r2, r5
   1aabc:	str	r0, [r4, #20]
   1aac0:	bhi	1ab48 <flatcc_json_printer_double_struct_field@@Base+0x120>
   1aac4:	mov	r0, r4
   1aac8:	bl	14c50 <test_print@@Base+0x11b4>
   1aacc:	ldr	r2, [r4, #20]
   1aad0:	mov	r3, #34	; 0x22
   1aad4:	mov	ip, #58	; 0x3a
   1aad8:	vmov.f64	d0, d8
   1aadc:	mov	r0, #32
   1aae0:	strb	r3, [r2]
   1aae4:	ldrb	r3, [r4, #26]
   1aae8:	ldr	r1, [r4, #20]
   1aaec:	clz	r3, r3
   1aaf0:	lsr	r3, r3, #5
   1aaf4:	add	r2, r1, r3
   1aaf8:	add	r2, r2, #1
   1aafc:	str	r2, [r4, #20]
   1ab00:	strb	ip, [r1, r3]
   1ab04:	ldr	r3, [r4, #20]
   1ab08:	strb	r0, [r3]
   1ab0c:	ldrb	r2, [r4, #25]
   1ab10:	ldr	r3, [r4, #20]
   1ab14:	cmp	r2, #0
   1ab18:	addne	r3, r3, #1
   1ab1c:	mov	r0, r3
   1ab20:	str	r3, [r4, #20]
   1ab24:	bl	153a0 <test_print@@Base+0x1904>
   1ab28:	ldr	r3, [r4, #20]
   1ab2c:	vpop	{d8}
   1ab30:	add	r0, r3, r0
   1ab34:	ldr	r6, [sp, #8]
   1ab38:	str	r0, [r4, #20]
   1ab3c:	ldrd	r4, [sp]
   1ab40:	add	sp, sp, #12
   1ab44:	pop	{pc}		; (ldr pc, [sp], #4)
   1ab48:	bl	12420 <memcpy@plt>
   1ab4c:	ldr	r2, [r4, #20]
   1ab50:	add	r2, r2, r5
   1ab54:	str	r2, [r4, #20]
   1ab58:	b	1aad0 <flatcc_json_printer_double_struct_field@@Base+0xa8>
   1ab5c:	add	r1, r2, #1
   1ab60:	mov	r3, #10
   1ab64:	str	r1, [r4, #20]
   1ab68:	strb	r3, [r2]
   1ab6c:	ldrb	r6, [r4, #25]
   1ab70:	ldr	r1, [r4, #16]
   1ab74:	ldr	r2, [r4, #32]
   1ab78:	ldr	r0, [r4, #20]
   1ab7c:	mul	r6, r2, r6
   1ab80:	add	r3, r0, r6
   1ab84:	cmp	r1, r3
   1ab88:	bcs	1aba0 <flatcc_json_printer_double_struct_field@@Base+0x178>
   1ab8c:	mov	r1, r6
   1ab90:	mov	r0, r4
   1ab94:	bl	14d14 <test_print@@Base+0x1278>
   1ab98:	ldr	r2, [r4, #20]
   1ab9c:	b	1aa90 <flatcc_json_printer_double_struct_field@@Base+0x68>
   1aba0:	mov	r2, r6
   1aba4:	mov	r1, #32
   1aba8:	bl	124bc <memset@plt>
   1abac:	ldr	r2, [r4, #20]
   1abb0:	add	r2, r2, r6
   1abb4:	str	r2, [r4, #20]
   1abb8:	b	1aa90 <flatcc_json_printer_double_struct_field@@Base+0x68>

0001abbc <flatcc_json_printer_uint8_enum_struct_field@@Base>:
   1abbc:	cmp	r1, #0
   1abc0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1abc4:	mov	r4, r0
   1abc8:	strd	r6, [sp, #8]
   1abcc:	strd	r8, [sp, #16]
   1abd0:	str	sl, [sp, #24]
   1abd4:	str	lr, [sp, #28]
   1abd8:	ldrb	r5, [r2, r3]
   1abdc:	ldr	r2, [r0, #20]
   1abe0:	ldr	r8, [sp, #32]
   1abe4:	ldr	r7, [sp, #36]	; 0x24
   1abe8:	ldr	r6, [sp, #40]	; 0x28
   1abec:	beq	1ac04 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x48>
   1abf0:	add	r1, r2, #1
   1abf4:	mov	r3, #44	; 0x2c
   1abf8:	str	r1, [r0, #20]
   1abfc:	strb	r3, [r2]
   1ac00:	ldr	r2, [r0, #20]
   1ac04:	ldrb	r1, [r4, #25]
   1ac08:	cmp	r1, #0
   1ac0c:	bne	1ad34 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x178>
   1ac10:	ldr	r3, [r4, #16]
   1ac14:	cmp	r3, r2
   1ac18:	bhi	1ac2c <flatcc_json_printer_uint8_enum_struct_field@@Base+0x70>
   1ac1c:	mov	r0, r4
   1ac20:	ldr	r3, [r4, #44]	; 0x2c
   1ac24:	blx	r3
   1ac28:	ldr	r2, [r4, #20]
   1ac2c:	mov	r3, #34	; 0x22
   1ac30:	strb	r3, [r2]
   1ac34:	ldrb	r3, [r4, #26]
   1ac38:	ldr	r2, [r4, #16]
   1ac3c:	ldr	r0, [r4, #20]
   1ac40:	cmp	r3, #0
   1ac44:	addeq	r0, r0, #1
   1ac48:	add	r3, r0, r7
   1ac4c:	cmp	r2, r3
   1ac50:	str	r0, [r4, #20]
   1ac54:	bhi	1acec <flatcc_json_printer_uint8_enum_struct_field@@Base+0x130>
   1ac58:	mov	r2, r7
   1ac5c:	mov	r1, r8
   1ac60:	mov	r0, r4
   1ac64:	bl	14c50 <test_print@@Base+0x11b4>
   1ac68:	ldr	r2, [r4, #20]
   1ac6c:	mov	r3, #34	; 0x22
   1ac70:	mov	ip, #58	; 0x3a
   1ac74:	mov	r0, #32
   1ac78:	strb	r3, [r2]
   1ac7c:	ldrb	r3, [r4, #26]
   1ac80:	ldr	r1, [r4, #20]
   1ac84:	clz	r3, r3
   1ac88:	lsr	r3, r3, #5
   1ac8c:	add	r2, r1, r3
   1ac90:	add	r2, r2, #1
   1ac94:	str	r2, [r4, #20]
   1ac98:	strb	ip, [r1, r3]
   1ac9c:	ldr	r3, [r4, #20]
   1aca0:	strb	r0, [r3]
   1aca4:	ldrb	r2, [r4, #25]
   1aca8:	ldr	r1, [r4, #20]
   1acac:	ldrb	r3, [r4, #27]
   1acb0:	cmp	r2, #0
   1acb4:	addne	r1, r1, #1
   1acb8:	cmp	r3, #0
   1acbc:	str	r1, [r4, #20]
   1acc0:	bne	1ad08 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x14c>
   1acc4:	mov	r1, r5
   1acc8:	mov	r0, r4
   1accc:	ldrd	r4, [sp]
   1acd0:	mov	r3, r6
   1acd4:	ldrd	r6, [sp, #8]
   1acd8:	ldrd	r8, [sp, #16]
   1acdc:	ldr	sl, [sp, #24]
   1ace0:	ldr	lr, [sp, #28]
   1ace4:	add	sp, sp, #32
   1ace8:	bx	r3
   1acec:	mov	r2, r7
   1acf0:	mov	r1, r8
   1acf4:	bl	12420 <memcpy@plt>
   1acf8:	ldr	r2, [r4, #20]
   1acfc:	add	r2, r2, r7
   1ad00:	str	r2, [r4, #20]
   1ad04:	b	1ac6c <flatcc_json_printer_uint8_enum_struct_field@@Base+0xb0>
   1ad08:	mov	r0, r5
   1ad0c:	bl	14fac <test_print@@Base+0x1510>
   1ad10:	ldr	r3, [r4, #20]
   1ad14:	ldrd	r6, [sp, #8]
   1ad18:	ldrd	r8, [sp, #16]
   1ad1c:	add	r0, r3, r0
   1ad20:	ldr	sl, [sp, #24]
   1ad24:	str	r0, [r4, #20]
   1ad28:	ldrd	r4, [sp]
   1ad2c:	add	sp, sp, #28
   1ad30:	pop	{pc}		; (ldr pc, [sp], #4)
   1ad34:	add	r1, r2, #1
   1ad38:	mov	r3, #10
   1ad3c:	str	r1, [r4, #20]
   1ad40:	strb	r3, [r2]
   1ad44:	ldrb	r3, [r4, #25]
   1ad48:	ldr	r1, [r4, #16]
   1ad4c:	ldr	r2, [r4, #32]
   1ad50:	ldr	r0, [r4, #20]
   1ad54:	mul	r9, r2, r3
   1ad58:	add	r3, r0, r9
   1ad5c:	cmp	r1, r3
   1ad60:	bcs	1ad78 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x1bc>
   1ad64:	mov	r1, r9
   1ad68:	mov	r0, r4
   1ad6c:	bl	14d14 <test_print@@Base+0x1278>
   1ad70:	ldr	r2, [r4, #20]
   1ad74:	b	1ac2c <flatcc_json_printer_uint8_enum_struct_field@@Base+0x70>
   1ad78:	mov	r2, r9
   1ad7c:	mov	r1, #32
   1ad80:	bl	124bc <memset@plt>
   1ad84:	ldr	r2, [r4, #20]
   1ad88:	add	r2, r2, r9
   1ad8c:	str	r2, [r4, #20]
   1ad90:	b	1ac2c <flatcc_json_printer_uint8_enum_struct_field@@Base+0x70>

0001ad94 <flatcc_json_printer_uint16_enum_struct_field@@Base>:
   1ad94:	cmp	r1, #0
   1ad98:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1ad9c:	mov	r4, r0
   1ada0:	ldrh	r5, [r2, r3]
   1ada4:	ldr	r2, [r0, #20]
   1ada8:	strd	r6, [sp, #8]
   1adac:	strd	r8, [sp, #16]
   1adb0:	str	sl, [sp, #24]
   1adb4:	str	lr, [sp, #28]
   1adb8:	ldr	r8, [sp, #32]
   1adbc:	ldr	r7, [sp, #36]	; 0x24
   1adc0:	ldr	r6, [sp, #40]	; 0x28
   1adc4:	beq	1addc <flatcc_json_printer_uint16_enum_struct_field@@Base+0x48>
   1adc8:	add	r1, r2, #1
   1adcc:	mov	r3, #44	; 0x2c
   1add0:	str	r1, [r0, #20]
   1add4:	strb	r3, [r2]
   1add8:	ldr	r2, [r0, #20]
   1addc:	ldrb	r1, [r4, #25]
   1ade0:	cmp	r1, #0
   1ade4:	bne	1af0c <flatcc_json_printer_uint16_enum_struct_field@@Base+0x178>
   1ade8:	ldr	r3, [r4, #16]
   1adec:	cmp	r3, r2
   1adf0:	bhi	1ae04 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x70>
   1adf4:	mov	r0, r4
   1adf8:	ldr	r3, [r4, #44]	; 0x2c
   1adfc:	blx	r3
   1ae00:	ldr	r2, [r4, #20]
   1ae04:	mov	r3, #34	; 0x22
   1ae08:	strb	r3, [r2]
   1ae0c:	ldrb	r3, [r4, #26]
   1ae10:	ldr	r2, [r4, #16]
   1ae14:	ldr	r0, [r4, #20]
   1ae18:	cmp	r3, #0
   1ae1c:	addeq	r0, r0, #1
   1ae20:	add	r3, r0, r7
   1ae24:	cmp	r2, r3
   1ae28:	str	r0, [r4, #20]
   1ae2c:	bhi	1aec4 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x130>
   1ae30:	mov	r2, r7
   1ae34:	mov	r1, r8
   1ae38:	mov	r0, r4
   1ae3c:	bl	14c50 <test_print@@Base+0x11b4>
   1ae40:	ldr	r2, [r4, #20]
   1ae44:	mov	r3, #34	; 0x22
   1ae48:	mov	ip, #58	; 0x3a
   1ae4c:	mov	r0, #32
   1ae50:	strb	r3, [r2]
   1ae54:	ldrb	r3, [r4, #26]
   1ae58:	ldr	r1, [r4, #20]
   1ae5c:	clz	r3, r3
   1ae60:	lsr	r3, r3, #5
   1ae64:	add	r2, r1, r3
   1ae68:	add	r2, r2, #1
   1ae6c:	str	r2, [r4, #20]
   1ae70:	strb	ip, [r1, r3]
   1ae74:	ldr	r3, [r4, #20]
   1ae78:	strb	r0, [r3]
   1ae7c:	ldrb	r2, [r4, #25]
   1ae80:	ldr	r1, [r4, #20]
   1ae84:	ldrb	r3, [r4, #27]
   1ae88:	cmp	r2, #0
   1ae8c:	addne	r1, r1, #1
   1ae90:	cmp	r3, #0
   1ae94:	str	r1, [r4, #20]
   1ae98:	bne	1aee0 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x14c>
   1ae9c:	mov	r1, r5
   1aea0:	mov	r0, r4
   1aea4:	ldrd	r4, [sp]
   1aea8:	mov	r3, r6
   1aeac:	ldrd	r6, [sp, #8]
   1aeb0:	ldrd	r8, [sp, #16]
   1aeb4:	ldr	sl, [sp, #24]
   1aeb8:	ldr	lr, [sp, #28]
   1aebc:	add	sp, sp, #32
   1aec0:	bx	r3
   1aec4:	mov	r2, r7
   1aec8:	mov	r1, r8
   1aecc:	bl	12420 <memcpy@plt>
   1aed0:	ldr	r2, [r4, #20]
   1aed4:	add	r2, r2, r7
   1aed8:	str	r2, [r4, #20]
   1aedc:	b	1ae44 <flatcc_json_printer_uint16_enum_struct_field@@Base+0xb0>
   1aee0:	mov	r0, r5
   1aee4:	bl	13db8 <test_print@@Base+0x31c>
   1aee8:	ldr	r3, [r4, #20]
   1aeec:	ldrd	r6, [sp, #8]
   1aef0:	ldrd	r8, [sp, #16]
   1aef4:	add	r0, r3, r0
   1aef8:	ldr	sl, [sp, #24]
   1aefc:	str	r0, [r4, #20]
   1af00:	ldrd	r4, [sp]
   1af04:	add	sp, sp, #28
   1af08:	pop	{pc}		; (ldr pc, [sp], #4)
   1af0c:	add	r1, r2, #1
   1af10:	mov	r3, #10
   1af14:	str	r1, [r4, #20]
   1af18:	strb	r3, [r2]
   1af1c:	ldrb	r3, [r4, #25]
   1af20:	ldr	r1, [r4, #16]
   1af24:	ldr	r2, [r4, #32]
   1af28:	ldr	r0, [r4, #20]
   1af2c:	mul	r9, r2, r3
   1af30:	add	r3, r0, r9
   1af34:	cmp	r1, r3
   1af38:	bcs	1af50 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x1bc>
   1af3c:	mov	r1, r9
   1af40:	mov	r0, r4
   1af44:	bl	14d14 <test_print@@Base+0x1278>
   1af48:	ldr	r2, [r4, #20]
   1af4c:	b	1ae04 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x70>
   1af50:	mov	r2, r9
   1af54:	mov	r1, #32
   1af58:	bl	124bc <memset@plt>
   1af5c:	ldr	r2, [r4, #20]
   1af60:	add	r2, r2, r9
   1af64:	str	r2, [r4, #20]
   1af68:	b	1ae04 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x70>

0001af6c <flatcc_json_printer_uint32_enum_struct_field@@Base>:
   1af6c:	cmp	r1, #0
   1af70:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1af74:	mov	r4, r0
   1af78:	ldr	r5, [r2, r3]
   1af7c:	ldr	r2, [r0, #20]
   1af80:	strd	r6, [sp, #8]
   1af84:	strd	r8, [sp, #16]
   1af88:	str	sl, [sp, #24]
   1af8c:	str	lr, [sp, #28]
   1af90:	ldr	r8, [sp, #32]
   1af94:	ldr	r7, [sp, #36]	; 0x24
   1af98:	ldr	r6, [sp, #40]	; 0x28
   1af9c:	beq	1afb4 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x48>
   1afa0:	add	r1, r2, #1
   1afa4:	mov	r3, #44	; 0x2c
   1afa8:	str	r1, [r0, #20]
   1afac:	strb	r3, [r2]
   1afb0:	ldr	r2, [r0, #20]
   1afb4:	ldrb	r1, [r4, #25]
   1afb8:	cmp	r1, #0
   1afbc:	bne	1b0e4 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x178>
   1afc0:	ldr	r3, [r4, #16]
   1afc4:	cmp	r3, r2
   1afc8:	bhi	1afdc <flatcc_json_printer_uint32_enum_struct_field@@Base+0x70>
   1afcc:	mov	r0, r4
   1afd0:	ldr	r3, [r4, #44]	; 0x2c
   1afd4:	blx	r3
   1afd8:	ldr	r2, [r4, #20]
   1afdc:	mov	r3, #34	; 0x22
   1afe0:	strb	r3, [r2]
   1afe4:	ldrb	r3, [r4, #26]
   1afe8:	ldr	r2, [r4, #16]
   1afec:	ldr	r0, [r4, #20]
   1aff0:	cmp	r3, #0
   1aff4:	addeq	r0, r0, #1
   1aff8:	add	r3, r0, r7
   1affc:	cmp	r2, r3
   1b000:	str	r0, [r4, #20]
   1b004:	bhi	1b09c <flatcc_json_printer_uint32_enum_struct_field@@Base+0x130>
   1b008:	mov	r2, r7
   1b00c:	mov	r1, r8
   1b010:	mov	r0, r4
   1b014:	bl	14c50 <test_print@@Base+0x11b4>
   1b018:	ldr	r2, [r4, #20]
   1b01c:	mov	r3, #34	; 0x22
   1b020:	mov	ip, #58	; 0x3a
   1b024:	mov	r0, #32
   1b028:	strb	r3, [r2]
   1b02c:	ldrb	r3, [r4, #26]
   1b030:	ldr	r1, [r4, #20]
   1b034:	clz	r3, r3
   1b038:	lsr	r3, r3, #5
   1b03c:	add	r2, r1, r3
   1b040:	add	r2, r2, #1
   1b044:	str	r2, [r4, #20]
   1b048:	strb	ip, [r1, r3]
   1b04c:	ldr	r3, [r4, #20]
   1b050:	strb	r0, [r3]
   1b054:	ldrb	r2, [r4, #25]
   1b058:	ldr	r1, [r4, #20]
   1b05c:	ldrb	r3, [r4, #27]
   1b060:	cmp	r2, #0
   1b064:	addne	r1, r1, #1
   1b068:	cmp	r3, #0
   1b06c:	str	r1, [r4, #20]
   1b070:	bne	1b0b8 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x14c>
   1b074:	mov	r1, r5
   1b078:	mov	r0, r4
   1b07c:	ldrd	r4, [sp]
   1b080:	mov	r3, r6
   1b084:	ldrd	r6, [sp, #8]
   1b088:	ldrd	r8, [sp, #16]
   1b08c:	ldr	sl, [sp, #24]
   1b090:	ldr	lr, [sp, #28]
   1b094:	add	sp, sp, #32
   1b098:	bx	r3
   1b09c:	mov	r2, r7
   1b0a0:	mov	r1, r8
   1b0a4:	bl	12420 <memcpy@plt>
   1b0a8:	ldr	r2, [r4, #20]
   1b0ac:	add	r2, r2, r7
   1b0b0:	str	r2, [r4, #20]
   1b0b4:	b	1b01c <flatcc_json_printer_uint32_enum_struct_field@@Base+0xb0>
   1b0b8:	mov	r0, r5
   1b0bc:	bl	13f20 <test_print@@Base+0x484>
   1b0c0:	ldr	r3, [r4, #20]
   1b0c4:	ldrd	r6, [sp, #8]
   1b0c8:	ldrd	r8, [sp, #16]
   1b0cc:	add	r0, r3, r0
   1b0d0:	ldr	sl, [sp, #24]
   1b0d4:	str	r0, [r4, #20]
   1b0d8:	ldrd	r4, [sp]
   1b0dc:	add	sp, sp, #28
   1b0e0:	pop	{pc}		; (ldr pc, [sp], #4)
   1b0e4:	add	r1, r2, #1
   1b0e8:	mov	r3, #10
   1b0ec:	str	r1, [r4, #20]
   1b0f0:	strb	r3, [r2]
   1b0f4:	ldrb	r3, [r4, #25]
   1b0f8:	ldr	r1, [r4, #16]
   1b0fc:	ldr	r2, [r4, #32]
   1b100:	ldr	r0, [r4, #20]
   1b104:	mul	r9, r2, r3
   1b108:	add	r3, r0, r9
   1b10c:	cmp	r1, r3
   1b110:	bcs	1b128 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x1bc>
   1b114:	mov	r1, r9
   1b118:	mov	r0, r4
   1b11c:	bl	14d14 <test_print@@Base+0x1278>
   1b120:	ldr	r2, [r4, #20]
   1b124:	b	1afdc <flatcc_json_printer_uint32_enum_struct_field@@Base+0x70>
   1b128:	mov	r2, r9
   1b12c:	mov	r1, #32
   1b130:	bl	124bc <memset@plt>
   1b134:	ldr	r2, [r4, #20]
   1b138:	add	r2, r2, r9
   1b13c:	str	r2, [r4, #20]
   1b140:	b	1afdc <flatcc_json_printer_uint32_enum_struct_field@@Base+0x70>

0001b144 <flatcc_json_printer_uint64_enum_struct_field@@Base>:
   1b144:	cmp	r1, #0
   1b148:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1b14c:	mov	r4, r0
   1b150:	strd	r6, [sp, #8]
   1b154:	strd	r8, [sp, #16]
   1b158:	str	sl, [sp, #24]
   1b15c:	str	lr, [sp, #28]
   1b160:	ldrd	r6, [r2, r3]
   1b164:	ldr	r2, [r0, #20]
   1b168:	ldr	r9, [sp, #32]
   1b16c:	ldr	r8, [sp, #36]	; 0x24
   1b170:	ldr	r5, [sp, #40]	; 0x28
   1b174:	beq	1b18c <flatcc_json_printer_uint64_enum_struct_field@@Base+0x48>
   1b178:	add	r1, r2, #1
   1b17c:	mov	r3, #44	; 0x2c
   1b180:	str	r1, [r0, #20]
   1b184:	strb	r3, [r2]
   1b188:	ldr	r2, [r0, #20]
   1b18c:	ldrb	r1, [r4, #25]
   1b190:	cmp	r1, #0
   1b194:	bne	1b2c4 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x180>
   1b198:	ldr	r3, [r4, #16]
   1b19c:	cmp	r3, r2
   1b1a0:	bhi	1b1b4 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x70>
   1b1a4:	mov	r0, r4
   1b1a8:	ldr	r3, [r4, #44]	; 0x2c
   1b1ac:	blx	r3
   1b1b0:	ldr	r2, [r4, #20]
   1b1b4:	mov	r3, #34	; 0x22
   1b1b8:	strb	r3, [r2]
   1b1bc:	ldrb	r3, [r4, #26]
   1b1c0:	ldr	r2, [r4, #16]
   1b1c4:	ldr	r0, [r4, #20]
   1b1c8:	cmp	r3, #0
   1b1cc:	addeq	r0, r0, #1
   1b1d0:	add	r3, r0, r8
   1b1d4:	cmp	r2, r3
   1b1d8:	str	r0, [r4, #20]
   1b1dc:	bhi	1b278 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x134>
   1b1e0:	mov	r2, r8
   1b1e4:	mov	r1, r9
   1b1e8:	mov	r0, r4
   1b1ec:	bl	14c50 <test_print@@Base+0x11b4>
   1b1f0:	ldr	r8, [r4, #20]
   1b1f4:	mov	r3, #34	; 0x22
   1b1f8:	mov	ip, #58	; 0x3a
   1b1fc:	mov	r0, #32
   1b200:	strb	r3, [r8]
   1b204:	ldrb	r3, [r4, #26]
   1b208:	ldr	r1, [r4, #20]
   1b20c:	clz	r3, r3
   1b210:	lsr	r3, r3, #5
   1b214:	add	r2, r1, r3
   1b218:	add	r2, r2, #1
   1b21c:	str	r2, [r4, #20]
   1b220:	strb	ip, [r1, r3]
   1b224:	ldr	r3, [r4, #20]
   1b228:	strb	r0, [r3]
   1b22c:	ldrb	r1, [r4, #25]
   1b230:	ldr	r2, [r4, #20]
   1b234:	ldrb	r3, [r4, #27]
   1b238:	cmp	r1, #0
   1b23c:	addne	r2, r2, #1
   1b240:	cmp	r3, #0
   1b244:	str	r2, [r4, #20]
   1b248:	bne	1b294 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x150>
   1b24c:	mov	r2, r6
   1b250:	mov	r3, r7
   1b254:	ldrd	r6, [sp, #8]
   1b258:	mov	r0, r4
   1b25c:	mov	r1, r5
   1b260:	ldrd	r4, [sp]
   1b264:	ldrd	r8, [sp, #16]
   1b268:	ldr	sl, [sp, #24]
   1b26c:	ldr	lr, [sp, #28]
   1b270:	add	sp, sp, #32
   1b274:	bx	r1
   1b278:	mov	r2, r8
   1b27c:	mov	r1, r9
   1b280:	bl	12420 <memcpy@plt>
   1b284:	ldr	r3, [r4, #20]
   1b288:	add	r8, r3, r8
   1b28c:	str	r8, [r4, #20]
   1b290:	b	1b1f4 <flatcc_json_printer_uint64_enum_struct_field@@Base+0xb0>
   1b294:	mov	r0, r6
   1b298:	mov	r1, r7
   1b29c:	bl	1424c <test_print@@Base+0x7b0>
   1b2a0:	ldr	r3, [r4, #20]
   1b2a4:	ldrd	r6, [sp, #8]
   1b2a8:	ldrd	r8, [sp, #16]
   1b2ac:	add	r0, r3, r0
   1b2b0:	ldr	sl, [sp, #24]
   1b2b4:	str	r0, [r4, #20]
   1b2b8:	ldrd	r4, [sp]
   1b2bc:	add	sp, sp, #28
   1b2c0:	pop	{pc}		; (ldr pc, [sp], #4)
   1b2c4:	add	r1, r2, #1
   1b2c8:	mov	r3, #10
   1b2cc:	str	r1, [r4, #20]
   1b2d0:	strb	r3, [r2]
   1b2d4:	ldrb	r3, [r4, #25]
   1b2d8:	ldr	r1, [r4, #16]
   1b2dc:	ldr	r2, [r4, #32]
   1b2e0:	ldr	r0, [r4, #20]
   1b2e4:	mul	sl, r2, r3
   1b2e8:	add	r3, r0, sl
   1b2ec:	cmp	r1, r3
   1b2f0:	bcs	1b308 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x1c4>
   1b2f4:	mov	r1, sl
   1b2f8:	mov	r0, r4
   1b2fc:	bl	14d14 <test_print@@Base+0x1278>
   1b300:	ldr	r2, [r4, #20]
   1b304:	b	1b1b4 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x70>
   1b308:	mov	r2, sl
   1b30c:	mov	r1, #32
   1b310:	bl	124bc <memset@plt>
   1b314:	ldr	r2, [r4, #20]
   1b318:	add	r2, r2, sl
   1b31c:	str	r2, [r4, #20]
   1b320:	b	1b1b4 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x70>

0001b324 <flatcc_json_printer_int8_enum_struct_field@@Base>:
   1b324:	cmp	r1, #0
   1b328:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1b32c:	mov	r4, r0
   1b330:	strd	r6, [sp, #8]
   1b334:	strd	r8, [sp, #16]
   1b338:	str	sl, [sp, #24]
   1b33c:	str	lr, [sp, #28]
   1b340:	ldrsb	r5, [r2, r3]
   1b344:	ldr	r2, [r0, #20]
   1b348:	ldr	r8, [sp, #32]
   1b34c:	ldr	r7, [sp, #36]	; 0x24
   1b350:	ldr	r6, [sp, #40]	; 0x28
   1b354:	beq	1b36c <flatcc_json_printer_int8_enum_struct_field@@Base+0x48>
   1b358:	add	r1, r2, #1
   1b35c:	mov	r3, #44	; 0x2c
   1b360:	str	r1, [r0, #20]
   1b364:	strb	r3, [r2]
   1b368:	ldr	r2, [r0, #20]
   1b36c:	ldrb	r1, [r4, #25]
   1b370:	cmp	r1, #0
   1b374:	bne	1b4c4 <flatcc_json_printer_int8_enum_struct_field@@Base+0x1a0>
   1b378:	ldr	r3, [r4, #16]
   1b37c:	cmp	r3, r2
   1b380:	bhi	1b394 <flatcc_json_printer_int8_enum_struct_field@@Base+0x70>
   1b384:	mov	r0, r4
   1b388:	ldr	r3, [r4, #44]	; 0x2c
   1b38c:	blx	r3
   1b390:	ldr	r2, [r4, #20]
   1b394:	mov	r3, #34	; 0x22
   1b398:	strb	r3, [r2]
   1b39c:	ldrb	r3, [r4, #26]
   1b3a0:	ldr	r2, [r4, #16]
   1b3a4:	ldr	r0, [r4, #20]
   1b3a8:	cmp	r3, #0
   1b3ac:	addeq	r0, r0, #1
   1b3b0:	add	r3, r0, r7
   1b3b4:	cmp	r2, r3
   1b3b8:	str	r0, [r4, #20]
   1b3bc:	bhi	1b480 <flatcc_json_printer_int8_enum_struct_field@@Base+0x15c>
   1b3c0:	mov	r2, r7
   1b3c4:	mov	r1, r8
   1b3c8:	mov	r0, r4
   1b3cc:	bl	14c50 <test_print@@Base+0x11b4>
   1b3d0:	ldr	r2, [r4, #20]
   1b3d4:	mov	r3, #34	; 0x22
   1b3d8:	mov	ip, #58	; 0x3a
   1b3dc:	mov	r0, #32
   1b3e0:	strb	r3, [r2]
   1b3e4:	ldrb	r3, [r4, #26]
   1b3e8:	ldr	r1, [r4, #20]
   1b3ec:	clz	r3, r3
   1b3f0:	lsr	r3, r3, #5
   1b3f4:	add	r2, r1, r3
   1b3f8:	add	r2, r2, #1
   1b3fc:	str	r2, [r4, #20]
   1b400:	strb	ip, [r1, r3]
   1b404:	ldr	r3, [r4, #20]
   1b408:	strb	r0, [r3]
   1b40c:	ldrb	r3, [r4, #25]
   1b410:	ldr	r2, [r4, #20]
   1b414:	ldrb	r0, [r4, #27]
   1b418:	adds	r3, r3, #0
   1b41c:	movne	r3, #1
   1b420:	add	r1, r2, r3
   1b424:	cmp	r0, #0
   1b428:	str	r1, [r4, #20]
   1b42c:	beq	1b49c <flatcc_json_printer_int8_enum_struct_field@@Base+0x178>
   1b430:	cmp	r5, #0
   1b434:	lsr	r6, r5, #31
   1b438:	uxtb	r0, r5
   1b43c:	bge	1b454 <flatcc_json_printer_int8_enum_struct_field@@Base+0x130>
   1b440:	rsb	r0, r0, #0
   1b444:	mov	ip, #45	; 0x2d
   1b448:	add	r1, r1, #1
   1b44c:	uxtb	r0, r0
   1b450:	strb	ip, [r2, r3]
   1b454:	bl	14fac <test_print@@Base+0x1510>
   1b458:	ldr	r3, [r4, #20]
   1b45c:	add	r0, r6, r0
   1b460:	ldrd	r6, [sp, #8]
   1b464:	ldrd	r8, [sp, #16]
   1b468:	add	r3, r3, r0
   1b46c:	ldr	sl, [sp, #24]
   1b470:	str	r3, [r4, #20]
   1b474:	ldrd	r4, [sp]
   1b478:	add	sp, sp, #28
   1b47c:	pop	{pc}		; (ldr pc, [sp], #4)
   1b480:	mov	r2, r7
   1b484:	mov	r1, r8
   1b488:	bl	12420 <memcpy@plt>
   1b48c:	ldr	r2, [r4, #20]
   1b490:	add	r2, r2, r7
   1b494:	str	r2, [r4, #20]
   1b498:	b	1b3d4 <flatcc_json_printer_int8_enum_struct_field@@Base+0xb0>
   1b49c:	mov	r1, r5
   1b4a0:	mov	r0, r4
   1b4a4:	ldrd	r4, [sp]
   1b4a8:	mov	r3, r6
   1b4ac:	ldrd	r6, [sp, #8]
   1b4b0:	ldrd	r8, [sp, #16]
   1b4b4:	ldr	sl, [sp, #24]
   1b4b8:	ldr	lr, [sp, #28]
   1b4bc:	add	sp, sp, #32
   1b4c0:	bx	r3
   1b4c4:	add	r1, r2, #1
   1b4c8:	mov	r3, #10
   1b4cc:	str	r1, [r4, #20]
   1b4d0:	strb	r3, [r2]
   1b4d4:	ldrb	r3, [r4, #25]
   1b4d8:	ldr	r1, [r4, #16]
   1b4dc:	ldr	r2, [r4, #32]
   1b4e0:	ldr	r0, [r4, #20]
   1b4e4:	mul	r9, r2, r3
   1b4e8:	add	r3, r0, r9
   1b4ec:	cmp	r1, r3
   1b4f0:	bcs	1b508 <flatcc_json_printer_int8_enum_struct_field@@Base+0x1e4>
   1b4f4:	mov	r1, r9
   1b4f8:	mov	r0, r4
   1b4fc:	bl	14d14 <test_print@@Base+0x1278>
   1b500:	ldr	r2, [r4, #20]
   1b504:	b	1b394 <flatcc_json_printer_int8_enum_struct_field@@Base+0x70>
   1b508:	mov	r2, r9
   1b50c:	mov	r1, #32
   1b510:	bl	124bc <memset@plt>
   1b514:	ldr	r2, [r4, #20]
   1b518:	add	r2, r2, r9
   1b51c:	str	r2, [r4, #20]
   1b520:	b	1b394 <flatcc_json_printer_int8_enum_struct_field@@Base+0x70>

0001b524 <flatcc_json_printer_int16_enum_struct_field@@Base>:
   1b524:	cmp	r1, #0
   1b528:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1b52c:	mov	r4, r0
   1b530:	ldrsh	r5, [r2, r3]
   1b534:	ldr	r2, [r0, #20]
   1b538:	strd	r6, [sp, #8]
   1b53c:	strd	r8, [sp, #16]
   1b540:	str	sl, [sp, #24]
   1b544:	str	lr, [sp, #28]
   1b548:	ldr	r8, [sp, #32]
   1b54c:	ldr	r7, [sp, #36]	; 0x24
   1b550:	ldr	r6, [sp, #40]	; 0x28
   1b554:	beq	1b56c <flatcc_json_printer_int16_enum_struct_field@@Base+0x48>
   1b558:	add	r1, r2, #1
   1b55c:	mov	r3, #44	; 0x2c
   1b560:	str	r1, [r0, #20]
   1b564:	strb	r3, [r2]
   1b568:	ldr	r2, [r0, #20]
   1b56c:	ldrb	r1, [r4, #25]
   1b570:	cmp	r1, #0
   1b574:	bne	1b6c4 <flatcc_json_printer_int16_enum_struct_field@@Base+0x1a0>
   1b578:	ldr	r3, [r4, #16]
   1b57c:	cmp	r3, r2
   1b580:	bhi	1b594 <flatcc_json_printer_int16_enum_struct_field@@Base+0x70>
   1b584:	mov	r0, r4
   1b588:	ldr	r3, [r4, #44]	; 0x2c
   1b58c:	blx	r3
   1b590:	ldr	r2, [r4, #20]
   1b594:	mov	r3, #34	; 0x22
   1b598:	strb	r3, [r2]
   1b59c:	ldrb	r3, [r4, #26]
   1b5a0:	ldr	r2, [r4, #16]
   1b5a4:	ldr	r0, [r4, #20]
   1b5a8:	cmp	r3, #0
   1b5ac:	addeq	r0, r0, #1
   1b5b0:	add	r3, r0, r7
   1b5b4:	cmp	r2, r3
   1b5b8:	str	r0, [r4, #20]
   1b5bc:	bhi	1b680 <flatcc_json_printer_int16_enum_struct_field@@Base+0x15c>
   1b5c0:	mov	r2, r7
   1b5c4:	mov	r1, r8
   1b5c8:	mov	r0, r4
   1b5cc:	bl	14c50 <test_print@@Base+0x11b4>
   1b5d0:	ldr	r2, [r4, #20]
   1b5d4:	mov	r3, #34	; 0x22
   1b5d8:	mov	ip, #58	; 0x3a
   1b5dc:	mov	r0, #32
   1b5e0:	strb	r3, [r2]
   1b5e4:	ldrb	r3, [r4, #26]
   1b5e8:	ldr	r1, [r4, #20]
   1b5ec:	clz	r3, r3
   1b5f0:	lsr	r3, r3, #5
   1b5f4:	add	r2, r1, r3
   1b5f8:	add	r2, r2, #1
   1b5fc:	str	r2, [r4, #20]
   1b600:	strb	ip, [r1, r3]
   1b604:	ldr	r3, [r4, #20]
   1b608:	strb	r0, [r3]
   1b60c:	ldrb	r3, [r4, #25]
   1b610:	ldr	r2, [r4, #20]
   1b614:	ldrb	r0, [r4, #27]
   1b618:	adds	r3, r3, #0
   1b61c:	movne	r3, #1
   1b620:	add	r1, r2, r3
   1b624:	cmp	r0, #0
   1b628:	str	r1, [r4, #20]
   1b62c:	beq	1b69c <flatcc_json_printer_int16_enum_struct_field@@Base+0x178>
   1b630:	cmp	r5, #0
   1b634:	lsr	r6, r5, #31
   1b638:	uxth	r0, r5
   1b63c:	bge	1b654 <flatcc_json_printer_int16_enum_struct_field@@Base+0x130>
   1b640:	rsb	r0, r0, #0
   1b644:	mov	ip, #45	; 0x2d
   1b648:	add	r1, r1, #1
   1b64c:	uxth	r0, r0
   1b650:	strb	ip, [r2, r3]
   1b654:	bl	13db8 <test_print@@Base+0x31c>
   1b658:	ldr	r3, [r4, #20]
   1b65c:	add	r0, r6, r0
   1b660:	ldrd	r6, [sp, #8]
   1b664:	ldrd	r8, [sp, #16]
   1b668:	add	r3, r3, r0
   1b66c:	ldr	sl, [sp, #24]
   1b670:	str	r3, [r4, #20]
   1b674:	ldrd	r4, [sp]
   1b678:	add	sp, sp, #28
   1b67c:	pop	{pc}		; (ldr pc, [sp], #4)
   1b680:	mov	r2, r7
   1b684:	mov	r1, r8
   1b688:	bl	12420 <memcpy@plt>
   1b68c:	ldr	r2, [r4, #20]
   1b690:	add	r2, r2, r7
   1b694:	str	r2, [r4, #20]
   1b698:	b	1b5d4 <flatcc_json_printer_int16_enum_struct_field@@Base+0xb0>
   1b69c:	mov	r1, r5
   1b6a0:	mov	r0, r4
   1b6a4:	ldrd	r4, [sp]
   1b6a8:	mov	r3, r6
   1b6ac:	ldrd	r6, [sp, #8]
   1b6b0:	ldrd	r8, [sp, #16]
   1b6b4:	ldr	sl, [sp, #24]
   1b6b8:	ldr	lr, [sp, #28]
   1b6bc:	add	sp, sp, #32
   1b6c0:	bx	r3
   1b6c4:	add	r1, r2, #1
   1b6c8:	mov	r3, #10
   1b6cc:	str	r1, [r4, #20]
   1b6d0:	strb	r3, [r2]
   1b6d4:	ldrb	r3, [r4, #25]
   1b6d8:	ldr	r1, [r4, #16]
   1b6dc:	ldr	r2, [r4, #32]
   1b6e0:	ldr	r0, [r4, #20]
   1b6e4:	mul	r9, r2, r3
   1b6e8:	add	r3, r0, r9
   1b6ec:	cmp	r1, r3
   1b6f0:	bcs	1b708 <flatcc_json_printer_int16_enum_struct_field@@Base+0x1e4>
   1b6f4:	mov	r1, r9
   1b6f8:	mov	r0, r4
   1b6fc:	bl	14d14 <test_print@@Base+0x1278>
   1b700:	ldr	r2, [r4, #20]
   1b704:	b	1b594 <flatcc_json_printer_int16_enum_struct_field@@Base+0x70>
   1b708:	mov	r2, r9
   1b70c:	mov	r1, #32
   1b710:	bl	124bc <memset@plt>
   1b714:	ldr	r2, [r4, #20]
   1b718:	add	r2, r2, r9
   1b71c:	str	r2, [r4, #20]
   1b720:	b	1b594 <flatcc_json_printer_int16_enum_struct_field@@Base+0x70>

0001b724 <flatcc_json_printer_int32_enum_struct_field@@Base>:
   1b724:	cmp	r1, #0
   1b728:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1b72c:	mov	r4, r0
   1b730:	strd	r6, [sp, #8]
   1b734:	strd	r8, [sp, #16]
   1b738:	str	sl, [sp, #24]
   1b73c:	str	lr, [sp, #28]
   1b740:	ldr	r6, [r2, r3]
   1b744:	ldr	r2, [r0, #20]
   1b748:	ldr	r8, [sp, #32]
   1b74c:	ldr	r7, [sp, #36]	; 0x24
   1b750:	ldr	r5, [sp, #40]	; 0x28
   1b754:	beq	1b76c <flatcc_json_printer_int32_enum_struct_field@@Base+0x48>
   1b758:	add	r1, r2, #1
   1b75c:	mov	r3, #44	; 0x2c
   1b760:	str	r1, [r0, #20]
   1b764:	strb	r3, [r2]
   1b768:	ldr	r2, [r0, #20]
   1b76c:	ldrb	r1, [r4, #25]
   1b770:	cmp	r1, #0
   1b774:	bne	1b8c0 <flatcc_json_printer_int32_enum_struct_field@@Base+0x19c>
   1b778:	ldr	r3, [r4, #16]
   1b77c:	cmp	r3, r2
   1b780:	bhi	1b794 <flatcc_json_printer_int32_enum_struct_field@@Base+0x70>
   1b784:	mov	r0, r4
   1b788:	ldr	r3, [r4, #44]	; 0x2c
   1b78c:	blx	r3
   1b790:	ldr	r2, [r4, #20]
   1b794:	mov	r3, #34	; 0x22
   1b798:	strb	r3, [r2]
   1b79c:	ldrb	r3, [r4, #26]
   1b7a0:	ldr	r2, [r4, #16]
   1b7a4:	ldr	r0, [r4, #20]
   1b7a8:	cmp	r3, #0
   1b7ac:	addeq	r0, r0, #1
   1b7b0:	add	r3, r0, r7
   1b7b4:	cmp	r2, r3
   1b7b8:	str	r0, [r4, #20]
   1b7bc:	bhi	1b87c <flatcc_json_printer_int32_enum_struct_field@@Base+0x158>
   1b7c0:	mov	r2, r7
   1b7c4:	mov	r1, r8
   1b7c8:	mov	r0, r4
   1b7cc:	bl	14c50 <test_print@@Base+0x11b4>
   1b7d0:	ldr	r2, [r4, #20]
   1b7d4:	mov	r3, #34	; 0x22
   1b7d8:	mov	ip, #58	; 0x3a
   1b7dc:	mov	r0, #32
   1b7e0:	strb	r3, [r2]
   1b7e4:	ldrb	r3, [r4, #26]
   1b7e8:	ldr	r1, [r4, #20]
   1b7ec:	clz	r3, r3
   1b7f0:	lsr	r3, r3, #5
   1b7f4:	add	r2, r1, r3
   1b7f8:	add	r2, r2, #1
   1b7fc:	str	r2, [r4, #20]
   1b800:	strb	ip, [r1, r3]
   1b804:	ldr	r3, [r4, #20]
   1b808:	strb	r0, [r3]
   1b80c:	ldrb	r3, [r4, #25]
   1b810:	ldr	r2, [r4, #20]
   1b814:	ldrb	r0, [r4, #27]
   1b818:	adds	r3, r3, #0
   1b81c:	movne	r3, #1
   1b820:	add	r1, r2, r3
   1b824:	cmp	r0, #0
   1b828:	str	r1, [r4, #20]
   1b82c:	beq	1b898 <flatcc_json_printer_int32_enum_struct_field@@Base+0x174>
   1b830:	cmp	r6, #0
   1b834:	lsr	r5, r6, #31
   1b838:	bge	1b84c <flatcc_json_printer_int32_enum_struct_field@@Base+0x128>
   1b83c:	mov	r0, #45	; 0x2d
   1b840:	rsb	r6, r6, #0
   1b844:	add	r1, r1, #1
   1b848:	strb	r0, [r2, r3]
   1b84c:	mov	r0, r6
   1b850:	bl	13f20 <test_print@@Base+0x484>
   1b854:	ldr	r3, [r4, #20]
   1b858:	add	r0, r5, r0
   1b85c:	ldrd	r6, [sp, #8]
   1b860:	ldrd	r8, [sp, #16]
   1b864:	add	r3, r3, r0
   1b868:	ldr	sl, [sp, #24]
   1b86c:	str	r3, [r4, #20]
   1b870:	ldrd	r4, [sp]
   1b874:	add	sp, sp, #28
   1b878:	pop	{pc}		; (ldr pc, [sp], #4)
   1b87c:	mov	r2, r7
   1b880:	mov	r1, r8
   1b884:	bl	12420 <memcpy@plt>
   1b888:	ldr	r2, [r4, #20]
   1b88c:	add	r2, r2, r7
   1b890:	str	r2, [r4, #20]
   1b894:	b	1b7d4 <flatcc_json_printer_int32_enum_struct_field@@Base+0xb0>
   1b898:	mov	r1, r6
   1b89c:	mov	r0, r4
   1b8a0:	ldrd	r6, [sp, #8]
   1b8a4:	mov	r3, r5
   1b8a8:	ldrd	r4, [sp]
   1b8ac:	ldrd	r8, [sp, #16]
   1b8b0:	ldr	sl, [sp, #24]
   1b8b4:	ldr	lr, [sp, #28]
   1b8b8:	add	sp, sp, #32
   1b8bc:	bx	r3
   1b8c0:	add	r1, r2, #1
   1b8c4:	mov	r3, #10
   1b8c8:	str	r1, [r4, #20]
   1b8cc:	strb	r3, [r2]
   1b8d0:	ldrb	r3, [r4, #25]
   1b8d4:	ldr	r1, [r4, #16]
   1b8d8:	ldr	r2, [r4, #32]
   1b8dc:	ldr	r0, [r4, #20]
   1b8e0:	mul	r9, r2, r3
   1b8e4:	add	r3, r0, r9
   1b8e8:	cmp	r1, r3
   1b8ec:	bcs	1b904 <flatcc_json_printer_int32_enum_struct_field@@Base+0x1e0>
   1b8f0:	mov	r1, r9
   1b8f4:	mov	r0, r4
   1b8f8:	bl	14d14 <test_print@@Base+0x1278>
   1b8fc:	ldr	r2, [r4, #20]
   1b900:	b	1b794 <flatcc_json_printer_int32_enum_struct_field@@Base+0x70>
   1b904:	mov	r2, r9
   1b908:	mov	r1, #32
   1b90c:	bl	124bc <memset@plt>
   1b910:	ldr	r2, [r4, #20]
   1b914:	add	r2, r2, r9
   1b918:	str	r2, [r4, #20]
   1b91c:	b	1b794 <flatcc_json_printer_int32_enum_struct_field@@Base+0x70>

0001b920 <flatcc_json_printer_int64_enum_struct_field@@Base>:
   1b920:	cmp	r1, #0
   1b924:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1b928:	mov	r4, r0
   1b92c:	strd	r6, [sp, #8]
   1b930:	strd	r8, [sp, #16]
   1b934:	str	sl, [sp, #24]
   1b938:	str	lr, [sp, #28]
   1b93c:	ldrd	r6, [r2, r3]
   1b940:	ldr	r2, [r0, #20]
   1b944:	ldr	r9, [sp, #32]
   1b948:	ldr	r8, [sp, #36]	; 0x24
   1b94c:	ldr	r5, [sp, #40]	; 0x28
   1b950:	beq	1b968 <flatcc_json_printer_int64_enum_struct_field@@Base+0x48>
   1b954:	add	r1, r2, #1
   1b958:	mov	r3, #44	; 0x2c
   1b95c:	str	r1, [r0, #20]
   1b960:	strb	r3, [r2]
   1b964:	ldr	r2, [r0, #20]
   1b968:	ldrb	r1, [r4, #25]
   1b96c:	cmp	r1, #0
   1b970:	bne	1bacc <flatcc_json_printer_int64_enum_struct_field@@Base+0x1ac>
   1b974:	ldr	r3, [r4, #16]
   1b978:	cmp	r3, r2
   1b97c:	bhi	1b990 <flatcc_json_printer_int64_enum_struct_field@@Base+0x70>
   1b980:	mov	r0, r4
   1b984:	ldr	r3, [r4, #44]	; 0x2c
   1b988:	blx	r3
   1b98c:	ldr	r2, [r4, #20]
   1b990:	mov	r3, #34	; 0x22
   1b994:	strb	r3, [r2]
   1b998:	ldrb	r3, [r4, #26]
   1b99c:	ldr	r2, [r4, #16]
   1b9a0:	ldr	r0, [r4, #20]
   1b9a4:	cmp	r3, #0
   1b9a8:	addeq	r0, r0, #1
   1b9ac:	add	r3, r0, r8
   1b9b0:	cmp	r2, r3
   1b9b4:	str	r0, [r4, #20]
   1b9b8:	bhi	1ba84 <flatcc_json_printer_int64_enum_struct_field@@Base+0x164>
   1b9bc:	mov	r2, r8
   1b9c0:	mov	r1, r9
   1b9c4:	mov	r0, r4
   1b9c8:	bl	14c50 <test_print@@Base+0x11b4>
   1b9cc:	ldr	r8, [r4, #20]
   1b9d0:	mov	r3, #34	; 0x22
   1b9d4:	mov	ip, #58	; 0x3a
   1b9d8:	mov	r0, #32
   1b9dc:	strb	r3, [r8]
   1b9e0:	ldrb	r3, [r4, #26]
   1b9e4:	ldr	r1, [r4, #20]
   1b9e8:	clz	r3, r3
   1b9ec:	lsr	r3, r3, #5
   1b9f0:	add	r2, r1, r3
   1b9f4:	add	r2, r2, #1
   1b9f8:	str	r2, [r4, #20]
   1b9fc:	strb	ip, [r1, r3]
   1ba00:	ldr	r3, [r4, #20]
   1ba04:	strb	r0, [r3]
   1ba08:	ldrb	r3, [r4, #25]
   1ba0c:	ldr	r1, [r4, #20]
   1ba10:	ldrb	r0, [r4, #27]
   1ba14:	adds	r3, r3, #0
   1ba18:	movne	r3, #1
   1ba1c:	add	r2, r1, r3
   1ba20:	cmp	r0, #0
   1ba24:	str	r2, [r4, #20]
   1ba28:	beq	1baa0 <flatcc_json_printer_int64_enum_struct_field@@Base+0x180>
   1ba2c:	cmp	r6, #0
   1ba30:	lsr	r5, r7, #31
   1ba34:	sbcs	r0, r7, #0
   1ba38:	bge	1ba50 <flatcc_json_printer_int64_enum_struct_field@@Base+0x130>
   1ba3c:	rsbs	r6, r6, #0
   1ba40:	mov	r0, #45	; 0x2d
   1ba44:	rsc	r7, r7, #0
   1ba48:	add	r2, r2, #1
   1ba4c:	strb	r0, [r1, r3]
   1ba50:	mov	r0, r6
   1ba54:	mov	r1, r7
   1ba58:	bl	1424c <test_print@@Base+0x7b0>
   1ba5c:	ldr	r3, [r4, #20]
   1ba60:	add	r0, r5, r0
   1ba64:	ldrd	r6, [sp, #8]
   1ba68:	ldrd	r8, [sp, #16]
   1ba6c:	add	r3, r3, r0
   1ba70:	ldr	sl, [sp, #24]
   1ba74:	str	r3, [r4, #20]
   1ba78:	ldrd	r4, [sp]
   1ba7c:	add	sp, sp, #28
   1ba80:	pop	{pc}		; (ldr pc, [sp], #4)
   1ba84:	mov	r2, r8
   1ba88:	mov	r1, r9
   1ba8c:	bl	12420 <memcpy@plt>
   1ba90:	ldr	r3, [r4, #20]
   1ba94:	add	r8, r3, r8
   1ba98:	str	r8, [r4, #20]
   1ba9c:	b	1b9d0 <flatcc_json_printer_int64_enum_struct_field@@Base+0xb0>
   1baa0:	mov	r2, r6
   1baa4:	mov	r3, r7
   1baa8:	ldrd	r6, [sp, #8]
   1baac:	mov	r0, r4
   1bab0:	mov	r1, r5
   1bab4:	ldrd	r4, [sp]
   1bab8:	ldrd	r8, [sp, #16]
   1babc:	ldr	sl, [sp, #24]
   1bac0:	ldr	lr, [sp, #28]
   1bac4:	add	sp, sp, #32
   1bac8:	bx	r1
   1bacc:	add	r1, r2, #1
   1bad0:	mov	r3, #10
   1bad4:	str	r1, [r4, #20]
   1bad8:	strb	r3, [r2]
   1badc:	ldrb	r3, [r4, #25]
   1bae0:	ldr	r1, [r4, #16]
   1bae4:	ldr	r2, [r4, #32]
   1bae8:	ldr	r0, [r4, #20]
   1baec:	mul	sl, r2, r3
   1baf0:	add	r3, r0, sl
   1baf4:	cmp	r1, r3
   1baf8:	bcs	1bb10 <flatcc_json_printer_int64_enum_struct_field@@Base+0x1f0>
   1bafc:	mov	r1, sl
   1bb00:	mov	r0, r4
   1bb04:	bl	14d14 <test_print@@Base+0x1278>
   1bb08:	ldr	r2, [r4, #20]
   1bb0c:	b	1b990 <flatcc_json_printer_int64_enum_struct_field@@Base+0x70>
   1bb10:	mov	r2, sl
   1bb14:	mov	r1, #32
   1bb18:	bl	124bc <memset@plt>
   1bb1c:	ldr	r2, [r4, #20]
   1bb20:	add	r2, r2, sl
   1bb24:	str	r2, [r4, #20]
   1bb28:	b	1b990 <flatcc_json_printer_int64_enum_struct_field@@Base+0x70>

0001bb2c <flatcc_json_printer_bool_enum_struct_field@@Base>:
   1bb2c:	cmp	r1, #0
   1bb30:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1bb34:	mov	r4, r0
   1bb38:	strd	r6, [sp, #8]
   1bb3c:	strd	r8, [sp, #16]
   1bb40:	str	sl, [sp, #24]
   1bb44:	str	lr, [sp, #28]
   1bb48:	ldrb	r5, [r2, r3]
   1bb4c:	ldr	r2, [r0, #20]
   1bb50:	ldr	r8, [sp, #32]
   1bb54:	ldr	r7, [sp, #36]	; 0x24
   1bb58:	ldr	r6, [sp, #40]	; 0x28
   1bb5c:	beq	1bb74 <flatcc_json_printer_bool_enum_struct_field@@Base+0x48>
   1bb60:	add	r1, r2, #1
   1bb64:	mov	r3, #44	; 0x2c
   1bb68:	str	r1, [r0, #20]
   1bb6c:	strb	r3, [r2]
   1bb70:	ldr	r2, [r0, #20]
   1bb74:	ldrb	r1, [r4, #25]
   1bb78:	cmp	r1, #0
   1bb7c:	bne	1bca4 <flatcc_json_printer_bool_enum_struct_field@@Base+0x178>
   1bb80:	ldr	r3, [r4, #16]
   1bb84:	cmp	r3, r2
   1bb88:	bhi	1bb9c <flatcc_json_printer_bool_enum_struct_field@@Base+0x70>
   1bb8c:	mov	r0, r4
   1bb90:	ldr	r3, [r4, #44]	; 0x2c
   1bb94:	blx	r3
   1bb98:	ldr	r2, [r4, #20]
   1bb9c:	mov	r3, #34	; 0x22
   1bba0:	strb	r3, [r2]
   1bba4:	ldrb	r3, [r4, #26]
   1bba8:	ldr	r2, [r4, #16]
   1bbac:	ldr	r0, [r4, #20]
   1bbb0:	cmp	r3, #0
   1bbb4:	addeq	r0, r0, #1
   1bbb8:	add	r3, r0, r7
   1bbbc:	cmp	r2, r3
   1bbc0:	str	r0, [r4, #20]
   1bbc4:	bhi	1bc5c <flatcc_json_printer_bool_enum_struct_field@@Base+0x130>
   1bbc8:	mov	r2, r7
   1bbcc:	mov	r1, r8
   1bbd0:	mov	r0, r4
   1bbd4:	bl	14c50 <test_print@@Base+0x11b4>
   1bbd8:	ldr	r2, [r4, #20]
   1bbdc:	mov	r3, #34	; 0x22
   1bbe0:	mov	ip, #58	; 0x3a
   1bbe4:	mov	r0, #32
   1bbe8:	strb	r3, [r2]
   1bbec:	ldrb	r3, [r4, #26]
   1bbf0:	ldr	r1, [r4, #20]
   1bbf4:	clz	r3, r3
   1bbf8:	lsr	r3, r3, #5
   1bbfc:	add	r2, r1, r3
   1bc00:	add	r2, r2, #1
   1bc04:	str	r2, [r4, #20]
   1bc08:	strb	ip, [r1, r3]
   1bc0c:	ldr	r3, [r4, #20]
   1bc10:	strb	r0, [r3]
   1bc14:	ldrb	r2, [r4, #25]
   1bc18:	ldr	r1, [r4, #20]
   1bc1c:	ldrb	r3, [r4, #27]
   1bc20:	cmp	r2, #0
   1bc24:	addne	r1, r1, #1
   1bc28:	cmp	r3, #0
   1bc2c:	str	r1, [r4, #20]
   1bc30:	bne	1bc78 <flatcc_json_printer_bool_enum_struct_field@@Base+0x14c>
   1bc34:	mov	r1, r5
   1bc38:	mov	r0, r4
   1bc3c:	ldrd	r4, [sp]
   1bc40:	mov	r3, r6
   1bc44:	ldrd	r6, [sp, #8]
   1bc48:	ldrd	r8, [sp, #16]
   1bc4c:	ldr	sl, [sp, #24]
   1bc50:	ldr	lr, [sp, #28]
   1bc54:	add	sp, sp, #32
   1bc58:	bx	r3
   1bc5c:	mov	r2, r7
   1bc60:	mov	r1, r8
   1bc64:	bl	12420 <memcpy@plt>
   1bc68:	ldr	r2, [r4, #20]
   1bc6c:	add	r2, r2, r7
   1bc70:	str	r2, [r4, #20]
   1bc74:	b	1bbdc <flatcc_json_printer_bool_enum_struct_field@@Base+0xb0>
   1bc78:	mov	r0, r5
   1bc7c:	bl	150e0 <test_print@@Base+0x1644>
   1bc80:	ldr	r3, [r4, #20]
   1bc84:	ldrd	r6, [sp, #8]
   1bc88:	ldrd	r8, [sp, #16]
   1bc8c:	add	r0, r3, r0
   1bc90:	ldr	sl, [sp, #24]
   1bc94:	str	r0, [r4, #20]
   1bc98:	ldrd	r4, [sp]
   1bc9c:	add	sp, sp, #28
   1bca0:	pop	{pc}		; (ldr pc, [sp], #4)
   1bca4:	add	r1, r2, #1
   1bca8:	mov	r3, #10
   1bcac:	str	r1, [r4, #20]
   1bcb0:	strb	r3, [r2]
   1bcb4:	ldrb	r3, [r4, #25]
   1bcb8:	ldr	r1, [r4, #16]
   1bcbc:	ldr	r2, [r4, #32]
   1bcc0:	ldr	r0, [r4, #20]
   1bcc4:	mul	r9, r2, r3
   1bcc8:	add	r3, r0, r9
   1bccc:	cmp	r1, r3
   1bcd0:	bcs	1bce8 <flatcc_json_printer_bool_enum_struct_field@@Base+0x1bc>
   1bcd4:	mov	r1, r9
   1bcd8:	mov	r0, r4
   1bcdc:	bl	14d14 <test_print@@Base+0x1278>
   1bce0:	ldr	r2, [r4, #20]
   1bce4:	b	1bb9c <flatcc_json_printer_bool_enum_struct_field@@Base+0x70>
   1bce8:	mov	r2, r9
   1bcec:	mov	r1, #32
   1bcf0:	bl	124bc <memset@plt>
   1bcf4:	ldr	r2, [r4, #20]
   1bcf8:	add	r2, r2, r9
   1bcfc:	str	r2, [r4, #20]
   1bd00:	b	1bb9c <flatcc_json_printer_bool_enum_struct_field@@Base+0x70>

0001bd04 <flatcc_json_printer_uint8_vector_field@@Base>:
   1bd04:	ldr	ip, [r1, #8]
   1bd08:	add	r2, r2, #2
   1bd0c:	lsl	r2, r2, #1
   1bd10:	cmp	ip, r2
   1bd14:	bxle	lr
   1bd18:	ldr	ip, [r1, #4]
   1bd1c:	ldrh	r2, [ip, r2]
   1bd20:	cmp	r2, #0
   1bd24:	bxeq	lr
   1bd28:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1bd2c:	ldr	ip, [r1]
   1bd30:	strd	r6, [sp, #8]
   1bd34:	str	lr, [sp, #28]
   1bd38:	strd	r8, [sp, #16]
   1bd3c:	str	sl, [sp, #24]
   1bd40:	adds	lr, ip, r2
   1bd44:	beq	1bedc <flatcc_json_printer_uint8_vector_field@@Base+0x1d8>
   1bd48:	ldr	r4, [r1, #16]
   1bd4c:	add	r5, r4, #1
   1bd50:	cmp	r4, #0
   1bd54:	str	r5, [r1, #16]
   1bd58:	beq	1bd70 <flatcc_json_printer_uint8_vector_field@@Base+0x6c>
   1bd5c:	ldr	r1, [r0, #20]
   1bd60:	mov	r4, #44	; 0x2c
   1bd64:	add	r5, r1, #1
   1bd68:	str	r5, [r0, #20]
   1bd6c:	strb	r4, [r1]
   1bd70:	mov	r1, r3
   1bd74:	ldr	r3, [ip, r2]
   1bd78:	mov	r4, r0
   1bd7c:	ldr	r2, [sp, #32]
   1bd80:	add	r6, lr, r3
   1bd84:	ldr	r7, [lr, r3]
   1bd88:	bl	16158 <test_print@@Base+0x26bc>
   1bd8c:	ldr	r2, [r4, #20]
   1bd90:	mov	r1, #91	; 0x5b
   1bd94:	ldr	r3, [r4, #32]
   1bd98:	cmp	r7, #0
   1bd9c:	add	r0, r2, #1
   1bda0:	add	r3, r3, #1
   1bda4:	str	r0, [r4, #20]
   1bda8:	str	r3, [r4, #32]
   1bdac:	strb	r1, [r2]
   1bdb0:	beq	1bebc <flatcc_json_printer_uint8_vector_field@@Base+0x1b8>
   1bdb4:	ldrb	r3, [r4, #25]
   1bdb8:	ldr	r1, [r4, #20]
   1bdbc:	cmp	r3, #0
   1bdc0:	bne	1bef4 <flatcc_json_printer_uint8_vector_field@@Base+0x1f0>
   1bdc4:	ldr	r2, [r4, #16]
   1bdc8:	cmp	r2, r1
   1bdcc:	bhi	1bde4 <flatcc_json_printer_uint8_vector_field@@Base+0xe0>
   1bdd0:	mov	r1, r3
   1bdd4:	mov	r0, r4
   1bdd8:	ldr	r3, [r4, #44]	; 0x2c
   1bddc:	blx	r3
   1bde0:	ldr	r1, [r4, #20]
   1bde4:	add	r5, r6, #5
   1bde8:	ldrb	r0, [r6, #4]
   1bdec:	bl	14fac <test_print@@Base+0x1510>
   1bdf0:	ldr	r3, [r4, #20]
   1bdf4:	cmp	r7, #1
   1bdf8:	add	r0, r3, r0
   1bdfc:	str	r0, [r4, #20]
   1be00:	beq	1bec0 <flatcc_json_printer_uint8_vector_field@@Base+0x1bc>
   1be04:	add	r3, r7, #4
   1be08:	mov	r8, #10
   1be0c:	mov	r7, #44	; 0x2c
   1be10:	add	r6, r6, r3
   1be14:	b	1be58 <flatcc_json_printer_uint8_vector_field@@Base+0x154>
   1be18:	ldr	r3, [r4, #16]
   1be1c:	mov	r0, r4
   1be20:	ldr	r2, [r4, #20]
   1be24:	cmp	r2, r3
   1be28:	bcc	1be38 <flatcc_json_printer_uint8_vector_field@@Base+0x134>
   1be2c:	ldr	r3, [r4, #44]	; 0x2c
   1be30:	blx	r3
   1be34:	ldr	r2, [r4, #20]
   1be38:	mov	r1, r2
   1be3c:	ldrb	r0, [r5], #1
   1be40:	bl	14fac <test_print@@Base+0x1510>
   1be44:	ldr	r3, [r4, #20]
   1be48:	cmp	r5, r6
   1be4c:	add	r0, r3, r0
   1be50:	str	r0, [r4, #20]
   1be54:	beq	1bec0 <flatcc_json_printer_uint8_vector_field@@Base+0x1bc>
   1be58:	add	r3, r0, #1
   1be5c:	str	r3, [r4, #20]
   1be60:	strb	r7, [r0]
   1be64:	ldrb	r1, [r4, #25]
   1be68:	cmp	r1, #0
   1be6c:	beq	1be18 <flatcc_json_printer_uint8_vector_field@@Base+0x114>
   1be70:	ldr	r3, [r4, #20]
   1be74:	mov	r1, #32
   1be78:	mov	r0, r4
   1be7c:	add	r2, r3, #1
   1be80:	str	r2, [r4, #20]
   1be84:	strb	r8, [r3]
   1be88:	ldrb	r2, [r4, #25]
   1be8c:	ldr	lr, [r4, #16]
   1be90:	ldr	r9, [r4, #32]
   1be94:	ldr	r3, [r4, #20]
   1be98:	mul	r9, r9, r2
   1be9c:	add	ip, r3, r9
   1bea0:	mov	r2, r9
   1bea4:	cmp	lr, ip
   1bea8:	bcs	1bf38 <flatcc_json_printer_uint8_vector_field@@Base+0x234>
   1beac:	mov	r1, r9
   1beb0:	bl	14d14 <test_print@@Base+0x1278>
   1beb4:	ldr	r2, [r4, #20]
   1beb8:	b	1be38 <flatcc_json_printer_uint8_vector_field@@Base+0x134>
   1bebc:	ldr	r0, [r4, #20]
   1bec0:	add	r3, r0, #1
   1bec4:	ldrb	r2, [r4, #25]
   1bec8:	cmp	r2, #0
   1becc:	bne	1bf50 <flatcc_json_printer_uint8_vector_field@@Base+0x24c>
   1bed0:	mov	r2, #93	; 0x5d
   1bed4:	str	r3, [r4, #20]
   1bed8:	strb	r2, [r0]
   1bedc:	ldrd	r4, [sp]
   1bee0:	ldrd	r6, [sp, #8]
   1bee4:	ldrd	r8, [sp, #16]
   1bee8:	ldr	sl, [sp, #24]
   1beec:	add	sp, sp, #28
   1bef0:	pop	{pc}		; (ldr pc, [sp], #4)
   1bef4:	add	r2, r1, #1
   1bef8:	mov	r3, #10
   1befc:	str	r2, [r4, #20]
   1bf00:	strb	r3, [r1]
   1bf04:	ldrb	r5, [r4, #25]
   1bf08:	ldr	r2, [r4, #16]
   1bf0c:	ldr	r1, [r4, #32]
   1bf10:	ldr	r0, [r4, #20]
   1bf14:	mul	r5, r1, r5
   1bf18:	add	r3, r0, r5
   1bf1c:	cmp	r2, r3
   1bf20:	bcs	1bfb8 <flatcc_json_printer_uint8_vector_field@@Base+0x2b4>
   1bf24:	mov	r1, r5
   1bf28:	mov	r0, r4
   1bf2c:	bl	14d14 <test_print@@Base+0x1278>
   1bf30:	ldr	r1, [r4, #20]
   1bf34:	b	1bde4 <flatcc_json_printer_uint8_vector_field@@Base+0xe0>
   1bf38:	mov	r0, r3
   1bf3c:	bl	124bc <memset@plt>
   1bf40:	ldr	r2, [r4, #20]
   1bf44:	add	r2, r2, r9
   1bf48:	str	r2, [r4, #20]
   1bf4c:	b	1be38 <flatcc_json_printer_uint8_vector_field@@Base+0x134>
   1bf50:	mov	r2, #10
   1bf54:	str	r3, [r4, #20]
   1bf58:	strb	r2, [r0]
   1bf5c:	ldrb	r5, [r4, #25]
   1bf60:	ldr	r3, [r4, #32]
   1bf64:	ldr	r2, [r4, #16]
   1bf68:	ldr	r0, [r4, #20]
   1bf6c:	sub	r3, r3, #1
   1bf70:	mul	r5, r3, r5
   1bf74:	str	r3, [r4, #32]
   1bf78:	add	r3, r0, r5
   1bf7c:	cmp	r2, r3
   1bf80:	bcs	1bf9c <flatcc_json_printer_uint8_vector_field@@Base+0x298>
   1bf84:	mov	r0, r4
   1bf88:	mov	r1, r5
   1bf8c:	bl	14d14 <test_print@@Base+0x1278>
   1bf90:	ldr	r0, [r4, #20]
   1bf94:	add	r3, r0, #1
   1bf98:	b	1bed0 <flatcc_json_printer_uint8_vector_field@@Base+0x1cc>
   1bf9c:	mov	r2, r5
   1bfa0:	mov	r1, #32
   1bfa4:	bl	124bc <memset@plt>
   1bfa8:	ldr	r0, [r4, #20]
   1bfac:	add	r0, r0, r5
   1bfb0:	add	r3, r0, #1
   1bfb4:	b	1bed0 <flatcc_json_printer_uint8_vector_field@@Base+0x1cc>
   1bfb8:	mov	r1, #32
   1bfbc:	mov	r2, r5
   1bfc0:	bl	124bc <memset@plt>
   1bfc4:	ldr	r1, [r4, #20]
   1bfc8:	add	r1, r1, r5
   1bfcc:	str	r1, [r4, #20]
   1bfd0:	b	1bde4 <flatcc_json_printer_uint8_vector_field@@Base+0xe0>

0001bfd4 <flatcc_json_printer_utype_vector_field@@Base>:
   1bfd4:	b	1bd04 <flatcc_json_printer_uint8_vector_field@@Base>

0001bfd8 <flatcc_json_printer_uint16_vector_field@@Base>:
   1bfd8:	ldr	ip, [r1, #8]
   1bfdc:	add	r2, r2, #2
   1bfe0:	lsl	r2, r2, #1
   1bfe4:	cmp	ip, r2
   1bfe8:	bxle	lr
   1bfec:	ldr	ip, [r1, #4]
   1bff0:	ldrh	r2, [ip, r2]
   1bff4:	cmp	r2, #0
   1bff8:	bxeq	lr
   1bffc:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1c000:	strd	r6, [sp, #8]
   1c004:	str	lr, [sp, #28]
   1c008:	ldr	lr, [r1]
   1c00c:	strd	r8, [sp, #16]
   1c010:	str	sl, [sp, #24]
   1c014:	adds	r7, lr, r2
   1c018:	beq	1c258 <flatcc_json_printer_uint16_vector_field@@Base+0x280>
   1c01c:	ldr	r4, [r1, #16]
   1c020:	ldr	ip, [r0, #20]
   1c024:	cmp	r4, #0
   1c028:	add	r4, r4, #1
   1c02c:	str	r4, [r1, #16]
   1c030:	beq	1c048 <flatcc_json_printer_uint16_vector_field@@Base+0x70>
   1c034:	add	r4, ip, #1
   1c038:	mov	r1, #44	; 0x2c
   1c03c:	str	r4, [r0, #20]
   1c040:	strb	r1, [ip]
   1c044:	ldr	ip, [r0, #20]
   1c048:	mov	r6, r3
   1c04c:	mov	r4, r0
   1c050:	ldrb	r1, [r0, #25]
   1c054:	ldr	r3, [lr, r2]
   1c058:	cmp	r1, #0
   1c05c:	add	r5, r7, r3
   1c060:	ldr	r7, [r7, r3]
   1c064:	bne	1c2ec <flatcc_json_printer_uint16_vector_field@@Base+0x314>
   1c068:	ldr	r3, [r0, #16]
   1c06c:	cmp	ip, r3
   1c070:	bcs	1c280 <flatcc_json_printer_uint16_vector_field@@Base+0x2a8>
   1c074:	mov	r3, #34	; 0x22
   1c078:	mov	r1, r6
   1c07c:	strb	r3, [ip]
   1c080:	ldrb	r3, [r4, #26]
   1c084:	ldr	r2, [r4, #16]
   1c088:	ldr	r0, [r4, #20]
   1c08c:	cmp	r3, #0
   1c090:	addeq	r0, r0, #1
   1c094:	ldr	r3, [sp, #32]
   1c098:	str	r0, [r4, #20]
   1c09c:	add	r3, r0, r3
   1c0a0:	cmp	r2, r3
   1c0a4:	ldr	r2, [sp, #32]
   1c0a8:	bls	1c270 <flatcc_json_printer_uint16_vector_field@@Base+0x298>
   1c0ac:	bl	12420 <memcpy@plt>
   1c0b0:	ldr	r3, [r4, #20]
   1c0b4:	ldr	r2, [sp, #32]
   1c0b8:	add	r3, r3, r2
   1c0bc:	str	r3, [r4, #20]
   1c0c0:	mov	r2, #34	; 0x22
   1c0c4:	mov	lr, #58	; 0x3a
   1c0c8:	mov	ip, #32
   1c0cc:	mov	r1, #91	; 0x5b
   1c0d0:	strb	r2, [r3]
   1c0d4:	ldrb	r3, [r4, #26]
   1c0d8:	ldr	r0, [r4, #20]
   1c0dc:	clz	r3, r3
   1c0e0:	lsr	r3, r3, #5
   1c0e4:	add	r2, r0, r3
   1c0e8:	add	r2, r2, #1
   1c0ec:	str	r2, [r4, #20]
   1c0f0:	strb	lr, [r0, r3]
   1c0f4:	ldr	r3, [r4, #20]
   1c0f8:	strb	ip, [r3]
   1c0fc:	ldrb	r3, [r4, #25]
   1c100:	ldr	lr, [r4, #20]
   1c104:	ldr	r2, [r4, #32]
   1c108:	adds	r3, r3, #0
   1c10c:	movne	r3, #1
   1c110:	cmp	r7, #0
   1c114:	add	r0, lr, r3
   1c118:	add	r0, r0, #1
   1c11c:	add	r2, r2, #1
   1c120:	str	r0, [r4, #20]
   1c124:	str	r2, [r4, #32]
   1c128:	strb	r1, [lr, r3]
   1c12c:	beq	1c238 <flatcc_json_printer_uint16_vector_field@@Base+0x260>
   1c130:	ldrb	r3, [r4, #25]
   1c134:	ldr	r1, [r4, #20]
   1c138:	cmp	r3, #0
   1c13c:	bne	1c290 <flatcc_json_printer_uint16_vector_field@@Base+0x2b8>
   1c140:	ldr	r2, [r4, #16]
   1c144:	cmp	r2, r1
   1c148:	bhi	1c160 <flatcc_json_printer_uint16_vector_field@@Base+0x188>
   1c14c:	mov	r1, r3
   1c150:	mov	r0, r4
   1c154:	ldr	r3, [r4, #44]	; 0x2c
   1c158:	blx	r3
   1c15c:	ldr	r1, [r4, #20]
   1c160:	add	r6, r5, #6
   1c164:	ldrh	r0, [r5, #4]
   1c168:	sub	r5, r7, #2
   1c16c:	bl	13db8 <test_print@@Base+0x31c>
   1c170:	ldr	r3, [r4, #20]
   1c174:	cmp	r7, #1
   1c178:	add	r0, r3, r0
   1c17c:	str	r0, [r4, #20]
   1c180:	beq	1c23c <flatcc_json_printer_uint16_vector_field@@Base+0x264>
   1c184:	mov	r7, #44	; 0x2c
   1c188:	mov	r8, #10
   1c18c:	b	1c1d4 <flatcc_json_printer_uint16_vector_field@@Base+0x1fc>
   1c190:	ldr	r3, [r4, #16]
   1c194:	mov	r0, r4
   1c198:	ldr	r2, [r4, #20]
   1c19c:	cmp	r2, r3
   1c1a0:	bcc	1c1b0 <flatcc_json_printer_uint16_vector_field@@Base+0x1d8>
   1c1a4:	ldr	r3, [r4, #44]	; 0x2c
   1c1a8:	blx	r3
   1c1ac:	ldr	r2, [r4, #20]
   1c1b0:	mov	r1, r2
   1c1b4:	sub	r5, r5, #1
   1c1b8:	ldrh	r0, [r6], #2
   1c1bc:	bl	13db8 <test_print@@Base+0x31c>
   1c1c0:	ldr	r3, [r4, #20]
   1c1c4:	cmn	r5, #1
   1c1c8:	add	r0, r3, r0
   1c1cc:	str	r0, [r4, #20]
   1c1d0:	beq	1c23c <flatcc_json_printer_uint16_vector_field@@Base+0x264>
   1c1d4:	add	r3, r0, #1
   1c1d8:	str	r3, [r4, #20]
   1c1dc:	strb	r7, [r0]
   1c1e0:	ldrb	r1, [r4, #25]
   1c1e4:	cmp	r1, #0
   1c1e8:	beq	1c190 <flatcc_json_printer_uint16_vector_field@@Base+0x1b8>
   1c1ec:	ldr	r3, [r4, #20]
   1c1f0:	mov	r1, #32
   1c1f4:	mov	r0, r4
   1c1f8:	add	r2, r3, #1
   1c1fc:	str	r2, [r4, #20]
   1c200:	strb	r8, [r3]
   1c204:	ldrb	r2, [r4, #25]
   1c208:	ldr	lr, [r4, #16]
   1c20c:	ldr	r9, [r4, #32]
   1c210:	ldr	r3, [r4, #20]
   1c214:	mul	r9, r9, r2
   1c218:	add	ip, r3, r9
   1c21c:	mov	r2, r9
   1c220:	cmp	lr, ip
   1c224:	bcs	1c2d4 <flatcc_json_printer_uint16_vector_field@@Base+0x2fc>
   1c228:	mov	r1, r9
   1c22c:	bl	14d14 <test_print@@Base+0x1278>
   1c230:	ldr	r2, [r4, #20]
   1c234:	b	1c1b0 <flatcc_json_printer_uint16_vector_field@@Base+0x1d8>
   1c238:	ldr	r0, [r4, #20]
   1c23c:	add	r3, r0, #1
   1c240:	ldrb	r2, [r4, #25]
   1c244:	cmp	r2, #0
   1c248:	bne	1c330 <flatcc_json_printer_uint16_vector_field@@Base+0x358>
   1c24c:	mov	r2, #93	; 0x5d
   1c250:	str	r3, [r4, #20]
   1c254:	strb	r2, [r0]
   1c258:	ldrd	r4, [sp]
   1c25c:	ldrd	r6, [sp, #8]
   1c260:	ldrd	r8, [sp, #16]
   1c264:	ldr	sl, [sp, #24]
   1c268:	add	sp, sp, #28
   1c26c:	pop	{pc}		; (ldr pc, [sp], #4)
   1c270:	mov	r0, r4
   1c274:	bl	14c50 <test_print@@Base+0x11b4>
   1c278:	ldr	r3, [r4, #20]
   1c27c:	b	1c0c0 <flatcc_json_printer_uint16_vector_field@@Base+0xe8>
   1c280:	ldr	r3, [r0, #44]	; 0x2c
   1c284:	blx	r3
   1c288:	ldr	ip, [r4, #20]
   1c28c:	b	1c074 <flatcc_json_printer_uint16_vector_field@@Base+0x9c>
   1c290:	add	r2, r1, #1
   1c294:	mov	r3, #10
   1c298:	str	r2, [r4, #20]
   1c29c:	strb	r3, [r1]
   1c2a0:	ldrb	r6, [r4, #25]
   1c2a4:	ldr	r2, [r4, #16]
   1c2a8:	ldr	r1, [r4, #32]
   1c2ac:	ldr	r0, [r4, #20]
   1c2b0:	mul	r6, r1, r6
   1c2b4:	add	r3, r0, r6
   1c2b8:	cmp	r2, r3
   1c2bc:	bcs	1c3b4 <flatcc_json_printer_uint16_vector_field@@Base+0x3dc>
   1c2c0:	mov	r1, r6
   1c2c4:	mov	r0, r4
   1c2c8:	bl	14d14 <test_print@@Base+0x1278>
   1c2cc:	ldr	r1, [r4, #20]
   1c2d0:	b	1c160 <flatcc_json_printer_uint16_vector_field@@Base+0x188>
   1c2d4:	mov	r0, r3
   1c2d8:	bl	124bc <memset@plt>
   1c2dc:	ldr	r2, [r4, #20]
   1c2e0:	add	r2, r2, r9
   1c2e4:	str	r2, [r4, #20]
   1c2e8:	b	1c1b0 <flatcc_json_printer_uint16_vector_field@@Base+0x1d8>
   1c2ec:	add	r2, ip, #1
   1c2f0:	mov	r3, #10
   1c2f4:	str	r2, [r0, #20]
   1c2f8:	strb	r3, [ip]
   1c2fc:	ldrb	r8, [r0, #25]
   1c300:	ldr	ip, [r4, #32]
   1c304:	ldr	r2, [r0, #16]
   1c308:	ldr	r0, [r0, #20]
   1c30c:	mul	r8, ip, r8
   1c310:	add	r3, r0, r8
   1c314:	cmp	r2, r3
   1c318:	bcs	1c37c <flatcc_json_printer_uint16_vector_field@@Base+0x3a4>
   1c31c:	mov	r1, r8
   1c320:	mov	r0, r4
   1c324:	bl	14d14 <test_print@@Base+0x1278>
   1c328:	ldr	ip, [r4, #20]
   1c32c:	b	1c074 <flatcc_json_printer_uint16_vector_field@@Base+0x9c>
   1c330:	mov	r2, #10
   1c334:	str	r3, [r4, #20]
   1c338:	strb	r2, [r0]
   1c33c:	ldrb	r5, [r4, #25]
   1c340:	ldr	r3, [r4, #32]
   1c344:	ldr	r2, [r4, #16]
   1c348:	ldr	r0, [r4, #20]
   1c34c:	sub	r3, r3, #1
   1c350:	mul	r5, r3, r5
   1c354:	str	r3, [r4, #32]
   1c358:	add	r3, r0, r5
   1c35c:	cmp	r2, r3
   1c360:	bcs	1c398 <flatcc_json_printer_uint16_vector_field@@Base+0x3c0>
   1c364:	mov	r0, r4
   1c368:	mov	r1, r5
   1c36c:	bl	14d14 <test_print@@Base+0x1278>
   1c370:	ldr	r0, [r4, #20]
   1c374:	add	r3, r0, #1
   1c378:	b	1c24c <flatcc_json_printer_uint16_vector_field@@Base+0x274>
   1c37c:	mov	r2, r8
   1c380:	mov	r1, #32
   1c384:	bl	124bc <memset@plt>
   1c388:	ldr	ip, [r4, #20]
   1c38c:	add	ip, ip, r8
   1c390:	str	ip, [r4, #20]
   1c394:	b	1c074 <flatcc_json_printer_uint16_vector_field@@Base+0x9c>
   1c398:	mov	r2, r5
   1c39c:	mov	r1, #32
   1c3a0:	bl	124bc <memset@plt>
   1c3a4:	ldr	r0, [r4, #20]
   1c3a8:	add	r0, r0, r5
   1c3ac:	add	r3, r0, #1
   1c3b0:	b	1c24c <flatcc_json_printer_uint16_vector_field@@Base+0x274>
   1c3b4:	mov	r1, ip
   1c3b8:	mov	r2, r6
   1c3bc:	bl	124bc <memset@plt>
   1c3c0:	ldr	r1, [r4, #20]
   1c3c4:	add	r1, r1, r6
   1c3c8:	str	r1, [r4, #20]
   1c3cc:	b	1c160 <flatcc_json_printer_uint16_vector_field@@Base+0x188>

0001c3d0 <flatcc_json_printer_uint32_vector_field@@Base>:
   1c3d0:	ldr	ip, [r1, #8]
   1c3d4:	add	r2, r2, #2
   1c3d8:	lsl	r2, r2, #1
   1c3dc:	cmp	ip, r2
   1c3e0:	bxle	lr
   1c3e4:	ldr	ip, [r1, #4]
   1c3e8:	ldrh	r2, [ip, r2]
   1c3ec:	cmp	r2, #0
   1c3f0:	bxeq	lr
   1c3f4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1c3f8:	ldr	ip, [r1]
   1c3fc:	strd	r6, [sp, #8]
   1c400:	str	lr, [sp, #28]
   1c404:	strd	r8, [sp, #16]
   1c408:	str	sl, [sp, #24]
   1c40c:	adds	lr, ip, r2
   1c410:	beq	1c5a8 <flatcc_json_printer_uint32_vector_field@@Base+0x1d8>
   1c414:	ldr	r4, [r1, #16]
   1c418:	add	r5, r4, #1
   1c41c:	cmp	r4, #0
   1c420:	str	r5, [r1, #16]
   1c424:	beq	1c43c <flatcc_json_printer_uint32_vector_field@@Base+0x6c>
   1c428:	ldr	r1, [r0, #20]
   1c42c:	mov	r4, #44	; 0x2c
   1c430:	add	r5, r1, #1
   1c434:	str	r5, [r0, #20]
   1c438:	strb	r4, [r1]
   1c43c:	mov	r1, r3
   1c440:	ldr	r3, [ip, r2]
   1c444:	mov	r4, r0
   1c448:	ldr	r2, [sp, #32]
   1c44c:	add	r5, lr, r3
   1c450:	ldr	r7, [lr, r3]
   1c454:	bl	16158 <test_print@@Base+0x26bc>
   1c458:	ldr	r2, [r4, #20]
   1c45c:	mov	r1, #91	; 0x5b
   1c460:	ldr	r3, [r4, #32]
   1c464:	cmp	r7, #0
   1c468:	add	r0, r2, #1
   1c46c:	add	r3, r3, #1
   1c470:	str	r0, [r4, #20]
   1c474:	str	r3, [r4, #32]
   1c478:	strb	r1, [r2]
   1c47c:	beq	1c588 <flatcc_json_printer_uint32_vector_field@@Base+0x1b8>
   1c480:	ldrb	r3, [r4, #25]
   1c484:	ldr	r1, [r4, #20]
   1c488:	cmp	r3, #0
   1c48c:	bne	1c5c0 <flatcc_json_printer_uint32_vector_field@@Base+0x1f0>
   1c490:	ldr	r2, [r4, #16]
   1c494:	cmp	r2, r1
   1c498:	bhi	1c4b0 <flatcc_json_printer_uint32_vector_field@@Base+0xe0>
   1c49c:	mov	r1, r3
   1c4a0:	mov	r0, r4
   1c4a4:	ldr	r3, [r4, #44]	; 0x2c
   1c4a8:	blx	r3
   1c4ac:	ldr	r1, [r4, #20]
   1c4b0:	add	r6, r5, #8
   1c4b4:	ldr	r0, [r5, #4]
   1c4b8:	sub	r5, r7, #2
   1c4bc:	bl	13f20 <test_print@@Base+0x484>
   1c4c0:	ldr	r3, [r4, #20]
   1c4c4:	cmp	r7, #1
   1c4c8:	add	r0, r3, r0
   1c4cc:	str	r0, [r4, #20]
   1c4d0:	beq	1c58c <flatcc_json_printer_uint32_vector_field@@Base+0x1bc>
   1c4d4:	mov	r7, #44	; 0x2c
   1c4d8:	mov	r8, #10
   1c4dc:	b	1c524 <flatcc_json_printer_uint32_vector_field@@Base+0x154>
   1c4e0:	ldr	r3, [r4, #16]
   1c4e4:	mov	r0, r4
   1c4e8:	ldr	r2, [r4, #20]
   1c4ec:	cmp	r2, r3
   1c4f0:	bcc	1c500 <flatcc_json_printer_uint32_vector_field@@Base+0x130>
   1c4f4:	ldr	r3, [r4, #44]	; 0x2c
   1c4f8:	blx	r3
   1c4fc:	ldr	r2, [r4, #20]
   1c500:	mov	r1, r2
   1c504:	sub	r5, r5, #1
   1c508:	ldr	r0, [r6], #4
   1c50c:	bl	13f20 <test_print@@Base+0x484>
   1c510:	ldr	r3, [r4, #20]
   1c514:	cmn	r5, #1
   1c518:	add	r0, r3, r0
   1c51c:	str	r0, [r4, #20]
   1c520:	beq	1c58c <flatcc_json_printer_uint32_vector_field@@Base+0x1bc>
   1c524:	add	r3, r0, #1
   1c528:	str	r3, [r4, #20]
   1c52c:	strb	r7, [r0]
   1c530:	ldrb	r1, [r4, #25]
   1c534:	cmp	r1, #0
   1c538:	beq	1c4e0 <flatcc_json_printer_uint32_vector_field@@Base+0x110>
   1c53c:	ldr	r3, [r4, #20]
   1c540:	mov	r1, #32
   1c544:	mov	r0, r4
   1c548:	add	r2, r3, #1
   1c54c:	str	r2, [r4, #20]
   1c550:	strb	r8, [r3]
   1c554:	ldrb	r2, [r4, #25]
   1c558:	ldr	lr, [r4, #16]
   1c55c:	ldr	r9, [r4, #32]
   1c560:	ldr	r3, [r4, #20]
   1c564:	mul	r9, r9, r2
   1c568:	add	ip, r3, r9
   1c56c:	mov	r2, r9
   1c570:	cmp	lr, ip
   1c574:	bcs	1c604 <flatcc_json_printer_uint32_vector_field@@Base+0x234>
   1c578:	mov	r1, r9
   1c57c:	bl	14d14 <test_print@@Base+0x1278>
   1c580:	ldr	r2, [r4, #20]
   1c584:	b	1c500 <flatcc_json_printer_uint32_vector_field@@Base+0x130>
   1c588:	ldr	r0, [r4, #20]
   1c58c:	add	r3, r0, #1
   1c590:	ldrb	r2, [r4, #25]
   1c594:	cmp	r2, #0
   1c598:	bne	1c61c <flatcc_json_printer_uint32_vector_field@@Base+0x24c>
   1c59c:	mov	r2, #93	; 0x5d
   1c5a0:	str	r3, [r4, #20]
   1c5a4:	strb	r2, [r0]
   1c5a8:	ldrd	r4, [sp]
   1c5ac:	ldrd	r6, [sp, #8]
   1c5b0:	ldrd	r8, [sp, #16]
   1c5b4:	ldr	sl, [sp, #24]
   1c5b8:	add	sp, sp, #28
   1c5bc:	pop	{pc}		; (ldr pc, [sp], #4)
   1c5c0:	add	r2, r1, #1
   1c5c4:	mov	r3, #10
   1c5c8:	str	r2, [r4, #20]
   1c5cc:	strb	r3, [r1]
   1c5d0:	ldrb	r6, [r4, #25]
   1c5d4:	ldr	r2, [r4, #16]
   1c5d8:	ldr	r1, [r4, #32]
   1c5dc:	ldr	r0, [r4, #20]
   1c5e0:	mul	r6, r1, r6
   1c5e4:	add	r3, r0, r6
   1c5e8:	cmp	r2, r3
   1c5ec:	bcs	1c684 <flatcc_json_printer_uint32_vector_field@@Base+0x2b4>
   1c5f0:	mov	r1, r6
   1c5f4:	mov	r0, r4
   1c5f8:	bl	14d14 <test_print@@Base+0x1278>
   1c5fc:	ldr	r1, [r4, #20]
   1c600:	b	1c4b0 <flatcc_json_printer_uint32_vector_field@@Base+0xe0>
   1c604:	mov	r0, r3
   1c608:	bl	124bc <memset@plt>
   1c60c:	ldr	r2, [r4, #20]
   1c610:	add	r2, r2, r9
   1c614:	str	r2, [r4, #20]
   1c618:	b	1c500 <flatcc_json_printer_uint32_vector_field@@Base+0x130>
   1c61c:	mov	r2, #10
   1c620:	str	r3, [r4, #20]
   1c624:	strb	r2, [r0]
   1c628:	ldrb	r5, [r4, #25]
   1c62c:	ldr	r3, [r4, #32]
   1c630:	ldr	r2, [r4, #16]
   1c634:	ldr	r0, [r4, #20]
   1c638:	sub	r3, r3, #1
   1c63c:	mul	r5, r3, r5
   1c640:	str	r3, [r4, #32]
   1c644:	add	r3, r0, r5
   1c648:	cmp	r2, r3
   1c64c:	bcs	1c668 <flatcc_json_printer_uint32_vector_field@@Base+0x298>
   1c650:	mov	r0, r4
   1c654:	mov	r1, r5
   1c658:	bl	14d14 <test_print@@Base+0x1278>
   1c65c:	ldr	r0, [r4, #20]
   1c660:	add	r3, r0, #1
   1c664:	b	1c59c <flatcc_json_printer_uint32_vector_field@@Base+0x1cc>
   1c668:	mov	r2, r5
   1c66c:	mov	r1, #32
   1c670:	bl	124bc <memset@plt>
   1c674:	ldr	r0, [r4, #20]
   1c678:	add	r0, r0, r5
   1c67c:	add	r3, r0, #1
   1c680:	b	1c59c <flatcc_json_printer_uint32_vector_field@@Base+0x1cc>
   1c684:	mov	r1, #32
   1c688:	mov	r2, r6
   1c68c:	bl	124bc <memset@plt>
   1c690:	ldr	r1, [r4, #20]
   1c694:	add	r1, r1, r6
   1c698:	str	r1, [r4, #20]
   1c69c:	b	1c4b0 <flatcc_json_printer_uint32_vector_field@@Base+0xe0>

0001c6a0 <flatcc_json_printer_uint64_vector_field@@Base>:
   1c6a0:	ldr	ip, [r1, #8]
   1c6a4:	add	r2, r2, #2
   1c6a8:	lsl	r2, r2, #1
   1c6ac:	cmp	ip, r2
   1c6b0:	bxle	lr
   1c6b4:	ldr	ip, [r1, #4]
   1c6b8:	ldrh	r2, [ip, r2]
   1c6bc:	cmp	r2, #0
   1c6c0:	bxeq	lr
   1c6c4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1c6c8:	ldr	ip, [r1]
   1c6cc:	strd	r6, [sp, #8]
   1c6d0:	str	lr, [sp, #28]
   1c6d4:	strd	r8, [sp, #16]
   1c6d8:	str	sl, [sp, #24]
   1c6dc:	adds	lr, ip, r2
   1c6e0:	beq	1c870 <flatcc_json_printer_uint64_vector_field@@Base+0x1d0>
   1c6e4:	ldr	r4, [r1, #16]
   1c6e8:	add	r5, r4, #1
   1c6ec:	cmp	r4, #0
   1c6f0:	str	r5, [r1, #16]
   1c6f4:	beq	1c70c <flatcc_json_printer_uint64_vector_field@@Base+0x6c>
   1c6f8:	ldr	r1, [r0, #20]
   1c6fc:	mov	r4, #44	; 0x2c
   1c700:	add	r5, r1, #1
   1c704:	str	r5, [r0, #20]
   1c708:	strb	r4, [r1]
   1c70c:	mov	r1, r3
   1c710:	ldr	r3, [ip, r2]
   1c714:	mov	r4, r0
   1c718:	ldr	r2, [sp, #32]
   1c71c:	add	r5, lr, r3
   1c720:	ldr	r7, [lr, r3]
   1c724:	bl	16158 <test_print@@Base+0x26bc>
   1c728:	ldr	r2, [r4, #20]
   1c72c:	mov	r1, #91	; 0x5b
   1c730:	ldr	r3, [r4, #32]
   1c734:	cmp	r7, #0
   1c738:	add	r0, r2, #1
   1c73c:	add	r3, r3, #1
   1c740:	str	r0, [r4, #20]
   1c744:	str	r3, [r4, #32]
   1c748:	strb	r1, [r2]
   1c74c:	beq	1c850 <flatcc_json_printer_uint64_vector_field@@Base+0x1b0>
   1c750:	ldrb	r1, [r4, #25]
   1c754:	ldr	r2, [r4, #20]
   1c758:	cmp	r1, #0
   1c75c:	bne	1c888 <flatcc_json_printer_uint64_vector_field@@Base+0x1e8>
   1c760:	ldr	r3, [r4, #16]
   1c764:	cmp	r3, r2
   1c768:	bhi	1c77c <flatcc_json_printer_uint64_vector_field@@Base+0xdc>
   1c76c:	mov	r0, r4
   1c770:	ldr	r3, [r4, #44]	; 0x2c
   1c774:	blx	r3
   1c778:	ldr	r2, [r4, #20]
   1c77c:	add	r6, r5, #12
   1c780:	ldrd	r0, [r5, #4]
   1c784:	sub	r5, r7, #2
   1c788:	bl	1424c <test_print@@Base+0x7b0>
   1c78c:	ldr	r3, [r4, #20]
   1c790:	cmp	r7, #1
   1c794:	add	r0, r3, r0
   1c798:	str	r0, [r4, #20]
   1c79c:	beq	1c854 <flatcc_json_printer_uint64_vector_field@@Base+0x1b4>
   1c7a0:	mov	r7, #44	; 0x2c
   1c7a4:	mov	r8, #10
   1c7a8:	b	1c7ec <flatcc_json_printer_uint64_vector_field@@Base+0x14c>
   1c7ac:	ldr	r3, [r4, #16]
   1c7b0:	mov	r0, r4
   1c7b4:	ldr	r2, [r4, #20]
   1c7b8:	cmp	r2, r3
   1c7bc:	bcc	1c7cc <flatcc_json_printer_uint64_vector_field@@Base+0x12c>
   1c7c0:	ldr	r3, [r4, #44]	; 0x2c
   1c7c4:	blx	r3
   1c7c8:	ldr	r2, [r4, #20]
   1c7cc:	sub	r5, r5, #1
   1c7d0:	ldrd	r0, [r6], #8
   1c7d4:	bl	1424c <test_print@@Base+0x7b0>
   1c7d8:	ldr	r3, [r4, #20]
   1c7dc:	cmn	r5, #1
   1c7e0:	add	r0, r3, r0
   1c7e4:	str	r0, [r4, #20]
   1c7e8:	beq	1c854 <flatcc_json_printer_uint64_vector_field@@Base+0x1b4>
   1c7ec:	add	r3, r0, #1
   1c7f0:	str	r3, [r4, #20]
   1c7f4:	strb	r7, [r0]
   1c7f8:	ldrb	r1, [r4, #25]
   1c7fc:	cmp	r1, #0
   1c800:	beq	1c7ac <flatcc_json_printer_uint64_vector_field@@Base+0x10c>
   1c804:	ldr	r3, [r4, #20]
   1c808:	mov	r1, #32
   1c80c:	mov	r0, r4
   1c810:	add	r2, r3, #1
   1c814:	str	r2, [r4, #20]
   1c818:	strb	r8, [r3]
   1c81c:	ldrb	r2, [r4, #25]
   1c820:	ldr	lr, [r4, #16]
   1c824:	ldr	r9, [r4, #32]
   1c828:	ldr	r3, [r4, #20]
   1c82c:	mul	r9, r9, r2
   1c830:	add	ip, r3, r9
   1c834:	mov	r2, r9
   1c838:	cmp	lr, ip
   1c83c:	bcs	1c8cc <flatcc_json_printer_uint64_vector_field@@Base+0x22c>
   1c840:	mov	r1, r9
   1c844:	bl	14d14 <test_print@@Base+0x1278>
   1c848:	ldr	r2, [r4, #20]
   1c84c:	b	1c7cc <flatcc_json_printer_uint64_vector_field@@Base+0x12c>
   1c850:	ldr	r0, [r4, #20]
   1c854:	add	r3, r0, #1
   1c858:	ldrb	r2, [r4, #25]
   1c85c:	cmp	r2, #0
   1c860:	bne	1c8e4 <flatcc_json_printer_uint64_vector_field@@Base+0x244>
   1c864:	mov	r2, #93	; 0x5d
   1c868:	str	r3, [r4, #20]
   1c86c:	strb	r2, [r0]
   1c870:	ldrd	r4, [sp]
   1c874:	ldrd	r6, [sp, #8]
   1c878:	ldrd	r8, [sp, #16]
   1c87c:	ldr	sl, [sp, #24]
   1c880:	add	sp, sp, #28
   1c884:	pop	{pc}		; (ldr pc, [sp], #4)
   1c888:	add	r1, r2, #1
   1c88c:	mov	r3, #10
   1c890:	str	r1, [r4, #20]
   1c894:	strb	r3, [r2]
   1c898:	ldrb	r6, [r4, #25]
   1c89c:	ldr	r1, [r4, #16]
   1c8a0:	ldr	r2, [r4, #32]
   1c8a4:	ldr	r0, [r4, #20]
   1c8a8:	mul	r6, r2, r6
   1c8ac:	add	r3, r0, r6
   1c8b0:	cmp	r1, r3
   1c8b4:	bcs	1c94c <flatcc_json_printer_uint64_vector_field@@Base+0x2ac>
   1c8b8:	mov	r1, r6
   1c8bc:	mov	r0, r4
   1c8c0:	bl	14d14 <test_print@@Base+0x1278>
   1c8c4:	ldr	r2, [r4, #20]
   1c8c8:	b	1c77c <flatcc_json_printer_uint64_vector_field@@Base+0xdc>
   1c8cc:	mov	r0, r3
   1c8d0:	bl	124bc <memset@plt>
   1c8d4:	ldr	r2, [r4, #20]
   1c8d8:	add	r2, r2, r9
   1c8dc:	str	r2, [r4, #20]
   1c8e0:	b	1c7cc <flatcc_json_printer_uint64_vector_field@@Base+0x12c>
   1c8e4:	mov	r2, #10
   1c8e8:	str	r3, [r4, #20]
   1c8ec:	strb	r2, [r0]
   1c8f0:	ldrb	r5, [r4, #25]
   1c8f4:	ldr	r3, [r4, #32]
   1c8f8:	ldr	r2, [r4, #16]
   1c8fc:	ldr	r0, [r4, #20]
   1c900:	sub	r3, r3, #1
   1c904:	mul	r5, r3, r5
   1c908:	str	r3, [r4, #32]
   1c90c:	add	r3, r0, r5
   1c910:	cmp	r2, r3
   1c914:	bcs	1c930 <flatcc_json_printer_uint64_vector_field@@Base+0x290>
   1c918:	mov	r0, r4
   1c91c:	mov	r1, r5
   1c920:	bl	14d14 <test_print@@Base+0x1278>
   1c924:	ldr	r0, [r4, #20]
   1c928:	add	r3, r0, #1
   1c92c:	b	1c864 <flatcc_json_printer_uint64_vector_field@@Base+0x1c4>
   1c930:	mov	r2, r5
   1c934:	mov	r1, #32
   1c938:	bl	124bc <memset@plt>
   1c93c:	ldr	r0, [r4, #20]
   1c940:	add	r0, r0, r5
   1c944:	add	r3, r0, #1
   1c948:	b	1c864 <flatcc_json_printer_uint64_vector_field@@Base+0x1c4>
   1c94c:	mov	r2, r6
   1c950:	mov	r1, #32
   1c954:	bl	124bc <memset@plt>
   1c958:	ldr	r2, [r4, #20]
   1c95c:	add	r2, r2, r6
   1c960:	str	r2, [r4, #20]
   1c964:	b	1c77c <flatcc_json_printer_uint64_vector_field@@Base+0xdc>

0001c968 <flatcc_json_printer_int8_vector_field@@Base>:
   1c968:	ldr	ip, [r1, #8]
   1c96c:	add	r2, r2, #2
   1c970:	lsl	r2, r2, #1
   1c974:	cmp	ip, r2
   1c978:	bxle	lr
   1c97c:	ldr	ip, [r1, #4]
   1c980:	ldrh	r2, [ip, r2]
   1c984:	cmp	r2, #0
   1c988:	bxeq	lr
   1c98c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1c990:	ldr	ip, [r1]
   1c994:	strd	r6, [sp, #8]
   1c998:	str	lr, [sp, #28]
   1c99c:	strd	r8, [sp, #16]
   1c9a0:	str	sl, [sp, #24]
   1c9a4:	adds	lr, ip, r2
   1c9a8:	beq	1cb94 <flatcc_json_printer_int8_vector_field@@Base+0x22c>
   1c9ac:	ldr	r4, [r1, #16]
   1c9b0:	add	r5, r4, #1
   1c9b4:	cmp	r4, #0
   1c9b8:	str	r5, [r1, #16]
   1c9bc:	beq	1c9d4 <flatcc_json_printer_int8_vector_field@@Base+0x6c>
   1c9c0:	ldr	r1, [r0, #20]
   1c9c4:	mov	r4, #44	; 0x2c
   1c9c8:	add	r5, r1, #1
   1c9cc:	str	r5, [r0, #20]
   1c9d0:	strb	r4, [r1]
   1c9d4:	mov	r1, r3
   1c9d8:	ldr	r3, [ip, r2]
   1c9dc:	mov	r4, r0
   1c9e0:	ldr	r2, [sp, #32]
   1c9e4:	add	r5, lr, r3
   1c9e8:	ldr	r6, [lr, r3]
   1c9ec:	bl	16158 <test_print@@Base+0x26bc>
   1c9f0:	ldr	r2, [r4, #20]
   1c9f4:	mov	r1, #91	; 0x5b
   1c9f8:	ldr	r3, [r4, #32]
   1c9fc:	cmp	r6, #0
   1ca00:	add	r0, r2, #1
   1ca04:	add	r3, r3, #1
   1ca08:	str	r0, [r4, #20]
   1ca0c:	str	r3, [r4, #32]
   1ca10:	strb	r1, [r2]
   1ca14:	beq	1cb74 <flatcc_json_printer_int8_vector_field@@Base+0x20c>
   1ca18:	ldrb	r3, [r4, #25]
   1ca1c:	ldr	r1, [r4, #20]
   1ca20:	cmp	r3, #0
   1ca24:	bne	1cbac <flatcc_json_printer_int8_vector_field@@Base+0x244>
   1ca28:	ldr	r2, [r4, #16]
   1ca2c:	cmp	r2, r1
   1ca30:	bhi	1ca48 <flatcc_json_printer_int8_vector_field@@Base+0xe0>
   1ca34:	mov	r1, r3
   1ca38:	mov	r0, r4
   1ca3c:	ldr	r3, [r4, #44]	; 0x2c
   1ca40:	blx	r3
   1ca44:	ldr	r1, [r4, #20]
   1ca48:	ldrsb	r0, [r5, #4]
   1ca4c:	cmp	r0, #0
   1ca50:	lsr	r7, r0, #31
   1ca54:	uxtb	r0, r0
   1ca58:	bge	1ca6c <flatcc_json_printer_int8_vector_field@@Base+0x104>
   1ca5c:	rsb	r0, r0, #0
   1ca60:	mov	r3, #45	; 0x2d
   1ca64:	uxtb	r0, r0
   1ca68:	strb	r3, [r1], #1
   1ca6c:	bl	14fac <test_print@@Base+0x1510>
   1ca70:	ldr	r3, [r4, #20]
   1ca74:	add	r0, r7, r0
   1ca78:	cmp	r6, #1
   1ca7c:	add	r8, r5, #5
   1ca80:	add	r0, r3, r0
   1ca84:	str	r0, [r4, #20]
   1ca88:	beq	1cb78 <flatcc_json_printer_int8_vector_field@@Base+0x210>
   1ca8c:	add	r3, r6, #4
   1ca90:	mov	r7, #10
   1ca94:	mov	r6, #44	; 0x2c
   1ca98:	add	r5, r5, r3
   1ca9c:	b	1cb10 <flatcc_json_printer_int8_vector_field@@Base+0x1a8>
   1caa0:	ldr	r3, [r4, #16]
   1caa4:	mov	r0, r4
   1caa8:	ldr	r2, [r4, #20]
   1caac:	cmp	r2, r3
   1cab0:	bcc	1cac0 <flatcc_json_printer_int8_vector_field@@Base+0x158>
   1cab4:	ldr	r3, [r4, #44]	; 0x2c
   1cab8:	blx	r3
   1cabc:	ldr	r2, [r4, #20]
   1cac0:	mov	r1, #45	; 0x2d
   1cac4:	add	r8, r8, #1
   1cac8:	ldrsb	r0, [r8, #-1]
   1cacc:	mov	r3, r2
   1cad0:	cmp	r0, #0
   1cad4:	lsr	r9, r0, #31
   1cad8:	uxtb	r0, r0
   1cadc:	rsb	ip, r0, #0
   1cae0:	bge	1caf0 <flatcc_json_printer_int8_vector_field@@Base+0x188>
   1cae4:	uxtb	r0, ip
   1cae8:	strb	r1, [r3], #1
   1caec:	mov	r2, r3
   1caf0:	mov	r1, r2
   1caf4:	bl	14fac <test_print@@Base+0x1510>
   1caf8:	ldr	r3, [r4, #20]
   1cafc:	add	r0, r9, r0
   1cb00:	cmp	r5, r8
   1cb04:	add	r0, r3, r0
   1cb08:	str	r0, [r4, #20]
   1cb0c:	beq	1cb78 <flatcc_json_printer_int8_vector_field@@Base+0x210>
   1cb10:	add	r3, r0, #1
   1cb14:	str	r3, [r4, #20]
   1cb18:	strb	r6, [r0]
   1cb1c:	ldrb	r1, [r4, #25]
   1cb20:	cmp	r1, #0
   1cb24:	beq	1caa0 <flatcc_json_printer_int8_vector_field@@Base+0x138>
   1cb28:	ldr	r3, [r4, #20]
   1cb2c:	mov	r1, #32
   1cb30:	mov	r0, r4
   1cb34:	add	r2, r3, #1
   1cb38:	str	r2, [r4, #20]
   1cb3c:	strb	r7, [r3]
   1cb40:	ldrb	r2, [r4, #25]
   1cb44:	ldr	lr, [r4, #16]
   1cb48:	ldr	r9, [r4, #32]
   1cb4c:	ldr	r3, [r4, #20]
   1cb50:	mul	r9, r9, r2
   1cb54:	add	ip, r3, r9
   1cb58:	mov	r2, r9
   1cb5c:	cmp	lr, ip
   1cb60:	bcs	1cbcc <flatcc_json_printer_int8_vector_field@@Base+0x264>
   1cb64:	mov	r1, r9
   1cb68:	bl	14d14 <test_print@@Base+0x1278>
   1cb6c:	ldr	r2, [r4, #20]
   1cb70:	b	1cac0 <flatcc_json_printer_int8_vector_field@@Base+0x158>
   1cb74:	ldr	r0, [r4, #20]
   1cb78:	add	r3, r0, #1
   1cb7c:	ldrb	r2, [r4, #25]
   1cb80:	cmp	r2, #0
   1cb84:	bne	1cbe4 <flatcc_json_printer_int8_vector_field@@Base+0x27c>
   1cb88:	mov	r2, #93	; 0x5d
   1cb8c:	str	r3, [r4, #20]
   1cb90:	strb	r2, [r0]
   1cb94:	ldrd	r4, [sp]
   1cb98:	ldrd	r6, [sp, #8]
   1cb9c:	ldrd	r8, [sp, #16]
   1cba0:	ldr	sl, [sp, #24]
   1cba4:	add	sp, sp, #28
   1cba8:	pop	{pc}		; (ldr pc, [sp], #4)
   1cbac:	add	r2, r1, #1
   1cbb0:	mov	r3, #10
   1cbb4:	mov	r0, r4
   1cbb8:	str	r2, [r4, #20]
   1cbbc:	strb	r3, [r1]
   1cbc0:	bl	14dc8 <test_print@@Base+0x132c>
   1cbc4:	ldr	r1, [r4, #20]
   1cbc8:	b	1ca48 <flatcc_json_printer_int8_vector_field@@Base+0xe0>
   1cbcc:	mov	r0, r3
   1cbd0:	bl	124bc <memset@plt>
   1cbd4:	ldr	r2, [r4, #20]
   1cbd8:	add	r2, r2, r9
   1cbdc:	str	r2, [r4, #20]
   1cbe0:	b	1cac0 <flatcc_json_printer_int8_vector_field@@Base+0x158>
   1cbe4:	mov	r2, #10
   1cbe8:	str	r3, [r4, #20]
   1cbec:	strb	r2, [r0]
   1cbf0:	ldrb	r5, [r4, #25]
   1cbf4:	ldr	r3, [r4, #32]
   1cbf8:	ldr	r2, [r4, #16]
   1cbfc:	ldr	r0, [r4, #20]
   1cc00:	sub	r3, r3, #1
   1cc04:	mul	r5, r3, r5
   1cc08:	str	r3, [r4, #32]
   1cc0c:	add	r3, r0, r5
   1cc10:	cmp	r2, r3
   1cc14:	bcs	1cc30 <flatcc_json_printer_int8_vector_field@@Base+0x2c8>
   1cc18:	mov	r0, r4
   1cc1c:	mov	r1, r5
   1cc20:	bl	14d14 <test_print@@Base+0x1278>
   1cc24:	ldr	r0, [r4, #20]
   1cc28:	add	r3, r0, #1
   1cc2c:	b	1cb88 <flatcc_json_printer_int8_vector_field@@Base+0x220>
   1cc30:	mov	r2, r5
   1cc34:	mov	r1, #32
   1cc38:	bl	124bc <memset@plt>
   1cc3c:	ldr	r0, [r4, #20]
   1cc40:	add	r0, r0, r5
   1cc44:	add	r3, r0, #1
   1cc48:	b	1cb88 <flatcc_json_printer_int8_vector_field@@Base+0x220>

0001cc4c <flatcc_json_printer_int16_vector_field@@Base>:
   1cc4c:	ldr	ip, [r1, #8]
   1cc50:	add	r2, r2, #2
   1cc54:	lsl	r2, r2, #1
   1cc58:	cmp	ip, r2
   1cc5c:	bxle	lr
   1cc60:	ldr	ip, [r1, #4]
   1cc64:	ldrh	r2, [ip, r2]
   1cc68:	cmp	r2, #0
   1cc6c:	bxeq	lr
   1cc70:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1cc74:	ldr	ip, [r1]
   1cc78:	strd	r6, [sp, #8]
   1cc7c:	str	lr, [sp, #28]
   1cc80:	strd	r8, [sp, #16]
   1cc84:	str	sl, [sp, #24]
   1cc88:	adds	lr, ip, r2
   1cc8c:	beq	1ce78 <flatcc_json_printer_int16_vector_field@@Base+0x22c>
   1cc90:	ldr	r4, [r1, #16]
   1cc94:	add	r5, r4, #1
   1cc98:	cmp	r4, #0
   1cc9c:	str	r5, [r1, #16]
   1cca0:	beq	1ccb8 <flatcc_json_printer_int16_vector_field@@Base+0x6c>
   1cca4:	ldr	r1, [r0, #20]
   1cca8:	mov	r4, #44	; 0x2c
   1ccac:	add	r5, r1, #1
   1ccb0:	str	r5, [r0, #20]
   1ccb4:	strb	r4, [r1]
   1ccb8:	mov	r1, r3
   1ccbc:	ldr	r3, [ip, r2]
   1ccc0:	mov	r4, r0
   1ccc4:	ldr	r2, [sp, #32]
   1ccc8:	add	r6, lr, r3
   1cccc:	ldr	r5, [lr, r3]
   1ccd0:	bl	16158 <test_print@@Base+0x26bc>
   1ccd4:	ldr	r2, [r4, #20]
   1ccd8:	mov	r1, #91	; 0x5b
   1ccdc:	ldr	r3, [r4, #32]
   1cce0:	cmp	r5, #0
   1cce4:	add	r0, r2, #1
   1cce8:	add	r3, r3, #1
   1ccec:	str	r0, [r4, #20]
   1ccf0:	str	r3, [r4, #32]
   1ccf4:	strb	r1, [r2]
   1ccf8:	beq	1ce58 <flatcc_json_printer_int16_vector_field@@Base+0x20c>
   1ccfc:	ldrb	r3, [r4, #25]
   1cd00:	ldr	r1, [r4, #20]
   1cd04:	cmp	r3, #0
   1cd08:	bne	1ce90 <flatcc_json_printer_int16_vector_field@@Base+0x244>
   1cd0c:	ldr	r2, [r4, #16]
   1cd10:	cmp	r2, r1
   1cd14:	bhi	1cd2c <flatcc_json_printer_int16_vector_field@@Base+0xe0>
   1cd18:	mov	r1, r3
   1cd1c:	mov	r0, r4
   1cd20:	ldr	r3, [r4, #44]	; 0x2c
   1cd24:	blx	r3
   1cd28:	ldr	r1, [r4, #20]
   1cd2c:	ldrsh	r0, [r6, #4]
   1cd30:	cmp	r0, #0
   1cd34:	lsr	r7, r0, #31
   1cd38:	uxth	r0, r0
   1cd3c:	bge	1cd50 <flatcc_json_printer_int16_vector_field@@Base+0x104>
   1cd40:	rsb	r0, r0, #0
   1cd44:	mov	r3, #45	; 0x2d
   1cd48:	uxth	r0, r0
   1cd4c:	strb	r3, [r1], #1
   1cd50:	bl	13db8 <test_print@@Base+0x31c>
   1cd54:	ldr	r3, [r4, #20]
   1cd58:	add	r0, r7, r0
   1cd5c:	cmp	r5, #1
   1cd60:	add	r6, r6, #6
   1cd64:	sub	r5, r5, #2
   1cd68:	add	r0, r3, r0
   1cd6c:	str	r0, [r4, #20]
   1cd70:	beq	1ce5c <flatcc_json_printer_int16_vector_field@@Base+0x210>
   1cd74:	mov	r7, #44	; 0x2c
   1cd78:	mov	r8, #10
   1cd7c:	b	1cdf4 <flatcc_json_printer_int16_vector_field@@Base+0x1a8>
   1cd80:	ldr	r3, [r4, #16]
   1cd84:	mov	r0, r4
   1cd88:	ldr	r2, [r4, #20]
   1cd8c:	cmp	r2, r3
   1cd90:	bcc	1cda0 <flatcc_json_printer_int16_vector_field@@Base+0x154>
   1cd94:	ldr	r3, [r4, #44]	; 0x2c
   1cd98:	blx	r3
   1cd9c:	ldr	r2, [r4, #20]
   1cda0:	mov	r1, #45	; 0x2d
   1cda4:	sub	r5, r5, #1
   1cda8:	ldrsh	r0, [r6]
   1cdac:	mov	r3, r2
   1cdb0:	add	r6, r6, #2
   1cdb4:	cmp	r0, #0
   1cdb8:	lsr	r9, r0, #31
   1cdbc:	uxth	r0, r0
   1cdc0:	rsb	ip, r0, #0
   1cdc4:	bge	1cdd4 <flatcc_json_printer_int16_vector_field@@Base+0x188>
   1cdc8:	uxth	r0, ip
   1cdcc:	strb	r1, [r3], #1
   1cdd0:	mov	r2, r3
   1cdd4:	mov	r1, r2
   1cdd8:	bl	13db8 <test_print@@Base+0x31c>
   1cddc:	ldr	r3, [r4, #20]
   1cde0:	add	r0, r9, r0
   1cde4:	cmn	r5, #1
   1cde8:	add	r0, r3, r0
   1cdec:	str	r0, [r4, #20]
   1cdf0:	beq	1ce5c <flatcc_json_printer_int16_vector_field@@Base+0x210>
   1cdf4:	add	r3, r0, #1
   1cdf8:	str	r3, [r4, #20]
   1cdfc:	strb	r7, [r0]
   1ce00:	ldrb	r1, [r4, #25]
   1ce04:	cmp	r1, #0
   1ce08:	beq	1cd80 <flatcc_json_printer_int16_vector_field@@Base+0x134>
   1ce0c:	ldr	r3, [r4, #20]
   1ce10:	mov	r1, #32
   1ce14:	mov	r0, r4
   1ce18:	add	r2, r3, #1
   1ce1c:	str	r2, [r4, #20]
   1ce20:	strb	r8, [r3]
   1ce24:	ldrb	r2, [r4, #25]
   1ce28:	ldr	lr, [r4, #16]
   1ce2c:	ldr	r9, [r4, #32]
   1ce30:	ldr	r3, [r4, #20]
   1ce34:	mul	r9, r9, r2
   1ce38:	add	ip, r3, r9
   1ce3c:	mov	r2, r9
   1ce40:	cmp	lr, ip
   1ce44:	bcs	1ceb0 <flatcc_json_printer_int16_vector_field@@Base+0x264>
   1ce48:	mov	r1, r9
   1ce4c:	bl	14d14 <test_print@@Base+0x1278>
   1ce50:	ldr	r2, [r4, #20]
   1ce54:	b	1cda0 <flatcc_json_printer_int16_vector_field@@Base+0x154>
   1ce58:	ldr	r0, [r4, #20]
   1ce5c:	add	r3, r0, #1
   1ce60:	ldrb	r2, [r4, #25]
   1ce64:	cmp	r2, #0
   1ce68:	bne	1cec8 <flatcc_json_printer_int16_vector_field@@Base+0x27c>
   1ce6c:	mov	r2, #93	; 0x5d
   1ce70:	str	r3, [r4, #20]
   1ce74:	strb	r2, [r0]
   1ce78:	ldrd	r4, [sp]
   1ce7c:	ldrd	r6, [sp, #8]
   1ce80:	ldrd	r8, [sp, #16]
   1ce84:	ldr	sl, [sp, #24]
   1ce88:	add	sp, sp, #28
   1ce8c:	pop	{pc}		; (ldr pc, [sp], #4)
   1ce90:	add	r2, r1, #1
   1ce94:	mov	r3, #10
   1ce98:	mov	r0, r4
   1ce9c:	str	r2, [r4, #20]
   1cea0:	strb	r3, [r1]
   1cea4:	bl	14dc8 <test_print@@Base+0x132c>
   1cea8:	ldr	r1, [r4, #20]
   1ceac:	b	1cd2c <flatcc_json_printer_int16_vector_field@@Base+0xe0>
   1ceb0:	mov	r0, r3
   1ceb4:	bl	124bc <memset@plt>
   1ceb8:	ldr	r2, [r4, #20]
   1cebc:	add	r2, r2, r9
   1cec0:	str	r2, [r4, #20]
   1cec4:	b	1cda0 <flatcc_json_printer_int16_vector_field@@Base+0x154>
   1cec8:	mov	r2, #10
   1cecc:	str	r3, [r4, #20]
   1ced0:	strb	r2, [r0]
   1ced4:	ldrb	r5, [r4, #25]
   1ced8:	ldr	r3, [r4, #32]
   1cedc:	ldr	r2, [r4, #16]
   1cee0:	ldr	r0, [r4, #20]
   1cee4:	sub	r3, r3, #1
   1cee8:	mul	r5, r3, r5
   1ceec:	str	r3, [r4, #32]
   1cef0:	add	r3, r0, r5
   1cef4:	cmp	r2, r3
   1cef8:	bcs	1cf14 <flatcc_json_printer_int16_vector_field@@Base+0x2c8>
   1cefc:	mov	r0, r4
   1cf00:	mov	r1, r5
   1cf04:	bl	14d14 <test_print@@Base+0x1278>
   1cf08:	ldr	r0, [r4, #20]
   1cf0c:	add	r3, r0, #1
   1cf10:	b	1ce6c <flatcc_json_printer_int16_vector_field@@Base+0x220>
   1cf14:	mov	r2, r5
   1cf18:	mov	r1, #32
   1cf1c:	bl	124bc <memset@plt>
   1cf20:	ldr	r0, [r4, #20]
   1cf24:	add	r0, r0, r5
   1cf28:	add	r3, r0, #1
   1cf2c:	b	1ce6c <flatcc_json_printer_int16_vector_field@@Base+0x220>

0001cf30 <flatcc_json_printer_int32_vector_field@@Base>:
   1cf30:	ldr	ip, [r1, #8]
   1cf34:	add	r2, r2, #2
   1cf38:	lsl	r2, r2, #1
   1cf3c:	cmp	ip, r2
   1cf40:	bxle	lr
   1cf44:	ldr	ip, [r1, #4]
   1cf48:	ldrh	r2, [ip, r2]
   1cf4c:	cmp	r2, #0
   1cf50:	bxeq	lr
   1cf54:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1cf58:	ldr	ip, [r1]
   1cf5c:	strd	r6, [sp, #8]
   1cf60:	str	lr, [sp, #28]
   1cf64:	strd	r8, [sp, #16]
   1cf68:	str	sl, [sp, #24]
   1cf6c:	adds	lr, ip, r2
   1cf70:	beq	1d14c <flatcc_json_printer_int32_vector_field@@Base+0x21c>
   1cf74:	ldr	r4, [r1, #16]
   1cf78:	add	r5, r4, #1
   1cf7c:	cmp	r4, #0
   1cf80:	str	r5, [r1, #16]
   1cf84:	beq	1cf9c <flatcc_json_printer_int32_vector_field@@Base+0x6c>
   1cf88:	ldr	r1, [r0, #20]
   1cf8c:	mov	r4, #44	; 0x2c
   1cf90:	add	r5, r1, #1
   1cf94:	str	r5, [r0, #20]
   1cf98:	strb	r4, [r1]
   1cf9c:	mov	r1, r3
   1cfa0:	ldr	r3, [ip, r2]
   1cfa4:	mov	r4, r0
   1cfa8:	ldr	r2, [sp, #32]
   1cfac:	add	r6, lr, r3
   1cfb0:	ldr	r5, [lr, r3]
   1cfb4:	bl	16158 <test_print@@Base+0x26bc>
   1cfb8:	ldr	r2, [r4, #20]
   1cfbc:	mov	r1, #91	; 0x5b
   1cfc0:	ldr	r3, [r4, #32]
   1cfc4:	cmp	r5, #0
   1cfc8:	add	r0, r2, #1
   1cfcc:	add	r3, r3, #1
   1cfd0:	str	r0, [r4, #20]
   1cfd4:	str	r3, [r4, #32]
   1cfd8:	strb	r1, [r2]
   1cfdc:	beq	1d12c <flatcc_json_printer_int32_vector_field@@Base+0x1fc>
   1cfe0:	ldrb	r3, [r4, #25]
   1cfe4:	ldr	r1, [r4, #20]
   1cfe8:	cmp	r3, #0
   1cfec:	bne	1d164 <flatcc_json_printer_int32_vector_field@@Base+0x234>
   1cff0:	ldr	r2, [r4, #16]
   1cff4:	cmp	r2, r1
   1cff8:	bhi	1d010 <flatcc_json_printer_int32_vector_field@@Base+0xe0>
   1cffc:	mov	r1, r3
   1d000:	mov	r0, r4
   1d004:	ldr	r3, [r4, #44]	; 0x2c
   1d008:	blx	r3
   1d00c:	ldr	r1, [r4, #20]
   1d010:	ldr	r0, [r6, #4]
   1d014:	cmp	r0, #0
   1d018:	lsr	r7, r0, #31
   1d01c:	bge	1d02c <flatcc_json_printer_int32_vector_field@@Base+0xfc>
   1d020:	mov	r3, #45	; 0x2d
   1d024:	rsb	r0, r0, #0
   1d028:	strb	r3, [r1], #1
   1d02c:	bl	13f20 <test_print@@Base+0x484>
   1d030:	ldr	r3, [r4, #20]
   1d034:	add	r0, r7, r0
   1d038:	cmp	r5, #1
   1d03c:	add	r6, r6, #8
   1d040:	sub	r5, r5, #2
   1d044:	add	r0, r3, r0
   1d048:	str	r0, [r4, #20]
   1d04c:	beq	1d130 <flatcc_json_printer_int32_vector_field@@Base+0x200>
   1d050:	mov	r7, #44	; 0x2c
   1d054:	mov	r8, #10
   1d058:	b	1d0c8 <flatcc_json_printer_int32_vector_field@@Base+0x198>
   1d05c:	ldr	r3, [r4, #16]
   1d060:	mov	r0, r4
   1d064:	ldr	r2, [r4, #20]
   1d068:	cmp	r2, r3
   1d06c:	bcc	1d07c <flatcc_json_printer_int32_vector_field@@Base+0x14c>
   1d070:	ldr	r3, [r4, #44]	; 0x2c
   1d074:	blx	r3
   1d078:	ldr	r2, [r4, #20]
   1d07c:	mov	r1, #45	; 0x2d
   1d080:	sub	r5, r5, #1
   1d084:	ldr	r0, [r6]
   1d088:	mov	r3, r2
   1d08c:	add	r6, r6, #4
   1d090:	cmp	r0, #0
   1d094:	lsr	r9, r0, #31
   1d098:	bge	1d0a8 <flatcc_json_printer_int32_vector_field@@Base+0x178>
   1d09c:	rsb	r0, r0, #0
   1d0a0:	strb	r1, [r3], #1
   1d0a4:	mov	r2, r3
   1d0a8:	mov	r1, r2
   1d0ac:	bl	13f20 <test_print@@Base+0x484>
   1d0b0:	ldr	r3, [r4, #20]
   1d0b4:	add	r0, r9, r0
   1d0b8:	cmn	r5, #1
   1d0bc:	add	r0, r3, r0
   1d0c0:	str	r0, [r4, #20]
   1d0c4:	beq	1d130 <flatcc_json_printer_int32_vector_field@@Base+0x200>
   1d0c8:	add	r3, r0, #1
   1d0cc:	str	r3, [r4, #20]
   1d0d0:	strb	r7, [r0]
   1d0d4:	ldrb	r1, [r4, #25]
   1d0d8:	cmp	r1, #0
   1d0dc:	beq	1d05c <flatcc_json_printer_int32_vector_field@@Base+0x12c>
   1d0e0:	ldr	r3, [r4, #20]
   1d0e4:	mov	r1, #32
   1d0e8:	mov	r0, r4
   1d0ec:	add	r2, r3, #1
   1d0f0:	str	r2, [r4, #20]
   1d0f4:	strb	r8, [r3]
   1d0f8:	ldrb	r2, [r4, #25]
   1d0fc:	ldr	lr, [r4, #16]
   1d100:	ldr	r9, [r4, #32]
   1d104:	ldr	r3, [r4, #20]
   1d108:	mul	r9, r9, r2
   1d10c:	add	ip, r3, r9
   1d110:	mov	r2, r9
   1d114:	cmp	lr, ip
   1d118:	bcs	1d1a8 <flatcc_json_printer_int32_vector_field@@Base+0x278>
   1d11c:	mov	r1, r9
   1d120:	bl	14d14 <test_print@@Base+0x1278>
   1d124:	ldr	r2, [r4, #20]
   1d128:	b	1d07c <flatcc_json_printer_int32_vector_field@@Base+0x14c>
   1d12c:	ldr	r0, [r4, #20]
   1d130:	add	r3, r0, #1
   1d134:	ldrb	r2, [r4, #25]
   1d138:	cmp	r2, #0
   1d13c:	bne	1d1c0 <flatcc_json_printer_int32_vector_field@@Base+0x290>
   1d140:	mov	r2, #93	; 0x5d
   1d144:	str	r3, [r4, #20]
   1d148:	strb	r2, [r0]
   1d14c:	ldrd	r4, [sp]
   1d150:	ldrd	r6, [sp, #8]
   1d154:	ldrd	r8, [sp, #16]
   1d158:	ldr	sl, [sp, #24]
   1d15c:	add	sp, sp, #28
   1d160:	pop	{pc}		; (ldr pc, [sp], #4)
   1d164:	add	r2, r1, #1
   1d168:	mov	r3, #10
   1d16c:	str	r2, [r4, #20]
   1d170:	strb	r3, [r1]
   1d174:	ldrb	r7, [r4, #25]
   1d178:	ldr	r2, [r4, #16]
   1d17c:	ldr	r1, [r4, #32]
   1d180:	ldr	r0, [r4, #20]
   1d184:	mul	r7, r1, r7
   1d188:	add	r3, r0, r7
   1d18c:	cmp	r2, r3
   1d190:	bcs	1d228 <flatcc_json_printer_int32_vector_field@@Base+0x2f8>
   1d194:	mov	r1, r7
   1d198:	mov	r0, r4
   1d19c:	bl	14d14 <test_print@@Base+0x1278>
   1d1a0:	ldr	r1, [r4, #20]
   1d1a4:	b	1d010 <flatcc_json_printer_int32_vector_field@@Base+0xe0>
   1d1a8:	mov	r0, r3
   1d1ac:	bl	124bc <memset@plt>
   1d1b0:	ldr	r2, [r4, #20]
   1d1b4:	add	r2, r2, r9
   1d1b8:	str	r2, [r4, #20]
   1d1bc:	b	1d07c <flatcc_json_printer_int32_vector_field@@Base+0x14c>
   1d1c0:	mov	r2, #10
   1d1c4:	str	r3, [r4, #20]
   1d1c8:	strb	r2, [r0]
   1d1cc:	ldrb	r5, [r4, #25]
   1d1d0:	ldr	r3, [r4, #32]
   1d1d4:	ldr	r2, [r4, #16]
   1d1d8:	ldr	r0, [r4, #20]
   1d1dc:	sub	r3, r3, #1
   1d1e0:	mul	r5, r3, r5
   1d1e4:	str	r3, [r4, #32]
   1d1e8:	add	r3, r0, r5
   1d1ec:	cmp	r2, r3
   1d1f0:	bcs	1d20c <flatcc_json_printer_int32_vector_field@@Base+0x2dc>
   1d1f4:	mov	r0, r4
   1d1f8:	mov	r1, r5
   1d1fc:	bl	14d14 <test_print@@Base+0x1278>
   1d200:	ldr	r0, [r4, #20]
   1d204:	add	r3, r0, #1
   1d208:	b	1d140 <flatcc_json_printer_int32_vector_field@@Base+0x210>
   1d20c:	mov	r2, r5
   1d210:	mov	r1, #32
   1d214:	bl	124bc <memset@plt>
   1d218:	ldr	r0, [r4, #20]
   1d21c:	add	r0, r0, r5
   1d220:	add	r3, r0, #1
   1d224:	b	1d140 <flatcc_json_printer_int32_vector_field@@Base+0x210>
   1d228:	mov	r1, #32
   1d22c:	mov	r2, r7
   1d230:	bl	124bc <memset@plt>
   1d234:	ldr	r1, [r4, #20]
   1d238:	add	r1, r1, r7
   1d23c:	str	r1, [r4, #20]
   1d240:	b	1d010 <flatcc_json_printer_int32_vector_field@@Base+0xe0>

0001d244 <flatcc_json_printer_int64_vector_field@@Base>:
   1d244:	ldr	ip, [r1, #8]
   1d248:	add	r2, r2, #2
   1d24c:	lsl	r2, r2, #1
   1d250:	cmp	ip, r2
   1d254:	bxle	lr
   1d258:	ldr	ip, [r1, #4]
   1d25c:	ldrh	r2, [ip, r2]
   1d260:	cmp	r2, #0
   1d264:	bxeq	lr
   1d268:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1d26c:	ldr	ip, [r1]
   1d270:	strd	r6, [sp, #8]
   1d274:	str	lr, [sp, #28]
   1d278:	strd	r8, [sp, #16]
   1d27c:	str	sl, [sp, #24]
   1d280:	adds	lr, ip, r2
   1d284:	beq	1d468 <flatcc_json_printer_int64_vector_field@@Base+0x224>
   1d288:	ldr	r4, [r1, #16]
   1d28c:	add	r5, r4, #1
   1d290:	cmp	r4, #0
   1d294:	str	r5, [r1, #16]
   1d298:	beq	1d2b0 <flatcc_json_printer_int64_vector_field@@Base+0x6c>
   1d29c:	ldr	r1, [r0, #20]
   1d2a0:	mov	r4, #44	; 0x2c
   1d2a4:	add	r5, r1, #1
   1d2a8:	str	r5, [r0, #20]
   1d2ac:	strb	r4, [r1]
   1d2b0:	mov	r1, r3
   1d2b4:	ldr	r3, [ip, r2]
   1d2b8:	mov	r4, r0
   1d2bc:	ldr	r2, [sp, #32]
   1d2c0:	add	r6, lr, r3
   1d2c4:	ldr	r5, [lr, r3]
   1d2c8:	bl	16158 <test_print@@Base+0x26bc>
   1d2cc:	ldr	r2, [r4, #20]
   1d2d0:	mov	r1, #91	; 0x5b
   1d2d4:	ldr	r3, [r4, #32]
   1d2d8:	cmp	r5, #0
   1d2dc:	add	r0, r2, #1
   1d2e0:	add	r3, r3, #1
   1d2e4:	str	r0, [r4, #20]
   1d2e8:	str	r3, [r4, #32]
   1d2ec:	strb	r1, [r2]
   1d2f0:	beq	1d448 <flatcc_json_printer_int64_vector_field@@Base+0x204>
   1d2f4:	ldrb	r1, [r4, #25]
   1d2f8:	ldr	r2, [r4, #20]
   1d2fc:	cmp	r1, #0
   1d300:	bne	1d480 <flatcc_json_printer_int64_vector_field@@Base+0x23c>
   1d304:	ldr	r3, [r4, #16]
   1d308:	cmp	r3, r2
   1d30c:	bhi	1d320 <flatcc_json_printer_int64_vector_field@@Base+0xdc>
   1d310:	mov	r0, r4
   1d314:	ldr	r3, [r4, #44]	; 0x2c
   1d318:	blx	r3
   1d31c:	ldr	r2, [r4, #20]
   1d320:	ldrd	r0, [r6, #4]
   1d324:	cmp	r0, #0
   1d328:	lsr	r7, r1, #31
   1d32c:	sbcs	r3, r1, #0
   1d330:	bge	1d344 <flatcc_json_printer_int64_vector_field@@Base+0x100>
   1d334:	rsbs	r0, r0, #0
   1d338:	mov	r3, #45	; 0x2d
   1d33c:	rsc	r1, r1, #0
   1d340:	strb	r3, [r2], #1
   1d344:	bl	1424c <test_print@@Base+0x7b0>
   1d348:	ldr	r3, [r4, #20]
   1d34c:	add	r0, r7, r0
   1d350:	cmp	r5, #1
   1d354:	add	r6, r6, #12
   1d358:	sub	r5, r5, #2
   1d35c:	add	r0, r3, r0
   1d360:	str	r0, [r4, #20]
   1d364:	beq	1d44c <flatcc_json_printer_int64_vector_field@@Base+0x208>
   1d368:	mov	r7, #44	; 0x2c
   1d36c:	mov	r8, #10
   1d370:	b	1d3e4 <flatcc_json_printer_int64_vector_field@@Base+0x1a0>
   1d374:	ldr	r3, [r4, #16]
   1d378:	mov	r0, r4
   1d37c:	ldr	r2, [r4, #20]
   1d380:	cmp	r2, r3
   1d384:	bcc	1d394 <flatcc_json_printer_int64_vector_field@@Base+0x150>
   1d388:	ldr	r3, [r4, #44]	; 0x2c
   1d38c:	blx	r3
   1d390:	ldr	r2, [r4, #20]
   1d394:	mov	ip, #45	; 0x2d
   1d398:	sub	r5, r5, #1
   1d39c:	ldrd	r0, [r6]
   1d3a0:	mov	r3, r2
   1d3a4:	add	r6, r6, #8
   1d3a8:	cmp	r0, #0
   1d3ac:	lsr	r9, r1, #31
   1d3b0:	sbcs	lr, r1, #0
   1d3b4:	bge	1d3c8 <flatcc_json_printer_int64_vector_field@@Base+0x184>
   1d3b8:	rsbs	r0, r0, #0
   1d3bc:	strb	ip, [r3], #1
   1d3c0:	mov	r2, r3
   1d3c4:	rsc	r1, r1, #0
   1d3c8:	bl	1424c <test_print@@Base+0x7b0>
   1d3cc:	ldr	r3, [r4, #20]
   1d3d0:	add	r0, r9, r0
   1d3d4:	cmn	r5, #1
   1d3d8:	add	r0, r3, r0
   1d3dc:	str	r0, [r4, #20]
   1d3e0:	beq	1d44c <flatcc_json_printer_int64_vector_field@@Base+0x208>
   1d3e4:	add	r3, r0, #1
   1d3e8:	str	r3, [r4, #20]
   1d3ec:	strb	r7, [r0]
   1d3f0:	ldrb	r1, [r4, #25]
   1d3f4:	cmp	r1, #0
   1d3f8:	beq	1d374 <flatcc_json_printer_int64_vector_field@@Base+0x130>
   1d3fc:	ldr	r3, [r4, #20]
   1d400:	mov	r1, #32
   1d404:	mov	r0, r4
   1d408:	add	r2, r3, #1
   1d40c:	str	r2, [r4, #20]
   1d410:	strb	r8, [r3]
   1d414:	ldrb	r2, [r4, #25]
   1d418:	ldr	lr, [r4, #16]
   1d41c:	ldr	r9, [r4, #32]
   1d420:	ldr	r3, [r4, #20]
   1d424:	mul	r9, r9, r2
   1d428:	add	ip, r3, r9
   1d42c:	mov	r2, r9
   1d430:	cmp	lr, ip
   1d434:	bcs	1d4a0 <flatcc_json_printer_int64_vector_field@@Base+0x25c>
   1d438:	mov	r1, r9
   1d43c:	bl	14d14 <test_print@@Base+0x1278>
   1d440:	ldr	r2, [r4, #20]
   1d444:	b	1d394 <flatcc_json_printer_int64_vector_field@@Base+0x150>
   1d448:	ldr	r0, [r4, #20]
   1d44c:	add	r3, r0, #1
   1d450:	ldrb	r2, [r4, #25]
   1d454:	cmp	r2, #0
   1d458:	bne	1d4b8 <flatcc_json_printer_int64_vector_field@@Base+0x274>
   1d45c:	mov	r2, #93	; 0x5d
   1d460:	str	r3, [r4, #20]
   1d464:	strb	r2, [r0]
   1d468:	ldrd	r4, [sp]
   1d46c:	ldrd	r6, [sp, #8]
   1d470:	ldrd	r8, [sp, #16]
   1d474:	ldr	sl, [sp, #24]
   1d478:	add	sp, sp, #28
   1d47c:	pop	{pc}		; (ldr pc, [sp], #4)
   1d480:	add	r1, r2, #1
   1d484:	mov	r3, #10
   1d488:	mov	r0, r4
   1d48c:	str	r1, [r4, #20]
   1d490:	strb	r3, [r2]
   1d494:	bl	14dc8 <test_print@@Base+0x132c>
   1d498:	ldr	r2, [r4, #20]
   1d49c:	b	1d320 <flatcc_json_printer_int64_vector_field@@Base+0xdc>
   1d4a0:	mov	r0, r3
   1d4a4:	bl	124bc <memset@plt>
   1d4a8:	ldr	r2, [r4, #20]
   1d4ac:	add	r2, r2, r9
   1d4b0:	str	r2, [r4, #20]
   1d4b4:	b	1d394 <flatcc_json_printer_int64_vector_field@@Base+0x150>
   1d4b8:	mov	r2, #10
   1d4bc:	str	r3, [r4, #20]
   1d4c0:	strb	r2, [r0]
   1d4c4:	ldrb	r5, [r4, #25]
   1d4c8:	ldr	r3, [r4, #32]
   1d4cc:	ldr	r2, [r4, #16]
   1d4d0:	ldr	r0, [r4, #20]
   1d4d4:	sub	r3, r3, #1
   1d4d8:	mul	r5, r3, r5
   1d4dc:	str	r3, [r4, #32]
   1d4e0:	add	r3, r0, r5
   1d4e4:	cmp	r2, r3
   1d4e8:	bcs	1d504 <flatcc_json_printer_int64_vector_field@@Base+0x2c0>
   1d4ec:	mov	r0, r4
   1d4f0:	mov	r1, r5
   1d4f4:	bl	14d14 <test_print@@Base+0x1278>
   1d4f8:	ldr	r0, [r4, #20]
   1d4fc:	add	r3, r0, #1
   1d500:	b	1d45c <flatcc_json_printer_int64_vector_field@@Base+0x218>
   1d504:	mov	r2, r5
   1d508:	mov	r1, #32
   1d50c:	bl	124bc <memset@plt>
   1d510:	ldr	r0, [r4, #20]
   1d514:	add	r0, r0, r5
   1d518:	add	r3, r0, #1
   1d51c:	b	1d45c <flatcc_json_printer_int64_vector_field@@Base+0x218>

0001d520 <flatcc_json_printer_bool_vector_field@@Base>:
   1d520:	ldr	ip, [r1, #8]
   1d524:	add	r2, r2, #2
   1d528:	lsl	r2, r2, #1
   1d52c:	cmp	ip, r2
   1d530:	bxle	lr
   1d534:	ldr	ip, [r1, #4]
   1d538:	ldrh	r2, [ip, r2]
   1d53c:	cmp	r2, #0
   1d540:	bxeq	lr
   1d544:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1d548:	ldr	ip, [r1]
   1d54c:	strd	r6, [sp, #8]
   1d550:	str	lr, [sp, #28]
   1d554:	strd	r8, [sp, #16]
   1d558:	str	sl, [sp, #24]
   1d55c:	adds	lr, ip, r2
   1d560:	beq	1d6f8 <flatcc_json_printer_bool_vector_field@@Base+0x1d8>
   1d564:	ldr	r4, [r1, #16]
   1d568:	add	r5, r4, #1
   1d56c:	cmp	r4, #0
   1d570:	str	r5, [r1, #16]
   1d574:	beq	1d58c <flatcc_json_printer_bool_vector_field@@Base+0x6c>
   1d578:	ldr	r1, [r0, #20]
   1d57c:	mov	r4, #44	; 0x2c
   1d580:	add	r5, r1, #1
   1d584:	str	r5, [r0, #20]
   1d588:	strb	r4, [r1]
   1d58c:	mov	r1, r3
   1d590:	ldr	r3, [ip, r2]
   1d594:	mov	r4, r0
   1d598:	ldr	r2, [sp, #32]
   1d59c:	add	r6, lr, r3
   1d5a0:	ldr	r7, [lr, r3]
   1d5a4:	bl	16158 <test_print@@Base+0x26bc>
   1d5a8:	ldr	r2, [r4, #20]
   1d5ac:	mov	r1, #91	; 0x5b
   1d5b0:	ldr	r3, [r4, #32]
   1d5b4:	cmp	r7, #0
   1d5b8:	add	r0, r2, #1
   1d5bc:	add	r3, r3, #1
   1d5c0:	str	r0, [r4, #20]
   1d5c4:	str	r3, [r4, #32]
   1d5c8:	strb	r1, [r2]
   1d5cc:	beq	1d6d8 <flatcc_json_printer_bool_vector_field@@Base+0x1b8>
   1d5d0:	ldrb	r3, [r4, #25]
   1d5d4:	ldr	r1, [r4, #20]
   1d5d8:	cmp	r3, #0
   1d5dc:	bne	1d710 <flatcc_json_printer_bool_vector_field@@Base+0x1f0>
   1d5e0:	ldr	r2, [r4, #16]
   1d5e4:	cmp	r2, r1
   1d5e8:	bhi	1d600 <flatcc_json_printer_bool_vector_field@@Base+0xe0>
   1d5ec:	mov	r1, r3
   1d5f0:	mov	r0, r4
   1d5f4:	ldr	r3, [r4, #44]	; 0x2c
   1d5f8:	blx	r3
   1d5fc:	ldr	r1, [r4, #20]
   1d600:	add	r5, r6, #5
   1d604:	ldrb	r0, [r6, #4]
   1d608:	bl	150e0 <test_print@@Base+0x1644>
   1d60c:	ldr	r3, [r4, #20]
   1d610:	cmp	r7, #1
   1d614:	add	r0, r3, r0
   1d618:	str	r0, [r4, #20]
   1d61c:	beq	1d6dc <flatcc_json_printer_bool_vector_field@@Base+0x1bc>
   1d620:	add	r3, r7, #4
   1d624:	mov	r8, #10
   1d628:	mov	r7, #44	; 0x2c
   1d62c:	add	r6, r6, r3
   1d630:	b	1d674 <flatcc_json_printer_bool_vector_field@@Base+0x154>
   1d634:	ldr	r3, [r4, #16]
   1d638:	mov	r0, r4
   1d63c:	ldr	r2, [r4, #20]
   1d640:	cmp	r2, r3
   1d644:	bcc	1d654 <flatcc_json_printer_bool_vector_field@@Base+0x134>
   1d648:	ldr	r3, [r4, #44]	; 0x2c
   1d64c:	blx	r3
   1d650:	ldr	r2, [r4, #20]
   1d654:	mov	r1, r2
   1d658:	ldrb	r0, [r5], #1
   1d65c:	bl	150e0 <test_print@@Base+0x1644>
   1d660:	ldr	r3, [r4, #20]
   1d664:	cmp	r5, r6
   1d668:	add	r0, r3, r0
   1d66c:	str	r0, [r4, #20]
   1d670:	beq	1d6dc <flatcc_json_printer_bool_vector_field@@Base+0x1bc>
   1d674:	add	r3, r0, #1
   1d678:	str	r3, [r4, #20]
   1d67c:	strb	r7, [r0]
   1d680:	ldrb	r1, [r4, #25]
   1d684:	cmp	r1, #0
   1d688:	beq	1d634 <flatcc_json_printer_bool_vector_field@@Base+0x114>
   1d68c:	ldr	r3, [r4, #20]
   1d690:	mov	r1, #32
   1d694:	mov	r0, r4
   1d698:	add	r2, r3, #1
   1d69c:	str	r2, [r4, #20]
   1d6a0:	strb	r8, [r3]
   1d6a4:	ldrb	r2, [r4, #25]
   1d6a8:	ldr	lr, [r4, #16]
   1d6ac:	ldr	r9, [r4, #32]
   1d6b0:	ldr	r3, [r4, #20]
   1d6b4:	mul	r9, r9, r2
   1d6b8:	add	ip, r3, r9
   1d6bc:	mov	r2, r9
   1d6c0:	cmp	lr, ip
   1d6c4:	bcs	1d754 <flatcc_json_printer_bool_vector_field@@Base+0x234>
   1d6c8:	mov	r1, r9
   1d6cc:	bl	14d14 <test_print@@Base+0x1278>
   1d6d0:	ldr	r2, [r4, #20]
   1d6d4:	b	1d654 <flatcc_json_printer_bool_vector_field@@Base+0x134>
   1d6d8:	ldr	r0, [r4, #20]
   1d6dc:	add	r3, r0, #1
   1d6e0:	ldrb	r2, [r4, #25]
   1d6e4:	cmp	r2, #0
   1d6e8:	bne	1d76c <flatcc_json_printer_bool_vector_field@@Base+0x24c>
   1d6ec:	mov	r2, #93	; 0x5d
   1d6f0:	str	r3, [r4, #20]
   1d6f4:	strb	r2, [r0]
   1d6f8:	ldrd	r4, [sp]
   1d6fc:	ldrd	r6, [sp, #8]
   1d700:	ldrd	r8, [sp, #16]
   1d704:	ldr	sl, [sp, #24]
   1d708:	add	sp, sp, #28
   1d70c:	pop	{pc}		; (ldr pc, [sp], #4)
   1d710:	add	r2, r1, #1
   1d714:	mov	r3, #10
   1d718:	str	r2, [r4, #20]
   1d71c:	strb	r3, [r1]
   1d720:	ldrb	r5, [r4, #25]
   1d724:	ldr	r2, [r4, #16]
   1d728:	ldr	r1, [r4, #32]
   1d72c:	ldr	r0, [r4, #20]
   1d730:	mul	r5, r1, r5
   1d734:	add	r3, r0, r5
   1d738:	cmp	r2, r3
   1d73c:	bcs	1d7d4 <flatcc_json_printer_bool_vector_field@@Base+0x2b4>
   1d740:	mov	r1, r5
   1d744:	mov	r0, r4
   1d748:	bl	14d14 <test_print@@Base+0x1278>
   1d74c:	ldr	r1, [r4, #20]
   1d750:	b	1d600 <flatcc_json_printer_bool_vector_field@@Base+0xe0>
   1d754:	mov	r0, r3
   1d758:	bl	124bc <memset@plt>
   1d75c:	ldr	r2, [r4, #20]
   1d760:	add	r2, r2, r9
   1d764:	str	r2, [r4, #20]
   1d768:	b	1d654 <flatcc_json_printer_bool_vector_field@@Base+0x134>
   1d76c:	mov	r2, #10
   1d770:	str	r3, [r4, #20]
   1d774:	strb	r2, [r0]
   1d778:	ldrb	r5, [r4, #25]
   1d77c:	ldr	r3, [r4, #32]
   1d780:	ldr	r2, [r4, #16]
   1d784:	ldr	r0, [r4, #20]
   1d788:	sub	r3, r3, #1
   1d78c:	mul	r5, r3, r5
   1d790:	str	r3, [r4, #32]
   1d794:	add	r3, r0, r5
   1d798:	cmp	r2, r3
   1d79c:	bcs	1d7b8 <flatcc_json_printer_bool_vector_field@@Base+0x298>
   1d7a0:	mov	r0, r4
   1d7a4:	mov	r1, r5
   1d7a8:	bl	14d14 <test_print@@Base+0x1278>
   1d7ac:	ldr	r0, [r4, #20]
   1d7b0:	add	r3, r0, #1
   1d7b4:	b	1d6ec <flatcc_json_printer_bool_vector_field@@Base+0x1cc>
   1d7b8:	mov	r2, r5
   1d7bc:	mov	r1, #32
   1d7c0:	bl	124bc <memset@plt>
   1d7c4:	ldr	r0, [r4, #20]
   1d7c8:	add	r0, r0, r5
   1d7cc:	add	r3, r0, #1
   1d7d0:	b	1d6ec <flatcc_json_printer_bool_vector_field@@Base+0x1cc>
   1d7d4:	mov	r1, #32
   1d7d8:	mov	r2, r5
   1d7dc:	bl	124bc <memset@plt>
   1d7e0:	ldr	r1, [r4, #20]
   1d7e4:	add	r1, r1, r5
   1d7e8:	str	r1, [r4, #20]
   1d7ec:	b	1d600 <flatcc_json_printer_bool_vector_field@@Base+0xe0>

0001d7f0 <flatcc_json_printer_float_vector_field@@Base>:
   1d7f0:	ldr	ip, [r1, #8]
   1d7f4:	add	r2, r2, #2
   1d7f8:	lsl	r2, r2, #1
   1d7fc:	cmp	ip, r2
   1d800:	bxle	lr
   1d804:	ldr	ip, [r1, #4]
   1d808:	ldrh	r2, [ip, r2]
   1d80c:	cmp	r2, #0
   1d810:	bxeq	lr
   1d814:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1d818:	ldr	ip, [r1]
   1d81c:	strd	r6, [sp, #8]
   1d820:	str	lr, [sp, #28]
   1d824:	strd	r8, [sp, #16]
   1d828:	str	sl, [sp, #24]
   1d82c:	adds	lr, ip, r2
   1d830:	beq	1d9cc <flatcc_json_printer_float_vector_field@@Base+0x1dc>
   1d834:	ldr	r4, [r1, #16]
   1d838:	add	r5, r4, #1
   1d83c:	cmp	r4, #0
   1d840:	str	r5, [r1, #16]
   1d844:	beq	1d85c <flatcc_json_printer_float_vector_field@@Base+0x6c>
   1d848:	ldr	r1, [r0, #20]
   1d84c:	mov	r4, #44	; 0x2c
   1d850:	add	r5, r1, #1
   1d854:	str	r5, [r0, #20]
   1d858:	strb	r4, [r1]
   1d85c:	mov	r1, r3
   1d860:	ldr	r3, [ip, r2]
   1d864:	mov	r4, r0
   1d868:	ldr	r2, [sp, #32]
   1d86c:	add	r5, lr, r3
   1d870:	ldr	r7, [lr, r3]
   1d874:	bl	16158 <test_print@@Base+0x26bc>
   1d878:	ldr	r2, [r4, #20]
   1d87c:	mov	r1, #91	; 0x5b
   1d880:	ldr	r3, [r4, #32]
   1d884:	cmp	r7, #0
   1d888:	add	r0, r2, #1
   1d88c:	add	r3, r3, #1
   1d890:	str	r0, [r4, #20]
   1d894:	str	r3, [r4, #32]
   1d898:	strb	r1, [r2]
   1d89c:	beq	1d9ac <flatcc_json_printer_float_vector_field@@Base+0x1bc>
   1d8a0:	ldrb	r1, [r4, #25]
   1d8a4:	ldr	r0, [r4, #20]
   1d8a8:	cmp	r1, #0
   1d8ac:	bne	1d9e4 <flatcc_json_printer_float_vector_field@@Base+0x1f4>
   1d8b0:	ldr	r3, [r4, #16]
   1d8b4:	cmp	r3, r0
   1d8b8:	bhi	1d8cc <flatcc_json_printer_float_vector_field@@Base+0xdc>
   1d8bc:	mov	r0, r4
   1d8c0:	ldr	r3, [r4, #44]	; 0x2c
   1d8c4:	blx	r3
   1d8c8:	ldr	r0, [r4, #20]
   1d8cc:	add	r6, r5, #8
   1d8d0:	vldr	s0, [r5, #4]
   1d8d4:	sub	r5, r7, #2
   1d8d8:	vcvt.f64.f32	d0, s0
   1d8dc:	bl	153a0 <test_print@@Base+0x1904>
   1d8e0:	ldr	r3, [r4, #20]
   1d8e4:	cmp	r7, #1
   1d8e8:	add	r0, r3, r0
   1d8ec:	str	r0, [r4, #20]
   1d8f0:	beq	1d9b0 <flatcc_json_printer_float_vector_field@@Base+0x1c0>
   1d8f4:	mov	r7, #44	; 0x2c
   1d8f8:	mov	r8, #10
   1d8fc:	b	1d948 <flatcc_json_printer_float_vector_field@@Base+0x158>
   1d900:	ldr	r3, [r4, #16]
   1d904:	mov	r0, r4
   1d908:	ldr	r2, [r4, #20]
   1d90c:	cmp	r2, r3
   1d910:	bcc	1d920 <flatcc_json_printer_float_vector_field@@Base+0x130>
   1d914:	ldr	r3, [r4, #44]	; 0x2c
   1d918:	blx	r3
   1d91c:	ldr	r2, [r4, #20]
   1d920:	mov	r0, r2
   1d924:	sub	r5, r5, #1
   1d928:	vldmia	r6!, {s0}
   1d92c:	vcvt.f64.f32	d0, s0
   1d930:	bl	153a0 <test_print@@Base+0x1904>
   1d934:	ldr	r3, [r4, #20]
   1d938:	cmn	r5, #1
   1d93c:	add	r0, r3, r0
   1d940:	str	r0, [r4, #20]
   1d944:	beq	1d9b0 <flatcc_json_printer_float_vector_field@@Base+0x1c0>
   1d948:	add	r3, r0, #1
   1d94c:	str	r3, [r4, #20]
   1d950:	strb	r7, [r0]
   1d954:	ldrb	r1, [r4, #25]
   1d958:	cmp	r1, #0
   1d95c:	beq	1d900 <flatcc_json_printer_float_vector_field@@Base+0x110>
   1d960:	ldr	r3, [r4, #20]
   1d964:	mov	r1, #32
   1d968:	mov	r0, r4
   1d96c:	add	r2, r3, #1
   1d970:	str	r2, [r4, #20]
   1d974:	strb	r8, [r3]
   1d978:	ldrb	r2, [r4, #25]
   1d97c:	ldr	lr, [r4, #16]
   1d980:	ldr	r9, [r4, #32]
   1d984:	ldr	r3, [r4, #20]
   1d988:	mul	r9, r9, r2
   1d98c:	add	ip, r3, r9
   1d990:	mov	r2, r9
   1d994:	cmp	lr, ip
   1d998:	bcs	1da28 <flatcc_json_printer_float_vector_field@@Base+0x238>
   1d99c:	mov	r1, r9
   1d9a0:	bl	14d14 <test_print@@Base+0x1278>
   1d9a4:	ldr	r2, [r4, #20]
   1d9a8:	b	1d920 <flatcc_json_printer_float_vector_field@@Base+0x130>
   1d9ac:	ldr	r0, [r4, #20]
   1d9b0:	add	r3, r0, #1
   1d9b4:	ldrb	r2, [r4, #25]
   1d9b8:	cmp	r2, #0
   1d9bc:	bne	1da40 <flatcc_json_printer_float_vector_field@@Base+0x250>
   1d9c0:	mov	r2, #93	; 0x5d
   1d9c4:	str	r3, [r4, #20]
   1d9c8:	strb	r2, [r0]
   1d9cc:	ldrd	r4, [sp]
   1d9d0:	ldrd	r6, [sp, #8]
   1d9d4:	ldrd	r8, [sp, #16]
   1d9d8:	ldr	sl, [sp, #24]
   1d9dc:	add	sp, sp, #28
   1d9e0:	pop	{pc}		; (ldr pc, [sp], #4)
   1d9e4:	add	r2, r0, #1
   1d9e8:	mov	r3, #10
   1d9ec:	str	r2, [r4, #20]
   1d9f0:	strb	r3, [r0]
   1d9f4:	ldrb	r3, [r4, #25]
   1d9f8:	ldr	r2, [r4, #16]
   1d9fc:	ldr	r6, [r4, #32]
   1da00:	ldr	r0, [r4, #20]
   1da04:	mul	r6, r6, r3
   1da08:	add	r3, r0, r6
   1da0c:	cmp	r2, r3
   1da10:	bcs	1daa8 <flatcc_json_printer_float_vector_field@@Base+0x2b8>
   1da14:	mov	r0, r4
   1da18:	mov	r1, r6
   1da1c:	bl	14d14 <test_print@@Base+0x1278>
   1da20:	ldr	r0, [r4, #20]
   1da24:	b	1d8cc <flatcc_json_printer_float_vector_field@@Base+0xdc>
   1da28:	mov	r0, r3
   1da2c:	bl	124bc <memset@plt>
   1da30:	ldr	r2, [r4, #20]
   1da34:	add	r2, r2, r9
   1da38:	str	r2, [r4, #20]
   1da3c:	b	1d920 <flatcc_json_printer_float_vector_field@@Base+0x130>
   1da40:	mov	r2, #10
   1da44:	str	r3, [r4, #20]
   1da48:	strb	r2, [r0]
   1da4c:	ldrb	r5, [r4, #25]
   1da50:	ldr	r3, [r4, #32]
   1da54:	ldr	r2, [r4, #16]
   1da58:	ldr	r0, [r4, #20]
   1da5c:	sub	r3, r3, #1
   1da60:	mul	r5, r3, r5
   1da64:	str	r3, [r4, #32]
   1da68:	add	r3, r0, r5
   1da6c:	cmp	r2, r3
   1da70:	bcs	1da8c <flatcc_json_printer_float_vector_field@@Base+0x29c>
   1da74:	mov	r0, r4
   1da78:	mov	r1, r5
   1da7c:	bl	14d14 <test_print@@Base+0x1278>
   1da80:	ldr	r0, [r4, #20]
   1da84:	add	r3, r0, #1
   1da88:	b	1d9c0 <flatcc_json_printer_float_vector_field@@Base+0x1d0>
   1da8c:	mov	r2, r5
   1da90:	mov	r1, #32
   1da94:	bl	124bc <memset@plt>
   1da98:	ldr	r0, [r4, #20]
   1da9c:	add	r0, r0, r5
   1daa0:	add	r3, r0, #1
   1daa4:	b	1d9c0 <flatcc_json_printer_float_vector_field@@Base+0x1d0>
   1daa8:	mov	r2, r6
   1daac:	mov	r1, #32
   1dab0:	bl	124bc <memset@plt>
   1dab4:	ldr	r0, [r4, #20]
   1dab8:	add	r0, r0, r6
   1dabc:	str	r0, [r4, #20]
   1dac0:	b	1d8cc <flatcc_json_printer_float_vector_field@@Base+0xdc>

0001dac4 <flatcc_json_printer_double_vector_field@@Base>:
   1dac4:	ldr	ip, [r1, #8]
   1dac8:	add	r2, r2, #2
   1dacc:	lsl	r2, r2, #1
   1dad0:	cmp	ip, r2
   1dad4:	bxle	lr
   1dad8:	ldr	ip, [r1, #4]
   1dadc:	ldrh	r2, [ip, r2]
   1dae0:	cmp	r2, #0
   1dae4:	bxeq	lr
   1dae8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1daec:	ldr	ip, [r1]
   1daf0:	strd	r6, [sp, #8]
   1daf4:	str	lr, [sp, #28]
   1daf8:	strd	r8, [sp, #16]
   1dafc:	str	sl, [sp, #24]
   1db00:	adds	lr, ip, r2
   1db04:	beq	1dc98 <flatcc_json_printer_double_vector_field@@Base+0x1d4>
   1db08:	ldr	r4, [r1, #16]
   1db0c:	add	r5, r4, #1
   1db10:	cmp	r4, #0
   1db14:	str	r5, [r1, #16]
   1db18:	beq	1db30 <flatcc_json_printer_double_vector_field@@Base+0x6c>
   1db1c:	ldr	r1, [r0, #20]
   1db20:	mov	r4, #44	; 0x2c
   1db24:	add	r5, r1, #1
   1db28:	str	r5, [r0, #20]
   1db2c:	strb	r4, [r1]
   1db30:	mov	r1, r3
   1db34:	ldr	r3, [ip, r2]
   1db38:	mov	r4, r0
   1db3c:	ldr	r2, [sp, #32]
   1db40:	add	r5, lr, r3
   1db44:	ldr	r7, [lr, r3]
   1db48:	bl	16158 <test_print@@Base+0x26bc>
   1db4c:	ldr	r2, [r4, #20]
   1db50:	mov	r1, #91	; 0x5b
   1db54:	ldr	r3, [r4, #32]
   1db58:	cmp	r7, #0
   1db5c:	add	r0, r2, #1
   1db60:	add	r3, r3, #1
   1db64:	str	r0, [r4, #20]
   1db68:	str	r3, [r4, #32]
   1db6c:	strb	r1, [r2]
   1db70:	beq	1dc78 <flatcc_json_printer_double_vector_field@@Base+0x1b4>
   1db74:	ldrb	r1, [r4, #25]
   1db78:	ldr	r0, [r4, #20]
   1db7c:	cmp	r1, #0
   1db80:	bne	1dcb0 <flatcc_json_printer_double_vector_field@@Base+0x1ec>
   1db84:	ldr	r3, [r4, #16]
   1db88:	cmp	r3, r0
   1db8c:	bhi	1dba0 <flatcc_json_printer_double_vector_field@@Base+0xdc>
   1db90:	mov	r0, r4
   1db94:	ldr	r3, [r4, #44]	; 0x2c
   1db98:	blx	r3
   1db9c:	ldr	r0, [r4, #20]
   1dba0:	add	r6, r5, #12
   1dba4:	vldr	d0, [r5, #4]
   1dba8:	sub	r5, r7, #2
   1dbac:	bl	153a0 <test_print@@Base+0x1904>
   1dbb0:	ldr	r3, [r4, #20]
   1dbb4:	cmp	r7, #1
   1dbb8:	add	r0, r3, r0
   1dbbc:	str	r0, [r4, #20]
   1dbc0:	beq	1dc7c <flatcc_json_printer_double_vector_field@@Base+0x1b8>
   1dbc4:	mov	r7, #44	; 0x2c
   1dbc8:	mov	r8, #10
   1dbcc:	b	1dc14 <flatcc_json_printer_double_vector_field@@Base+0x150>
   1dbd0:	ldr	r3, [r4, #16]
   1dbd4:	mov	r0, r4
   1dbd8:	ldr	r2, [r4, #20]
   1dbdc:	cmp	r2, r3
   1dbe0:	bcc	1dbf0 <flatcc_json_printer_double_vector_field@@Base+0x12c>
   1dbe4:	ldr	r3, [r4, #44]	; 0x2c
   1dbe8:	blx	r3
   1dbec:	ldr	r2, [r4, #20]
   1dbf0:	mov	r0, r2
   1dbf4:	sub	r5, r5, #1
   1dbf8:	vldmia	r6!, {d0}
   1dbfc:	bl	153a0 <test_print@@Base+0x1904>
   1dc00:	ldr	r3, [r4, #20]
   1dc04:	cmn	r5, #1
   1dc08:	add	r0, r3, r0
   1dc0c:	str	r0, [r4, #20]
   1dc10:	beq	1dc7c <flatcc_json_printer_double_vector_field@@Base+0x1b8>
   1dc14:	add	r3, r0, #1
   1dc18:	str	r3, [r4, #20]
   1dc1c:	strb	r7, [r0]
   1dc20:	ldrb	r1, [r4, #25]
   1dc24:	cmp	r1, #0
   1dc28:	beq	1dbd0 <flatcc_json_printer_double_vector_field@@Base+0x10c>
   1dc2c:	ldr	r3, [r4, #20]
   1dc30:	mov	r1, #32
   1dc34:	mov	r0, r4
   1dc38:	add	r2, r3, #1
   1dc3c:	str	r2, [r4, #20]
   1dc40:	strb	r8, [r3]
   1dc44:	ldrb	r2, [r4, #25]
   1dc48:	ldr	lr, [r4, #16]
   1dc4c:	ldr	r9, [r4, #32]
   1dc50:	ldr	r3, [r4, #20]
   1dc54:	mul	r9, r9, r2
   1dc58:	add	ip, r3, r9
   1dc5c:	mov	r2, r9
   1dc60:	cmp	lr, ip
   1dc64:	bcs	1dcf4 <flatcc_json_printer_double_vector_field@@Base+0x230>
   1dc68:	mov	r1, r9
   1dc6c:	bl	14d14 <test_print@@Base+0x1278>
   1dc70:	ldr	r2, [r4, #20]
   1dc74:	b	1dbf0 <flatcc_json_printer_double_vector_field@@Base+0x12c>
   1dc78:	ldr	r0, [r4, #20]
   1dc7c:	add	r3, r0, #1
   1dc80:	ldrb	r2, [r4, #25]
   1dc84:	cmp	r2, #0
   1dc88:	bne	1dd0c <flatcc_json_printer_double_vector_field@@Base+0x248>
   1dc8c:	mov	r2, #93	; 0x5d
   1dc90:	str	r3, [r4, #20]
   1dc94:	strb	r2, [r0]
   1dc98:	ldrd	r4, [sp]
   1dc9c:	ldrd	r6, [sp, #8]
   1dca0:	ldrd	r8, [sp, #16]
   1dca4:	ldr	sl, [sp, #24]
   1dca8:	add	sp, sp, #28
   1dcac:	pop	{pc}		; (ldr pc, [sp], #4)
   1dcb0:	add	r2, r0, #1
   1dcb4:	mov	r3, #10
   1dcb8:	str	r2, [r4, #20]
   1dcbc:	strb	r3, [r0]
   1dcc0:	ldrb	r3, [r4, #25]
   1dcc4:	ldr	r2, [r4, #16]
   1dcc8:	ldr	r6, [r4, #32]
   1dccc:	ldr	r0, [r4, #20]
   1dcd0:	mul	r6, r6, r3
   1dcd4:	add	r3, r0, r6
   1dcd8:	cmp	r2, r3
   1dcdc:	bcs	1dd74 <flatcc_json_printer_double_vector_field@@Base+0x2b0>
   1dce0:	mov	r0, r4
   1dce4:	mov	r1, r6
   1dce8:	bl	14d14 <test_print@@Base+0x1278>
   1dcec:	ldr	r0, [r4, #20]
   1dcf0:	b	1dba0 <flatcc_json_printer_double_vector_field@@Base+0xdc>
   1dcf4:	mov	r0, r3
   1dcf8:	bl	124bc <memset@plt>
   1dcfc:	ldr	r2, [r4, #20]
   1dd00:	add	r2, r2, r9
   1dd04:	str	r2, [r4, #20]
   1dd08:	b	1dbf0 <flatcc_json_printer_double_vector_field@@Base+0x12c>
   1dd0c:	mov	r2, #10
   1dd10:	str	r3, [r4, #20]
   1dd14:	strb	r2, [r0]
   1dd18:	ldrb	r5, [r4, #25]
   1dd1c:	ldr	r3, [r4, #32]
   1dd20:	ldr	r2, [r4, #16]
   1dd24:	ldr	r0, [r4, #20]
   1dd28:	sub	r3, r3, #1
   1dd2c:	mul	r5, r3, r5
   1dd30:	str	r3, [r4, #32]
   1dd34:	add	r3, r0, r5
   1dd38:	cmp	r2, r3
   1dd3c:	bcs	1dd58 <flatcc_json_printer_double_vector_field@@Base+0x294>
   1dd40:	mov	r0, r4
   1dd44:	mov	r1, r5
   1dd48:	bl	14d14 <test_print@@Base+0x1278>
   1dd4c:	ldr	r0, [r4, #20]
   1dd50:	add	r3, r0, #1
   1dd54:	b	1dc8c <flatcc_json_printer_double_vector_field@@Base+0x1c8>
   1dd58:	mov	r2, r5
   1dd5c:	mov	r1, #32
   1dd60:	bl	124bc <memset@plt>
   1dd64:	ldr	r0, [r4, #20]
   1dd68:	add	r0, r0, r5
   1dd6c:	add	r3, r0, #1
   1dd70:	b	1dc8c <flatcc_json_printer_double_vector_field@@Base+0x1c8>
   1dd74:	mov	r2, r6
   1dd78:	mov	r1, #32
   1dd7c:	bl	124bc <memset@plt>
   1dd80:	ldr	r0, [r4, #20]
   1dd84:	add	r0, r0, r6
   1dd88:	str	r0, [r4, #20]
   1dd8c:	b	1dba0 <flatcc_json_printer_double_vector_field@@Base+0xdc>

0001dd90 <flatcc_json_printer_utype_enum_vector_field@@Base>:
   1dd90:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1dd94:	strd	r6, [sp, #8]
   1dd98:	strd	r8, [sp, #16]
   1dd9c:	str	sl, [sp, #24]
   1dda0:	str	lr, [sp, #28]
   1dda4:	ldrb	r8, [r0, #27]
   1dda8:	ldr	r7, [sp, #32]
   1ddac:	ldr	r6, [sp, #36]	; 0x24
   1ddb0:	cmp	r8, #0
   1ddb4:	bne	1df80 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1f0>
   1ddb8:	mov	r5, r3
   1ddbc:	ldr	r3, [r1, #8]
   1ddc0:	add	r2, r2, #2
   1ddc4:	lsl	r2, r2, #1
   1ddc8:	mov	lr, r1
   1ddcc:	cmp	r3, r2
   1ddd0:	ble	1df68 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1d8>
   1ddd4:	ldr	r3, [r1, #4]
   1ddd8:	ldrh	r2, [r3, r2]
   1dddc:	cmp	r2, #0
   1dde0:	beq	1df68 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1d8>
   1dde4:	ldr	r3, [r1]
   1dde8:	adds	ip, r3, r2
   1ddec:	beq	1df68 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1d8>
   1ddf0:	ldr	r1, [r1, #16]
   1ddf4:	mov	r4, r0
   1ddf8:	add	r0, r1, #1
   1ddfc:	cmp	r1, #0
   1de00:	str	r0, [lr, #16]
   1de04:	beq	1de1c <flatcc_json_printer_utype_enum_vector_field@@Base+0x8c>
   1de08:	ldr	r1, [r4, #20]
   1de0c:	mov	r0, #44	; 0x2c
   1de10:	add	lr, r1, #1
   1de14:	str	lr, [r4, #20]
   1de18:	strb	r0, [r1]
   1de1c:	ldr	r3, [r3, r2]
   1de20:	mov	r1, r5
   1de24:	mov	r2, r7
   1de28:	mov	r0, r4
   1de2c:	add	r7, ip, r3
   1de30:	ldr	r8, [ip, r3]
   1de34:	bl	16158 <test_print@@Base+0x26bc>
   1de38:	ldr	r2, [r4, #20]
   1de3c:	mov	r1, #91	; 0x5b
   1de40:	ldr	r3, [r4, #32]
   1de44:	cmp	r8, #0
   1de48:	add	r0, r2, #1
   1de4c:	add	r3, r3, #1
   1de50:	str	r0, [r4, #20]
   1de54:	str	r3, [r4, #32]
   1de58:	strb	r1, [r2]
   1de5c:	beq	1df48 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1b8>
   1de60:	ldrb	r1, [r4, #25]
   1de64:	ldr	r3, [r4, #20]
   1de68:	cmp	r1, #0
   1de6c:	bne	1e000 <flatcc_json_printer_utype_enum_vector_field@@Base+0x270>
   1de70:	ldr	r2, [r4, #16]
   1de74:	cmp	r2, r3
   1de78:	bhi	1de88 <flatcc_json_printer_utype_enum_vector_field@@Base+0xf8>
   1de7c:	mov	r0, r4
   1de80:	ldr	r3, [r4, #44]	; 0x2c
   1de84:	blx	r3
   1de88:	ldrb	r1, [r7, #4]
   1de8c:	mov	r0, r4
   1de90:	add	r5, r7, #5
   1de94:	blx	r6
   1de98:	cmp	r8, #1
   1de9c:	beq	1df48 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1b8>
   1dea0:	add	r3, r8, #4
   1dea4:	mov	r9, #10
   1dea8:	mov	r8, #44	; 0x2c
   1deac:	add	r7, r7, r3
   1deb0:	b	1dee4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x154>
   1deb4:	ldr	r3, [r4, #16]
   1deb8:	mov	r0, r4
   1debc:	ldr	r2, [r4, #20]
   1dec0:	cmp	r2, r3
   1dec4:	bcc	1ded0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x140>
   1dec8:	ldr	r3, [r4, #44]	; 0x2c
   1decc:	blx	r3
   1ded0:	ldrb	r1, [r5], #1
   1ded4:	mov	r0, r4
   1ded8:	blx	r6
   1dedc:	cmp	r5, r7
   1dee0:	beq	1df48 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1b8>
   1dee4:	ldr	r3, [r4, #20]
   1dee8:	add	r2, r3, #1
   1deec:	str	r2, [r4, #20]
   1def0:	strb	r8, [r3]
   1def4:	ldrb	r1, [r4, #25]
   1def8:	cmp	r1, #0
   1defc:	beq	1deb4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x124>
   1df00:	ldr	r3, [r4, #20]
   1df04:	mov	r1, #32
   1df08:	mov	r0, r4
   1df0c:	add	r2, r3, #1
   1df10:	str	r2, [r4, #20]
   1df14:	strb	r9, [r3]
   1df18:	ldrb	r2, [r4, #25]
   1df1c:	ldr	lr, [r4, #16]
   1df20:	ldr	sl, [r4, #32]
   1df24:	ldr	r3, [r4, #20]
   1df28:	mul	sl, sl, r2
   1df2c:	add	ip, r3, sl
   1df30:	mov	r2, sl
   1df34:	cmp	lr, ip
   1df38:	bcs	1df9c <flatcc_json_printer_utype_enum_vector_field@@Base+0x20c>
   1df3c:	mov	r1, sl
   1df40:	bl	14d14 <test_print@@Base+0x1278>
   1df44:	b	1ded0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x140>
   1df48:	ldrb	r2, [r4, #25]
   1df4c:	ldr	r3, [r4, #20]
   1df50:	cmp	r2, #0
   1df54:	add	r2, r3, #1
   1df58:	bne	1dfb4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x224>
   1df5c:	mov	r1, #93	; 0x5d
   1df60:	str	r2, [r4, #20]
   1df64:	strb	r1, [r3]
   1df68:	ldrd	r4, [sp]
   1df6c:	ldrd	r6, [sp, #8]
   1df70:	ldrd	r8, [sp, #16]
   1df74:	ldr	sl, [sp, #24]
   1df78:	add	sp, sp, #28
   1df7c:	pop	{pc}		; (ldr pc, [sp], #4)
   1df80:	ldrd	r4, [sp]
   1df84:	ldrd	r6, [sp, #8]
   1df88:	ldrd	r8, [sp, #16]
   1df8c:	ldr	sl, [sp, #24]
   1df90:	ldr	lr, [sp, #28]
   1df94:	add	sp, sp, #32
   1df98:	b	1bfd4 <flatcc_json_printer_utype_vector_field@@Base>
   1df9c:	mov	r0, r3
   1dfa0:	bl	124bc <memset@plt>
   1dfa4:	ldr	r3, [r4, #20]
   1dfa8:	add	sl, r3, sl
   1dfac:	str	sl, [r4, #20]
   1dfb0:	b	1ded0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x140>
   1dfb4:	mov	r1, #10
   1dfb8:	str	r2, [r4, #20]
   1dfbc:	strb	r1, [r3]
   1dfc0:	ldrb	r3, [r4, #25]
   1dfc4:	ldr	r2, [r4, #32]
   1dfc8:	ldr	r1, [r4, #16]
   1dfcc:	ldr	r0, [r4, #20]
   1dfd0:	sub	r2, r2, #1
   1dfd4:	mul	r5, r2, r3
   1dfd8:	str	r2, [r4, #32]
   1dfdc:	add	r3, r0, r5
   1dfe0:	cmp	r1, r3
   1dfe4:	bcs	1e01c <flatcc_json_printer_utype_enum_vector_field@@Base+0x28c>
   1dfe8:	mov	r1, r5
   1dfec:	mov	r0, r4
   1dff0:	bl	14d14 <test_print@@Base+0x1278>
   1dff4:	ldr	r3, [r4, #20]
   1dff8:	add	r2, r3, #1
   1dffc:	b	1df5c <flatcc_json_printer_utype_enum_vector_field@@Base+0x1cc>
   1e000:	add	r1, r3, #1
   1e004:	mov	r2, #10
   1e008:	mov	r0, r4
   1e00c:	str	r1, [r4, #20]
   1e010:	strb	r2, [r3]
   1e014:	bl	14dc8 <test_print@@Base+0x132c>
   1e018:	b	1de88 <flatcc_json_printer_utype_enum_vector_field@@Base+0xf8>
   1e01c:	mov	r2, r5
   1e020:	mov	r1, #32
   1e024:	bl	124bc <memset@plt>
   1e028:	ldr	r3, [r4, #20]
   1e02c:	add	r3, r3, r5
   1e030:	add	r2, r3, #1
   1e034:	b	1df5c <flatcc_json_printer_utype_enum_vector_field@@Base+0x1cc>

0001e038 <flatcc_json_printer_uint8_enum_vector_field@@Base>:
   1e038:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1e03c:	strd	r6, [sp, #8]
   1e040:	strd	r8, [sp, #16]
   1e044:	str	sl, [sp, #24]
   1e048:	str	lr, [sp, #28]
   1e04c:	ldrb	r8, [r0, #27]
   1e050:	ldr	r7, [sp, #32]
   1e054:	ldr	r6, [sp, #36]	; 0x24
   1e058:	cmp	r8, #0
   1e05c:	bne	1e228 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1f0>
   1e060:	mov	r5, r3
   1e064:	ldr	r3, [r1, #8]
   1e068:	add	r2, r2, #2
   1e06c:	lsl	r2, r2, #1
   1e070:	mov	lr, r1
   1e074:	cmp	r3, r2
   1e078:	ble	1e210 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1d8>
   1e07c:	ldr	r3, [r1, #4]
   1e080:	ldrh	r2, [r3, r2]
   1e084:	cmp	r2, #0
   1e088:	beq	1e210 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1d8>
   1e08c:	ldr	r3, [r1]
   1e090:	adds	ip, r3, r2
   1e094:	beq	1e210 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1d8>
   1e098:	ldr	r1, [r1, #16]
   1e09c:	mov	r4, r0
   1e0a0:	add	r0, r1, #1
   1e0a4:	cmp	r1, #0
   1e0a8:	str	r0, [lr, #16]
   1e0ac:	beq	1e0c4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x8c>
   1e0b0:	ldr	r1, [r4, #20]
   1e0b4:	mov	r0, #44	; 0x2c
   1e0b8:	add	lr, r1, #1
   1e0bc:	str	lr, [r4, #20]
   1e0c0:	strb	r0, [r1]
   1e0c4:	ldr	r3, [r3, r2]
   1e0c8:	mov	r1, r5
   1e0cc:	mov	r2, r7
   1e0d0:	mov	r0, r4
   1e0d4:	add	r7, ip, r3
   1e0d8:	ldr	r8, [ip, r3]
   1e0dc:	bl	16158 <test_print@@Base+0x26bc>
   1e0e0:	ldr	r2, [r4, #20]
   1e0e4:	mov	r1, #91	; 0x5b
   1e0e8:	ldr	r3, [r4, #32]
   1e0ec:	cmp	r8, #0
   1e0f0:	add	r0, r2, #1
   1e0f4:	add	r3, r3, #1
   1e0f8:	str	r0, [r4, #20]
   1e0fc:	str	r3, [r4, #32]
   1e100:	strb	r1, [r2]
   1e104:	beq	1e1f0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1b8>
   1e108:	ldrb	r1, [r4, #25]
   1e10c:	ldr	r3, [r4, #20]
   1e110:	cmp	r1, #0
   1e114:	bne	1e2a8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x270>
   1e118:	ldr	r2, [r4, #16]
   1e11c:	cmp	r2, r3
   1e120:	bhi	1e130 <flatcc_json_printer_uint8_enum_vector_field@@Base+0xf8>
   1e124:	mov	r0, r4
   1e128:	ldr	r3, [r4, #44]	; 0x2c
   1e12c:	blx	r3
   1e130:	ldrb	r1, [r7, #4]
   1e134:	mov	r0, r4
   1e138:	add	r5, r7, #5
   1e13c:	blx	r6
   1e140:	cmp	r8, #1
   1e144:	beq	1e1f0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1b8>
   1e148:	add	r3, r8, #4
   1e14c:	mov	r9, #10
   1e150:	mov	r8, #44	; 0x2c
   1e154:	add	r7, r7, r3
   1e158:	b	1e18c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x154>
   1e15c:	ldr	r3, [r4, #16]
   1e160:	mov	r0, r4
   1e164:	ldr	r2, [r4, #20]
   1e168:	cmp	r2, r3
   1e16c:	bcc	1e178 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x140>
   1e170:	ldr	r3, [r4, #44]	; 0x2c
   1e174:	blx	r3
   1e178:	ldrb	r1, [r5], #1
   1e17c:	mov	r0, r4
   1e180:	blx	r6
   1e184:	cmp	r5, r7
   1e188:	beq	1e1f0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1b8>
   1e18c:	ldr	r3, [r4, #20]
   1e190:	add	r2, r3, #1
   1e194:	str	r2, [r4, #20]
   1e198:	strb	r8, [r3]
   1e19c:	ldrb	r1, [r4, #25]
   1e1a0:	cmp	r1, #0
   1e1a4:	beq	1e15c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x124>
   1e1a8:	ldr	r3, [r4, #20]
   1e1ac:	mov	r1, #32
   1e1b0:	mov	r0, r4
   1e1b4:	add	r2, r3, #1
   1e1b8:	str	r2, [r4, #20]
   1e1bc:	strb	r9, [r3]
   1e1c0:	ldrb	r2, [r4, #25]
   1e1c4:	ldr	lr, [r4, #16]
   1e1c8:	ldr	sl, [r4, #32]
   1e1cc:	ldr	r3, [r4, #20]
   1e1d0:	mul	sl, sl, r2
   1e1d4:	add	ip, r3, sl
   1e1d8:	mov	r2, sl
   1e1dc:	cmp	lr, ip
   1e1e0:	bcs	1e244 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x20c>
   1e1e4:	mov	r1, sl
   1e1e8:	bl	14d14 <test_print@@Base+0x1278>
   1e1ec:	b	1e178 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x140>
   1e1f0:	ldrb	r2, [r4, #25]
   1e1f4:	ldr	r3, [r4, #20]
   1e1f8:	cmp	r2, #0
   1e1fc:	add	r2, r3, #1
   1e200:	bne	1e25c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x224>
   1e204:	mov	r1, #93	; 0x5d
   1e208:	str	r2, [r4, #20]
   1e20c:	strb	r1, [r3]
   1e210:	ldrd	r4, [sp]
   1e214:	ldrd	r6, [sp, #8]
   1e218:	ldrd	r8, [sp, #16]
   1e21c:	ldr	sl, [sp, #24]
   1e220:	add	sp, sp, #28
   1e224:	pop	{pc}		; (ldr pc, [sp], #4)
   1e228:	ldrd	r4, [sp]
   1e22c:	ldrd	r6, [sp, #8]
   1e230:	ldrd	r8, [sp, #16]
   1e234:	ldr	sl, [sp, #24]
   1e238:	ldr	lr, [sp, #28]
   1e23c:	add	sp, sp, #32
   1e240:	b	1bd04 <flatcc_json_printer_uint8_vector_field@@Base>
   1e244:	mov	r0, r3
   1e248:	bl	124bc <memset@plt>
   1e24c:	ldr	r3, [r4, #20]
   1e250:	add	sl, r3, sl
   1e254:	str	sl, [r4, #20]
   1e258:	b	1e178 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x140>
   1e25c:	mov	r1, #10
   1e260:	str	r2, [r4, #20]
   1e264:	strb	r1, [r3]
   1e268:	ldrb	r3, [r4, #25]
   1e26c:	ldr	r2, [r4, #32]
   1e270:	ldr	r1, [r4, #16]
   1e274:	ldr	r0, [r4, #20]
   1e278:	sub	r2, r2, #1
   1e27c:	mul	r5, r2, r3
   1e280:	str	r2, [r4, #32]
   1e284:	add	r3, r0, r5
   1e288:	cmp	r1, r3
   1e28c:	bcs	1e2c4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x28c>
   1e290:	mov	r1, r5
   1e294:	mov	r0, r4
   1e298:	bl	14d14 <test_print@@Base+0x1278>
   1e29c:	ldr	r3, [r4, #20]
   1e2a0:	add	r2, r3, #1
   1e2a4:	b	1e204 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1cc>
   1e2a8:	add	r1, r3, #1
   1e2ac:	mov	r2, #10
   1e2b0:	mov	r0, r4
   1e2b4:	str	r1, [r4, #20]
   1e2b8:	strb	r2, [r3]
   1e2bc:	bl	14dc8 <test_print@@Base+0x132c>
   1e2c0:	b	1e130 <flatcc_json_printer_uint8_enum_vector_field@@Base+0xf8>
   1e2c4:	mov	r2, r5
   1e2c8:	mov	r1, #32
   1e2cc:	bl	124bc <memset@plt>
   1e2d0:	ldr	r3, [r4, #20]
   1e2d4:	add	r3, r3, r5
   1e2d8:	add	r2, r3, #1
   1e2dc:	b	1e204 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1cc>

0001e2e0 <flatcc_json_printer_uint16_enum_vector_field@@Base>:
   1e2e0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1e2e4:	strd	r6, [sp, #8]
   1e2e8:	strd	r8, [sp, #16]
   1e2ec:	str	sl, [sp, #24]
   1e2f0:	str	lr, [sp, #28]
   1e2f4:	ldrb	r8, [r0, #27]
   1e2f8:	ldrd	r6, [sp, #32]
   1e2fc:	cmp	r8, #0
   1e300:	bne	1e4cc <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1ec>
   1e304:	mov	r5, r3
   1e308:	ldr	r3, [r1, #8]
   1e30c:	add	r2, r2, #2
   1e310:	lsl	r2, r2, #1
   1e314:	mov	lr, r1
   1e318:	cmp	r3, r2
   1e31c:	ble	1e4b4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1d4>
   1e320:	ldr	r3, [r1, #4]
   1e324:	ldrh	r2, [r3, r2]
   1e328:	cmp	r2, #0
   1e32c:	beq	1e4b4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1d4>
   1e330:	ldr	r3, [r1]
   1e334:	adds	ip, r3, r2
   1e338:	beq	1e4b4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1d4>
   1e33c:	ldr	r1, [r1, #16]
   1e340:	mov	r4, r0
   1e344:	add	r0, r1, #1
   1e348:	cmp	r1, #0
   1e34c:	str	r0, [lr, #16]
   1e350:	beq	1e368 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x88>
   1e354:	ldr	r1, [r4, #20]
   1e358:	mov	r0, #44	; 0x2c
   1e35c:	add	lr, r1, #1
   1e360:	str	lr, [r4, #20]
   1e364:	strb	r0, [r1]
   1e368:	ldr	r3, [r3, r2]
   1e36c:	mov	r1, r5
   1e370:	mov	r2, r6
   1e374:	mov	r0, r4
   1e378:	add	r6, ip, r3
   1e37c:	ldr	r5, [ip, r3]
   1e380:	bl	16158 <test_print@@Base+0x26bc>
   1e384:	ldr	r2, [r4, #20]
   1e388:	mov	r1, #91	; 0x5b
   1e38c:	ldr	r3, [r4, #32]
   1e390:	cmp	r5, #0
   1e394:	add	r0, r2, #1
   1e398:	add	r3, r3, #1
   1e39c:	str	r0, [r4, #20]
   1e3a0:	str	r3, [r4, #32]
   1e3a4:	strb	r1, [r2]
   1e3a8:	beq	1e494 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1b4>
   1e3ac:	ldrb	r1, [r4, #25]
   1e3b0:	ldr	r3, [r4, #20]
   1e3b4:	cmp	r1, #0
   1e3b8:	bne	1e54c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x26c>
   1e3bc:	ldr	r2, [r4, #16]
   1e3c0:	cmp	r2, r3
   1e3c4:	bhi	1e3d4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0xf4>
   1e3c8:	mov	r0, r4
   1e3cc:	ldr	r3, [r4, #44]	; 0x2c
   1e3d0:	blx	r3
   1e3d4:	ldrh	r1, [r6, #4]
   1e3d8:	mov	r0, r4
   1e3dc:	add	r6, r6, #6
   1e3e0:	blx	r7
   1e3e4:	cmp	r5, #1
   1e3e8:	sub	r5, r5, #2
   1e3ec:	beq	1e494 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1b4>
   1e3f0:	mov	r8, #44	; 0x2c
   1e3f4:	mov	r9, #10
   1e3f8:	b	1e430 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x150>
   1e3fc:	ldr	r3, [r4, #16]
   1e400:	mov	r0, r4
   1e404:	ldr	r2, [r4, #20]
   1e408:	cmp	r2, r3
   1e40c:	bcc	1e418 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x138>
   1e410:	ldr	r3, [r4, #44]	; 0x2c
   1e414:	blx	r3
   1e418:	sub	r5, r5, #1
   1e41c:	ldrh	r1, [r6], #2
   1e420:	mov	r0, r4
   1e424:	blx	r7
   1e428:	cmn	r5, #1
   1e42c:	beq	1e494 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1b4>
   1e430:	ldr	r3, [r4, #20]
   1e434:	add	r2, r3, #1
   1e438:	str	r2, [r4, #20]
   1e43c:	strb	r8, [r3]
   1e440:	ldrb	r1, [r4, #25]
   1e444:	cmp	r1, #0
   1e448:	beq	1e3fc <flatcc_json_printer_uint16_enum_vector_field@@Base+0x11c>
   1e44c:	ldr	r3, [r4, #20]
   1e450:	mov	r1, #32
   1e454:	mov	r0, r4
   1e458:	add	r2, r3, #1
   1e45c:	str	r2, [r4, #20]
   1e460:	strb	r9, [r3]
   1e464:	ldrb	r2, [r4, #25]
   1e468:	ldr	lr, [r4, #16]
   1e46c:	ldr	sl, [r4, #32]
   1e470:	ldr	r3, [r4, #20]
   1e474:	mul	sl, sl, r2
   1e478:	add	ip, r3, sl
   1e47c:	mov	r2, sl
   1e480:	cmp	lr, ip
   1e484:	bcs	1e4e8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x208>
   1e488:	mov	r1, sl
   1e48c:	bl	14d14 <test_print@@Base+0x1278>
   1e490:	b	1e418 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x138>
   1e494:	ldrb	r2, [r4, #25]
   1e498:	ldr	r3, [r4, #20]
   1e49c:	cmp	r2, #0
   1e4a0:	add	r2, r3, #1
   1e4a4:	bne	1e500 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x220>
   1e4a8:	mov	r1, #93	; 0x5d
   1e4ac:	str	r2, [r4, #20]
   1e4b0:	strb	r1, [r3]
   1e4b4:	ldrd	r4, [sp]
   1e4b8:	ldrd	r6, [sp, #8]
   1e4bc:	ldrd	r8, [sp, #16]
   1e4c0:	ldr	sl, [sp, #24]
   1e4c4:	add	sp, sp, #28
   1e4c8:	pop	{pc}		; (ldr pc, [sp], #4)
   1e4cc:	ldrd	r4, [sp]
   1e4d0:	ldrd	r6, [sp, #8]
   1e4d4:	ldrd	r8, [sp, #16]
   1e4d8:	ldr	sl, [sp, #24]
   1e4dc:	ldr	lr, [sp, #28]
   1e4e0:	add	sp, sp, #32
   1e4e4:	b	1bfd8 <flatcc_json_printer_uint16_vector_field@@Base>
   1e4e8:	mov	r0, r3
   1e4ec:	bl	124bc <memset@plt>
   1e4f0:	ldr	r3, [r4, #20]
   1e4f4:	add	sl, r3, sl
   1e4f8:	str	sl, [r4, #20]
   1e4fc:	b	1e418 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x138>
   1e500:	mov	r1, #10
   1e504:	str	r2, [r4, #20]
   1e508:	strb	r1, [r3]
   1e50c:	ldrb	r3, [r4, #25]
   1e510:	ldr	r2, [r4, #32]
   1e514:	ldr	r1, [r4, #16]
   1e518:	ldr	r0, [r4, #20]
   1e51c:	sub	r2, r2, #1
   1e520:	mul	r5, r2, r3
   1e524:	str	r2, [r4, #32]
   1e528:	add	r3, r0, r5
   1e52c:	cmp	r1, r3
   1e530:	bcs	1e568 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x288>
   1e534:	mov	r1, r5
   1e538:	mov	r0, r4
   1e53c:	bl	14d14 <test_print@@Base+0x1278>
   1e540:	ldr	r3, [r4, #20]
   1e544:	add	r2, r3, #1
   1e548:	b	1e4a8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1c8>
   1e54c:	add	r1, r3, #1
   1e550:	mov	r2, #10
   1e554:	mov	r0, r4
   1e558:	str	r1, [r4, #20]
   1e55c:	strb	r2, [r3]
   1e560:	bl	14dc8 <test_print@@Base+0x132c>
   1e564:	b	1e3d4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0xf4>
   1e568:	mov	r2, r5
   1e56c:	mov	r1, #32
   1e570:	bl	124bc <memset@plt>
   1e574:	ldr	r3, [r4, #20]
   1e578:	add	r3, r3, r5
   1e57c:	add	r2, r3, #1
   1e580:	b	1e4a8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1c8>

0001e584 <flatcc_json_printer_uint32_enum_vector_field@@Base>:
   1e584:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1e588:	strd	r6, [sp, #8]
   1e58c:	strd	r8, [sp, #16]
   1e590:	str	sl, [sp, #24]
   1e594:	str	lr, [sp, #28]
   1e598:	ldrb	r8, [r0, #27]
   1e59c:	ldrd	r6, [sp, #32]
   1e5a0:	cmp	r8, #0
   1e5a4:	bne	1e770 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1ec>
   1e5a8:	mov	r5, r3
   1e5ac:	ldr	r3, [r1, #8]
   1e5b0:	add	r2, r2, #2
   1e5b4:	lsl	r2, r2, #1
   1e5b8:	mov	lr, r1
   1e5bc:	cmp	r3, r2
   1e5c0:	ble	1e758 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1d4>
   1e5c4:	ldr	r3, [r1, #4]
   1e5c8:	ldrh	r2, [r3, r2]
   1e5cc:	cmp	r2, #0
   1e5d0:	beq	1e758 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1d4>
   1e5d4:	ldr	r3, [r1]
   1e5d8:	adds	ip, r3, r2
   1e5dc:	beq	1e758 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1d4>
   1e5e0:	ldr	r1, [r1, #16]
   1e5e4:	mov	r4, r0
   1e5e8:	add	r0, r1, #1
   1e5ec:	cmp	r1, #0
   1e5f0:	str	r0, [lr, #16]
   1e5f4:	beq	1e60c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x88>
   1e5f8:	ldr	r1, [r4, #20]
   1e5fc:	mov	r0, #44	; 0x2c
   1e600:	add	lr, r1, #1
   1e604:	str	lr, [r4, #20]
   1e608:	strb	r0, [r1]
   1e60c:	ldr	r3, [r3, r2]
   1e610:	mov	r1, r5
   1e614:	mov	r2, r6
   1e618:	mov	r0, r4
   1e61c:	add	r6, ip, r3
   1e620:	ldr	r5, [ip, r3]
   1e624:	bl	16158 <test_print@@Base+0x26bc>
   1e628:	ldr	r2, [r4, #20]
   1e62c:	mov	r1, #91	; 0x5b
   1e630:	ldr	r3, [r4, #32]
   1e634:	cmp	r5, #0
   1e638:	add	r0, r2, #1
   1e63c:	add	r3, r3, #1
   1e640:	str	r0, [r4, #20]
   1e644:	str	r3, [r4, #32]
   1e648:	strb	r1, [r2]
   1e64c:	beq	1e738 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1b4>
   1e650:	ldrb	r1, [r4, #25]
   1e654:	ldr	r3, [r4, #20]
   1e658:	cmp	r1, #0
   1e65c:	bne	1e7f0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x26c>
   1e660:	ldr	r2, [r4, #16]
   1e664:	cmp	r2, r3
   1e668:	bhi	1e678 <flatcc_json_printer_uint32_enum_vector_field@@Base+0xf4>
   1e66c:	mov	r0, r4
   1e670:	ldr	r3, [r4, #44]	; 0x2c
   1e674:	blx	r3
   1e678:	mov	r0, r4
   1e67c:	ldr	r1, [r6, #4]
   1e680:	add	r6, r6, #8
   1e684:	blx	r7
   1e688:	cmp	r5, #1
   1e68c:	sub	r5, r5, #2
   1e690:	beq	1e738 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1b4>
   1e694:	mov	r8, #44	; 0x2c
   1e698:	mov	r9, #10
   1e69c:	b	1e6d4 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x150>
   1e6a0:	ldr	r3, [r4, #16]
   1e6a4:	mov	r0, r4
   1e6a8:	ldr	r2, [r4, #20]
   1e6ac:	cmp	r2, r3
   1e6b0:	bcc	1e6bc <flatcc_json_printer_uint32_enum_vector_field@@Base+0x138>
   1e6b4:	ldr	r3, [r4, #44]	; 0x2c
   1e6b8:	blx	r3
   1e6bc:	sub	r5, r5, #1
   1e6c0:	mov	r0, r4
   1e6c4:	ldr	r1, [r6], #4
   1e6c8:	blx	r7
   1e6cc:	cmn	r5, #1
   1e6d0:	beq	1e738 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1b4>
   1e6d4:	ldr	r3, [r4, #20]
   1e6d8:	add	r2, r3, #1
   1e6dc:	str	r2, [r4, #20]
   1e6e0:	strb	r8, [r3]
   1e6e4:	ldrb	r1, [r4, #25]
   1e6e8:	cmp	r1, #0
   1e6ec:	beq	1e6a0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x11c>
   1e6f0:	ldr	r3, [r4, #20]
   1e6f4:	mov	r1, #32
   1e6f8:	mov	r0, r4
   1e6fc:	add	r2, r3, #1
   1e700:	str	r2, [r4, #20]
   1e704:	strb	r9, [r3]
   1e708:	ldrb	r2, [r4, #25]
   1e70c:	ldr	lr, [r4, #16]
   1e710:	ldr	sl, [r4, #32]
   1e714:	ldr	r3, [r4, #20]
   1e718:	mul	sl, sl, r2
   1e71c:	add	ip, r3, sl
   1e720:	mov	r2, sl
   1e724:	cmp	lr, ip
   1e728:	bcs	1e78c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x208>
   1e72c:	mov	r1, sl
   1e730:	bl	14d14 <test_print@@Base+0x1278>
   1e734:	b	1e6bc <flatcc_json_printer_uint32_enum_vector_field@@Base+0x138>
   1e738:	ldrb	r2, [r4, #25]
   1e73c:	ldr	r3, [r4, #20]
   1e740:	cmp	r2, #0
   1e744:	add	r2, r3, #1
   1e748:	bne	1e7a4 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x220>
   1e74c:	mov	r1, #93	; 0x5d
   1e750:	str	r2, [r4, #20]
   1e754:	strb	r1, [r3]
   1e758:	ldrd	r4, [sp]
   1e75c:	ldrd	r6, [sp, #8]
   1e760:	ldrd	r8, [sp, #16]
   1e764:	ldr	sl, [sp, #24]
   1e768:	add	sp, sp, #28
   1e76c:	pop	{pc}		; (ldr pc, [sp], #4)
   1e770:	ldrd	r4, [sp]
   1e774:	ldrd	r6, [sp, #8]
   1e778:	ldrd	r8, [sp, #16]
   1e77c:	ldr	sl, [sp, #24]
   1e780:	ldr	lr, [sp, #28]
   1e784:	add	sp, sp, #32
   1e788:	b	1c3d0 <flatcc_json_printer_uint32_vector_field@@Base>
   1e78c:	mov	r0, r3
   1e790:	bl	124bc <memset@plt>
   1e794:	ldr	r3, [r4, #20]
   1e798:	add	sl, r3, sl
   1e79c:	str	sl, [r4, #20]
   1e7a0:	b	1e6bc <flatcc_json_printer_uint32_enum_vector_field@@Base+0x138>
   1e7a4:	mov	r1, #10
   1e7a8:	str	r2, [r4, #20]
   1e7ac:	strb	r1, [r3]
   1e7b0:	ldrb	r3, [r4, #25]
   1e7b4:	ldr	r2, [r4, #32]
   1e7b8:	ldr	r1, [r4, #16]
   1e7bc:	ldr	r0, [r4, #20]
   1e7c0:	sub	r2, r2, #1
   1e7c4:	mul	r5, r2, r3
   1e7c8:	str	r2, [r4, #32]
   1e7cc:	add	r3, r0, r5
   1e7d0:	cmp	r1, r3
   1e7d4:	bcs	1e80c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x288>
   1e7d8:	mov	r1, r5
   1e7dc:	mov	r0, r4
   1e7e0:	bl	14d14 <test_print@@Base+0x1278>
   1e7e4:	ldr	r3, [r4, #20]
   1e7e8:	add	r2, r3, #1
   1e7ec:	b	1e74c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1c8>
   1e7f0:	add	r1, r3, #1
   1e7f4:	mov	r2, #10
   1e7f8:	mov	r0, r4
   1e7fc:	str	r1, [r4, #20]
   1e800:	strb	r2, [r3]
   1e804:	bl	14dc8 <test_print@@Base+0x132c>
   1e808:	b	1e678 <flatcc_json_printer_uint32_enum_vector_field@@Base+0xf4>
   1e80c:	mov	r2, r5
   1e810:	mov	r1, #32
   1e814:	bl	124bc <memset@plt>
   1e818:	ldr	r3, [r4, #20]
   1e81c:	add	r3, r3, r5
   1e820:	add	r2, r3, #1
   1e824:	b	1e74c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1c8>

0001e828 <flatcc_json_printer_uint64_enum_vector_field@@Base>:
   1e828:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1e82c:	strd	r6, [sp, #8]
   1e830:	strd	r8, [sp, #16]
   1e834:	str	sl, [sp, #24]
   1e838:	str	lr, [sp, #28]
   1e83c:	ldrb	r8, [r0, #27]
   1e840:	ldrd	r6, [sp, #32]
   1e844:	cmp	r8, #0
   1e848:	bne	1ea14 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1ec>
   1e84c:	mov	r5, r3
   1e850:	ldr	r3, [r1, #8]
   1e854:	add	r2, r2, #2
   1e858:	lsl	r2, r2, #1
   1e85c:	mov	lr, r1
   1e860:	cmp	r3, r2
   1e864:	ble	1e9fc <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1d4>
   1e868:	ldr	r3, [r1, #4]
   1e86c:	ldrh	r2, [r3, r2]
   1e870:	cmp	r2, #0
   1e874:	beq	1e9fc <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1d4>
   1e878:	ldr	r3, [r1]
   1e87c:	adds	ip, r3, r2
   1e880:	beq	1e9fc <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1d4>
   1e884:	ldr	r1, [r1, #16]
   1e888:	mov	r4, r0
   1e88c:	add	r0, r1, #1
   1e890:	cmp	r1, #0
   1e894:	str	r0, [lr, #16]
   1e898:	beq	1e8b0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x88>
   1e89c:	ldr	r1, [r4, #20]
   1e8a0:	mov	r0, #44	; 0x2c
   1e8a4:	add	lr, r1, #1
   1e8a8:	str	lr, [r4, #20]
   1e8ac:	strb	r0, [r1]
   1e8b0:	ldr	r3, [r3, r2]
   1e8b4:	mov	r1, r5
   1e8b8:	mov	r2, r6
   1e8bc:	mov	r0, r4
   1e8c0:	add	r6, ip, r3
   1e8c4:	ldr	r5, [ip, r3]
   1e8c8:	bl	16158 <test_print@@Base+0x26bc>
   1e8cc:	ldr	r2, [r4, #20]
   1e8d0:	mov	r1, #91	; 0x5b
   1e8d4:	ldr	r3, [r4, #32]
   1e8d8:	cmp	r5, #0
   1e8dc:	add	r0, r2, #1
   1e8e0:	add	r3, r3, #1
   1e8e4:	str	r0, [r4, #20]
   1e8e8:	str	r3, [r4, #32]
   1e8ec:	strb	r1, [r2]
   1e8f0:	beq	1e9dc <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1b4>
   1e8f4:	ldrb	r1, [r4, #25]
   1e8f8:	ldr	r3, [r4, #20]
   1e8fc:	cmp	r1, #0
   1e900:	bne	1ea94 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x26c>
   1e904:	ldr	r2, [r4, #16]
   1e908:	cmp	r2, r3
   1e90c:	bhi	1e91c <flatcc_json_printer_uint64_enum_vector_field@@Base+0xf4>
   1e910:	mov	r0, r4
   1e914:	ldr	r3, [r4, #44]	; 0x2c
   1e918:	blx	r3
   1e91c:	mov	r0, r4
   1e920:	ldrd	r2, [r6, #4]
   1e924:	add	r6, r6, #12
   1e928:	blx	r7
   1e92c:	cmp	r5, #1
   1e930:	sub	r5, r5, #2
   1e934:	beq	1e9dc <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1b4>
   1e938:	mov	r8, #44	; 0x2c
   1e93c:	mov	r9, #10
   1e940:	b	1e978 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x150>
   1e944:	ldr	r3, [r4, #16]
   1e948:	mov	r0, r4
   1e94c:	ldr	r2, [r4, #20]
   1e950:	cmp	r2, r3
   1e954:	bcc	1e960 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x138>
   1e958:	ldr	r3, [r4, #44]	; 0x2c
   1e95c:	blx	r3
   1e960:	sub	r5, r5, #1
   1e964:	mov	r0, r4
   1e968:	ldrd	r2, [r6], #8
   1e96c:	blx	r7
   1e970:	cmn	r5, #1
   1e974:	beq	1e9dc <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1b4>
   1e978:	ldr	r3, [r4, #20]
   1e97c:	add	r2, r3, #1
   1e980:	str	r2, [r4, #20]
   1e984:	strb	r8, [r3]
   1e988:	ldrb	r1, [r4, #25]
   1e98c:	cmp	r1, #0
   1e990:	beq	1e944 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x11c>
   1e994:	ldr	r3, [r4, #20]
   1e998:	mov	r1, #32
   1e99c:	mov	r0, r4
   1e9a0:	add	r2, r3, #1
   1e9a4:	str	r2, [r4, #20]
   1e9a8:	strb	r9, [r3]
   1e9ac:	ldrb	r2, [r4, #25]
   1e9b0:	ldr	lr, [r4, #16]
   1e9b4:	ldr	sl, [r4, #32]
   1e9b8:	ldr	r3, [r4, #20]
   1e9bc:	mul	sl, sl, r2
   1e9c0:	add	ip, r3, sl
   1e9c4:	mov	r2, sl
   1e9c8:	cmp	lr, ip
   1e9cc:	bcs	1ea30 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x208>
   1e9d0:	mov	r1, sl
   1e9d4:	bl	14d14 <test_print@@Base+0x1278>
   1e9d8:	b	1e960 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x138>
   1e9dc:	ldrb	r2, [r4, #25]
   1e9e0:	ldr	r3, [r4, #20]
   1e9e4:	cmp	r2, #0
   1e9e8:	add	r2, r3, #1
   1e9ec:	bne	1ea48 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x220>
   1e9f0:	mov	r1, #93	; 0x5d
   1e9f4:	str	r2, [r4, #20]
   1e9f8:	strb	r1, [r3]
   1e9fc:	ldrd	r4, [sp]
   1ea00:	ldrd	r6, [sp, #8]
   1ea04:	ldrd	r8, [sp, #16]
   1ea08:	ldr	sl, [sp, #24]
   1ea0c:	add	sp, sp, #28
   1ea10:	pop	{pc}		; (ldr pc, [sp], #4)
   1ea14:	ldrd	r4, [sp]
   1ea18:	ldrd	r6, [sp, #8]
   1ea1c:	ldrd	r8, [sp, #16]
   1ea20:	ldr	sl, [sp, #24]
   1ea24:	ldr	lr, [sp, #28]
   1ea28:	add	sp, sp, #32
   1ea2c:	b	1c6a0 <flatcc_json_printer_uint64_vector_field@@Base>
   1ea30:	mov	r0, r3
   1ea34:	bl	124bc <memset@plt>
   1ea38:	ldr	r3, [r4, #20]
   1ea3c:	add	sl, r3, sl
   1ea40:	str	sl, [r4, #20]
   1ea44:	b	1e960 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x138>
   1ea48:	mov	r1, #10
   1ea4c:	str	r2, [r4, #20]
   1ea50:	strb	r1, [r3]
   1ea54:	ldrb	r3, [r4, #25]
   1ea58:	ldr	r2, [r4, #32]
   1ea5c:	ldr	r1, [r4, #16]
   1ea60:	ldr	r0, [r4, #20]
   1ea64:	sub	r2, r2, #1
   1ea68:	mul	r5, r2, r3
   1ea6c:	str	r2, [r4, #32]
   1ea70:	add	r3, r0, r5
   1ea74:	cmp	r1, r3
   1ea78:	bcs	1eab0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x288>
   1ea7c:	mov	r1, r5
   1ea80:	mov	r0, r4
   1ea84:	bl	14d14 <test_print@@Base+0x1278>
   1ea88:	ldr	r3, [r4, #20]
   1ea8c:	add	r2, r3, #1
   1ea90:	b	1e9f0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1c8>
   1ea94:	add	r1, r3, #1
   1ea98:	mov	r2, #10
   1ea9c:	mov	r0, r4
   1eaa0:	str	r1, [r4, #20]
   1eaa4:	strb	r2, [r3]
   1eaa8:	bl	14dc8 <test_print@@Base+0x132c>
   1eaac:	b	1e91c <flatcc_json_printer_uint64_enum_vector_field@@Base+0xf4>
   1eab0:	mov	r2, r5
   1eab4:	mov	r1, #32
   1eab8:	bl	124bc <memset@plt>
   1eabc:	ldr	r3, [r4, #20]
   1eac0:	add	r3, r3, r5
   1eac4:	add	r2, r3, #1
   1eac8:	b	1e9f0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1c8>

0001eacc <flatcc_json_printer_int8_enum_vector_field@@Base>:
   1eacc:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1ead0:	strd	r6, [sp, #8]
   1ead4:	strd	r8, [sp, #16]
   1ead8:	str	sl, [sp, #24]
   1eadc:	str	lr, [sp, #28]
   1eae0:	ldrb	r8, [r0, #27]
   1eae4:	ldr	r7, [sp, #32]
   1eae8:	ldr	r6, [sp, #36]	; 0x24
   1eaec:	cmp	r8, #0
   1eaf0:	bne	1ecbc <flatcc_json_printer_int8_enum_vector_field@@Base+0x1f0>
   1eaf4:	mov	r5, r3
   1eaf8:	ldr	r3, [r1, #8]
   1eafc:	add	r2, r2, #2
   1eb00:	lsl	r2, r2, #1
   1eb04:	mov	lr, r1
   1eb08:	cmp	r3, r2
   1eb0c:	ble	1eca4 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1d8>
   1eb10:	ldr	r3, [r1, #4]
   1eb14:	ldrh	r2, [r3, r2]
   1eb18:	cmp	r2, #0
   1eb1c:	beq	1eca4 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1d8>
   1eb20:	ldr	r3, [r1]
   1eb24:	adds	ip, r3, r2
   1eb28:	beq	1eca4 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1d8>
   1eb2c:	ldr	r1, [r1, #16]
   1eb30:	mov	r4, r0
   1eb34:	add	r0, r1, #1
   1eb38:	cmp	r1, #0
   1eb3c:	str	r0, [lr, #16]
   1eb40:	beq	1eb58 <flatcc_json_printer_int8_enum_vector_field@@Base+0x8c>
   1eb44:	ldr	r1, [r4, #20]
   1eb48:	mov	r0, #44	; 0x2c
   1eb4c:	add	lr, r1, #1
   1eb50:	str	lr, [r4, #20]
   1eb54:	strb	r0, [r1]
   1eb58:	ldr	r3, [r3, r2]
   1eb5c:	mov	r1, r5
   1eb60:	mov	r2, r7
   1eb64:	mov	r0, r4
   1eb68:	add	r7, ip, r3
   1eb6c:	ldr	r8, [ip, r3]
   1eb70:	bl	16158 <test_print@@Base+0x26bc>
   1eb74:	ldr	r2, [r4, #20]
   1eb78:	mov	r1, #91	; 0x5b
   1eb7c:	ldr	r3, [r4, #32]
   1eb80:	cmp	r8, #0
   1eb84:	add	r0, r2, #1
   1eb88:	add	r3, r3, #1
   1eb8c:	str	r0, [r4, #20]
   1eb90:	str	r3, [r4, #32]
   1eb94:	strb	r1, [r2]
   1eb98:	beq	1ec84 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1b8>
   1eb9c:	ldrb	r1, [r4, #25]
   1eba0:	ldr	r3, [r4, #20]
   1eba4:	cmp	r1, #0
   1eba8:	bne	1ed3c <flatcc_json_printer_int8_enum_vector_field@@Base+0x270>
   1ebac:	ldr	r2, [r4, #16]
   1ebb0:	cmp	r2, r3
   1ebb4:	bhi	1ebc4 <flatcc_json_printer_int8_enum_vector_field@@Base+0xf8>
   1ebb8:	mov	r0, r4
   1ebbc:	ldr	r3, [r4, #44]	; 0x2c
   1ebc0:	blx	r3
   1ebc4:	ldrsb	r1, [r7, #4]
   1ebc8:	mov	r0, r4
   1ebcc:	add	r5, r7, #5
   1ebd0:	blx	r6
   1ebd4:	cmp	r8, #1
   1ebd8:	beq	1ec84 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1b8>
   1ebdc:	add	r3, r8, #4
   1ebe0:	mov	r9, #10
   1ebe4:	mov	r8, #44	; 0x2c
   1ebe8:	add	r7, r7, r3
   1ebec:	b	1ec20 <flatcc_json_printer_int8_enum_vector_field@@Base+0x154>
   1ebf0:	ldr	r3, [r4, #16]
   1ebf4:	mov	r0, r4
   1ebf8:	ldr	r2, [r4, #20]
   1ebfc:	cmp	r2, r3
   1ec00:	bcc	1ec0c <flatcc_json_printer_int8_enum_vector_field@@Base+0x140>
   1ec04:	ldr	r3, [r4, #44]	; 0x2c
   1ec08:	blx	r3
   1ec0c:	ldrsb	r1, [r5], #1
   1ec10:	mov	r0, r4
   1ec14:	blx	r6
   1ec18:	cmp	r5, r7
   1ec1c:	beq	1ec84 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1b8>
   1ec20:	ldr	r3, [r4, #20]
   1ec24:	add	r2, r3, #1
   1ec28:	str	r2, [r4, #20]
   1ec2c:	strb	r8, [r3]
   1ec30:	ldrb	r1, [r4, #25]
   1ec34:	cmp	r1, #0
   1ec38:	beq	1ebf0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x124>
   1ec3c:	ldr	r3, [r4, #20]
   1ec40:	mov	r1, #32
   1ec44:	mov	r0, r4
   1ec48:	add	r2, r3, #1
   1ec4c:	str	r2, [r4, #20]
   1ec50:	strb	r9, [r3]
   1ec54:	ldrb	r2, [r4, #25]
   1ec58:	ldr	lr, [r4, #16]
   1ec5c:	ldr	sl, [r4, #32]
   1ec60:	ldr	r3, [r4, #20]
   1ec64:	mul	sl, sl, r2
   1ec68:	add	ip, r3, sl
   1ec6c:	mov	r2, sl
   1ec70:	cmp	lr, ip
   1ec74:	bcs	1ecd8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x20c>
   1ec78:	mov	r1, sl
   1ec7c:	bl	14d14 <test_print@@Base+0x1278>
   1ec80:	b	1ec0c <flatcc_json_printer_int8_enum_vector_field@@Base+0x140>
   1ec84:	ldrb	r2, [r4, #25]
   1ec88:	ldr	r3, [r4, #20]
   1ec8c:	cmp	r2, #0
   1ec90:	add	r2, r3, #1
   1ec94:	bne	1ecf0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x224>
   1ec98:	mov	r1, #93	; 0x5d
   1ec9c:	str	r2, [r4, #20]
   1eca0:	strb	r1, [r3]
   1eca4:	ldrd	r4, [sp]
   1eca8:	ldrd	r6, [sp, #8]
   1ecac:	ldrd	r8, [sp, #16]
   1ecb0:	ldr	sl, [sp, #24]
   1ecb4:	add	sp, sp, #28
   1ecb8:	pop	{pc}		; (ldr pc, [sp], #4)
   1ecbc:	ldrd	r4, [sp]
   1ecc0:	ldrd	r6, [sp, #8]
   1ecc4:	ldrd	r8, [sp, #16]
   1ecc8:	ldr	sl, [sp, #24]
   1eccc:	ldr	lr, [sp, #28]
   1ecd0:	add	sp, sp, #32
   1ecd4:	b	1c968 <flatcc_json_printer_int8_vector_field@@Base>
   1ecd8:	mov	r0, r3
   1ecdc:	bl	124bc <memset@plt>
   1ece0:	ldr	r3, [r4, #20]
   1ece4:	add	sl, r3, sl
   1ece8:	str	sl, [r4, #20]
   1ecec:	b	1ec0c <flatcc_json_printer_int8_enum_vector_field@@Base+0x140>
   1ecf0:	mov	r1, #10
   1ecf4:	str	r2, [r4, #20]
   1ecf8:	strb	r1, [r3]
   1ecfc:	ldrb	r3, [r4, #25]
   1ed00:	ldr	r2, [r4, #32]
   1ed04:	ldr	r1, [r4, #16]
   1ed08:	ldr	r0, [r4, #20]
   1ed0c:	sub	r2, r2, #1
   1ed10:	mul	r5, r2, r3
   1ed14:	str	r2, [r4, #32]
   1ed18:	add	r3, r0, r5
   1ed1c:	cmp	r1, r3
   1ed20:	bcs	1ed58 <flatcc_json_printer_int8_enum_vector_field@@Base+0x28c>
   1ed24:	mov	r1, r5
   1ed28:	mov	r0, r4
   1ed2c:	bl	14d14 <test_print@@Base+0x1278>
   1ed30:	ldr	r3, [r4, #20]
   1ed34:	add	r2, r3, #1
   1ed38:	b	1ec98 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1cc>
   1ed3c:	add	r1, r3, #1
   1ed40:	mov	r2, #10
   1ed44:	mov	r0, r4
   1ed48:	str	r1, [r4, #20]
   1ed4c:	strb	r2, [r3]
   1ed50:	bl	14dc8 <test_print@@Base+0x132c>
   1ed54:	b	1ebc4 <flatcc_json_printer_int8_enum_vector_field@@Base+0xf8>
   1ed58:	mov	r2, r5
   1ed5c:	mov	r1, #32
   1ed60:	bl	124bc <memset@plt>
   1ed64:	ldr	r3, [r4, #20]
   1ed68:	add	r3, r3, r5
   1ed6c:	add	r2, r3, #1
   1ed70:	b	1ec98 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1cc>

0001ed74 <flatcc_json_printer_int16_enum_vector_field@@Base>:
   1ed74:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1ed78:	strd	r6, [sp, #8]
   1ed7c:	strd	r8, [sp, #16]
   1ed80:	str	sl, [sp, #24]
   1ed84:	str	lr, [sp, #28]
   1ed88:	ldrb	r8, [r0, #27]
   1ed8c:	ldrd	r6, [sp, #32]
   1ed90:	cmp	r8, #0
   1ed94:	bne	1ef60 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1ec>
   1ed98:	mov	r5, r3
   1ed9c:	ldr	r3, [r1, #8]
   1eda0:	add	r2, r2, #2
   1eda4:	lsl	r2, r2, #1
   1eda8:	mov	lr, r1
   1edac:	cmp	r3, r2
   1edb0:	ble	1ef48 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1d4>
   1edb4:	ldr	r3, [r1, #4]
   1edb8:	ldrh	r2, [r3, r2]
   1edbc:	cmp	r2, #0
   1edc0:	beq	1ef48 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1d4>
   1edc4:	ldr	r3, [r1]
   1edc8:	adds	ip, r3, r2
   1edcc:	beq	1ef48 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1d4>
   1edd0:	ldr	r1, [r1, #16]
   1edd4:	mov	r4, r0
   1edd8:	add	r0, r1, #1
   1eddc:	cmp	r1, #0
   1ede0:	str	r0, [lr, #16]
   1ede4:	beq	1edfc <flatcc_json_printer_int16_enum_vector_field@@Base+0x88>
   1ede8:	ldr	r1, [r4, #20]
   1edec:	mov	r0, #44	; 0x2c
   1edf0:	add	lr, r1, #1
   1edf4:	str	lr, [r4, #20]
   1edf8:	strb	r0, [r1]
   1edfc:	ldr	r3, [r3, r2]
   1ee00:	mov	r1, r5
   1ee04:	mov	r2, r6
   1ee08:	mov	r0, r4
   1ee0c:	add	r6, ip, r3
   1ee10:	ldr	r5, [ip, r3]
   1ee14:	bl	16158 <test_print@@Base+0x26bc>
   1ee18:	ldr	r2, [r4, #20]
   1ee1c:	mov	r1, #91	; 0x5b
   1ee20:	ldr	r3, [r4, #32]
   1ee24:	cmp	r5, #0
   1ee28:	add	r0, r2, #1
   1ee2c:	add	r3, r3, #1
   1ee30:	str	r0, [r4, #20]
   1ee34:	str	r3, [r4, #32]
   1ee38:	strb	r1, [r2]
   1ee3c:	beq	1ef28 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1b4>
   1ee40:	ldrb	r1, [r4, #25]
   1ee44:	ldr	r3, [r4, #20]
   1ee48:	cmp	r1, #0
   1ee4c:	bne	1efe0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x26c>
   1ee50:	ldr	r2, [r4, #16]
   1ee54:	cmp	r2, r3
   1ee58:	bhi	1ee68 <flatcc_json_printer_int16_enum_vector_field@@Base+0xf4>
   1ee5c:	mov	r0, r4
   1ee60:	ldr	r3, [r4, #44]	; 0x2c
   1ee64:	blx	r3
   1ee68:	ldrsh	r1, [r6, #4]
   1ee6c:	mov	r0, r4
   1ee70:	add	r6, r6, #6
   1ee74:	blx	r7
   1ee78:	cmp	r5, #1
   1ee7c:	sub	r5, r5, #2
   1ee80:	beq	1ef28 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1b4>
   1ee84:	mov	r8, #44	; 0x2c
   1ee88:	mov	r9, #10
   1ee8c:	b	1eec4 <flatcc_json_printer_int16_enum_vector_field@@Base+0x150>
   1ee90:	ldr	r3, [r4, #16]
   1ee94:	mov	r0, r4
   1ee98:	ldr	r2, [r4, #20]
   1ee9c:	cmp	r2, r3
   1eea0:	bcc	1eeac <flatcc_json_printer_int16_enum_vector_field@@Base+0x138>
   1eea4:	ldr	r3, [r4, #44]	; 0x2c
   1eea8:	blx	r3
   1eeac:	sub	r5, r5, #1
   1eeb0:	ldrsh	r1, [r6], #2
   1eeb4:	mov	r0, r4
   1eeb8:	blx	r7
   1eebc:	cmn	r5, #1
   1eec0:	beq	1ef28 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1b4>
   1eec4:	ldr	r3, [r4, #20]
   1eec8:	add	r2, r3, #1
   1eecc:	str	r2, [r4, #20]
   1eed0:	strb	r8, [r3]
   1eed4:	ldrb	r1, [r4, #25]
   1eed8:	cmp	r1, #0
   1eedc:	beq	1ee90 <flatcc_json_printer_int16_enum_vector_field@@Base+0x11c>
   1eee0:	ldr	r3, [r4, #20]
   1eee4:	mov	r1, #32
   1eee8:	mov	r0, r4
   1eeec:	add	r2, r3, #1
   1eef0:	str	r2, [r4, #20]
   1eef4:	strb	r9, [r3]
   1eef8:	ldrb	r2, [r4, #25]
   1eefc:	ldr	lr, [r4, #16]
   1ef00:	ldr	sl, [r4, #32]
   1ef04:	ldr	r3, [r4, #20]
   1ef08:	mul	sl, sl, r2
   1ef0c:	add	ip, r3, sl
   1ef10:	mov	r2, sl
   1ef14:	cmp	lr, ip
   1ef18:	bcs	1ef7c <flatcc_json_printer_int16_enum_vector_field@@Base+0x208>
   1ef1c:	mov	r1, sl
   1ef20:	bl	14d14 <test_print@@Base+0x1278>
   1ef24:	b	1eeac <flatcc_json_printer_int16_enum_vector_field@@Base+0x138>
   1ef28:	ldrb	r2, [r4, #25]
   1ef2c:	ldr	r3, [r4, #20]
   1ef30:	cmp	r2, #0
   1ef34:	add	r2, r3, #1
   1ef38:	bne	1ef94 <flatcc_json_printer_int16_enum_vector_field@@Base+0x220>
   1ef3c:	mov	r1, #93	; 0x5d
   1ef40:	str	r2, [r4, #20]
   1ef44:	strb	r1, [r3]
   1ef48:	ldrd	r4, [sp]
   1ef4c:	ldrd	r6, [sp, #8]
   1ef50:	ldrd	r8, [sp, #16]
   1ef54:	ldr	sl, [sp, #24]
   1ef58:	add	sp, sp, #28
   1ef5c:	pop	{pc}		; (ldr pc, [sp], #4)
   1ef60:	ldrd	r4, [sp]
   1ef64:	ldrd	r6, [sp, #8]
   1ef68:	ldrd	r8, [sp, #16]
   1ef6c:	ldr	sl, [sp, #24]
   1ef70:	ldr	lr, [sp, #28]
   1ef74:	add	sp, sp, #32
   1ef78:	b	1cc4c <flatcc_json_printer_int16_vector_field@@Base>
   1ef7c:	mov	r0, r3
   1ef80:	bl	124bc <memset@plt>
   1ef84:	ldr	r3, [r4, #20]
   1ef88:	add	sl, r3, sl
   1ef8c:	str	sl, [r4, #20]
   1ef90:	b	1eeac <flatcc_json_printer_int16_enum_vector_field@@Base+0x138>
   1ef94:	mov	r1, #10
   1ef98:	str	r2, [r4, #20]
   1ef9c:	strb	r1, [r3]
   1efa0:	ldrb	r3, [r4, #25]
   1efa4:	ldr	r2, [r4, #32]
   1efa8:	ldr	r1, [r4, #16]
   1efac:	ldr	r0, [r4, #20]
   1efb0:	sub	r2, r2, #1
   1efb4:	mul	r5, r2, r3
   1efb8:	str	r2, [r4, #32]
   1efbc:	add	r3, r0, r5
   1efc0:	cmp	r1, r3
   1efc4:	bcs	1effc <flatcc_json_printer_int16_enum_vector_field@@Base+0x288>
   1efc8:	mov	r1, r5
   1efcc:	mov	r0, r4
   1efd0:	bl	14d14 <test_print@@Base+0x1278>
   1efd4:	ldr	r3, [r4, #20]
   1efd8:	add	r2, r3, #1
   1efdc:	b	1ef3c <flatcc_json_printer_int16_enum_vector_field@@Base+0x1c8>
   1efe0:	add	r1, r3, #1
   1efe4:	mov	r2, #10
   1efe8:	mov	r0, r4
   1efec:	str	r1, [r4, #20]
   1eff0:	strb	r2, [r3]
   1eff4:	bl	14dc8 <test_print@@Base+0x132c>
   1eff8:	b	1ee68 <flatcc_json_printer_int16_enum_vector_field@@Base+0xf4>
   1effc:	mov	r2, r5
   1f000:	mov	r1, #32
   1f004:	bl	124bc <memset@plt>
   1f008:	ldr	r3, [r4, #20]
   1f00c:	add	r3, r3, r5
   1f010:	add	r2, r3, #1
   1f014:	b	1ef3c <flatcc_json_printer_int16_enum_vector_field@@Base+0x1c8>

0001f018 <flatcc_json_printer_int32_enum_vector_field@@Base>:
   1f018:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1f01c:	strd	r6, [sp, #8]
   1f020:	strd	r8, [sp, #16]
   1f024:	str	sl, [sp, #24]
   1f028:	str	lr, [sp, #28]
   1f02c:	ldrb	r8, [r0, #27]
   1f030:	ldrd	r6, [sp, #32]
   1f034:	cmp	r8, #0
   1f038:	bne	1f204 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1ec>
   1f03c:	mov	r5, r3
   1f040:	ldr	r3, [r1, #8]
   1f044:	add	r2, r2, #2
   1f048:	lsl	r2, r2, #1
   1f04c:	mov	lr, r1
   1f050:	cmp	r3, r2
   1f054:	ble	1f1ec <flatcc_json_printer_int32_enum_vector_field@@Base+0x1d4>
   1f058:	ldr	r3, [r1, #4]
   1f05c:	ldrh	r2, [r3, r2]
   1f060:	cmp	r2, #0
   1f064:	beq	1f1ec <flatcc_json_printer_int32_enum_vector_field@@Base+0x1d4>
   1f068:	ldr	r3, [r1]
   1f06c:	adds	ip, r3, r2
   1f070:	beq	1f1ec <flatcc_json_printer_int32_enum_vector_field@@Base+0x1d4>
   1f074:	ldr	r1, [r1, #16]
   1f078:	mov	r4, r0
   1f07c:	add	r0, r1, #1
   1f080:	cmp	r1, #0
   1f084:	str	r0, [lr, #16]
   1f088:	beq	1f0a0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x88>
   1f08c:	ldr	r1, [r4, #20]
   1f090:	mov	r0, #44	; 0x2c
   1f094:	add	lr, r1, #1
   1f098:	str	lr, [r4, #20]
   1f09c:	strb	r0, [r1]
   1f0a0:	ldr	r3, [r3, r2]
   1f0a4:	mov	r1, r5
   1f0a8:	mov	r2, r6
   1f0ac:	mov	r0, r4
   1f0b0:	add	r6, ip, r3
   1f0b4:	ldr	r5, [ip, r3]
   1f0b8:	bl	16158 <test_print@@Base+0x26bc>
   1f0bc:	ldr	r2, [r4, #20]
   1f0c0:	mov	r1, #91	; 0x5b
   1f0c4:	ldr	r3, [r4, #32]
   1f0c8:	cmp	r5, #0
   1f0cc:	add	r0, r2, #1
   1f0d0:	add	r3, r3, #1
   1f0d4:	str	r0, [r4, #20]
   1f0d8:	str	r3, [r4, #32]
   1f0dc:	strb	r1, [r2]
   1f0e0:	beq	1f1cc <flatcc_json_printer_int32_enum_vector_field@@Base+0x1b4>
   1f0e4:	ldrb	r1, [r4, #25]
   1f0e8:	ldr	r3, [r4, #20]
   1f0ec:	cmp	r1, #0
   1f0f0:	bne	1f284 <flatcc_json_printer_int32_enum_vector_field@@Base+0x26c>
   1f0f4:	ldr	r2, [r4, #16]
   1f0f8:	cmp	r2, r3
   1f0fc:	bhi	1f10c <flatcc_json_printer_int32_enum_vector_field@@Base+0xf4>
   1f100:	mov	r0, r4
   1f104:	ldr	r3, [r4, #44]	; 0x2c
   1f108:	blx	r3
   1f10c:	mov	r0, r4
   1f110:	ldr	r1, [r6, #4]
   1f114:	add	r6, r6, #8
   1f118:	blx	r7
   1f11c:	cmp	r5, #1
   1f120:	sub	r5, r5, #2
   1f124:	beq	1f1cc <flatcc_json_printer_int32_enum_vector_field@@Base+0x1b4>
   1f128:	mov	r8, #44	; 0x2c
   1f12c:	mov	r9, #10
   1f130:	b	1f168 <flatcc_json_printer_int32_enum_vector_field@@Base+0x150>
   1f134:	ldr	r3, [r4, #16]
   1f138:	mov	r0, r4
   1f13c:	ldr	r2, [r4, #20]
   1f140:	cmp	r2, r3
   1f144:	bcc	1f150 <flatcc_json_printer_int32_enum_vector_field@@Base+0x138>
   1f148:	ldr	r3, [r4, #44]	; 0x2c
   1f14c:	blx	r3
   1f150:	sub	r5, r5, #1
   1f154:	mov	r0, r4
   1f158:	ldr	r1, [r6], #4
   1f15c:	blx	r7
   1f160:	cmn	r5, #1
   1f164:	beq	1f1cc <flatcc_json_printer_int32_enum_vector_field@@Base+0x1b4>
   1f168:	ldr	r3, [r4, #20]
   1f16c:	add	r2, r3, #1
   1f170:	str	r2, [r4, #20]
   1f174:	strb	r8, [r3]
   1f178:	ldrb	r1, [r4, #25]
   1f17c:	cmp	r1, #0
   1f180:	beq	1f134 <flatcc_json_printer_int32_enum_vector_field@@Base+0x11c>
   1f184:	ldr	r3, [r4, #20]
   1f188:	mov	r1, #32
   1f18c:	mov	r0, r4
   1f190:	add	r2, r3, #1
   1f194:	str	r2, [r4, #20]
   1f198:	strb	r9, [r3]
   1f19c:	ldrb	r2, [r4, #25]
   1f1a0:	ldr	lr, [r4, #16]
   1f1a4:	ldr	sl, [r4, #32]
   1f1a8:	ldr	r3, [r4, #20]
   1f1ac:	mul	sl, sl, r2
   1f1b0:	add	ip, r3, sl
   1f1b4:	mov	r2, sl
   1f1b8:	cmp	lr, ip
   1f1bc:	bcs	1f220 <flatcc_json_printer_int32_enum_vector_field@@Base+0x208>
   1f1c0:	mov	r1, sl
   1f1c4:	bl	14d14 <test_print@@Base+0x1278>
   1f1c8:	b	1f150 <flatcc_json_printer_int32_enum_vector_field@@Base+0x138>
   1f1cc:	ldrb	r2, [r4, #25]
   1f1d0:	ldr	r3, [r4, #20]
   1f1d4:	cmp	r2, #0
   1f1d8:	add	r2, r3, #1
   1f1dc:	bne	1f238 <flatcc_json_printer_int32_enum_vector_field@@Base+0x220>
   1f1e0:	mov	r1, #93	; 0x5d
   1f1e4:	str	r2, [r4, #20]
   1f1e8:	strb	r1, [r3]
   1f1ec:	ldrd	r4, [sp]
   1f1f0:	ldrd	r6, [sp, #8]
   1f1f4:	ldrd	r8, [sp, #16]
   1f1f8:	ldr	sl, [sp, #24]
   1f1fc:	add	sp, sp, #28
   1f200:	pop	{pc}		; (ldr pc, [sp], #4)
   1f204:	ldrd	r4, [sp]
   1f208:	ldrd	r6, [sp, #8]
   1f20c:	ldrd	r8, [sp, #16]
   1f210:	ldr	sl, [sp, #24]
   1f214:	ldr	lr, [sp, #28]
   1f218:	add	sp, sp, #32
   1f21c:	b	1cf30 <flatcc_json_printer_int32_vector_field@@Base>
   1f220:	mov	r0, r3
   1f224:	bl	124bc <memset@plt>
   1f228:	ldr	r3, [r4, #20]
   1f22c:	add	sl, r3, sl
   1f230:	str	sl, [r4, #20]
   1f234:	b	1f150 <flatcc_json_printer_int32_enum_vector_field@@Base+0x138>
   1f238:	mov	r1, #10
   1f23c:	str	r2, [r4, #20]
   1f240:	strb	r1, [r3]
   1f244:	ldrb	r3, [r4, #25]
   1f248:	ldr	r2, [r4, #32]
   1f24c:	ldr	r1, [r4, #16]
   1f250:	ldr	r0, [r4, #20]
   1f254:	sub	r2, r2, #1
   1f258:	mul	r5, r2, r3
   1f25c:	str	r2, [r4, #32]
   1f260:	add	r3, r0, r5
   1f264:	cmp	r1, r3
   1f268:	bcs	1f2a0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x288>
   1f26c:	mov	r1, r5
   1f270:	mov	r0, r4
   1f274:	bl	14d14 <test_print@@Base+0x1278>
   1f278:	ldr	r3, [r4, #20]
   1f27c:	add	r2, r3, #1
   1f280:	b	1f1e0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1c8>
   1f284:	add	r1, r3, #1
   1f288:	mov	r2, #10
   1f28c:	mov	r0, r4
   1f290:	str	r1, [r4, #20]
   1f294:	strb	r2, [r3]
   1f298:	bl	14dc8 <test_print@@Base+0x132c>
   1f29c:	b	1f10c <flatcc_json_printer_int32_enum_vector_field@@Base+0xf4>
   1f2a0:	mov	r2, r5
   1f2a4:	mov	r1, #32
   1f2a8:	bl	124bc <memset@plt>
   1f2ac:	ldr	r3, [r4, #20]
   1f2b0:	add	r3, r3, r5
   1f2b4:	add	r2, r3, #1
   1f2b8:	b	1f1e0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1c8>

0001f2bc <flatcc_json_printer_int64_enum_vector_field@@Base>:
   1f2bc:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1f2c0:	strd	r6, [sp, #8]
   1f2c4:	strd	r8, [sp, #16]
   1f2c8:	str	sl, [sp, #24]
   1f2cc:	str	lr, [sp, #28]
   1f2d0:	ldrb	r8, [r0, #27]
   1f2d4:	ldrd	r6, [sp, #32]
   1f2d8:	cmp	r8, #0
   1f2dc:	bne	1f4a8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1ec>
   1f2e0:	mov	r5, r3
   1f2e4:	ldr	r3, [r1, #8]
   1f2e8:	add	r2, r2, #2
   1f2ec:	lsl	r2, r2, #1
   1f2f0:	mov	lr, r1
   1f2f4:	cmp	r3, r2
   1f2f8:	ble	1f490 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1d4>
   1f2fc:	ldr	r3, [r1, #4]
   1f300:	ldrh	r2, [r3, r2]
   1f304:	cmp	r2, #0
   1f308:	beq	1f490 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1d4>
   1f30c:	ldr	r3, [r1]
   1f310:	adds	ip, r3, r2
   1f314:	beq	1f490 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1d4>
   1f318:	ldr	r1, [r1, #16]
   1f31c:	mov	r4, r0
   1f320:	add	r0, r1, #1
   1f324:	cmp	r1, #0
   1f328:	str	r0, [lr, #16]
   1f32c:	beq	1f344 <flatcc_json_printer_int64_enum_vector_field@@Base+0x88>
   1f330:	ldr	r1, [r4, #20]
   1f334:	mov	r0, #44	; 0x2c
   1f338:	add	lr, r1, #1
   1f33c:	str	lr, [r4, #20]
   1f340:	strb	r0, [r1]
   1f344:	ldr	r3, [r3, r2]
   1f348:	mov	r1, r5
   1f34c:	mov	r2, r6
   1f350:	mov	r0, r4
   1f354:	add	r6, ip, r3
   1f358:	ldr	r5, [ip, r3]
   1f35c:	bl	16158 <test_print@@Base+0x26bc>
   1f360:	ldr	r2, [r4, #20]
   1f364:	mov	r1, #91	; 0x5b
   1f368:	ldr	r3, [r4, #32]
   1f36c:	cmp	r5, #0
   1f370:	add	r0, r2, #1
   1f374:	add	r3, r3, #1
   1f378:	str	r0, [r4, #20]
   1f37c:	str	r3, [r4, #32]
   1f380:	strb	r1, [r2]
   1f384:	beq	1f470 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1b4>
   1f388:	ldrb	r1, [r4, #25]
   1f38c:	ldr	r3, [r4, #20]
   1f390:	cmp	r1, #0
   1f394:	bne	1f528 <flatcc_json_printer_int64_enum_vector_field@@Base+0x26c>
   1f398:	ldr	r2, [r4, #16]
   1f39c:	cmp	r2, r3
   1f3a0:	bhi	1f3b0 <flatcc_json_printer_int64_enum_vector_field@@Base+0xf4>
   1f3a4:	mov	r0, r4
   1f3a8:	ldr	r3, [r4, #44]	; 0x2c
   1f3ac:	blx	r3
   1f3b0:	mov	r0, r4
   1f3b4:	ldrd	r2, [r6, #4]
   1f3b8:	add	r6, r6, #12
   1f3bc:	blx	r7
   1f3c0:	cmp	r5, #1
   1f3c4:	sub	r5, r5, #2
   1f3c8:	beq	1f470 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1b4>
   1f3cc:	mov	r8, #44	; 0x2c
   1f3d0:	mov	r9, #10
   1f3d4:	b	1f40c <flatcc_json_printer_int64_enum_vector_field@@Base+0x150>
   1f3d8:	ldr	r3, [r4, #16]
   1f3dc:	mov	r0, r4
   1f3e0:	ldr	r2, [r4, #20]
   1f3e4:	cmp	r2, r3
   1f3e8:	bcc	1f3f4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x138>
   1f3ec:	ldr	r3, [r4, #44]	; 0x2c
   1f3f0:	blx	r3
   1f3f4:	sub	r5, r5, #1
   1f3f8:	mov	r0, r4
   1f3fc:	ldrd	r2, [r6], #8
   1f400:	blx	r7
   1f404:	cmn	r5, #1
   1f408:	beq	1f470 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1b4>
   1f40c:	ldr	r3, [r4, #20]
   1f410:	add	r2, r3, #1
   1f414:	str	r2, [r4, #20]
   1f418:	strb	r8, [r3]
   1f41c:	ldrb	r1, [r4, #25]
   1f420:	cmp	r1, #0
   1f424:	beq	1f3d8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x11c>
   1f428:	ldr	r3, [r4, #20]
   1f42c:	mov	r1, #32
   1f430:	mov	r0, r4
   1f434:	add	r2, r3, #1
   1f438:	str	r2, [r4, #20]
   1f43c:	strb	r9, [r3]
   1f440:	ldrb	r2, [r4, #25]
   1f444:	ldr	lr, [r4, #16]
   1f448:	ldr	sl, [r4, #32]
   1f44c:	ldr	r3, [r4, #20]
   1f450:	mul	sl, sl, r2
   1f454:	add	ip, r3, sl
   1f458:	mov	r2, sl
   1f45c:	cmp	lr, ip
   1f460:	bcs	1f4c4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x208>
   1f464:	mov	r1, sl
   1f468:	bl	14d14 <test_print@@Base+0x1278>
   1f46c:	b	1f3f4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x138>
   1f470:	ldrb	r2, [r4, #25]
   1f474:	ldr	r3, [r4, #20]
   1f478:	cmp	r2, #0
   1f47c:	add	r2, r3, #1
   1f480:	bne	1f4dc <flatcc_json_printer_int64_enum_vector_field@@Base+0x220>
   1f484:	mov	r1, #93	; 0x5d
   1f488:	str	r2, [r4, #20]
   1f48c:	strb	r1, [r3]
   1f490:	ldrd	r4, [sp]
   1f494:	ldrd	r6, [sp, #8]
   1f498:	ldrd	r8, [sp, #16]
   1f49c:	ldr	sl, [sp, #24]
   1f4a0:	add	sp, sp, #28
   1f4a4:	pop	{pc}		; (ldr pc, [sp], #4)
   1f4a8:	ldrd	r4, [sp]
   1f4ac:	ldrd	r6, [sp, #8]
   1f4b0:	ldrd	r8, [sp, #16]
   1f4b4:	ldr	sl, [sp, #24]
   1f4b8:	ldr	lr, [sp, #28]
   1f4bc:	add	sp, sp, #32
   1f4c0:	b	1d244 <flatcc_json_printer_int64_vector_field@@Base>
   1f4c4:	mov	r0, r3
   1f4c8:	bl	124bc <memset@plt>
   1f4cc:	ldr	r3, [r4, #20]
   1f4d0:	add	sl, r3, sl
   1f4d4:	str	sl, [r4, #20]
   1f4d8:	b	1f3f4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x138>
   1f4dc:	mov	r1, #10
   1f4e0:	str	r2, [r4, #20]
   1f4e4:	strb	r1, [r3]
   1f4e8:	ldrb	r3, [r4, #25]
   1f4ec:	ldr	r2, [r4, #32]
   1f4f0:	ldr	r1, [r4, #16]
   1f4f4:	ldr	r0, [r4, #20]
   1f4f8:	sub	r2, r2, #1
   1f4fc:	mul	r5, r2, r3
   1f500:	str	r2, [r4, #32]
   1f504:	add	r3, r0, r5
   1f508:	cmp	r1, r3
   1f50c:	bcs	1f544 <flatcc_json_printer_int64_enum_vector_field@@Base+0x288>
   1f510:	mov	r1, r5
   1f514:	mov	r0, r4
   1f518:	bl	14d14 <test_print@@Base+0x1278>
   1f51c:	ldr	r3, [r4, #20]
   1f520:	add	r2, r3, #1
   1f524:	b	1f484 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1c8>
   1f528:	add	r1, r3, #1
   1f52c:	mov	r2, #10
   1f530:	mov	r0, r4
   1f534:	str	r1, [r4, #20]
   1f538:	strb	r2, [r3]
   1f53c:	bl	14dc8 <test_print@@Base+0x132c>
   1f540:	b	1f3b0 <flatcc_json_printer_int64_enum_vector_field@@Base+0xf4>
   1f544:	mov	r2, r5
   1f548:	mov	r1, #32
   1f54c:	bl	124bc <memset@plt>
   1f550:	ldr	r3, [r4, #20]
   1f554:	add	r3, r3, r5
   1f558:	add	r2, r3, #1
   1f55c:	b	1f484 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1c8>

0001f560 <flatcc_json_printer_bool_enum_vector_field@@Base>:
   1f560:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1f564:	strd	r6, [sp, #8]
   1f568:	strd	r8, [sp, #16]
   1f56c:	str	sl, [sp, #24]
   1f570:	str	lr, [sp, #28]
   1f574:	ldrb	r8, [r0, #27]
   1f578:	ldr	r7, [sp, #32]
   1f57c:	ldr	r6, [sp, #36]	; 0x24
   1f580:	cmp	r8, #0
   1f584:	bne	1f750 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1f0>
   1f588:	mov	r5, r3
   1f58c:	ldr	r3, [r1, #8]
   1f590:	add	r2, r2, #2
   1f594:	lsl	r2, r2, #1
   1f598:	mov	lr, r1
   1f59c:	cmp	r3, r2
   1f5a0:	ble	1f738 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1d8>
   1f5a4:	ldr	r3, [r1, #4]
   1f5a8:	ldrh	r2, [r3, r2]
   1f5ac:	cmp	r2, #0
   1f5b0:	beq	1f738 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1d8>
   1f5b4:	ldr	r3, [r1]
   1f5b8:	adds	ip, r3, r2
   1f5bc:	beq	1f738 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1d8>
   1f5c0:	ldr	r1, [r1, #16]
   1f5c4:	mov	r4, r0
   1f5c8:	add	r0, r1, #1
   1f5cc:	cmp	r1, #0
   1f5d0:	str	r0, [lr, #16]
   1f5d4:	beq	1f5ec <flatcc_json_printer_bool_enum_vector_field@@Base+0x8c>
   1f5d8:	ldr	r1, [r4, #20]
   1f5dc:	mov	r0, #44	; 0x2c
   1f5e0:	add	lr, r1, #1
   1f5e4:	str	lr, [r4, #20]
   1f5e8:	strb	r0, [r1]
   1f5ec:	ldr	r3, [r3, r2]
   1f5f0:	mov	r1, r5
   1f5f4:	mov	r2, r7
   1f5f8:	mov	r0, r4
   1f5fc:	add	r7, ip, r3
   1f600:	ldr	r8, [ip, r3]
   1f604:	bl	16158 <test_print@@Base+0x26bc>
   1f608:	ldr	r2, [r4, #20]
   1f60c:	mov	r1, #91	; 0x5b
   1f610:	ldr	r3, [r4, #32]
   1f614:	cmp	r8, #0
   1f618:	add	r0, r2, #1
   1f61c:	add	r3, r3, #1
   1f620:	str	r0, [r4, #20]
   1f624:	str	r3, [r4, #32]
   1f628:	strb	r1, [r2]
   1f62c:	beq	1f718 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1b8>
   1f630:	ldrb	r1, [r4, #25]
   1f634:	ldr	r3, [r4, #20]
   1f638:	cmp	r1, #0
   1f63c:	bne	1f7d0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x270>
   1f640:	ldr	r2, [r4, #16]
   1f644:	cmp	r2, r3
   1f648:	bhi	1f658 <flatcc_json_printer_bool_enum_vector_field@@Base+0xf8>
   1f64c:	mov	r0, r4
   1f650:	ldr	r3, [r4, #44]	; 0x2c
   1f654:	blx	r3
   1f658:	ldrb	r1, [r7, #4]
   1f65c:	mov	r0, r4
   1f660:	add	r5, r7, #5
   1f664:	blx	r6
   1f668:	cmp	r8, #1
   1f66c:	beq	1f718 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1b8>
   1f670:	add	r3, r8, #4
   1f674:	mov	r9, #10
   1f678:	mov	r8, #44	; 0x2c
   1f67c:	add	r7, r7, r3
   1f680:	b	1f6b4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x154>
   1f684:	ldr	r3, [r4, #16]
   1f688:	mov	r0, r4
   1f68c:	ldr	r2, [r4, #20]
   1f690:	cmp	r2, r3
   1f694:	bcc	1f6a0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x140>
   1f698:	ldr	r3, [r4, #44]	; 0x2c
   1f69c:	blx	r3
   1f6a0:	ldrb	r1, [r5], #1
   1f6a4:	mov	r0, r4
   1f6a8:	blx	r6
   1f6ac:	cmp	r5, r7
   1f6b0:	beq	1f718 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1b8>
   1f6b4:	ldr	r3, [r4, #20]
   1f6b8:	add	r2, r3, #1
   1f6bc:	str	r2, [r4, #20]
   1f6c0:	strb	r8, [r3]
   1f6c4:	ldrb	r1, [r4, #25]
   1f6c8:	cmp	r1, #0
   1f6cc:	beq	1f684 <flatcc_json_printer_bool_enum_vector_field@@Base+0x124>
   1f6d0:	ldr	r3, [r4, #20]
   1f6d4:	mov	r1, #32
   1f6d8:	mov	r0, r4
   1f6dc:	add	r2, r3, #1
   1f6e0:	str	r2, [r4, #20]
   1f6e4:	strb	r9, [r3]
   1f6e8:	ldrb	r2, [r4, #25]
   1f6ec:	ldr	lr, [r4, #16]
   1f6f0:	ldr	sl, [r4, #32]
   1f6f4:	ldr	r3, [r4, #20]
   1f6f8:	mul	sl, sl, r2
   1f6fc:	add	ip, r3, sl
   1f700:	mov	r2, sl
   1f704:	cmp	lr, ip
   1f708:	bcs	1f76c <flatcc_json_printer_bool_enum_vector_field@@Base+0x20c>
   1f70c:	mov	r1, sl
   1f710:	bl	14d14 <test_print@@Base+0x1278>
   1f714:	b	1f6a0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x140>
   1f718:	ldrb	r2, [r4, #25]
   1f71c:	ldr	r3, [r4, #20]
   1f720:	cmp	r2, #0
   1f724:	add	r2, r3, #1
   1f728:	bne	1f784 <flatcc_json_printer_bool_enum_vector_field@@Base+0x224>
   1f72c:	mov	r1, #93	; 0x5d
   1f730:	str	r2, [r4, #20]
   1f734:	strb	r1, [r3]
   1f738:	ldrd	r4, [sp]
   1f73c:	ldrd	r6, [sp, #8]
   1f740:	ldrd	r8, [sp, #16]
   1f744:	ldr	sl, [sp, #24]
   1f748:	add	sp, sp, #28
   1f74c:	pop	{pc}		; (ldr pc, [sp], #4)
   1f750:	ldrd	r4, [sp]
   1f754:	ldrd	r6, [sp, #8]
   1f758:	ldrd	r8, [sp, #16]
   1f75c:	ldr	sl, [sp, #24]
   1f760:	ldr	lr, [sp, #28]
   1f764:	add	sp, sp, #32
   1f768:	b	1d520 <flatcc_json_printer_bool_vector_field@@Base>
   1f76c:	mov	r0, r3
   1f770:	bl	124bc <memset@plt>
   1f774:	ldr	r3, [r4, #20]
   1f778:	add	sl, r3, sl
   1f77c:	str	sl, [r4, #20]
   1f780:	b	1f6a0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x140>
   1f784:	mov	r1, #10
   1f788:	str	r2, [r4, #20]
   1f78c:	strb	r1, [r3]
   1f790:	ldrb	r3, [r4, #25]
   1f794:	ldr	r2, [r4, #32]
   1f798:	ldr	r1, [r4, #16]
   1f79c:	ldr	r0, [r4, #20]
   1f7a0:	sub	r2, r2, #1
   1f7a4:	mul	r5, r2, r3
   1f7a8:	str	r2, [r4, #32]
   1f7ac:	add	r3, r0, r5
   1f7b0:	cmp	r1, r3
   1f7b4:	bcs	1f7ec <flatcc_json_printer_bool_enum_vector_field@@Base+0x28c>
   1f7b8:	mov	r1, r5
   1f7bc:	mov	r0, r4
   1f7c0:	bl	14d14 <test_print@@Base+0x1278>
   1f7c4:	ldr	r3, [r4, #20]
   1f7c8:	add	r2, r3, #1
   1f7cc:	b	1f72c <flatcc_json_printer_bool_enum_vector_field@@Base+0x1cc>
   1f7d0:	add	r1, r3, #1
   1f7d4:	mov	r2, #10
   1f7d8:	mov	r0, r4
   1f7dc:	str	r1, [r4, #20]
   1f7e0:	strb	r2, [r3]
   1f7e4:	bl	14dc8 <test_print@@Base+0x132c>
   1f7e8:	b	1f658 <flatcc_json_printer_bool_enum_vector_field@@Base+0xf8>
   1f7ec:	mov	r2, r5
   1f7f0:	mov	r1, #32
   1f7f4:	bl	124bc <memset@plt>
   1f7f8:	ldr	r3, [r4, #20]
   1f7fc:	add	r3, r3, r5
   1f800:	add	r2, r3, #1
   1f804:	b	1f72c <flatcc_json_printer_bool_enum_vector_field@@Base+0x1cc>

0001f808 <flatcc_json_printer_struct_vector_field@@Base>:
   1f808:	ldr	ip, [r1, #8]
   1f80c:	add	r2, r2, #2
   1f810:	lsl	r2, r2, #1
   1f814:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1f818:	strd	r6, [sp, #8]
   1f81c:	strd	r8, [sp, #16]
   1f820:	strd	sl, [sp, #24]
   1f824:	cmp	r2, ip
   1f828:	str	lr, [sp, #32]
   1f82c:	sub	sp, sp, #4
   1f830:	ldr	r8, [sp, #44]	; 0x2c
   1f834:	ldr	r7, [sp, #48]	; 0x30
   1f838:	bge	1fa4c <flatcc_json_printer_struct_vector_field@@Base+0x244>
   1f83c:	ldr	ip, [r1, #4]
   1f840:	ldrh	r2, [ip, r2]
   1f844:	cmp	r2, #0
   1f848:	beq	1fa4c <flatcc_json_printer_struct_vector_field@@Base+0x244>
   1f84c:	ldr	ip, [r1]
   1f850:	adds	lr, ip, r2
   1f854:	beq	1fa4c <flatcc_json_printer_struct_vector_field@@Base+0x244>
   1f858:	ldr	r4, [r1, #16]
   1f85c:	add	r5, r4, #1
   1f860:	cmp	r4, #0
   1f864:	str	r5, [r1, #16]
   1f868:	beq	1f880 <flatcc_json_printer_struct_vector_field@@Base+0x78>
   1f86c:	ldr	r1, [r0, #20]
   1f870:	mov	r4, #44	; 0x2c
   1f874:	add	r5, r1, #1
   1f878:	str	r5, [r0, #20]
   1f87c:	strb	r4, [r1]
   1f880:	mov	r1, r3
   1f884:	ldr	r3, [ip, r2]
   1f888:	mov	r4, r0
   1f88c:	ldr	r2, [sp, #40]	; 0x28
   1f890:	add	r6, lr, r3
   1f894:	ldr	r5, [lr, r3]
   1f898:	bl	16158 <test_print@@Base+0x26bc>
   1f89c:	ldr	r2, [r4, #20]
   1f8a0:	mov	r1, #91	; 0x5b
   1f8a4:	ldr	r3, [r4, #32]
   1f8a8:	cmp	r5, #0
   1f8ac:	add	r0, r2, #1
   1f8b0:	add	r3, r3, #1
   1f8b4:	str	r0, [r4, #20]
   1f8b8:	str	r3, [r4, #32]
   1f8bc:	strb	r1, [r2]
   1f8c0:	beq	1fa2c <flatcc_json_printer_struct_vector_field@@Base+0x224>
   1f8c4:	ldrb	r1, [r4, #25]
   1f8c8:	ldr	r3, [r4, #20]
   1f8cc:	cmp	r1, #0
   1f8d0:	bne	1fa68 <flatcc_json_printer_struct_vector_field@@Base+0x260>
   1f8d4:	ldr	r2, [r4, #16]
   1f8d8:	cmp	r2, r3
   1f8dc:	bhi	1f8f0 <flatcc_json_printer_struct_vector_field@@Base+0xe8>
   1f8e0:	mov	r0, r4
   1f8e4:	ldr	r3, [r4, #44]	; 0x2c
   1f8e8:	blx	r3
   1f8ec:	ldr	r3, [r4, #20]
   1f8f0:	add	r1, r3, #1
   1f8f4:	mov	ip, #123	; 0x7b
   1f8f8:	ldr	r2, [r4, #32]
   1f8fc:	add	r6, r6, #4
   1f900:	mov	r0, r4
   1f904:	str	r1, [r4, #20]
   1f908:	mov	r1, r6
   1f90c:	add	r2, r2, #1
   1f910:	str	r2, [r4, #32]
   1f914:	strb	ip, [r3]
   1f918:	blx	r7
   1f91c:	ldrb	r3, [r4, #25]
   1f920:	cmp	r3, #0
   1f924:	bne	1fb4c <flatcc_json_printer_struct_vector_field@@Base+0x344>
   1f928:	ldr	r3, [r4, #20]
   1f92c:	mov	r2, #125	; 0x7d
   1f930:	cmp	r5, #1
   1f934:	sub	r5, r5, #2
   1f938:	add	r1, r3, #1
   1f93c:	str	r1, [r4, #20]
   1f940:	strb	r2, [r3]
   1f944:	beq	1fa2c <flatcc_json_printer_struct_vector_field@@Base+0x224>
   1f948:	mov	r9, #44	; 0x2c
   1f94c:	mov	sl, #10
   1f950:	b	1f9c8 <flatcc_json_printer_struct_vector_field@@Base+0x1c0>
   1f954:	ldr	r3, [r4, #16]
   1f958:	ldr	r2, [r4, #20]
   1f95c:	cmp	r2, r3
   1f960:	bcc	1f974 <flatcc_json_printer_struct_vector_field@@Base+0x16c>
   1f964:	mov	r0, r4
   1f968:	ldr	r3, [r4, #44]	; 0x2c
   1f96c:	blx	r3
   1f970:	ldr	r2, [r4, #20]
   1f974:	add	r0, r2, #1
   1f978:	mov	ip, #123	; 0x7b
   1f97c:	ldr	r3, [r4, #32]
   1f980:	mov	r1, r6
   1f984:	str	r0, [r4, #20]
   1f988:	mov	r0, r4
   1f98c:	add	r3, r3, #1
   1f990:	str	r3, [r4, #32]
   1f994:	strb	ip, [r2]
   1f998:	blx	r7
   1f99c:	ldrb	r3, [r4, #25]
   1f9a0:	cmp	r3, #0
   1f9a4:	bne	1fa88 <flatcc_json_printer_struct_vector_field@@Base+0x280>
   1f9a8:	ldr	r1, [r4, #20]
   1f9ac:	sub	r5, r5, #1
   1f9b0:	add	r2, r1, #1
   1f9b4:	mov	r3, #125	; 0x7d
   1f9b8:	cmn	r5, #1
   1f9bc:	str	r2, [r4, #20]
   1f9c0:	strb	r3, [r1]
   1f9c4:	beq	1fa2c <flatcc_json_printer_struct_vector_field@@Base+0x224>
   1f9c8:	ldr	r3, [r4, #20]
   1f9cc:	add	r6, r6, r8
   1f9d0:	add	r2, r3, #1
   1f9d4:	str	r2, [r4, #20]
   1f9d8:	strb	r9, [r3]
   1f9dc:	ldrb	r1, [r4, #25]
   1f9e0:	cmp	r1, #0
   1f9e4:	beq	1f954 <flatcc_json_printer_struct_vector_field@@Base+0x14c>
   1f9e8:	ldr	r3, [r4, #20]
   1f9ec:	add	r2, r3, #1
   1f9f0:	str	r2, [r4, #20]
   1f9f4:	strb	sl, [r3]
   1f9f8:	ldrb	r3, [r4, #25]
   1f9fc:	ldr	r1, [r4, #16]
   1fa00:	ldr	r2, [r4, #32]
   1fa04:	ldr	r0, [r4, #20]
   1fa08:	mul	fp, r2, r3
   1fa0c:	add	r3, r0, fp
   1fa10:	cmp	r1, r3
   1fa14:	bcs	1fad0 <flatcc_json_printer_struct_vector_field@@Base+0x2c8>
   1fa18:	mov	r1, fp
   1fa1c:	mov	r0, r4
   1fa20:	bl	14d14 <test_print@@Base+0x1278>
   1fa24:	ldr	r2, [r4, #20]
   1fa28:	b	1f974 <flatcc_json_printer_struct_vector_field@@Base+0x16c>
   1fa2c:	ldrb	r2, [r4, #25]
   1fa30:	ldr	r3, [r4, #20]
   1fa34:	cmp	r2, #0
   1fa38:	add	r2, r3, #1
   1fa3c:	bne	1fb00 <flatcc_json_printer_struct_vector_field@@Base+0x2f8>
   1fa40:	mov	r1, #93	; 0x5d
   1fa44:	str	r2, [r4, #20]
   1fa48:	strb	r1, [r3]
   1fa4c:	add	sp, sp, #4
   1fa50:	ldrd	r4, [sp]
   1fa54:	ldrd	r6, [sp, #8]
   1fa58:	ldrd	r8, [sp, #16]
   1fa5c:	ldrd	sl, [sp, #24]
   1fa60:	add	sp, sp, #32
   1fa64:	pop	{pc}		; (ldr pc, [sp], #4)
   1fa68:	add	r1, r3, #1
   1fa6c:	mov	r2, #10
   1fa70:	mov	r0, r4
   1fa74:	str	r1, [r4, #20]
   1fa78:	strb	r2, [r3]
   1fa7c:	bl	14dc8 <test_print@@Base+0x132c>
   1fa80:	ldr	r3, [r4, #20]
   1fa84:	b	1f8f0 <flatcc_json_printer_struct_vector_field@@Base+0xe8>
   1fa88:	ldr	r3, [r4, #20]
   1fa8c:	add	r2, r3, #1
   1fa90:	str	r2, [r4, #20]
   1fa94:	strb	sl, [r3]
   1fa98:	ldrb	r1, [r4, #25]
   1fa9c:	ldr	r3, [r4, #32]
   1faa0:	ldr	r2, [r4, #16]
   1faa4:	ldr	r0, [r4, #20]
   1faa8:	sub	r3, r3, #1
   1faac:	mul	fp, r3, r1
   1fab0:	str	r3, [r4, #32]
   1fab4:	add	r3, r0, fp
   1fab8:	cmp	r2, r3
   1fabc:	bcs	1fae8 <flatcc_json_printer_struct_vector_field@@Base+0x2e0>
   1fac0:	mov	r1, fp
   1fac4:	mov	r0, r4
   1fac8:	bl	14d14 <test_print@@Base+0x1278>
   1facc:	b	1f9a8 <flatcc_json_printer_struct_vector_field@@Base+0x1a0>
   1fad0:	mov	r2, fp
   1fad4:	mov	r1, #32
   1fad8:	bl	124bc <memset@plt>
   1fadc:	ldr	r2, [r4, #20]
   1fae0:	add	r2, r2, fp
   1fae4:	b	1f974 <flatcc_json_printer_struct_vector_field@@Base+0x16c>
   1fae8:	mov	r1, #32
   1faec:	mov	r2, fp
   1faf0:	bl	124bc <memset@plt>
   1faf4:	ldr	r1, [r4, #20]
   1faf8:	add	r1, r1, fp
   1fafc:	b	1f9ac <flatcc_json_printer_struct_vector_field@@Base+0x1a4>
   1fb00:	mov	r1, #10
   1fb04:	str	r2, [r4, #20]
   1fb08:	strb	r1, [r3]
   1fb0c:	ldrb	r3, [r4, #25]
   1fb10:	ldr	r2, [r4, #32]
   1fb14:	ldr	r1, [r4, #16]
   1fb18:	ldr	r0, [r4, #20]
   1fb1c:	sub	r2, r2, #1
   1fb20:	mul	r5, r2, r3
   1fb24:	str	r2, [r4, #32]
   1fb28:	add	r3, r0, r5
   1fb2c:	cmp	r1, r3
   1fb30:	bcs	1fb78 <flatcc_json_printer_struct_vector_field@@Base+0x370>
   1fb34:	mov	r1, r5
   1fb38:	mov	r0, r4
   1fb3c:	bl	14d14 <test_print@@Base+0x1278>
   1fb40:	ldr	r3, [r4, #20]
   1fb44:	add	r2, r3, #1
   1fb48:	b	1fa40 <flatcc_json_printer_struct_vector_field@@Base+0x238>
   1fb4c:	ldr	r3, [r4, #20]
   1fb50:	mov	r2, #10
   1fb54:	mov	r0, r4
   1fb58:	add	r1, r3, #1
   1fb5c:	str	r1, [r4, #20]
   1fb60:	strb	r2, [r3]
   1fb64:	ldr	r3, [r4, #32]
   1fb68:	sub	r3, r3, #1
   1fb6c:	str	r3, [r4, #32]
   1fb70:	bl	14dc8 <test_print@@Base+0x132c>
   1fb74:	b	1f928 <flatcc_json_printer_struct_vector_field@@Base+0x120>
   1fb78:	mov	r2, r5
   1fb7c:	mov	r1, #32
   1fb80:	bl	124bc <memset@plt>
   1fb84:	ldr	r3, [r4, #20]
   1fb88:	add	r3, r3, r5
   1fb8c:	add	r2, r3, #1
   1fb90:	b	1fa40 <flatcc_json_printer_struct_vector_field@@Base+0x238>

0001fb94 <flatcc_json_printer_string_vector_field@@Base>:
   1fb94:	ldr	ip, [r1, #8]
   1fb98:	add	r2, r2, #2
   1fb9c:	lsl	r2, r2, #1
   1fba0:	cmp	ip, r2
   1fba4:	bxle	lr
   1fba8:	ldr	ip, [r1, #4]
   1fbac:	ldrh	r2, [ip, r2]
   1fbb0:	cmp	r2, #0
   1fbb4:	bxeq	lr
   1fbb8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1fbbc:	strd	r6, [sp, #8]
   1fbc0:	str	lr, [sp, #28]
   1fbc4:	ldr	lr, [r1]
   1fbc8:	strd	r8, [sp, #16]
   1fbcc:	str	sl, [sp, #24]
   1fbd0:	adds	r5, lr, r2
   1fbd4:	beq	1fe18 <flatcc_json_printer_string_vector_field@@Base+0x284>
   1fbd8:	ldr	r4, [r1, #16]
   1fbdc:	ldr	ip, [r0, #20]
   1fbe0:	cmp	r4, #0
   1fbe4:	add	r4, r4, #1
   1fbe8:	str	r4, [r1, #16]
   1fbec:	beq	1fc04 <flatcc_json_printer_string_vector_field@@Base+0x70>
   1fbf0:	add	r4, ip, #1
   1fbf4:	mov	r1, #44	; 0x2c
   1fbf8:	str	r4, [r0, #20]
   1fbfc:	strb	r1, [ip]
   1fc00:	ldr	ip, [r0, #20]
   1fc04:	mov	r7, r3
   1fc08:	mov	r4, r0
   1fc0c:	ldrb	r1, [r0, #25]
   1fc10:	ldr	r3, [lr, r2]
   1fc14:	cmp	r1, #0
   1fc18:	add	r6, r5, r3
   1fc1c:	ldr	r5, [r5, r3]
   1fc20:	bne	1fea8 <flatcc_json_printer_string_vector_field@@Base+0x314>
   1fc24:	ldr	r3, [r0, #16]
   1fc28:	cmp	r3, ip
   1fc2c:	bls	1fe40 <flatcc_json_printer_string_vector_field@@Base+0x2ac>
   1fc30:	mov	r3, #34	; 0x22
   1fc34:	mov	r1, r7
   1fc38:	strb	r3, [ip]
   1fc3c:	ldrb	r3, [r4, #26]
   1fc40:	ldr	r2, [r4, #16]
   1fc44:	ldr	r0, [r4, #20]
   1fc48:	cmp	r3, #0
   1fc4c:	addeq	r0, r0, #1
   1fc50:	ldr	r3, [sp, #32]
   1fc54:	str	r0, [r4, #20]
   1fc58:	add	r3, r0, r3
   1fc5c:	cmp	r2, r3
   1fc60:	ldr	r2, [sp, #32]
   1fc64:	bls	1fe30 <flatcc_json_printer_string_vector_field@@Base+0x29c>
   1fc68:	bl	12420 <memcpy@plt>
   1fc6c:	ldr	r3, [r4, #20]
   1fc70:	ldr	r2, [sp, #32]
   1fc74:	add	r3, r3, r2
   1fc78:	str	r3, [r4, #20]
   1fc7c:	mov	r2, #34	; 0x22
   1fc80:	mov	lr, #58	; 0x3a
   1fc84:	mov	ip, #32
   1fc88:	mov	r1, #91	; 0x5b
   1fc8c:	strb	r2, [r3]
   1fc90:	ldrb	r3, [r4, #26]
   1fc94:	ldr	r0, [r4, #20]
   1fc98:	clz	r3, r3
   1fc9c:	lsr	r3, r3, #5
   1fca0:	add	r2, r0, r3
   1fca4:	add	r2, r2, #1
   1fca8:	str	r2, [r4, #20]
   1fcac:	strb	lr, [r0, r3]
   1fcb0:	ldr	r3, [r4, #20]
   1fcb4:	strb	ip, [r3]
   1fcb8:	ldrb	r3, [r4, #25]
   1fcbc:	ldr	lr, [r4, #20]
   1fcc0:	ldr	r2, [r4, #32]
   1fcc4:	adds	r3, r3, #0
   1fcc8:	movne	r3, #1
   1fccc:	cmp	r5, #0
   1fcd0:	add	r0, lr, r3
   1fcd4:	add	r0, r0, #1
   1fcd8:	add	r2, r2, #1
   1fcdc:	str	r0, [r4, #20]
   1fce0:	str	r2, [r4, #32]
   1fce4:	strb	r1, [lr, r3]
   1fce8:	beq	1fdf8 <flatcc_json_printer_string_vector_field@@Base+0x264>
   1fcec:	ldrb	r1, [r4, #25]
   1fcf0:	ldr	r3, [r4, #20]
   1fcf4:	cmp	r1, #0
   1fcf8:	bne	1fe50 <flatcc_json_printer_string_vector_field@@Base+0x2bc>
   1fcfc:	ldr	r2, [r4, #16]
   1fd00:	cmp	r2, r3
   1fd04:	bhi	1fd14 <flatcc_json_printer_string_vector_field@@Base+0x180>
   1fd08:	mov	r0, r4
   1fd0c:	ldr	r3, [r4, #44]	; 0x2c
   1fd10:	blx	r3
   1fd14:	ldr	r3, [r6, #4]
   1fd18:	mov	r0, r4
   1fd1c:	sub	r7, r5, #2
   1fd20:	add	r3, r3, #4
   1fd24:	add	r1, r6, r3
   1fd28:	ldr	r2, [r6, r3]
   1fd2c:	add	r1, r1, #4
   1fd30:	bl	15f08 <test_print@@Base+0x246c>
   1fd34:	cmp	r5, #1
   1fd38:	beq	1fdf8 <flatcc_json_printer_string_vector_field@@Base+0x264>
   1fd3c:	add	r6, r6, #8
   1fd40:	mov	r8, #44	; 0x2c
   1fd44:	mov	r9, #10
   1fd48:	b	1fd90 <flatcc_json_printer_string_vector_field@@Base+0x1fc>
   1fd4c:	ldr	r3, [r4, #16]
   1fd50:	mov	r0, r4
   1fd54:	ldr	r2, [r4, #20]
   1fd58:	cmp	r2, r3
   1fd5c:	bcc	1fd68 <flatcc_json_printer_string_vector_field@@Base+0x1d4>
   1fd60:	ldr	r3, [r4, #44]	; 0x2c
   1fd64:	blx	r3
   1fd68:	ldr	r3, [r5]
   1fd6c:	sub	r7, r7, #1
   1fd70:	mov	r0, r4
   1fd74:	add	r6, r6, #4
   1fd78:	add	r1, r5, r3
   1fd7c:	ldr	r2, [r5, r3]
   1fd80:	add	r1, r1, #4
   1fd84:	bl	15f08 <test_print@@Base+0x246c>
   1fd88:	cmn	r7, #1
   1fd8c:	beq	1fdf8 <flatcc_json_printer_string_vector_field@@Base+0x264>
   1fd90:	ldr	r3, [r4, #20]
   1fd94:	mov	r5, r6
   1fd98:	add	r2, r3, #1
   1fd9c:	str	r2, [r4, #20]
   1fda0:	strb	r8, [r3]
   1fda4:	ldrb	r1, [r4, #25]
   1fda8:	cmp	r1, #0
   1fdac:	beq	1fd4c <flatcc_json_printer_string_vector_field@@Base+0x1b8>
   1fdb0:	ldr	r3, [r4, #20]
   1fdb4:	mov	r1, #32
   1fdb8:	mov	r0, r4
   1fdbc:	add	r2, r3, #1
   1fdc0:	str	r2, [r4, #20]
   1fdc4:	strb	r9, [r3]
   1fdc8:	ldrb	r2, [r4, #25]
   1fdcc:	ldr	lr, [r4, #16]
   1fdd0:	ldr	sl, [r4, #32]
   1fdd4:	ldr	r3, [r4, #20]
   1fdd8:	mul	sl, sl, r2
   1fddc:	add	ip, r3, sl
   1fde0:	mov	r2, sl
   1fde4:	cmp	lr, ip
   1fde8:	bcs	1fe90 <flatcc_json_printer_string_vector_field@@Base+0x2fc>
   1fdec:	mov	r1, sl
   1fdf0:	bl	14d14 <test_print@@Base+0x1278>
   1fdf4:	b	1fd68 <flatcc_json_printer_string_vector_field@@Base+0x1d4>
   1fdf8:	ldrb	r2, [r4, #25]
   1fdfc:	ldr	r3, [r4, #20]
   1fe00:	cmp	r2, #0
   1fe04:	add	r2, r3, #1
   1fe08:	bne	1feec <flatcc_json_printer_string_vector_field@@Base+0x358>
   1fe0c:	mov	r1, #93	; 0x5d
   1fe10:	str	r2, [r4, #20]
   1fe14:	strb	r1, [r3]
   1fe18:	ldrd	r4, [sp]
   1fe1c:	ldrd	r6, [sp, #8]
   1fe20:	ldrd	r8, [sp, #16]
   1fe24:	ldr	sl, [sp, #24]
   1fe28:	add	sp, sp, #28
   1fe2c:	pop	{pc}		; (ldr pc, [sp], #4)
   1fe30:	mov	r0, r4
   1fe34:	bl	14c50 <test_print@@Base+0x11b4>
   1fe38:	ldr	r3, [r4, #20]
   1fe3c:	b	1fc7c <flatcc_json_printer_string_vector_field@@Base+0xe8>
   1fe40:	ldr	r3, [r0, #44]	; 0x2c
   1fe44:	blx	r3
   1fe48:	ldr	ip, [r4, #20]
   1fe4c:	b	1fc30 <flatcc_json_printer_string_vector_field@@Base+0x9c>
   1fe50:	add	r1, r3, #1
   1fe54:	mov	r2, #10
   1fe58:	str	r1, [r4, #20]
   1fe5c:	strb	r2, [r3]
   1fe60:	ldrb	r3, [r4, #25]
   1fe64:	ldr	r2, [r4, #16]
   1fe68:	ldr	r7, [r4, #32]
   1fe6c:	ldr	r0, [r4, #20]
   1fe70:	mul	r7, r7, r3
   1fe74:	add	r3, r0, r7
   1fe78:	cmp	r2, r3
   1fe7c:	bcs	1ff70 <flatcc_json_printer_string_vector_field@@Base+0x3dc>
   1fe80:	mov	r1, r7
   1fe84:	mov	r0, r4
   1fe88:	bl	14d14 <test_print@@Base+0x1278>
   1fe8c:	b	1fd14 <flatcc_json_printer_string_vector_field@@Base+0x180>
   1fe90:	mov	r0, r3
   1fe94:	bl	124bc <memset@plt>
   1fe98:	ldr	r3, [r4, #20]
   1fe9c:	add	sl, r3, sl
   1fea0:	str	sl, [r4, #20]
   1fea4:	b	1fd68 <flatcc_json_printer_string_vector_field@@Base+0x1d4>
   1fea8:	add	r2, ip, #1
   1feac:	mov	r3, #10
   1feb0:	str	r2, [r0, #20]
   1feb4:	strb	r3, [ip]
   1feb8:	ldrb	r8, [r0, #25]
   1febc:	ldr	ip, [r4, #32]
   1fec0:	ldr	r2, [r0, #16]
   1fec4:	ldr	r0, [r0, #20]
   1fec8:	mul	r8, ip, r8
   1fecc:	add	r3, r0, r8
   1fed0:	cmp	r2, r3
   1fed4:	bcs	1ff38 <flatcc_json_printer_string_vector_field@@Base+0x3a4>
   1fed8:	mov	r1, r8
   1fedc:	mov	r0, r4
   1fee0:	bl	14d14 <test_print@@Base+0x1278>
   1fee4:	ldr	ip, [r4, #20]
   1fee8:	b	1fc30 <flatcc_json_printer_string_vector_field@@Base+0x9c>
   1feec:	mov	r1, #10
   1fef0:	str	r2, [r4, #20]
   1fef4:	strb	r1, [r3]
   1fef8:	ldrb	r3, [r4, #25]
   1fefc:	ldr	r2, [r4, #32]
   1ff00:	ldr	r1, [r4, #16]
   1ff04:	ldr	r0, [r4, #20]
   1ff08:	sub	r2, r2, #1
   1ff0c:	mul	r5, r2, r3
   1ff10:	str	r2, [r4, #32]
   1ff14:	add	r3, r0, r5
   1ff18:	cmp	r1, r3
   1ff1c:	bcs	1ff54 <flatcc_json_printer_string_vector_field@@Base+0x3c0>
   1ff20:	mov	r1, r5
   1ff24:	mov	r0, r4
   1ff28:	bl	14d14 <test_print@@Base+0x1278>
   1ff2c:	ldr	r3, [r4, #20]
   1ff30:	add	r2, r3, #1
   1ff34:	b	1fe0c <flatcc_json_printer_string_vector_field@@Base+0x278>
   1ff38:	mov	r2, r8
   1ff3c:	mov	r1, #32
   1ff40:	bl	124bc <memset@plt>
   1ff44:	ldr	ip, [r4, #20]
   1ff48:	add	ip, ip, r8
   1ff4c:	str	ip, [r4, #20]
   1ff50:	b	1fc30 <flatcc_json_printer_string_vector_field@@Base+0x9c>
   1ff54:	mov	r2, r5
   1ff58:	mov	r1, #32
   1ff5c:	bl	124bc <memset@plt>
   1ff60:	ldr	r3, [r4, #20]
   1ff64:	add	r3, r3, r5
   1ff68:	add	r2, r3, #1
   1ff6c:	b	1fe0c <flatcc_json_printer_string_vector_field@@Base+0x278>
   1ff70:	mov	r2, r7
   1ff74:	mov	r1, ip
   1ff78:	bl	124bc <memset@plt>
   1ff7c:	ldr	r3, [r4, #20]
   1ff80:	add	r7, r3, r7
   1ff84:	str	r7, [r4, #20]
   1ff88:	b	1fd14 <flatcc_json_printer_string_vector_field@@Base+0x180>

0001ff8c <flatcc_json_printer_table_vector_field@@Base>:
   1ff8c:	ldr	ip, [r1, #8]
   1ff90:	add	r2, r2, #2
   1ff94:	lsl	r2, r2, #1
   1ff98:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1ff9c:	strd	r6, [sp, #8]
   1ffa0:	strd	r8, [sp, #16]
   1ffa4:	strd	sl, [sp, #24]
   1ffa8:	cmp	ip, r2
   1ffac:	str	lr, [sp, #32]
   1ffb0:	sub	sp, sp, #36	; 0x24
   1ffb4:	ldr	r8, [sp, #76]	; 0x4c
   1ffb8:	ble	20110 <flatcc_json_printer_table_vector_field@@Base+0x184>
   1ffbc:	ldr	ip, [r1, #4]
   1ffc0:	ldrh	r2, [ip, r2]
   1ffc4:	cmp	r2, #0
   1ffc8:	beq	20110 <flatcc_json_printer_table_vector_field@@Base+0x184>
   1ffcc:	ldr	lr, [r1]
   1ffd0:	adds	r9, lr, r2
   1ffd4:	beq	20110 <flatcc_json_printer_table_vector_field@@Base+0x184>
   1ffd8:	ldr	r4, [r1, #16]
   1ffdc:	ldr	ip, [r0, #20]
   1ffe0:	cmp	r4, #0
   1ffe4:	add	r4, r4, #1
   1ffe8:	str	r4, [r1, #16]
   1ffec:	beq	20004 <flatcc_json_printer_table_vector_field@@Base+0x78>
   1fff0:	add	r5, ip, #1
   1fff4:	mov	r4, #44	; 0x2c
   1fff8:	str	r5, [r0, #20]
   1fffc:	strb	r4, [ip]
   20000:	ldr	ip, [r0, #20]
   20004:	mov	r6, r1
   20008:	mov	r5, r3
   2000c:	ldrb	r1, [r0, #25]
   20010:	mov	r4, r0
   20014:	ldr	r3, [lr, r2]
   20018:	cmp	r1, #0
   2001c:	add	r7, r9, r3
   20020:	ldr	fp, [r9, r3]
   20024:	bne	2014c <flatcc_json_printer_table_vector_field@@Base+0x1c0>
   20028:	ldr	r3, [r0, #16]
   2002c:	cmp	r3, ip
   20030:	bls	2013c <flatcc_json_printer_table_vector_field@@Base+0x1b0>
   20034:	mov	r3, #34	; 0x22
   20038:	mov	r1, r5
   2003c:	strb	r3, [ip]
   20040:	ldrb	r3, [r4, #26]
   20044:	ldr	r2, [r4, #16]
   20048:	ldr	r0, [r4, #20]
   2004c:	cmp	r3, #0
   20050:	addeq	r0, r0, #1
   20054:	ldr	r3, [sp, #72]	; 0x48
   20058:	str	r0, [r4, #20]
   2005c:	add	r3, r0, r3
   20060:	cmp	r2, r3
   20064:	ldr	r2, [sp, #72]	; 0x48
   20068:	bls	2012c <flatcc_json_printer_table_vector_field@@Base+0x1a0>
   2006c:	bl	12420 <memcpy@plt>
   20070:	ldr	r3, [r4, #20]
   20074:	ldr	r2, [sp, #72]	; 0x48
   20078:	add	r3, r3, r2
   2007c:	str	r3, [r4, #20]
   20080:	mov	r2, #34	; 0x22
   20084:	mov	ip, #58	; 0x3a
   20088:	mov	r9, #32
   2008c:	mov	r0, #91	; 0x5b
   20090:	strb	r2, [r3]
   20094:	ldrb	r3, [r4, #26]
   20098:	ldr	r1, [r4, #20]
   2009c:	clz	r3, r3
   200a0:	lsr	r3, r3, #5
   200a4:	add	r2, r1, r3
   200a8:	add	r2, r2, #1
   200ac:	str	r2, [r4, #20]
   200b0:	strb	ip, [r1, r3]
   200b4:	ldr	r3, [r4, #20]
   200b8:	strb	r9, [r3]
   200bc:	ldrb	r3, [r4, #25]
   200c0:	ldr	ip, [r4, #20]
   200c4:	ldr	r2, [r4, #32]
   200c8:	adds	r3, r3, #0
   200cc:	movne	r3, #1
   200d0:	cmp	fp, #0
   200d4:	add	r1, ip, r3
   200d8:	add	r1, r1, #1
   200dc:	add	r2, r2, #1
   200e0:	str	r1, [r4, #20]
   200e4:	str	r2, [r4, #32]
   200e8:	strb	r0, [ip, r3]
   200ec:	bne	201dc <flatcc_json_printer_table_vector_field@@Base+0x250>
   200f0:	ldr	r3, [r4, #20]
   200f4:	add	r2, r3, #1
   200f8:	ldrb	r1, [r4, #25]
   200fc:	cmp	r1, #0
   20100:	bne	20190 <flatcc_json_printer_table_vector_field@@Base+0x204>
   20104:	mov	r1, #93	; 0x5d
   20108:	str	r2, [r4, #20]
   2010c:	strb	r1, [r3]
   20110:	add	sp, sp, #36	; 0x24
   20114:	ldrd	r4, [sp]
   20118:	ldrd	r6, [sp, #8]
   2011c:	ldrd	r8, [sp, #16]
   20120:	ldrd	sl, [sp, #24]
   20124:	add	sp, sp, #32
   20128:	pop	{pc}		; (ldr pc, [sp], #4)
   2012c:	mov	r0, r4
   20130:	bl	14c50 <test_print@@Base+0x11b4>
   20134:	ldr	r3, [r4, #20]
   20138:	b	20080 <flatcc_json_printer_table_vector_field@@Base+0xf4>
   2013c:	ldr	r3, [r0, #44]	; 0x2c
   20140:	blx	r3
   20144:	ldr	ip, [r4, #20]
   20148:	b	20034 <flatcc_json_printer_table_vector_field@@Base+0xa8>
   2014c:	add	r2, ip, #1
   20150:	mov	r3, #10
   20154:	str	r2, [r0, #20]
   20158:	strb	r3, [ip]
   2015c:	ldrb	r3, [r0, #25]
   20160:	ldr	ip, [r4, #32]
   20164:	ldr	r2, [r0, #16]
   20168:	ldr	r0, [r0, #20]
   2016c:	mul	r9, ip, r3
   20170:	add	r3, r0, r9
   20174:	cmp	r2, r3
   20178:	bcs	20398 <flatcc_json_printer_table_vector_field@@Base+0x40c>
   2017c:	mov	r1, r9
   20180:	mov	r0, r4
   20184:	bl	14d14 <test_print@@Base+0x1278>
   20188:	ldr	ip, [r4, #20]
   2018c:	b	20034 <flatcc_json_printer_table_vector_field@@Base+0xa8>
   20190:	mov	r1, #10
   20194:	str	r2, [r4, #20]
   20198:	strb	r1, [r3]
   2019c:	ldrb	r3, [r4, #25]
   201a0:	ldr	r2, [r4, #32]
   201a4:	ldr	r1, [r4, #16]
   201a8:	ldr	r0, [r4, #20]
   201ac:	sub	r2, r2, #1
   201b0:	mul	r5, r2, r3
   201b4:	str	r2, [r4, #32]
   201b8:	add	r3, r0, r5
   201bc:	cmp	r1, r3
   201c0:	bcs	203b4 <flatcc_json_printer_table_vector_field@@Base+0x428>
   201c4:	mov	r1, r5
   201c8:	mov	r0, r4
   201cc:	bl	14d14 <test_print@@Base+0x1278>
   201d0:	ldr	r3, [r4, #20]
   201d4:	add	r2, r3, #1
   201d8:	b	20104 <flatcc_json_printer_table_vector_field@@Base+0x178>
   201dc:	ldr	r2, [r6, #12]
   201e0:	add	r5, r7, #4
   201e4:	ldr	r3, [r4, #20]
   201e8:	subs	r2, r2, #1
   201ec:	beq	203d0 <flatcc_json_printer_table_vector_field@@Base+0x444>
   201f0:	ldr	r1, [r4, #32]
   201f4:	add	sl, r3, #1
   201f8:	mov	r0, #123	; 0x7b
   201fc:	mov	lr, #0
   20200:	ldr	ip, [r7, #4]
   20204:	str	sl, [r4, #20]
   20208:	add	r1, r1, #1
   2020c:	str	r1, [r4, #32]
   20210:	add	r1, sp, #12
   20214:	strb	r0, [r3]
   20218:	add	r3, r5, ip
   2021c:	mov	r0, r4
   20220:	str	r2, [sp, #24]
   20224:	str	lr, [sp, #28]
   20228:	ldr	r2, [r5, ip]
   2022c:	str	r3, [sp, #12]
   20230:	sub	r3, r3, r2
   20234:	ldrh	r2, [r3]
   20238:	str	r3, [sp, #16]
   2023c:	str	r2, [sp, #20]
   20240:	blx	r8
   20244:	ldrb	r3, [r4, #25]
   20248:	cmp	r3, #0
   2024c:	ldr	r3, [r4, #20]
   20250:	bne	203e4 <flatcc_json_printer_table_vector_field@@Base+0x458>
   20254:	add	r1, r3, #1
   20258:	mov	r2, #125	; 0x7d
   2025c:	str	r1, [r4, #20]
   20260:	strb	r2, [r3]
   20264:	ldr	r3, [r4, #20]
   20268:	sub	fp, fp, #1
   2026c:	mov	r7, #44	; 0x2c
   20270:	mov	sl, #123	; 0x7b
   20274:	mov	r9, #0
   20278:	b	202f0 <flatcc_json_printer_table_vector_field@@Base+0x364>
   2027c:	ldr	lr, [r4, #20]
   20280:	add	r1, sp, #12
   20284:	ldr	r3, [r4, #32]
   20288:	ldr	ip, [r5]
   2028c:	add	r0, lr, #1
   20290:	add	r3, r3, #1
   20294:	str	r0, [r4, #20]
   20298:	mov	r0, r4
   2029c:	str	r3, [r4, #32]
   202a0:	add	r3, r5, ip
   202a4:	strb	sl, [lr]
   202a8:	str	r2, [sp, #24]
   202ac:	str	r9, [sp, #28]
   202b0:	ldr	r2, [r5, ip]
   202b4:	str	r3, [sp, #12]
   202b8:	sub	r3, r3, r2
   202bc:	ldrh	r2, [r3]
   202c0:	str	r3, [sp, #16]
   202c4:	str	r2, [sp, #20]
   202c8:	blx	r8
   202cc:	ldrb	r3, [r4, #25]
   202d0:	cmp	r3, #0
   202d4:	bne	2032c <flatcc_json_printer_table_vector_field@@Base+0x3a0>
   202d8:	ldr	r1, [r4, #20]
   202dc:	add	r2, r1, #1
   202e0:	mov	r3, #125	; 0x7d
   202e4:	str	r2, [r4, #20]
   202e8:	strb	r3, [r1]
   202ec:	ldr	r3, [r4, #20]
   202f0:	sub	fp, fp, #1
   202f4:	add	r2, r3, #1
   202f8:	cmn	fp, #1
   202fc:	beq	200f8 <flatcc_json_printer_table_vector_field@@Base+0x16c>
   20300:	str	r2, [r4, #20]
   20304:	add	r5, r5, #4
   20308:	strb	r7, [r3]
   2030c:	ldr	r3, [r6, #12]
   20310:	subs	r2, r3, #1
   20314:	bne	2027c <flatcc_json_printer_table_vector_field@@Base+0x2f0>
   20318:	ldr	r3, [r4, #36]	; 0x24
   2031c:	cmp	r3, #0
   20320:	moveq	r3, #2
   20324:	streq	r3, [r4, #36]	; 0x24
   20328:	b	202ec <flatcc_json_printer_table_vector_field@@Base+0x360>
   2032c:	ldr	r3, [r4, #20]
   20330:	mov	r2, #10
   20334:	add	r1, r3, #1
   20338:	str	r1, [r4, #20]
   2033c:	strb	r2, [r3]
   20340:	ldrb	r1, [r4, #25]
   20344:	ldr	r2, [r4, #32]
   20348:	ldr	ip, [r4, #16]
   2034c:	ldr	r0, [r4, #20]
   20350:	sub	r2, r2, #1
   20354:	mul	r3, r2, r1
   20358:	str	r2, [r4, #32]
   2035c:	add	r2, r0, r3
   20360:	cmp	ip, r2
   20364:	bcs	20378 <flatcc_json_printer_table_vector_field@@Base+0x3ec>
   20368:	mov	r1, r3
   2036c:	mov	r0, r4
   20370:	bl	14d14 <test_print@@Base+0x1278>
   20374:	b	202d8 <flatcc_json_printer_table_vector_field@@Base+0x34c>
   20378:	mov	r2, r3
   2037c:	mov	r1, #32
   20380:	str	r3, [sp, #4]
   20384:	bl	124bc <memset@plt>
   20388:	ldr	r3, [sp, #4]
   2038c:	ldr	r1, [r4, #20]
   20390:	add	r1, r1, r3
   20394:	b	202dc <flatcc_json_printer_table_vector_field@@Base+0x350>
   20398:	mov	r2, r9
   2039c:	mov	r1, #32
   203a0:	bl	124bc <memset@plt>
   203a4:	ldr	ip, [r4, #20]
   203a8:	add	ip, ip, r9
   203ac:	str	ip, [r4, #20]
   203b0:	b	20034 <flatcc_json_printer_table_vector_field@@Base+0xa8>
   203b4:	mov	r2, r5
   203b8:	mov	r1, #32
   203bc:	bl	124bc <memset@plt>
   203c0:	ldr	r3, [r4, #20]
   203c4:	add	r3, r3, r5
   203c8:	add	r2, r3, #1
   203cc:	b	20104 <flatcc_json_printer_table_vector_field@@Base+0x178>
   203d0:	ldr	r2, [r4, #36]	; 0x24
   203d4:	cmp	r2, #0
   203d8:	moveq	r2, #2
   203dc:	streq	r2, [r4, #36]	; 0x24
   203e0:	b	20268 <flatcc_json_printer_table_vector_field@@Base+0x2dc>
   203e4:	add	r1, r3, #1
   203e8:	mov	r2, #10
   203ec:	str	r1, [r4, #20]
   203f0:	strb	r2, [r3]
   203f4:	ldrb	r3, [r4, #25]
   203f8:	ldr	r2, [r4, #32]
   203fc:	ldr	r1, [r4, #16]
   20400:	ldr	r0, [r4, #20]
   20404:	sub	r2, r2, #1
   20408:	mul	r7, r2, r3
   2040c:	str	r2, [r4, #32]
   20410:	add	r3, r0, r7
   20414:	cmp	r1, r3
   20418:	bcs	20430 <flatcc_json_printer_table_vector_field@@Base+0x4a4>
   2041c:	mov	r1, r7
   20420:	mov	r0, r4
   20424:	bl	14d14 <test_print@@Base+0x1278>
   20428:	ldr	r3, [r4, #20]
   2042c:	b	20254 <flatcc_json_printer_table_vector_field@@Base+0x2c8>
   20430:	mov	r1, r9
   20434:	mov	r2, r7
   20438:	bl	124bc <memset@plt>
   2043c:	ldr	r3, [r4, #20]
   20440:	add	r3, r3, r7
   20444:	b	20254 <flatcc_json_printer_table_vector_field@@Base+0x2c8>

00020448 <flatcc_json_printer_union_vector_field@@Base>:
   20448:	strd	r4, [sp, #-36]!	; 0xffffffdc
   2044c:	mov	r5, r1
   20450:	mov	r4, r0
   20454:	ldr	r1, [r1, #8]
   20458:	strd	r6, [sp, #8]
   2045c:	strd	r8, [sp, #16]
   20460:	mov	r9, r2
   20464:	add	r2, r2, #1
   20468:	lsl	r2, r2, #1
   2046c:	strd	sl, [sp, #24]
   20470:	mov	fp, r3
   20474:	str	lr, [sp, #32]
   20478:	sub	sp, sp, #140	; 0x8c
   2047c:	cmp	r2, r1
   20480:	ldr	r6, [sp, #176]	; 0xb0
   20484:	movge	r7, #0
   20488:	bge	204a0 <flatcc_json_printer_union_vector_field@@Base+0x58>
   2048c:	ldr	r3, [r5, #4]
   20490:	ldrh	r7, [r3, r2]
   20494:	cmp	r7, #0
   20498:	ldrne	r3, [r5]
   2049c:	addne	r7, r3, r7
   204a0:	add	r2, r2, #2
   204a4:	ldr	r3, [r5, #12]
   204a8:	cmp	r2, r1
   204ac:	bge	2065c <flatcc_json_printer_union_vector_field@@Base+0x214>
   204b0:	ldr	r1, [r5, #4]
   204b4:	ldrh	r8, [r1, r2]
   204b8:	cmp	r8, #0
   204bc:	beq	2065c <flatcc_json_printer_union_vector_field@@Base+0x214>
   204c0:	ldr	r2, [r5]
   204c4:	cmp	r6, #100	; 0x64
   204c8:	add	sl, r2, r8
   204cc:	str	r2, [sp, #12]
   204d0:	str	r3, [sp, #20]
   204d4:	bgt	20668 <flatcc_json_printer_union_vector_field@@Base+0x220>
   204d8:	add	r3, sp, #28
   204dc:	mov	r2, r6
   204e0:	mov	r0, r3
   204e4:	mov	r1, fp
   204e8:	bl	12420 <memcpy@plt>
   204ec:	ldr	r2, [pc, #720]	; 207c4 <flatcc_json_printer_union_vector_field@@Base+0x37c>
   204f0:	mov	r3, r0
   204f4:	add	r1, r0, r6
   204f8:	cmp	sl, #0
   204fc:	cmpne	r7, #0
   20500:	add	r2, pc, r2
   20504:	ldr	r0, [r2]
   20508:	ldrb	r2, [r2, #4]
   2050c:	str	r0, [r3, r6]
   20510:	strb	r2, [r1, #4]
   20514:	bne	20534 <flatcc_json_printer_union_vector_field@@Base+0xec>
   20518:	add	sp, sp, #140	; 0x8c
   2051c:	ldrd	r4, [sp]
   20520:	ldrd	r6, [sp, #8]
   20524:	ldrd	r8, [sp, #16]
   20528:	ldrd	sl, [sp, #24]
   2052c:	add	sp, sp, #32
   20530:	pop	{pc}		; (ldr pc, [sp], #4)
   20534:	ldr	r2, [sp, #180]	; 0xb4
   20538:	add	r0, r6, #5
   2053c:	mov	r1, r5
   20540:	stm	sp, {r0, r2}
   20544:	sub	r2, r9, #1
   20548:	mov	r0, r4
   2054c:	bl	1dd90 <flatcc_json_printer_utype_enum_vector_field@@Base>
   20550:	ldr	r3, [r5, #16]
   20554:	add	r2, r3, #1
   20558:	cmp	r3, #0
   2055c:	str	r2, [r5, #16]
   20560:	beq	20578 <flatcc_json_printer_union_vector_field@@Base+0x130>
   20564:	ldr	r3, [r4, #20]
   20568:	mov	r2, #44	; 0x2c
   2056c:	add	r1, r3, #1
   20570:	str	r1, [r4, #20]
   20574:	strb	r2, [r3]
   20578:	ldr	r3, [sp, #12]
   2057c:	mov	r2, r6
   20580:	mov	r1, fp
   20584:	mov	r0, r4
   20588:	ldr	r5, [r7]
   2058c:	ldr	r3, [r3, r8]
   20590:	add	r6, sl, r3
   20594:	ldr	r8, [sl, r3]
   20598:	bl	16158 <test_print@@Base+0x26bc>
   2059c:	ldr	r2, [r4, #20]
   205a0:	mov	r1, #91	; 0x5b
   205a4:	ldr	r3, [r4, #32]
   205a8:	cmp	r8, #0
   205ac:	add	r0, r2, #1
   205b0:	add	r3, r3, #1
   205b4:	str	r0, [r4, #20]
   205b8:	str	r3, [r4, #32]
   205bc:	strb	r1, [r2]
   205c0:	beq	206a0 <flatcc_json_printer_union_vector_field@@Base+0x258>
   205c4:	add	r7, r7, r5
   205c8:	add	r6, r6, #4
   205cc:	ldrb	r3, [r7, #4]
   205d0:	cmp	r3, #0
   205d4:	beq	20758 <flatcc_json_printer_union_vector_field@@Base+0x310>
   205d8:	add	r1, sp, #16
   205dc:	mov	r0, r4
   205e0:	str	r6, [sp, #16]
   205e4:	strb	r3, [sp, #24]
   205e8:	ldr	r3, [sp, #184]	; 0xb8
   205ec:	blx	r3
   205f0:	add	r8, r8, #3
   205f4:	add	r5, r7, #4
   205f8:	mov	sl, #44	; 0x2c
   205fc:	add	r7, r7, r8
   20600:	mov	r9, #110	; 0x6e
   20604:	mov	r8, #117	; 0x75
   20608:	ldr	r3, [r4, #20]
   2060c:	cmp	r5, r7
   20610:	add	r1, r3, #1
   20614:	beq	206a8 <flatcc_json_printer_union_vector_field@@Base+0x260>
   20618:	ldrb	r2, [r5, #1]!
   2061c:	add	r6, r6, #4
   20620:	str	r1, [r4, #20]
   20624:	strb	sl, [r3]
   20628:	cmp	r2, #0
   2062c:	beq	206c4 <flatcc_json_printer_union_vector_field@@Base+0x27c>
   20630:	add	r1, sp, #16
   20634:	mov	r0, r4
   20638:	ldr	r3, [sp, #184]	; 0xb8
   2063c:	str	r6, [sp, #16]
   20640:	strb	r2, [sp, #24]
   20644:	blx	r3
   20648:	ldr	r3, [r4, #20]
   2064c:	cmp	r5, r7
   20650:	add	r1, r3, #1
   20654:	bne	20618 <flatcc_json_printer_union_vector_field@@Base+0x1d0>
   20658:	b	206a8 <flatcc_json_printer_union_vector_field@@Base+0x260>
   2065c:	cmp	r6, #100	; 0x64
   20660:	str	r3, [sp, #20]
   20664:	ble	20518 <flatcc_json_printer_union_vector_field@@Base+0xd0>
   20668:	ldr	r3, [r4, #36]	; 0x24
   2066c:	movw	r2, #843	; 0x34b
   20670:	ldr	r1, [pc, #336]	; 207c8 <flatcc_json_printer_union_vector_field@@Base+0x380>
   20674:	ldr	r0, [pc, #336]	; 207cc <flatcc_json_printer_union_vector_field@@Base+0x384>
   20678:	cmp	r3, #0
   2067c:	moveq	r3, #1
   20680:	add	r1, pc, r1
   20684:	streq	r3, [r4, #36]	; 0x24
   20688:	ldr	r3, [pc, #320]	; 207d0 <flatcc_json_printer_union_vector_field@@Base+0x388>
   2068c:	add	r0, pc, r0
   20690:	add	r3, pc, r3
   20694:	add	r3, r3, #1776	; 0x6f0
   20698:	add	r3, r3, #8
   2069c:	bl	12504 <__assert_fail@plt>
   206a0:	ldr	r3, [r4, #20]
   206a4:	add	r1, r3, #1
   206a8:	ldrb	r2, [r4, #25]
   206ac:	cmp	r2, #0
   206b0:	bne	2070c <flatcc_json_printer_union_vector_field@@Base+0x2c4>
   206b4:	mov	r2, #93	; 0x5d
   206b8:	str	r1, [r4, #20]
   206bc:	strb	r2, [r3]
   206c0:	b	20518 <flatcc_json_printer_union_vector_field@@Base+0xd0>
   206c4:	ldr	r3, [r4, #20]
   206c8:	mov	r2, #108	; 0x6c
   206cc:	add	r1, r3, #1
   206d0:	str	r1, [r4, #20]
   206d4:	strb	r9, [r3]
   206d8:	ldr	r3, [r4, #20]
   206dc:	add	r1, r3, #1
   206e0:	str	r1, [r4, #20]
   206e4:	strb	r8, [r3]
   206e8:	ldr	r3, [r4, #20]
   206ec:	add	r1, r3, #1
   206f0:	str	r1, [r4, #20]
   206f4:	strb	r2, [r3]
   206f8:	ldr	r3, [r4, #20]
   206fc:	add	r1, r3, #1
   20700:	str	r1, [r4, #20]
   20704:	strb	r2, [r3]
   20708:	b	20608 <flatcc_json_printer_union_vector_field@@Base+0x1c0>
   2070c:	mov	r2, #10
   20710:	str	r1, [r4, #20]
   20714:	strb	r2, [r3]
   20718:	ldrb	r3, [r4, #25]
   2071c:	ldr	r2, [r4, #32]
   20720:	ldr	r1, [r4, #16]
   20724:	ldr	r0, [r4, #20]
   20728:	sub	r2, r2, #1
   2072c:	mul	r5, r2, r3
   20730:	str	r2, [r4, #32]
   20734:	add	r3, r0, r5
   20738:	cmp	r1, r3
   2073c:	bcs	207a8 <flatcc_json_printer_union_vector_field@@Base+0x360>
   20740:	mov	r1, r5
   20744:	mov	r0, r4
   20748:	bl	14d14 <test_print@@Base+0x1278>
   2074c:	ldr	r3, [r4, #20]
   20750:	add	r1, r3, #1
   20754:	b	206b4 <flatcc_json_printer_union_vector_field@@Base+0x26c>
   20758:	ldr	r3, [r4, #20]
   2075c:	mov	r0, #110	; 0x6e
   20760:	mov	r1, #117	; 0x75
   20764:	mov	r2, #108	; 0x6c
   20768:	add	ip, r3, #1
   2076c:	str	ip, [r4, #20]
   20770:	strb	r0, [r3]
   20774:	ldr	r3, [r4, #20]
   20778:	add	r0, r3, #1
   2077c:	str	r0, [r4, #20]
   20780:	strb	r1, [r3]
   20784:	ldr	r3, [r4, #20]
   20788:	add	r1, r3, #1
   2078c:	str	r1, [r4, #20]
   20790:	strb	r2, [r3]
   20794:	ldr	r3, [r4, #20]
   20798:	add	r1, r3, #1
   2079c:	str	r1, [r4, #20]
   207a0:	strb	r2, [r3]
   207a4:	b	205f0 <flatcc_json_printer_union_vector_field@@Base+0x1a8>
   207a8:	mov	r1, #32
   207ac:	mov	r2, r5
   207b0:	bl	124bc <memset@plt>
   207b4:	ldr	r3, [r4, #20]
   207b8:	add	r3, r3, r5
   207bc:	add	r1, r3, #1
   207c0:	b	206b4 <flatcc_json_printer_union_vector_field@@Base+0x26c>
   207c4:	andeq	r2, r0, ip, ror sp
   207c8:			; <UNDEFINED> instruction: 0x000029b8
   207cc:	ldrdeq	r2, [r0], -r4
   207d0:	ldrdeq	r2, [r0], -r0

000207d4 <flatcc_json_printer_table_field@@Base>:
   207d4:	ldr	ip, [r1, #8]
   207d8:	add	r2, r2, #2
   207dc:	lsl	r2, r2, #1
   207e0:	cmp	r2, ip
   207e4:	bxge	lr
   207e8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   207ec:	ldr	ip, [r1, #4]
   207f0:	strd	r6, [sp, #8]
   207f4:	strd	r8, [sp, #16]
   207f8:	str	sl, [sp, #24]
   207fc:	str	lr, [sp, #28]
   20800:	sub	sp, sp, #24
   20804:	ldrh	r6, [ip, r2]
   20808:	cmp	r6, #0
   2080c:	beq	2098c <flatcc_json_printer_table_field@@Base+0x1b8>
   20810:	ldr	r8, [r1]
   20814:	adds	r7, r8, r6
   20818:	beq	2098c <flatcc_json_printer_table_field@@Base+0x1b8>
   2081c:	ldr	ip, [r1, #16]
   20820:	ldr	r2, [r0, #20]
   20824:	cmp	ip, #0
   20828:	add	ip, ip, #1
   2082c:	str	ip, [r1, #16]
   20830:	beq	20848 <flatcc_json_printer_table_field@@Base+0x74>
   20834:	add	lr, r2, #1
   20838:	mov	ip, #44	; 0x2c
   2083c:	str	lr, [r0, #20]
   20840:	strb	ip, [r2]
   20844:	ldr	r2, [r0, #20]
   20848:	mov	r5, r1
   2084c:	mov	r9, r3
   20850:	ldrb	r1, [r0, #25]
   20854:	mov	r4, r0
   20858:	cmp	r1, #0
   2085c:	bne	209dc <flatcc_json_printer_table_field@@Base+0x208>
   20860:	ldr	r3, [r0, #16]
   20864:	cmp	r3, r2
   20868:	bls	209b8 <flatcc_json_printer_table_field@@Base+0x1e4>
   2086c:	mov	r3, #34	; 0x22
   20870:	mov	r1, r9
   20874:	strb	r3, [r2]
   20878:	ldrb	r3, [r4, #26]
   2087c:	ldr	r2, [r4, #16]
   20880:	ldr	r0, [r4, #20]
   20884:	cmp	r3, #0
   20888:	addeq	r0, r0, #1
   2088c:	ldr	r3, [sp, #56]	; 0x38
   20890:	str	r0, [r4, #20]
   20894:	add	r3, r0, r3
   20898:	cmp	r2, r3
   2089c:	ldr	r2, [sp, #56]	; 0x38
   208a0:	bls	209a8 <flatcc_json_printer_table_field@@Base+0x1d4>
   208a4:	bl	12420 <memcpy@plt>
   208a8:	ldr	r3, [r4, #20]
   208ac:	ldr	r2, [sp, #56]	; 0x38
   208b0:	add	r3, r3, r2
   208b4:	str	r3, [r4, #20]
   208b8:	mov	r2, #34	; 0x22
   208bc:	mov	r0, #58	; 0x3a
   208c0:	mov	r9, #32
   208c4:	strb	r2, [r3]
   208c8:	ldrb	r3, [r4, #26]
   208cc:	ldr	r1, [r4, #20]
   208d0:	clz	r3, r3
   208d4:	lsr	r3, r3, #5
   208d8:	add	r2, r1, r3
   208dc:	add	r2, r2, #1
   208e0:	str	r2, [r4, #20]
   208e4:	strb	r0, [r1, r3]
   208e8:	ldr	r3, [r4, #20]
   208ec:	strb	r9, [r3]
   208f0:	ldrb	r3, [r4, #25]
   208f4:	ldr	r0, [r4, #20]
   208f8:	ldr	r1, [r5, #12]
   208fc:	adds	r3, r3, #0
   20900:	movne	r3, #1
   20904:	add	r2, r0, r3
   20908:	subs	ip, r1, #1
   2090c:	str	r2, [r4, #20]
   20910:	beq	209c8 <flatcc_json_printer_table_field@@Base+0x1f4>
   20914:	ldr	lr, [r4, #32]
   20918:	add	r2, r2, #1
   2091c:	add	r1, sp, #4
   20920:	ldr	r5, [r8, r6]
   20924:	mov	r6, #0
   20928:	mov	r8, #123	; 0x7b
   2092c:	str	r2, [r4, #20]
   20930:	add	r2, lr, #1
   20934:	str	r2, [r4, #32]
   20938:	strb	r8, [r0, r3]
   2093c:	add	r3, r7, r5
   20940:	mov	r0, r4
   20944:	str	ip, [sp, #16]
   20948:	str	r6, [sp, #20]
   2094c:	ldr	r2, [r7, r5]
   20950:	str	r3, [sp, #4]
   20954:	sub	r3, r3, r2
   20958:	ldrh	r2, [r3]
   2095c:	str	r3, [sp, #8]
   20960:	ldr	r3, [sp, #60]	; 0x3c
   20964:	str	r2, [sp, #12]
   20968:	blx	r3
   2096c:	ldrb	r3, [r4, #25]
   20970:	cmp	r3, r6
   20974:	ldr	r3, [r4, #20]
   20978:	bne	20a20 <flatcc_json_printer_table_field@@Base+0x24c>
   2097c:	add	r1, r3, #1
   20980:	mov	r2, #125	; 0x7d
   20984:	str	r1, [r4, #20]
   20988:	strb	r2, [r3]
   2098c:	add	sp, sp, #24
   20990:	ldrd	r4, [sp]
   20994:	ldrd	r6, [sp, #8]
   20998:	ldrd	r8, [sp, #16]
   2099c:	ldr	sl, [sp, #24]
   209a0:	add	sp, sp, #28
   209a4:	pop	{pc}		; (ldr pc, [sp], #4)
   209a8:	mov	r0, r4
   209ac:	bl	14c50 <test_print@@Base+0x11b4>
   209b0:	ldr	r3, [r4, #20]
   209b4:	b	208b8 <flatcc_json_printer_table_field@@Base+0xe4>
   209b8:	ldr	r3, [r0, #44]	; 0x2c
   209bc:	blx	r3
   209c0:	ldr	r2, [r4, #20]
   209c4:	b	2086c <flatcc_json_printer_table_field@@Base+0x98>
   209c8:	ldr	r3, [r4, #36]	; 0x24
   209cc:	cmp	r3, #0
   209d0:	moveq	r3, #2
   209d4:	streq	r3, [r4, #36]	; 0x24
   209d8:	b	2098c <flatcc_json_printer_table_field@@Base+0x1b8>
   209dc:	add	r1, r2, #1
   209e0:	mov	r3, #10
   209e4:	str	r1, [r0, #20]
   209e8:	strb	r3, [r2]
   209ec:	ldrb	r3, [r0, #25]
   209f0:	ldr	r2, [r4, #32]
   209f4:	ldr	r1, [r0, #16]
   209f8:	ldr	r0, [r0, #20]
   209fc:	mul	sl, r2, r3
   20a00:	add	r3, r0, sl
   20a04:	cmp	r1, r3
   20a08:	bcs	20a6c <flatcc_json_printer_table_field@@Base+0x298>
   20a0c:	mov	r1, sl
   20a10:	mov	r0, r4
   20a14:	bl	14d14 <test_print@@Base+0x1278>
   20a18:	ldr	r2, [r4, #20]
   20a1c:	b	2086c <flatcc_json_printer_table_field@@Base+0x98>
   20a20:	add	r1, r3, #1
   20a24:	mov	r2, #10
   20a28:	str	r1, [r4, #20]
   20a2c:	strb	r2, [r3]
   20a30:	ldrb	r3, [r4, #25]
   20a34:	ldr	r2, [r4, #32]
   20a38:	ldr	r1, [r4, #16]
   20a3c:	ldr	r0, [r4, #20]
   20a40:	sub	r2, r2, #1
   20a44:	mul	r5, r2, r3
   20a48:	str	r2, [r4, #32]
   20a4c:	add	r3, r0, r5
   20a50:	cmp	r1, r3
   20a54:	bcs	20a88 <flatcc_json_printer_table_field@@Base+0x2b4>
   20a58:	mov	r1, r5
   20a5c:	mov	r0, r4
   20a60:	bl	14d14 <test_print@@Base+0x1278>
   20a64:	ldr	r3, [r4, #20]
   20a68:	b	2097c <flatcc_json_printer_table_field@@Base+0x1a8>
   20a6c:	mov	r2, sl
   20a70:	mov	r1, #32
   20a74:	bl	124bc <memset@plt>
   20a78:	ldr	r2, [r4, #20]
   20a7c:	add	r2, r2, sl
   20a80:	str	r2, [r4, #20]
   20a84:	b	2086c <flatcc_json_printer_table_field@@Base+0x98>
   20a88:	mov	r1, r9
   20a8c:	mov	r2, r5
   20a90:	bl	124bc <memset@plt>
   20a94:	ldr	r3, [r4, #20]
   20a98:	add	r3, r3, r5
   20a9c:	b	2097c <flatcc_json_printer_table_field@@Base+0x1a8>

00020aa0 <flatcc_json_printer_union_field@@Base>:
   20aa0:	ldr	ip, [r1, #8]
   20aa4:	add	r2, r2, #1
   20aa8:	lsl	r2, r2, #1
   20aac:	strd	r4, [sp, #-32]!	; 0xffffffe0
   20ab0:	strd	r6, [sp, #8]
   20ab4:	strd	r8, [sp, #16]
   20ab8:	str	sl, [sp, #24]
   20abc:	cmp	r2, ip
   20ac0:	str	lr, [sp, #28]
   20ac4:	sub	sp, sp, #16
   20ac8:	movge	lr, #0
   20acc:	ldr	r6, [sp, #48]	; 0x30
   20ad0:	bge	20ae8 <flatcc_json_printer_union_field@@Base+0x48>
   20ad4:	ldr	lr, [r1, #4]
   20ad8:	ldrh	lr, [lr, r2]
   20adc:	cmp	lr, #0
   20ae0:	ldrne	r4, [r1]
   20ae4:	addne	lr, r4, lr
   20ae8:	add	r2, r2, #2
   20aec:	cmp	r2, ip
   20af0:	bge	20ca4 <flatcc_json_printer_union_field@@Base+0x204>
   20af4:	ldr	ip, [r1, #4]
   20af8:	ldrh	r2, [ip, r2]
   20afc:	cmp	r2, #0
   20b00:	beq	20ca4 <flatcc_json_printer_union_field@@Base+0x204>
   20b04:	ldr	r8, [r1]
   20b08:	adds	r8, r8, r2
   20b0c:	moveq	r2, #1
   20b10:	movne	r2, #0
   20b14:	cmp	lr, #0
   20b18:	moveq	r2, #1
   20b1c:	cmp	r2, #0
   20b20:	bne	20ca4 <flatcc_json_printer_union_field@@Base+0x204>
   20b24:	ldr	ip, [r1, #16]
   20b28:	ldrb	r9, [lr]
   20b2c:	ldr	r2, [r0, #20]
   20b30:	cmp	ip, #0
   20b34:	add	ip, ip, #1
   20b38:	str	ip, [r1, #16]
   20b3c:	beq	20b54 <flatcc_json_printer_union_field@@Base+0xb4>
   20b40:	add	lr, r2, #1
   20b44:	mov	ip, #44	; 0x2c
   20b48:	str	lr, [r0, #20]
   20b4c:	strb	ip, [r2]
   20b50:	ldr	r2, [r0, #20]
   20b54:	mov	r5, r1
   20b58:	mov	r7, r3
   20b5c:	ldrb	r1, [r0, #25]
   20b60:	mov	r4, r0
   20b64:	cmp	r1, #0
   20b68:	bne	20cc0 <flatcc_json_printer_union_field@@Base+0x220>
   20b6c:	ldr	r3, [r0, #16]
   20b70:	cmp	r3, r2
   20b74:	bhi	20b84 <flatcc_json_printer_union_field@@Base+0xe4>
   20b78:	ldr	r3, [r0, #44]	; 0x2c
   20b7c:	blx	r3
   20b80:	ldr	r2, [r4, #20]
   20b84:	mov	r3, #34	; 0x22
   20b88:	mov	r1, r7
   20b8c:	strb	r3, [r2]
   20b90:	ldrb	r3, [r4, #26]
   20b94:	ldr	r2, [r4, #16]
   20b98:	ldr	r0, [r4, #20]
   20b9c:	cmp	r3, #0
   20ba0:	addeq	r0, r0, #1
   20ba4:	add	r3, r0, r6
   20ba8:	cmp	r2, r3
   20bac:	mov	r2, r6
   20bb0:	str	r0, [r4, #20]
   20bb4:	bls	20d2c <flatcc_json_printer_union_field@@Base+0x28c>
   20bb8:	bl	12420 <memcpy@plt>
   20bbc:	ldr	r3, [r4, #20]
   20bc0:	add	r3, r3, r6
   20bc4:	str	r3, [r4, #20]
   20bc8:	ldr	r1, [r4, #16]
   20bcc:	add	r2, r3, #5
   20bd0:	cmp	r1, r2
   20bd4:	bhi	20d04 <flatcc_json_printer_union_field@@Base+0x264>
   20bd8:	ldr	r1, [pc, #400]	; 20d70 <flatcc_json_printer_union_field@@Base+0x2d0>
   20bdc:	mov	r2, #5
   20be0:	mov	r0, r4
   20be4:	add	r1, pc, r1
   20be8:	bl	14c50 <test_print@@Base+0x11b4>
   20bec:	ldr	r3, [r4, #20]
   20bf0:	mov	r2, #34	; 0x22
   20bf4:	mov	ip, #58	; 0x3a
   20bf8:	mov	r0, #32
   20bfc:	strb	r2, [r3]
   20c00:	ldrb	r2, [r4, #26]
   20c04:	ldr	r1, [r4, #20]
   20c08:	clz	r2, r2
   20c0c:	lsr	r2, r2, #5
   20c10:	add	r3, r1, r2
   20c14:	add	r3, r3, #1
   20c18:	str	r3, [r4, #20]
   20c1c:	strb	ip, [r1, r2]
   20c20:	ldr	r3, [r4, #20]
   20c24:	strb	r0, [r3]
   20c28:	ldrb	r2, [r4, #25]
   20c2c:	ldr	r1, [r4, #20]
   20c30:	ldrb	r3, [r4, #27]
   20c34:	cmp	r2, #0
   20c38:	addne	r1, r1, #1
   20c3c:	cmp	r3, #0
   20c40:	str	r1, [r4, #20]
   20c44:	bne	20d3c <flatcc_json_printer_union_field@@Base+0x29c>
   20c48:	mov	r1, r9
   20c4c:	mov	r0, r4
   20c50:	ldr	r3, [sp, #52]	; 0x34
   20c54:	blx	r3
   20c58:	cmp	r9, #0
   20c5c:	beq	20ca4 <flatcc_json_printer_union_field@@Base+0x204>
   20c60:	ldr	r3, [r4, #20]
   20c64:	mov	ip, #44	; 0x2c
   20c68:	mov	r1, r7
   20c6c:	mov	r0, r4
   20c70:	mov	r2, r6
   20c74:	add	lr, r3, #1
   20c78:	str	lr, [r4, #20]
   20c7c:	strb	ip, [r3]
   20c80:	bl	16158 <test_print@@Base+0x26bc>
   20c84:	ldr	r3, [r5, #12]
   20c88:	mov	r0, r4
   20c8c:	add	r1, sp, #4
   20c90:	str	r8, [sp, #4]
   20c94:	str	r3, [sp, #8]
   20c98:	ldr	r3, [sp, #56]	; 0x38
   20c9c:	strb	r9, [sp, #12]
   20ca0:	blx	r3
   20ca4:	add	sp, sp, #16
   20ca8:	ldrd	r4, [sp]
   20cac:	ldrd	r6, [sp, #8]
   20cb0:	ldrd	r8, [sp, #16]
   20cb4:	ldr	sl, [sp, #24]
   20cb8:	add	sp, sp, #28
   20cbc:	pop	{pc}		; (ldr pc, [sp], #4)
   20cc0:	add	r1, r2, #1
   20cc4:	mov	r3, #10
   20cc8:	str	r1, [r0, #20]
   20ccc:	strb	r3, [r2]
   20cd0:	ldrb	r3, [r0, #25]
   20cd4:	ldr	r2, [r4, #32]
   20cd8:	ldr	r1, [r0, #16]
   20cdc:	ldr	r0, [r0, #20]
   20ce0:	mul	sl, r2, r3
   20ce4:	add	r3, r0, sl
   20ce8:	cmp	r1, r3
   20cec:	bcs	20d54 <flatcc_json_printer_union_field@@Base+0x2b4>
   20cf0:	mov	r1, sl
   20cf4:	mov	r0, r4
   20cf8:	bl	14d14 <test_print@@Base+0x1278>
   20cfc:	ldr	r2, [r4, #20]
   20d00:	b	20b84 <flatcc_json_printer_union_field@@Base+0xe4>
   20d04:	ldr	r2, [pc, #104]	; 20d74 <flatcc_json_printer_union_field@@Base+0x2d4>
   20d08:	add	r2, pc, r2
   20d0c:	ldr	r1, [r2]
   20d10:	ldrb	r2, [r2, #4]
   20d14:	str	r1, [r3]
   20d18:	strb	r2, [r3, #4]
   20d1c:	ldr	r3, [r4, #20]
   20d20:	add	r3, r3, #5
   20d24:	str	r3, [r4, #20]
   20d28:	b	20bf0 <flatcc_json_printer_union_field@@Base+0x150>
   20d2c:	mov	r0, r4
   20d30:	bl	14c50 <test_print@@Base+0x11b4>
   20d34:	ldr	r3, [r4, #20]
   20d38:	b	20bc8 <flatcc_json_printer_union_field@@Base+0x128>
   20d3c:	mov	r0, r9
   20d40:	bl	14fac <test_print@@Base+0x1510>
   20d44:	ldr	r3, [r4, #20]
   20d48:	add	r0, r3, r0
   20d4c:	str	r0, [r4, #20]
   20d50:	b	20c58 <flatcc_json_printer_union_field@@Base+0x1b8>
   20d54:	mov	r2, sl
   20d58:	mov	r1, #32
   20d5c:	bl	124bc <memset@plt>
   20d60:	ldr	r2, [r4, #20]
   20d64:	add	r2, r2, sl
   20d68:	str	r2, [r4, #20]
   20d6c:	b	20b84 <flatcc_json_printer_union_field@@Base+0xe4>
   20d70:	muleq	r0, r8, r6
   20d74:	andeq	r2, r0, r4, ror r5

00020d78 <flatcc_json_printer_union_table@@Base>:
   20d78:	ldr	r3, [r1, #4]
   20d7c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   20d80:	mov	r4, r0
   20d84:	strd	r6, [sp, #8]
   20d88:	str	r8, [sp, #16]
   20d8c:	str	lr, [sp, #20]
   20d90:	sub	sp, sp, #24
   20d94:	subs	ip, r3, #1
   20d98:	beq	20e78 <flatcc_json_printer_union_table@@Base+0x100>
   20d9c:	ldr	lr, [r1]
   20da0:	mov	r6, #0
   20da4:	mov	r7, #123	; 0x7b
   20da8:	ldr	r1, [r0, #20]
   20dac:	ldr	r3, [r0, #32]
   20db0:	ldr	r5, [lr]
   20db4:	add	r8, r1, #1
   20db8:	add	r3, r3, #1
   20dbc:	str	r8, [r0, #20]
   20dc0:	str	r3, [r0, #32]
   20dc4:	add	r3, lr, r5
   20dc8:	strb	r7, [r1]
   20dcc:	add	r1, sp, #4
   20dd0:	str	ip, [sp, #16]
   20dd4:	str	r6, [sp, #20]
   20dd8:	ldr	ip, [lr, r5]
   20ddc:	str	r3, [sp, #4]
   20de0:	sub	r3, r3, ip
   20de4:	ldrh	ip, [r3]
   20de8:	str	r3, [sp, #8]
   20dec:	str	ip, [sp, #12]
   20df0:	blx	r2
   20df4:	ldrb	r3, [r4, #25]
   20df8:	cmp	r3, r6
   20dfc:	bne	20e2c <flatcc_json_printer_union_table@@Base+0xb4>
   20e00:	ldr	r1, [r4, #20]
   20e04:	add	r2, r1, #1
   20e08:	mov	r3, #125	; 0x7d
   20e0c:	str	r2, [r4, #20]
   20e10:	strb	r3, [r1]
   20e14:	add	sp, sp, #24
   20e18:	ldrd	r4, [sp]
   20e1c:	ldrd	r6, [sp, #8]
   20e20:	ldr	r8, [sp, #16]
   20e24:	add	sp, sp, #20
   20e28:	pop	{pc}		; (ldr pc, [sp], #4)
   20e2c:	ldr	r3, [r4, #20]
   20e30:	mov	r2, #10
   20e34:	add	r1, r3, #1
   20e38:	str	r1, [r4, #20]
   20e3c:	strb	r2, [r3]
   20e40:	ldrb	r1, [r4, #25]
   20e44:	ldr	r3, [r4, #32]
   20e48:	ldr	r2, [r4, #16]
   20e4c:	ldr	r0, [r4, #20]
   20e50:	sub	r3, r3, #1
   20e54:	mul	r5, r3, r1
   20e58:	str	r3, [r4, #32]
   20e5c:	add	r3, r0, r5
   20e60:	cmp	r2, r3
   20e64:	bcs	20e8c <flatcc_json_printer_union_table@@Base+0x114>
   20e68:	mov	r1, r5
   20e6c:	mov	r0, r4
   20e70:	bl	14d14 <test_print@@Base+0x1278>
   20e74:	b	20e00 <flatcc_json_printer_union_table@@Base+0x88>
   20e78:	ldr	r3, [r0, #36]	; 0x24
   20e7c:	cmp	r3, #0
   20e80:	moveq	r3, #2
   20e84:	streq	r3, [r0, #36]	; 0x24
   20e88:	b	20e14 <flatcc_json_printer_union_table@@Base+0x9c>
   20e8c:	mov	r1, #32
   20e90:	mov	r2, r5
   20e94:	bl	124bc <memset@plt>
   20e98:	ldr	r1, [r4, #20]
   20e9c:	add	r1, r1, r5
   20ea0:	b	20e04 <flatcc_json_printer_union_table@@Base+0x8c>

00020ea4 <flatcc_json_printer_union_struct@@Base>:
   20ea4:	ldr	ip, [r0, #20]
   20ea8:	strd	r4, [sp, #-16]!
   20eac:	mov	r4, r0
   20eb0:	ldr	r3, [r0, #32]
   20eb4:	str	r6, [sp, #8]
   20eb8:	str	lr, [sp, #12]
   20ebc:	mov	lr, #123	; 0x7b
   20ec0:	add	r5, ip, #1
   20ec4:	add	r3, r3, #1
   20ec8:	str	r5, [r0, #20]
   20ecc:	str	r3, [r0, #32]
   20ed0:	strb	lr, [ip]
   20ed4:	ldr	r3, [r1]
   20ed8:	ldr	r1, [r3]
   20edc:	add	r1, r3, r1
   20ee0:	blx	r2
   20ee4:	ldrb	r3, [r4, #25]
   20ee8:	cmp	r3, #0
   20eec:	bne	20f14 <flatcc_json_printer_union_struct@@Base+0x70>
   20ef0:	ldr	r1, [r4, #20]
   20ef4:	add	r2, r1, #1
   20ef8:	mov	r3, #125	; 0x7d
   20efc:	str	r2, [r4, #20]
   20f00:	strb	r3, [r1]
   20f04:	ldrd	r4, [sp]
   20f08:	ldr	r6, [sp, #8]
   20f0c:	add	sp, sp, #12
   20f10:	pop	{pc}		; (ldr pc, [sp], #4)
   20f14:	ldr	r3, [r4, #20]
   20f18:	mov	r2, #10
   20f1c:	add	r1, r3, #1
   20f20:	str	r1, [r4, #20]
   20f24:	strb	r2, [r3]
   20f28:	ldrb	r1, [r4, #25]
   20f2c:	ldr	r3, [r4, #32]
   20f30:	ldr	r2, [r4, #16]
   20f34:	ldr	r0, [r4, #20]
   20f38:	sub	r3, r3, #1
   20f3c:	mul	r5, r3, r1
   20f40:	str	r3, [r4, #32]
   20f44:	add	r3, r0, r5
   20f48:	cmp	r2, r3
   20f4c:	bcs	20f60 <flatcc_json_printer_union_struct@@Base+0xbc>
   20f50:	mov	r1, r5
   20f54:	mov	r0, r4
   20f58:	bl	14d14 <test_print@@Base+0x1278>
   20f5c:	b	20ef0 <flatcc_json_printer_union_struct@@Base+0x4c>
   20f60:	mov	r1, #32
   20f64:	mov	r2, r5
   20f68:	bl	124bc <memset@plt>
   20f6c:	ldr	r1, [r4, #20]
   20f70:	add	r1, r1, r5
   20f74:	b	20ef4 <flatcc_json_printer_union_struct@@Base+0x50>

00020f78 <flatcc_json_printer_union_string@@Base>:
   20f78:	ldr	r3, [r1]
   20f7c:	ldr	r2, [r3]
   20f80:	add	r1, r3, r2
   20f84:	ldr	r2, [r3, r2]
   20f88:	add	r1, r1, #4
   20f8c:	b	15f08 <test_print@@Base+0x246c>

00020f90 <flatcc_json_printer_embedded_struct_field@@Base>:
   20f90:	cmp	r1, #0
   20f94:	strd	r4, [sp, #-32]!	; 0xffffffe0
   20f98:	mov	r4, r0
   20f9c:	strd	r6, [sp, #8]
   20fa0:	mov	r7, r3
   20fa4:	strd	r8, [sp, #16]
   20fa8:	mov	r8, r2
   20fac:	str	sl, [sp, #24]
   20fb0:	str	lr, [sp, #28]
   20fb4:	ldr	r2, [r0, #20]
   20fb8:	ldr	r5, [sp, #36]	; 0x24
   20fbc:	ldr	r6, [sp, #40]	; 0x28
   20fc0:	beq	20fd8 <flatcc_json_printer_embedded_struct_field@@Base+0x48>
   20fc4:	add	r1, r2, #1
   20fc8:	mov	r3, #44	; 0x2c
   20fcc:	str	r1, [r0, #20]
   20fd0:	strb	r3, [r2]
   20fd4:	ldr	r2, [r0, #20]
   20fd8:	ldrb	r1, [r4, #25]
   20fdc:	cmp	r1, #0
   20fe0:	bne	2114c <flatcc_json_printer_embedded_struct_field@@Base+0x1bc>
   20fe4:	ldr	r3, [r4, #16]
   20fe8:	cmp	r3, r2
   20fec:	bhi	21000 <flatcc_json_printer_embedded_struct_field@@Base+0x70>
   20ff0:	mov	r0, r4
   20ff4:	ldr	r3, [r4, #44]	; 0x2c
   20ff8:	blx	r3
   20ffc:	ldr	r2, [r4, #20]
   21000:	mov	r3, #34	; 0x22
   21004:	ldr	r1, [sp, #32]
   21008:	strb	r3, [r2]
   2100c:	ldrb	r3, [r4, #26]
   21010:	ldr	r2, [r4, #16]
   21014:	ldr	r0, [r4, #20]
   21018:	cmp	r3, #0
   2101c:	addeq	r0, r0, #1
   21020:	add	r3, r0, r5
   21024:	cmp	r2, r3
   21028:	mov	r2, r5
   2102c:	str	r0, [r4, #20]
   21030:	bhi	210ec <flatcc_json_printer_embedded_struct_field@@Base+0x15c>
   21034:	mov	r0, r4
   21038:	bl	14c50 <test_print@@Base+0x11b4>
   2103c:	ldr	r5, [r4, #20]
   21040:	mov	r3, #34	; 0x22
   21044:	mov	ip, #58	; 0x3a
   21048:	add	r1, r8, r7
   2104c:	mov	r7, #32
   21050:	strb	r3, [r5]
   21054:	mov	lr, #123	; 0x7b
   21058:	mov	r0, r4
   2105c:	ldrb	r3, [r4, #26]
   21060:	ldr	r5, [r4, #20]
   21064:	clz	r3, r3
   21068:	lsr	r3, r3, #5
   2106c:	add	r2, r5, r3
   21070:	add	r2, r2, #1
   21074:	str	r2, [r4, #20]
   21078:	strb	ip, [r5, r3]
   2107c:	ldr	r3, [r4, #20]
   21080:	strb	r7, [r3]
   21084:	ldrb	r3, [r4, #25]
   21088:	ldr	r5, [r4, #20]
   2108c:	ldr	r2, [r4, #32]
   21090:	adds	r3, r3, #0
   21094:	movne	r3, #1
   21098:	add	ip, r5, r3
   2109c:	add	ip, ip, #1
   210a0:	add	r2, r2, #1
   210a4:	str	ip, [r4, #20]
   210a8:	str	r2, [r4, #32]
   210ac:	strb	lr, [r5, r3]
   210b0:	blx	r6
   210b4:	ldrb	r3, [r4, #25]
   210b8:	cmp	r3, #0
   210bc:	bne	21100 <flatcc_json_printer_embedded_struct_field@@Base+0x170>
   210c0:	ldr	r1, [r4, #20]
   210c4:	add	r2, r1, #1
   210c8:	mov	r3, #125	; 0x7d
   210cc:	str	r2, [r4, #20]
   210d0:	strb	r3, [r1]
   210d4:	ldrd	r4, [sp]
   210d8:	ldrd	r6, [sp, #8]
   210dc:	ldrd	r8, [sp, #16]
   210e0:	ldr	sl, [sp, #24]
   210e4:	add	sp, sp, #28
   210e8:	pop	{pc}		; (ldr pc, [sp], #4)
   210ec:	bl	12420 <memcpy@plt>
   210f0:	ldr	r3, [r4, #20]
   210f4:	add	r5, r3, r5
   210f8:	str	r5, [r4, #20]
   210fc:	b	21040 <flatcc_json_printer_embedded_struct_field@@Base+0xb0>
   21100:	ldr	r3, [r4, #20]
   21104:	mov	r2, #10
   21108:	add	r1, r3, #1
   2110c:	str	r1, [r4, #20]
   21110:	strb	r2, [r3]
   21114:	ldrb	r1, [r4, #25]
   21118:	ldr	r3, [r4, #32]
   2111c:	ldr	r2, [r4, #16]
   21120:	ldr	r0, [r4, #20]
   21124:	sub	r3, r3, #1
   21128:	mul	r5, r3, r1
   2112c:	str	r3, [r4, #32]
   21130:	add	r3, r0, r5
   21134:	cmp	r2, r3
   21138:	bcs	211ac <flatcc_json_printer_embedded_struct_field@@Base+0x21c>
   2113c:	mov	r1, r5
   21140:	mov	r0, r4
   21144:	bl	14d14 <test_print@@Base+0x1278>
   21148:	b	210c0 <flatcc_json_printer_embedded_struct_field@@Base+0x130>
   2114c:	add	r1, r2, #1
   21150:	mov	r3, #10
   21154:	str	r1, [r4, #20]
   21158:	strb	r3, [r2]
   2115c:	ldrb	r3, [r4, #25]
   21160:	ldr	r1, [r4, #16]
   21164:	ldr	r2, [r4, #32]
   21168:	ldr	r0, [r4, #20]
   2116c:	mul	r9, r2, r3
   21170:	add	r3, r0, r9
   21174:	cmp	r1, r3
   21178:	bcs	21190 <flatcc_json_printer_embedded_struct_field@@Base+0x200>
   2117c:	mov	r1, r9
   21180:	mov	r0, r4
   21184:	bl	14d14 <test_print@@Base+0x1278>
   21188:	ldr	r2, [r4, #20]
   2118c:	b	21000 <flatcc_json_printer_embedded_struct_field@@Base+0x70>
   21190:	mov	r2, r9
   21194:	mov	r1, #32
   21198:	bl	124bc <memset@plt>
   2119c:	ldr	r2, [r4, #20]
   211a0:	add	r2, r2, r9
   211a4:	str	r2, [r4, #20]
   211a8:	b	21000 <flatcc_json_printer_embedded_struct_field@@Base+0x70>
   211ac:	mov	r1, r7
   211b0:	mov	r2, r5
   211b4:	bl	124bc <memset@plt>
   211b8:	ldr	r1, [r4, #20]
   211bc:	add	r1, r1, r5
   211c0:	b	210c4 <flatcc_json_printer_embedded_struct_field@@Base+0x134>

000211c4 <flatcc_json_printer_struct_field@@Base>:
   211c4:	ldr	ip, [r1, #8]
   211c8:	add	r2, r2, #2
   211cc:	lsl	r2, r2, #1
   211d0:	cmp	r2, ip
   211d4:	bxge	lr
   211d8:	ldr	ip, [r1, #4]
   211dc:	ldrh	r2, [ip, r2]
   211e0:	cmp	r2, #0
   211e4:	bxeq	lr
   211e8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   211ec:	ldr	r5, [r1]
   211f0:	strd	r6, [sp, #8]
   211f4:	str	r8, [sp, #16]
   211f8:	str	lr, [sp, #20]
   211fc:	adds	r5, r5, r2
   21200:	beq	21334 <flatcc_json_printer_struct_field@@Base+0x170>
   21204:	ldr	ip, [r1, #16]
   21208:	ldr	r2, [r0, #20]
   2120c:	cmp	ip, #0
   21210:	add	ip, ip, #1
   21214:	str	ip, [r1, #16]
   21218:	beq	21230 <flatcc_json_printer_struct_field@@Base+0x6c>
   2121c:	add	ip, r2, #1
   21220:	mov	r1, #44	; 0x2c
   21224:	str	ip, [r0, #20]
   21228:	strb	r1, [r2]
   2122c:	ldr	r2, [r0, #20]
   21230:	mov	r6, r3
   21234:	mov	r4, r0
   21238:	ldrb	r1, [r0, #25]
   2123c:	cmp	r1, #0
   21240:	bne	21368 <flatcc_json_printer_struct_field@@Base+0x1a4>
   21244:	ldr	r3, [r0, #16]
   21248:	cmp	r3, r2
   2124c:	bls	21358 <flatcc_json_printer_struct_field@@Base+0x194>
   21250:	mov	r3, #34	; 0x22
   21254:	mov	r1, r6
   21258:	strb	r3, [r2]
   2125c:	ldrb	r3, [r4, #26]
   21260:	ldr	r2, [r4, #16]
   21264:	ldr	r0, [r4, #20]
   21268:	cmp	r3, #0
   2126c:	addeq	r0, r0, #1
   21270:	ldr	r3, [sp, #24]
   21274:	str	r0, [r4, #20]
   21278:	add	r3, r0, r3
   2127c:	cmp	r2, r3
   21280:	ldr	r2, [sp, #24]
   21284:	bls	21348 <flatcc_json_printer_struct_field@@Base+0x184>
   21288:	bl	12420 <memcpy@plt>
   2128c:	ldr	r3, [r4, #20]
   21290:	ldr	r2, [sp, #24]
   21294:	add	r3, r3, r2
   21298:	str	r3, [r4, #20]
   2129c:	mov	r2, #34	; 0x22
   212a0:	mov	r6, #58	; 0x3a
   212a4:	mov	r1, r5
   212a8:	mov	r5, #32
   212ac:	strb	r2, [r3]
   212b0:	mov	lr, #123	; 0x7b
   212b4:	mov	r0, r4
   212b8:	ldrb	r3, [r4, #26]
   212bc:	ldr	ip, [r4, #20]
   212c0:	clz	r3, r3
   212c4:	lsr	r3, r3, #5
   212c8:	add	r2, ip, r3
   212cc:	add	r2, r2, #1
   212d0:	str	r2, [r4, #20]
   212d4:	strb	r6, [ip, r3]
   212d8:	ldr	r3, [r4, #20]
   212dc:	strb	r5, [r3]
   212e0:	ldrb	r3, [r4, #25]
   212e4:	ldr	r6, [r4, #20]
   212e8:	ldr	r2, [r4, #32]
   212ec:	adds	r3, r3, #0
   212f0:	movne	r3, #1
   212f4:	add	ip, r6, r3
   212f8:	add	ip, ip, #1
   212fc:	add	r2, r2, #1
   21300:	str	ip, [r4, #20]
   21304:	str	r2, [r4, #32]
   21308:	strb	lr, [r6, r3]
   2130c:	ldr	r3, [sp, #28]
   21310:	blx	r3
   21314:	ldrb	r3, [r4, #25]
   21318:	cmp	r3, #0
   2131c:	bne	213ac <flatcc_json_printer_struct_field@@Base+0x1e8>
   21320:	ldr	r1, [r4, #20]
   21324:	add	r2, r1, #1
   21328:	mov	r3, #125	; 0x7d
   2132c:	str	r2, [r4, #20]
   21330:	strb	r3, [r1]
   21334:	ldrd	r4, [sp]
   21338:	ldrd	r6, [sp, #8]
   2133c:	ldr	r8, [sp, #16]
   21340:	add	sp, sp, #20
   21344:	pop	{pc}		; (ldr pc, [sp], #4)
   21348:	mov	r0, r4
   2134c:	bl	14c50 <test_print@@Base+0x11b4>
   21350:	ldr	r3, [r4, #20]
   21354:	b	2129c <flatcc_json_printer_struct_field@@Base+0xd8>
   21358:	ldr	r3, [r0, #44]	; 0x2c
   2135c:	blx	r3
   21360:	ldr	r2, [r4, #20]
   21364:	b	21250 <flatcc_json_printer_struct_field@@Base+0x8c>
   21368:	add	r1, r2, #1
   2136c:	mov	r3, #10
   21370:	str	r1, [r0, #20]
   21374:	strb	r3, [r2]
   21378:	ldrb	r7, [r0, #25]
   2137c:	ldr	r2, [r4, #32]
   21380:	ldr	r1, [r0, #16]
   21384:	ldr	r0, [r0, #20]
   21388:	mul	r7, r2, r7
   2138c:	add	r3, r0, r7
   21390:	cmp	r1, r3
   21394:	bcs	213f8 <flatcc_json_printer_struct_field@@Base+0x234>
   21398:	mov	r1, r7
   2139c:	mov	r0, r4
   213a0:	bl	14d14 <test_print@@Base+0x1278>
   213a4:	ldr	r2, [r4, #20]
   213a8:	b	21250 <flatcc_json_printer_struct_field@@Base+0x8c>
   213ac:	ldr	r3, [r4, #20]
   213b0:	mov	r2, #10
   213b4:	add	r1, r3, #1
   213b8:	str	r1, [r4, #20]
   213bc:	strb	r2, [r3]
   213c0:	ldrb	r1, [r4, #25]
   213c4:	ldr	r3, [r4, #32]
   213c8:	ldr	r2, [r4, #16]
   213cc:	ldr	r0, [r4, #20]
   213d0:	sub	r3, r3, #1
   213d4:	mul	r6, r3, r1
   213d8:	str	r3, [r4, #32]
   213dc:	add	r3, r0, r6
   213e0:	cmp	r2, r3
   213e4:	bcs	21414 <flatcc_json_printer_struct_field@@Base+0x250>
   213e8:	mov	r1, r6
   213ec:	mov	r0, r4
   213f0:	bl	14d14 <test_print@@Base+0x1278>
   213f4:	b	21320 <flatcc_json_printer_struct_field@@Base+0x15c>
   213f8:	mov	r2, r7
   213fc:	mov	r1, #32
   21400:	bl	124bc <memset@plt>
   21404:	ldr	r2, [r4, #20]
   21408:	add	r2, r2, r7
   2140c:	str	r2, [r4, #20]
   21410:	b	21250 <flatcc_json_printer_struct_field@@Base+0x8c>
   21414:	mov	r1, r5
   21418:	mov	r2, r6
   2141c:	bl	124bc <memset@plt>
   21420:	ldr	r1, [r4, #20]
   21424:	add	r1, r1, r6
   21428:	b	21324 <flatcc_json_printer_struct_field@@Base+0x160>

0002142c <flatcc_json_printer_struct_as_root@@Base>:
   2142c:	strd	r4, [sp, #-16]!
   21430:	mov	r4, r0
   21434:	mov	r5, r1
   21438:	str	r6, [sp, #8]
   2143c:	str	lr, [sp, #12]
   21440:	bl	15134 <test_print@@Base+0x1698>
   21444:	cmp	r0, #0
   21448:	beq	21574 <flatcc_json_printer_struct_as_root@@Base+0x148>
   2144c:	ldr	r2, [r4, #20]
   21450:	mov	r1, #123	; 0x7b
   21454:	mov	r0, r4
   21458:	ldr	r3, [r4, #32]
   2145c:	add	ip, r2, #1
   21460:	add	r3, r3, #1
   21464:	str	ip, [r4, #20]
   21468:	str	r3, [r4, #32]
   2146c:	strb	r1, [r2]
   21470:	ldr	r1, [r5]
   21474:	ldr	r3, [sp, #16]
   21478:	add	r1, r5, r1
   2147c:	blx	r3
   21480:	ldrb	r3, [r4, #25]
   21484:	cmp	r3, #0
   21488:	bne	21510 <flatcc_json_printer_struct_as_root@@Base+0xe4>
   2148c:	ldr	r1, [r4, #20]
   21490:	mov	r3, #125	; 0x7d
   21494:	add	r2, r1, #1
   21498:	str	r2, [r4, #20]
   2149c:	strb	r3, [r1]
   214a0:	ldrb	r3, [r4, #25]
   214a4:	cmp	r3, #0
   214a8:	bne	214ec <flatcc_json_printer_struct_as_root@@Base+0xc0>
   214ac:	mov	r1, #1
   214b0:	mov	r0, r4
   214b4:	ldr	r3, [r4, #44]	; 0x2c
   214b8:	blx	r3
   214bc:	ldr	r3, [r4, #36]	; 0x24
   214c0:	cmp	r3, #0
   214c4:	bne	21574 <flatcc_json_printer_struct_as_root@@Base+0x148>
   214c8:	ldr	r2, [r4]
   214cc:	ldr	r3, [r4, #12]
   214d0:	ldr	r0, [r4, #20]
   214d4:	sub	r0, r0, r2
   214d8:	add	r0, r0, r3
   214dc:	ldrd	r4, [sp]
   214e0:	ldr	r6, [sp, #8]
   214e4:	add	sp, sp, #12
   214e8:	pop	{pc}		; (ldr pc, [sp], #4)
   214ec:	ldr	r3, [r4, #32]
   214f0:	cmp	r3, #0
   214f4:	bne	214ac <flatcc_json_printer_struct_as_root@@Base+0x80>
   214f8:	ldr	r3, [r4, #20]
   214fc:	mov	r2, #10
   21500:	add	r1, r3, #1
   21504:	str	r1, [r4, #20]
   21508:	strb	r2, [r3]
   2150c:	b	214ac <flatcc_json_printer_struct_as_root@@Base+0x80>
   21510:	ldr	r3, [r4, #20]
   21514:	mov	r2, #10
   21518:	add	r1, r3, #1
   2151c:	str	r1, [r4, #20]
   21520:	strb	r2, [r3]
   21524:	ldrb	r1, [r4, #25]
   21528:	ldr	r3, [r4, #32]
   2152c:	ldr	r2, [r4, #16]
   21530:	ldr	r0, [r4, #20]
   21534:	sub	r3, r3, #1
   21538:	mul	r5, r3, r1
   2153c:	str	r3, [r4, #32]
   21540:	add	r3, r0, r5
   21544:	cmp	r2, r3
   21548:	bcs	2155c <flatcc_json_printer_struct_as_root@@Base+0x130>
   2154c:	mov	r1, r5
   21550:	mov	r0, r4
   21554:	bl	14d14 <test_print@@Base+0x1278>
   21558:	b	2148c <flatcc_json_printer_struct_as_root@@Base+0x60>
   2155c:	mov	r1, #32
   21560:	mov	r2, r5
   21564:	bl	124bc <memset@plt>
   21568:	ldr	r1, [r4, #20]
   2156c:	add	r1, r1, r5
   21570:	b	21490 <flatcc_json_printer_struct_as_root@@Base+0x64>
   21574:	mvn	r0, #0
   21578:	b	214dc <flatcc_json_printer_struct_as_root@@Base+0xb0>

0002157c <flatcc_json_printer_table_as_root@@Base>:
   2157c:	strd	r4, [sp, #-12]!
   21580:	mov	r4, r0
   21584:	mov	r5, r1
   21588:	str	lr, [sp, #8]
   2158c:	sub	sp, sp, #28
   21590:	bl	15134 <test_print@@Base+0x1698>
   21594:	cmp	r0, #0
   21598:	beq	216f0 <flatcc_json_printer_table_as_root@@Base+0x174>
   2159c:	ldr	r1, [r4, #20]
   215a0:	mov	r0, #123	; 0x7b
   215a4:	ldr	r3, [r4, #32]
   215a8:	ldr	r2, [r5]
   215ac:	add	ip, r1, #1
   215b0:	add	r3, r3, #1
   215b4:	str	ip, [r4, #20]
   215b8:	mov	ip, #0
   215bc:	str	r3, [r4, #32]
   215c0:	add	r3, r5, r2
   215c4:	strb	r0, [r1]
   215c8:	mov	r0, #99	; 0x63
   215cc:	add	r1, sp, #4
   215d0:	ldr	r2, [r5, r2]
   215d4:	str	r3, [sp, #4]
   215d8:	str	r0, [sp, #16]
   215dc:	mov	r0, r4
   215e0:	str	ip, [sp, #20]
   215e4:	sub	r3, r3, r2
   215e8:	ldrh	r2, [r3]
   215ec:	str	r3, [sp, #8]
   215f0:	ldr	r3, [sp, #40]	; 0x28
   215f4:	str	r2, [sp, #12]
   215f8:	blx	r3
   215fc:	ldrb	r3, [r4, #25]
   21600:	cmp	r3, #0
   21604:	bne	2168c <flatcc_json_printer_table_as_root@@Base+0x110>
   21608:	ldr	r1, [r4, #20]
   2160c:	mov	r3, #125	; 0x7d
   21610:	add	r2, r1, #1
   21614:	str	r2, [r4, #20]
   21618:	strb	r3, [r1]
   2161c:	ldrb	r3, [r4, #25]
   21620:	cmp	r3, #0
   21624:	bne	21668 <flatcc_json_printer_table_as_root@@Base+0xec>
   21628:	mov	r1, #1
   2162c:	mov	r0, r4
   21630:	ldr	r3, [r4, #44]	; 0x2c
   21634:	blx	r3
   21638:	ldr	r3, [r4, #36]	; 0x24
   2163c:	cmp	r3, #0
   21640:	bne	216f0 <flatcc_json_printer_table_as_root@@Base+0x174>
   21644:	ldr	r2, [r4]
   21648:	ldr	r3, [r4, #12]
   2164c:	ldr	r0, [r4, #20]
   21650:	sub	r0, r0, r2
   21654:	add	r0, r0, r3
   21658:	add	sp, sp, #28
   2165c:	ldrd	r4, [sp]
   21660:	add	sp, sp, #8
   21664:	pop	{pc}		; (ldr pc, [sp], #4)
   21668:	ldr	r3, [r4, #32]
   2166c:	cmp	r3, #0
   21670:	bne	21628 <flatcc_json_printer_table_as_root@@Base+0xac>
   21674:	ldr	r3, [r4, #20]
   21678:	mov	r2, #10
   2167c:	add	r1, r3, #1
   21680:	str	r1, [r4, #20]
   21684:	strb	r2, [r3]
   21688:	b	21628 <flatcc_json_printer_table_as_root@@Base+0xac>
   2168c:	ldr	r3, [r4, #20]
   21690:	mov	r2, #10
   21694:	add	r1, r3, #1
   21698:	str	r1, [r4, #20]
   2169c:	strb	r2, [r3]
   216a0:	ldrb	r1, [r4, #25]
   216a4:	ldr	r3, [r4, #32]
   216a8:	ldr	r2, [r4, #16]
   216ac:	ldr	r0, [r4, #20]
   216b0:	sub	r3, r3, #1
   216b4:	mul	r5, r3, r1
   216b8:	str	r3, [r4, #32]
   216bc:	add	r3, r0, r5
   216c0:	cmp	r2, r3
   216c4:	bcs	216d8 <flatcc_json_printer_table_as_root@@Base+0x15c>
   216c8:	mov	r1, r5
   216cc:	mov	r0, r4
   216d0:	bl	14d14 <test_print@@Base+0x1278>
   216d4:	b	21608 <flatcc_json_printer_table_as_root@@Base+0x8c>
   216d8:	mov	r1, #32
   216dc:	mov	r2, r5
   216e0:	bl	124bc <memset@plt>
   216e4:	ldr	r1, [r4, #20]
   216e8:	add	r1, r1, r5
   216ec:	b	2160c <flatcc_json_printer_table_as_root@@Base+0x90>
   216f0:	mvn	r0, #0
   216f4:	b	21658 <flatcc_json_printer_table_as_root@@Base+0xdc>

000216f8 <flatcc_json_printer_struct_as_nested_root@@Base>:
   216f8:	ldr	ip, [r1, #8]
   216fc:	add	r2, r2, #2
   21700:	lsl	r2, r2, #1
   21704:	cmp	r2, ip
   21708:	bxge	lr
   2170c:	ldr	ip, [r1, #4]
   21710:	ldrh	r2, [ip, r2]
   21714:	cmp	r2, #0
   21718:	bxeq	lr
   2171c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   21720:	ldr	ip, [r1]
   21724:	strd	r6, [sp, #8]
   21728:	strd	r8, [sp, #16]
   2172c:	str	sl, [sp, #24]
   21730:	str	lr, [sp, #28]
   21734:	adds	r7, ip, r2
   21738:	beq	217e0 <flatcc_json_printer_struct_as_nested_root@@Base+0xe8>
   2173c:	ldr	r5, [ip, r2]
   21740:	mov	r6, r3
   21744:	mov	r9, r1
   21748:	mov	r4, r0
   2174c:	ldr	r3, [sp, #36]	; 0x24
   21750:	add	r8, r7, r5
   21754:	ldr	r2, [r7, r5]
   21758:	mov	r1, r8
   2175c:	bl	15134 <test_print@@Base+0x1698>
   21760:	cmp	r0, #0
   21764:	beq	217e0 <flatcc_json_printer_struct_as_nested_root@@Base+0xe8>
   21768:	ldr	r3, [r9, #16]
   2176c:	add	r2, r3, #1
   21770:	cmp	r3, #0
   21774:	str	r2, [r9, #16]
   21778:	bne	217f8 <flatcc_json_printer_struct_as_nested_root@@Base+0x100>
   2177c:	mov	r1, r6
   21780:	mov	r0, r4
   21784:	ldr	r2, [sp, #32]
   21788:	bl	16158 <test_print@@Base+0x26bc>
   2178c:	ldr	r2, [r4, #20]
   21790:	mov	r1, #123	; 0x7b
   21794:	mov	r0, r4
   21798:	ldr	r3, [r4, #32]
   2179c:	add	ip, r2, #1
   217a0:	add	r3, r3, #1
   217a4:	str	ip, [r4, #20]
   217a8:	str	r3, [r4, #32]
   217ac:	strb	r1, [r2]
   217b0:	ldr	r1, [r7, r5]
   217b4:	ldr	r3, [sp, #40]	; 0x28
   217b8:	add	r1, r8, r1
   217bc:	blx	r3
   217c0:	ldrb	r3, [r4, #25]
   217c4:	cmp	r3, #0
   217c8:	ldr	r3, [r4, #20]
   217cc:	bne	21810 <flatcc_json_printer_struct_as_nested_root@@Base+0x118>
   217d0:	add	r1, r3, #1
   217d4:	mov	r2, #125	; 0x7d
   217d8:	str	r1, [r4, #20]
   217dc:	strb	r2, [r3]
   217e0:	ldrd	r4, [sp]
   217e4:	ldrd	r6, [sp, #8]
   217e8:	ldrd	r8, [sp, #16]
   217ec:	ldr	sl, [sp, #24]
   217f0:	add	sp, sp, #28
   217f4:	pop	{pc}		; (ldr pc, [sp], #4)
   217f8:	ldr	r3, [r4, #20]
   217fc:	mov	r2, #44	; 0x2c
   21800:	add	r1, r3, #1
   21804:	str	r1, [r4, #20]
   21808:	strb	r2, [r3]
   2180c:	b	2177c <flatcc_json_printer_struct_as_nested_root@@Base+0x84>
   21810:	add	r1, r3, #1
   21814:	mov	r2, #10
   21818:	str	r1, [r4, #20]
   2181c:	strb	r2, [r3]
   21820:	ldrb	r3, [r4, #25]
   21824:	ldr	r2, [r4, #32]
   21828:	ldr	r1, [r4, #16]
   2182c:	ldr	r0, [r4, #20]
   21830:	sub	r2, r2, #1
   21834:	mul	r5, r2, r3
   21838:	str	r2, [r4, #32]
   2183c:	add	r3, r0, r5
   21840:	cmp	r1, r3
   21844:	bcs	2185c <flatcc_json_printer_struct_as_nested_root@@Base+0x164>
   21848:	mov	r1, r5
   2184c:	mov	r0, r4
   21850:	bl	14d14 <test_print@@Base+0x1278>
   21854:	ldr	r3, [r4, #20]
   21858:	b	217d0 <flatcc_json_printer_struct_as_nested_root@@Base+0xd8>
   2185c:	mov	r2, r5
   21860:	mov	r1, #32
   21864:	bl	124bc <memset@plt>
   21868:	ldr	r3, [r4, #20]
   2186c:	add	r3, r3, r5
   21870:	b	217d0 <flatcc_json_printer_struct_as_nested_root@@Base+0xd8>

00021874 <flatcc_json_printer_table_as_nested_root@@Base>:
   21874:	ldr	ip, [r1, #8]
   21878:	add	r2, r2, #2
   2187c:	lsl	r2, r2, #1
   21880:	cmp	r2, ip
   21884:	bxge	lr
   21888:	ldr	ip, [r1, #4]
   2188c:	ldrh	r2, [ip, r2]
   21890:	cmp	r2, #0
   21894:	bxeq	lr
   21898:	strd	r4, [sp, #-28]!	; 0xffffffe4
   2189c:	ldr	ip, [r1]
   218a0:	strd	r6, [sp, #8]
   218a4:	str	lr, [sp, #24]
   218a8:	strd	r8, [sp, #16]
   218ac:	sub	sp, sp, #28
   218b0:	adds	lr, ip, r2
   218b4:	beq	21a40 <flatcc_json_printer_table_as_nested_root@@Base+0x1cc>
   218b8:	ldr	r2, [ip, r2]
   218bc:	mov	r6, r3
   218c0:	mov	r5, r1
   218c4:	mov	r4, r0
   218c8:	ldr	r3, [sp, #60]	; 0x3c
   218cc:	add	r8, lr, r2
   218d0:	ldr	r2, [lr, r2]
   218d4:	add	r7, r8, #4
   218d8:	mov	r1, r7
   218dc:	bl	15134 <test_print@@Base+0x1698>
   218e0:	cmp	r0, #0
   218e4:	beq	21a40 <flatcc_json_printer_table_as_nested_root@@Base+0x1cc>
   218e8:	ldr	r2, [r5, #16]
   218ec:	ldr	r3, [r4, #20]
   218f0:	cmp	r2, #0
   218f4:	add	r2, r2, #1
   218f8:	str	r2, [r5, #16]
   218fc:	bne	21a70 <flatcc_json_printer_table_as_nested_root@@Base+0x1fc>
   21900:	ldrb	r1, [r4, #25]
   21904:	cmp	r1, #0
   21908:	bne	21a90 <flatcc_json_printer_table_as_nested_root@@Base+0x21c>
   2190c:	ldr	r2, [r4, #16]
   21910:	cmp	r2, r3
   21914:	bhi	21928 <flatcc_json_printer_table_as_nested_root@@Base+0xb4>
   21918:	mov	r0, r4
   2191c:	ldr	r3, [r4, #44]	; 0x2c
   21920:	blx	r3
   21924:	ldr	r3, [r4, #20]
   21928:	mov	r2, #34	; 0x22
   2192c:	mov	r1, r6
   21930:	strb	r2, [r3]
   21934:	ldrb	r3, [r4, #26]
   21938:	ldr	r2, [r4, #16]
   2193c:	ldr	r0, [r4, #20]
   21940:	cmp	r3, #0
   21944:	addeq	r0, r0, #1
   21948:	ldr	r3, [sp, #56]	; 0x38
   2194c:	str	r0, [r4, #20]
   21950:	add	r3, r0, r3
   21954:	cmp	r2, r3
   21958:	ldr	r2, [sp, #56]	; 0x38
   2195c:	bhi	21a58 <flatcc_json_printer_table_as_nested_root@@Base+0x1e4>
   21960:	mov	r0, r4
   21964:	bl	14c50 <test_print@@Base+0x11b4>
   21968:	ldr	r3, [r4, #20]
   2196c:	mov	r2, #34	; 0x22
   21970:	mov	r0, #58	; 0x3a
   21974:	mov	r6, #32
   21978:	strb	r2, [r3]
   2197c:	ldrb	r3, [r4, #26]
   21980:	ldr	r1, [r4, #20]
   21984:	clz	r3, r3
   21988:	lsr	r3, r3, #5
   2198c:	add	r2, r1, r3
   21990:	add	r2, r2, #1
   21994:	str	r2, [r4, #20]
   21998:	strb	r0, [r1, r3]
   2199c:	ldr	r3, [r4, #20]
   219a0:	strb	r6, [r3]
   219a4:	ldrb	r3, [r4, #25]
   219a8:	ldr	ip, [r4, #20]
   219ac:	ldr	r1, [r5, #12]
   219b0:	adds	r3, r3, #0
   219b4:	movne	r3, #1
   219b8:	add	r2, ip, r3
   219bc:	subs	r0, r1, #1
   219c0:	str	r2, [r4, #20]
   219c4:	beq	21ad4 <flatcc_json_printer_table_as_nested_root@@Base+0x260>
   219c8:	ldr	r1, [r4, #32]
   219cc:	add	r2, r2, #1
   219d0:	mov	r5, #0
   219d4:	ldr	lr, [r8, #4]
   219d8:	mov	r8, #123	; 0x7b
   219dc:	str	r2, [r4, #20]
   219e0:	add	r2, r1, #1
   219e4:	add	r1, sp, #4
   219e8:	str	r2, [r4, #32]
   219ec:	strb	r8, [ip, r3]
   219f0:	add	r3, r7, lr
   219f4:	str	r0, [sp, #16]
   219f8:	mov	r0, r4
   219fc:	str	r5, [sp, #20]
   21a00:	ldr	r2, [r7, lr]
   21a04:	str	r3, [sp, #4]
   21a08:	sub	r3, r3, r2
   21a0c:	ldrh	r2, [r3]
   21a10:	str	r3, [sp, #8]
   21a14:	ldr	r3, [sp, #64]	; 0x40
   21a18:	str	r2, [sp, #12]
   21a1c:	blx	r3
   21a20:	ldrb	r3, [r4, #25]
   21a24:	cmp	r3, r5
   21a28:	ldr	r3, [r4, #20]
   21a2c:	bne	21ae8 <flatcc_json_printer_table_as_nested_root@@Base+0x274>
   21a30:	add	r1, r3, #1
   21a34:	mov	r2, #125	; 0x7d
   21a38:	str	r1, [r4, #20]
   21a3c:	strb	r2, [r3]
   21a40:	add	sp, sp, #28
   21a44:	ldrd	r4, [sp]
   21a48:	ldrd	r6, [sp, #8]
   21a4c:	ldrd	r8, [sp, #16]
   21a50:	add	sp, sp, #24
   21a54:	pop	{pc}		; (ldr pc, [sp], #4)
   21a58:	bl	12420 <memcpy@plt>
   21a5c:	ldr	r3, [r4, #20]
   21a60:	ldr	r2, [sp, #56]	; 0x38
   21a64:	add	r3, r3, r2
   21a68:	str	r3, [r4, #20]
   21a6c:	b	2196c <flatcc_json_printer_table_as_nested_root@@Base+0xf8>
   21a70:	add	r1, r3, #1
   21a74:	mov	r2, #44	; 0x2c
   21a78:	str	r1, [r4, #20]
   21a7c:	strb	r2, [r3]
   21a80:	ldrb	r1, [r4, #25]
   21a84:	ldr	r3, [r4, #20]
   21a88:	cmp	r1, #0
   21a8c:	beq	2190c <flatcc_json_printer_table_as_nested_root@@Base+0x98>
   21a90:	add	r1, r3, #1
   21a94:	mov	r2, #10
   21a98:	str	r1, [r4, #20]
   21a9c:	strb	r2, [r3]
   21aa0:	ldrb	r3, [r4, #25]
   21aa4:	ldr	r2, [r4, #16]
   21aa8:	ldr	r9, [r4, #32]
   21aac:	ldr	r0, [r4, #20]
   21ab0:	mul	r9, r9, r3
   21ab4:	add	r3, r0, r9
   21ab8:	cmp	r2, r3
   21abc:	bcs	21b34 <flatcc_json_printer_table_as_nested_root@@Base+0x2c0>
   21ac0:	mov	r1, r9
   21ac4:	mov	r0, r4
   21ac8:	bl	14d14 <test_print@@Base+0x1278>
   21acc:	ldr	r3, [r4, #20]
   21ad0:	b	21928 <flatcc_json_printer_table_as_nested_root@@Base+0xb4>
   21ad4:	ldr	r3, [r4, #36]	; 0x24
   21ad8:	cmp	r3, #0
   21adc:	moveq	r3, #2
   21ae0:	streq	r3, [r4, #36]	; 0x24
   21ae4:	b	21a40 <flatcc_json_printer_table_as_nested_root@@Base+0x1cc>
   21ae8:	add	r1, r3, #1
   21aec:	mov	r2, #10
   21af0:	str	r1, [r4, #20]
   21af4:	strb	r2, [r3]
   21af8:	ldrb	r3, [r4, #25]
   21afc:	ldr	r2, [r4, #32]
   21b00:	ldr	r1, [r4, #16]
   21b04:	ldr	r0, [r4, #20]
   21b08:	sub	r2, r2, #1
   21b0c:	mul	r5, r2, r3
   21b10:	str	r2, [r4, #32]
   21b14:	add	r3, r0, r5
   21b18:	cmp	r1, r3
   21b1c:	bcs	21b50 <flatcc_json_printer_table_as_nested_root@@Base+0x2dc>
   21b20:	mov	r1, r5
   21b24:	mov	r0, r4
   21b28:	bl	14d14 <test_print@@Base+0x1278>
   21b2c:	ldr	r3, [r4, #20]
   21b30:	b	21a30 <flatcc_json_printer_table_as_nested_root@@Base+0x1bc>
   21b34:	mov	r2, r9
   21b38:	mov	r1, #32
   21b3c:	bl	124bc <memset@plt>
   21b40:	ldr	r3, [r4, #20]
   21b44:	add	r3, r3, r9
   21b48:	str	r3, [r4, #20]
   21b4c:	b	21928 <flatcc_json_printer_table_as_nested_root@@Base+0xb4>
   21b50:	mov	r1, r6
   21b54:	mov	r2, r5
   21b58:	bl	124bc <memset@plt>
   21b5c:	ldr	r3, [r4, #20]
   21b60:	add	r3, r3, r5
   21b64:	b	21a30 <flatcc_json_printer_table_as_nested_root@@Base+0x1bc>

00021b68 <flatcc_json_printer_init@@Base>:
   21b68:	strd	r4, [sp, #-16]!
   21b6c:	mov	r2, #48	; 0x30
   21b70:	mov	r5, r1
   21b74:	str	r6, [sp, #8]
   21b78:	mov	r1, #0
   21b7c:	mov	r4, r0
   21b80:	ldr	r6, [pc, #128]	; 21c08 <flatcc_json_printer_init@@Base+0xa0>
   21b84:	str	lr, [sp, #12]
   21b88:	bl	124bc <memset@plt>
   21b8c:	cmp	r5, #0
   21b90:	add	r6, pc, r6
   21b94:	beq	21bf0 <flatcc_json_printer_init@@Base+0x88>
   21b98:	ldr	r3, [pc, #108]	; 21c0c <flatcc_json_printer_init@@Base+0xa4>
   21b9c:	movw	r0, #16448	; 0x4040
   21ba0:	str	r5, [r4, #40]	; 0x28
   21ba4:	add	r3, pc, r3
   21ba8:	str	r3, [r4, #44]	; 0x2c
   21bac:	bl	12480 <malloc@plt>
   21bb0:	cmp	r0, #0
   21bb4:	str	r0, [r4]
   21bb8:	beq	21c00 <flatcc_json_printer_init@@Base+0x98>
   21bbc:	add	ip, r0, #16384	; 0x4000
   21bc0:	mov	r3, #1
   21bc4:	movw	r1, #16448	; 0x4040
   21bc8:	mov	r2, #16384	; 0x4000
   21bcc:	str	r0, [r4, #20]
   21bd0:	mov	r0, #0
   21bd4:	stmib	r4, {r1, r2}
   21bd8:	str	ip, [r4, #16]
   21bdc:	strb	r3, [r4, #24]
   21be0:	ldrd	r4, [sp]
   21be4:	ldr	r6, [sp, #8]
   21be8:	add	sp, sp, #12
   21bec:	pop	{pc}		; (ldr pc, [sp], #4)
   21bf0:	ldr	r3, [pc, #24]	; 21c10 <flatcc_json_printer_init@@Base+0xa8>
   21bf4:	ldr	r3, [r6, r3]
   21bf8:	ldr	r5, [r3]
   21bfc:	b	21b98 <flatcc_json_printer_init@@Base+0x30>
   21c00:	mvn	r0, #0
   21c04:	b	21be0 <flatcc_json_printer_init@@Base+0x78>
   21c08:	andeq	r2, r1, r8, ror #8
   21c0c:			; <UNDEFINED> instruction: 0xffff3290
   21c10:	andeq	r0, r0, r0, lsl #1

00021c14 <flatcc_json_printer_init_buffer@@Base>:
   21c14:	cmp	r2, #63	; 0x3f
   21c18:	strd	r4, [sp, #-16]!
   21c1c:	str	r6, [sp, #8]
   21c20:	str	lr, [sp, #12]
   21c24:	bls	21c80 <flatcc_json_printer_init_buffer@@Base+0x6c>
   21c28:	mov	r4, r0
   21c2c:	mov	r6, r1
   21c30:	mov	r5, r2
   21c34:	mov	r1, #0
   21c38:	mov	r2, #32
   21c3c:	add	r0, r0, #12
   21c40:	bl	124bc <memset@plt>
   21c44:	ldr	r3, [pc, #88]	; 21ca4 <flatcc_json_printer_init_buffer@@Base+0x90>
   21c48:	sub	r2, r5, #64	; 0x40
   21c4c:	mov	r0, #0
   21c50:	add	r1, r6, r2
   21c54:	str	r6, [r4]
   21c58:	str	r5, [r4, #4]
   21c5c:	str	r2, [r4, #8]
   21c60:	str	r1, [r4, #16]
   21c64:	add	r3, pc, r3
   21c68:	str	r6, [r4, #20]
   21c6c:	ldr	r6, [sp, #8]
   21c70:	str	r3, [r4, #44]	; 0x2c
   21c74:	ldrd	r4, [sp]
   21c78:	add	sp, sp, #12
   21c7c:	pop	{pc}		; (ldr pc, [sp], #4)
   21c80:	ldr	r3, [pc, #32]	; 21ca8 <flatcc_json_printer_init_buffer@@Base+0x94>
   21c84:	movw	r2, #1165	; 0x48d
   21c88:	ldr	r1, [pc, #28]	; 21cac <flatcc_json_printer_init_buffer@@Base+0x98>
   21c8c:	ldr	r0, [pc, #28]	; 21cb0 <flatcc_json_printer_init_buffer@@Base+0x9c>
   21c90:	add	r3, pc, r3
   21c94:	add	r3, r3, #1824	; 0x720
   21c98:	add	r1, pc, r1
   21c9c:	add	r0, pc, r0
   21ca0:	bl	12504 <__assert_fail@plt>
   21ca4:			; <UNDEFINED> instruction: 0xffff2fa0
   21ca8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21cac:	andeq	r1, r0, r0, lsr #7
   21cb0:	andeq	r1, r0, r8, ror #11

00021cb4 <flatcc_json_printer_init_dynamic_buffer@@Base>:
   21cb4:	cmp	r1, #0
   21cb8:	strd	r4, [sp, #-16]!
   21cbc:	mov	r4, r0
   21cc0:	moveq	r5, #4096	; 0x1000
   21cc4:	str	r6, [sp, #8]
   21cc8:	moveq	r6, #4032	; 0xfc0
   21ccc:	str	lr, [sp, #12]
   21cd0:	beq	21ce4 <flatcc_json_printer_init_dynamic_buffer@@Base+0x30>
   21cd4:	cmp	r1, #64	; 0x40
   21cd8:	movcs	r5, r1
   21cdc:	movcc	r5, #64	; 0x40
   21ce0:	sub	r6, r5, #64	; 0x40
   21ce4:	mov	r2, #32
   21ce8:	mov	r1, #0
   21cec:	add	r0, r4, #12
   21cf0:	bl	124bc <memset@plt>
   21cf4:	mov	r0, r5
   21cf8:	bl	12480 <malloc@plt>
   21cfc:	ldr	r3, [pc, #84]	; 21d58 <flatcc_json_printer_init_dynamic_buffer@@Base+0xa4>
   21d00:	add	r1, r0, r6
   21d04:	mov	r2, #1
   21d08:	cmp	r0, #0
   21d0c:	stm	r4, {r0, r5, r6}
   21d10:	str	r1, [r4, #16]
   21d14:	add	r3, pc, r3
   21d18:	str	r0, [r4, #20]
   21d1c:	movne	r0, #0
   21d20:	strb	r2, [r4, #24]
   21d24:	str	r3, [r4, #44]	; 0x2c
   21d28:	beq	21d3c <flatcc_json_printer_init_dynamic_buffer@@Base+0x88>
   21d2c:	ldrd	r4, [sp]
   21d30:	ldr	r6, [sp, #8]
   21d34:	add	sp, sp, #12
   21d38:	pop	{pc}		; (ldr pc, [sp], #4)
   21d3c:	ldr	r3, [r4, #36]	; 0x24
   21d40:	cmp	r3, #0
   21d44:	moveq	r3, #3
   21d48:	mvneq	r0, #0
   21d4c:	mvnne	r0, #0
   21d50:	streq	r3, [r4, #36]	; 0x24
   21d54:	b	21d2c <flatcc_json_printer_init_dynamic_buffer@@Base+0x78>
   21d58:			; <UNDEFINED> instruction: 0xffff31d4

00021d5c <flatcc_json_printer_get_buffer@@Base>:
   21d5c:	strd	r4, [sp, #-16]!
   21d60:	mov	r5, r1
   21d64:	mov	r1, #0
   21d68:	ldr	r3, [r0, #44]	; 0x2c
   21d6c:	mov	r4, r0
   21d70:	str	r6, [sp, #8]
   21d74:	str	lr, [sp, #12]
   21d78:	blx	r3
   21d7c:	cmp	r5, #0
   21d80:	ldr	r0, [r4]
   21d84:	ldrne	r3, [r4, #20]
   21d88:	ldr	r6, [sp, #8]
   21d8c:	subne	r3, r3, r0
   21d90:	strne	r3, [r5]
   21d94:	ldrd	r4, [sp]
   21d98:	add	sp, sp, #12
   21d9c:	pop	{pc}		; (ldr pc, [sp], #4)

00021da0 <flatcc_json_printer_finalize_dynamic_buffer@@Base>:
   21da0:	strd	r4, [sp, #-16]!
   21da4:	mov	r5, r0
   21da8:	str	r6, [sp, #8]
   21dac:	str	lr, [sp, #12]
   21db0:	bl	21d5c <flatcc_json_printer_get_buffer@@Base>
   21db4:	mov	r4, r0
   21db8:	mov	r2, #48	; 0x30
   21dbc:	mov	r0, r5
   21dc0:	mov	r1, #0
   21dc4:	bl	124bc <memset@plt>
   21dc8:	mov	r0, r4
   21dcc:	ldrd	r4, [sp]
   21dd0:	ldr	r6, [sp, #8]
   21dd4:	add	sp, sp, #12
   21dd8:	pop	{pc}		; (ldr pc, [sp], #4)

00021ddc <flatcc_json_printer_clear@@Base>:
   21ddc:	str	r4, [sp, #-8]!
   21de0:	mov	r4, r0
   21de4:	str	lr, [sp, #4]
   21de8:	ldrb	r3, [r0, #24]
   21dec:	cmp	r3, #0
   21df0:	beq	21e04 <flatcc_json_printer_clear@@Base+0x28>
   21df4:	ldr	r0, [r0]
   21df8:	cmp	r0, #0
   21dfc:	beq	21e04 <flatcc_json_printer_clear@@Base+0x28>
   21e00:	bl	12414 <free@plt>
   21e04:	mov	r0, r4
   21e08:	mov	r2, #48	; 0x30
   21e0c:	ldr	r4, [sp]
   21e10:	mov	r1, #0
   21e14:	ldr	lr, [sp, #4]
   21e18:	add	sp, sp, #8
   21e1c:	b	124bc <memset@plt>
   21e20:	cmp	r3, #0
   21e24:	cmpeq	r2, #0
   21e28:	bne	21e4c <flatcc_json_printer_clear@@Base+0x70>
   21e2c:	cmp	r1, #0
   21e30:	movlt	r1, #-2147483648	; 0x80000000
   21e34:	movlt	r0, #0
   21e38:	blt	21e48 <flatcc_json_printer_clear@@Base+0x6c>
   21e3c:	cmpeq	r0, #0
   21e40:	mvnne	r1, #-2147483648	; 0x80000000
   21e44:	mvnne	r0, #0
   21e48:	b	21f30 <flatcc_json_printer_clear@@Base+0x154>
   21e4c:	sub	sp, sp, #8
   21e50:	push	{sp, lr}
   21e54:	cmp	r1, #0
   21e58:	blt	21e78 <flatcc_json_printer_clear@@Base+0x9c>
   21e5c:	cmp	r3, #0
   21e60:	blt	21eac <flatcc_json_printer_clear@@Base+0xd0>
   21e64:	bl	21f40 <flatcc_json_printer_clear@@Base+0x164>
   21e68:	ldr	lr, [sp, #4]
   21e6c:	add	sp, sp, #8
   21e70:	pop	{r2, r3}
   21e74:	bx	lr
   21e78:	rsbs	r0, r0, #0
   21e7c:	sbc	r1, r1, r1, lsl #1
   21e80:	cmp	r3, #0
   21e84:	blt	21ed0 <flatcc_json_printer_clear@@Base+0xf4>
   21e88:	bl	21f40 <flatcc_json_printer_clear@@Base+0x164>
   21e8c:	ldr	lr, [sp, #4]
   21e90:	add	sp, sp, #8
   21e94:	pop	{r2, r3}
   21e98:	rsbs	r0, r0, #0
   21e9c:	sbc	r1, r1, r1, lsl #1
   21ea0:	rsbs	r2, r2, #0
   21ea4:	sbc	r3, r3, r3, lsl #1
   21ea8:	bx	lr
   21eac:	rsbs	r2, r2, #0
   21eb0:	sbc	r3, r3, r3, lsl #1
   21eb4:	bl	21f40 <flatcc_json_printer_clear@@Base+0x164>
   21eb8:	ldr	lr, [sp, #4]
   21ebc:	add	sp, sp, #8
   21ec0:	pop	{r2, r3}
   21ec4:	rsbs	r0, r0, #0
   21ec8:	sbc	r1, r1, r1, lsl #1
   21ecc:	bx	lr
   21ed0:	rsbs	r2, r2, #0
   21ed4:	sbc	r3, r3, r3, lsl #1
   21ed8:	bl	21f40 <flatcc_json_printer_clear@@Base+0x164>
   21edc:	ldr	lr, [sp, #4]
   21ee0:	add	sp, sp, #8
   21ee4:	pop	{r2, r3}
   21ee8:	rsbs	r2, r2, #0
   21eec:	sbc	r3, r3, r3, lsl #1
   21ef0:	bx	lr
   21ef4:	cmp	r3, #0
   21ef8:	cmpeq	r2, #0
   21efc:	bne	21f14 <flatcc_json_printer_clear@@Base+0x138>
   21f00:	cmp	r1, #0
   21f04:	cmpeq	r0, #0
   21f08:	mvnne	r1, #0
   21f0c:	mvnne	r0, #0
   21f10:	b	21f30 <flatcc_json_printer_clear@@Base+0x154>
   21f14:	sub	sp, sp, #8
   21f18:	push	{sp, lr}
   21f1c:	bl	21f40 <flatcc_json_printer_clear@@Base+0x164>
   21f20:	ldr	lr, [sp, #4]
   21f24:	add	sp, sp, #8
   21f28:	pop	{r2, r3}
   21f2c:	bx	lr
   21f30:	push	{r1, lr}
   21f34:	mov	r0, #8
   21f38:	bl	123e4 <raise@plt>
   21f3c:	pop	{r1, pc}
   21f40:	cmp	r1, r3
   21f44:	cmpeq	r0, r2
   21f48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21f4c:	mov	r4, r0
   21f50:	movcc	r0, #0
   21f54:	mov	r5, r1
   21f58:	ldr	lr, [sp, #36]	; 0x24
   21f5c:	movcc	r1, r0
   21f60:	bcc	2205c <flatcc_json_printer_clear@@Base+0x280>
   21f64:	cmp	r3, #0
   21f68:	clzeq	ip, r2
   21f6c:	clzne	ip, r3
   21f70:	addeq	ip, ip, #32
   21f74:	cmp	r5, #0
   21f78:	clzeq	r1, r4
   21f7c:	addeq	r1, r1, #32
   21f80:	clzne	r1, r5
   21f84:	sub	ip, ip, r1
   21f88:	sub	sl, ip, #32
   21f8c:	lsl	r9, r3, ip
   21f90:	rsb	fp, ip, #32
   21f94:	orr	r9, r9, r2, lsl sl
   21f98:	orr	r9, r9, r2, lsr fp
   21f9c:	lsl	r8, r2, ip
   21fa0:	cmp	r5, r9
   21fa4:	cmpeq	r4, r8
   21fa8:	movcc	r0, #0
   21fac:	movcc	r1, r0
   21fb0:	bcc	21fcc <flatcc_json_printer_clear@@Base+0x1f0>
   21fb4:	mov	r0, #1
   21fb8:	subs	r4, r4, r8
   21fbc:	lsl	r1, r0, sl
   21fc0:	orr	r1, r1, r0, lsr fp
   21fc4:	lsl	r0, r0, ip
   21fc8:	sbc	r5, r5, r9
   21fcc:	cmp	ip, #0
   21fd0:	beq	2205c <flatcc_json_printer_clear@@Base+0x280>
   21fd4:	lsr	r6, r8, #1
   21fd8:	orr	r6, r6, r9, lsl #31
   21fdc:	lsr	r7, r9, #1
   21fe0:	mov	r2, ip
   21fe4:	b	22008 <flatcc_json_printer_clear@@Base+0x22c>
   21fe8:	subs	r3, r4, r6
   21fec:	sbc	r8, r5, r7
   21ff0:	adds	r3, r3, r3
   21ff4:	adc	r8, r8, r8
   21ff8:	adds	r4, r3, #1
   21ffc:	adc	r5, r8, #0
   22000:	subs	r2, r2, #1
   22004:	beq	22024 <flatcc_json_printer_clear@@Base+0x248>
   22008:	cmp	r5, r7
   2200c:	cmpeq	r4, r6
   22010:	bcs	21fe8 <flatcc_json_printer_clear@@Base+0x20c>
   22014:	adds	r4, r4, r4
   22018:	adc	r5, r5, r5
   2201c:	subs	r2, r2, #1
   22020:	bne	22008 <flatcc_json_printer_clear@@Base+0x22c>
   22024:	lsr	r3, r4, ip
   22028:	orr	r3, r3, r5, lsl fp
   2202c:	lsr	r2, r5, ip
   22030:	orr	r3, r3, r5, lsr sl
   22034:	adds	r0, r0, r4
   22038:	mov	r4, r3
   2203c:	lsl	r3, r2, ip
   22040:	orr	r3, r3, r4, lsl sl
   22044:	lsl	ip, r4, ip
   22048:	orr	r3, r3, r4, lsr fp
   2204c:	adc	r1, r1, r5
   22050:	subs	r0, r0, ip
   22054:	mov	r5, r2
   22058:	sbc	r1, r1, r3
   2205c:	cmp	lr, #0
   22060:	strdne	r4, [lr]
   22064:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00022068 <__libc_csu_init@@Base>:
   22068:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2206c:	mov	r7, r0
   22070:	ldr	r6, [pc, #72]	; 220c0 <__libc_csu_init@@Base+0x58>
   22074:	ldr	r5, [pc, #72]	; 220c4 <__libc_csu_init@@Base+0x5c>
   22078:	add	r6, pc, r6
   2207c:	add	r5, pc, r5
   22080:	sub	r6, r6, r5
   22084:	mov	r8, r1
   22088:	mov	r9, r2
   2208c:	bl	123c4 <raise@plt-0x20>
   22090:	asrs	r6, r6, #2
   22094:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   22098:	mov	r4, #0
   2209c:	add	r4, r4, #1
   220a0:	ldr	r3, [r5], #4
   220a4:	mov	r2, r9
   220a8:	mov	r1, r8
   220ac:	mov	r0, r7
   220b0:	blx	r3
   220b4:	cmp	r6, r4
   220b8:	bne	2209c <__libc_csu_init@@Base+0x34>
   220bc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   220c0:	muleq	r1, r4, lr
   220c4:	andeq	r1, r1, ip, lsl #29

000220c8 <__libc_csu_fini@@Base>:
   220c8:	bx	lr

Disassembly of section .fini:

000220cc <.fini>:
   220cc:	push	{r3, lr}
   220d0:	pop	{r3, pc}
