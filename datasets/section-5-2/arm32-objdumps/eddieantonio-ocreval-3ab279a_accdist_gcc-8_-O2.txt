
../repos/eddieantonio-ocreval-3ab279a/accdist/accdist:     file format elf32-littlearm


Disassembly of section .init:

0001088c <.init>:
   1088c:	push	{r3, lr}
   10890:	bl	10adc <getc@plt+0xc8>
   10894:	pop	{r3, pc}

Disassembly of section .plt:

00010898 <calloc@plt-0x14>:
   10898:	push	{lr}		; (str lr, [sp, #-4]!)
   1089c:	ldr	lr, [pc, #4]	; 108a8 <calloc@plt-0x4>
   108a0:	add	lr, pc, lr
   108a4:	ldr	pc, [lr, #8]!
   108a8:	andeq	r4, r1, r8, asr r7

000108ac <calloc@plt>:
   108ac:	add	ip, pc, #0, 12
   108b0:	add	ip, ip, #20, 20	; 0x14000
   108b4:	ldr	pc, [ip, #1880]!	; 0x758

000108b8 <strcmp@plt>:
   108b8:	add	ip, pc, #0, 12
   108bc:	add	ip, ip, #20, 20	; 0x14000
   108c0:	ldr	pc, [ip, #1872]!	; 0x750

000108c4 <fopen@plt>:
   108c4:	add	ip, pc, #0, 12
   108c8:	add	ip, ip, #20, 20	; 0x14000
   108cc:	ldr	pc, [ip, #1864]!	; 0x748

000108d0 <free@plt>:
   108d0:	add	ip, pc, #0, 12
   108d4:	add	ip, ip, #20, 20	; 0x14000
   108d8:	ldr	pc, [ip, #1856]!	; 0x740

000108dc <utf8proc_get_property@plt>:
   108dc:	add	ip, pc, #0, 12
   108e0:	add	ip, ip, #20, 20	; 0x14000
   108e4:	ldr	pc, [ip, #1848]!	; 0x738

000108e8 <fgets@plt>:
   108e8:	add	ip, pc, #0, 12
   108ec:	add	ip, ip, #20, 20	; 0x14000
   108f0:	ldr	pc, [ip, #1840]!	; 0x730

000108f4 <utf8proc_encode_char@plt>:
   108f4:	add	ip, pc, #0, 12
   108f8:	add	ip, ip, #20, 20	; 0x14000
   108fc:	ldr	pc, [ip, #1832]!	; 0x728

00010900 <strdup@plt>:
   10900:	add	ip, pc, #0, 12
   10904:	add	ip, ip, #20, 20	; 0x14000
   10908:	ldr	pc, [ip, #1824]!	; 0x720

0001090c <rewind@plt>:
   1090c:	add	ip, pc, #0, 12
   10910:	add	ip, ip, #20, 20	; 0x14000
   10914:	ldr	pc, [ip, #1816]!	; 0x718

00010918 <unlink@plt>:
   10918:	add	ip, pc, #0, 12
   1091c:	add	ip, ip, #20, 20	; 0x14000
   10920:	ldr	pc, [ip, #1808]!	; 0x710

00010924 <utf8proc_tolower@plt>:
   10924:	add	ip, pc, #0, 12
   10928:	add	ip, ip, #20, 20	; 0x14000
   1092c:	ldr	pc, [ip, #1800]!	; 0x708

00010930 <__xstat@plt>:
   10930:	add	ip, pc, #0, 12
   10934:	add	ip, ip, #20, 20	; 0x14000
   10938:	ldr	pc, [ip, #1792]!	; 0x700

0001093c <fwrite@plt>:
   1093c:	add	ip, pc, #0, 12
   10940:	add	ip, ip, #20, 20	; 0x14000
   10944:	ldr	pc, [ip, #1784]!	; 0x6f8

00010948 <fread@plt>:
   10948:	add	ip, pc, #0, 12
   1094c:	add	ip, ip, #20, 20	; 0x14000
   10950:	ldr	pc, [ip, #1776]!	; 0x6f0

00010954 <utf8proc_iterate@plt>:
   10954:	add	ip, pc, #0, 12
   10958:	add	ip, ip, #20, 20	; 0x14000
   1095c:	ldr	pc, [ip, #1768]!	; 0x6e8

00010960 <__libc_start_main@plt>:
   10960:	add	ip, pc, #0, 12
   10964:	add	ip, ip, #20, 20	; 0x14000
   10968:	ldr	pc, [ip, #1760]!	; 0x6e0

0001096c <__sysv_signal@plt>:
   1096c:	add	ip, pc, #0, 12
   10970:	add	ip, ip, #20, 20	; 0x14000
   10974:	ldr	pc, [ip, #1752]!	; 0x6d8

00010978 <__gmon_start__@plt>:
   10978:	add	ip, pc, #0, 12
   1097c:	add	ip, ip, #20, 20	; 0x14000
   10980:	ldr	pc, [ip, #1744]!	; 0x6d0

00010984 <getpid@plt>:
   10984:	add	ip, pc, #0, 12
   10988:	add	ip, ip, #20, 20	; 0x14000
   1098c:	ldr	pc, [ip, #1736]!	; 0x6c8

00010990 <exit@plt>:
   10990:	add	ip, pc, #0, 12
   10994:	add	ip, ip, #20, 20	; 0x14000
   10998:	ldr	pc, [ip, #1728]!	; 0x6c0

0001099c <utf8proc_category@plt>:
   1099c:	add	ip, pc, #0, 12
   109a0:	add	ip, ip, #20, 20	; 0x14000
   109a4:	ldr	pc, [ip, #1720]!	; 0x6b8

000109a8 <strlen@plt>:
   109a8:	add	ip, pc, #0, 12
   109ac:	add	ip, ip, #20, 20	; 0x14000
   109b0:	ldr	pc, [ip, #1712]!	; 0x6b0

000109b4 <fprintf@plt>:
   109b4:	add	ip, pc, #0, 12
   109b8:	add	ip, ip, #20, 20	; 0x14000
   109bc:	ldr	pc, [ip, #1704]!	; 0x6a8

000109c0 <__isoc99_sscanf@plt>:
   109c0:	add	ip, pc, #0, 12
   109c4:	add	ip, ip, #20, 20	; 0x14000
   109c8:	ldr	pc, [ip, #1696]!	; 0x6a0

000109cc <fclose@plt>:
   109cc:	add	ip, pc, #0, 12
   109d0:	add	ip, ip, #20, 20	; 0x14000
   109d4:	ldr	pc, [ip, #1688]!	; 0x698

000109d8 <sprintf@plt>:
   109d8:	add	ip, pc, #0, 12
   109dc:	add	ip, ip, #20, 20	; 0x14000
   109e0:	ldr	pc, [ip, #1680]!	; 0x690

000109e4 <utf8proc_errmsg@plt>:
   109e4:	add	ip, pc, #0, 12
   109e8:	add	ip, ip, #20, 20	; 0x14000
   109ec:	ldr	pc, [ip, #1672]!	; 0x688

000109f0 <fputs@plt>:
   109f0:	add	ip, pc, #0, 12
   109f4:	add	ip, ip, #20, 20	; 0x14000
   109f8:	ldr	pc, [ip, #1664]!	; 0x680

000109fc <strncmp@plt>:
   109fc:	add	ip, pc, #0, 12
   10a00:	add	ip, ip, #20, 20	; 0x14000
   10a04:	ldr	pc, [ip, #1656]!	; 0x678

00010a08 <abort@plt>:
   10a08:	add	ip, pc, #0, 12
   10a0c:	add	ip, ip, #20, 20	; 0x14000
   10a10:	ldr	pc, [ip, #1648]!	; 0x670

00010a14 <getc@plt>:
   10a14:	add	ip, pc, #0, 12
   10a18:	add	ip, ip, #20, 20	; 0x14000
   10a1c:	ldr	pc, [ip, #1640]!	; 0x668

Disassembly of section .text:

00010a20 <error@@Base-0x1888>:
   10a20:	ldr	r2, [pc, #108]	; 10a94 <getc@plt+0x80>
   10a24:	mov	r3, #0
   10a28:	strd	r4, [sp, #-16]!
   10a2c:	mov	r5, r1
   10a30:	str	r6, [sp, #8]
   10a34:	str	lr, [sp, #12]
   10a38:	sub	sp, sp, #8
   10a3c:	ldr	r6, [pc, #84]	; 10a98 <getc@plt+0x84>
   10a40:	add	r2, pc, r2
   10a44:	str	r0, [sp, #4]
   10a48:	add	r0, sp, #4
   10a4c:	bl	1248c <error@@Base+0x1e4>
   10a50:	ldr	r3, [sp, #4]
   10a54:	add	r6, pc, r6
   10a58:	cmp	r3, #0
   10a5c:	ble	10a80 <getc@plt+0x6c>
   10a60:	sub	r5, r5, #4
   10a64:	mov	r4, #0
   10a68:	ldr	r0, [r5, #4]!
   10a6c:	add	r4, r4, #1
   10a70:	bl	10b90 <getc@plt+0x17c>
   10a74:	ldr	r3, [sp, #4]
   10a78:	cmp	r3, r4
   10a7c:	bgt	10a68 <getc@plt+0x54>
   10a80:	ldr	r3, [pc, #20]	; 10a9c <getc@plt+0x88>
   10a84:	mov	r1, #0
   10a88:	ldr	r0, [r6, r3]
   10a8c:	bl	11a28 <getc@plt+0x1014>
   10a90:	bl	1222c <getc@plt+0x1818>
   10a94:	andeq	r2, r0, r0, ror #14
   10a98:	andeq	r4, r1, r4, lsr #11
   10a9c:	andeq	r0, r0, ip, lsr #1
   10aa0:	mov	fp, #0
   10aa4:	mov	lr, #0
   10aa8:	pop	{r1}		; (ldr r1, [sp], #4)
   10aac:	mov	r2, sp
   10ab0:	push	{r2}		; (str r2, [sp, #-4]!)
   10ab4:	push	{r0}		; (str r0, [sp, #-4]!)
   10ab8:	ldr	ip, [pc, #16]	; 10ad0 <getc@plt+0xbc>
   10abc:	push	{ip}		; (str ip, [sp, #-4]!)
   10ac0:	ldr	r0, [pc, #12]	; 10ad4 <getc@plt+0xc0>
   10ac4:	ldr	r3, [pc, #12]	; 10ad8 <getc@plt+0xc4>
   10ac8:	bl	10960 <__libc_start_main@plt>
   10acc:	bl	10a08 <abort@plt>
   10ad0:	muleq	r1, r8, r1
   10ad4:	andeq	r0, r1, r0, lsr #20
   10ad8:	andeq	r3, r1, r8, lsr r1
   10adc:	ldr	r3, [pc, #20]	; 10af8 <getc@plt+0xe4>
   10ae0:	ldr	r2, [pc, #20]	; 10afc <getc@plt+0xe8>
   10ae4:	add	r3, pc, r3
   10ae8:	ldr	r2, [r3, r2]
   10aec:	cmp	r2, #0
   10af0:	bxeq	lr
   10af4:	b	10978 <__gmon_start__@plt>
   10af8:	andeq	r4, r1, r4, lsl r5
   10afc:	muleq	r0, r8, r0
   10b00:	ldr	r0, [pc, #24]	; 10b20 <getc@plt+0x10c>
   10b04:	ldr	r3, [pc, #24]	; 10b24 <getc@plt+0x110>
   10b08:	cmp	r3, r0
   10b0c:	bxeq	lr
   10b10:	ldr	r3, [pc, #16]	; 10b28 <getc@plt+0x114>
   10b14:	cmp	r3, #0
   10b18:	bxeq	lr
   10b1c:	bx	r3
   10b20:	andeq	r5, r2, r8, asr #1
   10b24:	andeq	r5, r2, r8, asr #1
   10b28:	andeq	r0, r0, r0
   10b2c:	ldr	r0, [pc, #36]	; 10b58 <getc@plt+0x144>
   10b30:	ldr	r1, [pc, #36]	; 10b5c <getc@plt+0x148>
   10b34:	sub	r1, r1, r0
   10b38:	asr	r1, r1, #2
   10b3c:	add	r1, r1, r1, lsr #31
   10b40:	asrs	r1, r1, #1
   10b44:	bxeq	lr
   10b48:	ldr	r3, [pc, #16]	; 10b60 <getc@plt+0x14c>
   10b4c:	cmp	r3, #0
   10b50:	bxeq	lr
   10b54:	bx	r3
   10b58:	andeq	r5, r2, r8, asr #1
   10b5c:	andeq	r5, r2, r8, asr #1
   10b60:	andeq	r0, r0, r0
   10b64:	push	{r4, lr}
   10b68:	ldr	r4, [pc, #24]	; 10b88 <getc@plt+0x174>
   10b6c:	ldrb	r3, [r4]
   10b70:	cmp	r3, #0
   10b74:	popne	{r4, pc}
   10b78:	bl	10b00 <getc@plt+0xec>
   10b7c:	mov	r3, #1
   10b80:	strb	r3, [r4]
   10b84:	pop	{r4, pc}
   10b88:	andeq	r5, r2, r8, asr #1
   10b8c:	b	10b2c <getc@plt+0x118>
   10b90:	strd	r4, [sp, #-24]!	; 0xffffffe8
   10b94:	mov	r1, r0
   10b98:	ldr	r4, [pc, #76]	; 10bec <getc@plt+0x1d8>
   10b9c:	strd	r6, [sp, #8]
   10ba0:	ldr	r3, [pc, #72]	; 10bf0 <getc@plt+0x1dc>
   10ba4:	str	r8, [sp, #16]
   10ba8:	str	lr, [sp, #20]
   10bac:	add	r4, pc, r4
   10bb0:	ldr	r5, [r4, r3]
   10bb4:	mov	r0, r5
   10bb8:	ldrd	r6, [r5]
   10bbc:	bl	11048 <getc@plt+0x634>
   10bc0:	ldr	r3, [pc, #44]	; 10bf4 <getc@plt+0x1e0>
   10bc4:	ldm	r5, {r1, r2}
   10bc8:	ldr	r8, [sp, #16]
   10bcc:	ldr	r0, [r4, r3]
   10bd0:	sub	r2, r2, r7
   10bd4:	sub	r1, r1, r6
   10bd8:	ldrd	r4, [sp]
   10bdc:	ldrd	r6, [sp, #8]
   10be0:	ldr	lr, [sp, #20]
   10be4:	add	sp, sp, #24
   10be8:	b	119b0 <getc@plt+0xf9c>
   10bec:	andeq	r4, r1, ip, asr #8
   10bf0:	andeq	r0, r0, ip, lsl #1
   10bf4:	andeq	r0, r0, ip, lsr #1
   10bf8:	strd	r4, [sp, #-16]!
   10bfc:	mov	r5, r1
   10c00:	mov	r1, #99	; 0x63
   10c04:	ldr	r4, [pc, #112]	; 10c7c <getc@plt+0x268>
   10c08:	str	r6, [sp, #8]
   10c0c:	mov	r6, r2
   10c10:	mov	r2, r0
   10c14:	str	lr, [sp, #12]
   10c18:	add	r4, pc, r4
   10c1c:	mov	r0, r4
   10c20:	bl	108e8 <fgets@plt>
   10c24:	cmp	r0, #0
   10c28:	beq	10c48 <getc@plt+0x234>
   10c2c:	ldr	r1, [pc, #76]	; 10c80 <getc@plt+0x26c>
   10c30:	mov	r0, r4
   10c34:	mov	r2, r5
   10c38:	add	r1, pc, r1
   10c3c:	bl	109c0 <__isoc99_sscanf@plt>
   10c40:	cmp	r0, #1
   10c44:	beq	10c5c <getc@plt+0x248>
   10c48:	ldrd	r4, [sp]
   10c4c:	mov	r0, #0
   10c50:	ldr	r6, [sp, #8]
   10c54:	add	sp, sp, #12
   10c58:	pop	{pc}		; (ldr pc, [sp], #4)
   10c5c:	ldr	r2, [r5]
   10c60:	ldr	r3, [r6]
   10c64:	ldrd	r4, [sp]
   10c68:	add	r3, r3, r2
   10c6c:	str	r3, [r6]
   10c70:	ldr	r6, [sp, #8]
   10c74:	add	sp, sp, #12
   10c78:	pop	{pc}		; (ldr pc, [sp], #4)
   10c7c:	andeq	r4, r1, ip, lsr #9
   10c80:	andeq	r2, r0, r4, lsr #11
   10c84:	strd	r4, [sp, #-16]!
   10c88:	mov	r2, r0
   10c8c:	mov	r4, r1
   10c90:	ldr	r5, [pc, #160]	; 10d38 <getc@plt+0x324>
   10c94:	mov	r1, #99	; 0x63
   10c98:	str	r6, [sp, #8]
   10c9c:	str	lr, [sp, #12]
   10ca0:	sub	sp, sp, #24
   10ca4:	add	r5, pc, r5
   10ca8:	mov	r0, r5
   10cac:	bl	108e8 <fgets@plt>
   10cb0:	cmp	r0, #0
   10cb4:	beq	10ce4 <getc@plt+0x2d0>
   10cb8:	ldr	r1, [pc, #124]	; 10d3c <getc@plt+0x328>
   10cbc:	add	r2, sp, #16
   10cc0:	add	ip, sp, #20
   10cc4:	mov	r0, r5
   10cc8:	add	r3, sp, #12
   10ccc:	stm	sp, {r2, ip}
   10cd0:	add	r2, sp, #8
   10cd4:	add	r1, pc, r1
   10cd8:	bl	109c0 <__isoc99_sscanf@plt>
   10cdc:	cmp	r0, #4
   10ce0:	beq	10cfc <getc@plt+0x2e8>
   10ce4:	mov	r0, #0
   10ce8:	add	sp, sp, #24
   10cec:	ldrd	r4, [sp]
   10cf0:	ldr	r6, [sp, #8]
   10cf4:	add	sp, sp, #12
   10cf8:	pop	{pc}		; (ldr pc, [sp], #4)
   10cfc:	ldr	ip, [r4]
   10d00:	mov	r0, #1
   10d04:	ldr	r3, [sp, #8]
   10d08:	ldmib	r4, {r1, r2}
   10d0c:	ldr	r6, [sp, #12]
   10d10:	add	ip, ip, r3
   10d14:	ldr	r3, [r4, #12]
   10d18:	str	ip, [r4]
   10d1c:	ldr	r5, [sp, #16]
   10d20:	add	r1, r1, r6
   10d24:	ldr	lr, [sp, #20]
   10d28:	add	r2, r2, r5
   10d2c:	add	r3, r3, lr
   10d30:	stmib	r4, {r1, r2, r3}
   10d34:	b	10ce8 <getc@plt+0x2d4>
   10d38:	andeq	r4, r1, r0, lsr #8
   10d3c:	strdeq	r2, [r0], -ip
   10d40:	strd	r4, [sp, #-16]!
   10d44:	mov	r5, r1
   10d48:	mov	r1, #99	; 0x63
   10d4c:	ldr	r4, [pc, #84]	; 10da8 <getc@plt+0x394>
   10d50:	str	r6, [sp, #8]
   10d54:	mov	r6, r2
   10d58:	mov	r2, r0
   10d5c:	str	lr, [sp, #12]
   10d60:	add	r4, pc, r4
   10d64:	mov	r0, r4
   10d68:	bl	108e8 <fgets@plt>
   10d6c:	cmp	r0, #0
   10d70:	beq	10d98 <getc@plt+0x384>
   10d74:	ldr	r1, [pc, #48]	; 10dac <getc@plt+0x398>
   10d78:	mov	r3, r6
   10d7c:	mov	r2, r5
   10d80:	mov	r0, r4
   10d84:	add	r1, pc, r1
   10d88:	bl	109c0 <__isoc99_sscanf@plt>
   10d8c:	sub	r0, r0, #2
   10d90:	clz	r0, r0
   10d94:	lsr	r0, r0, #5
   10d98:	ldrd	r4, [sp]
   10d9c:	ldr	r6, [sp, #8]
   10da0:	add	sp, sp, #12
   10da4:	pop	{pc}		; (ldr pc, [sp], #4)
   10da8:	andeq	r4, r1, r4, ror #6
   10dac:	andeq	r2, r0, r4, asr r4
   10db0:	sub	sp, sp, #8
   10db4:	cmp	r2, #0
   10db8:	str	r1, [sp, #4]
   10dbc:	bne	10ddc <getc@plt+0x3c8>
   10dc0:	mov	r3, r0
   10dc4:	ldr	r0, [pc, #76]	; 10e18 <getc@plt+0x404>
   10dc8:	mov	r2, #8
   10dcc:	mov	r1, #1
   10dd0:	add	r0, pc, r0
   10dd4:	add	sp, sp, #8
   10dd8:	b	1093c <fwrite@plt>
   10ddc:	vldr	s15, [sp, #4]
   10de0:	vmov	s13, r2
   10de4:	vldr	d5, [pc, #36]	; 10e10 <getc@plt+0x3fc>
   10de8:	ldr	r1, [pc, #44]	; 10e1c <getc@plt+0x408>
   10dec:	vcvt.f64.s32	d7, s15
   10df0:	add	r1, pc, r1
   10df4:	vcvt.f64.s32	d6, s13
   10df8:	vmul.f64	d7, d7, d5
   10dfc:	vdiv.f64	d7, d7, d6
   10e00:	vmov	r2, r3, d7
   10e04:	add	sp, sp, #8
   10e08:	b	109b4 <fprintf@plt>
   10e0c:	nop	{0}
   10e10:	andeq	r0, r0, r0
   10e14:	subsmi	r0, r9, r0
   10e18:	andeq	r2, r0, r0, lsl r4
   10e1c:	strdeq	r2, [r0], -ip
   10e20:	ldr	r2, [r0, #12]
   10e24:	ldr	r3, [r1, #12]
   10e28:	cmp	r2, r3
   10e2c:	bne	10e40 <getc@plt+0x42c>
   10e30:	ldr	r2, [r0, #16]
   10e34:	ldr	r3, [r1, #16]
   10e38:	cmp	r2, r3
   10e3c:	beq	10e48 <getc@plt+0x434>
   10e40:	sub	r0, r3, r2
   10e44:	bx	lr
   10e48:	ldr	r0, [r0, #8]
   10e4c:	ldr	r1, [r1, #8]
   10e50:	b	120b0 <getc@plt+0x169c>
   10e54:	strd	r4, [sp, #-20]!	; 0xffffffec
   10e58:	mov	r4, r1
   10e5c:	mov	r5, r0
   10e60:	ldr	r1, [pc, #144]	; 10ef8 <getc@plt+0x4e4>
   10e64:	strd	r6, [sp, #8]
   10e68:	mov	r6, r2
   10e6c:	mov	r7, r3
   10e70:	str	lr, [sp, #16]
   10e74:	sub	sp, sp, #20
   10e78:	ldrd	r2, [r4]
   10e7c:	add	r1, pc, r1
   10e80:	bl	109b4 <fprintf@plt>
   10e84:	ldr	r2, [r4]
   10e88:	mov	r0, r5
   10e8c:	ldr	r1, [r4, #4]
   10e90:	sub	r1, r2, r1
   10e94:	bl	10db0 <getc@plt+0x39c>
   10e98:	cmp	r6, #0
   10e9c:	beq	10ec8 <getc@plt+0x4b4>
   10ea0:	ldr	r1, [pc, #84]	; 10efc <getc@plt+0x4e8>
   10ea4:	mov	r2, r6
   10ea8:	mov	r0, r5
   10eac:	add	r1, pc, r1
   10eb0:	bl	109b4 <fprintf@plt>
   10eb4:	add	sp, sp, #20
   10eb8:	ldrd	r4, [sp]
   10ebc:	ldrd	r6, [sp, #8]
   10ec0:	add	sp, sp, #16
   10ec4:	pop	{pc}		; (ldr pc, [sp], #4)
   10ec8:	add	r4, sp, #4
   10ecc:	mov	r1, r7
   10ed0:	mov	r0, r6
   10ed4:	mov	r2, r4
   10ed8:	mov	r3, #1
   10edc:	bl	12bcc <error@@Base+0x924>
   10ee0:	ldr	r1, [pc, #24]	; 10f00 <getc@plt+0x4ec>
   10ee4:	mov	r2, r4
   10ee8:	mov	r0, r5
   10eec:	add	r1, pc, r1
   10ef0:	bl	109b4 <fprintf@plt>
   10ef4:	b	10eb4 <getc@plt+0x4a0>
   10ef8:	andeq	r2, r0, r8, ror r3
   10efc:	strdeq	r2, [r0], -r8
   10f00:	andeq	r2, r0, r4, lsl r3
   10f04:	strd	r4, [sp, #-24]!	; 0xffffffe8
   10f08:	mov	r5, r0
   10f0c:	mov	r0, r1
   10f10:	mov	r4, r1
   10f14:	strd	r6, [sp, #8]
   10f18:	mov	r7, r2
   10f1c:	mov	r6, r3
   10f20:	str	r8, [sp, #16]
   10f24:	str	lr, [sp, #20]
   10f28:	bl	11efc <getc@plt+0x14e8>
   10f2c:	lsl	r0, r0, #3
   10f30:	ldr	r8, [sp, #16]
   10f34:	lsl	r1, r4, #3
   10f38:	add	r0, r0, #68	; 0x44
   10f3c:	ldr	r3, [r5, r0]
   10f40:	add	r2, r5, r0
   10f44:	add	r1, r1, #10176	; 0x27c0
   10f48:	add	r1, r1, #4
   10f4c:	add	ip, r5, r1
   10f50:	add	r3, r3, r7
   10f54:	str	r3, [r5, r0]
   10f58:	ldr	r3, [r2, #4]
   10f5c:	add	r3, r3, r6
   10f60:	str	r3, [r2, #4]
   10f64:	ldr	r2, [r5, #2116]	; 0x844
   10f68:	ldr	r3, [r5, #2120]	; 0x848
   10f6c:	add	r2, r2, r7
   10f70:	add	r3, r3, r6
   10f74:	str	r2, [r5, #2116]	; 0x844
   10f78:	str	r3, [r5, #2120]	; 0x848
   10f7c:	ldr	r3, [r5, r1]
   10f80:	add	r3, r3, r7
   10f84:	str	r3, [r5, r1]
   10f88:	ldr	r2, [ip, #4]
   10f8c:	ldrd	r4, [sp]
   10f90:	add	r2, r2, r6
   10f94:	ldrd	r6, [sp, #8]
   10f98:	add	sp, sp, #20
   10f9c:	str	r2, [ip, #4]
   10fa0:	pop	{pc}		; (ldr pc, [sp], #4)
   10fa4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   10fa8:	add	r4, r0, #2112	; 0x840
   10fac:	mov	r5, r3
   10fb0:	add	r4, r4, #12
   10fb4:	strd	r6, [sp, #8]
   10fb8:	mov	r6, r2
   10fbc:	mov	r0, r4
   10fc0:	mov	r7, r1
   10fc4:	str	r8, [sp, #16]
   10fc8:	str	lr, [sp, #20]
   10fcc:	bl	11b38 <getc@plt+0x1124>
   10fd0:	cmp	r0, #0
   10fd4:	beq	11004 <getc@plt+0x5f0>
   10fd8:	ldr	ip, [r0, #12]
   10fdc:	ldr	r1, [r0, #16]
   10fe0:	ldr	r8, [sp, #16]
   10fe4:	add	ip, ip, r6
   10fe8:	ldrd	r6, [sp, #8]
   10fec:	add	r1, r1, r5
   10ff0:	ldrd	r4, [sp]
   10ff4:	add	sp, sp, #20
   10ff8:	str	ip, [r0, #12]
   10ffc:	str	r1, [r0, #16]
   11000:	pop	{pc}		; (ldr pc, [sp], #4)
   11004:	mov	r1, #20
   11008:	mov	r0, #1
   1100c:	bl	12304 <error@@Base+0x5c>
   11010:	mov	r8, r0
   11014:	mov	r0, r7
   11018:	bl	10900 <strdup@plt>
   1101c:	mov	r1, r8
   11020:	ldr	lr, [sp, #20]
   11024:	str	r0, [r8, #8]
   11028:	mov	r0, r4
   1102c:	str	r6, [r8, #12]
   11030:	str	r5, [r8, #16]
   11034:	ldrd	r4, [sp]
   11038:	ldrd	r6, [sp, #8]
   1103c:	ldr	r8, [sp, #16]
   11040:	add	sp, sp, #24
   11044:	b	11bc4 <getc@plt+0x11b0>
   11048:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1104c:	strd	r6, [sp, #8]
   11050:	mov	r6, r0
   11054:	mov	r0, r1
   11058:	strd	r8, [sp, #16]
   1105c:	mov	r8, r1
   11060:	ldr	r1, [pc, #884]	; 113dc <getc@plt+0x9c8>
   11064:	str	sl, [sp, #24]
   11068:	ldr	r5, [pc, #880]	; 113e0 <getc@plt+0x9cc>
   1106c:	str	lr, [sp, #28]
   11070:	sub	sp, sp, #24
   11074:	add	r1, pc, r1
   11078:	bl	123cc <error@@Base+0x124>
   1107c:	add	r5, pc, r5
   11080:	mov	r2, r0
   11084:	mov	r4, r0
   11088:	mov	r1, #99	; 0x63
   1108c:	mov	r0, r5
   11090:	bl	108e8 <fgets@plt>
   11094:	cmp	r0, #0
   11098:	beq	113b8 <getc@plt+0x9a4>
   1109c:	ldr	r1, [pc, #832]	; 113e4 <getc@plt+0x9d0>
   110a0:	mov	r2, #40	; 0x28
   110a4:	mov	r0, r5
   110a8:	add	r1, pc, r1
   110ac:	bl	109fc <strncmp@plt>
   110b0:	cmp	r0, #0
   110b4:	bne	113b8 <getc@plt+0x9a4>
   110b8:	mov	r2, r4
   110bc:	mov	r1, #99	; 0x63
   110c0:	mov	r0, r5
   110c4:	bl	108e8 <fgets@plt>
   110c8:	cmp	r0, #0
   110cc:	beq	113b8 <getc@plt+0x9a4>
   110d0:	ldr	r1, [pc, #784]	; 113e8 <getc@plt+0x9d4>
   110d4:	mov	r0, r5
   110d8:	add	r1, pc, r1
   110dc:	bl	108b8 <strcmp@plt>
   110e0:	cmp	r0, #0
   110e4:	bne	113b8 <getc@plt+0x9a4>
   110e8:	mov	r2, r6
   110ec:	add	r1, sp, #4
   110f0:	mov	r0, r4
   110f4:	bl	10bf8 <getc@plt+0x1e4>
   110f8:	cmp	r0, #0
   110fc:	beq	113b8 <getc@plt+0x9a4>
   11100:	add	r2, r6, #4
   11104:	add	r1, sp, #8
   11108:	mov	r0, r4
   1110c:	bl	10bf8 <getc@plt+0x1e4>
   11110:	cmp	r0, #0
   11114:	beq	113b8 <getc@plt+0x9a4>
   11118:	mov	r2, r4
   1111c:	mov	r1, #99	; 0x63
   11120:	mov	r0, r5
   11124:	bl	108e8 <fgets@plt>
   11128:	cmp	r0, #0
   1112c:	beq	113b8 <getc@plt+0x9a4>
   11130:	mov	r0, r5
   11134:	mov	r2, r4
   11138:	mov	r1, #99	; 0x63
   1113c:	bl	108e8 <fgets@plt>
   11140:	cmp	r0, #0
   11144:	beq	113b8 <getc@plt+0x9a4>
   11148:	add	r7, sp, #12
   1114c:	add	r2, r6, #8
   11150:	mov	r1, r7
   11154:	mov	r0, r4
   11158:	bl	10bf8 <getc@plt+0x1e4>
   1115c:	cmp	r0, #0
   11160:	beq	113b8 <getc@plt+0x9a4>
   11164:	add	r2, r6, #12
   11168:	mov	r1, r7
   1116c:	mov	r0, r4
   11170:	bl	10bf8 <getc@plt+0x1e4>
   11174:	cmp	r0, #0
   11178:	beq	113b8 <getc@plt+0x9a4>
   1117c:	add	r2, r6, #16
   11180:	mov	r1, r7
   11184:	mov	r0, r4
   11188:	bl	10bf8 <getc@plt+0x1e4>
   1118c:	cmp	r0, #0
   11190:	beq	113b8 <getc@plt+0x9a4>
   11194:	ldr	r5, [pc, #592]	; 113ec <getc@plt+0x9d8>
   11198:	mov	r2, r4
   1119c:	mov	r1, #99	; 0x63
   111a0:	add	r5, pc, r5
   111a4:	mov	r0, r5
   111a8:	bl	108e8 <fgets@plt>
   111ac:	cmp	r0, #0
   111b0:	beq	113b8 <getc@plt+0x9a4>
   111b4:	mov	r2, r4
   111b8:	mov	r1, #99	; 0x63
   111bc:	mov	r0, r5
   111c0:	bl	108e8 <fgets@plt>
   111c4:	cmp	r0, #0
   111c8:	beq	113b8 <getc@plt+0x9a4>
   111cc:	mov	r2, r4
   111d0:	mov	r1, #99	; 0x63
   111d4:	mov	r0, r5
   111d8:	bl	108e8 <fgets@plt>
   111dc:	cmp	r0, #0
   111e0:	beq	113b8 <getc@plt+0x9a4>
   111e4:	mov	r2, r4
   111e8:	mov	r1, #99	; 0x63
   111ec:	mov	r0, r5
   111f0:	bl	108e8 <fgets@plt>
   111f4:	cmp	r0, #0
   111f8:	beq	113b8 <getc@plt+0x9a4>
   111fc:	add	r1, r6, #20
   11200:	mov	r0, r4
   11204:	bl	10c84 <getc@plt+0x270>
   11208:	cmp	r0, #0
   1120c:	beq	113b8 <getc@plt+0x9a4>
   11210:	add	r1, r6, #36	; 0x24
   11214:	mov	r0, r4
   11218:	bl	10c84 <getc@plt+0x270>
   1121c:	cmp	r0, #0
   11220:	beq	113b8 <getc@plt+0x9a4>
   11224:	add	r1, r6, #52	; 0x34
   11228:	mov	r0, r4
   1122c:	bl	10c84 <getc@plt+0x270>
   11230:	cmp	r0, #0
   11234:	beq	113b8 <getc@plt+0x9a4>
   11238:	mov	r2, r4
   1123c:	mov	r1, #99	; 0x63
   11240:	mov	r0, r5
   11244:	bl	108e8 <fgets@plt>
   11248:	cmp	r0, #0
   1124c:	bne	11260 <getc@plt+0x84c>
   11250:	b	113b8 <getc@plt+0x9a4>
   11254:	ldrb	r3, [r5]
   11258:	cmp	r3, #10
   1125c:	beq	11278 <getc@plt+0x864>
   11260:	mov	r2, r4
   11264:	mov	r1, #99	; 0x63
   11268:	mov	r0, r5
   1126c:	bl	108e8 <fgets@plt>
   11270:	cmp	r0, #0
   11274:	bne	11254 <getc@plt+0x840>
   11278:	ldr	r3, [sp, #8]
   1127c:	cmp	r3, #0
   11280:	bgt	112b4 <getc@plt+0x8a0>
   11284:	ldr	r3, [sp, #4]
   11288:	cmp	r3, #0
   1128c:	bgt	11318 <getc@plt+0x904>
   11290:	mov	r0, r4
   11294:	bl	12108 <getc@plt+0x16f4>
   11298:	add	sp, sp, #24
   1129c:	ldrd	r4, [sp]
   112a0:	ldrd	r6, [sp, #8]
   112a4:	ldrd	r8, [sp, #16]
   112a8:	ldr	sl, [sp, #24]
   112ac:	add	sp, sp, #28
   112b0:	pop	{pc}		; (ldr pc, [sp], #4)
   112b4:	ldr	r0, [pc, #308]	; 113f0 <getc@plt+0x9dc>
   112b8:	mov	r2, r4
   112bc:	mov	r1, #99	; 0x63
   112c0:	add	r0, pc, r0
   112c4:	bl	108e8 <fgets@plt>
   112c8:	cmp	r0, #0
   112cc:	beq	11284 <getc@plt+0x870>
   112d0:	ldr	r8, [pc, #284]	; 113f4 <getc@plt+0x9e0>
   112d4:	add	r5, sp, #16
   112d8:	add	r8, pc, r8
   112dc:	add	r8, r8, #20
   112e0:	b	112f4 <getc@plt+0x8e0>
   112e4:	mov	r1, r8
   112e8:	mov	r0, r6
   112ec:	ldrd	r2, [sp, #12]
   112f0:	bl	10fa4 <getc@plt+0x590>
   112f4:	mov	r2, r5
   112f8:	mov	r1, r7
   112fc:	mov	r0, r4
   11300:	bl	10d40 <getc@plt+0x32c>
   11304:	cmp	r0, #0
   11308:	bne	112e4 <getc@plt+0x8d0>
   1130c:	ldr	r3, [sp, #4]
   11310:	cmp	r3, #0
   11314:	ble	11290 <getc@plt+0x87c>
   11318:	ldr	r0, [pc, #216]	; 113f8 <getc@plt+0x9e4>
   1131c:	mov	r2, r4
   11320:	mov	r1, #99	; 0x63
   11324:	add	r0, pc, r0
   11328:	bl	108e8 <fgets@plt>
   1132c:	cmp	r0, #0
   11330:	beq	11290 <getc@plt+0x87c>
   11334:	ldr	r8, [pc, #192]	; 113fc <getc@plt+0x9e8>
   11338:	add	r5, sp, #16
   1133c:	ldr	sl, [pc, #188]	; 11400 <getc@plt+0x9ec>
   11340:	add	r8, pc, r8
   11344:	add	r9, r8, #31
   11348:	add	sl, pc, sl
   1134c:	b	11370 <getc@plt+0x95c>
   11350:	cmp	r3, #92	; 0x5c
   11354:	bne	113a0 <getc@plt+0x98c>
   11358:	mov	r3, #10
   1135c:	mov	r1, r3
   11360:	str	r3, [sp, #20]
   11364:	mov	r0, r6
   11368:	ldrd	r2, [sp, #12]
   1136c:	bl	10f04 <getc@plt+0x4f0>
   11370:	mov	r2, r5
   11374:	mov	r1, r7
   11378:	mov	r0, r4
   1137c:	bl	10d40 <getc@plt+0x32c>
   11380:	cmp	r0, #0
   11384:	beq	11290 <getc@plt+0x87c>
   11388:	ldrb	r3, [r8, #31]
   1138c:	cmp	r3, #125	; 0x7d
   11390:	bne	11350 <getc@plt+0x93c>
   11394:	ldrb	r1, [r8, #30]
   11398:	str	r1, [sp, #20]
   1139c:	b	11364 <getc@plt+0x950>
   113a0:	mov	r1, sl
   113a4:	add	r2, sp, #20
   113a8:	mov	r0, r9
   113ac:	bl	109c0 <__isoc99_sscanf@plt>
   113b0:	ldr	r1, [sp, #20]
   113b4:	b	11364 <getc@plt+0x950>
   113b8:	cmp	r8, #0
   113bc:	beq	113d0 <getc@plt+0x9bc>
   113c0:	ldr	r0, [pc, #60]	; 11404 <getc@plt+0x9f0>
   113c4:	mov	r1, r8
   113c8:	add	r0, pc, r0
   113cc:	bl	1236c <error@@Base+0xc4>
   113d0:	ldr	r8, [pc, #48]	; 11408 <getc@plt+0x9f4>
   113d4:	add	r8, pc, r8
   113d8:	b	113c0 <getc@plt+0x9ac>
   113dc:	andeq	r2, r0, r0, lsr #3
   113e0:	andeq	r4, r1, r8, asr #32
   113e4:	andeq	r2, r0, r0, ror r1
   113e8:	andeq	r2, r0, ip, ror #2
   113ec:	andeq	r3, r1, r4, lsr #30
   113f0:	andeq	r3, r1, r4, lsl #28
   113f4:	andeq	r3, r1, ip, ror #27
   113f8:	andeq	r3, r1, r0, lsr #27
   113fc:	andeq	r3, r1, r4, lsl #27
   11400:	andeq	r1, r0, r8, lsr #30
   11404:	andeq	r1, r0, ip, lsr #29
   11408:	andeq	r1, r0, r8, lsr lr
   1140c:	strd	r4, [sp, #-28]!	; 0xffffffe4
   11410:	mov	r4, #0
   11414:	strd	r6, [sp, #8]
   11418:	mov	r6, r0
   1141c:	mov	r0, r1
   11420:	ldr	r1, [pc, #848]	; 11778 <getc@plt+0xd64>
   11424:	add	r5, r6, #68	; 0x44
   11428:	strd	r8, [sp, #16]
   1142c:	str	lr, [sp, #24]
   11430:	sub	sp, sp, #20
   11434:	ldr	r8, [pc, #832]	; 1177c <getc@plt+0xd68>
   11438:	add	r1, pc, r1
   1143c:	ldr	r9, [pc, #828]	; 11780 <getc@plt+0xd6c>
   11440:	bl	123cc <error@@Base+0x124>
   11444:	ldr	r3, [pc, #824]	; 11784 <getc@plt+0xd70>
   11448:	mov	r7, r0
   1144c:	add	r8, pc, r8
   11450:	ldr	r2, [pc, #816]	; 11788 <getc@plt+0xd74>
   11454:	add	r9, pc, r9
   11458:	ldr	r1, [pc, #812]	; 1178c <getc@plt+0xd78>
   1145c:	add	r3, pc, r3
   11460:	add	r2, pc, r2
   11464:	add	r1, pc, r1
   11468:	bl	109b4 <fprintf@plt>
   1146c:	ldr	r3, [pc, #796]	; 11790 <getc@plt+0xd7c>
   11470:	mov	r1, r8
   11474:	mov	r0, r7
   11478:	ldr	r2, [r6]
   1147c:	add	r3, pc, r3
   11480:	bl	109b4 <fprintf@plt>
   11484:	ldr	r3, [pc, #776]	; 11794 <getc@plt+0xd80>
   11488:	mov	r1, r8
   1148c:	mov	r0, r7
   11490:	ldr	r2, [r6, #4]
   11494:	add	r3, pc, r3
   11498:	bl	109b4 <fprintf@plt>
   1149c:	ldr	r2, [r6]
   114a0:	mov	r0, r7
   114a4:	ldr	r1, [r6, #4]
   114a8:	sub	r1, r2, r1
   114ac:	bl	10db0 <getc@plt+0x39c>
   114b0:	ldr	r1, [pc, #736]	; 11798 <getc@plt+0xd84>
   114b4:	mov	r0, r7
   114b8:	add	r1, pc, r1
   114bc:	bl	109b4 <fprintf@plt>
   114c0:	ldr	r3, [pc, #724]	; 1179c <getc@plt+0xd88>
   114c4:	mov	r1, r8
   114c8:	mov	r0, r7
   114cc:	ldr	r2, [r6, #8]
   114d0:	add	r3, pc, r3
   114d4:	bl	109b4 <fprintf@plt>
   114d8:	ldr	r3, [pc, #704]	; 117a0 <getc@plt+0xd8c>
   114dc:	mov	r1, r8
   114e0:	mov	r0, r7
   114e4:	ldr	r2, [r6, #12]
   114e8:	add	r3, pc, r3
   114ec:	bl	109b4 <fprintf@plt>
   114f0:	ldr	r3, [pc, #684]	; 117a4 <getc@plt+0xd90>
   114f4:	mov	r1, r8
   114f8:	mov	r0, r7
   114fc:	ldr	r2, [r6, #16]
   11500:	add	r3, pc, r3
   11504:	bl	109b4 <fprintf@plt>
   11508:	mov	r0, r7
   1150c:	ldr	r2, [r6]
   11510:	ldr	r1, [r6, #8]
   11514:	ldr	r3, [r6, #12]
   11518:	add	r1, r1, r3
   1151c:	bl	10db0 <getc@plt+0x39c>
   11520:	ldr	r1, [pc, #640]	; 117a8 <getc@plt+0xd94>
   11524:	mov	r0, r7
   11528:	add	r1, pc, r1
   1152c:	bl	109b4 <fprintf@plt>
   11530:	ldr	r2, [r6]
   11534:	mov	r0, r7
   11538:	ldr	r1, [r6, #48]	; 0x30
   1153c:	sub	r1, r2, r1
   11540:	bl	10db0 <getc@plt+0x39c>
   11544:	ldr	r1, [pc, #608]	; 117ac <getc@plt+0xd98>
   11548:	mov	r0, r7
   1154c:	add	r1, pc, r1
   11550:	bl	109b4 <fprintf@plt>
   11554:	ldr	r0, [pc, #596]	; 117b0 <getc@plt+0xd9c>
   11558:	mov	r3, r7
   1155c:	mov	r2, #37	; 0x25
   11560:	mov	r1, #1
   11564:	add	r0, pc, r0
   11568:	bl	1093c <fwrite@plt>
   1156c:	ldr	r3, [pc, #576]	; 117b4 <getc@plt+0xda0>
   11570:	mov	r1, r9
   11574:	mov	r0, r7
   11578:	ldr	lr, [r6, #28]
   1157c:	ldr	ip, [r6, #32]
   11580:	add	r3, pc, r3
   11584:	str	r3, [sp, #8]
   11588:	ldr	r2, [r6, #20]
   1158c:	str	lr, [sp]
   11590:	ldr	r3, [r6, #24]
   11594:	str	ip, [sp, #4]
   11598:	bl	109b4 <fprintf@plt>
   1159c:	ldr	r3, [pc, #532]	; 117b8 <getc@plt+0xda4>
   115a0:	mov	r1, r9
   115a4:	mov	r0, r7
   115a8:	ldr	r2, [r6, #44]	; 0x2c
   115ac:	ldr	ip, [r6, #48]	; 0x30
   115b0:	add	r3, pc, r3
   115b4:	str	r2, [sp]
   115b8:	str	r3, [sp, #8]
   115bc:	ldr	r2, [r6, #36]	; 0x24
   115c0:	str	ip, [sp, #4]
   115c4:	ldr	r3, [r6, #40]	; 0x28
   115c8:	bl	109b4 <fprintf@plt>
   115cc:	ldr	r3, [pc, #488]	; 117bc <getc@plt+0xda8>
   115d0:	mov	r1, r9
   115d4:	mov	r0, r7
   115d8:	ldr	lr, [r6, #60]	; 0x3c
   115dc:	ldr	ip, [r6, #64]	; 0x40
   115e0:	add	r3, pc, r3
   115e4:	str	r3, [sp, #8]
   115e8:	ldr	r2, [r6, #52]	; 0x34
   115ec:	str	lr, [sp]
   115f0:	ldr	r3, [r6, #56]	; 0x38
   115f4:	str	ip, [sp, #4]
   115f8:	bl	109b4 <fprintf@plt>
   115fc:	ldr	r1, [pc, #444]	; 117c0 <getc@plt+0xdac>
   11600:	mov	r0, r7
   11604:	add	r1, pc, r1
   11608:	bl	109b4 <fprintf@plt>
   1160c:	ldr	r3, [r5, r4, lsl #3]
   11610:	mov	r0, r4
   11614:	cmp	r3, #0
   11618:	ble	11634 <getc@plt+0xc20>
   1161c:	bl	11f44 <getc@plt+0x1530>
   11620:	mov	r2, r0
   11624:	mov	r3, #0
   11628:	add	r1, r5, r4, lsl #3
   1162c:	mov	r0, r7
   11630:	bl	10e54 <getc@plt+0x440>
   11634:	add	r4, r4, #1
   11638:	cmp	r4, #256	; 0x100
   1163c:	bne	1160c <getc@plt+0xbf8>
   11640:	ldr	r2, [pc, #380]	; 117c4 <getc@plt+0xdb0>
   11644:	add	r1, r6, #2112	; 0x840
   11648:	mov	r3, #0
   1164c:	add	r1, r1, #4
   11650:	mov	r0, r7
   11654:	add	r2, pc, r2
   11658:	bl	10e54 <getc@plt+0x440>
   1165c:	ldr	r3, [r6, #4]
   11660:	cmp	r3, #0
   11664:	bgt	11694 <getc@plt+0xc80>
   11668:	ldr	r3, [r6]
   1166c:	cmp	r3, #0
   11670:	bgt	11724 <getc@plt+0xd10>
   11674:	mov	r0, r7
   11678:	add	sp, sp, #20
   1167c:	ldrd	r4, [sp]
   11680:	ldrd	r6, [sp, #8]
   11684:	ldrd	r8, [sp, #16]
   11688:	ldr	lr, [sp, #24]
   1168c:	add	sp, sp, #28
   11690:	b	12108 <getc@plt+0x16f4>
   11694:	add	r0, r6, #2112	; 0x840
   11698:	add	r5, r6, #8192	; 0x2000
   1169c:	add	r0, r0, #12
   116a0:	bl	11ccc <getc@plt+0x12b8>
   116a4:	ldr	r2, [pc, #284]	; 117c8 <getc@plt+0xdb4>
   116a8:	ldr	r1, [r5, #1980]	; 0x7bc
   116ac:	ldr	r0, [r5, #1984]	; 0x7c0
   116b0:	add	r2, pc, r2
   116b4:	bl	1197c <getc@plt+0xf68>
   116b8:	ldr	r0, [pc, #268]	; 117cc <getc@plt+0xdb8>
   116bc:	mov	r3, r7
   116c0:	mov	r2, #39	; 0x27
   116c4:	mov	r1, #1
   116c8:	add	r0, pc, r0
   116cc:	bl	1093c <fwrite@plt>
   116d0:	ldr	r3, [r5, #1984]	; 0x7c0
   116d4:	cmp	r3, #0
   116d8:	ble	11668 <getc@plt+0xc54>
   116dc:	ldr	r8, [pc, #236]	; 117d0 <getc@plt+0xdbc>
   116e0:	mov	r4, #0
   116e4:	add	r8, pc, r8
   116e8:	ldr	r3, [r5, #1980]	; 0x7bc
   116ec:	mov	r1, r8
   116f0:	mov	r0, r7
   116f4:	ldr	r3, [r3, r4, lsl #2]
   116f8:	add	r4, r4, #1
   116fc:	ldr	ip, [r3, #8]
   11700:	ldrd	r2, [r3, #12]
   11704:	str	ip, [sp]
   11708:	bl	109b4 <fprintf@plt>
   1170c:	ldr	r3, [r5, #1984]	; 0x7c0
   11710:	cmp	r3, r4
   11714:	bgt	116e8 <getc@plt+0xcd4>
   11718:	ldr	r3, [r6]
   1171c:	cmp	r3, #0
   11720:	ble	11674 <getc@plt+0xc60>
   11724:	ldr	r1, [pc, #168]	; 117d4 <getc@plt+0xdc0>
   11728:	add	r5, r6, #10176	; 0x27c0
   1172c:	mov	r0, r7
   11730:	movw	r6, #65535	; 0xffff
   11734:	movt	r6, #16
   11738:	add	r5, r5, #4
   1173c:	mov	r4, #0
   11740:	add	r1, pc, r1
   11744:	bl	109b4 <fprintf@plt>
   11748:	ldr	ip, [r5, r4, lsl #3]
   1174c:	mov	r2, #0
   11750:	mov	r3, r4
   11754:	add	r1, r5, r4, lsl #3
   11758:	mov	r0, r7
   1175c:	add	r4, r4, #1
   11760:	cmp	ip, r2
   11764:	ble	1176c <getc@plt+0xd58>
   11768:	bl	10e54 <getc@plt+0x440>
   1176c:	cmp	r4, r6
   11770:	bne	11748 <getc@plt+0xd34>
   11774:	b	11674 <getc@plt+0xc60>
   11778:	andeq	r1, r0, r0, asr lr
   1177c:	andeq	r1, r0, r4, asr lr
   11780:	andeq	r1, r0, r0, lsl #30
   11784:	andeq	r1, r0, r8, ror #27
   11788:			; <UNDEFINED> instruction: 0x00001db8
   1178c:	andeq	r1, r0, r8, lsr #28
   11790:	andeq	r1, r0, r8, lsl lr
   11794:	andeq	r1, r0, r8, lsl lr
   11798:	strdeq	r1, [r0], -ip
   1179c:	strdeq	r1, [r0], -r4
   117a0:	strdeq	r1, [r0], -r0
   117a4:	andeq	r1, r0, r8, ror #27
   117a8:	andeq	r1, r0, ip, asr #27
   117ac:	andeq	r1, r0, r0, asr #27
   117b0:	andeq	r1, r0, r8, asr #27
   117b4:	strdeq	r1, [r0], -r0
   117b8:	andeq	r1, r0, r8, asr #27
   117bc:	andeq	r1, r0, r4, lsr #27
   117c0:	andeq	r1, r0, r8, lsl #27
   117c4:	andeq	r1, r0, r0, lsr sp
   117c8:			; <UNDEFINED> instruction: 0xfffff768
   117cc:	andeq	r1, r0, r4, ror #25
   117d0:	strdeq	r1, [r0], -r0
   117d4:	andeq	r1, r0, ip, asr #24
   117d8:	ldr	r3, [pc, #400]	; 11970 <getc@plt+0xf5c>
   117dc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   117e0:	strd	r6, [sp, #8]
   117e4:	ldr	r6, [pc, #392]	; 11974 <getc@plt+0xf60>
   117e8:	strd	r8, [sp, #16]
   117ec:	add	r3, pc, r3
   117f0:	strd	sl, [sp, #24]
   117f4:	str	lr, [sp, #32]
   117f8:	sub	sp, sp, #20
   117fc:	add	r6, pc, r6
   11800:	str	r0, [sp]
   11804:	str	r3, [sp, #8]
   11808:	lsl	r3, r1, #2
   1180c:	str	r1, [sp, #4]
   11810:	str	r3, [sp, #12]
   11814:	ldr	r3, [sp]
   11818:	ldr	r2, [sp, #4]
   1181c:	cmp	r3, r2
   11820:	ldr	r2, [sp, #8]
   11824:	ldr	r1, [r2]
   11828:	ldr	r4, [r1, r3, lsl #2]
   1182c:	bge	11960 <getc@plt+0xf4c>
   11830:	ldr	r5, [pc, #320]	; 11978 <getc@plt+0xf64>
   11834:	ldm	sp, {r8, fp}
   11838:	add	r5, pc, r5
   1183c:	mov	r0, r4
   11840:	ldr	r1, [r1, fp, lsl #2]
   11844:	lsl	r9, fp, #2
   11848:	ldr	r3, [r5, #4]
   1184c:	blx	r3
   11850:	cmp	r0, #0
   11854:	bge	118e8 <getc@plt+0xed4>
   11858:	sub	fp, fp, #1
   1185c:	ldr	r1, [r5]
   11860:	cmp	r8, fp
   11864:	lslge	r9, fp, #2
   11868:	blt	1183c <getc@plt+0xe28>
   1186c:	cmp	fp, r8
   11870:	add	r7, r1, r9
   11874:	beq	118f8 <getc@plt+0xee4>
   11878:	ldr	r3, [r1, r9]
   1187c:	add	sl, r8, #1
   11880:	lsl	r7, r8, #2
   11884:	cmp	fp, sl
   11888:	str	r3, [r1, r8, lsl #2]
   1188c:	bgt	118a4 <getc@plt+0xe90>
   11890:	b	11940 <getc@plt+0xf2c>
   11894:	add	sl, sl, #1
   11898:	ldr	r1, [r6]
   1189c:	cmp	fp, sl
   118a0:	beq	118f0 <getc@plt+0xedc>
   118a4:	mov	r0, r4
   118a8:	ldr	r1, [r1, sl, lsl #2]
   118ac:	lsl	r7, sl, #2
   118b0:	ldr	r3, [r6, #4]
   118b4:	blx	r3
   118b8:	cmp	r0, #0
   118bc:	bgt	11894 <getc@plt+0xe80>
   118c0:	ldr	r1, [r6]
   118c4:	mov	r8, sl
   118c8:	add	r7, r1, r7
   118cc:	ldr	r3, [r7]
   118d0:	sub	fp, fp, #1
   118d4:	cmp	fp, sl
   118d8:	str	r3, [r1, r9]
   118dc:	bgt	1183c <getc@plt+0xe28>
   118e0:	add	r7, r1, fp, lsl #2
   118e4:	b	118fc <getc@plt+0xee8>
   118e8:	ldr	r1, [r5]
   118ec:	b	1186c <getc@plt+0xe58>
   118f0:	add	r7, r1, r9
   118f4:	mov	r8, fp
   118f8:	mov	fp, r8
   118fc:	ldr	r3, [sp]
   11900:	sub	r1, fp, #1
   11904:	str	r4, [r7]
   11908:	cmp	r3, r1
   1190c:	blt	11954 <getc@plt+0xf40>
   11910:	ldr	r2, [sp, #4]
   11914:	add	r3, r8, #1
   11918:	str	r3, [sp]
   1191c:	cmp	r3, r2
   11920:	blt	11814 <getc@plt+0xe00>
   11924:	add	sp, sp, #20
   11928:	ldrd	r4, [sp]
   1192c:	ldrd	r6, [sp, #8]
   11930:	ldrd	r8, [sp, #16]
   11934:	ldrd	sl, [sp, #24]
   11938:	add	sp, sp, #32
   1193c:	pop	{pc}		; (ldr pc, [sp], #4)
   11940:	add	r7, r7, #4
   11944:	add	r7, r1, r7
   11948:	beq	118f4 <getc@plt+0xee0>
   1194c:	mov	r8, sl
   11950:	b	118cc <getc@plt+0xeb8>
   11954:	mov	r0, r3
   11958:	bl	117d8 <getc@plt+0xdc4>
   1195c:	b	11910 <getc@plt+0xefc>
   11960:	ldm	sp, {r8, fp}
   11964:	ldr	r3, [sp, #12]
   11968:	add	r7, r1, r3
   1196c:	b	118fc <getc@plt+0xee8>
   11970:	andeq	r3, r1, ip, lsr r9
   11974:	andeq	r3, r1, ip, lsr #18
   11978:	strdeq	r3, [r1], -r0
   1197c:	cmp	r0, #1
   11980:	mov	ip, r1
   11984:	ble	119a4 <getc@plt+0xf90>
   11988:	ldr	r3, [pc, #24]	; 119a8 <getc@plt+0xf94>
   1198c:	sub	r1, r0, #1
   11990:	mov	r0, #0
   11994:	add	r3, pc, r3
   11998:	str	ip, [r3]
   1199c:	str	r2, [r3, #4]
   119a0:	b	117d8 <getc@plt+0xdc4>
   119a4:	bx	lr
   119a8:	muleq	r1, r4, r7
   119ac:	andeq	r0, r0, r0
   119b0:	cmp	r1, #0
   119b4:	beq	11a1c <getc@plt+0x1008>
   119b8:	sub	r3, r1, r2
   119bc:	vldr	d6, [pc, #92]	; 11a20 <getc@plt+0x100c>
   119c0:	vmov	s14, r3
   119c4:	vcvt.f64.s32	d7, s14
   119c8:	vmul.f64	d7, d7, d6
   119cc:	vmov	s13, r1
   119d0:	vcvt.f64.s32	d5, s13
   119d4:	vdiv.f64	d6, d7, d5
   119d8:	vcmpe.f64	d6, #0.0
   119dc:	vmrs	APSR_nzcv, fpscr
   119e0:	blt	11a10 <getc@plt+0xffc>
   119e4:	mov	r3, #0
   119e8:	ldr	r2, [r0, r3, lsl #2]
   119ec:	add	ip, r3, #1
   119f0:	add	r2, r2, r1
   119f4:	str	r2, [r0, r3, lsl #2]
   119f8:	sxth	r3, ip
   119fc:	vmov	s15, r3
   11a00:	vcvt.f64.s32	d7, s15
   11a04:	vcmpe.f64	d7, d6
   11a08:	vmrs	APSR_nzcv, fpscr
   11a0c:	bls	119e8 <getc@plt+0xfd4>
   11a10:	ldr	r3, [r0, #404]	; 0x194
   11a14:	add	r1, r3, r1
   11a18:	str	r1, [r0, #404]	; 0x194
   11a1c:	bx	lr
   11a20:	andeq	r0, r0, r0
   11a24:	subsmi	r0, r9, r0
   11a28:	ldr	r3, [r0, #404]	; 0x194
   11a2c:	cmp	r3, #0
   11a30:	bxeq	lr
   11a34:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11a38:	mov	r4, #0
   11a3c:	strd	r6, [sp, #8]
   11a40:	mov	r6, r0
   11a44:	mov	r0, r1
   11a48:	ldr	r1, [pc, #144]	; 11ae0 <getc@plt+0x10cc>
   11a4c:	sub	r5, r6, #4
   11a50:	str	r8, [sp, #16]
   11a54:	ldr	r8, [pc, #136]	; 11ae4 <getc@plt+0x10d0>
   11a58:	str	lr, [sp, #20]
   11a5c:	vpush	{d8}
   11a60:	sub	sp, sp, #8
   11a64:	vldr	d8, [pc, #108]	; 11ad8 <getc@plt+0x10c4>
   11a68:	add	r1, pc, r1
   11a6c:	bl	123cc <error@@Base+0x124>
   11a70:	add	r8, pc, r8
   11a74:	mov	r7, r0
   11a78:	ldr	r3, [r5, #4]!
   11a7c:	mov	r2, r4
   11a80:	mov	r1, r8
   11a84:	add	r4, r4, #1
   11a88:	mov	r0, r7
   11a8c:	vldr	s13, [r6, #404]	; 0x194
   11a90:	vmov	s14, r3
   11a94:	vcvt.f64.s32	d6, s13
   11a98:	vcvt.f64.s32	d7, s14
   11a9c:	vmul.f64	d7, d7, d8
   11aa0:	vdiv.f64	d5, d7, d6
   11aa4:	vstr	d5, [sp]
   11aa8:	bl	109b4 <fprintf@plt>
   11aac:	cmp	r4, #101	; 0x65
   11ab0:	bne	11a78 <getc@plt+0x1064>
   11ab4:	mov	r0, r7
   11ab8:	add	sp, sp, #8
   11abc:	vpop	{d8}
   11ac0:	ldrd	r4, [sp]
   11ac4:	ldrd	r6, [sp, #8]
   11ac8:	ldr	r8, [sp, #16]
   11acc:	ldr	lr, [sp, #20]
   11ad0:	add	sp, sp, #24
   11ad4:	b	12108 <getc@plt+0x16f4>
   11ad8:	andeq	r0, r0, r0
   11adc:	subsmi	r0, r9, r0
   11ae0:	andeq	r1, r0, r0, lsr #16
   11ae4:	andeq	r1, r0, r4, ror r9
   11ae8:	strd	r4, [sp, #-16]!
   11aec:	add	r5, r0, #8000	; 0x1f40
   11af0:	mov	r4, r0
   11af4:	add	r5, r5, #48	; 0x30
   11af8:	str	r6, [sp, #8]
   11afc:	mov	r6, r0
   11b00:	str	lr, [sp, #12]
   11b04:	mov	r0, r4
   11b08:	add	r4, r4, #16
   11b0c:	bl	12ea4 <error@@Base+0xbfc>
   11b10:	cmp	r4, r5
   11b14:	bne	11b04 <getc@plt+0x10f0>
   11b18:	add	r6, r6, #4096	; 0x1000
   11b1c:	mov	r3, #0
   11b20:	ldrd	r4, [sp]
   11b24:	str	r3, [r6, #3952]	; 0xf70
   11b28:	str	r3, [r6, #3956]	; 0xf74
   11b2c:	ldr	r6, [sp, #8]
   11b30:	add	sp, sp, #12
   11b34:	pop	{pc}		; (ldr pc, [sp], #4)
   11b38:	strd	r4, [sp, #-16]!
   11b3c:	mov	r5, r1
   11b40:	str	r6, [sp, #8]
   11b44:	str	lr, [sp, #12]
   11b48:	ldrb	r3, [r1]
   11b4c:	cmp	r3, #0
   11b50:	beq	11b80 <getc@plt+0x116c>
   11b54:	mov	r2, #0
   11b58:	add	r2, r2, r3
   11b5c:	ldrb	r3, [r1, #1]!
   11b60:	cmp	r3, #0
   11b64:	bne	11b58 <getc@plt+0x1144>
   11b68:	movw	r3, #20065	; 0x4e61
   11b6c:	movt	r3, #33354	; 0x824a
   11b70:	movw	r1, #503	; 0x1f7
   11b74:	umull	ip, r3, r3, r2
   11b78:	lsr	r3, r3, #8
   11b7c:	mls	r3, r1, r3, r2
   11b80:	ldr	r4, [r0, r3, lsl #4]
   11b84:	cmp	r4, #0
   11b88:	bne	11b9c <getc@plt+0x1188>
   11b8c:	b	11bb0 <getc@plt+0x119c>
   11b90:	ldr	r4, [r4, #4]
   11b94:	cmp	r4, #0
   11b98:	beq	11bb0 <getc@plt+0x119c>
   11b9c:	mov	r0, r5
   11ba0:	ldr	r1, [r4, #8]
   11ba4:	bl	108b8 <strcmp@plt>
   11ba8:	cmp	r0, #0
   11bac:	bne	11b90 <getc@plt+0x117c>
   11bb0:	mov	r0, r4
   11bb4:	ldrd	r4, [sp]
   11bb8:	ldr	r6, [sp, #8]
   11bbc:	add	sp, sp, #12
   11bc0:	pop	{pc}		; (ldr pc, [sp], #4)
   11bc4:	ldr	r2, [r1, #8]
   11bc8:	str	r4, [sp, #-8]!
   11bcc:	mov	r4, r0
   11bd0:	str	lr, [sp, #4]
   11bd4:	ldrb	r3, [r2]
   11bd8:	cmp	r3, #0
   11bdc:	beq	11c10 <getc@plt+0x11fc>
   11be0:	mov	r0, #0
   11be4:	add	r0, r0, r3
   11be8:	ldrb	r3, [r2, #1]!
   11bec:	cmp	r3, #0
   11bf0:	bne	11be4 <getc@plt+0x11d0>
   11bf4:	movw	r3, #20065	; 0x4e61
   11bf8:	movt	r3, #33354	; 0x824a
   11bfc:	movw	r2, #503	; 0x1f7
   11c00:	umull	ip, r3, r3, r0
   11c04:	lsr	r3, r3, #8
   11c08:	mls	r0, r2, r3, r0
   11c0c:	add	r0, r4, r0, lsl #4
   11c10:	add	r4, r4, #4096	; 0x1000
   11c14:	bl	12ebc <error@@Base+0xc14>
   11c18:	ldr	r0, [r4, #3952]	; 0xf70
   11c1c:	cmp	r0, #0
   11c20:	beq	11c30 <getc@plt+0x121c>
   11c24:	bl	108d0 <free@plt>
   11c28:	mov	r3, #0
   11c2c:	str	r3, [r4, #3952]	; 0xf70
   11c30:	ldr	r3, [r4, #3956]	; 0xf74
   11c34:	add	r3, r3, #1
   11c38:	str	r3, [r4, #3956]	; 0xf74
   11c3c:	ldr	r4, [sp]
   11c40:	add	sp, sp, #4
   11c44:	pop	{pc}		; (ldr pc, [sp], #4)
   11c48:	ldr	r2, [r1, #8]
   11c4c:	str	r4, [sp, #-8]!
   11c50:	mov	r4, r0
   11c54:	str	lr, [sp, #4]
   11c58:	ldrb	r3, [r2]
   11c5c:	cmp	r3, #0
   11c60:	beq	11c94 <getc@plt+0x1280>
   11c64:	mov	r0, #0
   11c68:	add	r0, r0, r3
   11c6c:	ldrb	r3, [r2, #1]!
   11c70:	cmp	r3, #0
   11c74:	bne	11c68 <getc@plt+0x1254>
   11c78:	movw	r3, #20065	; 0x4e61
   11c7c:	movt	r3, #33354	; 0x824a
   11c80:	movw	r2, #503	; 0x1f7
   11c84:	umull	ip, r3, r3, r0
   11c88:	lsr	r3, r3, #8
   11c8c:	mls	r0, r2, r3, r0
   11c90:	add	r0, r4, r0, lsl #4
   11c94:	add	r4, r4, #4096	; 0x1000
   11c98:	bl	1301c <error@@Base+0xd74>
   11c9c:	ldr	r0, [r4, #3952]	; 0xf70
   11ca0:	cmp	r0, #0
   11ca4:	beq	11cb4 <getc@plt+0x12a0>
   11ca8:	bl	108d0 <free@plt>
   11cac:	mov	r3, #0
   11cb0:	str	r3, [r4, #3952]	; 0xf70
   11cb4:	ldr	r3, [r4, #3956]	; 0xf74
   11cb8:	sub	r3, r3, #1
   11cbc:	str	r3, [r4, #3956]	; 0xf74
   11cc0:	ldr	r4, [sp]
   11cc4:	add	sp, sp, #4
   11cc8:	pop	{pc}		; (ldr pc, [sp], #4)
   11ccc:	strd	r4, [sp, #-16]!
   11cd0:	str	r6, [sp, #8]
   11cd4:	add	r6, r0, #4096	; 0x1000
   11cd8:	ldr	r4, [r6, #3952]	; 0xf70
   11cdc:	str	lr, [sp, #12]
   11ce0:	cmp	r4, #0
   11ce4:	beq	11cf8 <getc@plt+0x12e4>
   11ce8:	ldrd	r4, [sp]
   11cec:	ldr	r6, [sp, #8]
   11cf0:	add	sp, sp, #12
   11cf4:	pop	{pc}		; (ldr pc, [sp], #4)
   11cf8:	ldr	r3, [r6, #3956]	; 0xf74
   11cfc:	cmp	r3, #0
   11d00:	beq	11ce8 <getc@plt+0x12d4>
   11d04:	mov	r5, r0
   11d08:	mov	r1, #4
   11d0c:	mov	r0, r3
   11d10:	bl	12304 <error@@Base+0x5c>
   11d14:	mov	r2, r4
   11d18:	mov	ip, r4
   11d1c:	str	r0, [r6, #3952]	; 0xf70
   11d20:	movw	lr, #503	; 0x1f7
   11d24:	ldr	r3, [r5, ip, lsl #4]
   11d28:	cmp	r3, #0
   11d2c:	beq	11d48 <getc@plt+0x1334>
   11d30:	add	r1, r0, r2, lsl #2
   11d34:	str	r3, [r1], #4
   11d38:	add	r2, r2, #1
   11d3c:	ldr	r3, [r3, #4]
   11d40:	cmp	r3, #0
   11d44:	bne	11d34 <getc@plt+0x1320>
   11d48:	add	ip, ip, #1
   11d4c:	cmp	ip, lr
   11d50:	bne	11d24 <getc@plt+0x1310>
   11d54:	ldrd	r4, [sp]
   11d58:	ldr	r6, [sp, #8]
   11d5c:	add	sp, sp, #12
   11d60:	pop	{pc}		; (ldr pc, [sp], #4)
   11d64:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11d68:	add	r5, r0, #8000	; 0x1f40
   11d6c:	mov	r4, r0
   11d70:	add	r5, r5, #48	; 0x30
   11d74:	strd	r6, [sp, #8]
   11d78:	mov	r7, r0
   11d7c:	mov	r6, r1
   11d80:	str	r8, [sp, #16]
   11d84:	str	lr, [sp, #20]
   11d88:	mov	r0, r4
   11d8c:	mov	r1, r6
   11d90:	add	r4, r4, #16
   11d94:	bl	130e8 <error@@Base+0xe40>
   11d98:	cmp	r4, r5
   11d9c:	bne	11d88 <getc@plt+0x1374>
   11da0:	add	r7, r7, #4096	; 0x1000
   11da4:	ldr	r0, [r7, #3952]	; 0xf70
   11da8:	cmp	r0, #0
   11dac:	beq	11dbc <getc@plt+0x13a8>
   11db0:	bl	108d0 <free@plt>
   11db4:	mov	r3, #0
   11db8:	str	r3, [r7, #3952]	; 0xf70
   11dbc:	mov	r3, #0
   11dc0:	ldrd	r4, [sp]
   11dc4:	ldr	r8, [sp, #16]
   11dc8:	str	r3, [r7, #3956]	; 0xf74
   11dcc:	ldrd	r6, [sp, #8]
   11dd0:	add	sp, sp, #20
   11dd4:	pop	{pc}		; (ldr pc, [sp], #4)
   11dd8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11ddc:	ldr	r5, [pc, #260]	; 11ee8 <getc@plt+0x14d4>
   11de0:	strd	r6, [sp, #8]
   11de4:	ldr	r3, [pc, #256]	; 11eec <getc@plt+0x14d8>
   11de8:	strd	r8, [sp, #16]
   11dec:	ldr	r6, [pc, #252]	; 11ef0 <getc@plt+0x14dc>
   11df0:	add	r5, pc, r5
   11df4:	strd	sl, [sp, #24]
   11df8:	ldr	r8, [pc, #244]	; 11ef4 <getc@plt+0x14e0>
   11dfc:	add	r7, r5, #1088	; 0x440
   11e00:	add	r3, pc, r3
   11e04:	add	r7, r7, #4
   11e08:	str	lr, [sp, #32]
   11e0c:	sub	sp, sp, #12
   11e10:	add	r6, pc, r6
   11e14:	str	r3, [sp, #4]
   11e18:	add	r8, pc, r8
   11e1c:	ldrsh	sl, [r6]
   11e20:	cmp	sl, #0
   11e24:	ble	11eac <getc@plt+0x1498>
   11e28:	mov	r9, r6
   11e2c:	mov	r4, #0
   11e30:	ldr	fp, [r5, #8]
   11e34:	b	11e44 <getc@plt+0x1430>
   11e38:	add	r4, r4, #1
   11e3c:	cmp	sl, r4
   11e40:	beq	11eb8 <getc@plt+0x14a4>
   11e44:	mov	r0, fp
   11e48:	ldr	r1, [r9, #4]!
   11e4c:	bl	108b8 <strcmp@plt>
   11e50:	cmp	r0, #0
   11e54:	bne	11e38 <getc@plt+0x1424>
   11e58:	ldr	r3, [r5]
   11e5c:	ldr	r1, [r5, #4]
   11e60:	cmp	r3, r1
   11e64:	subls	r2, r3, #1
   11e68:	uxtbls	r4, r4
   11e6c:	addls	r2, r2, r8
   11e70:	bhi	11e84 <getc@plt+0x1470>
   11e74:	add	r3, r3, #1
   11e78:	strb	r4, [r2, #1]!
   11e7c:	cmp	r3, r1
   11e80:	bls	11e74 <getc@plt+0x1460>
   11e84:	add	r5, r5, #12
   11e88:	cmp	r5, r7
   11e8c:	bne	11e1c <getc@plt+0x1408>
   11e90:	add	sp, sp, #12
   11e94:	ldrd	r4, [sp]
   11e98:	ldrd	r6, [sp, #8]
   11e9c:	ldrd	r8, [sp, #16]
   11ea0:	ldrd	sl, [sp, #24]
   11ea4:	add	sp, sp, #32
   11ea8:	pop	{pc}		; (ldr pc, [sp], #4)
   11eac:	movne	r4, #0
   11eb0:	bne	11e58 <getc@plt+0x1444>
   11eb4:	mov	r4, sl
   11eb8:	cmp	sl, #256	; 0x100
   11ebc:	beq	11edc <getc@plt+0x14c8>
   11ec0:	ldr	r1, [sp, #4]
   11ec4:	add	sl, sl, #1
   11ec8:	ldr	r2, [r5, #8]
   11ecc:	add	r3, r1, r4, lsl #2
   11ed0:	strh	sl, [r1]
   11ed4:	str	r2, [r3, #4]
   11ed8:	b	11e58 <getc@plt+0x1444>
   11edc:	ldr	r0, [pc, #20]	; 11ef8 <getc@plt+0x14e4>
   11ee0:	add	r0, pc, r0
   11ee4:	bl	122a8 <error@@Base>
   11ee8:	andeq	r2, r1, ip, asr #25
   11eec:	andeq	r3, r1, r0, lsr r3
   11ef0:	andeq	r3, r1, r0, lsr #6
   11ef4:	andeq	r3, r1, ip, lsl r7
   11ef8:	andeq	r1, r0, r0, lsl r5
   11efc:	ldr	r3, [pc, #56]	; 11f3c <getc@plt+0x1528>
   11f00:	str	r4, [sp, #-8]!
   11f04:	mov	r4, r0
   11f08:	add	r3, pc, r3
   11f0c:	ldrsh	r3, [r3]
   11f10:	str	lr, [sp, #4]
   11f14:	cmp	r3, #0
   11f18:	beq	11f34 <getc@plt+0x1520>
   11f1c:	ldr	r3, [pc, #28]	; 11f40 <getc@plt+0x152c>
   11f20:	add	r3, pc, r3
   11f24:	ldrb	r0, [r3, r4]
   11f28:	ldr	r4, [sp]
   11f2c:	add	sp, sp, #4
   11f30:	pop	{pc}		; (ldr pc, [sp], #4)
   11f34:	bl	11dd8 <getc@plt+0x13c4>
   11f38:	b	11f1c <getc@plt+0x1508>
   11f3c:	andeq	r3, r1, r8, lsr #4
   11f40:	andeq	r3, r1, r4, lsl r6
   11f44:	strd	r4, [sp, #-16]!
   11f48:	uxtb	r4, r0
   11f4c:	ldr	r5, [pc, #84]	; 11fa8 <getc@plt+0x1594>
   11f50:	add	r5, pc, r5
   11f54:	ldrsh	r2, [r5]
   11f58:	str	r6, [sp, #8]
   11f5c:	str	lr, [sp, #12]
   11f60:	cmp	r2, #0
   11f64:	beq	11f90 <getc@plt+0x157c>
   11f68:	cmp	r4, r2
   11f6c:	bge	11f9c <getc@plt+0x1588>
   11f70:	ldr	r3, [pc, #52]	; 11fac <getc@plt+0x1598>
   11f74:	ldr	r6, [sp, #8]
   11f78:	add	r3, pc, r3
   11f7c:	add	r3, r3, r4, lsl #2
   11f80:	ldrd	r4, [sp]
   11f84:	add	sp, sp, #12
   11f88:	ldr	r0, [r3, #4]
   11f8c:	pop	{pc}		; (ldr pc, [sp], #4)
   11f90:	bl	11dd8 <getc@plt+0x13c4>
   11f94:	ldrsh	r2, [r5]
   11f98:	b	11f68 <getc@plt+0x1554>
   11f9c:	ldr	r0, [pc, #12]	; 11fb0 <getc@plt+0x159c>
   11fa0:	add	r0, pc, r0
   11fa4:	bl	122a8 <error@@Base>
   11fa8:	andeq	r3, r1, r0, ror #3
   11fac:			; <UNDEFINED> instruction: 0x000131b8
   11fb0:	andeq	r1, r0, ip, ror #8
   11fb4:	ldr	r3, [pc, #96]	; 1201c <getc@plt+0x1608>
   11fb8:	strd	r4, [sp, #-16]!
   11fbc:	ldr	r2, [pc, #92]	; 12020 <getc@plt+0x160c>
   11fc0:	str	r6, [sp, #8]
   11fc4:	mov	r6, r0
   11fc8:	str	lr, [sp, #12]
   11fcc:	sub	sp, sp, #112	; 0x70
   11fd0:	add	r3, pc, r3
   11fd4:	add	r4, sp, #12
   11fd8:	ldr	r3, [r3, r2]
   11fdc:	ldr	r5, [r3]
   11fe0:	bl	10984 <getpid@plt>
   11fe4:	ldr	r1, [pc, #56]	; 12024 <getc@plt+0x1610>
   11fe8:	mov	r3, r0
   11fec:	mov	r0, r4
   11ff0:	str	r6, [sp]
   11ff4:	mov	r2, r5
   11ff8:	add	r1, pc, r1
   11ffc:	bl	109d8 <sprintf@plt>
   12000:	mov	r0, r4
   12004:	bl	10900 <strdup@plt>
   12008:	add	sp, sp, #112	; 0x70
   1200c:	ldrd	r4, [sp]
   12010:	ldr	r6, [sp, #8]
   12014:	add	sp, sp, #12
   12018:	pop	{pc}		; (ldr pc, [sp], #4)
   1201c:	andeq	r3, r1, r8, lsr #32
   12020:	muleq	r0, ip, r0
   12024:	andeq	r1, r0, r4, ror #20
   12028:	ldr	r3, [pc, #116]	; 120a4 <getc@plt+0x1690>
   1202c:	mov	r6, r0
   12030:	str	r7, [sp, #-8]!
   12034:	ldr	r2, [pc, #108]	; 120a8 <getc@plt+0x1694>
   12038:	str	lr, [sp, #4]
   1203c:	add	r3, pc, r3
   12040:	ldr	r3, [r3, r2]
   12044:	ldr	r3, [r3]
   12048:	cmp	r3, #0
   1204c:	beq	12054 <getc@plt+0x1640>
   12050:	blx	r3
   12054:	ldr	r3, [pc, #80]	; 120ac <getc@plt+0x1698>
   12058:	add	r3, pc, r3
   1205c:	ldrsh	r2, [r3]
   12060:	cmp	r2, #0
   12064:	ble	1209c <getc@plt+0x1688>
   12068:	mov	r5, r3
   1206c:	mov	r4, #1
   12070:	mov	r0, r4
   12074:	add	r4, r4, #1
   12078:	bl	11fb4 <getc@plt+0x15a0>
   1207c:	mov	r7, r0
   12080:	sxth	r4, r4
   12084:	bl	10918 <unlink@plt>
   12088:	mov	r0, r7
   1208c:	bl	108d0 <free@plt>
   12090:	ldrsh	r3, [r5]
   12094:	cmp	r3, r4
   12098:	bge	12070 <getc@plt+0x165c>
   1209c:	mov	r0, r6
   120a0:	bl	10990 <exit@plt>
   120a4:			; <UNDEFINED> instruction: 0x00012fbc
   120a8:	andeq	r0, r0, r0, lsr #1
   120ac:			; <UNDEFINED> instruction: 0x001234dc
   120b0:	ldrb	r3, [r0]
   120b4:	ldrb	r2, [r1]
   120b8:	cmp	r3, #0
   120bc:	beq	120e4 <getc@plt+0x16d0>
   120c0:	cmp	r2, r3
   120c4:	beq	120d4 <getc@plt+0x16c0>
   120c8:	b	120f0 <getc@plt+0x16dc>
   120cc:	cmp	r3, r2
   120d0:	bne	120f0 <getc@plt+0x16dc>
   120d4:	ldrb	r3, [r0, #1]!
   120d8:	ldrb	r2, [r1, #1]!
   120dc:	cmp	r3, #0
   120e0:	bne	120cc <getc@plt+0x16b8>
   120e4:	cmp	r2, #0
   120e8:	beq	12100 <getc@plt+0x16ec>
   120ec:	mov	r3, #0
   120f0:	cmp	r3, r2
   120f4:	mvncc	r0, #0
   120f8:	movcs	r0, #1
   120fc:	bx	lr
   12100:	mov	r0, r2
   12104:	bx	lr
   12108:	ldr	r3, [pc, #48]	; 12140 <getc@plt+0x172c>
   1210c:	ldr	r1, [pc, #48]	; 12144 <getc@plt+0x1730>
   12110:	add	r3, pc, r3
   12114:	ldr	r1, [r3, r1]
   12118:	ldr	r1, [r1]
   1211c:	cmp	r1, r0
   12120:	beq	1213c <getc@plt+0x1728>
   12124:	ldr	r1, [pc, #28]	; 12148 <getc@plt+0x1734>
   12128:	ldr	r3, [r3, r1]
   1212c:	ldr	r3, [r3]
   12130:	cmp	r3, r0
   12134:	beq	1213c <getc@plt+0x1728>
   12138:	b	109cc <fclose@plt>
   1213c:	bx	lr
   12140:	andeq	r2, r1, r8, ror #29
   12144:	andeq	r0, r0, r8, lsr #1
   12148:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   1214c:	push	{lr}		; (str lr, [sp, #-4]!)
   12150:	sub	sp, sp, #92	; 0x5c
   12154:	mov	r1, r0
   12158:	mov	r2, sp
   1215c:	mov	r0, #3
   12160:	bl	10930 <__xstat@plt>
   12164:	clz	r0, r0
   12168:	lsr	r0, r0, #5
   1216c:	add	sp, sp, #92	; 0x5c
   12170:	pop	{pc}		; (ldr pc, [sp], #4)
   12174:	ldr	r2, [pc, #56]	; 121b4 <getc@plt+0x17a0>
   12178:	str	r4, [sp, #-8]!
   1217c:	add	r2, pc, r2
   12180:	ldrh	r3, [r2]
   12184:	str	lr, [sp, #4]
   12188:	add	r3, r3, #1
   1218c:	sxth	r3, r3
   12190:	mov	r0, r3
   12194:	strh	r3, [r2]
   12198:	bl	11fb4 <getc@plt+0x15a0>
   1219c:	mov	r4, r0
   121a0:	bl	10918 <unlink@plt>
   121a4:	mov	r0, r4
   121a8:	ldr	r4, [sp]
   121ac:	add	sp, sp, #4
   121b0:	pop	{pc}		; (ldr pc, [sp], #4)
   121b4:			; <UNDEFINED> instruction: 0x001233b8
   121b8:	str	r4, [sp, #-8]!
   121bc:	mov	r4, r0
   121c0:	str	lr, [sp, #4]
   121c4:	bl	109a8 <strlen@plt>
   121c8:	uxth	r0, r0
   121cc:	sub	r3, r0, #1
   121d0:	sxth	r3, r3
   121d4:	cmp	r3, #0
   121d8:	blt	12218 <getc@plt+0x1804>
   121dc:	ldrb	r2, [r4, r3]
   121e0:	cmp	r2, #47	; 0x2f
   121e4:	beq	12218 <getc@plt+0x1804>
   121e8:	sub	r0, r0, #2
   121ec:	sxth	r3, r0
   121f0:	add	r2, r3, #1
   121f4:	add	r2, r4, r2
   121f8:	b	1220c <getc@plt+0x17f8>
   121fc:	ldrb	r0, [r2, #-1]!
   12200:	cmp	r0, #47	; 0x2f
   12204:	beq	12218 <getc@plt+0x1804>
   12208:	mov	r3, r1
   1220c:	tst	r3, #32768	; 0x8000
   12210:	sub	r1, r3, #1
   12214:	beq	121fc <getc@plt+0x17e8>
   12218:	add	r0, r3, #1
   1221c:	add	r0, r4, r0
   12220:	ldr	r4, [sp]
   12224:	add	sp, sp, #4
   12228:	pop	{pc}		; (ldr pc, [sp], #4)
   1222c:	mov	r0, #0
   12230:	str	r4, [sp, #-8]!
   12234:	str	lr, [sp, #4]
   12238:	bl	12028 <getc@plt+0x1614>
   1223c:	ldr	r2, [pc, #80]	; 12294 <getc@plt+0x1880>
   12240:	str	r4, [sp, #-8]!
   12244:	ldr	r1, [pc, #76]	; 12298 <getc@plt+0x1884>
   12248:	str	lr, [sp, #4]
   1224c:	add	r2, pc, r2
   12250:	ldr	r1, [r2, r1]
   12254:	ldr	r1, [r1]
   12258:	cmp	r1, #0
   1225c:	beq	12268 <getc@plt+0x1854>
   12260:	blx	r1
   12264:	bl	1222c <getc@plt+0x1818>
   12268:	mov	r3, r0
   1226c:	ldr	ip, [pc, #40]	; 1229c <getc@plt+0x1888>
   12270:	ldr	r0, [pc, #40]	; 122a0 <getc@plt+0x188c>
   12274:	ldr	r1, [pc, #40]	; 122a4 <getc@plt+0x1890>
   12278:	ldr	ip, [r2, ip]
   1227c:	ldr	r0, [r2, r0]
   12280:	add	r1, pc, r1
   12284:	ldr	r2, [ip]
   12288:	ldr	r0, [r0]
   1228c:	bl	109b4 <fprintf@plt>
   12290:	b	12264 <getc@plt+0x1850>
   12294:	andeq	r2, r1, ip, lsr #27
   12298:	muleq	r0, r0, r0
   1229c:	muleq	r0, ip, r0
   122a0:	muleq	r0, r4, r0
   122a4:	andeq	r1, r0, ip, ror #15

000122a8 <error@@Base>:
   122a8:	str	r4, [sp, #-8]!
   122ac:	mov	r3, r0
   122b0:	ldr	r4, [pc, #56]	; 122f0 <error@@Base+0x48>
   122b4:	str	lr, [sp, #4]
   122b8:	ldr	r0, [pc, #52]	; 122f4 <error@@Base+0x4c>
   122bc:	ldr	r2, [pc, #52]	; 122f8 <error@@Base+0x50>
   122c0:	add	r4, pc, r4
   122c4:	ldr	r1, [pc, #48]	; 122fc <error@@Base+0x54>
   122c8:	ldr	ip, [r4, r0]
   122cc:	ldr	r0, [r4, r2]
   122d0:	add	r1, pc, r1
   122d4:	ldr	r2, [ip]
   122d8:	ldr	r0, [r0]
   122dc:	bl	109b4 <fprintf@plt>
   122e0:	ldr	r3, [pc, #24]	; 12300 <error@@Base+0x58>
   122e4:	ldr	r3, [r4, r3]
   122e8:	ldr	r0, [r3]
   122ec:	bl	12028 <getc@plt+0x1614>
   122f0:	andeq	r2, r1, r8, lsr sp
   122f4:	muleq	r0, ip, r0
   122f8:	muleq	r0, r4, r0
   122fc:	andeq	r1, r0, ip, lsr #15
   12300:	strheq	r0, [r0], -r4
   12304:	str	r4, [sp, #-8]!
   12308:	str	lr, [sp, #4]
   1230c:	bl	108ac <calloc@plt>
   12310:	cmp	r0, #0
   12314:	beq	12324 <error@@Base+0x7c>
   12318:	ldr	r4, [sp]
   1231c:	add	sp, sp, #4
   12320:	pop	{pc}		; (ldr pc, [sp], #4)
   12324:	ldr	r0, [pc, #4]	; 12330 <error@@Base+0x88>
   12328:	add	r0, pc, r0
   1232c:	bl	122a8 <error@@Base>
   12330:	andeq	r1, r0, ip, asr r7
   12334:	ldr	r3, [pc, #40]	; 12364 <error@@Base+0xbc>
   12338:	add	r3, pc, r3
   1233c:	ldrb	r2, [r3, #2]
   12340:	cmp	r2, #0
   12344:	bxne	lr
   12348:	ldr	r0, [pc, #24]	; 12368 <error@@Base+0xc0>
   1234c:	mov	r2, #1
   12350:	str	r4, [sp, #-8]!
   12354:	str	lr, [sp, #4]
   12358:	strb	r2, [r3, #2]
   1235c:	add	r0, pc, r0
   12360:	bl	122a8 <error@@Base>
   12364:			; <UNDEFINED> instruction: 0x001231fc
   12368:	andeq	r1, r0, r4, asr #14
   1236c:	ldr	r4, [pc, #68]	; 123b8 <error@@Base+0x110>
   12370:	mov	r3, r0
   12374:	push	{lr}		; (str lr, [sp, #-4]!)
   12378:	sub	sp, sp, #12
   1237c:	ldr	r0, [pc, #56]	; 123bc <error@@Base+0x114>
   12380:	ldr	r2, [pc, #56]	; 123c0 <error@@Base+0x118>
   12384:	add	r4, pc, r4
   12388:	ldr	ip, [r4, r0]
   1238c:	ldr	r0, [r4, r2]
   12390:	str	r1, [sp]
   12394:	ldr	r1, [pc, #40]	; 123c4 <error@@Base+0x11c>
   12398:	ldr	r2, [ip]
   1239c:	ldr	r0, [r0]
   123a0:	add	r1, pc, r1
   123a4:	bl	109b4 <fprintf@plt>
   123a8:	ldr	r3, [pc, #24]	; 123c8 <error@@Base+0x120>
   123ac:	ldr	r3, [r4, r3]
   123b0:	ldr	r0, [r3]
   123b4:	bl	12028 <getc@plt+0x1614>
   123b8:	andeq	r2, r1, r4, ror ip
   123bc:	muleq	r0, ip, r0
   123c0:	muleq	r0, r4, r0
   123c4:	andeq	r1, r0, r0, lsl r7
   123c8:	strheq	r0, [r0], -r4
   123cc:	ldr	ip, [pc, #164]	; 12478 <error@@Base+0x1d0>
   123d0:	subs	r2, r0, #0
   123d4:	strd	r4, [sp, #-16]!
   123d8:	mov	r4, r1
   123dc:	str	r6, [sp, #8]
   123e0:	str	lr, [sp, #12]
   123e4:	add	ip, pc, ip
   123e8:	beq	12428 <error@@Base+0x180>
   123ec:	mov	r5, r2
   123f0:	bl	108c4 <fopen@plt>
   123f4:	cmp	r0, #0
   123f8:	beq	1240c <error@@Base+0x164>
   123fc:	ldrd	r4, [sp]
   12400:	ldr	r6, [sp, #8]
   12404:	add	sp, sp, #12
   12408:	pop	{pc}		; (ldr pc, [sp], #4)
   1240c:	ldrb	r3, [r4]
   12410:	mov	r1, r5
   12414:	cmp	r3, #119	; 0x77
   12418:	beq	12450 <error@@Base+0x1a8>
   1241c:	ldr	r0, [pc, #88]	; 1247c <error@@Base+0x1d4>
   12420:	add	r0, pc, r0
   12424:	bl	1236c <error@@Base+0xc4>
   12428:	ldrb	r3, [r1]
   1242c:	cmp	r3, #114	; 0x72
   12430:	beq	1245c <error@@Base+0x1b4>
   12434:	ldr	r3, [pc, #68]	; 12480 <error@@Base+0x1d8>
   12438:	ldrd	r4, [sp]
   1243c:	ldr	r6, [sp, #8]
   12440:	add	sp, sp, #12
   12444:	ldr	r3, [ip, r3]
   12448:	ldr	r0, [r3]
   1244c:	pop	{pc}		; (ldr pc, [sp], #4)
   12450:	ldr	r0, [pc, #44]	; 12484 <error@@Base+0x1dc>
   12454:	add	r0, pc, r0
   12458:	bl	1236c <error@@Base+0xc4>
   1245c:	ldr	r3, [pc, #36]	; 12488 <error@@Base+0x1e0>
   12460:	ldrd	r4, [sp]
   12464:	ldr	r6, [sp, #8]
   12468:	add	sp, sp, #12
   1246c:	ldr	r3, [ip, r3]
   12470:	ldr	r0, [r3]
   12474:	pop	{pc}		; (ldr pc, [sp], #4)
   12478:	andeq	r2, r1, r4, lsl ip
   1247c:			; <UNDEFINED> instruction: 0x000016b8
   12480:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   12484:	andeq	r1, r0, ip, ror #12
   12488:	andeq	r0, r0, r8, lsr #1
   1248c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12490:	strd	r6, [sp, #8]
   12494:	mov	r6, r0
   12498:	strd	r8, [sp, #16]
   1249c:	mov	r9, r1
   124a0:	mov	r8, r3
   124a4:	strd	sl, [sp, #24]
   124a8:	str	lr, [sp, #32]
   124ac:	sub	sp, sp, #20
   124b0:	ldr	r5, [pc, #600]	; 12710 <error@@Base+0x468>
   124b4:	str	r0, [sp]
   124b8:	ldr	r0, [r1]
   124bc:	str	r2, [sp, #12]
   124c0:	bl	121b8 <getc@plt+0x17a4>
   124c4:	ldr	r3, [pc, #584]	; 12714 <error@@Base+0x46c>
   124c8:	add	r5, pc, r5
   124cc:	ldr	r4, [pc, #580]	; 12718 <error@@Base+0x470>
   124d0:	ldr	r3, [r5, r3]
   124d4:	add	r4, pc, r4
   124d8:	mov	r1, r4
   124dc:	str	r0, [r3]
   124e0:	mov	r0, #2
   124e4:	bl	1096c <__sysv_signal@plt>
   124e8:	mov	r1, r4
   124ec:	mov	r0, #15
   124f0:	bl	1096c <__sysv_signal@plt>
   124f4:	ldr	sl, [r6]
   124f8:	cmp	sl, #1
   124fc:	beq	126d4 <error@@Base+0x42c>
   12500:	movle	r6, #0
   12504:	ble	1265c <error@@Base+0x3b4>
   12508:	ldr	r3, [pc, #524]	; 1271c <error@@Base+0x474>
   1250c:	mov	r7, #1
   12510:	mov	r6, #0
   12514:	mov	r4, r7
   12518:	add	r3, pc, r3
   1251c:	str	r3, [sp, #8]
   12520:	mov	r3, sl
   12524:	mov	sl, r9
   12528:	b	1254c <error@@Base+0x2a4>
   1252c:	add	r4, r4, #1
   12530:	add	r2, r6, #1
   12534:	str	r5, [sl, r6, lsl #2]
   12538:	sxth	r4, r4
   1253c:	sxth	r6, r2
   12540:	cmp	r4, r3
   12544:	mov	r7, r4
   12548:	bge	1265c <error@@Base+0x3b4>
   1254c:	ldr	r5, [sl, r4, lsl #2]
   12550:	lsl	r9, r4, #2
   12554:	ldrb	r2, [r5]
   12558:	cmp	r2, #45	; 0x2d
   1255c:	bne	1252c <error@@Base+0x284>
   12560:	ldrb	fp, [r5, #1]
   12564:	cmp	fp, #0
   12568:	beq	1252c <error@@Base+0x284>
   1256c:	mov	r0, r5
   12570:	str	r3, [sp, #4]
   12574:	bl	109a8 <strlen@plt>
   12578:	mov	r2, r0
   1257c:	mov	r1, r5
   12580:	ldr	r0, [sp, #8]
   12584:	bl	109fc <strncmp@plt>
   12588:	cmp	r0, #0
   1258c:	beq	126e8 <error@@Base+0x440>
   12590:	ldr	r3, [sp, #4]
   12594:	add	r7, r7, #1
   12598:	cmp	r7, r3
   1259c:	addlt	r9, sl, r9
   125a0:	movge	r0, #0
   125a4:	ldrlt	r0, [r9, #4]
   125a8:	cmp	r8, #0
   125ac:	beq	125f0 <error@@Base+0x348>
   125b0:	ldrb	r2, [r8]
   125b4:	cmp	r2, #0
   125b8:	beq	125f0 <error@@Base+0x348>
   125bc:	cmp	fp, r2
   125c0:	beq	12600 <error@@Base+0x358>
   125c4:	mov	r2, #0
   125c8:	b	125d4 <error@@Base+0x32c>
   125cc:	cmp	fp, ip
   125d0:	beq	12604 <error@@Base+0x35c>
   125d4:	add	r2, r2, #1
   125d8:	sxth	r2, r2
   125dc:	add	r1, r2, r2, lsl #1
   125e0:	ldrb	ip, [r8, r1, lsl #2]
   125e4:	add	r1, r8, r1, lsl #2
   125e8:	cmp	ip, #0
   125ec:	bne	125cc <error@@Base+0x324>
   125f0:	ldr	r0, [pc, #296]	; 12720 <error@@Base+0x478>
   125f4:	mov	r1, r5
   125f8:	add	r0, pc, r0
   125fc:	bl	1236c <error@@Base+0xc4>
   12600:	mov	r1, r8
   12604:	ldr	r2, [r1, #4]
   12608:	cmp	r2, #0
   1260c:	beq	12694 <error@@Base+0x3ec>
   12610:	ldrb	ip, [r5, #2]
   12614:	cmp	ip, #0
   12618:	bne	12680 <error@@Base+0x3d8>
   1261c:	cmp	r0, #0
   12620:	beq	126f0 <error@@Base+0x448>
   12624:	ldr	r1, [r2]
   12628:	cmp	r1, #0
   1262c:	bne	12700 <error@@Base+0x458>
   12630:	str	r0, [r2]
   12634:	uxth	r2, r4
   12638:	ldrb	r1, [r5, #2]
   1263c:	add	r4, r2, #1
   12640:	sxth	r4, r4
   12644:	cmp	r1, #0
   12648:	addeq	r4, r2, #2
   1264c:	sxtheq	r4, r4
   12650:	cmp	r4, r3
   12654:	mov	r7, r4
   12658:	blt	1254c <error@@Base+0x2a4>
   1265c:	ldr	r3, [sp]
   12660:	str	r6, [r3]
   12664:	add	sp, sp, #20
   12668:	ldrd	r4, [sp]
   1266c:	ldrd	r6, [sp, #8]
   12670:	ldrd	r8, [sp, #16]
   12674:	ldrd	sl, [sp, #24]
   12678:	add	sp, sp, #32
   1267c:	pop	{pc}		; (ldr pc, [sp], #4)
   12680:	ldr	r1, [r2]
   12684:	cmp	r1, #0
   12688:	bne	12700 <error@@Base+0x458>
   1268c:	add	r0, r5, #2
   12690:	b	12630 <error@@Base+0x388>
   12694:	ldr	r3, [r1, #8]
   12698:	cmp	r3, #0
   1269c:	beq	125f0 <error@@Base+0x348>
   126a0:	ldrb	r2, [r5, #2]
   126a4:	cmp	r2, #0
   126a8:	bne	125f0 <error@@Base+0x348>
   126ac:	ldrb	r2, [r3]
   126b0:	cmp	r2, #0
   126b4:	bne	12700 <error@@Base+0x458>
   126b8:	mov	r2, #1
   126bc:	add	r4, r4, #1
   126c0:	sxth	r4, r4
   126c4:	strb	r2, [r3]
   126c8:	ldr	r3, [sp]
   126cc:	ldr	r3, [r3]
   126d0:	b	12540 <error@@Base+0x298>
   126d4:	ldr	r3, [pc, #72]	; 12724 <error@@Base+0x47c>
   126d8:	ldr	r3, [r5, r3]
   126dc:	ldrb	r6, [r3]
   126e0:	cmp	r6, #0
   126e4:	beq	1265c <error@@Base+0x3b4>
   126e8:	ldr	r0, [sp, #12]
   126ec:	bl	1223c <getc@plt+0x1828>
   126f0:	ldr	r3, [r1, #8]
   126f4:	cmp	r3, #0
   126f8:	bne	126ac <error@@Base+0x404>
   126fc:	b	125f0 <error@@Base+0x348>
   12700:	ldr	r0, [pc, #32]	; 12728 <error@@Base+0x480>
   12704:	mov	r1, r5
   12708:	add	r0, pc, r0
   1270c:	bl	1236c <error@@Base+0xc4>
   12710:	andeq	r2, r1, r0, lsr fp
   12714:	muleq	r0, ip, r0
   12718:			; <UNDEFINED> instruction: 0xfffffe58
   1271c:	ldrdeq	r1, [r0], -r4
   12720:	strdeq	r1, [r0], -ip
   12724:	andeq	r0, r0, r8, lsl #1
   12728:	strdeq	r1, [r0], -ip
   1272c:	ldr	r2, [pc, #60]	; 12770 <error@@Base+0x4c8>
   12730:	mov	r3, r0
   12734:	push	{lr}		; (str lr, [sp, #-4]!)
   12738:	sub	sp, sp, #12
   1273c:	ldr	ip, [pc, #48]	; 12774 <error@@Base+0x4cc>
   12740:	ldr	r0, [pc, #48]	; 12778 <error@@Base+0x4d0>
   12744:	add	r2, pc, r2
   12748:	ldr	ip, [r2, ip]
   1274c:	ldr	r0, [r2, r0]
   12750:	str	r1, [sp]
   12754:	ldr	r1, [pc, #32]	; 1277c <error@@Base+0x4d4>
   12758:	ldr	r2, [ip]
   1275c:	ldr	r0, [r0]
   12760:	add	r1, pc, r1
   12764:	bl	109b4 <fprintf@plt>
   12768:	add	sp, sp, #12
   1276c:	pop	{pc}		; (ldr pc, [sp], #4)
   12770:			; <UNDEFINED> instruction: 0x000128b4
   12774:	muleq	r0, ip, r0
   12778:	muleq	r0, r4, r0
   1277c:	andeq	r1, r0, r0, asr r3
   12780:	strd	r4, [sp, #-16]!
   12784:	uxtb	r5, r1
   12788:	mov	r1, #16
   1278c:	str	r6, [sp, #8]
   12790:	mov	r6, r0
   12794:	mov	r0, #1
   12798:	mov	r4, r2
   1279c:	str	lr, [sp, #12]
   127a0:	bl	12304 <error@@Base+0x5c>
   127a4:	mov	r3, r0
   127a8:	mov	r0, r6
   127ac:	mov	r1, r3
   127b0:	strb	r5, [r3, #8]
   127b4:	str	r4, [r3, #12]
   127b8:	ldrd	r4, [sp]
   127bc:	ldr	r6, [sp, #8]
   127c0:	ldr	lr, [sp, #12]
   127c4:	add	sp, sp, #16
   127c8:	b	12f14 <error@@Base+0xc6c>
   127cc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   127d0:	clz	r3, r1
   127d4:	strd	r6, [sp, #8]
   127d8:	lsr	r3, r3, #5
   127dc:	strd	r8, [sp, #16]
   127e0:	strd	sl, [sp, #24]
   127e4:	mov	sl, r2
   127e8:	str	lr, [sp, #32]
   127ec:	sub	sp, sp, #124	; 0x7c
   127f0:	ldrb	r2, [r2]
   127f4:	ldr	r4, [pc, #888]	; 12b74 <error@@Base+0x8cc>
   127f8:	cmp	r2, #0
   127fc:	moveq	r3, #0
   12800:	cmp	r3, #0
   12804:	add	r4, pc, r4
   12808:	bne	12b60 <error@@Base+0x8b8>
   1280c:	mov	r9, r0
   12810:	mov	r0, r1
   12814:	ldr	r1, [pc, #860]	; 12b78 <error@@Base+0x8d0>
   12818:	ldr	r3, [r9, #4]
   1281c:	add	r1, pc, r1
   12820:	str	r3, [sp, #8]
   12824:	bl	123cc <error@@Base+0x124>
   12828:	ldrb	r3, [sl]
   1282c:	mov	r7, r0
   12830:	cmp	r3, #0
   12834:	bne	12aa8 <error@@Base+0x800>
   12838:	ldr	r8, [sl, #4]
   1283c:	mov	r0, r7
   12840:	ldrb	r3, [sl, #1]
   12844:	cmp	r8, #0
   12848:	moveq	r8, #94	; 0x5e
   1284c:	mov	r5, r3
   12850:	bl	10a14 <getc@plt>
   12854:	cmn	r0, #1
   12858:	beq	12920 <error@@Base+0x678>
   1285c:	ldr	r3, [pc, #792]	; 12b7c <error@@Base+0x8d4>
   12860:	ldr	r3, [r4, r3]
   12864:	ldrsb	r4, [r3, r0]
   12868:	str	r3, [sp]
   1286c:	cmp	r4, #0
   12870:	ble	12b40 <error@@Base+0x898>
   12874:	add	r3, sp, #20
   12878:	mov	r6, #0
   1287c:	add	fp, sp, #17
   12880:	str	r3, [sp, #4]
   12884:	str	sl, [sp, #12]
   12888:	mov	sl, r5
   1288c:	b	128a0 <error@@Base+0x5f8>
   12890:	ldr	r3, [sp]
   12894:	ldrsb	r4, [r3, r0]
   12898:	cmp	r4, #0
   1289c:	ble	12b40 <error@@Base+0x898>
   128a0:	cmp	r4, #1
   128a4:	strb	r0, [sp, #16]
   128a8:	beq	128cc <error@@Base+0x624>
   128ac:	sub	r5, r4, #1
   128b0:	mov	r3, r7
   128b4:	mov	r2, r5
   128b8:	mov	r1, #1
   128bc:	mov	r0, fp
   128c0:	bl	10948 <fread@plt>
   128c4:	cmp	r5, r0
   128c8:	bne	12b54 <error@@Base+0x8ac>
   128cc:	mov	r1, #4
   128d0:	add	r0, sp, #16
   128d4:	ldr	r2, [sp, #4]
   128d8:	bl	10954 <utf8proc_iterate@plt>
   128dc:	cmp	r0, r4
   128e0:	bne	12b4c <error@@Base+0x8a4>
   128e4:	cmp	sl, #0
   128e8:	ldr	r2, [sp, #20]
   128ec:	beq	128fc <error@@Base+0x654>
   128f0:	cmp	r2, r8
   128f4:	moveq	r6, #1
   128f8:	beq	1290c <error@@Base+0x664>
   128fc:	mov	r1, r6
   12900:	mov	r0, r9
   12904:	mov	r6, #0
   12908:	bl	12780 <error@@Base+0x4d8>
   1290c:	mov	r0, r7
   12910:	bl	10a14 <getc@plt>
   12914:	cmn	r0, #1
   12918:	bne	12890 <error@@Base+0x5e8>
   1291c:	ldr	sl, [sp, #12]
   12920:	mov	r0, r7
   12924:	bl	12108 <getc@plt+0x16f4>
   12928:	ldrb	r3, [sl, #9]
   1292c:	cmp	r3, #0
   12930:	beq	129a8 <error@@Base+0x700>
   12934:	ldr	r3, [sp, #8]
   12938:	cmp	r3, #0
   1293c:	ldrne	r6, [r3, #4]
   12940:	ldreq	r6, [r9]
   12944:	cmp	r6, #0
   12948:	beq	129a8 <error@@Base+0x700>
   1294c:	mov	r5, r6
   12950:	mov	r7, #32
   12954:	b	12964 <error@@Base+0x6bc>
   12958:	ldr	r5, [r5, #4]
   1295c:	cmp	r5, #0
   12960:	beq	12a20 <error@@Base+0x778>
   12964:	ldr	r4, [r5, #12]
   12968:	mov	r0, r4
   1296c:	bl	108dc <utf8proc_get_property@plt>
   12970:	cmp	r4, #13
   12974:	bhi	12a9c <error@@Base+0x7f4>
   12978:	cmp	r4, #11
   1297c:	bcs	129a0 <error@@Base+0x6f8>
   12980:	cmp	r4, #9
   12984:	beq	129a0 <error@@Base+0x6f8>
   12988:	cmp	r4, #10
   1298c:	beq	12958 <error@@Base+0x6b0>
   12990:	ldrsh	r3, [r0]
   12994:	sub	r3, r3, #23
   12998:	cmp	r3, #2
   1299c:	bhi	12958 <error@@Base+0x6b0>
   129a0:	str	r7, [r5, #12]
   129a4:	b	12958 <error@@Base+0x6b0>
   129a8:	ldrb	r3, [sl, #10]
   129ac:	cmp	r3, #0
   129b0:	beq	129e0 <error@@Base+0x738>
   129b4:	ldr	r3, [sp, #8]
   129b8:	cmp	r3, #0
   129bc:	ldrne	r4, [r3, #4]
   129c0:	ldreq	r4, [r9]
   129c4:	b	129d8 <error@@Base+0x730>
   129c8:	ldr	r0, [r4, #12]
   129cc:	bl	10924 <utf8proc_tolower@plt>
   129d0:	str	r0, [r4, #12]
   129d4:	ldr	r4, [r4, #4]
   129d8:	cmp	r4, #0
   129dc:	bne	129c8 <error@@Base+0x720>
   129e0:	add	sp, sp, #124	; 0x7c
   129e4:	ldrd	r4, [sp]
   129e8:	ldrd	r6, [sp, #8]
   129ec:	ldrd	r8, [sp, #16]
   129f0:	ldrd	sl, [sp, #24]
   129f4:	add	sp, sp, #32
   129f8:	pop	{pc}		; (ldr pc, [sp], #4)
   129fc:	cmp	r3, #10
   12a00:	movne	r2, #0
   12a04:	andeq	r2, r2, #1
   12a08:	cmp	r2, #0
   12a0c:	bne	12a84 <error@@Base+0x7dc>
   12a10:	subs	r5, r3, #10
   12a14:	movne	r5, #1
   12a18:	subs	r6, r4, #0
   12a1c:	beq	129a8 <error@@Base+0x700>
   12a20:	eor	r2, r5, #1
   12a24:	ldr	r4, [r6, #4]
   12a28:	ldr	r3, [r6, #12]
   12a2c:	cmp	r3, #32
   12a30:	bne	129fc <error@@Base+0x754>
   12a34:	cmp	r4, #0
   12a38:	moveq	r2, #1
   12a3c:	cmp	r2, #0
   12a40:	bne	12a54 <error@@Base+0x7ac>
   12a44:	ldr	r2, [r4, #12]
   12a48:	cmp	r2, #10
   12a4c:	cmpne	r2, #32
   12a50:	bne	12a10 <error@@Base+0x768>
   12a54:	cmp	r4, #0
   12a58:	movne	r3, r5
   12a5c:	moveq	r3, #0
   12a60:	cmp	r3, #0
   12a64:	beq	12a84 <error@@Base+0x7dc>
   12a68:	ldr	r3, [r4, #12]
   12a6c:	cmp	r3, #32
   12a70:	bne	12a84 <error@@Base+0x7dc>
   12a74:	ldrb	r3, [r4, #8]
   12a78:	ldrb	r2, [r6, #8]
   12a7c:	orr	r3, r3, r2
   12a80:	strb	r3, [r4, #8]
   12a84:	mov	r0, r9
   12a88:	mov	r1, r6
   12a8c:	bl	1301c <error@@Base+0xd74>
   12a90:	mov	r0, r6
   12a94:	bl	108d0 <free@plt>
   12a98:	b	12a18 <error@@Base+0x770>
   12a9c:	cmp	r4, #160	; 0xa0
   12aa0:	bne	12990 <error@@Base+0x6e8>
   12aa4:	b	129a0 <error@@Base+0x6f8>
   12aa8:	add	r5, sp, #20
   12aac:	mov	r2, r0
   12ab0:	mov	r1, #99	; 0x63
   12ab4:	mov	r0, r5
   12ab8:	bl	108e8 <fgets@plt>
   12abc:	cmp	r0, #0
   12ac0:	beq	12ae0 <error@@Base+0x838>
   12ac4:	ldr	r1, [pc, #180]	; 12b80 <error@@Base+0x8d8>
   12ac8:	mov	r2, #51	; 0x33
   12acc:	mov	r0, r5
   12ad0:	add	r1, pc, r1
   12ad4:	bl	109fc <strncmp@plt>
   12ad8:	subs	r6, r0, #0
   12adc:	beq	12af4 <error@@Base+0x84c>
   12ae0:	mov	r0, r7
   12ae4:	bl	1090c <rewind@plt>
   12ae8:	mov	r3, #0
   12aec:	strb	r3, [sl, #11]
   12af0:	b	12838 <error@@Base+0x590>
   12af4:	ldr	r8, [pc, #136]	; 12b84 <error@@Base+0x8dc>
   12af8:	add	r8, pc, r8
   12afc:	mov	r2, r7
   12b00:	mov	r1, #99	; 0x63
   12b04:	mov	r0, r5
   12b08:	bl	108e8 <fgets@plt>
   12b0c:	cmp	r0, #0
   12b10:	beq	12b38 <error@@Base+0x890>
   12b14:	mov	r1, r8
   12b18:	mov	r0, r5
   12b1c:	bl	108b8 <strcmp@plt>
   12b20:	cmp	r0, #0
   12b24:	bne	12afc <error@@Base+0x854>
   12b28:	add	r6, r6, #1
   12b2c:	sxth	r6, r6
   12b30:	cmp	r6, #2
   12b34:	bne	12afc <error@@Base+0x854>
   12b38:	mov	r3, #1
   12b3c:	b	12aec <error@@Base+0x844>
   12b40:	ldr	r0, [pc, #64]	; 12b88 <error@@Base+0x8e0>
   12b44:	add	r0, pc, r0
   12b48:	bl	122a8 <error@@Base>
   12b4c:	bl	109e4 <utf8proc_errmsg@plt>
   12b50:	bl	122a8 <error@@Base>
   12b54:	ldr	r0, [pc, #48]	; 12b8c <error@@Base+0x8e4>
   12b58:	add	r0, pc, r0
   12b5c:	bl	122a8 <error@@Base>
   12b60:	ldr	r1, [pc, #40]	; 12b90 <error@@Base+0x8e8>
   12b64:	ldr	r0, [pc, #40]	; 12b94 <error@@Base+0x8ec>
   12b68:	add	r1, pc, r1
   12b6c:	add	r0, pc, r0
   12b70:	bl	1236c <error@@Base+0xc4>
   12b74:	strdeq	r2, [r1], -r4
   12b78:	strdeq	r0, [r0], -r8
   12b7c:	andeq	r0, r0, r4, lsr #1
   12b80:	andeq	r1, r0, r4, rrx
   12b84:	andeq	r1, r0, r4, ror r0
   12b88:	andeq	r1, r0, r0, rrx
   12b8c:	andeq	r1, r0, r4, rrx
   12b90:			; <UNDEFINED> instruction: 0x00000fb0
   12b94:			; <UNDEFINED> instruction: 0x00000fb8
   12b98:	str	r4, [sp, #-8]!
   12b9c:	str	lr, [sp, #4]
   12ba0:	bl	108f4 <utf8proc_encode_char@plt>
   12ba4:	cmp	r0, #0
   12ba8:	ble	12bbc <error@@Base+0x914>
   12bac:	ldr	r4, [sp]
   12bb0:	add	sp, sp, #4
   12bb4:	sxtb	r0, r0
   12bb8:	pop	{pc}		; (ldr pc, [sp], #4)
   12bbc:	ldr	r0, [pc, #4]	; 12bc8 <error@@Base+0x920>
   12bc0:	add	r0, pc, r0
   12bc4:	bl	122a8 <error@@Base>
   12bc8:	andeq	r1, r0, r4, lsl r0
   12bcc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12bd0:	uxtb	r4, r0
   12bd4:	mov	r5, r1
   12bd8:	cmp	r4, #0
   12bdc:	strd	r6, [sp, #8]
   12be0:	mov	r7, r2
   12be4:	moveq	r6, r2
   12be8:	str	r8, [sp, #16]
   12bec:	uxtb	r8, r3
   12bf0:	str	lr, [sp, #20]
   12bf4:	bne	12cf4 <error@@Base+0xa4c>
   12bf8:	cmp	r5, #10
   12bfc:	bne	12c38 <error@@Base+0x990>
   12c00:	cmp	r8, #0
   12c04:	bne	12c2c <error@@Base+0x984>
   12c08:	ldr	r1, [pc, #272]	; 12d20 <error@@Base+0xa78>
   12c0c:	add	r1, pc, r1
   12c10:	mov	r0, r6
   12c14:	ldrd	r4, [sp]
   12c18:	ldrd	r6, [sp, #8]
   12c1c:	ldr	r8, [sp, #16]
   12c20:	ldr	lr, [sp, #20]
   12c24:	add	sp, sp, #24
   12c28:	b	109d8 <sprintf@plt>
   12c2c:	ldr	r1, [pc, #240]	; 12d24 <error@@Base+0xa7c>
   12c30:	add	r1, pc, r1
   12c34:	b	12c10 <error@@Base+0x968>
   12c38:	mov	r0, r5
   12c3c:	bl	108dc <utf8proc_get_property@plt>
   12c40:	cmp	r5, #32
   12c44:	beq	12c64 <error@@Base+0x9bc>
   12c48:	ldrsh	r3, [r0]
   12c4c:	cmp	r3, #0
   12c50:	ble	12cc4 <error@@Base+0xa1c>
   12c54:	cmp	r3, #22
   12c58:	ble	12c64 <error@@Base+0x9bc>
   12c5c:	cmp	r3, #29
   12c60:	bne	12cc4 <error@@Base+0xa1c>
   12c64:	mov	r0, r5
   12c68:	uxth	r4, r4
   12c6c:	bl	1099c <utf8proc_category@plt>
   12c70:	sub	r0, r0, #6
   12c74:	cmp	r0, #2
   12c78:	bhi	12c94 <error@@Base+0x9ec>
   12c7c:	mov	r1, r6
   12c80:	movw	r0, #9676	; 0x25cc
   12c84:	bl	12b98 <error@@Base+0x8f0>
   12c88:	add	r4, r4, r0
   12c8c:	uxth	r4, r4
   12c90:	sxtah	r6, r7, r4
   12c94:	mov	r1, r6
   12c98:	mov	r0, r5
   12c9c:	bl	12b98 <error@@Base+0x8f0>
   12ca0:	add	r4, r4, r0
   12ca4:	mov	r3, #0
   12ca8:	sxth	r4, r4
   12cac:	strb	r3, [r7, r4]
   12cb0:	ldrd	r4, [sp]
   12cb4:	ldrd	r6, [sp, #8]
   12cb8:	ldr	r8, [sp, #16]
   12cbc:	add	sp, sp, #20
   12cc0:	pop	{pc}		; (ldr pc, [sp], #4)
   12cc4:	cmp	r5, #255	; 0xff
   12cc8:	bls	12d0c <error@@Base+0xa64>
   12ccc:	ldr	r1, [pc, #84]	; 12d28 <error@@Base+0xa80>
   12cd0:	mov	r2, r5
   12cd4:	mov	r0, r6
   12cd8:	add	r1, pc, r1
   12cdc:	ldrd	r4, [sp]
   12ce0:	ldrd	r6, [sp, #8]
   12ce4:	ldr	r8, [sp, #16]
   12ce8:	ldr	lr, [sp, #20]
   12cec:	add	sp, sp, #24
   12cf0:	b	109d8 <sprintf@plt>
   12cf4:	mov	r1, r2
   12cf8:	mov	r0, #94	; 0x5e
   12cfc:	bl	12b98 <error@@Base+0x8f0>
   12d00:	sxth	r4, r0
   12d04:	add	r6, r7, r0
   12d08:	b	12bf8 <error@@Base+0x950>
   12d0c:	ldr	r1, [pc, #24]	; 12d2c <error@@Base+0xa84>
   12d10:	mov	r2, r5
   12d14:	mov	r0, r6
   12d18:	add	r1, pc, r1
   12d1c:	b	12cdc <error@@Base+0xa34>
   12d20:	andeq	r0, r0, r0, ror #14
   12d24:			; <UNDEFINED> instruction: 0x00000fbc
   12d28:	andeq	r0, r0, r4, lsr #30
   12d2c:	ldrdeq	r0, [r0], -ip
   12d30:	mov	r3, r1
   12d34:	ldr	r1, [pc, #212]	; 12e10 <error@@Base+0xb68>
   12d38:	strd	r4, [sp, #-20]!	; 0xffffffec
   12d3c:	mov	r5, r2
   12d40:	strd	r6, [sp, #8]
   12d44:	mov	r7, r0
   12d48:	mov	r0, r3
   12d4c:	str	lr, [sp, #16]
   12d50:	sub	sp, sp, #20
   12d54:	add	r1, pc, r1
   12d58:	bl	123cc <error@@Base+0x124>
   12d5c:	cmp	r5, #0
   12d60:	mov	r6, r0
   12d64:	beq	12db8 <error@@Base+0xb10>
   12d68:	mov	r3, r0
   12d6c:	ldr	r4, [pc, #160]	; 12e14 <error@@Base+0xb6c>
   12d70:	mov	r2, #55	; 0x37
   12d74:	mov	r1, #1
   12d78:	ldr	r0, [pc, #152]	; 12e18 <error@@Base+0xb70>
   12d7c:	add	r4, pc, r4
   12d80:	add	r0, pc, r0
   12d84:	bl	1093c <fwrite@plt>
   12d88:	mov	r3, r6
   12d8c:	mov	r2, #55	; 0x37
   12d90:	mov	r1, #1
   12d94:	mov	r0, r4
   12d98:	bl	1093c <fwrite@plt>
   12d9c:	mov	r0, r6
   12da0:	blx	r5
   12da4:	mov	r3, r6
   12da8:	mov	r0, r4
   12dac:	mov	r2, #55	; 0x37
   12db0:	mov	r1, #1
   12db4:	bl	1093c <fwrite@plt>
   12db8:	ldr	r4, [r7]
   12dbc:	cmp	r4, #0
   12dc0:	beq	12df4 <error@@Base+0xb4c>
   12dc4:	add	r5, sp, #4
   12dc8:	ldrb	r0, [r4, #8]
   12dcc:	mov	r3, #0
   12dd0:	mov	r2, r5
   12dd4:	ldr	r1, [r4, #12]
   12dd8:	bl	12bcc <error@@Base+0x924>
   12ddc:	mov	r1, r6
   12de0:	mov	r0, r5
   12de4:	bl	109f0 <fputs@plt>
   12de8:	ldr	r4, [r4, #4]
   12dec:	cmp	r4, #0
   12df0:	bne	12dc8 <error@@Base+0xb20>
   12df4:	mov	r0, r6
   12df8:	bl	12108 <getc@plt+0x16f4>
   12dfc:	add	sp, sp, #20
   12e00:	ldrd	r4, [sp]
   12e04:	ldrd	r6, [sp, #8]
   12e08:	add	sp, sp, #16
   12e0c:	pop	{pc}		; (ldr pc, [sp], #4)
   12e10:	andeq	r0, r0, r4, lsr r5
   12e14:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   12e18:			; <UNDEFINED> instruction: 0x00000db4
   12e1c:	strd	r4, [sp, #-20]!	; 0xffffffec
   12e20:	mov	r2, #0
   12e24:	strd	r6, [sp, #8]
   12e28:	str	lr, [sp, #16]
   12e2c:	sub	sp, sp, #12
   12e30:	ldrb	r3, [r1]
   12e34:	str	r2, [sp, #4]
   12e38:	cmp	r3, r2
   12e3c:	beq	12e8c <error@@Base+0xbe4>
   12e40:	mov	r4, r1
   12e44:	mov	r5, r0
   12e48:	add	r6, sp, #4
   12e4c:	b	12e64 <error@@Base+0xbbc>
   12e50:	ldr	r2, [sp, #4]
   12e54:	bl	12780 <error@@Base+0x4d8>
   12e58:	ldrb	r3, [r4, r7]!
   12e5c:	cmp	r3, #0
   12e60:	beq	12e8c <error@@Base+0xbe4>
   12e64:	mvn	r1, #0
   12e68:	mov	r2, r6
   12e6c:	mov	r0, r4
   12e70:	bl	10954 <utf8proc_iterate@plt>
   12e74:	subs	r7, r0, #0
   12e78:	mov	r1, #0
   12e7c:	mov	r0, r5
   12e80:	bgt	12e50 <error@@Base+0xba8>
   12e84:	mov	r0, #0
   12e88:	b	12e90 <error@@Base+0xbe8>
   12e8c:	mov	r0, #1
   12e90:	add	sp, sp, #12
   12e94:	ldrd	r4, [sp]
   12e98:	ldrd	r6, [sp, #8]
   12e9c:	add	sp, sp, #16
   12ea0:	pop	{pc}		; (ldr pc, [sp], #4)
   12ea4:	mov	r3, #0
   12ea8:	str	r3, [r0]
   12eac:	str	r3, [r0, #4]
   12eb0:	str	r3, [r0, #8]
   12eb4:	str	r3, [r0, #12]
   12eb8:	bx	lr
   12ebc:	ldr	r3, [r0]
   12ec0:	mov	r2, #0
   12ec4:	str	r4, [sp, #-8]!
   12ec8:	mov	r4, r0
   12ecc:	str	lr, [sp, #4]
   12ed0:	cmp	r3, r2
   12ed4:	strd	r2, [r1]
   12ed8:	str	r1, [r0]
   12edc:	streq	r1, [r0, #4]
   12ee0:	ldr	r0, [r0, #8]
   12ee4:	strne	r1, [r3]
   12ee8:	cmp	r0, #0
   12eec:	beq	12efc <error@@Base+0xc54>
   12ef0:	bl	108d0 <free@plt>
   12ef4:	mov	r3, #0
   12ef8:	str	r3, [r4, #8]
   12efc:	ldr	r3, [r4, #12]
   12f00:	add	r3, r3, #1
   12f04:	str	r3, [r4, #12]
   12f08:	ldr	r4, [sp]
   12f0c:	add	sp, sp, #4
   12f10:	pop	{pc}		; (ldr pc, [sp], #4)
   12f14:	ldr	r3, [r0, #4]
   12f18:	mov	r2, #0
   12f1c:	str	r4, [sp, #-8]!
   12f20:	mov	r4, r0
   12f24:	str	lr, [sp, #4]
   12f28:	cmp	r3, r2
   12f2c:	str	r3, [r1]
   12f30:	str	r2, [r1, #4]
   12f34:	streq	r1, [r0]
   12f38:	ldr	r0, [r0, #8]
   12f3c:	strne	r1, [r3, #4]
   12f40:	str	r1, [r4, #4]
   12f44:	cmp	r0, #0
   12f48:	beq	12f58 <error@@Base+0xcb0>
   12f4c:	bl	108d0 <free@plt>
   12f50:	mov	r3, #0
   12f54:	str	r3, [r4, #8]
   12f58:	ldr	r3, [r4, #12]
   12f5c:	add	r3, r3, #1
   12f60:	str	r3, [r4, #12]
   12f64:	ldr	r4, [sp]
   12f68:	add	sp, sp, #4
   12f6c:	pop	{pc}		; (ldr pc, [sp], #4)
   12f70:	ldr	r3, [r2]
   12f74:	str	r4, [sp, #-8]!
   12f78:	mov	r4, r0
   12f7c:	str	lr, [sp, #4]
   12f80:	cmp	r3, #0
   12f84:	str	r3, [r1]
   12f88:	str	r2, [r1, #4]
   12f8c:	streq	r1, [r0]
   12f90:	ldr	r0, [r0, #8]
   12f94:	strne	r1, [r3, #4]
   12f98:	str	r1, [r2]
   12f9c:	cmp	r0, #0
   12fa0:	beq	12fb0 <error@@Base+0xd08>
   12fa4:	bl	108d0 <free@plt>
   12fa8:	mov	r3, #0
   12fac:	str	r3, [r4, #8]
   12fb0:	ldr	r3, [r4, #12]
   12fb4:	add	r3, r3, #1
   12fb8:	str	r3, [r4, #12]
   12fbc:	ldr	r4, [sp]
   12fc0:	add	sp, sp, #4
   12fc4:	pop	{pc}		; (ldr pc, [sp], #4)
   12fc8:	ldr	r3, [r1, #4]
   12fcc:	str	r4, [sp, #-8]!
   12fd0:	mov	r4, r0
   12fd4:	str	lr, [sp, #4]
   12fd8:	cmp	r3, #0
   12fdc:	stm	r2, {r1, r3}
   12fe0:	str	r2, [r1, #4]
   12fe4:	streq	r2, [r0, #4]
   12fe8:	ldr	r0, [r0, #8]
   12fec:	strne	r2, [r3]
   12ff0:	cmp	r0, #0
   12ff4:	beq	13004 <error@@Base+0xd5c>
   12ff8:	bl	108d0 <free@plt>
   12ffc:	mov	r3, #0
   13000:	str	r3, [r4, #8]
   13004:	ldr	r3, [r4, #12]
   13008:	add	r3, r3, #1
   1300c:	str	r3, [r4, #12]
   13010:	ldr	r4, [sp]
   13014:	add	sp, sp, #4
   13018:	pop	{pc}		; (ldr pc, [sp], #4)
   1301c:	ldrd	r2, [r1]
   13020:	strd	r4, [sp, #-16]!
   13024:	mov	r4, r0
   13028:	mov	r5, #0
   1302c:	str	r6, [sp, #8]
   13030:	str	lr, [sp, #12]
   13034:	cmp	r2, #0
   13038:	strne	r3, [r2, #4]
   1303c:	ldrne	r3, [r1, #4]
   13040:	streq	r3, [r0]
   13044:	cmp	r3, #0
   13048:	streq	r2, [r0, #4]
   1304c:	ldr	r0, [r0, #8]
   13050:	strne	r2, [r3]
   13054:	str	r5, [r1]
   13058:	str	r5, [r1, #4]
   1305c:	cmp	r0, r5
   13060:	beq	1306c <error@@Base+0xdc4>
   13064:	bl	108d0 <free@plt>
   13068:	str	r5, [r4, #8]
   1306c:	ldr	r3, [r4, #12]
   13070:	ldr	r6, [sp, #8]
   13074:	sub	r3, r3, #1
   13078:	str	r3, [r4, #12]
   1307c:	ldrd	r4, [sp]
   13080:	add	sp, sp, #12
   13084:	pop	{pc}		; (ldr pc, [sp], #4)
   13088:	ldr	r3, [r0, #8]
   1308c:	cmp	r3, #0
   13090:	bxne	lr
   13094:	ldr	r3, [r0, #12]
   13098:	cmp	r3, #0
   1309c:	bxeq	lr
   130a0:	mov	r1, #4
   130a4:	str	r4, [sp, #-8]!
   130a8:	mov	r4, r0
   130ac:	mov	r0, r3
   130b0:	str	lr, [sp, #4]
   130b4:	bl	12304 <error@@Base+0x5c>
   130b8:	ldr	r3, [r4]
   130bc:	str	r0, [r4, #8]
   130c0:	cmp	r3, #0
   130c4:	beq	130dc <error@@Base+0xe34>
   130c8:	sub	r0, r0, #4
   130cc:	str	r3, [r0, #4]!
   130d0:	ldr	r3, [r3, #4]
   130d4:	cmp	r3, #0
   130d8:	bne	130cc <error@@Base+0xe24>
   130dc:	ldr	r4, [sp]
   130e0:	add	sp, sp, #4
   130e4:	pop	{pc}		; (ldr pc, [sp], #4)
   130e8:	strd	r4, [sp, #-16]!
   130ec:	ldr	r4, [r0]
   130f0:	str	r6, [sp, #8]
   130f4:	str	lr, [sp, #12]
   130f8:	cmp	r4, #0
   130fc:	beq	13128 <error@@Base+0xe80>
   13100:	mov	r5, r0
   13104:	mov	r6, r1
   13108:	mov	r1, r4
   1310c:	mov	r0, r5
   13110:	bl	1301c <error@@Base+0xd74>
   13114:	mov	r0, r4
   13118:	blx	r6
   1311c:	ldr	r4, [r5]
   13120:	cmp	r4, #0
   13124:	bne	13108 <error@@Base+0xe60>
   13128:	ldrd	r4, [sp]
   1312c:	ldr	r6, [sp, #8]
   13130:	add	sp, sp, #12
   13134:	pop	{pc}		; (ldr pc, [sp], #4)
   13138:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1313c:	mov	r7, r0
   13140:	ldr	r6, [pc, #72]	; 13190 <error@@Base+0xee8>
   13144:	ldr	r5, [pc, #72]	; 13194 <error@@Base+0xeec>
   13148:	add	r6, pc, r6
   1314c:	add	r5, pc, r5
   13150:	sub	r6, r6, r5
   13154:	mov	r8, r1
   13158:	mov	r9, r2
   1315c:	bl	1088c <calloc@plt-0x20>
   13160:	asrs	r6, r6, #2
   13164:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   13168:	mov	r4, #0
   1316c:	add	r4, r4, #1
   13170:	ldr	r3, [r5], #4
   13174:	mov	r2, r9
   13178:	mov	r1, r8
   1317c:	mov	r0, r7
   13180:	blx	r3
   13184:	cmp	r6, r4
   13188:	bne	1316c <error@@Base+0xec4>
   1318c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13190:	andeq	r1, r1, r0, ror r9
   13194:	andeq	r1, r1, r8, ror #18
   13198:	bx	lr

Disassembly of section .fini:

0001319c <.fini>:
   1319c:	push	{r3, lr}
   131a0:	pop	{r3, pc}
