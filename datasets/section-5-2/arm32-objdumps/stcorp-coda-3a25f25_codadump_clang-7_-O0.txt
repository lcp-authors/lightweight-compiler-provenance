
../repos/stcorp-coda-3a25f25/codadump:     file format elf32-littlearm


Disassembly of section .init:

0001256c <.init>:
   1256c:	push	{r3, lr}
   12570:	bl	12a48 <_start@@Base+0x3c>
   12574:	pop	{r3, pc}

Disassembly of section .plt:

00012578 <coda_cursor_get_byte_size@plt-0x14>:
   12578:	push	{lr}		; (str lr, [sp, #-4]!)
   1257c:	ldr	lr, [pc, #4]	; 12588 <coda_cursor_get_byte_size@plt-0x4>
   12580:	add	lr, pc, lr
   12584:	ldr	pc, [lr, #8]!
   12588:	andeq	lr, r1, r8, ror sl

0001258c <coda_cursor_get_byte_size@plt>:
   1258c:	add	ip, pc, #0, 12
   12590:	add	ip, ip, #122880	; 0x1e000
   12594:	ldr	pc, [ip, #2680]!	; 0xa78

00012598 <coda_type_get_special_type_name@plt>:
   12598:	add	ip, pc, #0, 12
   1259c:	add	ip, ip, #122880	; 0x1e000
   125a0:	ldr	pc, [ip, #2672]!	; 0xa70

000125a4 <coda_set_option_use_fast_size_expressions@plt>:
   125a4:	add	ip, pc, #0, 12
   125a8:	add	ip, ip, #122880	; 0x1e000
   125ac:	ldr	pc, [ip, #2664]!	; 0xa68

000125b0 <raise@plt>:
   125b0:	add	ip, pc, #0, 12
   125b4:	add	ip, ip, #122880	; 0x1e000
   125b8:	ldr	pc, [ip, #2656]!	; 0xa60

000125bc <coda_get_option_bypass_special_types@plt>:
   125bc:	add	ip, pc, #0, 12
   125c0:	add	ip, ip, #122880	; 0x1e000
   125c4:	ldr	pc, [ip, #2648]!	; 0xa58

000125c8 <coda_set_option_perform_boundary_checks@plt>:
   125c8:	add	ip, pc, #0, 12
   125cc:	add	ip, ip, #122880	; 0x1e000
   125d0:	ldr	pc, [ip, #2640]!	; 0xa50

000125d4 <strcmp@plt>:
   125d4:	add	ip, pc, #0, 12
   125d8:	add	ip, ip, #122880	; 0x1e000
   125dc:	ldr	pc, [ip, #2632]!	; 0xa48

000125e0 <coda_type_get_record_field_hidden_status@plt>:
   125e0:	add	ip, pc, #0, 12
   125e4:	add	ip, ip, #122880	; 0x1e000
   125e8:	ldr	pc, [ip, #2624]!	; 0xa40

000125ec <printf@plt>:
   125ec:	add	ip, pc, #0, 12
   125f0:	add	ip, ip, #122880	; 0x1e000
   125f4:	ldr	pc, [ip, #2616]!	; 0xa38

000125f8 <coda_cursor_get_record_field_available_status@plt>:
   125f8:	add	ip, pc, #0, 12
   125fc:	add	ip, ip, #122880	; 0x1e000
   12600:	ldr	pc, [ip, #2608]!	; 0xa30

00012604 <fopen@plt>:
   12604:	add	ip, pc, #0, 12
   12608:	add	ip, ip, #122880	; 0x1e000
   1260c:	ldr	pc, [ip, #2600]!	; 0xa28

00012610 <coda_set_error@plt>:
   12610:	add	ip, pc, #0, 12
   12614:	add	ip, ip, #122880	; 0x1e000
   12618:	ldr	pc, [ip, #2592]!	; 0xa20

0001261c <coda_open@plt>:
   1261c:	add	ip, pc, #0, 12
   12620:	add	ip, ip, #122880	; 0x1e000
   12624:	ldr	pc, [ip, #2584]!	; 0xa18

00012628 <fflush@plt>:
   12628:	add	ip, pc, #0, 12
   1262c:	add	ip, ip, #122880	; 0x1e000
   12630:	ldr	pc, [ip, #2576]!	; 0xa10

00012634 <coda_time_double_to_string@plt>:
   12634:	add	ip, pc, #0, 12
   12638:	add	ip, ip, #122880	; 0x1e000
   1263c:	ldr	pc, [ip, #2568]!	; 0xa08

00012640 <coda_cursor_get_num_elements@plt>:
   12640:	add	ip, pc, #0, 12
   12644:	add	ip, ip, #122880	; 0x1e000
   12648:	ldr	pc, [ip, #2560]!	; 0xa00

0001264c <coda_str64u@plt>:
   1264c:	add	ip, pc, #0, 12
   12650:	add	ip, ip, #122880	; 0x1e000
   12654:	ldr	pc, [ip, #2552]!	; 0x9f8

00012658 <free@plt>:
   12658:	add	ip, pc, #0, 12
   1265c:	add	ip, ip, #122880	; 0x1e000
   12660:	ldr	pc, [ip, #2544]!	; 0x9f0

00012664 <coda_set_option_use_mmap@plt>:
   12664:	add	ip, pc, #0, 12
   12668:	add	ip, ip, #122880	; 0x1e000
   1266c:	ldr	pc, [ip, #2536]!	; 0x9e8

00012670 <coda_set_definition_path_conditional@plt>:
   12670:	add	ip, pc, #0, 12
   12674:	add	ip, ip, #122880	; 0x1e000
   12678:	ldr	pc, [ip, #2528]!	; 0x9e0

0001267c <coda_cursor_read_uint32@plt>:
   1267c:	add	ip, pc, #0, 12
   12680:	add	ip, ip, #122880	; 0x1e000
   12684:	ldr	pc, [ip, #2520]!	; 0x9d8

00012688 <coda_set_option_bypass_special_types@plt>:
   12688:	add	ip, pc, #0, 12
   1268c:	add	ip, ip, #122880	; 0x1e000
   12690:	ldr	pc, [ip, #2512]!	; 0x9d0

00012694 <coda_type_get_record_field_type@plt>:
   12694:	add	ip, pc, #0, 12
   12698:	add	ip, ip, #122880	; 0x1e000
   1269c:	ldr	pc, [ip, #2504]!	; 0x9c8

000126a0 <coda_cursor_get_type@plt>:
   126a0:	add	ip, pc, #0, 12
   126a4:	add	ip, ip, #122880	; 0x1e000
   126a8:	ldr	pc, [ip, #2496]!	; 0x9c0

000126ac <memcpy@plt>:
   126ac:	add	ip, pc, #0, 12
   126b0:	add	ip, ip, #122880	; 0x1e000
   126b4:	ldr	pc, [ip, #2488]!	; 0x9b8

000126b8 <coda_isInf@plt>:
   126b8:	add	ip, pc, #0, 12
   126bc:	add	ip, ip, #122880	; 0x1e000
   126c0:	ldr	pc, [ip, #2480]!	; 0x9b0

000126c4 <coda_type_get_bit_size@plt>:
   126c4:	add	ip, pc, #0, 12
   126c8:	add	ip, ip, #122880	; 0x1e000
   126cc:	ldr	pc, [ip, #2472]!	; 0x9a8

000126d0 <coda_type_get_record_field_available_status@plt>:
   126d0:	add	ip, pc, #0, 12
   126d4:	add	ip, ip, #122880	; 0x1e000
   126d8:	ldr	pc, [ip, #2464]!	; 0x9a0

000126dc <coda_cursor_has_attributes@plt>:
   126dc:	add	ip, pc, #0, 12
   126e0:	add	ip, ip, #122880	; 0x1e000
   126e4:	ldr	pc, [ip, #2456]!	; 0x998

000126e8 <coda_cursor_get_type_class@plt>:
   126e8:	add	ip, pc, #0, 12
   126ec:	add	ip, ip, #122880	; 0x1e000
   126f0:	ldr	pc, [ip, #2448]!	; 0x990

000126f4 <coda_set_definition_path@plt>:
   126f4:	add	ip, pc, #0, 12
   126f8:	add	ip, ip, #122880	; 0x1e000
   126fc:	ldr	pc, [ip, #2440]!	; 0x988

00012700 <coda_get_product_format@plt>:
   12700:	add	ip, pc, #0, 12
   12704:	add	ip, ip, #122880	; 0x1e000
   12708:	ldr	pc, [ip, #2432]!	; 0x980

0001270c <coda_type_get_unit@plt>:
   1270c:	add	ip, pc, #0, 12
   12710:	add	ip, ip, #122880	; 0x1e000
   12714:	ldr	pc, [ip, #2424]!	; 0x978

00012718 <coda_type_get_description@plt>:
   12718:	add	ip, pc, #0, 12
   1271c:	add	ip, ip, #122880	; 0x1e000
   12720:	ldr	pc, [ip, #2416]!	; 0x970

00012724 <coda_cursor_get_special_type@plt>:
   12724:	add	ip, pc, #0, 12
   12728:	add	ip, ip, #122880	; 0x1e000
   1272c:	ldr	pc, [ip, #2408]!	; 0x968

00012730 <coda_cursor_goto_first_array_element@plt>:
   12730:	add	ip, pc, #0, 12
   12734:	add	ip, ip, #122880	; 0x1e000
   12738:	ldr	pc, [ip, #2400]!	; 0x960

0001273c <coda_cursor_set_product@plt>:
   1273c:	add	ip, pc, #0, 12
   12740:	add	ip, ip, #122880	; 0x1e000
   12744:	ldr	pc, [ip, #2392]!	; 0x958

00012748 <strcpy@plt>:
   12748:	add	ip, pc, #0, 12
   1274c:	add	ip, ip, #122880	; 0x1e000
   12750:	ldr	pc, [ip, #2384]!	; 0x950

00012754 <coda_cursor_goto_first_record_field@plt>:
   12754:	add	ip, pc, #0, 12
   12758:	add	ip, ip, #122880	; 0x1e000
   1275c:	ldr	pc, [ip, #2376]!	; 0x948

00012760 <coda_cursor_goto_record_field_by_index@plt>:
   12760:	add	ip, pc, #0, 12
   12764:	add	ip, ip, #122880	; 0x1e000
   12768:	ldr	pc, [ip, #2368]!	; 0x940

0001276c <coda_done@plt>:
   1276c:	add	ip, pc, #0, 12
   12770:	add	ip, ip, #122880	; 0x1e000
   12774:	ldr	pc, [ip, #2360]!	; 0x938

00012778 <coda_cursor_get_read_type@plt>:
   12778:	add	ip, pc, #0, 12
   1277c:	add	ip, ip, #122880	; 0x1e000
   12780:	ldr	pc, [ip, #2352]!	; 0x930

00012784 <malloc@plt>:
   12784:	add	ip, pc, #0, 12
   12788:	add	ip, ip, #122880	; 0x1e000
   1278c:	ldr	pc, [ip, #2344]!	; 0x928

00012790 <__libc_start_main@plt>:
   12790:	add	ip, pc, #0, 12
   12794:	add	ip, ip, #122880	; 0x1e000
   12798:	ldr	pc, [ip, #2336]!	; 0x920

0001279c <__gmon_start__@plt>:
   1279c:	add	ip, pc, #0, 12
   127a0:	add	ip, ip, #122880	; 0x1e000
   127a4:	ldr	pc, [ip, #2328]!	; 0x918

000127a8 <coda_cursor_read_string@plt>:
   127a8:	add	ip, pc, #0, 12
   127ac:	add	ip, ip, #122880	; 0x1e000
   127b0:	ldr	pc, [ip, #2320]!	; 0x910

000127b4 <coda_cursor_goto_parent@plt>:
   127b4:	add	ip, pc, #0, 12
   127b8:	add	ip, ip, #122880	; 0x1e000
   127bc:	ldr	pc, [ip, #2312]!	; 0x908

000127c0 <coda_type_get_num_record_fields@plt>:
   127c0:	add	ip, pc, #0, 12
   127c4:	add	ip, ip, #122880	; 0x1e000
   127c8:	ldr	pc, [ip, #2304]!	; 0x900

000127cc <exit@plt>:
   127cc:	add	ip, pc, #0, 12
   127d0:	add	ip, ip, #122880	; 0x1e000
   127d4:	ldr	pc, [ip, #2296]!	; 0x8f8

000127d8 <coda_type_get_read_type@plt>:
   127d8:	add	ip, pc, #0, 12
   127dc:	add	ip, ip, #122880	; 0x1e000
   127e0:	ldr	pc, [ip, #2288]!	; 0x8f0

000127e4 <coda_cursor_get_string_length@plt>:
   127e4:	add	ip, pc, #0, 12
   127e8:	add	ip, ip, #122880	; 0x1e000
   127ec:	ldr	pc, [ip, #2280]!	; 0x8e8

000127f0 <coda_cursor_read_uint64@plt>:
   127f0:	add	ip, pc, #0, 12
   127f4:	add	ip, ip, #122880	; 0x1e000
   127f8:	ldr	pc, [ip, #2272]!	; 0x8e0

000127fc <coda_cursor_read_double@plt>:
   127fc:	add	ip, pc, #0, 12
   12800:	add	ip, ip, #122880	; 0x1e000
   12804:	ldr	pc, [ip, #2264]!	; 0x8d8

00012808 <coda_isNaN@plt>:
   12808:	add	ip, pc, #0, 12
   1280c:	add	ip, ip, #122880	; 0x1e000
   12810:	ldr	pc, [ip, #2256]!	; 0x8d0

00012814 <fprintf@plt>:
   12814:	add	ip, pc, #0, 12
   12818:	add	ip, ip, #122880	; 0x1e000
   1281c:	ldr	pc, [ip, #2248]!	; 0x8c8

00012820 <coda_cursor_goto_next_array_element@plt>:
   12820:	add	ip, pc, #0, 12
   12824:	add	ip, ip, #122880	; 0x1e000
   12828:	ldr	pc, [ip, #2240]!	; 0x8c0

0001282c <coda_open_as@plt>:
   1282c:	add	ip, pc, #0, 12
   12830:	add	ip, ip, #122880	; 0x1e000
   12834:	ldr	pc, [ip, #2232]!	; 0x8b8

00012838 <coda_init@plt>:
   12838:	add	ip, pc, #0, 12
   1283c:	add	ip, ip, #122880	; 0x1e000
   12840:	ldr	pc, [ip, #2224]!	; 0x8b0

00012844 <coda_set_option_perform_conversions@plt>:
   12844:	add	ip, pc, #0, 12
   12848:	add	ip, ip, #122880	; 0x1e000
   1284c:	ldr	pc, [ip, #2216]!	; 0x8a8

00012850 <coda_cursor_goto_attributes@plt>:
   12850:	add	ip, pc, #0, 12
   12854:	add	ip, ip, #122880	; 0x1e000
   12858:	ldr	pc, [ip, #2208]!	; 0x8a0

0001285c <coda_cursor_read_char@plt>:
   1285c:	add	ip, pc, #0, 12
   12860:	add	ip, ip, #122880	; 0x1e000
   12864:	ldr	pc, [ip, #2200]!	; 0x898

00012868 <memset@plt>:
   12868:	add	ip, pc, #0, 12
   1286c:	add	ip, ip, #122880	; 0x1e000
   12870:	ldr	pc, [ip, #2192]!	; 0x890

00012874 <strncpy@plt>:
   12874:	add	ip, pc, #0, 12
   12878:	add	ip, ip, #122880	; 0x1e000
   1287c:	ldr	pc, [ip, #2184]!	; 0x888

00012880 <coda_type_get_special_type@plt>:
   12880:	add	ip, pc, #0, 12
   12884:	add	ip, ip, #122880	; 0x1e000
   12888:	ldr	pc, [ip, #2176]!	; 0x880

0001288c <coda_type_get_record_union_status@plt>:
   1288c:	add	ip, pc, #0, 12
   12890:	add	ip, ip, #122880	; 0x1e000
   12894:	ldr	pc, [ip, #2168]!	; 0x878

00012898 <coda_cursor_read_complex_double_split@plt>:
   12898:	add	ip, pc, #0, 12
   1289c:	add	ip, ip, #122880	; 0x1e000
   128a0:	ldr	pc, [ip, #2160]!	; 0x870

000128a4 <coda_type_get_array_base_type@plt>:
   128a4:	add	ip, pc, #0, 12
   128a8:	add	ip, ip, #122880	; 0x1e000
   128ac:	ldr	pc, [ip, #2152]!	; 0x868

000128b0 <fclose@plt>:
   128b0:	add	ip, pc, #0, 12
   128b4:	add	ip, ip, #122880	; 0x1e000
   128b8:	ldr	pc, [ip, #2144]!	; 0x860

000128bc <coda_type_get_string_length@plt>:
   128bc:	add	ip, pc, #0, 12
   128c0:	add	ip, ip, #122880	; 0x1e000
   128c4:	ldr	pc, [ip, #2136]!	; 0x858

000128c8 <coda_type_get_native_type_name@plt>:
   128c8:	add	ip, pc, #0, 12
   128cc:	add	ip, ip, #122880	; 0x1e000
   128d0:	ldr	pc, [ip, #2128]!	; 0x850

000128d4 <coda_cursor_get_array_dim@plt>:
   128d4:	add	ip, pc, #0, 12
   128d8:	add	ip, ip, #122880	; 0x1e000
   128dc:	ldr	pc, [ip, #2120]!	; 0x848

000128e0 <coda_cursor_has_ascii_content@plt>:
   128e0:	add	ip, pc, #0, 12
   128e4:	add	ip, ip, #122880	; 0x1e000
   128e8:	ldr	pc, [ip, #2112]!	; 0x840

000128ec <coda_close@plt>:
   128ec:	add	ip, pc, #0, 12
   128f0:	add	ip, ip, #122880	; 0x1e000
   128f4:	ldr	pc, [ip, #2104]!	; 0x838

000128f8 <coda_cursor_read_int64@plt>:
   128f8:	add	ip, pc, #0, 12
   128fc:	add	ip, ip, #122880	; 0x1e000
   12900:	ldr	pc, [ip, #2096]!	; 0x830

00012904 <vfprintf@plt>:
   12904:	add	ip, pc, #0, 12
   12908:	add	ip, ip, #122880	; 0x1e000
   1290c:	ldr	pc, [ip, #2088]!	; 0x828

00012910 <coda_cursor_goto@plt>:
   12910:	add	ip, pc, #0, 12
   12914:	add	ip, ip, #122880	; 0x1e000
   12918:	ldr	pc, [ip, #2080]!	; 0x820

0001291c <coda_type_get_record_field_index_from_name@plt>:
   1291c:	add	ip, pc, #0, 12
   12920:	add	ip, ip, #122880	; 0x1e000
   12924:	ldr	pc, [ip, #2072]!	; 0x818

00012928 <coda_cursor_read_complex_double_pair@plt>:
   12928:	add	ip, pc, #0, 12
   1292c:	add	ip, ip, #122880	; 0x1e000
   12930:	ldr	pc, [ip, #2064]!	; 0x810

00012934 <coda_cursor_goto_next_record_field@plt>:
   12934:	add	ip, pc, #0, 12
   12938:	add	ip, ip, #122880	; 0x1e000
   1293c:	ldr	pc, [ip, #2056]!	; 0x808

00012940 <coda_type_get_array_dim@plt>:
   12940:	add	ip, pc, #0, 12
   12944:	add	ip, ip, #122880	; 0x1e000
   12948:	ldr	pc, [ip, #2048]!	; 0x800

0001294c <coda_cursor_get_bit_size@plt>:
   1294c:	add	ip, pc, #0, 12
   12950:	add	ip, ip, #122880	; 0x1e000
   12954:	ldr	pc, [ip, #2040]!	; 0x7f8

00012958 <atoi@plt>:
   12958:	add	ip, pc, #0, 12
   1295c:	add	ip, ip, #122880	; 0x1e000
   12960:	ldr	pc, [ip, #2032]!	; 0x7f0

00012964 <coda_errno_to_string@plt>:
   12964:	add	ip, pc, #0, 12
   12968:	add	ip, ip, #122880	; 0x1e000
   1296c:	ldr	pc, [ip, #2024]!	; 0x7e8

00012970 <coda_cursor_use_base_type_of_special_type@plt>:
   12970:	add	ip, pc, #0, 12
   12974:	add	ip, ip, #122880	; 0x1e000
   12978:	ldr	pc, [ip, #2016]!	; 0x7e0

0001297c <coda_cursor_get_available_union_field_index@plt>:
   1297c:	add	ip, pc, #0, 12
   12980:	add	ip, ip, #122880	; 0x1e000
   12984:	ldr	pc, [ip, #2008]!	; 0x7d8

00012988 <coda_cursor_read_int32@plt>:
   12988:	add	ip, pc, #0, 12
   1298c:	add	ip, ip, #122880	; 0x1e000
   12990:	ldr	pc, [ip, #2000]!	; 0x7d0

00012994 <coda_cursor_get_file_bit_offset@plt>:
   12994:	add	ip, pc, #0, 12
   12998:	add	ip, ip, #122880	; 0x1e000
   1299c:	ldr	pc, [ip, #1992]!	; 0x7c8

000129a0 <coda_get_libcoda_version@plt>:
   129a0:	add	ip, pc, #0, 12
   129a4:	add	ip, ip, #122880	; 0x1e000
   129a8:	ldr	pc, [ip, #1984]!	; 0x7c0

000129ac <coda_get_errno@plt>:
   129ac:	add	ip, pc, #0, 12
   129b0:	add	ip, ip, #122880	; 0x1e000
   129b4:	ldr	pc, [ip, #1976]!	; 0x7b8

000129b8 <coda_type_get_special_base_type@plt>:
   129b8:	add	ip, pc, #0, 12
   129bc:	add	ip, ip, #122880	; 0x1e000
   129c0:	ldr	pc, [ip, #1968]!	; 0x7b0

000129c4 <coda_type_get_record_field_name@plt>:
   129c4:	add	ip, pc, #0, 12
   129c8:	add	ip, ip, #122880	; 0x1e000
   129cc:	ldr	pc, [ip, #1960]!	; 0x7a8

000129d0 <abort@plt>:
   129d0:	add	ip, pc, #0, 12
   129d4:	add	ip, ip, #122880	; 0x1e000
   129d8:	ldr	pc, [ip, #1952]!	; 0x7a0

000129dc <coda_cursor_read_bits@plt>:
   129dc:	add	ip, pc, #0, 12
   129e0:	add	ip, ip, #122880	; 0x1e000
   129e4:	ldr	pc, [ip, #1944]!	; 0x798

000129e8 <coda_str64@plt>:
   129e8:	add	ip, pc, #0, 12
   129ec:	add	ip, ip, #122880	; 0x1e000
   129f0:	ldr	pc, [ip, #1936]!	; 0x790

000129f4 <__assert_fail@plt>:
   129f4:	add	ip, pc, #0, 12
   129f8:	add	ip, ip, #122880	; 0x1e000
   129fc:	ldr	pc, [ip, #1928]!	; 0x788

00012a00 <coda_type_get_class@plt>:
   12a00:	add	ip, pc, #0, 12
   12a04:	add	ip, ip, #122880	; 0x1e000
   12a08:	ldr	pc, [ip, #1920]!	; 0x780

Disassembly of section .text:

00012a0c <_start@@Base>:
   12a0c:	mov	fp, #0
   12a10:	mov	lr, #0
   12a14:	pop	{r1}		; (ldr r1, [sp], #4)
   12a18:	mov	r2, sp
   12a1c:	push	{r2}		; (str r2, [sp, #-4]!)
   12a20:	push	{r0}		; (str r0, [sp, #-4]!)
   12a24:	ldr	ip, [pc, #16]	; 12a3c <_start@@Base+0x30>
   12a28:	push	{ip}		; (str ip, [sp, #-4]!)
   12a2c:	ldr	r0, [pc, #12]	; 12a40 <_start@@Base+0x34>
   12a30:	ldr	r3, [pc, #12]	; 12a44 <_start@@Base+0x38>
   12a34:	bl	12790 <__libc_start_main@plt>
   12a38:	bl	129d0 <abort@plt>
   12a3c:	andeq	lr, r1, r0, asr #29
   12a40:			; <UNDEFINED> instruction: 0x0001bcb4
   12a44:	andeq	lr, r1, r0, ror #28
   12a48:	ldr	r3, [pc, #20]	; 12a64 <_start@@Base+0x58>
   12a4c:	ldr	r2, [pc, #20]	; 12a68 <_start@@Base+0x5c>
   12a50:	add	r3, pc, r3
   12a54:	ldr	r2, [r3, r2]
   12a58:	cmp	r2, #0
   12a5c:	bxeq	lr
   12a60:	b	1279c <__gmon_start__@plt>
   12a64:	andeq	lr, r1, r8, lsr #11
   12a68:	ldrdeq	r0, [r0], -r8
   12a6c:	ldr	r0, [pc, #24]	; 12a8c <_start@@Base+0x80>
   12a70:	ldr	r3, [pc, #24]	; 12a90 <_start@@Base+0x84>
   12a74:	cmp	r3, r0
   12a78:	bxeq	lr
   12a7c:	ldr	r3, [pc, #16]	; 12a94 <_start@@Base+0x88>
   12a80:	cmp	r3, #0
   12a84:	bxeq	lr
   12a88:	bx	r3
   12a8c:	andeq	r1, r3, ip, lsl r2
   12a90:	andeq	r1, r3, ip, lsl r2
   12a94:	andeq	r0, r0, r0
   12a98:	ldr	r0, [pc, #36]	; 12ac4 <_start@@Base+0xb8>
   12a9c:	ldr	r1, [pc, #36]	; 12ac8 <_start@@Base+0xbc>
   12aa0:	sub	r1, r1, r0
   12aa4:	asr	r1, r1, #2
   12aa8:	add	r1, r1, r1, lsr #31
   12aac:	asrs	r1, r1, #1
   12ab0:	bxeq	lr
   12ab4:	ldr	r3, [pc, #16]	; 12acc <_start@@Base+0xc0>
   12ab8:	cmp	r3, #0
   12abc:	bxeq	lr
   12ac0:	bx	r3
   12ac4:	andeq	r1, r3, ip, lsl r2
   12ac8:	andeq	r1, r3, ip, lsl r2
   12acc:	andeq	r0, r0, r0
   12ad0:	push	{r4, lr}
   12ad4:	ldr	r4, [pc, #24]	; 12af4 <_start@@Base+0xe8>
   12ad8:	ldrb	r3, [r4]
   12adc:	cmp	r3, #0
   12ae0:	popne	{r4, pc}
   12ae4:	bl	12a6c <_start@@Base+0x60>
   12ae8:	mov	r3, #1
   12aec:	strb	r3, [r4]
   12af0:	pop	{r4, pc}
   12af4:	andeq	r1, r3, r0, lsr #4
   12af8:	b	12a98 <_start@@Base+0x8c>

00012afc <export_data_element_to_ascii@@Base>:
   12afc:	push	{fp, lr}
   12b00:	mov	fp, sp
   12b04:	sub	sp, sp, #16
   12b08:	ldr	r0, [pc, #236]	; 12bfc <export_data_element_to_ascii@@Base+0x100>
   12b0c:	add	r0, pc, r0
   12b10:	ldr	r0, [r0]
   12b14:	cmp	r0, #0
   12b18:	beq	12b30 <export_data_element_to_ascii@@Base+0x34>
   12b1c:	ldr	r0, [pc, #228]	; 12c08 <export_data_element_to_ascii@@Base+0x10c>
   12b20:	add	r0, pc, r0
   12b24:	movw	r1, #0
   12b28:	str	r1, [r0]
   12b2c:	b	12b4c <export_data_element_to_ascii@@Base+0x50>
   12b30:	ldr	r0, [pc, #200]	; 12c00 <export_data_element_to_ascii@@Base+0x104>
   12b34:	add	r1, pc, r0
   12b38:	ldr	r0, [pc, #196]	; 12c04 <export_data_element_to_ascii@@Base+0x108>
   12b3c:	ldr	r0, [pc, r0]
   12b40:	ldr	r0, [r0]
   12b44:	bl	12814 <fprintf@plt>
   12b48:	str	r0, [fp, #-4]
   12b4c:	ldr	r0, [pc, #184]	; 12c0c <export_data_element_to_ascii@@Base+0x110>
   12b50:	ldr	r0, [pc, r0]
   12b54:	ldr	r0, [r0]
   12b58:	cmp	r0, #0
   12b5c:	beq	12b94 <export_data_element_to_ascii@@Base+0x98>
   12b60:	ldr	r0, [pc, #176]	; 12c18 <export_data_element_to_ascii@@Base+0x11c>
   12b64:	ldr	r0, [pc, r0]
   12b68:	ldr	r0, [r0]
   12b6c:	movw	r1, #2
   12b70:	movw	r2, #0
   12b74:	bl	19324 <print_full_field_name@@Base>
   12b78:	ldr	r0, [pc, #144]	; 12c10 <export_data_element_to_ascii@@Base+0x114>
   12b7c:	add	r1, pc, r0
   12b80:	ldr	r0, [pc, #140]	; 12c14 <export_data_element_to_ascii@@Base+0x118>
   12b84:	ldr	r0, [pc, r0]
   12b88:	ldr	r0, [r0]
   12b8c:	bl	12814 <fprintf@plt>
   12b90:	str	r0, [sp, #8]
   12b94:	ldr	r0, [pc, #128]	; 12c1c <export_data_element_to_ascii@@Base+0x120>
   12b98:	ldr	r0, [pc, r0]
   12b9c:	ldr	r0, [r0]
   12ba0:	cmp	r0, #0
   12ba4:	ble	12bd4 <export_data_element_to_ascii@@Base+0xd8>
   12ba8:	ldr	r0, [pc, #116]	; 12c24 <export_data_element_to_ascii@@Base+0x128>
   12bac:	ldr	r0, [pc, r0]
   12bb0:	ldr	r1, [r0]
   12bb4:	add	r0, r0, r1, lsl #3
   12bb8:	ldr	r1, [r0, #296]	; 0x128
   12bbc:	ldr	r0, [r0, #300]	; 0x12c
   12bc0:	orr	r0, r1, r0
   12bc4:	cmp	r0, #0
   12bc8:	bne	12bd4 <export_data_element_to_ascii@@Base+0xd8>
   12bcc:	b	12bd0 <export_data_element_to_ascii@@Base+0xd4>
   12bd0:	b	12bf4 <export_data_element_to_ascii@@Base+0xf8>
   12bd4:	ldr	r0, [pc, #68]	; 12c20 <export_data_element_to_ascii@@Base+0x124>
   12bd8:	ldr	r0, [pc, r0]
   12bdc:	ldr	r0, [r0]
   12be0:	movw	r1, #0
   12be4:	str	r1, [sp, #4]
   12be8:	ldr	r2, [sp, #4]
   12bec:	ldr	r3, [sp, #4]
   12bf0:	bl	12c28 <export_data_element_to_ascii@@Base+0x12c>
   12bf4:	mov	sp, fp
   12bf8:	pop	{fp, pc}
   12bfc:	strdeq	lr, [r1], -ip
   12c00:	strdeq	sp, [r0], -r7
   12c04:	andeq	lr, r1, ip, ror r6
   12c08:	andeq	lr, r1, r8, ror #13
   12c0c:	andeq	lr, r1, r8, lsr #13
   12c10:	andeq	sp, r0, pc, lsr #27
   12c14:	andeq	lr, r1, r4, lsr r6
   12c18:	andeq	lr, r1, r4, asr r6
   12c1c:	andeq	lr, r1, r8, asr r6
   12c20:	andeq	lr, r1, r0, ror #11
   12c24:	andeq	lr, r1, r4, asr #12
   12c28:	push	{fp, lr}
   12c2c:	mov	fp, sp
   12c30:	sub	sp, sp, #112	; 0x70
   12c34:	ldr	ip, [pc, #1280]	; 1313c <export_data_element_to_ascii@@Base+0x640>
   12c38:	ldr	ip, [pc, ip]
   12c3c:	add	ip, ip, #8
   12c40:	str	r0, [fp, #-4]
   12c44:	str	r1, [fp, #-8]
   12c48:	str	r2, [fp, #-12]
   12c4c:	str	r3, [fp, #-16]
   12c50:	ldr	r0, [fp, #-8]
   12c54:	ldr	r1, [pc, #1328]	; 1318c <export_data_element_to_ascii@@Base+0x690>
   12c58:	ldr	r1, [pc, r1]
   12c5c:	add	r0, r1, r0, lsl #2
   12c60:	add	r0, r0, #8
   12c64:	ldr	r0, [r0]
   12c68:	sub	r1, fp, #20
   12c6c:	str	ip, [sp, #28]
   12c70:	bl	12a00 <coda_type_get_class@plt>
   12c74:	cmp	r0, #0
   12c78:	beq	12c88 <export_data_element_to_ascii@@Base+0x18c>
   12c7c:	ldr	r0, [pc, #1212]	; 13140 <export_data_element_to_ascii@@Base+0x644>
   12c80:	ldr	r0, [pc, r0]
   12c84:	blx	r0
   12c88:	ldr	r0, [fp, #-20]	; 0xffffffec
   12c8c:	cmp	r0, #0
   12c90:	str	r0, [sp, #24]
   12c94:	beq	1303c <export_data_element_to_ascii@@Base+0x540>
   12c98:	b	12c9c <export_data_element_to_ascii@@Base+0x1a0>
   12c9c:	ldr	r0, [sp, #24]
   12ca0:	cmp	r0, #1
   12ca4:	bne	13128 <export_data_element_to_ascii@@Base+0x62c>
   12ca8:	b	12cac <export_data_element_to_ascii@@Base+0x1b0>
   12cac:	ldr	r0, [pc, #1188]	; 13158 <export_data_element_to_ascii@@Base+0x65c>
   12cb0:	ldr	r0, [pc, r0]
   12cb4:	add	r0, r0, #800	; 0x320
   12cb8:	ldr	r1, [fp, #-12]
   12cbc:	movw	r2, #80	; 0x50
   12cc0:	mul	r1, r1, r2
   12cc4:	add	r0, r0, r1
   12cc8:	str	r0, [fp, #-24]	; 0xffffffe8
   12ccc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12cd0:	ldr	r0, [r0]
   12cd4:	str	r0, [sp, #44]	; 0x2c
   12cd8:	ldr	r0, [fp, #-12]
   12cdc:	cmp	r0, #0
   12ce0:	bne	12cf0 <export_data_element_to_ascii@@Base+0x1f4>
   12ce4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12ce8:	movw	r1, #0
   12cec:	str	r1, [r0, #44]	; 0x2c
   12cf0:	ldr	r0, [pc, #1124]	; 1315c <export_data_element_to_ascii@@Base+0x660>
   12cf4:	ldr	r0, [pc, r0]
   12cf8:	ldr	r0, [r0, #104]	; 0x68
   12cfc:	ldr	r1, [sp, #44]	; 0x2c
   12d00:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12d04:	ldr	r2, [r2, #4]
   12d08:	add	r1, r1, r2
   12d0c:	cmp	r0, r1
   12d10:	movw	r0, #0
   12d14:	movge	r0, #1
   12d18:	and	r0, r0, #1
   12d1c:	str	r0, [fp, #-32]	; 0xffffffe0
   12d20:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12d24:	cmp	r0, #0
   12d28:	beq	12d80 <export_data_element_to_ascii@@Base+0x284>
   12d2c:	ldr	r0, [pc, #1068]	; 13160 <export_data_element_to_ascii@@Base+0x664>
   12d30:	ldr	r0, [pc, r0]
   12d34:	ldr	r1, [fp, #-12]
   12d38:	ldr	r0, [r0, #3360]	; 0xd20
   12d3c:	sub	r0, r0, #1
   12d40:	cmp	r1, r0
   12d44:	bge	12d80 <export_data_element_to_ascii@@Base+0x284>
   12d48:	ldr	r0, [pc, #1044]	; 13164 <export_data_element_to_ascii@@Base+0x668>
   12d4c:	ldr	r0, [pc, r0]
   12d50:	add	r0, r0, #800	; 0x320
   12d54:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12d58:	ldr	r1, [r1, #44]	; 0x2c
   12d5c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12d60:	ldr	r2, [r2, #40]	; 0x28
   12d64:	mul	r1, r1, r2
   12d68:	ldr	r2, [fp, #-12]
   12d6c:	add	r2, r2, #1
   12d70:	movw	r3, #80	; 0x50
   12d74:	mul	r2, r2, r3
   12d78:	add	r0, r0, r2
   12d7c:	str	r1, [r0, #44]	; 0x2c
   12d80:	movw	r0, #1
   12d84:	str	r0, [fp, #-28]	; 0xffffffe4
   12d88:	movw	r0, #0
   12d8c:	str	r0, [sp, #40]	; 0x28
   12d90:	ldr	r0, [sp, #40]	; 0x28
   12d94:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12d98:	ldr	r1, [r1, #4]
   12d9c:	cmp	r0, r1
   12da0:	bge	12e7c <export_data_element_to_ascii@@Base+0x380>
   12da4:	ldr	r0, [pc, #988]	; 13188 <export_data_element_to_ascii@@Base+0x68c>
   12da8:	ldr	r0, [pc, r0]
   12dac:	add	r0, r0, #72	; 0x48
   12db0:	ldr	r1, [sp, #44]	; 0x2c
   12db4:	ldr	r2, [sp, #40]	; 0x28
   12db8:	add	r1, r1, r2
   12dbc:	ldr	r2, [pc, #972]	; 13190 <export_data_element_to_ascii@@Base+0x694>
   12dc0:	ldr	r2, [pc, r2]
   12dc4:	add	r1, r2, r1, lsl #2
   12dc8:	add	r1, r1, #72	; 0x48
   12dcc:	ldr	r1, [r1]
   12dd0:	cmp	r1, #0
   12dd4:	str	r0, [sp, #20]
   12dd8:	beq	12e14 <export_data_element_to_ascii@@Base+0x318>
   12ddc:	ldr	r0, [sp, #44]	; 0x2c
   12de0:	ldr	r1, [sp, #40]	; 0x28
   12de4:	add	r0, r0, r1
   12de8:	ldr	r2, [pc, #932]	; 13194 <export_data_element_to_ascii@@Base+0x698>
   12dec:	ldr	r2, [pc, r2]
   12df0:	add	r0, r2, r0, lsl #2
   12df4:	ldr	r0, [r0, #108]	; 0x6c
   12df8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12dfc:	ldr	r2, [r2, #44]	; 0x2c
   12e00:	ldr	r0, [r0, r2, lsl #2]
   12e04:	add	r2, sp, #48	; 0x30
   12e08:	add	r1, r2, r1, lsl #2
   12e0c:	str	r0, [r1]
   12e10:	b	12e3c <export_data_element_to_ascii@@Base+0x340>
   12e14:	ldr	r0, [sp, #44]	; 0x2c
   12e18:	ldr	r1, [sp, #40]	; 0x28
   12e1c:	add	r0, r0, r1
   12e20:	ldr	r2, [pc, #880]	; 13198 <export_data_element_to_ascii@@Base+0x69c>
   12e24:	ldr	r2, [pc, r2]
   12e28:	add	r0, r2, r0, lsl #2
   12e2c:	ldr	r0, [r0, #4]
   12e30:	add	r2, sp, #48	; 0x30
   12e34:	add	r1, r2, r1, lsl #2
   12e38:	str	r0, [r1]
   12e3c:	ldr	r0, [sp, #40]	; 0x28
   12e40:	add	r1, sp, #48	; 0x30
   12e44:	ldr	r0, [r1, r0, lsl #2]
   12e48:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12e4c:	mul	r0, r1, r0
   12e50:	str	r0, [fp, #-28]	; 0xffffffe4
   12e54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12e58:	add	r0, r0, #48	; 0x30
   12e5c:	ldr	r1, [sp, #40]	; 0x28
   12e60:	add	r0, r0, r1, lsl #2
   12e64:	movw	r1, #0
   12e68:	str	r1, [r0]
   12e6c:	ldr	r0, [sp, #40]	; 0x28
   12e70:	add	r0, r0, #1
   12e74:	str	r0, [sp, #40]	; 0x28
   12e78:	b	12d90 <export_data_element_to_ascii@@Base+0x294>
   12e7c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12e80:	cmp	r0, #0
   12e84:	bne	12e8c <export_data_element_to_ascii@@Base+0x390>
   12e88:	b	13134 <export_data_element_to_ascii@@Base+0x638>
   12e8c:	ldr	r0, [pc, #724]	; 13168 <export_data_element_to_ascii@@Base+0x66c>
   12e90:	ldr	r0, [pc, r0]
   12e94:	add	r0, r0, #144	; 0x90
   12e98:	bl	12730 <coda_cursor_goto_first_array_element@plt>
   12e9c:	cmp	r0, #0
   12ea0:	beq	12eb0 <export_data_element_to_ascii@@Base+0x3b4>
   12ea4:	ldr	r0, [pc, #704]	; 1316c <export_data_element_to_ascii@@Base+0x670>
   12ea8:	ldr	r0, [pc, r0]
   12eac:	blx	r0
   12eb0:	movw	r0, #0
   12eb4:	str	r0, [sp, #40]	; 0x28
   12eb8:	ldr	r0, [sp, #40]	; 0x28
   12ebc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12ec0:	cmp	r0, r1
   12ec4:	bge	13024 <export_data_element_to_ascii@@Base+0x528>
   12ec8:	ldr	r0, [fp, #-4]
   12ecc:	ldr	r1, [fp, #-8]
   12ed0:	add	r1, r1, #1
   12ed4:	ldr	r2, [fp, #-12]
   12ed8:	add	r2, r2, #1
   12edc:	ldr	r3, [fp, #-16]
   12ee0:	bl	12c28 <export_data_element_to_ascii@@Base+0x12c>
   12ee4:	ldr	r0, [sp, #40]	; 0x28
   12ee8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12eec:	sub	r1, r1, #1
   12ef0:	cmp	r0, r1
   12ef4:	bge	13010 <export_data_element_to_ascii@@Base+0x514>
   12ef8:	ldr	r0, [pc, #628]	; 13174 <export_data_element_to_ascii@@Base+0x678>
   12efc:	ldr	r0, [pc, r0]
   12f00:	add	r0, r0, #144	; 0x90
   12f04:	bl	12820 <coda_cursor_goto_next_array_element@plt>
   12f08:	cmp	r0, #0
   12f0c:	beq	12f1c <export_data_element_to_ascii@@Base+0x420>
   12f10:	ldr	r0, [pc, #608]	; 13178 <export_data_element_to_ascii@@Base+0x67c>
   12f14:	ldr	r0, [pc, r0]
   12f18:	blx	r0
   12f1c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12f20:	cmp	r0, #0
   12f24:	beq	12f70 <export_data_element_to_ascii@@Base+0x474>
   12f28:	ldr	r0, [pc, #588]	; 1317c <export_data_element_to_ascii@@Base+0x680>
   12f2c:	ldr	r0, [pc, r0]
   12f30:	ldr	r1, [fp, #-12]
   12f34:	ldr	r0, [r0, #3360]	; 0xd20
   12f38:	sub	r0, r0, #1
   12f3c:	cmp	r1, r0
   12f40:	bge	12f70 <export_data_element_to_ascii@@Base+0x474>
   12f44:	ldr	r0, [pc, #564]	; 13180 <export_data_element_to_ascii@@Base+0x684>
   12f48:	ldr	r0, [pc, r0]
   12f4c:	add	r0, r0, #800	; 0x320
   12f50:	ldr	r1, [fp, #-12]
   12f54:	add	r1, r1, #1
   12f58:	movw	r2, #80	; 0x50
   12f5c:	mul	r1, r1, r2
   12f60:	add	r0, r0, r1
   12f64:	ldr	r1, [r0, #44]	; 0x2c
   12f68:	add	r1, r1, #1
   12f6c:	str	r1, [r0, #44]	; 0x2c
   12f70:	ldr	r0, [pc, #524]	; 13184 <export_data_element_to_ascii@@Base+0x688>
   12f74:	ldr	r0, [pc, r0]
   12f78:	ldr	r0, [r0]
   12f7c:	cmp	r0, #0
   12f80:	beq	1300c <export_data_element_to_ascii@@Base+0x510>
   12f84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12f88:	ldr	r0, [r0, #4]
   12f8c:	sub	r0, r0, #1
   12f90:	str	r0, [sp, #36]	; 0x24
   12f94:	ldr	r0, [sp, #36]	; 0x24
   12f98:	cmp	r0, #0
   12f9c:	blt	13008 <export_data_element_to_ascii@@Base+0x50c>
   12fa0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12fa4:	ldr	r1, [sp, #36]	; 0x24
   12fa8:	add	r0, r0, r1, lsl #2
   12fac:	ldr	r1, [r0, #48]	; 0x30
   12fb0:	add	r1, r1, #1
   12fb4:	str	r1, [r0, #48]	; 0x30
   12fb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12fbc:	ldr	r1, [sp, #36]	; 0x24
   12fc0:	add	r0, r0, r1, lsl #2
   12fc4:	ldr	r0, [r0, #48]	; 0x30
   12fc8:	add	r2, sp, #48	; 0x30
   12fcc:	add	r1, r2, r1, lsl #2
   12fd0:	ldr	r1, [r1]
   12fd4:	cmp	r0, r1
   12fd8:	bne	13000 <export_data_element_to_ascii@@Base+0x504>
   12fdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12fe0:	add	r0, r0, #48	; 0x30
   12fe4:	ldr	r1, [sp, #36]	; 0x24
   12fe8:	sub	r2, r1, #1
   12fec:	str	r2, [sp, #36]	; 0x24
   12ff0:	add	r0, r0, r1, lsl #2
   12ff4:	movw	r1, #0
   12ff8:	str	r1, [r0]
   12ffc:	b	13004 <export_data_element_to_ascii@@Base+0x508>
   13000:	b	13008 <export_data_element_to_ascii@@Base+0x50c>
   13004:	b	12f94 <export_data_element_to_ascii@@Base+0x498>
   13008:	b	1300c <export_data_element_to_ascii@@Base+0x510>
   1300c:	b	13010 <export_data_element_to_ascii@@Base+0x514>
   13010:	b	13014 <export_data_element_to_ascii@@Base+0x518>
   13014:	ldr	r0, [sp, #40]	; 0x28
   13018:	add	r0, r0, #1
   1301c:	str	r0, [sp, #40]	; 0x28
   13020:	b	12eb8 <export_data_element_to_ascii@@Base+0x3bc>
   13024:	ldr	r0, [pc, #324]	; 13170 <export_data_element_to_ascii@@Base+0x674>
   13028:	ldr	r0, [pc, r0]
   1302c:	add	r0, r0, #144	; 0x90
   13030:	bl	127b4 <coda_cursor_goto_parent@plt>
   13034:	str	r0, [sp, #16]
   13038:	b	13134 <export_data_element_to_ascii@@Base+0x638>
   1303c:	ldr	r0, [pc, #256]	; 13144 <export_data_element_to_ascii@@Base+0x648>
   13040:	ldr	r0, [pc, r0]
   13044:	add	r1, r0, #144	; 0x90
   13048:	movw	r2, #3492	; 0xda4
   1304c:	add	r0, r0, r2
   13050:	ldr	r2, [fp, #-16]
   13054:	ldr	r3, [pc, #320]	; 1319c <export_data_element_to_ascii@@Base+0x6a0>
   13058:	ldr	r3, [pc, r3]
   1305c:	add	r2, r3, r2, lsl #2
   13060:	movw	r3, #3492	; 0xda4
   13064:	add	r2, r2, r3
   13068:	ldr	r2, [r2]
   1306c:	str	r0, [sp, #12]
   13070:	mov	r0, r1
   13074:	mov	r1, r2
   13078:	add	r2, sp, #32
   1307c:	bl	125f8 <coda_cursor_get_record_field_available_status@plt>
   13080:	cmp	r0, #0
   13084:	beq	13094 <export_data_element_to_ascii@@Base+0x598>
   13088:	ldr	r0, [pc, #184]	; 13148 <export_data_element_to_ascii@@Base+0x64c>
   1308c:	ldr	r0, [pc, r0]
   13090:	blx	r0
   13094:	ldr	r0, [sp, #32]
   13098:	cmp	r0, #0
   1309c:	beq	13124 <export_data_element_to_ascii@@Base+0x628>
   130a0:	ldr	r0, [pc, #164]	; 1314c <export_data_element_to_ascii@@Base+0x650>
   130a4:	ldr	r0, [pc, r0]
   130a8:	add	r1, r0, #144	; 0x90
   130ac:	movw	r2, #3492	; 0xda4
   130b0:	add	r0, r0, r2
   130b4:	ldr	r2, [fp, #-16]
   130b8:	ldr	r3, [pc, #224]	; 131a0 <export_data_element_to_ascii@@Base+0x6a4>
   130bc:	ldr	r3, [pc, r3]
   130c0:	add	r2, r3, r2, lsl #2
   130c4:	movw	r3, #3492	; 0xda4
   130c8:	add	r2, r2, r3
   130cc:	ldr	r2, [r2]
   130d0:	str	r0, [sp, #8]
   130d4:	mov	r0, r1
   130d8:	mov	r1, r2
   130dc:	bl	12760 <coda_cursor_goto_record_field_by_index@plt>
   130e0:	cmp	r0, #0
   130e4:	beq	130f4 <export_data_element_to_ascii@@Base+0x5f8>
   130e8:	ldr	r0, [pc, #96]	; 13150 <export_data_element_to_ascii@@Base+0x654>
   130ec:	ldr	r0, [pc, r0]
   130f0:	blx	r0
   130f4:	ldr	r0, [fp, #-4]
   130f8:	ldr	r1, [fp, #-8]
   130fc:	add	r1, r1, #1
   13100:	ldr	r2, [fp, #-12]
   13104:	ldr	r3, [fp, #-16]
   13108:	add	r3, r3, #1
   1310c:	bl	12c28 <export_data_element_to_ascii@@Base+0x12c>
   13110:	ldr	r0, [pc, #60]	; 13154 <export_data_element_to_ascii@@Base+0x658>
   13114:	ldr	r0, [pc, r0]
   13118:	add	r0, r0, #144	; 0x90
   1311c:	bl	127b4 <coda_cursor_goto_parent@plt>
   13120:	str	r0, [sp, #4]
   13124:	b	13134 <export_data_element_to_ascii@@Base+0x638>
   13128:	ldr	r0, [fp, #-4]
   1312c:	ldr	r1, [fp, #-8]
   13130:	bl	131a4 <export_data_element_to_ascii@@Base+0x6a8>
   13134:	mov	sp, fp
   13138:	pop	{fp, pc}
   1313c:	andeq	lr, r1, r4, ror r5
   13140:	andeq	lr, r1, r8, asr r5
   13144:	andeq	lr, r1, ip, ror #2
   13148:	andeq	lr, r1, ip, asr #2
   1314c:	andeq	lr, r1, r8, lsl #2
   13150:	andeq	lr, r1, ip, ror #1
   13154:	muleq	r1, r8, r0
   13158:	strdeq	lr, [r1], -ip
   1315c:	strdeq	lr, [r1], -ip
   13160:	andeq	lr, r1, ip, ror r4
   13164:	andeq	lr, r1, r0, ror #8
   13168:	andeq	lr, r1, ip, lsl r3
   1316c:	andeq	lr, r1, r0, lsr r3
   13170:	andeq	lr, r1, r4, lsl #3
   13174:			; <UNDEFINED> instruction: 0x0001e2b0
   13178:	andeq	lr, r1, r4, asr #5
   1317c:	andeq	lr, r1, r0, lsl #5
   13180:	andeq	lr, r1, r4, ror #4
   13184:	andeq	lr, r1, r4, asr r2
   13188:	andeq	lr, r1, r8, asr #8
   1318c:	andeq	lr, r1, r4, asr r5
   13190:	andeq	lr, r1, r0, lsr r4
   13194:	andeq	lr, r1, r4, lsl #8
   13198:	andeq	lr, r1, ip, asr #7
   1319c:	andeq	lr, r1, r4, asr r1
   131a0:	strdeq	lr, [r1], -r0
   131a4:	push	{r4, r5, fp, lr}
   131a8:	add	fp, sp, #8
   131ac:	sub	sp, sp, #376	; 0x178
   131b0:	ldr	r2, [pc, #2488]	; 13b70 <export_data_element_to_ascii@@Base+0x1074>
   131b4:	ldr	r2, [pc, r2]
   131b8:	str	r0, [fp, #-12]
   131bc:	str	r1, [fp, #-16]
   131c0:	ldr	r0, [r2]
   131c4:	cmp	r0, #0
   131c8:	beq	131d4 <export_data_element_to_ascii@@Base+0x6d8>
   131cc:	ldr	r0, [fp, #-12]
   131d0:	bl	13cb0 <export_data_element_to_ascii@@Base+0x11b4>
   131d4:	ldr	r0, [pc, #2456]	; 13b74 <export_data_element_to_ascii@@Base+0x1078>
   131d8:	ldr	r0, [pc, r0]
   131dc:	add	r0, r0, #8
   131e0:	ldr	r1, [fp, #-16]
   131e4:	ldr	r2, [pc, #2736]	; 13c9c <export_data_element_to_ascii@@Base+0x11a0>
   131e8:	ldr	r2, [pc, r2]
   131ec:	add	r1, r2, r1, lsl #2
   131f0:	add	r1, r1, #8
   131f4:	ldr	r1, [r1]
   131f8:	str	r0, [sp, #164]	; 0xa4
   131fc:	mov	r0, r1
   13200:	sub	r1, fp, #20
   13204:	bl	12a00 <coda_type_get_class@plt>
   13208:	cmp	r0, #0
   1320c:	beq	1321c <export_data_element_to_ascii@@Base+0x720>
   13210:	ldr	r0, [pc, #2400]	; 13b78 <export_data_element_to_ascii@@Base+0x107c>
   13214:	ldr	r0, [pc, r0]
   13218:	blx	r0
   1321c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13220:	cmp	r0, #2
   13224:	str	r0, [sp, #160]	; 0xa0
   13228:	bcc	13b34 <export_data_element_to_ascii@@Base+0x1038>
   1322c:	b	13230 <export_data_element_to_ascii@@Base+0x734>
   13230:	ldr	r0, [sp, #160]	; 0xa0
   13234:	sub	r1, r0, #2
   13238:	cmp	r1, #4
   1323c:	bcc	13254 <export_data_element_to_ascii@@Base+0x758>
   13240:	b	13244 <export_data_element_to_ascii@@Base+0x748>
   13244:	ldr	r0, [sp, #160]	; 0xa0
   13248:	cmp	r0, #6
   1324c:	beq	1392c <export_data_element_to_ascii@@Base+0xe30>
   13250:	b	13b54 <export_data_element_to_ascii@@Base+0x1058>
   13254:	ldr	r0, [pc, #2408]	; 13bc4 <export_data_element_to_ascii@@Base+0x10c8>
   13258:	ldr	r0, [pc, r0]
   1325c:	add	r0, r0, #8
   13260:	ldr	r1, [fp, #-16]
   13264:	ldr	r2, [pc, #2612]	; 13ca0 <export_data_element_to_ascii@@Base+0x11a4>
   13268:	ldr	r2, [pc, r2]
   1326c:	add	r1, r2, r1, lsl #2
   13270:	add	r1, r1, #8
   13274:	ldr	r1, [r1]
   13278:	str	r0, [sp, #156]	; 0x9c
   1327c:	mov	r0, r1
   13280:	sub	r1, fp, #24
   13284:	bl	127d8 <coda_type_get_read_type@plt>
   13288:	cmp	r0, #0
   1328c:	beq	1329c <export_data_element_to_ascii@@Base+0x7a0>
   13290:	ldr	r0, [pc, #2352]	; 13bc8 <export_data_element_to_ascii@@Base+0x10cc>
   13294:	ldr	r0, [pc, r0]
   13298:	blx	r0
   1329c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   132a0:	add	r0, r0, #1
   132a4:	cmp	r0, #13
   132a8:	str	r0, [sp, #152]	; 0x98
   132ac:	bhi	13928 <export_data_element_to_ascii@@Base+0xe2c>
   132b0:	add	r0, pc, #8
   132b4:	ldr	r1, [sp, #152]	; 0x98
   132b8:	ldr	r2, [r0, r1, lsl #2]
   132bc:	add	pc, r0, r2
   132c0:	andeq	r0, r0, r8, asr #12
   132c4:	andeq	r0, r0, r4, lsr #9
   132c8:	andeq	r0, r0, r8, ror #9
   132cc:	andeq	r0, r0, r4, lsr #9
   132d0:	andeq	r0, r0, r8, ror #9
   132d4:	andeq	r0, r0, r4, lsr #9
   132d8:	andeq	r0, r0, r8, ror #9
   132dc:	andeq	r0, r0, ip, lsr #10
   132e0:	andeq	r0, r0, r0, lsl #11
   132e4:	ldrdeq	r0, [r0], -r4
   132e8:	ldrdeq	r0, [r0], -r4
   132ec:	andeq	r0, r0, r8, lsr r0
   132f0:	andeq	r0, r0, ip, lsr #1
   132f4:	andeq	r0, r0, ip, lsr #3
   132f8:	ldr	r0, [pc, #2436]	; 13c84 <export_data_element_to_ascii@@Base+0x1188>
   132fc:	ldr	r0, [pc, r0]
   13300:	add	r0, r0, #144	; 0x90
   13304:	sub	r1, fp, #25
   13308:	bl	1285c <coda_cursor_read_char@plt>
   1330c:	cmp	r0, #0
   13310:	beq	13320 <export_data_element_to_ascii@@Base+0x824>
   13314:	ldr	r0, [pc, #2412]	; 13c88 <export_data_element_to_ascii@@Base+0x118c>
   13318:	ldr	r0, [pc, r0]
   1331c:	blx	r0
   13320:	ldr	r0, [pc, #2404]	; 13c8c <export_data_element_to_ascii@@Base+0x1190>
   13324:	ldr	r0, [pc, r0]
   13328:	ldr	r0, [r0]
   1332c:	cmp	r0, #0
   13330:	beq	13350 <export_data_element_to_ascii@@Base+0x854>
   13334:	ldr	r0, [pc, #2392]	; 13c94 <export_data_element_to_ascii@@Base+0x1198>
   13338:	add	r1, pc, r0
   1333c:	ldr	r0, [fp, #-12]
   13340:	ldrb	r2, [fp, #-25]	; 0xffffffe7
   13344:	bl	12814 <fprintf@plt>
   13348:	str	r0, [sp, #148]	; 0x94
   1334c:	b	13368 <export_data_element_to_ascii@@Base+0x86c>
   13350:	ldr	r0, [pc, #2360]	; 13c90 <export_data_element_to_ascii@@Base+0x1194>
   13354:	add	r1, pc, r0
   13358:	ldr	r0, [fp, #-12]
   1335c:	ldrb	r2, [fp, #-25]	; 0xffffffe7
   13360:	bl	12814 <fprintf@plt>
   13364:	str	r0, [sp, #144]	; 0x90
   13368:	b	13928 <export_data_element_to_ascii@@Base+0xe2c>
   1336c:	ldr	r0, [pc, #2280]	; 13c5c <export_data_element_to_ascii@@Base+0x1160>
   13370:	ldr	r0, [pc, r0]
   13374:	add	r0, r0, #144	; 0x90
   13378:	sub	r1, fp, #32
   1337c:	bl	127e4 <coda_cursor_get_string_length@plt>
   13380:	cmp	r0, #0
   13384:	beq	13394 <export_data_element_to_ascii@@Base+0x898>
   13388:	ldr	r0, [pc, #2256]	; 13c60 <export_data_element_to_ascii@@Base+0x1164>
   1338c:	ldr	r0, [pc, r0]
   13390:	blx	r0
   13394:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13398:	add	r0, r0, #1
   1339c:	bl	12784 <malloc@plt>
   133a0:	str	r0, [fp, #-36]	; 0xffffffdc
   133a4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   133a8:	movw	lr, #0
   133ac:	cmp	r0, lr
   133b0:	bne	133e8 <export_data_element_to_ascii@@Base+0x8ec>
   133b4:	ldr	r0, [pc, #2220]	; 13c68 <export_data_element_to_ascii@@Base+0x116c>
   133b8:	add	r1, pc, r0
   133bc:	ldr	r0, [pc, #2216]	; 13c6c <export_data_element_to_ascii@@Base+0x1170>
   133c0:	add	r3, pc, r0
   133c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   133c8:	add	r2, r0, #1
   133cc:	mvn	r0, #0
   133d0:	movw	ip, #126	; 0x7e
   133d4:	str	ip, [sp]
   133d8:	bl	12610 <coda_set_error@plt>
   133dc:	ldr	r0, [pc, #2176]	; 13c64 <export_data_element_to_ascii@@Base+0x1168>
   133e0:	ldr	r0, [pc, r0]
   133e4:	blx	r0
   133e8:	ldr	r0, [pc, #2176]	; 13c70 <export_data_element_to_ascii@@Base+0x1174>
   133ec:	ldr	r0, [pc, r0]
   133f0:	add	r0, r0, #144	; 0x90
   133f4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   133f8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   133fc:	add	r2, r2, #1
   13400:	bl	127a8 <coda_cursor_read_string@plt>
   13404:	cmp	r0, #0
   13408:	beq	13418 <export_data_element_to_ascii@@Base+0x91c>
   1340c:	ldr	r0, [pc, #2144]	; 13c74 <export_data_element_to_ascii@@Base+0x1178>
   13410:	ldr	r0, [pc, r0]
   13414:	blx	r0
   13418:	ldr	r0, [pc, #2136]	; 13c78 <export_data_element_to_ascii@@Base+0x117c>
   1341c:	ldr	r0, [pc, r0]
   13420:	ldr	r0, [r0]
   13424:	cmp	r0, #0
   13428:	beq	13448 <export_data_element_to_ascii@@Base+0x94c>
   1342c:	ldr	r0, [pc, #2124]	; 13c80 <export_data_element_to_ascii@@Base+0x1184>
   13430:	add	r1, pc, r0
   13434:	ldr	r0, [fp, #-12]
   13438:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1343c:	bl	12814 <fprintf@plt>
   13440:	str	r0, [sp, #140]	; 0x8c
   13444:	b	13460 <export_data_element_to_ascii@@Base+0x964>
   13448:	ldr	r0, [pc, #2092]	; 13c7c <export_data_element_to_ascii@@Base+0x1180>
   1344c:	add	r1, pc, r0
   13450:	ldr	r0, [fp, #-12]
   13454:	ldr	r2, [fp, #-36]	; 0xffffffdc
   13458:	bl	12814 <fprintf@plt>
   1345c:	str	r0, [sp, #136]	; 0x88
   13460:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13464:	bl	12658 <free@plt>
   13468:	b	13928 <export_data_element_to_ascii@@Base+0xe2c>
   1346c:	ldr	r0, [pc, #1956]	; 13c18 <export_data_element_to_ascii@@Base+0x111c>
   13470:	ldr	r0, [pc, r0]
   13474:	add	r0, r0, #144	; 0x90
   13478:	sub	r1, fp, #48	; 0x30
   1347c:	bl	1294c <coda_cursor_get_bit_size@plt>
   13480:	cmp	r0, #0
   13484:	beq	13494 <export_data_element_to_ascii@@Base+0x998>
   13488:	ldr	r0, [pc, #1932]	; 13c1c <export_data_element_to_ascii@@Base+0x1120>
   1348c:	ldr	r0, [pc, r0]
   13490:	blx	r0
   13494:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13498:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1349c:	lsr	r2, r0, #3
   134a0:	orr	r2, r2, r1, lsl #29
   134a4:	asr	r1, r1, #3
   134a8:	and	r0, r0, #7
   134ac:	adds	r3, r2, #1
   134b0:	adc	ip, r1, #0
   134b4:	cmp	r0, #0
   134b8:	movne	r2, r3
   134bc:	cmp	r0, #0
   134c0:	movne	r1, ip
   134c4:	str	r2, [fp, #-56]	; 0xffffffc8
   134c8:	str	r1, [fp, #-52]	; 0xffffffcc
   134cc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   134d0:	bl	12784 <malloc@plt>
   134d4:	str	r0, [fp, #-60]	; 0xffffffc4
   134d8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   134dc:	movw	r1, #0
   134e0:	cmp	r0, r1
   134e4:	bne	13518 <export_data_element_to_ascii@@Base+0xa1c>
   134e8:	ldr	r0, [pc, #1844]	; 13c24 <export_data_element_to_ascii@@Base+0x1128>
   134ec:	add	r1, pc, r0
   134f0:	ldr	r0, [pc, #1840]	; 13c28 <export_data_element_to_ascii@@Base+0x112c>
   134f4:	add	r3, pc, r0
   134f8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   134fc:	mvn	r0, #0
   13500:	movw	ip, #163	; 0xa3
   13504:	str	ip, [sp]
   13508:	bl	12610 <coda_set_error@plt>
   1350c:	ldr	r0, [pc, #1804]	; 13c20 <export_data_element_to_ascii@@Base+0x1124>
   13510:	ldr	r0, [pc, r0]
   13514:	blx	r0
   13518:	ldr	r0, [pc, #1804]	; 13c2c <export_data_element_to_ascii@@Base+0x1130>
   1351c:	ldr	r0, [pc, r0]
   13520:	add	r0, r0, #144	; 0x90
   13524:	ldr	r1, [fp, #-60]	; 0xffffffc4
   13528:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1352c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   13530:	mov	ip, sp
   13534:	str	r3, [ip, #4]
   13538:	str	r2, [ip]
   1353c:	ldr	r2, [pc, #1888]	; 13ca4 <export_data_element_to_ascii@@Base+0x11a8>
   13540:	ldr	r2, [pc, r2]
   13544:	add	r2, r2, #144	; 0x90
   13548:	mov	r3, #0
   1354c:	str	r0, [sp, #132]	; 0x84
   13550:	mov	r0, r2
   13554:	mov	r2, r3
   13558:	bl	129dc <coda_cursor_read_bits@plt>
   1355c:	cmp	r0, #0
   13560:	beq	13570 <export_data_element_to_ascii@@Base+0xa74>
   13564:	ldr	r0, [pc, #1732]	; 13c30 <export_data_element_to_ascii@@Base+0x1134>
   13568:	ldr	r0, [pc, r0]
   1356c:	blx	r0
   13570:	movw	r0, #0
   13574:	str	r0, [fp, #-64]	; 0xffffffc0
   13578:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1357c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   13580:	ldr	r2, [fp, #-52]	; 0xffffffcc
   13584:	subs	r1, r0, r1
   13588:	rscs	r0, r2, r0, asr #31
   1358c:	str	r1, [sp, #128]	; 0x80
   13590:	str	r0, [sp, #124]	; 0x7c
   13594:	bge	13758 <export_data_element_to_ascii@@Base+0xc5c>
   13598:	b	1359c <export_data_element_to_ascii@@Base+0xaa0>
   1359c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   135a0:	ldr	r1, [fp, #-64]	; 0xffffffc0
   135a4:	ldrb	r0, [r0, r1]
   135a8:	strb	r0, [fp, #-65]	; 0xffffffbf
   135ac:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   135b0:	mov	r1, r0
   135b4:	cmp	r0, #7
   135b8:	str	r1, [sp, #120]	; 0x78
   135bc:	beq	13634 <export_data_element_to_ascii@@Base+0xb38>
   135c0:	b	135c4 <export_data_element_to_ascii@@Base+0xac8>
   135c4:	ldr	r0, [sp, #120]	; 0x78
   135c8:	cmp	r0, #8
   135cc:	beq	1364c <export_data_element_to_ascii@@Base+0xb50>
   135d0:	b	135d4 <export_data_element_to_ascii@@Base+0xad8>
   135d4:	ldr	r0, [sp, #120]	; 0x78
   135d8:	cmp	r0, #9
   135dc:	beq	13664 <export_data_element_to_ascii@@Base+0xb68>
   135e0:	b	135e4 <export_data_element_to_ascii@@Base+0xae8>
   135e4:	ldr	r0, [sp, #120]	; 0x78
   135e8:	cmp	r0, #10
   135ec:	beq	1367c <export_data_element_to_ascii@@Base+0xb80>
   135f0:	b	135f4 <export_data_element_to_ascii@@Base+0xaf8>
   135f4:	ldr	r0, [sp, #120]	; 0x78
   135f8:	cmp	r0, #11
   135fc:	beq	13694 <export_data_element_to_ascii@@Base+0xb98>
   13600:	b	13604 <export_data_element_to_ascii@@Base+0xb08>
   13604:	ldr	r0, [sp, #120]	; 0x78
   13608:	cmp	r0, #12
   1360c:	beq	136ac <export_data_element_to_ascii@@Base+0xbb0>
   13610:	b	13614 <export_data_element_to_ascii@@Base+0xb18>
   13614:	ldr	r0, [sp, #120]	; 0x78
   13618:	cmp	r0, #13
   1361c:	beq	136c4 <export_data_element_to_ascii@@Base+0xbc8>
   13620:	b	13624 <export_data_element_to_ascii@@Base+0xb28>
   13624:	ldr	r0, [sp, #120]	; 0x78
   13628:	cmp	r0, #92	; 0x5c
   1362c:	beq	136dc <export_data_element_to_ascii@@Base+0xbe0>
   13630:	b	136f4 <export_data_element_to_ascii@@Base+0xbf8>
   13634:	ldr	r0, [pc, #1556]	; 13c50 <export_data_element_to_ascii@@Base+0x1154>
   13638:	add	r1, pc, r0
   1363c:	ldr	r0, [fp, #-12]
   13640:	bl	12814 <fprintf@plt>
   13644:	str	r0, [sp, #116]	; 0x74
   13648:	b	13744 <export_data_element_to_ascii@@Base+0xc48>
   1364c:	ldr	r0, [pc, #1528]	; 13c4c <export_data_element_to_ascii@@Base+0x1150>
   13650:	add	r1, pc, r0
   13654:	ldr	r0, [fp, #-12]
   13658:	bl	12814 <fprintf@plt>
   1365c:	str	r0, [sp, #112]	; 0x70
   13660:	b	13744 <export_data_element_to_ascii@@Base+0xc48>
   13664:	ldr	r0, [pc, #1500]	; 13c48 <export_data_element_to_ascii@@Base+0x114c>
   13668:	add	r1, pc, r0
   1366c:	ldr	r0, [fp, #-12]
   13670:	bl	12814 <fprintf@plt>
   13674:	str	r0, [sp, #108]	; 0x6c
   13678:	b	13744 <export_data_element_to_ascii@@Base+0xc48>
   1367c:	ldr	r0, [pc, #1472]	; 13c44 <export_data_element_to_ascii@@Base+0x1148>
   13680:	add	r1, pc, r0
   13684:	ldr	r0, [fp, #-12]
   13688:	bl	12814 <fprintf@plt>
   1368c:	str	r0, [sp, #104]	; 0x68
   13690:	b	13744 <export_data_element_to_ascii@@Base+0xc48>
   13694:	ldr	r0, [pc, #1444]	; 13c40 <export_data_element_to_ascii@@Base+0x1144>
   13698:	add	r1, pc, r0
   1369c:	ldr	r0, [fp, #-12]
   136a0:	bl	12814 <fprintf@plt>
   136a4:	str	r0, [sp, #100]	; 0x64
   136a8:	b	13744 <export_data_element_to_ascii@@Base+0xc48>
   136ac:	ldr	r0, [pc, #1416]	; 13c3c <export_data_element_to_ascii@@Base+0x1140>
   136b0:	add	r1, pc, r0
   136b4:	ldr	r0, [fp, #-12]
   136b8:	bl	12814 <fprintf@plt>
   136bc:	str	r0, [sp, #96]	; 0x60
   136c0:	b	13744 <export_data_element_to_ascii@@Base+0xc48>
   136c4:	ldr	r0, [pc, #1388]	; 13c38 <export_data_element_to_ascii@@Base+0x113c>
   136c8:	add	r1, pc, r0
   136cc:	ldr	r0, [fp, #-12]
   136d0:	bl	12814 <fprintf@plt>
   136d4:	str	r0, [sp, #92]	; 0x5c
   136d8:	b	13744 <export_data_element_to_ascii@@Base+0xc48>
   136dc:	ldr	r0, [pc, #1360]	; 13c34 <export_data_element_to_ascii@@Base+0x1138>
   136e0:	add	r1, pc, r0
   136e4:	ldr	r0, [fp, #-12]
   136e8:	bl	12814 <fprintf@plt>
   136ec:	str	r0, [sp, #88]	; 0x58
   136f0:	b	13744 <export_data_element_to_ascii@@Base+0xc48>
   136f4:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   136f8:	cmp	r0, #32
   136fc:	blt	13728 <export_data_element_to_ascii@@Base+0xc2c>
   13700:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   13704:	cmp	r0, #126	; 0x7e
   13708:	bgt	13728 <export_data_element_to_ascii@@Base+0xc2c>
   1370c:	ldr	r0, [pc, #1348]	; 13c58 <export_data_element_to_ascii@@Base+0x115c>
   13710:	add	r1, pc, r0
   13714:	ldr	r0, [fp, #-12]
   13718:	ldrb	r2, [fp, #-65]	; 0xffffffbf
   1371c:	bl	12814 <fprintf@plt>
   13720:	str	r0, [sp, #84]	; 0x54
   13724:	b	13740 <export_data_element_to_ascii@@Base+0xc44>
   13728:	ldr	r0, [pc, #1316]	; 13c54 <export_data_element_to_ascii@@Base+0x1158>
   1372c:	add	r1, pc, r0
   13730:	ldr	r0, [fp, #-12]
   13734:	ldrb	r2, [fp, #-65]	; 0xffffffbf
   13738:	bl	12814 <fprintf@plt>
   1373c:	str	r0, [sp, #80]	; 0x50
   13740:	b	13744 <export_data_element_to_ascii@@Base+0xc48>
   13744:	b	13748 <export_data_element_to_ascii@@Base+0xc4c>
   13748:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1374c:	add	r0, r0, #1
   13750:	str	r0, [fp, #-64]	; 0xffffffc0
   13754:	b	13578 <export_data_element_to_ascii@@Base+0xa7c>
   13758:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1375c:	bl	12658 <free@plt>
   13760:	b	13928 <export_data_element_to_ascii@@Base+0xe2c>
   13764:	ldr	r0, [pc, #1184]	; 13c0c <export_data_element_to_ascii@@Base+0x1110>
   13768:	ldr	r0, [pc, r0]
   1376c:	add	r0, r0, #144	; 0x90
   13770:	sub	r1, fp, #72	; 0x48
   13774:	bl	12988 <coda_cursor_read_int32@plt>
   13778:	cmp	r0, #0
   1377c:	beq	1378c <export_data_element_to_ascii@@Base+0xc90>
   13780:	ldr	r0, [pc, #1160]	; 13c10 <export_data_element_to_ascii@@Base+0x1114>
   13784:	ldr	r0, [pc, r0]
   13788:	blx	r0
   1378c:	ldr	r0, [pc, #1152]	; 13c14 <export_data_element_to_ascii@@Base+0x1118>
   13790:	add	r1, pc, r0
   13794:	ldr	r0, [fp, #-12]
   13798:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1379c:	bl	12814 <fprintf@plt>
   137a0:	str	r0, [sp, #76]	; 0x4c
   137a4:	b	13928 <export_data_element_to_ascii@@Base+0xe2c>
   137a8:	ldr	r0, [pc, #1104]	; 13c00 <export_data_element_to_ascii@@Base+0x1104>
   137ac:	ldr	r0, [pc, r0]
   137b0:	add	r0, r0, #144	; 0x90
   137b4:	sub	r1, fp, #76	; 0x4c
   137b8:	bl	1267c <coda_cursor_read_uint32@plt>
   137bc:	cmp	r0, #0
   137c0:	beq	137d0 <export_data_element_to_ascii@@Base+0xcd4>
   137c4:	ldr	r0, [pc, #1080]	; 13c04 <export_data_element_to_ascii@@Base+0x1108>
   137c8:	ldr	r0, [pc, r0]
   137cc:	blx	r0
   137d0:	ldr	r0, [pc, #1072]	; 13c08 <export_data_element_to_ascii@@Base+0x110c>
   137d4:	add	r1, pc, r0
   137d8:	ldr	r0, [fp, #-12]
   137dc:	ldr	r2, [fp, #-76]	; 0xffffffb4
   137e0:	bl	12814 <fprintf@plt>
   137e4:	str	r0, [sp, #72]	; 0x48
   137e8:	b	13928 <export_data_element_to_ascii@@Base+0xe2c>
   137ec:	ldr	r0, [pc, #1024]	; 13bf4 <export_data_element_to_ascii@@Base+0x10f8>
   137f0:	ldr	r0, [pc, r0]
   137f4:	add	r0, r0, #144	; 0x90
   137f8:	sub	r1, fp, #88	; 0x58
   137fc:	bl	128f8 <coda_cursor_read_int64@plt>
   13800:	cmp	r0, #0
   13804:	beq	13814 <export_data_element_to_ascii@@Base+0xd18>
   13808:	ldr	r0, [pc, #1000]	; 13bf8 <export_data_element_to_ascii@@Base+0x10fc>
   1380c:	ldr	r0, [pc, r0]
   13810:	blx	r0
   13814:	sub	r2, fp, #109	; 0x6d
   13818:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1381c:	ldr	r1, [fp, #-84]	; 0xffffffac
   13820:	bl	129e8 <coda_str64@plt>
   13824:	ldr	r0, [pc, #976]	; 13bfc <export_data_element_to_ascii@@Base+0x1100>
   13828:	add	r1, pc, r0
   1382c:	sub	r2, fp, #109	; 0x6d
   13830:	ldr	r0, [fp, #-12]
   13834:	bl	12814 <fprintf@plt>
   13838:	str	r0, [sp, #68]	; 0x44
   1383c:	b	13928 <export_data_element_to_ascii@@Base+0xe2c>
   13840:	ldr	r0, [pc, #928]	; 13be8 <export_data_element_to_ascii@@Base+0x10ec>
   13844:	ldr	r0, [pc, r0]
   13848:	add	r0, r0, #144	; 0x90
   1384c:	sub	r1, fp, #120	; 0x78
   13850:	bl	127f0 <coda_cursor_read_uint64@plt>
   13854:	cmp	r0, #0
   13858:	beq	13868 <export_data_element_to_ascii@@Base+0xd6c>
   1385c:	ldr	r0, [pc, #904]	; 13bec <export_data_element_to_ascii@@Base+0x10f0>
   13860:	ldr	r0, [pc, r0]
   13864:	blx	r0
   13868:	sub	r2, fp, #141	; 0x8d
   1386c:	ldr	r0, [fp, #-120]	; 0xffffff88
   13870:	ldr	r1, [fp, #-116]	; 0xffffff8c
   13874:	bl	1264c <coda_str64u@plt>
   13878:	ldr	r0, [pc, #880]	; 13bf0 <export_data_element_to_ascii@@Base+0x10f4>
   1387c:	add	r1, pc, r0
   13880:	sub	r2, fp, #141	; 0x8d
   13884:	ldr	r0, [fp, #-12]
   13888:	bl	12814 <fprintf@plt>
   1388c:	str	r0, [sp, #64]	; 0x40
   13890:	b	13928 <export_data_element_to_ascii@@Base+0xe2c>
   13894:	ldr	r0, [pc, #828]	; 13bd8 <export_data_element_to_ascii@@Base+0x10dc>
   13898:	ldr	r0, [pc, r0]
   1389c:	add	r0, r0, #144	; 0x90
   138a0:	sub	r1, fp, #152	; 0x98
   138a4:	bl	127fc <coda_cursor_read_double@plt>
   138a8:	cmp	r0, #0
   138ac:	beq	138bc <export_data_element_to_ascii@@Base+0xdc0>
   138b0:	ldr	r0, [pc, #804]	; 13bdc <export_data_element_to_ascii@@Base+0x10e0>
   138b4:	ldr	r0, [pc, r0]
   138b8:	blx	r0
   138bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   138c0:	cmp	r0, #8
   138c4:	bne	138e8 <export_data_element_to_ascii@@Base+0xdec>
   138c8:	ldr	r0, [pc, #788]	; 13be4 <export_data_element_to_ascii@@Base+0x10e8>
   138cc:	add	r1, pc, r0
   138d0:	ldr	r0, [fp, #-12]
   138d4:	vldr	d16, [fp, #-152]	; 0xffffff68
   138d8:	vmov	r2, r3, d16
   138dc:	bl	12814 <fprintf@plt>
   138e0:	str	r0, [sp, #60]	; 0x3c
   138e4:	b	13904 <export_data_element_to_ascii@@Base+0xe08>
   138e8:	ldr	r0, [pc, #752]	; 13be0 <export_data_element_to_ascii@@Base+0x10e4>
   138ec:	add	r1, pc, r0
   138f0:	ldr	r0, [fp, #-12]
   138f4:	vldr	d16, [fp, #-152]	; 0xffffff68
   138f8:	vmov	r2, r3, d16
   138fc:	bl	12814 <fprintf@plt>
   13900:	str	r0, [sp, #56]	; 0x38
   13904:	b	13928 <export_data_element_to_ascii@@Base+0xe2c>
   13908:	ldr	r0, [pc, #700]	; 13bcc <export_data_element_to_ascii@@Base+0x10d0>
   1390c:	add	r0, pc, r0
   13910:	ldr	r1, [pc, #696]	; 13bd0 <export_data_element_to_ascii@@Base+0x10d4>
   13914:	add	r1, pc, r1
   13918:	ldr	r2, [pc, #692]	; 13bd4 <export_data_element_to_ascii@@Base+0x10d8>
   1391c:	add	r3, pc, r2
   13920:	movw	r2, #294	; 0x126
   13924:	bl	129f4 <__assert_fail@plt>
   13928:	b	13b54 <export_data_element_to_ascii@@Base+0x1058>
   1392c:	ldr	r0, [pc, #596]	; 13b88 <export_data_element_to_ascii@@Base+0x108c>
   13930:	ldr	r0, [pc, r0]
   13934:	add	r0, r0, #8
   13938:	ldr	r1, [fp, #-16]
   1393c:	ldr	r2, [pc, #868]	; 13ca8 <export_data_element_to_ascii@@Base+0x11ac>
   13940:	ldr	r2, [pc, r2]
   13944:	add	r1, r2, r1, lsl #2
   13948:	add	r1, r1, #8
   1394c:	ldr	r1, [r1]
   13950:	str	r0, [sp, #52]	; 0x34
   13954:	mov	r0, r1
   13958:	sub	r1, fp, #156	; 0x9c
   1395c:	bl	12880 <coda_type_get_special_type@plt>
   13960:	cmp	r0, #0
   13964:	beq	13974 <export_data_element_to_ascii@@Base+0xe78>
   13968:	ldr	r0, [pc, #540]	; 13b8c <export_data_element_to_ascii@@Base+0x1090>
   1396c:	ldr	r0, [pc, r0]
   13970:	blx	r0
   13974:	ldr	r0, [fp, #-156]	; 0xffffff64
   13978:	cmp	r0, #0
   1397c:	str	r0, [sp, #48]	; 0x30
   13980:	beq	139ac <export_data_element_to_ascii@@Base+0xeb0>
   13984:	b	13988 <export_data_element_to_ascii@@Base+0xe8c>
   13988:	ldr	r0, [sp, #48]	; 0x30
   1398c:	sub	r1, r0, #1
   13990:	cmp	r1, #2
   13994:	bcc	139b0 <export_data_element_to_ascii@@Base+0xeb4>
   13998:	b	1399c <export_data_element_to_ascii@@Base+0xea0>
   1399c:	ldr	r0, [sp, #48]	; 0x30
   139a0:	cmp	r0, #3
   139a4:	beq	13ac8 <export_data_element_to_ascii@@Base+0xfcc>
   139a8:	b	13b30 <export_data_element_to_ascii@@Base+0x1034>
   139ac:	b	13b30 <export_data_element_to_ascii@@Base+0x1034>
   139b0:	ldr	r0, [pc, #488]	; 13ba0 <export_data_element_to_ascii@@Base+0x10a4>
   139b4:	ldr	r0, [pc, r0]
   139b8:	add	r0, r0, #144	; 0x90
   139bc:	sub	r1, fp, #168	; 0xa8
   139c0:	bl	127fc <coda_cursor_read_double@plt>
   139c4:	cmp	r0, #0
   139c8:	beq	139d8 <export_data_element_to_ascii@@Base+0xedc>
   139cc:	ldr	r0, [pc, #464]	; 13ba4 <export_data_element_to_ascii@@Base+0x10a8>
   139d0:	ldr	r0, [pc, r0]
   139d4:	blx	r0
   139d8:	ldr	r0, [fp, #-156]	; 0xffffff64
   139dc:	cmp	r0, #2
   139e0:	bne	13aa8 <export_data_element_to_ascii@@Base+0xfac>
   139e4:	ldr	r0, [pc, #444]	; 13ba8 <export_data_element_to_ascii@@Base+0x10ac>
   139e8:	ldr	r0, [pc, r0]
   139ec:	ldr	r0, [r0]
   139f0:	cmp	r0, #0
   139f4:	beq	13aa8 <export_data_element_to_ascii@@Base+0xfac>
   139f8:	vldr	d0, [fp, #-168]	; 0xffffff58
   139fc:	bl	12808 <coda_isNaN@plt>
   13a00:	cmp	r0, #0
   13a04:	bne	13a18 <export_data_element_to_ascii@@Base+0xf1c>
   13a08:	vldr	d0, [fp, #-168]	; 0xffffff58
   13a0c:	bl	126b8 <coda_isInf@plt>
   13a10:	cmp	r0, #0
   13a14:	beq	13a30 <export_data_element_to_ascii@@Base+0xf34>
   13a18:	add	r0, sp, #189	; 0xbd
   13a1c:	ldr	r1, [pc, #648]	; 13cac <export_data_element_to_ascii@@Base+0x11b0>
   13a20:	add	r1, pc, r1
   13a24:	bl	12748 <strcpy@plt>
   13a28:	str	r0, [sp, #44]	; 0x2c
   13a2c:	b	13a5c <export_data_element_to_ascii@@Base+0xf60>
   13a30:	ldr	r0, [pc, #376]	; 13bb0 <export_data_element_to_ascii@@Base+0x10b4>
   13a34:	add	r0, pc, r0
   13a38:	add	r1, sp, #189	; 0xbd
   13a3c:	vldr	d0, [fp, #-168]	; 0xffffff58
   13a40:	bl	12634 <coda_time_double_to_string@plt>
   13a44:	cmp	r0, #0
   13a48:	beq	13a58 <export_data_element_to_ascii@@Base+0xf5c>
   13a4c:	ldr	r0, [pc, #352]	; 13bb4 <export_data_element_to_ascii@@Base+0x10b8>
   13a50:	ldr	r0, [pc, r0]
   13a54:	blx	r0
   13a58:	b	13a5c <export_data_element_to_ascii@@Base+0xf60>
   13a5c:	ldr	r0, [pc, #340]	; 13bb8 <export_data_element_to_ascii@@Base+0x10bc>
   13a60:	ldr	r0, [pc, r0]
   13a64:	ldr	r0, [r0]
   13a68:	cmp	r0, #0
   13a6c:	beq	13a8c <export_data_element_to_ascii@@Base+0xf90>
   13a70:	ldr	r0, [pc, #328]	; 13bc0 <export_data_element_to_ascii@@Base+0x10c4>
   13a74:	add	r1, pc, r0
   13a78:	add	r2, sp, #189	; 0xbd
   13a7c:	ldr	r0, [fp, #-12]
   13a80:	bl	12814 <fprintf@plt>
   13a84:	str	r0, [sp, #40]	; 0x28
   13a88:	b	13aa4 <export_data_element_to_ascii@@Base+0xfa8>
   13a8c:	ldr	r0, [pc, #296]	; 13bbc <export_data_element_to_ascii@@Base+0x10c0>
   13a90:	add	r1, pc, r0
   13a94:	add	r2, sp, #189	; 0xbd
   13a98:	ldr	r0, [fp, #-12]
   13a9c:	bl	12814 <fprintf@plt>
   13aa0:	str	r0, [sp, #36]	; 0x24
   13aa4:	b	13ac4 <export_data_element_to_ascii@@Base+0xfc8>
   13aa8:	ldr	r0, [pc, #252]	; 13bac <export_data_element_to_ascii@@Base+0x10b0>
   13aac:	add	r1, pc, r0
   13ab0:	ldr	r0, [fp, #-12]
   13ab4:	vldr	d16, [fp, #-168]	; 0xffffff58
   13ab8:	vmov	r2, r3, d16
   13abc:	bl	12814 <fprintf@plt>
   13ac0:	str	r0, [sp, #32]
   13ac4:	b	13b30 <export_data_element_to_ascii@@Base+0x1034>
   13ac8:	ldr	r0, [pc, #192]	; 13b90 <export_data_element_to_ascii@@Base+0x1094>
   13acc:	ldr	r0, [pc, r0]
   13ad0:	add	r0, r0, #144	; 0x90
   13ad4:	add	r1, sp, #168	; 0xa8
   13ad8:	bl	12928 <coda_cursor_read_complex_double_pair@plt>
   13adc:	cmp	r0, #0
   13ae0:	beq	13af0 <export_data_element_to_ascii@@Base+0xff4>
   13ae4:	ldr	r0, [pc, #168]	; 13b94 <export_data_element_to_ascii@@Base+0x1098>
   13ae8:	ldr	r0, [pc, r0]
   13aec:	blx	r0
   13af0:	ldr	r0, [pc, #160]	; 13b98 <export_data_element_to_ascii@@Base+0x109c>
   13af4:	add	r1, pc, r0
   13af8:	ldr	r0, [pc, #156]	; 13b9c <export_data_element_to_ascii@@Base+0x10a0>
   13afc:	ldr	r0, [pc, r0]
   13b00:	ldr	r2, [fp, #-12]
   13b04:	vldr	d16, [sp, #168]	; 0xa8
   13b08:	ldr	r0, [r0]
   13b0c:	vldr	d17, [sp, #176]	; 0xb0
   13b10:	str	r0, [sp, #28]
   13b14:	mov	r0, r2
   13b18:	vmov	r2, r3, d16
   13b1c:	ldr	ip, [sp, #28]
   13b20:	str	ip, [sp]
   13b24:	vstr	d17, [sp, #8]
   13b28:	bl	12814 <fprintf@plt>
   13b2c:	str	r0, [sp, #24]
   13b30:	b	13b54 <export_data_element_to_ascii@@Base+0x1058>
   13b34:	ldr	r0, [pc, #64]	; 13b7c <export_data_element_to_ascii@@Base+0x1080>
   13b38:	add	r0, pc, r0
   13b3c:	ldr	r1, [pc, #60]	; 13b80 <export_data_element_to_ascii@@Base+0x1084>
   13b40:	add	r1, pc, r1
   13b44:	ldr	r2, [pc, #56]	; 13b84 <export_data_element_to_ascii@@Base+0x1088>
   13b48:	add	r3, pc, r2
   13b4c:	movw	r2, #368	; 0x170
   13b50:	bl	129f4 <__assert_fail@plt>
   13b54:	ldr	r0, [pc, #316]	; 13c98 <export_data_element_to_ascii@@Base+0x119c>
   13b58:	add	r1, pc, r0
   13b5c:	ldr	r0, [fp, #-12]
   13b60:	bl	12814 <fprintf@plt>
   13b64:	str	r0, [sp, #20]
   13b68:	sub	sp, fp, #8
   13b6c:	pop	{r4, r5, fp, pc}
   13b70:	andeq	lr, r1, r4, lsl r0
   13b74:	ldrdeq	sp, [r1], -r4
   13b78:	andeq	sp, r1, r4, asr #31
   13b7c:	ldrdeq	fp, [r0], -fp	; <UNPREDICTABLE>
   13b80:	andeq	fp, r0, r5, asr #7
   13b84:	andeq	fp, r0, ip, asr #8
   13b88:	andeq	sp, r1, ip, ror r8
   13b8c:	andeq	sp, r1, ip, ror #16
   13b90:	andeq	sp, r1, r0, ror #13
   13b94:	strdeq	sp, [r1], -r0
   13b98:	strdeq	fp, [r0], -r9
   13b9c:	andeq	sp, r1, r0, asr #13
   13ba0:	strdeq	sp, [r1], -r8
   13ba4:	andeq	sp, r1, r8, lsl #16
   13ba8:			; <UNDEFINED> instruction: 0x0001d7b4
   13bac:	andeq	fp, r0, r2, ror #9
   13bb0:	muleq	r0, lr, r5
   13bb4:	andeq	sp, r1, r8, lsl #15
   13bb8:	muleq	r1, ip, r7
   13bbc:	andeq	fp, r0, r6, ror ip
   13bc0:	ldrdeq	fp, [r0], -r4
   13bc4:	andeq	sp, r1, r4, asr pc
   13bc8:	andeq	sp, r1, r4, asr #30
   13bcc:	andeq	fp, r0, r7, lsl #16
   13bd0:	strdeq	fp, [r0], -r1
   13bd4:	andeq	fp, r0, r8, ror r6
   13bd8:	andeq	sp, r1, r4, lsl r9
   13bdc:	andeq	sp, r1, r4, lsr #18
   13be0:	andeq	fp, r0, r2, lsr #13
   13be4:			; <UNDEFINED> instruction: 0x0000b6bd
   13be8:	andeq	sp, r1, r8, ror #18
   13bec:	andeq	sp, r1, r8, ror r9
   13bf0:	andeq	fp, r0, sl, lsl #29
   13bf4:			; <UNDEFINED> instruction: 0x0001d9bc
   13bf8:	andeq	sp, r1, ip, asr #19
   13bfc:	ldrdeq	fp, [r0], -lr
   13c00:	andeq	sp, r1, r0, lsl #20
   13c04:	andeq	sp, r1, r0, lsl sl
   13c08:			; <UNDEFINED> instruction: 0x0000b7b1
   13c0c:	andeq	sp, r1, r4, asr #20
   13c10:	andeq	sp, r1, r4, asr sl
   13c14:			; <UNDEFINED> instruction: 0x0000beb4
   13c18:	andeq	sp, r1, ip, lsr sp
   13c1c:	andeq	sp, r1, ip, asr #26
   13c20:	andeq	sp, r1, r8, asr #25
   13c24:	andeq	fp, r0, r4, ror #19
   13c28:	andeq	fp, r0, r1, lsl sl
   13c2c:	muleq	r1, r0, ip
   13c30:	andeq	sp, r1, r0, ror ip
   13c34:	muleq	r0, ip, r8
   13c38:			; <UNDEFINED> instruction: 0x0000b8b1
   13c3c:	andeq	fp, r0, r6, asr #17
   13c40:	ldrdeq	fp, [r0], -fp	; <UNPREDICTABLE>
   13c44:	strdeq	fp, [r0], -r0
   13c48:	andeq	fp, r0, r5, lsl #18
   13c4c:	andeq	fp, r0, sl, lsl r9
   13c50:	andeq	fp, r0, pc, lsr #18
   13c54:	andeq	fp, r0, r3, asr r8
   13c58:			; <UNDEFINED> instruction: 0x0000b7bd
   13c5c:	andeq	sp, r1, ip, lsr lr
   13c60:	andeq	sp, r1, ip, asr #28
   13c64:	strdeq	sp, [r1], -r8
   13c68:	andeq	fp, r0, r8, lsl fp
   13c6c:	andeq	fp, r0, r5, asr #22
   13c70:	andeq	sp, r1, r0, asr #27
   13c74:	andeq	sp, r1, r8, asr #27
   13c78:	andeq	sp, r1, r0, ror #27
   13c7c:			; <UNDEFINED> instruction: 0x0000c2ba
   13c80:	andeq	ip, r0, r8, lsl r3
   13c84:			; <UNDEFINED> instruction: 0x0001deb0
   13c88:	andeq	sp, r1, r0, asr #29
   13c8c:	ldrdeq	sp, [r1], -r8
   13c90:	andeq	fp, r0, r9, ror fp
   13c94:	muleq	r0, r0, fp
   13c98:	ldrdeq	ip, [r0], -r3
   13c9c:	andeq	sp, r1, r4, asr #31
   13ca0:	andeq	sp, r1, r4, asr #30
   13ca4:	andeq	sp, r1, ip, ror #24
   13ca8:	andeq	sp, r1, ip, ror #16
   13cac:	muleq	r0, r7, r5
   13cb0:	push	{fp, lr}
   13cb4:	mov	fp, sp
   13cb8:	sub	sp, sp, #32
   13cbc:	str	r0, [fp, #-4]
   13cc0:	movw	r0, #0
   13cc4:	str	r0, [fp, #-8]
   13cc8:	str	r0, [fp, #-12]
   13ccc:	ldr	r0, [pc, #292]	; 13df8 <export_data_element_to_ascii@@Base+0x12fc>
   13cd0:	ldr	r0, [pc, r0]
   13cd4:	ldr	r1, [fp, #-12]
   13cd8:	ldr	r0, [r0, #136]	; 0x88
   13cdc:	cmp	r1, r0
   13ce0:	bge	13df0 <export_data_element_to_ascii@@Base+0x12f4>
   13ce4:	ldr	r0, [pc, #272]	; 13dfc <export_data_element_to_ascii@@Base+0x1300>
   13ce8:	ldr	r0, [pc, r0]
   13cec:	add	r0, r0, #8
   13cf0:	ldr	r1, [fp, #-12]
   13cf4:	ldr	r2, [pc, #276]	; 13e10 <export_data_element_to_ascii@@Base+0x1314>
   13cf8:	ldr	r2, [pc, r2]
   13cfc:	add	r1, r2, r1, lsl #2
   13d00:	add	r1, r1, #8
   13d04:	ldr	r1, [r1]
   13d08:	str	r0, [sp, #8]
   13d0c:	mov	r0, r1
   13d10:	add	r1, sp, #16
   13d14:	bl	12a00 <coda_type_get_class@plt>
   13d18:	cmp	r0, #0
   13d1c:	beq	13d2c <export_data_element_to_ascii@@Base+0x1230>
   13d20:	ldr	r0, [pc, #216]	; 13e00 <export_data_element_to_ascii@@Base+0x1304>
   13d24:	ldr	r0, [pc, r0]
   13d28:	blx	r0
   13d2c:	ldr	r0, [sp, #16]
   13d30:	cmp	r0, #1
   13d34:	bne	13ddc <export_data_element_to_ascii@@Base+0x12e0>
   13d38:	movw	r0, #0
   13d3c:	str	r0, [sp, #12]
   13d40:	ldr	r0, [pc, #188]	; 13e04 <export_data_element_to_ascii@@Base+0x1308>
   13d44:	ldr	r0, [pc, r0]
   13d48:	add	r0, r0, #800	; 0x320
   13d4c:	ldr	r1, [sp, #12]
   13d50:	ldr	r2, [fp, #-8]
   13d54:	movw	r3, #80	; 0x50
   13d58:	mul	r2, r2, r3
   13d5c:	add	r0, r0, r2
   13d60:	ldr	r0, [r0, #4]
   13d64:	cmp	r1, r0
   13d68:	bge	13dd0 <export_data_element_to_ascii@@Base+0x12d4>
   13d6c:	ldr	r0, [pc, #148]	; 13e08 <export_data_element_to_ascii@@Base+0x130c>
   13d70:	add	r1, pc, r0
   13d74:	ldr	r0, [pc, #144]	; 13e0c <export_data_element_to_ascii@@Base+0x1310>
   13d78:	ldr	r0, [pc, r0]
   13d7c:	ldr	r2, [fp, #-4]
   13d80:	ldr	r3, [fp, #-8]
   13d84:	add	r3, r3, r3, lsl #2
   13d88:	ldr	ip, [pc, #132]	; 13e14 <export_data_element_to_ascii@@Base+0x1318>
   13d8c:	ldr	ip, [pc, ip]
   13d90:	add	r3, ip, r3, lsl #4
   13d94:	add	r3, r3, #848	; 0x350
   13d98:	ldr	ip, [sp, #12]
   13d9c:	add	r3, r3, ip, lsl #2
   13da0:	ldr	r3, [r3]
   13da4:	ldr	r0, [r0]
   13da8:	str	r0, [sp, #4]
   13dac:	mov	r0, r2
   13db0:	mov	r2, r3
   13db4:	ldr	r3, [sp, #4]
   13db8:	bl	12814 <fprintf@plt>
   13dbc:	str	r0, [sp]
   13dc0:	ldr	r0, [sp, #12]
   13dc4:	add	r0, r0, #1
   13dc8:	str	r0, [sp, #12]
   13dcc:	b	13d40 <export_data_element_to_ascii@@Base+0x1244>
   13dd0:	ldr	r0, [fp, #-8]
   13dd4:	add	r0, r0, #1
   13dd8:	str	r0, [fp, #-8]
   13ddc:	b	13de0 <export_data_element_to_ascii@@Base+0x12e4>
   13de0:	ldr	r0, [fp, #-12]
   13de4:	add	r0, r0, #1
   13de8:	str	r0, [fp, #-12]
   13dec:	b	13ccc <export_data_element_to_ascii@@Base+0x11d0>
   13df0:	mov	sp, fp
   13df4:	pop	{fp, pc}
   13df8:	ldrdeq	sp, [r1], -ip
   13dfc:	andeq	sp, r1, r4, asr #9
   13e00:			; <UNDEFINED> instruction: 0x0001d4b4
   13e04:	andeq	sp, r1, r8, ror #8
   13e08:	andeq	fp, r0, r4, lsl #5
   13e0c:	andeq	sp, r1, r4, asr #8
   13e10:			; <UNDEFINED> instruction: 0x0001d4b4
   13e14:	andeq	sp, r1, r0, lsr #8

00013e18 <print_debug_data@@Base>:
   13e18:	push	{r4, r5, fp, lr}
   13e1c:	add	fp, sp, #8
   13e20:	sub	sp, sp, #568	; 0x238
   13e24:	str	r0, [fp, #-12]
   13e28:	str	r1, [fp, #-16]
   13e2c:	str	r2, [fp, #-20]	; 0xffffffec
   13e30:	ldr	r0, [fp, #-12]
   13e34:	movw	r1, #0
   13e38:	cmp	r0, r1
   13e3c:	bne	13e5c <print_debug_data@@Base+0x44>
   13e40:	ldr	r0, [pc, #492]	; 14034 <print_debug_data@@Base+0x21c>
   13e44:	ldr	r0, [pc, r0]
   13e48:	ldr	r0, [r0]
   13e4c:	sub	r1, fp, #24
   13e50:	bl	1261c <coda_open@plt>
   13e54:	str	r0, [sp, #24]
   13e58:	b	13e84 <print_debug_data@@Base+0x6c>
   13e5c:	ldr	r0, [pc, #460]	; 14030 <print_debug_data@@Base+0x218>
   13e60:	ldr	r0, [pc, r0]
   13e64:	ldr	r0, [r0]
   13e68:	ldr	r1, [fp, #-12]
   13e6c:	ldr	r2, [fp, #-16]
   13e70:	ldr	r3, [fp, #-20]	; 0xffffffec
   13e74:	sub	ip, fp, #24
   13e78:	str	ip, [sp]
   13e7c:	bl	1282c <coda_open_as@plt>
   13e80:	str	r0, [sp, #24]
   13e84:	ldr	r0, [sp, #24]
   13e88:	cmp	r0, #0
   13e8c:	beq	13f0c <print_debug_data@@Base+0xf4>
   13e90:	bl	129ac <coda_get_errno@plt>
   13e94:	ldr	r0, [r0]
   13e98:	cmn	r0, #21
   13e9c:	bne	13f0c <print_debug_data@@Base+0xf4>
   13ea0:	movw	r0, #0
   13ea4:	bl	12664 <coda_set_option_use_mmap@plt>
   13ea8:	ldr	lr, [fp, #-12]
   13eac:	movw	r1, #0
   13eb0:	cmp	lr, r1
   13eb4:	str	r0, [sp, #20]
   13eb8:	bne	13ed8 <print_debug_data@@Base+0xc0>
   13ebc:	ldr	r0, [pc, #376]	; 1403c <print_debug_data@@Base+0x224>
   13ec0:	ldr	r0, [pc, r0]
   13ec4:	ldr	r0, [r0]
   13ec8:	sub	r1, fp, #24
   13ecc:	bl	1261c <coda_open@plt>
   13ed0:	str	r0, [sp, #24]
   13ed4:	b	13f00 <print_debug_data@@Base+0xe8>
   13ed8:	ldr	r0, [pc, #344]	; 14038 <print_debug_data@@Base+0x220>
   13edc:	ldr	r0, [pc, r0]
   13ee0:	ldr	r0, [r0]
   13ee4:	ldr	r1, [fp, #-12]
   13ee8:	ldr	r2, [fp, #-16]
   13eec:	ldr	r3, [fp, #-20]	; 0xffffffec
   13ef0:	sub	ip, fp, #24
   13ef4:	str	ip, [sp]
   13ef8:	bl	1282c <coda_open_as@plt>
   13efc:	str	r0, [sp, #24]
   13f00:	movw	r0, #1
   13f04:	bl	12664 <coda_set_option_use_mmap@plt>
   13f08:	str	r0, [sp, #16]
   13f0c:	ldr	r0, [sp, #24]
   13f10:	cmp	r0, #0
   13f14:	beq	13f24 <print_debug_data@@Base+0x10c>
   13f18:	ldr	r0, [pc, #288]	; 14040 <print_debug_data@@Base+0x228>
   13f1c:	ldr	r0, [pc, r0]
   13f20:	blx	r0
   13f24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13f28:	add	r1, sp, #28
   13f2c:	bl	12700 <coda_get_product_format@plt>
   13f30:	cmp	r0, #0
   13f34:	beq	13f44 <print_debug_data@@Base+0x12c>
   13f38:	ldr	r0, [pc, #260]	; 14044 <print_debug_data@@Base+0x22c>
   13f3c:	ldr	r0, [pc, r0]
   13f40:	blx	r0
   13f44:	ldr	r0, [sp, #28]
   13f48:	cmp	r0, #0
   13f4c:	movw	r0, #1
   13f50:	str	r0, [sp, #12]
   13f54:	beq	13f80 <print_debug_data@@Base+0x168>
   13f58:	ldr	r0, [sp, #28]
   13f5c:	cmp	r0, #1
   13f60:	movw	r0, #1
   13f64:	str	r0, [sp, #12]
   13f68:	beq	13f80 <print_debug_data@@Base+0x168>
   13f6c:	ldr	r0, [sp, #28]
   13f70:	cmp	r0, #2
   13f74:	movw	r0, #0
   13f78:	moveq	r0, #1
   13f7c:	str	r0, [sp, #12]
   13f80:	ldr	r0, [sp, #12]
   13f84:	ldr	r1, [pc, #188]	; 14048 <print_debug_data@@Base+0x230>
   13f88:	add	r1, pc, r1
   13f8c:	and	r0, r0, #1
   13f90:	str	r0, [r1]
   13f94:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13f98:	add	r0, sp, #32
   13f9c:	bl	1273c <coda_cursor_set_product@plt>
   13fa0:	cmp	r0, #0
   13fa4:	beq	13fb4 <print_debug_data@@Base+0x19c>
   13fa8:	ldr	r0, [pc, #156]	; 1404c <print_debug_data@@Base+0x234>
   13fac:	ldr	r0, [pc, r0]
   13fb0:	blx	r0
   13fb4:	ldr	r0, [pc, #148]	; 14050 <print_debug_data@@Base+0x238>
   13fb8:	ldr	r0, [pc, r0]
   13fbc:	ldr	r0, [r0]
   13fc0:	movw	r1, #0
   13fc4:	cmp	r0, r1
   13fc8:	beq	14000 <print_debug_data@@Base+0x1e8>
   13fcc:	ldr	r0, [pc, #128]	; 14054 <print_debug_data@@Base+0x23c>
   13fd0:	ldr	r0, [pc, r0]
   13fd4:	ldr	r1, [r0]
   13fd8:	add	r0, sp, #32
   13fdc:	bl	12910 <coda_cursor_goto@plt>
   13fe0:	str	r0, [sp, #24]
   13fe4:	ldr	r0, [sp, #24]
   13fe8:	cmp	r0, #0
   13fec:	beq	13ffc <print_debug_data@@Base+0x1e4>
   13ff0:	ldr	r0, [pc, #96]	; 14058 <print_debug_data@@Base+0x240>
   13ff4:	ldr	r0, [pc, r0]
   13ff8:	blx	r0
   13ffc:	b	14000 <print_debug_data@@Base+0x1e8>
   14000:	movw	r0, #0
   14004:	bl	125c8 <coda_set_option_perform_boundary_checks@plt>
   14008:	add	lr, sp, #32
   1400c:	str	r0, [sp, #8]
   14010:	mov	r0, lr
   14014:	movw	r1, #0
   14018:	bl	1405c <print_debug_data@@Base+0x244>
   1401c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14020:	bl	128ec <coda_close@plt>
   14024:	str	r0, [sp, #4]
   14028:	sub	sp, fp, #8
   1402c:	pop	{r4, r5, fp, pc}
   14030:	andeq	sp, r1, ip, asr #6
   14034:	andeq	sp, r1, r8, ror #6
   14038:	ldrdeq	sp, [r1], -r0
   1403c:	andeq	sp, r1, ip, ror #5
   14040:			; <UNDEFINED> instruction: 0x0001d2bc
   14044:	muleq	r1, ip, r2
   14048:	andeq	sp, r1, r4, lsl #5
   1404c:	andeq	sp, r1, ip, lsr #4
   14050:	andeq	sp, r1, r8, lsr #4
   14054:	andeq	sp, r1, r0, lsl r2
   14058:	andeq	sp, r1, r4, ror #3
   1405c:	push	{r4, r5, fp, lr}
   14060:	add	fp, sp, #8
   14064:	sub	sp, sp, #1184	; 0x4a0
   14068:	str	r0, [fp, #-12]
   1406c:	str	r1, [fp, #-16]
   14070:	ldr	r0, [fp, #-12]
   14074:	sub	r1, fp, #24
   14078:	bl	126dc <coda_cursor_has_attributes@plt>
   1407c:	cmp	r0, #0
   14080:	beq	14090 <print_debug_data@@Base+0x278>
   14084:	ldr	r0, [pc, #3924]	; 14fe0 <print_debug_data@@Base+0x11c8>
   14088:	ldr	r0, [pc, r0]
   1408c:	blx	r0
   14090:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14094:	cmp	r0, #0
   14098:	beq	14114 <print_debug_data@@Base+0x2fc>
   1409c:	ldr	r0, [fp, #-12]
   140a0:	bl	12850 <coda_cursor_goto_attributes@plt>
   140a4:	cmp	r0, #0
   140a8:	beq	140b8 <print_debug_data@@Base+0x2a0>
   140ac:	ldr	r0, [pc, #3888]	; 14fe4 <print_debug_data@@Base+0x11cc>
   140b0:	ldr	r0, [pc, r0]
   140b4:	blx	r0
   140b8:	ldr	r0, [pc, #3888]	; 14ff0 <print_debug_data@@Base+0x11d8>
   140bc:	add	r0, pc, r0
   140c0:	bl	15170 <print_debug_data@@Base+0x1358>
   140c4:	ldr	lr, [pc, #3872]	; 14fec <print_debug_data@@Base+0x11d4>
   140c8:	add	lr, pc, lr
   140cc:	ldr	r1, [lr]
   140d0:	add	r1, r1, #1
   140d4:	str	r1, [lr]
   140d8:	ldr	r1, [fp, #-12]
   140dc:	ldr	lr, [fp, #-16]
   140e0:	str	r0, [sp, #220]	; 0xdc
   140e4:	mov	r0, r1
   140e8:	mov	r1, lr
   140ec:	bl	1405c <print_debug_data@@Base+0x244>
   140f0:	ldr	r0, [pc, #3824]	; 14fe8 <print_debug_data@@Base+0x11d0>
   140f4:	add	r0, pc, r0
   140f8:	ldr	r1, [r0]
   140fc:	mvn	lr, #0
   14100:	add	r1, r1, lr
   14104:	str	r1, [r0]
   14108:	ldr	r0, [fp, #-12]
   1410c:	bl	127b4 <coda_cursor_goto_parent@plt>
   14110:	str	r0, [sp, #216]	; 0xd8
   14114:	ldr	r0, [fp, #-12]
   14118:	sub	r1, fp, #20
   1411c:	bl	126e8 <coda_cursor_get_type_class@plt>
   14120:	cmp	r0, #0
   14124:	beq	14134 <print_debug_data@@Base+0x31c>
   14128:	ldr	r0, [pc, #3780]	; 14ff4 <print_debug_data@@Base+0x11dc>
   1412c:	ldr	r0, [pc, r0]
   14130:	blx	r0
   14134:	ldr	r0, [fp, #-20]	; 0xffffffec
   14138:	cmp	r0, #6
   1413c:	str	r0, [sp, #212]	; 0xd4
   14140:	bhi	14fd8 <print_debug_data@@Base+0x11c0>
   14144:	add	r0, pc, #8
   14148:	ldr	r1, [sp, #212]	; 0xd4
   1414c:	ldr	r2, [r0, r1, lsl #2]
   14150:	add	pc, r0, r2
   14154:	andeq	r0, r0, ip, lsl r0
   14158:	andeq	r0, r0, ip, asr #8
   1415c:	andeq	r0, r0, r8, lsr #15
   14160:	andeq	r0, r0, r8, lsr #15
   14164:	andeq	r0, r0, r8, lsr #15
   14168:	andeq	r0, r0, r8, lsr #15
   1416c:	andeq	r0, r0, r4, ror ip
   14170:	ldr	r0, [fp, #-12]
   14174:	sub	r1, fp, #28
   14178:	bl	12640 <coda_cursor_get_num_elements@plt>
   1417c:	cmp	r0, #0
   14180:	beq	14190 <print_debug_data@@Base+0x378>
   14184:	ldr	r0, [pc, #3924]	; 150e0 <print_debug_data@@Base+0x12c8>
   14188:	ldr	r0, [pc, r0]
   1418c:	blx	r0
   14190:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14194:	cmp	r0, #0
   14198:	ble	1459c <print_debug_data@@Base+0x784>
   1419c:	ldr	r0, [fp, #-12]
   141a0:	sub	r1, fp, #32
   141a4:	bl	126a0 <coda_cursor_get_type@plt>
   141a8:	cmp	r0, #0
   141ac:	beq	141bc <print_debug_data@@Base+0x3a4>
   141b0:	ldr	r0, [pc, #3884]	; 150e4 <print_debug_data@@Base+0x12cc>
   141b4:	ldr	r0, [pc, r0]
   141b8:	blx	r0
   141bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   141c0:	sub	r1, fp, #36	; 0x24
   141c4:	bl	1288c <coda_type_get_record_union_status@plt>
   141c8:	cmp	r0, #0
   141cc:	beq	141dc <print_debug_data@@Base+0x3c4>
   141d0:	ldr	r0, [pc, #3856]	; 150e8 <print_debug_data@@Base+0x12d0>
   141d4:	ldr	r0, [pc, r0]
   141d8:	blx	r0
   141dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   141e0:	cmp	r0, #0
   141e4:	beq	143a4 <print_debug_data@@Base+0x58c>
   141e8:	ldr	r0, [fp, #-12]
   141ec:	sub	r1, fp, #40	; 0x28
   141f0:	bl	1297c <coda_cursor_get_available_union_field_index@plt>
   141f4:	cmp	r0, #0
   141f8:	beq	14208 <print_debug_data@@Base+0x3f0>
   141fc:	ldr	r0, [pc, #3868]	; 15120 <print_debug_data@@Base+0x1308>
   14200:	ldr	r0, [pc, r0]
   14204:	blx	r0
   14208:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1420c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14210:	sub	r2, fp, #44	; 0x2c
   14214:	bl	129c4 <coda_type_get_record_field_name@plt>
   14218:	cmp	r0, #0
   1421c:	beq	1422c <print_debug_data@@Base+0x414>
   14220:	ldr	r0, [pc, #3836]	; 15124 <print_debug_data@@Base+0x130c>
   14224:	ldr	r0, [pc, r0]
   14228:	blx	r0
   1422c:	ldr	r0, [fp, #-12]
   14230:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14234:	bl	12760 <coda_cursor_goto_record_field_by_index@plt>
   14238:	cmp	r0, #0
   1423c:	beq	1424c <print_debug_data@@Base+0x434>
   14240:	ldr	r0, [pc, #3808]	; 15128 <print_debug_data@@Base+0x1310>
   14244:	ldr	r0, [pc, r0]
   14248:	blx	r0
   1424c:	ldr	r0, [pc, #3804]	; 15130 <print_debug_data@@Base+0x1318>
   14250:	add	r0, pc, r0
   14254:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14258:	bl	15170 <print_debug_data@@Base+0x1358>
   1425c:	ldr	r1, [pc, #3784]	; 1512c <print_debug_data@@Base+0x1314>
   14260:	add	r1, pc, r1
   14264:	ldr	r1, [r1]
   14268:	cmp	r1, #0
   1426c:	str	r0, [sp, #208]	; 0xd0
   14270:	beq	14308 <print_debug_data@@Base+0x4f0>
   14274:	ldr	r0, [fp, #-12]
   14278:	sub	r1, fp, #56	; 0x38
   1427c:	bl	12994 <coda_cursor_get_file_bit_offset@plt>
   14280:	cmp	r0, #0
   14284:	beq	14294 <print_debug_data@@Base+0x47c>
   14288:	ldr	r0, [pc, #3748]	; 15134 <print_debug_data@@Base+0x131c>
   1428c:	ldr	r0, [pc, r0]
   14290:	blx	r0
   14294:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14298:	cmp	r0, #0
   1429c:	blt	14304 <print_debug_data@@Base+0x4ec>
   142a0:	b	142a4 <print_debug_data@@Base+0x48c>
   142a4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   142a8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   142ac:	lsr	r0, r0, #3
   142b0:	orr	r0, r0, r1, lsl #29
   142b4:	asr	r1, r1, #3
   142b8:	sub	r2, fp, #77	; 0x4d
   142bc:	str	r2, [sp, #204]	; 0xcc
   142c0:	bl	129e8 <coda_str64@plt>
   142c4:	ldr	r0, [pc, #3720]	; 15154 <print_debug_data@@Base+0x133c>
   142c8:	add	r0, pc, r0
   142cc:	ldr	r1, [sp, #204]	; 0xcc
   142d0:	bl	151dc <print_debug_data@@Base+0x13c4>
   142d4:	ldrb	r1, [fp, #-56]	; 0xffffffc8
   142d8:	tst	r1, #7
   142dc:	str	r0, [sp, #200]	; 0xc8
   142e0:	beq	14300 <print_debug_data@@Base+0x4e8>
   142e4:	b	142e8 <print_debug_data@@Base+0x4d0>
   142e8:	ldr	r0, [pc, #3656]	; 15138 <print_debug_data@@Base+0x1320>
   142ec:	add	r0, pc, r0
   142f0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   142f4:	and	r1, r1, #7
   142f8:	bl	151dc <print_debug_data@@Base+0x13c4>
   142fc:	str	r0, [sp, #196]	; 0xc4
   14300:	b	14304 <print_debug_data@@Base+0x4ec>
   14304:	b	14308 <print_debug_data@@Base+0x4f0>
   14308:	ldr	r0, [pc, #3636]	; 15144 <print_debug_data@@Base+0x132c>
   1430c:	add	r0, pc, r0
   14310:	bl	151dc <print_debug_data@@Base+0x13c4>
   14314:	ldr	lr, [pc, #3616]	; 1513c <print_debug_data@@Base+0x1324>
   14318:	ldr	lr, [pc, lr]
   1431c:	ldr	r1, [pc, #3612]	; 15140 <print_debug_data@@Base+0x1328>
   14320:	add	r1, pc, r1
   14324:	ldr	r2, [r1]
   14328:	add	r2, r2, #1
   1432c:	str	r2, [r1]
   14330:	ldr	r1, [lr]
   14334:	cmp	r1, #0
   14338:	str	r0, [sp, #192]	; 0xc0
   1433c:	blt	14358 <print_debug_data@@Base+0x540>
   14340:	ldr	r0, [pc, #3584]	; 15148 <print_debug_data@@Base+0x1330>
   14344:	ldr	r0, [pc, r0]
   14348:	ldr	r1, [fp, #-16]
   1434c:	ldr	r0, [r0]
   14350:	cmp	r1, r0
   14354:	bge	1436c <print_debug_data@@Base+0x554>
   14358:	ldr	r0, [fp, #-12]
   1435c:	ldr	r1, [fp, #-16]
   14360:	add	r1, r1, #1
   14364:	bl	1405c <print_debug_data@@Base+0x244>
   14368:	b	1437c <print_debug_data@@Base+0x564>
   1436c:	ldr	r0, [pc, #3544]	; 1514c <print_debug_data@@Base+0x1334>
   14370:	add	r0, pc, r0
   14374:	bl	15170 <print_debug_data@@Base+0x1358>
   14378:	str	r0, [sp, #188]	; 0xbc
   1437c:	ldr	r0, [pc, #3532]	; 15150 <print_debug_data@@Base+0x1338>
   14380:	add	r0, pc, r0
   14384:	ldr	r1, [r0]
   14388:	mvn	r2, #0
   1438c:	add	r1, r1, r2
   14390:	str	r1, [r0]
   14394:	ldr	r0, [fp, #-12]
   14398:	bl	127b4 <coda_cursor_goto_parent@plt>
   1439c:	str	r0, [sp, #184]	; 0xb8
   143a0:	b	14598 <print_debug_data@@Base+0x780>
   143a4:	ldr	r0, [fp, #-12]
   143a8:	bl	12754 <coda_cursor_goto_first_record_field@plt>
   143ac:	cmp	r0, #0
   143b0:	beq	143c0 <print_debug_data@@Base+0x5a8>
   143b4:	ldr	r0, [pc, #3376]	; 150ec <print_debug_data@@Base+0x12d4>
   143b8:	ldr	r0, [pc, r0]
   143bc:	blx	r0
   143c0:	movw	r0, #0
   143c4:	str	r0, [fp, #-40]	; 0xffffffd8
   143c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   143cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   143d0:	cmp	r0, r1
   143d4:	bge	1458c <print_debug_data@@Base+0x774>
   143d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   143dc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   143e0:	sub	r2, fp, #84	; 0x54
   143e4:	bl	129c4 <coda_type_get_record_field_name@plt>
   143e8:	cmp	r0, #0
   143ec:	beq	143fc <print_debug_data@@Base+0x5e4>
   143f0:	ldr	r0, [pc, #3320]	; 150f0 <print_debug_data@@Base+0x12d8>
   143f4:	ldr	r0, [pc, r0]
   143f8:	blx	r0
   143fc:	ldr	r0, [pc, #3316]	; 150f8 <print_debug_data@@Base+0x12e0>
   14400:	add	r0, pc, r0
   14404:	ldr	r1, [fp, #-84]	; 0xffffffac
   14408:	bl	15170 <print_debug_data@@Base+0x1358>
   1440c:	ldr	r1, [pc, #3296]	; 150f4 <print_debug_data@@Base+0x12dc>
   14410:	add	r1, pc, r1
   14414:	ldr	r1, [r1]
   14418:	cmp	r1, #0
   1441c:	str	r0, [sp, #180]	; 0xb4
   14420:	beq	144b8 <print_debug_data@@Base+0x6a0>
   14424:	ldr	r0, [fp, #-12]
   14428:	sub	r1, fp, #96	; 0x60
   1442c:	bl	12994 <coda_cursor_get_file_bit_offset@plt>
   14430:	cmp	r0, #0
   14434:	beq	14444 <print_debug_data@@Base+0x62c>
   14438:	ldr	r0, [pc, #3260]	; 150fc <print_debug_data@@Base+0x12e4>
   1443c:	ldr	r0, [pc, r0]
   14440:	blx	r0
   14444:	ldr	r0, [fp, #-92]	; 0xffffffa4
   14448:	cmp	r0, #0
   1444c:	blt	144b4 <print_debug_data@@Base+0x69c>
   14450:	b	14454 <print_debug_data@@Base+0x63c>
   14454:	ldr	r0, [fp, #-96]	; 0xffffffa0
   14458:	ldr	r1, [fp, #-92]	; 0xffffffa4
   1445c:	lsr	r0, r0, #3
   14460:	orr	r0, r0, r1, lsl #29
   14464:	asr	r1, r1, #3
   14468:	sub	r2, fp, #117	; 0x75
   1446c:	str	r2, [sp, #176]	; 0xb0
   14470:	bl	129e8 <coda_str64@plt>
   14474:	ldr	r0, [pc, #3292]	; 15158 <print_debug_data@@Base+0x1340>
   14478:	add	r0, pc, r0
   1447c:	ldr	r1, [sp, #176]	; 0xb0
   14480:	bl	151dc <print_debug_data@@Base+0x13c4>
   14484:	ldrb	r1, [fp, #-96]	; 0xffffffa0
   14488:	tst	r1, #7
   1448c:	str	r0, [sp, #172]	; 0xac
   14490:	beq	144b0 <print_debug_data@@Base+0x698>
   14494:	b	14498 <print_debug_data@@Base+0x680>
   14498:	ldr	r0, [pc, #3168]	; 15100 <print_debug_data@@Base+0x12e8>
   1449c:	add	r0, pc, r0
   144a0:	ldr	r1, [fp, #-96]	; 0xffffffa0
   144a4:	and	r1, r1, #7
   144a8:	bl	151dc <print_debug_data@@Base+0x13c4>
   144ac:	str	r0, [sp, #168]	; 0xa8
   144b0:	b	144b4 <print_debug_data@@Base+0x69c>
   144b4:	b	144b8 <print_debug_data@@Base+0x6a0>
   144b8:	ldr	r0, [pc, #3148]	; 1510c <print_debug_data@@Base+0x12f4>
   144bc:	add	r0, pc, r0
   144c0:	bl	151dc <print_debug_data@@Base+0x13c4>
   144c4:	ldr	lr, [pc, #3128]	; 15104 <print_debug_data@@Base+0x12ec>
   144c8:	ldr	lr, [pc, lr]
   144cc:	ldr	r1, [pc, #3124]	; 15108 <print_debug_data@@Base+0x12f0>
   144d0:	add	r1, pc, r1
   144d4:	ldr	r2, [r1]
   144d8:	add	r2, r2, #1
   144dc:	str	r2, [r1]
   144e0:	ldr	r1, [lr]
   144e4:	cmp	r1, #0
   144e8:	str	r0, [sp, #164]	; 0xa4
   144ec:	blt	14508 <print_debug_data@@Base+0x6f0>
   144f0:	ldr	r0, [pc, #3096]	; 15110 <print_debug_data@@Base+0x12f8>
   144f4:	ldr	r0, [pc, r0]
   144f8:	ldr	r1, [fp, #-16]
   144fc:	ldr	r0, [r0]
   14500:	cmp	r1, r0
   14504:	bge	1451c <print_debug_data@@Base+0x704>
   14508:	ldr	r0, [fp, #-12]
   1450c:	ldr	r1, [fp, #-16]
   14510:	add	r1, r1, #1
   14514:	bl	1405c <print_debug_data@@Base+0x244>
   14518:	b	1452c <print_debug_data@@Base+0x714>
   1451c:	ldr	r0, [pc, #3056]	; 15114 <print_debug_data@@Base+0x12fc>
   14520:	add	r0, pc, r0
   14524:	bl	15170 <print_debug_data@@Base+0x1358>
   14528:	str	r0, [sp, #160]	; 0xa0
   1452c:	ldr	r0, [pc, #3044]	; 15118 <print_debug_data@@Base+0x1300>
   14530:	add	r0, pc, r0
   14534:	ldr	r1, [r0]
   14538:	mvn	r2, #0
   1453c:	add	r1, r1, r2
   14540:	str	r1, [r0]
   14544:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14548:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1454c:	sub	r1, r1, #1
   14550:	cmp	r0, r1
   14554:	bge	14578 <print_debug_data@@Base+0x760>
   14558:	ldr	r0, [fp, #-12]
   1455c:	bl	12934 <coda_cursor_goto_next_record_field@plt>
   14560:	cmp	r0, #0
   14564:	beq	14574 <print_debug_data@@Base+0x75c>
   14568:	ldr	r0, [pc, #2988]	; 1511c <print_debug_data@@Base+0x1304>
   1456c:	ldr	r0, [pc, r0]
   14570:	blx	r0
   14574:	b	14578 <print_debug_data@@Base+0x760>
   14578:	b	1457c <print_debug_data@@Base+0x764>
   1457c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14580:	add	r0, r0, #1
   14584:	str	r0, [fp, #-40]	; 0xffffffd8
   14588:	b	143c8 <print_debug_data@@Base+0x5b0>
   1458c:	ldr	r0, [fp, #-12]
   14590:	bl	127b4 <coda_cursor_goto_parent@plt>
   14594:	str	r0, [sp, #156]	; 0x9c
   14598:	b	1459c <print_debug_data@@Base+0x784>
   1459c:	b	14fd8 <print_debug_data@@Base+0x11c0>
   145a0:	sub	r2, fp, #152	; 0x98
   145a4:	ldr	r0, [fp, #-12]
   145a8:	sub	r1, fp, #156	; 0x9c
   145ac:	bl	128d4 <coda_cursor_get_array_dim@plt>
   145b0:	cmp	r0, #0
   145b4:	beq	145c4 <print_debug_data@@Base+0x7ac>
   145b8:	ldr	r0, [pc, #2784]	; 150a0 <print_debug_data@@Base+0x1288>
   145bc:	ldr	r0, [pc, r0]
   145c0:	blx	r0
   145c4:	ldr	r0, [fp, #-156]	; 0xffffff64
   145c8:	cmp	r0, #0
   145cc:	blt	148f8 <print_debug_data@@Base+0xae0>
   145d0:	movw	r0, #1
   145d4:	str	r0, [fp, #-160]	; 0xffffff60
   145d8:	movw	r0, #0
   145dc:	str	r0, [fp, #-196]	; 0xffffff3c
   145e0:	ldr	r0, [fp, #-196]	; 0xffffff3c
   145e4:	ldr	r1, [fp, #-156]	; 0xffffff64
   145e8:	cmp	r0, r1
   145ec:	bge	1462c <print_debug_data@@Base+0x814>
   145f0:	ldr	r0, [fp, #-196]	; 0xffffff3c
   145f4:	sub	r1, fp, #152	; 0x98
   145f8:	ldr	r0, [r1, r0, lsl #2]
   145fc:	ldr	r1, [fp, #-160]	; 0xffffff60
   14600:	mul	r0, r1, r0
   14604:	str	r0, [fp, #-160]	; 0xffffff60
   14608:	ldr	r0, [fp, #-196]	; 0xffffff3c
   1460c:	sub	r1, fp, #192	; 0xc0
   14610:	add	r0, r1, r0, lsl #2
   14614:	movw	r1, #0
   14618:	str	r1, [r0]
   1461c:	ldr	r0, [fp, #-196]	; 0xffffff3c
   14620:	add	r0, r0, #1
   14624:	str	r0, [fp, #-196]	; 0xffffff3c
   14628:	b	145e0 <print_debug_data@@Base+0x7c8>
   1462c:	ldr	r0, [fp, #-160]	; 0xffffff60
   14630:	cmp	r0, #0
   14634:	ble	148f4 <print_debug_data@@Base+0xadc>
   14638:	ldr	r0, [fp, #-12]
   1463c:	bl	12730 <coda_cursor_goto_first_array_element@plt>
   14640:	cmp	r0, #0
   14644:	beq	14654 <print_debug_data@@Base+0x83c>
   14648:	ldr	r0, [pc, #2644]	; 150a4 <print_debug_data@@Base+0x128c>
   1464c:	ldr	r0, [pc, r0]
   14650:	blx	r0
   14654:	movw	r0, #0
   14658:	str	r0, [fp, #-196]	; 0xffffff3c
   1465c:	ldr	r0, [fp, #-196]	; 0xffffff3c
   14660:	ldr	r1, [fp, #-160]	; 0xffffff60
   14664:	cmp	r0, r1
   14668:	bge	148e8 <print_debug_data@@Base+0xad0>
   1466c:	ldr	r0, [pc, #2612]	; 150a8 <print_debug_data@@Base+0x1290>
   14670:	add	r0, pc, r0
   14674:	bl	15170 <print_debug_data@@Base+0x1358>
   14678:	movw	lr, #0
   1467c:	str	lr, [fp, #-200]	; 0xffffff38
   14680:	str	r0, [sp, #152]	; 0x98
   14684:	ldr	r0, [fp, #-200]	; 0xffffff38
   14688:	ldr	r1, [fp, #-156]	; 0xffffff64
   1468c:	cmp	r0, r1
   14690:	bge	146ec <print_debug_data@@Base+0x8d4>
   14694:	ldr	r0, [pc, #2620]	; 150d8 <print_debug_data@@Base+0x12c0>
   14698:	add	r0, pc, r0
   1469c:	ldr	r1, [fp, #-200]	; 0xffffff38
   146a0:	sub	r2, fp, #192	; 0xc0
   146a4:	add	r1, r2, r1, lsl #2
   146a8:	ldr	r1, [r1]
   146ac:	bl	151dc <print_debug_data@@Base+0x13c4>
   146b0:	ldr	r1, [fp, #-200]	; 0xffffff38
   146b4:	ldr	r2, [fp, #-156]	; 0xffffff64
   146b8:	sub	r2, r2, #1
   146bc:	cmp	r1, r2
   146c0:	str	r0, [sp, #148]	; 0x94
   146c4:	bge	146d8 <print_debug_data@@Base+0x8c0>
   146c8:	ldr	r0, [pc, #2572]	; 150dc <print_debug_data@@Base+0x12c4>
   146cc:	add	r0, pc, r0
   146d0:	bl	151dc <print_debug_data@@Base+0x13c4>
   146d4:	str	r0, [sp, #144]	; 0x90
   146d8:	b	146dc <print_debug_data@@Base+0x8c4>
   146dc:	ldr	r0, [fp, #-200]	; 0xffffff38
   146e0:	add	r0, r0, #1
   146e4:	str	r0, [fp, #-200]	; 0xffffff38
   146e8:	b	14684 <print_debug_data@@Base+0x86c>
   146ec:	ldr	r0, [pc, #2492]	; 150b0 <print_debug_data@@Base+0x1298>
   146f0:	add	r0, pc, r0
   146f4:	bl	151dc <print_debug_data@@Base+0x13c4>
   146f8:	ldr	lr, [pc, #2476]	; 150ac <print_debug_data@@Base+0x1294>
   146fc:	add	lr, pc, lr
   14700:	ldr	lr, [lr]
   14704:	cmp	lr, #0
   14708:	str	r0, [sp, #140]	; 0x8c
   1470c:	beq	147a4 <print_debug_data@@Base+0x98c>
   14710:	ldr	r0, [fp, #-12]
   14714:	sub	r1, fp, #208	; 0xd0
   14718:	bl	12994 <coda_cursor_get_file_bit_offset@plt>
   1471c:	cmp	r0, #0
   14720:	beq	14730 <print_debug_data@@Base+0x918>
   14724:	ldr	r0, [pc, #2440]	; 150b4 <print_debug_data@@Base+0x129c>
   14728:	ldr	r0, [pc, r0]
   1472c:	blx	r0
   14730:	ldr	r0, [fp, #-204]	; 0xffffff34
   14734:	cmp	r0, #0
   14738:	blt	147a0 <print_debug_data@@Base+0x988>
   1473c:	b	14740 <print_debug_data@@Base+0x928>
   14740:	ldr	r0, [fp, #-208]	; 0xffffff30
   14744:	ldr	r1, [fp, #-204]	; 0xffffff34
   14748:	lsr	r0, r0, #3
   1474c:	orr	r0, r0, r1, lsl #29
   14750:	asr	r1, r1, #3
   14754:	sub	r2, fp, #229	; 0xe5
   14758:	str	r2, [sp, #136]	; 0x88
   1475c:	bl	129e8 <coda_str64@plt>
   14760:	ldr	r0, [pc, #2548]	; 1515c <print_debug_data@@Base+0x1344>
   14764:	add	r0, pc, r0
   14768:	ldr	r1, [sp, #136]	; 0x88
   1476c:	bl	151dc <print_debug_data@@Base+0x13c4>
   14770:	ldrb	r1, [fp, #-208]	; 0xffffff30
   14774:	tst	r1, #7
   14778:	str	r0, [sp, #132]	; 0x84
   1477c:	beq	1479c <print_debug_data@@Base+0x984>
   14780:	b	14784 <print_debug_data@@Base+0x96c>
   14784:	ldr	r0, [pc, #2348]	; 150b8 <print_debug_data@@Base+0x12a0>
   14788:	add	r0, pc, r0
   1478c:	ldr	r1, [fp, #-208]	; 0xffffff30
   14790:	and	r1, r1, #7
   14794:	bl	151dc <print_debug_data@@Base+0x13c4>
   14798:	str	r0, [sp, #128]	; 0x80
   1479c:	b	147a0 <print_debug_data@@Base+0x988>
   147a0:	b	147a4 <print_debug_data@@Base+0x98c>
   147a4:	ldr	r0, [pc, #2328]	; 150c4 <print_debug_data@@Base+0x12ac>
   147a8:	add	r0, pc, r0
   147ac:	bl	151dc <print_debug_data@@Base+0x13c4>
   147b0:	ldr	lr, [pc, #2308]	; 150bc <print_debug_data@@Base+0x12a4>
   147b4:	ldr	lr, [pc, lr]
   147b8:	ldr	r1, [pc, #2304]	; 150c0 <print_debug_data@@Base+0x12a8>
   147bc:	add	r1, pc, r1
   147c0:	ldr	r2, [r1]
   147c4:	add	r2, r2, #1
   147c8:	str	r2, [r1]
   147cc:	ldr	r1, [lr]
   147d0:	cmp	r1, #0
   147d4:	str	r0, [sp, #124]	; 0x7c
   147d8:	blt	147f4 <print_debug_data@@Base+0x9dc>
   147dc:	ldr	r0, [pc, #2276]	; 150c8 <print_debug_data@@Base+0x12b0>
   147e0:	ldr	r0, [pc, r0]
   147e4:	ldr	r1, [fp, #-16]
   147e8:	ldr	r0, [r0]
   147ec:	cmp	r1, r0
   147f0:	bge	14808 <print_debug_data@@Base+0x9f0>
   147f4:	ldr	r0, [fp, #-12]
   147f8:	ldr	r1, [fp, #-16]
   147fc:	add	r1, r1, #1
   14800:	bl	1405c <print_debug_data@@Base+0x244>
   14804:	b	14818 <print_debug_data@@Base+0xa00>
   14808:	ldr	r0, [pc, #2236]	; 150cc <print_debug_data@@Base+0x12b4>
   1480c:	add	r0, pc, r0
   14810:	bl	15170 <print_debug_data@@Base+0x1358>
   14814:	str	r0, [sp, #120]	; 0x78
   14818:	ldr	r0, [pc, #2224]	; 150d0 <print_debug_data@@Base+0x12b8>
   1481c:	add	r0, pc, r0
   14820:	ldr	r1, [r0]
   14824:	mvn	r2, #0
   14828:	add	r1, r1, r2
   1482c:	str	r1, [r0]
   14830:	ldr	r0, [fp, #-156]	; 0xffffff64
   14834:	sub	r0, r0, #1
   14838:	str	r0, [fp, #-200]	; 0xffffff38
   1483c:	ldr	r0, [fp, #-200]	; 0xffffff38
   14840:	cmp	r0, #0
   14844:	blt	148a0 <print_debug_data@@Base+0xa88>
   14848:	ldr	r0, [fp, #-200]	; 0xffffff38
   1484c:	sub	r1, fp, #192	; 0xc0
   14850:	ldr	r2, [r1, r0, lsl #2]
   14854:	add	r2, r2, #1
   14858:	str	r2, [r1, r0, lsl #2]
   1485c:	ldr	r0, [fp, #-200]	; 0xffffff38
   14860:	ldr	r1, [r1, r0, lsl #2]
   14864:	sub	r2, fp, #152	; 0x98
   14868:	add	r0, r2, r0, lsl #2
   1486c:	ldr	r0, [r0]
   14870:	cmp	r1, r0
   14874:	bne	14898 <print_debug_data@@Base+0xa80>
   14878:	ldr	r0, [fp, #-200]	; 0xffffff38
   1487c:	sub	r1, r0, #1
   14880:	str	r1, [fp, #-200]	; 0xffffff38
   14884:	sub	r1, fp, #192	; 0xc0
   14888:	add	r0, r1, r0, lsl #2
   1488c:	movw	r1, #0
   14890:	str	r1, [r0]
   14894:	b	1489c <print_debug_data@@Base+0xa84>
   14898:	b	148a0 <print_debug_data@@Base+0xa88>
   1489c:	b	1483c <print_debug_data@@Base+0xa24>
   148a0:	ldr	r0, [fp, #-196]	; 0xffffff3c
   148a4:	ldr	r1, [fp, #-160]	; 0xffffff60
   148a8:	sub	r1, r1, #1
   148ac:	cmp	r0, r1
   148b0:	bge	148d4 <print_debug_data@@Base+0xabc>
   148b4:	ldr	r0, [fp, #-12]
   148b8:	bl	12820 <coda_cursor_goto_next_array_element@plt>
   148bc:	cmp	r0, #0
   148c0:	beq	148d0 <print_debug_data@@Base+0xab8>
   148c4:	ldr	r0, [pc, #2056]	; 150d4 <print_debug_data@@Base+0x12bc>
   148c8:	ldr	r0, [pc, r0]
   148cc:	blx	r0
   148d0:	b	148d4 <print_debug_data@@Base+0xabc>
   148d4:	b	148d8 <print_debug_data@@Base+0xac0>
   148d8:	ldr	r0, [fp, #-196]	; 0xffffff3c
   148dc:	add	r0, r0, #1
   148e0:	str	r0, [fp, #-196]	; 0xffffff3c
   148e4:	b	1465c <print_debug_data@@Base+0x844>
   148e8:	ldr	r0, [fp, #-12]
   148ec:	bl	127b4 <coda_cursor_goto_parent@plt>
   148f0:	str	r0, [sp, #116]	; 0x74
   148f4:	b	148f8 <print_debug_data@@Base+0xae0>
   148f8:	b	14fd8 <print_debug_data@@Base+0x11c0>
   148fc:	ldr	r0, [fp, #-12]
   14900:	sub	r1, fp, #240	; 0xf0
   14904:	bl	128e0 <coda_cursor_has_ascii_content@plt>
   14908:	cmp	r0, #0
   1490c:	beq	1491c <print_debug_data@@Base+0xb04>
   14910:	ldr	r0, [pc, #1808]	; 15028 <print_debug_data@@Base+0x1210>
   14914:	ldr	r0, [pc, r0]
   14918:	blx	r0
   1491c:	ldr	r0, [fp, #-240]	; 0xffffff10
   14920:	cmp	r0, #0
   14924:	beq	14a04 <print_debug_data@@Base+0xbec>
   14928:	ldr	r0, [fp, #-12]
   1492c:	sub	r1, fp, #244	; 0xf4
   14930:	bl	127e4 <coda_cursor_get_string_length@plt>
   14934:	cmp	r0, #0
   14938:	beq	14948 <print_debug_data@@Base+0xb30>
   1493c:	ldr	r0, [pc, #1768]	; 1502c <print_debug_data@@Base+0x1214>
   14940:	ldr	r0, [pc, r0]
   14944:	blx	r0
   14948:	ldr	r0, [fp, #-244]	; 0xffffff0c
   1494c:	add	r0, r0, #1
   14950:	bl	12784 <malloc@plt>
   14954:	str	r0, [fp, #-248]	; 0xffffff08
   14958:	ldr	r0, [fp, #-248]	; 0xffffff08
   1495c:	movw	lr, #0
   14960:	cmp	r0, lr
   14964:	bne	1499c <print_debug_data@@Base+0xb84>
   14968:	ldr	r0, [pc, #1732]	; 15034 <print_debug_data@@Base+0x121c>
   1496c:	add	r1, pc, r0
   14970:	ldr	r0, [pc, #1728]	; 15038 <print_debug_data@@Base+0x1220>
   14974:	add	r3, pc, r0
   14978:	ldr	r0, [fp, #-244]	; 0xffffff0c
   1497c:	add	r2, r0, #1
   14980:	mvn	r0, #0
   14984:	movw	ip, #410	; 0x19a
   14988:	str	ip, [sp]
   1498c:	bl	12610 <coda_set_error@plt>
   14990:	ldr	r0, [pc, #1688]	; 15030 <print_debug_data@@Base+0x1218>
   14994:	ldr	r0, [pc, r0]
   14998:	blx	r0
   1499c:	ldr	r0, [fp, #-12]
   149a0:	ldr	r1, [fp, #-248]	; 0xffffff08
   149a4:	ldr	r2, [fp, #-244]	; 0xffffff0c
   149a8:	add	r2, r2, #1
   149ac:	bl	127a8 <coda_cursor_read_string@plt>
   149b0:	cmp	r0, #0
   149b4:	beq	149c4 <print_debug_data@@Base+0xbac>
   149b8:	ldr	r0, [pc, #1660]	; 1503c <print_debug_data@@Base+0x1224>
   149bc:	ldr	r0, [pc, r0]
   149c0:	blx	r0
   149c4:	ldr	r0, [pc, #1656]	; 15044 <print_debug_data@@Base+0x122c>
   149c8:	add	r0, pc, r0
   149cc:	bl	15170 <print_debug_data@@Base+0x1358>
   149d0:	ldr	lr, [fp, #-248]	; 0xffffff08
   149d4:	ldr	r1, [fp, #-244]	; 0xffffff0c
   149d8:	str	r0, [sp, #112]	; 0x70
   149dc:	mov	r0, lr
   149e0:	bl	15244 <print_debug_data@@Base+0x142c>
   149e4:	ldr	r0, [pc, #1620]	; 15040 <print_debug_data@@Base+0x1228>
   149e8:	add	r0, pc, r0
   149ec:	ldr	r1, [fp, #-244]	; 0xffffff0c
   149f0:	bl	151dc <print_debug_data@@Base+0x13c4>
   149f4:	ldr	r1, [fp, #-248]	; 0xffffff08
   149f8:	str	r0, [sp, #108]	; 0x6c
   149fc:	mov	r0, r1
   14a00:	bl	12658 <free@plt>
   14a04:	ldr	r0, [fp, #-12]
   14a08:	sub	r1, fp, #236	; 0xec
   14a0c:	bl	12778 <coda_cursor_get_read_type@plt>
   14a10:	cmp	r0, #0
   14a14:	beq	14a24 <print_debug_data@@Base+0xc0c>
   14a18:	ldr	r0, [pc, #1576]	; 15048 <print_debug_data@@Base+0x1230>
   14a1c:	ldr	r0, [pc, r0]
   14a20:	blx	r0
   14a24:	ldr	r0, [fp, #-236]	; 0xffffff14
   14a28:	add	r0, r0, #1
   14a2c:	cmp	r0, #13
   14a30:	str	r0, [sp, #104]	; 0x68
   14a34:	bhi	14dc4 <print_debug_data@@Base+0xfac>
   14a38:	add	r0, pc, #8
   14a3c:	ldr	r1, [sp, #104]	; 0x68
   14a40:	ldr	r2, [r0, r1, lsl #2]
   14a44:	add	pc, r0, r2
   14a48:	andeq	r0, r0, r8, asr #6
   14a4c:	ldrdeq	r0, [r0], -r4
   14a50:	andeq	r0, r0, ip, lsl #4
   14a54:	ldrdeq	r0, [r0], -r4
   14a58:	andeq	r0, r0, ip, lsl #4
   14a5c:	ldrdeq	r0, [r0], -r4
   14a60:	andeq	r0, r0, ip, lsl #4
   14a64:	andeq	r0, r0, r4, asr #4
   14a68:	muleq	r0, r4, r2
   14a6c:	andeq	r0, r0, r4, ror #5
   14a70:	andeq	r0, r0, r4, ror #5
   14a74:	andeq	r0, r0, r8, asr #6
   14a78:	andeq	r0, r0, r8, asr #6
   14a7c:	andeq	r0, r0, r8, lsr r0
   14a80:	ldr	r0, [fp, #-12]
   14a84:	sub	r1, fp, #256	; 0x100
   14a88:	bl	1294c <coda_cursor_get_bit_size@plt>
   14a8c:	cmp	r0, #0
   14a90:	beq	14aa0 <print_debug_data@@Base+0xc88>
   14a94:	ldr	r0, [pc, #1512]	; 15084 <print_debug_data@@Base+0x126c>
   14a98:	ldr	r0, [pc, r0]
   14a9c:	blx	r0
   14aa0:	ldr	r0, [fp, #-256]	; 0xffffff00
   14aa4:	ldr	r1, [fp, #-252]	; 0xffffff04
   14aa8:	lsr	r2, r0, #3
   14aac:	orr	r2, r2, r1, lsl #29
   14ab0:	asr	r1, r1, #3
   14ab4:	and	r0, r0, #7
   14ab8:	adds	r3, r2, #1
   14abc:	adc	ip, r1, #0
   14ac0:	cmp	r0, #0
   14ac4:	movne	r2, r3
   14ac8:	cmp	r0, #0
   14acc:	movne	r1, ip
   14ad0:	str	r2, [fp, #-264]	; 0xfffffef8
   14ad4:	str	r1, [fp, #-260]	; 0xfffffefc
   14ad8:	ldr	r0, [fp, #-264]	; 0xfffffef8
   14adc:	bl	12784 <malloc@plt>
   14ae0:	str	r0, [fp, #-268]	; 0xfffffef4
   14ae4:	ldr	r0, [fp, #-268]	; 0xfffffef4
   14ae8:	movw	r1, #0
   14aec:	cmp	r0, r1
   14af0:	bne	14b24 <print_debug_data@@Base+0xd0c>
   14af4:	ldr	r0, [pc, #1424]	; 1508c <print_debug_data@@Base+0x1274>
   14af8:	add	r1, pc, r0
   14afc:	ldr	r0, [pc, #1420]	; 15090 <print_debug_data@@Base+0x1278>
   14b00:	add	r3, pc, r0
   14b04:	ldr	r2, [fp, #-264]	; 0xfffffef8
   14b08:	mvn	r0, #0
   14b0c:	movw	ip, #447	; 0x1bf
   14b10:	str	ip, [sp]
   14b14:	bl	12610 <coda_set_error@plt>
   14b18:	ldr	r0, [pc, #1384]	; 15088 <print_debug_data@@Base+0x1270>
   14b1c:	ldr	r0, [pc, r0]
   14b20:	blx	r0
   14b24:	ldr	r0, [fp, #-12]
   14b28:	ldr	r1, [fp, #-268]	; 0xfffffef4
   14b2c:	ldr	r2, [fp, #-256]	; 0xffffff00
   14b30:	ldr	r3, [fp, #-252]	; 0xffffff04
   14b34:	mov	ip, sp
   14b38:	str	r3, [ip, #4]
   14b3c:	str	r2, [ip]
   14b40:	mov	r2, #0
   14b44:	str	r2, [sp, #100]	; 0x64
   14b48:	ldr	r3, [sp, #100]	; 0x64
   14b4c:	bl	129dc <coda_cursor_read_bits@plt>
   14b50:	cmp	r0, #0
   14b54:	beq	14b64 <print_debug_data@@Base+0xd4c>
   14b58:	ldr	r0, [pc, #1332]	; 15094 <print_debug_data@@Base+0x127c>
   14b5c:	ldr	r0, [pc, r0]
   14b60:	blx	r0
   14b64:	ldr	r0, [pc, #1524]	; 15160 <print_debug_data@@Base+0x1348>
   14b68:	add	r0, pc, r0
   14b6c:	bl	15170 <print_debug_data@@Base+0x1358>
   14b70:	ldr	lr, [fp, #-268]	; 0xfffffef4
   14b74:	ldr	r1, [fp, #-264]	; 0xfffffef8
   14b78:	str	r0, [sp, #96]	; 0x60
   14b7c:	mov	r0, lr
   14b80:	bl	15244 <print_debug_data@@Base+0x142c>
   14b84:	ldr	r0, [pc, #1496]	; 15164 <print_debug_data@@Base+0x134c>
   14b88:	add	r0, pc, r0
   14b8c:	bl	151dc <print_debug_data@@Base+0x13c4>
   14b90:	ldr	r1, [fp, #-256]	; 0xffffff00
   14b94:	ldr	lr, [fp, #-252]	; 0xffffff04
   14b98:	lsr	r1, r1, #3
   14b9c:	orr	r1, r1, lr, lsl #29
   14ba0:	asr	lr, lr, #3
   14ba4:	sub	r2, fp, #256	; 0x100
   14ba8:	sub	r2, r2, #33	; 0x21
   14bac:	str	r0, [sp, #92]	; 0x5c
   14bb0:	mov	r0, r1
   14bb4:	mov	r1, lr
   14bb8:	str	r2, [sp, #88]	; 0x58
   14bbc:	bl	129e8 <coda_str64@plt>
   14bc0:	ldr	r0, [pc, #1440]	; 15168 <print_debug_data@@Base+0x1350>
   14bc4:	add	r0, pc, r0
   14bc8:	ldr	r1, [sp, #88]	; 0x58
   14bcc:	bl	151dc <print_debug_data@@Base+0x13c4>
   14bd0:	ldrb	r1, [fp, #-256]	; 0xffffff00
   14bd4:	tst	r1, #7
   14bd8:	str	r0, [sp, #84]	; 0x54
   14bdc:	beq	14bfc <print_debug_data@@Base+0xde4>
   14be0:	b	14be4 <print_debug_data@@Base+0xdcc>
   14be4:	ldr	r0, [pc, #1196]	; 15098 <print_debug_data@@Base+0x1280>
   14be8:	add	r0, pc, r0
   14bec:	ldr	r1, [fp, #-256]	; 0xffffff00
   14bf0:	and	r1, r1, #7
   14bf4:	bl	151dc <print_debug_data@@Base+0x13c4>
   14bf8:	str	r0, [sp, #80]	; 0x50
   14bfc:	ldr	r0, [pc, #1176]	; 1509c <print_debug_data@@Base+0x1284>
   14c00:	add	r0, pc, r0
   14c04:	bl	151dc <print_debug_data@@Base+0x13c4>
   14c08:	ldr	lr, [fp, #-268]	; 0xfffffef4
   14c0c:	str	r0, [sp, #76]	; 0x4c
   14c10:	mov	r0, lr
   14c14:	bl	12658 <free@plt>
   14c18:	b	14dc4 <print_debug_data@@Base+0xfac>
   14c1c:	ldr	r0, [fp, #-12]
   14c20:	sub	r1, fp, #296	; 0x128
   14c24:	bl	12988 <coda_cursor_read_int32@plt>
   14c28:	cmp	r0, #0
   14c2c:	beq	14c3c <print_debug_data@@Base+0xe24>
   14c30:	ldr	r0, [pc, #1092]	; 1507c <print_debug_data@@Base+0x1264>
   14c34:	ldr	r0, [pc, r0]
   14c38:	blx	r0
   14c3c:	ldr	r0, [pc, #1084]	; 15080 <print_debug_data@@Base+0x1268>
   14c40:	add	r0, pc, r0
   14c44:	ldr	r1, [fp, #-296]	; 0xfffffed8
   14c48:	bl	15170 <print_debug_data@@Base+0x1358>
   14c4c:	str	r0, [sp, #72]	; 0x48
   14c50:	b	14dc4 <print_debug_data@@Base+0xfac>
   14c54:	ldr	r0, [fp, #-12]
   14c58:	sub	r1, fp, #300	; 0x12c
   14c5c:	bl	1267c <coda_cursor_read_uint32@plt>
   14c60:	cmp	r0, #0
   14c64:	beq	14c74 <print_debug_data@@Base+0xe5c>
   14c68:	ldr	r0, [pc, #1028]	; 15074 <print_debug_data@@Base+0x125c>
   14c6c:	ldr	r0, [pc, r0]
   14c70:	blx	r0
   14c74:	ldr	r0, [pc, #1020]	; 15078 <print_debug_data@@Base+0x1260>
   14c78:	add	r0, pc, r0
   14c7c:	ldr	r1, [fp, #-300]	; 0xfffffed4
   14c80:	bl	15170 <print_debug_data@@Base+0x1358>
   14c84:	str	r0, [sp, #68]	; 0x44
   14c88:	b	14dc4 <print_debug_data@@Base+0xfac>
   14c8c:	ldr	r0, [fp, #-12]
   14c90:	sub	r1, fp, #312	; 0x138
   14c94:	bl	128f8 <coda_cursor_read_int64@plt>
   14c98:	cmp	r0, #0
   14c9c:	beq	14cac <print_debug_data@@Base+0xe94>
   14ca0:	ldr	r0, [pc, #964]	; 1506c <print_debug_data@@Base+0x1254>
   14ca4:	ldr	r0, [pc, r0]
   14ca8:	blx	r0
   14cac:	sub	lr, fp, #256	; 0x100
   14cb0:	sub	r2, lr, #77	; 0x4d
   14cb4:	ldr	r0, [fp, #-312]	; 0xfffffec8
   14cb8:	ldr	r1, [fp, #-308]	; 0xfffffecc
   14cbc:	bl	129e8 <coda_str64@plt>
   14cc0:	ldr	r0, [pc, #936]	; 15070 <print_debug_data@@Base+0x1258>
   14cc4:	add	r0, pc, r0
   14cc8:	sub	lr, fp, #256	; 0x100
   14ccc:	sub	r1, lr, #77	; 0x4d
   14cd0:	bl	15170 <print_debug_data@@Base+0x1358>
   14cd4:	str	r0, [sp, #64]	; 0x40
   14cd8:	b	14dc4 <print_debug_data@@Base+0xfac>
   14cdc:	ldr	r0, [fp, #-12]
   14ce0:	sub	r1, fp, #344	; 0x158
   14ce4:	bl	127f0 <coda_cursor_read_uint64@plt>
   14ce8:	cmp	r0, #0
   14cec:	beq	14cfc <print_debug_data@@Base+0xee4>
   14cf0:	ldr	r0, [pc, #876]	; 15064 <print_debug_data@@Base+0x124c>
   14cf4:	ldr	r0, [pc, r0]
   14cf8:	blx	r0
   14cfc:	sub	lr, fp, #256	; 0x100
   14d00:	sub	r2, lr, #109	; 0x6d
   14d04:	ldr	r0, [fp, #-344]	; 0xfffffea8
   14d08:	ldr	r1, [fp, #-340]	; 0xfffffeac
   14d0c:	bl	1264c <coda_str64u@plt>
   14d10:	ldr	r0, [pc, #848]	; 15068 <print_debug_data@@Base+0x1250>
   14d14:	add	r0, pc, r0
   14d18:	sub	lr, fp, #256	; 0x100
   14d1c:	sub	r1, lr, #109	; 0x6d
   14d20:	bl	15170 <print_debug_data@@Base+0x1358>
   14d24:	str	r0, [sp, #60]	; 0x3c
   14d28:	b	14dc4 <print_debug_data@@Base+0xfac>
   14d2c:	ldr	r0, [fp, #-12]
   14d30:	sub	r1, fp, #376	; 0x178
   14d34:	bl	127fc <coda_cursor_read_double@plt>
   14d38:	cmp	r0, #0
   14d3c:	beq	14d4c <print_debug_data@@Base+0xf34>
   14d40:	ldr	r0, [pc, #784]	; 15058 <print_debug_data@@Base+0x1240>
   14d44:	ldr	r0, [pc, r0]
   14d48:	blx	r0
   14d4c:	ldr	r0, [fp, #-236]	; 0xffffff14
   14d50:	cmp	r0, #8
   14d54:	bne	14d74 <print_debug_data@@Base+0xf5c>
   14d58:	ldr	r0, [pc, #768]	; 15060 <print_debug_data@@Base+0x1248>
   14d5c:	add	r0, pc, r0
   14d60:	vldr	d16, [fp, #-376]	; 0xfffffe88
   14d64:	vmov	r2, r3, d16
   14d68:	bl	15170 <print_debug_data@@Base+0x1358>
   14d6c:	str	r0, [sp, #56]	; 0x38
   14d70:	b	14d8c <print_debug_data@@Base+0xf74>
   14d74:	ldr	r0, [pc, #736]	; 1505c <print_debug_data@@Base+0x1244>
   14d78:	add	r0, pc, r0
   14d7c:	vldr	d16, [fp, #-376]	; 0xfffffe88
   14d80:	vmov	r2, r3, d16
   14d84:	bl	15170 <print_debug_data@@Base+0x1358>
   14d88:	str	r0, [sp, #52]	; 0x34
   14d8c:	b	14dc4 <print_debug_data@@Base+0xfac>
   14d90:	ldr	r0, [fp, #-240]	; 0xffffff10
   14d94:	cmp	r0, #0
   14d98:	beq	14da0 <print_debug_data@@Base+0xf88>
   14d9c:	b	14dc0 <print_debug_data@@Base+0xfa8>
   14da0:	ldr	r0, [pc, #676]	; 1504c <print_debug_data@@Base+0x1234>
   14da4:	add	r0, pc, r0
   14da8:	ldr	r1, [pc, #672]	; 15050 <print_debug_data@@Base+0x1238>
   14dac:	add	r1, pc, r1
   14db0:	ldr	r2, [pc, #668]	; 15054 <print_debug_data@@Base+0x123c>
   14db4:	add	r3, pc, r2
   14db8:	movw	r2, #548	; 0x224
   14dbc:	bl	129f4 <__assert_fail@plt>
   14dc0:	b	14dc4 <print_debug_data@@Base+0xfac>
   14dc4:	b	14fd8 <print_debug_data@@Base+0x11c0>
   14dc8:	ldr	r0, [fp, #-12]
   14dcc:	sub	r1, fp, #380	; 0x17c
   14dd0:	bl	12724 <coda_cursor_get_special_type@plt>
   14dd4:	cmp	r0, #0
   14dd8:	beq	14de8 <print_debug_data@@Base+0xfd0>
   14ddc:	ldr	r0, [pc, #532]	; 14ff8 <print_debug_data@@Base+0x11e0>
   14de0:	ldr	r0, [pc, r0]
   14de4:	blx	r0
   14de8:	ldr	r0, [fp, #-380]	; 0xfffffe84
   14dec:	cmp	r0, #0
   14df0:	beq	14e44 <print_debug_data@@Base+0x102c>
   14df4:	ldr	r0, [fp, #-12]
   14df8:	add	r1, sp, #288	; 0x120
   14dfc:	mov	r2, r1
   14e00:	str	r0, [sp, #48]	; 0x30
   14e04:	mov	r0, r2
   14e08:	ldr	r2, [sp, #48]	; 0x30
   14e0c:	str	r1, [sp, #44]	; 0x2c
   14e10:	mov	r1, r2
   14e14:	movw	r2, #520	; 0x208
   14e18:	bl	126ac <memcpy@plt>
   14e1c:	ldr	r0, [sp, #44]	; 0x2c
   14e20:	bl	12970 <coda_cursor_use_base_type_of_special_type@plt>
   14e24:	cmp	r0, #0
   14e28:	beq	14e38 <print_debug_data@@Base+0x1020>
   14e2c:	ldr	r0, [pc, #456]	; 14ffc <print_debug_data@@Base+0x11e4>
   14e30:	ldr	r0, [pc, r0]
   14e34:	blx	r0
   14e38:	ldr	r1, [fp, #-16]
   14e3c:	add	r0, sp, #288	; 0x120
   14e40:	bl	1405c <print_debug_data@@Base+0x244>
   14e44:	ldr	r0, [fp, #-380]	; 0xfffffe84
   14e48:	bl	12598 <coda_type_get_special_type_name@plt>
   14e4c:	ldr	lr, [pc, #792]	; 1516c <print_debug_data@@Base+0x1354>
   14e50:	add	lr, pc, lr
   14e54:	str	r0, [sp, #40]	; 0x28
   14e58:	mov	r0, lr
   14e5c:	ldr	r1, [sp, #40]	; 0x28
   14e60:	bl	15170 <print_debug_data@@Base+0x1358>
   14e64:	ldr	r1, [fp, #-380]	; 0xfffffe84
   14e68:	cmp	r1, #3
   14e6c:	str	r0, [sp, #36]	; 0x24
   14e70:	str	r1, [sp, #32]
   14e74:	bhi	14fd4 <print_debug_data@@Base+0x11bc>
   14e78:	add	r0, pc, #8
   14e7c:	ldr	r1, [sp, #32]
   14e80:	ldr	r2, [r0, r1, lsl #2]
   14e84:	add	pc, r0, r2
   14e88:	andeq	r0, r0, r0, lsl r0
   14e8c:	andeq	r0, r0, r4, lsr #32
   14e90:	andeq	r0, r0, r0, rrx
   14e94:	andeq	r0, r0, r8, lsl #2
   14e98:	ldr	r0, [pc, #388]	; 15024 <print_debug_data@@Base+0x120c>
   14e9c:	add	r0, pc, r0
   14ea0:	bl	151dc <print_debug_data@@Base+0x13c4>
   14ea4:	str	r0, [sp, #28]
   14ea8:	b	14fd4 <print_debug_data@@Base+0x11bc>
   14eac:	ldr	r0, [fp, #-12]
   14eb0:	add	r1, sp, #280	; 0x118
   14eb4:	bl	127fc <coda_cursor_read_double@plt>
   14eb8:	cmp	r0, #0
   14ebc:	beq	14ecc <print_debug_data@@Base+0x10b4>
   14ec0:	ldr	r0, [pc, #340]	; 1501c <print_debug_data@@Base+0x1204>
   14ec4:	ldr	r0, [pc, r0]
   14ec8:	blx	r0
   14ecc:	ldr	r0, [pc, #332]	; 15020 <print_debug_data@@Base+0x1208>
   14ed0:	add	r0, pc, r0
   14ed4:	vldr	d16, [sp, #280]	; 0x118
   14ed8:	vmov	r2, r3, d16
   14edc:	bl	151dc <print_debug_data@@Base+0x13c4>
   14ee0:	str	r0, [sp, #24]
   14ee4:	b	14fd4 <print_debug_data@@Base+0x11bc>
   14ee8:	ldr	r0, [fp, #-12]
   14eec:	add	r1, sp, #272	; 0x110
   14ef0:	bl	127fc <coda_cursor_read_double@plt>
   14ef4:	cmp	r0, #0
   14ef8:	beq	14f08 <print_debug_data@@Base+0x10f0>
   14efc:	ldr	r0, [pc, #260]	; 15008 <print_debug_data@@Base+0x11f0>
   14f00:	ldr	r0, [pc, r0]
   14f04:	blx	r0
   14f08:	vldr	d0, [sp, #272]	; 0x110
   14f0c:	bl	12808 <coda_isNaN@plt>
   14f10:	cmp	r0, #0
   14f14:	bne	14f28 <print_debug_data@@Base+0x1110>
   14f18:	vldr	d0, [sp, #272]	; 0x110
   14f1c:	bl	126b8 <coda_isInf@plt>
   14f20:	cmp	r0, #0
   14f24:	beq	14f44 <print_debug_data@@Base+0x112c>
   14f28:	ldr	r0, [pc, #232]	; 15018 <print_debug_data@@Base+0x1200>
   14f2c:	add	r0, pc, r0
   14f30:	vldr	d16, [sp, #272]	; 0x110
   14f34:	vmov	r2, r3, d16
   14f38:	bl	151dc <print_debug_data@@Base+0x13c4>
   14f3c:	str	r0, [sp, #20]
   14f40:	b	14f8c <print_debug_data@@Base+0x1174>
   14f44:	ldr	r0, [pc, #192]	; 1500c <print_debug_data@@Base+0x11f4>
   14f48:	add	r0, pc, r0
   14f4c:	add	r1, sp, #245	; 0xf5
   14f50:	vldr	d0, [sp, #272]	; 0x110
   14f54:	bl	12634 <coda_time_double_to_string@plt>
   14f58:	cmp	r0, #0
   14f5c:	beq	14f74 <print_debug_data@@Base+0x115c>
   14f60:	ldr	r0, [pc, #172]	; 15014 <print_debug_data@@Base+0x11fc>
   14f64:	add	r0, pc, r0
   14f68:	bl	151dc <print_debug_data@@Base+0x13c4>
   14f6c:	str	r0, [sp, #16]
   14f70:	b	14f88 <print_debug_data@@Base+0x1170>
   14f74:	ldr	r0, [pc, #148]	; 15010 <print_debug_data@@Base+0x11f8>
   14f78:	add	r0, pc, r0
   14f7c:	add	r1, sp, #245	; 0xf5
   14f80:	bl	151dc <print_debug_data@@Base+0x13c4>
   14f84:	str	r0, [sp, #12]
   14f88:	b	14f8c <print_debug_data@@Base+0x1174>
   14f8c:	b	14fd4 <print_debug_data@@Base+0x11bc>
   14f90:	ldr	r0, [fp, #-12]
   14f94:	add	r1, sp, #232	; 0xe8
   14f98:	add	r2, sp, #224	; 0xe0
   14f9c:	bl	12898 <coda_cursor_read_complex_double_split@plt>
   14fa0:	cmp	r0, #0
   14fa4:	beq	14fb4 <print_debug_data@@Base+0x119c>
   14fa8:	ldr	r0, [pc, #80]	; 15000 <print_debug_data@@Base+0x11e8>
   14fac:	ldr	r0, [pc, r0]
   14fb0:	blx	r0
   14fb4:	ldr	r0, [pc, #72]	; 15004 <print_debug_data@@Base+0x11ec>
   14fb8:	add	r0, pc, r0
   14fbc:	vldr	d16, [sp, #232]	; 0xe8
   14fc0:	vldr	d17, [sp, #224]	; 0xe0
   14fc4:	vmov	r2, r3, d16
   14fc8:	vstr	d17, [sp]
   14fcc:	bl	151dc <print_debug_data@@Base+0x13c4>
   14fd0:	str	r0, [sp, #8]
   14fd4:	b	14fd8 <print_debug_data@@Base+0x11c0>
   14fd8:	sub	sp, fp, #8
   14fdc:	pop	{r4, r5, fp, pc}
   14fe0:	andeq	sp, r1, r0, asr r1
   14fe4:	andeq	sp, r1, r8, lsr #2
   14fe8:	andeq	sp, r1, r8, lsr #2
   14fec:	andeq	sp, r1, r4, asr r1
   14ff0:	andeq	sl, r0, lr, lsr pc
   14ff4:	andeq	sp, r1, ip, lsr #1
   14ff8:	strdeq	ip, [r1], -r8
   14ffc:	andeq	ip, r1, r8, lsr #7
   15000:	andeq	ip, r1, ip, lsr #4
   15004:	andeq	sl, r0, r6, asr #2
   15008:	ldrdeq	ip, [r1], -r8
   1500c:	andeq	sl, r0, sl, lsl #1
   15010:	andeq	sl, r0, r0, ror #16
   15014:	andeq	sl, r0, pc, ror r1
   15018:	andeq	sl, r0, pc, lsr #3
   1501c:	andeq	ip, r1, r4, lsl r3
   15020:	andeq	sl, r0, ip, lsl #4
   15024:	andeq	fp, r0, pc, lsl #21
   15028:	andeq	ip, r1, r4, asr #17
   1502c:	muleq	r1, r8, r8
   15030:	andeq	ip, r1, r4, asr #16
   15034:	andeq	sl, r0, r4, ror #10
   15038:	andeq	sl, r0, r1, lsr #13
   1503c:	andeq	ip, r1, ip, lsl r8
   15040:	andeq	sl, r0, pc, lsl #13
   15044:	andeq	sl, r0, r4, ror #24
   15048:			; <UNDEFINED> instruction: 0x0001c7bc
   1504c:	strdeq	sl, [r0], -ip
   15050:	andeq	sl, r0, r9, ror #4
   15054:	strdeq	sl, [r0], -lr
   15058:	muleq	r1, r4, r4
   1505c:	andeq	sl, r0, r4, ror #6
   15060:	andeq	sl, r0, lr, lsr r3
   15064:	andeq	ip, r1, r4, ror #9
   15068:	andeq	sl, r0, r5, asr #21
   1506c:	andeq	ip, r1, r4, lsr r5
   15070:	andeq	sl, r0, r5, lsl fp
   15074:	andeq	ip, r1, ip, ror #10
   15078:	andeq	sl, r0, sp, lsl r4
   1507c:	andeq	ip, r1, r4, lsr #11
   15080:	andeq	sl, r0, r0, asr r4
   15084:	andeq	ip, r1, r0, asr #14
   15088:			; <UNDEFINED> instruction: 0x0001c6bc
   1508c:	ldrdeq	sl, [r0], -r8
   15090:	andeq	sl, r0, r5, lsl r5
   15094:	andeq	ip, r1, ip, ror r6
   15098:	andeq	sl, r0, r4, lsr #8
   1509c:	ldrdeq	fp, [r0], -r3
   150a0:	andeq	ip, r1, ip, lsl ip
   150a4:	andeq	ip, r1, ip, lsl #23
   150a8:	andeq	sl, r0, lr, ror #22
   150ac:	andeq	ip, r1, r0, lsl fp
   150b0:	ldrdeq	sl, [r0], -pc	; <UNPREDICTABLE>
   150b4:			; <UNDEFINED> instruction: 0x0001cab0
   150b8:	andeq	sl, r0, r4, lsl #17
   150bc:	andeq	ip, r1, r8, lsr sl
   150c0:	andeq	ip, r1, r0, ror #20
   150c4:	andeq	ip, r0, r3, lsl #3
   150c8:	andeq	ip, r1, ip, lsl #20
   150cc:	andeq	sl, r0, r4, lsl #16
   150d0:	andeq	ip, r1, r0, lsl #20
   150d4:	andeq	ip, r1, r0, lsl r9
   150d8:	andeq	sl, r0, r5, ror r9
   150dc:	andeq	sl, r0, r6, lsl #22
   150e0:	andeq	sp, r1, r0, asr r0
   150e4:	andeq	sp, r1, r4, lsr #32
   150e8:	andeq	sp, r1, r4
   150ec:	andeq	ip, r1, r0, lsr #28
   150f0:	andeq	ip, r1, r4, ror #27
   150f4:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   150f8:	andeq	fp, r0, r2, asr #6
   150fc:	muleq	r1, ip, sp
   15100:	andeq	sl, r0, r0, ror fp
   15104:	andeq	ip, r1, r4, lsr #26
   15108:	andeq	ip, r1, ip, asr #26
   1510c:	andeq	ip, r0, pc, ror #8
   15110:	strdeq	ip, [r1], -r8
   15114:	strdeq	sl, [r0], -r0
   15118:	andeq	ip, r1, ip, ror #25
   1511c:	andeq	ip, r1, ip, ror #24
   15120:	ldrdeq	ip, [r1], -r8
   15124:			; <UNDEFINED> instruction: 0x0001cfb4
   15128:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1512c:	andeq	ip, r1, ip, lsr #31
   15130:	strdeq	fp, [r0], -r2
   15134:	andeq	ip, r1, ip, asr #30
   15138:	andeq	sl, r0, r0, lsr #26
   1513c:	ldrdeq	ip, [r1], -r4
   15140:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   15144:	andeq	ip, r0, pc, lsl r6
   15148:	andeq	ip, r1, r8, lsr #29
   1514c:	andeq	sl, r0, r0, lsr #25
   15150:	muleq	r1, ip, lr
   15154:	andeq	sl, r0, r0, asr #26
   15158:	muleq	r0, r0, fp
   1515c:	andeq	sl, r0, r4, lsr #17
   15160:	andeq	sl, r0, r4, asr #21
   15164:	strdeq	sl, [r0], -pc	; <UNPREDICTABLE>
   15168:	andeq	sl, r0, r2, asr #22
   1516c:	andeq	sl, r0, r6, lsl #5
   15170:	sub	sp, sp, #12
   15174:	push	{fp, lr}
   15178:	mov	fp, sp
   1517c:	sub	sp, sp, #20
   15180:	str	r3, [fp, #16]
   15184:	str	r2, [fp, #12]
   15188:	str	r1, [fp, #8]
   1518c:	str	r0, [fp, #-4]
   15190:	bl	15434 <print_debug_data@@Base+0x161c>
   15194:	add	r0, fp, #8
   15198:	str	r0, [sp, #8]
   1519c:	ldr	r0, [pc, #52]	; 151d8 <print_debug_data@@Base+0x13c0>
   151a0:	ldr	r0, [pc, r0]
   151a4:	ldr	r0, [r0]
   151a8:	ldr	r1, [fp, #-4]
   151ac:	ldr	r2, [sp, #8]
   151b0:	bl	12904 <vfprintf@plt>
   151b4:	str	r0, [fp, #-8]
   151b8:	add	r0, sp, #8
   151bc:	ldr	r1, [fp, #-8]
   151c0:	str	r0, [sp, #4]
   151c4:	mov	r0, r1
   151c8:	mov	sp, fp
   151cc:	pop	{fp, lr}
   151d0:	add	sp, sp, #12
   151d4:	bx	lr
   151d8:	andeq	ip, r1, r8, lsl r0
   151dc:	sub	sp, sp, #12
   151e0:	push	{fp, lr}
   151e4:	mov	fp, sp
   151e8:	sub	sp, sp, #20
   151ec:	str	r3, [fp, #16]
   151f0:	str	r2, [fp, #12]
   151f4:	str	r1, [fp, #8]
   151f8:	str	r0, [fp, #-4]
   151fc:	add	r0, fp, #8
   15200:	str	r0, [sp, #8]
   15204:	ldr	r0, [pc, #52]	; 15240 <print_debug_data@@Base+0x1428>
   15208:	ldr	r0, [pc, r0]
   1520c:	ldr	r0, [r0]
   15210:	ldr	r1, [fp, #-4]
   15214:	ldr	r2, [sp, #8]
   15218:	bl	12904 <vfprintf@plt>
   1521c:	str	r0, [fp, #-8]
   15220:	add	r0, sp, #8
   15224:	ldr	r1, [fp, #-8]
   15228:	str	r0, [sp, #4]
   1522c:	mov	r0, r1
   15230:	mov	sp, fp
   15234:	pop	{fp, lr}
   15238:	add	sp, sp, #12
   1523c:	bx	lr
   15240:			; <UNDEFINED> instruction: 0x0001bfb0
   15244:	push	{fp, lr}
   15248:	mov	fp, sp
   1524c:	sub	sp, sp, #64	; 0x40
   15250:	str	r0, [fp, #-4]
   15254:	str	r1, [fp, #-8]
   15258:	movw	r0, #0
   1525c:	str	r0, [fp, #-12]
   15260:	ldr	r0, [fp, #-12]
   15264:	ldr	r1, [fp, #-8]
   15268:	cmp	r0, r1
   1526c:	bge	15404 <print_debug_data@@Base+0x15ec>
   15270:	ldr	r0, [fp, #-4]
   15274:	ldr	r1, [fp, #-12]
   15278:	ldrb	r0, [r0, r1]
   1527c:	strb	r0, [fp, #-13]
   15280:	ldrb	r0, [fp, #-13]
   15284:	mov	r1, r0
   15288:	cmp	r0, #7
   1528c:	str	r1, [fp, #-20]	; 0xffffffec
   15290:	beq	15308 <print_debug_data@@Base+0x14f0>
   15294:	b	15298 <print_debug_data@@Base+0x1480>
   15298:	ldr	r0, [fp, #-20]	; 0xffffffec
   1529c:	cmp	r0, #8
   152a0:	beq	1531c <print_debug_data@@Base+0x1504>
   152a4:	b	152a8 <print_debug_data@@Base+0x1490>
   152a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   152ac:	cmp	r0, #9
   152b0:	beq	15330 <print_debug_data@@Base+0x1518>
   152b4:	b	152b8 <print_debug_data@@Base+0x14a0>
   152b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   152bc:	cmp	r0, #10
   152c0:	beq	15344 <print_debug_data@@Base+0x152c>
   152c4:	b	152c8 <print_debug_data@@Base+0x14b0>
   152c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   152cc:	cmp	r0, #11
   152d0:	beq	15358 <print_debug_data@@Base+0x1540>
   152d4:	b	152d8 <print_debug_data@@Base+0x14c0>
   152d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   152dc:	cmp	r0, #12
   152e0:	beq	1536c <print_debug_data@@Base+0x1554>
   152e4:	b	152e8 <print_debug_data@@Base+0x14d0>
   152e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   152ec:	cmp	r0, #13
   152f0:	beq	15380 <print_debug_data@@Base+0x1568>
   152f4:	b	152f8 <print_debug_data@@Base+0x14e0>
   152f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   152fc:	cmp	r0, #92	; 0x5c
   15300:	beq	15394 <print_debug_data@@Base+0x157c>
   15304:	b	153a8 <print_debug_data@@Base+0x1590>
   15308:	ldr	r0, [pc, #280]	; 15428 <print_debug_data@@Base+0x1610>
   1530c:	add	r0, pc, r0
   15310:	bl	151dc <print_debug_data@@Base+0x13c4>
   15314:	str	r0, [fp, #-24]	; 0xffffffe8
   15318:	b	153f0 <print_debug_data@@Base+0x15d8>
   1531c:	ldr	r0, [pc, #256]	; 15424 <print_debug_data@@Base+0x160c>
   15320:	add	r0, pc, r0
   15324:	bl	151dc <print_debug_data@@Base+0x13c4>
   15328:	str	r0, [fp, #-28]	; 0xffffffe4
   1532c:	b	153f0 <print_debug_data@@Base+0x15d8>
   15330:	ldr	r0, [pc, #232]	; 15420 <print_debug_data@@Base+0x1608>
   15334:	add	r0, pc, r0
   15338:	bl	151dc <print_debug_data@@Base+0x13c4>
   1533c:	str	r0, [sp, #32]
   15340:	b	153f0 <print_debug_data@@Base+0x15d8>
   15344:	ldr	r0, [pc, #208]	; 1541c <print_debug_data@@Base+0x1604>
   15348:	add	r0, pc, r0
   1534c:	bl	151dc <print_debug_data@@Base+0x13c4>
   15350:	str	r0, [sp, #28]
   15354:	b	153f0 <print_debug_data@@Base+0x15d8>
   15358:	ldr	r0, [pc, #184]	; 15418 <print_debug_data@@Base+0x1600>
   1535c:	add	r0, pc, r0
   15360:	bl	151dc <print_debug_data@@Base+0x13c4>
   15364:	str	r0, [sp, #24]
   15368:	b	153f0 <print_debug_data@@Base+0x15d8>
   1536c:	ldr	r0, [pc, #160]	; 15414 <print_debug_data@@Base+0x15fc>
   15370:	add	r0, pc, r0
   15374:	bl	151dc <print_debug_data@@Base+0x13c4>
   15378:	str	r0, [sp, #20]
   1537c:	b	153f0 <print_debug_data@@Base+0x15d8>
   15380:	ldr	r0, [pc, #136]	; 15410 <print_debug_data@@Base+0x15f8>
   15384:	add	r0, pc, r0
   15388:	bl	151dc <print_debug_data@@Base+0x13c4>
   1538c:	str	r0, [sp, #16]
   15390:	b	153f0 <print_debug_data@@Base+0x15d8>
   15394:	ldr	r0, [pc, #112]	; 1540c <print_debug_data@@Base+0x15f4>
   15398:	add	r0, pc, r0
   1539c:	bl	151dc <print_debug_data@@Base+0x13c4>
   153a0:	str	r0, [sp, #12]
   153a4:	b	153f0 <print_debug_data@@Base+0x15d8>
   153a8:	ldrb	r0, [fp, #-13]
   153ac:	cmp	r0, #32
   153b0:	blt	153d8 <print_debug_data@@Base+0x15c0>
   153b4:	ldrb	r0, [fp, #-13]
   153b8:	cmp	r0, #126	; 0x7e
   153bc:	bgt	153d8 <print_debug_data@@Base+0x15c0>
   153c0:	ldr	r0, [pc, #104]	; 15430 <print_debug_data@@Base+0x1618>
   153c4:	add	r0, pc, r0
   153c8:	ldrb	r1, [fp, #-13]
   153cc:	bl	151dc <print_debug_data@@Base+0x13c4>
   153d0:	str	r0, [sp, #8]
   153d4:	b	153ec <print_debug_data@@Base+0x15d4>
   153d8:	ldr	r0, [pc, #76]	; 1542c <print_debug_data@@Base+0x1614>
   153dc:	add	r0, pc, r0
   153e0:	ldrb	r1, [fp, #-13]
   153e4:	bl	151dc <print_debug_data@@Base+0x13c4>
   153e8:	str	r0, [sp, #4]
   153ec:	b	153f0 <print_debug_data@@Base+0x15d8>
   153f0:	b	153f4 <print_debug_data@@Base+0x15dc>
   153f4:	ldr	r0, [fp, #-12]
   153f8:	add	r0, r0, #1
   153fc:	str	r0, [fp, #-12]
   15400:	b	15260 <print_debug_data@@Base+0x1448>
   15404:	mov	sp, fp
   15408:	pop	{fp, pc}
   1540c:	andeq	r9, r0, r4, ror #23
   15410:	strdeq	r9, [r0], -r5
   15414:	andeq	r9, r0, r6, lsl #24
   15418:	andeq	r9, r0, r7, lsl ip
   1541c:	andeq	r9, r0, r8, lsr #24
   15420:	andeq	r9, r0, r9, lsr ip
   15424:	andeq	r9, r0, sl, asr #24
   15428:	andeq	r9, r0, fp, asr ip
   1542c:	andeq	r9, r0, r3, lsr #23
   15430:	andeq	r9, r0, r9, lsl #22
   15434:	push	{fp, lr}
   15438:	mov	fp, sp
   1543c:	sub	sp, sp, #8
   15440:	ldr	r0, [pc, #132]	; 154cc <print_debug_data@@Base+0x16b4>
   15444:	add	r0, pc, r0
   15448:	ldr	r0, [r0]
   1544c:	cmp	r0, #0
   15450:	blt	15458 <print_debug_data@@Base+0x1640>
   15454:	b	15478 <print_debug_data@@Base+0x1660>
   15458:	ldr	r0, [pc, #112]	; 154d0 <print_debug_data@@Base+0x16b8>
   1545c:	add	r0, pc, r0
   15460:	ldr	r1, [pc, #108]	; 154d4 <print_debug_data@@Base+0x16bc>
   15464:	add	r1, pc, r1
   15468:	ldr	r2, [pc, #104]	; 154d8 <print_debug_data@@Base+0x16c0>
   1546c:	add	r3, pc, r2
   15470:	movw	r2, #44	; 0x2c
   15474:	bl	129f4 <__assert_fail@plt>
   15478:	ldr	r0, [pc, #92]	; 154dc <print_debug_data@@Base+0x16c4>
   1547c:	add	r0, pc, r0
   15480:	ldr	r0, [r0]
   15484:	str	r0, [sp, #4]
   15488:	ldr	r0, [sp, #4]
   1548c:	cmp	r0, #0
   15490:	ble	154c4 <print_debug_data@@Base+0x16ac>
   15494:	ldr	r0, [pc, #68]	; 154e0 <print_debug_data@@Base+0x16c8>
   15498:	add	r1, pc, r0
   1549c:	ldr	r0, [pc, #64]	; 154e4 <print_debug_data@@Base+0x16cc>
   154a0:	ldr	r0, [pc, r0]
   154a4:	ldr	r0, [r0]
   154a8:	bl	12814 <fprintf@plt>
   154ac:	str	r0, [sp]
   154b0:	ldr	r0, [sp, #4]
   154b4:	mvn	r1, #0
   154b8:	add	r0, r0, r1
   154bc:	str	r0, [sp, #4]
   154c0:	b	15488 <print_debug_data@@Base+0x1670>
   154c4:	mov	sp, fp
   154c8:	pop	{fp, pc}
   154cc:	ldrdeq	fp, [r1], -r8
   154d0:	andeq	r9, r0, sp, lsr #25
   154d4:			; <UNDEFINED> instruction: 0x00009bb1
   154d8:	andeq	r9, r0, r9, lsr #25
   154dc:	andeq	fp, r1, r0, lsr #27
   154e0:	andeq	r9, r0, r7, lsr fp
   154e4:	andeq	fp, r1, r8, lsl sp

000154e8 <dim_info_init@@Base>:
   154e8:	ldr	r0, [pc, #24]	; 15508 <dim_info_init@@Base+0x20>
   154ec:	ldr	r0, [pc, r0]
   154f0:	movw	r1, #0
   154f4:	str	r1, [r0]
   154f8:	str	r1, [r0, #68]	; 0x44
   154fc:	mvn	r1, #0
   15500:	str	r1, [r0, #104]	; 0x68
   15504:	bx	lr
   15508:	andeq	fp, r1, r4, lsl #26

0001550c <dim_info_done@@Base>:
   1550c:	bx	lr

00015510 <print_all_distinct_dims@@Base>:
   15510:	push	{fp, lr}
   15514:	mov	fp, sp
   15518:	sub	sp, sp, #80	; 0x50
   1551c:	ldr	r1, [pc, #960]	; 158e4 <print_all_distinct_dims@@Base+0x3d4>
   15520:	ldr	r1, [pc, r1]
   15524:	str	r0, [fp, #-4]
   15528:	ldr	r0, [fp, #-4]
   1552c:	ldr	r1, [r1]
   15530:	cmp	r0, r1
   15534:	bge	1553c <print_all_distinct_dims@@Base+0x2c>
   15538:	b	1555c <print_all_distinct_dims@@Base+0x4c>
   1553c:	ldr	r0, [pc, #932]	; 158e8 <print_all_distinct_dims@@Base+0x3d8>
   15540:	add	r0, pc, r0
   15544:	ldr	r1, [pc, #928]	; 158ec <print_all_distinct_dims@@Base+0x3dc>
   15548:	add	r1, pc, r1
   1554c:	ldr	r2, [pc, #924]	; 158f0 <print_all_distinct_dims@@Base+0x3e0>
   15550:	add	r3, pc, r2
   15554:	movw	r2, #50	; 0x32
   15558:	bl	129f4 <__assert_fail@plt>
   1555c:	ldr	r0, [pc, #912]	; 158f4 <print_all_distinct_dims@@Base+0x3e4>
   15560:	ldr	r0, [pc, r0]
   15564:	add	r0, r0, #72	; 0x48
   15568:	ldr	r1, [fp, #-4]
   1556c:	ldr	r2, [pc, #944]	; 15924 <print_all_distinct_dims@@Base+0x414>
   15570:	ldr	r2, [pc, r2]
   15574:	add	r1, r2, r1, lsl #2
   15578:	add	r1, r1, #72	; 0x48
   1557c:	ldr	r1, [r1]
   15580:	cmp	r1, #0
   15584:	str	r0, [fp, #-16]
   15588:	bne	15590 <print_all_distinct_dims@@Base+0x80>
   1558c:	b	158dc <print_all_distinct_dims@@Base+0x3cc>
   15590:	ldr	r0, [fp, #-4]
   15594:	ldr	r1, [pc, #908]	; 15928 <print_all_distinct_dims@@Base+0x418>
   15598:	ldr	r1, [pc, r1]
   1559c:	add	r0, r1, r0, lsl #2
   155a0:	ldr	r0, [r0, #4]
   155a4:	add	r0, r0, #1
   155a8:	lsl	r0, r0, #2
   155ac:	bl	12784 <malloc@plt>
   155b0:	str	r0, [fp, #-8]
   155b4:	ldr	r0, [fp, #-8]
   155b8:	movw	r1, #0
   155bc:	cmp	r0, r1
   155c0:	bne	1560c <print_all_distinct_dims@@Base+0xfc>
   155c4:	ldr	r0, [pc, #816]	; 158fc <print_all_distinct_dims@@Base+0x3ec>
   155c8:	add	r1, pc, r0
   155cc:	ldr	r0, [pc, #812]	; 15900 <print_all_distinct_dims@@Base+0x3f0>
   155d0:	add	r3, pc, r0
   155d4:	ldr	r0, [fp, #-4]
   155d8:	ldr	r2, [pc, #844]	; 1592c <print_all_distinct_dims@@Base+0x41c>
   155dc:	ldr	r2, [pc, r2]
   155e0:	add	r0, r2, r0, lsl #2
   155e4:	ldr	r0, [r0, #4]
   155e8:	add	r0, r0, #1
   155ec:	lsl	r2, r0, #2
   155f0:	mvn	r0, #0
   155f4:	movw	ip, #61	; 0x3d
   155f8:	str	ip, [sp]
   155fc:	bl	12610 <coda_set_error@plt>
   15600:	ldr	r0, [pc, #752]	; 158f8 <print_all_distinct_dims@@Base+0x3e8>
   15604:	ldr	r0, [pc, r0]
   15608:	blx	r0
   1560c:	ldr	r0, [fp, #-8]
   15610:	ldr	r1, [fp, #-4]
   15614:	ldr	r2, [pc, #788]	; 15930 <print_all_distinct_dims@@Base+0x420>
   15618:	ldr	r2, [pc, r2]
   1561c:	add	r1, r2, r1, lsl #2
   15620:	ldr	r1, [r1, #4]
   15624:	add	r1, r1, #1
   15628:	lsl	r2, r1, #2
   1562c:	movw	r1, #0
   15630:	and	r1, r1, #255	; 0xff
   15634:	bl	12868 <memset@plt>
   15638:	movw	r0, #0
   1563c:	str	r0, [fp, #-12]
   15640:	ldr	r0, [fp, #-12]
   15644:	ldr	r1, [fp, #-4]
   15648:	ldr	r2, [pc, #740]	; 15934 <print_all_distinct_dims@@Base+0x424>
   1564c:	ldr	r2, [pc, r2]
   15650:	add	r1, r2, r1, lsl #2
   15654:	ldr	r1, [r1, #140]	; 0x8c
   15658:	add	r1, r2, r1, lsl #3
   1565c:	ldr	r2, [r1, #232]	; 0xe8
   15660:	ldr	r1, [r1, #236]	; 0xec
   15664:	subs	r2, r0, r2
   15668:	rscs	r0, r1, r0, asr #31
   1566c:	str	r2, [fp, #-20]	; 0xffffffec
   15670:	str	r0, [fp, #-24]	; 0xffffffe8
   15674:	bge	156e8 <print_all_distinct_dims@@Base+0x1d8>
   15678:	b	1567c <print_all_distinct_dims@@Base+0x16c>
   1567c:	ldr	r0, [fp, #-4]
   15680:	ldr	r1, [pc, #688]	; 15938 <print_all_distinct_dims@@Base+0x428>
   15684:	ldr	r1, [pc, r1]
   15688:	add	r0, r1, r0, lsl #2
   1568c:	ldr	r0, [r0, #108]	; 0x6c
   15690:	ldr	r1, [fp, #-12]
   15694:	add	r0, r0, r1, lsl #2
   15698:	ldr	r0, [r0]
   1569c:	cmp	r0, #0
   156a0:	blt	156d4 <print_all_distinct_dims@@Base+0x1c4>
   156a4:	ldr	r0, [fp, #-8]
   156a8:	ldr	r1, [fp, #-4]
   156ac:	ldr	r2, [pc, #648]	; 1593c <print_all_distinct_dims@@Base+0x42c>
   156b0:	ldr	r2, [pc, r2]
   156b4:	add	r1, r2, r1, lsl #2
   156b8:	ldr	r1, [r1, #108]	; 0x6c
   156bc:	ldr	r2, [fp, #-12]
   156c0:	ldr	r1, [r1, r2, lsl #2]
   156c4:	add	r0, r0, r1, lsl #2
   156c8:	ldr	r1, [r0]
   156cc:	add	r1, r1, #1
   156d0:	str	r1, [r0]
   156d4:	b	156d8 <print_all_distinct_dims@@Base+0x1c8>
   156d8:	ldr	r0, [fp, #-12]
   156dc:	add	r0, r0, #1
   156e0:	str	r0, [fp, #-12]
   156e4:	b	15640 <print_all_distinct_dims@@Base+0x130>
   156e8:	ldr	r0, [pc, #532]	; 15904 <print_all_distinct_dims@@Base+0x3f4>
   156ec:	ldr	r0, [pc, r0]
   156f0:	add	r0, r0, #36	; 0x24
   156f4:	ldr	r1, [fp, #-4]
   156f8:	add	r1, r1, #1
   156fc:	ldr	r2, [pc, #572]	; 15940 <print_all_distinct_dims@@Base+0x430>
   15700:	add	r2, pc, r2
   15704:	str	r0, [fp, #-28]	; 0xffffffe4
   15708:	mov	r0, r2
   1570c:	bl	125ec <printf@plt>
   15710:	ldr	r1, [fp, #-4]
   15714:	ldr	r2, [pc, #552]	; 15944 <print_all_distinct_dims@@Base+0x434>
   15718:	ldr	r2, [pc, r2]
   1571c:	add	r1, r2, r1, lsl #2
   15720:	add	r1, r1, #36	; 0x24
   15724:	ldr	r1, [r1]
   15728:	str	r1, [fp, #-12]
   1572c:	str	r0, [fp, #-32]	; 0xffffffe0
   15730:	ldr	r0, [pc, #464]	; 15908 <print_all_distinct_dims@@Base+0x3f8>
   15734:	ldr	r0, [pc, r0]
   15738:	add	r0, r0, #4
   1573c:	ldr	r1, [fp, #-12]
   15740:	ldr	r2, [fp, #-4]
   15744:	ldr	r3, [pc, #508]	; 15948 <print_all_distinct_dims@@Base+0x438>
   15748:	ldr	r3, [pc, r3]
   1574c:	add	r2, r3, r2, lsl #2
   15750:	add	r2, r2, #4
   15754:	ldr	r2, [r2]
   15758:	cmp	r1, r2
   1575c:	str	r0, [fp, #-36]	; 0xffffffdc
   15760:	bge	157a4 <print_all_distinct_dims@@Base+0x294>
   15764:	ldr	r0, [fp, #-8]
   15768:	ldr	r1, [fp, #-12]
   1576c:	add	r0, r0, r1, lsl #2
   15770:	ldr	r0, [r0]
   15774:	cmp	r0, #0
   15778:	ble	15790 <print_all_distinct_dims@@Base+0x280>
   1577c:	ldr	r0, [pc, #412]	; 15920 <print_all_distinct_dims@@Base+0x410>
   15780:	add	r0, pc, r0
   15784:	ldr	r1, [fp, #-12]
   15788:	bl	125ec <printf@plt>
   1578c:	str	r0, [sp, #40]	; 0x28
   15790:	b	15794 <print_all_distinct_dims@@Base+0x284>
   15794:	ldr	r0, [fp, #-12]
   15798:	add	r0, r0, #1
   1579c:	str	r0, [fp, #-12]
   157a0:	b	15730 <print_all_distinct_dims@@Base+0x220>
   157a4:	ldr	r0, [pc, #352]	; 1590c <print_all_distinct_dims@@Base+0x3fc>
   157a8:	ldr	r0, [pc, r0]
   157ac:	add	r0, r0, #36	; 0x24
   157b0:	ldr	r1, [fp, #-4]
   157b4:	ldr	r2, [pc, #400]	; 1594c <print_all_distinct_dims@@Base+0x43c>
   157b8:	ldr	r2, [pc, r2]
   157bc:	add	r1, r2, r1, lsl #2
   157c0:	ldr	r1, [r1, #4]
   157c4:	ldr	r3, [pc, #388]	; 15950 <print_all_distinct_dims@@Base+0x440>
   157c8:	add	r3, pc, r3
   157cc:	str	r0, [sp, #36]	; 0x24
   157d0:	mov	r0, r3
   157d4:	str	r2, [sp, #32]
   157d8:	bl	125ec <printf@plt>
   157dc:	ldr	r1, [pc, #368]	; 15954 <print_all_distinct_dims@@Base+0x444>
   157e0:	add	r1, pc, r1
   157e4:	str	r0, [sp, #28]
   157e8:	mov	r0, r1
   157ec:	bl	125ec <printf@plt>
   157f0:	ldr	r1, [fp, #-4]
   157f4:	ldr	r2, [sp, #32]
   157f8:	add	r1, r2, r1, lsl #2
   157fc:	add	r1, r1, #36	; 0x24
   15800:	ldr	r1, [r1]
   15804:	str	r1, [fp, #-12]
   15808:	str	r0, [sp, #24]
   1580c:	ldr	r0, [pc, #252]	; 15910 <print_all_distinct_dims@@Base+0x400>
   15810:	ldr	r0, [pc, r0]
   15814:	add	r0, r0, #4
   15818:	ldr	r1, [fp, #-12]
   1581c:	ldr	r2, [fp, #-4]
   15820:	ldr	r3, [pc, #304]	; 15958 <print_all_distinct_dims@@Base+0x448>
   15824:	ldr	r3, [pc, r3]
   15828:	add	r2, r3, r2, lsl #2
   1582c:	add	r2, r2, #4
   15830:	ldr	r2, [r2]
   15834:	cmp	r1, r2
   15838:	str	r0, [sp, #20]
   1583c:	bge	1588c <print_all_distinct_dims@@Base+0x37c>
   15840:	ldr	r0, [fp, #-8]
   15844:	ldr	r1, [fp, #-12]
   15848:	add	r0, r0, r1, lsl #2
   1584c:	ldr	r0, [r0]
   15850:	cmp	r0, #0
   15854:	ble	15878 <print_all_distinct_dims@@Base+0x368>
   15858:	ldr	r0, [pc, #188]	; 1591c <print_all_distinct_dims@@Base+0x40c>
   1585c:	add	r0, pc, r0
   15860:	ldr	r1, [fp, #-8]
   15864:	ldr	r2, [fp, #-12]
   15868:	add	r1, r1, r2, lsl #2
   1586c:	ldr	r1, [r1]
   15870:	bl	125ec <printf@plt>
   15874:	str	r0, [sp, #16]
   15878:	b	1587c <print_all_distinct_dims@@Base+0x36c>
   1587c:	ldr	r0, [fp, #-12]
   15880:	add	r0, r0, #1
   15884:	str	r0, [fp, #-12]
   15888:	b	1580c <print_all_distinct_dims@@Base+0x2fc>
   1588c:	ldr	r0, [pc, #132]	; 15918 <print_all_distinct_dims@@Base+0x408>
   15890:	add	r0, pc, r0
   15894:	ldr	r1, [fp, #-8]
   15898:	ldr	r2, [fp, #-4]
   1589c:	ldr	r3, [pc, #184]	; 1595c <print_all_distinct_dims@@Base+0x44c>
   158a0:	ldr	r3, [pc, r3]
   158a4:	add	r2, r3, r2, lsl #2
   158a8:	ldr	r2, [r2, #4]
   158ac:	add	r1, r1, r2, lsl #2
   158b0:	ldr	r1, [r1]
   158b4:	bl	125ec <printf@plt>
   158b8:	ldr	r1, [pc, #84]	; 15914 <print_all_distinct_dims@@Base+0x404>
   158bc:	add	r1, pc, r1
   158c0:	str	r0, [sp, #12]
   158c4:	mov	r0, r1
   158c8:	bl	125ec <printf@plt>
   158cc:	ldr	r1, [fp, #-8]
   158d0:	str	r0, [sp, #8]
   158d4:	mov	r0, r1
   158d8:	bl	12658 <free@plt>
   158dc:	mov	sp, fp
   158e0:	pop	{fp, pc}
   158e4:	ldrdeq	fp, [r1], -r0
   158e8:	andeq	r9, r0, r7, ror #23
   158ec:	strdeq	r9, [r0], -sl
   158f0:	andeq	r9, r0, r2, asr ip
   158f4:	muleq	r1, r0, ip
   158f8:	ldrdeq	fp, [r1], -r4
   158fc:	andeq	r9, r0, r8, lsl #18
   15900:	andeq	r9, r0, r2, ror fp
   15904:	andeq	fp, r1, r4, lsl #22
   15908:			; <UNDEFINED> instruction: 0x0001babc
   1590c:	andeq	fp, r1, r8, asr #20
   15910:	andeq	fp, r1, r0, ror #19
   15914:	andeq	fp, r0, pc, rrx
   15918:	andeq	r9, r0, r4, asr #18
   1591c:	andeq	r9, r0, r4, ror r9
   15920:	andeq	r9, r0, r0, asr sl
   15924:	andeq	fp, r1, r0, lsl #25
   15928:	andeq	fp, r1, r8, asr ip
   1592c:	andeq	fp, r1, r4, lsl ip
   15930:	ldrdeq	fp, [r1], -r8
   15934:	andeq	fp, r1, r4, lsr #23
   15938:	andeq	fp, r1, ip, ror #22
   1593c:	andeq	fp, r1, r0, asr #22
   15940:	andeq	r9, r0, r4, asr #21
   15944:	ldrdeq	fp, [r1], -r8
   15948:	andeq	fp, r1, r8, lsr #21
   1594c:	andeq	fp, r1, r8, lsr sl
   15950:	andeq	r9, r0, ip, lsl #20
   15954:	strdeq	r9, [r0], -r8
   15958:	andeq	fp, r1, ip, asr #19
   1595c:	andeq	fp, r1, r0, asr r9

00015960 <dim_enter_array@@Base>:
   15960:	push	{r4, r5, r6, r7, fp, lr}
   15964:	add	fp, sp, #16
   15968:	sub	sp, sp, #232	; 0xe8
   1596c:	ldr	r0, [pc, #3488]	; 16714 <dim_enter_array@@Base+0xdb4>
   15970:	ldr	r0, [pc, r0]
   15974:	add	r0, r0, #8
   15978:	ldr	r1, [pc, #3628]	; 167ac <dim_enter_array@@Base+0xe4c>
   1597c:	ldr	r1, [pc, r1]
   15980:	ldr	r2, [r1, #3360]	; 0xd20
   15984:	add	r2, r2, r2, lsl #2
   15988:	add	r2, r1, r2, lsl #4
   1598c:	add	r2, r2, #800	; 0x320
   15990:	str	r2, [fp, #-24]	; 0xffffffe8
   15994:	ldr	r2, [r1, #136]	; 0x88
   15998:	add	r1, r1, r2, lsl #2
   1599c:	add	r1, r1, #8
   159a0:	ldr	r1, [r1]
   159a4:	str	r0, [sp, #120]	; 0x78
   159a8:	mov	r0, r1
   159ac:	sub	r1, fp, #20
   159b0:	bl	12a00 <coda_type_get_class@plt>
   159b4:	cmp	r0, #0
   159b8:	beq	159c8 <dim_enter_array@@Base+0x68>
   159bc:	ldr	r0, [pc, #3412]	; 16718 <dim_enter_array@@Base+0xdb8>
   159c0:	ldr	r0, [pc, r0]
   159c4:	blx	r0
   159c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   159cc:	sub	r0, r0, #1
   159d0:	cmp	r0, #5
   159d4:	str	r0, [sp, #116]	; 0x74
   159d8:	bhi	15c3c <dim_enter_array@@Base+0x2dc>
   159dc:	add	r0, pc, #8
   159e0:	ldr	r1, [sp, #116]	; 0x74
   159e4:	ldr	r2, [r0, r1, lsl #2]
   159e8:	add	pc, r0, r2
   159ec:	andeq	r0, r0, r8, lsl r0
   159f0:	andeq	r0, r0, r0, asr r2
   159f4:	andeq	r0, r0, r0, asr r2
   159f8:	andeq	r0, r0, r0, asr r1
   159fc:			; <UNDEFINED> instruction: 0x000001b4
   15a00:	strheq	r0, [r0], -r8
   15a04:	sub	r2, fp, #88	; 0x58
   15a08:	ldr	r0, [pc, #3376]	; 16740 <dim_enter_array@@Base+0xde0>
   15a0c:	ldr	r0, [pc, r0]
   15a10:	add	r0, r0, #8
   15a14:	ldr	r1, [pc, #3476]	; 167b0 <dim_enter_array@@Base+0xe50>
   15a18:	ldr	r1, [pc, r1]
   15a1c:	ldr	r3, [r1, #136]	; 0x88
   15a20:	add	r1, r1, r3, lsl #2
   15a24:	add	r1, r1, #8
   15a28:	ldr	r1, [r1]
   15a2c:	str	r0, [sp, #112]	; 0x70
   15a30:	mov	r0, r1
   15a34:	sub	r1, fp, #92	; 0x5c
   15a38:	bl	12940 <coda_type_get_array_dim@plt>
   15a3c:	cmp	r0, #0
   15a40:	beq	15a50 <dim_enter_array@@Base+0xf0>
   15a44:	ldr	r0, [pc, #3320]	; 16744 <dim_enter_array@@Base+0xde4>
   15a48:	ldr	r0, [pc, r0]
   15a4c:	blx	r0
   15a50:	ldr	r0, [fp, #-92]	; 0xffffffa4
   15a54:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15a58:	str	r0, [r1, #4]
   15a5c:	movw	r0, #0
   15a60:	str	r0, [fp, #-56]	; 0xffffffc8
   15a64:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15a68:	ldr	r1, [fp, #-92]	; 0xffffffa4
   15a6c:	cmp	r0, r1
   15a70:	bge	15aa0 <dim_enter_array@@Base+0x140>
   15a74:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15a78:	sub	r1, fp, #88	; 0x58
   15a7c:	ldr	r1, [r1, r0, lsl #2]
   15a80:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15a84:	add	r2, r2, #8
   15a88:	add	r0, r2, r0, lsl #2
   15a8c:	str	r1, [r0]
   15a90:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15a94:	add	r0, r0, #1
   15a98:	str	r0, [fp, #-56]	; 0xffffffc8
   15a9c:	b	15a64 <dim_enter_array@@Base+0x104>
   15aa0:	b	15c5c <dim_enter_array@@Base+0x2fc>
   15aa4:	ldr	r0, [pc, #3200]	; 1672c <dim_enter_array@@Base+0xdcc>
   15aa8:	ldr	r0, [pc, r0]
   15aac:	add	r0, r0, #8
   15ab0:	ldr	r1, [pc, #3324]	; 167b4 <dim_enter_array@@Base+0xe54>
   15ab4:	ldr	r1, [pc, r1]
   15ab8:	ldr	r2, [r1, #136]	; 0x88
   15abc:	add	r1, r1, r2, lsl #2
   15ac0:	add	r1, r1, #8
   15ac4:	ldr	r1, [r1]
   15ac8:	str	r0, [sp, #108]	; 0x6c
   15acc:	mov	r0, r1
   15ad0:	sub	r1, fp, #96	; 0x60
   15ad4:	bl	12880 <coda_type_get_special_type@plt>
   15ad8:	cmp	r0, #0
   15adc:	beq	15aec <dim_enter_array@@Base+0x18c>
   15ae0:	ldr	r0, [pc, #3144]	; 16730 <dim_enter_array@@Base+0xdd0>
   15ae4:	ldr	r0, [pc, r0]
   15ae8:	blx	r0
   15aec:	ldr	r0, [fp, #-96]	; 0xffffffa0
   15af0:	cmp	r0, #3
   15af4:	bne	15b18 <dim_enter_array@@Base+0x1b8>
   15af8:	b	15afc <dim_enter_array@@Base+0x19c>
   15afc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15b00:	movw	r1, #1
   15b04:	str	r1, [r0, #4]
   15b08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15b0c:	movw	r1, #2
   15b10:	str	r1, [r0, #8]
   15b14:	b	15b38 <dim_enter_array@@Base+0x1d8>
   15b18:	ldr	r0, [pc, #3092]	; 16734 <dim_enter_array@@Base+0xdd4>
   15b1c:	add	r0, pc, r0
   15b20:	ldr	r1, [pc, #3088]	; 16738 <dim_enter_array@@Base+0xdd8>
   15b24:	add	r1, pc, r1
   15b28:	ldr	r2, [pc, #3084]	; 1673c <dim_enter_array@@Base+0xddc>
   15b2c:	add	r3, pc, r2
   15b30:	movw	r2, #349	; 0x15d
   15b34:	bl	129f4 <__assert_fail@plt>
   15b38:	b	15c5c <dim_enter_array@@Base+0x2fc>
   15b3c:	ldr	r0, [pc, #3040]	; 16724 <dim_enter_array@@Base+0xdc4>
   15b40:	ldr	r0, [pc, r0]
   15b44:	add	r0, r0, #8
   15b48:	ldr	r1, [pc, #3176]	; 167b8 <dim_enter_array@@Base+0xe58>
   15b4c:	ldr	r1, [pc, r1]
   15b50:	ldr	r2, [r1, #136]	; 0x88
   15b54:	add	r1, r1, r2, lsl #2
   15b58:	add	r1, r1, #8
   15b5c:	ldr	r1, [r1]
   15b60:	str	r0, [sp, #104]	; 0x68
   15b64:	mov	r0, r1
   15b68:	sub	r1, fp, #100	; 0x64
   15b6c:	bl	128bc <coda_type_get_string_length@plt>
   15b70:	cmp	r0, #0
   15b74:	beq	15b84 <dim_enter_array@@Base+0x224>
   15b78:	ldr	r0, [pc, #2984]	; 16728 <dim_enter_array@@Base+0xdc8>
   15b7c:	ldr	r0, [pc, r0]
   15b80:	blx	r0
   15b84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15b88:	movw	r1, #1
   15b8c:	str	r1, [r0, #4]
   15b90:	ldr	r0, [fp, #-100]	; 0xffffff9c
   15b94:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15b98:	str	r0, [r1, #8]
   15b9c:	b	15c5c <dim_enter_array@@Base+0x2fc>
   15ba0:	ldr	r0, [pc, #2932]	; 1671c <dim_enter_array@@Base+0xdbc>
   15ba4:	ldr	r0, [pc, r0]
   15ba8:	add	r0, r0, #8
   15bac:	ldr	r1, [pc, #3080]	; 167bc <dim_enter_array@@Base+0xe5c>
   15bb0:	ldr	r1, [pc, r1]
   15bb4:	ldr	r2, [r1, #136]	; 0x88
   15bb8:	add	r1, r1, r2, lsl #2
   15bbc:	add	r1, r1, #8
   15bc0:	ldr	r1, [r1]
   15bc4:	str	r0, [sp, #100]	; 0x64
   15bc8:	mov	r0, r1
   15bcc:	sub	r1, fp, #112	; 0x70
   15bd0:	bl	126c4 <coda_type_get_bit_size@plt>
   15bd4:	cmp	r0, #0
   15bd8:	beq	15be8 <dim_enter_array@@Base+0x288>
   15bdc:	ldr	r0, [pc, #2876]	; 16720 <dim_enter_array@@Base+0xdc0>
   15be0:	ldr	r0, [pc, r0]
   15be4:	blx	r0
   15be8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15bec:	mov	r1, #1
   15bf0:	str	r1, [r0, #4]
   15bf4:	ldr	r0, [fp, #-108]	; 0xffffff94
   15bf8:	cmp	r0, #0
   15bfc:	blt	15c2c <dim_enter_array@@Base+0x2cc>
   15c00:	b	15c04 <dim_enter_array@@Base+0x2a4>
   15c04:	ldr	r0, [fp, #-112]	; 0xffffff90
   15c08:	ldr	r1, [fp, #-108]	; 0xffffff94
   15c0c:	lsr	r2, r0, #3
   15c10:	orr	r1, r2, r1, lsl #29
   15c14:	add	r2, r1, #1
   15c18:	tst	r0, #7
   15c1c:	movne	r1, r2
   15c20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c24:	str	r1, [r0, #8]
   15c28:	b	15c38 <dim_enter_array@@Base+0x2d8>
   15c2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c30:	mvn	r1, #0
   15c34:	str	r1, [r0, #8]
   15c38:	b	15c5c <dim_enter_array@@Base+0x2fc>
   15c3c:	ldr	r0, [pc, #2908]	; 167a0 <dim_enter_array@@Base+0xe40>
   15c40:	add	r0, pc, r0
   15c44:	ldr	r1, [pc, #2904]	; 167a4 <dim_enter_array@@Base+0xe44>
   15c48:	add	r1, pc, r1
   15c4c:	ldr	r2, [pc, #2900]	; 167a8 <dim_enter_array@@Base+0xe48>
   15c50:	add	r3, pc, r2
   15c54:	movw	r2, #386	; 0x182
   15c58:	bl	129f4 <__assert_fail@plt>
   15c5c:	ldr	r0, [pc, #2788]	; 16748 <dim_enter_array@@Base+0xde8>
   15c60:	ldr	r0, [pc, r0]
   15c64:	ldr	r0, [r0]
   15c68:	cmp	r0, #0
   15c6c:	bne	15c94 <dim_enter_array@@Base+0x334>
   15c70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c74:	mvn	r1, #0
   15c78:	str	r1, [r0]
   15c7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c80:	movw	r1, #0
   15c84:	str	r1, [r0, #40]	; 0x28
   15c88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c8c:	str	r1, [r0, #44]	; 0x2c
   15c90:	b	1670c <dim_enter_array@@Base+0xdac>
   15c94:	ldr	r0, [pc, #2736]	; 1674c <dim_enter_array@@Base+0xdec>
   15c98:	ldr	r0, [pc, r0]
   15c9c:	ldr	r1, [r0]
   15ca0:	str	r1, [fp, #-52]	; 0xffffffcc
   15ca4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15ca8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15cac:	str	r1, [r2]
   15cb0:	ldr	r0, [r0]
   15cb4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15cb8:	ldr	r1, [r1, #4]
   15cbc:	add	r0, r0, r1
   15cc0:	cmp	r0, #8
   15cc4:	bgt	15ccc <dim_enter_array@@Base+0x36c>
   15cc8:	b	15cec <dim_enter_array@@Base+0x38c>
   15ccc:	ldr	r0, [pc, #2684]	; 16750 <dim_enter_array@@Base+0xdf0>
   15cd0:	add	r0, pc, r0
   15cd4:	ldr	r1, [pc, #2680]	; 16754 <dim_enter_array@@Base+0xdf4>
   15cd8:	add	r1, pc, r1
   15cdc:	ldr	r2, [pc, #2676]	; 16758 <dim_enter_array@@Base+0xdf8>
   15ce0:	add	r3, pc, r2
   15ce4:	movw	r2, #402	; 0x192
   15ce8:	bl	129f4 <__assert_fail@plt>
   15cec:	ldr	r0, [pc, #2664]	; 1675c <dim_enter_array@@Base+0xdfc>
   15cf0:	ldr	r0, [pc, r0]
   15cf4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15cf8:	ldr	r1, [r1, #4]
   15cfc:	ldr	r2, [r0]
   15d00:	add	r1, r2, r1
   15d04:	str	r1, [r0]
   15d08:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15d0c:	cmp	r0, #0
   15d10:	ble	15d50 <dim_enter_array@@Base+0x3f0>
   15d14:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15d18:	ldr	r1, [pc, #2720]	; 167c0 <dim_enter_array@@Base+0xe60>
   15d1c:	ldr	r1, [pc, r1]
   15d20:	add	r0, r1, r0, lsl #3
   15d24:	ldr	r2, [r0, #232]	; 0xe8
   15d28:	ldr	r0, [r0, #236]	; 0xec
   15d2c:	str	r0, [fp, #-28]	; 0xffffffe4
   15d30:	str	r2, [fp, #-32]	; 0xffffffe0
   15d34:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15d38:	add	r0, r1, r0, lsl #3
   15d3c:	ldr	r1, [r0, #296]	; 0x128
   15d40:	ldr	r0, [r0, #300]	; 0x12c
   15d44:	str	r0, [fp, #-36]	; 0xffffffdc
   15d48:	str	r1, [fp, #-40]	; 0xffffffd8
   15d4c:	b	15d68 <dim_enter_array@@Base+0x408>
   15d50:	mov	r0, #0
   15d54:	str	r0, [fp, #-28]	; 0xffffffe4
   15d58:	mov	r1, #1
   15d5c:	str	r1, [fp, #-32]	; 0xffffffe0
   15d60:	str	r0, [fp, #-36]	; 0xffffffdc
   15d64:	str	r1, [fp, #-40]	; 0xffffffd8
   15d68:	mov	r0, #0
   15d6c:	str	r0, [fp, #-44]	; 0xffffffd4
   15d70:	str	r0, [fp, #-48]	; 0xffffffd0
   15d74:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15d78:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15d7c:	subs	r0, r0, #1
   15d80:	sbcs	r1, r1, #0
   15d84:	str	r0, [sp, #96]	; 0x60
   15d88:	str	r1, [sp, #92]	; 0x5c
   15d8c:	blt	15e2c <dim_enter_array@@Base+0x4cc>
   15d90:	b	15d94 <dim_enter_array@@Base+0x434>
   15d94:	movw	r0, #0
   15d98:	str	r0, [fp, #-56]	; 0xffffffc8
   15d9c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15da0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15da4:	ldr	r1, [r1, #4]
   15da8:	cmp	r0, r1
   15dac:	bge	15e28 <dim_enter_array@@Base+0x4c8>
   15db0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15db4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   15db8:	add	r0, r0, r1, lsl #2
   15dbc:	ldr	r0, [r0, #8]
   15dc0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   15dc4:	add	r1, r2, r1
   15dc8:	ldr	r2, [pc, #2548]	; 167c4 <dim_enter_array@@Base+0xe64>
   15dcc:	ldr	r2, [pc, r2]
   15dd0:	add	r1, r2, r1, lsl #2
   15dd4:	str	r0, [r1, #4]
   15dd8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15ddc:	ldr	r1, [fp, #-56]	; 0xffffffc8
   15de0:	add	r0, r0, r1
   15de4:	add	r0, r2, r0, lsl #2
   15de8:	mov	r1, #0
   15dec:	str	r1, [r0, #72]	; 0x48
   15df0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15df4:	add	r0, r0, #8
   15df8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   15dfc:	add	r0, r0, r1, lsl #2
   15e00:	ldr	r0, [r0]
   15e04:	cmn	r0, #1
   15e08:	bne	15e14 <dim_enter_array@@Base+0x4b4>
   15e0c:	movw	r0, #1
   15e10:	str	r0, [fp, #-44]	; 0xffffffd4
   15e14:	b	15e18 <dim_enter_array@@Base+0x4b8>
   15e18:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15e1c:	add	r0, r0, #1
   15e20:	str	r0, [fp, #-56]	; 0xffffffc8
   15e24:	b	15d9c <dim_enter_array@@Base+0x43c>
   15e28:	b	15ea8 <dim_enter_array@@Base+0x548>
   15e2c:	movw	r0, #0
   15e30:	str	r0, [fp, #-56]	; 0xffffffc8
   15e34:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15e38:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15e3c:	ldr	r1, [r1, #4]
   15e40:	cmp	r0, r1
   15e44:	bge	15ea4 <dim_enter_array@@Base+0x544>
   15e48:	ldr	r0, [pc, #2320]	; 16760 <dim_enter_array@@Base+0xe00>
   15e4c:	ldr	r0, [pc, r0]
   15e50:	add	r0, r0, #72	; 0x48
   15e54:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15e58:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15e5c:	add	r1, r1, r2
   15e60:	ldr	r2, [pc, #2400]	; 167c8 <dim_enter_array@@Base+0xe68>
   15e64:	ldr	r2, [pc, r2]
   15e68:	add	r1, r2, r1, lsl #2
   15e6c:	mov	r3, #0
   15e70:	str	r3, [r1, #4]
   15e74:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15e78:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15e7c:	add	r1, r1, r3
   15e80:	add	r1, r2, r1, lsl #2
   15e84:	add	r1, r1, #72	; 0x48
   15e88:	movw	r2, #0
   15e8c:	str	r2, [r1]
   15e90:	str	r0, [sp, #88]	; 0x58
   15e94:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15e98:	add	r0, r0, #1
   15e9c:	str	r0, [fp, #-56]	; 0xffffffc8
   15ea0:	b	15e34 <dim_enter_array@@Base+0x4d4>
   15ea4:	b	15ea8 <dim_enter_array@@Base+0x548>
   15ea8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15eac:	cmp	r0, #0
   15eb0:	beq	161dc <dim_enter_array@@Base+0x87c>
   15eb4:	movw	r0, #0
   15eb8:	str	r0, [fp, #-56]	; 0xffffffc8
   15ebc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15ec0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15ec4:	ldr	r1, [r1, #4]
   15ec8:	cmp	r0, r1
   15ecc:	bge	16064 <dim_enter_array@@Base+0x704>
   15ed0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15ed4:	add	r0, r0, #8
   15ed8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   15edc:	add	r0, r0, r1, lsl #2
   15ee0:	ldr	r0, [r0]
   15ee4:	cmn	r0, #1
   15ee8:	bne	16004 <dim_enter_array@@Base+0x6a4>
   15eec:	ldr	r0, [pc, #2204]	; 16790 <dim_enter_array@@Base+0xe30>
   15ef0:	ldr	r0, [pc, r0]
   15ef4:	add	r0, r0, #108	; 0x6c
   15ef8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15efc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15f00:	add	r2, r1, r2
   15f04:	ldr	r3, [pc, #2240]	; 167cc <dim_enter_array@@Base+0xe6c>
   15f08:	ldr	r3, [pc, r3]
   15f0c:	add	r2, r3, r2, lsl #2
   15f10:	str	r1, [r2, #140]	; 0x8c
   15f14:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15f18:	lsl	r1, r1, #2
   15f1c:	str	r0, [sp, #84]	; 0x54
   15f20:	mov	r0, r1
   15f24:	str	r3, [sp, #80]	; 0x50
   15f28:	bl	12784 <malloc@plt>
   15f2c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15f30:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15f34:	add	r1, r1, r2
   15f38:	ldr	r2, [sp, #80]	; 0x50
   15f3c:	add	r3, r2, #108	; 0x6c
   15f40:	str	r0, [r3, r1, lsl #2]
   15f44:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15f48:	ldr	r1, [fp, #-56]	; 0xffffffc8
   15f4c:	add	r0, r0, r1
   15f50:	add	r0, r3, r0, lsl #2
   15f54:	ldr	r0, [r0]
   15f58:	movw	r1, #0
   15f5c:	cmp	r0, r1
   15f60:	bne	15f98 <dim_enter_array@@Base+0x638>
   15f64:	ldr	r0, [pc, #2092]	; 16798 <dim_enter_array@@Base+0xe38>
   15f68:	add	r1, pc, r0
   15f6c:	ldr	r0, [pc, #2088]	; 1679c <dim_enter_array@@Base+0xe3c>
   15f70:	add	r3, pc, r0
   15f74:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15f78:	lsl	r2, r0, #2
   15f7c:	mvn	r0, #0
   15f80:	movw	ip, #456	; 0x1c8
   15f84:	str	ip, [sp]
   15f88:	bl	12610 <coda_set_error@plt>
   15f8c:	ldr	r0, [pc, #2048]	; 16794 <dim_enter_array@@Base+0xe34>
   15f90:	ldr	r0, [pc, r0]
   15f94:	blx	r0
   15f98:	movw	r0, #0
   15f9c:	str	r0, [fp, #-116]	; 0xffffff8c
   15fa0:	ldr	r0, [fp, #-116]	; 0xffffff8c
   15fa4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15fa8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15fac:	subs	r1, r0, r1
   15fb0:	rscs	r0, r2, r0, asr #31
   15fb4:	str	r1, [sp, #76]	; 0x4c
   15fb8:	str	r0, [sp, #72]	; 0x48
   15fbc:	bge	16000 <dim_enter_array@@Base+0x6a0>
   15fc0:	b	15fc4 <dim_enter_array@@Base+0x664>
   15fc4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15fc8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   15fcc:	add	r0, r0, r1
   15fd0:	ldr	r1, [pc, #2040]	; 167d0 <dim_enter_array@@Base+0xe70>
   15fd4:	ldr	r1, [pc, r1]
   15fd8:	add	r0, r1, r0, lsl #2
   15fdc:	ldr	r0, [r0, #108]	; 0x6c
   15fe0:	ldr	r1, [fp, #-116]	; 0xffffff8c
   15fe4:	add	r0, r0, r1, lsl #2
   15fe8:	mvn	r1, #0
   15fec:	str	r1, [r0]
   15ff0:	ldr	r0, [fp, #-116]	; 0xffffff8c
   15ff4:	add	r0, r0, #1
   15ff8:	str	r0, [fp, #-116]	; 0xffffff8c
   15ffc:	b	15fa0 <dim_enter_array@@Base+0x640>
   16000:	b	16050 <dim_enter_array@@Base+0x6f0>
   16004:	ldr	r0, [pc, #1920]	; 1678c <dim_enter_array@@Base+0xe2c>
   16008:	ldr	r0, [pc, r0]
   1600c:	add	r0, r0, #108	; 0x6c
   16010:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16014:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16018:	add	r1, r1, r2
   1601c:	ldr	r2, [pc, #1968]	; 167d4 <dim_enter_array@@Base+0xe74>
   16020:	ldr	r2, [pc, r2]
   16024:	add	r1, r2, r1, lsl #2
   16028:	mov	r3, #0
   1602c:	str	r3, [r1, #140]	; 0x8c
   16030:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16034:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16038:	add	r1, r1, r3
   1603c:	add	r1, r2, r1, lsl #2
   16040:	add	r1, r1, #108	; 0x6c
   16044:	movw	r2, #0
   16048:	str	r2, [r1]
   1604c:	str	r0, [sp, #68]	; 0x44
   16050:	b	16054 <dim_enter_array@@Base+0x6f4>
   16054:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16058:	add	r0, r0, #1
   1605c:	str	r0, [fp, #-56]	; 0xffffffc8
   16060:	b	15ebc <dim_enter_array@@Base+0x55c>
   16064:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16068:	movw	r1, #0
   1606c:	str	r1, [r0, #44]	; 0x2c
   16070:	mov	r0, r1
   16074:	str	r1, [sp, #64]	; 0x40
   16078:	ldr	r2, [sp, #64]	; 0x40
   1607c:	bl	16820 <dim_enter_array@@Base+0xec0>
   16080:	movw	r0, #0
   16084:	str	r0, [fp, #-56]	; 0xffffffc8
   16088:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1608c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16090:	ldr	r1, [r1, #4]
   16094:	cmp	r0, r1
   16098:	bge	161d8 <dim_enter_array@@Base+0x878>
   1609c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   160a0:	add	r0, r0, #8
   160a4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   160a8:	add	r0, r0, r1, lsl #2
   160ac:	ldr	r0, [r0]
   160b0:	cmn	r0, #1
   160b4:	bne	161c4 <dim_enter_array@@Base+0x864>
   160b8:	ldr	r0, [pc, #1728]	; 16780 <dim_enter_array@@Base+0xe20>
   160bc:	ldr	r0, [pc, r0]
   160c0:	add	r0, r0, #36	; 0x24
   160c4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   160c8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   160cc:	add	r1, r1, r2
   160d0:	ldr	r2, [pc, #1792]	; 167d8 <dim_enter_array@@Base+0xe78>
   160d4:	ldr	r2, [pc, r2]
   160d8:	add	r1, r2, r1, lsl #2
   160dc:	ldr	r2, [r1, #4]
   160e0:	add	r1, r1, #36	; 0x24
   160e4:	ldr	r1, [r1]
   160e8:	cmp	r2, r1
   160ec:	str	r0, [sp, #60]	; 0x3c
   160f0:	beq	16130 <dim_enter_array@@Base+0x7d0>
   160f4:	ldr	r0, [pc, #1676]	; 16788 <dim_enter_array@@Base+0xe28>
   160f8:	ldr	r0, [pc, r0]
   160fc:	add	r0, r0, #72	; 0x48
   16100:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16104:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16108:	add	r1, r1, r2
   1610c:	ldr	r2, [pc, #1736]	; 167dc <dim_enter_array@@Base+0xe7c>
   16110:	ldr	r2, [pc, r2]
   16114:	add	r1, r2, r1, lsl #2
   16118:	add	r1, r1, #72	; 0x48
   1611c:	movw	r2, #1
   16120:	str	r2, [r1]
   16124:	str	r2, [fp, #-48]	; 0xffffffd0
   16128:	str	r0, [sp, #56]	; 0x38
   1612c:	b	161c0 <dim_enter_array@@Base+0x860>
   16130:	ldr	r0, [pc, #1612]	; 16784 <dim_enter_array@@Base+0xe24>
   16134:	ldr	r0, [pc, r0]
   16138:	add	r0, r0, #140	; 0x8c
   1613c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16140:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16144:	add	r1, r1, r2
   16148:	ldr	r2, [pc, #1680]	; 167e0 <dim_enter_array@@Base+0xe80>
   1614c:	ldr	r2, [pc, r2]
   16150:	add	r1, r2, r1, lsl #2
   16154:	mov	r3, #0
   16158:	str	r3, [r1, #72]	; 0x48
   1615c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16160:	ldr	ip, [fp, #-56]	; 0xffffffc8
   16164:	add	r1, r1, ip
   16168:	add	ip, r2, #108	; 0x6c
   1616c:	ldr	r1, [ip, r1, lsl #2]
   16170:	str	r0, [sp, #52]	; 0x34
   16174:	mov	r0, r1
   16178:	str	ip, [sp, #48]	; 0x30
   1617c:	str	r2, [sp, #44]	; 0x2c
   16180:	str	r3, [sp, #40]	; 0x28
   16184:	bl	12658 <free@plt>
   16188:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1618c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   16190:	add	r0, r0, r1
   16194:	ldr	r1, [sp, #40]	; 0x28
   16198:	ldr	r2, [sp, #48]	; 0x30
   1619c:	str	r1, [r2, r0, lsl #2]
   161a0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   161a4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   161a8:	add	r0, r0, r3
   161ac:	ldr	r3, [sp, #44]	; 0x2c
   161b0:	add	r0, r3, r0, lsl #2
   161b4:	add	r0, r0, #140	; 0x8c
   161b8:	movw	ip, #0
   161bc:	str	ip, [r0]
   161c0:	b	161c4 <dim_enter_array@@Base+0x864>
   161c4:	b	161c8 <dim_enter_array@@Base+0x868>
   161c8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   161cc:	add	r0, r0, #1
   161d0:	str	r0, [fp, #-56]	; 0xffffffc8
   161d4:	b	16088 <dim_enter_array@@Base+0x728>
   161d8:	b	161dc <dim_enter_array@@Base+0x87c>
   161dc:	ldr	r0, [pc, #1408]	; 16764 <dim_enter_array@@Base+0xe04>
   161e0:	ldr	r0, [pc, r0]
   161e4:	movw	r1, #0
   161e8:	str	r1, [r0, #68]	; 0x44
   161ec:	mvn	r2, #0
   161f0:	str	r2, [r0, #104]	; 0x68
   161f4:	str	r1, [fp, #-56]	; 0xffffffc8
   161f8:	ldr	r0, [pc, #1384]	; 16768 <dim_enter_array@@Base+0xe08>
   161fc:	ldr	r0, [pc, r0]
   16200:	ldr	r1, [fp, #-56]	; 0xffffffc8
   16204:	ldr	r0, [r0]
   16208:	cmp	r1, r0
   1620c:	bge	1626c <dim_enter_array@@Base+0x90c>
   16210:	ldr	r0, [pc, #1376]	; 16778 <dim_enter_array@@Base+0xe18>
   16214:	ldr	r0, [pc, r0]
   16218:	add	r0, r0, #72	; 0x48
   1621c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   16220:	ldr	r2, [pc, #1468]	; 167e4 <dim_enter_array@@Base+0xe84>
   16224:	ldr	r2, [pc, r2]
   16228:	add	r1, r2, r1, lsl #2
   1622c:	add	r1, r1, #72	; 0x48
   16230:	ldr	r1, [r1]
   16234:	cmp	r1, #0
   16238:	str	r0, [sp, #36]	; 0x24
   1623c:	beq	16258 <dim_enter_array@@Base+0x8f8>
   16240:	ldr	r0, [pc, #1332]	; 1677c <dim_enter_array@@Base+0xe1c>
   16244:	ldr	r0, [pc, r0]
   16248:	movw	r1, #1
   1624c:	str	r1, [r0, #68]	; 0x44
   16250:	ldr	r1, [fp, #-56]	; 0xffffffc8
   16254:	str	r1, [r0, #104]	; 0x68
   16258:	b	1625c <dim_enter_array@@Base+0x8fc>
   1625c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16260:	add	r0, r0, #1
   16264:	str	r0, [fp, #-56]	; 0xffffffc8
   16268:	b	161f8 <dim_enter_array@@Base+0x898>
   1626c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16270:	movw	r1, #1
   16274:	str	r1, [r0, #40]	; 0x28
   16278:	movw	r0, #0
   1627c:	str	r0, [fp, #-56]	; 0xffffffc8
   16280:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16284:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16288:	ldr	r1, [r1, #4]
   1628c:	cmp	r0, r1
   16290:	bge	16370 <dim_enter_array@@Base+0xa10>
   16294:	ldr	r0, [pc, #1240]	; 16774 <dim_enter_array@@Base+0xe14>
   16298:	ldr	r0, [pc, r0]
   1629c:	add	r0, r0, #4
   162a0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   162a4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   162a8:	add	r1, r1, r2
   162ac:	ldr	r2, [pc, #1332]	; 167e8 <dim_enter_array@@Base+0xe88>
   162b0:	ldr	r2, [pc, r2]
   162b4:	add	r1, r2, r1, lsl #2
   162b8:	add	r1, r1, #4
   162bc:	ldr	r1, [r1]
   162c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   162c4:	ldr	r3, [r2, #40]	; 0x28
   162c8:	mul	r1, r3, r1
   162cc:	str	r1, [r2, #40]	; 0x28
   162d0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   162d4:	cmp	r1, #0
   162d8:	str	r0, [sp, #32]
   162dc:	bne	1631c <dim_enter_array@@Base+0x9bc>
   162e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   162e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   162e8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   162ec:	ldr	r3, [pc, #1272]	; 167ec <dim_enter_array@@Base+0xe8c>
   162f0:	ldr	r3, [pc, r3]
   162f4:	add	ip, r3, r2, lsl #2
   162f8:	ldr	ip, [ip, #4]
   162fc:	asr	lr, ip, #31
   16300:	umull	r4, r5, r0, ip
   16304:	mla	r0, r0, lr, r5
   16308:	mla	r0, r1, ip, r0
   1630c:	add	r1, r3, r2, lsl #3
   16310:	str	r4, [r1, #240]	; 0xf0
   16314:	str	r0, [r1, #244]	; 0xf4
   16318:	b	1635c <dim_enter_array@@Base+0x9fc>
   1631c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   16320:	ldr	r1, [fp, #-56]	; 0xffffffc8
   16324:	add	r0, r0, r1
   16328:	ldr	r1, [pc, #1216]	; 167f0 <dim_enter_array@@Base+0xe90>
   1632c:	ldr	r1, [pc, r1]
   16330:	add	r2, r1, r0, lsl #3
   16334:	ldr	r3, [r2, #232]	; 0xe8
   16338:	ldr	ip, [r2, #236]	; 0xec
   1633c:	add	r0, r1, r0, lsl #2
   16340:	ldr	r0, [r0, #4]
   16344:	asr	r1, r0, #31
   16348:	umull	lr, r4, r3, r0
   1634c:	mla	r1, r3, r1, r4
   16350:	mla	r0, ip, r0, r1
   16354:	str	lr, [r2, #240]	; 0xf0
   16358:	str	r0, [r2, #244]	; 0xf4
   1635c:	b	16360 <dim_enter_array@@Base+0xa00>
   16360:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16364:	add	r0, r0, #1
   16368:	str	r0, [fp, #-56]	; 0xffffffc8
   1636c:	b	16280 <dim_enter_array@@Base+0x920>
   16370:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16374:	cmp	r0, #0
   16378:	beq	16524 <dim_enter_array@@Base+0xbc4>
   1637c:	movw	r0, #0
   16380:	str	r0, [fp, #-56]	; 0xffffffc8
   16384:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16388:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1638c:	ldr	r1, [r1, #4]
   16390:	cmp	r0, r1
   16394:	bge	163cc <dim_enter_array@@Base+0xa6c>
   16398:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1639c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   163a0:	add	r0, r0, r1
   163a4:	ldr	r1, [pc, #1096]	; 167f4 <dim_enter_array@@Base+0xe94>
   163a8:	ldr	r1, [pc, r1]
   163ac:	add	r0, r1, r0, lsl #3
   163b0:	mov	r1, #0
   163b4:	str	r1, [r0, #308]	; 0x134
   163b8:	str	r1, [r0, #304]	; 0x130
   163bc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   163c0:	add	r0, r0, #1
   163c4:	str	r0, [fp, #-56]	; 0xffffffc8
   163c8:	b	16384 <dim_enter_array@@Base+0xa24>
   163cc:	movw	r0, #0
   163d0:	str	r0, [fp, #-120]	; 0xffffff88
   163d4:	ldr	r0, [fp, #-120]	; 0xffffff88
   163d8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   163dc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   163e0:	subs	r1, r0, r1
   163e4:	rscs	r0, r2, r0, asr #31
   163e8:	str	r1, [sp, #28]
   163ec:	str	r0, [sp, #24]
   163f0:	bge	16520 <dim_enter_array@@Base+0xbc0>
   163f4:	b	163f8 <dim_enter_array@@Base+0xa98>
   163f8:	movw	r0, #1
   163fc:	str	r0, [sp, #124]	; 0x7c
   16400:	movw	r0, #0
   16404:	str	r0, [fp, #-56]	; 0xffffffc8
   16408:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1640c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16410:	ldr	r1, [r1, #4]
   16414:	cmp	r0, r1
   16418:	bge	1650c <dim_enter_array@@Base+0xbac>
   1641c:	ldr	r0, [pc, #840]	; 1676c <dim_enter_array@@Base+0xe0c>
   16420:	ldr	r0, [pc, r0]
   16424:	add	r0, r0, #72	; 0x48
   16428:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1642c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16430:	add	r1, r1, r2
   16434:	ldr	r2, [pc, #956]	; 167f8 <dim_enter_array@@Base+0xe98>
   16438:	ldr	r2, [pc, r2]
   1643c:	add	r1, r2, r1, lsl #2
   16440:	add	r1, r1, #72	; 0x48
   16444:	ldr	r1, [r1]
   16448:	cmp	r1, #0
   1644c:	str	r0, [sp, #20]
   16450:	beq	1648c <dim_enter_array@@Base+0xb2c>
   16454:	ldr	r0, [fp, #-52]	; 0xffffffcc
   16458:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1645c:	add	r0, r0, r1
   16460:	ldr	r1, [pc, #916]	; 167fc <dim_enter_array@@Base+0xe9c>
   16464:	ldr	r1, [pc, r1]
   16468:	add	r0, r1, r0, lsl #2
   1646c:	ldr	r0, [r0, #108]	; 0x6c
   16470:	ldr	r1, [fp, #-120]	; 0xffffff88
   16474:	add	r0, r0, r1, lsl #2
   16478:	ldr	r0, [r0]
   1647c:	ldr	r1, [sp, #124]	; 0x7c
   16480:	mul	r0, r1, r0
   16484:	str	r0, [sp, #124]	; 0x7c
   16488:	b	164c8 <dim_enter_array@@Base+0xb68>
   1648c:	ldr	r0, [pc, #732]	; 16770 <dim_enter_array@@Base+0xe10>
   16490:	ldr	r0, [pc, r0]
   16494:	add	r0, r0, #4
   16498:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1649c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   164a0:	add	r1, r1, r2
   164a4:	ldr	r2, [pc, #852]	; 16800 <dim_enter_array@@Base+0xea0>
   164a8:	ldr	r2, [pc, r2]
   164ac:	add	r1, r2, r1, lsl #2
   164b0:	add	r1, r1, #4
   164b4:	ldr	r1, [r1]
   164b8:	ldr	r2, [sp, #124]	; 0x7c
   164bc:	mul	r1, r2, r1
   164c0:	str	r1, [sp, #124]	; 0x7c
   164c4:	str	r0, [sp, #16]
   164c8:	ldr	r0, [sp, #124]	; 0x7c
   164cc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   164d0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   164d4:	add	r1, r1, r2
   164d8:	ldr	r2, [pc, #804]	; 16804 <dim_enter_array@@Base+0xea4>
   164dc:	ldr	r2, [pc, r2]
   164e0:	add	r1, r2, r1, lsl #3
   164e4:	ldr	r2, [r1, #304]	; 0x130
   164e8:	ldr	r3, [r1, #308]	; 0x134
   164ec:	adds	r2, r2, r0
   164f0:	adc	r0, r3, r0, asr #31
   164f4:	str	r2, [r1, #304]	; 0x130
   164f8:	str	r0, [r1, #308]	; 0x134
   164fc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16500:	add	r0, r0, #1
   16504:	str	r0, [fp, #-56]	; 0xffffffc8
   16508:	b	16408 <dim_enter_array@@Base+0xaa8>
   1650c:	b	16510 <dim_enter_array@@Base+0xbb0>
   16510:	ldr	r0, [fp, #-120]	; 0xffffff88
   16514:	add	r0, r0, #1
   16518:	str	r0, [fp, #-120]	; 0xffffff88
   1651c:	b	163d4 <dim_enter_array@@Base+0xa74>
   16520:	b	165cc <dim_enter_array@@Base+0xc6c>
   16524:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16528:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1652c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16530:	ldr	r3, [pc, #720]	; 16808 <dim_enter_array@@Base+0xea8>
   16534:	ldr	r3, [pc, r3]
   16538:	add	ip, r3, r2, lsl #2
   1653c:	ldr	ip, [ip, #4]
   16540:	asr	lr, ip, #31
   16544:	umull	r4, r5, r0, ip
   16548:	mla	r0, r0, lr, r5
   1654c:	mla	r0, r1, ip, r0
   16550:	add	r1, r3, r2, lsl #3
   16554:	str	r4, [r1, #304]	; 0x130
   16558:	str	r0, [r1, #308]	; 0x134
   1655c:	movw	r0, #1
   16560:	str	r0, [fp, #-56]	; 0xffffffc8
   16564:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16568:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1656c:	ldr	r1, [r1, #4]
   16570:	cmp	r0, r1
   16574:	bge	165c8 <dim_enter_array@@Base+0xc68>
   16578:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1657c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   16580:	add	r0, r0, r1
   16584:	ldr	r1, [pc, #640]	; 1680c <dim_enter_array@@Base+0xeac>
   16588:	ldr	r1, [pc, r1]
   1658c:	add	r2, r1, r0, lsl #3
   16590:	ldr	r3, [r2, #296]	; 0x128
   16594:	ldr	ip, [r2, #300]	; 0x12c
   16598:	add	r0, r1, r0, lsl #2
   1659c:	ldr	r0, [r0, #4]
   165a0:	asr	r1, r0, #31
   165a4:	umull	lr, r4, r3, r0
   165a8:	mla	r1, r3, r1, r4
   165ac:	mla	r0, ip, r0, r1
   165b0:	str	lr, [r2, #304]	; 0x130
   165b4:	str	r0, [r2, #308]	; 0x134
   165b8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   165bc:	add	r0, r0, #1
   165c0:	str	r0, [fp, #-56]	; 0xffffffc8
   165c4:	b	16564 <dim_enter_array@@Base+0xc04>
   165c8:	b	165cc <dim_enter_array@@Base+0xc6c>
   165cc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   165d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   165d4:	ldr	r1, [r1, #4]
   165d8:	add	r0, r0, r1
   165dc:	ldr	r1, [pc, #556]	; 16810 <dim_enter_array@@Base+0xeb0>
   165e0:	ldr	r1, [pc, r1]
   165e4:	add	r0, r1, r0, lsl #3
   165e8:	ldr	r1, [r0, #296]	; 0x128
   165ec:	ldr	r0, [r0, #300]	; 0x12c
   165f0:	subs	r1, r1, #1
   165f4:	sbcs	r0, r0, #0
   165f8:	str	r1, [sp, #12]
   165fc:	str	r0, [sp, #8]
   16600:	blt	1670c <dim_enter_array@@Base+0xdac>
   16604:	b	16608 <dim_enter_array@@Base+0xca8>
   16608:	ldr	r0, [pc, #516]	; 16814 <dim_enter_array@@Base+0xeb4>
   1660c:	ldr	r0, [pc, r0]
   16610:	ldr	r1, [r0]
   16614:	sub	r1, r1, #1
   16618:	add	r2, r0, r1, lsl #2
   1661c:	ldr	r2, [r2, #4]
   16620:	asr	r3, r2, #31
   16624:	add	r0, r0, r1, lsl #3
   16628:	str	r2, [r0, #176]	; 0xb0
   1662c:	str	r3, [r0, #180]	; 0xb4
   16630:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16634:	ldr	r0, [r0, #4]
   16638:	sub	r0, r0, #2
   1663c:	str	r0, [fp, #-56]	; 0xffffffc8
   16640:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16644:	cmp	r0, #0
   16648:	blt	166a0 <dim_enter_array@@Base+0xd40>
   1664c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   16650:	ldr	r1, [fp, #-56]	; 0xffffffc8
   16654:	add	r0, r0, r1
   16658:	ldr	r1, [pc, #440]	; 16818 <dim_enter_array@@Base+0xeb8>
   1665c:	ldr	r1, [pc, r1]
   16660:	add	r2, r1, r0, lsl #2
   16664:	ldr	r2, [r2, #4]
   16668:	asr	r3, r2, #31
   1666c:	add	r0, r1, r0, lsl #3
   16670:	ldr	r1, [r0, #184]	; 0xb8
   16674:	ldr	ip, [r0, #188]	; 0xbc
   16678:	umull	lr, r4, r2, r1
   1667c:	mla	r2, r2, ip, r4
   16680:	mla	r1, r3, r1, r2
   16684:	str	lr, [r0, #176]	; 0xb0
   16688:	str	r1, [r0, #180]	; 0xb4
   1668c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16690:	mvn	r1, #0
   16694:	add	r0, r0, r1
   16698:	str	r0, [fp, #-56]	; 0xffffffc8
   1669c:	b	16640 <dim_enter_array@@Base+0xce0>
   166a0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   166a4:	sub	r0, r0, #1
   166a8:	str	r0, [fp, #-56]	; 0xffffffc8
   166ac:	ldr	r0, [fp, #-56]	; 0xffffffc8
   166b0:	cmp	r0, #0
   166b4:	blt	16708 <dim_enter_array@@Base+0xda8>
   166b8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   166bc:	ldr	r1, [pc, #344]	; 1681c <dim_enter_array@@Base+0xebc>
   166c0:	ldr	r1, [pc, r1]
   166c4:	add	r1, r1, #176	; 0xb0
   166c8:	mov	r2, r1
   166cc:	ldr	r0, [r2, r0, lsl #3]!
   166d0:	ldr	r2, [r2, #4]
   166d4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   166d8:	ldr	r3, [r1, r3, lsl #3]!
   166dc:	ldr	ip, [r1, #4]
   166e0:	umull	lr, r4, r3, r0
   166e4:	mla	r2, r3, r2, r4
   166e8:	mla	r0, ip, r0, r2
   166ec:	str	lr, [r1]
   166f0:	str	r0, [r1, #4]
   166f4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   166f8:	mvn	r1, #0
   166fc:	add	r0, r0, r1
   16700:	str	r0, [fp, #-56]	; 0xffffffc8
   16704:	b	166ac <dim_enter_array@@Base+0xd4c>
   16708:	b	1670c <dim_enter_array@@Base+0xdac>
   1670c:	sub	sp, fp, #16
   16710:	pop	{r4, r5, r6, r7, fp, pc}
   16714:	andeq	fp, r1, ip, lsr r8
   16718:	andeq	fp, r1, r8, lsl r8
   1671c:	andeq	fp, r1, r8, lsl #12
   16720:	strdeq	fp, [r1], -r8
   16724:	andeq	fp, r1, ip, ror #12
   16728:	andeq	fp, r1, ip, asr r6
   1672c:	andeq	fp, r1, r4, lsl #14
   16730:	strdeq	fp, [r1], -r4
   16734:	strdeq	r9, [r0], -r7
   16738:	andeq	r9, r0, lr, lsl r6
   1673c:			; <UNDEFINED> instruction: 0x000096b4
   16740:	andeq	fp, r1, r0, lsr #15
   16744:	muleq	r1, r0, r7
   16748:	andeq	fp, r1, r8, asr #10
   1674c:	andeq	fp, r1, r8, asr r5
   16750:	andeq	r9, r0, r7, lsr #10
   16754:	andeq	r9, r0, sl, ror #8
   16758:	andeq	r9, r0, r0, lsl #10
   1675c:	andeq	fp, r1, r0, lsl #10
   16760:	andeq	fp, r1, r4, lsr #7
   16764:	andeq	fp, r1, r0, lsl r0
   16768:	strdeq	sl, [r1], -r4
   1676c:	ldrdeq	sl, [r1], -r0
   16770:	andeq	sl, r1, r0, ror #26
   16774:	andeq	sl, r1, r8, asr pc
   16778:	ldrdeq	sl, [r1], -ip
   1677c:	andeq	sl, r1, ip, lsr #31
   16780:	andeq	fp, r1, r4, lsr r1
   16784:	strheq	fp, [r1], -ip
   16788:	strdeq	fp, [r1], -r8
   1678c:	andeq	fp, r1, r8, ror #3
   16790:	andeq	fp, r1, r0, lsl #6
   16794:	andeq	fp, r1, r8, asr #4
   16798:	andeq	r8, r0, r8, ror #30
   1679c:	ldrdeq	r9, [r0], -r2
   167a0:	ldrdeq	r9, [r0], -r3
   167a4:	strdeq	r9, [r0], -sl
   167a8:	muleq	r0, r0, r5
   167ac:	andeq	fp, r1, r0, lsr r8
   167b0:	muleq	r1, r4, r7
   167b4:	strdeq	fp, [r1], -r8
   167b8:	andeq	fp, r1, r0, ror #12
   167bc:	strdeq	fp, [r1], -ip
   167c0:	ldrdeq	fp, [r1], -r4
   167c4:	andeq	fp, r1, r4, lsr #8
   167c8:	andeq	fp, r1, ip, lsl #7
   167cc:	andeq	fp, r1, r8, ror #5
   167d0:	andeq	fp, r1, ip, lsl r2
   167d4:	ldrdeq	fp, [r1], -r0
   167d8:	andeq	fp, r1, ip, lsl r1
   167dc:	andeq	fp, r1, r0, ror #1
   167e0:	andeq	fp, r1, r4, lsr #1
   167e4:	andeq	sl, r1, ip, asr #31
   167e8:	andeq	sl, r1, r0, asr #30
   167ec:	andeq	sl, r1, r0, lsl #30
   167f0:	andeq	sl, r1, r4, asr #29
   167f4:	andeq	sl, r1, r8, asr #28
   167f8:			; <UNDEFINED> instruction: 0x0001adb8
   167fc:	andeq	sl, r1, ip, lsl #27
   16800:	andeq	sl, r1, r8, asr #26
   16804:	andeq	sl, r1, r4, lsl sp
   16808:			; <UNDEFINED> instruction: 0x0001acbc
   1680c:	andeq	sl, r1, r8, ror #24
   16810:	andeq	sl, r1, r0, lsl ip
   16814:	andeq	sl, r1, r4, ror #23
   16818:	muleq	r1, r4, fp
   1681c:	andeq	sl, r1, r0, lsr fp
   16820:	push	{fp, lr}
   16824:	mov	fp, sp
   16828:	sub	sp, sp, #208	; 0xd0
   1682c:	ldr	r3, [pc, #2432]	; 171b4 <dim_enter_array@@Base+0x1854>
   16830:	ldr	r3, [pc, r3]
   16834:	add	r3, r3, #144	; 0x90
   16838:	str	r0, [fp, #-4]
   1683c:	str	r1, [fp, #-8]
   16840:	str	r2, [fp, #-12]
   16844:	mov	r0, r3
   16848:	sub	r1, fp, #16
   1684c:	bl	126e8 <coda_cursor_get_type_class@plt>
   16850:	cmp	r0, #0
   16854:	beq	16864 <dim_enter_array@@Base+0xf04>
   16858:	ldr	r0, [pc, #2392]	; 171b8 <dim_enter_array@@Base+0x1858>
   1685c:	ldr	r0, [pc, r0]
   16860:	blx	r0
   16864:	ldr	r0, [fp, #-16]
   16868:	cmp	r0, #0
   1686c:	str	r0, [sp, #88]	; 0x58
   16870:	beq	16d34 <dim_enter_array@@Base+0x13d4>
   16874:	b	16878 <dim_enter_array@@Base+0xf18>
   16878:	ldr	r0, [sp, #88]	; 0x58
   1687c:	cmp	r0, #1
   16880:	beq	1689c <dim_enter_array@@Base+0xf3c>
   16884:	b	16888 <dim_enter_array@@Base+0xf28>
   16888:	ldr	r0, [sp, #88]	; 0x58
   1688c:	sub	r1, r0, #4
   16890:	cmp	r1, #2
   16894:	bcc	16f60 <dim_enter_array@@Base+0x1600>
   16898:	b	1718c <dim_enter_array@@Base+0x182c>
   1689c:	ldr	r0, [pc, #2412]	; 17210 <dim_enter_array@@Base+0x18b0>
   168a0:	ldr	r0, [pc, r0]
   168a4:	add	r1, r0, #800	; 0x320
   168a8:	ldr	r2, [fp, #-8]
   168ac:	movw	r3, #80	; 0x50
   168b0:	mul	r2, r2, r3
   168b4:	add	r1, r1, r2
   168b8:	str	r1, [fp, #-20]	; 0xffffffec
   168bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   168c0:	ldr	r1, [r1]
   168c4:	str	r1, [fp, #-24]	; 0xffffffe8
   168c8:	ldr	r1, [fp, #-8]
   168cc:	ldr	r0, [r0, #3360]	; 0xd20
   168d0:	cmp	r1, r0
   168d4:	bne	16b18 <dim_enter_array@@Base+0x11b8>
   168d8:	ldr	r0, [pc, #2392]	; 17238 <dim_enter_array@@Base+0x18d8>
   168dc:	ldr	r0, [pc, r0]
   168e0:	add	r0, r0, #144	; 0x90
   168e4:	sub	r2, fp, #56	; 0x38
   168e8:	sub	r1, fp, #60	; 0x3c
   168ec:	bl	128d4 <coda_cursor_get_array_dim@plt>
   168f0:	cmp	r0, #0
   168f4:	beq	16904 <dim_enter_array@@Base+0xfa4>
   168f8:	ldr	r0, [pc, #2364]	; 1723c <dim_enter_array@@Base+0x18dc>
   168fc:	ldr	r0, [pc, r0]
   16900:	blx	r0
   16904:	ldr	r0, [fp, #-60]	; 0xffffffc4
   16908:	ldr	r1, [fp, #-20]	; 0xffffffec
   1690c:	ldr	r1, [r1, #4]
   16910:	cmp	r0, r1
   16914:	bne	1691c <dim_enter_array@@Base+0xfbc>
   16918:	b	1693c <dim_enter_array@@Base+0xfdc>
   1691c:	ldr	r0, [pc, #2332]	; 17240 <dim_enter_array@@Base+0x18e0>
   16920:	add	r0, pc, r0
   16924:	ldr	r1, [pc, #2328]	; 17244 <dim_enter_array@@Base+0x18e4>
   16928:	add	r1, pc, r1
   1692c:	ldr	r2, [pc, #2324]	; 17248 <dim_enter_array@@Base+0x18e8>
   16930:	add	r3, pc, r2
   16934:	movw	r2, #125	; 0x7d
   16938:	bl	129f4 <__assert_fail@plt>
   1693c:	movw	r0, #0
   16940:	str	r0, [fp, #-64]	; 0xffffffc0
   16944:	ldr	r0, [fp, #-64]	; 0xffffffc0
   16948:	ldr	r1, [fp, #-20]	; 0xffffffec
   1694c:	ldr	r1, [r1, #4]
   16950:	cmp	r0, r1
   16954:	bge	16b14 <dim_enter_array@@Base+0x11b4>
   16958:	ldr	r0, [fp, #-20]	; 0xffffffec
   1695c:	add	r0, r0, #8
   16960:	ldr	r1, [fp, #-64]	; 0xffffffc0
   16964:	add	r0, r0, r1, lsl #2
   16968:	ldr	r0, [r0]
   1696c:	cmn	r0, #1
   16970:	bne	16b00 <dim_enter_array@@Base+0x11a0>
   16974:	ldr	r0, [pc, #2256]	; 1724c <dim_enter_array@@Base+0x18ec>
   16978:	ldr	r0, [pc, r0]
   1697c:	add	r0, r0, #4
   16980:	ldr	r1, [fp, #-64]	; 0xffffffc0
   16984:	sub	r2, fp, #56	; 0x38
   16988:	ldr	r2, [r2, r1, lsl #2]
   1698c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16990:	add	r1, r3, r1
   16994:	ldr	r3, [pc, #2252]	; 17268 <dim_enter_array@@Base+0x1908>
   16998:	ldr	r3, [pc, r3]
   1699c:	add	r1, r3, r1, lsl #2
   169a0:	ldr	r1, [r1, #108]	; 0x6c
   169a4:	ldr	ip, [fp, #-20]	; 0xffffffec
   169a8:	ldr	ip, [ip, #44]	; 0x2c
   169ac:	str	r2, [r1, ip, lsl #2]
   169b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   169b4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   169b8:	add	r1, r1, r2
   169bc:	add	r1, r3, r1, lsl #2
   169c0:	add	r1, r1, #4
   169c4:	ldr	r1, [r1]
   169c8:	cmn	r1, #1
   169cc:	str	r0, [sp, #84]	; 0x54
   169d0:	bne	16a28 <dim_enter_array@@Base+0x10c8>
   169d4:	ldr	r0, [pc, #2172]	; 17258 <dim_enter_array@@Base+0x18f8>
   169d8:	ldr	r0, [pc, r0]
   169dc:	add	r0, r0, #36	; 0x24
   169e0:	ldr	r1, [fp, #-64]	; 0xffffffc0
   169e4:	sub	r2, fp, #56	; 0x38
   169e8:	ldr	r3, [r2, r1, lsl #2]
   169ec:	ldr	ip, [fp, #-24]	; 0xffffffe8
   169f0:	add	r1, ip, r1
   169f4:	ldr	ip, [pc, #2160]	; 1726c <dim_enter_array@@Base+0x190c>
   169f8:	ldr	ip, [pc, ip]
   169fc:	add	r1, ip, r1, lsl #2
   16a00:	str	r3, [r1, #4]
   16a04:	ldr	r1, [fp, #-64]	; 0xffffffc0
   16a08:	ldr	r2, [r2, r1, lsl #2]
   16a0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16a10:	add	r1, r3, r1
   16a14:	add	r1, ip, r1, lsl #2
   16a18:	add	r1, r1, #36	; 0x24
   16a1c:	str	r2, [r1]
   16a20:	str	r0, [sp, #80]	; 0x50
   16a24:	b	16afc <dim_enter_array@@Base+0x119c>
   16a28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a2c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   16a30:	add	r0, r0, r1
   16a34:	ldr	r2, [pc, #2100]	; 17270 <dim_enter_array@@Base+0x1910>
   16a38:	ldr	r2, [pc, r2]
   16a3c:	add	r0, r2, r0, lsl #2
   16a40:	ldr	r0, [r0, #4]
   16a44:	sub	r2, fp, #56	; 0x38
   16a48:	add	r1, r2, r1, lsl #2
   16a4c:	ldr	r1, [r1]
   16a50:	cmp	r0, r1
   16a54:	bge	16a90 <dim_enter_array@@Base+0x1130>
   16a58:	ldr	r0, [pc, #2032]	; 17250 <dim_enter_array@@Base+0x18f0>
   16a5c:	ldr	r0, [pc, r0]
   16a60:	add	r0, r0, #4
   16a64:	ldr	r1, [fp, #-64]	; 0xffffffc0
   16a68:	sub	r2, fp, #56	; 0x38
   16a6c:	ldr	r2, [r2, r1, lsl #2]
   16a70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16a74:	add	r1, r3, r1
   16a78:	ldr	r3, [pc, #2036]	; 17274 <dim_enter_array@@Base+0x1914>
   16a7c:	ldr	r3, [pc, r3]
   16a80:	add	r1, r3, r1, lsl #2
   16a84:	add	r1, r1, #4
   16a88:	str	r2, [r1]
   16a8c:	str	r0, [sp, #76]	; 0x4c
   16a90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a94:	ldr	r1, [fp, #-64]	; 0xffffffc0
   16a98:	add	r0, r0, r1
   16a9c:	ldr	r2, [pc, #2004]	; 17278 <dim_enter_array@@Base+0x1918>
   16aa0:	ldr	r2, [pc, r2]
   16aa4:	add	r0, r2, r0, lsl #2
   16aa8:	ldr	r0, [r0, #36]	; 0x24
   16aac:	sub	r2, fp, #56	; 0x38
   16ab0:	add	r1, r2, r1, lsl #2
   16ab4:	ldr	r1, [r1]
   16ab8:	cmp	r0, r1
   16abc:	ble	16af8 <dim_enter_array@@Base+0x1198>
   16ac0:	ldr	r0, [pc, #1932]	; 17254 <dim_enter_array@@Base+0x18f4>
   16ac4:	ldr	r0, [pc, r0]
   16ac8:	add	r0, r0, #36	; 0x24
   16acc:	ldr	r1, [fp, #-64]	; 0xffffffc0
   16ad0:	sub	r2, fp, #56	; 0x38
   16ad4:	ldr	r2, [r2, r1, lsl #2]
   16ad8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16adc:	add	r1, r3, r1
   16ae0:	ldr	r3, [pc, #1940]	; 1727c <dim_enter_array@@Base+0x191c>
   16ae4:	ldr	r3, [pc, r3]
   16ae8:	add	r1, r3, r1, lsl #2
   16aec:	add	r1, r1, #36	; 0x24
   16af0:	str	r2, [r1]
   16af4:	str	r0, [sp, #72]	; 0x48
   16af8:	b	16afc <dim_enter_array@@Base+0x119c>
   16afc:	b	16b00 <dim_enter_array@@Base+0x11a0>
   16b00:	b	16b04 <dim_enter_array@@Base+0x11a4>
   16b04:	ldr	r0, [fp, #-64]	; 0xffffffc0
   16b08:	add	r0, r0, #1
   16b0c:	str	r0, [fp, #-64]	; 0xffffffc0
   16b10:	b	16944 <dim_enter_array@@Base+0xfe4>
   16b14:	b	16d30 <dim_enter_array@@Base+0x13d0>
   16b18:	ldr	r0, [fp, #-8]
   16b1c:	cmp	r0, #0
   16b20:	bne	16b30 <dim_enter_array@@Base+0x11d0>
   16b24:	ldr	r0, [fp, #-20]	; 0xffffffec
   16b28:	movw	r1, #0
   16b2c:	str	r1, [r0, #44]	; 0x2c
   16b30:	ldr	r0, [pc, #1756]	; 17214 <dim_enter_array@@Base+0x18b4>
   16b34:	ldr	r0, [pc, r0]
   16b38:	add	r0, r0, #800	; 0x320
   16b3c:	ldr	r1, [fp, #-20]	; 0xffffffec
   16b40:	ldr	r1, [r1, #44]	; 0x2c
   16b44:	ldr	r2, [fp, #-20]	; 0xffffffec
   16b48:	ldr	r2, [r2, #40]	; 0x28
   16b4c:	mul	r1, r1, r2
   16b50:	ldr	r2, [fp, #-8]
   16b54:	add	r2, r2, #1
   16b58:	movw	r3, #80	; 0x50
   16b5c:	mul	r2, r2, r3
   16b60:	add	r0, r0, r2
   16b64:	str	r1, [r0, #44]	; 0x2c
   16b68:	movw	r0, #1
   16b6c:	str	r0, [fp, #-68]	; 0xffffffbc
   16b70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b74:	str	r0, [fp, #-72]	; 0xffffffb8
   16b78:	ldr	r0, [fp, #-72]	; 0xffffffb8
   16b7c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16b80:	ldr	r2, [fp, #-20]	; 0xffffffec
   16b84:	ldr	r2, [r2, #4]
   16b88:	add	r1, r1, r2
   16b8c:	cmp	r0, r1
   16b90:	bge	16c40 <dim_enter_array@@Base+0x12e0>
   16b94:	ldr	r0, [pc, #1684]	; 17230 <dim_enter_array@@Base+0x18d0>
   16b98:	ldr	r0, [pc, r0]
   16b9c:	add	r0, r0, #72	; 0x48
   16ba0:	ldr	r1, [fp, #-72]	; 0xffffffb8
   16ba4:	ldr	r2, [pc, #1748]	; 17280 <dim_enter_array@@Base+0x1920>
   16ba8:	ldr	r2, [pc, r2]
   16bac:	add	r1, r2, r1, lsl #2
   16bb0:	add	r1, r1, #72	; 0x48
   16bb4:	ldr	r1, [r1]
   16bb8:	cmp	r1, #0
   16bbc:	str	r0, [sp, #68]	; 0x44
   16bc0:	beq	16bf8 <dim_enter_array@@Base+0x1298>
   16bc4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   16bc8:	ldr	r1, [pc, #1716]	; 17284 <dim_enter_array@@Base+0x1924>
   16bcc:	ldr	r1, [pc, r1]
   16bd0:	add	r0, r1, r0, lsl #2
   16bd4:	ldr	r0, [r0, #108]	; 0x6c
   16bd8:	ldr	r1, [fp, #-20]	; 0xffffffec
   16bdc:	ldr	r1, [r1, #44]	; 0x2c
   16be0:	add	r0, r0, r1, lsl #2
   16be4:	ldr	r0, [r0]
   16be8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   16bec:	mul	r0, r1, r0
   16bf0:	str	r0, [fp, #-68]	; 0xffffffbc
   16bf4:	b	16c2c <dim_enter_array@@Base+0x12cc>
   16bf8:	ldr	r0, [pc, #1588]	; 17234 <dim_enter_array@@Base+0x18d4>
   16bfc:	ldr	r0, [pc, r0]
   16c00:	add	r0, r0, #4
   16c04:	ldr	r1, [fp, #-72]	; 0xffffffb8
   16c08:	ldr	r2, [pc, #1656]	; 17288 <dim_enter_array@@Base+0x1928>
   16c0c:	ldr	r2, [pc, r2]
   16c10:	add	r1, r2, r1, lsl #2
   16c14:	add	r1, r1, #4
   16c18:	ldr	r1, [r1]
   16c1c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   16c20:	mul	r1, r2, r1
   16c24:	str	r1, [fp, #-68]	; 0xffffffbc
   16c28:	str	r0, [sp, #64]	; 0x40
   16c2c:	b	16c30 <dim_enter_array@@Base+0x12d0>
   16c30:	ldr	r0, [fp, #-72]	; 0xffffffb8
   16c34:	add	r0, r0, #1
   16c38:	str	r0, [fp, #-72]	; 0xffffffb8
   16c3c:	b	16b78 <dim_enter_array@@Base+0x1218>
   16c40:	ldr	r0, [fp, #-68]	; 0xffffffbc
   16c44:	cmp	r0, #0
   16c48:	ble	16d2c <dim_enter_array@@Base+0x13cc>
   16c4c:	ldr	r0, [pc, #1476]	; 17218 <dim_enter_array@@Base+0x18b8>
   16c50:	ldr	r0, [pc, r0]
   16c54:	add	r0, r0, #144	; 0x90
   16c58:	bl	12730 <coda_cursor_goto_first_array_element@plt>
   16c5c:	cmp	r0, #0
   16c60:	beq	16c70 <dim_enter_array@@Base+0x1310>
   16c64:	ldr	r0, [pc, #1456]	; 1721c <dim_enter_array@@Base+0x18bc>
   16c68:	ldr	r0, [pc, r0]
   16c6c:	blx	r0
   16c70:	movw	r0, #0
   16c74:	str	r0, [fp, #-76]	; 0xffffffb4
   16c78:	ldr	r0, [fp, #-76]	; 0xffffffb4
   16c7c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   16c80:	cmp	r0, r1
   16c84:	bge	16d18 <dim_enter_array@@Base+0x13b8>
   16c88:	ldr	r0, [fp, #-4]
   16c8c:	add	r0, r0, #1
   16c90:	ldr	r1, [fp, #-8]
   16c94:	add	r1, r1, #1
   16c98:	ldr	r2, [fp, #-12]
   16c9c:	bl	16820 <dim_enter_array@@Base+0xec0>
   16ca0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   16ca4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   16ca8:	sub	r1, r1, #1
   16cac:	cmp	r0, r1
   16cb0:	bge	16d04 <dim_enter_array@@Base+0x13a4>
   16cb4:	ldr	r0, [pc, #1384]	; 17224 <dim_enter_array@@Base+0x18c4>
   16cb8:	ldr	r0, [pc, r0]
   16cbc:	add	r0, r0, #144	; 0x90
   16cc0:	bl	12820 <coda_cursor_goto_next_array_element@plt>
   16cc4:	cmp	r0, #0
   16cc8:	beq	16cd8 <dim_enter_array@@Base+0x1378>
   16ccc:	ldr	r0, [pc, #1364]	; 17228 <dim_enter_array@@Base+0x18c8>
   16cd0:	ldr	r0, [pc, r0]
   16cd4:	blx	r0
   16cd8:	ldr	r0, [pc, #1356]	; 1722c <dim_enter_array@@Base+0x18cc>
   16cdc:	ldr	r0, [pc, r0]
   16ce0:	add	r0, r0, #800	; 0x320
   16ce4:	ldr	r1, [fp, #-8]
   16ce8:	add	r1, r1, #1
   16cec:	movw	r2, #80	; 0x50
   16cf0:	mul	r1, r1, r2
   16cf4:	add	r0, r0, r1
   16cf8:	ldr	r1, [r0, #44]	; 0x2c
   16cfc:	add	r1, r1, #1
   16d00:	str	r1, [r0, #44]	; 0x2c
   16d04:	b	16d08 <dim_enter_array@@Base+0x13a8>
   16d08:	ldr	r0, [fp, #-76]	; 0xffffffb4
   16d0c:	add	r0, r0, #1
   16d10:	str	r0, [fp, #-76]	; 0xffffffb4
   16d14:	b	16c78 <dim_enter_array@@Base+0x1318>
   16d18:	ldr	r0, [pc, #1280]	; 17220 <dim_enter_array@@Base+0x18c0>
   16d1c:	ldr	r0, [pc, r0]
   16d20:	add	r0, r0, #144	; 0x90
   16d24:	bl	127b4 <coda_cursor_goto_parent@plt>
   16d28:	str	r0, [sp, #60]	; 0x3c
   16d2c:	b	16d30 <dim_enter_array@@Base+0x13d0>
   16d30:	b	171ac <dim_enter_array@@Base+0x184c>
   16d34:	ldr	r0, [pc, #1200]	; 171ec <dim_enter_array@@Base+0x188c>
   16d38:	ldr	r0, [pc, r0]
   16d3c:	add	r1, r0, #144	; 0x90
   16d40:	movw	r2, #3492	; 0xda4
   16d44:	add	r0, r0, r2
   16d48:	ldr	r2, [fp, #-12]
   16d4c:	ldr	r3, [pc, #1336]	; 1728c <dim_enter_array@@Base+0x192c>
   16d50:	ldr	r3, [pc, r3]
   16d54:	add	r2, r3, r2, lsl #2
   16d58:	movw	r3, #3492	; 0xda4
   16d5c:	add	r2, r2, r3
   16d60:	ldr	r2, [r2]
   16d64:	str	r0, [sp, #56]	; 0x38
   16d68:	mov	r0, r1
   16d6c:	mov	r1, r2
   16d70:	sub	r2, fp, #80	; 0x50
   16d74:	bl	125f8 <coda_cursor_get_record_field_available_status@plt>
   16d78:	cmp	r0, #0
   16d7c:	beq	16d8c <dim_enter_array@@Base+0x142c>
   16d80:	ldr	r0, [pc, #1128]	; 171f0 <dim_enter_array@@Base+0x1890>
   16d84:	ldr	r0, [pc, r0]
   16d88:	blx	r0
   16d8c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   16d90:	cmp	r0, #0
   16d94:	beq	16e1c <dim_enter_array@@Base+0x14bc>
   16d98:	ldr	r0, [pc, #1124]	; 17204 <dim_enter_array@@Base+0x18a4>
   16d9c:	ldr	r0, [pc, r0]
   16da0:	add	r1, r0, #144	; 0x90
   16da4:	movw	r2, #3492	; 0xda4
   16da8:	add	r0, r0, r2
   16dac:	ldr	r2, [fp, #-12]
   16db0:	ldr	r3, [pc, #1240]	; 17290 <dim_enter_array@@Base+0x1930>
   16db4:	ldr	r3, [pc, r3]
   16db8:	add	r2, r3, r2, lsl #2
   16dbc:	movw	r3, #3492	; 0xda4
   16dc0:	add	r2, r2, r3
   16dc4:	ldr	r2, [r2]
   16dc8:	str	r0, [sp, #52]	; 0x34
   16dcc:	mov	r0, r1
   16dd0:	mov	r1, r2
   16dd4:	bl	12760 <coda_cursor_goto_record_field_by_index@plt>
   16dd8:	cmp	r0, #0
   16ddc:	beq	16dec <dim_enter_array@@Base+0x148c>
   16de0:	ldr	r0, [pc, #1056]	; 17208 <dim_enter_array@@Base+0x18a8>
   16de4:	ldr	r0, [pc, r0]
   16de8:	blx	r0
   16dec:	ldr	r0, [fp, #-4]
   16df0:	add	r0, r0, #1
   16df4:	ldr	r1, [fp, #-8]
   16df8:	ldr	r2, [fp, #-12]
   16dfc:	add	r2, r2, #1
   16e00:	bl	16820 <dim_enter_array@@Base+0xec0>
   16e04:	ldr	r0, [pc, #1024]	; 1720c <dim_enter_array@@Base+0x18ac>
   16e08:	ldr	r0, [pc, r0]
   16e0c:	add	r0, r0, #144	; 0x90
   16e10:	bl	127b4 <coda_cursor_goto_parent@plt>
   16e14:	str	r0, [sp, #48]	; 0x30
   16e18:	b	16f5c <dim_enter_array@@Base+0x15fc>
   16e1c:	ldr	r0, [pc, #976]	; 171f4 <dim_enter_array@@Base+0x1894>
   16e20:	ldr	r0, [pc, r0]
   16e24:	add	r1, r0, #800	; 0x320
   16e28:	ldr	r0, [r0, #3360]	; 0xd20
   16e2c:	movw	r2, #80	; 0x50
   16e30:	mul	r0, r0, r2
   16e34:	add	r0, r1, r0
   16e38:	str	r0, [fp, #-84]	; 0xffffffac
   16e3c:	ldr	r0, [fp, #-84]	; 0xffffffac
   16e40:	ldr	r0, [r0]
   16e44:	str	r0, [fp, #-88]	; 0xffffffa8
   16e48:	movw	r0, #0
   16e4c:	str	r0, [fp, #-92]	; 0xffffffa4
   16e50:	ldr	r0, [fp, #-92]	; 0xffffffa4
   16e54:	ldr	r1, [fp, #-84]	; 0xffffffac
   16e58:	ldr	r1, [r1, #4]
   16e5c:	cmp	r0, r1
   16e60:	bge	16f58 <dim_enter_array@@Base+0x15f8>
   16e64:	ldr	r0, [fp, #-84]	; 0xffffffac
   16e68:	add	r0, r0, #8
   16e6c:	ldr	r1, [fp, #-92]	; 0xffffffa4
   16e70:	add	r0, r0, r1, lsl #2
   16e74:	ldr	r0, [r0]
   16e78:	cmn	r0, #1
   16e7c:	bne	16f44 <dim_enter_array@@Base+0x15e4>
   16e80:	ldr	r0, [pc, #880]	; 171f8 <dim_enter_array@@Base+0x1898>
   16e84:	ldr	r0, [pc, r0]
   16e88:	add	r0, r0, #4
   16e8c:	ldr	r1, [fp, #-88]	; 0xffffffa8
   16e90:	ldr	r2, [fp, #-92]	; 0xffffffa4
   16e94:	add	r1, r1, r2
   16e98:	ldr	r2, [pc, #1012]	; 17294 <dim_enter_array@@Base+0x1934>
   16e9c:	ldr	r2, [pc, r2]
   16ea0:	add	r1, r2, r1, lsl #2
   16ea4:	ldr	r1, [r1, #108]	; 0x6c
   16ea8:	ldr	r3, [fp, #-84]	; 0xffffffac
   16eac:	ldr	r3, [r3, #44]	; 0x2c
   16eb0:	mov	ip, #0
   16eb4:	str	ip, [r1, r3, lsl #2]
   16eb8:	ldr	r1, [fp, #-88]	; 0xffffffa8
   16ebc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16ec0:	add	r1, r1, r3
   16ec4:	add	r1, r2, r1, lsl #2
   16ec8:	add	r1, r1, #4
   16ecc:	ldr	r1, [r1]
   16ed0:	cmn	r1, #1
   16ed4:	str	r0, [sp, #44]	; 0x2c
   16ed8:	bne	16f10 <dim_enter_array@@Base+0x15b0>
   16edc:	ldr	r0, [pc, #792]	; 171fc <dim_enter_array@@Base+0x189c>
   16ee0:	ldr	r0, [pc, r0]
   16ee4:	add	r0, r0, #4
   16ee8:	ldr	r1, [fp, #-88]	; 0xffffffa8
   16eec:	ldr	r2, [fp, #-92]	; 0xffffffa4
   16ef0:	add	r1, r1, r2
   16ef4:	ldr	r2, [pc, #924]	; 17298 <dim_enter_array@@Base+0x1938>
   16ef8:	ldr	r2, [pc, r2]
   16efc:	add	r1, r2, r1, lsl #2
   16f00:	add	r1, r1, #4
   16f04:	movw	r2, #0
   16f08:	str	r2, [r1]
   16f0c:	str	r0, [sp, #40]	; 0x28
   16f10:	ldr	r0, [pc, #744]	; 17200 <dim_enter_array@@Base+0x18a0>
   16f14:	ldr	r0, [pc, r0]
   16f18:	add	r0, r0, #36	; 0x24
   16f1c:	ldr	r1, [fp, #-88]	; 0xffffffa8
   16f20:	ldr	r2, [fp, #-92]	; 0xffffffa4
   16f24:	add	r1, r1, r2
   16f28:	ldr	r2, [pc, #876]	; 1729c <dim_enter_array@@Base+0x193c>
   16f2c:	ldr	r2, [pc, r2]
   16f30:	add	r1, r2, r1, lsl #2
   16f34:	add	r1, r1, #36	; 0x24
   16f38:	movw	r2, #0
   16f3c:	str	r2, [r1]
   16f40:	str	r0, [sp, #36]	; 0x24
   16f44:	b	16f48 <dim_enter_array@@Base+0x15e8>
   16f48:	ldr	r0, [fp, #-92]	; 0xffffffa4
   16f4c:	add	r0, r0, #1
   16f50:	str	r0, [fp, #-92]	; 0xffffffa4
   16f54:	b	16e50 <dim_enter_array@@Base+0x14f0>
   16f58:	b	16f5c <dim_enter_array@@Base+0x15fc>
   16f5c:	b	171ac <dim_enter_array@@Base+0x184c>
   16f60:	ldr	r0, [pc, #596]	; 171bc <dim_enter_array@@Base+0x185c>
   16f64:	ldr	r0, [pc, r0]
   16f68:	ldr	r1, [fp, #-8]
   16f6c:	ldr	r0, [r0, #3360]	; 0xd20
   16f70:	cmp	r1, r0
   16f74:	bne	16f7c <dim_enter_array@@Base+0x161c>
   16f78:	b	16f9c <dim_enter_array@@Base+0x163c>
   16f7c:	ldr	r0, [pc, #572]	; 171c0 <dim_enter_array@@Base+0x1860>
   16f80:	add	r0, pc, r0
   16f84:	ldr	r1, [pc, #568]	; 171c4 <dim_enter_array@@Base+0x1864>
   16f88:	add	r1, pc, r1
   16f8c:	ldr	r2, [pc, #564]	; 171c8 <dim_enter_array@@Base+0x1868>
   16f90:	add	r3, pc, r2
   16f94:	movw	r2, #252	; 0xfc
   16f98:	bl	129f4 <__assert_fail@plt>
   16f9c:	ldr	r0, [fp, #-16]
   16fa0:	cmp	r0, #4
   16fa4:	bne	16fe4 <dim_enter_array@@Base+0x1684>
   16fa8:	ldr	r0, [pc, #548]	; 171d4 <dim_enter_array@@Base+0x1874>
   16fac:	ldr	r0, [pc, r0]
   16fb0:	add	r0, r0, #144	; 0x90
   16fb4:	add	r1, sp, #92	; 0x5c
   16fb8:	bl	127e4 <coda_cursor_get_string_length@plt>
   16fbc:	cmp	r0, #0
   16fc0:	beq	16fd0 <dim_enter_array@@Base+0x1670>
   16fc4:	ldr	r0, [pc, #524]	; 171d8 <dim_enter_array@@Base+0x1878>
   16fc8:	ldr	r0, [pc, r0]
   16fcc:	blx	r0
   16fd0:	ldr	r0, [sp, #92]	; 0x5c
   16fd4:	asr	r1, r0, #31
   16fd8:	str	r0, [sp, #96]	; 0x60
   16fdc:	str	r1, [sp, #100]	; 0x64
   16fe0:	b	17010 <dim_enter_array@@Base+0x16b0>
   16fe4:	ldr	r0, [pc, #480]	; 171cc <dim_enter_array@@Base+0x186c>
   16fe8:	ldr	r0, [pc, r0]
   16fec:	add	r0, r0, #144	; 0x90
   16ff0:	add	r1, sp, #96	; 0x60
   16ff4:	bl	1258c <coda_cursor_get_byte_size@plt>
   16ff8:	cmp	r0, #0
   16ffc:	beq	1700c <dim_enter_array@@Base+0x16ac>
   17000:	ldr	r0, [pc, #456]	; 171d0 <dim_enter_array@@Base+0x1870>
   17004:	ldr	r0, [pc, r0]
   17008:	blx	r0
   1700c:	b	17010 <dim_enter_array@@Base+0x16b0>
   17010:	ldr	r0, [pc, #452]	; 171dc <dim_enter_array@@Base+0x187c>
   17014:	ldr	r0, [pc, r0]
   17018:	add	r0, r0, #4
   1701c:	ldr	r1, [fp, #-8]
   17020:	add	r1, r1, r1, lsl #2
   17024:	ldr	r2, [pc, #628]	; 172a0 <dim_enter_array@@Base+0x1940>
   17028:	ldr	r2, [pc, r2]
   1702c:	add	r1, r2, r1, lsl #4
   17030:	add	r1, r1, #800	; 0x320
   17034:	str	r1, [fp, #-96]	; 0xffffffa0
   17038:	ldr	r1, [fp, #-96]	; 0xffffffa0
   1703c:	ldr	r1, [r1]
   17040:	str	r1, [fp, #-100]	; 0xffffff9c
   17044:	ldr	r1, [sp, #96]	; 0x60
   17048:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1704c:	ldr	r3, [pc, #592]	; 172a4 <dim_enter_array@@Base+0x1944>
   17050:	ldr	r3, [pc, r3]
   17054:	add	r2, r3, r2, lsl #2
   17058:	ldr	r2, [r2, #108]	; 0x6c
   1705c:	ldr	ip, [fp, #-96]	; 0xffffffa0
   17060:	ldr	ip, [ip, #44]	; 0x2c
   17064:	str	r1, [r2, ip, lsl #2]
   17068:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1706c:	add	r1, r3, r1, lsl #2
   17070:	add	r1, r1, #4
   17074:	ldr	r1, [r1]
   17078:	cmn	r1, #1
   1707c:	str	r0, [sp, #32]
   17080:	bne	170c4 <dim_enter_array@@Base+0x1764>
   17084:	ldr	r0, [pc, #348]	; 171e8 <dim_enter_array@@Base+0x1888>
   17088:	ldr	r0, [pc, r0]
   1708c:	add	r0, r0, #36	; 0x24
   17090:	ldr	r1, [sp, #96]	; 0x60
   17094:	ldr	r2, [fp, #-100]	; 0xffffff9c
   17098:	ldr	r3, [pc, #520]	; 172a8 <dim_enter_array@@Base+0x1948>
   1709c:	ldr	r3, [pc, r3]
   170a0:	add	r2, r3, r2, lsl #2
   170a4:	str	r1, [r2, #4]
   170a8:	ldr	r1, [sp, #96]	; 0x60
   170ac:	ldr	r2, [fp, #-100]	; 0xffffff9c
   170b0:	add	r2, r3, r2, lsl #2
   170b4:	add	r2, r2, #36	; 0x24
   170b8:	str	r1, [r2]
   170bc:	str	r0, [sp, #28]
   170c0:	b	17188 <dim_enter_array@@Base+0x1828>
   170c4:	ldr	r0, [fp, #-100]	; 0xffffff9c
   170c8:	ldr	r1, [pc, #476]	; 172ac <dim_enter_array@@Base+0x194c>
   170cc:	ldr	r1, [pc, r1]
   170d0:	add	r0, r1, r0, lsl #2
   170d4:	ldr	r0, [r0, #4]
   170d8:	ldr	r1, [sp, #96]	; 0x60
   170dc:	ldr	r2, [sp, #100]	; 0x64
   170e0:	subs	r1, r0, r1
   170e4:	rscs	r0, r2, r0, asr #31
   170e8:	str	r1, [sp, #24]
   170ec:	str	r0, [sp, #20]
   170f0:	bge	17124 <dim_enter_array@@Base+0x17c4>
   170f4:	b	170f8 <dim_enter_array@@Base+0x1798>
   170f8:	ldr	r0, [pc, #224]	; 171e0 <dim_enter_array@@Base+0x1880>
   170fc:	ldr	r0, [pc, r0]
   17100:	add	r0, r0, #4
   17104:	ldr	r1, [sp, #96]	; 0x60
   17108:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1710c:	ldr	r3, [pc, #412]	; 172b0 <dim_enter_array@@Base+0x1950>
   17110:	ldr	r3, [pc, r3]
   17114:	add	r2, r3, r2, lsl #2
   17118:	add	r2, r2, #4
   1711c:	str	r1, [r2]
   17120:	str	r0, [sp, #16]
   17124:	ldr	r0, [fp, #-100]	; 0xffffff9c
   17128:	ldr	r1, [pc, #388]	; 172b4 <dim_enter_array@@Base+0x1954>
   1712c:	ldr	r1, [pc, r1]
   17130:	add	r0, r1, r0, lsl #2
   17134:	ldr	r0, [r0, #36]	; 0x24
   17138:	ldr	r1, [sp, #96]	; 0x60
   1713c:	ldr	r2, [sp, #100]	; 0x64
   17140:	subs	r1, r1, r0
   17144:	sbcs	r0, r2, r0, asr #31
   17148:	str	r1, [sp, #12]
   1714c:	str	r0, [sp, #8]
   17150:	bge	17184 <dim_enter_array@@Base+0x1824>
   17154:	b	17158 <dim_enter_array@@Base+0x17f8>
   17158:	ldr	r0, [pc, #132]	; 171e4 <dim_enter_array@@Base+0x1884>
   1715c:	ldr	r0, [pc, r0]
   17160:	add	r0, r0, #36	; 0x24
   17164:	ldr	r1, [sp, #96]	; 0x60
   17168:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1716c:	ldr	r3, [pc, #324]	; 172b8 <dim_enter_array@@Base+0x1958>
   17170:	ldr	r3, [pc, r3]
   17174:	add	r2, r3, r2, lsl #2
   17178:	add	r2, r2, #36	; 0x24
   1717c:	str	r1, [r2]
   17180:	str	r0, [sp, #4]
   17184:	b	17188 <dim_enter_array@@Base+0x1828>
   17188:	b	171ac <dim_enter_array@@Base+0x184c>
   1718c:	ldr	r0, [pc, #200]	; 1725c <dim_enter_array@@Base+0x18fc>
   17190:	add	r0, pc, r0
   17194:	ldr	r1, [pc, #196]	; 17260 <dim_enter_array@@Base+0x1900>
   17198:	add	r1, pc, r1
   1719c:	ldr	r2, [pc, #192]	; 17264 <dim_enter_array@@Base+0x1904>
   171a0:	add	r3, pc, r2
   171a4:	movw	r2, #294	; 0x126
   171a8:	bl	129f4 <__assert_fail@plt>
   171ac:	mov	sp, fp
   171b0:	pop	{fp, pc}
   171b4:	andeq	sl, r1, ip, ror r9
   171b8:	andeq	sl, r1, ip, ror r9
   171bc:	andeq	sl, r1, r8, asr #4
   171c0:	andeq	r8, r0, r1, lsr r3
   171c4:			; <UNDEFINED> instruction: 0x000081ba
   171c8:	strdeq	r8, [r0], -r6
   171cc:	andeq	sl, r1, r4, asr #3
   171d0:	ldrdeq	sl, [r1], -r4
   171d4:	andeq	sl, r1, r0, lsl #4
   171d8:	andeq	sl, r1, r0, lsl r2
   171dc:	ldrdeq	sl, [r1], -ip
   171e0:	strdeq	sl, [r1], -r4
   171e4:	muleq	r1, r4, r0
   171e8:	andeq	sl, r1, r8, ror #2
   171ec:	andeq	sl, r1, r4, ror r4
   171f0:	andeq	sl, r1, r4, asr r4
   171f4:	andeq	sl, r1, ip, lsl #7
   171f8:	andeq	sl, r1, ip, ror #6
   171fc:	andeq	sl, r1, r0, lsl r3
   17200:	ldrdeq	sl, [r1], -ip
   17204:	andeq	sl, r1, r0, lsl r4
   17208:	strdeq	sl, [r1], -r4
   1720c:	andeq	sl, r1, r4, lsr #7
   17210:	andeq	sl, r1, ip, lsl #18
   17214:	andeq	sl, r1, r8, ror r6
   17218:	andeq	sl, r1, ip, asr r5
   1721c:	andeq	sl, r1, r0, ror r5
   17220:	muleq	r1, r0, r4
   17224:	strdeq	sl, [r1], -r4
   17228:	andeq	sl, r1, r8, lsl #10
   1722c:	ldrdeq	sl, [r1], -r0
   17230:	andeq	sl, r1, r8, asr r6
   17234:	strdeq	sl, [r1], -r4
   17238:	ldrdeq	sl, [r1], -r0
   1723c:	ldrdeq	sl, [r1], -ip
   17240:	andeq	r8, r0, r5, asr #18
   17244:	andeq	r8, r0, sl, lsl r8
   17248:	andeq	r8, r0, r6, asr r9
   1724c:	andeq	sl, r1, r8, ror r8
   17250:	muleq	r1, r4, r7
   17254:	andeq	sl, r1, ip, lsr #14
   17258:	andeq	sl, r1, r8, lsl r8
   1725c:	andeq	r7, r0, r3, lsl #31
   17260:	andeq	r7, r0, sl, lsr #31
   17264:	andeq	r8, r0, r6, ror #1
   17268:	andeq	sl, r1, r8, asr r8
   1726c:	strdeq	sl, [r1], -r8
   17270:			; <UNDEFINED> instruction: 0x0001a7b8
   17274:	andeq	sl, r1, r4, ror r7
   17278:	andeq	sl, r1, r0, asr r7
   1727c:	andeq	sl, r1, ip, lsl #14
   17280:	andeq	sl, r1, r8, asr #12
   17284:	andeq	sl, r1, r4, lsr #12
   17288:	andeq	sl, r1, r4, ror #11
   1728c:	andeq	sl, r1, ip, asr r4
   17290:	strdeq	sl, [r1], -r8
   17294:	andeq	sl, r1, r4, asr r3
   17298:	strdeq	sl, [r1], -r8
   1729c:	andeq	sl, r1, r4, asr #5
   172a0:	andeq	sl, r1, r4, lsl #3
   172a4:	andeq	sl, r1, r0, lsr #3
   172a8:	andeq	sl, r1, r4, asr r1
   172ac:	andeq	sl, r1, r4, lsr #2
   172b0:	andeq	sl, r1, r0, ror #1
   172b4:	andeq	sl, r1, r4, asr #1
   172b8:	andeq	sl, r1, r0, lsl #1

000172bc <dim_leave_array@@Base>:
   172bc:	push	{fp, lr}
   172c0:	mov	fp, sp
   172c4:	sub	sp, sp, #40	; 0x28
   172c8:	ldr	r0, [pc, #616]	; 17538 <dim_leave_array@@Base+0x27c>
   172cc:	ldr	r0, [pc, r0]
   172d0:	ldr	r0, [r0, #3360]	; 0xd20
   172d4:	cmp	r0, #0
   172d8:	blt	172e0 <dim_leave_array@@Base+0x24>
   172dc:	b	17300 <dim_leave_array@@Base+0x44>
   172e0:	ldr	r0, [pc, #596]	; 1753c <dim_leave_array@@Base+0x280>
   172e4:	add	r0, pc, r0
   172e8:	ldr	r1, [pc, #592]	; 17540 <dim_leave_array@@Base+0x284>
   172ec:	add	r1, pc, r1
   172f0:	ldr	r2, [pc, #588]	; 17544 <dim_leave_array@@Base+0x288>
   172f4:	add	r3, pc, r2
   172f8:	movw	r2, #579	; 0x243
   172fc:	bl	129f4 <__assert_fail@plt>
   17300:	ldr	r0, [pc, #576]	; 17548 <dim_leave_array@@Base+0x28c>
   17304:	ldr	r0, [pc, r0]
   17308:	ldr	r1, [pc, #572]	; 1754c <dim_leave_array@@Base+0x290>
   1730c:	ldr	r1, [pc, r1]
   17310:	add	r2, r1, #800	; 0x320
   17314:	ldr	r1, [r1, #3360]	; 0xd20
   17318:	movw	r3, #80	; 0x50
   1731c:	mul	r1, r1, r3
   17320:	add	r1, r2, r1
   17324:	str	r1, [fp, #-4]
   17328:	ldr	r1, [fp, #-4]
   1732c:	ldr	r1, [r1]
   17330:	str	r1, [fp, #-8]
   17334:	ldr	r1, [fp, #-4]
   17338:	ldr	r1, [r1, #4]
   1733c:	ldr	r2, [r0]
   17340:	sub	r1, r2, r1
   17344:	str	r1, [r0]
   17348:	movw	r0, #0
   1734c:	str	r0, [fp, #-12]
   17350:	ldr	r0, [fp, #-12]
   17354:	ldr	r1, [fp, #-4]
   17358:	ldr	r1, [r1, #4]
   1735c:	cmp	r0, r1
   17360:	bge	173e8 <dim_leave_array@@Base+0x12c>
   17364:	ldr	r0, [pc, #500]	; 17560 <dim_leave_array@@Base+0x2a4>
   17368:	ldr	r0, [pc, r0]
   1736c:	add	r0, r0, #72	; 0x48
   17370:	ldr	r1, [fp, #-8]
   17374:	ldr	r2, [fp, #-12]
   17378:	add	r1, r1, r2
   1737c:	ldr	r2, [pc, #484]	; 17568 <dim_leave_array@@Base+0x2ac>
   17380:	ldr	r2, [pc, r2]
   17384:	add	r1, r2, r1, lsl #2
   17388:	add	r1, r1, #72	; 0x48
   1738c:	ldr	r1, [r1]
   17390:	cmp	r1, #0
   17394:	str	r0, [fp, #-16]
   17398:	beq	173d4 <dim_leave_array@@Base+0x118>
   1739c:	ldr	r0, [pc, #448]	; 17564 <dim_leave_array@@Base+0x2a8>
   173a0:	ldr	r0, [pc, r0]
   173a4:	add	r0, r0, #108	; 0x6c
   173a8:	ldr	r1, [fp, #-8]
   173ac:	ldr	r2, [fp, #-12]
   173b0:	add	r1, r1, r2
   173b4:	ldr	r2, [pc, #432]	; 1756c <dim_leave_array@@Base+0x2b0>
   173b8:	ldr	r2, [pc, r2]
   173bc:	add	r1, r2, r1, lsl #2
   173c0:	add	r1, r1, #108	; 0x6c
   173c4:	ldr	r1, [r1]
   173c8:	str	r0, [sp, #20]
   173cc:	mov	r0, r1
   173d0:	bl	12658 <free@plt>
   173d4:	b	173d8 <dim_leave_array@@Base+0x11c>
   173d8:	ldr	r0, [fp, #-12]
   173dc:	add	r0, r0, #1
   173e0:	str	r0, [fp, #-12]
   173e4:	b	17350 <dim_leave_array@@Base+0x94>
   173e8:	ldr	r0, [pc, #352]	; 17550 <dim_leave_array@@Base+0x294>
   173ec:	ldr	r0, [pc, r0]
   173f0:	movw	r1, #0
   173f4:	str	r1, [r0, #68]	; 0x44
   173f8:	mvn	r2, #0
   173fc:	str	r2, [r0, #104]	; 0x68
   17400:	str	r1, [fp, #-12]
   17404:	ldr	r0, [pc, #328]	; 17554 <dim_leave_array@@Base+0x298>
   17408:	ldr	r0, [pc, r0]
   1740c:	ldr	r1, [fp, #-12]
   17410:	ldr	r0, [r0]
   17414:	cmp	r1, r0
   17418:	bge	17478 <dim_leave_array@@Base+0x1bc>
   1741c:	ldr	r0, [pc, #308]	; 17558 <dim_leave_array@@Base+0x29c>
   17420:	ldr	r0, [pc, r0]
   17424:	add	r0, r0, #72	; 0x48
   17428:	ldr	r1, [fp, #-12]
   1742c:	ldr	r2, [pc, #316]	; 17570 <dim_leave_array@@Base+0x2b4>
   17430:	ldr	r2, [pc, r2]
   17434:	add	r1, r2, r1, lsl #2
   17438:	add	r1, r1, #72	; 0x48
   1743c:	ldr	r1, [r1]
   17440:	cmp	r1, #0
   17444:	str	r0, [sp, #16]
   17448:	beq	17464 <dim_leave_array@@Base+0x1a8>
   1744c:	ldr	r0, [pc, #264]	; 1755c <dim_leave_array@@Base+0x2a0>
   17450:	ldr	r0, [pc, r0]
   17454:	movw	r1, #1
   17458:	str	r1, [r0, #68]	; 0x44
   1745c:	ldr	r1, [fp, #-12]
   17460:	str	r1, [r0, #104]	; 0x68
   17464:	b	17468 <dim_leave_array@@Base+0x1ac>
   17468:	ldr	r0, [fp, #-12]
   1746c:	add	r0, r0, #1
   17470:	str	r0, [fp, #-12]
   17474:	b	17404 <dim_leave_array@@Base+0x148>
   17478:	ldr	r0, [fp, #-8]
   1747c:	ldr	r1, [fp, #-4]
   17480:	ldr	r1, [r1, #4]
   17484:	add	r0, r0, r1
   17488:	ldr	r1, [pc, #228]	; 17574 <dim_leave_array@@Base+0x2b8>
   1748c:	ldr	r1, [pc, r1]
   17490:	add	r0, r1, r0, lsl #3
   17494:	ldr	r1, [r0, #296]	; 0x128
   17498:	ldr	r0, [r0, #300]	; 0x12c
   1749c:	subs	r1, r1, #1
   174a0:	sbcs	r0, r0, #0
   174a4:	str	r1, [sp, #12]
   174a8:	str	r0, [sp, #8]
   174ac:	blt	17530 <dim_leave_array@@Base+0x274>
   174b0:	b	174b4 <dim_leave_array@@Base+0x1f8>
   174b4:	ldr	r0, [fp, #-8]
   174b8:	sub	r0, r0, #1
   174bc:	str	r0, [fp, #-12]
   174c0:	ldr	r0, [fp, #-12]
   174c4:	cmp	r0, #0
   174c8:	blt	1752c <dim_leave_array@@Base+0x270>
   174cc:	ldr	r0, [fp, #-8]
   174d0:	ldr	r1, [pc, #160]	; 17578 <dim_leave_array@@Base+0x2bc>
   174d4:	ldr	r1, [pc, r1]
   174d8:	add	r1, r1, #176	; 0xb0
   174dc:	mov	r2, r1
   174e0:	ldr	r0, [r2, r0, lsl #3]!
   174e4:	ldr	r3, [r2, #4]
   174e8:	ldr	r2, [fp, #-12]
   174ec:	ldr	r2, [r1, r2, lsl #3]!
   174f0:	ldr	ip, [r1, #4]
   174f4:	str	r0, [sp, #4]
   174f8:	mov	r0, r2
   174fc:	str	r1, [sp]
   17500:	mov	r1, ip
   17504:	ldr	r2, [sp, #4]
   17508:	bl	1ec54 <main@@Base+0x2fa0>
   1750c:	ldr	r2, [sp]
   17510:	str	r1, [r2, #4]
   17514:	str	r0, [r2]
   17518:	ldr	r0, [fp, #-12]
   1751c:	mvn	r1, #0
   17520:	add	r0, r0, r1
   17524:	str	r0, [fp, #-12]
   17528:	b	174c0 <dim_leave_array@@Base+0x204>
   1752c:	b	17530 <dim_leave_array@@Base+0x274>
   17530:	mov	sp, fp
   17534:	pop	{fp, pc}
   17538:	andeq	r9, r1, r0, ror #29
   1753c:	andeq	r7, r0, ip, asr #30
   17540:	andeq	r7, r0, r6, asr lr
   17544:	andeq	r7, r0, sl, asr pc
   17548:	andeq	r9, r1, ip, ror #29
   1754c:	andeq	r9, r1, r0, lsr #29
   17550:	andeq	r9, r1, r4, lsl #28
   17554:	andeq	r9, r1, r8, ror #27
   17558:	ldrdeq	r9, [r1], -r0
   1755c:	andeq	r9, r1, r0, lsr #27
   17560:	andeq	r9, r1, r8, lsl #29
   17564:	andeq	r9, r1, r0, asr lr
   17568:	andeq	r9, r1, r0, ror lr
   1756c:	andeq	r9, r1, r8, lsr lr
   17570:	andeq	r9, r1, r0, asr #27
   17574:	andeq	r9, r1, r4, ror #26
   17578:	andeq	r9, r1, ip, lsl sp

0001757c <dim_record_field_available@@Base>:
   1757c:	push	{fp, lr}
   17580:	mov	fp, sp
   17584:	sub	sp, sp, #8
   17588:	movw	r0, #0
   1758c:	str	r0, [sp, #4]
   17590:	ldr	r1, [sp, #4]
   17594:	ldr	r2, [sp, #4]
   17598:	bl	175a4 <dim_record_field_available@@Base+0x28>
   1759c:	mov	sp, fp
   175a0:	pop	{fp, pc}
   175a4:	push	{fp, lr}
   175a8:	mov	fp, sp
   175ac:	sub	sp, sp, #80	; 0x50
   175b0:	ldr	r3, [pc, #1144]	; 17a30 <dim_record_field_available@@Base+0x4b4>
   175b4:	ldr	r3, [pc, r3]
   175b8:	add	r3, r3, #144	; 0x90
   175bc:	str	r0, [fp, #-8]
   175c0:	str	r1, [fp, #-12]
   175c4:	str	r2, [fp, #-16]
   175c8:	mov	r0, r3
   175cc:	sub	r1, fp, #20
   175d0:	bl	126e8 <coda_cursor_get_type_class@plt>
   175d4:	cmp	r0, #0
   175d8:	beq	175e8 <dim_record_field_available@@Base+0x6c>
   175dc:	ldr	r0, [pc, #1104]	; 17a34 <dim_record_field_available@@Base+0x4b8>
   175e0:	ldr	r0, [pc, r0]
   175e4:	blx	r0
   175e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   175ec:	cmp	r0, #0
   175f0:	str	r0, [sp, #32]
   175f4:	beq	178c4 <dim_record_field_available@@Base+0x348>
   175f8:	b	175fc <dim_record_field_available@@Base+0x80>
   175fc:	ldr	r0, [sp, #32]
   17600:	cmp	r0, #1
   17604:	bne	179fc <dim_record_field_available@@Base+0x480>
   17608:	b	1760c <dim_record_field_available@@Base+0x90>
   1760c:	ldr	r0, [pc, #1084]	; 17a50 <dim_record_field_available@@Base+0x4d4>
   17610:	ldr	r0, [pc, r0]
   17614:	add	r1, r0, #800	; 0x320
   17618:	ldr	r2, [fp, #-12]
   1761c:	movw	r3, #80	; 0x50
   17620:	mul	r2, r2, r3
   17624:	add	r1, r1, r2
   17628:	str	r1, [fp, #-24]	; 0xffffffe8
   1762c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17630:	ldr	r1, [r1]
   17634:	str	r1, [fp, #-32]	; 0xffffffe0
   17638:	ldr	r1, [fp, #-12]
   1763c:	ldr	r0, [r0, #3360]	; 0xd20
   17640:	cmp	r1, r0
   17644:	bge	1764c <dim_record_field_available@@Base+0xd0>
   17648:	b	1766c <dim_record_field_available@@Base+0xf0>
   1764c:	ldr	r0, [pc, #1024]	; 17a54 <dim_record_field_available@@Base+0x4d8>
   17650:	add	r0, pc, r0
   17654:	ldr	r1, [pc, #1020]	; 17a58 <dim_record_field_available@@Base+0x4dc>
   17658:	add	r1, pc, r1
   1765c:	ldr	r2, [pc, #1016]	; 17a5c <dim_record_field_available@@Base+0x4e0>
   17660:	add	r3, pc, r2
   17664:	movw	r2, #638	; 0x27e
   17668:	bl	129f4 <__assert_fail@plt>
   1766c:	ldr	r0, [fp, #-12]
   17670:	cmp	r0, #0
   17674:	bne	17684 <dim_record_field_available@@Base+0x108>
   17678:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1767c:	movw	r1, #0
   17680:	str	r1, [r0, #44]	; 0x2c
   17684:	ldr	r0, [pc, #980]	; 17a60 <dim_record_field_available@@Base+0x4e4>
   17688:	ldr	r0, [pc, r0]
   1768c:	ldr	r1, [fp, #-12]
   17690:	ldr	r0, [r0, #3360]	; 0xd20
   17694:	cmp	r1, r0
   17698:	bge	176d4 <dim_record_field_available@@Base+0x158>
   1769c:	ldr	r0, [pc, #960]	; 17a64 <dim_record_field_available@@Base+0x4e8>
   176a0:	ldr	r0, [pc, r0]
   176a4:	add	r0, r0, #800	; 0x320
   176a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   176ac:	ldr	r1, [r1, #44]	; 0x2c
   176b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   176b4:	ldr	r2, [r2, #40]	; 0x28
   176b8:	mul	r1, r1, r2
   176bc:	ldr	r2, [fp, #-12]
   176c0:	add	r2, r2, #1
   176c4:	movw	r3, #80	; 0x50
   176c8:	mul	r2, r2, r3
   176cc:	add	r0, r0, r2
   176d0:	str	r1, [r0, #44]	; 0x2c
   176d4:	movw	r0, #1
   176d8:	str	r0, [fp, #-28]	; 0xffffffe4
   176dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   176e0:	str	r0, [fp, #-36]	; 0xffffffdc
   176e4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   176e8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   176ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   176f0:	ldr	r2, [r2, #4]
   176f4:	add	r1, r1, r2
   176f8:	cmp	r0, r1
   176fc:	bge	177ac <dim_record_field_available@@Base+0x230>
   17700:	ldr	r0, [pc, #892]	; 17a84 <dim_record_field_available@@Base+0x508>
   17704:	ldr	r0, [pc, r0]
   17708:	add	r0, r0, #72	; 0x48
   1770c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17710:	ldr	r2, [pc, #896]	; 17a98 <dim_record_field_available@@Base+0x51c>
   17714:	ldr	r2, [pc, r2]
   17718:	add	r1, r2, r1, lsl #2
   1771c:	add	r1, r1, #72	; 0x48
   17720:	ldr	r1, [r1]
   17724:	cmp	r1, #0
   17728:	str	r0, [sp, #28]
   1772c:	beq	17764 <dim_record_field_available@@Base+0x1e8>
   17730:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17734:	ldr	r1, [pc, #864]	; 17a9c <dim_record_field_available@@Base+0x520>
   17738:	ldr	r1, [pc, r1]
   1773c:	add	r0, r1, r0, lsl #2
   17740:	ldr	r0, [r0, #108]	; 0x6c
   17744:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17748:	ldr	r1, [r1, #44]	; 0x2c
   1774c:	add	r0, r0, r1, lsl #2
   17750:	ldr	r0, [r0]
   17754:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17758:	mul	r0, r1, r0
   1775c:	str	r0, [fp, #-28]	; 0xffffffe4
   17760:	b	17798 <dim_record_field_available@@Base+0x21c>
   17764:	ldr	r0, [pc, #796]	; 17a88 <dim_record_field_available@@Base+0x50c>
   17768:	ldr	r0, [pc, r0]
   1776c:	add	r0, r0, #4
   17770:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17774:	ldr	r2, [pc, #804]	; 17aa0 <dim_record_field_available@@Base+0x524>
   17778:	ldr	r2, [pc, r2]
   1777c:	add	r1, r2, r1, lsl #2
   17780:	add	r1, r1, #4
   17784:	ldr	r1, [r1]
   17788:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1778c:	mul	r1, r2, r1
   17790:	str	r1, [fp, #-28]	; 0xffffffe4
   17794:	str	r0, [sp, #24]
   17798:	b	1779c <dim_record_field_available@@Base+0x220>
   1779c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   177a0:	add	r0, r0, #1
   177a4:	str	r0, [fp, #-36]	; 0xffffffdc
   177a8:	b	176e4 <dim_record_field_available@@Base+0x168>
   177ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   177b0:	cmp	r0, #0
   177b4:	ble	178c0 <dim_record_field_available@@Base+0x344>
   177b8:	ldr	r0, [pc, #680]	; 17a68 <dim_record_field_available@@Base+0x4ec>
   177bc:	ldr	r0, [pc, r0]
   177c0:	add	r0, r0, #144	; 0x90
   177c4:	bl	12730 <coda_cursor_goto_first_array_element@plt>
   177c8:	cmp	r0, #0
   177cc:	beq	177dc <dim_record_field_available@@Base+0x260>
   177d0:	ldr	r0, [pc, #660]	; 17a6c <dim_record_field_available@@Base+0x4f0>
   177d4:	ldr	r0, [pc, r0]
   177d8:	blx	r0
   177dc:	movw	r0, #0
   177e0:	str	r0, [sp, #40]	; 0x28
   177e4:	ldr	r0, [sp, #40]	; 0x28
   177e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   177ec:	cmp	r0, r1
   177f0:	bge	178ac <dim_record_field_available@@Base+0x330>
   177f4:	ldr	r0, [fp, #-8]
   177f8:	add	r0, r0, #1
   177fc:	ldr	r1, [fp, #-12]
   17800:	add	r1, r1, #1
   17804:	ldr	r2, [fp, #-16]
   17808:	bl	175a4 <dim_record_field_available@@Base+0x28>
   1780c:	cmp	r0, #0
   17810:	beq	17834 <dim_record_field_available@@Base+0x2b8>
   17814:	ldr	r0, [pc, #612]	; 17a80 <dim_record_field_available@@Base+0x504>
   17818:	ldr	r0, [pc, r0]
   1781c:	add	r0, r0, #144	; 0x90
   17820:	bl	127b4 <coda_cursor_goto_parent@plt>
   17824:	movw	lr, #1
   17828:	str	lr, [fp, #-4]
   1782c:	str	r0, [sp, #20]
   17830:	b	17a24 <dim_record_field_available@@Base+0x4a8>
   17834:	ldr	r0, [sp, #40]	; 0x28
   17838:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1783c:	sub	r1, r1, #1
   17840:	cmp	r0, r1
   17844:	bge	17898 <dim_record_field_available@@Base+0x31c>
   17848:	ldr	r0, [pc, #548]	; 17a74 <dim_record_field_available@@Base+0x4f8>
   1784c:	ldr	r0, [pc, r0]
   17850:	add	r0, r0, #144	; 0x90
   17854:	bl	12820 <coda_cursor_goto_next_array_element@plt>
   17858:	cmp	r0, #0
   1785c:	beq	1786c <dim_record_field_available@@Base+0x2f0>
   17860:	ldr	r0, [pc, #528]	; 17a78 <dim_record_field_available@@Base+0x4fc>
   17864:	ldr	r0, [pc, r0]
   17868:	blx	r0
   1786c:	ldr	r0, [pc, #520]	; 17a7c <dim_record_field_available@@Base+0x500>
   17870:	ldr	r0, [pc, r0]
   17874:	add	r0, r0, #800	; 0x320
   17878:	ldr	r1, [fp, #-12]
   1787c:	add	r1, r1, #1
   17880:	movw	r2, #80	; 0x50
   17884:	mul	r1, r1, r2
   17888:	add	r0, r0, r1
   1788c:	ldr	r1, [r0, #44]	; 0x2c
   17890:	add	r1, r1, #1
   17894:	str	r1, [r0, #44]	; 0x2c
   17898:	b	1789c <dim_record_field_available@@Base+0x320>
   1789c:	ldr	r0, [sp, #40]	; 0x28
   178a0:	add	r0, r0, #1
   178a4:	str	r0, [sp, #40]	; 0x28
   178a8:	b	177e4 <dim_record_field_available@@Base+0x268>
   178ac:	ldr	r0, [pc, #444]	; 17a70 <dim_record_field_available@@Base+0x4f4>
   178b0:	ldr	r0, [pc, r0]
   178b4:	add	r0, r0, #144	; 0x90
   178b8:	bl	127b4 <coda_cursor_goto_parent@plt>
   178bc:	str	r0, [sp, #16]
   178c0:	b	17a1c <dim_record_field_available@@Base+0x4a0>
   178c4:	ldr	r0, [pc, #364]	; 17a38 <dim_record_field_available@@Base+0x4bc>
   178c8:	ldr	r0, [pc, r0]
   178cc:	add	r1, r0, #144	; 0x90
   178d0:	movw	r2, #3492	; 0xda4
   178d4:	add	r0, r0, r2
   178d8:	ldr	r2, [fp, #-16]
   178dc:	ldr	r3, [pc, #448]	; 17aa4 <dim_record_field_available@@Base+0x528>
   178e0:	ldr	r3, [pc, r3]
   178e4:	add	r2, r3, r2, lsl #2
   178e8:	movw	r3, #3492	; 0xda4
   178ec:	add	r2, r2, r3
   178f0:	ldr	r2, [r2]
   178f4:	str	r0, [sp, #12]
   178f8:	mov	r0, r1
   178fc:	mov	r1, r2
   17900:	add	r2, sp, #36	; 0x24
   17904:	bl	125f8 <coda_cursor_get_record_field_available_status@plt>
   17908:	cmp	r0, #0
   1790c:	beq	1791c <dim_record_field_available@@Base+0x3a0>
   17910:	ldr	r0, [pc, #292]	; 17a3c <dim_record_field_available@@Base+0x4c0>
   17914:	ldr	r0, [pc, r0]
   17918:	blx	r0
   1791c:	ldr	r0, [sp, #36]	; 0x24
   17920:	cmp	r0, #0
   17924:	beq	179f8 <dim_record_field_available@@Base+0x47c>
   17928:	ldr	r0, [pc, #272]	; 17a40 <dim_record_field_available@@Base+0x4c4>
   1792c:	ldr	r0, [pc, r0]
   17930:	ldr	r1, [fp, #-16]
   17934:	ldr	r0, [r0, #3748]	; 0xea4
   17938:	sub	r0, r0, #1
   1793c:	cmp	r1, r0
   17940:	bne	17950 <dim_record_field_available@@Base+0x3d4>
   17944:	movw	r0, #1
   17948:	str	r0, [fp, #-4]
   1794c:	b	17a24 <dim_record_field_available@@Base+0x4a8>
   17950:	ldr	r0, [pc, #236]	; 17a44 <dim_record_field_available@@Base+0x4c8>
   17954:	ldr	r0, [pc, r0]
   17958:	add	r1, r0, #144	; 0x90
   1795c:	movw	r2, #3492	; 0xda4
   17960:	add	r0, r0, r2
   17964:	ldr	r2, [fp, #-16]
   17968:	ldr	r3, [pc, #312]	; 17aa8 <dim_record_field_available@@Base+0x52c>
   1796c:	ldr	r3, [pc, r3]
   17970:	add	r2, r3, r2, lsl #2
   17974:	movw	r3, #3492	; 0xda4
   17978:	add	r2, r2, r3
   1797c:	ldr	r2, [r2]
   17980:	str	r0, [sp, #8]
   17984:	mov	r0, r1
   17988:	mov	r1, r2
   1798c:	bl	12760 <coda_cursor_goto_record_field_by_index@plt>
   17990:	cmp	r0, #0
   17994:	beq	179a4 <dim_record_field_available@@Base+0x428>
   17998:	ldr	r0, [pc, #168]	; 17a48 <dim_record_field_available@@Base+0x4cc>
   1799c:	ldr	r0, [pc, r0]
   179a0:	blx	r0
   179a4:	ldr	r0, [fp, #-8]
   179a8:	add	r0, r0, #1
   179ac:	ldr	r1, [fp, #-12]
   179b0:	ldr	r2, [fp, #-16]
   179b4:	add	r2, r2, #1
   179b8:	bl	175a4 <dim_record_field_available@@Base+0x28>
   179bc:	ldr	r1, [pc, #136]	; 17a4c <dim_record_field_available@@Base+0x4d0>
   179c0:	ldr	r1, [pc, r1]
   179c4:	add	r1, r1, #144	; 0x90
   179c8:	str	r0, [sp, #36]	; 0x24
   179cc:	mov	r0, r1
   179d0:	bl	127b4 <coda_cursor_goto_parent@plt>
   179d4:	ldr	r1, [sp, #36]	; 0x24
   179d8:	cmp	r1, #0
   179dc:	str	r0, [sp, #4]
   179e0:	beq	179f0 <dim_record_field_available@@Base+0x474>
   179e4:	movw	r0, #1
   179e8:	str	r0, [fp, #-4]
   179ec:	b	17a24 <dim_record_field_available@@Base+0x4a8>
   179f0:	b	179f4 <dim_record_field_available@@Base+0x478>
   179f4:	b	179f8 <dim_record_field_available@@Base+0x47c>
   179f8:	b	17a1c <dim_record_field_available@@Base+0x4a0>
   179fc:	ldr	r0, [pc, #136]	; 17a8c <dim_record_field_available@@Base+0x510>
   17a00:	add	r0, pc, r0
   17a04:	ldr	r1, [pc, #132]	; 17a90 <dim_record_field_available@@Base+0x514>
   17a08:	add	r1, pc, r1
   17a0c:	ldr	r2, [pc, #128]	; 17a94 <dim_record_field_available@@Base+0x518>
   17a10:	add	r3, pc, r2
   17a14:	movw	r2, #729	; 0x2d9
   17a18:	bl	129f4 <__assert_fail@plt>
   17a1c:	movw	r0, #0
   17a20:	str	r0, [fp, #-4]
   17a24:	ldr	r0, [fp, #-4]
   17a28:	mov	sp, fp
   17a2c:	pop	{fp, pc}
   17a30:	strdeq	r9, [r1], -r8
   17a34:	strdeq	r9, [r1], -r8
   17a38:	andeq	r9, r1, r4, ror #17
   17a3c:	andeq	r9, r1, r4, asr #17
   17a40:	andeq	r9, r1, r0, lsl #17
   17a44:	andeq	r9, r1, r8, asr r8
   17a48:	andeq	r9, r1, ip, lsr r8
   17a4c:	andeq	r9, r1, ip, ror #15
   17a50:	muleq	r1, ip, fp
   17a54:	andeq	r7, r0, r9, lsl #25
   17a58:	andeq	r7, r0, sl, ror #21
   17a5c:	andeq	r7, r0, r0, lsr #25
   17a60:	andeq	r9, r1, r4, lsr #22
   17a64:	andeq	r9, r1, ip, lsl #22
   17a68:	strdeq	r9, [r1], -r0
   17a6c:	andeq	r9, r1, r4, lsl #20
   17a70:	strdeq	r9, [r1], -ip
   17a74:	andeq	r9, r1, r0, ror #18
   17a78:	andeq	r9, r1, r4, ror r9
   17a7c:	andeq	r9, r1, ip, lsr r9
   17a80:	muleq	r1, r4, r9
   17a84:	andeq	r9, r1, ip, ror #21
   17a88:	andeq	r9, r1, r8, lsl #21
   17a8c:	andeq	r7, r0, r3, lsl r7
   17a90:	andeq	r7, r0, sl, lsr r7
   17a94:	strdeq	r7, [r0], -r0
   17a98:	ldrdeq	r9, [r1], -ip
   17a9c:			; <UNDEFINED> instruction: 0x00019ab8
   17aa0:	andeq	r9, r1, r8, ror sl
   17aa4:	andeq	r9, r1, ip, asr #17
   17aa8:	andeq	r9, r1, r0, asr #16

00017aac <codadump_filter_create@@Base>:
   17aac:	push	{fp, lr}
   17ab0:	mov	fp, sp
   17ab4:	sub	sp, sp, #8
   17ab8:	str	r0, [sp, #4]
   17abc:	movw	r0, #0
   17ac0:	str	r0, [sp]
   17ac4:	ldr	r0, [sp, #4]
   17ac8:	mov	r1, sp
   17acc:	bl	17adc <codadump_filter_create@@Base+0x30>
   17ad0:	ldr	r0, [sp]
   17ad4:	mov	sp, fp
   17ad8:	pop	{fp, pc}
   17adc:	push	{fp, lr}
   17ae0:	mov	fp, sp
   17ae4:	sub	sp, sp, #16
   17ae8:	str	r0, [fp, #-4]
   17aec:	str	r1, [sp, #8]
   17af0:	movw	r0, #0
   17af4:	str	r0, [sp, #4]
   17af8:	ldr	r1, [fp, #-4]
   17afc:	str	r1, [sp]
   17b00:	ldr	r1, [fp, #-4]
   17b04:	cmp	r1, r0
   17b08:	bne	17b10 <codadump_filter_create@@Base+0x64>
   17b0c:	b	17b68 <codadump_filter_create@@Base+0xbc>
   17b10:	b	17b14 <codadump_filter_create@@Base+0x68>
   17b14:	ldr	r0, [sp]
   17b18:	ldrb	r0, [r0]
   17b1c:	cmp	r0, #0
   17b20:	beq	17b68 <codadump_filter_create@@Base+0xbc>
   17b24:	ldr	r0, [sp]
   17b28:	add	r1, sp, #4
   17b2c:	mov	r2, sp
   17b30:	bl	17d9c <codadump_filter_get_next_filter@@Base+0x60>
   17b34:	ldr	r0, [sp, #4]
   17b38:	movw	r1, #0
   17b3c:	cmp	r0, r1
   17b40:	bne	17b50 <codadump_filter_create@@Base+0xa4>
   17b44:	ldr	r0, [sp, #8]
   17b48:	bl	17b70 <codadump_filter_remove@@Base>
   17b4c:	b	17b68 <codadump_filter_create@@Base+0xbc>
   17b50:	ldr	r0, [sp, #8]
   17b54:	ldr	r1, [sp, #4]
   17b58:	bl	18238 <codadump_filter_get_next_filter@@Base+0x4fc>
   17b5c:	movw	r0, #0
   17b60:	str	r0, [sp, #4]
   17b64:	b	17b14 <codadump_filter_create@@Base+0x68>
   17b68:	mov	sp, fp
   17b6c:	pop	{fp, pc}

00017b70 <codadump_filter_remove@@Base>:
   17b70:	push	{fp, lr}
   17b74:	mov	fp, sp
   17b78:	sub	sp, sp, #8
   17b7c:	str	r0, [sp, #4]
   17b80:	ldr	r0, [sp, #4]
   17b84:	movw	r1, #0
   17b88:	cmp	r0, r1
   17b8c:	beq	17b94 <codadump_filter_remove@@Base+0x24>
   17b90:	b	17bb4 <codadump_filter_remove@@Base+0x44>
   17b94:	ldr	r0, [pc, #212]	; 17c70 <codadump_filter_remove@@Base+0x100>
   17b98:	add	r0, pc, r0
   17b9c:	ldr	r1, [pc, #208]	; 17c74 <codadump_filter_remove@@Base+0x104>
   17ba0:	add	r1, pc, r1
   17ba4:	ldr	r2, [pc, #204]	; 17c78 <codadump_filter_remove@@Base+0x108>
   17ba8:	add	r3, pc, r2
   17bac:	movw	r2, #192	; 0xc0
   17bb0:	bl	129f4 <__assert_fail@plt>
   17bb4:	ldr	r0, [sp, #4]
   17bb8:	ldr	r0, [r0]
   17bbc:	movw	r1, #0
   17bc0:	cmp	r0, r1
   17bc4:	beq	17c68 <codadump_filter_remove@@Base+0xf8>
   17bc8:	ldr	r0, [sp, #4]
   17bcc:	ldr	r0, [r0]
   17bd0:	ldr	r0, [r0, #8]
   17bd4:	movw	r1, #0
   17bd8:	cmp	r0, r1
   17bdc:	beq	17bf0 <codadump_filter_remove@@Base+0x80>
   17be0:	ldr	r0, [sp, #4]
   17be4:	ldr	r0, [r0]
   17be8:	add	r0, r0, #8
   17bec:	bl	17b70 <codadump_filter_remove@@Base>
   17bf0:	ldr	r0, [sp, #4]
   17bf4:	ldr	r0, [r0]
   17bf8:	ldr	r0, [r0, #4]
   17bfc:	movw	r1, #0
   17c00:	cmp	r0, r1
   17c04:	beq	17c18 <codadump_filter_remove@@Base+0xa8>
   17c08:	ldr	r0, [sp, #4]
   17c0c:	ldr	r0, [r0]
   17c10:	add	r0, r0, #4
   17c14:	bl	17b70 <codadump_filter_remove@@Base>
   17c18:	ldr	r0, [sp, #4]
   17c1c:	ldr	r0, [r0]
   17c20:	ldr	r0, [r0]
   17c24:	movw	r1, #0
   17c28:	cmp	r0, r1
   17c2c:	beq	17c50 <codadump_filter_remove@@Base+0xe0>
   17c30:	ldr	r0, [sp, #4]
   17c34:	ldr	r0, [r0]
   17c38:	ldr	r0, [r0]
   17c3c:	bl	12658 <free@plt>
   17c40:	ldr	r0, [sp, #4]
   17c44:	ldr	r0, [r0]
   17c48:	movw	lr, #0
   17c4c:	str	lr, [r0]
   17c50:	ldr	r0, [sp, #4]
   17c54:	ldr	r0, [r0]
   17c58:	bl	12658 <free@plt>
   17c5c:	ldr	r0, [sp, #4]
   17c60:	movw	lr, #0
   17c64:	str	lr, [r0]
   17c68:	mov	sp, fp
   17c6c:	pop	{fp, pc}
   17c70:	muleq	r0, sp, r7
   17c74:	andeq	r7, r0, r4, lsr #15
   17c78:	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>

00017c7c <codadump_filter_get_fieldname@@Base>:
   17c7c:	push	{fp, lr}
   17c80:	mov	fp, sp
   17c84:	sub	sp, sp, #8
   17c88:	str	r0, [sp, #4]
   17c8c:	ldr	r0, [sp, #4]
   17c90:	movw	r1, #0
   17c94:	cmp	r0, r1
   17c98:	beq	17ca0 <codadump_filter_get_fieldname@@Base+0x24>
   17c9c:	b	17cc0 <codadump_filter_get_fieldname@@Base+0x44>
   17ca0:	ldr	r0, [pc, #40]	; 17cd0 <codadump_filter_get_fieldname@@Base+0x54>
   17ca4:	add	r0, pc, r0
   17ca8:	ldr	r1, [pc, #36]	; 17cd4 <codadump_filter_get_fieldname@@Base+0x58>
   17cac:	add	r1, pc, r1
   17cb0:	ldr	r2, [pc, #32]	; 17cd8 <codadump_filter_get_fieldname@@Base+0x5c>
   17cb4:	add	r3, pc, r2
   17cb8:	movw	r2, #216	; 0xd8
   17cbc:	bl	129f4 <__assert_fail@plt>
   17cc0:	ldr	r0, [sp, #4]
   17cc4:	ldr	r0, [r0]
   17cc8:	mov	sp, fp
   17ccc:	pop	{fp, pc}
   17cd0:	muleq	r0, r1, r6
   17cd4:	muleq	r0, r8, r6
   17cd8:	andeq	r7, r0, r3, lsr #14

00017cdc <codadump_filter_get_subfilter@@Base>:
   17cdc:	push	{fp, lr}
   17ce0:	mov	fp, sp
   17ce4:	sub	sp, sp, #8
   17ce8:	str	r0, [sp, #4]
   17cec:	ldr	r0, [sp, #4]
   17cf0:	movw	r1, #0
   17cf4:	cmp	r0, r1
   17cf8:	beq	17d00 <codadump_filter_get_subfilter@@Base+0x24>
   17cfc:	b	17d20 <codadump_filter_get_subfilter@@Base+0x44>
   17d00:	ldr	r0, [pc, #40]	; 17d30 <codadump_filter_get_subfilter@@Base+0x54>
   17d04:	add	r0, pc, r0
   17d08:	ldr	r1, [pc, #36]	; 17d34 <codadump_filter_get_subfilter@@Base+0x58>
   17d0c:	add	r1, pc, r1
   17d10:	ldr	r2, [pc, #32]	; 17d38 <codadump_filter_get_subfilter@@Base+0x5c>
   17d14:	add	r3, pc, r2
   17d18:	movw	r2, #223	; 0xdf
   17d1c:	bl	129f4 <__assert_fail@plt>
   17d20:	ldr	r0, [sp, #4]
   17d24:	ldr	r0, [r0, #4]
   17d28:	mov	sp, fp
   17d2c:	pop	{fp, pc}
   17d30:	andeq	r7, r0, r1, lsr r6
   17d34:	andeq	r7, r0, r8, lsr r6
   17d38:	andeq	r7, r0, r0, lsl #14

00017d3c <codadump_filter_get_next_filter@@Base>:
   17d3c:	push	{fp, lr}
   17d40:	mov	fp, sp
   17d44:	sub	sp, sp, #8
   17d48:	str	r0, [sp, #4]
   17d4c:	ldr	r0, [sp, #4]
   17d50:	movw	r1, #0
   17d54:	cmp	r0, r1
   17d58:	beq	17d60 <codadump_filter_get_next_filter@@Base+0x24>
   17d5c:	b	17d80 <codadump_filter_get_next_filter@@Base+0x44>
   17d60:	ldr	r0, [pc, #40]	; 17d90 <codadump_filter_get_next_filter@@Base+0x54>
   17d64:	add	r0, pc, r0
   17d68:	ldr	r1, [pc, #36]	; 17d94 <codadump_filter_get_next_filter@@Base+0x58>
   17d6c:	add	r1, pc, r1
   17d70:	ldr	r2, [pc, #32]	; 17d98 <codadump_filter_get_next_filter@@Base+0x5c>
   17d74:	add	r3, pc, r2
   17d78:	movw	r2, #230	; 0xe6
   17d7c:	bl	129f4 <__assert_fail@plt>
   17d80:	ldr	r0, [sp, #4]
   17d84:	ldr	r0, [r0, #8]
   17d88:	mov	sp, fp
   17d8c:	pop	{fp, pc}
   17d90:	ldrdeq	r7, [r0], -r1
   17d94:	ldrdeq	r7, [r0], -r8
   17d98:	andeq	r7, r0, r2, ror #13
   17d9c:	push	{fp, lr}
   17da0:	mov	fp, sp
   17da4:	sub	sp, sp, #40	; 0x28
   17da8:	str	r0, [fp, #-4]
   17dac:	str	r1, [fp, #-8]
   17db0:	str	r2, [fp, #-12]
   17db4:	movw	r0, #0
   17db8:	str	r0, [fp, #-16]
   17dbc:	ldr	r1, [fp, #-4]
   17dc0:	cmp	r1, r0
   17dc4:	beq	17dcc <codadump_filter_get_next_filter@@Base+0x90>
   17dc8:	b	17dec <codadump_filter_get_next_filter@@Base+0xb0>
   17dcc:	ldr	r0, [pc, #1064]	; 181fc <codadump_filter_get_next_filter@@Base+0x4c0>
   17dd0:	add	r0, pc, r0
   17dd4:	ldr	r1, [pc, #1060]	; 18200 <codadump_filter_get_next_filter@@Base+0x4c4>
   17dd8:	add	r1, pc, r1
   17ddc:	ldr	r2, [pc, #1056]	; 18204 <codadump_filter_get_next_filter@@Base+0x4c8>
   17de0:	add	r3, pc, r2
   17de4:	movw	r2, #44	; 0x2c
   17de8:	bl	129f4 <__assert_fail@plt>
   17dec:	ldr	r0, [fp, #-8]
   17df0:	movw	r1, #0
   17df4:	cmp	r0, r1
   17df8:	beq	17e00 <codadump_filter_get_next_filter@@Base+0xc4>
   17dfc:	b	17e20 <codadump_filter_get_next_filter@@Base+0xe4>
   17e00:	ldr	r0, [pc, #1024]	; 18208 <codadump_filter_get_next_filter@@Base+0x4cc>
   17e04:	add	r0, pc, r0
   17e08:	ldr	r1, [pc, #1020]	; 1820c <codadump_filter_get_next_filter@@Base+0x4d0>
   17e0c:	add	r1, pc, r1
   17e10:	ldr	r2, [pc, #1016]	; 18210 <codadump_filter_get_next_filter@@Base+0x4d4>
   17e14:	add	r3, pc, r2
   17e18:	movw	r2, #45	; 0x2d
   17e1c:	bl	129f4 <__assert_fail@plt>
   17e20:	ldr	r0, [fp, #-12]
   17e24:	movw	r1, #0
   17e28:	cmp	r0, r1
   17e2c:	beq	17e34 <codadump_filter_get_next_filter@@Base+0xf8>
   17e30:	b	17e54 <codadump_filter_get_next_filter@@Base+0x118>
   17e34:	ldr	r0, [pc, #984]	; 18214 <codadump_filter_get_next_filter@@Base+0x4d8>
   17e38:	add	r0, pc, r0
   17e3c:	ldr	r1, [pc, #980]	; 18218 <codadump_filter_get_next_filter@@Base+0x4dc>
   17e40:	add	r1, pc, r1
   17e44:	ldr	r2, [pc, #976]	; 1821c <codadump_filter_get_next_filter@@Base+0x4e0>
   17e48:	add	r3, pc, r2
   17e4c:	movw	r2, #46	; 0x2e
   17e50:	bl	129f4 <__assert_fail@plt>
   17e54:	b	17e58 <codadump_filter_get_next_filter@@Base+0x11c>
   17e58:	ldr	r0, [fp, #-4]
   17e5c:	ldrb	r0, [r0]
   17e60:	cmp	r0, #32
   17e64:	movw	r0, #1
   17e68:	str	r0, [sp, #16]
   17e6c:	beq	17ea0 <codadump_filter_get_next_filter@@Base+0x164>
   17e70:	ldr	r0, [fp, #-4]
   17e74:	ldrb	r0, [r0]
   17e78:	cmp	r0, #9
   17e7c:	movw	r0, #1
   17e80:	str	r0, [sp, #16]
   17e84:	beq	17ea0 <codadump_filter_get_next_filter@@Base+0x164>
   17e88:	ldr	r0, [fp, #-4]
   17e8c:	ldrb	r0, [r0]
   17e90:	cmp	r0, #10
   17e94:	movw	r0, #0
   17e98:	moveq	r0, #1
   17e9c:	str	r0, [sp, #16]
   17ea0:	ldr	r0, [sp, #16]
   17ea4:	tst	r0, #1
   17ea8:	beq	17ebc <codadump_filter_get_next_filter@@Base+0x180>
   17eac:	ldr	r0, [fp, #-4]
   17eb0:	add	r0, r0, #1
   17eb4:	str	r0, [fp, #-4]
   17eb8:	b	17e58 <codadump_filter_get_next_filter@@Base+0x11c>
   17ebc:	b	17ec0 <codadump_filter_get_next_filter@@Base+0x184>
   17ec0:	ldr	r0, [fp, #-4]
   17ec4:	ldr	r1, [fp, #-16]
   17ec8:	add	r0, r0, r1
   17ecc:	ldrb	r0, [r0]
   17ed0:	cmp	r0, #0
   17ed4:	movw	r0, #0
   17ed8:	str	r0, [sp, #12]
   17edc:	beq	17f40 <codadump_filter_get_next_filter@@Base+0x204>
   17ee0:	ldr	r0, [fp, #-4]
   17ee4:	ldr	r1, [fp, #-16]
   17ee8:	add	r0, r0, r1
   17eec:	ldrb	r0, [r0]
   17ef0:	cmp	r0, #46	; 0x2e
   17ef4:	movw	r0, #0
   17ef8:	str	r0, [sp, #12]
   17efc:	beq	17f40 <codadump_filter_get_next_filter@@Base+0x204>
   17f00:	ldr	r0, [fp, #-4]
   17f04:	ldr	r1, [fp, #-16]
   17f08:	add	r0, r0, r1
   17f0c:	ldrb	r0, [r0]
   17f10:	cmp	r0, #59	; 0x3b
   17f14:	movw	r0, #0
   17f18:	str	r0, [sp, #12]
   17f1c:	beq	17f40 <codadump_filter_get_next_filter@@Base+0x204>
   17f20:	ldr	r0, [fp, #-4]
   17f24:	ldr	r1, [fp, #-16]
   17f28:	add	r0, r0, r1
   17f2c:	ldrb	r0, [r0]
   17f30:	cmp	r0, #44	; 0x2c
   17f34:	movw	r0, #0
   17f38:	movne	r0, #1
   17f3c:	str	r0, [sp, #12]
   17f40:	ldr	r0, [sp, #12]
   17f44:	tst	r0, #1
   17f48:	beq	17f5c <codadump_filter_get_next_filter@@Base+0x220>
   17f4c:	ldr	r0, [fp, #-16]
   17f50:	add	r0, r0, #1
   17f54:	str	r0, [fp, #-16]
   17f58:	b	17ec0 <codadump_filter_get_next_filter@@Base+0x184>
   17f5c:	ldr	r0, [fp, #-16]
   17f60:	cmp	r0, #0
   17f64:	ble	181e8 <codadump_filter_get_next_filter@@Base+0x4ac>
   17f68:	ldr	r0, [fp, #-16]
   17f6c:	str	r0, [sp, #20]
   17f70:	movw	r0, #12
   17f74:	bl	12784 <malloc@plt>
   17f78:	ldr	lr, [fp, #-8]
   17f7c:	str	r0, [lr]
   17f80:	ldr	r0, [fp, #-8]
   17f84:	ldr	r0, [r0]
   17f88:	movw	lr, #0
   17f8c:	cmp	r0, lr
   17f90:	bne	17fc4 <codadump_filter_get_next_filter@@Base+0x288>
   17f94:	ldr	r0, [pc, #648]	; 18224 <codadump_filter_get_next_filter@@Base+0x4e8>
   17f98:	add	r1, pc, r0
   17f9c:	ldr	r0, [pc, #644]	; 18228 <codadump_filter_get_next_filter@@Base+0x4ec>
   17fa0:	add	r3, pc, r0
   17fa4:	mvn	r0, #0
   17fa8:	movw	r2, #12
   17fac:	movw	ip, #69	; 0x45
   17fb0:	str	ip, [sp]
   17fb4:	bl	12610 <coda_set_error@plt>
   17fb8:	ldr	r0, [pc, #608]	; 18220 <codadump_filter_get_next_filter@@Base+0x4e4>
   17fbc:	ldr	r0, [pc, r0]
   17fc0:	blx	r0
   17fc4:	ldr	r0, [fp, #-16]
   17fc8:	add	r0, r0, #1
   17fcc:	bl	12784 <malloc@plt>
   17fd0:	ldr	lr, [fp, #-8]
   17fd4:	ldr	lr, [lr]
   17fd8:	str	r0, [lr]
   17fdc:	ldr	r0, [fp, #-8]
   17fe0:	ldr	r0, [r0]
   17fe4:	ldr	r0, [r0]
   17fe8:	movw	lr, #0
   17fec:	cmp	r0, lr
   17ff0:	bne	18028 <codadump_filter_get_next_filter@@Base+0x2ec>
   17ff4:	ldr	r0, [pc, #564]	; 18230 <codadump_filter_get_next_filter@@Base+0x4f4>
   17ff8:	add	r1, pc, r0
   17ffc:	ldr	r0, [pc, #560]	; 18234 <codadump_filter_get_next_filter@@Base+0x4f8>
   18000:	add	r3, pc, r0
   18004:	ldr	r0, [fp, #-16]
   18008:	add	r2, r0, #1
   1800c:	mvn	r0, #0
   18010:	movw	ip, #76	; 0x4c
   18014:	str	ip, [sp]
   18018:	bl	12610 <coda_set_error@plt>
   1801c:	ldr	r0, [pc, #520]	; 1822c <codadump_filter_get_next_filter@@Base+0x4f0>
   18020:	ldr	r0, [pc, r0]
   18024:	blx	r0
   18028:	ldr	r0, [fp, #-8]
   1802c:	ldr	r0, [r0]
   18030:	ldr	r0, [r0]
   18034:	ldr	r1, [fp, #-4]
   18038:	ldr	r2, [fp, #-16]
   1803c:	bl	12874 <strncpy@plt>
   18040:	ldr	r1, [fp, #-8]
   18044:	ldr	r1, [r1]
   18048:	movw	r2, #0
   1804c:	str	r2, [r1, #4]
   18050:	ldr	r1, [fp, #-8]
   18054:	ldr	r1, [r1]
   18058:	str	r2, [r1, #8]
   1805c:	str	r0, [sp, #8]
   18060:	ldr	r0, [fp, #-8]
   18064:	ldr	r0, [r0]
   18068:	ldr	r0, [r0]
   1806c:	ldr	r1, [fp, #-16]
   18070:	sub	r1, r1, #1
   18074:	add	r0, r0, r1
   18078:	ldrb	r0, [r0]
   1807c:	cmp	r0, #32
   18080:	movw	r0, #1
   18084:	str	r0, [sp, #4]
   18088:	beq	180e4 <codadump_filter_get_next_filter@@Base+0x3a8>
   1808c:	ldr	r0, [fp, #-8]
   18090:	ldr	r0, [r0]
   18094:	ldr	r0, [r0]
   18098:	ldr	r1, [fp, #-16]
   1809c:	sub	r1, r1, #1
   180a0:	add	r0, r0, r1
   180a4:	ldrb	r0, [r0]
   180a8:	cmp	r0, #9
   180ac:	movw	r0, #1
   180b0:	str	r0, [sp, #4]
   180b4:	beq	180e4 <codadump_filter_get_next_filter@@Base+0x3a8>
   180b8:	ldr	r0, [fp, #-8]
   180bc:	ldr	r0, [r0]
   180c0:	ldr	r0, [r0]
   180c4:	ldr	r1, [fp, #-16]
   180c8:	sub	r1, r1, #1
   180cc:	add	r0, r0, r1
   180d0:	ldrb	r0, [r0]
   180d4:	cmp	r0, #10
   180d8:	movw	r0, #0
   180dc:	moveq	r0, #1
   180e0:	str	r0, [sp, #4]
   180e4:	ldr	r0, [sp, #4]
   180e8:	tst	r0, #1
   180ec:	beq	18104 <codadump_filter_get_next_filter@@Base+0x3c8>
   180f0:	ldr	r0, [fp, #-16]
   180f4:	mvn	r1, #0
   180f8:	add	r0, r0, r1
   180fc:	str	r0, [fp, #-16]
   18100:	b	18060 <codadump_filter_get_next_filter@@Base+0x324>
   18104:	ldr	r0, [fp, #-8]
   18108:	ldr	r0, [r0]
   1810c:	ldr	r0, [r0]
   18110:	ldr	r1, [fp, #-16]
   18114:	add	r0, r0, r1
   18118:	movw	r1, #0
   1811c:	strb	r1, [r0]
   18120:	ldr	r0, [fp, #-4]
   18124:	ldr	r1, [sp, #20]
   18128:	add	r0, r0, r1
   1812c:	ldrb	r0, [r0]
   18130:	cmp	r0, #46	; 0x2e
   18134:	bne	18180 <codadump_filter_get_next_filter@@Base+0x444>
   18138:	ldr	r0, [fp, #-4]
   1813c:	ldr	r1, [sp, #20]
   18140:	add	r1, r1, #1
   18144:	add	r0, r0, r1
   18148:	ldr	r1, [fp, #-8]
   1814c:	ldr	r1, [r1]
   18150:	add	r1, r1, #4
   18154:	ldr	r2, [fp, #-12]
   18158:	bl	17d9c <codadump_filter_get_next_filter@@Base+0x60>
   1815c:	ldr	r0, [fp, #-8]
   18160:	ldr	r0, [r0]
   18164:	ldr	r0, [r0, #4]
   18168:	movw	r1, #0
   1816c:	cmp	r0, r1
   18170:	bne	1817c <codadump_filter_get_next_filter@@Base+0x440>
   18174:	ldr	r0, [fp, #-8]
   18178:	bl	17b70 <codadump_filter_remove@@Base>
   1817c:	b	181e4 <codadump_filter_get_next_filter@@Base+0x4a8>
   18180:	ldr	r0, [fp, #-4]
   18184:	ldr	r1, [sp, #20]
   18188:	add	r0, r0, r1
   1818c:	ldrb	r0, [r0]
   18190:	cmp	r0, #59	; 0x3b
   18194:	beq	181b0 <codadump_filter_get_next_filter@@Base+0x474>
   18198:	ldr	r0, [fp, #-4]
   1819c:	ldr	r1, [sp, #20]
   181a0:	add	r0, r0, r1
   181a4:	ldrb	r0, [r0]
   181a8:	cmp	r0, #44	; 0x2c
   181ac:	bne	181cc <codadump_filter_get_next_filter@@Base+0x490>
   181b0:	ldr	r0, [fp, #-4]
   181b4:	ldr	r1, [sp, #20]
   181b8:	add	r1, r1, #1
   181bc:	add	r0, r0, r1
   181c0:	ldr	r1, [fp, #-12]
   181c4:	str	r0, [r1]
   181c8:	b	181e0 <codadump_filter_get_next_filter@@Base+0x4a4>
   181cc:	ldr	r0, [fp, #-4]
   181d0:	ldr	r1, [sp, #20]
   181d4:	add	r0, r0, r1
   181d8:	ldr	r1, [fp, #-12]
   181dc:	str	r0, [r1]
   181e0:	b	181e4 <codadump_filter_get_next_filter@@Base+0x4a8>
   181e4:	b	181f4 <codadump_filter_get_next_filter@@Base+0x4b8>
   181e8:	ldr	r0, [fp, #-8]
   181ec:	movw	r1, #0
   181f0:	str	r1, [r0]
   181f4:	mov	sp, fp
   181f8:	pop	{fp, pc}
   181fc:	andeq	r7, r0, sl, asr #13
   18200:	andeq	r7, r0, ip, ror #10
   18204:	andeq	r7, r0, lr, asr #13
   18208:	andeq	r7, r0, r1, lsr r5
   1820c:	andeq	r7, r0, r8, lsr r5
   18210:	muleq	r0, sl, r6
   18214:			; <UNDEFINED> instruction: 0x000076b6
   18218:	andeq	r7, r0, r4, lsl #10
   1821c:	andeq	r7, r0, r6, ror #12
   18220:	andeq	r9, r1, ip, lsl r2
   18224:	andeq	r6, r0, r8, lsr pc
   18228:	andeq	r7, r0, r4, lsr #7
   1822c:			; <UNDEFINED> instruction: 0x000191b8
   18230:	andeq	r7, r0, r3, lsl #10
   18234:	andeq	r7, r0, r4, asr #6
   18238:	push	{fp, lr}
   1823c:	mov	fp, sp
   18240:	sub	sp, sp, #8
   18244:	str	r0, [sp, #4]
   18248:	str	r1, [sp]
   1824c:	ldr	r0, [sp, #4]
   18250:	movw	r1, #0
   18254:	cmp	r0, r1
   18258:	beq	18260 <codadump_filter_get_next_filter@@Base+0x524>
   1825c:	b	18280 <codadump_filter_get_next_filter@@Base+0x544>
   18260:	ldr	r0, [pc, #304]	; 18398 <codadump_filter_get_next_filter@@Base+0x65c>
   18264:	add	r0, pc, r0
   18268:	ldr	r1, [pc, #300]	; 1839c <codadump_filter_get_next_filter@@Base+0x660>
   1826c:	add	r1, pc, r1
   18270:	ldr	r2, [pc, #296]	; 183a0 <codadump_filter_get_next_filter@@Base+0x664>
   18274:	add	r3, pc, r2
   18278:	movw	r2, #117	; 0x75
   1827c:	bl	129f4 <__assert_fail@plt>
   18280:	ldr	r0, [sp]
   18284:	movw	r1, #0
   18288:	cmp	r0, r1
   1828c:	bne	18294 <codadump_filter_get_next_filter@@Base+0x558>
   18290:	b	18390 <codadump_filter_get_next_filter@@Base+0x654>
   18294:	ldr	r0, [sp, #4]
   18298:	ldr	r0, [r0]
   1829c:	movw	r1, #0
   182a0:	cmp	r0, r1
   182a4:	bne	182b8 <codadump_filter_get_next_filter@@Base+0x57c>
   182a8:	ldr	r0, [sp]
   182ac:	ldr	r1, [sp, #4]
   182b0:	str	r0, [r1]
   182b4:	b	18390 <codadump_filter_get_next_filter@@Base+0x654>
   182b8:	ldr	r0, [sp, #4]
   182bc:	ldr	r0, [r0]
   182c0:	ldr	r0, [r0]
   182c4:	ldr	r1, [sp]
   182c8:	ldr	r1, [r1]
   182cc:	bl	125d4 <strcmp@plt>
   182d0:	cmp	r0, #0
   182d4:	bne	1834c <codadump_filter_get_next_filter@@Base+0x610>
   182d8:	ldr	r0, [sp, #4]
   182dc:	ldr	r0, [r0]
   182e0:	ldr	r0, [r0, #4]
   182e4:	movw	r1, #0
   182e8:	cmp	r0, r1
   182ec:	beq	18340 <codadump_filter_get_next_filter@@Base+0x604>
   182f0:	ldr	r0, [sp]
   182f4:	ldr	r0, [r0, #4]
   182f8:	movw	r1, #0
   182fc:	cmp	r0, r1
   18300:	beq	1832c <codadump_filter_get_next_filter@@Base+0x5f0>
   18304:	ldr	r0, [sp, #4]
   18308:	ldr	r0, [r0]
   1830c:	add	r0, r0, #4
   18310:	ldr	r1, [sp]
   18314:	ldr	r1, [r1, #4]
   18318:	bl	18238 <codadump_filter_get_next_filter@@Base+0x4fc>
   1831c:	ldr	r0, [sp]
   18320:	movw	r1, #0
   18324:	str	r1, [r0, #4]
   18328:	b	1833c <codadump_filter_get_next_filter@@Base+0x600>
   1832c:	ldr	r0, [sp, #4]
   18330:	ldr	r0, [r0]
   18334:	add	r0, r0, #4
   18338:	bl	17b70 <codadump_filter_remove@@Base>
   1833c:	b	18340 <codadump_filter_get_next_filter@@Base+0x604>
   18340:	mov	r0, sp
   18344:	bl	17b70 <codadump_filter_remove@@Base>
   18348:	b	18390 <codadump_filter_get_next_filter@@Base+0x654>
   1834c:	ldr	r0, [sp, #4]
   18350:	ldr	r0, [r0]
   18354:	ldr	r0, [r0, #8]
   18358:	movw	r1, #0
   1835c:	cmp	r0, r1
   18360:	beq	1837c <codadump_filter_get_next_filter@@Base+0x640>
   18364:	ldr	r0, [sp, #4]
   18368:	ldr	r0, [r0]
   1836c:	add	r0, r0, #8
   18370:	ldr	r1, [sp]
   18374:	bl	18238 <codadump_filter_get_next_filter@@Base+0x4fc>
   18378:	b	1838c <codadump_filter_get_next_filter@@Base+0x650>
   1837c:	ldr	r0, [sp]
   18380:	ldr	r1, [sp, #4]
   18384:	ldr	r1, [r1]
   18388:	str	r0, [r1, #8]
   1838c:	b	18390 <codadump_filter_get_next_filter@@Base+0x654>
   18390:	mov	sp, fp
   18394:	pop	{fp, pc}
   18398:	ldrdeq	r7, [r0], -r1
   1839c:	ldrdeq	r7, [r0], -r8
   183a0:			; <UNDEFINED> instruction: 0x000072bb

000183a4 <print_json_data@@Base>:
   183a4:	push	{r4, r5, fp, lr}
   183a8:	add	fp, sp, #8
   183ac:	sub	sp, sp, #552	; 0x228
   183b0:	ldr	r1, [pc, #312]	; 184f0 <print_json_data@@Base+0x14c>
   183b4:	ldr	r1, [pc, r1]
   183b8:	ldr	r2, [pc, #308]	; 184f4 <print_json_data@@Base+0x150>
   183bc:	add	r2, pc, r2
   183c0:	str	r0, [fp, #-12]
   183c4:	ldr	r0, [fp, #-12]
   183c8:	str	r0, [r2]
   183cc:	ldr	r0, [r1]
   183d0:	sub	r1, fp, #16
   183d4:	bl	1261c <coda_open@plt>
   183d8:	str	r0, [sp, #20]
   183dc:	ldr	r0, [sp, #20]
   183e0:	cmp	r0, #0
   183e4:	beq	1842c <print_json_data@@Base+0x88>
   183e8:	bl	129ac <coda_get_errno@plt>
   183ec:	ldr	r0, [r0]
   183f0:	cmn	r0, #21
   183f4:	bne	1842c <print_json_data@@Base+0x88>
   183f8:	movw	r0, #0
   183fc:	bl	12664 <coda_set_option_use_mmap@plt>
   18400:	ldr	lr, [pc, #240]	; 184f8 <print_json_data@@Base+0x154>
   18404:	ldr	lr, [pc, lr]
   18408:	ldr	lr, [lr]
   1840c:	str	r0, [sp, #16]
   18410:	mov	r0, lr
   18414:	sub	r1, fp, #16
   18418:	bl	1261c <coda_open@plt>
   1841c:	str	r0, [sp, #20]
   18420:	movw	r0, #1
   18424:	bl	12664 <coda_set_option_use_mmap@plt>
   18428:	str	r0, [sp, #12]
   1842c:	ldr	r0, [sp, #20]
   18430:	cmp	r0, #0
   18434:	beq	18444 <print_json_data@@Base+0xa0>
   18438:	ldr	r0, [pc, #188]	; 184fc <print_json_data@@Base+0x158>
   1843c:	ldr	r0, [pc, r0]
   18440:	blx	r0
   18444:	ldr	r1, [fp, #-16]
   18448:	add	r0, sp, #24
   1844c:	bl	1273c <coda_cursor_set_product@plt>
   18450:	cmp	r0, #0
   18454:	beq	18464 <print_json_data@@Base+0xc0>
   18458:	ldr	r0, [pc, #160]	; 18500 <print_json_data@@Base+0x15c>
   1845c:	ldr	r0, [pc, r0]
   18460:	blx	r0
   18464:	ldr	r0, [pc, #152]	; 18504 <print_json_data@@Base+0x160>
   18468:	ldr	r0, [pc, r0]
   1846c:	ldr	r0, [r0]
   18470:	movw	r1, #0
   18474:	cmp	r0, r1
   18478:	beq	184b0 <print_json_data@@Base+0x10c>
   1847c:	ldr	r0, [pc, #132]	; 18508 <print_json_data@@Base+0x164>
   18480:	ldr	r0, [pc, r0]
   18484:	ldr	r1, [r0]
   18488:	add	r0, sp, #24
   1848c:	bl	12910 <coda_cursor_goto@plt>
   18490:	str	r0, [sp, #20]
   18494:	ldr	r0, [sp, #20]
   18498:	cmp	r0, #0
   1849c:	beq	184ac <print_json_data@@Base+0x108>
   184a0:	ldr	r0, [pc, #100]	; 1850c <print_json_data@@Base+0x168>
   184a4:	ldr	r0, [pc, r0]
   184a8:	blx	r0
   184ac:	b	184b0 <print_json_data@@Base+0x10c>
   184b0:	movw	r0, #0
   184b4:	bl	125c8 <coda_set_option_perform_boundary_checks@plt>
   184b8:	add	lr, sp, #24
   184bc:	str	r0, [sp, #8]
   184c0:	mov	r0, lr
   184c4:	bl	18514 <print_json_data@@Base+0x170>
   184c8:	ldr	r0, [pc, #64]	; 18510 <print_json_data@@Base+0x16c>
   184cc:	add	r0, pc, r0
   184d0:	bl	190f4 <print_json_data@@Base+0xd50>
   184d4:	ldr	lr, [fp, #-16]
   184d8:	str	r0, [sp, #4]
   184dc:	mov	r0, lr
   184e0:	bl	128ec <coda_close@plt>
   184e4:	str	r0, [sp]
   184e8:	sub	sp, fp, #8
   184ec:	pop	{r4, r5, fp, pc}
   184f0:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   184f4:	andeq	r8, r1, r4, ror #28
   184f8:	andeq	r8, r1, r8, lsr #27
   184fc:	muleq	r1, ip, sp
   18500:	andeq	r8, r1, ip, ror sp
   18504:	andeq	r8, r1, r8, ror sp
   18508:	andeq	r8, r1, r0, ror #26
   1850c:	andeq	r8, r1, r4, lsr sp
   18510:	andeq	r8, r0, pc, asr r4
   18514:	push	{r4, r5, fp, lr}
   18518:	add	fp, sp, #8
   1851c:	sub	sp, sp, #440	; 0x1b8
   18520:	ldr	r1, [pc, #2744]	; 18fe0 <print_json_data@@Base+0xc3c>
   18524:	add	r1, pc, r1
   18528:	str	r0, [fp, #-12]
   1852c:	movw	r0, #0
   18530:	str	r0, [fp, #-20]	; 0xffffffec
   18534:	ldr	r0, [r1]
   18538:	cmp	r0, #0
   1853c:	beq	185c8 <print_json_data@@Base+0x224>
   18540:	ldr	r0, [fp, #-12]
   18544:	sub	r1, fp, #20
   18548:	bl	126dc <coda_cursor_has_attributes@plt>
   1854c:	cmp	r0, #0
   18550:	beq	18560 <print_json_data@@Base+0x1bc>
   18554:	ldr	r0, [pc, #2696]	; 18fe4 <print_json_data@@Base+0xc40>
   18558:	ldr	r0, [pc, r0]
   1855c:	blx	r0
   18560:	ldr	r0, [fp, #-20]	; 0xffffffec
   18564:	cmp	r0, #0
   18568:	beq	185c4 <print_json_data@@Base+0x220>
   1856c:	ldr	r0, [pc, #2676]	; 18fe8 <print_json_data@@Base+0xc44>
   18570:	add	r0, pc, r0
   18574:	bl	190f4 <print_json_data@@Base+0xd50>
   18578:	ldr	lr, [fp, #-12]
   1857c:	str	r0, [sp, #156]	; 0x9c
   18580:	mov	r0, lr
   18584:	bl	12850 <coda_cursor_goto_attributes@plt>
   18588:	cmp	r0, #0
   1858c:	beq	1859c <print_json_data@@Base+0x1f8>
   18590:	ldr	r0, [pc, #2644]	; 18fec <print_json_data@@Base+0xc48>
   18594:	ldr	r0, [pc, r0]
   18598:	blx	r0
   1859c:	ldr	r0, [fp, #-12]
   185a0:	bl	18514 <print_json_data@@Base+0x170>
   185a4:	ldr	r0, [fp, #-12]
   185a8:	bl	127b4 <coda_cursor_goto_parent@plt>
   185ac:	ldr	lr, [pc, #2620]	; 18ff0 <print_json_data@@Base+0xc4c>
   185b0:	add	lr, pc, lr
   185b4:	str	r0, [sp, #152]	; 0x98
   185b8:	mov	r0, lr
   185bc:	bl	190f4 <print_json_data@@Base+0xd50>
   185c0:	str	r0, [sp, #148]	; 0x94
   185c4:	b	185c8 <print_json_data@@Base+0x224>
   185c8:	ldr	r0, [fp, #-12]
   185cc:	sub	r1, fp, #16
   185d0:	bl	126e8 <coda_cursor_get_type_class@plt>
   185d4:	cmp	r0, #0
   185d8:	beq	185e8 <print_json_data@@Base+0x244>
   185dc:	ldr	r0, [pc, #2576]	; 18ff4 <print_json_data@@Base+0xc50>
   185e0:	ldr	r0, [pc, r0]
   185e4:	blx	r0
   185e8:	ldr	r0, [fp, #-16]
   185ec:	cmp	r0, #6
   185f0:	str	r0, [sp, #144]	; 0x90
   185f4:	bhi	18fbc <print_json_data@@Base+0xc18>
   185f8:	add	r0, pc, #8
   185fc:	ldr	r1, [sp, #144]	; 0x90
   18600:	ldr	r2, [r0, r1, lsl #2]
   18604:	add	pc, r0, r2
   18608:	andeq	r0, r0, ip, lsl r0
   1860c:	andeq	r0, r0, r0, lsl #5
   18610:	ldrdeq	r0, [r0], -r8
   18614:	ldrdeq	r0, [r0], -r8
   18618:	ldrdeq	r0, [r0], -r8
   1861c:	ldrdeq	r0, [r0], -r8
   18620:	andeq	r0, r0, r4, lsr #16
   18624:	ldr	r0, [pc, #2692]	; 190b0 <print_json_data@@Base+0xd0c>
   18628:	add	r0, pc, r0
   1862c:	bl	190f4 <print_json_data@@Base+0xd50>
   18630:	ldr	lr, [fp, #-12]
   18634:	str	r0, [sp, #140]	; 0x8c
   18638:	mov	r0, lr
   1863c:	sub	r1, fp, #24
   18640:	bl	12640 <coda_cursor_get_num_elements@plt>
   18644:	cmp	r0, #0
   18648:	beq	18658 <print_json_data@@Base+0x2b4>
   1864c:	ldr	r0, [pc, #2656]	; 190b4 <print_json_data@@Base+0xd10>
   18650:	ldr	r0, [pc, r0]
   18654:	blx	r0
   18658:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1865c:	cmp	r0, #0
   18660:	ble	18874 <print_json_data@@Base+0x4d0>
   18664:	ldr	r0, [fp, #-12]
   18668:	sub	r1, fp, #28
   1866c:	bl	126a0 <coda_cursor_get_type@plt>
   18670:	cmp	r0, #0
   18674:	beq	18684 <print_json_data@@Base+0x2e0>
   18678:	ldr	r0, [pc, #2616]	; 190b8 <print_json_data@@Base+0xd14>
   1867c:	ldr	r0, [pc, r0]
   18680:	blx	r0
   18684:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18688:	sub	r1, fp, #32
   1868c:	bl	1288c <coda_type_get_record_union_status@plt>
   18690:	cmp	r0, #0
   18694:	beq	186a4 <print_json_data@@Base+0x300>
   18698:	ldr	r0, [pc, #2588]	; 190bc <print_json_data@@Base+0xd18>
   1869c:	ldr	r0, [pc, r0]
   186a0:	blx	r0
   186a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   186a8:	cmp	r0, #0
   186ac:	beq	18744 <print_json_data@@Base+0x3a0>
   186b0:	ldr	r0, [fp, #-12]
   186b4:	sub	r1, fp, #36	; 0x24
   186b8:	bl	1297c <coda_cursor_get_available_union_field_index@plt>
   186bc:	cmp	r0, #0
   186c0:	beq	186d0 <print_json_data@@Base+0x32c>
   186c4:	ldr	r0, [pc, #2572]	; 190d8 <print_json_data@@Base+0xd34>
   186c8:	ldr	r0, [pc, r0]
   186cc:	blx	r0
   186d0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   186d4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   186d8:	sub	r2, fp, #40	; 0x28
   186dc:	bl	129c4 <coda_type_get_record_field_name@plt>
   186e0:	cmp	r0, #0
   186e4:	beq	186f4 <print_json_data@@Base+0x350>
   186e8:	ldr	r0, [pc, #2540]	; 190dc <print_json_data@@Base+0xd38>
   186ec:	ldr	r0, [pc, r0]
   186f0:	blx	r0
   186f4:	ldr	r0, [fp, #-12]
   186f8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   186fc:	bl	12760 <coda_cursor_goto_record_field_by_index@plt>
   18700:	cmp	r0, #0
   18704:	beq	18714 <print_json_data@@Base+0x370>
   18708:	ldr	r0, [pc, #2512]	; 190e0 <print_json_data@@Base+0xd3c>
   1870c:	ldr	r0, [pc, r0]
   18710:	blx	r0
   18714:	ldr	r0, [pc, #2504]	; 190e4 <print_json_data@@Base+0xd40>
   18718:	add	r0, pc, r0
   1871c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18720:	bl	190f4 <print_json_data@@Base+0xd50>
   18724:	ldr	r1, [fp, #-12]
   18728:	str	r0, [sp, #136]	; 0x88
   1872c:	mov	r0, r1
   18730:	bl	18514 <print_json_data@@Base+0x170>
   18734:	ldr	r0, [fp, #-12]
   18738:	bl	127b4 <coda_cursor_goto_parent@plt>
   1873c:	str	r0, [sp, #132]	; 0x84
   18740:	b	18870 <print_json_data@@Base+0x4cc>
   18744:	movw	r0, #1
   18748:	str	r0, [fp, #-44]	; 0xffffffd4
   1874c:	ldr	r0, [fp, #-12]
   18750:	bl	12754 <coda_cursor_goto_first_record_field@plt>
   18754:	cmp	r0, #0
   18758:	beq	18768 <print_json_data@@Base+0x3c4>
   1875c:	ldr	r0, [pc, #2396]	; 190c0 <print_json_data@@Base+0xd1c>
   18760:	ldr	r0, [pc, r0]
   18764:	blx	r0
   18768:	movw	r0, #0
   1876c:	str	r0, [fp, #-36]	; 0xffffffdc
   18770:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18774:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18778:	cmp	r0, r1
   1877c:	bge	18864 <print_json_data@@Base+0x4c0>
   18780:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18784:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18788:	sub	r2, fp, #52	; 0x34
   1878c:	bl	125e0 <coda_type_get_record_field_hidden_status@plt>
   18790:	cmp	r0, #0
   18794:	beq	187a4 <print_json_data@@Base+0x400>
   18798:	ldr	r0, [pc, #2340]	; 190c4 <print_json_data@@Base+0xd20>
   1879c:	ldr	r0, [pc, r0]
   187a0:	blx	r0
   187a4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   187a8:	cmp	r0, #0
   187ac:	bne	1881c <print_json_data@@Base+0x478>
   187b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   187b4:	cmp	r0, #0
   187b8:	bne	187d0 <print_json_data@@Base+0x42c>
   187bc:	ldr	r0, [pc, #2308]	; 190c8 <print_json_data@@Base+0xd24>
   187c0:	add	r0, pc, r0
   187c4:	bl	190f4 <print_json_data@@Base+0xd50>
   187c8:	str	r0, [sp, #128]	; 0x80
   187cc:	b	187d8 <print_json_data@@Base+0x434>
   187d0:	movw	r0, #0
   187d4:	str	r0, [fp, #-44]	; 0xffffffd4
   187d8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   187dc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   187e0:	sub	r2, fp, #48	; 0x30
   187e4:	bl	129c4 <coda_type_get_record_field_name@plt>
   187e8:	cmp	r0, #0
   187ec:	beq	187fc <print_json_data@@Base+0x458>
   187f0:	ldr	r0, [pc, #2260]	; 190cc <print_json_data@@Base+0xd28>
   187f4:	ldr	r0, [pc, r0]
   187f8:	blx	r0
   187fc:	ldr	r0, [pc, #2252]	; 190d0 <print_json_data@@Base+0xd2c>
   18800:	add	r0, pc, r0
   18804:	ldr	r1, [fp, #-48]	; 0xffffffd0
   18808:	bl	190f4 <print_json_data@@Base+0xd50>
   1880c:	ldr	r1, [fp, #-12]
   18810:	str	r0, [sp, #124]	; 0x7c
   18814:	mov	r0, r1
   18818:	bl	18514 <print_json_data@@Base+0x170>
   1881c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18820:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18824:	sub	r1, r1, #1
   18828:	cmp	r0, r1
   1882c:	bge	18850 <print_json_data@@Base+0x4ac>
   18830:	ldr	r0, [fp, #-12]
   18834:	bl	12934 <coda_cursor_goto_next_record_field@plt>
   18838:	cmp	r0, #0
   1883c:	beq	1884c <print_json_data@@Base+0x4a8>
   18840:	ldr	r0, [pc, #2188]	; 190d4 <print_json_data@@Base+0xd30>
   18844:	ldr	r0, [pc, r0]
   18848:	blx	r0
   1884c:	b	18850 <print_json_data@@Base+0x4ac>
   18850:	b	18854 <print_json_data@@Base+0x4b0>
   18854:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18858:	add	r0, r0, #1
   1885c:	str	r0, [fp, #-36]	; 0xffffffdc
   18860:	b	18770 <print_json_data@@Base+0x3cc>
   18864:	ldr	r0, [fp, #-12]
   18868:	bl	127b4 <coda_cursor_goto_parent@plt>
   1886c:	str	r0, [sp, #120]	; 0x78
   18870:	b	18874 <print_json_data@@Base+0x4d0>
   18874:	ldr	r0, [pc, #2156]	; 190e8 <print_json_data@@Base+0xd44>
   18878:	add	r0, pc, r0
   1887c:	bl	190f4 <print_json_data@@Base+0xd50>
   18880:	str	r0, [sp, #116]	; 0x74
   18884:	b	18fbc <print_json_data@@Base+0xc18>
   18888:	ldr	r0, [pc, #2056]	; 19098 <print_json_data@@Base+0xcf4>
   1888c:	add	r0, pc, r0
   18890:	bl	190f4 <print_json_data@@Base+0xd50>
   18894:	sub	r2, fp, #84	; 0x54
   18898:	ldr	lr, [fp, #-12]
   1889c:	str	r0, [sp, #112]	; 0x70
   188a0:	mov	r0, lr
   188a4:	sub	r1, fp, #88	; 0x58
   188a8:	bl	128d4 <coda_cursor_get_array_dim@plt>
   188ac:	cmp	r0, #0
   188b0:	beq	188c0 <print_json_data@@Base+0x51c>
   188b4:	ldr	r0, [pc, #2016]	; 1909c <print_json_data@@Base+0xcf8>
   188b8:	ldr	r0, [pc, r0]
   188bc:	blx	r0
   188c0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   188c4:	cmp	r0, #0
   188c8:	blt	189cc <print_json_data@@Base+0x628>
   188cc:	movw	r0, #1
   188d0:	str	r0, [fp, #-92]	; 0xffffffa4
   188d4:	movw	r0, #0
   188d8:	str	r0, [fp, #-96]	; 0xffffffa0
   188dc:	ldr	r0, [fp, #-96]	; 0xffffffa0
   188e0:	ldr	r1, [fp, #-88]	; 0xffffffa8
   188e4:	cmp	r0, r1
   188e8:	bge	18918 <print_json_data@@Base+0x574>
   188ec:	ldr	r0, [fp, #-96]	; 0xffffffa0
   188f0:	sub	r1, fp, #84	; 0x54
   188f4:	add	r0, r1, r0, lsl #2
   188f8:	ldr	r0, [r0]
   188fc:	ldr	r1, [fp, #-92]	; 0xffffffa4
   18900:	mul	r0, r1, r0
   18904:	str	r0, [fp, #-92]	; 0xffffffa4
   18908:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1890c:	add	r0, r0, #1
   18910:	str	r0, [fp, #-96]	; 0xffffffa0
   18914:	b	188dc <print_json_data@@Base+0x538>
   18918:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1891c:	cmp	r0, #0
   18920:	ble	189c8 <print_json_data@@Base+0x624>
   18924:	ldr	r0, [fp, #-12]
   18928:	bl	12730 <coda_cursor_goto_first_array_element@plt>
   1892c:	cmp	r0, #0
   18930:	beq	18940 <print_json_data@@Base+0x59c>
   18934:	ldr	r0, [pc, #1892]	; 190a0 <print_json_data@@Base+0xcfc>
   18938:	ldr	r0, [pc, r0]
   1893c:	blx	r0
   18940:	movw	r0, #0
   18944:	str	r0, [fp, #-96]	; 0xffffffa0
   18948:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1894c:	ldr	r1, [fp, #-92]	; 0xffffffa4
   18950:	cmp	r0, r1
   18954:	bge	189bc <print_json_data@@Base+0x618>
   18958:	ldr	r0, [fp, #-12]
   1895c:	bl	18514 <print_json_data@@Base+0x170>
   18960:	ldr	r0, [fp, #-96]	; 0xffffffa0
   18964:	ldr	lr, [fp, #-92]	; 0xffffffa4
   18968:	sub	lr, lr, #1
   1896c:	cmp	r0, lr
   18970:	bge	189a8 <print_json_data@@Base+0x604>
   18974:	ldr	r0, [pc, #1836]	; 190a8 <print_json_data@@Base+0xd04>
   18978:	add	r0, pc, r0
   1897c:	bl	190f4 <print_json_data@@Base+0xd50>
   18980:	ldr	lr, [fp, #-12]
   18984:	str	r0, [sp, #108]	; 0x6c
   18988:	mov	r0, lr
   1898c:	bl	12820 <coda_cursor_goto_next_array_element@plt>
   18990:	cmp	r0, #0
   18994:	beq	189a4 <print_json_data@@Base+0x600>
   18998:	ldr	r0, [pc, #1804]	; 190ac <print_json_data@@Base+0xd08>
   1899c:	ldr	r0, [pc, r0]
   189a0:	blx	r0
   189a4:	b	189a8 <print_json_data@@Base+0x604>
   189a8:	b	189ac <print_json_data@@Base+0x608>
   189ac:	ldr	r0, [fp, #-96]	; 0xffffffa0
   189b0:	add	r0, r0, #1
   189b4:	str	r0, [fp, #-96]	; 0xffffffa0
   189b8:	b	18948 <print_json_data@@Base+0x5a4>
   189bc:	ldr	r0, [fp, #-12]
   189c0:	bl	127b4 <coda_cursor_goto_parent@plt>
   189c4:	str	r0, [sp, #104]	; 0x68
   189c8:	b	189cc <print_json_data@@Base+0x628>
   189cc:	ldr	r0, [pc, #1744]	; 190a4 <print_json_data@@Base+0xd00>
   189d0:	add	r0, pc, r0
   189d4:	bl	190f4 <print_json_data@@Base+0xd50>
   189d8:	str	r0, [sp, #100]	; 0x64
   189dc:	b	18fbc <print_json_data@@Base+0xc18>
   189e0:	ldr	r0, [fp, #-12]
   189e4:	sub	r1, fp, #100	; 0x64
   189e8:	bl	12778 <coda_cursor_get_read_type@plt>
   189ec:	cmp	r0, #0
   189f0:	beq	18a00 <print_json_data@@Base+0x65c>
   189f4:	ldr	r0, [pc, #1576]	; 19024 <print_json_data@@Base+0xc80>
   189f8:	ldr	r0, [pc, r0]
   189fc:	blx	r0
   18a00:	ldr	r0, [fp, #-100]	; 0xffffff9c
   18a04:	add	r0, r0, #1
   18a08:	cmp	r0, #13
   18a0c:	str	r0, [sp, #96]	; 0x60
   18a10:	bhi	18e28 <print_json_data@@Base+0xa84>
   18a14:	add	r0, pc, #8
   18a18:	ldr	r1, [sp, #96]	; 0x60
   18a1c:	ldr	r2, [r0, r1, lsl #2]
   18a20:	add	pc, r0, r2
   18a24:	strdeq	r0, [r0], -r4
   18a28:	muleq	r0, r0, r2
   18a2c:	andeq	r0, r0, r8, asr #5
   18a30:	muleq	r0, r0, r2
   18a34:	andeq	r0, r0, r8, asr #5
   18a38:	muleq	r0, r0, r2
   18a3c:	andeq	r0, r0, r8, asr #5
   18a40:	andeq	r0, r0, r0, lsl #6
   18a44:	andeq	r0, r0, r8, asr #6
   18a48:	muleq	r0, r0, r3
   18a4c:	muleq	r0, r0, r3
   18a50:	andeq	r0, r0, r8, lsr r0
   18a54:	andeq	r0, r0, ip, lsl #1
   18a58:	andeq	r0, r0, ip, ror #2
   18a5c:	ldr	r0, [fp, #-12]
   18a60:	sub	r1, fp, #101	; 0x65
   18a64:	bl	1285c <coda_cursor_read_char@plt>
   18a68:	cmp	r0, #0
   18a6c:	beq	18a7c <print_json_data@@Base+0x6d8>
   18a70:	ldr	r0, [pc, #1556]	; 1908c <print_json_data@@Base+0xce8>
   18a74:	ldr	r0, [pc, r0]
   18a78:	blx	r0
   18a7c:	ldr	r0, [pc, #1552]	; 19094 <print_json_data@@Base+0xcf0>
   18a80:	add	r0, pc, r0
   18a84:	bl	190f4 <print_json_data@@Base+0xd50>
   18a88:	sub	lr, fp, #101	; 0x65
   18a8c:	str	r0, [sp, #92]	; 0x5c
   18a90:	mov	r0, lr
   18a94:	movw	r1, #1
   18a98:	bl	1915c <print_json_data@@Base+0xdb8>
   18a9c:	ldr	r0, [pc, #1516]	; 19090 <print_json_data@@Base+0xcec>
   18aa0:	add	r0, pc, r0
   18aa4:	bl	190f4 <print_json_data@@Base+0xd50>
   18aa8:	str	r0, [sp, #88]	; 0x58
   18aac:	b	18e28 <print_json_data@@Base+0xa84>
   18ab0:	ldr	r0, [fp, #-12]
   18ab4:	sub	r1, fp, #108	; 0x6c
   18ab8:	bl	127e4 <coda_cursor_get_string_length@plt>
   18abc:	cmp	r0, #0
   18ac0:	beq	18ad0 <print_json_data@@Base+0x72c>
   18ac4:	ldr	r0, [pc, #1444]	; 19070 <print_json_data@@Base+0xccc>
   18ac8:	ldr	r0, [pc, r0]
   18acc:	blx	r0
   18ad0:	ldr	r0, [fp, #-108]	; 0xffffff94
   18ad4:	add	r0, r0, #1
   18ad8:	bl	12784 <malloc@plt>
   18adc:	str	r0, [fp, #-112]	; 0xffffff90
   18ae0:	ldr	r0, [fp, #-112]	; 0xffffff90
   18ae4:	movw	lr, #0
   18ae8:	cmp	r0, lr
   18aec:	bne	18b24 <print_json_data@@Base+0x780>
   18af0:	ldr	r0, [pc, #1408]	; 19078 <print_json_data@@Base+0xcd4>
   18af4:	add	r1, pc, r0
   18af8:	ldr	r0, [pc, #1404]	; 1907c <print_json_data@@Base+0xcd8>
   18afc:	add	r3, pc, r0
   18b00:	ldr	r0, [fp, #-108]	; 0xffffff94
   18b04:	add	r2, r0, #1
   18b08:	mvn	r0, #0
   18b0c:	movw	ip, #303	; 0x12f
   18b10:	str	ip, [sp]
   18b14:	bl	12610 <coda_set_error@plt>
   18b18:	ldr	r0, [pc, #1364]	; 19074 <print_json_data@@Base+0xcd0>
   18b1c:	ldr	r0, [pc, r0]
   18b20:	blx	r0
   18b24:	ldr	r0, [fp, #-12]
   18b28:	ldr	r1, [fp, #-112]	; 0xffffff90
   18b2c:	ldr	r2, [fp, #-108]	; 0xffffff94
   18b30:	add	r2, r2, #1
   18b34:	bl	127a8 <coda_cursor_read_string@plt>
   18b38:	cmp	r0, #0
   18b3c:	beq	18b4c <print_json_data@@Base+0x7a8>
   18b40:	ldr	r0, [pc, #1336]	; 19080 <print_json_data@@Base+0xcdc>
   18b44:	ldr	r0, [pc, r0]
   18b48:	blx	r0
   18b4c:	ldr	r0, [pc, #1332]	; 19088 <print_json_data@@Base+0xce4>
   18b50:	add	r0, pc, r0
   18b54:	bl	190f4 <print_json_data@@Base+0xd50>
   18b58:	ldr	lr, [fp, #-112]	; 0xffffff90
   18b5c:	ldr	r1, [fp, #-108]	; 0xffffff94
   18b60:	str	r0, [sp, #84]	; 0x54
   18b64:	mov	r0, lr
   18b68:	bl	1915c <print_json_data@@Base+0xdb8>
   18b6c:	ldr	r0, [pc, #1296]	; 19084 <print_json_data@@Base+0xce0>
   18b70:	add	r0, pc, r0
   18b74:	ldr	r1, [fp, #-108]	; 0xffffff94
   18b78:	bl	190f4 <print_json_data@@Base+0xd50>
   18b7c:	ldr	r1, [fp, #-112]	; 0xffffff90
   18b80:	str	r0, [sp, #80]	; 0x50
   18b84:	mov	r0, r1
   18b88:	bl	12658 <free@plt>
   18b8c:	b	18e28 <print_json_data@@Base+0xa84>
   18b90:	ldr	r0, [fp, #-12]
   18b94:	sub	r1, fp, #120	; 0x78
   18b98:	bl	1294c <coda_cursor_get_bit_size@plt>
   18b9c:	cmp	r0, #0
   18ba0:	beq	18bb0 <print_json_data@@Base+0x80c>
   18ba4:	ldr	r0, [pc, #1196]	; 19058 <print_json_data@@Base+0xcb4>
   18ba8:	ldr	r0, [pc, r0]
   18bac:	blx	r0
   18bb0:	ldr	r0, [fp, #-120]	; 0xffffff88
   18bb4:	ldr	r1, [fp, #-116]	; 0xffffff8c
   18bb8:	lsr	r2, r0, #3
   18bbc:	orr	r2, r2, r1, lsl #29
   18bc0:	asr	r1, r1, #3
   18bc4:	and	r0, r0, #7
   18bc8:	adds	r3, r2, #1
   18bcc:	adc	ip, r1, #0
   18bd0:	cmp	r0, #0
   18bd4:	movne	r2, r3
   18bd8:	cmp	r0, #0
   18bdc:	movne	r1, ip
   18be0:	str	r2, [fp, #-128]	; 0xffffff80
   18be4:	str	r1, [fp, #-124]	; 0xffffff84
   18be8:	ldr	r0, [fp, #-128]	; 0xffffff80
   18bec:	bl	12784 <malloc@plt>
   18bf0:	str	r0, [fp, #-132]	; 0xffffff7c
   18bf4:	ldr	r0, [fp, #-132]	; 0xffffff7c
   18bf8:	movw	r1, #0
   18bfc:	cmp	r0, r1
   18c00:	bne	18c34 <print_json_data@@Base+0x890>
   18c04:	ldr	r0, [pc, #1108]	; 19060 <print_json_data@@Base+0xcbc>
   18c08:	add	r1, pc, r0
   18c0c:	ldr	r0, [pc, #1104]	; 19064 <print_json_data@@Base+0xcc0>
   18c10:	add	r3, pc, r0
   18c14:	ldr	r2, [fp, #-128]	; 0xffffff80
   18c18:	mvn	r0, #0
   18c1c:	movw	ip, #334	; 0x14e
   18c20:	str	ip, [sp]
   18c24:	bl	12610 <coda_set_error@plt>
   18c28:	ldr	r0, [pc, #1068]	; 1905c <print_json_data@@Base+0xcb8>
   18c2c:	ldr	r0, [pc, r0]
   18c30:	blx	r0
   18c34:	ldr	r0, [fp, #-12]
   18c38:	ldr	r1, [fp, #-132]	; 0xffffff7c
   18c3c:	ldr	r2, [fp, #-120]	; 0xffffff88
   18c40:	ldr	r3, [fp, #-116]	; 0xffffff8c
   18c44:	mov	ip, sp
   18c48:	str	r3, [ip, #4]
   18c4c:	str	r2, [ip]
   18c50:	mov	r2, #0
   18c54:	str	r2, [sp, #76]	; 0x4c
   18c58:	ldr	r3, [sp, #76]	; 0x4c
   18c5c:	bl	129dc <coda_cursor_read_bits@plt>
   18c60:	cmp	r0, #0
   18c64:	beq	18c74 <print_json_data@@Base+0x8d0>
   18c68:	ldr	r0, [pc, #1016]	; 19068 <print_json_data@@Base+0xcc4>
   18c6c:	ldr	r0, [pc, r0]
   18c70:	blx	r0
   18c74:	ldr	r0, [pc, #1140]	; 190f0 <print_json_data@@Base+0xd4c>
   18c78:	add	r0, pc, r0
   18c7c:	bl	190f4 <print_json_data@@Base+0xd50>
   18c80:	ldr	lr, [fp, #-132]	; 0xffffff7c
   18c84:	ldr	r1, [fp, #-128]	; 0xffffff80
   18c88:	str	r0, [sp, #72]	; 0x48
   18c8c:	mov	r0, lr
   18c90:	bl	1915c <print_json_data@@Base+0xdb8>
   18c94:	ldr	r0, [pc, #976]	; 1906c <print_json_data@@Base+0xcc8>
   18c98:	add	r0, pc, r0
   18c9c:	bl	190f4 <print_json_data@@Base+0xd50>
   18ca0:	ldr	r1, [fp, #-132]	; 0xffffff7c
   18ca4:	str	r0, [sp, #68]	; 0x44
   18ca8:	mov	r0, r1
   18cac:	bl	12658 <free@plt>
   18cb0:	b	18e28 <print_json_data@@Base+0xa84>
   18cb4:	ldr	r0, [fp, #-12]
   18cb8:	sub	r1, fp, #136	; 0x88
   18cbc:	bl	12988 <coda_cursor_read_int32@plt>
   18cc0:	cmp	r0, #0
   18cc4:	beq	18cd4 <print_json_data@@Base+0x930>
   18cc8:	ldr	r0, [pc, #896]	; 19050 <print_json_data@@Base+0xcac>
   18ccc:	ldr	r0, [pc, r0]
   18cd0:	blx	r0
   18cd4:	ldr	r0, [pc, #888]	; 19054 <print_json_data@@Base+0xcb0>
   18cd8:	add	r0, pc, r0
   18cdc:	ldr	r1, [fp, #-136]	; 0xffffff78
   18ce0:	bl	190f4 <print_json_data@@Base+0xd50>
   18ce4:	str	r0, [sp, #64]	; 0x40
   18ce8:	b	18e28 <print_json_data@@Base+0xa84>
   18cec:	ldr	r0, [fp, #-12]
   18cf0:	sub	r1, fp, #140	; 0x8c
   18cf4:	bl	1267c <coda_cursor_read_uint32@plt>
   18cf8:	cmp	r0, #0
   18cfc:	beq	18d0c <print_json_data@@Base+0x968>
   18d00:	ldr	r0, [pc, #832]	; 19048 <print_json_data@@Base+0xca4>
   18d04:	ldr	r0, [pc, r0]
   18d08:	blx	r0
   18d0c:	ldr	r0, [pc, #824]	; 1904c <print_json_data@@Base+0xca8>
   18d10:	add	r0, pc, r0
   18d14:	ldr	r1, [fp, #-140]	; 0xffffff74
   18d18:	bl	190f4 <print_json_data@@Base+0xd50>
   18d1c:	str	r0, [sp, #60]	; 0x3c
   18d20:	b	18e28 <print_json_data@@Base+0xa84>
   18d24:	ldr	r0, [fp, #-12]
   18d28:	sub	r1, fp, #152	; 0x98
   18d2c:	bl	128f8 <coda_cursor_read_int64@plt>
   18d30:	cmp	r0, #0
   18d34:	beq	18d44 <print_json_data@@Base+0x9a0>
   18d38:	ldr	r0, [pc, #768]	; 19040 <print_json_data@@Base+0xc9c>
   18d3c:	ldr	r0, [pc, r0]
   18d40:	blx	r0
   18d44:	sub	r2, fp, #173	; 0xad
   18d48:	ldr	r0, [fp, #-152]	; 0xffffff68
   18d4c:	ldr	r1, [fp, #-148]	; 0xffffff6c
   18d50:	bl	129e8 <coda_str64@plt>
   18d54:	ldr	r0, [pc, #744]	; 19044 <print_json_data@@Base+0xca0>
   18d58:	add	r0, pc, r0
   18d5c:	sub	r1, fp, #173	; 0xad
   18d60:	bl	190f4 <print_json_data@@Base+0xd50>
   18d64:	str	r0, [sp, #56]	; 0x38
   18d68:	b	18e28 <print_json_data@@Base+0xa84>
   18d6c:	ldr	r0, [fp, #-12]
   18d70:	sub	r1, fp, #184	; 0xb8
   18d74:	bl	127f0 <coda_cursor_read_uint64@plt>
   18d78:	cmp	r0, #0
   18d7c:	beq	18d8c <print_json_data@@Base+0x9e8>
   18d80:	ldr	r0, [pc, #688]	; 19038 <print_json_data@@Base+0xc94>
   18d84:	ldr	r0, [pc, r0]
   18d88:	blx	r0
   18d8c:	sub	r2, fp, #205	; 0xcd
   18d90:	ldr	r0, [fp, #-184]	; 0xffffff48
   18d94:	ldr	r1, [fp, #-180]	; 0xffffff4c
   18d98:	bl	1264c <coda_str64u@plt>
   18d9c:	ldr	r0, [pc, #664]	; 1903c <print_json_data@@Base+0xc98>
   18da0:	add	r0, pc, r0
   18da4:	sub	r1, fp, #205	; 0xcd
   18da8:	bl	190f4 <print_json_data@@Base+0xd50>
   18dac:	str	r0, [sp, #52]	; 0x34
   18db0:	b	18e28 <print_json_data@@Base+0xa84>
   18db4:	ldr	r0, [fp, #-12]
   18db8:	sub	r1, fp, #216	; 0xd8
   18dbc:	bl	127fc <coda_cursor_read_double@plt>
   18dc0:	cmp	r0, #0
   18dc4:	beq	18dd4 <print_json_data@@Base+0xa30>
   18dc8:	ldr	r0, [pc, #604]	; 1902c <print_json_data@@Base+0xc88>
   18dcc:	ldr	r0, [pc, r0]
   18dd0:	blx	r0
   18dd4:	ldr	r0, [fp, #-100]	; 0xffffff9c
   18dd8:	cmp	r0, #8
   18ddc:	bne	18dfc <print_json_data@@Base+0xa58>
   18de0:	ldr	r0, [pc, #588]	; 19034 <print_json_data@@Base+0xc90>
   18de4:	add	r0, pc, r0
   18de8:	vldr	d16, [fp, #-216]	; 0xffffff28
   18dec:	vmov	r2, r3, d16
   18df0:	bl	190f4 <print_json_data@@Base+0xd50>
   18df4:	str	r0, [sp, #48]	; 0x30
   18df8:	b	18e14 <print_json_data@@Base+0xa70>
   18dfc:	ldr	r0, [pc, #556]	; 19030 <print_json_data@@Base+0xc8c>
   18e00:	add	r0, pc, r0
   18e04:	vldr	d16, [fp, #-216]	; 0xffffff28
   18e08:	vmov	r2, r3, d16
   18e0c:	bl	190f4 <print_json_data@@Base+0xd50>
   18e10:	str	r0, [sp, #44]	; 0x2c
   18e14:	b	18e28 <print_json_data@@Base+0xa84>
   18e18:	ldr	r0, [pc, #520]	; 19028 <print_json_data@@Base+0xc84>
   18e1c:	add	r0, pc, r0
   18e20:	bl	190f4 <print_json_data@@Base+0xd50>
   18e24:	str	r0, [sp, #40]	; 0x28
   18e28:	b	18fbc <print_json_data@@Base+0xc18>
   18e2c:	ldr	r0, [fp, #-12]
   18e30:	sub	r1, fp, #220	; 0xdc
   18e34:	bl	12724 <coda_cursor_get_special_type@plt>
   18e38:	cmp	r0, #0
   18e3c:	beq	18e4c <print_json_data@@Base+0xaa8>
   18e40:	ldr	r0, [pc, #432]	; 18ff8 <print_json_data@@Base+0xc54>
   18e44:	ldr	r0, [pc, r0]
   18e48:	blx	r0
   18e4c:	ldr	r0, [fp, #-220]	; 0xffffff24
   18e50:	cmp	r0, #3
   18e54:	str	r0, [sp, #36]	; 0x24
   18e58:	bhi	18fb8 <print_json_data@@Base+0xc14>
   18e5c:	add	r0, pc, #8
   18e60:	ldr	r1, [sp, #36]	; 0x24
   18e64:	ldr	r2, [r0, r1, lsl #2]
   18e68:	add	pc, r0, r2
   18e6c:	andeq	r0, r0, r0, lsl r0
   18e70:	andeq	r0, r0, r4, lsr #32
   18e74:	andeq	r0, r0, r0, rrx
   18e78:	andeq	r0, r0, r8, lsl #2
   18e7c:	ldr	r0, [pc, #412]	; 19020 <print_json_data@@Base+0xc7c>
   18e80:	add	r0, pc, r0
   18e84:	bl	190f4 <print_json_data@@Base+0xd50>
   18e88:	str	r0, [sp, #32]
   18e8c:	b	18fb8 <print_json_data@@Base+0xc14>
   18e90:	ldr	r0, [fp, #-12]
   18e94:	add	r1, sp, #216	; 0xd8
   18e98:	bl	127fc <coda_cursor_read_double@plt>
   18e9c:	cmp	r0, #0
   18ea0:	beq	18eb0 <print_json_data@@Base+0xb0c>
   18ea4:	ldr	r0, [pc, #364]	; 19018 <print_json_data@@Base+0xc74>
   18ea8:	ldr	r0, [pc, r0]
   18eac:	blx	r0
   18eb0:	ldr	r0, [pc, #356]	; 1901c <print_json_data@@Base+0xc78>
   18eb4:	add	r0, pc, r0
   18eb8:	vldr	d16, [sp, #216]	; 0xd8
   18ebc:	vmov	r2, r3, d16
   18ec0:	bl	190f4 <print_json_data@@Base+0xd50>
   18ec4:	str	r0, [sp, #28]
   18ec8:	b	18fb8 <print_json_data@@Base+0xc14>
   18ecc:	ldr	r0, [fp, #-12]
   18ed0:	add	r1, sp, #208	; 0xd0
   18ed4:	bl	127fc <coda_cursor_read_double@plt>
   18ed8:	cmp	r0, #0
   18edc:	beq	18eec <print_json_data@@Base+0xb48>
   18ee0:	ldr	r0, [pc, #284]	; 19004 <print_json_data@@Base+0xc60>
   18ee4:	ldr	r0, [pc, r0]
   18ee8:	blx	r0
   18eec:	vldr	d0, [sp, #208]	; 0xd0
   18ef0:	bl	12808 <coda_isNaN@plt>
   18ef4:	cmp	r0, #0
   18ef8:	bne	18f0c <print_json_data@@Base+0xb68>
   18efc:	vldr	d0, [sp, #208]	; 0xd0
   18f00:	bl	126b8 <coda_isInf@plt>
   18f04:	cmp	r0, #0
   18f08:	beq	18f28 <print_json_data@@Base+0xb84>
   18f0c:	ldr	r0, [pc, #256]	; 19014 <print_json_data@@Base+0xc70>
   18f10:	add	r0, pc, r0
   18f14:	vldr	d16, [sp, #208]	; 0xd0
   18f18:	vmov	r2, r3, d16
   18f1c:	bl	190f4 <print_json_data@@Base+0xd50>
   18f20:	str	r0, [sp, #24]
   18f24:	b	18f70 <print_json_data@@Base+0xbcc>
   18f28:	ldr	r0, [pc, #216]	; 19008 <print_json_data@@Base+0xc64>
   18f2c:	add	r0, pc, r0
   18f30:	add	r1, sp, #181	; 0xb5
   18f34:	vldr	d0, [sp, #208]	; 0xd0
   18f38:	bl	12634 <coda_time_double_to_string@plt>
   18f3c:	cmp	r0, #0
   18f40:	beq	18f58 <print_json_data@@Base+0xbb4>
   18f44:	ldr	r0, [pc, #196]	; 19010 <print_json_data@@Base+0xc6c>
   18f48:	add	r0, pc, r0
   18f4c:	bl	190f4 <print_json_data@@Base+0xd50>
   18f50:	str	r0, [sp, #20]
   18f54:	b	18f6c <print_json_data@@Base+0xbc8>
   18f58:	ldr	r0, [pc, #172]	; 1900c <print_json_data@@Base+0xc68>
   18f5c:	add	r0, pc, r0
   18f60:	add	r1, sp, #181	; 0xb5
   18f64:	bl	190f4 <print_json_data@@Base+0xd50>
   18f68:	str	r0, [sp, #16]
   18f6c:	b	18f70 <print_json_data@@Base+0xbcc>
   18f70:	b	18fb8 <print_json_data@@Base+0xc14>
   18f74:	ldr	r0, [fp, #-12]
   18f78:	add	r1, sp, #168	; 0xa8
   18f7c:	add	r2, sp, #160	; 0xa0
   18f80:	bl	12898 <coda_cursor_read_complex_double_split@plt>
   18f84:	cmp	r0, #0
   18f88:	beq	18f98 <print_json_data@@Base+0xbf4>
   18f8c:	ldr	r0, [pc, #104]	; 18ffc <print_json_data@@Base+0xc58>
   18f90:	ldr	r0, [pc, r0]
   18f94:	blx	r0
   18f98:	ldr	r0, [pc, #96]	; 19000 <print_json_data@@Base+0xc5c>
   18f9c:	add	r0, pc, r0
   18fa0:	vldr	d16, [sp, #168]	; 0xa8
   18fa4:	vldr	d17, [sp, #160]	; 0xa0
   18fa8:	vmov	r2, r3, d16
   18fac:	vstr	d17, [sp]
   18fb0:	bl	190f4 <print_json_data@@Base+0xd50>
   18fb4:	str	r0, [sp, #12]
   18fb8:	b	18fbc <print_json_data@@Base+0xc18>
   18fbc:	ldr	r0, [fp, #-20]	; 0xffffffec
   18fc0:	cmp	r0, #0
   18fc4:	beq	18fd8 <print_json_data@@Base+0xc34>
   18fc8:	ldr	r0, [pc, #284]	; 190ec <print_json_data@@Base+0xd48>
   18fcc:	add	r0, pc, r0
   18fd0:	bl	190f4 <print_json_data@@Base+0xd50>
   18fd4:	str	r0, [sp, #8]
   18fd8:	sub	sp, fp, #8
   18fdc:	pop	{r4, r5, fp, pc}
   18fe0:	strdeq	r8, [r1], -ip
   18fe4:	andeq	r8, r1, r0, lsl #25
   18fe8:	strdeq	r6, [r0], -r6	; <UNPREDICTABLE>
   18fec:	andeq	r8, r1, r4, asr #24
   18ff0:			; <UNDEFINED> instruction: 0x00006fbf
   18ff4:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   18ff8:	muleq	r1, r4, r3
   18ffc:	andeq	r8, r1, r8, asr #4
   19000:	andeq	r6, r0, r4, lsl #13
   19004:	strdeq	r8, [r1], -r4
   19008:			; <UNDEFINED> instruction: 0x000066bc
   1900c:	andeq	r6, r0, ip, ror #15
   19010:			; <UNDEFINED> instruction: 0x000066bd
   19014:	andeq	r6, r0, lr, ror r0
   19018:	andeq	r8, r1, r0, lsr r3
   1901c:	ldrdeq	r6, [r0], -sl
   19020:	andeq	r6, r0, r3, ror #14
   19024:	andeq	r8, r1, r0, ror #15
   19028:	andeq	r6, r0, r7, asr #15
   1902c:	andeq	r8, r1, ip, lsl #8
   19030:	andeq	r6, r0, lr, lsl #3
   19034:	andeq	r6, r0, r5, lsr #3
   19038:	andeq	r8, r1, r4, asr r4
   1903c:	andeq	r6, r0, r6, ror #18
   19040:	muleq	r1, ip, r4
   19044:	andeq	r6, r0, lr, lsr #19
   19048:	ldrdeq	r8, [r1], -r4
   1904c:	andeq	r6, r0, r5, ror r2
   19050:	andeq	r8, r1, ip, lsl #10
   19054:	andeq	r6, r0, ip, ror #18
   19058:	andeq	r8, r1, r0, lsr r6
   1905c:	andeq	r8, r1, ip, lsr #11
   19060:	andeq	r6, r0, r8, asr #5
   19064:	andeq	r6, r0, r2, ror r9
   19068:	andeq	r8, r1, ip, ror #10
   1906c:	muleq	r0, r4, r9
   19070:	andeq	r8, r1, r0, lsl r7
   19074:			; <UNDEFINED> instruction: 0x000186bc
   19078:	ldrdeq	r6, [r0], -ip
   1907c:	andeq	r6, r0, r6, lsl #21
   19080:	muleq	r1, r4, r6
   19084:			; <UNDEFINED> instruction: 0x00006abc
   19088:	ldrdeq	r6, [r0], -ip
   1908c:	andeq	r8, r1, r4, ror #14
   19090:	andeq	r6, r0, ip, lsl #23
   19094:	andeq	r6, r0, ip, lsr #23
   19098:			; <UNDEFINED> instruction: 0x00006db2
   1909c:	andeq	r8, r1, r0, lsr #18
   190a0:	andeq	r8, r1, r0, lsr #17
   190a4:	andeq	r6, r0, r5, ror sp
   190a8:	andeq	r6, r0, sl, asr r8
   190ac:	andeq	r8, r1, ip, lsr r8
   190b0:	andeq	r6, r0, r0, asr pc
   190b4:	andeq	r8, r1, r8, lsl #23
   190b8:	andeq	r8, r1, ip, asr fp
   190bc:	andeq	r8, r1, ip, lsr fp
   190c0:	andeq	r8, r1, r8, ror sl
   190c4:	andeq	r8, r1, ip, lsr sl
   190c8:	andeq	r6, r0, r2, lsl sl
   190cc:	andeq	r8, r1, r4, ror #19
   190d0:	andeq	r6, r0, sl, ror sp
   190d4:	muleq	r1, r4, r9
   190d8:	andeq	r8, r1, r0, lsl fp
   190dc:	andeq	r8, r1, ip, ror #21
   190e0:	andeq	r8, r1, ip, asr #21
   190e4:	andeq	r6, r0, r2, ror #28
   190e8:	andeq	r6, r0, r8, lsl #26
   190ec:			; <UNDEFINED> instruction: 0x000065b4
   190f0:			; <UNDEFINED> instruction: 0x000069b4
   190f4:	sub	sp, sp, #12
   190f8:	push	{fp, lr}
   190fc:	mov	fp, sp
   19100:	sub	sp, sp, #20
   19104:	str	r3, [fp, #16]
   19108:	str	r2, [fp, #12]
   1910c:	str	r1, [fp, #8]
   19110:	str	r0, [fp, #-4]
   19114:	add	r0, fp, #8
   19118:	str	r0, [sp, #8]
   1911c:	ldr	r0, [pc, #52]	; 19158 <print_json_data@@Base+0xdb4>
   19120:	ldr	r0, [pc, r0]
   19124:	ldr	r0, [r0]
   19128:	ldr	r1, [fp, #-4]
   1912c:	ldr	r2, [sp, #8]
   19130:	bl	12904 <vfprintf@plt>
   19134:	str	r0, [fp, #-8]
   19138:	add	r0, sp, #8
   1913c:	ldr	r1, [fp, #-8]
   19140:	str	r0, [sp, #4]
   19144:	mov	r0, r1
   19148:	mov	sp, fp
   1914c:	pop	{fp, lr}
   19150:	add	sp, sp, #12
   19154:	bx	lr
   19158:	muleq	r1, r8, r0
   1915c:	push	{fp, lr}
   19160:	mov	fp, sp
   19164:	sub	sp, sp, #56	; 0x38
   19168:	str	r0, [fp, #-4]
   1916c:	str	r1, [fp, #-8]
   19170:	movw	r0, #0
   19174:	str	r0, [fp, #-12]
   19178:	ldr	r0, [fp, #-12]
   1917c:	ldr	r1, [fp, #-8]
   19180:	cmp	r0, r1
   19184:	bge	192f8 <print_json_data@@Base+0xf54>
   19188:	ldr	r0, [fp, #-4]
   1918c:	ldr	r1, [fp, #-12]
   19190:	ldrb	r0, [r0, r1]
   19194:	strb	r0, [fp, #-13]
   19198:	ldrb	r0, [fp, #-13]
   1919c:	mov	r1, r0
   191a0:	cmp	r0, #8
   191a4:	str	r1, [fp, #-20]	; 0xffffffec
   191a8:	beq	19210 <print_json_data@@Base+0xe6c>
   191ac:	b	191b0 <print_json_data@@Base+0xe0c>
   191b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   191b4:	cmp	r0, #9
   191b8:	beq	19260 <print_json_data@@Base+0xebc>
   191bc:	b	191c0 <print_json_data@@Base+0xe1c>
   191c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   191c4:	cmp	r0, #10
   191c8:	beq	19238 <print_json_data@@Base+0xe94>
   191cc:	b	191d0 <print_json_data@@Base+0xe2c>
   191d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   191d4:	cmp	r0, #12
   191d8:	beq	19224 <print_json_data@@Base+0xe80>
   191dc:	b	191e0 <print_json_data@@Base+0xe3c>
   191e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   191e4:	cmp	r0, #13
   191e8:	beq	1924c <print_json_data@@Base+0xea8>
   191ec:	b	191f0 <print_json_data@@Base+0xe4c>
   191f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   191f4:	cmp	r0, #34	; 0x22
   191f8:	beq	19274 <print_json_data@@Base+0xed0>
   191fc:	b	19200 <print_json_data@@Base+0xe5c>
   19200:	ldr	r0, [fp, #-20]	; 0xffffffec
   19204:	cmp	r0, #92	; 0x5c
   19208:	beq	19288 <print_json_data@@Base+0xee4>
   1920c:	b	1929c <print_json_data@@Base+0xef8>
   19210:	ldr	r0, [pc, #256]	; 19318 <print_json_data@@Base+0xf74>
   19214:	add	r0, pc, r0
   19218:	bl	190f4 <print_json_data@@Base+0xd50>
   1921c:	str	r0, [fp, #-24]	; 0xffffffe8
   19220:	b	192e4 <print_json_data@@Base+0xf40>
   19224:	ldr	r0, [pc, #232]	; 19314 <print_json_data@@Base+0xf70>
   19228:	add	r0, pc, r0
   1922c:	bl	190f4 <print_json_data@@Base+0xd50>
   19230:	str	r0, [sp, #28]
   19234:	b	192e4 <print_json_data@@Base+0xf40>
   19238:	ldr	r0, [pc, #208]	; 19310 <print_json_data@@Base+0xf6c>
   1923c:	add	r0, pc, r0
   19240:	bl	190f4 <print_json_data@@Base+0xd50>
   19244:	str	r0, [sp, #24]
   19248:	b	192e4 <print_json_data@@Base+0xf40>
   1924c:	ldr	r0, [pc, #184]	; 1930c <print_json_data@@Base+0xf68>
   19250:	add	r0, pc, r0
   19254:	bl	190f4 <print_json_data@@Base+0xd50>
   19258:	str	r0, [sp, #20]
   1925c:	b	192e4 <print_json_data@@Base+0xf40>
   19260:	ldr	r0, [pc, #160]	; 19308 <print_json_data@@Base+0xf64>
   19264:	add	r0, pc, r0
   19268:	bl	190f4 <print_json_data@@Base+0xd50>
   1926c:	str	r0, [sp, #16]
   19270:	b	192e4 <print_json_data@@Base+0xf40>
   19274:	ldr	r0, [pc, #136]	; 19304 <print_json_data@@Base+0xf60>
   19278:	add	r0, pc, r0
   1927c:	bl	190f4 <print_json_data@@Base+0xd50>
   19280:	str	r0, [sp, #12]
   19284:	b	192e4 <print_json_data@@Base+0xf40>
   19288:	ldr	r0, [pc, #112]	; 19300 <print_json_data@@Base+0xf5c>
   1928c:	add	r0, pc, r0
   19290:	bl	190f4 <print_json_data@@Base+0xd50>
   19294:	str	r0, [sp, #8]
   19298:	b	192e4 <print_json_data@@Base+0xf40>
   1929c:	ldrb	r0, [fp, #-13]
   192a0:	cmp	r0, #32
   192a4:	blt	192cc <print_json_data@@Base+0xf28>
   192a8:	ldrb	r0, [fp, #-13]
   192ac:	cmp	r0, #126	; 0x7e
   192b0:	bgt	192cc <print_json_data@@Base+0xf28>
   192b4:	ldr	r0, [pc, #100]	; 19320 <print_json_data@@Base+0xf7c>
   192b8:	add	r0, pc, r0
   192bc:	ldrb	r1, [fp, #-13]
   192c0:	bl	190f4 <print_json_data@@Base+0xd50>
   192c4:	str	r0, [sp, #4]
   192c8:	b	192e0 <print_json_data@@Base+0xf3c>
   192cc:	ldr	r0, [pc, #72]	; 1931c <print_json_data@@Base+0xf78>
   192d0:	add	r0, pc, r0
   192d4:	ldrb	r1, [fp, #-13]
   192d8:	bl	190f4 <print_json_data@@Base+0xd50>
   192dc:	str	r0, [sp]
   192e0:	b	192e4 <print_json_data@@Base+0xf40>
   192e4:	b	192e8 <print_json_data@@Base+0xf44>
   192e8:	ldr	r0, [fp, #-12]
   192ec:	add	r0, r0, #1
   192f0:	str	r0, [fp, #-12]
   192f4:	b	19178 <print_json_data@@Base+0xdd4>
   192f8:	mov	sp, fp
   192fc:	pop	{fp, pc}
   19300:	strdeq	r5, [r0], -r0
   19304:			; <UNDEFINED> instruction: 0x000063b3
   19308:	andeq	r5, r0, r9, lsl #26
   1930c:	andeq	r5, r0, r9, lsr #26
   19310:	andeq	r5, r0, r4, lsr sp
   19314:	andeq	r5, r0, lr, asr #26
   19318:	andeq	r5, r0, r6, asr sp
   1931c:	andeq	r6, r0, lr, asr r3
   19320:	andeq	r5, r0, r5, lsl ip

00019324 <print_full_field_name@@Base>:
   19324:	push	{fp, lr}
   19328:	mov	fp, sp
   1932c:	sub	sp, sp, #112	; 0x70
   19330:	str	r0, [fp, #-4]
   19334:	str	r1, [fp, #-8]
   19338:	str	r2, [fp, #-12]
   1933c:	ldr	r0, [fp, #-8]
   19340:	cmp	r0, #1
   19344:	bne	19548 <print_full_field_name@@Base+0x224>
   19348:	movw	r0, #0
   1934c:	str	r0, [fp, #-20]	; 0xffffffec
   19350:	str	r0, [fp, #-24]	; 0xffffffe8
   19354:	str	r0, [fp, #-16]
   19358:	ldr	r0, [pc, #1204]	; 19814 <print_full_field_name@@Base+0x4f0>
   1935c:	ldr	r0, [pc, r0]
   19360:	ldr	r1, [fp, #-16]
   19364:	ldr	r0, [r0, #136]	; 0x88
   19368:	cmp	r1, r0
   1936c:	bge	194e4 <print_full_field_name@@Base+0x1c0>
   19370:	ldr	r0, [pc, #1196]	; 19824 <print_full_field_name@@Base+0x500>
   19374:	ldr	r0, [pc, r0]
   19378:	add	r0, r0, #8
   1937c:	ldr	r1, [fp, #-16]
   19380:	ldr	r2, [pc, #1212]	; 19844 <print_full_field_name@@Base+0x520>
   19384:	ldr	r2, [pc, r2]
   19388:	add	r1, r2, r1, lsl #2
   1938c:	add	r1, r1, #8
   19390:	ldr	r1, [r1]
   19394:	str	r0, [fp, #-40]	; 0xffffffd8
   19398:	mov	r0, r1
   1939c:	sub	r1, fp, #28
   193a0:	bl	12a00 <coda_type_get_class@plt>
   193a4:	cmp	r0, #0
   193a8:	beq	193b8 <print_full_field_name@@Base+0x94>
   193ac:	ldr	r0, [pc, #1140]	; 19828 <print_full_field_name@@Base+0x504>
   193b0:	ldr	r0, [pc, r0]
   193b4:	blx	r0
   193b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   193bc:	cmp	r0, #0
   193c0:	str	r0, [fp, #-44]	; 0xffffffd4
   193c4:	beq	193dc <print_full_field_name@@Base+0xb8>
   193c8:	b	193cc <print_full_field_name@@Base+0xa8>
   193cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   193d0:	cmp	r0, #1
   193d4:	beq	19438 <print_full_field_name@@Base+0x114>
   193d8:	b	194cc <print_full_field_name@@Base+0x1a8>
   193dc:	ldr	r0, [pc, #1112]	; 1983c <print_full_field_name@@Base+0x518>
   193e0:	add	r1, pc, r0
   193e4:	ldr	r0, [pc, #1108]	; 19840 <print_full_field_name@@Base+0x51c>
   193e8:	ldr	r0, [pc, r0]
   193ec:	movw	r2, #3620	; 0xe24
   193f0:	add	r0, r0, r2
   193f4:	ldr	r2, [fp, #-4]
   193f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   193fc:	ldr	ip, [pc, #1092]	; 19848 <print_full_field_name@@Base+0x524>
   19400:	ldr	ip, [pc, ip]
   19404:	add	r3, ip, r3, lsl #2
   19408:	movw	ip, #3620	; 0xe24
   1940c:	add	r3, r3, ip
   19410:	ldr	r3, [r3]
   19414:	str	r0, [fp, #-48]	; 0xffffffd0
   19418:	mov	r0, r2
   1941c:	mov	r2, r3
   19420:	bl	12814 <fprintf@plt>
   19424:	ldr	r1, [fp, #-20]	; 0xffffffec
   19428:	add	r1, r1, #1
   1942c:	str	r1, [fp, #-20]	; 0xffffffec
   19430:	str	r0, [fp, #-52]	; 0xffffffcc
   19434:	b	194d0 <print_full_field_name@@Base+0x1ac>
   19438:	ldr	r0, [fp, #-16]
   1943c:	cmp	r0, #0
   19440:	bne	19458 <print_full_field_name@@Base+0x134>
   19444:	ldr	r0, [pc, #992]	; 1982c <print_full_field_name@@Base+0x508>
   19448:	add	r1, pc, r0
   1944c:	ldr	r0, [fp, #-4]
   19450:	bl	12814 <fprintf@plt>
   19454:	str	r0, [sp, #56]	; 0x38
   19458:	ldr	r0, [pc, #976]	; 19830 <print_full_field_name@@Base+0x50c>
   1945c:	ldr	r0, [pc, r0]
   19460:	add	r0, r0, #800	; 0x320
   19464:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19468:	movw	r2, #80	; 0x50
   1946c:	mul	r1, r1, r2
   19470:	add	r0, r0, r1
   19474:	ldr	r0, [r0, #4]
   19478:	cmp	r0, #0
   1947c:	ble	194bc <print_full_field_name@@Base+0x198>
   19480:	ldr	r0, [pc, #944]	; 19838 <print_full_field_name@@Base+0x514>
   19484:	add	r1, pc, r0
   19488:	ldr	r0, [fp, #-4]
   1948c:	bl	12814 <fprintf@plt>
   19490:	ldr	r1, [fp, #-4]
   19494:	ldr	lr, [fp, #-24]	; 0xffffffe8
   19498:	str	r0, [sp, #52]	; 0x34
   1949c:	mov	r0, r1
   194a0:	mov	r1, lr
   194a4:	bl	19854 <print_full_field_name@@Base+0x530>
   194a8:	ldr	r0, [pc, #900]	; 19834 <print_full_field_name@@Base+0x510>
   194ac:	add	r1, pc, r0
   194b0:	ldr	r0, [fp, #-4]
   194b4:	bl	12814 <fprintf@plt>
   194b8:	str	r0, [sp, #48]	; 0x30
   194bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   194c0:	add	r0, r0, #1
   194c4:	str	r0, [fp, #-24]	; 0xffffffe8
   194c8:	b	194d0 <print_full_field_name@@Base+0x1ac>
   194cc:	b	194d0 <print_full_field_name@@Base+0x1ac>
   194d0:	b	194d4 <print_full_field_name@@Base+0x1b0>
   194d4:	ldr	r0, [fp, #-16]
   194d8:	add	r0, r0, #1
   194dc:	str	r0, [fp, #-16]
   194e0:	b	19358 <print_full_field_name@@Base+0x34>
   194e4:	ldr	r0, [fp, #-12]
   194e8:	cmp	r0, #0
   194ec:	beq	19544 <print_full_field_name@@Base+0x220>
   194f0:	ldr	r0, [pc, #800]	; 19818 <print_full_field_name@@Base+0x4f4>
   194f4:	ldr	r0, [pc, r0]
   194f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   194fc:	ldr	r0, [r0, #3360]	; 0xd20
   19500:	cmp	r1, r0
   19504:	bge	19544 <print_full_field_name@@Base+0x220>
   19508:	ldr	r0, [pc, #784]	; 19820 <print_full_field_name@@Base+0x4fc>
   1950c:	add	r1, pc, r0
   19510:	ldr	r0, [fp, #-4]
   19514:	bl	12814 <fprintf@plt>
   19518:	ldr	r1, [fp, #-4]
   1951c:	ldr	lr, [fp, #-24]	; 0xffffffe8
   19520:	str	r0, [sp, #44]	; 0x2c
   19524:	mov	r0, r1
   19528:	mov	r1, lr
   1952c:	bl	19854 <print_full_field_name@@Base+0x530>
   19530:	ldr	r0, [pc, #740]	; 1981c <print_full_field_name@@Base+0x4f8>
   19534:	add	r1, pc, r0
   19538:	ldr	r0, [fp, #-4]
   1953c:	bl	12814 <fprintf@plt>
   19540:	str	r0, [sp, #40]	; 0x28
   19544:	b	197cc <print_full_field_name@@Base+0x4a8>
   19548:	movw	r0, #0
   1954c:	str	r0, [fp, #-16]
   19550:	ldr	r0, [pc, #636]	; 197d4 <print_full_field_name@@Base+0x4b0>
   19554:	ldr	r0, [pc, r0]
   19558:	ldr	r1, [fp, #-16]
   1955c:	ldr	r0, [r0, #3748]	; 0xea4
   19560:	cmp	r1, r0
   19564:	bge	195e4 <print_full_field_name@@Base+0x2c0>
   19568:	ldr	r0, [fp, #-16]
   1956c:	cmp	r0, #0
   19570:	ble	19588 <print_full_field_name@@Base+0x264>
   19574:	ldr	r0, [pc, #652]	; 19808 <print_full_field_name@@Base+0x4e4>
   19578:	add	r1, pc, r0
   1957c:	ldr	r0, [fp, #-4]
   19580:	bl	12814 <fprintf@plt>
   19584:	str	r0, [sp, #36]	; 0x24
   19588:	ldr	r0, [pc, #636]	; 1980c <print_full_field_name@@Base+0x4e8>
   1958c:	add	r1, pc, r0
   19590:	ldr	r0, [pc, #632]	; 19810 <print_full_field_name@@Base+0x4ec>
   19594:	ldr	r0, [pc, r0]
   19598:	movw	r2, #3620	; 0xe24
   1959c:	add	r0, r0, r2
   195a0:	ldr	r2, [fp, #-4]
   195a4:	ldr	r3, [fp, #-16]
   195a8:	ldr	ip, [pc, #668]	; 1984c <print_full_field_name@@Base+0x528>
   195ac:	ldr	ip, [pc, ip]
   195b0:	add	r3, ip, r3, lsl #2
   195b4:	movw	ip, #3620	; 0xe24
   195b8:	add	r3, r3, ip
   195bc:	ldr	r3, [r3]
   195c0:	str	r0, [sp, #32]
   195c4:	mov	r0, r2
   195c8:	mov	r2, r3
   195cc:	bl	12814 <fprintf@plt>
   195d0:	str	r0, [sp, #28]
   195d4:	ldr	r0, [fp, #-16]
   195d8:	add	r0, r0, #1
   195dc:	str	r0, [fp, #-16]
   195e0:	b	19550 <print_full_field_name@@Base+0x22c>
   195e4:	ldr	r0, [fp, #-8]
   195e8:	cmp	r0, #2
   195ec:	bne	197c8 <print_full_field_name@@Base+0x4a4>
   195f0:	movw	r0, #0
   195f4:	str	r0, [fp, #-32]	; 0xffffffe0
   195f8:	str	r0, [fp, #-16]
   195fc:	ldr	r0, [pc, #468]	; 197d8 <print_full_field_name@@Base+0x4b4>
   19600:	ldr	r0, [pc, r0]
   19604:	ldr	r1, [fp, #-16]
   19608:	ldr	r0, [r0, #136]	; 0x88
   1960c:	cmp	r1, r0
   19610:	bge	19714 <print_full_field_name@@Base+0x3f0>
   19614:	ldr	r0, [pc, #468]	; 197f0 <print_full_field_name@@Base+0x4cc>
   19618:	ldr	r0, [pc, r0]
   1961c:	add	r0, r0, #8
   19620:	ldr	r1, [fp, #-16]
   19624:	ldr	r2, [pc, #548]	; 19850 <print_full_field_name@@Base+0x52c>
   19628:	ldr	r2, [pc, r2]
   1962c:	add	r1, r2, r1, lsl #2
   19630:	add	r1, r1, #8
   19634:	ldr	r1, [r1]
   19638:	str	r0, [sp, #24]
   1963c:	mov	r0, r1
   19640:	sub	r1, fp, #36	; 0x24
   19644:	bl	12a00 <coda_type_get_class@plt>
   19648:	cmp	r0, #0
   1964c:	beq	1965c <print_full_field_name@@Base+0x338>
   19650:	ldr	r0, [pc, #412]	; 197f4 <print_full_field_name@@Base+0x4d0>
   19654:	ldr	r0, [pc, r0]
   19658:	blx	r0
   1965c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19660:	cmp	r0, #1
   19664:	bne	19700 <print_full_field_name@@Base+0x3dc>
   19668:	ldr	r0, [pc, #392]	; 197f8 <print_full_field_name@@Base+0x4d4>
   1966c:	ldr	r0, [pc, r0]
   19670:	add	r0, r0, #800	; 0x320
   19674:	ldr	r1, [fp, #-32]	; 0xffffffe0
   19678:	movw	r2, #80	; 0x50
   1967c:	mul	r1, r1, r2
   19680:	add	r0, r0, r1
   19684:	ldr	r0, [r0, #4]
   19688:	cmp	r0, #0
   1968c:	ble	196fc <print_full_field_name@@Base+0x3d8>
   19690:	ldr	r0, [pc, #356]	; 197fc <print_full_field_name@@Base+0x4d8>
   19694:	ldr	r0, [pc, r0]
   19698:	add	r0, r0, #800	; 0x320
   1969c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   196a0:	movw	r2, #80	; 0x50
   196a4:	mul	r1, r1, r2
   196a8:	add	r0, r0, r1
   196ac:	ldr	r0, [r0]
   196b0:	cmp	r0, #0
   196b4:	bne	196d0 <print_full_field_name@@Base+0x3ac>
   196b8:	ldr	r0, [pc, #324]	; 19804 <print_full_field_name@@Base+0x4e0>
   196bc:	add	r1, pc, r0
   196c0:	ldr	r0, [fp, #-4]
   196c4:	bl	12814 <fprintf@plt>
   196c8:	str	r0, [sp, #20]
   196cc:	b	196e4 <print_full_field_name@@Base+0x3c0>
   196d0:	ldr	r0, [pc, #296]	; 19800 <print_full_field_name@@Base+0x4dc>
   196d4:	add	r1, pc, r0
   196d8:	ldr	r0, [fp, #-4]
   196dc:	bl	12814 <fprintf@plt>
   196e0:	str	r0, [sp, #16]
   196e4:	ldr	r0, [fp, #-4]
   196e8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   196ec:	bl	19854 <print_full_field_name@@Base+0x530>
   196f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   196f4:	add	r0, r0, #1
   196f8:	str	r0, [fp, #-32]	; 0xffffffe0
   196fc:	b	19700 <print_full_field_name@@Base+0x3dc>
   19700:	b	19704 <print_full_field_name@@Base+0x3e0>
   19704:	ldr	r0, [fp, #-16]
   19708:	add	r0, r0, #1
   1970c:	str	r0, [fp, #-16]
   19710:	b	195fc <print_full_field_name@@Base+0x2d8>
   19714:	ldr	r0, [fp, #-12]
   19718:	cmp	r0, #0
   1971c:	beq	197a4 <print_full_field_name@@Base+0x480>
   19720:	ldr	r0, [pc, #180]	; 197dc <print_full_field_name@@Base+0x4b8>
   19724:	ldr	r0, [pc, r0]
   19728:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1972c:	ldr	r0, [r0, #3360]	; 0xd20
   19730:	cmp	r1, r0
   19734:	bge	197a4 <print_full_field_name@@Base+0x480>
   19738:	ldr	r0, [pc, #160]	; 197e0 <print_full_field_name@@Base+0x4bc>
   1973c:	ldr	r0, [pc, r0]
   19740:	add	r0, r0, #800	; 0x320
   19744:	ldr	r1, [fp, #-32]	; 0xffffffe0
   19748:	movw	r2, #80	; 0x50
   1974c:	mul	r1, r1, r2
   19750:	add	r0, r0, r1
   19754:	ldr	r0, [r0]
   19758:	cmp	r0, #0
   1975c:	bne	19778 <print_full_field_name@@Base+0x454>
   19760:	ldr	r0, [pc, #128]	; 197e8 <print_full_field_name@@Base+0x4c4>
   19764:	add	r1, pc, r0
   19768:	ldr	r0, [fp, #-4]
   1976c:	bl	12814 <fprintf@plt>
   19770:	str	r0, [sp, #12]
   19774:	b	1978c <print_full_field_name@@Base+0x468>
   19778:	ldr	r0, [pc, #100]	; 197e4 <print_full_field_name@@Base+0x4c0>
   1977c:	add	r1, pc, r0
   19780:	ldr	r0, [fp, #-4]
   19784:	bl	12814 <fprintf@plt>
   19788:	str	r0, [sp, #8]
   1978c:	ldr	r0, [fp, #-4]
   19790:	ldr	r1, [fp, #-32]	; 0xffffffe0
   19794:	bl	19854 <print_full_field_name@@Base+0x530>
   19798:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1979c:	add	r0, r0, #1
   197a0:	str	r0, [fp, #-32]	; 0xffffffe0
   197a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   197a8:	cmp	r0, #0
   197ac:	ble	197c4 <print_full_field_name@@Base+0x4a0>
   197b0:	ldr	r0, [pc, #52]	; 197ec <print_full_field_name@@Base+0x4c8>
   197b4:	add	r1, pc, r0
   197b8:	ldr	r0, [fp, #-4]
   197bc:	bl	12814 <fprintf@plt>
   197c0:	str	r0, [sp, #4]
   197c4:	b	197c8 <print_full_field_name@@Base+0x4a4>
   197c8:	b	197cc <print_full_field_name@@Base+0x4a8>
   197cc:	mov	sp, fp
   197d0:	pop	{fp, pc}
   197d4:	andeq	r7, r1, r8, asr ip
   197d8:	andeq	r7, r1, ip, lsr #23
   197dc:	andeq	r7, r1, r8, lsl #21
   197e0:	andeq	r7, r1, r0, ror sl
   197e4:	andeq	r5, r0, r6, asr sl
   197e8:	ldrdeq	r5, [r0], -r9
   197ec:	muleq	r0, r1, pc	; <UNPREDICTABLE>
   197f0:	muleq	r1, r4, fp
   197f4:	andeq	r7, r1, r4, lsl #23
   197f8:	andeq	r7, r1, r0, asr #22
   197fc:	andeq	r7, r1, r8, lsl fp
   19800:	strdeq	r5, [r0], -lr
   19804:	andeq	r5, r0, r1, lsl #31
   19808:	andeq	r6, r0, r3, asr #1
   1980c:	andeq	r6, r0, sl, ror r1
   19810:	andeq	r7, r1, r8, lsl ip
   19814:	andeq	r7, r1, r0, asr lr
   19818:			; <UNDEFINED> instruction: 0x00017cb8
   1981c:	andeq	r6, r0, r1, lsl r2
   19820:	andeq	r6, r0, r2, lsr r1
   19824:	andeq	r7, r1, r8, lsr lr
   19828:	andeq	r7, r1, r8, lsr #28
   1982c:	strdeq	r6, [r0], -r1
   19830:	andeq	r7, r1, r0, asr sp
   19834:	muleq	r0, r9, r2
   19838:			; <UNDEFINED> instruction: 0x000061ba
   1983c:	andeq	r6, r0, r5, asr r2
   19840:	andeq	r7, r1, r4, asr #27
   19844:	andeq	r7, r1, r8, lsr #28
   19848:	andeq	r7, r1, ip, lsr #27
   1984c:	andeq	r7, r1, r0, lsl #24
   19850:	andeq	r7, r1, r4, lsl #23
   19854:	push	{fp, lr}
   19858:	mov	fp, sp
   1985c:	sub	sp, sp, #48	; 0x30
   19860:	ldr	r2, [pc, #468]	; 19a3c <print_full_field_name@@Base+0x718>
   19864:	ldr	r2, [pc, r2]
   19868:	add	r2, r2, #800	; 0x320
   1986c:	str	r0, [fp, #-4]
   19870:	str	r1, [fp, #-8]
   19874:	ldr	r0, [fp, #-8]
   19878:	movw	r1, #80	; 0x50
   1987c:	mul	r0, r0, r1
   19880:	add	r0, r2, r0
   19884:	str	r0, [fp, #-12]
   19888:	movw	r0, #0
   1988c:	str	r0, [fp, #-16]
   19890:	ldr	r0, [fp, #-16]
   19894:	ldr	r1, [fp, #-12]
   19898:	ldr	r1, [r1, #4]
   1989c:	cmp	r0, r1
   198a0:	bge	19a34 <print_full_field_name@@Base+0x710>
   198a4:	ldr	r0, [fp, #-16]
   198a8:	cmp	r0, #0
   198ac:	ble	198c4 <print_full_field_name@@Base+0x5a0>
   198b0:	ldr	r0, [pc, #392]	; 19a40 <print_full_field_name@@Base+0x71c>
   198b4:	add	r1, pc, r0
   198b8:	ldr	r0, [fp, #-4]
   198bc:	bl	12814 <fprintf@plt>
   198c0:	str	r0, [fp, #-20]	; 0xffffffec
   198c4:	ldr	r0, [pc, #376]	; 19a44 <print_full_field_name@@Base+0x720>
   198c8:	ldr	r0, [pc, r0]
   198cc:	ldr	r0, [r0]
   198d0:	cmp	r0, #0
   198d4:	beq	199c0 <print_full_field_name@@Base+0x69c>
   198d8:	ldr	r0, [pc, #368]	; 19a50 <print_full_field_name@@Base+0x72c>
   198dc:	ldr	r0, [pc, r0]
   198e0:	add	r0, r0, #72	; 0x48
   198e4:	ldr	r1, [fp, #-12]
   198e8:	ldr	r1, [r1]
   198ec:	ldr	r2, [fp, #-16]
   198f0:	add	r1, r1, r2
   198f4:	ldr	r2, [pc, #360]	; 19a64 <print_full_field_name@@Base+0x740>
   198f8:	ldr	r2, [pc, r2]
   198fc:	add	r1, r2, r1, lsl #2
   19900:	add	r1, r1, #72	; 0x48
   19904:	ldr	r1, [r1]
   19908:	cmp	r1, #0
   1990c:	str	r0, [sp, #24]
   19910:	beq	1996c <print_full_field_name@@Base+0x648>
   19914:	ldr	r0, [pc, #320]	; 19a5c <print_full_field_name@@Base+0x738>
   19918:	add	r1, pc, r0
   1991c:	ldr	r0, [pc, #316]	; 19a60 <print_full_field_name@@Base+0x73c>
   19920:	ldr	r0, [pc, r0]
   19924:	add	r0, r0, #4
   19928:	ldr	r2, [fp, #-4]
   1992c:	ldr	r3, [fp, #-12]
   19930:	ldr	r3, [r3]
   19934:	ldr	ip, [fp, #-16]
   19938:	add	r3, r3, ip
   1993c:	ldr	ip, [pc, #292]	; 19a68 <print_full_field_name@@Base+0x744>
   19940:	ldr	ip, [pc, ip]
   19944:	add	r3, ip, r3, lsl #2
   19948:	ldr	ip, [r3, #36]	; 0x24
   1994c:	add	r3, r3, #4
   19950:	ldr	r3, [r3]
   19954:	str	r0, [sp, #20]
   19958:	mov	r0, r2
   1995c:	mov	r2, ip
   19960:	bl	12814 <fprintf@plt>
   19964:	str	r0, [sp, #16]
   19968:	b	199bc <print_full_field_name@@Base+0x698>
   1996c:	ldr	r0, [pc, #224]	; 19a54 <print_full_field_name@@Base+0x730>
   19970:	add	r1, pc, r0
   19974:	ldr	r0, [pc, #220]	; 19a58 <print_full_field_name@@Base+0x734>
   19978:	ldr	r0, [pc, r0]
   1997c:	add	r0, r0, #4
   19980:	ldr	r2, [fp, #-4]
   19984:	ldr	r3, [fp, #-12]
   19988:	ldr	r3, [r3]
   1998c:	ldr	ip, [fp, #-16]
   19990:	add	r3, r3, ip
   19994:	ldr	ip, [pc, #208]	; 19a6c <print_full_field_name@@Base+0x748>
   19998:	ldr	ip, [pc, ip]
   1999c:	add	r3, ip, r3, lsl #2
   199a0:	add	r3, r3, #4
   199a4:	ldr	r3, [r3]
   199a8:	str	r0, [sp, #12]
   199ac:	mov	r0, r2
   199b0:	mov	r2, r3
   199b4:	bl	12814 <fprintf@plt>
   199b8:	str	r0, [sp, #8]
   199bc:	b	19a20 <print_full_field_name@@Base+0x6fc>
   199c0:	ldr	r0, [fp, #-12]
   199c4:	add	r0, r0, #8
   199c8:	ldr	r1, [fp, #-16]
   199cc:	add	r0, r0, r1, lsl #2
   199d0:	ldr	r0, [r0]
   199d4:	cmn	r0, #1
   199d8:	bne	199f4 <print_full_field_name@@Base+0x6d0>
   199dc:	ldr	r0, [pc, #104]	; 19a4c <print_full_field_name@@Base+0x728>
   199e0:	add	r1, pc, r0
   199e4:	ldr	r0, [fp, #-4]
   199e8:	bl	12814 <fprintf@plt>
   199ec:	str	r0, [sp, #4]
   199f0:	b	19a1c <print_full_field_name@@Base+0x6f8>
   199f4:	ldr	r0, [pc, #76]	; 19a48 <print_full_field_name@@Base+0x724>
   199f8:	add	r1, pc, r0
   199fc:	ldr	r0, [fp, #-4]
   19a00:	ldr	r2, [fp, #-12]
   19a04:	add	r2, r2, #8
   19a08:	ldr	r3, [fp, #-16]
   19a0c:	add	r2, r2, r3, lsl #2
   19a10:	ldr	r2, [r2]
   19a14:	bl	12814 <fprintf@plt>
   19a18:	str	r0, [sp]
   19a1c:	b	19a20 <print_full_field_name@@Base+0x6fc>
   19a20:	b	19a24 <print_full_field_name@@Base+0x700>
   19a24:	ldr	r0, [fp, #-16]
   19a28:	add	r0, r0, #1
   19a2c:	str	r0, [fp, #-16]
   19a30:	b	19890 <print_full_field_name@@Base+0x56c>
   19a34:	mov	sp, fp
   19a38:	pop	{fp, pc}
   19a3c:	andeq	r7, r1, r8, asr #18
   19a40:	andeq	r5, r0, lr, lsl r9
   19a44:	andeq	r7, r1, r0, ror #17
   19a48:	andeq	r5, r0, ip, asr #24
   19a4c:	andeq	r5, r0, r8, ror #24
   19a50:	andeq	r7, r1, r4, lsl r9
   19a54:	ldrdeq	r5, [r0], -r4
   19a58:	andeq	r7, r1, r8, ror r8
   19a5c:	andeq	r5, r0, r8, lsr #26
   19a60:	ldrdeq	r7, [r1], -r0
   19a64:	strdeq	r7, [r1], -r8
   19a68:			; <UNDEFINED> instruction: 0x000178b0
   19a6c:	andeq	r7, r1, r8, asr r8

00019a70 <traverse_info_init@@Base>:
   19a70:	ldr	r0, [pc, #24]	; 19a90 <traverse_info_init@@Base+0x20>
   19a74:	ldr	r0, [pc, r0]
   19a78:	movw	r1, #0
   19a7c:	str	r1, [r0, #4]
   19a80:	str	r1, [r0, #136]	; 0x88
   19a84:	str	r1, [r0, #3360]	; 0xd20
   19a88:	str	r1, [r0, #3748]	; 0xea4
   19a8c:	bx	lr
   19a90:	andeq	r7, r1, r8, lsr r7

00019a94 <traverse_info_done@@Base>:
   19a94:	push	{fp, lr}
   19a98:	mov	fp, sp
   19a9c:	sub	sp, sp, #8
   19aa0:	ldr	r0, [pc, #84]	; 19afc <traverse_info_done@@Base+0x68>
   19aa4:	ldr	r0, [pc, r0]
   19aa8:	ldr	r0, [r0, #4]
   19aac:	movw	r1, #0
   19ab0:	cmp	r0, r1
   19ab4:	beq	19acc <traverse_info_done@@Base+0x38>
   19ab8:	ldr	r0, [pc, #64]	; 19b00 <traverse_info_done@@Base+0x6c>
   19abc:	ldr	r0, [pc, r0]
   19ac0:	ldr	r0, [r0, #4]
   19ac4:	bl	128ec <coda_close@plt>
   19ac8:	str	r0, [sp, #4]
   19acc:	ldr	r0, [pc, #48]	; 19b04 <traverse_info_done@@Base+0x70>
   19ad0:	ldr	r0, [pc, r0]
   19ad4:	ldr	r0, [r0, #664]	; 0x298
   19ad8:	movw	r1, #0
   19adc:	cmp	r0, r1
   19ae0:	beq	19af4 <traverse_info_done@@Base+0x60>
   19ae4:	ldr	r0, [pc, #28]	; 19b08 <traverse_info_done@@Base+0x74>
   19ae8:	ldr	r0, [pc, r0]
   19aec:	add	r0, r0, #664	; 0x298
   19af0:	bl	17b70 <codadump_filter_remove@@Base>
   19af4:	mov	sp, fp
   19af8:	pop	{fp, pc}
   19afc:	andeq	r7, r1, r8, lsl #14
   19b00:	strdeq	r7, [r1], -r0
   19b04:	ldrdeq	r7, [r1], -ip
   19b08:	andeq	r7, r1, r4, asr #13

00019b0c <traverse_product@@Base>:
   19b0c:	push	{fp, lr}
   19b10:	mov	fp, sp
   19b14:	sub	sp, sp, #24
   19b18:	ldr	r0, [pc, #292]	; 19c44 <traverse_product@@Base+0x138>
   19b1c:	ldr	r0, [pc, r0]
   19b20:	add	r1, r0, #4
   19b24:	ldr	r0, [r0]
   19b28:	bl	1261c <coda_open@plt>
   19b2c:	str	r0, [fp, #-4]
   19b30:	ldr	r0, [fp, #-4]
   19b34:	cmp	r0, #0
   19b38:	beq	19b80 <traverse_product@@Base+0x74>
   19b3c:	bl	129ac <coda_get_errno@plt>
   19b40:	ldr	r0, [r0]
   19b44:	cmn	r0, #21
   19b48:	bne	19b80 <traverse_product@@Base+0x74>
   19b4c:	movw	r0, #0
   19b50:	bl	12664 <coda_set_option_use_mmap@plt>
   19b54:	ldr	lr, [pc, #236]	; 19c48 <traverse_product@@Base+0x13c>
   19b58:	ldr	lr, [pc, lr]
   19b5c:	add	r1, lr, #4
   19b60:	ldr	lr, [lr]
   19b64:	str	r0, [fp, #-8]
   19b68:	mov	r0, lr
   19b6c:	bl	1261c <coda_open@plt>
   19b70:	str	r0, [fp, #-4]
   19b74:	movw	r0, #1
   19b78:	bl	12664 <coda_set_option_use_mmap@plt>
   19b7c:	str	r0, [sp, #12]
   19b80:	ldr	r0, [fp, #-4]
   19b84:	cmp	r0, #0
   19b88:	beq	19b98 <traverse_product@@Base+0x8c>
   19b8c:	ldr	r0, [pc, #184]	; 19c4c <traverse_product@@Base+0x140>
   19b90:	ldr	r0, [pc, r0]
   19b94:	blx	r0
   19b98:	ldr	r0, [pc, #176]	; 19c50 <traverse_product@@Base+0x144>
   19b9c:	ldr	r0, [pc, r0]
   19ba0:	add	r1, r0, #144	; 0x90
   19ba4:	ldr	r0, [r0, #4]
   19ba8:	str	r0, [sp, #8]
   19bac:	mov	r0, r1
   19bb0:	ldr	r1, [sp, #8]
   19bb4:	bl	1273c <coda_cursor_set_product@plt>
   19bb8:	cmp	r0, #0
   19bbc:	beq	19bcc <traverse_product@@Base+0xc0>
   19bc0:	ldr	r0, [pc, #140]	; 19c54 <traverse_product@@Base+0x148>
   19bc4:	ldr	r0, [pc, r0]
   19bc8:	blx	r0
   19bcc:	ldr	r0, [pc, #132]	; 19c58 <traverse_product@@Base+0x14c>
   19bd0:	ldr	r0, [pc, r0]
   19bd4:	add	r1, r0, #144	; 0x90
   19bd8:	add	r0, r0, #8
   19bdc:	ldr	r2, [pc, #132]	; 19c68 <traverse_product@@Base+0x15c>
   19be0:	ldr	r2, [pc, r2]
   19be4:	ldr	r3, [r2, #136]	; 0x88
   19be8:	add	r2, r2, r3, lsl #2
   19bec:	add	r2, r2, #8
   19bf0:	str	r0, [sp, #4]
   19bf4:	mov	r0, r1
   19bf8:	mov	r1, r2
   19bfc:	bl	126a0 <coda_cursor_get_type@plt>
   19c00:	cmp	r0, #0
   19c04:	beq	19c14 <traverse_product@@Base+0x108>
   19c08:	ldr	r0, [pc, #76]	; 19c5c <traverse_product@@Base+0x150>
   19c0c:	ldr	r0, [pc, r0]
   19c10:	blx	r0
   19c14:	bl	19c6c <traverse_product@@Base+0x160>
   19c18:	ldr	lr, [pc, #68]	; 19c64 <traverse_product@@Base+0x158>
   19c1c:	ldr	lr, [pc, lr]
   19c20:	ldr	r0, [lr, #4]
   19c24:	bl	128ec <coda_close@plt>
   19c28:	ldr	lr, [pc, #48]	; 19c60 <traverse_product@@Base+0x154>
   19c2c:	ldr	lr, [pc, lr]
   19c30:	movw	r1, #0
   19c34:	str	r1, [lr, #4]
   19c38:	str	r0, [sp]
   19c3c:	mov	sp, fp
   19c40:	pop	{fp, pc}
   19c44:	muleq	r1, r0, r6
   19c48:	andeq	r7, r1, r4, asr r6
   19c4c:	andeq	r7, r1, r8, asr #12
   19c50:	andeq	r7, r1, r0, lsl r6
   19c54:	andeq	r7, r1, r4, lsl r6
   19c58:	ldrdeq	r7, [r1], -ip
   19c5c:	andeq	r7, r1, ip, asr #11
   19c60:	andeq	r7, r1, r0, lsl #11
   19c64:	muleq	r1, r0, r5
   19c68:	andeq	r7, r1, ip, asr #11
   19c6c:	push	{fp, lr}
   19c70:	mov	fp, sp
   19c74:	sub	sp, sp, #104	; 0x68
   19c78:	ldr	r0, [pc, #1596]	; 1a2bc <traverse_product@@Base+0x7b0>
   19c7c:	ldr	r0, [pc, r0]
   19c80:	add	r0, r0, #8
   19c84:	ldr	r1, [pc, #1736]	; 1a354 <traverse_product@@Base+0x848>
   19c88:	ldr	r1, [pc, r1]
   19c8c:	ldr	r2, [r1, #136]	; 0x88
   19c90:	add	r1, r1, r2, lsl #2
   19c94:	add	r1, r1, #8
   19c98:	ldr	r1, [r1]
   19c9c:	str	r0, [fp, #-32]	; 0xffffffe0
   19ca0:	mov	r0, r1
   19ca4:	sub	r1, fp, #4
   19ca8:	bl	12a00 <coda_type_get_class@plt>
   19cac:	cmp	r0, #0
   19cb0:	beq	19cc0 <traverse_product@@Base+0x1b4>
   19cb4:	ldr	r0, [pc, #1540]	; 1a2c0 <traverse_product@@Base+0x7b4>
   19cb8:	ldr	r0, [pc, r0]
   19cbc:	blx	r0
   19cc0:	ldr	r0, [fp, #-4]
   19cc4:	cmp	r0, #6
   19cc8:	str	r0, [fp, #-36]	; 0xffffffdc
   19ccc:	bhi	1a2b4 <traverse_product@@Base+0x7a8>
   19cd0:	add	r0, pc, #8
   19cd4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19cd8:	ldr	r2, [r0, r1, lsl #2]
   19cdc:	add	pc, r0, r2
   19ce0:	andeq	r0, r0, ip, lsl r0
   19ce4:	andeq	r0, r0, r8, asr #6
   19ce8:	strdeq	r0, [r0], -r8
   19cec:	strdeq	r0, [r0], -r8
   19cf0:	strdeq	r0, [r0], -r8
   19cf4:	strdeq	r0, [r0], -r8
   19cf8:	andeq	r0, r0, r8, lsr #9
   19cfc:	ldr	r0, [pc, #1548]	; 1a310 <traverse_product@@Base+0x804>
   19d00:	ldr	r0, [pc, r0]
   19d04:	ldr	r0, [r0, #136]	; 0x88
   19d08:	cmp	r0, #31
   19d0c:	blt	19d14 <traverse_product@@Base+0x208>
   19d10:	b	1a2b4 <traverse_product@@Base+0x7a8>
   19d14:	ldr	r0, [pc, #1528]	; 1a314 <traverse_product@@Base+0x808>
   19d18:	ldr	r0, [pc, r0]
   19d1c:	add	r0, r0, #8
   19d20:	ldr	r1, [pc, #1584]	; 1a358 <traverse_product@@Base+0x84c>
   19d24:	ldr	r1, [pc, r1]
   19d28:	ldr	r2, [r1, #3748]	; 0xea4
   19d2c:	add	r2, r2, #1
   19d30:	str	r2, [r1, #3748]	; 0xea4
   19d34:	ldr	r2, [r1, #136]	; 0x88
   19d38:	add	r1, r1, r2, lsl #2
   19d3c:	add	r1, r1, #8
   19d40:	ldr	r1, [r1]
   19d44:	str	r0, [fp, #-40]	; 0xffffffd8
   19d48:	mov	r0, r1
   19d4c:	sub	r1, fp, #8
   19d50:	bl	127c0 <coda_type_get_num_record_fields@plt>
   19d54:	cmp	r0, #0
   19d58:	beq	19d68 <traverse_product@@Base+0x25c>
   19d5c:	ldr	r0, [pc, #1460]	; 1a318 <traverse_product@@Base+0x80c>
   19d60:	ldr	r0, [pc, r0]
   19d64:	blx	r0
   19d68:	ldr	r0, [pc, #1452]	; 1a31c <traverse_product@@Base+0x810>
   19d6c:	ldr	r0, [pc, r0]
   19d70:	add	r0, r0, #664	; 0x298
   19d74:	ldr	r1, [pc, #1504]	; 1a35c <traverse_product@@Base+0x850>
   19d78:	ldr	r1, [pc, r1]
   19d7c:	ldr	r2, [r1, #136]	; 0x88
   19d80:	add	r2, r2, #1
   19d84:	str	r2, [r1, #136]	; 0x88
   19d88:	ldr	r2, [r1, #796]	; 0x31c
   19d8c:	add	r1, r1, r2, lsl #2
   19d90:	add	r1, r1, #664	; 0x298
   19d94:	ldr	r1, [r1]
   19d98:	movw	r2, #0
   19d9c:	cmp	r1, r2
   19da0:	str	r0, [fp, #-44]	; 0xffffffd4
   19da4:	beq	19fc8 <traverse_product@@Base+0x4bc>
   19da8:	ldr	r0, [pc, #1392]	; 1a320 <traverse_product@@Base+0x814>
   19dac:	ldr	r0, [pc, r0]
   19db0:	add	r0, r0, #664	; 0x298
   19db4:	ldr	r1, [pc, #1444]	; 1a360 <traverse_product@@Base+0x854>
   19db8:	ldr	r1, [pc, r1]
   19dbc:	ldr	r2, [r1, #796]	; 0x31c
   19dc0:	add	r1, r1, r2, lsl #2
   19dc4:	add	r1, r1, #664	; 0x298
   19dc8:	ldr	r1, [r1]
   19dcc:	str	r1, [fp, #-16]
   19dd0:	str	r0, [fp, #-48]	; 0xffffffd0
   19dd4:	ldr	r0, [pc, #1352]	; 1a324 <traverse_product@@Base+0x818>
   19dd8:	ldr	r0, [pc, r0]
   19ddc:	add	r0, r0, #664	; 0x298
   19de0:	ldr	r1, [pc, #1404]	; 1a364 <traverse_product@@Base+0x858>
   19de4:	ldr	r1, [pc, r1]
   19de8:	ldr	r2, [r1, #796]	; 0x31c
   19dec:	add	r1, r1, r2, lsl #2
   19df0:	add	r1, r1, #664	; 0x298
   19df4:	ldr	r1, [r1]
   19df8:	movw	r2, #0
   19dfc:	cmp	r1, r2
   19e00:	str	r0, [sp, #52]	; 0x34
   19e04:	beq	19f98 <traverse_product@@Base+0x48c>
   19e08:	ldr	r0, [pc, #1312]	; 1a330 <traverse_product@@Base+0x824>
   19e0c:	ldr	r0, [pc, r0]
   19e10:	add	r0, r0, #664	; 0x298
   19e14:	ldr	r1, [pc, #1356]	; 1a368 <traverse_product@@Base+0x85c>
   19e18:	ldr	r1, [pc, r1]
   19e1c:	ldr	r2, [r1, #796]	; 0x31c
   19e20:	add	r1, r1, r2, lsl #2
   19e24:	add	r1, r1, #664	; 0x298
   19e28:	ldr	r1, [r1]
   19e2c:	str	r0, [sp, #48]	; 0x30
   19e30:	mov	r0, r1
   19e34:	bl	17c7c <codadump_filter_get_fieldname@@Base>
   19e38:	str	r0, [fp, #-20]	; 0xffffffec
   19e3c:	ldr	r0, [fp, #-20]	; 0xffffffec
   19e40:	movw	r1, #0
   19e44:	cmp	r0, r1
   19e48:	beq	19e50 <traverse_product@@Base+0x344>
   19e4c:	b	19e70 <traverse_product@@Base+0x364>
   19e50:	ldr	r0, [pc, #1244]	; 1a334 <traverse_product@@Base+0x828>
   19e54:	add	r0, pc, r0
   19e58:	ldr	r1, [pc, #1240]	; 1a338 <traverse_product@@Base+0x82c>
   19e5c:	add	r1, pc, r1
   19e60:	ldr	r2, [pc, #1236]	; 1a33c <traverse_product@@Base+0x830>
   19e64:	add	r3, pc, r2
   19e68:	movw	r2, #393	; 0x189
   19e6c:	bl	129f4 <__assert_fail@plt>
   19e70:	ldr	r0, [pc, #1224]	; 1a340 <traverse_product@@Base+0x834>
   19e74:	ldr	r0, [pc, r0]
   19e78:	add	r0, r0, #8
   19e7c:	ldr	r1, [pc, #1256]	; 1a36c <traverse_product@@Base+0x860>
   19e80:	ldr	r1, [pc, r1]
   19e84:	ldr	r2, [r1, #136]	; 0x88
   19e88:	sub	r2, r2, #1
   19e8c:	add	r1, r1, r2, lsl #2
   19e90:	add	r1, r1, #8
   19e94:	ldr	r1, [r1]
   19e98:	ldr	r2, [fp, #-20]	; 0xffffffec
   19e9c:	str	r0, [sp, #44]	; 0x2c
   19ea0:	mov	r0, r1
   19ea4:	mov	r1, r2
   19ea8:	sub	r2, fp, #12
   19eac:	bl	1291c <coda_type_get_record_field_index_from_name@plt>
   19eb0:	cmp	r0, #0
   19eb4:	beq	19f00 <traverse_product@@Base+0x3f4>
   19eb8:	bl	129ac <coda_get_errno@plt>
   19ebc:	ldr	r0, [r0]
   19ec0:	cmn	r0, #102	; 0x66
   19ec4:	bne	19ef4 <traverse_product@@Base+0x3e8>
   19ec8:	ldr	r0, [pc, #1148]	; 1a34c <traverse_product@@Base+0x840>
   19ecc:	add	r1, pc, r0
   19ed0:	ldr	r0, [pc, #1144]	; 1a350 <traverse_product@@Base+0x844>
   19ed4:	ldr	r0, [pc, r0]
   19ed8:	ldr	r0, [r0]
   19edc:	ldr	r2, [fp, #-20]	; 0xffffffec
   19ee0:	bl	12814 <fprintf@plt>
   19ee4:	movw	r1, #1
   19ee8:	str	r0, [sp, #40]	; 0x28
   19eec:	mov	r0, r1
   19ef0:	bl	127cc <exit@plt>
   19ef4:	ldr	r0, [pc, #1096]	; 1a344 <traverse_product@@Base+0x838>
   19ef8:	ldr	r0, [pc, r0]
   19efc:	blx	r0
   19f00:	ldr	r0, [pc, #1088]	; 1a348 <traverse_product@@Base+0x83c>
   19f04:	ldr	r0, [pc, r0]
   19f08:	add	r0, r0, #664	; 0x298
   19f0c:	ldr	r1, [pc, #1116]	; 1a370 <traverse_product@@Base+0x864>
   19f10:	ldr	r1, [pc, r1]
   19f14:	ldr	r2, [r1, #796]	; 0x31c
   19f18:	add	r3, r1, #664	; 0x298
   19f1c:	ldr	r2, [r3, r2, lsl #2]
   19f20:	str	r0, [sp, #36]	; 0x24
   19f24:	mov	r0, r2
   19f28:	str	r3, [sp, #32]
   19f2c:	str	r1, [sp, #28]
   19f30:	bl	17cdc <codadump_filter_get_subfilter@@Base>
   19f34:	ldr	r1, [sp, #28]
   19f38:	ldr	r2, [r1, #796]	; 0x31c
   19f3c:	ldr	r3, [sp, #32]
   19f40:	add	r2, r3, r2, lsl #2
   19f44:	str	r0, [r2, #4]
   19f48:	ldr	r0, [r1, #796]	; 0x31c
   19f4c:	add	r0, r0, #1
   19f50:	str	r0, [r1, #796]	; 0x31c
   19f54:	ldr	r0, [fp, #-12]
   19f58:	mov	r1, #1
   19f5c:	bl	1a388 <traverse_product@@Base+0x87c>
   19f60:	ldr	r0, [sp, #28]
   19f64:	ldr	r1, [r0, #796]	; 0x31c
   19f68:	sub	r1, r1, #1
   19f6c:	str	r1, [r0, #796]	; 0x31c
   19f70:	ldr	r1, [r0, #796]	; 0x31c
   19f74:	ldr	r2, [sp, #32]
   19f78:	ldr	r0, [r2, r1, lsl #2]
   19f7c:	bl	17d3c <codadump_filter_get_next_filter@@Base>
   19f80:	ldr	r1, [sp, #28]
   19f84:	ldr	r2, [r1, #796]	; 0x31c
   19f88:	ldr	r3, [sp, #32]
   19f8c:	add	r2, r3, r2, lsl #2
   19f90:	str	r0, [r2]
   19f94:	b	19dd4 <traverse_product@@Base+0x2c8>
   19f98:	ldr	r0, [pc, #904]	; 1a328 <traverse_product@@Base+0x81c>
   19f9c:	ldr	r0, [pc, r0]
   19fa0:	add	r0, r0, #664	; 0x298
   19fa4:	ldr	r1, [fp, #-16]
   19fa8:	ldr	r2, [pc, #964]	; 1a374 <traverse_product@@Base+0x868>
   19fac:	ldr	r2, [pc, r2]
   19fb0:	ldr	r3, [r2, #796]	; 0x31c
   19fb4:	add	r2, r2, r3, lsl #2
   19fb8:	add	r2, r2, #664	; 0x298
   19fbc:	str	r1, [r2]
   19fc0:	str	r0, [sp, #24]
   19fc4:	b	1a000 <traverse_product@@Base+0x4f4>
   19fc8:	movw	r0, #0
   19fcc:	str	r0, [fp, #-12]
   19fd0:	ldr	r0, [fp, #-12]
   19fd4:	ldr	r1, [fp, #-8]
   19fd8:	cmp	r0, r1
   19fdc:	bge	19ffc <traverse_product@@Base+0x4f0>
   19fe0:	ldr	r0, [fp, #-12]
   19fe4:	movw	r1, #0
   19fe8:	bl	1a388 <traverse_product@@Base+0x87c>
   19fec:	ldr	r0, [fp, #-12]
   19ff0:	add	r0, r0, #1
   19ff4:	str	r0, [fp, #-12]
   19ff8:	b	19fd0 <traverse_product@@Base+0x4c4>
   19ffc:	b	1a000 <traverse_product@@Base+0x4f4>
   1a000:	ldr	r0, [pc, #804]	; 1a32c <traverse_product@@Base+0x820>
   1a004:	ldr	r0, [pc, r0]
   1a008:	ldr	r1, [r0, #136]	; 0x88
   1a00c:	mvn	r2, #0
   1a010:	add	r1, r1, r2
   1a014:	str	r1, [r0, #136]	; 0x88
   1a018:	ldr	r1, [r0, #3748]	; 0xea4
   1a01c:	add	r1, r1, r2
   1a020:	str	r1, [r0, #3748]	; 0xea4
   1a024:	b	1a2b4 <traverse_product@@Base+0x7a8>
   1a028:	ldr	r0, [pc, #716]	; 1a2fc <traverse_product@@Base+0x7f0>
   1a02c:	ldr	r0, [pc, r0]
   1a030:	ldr	r0, [r0, #136]	; 0x88
   1a034:	cmp	r0, #31
   1a038:	blt	1a040 <traverse_product@@Base+0x534>
   1a03c:	b	1a2b4 <traverse_product@@Base+0x7a8>
   1a040:	ldr	r0, [pc, #696]	; 1a300 <traverse_product@@Base+0x7f4>
   1a044:	ldr	r0, [pc, r0]
   1a048:	add	r0, r0, #8
   1a04c:	str	r0, [sp, #20]
   1a050:	bl	15960 <dim_enter_array@@Base>
   1a054:	ldr	r0, [pc, #796]	; 1a378 <traverse_product@@Base+0x86c>
   1a058:	ldr	r0, [pc, r0]
   1a05c:	ldr	lr, [r0, #3360]	; 0xd20
   1a060:	add	lr, lr, #1
   1a064:	str	lr, [r0, #3360]	; 0xd20
   1a068:	ldr	lr, [r0, #136]	; 0x88
   1a06c:	add	lr, lr, #1
   1a070:	str	lr, [r0, #136]	; 0x88
   1a074:	ldr	lr, [r0, #136]	; 0x88
   1a078:	add	r0, r0, lr, lsl #2
   1a07c:	ldr	lr, [r0, #4]
   1a080:	add	r1, r0, #8
   1a084:	mov	r0, lr
   1a088:	bl	128a4 <coda_type_get_array_base_type@plt>
   1a08c:	cmp	r0, #0
   1a090:	beq	1a0a0 <traverse_product@@Base+0x594>
   1a094:	ldr	r0, [pc, #616]	; 1a304 <traverse_product@@Base+0x7f8>
   1a098:	ldr	r0, [pc, r0]
   1a09c:	blx	r0
   1a0a0:	bl	19c6c <traverse_product@@Base+0x160>
   1a0a4:	ldr	lr, [pc, #604]	; 1a308 <traverse_product@@Base+0x7fc>
   1a0a8:	ldr	lr, [pc, lr]
   1a0ac:	ldr	r0, [pc, #600]	; 1a30c <traverse_product@@Base+0x800>
   1a0b0:	ldr	r0, [pc, r0]
   1a0b4:	ldr	r1, [r0, #136]	; 0x88
   1a0b8:	mvn	r2, #0
   1a0bc:	add	r1, r1, r2
   1a0c0:	str	r1, [r0, #136]	; 0x88
   1a0c4:	ldr	r1, [r0, #3360]	; 0xd20
   1a0c8:	add	r1, r1, r2
   1a0cc:	str	r1, [r0, #3360]	; 0xd20
   1a0d0:	blx	lr
   1a0d4:	b	1a2b4 <traverse_product@@Base+0x7a8>
   1a0d8:	ldr	r0, [pc, #516]	; 1a2e4 <traverse_product@@Base+0x7d8>
   1a0dc:	ldr	r0, [pc, r0]
   1a0e0:	add	r0, r0, #8
   1a0e4:	ldr	r1, [pc, #656]	; 1a37c <traverse_product@@Base+0x870>
   1a0e8:	ldr	r1, [pc, r1]
   1a0ec:	ldr	r2, [r1, #136]	; 0x88
   1a0f0:	add	r1, r1, r2, lsl #2
   1a0f4:	add	r1, r1, #8
   1a0f8:	ldr	r1, [r1]
   1a0fc:	str	r0, [sp, #16]
   1a100:	mov	r0, r1
   1a104:	sub	r1, fp, #24
   1a108:	bl	127d8 <coda_type_get_read_type@plt>
   1a10c:	cmp	r0, #0
   1a110:	beq	1a120 <traverse_product@@Base+0x614>
   1a114:	ldr	r0, [pc, #460]	; 1a2e8 <traverse_product@@Base+0x7dc>
   1a118:	ldr	r0, [pc, r0]
   1a11c:	blx	r0
   1a120:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a124:	sub	r0, r0, #11
   1a128:	cmp	r0, #1
   1a12c:	bhi	1a180 <traverse_product@@Base+0x674>
   1a130:	b	1a134 <traverse_product@@Base+0x628>
   1a134:	ldr	r0, [pc, #444]	; 1a2f8 <traverse_product@@Base+0x7ec>
   1a138:	ldr	r0, [pc, r0]
   1a13c:	blx	r0
   1a140:	ldr	r0, [pc, #428]	; 1a2f4 <traverse_product@@Base+0x7e8>
   1a144:	ldr	r0, [pc, r0]
   1a148:	ldr	lr, [r0, #3360]	; 0xd20
   1a14c:	add	lr, lr, #1
   1a150:	str	lr, [r0, #3360]	; 0xd20
   1a154:	bl	1a5e8 <traverse_product@@Base+0xadc>
   1a158:	ldr	r0, [pc, #396]	; 1a2ec <traverse_product@@Base+0x7e0>
   1a15c:	ldr	r0, [pc, r0]
   1a160:	ldr	lr, [pc, #392]	; 1a2f0 <traverse_product@@Base+0x7e4>
   1a164:	ldr	lr, [pc, lr]
   1a168:	ldr	r1, [lr, #3360]	; 0xd20
   1a16c:	mvn	r2, #0
   1a170:	add	r1, r1, r2
   1a174:	str	r1, [lr, #3360]	; 0xd20
   1a178:	blx	r0
   1a17c:	b	1a184 <traverse_product@@Base+0x678>
   1a180:	bl	1a5e8 <traverse_product@@Base+0xadc>
   1a184:	b	1a2b4 <traverse_product@@Base+0x7a8>
   1a188:	bl	125bc <coda_get_option_bypass_special_types@plt>
   1a18c:	cmp	r0, #0
   1a190:	beq	1a1dc <traverse_product@@Base+0x6d0>
   1a194:	ldr	r0, [pc, #320]	; 1a2dc <traverse_product@@Base+0x7d0>
   1a198:	ldr	r0, [pc, r0]
   1a19c:	add	r0, r0, #8
   1a1a0:	ldr	r1, [pc, #472]	; 1a380 <traverse_product@@Base+0x874>
   1a1a4:	ldr	r1, [pc, r1]
   1a1a8:	ldr	r2, [r1, #136]	; 0x88
   1a1ac:	add	r1, r1, r2, lsl #2
   1a1b0:	ldr	r2, [r1, #8]!
   1a1b4:	str	r0, [sp, #12]
   1a1b8:	mov	r0, r2
   1a1bc:	bl	129b8 <coda_type_get_special_base_type@plt>
   1a1c0:	cmp	r0, #0
   1a1c4:	beq	1a1d4 <traverse_product@@Base+0x6c8>
   1a1c8:	ldr	r0, [pc, #272]	; 1a2e0 <traverse_product@@Base+0x7d4>
   1a1cc:	ldr	r0, [pc, r0]
   1a1d0:	blx	r0
   1a1d4:	bl	19c6c <traverse_product@@Base+0x160>
   1a1d8:	b	1a2b4 <traverse_product@@Base+0x7a8>
   1a1dc:	ldr	r0, [pc, #224]	; 1a2c4 <traverse_product@@Base+0x7b8>
   1a1e0:	ldr	r0, [pc, r0]
   1a1e4:	add	r0, r0, #8
   1a1e8:	ldr	r1, [pc, #404]	; 1a384 <traverse_product@@Base+0x878>
   1a1ec:	ldr	r1, [pc, r1]
   1a1f0:	ldr	r2, [r1, #136]	; 0x88
   1a1f4:	add	r1, r1, r2, lsl #2
   1a1f8:	add	r1, r1, #8
   1a1fc:	ldr	r1, [r1]
   1a200:	str	r0, [sp, #8]
   1a204:	mov	r0, r1
   1a208:	sub	r1, fp, #28
   1a20c:	bl	12880 <coda_type_get_special_type@plt>
   1a210:	cmp	r0, #0
   1a214:	beq	1a224 <traverse_product@@Base+0x718>
   1a218:	ldr	r0, [pc, #168]	; 1a2c8 <traverse_product@@Base+0x7bc>
   1a21c:	ldr	r0, [pc, r0]
   1a220:	blx	r0
   1a224:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a228:	cmp	r0, #0
   1a22c:	str	r0, [sp, #4]
   1a230:	beq	1a25c <traverse_product@@Base+0x750>
   1a234:	b	1a238 <traverse_product@@Base+0x72c>
   1a238:	ldr	r0, [sp, #4]
   1a23c:	sub	r1, r0, #1
   1a240:	cmp	r1, #2
   1a244:	bcc	1a260 <traverse_product@@Base+0x754>
   1a248:	b	1a24c <traverse_product@@Base+0x740>
   1a24c:	ldr	r0, [sp, #4]
   1a250:	cmp	r0, #3
   1a254:	beq	1a268 <traverse_product@@Base+0x75c>
   1a258:	b	1a2b0 <traverse_product@@Base+0x7a4>
   1a25c:	b	1a2b4 <traverse_product@@Base+0x7a8>
   1a260:	bl	1a5e8 <traverse_product@@Base+0xadc>
   1a264:	b	1a2b0 <traverse_product@@Base+0x7a4>
   1a268:	ldr	r0, [pc, #104]	; 1a2d8 <traverse_product@@Base+0x7cc>
   1a26c:	ldr	r0, [pc, r0]
   1a270:	blx	r0
   1a274:	ldr	r0, [pc, #88]	; 1a2d4 <traverse_product@@Base+0x7c8>
   1a278:	ldr	r0, [pc, r0]
   1a27c:	ldr	lr, [r0, #3360]	; 0xd20
   1a280:	add	lr, lr, #1
   1a284:	str	lr, [r0, #3360]	; 0xd20
   1a288:	bl	1a5e8 <traverse_product@@Base+0xadc>
   1a28c:	ldr	r0, [pc, #56]	; 1a2cc <traverse_product@@Base+0x7c0>
   1a290:	ldr	r0, [pc, r0]
   1a294:	ldr	lr, [pc, #52]	; 1a2d0 <traverse_product@@Base+0x7c4>
   1a298:	ldr	lr, [pc, lr]
   1a29c:	ldr	r1, [lr, #3360]	; 0xd20
   1a2a0:	mvn	r2, #0
   1a2a4:	add	r1, r1, r2
   1a2a8:	str	r1, [lr, #3360]	; 0xd20
   1a2ac:	blx	r0
   1a2b0:	b	1a2b4 <traverse_product@@Base+0x7a8>
   1a2b4:	mov	sp, fp
   1a2b8:	pop	{fp, pc}
   1a2bc:	andeq	r7, r1, r0, lsr r5
   1a2c0:	andeq	r7, r1, r0, lsr #10
   1a2c4:	andeq	r6, r1, ip, asr #31
   1a2c8:			; <UNDEFINED> instruction: 0x00016fbc
   1a2cc:	andeq	r6, r1, r8, lsl #30
   1a2d0:	andeq	r6, r1, r4, lsl pc
   1a2d4:	andeq	r6, r1, r4, lsr pc
   1a2d8:	andeq	r6, r1, r8, ror #30
   1a2dc:	andeq	r7, r1, r4, lsl r0
   1a2e0:	andeq	r7, r1, ip
   1a2e4:	ldrdeq	r7, [r1], -r0
   1a2e8:	andeq	r7, r1, r0, asr #1
   1a2ec:	andeq	r7, r1, ip, lsr r0
   1a2f0:	andeq	r7, r1, r8, asr #32
   1a2f4:	andeq	r7, r1, r8, rrx
   1a2f8:	muleq	r1, ip, r0
   1a2fc:	andeq	r7, r1, r0, lsl #3
   1a300:	andeq	r7, r1, r8, ror #2
   1a304:	andeq	r7, r1, r0, asr #2
   1a308:	strdeq	r7, [r1], -r0
   1a30c:	strdeq	r7, [r1], -ip
   1a310:	andeq	r7, r1, ip, lsr #9
   1a314:	muleq	r1, r4, r4
   1a318:	andeq	r7, r1, r8, ror r4
   1a31c:	andeq	r7, r1, r0, asr #8
   1a320:	andeq	r7, r1, r0, lsl #8
   1a324:	ldrdeq	r7, [r1], -r4
   1a328:	andeq	r7, r1, r0, lsl r2
   1a32c:	andeq	r7, r1, r8, lsr #3
   1a330:	andeq	r7, r1, r0, lsr #7
   1a334:	strdeq	r5, [r0], -r6
   1a338:	strdeq	r5, [r0], -fp
   1a33c:	andeq	r5, r0, r8, asr r8
   1a340:	andeq	r7, r1, r8, lsr r3
   1a344:	andeq	r7, r1, r0, ror #5
   1a348:	andeq	r7, r1, r8, lsr #5
   1a34c:	andeq	r5, r0, r5, lsl #16
   1a350:	ldrdeq	r7, [r1], -ip
   1a354:	andeq	r7, r1, r4, lsr #10
   1a358:	andeq	r7, r1, r8, lsl #9
   1a35c:	andeq	r7, r1, r4, lsr r4
   1a360:	strdeq	r7, [r1], -r4
   1a364:	andeq	r7, r1, r8, asr #7
   1a368:	muleq	r1, r4, r3
   1a36c:	andeq	r7, r1, ip, lsr #6
   1a370:	muleq	r1, ip, r2
   1a374:	andeq	r7, r1, r0, lsl #4
   1a378:	andeq	r7, r1, r4, asr r1
   1a37c:	andeq	r7, r1, r4, asr #1
   1a380:	andeq	r7, r1, r8
   1a384:	andeq	r6, r1, r0, asr #31
   1a388:	push	{fp, lr}
   1a38c:	mov	fp, sp
   1a390:	sub	sp, sp, #48	; 0x30
   1a394:	ldr	r2, [pc, #524]	; 1a5a8 <traverse_product@@Base+0xa9c>
   1a398:	ldr	r2, [pc, r2]
   1a39c:	add	r2, r2, #8
   1a3a0:	str	r0, [fp, #-4]
   1a3a4:	str	r1, [fp, #-8]
   1a3a8:	ldr	r0, [fp, #-4]
   1a3ac:	ldr	r1, [pc, #544]	; 1a5d4 <traverse_product@@Base+0xac8>
   1a3b0:	ldr	r1, [pc, r1]
   1a3b4:	ldr	r3, [r1, #3748]	; 0xea4
   1a3b8:	add	r3, r1, r3, lsl #2
   1a3bc:	str	r0, [r3, #3488]	; 0xda0
   1a3c0:	ldr	r0, [r1, #136]	; 0x88
   1a3c4:	sub	r0, r0, #1
   1a3c8:	add	r0, r1, r0, lsl #2
   1a3cc:	add	r0, r0, #8
   1a3d0:	ldr	r0, [r0]
   1a3d4:	ldr	r1, [fp, #-4]
   1a3d8:	sub	r3, fp, #12
   1a3dc:	str	r2, [fp, #-20]	; 0xffffffec
   1a3e0:	mov	r2, r3
   1a3e4:	bl	125e0 <coda_type_get_record_field_hidden_status@plt>
   1a3e8:	cmp	r0, #0
   1a3ec:	beq	1a3fc <traverse_product@@Base+0x8f0>
   1a3f0:	ldr	r0, [pc, #436]	; 1a5ac <traverse_product@@Base+0xaa0>
   1a3f4:	ldr	r0, [pc, r0]
   1a3f8:	blx	r0
   1a3fc:	ldr	r0, [fp, #-12]
   1a400:	cmp	r0, #0
   1a404:	beq	1a418 <traverse_product@@Base+0x90c>
   1a408:	ldr	r0, [fp, #-8]
   1a40c:	cmp	r0, #0
   1a410:	bne	1a418 <traverse_product@@Base+0x90c>
   1a414:	b	1a5a0 <traverse_product@@Base+0xa94>
   1a418:	ldr	r0, [pc, #400]	; 1a5b0 <traverse_product@@Base+0xaa4>
   1a41c:	ldr	r0, [pc, r0]
   1a420:	ldr	r0, [r0]
   1a424:	cmp	r0, #0
   1a428:	beq	1a4e0 <traverse_product@@Base+0x9d4>
   1a42c:	ldr	r0, [pc, #384]	; 1a5b4 <traverse_product@@Base+0xaa8>
   1a430:	ldr	r0, [pc, r0]
   1a434:	add	r0, r0, #8
   1a438:	ldr	r1, [pc, #408]	; 1a5d8 <traverse_product@@Base+0xacc>
   1a43c:	ldr	r1, [pc, r1]
   1a440:	ldr	r2, [r1, #136]	; 0x88
   1a444:	sub	r2, r2, #1
   1a448:	add	r1, r1, r2, lsl #2
   1a44c:	add	r1, r1, #8
   1a450:	ldr	r1, [r1]
   1a454:	ldr	r2, [fp, #-4]
   1a458:	str	r0, [sp, #24]
   1a45c:	mov	r0, r1
   1a460:	mov	r1, r2
   1a464:	sub	r2, fp, #16
   1a468:	bl	126d0 <coda_type_get_record_field_available_status@plt>
   1a46c:	cmp	r0, #0
   1a470:	beq	1a480 <traverse_product@@Base+0x974>
   1a474:	ldr	r0, [pc, #316]	; 1a5b8 <traverse_product@@Base+0xaac>
   1a478:	ldr	r0, [pc, r0]
   1a47c:	blx	r0
   1a480:	ldr	r0, [fp, #-16]
   1a484:	cmn	r0, #1
   1a488:	bne	1a4a8 <traverse_product@@Base+0x99c>
   1a48c:	ldr	r0, [pc, #296]	; 1a5bc <traverse_product@@Base+0xab0>
   1a490:	ldr	r0, [pc, r0]
   1a494:	blx	r0
   1a498:	cmp	r0, #0
   1a49c:	bne	1a4a4 <traverse_product@@Base+0x998>
   1a4a0:	b	1a5a0 <traverse_product@@Base+0xa94>
   1a4a4:	b	1a4a8 <traverse_product@@Base+0x99c>
   1a4a8:	ldr	r0, [pc, #272]	; 1a5c0 <traverse_product@@Base+0xab4>
   1a4ac:	ldr	r0, [pc, r0]
   1a4b0:	movw	r1, #3364	; 0xd24
   1a4b4:	add	r0, r0, r1
   1a4b8:	ldr	r1, [fp, #-16]
   1a4bc:	ldr	r2, [pc, #280]	; 1a5dc <traverse_product@@Base+0xad0>
   1a4c0:	ldr	r2, [pc, r2]
   1a4c4:	ldr	r3, [r2, #136]	; 0x88
   1a4c8:	sub	r3, r3, #1
   1a4cc:	add	r2, r2, r3, lsl #2
   1a4d0:	movw	r3, #3364	; 0xd24
   1a4d4:	add	r2, r2, r3
   1a4d8:	str	r1, [r2]
   1a4dc:	str	r0, [sp, #20]
   1a4e0:	ldr	r0, [pc, #220]	; 1a5c4 <traverse_product@@Base+0xab8>
   1a4e4:	ldr	r0, [pc, r0]
   1a4e8:	movw	r1, #3620	; 0xe24
   1a4ec:	add	r0, r0, r1
   1a4f0:	ldr	r1, [pc, #232]	; 1a5e0 <traverse_product@@Base+0xad4>
   1a4f4:	ldr	r1, [pc, r1]
   1a4f8:	ldr	r2, [r1, #136]	; 0x88
   1a4fc:	add	r2, r1, r2, lsl #2
   1a500:	ldr	r2, [r2, #4]
   1a504:	ldr	r3, [fp, #-4]
   1a508:	ldr	ip, [r1, #3748]	; 0xea4
   1a50c:	sub	ip, ip, #1
   1a510:	add	r1, r1, ip, lsl #2
   1a514:	movw	ip, #3620	; 0xe24
   1a518:	add	r1, r1, ip
   1a51c:	str	r0, [sp, #16]
   1a520:	mov	r0, r2
   1a524:	str	r1, [sp, #12]
   1a528:	mov	r1, r3
   1a52c:	ldr	r2, [sp, #12]
   1a530:	bl	129c4 <coda_type_get_record_field_name@plt>
   1a534:	cmp	r0, #0
   1a538:	beq	1a548 <traverse_product@@Base+0xa3c>
   1a53c:	ldr	r0, [pc, #132]	; 1a5c8 <traverse_product@@Base+0xabc>
   1a540:	ldr	r0, [pc, r0]
   1a544:	blx	r0
   1a548:	ldr	r0, [pc, #124]	; 1a5cc <traverse_product@@Base+0xac0>
   1a54c:	ldr	r0, [pc, r0]
   1a550:	add	r0, r0, #8
   1a554:	ldr	r1, [pc, #136]	; 1a5e4 <traverse_product@@Base+0xad8>
   1a558:	ldr	r1, [pc, r1]
   1a55c:	ldr	r2, [r1, #136]	; 0x88
   1a560:	add	r1, r1, r2, lsl #2
   1a564:	ldr	r2, [r1, #4]
   1a568:	ldr	r3, [fp, #-4]
   1a56c:	add	r1, r1, #8
   1a570:	str	r0, [sp, #8]
   1a574:	mov	r0, r2
   1a578:	str	r1, [sp, #4]
   1a57c:	mov	r1, r3
   1a580:	ldr	r2, [sp, #4]
   1a584:	bl	12694 <coda_type_get_record_field_type@plt>
   1a588:	cmp	r0, #0
   1a58c:	beq	1a59c <traverse_product@@Base+0xa90>
   1a590:	ldr	r0, [pc, #56]	; 1a5d0 <traverse_product@@Base+0xac4>
   1a594:	ldr	r0, [pc, r0]
   1a598:	blx	r0
   1a59c:	bl	19c6c <traverse_product@@Base+0x160>
   1a5a0:	mov	sp, fp
   1a5a4:	pop	{fp, pc}
   1a5a8:	andeq	r6, r1, r4, lsl lr
   1a5ac:	andeq	r6, r1, r4, ror #27
   1a5b0:	andeq	r6, r1, ip, lsl #27
   1a5b4:	andeq	r6, r1, ip, ror sp
   1a5b8:	andeq	r6, r1, r0, ror #26
   1a5bc:	andeq	r6, r1, r0, lsl #26
   1a5c0:	andeq	r6, r1, r0, lsl #26
   1a5c4:	andeq	r6, r1, r8, asr #25
   1a5c8:	muleq	r1, r8, ip
   1a5cc:	andeq	r6, r1, r0, ror #24
   1a5d0:	andeq	r6, r1, r4, asr #24
   1a5d4:	strdeq	r6, [r1], -ip
   1a5d8:	andeq	r6, r1, r0, ror sp
   1a5dc:	andeq	r6, r1, ip, ror #25
   1a5e0:			; <UNDEFINED> instruction: 0x00016cb8
   1a5e4:	andeq	r6, r1, r4, asr ip
   1a5e8:	push	{fp, lr}
   1a5ec:	mov	fp, sp
   1a5f0:	sub	sp, sp, #88	; 0x58
   1a5f4:	ldr	r0, [pc, #964]	; 1a9c0 <traverse_product@@Base+0xeb4>
   1a5f8:	ldr	r0, [pc, r0]
   1a5fc:	ldr	r0, [r0]
   1a600:	cmp	r0, #0
   1a604:	bne	1a994 <traverse_product@@Base+0xe88>
   1a608:	ldr	r0, [pc, #960]	; 1a9d0 <traverse_product@@Base+0xec4>
   1a60c:	ldr	r0, [pc, r0]
   1a610:	ldr	r0, [r0]
   1a614:	movw	r1, #1
   1a618:	movw	r2, #0
   1a61c:	bl	19324 <print_full_field_name@@Base>
   1a620:	ldr	r0, [pc, #932]	; 1a9cc <traverse_product@@Base+0xec0>
   1a624:	ldr	r0, [pc, r0]
   1a628:	ldr	r0, [r0]
   1a62c:	cmp	r0, #0
   1a630:	beq	1a808 <traverse_product@@Base+0xcfc>
   1a634:	ldr	r0, [pc, #920]	; 1a9d4 <traverse_product@@Base+0xec8>
   1a638:	ldr	r0, [pc, r0]
   1a63c:	add	r0, r0, #8
   1a640:	ldr	r1, [pc, #1016]	; 1aa40 <traverse_product@@Base+0xf34>
   1a644:	ldr	r1, [pc, r1]
   1a648:	ldr	r2, [r1, #136]	; 0x88
   1a64c:	add	r1, r1, r2, lsl #2
   1a650:	add	r1, r1, #8
   1a654:	ldr	r1, [r1]
   1a658:	str	r0, [fp, #-28]	; 0xffffffe4
   1a65c:	mov	r0, r1
   1a660:	sub	r1, fp, #4
   1a664:	bl	12a00 <coda_type_get_class@plt>
   1a668:	cmp	r0, #0
   1a66c:	beq	1a67c <traverse_product@@Base+0xb70>
   1a670:	ldr	r0, [pc, #864]	; 1a9d8 <traverse_product@@Base+0xecc>
   1a674:	ldr	r0, [pc, r0]
   1a678:	blx	r0
   1a67c:	ldr	r0, [fp, #-4]
   1a680:	cmp	r0, #6
   1a684:	bne	1a6f8 <traverse_product@@Base+0xbec>
   1a688:	ldr	r0, [pc, #888]	; 1aa08 <traverse_product@@Base+0xefc>
   1a68c:	ldr	r0, [pc, r0]
   1a690:	add	r0, r0, #8
   1a694:	ldr	r1, [pc, #936]	; 1aa44 <traverse_product@@Base+0xf38>
   1a698:	ldr	r1, [pc, r1]
   1a69c:	ldr	r2, [r1, #136]	; 0x88
   1a6a0:	add	r1, r1, r2, lsl #2
   1a6a4:	add	r1, r1, #8
   1a6a8:	ldr	r1, [r1]
   1a6ac:	str	r0, [fp, #-32]	; 0xffffffe0
   1a6b0:	mov	r0, r1
   1a6b4:	sub	r1, fp, #8
   1a6b8:	bl	12880 <coda_type_get_special_type@plt>
   1a6bc:	cmp	r0, #0
   1a6c0:	beq	1a6d0 <traverse_product@@Base+0xbc4>
   1a6c4:	ldr	r0, [pc, #832]	; 1aa0c <traverse_product@@Base+0xf00>
   1a6c8:	ldr	r0, [pc, r0]
   1a6cc:	blx	r0
   1a6d0:	ldr	r0, [fp, #-8]
   1a6d4:	bl	12598 <coda_type_get_special_type_name@plt>
   1a6d8:	ldr	lr, [pc, #816]	; 1aa10 <traverse_product@@Base+0xf04>
   1a6dc:	add	lr, pc, lr
   1a6e0:	str	r0, [fp, #-36]	; 0xffffffdc
   1a6e4:	mov	r0, lr
   1a6e8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a6ec:	bl	125ec <printf@plt>
   1a6f0:	str	r0, [fp, #-40]	; 0xffffffd8
   1a6f4:	b	1a804 <traverse_product@@Base+0xcf8>
   1a6f8:	ldr	r0, [pc, #732]	; 1a9dc <traverse_product@@Base+0xed0>
   1a6fc:	ldr	r0, [pc, r0]
   1a700:	add	r0, r0, #8
   1a704:	ldr	r1, [pc, #828]	; 1aa48 <traverse_product@@Base+0xf3c>
   1a708:	ldr	r1, [pc, r1]
   1a70c:	ldr	r2, [r1, #136]	; 0x88
   1a710:	add	r1, r1, r2, lsl #2
   1a714:	add	r1, r1, #8
   1a718:	ldr	r1, [r1]
   1a71c:	str	r0, [sp, #44]	; 0x2c
   1a720:	mov	r0, r1
   1a724:	sub	r1, fp, #12
   1a728:	bl	127d8 <coda_type_get_read_type@plt>
   1a72c:	cmp	r0, #0
   1a730:	beq	1a740 <traverse_product@@Base+0xc34>
   1a734:	ldr	r0, [pc, #676]	; 1a9e0 <traverse_product@@Base+0xed4>
   1a738:	ldr	r0, [pc, r0]
   1a73c:	blx	r0
   1a740:	ldr	r0, [fp, #-12]
   1a744:	bl	128c8 <coda_type_get_native_type_name@plt>
   1a748:	ldr	lr, [pc, #660]	; 1a9e4 <traverse_product@@Base+0xed8>
   1a74c:	add	lr, pc, lr
   1a750:	str	r0, [sp, #40]	; 0x28
   1a754:	mov	r0, lr
   1a758:	ldr	r1, [sp, #40]	; 0x28
   1a75c:	bl	125ec <printf@plt>
   1a760:	ldr	r1, [fp, #-12]
   1a764:	cmp	r1, #11
   1a768:	str	r0, [sp, #36]	; 0x24
   1a76c:	beq	1a77c <traverse_product@@Base+0xc70>
   1a770:	ldr	r0, [fp, #-12]
   1a774:	cmp	r0, #12
   1a778:	bne	1a800 <traverse_product@@Base+0xcf4>
   1a77c:	ldr	r0, [pc, #616]	; 1a9ec <traverse_product@@Base+0xee0>
   1a780:	add	r0, pc, r0
   1a784:	bl	125ec <printf@plt>
   1a788:	ldr	lr, [pc, #600]	; 1a9e8 <traverse_product@@Base+0xedc>
   1a78c:	ldr	lr, [pc, lr]
   1a790:	ldr	lr, [lr, #3360]	; 0xd20
   1a794:	cmp	lr, #0
   1a798:	str	r0, [sp, #32]
   1a79c:	ble	1a7a4 <traverse_product@@Base+0xc98>
   1a7a0:	b	1a7c4 <traverse_product@@Base+0xcb8>
   1a7a4:	ldr	r0, [pc, #580]	; 1a9f0 <traverse_product@@Base+0xee4>
   1a7a8:	add	r0, pc, r0
   1a7ac:	ldr	r1, [pc, #576]	; 1a9f4 <traverse_product@@Base+0xee8>
   1a7b0:	add	r1, pc, r1
   1a7b4:	ldr	r2, [pc, #572]	; 1a9f8 <traverse_product@@Base+0xeec>
   1a7b8:	add	r3, pc, r2
   1a7bc:	movw	r2, #238	; 0xee
   1a7c0:	bl	129f4 <__assert_fail@plt>
   1a7c4:	ldr	r0, [pc, #564]	; 1aa00 <traverse_product@@Base+0xef4>
   1a7c8:	ldr	r0, [pc, r0]
   1a7cc:	ldr	r1, [pc, #560]	; 1aa04 <traverse_product@@Base+0xef8>
   1a7d0:	ldr	r1, [pc, r1]
   1a7d4:	ldr	r1, [r1]
   1a7d8:	ldr	r0, [r0, #3360]	; 0xd20
   1a7dc:	sub	r0, r0, #1
   1a7e0:	str	r0, [sp, #28]
   1a7e4:	mov	r0, r1
   1a7e8:	ldr	r1, [sp, #28]
   1a7ec:	bl	19854 <print_full_field_name@@Base+0x530>
   1a7f0:	ldr	r0, [pc, #516]	; 1a9fc <traverse_product@@Base+0xef0>
   1a7f4:	add	r0, pc, r0
   1a7f8:	bl	125ec <printf@plt>
   1a7fc:	str	r0, [sp, #24]
   1a800:	b	1a804 <traverse_product@@Base+0xcf8>
   1a804:	b	1a808 <traverse_product@@Base+0xcfc>
   1a808:	ldr	r0, [pc, #516]	; 1aa14 <traverse_product@@Base+0xf08>
   1a80c:	ldr	r0, [pc, r0]
   1a810:	ldr	r0, [r0]
   1a814:	cmp	r0, #0
   1a818:	beq	1a89c <traverse_product@@Base+0xd90>
   1a81c:	ldr	r0, [pc, #500]	; 1aa18 <traverse_product@@Base+0xf0c>
   1a820:	ldr	r0, [pc, r0]
   1a824:	add	r0, r0, #8
   1a828:	ldr	r1, [pc, #540]	; 1aa4c <traverse_product@@Base+0xf40>
   1a82c:	ldr	r1, [pc, r1]
   1a830:	ldr	r2, [r1, #136]	; 0x88
   1a834:	add	r1, r1, r2, lsl #2
   1a838:	add	r1, r1, #8
   1a83c:	ldr	r1, [r1]
   1a840:	str	r0, [sp, #20]
   1a844:	mov	r0, r1
   1a848:	sub	r1, fp, #16
   1a84c:	bl	1270c <coda_type_get_unit@plt>
   1a850:	cmp	r0, #0
   1a854:	beq	1a864 <traverse_product@@Base+0xd58>
   1a858:	ldr	r0, [pc, #444]	; 1aa1c <traverse_product@@Base+0xf10>
   1a85c:	ldr	r0, [pc, r0]
   1a860:	blx	r0
   1a864:	ldr	r0, [fp, #-16]
   1a868:	movw	r1, #0
   1a86c:	cmp	r0, r1
   1a870:	beq	1a898 <traverse_product@@Base+0xd8c>
   1a874:	ldr	r0, [fp, #-16]
   1a878:	ldrb	r0, [r0]
   1a87c:	cmp	r0, #0
   1a880:	beq	1a898 <traverse_product@@Base+0xd8c>
   1a884:	ldr	r0, [pc, #404]	; 1aa20 <traverse_product@@Base+0xf14>
   1a888:	add	r0, pc, r0
   1a88c:	ldr	r1, [fp, #-16]
   1a890:	bl	125ec <printf@plt>
   1a894:	str	r0, [sp, #16]
   1a898:	b	1a89c <traverse_product@@Base+0xd90>
   1a89c:	ldr	r0, [pc, #384]	; 1aa24 <traverse_product@@Base+0xf18>
   1a8a0:	ldr	r0, [pc, r0]
   1a8a4:	ldr	r0, [r0]
   1a8a8:	cmp	r0, #0
   1a8ac:	beq	1a930 <traverse_product@@Base+0xe24>
   1a8b0:	ldr	r0, [pc, #368]	; 1aa28 <traverse_product@@Base+0xf1c>
   1a8b4:	ldr	r0, [pc, r0]
   1a8b8:	add	r0, r0, #8
   1a8bc:	ldr	r1, [pc, #396]	; 1aa50 <traverse_product@@Base+0xf44>
   1a8c0:	ldr	r1, [pc, r1]
   1a8c4:	ldr	r2, [r1, #136]	; 0x88
   1a8c8:	add	r1, r1, r2, lsl #2
   1a8cc:	add	r1, r1, #8
   1a8d0:	ldr	r1, [r1]
   1a8d4:	str	r0, [sp, #12]
   1a8d8:	mov	r0, r1
   1a8dc:	sub	r1, fp, #20
   1a8e0:	bl	12718 <coda_type_get_description@plt>
   1a8e4:	cmp	r0, #0
   1a8e8:	beq	1a8f8 <traverse_product@@Base+0xdec>
   1a8ec:	ldr	r0, [pc, #312]	; 1aa2c <traverse_product@@Base+0xf20>
   1a8f0:	ldr	r0, [pc, r0]
   1a8f4:	blx	r0
   1a8f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a8fc:	movw	r1, #0
   1a900:	cmp	r0, r1
   1a904:	beq	1a92c <traverse_product@@Base+0xe20>
   1a908:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a90c:	ldrb	r0, [r0]
   1a910:	cmp	r0, #0
   1a914:	beq	1a92c <traverse_product@@Base+0xe20>
   1a918:	ldr	r0, [pc, #272]	; 1aa30 <traverse_product@@Base+0xf24>
   1a91c:	add	r0, pc, r0
   1a920:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a924:	bl	125ec <printf@plt>
   1a928:	str	r0, [sp, #8]
   1a92c:	b	1a930 <traverse_product@@Base+0xe24>
   1a930:	ldr	r0, [pc, #256]	; 1aa38 <traverse_product@@Base+0xf2c>
   1a934:	add	r0, pc, r0
   1a938:	bl	125ec <printf@plt>
   1a93c:	ldr	lr, [pc, #240]	; 1aa34 <traverse_product@@Base+0xf28>
   1a940:	ldr	lr, [pc, lr]
   1a944:	ldr	lr, [lr]
   1a948:	cmp	lr, #0
   1a94c:	str	r0, [sp, #4]
   1a950:	beq	1a990 <traverse_product@@Base+0xe84>
   1a954:	movw	r0, #0
   1a958:	str	r0, [fp, #-24]	; 0xffffffe8
   1a95c:	ldr	r0, [pc, #216]	; 1aa3c <traverse_product@@Base+0xf30>
   1a960:	ldr	r0, [pc, r0]
   1a964:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a968:	ldr	r0, [r0]
   1a96c:	cmp	r1, r0
   1a970:	bge	1a98c <traverse_product@@Base+0xe80>
   1a974:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a978:	bl	15510 <print_all_distinct_dims@@Base>
   1a97c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a980:	add	r0, r0, #1
   1a984:	str	r0, [fp, #-24]	; 0xffffffe8
   1a988:	b	1a95c <traverse_product@@Base+0xe50>
   1a98c:	b	1a990 <traverse_product@@Base+0xe84>
   1a990:	b	1a9b8 <traverse_product@@Base+0xeac>
   1a994:	ldr	r0, [pc, #40]	; 1a9c4 <traverse_product@@Base+0xeb8>
   1a998:	ldr	r0, [pc, r0]
   1a99c:	ldr	r0, [r0]
   1a9a0:	cmp	r0, #1
   1a9a4:	bne	1a9b4 <traverse_product@@Base+0xea8>
   1a9a8:	ldr	r0, [pc, #24]	; 1a9c8 <traverse_product@@Base+0xebc>
   1a9ac:	ldr	r0, [pc, r0]
   1a9b0:	blx	r0
   1a9b4:	b	1a9b8 <traverse_product@@Base+0xeac>
   1a9b8:	mov	sp, fp
   1a9bc:	pop	{fp, pc}
   1a9c0:	andeq	r6, r1, r4, ror #23
   1a9c4:	andeq	r6, r1, r4, asr #16
   1a9c8:	ldrdeq	r6, [r1], -r8
   1a9cc:	muleq	r1, ip, fp
   1a9d0:	ldrdeq	r6, [r1], -r8
   1a9d4:	andeq	r6, r1, r4, ror fp
   1a9d8:	andeq	r6, r1, r4, ror #22
   1a9dc:			; <UNDEFINED> instruction: 0x00016ab0
   1a9e0:	andeq	r6, r1, r0, lsr #21
   1a9e4:			; <UNDEFINED> instruction: 0x00004fb9
   1a9e8:	andeq	r6, r1, r0, lsr #20
   1a9ec:	andeq	r4, r0, lr, asr sl
   1a9f0:	andeq	r4, r0, r1, ror #30
   1a9f4:	andeq	r4, r0, r7, lsr #29
   1a9f8:	andeq	r4, r0, lr, ror #30
   1a9fc:	ldrdeq	r4, [r0], -fp
   1aa00:	andeq	r6, r1, r4, ror #19
   1aa04:	andeq	r6, r1, r4, lsl sl
   1aa08:	andeq	r6, r1, r0, lsr #22
   1aa0c:	andeq	r6, r1, r0, lsl fp
   1aa10:	andeq	r5, r0, r9, lsr #32
   1aa14:	muleq	r1, r4, r9
   1aa18:	andeq	r6, r1, ip, lsl #19
   1aa1c:	andeq	r6, r1, ip, ror r9
   1aa20:			; <UNDEFINED> instruction: 0x00004eb9
   1aa24:	andeq	r6, r1, r4, lsr #18
   1aa28:	strdeq	r6, [r1], -r8
   1aa2c:	andeq	r6, r1, r8, ror #17
   1aa30:	andeq	r4, r0, fp, lsr #28
   1aa34:	andeq	r6, r1, ip, asr #16
   1aa38:	strdeq	r5, [r0], -r7
   1aa3c:	muleq	r1, r0, r8
   1aa40:	andeq	r6, r1, r8, ror #22
   1aa44:	andeq	r6, r1, r4, lsl fp
   1aa48:	andeq	r6, r1, r4, lsr #21
   1aa4c:	andeq	r6, r1, r0, lsl #19
   1aa50:	andeq	r6, r1, ip, ror #17

0001aa54 <print_yaml_data@@Base>:
   1aa54:	push	{r4, r5, fp, lr}
   1aa58:	add	fp, sp, #8
   1aa5c:	sub	sp, sp, #552	; 0x228
   1aa60:	ldr	r1, [pc, #296]	; 1ab90 <print_yaml_data@@Base+0x13c>
   1aa64:	ldr	r1, [pc, r1]
   1aa68:	ldr	r2, [pc, #292]	; 1ab94 <print_yaml_data@@Base+0x140>
   1aa6c:	add	r2, pc, r2
   1aa70:	str	r0, [fp, #-12]
   1aa74:	ldr	r0, [fp, #-12]
   1aa78:	str	r0, [r2]
   1aa7c:	ldr	r0, [r1]
   1aa80:	sub	r1, fp, #16
   1aa84:	bl	1261c <coda_open@plt>
   1aa88:	str	r0, [sp, #20]
   1aa8c:	ldr	r0, [sp, #20]
   1aa90:	cmp	r0, #0
   1aa94:	beq	1aadc <print_yaml_data@@Base+0x88>
   1aa98:	bl	129ac <coda_get_errno@plt>
   1aa9c:	ldr	r0, [r0]
   1aaa0:	cmn	r0, #21
   1aaa4:	bne	1aadc <print_yaml_data@@Base+0x88>
   1aaa8:	movw	r0, #0
   1aaac:	bl	12664 <coda_set_option_use_mmap@plt>
   1aab0:	ldr	lr, [pc, #224]	; 1ab98 <print_yaml_data@@Base+0x144>
   1aab4:	ldr	lr, [pc, lr]
   1aab8:	ldr	lr, [lr]
   1aabc:	str	r0, [sp, #16]
   1aac0:	mov	r0, lr
   1aac4:	sub	r1, fp, #16
   1aac8:	bl	1261c <coda_open@plt>
   1aacc:	str	r0, [sp, #20]
   1aad0:	movw	r0, #1
   1aad4:	bl	12664 <coda_set_option_use_mmap@plt>
   1aad8:	str	r0, [sp, #12]
   1aadc:	ldr	r0, [sp, #20]
   1aae0:	cmp	r0, #0
   1aae4:	beq	1aaf4 <print_yaml_data@@Base+0xa0>
   1aae8:	ldr	r0, [pc, #172]	; 1ab9c <print_yaml_data@@Base+0x148>
   1aaec:	ldr	r0, [pc, r0]
   1aaf0:	blx	r0
   1aaf4:	ldr	r1, [fp, #-16]
   1aaf8:	add	r0, sp, #24
   1aafc:	bl	1273c <coda_cursor_set_product@plt>
   1ab00:	cmp	r0, #0
   1ab04:	beq	1ab14 <print_yaml_data@@Base+0xc0>
   1ab08:	ldr	r0, [pc, #144]	; 1aba0 <print_yaml_data@@Base+0x14c>
   1ab0c:	ldr	r0, [pc, r0]
   1ab10:	blx	r0
   1ab14:	ldr	r0, [pc, #136]	; 1aba4 <print_yaml_data@@Base+0x150>
   1ab18:	ldr	r0, [pc, r0]
   1ab1c:	ldr	r0, [r0]
   1ab20:	movw	r1, #0
   1ab24:	cmp	r0, r1
   1ab28:	beq	1ab60 <print_yaml_data@@Base+0x10c>
   1ab2c:	ldr	r0, [pc, #116]	; 1aba8 <print_yaml_data@@Base+0x154>
   1ab30:	ldr	r0, [pc, r0]
   1ab34:	ldr	r1, [r0]
   1ab38:	add	r0, sp, #24
   1ab3c:	bl	12910 <coda_cursor_goto@plt>
   1ab40:	str	r0, [sp, #20]
   1ab44:	ldr	r0, [sp, #20]
   1ab48:	cmp	r0, #0
   1ab4c:	beq	1ab5c <print_yaml_data@@Base+0x108>
   1ab50:	ldr	r0, [pc, #84]	; 1abac <print_yaml_data@@Base+0x158>
   1ab54:	ldr	r0, [pc, r0]
   1ab58:	blx	r0
   1ab5c:	b	1ab60 <print_yaml_data@@Base+0x10c>
   1ab60:	movw	r0, #0
   1ab64:	bl	125c8 <coda_set_option_perform_boundary_checks@plt>
   1ab68:	add	lr, sp, #24
   1ab6c:	str	r0, [sp, #8]
   1ab70:	mov	r0, lr
   1ab74:	movw	r1, #0
   1ab78:	bl	1abb0 <print_yaml_data@@Base+0x15c>
   1ab7c:	ldr	r0, [fp, #-16]
   1ab80:	bl	128ec <coda_close@plt>
   1ab84:	str	r0, [sp, #4]
   1ab88:	sub	sp, fp, #8
   1ab8c:	pop	{r4, r5, fp, pc}
   1ab90:	andeq	r6, r1, r8, asr #14
   1ab94:			; <UNDEFINED> instruction: 0x000167b8
   1ab98:	strdeq	r6, [r1], -r8
   1ab9c:	andeq	r6, r1, ip, ror #13
   1aba0:	andeq	r6, r1, ip, asr #13
   1aba4:	andeq	r6, r1, r8, asr #13
   1aba8:			; <UNDEFINED> instruction: 0x000166b0
   1abac:	andeq	r6, r1, r4, lsl #13
   1abb0:	push	{r4, r5, fp, lr}
   1abb4:	add	fp, sp, #8
   1abb8:	sub	sp, sp, #448	; 0x1c0
   1abbc:	ldr	r2, [pc, #3052]	; 1b7b0 <print_yaml_data@@Base+0xd5c>
   1abc0:	add	r2, pc, r2
   1abc4:	str	r0, [fp, #-12]
   1abc8:	str	r1, [fp, #-16]
   1abcc:	movw	r0, #0
   1abd0:	str	r0, [fp, #-24]	; 0xffffffe8
   1abd4:	ldr	r0, [r2]
   1abd8:	cmp	r0, #0
   1abdc:	beq	1accc <print_yaml_data@@Base+0x278>
   1abe0:	ldr	r0, [fp, #-12]
   1abe4:	sub	r1, fp, #24
   1abe8:	bl	126dc <coda_cursor_has_attributes@plt>
   1abec:	cmp	r0, #0
   1abf0:	beq	1ac00 <print_yaml_data@@Base+0x1ac>
   1abf4:	ldr	r0, [pc, #3000]	; 1b7b4 <print_yaml_data@@Base+0xd60>
   1abf8:	ldr	r0, [pc, r0]
   1abfc:	blx	r0
   1ac00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ac04:	cmp	r0, #0
   1ac08:	beq	1acc8 <print_yaml_data@@Base+0x274>
   1ac0c:	ldr	r0, [fp, #-16]
   1ac10:	cmp	r0, #0
   1ac14:	beq	1ac2c <print_yaml_data@@Base+0x1d8>
   1ac18:	ldr	r0, [pc, #2968]	; 1b7b8 <print_yaml_data@@Base+0xd64>
   1ac1c:	add	r0, pc, r0
   1ac20:	bl	1b8ec <print_yaml_data@@Base+0xe98>
   1ac24:	str	r0, [sp, #156]	; 0x9c
   1ac28:	bl	1b954 <print_yaml_data@@Base+0xf00>
   1ac2c:	ldr	r0, [pc, #2952]	; 1b7bc <print_yaml_data@@Base+0xd68>
   1ac30:	add	r0, pc, r0
   1ac34:	bl	1b8ec <print_yaml_data@@Base+0xe98>
   1ac38:	ldr	lr, [fp, #-12]
   1ac3c:	str	r0, [sp, #152]	; 0x98
   1ac40:	mov	r0, lr
   1ac44:	bl	12850 <coda_cursor_goto_attributes@plt>
   1ac48:	cmp	r0, #0
   1ac4c:	beq	1ac5c <print_yaml_data@@Base+0x208>
   1ac50:	ldr	r0, [pc, #2920]	; 1b7c0 <print_yaml_data@@Base+0xd6c>
   1ac54:	ldr	r0, [pc, r0]
   1ac58:	blx	r0
   1ac5c:	ldr	r0, [pc, #2924]	; 1b7d0 <print_yaml_data@@Base+0xd7c>
   1ac60:	add	r0, pc, r0
   1ac64:	ldr	r1, [r0]
   1ac68:	add	r1, r1, #1
   1ac6c:	str	r1, [r0]
   1ac70:	ldr	r0, [fp, #-12]
   1ac74:	movw	r1, #1
   1ac78:	bl	1abb0 <print_yaml_data@@Base+0x15c>
   1ac7c:	ldr	r0, [pc, #2888]	; 1b7cc <print_yaml_data@@Base+0xd78>
   1ac80:	add	r0, pc, r0
   1ac84:	ldr	r1, [r0]
   1ac88:	mvn	lr, #0
   1ac8c:	add	r1, r1, lr
   1ac90:	str	r1, [r0]
   1ac94:	ldr	r0, [fp, #-12]
   1ac98:	bl	127b4 <coda_cursor_goto_parent@plt>
   1ac9c:	ldr	r1, [pc, #2852]	; 1b7c8 <print_yaml_data@@Base+0xd74>
   1aca0:	add	r1, pc, r1
   1aca4:	str	r0, [sp, #148]	; 0x94
   1aca8:	mov	r0, r1
   1acac:	bl	1ba08 <print_yaml_data@@Base+0xfb4>
   1acb0:	ldr	r1, [pc, #2828]	; 1b7c4 <print_yaml_data@@Base+0xd70>
   1acb4:	add	r1, pc, r1
   1acb8:	ldr	lr, [r1]
   1acbc:	add	lr, lr, #1
   1acc0:	str	lr, [r1]
   1acc4:	str	r0, [sp, #144]	; 0x90
   1acc8:	b	1accc <print_yaml_data@@Base+0x278>
   1accc:	ldr	r0, [fp, #-12]
   1acd0:	sub	r1, fp, #20
   1acd4:	bl	126e8 <coda_cursor_get_type_class@plt>
   1acd8:	cmp	r0, #0
   1acdc:	beq	1acec <print_yaml_data@@Base+0x298>
   1ace0:	ldr	r0, [pc, #2796]	; 1b7d4 <print_yaml_data@@Base+0xd80>
   1ace4:	ldr	r0, [pc, r0]
   1ace8:	blx	r0
   1acec:	ldr	r0, [fp, #-20]	; 0xffffffec
   1acf0:	cmp	r0, #6
   1acf4:	str	r0, [sp, #140]	; 0x8c
   1acf8:	bhi	1b784 <print_yaml_data@@Base+0xd30>
   1acfc:	add	r0, pc, #8
   1ad00:	ldr	r1, [sp, #140]	; 0x8c
   1ad04:	ldr	r2, [r0, r1, lsl #2]
   1ad08:	add	pc, r0, r2
   1ad0c:	andeq	r0, r0, ip, lsl r0
   1ad10:	andeq	r0, r0, r0, lsl #6
   1ad14:	muleq	r0, ip, r4
   1ad18:	muleq	r0, ip, r4
   1ad1c:	muleq	r0, ip, r4
   1ad20:	muleq	r0, ip, r4
   1ad24:	andeq	r0, r0, r8, ror #17
   1ad28:	ldr	r0, [fp, #-12]
   1ad2c:	sub	r1, fp, #28
   1ad30:	bl	12640 <coda_cursor_get_num_elements@plt>
   1ad34:	cmp	r0, #0
   1ad38:	beq	1ad48 <print_yaml_data@@Base+0x2f4>
   1ad3c:	ldr	r0, [pc, #2904]	; 1b89c <print_yaml_data@@Base+0xe48>
   1ad40:	ldr	r0, [pc, r0]
   1ad44:	blx	r0
   1ad48:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ad4c:	cmp	r0, #0
   1ad50:	ble	1aff8 <print_yaml_data@@Base+0x5a4>
   1ad54:	ldr	r0, [fp, #-16]
   1ad58:	cmp	r0, #0
   1ad5c:	beq	1ad70 <print_yaml_data@@Base+0x31c>
   1ad60:	ldr	r0, [pc, #2876]	; 1b8a4 <print_yaml_data@@Base+0xe50>
   1ad64:	add	r0, pc, r0
   1ad68:	bl	1b8ec <print_yaml_data@@Base+0xe98>
   1ad6c:	str	r0, [sp, #136]	; 0x88
   1ad70:	ldr	r0, [fp, #-12]
   1ad74:	sub	r1, fp, #32
   1ad78:	bl	126a0 <coda_cursor_get_type@plt>
   1ad7c:	cmp	r0, #0
   1ad80:	beq	1ad90 <print_yaml_data@@Base+0x33c>
   1ad84:	ldr	r0, [pc, #2844]	; 1b8a8 <print_yaml_data@@Base+0xe54>
   1ad88:	ldr	r0, [pc, r0]
   1ad8c:	blx	r0
   1ad90:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ad94:	sub	r1, fp, #36	; 0x24
   1ad98:	bl	1288c <coda_type_get_record_union_status@plt>
   1ad9c:	cmp	r0, #0
   1ada0:	beq	1adb0 <print_yaml_data@@Base+0x35c>
   1ada4:	ldr	r0, [pc, #2816]	; 1b8ac <print_yaml_data@@Base+0xe58>
   1ada8:	ldr	r0, [pc, r0]
   1adac:	blx	r0
   1adb0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1adb4:	cmp	r0, #0
   1adb8:	beq	1ae90 <print_yaml_data@@Base+0x43c>
   1adbc:	ldr	r0, [fp, #-12]
   1adc0:	sub	r1, fp, #40	; 0x28
   1adc4:	bl	1297c <coda_cursor_get_available_union_field_index@plt>
   1adc8:	cmp	r0, #0
   1adcc:	beq	1addc <print_yaml_data@@Base+0x388>
   1add0:	ldr	r0, [pc, #2804]	; 1b8cc <print_yaml_data@@Base+0xe78>
   1add4:	ldr	r0, [pc, r0]
   1add8:	blx	r0
   1addc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ade0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1ade4:	sub	r2, fp, #44	; 0x2c
   1ade8:	bl	129c4 <coda_type_get_record_field_name@plt>
   1adec:	cmp	r0, #0
   1adf0:	beq	1ae00 <print_yaml_data@@Base+0x3ac>
   1adf4:	ldr	r0, [pc, #2772]	; 1b8d0 <print_yaml_data@@Base+0xe7c>
   1adf8:	ldr	r0, [pc, r0]
   1adfc:	blx	r0
   1ae00:	ldr	r0, [fp, #-12]
   1ae04:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1ae08:	bl	12760 <coda_cursor_goto_record_field_by_index@plt>
   1ae0c:	cmp	r0, #0
   1ae10:	beq	1ae20 <print_yaml_data@@Base+0x3cc>
   1ae14:	ldr	r0, [pc, #2744]	; 1b8d4 <print_yaml_data@@Base+0xe80>
   1ae18:	ldr	r0, [pc, r0]
   1ae1c:	blx	r0
   1ae20:	ldr	r0, [fp, #-16]
   1ae24:	cmp	r0, #0
   1ae28:	beq	1ae30 <print_yaml_data@@Base+0x3dc>
   1ae2c:	bl	1b954 <print_yaml_data@@Base+0xf00>
   1ae30:	ldr	r0, [pc, #2728]	; 1b8e0 <print_yaml_data@@Base+0xe8c>
   1ae34:	add	r0, pc, r0
   1ae38:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1ae3c:	bl	1b8ec <print_yaml_data@@Base+0xe98>
   1ae40:	ldr	r1, [pc, #2708]	; 1b8dc <print_yaml_data@@Base+0xe88>
   1ae44:	add	r1, pc, r1
   1ae48:	ldr	lr, [r1]
   1ae4c:	add	lr, lr, #1
   1ae50:	str	lr, [r1]
   1ae54:	ldr	r1, [fp, #-12]
   1ae58:	str	r0, [sp, #132]	; 0x84
   1ae5c:	mov	r0, r1
   1ae60:	movw	r1, #1
   1ae64:	bl	1abb0 <print_yaml_data@@Base+0x15c>
   1ae68:	ldr	r0, [pc, #2664]	; 1b8d8 <print_yaml_data@@Base+0xe84>
   1ae6c:	add	r0, pc, r0
   1ae70:	ldr	r1, [r0]
   1ae74:	mvn	lr, #0
   1ae78:	add	r1, r1, lr
   1ae7c:	str	r1, [r0]
   1ae80:	ldr	r0, [fp, #-12]
   1ae84:	bl	127b4 <coda_cursor_goto_parent@plt>
   1ae88:	str	r0, [sp, #128]	; 0x80
   1ae8c:	b	1aff4 <print_yaml_data@@Base+0x5a0>
   1ae90:	movw	r0, #1
   1ae94:	str	r0, [fp, #-48]	; 0xffffffd0
   1ae98:	ldr	r0, [fp, #-12]
   1ae9c:	bl	12754 <coda_cursor_goto_first_record_field@plt>
   1aea0:	cmp	r0, #0
   1aea4:	beq	1aeb4 <print_yaml_data@@Base+0x460>
   1aea8:	ldr	r0, [pc, #2560]	; 1b8b0 <print_yaml_data@@Base+0xe5c>
   1aeac:	ldr	r0, [pc, r0]
   1aeb0:	blx	r0
   1aeb4:	movw	r0, #0
   1aeb8:	str	r0, [fp, #-40]	; 0xffffffd8
   1aebc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1aec0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1aec4:	cmp	r0, r1
   1aec8:	bge	1afe8 <print_yaml_data@@Base+0x594>
   1aecc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1aed0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1aed4:	sub	r2, fp, #56	; 0x38
   1aed8:	bl	125e0 <coda_type_get_record_field_hidden_status@plt>
   1aedc:	cmp	r0, #0
   1aee0:	beq	1aef0 <print_yaml_data@@Base+0x49c>
   1aee4:	ldr	r0, [pc, #2504]	; 1b8b4 <print_yaml_data@@Base+0xe60>
   1aee8:	ldr	r0, [pc, r0]
   1aeec:	blx	r0
   1aef0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1aef4:	cmp	r0, #0
   1aef8:	bne	1afa0 <print_yaml_data@@Base+0x54c>
   1aefc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1af00:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1af04:	sub	r2, fp, #52	; 0x34
   1af08:	bl	129c4 <coda_type_get_record_field_name@plt>
   1af0c:	cmp	r0, #0
   1af10:	beq	1af20 <print_yaml_data@@Base+0x4cc>
   1af14:	ldr	r0, [pc, #2460]	; 1b8b8 <print_yaml_data@@Base+0xe64>
   1af18:	ldr	r0, [pc, r0]
   1af1c:	blx	r0
   1af20:	ldr	r0, [fp, #-16]
   1af24:	cmp	r0, #0
   1af28:	bne	1af38 <print_yaml_data@@Base+0x4e4>
   1af2c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1af30:	cmp	r0, #0
   1af34:	bne	1af3c <print_yaml_data@@Base+0x4e8>
   1af38:	bl	1b954 <print_yaml_data@@Base+0xf00>
   1af3c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1af40:	cmp	r0, #0
   1af44:	beq	1af50 <print_yaml_data@@Base+0x4fc>
   1af48:	movw	r0, #0
   1af4c:	str	r0, [fp, #-48]	; 0xffffffd0
   1af50:	ldr	r0, [pc, #2412]	; 1b8c4 <print_yaml_data@@Base+0xe70>
   1af54:	add	r0, pc, r0
   1af58:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1af5c:	bl	1b8ec <print_yaml_data@@Base+0xe98>
   1af60:	ldr	r1, [pc, #2392]	; 1b8c0 <print_yaml_data@@Base+0xe6c>
   1af64:	add	r1, pc, r1
   1af68:	ldr	lr, [r1]
   1af6c:	add	lr, lr, #1
   1af70:	str	lr, [r1]
   1af74:	ldr	r1, [fp, #-12]
   1af78:	str	r0, [sp, #124]	; 0x7c
   1af7c:	mov	r0, r1
   1af80:	movw	r1, #1
   1af84:	bl	1abb0 <print_yaml_data@@Base+0x15c>
   1af88:	ldr	r0, [pc, #2348]	; 1b8bc <print_yaml_data@@Base+0xe68>
   1af8c:	add	r0, pc, r0
   1af90:	ldr	r1, [r0]
   1af94:	mvn	lr, #0
   1af98:	add	r1, r1, lr
   1af9c:	str	r1, [r0]
   1afa0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1afa4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1afa8:	sub	r1, r1, #1
   1afac:	cmp	r0, r1
   1afb0:	bge	1afd4 <print_yaml_data@@Base+0x580>
   1afb4:	ldr	r0, [fp, #-12]
   1afb8:	bl	12934 <coda_cursor_goto_next_record_field@plt>
   1afbc:	cmp	r0, #0
   1afc0:	beq	1afd0 <print_yaml_data@@Base+0x57c>
   1afc4:	ldr	r0, [pc, #2300]	; 1b8c8 <print_yaml_data@@Base+0xe74>
   1afc8:	ldr	r0, [pc, r0]
   1afcc:	blx	r0
   1afd0:	b	1afd4 <print_yaml_data@@Base+0x580>
   1afd4:	b	1afd8 <print_yaml_data@@Base+0x584>
   1afd8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1afdc:	add	r0, r0, #1
   1afe0:	str	r0, [fp, #-40]	; 0xffffffd8
   1afe4:	b	1aebc <print_yaml_data@@Base+0x468>
   1afe8:	ldr	r0, [fp, #-12]
   1afec:	bl	127b4 <coda_cursor_goto_parent@plt>
   1aff0:	str	r0, [sp, #120]	; 0x78
   1aff4:	b	1b008 <print_yaml_data@@Base+0x5b4>
   1aff8:	ldr	r0, [pc, #2208]	; 1b8a0 <print_yaml_data@@Base+0xe4c>
   1affc:	add	r0, pc, r0
   1b000:	bl	1b8ec <print_yaml_data@@Base+0xe98>
   1b004:	str	r0, [sp, #116]	; 0x74
   1b008:	b	1b784 <print_yaml_data@@Base+0xd30>
   1b00c:	sub	r2, fp, #88	; 0x58
   1b010:	ldr	r0, [fp, #-12]
   1b014:	sub	r1, fp, #92	; 0x5c
   1b018:	bl	128d4 <coda_cursor_get_array_dim@plt>
   1b01c:	cmp	r0, #0
   1b020:	beq	1b030 <print_yaml_data@@Base+0x5dc>
   1b024:	ldr	r0, [pc, #2124]	; 1b878 <print_yaml_data@@Base+0xe24>
   1b028:	ldr	r0, [pc, r0]
   1b02c:	blx	r0
   1b030:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1b034:	cmp	r0, #0
   1b038:	blt	1b194 <print_yaml_data@@Base+0x740>
   1b03c:	movw	r0, #1
   1b040:	str	r0, [fp, #-96]	; 0xffffffa0
   1b044:	movw	r0, #0
   1b048:	str	r0, [fp, #-100]	; 0xffffff9c
   1b04c:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1b050:	ldr	r1, [fp, #-92]	; 0xffffffa4
   1b054:	cmp	r0, r1
   1b058:	bge	1b088 <print_yaml_data@@Base+0x634>
   1b05c:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1b060:	sub	r1, fp, #88	; 0x58
   1b064:	add	r0, r1, r0, lsl #2
   1b068:	ldr	r0, [r0]
   1b06c:	ldr	r1, [fp, #-96]	; 0xffffffa0
   1b070:	mul	r0, r1, r0
   1b074:	str	r0, [fp, #-96]	; 0xffffffa0
   1b078:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1b07c:	add	r0, r0, #1
   1b080:	str	r0, [fp, #-100]	; 0xffffff9c
   1b084:	b	1b04c <print_yaml_data@@Base+0x5f8>
   1b088:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1b08c:	cmp	r0, #0
   1b090:	ble	1b180 <print_yaml_data@@Base+0x72c>
   1b094:	ldr	r0, [pc, #2024]	; 1b884 <print_yaml_data@@Base+0xe30>
   1b098:	add	r0, pc, r0
   1b09c:	bl	1b8ec <print_yaml_data@@Base+0xe98>
   1b0a0:	ldr	lr, [fp, #-12]
   1b0a4:	str	r0, [sp, #112]	; 0x70
   1b0a8:	mov	r0, lr
   1b0ac:	bl	12730 <coda_cursor_goto_first_array_element@plt>
   1b0b0:	cmp	r0, #0
   1b0b4:	beq	1b0c4 <print_yaml_data@@Base+0x670>
   1b0b8:	ldr	r0, [pc, #1992]	; 1b888 <print_yaml_data@@Base+0xe34>
   1b0bc:	ldr	r0, [pc, r0]
   1b0c0:	blx	r0
   1b0c4:	movw	r0, #0
   1b0c8:	str	r0, [fp, #-100]	; 0xffffff9c
   1b0cc:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1b0d0:	ldr	r1, [fp, #-96]	; 0xffffffa0
   1b0d4:	cmp	r0, r1
   1b0d8:	bge	1b170 <print_yaml_data@@Base+0x71c>
   1b0dc:	ldr	r0, [pc, #1968]	; 1b894 <print_yaml_data@@Base+0xe40>
   1b0e0:	add	r0, pc, r0
   1b0e4:	bl	1ba08 <print_yaml_data@@Base+0xfb4>
   1b0e8:	ldr	lr, [pc, #1952]	; 1b890 <print_yaml_data@@Base+0xe3c>
   1b0ec:	add	lr, pc, lr
   1b0f0:	ldr	r1, [lr]
   1b0f4:	add	r1, r1, #1
   1b0f8:	str	r1, [lr]
   1b0fc:	ldr	r1, [fp, #-12]
   1b100:	str	r0, [sp, #108]	; 0x6c
   1b104:	mov	r0, r1
   1b108:	movw	r1, #0
   1b10c:	bl	1abb0 <print_yaml_data@@Base+0x15c>
   1b110:	ldr	r0, [pc, #1908]	; 1b88c <print_yaml_data@@Base+0xe38>
   1b114:	add	r0, pc, r0
   1b118:	ldr	r1, [r0]
   1b11c:	mvn	lr, #0
   1b120:	add	r1, r1, lr
   1b124:	str	r1, [r0]
   1b128:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1b12c:	ldr	r1, [fp, #-96]	; 0xffffffa0
   1b130:	sub	r1, r1, #1
   1b134:	cmp	r0, r1
   1b138:	bge	1b15c <print_yaml_data@@Base+0x708>
   1b13c:	ldr	r0, [fp, #-12]
   1b140:	bl	12820 <coda_cursor_goto_next_array_element@plt>
   1b144:	cmp	r0, #0
   1b148:	beq	1b158 <print_yaml_data@@Base+0x704>
   1b14c:	ldr	r0, [pc, #1860]	; 1b898 <print_yaml_data@@Base+0xe44>
   1b150:	ldr	r0, [pc, r0]
   1b154:	blx	r0
   1b158:	b	1b15c <print_yaml_data@@Base+0x708>
   1b15c:	b	1b160 <print_yaml_data@@Base+0x70c>
   1b160:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1b164:	add	r0, r0, #1
   1b168:	str	r0, [fp, #-100]	; 0xffffff9c
   1b16c:	b	1b0cc <print_yaml_data@@Base+0x678>
   1b170:	ldr	r0, [fp, #-12]
   1b174:	bl	127b4 <coda_cursor_goto_parent@plt>
   1b178:	str	r0, [sp, #104]	; 0x68
   1b17c:	b	1b190 <print_yaml_data@@Base+0x73c>
   1b180:	ldr	r0, [pc, #1784]	; 1b880 <print_yaml_data@@Base+0xe2c>
   1b184:	add	r0, pc, r0
   1b188:	bl	1b8ec <print_yaml_data@@Base+0xe98>
   1b18c:	str	r0, [sp, #100]	; 0x64
   1b190:	b	1b1a4 <print_yaml_data@@Base+0x750>
   1b194:	ldr	r0, [pc, #1760]	; 1b87c <print_yaml_data@@Base+0xe28>
   1b198:	add	r0, pc, r0
   1b19c:	bl	1b8ec <print_yaml_data@@Base+0xe98>
   1b1a0:	str	r0, [sp, #96]	; 0x60
   1b1a4:	b	1b784 <print_yaml_data@@Base+0xd30>
   1b1a8:	ldr	r0, [fp, #-12]
   1b1ac:	sub	r1, fp, #104	; 0x68
   1b1b0:	bl	12778 <coda_cursor_get_read_type@plt>
   1b1b4:	cmp	r0, #0
   1b1b8:	beq	1b1c8 <print_yaml_data@@Base+0x774>
   1b1bc:	ldr	r0, [pc, #1600]	; 1b804 <print_yaml_data@@Base+0xdb0>
   1b1c0:	ldr	r0, [pc, r0]
   1b1c4:	blx	r0
   1b1c8:	ldr	r0, [fp, #-104]	; 0xffffff98
   1b1cc:	add	r0, r0, #1
   1b1d0:	cmp	r0, #13
   1b1d4:	str	r0, [sp, #92]	; 0x5c
   1b1d8:	bhi	1b5f0 <print_yaml_data@@Base+0xb9c>
   1b1dc:	add	r0, pc, #8
   1b1e0:	ldr	r1, [sp, #92]	; 0x5c
   1b1e4:	ldr	r2, [r0, r1, lsl #2]
   1b1e8:	add	pc, r0, r2
   1b1ec:	strdeq	r0, [r0], -r4
   1b1f0:	muleq	r0, r0, r2
   1b1f4:	andeq	r0, r0, r8, asr #5
   1b1f8:	muleq	r0, r0, r2
   1b1fc:	andeq	r0, r0, r8, asr #5
   1b200:	muleq	r0, r0, r2
   1b204:	andeq	r0, r0, r8, asr #5
   1b208:	andeq	r0, r0, r0, lsl #6
   1b20c:	andeq	r0, r0, r8, asr #6
   1b210:	muleq	r0, r0, r3
   1b214:	muleq	r0, r0, r3
   1b218:	andeq	r0, r0, r8, lsr r0
   1b21c:	andeq	r0, r0, ip, lsl #1
   1b220:	andeq	r0, r0, ip, ror #2
   1b224:	ldr	r0, [fp, #-12]
   1b228:	sub	r1, fp, #105	; 0x69
   1b22c:	bl	1285c <coda_cursor_read_char@plt>
   1b230:	cmp	r0, #0
   1b234:	beq	1b244 <print_yaml_data@@Base+0x7f0>
   1b238:	ldr	r0, [pc, #1580]	; 1b86c <print_yaml_data@@Base+0xe18>
   1b23c:	ldr	r0, [pc, r0]
   1b240:	blx	r0
   1b244:	ldr	r0, [pc, #1576]	; 1b874 <print_yaml_data@@Base+0xe20>
   1b248:	add	r0, pc, r0
   1b24c:	bl	1b8ec <print_yaml_data@@Base+0xe98>
   1b250:	sub	lr, fp, #105	; 0x69
   1b254:	str	r0, [sp, #88]	; 0x58
   1b258:	mov	r0, lr
   1b25c:	movw	r1, #1
   1b260:	bl	1ba74 <print_yaml_data@@Base+0x1020>
   1b264:	ldr	r0, [pc, #1540]	; 1b870 <print_yaml_data@@Base+0xe1c>
   1b268:	add	r0, pc, r0
   1b26c:	bl	1b8ec <print_yaml_data@@Base+0xe98>
   1b270:	str	r0, [sp, #84]	; 0x54
   1b274:	b	1b5f0 <print_yaml_data@@Base+0xb9c>
   1b278:	ldr	r0, [fp, #-12]
   1b27c:	sub	r1, fp, #112	; 0x70
   1b280:	bl	127e4 <coda_cursor_get_string_length@plt>
   1b284:	cmp	r0, #0
   1b288:	beq	1b298 <print_yaml_data@@Base+0x844>
   1b28c:	ldr	r0, [pc, #1468]	; 1b850 <print_yaml_data@@Base+0xdfc>
   1b290:	ldr	r0, [pc, r0]
   1b294:	blx	r0
   1b298:	ldr	r0, [fp, #-112]	; 0xffffff90
   1b29c:	add	r0, r0, #1
   1b2a0:	bl	12784 <malloc@plt>
   1b2a4:	str	r0, [fp, #-116]	; 0xffffff8c
   1b2a8:	ldr	r0, [fp, #-116]	; 0xffffff8c
   1b2ac:	movw	lr, #0
   1b2b0:	cmp	r0, lr
   1b2b4:	bne	1b2ec <print_yaml_data@@Base+0x898>
   1b2b8:	ldr	r0, [pc, #1432]	; 1b858 <print_yaml_data@@Base+0xe04>
   1b2bc:	add	r1, pc, r0
   1b2c0:	ldr	r0, [pc, #1428]	; 1b85c <print_yaml_data@@Base+0xe08>
   1b2c4:	add	r3, pc, r0
   1b2c8:	ldr	r0, [fp, #-112]	; 0xffffff90
   1b2cc:	add	r2, r0, #1
   1b2d0:	mvn	r0, #0
   1b2d4:	movw	ip, #361	; 0x169
   1b2d8:	str	ip, [sp]
   1b2dc:	bl	12610 <coda_set_error@plt>
   1b2e0:	ldr	r0, [pc, #1388]	; 1b854 <print_yaml_data@@Base+0xe00>
   1b2e4:	ldr	r0, [pc, r0]
   1b2e8:	blx	r0
   1b2ec:	ldr	r0, [fp, #-12]
   1b2f0:	ldr	r1, [fp, #-116]	; 0xffffff8c
   1b2f4:	ldr	r2, [fp, #-112]	; 0xffffff90
   1b2f8:	add	r2, r2, #1
   1b2fc:	bl	127a8 <coda_cursor_read_string@plt>
   1b300:	cmp	r0, #0
   1b304:	beq	1b314 <print_yaml_data@@Base+0x8c0>
   1b308:	ldr	r0, [pc, #1360]	; 1b860 <print_yaml_data@@Base+0xe0c>
   1b30c:	ldr	r0, [pc, r0]
   1b310:	blx	r0
   1b314:	ldr	r0, [pc, #1356]	; 1b868 <print_yaml_data@@Base+0xe14>
   1b318:	add	r0, pc, r0
   1b31c:	bl	1b8ec <print_yaml_data@@Base+0xe98>
   1b320:	ldr	lr, [fp, #-116]	; 0xffffff8c
   1b324:	ldr	r1, [fp, #-112]	; 0xffffff90
   1b328:	str	r0, [sp, #80]	; 0x50
   1b32c:	mov	r0, lr
   1b330:	bl	1ba74 <print_yaml_data@@Base+0x1020>
   1b334:	ldr	r0, [pc, #1320]	; 1b864 <print_yaml_data@@Base+0xe10>
   1b338:	add	r0, pc, r0
   1b33c:	ldr	r1, [fp, #-112]	; 0xffffff90
   1b340:	bl	1b8ec <print_yaml_data@@Base+0xe98>
   1b344:	ldr	r1, [fp, #-116]	; 0xffffff8c
   1b348:	str	r0, [sp, #76]	; 0x4c
   1b34c:	mov	r0, r1
   1b350:	bl	12658 <free@plt>
   1b354:	b	1b5f0 <print_yaml_data@@Base+0xb9c>
   1b358:	ldr	r0, [fp, #-12]
   1b35c:	sub	r1, fp, #128	; 0x80
   1b360:	bl	1294c <coda_cursor_get_bit_size@plt>
   1b364:	cmp	r0, #0
   1b368:	beq	1b378 <print_yaml_data@@Base+0x924>
   1b36c:	ldr	r0, [pc, #1220]	; 1b838 <print_yaml_data@@Base+0xde4>
   1b370:	ldr	r0, [pc, r0]
   1b374:	blx	r0
   1b378:	ldr	r0, [fp, #-128]	; 0xffffff80
   1b37c:	ldr	r1, [fp, #-124]	; 0xffffff84
   1b380:	lsr	r2, r0, #3
   1b384:	orr	r2, r2, r1, lsl #29
   1b388:	asr	r1, r1, #3
   1b38c:	and	r0, r0, #7
   1b390:	adds	r3, r2, #1
   1b394:	adc	ip, r1, #0
   1b398:	cmp	r0, #0
   1b39c:	movne	r2, r3
   1b3a0:	cmp	r0, #0
   1b3a4:	movne	r1, ip
   1b3a8:	str	r2, [fp, #-136]	; 0xffffff78
   1b3ac:	str	r1, [fp, #-132]	; 0xffffff7c
   1b3b0:	ldr	r0, [fp, #-136]	; 0xffffff78
   1b3b4:	bl	12784 <malloc@plt>
   1b3b8:	str	r0, [fp, #-140]	; 0xffffff74
   1b3bc:	ldr	r0, [fp, #-140]	; 0xffffff74
   1b3c0:	movw	r1, #0
   1b3c4:	cmp	r0, r1
   1b3c8:	bne	1b3fc <print_yaml_data@@Base+0x9a8>
   1b3cc:	ldr	r0, [pc, #1132]	; 1b840 <print_yaml_data@@Base+0xdec>
   1b3d0:	add	r1, pc, r0
   1b3d4:	ldr	r0, [pc, #1128]	; 1b844 <print_yaml_data@@Base+0xdf0>
   1b3d8:	add	r3, pc, r0
   1b3dc:	ldr	r2, [fp, #-136]	; 0xffffff78
   1b3e0:	mvn	r0, #0
   1b3e4:	movw	ip, #392	; 0x188
   1b3e8:	str	ip, [sp]
   1b3ec:	bl	12610 <coda_set_error@plt>
   1b3f0:	ldr	r0, [pc, #1092]	; 1b83c <print_yaml_data@@Base+0xde8>
   1b3f4:	ldr	r0, [pc, r0]
   1b3f8:	blx	r0
   1b3fc:	ldr	r0, [fp, #-12]
   1b400:	ldr	r1, [fp, #-140]	; 0xffffff74
   1b404:	ldr	r2, [fp, #-128]	; 0xffffff80
   1b408:	ldr	r3, [fp, #-124]	; 0xffffff84
   1b40c:	mov	ip, sp
   1b410:	str	r3, [ip, #4]
   1b414:	str	r2, [ip]
   1b418:	mov	r2, #0
   1b41c:	str	r2, [sp, #72]	; 0x48
   1b420:	ldr	r3, [sp, #72]	; 0x48
   1b424:	bl	129dc <coda_cursor_read_bits@plt>
   1b428:	cmp	r0, #0
   1b42c:	beq	1b43c <print_yaml_data@@Base+0x9e8>
   1b430:	ldr	r0, [pc, #1040]	; 1b848 <print_yaml_data@@Base+0xdf4>
   1b434:	ldr	r0, [pc, r0]
   1b438:	blx	r0
   1b43c:	ldr	r0, [pc, #1188]	; 1b8e8 <print_yaml_data@@Base+0xe94>
   1b440:	add	r0, pc, r0
   1b444:	bl	1b8ec <print_yaml_data@@Base+0xe98>
   1b448:	ldr	lr, [fp, #-140]	; 0xffffff74
   1b44c:	ldr	r1, [fp, #-136]	; 0xffffff78
   1b450:	str	r0, [sp, #68]	; 0x44
   1b454:	mov	r0, lr
   1b458:	bl	1ba74 <print_yaml_data@@Base+0x1020>
   1b45c:	ldr	r0, [pc, #1000]	; 1b84c <print_yaml_data@@Base+0xdf8>
   1b460:	add	r0, pc, r0
   1b464:	bl	1b8ec <print_yaml_data@@Base+0xe98>
   1b468:	ldr	r1, [fp, #-140]	; 0xffffff74
   1b46c:	str	r0, [sp, #64]	; 0x40
   1b470:	mov	r0, r1
   1b474:	bl	12658 <free@plt>
   1b478:	b	1b5f0 <print_yaml_data@@Base+0xb9c>
   1b47c:	ldr	r0, [fp, #-12]
   1b480:	sub	r1, fp, #144	; 0x90
   1b484:	bl	12988 <coda_cursor_read_int32@plt>
   1b488:	cmp	r0, #0
   1b48c:	beq	1b49c <print_yaml_data@@Base+0xa48>
   1b490:	ldr	r0, [pc, #920]	; 1b830 <print_yaml_data@@Base+0xddc>
   1b494:	ldr	r0, [pc, r0]
   1b498:	blx	r0
   1b49c:	ldr	r0, [pc, #912]	; 1b834 <print_yaml_data@@Base+0xde0>
   1b4a0:	add	r0, pc, r0
   1b4a4:	ldr	r1, [fp, #-144]	; 0xffffff70
   1b4a8:	bl	1b8ec <print_yaml_data@@Base+0xe98>
   1b4ac:	str	r0, [sp, #60]	; 0x3c
   1b4b0:	b	1b5f0 <print_yaml_data@@Base+0xb9c>
   1b4b4:	ldr	r0, [fp, #-12]
   1b4b8:	sub	r1, fp, #148	; 0x94
   1b4bc:	bl	1267c <coda_cursor_read_uint32@plt>
   1b4c0:	cmp	r0, #0
   1b4c4:	beq	1b4d4 <print_yaml_data@@Base+0xa80>
   1b4c8:	ldr	r0, [pc, #856]	; 1b828 <print_yaml_data@@Base+0xdd4>
   1b4cc:	ldr	r0, [pc, r0]
   1b4d0:	blx	r0
   1b4d4:	ldr	r0, [pc, #848]	; 1b82c <print_yaml_data@@Base+0xdd8>
   1b4d8:	add	r0, pc, r0
   1b4dc:	ldr	r1, [fp, #-148]	; 0xffffff6c
   1b4e0:	bl	1b8ec <print_yaml_data@@Base+0xe98>
   1b4e4:	str	r0, [sp, #56]	; 0x38
   1b4e8:	b	1b5f0 <print_yaml_data@@Base+0xb9c>
   1b4ec:	ldr	r0, [fp, #-12]
   1b4f0:	sub	r1, fp, #160	; 0xa0
   1b4f4:	bl	128f8 <coda_cursor_read_int64@plt>
   1b4f8:	cmp	r0, #0
   1b4fc:	beq	1b50c <print_yaml_data@@Base+0xab8>
   1b500:	ldr	r0, [pc, #792]	; 1b820 <print_yaml_data@@Base+0xdcc>
   1b504:	ldr	r0, [pc, r0]
   1b508:	blx	r0
   1b50c:	sub	r2, fp, #181	; 0xb5
   1b510:	ldr	r0, [fp, #-160]	; 0xffffff60
   1b514:	ldr	r1, [fp, #-156]	; 0xffffff64
   1b518:	bl	129e8 <coda_str64@plt>
   1b51c:	ldr	r0, [pc, #768]	; 1b824 <print_yaml_data@@Base+0xdd0>
   1b520:	add	r0, pc, r0
   1b524:	sub	r1, fp, #181	; 0xb5
   1b528:	bl	1b8ec <print_yaml_data@@Base+0xe98>
   1b52c:	str	r0, [sp, #52]	; 0x34
   1b530:	b	1b5f0 <print_yaml_data@@Base+0xb9c>
   1b534:	ldr	r0, [fp, #-12]
   1b538:	sub	r1, fp, #192	; 0xc0
   1b53c:	bl	127f0 <coda_cursor_read_uint64@plt>
   1b540:	cmp	r0, #0
   1b544:	beq	1b554 <print_yaml_data@@Base+0xb00>
   1b548:	ldr	r0, [pc, #712]	; 1b818 <print_yaml_data@@Base+0xdc4>
   1b54c:	ldr	r0, [pc, r0]
   1b550:	blx	r0
   1b554:	sub	r2, fp, #213	; 0xd5
   1b558:	ldr	r0, [fp, #-192]	; 0xffffff40
   1b55c:	ldr	r1, [fp, #-188]	; 0xffffff44
   1b560:	bl	1264c <coda_str64u@plt>
   1b564:	ldr	r0, [pc, #688]	; 1b81c <print_yaml_data@@Base+0xdc8>
   1b568:	add	r0, pc, r0
   1b56c:	sub	r1, fp, #213	; 0xd5
   1b570:	bl	1b8ec <print_yaml_data@@Base+0xe98>
   1b574:	str	r0, [sp, #48]	; 0x30
   1b578:	b	1b5f0 <print_yaml_data@@Base+0xb9c>
   1b57c:	ldr	r0, [fp, #-12]
   1b580:	sub	r1, fp, #224	; 0xe0
   1b584:	bl	127fc <coda_cursor_read_double@plt>
   1b588:	cmp	r0, #0
   1b58c:	beq	1b59c <print_yaml_data@@Base+0xb48>
   1b590:	ldr	r0, [pc, #628]	; 1b80c <print_yaml_data@@Base+0xdb8>
   1b594:	ldr	r0, [pc, r0]
   1b598:	blx	r0
   1b59c:	ldr	r0, [fp, #-104]	; 0xffffff98
   1b5a0:	cmp	r0, #8
   1b5a4:	bne	1b5c4 <print_yaml_data@@Base+0xb70>
   1b5a8:	ldr	r0, [pc, #612]	; 1b814 <print_yaml_data@@Base+0xdc0>
   1b5ac:	add	r0, pc, r0
   1b5b0:	vldr	d16, [fp, #-224]	; 0xffffff20
   1b5b4:	vmov	r2, r3, d16
   1b5b8:	bl	1b8ec <print_yaml_data@@Base+0xe98>
   1b5bc:	str	r0, [sp, #44]	; 0x2c
   1b5c0:	b	1b5dc <print_yaml_data@@Base+0xb88>
   1b5c4:	ldr	r0, [pc, #580]	; 1b810 <print_yaml_data@@Base+0xdbc>
   1b5c8:	add	r0, pc, r0
   1b5cc:	vldr	d16, [fp, #-224]	; 0xffffff20
   1b5d0:	vmov	r2, r3, d16
   1b5d4:	bl	1b8ec <print_yaml_data@@Base+0xe98>
   1b5d8:	str	r0, [sp, #40]	; 0x28
   1b5dc:	b	1b5f0 <print_yaml_data@@Base+0xb9c>
   1b5e0:	ldr	r0, [pc, #544]	; 1b808 <print_yaml_data@@Base+0xdb4>
   1b5e4:	add	r0, pc, r0
   1b5e8:	bl	1b8ec <print_yaml_data@@Base+0xe98>
   1b5ec:	str	r0, [sp, #36]	; 0x24
   1b5f0:	b	1b784 <print_yaml_data@@Base+0xd30>
   1b5f4:	ldr	r0, [fp, #-12]
   1b5f8:	add	r1, sp, #228	; 0xe4
   1b5fc:	bl	12724 <coda_cursor_get_special_type@plt>
   1b600:	cmp	r0, #0
   1b604:	beq	1b614 <print_yaml_data@@Base+0xbc0>
   1b608:	ldr	r0, [pc, #456]	; 1b7d8 <print_yaml_data@@Base+0xd84>
   1b60c:	ldr	r0, [pc, r0]
   1b610:	blx	r0
   1b614:	ldr	r0, [sp, #228]	; 0xe4
   1b618:	cmp	r0, #3
   1b61c:	str	r0, [sp, #32]
   1b620:	bhi	1b780 <print_yaml_data@@Base+0xd2c>
   1b624:	add	r0, pc, #8
   1b628:	ldr	r1, [sp, #32]
   1b62c:	ldr	r2, [r0, r1, lsl #2]
   1b630:	add	pc, r0, r2
   1b634:	andeq	r0, r0, r0, lsl r0
   1b638:	andeq	r0, r0, r4, lsr #32
   1b63c:	andeq	r0, r0, r0, rrx
   1b640:	andeq	r0, r0, r8, lsl #2
   1b644:	ldr	r0, [pc, #436]	; 1b800 <print_yaml_data@@Base+0xdac>
   1b648:	add	r0, pc, r0
   1b64c:	bl	1b8ec <print_yaml_data@@Base+0xe98>
   1b650:	str	r0, [sp, #28]
   1b654:	b	1b780 <print_yaml_data@@Base+0xd2c>
   1b658:	ldr	r0, [fp, #-12]
   1b65c:	add	r1, sp, #216	; 0xd8
   1b660:	bl	127fc <coda_cursor_read_double@plt>
   1b664:	cmp	r0, #0
   1b668:	beq	1b678 <print_yaml_data@@Base+0xc24>
   1b66c:	ldr	r0, [pc, #388]	; 1b7f8 <print_yaml_data@@Base+0xda4>
   1b670:	ldr	r0, [pc, r0]
   1b674:	blx	r0
   1b678:	ldr	r0, [pc, #380]	; 1b7fc <print_yaml_data@@Base+0xda8>
   1b67c:	add	r0, pc, r0
   1b680:	vldr	d16, [sp, #216]	; 0xd8
   1b684:	vmov	r2, r3, d16
   1b688:	bl	1b8ec <print_yaml_data@@Base+0xe98>
   1b68c:	str	r0, [sp, #24]
   1b690:	b	1b780 <print_yaml_data@@Base+0xd2c>
   1b694:	ldr	r0, [fp, #-12]
   1b698:	add	r1, sp, #208	; 0xd0
   1b69c:	bl	127fc <coda_cursor_read_double@plt>
   1b6a0:	cmp	r0, #0
   1b6a4:	beq	1b6b4 <print_yaml_data@@Base+0xc60>
   1b6a8:	ldr	r0, [pc, #308]	; 1b7e4 <print_yaml_data@@Base+0xd90>
   1b6ac:	ldr	r0, [pc, r0]
   1b6b0:	blx	r0
   1b6b4:	vldr	d0, [sp, #208]	; 0xd0
   1b6b8:	bl	12808 <coda_isNaN@plt>
   1b6bc:	cmp	r0, #0
   1b6c0:	bne	1b6d4 <print_yaml_data@@Base+0xc80>
   1b6c4:	vldr	d0, [sp, #208]	; 0xd0
   1b6c8:	bl	126b8 <coda_isInf@plt>
   1b6cc:	cmp	r0, #0
   1b6d0:	beq	1b6f0 <print_yaml_data@@Base+0xc9c>
   1b6d4:	ldr	r0, [pc, #280]	; 1b7f4 <print_yaml_data@@Base+0xda0>
   1b6d8:	add	r0, pc, r0
   1b6dc:	vldr	d16, [sp, #208]	; 0xd0
   1b6e0:	vmov	r2, r3, d16
   1b6e4:	bl	1b8ec <print_yaml_data@@Base+0xe98>
   1b6e8:	str	r0, [sp, #20]
   1b6ec:	b	1b738 <print_yaml_data@@Base+0xce4>
   1b6f0:	ldr	r0, [pc, #240]	; 1b7e8 <print_yaml_data@@Base+0xd94>
   1b6f4:	add	r0, pc, r0
   1b6f8:	add	r1, sp, #181	; 0xb5
   1b6fc:	vldr	d0, [sp, #208]	; 0xd0
   1b700:	bl	12634 <coda_time_double_to_string@plt>
   1b704:	cmp	r0, #0
   1b708:	beq	1b720 <print_yaml_data@@Base+0xccc>
   1b70c:	ldr	r0, [pc, #220]	; 1b7f0 <print_yaml_data@@Base+0xd9c>
   1b710:	add	r0, pc, r0
   1b714:	bl	1b8ec <print_yaml_data@@Base+0xe98>
   1b718:	str	r0, [sp, #16]
   1b71c:	b	1b734 <print_yaml_data@@Base+0xce0>
   1b720:	ldr	r0, [pc, #196]	; 1b7ec <print_yaml_data@@Base+0xd98>
   1b724:	add	r0, pc, r0
   1b728:	add	r1, sp, #181	; 0xb5
   1b72c:	bl	1b8ec <print_yaml_data@@Base+0xe98>
   1b730:	str	r0, [sp, #12]
   1b734:	b	1b738 <print_yaml_data@@Base+0xce4>
   1b738:	b	1b780 <print_yaml_data@@Base+0xd2c>
   1b73c:	ldr	r0, [fp, #-12]
   1b740:	add	r1, sp, #168	; 0xa8
   1b744:	add	r2, sp, #160	; 0xa0
   1b748:	bl	12898 <coda_cursor_read_complex_double_split@plt>
   1b74c:	cmp	r0, #0
   1b750:	beq	1b760 <print_yaml_data@@Base+0xd0c>
   1b754:	ldr	r0, [pc, #128]	; 1b7dc <print_yaml_data@@Base+0xd88>
   1b758:	ldr	r0, [pc, r0]
   1b75c:	blx	r0
   1b760:	ldr	r0, [pc, #120]	; 1b7e0 <print_yaml_data@@Base+0xd8c>
   1b764:	add	r0, pc, r0
   1b768:	vldr	d16, [sp, #168]	; 0xa8
   1b76c:	vldr	d17, [sp, #160]	; 0xa0
   1b770:	vmov	r2, r3, d16
   1b774:	vstr	d17, [sp]
   1b778:	bl	1b8ec <print_yaml_data@@Base+0xe98>
   1b77c:	str	r0, [sp, #8]
   1b780:	b	1b784 <print_yaml_data@@Base+0xd30>
   1b784:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b788:	cmp	r0, #0
   1b78c:	beq	1b7a8 <print_yaml_data@@Base+0xd54>
   1b790:	ldr	r0, [pc, #332]	; 1b8e4 <print_yaml_data@@Base+0xe90>
   1b794:	add	r0, pc, r0
   1b798:	ldr	r1, [r0]
   1b79c:	mvn	r2, #0
   1b7a0:	add	r1, r1, r2
   1b7a4:	str	r1, [r0]
   1b7a8:	sub	sp, fp, #8
   1b7ac:	pop	{r4, r5, fp, pc}
   1b7b0:	andeq	r6, r1, r4, ror #12
   1b7b4:	andeq	r6, r1, r0, ror #11
   1b7b8:	andeq	r5, r0, pc, lsl #26
   1b7bc:	andeq	r4, r0, sp, lsl fp
   1b7c0:	andeq	r6, r1, r4, lsl #11
   1b7c4:	andeq	r6, r1, r4, ror r5
   1b7c8:			; <UNDEFINED> instruction: 0x00004ab4
   1b7cc:	andeq	r6, r1, r8, lsr #11
   1b7d0:	andeq	r6, r1, r8, asr #11
   1b7d4:	strdeq	r6, [r1], -r4
   1b7d8:	andeq	r5, r1, ip, asr #23
   1b7dc:	andeq	r5, r1, r0, lsl #21
   1b7e0:	muleq	r0, fp, r9
   1b7e4:	andeq	r5, r1, ip, lsr #22
   1b7e8:	strdeq	r3, [r0], -r4
   1b7ec:	strheq	r4, [r0], -r5
   1b7f0:	strdeq	r3, [r0], -r5
   1b7f4:	andeq	r3, r0, r4, lsl #20
   1b7f8:	andeq	r5, r1, r8, ror #22
   1b7fc:	andeq	r3, r0, r0, ror #20
   1b800:	andeq	r4, r0, r4, lsl #3
   1b804:	andeq	r6, r1, r8, lsl r0
   1b808:	andeq	r4, r0, r8, ror #3
   1b80c:	andeq	r5, r1, r4, asr #24
   1b810:	andeq	r3, r0, r4, lsl fp
   1b814:	andeq	r3, r0, lr, ror #21
   1b818:	andeq	r5, r1, ip, lsl #25
   1b81c:	andeq	r4, r0, r1, ror r2
   1b820:	ldrdeq	r5, [r1], -r4
   1b824:			; <UNDEFINED> instruction: 0x000042b9
   1b828:	andeq	r5, r1, ip, lsl #26
   1b82c:			; <UNDEFINED> instruction: 0x00003bbd
   1b830:	andeq	r5, r1, r4, asr #26
   1b834:	strdeq	r3, [r0], -r0
   1b838:	andeq	r5, r1, r8, ror #28
   1b83c:	andeq	r5, r1, r4, ror #27
   1b840:	andeq	r3, r0, r0, lsl #22
   1b844:	muleq	r0, r3, r3
   1b848:	andeq	r5, r1, r4, lsr #27
   1b84c:	andeq	r5, r0, sl, asr #9
   1b850:	andeq	r5, r1, r8, asr #30
   1b854:	strdeq	r5, [r1], -r4
   1b858:	andeq	r3, r0, r4, lsl ip
   1b85c:	andeq	r4, r0, r7, lsr #9
   1b860:	andeq	r5, r1, ip, asr #29
   1b864:	strdeq	r5, [r0], -r2
   1b868:	andeq	r4, r0, r4, lsl r3
   1b86c:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   1b870:	andeq	r5, r0, r2, asr #13
   1b874:	andeq	r4, r0, r4, ror #7
   1b878:			; <UNDEFINED> instruction: 0x000161b0
   1b87c:	andeq	r4, r0, pc, asr #11
   1b880:	andeq	r4, r0, r3, ror #11
   1b884:	muleq	r0, r3, r8
   1b888:	andeq	r6, r1, ip, lsl r1
   1b88c:	andeq	r6, r1, r4, lsl r1
   1b890:	andeq	r6, r1, ip, lsr r1
   1b894:	andeq	r4, r0, r4, lsl #13
   1b898:	andeq	r6, r1, r8, lsl #1
   1b89c:	muleq	r1, r8, r4
   1b8a0:	andeq	r4, r0, r4, ror #14
   1b8a4:	andeq	r5, r0, r7, asr #23
   1b8a8:	andeq	r6, r1, r0, asr r4
   1b8ac:	andeq	r6, r1, r0, lsr r4
   1b8b0:	andeq	r6, r1, ip, lsr #6
   1b8b4:	strdeq	r6, [r1], -r0
   1b8b8:	andeq	r6, r1, r0, asr #5
   1b8bc:	muleq	r1, ip, r2
   1b8c0:	andeq	r6, r1, r4, asr #5
   1b8c4:	andeq	r4, r0, r7, lsl #16
   1b8c8:	andeq	r6, r1, r0, lsl r2
   1b8cc:	andeq	r6, r1, r4, lsl #8
   1b8d0:	andeq	r6, r1, r0, ror #7
   1b8d4:	andeq	r6, r1, r0, asr #7
   1b8d8:			; <UNDEFINED> instruction: 0x000163bc
   1b8dc:	andeq	r6, r1, r4, ror #7
   1b8e0:	andeq	r4, r0, r7, lsr #18
   1b8e4:	muleq	r1, r4, sl
   1b8e8:	andeq	r4, r0, ip, ror #3
   1b8ec:	sub	sp, sp, #12
   1b8f0:	push	{fp, lr}
   1b8f4:	mov	fp, sp
   1b8f8:	sub	sp, sp, #20
   1b8fc:	str	r3, [fp, #16]
   1b900:	str	r2, [fp, #12]
   1b904:	str	r1, [fp, #8]
   1b908:	str	r0, [fp, #-4]
   1b90c:	add	r0, fp, #8
   1b910:	str	r0, [sp, #8]
   1b914:	ldr	r0, [pc, #52]	; 1b950 <print_yaml_data@@Base+0xefc>
   1b918:	ldr	r0, [pc, r0]
   1b91c:	ldr	r0, [r0]
   1b920:	ldr	r1, [fp, #-4]
   1b924:	ldr	r2, [sp, #8]
   1b928:	bl	12904 <vfprintf@plt>
   1b92c:	str	r0, [fp, #-8]
   1b930:	add	r0, sp, #8
   1b934:	ldr	r1, [fp, #-8]
   1b938:	str	r0, [sp, #4]
   1b93c:	mov	r0, r1
   1b940:	mov	sp, fp
   1b944:	pop	{fp, lr}
   1b948:	add	sp, sp, #12
   1b94c:	bx	lr
   1b950:	andeq	r5, r1, r0, lsr #17
   1b954:	push	{fp, lr}
   1b958:	mov	fp, sp
   1b95c:	sub	sp, sp, #8
   1b960:	ldr	r0, [pc, #132]	; 1b9ec <print_yaml_data@@Base+0xf98>
   1b964:	add	r0, pc, r0
   1b968:	ldr	r0, [r0]
   1b96c:	cmp	r0, #0
   1b970:	blt	1b978 <print_yaml_data@@Base+0xf24>
   1b974:	b	1b998 <print_yaml_data@@Base+0xf44>
   1b978:	ldr	r0, [pc, #112]	; 1b9f0 <print_yaml_data@@Base+0xf9c>
   1b97c:	add	r0, pc, r0
   1b980:	ldr	r1, [pc, #108]	; 1b9f4 <print_yaml_data@@Base+0xfa0>
   1b984:	add	r1, pc, r1
   1b988:	ldr	r2, [pc, #104]	; 1b9f8 <print_yaml_data@@Base+0xfa4>
   1b98c:	add	r3, pc, r2
   1b990:	movw	r2, #44	; 0x2c
   1b994:	bl	129f4 <__assert_fail@plt>
   1b998:	ldr	r0, [pc, #92]	; 1b9fc <print_yaml_data@@Base+0xfa8>
   1b99c:	add	r0, pc, r0
   1b9a0:	ldr	r0, [r0]
   1b9a4:	str	r0, [sp, #4]
   1b9a8:	ldr	r0, [sp, #4]
   1b9ac:	cmp	r0, #0
   1b9b0:	ble	1b9e4 <print_yaml_data@@Base+0xf90>
   1b9b4:	ldr	r0, [pc, #68]	; 1ba00 <print_yaml_data@@Base+0xfac>
   1b9b8:	add	r1, pc, r0
   1b9bc:	ldr	r0, [pc, #64]	; 1ba04 <print_yaml_data@@Base+0xfb0>
   1b9c0:	ldr	r0, [pc, r0]
   1b9c4:	ldr	r0, [r0]
   1b9c8:	bl	12814 <fprintf@plt>
   1b9cc:	str	r0, [sp]
   1b9d0:	ldr	r0, [sp, #4]
   1b9d4:	mvn	r1, #0
   1b9d8:	add	r0, r0, r1
   1b9dc:	str	r0, [sp, #4]
   1b9e0:	b	1b9a8 <print_yaml_data@@Base+0xf54>
   1b9e4:	mov	sp, fp
   1b9e8:	pop	{fp, pc}
   1b9ec:	andeq	r5, r1, r4, asr #17
   1b9f0:	andeq	r3, r0, sp, lsl #15
   1b9f4:	andeq	r3, r0, r7, ror #27
   1b9f8:	andeq	r3, r0, r9, lsl #15
   1b9fc:	andeq	r5, r1, ip, lsl #17
   1ba00:	andeq	r3, r0, r7, lsl r6
   1ba04:	strdeq	r5, [r1], -r8
   1ba08:	sub	sp, sp, #12
   1ba0c:	push	{fp, lr}
   1ba10:	mov	fp, sp
   1ba14:	sub	sp, sp, #20
   1ba18:	str	r3, [fp, #16]
   1ba1c:	str	r2, [fp, #12]
   1ba20:	str	r1, [fp, #8]
   1ba24:	str	r0, [fp, #-4]
   1ba28:	bl	1b954 <print_yaml_data@@Base+0xf00>
   1ba2c:	add	r0, fp, #8
   1ba30:	str	r0, [sp, #8]
   1ba34:	ldr	r0, [pc, #52]	; 1ba70 <print_yaml_data@@Base+0x101c>
   1ba38:	ldr	r0, [pc, r0]
   1ba3c:	ldr	r0, [r0]
   1ba40:	ldr	r1, [fp, #-4]
   1ba44:	ldr	r2, [sp, #8]
   1ba48:	bl	12904 <vfprintf@plt>
   1ba4c:	str	r0, [fp, #-8]
   1ba50:	add	r0, sp, #8
   1ba54:	ldr	r1, [fp, #-8]
   1ba58:	str	r0, [sp, #4]
   1ba5c:	mov	r0, r1
   1ba60:	mov	sp, fp
   1ba64:	pop	{fp, lr}
   1ba68:	add	sp, sp, #12
   1ba6c:	bx	lr
   1ba70:	andeq	r5, r1, r0, lsl #15
   1ba74:	push	{fp, lr}
   1ba78:	mov	fp, sp
   1ba7c:	sub	sp, sp, #56	; 0x38
   1ba80:	str	r0, [fp, #-4]
   1ba84:	str	r1, [fp, #-8]
   1ba88:	movw	r0, #0
   1ba8c:	str	r0, [fp, #-12]
   1ba90:	ldr	r0, [fp, #-12]
   1ba94:	ldr	r1, [fp, #-8]
   1ba98:	cmp	r0, r1
   1ba9c:	bge	1bc10 <print_yaml_data@@Base+0x11bc>
   1baa0:	ldr	r0, [fp, #-4]
   1baa4:	ldr	r1, [fp, #-12]
   1baa8:	ldrb	r0, [r0, r1]
   1baac:	strb	r0, [fp, #-13]
   1bab0:	ldrb	r0, [fp, #-13]
   1bab4:	mov	r1, r0
   1bab8:	cmp	r0, #8
   1babc:	str	r1, [fp, #-20]	; 0xffffffec
   1bac0:	beq	1bb28 <print_yaml_data@@Base+0x10d4>
   1bac4:	b	1bac8 <print_yaml_data@@Base+0x1074>
   1bac8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bacc:	cmp	r0, #9
   1bad0:	beq	1bb78 <print_yaml_data@@Base+0x1124>
   1bad4:	b	1bad8 <print_yaml_data@@Base+0x1084>
   1bad8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1badc:	cmp	r0, #10
   1bae0:	beq	1bb50 <print_yaml_data@@Base+0x10fc>
   1bae4:	b	1bae8 <print_yaml_data@@Base+0x1094>
   1bae8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1baec:	cmp	r0, #12
   1baf0:	beq	1bb3c <print_yaml_data@@Base+0x10e8>
   1baf4:	b	1baf8 <print_yaml_data@@Base+0x10a4>
   1baf8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bafc:	cmp	r0, #13
   1bb00:	beq	1bb64 <print_yaml_data@@Base+0x1110>
   1bb04:	b	1bb08 <print_yaml_data@@Base+0x10b4>
   1bb08:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bb0c:	cmp	r0, #34	; 0x22
   1bb10:	beq	1bb8c <print_yaml_data@@Base+0x1138>
   1bb14:	b	1bb18 <print_yaml_data@@Base+0x10c4>
   1bb18:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bb1c:	cmp	r0, #92	; 0x5c
   1bb20:	beq	1bba0 <print_yaml_data@@Base+0x114c>
   1bb24:	b	1bbb4 <print_yaml_data@@Base+0x1160>
   1bb28:	ldr	r0, [pc, #256]	; 1bc30 <print_yaml_data@@Base+0x11dc>
   1bb2c:	add	r0, pc, r0
   1bb30:	bl	1b8ec <print_yaml_data@@Base+0xe98>
   1bb34:	str	r0, [fp, #-24]	; 0xffffffe8
   1bb38:	b	1bbfc <print_yaml_data@@Base+0x11a8>
   1bb3c:	ldr	r0, [pc, #232]	; 1bc2c <print_yaml_data@@Base+0x11d8>
   1bb40:	add	r0, pc, r0
   1bb44:	bl	1b8ec <print_yaml_data@@Base+0xe98>
   1bb48:	str	r0, [sp, #28]
   1bb4c:	b	1bbfc <print_yaml_data@@Base+0x11a8>
   1bb50:	ldr	r0, [pc, #208]	; 1bc28 <print_yaml_data@@Base+0x11d4>
   1bb54:	add	r0, pc, r0
   1bb58:	bl	1b8ec <print_yaml_data@@Base+0xe98>
   1bb5c:	str	r0, [sp, #24]
   1bb60:	b	1bbfc <print_yaml_data@@Base+0x11a8>
   1bb64:	ldr	r0, [pc, #184]	; 1bc24 <print_yaml_data@@Base+0x11d0>
   1bb68:	add	r0, pc, r0
   1bb6c:	bl	1b8ec <print_yaml_data@@Base+0xe98>
   1bb70:	str	r0, [sp, #20]
   1bb74:	b	1bbfc <print_yaml_data@@Base+0x11a8>
   1bb78:	ldr	r0, [pc, #160]	; 1bc20 <print_yaml_data@@Base+0x11cc>
   1bb7c:	add	r0, pc, r0
   1bb80:	bl	1b8ec <print_yaml_data@@Base+0xe98>
   1bb84:	str	r0, [sp, #16]
   1bb88:	b	1bbfc <print_yaml_data@@Base+0x11a8>
   1bb8c:	ldr	r0, [pc, #136]	; 1bc1c <print_yaml_data@@Base+0x11c8>
   1bb90:	add	r0, pc, r0
   1bb94:	bl	1b8ec <print_yaml_data@@Base+0xe98>
   1bb98:	str	r0, [sp, #12]
   1bb9c:	b	1bbfc <print_yaml_data@@Base+0x11a8>
   1bba0:	ldr	r0, [pc, #112]	; 1bc18 <print_yaml_data@@Base+0x11c4>
   1bba4:	add	r0, pc, r0
   1bba8:	bl	1b8ec <print_yaml_data@@Base+0xe98>
   1bbac:	str	r0, [sp, #8]
   1bbb0:	b	1bbfc <print_yaml_data@@Base+0x11a8>
   1bbb4:	ldrb	r0, [fp, #-13]
   1bbb8:	cmp	r0, #32
   1bbbc:	blt	1bbe4 <print_yaml_data@@Base+0x1190>
   1bbc0:	ldrb	r0, [fp, #-13]
   1bbc4:	cmp	r0, #126	; 0x7e
   1bbc8:	bgt	1bbe4 <print_yaml_data@@Base+0x1190>
   1bbcc:	ldr	r0, [pc, #100]	; 1bc38 <print_yaml_data@@Base+0x11e4>
   1bbd0:	add	r0, pc, r0
   1bbd4:	ldrb	r1, [fp, #-13]
   1bbd8:	bl	1b8ec <print_yaml_data@@Base+0xe98>
   1bbdc:	str	r0, [sp, #4]
   1bbe0:	b	1bbf8 <print_yaml_data@@Base+0x11a4>
   1bbe4:	ldr	r0, [pc, #72]	; 1bc34 <print_yaml_data@@Base+0x11e0>
   1bbe8:	add	r0, pc, r0
   1bbec:	ldrb	r1, [fp, #-13]
   1bbf0:	bl	1b8ec <print_yaml_data@@Base+0xe98>
   1bbf4:	str	r0, [sp]
   1bbf8:	b	1bbfc <print_yaml_data@@Base+0x11a8>
   1bbfc:	b	1bc00 <print_yaml_data@@Base+0x11ac>
   1bc00:	ldr	r0, [fp, #-12]
   1bc04:	add	r0, r0, #1
   1bc08:	str	r0, [fp, #-12]
   1bc0c:	b	1ba90 <print_yaml_data@@Base+0x103c>
   1bc10:	mov	sp, fp
   1bc14:	pop	{fp, pc}
   1bc18:	ldrdeq	r3, [r0], -r8
   1bc1c:	muleq	r0, fp, sl
   1bc20:	strdeq	r3, [r0], -r1
   1bc24:	andeq	r3, r0, r1, lsl r4
   1bc28:	andeq	r3, r0, ip, lsl r4
   1bc2c:	andeq	r3, r0, r6, lsr r4
   1bc30:	andeq	r3, r0, lr, lsr r4
   1bc34:	andeq	r3, r0, r6, asr #20
   1bc38:	strdeq	r3, [r0], -sp

0001bc3c <handle_coda_error@@Base>:
   1bc3c:	push	{fp, lr}
   1bc40:	mov	fp, sp
   1bc44:	sub	sp, sp, #16
   1bc48:	ldr	r0, [pc, #96]	; 1bcb0 <handle_coda_error@@Base+0x74>
   1bc4c:	ldr	r0, [pc, r0]
   1bc50:	ldr	r0, [r0]
   1bc54:	str	r0, [fp, #-4]
   1bc58:	bl	129ac <coda_get_errno@plt>
   1bc5c:	ldr	r0, [r0]
   1bc60:	bl	12964 <coda_errno_to_string@plt>
   1bc64:	ldr	lr, [pc, #64]	; 1bcac <handle_coda_error@@Base+0x70>
   1bc68:	add	r1, pc, lr
   1bc6c:	ldr	lr, [fp, #-4]
   1bc70:	str	r0, [sp, #8]
   1bc74:	mov	r0, lr
   1bc78:	ldr	r2, [sp, #8]
   1bc7c:	bl	12814 <fprintf@plt>
   1bc80:	ldr	r1, [pc, #32]	; 1bca8 <handle_coda_error@@Base+0x6c>
   1bc84:	ldr	r1, [pc, r1]
   1bc88:	ldr	r1, [r1]
   1bc8c:	str	r0, [sp, #4]
   1bc90:	mov	r0, r1
   1bc94:	bl	12628 <fflush@plt>
   1bc98:	movw	r1, #1
   1bc9c:	str	r0, [sp]
   1bca0:	mov	r0, r1
   1bca4:	bl	127cc <exit@plt>
   1bca8:	andeq	r5, r1, ip, lsr #10
   1bcac:	andeq	r3, r0, sl, ror #22
   1bcb0:	andeq	r5, r1, r4, ror #10

0001bcb4 <main@@Base>:
   1bcb4:	push	{fp, lr}
   1bcb8:	mov	fp, sp
   1bcbc:	sub	sp, sp, #40	; 0x28
   1bcc0:	movw	r2, #0
   1bcc4:	str	r2, [fp, #-4]
   1bcc8:	str	r0, [fp, #-8]
   1bccc:	str	r1, [fp, #-12]
   1bcd0:	ldr	r0, [fp, #-8]
   1bcd4:	cmp	r0, #1
   1bcd8:	beq	1bd14 <main@@Base+0x60>
   1bcdc:	ldr	r0, [fp, #-12]
   1bce0:	ldr	r0, [r0, #4]
   1bce4:	ldr	r1, [pc, #892]	; 1c068 <main@@Base+0x3b4>
   1bce8:	add	r1, pc, r1
   1bcec:	bl	125d4 <strcmp@plt>
   1bcf0:	cmp	r0, #0
   1bcf4:	beq	1bd14 <main@@Base+0x60>
   1bcf8:	ldr	r0, [fp, #-12]
   1bcfc:	ldr	r0, [r0, #4]
   1bd00:	ldr	r1, [pc, #868]	; 1c06c <main@@Base+0x3b8>
   1bd04:	add	r1, pc, r1
   1bd08:	bl	125d4 <strcmp@plt>
   1bd0c:	cmp	r0, #0
   1bd10:	bne	1bd20 <main@@Base+0x6c>
   1bd14:	bl	1e0cc <main@@Base+0x2418>
   1bd18:	movw	r0, #0
   1bd1c:	bl	127cc <exit@plt>
   1bd20:	ldr	r0, [fp, #-12]
   1bd24:	ldr	r0, [r0, #4]
   1bd28:	ldr	r1, [pc, #832]	; 1c070 <main@@Base+0x3bc>
   1bd2c:	add	r1, pc, r1
   1bd30:	bl	125d4 <strcmp@plt>
   1bd34:	cmp	r0, #0
   1bd38:	beq	1bd58 <main@@Base+0xa4>
   1bd3c:	ldr	r0, [fp, #-12]
   1bd40:	ldr	r0, [r0, #4]
   1bd44:	ldr	r1, [pc, #808]	; 1c074 <main@@Base+0x3c0>
   1bd48:	add	r1, pc, r1
   1bd4c:	bl	125d4 <strcmp@plt>
   1bd50:	cmp	r0, #0
   1bd54:	bne	1bd64 <main@@Base+0xb0>
   1bd58:	bl	1ebec <main@@Base+0x2f38>
   1bd5c:	movw	r0, #0
   1bd60:	bl	127cc <exit@plt>
   1bd64:	movw	r0, #1
   1bd68:	str	r0, [fp, #-16]
   1bd6c:	ldr	r0, [fp, #-16]
   1bd70:	add	r0, r0, #1
   1bd74:	ldr	r1, [fp, #-8]
   1bd78:	cmp	r0, r1
   1bd7c:	bge	1bdd0 <main@@Base+0x11c>
   1bd80:	ldr	r0, [fp, #-12]
   1bd84:	ldr	r1, [fp, #-16]
   1bd88:	add	r0, r0, r1, lsl #2
   1bd8c:	ldr	r0, [r0]
   1bd90:	ldr	r1, [pc, #736]	; 1c078 <main@@Base+0x3c4>
   1bd94:	add	r1, pc, r1
   1bd98:	bl	125d4 <strcmp@plt>
   1bd9c:	cmp	r0, #0
   1bda0:	bne	1bdd0 <main@@Base+0x11c>
   1bda4:	ldr	r0, [fp, #-12]
   1bda8:	ldr	r1, [fp, #-16]
   1bdac:	add	r1, r1, #1
   1bdb0:	add	r0, r0, r1, lsl #2
   1bdb4:	ldr	r0, [r0]
   1bdb8:	bl	126f4 <coda_set_definition_path@plt>
   1bdbc:	ldr	r1, [fp, #-16]
   1bdc0:	add	r1, r1, #2
   1bdc4:	str	r1, [fp, #-16]
   1bdc8:	str	r0, [sp, #16]
   1bdcc:	b	1be44 <main@@Base+0x190>
   1bdd0:	ldr	r0, [pc, #636]	; 1c054 <main@@Base+0x3a0>
   1bdd4:	add	r0, pc, r0
   1bdd8:	str	r0, [sp, #20]
   1bddc:	ldr	r0, [fp, #-12]
   1bde0:	ldr	r0, [r0]
   1bde4:	ldr	r2, [sp, #20]
   1bde8:	movw	r1, #0
   1bdec:	bl	12670 <coda_set_definition_path_conditional@plt>
   1bdf0:	cmp	r0, #0
   1bdf4:	beq	1be40 <main@@Base+0x18c>
   1bdf8:	ldr	r0, [pc, #604]	; 1c05c <main@@Base+0x3a8>
   1bdfc:	ldr	r0, [pc, r0]
   1be00:	ldr	r0, [r0]
   1be04:	str	r0, [sp, #12]
   1be08:	bl	129ac <coda_get_errno@plt>
   1be0c:	ldr	r0, [r0]
   1be10:	bl	12964 <coda_errno_to_string@plt>
   1be14:	ldr	lr, [pc, #572]	; 1c058 <main@@Base+0x3a4>
   1be18:	add	r1, pc, lr
   1be1c:	ldr	lr, [sp, #12]
   1be20:	str	r0, [sp, #8]
   1be24:	mov	r0, lr
   1be28:	ldr	r2, [sp, #8]
   1be2c:	bl	12814 <fprintf@plt>
   1be30:	movw	r1, #1
   1be34:	str	r0, [sp, #4]
   1be38:	mov	r0, r1
   1be3c:	bl	127cc <exit@plt>
   1be40:	b	1be44 <main@@Base+0x190>
   1be44:	ldr	r0, [fp, #-12]
   1be48:	ldr	r1, [fp, #-16]
   1be4c:	add	r0, r0, r1, lsl #2
   1be50:	ldr	r0, [r0]
   1be54:	ldr	r1, [pc, #544]	; 1c07c <main@@Base+0x3c8>
   1be58:	add	r1, pc, r1
   1be5c:	bl	125d4 <strcmp@plt>
   1be60:	cmp	r0, #0
   1be64:	bne	1bea0 <main@@Base+0x1ec>
   1be68:	ldr	r0, [pc, #528]	; 1c080 <main@@Base+0x3cc>
   1be6c:	ldr	r0, [pc, r0]
   1be70:	mov	r1, #0
   1be74:	str	r1, [r0]
   1be78:	ldr	r0, [fp, #-16]
   1be7c:	add	r0, r0, #1
   1be80:	str	r0, [fp, #-16]
   1be84:	ldr	r0, [fp, #-8]
   1be88:	ldr	r1, [fp, #-16]
   1be8c:	sub	r0, r0, r1
   1be90:	ldr	r2, [fp, #-12]
   1be94:	add	r1, r2, r1, lsl #2
   1be98:	bl	1c0a4 <main@@Base+0x3f0>
   1be9c:	b	1c048 <main@@Base+0x394>
   1bea0:	ldr	r0, [fp, #-12]
   1bea4:	ldr	r1, [fp, #-16]
   1bea8:	add	r0, r0, r1, lsl #2
   1beac:	ldr	r0, [r0]
   1beb0:	ldr	r1, [pc, #460]	; 1c084 <main@@Base+0x3d0>
   1beb4:	add	r1, pc, r1
   1beb8:	bl	125d4 <strcmp@plt>
   1bebc:	cmp	r0, #0
   1bec0:	bne	1befc <main@@Base+0x248>
   1bec4:	ldr	r0, [pc, #444]	; 1c088 <main@@Base+0x3d4>
   1bec8:	ldr	r0, [pc, r0]
   1becc:	mov	r1, #1
   1bed0:	str	r1, [r0]
   1bed4:	ldr	r0, [fp, #-16]
   1bed8:	add	r0, r0, #1
   1bedc:	str	r0, [fp, #-16]
   1bee0:	ldr	r0, [fp, #-8]
   1bee4:	ldr	r1, [fp, #-16]
   1bee8:	sub	r0, r0, r1
   1beec:	ldr	r2, [fp, #-12]
   1bef0:	add	r1, r2, r1, lsl #2
   1bef4:	bl	1c6c0 <main@@Base+0xa0c>
   1bef8:	b	1c044 <main@@Base+0x390>
   1befc:	ldr	r0, [fp, #-12]
   1bf00:	ldr	r1, [fp, #-16]
   1bf04:	add	r0, r0, r1, lsl #2
   1bf08:	ldr	r0, [r0]
   1bf0c:	ldr	r1, [pc, #376]	; 1c08c <main@@Base+0x3d8>
   1bf10:	add	r1, pc, r1
   1bf14:	bl	125d4 <strcmp@plt>
   1bf18:	cmp	r0, #0
   1bf1c:	bne	1bf58 <main@@Base+0x2a4>
   1bf20:	ldr	r0, [pc, #360]	; 1c090 <main@@Base+0x3dc>
   1bf24:	ldr	r0, [pc, r0]
   1bf28:	mov	r1, #3
   1bf2c:	str	r1, [r0]
   1bf30:	ldr	r0, [fp, #-16]
   1bf34:	add	r0, r0, #1
   1bf38:	str	r0, [fp, #-16]
   1bf3c:	ldr	r0, [fp, #-8]
   1bf40:	ldr	r1, [fp, #-16]
   1bf44:	sub	r0, r0, r1
   1bf48:	ldr	r2, [fp, #-12]
   1bf4c:	add	r1, r2, r1, lsl #2
   1bf50:	bl	1cf64 <main@@Base+0x12b0>
   1bf54:	b	1c040 <main@@Base+0x38c>
   1bf58:	ldr	r0, [fp, #-12]
   1bf5c:	ldr	r1, [fp, #-16]
   1bf60:	add	r0, r0, r1, lsl #2
   1bf64:	ldr	r0, [r0]
   1bf68:	ldr	r1, [pc, #292]	; 1c094 <main@@Base+0x3e0>
   1bf6c:	add	r1, pc, r1
   1bf70:	bl	125d4 <strcmp@plt>
   1bf74:	cmp	r0, #0
   1bf78:	bne	1bfb4 <main@@Base+0x300>
   1bf7c:	ldr	r0, [pc, #276]	; 1c098 <main@@Base+0x3e4>
   1bf80:	ldr	r0, [pc, r0]
   1bf84:	mov	r1, #4
   1bf88:	str	r1, [r0]
   1bf8c:	ldr	r0, [fp, #-16]
   1bf90:	add	r0, r0, #1
   1bf94:	str	r0, [fp, #-16]
   1bf98:	ldr	r0, [fp, #-8]
   1bf9c:	ldr	r1, [fp, #-16]
   1bfa0:	sub	r0, r0, r1
   1bfa4:	ldr	r2, [fp, #-12]
   1bfa8:	add	r1, r2, r1, lsl #2
   1bfac:	bl	1d4e4 <main@@Base+0x1830>
   1bfb0:	b	1c03c <main@@Base+0x388>
   1bfb4:	ldr	r0, [fp, #-12]
   1bfb8:	ldr	r1, [fp, #-16]
   1bfbc:	add	r0, r0, r1, lsl #2
   1bfc0:	ldr	r0, [r0]
   1bfc4:	ldr	r1, [pc, #208]	; 1c09c <main@@Base+0x3e8>
   1bfc8:	add	r1, pc, r1
   1bfcc:	bl	125d4 <strcmp@plt>
   1bfd0:	cmp	r0, #0
   1bfd4:	bne	1c010 <main@@Base+0x35c>
   1bfd8:	ldr	r0, [pc, #192]	; 1c0a0 <main@@Base+0x3ec>
   1bfdc:	ldr	r0, [pc, r0]
   1bfe0:	mov	r1, #5
   1bfe4:	str	r1, [r0]
   1bfe8:	ldr	r0, [fp, #-16]
   1bfec:	add	r0, r0, #1
   1bff0:	str	r0, [fp, #-16]
   1bff4:	ldr	r0, [fp, #-8]
   1bff8:	ldr	r1, [fp, #-16]
   1bffc:	sub	r0, r0, r1
   1c000:	ldr	r2, [fp, #-12]
   1c004:	add	r1, r2, r1, lsl #2
   1c008:	bl	1da64 <main@@Base+0x1db0>
   1c00c:	b	1c038 <main@@Base+0x384>
   1c010:	ldr	r0, [pc, #72]	; 1c060 <main@@Base+0x3ac>
   1c014:	add	r1, pc, r0
   1c018:	ldr	r0, [pc, #68]	; 1c064 <main@@Base+0x3b0>
   1c01c:	ldr	r0, [pc, r0]
   1c020:	ldr	r0, [r0]
   1c024:	bl	12814 <fprintf@plt>
   1c028:	str	r0, [sp]
   1c02c:	bl	1e0cc <main@@Base+0x2418>
   1c030:	movw	r0, #1
   1c034:	bl	127cc <exit@plt>
   1c038:	b	1c03c <main@@Base+0x388>
   1c03c:	b	1c040 <main@@Base+0x38c>
   1c040:	b	1c044 <main@@Base+0x390>
   1c044:	b	1c048 <main@@Base+0x394>
   1c048:	movw	r0, #0
   1c04c:	mov	sp, fp
   1c050:	pop	{fp, pc}
   1c054:	andeq	r3, r0, r3, lsr #20
   1c058:			; <UNDEFINED> instruction: 0x000039ba
   1c05c:			; <UNDEFINED> instruction: 0x000153b4
   1c060:	andeq	r3, r0, r8, lsl r8
   1c064:	muleq	r1, r4, r1
   1c068:	strdeq	r3, [r0], -r5
   1c06c:	ldrdeq	r3, [r0], -ip
   1c070:			; <UNDEFINED> instruction: 0x00003abb
   1c074:	andeq	r3, r0, r2, lsr #21
   1c078:	andeq	r3, r0, r0, ror #20
   1c07c:			; <UNDEFINED> instruction: 0x000039b9
   1c080:	andeq	r5, r1, r0, ror r3
   1c084:	andeq	r3, r0, r2, ror #18
   1c088:	andeq	r5, r1, r4, lsl r3
   1c08c:	andeq	r3, r0, ip, lsl #18
   1c090:			; <UNDEFINED> instruction: 0x000152b8
   1c094:			; <UNDEFINED> instruction: 0x000038b5
   1c098:	andeq	r5, r1, ip, asr r2
   1c09c:	andeq	r3, r0, lr, asr r8
   1c0a0:	andeq	r5, r1, r0, lsl #4
   1c0a4:	push	{r4, r5, r6, sl, fp, lr}
   1c0a8:	add	fp, sp, #16
   1c0ac:	sub	sp, sp, #56	; 0x38
   1c0b0:	ldr	r2, [pc, #1372]	; 1c614 <main@@Base+0x960>
   1c0b4:	ldr	r2, [pc, r2]
   1c0b8:	ldr	r3, [pc, #1368]	; 1c618 <main@@Base+0x964>
   1c0bc:	ldr	r3, [pc, r3]
   1c0c0:	ldr	ip, [pc, #1364]	; 1c61c <main@@Base+0x968>
   1c0c4:	ldr	ip, [pc, ip]
   1c0c8:	ldr	lr, [pc, #1360]	; 1c620 <main@@Base+0x96c>
   1c0cc:	ldr	lr, [pc, lr]
   1c0d0:	ldr	r4, [pc, #1356]	; 1c624 <main@@Base+0x970>
   1c0d4:	ldr	r4, [pc, r4]
   1c0d8:	ldr	r5, [pc, #1352]	; 1c628 <main@@Base+0x974>
   1c0dc:	ldr	r5, [pc, r5]
   1c0e0:	ldr	r6, [pc, #1348]	; 1c62c <main@@Base+0x978>
   1c0e4:	ldr	r6, [pc, r6]
   1c0e8:	str	r0, [fp, #-20]	; 0xffffffec
   1c0ec:	str	r1, [fp, #-24]	; 0xffffffe8
   1c0f0:	movw	r0, #0
   1c0f4:	str	r0, [r6]
   1c0f8:	str	r0, [r6, #664]	; 0x298
   1c0fc:	movw	r1, #1
   1c100:	str	r1, [r5]
   1c104:	str	r0, [r4]
   1c108:	str	r1, [fp, #-28]	; 0xffffffe4
   1c10c:	str	r1, [fp, #-32]	; 0xffffffe0
   1c110:	str	r0, [lr]
   1c114:	str	r0, [ip]
   1c118:	str	r0, [r3]
   1c11c:	str	r0, [r2]
   1c120:	str	r0, [sp, #36]	; 0x24
   1c124:	ldr	r0, [sp, #36]	; 0x24
   1c128:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c12c:	cmp	r0, r1
   1c130:	bge	1c4dc <main@@Base+0x828>
   1c134:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c138:	ldr	r1, [sp, #36]	; 0x24
   1c13c:	add	r0, r0, r1, lsl #2
   1c140:	ldr	r0, [r0]
   1c144:	ldr	r1, [pc, #1344]	; 1c68c <main@@Base+0x9d8>
   1c148:	add	r1, pc, r1
   1c14c:	bl	125d4 <strcmp@plt>
   1c150:	cmp	r0, #0
   1c154:	beq	1c17c <main@@Base+0x4c8>
   1c158:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c15c:	ldr	r1, [sp, #36]	; 0x24
   1c160:	add	r0, r0, r1, lsl #2
   1c164:	ldr	r0, [r0]
   1c168:	ldr	r1, [pc, #1312]	; 1c690 <main@@Base+0x9dc>
   1c16c:	add	r1, pc, r1
   1c170:	bl	125d4 <strcmp@plt>
   1c174:	cmp	r0, #0
   1c178:	bne	1c190 <main@@Base+0x4dc>
   1c17c:	ldr	r0, [pc, #1284]	; 1c688 <main@@Base+0x9d4>
   1c180:	ldr	r0, [pc, r0]
   1c184:	movw	r1, #1
   1c188:	str	r1, [r0]
   1c18c:	b	1c4c8 <main@@Base+0x814>
   1c190:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c194:	ldr	r1, [sp, #36]	; 0x24
   1c198:	add	r0, r0, r1, lsl #2
   1c19c:	ldr	r0, [r0]
   1c1a0:	ldr	r1, [pc, #1260]	; 1c694 <main@@Base+0x9e0>
   1c1a4:	add	r1, pc, r1
   1c1a8:	bl	125d4 <strcmp@plt>
   1c1ac:	cmp	r0, #0
   1c1b0:	beq	1c1d8 <main@@Base+0x524>
   1c1b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c1b8:	ldr	r1, [sp, #36]	; 0x24
   1c1bc:	add	r0, r0, r1, lsl #2
   1c1c0:	ldr	r0, [r0]
   1c1c4:	ldr	r1, [pc, #1228]	; 1c698 <main@@Base+0x9e4>
   1c1c8:	add	r1, pc, r1
   1c1cc:	bl	125d4 <strcmp@plt>
   1c1d0:	cmp	r0, #0
   1c1d4:	bne	1c1e4 <main@@Base+0x530>
   1c1d8:	movw	r0, #0
   1c1dc:	str	r0, [fp, #-32]	; 0xffffffe0
   1c1e0:	b	1c4c4 <main@@Base+0x810>
   1c1e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c1e8:	ldr	r1, [sp, #36]	; 0x24
   1c1ec:	add	r0, r0, r1, lsl #2
   1c1f0:	ldr	r0, [r0]
   1c1f4:	ldr	r1, [pc, #1184]	; 1c69c <main@@Base+0x9e8>
   1c1f8:	add	r1, pc, r1
   1c1fc:	bl	125d4 <strcmp@plt>
   1c200:	cmp	r0, #0
   1c204:	beq	1c22c <main@@Base+0x578>
   1c208:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c20c:	ldr	r1, [sp, #36]	; 0x24
   1c210:	add	r0, r0, r1, lsl #2
   1c214:	ldr	r0, [r0]
   1c218:	ldr	r1, [pc, #1152]	; 1c6a0 <main@@Base+0x9ec>
   1c21c:	add	r1, pc, r1
   1c220:	bl	125d4 <strcmp@plt>
   1c224:	cmp	r0, #0
   1c228:	bne	1c2cc <main@@Base+0x618>
   1c22c:	ldr	r0, [sp, #36]	; 0x24
   1c230:	add	r0, r0, #1
   1c234:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c238:	cmp	r0, r1
   1c23c:	bge	1c2cc <main@@Base+0x618>
   1c240:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c244:	ldr	r1, [sp, #36]	; 0x24
   1c248:	add	r1, r1, #1
   1c24c:	add	r0, r0, r1, lsl #2
   1c250:	ldr	r0, [r0]
   1c254:	ldrb	r0, [r0]
   1c258:	cmp	r0, #45	; 0x2d
   1c25c:	beq	1c2cc <main@@Base+0x618>
   1c260:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c264:	ldr	r1, [sp, #36]	; 0x24
   1c268:	add	r1, r1, #1
   1c26c:	add	r0, r0, r1, lsl #2
   1c270:	ldr	r0, [r0]
   1c274:	bl	17aac <codadump_filter_create@@Base>
   1c278:	ldr	r1, [pc, #1020]	; 1c67c <main@@Base+0x9c8>
   1c27c:	ldr	r1, [pc, r1]
   1c280:	str	r0, [r1, #664]	; 0x298
   1c284:	ldr	r0, [r1, #664]	; 0x298
   1c288:	movw	r1, #0
   1c28c:	cmp	r0, r1
   1c290:	bne	1c2bc <main@@Base+0x608>
   1c294:	ldr	r0, [pc, #996]	; 1c680 <main@@Base+0x9cc>
   1c298:	add	r1, pc, r0
   1c29c:	ldr	r0, [pc, #992]	; 1c684 <main@@Base+0x9d0>
   1c2a0:	ldr	r0, [pc, r0]
   1c2a4:	ldr	r0, [r0]
   1c2a8:	bl	12814 <fprintf@plt>
   1c2ac:	str	r0, [sp, #32]
   1c2b0:	bl	1e0cc <main@@Base+0x2418>
   1c2b4:	movw	r0, #1
   1c2b8:	bl	127cc <exit@plt>
   1c2bc:	ldr	r0, [sp, #36]	; 0x24
   1c2c0:	add	r0, r0, #1
   1c2c4:	str	r0, [sp, #36]	; 0x24
   1c2c8:	b	1c4c0 <main@@Base+0x80c>
   1c2cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c2d0:	ldr	r1, [sp, #36]	; 0x24
   1c2d4:	add	r0, r0, r1, lsl #2
   1c2d8:	ldr	r0, [r0]
   1c2dc:	ldr	r1, [pc, #960]	; 1c6a4 <main@@Base+0x9f0>
   1c2e0:	add	r1, pc, r1
   1c2e4:	bl	125d4 <strcmp@plt>
   1c2e8:	cmp	r0, #0
   1c2ec:	beq	1c314 <main@@Base+0x660>
   1c2f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c2f4:	ldr	r1, [sp, #36]	; 0x24
   1c2f8:	add	r0, r0, r1, lsl #2
   1c2fc:	ldr	r0, [r0]
   1c300:	ldr	r1, [pc, #928]	; 1c6a8 <main@@Base+0x9f4>
   1c304:	add	r1, pc, r1
   1c308:	bl	125d4 <strcmp@plt>
   1c30c:	cmp	r0, #0
   1c310:	bne	1c328 <main@@Base+0x674>
   1c314:	ldr	r0, [pc, #860]	; 1c678 <main@@Base+0x9c4>
   1c318:	ldr	r0, [pc, r0]
   1c31c:	movw	r1, #1
   1c320:	str	r1, [r0]
   1c324:	b	1c4bc <main@@Base+0x808>
   1c328:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c32c:	ldr	r1, [sp, #36]	; 0x24
   1c330:	add	r0, r0, r1, lsl #2
   1c334:	ldr	r0, [r0]
   1c338:	ldr	r1, [pc, #876]	; 1c6ac <main@@Base+0x9f8>
   1c33c:	add	r1, pc, r1
   1c340:	bl	125d4 <strcmp@plt>
   1c344:	cmp	r0, #0
   1c348:	beq	1c370 <main@@Base+0x6bc>
   1c34c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c350:	ldr	r1, [sp, #36]	; 0x24
   1c354:	add	r0, r0, r1, lsl #2
   1c358:	ldr	r0, [r0]
   1c35c:	ldr	r1, [pc, #844]	; 1c6b0 <main@@Base+0x9fc>
   1c360:	add	r1, pc, r1
   1c364:	bl	125d4 <strcmp@plt>
   1c368:	cmp	r0, #0
   1c36c:	bne	1c384 <main@@Base+0x6d0>
   1c370:	ldr	r0, [pc, #764]	; 1c674 <main@@Base+0x9c0>
   1c374:	ldr	r0, [pc, r0]
   1c378:	movw	r1, #1
   1c37c:	str	r1, [r0]
   1c380:	b	1c4b8 <main@@Base+0x804>
   1c384:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c388:	ldr	r1, [sp, #36]	; 0x24
   1c38c:	add	r0, r0, r1, lsl #2
   1c390:	ldr	r0, [r0]
   1c394:	ldr	r1, [pc, #792]	; 1c6b4 <main@@Base+0xa00>
   1c398:	add	r1, pc, r1
   1c39c:	bl	125d4 <strcmp@plt>
   1c3a0:	cmp	r0, #0
   1c3a4:	bne	1c3bc <main@@Base+0x708>
   1c3a8:	ldr	r0, [pc, #704]	; 1c670 <main@@Base+0x9bc>
   1c3ac:	ldr	r0, [pc, r0]
   1c3b0:	movw	r1, #1
   1c3b4:	str	r1, [r0]
   1c3b8:	b	1c4b4 <main@@Base+0x800>
   1c3bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c3c0:	ldr	r1, [sp, #36]	; 0x24
   1c3c4:	add	r0, r0, r1, lsl #2
   1c3c8:	ldr	r0, [r0]
   1c3cc:	ldr	r1, [pc, #740]	; 1c6b8 <main@@Base+0xa04>
   1c3d0:	add	r1, pc, r1
   1c3d4:	bl	125d4 <strcmp@plt>
   1c3d8:	cmp	r0, #0
   1c3dc:	bne	1c400 <main@@Base+0x74c>
   1c3e0:	ldr	r0, [pc, #640]	; 1c668 <main@@Base+0x9b4>
   1c3e4:	ldr	r0, [pc, r0]
   1c3e8:	ldr	r1, [pc, #636]	; 1c66c <main@@Base+0x9b8>
   1c3ec:	ldr	r1, [pc, r1]
   1c3f0:	movw	r2, #1
   1c3f4:	str	r2, [r1]
   1c3f8:	str	r2, [r0]
   1c3fc:	b	1c4b0 <main@@Base+0x7fc>
   1c400:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c404:	ldr	r1, [sp, #36]	; 0x24
   1c408:	add	r0, r0, r1, lsl #2
   1c40c:	ldr	r0, [r0]
   1c410:	ldr	r1, [pc, #676]	; 1c6bc <main@@Base+0xa08>
   1c414:	add	r1, pc, r1
   1c418:	bl	125d4 <strcmp@plt>
   1c41c:	cmp	r0, #0
   1c420:	bne	1c430 <main@@Base+0x77c>
   1c424:	movw	r0, #0
   1c428:	str	r0, [fp, #-28]	; 0xffffffe4
   1c42c:	b	1c4ac <main@@Base+0x7f8>
   1c430:	ldr	r0, [sp, #36]	; 0x24
   1c434:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c438:	sub	r1, r1, #1
   1c43c:	cmp	r0, r1
   1c440:	bne	1c480 <main@@Base+0x7cc>
   1c444:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c448:	ldr	r1, [sp, #36]	; 0x24
   1c44c:	add	r0, r0, r1, lsl #2
   1c450:	ldr	r0, [r0]
   1c454:	ldrb	r0, [r0]
   1c458:	cmp	r0, #45	; 0x2d
   1c45c:	beq	1c480 <main@@Base+0x7cc>
   1c460:	ldr	r0, [pc, #508]	; 1c664 <main@@Base+0x9b0>
   1c464:	ldr	r0, [pc, r0]
   1c468:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c46c:	ldr	r2, [sp, #36]	; 0x24
   1c470:	add	r1, r1, r2, lsl #2
   1c474:	ldr	r1, [r1]
   1c478:	str	r1, [r0]
   1c47c:	b	1c4a8 <main@@Base+0x7f4>
   1c480:	ldr	r0, [pc, #468]	; 1c65c <main@@Base+0x9a8>
   1c484:	add	r1, pc, r0
   1c488:	ldr	r0, [pc, #464]	; 1c660 <main@@Base+0x9ac>
   1c48c:	ldr	r0, [pc, r0]
   1c490:	ldr	r0, [r0]
   1c494:	bl	12814 <fprintf@plt>
   1c498:	str	r0, [sp, #28]
   1c49c:	bl	1e0cc <main@@Base+0x2418>
   1c4a0:	movw	r0, #1
   1c4a4:	bl	127cc <exit@plt>
   1c4a8:	b	1c4ac <main@@Base+0x7f8>
   1c4ac:	b	1c4b0 <main@@Base+0x7fc>
   1c4b0:	b	1c4b4 <main@@Base+0x800>
   1c4b4:	b	1c4b8 <main@@Base+0x804>
   1c4b8:	b	1c4bc <main@@Base+0x808>
   1c4bc:	b	1c4c0 <main@@Base+0x80c>
   1c4c0:	b	1c4c4 <main@@Base+0x810>
   1c4c4:	b	1c4c8 <main@@Base+0x814>
   1c4c8:	b	1c4cc <main@@Base+0x818>
   1c4cc:	ldr	r0, [sp, #36]	; 0x24
   1c4d0:	add	r0, r0, #1
   1c4d4:	str	r0, [sp, #36]	; 0x24
   1c4d8:	b	1c124 <main@@Base+0x470>
   1c4dc:	ldr	r0, [pc, #332]	; 1c630 <main@@Base+0x97c>
   1c4e0:	ldr	r0, [pc, r0]
   1c4e4:	ldr	r0, [r0]
   1c4e8:	movw	r1, #0
   1c4ec:	cmp	r0, r1
   1c4f0:	beq	1c50c <main@@Base+0x858>
   1c4f4:	ldr	r0, [pc, #312]	; 1c634 <main@@Base+0x980>
   1c4f8:	ldr	r0, [pc, r0]
   1c4fc:	ldr	r0, [r0]
   1c500:	ldrb	r0, [r0]
   1c504:	cmp	r0, #0
   1c508:	bne	1c534 <main@@Base+0x880>
   1c50c:	ldr	r0, [pc, #320]	; 1c654 <main@@Base+0x9a0>
   1c510:	add	r1, pc, r0
   1c514:	ldr	r0, [pc, #316]	; 1c658 <main@@Base+0x9a4>
   1c518:	ldr	r0, [pc, r0]
   1c51c:	ldr	r0, [r0]
   1c520:	bl	12814 <fprintf@plt>
   1c524:	str	r0, [sp, #24]
   1c528:	bl	1e0cc <main@@Base+0x2418>
   1c52c:	movw	r0, #1
   1c530:	bl	127cc <exit@plt>
   1c534:	bl	12838 <coda_init@plt>
   1c538:	cmp	r0, #0
   1c53c:	beq	1c588 <main@@Base+0x8d4>
   1c540:	ldr	r0, [pc, #264]	; 1c650 <main@@Base+0x99c>
   1c544:	ldr	r0, [pc, r0]
   1c548:	ldr	r0, [r0]
   1c54c:	str	r0, [sp, #20]
   1c550:	bl	129ac <coda_get_errno@plt>
   1c554:	ldr	r0, [r0]
   1c558:	bl	12964 <coda_errno_to_string@plt>
   1c55c:	ldr	lr, [pc, #232]	; 1c64c <main@@Base+0x998>
   1c560:	add	r1, pc, lr
   1c564:	ldr	lr, [sp, #20]
   1c568:	str	r0, [sp, #16]
   1c56c:	mov	r0, lr
   1c570:	ldr	r2, [sp, #16]
   1c574:	bl	12814 <fprintf@plt>
   1c578:	movw	r1, #1
   1c57c:	str	r0, [sp, #12]
   1c580:	mov	r0, r1
   1c584:	bl	127cc <exit@plt>
   1c588:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c58c:	cmp	r0, #0
   1c590:	movw	r0, #0
   1c594:	movne	r0, #1
   1c598:	mvn	r1, #0
   1c59c:	eor	r0, r0, r1
   1c5a0:	and	r0, r0, #1
   1c5a4:	bl	12688 <coda_set_option_bypass_special_types@plt>
   1c5a8:	movw	r1, #0
   1c5ac:	str	r0, [sp, #8]
   1c5b0:	mov	r0, r1
   1c5b4:	bl	125c8 <coda_set_option_perform_boundary_checks@plt>
   1c5b8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1c5bc:	str	r0, [sp, #4]
   1c5c0:	mov	r0, r1
   1c5c4:	bl	12844 <coda_set_option_perform_conversions@plt>
   1c5c8:	ldr	r1, [pc, #120]	; 1c648 <main@@Base+0x994>
   1c5cc:	ldr	r1, [pc, r1]
   1c5d0:	str	r0, [sp]
   1c5d4:	blx	r1
   1c5d8:	ldr	r0, [pc, #100]	; 1c644 <main@@Base+0x990>
   1c5dc:	ldr	r0, [pc, r0]
   1c5e0:	blx	r0
   1c5e4:	ldr	r0, [pc, #84]	; 1c640 <main@@Base+0x98c>
   1c5e8:	ldr	r0, [pc, r0]
   1c5ec:	blx	r0
   1c5f0:	ldr	r0, [pc, #68]	; 1c63c <main@@Base+0x988>
   1c5f4:	ldr	r0, [pc, r0]
   1c5f8:	blx	r0
   1c5fc:	ldr	r0, [pc, #52]	; 1c638 <main@@Base+0x984>
   1c600:	ldr	r0, [pc, r0]
   1c604:	blx	r0
   1c608:	bl	1276c <coda_done@plt>
   1c60c:	sub	sp, fp, #16
   1c610:	pop	{r4, r5, r6, sl, fp, pc}
   1c614:	andeq	r5, r1, r0, lsl r1
   1c618:	andeq	r5, r1, r4, ror #1
   1c61c:	strdeq	r5, [r1], -ip
   1c620:	andeq	r5, r1, r0, asr #1
   1c624:	ldrdeq	r5, [r1], -r4
   1c628:	andeq	r5, r1, ip, lsr #1
   1c62c:	andeq	r5, r1, r8, asr #1
   1c630:	andeq	r4, r1, ip, asr #25
   1c634:			; <UNDEFINED> instruction: 0x00014cb4
   1c638:	andeq	r4, r1, r8, ror #23
   1c63c:	andeq	r4, r1, r0, asr #23
   1c640:			; <UNDEFINED> instruction: 0x00014bbc
   1c644:	andeq	r4, r1, r8, lsl ip
   1c648:	andeq	r4, r1, r0, lsl #24
   1c64c:	andeq	r3, r0, r2, ror r2
   1c650:	andeq	r4, r1, ip, ror #24
   1c654:	andeq	r3, r0, ip, lsl r3
   1c658:	muleq	r1, r8, ip
   1c65c:	andeq	r3, r0, r8, lsr #7
   1c660:	andeq	r4, r1, r4, lsr #26
   1c664:	andeq	r4, r1, r8, asr #26
   1c668:	andeq	r4, r1, r8, lsr #27
   1c66c:			; <UNDEFINED> instruction: 0x00014dbc
   1c670:	andeq	r4, r1, r8, lsl lr
   1c674:	andeq	r4, r1, ip, lsr #28
   1c678:	andeq	r4, r1, r8, lsr #29
   1c67c:	andeq	r4, r1, r0, lsr pc
   1c680:	andeq	r4, r0, r2, lsr #11
   1c684:	andeq	r4, r1, r0, lsl pc
   1c688:	andeq	r5, r1, r8, lsr #32
   1c68c:			; <UNDEFINED> instruction: 0x000046bf
   1c690:	muleq	r0, lr, r6
   1c694:	andeq	r4, r0, r1, ror r6
   1c698:	andeq	r4, r0, r0, asr r6
   1c69c:	andeq	r4, r0, r6, lsr r6
   1c6a0:	andeq	r4, r0, r5, lsl r6
   1c6a4:	andeq	r4, r0, r3, lsl #11
   1c6a8:	andeq	r4, r0, r2, ror #10
   1c6ac:	andeq	r4, r0, r1, lsr r5
   1c6b0:	andeq	r4, r0, r0, lsl r5
   1c6b4:	ldrdeq	r4, [r0], -pc	; <UNPREDICTABLE>
   1c6b8:			; <UNDEFINED> instruction: 0x000044b5
   1c6bc:	andeq	r4, r0, lr, ror r4
   1c6c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c6c4:	add	fp, sp, #28
   1c6c8:	sub	sp, sp, #76	; 0x4c
   1c6cc:	ldr	r2, [pc, #1948]	; 1ce70 <main@@Base+0x11bc>
   1c6d0:	ldr	r2, [pc, r2]
   1c6d4:	ldr	r3, [pc, #1944]	; 1ce74 <main@@Base+0x11c0>
   1c6d8:	ldr	r3, [pc, r3]
   1c6dc:	ldr	ip, [pc, #1940]	; 1ce78 <main@@Base+0x11c4>
   1c6e0:	ldr	ip, [pc, ip]
   1c6e4:	ldr	lr, [pc, #1936]	; 1ce7c <main@@Base+0x11c8>
   1c6e8:	ldr	lr, [pc, lr]
   1c6ec:	ldr	r4, [pc, #1932]	; 1ce80 <main@@Base+0x11cc>
   1c6f0:	ldr	r4, [pc, r4]
   1c6f4:	ldr	r5, [pc, #1928]	; 1ce84 <main@@Base+0x11d0>
   1c6f8:	ldr	r5, [pc, r5]
   1c6fc:	ldr	r6, [pc, #1924]	; 1ce88 <main@@Base+0x11d4>
   1c700:	ldr	r6, [pc, r6]
   1c704:	ldr	r7, [pc, #1920]	; 1ce8c <main@@Base+0x11d8>
   1c708:	ldr	r7, [pc, r7]
   1c70c:	ldr	r8, [pc, #1916]	; 1ce90 <main@@Base+0x11dc>
   1c710:	add	r8, pc, r8
   1c714:	ldr	r9, [pc, #1912]	; 1ce94 <main@@Base+0x11e0>
   1c718:	ldr	r9, [pc, r9]
   1c71c:	ldr	sl, [pc, #1908]	; 1ce98 <main@@Base+0x11e4>
   1c720:	ldr	sl, [pc, sl]
   1c724:	str	r0, [sp, #52]	; 0x34
   1c728:	ldr	r0, [pc, #1900]	; 1ce9c <main@@Base+0x11e8>
   1c72c:	ldr	r0, [pc, r0]
   1c730:	str	r0, [sp, #48]	; 0x30
   1c734:	ldr	r0, [sp, #52]	; 0x34
   1c738:	str	r0, [fp, #-32]	; 0xffffffe0
   1c73c:	str	r1, [fp, #-36]	; 0xffffffdc
   1c740:	movw	r1, #0
   1c744:	ldr	r0, [sp, #48]	; 0x30
   1c748:	str	r1, [r0]
   1c74c:	str	r1, [r0, #664]	; 0x298
   1c750:	str	r1, [sl]
   1c754:	str	r8, [r9]
   1c758:	ldr	r7, [r7]
   1c75c:	str	r7, [r6]
   1c760:	movw	r6, #1
   1c764:	str	r6, [r5]
   1c768:	str	r6, [r4]
   1c76c:	str	r6, [fp, #-40]	; 0xffffffd8
   1c770:	str	r6, [fp, #-44]	; 0xffffffd4
   1c774:	str	r1, [lr]
   1c778:	str	r1, [ip]
   1c77c:	str	r1, [r3]
   1c780:	str	r1, [r2]
   1c784:	str	r1, [fp, #-48]	; 0xffffffd0
   1c788:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c78c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1c790:	cmp	r0, r1
   1c794:	bge	1cc7c <main@@Base+0xfc8>
   1c798:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c79c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1c7a0:	add	r0, r0, r1, lsl #2
   1c7a4:	ldr	r0, [r0]
   1c7a8:	ldr	r1, [pc, #1904]	; 1cf20 <main@@Base+0x126c>
   1c7ac:	add	r1, pc, r1
   1c7b0:	bl	125d4 <strcmp@plt>
   1c7b4:	cmp	r0, #0
   1c7b8:	beq	1c7e0 <main@@Base+0xb2c>
   1c7bc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c7c0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1c7c4:	add	r0, r0, r1, lsl #2
   1c7c8:	ldr	r0, [r0]
   1c7cc:	ldr	r1, [pc, #1872]	; 1cf24 <main@@Base+0x1270>
   1c7d0:	add	r1, pc, r1
   1c7d4:	bl	125d4 <strcmp@plt>
   1c7d8:	cmp	r0, #0
   1c7dc:	bne	1c7ec <main@@Base+0xb38>
   1c7e0:	movw	r0, #0
   1c7e4:	str	r0, [fp, #-44]	; 0xffffffd4
   1c7e8:	b	1cc68 <main@@Base+0xfb4>
   1c7ec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c7f0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1c7f4:	add	r0, r0, r1, lsl #2
   1c7f8:	ldr	r0, [r0]
   1c7fc:	ldr	r1, [pc, #1828]	; 1cf28 <main@@Base+0x1274>
   1c800:	add	r1, pc, r1
   1c804:	bl	125d4 <strcmp@plt>
   1c808:	cmp	r0, #0
   1c80c:	beq	1c834 <main@@Base+0xb80>
   1c810:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c814:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1c818:	add	r0, r0, r1, lsl #2
   1c81c:	ldr	r0, [r0]
   1c820:	ldr	r1, [pc, #1796]	; 1cf2c <main@@Base+0x1278>
   1c824:	add	r1, pc, r1
   1c828:	bl	125d4 <strcmp@plt>
   1c82c:	cmp	r0, #0
   1c830:	bne	1c8d4 <main@@Base+0xc20>
   1c834:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c838:	add	r0, r0, #1
   1c83c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1c840:	cmp	r0, r1
   1c844:	bge	1c8d4 <main@@Base+0xc20>
   1c848:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c84c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1c850:	add	r1, r1, #1
   1c854:	add	r0, r0, r1, lsl #2
   1c858:	ldr	r0, [r0]
   1c85c:	ldrb	r0, [r0]
   1c860:	cmp	r0, #45	; 0x2d
   1c864:	beq	1c8d4 <main@@Base+0xc20>
   1c868:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c86c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1c870:	add	r1, r1, #1
   1c874:	add	r0, r0, r1, lsl #2
   1c878:	ldr	r0, [r0]
   1c87c:	bl	17aac <codadump_filter_create@@Base>
   1c880:	ldr	r1, [pc, #1676]	; 1cf14 <main@@Base+0x1260>
   1c884:	ldr	r1, [pc, r1]
   1c888:	str	r0, [r1, #664]	; 0x298
   1c88c:	ldr	r0, [r1, #664]	; 0x298
   1c890:	movw	r1, #0
   1c894:	cmp	r0, r1
   1c898:	bne	1c8c4 <main@@Base+0xc10>
   1c89c:	ldr	r0, [pc, #1652]	; 1cf18 <main@@Base+0x1264>
   1c8a0:	add	r1, pc, r0
   1c8a4:	ldr	r0, [pc, #1648]	; 1cf1c <main@@Base+0x1268>
   1c8a8:	ldr	r0, [pc, r0]
   1c8ac:	ldr	r0, [r0]
   1c8b0:	bl	12814 <fprintf@plt>
   1c8b4:	str	r0, [sp, #44]	; 0x2c
   1c8b8:	bl	1e0cc <main@@Base+0x2418>
   1c8bc:	movw	r0, #1
   1c8c0:	bl	127cc <exit@plt>
   1c8c4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c8c8:	add	r0, r0, #1
   1c8cc:	str	r0, [fp, #-48]	; 0xffffffd0
   1c8d0:	b	1cc64 <main@@Base+0xfb0>
   1c8d4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c8d8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1c8dc:	add	r0, r0, r1, lsl #2
   1c8e0:	ldr	r0, [r0]
   1c8e4:	ldr	r1, [pc, #1604]	; 1cf30 <main@@Base+0x127c>
   1c8e8:	add	r1, pc, r1
   1c8ec:	bl	125d4 <strcmp@plt>
   1c8f0:	cmp	r0, #0
   1c8f4:	beq	1c91c <main@@Base+0xc68>
   1c8f8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c8fc:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1c900:	add	r0, r0, r1, lsl #2
   1c904:	ldr	r0, [r0]
   1c908:	ldr	r1, [pc, #1572]	; 1cf34 <main@@Base+0x1280>
   1c90c:	add	r1, pc, r1
   1c910:	bl	125d4 <strcmp@plt>
   1c914:	cmp	r0, #0
   1c918:	bne	1c930 <main@@Base+0xc7c>
   1c91c:	ldr	r0, [pc, #1516]	; 1cf10 <main@@Base+0x125c>
   1c920:	ldr	r0, [pc, r0]
   1c924:	movw	r1, #1
   1c928:	str	r1, [r0]
   1c92c:	b	1cc60 <main@@Base+0xfac>
   1c930:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c934:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1c938:	add	r0, r0, r1, lsl #2
   1c93c:	ldr	r0, [r0]
   1c940:	ldr	r1, [pc, #1520]	; 1cf38 <main@@Base+0x1284>
   1c944:	add	r1, pc, r1
   1c948:	bl	125d4 <strcmp@plt>
   1c94c:	cmp	r0, #0
   1c950:	beq	1c978 <main@@Base+0xcc4>
   1c954:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c958:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1c95c:	add	r0, r0, r1, lsl #2
   1c960:	ldr	r0, [r0]
   1c964:	ldr	r1, [pc, #1488]	; 1cf3c <main@@Base+0x1288>
   1c968:	add	r1, pc, r1
   1c96c:	bl	125d4 <strcmp@plt>
   1c970:	cmp	r0, #0
   1c974:	bne	1c98c <main@@Base+0xcd8>
   1c978:	ldr	r0, [pc, #1420]	; 1cf0c <main@@Base+0x1258>
   1c97c:	ldr	r0, [pc, r0]
   1c980:	movw	r1, #1
   1c984:	str	r1, [r0]
   1c988:	b	1cc5c <main@@Base+0xfa8>
   1c98c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c990:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1c994:	add	r0, r0, r1, lsl #2
   1c998:	ldr	r0, [r0]
   1c99c:	ldr	r1, [pc, #1436]	; 1cf40 <main@@Base+0x128c>
   1c9a0:	add	r1, pc, r1
   1c9a4:	bl	125d4 <strcmp@plt>
   1c9a8:	cmp	r0, #0
   1c9ac:	beq	1c9d4 <main@@Base+0xd20>
   1c9b0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c9b4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1c9b8:	add	r0, r0, r1, lsl #2
   1c9bc:	ldr	r0, [r0]
   1c9c0:	ldr	r1, [pc, #1404]	; 1cf44 <main@@Base+0x1290>
   1c9c4:	add	r1, pc, r1
   1c9c8:	bl	125d4 <strcmp@plt>
   1c9cc:	cmp	r0, #0
   1c9d0:	bne	1ca38 <main@@Base+0xd84>
   1c9d4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c9d8:	add	r0, r0, #1
   1c9dc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1c9e0:	cmp	r0, r1
   1c9e4:	bge	1ca38 <main@@Base+0xd84>
   1c9e8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c9ec:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1c9f0:	add	r1, r1, #1
   1c9f4:	add	r0, r0, r1, lsl #2
   1c9f8:	ldr	r0, [r0]
   1c9fc:	ldrb	r0, [r0]
   1ca00:	cmp	r0, #45	; 0x2d
   1ca04:	beq	1ca38 <main@@Base+0xd84>
   1ca08:	ldr	r0, [pc, #1272]	; 1cf08 <main@@Base+0x1254>
   1ca0c:	ldr	r0, [pc, r0]
   1ca10:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1ca14:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1ca18:	add	r2, r2, #1
   1ca1c:	add	r1, r1, r2, lsl #2
   1ca20:	ldr	r1, [r1]
   1ca24:	str	r1, [r0]
   1ca28:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1ca2c:	add	r0, r0, #1
   1ca30:	str	r0, [fp, #-48]	; 0xffffffd0
   1ca34:	b	1cc58 <main@@Base+0xfa4>
   1ca38:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ca3c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1ca40:	add	r0, r0, r1, lsl #2
   1ca44:	ldr	r0, [r0]
   1ca48:	ldr	r1, [pc, #1272]	; 1cf48 <main@@Base+0x1294>
   1ca4c:	add	r1, pc, r1
   1ca50:	bl	125d4 <strcmp@plt>
   1ca54:	cmp	r0, #0
   1ca58:	beq	1ca80 <main@@Base+0xdcc>
   1ca5c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ca60:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1ca64:	add	r0, r0, r1, lsl #2
   1ca68:	ldr	r0, [r0]
   1ca6c:	ldr	r1, [pc, #1240]	; 1cf4c <main@@Base+0x1298>
   1ca70:	add	r1, pc, r1
   1ca74:	bl	125d4 <strcmp@plt>
   1ca78:	cmp	r0, #0
   1ca7c:	bne	1ca94 <main@@Base+0xde0>
   1ca80:	ldr	r0, [pc, #1148]	; 1cf04 <main@@Base+0x1250>
   1ca84:	ldr	r0, [pc, r0]
   1ca88:	movw	r1, #1
   1ca8c:	str	r1, [r0]
   1ca90:	b	1cc54 <main@@Base+0xfa0>
   1ca94:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ca98:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1ca9c:	add	r0, r0, r1, lsl #2
   1caa0:	ldr	r0, [r0]
   1caa4:	ldr	r1, [pc, #1188]	; 1cf50 <main@@Base+0x129c>
   1caa8:	add	r1, pc, r1
   1caac:	bl	125d4 <strcmp@plt>
   1cab0:	cmp	r0, #0
   1cab4:	beq	1cadc <main@@Base+0xe28>
   1cab8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1cabc:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1cac0:	add	r0, r0, r1, lsl #2
   1cac4:	ldr	r0, [r0]
   1cac8:	ldr	r1, [pc, #1156]	; 1cf54 <main@@Base+0x12a0>
   1cacc:	add	r1, pc, r1
   1cad0:	bl	125d4 <strcmp@plt>
   1cad4:	cmp	r0, #0
   1cad8:	bne	1cb40 <main@@Base+0xe8c>
   1cadc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1cae0:	add	r0, r0, #1
   1cae4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1cae8:	cmp	r0, r1
   1caec:	bge	1cb40 <main@@Base+0xe8c>
   1caf0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1caf4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1caf8:	add	r1, r1, #1
   1cafc:	add	r0, r0, r1, lsl #2
   1cb00:	ldr	r0, [r0]
   1cb04:	ldrb	r0, [r0]
   1cb08:	cmp	r0, #45	; 0x2d
   1cb0c:	beq	1cb40 <main@@Base+0xe8c>
   1cb10:	ldr	r0, [pc, #1000]	; 1cf00 <main@@Base+0x124c>
   1cb14:	ldr	r0, [pc, r0]
   1cb18:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1cb1c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1cb20:	add	r2, r2, #1
   1cb24:	add	r1, r1, r2, lsl #2
   1cb28:	ldr	r1, [r1]
   1cb2c:	str	r1, [r0]
   1cb30:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1cb34:	add	r0, r0, #1
   1cb38:	str	r0, [fp, #-48]	; 0xffffffd0
   1cb3c:	b	1cc50 <main@@Base+0xf9c>
   1cb40:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1cb44:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1cb48:	add	r0, r0, r1, lsl #2
   1cb4c:	ldr	r0, [r0]
   1cb50:	ldr	r1, [pc, #1024]	; 1cf58 <main@@Base+0x12a4>
   1cb54:	add	r1, pc, r1
   1cb58:	bl	125d4 <strcmp@plt>
   1cb5c:	cmp	r0, #0
   1cb60:	beq	1cb88 <main@@Base+0xed4>
   1cb64:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1cb68:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1cb6c:	add	r0, r0, r1, lsl #2
   1cb70:	ldr	r0, [r0]
   1cb74:	ldr	r1, [pc, #992]	; 1cf5c <main@@Base+0x12a8>
   1cb78:	add	r1, pc, r1
   1cb7c:	bl	125d4 <strcmp@plt>
   1cb80:	cmp	r0, #0
   1cb84:	bne	1cb9c <main@@Base+0xee8>
   1cb88:	ldr	r0, [pc, #876]	; 1cefc <main@@Base+0x1248>
   1cb8c:	ldr	r0, [pc, r0]
   1cb90:	movw	r1, #1
   1cb94:	str	r1, [r0]
   1cb98:	b	1cc4c <main@@Base+0xf98>
   1cb9c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1cba0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1cba4:	add	r0, r0, r1, lsl #2
   1cba8:	ldr	r0, [r0]
   1cbac:	ldr	r1, [pc, #940]	; 1cf60 <main@@Base+0x12ac>
   1cbb0:	add	r1, pc, r1
   1cbb4:	bl	125d4 <strcmp@plt>
   1cbb8:	cmp	r0, #0
   1cbbc:	bne	1cbcc <main@@Base+0xf18>
   1cbc0:	movw	r0, #0
   1cbc4:	str	r0, [fp, #-40]	; 0xffffffd8
   1cbc8:	b	1cc48 <main@@Base+0xf94>
   1cbcc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1cbd0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1cbd4:	sub	r1, r1, #1
   1cbd8:	cmp	r0, r1
   1cbdc:	bne	1cc1c <main@@Base+0xf68>
   1cbe0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1cbe4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1cbe8:	add	r0, r0, r1, lsl #2
   1cbec:	ldr	r0, [r0]
   1cbf0:	ldrb	r0, [r0]
   1cbf4:	cmp	r0, #45	; 0x2d
   1cbf8:	beq	1cc1c <main@@Base+0xf68>
   1cbfc:	ldr	r0, [pc, #756]	; 1cef8 <main@@Base+0x1244>
   1cc00:	ldr	r0, [pc, r0]
   1cc04:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1cc08:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1cc0c:	add	r1, r1, r2, lsl #2
   1cc10:	ldr	r1, [r1]
   1cc14:	str	r1, [r0]
   1cc18:	b	1cc44 <main@@Base+0xf90>
   1cc1c:	ldr	r0, [pc, #716]	; 1cef0 <main@@Base+0x123c>
   1cc20:	add	r1, pc, r0
   1cc24:	ldr	r0, [pc, #712]	; 1cef4 <main@@Base+0x1240>
   1cc28:	ldr	r0, [pc, r0]
   1cc2c:	ldr	r0, [r0]
   1cc30:	bl	12814 <fprintf@plt>
   1cc34:	str	r0, [sp, #40]	; 0x28
   1cc38:	bl	1e0cc <main@@Base+0x2418>
   1cc3c:	movw	r0, #1
   1cc40:	bl	127cc <exit@plt>
   1cc44:	b	1cc48 <main@@Base+0xf94>
   1cc48:	b	1cc4c <main@@Base+0xf98>
   1cc4c:	b	1cc50 <main@@Base+0xf9c>
   1cc50:	b	1cc54 <main@@Base+0xfa0>
   1cc54:	b	1cc58 <main@@Base+0xfa4>
   1cc58:	b	1cc5c <main@@Base+0xfa8>
   1cc5c:	b	1cc60 <main@@Base+0xfac>
   1cc60:	b	1cc64 <main@@Base+0xfb0>
   1cc64:	b	1cc68 <main@@Base+0xfb4>
   1cc68:	b	1cc6c <main@@Base+0xfb8>
   1cc6c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1cc70:	add	r0, r0, #1
   1cc74:	str	r0, [fp, #-48]	; 0xffffffd0
   1cc78:	b	1c788 <main@@Base+0xad4>
   1cc7c:	ldr	r0, [pc, #540]	; 1cea0 <main@@Base+0x11ec>
   1cc80:	ldr	r0, [pc, r0]
   1cc84:	ldr	r0, [r0]
   1cc88:	movw	r1, #0
   1cc8c:	cmp	r0, r1
   1cc90:	beq	1ccac <main@@Base+0xff8>
   1cc94:	ldr	r0, [pc, #520]	; 1cea4 <main@@Base+0x11f0>
   1cc98:	ldr	r0, [pc, r0]
   1cc9c:	ldr	r0, [r0]
   1cca0:	ldrb	r0, [r0]
   1cca4:	cmp	r0, #0
   1cca8:	bne	1ccd4 <main@@Base+0x1020>
   1ccac:	ldr	r0, [pc, #564]	; 1cee8 <main@@Base+0x1234>
   1ccb0:	add	r1, pc, r0
   1ccb4:	ldr	r0, [pc, #560]	; 1ceec <main@@Base+0x1238>
   1ccb8:	ldr	r0, [pc, r0]
   1ccbc:	ldr	r0, [r0]
   1ccc0:	bl	12814 <fprintf@plt>
   1ccc4:	str	r0, [sp, #36]	; 0x24
   1ccc8:	bl	1e0cc <main@@Base+0x2418>
   1cccc:	movw	r0, #1
   1ccd0:	bl	127cc <exit@plt>
   1ccd4:	bl	12838 <coda_init@plt>
   1ccd8:	cmp	r0, #0
   1ccdc:	beq	1cd28 <main@@Base+0x1074>
   1cce0:	ldr	r0, [pc, #508]	; 1cee4 <main@@Base+0x1230>
   1cce4:	ldr	r0, [pc, r0]
   1cce8:	ldr	r0, [r0]
   1ccec:	str	r0, [sp, #32]
   1ccf0:	bl	129ac <coda_get_errno@plt>
   1ccf4:	ldr	r0, [r0]
   1ccf8:	bl	12964 <coda_errno_to_string@plt>
   1ccfc:	ldr	lr, [pc, #476]	; 1cee0 <main@@Base+0x122c>
   1cd00:	add	r1, pc, lr
   1cd04:	ldr	lr, [sp, #32]
   1cd08:	str	r0, [sp, #28]
   1cd0c:	mov	r0, lr
   1cd10:	ldr	r2, [sp, #28]
   1cd14:	bl	12814 <fprintf@plt>
   1cd18:	movw	r1, #1
   1cd1c:	str	r0, [sp, #24]
   1cd20:	mov	r0, r1
   1cd24:	bl	127cc <exit@plt>
   1cd28:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1cd2c:	cmp	r0, #0
   1cd30:	movw	r0, #0
   1cd34:	movne	r0, #1
   1cd38:	mvn	r1, #0
   1cd3c:	eor	r0, r0, r1
   1cd40:	and	r0, r0, #1
   1cd44:	bl	12688 <coda_set_option_bypass_special_types@plt>
   1cd48:	movw	r1, #0
   1cd4c:	str	r0, [sp, #20]
   1cd50:	mov	r0, r1
   1cd54:	bl	125c8 <coda_set_option_perform_boundary_checks@plt>
   1cd58:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1cd5c:	str	r0, [sp, #16]
   1cd60:	mov	r0, r1
   1cd64:	bl	12844 <coda_set_option_perform_conversions@plt>
   1cd68:	ldr	r1, [pc, #320]	; 1ceb0 <main@@Base+0x11fc>
   1cd6c:	ldr	r1, [pc, r1]
   1cd70:	str	r0, [sp, #12]
   1cd74:	blx	r1
   1cd78:	ldr	r0, [pc, #300]	; 1ceac <main@@Base+0x11f8>
   1cd7c:	ldr	r0, [pc, r0]
   1cd80:	blx	r0
   1cd84:	ldr	r0, [pc, #284]	; 1cea8 <main@@Base+0x11f4>
   1cd88:	ldr	r0, [pc, r0]
   1cd8c:	ldr	r0, [r0]
   1cd90:	movw	r1, #0
   1cd94:	cmp	r0, r1
   1cd98:	beq	1ce14 <main@@Base+0x1160>
   1cd9c:	ldr	r0, [pc, #276]	; 1ceb8 <main@@Base+0x1204>
   1cda0:	add	r1, pc, r0
   1cda4:	ldr	r0, [pc, #272]	; 1cebc <main@@Base+0x1208>
   1cda8:	ldr	r0, [pc, r0]
   1cdac:	ldr	r0, [r0]
   1cdb0:	bl	12604 <fopen@plt>
   1cdb4:	ldr	r1, [pc, #248]	; 1ceb4 <main@@Base+0x1200>
   1cdb8:	ldr	r1, [pc, r1]
   1cdbc:	str	r0, [r1]
   1cdc0:	ldr	r0, [r1]
   1cdc4:	movw	r1, #0
   1cdc8:	cmp	r0, r1
   1cdcc:	bne	1ce10 <main@@Base+0x115c>
   1cdd0:	ldr	r0, [pc, #252]	; 1ced4 <main@@Base+0x1220>
   1cdd4:	add	r1, pc, r0
   1cdd8:	ldr	r0, [pc, #248]	; 1ced8 <main@@Base+0x1224>
   1cddc:	ldr	r0, [pc, r0]
   1cde0:	ldr	r2, [pc, #244]	; 1cedc <main@@Base+0x1228>
   1cde4:	ldr	r2, [pc, r2]
   1cde8:	ldr	r2, [r2]
   1cdec:	ldr	r0, [r0]
   1cdf0:	str	r0, [sp, #8]
   1cdf4:	mov	r0, r2
   1cdf8:	ldr	r2, [sp, #8]
   1cdfc:	bl	12814 <fprintf@plt>
   1ce00:	movw	r1, #1
   1ce04:	str	r0, [sp, #4]
   1ce08:	mov	r0, r1
   1ce0c:	bl	127cc <exit@plt>
   1ce10:	b	1ce14 <main@@Base+0x1160>
   1ce14:	ldr	r0, [pc, #168]	; 1cec4 <main@@Base+0x1210>
   1ce18:	ldr	r0, [pc, r0]
   1ce1c:	blx	r0
   1ce20:	ldr	r0, [pc, #152]	; 1cec0 <main@@Base+0x120c>
   1ce24:	ldr	r0, [pc, r0]
   1ce28:	ldr	r0, [r0]
   1ce2c:	movw	lr, #0
   1ce30:	cmp	r0, lr
   1ce34:	beq	1ce4c <main@@Base+0x1198>
   1ce38:	ldr	r0, [pc, #136]	; 1cec8 <main@@Base+0x1214>
   1ce3c:	ldr	r0, [pc, r0]
   1ce40:	ldr	r0, [r0]
   1ce44:	bl	128b0 <fclose@plt>
   1ce48:	str	r0, [sp]
   1ce4c:	ldr	r0, [pc, #124]	; 1ced0 <main@@Base+0x121c>
   1ce50:	ldr	r0, [pc, r0]
   1ce54:	blx	r0
   1ce58:	ldr	r0, [pc, #108]	; 1cecc <main@@Base+0x1218>
   1ce5c:	ldr	r0, [pc, r0]
   1ce60:	blx	r0
   1ce64:	bl	1276c <coda_done@plt>
   1ce68:	sub	sp, fp, #28
   1ce6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ce70:	andeq	r4, r1, ip, asr #21
   1ce74:	andeq	r4, r1, r4, lsr #22
   1ce78:	andeq	r4, r1, r8, lsl fp
   1ce7c:	andeq	r4, r1, r0, ror #21
   1ce80:			; <UNDEFINED> instruction: 0x00014ab8
   1ce84:	muleq	r1, r0, sl
   1ce88:			; <UNDEFINED> instruction: 0x00014ab8
   1ce8c:	ldrdeq	r4, [r1], -ip
   1ce90:	andeq	r2, r0, r0, asr #17
   1ce94:	andeq	r4, r1, r4, lsr #21
   1ce98:	andeq	r4, r1, r4, ror sl
   1ce9c:	andeq	r4, r1, r0, lsl #21
   1cea0:	andeq	r4, r1, ip, lsr #10
   1cea4:	andeq	r4, r1, r4, lsl r5
   1cea8:	andeq	r4, r1, ip, lsl #8
   1ceac:	andeq	r4, r1, r8, ror r4
   1ceb0:	andeq	r4, r1, r0, ror #8
   1ceb4:	andeq	r4, r1, r0, lsl #8
   1ceb8:	andeq	r3, r0, r1, ror #22
   1cebc:	andeq	r4, r1, ip, ror #7
   1cec0:	andeq	r4, r1, r0, ror r3
   1cec4:	andeq	r4, r1, ip, lsl #7
   1cec8:	andeq	r4, r1, ip, ror r3
   1cecc:	andeq	r4, r1, ip, lsl #7
   1ced0:	andeq	r4, r1, r4, ror #6
   1ced4:	andeq	r3, r0, pc, lsr #22
   1ced8:			; <UNDEFINED> instruction: 0x000143b8
   1cedc:	andeq	r4, r1, ip, asr #7
   1cee0:	ldrdeq	r2, [r0], -r2	; <UNPREDICTABLE>
   1cee4:	andeq	r4, r1, ip, asr #9
   1cee8:	andeq	r2, r0, ip, ror fp
   1ceec:	strdeq	r4, [r1], -r8
   1cef0:	andeq	r2, r0, ip, lsl #24
   1cef4:	andeq	r4, r1, r8, lsl #11
   1cef8:	andeq	r4, r1, ip, lsr #11
   1cefc:	andeq	r4, r1, r0, lsl r6
   1cf00:	andeq	r4, r1, r8, lsr #13
   1cf04:	andeq	r4, r1, r8, ror r7
   1cf08:	andeq	r4, r1, r8, lsl #15
   1cf0c:	andeq	r4, r1, ip, ror r8
   1cf10:	andeq	r4, r1, r8, lsr #17
   1cf14:	andeq	r4, r1, r8, lsr #18
   1cf18:	muleq	r0, sl, pc	; <UNPREDICTABLE>
   1cf1c:	andeq	r4, r1, r8, lsl #18
   1cf20:	andeq	r4, r0, r9, rrx
   1cf24:	andeq	r4, r0, r8, asr #32
   1cf28:	andeq	r4, r0, lr, lsr #32
   1cf2c:	andeq	r4, r0, sp
   1cf30:			; <UNDEFINED> instruction: 0x00003fbd
   1cf34:	muleq	r0, ip, pc	; <UNPREDICTABLE>
   1cf38:	andeq	r3, r0, ip, ror #30
   1cf3c:	andeq	r3, r0, fp, asr #30
   1cf40:	andeq	r3, r0, fp, lsl pc
   1cf44:	strdeq	r3, [r0], -sl
   1cf48:	andeq	r3, r0, fp, ror lr
   1cf4c:	andeq	r3, r0, sl, asr lr
   1cf50:	andeq	r3, r0, r2, lsr lr
   1cf54:	andeq	r3, r0, r1, lsl lr
   1cf58:	andeq	r3, r0, pc, lsl #26
   1cf5c:	andeq	r3, r0, r8, ror sp
   1cf60:	andeq	r3, r0, r2, ror #25
   1cf64:	push	{r4, sl, fp, lr}
   1cf68:	add	fp, sp, #8
   1cf6c:	sub	sp, sp, #64	; 0x40
   1cf70:	ldr	r2, [pc, #1252]	; 1d45c <main@@Base+0x17a8>
   1cf74:	ldr	r2, [pc, r2]
   1cf78:	ldr	r3, [pc, #1248]	; 1d460 <main@@Base+0x17ac>
   1cf7c:	ldr	r3, [pc, r3]
   1cf80:	ldr	ip, [pc, #1244]	; 1d464 <main@@Base+0x17b0>
   1cf84:	ldr	ip, [pc, ip]
   1cf88:	ldr	lr, [pc, #1240]	; 1d468 <main@@Base+0x17b4>
   1cf8c:	ldr	lr, [pc, lr]
   1cf90:	ldr	r4, [pc, #1236]	; 1d46c <main@@Base+0x17b8>
   1cf94:	ldr	r4, [pc, r4]
   1cf98:	str	r0, [fp, #-12]
   1cf9c:	str	r1, [fp, #-16]
   1cfa0:	movw	r0, #0
   1cfa4:	str	r0, [r4]
   1cfa8:	str	r0, [lr]
   1cfac:	str	r0, [ip]
   1cfb0:	ldr	r1, [r3]
   1cfb4:	str	r1, [r2]
   1cfb8:	movw	r1, #1
   1cfbc:	str	r1, [fp, #-20]	; 0xffffffec
   1cfc0:	str	r1, [fp, #-24]	; 0xffffffe8
   1cfc4:	str	r0, [fp, #-28]	; 0xffffffe4
   1cfc8:	str	r0, [fp, #-32]	; 0xffffffe0
   1cfcc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1cfd0:	ldr	r1, [fp, #-12]
   1cfd4:	cmp	r0, r1
   1cfd8:	bge	1d2ac <main@@Base+0x15f8>
   1cfdc:	ldr	r0, [fp, #-16]
   1cfe0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1cfe4:	add	r0, r0, r1, lsl #2
   1cfe8:	ldr	r0, [r0]
   1cfec:	ldr	r1, [pc, #1228]	; 1d4c0 <main@@Base+0x180c>
   1cff0:	add	r1, pc, r1
   1cff4:	bl	125d4 <strcmp@plt>
   1cff8:	cmp	r0, #0
   1cffc:	beq	1d024 <main@@Base+0x1370>
   1d000:	ldr	r0, [fp, #-16]
   1d004:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1d008:	add	r0, r0, r1, lsl #2
   1d00c:	ldr	r0, [r0]
   1d010:	ldr	r1, [pc, #1196]	; 1d4c4 <main@@Base+0x1810>
   1d014:	add	r1, pc, r1
   1d018:	bl	125d4 <strcmp@plt>
   1d01c:	cmp	r0, #0
   1d020:	bne	1d030 <main@@Base+0x137c>
   1d024:	movw	r0, #1
   1d028:	str	r0, [fp, #-28]	; 0xffffffe4
   1d02c:	b	1d298 <main@@Base+0x15e4>
   1d030:	ldr	r0, [fp, #-16]
   1d034:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1d038:	add	r0, r0, r1, lsl #2
   1d03c:	ldr	r0, [r0]
   1d040:	ldr	r1, [pc, #1152]	; 1d4c8 <main@@Base+0x1814>
   1d044:	add	r1, pc, r1
   1d048:	bl	125d4 <strcmp@plt>
   1d04c:	cmp	r0, #0
   1d050:	beq	1d078 <main@@Base+0x13c4>
   1d054:	ldr	r0, [fp, #-16]
   1d058:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1d05c:	add	r0, r0, r1, lsl #2
   1d060:	ldr	r0, [r0]
   1d064:	ldr	r1, [pc, #1120]	; 1d4cc <main@@Base+0x1818>
   1d068:	add	r1, pc, r1
   1d06c:	bl	125d4 <strcmp@plt>
   1d070:	cmp	r0, #0
   1d074:	bne	1d084 <main@@Base+0x13d0>
   1d078:	movw	r0, #0
   1d07c:	str	r0, [fp, #-24]	; 0xffffffe8
   1d080:	b	1d294 <main@@Base+0x15e0>
   1d084:	ldr	r0, [fp, #-16]
   1d088:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1d08c:	add	r0, r0, r1, lsl #2
   1d090:	ldr	r0, [r0]
   1d094:	ldr	r1, [pc, #1076]	; 1d4d0 <main@@Base+0x181c>
   1d098:	add	r1, pc, r1
   1d09c:	bl	125d4 <strcmp@plt>
   1d0a0:	cmp	r0, #0
   1d0a4:	beq	1d0cc <main@@Base+0x1418>
   1d0a8:	ldr	r0, [fp, #-16]
   1d0ac:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1d0b0:	add	r0, r0, r1, lsl #2
   1d0b4:	ldr	r0, [r0]
   1d0b8:	ldr	r1, [pc, #1044]	; 1d4d4 <main@@Base+0x1820>
   1d0bc:	add	r1, pc, r1
   1d0c0:	bl	125d4 <strcmp@plt>
   1d0c4:	cmp	r0, #0
   1d0c8:	bne	1d130 <main@@Base+0x147c>
   1d0cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d0d0:	add	r0, r0, #1
   1d0d4:	ldr	r1, [fp, #-12]
   1d0d8:	cmp	r0, r1
   1d0dc:	bge	1d130 <main@@Base+0x147c>
   1d0e0:	ldr	r0, [fp, #-16]
   1d0e4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1d0e8:	add	r1, r1, #1
   1d0ec:	add	r0, r0, r1, lsl #2
   1d0f0:	ldr	r0, [r0]
   1d0f4:	ldrb	r0, [r0]
   1d0f8:	cmp	r0, #45	; 0x2d
   1d0fc:	beq	1d130 <main@@Base+0x147c>
   1d100:	ldr	r0, [pc, #948]	; 1d4bc <main@@Base+0x1808>
   1d104:	ldr	r0, [pc, r0]
   1d108:	ldr	r1, [fp, #-16]
   1d10c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1d110:	add	r2, r2, #1
   1d114:	add	r1, r1, r2, lsl #2
   1d118:	ldr	r1, [r1]
   1d11c:	str	r1, [r0]
   1d120:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d124:	add	r0, r0, #1
   1d128:	str	r0, [fp, #-32]	; 0xffffffe0
   1d12c:	b	1d290 <main@@Base+0x15dc>
   1d130:	ldr	r0, [fp, #-16]
   1d134:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1d138:	add	r0, r0, r1, lsl #2
   1d13c:	ldr	r0, [r0]
   1d140:	ldr	r1, [pc, #912]	; 1d4d8 <main@@Base+0x1824>
   1d144:	add	r1, pc, r1
   1d148:	bl	125d4 <strcmp@plt>
   1d14c:	cmp	r0, #0
   1d150:	beq	1d178 <main@@Base+0x14c4>
   1d154:	ldr	r0, [fp, #-16]
   1d158:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1d15c:	add	r0, r0, r1, lsl #2
   1d160:	ldr	r0, [r0]
   1d164:	ldr	r1, [pc, #880]	; 1d4dc <main@@Base+0x1828>
   1d168:	add	r1, pc, r1
   1d16c:	bl	125d4 <strcmp@plt>
   1d170:	cmp	r0, #0
   1d174:	bne	1d1dc <main@@Base+0x1528>
   1d178:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d17c:	add	r0, r0, #1
   1d180:	ldr	r1, [fp, #-12]
   1d184:	cmp	r0, r1
   1d188:	bge	1d1dc <main@@Base+0x1528>
   1d18c:	ldr	r0, [fp, #-16]
   1d190:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1d194:	add	r1, r1, #1
   1d198:	add	r0, r0, r1, lsl #2
   1d19c:	ldr	r0, [r0]
   1d1a0:	ldrb	r0, [r0]
   1d1a4:	cmp	r0, #45	; 0x2d
   1d1a8:	beq	1d1dc <main@@Base+0x1528>
   1d1ac:	ldr	r0, [pc, #772]	; 1d4b8 <main@@Base+0x1804>
   1d1b0:	ldr	r0, [pc, r0]
   1d1b4:	ldr	r1, [fp, #-16]
   1d1b8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1d1bc:	add	r2, r2, #1
   1d1c0:	add	r1, r1, r2, lsl #2
   1d1c4:	ldr	r1, [r1]
   1d1c8:	str	r1, [r0]
   1d1cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d1d0:	add	r0, r0, #1
   1d1d4:	str	r0, [fp, #-32]	; 0xffffffe0
   1d1d8:	b	1d28c <main@@Base+0x15d8>
   1d1dc:	ldr	r0, [fp, #-16]
   1d1e0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1d1e4:	add	r0, r0, r1, lsl #2
   1d1e8:	ldr	r0, [r0]
   1d1ec:	ldr	r1, [pc, #748]	; 1d4e0 <main@@Base+0x182c>
   1d1f0:	add	r1, pc, r1
   1d1f4:	bl	125d4 <strcmp@plt>
   1d1f8:	cmp	r0, #0
   1d1fc:	bne	1d20c <main@@Base+0x1558>
   1d200:	movw	r0, #0
   1d204:	str	r0, [fp, #-20]	; 0xffffffec
   1d208:	b	1d288 <main@@Base+0x15d4>
   1d20c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d210:	ldr	r1, [fp, #-12]
   1d214:	sub	r1, r1, #1
   1d218:	cmp	r0, r1
   1d21c:	bne	1d25c <main@@Base+0x15a8>
   1d220:	ldr	r0, [fp, #-16]
   1d224:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1d228:	add	r0, r0, r1, lsl #2
   1d22c:	ldr	r0, [r0]
   1d230:	ldrb	r0, [r0]
   1d234:	cmp	r0, #45	; 0x2d
   1d238:	beq	1d25c <main@@Base+0x15a8>
   1d23c:	ldr	r0, [pc, #624]	; 1d4b4 <main@@Base+0x1800>
   1d240:	ldr	r0, [pc, r0]
   1d244:	ldr	r1, [fp, #-16]
   1d248:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1d24c:	add	r1, r1, r2, lsl #2
   1d250:	ldr	r1, [r1]
   1d254:	str	r1, [r0]
   1d258:	b	1d284 <main@@Base+0x15d0>
   1d25c:	ldr	r0, [pc, #584]	; 1d4ac <main@@Base+0x17f8>
   1d260:	add	r1, pc, r0
   1d264:	ldr	r0, [pc, #580]	; 1d4b0 <main@@Base+0x17fc>
   1d268:	ldr	r0, [pc, r0]
   1d26c:	ldr	r0, [r0]
   1d270:	bl	12814 <fprintf@plt>
   1d274:	str	r0, [sp, #36]	; 0x24
   1d278:	bl	1e0cc <main@@Base+0x2418>
   1d27c:	movw	r0, #1
   1d280:	bl	127cc <exit@plt>
   1d284:	b	1d288 <main@@Base+0x15d4>
   1d288:	b	1d28c <main@@Base+0x15d8>
   1d28c:	b	1d290 <main@@Base+0x15dc>
   1d290:	b	1d294 <main@@Base+0x15e0>
   1d294:	b	1d298 <main@@Base+0x15e4>
   1d298:	b	1d29c <main@@Base+0x15e8>
   1d29c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d2a0:	add	r0, r0, #1
   1d2a4:	str	r0, [fp, #-32]	; 0xffffffe0
   1d2a8:	b	1cfcc <main@@Base+0x1318>
   1d2ac:	ldr	r0, [pc, #444]	; 1d470 <main@@Base+0x17bc>
   1d2b0:	ldr	r0, [pc, r0]
   1d2b4:	ldr	r0, [r0]
   1d2b8:	movw	r1, #0
   1d2bc:	cmp	r0, r1
   1d2c0:	beq	1d2dc <main@@Base+0x1628>
   1d2c4:	ldr	r0, [pc, #424]	; 1d474 <main@@Base+0x17c0>
   1d2c8:	ldr	r0, [pc, r0]
   1d2cc:	ldr	r0, [r0]
   1d2d0:	ldrb	r0, [r0]
   1d2d4:	cmp	r0, #0
   1d2d8:	bne	1d304 <main@@Base+0x1650>
   1d2dc:	ldr	r0, [pc, #448]	; 1d4a4 <main@@Base+0x17f0>
   1d2e0:	add	r1, pc, r0
   1d2e4:	ldr	r0, [pc, #444]	; 1d4a8 <main@@Base+0x17f4>
   1d2e8:	ldr	r0, [pc, r0]
   1d2ec:	ldr	r0, [r0]
   1d2f0:	bl	12814 <fprintf@plt>
   1d2f4:	str	r0, [sp, #32]
   1d2f8:	bl	1e0cc <main@@Base+0x2418>
   1d2fc:	movw	r0, #1
   1d300:	bl	127cc <exit@plt>
   1d304:	bl	12838 <coda_init@plt>
   1d308:	cmp	r0, #0
   1d30c:	beq	1d358 <main@@Base+0x16a4>
   1d310:	ldr	r0, [pc, #392]	; 1d4a0 <main@@Base+0x17ec>
   1d314:	ldr	r0, [pc, r0]
   1d318:	ldr	r0, [r0]
   1d31c:	str	r0, [sp, #28]
   1d320:	bl	129ac <coda_get_errno@plt>
   1d324:	ldr	r0, [r0]
   1d328:	bl	12964 <coda_errno_to_string@plt>
   1d32c:	ldr	lr, [pc, #360]	; 1d49c <main@@Base+0x17e8>
   1d330:	add	r1, pc, lr
   1d334:	ldr	lr, [sp, #28]
   1d338:	str	r0, [sp, #24]
   1d33c:	mov	r0, lr
   1d340:	ldr	r2, [sp, #24]
   1d344:	bl	12814 <fprintf@plt>
   1d348:	movw	r1, #1
   1d34c:	str	r0, [sp, #20]
   1d350:	mov	r0, r1
   1d354:	bl	127cc <exit@plt>
   1d358:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d35c:	cmp	r0, #0
   1d360:	movw	r0, #0
   1d364:	movne	r0, #1
   1d368:	mvn	r1, #0
   1d36c:	eor	r0, r0, r1
   1d370:	and	r0, r0, #1
   1d374:	bl	12688 <coda_set_option_bypass_special_types@plt>
   1d378:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d37c:	str	r0, [sp, #16]
   1d380:	mov	r0, r1
   1d384:	bl	12844 <coda_set_option_perform_conversions@plt>
   1d388:	ldr	r1, [pc, #232]	; 1d478 <main@@Base+0x17c4>
   1d38c:	ldr	r1, [pc, r1]
   1d390:	ldr	r1, [r1]
   1d394:	movw	lr, #0
   1d398:	cmp	r1, lr
   1d39c:	str	r0, [sp, #12]
   1d3a0:	beq	1d41c <main@@Base+0x1768>
   1d3a4:	ldr	r0, [pc, #212]	; 1d480 <main@@Base+0x17cc>
   1d3a8:	add	r1, pc, r0
   1d3ac:	ldr	r0, [pc, #208]	; 1d484 <main@@Base+0x17d0>
   1d3b0:	ldr	r0, [pc, r0]
   1d3b4:	ldr	r0, [r0]
   1d3b8:	bl	12604 <fopen@plt>
   1d3bc:	ldr	r1, [pc, #184]	; 1d47c <main@@Base+0x17c8>
   1d3c0:	ldr	r1, [pc, r1]
   1d3c4:	str	r0, [r1]
   1d3c8:	ldr	r0, [r1]
   1d3cc:	movw	r1, #0
   1d3d0:	cmp	r0, r1
   1d3d4:	bne	1d418 <main@@Base+0x1764>
   1d3d8:	ldr	r0, [pc, #176]	; 1d490 <main@@Base+0x17dc>
   1d3dc:	add	r1, pc, r0
   1d3e0:	ldr	r0, [pc, #172]	; 1d494 <main@@Base+0x17e0>
   1d3e4:	ldr	r0, [pc, r0]
   1d3e8:	ldr	r2, [pc, #168]	; 1d498 <main@@Base+0x17e4>
   1d3ec:	ldr	r2, [pc, r2]
   1d3f0:	ldr	r2, [r2]
   1d3f4:	ldr	r0, [r0]
   1d3f8:	str	r0, [sp, #8]
   1d3fc:	mov	r0, r2
   1d400:	ldr	r2, [sp, #8]
   1d404:	bl	12814 <fprintf@plt>
   1d408:	movw	r1, #1
   1d40c:	str	r0, [sp, #4]
   1d410:	mov	r0, r1
   1d414:	bl	127cc <exit@plt>
   1d418:	b	1d41c <main@@Base+0x1768>
   1d41c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d420:	bl	183a4 <print_json_data@@Base>
   1d424:	ldr	r0, [pc, #92]	; 1d488 <main@@Base+0x17d4>
   1d428:	ldr	r0, [pc, r0]
   1d42c:	ldr	r0, [r0]
   1d430:	movw	lr, #0
   1d434:	cmp	r0, lr
   1d438:	beq	1d450 <main@@Base+0x179c>
   1d43c:	ldr	r0, [pc, #72]	; 1d48c <main@@Base+0x17d8>
   1d440:	ldr	r0, [pc, r0]
   1d444:	ldr	r0, [r0]
   1d448:	bl	128b0 <fclose@plt>
   1d44c:	str	r0, [sp]
   1d450:	bl	1276c <coda_done@plt>
   1d454:	sub	sp, fp, #8
   1d458:	pop	{r4, sl, fp, pc}
   1d45c:	andeq	r4, r1, r4, asr #4
   1d460:	andeq	r4, r1, r8, ror #4
   1d464:	andeq	r4, r1, ip, asr r2
   1d468:	andeq	r4, r1, r8, lsl #4
   1d46c:	andeq	r4, r1, r8, lsl r2
   1d470:	strdeq	r3, [r1], -ip
   1d474:	andeq	r3, r1, r4, ror #29
   1d478:	andeq	r3, r1, r8, lsl #28
   1d47c:	strdeq	r3, [r1], -r8
   1d480:	andeq	r3, r0, r9, asr r5
   1d484:	andeq	r3, r1, r4, ror #27
   1d488:	andeq	r3, r1, ip, ror #26
   1d48c:	andeq	r3, r1, r8, ror sp
   1d490:	andeq	r3, r0, r7, lsr #10
   1d494:			; <UNDEFINED> instruction: 0x00013db0
   1d498:	andeq	r3, r1, r4, asr #27
   1d49c:	andeq	r2, r0, r2, lsr #9
   1d4a0:	muleq	r1, ip, lr
   1d4a4:	andeq	r2, r0, ip, asr #10
   1d4a8:	andeq	r3, r1, r8, asr #29
   1d4ac:	andeq	r2, r0, ip, asr #11
   1d4b0:	andeq	r3, r1, r8, asr #30
   1d4b4:	andeq	r3, r1, ip, ror #30
   1d4b8:	andeq	r4, r1, r0, lsr r0
   1d4bc:	muleq	r1, r0, r0
   1d4c0:	andeq	r3, r0, sp, lsr r9
   1d4c4:	andeq	r3, r0, ip, lsl r9
   1d4c8:	ldrdeq	r3, [r0], -r1
   1d4cc:			; <UNDEFINED> instruction: 0x000037b0
   1d4d0:	andeq	r3, r0, r3, lsr #16
   1d4d4:	andeq	r3, r0, r2, lsl #16
   1d4d8:	strdeq	r3, [r0], -r9
   1d4dc:	ldrdeq	r3, [r0], -r8
   1d4e0:	andeq	r3, r0, r2, lsr #13
   1d4e4:	push	{r4, sl, fp, lr}
   1d4e8:	add	fp, sp, #8
   1d4ec:	sub	sp, sp, #64	; 0x40
   1d4f0:	ldr	r2, [pc, #1252]	; 1d9dc <main@@Base+0x1d28>
   1d4f4:	ldr	r2, [pc, r2]
   1d4f8:	ldr	r3, [pc, #1248]	; 1d9e0 <main@@Base+0x1d2c>
   1d4fc:	ldr	r3, [pc, r3]
   1d500:	ldr	ip, [pc, #1244]	; 1d9e4 <main@@Base+0x1d30>
   1d504:	ldr	ip, [pc, ip]
   1d508:	ldr	lr, [pc, #1240]	; 1d9e8 <main@@Base+0x1d34>
   1d50c:	ldr	lr, [pc, lr]
   1d510:	ldr	r4, [pc, #1236]	; 1d9ec <main@@Base+0x1d38>
   1d514:	ldr	r4, [pc, r4]
   1d518:	str	r0, [fp, #-12]
   1d51c:	str	r1, [fp, #-16]
   1d520:	movw	r0, #0
   1d524:	str	r0, [r4]
   1d528:	str	r0, [lr]
   1d52c:	str	r0, [ip]
   1d530:	ldr	r1, [r3]
   1d534:	str	r1, [r2]
   1d538:	movw	r1, #1
   1d53c:	str	r1, [fp, #-20]	; 0xffffffec
   1d540:	str	r1, [fp, #-24]	; 0xffffffe8
   1d544:	str	r0, [fp, #-28]	; 0xffffffe4
   1d548:	str	r0, [fp, #-32]	; 0xffffffe0
   1d54c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d550:	ldr	r1, [fp, #-12]
   1d554:	cmp	r0, r1
   1d558:	bge	1d82c <main@@Base+0x1b78>
   1d55c:	ldr	r0, [fp, #-16]
   1d560:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1d564:	add	r0, r0, r1, lsl #2
   1d568:	ldr	r0, [r0]
   1d56c:	ldr	r1, [pc, #1228]	; 1da40 <main@@Base+0x1d8c>
   1d570:	add	r1, pc, r1
   1d574:	bl	125d4 <strcmp@plt>
   1d578:	cmp	r0, #0
   1d57c:	beq	1d5a4 <main@@Base+0x18f0>
   1d580:	ldr	r0, [fp, #-16]
   1d584:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1d588:	add	r0, r0, r1, lsl #2
   1d58c:	ldr	r0, [r0]
   1d590:	ldr	r1, [pc, #1196]	; 1da44 <main@@Base+0x1d90>
   1d594:	add	r1, pc, r1
   1d598:	bl	125d4 <strcmp@plt>
   1d59c:	cmp	r0, #0
   1d5a0:	bne	1d5b0 <main@@Base+0x18fc>
   1d5a4:	movw	r0, #1
   1d5a8:	str	r0, [fp, #-28]	; 0xffffffe4
   1d5ac:	b	1d818 <main@@Base+0x1b64>
   1d5b0:	ldr	r0, [fp, #-16]
   1d5b4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1d5b8:	add	r0, r0, r1, lsl #2
   1d5bc:	ldr	r0, [r0]
   1d5c0:	ldr	r1, [pc, #1152]	; 1da48 <main@@Base+0x1d94>
   1d5c4:	add	r1, pc, r1
   1d5c8:	bl	125d4 <strcmp@plt>
   1d5cc:	cmp	r0, #0
   1d5d0:	beq	1d5f8 <main@@Base+0x1944>
   1d5d4:	ldr	r0, [fp, #-16]
   1d5d8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1d5dc:	add	r0, r0, r1, lsl #2
   1d5e0:	ldr	r0, [r0]
   1d5e4:	ldr	r1, [pc, #1120]	; 1da4c <main@@Base+0x1d98>
   1d5e8:	add	r1, pc, r1
   1d5ec:	bl	125d4 <strcmp@plt>
   1d5f0:	cmp	r0, #0
   1d5f4:	bne	1d604 <main@@Base+0x1950>
   1d5f8:	movw	r0, #0
   1d5fc:	str	r0, [fp, #-24]	; 0xffffffe8
   1d600:	b	1d814 <main@@Base+0x1b60>
   1d604:	ldr	r0, [fp, #-16]
   1d608:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1d60c:	add	r0, r0, r1, lsl #2
   1d610:	ldr	r0, [r0]
   1d614:	ldr	r1, [pc, #1076]	; 1da50 <main@@Base+0x1d9c>
   1d618:	add	r1, pc, r1
   1d61c:	bl	125d4 <strcmp@plt>
   1d620:	cmp	r0, #0
   1d624:	beq	1d64c <main@@Base+0x1998>
   1d628:	ldr	r0, [fp, #-16]
   1d62c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1d630:	add	r0, r0, r1, lsl #2
   1d634:	ldr	r0, [r0]
   1d638:	ldr	r1, [pc, #1044]	; 1da54 <main@@Base+0x1da0>
   1d63c:	add	r1, pc, r1
   1d640:	bl	125d4 <strcmp@plt>
   1d644:	cmp	r0, #0
   1d648:	bne	1d6b0 <main@@Base+0x19fc>
   1d64c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d650:	add	r0, r0, #1
   1d654:	ldr	r1, [fp, #-12]
   1d658:	cmp	r0, r1
   1d65c:	bge	1d6b0 <main@@Base+0x19fc>
   1d660:	ldr	r0, [fp, #-16]
   1d664:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1d668:	add	r1, r1, #1
   1d66c:	add	r0, r0, r1, lsl #2
   1d670:	ldr	r0, [r0]
   1d674:	ldrb	r0, [r0]
   1d678:	cmp	r0, #45	; 0x2d
   1d67c:	beq	1d6b0 <main@@Base+0x19fc>
   1d680:	ldr	r0, [pc, #948]	; 1da3c <main@@Base+0x1d88>
   1d684:	ldr	r0, [pc, r0]
   1d688:	ldr	r1, [fp, #-16]
   1d68c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1d690:	add	r2, r2, #1
   1d694:	add	r1, r1, r2, lsl #2
   1d698:	ldr	r1, [r1]
   1d69c:	str	r1, [r0]
   1d6a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d6a4:	add	r0, r0, #1
   1d6a8:	str	r0, [fp, #-32]	; 0xffffffe0
   1d6ac:	b	1d810 <main@@Base+0x1b5c>
   1d6b0:	ldr	r0, [fp, #-16]
   1d6b4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1d6b8:	add	r0, r0, r1, lsl #2
   1d6bc:	ldr	r0, [r0]
   1d6c0:	ldr	r1, [pc, #912]	; 1da58 <main@@Base+0x1da4>
   1d6c4:	add	r1, pc, r1
   1d6c8:	bl	125d4 <strcmp@plt>
   1d6cc:	cmp	r0, #0
   1d6d0:	beq	1d6f8 <main@@Base+0x1a44>
   1d6d4:	ldr	r0, [fp, #-16]
   1d6d8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1d6dc:	add	r0, r0, r1, lsl #2
   1d6e0:	ldr	r0, [r0]
   1d6e4:	ldr	r1, [pc, #880]	; 1da5c <main@@Base+0x1da8>
   1d6e8:	add	r1, pc, r1
   1d6ec:	bl	125d4 <strcmp@plt>
   1d6f0:	cmp	r0, #0
   1d6f4:	bne	1d75c <main@@Base+0x1aa8>
   1d6f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d6fc:	add	r0, r0, #1
   1d700:	ldr	r1, [fp, #-12]
   1d704:	cmp	r0, r1
   1d708:	bge	1d75c <main@@Base+0x1aa8>
   1d70c:	ldr	r0, [fp, #-16]
   1d710:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1d714:	add	r1, r1, #1
   1d718:	add	r0, r0, r1, lsl #2
   1d71c:	ldr	r0, [r0]
   1d720:	ldrb	r0, [r0]
   1d724:	cmp	r0, #45	; 0x2d
   1d728:	beq	1d75c <main@@Base+0x1aa8>
   1d72c:	ldr	r0, [pc, #772]	; 1da38 <main@@Base+0x1d84>
   1d730:	ldr	r0, [pc, r0]
   1d734:	ldr	r1, [fp, #-16]
   1d738:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1d73c:	add	r2, r2, #1
   1d740:	add	r1, r1, r2, lsl #2
   1d744:	ldr	r1, [r1]
   1d748:	str	r1, [r0]
   1d74c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d750:	add	r0, r0, #1
   1d754:	str	r0, [fp, #-32]	; 0xffffffe0
   1d758:	b	1d80c <main@@Base+0x1b58>
   1d75c:	ldr	r0, [fp, #-16]
   1d760:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1d764:	add	r0, r0, r1, lsl #2
   1d768:	ldr	r0, [r0]
   1d76c:	ldr	r1, [pc, #748]	; 1da60 <main@@Base+0x1dac>
   1d770:	add	r1, pc, r1
   1d774:	bl	125d4 <strcmp@plt>
   1d778:	cmp	r0, #0
   1d77c:	bne	1d78c <main@@Base+0x1ad8>
   1d780:	movw	r0, #0
   1d784:	str	r0, [fp, #-20]	; 0xffffffec
   1d788:	b	1d808 <main@@Base+0x1b54>
   1d78c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d790:	ldr	r1, [fp, #-12]
   1d794:	sub	r1, r1, #1
   1d798:	cmp	r0, r1
   1d79c:	bne	1d7dc <main@@Base+0x1b28>
   1d7a0:	ldr	r0, [fp, #-16]
   1d7a4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1d7a8:	add	r0, r0, r1, lsl #2
   1d7ac:	ldr	r0, [r0]
   1d7b0:	ldrb	r0, [r0]
   1d7b4:	cmp	r0, #45	; 0x2d
   1d7b8:	beq	1d7dc <main@@Base+0x1b28>
   1d7bc:	ldr	r0, [pc, #624]	; 1da34 <main@@Base+0x1d80>
   1d7c0:	ldr	r0, [pc, r0]
   1d7c4:	ldr	r1, [fp, #-16]
   1d7c8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1d7cc:	add	r1, r1, r2, lsl #2
   1d7d0:	ldr	r1, [r1]
   1d7d4:	str	r1, [r0]
   1d7d8:	b	1d804 <main@@Base+0x1b50>
   1d7dc:	ldr	r0, [pc, #584]	; 1da2c <main@@Base+0x1d78>
   1d7e0:	add	r1, pc, r0
   1d7e4:	ldr	r0, [pc, #580]	; 1da30 <main@@Base+0x1d7c>
   1d7e8:	ldr	r0, [pc, r0]
   1d7ec:	ldr	r0, [r0]
   1d7f0:	bl	12814 <fprintf@plt>
   1d7f4:	str	r0, [sp, #36]	; 0x24
   1d7f8:	bl	1e0cc <main@@Base+0x2418>
   1d7fc:	movw	r0, #1
   1d800:	bl	127cc <exit@plt>
   1d804:	b	1d808 <main@@Base+0x1b54>
   1d808:	b	1d80c <main@@Base+0x1b58>
   1d80c:	b	1d810 <main@@Base+0x1b5c>
   1d810:	b	1d814 <main@@Base+0x1b60>
   1d814:	b	1d818 <main@@Base+0x1b64>
   1d818:	b	1d81c <main@@Base+0x1b68>
   1d81c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d820:	add	r0, r0, #1
   1d824:	str	r0, [fp, #-32]	; 0xffffffe0
   1d828:	b	1d54c <main@@Base+0x1898>
   1d82c:	ldr	r0, [pc, #444]	; 1d9f0 <main@@Base+0x1d3c>
   1d830:	ldr	r0, [pc, r0]
   1d834:	ldr	r0, [r0]
   1d838:	movw	r1, #0
   1d83c:	cmp	r0, r1
   1d840:	beq	1d85c <main@@Base+0x1ba8>
   1d844:	ldr	r0, [pc, #424]	; 1d9f4 <main@@Base+0x1d40>
   1d848:	ldr	r0, [pc, r0]
   1d84c:	ldr	r0, [r0]
   1d850:	ldrb	r0, [r0]
   1d854:	cmp	r0, #0
   1d858:	bne	1d884 <main@@Base+0x1bd0>
   1d85c:	ldr	r0, [pc, #448]	; 1da24 <main@@Base+0x1d70>
   1d860:	add	r1, pc, r0
   1d864:	ldr	r0, [pc, #444]	; 1da28 <main@@Base+0x1d74>
   1d868:	ldr	r0, [pc, r0]
   1d86c:	ldr	r0, [r0]
   1d870:	bl	12814 <fprintf@plt>
   1d874:	str	r0, [sp, #32]
   1d878:	bl	1e0cc <main@@Base+0x2418>
   1d87c:	movw	r0, #1
   1d880:	bl	127cc <exit@plt>
   1d884:	bl	12838 <coda_init@plt>
   1d888:	cmp	r0, #0
   1d88c:	beq	1d8d8 <main@@Base+0x1c24>
   1d890:	ldr	r0, [pc, #392]	; 1da20 <main@@Base+0x1d6c>
   1d894:	ldr	r0, [pc, r0]
   1d898:	ldr	r0, [r0]
   1d89c:	str	r0, [sp, #28]
   1d8a0:	bl	129ac <coda_get_errno@plt>
   1d8a4:	ldr	r0, [r0]
   1d8a8:	bl	12964 <coda_errno_to_string@plt>
   1d8ac:	ldr	lr, [pc, #360]	; 1da1c <main@@Base+0x1d68>
   1d8b0:	add	r1, pc, lr
   1d8b4:	ldr	lr, [sp, #28]
   1d8b8:	str	r0, [sp, #24]
   1d8bc:	mov	r0, lr
   1d8c0:	ldr	r2, [sp, #24]
   1d8c4:	bl	12814 <fprintf@plt>
   1d8c8:	movw	r1, #1
   1d8cc:	str	r0, [sp, #20]
   1d8d0:	mov	r0, r1
   1d8d4:	bl	127cc <exit@plt>
   1d8d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d8dc:	cmp	r0, #0
   1d8e0:	movw	r0, #0
   1d8e4:	movne	r0, #1
   1d8e8:	mvn	r1, #0
   1d8ec:	eor	r0, r0, r1
   1d8f0:	and	r0, r0, #1
   1d8f4:	bl	12688 <coda_set_option_bypass_special_types@plt>
   1d8f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d8fc:	str	r0, [sp, #16]
   1d900:	mov	r0, r1
   1d904:	bl	12844 <coda_set_option_perform_conversions@plt>
   1d908:	ldr	r1, [pc, #232]	; 1d9f8 <main@@Base+0x1d44>
   1d90c:	ldr	r1, [pc, r1]
   1d910:	ldr	r1, [r1]
   1d914:	movw	lr, #0
   1d918:	cmp	r1, lr
   1d91c:	str	r0, [sp, #12]
   1d920:	beq	1d99c <main@@Base+0x1ce8>
   1d924:	ldr	r0, [pc, #212]	; 1da00 <main@@Base+0x1d4c>
   1d928:	add	r1, pc, r0
   1d92c:	ldr	r0, [pc, #208]	; 1da04 <main@@Base+0x1d50>
   1d930:	ldr	r0, [pc, r0]
   1d934:	ldr	r0, [r0]
   1d938:	bl	12604 <fopen@plt>
   1d93c:	ldr	r1, [pc, #184]	; 1d9fc <main@@Base+0x1d48>
   1d940:	ldr	r1, [pc, r1]
   1d944:	str	r0, [r1]
   1d948:	ldr	r0, [r1]
   1d94c:	movw	r1, #0
   1d950:	cmp	r0, r1
   1d954:	bne	1d998 <main@@Base+0x1ce4>
   1d958:	ldr	r0, [pc, #176]	; 1da10 <main@@Base+0x1d5c>
   1d95c:	add	r1, pc, r0
   1d960:	ldr	r0, [pc, #172]	; 1da14 <main@@Base+0x1d60>
   1d964:	ldr	r0, [pc, r0]
   1d968:	ldr	r2, [pc, #168]	; 1da18 <main@@Base+0x1d64>
   1d96c:	ldr	r2, [pc, r2]
   1d970:	ldr	r2, [r2]
   1d974:	ldr	r0, [r0]
   1d978:	str	r0, [sp, #8]
   1d97c:	mov	r0, r2
   1d980:	ldr	r2, [sp, #8]
   1d984:	bl	12814 <fprintf@plt>
   1d988:	movw	r1, #1
   1d98c:	str	r0, [sp, #4]
   1d990:	mov	r0, r1
   1d994:	bl	127cc <exit@plt>
   1d998:	b	1d99c <main@@Base+0x1ce8>
   1d99c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d9a0:	bl	1aa54 <print_yaml_data@@Base>
   1d9a4:	ldr	r0, [pc, #92]	; 1da08 <main@@Base+0x1d54>
   1d9a8:	ldr	r0, [pc, r0]
   1d9ac:	ldr	r0, [r0]
   1d9b0:	movw	lr, #0
   1d9b4:	cmp	r0, lr
   1d9b8:	beq	1d9d0 <main@@Base+0x1d1c>
   1d9bc:	ldr	r0, [pc, #72]	; 1da0c <main@@Base+0x1d58>
   1d9c0:	ldr	r0, [pc, r0]
   1d9c4:	ldr	r0, [r0]
   1d9c8:	bl	128b0 <fclose@plt>
   1d9cc:	str	r0, [sp]
   1d9d0:	bl	1276c <coda_done@plt>
   1d9d4:	sub	sp, fp, #8
   1d9d8:	pop	{r4, sl, fp, pc}
   1d9dc:	andeq	r3, r1, r4, asr #25
   1d9e0:	andeq	r3, r1, r8, ror #25
   1d9e4:	ldrdeq	r3, [r1], -ip
   1d9e8:	andeq	r3, r1, r8, lsl #25
   1d9ec:	muleq	r1, r8, ip
   1d9f0:	andeq	r3, r1, ip, ror r9
   1d9f4:	andeq	r3, r1, r4, ror #18
   1d9f8:	andeq	r3, r1, r8, lsl #17
   1d9fc:	andeq	r3, r1, r8, ror r8
   1da00:	ldrdeq	r2, [r0], -r9
   1da04:	andeq	r3, r1, r4, ror #16
   1da08:	andeq	r3, r1, ip, ror #15
   1da0c:	strdeq	r3, [r1], -r8
   1da10:	andeq	r2, r0, r7, lsr #31
   1da14:	andeq	r3, r1, r0, lsr r8
   1da18:	andeq	r3, r1, r4, asr #16
   1da1c:	andeq	r1, r0, r2, lsr #30
   1da20:	andeq	r3, r1, ip, lsl r9
   1da24:	andeq	r1, r0, ip, asr #31
   1da28:	andeq	r3, r1, r8, asr #18
   1da2c:	andeq	r2, r0, ip, asr #32
   1da30:	andeq	r3, r1, r8, asr #19
   1da34:	andeq	r3, r1, ip, ror #19
   1da38:			; <UNDEFINED> instruction: 0x00013ab0
   1da3c:	andeq	r3, r1, r0, lsl fp
   1da40:			; <UNDEFINED> instruction: 0x000033bd
   1da44:	muleq	r0, ip, r3
   1da48:	andeq	r3, r0, r1, asr r2
   1da4c:	andeq	r3, r0, r0, lsr r2
   1da50:	andeq	r3, r0, r3, lsr #5
   1da54:	andeq	r3, r0, r2, lsl #5
   1da58:	andeq	r3, r0, r9, ror r2
   1da5c:	andeq	r3, r0, r8, asr r2
   1da60:	andeq	r3, r0, r2, lsr #2
   1da64:	push	{r4, sl, fp, lr}
   1da68:	add	fp, sp, #8
   1da6c:	sub	sp, sp, #72	; 0x48
   1da70:	ldr	r2, [pc, #1484]	; 1e044 <main@@Base+0x2390>
   1da74:	ldr	r2, [pc, r2]
   1da78:	ldr	r3, [pc, #1480]	; 1e048 <main@@Base+0x2394>
   1da7c:	ldr	r3, [pc, r3]
   1da80:	ldr	ip, [pc, #1476]	; 1e04c <main@@Base+0x2398>
   1da84:	ldr	ip, [pc, ip]
   1da88:	ldr	lr, [pc, #1472]	; 1e050 <main@@Base+0x239c>
   1da8c:	ldr	lr, [pc, lr]
   1da90:	ldr	r4, [pc, #1468]	; 1e054 <main@@Base+0x23a0>
   1da94:	ldr	r4, [pc, r4]
   1da98:	str	r0, [fp, #-12]
   1da9c:	str	r1, [fp, #-16]
   1daa0:	movw	r0, #0
   1daa4:	str	r0, [fp, #-20]	; 0xffffffec
   1daa8:	str	r0, [fp, #-24]	; 0xffffffe8
   1daac:	str	r0, [fp, #-28]	; 0xffffffe4
   1dab0:	str	r0, [r4]
   1dab4:	str	r0, [lr]
   1dab8:	str	r0, [ip]
   1dabc:	ldr	r1, [r3]
   1dac0:	str	r1, [r2]
   1dac4:	movw	r1, #1
   1dac8:	str	r1, [fp, #-32]	; 0xffffffe0
   1dacc:	str	r0, [fp, #-36]	; 0xffffffdc
   1dad0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1dad4:	ldr	r1, [fp, #-12]
   1dad8:	cmp	r0, r1
   1dadc:	bge	1dea4 <main@@Base+0x21f0>
   1dae0:	ldr	r0, [fp, #-16]
   1dae4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1dae8:	add	r0, r0, r1, lsl #2
   1daec:	ldr	r0, [r0]
   1daf0:	ldr	r1, [pc, #1460]	; 1e0ac <main@@Base+0x23f8>
   1daf4:	add	r1, pc, r1
   1daf8:	bl	125d4 <strcmp@plt>
   1dafc:	cmp	r0, #0
   1db00:	beq	1db28 <main@@Base+0x1e74>
   1db04:	ldr	r0, [fp, #-16]
   1db08:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1db0c:	add	r0, r0, r1, lsl #2
   1db10:	ldr	r0, [r0]
   1db14:	ldr	r1, [pc, #1428]	; 1e0b0 <main@@Base+0x23fc>
   1db18:	add	r1, pc, r1
   1db1c:	bl	125d4 <strcmp@plt>
   1db20:	cmp	r0, #0
   1db24:	bne	1db34 <main@@Base+0x1e80>
   1db28:	movw	r0, #0
   1db2c:	str	r0, [fp, #-32]	; 0xffffffe0
   1db30:	b	1de90 <main@@Base+0x21dc>
   1db34:	ldr	r0, [fp, #-16]
   1db38:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1db3c:	add	r0, r0, r1, lsl #2
   1db40:	ldr	r0, [r0]
   1db44:	ldr	r1, [pc, #1384]	; 1e0b4 <main@@Base+0x2400>
   1db48:	add	r1, pc, r1
   1db4c:	bl	125d4 <strcmp@plt>
   1db50:	cmp	r0, #0
   1db54:	beq	1db7c <main@@Base+0x1ec8>
   1db58:	ldr	r0, [fp, #-16]
   1db5c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1db60:	add	r0, r0, r1, lsl #2
   1db64:	ldr	r0, [r0]
   1db68:	ldr	r1, [pc, #1352]	; 1e0b8 <main@@Base+0x2404>
   1db6c:	add	r1, pc, r1
   1db70:	bl	125d4 <strcmp@plt>
   1db74:	cmp	r0, #0
   1db78:	bne	1dbe0 <main@@Base+0x1f2c>
   1db7c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1db80:	add	r0, r0, #1
   1db84:	ldr	r1, [fp, #-12]
   1db88:	cmp	r0, r1
   1db8c:	bge	1dbe0 <main@@Base+0x1f2c>
   1db90:	ldr	r0, [fp, #-16]
   1db94:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1db98:	add	r1, r1, #1
   1db9c:	add	r0, r0, r1, lsl #2
   1dba0:	ldr	r0, [r0]
   1dba4:	ldrb	r0, [r0]
   1dba8:	cmp	r0, #45	; 0x2d
   1dbac:	beq	1dbe0 <main@@Base+0x1f2c>
   1dbb0:	ldr	r0, [pc, #1264]	; 1e0a8 <main@@Base+0x23f4>
   1dbb4:	ldr	r0, [pc, r0]
   1dbb8:	ldr	r1, [fp, #-16]
   1dbbc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1dbc0:	add	r2, r2, #1
   1dbc4:	add	r1, r1, r2, lsl #2
   1dbc8:	ldr	r1, [r1]
   1dbcc:	str	r1, [r0]
   1dbd0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1dbd4:	add	r0, r0, #1
   1dbd8:	str	r0, [fp, #-36]	; 0xffffffdc
   1dbdc:	b	1de8c <main@@Base+0x21d8>
   1dbe0:	ldr	r0, [fp, #-16]
   1dbe4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1dbe8:	add	r0, r0, r1, lsl #2
   1dbec:	ldr	r0, [r0]
   1dbf0:	ldr	r1, [pc, #1220]	; 1e0bc <main@@Base+0x2408>
   1dbf4:	add	r1, pc, r1
   1dbf8:	bl	125d4 <strcmp@plt>
   1dbfc:	cmp	r0, #0
   1dc00:	beq	1dc28 <main@@Base+0x1f74>
   1dc04:	ldr	r0, [fp, #-16]
   1dc08:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1dc0c:	add	r0, r0, r1, lsl #2
   1dc10:	ldr	r0, [r0]
   1dc14:	ldr	r1, [pc, #1188]	; 1e0c0 <main@@Base+0x240c>
   1dc18:	add	r1, pc, r1
   1dc1c:	bl	125d4 <strcmp@plt>
   1dc20:	cmp	r0, #0
   1dc24:	bne	1dc8c <main@@Base+0x1fd8>
   1dc28:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1dc2c:	add	r0, r0, #1
   1dc30:	ldr	r1, [fp, #-12]
   1dc34:	cmp	r0, r1
   1dc38:	bge	1dc8c <main@@Base+0x1fd8>
   1dc3c:	ldr	r0, [fp, #-16]
   1dc40:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1dc44:	add	r1, r1, #1
   1dc48:	add	r0, r0, r1, lsl #2
   1dc4c:	ldr	r0, [r0]
   1dc50:	ldrb	r0, [r0]
   1dc54:	cmp	r0, #45	; 0x2d
   1dc58:	beq	1dc8c <main@@Base+0x1fd8>
   1dc5c:	ldr	r0, [pc, #1088]	; 1e0a4 <main@@Base+0x23f0>
   1dc60:	ldr	r0, [pc, r0]
   1dc64:	ldr	r1, [fp, #-16]
   1dc68:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1dc6c:	add	r2, r2, #1
   1dc70:	add	r1, r1, r2, lsl #2
   1dc74:	ldr	r1, [r1]
   1dc78:	str	r1, [r0]
   1dc7c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1dc80:	add	r0, r0, #1
   1dc84:	str	r0, [fp, #-36]	; 0xffffffdc
   1dc88:	b	1de88 <main@@Base+0x21d4>
   1dc8c:	ldr	r0, [fp, #-16]
   1dc90:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1dc94:	add	r0, r0, r1, lsl #2
   1dc98:	ldr	r0, [r0]
   1dc9c:	ldr	r1, [pc, #1056]	; 1e0c4 <main@@Base+0x2410>
   1dca0:	add	r1, pc, r1
   1dca4:	bl	125d4 <strcmp@plt>
   1dca8:	cmp	r0, #0
   1dcac:	bne	1dd18 <main@@Base+0x2064>
   1dcb0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1dcb4:	add	r0, r0, #1
   1dcb8:	ldr	r1, [fp, #-12]
   1dcbc:	cmp	r0, r1
   1dcc0:	bge	1dd18 <main@@Base+0x2064>
   1dcc4:	ldr	r0, [fp, #-16]
   1dcc8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1dccc:	add	r1, r1, #1
   1dcd0:	add	r0, r0, r1, lsl #2
   1dcd4:	ldr	r0, [r0]
   1dcd8:	ldrb	r0, [r0]
   1dcdc:	cmp	r0, #45	; 0x2d
   1dce0:	beq	1dd18 <main@@Base+0x2064>
   1dce4:	ldr	r0, [fp, #-16]
   1dce8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1dcec:	add	r1, r1, #1
   1dcf0:	add	r0, r0, r1, lsl #2
   1dcf4:	ldr	r0, [r0]
   1dcf8:	bl	12958 <atoi@plt>
   1dcfc:	ldr	r1, [pc, #924]	; 1e0a0 <main@@Base+0x23ec>
   1dd00:	ldr	r1, [pc, r1]
   1dd04:	str	r0, [r1]
   1dd08:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1dd0c:	add	r0, r0, #1
   1dd10:	str	r0, [fp, #-36]	; 0xffffffdc
   1dd14:	b	1de84 <main@@Base+0x21d0>
   1dd18:	ldr	r0, [fp, #-16]
   1dd1c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1dd20:	add	r0, r0, r1, lsl #2
   1dd24:	ldr	r0, [r0]
   1dd28:	ldr	r1, [pc, #920]	; 1e0c8 <main@@Base+0x2414>
   1dd2c:	add	r1, pc, r1
   1dd30:	bl	125d4 <strcmp@plt>
   1dd34:	cmp	r0, #0
   1dd38:	bne	1de04 <main@@Base+0x2150>
   1dd3c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1dd40:	add	r0, r0, #3
   1dd44:	ldr	r1, [fp, #-12]
   1dd48:	cmp	r0, r1
   1dd4c:	bge	1de04 <main@@Base+0x2150>
   1dd50:	ldr	r0, [fp, #-16]
   1dd54:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1dd58:	add	r1, r1, #1
   1dd5c:	add	r0, r0, r1, lsl #2
   1dd60:	ldr	r0, [r0]
   1dd64:	ldrb	r0, [r0]
   1dd68:	cmp	r0, #45	; 0x2d
   1dd6c:	beq	1de04 <main@@Base+0x2150>
   1dd70:	ldr	r0, [fp, #-16]
   1dd74:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1dd78:	add	r1, r1, #2
   1dd7c:	add	r0, r0, r1, lsl #2
   1dd80:	ldr	r0, [r0]
   1dd84:	ldrb	r0, [r0]
   1dd88:	cmp	r0, #45	; 0x2d
   1dd8c:	beq	1de04 <main@@Base+0x2150>
   1dd90:	ldr	r0, [fp, #-16]
   1dd94:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1dd98:	add	r1, r1, #3
   1dd9c:	add	r0, r0, r1, lsl #2
   1dda0:	ldr	r0, [r0]
   1dda4:	ldrb	r0, [r0]
   1dda8:	cmp	r0, #45	; 0x2d
   1ddac:	beq	1de04 <main@@Base+0x2150>
   1ddb0:	ldr	r0, [fp, #-16]
   1ddb4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1ddb8:	add	r0, r0, r1, lsl #2
   1ddbc:	ldr	r0, [r0, #4]
   1ddc0:	str	r0, [fp, #-20]	; 0xffffffec
   1ddc4:	ldr	r0, [fp, #-16]
   1ddc8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1ddcc:	add	r0, r0, r1, lsl #2
   1ddd0:	ldr	r0, [r0, #8]
   1ddd4:	str	r0, [fp, #-24]	; 0xffffffe8
   1ddd8:	ldr	r0, [fp, #-16]
   1dddc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1dde0:	add	r1, r1, #3
   1dde4:	add	r0, r0, r1, lsl #2
   1dde8:	ldr	r0, [r0]
   1ddec:	bl	12958 <atoi@plt>
   1ddf0:	str	r0, [fp, #-28]	; 0xffffffe4
   1ddf4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ddf8:	add	r0, r0, #3
   1ddfc:	str	r0, [fp, #-36]	; 0xffffffdc
   1de00:	b	1de80 <main@@Base+0x21cc>
   1de04:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1de08:	ldr	r1, [fp, #-12]
   1de0c:	sub	r1, r1, #1
   1de10:	cmp	r0, r1
   1de14:	bne	1de54 <main@@Base+0x21a0>
   1de18:	ldr	r0, [fp, #-16]
   1de1c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1de20:	add	r0, r0, r1, lsl #2
   1de24:	ldr	r0, [r0]
   1de28:	ldrb	r0, [r0]
   1de2c:	cmp	r0, #45	; 0x2d
   1de30:	beq	1de54 <main@@Base+0x21a0>
   1de34:	ldr	r0, [pc, #608]	; 1e09c <main@@Base+0x23e8>
   1de38:	ldr	r0, [pc, r0]
   1de3c:	ldr	r1, [fp, #-16]
   1de40:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1de44:	add	r1, r1, r2, lsl #2
   1de48:	ldr	r1, [r1]
   1de4c:	str	r1, [r0]
   1de50:	b	1de7c <main@@Base+0x21c8>
   1de54:	ldr	r0, [pc, #568]	; 1e094 <main@@Base+0x23e0>
   1de58:	add	r1, pc, r0
   1de5c:	ldr	r0, [pc, #564]	; 1e098 <main@@Base+0x23e4>
   1de60:	ldr	r0, [pc, r0]
   1de64:	ldr	r0, [r0]
   1de68:	bl	12814 <fprintf@plt>
   1de6c:	str	r0, [sp, #40]	; 0x28
   1de70:	bl	1e0cc <main@@Base+0x2418>
   1de74:	movw	r0, #1
   1de78:	bl	127cc <exit@plt>
   1de7c:	b	1de80 <main@@Base+0x21cc>
   1de80:	b	1de84 <main@@Base+0x21d0>
   1de84:	b	1de88 <main@@Base+0x21d4>
   1de88:	b	1de8c <main@@Base+0x21d8>
   1de8c:	b	1de90 <main@@Base+0x21dc>
   1de90:	b	1de94 <main@@Base+0x21e0>
   1de94:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1de98:	add	r0, r0, #1
   1de9c:	str	r0, [fp, #-36]	; 0xffffffdc
   1dea0:	b	1dad0 <main@@Base+0x1e1c>
   1dea4:	ldr	r0, [pc, #428]	; 1e058 <main@@Base+0x23a4>
   1dea8:	ldr	r0, [pc, r0]
   1deac:	ldr	r0, [r0]
   1deb0:	movw	r1, #0
   1deb4:	cmp	r0, r1
   1deb8:	beq	1ded4 <main@@Base+0x2220>
   1debc:	ldr	r0, [pc, #408]	; 1e05c <main@@Base+0x23a8>
   1dec0:	ldr	r0, [pc, r0]
   1dec4:	ldr	r0, [r0]
   1dec8:	ldrb	r0, [r0]
   1decc:	cmp	r0, #0
   1ded0:	bne	1defc <main@@Base+0x2248>
   1ded4:	ldr	r0, [pc, #432]	; 1e08c <main@@Base+0x23d8>
   1ded8:	add	r1, pc, r0
   1dedc:	ldr	r0, [pc, #428]	; 1e090 <main@@Base+0x23dc>
   1dee0:	ldr	r0, [pc, r0]
   1dee4:	ldr	r0, [r0]
   1dee8:	bl	12814 <fprintf@plt>
   1deec:	str	r0, [sp, #36]	; 0x24
   1def0:	bl	1e0cc <main@@Base+0x2418>
   1def4:	movw	r0, #1
   1def8:	bl	127cc <exit@plt>
   1defc:	bl	12838 <coda_init@plt>
   1df00:	cmp	r0, #0
   1df04:	beq	1df50 <main@@Base+0x229c>
   1df08:	ldr	r0, [pc, #376]	; 1e088 <main@@Base+0x23d4>
   1df0c:	ldr	r0, [pc, r0]
   1df10:	ldr	r0, [r0]
   1df14:	str	r0, [sp, #32]
   1df18:	bl	129ac <coda_get_errno@plt>
   1df1c:	ldr	r0, [r0]
   1df20:	bl	12964 <coda_errno_to_string@plt>
   1df24:	ldr	lr, [pc, #344]	; 1e084 <main@@Base+0x23d0>
   1df28:	add	r1, pc, lr
   1df2c:	ldr	lr, [sp, #32]
   1df30:	str	r0, [sp, #28]
   1df34:	mov	r0, lr
   1df38:	ldr	r2, [sp, #28]
   1df3c:	bl	12814 <fprintf@plt>
   1df40:	movw	r1, #1
   1df44:	str	r0, [sp, #24]
   1df48:	mov	r0, r1
   1df4c:	bl	127cc <exit@plt>
   1df50:	movw	r0, #0
   1df54:	bl	12844 <coda_set_option_perform_conversions@plt>
   1df58:	ldr	lr, [fp, #-32]	; 0xffffffe0
   1df5c:	str	r0, [sp, #20]
   1df60:	mov	r0, lr
   1df64:	bl	125a4 <coda_set_option_use_fast_size_expressions@plt>
   1df68:	ldr	lr, [pc, #240]	; 1e060 <main@@Base+0x23ac>
   1df6c:	ldr	lr, [pc, lr]
   1df70:	ldr	lr, [lr]
   1df74:	movw	r1, #0
   1df78:	cmp	lr, r1
   1df7c:	str	r0, [sp, #16]
   1df80:	beq	1dffc <main@@Base+0x2348>
   1df84:	ldr	r0, [pc, #220]	; 1e068 <main@@Base+0x23b4>
   1df88:	add	r1, pc, r0
   1df8c:	ldr	r0, [pc, #216]	; 1e06c <main@@Base+0x23b8>
   1df90:	ldr	r0, [pc, r0]
   1df94:	ldr	r0, [r0]
   1df98:	bl	12604 <fopen@plt>
   1df9c:	ldr	r1, [pc, #192]	; 1e064 <main@@Base+0x23b0>
   1dfa0:	ldr	r1, [pc, r1]
   1dfa4:	str	r0, [r1]
   1dfa8:	ldr	r0, [r1]
   1dfac:	movw	r1, #0
   1dfb0:	cmp	r0, r1
   1dfb4:	bne	1dff8 <main@@Base+0x2344>
   1dfb8:	ldr	r0, [pc, #184]	; 1e078 <main@@Base+0x23c4>
   1dfbc:	add	r1, pc, r0
   1dfc0:	ldr	r0, [pc, #180]	; 1e07c <main@@Base+0x23c8>
   1dfc4:	ldr	r0, [pc, r0]
   1dfc8:	ldr	r2, [pc, #176]	; 1e080 <main@@Base+0x23cc>
   1dfcc:	ldr	r2, [pc, r2]
   1dfd0:	ldr	r2, [r2]
   1dfd4:	ldr	r0, [r0]
   1dfd8:	str	r0, [sp, #12]
   1dfdc:	mov	r0, r2
   1dfe0:	ldr	r2, [sp, #12]
   1dfe4:	bl	12814 <fprintf@plt>
   1dfe8:	movw	r1, #1
   1dfec:	str	r0, [sp, #8]
   1dff0:	mov	r0, r1
   1dff4:	bl	127cc <exit@plt>
   1dff8:	b	1dffc <main@@Base+0x2348>
   1dffc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e000:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e004:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e008:	bl	13e18 <print_debug_data@@Base>
   1e00c:	ldr	r0, [pc, #92]	; 1e070 <main@@Base+0x23bc>
   1e010:	ldr	r0, [pc, r0]
   1e014:	ldr	r0, [r0]
   1e018:	movw	r1, #0
   1e01c:	cmp	r0, r1
   1e020:	beq	1e038 <main@@Base+0x2384>
   1e024:	ldr	r0, [pc, #72]	; 1e074 <main@@Base+0x23c0>
   1e028:	ldr	r0, [pc, r0]
   1e02c:	ldr	r0, [r0]
   1e030:	bl	128b0 <fclose@plt>
   1e034:	str	r0, [sp, #4]
   1e038:	bl	1276c <coda_done@plt>
   1e03c:	sub	sp, fp, #8
   1e040:	pop	{r4, sl, fp, pc}
   1e044:	andeq	r3, r1, r4, asr #14
   1e048:	andeq	r3, r1, r8, ror #14
   1e04c:	andeq	r3, r1, ip, asr r7
   1e050:	andeq	r3, r1, r8, lsl #14
   1e054:	andeq	r3, r1, r8, lsl r7
   1e058:	andeq	r3, r1, r4, lsl #6
   1e05c:	andeq	r3, r1, ip, ror #5
   1e060:	andeq	r3, r1, r8, lsr #4
   1e064:	andeq	r3, r1, r8, lsl r2
   1e068:	andeq	r2, r0, r9, ror r9
   1e06c:	andeq	r3, r1, r4, lsl #4
   1e070:	andeq	r3, r1, r4, lsl #3
   1e074:	muleq	r1, r0, r1
   1e078:	andeq	r2, r0, r7, asr #18
   1e07c:	ldrdeq	r3, [r1], -r0
   1e080:	andeq	r3, r1, r4, ror #3
   1e084:	andeq	r1, r0, sl, lsr #17
   1e088:	andeq	r3, r1, r4, lsr #5
   1e08c:	andeq	r1, r0, r4, asr r9
   1e090:	ldrdeq	r3, [r1], -r0
   1e094:	ldrdeq	r1, [r0], -r4
   1e098:	andeq	r3, r1, r0, asr r3
   1e09c:	andeq	r3, r1, r4, ror r3
   1e0a0:	andeq	r3, r1, ip, ror #9
   1e0a4:	andeq	r3, r1, r0, lsl #11
   1e0a8:	andeq	r3, r1, r0, ror #11
   1e0ac:	andeq	r2, r0, r1, lsr #26
   1e0b0:	andeq	r2, r0, pc, lsr #28
   1e0b4:	andeq	r2, r0, r3, ror sp
   1e0b8:	andeq	r2, r0, r2, asr sp
   1e0bc:	andeq	r2, r0, r9, asr #26
   1e0c0:	andeq	r2, r0, r8, lsr #26
   1e0c4:	andeq	r2, r0, r7, asr #25
   1e0c8:	andeq	r2, r0, r7, asr #24
   1e0cc:	push	{fp, lr}
   1e0d0:	mov	fp, sp
   1e0d4:	sub	sp, sp, #472	; 0x1d8
   1e0d8:	ldr	r0, [pc, #2824]	; 1ebe8 <main@@Base+0x2f34>
   1e0dc:	add	r0, pc, r0
   1e0e0:	bl	125ec <printf@plt>
   1e0e4:	ldr	lr, [pc, #2808]	; 1ebe4 <main@@Base+0x2f30>
   1e0e8:	add	lr, pc, lr
   1e0ec:	str	r0, [fp, #-4]
   1e0f0:	mov	r0, lr
   1e0f4:	bl	125ec <printf@plt>
   1e0f8:	ldr	lr, [pc, #2784]	; 1ebe0 <main@@Base+0x2f2c>
   1e0fc:	add	lr, pc, lr
   1e100:	str	r0, [fp, #-8]
   1e104:	mov	r0, lr
   1e108:	bl	125ec <printf@plt>
   1e10c:	ldr	lr, [pc, #2760]	; 1ebdc <main@@Base+0x2f28>
   1e110:	add	lr, pc, lr
   1e114:	str	r0, [fp, #-12]
   1e118:	mov	r0, lr
   1e11c:	bl	125ec <printf@plt>
   1e120:	ldr	lr, [pc, #2736]	; 1ebd8 <main@@Base+0x2f24>
   1e124:	add	lr, pc, lr
   1e128:	str	r0, [fp, #-16]
   1e12c:	mov	r0, lr
   1e130:	bl	125ec <printf@plt>
   1e134:	ldr	lr, [pc, #2712]	; 1ebd4 <main@@Base+0x2f20>
   1e138:	add	lr, pc, lr
   1e13c:	str	r0, [fp, #-20]	; 0xffffffec
   1e140:	mov	r0, lr
   1e144:	bl	125ec <printf@plt>
   1e148:	ldr	lr, [pc, #2688]	; 1ebd0 <main@@Base+0x2f1c>
   1e14c:	add	lr, pc, lr
   1e150:	str	r0, [fp, #-24]	; 0xffffffe8
   1e154:	mov	r0, lr
   1e158:	bl	125ec <printf@plt>
   1e15c:	ldr	lr, [pc, #2664]	; 1ebcc <main@@Base+0x2f18>
   1e160:	add	lr, pc, lr
   1e164:	str	r0, [fp, #-28]	; 0xffffffe4
   1e168:	mov	r0, lr
   1e16c:	bl	125ec <printf@plt>
   1e170:	ldr	lr, [pc, #2640]	; 1ebc8 <main@@Base+0x2f14>
   1e174:	add	lr, pc, lr
   1e178:	str	r0, [fp, #-32]	; 0xffffffe0
   1e17c:	mov	r0, lr
   1e180:	bl	125ec <printf@plt>
   1e184:	ldr	lr, [pc, #2616]	; 1ebc4 <main@@Base+0x2f10>
   1e188:	add	lr, pc, lr
   1e18c:	str	r0, [fp, #-36]	; 0xffffffdc
   1e190:	mov	r0, lr
   1e194:	bl	125ec <printf@plt>
   1e198:	ldr	lr, [pc, #2592]	; 1ebc0 <main@@Base+0x2f0c>
   1e19c:	add	lr, pc, lr
   1e1a0:	str	r0, [fp, #-40]	; 0xffffffd8
   1e1a4:	mov	r0, lr
   1e1a8:	bl	125ec <printf@plt>
   1e1ac:	ldr	lr, [pc, #2568]	; 1ebbc <main@@Base+0x2f08>
   1e1b0:	add	lr, pc, lr
   1e1b4:	str	r0, [fp, #-44]	; 0xffffffd4
   1e1b8:	mov	r0, lr
   1e1bc:	bl	125ec <printf@plt>
   1e1c0:	ldr	lr, [pc, #2544]	; 1ebb8 <main@@Base+0x2f04>
   1e1c4:	add	lr, pc, lr
   1e1c8:	str	r0, [fp, #-48]	; 0xffffffd0
   1e1cc:	mov	r0, lr
   1e1d0:	bl	125ec <printf@plt>
   1e1d4:	ldr	lr, [pc, #2520]	; 1ebb4 <main@@Base+0x2f00>
   1e1d8:	add	lr, pc, lr
   1e1dc:	str	r0, [fp, #-52]	; 0xffffffcc
   1e1e0:	mov	r0, lr
   1e1e4:	bl	125ec <printf@plt>
   1e1e8:	ldr	lr, [pc, #2496]	; 1ebb0 <main@@Base+0x2efc>
   1e1ec:	add	lr, pc, lr
   1e1f0:	str	r0, [fp, #-56]	; 0xffffffc8
   1e1f4:	mov	r0, lr
   1e1f8:	bl	125ec <printf@plt>
   1e1fc:	ldr	lr, [pc, #2472]	; 1ebac <main@@Base+0x2ef8>
   1e200:	add	lr, pc, lr
   1e204:	str	r0, [fp, #-60]	; 0xffffffc4
   1e208:	mov	r0, lr
   1e20c:	bl	125ec <printf@plt>
   1e210:	ldr	lr, [pc, #2448]	; 1eba8 <main@@Base+0x2ef4>
   1e214:	add	lr, pc, lr
   1e218:	str	r0, [fp, #-64]	; 0xffffffc0
   1e21c:	mov	r0, lr
   1e220:	bl	125ec <printf@plt>
   1e224:	ldr	lr, [pc, #2424]	; 1eba4 <main@@Base+0x2ef0>
   1e228:	add	lr, pc, lr
   1e22c:	str	r0, [fp, #-68]	; 0xffffffbc
   1e230:	mov	r0, lr
   1e234:	bl	125ec <printf@plt>
   1e238:	ldr	lr, [pc, #2400]	; 1eba0 <main@@Base+0x2eec>
   1e23c:	add	lr, pc, lr
   1e240:	str	r0, [fp, #-72]	; 0xffffffb8
   1e244:	mov	r0, lr
   1e248:	bl	125ec <printf@plt>
   1e24c:	ldr	lr, [pc, #2376]	; 1eb9c <main@@Base+0x2ee8>
   1e250:	add	lr, pc, lr
   1e254:	str	r0, [fp, #-76]	; 0xffffffb4
   1e258:	mov	r0, lr
   1e25c:	bl	125ec <printf@plt>
   1e260:	ldr	lr, [pc, #2352]	; 1eb98 <main@@Base+0x2ee4>
   1e264:	add	lr, pc, lr
   1e268:	str	r0, [fp, #-80]	; 0xffffffb0
   1e26c:	mov	r0, lr
   1e270:	bl	125ec <printf@plt>
   1e274:	ldr	lr, [pc, #2328]	; 1eb94 <main@@Base+0x2ee0>
   1e278:	add	lr, pc, lr
   1e27c:	str	r0, [fp, #-84]	; 0xffffffac
   1e280:	mov	r0, lr
   1e284:	bl	125ec <printf@plt>
   1e288:	ldr	lr, [pc, #2304]	; 1eb90 <main@@Base+0x2edc>
   1e28c:	add	lr, pc, lr
   1e290:	str	r0, [fp, #-88]	; 0xffffffa8
   1e294:	mov	r0, lr
   1e298:	bl	125ec <printf@plt>
   1e29c:	ldr	lr, [pc, #2280]	; 1eb8c <main@@Base+0x2ed8>
   1e2a0:	add	lr, pc, lr
   1e2a4:	str	r0, [fp, #-92]	; 0xffffffa4
   1e2a8:	mov	r0, lr
   1e2ac:	bl	125ec <printf@plt>
   1e2b0:	ldr	lr, [pc, #2256]	; 1eb88 <main@@Base+0x2ed4>
   1e2b4:	add	lr, pc, lr
   1e2b8:	str	r0, [fp, #-96]	; 0xffffffa0
   1e2bc:	mov	r0, lr
   1e2c0:	bl	125ec <printf@plt>
   1e2c4:	ldr	lr, [pc, #2232]	; 1eb84 <main@@Base+0x2ed0>
   1e2c8:	add	lr, pc, lr
   1e2cc:	str	r0, [fp, #-100]	; 0xffffff9c
   1e2d0:	mov	r0, lr
   1e2d4:	bl	125ec <printf@plt>
   1e2d8:	ldr	lr, [pc, #2208]	; 1eb80 <main@@Base+0x2ecc>
   1e2dc:	add	lr, pc, lr
   1e2e0:	str	r0, [fp, #-104]	; 0xffffff98
   1e2e4:	mov	r0, lr
   1e2e8:	bl	125ec <printf@plt>
   1e2ec:	ldr	lr, [pc, #2184]	; 1eb7c <main@@Base+0x2ec8>
   1e2f0:	add	lr, pc, lr
   1e2f4:	str	r0, [fp, #-108]	; 0xffffff94
   1e2f8:	mov	r0, lr
   1e2fc:	bl	125ec <printf@plt>
   1e300:	ldr	lr, [pc, #2160]	; 1eb78 <main@@Base+0x2ec4>
   1e304:	add	lr, pc, lr
   1e308:	str	r0, [fp, #-112]	; 0xffffff90
   1e30c:	mov	r0, lr
   1e310:	bl	125ec <printf@plt>
   1e314:	ldr	lr, [pc, #2136]	; 1eb74 <main@@Base+0x2ec0>
   1e318:	add	lr, pc, lr
   1e31c:	str	r0, [fp, #-116]	; 0xffffff8c
   1e320:	mov	r0, lr
   1e324:	bl	125ec <printf@plt>
   1e328:	ldr	lr, [pc, #2112]	; 1eb70 <main@@Base+0x2ebc>
   1e32c:	add	lr, pc, lr
   1e330:	str	r0, [fp, #-120]	; 0xffffff88
   1e334:	mov	r0, lr
   1e338:	bl	125ec <printf@plt>
   1e33c:	ldr	lr, [pc, #2088]	; 1eb6c <main@@Base+0x2eb8>
   1e340:	add	lr, pc, lr
   1e344:	str	r0, [fp, #-124]	; 0xffffff84
   1e348:	mov	r0, lr
   1e34c:	bl	125ec <printf@plt>
   1e350:	ldr	lr, [pc, #2064]	; 1eb68 <main@@Base+0x2eb4>
   1e354:	add	lr, pc, lr
   1e358:	str	r0, [fp, #-128]	; 0xffffff80
   1e35c:	mov	r0, lr
   1e360:	bl	125ec <printf@plt>
   1e364:	ldr	lr, [pc, #2040]	; 1eb64 <main@@Base+0x2eb0>
   1e368:	add	lr, pc, lr
   1e36c:	str	r0, [fp, #-132]	; 0xffffff7c
   1e370:	mov	r0, lr
   1e374:	bl	125ec <printf@plt>
   1e378:	ldr	lr, [pc, #2016]	; 1eb60 <main@@Base+0x2eac>
   1e37c:	add	lr, pc, lr
   1e380:	str	r0, [fp, #-136]	; 0xffffff78
   1e384:	mov	r0, lr
   1e388:	bl	125ec <printf@plt>
   1e38c:	ldr	lr, [pc, #1992]	; 1eb5c <main@@Base+0x2ea8>
   1e390:	add	lr, pc, lr
   1e394:	str	r0, [fp, #-140]	; 0xffffff74
   1e398:	mov	r0, lr
   1e39c:	bl	125ec <printf@plt>
   1e3a0:	ldr	lr, [pc, #1968]	; 1eb58 <main@@Base+0x2ea4>
   1e3a4:	add	lr, pc, lr
   1e3a8:	str	r0, [fp, #-144]	; 0xffffff70
   1e3ac:	mov	r0, lr
   1e3b0:	bl	125ec <printf@plt>
   1e3b4:	ldr	lr, [pc, #1944]	; 1eb54 <main@@Base+0x2ea0>
   1e3b8:	add	lr, pc, lr
   1e3bc:	str	r0, [fp, #-148]	; 0xffffff6c
   1e3c0:	mov	r0, lr
   1e3c4:	bl	125ec <printf@plt>
   1e3c8:	ldr	lr, [pc, #1920]	; 1eb50 <main@@Base+0x2e9c>
   1e3cc:	add	lr, pc, lr
   1e3d0:	str	r0, [fp, #-152]	; 0xffffff68
   1e3d4:	mov	r0, lr
   1e3d8:	bl	125ec <printf@plt>
   1e3dc:	ldr	lr, [pc, #1896]	; 1eb4c <main@@Base+0x2e98>
   1e3e0:	add	lr, pc, lr
   1e3e4:	str	r0, [fp, #-156]	; 0xffffff64
   1e3e8:	mov	r0, lr
   1e3ec:	bl	125ec <printf@plt>
   1e3f0:	ldr	lr, [pc, #1872]	; 1eb48 <main@@Base+0x2e94>
   1e3f4:	add	lr, pc, lr
   1e3f8:	str	r0, [fp, #-160]	; 0xffffff60
   1e3fc:	mov	r0, lr
   1e400:	bl	125ec <printf@plt>
   1e404:	ldr	lr, [pc, #1848]	; 1eb44 <main@@Base+0x2e90>
   1e408:	add	lr, pc, lr
   1e40c:	str	r0, [fp, #-164]	; 0xffffff5c
   1e410:	mov	r0, lr
   1e414:	bl	125ec <printf@plt>
   1e418:	ldr	lr, [pc, #1824]	; 1eb40 <main@@Base+0x2e8c>
   1e41c:	add	lr, pc, lr
   1e420:	str	r0, [fp, #-168]	; 0xffffff58
   1e424:	mov	r0, lr
   1e428:	bl	125ec <printf@plt>
   1e42c:	ldr	lr, [pc, #1800]	; 1eb3c <main@@Base+0x2e88>
   1e430:	add	lr, pc, lr
   1e434:	str	r0, [fp, #-172]	; 0xffffff54
   1e438:	mov	r0, lr
   1e43c:	bl	125ec <printf@plt>
   1e440:	ldr	lr, [pc, #1776]	; 1eb38 <main@@Base+0x2e84>
   1e444:	add	lr, pc, lr
   1e448:	str	r0, [fp, #-176]	; 0xffffff50
   1e44c:	mov	r0, lr
   1e450:	bl	125ec <printf@plt>
   1e454:	ldr	lr, [pc, #1752]	; 1eb34 <main@@Base+0x2e80>
   1e458:	add	lr, pc, lr
   1e45c:	str	r0, [fp, #-180]	; 0xffffff4c
   1e460:	mov	r0, lr
   1e464:	bl	125ec <printf@plt>
   1e468:	ldr	lr, [pc, #1728]	; 1eb30 <main@@Base+0x2e7c>
   1e46c:	add	lr, pc, lr
   1e470:	str	r0, [fp, #-184]	; 0xffffff48
   1e474:	mov	r0, lr
   1e478:	bl	125ec <printf@plt>
   1e47c:	ldr	lr, [pc, #1704]	; 1eb2c <main@@Base+0x2e78>
   1e480:	add	lr, pc, lr
   1e484:	str	r0, [fp, #-188]	; 0xffffff44
   1e488:	mov	r0, lr
   1e48c:	bl	125ec <printf@plt>
   1e490:	ldr	lr, [pc, #1680]	; 1eb28 <main@@Base+0x2e74>
   1e494:	add	lr, pc, lr
   1e498:	str	r0, [fp, #-192]	; 0xffffff40
   1e49c:	mov	r0, lr
   1e4a0:	bl	125ec <printf@plt>
   1e4a4:	ldr	lr, [pc, #1656]	; 1eb24 <main@@Base+0x2e70>
   1e4a8:	add	lr, pc, lr
   1e4ac:	str	r0, [fp, #-196]	; 0xffffff3c
   1e4b0:	mov	r0, lr
   1e4b4:	bl	125ec <printf@plt>
   1e4b8:	ldr	lr, [pc, #1632]	; 1eb20 <main@@Base+0x2e6c>
   1e4bc:	add	lr, pc, lr
   1e4c0:	str	r0, [fp, #-200]	; 0xffffff38
   1e4c4:	mov	r0, lr
   1e4c8:	bl	125ec <printf@plt>
   1e4cc:	ldr	lr, [pc, #1608]	; 1eb1c <main@@Base+0x2e68>
   1e4d0:	add	lr, pc, lr
   1e4d4:	str	r0, [fp, #-204]	; 0xffffff34
   1e4d8:	mov	r0, lr
   1e4dc:	bl	125ec <printf@plt>
   1e4e0:	ldr	lr, [pc, #1584]	; 1eb18 <main@@Base+0x2e64>
   1e4e4:	add	lr, pc, lr
   1e4e8:	str	r0, [fp, #-208]	; 0xffffff30
   1e4ec:	mov	r0, lr
   1e4f0:	bl	125ec <printf@plt>
   1e4f4:	ldr	lr, [pc, #1560]	; 1eb14 <main@@Base+0x2e60>
   1e4f8:	add	lr, pc, lr
   1e4fc:	str	r0, [fp, #-212]	; 0xffffff2c
   1e500:	mov	r0, lr
   1e504:	bl	125ec <printf@plt>
   1e508:	ldr	lr, [pc, #1536]	; 1eb10 <main@@Base+0x2e5c>
   1e50c:	add	lr, pc, lr
   1e510:	str	r0, [fp, #-216]	; 0xffffff28
   1e514:	mov	r0, lr
   1e518:	bl	125ec <printf@plt>
   1e51c:	ldr	lr, [pc, #1512]	; 1eb0c <main@@Base+0x2e58>
   1e520:	add	lr, pc, lr
   1e524:	str	r0, [fp, #-220]	; 0xffffff24
   1e528:	mov	r0, lr
   1e52c:	bl	125ec <printf@plt>
   1e530:	ldr	lr, [pc, #1488]	; 1eb08 <main@@Base+0x2e54>
   1e534:	add	lr, pc, lr
   1e538:	str	r0, [fp, #-224]	; 0xffffff20
   1e53c:	mov	r0, lr
   1e540:	bl	125ec <printf@plt>
   1e544:	ldr	lr, [pc, #1464]	; 1eb04 <main@@Base+0x2e50>
   1e548:	add	lr, pc, lr
   1e54c:	str	r0, [fp, #-228]	; 0xffffff1c
   1e550:	mov	r0, lr
   1e554:	bl	125ec <printf@plt>
   1e558:	ldr	lr, [pc, #1440]	; 1eb00 <main@@Base+0x2e4c>
   1e55c:	add	lr, pc, lr
   1e560:	str	r0, [fp, #-232]	; 0xffffff18
   1e564:	mov	r0, lr
   1e568:	bl	125ec <printf@plt>
   1e56c:	ldr	lr, [pc, #1416]	; 1eafc <main@@Base+0x2e48>
   1e570:	add	lr, pc, lr
   1e574:	str	r0, [sp, #236]	; 0xec
   1e578:	mov	r0, lr
   1e57c:	bl	125ec <printf@plt>
   1e580:	ldr	lr, [pc, #1392]	; 1eaf8 <main@@Base+0x2e44>
   1e584:	add	lr, pc, lr
   1e588:	str	r0, [sp, #232]	; 0xe8
   1e58c:	mov	r0, lr
   1e590:	bl	125ec <printf@plt>
   1e594:	ldr	lr, [pc, #1368]	; 1eaf4 <main@@Base+0x2e40>
   1e598:	add	lr, pc, lr
   1e59c:	str	r0, [sp, #228]	; 0xe4
   1e5a0:	mov	r0, lr
   1e5a4:	bl	125ec <printf@plt>
   1e5a8:	ldr	lr, [pc, #1344]	; 1eaf0 <main@@Base+0x2e3c>
   1e5ac:	add	lr, pc, lr
   1e5b0:	str	r0, [sp, #224]	; 0xe0
   1e5b4:	mov	r0, lr
   1e5b8:	bl	125ec <printf@plt>
   1e5bc:	ldr	lr, [pc, #1320]	; 1eaec <main@@Base+0x2e38>
   1e5c0:	add	lr, pc, lr
   1e5c4:	str	r0, [sp, #220]	; 0xdc
   1e5c8:	mov	r0, lr
   1e5cc:	bl	125ec <printf@plt>
   1e5d0:	ldr	lr, [pc, #1296]	; 1eae8 <main@@Base+0x2e34>
   1e5d4:	add	lr, pc, lr
   1e5d8:	str	r0, [sp, #216]	; 0xd8
   1e5dc:	mov	r0, lr
   1e5e0:	bl	125ec <printf@plt>
   1e5e4:	ldr	lr, [pc, #1272]	; 1eae4 <main@@Base+0x2e30>
   1e5e8:	add	lr, pc, lr
   1e5ec:	str	r0, [sp, #212]	; 0xd4
   1e5f0:	mov	r0, lr
   1e5f4:	bl	125ec <printf@plt>
   1e5f8:	ldr	lr, [pc, #1248]	; 1eae0 <main@@Base+0x2e2c>
   1e5fc:	add	lr, pc, lr
   1e600:	str	r0, [sp, #208]	; 0xd0
   1e604:	mov	r0, lr
   1e608:	bl	125ec <printf@plt>
   1e60c:	ldr	lr, [pc, #1224]	; 1eadc <main@@Base+0x2e28>
   1e610:	add	lr, pc, lr
   1e614:	str	r0, [sp, #204]	; 0xcc
   1e618:	mov	r0, lr
   1e61c:	bl	125ec <printf@plt>
   1e620:	ldr	lr, [pc, #1200]	; 1ead8 <main@@Base+0x2e24>
   1e624:	add	lr, pc, lr
   1e628:	str	r0, [sp, #200]	; 0xc8
   1e62c:	mov	r0, lr
   1e630:	bl	125ec <printf@plt>
   1e634:	ldr	lr, [pc, #1176]	; 1ead4 <main@@Base+0x2e20>
   1e638:	add	lr, pc, lr
   1e63c:	str	r0, [sp, #196]	; 0xc4
   1e640:	mov	r0, lr
   1e644:	bl	125ec <printf@plt>
   1e648:	ldr	lr, [pc, #1152]	; 1ead0 <main@@Base+0x2e1c>
   1e64c:	add	lr, pc, lr
   1e650:	str	r0, [sp, #192]	; 0xc0
   1e654:	mov	r0, lr
   1e658:	bl	125ec <printf@plt>
   1e65c:	ldr	lr, [pc, #1128]	; 1eacc <main@@Base+0x2e18>
   1e660:	add	lr, pc, lr
   1e664:	str	r0, [sp, #188]	; 0xbc
   1e668:	mov	r0, lr
   1e66c:	bl	125ec <printf@plt>
   1e670:	ldr	lr, [pc, #1104]	; 1eac8 <main@@Base+0x2e14>
   1e674:	add	lr, pc, lr
   1e678:	str	r0, [sp, #184]	; 0xb8
   1e67c:	mov	r0, lr
   1e680:	bl	125ec <printf@plt>
   1e684:	ldr	lr, [pc, #1080]	; 1eac4 <main@@Base+0x2e10>
   1e688:	add	lr, pc, lr
   1e68c:	str	r0, [sp, #180]	; 0xb4
   1e690:	mov	r0, lr
   1e694:	bl	125ec <printf@plt>
   1e698:	ldr	lr, [pc, #1056]	; 1eac0 <main@@Base+0x2e0c>
   1e69c:	add	lr, pc, lr
   1e6a0:	str	r0, [sp, #176]	; 0xb0
   1e6a4:	mov	r0, lr
   1e6a8:	bl	125ec <printf@plt>
   1e6ac:	ldr	lr, [pc, #1032]	; 1eabc <main@@Base+0x2e08>
   1e6b0:	add	lr, pc, lr
   1e6b4:	str	r0, [sp, #172]	; 0xac
   1e6b8:	mov	r0, lr
   1e6bc:	bl	125ec <printf@plt>
   1e6c0:	ldr	lr, [pc, #1008]	; 1eab8 <main@@Base+0x2e04>
   1e6c4:	add	lr, pc, lr
   1e6c8:	str	r0, [sp, #168]	; 0xa8
   1e6cc:	mov	r0, lr
   1e6d0:	bl	125ec <printf@plt>
   1e6d4:	ldr	lr, [pc, #984]	; 1eab4 <main@@Base+0x2e00>
   1e6d8:	add	lr, pc, lr
   1e6dc:	str	r0, [sp, #164]	; 0xa4
   1e6e0:	mov	r0, lr
   1e6e4:	bl	125ec <printf@plt>
   1e6e8:	ldr	lr, [pc, #960]	; 1eab0 <main@@Base+0x2dfc>
   1e6ec:	add	lr, pc, lr
   1e6f0:	str	r0, [sp, #160]	; 0xa0
   1e6f4:	mov	r0, lr
   1e6f8:	bl	125ec <printf@plt>
   1e6fc:	ldr	lr, [pc, #936]	; 1eaac <main@@Base+0x2df8>
   1e700:	add	lr, pc, lr
   1e704:	str	r0, [sp, #156]	; 0x9c
   1e708:	mov	r0, lr
   1e70c:	bl	125ec <printf@plt>
   1e710:	ldr	lr, [pc, #912]	; 1eaa8 <main@@Base+0x2df4>
   1e714:	add	lr, pc, lr
   1e718:	str	r0, [sp, #152]	; 0x98
   1e71c:	mov	r0, lr
   1e720:	bl	125ec <printf@plt>
   1e724:	ldr	lr, [pc, #888]	; 1eaa4 <main@@Base+0x2df0>
   1e728:	add	lr, pc, lr
   1e72c:	str	r0, [sp, #148]	; 0x94
   1e730:	mov	r0, lr
   1e734:	bl	125ec <printf@plt>
   1e738:	ldr	lr, [pc, #864]	; 1eaa0 <main@@Base+0x2dec>
   1e73c:	add	lr, pc, lr
   1e740:	str	r0, [sp, #144]	; 0x90
   1e744:	mov	r0, lr
   1e748:	bl	125ec <printf@plt>
   1e74c:	ldr	lr, [pc, #840]	; 1ea9c <main@@Base+0x2de8>
   1e750:	add	lr, pc, lr
   1e754:	str	r0, [sp, #140]	; 0x8c
   1e758:	mov	r0, lr
   1e75c:	bl	125ec <printf@plt>
   1e760:	ldr	lr, [pc, #816]	; 1ea98 <main@@Base+0x2de4>
   1e764:	add	lr, pc, lr
   1e768:	str	r0, [sp, #136]	; 0x88
   1e76c:	mov	r0, lr
   1e770:	bl	125ec <printf@plt>
   1e774:	ldr	lr, [pc, #792]	; 1ea94 <main@@Base+0x2de0>
   1e778:	add	lr, pc, lr
   1e77c:	str	r0, [sp, #132]	; 0x84
   1e780:	mov	r0, lr
   1e784:	bl	125ec <printf@plt>
   1e788:	ldr	lr, [pc, #768]	; 1ea90 <main@@Base+0x2ddc>
   1e78c:	add	lr, pc, lr
   1e790:	str	r0, [sp, #128]	; 0x80
   1e794:	mov	r0, lr
   1e798:	bl	125ec <printf@plt>
   1e79c:	ldr	lr, [pc, #744]	; 1ea8c <main@@Base+0x2dd8>
   1e7a0:	add	lr, pc, lr
   1e7a4:	str	r0, [sp, #124]	; 0x7c
   1e7a8:	mov	r0, lr
   1e7ac:	bl	125ec <printf@plt>
   1e7b0:	ldr	lr, [pc, #720]	; 1ea88 <main@@Base+0x2dd4>
   1e7b4:	add	lr, pc, lr
   1e7b8:	str	r0, [sp, #120]	; 0x78
   1e7bc:	mov	r0, lr
   1e7c0:	bl	125ec <printf@plt>
   1e7c4:	ldr	lr, [pc, #696]	; 1ea84 <main@@Base+0x2dd0>
   1e7c8:	add	lr, pc, lr
   1e7cc:	str	r0, [sp, #116]	; 0x74
   1e7d0:	mov	r0, lr
   1e7d4:	bl	125ec <printf@plt>
   1e7d8:	ldr	lr, [pc, #672]	; 1ea80 <main@@Base+0x2dcc>
   1e7dc:	add	lr, pc, lr
   1e7e0:	str	r0, [sp, #112]	; 0x70
   1e7e4:	mov	r0, lr
   1e7e8:	bl	125ec <printf@plt>
   1e7ec:	ldr	lr, [pc, #648]	; 1ea7c <main@@Base+0x2dc8>
   1e7f0:	add	lr, pc, lr
   1e7f4:	str	r0, [sp, #108]	; 0x6c
   1e7f8:	mov	r0, lr
   1e7fc:	bl	125ec <printf@plt>
   1e800:	ldr	lr, [pc, #624]	; 1ea78 <main@@Base+0x2dc4>
   1e804:	add	lr, pc, lr
   1e808:	str	r0, [sp, #104]	; 0x68
   1e80c:	mov	r0, lr
   1e810:	bl	125ec <printf@plt>
   1e814:	ldr	lr, [pc, #600]	; 1ea74 <main@@Base+0x2dc0>
   1e818:	add	lr, pc, lr
   1e81c:	str	r0, [sp, #100]	; 0x64
   1e820:	mov	r0, lr
   1e824:	bl	125ec <printf@plt>
   1e828:	ldr	lr, [pc, #576]	; 1ea70 <main@@Base+0x2dbc>
   1e82c:	add	lr, pc, lr
   1e830:	str	r0, [sp, #96]	; 0x60
   1e834:	mov	r0, lr
   1e838:	bl	125ec <printf@plt>
   1e83c:	ldr	lr, [pc, #552]	; 1ea6c <main@@Base+0x2db8>
   1e840:	add	lr, pc, lr
   1e844:	str	r0, [sp, #92]	; 0x5c
   1e848:	mov	r0, lr
   1e84c:	bl	125ec <printf@plt>
   1e850:	ldr	lr, [pc, #528]	; 1ea68 <main@@Base+0x2db4>
   1e854:	add	lr, pc, lr
   1e858:	str	r0, [sp, #88]	; 0x58
   1e85c:	mov	r0, lr
   1e860:	bl	125ec <printf@plt>
   1e864:	ldr	lr, [pc, #504]	; 1ea64 <main@@Base+0x2db0>
   1e868:	add	lr, pc, lr
   1e86c:	str	r0, [sp, #84]	; 0x54
   1e870:	mov	r0, lr
   1e874:	bl	125ec <printf@plt>
   1e878:	ldr	lr, [pc, #480]	; 1ea60 <main@@Base+0x2dac>
   1e87c:	add	lr, pc, lr
   1e880:	str	r0, [sp, #80]	; 0x50
   1e884:	mov	r0, lr
   1e888:	bl	125ec <printf@plt>
   1e88c:	ldr	lr, [pc, #456]	; 1ea5c <main@@Base+0x2da8>
   1e890:	add	lr, pc, lr
   1e894:	str	r0, [sp, #76]	; 0x4c
   1e898:	mov	r0, lr
   1e89c:	bl	125ec <printf@plt>
   1e8a0:	ldr	lr, [pc, #432]	; 1ea58 <main@@Base+0x2da4>
   1e8a4:	add	lr, pc, lr
   1e8a8:	str	r0, [sp, #72]	; 0x48
   1e8ac:	mov	r0, lr
   1e8b0:	bl	125ec <printf@plt>
   1e8b4:	ldr	lr, [pc, #408]	; 1ea54 <main@@Base+0x2da0>
   1e8b8:	add	lr, pc, lr
   1e8bc:	str	r0, [sp, #68]	; 0x44
   1e8c0:	mov	r0, lr
   1e8c4:	bl	125ec <printf@plt>
   1e8c8:	ldr	lr, [pc, #384]	; 1ea50 <main@@Base+0x2d9c>
   1e8cc:	add	lr, pc, lr
   1e8d0:	str	r0, [sp, #64]	; 0x40
   1e8d4:	mov	r0, lr
   1e8d8:	bl	125ec <printf@plt>
   1e8dc:	ldr	lr, [pc, #360]	; 1ea4c <main@@Base+0x2d98>
   1e8e0:	add	lr, pc, lr
   1e8e4:	str	r0, [sp, #60]	; 0x3c
   1e8e8:	mov	r0, lr
   1e8ec:	bl	125ec <printf@plt>
   1e8f0:	ldr	lr, [pc, #336]	; 1ea48 <main@@Base+0x2d94>
   1e8f4:	add	lr, pc, lr
   1e8f8:	str	r0, [sp, #56]	; 0x38
   1e8fc:	mov	r0, lr
   1e900:	bl	125ec <printf@plt>
   1e904:	ldr	lr, [pc, #312]	; 1ea44 <main@@Base+0x2d90>
   1e908:	add	lr, pc, lr
   1e90c:	str	r0, [sp, #52]	; 0x34
   1e910:	mov	r0, lr
   1e914:	bl	125ec <printf@plt>
   1e918:	ldr	lr, [pc, #288]	; 1ea40 <main@@Base+0x2d8c>
   1e91c:	add	lr, pc, lr
   1e920:	str	r0, [sp, #48]	; 0x30
   1e924:	mov	r0, lr
   1e928:	bl	125ec <printf@plt>
   1e92c:	ldr	lr, [pc, #264]	; 1ea3c <main@@Base+0x2d88>
   1e930:	add	lr, pc, lr
   1e934:	str	r0, [sp, #44]	; 0x2c
   1e938:	mov	r0, lr
   1e93c:	bl	125ec <printf@plt>
   1e940:	ldr	lr, [pc, #240]	; 1ea38 <main@@Base+0x2d84>
   1e944:	add	lr, pc, lr
   1e948:	str	r0, [sp, #40]	; 0x28
   1e94c:	mov	r0, lr
   1e950:	bl	125ec <printf@plt>
   1e954:	ldr	lr, [pc, #216]	; 1ea34 <main@@Base+0x2d80>
   1e958:	add	lr, pc, lr
   1e95c:	str	r0, [sp, #36]	; 0x24
   1e960:	mov	r0, lr
   1e964:	bl	125ec <printf@plt>
   1e968:	ldr	lr, [pc, #192]	; 1ea30 <main@@Base+0x2d7c>
   1e96c:	add	lr, pc, lr
   1e970:	str	r0, [sp, #32]
   1e974:	mov	r0, lr
   1e978:	bl	125ec <printf@plt>
   1e97c:	ldr	lr, [pc, #168]	; 1ea2c <main@@Base+0x2d78>
   1e980:	add	lr, pc, lr
   1e984:	str	r0, [sp, #28]
   1e988:	mov	r0, lr
   1e98c:	bl	125ec <printf@plt>
   1e990:	ldr	lr, [pc, #144]	; 1ea28 <main@@Base+0x2d74>
   1e994:	add	lr, pc, lr
   1e998:	str	r0, [sp, #24]
   1e99c:	mov	r0, lr
   1e9a0:	bl	125ec <printf@plt>
   1e9a4:	ldr	lr, [pc, #120]	; 1ea24 <main@@Base+0x2d70>
   1e9a8:	add	lr, pc, lr
   1e9ac:	str	r0, [sp, #20]
   1e9b0:	mov	r0, lr
   1e9b4:	bl	125ec <printf@plt>
   1e9b8:	ldr	lr, [pc, #96]	; 1ea20 <main@@Base+0x2d6c>
   1e9bc:	add	lr, pc, lr
   1e9c0:	str	r0, [sp, #16]
   1e9c4:	mov	r0, lr
   1e9c8:	bl	125ec <printf@plt>
   1e9cc:	ldr	lr, [pc, #72]	; 1ea1c <main@@Base+0x2d68>
   1e9d0:	add	lr, pc, lr
   1e9d4:	str	r0, [sp, #12]
   1e9d8:	mov	r0, lr
   1e9dc:	bl	125ec <printf@plt>
   1e9e0:	ldr	lr, [pc, #48]	; 1ea18 <main@@Base+0x2d64>
   1e9e4:	add	lr, pc, lr
   1e9e8:	str	r0, [sp, #8]
   1e9ec:	mov	r0, lr
   1e9f0:	bl	125ec <printf@plt>
   1e9f4:	ldr	lr, [pc, #24]	; 1ea14 <main@@Base+0x2d60>
   1e9f8:	add	lr, pc, lr
   1e9fc:	str	r0, [sp, #4]
   1ea00:	mov	r0, lr
   1ea04:	bl	125ec <printf@plt>
   1ea08:	str	r0, [sp]
   1ea0c:	mov	sp, fp
   1ea10:	pop	{fp, pc}
   1ea14:	andeq	r1, r0, r3, lsr pc
   1ea18:	muleq	r0, ip, sp
   1ea1c:	andeq	r1, r0, r0, ror sp
   1ea20:	andeq	r1, r0, sp, lsr sp
   1ea24:	andeq	r1, r0, r4, lsl #26
   1ea28:	andeq	r1, r0, ip, ror #25
   1ea2c:			; <UNDEFINED> instruction: 0x00001cb6
   1ea30:	andeq	r1, r0, fp, ror ip
   1ea34:	ldrdeq	r1, [r0], -r3
   1ea38:	andeq	r1, r0, r0, ror ip
   1ea3c:	andeq	r1, r0, r8, ror #24
   1ea40:	andeq	r2, r0, pc
   1ea44:	andeq	r1, r0, r1, ror ip
   1ea48:	andeq	r1, r0, ip, ror #24
   1ea4c:	andeq	r2, r0, fp, asr #32
   1ea50:	andeq	r1, r0, lr, asr ip
   1ea54:	andeq	r1, r0, r4, lsr #24
   1ea58:	strdeq	r1, [r0], -r8
   1ea5c:	andeq	r1, r0, r0, asr #23
   1ea60:	andeq	r1, r0, r5, lsl #23
   1ea64:	andeq	r1, r0, r8, ror fp
   1ea68:	andeq	r1, r0, r9, lsr #17
   1ea6c:	andeq	r1, r0, r4, ror r8
   1ea70:	andeq	r1, r0, r9, ror #16
   1ea74:	muleq	r0, r7, r5
   1ea78:	andeq	r1, r0, r6, lsl #11
   1ea7c:			; <UNDEFINED> instruction: 0x00001bba
   1ea80:	muleq	r0, sp, fp
   1ea84:	muleq	r0, r9, fp
   1ea88:	andeq	r1, r0, lr, ror fp
   1ea8c:	andeq	r1, r0, r7, asr #22
   1ea90:	andeq	r1, r0, r0, lsl fp
   1ea94:	ldrdeq	r1, [r0], -fp
   1ea98:	andeq	r2, r0, r7, asr #3
   1ea9c:	ldrdeq	r1, [r0], -r5
   1eaa0:	muleq	r0, sl, r4
   1eaa4:	andeq	r1, r0, sp, asr r4
   1eaa8:	andeq	r1, r0, r1, asr r4
   1eaac:	strdeq	r1, [r0], -sp
   1eab0:	andeq	r1, r0, r8, asr #19
   1eab4:			; <UNDEFINED> instruction: 0x000019bd
   1eab8:	andeq	r1, r0, fp, ror #13
   1eabc:	ldrdeq	r1, [r0], -sl
   1eac0:			; <UNDEFINED> instruction: 0x000012b8
   1eac4:	andeq	r1, r0, r5, lsr #5
   1eac8:			; <UNDEFINED> instruction: 0x00001bbf
   1eacc:	andeq	r1, r0, r6, lsl #23
   1ead0:			; <UNDEFINED> instruction: 0x000019b5
   1ead4:	andeq	r1, r0, fp, lsr #19
   1ead8:	andeq	r1, r0, fp, lsr #23
   1eadc:	andeq	r1, r0, r2, lsl #23
   1eae0:	andeq	r1, r0, pc, asr #22
   1eae4:	andeq	r2, r0, r3, asr #6
   1eae8:	andeq	r1, r0, r1, asr r6
   1eaec:	andeq	r1, r0, r6, lsl r6
   1eaf0:	ldrdeq	r1, [r0], -r9
   1eaf4:	andeq	r1, r0, sp, asr #11
   1eaf8:	andeq	r1, r0, r9, ror fp
   1eafc:	andeq	r1, r0, r4, asr #22
   1eb00:	andeq	r1, r0, r9, lsr fp
   1eb04:	andeq	r1, r0, r7, ror #16
   1eb08:	andeq	r1, r0, r6, asr r8
   1eb0c:	andeq	r1, r0, r4, lsr r4
   1eb10:	andeq	r1, r0, r1, lsr #8
   1eb14:	andeq	r1, r0, r1, asr fp
   1eb18:	andeq	r1, r0, sp, lsl fp
   1eb1c:	andeq	r1, r0, r3, lsl fp
   1eb20:	andeq	r1, r0, r0, lsl fp
   1eb24:	andeq	r1, r0, r7, ror #21
   1eb28:			; <UNDEFINED> instruction: 0x00001ab4
   1eb2c:	andeq	r2, r0, fp, lsr #9
   1eb30:			; <UNDEFINED> instruction: 0x000017b9
   1eb34:	andeq	r1, r0, lr, ror r7
   1eb38:	andeq	r1, r0, r1, asr #14
   1eb3c:	andeq	r1, r0, r5, lsr r7
   1eb40:	ldrdeq	r1, [r0], -ip
   1eb44:	andeq	r1, r0, lr, asr #21
   1eb48:	muleq	r0, r5, sl
   1eb4c:	andeq	r1, r0, r0, ror sl
   1eb50:	andeq	r1, r0, r8, lsr sl
   1eb54:	andeq	r1, r0, fp, lsr #20
   1eb58:	andeq	r1, r0, fp, lsl #20
   1eb5c:	strdeq	r1, [r0], -sl
   1eb60:	andeq	r1, r0, r2, asr #19
   1eb64:			; <UNDEFINED> instruction: 0x000019bd
   1eb68:	andeq	r1, r0, pc, lsl #19
   1eb6c:	andeq	r1, r0, sl, lsl #19
   1eb70:	muleq	r0, r3, r6
   1eb74:	andeq	r1, r0, r7, ror r6
   1eb78:	andeq	r1, r0, r0, asr r6
   1eb7c:	andeq	r1, r0, sp, lsr r6
   1eb80:	andeq	r1, r0, r6, ror #11
   1eb84:	andeq	r1, r0, r5, asr #19
   1eb88:	muleq	r0, r0, r9
   1eb8c:	andeq	r2, r0, fp, lsl #13
   1eb90:	muleq	r0, r9, r9
   1eb94:	andeq	r1, r0, lr, asr r9
   1eb98:	andeq	r1, r0, r1, lsr #18
   1eb9c:	andeq	r1, r0, r5, lsl r9
   1eba0:	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
   1eba4:	andeq	r1, r0, ip, asr #17
   1eba8:	andeq	r1, r0, r6, asr #17
   1ebac:	andeq	r1, r0, r8, lsr #17
   1ebb0:	andeq	r1, r0, r1, lsr #17
   1ebb4:	andeq	r1, r0, sl, lsl #17
   1ebb8:	andeq	r1, r0, r6, lsl #17
   1ebbc:	andeq	r1, r0, r0, ror r8
   1ebc0:	andeq	r1, r0, ip, ror #16
   1ebc4:	andeq	r1, r0, r7, lsr r8
   1ebc8:	andeq	r1, r0, fp, lsl r8
   1ebcc:	strdeq	r1, [r0], -r4
   1ebd0:	andeq	r1, r0, r1, ror #15
   1ebd4:			; <UNDEFINED> instruction: 0x000017bd
   1ebd8:			; <UNDEFINED> instruction: 0x000017b5
   1ebdc:			; <UNDEFINED> instruction: 0x000017b2
   1ebe0:	muleq	r0, r9, r7
   1ebe4:	andeq	r1, r0, r6, ror #14
   1ebe8:	andeq	r1, r0, sl, ror #14
   1ebec:	push	{fp, lr}
   1ebf0:	mov	fp, sp
   1ebf4:	sub	sp, sp, #16
   1ebf8:	bl	129a0 <coda_get_libcoda_version@plt>
   1ebfc:	ldr	lr, [pc, #76]	; 1ec50 <main@@Base+0x2f9c>
   1ec00:	add	lr, pc, lr
   1ec04:	str	r0, [fp, #-4]
   1ec08:	mov	r0, lr
   1ec0c:	ldr	r1, [fp, #-4]
   1ec10:	bl	125ec <printf@plt>
   1ec14:	ldr	r1, [pc, #48]	; 1ec4c <main@@Base+0x2f98>
   1ec18:	add	r1, pc, r1
   1ec1c:	str	r0, [sp, #8]
   1ec20:	mov	r0, r1
   1ec24:	bl	125ec <printf@plt>
   1ec28:	ldr	r1, [pc, #24]	; 1ec48 <main@@Base+0x2f94>
   1ec2c:	add	r1, pc, r1
   1ec30:	str	r0, [sp, #4]
   1ec34:	mov	r0, r1
   1ec38:	bl	125ec <printf@plt>
   1ec3c:	str	r0, [sp]
   1ec40:	mov	sp, fp
   1ec44:	pop	{fp, pc}
   1ec48:	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
   1ec4c:			; <UNDEFINED> instruction: 0x00001bbe
   1ec50:	andeq	r1, r0, r1, asr #23
   1ec54:	cmp	r3, #0
   1ec58:	cmpeq	r2, #0
   1ec5c:	bne	1ec80 <main@@Base+0x2fcc>
   1ec60:	cmp	r1, #0
   1ec64:	movlt	r1, #-2147483648	; 0x80000000
   1ec68:	movlt	r0, #0
   1ec6c:	blt	1ec7c <main@@Base+0x2fc8>
   1ec70:	cmpeq	r0, #0
   1ec74:	mvnne	r1, #-2147483648	; 0x80000000
   1ec78:	mvnne	r0, #0
   1ec7c:	b	1ed28 <main@@Base+0x3074>
   1ec80:	sub	sp, sp, #8
   1ec84:	push	{sp, lr}
   1ec88:	cmp	r1, #0
   1ec8c:	blt	1ecac <main@@Base+0x2ff8>
   1ec90:	cmp	r3, #0
   1ec94:	blt	1ece0 <main@@Base+0x302c>
   1ec98:	bl	1ed38 <main@@Base+0x3084>
   1ec9c:	ldr	lr, [sp, #4]
   1eca0:	add	sp, sp, #8
   1eca4:	pop	{r2, r3}
   1eca8:	bx	lr
   1ecac:	rsbs	r0, r0, #0
   1ecb0:	sbc	r1, r1, r1, lsl #1
   1ecb4:	cmp	r3, #0
   1ecb8:	blt	1ed04 <main@@Base+0x3050>
   1ecbc:	bl	1ed38 <main@@Base+0x3084>
   1ecc0:	ldr	lr, [sp, #4]
   1ecc4:	add	sp, sp, #8
   1ecc8:	pop	{r2, r3}
   1eccc:	rsbs	r0, r0, #0
   1ecd0:	sbc	r1, r1, r1, lsl #1
   1ecd4:	rsbs	r2, r2, #0
   1ecd8:	sbc	r3, r3, r3, lsl #1
   1ecdc:	bx	lr
   1ece0:	rsbs	r2, r2, #0
   1ece4:	sbc	r3, r3, r3, lsl #1
   1ece8:	bl	1ed38 <main@@Base+0x3084>
   1ecec:	ldr	lr, [sp, #4]
   1ecf0:	add	sp, sp, #8
   1ecf4:	pop	{r2, r3}
   1ecf8:	rsbs	r0, r0, #0
   1ecfc:	sbc	r1, r1, r1, lsl #1
   1ed00:	bx	lr
   1ed04:	rsbs	r2, r2, #0
   1ed08:	sbc	r3, r3, r3, lsl #1
   1ed0c:	bl	1ed38 <main@@Base+0x3084>
   1ed10:	ldr	lr, [sp, #4]
   1ed14:	add	sp, sp, #8
   1ed18:	pop	{r2, r3}
   1ed1c:	rsbs	r2, r2, #0
   1ed20:	sbc	r3, r3, r3, lsl #1
   1ed24:	bx	lr
   1ed28:	push	{r1, lr}
   1ed2c:	mov	r0, #8
   1ed30:	bl	125b0 <raise@plt>
   1ed34:	pop	{r1, pc}
   1ed38:	cmp	r1, r3
   1ed3c:	cmpeq	r0, r2
   1ed40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ed44:	mov	r4, r0
   1ed48:	movcc	r0, #0
   1ed4c:	mov	r5, r1
   1ed50:	ldr	lr, [sp, #36]	; 0x24
   1ed54:	movcc	r1, r0
   1ed58:	bcc	1ee54 <main@@Base+0x31a0>
   1ed5c:	cmp	r3, #0
   1ed60:	clzeq	ip, r2
   1ed64:	clzne	ip, r3
   1ed68:	addeq	ip, ip, #32
   1ed6c:	cmp	r5, #0
   1ed70:	clzeq	r1, r4
   1ed74:	addeq	r1, r1, #32
   1ed78:	clzne	r1, r5
   1ed7c:	sub	ip, ip, r1
   1ed80:	sub	sl, ip, #32
   1ed84:	lsl	r9, r3, ip
   1ed88:	rsb	fp, ip, #32
   1ed8c:	orr	r9, r9, r2, lsl sl
   1ed90:	orr	r9, r9, r2, lsr fp
   1ed94:	lsl	r8, r2, ip
   1ed98:	cmp	r5, r9
   1ed9c:	cmpeq	r4, r8
   1eda0:	movcc	r0, #0
   1eda4:	movcc	r1, r0
   1eda8:	bcc	1edc4 <main@@Base+0x3110>
   1edac:	mov	r0, #1
   1edb0:	subs	r4, r4, r8
   1edb4:	lsl	r1, r0, sl
   1edb8:	orr	r1, r1, r0, lsr fp
   1edbc:	lsl	r0, r0, ip
   1edc0:	sbc	r5, r5, r9
   1edc4:	cmp	ip, #0
   1edc8:	beq	1ee54 <main@@Base+0x31a0>
   1edcc:	lsr	r6, r8, #1
   1edd0:	orr	r6, r6, r9, lsl #31
   1edd4:	lsr	r7, r9, #1
   1edd8:	mov	r2, ip
   1eddc:	b	1ee00 <main@@Base+0x314c>
   1ede0:	subs	r3, r4, r6
   1ede4:	sbc	r8, r5, r7
   1ede8:	adds	r3, r3, r3
   1edec:	adc	r8, r8, r8
   1edf0:	adds	r4, r3, #1
   1edf4:	adc	r5, r8, #0
   1edf8:	subs	r2, r2, #1
   1edfc:	beq	1ee1c <main@@Base+0x3168>
   1ee00:	cmp	r5, r7
   1ee04:	cmpeq	r4, r6
   1ee08:	bcs	1ede0 <main@@Base+0x312c>
   1ee0c:	adds	r4, r4, r4
   1ee10:	adc	r5, r5, r5
   1ee14:	subs	r2, r2, #1
   1ee18:	bne	1ee00 <main@@Base+0x314c>
   1ee1c:	lsr	r3, r4, ip
   1ee20:	orr	r3, r3, r5, lsl fp
   1ee24:	lsr	r2, r5, ip
   1ee28:	orr	r3, r3, r5, lsr sl
   1ee2c:	adds	r0, r0, r4
   1ee30:	mov	r4, r3
   1ee34:	lsl	r3, r2, ip
   1ee38:	orr	r3, r3, r4, lsl sl
   1ee3c:	lsl	ip, r4, ip
   1ee40:	orr	r3, r3, r4, lsr fp
   1ee44:	adc	r1, r1, r5
   1ee48:	subs	r0, r0, ip
   1ee4c:	mov	r5, r2
   1ee50:	sbc	r1, r1, r3
   1ee54:	cmp	lr, #0
   1ee58:	strdne	r4, [lr]
   1ee5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001ee60 <__libc_csu_init@@Base>:
   1ee60:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1ee64:	mov	r7, r0
   1ee68:	ldr	r6, [pc, #72]	; 1eeb8 <__libc_csu_init@@Base+0x58>
   1ee6c:	ldr	r5, [pc, #72]	; 1eebc <__libc_csu_init@@Base+0x5c>
   1ee70:	add	r6, pc, r6
   1ee74:	add	r5, pc, r5
   1ee78:	sub	r6, r6, r5
   1ee7c:	mov	r8, r1
   1ee80:	mov	r9, r2
   1ee84:	bl	1256c <coda_cursor_get_byte_size@plt-0x20>
   1ee88:	asrs	r6, r6, #2
   1ee8c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ee90:	mov	r4, #0
   1ee94:	add	r4, r4, #1
   1ee98:	ldr	r3, [r5], #4
   1ee9c:	mov	r2, r9
   1eea0:	mov	r1, r8
   1eea4:	mov	r0, r7
   1eea8:	blx	r3
   1eeac:	cmp	r6, r4
   1eeb0:	bne	1ee94 <__libc_csu_init@@Base+0x34>
   1eeb4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1eeb8:	andeq	r2, r1, ip, ror r0
   1eebc:	andeq	r2, r1, r4, ror r0

0001eec0 <__libc_csu_fini@@Base>:
   1eec0:	bx	lr

Disassembly of section .fini:

0001eec4 <.fini>:
   1eec4:	push	{r3, lr}
   1eec8:	pop	{r3, pc}
