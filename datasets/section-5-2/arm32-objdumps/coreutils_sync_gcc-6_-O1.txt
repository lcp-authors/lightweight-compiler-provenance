
../repos/coreutils/src/sync:     file format elf32-littlearm


Disassembly of section .init:

00010be0 <.init>:
   10be0:	push	{r3, lr}
   10be4:	bl	10e94 <close@plt+0x48>
   10be8:	pop	{r3, pc}

Disassembly of section .plt:

00010bec <calloc@plt-0x14>:
   10bec:	push	{lr}		; (str lr, [sp, #-4]!)
   10bf0:	ldr	lr, [pc, #4]	; 10bfc <calloc@plt-0x4>
   10bf4:	add	lr, pc, lr
   10bf8:	ldr	pc, [lr, #8]!
   10bfc:	andeq	r5, r1, r4, lsl #8

00010c00 <calloc@plt>:
   10c00:	add	ip, pc, #0, 12
   10c04:	add	ip, ip, #86016	; 0x15000
   10c08:	ldr	pc, [ip, #1028]!	; 0x404

00010c0c <fputs_unlocked@plt>:
   10c0c:	add	ip, pc, #0, 12
   10c10:	add	ip, ip, #86016	; 0x15000
   10c14:	ldr	pc, [ip, #1020]!	; 0x3fc

00010c18 <raise@plt>:
   10c18:	add	ip, pc, #0, 12
   10c1c:	add	ip, ip, #86016	; 0x15000
   10c20:	ldr	pc, [ip, #1012]!	; 0x3f4

00010c24 <fsync@plt>:
   10c24:	add	ip, pc, #0, 12
   10c28:	add	ip, ip, #86016	; 0x15000
   10c2c:	ldr	pc, [ip, #1004]!	; 0x3ec

00010c30 <strcmp@plt>:
   10c30:	add	ip, pc, #0, 12
   10c34:	add	ip, ip, #86016	; 0x15000
   10c38:	ldr	pc, [ip, #996]!	; 0x3e4

00010c3c <fflush@plt>:
   10c3c:	add	ip, pc, #0, 12
   10c40:	add	ip, ip, #86016	; 0x15000
   10c44:	ldr	pc, [ip, #988]!	; 0x3dc

00010c48 <free@plt>:
   10c48:	add	ip, pc, #0, 12
   10c4c:	add	ip, ip, #86016	; 0x15000
   10c50:	ldr	pc, [ip, #980]!	; 0x3d4

00010c54 <_exit@plt>:
   10c54:	add	ip, pc, #0, 12
   10c58:	add	ip, ip, #86016	; 0x15000
   10c5c:	ldr	pc, [ip, #972]!	; 0x3cc

00010c60 <memcpy@plt>:
   10c60:	add	ip, pc, #0, 12
   10c64:	add	ip, ip, #86016	; 0x15000
   10c68:	ldr	pc, [ip, #964]!	; 0x3c4

00010c6c <mbsinit@plt>:
   10c6c:	add	ip, pc, #0, 12
   10c70:	add	ip, ip, #86016	; 0x15000
   10c74:	ldr	pc, [ip, #956]!	; 0x3bc

00010c78 <memcmp@plt>:
   10c78:	add	ip, pc, #0, 12
   10c7c:	add	ip, ip, #86016	; 0x15000
   10c80:	ldr	pc, [ip, #948]!	; 0x3b4

00010c84 <fputc_unlocked@plt>:
   10c84:	add	ip, pc, #0, 12
   10c88:	add	ip, ip, #86016	; 0x15000
   10c8c:	ldr	pc, [ip, #940]!	; 0x3ac

00010c90 <dcgettext@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #86016	; 0x15000
   10c98:	ldr	pc, [ip, #932]!	; 0x3a4

00010c9c <syncfs@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #86016	; 0x15000
   10ca4:	ldr	pc, [ip, #924]!	; 0x39c

00010ca8 <realloc@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #86016	; 0x15000
   10cb0:	ldr	pc, [ip, #916]!	; 0x394

00010cb4 <textdomain@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #86016	; 0x15000
   10cbc:	ldr	pc, [ip, #908]!	; 0x38c

00010cc0 <iswprint@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #86016	; 0x15000
   10cc8:	ldr	pc, [ip, #900]!	; 0x384

00010ccc <fwrite@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #86016	; 0x15000
   10cd4:	ldr	pc, [ip, #892]!	; 0x37c

00010cd8 <lseek64@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #86016	; 0x15000
   10ce0:	ldr	pc, [ip, #884]!	; 0x374

00010ce4 <__ctype_get_mb_cur_max@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #86016	; 0x15000
   10cec:	ldr	pc, [ip, #876]!	; 0x36c

00010cf0 <__fpending@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #86016	; 0x15000
   10cf8:	ldr	pc, [ip, #868]!	; 0x364

00010cfc <mbrtowc@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #86016	; 0x15000
   10d04:	ldr	pc, [ip, #860]!	; 0x35c

00010d08 <error@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #86016	; 0x15000
   10d10:	ldr	pc, [ip, #852]!	; 0x354

00010d14 <open64@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #86016	; 0x15000
   10d1c:	ldr	pc, [ip, #844]!	; 0x34c

00010d20 <malloc@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #86016	; 0x15000
   10d28:	ldr	pc, [ip, #836]!	; 0x344

00010d2c <__libc_start_main@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #86016	; 0x15000
   10d34:	ldr	pc, [ip, #828]!	; 0x33c

00010d38 <__freading@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #86016	; 0x15000
   10d40:	ldr	pc, [ip, #820]!	; 0x334

00010d44 <__gmon_start__@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #86016	; 0x15000
   10d4c:	ldr	pc, [ip, #812]!	; 0x32c

00010d50 <getopt_long@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #86016	; 0x15000
   10d58:	ldr	pc, [ip, #804]!	; 0x324

00010d5c <__ctype_b_loc@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #86016	; 0x15000
   10d64:	ldr	pc, [ip, #796]!	; 0x31c

00010d68 <exit@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #86016	; 0x15000
   10d70:	ldr	pc, [ip, #788]!	; 0x314

00010d74 <strlen@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #86016	; 0x15000
   10d7c:	ldr	pc, [ip, #780]!	; 0x30c

00010d80 <__errno_location@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #86016	; 0x15000
   10d88:	ldr	pc, [ip, #772]!	; 0x304

00010d8c <__cxa_atexit@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #86016	; 0x15000
   10d94:	ldr	pc, [ip, #764]!	; 0x2fc

00010d98 <memset@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #86016	; 0x15000
   10da0:	ldr	pc, [ip, #756]!	; 0x2f4

00010da4 <__printf_chk@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #86016	; 0x15000
   10dac:	ldr	pc, [ip, #748]!	; 0x2ec

00010db0 <fileno@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #86016	; 0x15000
   10db8:	ldr	pc, [ip, #740]!	; 0x2e4

00010dbc <__fprintf_chk@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #86016	; 0x15000
   10dc4:	ldr	pc, [ip, #732]!	; 0x2dc

00010dc8 <fclose@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #86016	; 0x15000
   10dd0:	ldr	pc, [ip, #724]!	; 0x2d4

00010dd4 <fseeko64@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #86016	; 0x15000
   10ddc:	ldr	pc, [ip, #716]!	; 0x2cc

00010de0 <fcntl64@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #86016	; 0x15000
   10de8:	ldr	pc, [ip, #708]!	; 0x2c4

00010dec <setlocale@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #86016	; 0x15000
   10df4:	ldr	pc, [ip, #700]!	; 0x2bc

00010df8 <strrchr@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #86016	; 0x15000
   10e00:	ldr	pc, [ip, #692]!	; 0x2b4

00010e04 <nl_langinfo@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #86016	; 0x15000
   10e0c:	ldr	pc, [ip, #684]!	; 0x2ac

00010e10 <bindtextdomain@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #86016	; 0x15000
   10e18:	ldr	pc, [ip, #676]!	; 0x2a4

00010e1c <sync@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #86016	; 0x15000
   10e24:	ldr	pc, [ip, #668]!	; 0x29c

00010e28 <strncmp@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #86016	; 0x15000
   10e30:	ldr	pc, [ip, #660]!	; 0x294

00010e34 <fdatasync@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #86016	; 0x15000
   10e3c:	ldr	pc, [ip, #652]!	; 0x28c

00010e40 <abort@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #86016	; 0x15000
   10e48:	ldr	pc, [ip, #644]!	; 0x284

00010e4c <close@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #86016	; 0x15000
   10e54:	ldr	pc, [ip, #636]!	; 0x27c

Disassembly of section .text:

00010e58 <.text>:
   10e58:	mov	fp, #0
   10e5c:	mov	lr, #0
   10e60:	pop	{r1}		; (ldr r1, [sp], #4)
   10e64:	mov	r2, sp
   10e68:	push	{r2}		; (str r2, [sp, #-4]!)
   10e6c:	push	{r0}		; (str r0, [sp, #-4]!)
   10e70:	ldr	ip, [pc, #16]	; 10e88 <close@plt+0x3c>
   10e74:	push	{ip}		; (str ip, [sp, #-4]!)
   10e78:	ldr	r0, [pc, #12]	; 10e8c <close@plt+0x40>
   10e7c:	ldr	r3, [pc, #12]	; 10e90 <close@plt+0x44>
   10e80:	bl	10d2c <__libc_start_main@plt>
   10e84:	bl	10e40 <abort@plt>
   10e88:			; <UNDEFINED> instruction: 0x00014abc
   10e8c:	andeq	r1, r1, r4, asr #5
   10e90:	andeq	r4, r1, ip, asr sl
   10e94:	ldr	r3, [pc, #20]	; 10eb0 <close@plt+0x64>
   10e98:	ldr	r2, [pc, #20]	; 10eb4 <close@plt+0x68>
   10e9c:	add	r3, pc, r3
   10ea0:	ldr	r2, [r3, r2]
   10ea4:	cmp	r2, #0
   10ea8:	bxeq	lr
   10eac:	b	10d44 <__gmon_start__@plt>
   10eb0:	andeq	r5, r1, ip, asr r1
   10eb4:	ldrdeq	r0, [r0], -r4
   10eb8:	ldr	r3, [pc, #28]	; 10edc <close@plt+0x90>
   10ebc:	ldr	r0, [pc, #28]	; 10ee0 <close@plt+0x94>
   10ec0:	sub	r3, r3, r0
   10ec4:	cmp	r3, #6
   10ec8:	bxls	lr
   10ecc:	ldr	r3, [pc, #16]	; 10ee4 <close@plt+0x98>
   10ed0:	cmp	r3, #0
   10ed4:	bxeq	lr
   10ed8:	bx	r3
   10edc:	andeq	r6, r2, fp, lsr #2
   10ee0:	andeq	r6, r2, r8, lsr #2
   10ee4:	andeq	r0, r0, r0
   10ee8:	ldr	r1, [pc, #36]	; 10f14 <close@plt+0xc8>
   10eec:	ldr	r0, [pc, #36]	; 10f18 <close@plt+0xcc>
   10ef0:	sub	r1, r1, r0
   10ef4:	asr	r1, r1, #2
   10ef8:	add	r1, r1, r1, lsr #31
   10efc:	asrs	r1, r1, #1
   10f00:	bxeq	lr
   10f04:	ldr	r3, [pc, #16]	; 10f1c <close@plt+0xd0>
   10f08:	cmp	r3, #0
   10f0c:	bxeq	lr
   10f10:	bx	r3
   10f14:	andeq	r6, r2, r8, lsr #2
   10f18:	andeq	r6, r2, r8, lsr #2
   10f1c:	andeq	r0, r0, r0
   10f20:	push	{r4, lr}
   10f24:	ldr	r4, [pc, #24]	; 10f44 <close@plt+0xf8>
   10f28:	ldrb	r3, [r4]
   10f2c:	cmp	r3, #0
   10f30:	popne	{r4, pc}
   10f34:	bl	10eb8 <close@plt+0x6c>
   10f38:	mov	r3, #1
   10f3c:	strb	r3, [r4]
   10f40:	pop	{r4, pc}
   10f44:	andeq	r6, r2, r0, asr #2
   10f48:	ldr	r0, [pc, #40]	; 10f78 <close@plt+0x12c>
   10f4c:	ldr	r3, [r0]
   10f50:	cmp	r3, #0
   10f54:	bne	10f5c <close@plt+0x110>
   10f58:	b	10ee8 <close@plt+0x9c>
   10f5c:	ldr	r3, [pc, #24]	; 10f7c <close@plt+0x130>
   10f60:	cmp	r3, #0
   10f64:	beq	10f58 <close@plt+0x10c>
   10f68:	push	{r4, lr}
   10f6c:	blx	r3
   10f70:	pop	{r4, lr}
   10f74:	b	10ee8 <close@plt+0x9c>
   10f78:	andeq	r5, r2, r4, lsl pc
   10f7c:	andeq	r0, r0, r0
   10f80:	push	{lr}		; (str lr, [sp, #-4]!)
   10f84:	sub	sp, sp, #60	; 0x3c
   10f88:	subs	r6, r0, #0
   10f8c:	beq	10fc8 <close@plt+0x17c>
   10f90:	ldr	r3, [pc, #728]	; 11270 <close@plt+0x424>
   10f94:	ldr	r4, [r3]
   10f98:	mov	r2, #5
   10f9c:	ldr	r1, [pc, #720]	; 11274 <close@plt+0x428>
   10fa0:	mov	r0, #0
   10fa4:	bl	10c90 <dcgettext@plt>
   10fa8:	ldr	r3, [pc, #712]	; 11278 <close@plt+0x42c>
   10fac:	ldr	r3, [r3]
   10fb0:	mov	r2, r0
   10fb4:	mov	r1, #1
   10fb8:	mov	r0, r4
   10fbc:	bl	10dbc <__fprintf_chk@plt>
   10fc0:	mov	r0, r6
   10fc4:	bl	10d68 <exit@plt>
   10fc8:	mov	r2, #5
   10fcc:	ldr	r1, [pc, #680]	; 1127c <close@plt+0x430>
   10fd0:	mov	r0, #0
   10fd4:	bl	10c90 <dcgettext@plt>
   10fd8:	ldr	r3, [pc, #664]	; 11278 <close@plt+0x42c>
   10fdc:	ldr	r2, [r3]
   10fe0:	mov	r1, r0
   10fe4:	mov	r0, #1
   10fe8:	bl	10da4 <__printf_chk@plt>
   10fec:	mov	r2, #5
   10ff0:	ldr	r1, [pc, #648]	; 11280 <close@plt+0x434>
   10ff4:	mov	r0, #0
   10ff8:	bl	10c90 <dcgettext@plt>
   10ffc:	ldr	r4, [pc, #640]	; 11284 <close@plt+0x438>
   11000:	ldr	r1, [r4]
   11004:	bl	10c0c <fputs_unlocked@plt>
   11008:	mov	r2, #5
   1100c:	ldr	r1, [pc, #628]	; 11288 <close@plt+0x43c>
   11010:	mov	r0, #0
   11014:	bl	10c90 <dcgettext@plt>
   11018:	ldr	r1, [r4]
   1101c:	bl	10c0c <fputs_unlocked@plt>
   11020:	mov	r2, #5
   11024:	ldr	r1, [pc, #608]	; 1128c <close@plt+0x440>
   11028:	mov	r0, #0
   1102c:	bl	10c90 <dcgettext@plt>
   11030:	ldr	r1, [r4]
   11034:	bl	10c0c <fputs_unlocked@plt>
   11038:	mov	r2, #5
   1103c:	ldr	r1, [pc, #588]	; 11290 <close@plt+0x444>
   11040:	mov	r0, #0
   11044:	bl	10c90 <dcgettext@plt>
   11048:	ldr	r1, [r4]
   1104c:	bl	10c0c <fputs_unlocked@plt>
   11050:	mov	r2, #5
   11054:	ldr	r1, [pc, #568]	; 11294 <close@plt+0x448>
   11058:	mov	r0, #0
   1105c:	bl	10c90 <dcgettext@plt>
   11060:	ldr	r1, [r4]
   11064:	bl	10c0c <fputs_unlocked@plt>
   11068:	mov	ip, sp
   1106c:	ldr	lr, [pc, #548]	; 11298 <close@plt+0x44c>
   11070:	ldm	lr!, {r0, r1, r2, r3}
   11074:	stmia	ip!, {r0, r1, r2, r3}
   11078:	ldm	lr!, {r0, r1, r2, r3}
   1107c:	stmia	ip!, {r0, r1, r2, r3}
   11080:	ldm	lr!, {r0, r1, r2, r3}
   11084:	stmia	ip!, {r0, r1, r2, r3}
   11088:	ldm	lr, {r0, r1}
   1108c:	stm	ip, {r0, r1}
   11090:	ldr	r1, [sp]
   11094:	cmp	r1, #0
   11098:	moveq	r4, sp
   1109c:	beq	110c4 <close@plt+0x278>
   110a0:	mov	r4, sp
   110a4:	ldr	r5, [pc, #496]	; 1129c <close@plt+0x450>
   110a8:	mov	r0, r5
   110ac:	bl	10c30 <strcmp@plt>
   110b0:	cmp	r0, #0
   110b4:	beq	110c4 <close@plt+0x278>
   110b8:	ldr	r1, [r4, #8]!
   110bc:	cmp	r1, #0
   110c0:	bne	110a8 <close@plt+0x25c>
   110c4:	ldr	r4, [r4, #4]
   110c8:	cmp	r4, #0
   110cc:	beq	111e0 <close@plt+0x394>
   110d0:	mov	r2, #5
   110d4:	ldr	r1, [pc, #452]	; 112a0 <close@plt+0x454>
   110d8:	mov	r0, #0
   110dc:	bl	10c90 <dcgettext@plt>
   110e0:	ldr	r3, [pc, #444]	; 112a4 <close@plt+0x458>
   110e4:	ldr	r2, [pc, #444]	; 112a8 <close@plt+0x45c>
   110e8:	mov	r1, r0
   110ec:	mov	r0, #1
   110f0:	bl	10da4 <__printf_chk@plt>
   110f4:	mov	r1, #0
   110f8:	mov	r0, #5
   110fc:	bl	10dec <setlocale@plt>
   11100:	cmp	r0, #0
   11104:	beq	1111c <close@plt+0x2d0>
   11108:	mov	r2, #3
   1110c:	ldr	r1, [pc, #408]	; 112ac <close@plt+0x460>
   11110:	bl	10e28 <strncmp@plt>
   11114:	cmp	r0, #0
   11118:	bne	1117c <close@plt+0x330>
   1111c:	mov	r2, #5
   11120:	ldr	r1, [pc, #392]	; 112b0 <close@plt+0x464>
   11124:	mov	r0, #0
   11128:	bl	10c90 <dcgettext@plt>
   1112c:	ldr	r5, [pc, #360]	; 1129c <close@plt+0x450>
   11130:	mov	r3, r5
   11134:	ldr	r2, [pc, #360]	; 112a4 <close@plt+0x458>
   11138:	mov	r1, r0
   1113c:	mov	r0, #1
   11140:	bl	10da4 <__printf_chk@plt>
   11144:	mov	r2, #5
   11148:	ldr	r1, [pc, #356]	; 112b4 <close@plt+0x468>
   1114c:	mov	r0, #0
   11150:	bl	10c90 <dcgettext@plt>
   11154:	mov	r1, r0
   11158:	ldr	r2, [pc, #344]	; 112b8 <close@plt+0x46c>
   1115c:	ldr	r3, [pc, #344]	; 112bc <close@plt+0x470>
   11160:	cmp	r4, r5
   11164:	movne	r3, r2
   11168:	mov	r2, r4
   1116c:	mov	r0, #1
   11170:	bl	10da4 <__printf_chk@plt>
   11174:	b	10fc0 <close@plt+0x174>
   11178:	ldr	r4, [pc, #284]	; 1129c <close@plt+0x450>
   1117c:	mov	r2, #5
   11180:	ldr	r1, [pc, #312]	; 112c0 <close@plt+0x474>
   11184:	mov	r0, #0
   11188:	bl	10c90 <dcgettext@plt>
   1118c:	ldr	r3, [pc, #240]	; 11284 <close@plt+0x438>
   11190:	ldr	r1, [r3]
   11194:	bl	10c0c <fputs_unlocked@plt>
   11198:	b	1111c <close@plt+0x2d0>
   1119c:	mov	r2, #5
   111a0:	ldr	r1, [pc, #264]	; 112b0 <close@plt+0x464>
   111a4:	mov	r0, #0
   111a8:	bl	10c90 <dcgettext@plt>
   111ac:	ldr	r4, [pc, #232]	; 1129c <close@plt+0x450>
   111b0:	mov	r3, r4
   111b4:	ldr	r2, [pc, #232]	; 112a4 <close@plt+0x458>
   111b8:	mov	r1, r0
   111bc:	mov	r0, #1
   111c0:	bl	10da4 <__printf_chk@plt>
   111c4:	mov	r2, #5
   111c8:	ldr	r1, [pc, #228]	; 112b4 <close@plt+0x468>
   111cc:	mov	r0, #0
   111d0:	bl	10c90 <dcgettext@plt>
   111d4:	mov	r1, r0
   111d8:	ldr	r3, [pc, #220]	; 112bc <close@plt+0x470>
   111dc:	b	11168 <close@plt+0x31c>
   111e0:	mov	r2, #5
   111e4:	ldr	r1, [pc, #180]	; 112a0 <close@plt+0x454>
   111e8:	mov	r0, #0
   111ec:	bl	10c90 <dcgettext@plt>
   111f0:	ldr	r3, [pc, #172]	; 112a4 <close@plt+0x458>
   111f4:	ldr	r2, [pc, #172]	; 112a8 <close@plt+0x45c>
   111f8:	mov	r1, r0
   111fc:	mov	r0, #1
   11200:	bl	10da4 <__printf_chk@plt>
   11204:	mov	r1, #0
   11208:	mov	r0, #5
   1120c:	bl	10dec <setlocale@plt>
   11210:	cmp	r0, #0
   11214:	beq	1119c <close@plt+0x350>
   11218:	mov	r2, #3
   1121c:	ldr	r1, [pc, #136]	; 112ac <close@plt+0x460>
   11220:	bl	10e28 <strncmp@plt>
   11224:	cmp	r0, #0
   11228:	bne	11178 <close@plt+0x32c>
   1122c:	mov	r2, #5
   11230:	ldr	r1, [pc, #120]	; 112b0 <close@plt+0x464>
   11234:	mov	r0, #0
   11238:	bl	10c90 <dcgettext@plt>
   1123c:	ldr	r4, [pc, #88]	; 1129c <close@plt+0x450>
   11240:	mov	r3, r4
   11244:	ldr	r2, [pc, #88]	; 112a4 <close@plt+0x458>
   11248:	mov	r1, r0
   1124c:	mov	r0, #1
   11250:	bl	10da4 <__printf_chk@plt>
   11254:	mov	r2, #5
   11258:	ldr	r1, [pc, #84]	; 112b4 <close@plt+0x468>
   1125c:	mov	r0, #0
   11260:	bl	10c90 <dcgettext@plt>
   11264:	mov	r1, r0
   11268:	ldr	r3, [pc, #76]	; 112bc <close@plt+0x470>
   1126c:	b	11168 <close@plt+0x31c>
   11270:	andeq	r6, r2, r8, lsr r1
   11274:	andeq	r4, r1, r4, ror fp
   11278:	andeq	r6, r2, r0, asr r1
   1127c:	muleq	r1, ip, fp
   11280:			; <UNDEFINED> instruction: 0x00014bbc
   11284:	andeq	r6, r2, ip, lsr r1
   11288:	andeq	r4, r1, r8, asr #24
   1128c:	andeq	r4, r1, ip, lsl #25
   11290:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   11294:	andeq	r4, r1, r4, lsl #26
   11298:	andeq	r4, r1, r4, ror #21
   1129c:	andeq	r4, r1, ip, ror #22
   112a0:	andeq	r4, r1, ip, lsr sp
   112a4:	andeq	r4, r1, r4, asr sp
   112a8:	andeq	r4, r1, ip, ror sp
   112ac:	andeq	r4, r1, ip, lsl #27
   112b0:	ldrdeq	r4, [r1], -r8
   112b4:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   112b8:	andeq	r4, r1, r4, asr #24
   112bc:	andeq	r4, r1, r4, lsr #30
   112c0:	muleq	r1, r0, sp
   112c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   112c8:	sub	sp, sp, #36	; 0x24
   112cc:	str	r0, [sp, #20]
   112d0:	mov	r5, r1
   112d4:	ldr	r0, [r1]
   112d8:	bl	11a00 <close@plt+0xbb4>
   112dc:	ldr	r1, [pc, #864]	; 11644 <close@plt+0x7f8>
   112e0:	mov	r0, #6
   112e4:	bl	10dec <setlocale@plt>
   112e8:	ldr	r4, [pc, #856]	; 11648 <close@plt+0x7fc>
   112ec:	ldr	r1, [pc, #856]	; 1164c <close@plt+0x800>
   112f0:	mov	r0, r4
   112f4:	bl	10e10 <bindtextdomain@plt>
   112f8:	mov	r0, r4
   112fc:	bl	10cb4 <textdomain@plt>
   11300:	ldr	r0, [pc, #840]	; 11650 <close@plt+0x804>
   11304:	bl	14ac0 <close@plt+0x3c74>
   11308:	mov	r9, #0
   1130c:	mov	fp, r9
   11310:	ldr	r8, [pc, #828]	; 11654 <close@plt+0x808>
   11314:	ldr	r7, [pc, #828]	; 11658 <close@plt+0x80c>
   11318:	mov	r6, r9
   1131c:	mov	sl, #1
   11320:	str	r6, [sp]
   11324:	mov	r3, r8
   11328:	mov	r2, r7
   1132c:	mov	r1, r5
   11330:	ldr	r0, [sp, #20]
   11334:	bl	10d50 <getopt_long@plt>
   11338:	cmn	r0, #1
   1133c:	beq	113c0 <close@plt+0x574>
   11340:	cmn	r0, #2
   11344:	beq	113a8 <close@plt+0x55c>
   11348:	ble	11364 <close@plt+0x518>
   1134c:	cmp	r0, #100	; 0x64
   11350:	beq	113b8 <close@plt+0x56c>
   11354:	cmp	r0, #102	; 0x66
   11358:	bne	113b0 <close@plt+0x564>
   1135c:	mov	r9, sl
   11360:	b	11320 <close@plt+0x4d4>
   11364:	cmn	r0, #3
   11368:	bne	113b0 <close@plt+0x564>
   1136c:	mov	r4, #0
   11370:	str	r4, [sp, #8]
   11374:	ldr	r3, [pc, #736]	; 1165c <close@plt+0x810>
   11378:	str	r3, [sp, #4]
   1137c:	ldr	r3, [pc, #732]	; 11660 <close@plt+0x814>
   11380:	str	r3, [sp]
   11384:	ldr	r3, [pc, #728]	; 11664 <close@plt+0x818>
   11388:	ldr	r3, [r3]
   1138c:	ldr	r2, [pc, #724]	; 11668 <close@plt+0x81c>
   11390:	ldr	r1, [pc, #724]	; 1166c <close@plt+0x820>
   11394:	ldr	r0, [pc, #724]	; 11670 <close@plt+0x824>
   11398:	ldr	r0, [r0]
   1139c:	bl	13a1c <close@plt+0x2bd0>
   113a0:	mov	r0, r4
   113a4:	bl	10d68 <exit@plt>
   113a8:	mov	r0, #0
   113ac:	bl	10f80 <close@plt+0x134>
   113b0:	mov	r0, #1
   113b4:	bl	10f80 <close@plt+0x134>
   113b8:	mov	fp, sl
   113bc:	b	11320 <close@plt+0x4d4>
   113c0:	ldr	r3, [pc, #684]	; 11674 <close@plt+0x828>
   113c4:	ldr	r3, [r3]
   113c8:	tst	fp, r9
   113cc:	bne	11418 <close@plt+0x5cc>
   113d0:	ldr	r2, [sp, #20]
   113d4:	cmp	r2, r3
   113d8:	movgt	r2, #0
   113dc:	andle	r2, fp, #1
   113e0:	str	r2, [sp, #24]
   113e4:	cmp	r2, #0
   113e8:	bne	11438 <close@plt+0x5ec>
   113ec:	ldr	r2, [sp, #20]
   113f0:	cmp	r2, r3
   113f4:	ble	11458 <close@plt+0x60c>
   113f8:	cmp	r9, #0
   113fc:	moveq	sl, fp
   11400:	movne	sl, #2
   11404:	mov	fp, #1
   11408:	ldr	r7, [pc, #612]	; 11674 <close@plt+0x828>
   1140c:	str	r0, [sp, #28]
   11410:	mov	r9, r2
   11414:	b	11524 <close@plt+0x6d8>
   11418:	mov	r2, #5
   1141c:	ldr	r1, [pc, #596]	; 11678 <close@plt+0x82c>
   11420:	mov	r0, #0
   11424:	bl	10c90 <dcgettext@plt>
   11428:	mov	r2, r0
   1142c:	mov	r1, #0
   11430:	mov	r0, #1
   11434:	bl	10d08 <error@plt>
   11438:	mov	r2, #5
   1143c:	ldr	r1, [pc, #568]	; 1167c <close@plt+0x830>
   11440:	mov	r0, #0
   11444:	bl	10c90 <dcgettext@plt>
   11448:	mov	r2, r0
   1144c:	mov	r1, #0
   11450:	mov	r0, #1
   11454:	bl	10d08 <error@plt>
   11458:	bl	10e1c <sync@plt>
   1145c:	mov	fp, #1
   11460:	eor	r0, fp, #1
   11464:	add	sp, sp, #36	; 0x24
   11468:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1146c:	bl	10d80 <__errno_location@plt>
   11470:	ldr	r8, [r0]
   11474:	ldr	r1, [pc, #516]	; 11680 <close@plt+0x834>
   11478:	mov	r0, r6
   1147c:	bl	10d14 <open64@plt>
   11480:	subs	r4, r0, #0
   11484:	bge	11548 <close@plt+0x6fc>
   11488:	mov	r2, #5
   1148c:	ldr	r1, [pc, #496]	; 11684 <close@plt+0x838>
   11490:	mov	r0, #0
   11494:	bl	10c90 <dcgettext@plt>
   11498:	mov	r4, r0
   1149c:	mov	r1, r6
   114a0:	mov	r0, #4
   114a4:	bl	1331c <close@plt+0x24d0>
   114a8:	mov	r3, r0
   114ac:	mov	r2, r4
   114b0:	mov	r1, r8
   114b4:	mov	r0, #0
   114b8:	bl	10d08 <error@plt>
   114bc:	ldr	r8, [sp, #24]
   114c0:	b	11514 <close@plt+0x6c8>
   114c4:	bl	10d80 <__errno_location@plt>
   114c8:	ldr	r8, [r0]
   114cc:	mov	r2, #5
   114d0:	ldr	r1, [pc, #432]	; 11688 <close@plt+0x83c>
   114d4:	mov	r0, #0
   114d8:	bl	10c90 <dcgettext@plt>
   114dc:	str	r0, [sp, #20]
   114e0:	mov	r1, r6
   114e4:	mov	r0, #4
   114e8:	bl	1331c <close@plt+0x24d0>
   114ec:	mov	r3, r0
   114f0:	ldr	r2, [sp, #20]
   114f4:	mov	r1, r8
   114f8:	mov	r0, #0
   114fc:	bl	10d08 <error@plt>
   11500:	ldr	r8, [sp, #24]
   11504:	mov	r0, r4
   11508:	bl	10e4c <close@plt>
   1150c:	cmp	r0, #0
   11510:	blt	11600 <close@plt+0x7b4>
   11514:	and	fp, fp, r8
   11518:	ldr	r3, [r7]
   1151c:	add	r3, r3, #1
   11520:	str	r3, [r7]
   11524:	ldr	r3, [r7]
   11528:	cmp	r9, r3
   1152c:	ble	11460 <close@plt+0x614>
   11530:	ldr	r6, [r5, r3, lsl #2]
   11534:	mov	r1, #2048	; 0x800
   11538:	mov	r0, r6
   1153c:	bl	10d14 <open64@plt>
   11540:	subs	r4, r0, #0
   11544:	blt	1146c <close@plt+0x620>
   11548:	mov	r1, #3
   1154c:	mov	r0, r4
   11550:	bl	117a8 <close@plt+0x95c>
   11554:	cmn	r0, #1
   11558:	beq	114c4 <close@plt+0x678>
   1155c:	bic	r2, r0, #2048	; 0x800
   11560:	mov	r1, #4
   11564:	mov	r0, r4
   11568:	bl	117a8 <close@plt+0x95c>
   1156c:	cmp	r0, #0
   11570:	blt	114c4 <close@plt+0x678>
   11574:	cmp	sl, #1
   11578:	beq	115dc <close@plt+0x790>
   1157c:	bcc	115e8 <close@plt+0x79c>
   11580:	cmp	sl, #2
   11584:	beq	115f4 <close@plt+0x7a8>
   11588:	ldr	r0, [sp, #28]
   1158c:	cmp	r0, #0
   11590:	movge	r8, #1
   11594:	bge	11504 <close@plt+0x6b8>
   11598:	bl	10d80 <__errno_location@plt>
   1159c:	ldr	r8, [r0]
   115a0:	mov	r2, #5
   115a4:	ldr	r1, [pc, #224]	; 1168c <close@plt+0x840>
   115a8:	mov	r0, #0
   115ac:	bl	10c90 <dcgettext@plt>
   115b0:	str	r0, [sp, #20]
   115b4:	mov	r1, r6
   115b8:	mov	r0, #4
   115bc:	bl	1331c <close@plt+0x24d0>
   115c0:	mov	r3, r0
   115c4:	ldr	r2, [sp, #20]
   115c8:	mov	r1, r8
   115cc:	mov	r0, #0
   115d0:	bl	10d08 <error@plt>
   115d4:	ldr	r8, [sp, #24]
   115d8:	b	11504 <close@plt+0x6b8>
   115dc:	mov	r0, r4
   115e0:	bl	10e34 <fdatasync@plt>
   115e4:	b	1158c <close@plt+0x740>
   115e8:	mov	r0, r4
   115ec:	bl	10c24 <fsync@plt>
   115f0:	b	1158c <close@plt+0x740>
   115f4:	mov	r0, r4
   115f8:	bl	10c9c <syncfs@plt>
   115fc:	b	1158c <close@plt+0x740>
   11600:	bl	10d80 <__errno_location@plt>
   11604:	ldr	r4, [r0]
   11608:	mov	r2, #5
   1160c:	ldr	r1, [pc, #124]	; 11690 <close@plt+0x844>
   11610:	mov	r0, #0
   11614:	bl	10c90 <dcgettext@plt>
   11618:	mov	r8, r0
   1161c:	mov	r1, r6
   11620:	mov	r0, #4
   11624:	bl	1331c <close@plt+0x24d0>
   11628:	mov	r3, r0
   1162c:	mov	r2, r8
   11630:	mov	r1, r4
   11634:	mov	r0, #0
   11638:	bl	10d08 <error@plt>
   1163c:	ldr	r8, [sp, #24]
   11640:	b	11514 <close@plt+0x6c8>
   11644:	andeq	r4, r1, r4, asr #24
   11648:	andeq	r4, r1, r0, lsl #27
   1164c:	andeq	r4, r1, r8, lsr #28
   11650:			; <UNDEFINED> instruction: 0x000116b4
   11654:	andeq	r4, r1, ip, lsl fp
   11658:	andeq	r4, r1, r4, ror #28
   1165c:	andeq	r4, r1, r0, asr #28
   11660:	andeq	r4, r1, r4, asr lr
   11664:	andeq	r6, r2, r0, ror #1
   11668:	andeq	r4, r1, ip, ror sp
   1166c:	andeq	r4, r1, ip, ror #22
   11670:	andeq	r6, r2, ip, lsr r1
   11674:	andeq	r6, r2, r0, lsr r1
   11678:	andeq	r4, r1, r8, ror #28
   1167c:	muleq	r1, r8, lr
   11680:	andeq	r0, r0, r1, lsl #16
   11684:			; <UNDEFINED> instruction: 0x00014ebc
   11688:	ldrdeq	r4, [r1], -r0
   1168c:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   11690:	andeq	r4, r1, r8, lsl #30
   11694:	ldr	r3, [pc, #4]	; 116a0 <close@plt+0x854>
   11698:	str	r0, [r3]
   1169c:	bx	lr
   116a0:	andeq	r6, r2, r4, asr #2
   116a4:	ldr	r3, [pc, #4]	; 116b0 <close@plt+0x864>
   116a8:	strb	r0, [r3, #4]
   116ac:	bx	lr
   116b0:	andeq	r6, r2, r4, asr #2
   116b4:	push	{r4, r5, r6, lr}
   116b8:	sub	sp, sp, #8
   116bc:	ldr	r3, [pc, #200]	; 1178c <close@plt+0x940>
   116c0:	ldr	r0, [r3]
   116c4:	bl	1419c <close@plt+0x3350>
   116c8:	cmp	r0, #0
   116cc:	beq	116f0 <close@plt+0x8a4>
   116d0:	ldr	r3, [pc, #184]	; 11790 <close@plt+0x944>
   116d4:	ldrb	r3, [r3, #4]
   116d8:	cmp	r3, #0
   116dc:	beq	1170c <close@plt+0x8c0>
   116e0:	bl	10d80 <__errno_location@plt>
   116e4:	ldr	r3, [r0]
   116e8:	cmp	r3, #32
   116ec:	bne	1170c <close@plt+0x8c0>
   116f0:	ldr	r3, [pc, #156]	; 11794 <close@plt+0x948>
   116f4:	ldr	r0, [r3]
   116f8:	bl	1419c <close@plt+0x3350>
   116fc:	cmp	r0, #0
   11700:	bne	11780 <close@plt+0x934>
   11704:	add	sp, sp, #8
   11708:	pop	{r4, r5, r6, pc}
   1170c:	mov	r2, #5
   11710:	ldr	r1, [pc, #128]	; 11798 <close@plt+0x94c>
   11714:	mov	r0, #0
   11718:	bl	10c90 <dcgettext@plt>
   1171c:	mov	r4, r0
   11720:	ldr	r3, [pc, #104]	; 11790 <close@plt+0x944>
   11724:	ldr	r5, [r3]
   11728:	cmp	r5, #0
   1172c:	beq	11764 <close@plt+0x918>
   11730:	bl	10d80 <__errno_location@plt>
   11734:	ldr	r6, [r0]
   11738:	mov	r0, r5
   1173c:	bl	133c8 <close@plt+0x257c>
   11740:	str	r4, [sp]
   11744:	mov	r3, r0
   11748:	ldr	r2, [pc, #76]	; 1179c <close@plt+0x950>
   1174c:	mov	r1, r6
   11750:	mov	r0, #0
   11754:	bl	10d08 <error@plt>
   11758:	ldr	r3, [pc, #64]	; 117a0 <close@plt+0x954>
   1175c:	ldr	r0, [r3]
   11760:	bl	10c54 <_exit@plt>
   11764:	bl	10d80 <__errno_location@plt>
   11768:	mov	r3, r4
   1176c:	ldr	r2, [pc, #48]	; 117a4 <close@plt+0x958>
   11770:	ldr	r1, [r0]
   11774:	mov	r0, #0
   11778:	bl	10d08 <error@plt>
   1177c:	b	11758 <close@plt+0x90c>
   11780:	ldr	r3, [pc, #24]	; 117a0 <close@plt+0x954>
   11784:	ldr	r0, [r3]
   11788:	bl	10c54 <_exit@plt>
   1178c:	andeq	r6, r2, ip, lsr r1
   11790:	andeq	r6, r2, r4, asr #2
   11794:	andeq	r6, r2, r8, lsr r1
   11798:			; <UNDEFINED> instruction: 0x00014fbc
   1179c:	andeq	r4, r1, r8, asr #31
   117a0:	andeq	r6, r2, r4, ror #1
   117a4:	andeq	r4, r1, ip, asr #31
   117a8:	push	{r1, r2, r3}
   117ac:	push	{r4, r5, r6, lr}
   117b0:	sub	sp, sp, #12
   117b4:	mov	r5, r0
   117b8:	ldr	r1, [sp, #28]
   117bc:	add	r3, sp, #32
   117c0:	str	r3, [sp, #4]
   117c4:	cmp	r1, #0
   117c8:	beq	11810 <close@plt+0x9c4>
   117cc:	ldr	r3, [pc, #540]	; 119f0 <close@plt+0xba4>
   117d0:	cmp	r1, r3
   117d4:	beq	11840 <close@plt+0x9f4>
   117d8:	cmp	r1, #11
   117dc:	beq	119e0 <close@plt+0xb94>
   117e0:	bgt	1196c <close@plt+0xb20>
   117e4:	cmp	r1, #3
   117e8:	beq	119e0 <close@plt+0xb94>
   117ec:	ble	1192c <close@plt+0xae0>
   117f0:	cmp	r1, #8
   117f4:	beq	1194c <close@plt+0xb00>
   117f8:	ble	11944 <close@plt+0xaf8>
   117fc:	cmp	r1, #9
   11800:	beq	119e0 <close@plt+0xb94>
   11804:	cmp	r1, #10
   11808:	bne	119a4 <close@plt+0xb58>
   1180c:	b	1194c <close@plt+0xb00>
   11810:	ldr	r3, [sp, #4]
   11814:	add	r2, r3, #4
   11818:	str	r2, [sp, #4]
   1181c:	ldr	r2, [r3]
   11820:	mov	r1, #0
   11824:	bl	10de0 <fcntl64@plt>
   11828:	mov	r4, r0
   1182c:	mov	r0, r4
   11830:	add	sp, sp, #12
   11834:	pop	{r4, r5, r6, lr}
   11838:	add	sp, sp, #12
   1183c:	bx	lr
   11840:	ldr	r3, [sp, #4]
   11844:	add	r2, r3, #4
   11848:	str	r2, [sp, #4]
   1184c:	ldr	r6, [r3]
   11850:	ldr	r3, [pc, #412]	; 119f4 <close@plt+0xba8>
   11854:	ldr	r3, [r3]
   11858:	cmp	r3, #0
   1185c:	blt	118bc <close@plt+0xa70>
   11860:	mov	r2, r6
   11864:	ldr	r1, [pc, #388]	; 119f0 <close@plt+0xba4>
   11868:	bl	10de0 <fcntl64@plt>
   1186c:	subs	r4, r0, #0
   11870:	blt	11884 <close@plt+0xa38>
   11874:	mov	r2, #1
   11878:	ldr	r3, [pc, #372]	; 119f4 <close@plt+0xba8>
   1187c:	str	r2, [r3]
   11880:	b	1182c <close@plt+0x9e0>
   11884:	bl	10d80 <__errno_location@plt>
   11888:	ldr	r3, [r0]
   1188c:	cmp	r3, #22
   11890:	bne	11874 <close@plt+0xa28>
   11894:	mov	r2, r6
   11898:	mov	r1, #0
   1189c:	mov	r0, r5
   118a0:	bl	10de0 <fcntl64@plt>
   118a4:	subs	r4, r0, #0
   118a8:	blt	1182c <close@plt+0x9e0>
   118ac:	mvn	r2, #0
   118b0:	ldr	r3, [pc, #316]	; 119f4 <close@plt+0xba8>
   118b4:	str	r2, [r3]
   118b8:	b	118e0 <close@plt+0xa94>
   118bc:	mov	r2, r6
   118c0:	mov	r1, #0
   118c4:	bl	10de0 <fcntl64@plt>
   118c8:	subs	r4, r0, #0
   118cc:	blt	1182c <close@plt+0x9e0>
   118d0:	ldr	r3, [pc, #284]	; 119f4 <close@plt+0xba8>
   118d4:	ldr	r3, [r3]
   118d8:	cmn	r3, #1
   118dc:	bne	1182c <close@plt+0x9e0>
   118e0:	mov	r1, #1
   118e4:	mov	r0, r4
   118e8:	bl	10de0 <fcntl64@plt>
   118ec:	subs	r2, r0, #0
   118f0:	blt	1190c <close@plt+0xac0>
   118f4:	orr	r2, r2, #1
   118f8:	mov	r1, #2
   118fc:	mov	r0, r4
   11900:	bl	10de0 <fcntl64@plt>
   11904:	cmn	r0, #1
   11908:	bne	1182c <close@plt+0x9e0>
   1190c:	bl	10d80 <__errno_location@plt>
   11910:	mov	r5, r0
   11914:	ldr	r6, [r0]
   11918:	mov	r0, r4
   1191c:	bl	10e4c <close@plt>
   11920:	str	r6, [r5]
   11924:	mvn	r4, #0
   11928:	b	1182c <close@plt+0x9e0>
   1192c:	cmp	r1, #1
   11930:	beq	119e0 <close@plt+0xb94>
   11934:	bgt	1194c <close@plt+0xb00>
   11938:	cmp	r1, #0
   1193c:	bne	119a4 <close@plt+0xb58>
   11940:	b	1194c <close@plt+0xb00>
   11944:	cmp	r1, #4
   11948:	bne	119a4 <close@plt+0xb58>
   1194c:	ldr	r3, [sp, #4]
   11950:	add	r2, r3, #4
   11954:	str	r2, [sp, #4]
   11958:	ldr	r2, [r3]
   1195c:	mov	r0, r5
   11960:	bl	10de0 <fcntl64@plt>
   11964:	mov	r4, r0
   11968:	b	1182c <close@plt+0x9e0>
   1196c:	ldr	r3, [pc, #132]	; 119f8 <close@plt+0xbac>
   11970:	cmp	r1, r3
   11974:	bgt	119c4 <close@plt+0xb78>
   11978:	sub	r3, r3, #1
   1197c:	cmp	r1, r3
   11980:	bge	1194c <close@plt+0xb00>
   11984:	sub	r3, r3, #5
   11988:	cmp	r1, r3
   1198c:	beq	119e0 <close@plt+0xb94>
   11990:	add	r3, r3, #1
   11994:	cmp	r1, r3
   11998:	beq	1194c <close@plt+0xb00>
   1199c:	cmp	r1, #1024	; 0x400
   119a0:	beq	1194c <close@plt+0xb00>
   119a4:	ldr	r3, [sp, #4]
   119a8:	add	r2, r3, #4
   119ac:	str	r2, [sp, #4]
   119b0:	ldr	r2, [r3]
   119b4:	mov	r0, r5
   119b8:	bl	10de0 <fcntl64@plt>
   119bc:	mov	r4, r0
   119c0:	b	1182c <close@plt+0x9e0>
   119c4:	ldr	r3, [pc, #48]	; 119fc <close@plt+0xbb0>
   119c8:	cmp	r1, r3
   119cc:	beq	1194c <close@plt+0xb00>
   119d0:	blt	119e0 <close@plt+0xb94>
   119d4:	add	r3, r3, #1
   119d8:	cmp	r1, r3
   119dc:	bne	119a4 <close@plt+0xb58>
   119e0:	mov	r0, r5
   119e4:	bl	10de0 <fcntl64@plt>
   119e8:	mov	r4, r0
   119ec:	b	1182c <close@plt+0x9e0>
   119f0:	andeq	r0, r0, r6, lsl #8
   119f4:	andeq	r6, r2, ip, asr #2
   119f8:	andeq	r0, r0, r7, lsl #8
   119fc:	andeq	r0, r0, r9, lsl #8
   11a00:	push	{r4, r5, r6, lr}
   11a04:	subs	r4, r0, #0
   11a08:	beq	11a80 <close@plt+0xc34>
   11a0c:	mov	r1, #47	; 0x2f
   11a10:	mov	r0, r4
   11a14:	bl	10df8 <strrchr@plt>
   11a18:	cmp	r0, #0
   11a1c:	addne	r5, r0, #1
   11a20:	moveq	r5, r4
   11a24:	sub	r3, r5, r4
   11a28:	cmp	r3, #6
   11a2c:	ble	11a6c <close@plt+0xc20>
   11a30:	mov	r2, #7
   11a34:	ldr	r1, [pc, #96]	; 11a9c <close@plt+0xc50>
   11a38:	sub	r0, r5, #7
   11a3c:	bl	10e28 <strncmp@plt>
   11a40:	cmp	r0, #0
   11a44:	bne	11a6c <close@plt+0xc20>
   11a48:	mov	r2, #3
   11a4c:	ldr	r1, [pc, #76]	; 11aa0 <close@plt+0xc54>
   11a50:	mov	r0, r5
   11a54:	bl	10e28 <strncmp@plt>
   11a58:	cmp	r0, #0
   11a5c:	addeq	r4, r5, #3
   11a60:	ldreq	r3, [pc, #60]	; 11aa4 <close@plt+0xc58>
   11a64:	streq	r4, [r3]
   11a68:	movne	r4, r5
   11a6c:	ldr	r3, [pc, #52]	; 11aa8 <close@plt+0xc5c>
   11a70:	str	r4, [r3]
   11a74:	ldr	r3, [pc, #48]	; 11aac <close@plt+0xc60>
   11a78:	str	r4, [r3]
   11a7c:	pop	{r4, r5, r6, pc}
   11a80:	ldr	r3, [pc, #40]	; 11ab0 <close@plt+0xc64>
   11a84:	ldr	r3, [r3]
   11a88:	mov	r2, #55	; 0x37
   11a8c:	mov	r1, #1
   11a90:	ldr	r0, [pc, #28]	; 11ab4 <close@plt+0xc68>
   11a94:	bl	10ccc <fwrite@plt>
   11a98:	bl	10e40 <abort@plt>
   11a9c:	andeq	r5, r1, r8
   11aa0:	andeq	r5, r1, r0, lsl r0
   11aa4:	andeq	r6, r2, r8, lsr #2
   11aa8:	andeq	r6, r2, r0, asr r1
   11aac:	andeq	r6, r2, ip, lsr #2
   11ab0:	andeq	r6, r2, r8, lsr r1
   11ab4:	ldrdeq	r4, [r1], -r0
   11ab8:	push	{r4, r5, r6, lr}
   11abc:	mov	r5, r0
   11ac0:	mov	r4, r1
   11ac4:	mov	r2, #48	; 0x30
   11ac8:	mov	r1, #0
   11acc:	bl	10d98 <memset@plt>
   11ad0:	cmp	r4, #10
   11ad4:	beq	11ae4 <close@plt+0xc98>
   11ad8:	str	r4, [r5]
   11adc:	mov	r0, r5
   11ae0:	pop	{r4, r5, r6, pc}
   11ae4:	bl	10e40 <abort@plt>
   11ae8:	push	{r4, r5, r6, lr}
   11aec:	mov	r4, r0
   11af0:	mov	r5, r1
   11af4:	mov	r2, #5
   11af8:	mov	r1, r0
   11afc:	mov	r0, #0
   11b00:	bl	10c90 <dcgettext@plt>
   11b04:	cmp	r4, r0
   11b08:	popne	{r4, r5, r6, pc}
   11b0c:	bl	14420 <close@plt+0x35d4>
   11b10:	ldrb	r3, [r0]
   11b14:	bic	r3, r3, #32
   11b18:	cmp	r3, #85	; 0x55
   11b1c:	beq	11b98 <close@plt+0xd4c>
   11b20:	cmp	r3, #71	; 0x47
   11b24:	bne	11bf4 <close@plt+0xda8>
   11b28:	ldrb	r3, [r0, #1]
   11b2c:	bic	r3, r3, #32
   11b30:	cmp	r3, #66	; 0x42
   11b34:	bne	11bf4 <close@plt+0xda8>
   11b38:	ldrb	r3, [r0, #2]
   11b3c:	cmp	r3, #49	; 0x31
   11b40:	bne	11bf4 <close@plt+0xda8>
   11b44:	ldrb	r3, [r0, #3]
   11b48:	cmp	r3, #56	; 0x38
   11b4c:	bne	11bf4 <close@plt+0xda8>
   11b50:	ldrb	r3, [r0, #4]
   11b54:	cmp	r3, #48	; 0x30
   11b58:	bne	11bf4 <close@plt+0xda8>
   11b5c:	ldrb	r3, [r0, #5]
   11b60:	cmp	r3, #51	; 0x33
   11b64:	bne	11bf4 <close@plt+0xda8>
   11b68:	ldrb	r3, [r0, #6]
   11b6c:	cmp	r3, #48	; 0x30
   11b70:	bne	11bf4 <close@plt+0xda8>
   11b74:	ldrb	r3, [r0, #7]
   11b78:	cmp	r3, #0
   11b7c:	bne	11bf4 <close@plt+0xda8>
   11b80:	ldrb	r2, [r4]
   11b84:	ldr	r3, [pc, #124]	; 11c08 <close@plt+0xdbc>
   11b88:	ldr	r0, [pc, #124]	; 11c0c <close@plt+0xdc0>
   11b8c:	cmp	r2, #96	; 0x60
   11b90:	movne	r0, r3
   11b94:	pop	{r4, r5, r6, pc}
   11b98:	ldrb	r3, [r0, #1]
   11b9c:	bic	r3, r3, #32
   11ba0:	cmp	r3, #84	; 0x54
   11ba4:	bne	11bf4 <close@plt+0xda8>
   11ba8:	ldrb	r3, [r0, #2]
   11bac:	bic	r3, r3, #32
   11bb0:	cmp	r3, #70	; 0x46
   11bb4:	bne	11bf4 <close@plt+0xda8>
   11bb8:	ldrb	r3, [r0, #3]
   11bbc:	cmp	r3, #45	; 0x2d
   11bc0:	bne	11bf4 <close@plt+0xda8>
   11bc4:	ldrb	r3, [r0, #4]
   11bc8:	cmp	r3, #56	; 0x38
   11bcc:	bne	11bf4 <close@plt+0xda8>
   11bd0:	ldrb	r3, [r0, #5]
   11bd4:	cmp	r3, #0
   11bd8:	bne	11bf4 <close@plt+0xda8>
   11bdc:	ldrb	r2, [r4]
   11be0:	ldr	r3, [pc, #40]	; 11c10 <close@plt+0xdc4>
   11be4:	ldr	r0, [pc, #40]	; 11c14 <close@plt+0xdc8>
   11be8:	cmp	r2, #96	; 0x60
   11bec:	movne	r0, r3
   11bf0:	pop	{r4, r5, r6, pc}
   11bf4:	ldr	r3, [pc, #28]	; 11c18 <close@plt+0xdcc>
   11bf8:	ldr	r0, [pc, #28]	; 11c1c <close@plt+0xdd0>
   11bfc:	cmp	r5, #9
   11c00:	movne	r0, r3
   11c04:	pop	{r4, r5, r6, pc}
   11c08:	andeq	r5, r1, ip, rrx
   11c0c:	andeq	r5, r1, r8, ror r0
   11c10:	andeq	r5, r1, r8, rrx
   11c14:	andeq	r5, r1, ip, ror r0
   11c18:	andeq	r5, r1, r0, ror r0
   11c1c:	andeq	r5, r1, r4, ror r0
   11c20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11c24:	sub	sp, sp, #116	; 0x74
   11c28:	str	r0, [sp, #36]	; 0x24
   11c2c:	mov	sl, r1
   11c30:	str	r2, [sp, #52]	; 0x34
   11c34:	str	r3, [sp, #28]
   11c38:	ldr	r8, [sp, #152]	; 0x98
   11c3c:	bl	10ce4 <__ctype_get_mb_cur_max@plt>
   11c40:	str	r0, [sp, #84]	; 0x54
   11c44:	ldr	r3, [sp, #156]	; 0x9c
   11c48:	lsr	r3, r3, #1
   11c4c:	and	r3, r3, #1
   11c50:	str	r3, [sp, #32]
   11c54:	mov	r3, #1
   11c58:	str	r3, [sp, #40]	; 0x28
   11c5c:	mov	r3, #0
   11c60:	str	r3, [sp, #80]	; 0x50
   11c64:	str	r3, [sp, #44]	; 0x2c
   11c68:	str	r3, [sp, #48]	; 0x30
   11c6c:	str	r3, [sp, #60]	; 0x3c
   11c70:	str	r3, [sp, #72]	; 0x48
   11c74:	str	r3, [sp, #76]	; 0x4c
   11c78:	mov	r7, sl
   11c7c:	mov	sl, r8
   11c80:	cmp	sl, #10
   11c84:	ldrls	pc, [pc, sl, lsl #2]
   11c88:	b	11e40 <close@plt+0xff4>
   11c8c:	strdeq	r1, [r1], -r0
   11c90:	andeq	r1, r1, r0, asr #25
   11c94:	andeq	r1, r1, ip, lsl lr
   11c98:			; <UNDEFINED> instruction: 0x00011cb8
   11c9c:	ldrdeq	r1, [r1], -r0
   11ca0:	andeq	r1, r1, r0, lsl #26
   11ca4:	andeq	r2, r1, ip, ror #26
   11ca8:	andeq	r1, r1, r4, asr #28
   11cac:	andeq	r1, r1, ip, lsr sp
   11cb0:	andeq	r1, r1, ip, lsr sp
   11cb4:	andeq	r1, r1, ip, lsr sp
   11cb8:	mov	r3, #1
   11cbc:	str	r3, [sp, #48]	; 0x30
   11cc0:	mov	r3, #1
   11cc4:	str	r3, [sp, #32]
   11cc8:	str	r3, [sp, #60]	; 0x3c
   11ccc:	ldr	r3, [pc, #4068]	; 12cb8 <close@plt+0x1e6c>
   11cd0:	str	r3, [sp, #72]	; 0x48
   11cd4:	mov	fp, #0
   11cd8:	mov	sl, #2
   11cdc:	mov	r6, #0
   11ce0:	ldr	r3, [sp, #48]	; 0x30
   11ce4:	eor	r3, r3, #1
   11ce8:	str	r3, [sp, #68]	; 0x44
   11cec:	b	125d4 <close@plt+0x1788>
   11cf0:	mov	r3, #0
   11cf4:	str	r3, [sp, #32]
   11cf8:	mov	fp, r3
   11cfc:	b	11cdc <close@plt+0xe90>
   11d00:	ldr	r3, [sp, #32]
   11d04:	cmp	r3, #0
   11d08:	bne	11e5c <close@plt+0x1010>
   11d0c:	cmp	r7, #0
   11d10:	beq	11e7c <close@plt+0x1030>
   11d14:	ldr	r3, [sp, #36]	; 0x24
   11d18:	mov	r2, #34	; 0x22
   11d1c:	strb	r2, [r3]
   11d20:	mov	r3, #1
   11d24:	str	r3, [sp, #48]	; 0x30
   11d28:	str	r3, [sp, #60]	; 0x3c
   11d2c:	ldr	r3, [pc, #3980]	; 12cc0 <close@plt+0x1e74>
   11d30:	str	r3, [sp, #72]	; 0x48
   11d34:	mov	fp, #1
   11d38:	b	11cdc <close@plt+0xe90>
   11d3c:	cmp	sl, #10
   11d40:	beq	11d64 <close@plt+0xf18>
   11d44:	mov	r1, sl
   11d48:	ldr	r0, [pc, #3948]	; 12cbc <close@plt+0x1e70>
   11d4c:	bl	11ae8 <close@plt+0xc9c>
   11d50:	str	r0, [sp, #164]	; 0xa4
   11d54:	mov	r1, sl
   11d58:	ldr	r0, [pc, #3928]	; 12cb8 <close@plt+0x1e6c>
   11d5c:	bl	11ae8 <close@plt+0xc9c>
   11d60:	str	r0, [sp, #168]	; 0xa8
   11d64:	ldr	r3, [sp, #32]
   11d68:	cmp	r3, #0
   11d6c:	movne	fp, #0
   11d70:	bne	11da8 <close@plt+0xf5c>
   11d74:	ldr	r3, [sp, #164]	; 0xa4
   11d78:	ldrb	r3, [r3]
   11d7c:	cmp	r3, #0
   11d80:	beq	11dc8 <close@plt+0xf7c>
   11d84:	ldr	r2, [sp, #164]	; 0xa4
   11d88:	mov	fp, #0
   11d8c:	ldr	r1, [sp, #36]	; 0x24
   11d90:	cmp	r7, fp
   11d94:	strbhi	r3, [r1, fp]
   11d98:	add	fp, fp, #1
   11d9c:	ldrb	r3, [r2, #1]!
   11da0:	cmp	r3, #0
   11da4:	bne	11d90 <close@plt+0xf44>
   11da8:	ldr	r0, [sp, #168]	; 0xa8
   11dac:	bl	10d74 <strlen@plt>
   11db0:	str	r0, [sp, #60]	; 0x3c
   11db4:	ldr	r3, [sp, #168]	; 0xa8
   11db8:	str	r3, [sp, #72]	; 0x48
   11dbc:	mov	r3, #1
   11dc0:	str	r3, [sp, #48]	; 0x30
   11dc4:	b	11cdc <close@plt+0xe90>
   11dc8:	mov	fp, #0
   11dcc:	b	11da8 <close@plt+0xf5c>
   11dd0:	ldr	r3, [sp, #32]
   11dd4:	cmp	r3, #0
   11dd8:	bne	11e98 <close@plt+0x104c>
   11ddc:	mov	r3, #1
   11de0:	str	r3, [sp, #48]	; 0x30
   11de4:	cmp	r7, #0
   11de8:	beq	11eb4 <close@plt+0x1068>
   11dec:	ldr	r3, [sp, #36]	; 0x24
   11df0:	mov	r2, #39	; 0x27
   11df4:	strb	r2, [r3]
   11df8:	mov	r3, #0
   11dfc:	str	r3, [sp, #32]
   11e00:	mov	r3, #1
   11e04:	str	r3, [sp, #60]	; 0x3c
   11e08:	ldr	r3, [pc, #3752]	; 12cb8 <close@plt+0x1e6c>
   11e0c:	str	r3, [sp, #72]	; 0x48
   11e10:	mov	fp, #1
   11e14:	mov	sl, #2
   11e18:	b	11cdc <close@plt+0xe90>
   11e1c:	ldr	r3, [sp, #32]
   11e20:	cmp	r3, #0
   11e24:	beq	11de4 <close@plt+0xf98>
   11e28:	mov	r3, #1
   11e2c:	str	r3, [sp, #60]	; 0x3c
   11e30:	ldr	r3, [pc, #3712]	; 12cb8 <close@plt+0x1e6c>
   11e34:	str	r3, [sp, #72]	; 0x48
   11e38:	mov	fp, #0
   11e3c:	b	11cdc <close@plt+0xe90>
   11e40:	bl	10e40 <abort@plt>
   11e44:	mov	r3, #0
   11e48:	str	r3, [sp, #32]
   11e4c:	mov	r3, #1
   11e50:	str	r3, [sp, #48]	; 0x30
   11e54:	mov	fp, #0
   11e58:	b	11cdc <close@plt+0xe90>
   11e5c:	ldr	r3, [sp, #32]
   11e60:	str	r3, [sp, #48]	; 0x30
   11e64:	mov	r3, #1
   11e68:	str	r3, [sp, #60]	; 0x3c
   11e6c:	ldr	r3, [pc, #3660]	; 12cc0 <close@plt+0x1e74>
   11e70:	str	r3, [sp, #72]	; 0x48
   11e74:	mov	fp, #0
   11e78:	b	11cdc <close@plt+0xe90>
   11e7c:	mov	r3, #1
   11e80:	str	r3, [sp, #48]	; 0x30
   11e84:	str	r3, [sp, #60]	; 0x3c
   11e88:	ldr	r3, [pc, #3632]	; 12cc0 <close@plt+0x1e74>
   11e8c:	str	r3, [sp, #72]	; 0x48
   11e90:	mov	fp, #1
   11e94:	b	11cdc <close@plt+0xe90>
   11e98:	mov	r3, #1
   11e9c:	str	r3, [sp, #60]	; 0x3c
   11ea0:	ldr	r3, [pc, #3600]	; 12cb8 <close@plt+0x1e6c>
   11ea4:	str	r3, [sp, #72]	; 0x48
   11ea8:	mov	fp, #0
   11eac:	mov	sl, #2
   11eb0:	b	11cdc <close@plt+0xe90>
   11eb4:	mov	r3, #0
   11eb8:	str	r3, [sp, #32]
   11ebc:	mov	r3, #1
   11ec0:	str	r3, [sp, #60]	; 0x3c
   11ec4:	ldr	r3, [pc, #3564]	; 12cb8 <close@plt+0x1e6c>
   11ec8:	str	r3, [sp, #72]	; 0x48
   11ecc:	mov	fp, #1
   11ed0:	mov	sl, #2
   11ed4:	b	11cdc <close@plt+0xe90>
   11ed8:	mov	r3, #0
   11edc:	str	r3, [sp, #56]	; 0x38
   11ee0:	ldr	r3, [sp, #52]	; 0x34
   11ee4:	add	r2, r3, r6
   11ee8:	str	r2, [sp, #64]	; 0x40
   11eec:	ldrb	r4, [r3, r6]
   11ef0:	cmp	r4, #126	; 0x7e
   11ef4:	ldrls	pc, [pc, r4, lsl #2]
   11ef8:	b	12734 <close@plt+0x18e8>
   11efc:	andeq	r2, r1, r4, lsl r1
   11f00:	andeq	r2, r1, r4, lsr r7
   11f04:	andeq	r2, r1, r4, lsr r7
   11f08:	andeq	r2, r1, r4, lsr r7
   11f0c:	andeq	r2, r1, r4, lsr r7
   11f10:	andeq	r2, r1, r4, lsr r7
   11f14:	andeq	r2, r1, r4, lsr r7
   11f18:	andeq	r2, r1, r0, ror r4
   11f1c:	andeq	r2, r1, ip, lsl #2
   11f20:	andeq	r2, r1, r8, lsr #8
   11f24:	andeq	r2, r1, r0, lsr #8
   11f28:	muleq	r1, r0, r3
   11f2c:	andeq	r2, r1, r8, lsl #7
   11f30:	andeq	r2, r1, r4, lsl #2
   11f34:	andeq	r2, r1, r4, lsr r7
   11f38:	andeq	r2, r1, r4, lsr r7
   11f3c:	andeq	r2, r1, r4, lsr r7
   11f40:	andeq	r2, r1, r4, lsr r7
   11f44:	andeq	r2, r1, r4, lsr r7
   11f48:	andeq	r2, r1, r4, lsr r7
   11f4c:	andeq	r2, r1, r4, lsr r7
   11f50:	andeq	r2, r1, r4, lsr r7
   11f54:	andeq	r2, r1, r4, lsr r7
   11f58:	andeq	r2, r1, r4, lsr r7
   11f5c:	andeq	r2, r1, r4, lsr r7
   11f60:	andeq	r2, r1, r4, lsr r7
   11f64:	andeq	r2, r1, r4, lsr r7
   11f68:	andeq	r2, r1, r4, lsr r7
   11f6c:	andeq	r2, r1, r4, lsr r7
   11f70:	andeq	r2, r1, r4, lsr r7
   11f74:	andeq	r2, r1, r4, lsr r7
   11f78:	andeq	r2, r1, r4, lsr r7
   11f7c:	andeq	r2, r1, r4, asr #9
   11f80:	andeq	r2, r1, r0, asr #9
   11f84:	andeq	r2, r1, r0, asr #9
   11f88:	muleq	r1, r8, r4
   11f8c:	andeq	r2, r1, r0, asr #9
   11f90:	andeq	r2, r1, r8, lsl #22
   11f94:	andeq	r2, r1, r0, asr #9
   11f98:	muleq	r1, r8, r6
   11f9c:	andeq	r2, r1, r0, asr #9
   11fa0:	andeq	r2, r1, r0, asr #9
   11fa4:	andeq	r2, r1, r0, asr #9
   11fa8:	andeq	r2, r1, r8, lsl #22
   11fac:	andeq	r2, r1, r8, lsl #22
   11fb0:	andeq	r2, r1, r8, lsl #22
   11fb4:	andeq	r2, r1, r8, lsl #22
   11fb8:	andeq	r2, r1, r8, lsl #22
   11fbc:	andeq	r2, r1, r8, lsl #22
   11fc0:	andeq	r2, r1, r8, lsl #22
   11fc4:	andeq	r2, r1, r8, lsl #22
   11fc8:	andeq	r2, r1, r8, lsl #22
   11fcc:	andeq	r2, r1, r8, lsl #22
   11fd0:	andeq	r2, r1, r8, lsl #22
   11fd4:	andeq	r2, r1, r8, lsl #22
   11fd8:	andeq	r2, r1, r8, lsl #22
   11fdc:	andeq	r2, r1, r8, lsl #22
   11fe0:	andeq	r2, r1, r8, lsl #22
   11fe4:	andeq	r2, r1, r8, lsl #22
   11fe8:	andeq	r2, r1, r0, asr #9
   11fec:	andeq	r2, r1, r0, asr #9
   11ff0:	andeq	r2, r1, r0, asr #9
   11ff4:	andeq	r2, r1, r0, asr #9
   11ff8:	andeq	r2, r1, ip, lsl r2
   11ffc:	andeq	r2, r1, r4, lsr r7
   12000:	andeq	r2, r1, r8, lsl #22
   12004:	andeq	r2, r1, r8, lsl #22
   12008:	andeq	r2, r1, r8, lsl #22
   1200c:	andeq	r2, r1, r8, lsl #22
   12010:	andeq	r2, r1, r8, lsl #22
   12014:	andeq	r2, r1, r8, lsl #22
   12018:	andeq	r2, r1, r8, lsl #22
   1201c:	andeq	r2, r1, r8, lsl #22
   12020:	andeq	r2, r1, r8, lsl #22
   12024:	andeq	r2, r1, r8, lsl #22
   12028:	andeq	r2, r1, r8, lsl #22
   1202c:	andeq	r2, r1, r8, lsl #22
   12030:	andeq	r2, r1, r8, lsl #22
   12034:	andeq	r2, r1, r8, lsl #22
   12038:	andeq	r2, r1, r8, lsl #22
   1203c:	andeq	r2, r1, r8, lsl #22
   12040:	andeq	r2, r1, r8, lsl #22
   12044:	andeq	r2, r1, r8, lsl #22
   12048:	andeq	r2, r1, r8, lsl #22
   1204c:	andeq	r2, r1, r8, lsl #22
   12050:	andeq	r2, r1, r8, lsl #22
   12054:	andeq	r2, r1, r8, lsl #22
   12058:	andeq	r2, r1, r8, lsl #22
   1205c:	andeq	r2, r1, r8, lsl #22
   12060:	andeq	r2, r1, r8, lsl #22
   12064:	andeq	r2, r1, r8, lsl #22
   12068:	andeq	r2, r1, r0, asr #9
   1206c:	muleq	r1, r8, r3
   12070:	andeq	r2, r1, r8, lsl #22
   12074:	andeq	r2, r1, r0, asr #9
   12078:	andeq	r2, r1, r8, lsl #22
   1207c:	andeq	r2, r1, r0, asr #9
   12080:	andeq	r2, r1, r8, lsl #22
   12084:	andeq	r2, r1, r8, lsl #22
   12088:	andeq	r2, r1, r8, lsl #22
   1208c:	andeq	r2, r1, r8, lsl #22
   12090:	andeq	r2, r1, r8, lsl #22
   12094:	andeq	r2, r1, r8, lsl #22
   12098:	andeq	r2, r1, r8, lsl #22
   1209c:	andeq	r2, r1, r8, lsl #22
   120a0:	andeq	r2, r1, r8, lsl #22
   120a4:	andeq	r2, r1, r8, lsl #22
   120a8:	andeq	r2, r1, r8, lsl #22
   120ac:	andeq	r2, r1, r8, lsl #22
   120b0:	andeq	r2, r1, r8, lsl #22
   120b4:	andeq	r2, r1, r8, lsl #22
   120b8:	andeq	r2, r1, r8, lsl #22
   120bc:	andeq	r2, r1, r8, lsl #22
   120c0:	andeq	r2, r1, r8, lsl #22
   120c4:	andeq	r2, r1, r8, lsl #22
   120c8:	andeq	r2, r1, r8, lsl #22
   120cc:	andeq	r2, r1, r8, lsl #22
   120d0:	andeq	r2, r1, r8, lsl #22
   120d4:	andeq	r2, r1, r8, lsl #22
   120d8:	andeq	r2, r1, r8, lsl #22
   120dc:	andeq	r2, r1, r8, lsl #22
   120e0:	andeq	r2, r1, r8, lsl #22
   120e4:	andeq	r2, r1, r8, lsl #22
   120e8:	andeq	r2, r1, r8, ror r4
   120ec:	andeq	r2, r1, r0, asr #9
   120f0:	andeq	r2, r1, r8, ror r4
   120f4:	muleq	r1, r8, r4
   120f8:	mov	r3, #0
   120fc:	str	r3, [sp, #56]	; 0x38
   12100:	b	11ee0 <close@plt+0x1094>
   12104:	mov	r3, #114	; 0x72
   12108:	b	1242c <close@plt+0x15e0>
   1210c:	mov	r3, #98	; 0x62
   12110:	b	12444 <close@plt+0x15f8>
   12114:	ldr	r3, [sp, #48]	; 0x30
   12118:	cmp	r3, #0
   1211c:	beq	12204 <close@plt+0x13b8>
   12120:	ldr	r3, [sp, #32]
   12124:	cmp	r3, #0
   12128:	bne	12c8c <close@plt+0x1e40>
   1212c:	ldr	r3, [sp, #44]	; 0x2c
   12130:	eor	r3, r3, #1
   12134:	cmp	sl, #2
   12138:	movne	r3, #0
   1213c:	andeq	r3, r3, #1
   12140:	cmp	r3, #0
   12144:	moveq	r2, fp
   12148:	beq	1218c <close@plt+0x1340>
   1214c:	cmp	r7, fp
   12150:	ldrhi	r2, [sp, #36]	; 0x24
   12154:	movhi	r1, #39	; 0x27
   12158:	strbhi	r1, [r2, fp]
   1215c:	add	r2, fp, #1
   12160:	cmp	r7, r2
   12164:	ldrhi	r1, [sp, #36]	; 0x24
   12168:	movhi	r0, #36	; 0x24
   1216c:	strbhi	r0, [r1, r2]
   12170:	add	r2, fp, #2
   12174:	cmp	r7, r2
   12178:	ldrhi	r1, [sp, #36]	; 0x24
   1217c:	movhi	r0, #39	; 0x27
   12180:	strbhi	r0, [r1, r2]
   12184:	add	r2, fp, #3
   12188:	str	r3, [sp, #44]	; 0x2c
   1218c:	cmp	r7, r2
   12190:	ldrhi	r3, [sp, #36]	; 0x24
   12194:	movhi	r1, #92	; 0x5c
   12198:	strbhi	r1, [r3, r2]
   1219c:	add	fp, r2, #1
   121a0:	cmp	r5, #0
   121a4:	beq	12b10 <close@plt+0x1cc4>
   121a8:	add	r3, r6, #1
   121ac:	ldr	r1, [sp, #28]
   121b0:	cmp	r1, r3
   121b4:	bls	12b20 <close@plt+0x1cd4>
   121b8:	ldr	r1, [sp, #52]	; 0x34
   121bc:	ldrb	r3, [r1, r3]
   121c0:	sub	r3, r3, #48	; 0x30
   121c4:	uxtb	r3, r3
   121c8:	cmp	r3, #9
   121cc:	bhi	12b2c <close@plt+0x1ce0>
   121d0:	cmp	r7, fp
   121d4:	movhi	r3, #48	; 0x30
   121d8:	ldrhi	r1, [sp, #36]	; 0x24
   121dc:	strbhi	r3, [r1, fp]
   121e0:	add	r3, r2, #2
   121e4:	cmp	r7, r3
   121e8:	movhi	r1, #48	; 0x30
   121ec:	ldrhi	r0, [sp, #36]	; 0x24
   121f0:	strbhi	r1, [r0, r3]
   121f4:	add	fp, r2, #3
   121f8:	ldr	r8, [sp, #32]
   121fc:	mov	r4, #48	; 0x30
   12200:	b	124dc <close@plt+0x1690>
   12204:	ldr	r3, [sp, #156]	; 0x9c
   12208:	tst	r3, #1
   1220c:	bne	125d0 <close@plt+0x1784>
   12210:	ldr	r5, [sp, #48]	; 0x30
   12214:	mov	r8, r5
   12218:	b	124dc <close@plt+0x1690>
   1221c:	cmp	sl, #2
   12220:	beq	12238 <close@plt+0x13ec>
   12224:	cmp	sl, #5
   12228:	beq	12250 <close@plt+0x1404>
   1222c:	mov	r8, #0
   12230:	mov	r5, r8
   12234:	b	124dc <close@plt+0x1690>
   12238:	ldr	r3, [sp, #32]
   1223c:	cmp	r3, #0
   12240:	bne	12ca0 <close@plt+0x1e54>
   12244:	mov	r8, r3
   12248:	mov	r5, r3
   1224c:	b	124dc <close@plt+0x1690>
   12250:	ldr	r3, [sp, #156]	; 0x9c
   12254:	tst	r3, #4
   12258:	beq	12b38 <close@plt+0x1cec>
   1225c:	add	r3, r6, #2
   12260:	ldr	r2, [sp, #28]
   12264:	cmp	r2, r3
   12268:	bls	12b44 <close@plt+0x1cf8>
   1226c:	ldr	r2, [sp, #52]	; 0x34
   12270:	add	r2, r2, r6
   12274:	ldrb	r2, [r2, #1]
   12278:	cmp	r2, #63	; 0x3f
   1227c:	movne	r8, #0
   12280:	movne	r5, r8
   12284:	bne	124dc <close@plt+0x1690>
   12288:	ldr	r2, [sp, #52]	; 0x34
   1228c:	ldrb	r2, [r2, r3]
   12290:	sub	r1, r2, #33	; 0x21
   12294:	cmp	r1, #29
   12298:	ldrls	pc, [pc, r1, lsl #2]
   1229c:	b	12b50 <close@plt+0x1d04>
   122a0:	andeq	r2, r1, r8, lsl r3
   122a4:	andeq	r2, r1, r0, asr fp
   122a8:	andeq	r2, r1, r0, asr fp
   122ac:	andeq	r2, r1, r0, asr fp
   122b0:	andeq	r2, r1, r0, asr fp
   122b4:	andeq	r2, r1, r0, asr fp
   122b8:	andeq	r2, r1, r8, lsl r3
   122bc:	andeq	r2, r1, r8, lsl r3
   122c0:	andeq	r2, r1, r8, lsl r3
   122c4:	andeq	r2, r1, r0, asr fp
   122c8:	andeq	r2, r1, r0, asr fp
   122cc:	andeq	r2, r1, r0, asr fp
   122d0:	andeq	r2, r1, r8, lsl r3
   122d4:	andeq	r2, r1, r0, asr fp
   122d8:	andeq	r2, r1, r8, lsl r3
   122dc:	andeq	r2, r1, r0, asr fp
   122e0:	andeq	r2, r1, r0, asr fp
   122e4:	andeq	r2, r1, r0, asr fp
   122e8:	andeq	r2, r1, r0, asr fp
   122ec:	andeq	r2, r1, r0, asr fp
   122f0:	andeq	r2, r1, r0, asr fp
   122f4:	andeq	r2, r1, r0, asr fp
   122f8:	andeq	r2, r1, r0, asr fp
   122fc:	andeq	r2, r1, r0, asr fp
   12300:	andeq	r2, r1, r0, asr fp
   12304:	andeq	r2, r1, r0, asr fp
   12308:	andeq	r2, r1, r0, asr fp
   1230c:	andeq	r2, r1, r8, lsl r3
   12310:	andeq	r2, r1, r8, lsl r3
   12314:	andeq	r2, r1, r8, lsl r3
   12318:	ldr	r1, [sp, #32]
   1231c:	cmp	r1, #0
   12320:	bne	12d60 <close@plt+0x1f14>
   12324:	cmp	r7, fp
   12328:	movhi	r1, #63	; 0x3f
   1232c:	ldrhi	r0, [sp, #36]	; 0x24
   12330:	strbhi	r1, [r0, fp]
   12334:	add	r1, fp, #1
   12338:	cmp	r7, r1
   1233c:	ldrhi	r0, [sp, #36]	; 0x24
   12340:	movhi	ip, #34	; 0x22
   12344:	strbhi	ip, [r0, r1]
   12348:	add	r1, fp, #2
   1234c:	cmp	r7, r1
   12350:	ldrhi	r0, [sp, #36]	; 0x24
   12354:	movhi	ip, #34	; 0x22
   12358:	strbhi	ip, [r0, r1]
   1235c:	add	r1, fp, #3
   12360:	cmp	r7, r1
   12364:	movhi	r0, #63	; 0x3f
   12368:	ldrhi	ip, [sp, #36]	; 0x24
   1236c:	strbhi	r0, [ip, r1]
   12370:	add	fp, fp, #4
   12374:	ldr	r5, [sp, #32]
   12378:	mov	r8, r5
   1237c:	mov	r4, r2
   12380:	mov	r6, r3
   12384:	b	124dc <close@plt+0x1690>
   12388:	mov	r3, #102	; 0x66
   1238c:	b	12444 <close@plt+0x15f8>
   12390:	mov	r3, #118	; 0x76
   12394:	b	12444 <close@plt+0x15f8>
   12398:	cmp	sl, #2
   1239c:	beq	12408 <close@plt+0x15bc>
   123a0:	ldr	r3, [sp, #48]	; 0x30
   123a4:	ldr	r2, [sp, #32]
   123a8:	and	r3, r3, r2
   123ac:	tst	r9, r3
   123b0:	moveq	r3, r4
   123b4:	beq	12444 <close@plt+0x15f8>
   123b8:	mov	r8, #0
   123bc:	mov	r5, r8
   123c0:	eor	r5, r5, #1
   123c4:	ldr	r3, [sp, #44]	; 0x2c
   123c8:	and	r5, r5, r3
   123cc:	tst	r5, #255	; 0xff
   123d0:	beq	125b0 <close@plt+0x1764>
   123d4:	cmp	r7, fp
   123d8:	ldrhi	r3, [sp, #36]	; 0x24
   123dc:	movhi	r2, #39	; 0x27
   123e0:	strbhi	r2, [r3, fp]
   123e4:	add	r3, fp, #1
   123e8:	cmp	r7, r3
   123ec:	ldrhi	r2, [sp, #36]	; 0x24
   123f0:	movhi	r1, #39	; 0x27
   123f4:	strbhi	r1, [r2, r3]
   123f8:	add	fp, fp, #2
   123fc:	mov	r3, #0
   12400:	str	r3, [sp, #44]	; 0x2c
   12404:	b	125b0 <close@plt+0x1764>
   12408:	ldr	r3, [sp, #32]
   1240c:	cmp	r3, #0
   12410:	bne	12cac <close@plt+0x1e60>
   12414:	mov	r8, r3
   12418:	mov	r5, r3
   1241c:	b	123c0 <close@plt+0x1574>
   12420:	mov	r3, #110	; 0x6e
   12424:	b	1242c <close@plt+0x15e0>
   12428:	mov	r3, #116	; 0x74
   1242c:	ldr	r2, [sp, #32]
   12430:	cmp	sl, #2
   12434:	movne	r2, #0
   12438:	andeq	r2, r2, #1
   1243c:	cmp	r2, #0
   12440:	bne	12464 <close@plt+0x1618>
   12444:	ldr	r2, [sp, #48]	; 0x30
   12448:	cmp	r2, #0
   1244c:	moveq	r8, r2
   12450:	moveq	r5, r2
   12454:	beq	124dc <close@plt+0x1690>
   12458:	mov	r4, r3
   1245c:	mov	r8, #0
   12460:	b	12534 <close@plt+0x16e8>
   12464:	mov	r8, sl
   12468:	mov	sl, r7
   1246c:	b	12cd8 <close@plt+0x1e8c>
   12470:	mov	r3, #97	; 0x61
   12474:	b	12444 <close@plt+0x15f8>
   12478:	ldr	r3, [sp, #28]
   1247c:	cmn	r3, #1
   12480:	beq	124ac <close@plt+0x1660>
   12484:	ldr	r3, [sp, #28]
   12488:	subs	r3, r3, #1
   1248c:	movne	r3, #1
   12490:	cmp	r3, #0
   12494:	bne	12b5c <close@plt+0x1d10>
   12498:	cmp	r6, #0
   1249c:	beq	124c4 <close@plt+0x1678>
   124a0:	mov	r8, #0
   124a4:	mov	r5, r8
   124a8:	b	124dc <close@plt+0x1690>
   124ac:	ldr	r3, [sp, #52]	; 0x34
   124b0:	ldrb	r3, [r3, #1]
   124b4:	adds	r3, r3, #0
   124b8:	movne	r3, #1
   124bc:	b	12490 <close@plt+0x1644>
   124c0:	mov	r8, #0
   124c4:	ldr	r5, [sp, #32]
   124c8:	cmp	sl, #2
   124cc:	movne	r5, #0
   124d0:	andeq	r5, r5, #1
   124d4:	cmp	r5, #0
   124d8:	bne	1268c <close@plt+0x1840>
   124dc:	ldr	r3, [sp, #68]	; 0x44
   124e0:	cmp	sl, #2
   124e4:	orreq	r3, r3, #1
   124e8:	eor	r3, r3, #1
   124ec:	ldr	r2, [sp, #32]
   124f0:	orr	r3, r2, r3
   124f4:	tst	r3, #255	; 0xff
   124f8:	beq	12528 <close@plt+0x16dc>
   124fc:	ldr	r3, [sp, #160]	; 0xa0
   12500:	cmp	r3, #0
   12504:	beq	12528 <close@plt+0x16dc>
   12508:	lsr	r2, r4, #5
   1250c:	uxtb	r2, r2
   12510:	and	r3, r4, #31
   12514:	ldr	r1, [sp, #160]	; 0xa0
   12518:	ldr	r2, [r1, r2, lsl #2]
   1251c:	lsr	r3, r2, r3
   12520:	tst	r3, #1
   12524:	bne	12534 <close@plt+0x16e8>
   12528:	ldr	r3, [sp, #56]	; 0x38
   1252c:	cmp	r3, #0
   12530:	beq	123c0 <close@plt+0x1574>
   12534:	ldr	r3, [sp, #32]
   12538:	cmp	r3, #0
   1253c:	bne	12d48 <close@plt+0x1efc>
   12540:	ldr	r3, [sp, #44]	; 0x2c
   12544:	eor	r3, r3, #1
   12548:	cmp	sl, #2
   1254c:	movne	r3, #0
   12550:	andeq	r3, r3, #1
   12554:	cmp	r3, #0
   12558:	beq	1259c <close@plt+0x1750>
   1255c:	cmp	r7, fp
   12560:	ldrhi	r2, [sp, #36]	; 0x24
   12564:	movhi	r1, #39	; 0x27
   12568:	strbhi	r1, [r2, fp]
   1256c:	add	r2, fp, #1
   12570:	cmp	r7, r2
   12574:	ldrhi	r1, [sp, #36]	; 0x24
   12578:	movhi	r0, #36	; 0x24
   1257c:	strbhi	r0, [r1, r2]
   12580:	add	r2, fp, #2
   12584:	cmp	r7, r2
   12588:	ldrhi	r1, [sp, #36]	; 0x24
   1258c:	movhi	r0, #39	; 0x27
   12590:	strbhi	r0, [r1, r2]
   12594:	add	fp, fp, #3
   12598:	str	r3, [sp, #44]	; 0x2c
   1259c:	cmp	r7, fp
   125a0:	ldrhi	r3, [sp, #36]	; 0x24
   125a4:	movhi	r2, #92	; 0x5c
   125a8:	strbhi	r2, [r3, fp]
   125ac:	add	fp, fp, #1
   125b0:	cmp	fp, r7
   125b4:	ldrcc	r3, [sp, #36]	; 0x24
   125b8:	strbcc	r4, [r3, fp]
   125bc:	add	fp, fp, #1
   125c0:	ldr	r3, [sp, #40]	; 0x28
   125c4:	cmp	r8, #0
   125c8:	moveq	r3, #0
   125cc:	str	r3, [sp, #40]	; 0x28
   125d0:	add	r6, r6, #1
   125d4:	ldr	r3, [sp, #28]
   125d8:	cmn	r3, #1
   125dc:	beq	12b68 <close@plt+0x1d1c>
   125e0:	ldr	r3, [sp, #28]
   125e4:	subs	r8, r3, r6
   125e8:	movne	r8, #1
   125ec:	cmp	r8, #0
   125f0:	beq	12b7c <close@plt+0x1d30>
   125f4:	ldr	r5, [sp, #48]	; 0x30
   125f8:	cmp	sl, #2
   125fc:	moveq	r5, #0
   12600:	andne	r5, r5, #1
   12604:	ldr	r3, [sp, #60]	; 0x3c
   12608:	adds	r9, r3, #0
   1260c:	movne	r9, #1
   12610:	ands	r2, r5, r9
   12614:	str	r2, [sp, #56]	; 0x38
   12618:	beq	11ee0 <close@plt+0x1094>
   1261c:	add	r4, r6, r3
   12620:	ldr	r2, [sp, #28]
   12624:	cmp	r3, #1
   12628:	movls	r3, #0
   1262c:	movhi	r3, #1
   12630:	cmn	r2, #1
   12634:	movne	r3, #0
   12638:	cmp	r3, #0
   1263c:	beq	1264c <close@plt+0x1800>
   12640:	ldr	r0, [sp, #52]	; 0x34
   12644:	bl	10d74 <strlen@plt>
   12648:	str	r0, [sp, #28]
   1264c:	ldr	r3, [sp, #28]
   12650:	cmp	r3, r4
   12654:	bcc	11ed8 <close@plt+0x108c>
   12658:	ldr	r2, [sp, #60]	; 0x3c
   1265c:	ldr	r1, [sp, #72]	; 0x48
   12660:	ldr	r3, [sp, #52]	; 0x34
   12664:	add	r0, r3, r6
   12668:	bl	10c78 <memcmp@plt>
   1266c:	cmp	r0, #0
   12670:	bne	120f8 <close@plt+0x12ac>
   12674:	ldr	r3, [sp, #32]
   12678:	cmp	r3, #0
   1267c:	beq	11ee0 <close@plt+0x1094>
   12680:	mov	r8, sl
   12684:	mov	sl, r7
   12688:	b	12cd8 <close@plt+0x1e8c>
   1268c:	mov	r8, sl
   12690:	mov	sl, r7
   12694:	b	12cd8 <close@plt+0x1e8c>
   12698:	cmp	sl, #2
   1269c:	strne	r8, [sp, #80]	; 0x50
   126a0:	movne	r5, #0
   126a4:	bne	124dc <close@plt+0x1690>
   126a8:	ldr	r3, [sp, #32]
   126ac:	cmp	r3, #0
   126b0:	bne	12cc4 <close@plt+0x1e78>
   126b4:	ldr	r2, [sp, #76]	; 0x4c
   126b8:	adds	r3, r7, #0
   126bc:	movne	r3, #1
   126c0:	cmp	r2, #0
   126c4:	movne	r3, #0
   126c8:	cmp	r3, #0
   126cc:	movne	r3, #0
   126d0:	bne	12700 <close@plt+0x18b4>
   126d4:	cmp	r7, fp
   126d8:	ldrhi	r3, [sp, #36]	; 0x24
   126dc:	movhi	r2, #39	; 0x27
   126e0:	strbhi	r2, [r3, fp]
   126e4:	add	r3, fp, #1
   126e8:	cmp	r7, r3
   126ec:	ldrhi	r2, [sp, #36]	; 0x24
   126f0:	movhi	r1, #92	; 0x5c
   126f4:	strbhi	r1, [r2, r3]
   126f8:	mov	r3, r7
   126fc:	ldr	r7, [sp, #76]	; 0x4c
   12700:	add	r2, fp, #2
   12704:	cmp	r2, r3
   12708:	ldrcc	r1, [sp, #36]	; 0x24
   1270c:	movcc	r0, #39	; 0x27
   12710:	strbcc	r0, [r1, r2]
   12714:	add	fp, fp, #3
   12718:	ldr	r2, [sp, #32]
   1271c:	mov	r5, r2
   12720:	str	r8, [sp, #80]	; 0x50
   12724:	str	r2, [sp, #44]	; 0x2c
   12728:	str	r7, [sp, #76]	; 0x4c
   1272c:	mov	r7, r3
   12730:	b	124dc <close@plt+0x1690>
   12734:	ldr	r5, [sp, #84]	; 0x54
   12738:	cmp	r5, #1
   1273c:	beq	1276c <close@plt+0x1920>
   12740:	mov	r3, #0
   12744:	str	r3, [sp, #104]	; 0x68
   12748:	str	r3, [sp, #108]	; 0x6c
   1274c:	ldr	r3, [sp, #28]
   12750:	cmn	r3, #1
   12754:	beq	127a0 <close@plt+0x1954>
   12758:	mov	r3, #0
   1275c:	str	r4, [sp, #88]	; 0x58
   12760:	str	fp, [sp, #92]	; 0x5c
   12764:	mov	fp, r3
   12768:	b	128c8 <close@plt+0x1a7c>
   1276c:	bl	10d5c <__ctype_b_loc@plt>
   12770:	ldr	r2, [r0]
   12774:	lsl	r3, r4, #1
   12778:	ldrh	r8, [r2, r3]
   1277c:	lsr	r8, r8, #14
   12780:	and	r8, r8, #1
   12784:	mov	r2, r5
   12788:	eor	r5, r8, #1
   1278c:	ldr	r3, [sp, #48]	; 0x30
   12790:	and	r5, r5, r3
   12794:	ands	r5, r5, #255	; 0xff
   12798:	beq	124dc <close@plt+0x1690>
   1279c:	b	12960 <close@plt+0x1b14>
   127a0:	ldr	r0, [sp, #52]	; 0x34
   127a4:	bl	10d74 <strlen@plt>
   127a8:	str	r0, [sp, #28]
   127ac:	b	12758 <close@plt+0x190c>
   127b0:	mov	r2, fp
   127b4:	mov	r1, r4
   127b8:	ldr	r4, [sp, #88]	; 0x58
   127bc:	ldr	fp, [sp, #92]	; 0x5c
   127c0:	ldr	r0, [sp, #28]
   127c4:	cmp	r0, r5
   127c8:	bls	12994 <close@plt+0x1b48>
   127cc:	ldrb	r3, [r1]
   127d0:	cmp	r3, #0
   127d4:	beq	1299c <close@plt+0x1b50>
   127d8:	mov	r3, r1
   127dc:	add	r2, r2, #1
   127e0:	add	r1, r6, r2
   127e4:	cmp	r0, r1
   127e8:	bls	129a4 <close@plt+0x1b58>
   127ec:	ldrb	r1, [r3, #1]!
   127f0:	cmp	r1, #0
   127f4:	bne	127dc <close@plt+0x1990>
   127f8:	mov	r8, #0
   127fc:	b	12958 <close@plt+0x1b0c>
   12800:	cmp	r4, r5
   12804:	beq	128a4 <close@plt+0x1a58>
   12808:	ldrb	r3, [r4, #1]!
   1280c:	sub	r3, r3, #91	; 0x5b
   12810:	cmp	r3, #33	; 0x21
   12814:	ldrls	pc, [pc, r3, lsl #2]
   12818:	b	12800 <close@plt+0x19b4>
   1281c:	ldrdeq	r2, [r1], -r0
   12820:	ldrdeq	r2, [r1], -r0
   12824:	andeq	r2, r1, r0, lsl #16
   12828:	ldrdeq	r2, [r1], -r0
   1282c:	andeq	r2, r1, r0, lsl #16
   12830:	ldrdeq	r2, [r1], -r0
   12834:	andeq	r2, r1, r0, lsl #16
   12838:	andeq	r2, r1, r0, lsl #16
   1283c:	andeq	r2, r1, r0, lsl #16
   12840:	andeq	r2, r1, r0, lsl #16
   12844:	andeq	r2, r1, r0, lsl #16
   12848:	andeq	r2, r1, r0, lsl #16
   1284c:	andeq	r2, r1, r0, lsl #16
   12850:	andeq	r2, r1, r0, lsl #16
   12854:	andeq	r2, r1, r0, lsl #16
   12858:	andeq	r2, r1, r0, lsl #16
   1285c:	andeq	r2, r1, r0, lsl #16
   12860:	andeq	r2, r1, r0, lsl #16
   12864:	andeq	r2, r1, r0, lsl #16
   12868:	andeq	r2, r1, r0, lsl #16
   1286c:	andeq	r2, r1, r0, lsl #16
   12870:	andeq	r2, r1, r0, lsl #16
   12874:	andeq	r2, r1, r0, lsl #16
   12878:	andeq	r2, r1, r0, lsl #16
   1287c:	andeq	r2, r1, r0, lsl #16
   12880:	andeq	r2, r1, r0, lsl #16
   12884:	andeq	r2, r1, r0, lsl #16
   12888:	andeq	r2, r1, r0, lsl #16
   1288c:	andeq	r2, r1, r0, lsl #16
   12890:	andeq	r2, r1, r0, lsl #16
   12894:	andeq	r2, r1, r0, lsl #16
   12898:	andeq	r2, r1, r0, lsl #16
   1289c:	andeq	r2, r1, r0, lsl #16
   128a0:	ldrdeq	r2, [r1], -r0
   128a4:	ldr	r0, [sp, #100]	; 0x64
   128a8:	bl	10cc0 <iswprint@plt>
   128ac:	cmp	r0, #0
   128b0:	moveq	r8, #0
   128b4:	add	fp, fp, r9
   128b8:	add	r0, sp, #104	; 0x68
   128bc:	bl	10c6c <mbsinit@plt>
   128c0:	cmp	r0, #0
   128c4:	bne	12938 <close@plt+0x1aec>
   128c8:	add	r5, r6, fp
   128cc:	ldr	r3, [sp, #52]	; 0x34
   128d0:	add	r4, r3, r5
   128d4:	add	r3, sp, #104	; 0x68
   128d8:	ldr	r2, [sp, #28]
   128dc:	sub	r2, r2, r5
   128e0:	mov	r1, r4
   128e4:	add	r0, sp, #100	; 0x64
   128e8:	bl	14454 <close@plt+0x3608>
   128ec:	subs	r9, r0, #0
   128f0:	beq	129ac <close@plt+0x1b60>
   128f4:	cmn	r9, #1
   128f8:	beq	12948 <close@plt+0x1afc>
   128fc:	cmn	r9, #2
   12900:	beq	127b0 <close@plt+0x1964>
   12904:	ldr	r3, [sp, #32]
   12908:	cmp	sl, #2
   1290c:	movne	r3, #0
   12910:	andeq	r3, r3, #1
   12914:	cmp	r3, #0
   12918:	beq	128a4 <close@plt+0x1a58>
   1291c:	cmp	r9, #1
   12920:	bls	128a4 <close@plt+0x1a58>
   12924:	sub	r3, r9, #1
   12928:	add	r5, r3, r5
   1292c:	ldr	r3, [sp, #52]	; 0x34
   12930:	add	r5, r3, r5
   12934:	b	12808 <close@plt+0x19bc>
   12938:	ldr	r4, [sp, #88]	; 0x58
   1293c:	mov	r2, fp
   12940:	ldr	fp, [sp, #92]	; 0x5c
   12944:	b	12958 <close@plt+0x1b0c>
   12948:	ldr	r4, [sp, #88]	; 0x58
   1294c:	mov	r2, fp
   12950:	ldr	fp, [sp, #92]	; 0x5c
   12954:	mov	r8, #0
   12958:	cmp	r2, #1
   1295c:	bls	12788 <close@plt+0x193c>
   12960:	add	r1, r6, r2
   12964:	ldr	ip, [sp, #64]	; 0x40
   12968:	mov	r5, #0
   1296c:	eor	r3, r8, #1
   12970:	ldr	r2, [sp, #48]	; 0x30
   12974:	and	r3, r3, r2
   12978:	uxtb	r3, r3
   1297c:	ldr	r9, [sp, #32]
   12980:	ldr	lr, [sp, #44]	; 0x2c
   12984:	ldr	r2, [sp, #56]	; 0x38
   12988:	str	r8, [sp, #56]	; 0x38
   1298c:	ldr	r0, [sp, #36]	; 0x24
   12990:	b	12a2c <close@plt+0x1be0>
   12994:	mov	r8, #0
   12998:	b	12958 <close@plt+0x1b0c>
   1299c:	mov	r8, #0
   129a0:	b	12958 <close@plt+0x1b0c>
   129a4:	mov	r8, #0
   129a8:	b	12958 <close@plt+0x1b0c>
   129ac:	ldr	r4, [sp, #88]	; 0x58
   129b0:	mov	r2, fp
   129b4:	ldr	fp, [sp, #92]	; 0x5c
   129b8:	b	12958 <close@plt+0x1b0c>
   129bc:	cmp	r2, #0
   129c0:	beq	129d4 <close@plt+0x1b88>
   129c4:	cmp	r7, fp
   129c8:	movhi	r2, #92	; 0x5c
   129cc:	strbhi	r2, [r0, fp]
   129d0:	add	fp, fp, #1
   129d4:	add	r8, r6, #1
   129d8:	cmp	r1, r8
   129dc:	bls	12ae4 <close@plt+0x1c98>
   129e0:	eor	r2, r5, #1
   129e4:	and	r2, r2, lr
   129e8:	ands	r2, r2, #255	; 0xff
   129ec:	beq	12b00 <close@plt+0x1cb4>
   129f0:	cmp	r7, fp
   129f4:	movhi	r2, #39	; 0x27
   129f8:	strbhi	r2, [r0, fp]
   129fc:	add	r2, fp, #1
   12a00:	cmp	r7, r2
   12a04:	movhi	lr, #39	; 0x27
   12a08:	strbhi	lr, [r0, r2]
   12a0c:	add	fp, fp, #2
   12a10:	mov	r6, r8
   12a14:	mov	r2, r3
   12a18:	mov	lr, r3
   12a1c:	cmp	r7, fp
   12a20:	strbhi	r4, [r0, fp]
   12a24:	add	fp, fp, #1
   12a28:	ldrb	r4, [ip, #1]!
   12a2c:	cmp	r3, #0
   12a30:	beq	129bc <close@plt+0x1b70>
   12a34:	cmp	r9, #0
   12a38:	bne	12d3c <close@plt+0x1ef0>
   12a3c:	eor	r5, lr, #1
   12a40:	cmp	sl, #2
   12a44:	movne	r5, #0
   12a48:	andeq	r5, r5, #1
   12a4c:	cmp	r5, #0
   12a50:	beq	12a88 <close@plt+0x1c3c>
   12a54:	cmp	r7, fp
   12a58:	movhi	lr, #39	; 0x27
   12a5c:	strbhi	lr, [r0, fp]
   12a60:	add	lr, fp, #1
   12a64:	cmp	r7, lr
   12a68:	movhi	r8, #36	; 0x24
   12a6c:	strbhi	r8, [r0, lr]
   12a70:	add	lr, fp, #2
   12a74:	cmp	r7, lr
   12a78:	movhi	r8, #39	; 0x27
   12a7c:	strbhi	r8, [r0, lr]
   12a80:	add	fp, fp, #3
   12a84:	mov	lr, r5
   12a88:	cmp	r7, fp
   12a8c:	movhi	r5, #92	; 0x5c
   12a90:	strbhi	r5, [r0, fp]
   12a94:	add	r5, fp, #1
   12a98:	cmp	r7, r5
   12a9c:	lsrhi	r8, r4, #6
   12aa0:	addhi	r8, r8, #48	; 0x30
   12aa4:	strbhi	r8, [r0, r5]
   12aa8:	add	r8, fp, #2
   12aac:	cmp	r7, r8
   12ab0:	lsrhi	r5, r4, #3
   12ab4:	andhi	r5, r5, #7
   12ab8:	addhi	r5, r5, #48	; 0x30
   12abc:	strbhi	r5, [r0, r8]
   12ac0:	add	fp, fp, #3
   12ac4:	and	r4, r4, #7
   12ac8:	add	r4, r4, #48	; 0x30
   12acc:	add	r5, r6, #1
   12ad0:	cmp	r1, r5
   12ad4:	bls	12af0 <close@plt+0x1ca4>
   12ad8:	mov	r6, r5
   12adc:	mov	r5, r3
   12ae0:	b	12a1c <close@plt+0x1bd0>
   12ae4:	str	lr, [sp, #44]	; 0x2c
   12ae8:	ldr	r8, [sp, #56]	; 0x38
   12aec:	b	123c0 <close@plt+0x1574>
   12af0:	str	lr, [sp, #44]	; 0x2c
   12af4:	ldr	r8, [sp, #56]	; 0x38
   12af8:	mov	r5, r3
   12afc:	b	123c0 <close@plt+0x1574>
   12b00:	mov	r6, r8
   12b04:	b	12a1c <close@plt+0x1bd0>
   12b08:	mov	r5, #0
   12b0c:	b	124dc <close@plt+0x1690>
   12b10:	mov	r8, r5
   12b14:	ldr	r5, [sp, #48]	; 0x30
   12b18:	mov	r4, #48	; 0x30
   12b1c:	b	124dc <close@plt+0x1690>
   12b20:	ldr	r8, [sp, #32]
   12b24:	mov	r4, #48	; 0x30
   12b28:	b	124dc <close@plt+0x1690>
   12b2c:	ldr	r8, [sp, #32]
   12b30:	mov	r4, #48	; 0x30
   12b34:	b	124dc <close@plt+0x1690>
   12b38:	mov	r8, #0
   12b3c:	mov	r5, r8
   12b40:	b	124dc <close@plt+0x1690>
   12b44:	mov	r8, #0
   12b48:	mov	r5, r8
   12b4c:	b	124dc <close@plt+0x1690>
   12b50:	mov	r8, #0
   12b54:	mov	r5, r8
   12b58:	b	124dc <close@plt+0x1690>
   12b5c:	mov	r8, #0
   12b60:	mov	r5, r8
   12b64:	b	124dc <close@plt+0x1690>
   12b68:	ldr	r3, [sp, #52]	; 0x34
   12b6c:	ldrb	r8, [r3, r6]
   12b70:	adds	r8, r8, #0
   12b74:	movne	r8, #1
   12b78:	b	125ec <close@plt+0x17a0>
   12b7c:	cmp	sl, #2
   12b80:	movne	r3, #0
   12b84:	moveq	r3, #1
   12b88:	ldr	r1, [sp, #32]
   12b8c:	mov	r2, r1
   12b90:	and	r2, r2, r3
   12b94:	cmp	fp, #0
   12b98:	movne	r2, #0
   12b9c:	andeq	r2, r2, #1
   12ba0:	cmp	r2, #0
   12ba4:	bne	12d54 <close@plt+0x1f08>
   12ba8:	eor	r2, r1, #1
   12bac:	and	r3, r3, r2
   12bb0:	ldr	r1, [sp, #80]	; 0x50
   12bb4:	tst	r1, r3
   12bb8:	beq	12c30 <close@plt+0x1de4>
   12bbc:	ldr	r3, [sp, #40]	; 0x28
   12bc0:	cmp	r3, #0
   12bc4:	bne	12bec <close@plt+0x1da0>
   12bc8:	ldr	r1, [sp, #76]	; 0x4c
   12bcc:	clz	r3, r7
   12bd0:	lsr	r3, r3, #5
   12bd4:	cmp	r1, #0
   12bd8:	moveq	r3, #0
   12bdc:	cmp	r3, #0
   12be0:	beq	12c30 <close@plt+0x1de4>
   12be4:	ldr	r7, [sp, #76]	; 0x4c
   12be8:	b	11c80 <close@plt+0xe34>
   12bec:	ldr	r3, [sp, #168]	; 0xa8
   12bf0:	str	r3, [sp, #16]
   12bf4:	ldr	r3, [sp, #164]	; 0xa4
   12bf8:	str	r3, [sp, #12]
   12bfc:	ldr	r3, [sp, #160]	; 0xa0
   12c00:	str	r3, [sp, #8]
   12c04:	ldr	r3, [sp, #156]	; 0x9c
   12c08:	str	r3, [sp, #4]
   12c0c:	mov	r3, #5
   12c10:	str	r3, [sp]
   12c14:	ldr	r3, [sp, #28]
   12c18:	ldr	r2, [sp, #52]	; 0x34
   12c1c:	ldr	r1, [sp, #76]	; 0x4c
   12c20:	ldr	r0, [sp, #36]	; 0x24
   12c24:	bl	11c20 <close@plt+0xdd4>
   12c28:	mov	fp, r0
   12c2c:	b	12d30 <close@plt+0x1ee4>
   12c30:	mov	sl, r7
   12c34:	ldr	r3, [sp, #72]	; 0x48
   12c38:	cmp	r3, #0
   12c3c:	moveq	r2, #0
   12c40:	andne	r2, r2, #1
   12c44:	cmp	r2, #0
   12c48:	beq	12c78 <close@plt+0x1e2c>
   12c4c:	mov	r2, r3
   12c50:	ldrb	r3, [r3]
   12c54:	cmp	r3, #0
   12c58:	beq	12c78 <close@plt+0x1e2c>
   12c5c:	ldr	r1, [sp, #36]	; 0x24
   12c60:	cmp	sl, fp
   12c64:	strbhi	r3, [r1, fp]
   12c68:	add	fp, fp, #1
   12c6c:	ldrb	r3, [r2, #1]!
   12c70:	cmp	r3, #0
   12c74:	bne	12c60 <close@plt+0x1e14>
   12c78:	cmp	sl, fp
   12c7c:	movhi	r3, #0
   12c80:	ldrhi	r2, [sp, #36]	; 0x24
   12c84:	strbhi	r3, [r2, fp]
   12c88:	b	12d30 <close@plt+0x1ee4>
   12c8c:	mov	r8, sl
   12c90:	mov	sl, r7
   12c94:	ldr	r3, [sp, #32]
   12c98:	str	r3, [sp, #48]	; 0x30
   12c9c:	b	12cd8 <close@plt+0x1e8c>
   12ca0:	mov	r8, sl
   12ca4:	mov	sl, r7
   12ca8:	b	12cd8 <close@plt+0x1e8c>
   12cac:	mov	r8, sl
   12cb0:	mov	sl, r7
   12cb4:	b	12cd8 <close@plt+0x1e8c>
   12cb8:	andeq	r5, r1, r0, ror r0
   12cbc:	andeq	r5, r1, r0, lsl #1
   12cc0:	andeq	r5, r1, r4, ror r0
   12cc4:	mov	r8, sl
   12cc8:	mov	sl, r7
   12ccc:	b	12cd8 <close@plt+0x1e8c>
   12cd0:	mov	r8, sl
   12cd4:	mov	sl, r7
   12cd8:	ldr	r3, [sp, #48]	; 0x30
   12cdc:	cmp	r8, #2
   12ce0:	movne	r3, #0
   12ce4:	andeq	r3, r3, #1
   12ce8:	cmp	r3, #0
   12cec:	movne	r8, #4
   12cf0:	ldr	r3, [sp, #168]	; 0xa8
   12cf4:	str	r3, [sp, #16]
   12cf8:	ldr	r3, [sp, #164]	; 0xa4
   12cfc:	str	r3, [sp, #12]
   12d00:	mov	r3, #0
   12d04:	str	r3, [sp, #8]
   12d08:	ldr	r3, [sp, #156]	; 0x9c
   12d0c:	bic	r3, r3, #2
   12d10:	str	r3, [sp, #4]
   12d14:	str	r8, [sp]
   12d18:	ldr	r3, [sp, #28]
   12d1c:	ldr	r2, [sp, #52]	; 0x34
   12d20:	mov	r1, sl
   12d24:	ldr	r0, [sp, #36]	; 0x24
   12d28:	bl	11c20 <close@plt+0xdd4>
   12d2c:	mov	fp, r0
   12d30:	mov	r0, fp
   12d34:	add	sp, sp, #116	; 0x74
   12d38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d3c:	mov	r8, sl
   12d40:	mov	sl, r7
   12d44:	b	12cd8 <close@plt+0x1e8c>
   12d48:	mov	r8, sl
   12d4c:	mov	sl, r7
   12d50:	b	12cd8 <close@plt+0x1e8c>
   12d54:	mov	r8, sl
   12d58:	mov	sl, r7
   12d5c:	b	12cd8 <close@plt+0x1e8c>
   12d60:	mov	r8, sl
   12d64:	mov	sl, r7
   12d68:	b	12cf0 <close@plt+0x1ea4>
   12d6c:	mov	r3, #1
   12d70:	str	r3, [sp, #32]
   12d74:	str	r3, [sp, #48]	; 0x30
   12d78:	str	r3, [sp, #60]	; 0x3c
   12d7c:	ldr	r3, [pc, #-196]	; 12cc0 <close@plt+0x1e74>
   12d80:	str	r3, [sp, #72]	; 0x48
   12d84:	mov	fp, #0
   12d88:	mov	sl, #5
   12d8c:	b	11cdc <close@plt+0xe90>
   12d90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12d94:	sub	sp, sp, #52	; 0x34
   12d98:	mov	r5, r0
   12d9c:	str	r1, [sp, #24]
   12da0:	str	r2, [sp, #28]
   12da4:	mov	r4, r3
   12da8:	bl	10d80 <__errno_location@plt>
   12dac:	str	r0, [sp, #32]
   12db0:	ldr	r3, [r0]
   12db4:	str	r3, [sp, #36]	; 0x24
   12db8:	ldr	r3, [pc, #396]	; 12f4c <close@plt+0x2100>
   12dbc:	ldr	r6, [r3]
   12dc0:	cmn	r5, #-2147483647	; 0x80000001
   12dc4:	movne	r3, #0
   12dc8:	moveq	r3, #1
   12dcc:	orrs	r3, r3, r5, lsr #31
   12dd0:	bne	12f10 <close@plt+0x20c4>
   12dd4:	ldr	r3, [pc, #368]	; 12f4c <close@plt+0x2100>
   12dd8:	ldr	r2, [r3, #4]
   12ddc:	cmp	r5, r2
   12de0:	blt	12e48 <close@plt+0x1ffc>
   12de4:	str	r2, [sp, #44]	; 0x2c
   12de8:	add	r3, r3, #8
   12dec:	cmp	r6, r3
   12df0:	beq	12f14 <close@plt+0x20c8>
   12df4:	sub	r2, r5, r2
   12df8:	mov	r3, #8
   12dfc:	str	r3, [sp]
   12e00:	mvn	r3, #-2147483648	; 0x80000000
   12e04:	add	r2, r2, #1
   12e08:	add	r1, sp, #44	; 0x2c
   12e0c:	mov	r0, r6
   12e10:	bl	13c94 <close@plt+0x2e48>
   12e14:	mov	r6, r0
   12e18:	ldr	r3, [pc, #300]	; 12f4c <close@plt+0x2100>
   12e1c:	str	r0, [r3]
   12e20:	ldr	r7, [pc, #292]	; 12f4c <close@plt+0x2100>
   12e24:	ldr	r0, [r7, #4]
   12e28:	ldr	r2, [sp, #44]	; 0x2c
   12e2c:	sub	r2, r2, r0
   12e30:	lsl	r2, r2, #3
   12e34:	mov	r1, #0
   12e38:	add	r0, r6, r0, lsl #3
   12e3c:	bl	10d98 <memset@plt>
   12e40:	ldr	r3, [sp, #44]	; 0x2c
   12e44:	str	r3, [r7, #4]
   12e48:	add	fp, r6, r5, lsl #3
   12e4c:	ldr	r8, [r6, r5, lsl #3]
   12e50:	ldr	r7, [fp, #4]
   12e54:	ldr	r9, [r4, #4]
   12e58:	orr	r9, r9, #1
   12e5c:	add	sl, r4, #8
   12e60:	ldr	r3, [r4, #44]	; 0x2c
   12e64:	str	r3, [sp, #16]
   12e68:	ldr	r3, [r4, #40]	; 0x28
   12e6c:	str	r3, [sp, #12]
   12e70:	str	sl, [sp, #8]
   12e74:	str	r9, [sp, #4]
   12e78:	ldr	r3, [r4]
   12e7c:	str	r3, [sp]
   12e80:	ldr	r3, [sp, #28]
   12e84:	ldr	r2, [sp, #24]
   12e88:	mov	r1, r8
   12e8c:	mov	r0, r7
   12e90:	bl	11c20 <close@plt+0xdd4>
   12e94:	cmp	r8, r0
   12e98:	bhi	12ef8 <close@plt+0x20ac>
   12e9c:	add	r8, r0, #1
   12ea0:	str	r8, [r6, r5, lsl #3]
   12ea4:	ldr	r3, [pc, #164]	; 12f50 <close@plt+0x2104>
   12ea8:	cmp	r7, r3
   12eac:	beq	12eb8 <close@plt+0x206c>
   12eb0:	mov	r0, r7
   12eb4:	bl	14320 <close@plt+0x34d4>
   12eb8:	mov	r0, r8
   12ebc:	bl	13b10 <close@plt+0x2cc4>
   12ec0:	mov	r7, r0
   12ec4:	str	r0, [fp, #4]
   12ec8:	ldr	r3, [r4, #44]	; 0x2c
   12ecc:	str	r3, [sp, #16]
   12ed0:	ldr	r3, [r4, #40]	; 0x28
   12ed4:	str	r3, [sp, #12]
   12ed8:	str	sl, [sp, #8]
   12edc:	str	r9, [sp, #4]
   12ee0:	ldr	r3, [r4]
   12ee4:	str	r3, [sp]
   12ee8:	ldr	r3, [sp, #28]
   12eec:	ldr	r2, [sp, #24]
   12ef0:	mov	r1, r8
   12ef4:	bl	11c20 <close@plt+0xdd4>
   12ef8:	ldr	r3, [sp, #32]
   12efc:	ldr	r2, [sp, #36]	; 0x24
   12f00:	str	r2, [r3]
   12f04:	mov	r0, r7
   12f08:	add	sp, sp, #52	; 0x34
   12f0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12f10:	bl	10e40 <abort@plt>
   12f14:	sub	r2, r5, r2
   12f18:	mov	r3, #8
   12f1c:	str	r3, [sp]
   12f20:	mvn	r3, #-2147483648	; 0x80000000
   12f24:	add	r2, r2, #1
   12f28:	add	r1, sp, #44	; 0x2c
   12f2c:	mov	r0, #0
   12f30:	bl	13c94 <close@plt+0x2e48>
   12f34:	mov	r6, r0
   12f38:	ldr	r3, [pc, #12]	; 12f4c <close@plt+0x2100>
   12f3c:	str	r0, [r3], #8
   12f40:	ldm	r3, {r0, r1}
   12f44:	stm	r6, {r0, r1}
   12f48:	b	12e20 <close@plt+0x1fd4>
   12f4c:	andeq	r6, r2, r8, ror #1
   12f50:	andeq	r6, r2, r4, asr r1
   12f54:	push	{r4, r5, r6, lr}
   12f58:	mov	r4, r0
   12f5c:	bl	10d80 <__errno_location@plt>
   12f60:	mov	r5, r0
   12f64:	ldr	r6, [r0]
   12f68:	cmp	r4, #0
   12f6c:	ldr	r3, [pc, #20]	; 12f88 <close@plt+0x213c>
   12f70:	moveq	r4, r3
   12f74:	mov	r1, #48	; 0x30
   12f78:	mov	r0, r4
   12f7c:	bl	13ffc <close@plt+0x31b0>
   12f80:	str	r6, [r5]
   12f84:	pop	{r4, r5, r6, pc}
   12f88:	andeq	r6, r2, r4, asr r2
   12f8c:	subs	r3, r0, #0
   12f90:	ldr	r2, [pc, #8]	; 12fa0 <close@plt+0x2154>
   12f94:	moveq	r3, r2
   12f98:	ldr	r0, [r3]
   12f9c:	bx	lr
   12fa0:	andeq	r6, r2, r4, asr r2
   12fa4:	subs	r3, r0, #0
   12fa8:	ldr	r2, [pc, #8]	; 12fb8 <close@plt+0x216c>
   12fac:	moveq	r3, r2
   12fb0:	str	r1, [r3]
   12fb4:	bx	lr
   12fb8:	andeq	r6, r2, r4, asr r2
   12fbc:	push	{lr}		; (str lr, [sp, #-4]!)
   12fc0:	subs	r3, r0, #0
   12fc4:	ldr	r0, [pc, #44]	; 12ff8 <close@plt+0x21ac>
   12fc8:	moveq	r3, r0
   12fcc:	add	r3, r3, #8
   12fd0:	lsr	lr, r1, #5
   12fd4:	and	r1, r1, #31
   12fd8:	ldr	ip, [r3, lr, lsl #2]
   12fdc:	lsr	r0, ip, r1
   12fe0:	eor	r2, r2, r0
   12fe4:	and	r2, r2, #1
   12fe8:	eor	r1, ip, r2, lsl r1
   12fec:	str	r1, [r3, lr, lsl #2]
   12ff0:	and	r0, r0, #1
   12ff4:	pop	{pc}		; (ldr pc, [sp], #4)
   12ff8:	andeq	r6, r2, r4, asr r2
   12ffc:	subs	r3, r0, #0
   13000:	ldr	r2, [pc, #12]	; 13014 <close@plt+0x21c8>
   13004:	moveq	r3, r2
   13008:	ldr	r0, [r3, #4]
   1300c:	str	r1, [r3, #4]
   13010:	bx	lr
   13014:	andeq	r6, r2, r4, asr r2
   13018:	subs	r3, r0, #0
   1301c:	ldr	r0, [pc, #40]	; 1304c <close@plt+0x2200>
   13020:	moveq	r3, r0
   13024:	mov	r0, #10
   13028:	str	r0, [r3]
   1302c:	cmp	r2, #0
   13030:	cmpne	r1, #0
   13034:	beq	13044 <close@plt+0x21f8>
   13038:	str	r1, [r3, #40]	; 0x28
   1303c:	str	r2, [r3, #44]	; 0x2c
   13040:	bx	lr
   13044:	push	{r4, lr}
   13048:	bl	10e40 <abort@plt>
   1304c:	andeq	r6, r2, r4, asr r2
   13050:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13054:	sub	sp, sp, #24
   13058:	mov	r7, r0
   1305c:	mov	r8, r1
   13060:	mov	r9, r2
   13064:	mov	sl, r3
   13068:	ldr	r4, [sp, #56]	; 0x38
   1306c:	cmp	r4, #0
   13070:	ldr	r3, [pc, #84]	; 130cc <close@plt+0x2280>
   13074:	moveq	r4, r3
   13078:	bl	10d80 <__errno_location@plt>
   1307c:	mov	r5, r0
   13080:	ldr	r6, [r0]
   13084:	ldr	r3, [r4, #44]	; 0x2c
   13088:	str	r3, [sp, #16]
   1308c:	ldr	r3, [r4, #40]	; 0x28
   13090:	str	r3, [sp, #12]
   13094:	add	r3, r4, #8
   13098:	str	r3, [sp, #8]
   1309c:	ldr	r3, [r4, #4]
   130a0:	str	r3, [sp, #4]
   130a4:	ldr	r3, [r4]
   130a8:	str	r3, [sp]
   130ac:	mov	r3, sl
   130b0:	mov	r2, r9
   130b4:	mov	r1, r8
   130b8:	mov	r0, r7
   130bc:	bl	11c20 <close@plt+0xdd4>
   130c0:	str	r6, [r5]
   130c4:	add	sp, sp, #24
   130c8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   130cc:	andeq	r6, r2, r4, asr r2
   130d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   130d4:	sub	sp, sp, #44	; 0x2c
   130d8:	str	r0, [sp, #28]
   130dc:	str	r1, [sp, #32]
   130e0:	mov	r6, r2
   130e4:	subs	r4, r3, #0
   130e8:	ldr	r3, [pc, #172]	; 1319c <close@plt+0x2350>
   130ec:	moveq	r4, r3
   130f0:	bl	10d80 <__errno_location@plt>
   130f4:	mov	r7, r0
   130f8:	ldr	fp, [r0]
   130fc:	ldr	r5, [r4, #4]
   13100:	cmp	r6, #0
   13104:	orreq	r5, r5, #1
   13108:	add	r9, r4, #8
   1310c:	ldr	r3, [r4, #44]	; 0x2c
   13110:	str	r3, [sp, #16]
   13114:	ldr	r3, [r4, #40]	; 0x28
   13118:	str	r3, [sp, #12]
   1311c:	str	r9, [sp, #8]
   13120:	str	r5, [sp, #4]
   13124:	ldr	r3, [r4]
   13128:	str	r3, [sp]
   1312c:	ldr	r3, [sp, #32]
   13130:	ldr	r2, [sp, #28]
   13134:	mov	r1, #0
   13138:	mov	r0, r1
   1313c:	bl	11c20 <close@plt+0xdd4>
   13140:	mov	sl, r0
   13144:	add	r8, r0, #1
   13148:	mov	r0, r8
   1314c:	bl	13b10 <close@plt+0x2cc4>
   13150:	str	r0, [sp, #36]	; 0x24
   13154:	ldr	r3, [r4, #44]	; 0x2c
   13158:	str	r3, [sp, #16]
   1315c:	ldr	r3, [r4, #40]	; 0x28
   13160:	str	r3, [sp, #12]
   13164:	str	r9, [sp, #8]
   13168:	str	r5, [sp, #4]
   1316c:	ldr	r3, [r4]
   13170:	str	r3, [sp]
   13174:	ldr	r3, [sp, #32]
   13178:	ldr	r2, [sp, #28]
   1317c:	mov	r1, r8
   13180:	bl	11c20 <close@plt+0xdd4>
   13184:	str	fp, [r7]
   13188:	cmp	r6, #0
   1318c:	strne	sl, [r6]
   13190:	ldr	r0, [sp, #36]	; 0x24
   13194:	add	sp, sp, #44	; 0x2c
   13198:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1319c:	andeq	r6, r2, r4, asr r2
   131a0:	push	{r4, lr}
   131a4:	mov	r3, r2
   131a8:	mov	r2, #0
   131ac:	bl	130d0 <close@plt+0x2284>
   131b0:	pop	{r4, pc}
   131b4:	push	{r4, r5, r6, r7, r8, lr}
   131b8:	ldr	r3, [pc, #140]	; 1324c <close@plt+0x2400>
   131bc:	ldr	r7, [r3]
   131c0:	ldr	r3, [r3, #4]
   131c4:	cmp	r3, #1
   131c8:	ble	131f4 <close@plt+0x23a8>
   131cc:	mov	r5, r7
   131d0:	mov	r4, #1
   131d4:	ldr	r6, [pc, #112]	; 1324c <close@plt+0x2400>
   131d8:	ldr	r0, [r5, #12]
   131dc:	bl	14320 <close@plt+0x34d4>
   131e0:	add	r4, r4, #1
   131e4:	add	r5, r5, #8
   131e8:	ldr	r3, [r6, #4]
   131ec:	cmp	r3, r4
   131f0:	bgt	131d8 <close@plt+0x238c>
   131f4:	ldr	r0, [r7, #4]
   131f8:	ldr	r3, [pc, #80]	; 13250 <close@plt+0x2404>
   131fc:	cmp	r0, r3
   13200:	beq	1321c <close@plt+0x23d0>
   13204:	bl	14320 <close@plt+0x34d4>
   13208:	ldr	r3, [pc, #60]	; 1324c <close@plt+0x2400>
   1320c:	mov	r2, #256	; 0x100
   13210:	str	r2, [r3, #8]
   13214:	ldr	r2, [pc, #52]	; 13250 <close@plt+0x2404>
   13218:	str	r2, [r3, #12]
   1321c:	ldr	r3, [pc, #48]	; 13254 <close@plt+0x2408>
   13220:	cmp	r7, r3
   13224:	beq	1323c <close@plt+0x23f0>
   13228:	mov	r0, r7
   1322c:	bl	14320 <close@plt+0x34d4>
   13230:	ldr	r3, [pc, #20]	; 1324c <close@plt+0x2400>
   13234:	add	r2, r3, #8
   13238:	str	r2, [r3]
   1323c:	mov	r2, #1
   13240:	ldr	r3, [pc, #4]	; 1324c <close@plt+0x2400>
   13244:	str	r2, [r3, #4]
   13248:	pop	{r4, r5, r6, r7, r8, pc}
   1324c:	andeq	r6, r2, r8, ror #1
   13250:	andeq	r6, r2, r4, asr r1
   13254:	strdeq	r6, [r2], -r0
   13258:	push	{r4, lr}
   1325c:	ldr	r3, [pc, #8]	; 1326c <close@plt+0x2420>
   13260:	mvn	r2, #0
   13264:	bl	12d90 <close@plt+0x1f44>
   13268:	pop	{r4, pc}
   1326c:	andeq	r6, r2, r4, asr r2
   13270:	push	{r4, lr}
   13274:	ldr	r3, [pc, #4]	; 13280 <close@plt+0x2434>
   13278:	bl	12d90 <close@plt+0x1f44>
   1327c:	pop	{r4, pc}
   13280:	andeq	r6, r2, r4, asr r2
   13284:	push	{r4, lr}
   13288:	mov	r1, r0
   1328c:	mov	r0, #0
   13290:	bl	13258 <close@plt+0x240c>
   13294:	pop	{r4, pc}
   13298:	push	{r4, lr}
   1329c:	mov	r2, r1
   132a0:	mov	r1, r0
   132a4:	mov	r0, #0
   132a8:	bl	13270 <close@plt+0x2424>
   132ac:	pop	{r4, pc}
   132b0:	push	{r4, r5, lr}
   132b4:	sub	sp, sp, #52	; 0x34
   132b8:	mov	r4, r0
   132bc:	mov	r5, r2
   132c0:	mov	r0, sp
   132c4:	bl	11ab8 <close@plt+0xc6c>
   132c8:	mov	r3, sp
   132cc:	mvn	r2, #0
   132d0:	mov	r1, r5
   132d4:	mov	r0, r4
   132d8:	bl	12d90 <close@plt+0x1f44>
   132dc:	add	sp, sp, #52	; 0x34
   132e0:	pop	{r4, r5, pc}
   132e4:	push	{r4, r5, r6, lr}
   132e8:	sub	sp, sp, #48	; 0x30
   132ec:	mov	r4, r0
   132f0:	mov	r5, r2
   132f4:	mov	r6, r3
   132f8:	mov	r0, sp
   132fc:	bl	11ab8 <close@plt+0xc6c>
   13300:	mov	r3, sp
   13304:	mov	r2, r6
   13308:	mov	r1, r5
   1330c:	mov	r0, r4
   13310:	bl	12d90 <close@plt+0x1f44>
   13314:	add	sp, sp, #48	; 0x30
   13318:	pop	{r4, r5, r6, pc}
   1331c:	push	{r4, lr}
   13320:	mov	r2, r1
   13324:	mov	r1, r0
   13328:	mov	r0, #0
   1332c:	bl	132b0 <close@plt+0x2464>
   13330:	pop	{r4, pc}
   13334:	push	{r4, lr}
   13338:	mov	r3, r2
   1333c:	mov	r2, r1
   13340:	mov	r1, r0
   13344:	mov	r0, #0
   13348:	bl	132e4 <close@plt+0x2498>
   1334c:	pop	{r4, pc}
   13350:	push	{r4, r5, r6, lr}
   13354:	sub	sp, sp, #48	; 0x30
   13358:	mov	r4, r0
   1335c:	mov	r5, r1
   13360:	mov	r6, r2
   13364:	mov	ip, sp
   13368:	ldr	lr, [pc, #64]	; 133b0 <close@plt+0x2564>
   1336c:	ldm	lr!, {r0, r1, r2, r3}
   13370:	stmia	ip!, {r0, r1, r2, r3}
   13374:	ldm	lr!, {r0, r1, r2, r3}
   13378:	stmia	ip!, {r0, r1, r2, r3}
   1337c:	ldm	lr, {r0, r1, r2, r3}
   13380:	stm	ip, {r0, r1, r2, r3}
   13384:	mov	r2, #1
   13388:	mov	r1, r6
   1338c:	mov	r0, sp
   13390:	bl	12fbc <close@plt+0x2170>
   13394:	mov	r3, sp
   13398:	mov	r2, r5
   1339c:	mov	r1, r4
   133a0:	mov	r0, #0
   133a4:	bl	12d90 <close@plt+0x1f44>
   133a8:	add	sp, sp, #48	; 0x30
   133ac:	pop	{r4, r5, r6, pc}
   133b0:	andeq	r6, r2, r4, asr r2
   133b4:	push	{r4, lr}
   133b8:	mov	r2, r1
   133bc:	mvn	r1, #0
   133c0:	bl	13350 <close@plt+0x2504>
   133c4:	pop	{r4, pc}
   133c8:	push	{r4, lr}
   133cc:	mov	r1, #58	; 0x3a
   133d0:	bl	133b4 <close@plt+0x2568>
   133d4:	pop	{r4, pc}
   133d8:	push	{r4, lr}
   133dc:	mov	r2, #58	; 0x3a
   133e0:	bl	13350 <close@plt+0x2504>
   133e4:	pop	{r4, pc}
   133e8:	push	{r4, r5, lr}
   133ec:	sub	sp, sp, #100	; 0x64
   133f0:	mov	r4, r0
   133f4:	mov	r5, r2
   133f8:	mov	r0, sp
   133fc:	bl	11ab8 <close@plt+0xc6c>
   13400:	add	lr, sp, #48	; 0x30
   13404:	mov	ip, sp
   13408:	ldm	ip!, {r0, r1, r2, r3}
   1340c:	stmia	lr!, {r0, r1, r2, r3}
   13410:	ldm	ip!, {r0, r1, r2, r3}
   13414:	stmia	lr!, {r0, r1, r2, r3}
   13418:	ldm	ip, {r0, r1, r2, r3}
   1341c:	stm	lr, {r0, r1, r2, r3}
   13420:	mov	r2, #1
   13424:	mov	r1, #58	; 0x3a
   13428:	add	r0, sp, #48	; 0x30
   1342c:	bl	12fbc <close@plt+0x2170>
   13430:	add	r3, sp, #48	; 0x30
   13434:	mvn	r2, #0
   13438:	mov	r1, r5
   1343c:	mov	r0, r4
   13440:	bl	12d90 <close@plt+0x1f44>
   13444:	add	sp, sp, #100	; 0x64
   13448:	pop	{r4, r5, pc}
   1344c:	push	{r4, r5, r6, r7, lr}
   13450:	sub	sp, sp, #52	; 0x34
   13454:	mov	r4, r0
   13458:	mov	r6, r1
   1345c:	mov	r7, r2
   13460:	mov	r5, r3
   13464:	mov	ip, sp
   13468:	ldr	lr, [pc, #64]	; 134b0 <close@plt+0x2664>
   1346c:	ldm	lr!, {r0, r1, r2, r3}
   13470:	stmia	ip!, {r0, r1, r2, r3}
   13474:	ldm	lr!, {r0, r1, r2, r3}
   13478:	stmia	ip!, {r0, r1, r2, r3}
   1347c:	ldm	lr, {r0, r1, r2, r3}
   13480:	stm	ip, {r0, r1, r2, r3}
   13484:	mov	r2, r7
   13488:	mov	r1, r6
   1348c:	mov	r0, sp
   13490:	bl	13018 <close@plt+0x21cc>
   13494:	mov	r3, sp
   13498:	ldr	r2, [sp, #72]	; 0x48
   1349c:	mov	r1, r5
   134a0:	mov	r0, r4
   134a4:	bl	12d90 <close@plt+0x1f44>
   134a8:	add	sp, sp, #52	; 0x34
   134ac:	pop	{r4, r5, r6, r7, pc}
   134b0:	andeq	r6, r2, r4, asr r2
   134b4:	push	{lr}		; (str lr, [sp, #-4]!)
   134b8:	sub	sp, sp, #12
   134bc:	mvn	ip, #0
   134c0:	str	ip, [sp]
   134c4:	bl	1344c <close@plt+0x2600>
   134c8:	add	sp, sp, #12
   134cc:	pop	{pc}		; (ldr pc, [sp], #4)
   134d0:	push	{r4, lr}
   134d4:	mov	r3, r2
   134d8:	mov	r2, r1
   134dc:	mov	r1, r0
   134e0:	mov	r0, #0
   134e4:	bl	134b4 <close@plt+0x2668>
   134e8:	pop	{r4, pc}
   134ec:	push	{lr}		; (str lr, [sp, #-4]!)
   134f0:	sub	sp, sp, #12
   134f4:	str	r3, [sp]
   134f8:	mov	r3, r2
   134fc:	mov	r2, r1
   13500:	mov	r1, r0
   13504:	mov	r0, #0
   13508:	bl	1344c <close@plt+0x2600>
   1350c:	add	sp, sp, #12
   13510:	pop	{pc}		; (ldr pc, [sp], #4)
   13514:	push	{r4, lr}
   13518:	ldr	r3, [pc, #4]	; 13524 <close@plt+0x26d8>
   1351c:	bl	12d90 <close@plt+0x1f44>
   13520:	pop	{r4, pc}
   13524:	strdeq	r6, [r2], -r8
   13528:	push	{r4, lr}
   1352c:	mov	r2, r1
   13530:	mov	r1, r0
   13534:	mov	r0, #0
   13538:	bl	13514 <close@plt+0x26c8>
   1353c:	pop	{r4, pc}
   13540:	push	{r4, lr}
   13544:	mvn	r2, #0
   13548:	bl	13514 <close@plt+0x26c8>
   1354c:	pop	{r4, pc}
   13550:	push	{r4, lr}
   13554:	mov	r1, r0
   13558:	mov	r0, #0
   1355c:	bl	13540 <close@plt+0x26f4>
   13560:	pop	{r4, pc}
   13564:	push	{r4, r5, r6, lr}
   13568:	sub	sp, sp, #32
   1356c:	mov	r4, r0
   13570:	ldr	r5, [sp, #48]	; 0x30
   13574:	ldr	r6, [sp, #52]	; 0x34
   13578:	cmp	r1, #0
   1357c:	beq	13634 <close@plt+0x27e8>
   13580:	str	r3, [sp, #4]
   13584:	str	r2, [sp]
   13588:	mov	r3, r1
   1358c:	ldr	r2, [pc, #940]	; 13940 <close@plt+0x2af4>
   13590:	mov	r1, #1
   13594:	bl	10dbc <__fprintf_chk@plt>
   13598:	mov	r2, #5
   1359c:	ldr	r1, [pc, #928]	; 13944 <close@plt+0x2af8>
   135a0:	mov	r0, #0
   135a4:	bl	10c90 <dcgettext@plt>
   135a8:	ldr	r3, [pc, #920]	; 13948 <close@plt+0x2afc>
   135ac:	str	r3, [sp]
   135b0:	mov	r3, r0
   135b4:	ldr	r2, [pc, #912]	; 1394c <close@plt+0x2b00>
   135b8:	mov	r1, #1
   135bc:	mov	r0, r4
   135c0:	bl	10dbc <__fprintf_chk@plt>
   135c4:	mov	r1, r4
   135c8:	mov	r0, #10
   135cc:	bl	10c84 <fputc_unlocked@plt>
   135d0:	mov	r2, #5
   135d4:	ldr	r1, [pc, #884]	; 13950 <close@plt+0x2b04>
   135d8:	mov	r0, #0
   135dc:	bl	10c90 <dcgettext@plt>
   135e0:	ldr	r3, [pc, #876]	; 13954 <close@plt+0x2b08>
   135e4:	mov	r2, r0
   135e8:	mov	r1, #1
   135ec:	mov	r0, r4
   135f0:	bl	10dbc <__fprintf_chk@plt>
   135f4:	mov	r1, r4
   135f8:	mov	r0, #10
   135fc:	bl	10c84 <fputc_unlocked@plt>
   13600:	cmp	r6, #9
   13604:	ldrls	pc, [pc, r6, lsl #2]
   13608:	b	138d8 <close@plt+0x2a8c>
   1360c:	andeq	r3, r1, r0, ror r6
   13610:	andeq	r3, r1, ip, asr #12
   13614:	andeq	r3, r1, r8, ror r6
   13618:	andeq	r3, r1, r8, lsr #13
   1361c:	andeq	r3, r1, r0, ror #13
   13620:	andeq	r3, r1, r0, lsr #14
   13624:	andeq	r3, r1, r8, ror #14
   13628:			; <UNDEFINED> instruction: 0x000137b8
   1362c:	andeq	r3, r1, r0, lsl r8
   13630:	andeq	r3, r1, r0, ror r8
   13634:	str	r3, [sp]
   13638:	mov	r3, r2
   1363c:	ldr	r2, [pc, #788]	; 13958 <close@plt+0x2b0c>
   13640:	mov	r1, #1
   13644:	bl	10dbc <__fprintf_chk@plt>
   13648:	b	13598 <close@plt+0x274c>
   1364c:	mov	r2, #5
   13650:	ldr	r1, [pc, #772]	; 1395c <close@plt+0x2b10>
   13654:	mov	r0, #0
   13658:	bl	10c90 <dcgettext@plt>
   1365c:	ldr	r3, [r5]
   13660:	mov	r2, r0
   13664:	mov	r1, #1
   13668:	mov	r0, r4
   1366c:	bl	10dbc <__fprintf_chk@plt>
   13670:	add	sp, sp, #32
   13674:	pop	{r4, r5, r6, pc}
   13678:	mov	r2, #5
   1367c:	ldr	r1, [pc, #732]	; 13960 <close@plt+0x2b14>
   13680:	mov	r0, #0
   13684:	bl	10c90 <dcgettext@plt>
   13688:	ldr	r3, [r5]
   1368c:	ldr	r2, [r5, #4]
   13690:	str	r2, [sp]
   13694:	mov	r2, r0
   13698:	mov	r1, #1
   1369c:	mov	r0, r4
   136a0:	bl	10dbc <__fprintf_chk@plt>
   136a4:	b	13670 <close@plt+0x2824>
   136a8:	mov	r2, #5
   136ac:	ldr	r1, [pc, #688]	; 13964 <close@plt+0x2b18>
   136b0:	mov	r0, #0
   136b4:	bl	10c90 <dcgettext@plt>
   136b8:	ldr	r3, [r5]
   136bc:	ldr	r2, [r5, #8]
   136c0:	str	r2, [sp, #4]
   136c4:	ldr	r2, [r5, #4]
   136c8:	str	r2, [sp]
   136cc:	mov	r2, r0
   136d0:	mov	r1, #1
   136d4:	mov	r0, r4
   136d8:	bl	10dbc <__fprintf_chk@plt>
   136dc:	b	13670 <close@plt+0x2824>
   136e0:	mov	r2, #5
   136e4:	ldr	r1, [pc, #636]	; 13968 <close@plt+0x2b1c>
   136e8:	mov	r0, #0
   136ec:	bl	10c90 <dcgettext@plt>
   136f0:	ldr	r3, [r5]
   136f4:	ldr	r2, [r5, #12]
   136f8:	str	r2, [sp, #8]
   136fc:	ldr	r2, [r5, #8]
   13700:	str	r2, [sp, #4]
   13704:	ldr	r2, [r5, #4]
   13708:	str	r2, [sp]
   1370c:	mov	r2, r0
   13710:	mov	r1, #1
   13714:	mov	r0, r4
   13718:	bl	10dbc <__fprintf_chk@plt>
   1371c:	b	13670 <close@plt+0x2824>
   13720:	mov	r2, #5
   13724:	ldr	r1, [pc, #576]	; 1396c <close@plt+0x2b20>
   13728:	mov	r0, #0
   1372c:	bl	10c90 <dcgettext@plt>
   13730:	ldr	r3, [r5]
   13734:	ldr	r2, [r5, #16]
   13738:	str	r2, [sp, #12]
   1373c:	ldr	r2, [r5, #12]
   13740:	str	r2, [sp, #8]
   13744:	ldr	r2, [r5, #8]
   13748:	str	r2, [sp, #4]
   1374c:	ldr	r2, [r5, #4]
   13750:	str	r2, [sp]
   13754:	mov	r2, r0
   13758:	mov	r1, #1
   1375c:	mov	r0, r4
   13760:	bl	10dbc <__fprintf_chk@plt>
   13764:	b	13670 <close@plt+0x2824>
   13768:	mov	r2, #5
   1376c:	ldr	r1, [pc, #508]	; 13970 <close@plt+0x2b24>
   13770:	mov	r0, #0
   13774:	bl	10c90 <dcgettext@plt>
   13778:	ldr	r3, [r5]
   1377c:	ldr	r2, [r5, #20]
   13780:	str	r2, [sp, #16]
   13784:	ldr	r2, [r5, #16]
   13788:	str	r2, [sp, #12]
   1378c:	ldr	r2, [r5, #12]
   13790:	str	r2, [sp, #8]
   13794:	ldr	r2, [r5, #8]
   13798:	str	r2, [sp, #4]
   1379c:	ldr	r2, [r5, #4]
   137a0:	str	r2, [sp]
   137a4:	mov	r2, r0
   137a8:	mov	r1, #1
   137ac:	mov	r0, r4
   137b0:	bl	10dbc <__fprintf_chk@plt>
   137b4:	b	13670 <close@plt+0x2824>
   137b8:	mov	r2, #5
   137bc:	ldr	r1, [pc, #432]	; 13974 <close@plt+0x2b28>
   137c0:	mov	r0, #0
   137c4:	bl	10c90 <dcgettext@plt>
   137c8:	ldr	r3, [r5]
   137cc:	ldr	r2, [r5, #24]
   137d0:	str	r2, [sp, #20]
   137d4:	ldr	r2, [r5, #20]
   137d8:	str	r2, [sp, #16]
   137dc:	ldr	r2, [r5, #16]
   137e0:	str	r2, [sp, #12]
   137e4:	ldr	r2, [r5, #12]
   137e8:	str	r2, [sp, #8]
   137ec:	ldr	r2, [r5, #8]
   137f0:	str	r2, [sp, #4]
   137f4:	ldr	r2, [r5, #4]
   137f8:	str	r2, [sp]
   137fc:	mov	r2, r0
   13800:	mov	r1, #1
   13804:	mov	r0, r4
   13808:	bl	10dbc <__fprintf_chk@plt>
   1380c:	b	13670 <close@plt+0x2824>
   13810:	mov	r2, #5
   13814:	ldr	r1, [pc, #348]	; 13978 <close@plt+0x2b2c>
   13818:	mov	r0, #0
   1381c:	bl	10c90 <dcgettext@plt>
   13820:	ldr	r3, [r5]
   13824:	ldr	r2, [r5, #28]
   13828:	str	r2, [sp, #24]
   1382c:	ldr	r2, [r5, #24]
   13830:	str	r2, [sp, #20]
   13834:	ldr	r2, [r5, #20]
   13838:	str	r2, [sp, #16]
   1383c:	ldr	r2, [r5, #16]
   13840:	str	r2, [sp, #12]
   13844:	ldr	r2, [r5, #12]
   13848:	str	r2, [sp, #8]
   1384c:	ldr	r2, [r5, #8]
   13850:	str	r2, [sp, #4]
   13854:	ldr	r2, [r5, #4]
   13858:	str	r2, [sp]
   1385c:	mov	r2, r0
   13860:	mov	r1, #1
   13864:	mov	r0, r4
   13868:	bl	10dbc <__fprintf_chk@plt>
   1386c:	b	13670 <close@plt+0x2824>
   13870:	mov	r2, #5
   13874:	ldr	r1, [pc, #256]	; 1397c <close@plt+0x2b30>
   13878:	mov	r0, #0
   1387c:	bl	10c90 <dcgettext@plt>
   13880:	ldr	r3, [r5]
   13884:	ldr	r2, [r5, #32]
   13888:	str	r2, [sp, #28]
   1388c:	ldr	r2, [r5, #28]
   13890:	str	r2, [sp, #24]
   13894:	ldr	r2, [r5, #24]
   13898:	str	r2, [sp, #20]
   1389c:	ldr	r2, [r5, #20]
   138a0:	str	r2, [sp, #16]
   138a4:	ldr	r2, [r5, #16]
   138a8:	str	r2, [sp, #12]
   138ac:	ldr	r2, [r5, #12]
   138b0:	str	r2, [sp, #8]
   138b4:	ldr	r2, [r5, #8]
   138b8:	str	r2, [sp, #4]
   138bc:	ldr	r2, [r5, #4]
   138c0:	str	r2, [sp]
   138c4:	mov	r2, r0
   138c8:	mov	r1, #1
   138cc:	mov	r0, r4
   138d0:	bl	10dbc <__fprintf_chk@plt>
   138d4:	b	13670 <close@plt+0x2824>
   138d8:	mov	r2, #5
   138dc:	ldr	r1, [pc, #156]	; 13980 <close@plt+0x2b34>
   138e0:	mov	r0, #0
   138e4:	bl	10c90 <dcgettext@plt>
   138e8:	ldr	r3, [r5]
   138ec:	ldr	r2, [r5, #32]
   138f0:	str	r2, [sp, #28]
   138f4:	ldr	r2, [r5, #28]
   138f8:	str	r2, [sp, #24]
   138fc:	ldr	r2, [r5, #24]
   13900:	str	r2, [sp, #20]
   13904:	ldr	r2, [r5, #20]
   13908:	str	r2, [sp, #16]
   1390c:	ldr	r2, [r5, #16]
   13910:	str	r2, [sp, #12]
   13914:	ldr	r2, [r5, #12]
   13918:	str	r2, [sp, #8]
   1391c:	ldr	r2, [r5, #8]
   13920:	str	r2, [sp, #4]
   13924:	ldr	r2, [r5, #4]
   13928:	str	r2, [sp]
   1392c:	mov	r2, r0
   13930:	mov	r1, #1
   13934:	mov	r0, r4
   13938:	bl	10dbc <__fprintf_chk@plt>
   1393c:	b	13670 <close@plt+0x2824>
   13940:	andeq	r5, r1, ip, ror #1
   13944:	andeq	r5, r1, r0, lsl #2
   13948:	andeq	r0, r0, r6, ror #15
   1394c:	ldrdeq	r5, [r1], -r8
   13950:	andeq	r5, r1, r4, lsl #2
   13954:			; <UNDEFINED> instruction: 0x000151b0
   13958:	strdeq	r5, [r1], -r8
   1395c:	ldrdeq	r5, [r1], -r4
   13960:	andeq	r5, r1, r4, ror #3
   13964:	strdeq	r5, [r1], -ip
   13968:	andeq	r5, r1, r8, lsl r2
   1396c:	andeq	r5, r1, r8, lsr r2
   13970:	andeq	r5, r1, ip, asr r2
   13974:	andeq	r5, r1, r4, lsl #5
   13978:			; <UNDEFINED> instruction: 0x000152b0
   1397c:	andeq	r5, r1, r0, ror #5
   13980:	andeq	r5, r1, r4, lsl r3
   13984:	push	{r4, r5, lr}
   13988:	sub	sp, sp, #12
   1398c:	ldr	r5, [sp, #24]
   13990:	ldr	ip, [r5]
   13994:	cmp	ip, #0
   13998:	beq	139c8 <close@plt+0x2b7c>
   1399c:	mov	lr, r5
   139a0:	mov	ip, #0
   139a4:	add	ip, ip, #1
   139a8:	ldr	r4, [lr, #4]!
   139ac:	cmp	r4, #0
   139b0:	bne	139a4 <close@plt+0x2b58>
   139b4:	str	ip, [sp, #4]
   139b8:	str	r5, [sp]
   139bc:	bl	13564 <close@plt+0x2718>
   139c0:	add	sp, sp, #12
   139c4:	pop	{r4, r5, pc}
   139c8:	mov	ip, #0
   139cc:	b	139b4 <close@plt+0x2b68>
   139d0:	push	{r4, r5, lr}
   139d4:	sub	sp, sp, #52	; 0x34
   139d8:	ldr	r4, [sp, #64]	; 0x40
   139dc:	sub	r4, r4, #4
   139e0:	add	r5, sp, #4
   139e4:	mov	ip, #0
   139e8:	ldr	lr, [r4, #4]!
   139ec:	str	lr, [r5, #4]!
   139f0:	cmp	lr, #0
   139f4:	beq	13a04 <close@plt+0x2bb8>
   139f8:	add	ip, ip, #1
   139fc:	cmp	ip, #10
   13a00:	bne	139e8 <close@plt+0x2b9c>
   13a04:	str	ip, [sp, #4]
   13a08:	add	ip, sp, #8
   13a0c:	str	ip, [sp]
   13a10:	bl	13564 <close@plt+0x2718>
   13a14:	add	sp, sp, #52	; 0x34
   13a18:	pop	{r4, r5, pc}
   13a1c:	push	{r3}		; (str r3, [sp, #-4]!)
   13a20:	push	{lr}		; (str lr, [sp, #-4]!)
   13a24:	sub	sp, sp, #16
   13a28:	add	r3, sp, #24
   13a2c:	str	r3, [sp, #12]
   13a30:	str	r3, [sp]
   13a34:	ldr	r3, [sp, #20]
   13a38:	bl	139d0 <close@plt+0x2b84>
   13a3c:	add	sp, sp, #16
   13a40:	pop	{lr}		; (ldr lr, [sp], #4)
   13a44:	add	sp, sp, #4
   13a48:	bx	lr
   13a4c:	push	{r4, lr}
   13a50:	ldr	r3, [pc, #112]	; 13ac8 <close@plt+0x2c7c>
   13a54:	ldr	r1, [r3]
   13a58:	mov	r0, #10
   13a5c:	bl	10c84 <fputc_unlocked@plt>
   13a60:	mov	r2, #5
   13a64:	ldr	r1, [pc, #96]	; 13acc <close@plt+0x2c80>
   13a68:	mov	r0, #0
   13a6c:	bl	10c90 <dcgettext@plt>
   13a70:	ldr	r2, [pc, #88]	; 13ad0 <close@plt+0x2c84>
   13a74:	mov	r1, r0
   13a78:	mov	r0, #1
   13a7c:	bl	10da4 <__printf_chk@plt>
   13a80:	mov	r2, #5
   13a84:	ldr	r1, [pc, #72]	; 13ad4 <close@plt+0x2c88>
   13a88:	mov	r0, #0
   13a8c:	bl	10c90 <dcgettext@plt>
   13a90:	ldr	r3, [pc, #64]	; 13ad8 <close@plt+0x2c8c>
   13a94:	ldr	r2, [pc, #64]	; 13adc <close@plt+0x2c90>
   13a98:	mov	r1, r0
   13a9c:	mov	r0, #1
   13aa0:	bl	10da4 <__printf_chk@plt>
   13aa4:	mov	r2, #5
   13aa8:	ldr	r1, [pc, #48]	; 13ae0 <close@plt+0x2c94>
   13aac:	mov	r0, #0
   13ab0:	bl	10c90 <dcgettext@plt>
   13ab4:	ldr	r2, [pc, #40]	; 13ae4 <close@plt+0x2c98>
   13ab8:	mov	r1, r0
   13abc:	mov	r0, #1
   13ac0:	bl	10da4 <__printf_chk@plt>
   13ac4:	pop	{r4, pc}
   13ac8:	andeq	r6, r2, ip, lsr r1
   13acc:	andeq	r5, r1, r0, asr r3
   13ad0:	andeq	r5, r1, r4, ror #6
   13ad4:	andeq	r5, r1, ip, ror r3
   13ad8:	andeq	r4, r1, r4, asr sp
   13adc:	andeq	r4, r1, ip, ror sp
   13ae0:	muleq	r1, r0, r3
   13ae4:			; <UNDEFINED> instruction: 0x000153b8
   13ae8:	push	{r4, lr}
   13aec:	bl	1411c <close@plt+0x32d0>
   13af0:	cmp	r0, #0
   13af4:	popne	{r4, pc}
   13af8:	bl	1408c <close@plt+0x3240>
   13afc:	push	{r4, lr}
   13b00:	bl	1411c <close@plt+0x32d0>
   13b04:	cmp	r0, #0
   13b08:	popne	{r4, pc}
   13b0c:	bl	1408c <close@plt+0x3240>
   13b10:	push	{r4, lr}
   13b14:	bl	13ae8 <close@plt+0x2c9c>
   13b18:	pop	{r4, pc}
   13b1c:	push	{r4, r5, r6, lr}
   13b20:	mov	r5, r0
   13b24:	mov	r4, r1
   13b28:	bl	1414c <close@plt+0x3300>
   13b2c:	cmp	r0, #0
   13b30:	popne	{r4, r5, r6, pc}
   13b34:	adds	r4, r4, #0
   13b38:	movne	r4, #1
   13b3c:	cmp	r5, #0
   13b40:	orreq	r4, r4, #1
   13b44:	cmp	r4, #0
   13b48:	popeq	{r4, r5, r6, pc}
   13b4c:	bl	1408c <close@plt+0x3240>
   13b50:	push	{r4, lr}
   13b54:	cmp	r1, #0
   13b58:	orreq	r1, r1, #1
   13b5c:	bl	1414c <close@plt+0x3300>
   13b60:	cmp	r0, #0
   13b64:	popne	{r4, pc}
   13b68:	bl	1408c <close@plt+0x3240>
   13b6c:	push	{r4, r5, r6, lr}
   13b70:	mov	r6, r0
   13b74:	mov	r5, r1
   13b78:	mov	r4, r2
   13b7c:	bl	144ac <close@plt+0x3660>
   13b80:	cmp	r0, #0
   13b84:	popne	{r4, r5, r6, pc}
   13b88:	cmp	r6, #0
   13b8c:	beq	13b9c <close@plt+0x2d50>
   13b90:	cmp	r5, #0
   13b94:	cmpne	r4, #0
   13b98:	popeq	{r4, r5, r6, pc}
   13b9c:	bl	1408c <close@plt+0x3240>
   13ba0:	push	{r4, lr}
   13ba4:	bl	13b6c <close@plt+0x2d20>
   13ba8:	pop	{r4, pc}
   13bac:	push	{r4, lr}
   13bb0:	mov	ip, r1
   13bb4:	mov	r3, r2
   13bb8:	cmp	r2, #0
   13bbc:	cmpne	r1, #0
   13bc0:	moveq	r3, #1
   13bc4:	moveq	ip, r3
   13bc8:	mov	r2, r3
   13bcc:	mov	r1, ip
   13bd0:	bl	144ac <close@plt+0x3660>
   13bd4:	cmp	r0, #0
   13bd8:	popne	{r4, pc}
   13bdc:	bl	1408c <close@plt+0x3240>
   13be0:	push	{r4, lr}
   13be4:	mov	r2, r1
   13be8:	mov	r1, r0
   13bec:	mov	r0, #0
   13bf0:	bl	13b6c <close@plt+0x2d20>
   13bf4:	pop	{r4, pc}
   13bf8:	push	{r4, lr}
   13bfc:	mov	r2, r1
   13c00:	mov	r1, r0
   13c04:	mov	r0, #0
   13c08:	bl	13bac <close@plt+0x2d60>
   13c0c:	pop	{r4, pc}
   13c10:	push	{r4, r5, r6, r7, r8, lr}
   13c14:	mov	r5, r1
   13c18:	mov	r6, r2
   13c1c:	ldr	r4, [r1]
   13c20:	subs	r7, r0, #0
   13c24:	beq	13c40 <close@plt+0x2df4>
   13c28:	lsr	r2, r4, #1
   13c2c:	add	r3, r2, #1
   13c30:	mvn	r3, r3
   13c34:	cmp	r4, r3
   13c38:	bls	13c64 <close@plt+0x2e18>
   13c3c:	bl	1408c <close@plt+0x3240>
   13c40:	cmp	r4, #0
   13c44:	bne	13c6c <close@plt+0x2e20>
   13c48:	mov	r1, r2
   13c4c:	mov	r0, #64	; 0x40
   13c50:	bl	14600 <close@plt+0x37b4>
   13c54:	cmp	r0, #0
   13c58:	movne	r4, r0
   13c5c:	addeq	r4, r0, #1
   13c60:	b	13c6c <close@plt+0x2e20>
   13c64:	add	r4, r4, #1
   13c68:	add	r4, r4, r2
   13c6c:	mov	r2, r6
   13c70:	mov	r1, r4
   13c74:	mov	r0, r7
   13c78:	bl	13b6c <close@plt+0x2d20>
   13c7c:	str	r4, [r5]
   13c80:	pop	{r4, r5, r6, r7, r8, pc}
   13c84:	push	{r4, lr}
   13c88:	mov	r2, #1
   13c8c:	bl	13c10 <close@plt+0x2dc4>
   13c90:	pop	{r4, pc}
   13c94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13c98:	sub	sp, sp, #12
   13c9c:	mov	fp, r0
   13ca0:	mov	sl, r1
   13ca4:	mov	r9, r2
   13ca8:	mov	r7, r3
   13cac:	ldr	r6, [sp, #48]	; 0x30
   13cb0:	ldr	r5, [r1]
   13cb4:	asrs	r4, r5, #1
   13cb8:	bmi	13e14 <close@plt+0x2fc8>
   13cbc:	cmp	r5, #0
   13cc0:	blt	13e28 <close@plt+0x2fdc>
   13cc4:	mvn	r3, #-2147483648	; 0x80000000
   13cc8:	sub	r3, r3, r4
   13ccc:	cmp	r5, r3
   13cd0:	movle	r3, #0
   13cd4:	movgt	r3, #1
   13cd8:	cmp	r3, #0
   13cdc:	addeq	r4, r4, r5
   13ce0:	mvnne	r4, #-2147483648	; 0x80000000
   13ce4:	mvn	r8, r7
   13ce8:	lsr	r8, r8, #31
   13cec:	cmp	r7, r4
   13cf0:	movge	r3, #0
   13cf4:	andlt	r3, r8, #1
   13cf8:	cmp	r3, #0
   13cfc:	movne	r4, r7
   13d00:	cmp	r6, #0
   13d04:	blt	13e3c <close@plt+0x2ff0>
   13d08:	cmp	r6, #0
   13d0c:	beq	13ee8 <close@plt+0x309c>
   13d10:	cmp	r4, #0
   13d14:	blt	13e98 <close@plt+0x304c>
   13d18:	mov	r1, r6
   13d1c:	mvn	r0, #-2147483648	; 0x80000000
   13d20:	bl	1480c <close@plt+0x39c0>
   13d24:	cmp	r0, r4
   13d28:	movge	r0, #0
   13d2c:	movlt	r0, #1
   13d30:	cmp	r0, #0
   13d34:	mvnne	r3, #-2147483648	; 0x80000000
   13d38:	strne	r3, [sp, #4]
   13d3c:	beq	13ed0 <close@plt+0x3084>
   13d40:	mov	r1, r6
   13d44:	ldr	r0, [sp, #4]
   13d48:	bl	1480c <close@plt+0x39c0>
   13d4c:	mov	r4, r0
   13d50:	mov	r1, r6
   13d54:	ldr	r0, [sp, #4]
   13d58:	bl	14a2c <close@plt+0x3be0>
   13d5c:	ldr	r3, [sp, #4]
   13d60:	sub	r1, r3, r1
   13d64:	cmp	fp, #0
   13d68:	moveq	r3, #0
   13d6c:	streq	r3, [sl]
   13d70:	sub	r3, r4, r5
   13d74:	cmp	r3, r9
   13d78:	bge	13e00 <close@plt+0x2fb4>
   13d7c:	cmp	r9, #0
   13d80:	blt	13ef4 <close@plt+0x30a8>
   13d84:	cmp	r5, #0
   13d88:	blt	13f08 <close@plt+0x30bc>
   13d8c:	mvn	r3, #-2147483648	; 0x80000000
   13d90:	sub	r3, r3, r9
   13d94:	cmp	r5, r3
   13d98:	movle	r3, #0
   13d9c:	movgt	r3, #1
   13da0:	cmp	r3, #0
   13da4:	bne	13fb0 <close@plt+0x3164>
   13da8:	add	r5, r5, r9
   13dac:	mov	r4, r5
   13db0:	cmp	r7, r5
   13db4:	movge	r7, #0
   13db8:	andlt	r7, r8, #1
   13dbc:	cmp	r7, #0
   13dc0:	bne	13fb0 <close@plt+0x3164>
   13dc4:	cmp	r6, #0
   13dc8:	blt	13f1c <close@plt+0x30d0>
   13dcc:	cmp	r6, #0
   13dd0:	beq	13dfc <close@plt+0x2fb0>
   13dd4:	cmp	r5, #0
   13dd8:	blt	13f78 <close@plt+0x312c>
   13ddc:	mov	r1, r6
   13de0:	mvn	r0, #-2147483648	; 0x80000000
   13de4:	bl	1480c <close@plt+0x39c0>
   13de8:	cmp	r5, r0
   13dec:	movle	r0, #0
   13df0:	movgt	r0, #1
   13df4:	cmp	r0, #0
   13df8:	bne	13fb0 <close@plt+0x3164>
   13dfc:	mul	r1, r5, r6
   13e00:	mov	r0, fp
   13e04:	bl	13b1c <close@plt+0x2cd0>
   13e08:	str	r4, [sl]
   13e0c:	add	sp, sp, #12
   13e10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13e14:	rsb	r3, r4, #-2147483648	; 0x80000000
   13e18:	cmp	r5, r3
   13e1c:	movge	r3, #0
   13e20:	movlt	r3, #1
   13e24:	b	13cd8 <close@plt+0x2e8c>
   13e28:	rsb	r3, r5, #-2147483648	; 0x80000000
   13e2c:	cmp	r4, r3
   13e30:	movge	r3, #0
   13e34:	movlt	r3, #1
   13e38:	b	13cd8 <close@plt+0x2e8c>
   13e3c:	cmp	r4, #0
   13e40:	blt	13e68 <close@plt+0x301c>
   13e44:	cmn	r6, #1
   13e48:	beq	13e84 <close@plt+0x3038>
   13e4c:	mov	r1, r6
   13e50:	mov	r0, #-2147483648	; 0x80000000
   13e54:	bl	1480c <close@plt+0x39c0>
   13e58:	cmp	r0, r4
   13e5c:	movge	r0, #0
   13e60:	movlt	r0, #1
   13e64:	b	13d30 <close@plt+0x2ee4>
   13e68:	mov	r1, r6
   13e6c:	mvn	r0, #-2147483648	; 0x80000000
   13e70:	bl	1480c <close@plt+0x39c0>
   13e74:	cmp	r0, r4
   13e78:	movle	r0, #0
   13e7c:	movgt	r0, #1
   13e80:	b	13d30 <close@plt+0x2ee4>
   13e84:	add	r0, r4, #-2147483648	; 0x80000000
   13e88:	cmp	r0, #0
   13e8c:	movle	r0, #0
   13e90:	movgt	r0, #1
   13e94:	b	13d30 <close@plt+0x2ee4>
   13e98:	cmn	r4, #1
   13e9c:	beq	13ebc <close@plt+0x3070>
   13ea0:	mov	r1, r4
   13ea4:	mov	r0, #-2147483648	; 0x80000000
   13ea8:	bl	1480c <close@plt+0x39c0>
   13eac:	cmp	r6, r0
   13eb0:	movle	r0, #0
   13eb4:	movgt	r0, #1
   13eb8:	b	13d30 <close@plt+0x2ee4>
   13ebc:	add	r0, r6, #-2147483648	; 0x80000000
   13ec0:	cmp	r0, #0
   13ec4:	movle	r0, #0
   13ec8:	movgt	r0, #1
   13ecc:	b	13d30 <close@plt+0x2ee4>
   13ed0:	mul	r1, r6, r4
   13ed4:	cmp	r1, #63	; 0x3f
   13ed8:	movle	r3, #64	; 0x40
   13edc:	strle	r3, [sp, #4]
   13ee0:	bgt	13d64 <close@plt+0x2f18>
   13ee4:	b	13d40 <close@plt+0x2ef4>
   13ee8:	mov	r3, #64	; 0x40
   13eec:	str	r3, [sp, #4]
   13ef0:	b	13d40 <close@plt+0x2ef4>
   13ef4:	rsb	r3, r9, #-2147483648	; 0x80000000
   13ef8:	cmp	r5, r3
   13efc:	movge	r3, #0
   13f00:	movlt	r3, #1
   13f04:	b	13da0 <close@plt+0x2f54>
   13f08:	rsb	r3, r5, #-2147483648	; 0x80000000
   13f0c:	cmp	r9, r3
   13f10:	movge	r3, #0
   13f14:	movlt	r3, #1
   13f18:	b	13da0 <close@plt+0x2f54>
   13f1c:	cmp	r5, #0
   13f20:	blt	13f48 <close@plt+0x30fc>
   13f24:	cmn	r6, #1
   13f28:	beq	13f64 <close@plt+0x3118>
   13f2c:	mov	r1, r6
   13f30:	mov	r0, #-2147483648	; 0x80000000
   13f34:	bl	1480c <close@plt+0x39c0>
   13f38:	cmp	r5, r0
   13f3c:	movle	r0, #0
   13f40:	movgt	r0, #1
   13f44:	b	13df4 <close@plt+0x2fa8>
   13f48:	mov	r1, r6
   13f4c:	mvn	r0, #-2147483648	; 0x80000000
   13f50:	bl	1480c <close@plt+0x39c0>
   13f54:	cmp	r5, r0
   13f58:	movge	r0, #0
   13f5c:	movlt	r0, #1
   13f60:	b	13df4 <close@plt+0x2fa8>
   13f64:	add	r0, r5, #-2147483648	; 0x80000000
   13f68:	cmp	r0, #0
   13f6c:	movle	r0, #0
   13f70:	movgt	r0, #1
   13f74:	b	13df4 <close@plt+0x2fa8>
   13f78:	cmn	r5, #1
   13f7c:	beq	13f9c <close@plt+0x3150>
   13f80:	mov	r1, r5
   13f84:	mov	r0, #-2147483648	; 0x80000000
   13f88:	bl	1480c <close@plt+0x39c0>
   13f8c:	cmp	r6, r0
   13f90:	movle	r0, #0
   13f94:	movgt	r0, #1
   13f98:	b	13df4 <close@plt+0x2fa8>
   13f9c:	add	r0, r6, #-2147483648	; 0x80000000
   13fa0:	cmp	r0, #0
   13fa4:	movle	r0, #0
   13fa8:	movgt	r0, #1
   13fac:	b	13df4 <close@plt+0x2fa8>
   13fb0:	bl	1408c <close@plt+0x3240>
   13fb4:	push	{r4, lr}
   13fb8:	bl	140cc <close@plt+0x3280>
   13fbc:	cmp	r0, #0
   13fc0:	popne	{r4, pc}
   13fc4:	bl	1408c <close@plt+0x3240>
   13fc8:	push	{r4, lr}
   13fcc:	mov	r1, #1
   13fd0:	bl	13fb4 <close@plt+0x3168>
   13fd4:	pop	{r4, pc}
   13fd8:	push	{r4, lr}
   13fdc:	bl	140cc <close@plt+0x3280>
   13fe0:	cmp	r0, #0
   13fe4:	popne	{r4, pc}
   13fe8:	bl	1408c <close@plt+0x3240>
   13fec:	push	{r4, lr}
   13ff0:	mov	r1, #1
   13ff4:	bl	13fd8 <close@plt+0x318c>
   13ff8:	pop	{r4, pc}
   13ffc:	push	{r4, r5, r6, lr}
   14000:	mov	r5, r0
   14004:	mov	r4, r1
   14008:	mov	r0, r1
   1400c:	bl	13ae8 <close@plt+0x2c9c>
   14010:	mov	r2, r4
   14014:	mov	r1, r5
   14018:	bl	10c60 <memcpy@plt>
   1401c:	pop	{r4, r5, r6, pc}
   14020:	push	{r4, r5, r6, lr}
   14024:	mov	r5, r0
   14028:	mov	r4, r1
   1402c:	mov	r0, r1
   14030:	bl	13afc <close@plt+0x2cb0>
   14034:	mov	r2, r4
   14038:	mov	r1, r5
   1403c:	bl	10c60 <memcpy@plt>
   14040:	pop	{r4, r5, r6, pc}
   14044:	push	{r4, r5, r6, lr}
   14048:	mov	r5, r0
   1404c:	mov	r4, r1
   14050:	add	r0, r1, #1
   14054:	bl	13afc <close@plt+0x2cb0>
   14058:	mov	r2, #0
   1405c:	strb	r2, [r0, r4]
   14060:	mov	r2, r4
   14064:	mov	r1, r5
   14068:	bl	10c60 <memcpy@plt>
   1406c:	pop	{r4, r5, r6, pc}
   14070:	push	{r4, lr}
   14074:	mov	r4, r0
   14078:	bl	10d74 <strlen@plt>
   1407c:	add	r1, r0, #1
   14080:	mov	r0, r4
   14084:	bl	13ffc <close@plt+0x31b0>
   14088:	pop	{r4, pc}
   1408c:	push	{r4, lr}
   14090:	ldr	r3, [pc, #40]	; 140c0 <close@plt+0x3274>
   14094:	ldr	r4, [r3]
   14098:	mov	r2, #5
   1409c:	ldr	r1, [pc, #32]	; 140c4 <close@plt+0x3278>
   140a0:	mov	r0, #0
   140a4:	bl	10c90 <dcgettext@plt>
   140a8:	mov	r3, r0
   140ac:	ldr	r2, [pc, #20]	; 140c8 <close@plt+0x327c>
   140b0:	mov	r1, #0
   140b4:	mov	r0, r4
   140b8:	bl	10d08 <error@plt>
   140bc:	bl	10e40 <abort@plt>
   140c0:	andeq	r6, r2, r4, ror #1
   140c4:	andeq	r5, r1, r8, lsl #8
   140c8:	andeq	r4, r1, ip, asr #31
   140cc:	push	{r4, lr}
   140d0:	mov	r2, r0
   140d4:	mov	r3, r1
   140d8:	cmp	r1, #0
   140dc:	cmpne	r0, #0
   140e0:	moveq	r3, #1
   140e4:	moveq	r2, r3
   140e8:	umull	r0, r1, r2, r3
   140ec:	cmp	r0, #0
   140f0:	cmpge	r1, #0
   140f4:	bne	14108 <close@plt+0x32bc>
   140f8:	mov	r1, r3
   140fc:	mov	r0, r2
   14100:	bl	10c00 <calloc@plt>
   14104:	pop	{r4, pc}
   14108:	bl	10d80 <__errno_location@plt>
   1410c:	mov	r3, #12
   14110:	str	r3, [r0]
   14114:	mov	r0, #0
   14118:	pop	{r4, pc}
   1411c:	push	{r4, lr}
   14120:	cmp	r0, #0
   14124:	moveq	r0, #1
   14128:	cmp	r0, #0
   1412c:	blt	14138 <close@plt+0x32ec>
   14130:	bl	10d20 <malloc@plt>
   14134:	pop	{r4, pc}
   14138:	bl	10d80 <__errno_location@plt>
   1413c:	mov	r3, #12
   14140:	str	r3, [r0]
   14144:	mov	r0, #0
   14148:	pop	{r4, pc}
   1414c:	push	{r4, lr}
   14150:	cmp	r0, #0
   14154:	beq	14170 <close@plt+0x3324>
   14158:	cmp	r1, #0
   1415c:	beq	1417c <close@plt+0x3330>
   14160:	cmp	r1, #0
   14164:	blt	14188 <close@plt+0x333c>
   14168:	bl	10ca8 <realloc@plt>
   1416c:	pop	{r4, pc}
   14170:	mov	r0, r1
   14174:	bl	1411c <close@plt+0x32d0>
   14178:	pop	{r4, pc}
   1417c:	bl	14320 <close@plt+0x34d4>
   14180:	mov	r0, #0
   14184:	pop	{r4, pc}
   14188:	bl	10d80 <__errno_location@plt>
   1418c:	mov	r3, #12
   14190:	str	r3, [r0]
   14194:	mov	r0, #0
   14198:	pop	{r4, pc}
   1419c:	push	{r4, r5, r6, lr}
   141a0:	mov	r5, r0
   141a4:	bl	10cf0 <__fpending@plt>
   141a8:	mov	r6, r0
   141ac:	ldr	r4, [r5]
   141b0:	and	r4, r4, #32
   141b4:	mov	r0, r5
   141b8:	bl	14214 <close@plt+0x33c8>
   141bc:	cmp	r4, #0
   141c0:	bne	141e8 <close@plt+0x339c>
   141c4:	cmp	r0, #0
   141c8:	popeq	{r4, r5, r6, pc}
   141cc:	cmp	r6, #0
   141d0:	bne	14204 <close@plt+0x33b8>
   141d4:	bl	10d80 <__errno_location@plt>
   141d8:	ldr	r0, [r0]
   141dc:	subs	r0, r0, #9
   141e0:	mvnne	r0, #0
   141e4:	pop	{r4, r5, r6, pc}
   141e8:	cmp	r0, #0
   141ec:	bne	1420c <close@plt+0x33c0>
   141f0:	bl	10d80 <__errno_location@plt>
   141f4:	mov	r3, #0
   141f8:	str	r3, [r0]
   141fc:	mvn	r0, #0
   14200:	pop	{r4, r5, r6, pc}
   14204:	mvn	r0, #0
   14208:	pop	{r4, r5, r6, pc}
   1420c:	mvn	r0, #0
   14210:	pop	{r4, r5, r6, pc}
   14214:	push	{r4, r5, r6, lr}
   14218:	sub	sp, sp, #8
   1421c:	mov	r4, r0
   14220:	bl	10db0 <fileno@plt>
   14224:	cmp	r0, #0
   14228:	blt	142a0 <close@plt+0x3454>
   1422c:	mov	r0, r4
   14230:	bl	10d38 <__freading@plt>
   14234:	cmp	r0, #0
   14238:	beq	1426c <close@plt+0x3420>
   1423c:	mov	r0, r4
   14240:	bl	10db0 <fileno@plt>
   14244:	mov	r3, #1
   14248:	str	r3, [sp]
   1424c:	mov	r2, #0
   14250:	mov	r3, #0
   14254:	bl	10cd8 <lseek64@plt>
   14258:	mvn	r2, #0
   1425c:	mvn	r3, #0
   14260:	cmp	r1, r3
   14264:	cmpeq	r0, r2
   14268:	beq	142ac <close@plt+0x3460>
   1426c:	mov	r0, r4
   14270:	bl	142bc <close@plt+0x3470>
   14274:	cmp	r0, #0
   14278:	beq	142ac <close@plt+0x3460>
   1427c:	bl	10d80 <__errno_location@plt>
   14280:	mov	r5, r0
   14284:	ldr	r6, [r0]
   14288:	mov	r0, r4
   1428c:	bl	10dc8 <fclose@plt>
   14290:	cmp	r6, #0
   14294:	strne	r6, [r5]
   14298:	mvnne	r0, #0
   1429c:	b	142b4 <close@plt+0x3468>
   142a0:	mov	r0, r4
   142a4:	bl	10dc8 <fclose@plt>
   142a8:	b	142b4 <close@plt+0x3468>
   142ac:	mov	r0, r4
   142b0:	bl	10dc8 <fclose@plt>
   142b4:	add	sp, sp, #8
   142b8:	pop	{r4, r5, r6, pc}
   142bc:	push	{r4, lr}
   142c0:	sub	sp, sp, #8
   142c4:	subs	r4, r0, #0
   142c8:	beq	142dc <close@plt+0x3490>
   142cc:	mov	r0, r4
   142d0:	bl	10d38 <__freading@plt>
   142d4:	cmp	r0, #0
   142d8:	bne	142ec <close@plt+0x34a0>
   142dc:	mov	r0, r4
   142e0:	bl	10c3c <fflush@plt>
   142e4:	add	sp, sp, #8
   142e8:	pop	{r4, pc}
   142ec:	ldr	r3, [r4]
   142f0:	tst	r3, #256	; 0x100
   142f4:	bne	14304 <close@plt+0x34b8>
   142f8:	mov	r0, r4
   142fc:	bl	10c3c <fflush@plt>
   14300:	b	142e4 <close@plt+0x3498>
   14304:	mov	r3, #1
   14308:	str	r3, [sp]
   1430c:	mov	r2, #0
   14310:	mov	r3, #0
   14314:	mov	r0, r4
   14318:	bl	14378 <close@plt+0x352c>
   1431c:	b	142f8 <close@plt+0x34ac>
   14320:	push	{r4, r5, lr}
   14324:	sub	sp, sp, #12
   14328:	mov	r5, r0
   1432c:	bl	10d80 <__errno_location@plt>
   14330:	mov	r4, r0
   14334:	ldr	r3, [r0]
   14338:	str	r3, [sp]
   1433c:	str	r3, [sp, #4]
   14340:	mov	r3, #0
   14344:	str	r3, [r0]
   14348:	mov	r0, r5
   1434c:	bl	10c48 <free@plt>
   14350:	ldr	r3, [r4]
   14354:	cmp	r3, #0
   14358:	moveq	r3, #4
   1435c:	movne	r3, #0
   14360:	add	r2, sp, #8
   14364:	add	r3, r2, r3
   14368:	ldr	r3, [r3, #-8]
   1436c:	str	r3, [r4]
   14370:	add	sp, sp, #12
   14374:	pop	{r4, r5, pc}
   14378:	push	{r4, r5, r6, r7, lr}
   1437c:	sub	sp, sp, #12
   14380:	mov	r4, r0
   14384:	mov	r6, r2
   14388:	mov	r7, r3
   1438c:	ldr	r5, [sp, #32]
   14390:	ldr	r2, [r0, #8]
   14394:	ldr	r3, [r0, #4]
   14398:	cmp	r2, r3
   1439c:	beq	143bc <close@plt+0x3570>
   143a0:	str	r5, [sp]
   143a4:	mov	r2, r6
   143a8:	mov	r3, r7
   143ac:	mov	r0, r4
   143b0:	bl	10dd4 <fseeko64@plt>
   143b4:	add	sp, sp, #12
   143b8:	pop	{r4, r5, r6, r7, pc}
   143bc:	ldr	r2, [r0, #20]
   143c0:	ldr	r3, [r0, #16]
   143c4:	cmp	r2, r3
   143c8:	bne	143a0 <close@plt+0x3554>
   143cc:	ldr	r3, [r0, #36]	; 0x24
   143d0:	cmp	r3, #0
   143d4:	bne	143a0 <close@plt+0x3554>
   143d8:	bl	10db0 <fileno@plt>
   143dc:	str	r5, [sp]
   143e0:	mov	r2, r6
   143e4:	mov	r3, r7
   143e8:	bl	10cd8 <lseek64@plt>
   143ec:	mvn	r2, #0
   143f0:	mvn	r3, #0
   143f4:	cmp	r1, r3
   143f8:	cmpeq	r0, r2
   143fc:	beq	14418 <close@plt+0x35cc>
   14400:	ldr	r3, [r4]
   14404:	bic	r3, r3, #16
   14408:	str	r3, [r4]
   1440c:	strd	r0, [r4, #80]	; 0x50
   14410:	mov	r0, #0
   14414:	b	143b4 <close@plt+0x3568>
   14418:	mvn	r0, #0
   1441c:	b	143b4 <close@plt+0x3568>
   14420:	push	{r4, lr}
   14424:	mov	r0, #14
   14428:	bl	10e04 <nl_langinfo@plt>
   1442c:	cmp	r0, #0
   14430:	beq	14448 <close@plt+0x35fc>
   14434:	ldrb	r2, [r0]
   14438:	ldr	r3, [pc, #16]	; 14450 <close@plt+0x3604>
   1443c:	cmp	r2, #0
   14440:	moveq	r0, r3
   14444:	pop	{r4, pc}
   14448:	ldr	r0, [pc]	; 14450 <close@plt+0x3604>
   1444c:	pop	{r4, pc}
   14450:	andeq	r5, r1, ip, lsl r4
   14454:	push	{r4, r5, r6, r7, lr}
   14458:	sub	sp, sp, #12
   1445c:	mov	r7, r1
   14460:	mov	r5, r2
   14464:	subs	r6, r0, #0
   14468:	addeq	r6, sp, #4
   1446c:	mov	r0, r6
   14470:	bl	10cfc <mbrtowc@plt>
   14474:	mov	r4, r0
   14478:	cmp	r5, #0
   1447c:	cmnne	r0, #3
   14480:	bhi	14490 <close@plt+0x3644>
   14484:	mov	r0, r4
   14488:	add	sp, sp, #12
   1448c:	pop	{r4, r5, r6, r7, pc}
   14490:	mov	r0, #0
   14494:	bl	144f8 <close@plt+0x36ac>
   14498:	cmp	r0, #0
   1449c:	ldrbeq	r3, [r7]
   144a0:	streq	r3, [r6]
   144a4:	moveq	r4, #1
   144a8:	b	14484 <close@plt+0x3638>
   144ac:	push	{r4, r5, r6, lr}
   144b0:	mov	r6, r0
   144b4:	mov	r5, r1
   144b8:	subs	r4, r2, #0
   144bc:	beq	144e8 <close@plt+0x369c>
   144c0:	mov	r1, r4
   144c4:	mvn	r0, #0
   144c8:	bl	14600 <close@plt+0x37b4>
   144cc:	cmp	r0, r5
   144d0:	bcs	144e8 <close@plt+0x369c>
   144d4:	bl	10d80 <__errno_location@plt>
   144d8:	mov	r3, #12
   144dc:	str	r3, [r0]
   144e0:	mov	r0, #0
   144e4:	pop	{r4, r5, r6, pc}
   144e8:	mul	r1, r5, r4
   144ec:	mov	r0, r6
   144f0:	bl	1414c <close@plt+0x3300>
   144f4:	pop	{r4, r5, r6, pc}
   144f8:	push	{lr}		; (str lr, [sp, #-4]!)
   144fc:	sub	sp, sp, #268	; 0x10c
   14500:	ldr	r2, [pc, #68]	; 1454c <close@plt+0x3700>
   14504:	add	r1, sp, #4
   14508:	bl	14558 <close@plt+0x370c>
   1450c:	cmp	r0, #0
   14510:	movne	r0, #0
   14514:	bne	14544 <close@plt+0x36f8>
   14518:	ldr	r1, [pc, #48]	; 14550 <close@plt+0x3704>
   1451c:	add	r0, sp, #4
   14520:	bl	10c30 <strcmp@plt>
   14524:	cmp	r0, #0
   14528:	moveq	r0, #0
   1452c:	beq	14544 <close@plt+0x36f8>
   14530:	ldr	r1, [pc, #28]	; 14554 <close@plt+0x3708>
   14534:	add	r0, sp, #4
   14538:	bl	10c30 <strcmp@plt>
   1453c:	adds	r0, r0, #0
   14540:	movne	r0, #1
   14544:	add	sp, sp, #268	; 0x10c
   14548:	pop	{pc}		; (ldr pc, [sp], #4)
   1454c:	andeq	r0, r0, r1, lsl #2
   14550:	andeq	r5, r1, r4, lsr #8
   14554:	andeq	r5, r1, r8, lsr #8
   14558:	push	{r4, r5, r6, lr}
   1455c:	mov	r6, r1
   14560:	mov	r4, r2
   14564:	mov	r1, #0
   14568:	bl	10dec <setlocale@plt>
   1456c:	subs	r5, r0, #0
   14570:	beq	14594 <close@plt+0x3748>
   14574:	mov	r0, r5
   14578:	bl	10d74 <strlen@plt>
   1457c:	cmp	r4, r0
   14580:	bhi	145ac <close@plt+0x3760>
   14584:	cmp	r4, #0
   14588:	bne	145c4 <close@plt+0x3778>
   1458c:	mov	r0, #34	; 0x22
   14590:	pop	{r4, r5, r6, pc}
   14594:	cmp	r4, #0
   14598:	beq	145e8 <close@plt+0x379c>
   1459c:	mov	r3, #0
   145a0:	strb	r3, [r6]
   145a4:	mov	r0, #22
   145a8:	pop	{r4, r5, r6, pc}
   145ac:	add	r2, r0, #1
   145b0:	mov	r1, r5
   145b4:	mov	r0, r6
   145b8:	bl	10c60 <memcpy@plt>
   145bc:	mov	r0, #0
   145c0:	pop	{r4, r5, r6, pc}
   145c4:	sub	r4, r4, #1
   145c8:	mov	r2, r4
   145cc:	mov	r1, r5
   145d0:	mov	r0, r6
   145d4:	bl	10c60 <memcpy@plt>
   145d8:	mov	r3, #0
   145dc:	strb	r3, [r6, r4]
   145e0:	mov	r0, #34	; 0x22
   145e4:	pop	{r4, r5, r6, pc}
   145e8:	mov	r0, #22
   145ec:	pop	{r4, r5, r6, pc}
   145f0:	push	{r4, lr}
   145f4:	mov	r1, #0
   145f8:	bl	10dec <setlocale@plt>
   145fc:	pop	{r4, pc}
   14600:	subs	r2, r1, #1
   14604:	bxeq	lr
   14608:	bcc	147e0 <close@plt+0x3994>
   1460c:	cmp	r0, r1
   14610:	bls	147c4 <close@plt+0x3978>
   14614:	tst	r1, r2
   14618:	beq	147d0 <close@plt+0x3984>
   1461c:	clz	r3, r0
   14620:	clz	r2, r1
   14624:	sub	r3, r2, r3
   14628:	rsbs	r3, r3, #31
   1462c:	addne	r3, r3, r3, lsl #1
   14630:	mov	r2, #0
   14634:	addne	pc, pc, r3, lsl #2
   14638:	nop			; (mov r0, r0)
   1463c:	cmp	r0, r1, lsl #31
   14640:	adc	r2, r2, r2
   14644:	subcs	r0, r0, r1, lsl #31
   14648:	cmp	r0, r1, lsl #30
   1464c:	adc	r2, r2, r2
   14650:	subcs	r0, r0, r1, lsl #30
   14654:	cmp	r0, r1, lsl #29
   14658:	adc	r2, r2, r2
   1465c:	subcs	r0, r0, r1, lsl #29
   14660:	cmp	r0, r1, lsl #28
   14664:	adc	r2, r2, r2
   14668:	subcs	r0, r0, r1, lsl #28
   1466c:	cmp	r0, r1, lsl #27
   14670:	adc	r2, r2, r2
   14674:	subcs	r0, r0, r1, lsl #27
   14678:	cmp	r0, r1, lsl #26
   1467c:	adc	r2, r2, r2
   14680:	subcs	r0, r0, r1, lsl #26
   14684:	cmp	r0, r1, lsl #25
   14688:	adc	r2, r2, r2
   1468c:	subcs	r0, r0, r1, lsl #25
   14690:	cmp	r0, r1, lsl #24
   14694:	adc	r2, r2, r2
   14698:	subcs	r0, r0, r1, lsl #24
   1469c:	cmp	r0, r1, lsl #23
   146a0:	adc	r2, r2, r2
   146a4:	subcs	r0, r0, r1, lsl #23
   146a8:	cmp	r0, r1, lsl #22
   146ac:	adc	r2, r2, r2
   146b0:	subcs	r0, r0, r1, lsl #22
   146b4:	cmp	r0, r1, lsl #21
   146b8:	adc	r2, r2, r2
   146bc:	subcs	r0, r0, r1, lsl #21
   146c0:	cmp	r0, r1, lsl #20
   146c4:	adc	r2, r2, r2
   146c8:	subcs	r0, r0, r1, lsl #20
   146cc:	cmp	r0, r1, lsl #19
   146d0:	adc	r2, r2, r2
   146d4:	subcs	r0, r0, r1, lsl #19
   146d8:	cmp	r0, r1, lsl #18
   146dc:	adc	r2, r2, r2
   146e0:	subcs	r0, r0, r1, lsl #18
   146e4:	cmp	r0, r1, lsl #17
   146e8:	adc	r2, r2, r2
   146ec:	subcs	r0, r0, r1, lsl #17
   146f0:	cmp	r0, r1, lsl #16
   146f4:	adc	r2, r2, r2
   146f8:	subcs	r0, r0, r1, lsl #16
   146fc:	cmp	r0, r1, lsl #15
   14700:	adc	r2, r2, r2
   14704:	subcs	r0, r0, r1, lsl #15
   14708:	cmp	r0, r1, lsl #14
   1470c:	adc	r2, r2, r2
   14710:	subcs	r0, r0, r1, lsl #14
   14714:	cmp	r0, r1, lsl #13
   14718:	adc	r2, r2, r2
   1471c:	subcs	r0, r0, r1, lsl #13
   14720:	cmp	r0, r1, lsl #12
   14724:	adc	r2, r2, r2
   14728:	subcs	r0, r0, r1, lsl #12
   1472c:	cmp	r0, r1, lsl #11
   14730:	adc	r2, r2, r2
   14734:	subcs	r0, r0, r1, lsl #11
   14738:	cmp	r0, r1, lsl #10
   1473c:	adc	r2, r2, r2
   14740:	subcs	r0, r0, r1, lsl #10
   14744:	cmp	r0, r1, lsl #9
   14748:	adc	r2, r2, r2
   1474c:	subcs	r0, r0, r1, lsl #9
   14750:	cmp	r0, r1, lsl #8
   14754:	adc	r2, r2, r2
   14758:	subcs	r0, r0, r1, lsl #8
   1475c:	cmp	r0, r1, lsl #7
   14760:	adc	r2, r2, r2
   14764:	subcs	r0, r0, r1, lsl #7
   14768:	cmp	r0, r1, lsl #6
   1476c:	adc	r2, r2, r2
   14770:	subcs	r0, r0, r1, lsl #6
   14774:	cmp	r0, r1, lsl #5
   14778:	adc	r2, r2, r2
   1477c:	subcs	r0, r0, r1, lsl #5
   14780:	cmp	r0, r1, lsl #4
   14784:	adc	r2, r2, r2
   14788:	subcs	r0, r0, r1, lsl #4
   1478c:	cmp	r0, r1, lsl #3
   14790:	adc	r2, r2, r2
   14794:	subcs	r0, r0, r1, lsl #3
   14798:	cmp	r0, r1, lsl #2
   1479c:	adc	r2, r2, r2
   147a0:	subcs	r0, r0, r1, lsl #2
   147a4:	cmp	r0, r1, lsl #1
   147a8:	adc	r2, r2, r2
   147ac:	subcs	r0, r0, r1, lsl #1
   147b0:	cmp	r0, r1
   147b4:	adc	r2, r2, r2
   147b8:	subcs	r0, r0, r1
   147bc:	mov	r0, r2
   147c0:	bx	lr
   147c4:	moveq	r0, #1
   147c8:	movne	r0, #0
   147cc:	bx	lr
   147d0:	clz	r2, r1
   147d4:	rsb	r2, r2, #31
   147d8:	lsr	r0, r0, r2
   147dc:	bx	lr
   147e0:	cmp	r0, #0
   147e4:	mvnne	r0, #0
   147e8:	b	14a4c <close@plt+0x3c00>
   147ec:	cmp	r1, #0
   147f0:	beq	147e0 <close@plt+0x3994>
   147f4:	push	{r0, r1, lr}
   147f8:	bl	14600 <close@plt+0x37b4>
   147fc:	pop	{r1, r2, lr}
   14800:	mul	r3, r2, r0
   14804:	sub	r1, r1, r3
   14808:	bx	lr
   1480c:	cmp	r1, #0
   14810:	beq	14a1c <close@plt+0x3bd0>
   14814:	eor	ip, r0, r1
   14818:	rsbmi	r1, r1, #0
   1481c:	subs	r2, r1, #1
   14820:	beq	149e8 <close@plt+0x3b9c>
   14824:	movs	r3, r0
   14828:	rsbmi	r3, r0, #0
   1482c:	cmp	r3, r1
   14830:	bls	149f4 <close@plt+0x3ba8>
   14834:	tst	r1, r2
   14838:	beq	14a04 <close@plt+0x3bb8>
   1483c:	clz	r2, r3
   14840:	clz	r0, r1
   14844:	sub	r2, r0, r2
   14848:	rsbs	r2, r2, #31
   1484c:	addne	r2, r2, r2, lsl #1
   14850:	mov	r0, #0
   14854:	addne	pc, pc, r2, lsl #2
   14858:	nop			; (mov r0, r0)
   1485c:	cmp	r3, r1, lsl #31
   14860:	adc	r0, r0, r0
   14864:	subcs	r3, r3, r1, lsl #31
   14868:	cmp	r3, r1, lsl #30
   1486c:	adc	r0, r0, r0
   14870:	subcs	r3, r3, r1, lsl #30
   14874:	cmp	r3, r1, lsl #29
   14878:	adc	r0, r0, r0
   1487c:	subcs	r3, r3, r1, lsl #29
   14880:	cmp	r3, r1, lsl #28
   14884:	adc	r0, r0, r0
   14888:	subcs	r3, r3, r1, lsl #28
   1488c:	cmp	r3, r1, lsl #27
   14890:	adc	r0, r0, r0
   14894:	subcs	r3, r3, r1, lsl #27
   14898:	cmp	r3, r1, lsl #26
   1489c:	adc	r0, r0, r0
   148a0:	subcs	r3, r3, r1, lsl #26
   148a4:	cmp	r3, r1, lsl #25
   148a8:	adc	r0, r0, r0
   148ac:	subcs	r3, r3, r1, lsl #25
   148b0:	cmp	r3, r1, lsl #24
   148b4:	adc	r0, r0, r0
   148b8:	subcs	r3, r3, r1, lsl #24
   148bc:	cmp	r3, r1, lsl #23
   148c0:	adc	r0, r0, r0
   148c4:	subcs	r3, r3, r1, lsl #23
   148c8:	cmp	r3, r1, lsl #22
   148cc:	adc	r0, r0, r0
   148d0:	subcs	r3, r3, r1, lsl #22
   148d4:	cmp	r3, r1, lsl #21
   148d8:	adc	r0, r0, r0
   148dc:	subcs	r3, r3, r1, lsl #21
   148e0:	cmp	r3, r1, lsl #20
   148e4:	adc	r0, r0, r0
   148e8:	subcs	r3, r3, r1, lsl #20
   148ec:	cmp	r3, r1, lsl #19
   148f0:	adc	r0, r0, r0
   148f4:	subcs	r3, r3, r1, lsl #19
   148f8:	cmp	r3, r1, lsl #18
   148fc:	adc	r0, r0, r0
   14900:	subcs	r3, r3, r1, lsl #18
   14904:	cmp	r3, r1, lsl #17
   14908:	adc	r0, r0, r0
   1490c:	subcs	r3, r3, r1, lsl #17
   14910:	cmp	r3, r1, lsl #16
   14914:	adc	r0, r0, r0
   14918:	subcs	r3, r3, r1, lsl #16
   1491c:	cmp	r3, r1, lsl #15
   14920:	adc	r0, r0, r0
   14924:	subcs	r3, r3, r1, lsl #15
   14928:	cmp	r3, r1, lsl #14
   1492c:	adc	r0, r0, r0
   14930:	subcs	r3, r3, r1, lsl #14
   14934:	cmp	r3, r1, lsl #13
   14938:	adc	r0, r0, r0
   1493c:	subcs	r3, r3, r1, lsl #13
   14940:	cmp	r3, r1, lsl #12
   14944:	adc	r0, r0, r0
   14948:	subcs	r3, r3, r1, lsl #12
   1494c:	cmp	r3, r1, lsl #11
   14950:	adc	r0, r0, r0
   14954:	subcs	r3, r3, r1, lsl #11
   14958:	cmp	r3, r1, lsl #10
   1495c:	adc	r0, r0, r0
   14960:	subcs	r3, r3, r1, lsl #10
   14964:	cmp	r3, r1, lsl #9
   14968:	adc	r0, r0, r0
   1496c:	subcs	r3, r3, r1, lsl #9
   14970:	cmp	r3, r1, lsl #8
   14974:	adc	r0, r0, r0
   14978:	subcs	r3, r3, r1, lsl #8
   1497c:	cmp	r3, r1, lsl #7
   14980:	adc	r0, r0, r0
   14984:	subcs	r3, r3, r1, lsl #7
   14988:	cmp	r3, r1, lsl #6
   1498c:	adc	r0, r0, r0
   14990:	subcs	r3, r3, r1, lsl #6
   14994:	cmp	r3, r1, lsl #5
   14998:	adc	r0, r0, r0
   1499c:	subcs	r3, r3, r1, lsl #5
   149a0:	cmp	r3, r1, lsl #4
   149a4:	adc	r0, r0, r0
   149a8:	subcs	r3, r3, r1, lsl #4
   149ac:	cmp	r3, r1, lsl #3
   149b0:	adc	r0, r0, r0
   149b4:	subcs	r3, r3, r1, lsl #3
   149b8:	cmp	r3, r1, lsl #2
   149bc:	adc	r0, r0, r0
   149c0:	subcs	r3, r3, r1, lsl #2
   149c4:	cmp	r3, r1, lsl #1
   149c8:	adc	r0, r0, r0
   149cc:	subcs	r3, r3, r1, lsl #1
   149d0:	cmp	r3, r1
   149d4:	adc	r0, r0, r0
   149d8:	subcs	r3, r3, r1
   149dc:	cmp	ip, #0
   149e0:	rsbmi	r0, r0, #0
   149e4:	bx	lr
   149e8:	teq	ip, r0
   149ec:	rsbmi	r0, r0, #0
   149f0:	bx	lr
   149f4:	movcc	r0, #0
   149f8:	asreq	r0, ip, #31
   149fc:	orreq	r0, r0, #1
   14a00:	bx	lr
   14a04:	clz	r2, r1
   14a08:	rsb	r2, r2, #31
   14a0c:	cmp	ip, #0
   14a10:	lsr	r0, r3, r2
   14a14:	rsbmi	r0, r0, #0
   14a18:	bx	lr
   14a1c:	cmp	r0, #0
   14a20:	mvngt	r0, #-2147483648	; 0x80000000
   14a24:	movlt	r0, #-2147483648	; 0x80000000
   14a28:	b	14a4c <close@plt+0x3c00>
   14a2c:	cmp	r1, #0
   14a30:	beq	14a1c <close@plt+0x3bd0>
   14a34:	push	{r0, r1, lr}
   14a38:	bl	14814 <close@plt+0x39c8>
   14a3c:	pop	{r1, r2, lr}
   14a40:	mul	r3, r2, r0
   14a44:	sub	r1, r1, r3
   14a48:	bx	lr
   14a4c:	push	{r1, lr}
   14a50:	mov	r0, #8
   14a54:	bl	10c18 <raise@plt>
   14a58:	pop	{r1, pc}
   14a5c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14a60:	mov	r7, r0
   14a64:	ldr	r6, [pc, #72]	; 14ab4 <close@plt+0x3c68>
   14a68:	ldr	r5, [pc, #72]	; 14ab8 <close@plt+0x3c6c>
   14a6c:	add	r6, pc, r6
   14a70:	add	r5, pc, r5
   14a74:	sub	r6, r6, r5
   14a78:	mov	r8, r1
   14a7c:	mov	r9, r2
   14a80:	bl	10be0 <calloc@plt-0x20>
   14a84:	asrs	r6, r6, #2
   14a88:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14a8c:	mov	r4, #0
   14a90:	add	r4, r4, #1
   14a94:	ldr	r3, [r5], #4
   14a98:	mov	r2, r9
   14a9c:	mov	r1, r8
   14aa0:	mov	r0, r7
   14aa4:	blx	r3
   14aa8:	cmp	r6, r4
   14aac:	bne	14a90 <close@plt+0x3c44>
   14ab0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14ab4:	muleq	r1, ip, r4
   14ab8:	muleq	r1, r4, r4
   14abc:	bx	lr
   14ac0:	ldr	r3, [pc, #12]	; 14ad4 <close@plt+0x3c88>
   14ac4:	mov	r1, #0
   14ac8:	add	r3, pc, r3
   14acc:	ldr	r2, [r3]
   14ad0:	b	10d8c <__cxa_atexit@plt>
   14ad4:	andeq	r1, r1, ip, lsl #12

Disassembly of section .fini:

00014ad8 <.fini>:
   14ad8:	push	{r3, lr}
   14adc:	pop	{r3, pc}
