
../repos/tbeu-matio-3dd266d/src/.libs/libmatio.so.9.1.0:     file format elf32-littlearm


Disassembly of section .init:

00001790 <_init>:
    1790:	push	{r3, lr}
    1794:	bl	1a98 <call_weak_fn>
    1798:	pop	{r3, pc}

Disassembly of section .plt:

0000179c <.plt>:
    179c:	push	{lr}		; (str lr, [sp, #-4]!)
    17a0:	ldr	lr, [pc, #4]	; 17ac <.plt+0x10>
    17a4:	add	lr, pc, lr
    17a8:	ldr	pc, [lr, #8]!
    17ac:	.word	0x00059854

000017b0 <calloc@plt>:
    17b0:	add	ip, pc, #0, 12
    17b4:	add	ip, ip, #364544	; 0x59000
    17b8:	ldr	pc, [ip, #2132]!	; 0x854

000017bc <Mat_VarReadNext@plt>:
    17bc:	add	ip, pc, #0, 12
    17c0:	add	ip, ip, #364544	; 0x59000
    17c4:	ldr	pc, [ip, #2124]!	; 0x84c

000017c8 <strcmp@plt>:
    17c8:	add	ip, pc, #0, 12
    17cc:	add	ip, ip, #364544	; 0x59000
    17d0:	ldr	pc, [ip, #2116]!	; 0x844

000017d4 <__cxa_finalize@plt>:
    17d4:	add	ip, pc, #0, 12
    17d8:	add	ip, ip, #364544	; 0x59000
    17dc:	ldr	pc, [ip, #2108]!	; 0x83c

000017e0 <Mat_Open@plt>:
    17e0:	add	ip, pc, #0, 12
    17e4:	add	ip, ip, #364544	; 0x59000
    17e8:	ldr	pc, [ip, #2100]!	; 0x834

000017ec <printf@plt>:
    17ec:	add	ip, pc, #0, 12
    17f0:	add	ip, ip, #364544	; 0x59000
    17f4:	ldr	pc, [ip, #2092]!	; 0x82c

000017f8 <fopen@plt>:
    17f8:	add	ip, pc, #0, 12
    17fc:	add	ip, ip, #364544	; 0x59000
    1800:	ldr	pc, [ip, #2084]!	; 0x824

00001804 <inflate@plt>:
    1804:	add	ip, pc, #0, 12
    1808:	add	ip, ip, #364544	; 0x59000
    180c:	ldr	pc, [ip, #2076]!	; 0x81c

00001810 <fflush@plt>:
    1810:	add	ip, pc, #0, 12
    1814:	add	ip, ip, #364544	; 0x59000
    1818:	ldr	pc, [ip, #2068]!	; 0x814

0000181c <free@plt>:
    181c:	add	ip, pc, #0, 12
    1820:	add	ip, ip, #364544	; 0x59000
    1824:	ldr	pc, [ip, #2060]!	; 0x80c

00001828 <Mat_Warning@plt>:
    1828:	add	ip, pc, #0, 12
    182c:	add	ip, ip, #364544	; 0x59000
    1830:	ldr	pc, [ip, #2052]!	; 0x804

00001834 <memcpy@plt>:
    1834:	add	ip, pc, #0, 12
    1838:	add	ip, ip, #364544	; 0x59000
    183c:	ldr	pc, [ip, #2044]!	; 0x7fc

00001840 <Mat_VarWrite@plt>:
    1840:	add	ip, pc, #0, 12
    1844:	add	ip, ip, #364544	; 0x59000
    1848:	ldr	pc, [ip, #2036]!	; 0x7f4

0000184c <time@plt>:
    184c:	add	ip, pc, #0, 12
    1850:	add	ip, ip, #364544	; 0x59000
    1854:	ldr	pc, [ip, #2028]!	; 0x7ec

00001858 <ftell@plt>:
    1858:	add	ip, pc, #0, 12
    185c:	add	ip, ip, #364544	; 0x59000
    1860:	ldr	pc, [ip, #2020]!	; 0x7e4

00001864 <fwrite_unlocked@plt>:
    1864:	add	ip, pc, #0, 12
    1868:	add	ip, ip, #364544	; 0x59000
    186c:	ldr	pc, [ip, #2012]!	; 0x7dc

00001870 <ctime@plt>:
    1870:	add	ip, pc, #0, 12
    1874:	add	ip, ip, #364544	; 0x59000
    1878:	ldr	pc, [ip, #2004]!	; 0x7d4

0000187c <strdup@plt>:
    187c:	add	ip, pc, #0, 12
    1880:	add	ip, ip, #364544	; 0x59000
    1884:	ldr	pc, [ip, #1996]!	; 0x7cc

00001888 <realloc@plt>:
    1888:	add	ip, pc, #0, 12
    188c:	add	ip, ip, #364544	; 0x59000
    1890:	ldr	pc, [ip, #1988]!	; 0x7c4

00001894 <Mat_VarReadInfo@plt>:
    1894:	add	ip, pc, #0, 12
    1898:	add	ip, ip, #364544	; 0x59000
    189c:	ldr	pc, [ip, #1980]!	; 0x7bc

000018a0 <zError@plt>:
    18a0:	add	ip, pc, #0, 12
    18a4:	add	ip, ip, #364544	; 0x59000
    18a8:	ldr	pc, [ip, #1972]!	; 0x7b4

000018ac <deflate@plt>:
    18ac:	add	ip, pc, #0, 12
    18b0:	add	ip, ip, #364544	; 0x59000
    18b4:	ldr	pc, [ip, #1964]!	; 0x7ac

000018b8 <Mat_VarCalloc@plt>:
    18b8:	add	ip, pc, #0, 12
    18bc:	add	ip, ip, #364544	; 0x59000
    18c0:	ldr	pc, [ip, #1956]!	; 0x7a4

000018c4 <fwrite@plt>:
    18c4:	add	ip, pc, #0, 12
    18c8:	add	ip, ip, #364544	; 0x59000
    18cc:	ldr	pc, [ip, #1948]!	; 0x79c

000018d0 <fread@plt>:
    18d0:	add	ip, pc, #0, 12
    18d4:	add	ip, ip, #364544	; 0x59000
    18d8:	ldr	pc, [ip, #1940]!	; 0x794

000018dc <puts@plt>:
    18dc:	add	ip, pc, #0, 12
    18e0:	add	ip, ip, #364544	; 0x59000
    18e4:	ldr	pc, [ip, #1932]!	; 0x78c

000018e8 <malloc@plt>:
    18e8:	add	ip, pc, #0, 12
    18ec:	add	ip, ip, #364544	; 0x59000
    18f0:	ldr	pc, [ip, #1924]!	; 0x784

000018f4 <deflateInit_@plt>:
    18f4:	add	ip, pc, #0, 12
    18f8:	add	ip, ip, #364544	; 0x59000
    18fc:	ldr	pc, [ip, #1916]!	; 0x77c

00001900 <mktemp@plt>:
    1900:	add	ip, pc, #0, 12
    1904:	add	ip, ip, #364544	; 0x59000
    1908:	ldr	pc, [ip, #1908]!	; 0x774

0000190c <__gmon_start__@plt>:
    190c:	add	ip, pc, #0, 12
    1910:	add	ip, ip, #364544	; 0x59000
    1914:	ldr	pc, [ip, #1900]!	; 0x76c

00001918 <exit@plt>:
    1918:	add	ip, pc, #0, 12
    191c:	add	ip, ip, #364544	; 0x59000
    1920:	ldr	pc, [ip, #1892]!	; 0x764

00001924 <feof@plt>:
    1924:	add	ip, pc, #0, 12
    1928:	add	ip, ip, #364544	; 0x59000
    192c:	ldr	pc, [ip, #1884]!	; 0x75c

00001930 <Mat_VarFree@plt>:
    1930:	add	ip, pc, #0, 12
    1934:	add	ip, ip, #364544	; 0x59000
    1938:	ldr	pc, [ip, #1876]!	; 0x754

0000193c <Mat_SizeOf@plt>:
    193c:	add	ip, pc, #0, 12
    1940:	add	ip, ip, #364544	; 0x59000
    1944:	ldr	pc, [ip, #1868]!	; 0x74c

00001948 <Mat_GetDir@plt>:
    1948:	add	ip, pc, #0, 12
    194c:	add	ip, ip, #364544	; 0x59000
    1950:	ldr	pc, [ip, #1860]!	; 0x744

00001954 <inflateEnd@plt>:
    1954:	add	ip, pc, #0, 12
    1958:	add	ip, ip, #364544	; 0x59000
    195c:	ldr	pc, [ip, #1852]!	; 0x73c

00001960 <inflateCopy@plt>:
    1960:	add	ip, pc, #0, 12
    1964:	add	ip, ip, #364544	; 0x59000
    1968:	ldr	pc, [ip, #1844]!	; 0x734

0000196c <strlen@plt>:
    196c:	add	ip, pc, #0, 12
    1970:	add	ip, ip, #364544	; 0x59000
    1974:	ldr	pc, [ip, #1836]!	; 0x72c

00001978 <fprintf@plt>:
    1978:	add	ip, pc, #0, 12
    197c:	add	ip, ip, #364544	; 0x59000
    1980:	ldr	pc, [ip, #1828]!	; 0x724

00001984 <Mat_VarPrint@plt>:
    1984:	add	ip, pc, #0, 12
    1988:	add	ip, ip, #364544	; 0x59000
    198c:	ldr	pc, [ip, #1820]!	; 0x71c

00001990 <snprintf@plt>:
    1990:	add	ip, pc, #0, 12
    1994:	add	ip, ip, #364544	; 0x59000
    1998:	ldr	pc, [ip, #1812]!	; 0x714

0000199c <Mat_Rewind@plt>:
    199c:	add	ip, pc, #0, 12
    19a0:	add	ip, ip, #364544	; 0x59000
    19a4:	ldr	pc, [ip, #1804]!	; 0x70c

000019a8 <memset@plt>:
    19a8:	add	ip, pc, #0, 12
    19ac:	add	ip, ip, #364544	; 0x59000
    19b0:	ldr	pc, [ip, #1796]!	; 0x704

000019b4 <putchar@plt>:
    19b4:	add	ip, pc, #0, 12
    19b8:	add	ip, ip, #364544	; 0x59000
    19bc:	ldr	pc, [ip, #1788]!	; 0x6fc

000019c0 <Mat_Close@plt>:
    19c0:	add	ip, pc, #0, 12
    19c4:	add	ip, ip, #364544	; 0x59000
    19c8:	ldr	pc, [ip, #1780]!	; 0x6f4

000019cc <Mat_Critical@plt>:
    19cc:	add	ip, pc, #0, 12
    19d0:	add	ip, ip, #364544	; 0x59000
    19d4:	ldr	pc, [ip, #1772]!	; 0x6ec

000019d8 <deflateEnd@plt>:
    19d8:	add	ip, pc, #0, 12
    19dc:	add	ip, ip, #364544	; 0x59000
    19e0:	ldr	pc, [ip, #1764]!	; 0x6e4

000019e4 <fclose@plt>:
    19e4:	add	ip, pc, #0, 12
    19e8:	add	ip, ip, #364544	; 0x59000
    19ec:	ldr	pc, [ip, #1756]!	; 0x6dc

000019f0 <inflateInit_@plt>:
    19f0:	add	ip, pc, #0, 12
    19f4:	add	ip, ip, #364544	; 0x59000
    19f8:	ldr	pc, [ip, #1748]!	; 0x6d4

000019fc <Mat_CreateVer@plt>:
    19fc:	add	ip, pc, #0, 12
    1a00:	add	ip, ip, #364544	; 0x59000
    1a04:	ldr	pc, [ip, #1740]!	; 0x6cc

00001a08 <fputc@plt>:
    1a08:	add	ip, pc, #0, 12
    1a0c:	add	ip, ip, #364544	; 0x59000
    1a10:	ldr	pc, [ip, #1732]!	; 0x6c4

00001a14 <remove@plt>:
    1a14:	add	ip, pc, #0, 12
    1a18:	add	ip, ip, #364544	; 0x59000
    1a1c:	ldr	pc, [ip, #1724]!	; 0x6bc

00001a20 <vsnprintf@plt>:
    1a20:	add	ip, pc, #0, 12
    1a24:	add	ip, ip, #364544	; 0x59000
    1a28:	ldr	pc, [ip, #1716]!	; 0x6b4

00001a2c <Mat_VarGetStructFieldByName@plt>:
    1a2c:	add	ip, pc, #0, 12
    1a30:	add	ip, ip, #364544	; 0x59000
    1a34:	ldr	pc, [ip, #1708]!	; 0x6ac

00001a38 <Mat_SizeOfClass@plt>:
    1a38:	add	ip, pc, #0, 12
    1a3c:	add	ip, ip, #364544	; 0x59000
    1a40:	ldr	pc, [ip, #1700]!	; 0x6a4

00001a44 <Mat_VarGetStructFieldByIndex@plt>:
    1a44:	add	ip, pc, #0, 12
    1a48:	add	ip, ip, #364544	; 0x59000
    1a4c:	ldr	pc, [ip, #1692]!	; 0x69c

00001a50 <fread_unlocked@plt>:
    1a50:	add	ip, pc, #0, 12
    1a54:	add	ip, ip, #364544	; 0x59000
    1a58:	ldr	pc, [ip, #1684]!	; 0x694

00001a5c <Mat_VarGetSize@plt>:
    1a5c:	add	ip, pc, #0, 12
    1a60:	add	ip, ip, #364544	; 0x59000
    1a64:	ldr	pc, [ip, #1676]!	; 0x68c

00001a68 <fseek@plt>:
    1a68:	add	ip, pc, #0, 12
    1a6c:	add	ip, ip, #364544	; 0x59000
    1a70:	ldr	pc, [ip, #1668]!	; 0x684

00001a74 <abort@plt>:
    1a74:	add	ip, pc, #0, 12
    1a78:	add	ip, ip, #364544	; 0x59000
    1a7c:	ldr	pc, [ip, #1660]!	; 0x67c

00001a80 <Mat_VarDuplicate@plt>:
    1a80:	add	ip, pc, #0, 12
    1a84:	add	ip, ip, #364544	; 0x59000
    1a88:	ldr	pc, [ip, #1652]!	; 0x674

00001a8c <Mat_VarReadNextInfo@plt>:
    1a8c:	add	ip, pc, #0, 12
    1a90:	add	ip, ip, #364544	; 0x59000
    1a94:	ldr	pc, [ip, #1644]!	; 0x66c

Disassembly of section .text:

00001a98 <call_weak_fn>:
    1a98:	ldr	r3, [pc, #20]	; 1ab4 <call_weak_fn+0x1c>
    1a9c:	ldr	r2, [pc, #20]	; 1ab8 <call_weak_fn+0x20>
    1aa0:	add	r3, pc, r3
    1aa4:	ldr	r2, [r3, r2]
    1aa8:	cmp	r2, #0
    1aac:	bxeq	lr
    1ab0:	b	190c <__gmon_start__@plt>
    1ab4:	.word	0x00059558
    1ab8:	.word	0x00000110

00001abc <deregister_tm_clones>:
    1abc:	ldr	r0, [pc, #44]	; 1af0 <deregister_tm_clones+0x34>
    1ac0:	ldr	r3, [pc, #44]	; 1af4 <deregister_tm_clones+0x38>
    1ac4:	add	r0, pc, r0
    1ac8:	add	r3, pc, r3
    1acc:	cmp	r3, r0
    1ad0:	ldr	r3, [pc, #32]	; 1af8 <deregister_tm_clones+0x3c>
    1ad4:	add	r3, pc, r3
    1ad8:	bxeq	lr
    1adc:	ldr	r2, [pc, #24]	; 1afc <deregister_tm_clones+0x40>
    1ae0:	ldr	r3, [r3, r2]
    1ae4:	cmp	r3, #0
    1ae8:	bxeq	lr
    1aec:	bx	r3
    1af0:	.word	0x00059654
    1af4:	.word	0x00059650
    1af8:	.word	0x00059524
    1afc:	.word	0x00000108

00001b00 <register_tm_clones>:
    1b00:	ldr	r0, [pc, #56]	; 1b40 <register_tm_clones+0x40>
    1b04:	ldr	r3, [pc, #56]	; 1b44 <register_tm_clones+0x44>
    1b08:	add	r0, pc, r0
    1b0c:	add	r3, pc, r3
    1b10:	sub	r1, r3, r0
    1b14:	ldr	r3, [pc, #44]	; 1b48 <register_tm_clones+0x48>
    1b18:	asr	r1, r1, #2
    1b1c:	add	r3, pc, r3
    1b20:	add	r1, r1, r1, lsr #31
    1b24:	asrs	r1, r1, #1
    1b28:	bxeq	lr
    1b2c:	ldr	r2, [pc, #24]	; 1b4c <register_tm_clones+0x4c>
    1b30:	ldr	r3, [r3, r2]
    1b34:	cmp	r3, #0
    1b38:	bxeq	lr
    1b3c:	bx	r3
    1b40:	.word	0x00059610
    1b44:	.word	0x0005960c
    1b48:	.word	0x000594dc
    1b4c:	.word	0x00000118

00001b50 <__do_global_dtors_aux>:
    1b50:	ldr	r3, [pc, #76]	; 1ba4 <__do_global_dtors_aux+0x54>
    1b54:	ldr	r2, [pc, #76]	; 1ba8 <__do_global_dtors_aux+0x58>
    1b58:	add	r3, pc, r3
    1b5c:	add	r2, pc, r2
    1b60:	ldrb	r3, [r3]
    1b64:	cmp	r3, #0
    1b68:	bxne	lr
    1b6c:	ldr	r3, [pc, #56]	; 1bac <__do_global_dtors_aux+0x5c>
    1b70:	push	{r4, lr}
    1b74:	ldr	r3, [r2, r3]
    1b78:	cmp	r3, #0
    1b7c:	beq	1b8c <__do_global_dtors_aux+0x3c>
    1b80:	ldr	r3, [pc, #40]	; 1bb0 <__do_global_dtors_aux+0x60>
    1b84:	ldr	r0, [pc, r3]
    1b88:	bl	17d4 <__cxa_finalize@plt>
    1b8c:	bl	1abc <deregister_tm_clones>
    1b90:	ldr	r3, [pc, #28]	; 1bb4 <__do_global_dtors_aux+0x64>
    1b94:	mov	r2, #1
    1b98:	add	r3, pc, r3
    1b9c:	strb	r2, [r3]
    1ba0:	pop	{r4, pc}
    1ba4:	.word	0x000595c0
    1ba8:	.word	0x0005949c
    1bac:	.word	0x00000104
    1bb0:	.word	0x00059590
    1bb4:	.word	0x00059580

00001bb8 <frame_dummy>:
    1bb8:	b	1b00 <register_tm_clones>

00001bbc <Mat_int64Swap>:
    1bbc:	push	{r4, r5, fp, lr}
    1bc0:	add	fp, sp, #8
    1bc4:	ldrd	r2, [r0]
    1bc8:	mov	ip, #65280	; 0xff00
    1bcc:	lsr	r1, r3, #24
    1bd0:	and	lr, ip, r3, lsr #8
    1bd4:	orr	r1, r1, r3, lsl #24
    1bd8:	and	r3, r3, #65280	; 0xff00
    1bdc:	orr	r1, r1, r3, lsl #8
    1be0:	lsl	r3, r2, #8
    1be4:	uxtb16	r3, r3
    1be8:	orr	r4, r1, lr
    1bec:	and	r1, ip, r2, lsr #8
    1bf0:	orr	r3, r3, r2, lsl #24
    1bf4:	orr	r1, r3, r1
    1bf8:	orr	r5, r1, r2, lsr #24
    1bfc:	strd	r4, [r0]
    1c00:	mov	r0, r4
    1c04:	mov	r1, r5
    1c08:	pop	{r4, r5, fp, pc}

00001c0c <Mat_uint64Swap>:
    1c0c:	ldrd	r2, [r0]
    1c10:	rev	r1, r2
    1c14:	rev	r2, r3
    1c18:	str	r2, [r0]
    1c1c:	str	r1, [r0, #4]
    1c20:	mov	r0, r2
    1c24:	bx	lr

00001c28 <Mat_int32Swap>:
    1c28:	ldr	r1, [r0]
    1c2c:	rev	r1, r1
    1c30:	str	r1, [r0]
    1c34:	mov	r0, r1
    1c38:	bx	lr

00001c3c <Mat_uint32Swap>:
    1c3c:	ldr	r1, [r0]
    1c40:	rev	r1, r1
    1c44:	str	r1, [r0]
    1c48:	mov	r0, r1
    1c4c:	bx	lr

00001c50 <Mat_int16Swap>:
    1c50:	ldrh	r1, [r0]
    1c54:	rev16	r2, r1
    1c58:	strh	r2, [r0]
    1c5c:	revsh	r0, r1
    1c60:	bx	lr

00001c64 <Mat_uint16Swap>:
    1c64:	ldrh	r1, [r0]
    1c68:	rev16	r2, r1
    1c6c:	strh	r2, [r0]
    1c70:	rev	r0, r1
    1c74:	lsr	r0, r0, #16
    1c78:	bx	lr

00001c7c <Mat_floatSwap>:
    1c7c:	ldr	r1, [r0]
    1c80:	uxtb	r2, r1
    1c84:	and	r3, r1, #-16777216	; 0xff000000
    1c88:	eor	r2, r2, r1, lsr #24
    1c8c:	eor	r3, r3, r2, lsl #24
    1c90:	eor	ip, r2, r3, lsr #24
    1c94:	and	r2, r1, #16711680	; 0xff0000
    1c98:	eor	r1, r1, r1, lsr #8
    1c9c:	and	r1, r1, #65280	; 0xff00
    1ca0:	eor	r2, r2, r1, lsl #8
    1ca4:	orr	r3, r2, r3
    1ca8:	eor	r1, r1, r2, lsr #8
    1cac:	orr	r3, r3, ip
    1cb0:	orr	r1, r3, r1
    1cb4:	vmov	s0, r1
    1cb8:	str	r1, [r0]
    1cbc:	bx	lr

00001cc0 <Mat_doubleSwap>:
    1cc0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    1cc4:	add	fp, sp, #24
    1cc8:	ldr	r4, [r0]
    1ccc:	ldr	r3, [r0, #4]
    1cd0:	uxtb	r1, r4
    1cd4:	lsr	r5, r4, #24
    1cd8:	mov	r2, r4
    1cdc:	eor	r6, r3, r3, lsr #24
    1ce0:	eor	ip, r1, r3, lsr #24
    1ce4:	and	r1, r3, #-16777216	; 0xff000000
    1ce8:	orr	r5, r5, r3, lsl #8
    1cec:	bfc	r2, #0, #16
    1cf0:	lsl	r6, r6, #24
    1cf4:	eor	lr, r1, ip, lsl #24
    1cf8:	eor	r1, r4, r3, lsr #8
    1cfc:	eor	r5, r5, r4
    1d00:	eor	ip, ip, lr, lsr #24
    1d04:	orr	r6, r6, r5, lsr #8
    1d08:	and	r1, r1, #65280	; 0xff00
    1d0c:	orr	r2, r2, ip
    1d10:	eor	r6, r6, r3
    1d14:	orr	r1, r2, r1
    1d18:	and	r7, r6, #65280	; 0xff00
    1d1c:	eor	r2, r3, r1, lsl #8
    1d20:	orr	r7, r7, lr
    1d24:	eor	r1, r1, r2, lsr #8
    1d28:	and	r2, r2, #16711680	; 0xff0000
    1d2c:	orr	r2, r7, r2
    1d30:	lsr	r7, r4, #8
    1d34:	and	r1, r1, #65280	; 0xff00
    1d38:	orr	r7, r7, r3, lsl #24
    1d3c:	orr	r1, ip, r1
    1d40:	eor	r7, r7, r4
    1d44:	eor	r4, r3, r3, lsr #8
    1d48:	lsl	r4, r4, #8
    1d4c:	orr	r4, r4, r7, lsr #24
    1d50:	eor	r3, r4, r3
    1d54:	uxtb	r4, r3
    1d58:	orr	r9, r4, r2
    1d5c:	eor	r2, r7, r3, lsl #24
    1d60:	and	r2, r2, #-16777216	; 0xff000000
    1d64:	orr	r1, r2, r1
    1d68:	eor	r2, r5, r6, lsl #8
    1d6c:	and	r2, r2, #16711680	; 0xff0000
    1d70:	orr	r8, r1, r2
    1d74:	vmov	d0, r8, r9
    1d78:	strd	r8, [r0]
    1d7c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00001d80 <strdup_vprintf>:
    1d80:	push	{r4, r5, r6, sl, fp, lr}
    1d84:	add	fp, sp, #16
    1d88:	sub	sp, sp, #8
    1d8c:	str	r1, [sp, #4]
    1d90:	mov	r4, r0
    1d94:	mov	r0, #0
    1d98:	mov	r1, #0
    1d9c:	ldr	r3, [sp, #4]
    1da0:	mov	r2, r4
    1da4:	str	r3, [sp]
    1da8:	bl	1a20 <vsnprintf@plt>
    1dac:	mov	r6, r0
    1db0:	add	r0, r0, #2
    1db4:	bl	18e8 <malloc@plt>
    1db8:	mov	r5, r0
    1dbc:	cmp	r0, #0
    1dc0:	beq	1dd8 <strdup_vprintf+0x58>
    1dc4:	ldr	r3, [sp, #4]
    1dc8:	add	r1, r6, #1
    1dcc:	mov	r0, r5
    1dd0:	mov	r2, r4
    1dd4:	bl	1a20 <vsnprintf@plt>
    1dd8:	mov	r0, r5
    1ddc:	sub	sp, fp, #16
    1de0:	pop	{r4, r5, r6, sl, fp, pc}

00001de4 <strdup_printf>:
    1de4:	sub	sp, sp, #12
    1de8:	push	{fp, lr}
    1dec:	mov	fp, sp
    1df0:	sub	sp, sp, #4
    1df4:	add	ip, fp, #8
    1df8:	stm	ip, {r1, r2, r3}
    1dfc:	add	r1, fp, #8
    1e00:	str	r1, [sp]
    1e04:	bl	1d80 <strdup_vprintf>
    1e08:	mov	sp, fp
    1e0c:	pop	{fp, lr}
    1e10:	add	sp, sp, #12
    1e14:	bx	lr

00001e18 <Mat_SetVerbose>:
    1e18:	ldr	r2, [pc, #24]	; 1e38 <Mat_SetVerbose+0x20>
    1e1c:	add	r2, pc, r2
    1e20:	str	r1, [r2]
    1e24:	ldr	r1, [pc, #16]	; 1e3c <Mat_SetVerbose+0x24>
    1e28:	add	r1, pc, r1
    1e2c:	str	r0, [r1]
    1e30:	mov	r0, #0
    1e34:	bx	lr
    1e38:	.word	0x00059304
    1e3c:	.word	0x000592f4

00001e40 <Mat_SetDebug>:
    1e40:	ldr	r1, [pc, #12]	; 1e54 <Mat_SetDebug+0x14>
    1e44:	add	r1, pc, r1
    1e48:	str	r0, [r1]
    1e4c:	mov	r0, #0
    1e50:	bx	lr
    1e54:	.word	0x000592e0

00001e58 <Mat_Message>:
    1e58:	sub	sp, sp, #12
    1e5c:	push	{fp, lr}
    1e60:	mov	fp, sp
    1e64:	sub	sp, sp, #4
    1e68:	mov	ip, r0
    1e6c:	add	r0, fp, #8
    1e70:	stm	r0, {r1, r2, r3}
    1e74:	ldr	r0, [pc, #64]	; 1ebc <Mat_Message+0x64>
    1e78:	ldr	r0, [pc, r0]
    1e7c:	cmp	r0, #0
    1e80:	bne	1ea8 <Mat_Message+0x50>
    1e84:	ldr	r0, [pc, #52]	; 1ec0 <Mat_Message+0x68>
    1e88:	ldr	r0, [pc, r0]
    1e8c:	cmp	r0, #0
    1e90:	beq	1ea8 <Mat_Message+0x50>
    1e94:	add	r2, fp, #8
    1e98:	mov	r0, #8
    1e9c:	mov	r1, ip
    1ea0:	str	r2, [sp]
    1ea4:	bl	1ec4 <mat_log>
    1ea8:	mov	r0, #0
    1eac:	mov	sp, fp
    1eb0:	pop	{fp, lr}
    1eb4:	add	sp, sp, #12
    1eb8:	bx	lr
    1ebc:	.word	0x000592a8
    1ec0:	.word	0x000592a0

00001ec4 <mat_log>:
    1ec4:	push	{r4, r5, fp, lr}
    1ec8:	add	fp, sp, #8
    1ecc:	mov	r4, r0
    1ed0:	ldr	r0, [pc, #56]	; 1f10 <mat_log+0x4c>
    1ed4:	ldr	r0, [pc, r0]
    1ed8:	cmp	r0, #0
    1edc:	popeq	{r4, r5, fp, pc}
    1ee0:	mov	r0, r1
    1ee4:	mov	r1, r2
    1ee8:	bl	1d80 <strdup_vprintf>
    1eec:	ldr	r2, [pc, #32]	; 1f14 <mat_log+0x50>
    1ef0:	mov	r5, r0
    1ef4:	mov	r0, r4
    1ef8:	mov	r1, r5
    1efc:	ldr	r2, [pc, r2]
    1f00:	blx	r2
    1f04:	mov	r0, r5
    1f08:	pop	{r4, r5, fp, lr}
    1f0c:	b	181c <free@plt>
    1f10:	.word	0x00059254
    1f14:	.word	0x0005922c

00001f18 <Mat_DebugMessage>:
    1f18:	sub	sp, sp, #8
    1f1c:	push	{fp, lr}
    1f20:	mov	fp, sp
    1f24:	sub	sp, sp, #8
    1f28:	str	r3, [fp, #12]
    1f2c:	str	r2, [fp, #8]
    1f30:	ldr	r2, [pc, #60]	; 1f74 <Mat_DebugMessage+0x5c>
    1f34:	ldr	r2, [pc, r2]
    1f38:	cmp	r2, #0
    1f3c:	bne	1f60 <Mat_DebugMessage+0x48>
    1f40:	ldr	r2, [pc, #48]	; 1f78 <Mat_DebugMessage+0x60>
    1f44:	ldr	r2, [pc, r2]
    1f48:	cmp	r2, r0
    1f4c:	blt	1f60 <Mat_DebugMessage+0x48>
    1f50:	add	r2, fp, #8
    1f54:	mov	r0, #16
    1f58:	str	r2, [sp, #4]
    1f5c:	bl	1ec4 <mat_log>
    1f60:	mov	r0, #0
    1f64:	mov	sp, fp
    1f68:	pop	{fp, lr}
    1f6c:	add	sp, sp, #8
    1f70:	bx	lr
    1f74:	.word	0x000591ec
    1f78:	.word	0x000591e0

00001f7c <Mat_VerbMessage>:
    1f7c:	sub	sp, sp, #8
    1f80:	push	{fp, lr}
    1f84:	mov	fp, sp
    1f88:	sub	sp, sp, #8
    1f8c:	str	r3, [fp, #12]
    1f90:	str	r2, [fp, #8]
    1f94:	ldr	r2, [pc, #60]	; 1fd8 <Mat_VerbMessage+0x5c>
    1f98:	ldr	r2, [pc, r2]
    1f9c:	cmp	r2, #0
    1fa0:	bne	1fc4 <Mat_VerbMessage+0x48>
    1fa4:	ldr	r2, [pc, #48]	; 1fdc <Mat_VerbMessage+0x60>
    1fa8:	ldr	r2, [pc, r2]
    1fac:	cmp	r2, r0
    1fb0:	blt	1fc4 <Mat_VerbMessage+0x48>
    1fb4:	add	r2, fp, #8
    1fb8:	mov	r0, #8
    1fbc:	str	r2, [sp, #4]
    1fc0:	bl	1ec4 <mat_log>
    1fc4:	mov	r0, #0
    1fc8:	mov	sp, fp
    1fcc:	pop	{fp, lr}
    1fd0:	add	sp, sp, #8
    1fd4:	bx	lr
    1fd8:	.word	0x00059188
    1fdc:	.word	0x00059174

00001fe0 <Mat_Critical>:
    1fe0:	sub	sp, sp, #12
    1fe4:	push	{fp, lr}
    1fe8:	mov	fp, sp
    1fec:	sub	sp, sp, #4
    1ff0:	mov	ip, r0
    1ff4:	add	r0, fp, #8
    1ff8:	stm	r0, {r1, r2, r3}
    1ffc:	add	r2, fp, #8
    2000:	mov	r0, #2
    2004:	mov	r1, ip
    2008:	str	r2, [sp]
    200c:	bl	1ec4 <mat_log>
    2010:	mov	sp, fp
    2014:	pop	{fp, lr}
    2018:	add	sp, sp, #12
    201c:	bx	lr

00002020 <Mat_Error>:
    2020:	sub	sp, sp, #12
    2024:	push	{fp, lr}
    2028:	mov	fp, sp
    202c:	sub	sp, sp, #4
    2030:	mov	ip, r0
    2034:	add	r0, fp, #8
    2038:	stm	r0, {r1, r2, r3}
    203c:	add	r2, fp, #8
    2040:	mov	r0, #1
    2044:	mov	r1, ip
    2048:	str	r2, [sp]
    204c:	bl	1ec4 <mat_log>
    2050:	bl	1a74 <abort@plt>

00002054 <Mat_Help>:
    2054:	push	{fp, lr}
    2058:	mov	fp, sp
    205c:	mov	r1, r0
    2060:	ldr	r0, [r0]
    2064:	cmp	r0, #0
    2068:	beq	2080 <Mat_Help+0x2c>
    206c:	add	r4, r1, #4
    2070:	bl	18dc <puts@plt>
    2074:	ldr	r0, [r4], #4
    2078:	cmp	r0, #0
    207c:	bne	2070 <Mat_Help+0x1c>
    2080:	mov	r0, #0
    2084:	bl	1918 <exit@plt>

00002088 <Mat_LogClose>:
    2088:	ldr	r0, [pc, #16]	; 20a0 <Mat_LogClose+0x18>
    208c:	mov	r1, #0
    2090:	add	r0, pc, r0
    2094:	str	r1, [r0]
    2098:	mov	r0, #1
    209c:	bx	lr
    20a0:	.word	0x00059098

000020a4 <Mat_LogInit>:
    20a4:	ldr	r0, [pc, #48]	; 20dc <Mat_LogInit+0x38>
    20a8:	mov	r1, #0
    20ac:	add	r0, pc, r0
    20b0:	str	r1, [r0]
    20b4:	ldr	r0, [pc, #36]	; 20e0 <Mat_LogInit+0x3c>
    20b8:	ldr	r2, [pc, #36]	; 20e4 <Mat_LogInit+0x40>
    20bc:	add	r0, pc, r0
    20c0:	add	r2, pc, r2
    20c4:	str	r2, [r0]
    20c8:	ldr	r0, [pc, #24]	; 20e8 <Mat_LogInit+0x44>
    20cc:	add	r0, pc, r0
    20d0:	str	r1, [r0]
    20d4:	mov	r0, #0
    20d8:	bx	lr
    20dc:	.word	0x00059070
    20e0:	.word	0x0005906c
    20e4:	.word	0x00000024
    20e8:	.word	0x00059054

000020ec <mat_logfunc>:
    20ec:	push	{r4, sl, fp, lr}
    20f0:	add	fp, sp, #8
    20f4:	ldr	r2, [pc, #344]	; 2254 <mat_logfunc+0x168>
    20f8:	mov	r3, r1
    20fc:	and	r1, r0, #2
    2100:	ldr	r2, [pc, r2]
    2104:	cmp	r2, #0
    2108:	beq	212c <mat_logfunc+0x40>
    210c:	cmp	r1, #0
    2110:	beq	214c <mat_logfunc+0x60>
    2114:	ldr	r4, [pc, #316]	; 2258 <mat_logfunc+0x16c>
    2118:	ldr	r4, [pc, r4]
    211c:	ldr	r0, [r4]
    2120:	ldr	r1, [pc, #308]	; 225c <mat_logfunc+0x170>
    2124:	add	r1, pc, r1
    2128:	b	21c8 <mat_logfunc+0xdc>
    212c:	cmp	r1, #0
    2130:	beq	217c <mat_logfunc+0x90>
    2134:	ldr	r4, [pc, #324]	; 2280 <mat_logfunc+0x194>
    2138:	ldr	r4, [pc, r4]
    213c:	ldr	r0, [r4]
    2140:	ldr	r1, [pc, #316]	; 2284 <mat_logfunc+0x198>
    2144:	add	r1, pc, r1
    2148:	b	21fc <mat_logfunc+0x110>
    214c:	tst	r0, #1
    2150:	bne	2210 <mat_logfunc+0x124>
    2154:	tst	r0, #4
    2158:	bne	21b4 <mat_logfunc+0xc8>
    215c:	tst	r0, #16
    2160:	beq	2194 <mat_logfunc+0xa8>
    2164:	ldr	r4, [pc, #260]	; 2270 <mat_logfunc+0x184>
    2168:	ldr	r4, [pc, r4]
    216c:	ldr	r0, [r4]
    2170:	ldr	r1, [pc, #252]	; 2274 <mat_logfunc+0x188>
    2174:	add	r1, pc, r1
    2178:	b	21c8 <mat_logfunc+0xdc>
    217c:	tst	r0, #1
    2180:	bne	222c <mat_logfunc+0x140>
    2184:	tst	r0, #4
    2188:	bne	21d0 <mat_logfunc+0xe4>
    218c:	tst	r0, #16
    2190:	bne	21e8 <mat_logfunc+0xfc>
    2194:	tst	r0, #8
    2198:	popeq	{r4, sl, fp, pc}
    219c:	ldr	r4, [pc, #212]	; 2278 <mat_logfunc+0x18c>
    21a0:	ldr	r4, [pc, r4]
    21a4:	ldr	r0, [r4]
    21a8:	ldr	r1, [pc, #204]	; 227c <mat_logfunc+0x190>
    21ac:	add	r1, pc, r1
    21b0:	b	21fc <mat_logfunc+0x110>
    21b4:	ldr	r4, [pc, #172]	; 2268 <mat_logfunc+0x17c>
    21b8:	ldr	r4, [pc, r4]
    21bc:	ldr	r0, [r4]
    21c0:	ldr	r1, [pc, #164]	; 226c <mat_logfunc+0x180>
    21c4:	add	r1, pc, r1
    21c8:	bl	1978 <fprintf@plt>
    21cc:	b	2204 <mat_logfunc+0x118>
    21d0:	ldr	r4, [pc, #184]	; 2290 <mat_logfunc+0x1a4>
    21d4:	ldr	r4, [pc, r4]
    21d8:	ldr	r0, [r4]
    21dc:	ldr	r1, [pc, #176]	; 2294 <mat_logfunc+0x1a8>
    21e0:	add	r1, pc, r1
    21e4:	b	21fc <mat_logfunc+0x110>
    21e8:	ldr	r4, [pc, #168]	; 2298 <mat_logfunc+0x1ac>
    21ec:	ldr	r4, [pc, r4]
    21f0:	ldr	r0, [r4]
    21f4:	ldr	r1, [pc, #160]	; 229c <mat_logfunc+0x1b0>
    21f8:	add	r1, pc, r1
    21fc:	mov	r2, r3
    2200:	bl	1978 <fprintf@plt>
    2204:	ldr	r0, [r4]
    2208:	pop	{r4, sl, fp, lr}
    220c:	b	1810 <fflush@plt>
    2210:	ldr	r4, [pc, #72]	; 2260 <mat_logfunc+0x174>
    2214:	ldr	r4, [pc, r4]
    2218:	ldr	r0, [r4]
    221c:	ldr	r1, [pc, #64]	; 2264 <mat_logfunc+0x178>
    2220:	add	r1, pc, r1
    2224:	bl	1978 <fprintf@plt>
    2228:	b	2248 <mat_logfunc+0x15c>
    222c:	ldr	r4, [pc, #84]	; 2288 <mat_logfunc+0x19c>
    2230:	mov	r2, r3
    2234:	ldr	r4, [pc, r4]
    2238:	ldr	r0, [r4]
    223c:	ldr	r1, [pc, #72]	; 228c <mat_logfunc+0x1a0>
    2240:	add	r1, pc, r1
    2244:	bl	1978 <fprintf@plt>
    2248:	ldr	r0, [r4]
    224c:	bl	1810 <fflush@plt>
    2250:	bl	1a74 <abort@plt>
    2254:	.word	0x0005902c
    2258:	.word	0x00058fec
    225c:	.word	0x000477e4
    2260:	.word	0x00058ef0
    2264:	.word	0x000476e8
    2268:	.word	0x00058f4c
    226c:	.word	0x00047750
    2270:	.word	0x00058f9c
    2274:	.word	0x000477ac
    2278:	.word	0x00058f6c
    227c:	.word	0x0004779a
    2280:	.word	0x00058fcc
    2284:	.word	0x000477e8
    2288:	.word	0x00058ed0
    228c:	.word	0x000476ec
    2290:	.word	0x00058f30
    2294:	.word	0x00047756
    2298:	.word	0x00058f18
    229c:	.word	0x00047748

000022a0 <Mat_LogInitFunc>:
    22a0:	ldr	r2, [pc, #52]	; 22dc <Mat_LogInitFunc+0x3c>
    22a4:	add	r2, pc, r2
    22a8:	str	r0, [r2]
    22ac:	ldr	r0, [pc, #44]	; 22e0 <Mat_LogInitFunc+0x40>
    22b0:	add	r0, pc, r0
    22b4:	str	r1, [r0]
    22b8:	mov	r1, #0
    22bc:	ldr	r0, [pc, #32]	; 22e4 <Mat_LogInitFunc+0x44>
    22c0:	add	r0, pc, r0
    22c4:	str	r1, [r0]
    22c8:	ldr	r0, [pc, #24]	; 22e8 <Mat_LogInitFunc+0x48>
    22cc:	add	r0, pc, r0
    22d0:	str	r1, [r0]
    22d4:	mov	r0, #0
    22d8:	bx	lr
    22dc:	.word	0x00058e88
    22e0:	.word	0x00058e78
    22e4:	.word	0x00058e5c
    22e8:	.word	0x00058e54

000022ec <Mat_Warning>:
    22ec:	sub	sp, sp, #12
    22f0:	push	{fp, lr}
    22f4:	mov	fp, sp
    22f8:	sub	sp, sp, #4
    22fc:	mov	ip, r0
    2300:	add	r0, fp, #8
    2304:	stm	r0, {r1, r2, r3}
    2308:	add	r2, fp, #8
    230c:	mov	r0, #4
    2310:	mov	r1, ip
    2314:	str	r2, [sp]
    2318:	bl	1ec4 <mat_log>
    231c:	mov	sp, fp
    2320:	pop	{fp, lr}
    2324:	add	sp, sp, #12
    2328:	bx	lr

0000232c <Mat_SizeOf>:
    232c:	sub	r0, r0, #1
    2330:	cmp	r0, #17
    2334:	ldrls	r1, [pc, #12]	; 2348 <Mat_SizeOf+0x1c>
    2338:	movhi	r0, #0
    233c:	addls	r1, pc, r1
    2340:	ldrls	r0, [r1, r0, lsl #2]
    2344:	bx	lr
    2348:	.word	0x0004761c

0000234c <InflateSkip>:
    234c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2350:	add	fp, sp, #28
    2354:	sub	sp, sp, #4
    2358:	sub	sp, sp, #1024	; 0x400
    235c:	cmp	r2, #1
    2360:	blt	23f8 <InflateSkip+0xac>
    2364:	mov	r8, r0
    2368:	ldr	r0, [r1, #4]
    236c:	cmp	r2, #512	; 0x200
    2370:	mov	r6, r2
    2374:	mov	r4, r2
    2378:	mov	r5, r1
    237c:	mov	r9, #0
    2380:	movge	r6, #512	; 0x200
    2384:	cmp	r0, #0
    2388:	bne	23b0 <InflateSkip+0x64>
    238c:	add	r0, sp, #512	; 0x200
    2390:	mov	r1, #1
    2394:	mov	r2, r6
    2398:	str	r0, [r5]
    239c:	ldr	r3, [r8]
    23a0:	bl	18d0 <fread@plt>
    23a4:	ldr	r1, [r5, #4]
    23a8:	add	r9, r1, r0
    23ac:	str	r9, [r5, #4]
    23b0:	mov	sl, sp
    23b4:	mov	r0, r5
    23b8:	mov	r1, #3
    23bc:	str	sl, [r5, #12]
    23c0:	str	r6, [r5, #16]
    23c4:	bl	1804 <inflate@plt>
    23c8:	cmp	r0, #0
    23cc:	beq	2400 <InflateSkip+0xb4>
    23d0:	cmp	r0, #1
    23d4:	beq	24e0 <InflateSkip+0x194>
    23d8:	cmp	r0, #2
    23dc:	mvneq	r0, #2
    23e0:	bl	18a0 <zError@plt>
    23e4:	mov	r1, r0
    23e8:	ldr	r0, [pc, #252]	; 24ec <InflateSkip+0x1a0>
    23ec:	add	r0, pc, r0
    23f0:	bl	19cc <Mat_Critical@plt>
    23f4:	b	24e0 <InflateSkip+0x194>
    23f8:	mov	r9, #0
    23fc:	b	24e0 <InflateSkip+0x194>
    2400:	ldr	r0, [r5, #16]
    2404:	cmp	r0, #0
    2408:	beq	2418 <InflateSkip+0xcc>
    240c:	mov	r7, r6
    2410:	mov	r6, #0
    2414:	b	242c <InflateSkip+0xe0>
    2418:	sub	r7, r4, r6
    241c:	str	sl, [r5, #12]
    2420:	cmp	r7, #512	; 0x200
    2424:	movge	r7, #512	; 0x200
    2428:	str	r7, [r5, #16]
    242c:	cmp	r6, r4
    2430:	bge	24b4 <InflateSkip+0x168>
    2434:	ldr	r0, [r5, #4]
    2438:	cmp	r0, #0
    243c:	bne	2468 <InflateSkip+0x11c>
    2440:	add	r0, sp, #512	; 0x200
    2444:	mov	r1, #1
    2448:	mov	r2, r7
    244c:	str	r0, [r5]
    2450:	ldr	r3, [r8]
    2454:	bl	18d0 <fread@plt>
    2458:	ldr	r1, [r5, #4]
    245c:	add	r0, r1, r0
    2460:	add	r9, r0, r9
    2464:	str	r0, [r5, #4]
    2468:	mov	r0, r5
    246c:	mov	r1, #3
    2470:	bl	1804 <inflate@plt>
    2474:	cmp	r0, #0
    2478:	bne	2490 <InflateSkip+0x144>
    247c:	ldr	r0, [r5, #16]
    2480:	cmp	r0, #0
    2484:	bne	242c <InflateSkip+0xe0>
    2488:	add	r6, r6, r7
    248c:	b	2418 <InflateSkip+0xcc>
    2490:	cmp	r0, #1
    2494:	beq	24b4 <InflateSkip+0x168>
    2498:	cmp	r0, #2
    249c:	mvneq	r0, #2
    24a0:	bl	18a0 <zError@plt>
    24a4:	mov	r1, r0
    24a8:	ldr	r0, [pc, #64]	; 24f0 <InflateSkip+0x1a4>
    24ac:	add	r0, pc, r0
    24b0:	bl	19cc <Mat_Critical@plt>
    24b4:	ldr	r1, [r5, #4]
    24b8:	cmp	r1, #0
    24bc:	beq	24e0 <InflateSkip+0x194>
    24c0:	ldr	r0, [r8]
    24c4:	rsb	r1, r1, #0
    24c8:	mov	r2, #1
    24cc:	bl	1a68 <fseek@plt>
    24d0:	ldr	r0, [r5, #4]
    24d4:	mov	r1, #0
    24d8:	str	r1, [r5, #4]
    24dc:	sub	r9, r9, r0
    24e0:	mov	r0, r9
    24e4:	sub	sp, fp, #28
    24e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    24ec:	.word	0x000475b4
    24f0:	.word	0x000474f4

000024f4 <InflateSkip2>:
    24f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    24f8:	add	fp, sp, #28
    24fc:	sub	sp, sp, #68	; 0x44
    2500:	mov	r8, r0
    2504:	ldr	r0, [r1, #52]	; 0x34
    2508:	mov	r5, r1
    250c:	mov	r7, r2
    2510:	mov	r9, #0
    2514:	ldr	r0, [r0, #12]
    2518:	ldr	r1, [r0, #4]
    251c:	cmp	r1, #0
    2520:	bne	2550 <InflateSkip2+0x5c>
    2524:	add	r1, sp, #36	; 0x24
    2528:	mov	r2, #1
    252c:	stm	r0, {r1, r2}
    2530:	mov	r0, r1
    2534:	mov	r1, #1
    2538:	mov	r2, #1
    253c:	ldr	r3, [r8]
    2540:	bl	18d0 <fread@plt>
    2544:	mov	r9, r0
    2548:	ldr	r0, [r5, #52]	; 0x34
    254c:	ldr	r0, [r0, #12]
    2550:	add	r4, sp, #4
    2554:	mov	r1, #1
    2558:	str	r4, [r0, #12]
    255c:	str	r1, [r0, #16]
    2560:	mov	r1, #0
    2564:	bl	1804 <inflate@plt>
    2568:	cmp	r0, #0
    256c:	beq	25a0 <InflateSkip2+0xac>
    2570:	ldr	r5, [r5, #36]	; 0x24
    2574:	cmp	r0, #2
    2578:	mvneq	r0, #2
    257c:	bl	18a0 <zError@plt>
    2580:	mov	r2, r0
    2584:	ldr	r0, [pc, #272]	; 269c <InflateSkip2+0x1a8>
    2588:	mov	r1, r5
    258c:	add	r0, pc, r0
    2590:	bl	19cc <Mat_Critical@plt>
    2594:	mov	r0, r9
    2598:	sub	sp, fp, #28
    259c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    25a0:	ldr	r0, [r5, #52]	; 0x34
    25a4:	ldr	r1, [r0, #12]
    25a8:	ldr	r2, [r1, #16]
    25ac:	mov	r3, r1
    25b0:	cmp	r2, #0
    25b4:	moveq	r2, #1
    25b8:	streq	r4, [r1, #12]
    25bc:	streq	r2, [r1, #16]
    25c0:	ldr	r4, [r3, #4]!
    25c4:	cmp	r4, #0
    25c8:	mov	r2, r4
    25cc:	movwne	r2, #1
    25d0:	cmp	r7, #1
    25d4:	blt	2668 <InflateSkip2+0x174>
    25d8:	mov	r6, #0
    25dc:	add	sl, sp, #36	; 0x24
    25e0:	tst	r2, #1
    25e4:	bne	2614 <InflateSkip2+0x120>
    25e8:	mov	r0, #1
    25ec:	mov	r2, #1
    25f0:	str	r0, [r3]
    25f4:	str	sl, [r1]
    25f8:	mov	r0, sl
    25fc:	mov	r1, #1
    2600:	ldr	r3, [r8]
    2604:	bl	18d0 <fread@plt>
    2608:	add	r9, r0, r9
    260c:	ldr	r0, [r5, #52]	; 0x34
    2610:	add	r6, r6, #1
    2614:	ldr	r0, [r0, #12]
    2618:	mov	r1, #0
    261c:	bl	1804 <inflate@plt>
    2620:	cmp	r0, #0
    2624:	bne	2570 <InflateSkip2+0x7c>
    2628:	ldr	r0, [r5, #52]	; 0x34
    262c:	ldr	r1, [r0, #12]
    2630:	ldr	r2, [r1, #16]
    2634:	cmp	r2, #0
    2638:	bne	264c <InflateSkip2+0x158>
    263c:	add	r2, sp, #4
    2640:	str	r2, [r1, #12]
    2644:	mov	r2, #1
    2648:	str	r2, [r1, #16]
    264c:	mov	r3, r1
    2650:	ldr	r4, [r3, #4]!
    2654:	cmp	r4, #0
    2658:	mov	r2, r4
    265c:	movwne	r2, #1
    2660:	cmp	r6, r7
    2664:	blt	25e0 <InflateSkip2+0xec>
    2668:	cmp	r2, #0
    266c:	beq	2594 <InflateSkip2+0xa0>
    2670:	ldr	r0, [r8]
    2674:	rsb	r1, r4, #0
    2678:	mov	r2, #1
    267c:	bl	1a68 <fseek@plt>
    2680:	ldr	r0, [r5, #52]	; 0x34
    2684:	mov	r2, #0
    2688:	ldr	r0, [r0, #12]
    268c:	ldr	r1, [r0, #4]
    2690:	str	r2, [r0, #4]
    2694:	sub	r9, r9, r1
    2698:	b	2594 <InflateSkip2+0xa0>
    269c:	.word	0x00047435

000026a0 <InflateSkipData>:
    26a0:	push	{r4, r5, fp, lr}
    26a4:	add	fp, sp, #8
    26a8:	mov	r4, r3
    26ac:	mov	r3, r0
    26b0:	mov	r0, #0
    26b4:	cmp	r3, #0
    26b8:	cmpne	r1, #0
    26bc:	bne	26c4 <InflateSkipData+0x24>
    26c0:	pop	{r4, r5, fp, pc}
    26c4:	cmp	r4, #1
    26c8:	blt	26c0 <InflateSkipData+0x20>
    26cc:	sub	r2, r2, #1
    26d0:	cmp	r2, #12
    26d4:	bhi	26c0 <InflateSkipData+0x20>
    26d8:	uxth	ip, r2
    26dc:	movw	lr, #6527	; 0x197f
    26e0:	mov	r5, #1
    26e4:	tst	r5, lr, lsr ip
    26e8:	popeq	{r4, r5, fp, pc}
    26ec:	ldr	r0, [pc, #24]	; 270c <InflateSkipData+0x6c>
    26f0:	add	r0, pc, r0
    26f4:	ldr	r0, [r0, r2, lsl #2]
    26f8:	mul	r2, r0, r4
    26fc:	mov	r0, r3
    2700:	bl	234c <InflateSkip>
    2704:	mov	r0, r4
    2708:	pop	{r4, r5, fp, pc}
    270c:	.word	0x00047508

00002710 <InflateVarTag>:
    2710:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    2714:	add	fp, sp, #24
    2718:	sub	sp, sp, #32
    271c:	cmp	r2, #0
    2720:	beq	27b0 <InflateVarTag+0xa0>
    2724:	mov	r8, r0
    2728:	ldr	r0, [r1, #52]	; 0x34
    272c:	mov	r5, r1
    2730:	mov	r7, r2
    2734:	mov	r4, #0
    2738:	ldr	r0, [r0, #12]
    273c:	ldr	r1, [r0, #4]
    2740:	cmp	r1, #0
    2744:	bne	2774 <InflateVarTag+0x64>
    2748:	mov	r1, sp
    274c:	mov	r2, #1
    2750:	stm	r0, {r1, r2}
    2754:	mov	r0, r1
    2758:	mov	r1, #1
    275c:	mov	r2, #1
    2760:	ldr	r3, [r8]
    2764:	bl	18d0 <fread@plt>
    2768:	mov	r4, r0
    276c:	ldr	r0, [r5, #52]	; 0x34
    2770:	ldr	r0, [r0, #12]
    2774:	mov	r1, #8
    2778:	str	r7, [r0, #12]
    277c:	str	r1, [r0, #16]
    2780:	mov	r1, #0
    2784:	bl	1804 <inflate@plt>
    2788:	cmp	r0, #0
    278c:	beq	27b8 <InflateVarTag+0xa8>
    2790:	cmp	r0, #2
    2794:	mvneq	r0, #2
    2798:	bl	18a0 <zError@plt>
    279c:	mov	r1, r0
    27a0:	ldr	r0, [pc, #184]	; 2860 <InflateVarTag+0x150>
    27a4:	add	r0, pc, r0
    27a8:	bl	19cc <Mat_Critical@plt>
    27ac:	b	2854 <InflateVarTag+0x144>
    27b0:	mov	r4, #0
    27b4:	b	2854 <InflateVarTag+0x144>
    27b8:	mov	r9, #1
    27bc:	mov	r7, sp
    27c0:	mov	r6, #1
    27c4:	ldr	r0, [r5, #52]	; 0x34
    27c8:	ldr	r0, [r0, #12]
    27cc:	ldr	r2, [r0, #16]
    27d0:	ldr	r1, [r0, #4]
    27d4:	cmp	r2, #0
    27d8:	beq	2824 <InflateVarTag+0x114>
    27dc:	cmp	r6, #1
    27e0:	cmpeq	r1, #0
    27e4:	bne	2824 <InflateVarTag+0x114>
    27e8:	stm	r0, {r7, r9}
    27ec:	mov	r0, r7
    27f0:	mov	r1, #1
    27f4:	mov	r2, #1
    27f8:	ldr	r3, [r8]
    27fc:	bl	18d0 <fread@plt>
    2800:	mov	r6, r0
    2804:	add	r4, r0, r4
    2808:	ldr	r0, [r5, #52]	; 0x34
    280c:	mov	r1, #0
    2810:	ldr	r0, [r0, #12]
    2814:	bl	1804 <inflate@plt>
    2818:	cmp	r0, #0
    281c:	beq	27c4 <InflateVarTag+0xb4>
    2820:	b	2790 <InflateVarTag+0x80>
    2824:	cmp	r1, #0
    2828:	beq	2854 <InflateVarTag+0x144>
    282c:	ldr	r0, [r8]
    2830:	rsb	r1, r1, #0
    2834:	mov	r2, #1
    2838:	bl	1a68 <fseek@plt>
    283c:	ldr	r0, [r5, #52]	; 0x34
    2840:	mov	r2, #0
    2844:	ldr	r0, [r0, #12]
    2848:	ldr	r1, [r0, #4]
    284c:	str	r2, [r0, #4]
    2850:	sub	r4, r4, r1
    2854:	mov	r0, r4
    2858:	sub	sp, fp, #24
    285c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    2860:	.word	0x00047244

00002864 <InflateArrayFlags>:
    2864:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    2868:	add	fp, sp, #24
    286c:	sub	sp, sp, #32
    2870:	cmp	r2, #0
    2874:	beq	2904 <InflateArrayFlags+0xa0>
    2878:	mov	r8, r0
    287c:	ldr	r0, [r1, #52]	; 0x34
    2880:	mov	r5, r1
    2884:	mov	r7, r2
    2888:	mov	r4, #0
    288c:	ldr	r0, [r0, #12]
    2890:	ldr	r1, [r0, #4]
    2894:	cmp	r1, #0
    2898:	bne	28c8 <InflateArrayFlags+0x64>
    289c:	mov	r1, sp
    28a0:	mov	r2, #1
    28a4:	stm	r0, {r1, r2}
    28a8:	mov	r0, r1
    28ac:	mov	r1, #1
    28b0:	mov	r2, #1
    28b4:	ldr	r3, [r8]
    28b8:	bl	18d0 <fread@plt>
    28bc:	mov	r4, r0
    28c0:	ldr	r0, [r5, #52]	; 0x34
    28c4:	ldr	r0, [r0, #12]
    28c8:	mov	r1, #16
    28cc:	str	r7, [r0, #12]
    28d0:	str	r1, [r0, #16]
    28d4:	mov	r1, #0
    28d8:	bl	1804 <inflate@plt>
    28dc:	cmp	r0, #0
    28e0:	beq	290c <InflateArrayFlags+0xa8>
    28e4:	cmp	r0, #2
    28e8:	mvneq	r0, #2
    28ec:	bl	18a0 <zError@plt>
    28f0:	mov	r1, r0
    28f4:	ldr	r0, [pc, #184]	; 29b4 <InflateArrayFlags+0x150>
    28f8:	add	r0, pc, r0
    28fc:	bl	19cc <Mat_Critical@plt>
    2900:	b	29a8 <InflateArrayFlags+0x144>
    2904:	mov	r4, #0
    2908:	b	29a8 <InflateArrayFlags+0x144>
    290c:	mov	r9, #1
    2910:	mov	r7, sp
    2914:	mov	r6, #1
    2918:	ldr	r0, [r5, #52]	; 0x34
    291c:	ldr	r0, [r0, #12]
    2920:	ldr	r2, [r0, #16]
    2924:	ldr	r1, [r0, #4]
    2928:	cmp	r2, #0
    292c:	beq	2978 <InflateArrayFlags+0x114>
    2930:	cmp	r6, #1
    2934:	cmpeq	r1, #0
    2938:	bne	2978 <InflateArrayFlags+0x114>
    293c:	stm	r0, {r7, r9}
    2940:	mov	r0, r7
    2944:	mov	r1, #1
    2948:	mov	r2, #1
    294c:	ldr	r3, [r8]
    2950:	bl	18d0 <fread@plt>
    2954:	mov	r6, r0
    2958:	add	r4, r0, r4
    295c:	ldr	r0, [r5, #52]	; 0x34
    2960:	mov	r1, #0
    2964:	ldr	r0, [r0, #12]
    2968:	bl	1804 <inflate@plt>
    296c:	cmp	r0, #0
    2970:	beq	2918 <InflateArrayFlags+0xb4>
    2974:	b	28e4 <InflateArrayFlags+0x80>
    2978:	cmp	r1, #0
    297c:	beq	29a8 <InflateArrayFlags+0x144>
    2980:	ldr	r0, [r8]
    2984:	rsb	r1, r1, #0
    2988:	mov	r2, #1
    298c:	bl	1a68 <fseek@plt>
    2990:	ldr	r0, [r5, #52]	; 0x34
    2994:	mov	r2, #0
    2998:	ldr	r0, [r0, #12]
    299c:	ldr	r1, [r0, #4]
    29a0:	str	r2, [r0, #4]
    29a4:	sub	r4, r4, r1
    29a8:	mov	r0, r4
    29ac:	sub	sp, fp, #24
    29b0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    29b4:	.word	0x00047113

000029b8 <InflateRankDims>:
    29b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    29bc:	add	fp, sp, #28
    29c0:	sub	sp, sp, #44	; 0x2c
    29c4:	cmp	r2, #0
    29c8:	beq	2a5c <InflateRankDims+0xa4>
    29cc:	mov	sl, r0
    29d0:	ldr	r0, [r1, #52]	; 0x34
    29d4:	mov	r5, r1
    29d8:	mov	r6, r3
    29dc:	mov	r9, r2
    29e0:	mov	r4, #0
    29e4:	ldr	r0, [r0, #12]
    29e8:	ldr	r1, [r0, #4]
    29ec:	cmp	r1, #0
    29f0:	bne	2a20 <InflateRankDims+0x68>
    29f4:	add	r1, sp, #12
    29f8:	mov	r2, #1
    29fc:	stm	r0, {r1, r2}
    2a00:	mov	r0, r1
    2a04:	mov	r1, #1
    2a08:	mov	r2, #1
    2a0c:	ldr	r3, [sl]
    2a10:	bl	18d0 <fread@plt>
    2a14:	mov	r4, r0
    2a18:	ldr	r0, [r5, #52]	; 0x34
    2a1c:	ldr	r0, [r0, #12]
    2a20:	mov	r1, #8
    2a24:	str	r9, [r0, #12]
    2a28:	str	r1, [r0, #16]
    2a2c:	mov	r1, #0
    2a30:	bl	1804 <inflate@plt>
    2a34:	cmp	r0, #0
    2a38:	beq	2a64 <InflateRankDims+0xac>
    2a3c:	cmp	r0, #2
    2a40:	mvneq	r0, #2
    2a44:	bl	18a0 <zError@plt>
    2a48:	mov	r1, r0
    2a4c:	ldr	r0, [pc, #584]	; 2c9c <InflateRankDims+0x2e4>
    2a50:	add	r0, pc, r0
    2a54:	bl	19cc <Mat_Critical@plt>
    2a58:	b	2bc0 <InflateRankDims+0x208>
    2a5c:	mov	r4, #0
    2a60:	b	2bc0 <InflateRankDims+0x208>
    2a64:	str	r6, [sp]
    2a68:	mov	r6, #1
    2a6c:	add	r8, sp, #12
    2a70:	mov	r7, #1
    2a74:	ldr	r0, [r5, #52]	; 0x34
    2a78:	ldr	r0, [r0, #12]
    2a7c:	ldr	r1, [r0, #16]
    2a80:	cmp	r1, #0
    2a84:	beq	2ad8 <InflateRankDims+0x120>
    2a88:	cmp	r7, #1
    2a8c:	ldreq	r1, [r0, #4]
    2a90:	cmpeq	r1, #0
    2a94:	bne	2ad8 <InflateRankDims+0x120>
    2a98:	str	r8, [r0]
    2a9c:	str	r6, [r0, #4]
    2aa0:	mov	r0, r8
    2aa4:	mov	r1, #1
    2aa8:	mov	r2, #1
    2aac:	ldr	r3, [sl]
    2ab0:	bl	18d0 <fread@plt>
    2ab4:	mov	r7, r0
    2ab8:	add	r4, r0, r4
    2abc:	ldr	r0, [r5, #52]	; 0x34
    2ac0:	mov	r1, #0
    2ac4:	ldr	r0, [r0, #12]
    2ac8:	bl	1804 <inflate@plt>
    2acc:	cmp	r0, #0
    2ad0:	beq	2a74 <InflateRankDims+0xbc>
    2ad4:	b	2a3c <InflateRankDims+0x84>
    2ad8:	ldm	r9, {r0, r1}
    2adc:	stmib	sp, {r0, r1}
    2ae0:	ldr	r1, [sl, #20]
    2ae4:	cmp	r1, #0
    2ae8:	beq	2b08 <InflateRankDims+0x150>
    2aec:	add	r0, sp, #4
    2af0:	add	r7, r0, #4
    2af4:	add	r0, sp, #4
    2af8:	bl	1c28 <Mat_int32Swap>
    2afc:	mov	r0, r7
    2b00:	bl	1c28 <Mat_int32Swap>
    2b04:	ldrh	r0, [sp, #4]
    2b08:	uxth	r0, r0
    2b0c:	cmp	r0, #5
    2b10:	bne	2bb4 <InflateRankDims+0x1fc>
    2b14:	ldr	r6, [sp, #8]
    2b18:	asr	r0, r6, #31
    2b1c:	add	r0, r6, r0, lsr #29
    2b20:	bic	r0, r0, #7
    2b24:	subs	r0, r6, r0
    2b28:	rsb	r0, r0, #8
    2b2c:	addne	r6, r6, r0
    2b30:	ldr	r0, [r5, #52]	; 0x34
    2b34:	ldr	r0, [r0, #12]
    2b38:	ldr	r1, [r0, #4]
    2b3c:	cmp	r1, #0
    2b40:	bne	2b70 <InflateRankDims+0x1b8>
    2b44:	mov	r1, #1
    2b48:	str	r8, [r0]
    2b4c:	mov	r2, #1
    2b50:	str	r1, [r0, #4]
    2b54:	mov	r0, r8
    2b58:	mov	r1, #1
    2b5c:	ldr	r3, [sl]
    2b60:	bl	18d0 <fread@plt>
    2b64:	add	r4, r0, r4
    2b68:	ldr	r0, [r5, #52]	; 0x34
    2b6c:	ldr	r0, [r0, #12]
    2b70:	ldr	r2, [sp]
    2b74:	add	r1, r6, #2
    2b78:	str	r6, [r0, #16]
    2b7c:	lsl	r1, r1, #2
    2b80:	cmp	r1, r2
    2b84:	bls	2bcc <InflateRankDims+0x214>
    2b88:	mov	r0, r6
    2b8c:	mov	r1, #4
    2b90:	bl	17b0 <calloc@plt>
    2b94:	mov	r1, r0
    2b98:	ldr	r0, [fp, #8]
    2b9c:	cmp	r1, #0
    2ba0:	str	r1, [r0]
    2ba4:	beq	2c84 <InflateRankDims+0x2cc>
    2ba8:	ldr	r0, [r5, #52]	; 0x34
    2bac:	ldr	r0, [r0, #12]
    2bb0:	b	2bd0 <InflateRankDims+0x218>
    2bb4:	ldr	r0, [pc, #220]	; 2c98 <InflateRankDims+0x2e0>
    2bb8:	add	r0, pc, r0
    2bbc:	bl	19cc <Mat_Critical@plt>
    2bc0:	mov	r0, r4
    2bc4:	sub	sp, fp, #28
    2bc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2bcc:	add	r1, r9, #8
    2bd0:	str	r1, [r0, #12]
    2bd4:	mov	r1, #0
    2bd8:	bl	1804 <inflate@plt>
    2bdc:	cmp	r0, #0
    2be0:	bne	2a3c <InflateRankDims+0x84>
    2be4:	mov	r6, #1
    2be8:	mov	r7, #1
    2bec:	ldr	r0, [r5, #52]	; 0x34
    2bf0:	ldr	r0, [r0, #12]
    2bf4:	ldr	r2, [r0, #16]
    2bf8:	ldr	r1, [r0, #4]
    2bfc:	cmp	r2, #0
    2c00:	beq	2c50 <InflateRankDims+0x298>
    2c04:	cmp	r7, #1
    2c08:	cmpeq	r1, #0
    2c0c:	bne	2c50 <InflateRankDims+0x298>
    2c10:	str	r8, [r0]
    2c14:	str	r6, [r0, #4]
    2c18:	mov	r0, r8
    2c1c:	mov	r1, #1
    2c20:	mov	r2, #1
    2c24:	ldr	r3, [sl]
    2c28:	bl	18d0 <fread@plt>
    2c2c:	mov	r7, r0
    2c30:	add	r4, r0, r4
    2c34:	ldr	r0, [r5, #52]	; 0x34
    2c38:	mov	r1, #0
    2c3c:	ldr	r0, [r0, #12]
    2c40:	bl	1804 <inflate@plt>
    2c44:	cmp	r0, #0
    2c48:	beq	2bec <InflateRankDims+0x234>
    2c4c:	b	2a3c <InflateRankDims+0x84>
    2c50:	cmp	r1, #0
    2c54:	beq	2bc0 <InflateRankDims+0x208>
    2c58:	ldr	r0, [sl]
    2c5c:	rsb	r1, r1, #0
    2c60:	mov	r2, #1
    2c64:	bl	1a68 <fseek@plt>
    2c68:	ldr	r0, [r5, #52]	; 0x34
    2c6c:	mov	r2, #0
    2c70:	ldr	r0, [r0, #12]
    2c74:	ldr	r1, [r0, #4]
    2c78:	str	r2, [r0, #4]
    2c7c:	sub	r4, r4, r1
    2c80:	b	2bc0 <InflateRankDims+0x208>
    2c84:	mov	r0, #0
    2c88:	str	r0, [r9, #4]
    2c8c:	ldr	r0, [pc, #12]	; 2ca0 <InflateRankDims+0x2e8>
    2c90:	add	r0, pc, r0
    2c94:	b	2bbc <InflateRankDims+0x204>
    2c98:	.word	0x00046e9f
    2c9c:	.word	0x00046fe2
    2ca0:	.word	0x00046e05

00002ca4 <InflateVarNameTag>:
    2ca4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    2ca8:	add	fp, sp, #24
    2cac:	sub	sp, sp, #32
    2cb0:	cmp	r2, #0
    2cb4:	beq	2d44 <InflateVarNameTag+0xa0>
    2cb8:	mov	r8, r0
    2cbc:	ldr	r0, [r1, #52]	; 0x34
    2cc0:	mov	r5, r1
    2cc4:	mov	r7, r2
    2cc8:	mov	r4, #0
    2ccc:	ldr	r0, [r0, #12]
    2cd0:	ldr	r1, [r0, #4]
    2cd4:	cmp	r1, #0
    2cd8:	bne	2d08 <InflateVarNameTag+0x64>
    2cdc:	mov	r1, sp
    2ce0:	mov	r2, #1
    2ce4:	stm	r0, {r1, r2}
    2ce8:	mov	r0, r1
    2cec:	mov	r1, #1
    2cf0:	mov	r2, #1
    2cf4:	ldr	r3, [r8]
    2cf8:	bl	18d0 <fread@plt>
    2cfc:	mov	r4, r0
    2d00:	ldr	r0, [r5, #52]	; 0x34
    2d04:	ldr	r0, [r0, #12]
    2d08:	mov	r1, #8
    2d0c:	str	r7, [r0, #12]
    2d10:	str	r1, [r0, #16]
    2d14:	mov	r1, #0
    2d18:	bl	1804 <inflate@plt>
    2d1c:	cmp	r0, #0
    2d20:	beq	2d4c <InflateVarNameTag+0xa8>
    2d24:	cmp	r0, #2
    2d28:	mvneq	r0, #2
    2d2c:	bl	18a0 <zError@plt>
    2d30:	mov	r1, r0
    2d34:	ldr	r0, [pc, #184]	; 2df4 <InflateVarNameTag+0x150>
    2d38:	add	r0, pc, r0
    2d3c:	bl	19cc <Mat_Critical@plt>
    2d40:	b	2de8 <InflateVarNameTag+0x144>
    2d44:	mov	r4, #0
    2d48:	b	2de8 <InflateVarNameTag+0x144>
    2d4c:	mov	r9, #1
    2d50:	mov	r7, sp
    2d54:	mov	r6, #1
    2d58:	ldr	r0, [r5, #52]	; 0x34
    2d5c:	ldr	r0, [r0, #12]
    2d60:	ldr	r2, [r0, #16]
    2d64:	ldr	r1, [r0, #4]
    2d68:	cmp	r2, #0
    2d6c:	beq	2db8 <InflateVarNameTag+0x114>
    2d70:	cmp	r6, #1
    2d74:	cmpeq	r1, #0
    2d78:	bne	2db8 <InflateVarNameTag+0x114>
    2d7c:	stm	r0, {r7, r9}
    2d80:	mov	r0, r7
    2d84:	mov	r1, #1
    2d88:	mov	r2, #1
    2d8c:	ldr	r3, [r8]
    2d90:	bl	18d0 <fread@plt>
    2d94:	mov	r6, r0
    2d98:	add	r4, r0, r4
    2d9c:	ldr	r0, [r5, #52]	; 0x34
    2da0:	mov	r1, #0
    2da4:	ldr	r0, [r0, #12]
    2da8:	bl	1804 <inflate@plt>
    2dac:	cmp	r0, #0
    2db0:	beq	2d58 <InflateVarNameTag+0xb4>
    2db4:	b	2d24 <InflateVarNameTag+0x80>
    2db8:	cmp	r1, #0
    2dbc:	beq	2de8 <InflateVarNameTag+0x144>
    2dc0:	ldr	r0, [r8]
    2dc4:	rsb	r1, r1, #0
    2dc8:	mov	r2, #1
    2dcc:	bl	1a68 <fseek@plt>
    2dd0:	ldr	r0, [r5, #52]	; 0x34
    2dd4:	mov	r2, #0
    2dd8:	ldr	r0, [r0, #12]
    2ddc:	ldr	r1, [r0, #4]
    2de0:	str	r2, [r0, #4]
    2de4:	sub	r4, r4, r1
    2de8:	mov	r0, r4
    2dec:	sub	sp, fp, #24
    2df0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    2df4:	.word	0x00046d7e

00002df8 <InflateVarName>:
    2df8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    2dfc:	add	fp, sp, #24
    2e00:	sub	sp, sp, #32
    2e04:	cmp	r2, #0
    2e08:	beq	2e98 <InflateVarName+0xa0>
    2e0c:	mov	r9, r0
    2e10:	ldr	r0, [r1, #52]	; 0x34
    2e14:	mov	r5, r1
    2e18:	mov	r8, r3
    2e1c:	mov	r7, r2
    2e20:	mov	r4, #0
    2e24:	ldr	r0, [r0, #12]
    2e28:	ldr	r1, [r0, #4]
    2e2c:	cmp	r1, #0
    2e30:	bne	2e60 <InflateVarName+0x68>
    2e34:	mov	r1, sp
    2e38:	mov	r2, #1
    2e3c:	stm	r0, {r1, r2}
    2e40:	mov	r0, r1
    2e44:	mov	r1, #1
    2e48:	mov	r2, #1
    2e4c:	ldr	r3, [r9]
    2e50:	bl	18d0 <fread@plt>
    2e54:	mov	r4, r0
    2e58:	ldr	r0, [r5, #52]	; 0x34
    2e5c:	ldr	r0, [r0, #12]
    2e60:	mov	r1, #0
    2e64:	str	r7, [r0, #12]
    2e68:	str	r8, [r0, #16]
    2e6c:	bl	1804 <inflate@plt>
    2e70:	cmp	r0, #0
    2e74:	beq	2ea0 <InflateVarName+0xa8>
    2e78:	cmp	r0, #2
    2e7c:	mvneq	r0, #2
    2e80:	bl	18a0 <zError@plt>
    2e84:	mov	r1, r0
    2e88:	ldr	r0, [pc, #184]	; 2f48 <InflateVarName+0x150>
    2e8c:	add	r0, pc, r0
    2e90:	bl	19cc <Mat_Critical@plt>
    2e94:	b	2f3c <InflateVarName+0x144>
    2e98:	mov	r4, #0
    2e9c:	b	2f3c <InflateVarName+0x144>
    2ea0:	mov	r8, #1
    2ea4:	mov	r7, sp
    2ea8:	mov	r6, #1
    2eac:	ldr	r0, [r5, #52]	; 0x34
    2eb0:	ldr	r0, [r0, #12]
    2eb4:	ldr	r2, [r0, #16]
    2eb8:	ldr	r1, [r0, #4]
    2ebc:	cmp	r2, #0
    2ec0:	beq	2f0c <InflateVarName+0x114>
    2ec4:	cmp	r6, #1
    2ec8:	cmpeq	r1, #0
    2ecc:	bne	2f0c <InflateVarName+0x114>
    2ed0:	stm	r0, {r7, r8}
    2ed4:	mov	r0, r7
    2ed8:	mov	r1, #1
    2edc:	mov	r2, #1
    2ee0:	ldr	r3, [r9]
    2ee4:	bl	18d0 <fread@plt>
    2ee8:	mov	r6, r0
    2eec:	add	r4, r0, r4
    2ef0:	ldr	r0, [r5, #52]	; 0x34
    2ef4:	mov	r1, #0
    2ef8:	ldr	r0, [r0, #12]
    2efc:	bl	1804 <inflate@plt>
    2f00:	cmp	r0, #0
    2f04:	beq	2eac <InflateVarName+0xb4>
    2f08:	b	2e78 <InflateVarName+0x80>
    2f0c:	cmp	r1, #0
    2f10:	beq	2f3c <InflateVarName+0x144>
    2f14:	ldr	r0, [r9]
    2f18:	rsb	r1, r1, #0
    2f1c:	mov	r2, #1
    2f20:	bl	1a68 <fseek@plt>
    2f24:	ldr	r0, [r5, #52]	; 0x34
    2f28:	mov	r2, #0
    2f2c:	ldr	r0, [r0, #12]
    2f30:	ldr	r1, [r0, #4]
    2f34:	str	r2, [r0, #4]
    2f38:	sub	r4, r4, r1
    2f3c:	mov	r0, r4
    2f40:	sub	sp, fp, #24
    2f44:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    2f48:	.word	0x00046c51

00002f4c <InflateDataTag>:
    2f4c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    2f50:	add	fp, sp, #24
    2f54:	sub	sp, sp, #32
    2f58:	cmp	r2, #0
    2f5c:	beq	3084 <InflateDataTag+0x138>
    2f60:	mov	r8, r0
    2f64:	ldr	r0, [r1, #52]	; 0x34
    2f68:	mov	r5, r1
    2f6c:	mov	r7, r2
    2f70:	mov	r4, #0
    2f74:	ldr	r0, [r0, #12]
    2f78:	ldr	r1, [r0, #4]
    2f7c:	cmp	r1, #0
    2f80:	bne	2fb0 <InflateDataTag+0x64>
    2f84:	mov	r1, sp
    2f88:	mov	r2, #1
    2f8c:	stm	r0, {r1, r2}
    2f90:	mov	r0, r1
    2f94:	mov	r1, #1
    2f98:	mov	r2, #1
    2f9c:	ldr	r3, [r8]
    2fa0:	bl	18d0 <fread@plt>
    2fa4:	mov	r4, r0
    2fa8:	ldr	r0, [r5, #52]	; 0x34
    2fac:	ldr	r0, [r0, #12]
    2fb0:	mov	r1, #8
    2fb4:	str	r7, [r0, #12]
    2fb8:	str	r1, [r0, #16]
    2fbc:	mov	r1, #0
    2fc0:	bl	1804 <inflate@plt>
    2fc4:	cmp	r0, #1
    2fc8:	beq	30b0 <InflateDataTag+0x164>
    2fcc:	cmp	r0, #0
    2fd0:	bne	308c <InflateDataTag+0x140>
    2fd4:	mov	r9, #1
    2fd8:	mov	r7, sp
    2fdc:	mov	r6, #1
    2fe0:	ldr	r0, [r5, #52]	; 0x34
    2fe4:	ldr	r0, [r0, #12]
    2fe8:	ldr	r1, [r0, #16]
    2fec:	cmp	r1, #0
    2ff0:	beq	304c <InflateDataTag+0x100>
    2ff4:	cmp	r6, #1
    2ff8:	ldreq	r1, [r0, #4]
    2ffc:	cmpeq	r1, #0
    3000:	bne	304c <InflateDataTag+0x100>
    3004:	stm	r0, {r7, r9}
    3008:	mov	r0, r7
    300c:	mov	r1, #1
    3010:	mov	r2, #1
    3014:	ldr	r3, [r8]
    3018:	bl	18d0 <fread@plt>
    301c:	mov	r6, r0
    3020:	add	r4, r0, r4
    3024:	ldr	r0, [r5, #52]	; 0x34
    3028:	mov	r1, #0
    302c:	ldr	r0, [r0, #12]
    3030:	bl	1804 <inflate@plt>
    3034:	cmp	r0, #0
    3038:	beq	2fe0 <InflateDataTag+0x94>
    303c:	cmp	r0, #1
    3040:	bne	308c <InflateDataTag+0x140>
    3044:	ldr	r0, [r5, #52]	; 0x34
    3048:	ldr	r0, [r0, #12]
    304c:	ldr	r1, [r0, #4]
    3050:	cmp	r1, #0
    3054:	beq	30b0 <InflateDataTag+0x164>
    3058:	ldr	r0, [r8]
    305c:	rsb	r1, r1, #0
    3060:	mov	r2, #1
    3064:	bl	1a68 <fseek@plt>
    3068:	ldr	r0, [r5, #52]	; 0x34
    306c:	mov	r2, #0
    3070:	ldr	r0, [r0, #12]
    3074:	ldr	r1, [r0, #4]
    3078:	str	r2, [r0, #4]
    307c:	sub	r4, r4, r1
    3080:	b	30b0 <InflateDataTag+0x164>
    3084:	mov	r4, #0
    3088:	b	30b0 <InflateDataTag+0x164>
    308c:	ldr	r5, [r5, #36]	; 0x24
    3090:	cmp	r0, #2
    3094:	mvneq	r0, #2
    3098:	bl	18a0 <zError@plt>
    309c:	mov	r2, r0
    30a0:	ldr	r0, [pc, #20]	; 30bc <InflateDataTag+0x170>
    30a4:	mov	r1, r5
    30a8:	add	r0, pc, r0
    30ac:	bl	19cc <Mat_Critical@plt>
    30b0:	mov	r0, r4
    30b4:	sub	sp, fp, #24
    30b8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    30bc:	.word	0x00046a59

000030c0 <InflateDataType>:
    30c0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    30c4:	add	fp, sp, #24
    30c8:	sub	sp, sp, #32
    30cc:	cmp	r2, #0
    30d0:	beq	3150 <InflateDataType+0x90>
    30d4:	mov	r8, r0
    30d8:	ldr	r0, [r1, #4]
    30dc:	mov	r7, r2
    30e0:	mov	r5, r1
    30e4:	mov	r4, #0
    30e8:	cmp	r0, #0
    30ec:	bne	3110 <InflateDataType+0x50>
    30f0:	mov	r0, sp
    30f4:	mov	r1, #1
    30f8:	mov	r2, #1
    30fc:	stm	r5, {r0, r1}
    3100:	mov	r1, #1
    3104:	ldr	r3, [r8]
    3108:	bl	18d0 <fread@plt>
    310c:	mov	r4, r0
    3110:	mov	r0, #4
    3114:	str	r7, [r5, #12]
    3118:	mov	r1, #0
    311c:	str	r0, [r5, #16]
    3120:	mov	r0, r5
    3124:	bl	1804 <inflate@plt>
    3128:	cmp	r0, #0
    312c:	beq	3158 <InflateDataType+0x98>
    3130:	cmp	r0, #2
    3134:	mvneq	r0, #2
    3138:	bl	18a0 <zError@plt>
    313c:	mov	r1, r0
    3140:	ldr	r0, [pc, #164]	; 31ec <InflateDataType+0x12c>
    3144:	add	r0, pc, r0
    3148:	bl	19cc <Mat_Critical@plt>
    314c:	b	31e0 <InflateDataType+0x120>
    3150:	mov	r4, #0
    3154:	b	31e0 <InflateDataType+0x120>
    3158:	mov	r9, #1
    315c:	mov	r7, sp
    3160:	mov	r6, #1
    3164:	ldr	r0, [r5, #16]
    3168:	ldr	r1, [r5, #4]
    316c:	cmp	r0, #0
    3170:	beq	31b8 <InflateDataType+0xf8>
    3174:	cmp	r6, #1
    3178:	cmpeq	r1, #0
    317c:	bne	31b8 <InflateDataType+0xf8>
    3180:	stm	r5, {r7, r9}
    3184:	mov	r0, r7
    3188:	mov	r1, #1
    318c:	mov	r2, #1
    3190:	ldr	r3, [r8]
    3194:	bl	18d0 <fread@plt>
    3198:	mov	r6, r0
    319c:	add	r4, r0, r4
    31a0:	mov	r0, r5
    31a4:	mov	r1, #0
    31a8:	bl	1804 <inflate@plt>
    31ac:	cmp	r0, #0
    31b0:	beq	3164 <InflateDataType+0xa4>
    31b4:	b	3130 <InflateDataType+0x70>
    31b8:	cmp	r1, #0
    31bc:	beq	31e0 <InflateDataType+0x120>
    31c0:	ldr	r0, [r8]
    31c4:	rsb	r1, r1, #0
    31c8:	mov	r2, #1
    31cc:	bl	1a68 <fseek@plt>
    31d0:	ldr	r0, [r5, #4]
    31d4:	mov	r1, #0
    31d8:	str	r1, [r5, #4]
    31dc:	sub	r4, r4, r0
    31e0:	mov	r0, r4
    31e4:	sub	sp, fp, #24
    31e8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    31ec:	.word	0x000469e6

000031f0 <InflateData>:
    31f0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    31f4:	add	fp, sp, #24
    31f8:	sub	sp, sp, #8
    31fc:	sub	sp, sp, #1024	; 0x400
    3200:	cmp	r2, #0
    3204:	mov	r4, #0
    3208:	movne	r7, r3
    320c:	cmpne	r3, #0
    3210:	bne	3220 <InflateData+0x30>
    3214:	mov	r0, r4
    3218:	sub	sp, fp, #24
    321c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    3220:	mov	r8, r0
    3224:	ldr	r0, [r1, #4]
    3228:	mov	r6, r2
    322c:	mov	r5, r1
    3230:	mov	r4, #0
    3234:	cmp	r0, #0
    3238:	bne	3268 <InflateData+0x78>
    323c:	ldr	r3, [r8]
    3240:	add	r9, sp, #4
    3244:	cmp	r7, #1024	; 0x400
    3248:	mov	r2, r7
    324c:	mov	r1, #1
    3250:	movcs	r2, #1024	; 0x400
    3254:	mov	r0, r9
    3258:	bl	18d0 <fread@plt>
    325c:	mov	r4, r0
    3260:	str	r9, [r5]
    3264:	str	r0, [r5, #4]
    3268:	mov	r0, r5
    326c:	mov	r1, #3
    3270:	str	r6, [r5, #12]
    3274:	str	r7, [r5, #16]
    3278:	bl	1804 <inflate@plt>
    327c:	cmp	r0, #1
    3280:	beq	3214 <InflateData+0x24>
    3284:	cmp	r0, #0
    3288:	bne	330c <InflateData+0x11c>
    328c:	ldr	r0, [r5, #16]
    3290:	cmp	r0, #0
    3294:	beq	3350 <InflateData+0x160>
    3298:	add	r6, sp, #4
    329c:	ldr	r1, [r5, #4]
    32a0:	cmp	r1, #0
    32a4:	bne	335c <InflateData+0x16c>
    32a8:	add	r0, r4, #1024	; 0x400
    32ac:	mov	r2, #1024	; 0x400
    32b0:	cmp	r0, r7
    32b4:	bcc	32c8 <InflateData+0xd8>
    32b8:	add	r0, r4, #1
    32bc:	sub	r2, r7, r4
    32c0:	cmp	r0, r7
    32c4:	movwhi	r2, #1
    32c8:	ldr	r3, [r8]
    32cc:	mov	r0, r6
    32d0:	mov	r1, #1
    32d4:	bl	18d0 <fread@plt>
    32d8:	str	r6, [r5]
    32dc:	str	r0, [r5, #4]
    32e0:	add	r4, r0, r4
    32e4:	mov	r0, r5
    32e8:	mov	r1, #3
    32ec:	bl	1804 <inflate@plt>
    32f0:	cmn	r0, #5
    32f4:	cmpne	r0, #0
    32f8:	bne	332c <InflateData+0x13c>
    32fc:	ldr	r0, [r5, #16]
    3300:	cmp	r0, #0
    3304:	bne	329c <InflateData+0xac>
    3308:	b	3350 <InflateData+0x160>
    330c:	cmp	r0, #2
    3310:	mvneq	r0, #2
    3314:	bl	18a0 <zError@plt>
    3318:	mov	r1, r0
    331c:	ldr	r0, [pc, #96]	; 3384 <InflateData+0x194>
    3320:	add	r0, pc, r0
    3324:	bl	19cc <Mat_Critical@plt>
    3328:	b	3214 <InflateData+0x24>
    332c:	cmp	r0, #1
    3330:	beq	3350 <InflateData+0x160>
    3334:	cmp	r0, #2
    3338:	mvneq	r0, #2
    333c:	bl	18a0 <zError@plt>
    3340:	mov	r1, r0
    3344:	ldr	r0, [pc, #52]	; 3380 <InflateData+0x190>
    3348:	add	r0, pc, r0
    334c:	bl	19cc <Mat_Critical@plt>
    3350:	ldr	r1, [r5, #4]
    3354:	cmp	r1, #0
    3358:	beq	3214 <InflateData+0x24>
    335c:	ldr	r0, [r8]
    3360:	rsb	r1, r1, #0
    3364:	mov	r2, #1
    3368:	bl	1a68 <fseek@plt>
    336c:	ldr	r0, [r5, #4]
    3370:	mov	r1, #0
    3374:	str	r1, [r5, #4]
    3378:	sub	r4, r4, r0
    337c:	b	3214 <InflateData+0x24>
    3380:	.word	0x00046807
    3384:	.word	0x0004682f

00003388 <InflateFieldNameLength>:
    3388:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    338c:	add	fp, sp, #24
    3390:	sub	sp, sp, #32
    3394:	cmp	r2, #0
    3398:	beq	3428 <InflateFieldNameLength+0xa0>
    339c:	mov	r8, r0
    33a0:	ldr	r0, [r1, #52]	; 0x34
    33a4:	mov	r5, r1
    33a8:	mov	r7, r2
    33ac:	mov	r4, #0
    33b0:	ldr	r0, [r0, #12]
    33b4:	ldr	r1, [r0, #4]
    33b8:	cmp	r1, #0
    33bc:	bne	33ec <InflateFieldNameLength+0x64>
    33c0:	mov	r1, sp
    33c4:	mov	r2, #1
    33c8:	stm	r0, {r1, r2}
    33cc:	mov	r0, r1
    33d0:	mov	r1, #1
    33d4:	mov	r2, #1
    33d8:	ldr	r3, [r8]
    33dc:	bl	18d0 <fread@plt>
    33e0:	mov	r4, r0
    33e4:	ldr	r0, [r5, #52]	; 0x34
    33e8:	ldr	r0, [r0, #12]
    33ec:	mov	r1, #8
    33f0:	str	r7, [r0, #12]
    33f4:	str	r1, [r0, #16]
    33f8:	mov	r1, #0
    33fc:	bl	1804 <inflate@plt>
    3400:	cmp	r0, #0
    3404:	beq	3430 <InflateFieldNameLength+0xa8>
    3408:	cmp	r0, #2
    340c:	mvneq	r0, #2
    3410:	bl	18a0 <zError@plt>
    3414:	mov	r1, r0
    3418:	ldr	r0, [pc, #184]	; 34d8 <InflateFieldNameLength+0x150>
    341c:	add	r0, pc, r0
    3420:	bl	19cc <Mat_Critical@plt>
    3424:	b	34cc <InflateFieldNameLength+0x144>
    3428:	mov	r4, #0
    342c:	b	34cc <InflateFieldNameLength+0x144>
    3430:	mov	r9, #1
    3434:	mov	r7, sp
    3438:	mov	r6, #1
    343c:	ldr	r0, [r5, #52]	; 0x34
    3440:	ldr	r0, [r0, #12]
    3444:	ldr	r2, [r0, #16]
    3448:	ldr	r1, [r0, #4]
    344c:	cmp	r2, #0
    3450:	beq	349c <InflateFieldNameLength+0x114>
    3454:	cmp	r6, #1
    3458:	cmpeq	r1, #0
    345c:	bne	349c <InflateFieldNameLength+0x114>
    3460:	stm	r0, {r7, r9}
    3464:	mov	r0, r7
    3468:	mov	r1, #1
    346c:	mov	r2, #1
    3470:	ldr	r3, [r8]
    3474:	bl	18d0 <fread@plt>
    3478:	mov	r6, r0
    347c:	add	r4, r0, r4
    3480:	ldr	r0, [r5, #52]	; 0x34
    3484:	mov	r1, #0
    3488:	ldr	r0, [r0, #12]
    348c:	bl	1804 <inflate@plt>
    3490:	cmp	r0, #0
    3494:	beq	343c <InflateFieldNameLength+0xb4>
    3498:	b	3408 <InflateFieldNameLength+0x80>
    349c:	cmp	r1, #0
    34a0:	beq	34cc <InflateFieldNameLength+0x144>
    34a4:	ldr	r0, [r8]
    34a8:	rsb	r1, r1, #0
    34ac:	mov	r2, #1
    34b0:	bl	1a68 <fseek@plt>
    34b4:	ldr	r0, [r5, #52]	; 0x34
    34b8:	mov	r2, #0
    34bc:	ldr	r0, [r0, #12]
    34c0:	ldr	r1, [r0, #4]
    34c4:	str	r2, [r0, #4]
    34c8:	sub	r4, r4, r1
    34cc:	mov	r0, r4
    34d0:	sub	sp, fp, #24
    34d4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    34d8:	.word	0x00046754

000034dc <InflateFieldNamesTag>:
    34dc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    34e0:	add	fp, sp, #24
    34e4:	sub	sp, sp, #32
    34e8:	cmp	r2, #0
    34ec:	beq	357c <InflateFieldNamesTag+0xa0>
    34f0:	mov	r8, r0
    34f4:	ldr	r0, [r1, #52]	; 0x34
    34f8:	mov	r5, r1
    34fc:	mov	r7, r2
    3500:	mov	r4, #0
    3504:	ldr	r0, [r0, #12]
    3508:	ldr	r1, [r0, #4]
    350c:	cmp	r1, #0
    3510:	bne	3540 <InflateFieldNamesTag+0x64>
    3514:	mov	r1, sp
    3518:	mov	r2, #1
    351c:	stm	r0, {r1, r2}
    3520:	mov	r0, r1
    3524:	mov	r1, #1
    3528:	mov	r2, #1
    352c:	ldr	r3, [r8]
    3530:	bl	18d0 <fread@plt>
    3534:	mov	r4, r0
    3538:	ldr	r0, [r5, #52]	; 0x34
    353c:	ldr	r0, [r0, #12]
    3540:	mov	r1, #8
    3544:	str	r7, [r0, #12]
    3548:	str	r1, [r0, #16]
    354c:	mov	r1, #0
    3550:	bl	1804 <inflate@plt>
    3554:	cmp	r0, #0
    3558:	beq	3584 <InflateFieldNamesTag+0xa8>
    355c:	cmp	r0, #2
    3560:	mvneq	r0, #2
    3564:	bl	18a0 <zError@plt>
    3568:	mov	r1, r0
    356c:	ldr	r0, [pc, #184]	; 362c <InflateFieldNamesTag+0x150>
    3570:	add	r0, pc, r0
    3574:	bl	19cc <Mat_Critical@plt>
    3578:	b	3620 <InflateFieldNamesTag+0x144>
    357c:	mov	r4, #0
    3580:	b	3620 <InflateFieldNamesTag+0x144>
    3584:	mov	r9, #1
    3588:	mov	r7, sp
    358c:	mov	r6, #1
    3590:	ldr	r0, [r5, #52]	; 0x34
    3594:	ldr	r0, [r0, #12]
    3598:	ldr	r2, [r0, #16]
    359c:	ldr	r1, [r0, #4]
    35a0:	cmp	r2, #0
    35a4:	beq	35f0 <InflateFieldNamesTag+0x114>
    35a8:	cmp	r6, #1
    35ac:	cmpeq	r1, #0
    35b0:	bne	35f0 <InflateFieldNamesTag+0x114>
    35b4:	stm	r0, {r7, r9}
    35b8:	mov	r0, r7
    35bc:	mov	r1, #1
    35c0:	mov	r2, #1
    35c4:	ldr	r3, [r8]
    35c8:	bl	18d0 <fread@plt>
    35cc:	mov	r6, r0
    35d0:	add	r4, r0, r4
    35d4:	ldr	r0, [r5, #52]	; 0x34
    35d8:	mov	r1, #0
    35dc:	ldr	r0, [r0, #12]
    35e0:	bl	1804 <inflate@plt>
    35e4:	cmp	r0, #0
    35e8:	beq	3590 <InflateFieldNamesTag+0xb4>
    35ec:	b	355c <InflateFieldNamesTag+0x80>
    35f0:	cmp	r1, #0
    35f4:	beq	3620 <InflateFieldNamesTag+0x144>
    35f8:	ldr	r0, [r8]
    35fc:	rsb	r1, r1, #0
    3600:	mov	r2, #1
    3604:	bl	1a68 <fseek@plt>
    3608:	ldr	r0, [r5, #52]	; 0x34
    360c:	mov	r2, #0
    3610:	ldr	r0, [r0, #12]
    3614:	ldr	r1, [r0, #4]
    3618:	str	r2, [r0, #4]
    361c:	sub	r4, r4, r1
    3620:	mov	r0, r4
    3624:	sub	sp, fp, #24
    3628:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    362c:	.word	0x0004662c

00003630 <InflateFieldNames>:
    3630:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3634:	add	fp, sp, #28
    3638:	sub	sp, sp, #36	; 0x24
    363c:	cmp	r2, #0
    3640:	beq	36dc <InflateFieldNames+0xac>
    3644:	mov	r9, r0
    3648:	ldr	r0, [r1, #52]	; 0x34
    364c:	mov	r5, r1
    3650:	ldr	sl, [fp, #12]
    3654:	ldr	r6, [fp, #8]
    3658:	mov	r8, r3
    365c:	mov	r7, r2
    3660:	mov	r4, #0
    3664:	ldr	r0, [r0, #12]
    3668:	ldr	r1, [r0, #4]
    366c:	cmp	r1, #0
    3670:	bne	36a0 <InflateFieldNames+0x70>
    3674:	add	r1, sp, #4
    3678:	mov	r2, #1
    367c:	stm	r0, {r1, r2}
    3680:	mov	r0, r1
    3684:	mov	r1, #1
    3688:	mov	r2, #1
    368c:	ldr	r3, [r9]
    3690:	bl	18d0 <fread@plt>
    3694:	mov	r4, r0
    3698:	ldr	r0, [r5, #52]	; 0x34
    369c:	ldr	r0, [r0, #12]
    36a0:	mla	r1, r6, r8, sl
    36a4:	str	r7, [r0, #12]
    36a8:	str	r1, [r0, #16]
    36ac:	mov	r1, #0
    36b0:	bl	1804 <inflate@plt>
    36b4:	cmp	r0, #0
    36b8:	beq	36e4 <InflateFieldNames+0xb4>
    36bc:	cmp	r0, #2
    36c0:	mvneq	r0, #2
    36c4:	bl	18a0 <zError@plt>
    36c8:	mov	r1, r0
    36cc:	ldr	r0, [pc, #184]	; 378c <InflateFieldNames+0x15c>
    36d0:	add	r0, pc, r0
    36d4:	bl	19cc <Mat_Critical@plt>
    36d8:	b	3780 <InflateFieldNames+0x150>
    36dc:	mov	r4, #0
    36e0:	b	3780 <InflateFieldNames+0x150>
    36e4:	mov	r8, #1
    36e8:	add	r7, sp, #4
    36ec:	mov	r6, #1
    36f0:	ldr	r0, [r5, #52]	; 0x34
    36f4:	ldr	r0, [r0, #12]
    36f8:	ldr	r2, [r0, #16]
    36fc:	ldr	r1, [r0, #4]
    3700:	cmp	r2, #0
    3704:	beq	3750 <InflateFieldNames+0x120>
    3708:	cmp	r6, #1
    370c:	cmpeq	r1, #0
    3710:	bne	3750 <InflateFieldNames+0x120>
    3714:	stm	r0, {r7, r8}
    3718:	mov	r0, r7
    371c:	mov	r1, #1
    3720:	mov	r2, #1
    3724:	ldr	r3, [r9]
    3728:	bl	18d0 <fread@plt>
    372c:	mov	r6, r0
    3730:	add	r4, r0, r4
    3734:	ldr	r0, [r5, #52]	; 0x34
    3738:	mov	r1, #0
    373c:	ldr	r0, [r0, #12]
    3740:	bl	1804 <inflate@plt>
    3744:	cmp	r0, #0
    3748:	beq	36f0 <InflateFieldNames+0xc0>
    374c:	b	36bc <InflateFieldNames+0x8c>
    3750:	cmp	r1, #0
    3754:	beq	3780 <InflateFieldNames+0x150>
    3758:	ldr	r0, [r9]
    375c:	rsb	r1, r1, #0
    3760:	mov	r2, #1
    3764:	bl	1a68 <fseek@plt>
    3768:	ldr	r0, [r5, #52]	; 0x34
    376c:	mov	r2, #0
    3770:	ldr	r0, [r0, #12]
    3774:	ldr	r1, [r0, #4]
    3778:	str	r2, [r0, #4]
    377c:	sub	r4, r4, r1
    3780:	mov	r0, r4
    3784:	sub	sp, fp, #28
    3788:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    378c:	.word	0x000464f6

00003790 <ReadDoubleData>:
    3790:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3794:	add	fp, sp, #28
    3798:	sub	sp, sp, #4
    379c:	vpush	{d8-d9}
    37a0:	sub	sp, sp, #2096	; 0x830
    37a4:	cmp	r0, #0
    37a8:	mov	r4, #0
    37ac:	str	r0, [sp, #20]
    37b0:	movne	r7, r1
    37b4:	cmpne	r1, #0
    37b8:	bne	37d0 <ReadDoubleData+0x40>
    37bc:	mov	r0, r4
    37c0:	sub	sp, fp, #48	; 0x30
    37c4:	vpop	{d8-d9}
    37c8:	add	sp, sp, #4
    37cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    37d0:	ldr	r0, [sp, #20]
    37d4:	ldr	r0, [r0]
    37d8:	cmp	r0, #0
    37dc:	beq	37bc <ReadDoubleData+0x2c>
    37e0:	mov	r0, r2
    37e4:	mov	r6, r3
    37e8:	mov	r5, r2
    37ec:	bl	193c <Mat_SizeOf@plt>
    37f0:	str	r0, [sp, #16]
    37f4:	sub	r0, r5, #1
    37f8:	cmp	r0, #12
    37fc:	bhi	37bc <ReadDoubleData+0x2c>
    3800:	add	r1, pc, #4
    3804:	ldr	r0, [r1, r0, lsl #2]
    3808:	add	pc, r1, r0
    380c:	.word	0x00000034
    3810:	.word	0x00000084
    3814:	.word	0x000000d4
    3818:	.word	0x0000013c
    381c:	.word	0x000001a4
    3820:	.word	0x0000020c
    3824:	.word	0x00000274
    3828:	.word	0xffffffb0
    382c:	.word	0x000002d8
    3830:	.word	0xffffffb0
    3834:	.word	0xffffffb0
    3838:	.word	0x00000320
    383c:	.word	0x00000384
    3840:	cmp	r6, #256	; 0x100
    3844:	bgt	3bf4 <ReadDoubleData+0x464>
    3848:	ldr	r0, [sp, #20]
    384c:	ldr	r1, [sp, #16]
    3850:	add	r4, sp, #40	; 0x28
    3854:	mov	r2, r6
    3858:	ldr	r3, [r0]
    385c:	mov	r0, r4
    3860:	bl	18d0 <fread@plt>
    3864:	mov	r8, r0
    3868:	cmp	r6, #1
    386c:	blt	4c70 <ReadDoubleData+0x14e0>
    3870:	ldrsb	r0, [r4], #1
    3874:	subs	r6, r6, #1
    3878:	vmov	s0, r0
    387c:	vcvt.f64.s32	d16, s0
    3880:	vstr	d16, [r7]
    3884:	add	r7, r7, #8
    3888:	bne	3870 <ReadDoubleData+0xe0>
    388c:	b	4c70 <ReadDoubleData+0x14e0>
    3890:	cmp	r6, #256	; 0x100
    3894:	bgt	3cdc <ReadDoubleData+0x54c>
    3898:	ldr	r0, [sp, #20]
    389c:	ldr	r1, [sp, #16]
    38a0:	add	r4, sp, #40	; 0x28
    38a4:	mov	r2, r6
    38a8:	ldr	r3, [r0]
    38ac:	mov	r0, r4
    38b0:	bl	18d0 <fread@plt>
    38b4:	mov	r8, r0
    38b8:	cmp	r6, #1
    38bc:	blt	4c70 <ReadDoubleData+0x14e0>
    38c0:	ldrb	r0, [r4], #1
    38c4:	subs	r6, r6, #1
    38c8:	vmov	s0, r0
    38cc:	vcvt.f64.u32	d16, s0
    38d0:	vstr	d16, [r7]
    38d4:	add	r7, r7, #8
    38d8:	bne	38c0 <ReadDoubleData+0x130>
    38dc:	b	4c70 <ReadDoubleData+0x14e0>
    38e0:	ldr	r0, [sp, #20]
    38e4:	ldr	r0, [r0, #20]
    38e8:	cmp	r0, #0
    38ec:	beq	3dc4 <ReadDoubleData+0x634>
    38f0:	cmp	r6, #256	; 0x100
    38f4:	bgt	3ff4 <ReadDoubleData+0x864>
    38f8:	ldr	r0, [sp, #20]
    38fc:	ldr	r1, [sp, #16]
    3900:	add	r4, sp, #40	; 0x28
    3904:	mov	r2, r6
    3908:	ldr	r3, [r0]
    390c:	mov	r0, r4
    3910:	bl	18d0 <fread@plt>
    3914:	mov	r8, r0
    3918:	cmp	r6, #1
    391c:	blt	4c70 <ReadDoubleData+0x14e0>
    3920:	mov	r0, r4
    3924:	bl	1c50 <Mat_int16Swap>
    3928:	vmov	s0, r0
    392c:	subs	r6, r6, #1
    3930:	add	r4, r4, #2
    3934:	vcvt.f64.s32	d16, s0
    3938:	vstr	d16, [r7]
    393c:	add	r7, r7, #8
    3940:	bne	3920 <ReadDoubleData+0x190>
    3944:	b	4c70 <ReadDoubleData+0x14e0>
    3948:	ldr	r0, [sp, #20]
    394c:	ldr	r0, [r0, #20]
    3950:	cmp	r0, #0
    3954:	beq	3e14 <ReadDoubleData+0x684>
    3958:	cmp	r6, #256	; 0x100
    395c:	bgt	40e0 <ReadDoubleData+0x950>
    3960:	ldr	r0, [sp, #20]
    3964:	ldr	r1, [sp, #16]
    3968:	add	r4, sp, #40	; 0x28
    396c:	mov	r2, r6
    3970:	ldr	r3, [r0]
    3974:	mov	r0, r4
    3978:	bl	18d0 <fread@plt>
    397c:	mov	r8, r0
    3980:	cmp	r6, #1
    3984:	blt	4c70 <ReadDoubleData+0x14e0>
    3988:	mov	r0, r4
    398c:	bl	1c64 <Mat_uint16Swap>
    3990:	vmov	s0, r0
    3994:	subs	r6, r6, #1
    3998:	add	r4, r4, #2
    399c:	vcvt.f64.u32	d16, s0
    39a0:	vstr	d16, [r7]
    39a4:	add	r7, r7, #8
    39a8:	bne	3988 <ReadDoubleData+0x1f8>
    39ac:	b	4c70 <ReadDoubleData+0x14e0>
    39b0:	ldr	r0, [sp, #20]
    39b4:	ldr	r0, [r0, #20]
    39b8:	cmp	r0, #0
    39bc:	beq	3e64 <ReadDoubleData+0x6d4>
    39c0:	cmp	r6, #256	; 0x100
    39c4:	bgt	41cc <ReadDoubleData+0xa3c>
    39c8:	ldr	r0, [sp, #20]
    39cc:	ldr	r1, [sp, #16]
    39d0:	add	r4, sp, #40	; 0x28
    39d4:	mov	r2, r6
    39d8:	ldr	r3, [r0]
    39dc:	mov	r0, r4
    39e0:	bl	18d0 <fread@plt>
    39e4:	mov	r8, r0
    39e8:	cmp	r6, #1
    39ec:	blt	4c70 <ReadDoubleData+0x14e0>
    39f0:	mov	r0, r4
    39f4:	bl	1c28 <Mat_int32Swap>
    39f8:	vmov	s0, r0
    39fc:	subs	r6, r6, #1
    3a00:	add	r4, r4, #4
    3a04:	vcvt.f64.s32	d16, s0
    3a08:	vstr	d16, [r7]
    3a0c:	add	r7, r7, #8
    3a10:	bne	39f0 <ReadDoubleData+0x260>
    3a14:	b	4c70 <ReadDoubleData+0x14e0>
    3a18:	ldr	r0, [sp, #20]
    3a1c:	ldr	r0, [r0, #20]
    3a20:	cmp	r0, #0
    3a24:	beq	3eb4 <ReadDoubleData+0x724>
    3a28:	cmp	r6, #256	; 0x100
    3a2c:	bgt	42b8 <ReadDoubleData+0xb28>
    3a30:	ldr	r0, [sp, #20]
    3a34:	ldr	r1, [sp, #16]
    3a38:	add	r4, sp, #40	; 0x28
    3a3c:	mov	r2, r6
    3a40:	ldr	r3, [r0]
    3a44:	mov	r0, r4
    3a48:	bl	18d0 <fread@plt>
    3a4c:	mov	r8, r0
    3a50:	cmp	r6, #1
    3a54:	blt	4c70 <ReadDoubleData+0x14e0>
    3a58:	mov	r0, r4
    3a5c:	bl	1c3c <Mat_uint32Swap>
    3a60:	vmov	s0, r0
    3a64:	subs	r6, r6, #1
    3a68:	add	r4, r4, #4
    3a6c:	vcvt.f64.u32	d16, s0
    3a70:	vstr	d16, [r7]
    3a74:	add	r7, r7, #8
    3a78:	bne	3a58 <ReadDoubleData+0x2c8>
    3a7c:	b	4c70 <ReadDoubleData+0x14e0>
    3a80:	ldr	r0, [sp, #20]
    3a84:	ldr	r0, [r0, #20]
    3a88:	cmp	r0, #0
    3a8c:	beq	3f04 <ReadDoubleData+0x774>
    3a90:	cmp	r6, #256	; 0x100
    3a94:	bgt	43a4 <ReadDoubleData+0xc14>
    3a98:	ldr	r0, [sp, #20]
    3a9c:	ldr	r1, [sp, #16]
    3aa0:	add	r4, sp, #40	; 0x28
    3aa4:	mov	r2, r6
    3aa8:	ldr	r3, [r0]
    3aac:	mov	r0, r4
    3ab0:	bl	18d0 <fread@plt>
    3ab4:	mov	r8, r0
    3ab8:	cmp	r6, #1
    3abc:	blt	4c70 <ReadDoubleData+0x14e0>
    3ac0:	mov	r0, r4
    3ac4:	bl	1c7c <Mat_floatSwap>
    3ac8:	vcvt.f64.f32	d16, s0
    3acc:	subs	r6, r6, #1
    3ad0:	add	r4, r4, #4
    3ad4:	vstr	d16, [r7]
    3ad8:	add	r7, r7, #8
    3adc:	bne	3ac0 <ReadDoubleData+0x330>
    3ae0:	b	4c70 <ReadDoubleData+0x14e0>
    3ae4:	ldr	r4, [sp, #20]
    3ae8:	ldr	r1, [sp, #16]
    3aec:	mov	r0, r7
    3af0:	mov	r2, r6
    3af4:	ldr	r3, [r4]
    3af8:	bl	18d0 <fread@plt>
    3afc:	mov	r8, r0
    3b00:	ldr	r0, [r4, #20]
    3b04:	cmp	r0, #0
    3b08:	beq	4c70 <ReadDoubleData+0x14e0>
    3b0c:	cmp	r6, #1
    3b10:	blt	4c70 <ReadDoubleData+0x14e0>
    3b14:	mov	r0, r7
    3b18:	bl	1cc0 <Mat_doubleSwap>
    3b1c:	subs	r6, r6, #1
    3b20:	add	r7, r7, #8
    3b24:	bne	3b14 <ReadDoubleData+0x384>
    3b28:	b	4c70 <ReadDoubleData+0x14e0>
    3b2c:	ldr	r0, [sp, #20]
    3b30:	ldr	r0, [r0, #20]
    3b34:	cmp	r0, #0
    3b38:	beq	3f54 <ReadDoubleData+0x7c4>
    3b3c:	cmp	r6, #256	; 0x100
    3b40:	bgt	4488 <ReadDoubleData+0xcf8>
    3b44:	ldr	r0, [sp, #20]
    3b48:	ldr	r1, [sp, #16]
    3b4c:	add	r4, sp, #40	; 0x28
    3b50:	mov	r2, r6
    3b54:	ldr	r3, [r0]
    3b58:	mov	r0, r4
    3b5c:	bl	18d0 <fread@plt>
    3b60:	mov	r8, r0
    3b64:	cmp	r6, #1
    3b68:	blt	4c70 <ReadDoubleData+0x14e0>
    3b6c:	mov	r0, r4
    3b70:	bl	1bbc <Mat_int64Swap>
    3b74:	bl	49578 <__aeabi_l2d>
    3b78:	strd	r0, [r7]
    3b7c:	subs	r6, r6, #1
    3b80:	add	r7, r7, #8
    3b84:	add	r4, r4, #8
    3b88:	bne	3b6c <ReadDoubleData+0x3dc>
    3b8c:	b	4c70 <ReadDoubleData+0x14e0>
    3b90:	ldr	r0, [sp, #20]
    3b94:	ldr	r0, [r0, #20]
    3b98:	cmp	r0, #0
    3b9c:	beq	3fa4 <ReadDoubleData+0x814>
    3ba0:	cmp	r6, #256	; 0x100
    3ba4:	bgt	4570 <ReadDoubleData+0xde0>
    3ba8:	ldr	r0, [sp, #20]
    3bac:	ldr	r1, [sp, #16]
    3bb0:	add	r4, sp, #40	; 0x28
    3bb4:	mov	r2, r6
    3bb8:	ldr	r3, [r0]
    3bbc:	mov	r0, r4
    3bc0:	bl	18d0 <fread@plt>
    3bc4:	mov	r8, r0
    3bc8:	cmp	r6, #1
    3bcc:	blt	4c70 <ReadDoubleData+0x14e0>
    3bd0:	mov	r0, r4
    3bd4:	bl	1c0c <Mat_uint64Swap>
    3bd8:	bl	49564 <__aeabi_ul2d>
    3bdc:	strd	r0, [r7]
    3be0:	subs	r6, r6, #1
    3be4:	add	r7, r7, #8
    3be8:	add	r4, r4, #8
    3bec:	bne	3bd0 <ReadDoubleData+0x440>
    3bf0:	b	4c70 <ReadDoubleData+0x14e0>
    3bf4:	sub	r0, r6, #256	; 0x100
    3bf8:	add	r1, r7, #2048	; 0x800
    3bfc:	add	r4, sp, #40	; 0x28
    3c00:	add	r5, sp, #32
    3c04:	mov	r8, #0
    3c08:	str	r0, [sp, #12]
    3c0c:	mov	r0, #0
    3c10:	mov	sl, r0
    3c14:	ldr	r0, [sp, #20]
    3c18:	mov	r9, r1
    3c1c:	ldr	r1, [sp, #16]
    3c20:	mov	r2, #256	; 0x100
    3c24:	ldr	r3, [r0]
    3c28:	mov	r0, r4
    3c2c:	bl	18d0 <fread@plt>
    3c30:	mov	r1, r7
    3c34:	mov	r2, #0
    3c38:	add	r3, r4, r2
    3c3c:	add	r2, r2, #2
    3c40:	ldrh	r3, [r3]
    3c44:	cmp	r2, #256	; 0x100
    3c48:	strh	r3, [sp, #32]
    3c4c:	vld1.16	{d16[0]}, [r5 :16]
    3c50:	vmovl.s8	q8, d16
    3c54:	vmovl.s16	q0, d16
    3c58:	vcvt.f64.s32	d17, s1
    3c5c:	vcvt.f64.s32	d16, s0
    3c60:	vst1.64	{d16-d17}, [r1]!
    3c64:	bne	3c38 <ReadDoubleData+0x4a8>
    3c68:	ldr	r2, [sp, #12]
    3c6c:	add	r8, r0, r8
    3c70:	add	r0, sl, #256	; 0x100
    3c74:	add	r7, r7, #2048	; 0x800
    3c78:	add	r1, r9, #2048	; 0x800
    3c7c:	cmp	r0, r2
    3c80:	blt	3c10 <ReadDoubleData+0x480>
    3c84:	cmp	r0, r6
    3c88:	bge	4c70 <ReadDoubleData+0x14e0>
    3c8c:	sub	r7, r6, r0
    3c90:	ldr	r0, [sp, #20]
    3c94:	ldr	r1, [sp, #16]
    3c98:	add	r4, sp, #40	; 0x28
    3c9c:	mov	r2, r7
    3ca0:	ldr	r3, [r0]
    3ca4:	mov	r0, r4
    3ca8:	bl	18d0 <fread@plt>
    3cac:	add	r8, r0, r8
    3cb0:	cmp	r7, #1
    3cb4:	blt	4c70 <ReadDoubleData+0x14e0>
    3cb8:	ldr	r0, [sp, #12]
    3cbc:	sub	r0, r0, sl
    3cc0:	ldrsb	r1, [r4], #1
    3cc4:	subs	r0, r0, #1
    3cc8:	vmov	s0, r1
    3ccc:	vcvt.f64.s32	d16, s0
    3cd0:	vstmia	r9!, {d16}
    3cd4:	bne	3cc0 <ReadDoubleData+0x530>
    3cd8:	b	4c70 <ReadDoubleData+0x14e0>
    3cdc:	sub	r0, r6, #256	; 0x100
    3ce0:	add	r1, r7, #2048	; 0x800
    3ce4:	add	r4, sp, #40	; 0x28
    3ce8:	add	r5, sp, #36	; 0x24
    3cec:	mov	r8, #0
    3cf0:	str	r0, [sp, #12]
    3cf4:	mov	r0, #0
    3cf8:	mov	sl, r0
    3cfc:	ldr	r0, [sp, #20]
    3d00:	mov	r9, r1
    3d04:	ldr	r1, [sp, #16]
    3d08:	mov	r2, #256	; 0x100
    3d0c:	ldr	r3, [r0]
    3d10:	mov	r0, r4
    3d14:	bl	18d0 <fread@plt>
    3d18:	mov	r1, r7
    3d1c:	mov	r2, #0
    3d20:	add	r3, r4, r2
    3d24:	add	r2, r2, #2
    3d28:	ldrh	r3, [r3]
    3d2c:	cmp	r2, #256	; 0x100
    3d30:	strh	r3, [sp, #36]	; 0x24
    3d34:	vld1.16	{d16[0]}, [r5 :16]
    3d38:	vmovl.u8	q8, d16
    3d3c:	vmovl.u16	q0, d16
    3d40:	vcvt.f64.u32	d17, s1
    3d44:	vcvt.f64.u32	d16, s0
    3d48:	vst1.64	{d16-d17}, [r1]!
    3d4c:	bne	3d20 <ReadDoubleData+0x590>
    3d50:	ldr	r2, [sp, #12]
    3d54:	add	r8, r0, r8
    3d58:	add	r0, sl, #256	; 0x100
    3d5c:	add	r7, r7, #2048	; 0x800
    3d60:	add	r1, r9, #2048	; 0x800
    3d64:	cmp	r0, r2
    3d68:	blt	3cf8 <ReadDoubleData+0x568>
    3d6c:	cmp	r0, r6
    3d70:	bge	4c70 <ReadDoubleData+0x14e0>
    3d74:	sub	r7, r6, r0
    3d78:	ldr	r0, [sp, #20]
    3d7c:	ldr	r1, [sp, #16]
    3d80:	add	r4, sp, #40	; 0x28
    3d84:	mov	r2, r7
    3d88:	ldr	r3, [r0]
    3d8c:	mov	r0, r4
    3d90:	bl	18d0 <fread@plt>
    3d94:	add	r8, r0, r8
    3d98:	cmp	r7, #1
    3d9c:	blt	4c70 <ReadDoubleData+0x14e0>
    3da0:	ldr	r0, [sp, #12]
    3da4:	sub	r0, r0, sl
    3da8:	ldrb	r1, [r4], #1
    3dac:	subs	r0, r0, #1
    3db0:	vmov	s0, r1
    3db4:	vcvt.f64.u32	d16, s0
    3db8:	vstmia	r9!, {d16}
    3dbc:	bne	3da8 <ReadDoubleData+0x618>
    3dc0:	b	4c70 <ReadDoubleData+0x14e0>
    3dc4:	cmp	r6, #256	; 0x100
    3dc8:	bgt	4658 <ReadDoubleData+0xec8>
    3dcc:	ldr	r0, [sp, #20]
    3dd0:	ldr	r1, [sp, #16]
    3dd4:	add	r4, sp, #40	; 0x28
    3dd8:	mov	r2, r6
    3ddc:	ldr	r3, [r0]
    3de0:	mov	r0, r4
    3de4:	bl	18d0 <fread@plt>
    3de8:	mov	r8, r0
    3dec:	cmp	r6, #1
    3df0:	blt	4c70 <ReadDoubleData+0x14e0>
    3df4:	ldrsh	r0, [r4], #2
    3df8:	subs	r6, r6, #1
    3dfc:	vmov	s0, r0
    3e00:	vcvt.f64.s32	d16, s0
    3e04:	vstr	d16, [r7]
    3e08:	add	r7, r7, #8
    3e0c:	bne	3df4 <ReadDoubleData+0x664>
    3e10:	b	4c70 <ReadDoubleData+0x14e0>
    3e14:	cmp	r6, #256	; 0x100
    3e18:	bgt	4734 <ReadDoubleData+0xfa4>
    3e1c:	ldr	r0, [sp, #20]
    3e20:	ldr	r1, [sp, #16]
    3e24:	add	r4, sp, #40	; 0x28
    3e28:	mov	r2, r6
    3e2c:	ldr	r3, [r0]
    3e30:	mov	r0, r4
    3e34:	bl	18d0 <fread@plt>
    3e38:	mov	r8, r0
    3e3c:	cmp	r6, #1
    3e40:	blt	4c70 <ReadDoubleData+0x14e0>
    3e44:	ldrh	r0, [r4], #2
    3e48:	subs	r6, r6, #1
    3e4c:	vmov	s0, r0
    3e50:	vcvt.f64.u32	d16, s0
    3e54:	vstr	d16, [r7]
    3e58:	add	r7, r7, #8
    3e5c:	bne	3e44 <ReadDoubleData+0x6b4>
    3e60:	b	4c70 <ReadDoubleData+0x14e0>
    3e64:	cmp	r6, #256	; 0x100
    3e68:	bgt	4810 <ReadDoubleData+0x1080>
    3e6c:	ldr	r0, [sp, #20]
    3e70:	ldr	r1, [sp, #16]
    3e74:	add	r4, sp, #40	; 0x28
    3e78:	mov	r2, r6
    3e7c:	ldr	r3, [r0]
    3e80:	mov	r0, r4
    3e84:	bl	18d0 <fread@plt>
    3e88:	mov	r8, r0
    3e8c:	cmp	r6, #1
    3e90:	blt	4c70 <ReadDoubleData+0x14e0>
    3e94:	ldr	r0, [r4], #4
    3e98:	subs	r6, r6, #1
    3e9c:	vmov	s0, r0
    3ea0:	vcvt.f64.s32	d16, s0
    3ea4:	vstr	d16, [r7]
    3ea8:	add	r7, r7, #8
    3eac:	bne	3e94 <ReadDoubleData+0x704>
    3eb0:	b	4c70 <ReadDoubleData+0x14e0>
    3eb4:	cmp	r6, #256	; 0x100
    3eb8:	bgt	48dc <ReadDoubleData+0x114c>
    3ebc:	ldr	r0, [sp, #20]
    3ec0:	ldr	r1, [sp, #16]
    3ec4:	add	r4, sp, #40	; 0x28
    3ec8:	mov	r2, r6
    3ecc:	ldr	r3, [r0]
    3ed0:	mov	r0, r4
    3ed4:	bl	18d0 <fread@plt>
    3ed8:	mov	r8, r0
    3edc:	cmp	r6, #1
    3ee0:	blt	4c70 <ReadDoubleData+0x14e0>
    3ee4:	ldr	r0, [r4], #4
    3ee8:	subs	r6, r6, #1
    3eec:	vmov	s0, r0
    3ef0:	vcvt.f64.u32	d16, s0
    3ef4:	vstr	d16, [r7]
    3ef8:	add	r7, r7, #8
    3efc:	bne	3ee4 <ReadDoubleData+0x754>
    3f00:	b	4c70 <ReadDoubleData+0x14e0>
    3f04:	cmp	r6, #256	; 0x100
    3f08:	bgt	49a8 <ReadDoubleData+0x1218>
    3f0c:	ldr	r0, [sp, #20]
    3f10:	ldr	r1, [sp, #16]
    3f14:	add	r4, sp, #40	; 0x28
    3f18:	mov	r2, r6
    3f1c:	ldr	r3, [r0]
    3f20:	mov	r0, r4
    3f24:	bl	18d0 <fread@plt>
    3f28:	mov	r8, r0
    3f2c:	cmp	r6, #1
    3f30:	blt	4c70 <ReadDoubleData+0x14e0>
    3f34:	vldr	s0, [r4]
    3f38:	subs	r6, r6, #1
    3f3c:	add	r4, r4, #4
    3f40:	vcvt.f64.f32	d16, s0
    3f44:	vstr	d16, [r7]
    3f48:	add	r7, r7, #8
    3f4c:	bne	3f34 <ReadDoubleData+0x7a4>
    3f50:	b	4c70 <ReadDoubleData+0x14e0>
    3f54:	cmp	r6, #256	; 0x100
    3f58:	bgt	4a74 <ReadDoubleData+0x12e4>
    3f5c:	ldr	r0, [sp, #20]
    3f60:	ldr	r1, [sp, #16]
    3f64:	add	r4, sp, #40	; 0x28
    3f68:	mov	r2, r6
    3f6c:	ldr	r3, [r0]
    3f70:	mov	r0, r4
    3f74:	bl	18d0 <fread@plt>
    3f78:	mov	r8, r0
    3f7c:	cmp	r6, #1
    3f80:	blt	4c70 <ReadDoubleData+0x14e0>
    3f84:	ldrd	r0, [r4]
    3f88:	bl	49578 <__aeabi_l2d>
    3f8c:	strd	r0, [r7]
    3f90:	subs	r6, r6, #1
    3f94:	add	r7, r7, #8
    3f98:	add	r4, r4, #8
    3f9c:	bne	3f84 <ReadDoubleData+0x7f4>
    3fa0:	b	4c70 <ReadDoubleData+0x14e0>
    3fa4:	cmp	r6, #256	; 0x100
    3fa8:	bgt	4b74 <ReadDoubleData+0x13e4>
    3fac:	ldr	r0, [sp, #20]
    3fb0:	ldr	r1, [sp, #16]
    3fb4:	add	r4, sp, #40	; 0x28
    3fb8:	mov	r2, r6
    3fbc:	ldr	r3, [r0]
    3fc0:	mov	r0, r4
    3fc4:	bl	18d0 <fread@plt>
    3fc8:	mov	r8, r0
    3fcc:	cmp	r6, #1
    3fd0:	blt	4c70 <ReadDoubleData+0x14e0>
    3fd4:	ldrd	r0, [r4]
    3fd8:	bl	49564 <__aeabi_ul2d>
    3fdc:	strd	r0, [r7]
    3fe0:	subs	r6, r6, #1
    3fe4:	add	r7, r7, #8
    3fe8:	add	r4, r4, #8
    3fec:	bne	3fd4 <ReadDoubleData+0x844>
    3ff0:	b	4c70 <ReadDoubleData+0x14e0>
    3ff4:	sub	r0, r6, #256	; 0x100
    3ff8:	add	r1, r7, #2048	; 0x800
    3ffc:	add	r4, sp, #40	; 0x28
    4000:	mov	r8, #0
    4004:	str	r6, [sp, #4]
    4008:	str	r0, [sp, #8]
    400c:	mov	r0, #0
    4010:	str	r0, [sp, #12]
    4014:	ldr	r0, [sp, #20]
    4018:	mov	sl, r1
    401c:	ldr	r1, [sp, #16]
    4020:	mov	r2, #256	; 0x100
    4024:	ldr	r3, [r0]
    4028:	mov	r0, r4
    402c:	bl	18d0 <fread@plt>
    4030:	mov	r6, r0
    4034:	mov	r5, r7
    4038:	mov	r9, #0
    403c:	add	r0, r4, r9
    4040:	bl	1c50 <Mat_int16Swap>
    4044:	vmov	s0, r0
    4048:	add	r9, r9, #2
    404c:	vcvt.f64.s32	d16, s0
    4050:	cmp	r9, #512	; 0x200
    4054:	vstmia	r5!, {d16}
    4058:	bne	403c <ReadDoubleData+0x8ac>
    405c:	ldr	r5, [sp, #12]
    4060:	ldr	r2, [sp, #8]
    4064:	add	r8, r6, r8
    4068:	add	r7, r7, #2048	; 0x800
    406c:	add	r1, sl, #2048	; 0x800
    4070:	add	r0, r5, #256	; 0x100
    4074:	cmp	r0, r2
    4078:	blt	4010 <ReadDoubleData+0x880>
    407c:	ldr	r1, [sp, #4]
    4080:	cmp	r0, r1
    4084:	bge	4c70 <ReadDoubleData+0x14e0>
    4088:	sub	r6, r1, r0
    408c:	ldr	r0, [sp, #20]
    4090:	ldr	r1, [sp, #16]
    4094:	add	r4, sp, #40	; 0x28
    4098:	mov	r2, r6
    409c:	ldr	r3, [r0]
    40a0:	mov	r0, r4
    40a4:	bl	18d0 <fread@plt>
    40a8:	add	r8, r0, r8
    40ac:	cmp	r6, #1
    40b0:	blt	4c70 <ReadDoubleData+0x14e0>
    40b4:	ldr	r0, [sp, #8]
    40b8:	sub	r5, r0, r5
    40bc:	mov	r0, r4
    40c0:	bl	1c50 <Mat_int16Swap>
    40c4:	vmov	s0, r0
    40c8:	subs	r5, r5, #1
    40cc:	add	r4, r4, #2
    40d0:	vcvt.f64.s32	d16, s0
    40d4:	vstmia	sl!, {d16}
    40d8:	bne	40bc <ReadDoubleData+0x92c>
    40dc:	b	4c70 <ReadDoubleData+0x14e0>
    40e0:	sub	r0, r6, #256	; 0x100
    40e4:	add	r1, r7, #2048	; 0x800
    40e8:	add	r4, sp, #40	; 0x28
    40ec:	mov	r8, #0
    40f0:	str	r6, [sp, #4]
    40f4:	str	r0, [sp, #8]
    40f8:	mov	r0, #0
    40fc:	str	r0, [sp, #12]
    4100:	ldr	r0, [sp, #20]
    4104:	mov	sl, r1
    4108:	ldr	r1, [sp, #16]
    410c:	mov	r2, #256	; 0x100
    4110:	ldr	r3, [r0]
    4114:	mov	r0, r4
    4118:	bl	18d0 <fread@plt>
    411c:	mov	r6, r0
    4120:	mov	r5, r7
    4124:	mov	r9, #0
    4128:	add	r0, r4, r9
    412c:	bl	1c64 <Mat_uint16Swap>
    4130:	vmov	s0, r0
    4134:	add	r9, r9, #2
    4138:	vcvt.f64.u32	d16, s0
    413c:	cmp	r9, #512	; 0x200
    4140:	vstmia	r5!, {d16}
    4144:	bne	4128 <ReadDoubleData+0x998>
    4148:	ldr	r5, [sp, #12]
    414c:	ldr	r2, [sp, #8]
    4150:	add	r8, r6, r8
    4154:	add	r7, r7, #2048	; 0x800
    4158:	add	r1, sl, #2048	; 0x800
    415c:	add	r0, r5, #256	; 0x100
    4160:	cmp	r0, r2
    4164:	blt	40fc <ReadDoubleData+0x96c>
    4168:	ldr	r1, [sp, #4]
    416c:	cmp	r0, r1
    4170:	bge	4c70 <ReadDoubleData+0x14e0>
    4174:	sub	r6, r1, r0
    4178:	ldr	r0, [sp, #20]
    417c:	ldr	r1, [sp, #16]
    4180:	add	r4, sp, #40	; 0x28
    4184:	mov	r2, r6
    4188:	ldr	r3, [r0]
    418c:	mov	r0, r4
    4190:	bl	18d0 <fread@plt>
    4194:	add	r8, r0, r8
    4198:	cmp	r6, #1
    419c:	blt	4c70 <ReadDoubleData+0x14e0>
    41a0:	ldr	r0, [sp, #8]
    41a4:	sub	r5, r0, r5
    41a8:	mov	r0, r4
    41ac:	bl	1c64 <Mat_uint16Swap>
    41b0:	vmov	s0, r0
    41b4:	subs	r5, r5, #1
    41b8:	add	r4, r4, #2
    41bc:	vcvt.f64.u32	d16, s0
    41c0:	vstmia	sl!, {d16}
    41c4:	bne	41a8 <ReadDoubleData+0xa18>
    41c8:	b	4c70 <ReadDoubleData+0x14e0>
    41cc:	sub	r0, r6, #256	; 0x100
    41d0:	add	r1, r7, #2048	; 0x800
    41d4:	add	r4, sp, #40	; 0x28
    41d8:	mov	r8, #0
    41dc:	str	r6, [sp, #4]
    41e0:	str	r0, [sp, #8]
    41e4:	mov	r0, #0
    41e8:	str	r0, [sp, #12]
    41ec:	ldr	r0, [sp, #20]
    41f0:	mov	sl, r1
    41f4:	ldr	r1, [sp, #16]
    41f8:	mov	r2, #256	; 0x100
    41fc:	ldr	r3, [r0]
    4200:	mov	r0, r4
    4204:	bl	18d0 <fread@plt>
    4208:	mov	r6, r0
    420c:	mov	r5, r7
    4210:	mov	r9, #0
    4214:	add	r0, r4, r9
    4218:	bl	1c28 <Mat_int32Swap>
    421c:	vmov	s0, r0
    4220:	add	r9, r9, #4
    4224:	vcvt.f64.s32	d16, s0
    4228:	cmp	r9, #1024	; 0x400
    422c:	vstmia	r5!, {d16}
    4230:	bne	4214 <ReadDoubleData+0xa84>
    4234:	ldr	r5, [sp, #12]
    4238:	ldr	r2, [sp, #8]
    423c:	add	r8, r6, r8
    4240:	add	r7, r7, #2048	; 0x800
    4244:	add	r1, sl, #2048	; 0x800
    4248:	add	r0, r5, #256	; 0x100
    424c:	cmp	r0, r2
    4250:	blt	41e8 <ReadDoubleData+0xa58>
    4254:	ldr	r1, [sp, #4]
    4258:	cmp	r0, r1
    425c:	bge	4c70 <ReadDoubleData+0x14e0>
    4260:	sub	r6, r1, r0
    4264:	ldr	r0, [sp, #20]
    4268:	ldr	r1, [sp, #16]
    426c:	add	r4, sp, #40	; 0x28
    4270:	mov	r2, r6
    4274:	ldr	r3, [r0]
    4278:	mov	r0, r4
    427c:	bl	18d0 <fread@plt>
    4280:	add	r8, r0, r8
    4284:	cmp	r6, #1
    4288:	blt	4c70 <ReadDoubleData+0x14e0>
    428c:	ldr	r0, [sp, #8]
    4290:	sub	r5, r0, r5
    4294:	mov	r0, r4
    4298:	bl	1c28 <Mat_int32Swap>
    429c:	vmov	s0, r0
    42a0:	subs	r5, r5, #1
    42a4:	add	r4, r4, #4
    42a8:	vcvt.f64.s32	d16, s0
    42ac:	vstmia	sl!, {d16}
    42b0:	bne	4294 <ReadDoubleData+0xb04>
    42b4:	b	4c70 <ReadDoubleData+0x14e0>
    42b8:	sub	r0, r6, #256	; 0x100
    42bc:	add	r1, r7, #2048	; 0x800
    42c0:	add	r4, sp, #40	; 0x28
    42c4:	mov	r8, #0
    42c8:	str	r6, [sp, #4]
    42cc:	str	r0, [sp, #8]
    42d0:	mov	r0, #0
    42d4:	str	r0, [sp, #12]
    42d8:	ldr	r0, [sp, #20]
    42dc:	mov	sl, r1
    42e0:	ldr	r1, [sp, #16]
    42e4:	mov	r2, #256	; 0x100
    42e8:	ldr	r3, [r0]
    42ec:	mov	r0, r4
    42f0:	bl	18d0 <fread@plt>
    42f4:	mov	r6, r0
    42f8:	mov	r5, r7
    42fc:	mov	r9, #0
    4300:	add	r0, r4, r9
    4304:	bl	1c3c <Mat_uint32Swap>
    4308:	vmov	s0, r0
    430c:	add	r9, r9, #4
    4310:	vcvt.f64.u32	d16, s0
    4314:	cmp	r9, #1024	; 0x400
    4318:	vstmia	r5!, {d16}
    431c:	bne	4300 <ReadDoubleData+0xb70>
    4320:	ldr	r5, [sp, #12]
    4324:	ldr	r2, [sp, #8]
    4328:	add	r8, r6, r8
    432c:	add	r7, r7, #2048	; 0x800
    4330:	add	r1, sl, #2048	; 0x800
    4334:	add	r0, r5, #256	; 0x100
    4338:	cmp	r0, r2
    433c:	blt	42d4 <ReadDoubleData+0xb44>
    4340:	ldr	r1, [sp, #4]
    4344:	cmp	r0, r1
    4348:	bge	4c70 <ReadDoubleData+0x14e0>
    434c:	sub	r6, r1, r0
    4350:	ldr	r0, [sp, #20]
    4354:	ldr	r1, [sp, #16]
    4358:	add	r4, sp, #40	; 0x28
    435c:	mov	r2, r6
    4360:	ldr	r3, [r0]
    4364:	mov	r0, r4
    4368:	bl	18d0 <fread@plt>
    436c:	add	r8, r0, r8
    4370:	cmp	r6, #1
    4374:	blt	4c70 <ReadDoubleData+0x14e0>
    4378:	ldr	r0, [sp, #8]
    437c:	sub	r5, r0, r5
    4380:	mov	r0, r4
    4384:	bl	1c3c <Mat_uint32Swap>
    4388:	vmov	s0, r0
    438c:	subs	r5, r5, #1
    4390:	add	r4, r4, #4
    4394:	vcvt.f64.u32	d16, s0
    4398:	vstmia	sl!, {d16}
    439c:	bne	4380 <ReadDoubleData+0xbf0>
    43a0:	b	4c70 <ReadDoubleData+0x14e0>
    43a4:	sub	r0, r6, #256	; 0x100
    43a8:	add	r1, r7, #2048	; 0x800
    43ac:	add	r4, sp, #40	; 0x28
    43b0:	mov	r8, #0
    43b4:	str	r6, [sp, #4]
    43b8:	str	r0, [sp, #8]
    43bc:	mov	r0, #0
    43c0:	str	r0, [sp, #12]
    43c4:	ldr	r0, [sp, #20]
    43c8:	mov	sl, r1
    43cc:	ldr	r1, [sp, #16]
    43d0:	mov	r2, #256	; 0x100
    43d4:	ldr	r3, [r0]
    43d8:	mov	r0, r4
    43dc:	bl	18d0 <fread@plt>
    43e0:	mov	r6, r0
    43e4:	mov	r5, r7
    43e8:	mov	r9, #0
    43ec:	add	r0, r4, r9
    43f0:	bl	1c7c <Mat_floatSwap>
    43f4:	vcvt.f64.f32	d16, s0
    43f8:	add	r9, r9, #4
    43fc:	vstmia	r5!, {d16}
    4400:	cmp	r9, #1024	; 0x400
    4404:	bne	43ec <ReadDoubleData+0xc5c>
    4408:	ldr	r5, [sp, #12]
    440c:	ldr	r2, [sp, #8]
    4410:	add	r8, r6, r8
    4414:	add	r7, r7, #2048	; 0x800
    4418:	add	r1, sl, #2048	; 0x800
    441c:	add	r0, r5, #256	; 0x100
    4420:	cmp	r0, r2
    4424:	blt	43c0 <ReadDoubleData+0xc30>
    4428:	ldr	r1, [sp, #4]
    442c:	cmp	r0, r1
    4430:	bge	4c70 <ReadDoubleData+0x14e0>
    4434:	sub	r6, r1, r0
    4438:	ldr	r0, [sp, #20]
    443c:	ldr	r1, [sp, #16]
    4440:	add	r4, sp, #40	; 0x28
    4444:	mov	r2, r6
    4448:	ldr	r3, [r0]
    444c:	mov	r0, r4
    4450:	bl	18d0 <fread@plt>
    4454:	add	r8, r0, r8
    4458:	cmp	r6, #1
    445c:	blt	4c70 <ReadDoubleData+0x14e0>
    4460:	ldr	r0, [sp, #8]
    4464:	sub	r5, r0, r5
    4468:	mov	r0, r4
    446c:	bl	1c7c <Mat_floatSwap>
    4470:	vcvt.f64.f32	d16, s0
    4474:	subs	r5, r5, #1
    4478:	add	r4, r4, #4
    447c:	vstmia	sl!, {d16}
    4480:	bne	4468 <ReadDoubleData+0xcd8>
    4484:	b	4c70 <ReadDoubleData+0x14e0>
    4488:	sub	r0, r6, #256	; 0x100
    448c:	add	r1, r7, #2048	; 0x800
    4490:	add	r4, sp, #40	; 0x28
    4494:	mov	r8, #0
    4498:	str	r6, [sp, #4]
    449c:	str	r0, [sp, #12]
    44a0:	mov	r0, #0
    44a4:	mov	r9, r0
    44a8:	ldr	r0, [sp, #20]
    44ac:	mov	r6, r1
    44b0:	ldr	r1, [sp, #16]
    44b4:	mov	r2, #256	; 0x100
    44b8:	ldr	r3, [r0]
    44bc:	mov	r0, r4
    44c0:	bl	18d0 <fread@plt>
    44c4:	mov	sl, r0
    44c8:	mov	r5, #0
    44cc:	add	r0, r4, r5
    44d0:	bl	1bbc <Mat_int64Swap>
    44d4:	bl	49578 <__aeabi_l2d>
    44d8:	mov	r2, r7
    44dc:	str	r0, [r2, r5]!
    44e0:	add	r5, r5, #8
    44e4:	cmp	r5, #2048	; 0x800
    44e8:	str	r1, [r2, #4]
    44ec:	bne	44cc <ReadDoubleData+0xd3c>
    44f0:	ldr	r2, [sp, #12]
    44f4:	add	r0, r9, #256	; 0x100
    44f8:	add	r8, sl, r8
    44fc:	add	r7, r7, #2048	; 0x800
    4500:	add	r1, r6, #2048	; 0x800
    4504:	cmp	r0, r2
    4508:	blt	44a4 <ReadDoubleData+0xd14>
    450c:	ldr	r1, [sp, #4]
    4510:	cmp	r0, r1
    4514:	bge	4c70 <ReadDoubleData+0x14e0>
    4518:	sub	r7, r1, r0
    451c:	ldr	r0, [sp, #20]
    4520:	ldr	r1, [sp, #16]
    4524:	add	r4, sp, #40	; 0x28
    4528:	mov	r2, r7
    452c:	ldr	r3, [r0]
    4530:	mov	r0, r4
    4534:	bl	18d0 <fread@plt>
    4538:	add	r8, r0, r8
    453c:	cmp	r7, #1
    4540:	blt	4c70 <ReadDoubleData+0x14e0>
    4544:	ldr	r0, [sp, #12]
    4548:	sub	r5, r0, r9
    454c:	mov	r0, r4
    4550:	bl	1bbc <Mat_int64Swap>
    4554:	bl	49578 <__aeabi_l2d>
    4558:	strd	r0, [r6]
    455c:	add	r6, r6, #8
    4560:	subs	r5, r5, #1
    4564:	add	r4, r4, #8
    4568:	bne	454c <ReadDoubleData+0xdbc>
    456c:	b	4c70 <ReadDoubleData+0x14e0>
    4570:	sub	r0, r6, #256	; 0x100
    4574:	add	r1, r7, #2048	; 0x800
    4578:	add	r4, sp, #40	; 0x28
    457c:	mov	r8, #0
    4580:	str	r6, [sp, #4]
    4584:	str	r0, [sp, #12]
    4588:	mov	r0, #0
    458c:	mov	r9, r0
    4590:	ldr	r0, [sp, #20]
    4594:	mov	r6, r1
    4598:	ldr	r1, [sp, #16]
    459c:	mov	r2, #256	; 0x100
    45a0:	ldr	r3, [r0]
    45a4:	mov	r0, r4
    45a8:	bl	18d0 <fread@plt>
    45ac:	mov	sl, r0
    45b0:	mov	r5, #0
    45b4:	add	r0, r4, r5
    45b8:	bl	1c0c <Mat_uint64Swap>
    45bc:	bl	49564 <__aeabi_ul2d>
    45c0:	mov	r2, r7
    45c4:	str	r0, [r2, r5]!
    45c8:	add	r5, r5, #8
    45cc:	cmp	r5, #2048	; 0x800
    45d0:	str	r1, [r2, #4]
    45d4:	bne	45b4 <ReadDoubleData+0xe24>
    45d8:	ldr	r2, [sp, #12]
    45dc:	add	r0, r9, #256	; 0x100
    45e0:	add	r8, sl, r8
    45e4:	add	r7, r7, #2048	; 0x800
    45e8:	add	r1, r6, #2048	; 0x800
    45ec:	cmp	r0, r2
    45f0:	blt	458c <ReadDoubleData+0xdfc>
    45f4:	ldr	r1, [sp, #4]
    45f8:	cmp	r0, r1
    45fc:	bge	4c70 <ReadDoubleData+0x14e0>
    4600:	sub	r7, r1, r0
    4604:	ldr	r0, [sp, #20]
    4608:	ldr	r1, [sp, #16]
    460c:	add	r4, sp, #40	; 0x28
    4610:	mov	r2, r7
    4614:	ldr	r3, [r0]
    4618:	mov	r0, r4
    461c:	bl	18d0 <fread@plt>
    4620:	add	r8, r0, r8
    4624:	cmp	r7, #1
    4628:	blt	4c70 <ReadDoubleData+0x14e0>
    462c:	ldr	r0, [sp, #12]
    4630:	sub	r5, r0, r9
    4634:	mov	r0, r4
    4638:	bl	1c0c <Mat_uint64Swap>
    463c:	bl	49564 <__aeabi_ul2d>
    4640:	strd	r0, [r6]
    4644:	add	r6, r6, #8
    4648:	subs	r5, r5, #1
    464c:	add	r4, r4, #8
    4650:	bne	4634 <ReadDoubleData+0xea4>
    4654:	b	4c70 <ReadDoubleData+0x14e0>
    4658:	add	r1, r7, #2048	; 0x800
    465c:	sub	sl, r6, #256	; 0x100
    4660:	mov	r0, #0
    4664:	add	r4, sp, #40	; 0x28
    4668:	add	r5, sp, #24
    466c:	mov	r8, #0
    4670:	str	r6, [sp, #4]
    4674:	mov	r9, r0
    4678:	ldr	r0, [sp, #20]
    467c:	mov	r6, r1
    4680:	ldr	r1, [sp, #16]
    4684:	mov	r2, #256	; 0x100
    4688:	ldr	r3, [r0]
    468c:	mov	r0, r4
    4690:	bl	18d0 <fread@plt>
    4694:	mov	r1, r7
    4698:	mov	r2, #0
    469c:	ldr	r3, [r4, r2]
    46a0:	add	r2, r2, #4
    46a4:	cmp	r2, #512	; 0x200
    46a8:	str	r3, [sp, #24]
    46ac:	vld1.32	{d16[0]}, [r5 :32]
    46b0:	vmovl.s16	q0, d16
    46b4:	vcvt.f64.s32	d17, s1
    46b8:	vcvt.f64.s32	d16, s0
    46bc:	vst1.64	{d16-d17}, [r1]!
    46c0:	bne	469c <ReadDoubleData+0xf0c>
    46c4:	add	r8, r0, r8
    46c8:	add	r0, r9, #256	; 0x100
    46cc:	add	r7, r7, #2048	; 0x800
    46d0:	add	r1, r6, #2048	; 0x800
    46d4:	cmp	r0, sl
    46d8:	blt	4674 <ReadDoubleData+0xee4>
    46dc:	ldr	r1, [sp, #4]
    46e0:	cmp	r0, r1
    46e4:	bge	4c70 <ReadDoubleData+0x14e0>
    46e8:	sub	r7, r1, r0
    46ec:	ldr	r0, [sp, #20]
    46f0:	ldr	r1, [sp, #16]
    46f4:	add	r4, sp, #40	; 0x28
    46f8:	mov	r2, r7
    46fc:	ldr	r3, [r0]
    4700:	mov	r0, r4
    4704:	bl	18d0 <fread@plt>
    4708:	add	r8, r0, r8
    470c:	cmp	r7, #1
    4710:	blt	4c70 <ReadDoubleData+0x14e0>
    4714:	sub	r0, sl, r9
    4718:	ldrsh	r1, [r4], #2
    471c:	subs	r0, r0, #1
    4720:	vmov	s0, r1
    4724:	vcvt.f64.s32	d16, s0
    4728:	vstmia	r6!, {d16}
    472c:	bne	4718 <ReadDoubleData+0xf88>
    4730:	b	4c70 <ReadDoubleData+0x14e0>
    4734:	add	r1, r7, #2048	; 0x800
    4738:	sub	sl, r6, #256	; 0x100
    473c:	mov	r0, #0
    4740:	add	r4, sp, #40	; 0x28
    4744:	add	r5, sp, #28
    4748:	mov	r8, #0
    474c:	str	r6, [sp, #4]
    4750:	mov	r9, r0
    4754:	ldr	r0, [sp, #20]
    4758:	mov	r6, r1
    475c:	ldr	r1, [sp, #16]
    4760:	mov	r2, #256	; 0x100
    4764:	ldr	r3, [r0]
    4768:	mov	r0, r4
    476c:	bl	18d0 <fread@plt>
    4770:	mov	r1, r7
    4774:	mov	r2, #0
    4778:	ldr	r3, [r4, r2]
    477c:	add	r2, r2, #4
    4780:	cmp	r2, #512	; 0x200
    4784:	str	r3, [sp, #28]
    4788:	vld1.32	{d16[0]}, [r5 :32]
    478c:	vmovl.u16	q0, d16
    4790:	vcvt.f64.u32	d17, s1
    4794:	vcvt.f64.u32	d16, s0
    4798:	vst1.64	{d16-d17}, [r1]!
    479c:	bne	4778 <ReadDoubleData+0xfe8>
    47a0:	add	r8, r0, r8
    47a4:	add	r0, r9, #256	; 0x100
    47a8:	add	r7, r7, #2048	; 0x800
    47ac:	add	r1, r6, #2048	; 0x800
    47b0:	cmp	r0, sl
    47b4:	blt	4750 <ReadDoubleData+0xfc0>
    47b8:	ldr	r1, [sp, #4]
    47bc:	cmp	r0, r1
    47c0:	bge	4c70 <ReadDoubleData+0x14e0>
    47c4:	sub	r7, r1, r0
    47c8:	ldr	r0, [sp, #20]
    47cc:	ldr	r1, [sp, #16]
    47d0:	add	r4, sp, #40	; 0x28
    47d4:	mov	r2, r7
    47d8:	ldr	r3, [r0]
    47dc:	mov	r0, r4
    47e0:	bl	18d0 <fread@plt>
    47e4:	add	r8, r0, r8
    47e8:	cmp	r7, #1
    47ec:	blt	4c70 <ReadDoubleData+0x14e0>
    47f0:	sub	r0, sl, r9
    47f4:	ldrh	r1, [r4], #2
    47f8:	subs	r0, r0, #1
    47fc:	vmov	s0, r1
    4800:	vcvt.f64.u32	d16, s0
    4804:	vstmia	r6!, {d16}
    4808:	bne	47f4 <ReadDoubleData+0x1064>
    480c:	b	4c70 <ReadDoubleData+0x14e0>
    4810:	add	r1, r7, #2048	; 0x800
    4814:	mov	r5, r6
    4818:	sub	sl, r6, #256	; 0x100
    481c:	mov	r0, #0
    4820:	add	r4, sp, #40	; 0x28
    4824:	mov	r8, #0
    4828:	mov	r9, r0
    482c:	ldr	r0, [sp, #20]
    4830:	mov	r6, r1
    4834:	ldr	r1, [sp, #16]
    4838:	mov	r2, #256	; 0x100
    483c:	ldr	r3, [r0]
    4840:	mov	r0, r4
    4844:	bl	18d0 <fread@plt>
    4848:	mov	r1, r7
    484c:	mov	r2, #0
    4850:	add	r3, r4, r2
    4854:	add	r2, r2, #8
    4858:	vldr	d0, [r3]
    485c:	cmp	r2, #1024	; 0x400
    4860:	vcvt.f64.s32	d17, s1
    4864:	vcvt.f64.s32	d16, s0
    4868:	vst1.64	{d16-d17}, [r1]!
    486c:	bne	4850 <ReadDoubleData+0x10c0>
    4870:	add	r8, r0, r8
    4874:	add	r0, r9, #256	; 0x100
    4878:	add	r7, r7, #2048	; 0x800
    487c:	add	r1, r6, #2048	; 0x800
    4880:	cmp	r0, sl
    4884:	blt	4828 <ReadDoubleData+0x1098>
    4888:	cmp	r0, r5
    488c:	bge	4c70 <ReadDoubleData+0x14e0>
    4890:	sub	r7, r5, r0
    4894:	ldr	r0, [sp, #20]
    4898:	ldr	r1, [sp, #16]
    489c:	add	r4, sp, #40	; 0x28
    48a0:	mov	r2, r7
    48a4:	ldr	r3, [r0]
    48a8:	mov	r0, r4
    48ac:	bl	18d0 <fread@plt>
    48b0:	add	r8, r0, r8
    48b4:	cmp	r7, #1
    48b8:	blt	4c70 <ReadDoubleData+0x14e0>
    48bc:	sub	r0, sl, r9
    48c0:	ldr	r1, [r4], #4
    48c4:	subs	r0, r0, #1
    48c8:	vmov	s0, r1
    48cc:	vcvt.f64.s32	d16, s0
    48d0:	vstmia	r6!, {d16}
    48d4:	bne	48c0 <ReadDoubleData+0x1130>
    48d8:	b	4c70 <ReadDoubleData+0x14e0>
    48dc:	add	r1, r7, #2048	; 0x800
    48e0:	mov	r5, r6
    48e4:	sub	sl, r6, #256	; 0x100
    48e8:	mov	r0, #0
    48ec:	add	r4, sp, #40	; 0x28
    48f0:	mov	r8, #0
    48f4:	mov	r9, r0
    48f8:	ldr	r0, [sp, #20]
    48fc:	mov	r6, r1
    4900:	ldr	r1, [sp, #16]
    4904:	mov	r2, #256	; 0x100
    4908:	ldr	r3, [r0]
    490c:	mov	r0, r4
    4910:	bl	18d0 <fread@plt>
    4914:	mov	r1, r7
    4918:	mov	r2, #0
    491c:	add	r3, r4, r2
    4920:	add	r2, r2, #8
    4924:	vldr	d0, [r3]
    4928:	cmp	r2, #1024	; 0x400
    492c:	vcvt.f64.u32	d17, s1
    4930:	vcvt.f64.u32	d16, s0
    4934:	vst1.64	{d16-d17}, [r1]!
    4938:	bne	491c <ReadDoubleData+0x118c>
    493c:	add	r8, r0, r8
    4940:	add	r0, r9, #256	; 0x100
    4944:	add	r7, r7, #2048	; 0x800
    4948:	add	r1, r6, #2048	; 0x800
    494c:	cmp	r0, sl
    4950:	blt	48f4 <ReadDoubleData+0x1164>
    4954:	cmp	r0, r5
    4958:	bge	4c70 <ReadDoubleData+0x14e0>
    495c:	sub	r7, r5, r0
    4960:	ldr	r0, [sp, #20]
    4964:	ldr	r1, [sp, #16]
    4968:	add	r4, sp, #40	; 0x28
    496c:	mov	r2, r7
    4970:	ldr	r3, [r0]
    4974:	mov	r0, r4
    4978:	bl	18d0 <fread@plt>
    497c:	add	r8, r0, r8
    4980:	cmp	r7, #1
    4984:	blt	4c70 <ReadDoubleData+0x14e0>
    4988:	sub	r0, sl, r9
    498c:	ldr	r1, [r4], #4
    4990:	subs	r0, r0, #1
    4994:	vmov	s0, r1
    4998:	vcvt.f64.u32	d16, s0
    499c:	vstmia	r6!, {d16}
    49a0:	bne	498c <ReadDoubleData+0x11fc>
    49a4:	b	4c70 <ReadDoubleData+0x14e0>
    49a8:	add	r1, r7, #2048	; 0x800
    49ac:	mov	r5, r6
    49b0:	sub	sl, r6, #256	; 0x100
    49b4:	mov	r0, #0
    49b8:	add	r4, sp, #40	; 0x28
    49bc:	mov	r8, #0
    49c0:	mov	r9, r0
    49c4:	ldr	r0, [sp, #20]
    49c8:	mov	r6, r1
    49cc:	ldr	r1, [sp, #16]
    49d0:	mov	r2, #256	; 0x100
    49d4:	ldr	r3, [r0]
    49d8:	mov	r0, r4
    49dc:	bl	18d0 <fread@plt>
    49e0:	mov	r1, r7
    49e4:	mov	r2, #0
    49e8:	add	r3, r4, r2
    49ec:	add	r2, r2, #8
    49f0:	vldr	d0, [r3]
    49f4:	cmp	r2, #1024	; 0x400
    49f8:	vcvt.f64.f32	d17, s1
    49fc:	vcvt.f64.f32	d16, s0
    4a00:	vst1.64	{d16-d17}, [r1]!
    4a04:	bne	49e8 <ReadDoubleData+0x1258>
    4a08:	add	r8, r0, r8
    4a0c:	add	r0, r9, #256	; 0x100
    4a10:	add	r7, r7, #2048	; 0x800
    4a14:	add	r1, r6, #2048	; 0x800
    4a18:	cmp	r0, sl
    4a1c:	blt	49c0 <ReadDoubleData+0x1230>
    4a20:	cmp	r0, r5
    4a24:	bge	4c70 <ReadDoubleData+0x14e0>
    4a28:	sub	r7, r5, r0
    4a2c:	ldr	r0, [sp, #20]
    4a30:	ldr	r1, [sp, #16]
    4a34:	add	r4, sp, #40	; 0x28
    4a38:	mov	r2, r7
    4a3c:	ldr	r3, [r0]
    4a40:	mov	r0, r4
    4a44:	bl	18d0 <fread@plt>
    4a48:	add	r8, r0, r8
    4a4c:	cmp	r7, #1
    4a50:	blt	4c70 <ReadDoubleData+0x14e0>
    4a54:	sub	r0, sl, r9
    4a58:	vldr	s0, [r4]
    4a5c:	subs	r0, r0, #1
    4a60:	add	r4, r4, #4
    4a64:	vcvt.f64.f32	d16, s0
    4a68:	vstmia	r6!, {d16}
    4a6c:	bne	4a58 <ReadDoubleData+0x12c8>
    4a70:	b	4c70 <ReadDoubleData+0x14e0>
    4a74:	sub	r0, r6, #256	; 0x100
    4a78:	add	r1, r7, #2048	; 0x800
    4a7c:	add	r4, sp, #40	; 0x28
    4a80:	mov	r8, #0
    4a84:	str	r0, [sp, #8]
    4a88:	mov	r0, #0
    4a8c:	str	r0, [sp, #12]
    4a90:	ldr	r0, [sp, #20]
    4a94:	mov	r9, r1
    4a98:	ldr	r1, [sp, #16]
    4a9c:	mov	r2, #256	; 0x100
    4aa0:	ldr	r3, [r0]
    4aa4:	mov	r0, r4
    4aa8:	bl	18d0 <fread@plt>
    4aac:	mov	sl, r0
    4ab0:	mov	r5, #0
    4ab4:	add	r0, r4, r5
    4ab8:	vld1.64	{d8-d9}, [r0]
    4abc:	vmov.32	r0, d9[0]
    4ac0:	vmov.32	r1, d9[1]
    4ac4:	bl	49578 <__aeabi_l2d>
    4ac8:	vmov.32	r2, d8[0]
    4acc:	vmov.32	r3, d8[1]
    4ad0:	vmov	d9, r0, r1
    4ad4:	mov	r0, r2
    4ad8:	mov	r1, r3
    4adc:	bl	49578 <__aeabi_l2d>
    4ae0:	vmov	d8, r0, r1
    4ae4:	add	r0, r7, r5
    4ae8:	add	r5, r5, #16
    4aec:	cmp	r5, #2048	; 0x800
    4af0:	vst1.64	{d8-d9}, [r0]
    4af4:	bne	4ab4 <ReadDoubleData+0x1324>
    4af8:	ldr	r5, [sp, #12]
    4afc:	ldr	r2, [sp, #8]
    4b00:	add	r8, sl, r8
    4b04:	add	r7, r7, #2048	; 0x800
    4b08:	add	r1, r9, #2048	; 0x800
    4b0c:	add	r0, r5, #256	; 0x100
    4b10:	cmp	r0, r2
    4b14:	blt	4a8c <ReadDoubleData+0x12fc>
    4b18:	cmp	r0, r6
    4b1c:	bge	4c70 <ReadDoubleData+0x14e0>
    4b20:	sub	r7, r6, r0
    4b24:	ldr	r0, [sp, #20]
    4b28:	ldr	r1, [sp, #16]
    4b2c:	add	r4, sp, #40	; 0x28
    4b30:	mov	r2, r7
    4b34:	ldr	r3, [r0]
    4b38:	mov	r0, r4
    4b3c:	bl	18d0 <fread@plt>
    4b40:	add	r8, r0, r8
    4b44:	cmp	r7, #1
    4b48:	blt	4c70 <ReadDoubleData+0x14e0>
    4b4c:	ldr	r0, [sp, #8]
    4b50:	sub	r5, r0, r5
    4b54:	ldrd	r0, [r4]
    4b58:	bl	49578 <__aeabi_l2d>
    4b5c:	strd	r0, [r9]
    4b60:	add	r9, r9, #8
    4b64:	subs	r5, r5, #1
    4b68:	add	r4, r4, #8
    4b6c:	bne	4b54 <ReadDoubleData+0x13c4>
    4b70:	b	4c70 <ReadDoubleData+0x14e0>
    4b74:	sub	r0, r6, #256	; 0x100
    4b78:	add	r1, r7, #2048	; 0x800
    4b7c:	add	r4, sp, #40	; 0x28
    4b80:	mov	r8, #0
    4b84:	str	r0, [sp, #8]
    4b88:	mov	r0, #0
    4b8c:	str	r0, [sp, #12]
    4b90:	ldr	r0, [sp, #20]
    4b94:	mov	r9, r1
    4b98:	ldr	r1, [sp, #16]
    4b9c:	mov	r2, #256	; 0x100
    4ba0:	ldr	r3, [r0]
    4ba4:	mov	r0, r4
    4ba8:	bl	18d0 <fread@plt>
    4bac:	mov	sl, r0
    4bb0:	mov	r5, #0
    4bb4:	add	r0, r4, r5
    4bb8:	vld1.64	{d8-d9}, [r0]
    4bbc:	vmov.32	r0, d9[0]
    4bc0:	vmov.32	r1, d9[1]
    4bc4:	bl	49564 <__aeabi_ul2d>
    4bc8:	vmov.32	r2, d8[0]
    4bcc:	vmov.32	r3, d8[1]
    4bd0:	vmov	d9, r0, r1
    4bd4:	mov	r0, r2
    4bd8:	mov	r1, r3
    4bdc:	bl	49564 <__aeabi_ul2d>
    4be0:	vmov	d8, r0, r1
    4be4:	add	r0, r7, r5
    4be8:	add	r5, r5, #16
    4bec:	cmp	r5, #2048	; 0x800
    4bf0:	vst1.64	{d8-d9}, [r0]
    4bf4:	bne	4bb4 <ReadDoubleData+0x1424>
    4bf8:	ldr	r5, [sp, #12]
    4bfc:	ldr	r2, [sp, #8]
    4c00:	add	r8, sl, r8
    4c04:	add	r7, r7, #2048	; 0x800
    4c08:	add	r1, r9, #2048	; 0x800
    4c0c:	add	r0, r5, #256	; 0x100
    4c10:	cmp	r0, r2
    4c14:	blt	4b8c <ReadDoubleData+0x13fc>
    4c18:	cmp	r0, r6
    4c1c:	bge	4c70 <ReadDoubleData+0x14e0>
    4c20:	sub	r7, r6, r0
    4c24:	ldr	r0, [sp, #20]
    4c28:	ldr	r1, [sp, #16]
    4c2c:	add	r4, sp, #40	; 0x28
    4c30:	mov	r2, r7
    4c34:	ldr	r3, [r0]
    4c38:	mov	r0, r4
    4c3c:	bl	18d0 <fread@plt>
    4c40:	add	r8, r0, r8
    4c44:	cmp	r7, #1
    4c48:	blt	4c70 <ReadDoubleData+0x14e0>
    4c4c:	ldr	r0, [sp, #8]
    4c50:	sub	r5, r0, r5
    4c54:	ldrd	r0, [r4]
    4c58:	bl	49564 <__aeabi_ul2d>
    4c5c:	strd	r0, [r9]
    4c60:	add	r9, r9, #8
    4c64:	subs	r5, r5, #1
    4c68:	add	r4, r4, #8
    4c6c:	bne	4c54 <ReadDoubleData+0x14c4>
    4c70:	ldr	r0, [sp, #16]
    4c74:	mul	r4, r8, r0
    4c78:	b	37bc <ReadDoubleData+0x2c>

00004c7c <ReadCompressedDoubleData>:
    4c7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4c80:	add	fp, sp, #28
    4c84:	sub	sp, sp, #4
    4c88:	vpush	{d8-d9}
    4c8c:	sub	sp, sp, #24
    4c90:	sub	sp, sp, #1024	; 0x400
    4c94:	str	r0, [sp, #12]
    4c98:	mov	r0, r3
    4c9c:	mov	r5, r3
    4ca0:	mov	r8, r2
    4ca4:	str	r1, [sp, #8]
    4ca8:	bl	193c <Mat_SizeOf@plt>
    4cac:	mov	r2, r0
    4cb0:	sub	r0, r5, #1
    4cb4:	mov	sl, #0
    4cb8:	cmp	r0, #12
    4cbc:	bhi	5f80 <ReadCompressedDoubleData+0x1304>
    4cc0:	add	r1, pc, #8
    4cc4:	ldr	r4, [fp, #8]
    4cc8:	ldr	r0, [r1, r0, lsl #2]
    4ccc:	add	pc, r1, r0
    4cd0:	.word	0x00000034
    4cd4:	.word	0x00000080
    4cd8:	.word	0x000000cc
    4cdc:	.word	0x00000130
    4ce0:	.word	0x00000194
    4ce4:	.word	0x000001f8
    4ce8:	.word	0x0000025c
    4cec:	.word	0x000012b0
    4cf0:	.word	0x000002bc
    4cf4:	.word	0x000012b0
    4cf8:	.word	0x000012b0
    4cfc:	.word	0x00000308
    4d00:	.word	0x00000368
    4d04:	cmp	r4, #1024	; 0x400
    4d08:	bgt	5098 <ReadCompressedDoubleData+0x41c>
    4d0c:	ldr	r0, [sp, #12]
    4d10:	ldr	r1, [sp, #8]
    4d14:	mul	sl, r2, r4
    4d18:	add	r6, sp, #16
    4d1c:	mov	r2, r6
    4d20:	mov	r3, sl
    4d24:	bl	31f0 <InflateData>
    4d28:	cmp	r4, #1
    4d2c:	blt	5f80 <ReadCompressedDoubleData+0x1304>
    4d30:	ldrsb	r0, [r6], #1
    4d34:	subs	r4, r4, #1
    4d38:	vmov	s0, r0
    4d3c:	vcvt.f64.s32	d16, s0
    4d40:	vstr	d16, [r8]
    4d44:	add	r8, r8, #8
    4d48:	bne	4d30 <ReadCompressedDoubleData+0xb4>
    4d4c:	b	5f80 <ReadCompressedDoubleData+0x1304>
    4d50:	cmp	r4, #1024	; 0x400
    4d54:	bgt	515c <ReadCompressedDoubleData+0x4e0>
    4d58:	ldr	r0, [sp, #12]
    4d5c:	ldr	r1, [sp, #8]
    4d60:	mul	sl, r2, r4
    4d64:	add	r6, sp, #16
    4d68:	mov	r2, r6
    4d6c:	mov	r3, sl
    4d70:	bl	31f0 <InflateData>
    4d74:	cmp	r4, #1
    4d78:	blt	5f80 <ReadCompressedDoubleData+0x1304>
    4d7c:	ldrb	r0, [r6], #1
    4d80:	subs	r4, r4, #1
    4d84:	vmov	s0, r0
    4d88:	vcvt.f64.u32	d16, s0
    4d8c:	vstr	d16, [r8]
    4d90:	add	r8, r8, #8
    4d94:	bne	4d7c <ReadCompressedDoubleData+0x100>
    4d98:	b	5f80 <ReadCompressedDoubleData+0x1304>
    4d9c:	ldr	r0, [sp, #12]
    4da0:	ldr	r0, [r0, #20]
    4da4:	cmp	r0, #0
    4da8:	beq	5224 <ReadCompressedDoubleData+0x5a8>
    4dac:	cmp	r4, #512	; 0x200
    4db0:	bgt	5438 <ReadCompressedDoubleData+0x7bc>
    4db4:	ldr	r0, [sp, #12]
    4db8:	ldr	r1, [sp, #8]
    4dbc:	mul	sl, r2, r4
    4dc0:	add	r6, sp, #16
    4dc4:	mov	r2, r6
    4dc8:	mov	r3, sl
    4dcc:	bl	31f0 <InflateData>
    4dd0:	cmp	r4, #1
    4dd4:	blt	5f80 <ReadCompressedDoubleData+0x1304>
    4dd8:	mov	r0, r6
    4ddc:	bl	1c50 <Mat_int16Swap>
    4de0:	vmov	s0, r0
    4de4:	subs	r4, r4, #1
    4de8:	add	r6, r6, #2
    4dec:	vcvt.f64.s32	d16, s0
    4df0:	vstr	d16, [r8]
    4df4:	add	r8, r8, #8
    4df8:	bne	4dd8 <ReadCompressedDoubleData+0x15c>
    4dfc:	b	5f80 <ReadCompressedDoubleData+0x1304>
    4e00:	ldr	r0, [sp, #12]
    4e04:	ldr	r0, [r0, #20]
    4e08:	cmp	r0, #0
    4e0c:	beq	5270 <ReadCompressedDoubleData+0x5f4>
    4e10:	cmp	r4, #512	; 0x200
    4e14:	bgt	550c <ReadCompressedDoubleData+0x890>
    4e18:	ldr	r0, [sp, #12]
    4e1c:	ldr	r1, [sp, #8]
    4e20:	mul	sl, r2, r4
    4e24:	add	r6, sp, #16
    4e28:	mov	r2, r6
    4e2c:	mov	r3, sl
    4e30:	bl	31f0 <InflateData>
    4e34:	cmp	r4, #1
    4e38:	blt	5f80 <ReadCompressedDoubleData+0x1304>
    4e3c:	mov	r0, r6
    4e40:	bl	1c64 <Mat_uint16Swap>
    4e44:	vmov	s0, r0
    4e48:	subs	r4, r4, #1
    4e4c:	add	r6, r6, #2
    4e50:	vcvt.f64.u32	d16, s0
    4e54:	vstr	d16, [r8]
    4e58:	add	r8, r8, #8
    4e5c:	bne	4e3c <ReadCompressedDoubleData+0x1c0>
    4e60:	b	5f80 <ReadCompressedDoubleData+0x1304>
    4e64:	ldr	r0, [sp, #12]
    4e68:	ldr	r0, [r0, #20]
    4e6c:	cmp	r0, #0
    4e70:	beq	52bc <ReadCompressedDoubleData+0x640>
    4e74:	cmp	r4, #256	; 0x100
    4e78:	bgt	55e0 <ReadCompressedDoubleData+0x964>
    4e7c:	ldr	r0, [sp, #12]
    4e80:	ldr	r1, [sp, #8]
    4e84:	mul	sl, r2, r4
    4e88:	add	r6, sp, #16
    4e8c:	mov	r2, r6
    4e90:	mov	r3, sl
    4e94:	bl	31f0 <InflateData>
    4e98:	cmp	r4, #1
    4e9c:	blt	5f80 <ReadCompressedDoubleData+0x1304>
    4ea0:	mov	r0, r6
    4ea4:	bl	1c28 <Mat_int32Swap>
    4ea8:	vmov	s0, r0
    4eac:	subs	r4, r4, #1
    4eb0:	add	r6, r6, #4
    4eb4:	vcvt.f64.s32	d16, s0
    4eb8:	vstr	d16, [r8]
    4ebc:	add	r8, r8, #8
    4ec0:	bne	4ea0 <ReadCompressedDoubleData+0x224>
    4ec4:	b	5f80 <ReadCompressedDoubleData+0x1304>
    4ec8:	ldr	r0, [sp, #12]
    4ecc:	ldr	r0, [r0, #20]
    4ed0:	cmp	r0, #0
    4ed4:	beq	5308 <ReadCompressedDoubleData+0x68c>
    4ed8:	cmp	r4, #256	; 0x100
    4edc:	bgt	56b4 <ReadCompressedDoubleData+0xa38>
    4ee0:	ldr	r0, [sp, #12]
    4ee4:	ldr	r1, [sp, #8]
    4ee8:	mul	sl, r2, r4
    4eec:	add	r6, sp, #16
    4ef0:	mov	r2, r6
    4ef4:	mov	r3, sl
    4ef8:	bl	31f0 <InflateData>
    4efc:	cmp	r4, #1
    4f00:	blt	5f80 <ReadCompressedDoubleData+0x1304>
    4f04:	mov	r0, r6
    4f08:	bl	1c3c <Mat_uint32Swap>
    4f0c:	vmov	s0, r0
    4f10:	subs	r4, r4, #1
    4f14:	add	r6, r6, #4
    4f18:	vcvt.f64.u32	d16, s0
    4f1c:	vstr	d16, [r8]
    4f20:	add	r8, r8, #8
    4f24:	bne	4f04 <ReadCompressedDoubleData+0x288>
    4f28:	b	5f80 <ReadCompressedDoubleData+0x1304>
    4f2c:	ldr	r0, [sp, #12]
    4f30:	ldr	r0, [r0, #20]
    4f34:	cmp	r0, #0
    4f38:	beq	5354 <ReadCompressedDoubleData+0x6d8>
    4f3c:	cmp	r4, #256	; 0x100
    4f40:	bgt	5788 <ReadCompressedDoubleData+0xb0c>
    4f44:	ldr	r0, [sp, #12]
    4f48:	ldr	r1, [sp, #8]
    4f4c:	mul	sl, r2, r4
    4f50:	add	r6, sp, #16
    4f54:	mov	r2, r6
    4f58:	mov	r3, sl
    4f5c:	bl	31f0 <InflateData>
    4f60:	cmp	r4, #1
    4f64:	blt	5f80 <ReadCompressedDoubleData+0x1304>
    4f68:	mov	r0, r6
    4f6c:	bl	1c7c <Mat_floatSwap>
    4f70:	vcvt.f64.f32	d16, s0
    4f74:	subs	r4, r4, #1
    4f78:	add	r6, r6, #4
    4f7c:	vstr	d16, [r8]
    4f80:	add	r8, r8, #8
    4f84:	bne	4f68 <ReadCompressedDoubleData+0x2ec>
    4f88:	b	5f80 <ReadCompressedDoubleData+0x1304>
    4f8c:	ldr	r0, [sp, #12]
    4f90:	ldr	r1, [sp, #8]
    4f94:	mul	sl, r2, r4
    4f98:	mov	r5, r4
    4f9c:	mov	r2, r8
    4fa0:	mov	r3, sl
    4fa4:	ldr	r4, [r0, #20]
    4fa8:	bl	31f0 <InflateData>
    4fac:	cmp	r4, #0
    4fb0:	beq	5f80 <ReadCompressedDoubleData+0x1304>
    4fb4:	cmp	r5, #1
    4fb8:	blt	5f80 <ReadCompressedDoubleData+0x1304>
    4fbc:	mov	r4, r5
    4fc0:	mov	r0, r8
    4fc4:	bl	1cc0 <Mat_doubleSwap>
    4fc8:	subs	r4, r4, #1
    4fcc:	add	r8, r8, #8
    4fd0:	bne	4fc0 <ReadCompressedDoubleData+0x344>
    4fd4:	b	5f80 <ReadCompressedDoubleData+0x1304>
    4fd8:	ldr	r0, [sp, #12]
    4fdc:	ldr	r0, [r0, #20]
    4fe0:	cmp	r0, #0
    4fe4:	beq	53a0 <ReadCompressedDoubleData+0x724>
    4fe8:	cmp	r4, #128	; 0x80
    4fec:	bgt	5854 <ReadCompressedDoubleData+0xbd8>
    4ff0:	ldr	r0, [sp, #12]
    4ff4:	ldr	r1, [sp, #8]
    4ff8:	mul	sl, r2, r4
    4ffc:	add	r6, sp, #16
    5000:	mov	r2, r6
    5004:	mov	r3, sl
    5008:	bl	31f0 <InflateData>
    500c:	cmp	r4, #1
    5010:	blt	5f80 <ReadCompressedDoubleData+0x1304>
    5014:	mov	r0, r6
    5018:	bl	1bbc <Mat_int64Swap>
    501c:	bl	49578 <__aeabi_l2d>
    5020:	strd	r0, [r8]
    5024:	add	r6, r6, #8
    5028:	subs	r4, r4, #1
    502c:	add	r8, r8, #8
    5030:	bne	5014 <ReadCompressedDoubleData+0x398>
    5034:	b	5f80 <ReadCompressedDoubleData+0x1304>
    5038:	ldr	r0, [sp, #12]
    503c:	ldr	r0, [r0, #20]
    5040:	cmp	r0, #0
    5044:	beq	53ec <ReadCompressedDoubleData+0x770>
    5048:	cmp	r4, #128	; 0x80
    504c:	bgt	5924 <ReadCompressedDoubleData+0xca8>
    5050:	ldr	r0, [sp, #12]
    5054:	ldr	r1, [sp, #8]
    5058:	mul	sl, r2, r4
    505c:	add	r6, sp, #16
    5060:	mov	r2, r6
    5064:	mov	r3, sl
    5068:	bl	31f0 <InflateData>
    506c:	cmp	r4, #1
    5070:	blt	5f80 <ReadCompressedDoubleData+0x1304>
    5074:	mov	r0, r6
    5078:	bl	1c0c <Mat_uint64Swap>
    507c:	bl	49564 <__aeabi_ul2d>
    5080:	strd	r0, [r8]
    5084:	add	r6, r6, #8
    5088:	subs	r4, r4, #1
    508c:	add	r8, r8, #8
    5090:	bne	5074 <ReadCompressedDoubleData+0x3f8>
    5094:	b	5f80 <ReadCompressedDoubleData+0x1304>
    5098:	add	r0, r8, #8192	; 0x2000
    509c:	lsl	sl, r2, #10
    50a0:	sub	r9, r4, #1024	; 0x400
    50a4:	mov	r1, #0
    50a8:	add	r6, sp, #16
    50ac:	str	r2, [sp]
    50b0:	mov	r5, r1
    50b4:	mov	r7, r0
    50b8:	ldr	r0, [sp, #12]
    50bc:	ldr	r1, [sp, #8]
    50c0:	mov	r2, r6
    50c4:	mov	r3, sl
    50c8:	bl	31f0 <InflateData>
    50cc:	mov	r0, r8
    50d0:	mov	r1, #0
    50d4:	add	r2, r6, r1
    50d8:	add	r1, r1, #2
    50dc:	vld1.16	{d16[0]}, [r2 :16]
    50e0:	cmp	r1, #1024	; 0x400
    50e4:	vmovl.s8	q8, d16
    50e8:	vmovl.s16	q0, d16
    50ec:	vcvt.f64.s32	d17, s1
    50f0:	vcvt.f64.s32	d16, s0
    50f4:	vst1.64	{d16-d17}, [r0]!
    50f8:	bne	50d4 <ReadCompressedDoubleData+0x458>
    50fc:	add	r1, r5, #1024	; 0x400
    5100:	add	r8, r8, #8192	; 0x2000
    5104:	add	r0, r7, #8192	; 0x2000
    5108:	cmp	r1, r9
    510c:	blt	50b0 <ReadCompressedDoubleData+0x434>
    5110:	ldr	r0, [sp]
    5114:	sub	r6, r4, r1
    5118:	ldr	r1, [sp, #8]
    511c:	add	r4, sp, #16
    5120:	mov	r2, r4
    5124:	mul	sl, r6, r0
    5128:	ldr	r0, [sp, #12]
    512c:	mov	r3, sl
    5130:	bl	31f0 <InflateData>
    5134:	cmp	r6, #1
    5138:	blt	5f80 <ReadCompressedDoubleData+0x1304>
    513c:	sub	r0, r9, r5
    5140:	ldrsb	r1, [r4], #1
    5144:	subs	r0, r0, #1
    5148:	vmov	s0, r1
    514c:	vcvt.f64.s32	d16, s0
    5150:	vstmia	r7!, {d16}
    5154:	bne	5140 <ReadCompressedDoubleData+0x4c4>
    5158:	b	5f80 <ReadCompressedDoubleData+0x1304>
    515c:	add	r0, r8, #8192	; 0x2000
    5160:	lsl	r5, r2, #10
    5164:	sub	r9, r4, #1024	; 0x400
    5168:	mov	r1, #0
    516c:	add	r6, sp, #16
    5170:	str	r2, [sp]
    5174:	mov	sl, r1
    5178:	mov	r7, r0
    517c:	ldr	r0, [sp, #12]
    5180:	ldr	r1, [sp, #8]
    5184:	mov	r2, r6
    5188:	mov	r3, r5
    518c:	bl	31f0 <InflateData>
    5190:	mov	r0, r8
    5194:	mov	r1, #0
    5198:	add	r2, r6, r1
    519c:	add	r1, r1, #2
    51a0:	vld1.16	{d16[0]}, [r2 :16]
    51a4:	cmp	r1, #1024	; 0x400
    51a8:	vmovl.u8	q8, d16
    51ac:	vmovl.u16	q0, d16
    51b0:	vcvt.f64.u32	d17, s1
    51b4:	vcvt.f64.u32	d16, s0
    51b8:	vst1.64	{d16-d17}, [r0]!
    51bc:	bne	5198 <ReadCompressedDoubleData+0x51c>
    51c0:	add	r1, sl, #1024	; 0x400
    51c4:	add	r8, r8, #8192	; 0x2000
    51c8:	add	r0, r7, #8192	; 0x2000
    51cc:	cmp	r1, r9
    51d0:	blt	5174 <ReadCompressedDoubleData+0x4f8>
    51d4:	ldr	r0, [sp]
    51d8:	sub	r5, r4, r1
    51dc:	ldr	r1, [sp, #8]
    51e0:	add	r4, sp, #16
    51e4:	mov	r2, r4
    51e8:	mul	r3, r5, r0
    51ec:	ldr	r0, [sp, #12]
    51f0:	mov	r6, r3
    51f4:	bl	31f0 <InflateData>
    51f8:	cmp	r5, #1
    51fc:	blt	521c <ReadCompressedDoubleData+0x5a0>
    5200:	sub	r0, r9, sl
    5204:	ldrb	r1, [r4], #1
    5208:	subs	r0, r0, #1
    520c:	vmov	s0, r1
    5210:	vcvt.f64.u32	d16, s0
    5214:	vstmia	r7!, {d16}
    5218:	bne	5204 <ReadCompressedDoubleData+0x588>
    521c:	mov	sl, r6
    5220:	b	5f80 <ReadCompressedDoubleData+0x1304>
    5224:	cmp	r4, #512	; 0x200
    5228:	bgt	59f4 <ReadCompressedDoubleData+0xd78>
    522c:	ldr	r0, [sp, #12]
    5230:	ldr	r1, [sp, #8]
    5234:	mul	sl, r2, r4
    5238:	add	r6, sp, #16
    523c:	mov	r2, r6
    5240:	mov	r3, sl
    5244:	bl	31f0 <InflateData>
    5248:	cmp	r4, #1
    524c:	blt	5f80 <ReadCompressedDoubleData+0x1304>
    5250:	ldrsh	r0, [r6], #2
    5254:	subs	r4, r4, #1
    5258:	vmov	s0, r0
    525c:	vcvt.f64.s32	d16, s0
    5260:	vstr	d16, [r8]
    5264:	add	r8, r8, #8
    5268:	bne	5250 <ReadCompressedDoubleData+0x5d4>
    526c:	b	5f80 <ReadCompressedDoubleData+0x1304>
    5270:	cmp	r4, #512	; 0x200
    5274:	bgt	5ab4 <ReadCompressedDoubleData+0xe38>
    5278:	ldr	r0, [sp, #12]
    527c:	ldr	r1, [sp, #8]
    5280:	mul	sl, r2, r4
    5284:	add	r6, sp, #16
    5288:	mov	r2, r6
    528c:	mov	r3, sl
    5290:	bl	31f0 <InflateData>
    5294:	cmp	r4, #1
    5298:	blt	5f80 <ReadCompressedDoubleData+0x1304>
    529c:	ldrh	r0, [r6], #2
    52a0:	subs	r4, r4, #1
    52a4:	vmov	s0, r0
    52a8:	vcvt.f64.u32	d16, s0
    52ac:	vstr	d16, [r8]
    52b0:	add	r8, r8, #8
    52b4:	bne	529c <ReadCompressedDoubleData+0x620>
    52b8:	b	5f80 <ReadCompressedDoubleData+0x1304>
    52bc:	cmp	r4, #256	; 0x100
    52c0:	bgt	5b74 <ReadCompressedDoubleData+0xef8>
    52c4:	ldr	r0, [sp, #12]
    52c8:	ldr	r1, [sp, #8]
    52cc:	mul	sl, r2, r4
    52d0:	add	r6, sp, #16
    52d4:	mov	r2, r6
    52d8:	mov	r3, sl
    52dc:	bl	31f0 <InflateData>
    52e0:	cmp	r4, #1
    52e4:	blt	5f80 <ReadCompressedDoubleData+0x1304>
    52e8:	ldr	r0, [r6], #4
    52ec:	subs	r4, r4, #1
    52f0:	vmov	s0, r0
    52f4:	vcvt.f64.s32	d16, s0
    52f8:	vstr	d16, [r8]
    52fc:	add	r8, r8, #8
    5300:	bne	52e8 <ReadCompressedDoubleData+0x66c>
    5304:	b	5f80 <ReadCompressedDoubleData+0x1304>
    5308:	cmp	r4, #256	; 0x100
    530c:	bgt	5c30 <ReadCompressedDoubleData+0xfb4>
    5310:	ldr	r0, [sp, #12]
    5314:	ldr	r1, [sp, #8]
    5318:	mul	sl, r2, r4
    531c:	add	r6, sp, #16
    5320:	mov	r2, r6
    5324:	mov	r3, sl
    5328:	bl	31f0 <InflateData>
    532c:	cmp	r4, #1
    5330:	blt	5f80 <ReadCompressedDoubleData+0x1304>
    5334:	ldr	r0, [r6], #4
    5338:	subs	r4, r4, #1
    533c:	vmov	s0, r0
    5340:	vcvt.f64.u32	d16, s0
    5344:	vstr	d16, [r8]
    5348:	add	r8, r8, #8
    534c:	bne	5334 <ReadCompressedDoubleData+0x6b8>
    5350:	b	5f80 <ReadCompressedDoubleData+0x1304>
    5354:	cmp	r4, #256	; 0x100
    5358:	bgt	5cec <ReadCompressedDoubleData+0x1070>
    535c:	ldr	r0, [sp, #12]
    5360:	ldr	r1, [sp, #8]
    5364:	mul	sl, r2, r4
    5368:	add	r6, sp, #16
    536c:	mov	r2, r6
    5370:	mov	r3, sl
    5374:	bl	31f0 <InflateData>
    5378:	cmp	r4, #1
    537c:	blt	5f80 <ReadCompressedDoubleData+0x1304>
    5380:	vldr	s0, [r6]
    5384:	subs	r4, r4, #1
    5388:	add	r6, r6, #4
    538c:	vcvt.f64.f32	d16, s0
    5390:	vstr	d16, [r8]
    5394:	add	r8, r8, #8
    5398:	bne	5380 <ReadCompressedDoubleData+0x704>
    539c:	b	5f80 <ReadCompressedDoubleData+0x1304>
    53a0:	cmp	r4, #128	; 0x80
    53a4:	bgt	5da8 <ReadCompressedDoubleData+0x112c>
    53a8:	ldr	r0, [sp, #12]
    53ac:	ldr	r1, [sp, #8]
    53b0:	mul	sl, r2, r4
    53b4:	add	r6, sp, #16
    53b8:	mov	r2, r6
    53bc:	mov	r3, sl
    53c0:	bl	31f0 <InflateData>
    53c4:	cmp	r4, #1
    53c8:	blt	5f80 <ReadCompressedDoubleData+0x1304>
    53cc:	ldrd	r0, [r6]
    53d0:	bl	49578 <__aeabi_l2d>
    53d4:	strd	r0, [r8]
    53d8:	add	r6, r6, #8
    53dc:	subs	r4, r4, #1
    53e0:	add	r8, r8, #8
    53e4:	bne	53cc <ReadCompressedDoubleData+0x750>
    53e8:	b	5f80 <ReadCompressedDoubleData+0x1304>
    53ec:	cmp	r4, #128	; 0x80
    53f0:	bgt	5e94 <ReadCompressedDoubleData+0x1218>
    53f4:	ldr	r0, [sp, #12]
    53f8:	ldr	r1, [sp, #8]
    53fc:	mul	sl, r2, r4
    5400:	add	r6, sp, #16
    5404:	mov	r2, r6
    5408:	mov	r3, sl
    540c:	bl	31f0 <InflateData>
    5410:	cmp	r4, #1
    5414:	blt	5f80 <ReadCompressedDoubleData+0x1304>
    5418:	ldrd	r0, [r6]
    541c:	bl	49564 <__aeabi_ul2d>
    5420:	strd	r0, [r8]
    5424:	add	r6, r6, #8
    5428:	subs	r4, r4, #1
    542c:	add	r8, r8, #8
    5430:	bne	5418 <ReadCompressedDoubleData+0x79c>
    5434:	b	5f80 <ReadCompressedDoubleData+0x1304>
    5438:	sub	r1, r4, #512	; 0x200
    543c:	add	r0, r8, #4096	; 0x1000
    5440:	lsl	r9, r2, #9
    5444:	add	r6, sp, #16
    5448:	str	r2, [sp]
    544c:	str	r1, [sp, #4]
    5450:	mov	r1, #0
    5454:	mov	r7, r1
    5458:	mov	r5, r0
    545c:	ldr	r0, [sp, #12]
    5460:	ldr	r1, [sp, #8]
    5464:	mov	r2, r6
    5468:	mov	r3, r9
    546c:	bl	31f0 <InflateData>
    5470:	mov	r4, r8
    5474:	mov	sl, #0
    5478:	add	r0, r6, sl
    547c:	bl	1c50 <Mat_int16Swap>
    5480:	vmov	s0, r0
    5484:	add	sl, sl, #2
    5488:	vcvt.f64.s32	d16, s0
    548c:	cmp	sl, #1024	; 0x400
    5490:	vstmia	r4!, {d16}
    5494:	bne	5478 <ReadCompressedDoubleData+0x7fc>
    5498:	ldr	r2, [sp, #4]
    549c:	add	r1, r7, #512	; 0x200
    54a0:	add	r8, r8, #4096	; 0x1000
    54a4:	add	r0, r5, #4096	; 0x1000
    54a8:	cmp	r1, r2
    54ac:	blt	5454 <ReadCompressedDoubleData+0x7d8>
    54b0:	ldr	r0, [fp, #8]
    54b4:	add	r4, sp, #16
    54b8:	mov	r2, r4
    54bc:	sub	r6, r0, r1
    54c0:	ldr	r0, [sp]
    54c4:	ldr	r1, [sp, #8]
    54c8:	mul	sl, r6, r0
    54cc:	ldr	r0, [sp, #12]
    54d0:	mov	r3, sl
    54d4:	bl	31f0 <InflateData>
    54d8:	cmp	r6, #1
    54dc:	blt	5f80 <ReadCompressedDoubleData+0x1304>
    54e0:	ldr	r0, [sp, #4]
    54e4:	sub	r6, r0, r7
    54e8:	mov	r0, r4
    54ec:	bl	1c50 <Mat_int16Swap>
    54f0:	vmov	s0, r0
    54f4:	subs	r6, r6, #1
    54f8:	add	r4, r4, #2
    54fc:	vcvt.f64.s32	d16, s0
    5500:	vstmia	r5!, {d16}
    5504:	bne	54e8 <ReadCompressedDoubleData+0x86c>
    5508:	b	5f80 <ReadCompressedDoubleData+0x1304>
    550c:	sub	r1, r4, #512	; 0x200
    5510:	add	r0, r8, #4096	; 0x1000
    5514:	lsl	r9, r2, #9
    5518:	add	r6, sp, #16
    551c:	str	r2, [sp]
    5520:	str	r1, [sp, #4]
    5524:	mov	r1, #0
    5528:	mov	r7, r1
    552c:	mov	r5, r0
    5530:	ldr	r0, [sp, #12]
    5534:	ldr	r1, [sp, #8]
    5538:	mov	r2, r6
    553c:	mov	r3, r9
    5540:	bl	31f0 <InflateData>
    5544:	mov	r4, r8
    5548:	mov	sl, #0
    554c:	add	r0, r6, sl
    5550:	bl	1c64 <Mat_uint16Swap>
    5554:	vmov	s0, r0
    5558:	add	sl, sl, #2
    555c:	vcvt.f64.u32	d16, s0
    5560:	cmp	sl, #1024	; 0x400
    5564:	vstmia	r4!, {d16}
    5568:	bne	554c <ReadCompressedDoubleData+0x8d0>
    556c:	ldr	r2, [sp, #4]
    5570:	add	r1, r7, #512	; 0x200
    5574:	add	r8, r8, #4096	; 0x1000
    5578:	add	r0, r5, #4096	; 0x1000
    557c:	cmp	r1, r2
    5580:	blt	5528 <ReadCompressedDoubleData+0x8ac>
    5584:	ldr	r0, [fp, #8]
    5588:	add	r4, sp, #16
    558c:	mov	r2, r4
    5590:	sub	r6, r0, r1
    5594:	ldr	r0, [sp]
    5598:	ldr	r1, [sp, #8]
    559c:	mul	sl, r6, r0
    55a0:	ldr	r0, [sp, #12]
    55a4:	mov	r3, sl
    55a8:	bl	31f0 <InflateData>
    55ac:	cmp	r6, #1
    55b0:	blt	5f80 <ReadCompressedDoubleData+0x1304>
    55b4:	ldr	r0, [sp, #4]
    55b8:	sub	r6, r0, r7
    55bc:	mov	r0, r4
    55c0:	bl	1c64 <Mat_uint16Swap>
    55c4:	vmov	s0, r0
    55c8:	subs	r6, r6, #1
    55cc:	add	r4, r4, #2
    55d0:	vcvt.f64.u32	d16, s0
    55d4:	vstmia	r5!, {d16}
    55d8:	bne	55bc <ReadCompressedDoubleData+0x940>
    55dc:	b	5f80 <ReadCompressedDoubleData+0x1304>
    55e0:	sub	r1, r4, #256	; 0x100
    55e4:	add	r0, r8, #2048	; 0x800
    55e8:	lsl	r9, r2, #8
    55ec:	add	r6, sp, #16
    55f0:	str	r2, [sp]
    55f4:	str	r1, [sp, #4]
    55f8:	mov	r1, #0
    55fc:	mov	r7, r1
    5600:	mov	r5, r0
    5604:	ldr	r0, [sp, #12]
    5608:	ldr	r1, [sp, #8]
    560c:	mov	r2, r6
    5610:	mov	r3, r9
    5614:	bl	31f0 <InflateData>
    5618:	mov	r4, r8
    561c:	mov	sl, #0
    5620:	add	r0, r6, sl
    5624:	bl	1c28 <Mat_int32Swap>
    5628:	vmov	s0, r0
    562c:	add	sl, sl, #4
    5630:	vcvt.f64.s32	d16, s0
    5634:	cmp	sl, #1024	; 0x400
    5638:	vstmia	r4!, {d16}
    563c:	bne	5620 <ReadCompressedDoubleData+0x9a4>
    5640:	ldr	r2, [sp, #4]
    5644:	add	r1, r7, #256	; 0x100
    5648:	add	r8, r8, #2048	; 0x800
    564c:	add	r0, r5, #2048	; 0x800
    5650:	cmp	r1, r2
    5654:	blt	55fc <ReadCompressedDoubleData+0x980>
    5658:	ldr	r0, [fp, #8]
    565c:	add	r4, sp, #16
    5660:	mov	r2, r4
    5664:	sub	r6, r0, r1
    5668:	ldr	r0, [sp]
    566c:	ldr	r1, [sp, #8]
    5670:	mul	sl, r6, r0
    5674:	ldr	r0, [sp, #12]
    5678:	mov	r3, sl
    567c:	bl	31f0 <InflateData>
    5680:	cmp	r6, #1
    5684:	blt	5f80 <ReadCompressedDoubleData+0x1304>
    5688:	ldr	r0, [sp, #4]
    568c:	sub	r6, r0, r7
    5690:	mov	r0, r4
    5694:	bl	1c28 <Mat_int32Swap>
    5698:	vmov	s0, r0
    569c:	subs	r6, r6, #1
    56a0:	add	r4, r4, #4
    56a4:	vcvt.f64.s32	d16, s0
    56a8:	vstmia	r5!, {d16}
    56ac:	bne	5690 <ReadCompressedDoubleData+0xa14>
    56b0:	b	5f80 <ReadCompressedDoubleData+0x1304>
    56b4:	sub	r1, r4, #256	; 0x100
    56b8:	add	r0, r8, #2048	; 0x800
    56bc:	lsl	r9, r2, #8
    56c0:	add	r6, sp, #16
    56c4:	str	r2, [sp]
    56c8:	str	r1, [sp, #4]
    56cc:	mov	r1, #0
    56d0:	mov	r7, r1
    56d4:	mov	r5, r0
    56d8:	ldr	r0, [sp, #12]
    56dc:	ldr	r1, [sp, #8]
    56e0:	mov	r2, r6
    56e4:	mov	r3, r9
    56e8:	bl	31f0 <InflateData>
    56ec:	mov	r4, r8
    56f0:	mov	sl, #0
    56f4:	add	r0, r6, sl
    56f8:	bl	1c3c <Mat_uint32Swap>
    56fc:	vmov	s0, r0
    5700:	add	sl, sl, #4
    5704:	vcvt.f64.u32	d16, s0
    5708:	cmp	sl, #1024	; 0x400
    570c:	vstmia	r4!, {d16}
    5710:	bne	56f4 <ReadCompressedDoubleData+0xa78>
    5714:	ldr	r2, [sp, #4]
    5718:	add	r1, r7, #256	; 0x100
    571c:	add	r8, r8, #2048	; 0x800
    5720:	add	r0, r5, #2048	; 0x800
    5724:	cmp	r1, r2
    5728:	blt	56d0 <ReadCompressedDoubleData+0xa54>
    572c:	ldr	r0, [fp, #8]
    5730:	add	r4, sp, #16
    5734:	mov	r2, r4
    5738:	sub	r6, r0, r1
    573c:	ldr	r0, [sp]
    5740:	ldr	r1, [sp, #8]
    5744:	mul	sl, r6, r0
    5748:	ldr	r0, [sp, #12]
    574c:	mov	r3, sl
    5750:	bl	31f0 <InflateData>
    5754:	cmp	r6, #1
    5758:	blt	5f80 <ReadCompressedDoubleData+0x1304>
    575c:	ldr	r0, [sp, #4]
    5760:	sub	r6, r0, r7
    5764:	mov	r0, r4
    5768:	bl	1c3c <Mat_uint32Swap>
    576c:	vmov	s0, r0
    5770:	subs	r6, r6, #1
    5774:	add	r4, r4, #4
    5778:	vcvt.f64.u32	d16, s0
    577c:	vstmia	r5!, {d16}
    5780:	bne	5764 <ReadCompressedDoubleData+0xae8>
    5784:	b	5f80 <ReadCompressedDoubleData+0x1304>
    5788:	sub	r1, r4, #256	; 0x100
    578c:	add	r0, r8, #2048	; 0x800
    5790:	lsl	sl, r2, #8
    5794:	add	r6, sp, #16
    5798:	str	r2, [sp]
    579c:	str	r1, [sp, #4]
    57a0:	mov	r1, #0
    57a4:	mov	r5, r1
    57a8:	mov	r7, r0
    57ac:	ldr	r0, [sp, #12]
    57b0:	ldr	r1, [sp, #8]
    57b4:	mov	r2, r6
    57b8:	mov	r3, sl
    57bc:	bl	31f0 <InflateData>
    57c0:	mov	r4, r8
    57c4:	mov	r9, #0
    57c8:	add	r0, r6, r9
    57cc:	bl	1c7c <Mat_floatSwap>
    57d0:	vcvt.f64.f32	d16, s0
    57d4:	add	r9, r9, #4
    57d8:	vstmia	r4!, {d16}
    57dc:	cmp	r9, #1024	; 0x400
    57e0:	bne	57c8 <ReadCompressedDoubleData+0xb4c>
    57e4:	ldr	r2, [sp, #4]
    57e8:	add	r1, r5, #256	; 0x100
    57ec:	add	r8, r8, #2048	; 0x800
    57f0:	add	r0, r7, #2048	; 0x800
    57f4:	cmp	r1, r2
    57f8:	blt	57a4 <ReadCompressedDoubleData+0xb28>
    57fc:	ldr	r0, [fp, #8]
    5800:	add	r4, sp, #16
    5804:	mov	r2, r4
    5808:	sub	r6, r0, r1
    580c:	ldr	r0, [sp]
    5810:	ldr	r1, [sp, #8]
    5814:	mul	sl, r6, r0
    5818:	ldr	r0, [sp, #12]
    581c:	mov	r3, sl
    5820:	bl	31f0 <InflateData>
    5824:	cmp	r6, #1
    5828:	blt	5f80 <ReadCompressedDoubleData+0x1304>
    582c:	ldr	r0, [sp, #4]
    5830:	sub	r5, r0, r5
    5834:	mov	r0, r4
    5838:	bl	1c7c <Mat_floatSwap>
    583c:	vcvt.f64.f32	d16, s0
    5840:	subs	r5, r5, #1
    5844:	add	r4, r4, #4
    5848:	vstmia	r7!, {d16}
    584c:	bne	5834 <ReadCompressedDoubleData+0xbb8>
    5850:	b	5f80 <ReadCompressedDoubleData+0x1304>
    5854:	sub	r1, r4, #128	; 0x80
    5858:	add	r0, r8, #1024	; 0x400
    585c:	lsl	r9, r2, #7
    5860:	add	r6, sp, #16
    5864:	str	r2, [sp]
    5868:	str	r1, [sp, #4]
    586c:	mov	r1, #0
    5870:	mov	sl, r1
    5874:	mov	r5, r0
    5878:	ldr	r0, [sp, #12]
    587c:	ldr	r1, [sp, #8]
    5880:	mov	r2, r6
    5884:	mov	r3, r9
    5888:	bl	31f0 <InflateData>
    588c:	mov	r7, #0
    5890:	add	r0, r6, r7
    5894:	bl	1bbc <Mat_int64Swap>
    5898:	bl	49578 <__aeabi_l2d>
    589c:	mov	r2, r8
    58a0:	str	r0, [r2, r7]!
    58a4:	add	r7, r7, #8
    58a8:	cmp	r7, #1024	; 0x400
    58ac:	str	r1, [r2, #4]
    58b0:	bne	5890 <ReadCompressedDoubleData+0xc14>
    58b4:	ldr	r2, [sp, #4]
    58b8:	add	r1, sl, #128	; 0x80
    58bc:	add	r8, r8, #1024	; 0x400
    58c0:	add	r0, r5, #1024	; 0x400
    58c4:	cmp	r1, r2
    58c8:	blt	5870 <ReadCompressedDoubleData+0xbf4>
    58cc:	ldr	r0, [sp]
    58d0:	sub	r6, r4, r1
    58d4:	ldr	r1, [sp, #8]
    58d8:	add	r4, sp, #16
    58dc:	mov	r2, r4
    58e0:	mul	r3, r6, r0
    58e4:	ldr	r0, [sp, #12]
    58e8:	mov	r7, r3
    58ec:	bl	31f0 <InflateData>
    58f0:	cmp	r6, #1
    58f4:	blt	5f7c <ReadCompressedDoubleData+0x1300>
    58f8:	ldr	r0, [sp, #4]
    58fc:	sub	r6, r0, sl
    5900:	mov	r0, r4
    5904:	bl	1bbc <Mat_int64Swap>
    5908:	bl	49578 <__aeabi_l2d>
    590c:	strd	r0, [r5]
    5910:	add	r5, r5, #8
    5914:	add	r4, r4, #8
    5918:	subs	r6, r6, #1
    591c:	bne	5900 <ReadCompressedDoubleData+0xc84>
    5920:	b	5f7c <ReadCompressedDoubleData+0x1300>
    5924:	sub	r1, r4, #128	; 0x80
    5928:	add	r0, r8, #1024	; 0x400
    592c:	lsl	sl, r2, #7
    5930:	add	r6, sp, #16
    5934:	str	r2, [sp]
    5938:	str	r1, [sp, #4]
    593c:	mov	r1, #0
    5940:	mov	r7, r1
    5944:	mov	r9, r0
    5948:	ldr	r0, [sp, #12]
    594c:	ldr	r1, [sp, #8]
    5950:	mov	r2, r6
    5954:	mov	r3, sl
    5958:	bl	31f0 <InflateData>
    595c:	mov	r5, #0
    5960:	add	r0, r6, r5
    5964:	bl	1c0c <Mat_uint64Swap>
    5968:	bl	49564 <__aeabi_ul2d>
    596c:	mov	r2, r8
    5970:	str	r0, [r2, r5]!
    5974:	add	r5, r5, #8
    5978:	cmp	r5, #1024	; 0x400
    597c:	str	r1, [r2, #4]
    5980:	bne	5960 <ReadCompressedDoubleData+0xce4>
    5984:	ldr	r2, [sp, #4]
    5988:	add	r1, r7, #128	; 0x80
    598c:	add	r8, r8, #1024	; 0x400
    5990:	add	r0, r9, #1024	; 0x400
    5994:	cmp	r1, r2
    5998:	blt	5940 <ReadCompressedDoubleData+0xcc4>
    599c:	ldr	r0, [sp]
    59a0:	sub	r5, r4, r1
    59a4:	ldr	r1, [sp, #8]
    59a8:	add	r4, sp, #16
    59ac:	mov	r2, r4
    59b0:	mul	sl, r5, r0
    59b4:	ldr	r0, [sp, #12]
    59b8:	mov	r3, sl
    59bc:	bl	31f0 <InflateData>
    59c0:	cmp	r5, #1
    59c4:	blt	5f80 <ReadCompressedDoubleData+0x1304>
    59c8:	ldr	r0, [sp, #4]
    59cc:	sub	r5, r0, r7
    59d0:	mov	r0, r4
    59d4:	bl	1c0c <Mat_uint64Swap>
    59d8:	bl	49564 <__aeabi_ul2d>
    59dc:	strd	r0, [r9]
    59e0:	add	r9, r9, #8
    59e4:	add	r4, r4, #8
    59e8:	subs	r5, r5, #1
    59ec:	bne	59d0 <ReadCompressedDoubleData+0xd54>
    59f0:	b	5f80 <ReadCompressedDoubleData+0x1304>
    59f4:	add	r0, r8, #4096	; 0x1000
    59f8:	lsl	sl, r2, #9
    59fc:	sub	r9, r4, #512	; 0x200
    5a00:	mov	r1, #0
    5a04:	add	r6, sp, #16
    5a08:	str	r2, [sp]
    5a0c:	mov	r5, r1
    5a10:	mov	r7, r0
    5a14:	ldr	r0, [sp, #12]
    5a18:	ldr	r1, [sp, #8]
    5a1c:	mov	r2, r6
    5a20:	mov	r3, sl
    5a24:	bl	31f0 <InflateData>
    5a28:	mov	r0, r8
    5a2c:	mov	r1, #0
    5a30:	add	r2, r6, r1
    5a34:	add	r1, r1, #4
    5a38:	vld1.32	{d16[0]}, [r2 :32]
    5a3c:	cmp	r1, #1024	; 0x400
    5a40:	vmovl.s16	q0, d16
    5a44:	vcvt.f64.s32	d17, s1
    5a48:	vcvt.f64.s32	d16, s0
    5a4c:	vst1.64	{d16-d17}, [r0]!
    5a50:	bne	5a30 <ReadCompressedDoubleData+0xdb4>
    5a54:	add	r1, r5, #512	; 0x200
    5a58:	add	r8, r8, #4096	; 0x1000
    5a5c:	add	r0, r7, #4096	; 0x1000
    5a60:	cmp	r1, r9
    5a64:	blt	5a0c <ReadCompressedDoubleData+0xd90>
    5a68:	ldr	r0, [sp]
    5a6c:	sub	r6, r4, r1
    5a70:	ldr	r1, [sp, #8]
    5a74:	add	r4, sp, #16
    5a78:	mov	r2, r4
    5a7c:	mul	sl, r6, r0
    5a80:	ldr	r0, [sp, #12]
    5a84:	mov	r3, sl
    5a88:	bl	31f0 <InflateData>
    5a8c:	cmp	r6, #1
    5a90:	blt	5f80 <ReadCompressedDoubleData+0x1304>
    5a94:	sub	r0, r9, r5
    5a98:	ldrsh	r1, [r4], #2
    5a9c:	subs	r0, r0, #1
    5aa0:	vmov	s0, r1
    5aa4:	vcvt.f64.s32	d16, s0
    5aa8:	vstmia	r7!, {d16}
    5aac:	bne	5a98 <ReadCompressedDoubleData+0xe1c>
    5ab0:	b	5f80 <ReadCompressedDoubleData+0x1304>
    5ab4:	add	r0, r8, #4096	; 0x1000
    5ab8:	lsl	sl, r2, #9
    5abc:	sub	r9, r4, #512	; 0x200
    5ac0:	mov	r1, #0
    5ac4:	add	r6, sp, #16
    5ac8:	str	r2, [sp]
    5acc:	mov	r5, r1
    5ad0:	mov	r7, r0
    5ad4:	ldr	r0, [sp, #12]
    5ad8:	ldr	r1, [sp, #8]
    5adc:	mov	r2, r6
    5ae0:	mov	r3, sl
    5ae4:	bl	31f0 <InflateData>
    5ae8:	mov	r0, r8
    5aec:	mov	r1, #0
    5af0:	add	r2, r6, r1
    5af4:	add	r1, r1, #4
    5af8:	vld1.32	{d16[0]}, [r2 :32]
    5afc:	cmp	r1, #1024	; 0x400
    5b00:	vmovl.u16	q0, d16
    5b04:	vcvt.f64.u32	d17, s1
    5b08:	vcvt.f64.u32	d16, s0
    5b0c:	vst1.64	{d16-d17}, [r0]!
    5b10:	bne	5af0 <ReadCompressedDoubleData+0xe74>
    5b14:	add	r1, r5, #512	; 0x200
    5b18:	add	r8, r8, #4096	; 0x1000
    5b1c:	add	r0, r7, #4096	; 0x1000
    5b20:	cmp	r1, r9
    5b24:	blt	5acc <ReadCompressedDoubleData+0xe50>
    5b28:	ldr	r0, [sp]
    5b2c:	sub	r6, r4, r1
    5b30:	ldr	r1, [sp, #8]
    5b34:	add	r4, sp, #16
    5b38:	mov	r2, r4
    5b3c:	mul	sl, r6, r0
    5b40:	ldr	r0, [sp, #12]
    5b44:	mov	r3, sl
    5b48:	bl	31f0 <InflateData>
    5b4c:	cmp	r6, #1
    5b50:	blt	5f80 <ReadCompressedDoubleData+0x1304>
    5b54:	sub	r0, r9, r5
    5b58:	ldrh	r1, [r4], #2
    5b5c:	subs	r0, r0, #1
    5b60:	vmov	s0, r1
    5b64:	vcvt.f64.u32	d16, s0
    5b68:	vstmia	r7!, {d16}
    5b6c:	bne	5b58 <ReadCompressedDoubleData+0xedc>
    5b70:	b	5f80 <ReadCompressedDoubleData+0x1304>
    5b74:	add	r0, r8, #2048	; 0x800
    5b78:	lsl	sl, r2, #8
    5b7c:	sub	r9, r4, #256	; 0x100
    5b80:	mov	r1, #0
    5b84:	add	r6, sp, #16
    5b88:	str	r2, [sp]
    5b8c:	mov	r5, r1
    5b90:	mov	r7, r0
    5b94:	ldr	r0, [sp, #12]
    5b98:	ldr	r1, [sp, #8]
    5b9c:	mov	r2, r6
    5ba0:	mov	r3, sl
    5ba4:	bl	31f0 <InflateData>
    5ba8:	mov	r0, r8
    5bac:	mov	r1, #0
    5bb0:	add	r2, r6, r1
    5bb4:	add	r1, r1, #8
    5bb8:	vldr	d0, [r2]
    5bbc:	cmp	r1, #1024	; 0x400
    5bc0:	vcvt.f64.s32	d17, s1
    5bc4:	vcvt.f64.s32	d16, s0
    5bc8:	vst1.64	{d16-d17}, [r0]!
    5bcc:	bne	5bb0 <ReadCompressedDoubleData+0xf34>
    5bd0:	add	r1, r5, #256	; 0x100
    5bd4:	add	r8, r8, #2048	; 0x800
    5bd8:	add	r0, r7, #2048	; 0x800
    5bdc:	cmp	r1, r9
    5be0:	blt	5b8c <ReadCompressedDoubleData+0xf10>
    5be4:	ldr	r0, [sp]
    5be8:	sub	r6, r4, r1
    5bec:	ldr	r1, [sp, #8]
    5bf0:	add	r4, sp, #16
    5bf4:	mov	r2, r4
    5bf8:	mul	sl, r6, r0
    5bfc:	ldr	r0, [sp, #12]
    5c00:	mov	r3, sl
    5c04:	bl	31f0 <InflateData>
    5c08:	cmp	r6, #1
    5c0c:	blt	5f80 <ReadCompressedDoubleData+0x1304>
    5c10:	sub	r0, r9, r5
    5c14:	ldr	r1, [r4], #4
    5c18:	subs	r0, r0, #1
    5c1c:	vmov	s0, r1
    5c20:	vcvt.f64.s32	d16, s0
    5c24:	vstmia	r7!, {d16}
    5c28:	bne	5c14 <ReadCompressedDoubleData+0xf98>
    5c2c:	b	5f80 <ReadCompressedDoubleData+0x1304>
    5c30:	add	r0, r8, #2048	; 0x800
    5c34:	lsl	sl, r2, #8
    5c38:	sub	r9, r4, #256	; 0x100
    5c3c:	mov	r1, #0
    5c40:	add	r6, sp, #16
    5c44:	str	r2, [sp]
    5c48:	mov	r5, r1
    5c4c:	mov	r7, r0
    5c50:	ldr	r0, [sp, #12]
    5c54:	ldr	r1, [sp, #8]
    5c58:	mov	r2, r6
    5c5c:	mov	r3, sl
    5c60:	bl	31f0 <InflateData>
    5c64:	mov	r0, r8
    5c68:	mov	r1, #0
    5c6c:	add	r2, r6, r1
    5c70:	add	r1, r1, #8
    5c74:	vldr	d0, [r2]
    5c78:	cmp	r1, #1024	; 0x400
    5c7c:	vcvt.f64.u32	d17, s1
    5c80:	vcvt.f64.u32	d16, s0
    5c84:	vst1.64	{d16-d17}, [r0]!
    5c88:	bne	5c6c <ReadCompressedDoubleData+0xff0>
    5c8c:	add	r1, r5, #256	; 0x100
    5c90:	add	r8, r8, #2048	; 0x800
    5c94:	add	r0, r7, #2048	; 0x800
    5c98:	cmp	r1, r9
    5c9c:	blt	5c48 <ReadCompressedDoubleData+0xfcc>
    5ca0:	ldr	r0, [sp]
    5ca4:	sub	r6, r4, r1
    5ca8:	ldr	r1, [sp, #8]
    5cac:	add	r4, sp, #16
    5cb0:	mov	r2, r4
    5cb4:	mul	sl, r6, r0
    5cb8:	ldr	r0, [sp, #12]
    5cbc:	mov	r3, sl
    5cc0:	bl	31f0 <InflateData>
    5cc4:	cmp	r6, #1
    5cc8:	blt	5f80 <ReadCompressedDoubleData+0x1304>
    5ccc:	sub	r0, r9, r5
    5cd0:	ldr	r1, [r4], #4
    5cd4:	subs	r0, r0, #1
    5cd8:	vmov	s0, r1
    5cdc:	vcvt.f64.u32	d16, s0
    5ce0:	vstmia	r7!, {d16}
    5ce4:	bne	5cd0 <ReadCompressedDoubleData+0x1054>
    5ce8:	b	5f80 <ReadCompressedDoubleData+0x1304>
    5cec:	add	r0, r8, #2048	; 0x800
    5cf0:	lsl	sl, r2, #8
    5cf4:	sub	r9, r4, #256	; 0x100
    5cf8:	mov	r1, #0
    5cfc:	add	r6, sp, #16
    5d00:	str	r2, [sp]
    5d04:	mov	r5, r1
    5d08:	mov	r7, r0
    5d0c:	ldr	r0, [sp, #12]
    5d10:	ldr	r1, [sp, #8]
    5d14:	mov	r2, r6
    5d18:	mov	r3, sl
    5d1c:	bl	31f0 <InflateData>
    5d20:	mov	r0, r8
    5d24:	mov	r1, #0
    5d28:	add	r2, r6, r1
    5d2c:	add	r1, r1, #8
    5d30:	vldr	d0, [r2]
    5d34:	cmp	r1, #1024	; 0x400
    5d38:	vcvt.f64.f32	d17, s1
    5d3c:	vcvt.f64.f32	d16, s0
    5d40:	vst1.64	{d16-d17}, [r0]!
    5d44:	bne	5d28 <ReadCompressedDoubleData+0x10ac>
    5d48:	add	r1, r5, #256	; 0x100
    5d4c:	add	r8, r8, #2048	; 0x800
    5d50:	add	r0, r7, #2048	; 0x800
    5d54:	cmp	r1, r9
    5d58:	blt	5d04 <ReadCompressedDoubleData+0x1088>
    5d5c:	ldr	r0, [sp]
    5d60:	sub	r6, r4, r1
    5d64:	ldr	r1, [sp, #8]
    5d68:	add	r4, sp, #16
    5d6c:	mov	r2, r4
    5d70:	mul	sl, r6, r0
    5d74:	ldr	r0, [sp, #12]
    5d78:	mov	r3, sl
    5d7c:	bl	31f0 <InflateData>
    5d80:	cmp	r6, #1
    5d84:	blt	5f80 <ReadCompressedDoubleData+0x1304>
    5d88:	sub	r0, r9, r5
    5d8c:	vldr	s0, [r4]
    5d90:	subs	r0, r0, #1
    5d94:	add	r4, r4, #4
    5d98:	vcvt.f64.f32	d16, s0
    5d9c:	vstmia	r7!, {d16}
    5da0:	bne	5d8c <ReadCompressedDoubleData+0x1110>
    5da4:	b	5f80 <ReadCompressedDoubleData+0x1304>
    5da8:	sub	r1, r4, #128	; 0x80
    5dac:	add	r0, r8, #1024	; 0x400
    5db0:	lsl	r9, r2, #7
    5db4:	add	r5, sp, #16
    5db8:	str	r2, [sp]
    5dbc:	str	r1, [sp, #4]
    5dc0:	mov	r1, #0
    5dc4:	mov	sl, r1
    5dc8:	mov	r6, r0
    5dcc:	ldr	r0, [sp, #12]
    5dd0:	ldr	r1, [sp, #8]
    5dd4:	mov	r2, r5
    5dd8:	mov	r3, r9
    5ddc:	bl	31f0 <InflateData>
    5de0:	mov	r7, #0
    5de4:	add	r0, r5, r7
    5de8:	vld1.64	{d8-d9}, [r0]
    5dec:	vmov.32	r0, d9[0]
    5df0:	vmov.32	r1, d9[1]
    5df4:	bl	49578 <__aeabi_l2d>
    5df8:	vmov.32	r2, d8[0]
    5dfc:	vmov.32	r3, d8[1]
    5e00:	vmov	d9, r0, r1
    5e04:	mov	r0, r2
    5e08:	mov	r1, r3
    5e0c:	bl	49578 <__aeabi_l2d>
    5e10:	vmov	d8, r0, r1
    5e14:	add	r0, r8, r7
    5e18:	add	r7, r7, #16
    5e1c:	cmp	r7, #1024	; 0x400
    5e20:	vst1.64	{d8-d9}, [r0]
    5e24:	bne	5de4 <ReadCompressedDoubleData+0x1168>
    5e28:	ldr	r2, [sp, #4]
    5e2c:	add	r1, sl, #128	; 0x80
    5e30:	add	r8, r8, #1024	; 0x400
    5e34:	add	r0, r6, #1024	; 0x400
    5e38:	cmp	r1, r2
    5e3c:	blt	5dc4 <ReadCompressedDoubleData+0x1148>
    5e40:	ldr	r0, [sp]
    5e44:	sub	r5, r4, r1
    5e48:	ldr	r1, [sp, #8]
    5e4c:	add	r4, sp, #16
    5e50:	mov	r2, r4
    5e54:	mul	r3, r5, r0
    5e58:	ldr	r0, [sp, #12]
    5e5c:	mov	r7, r3
    5e60:	bl	31f0 <InflateData>
    5e64:	cmp	r5, #1
    5e68:	blt	5f7c <ReadCompressedDoubleData+0x1300>
    5e6c:	ldr	r0, [sp, #4]
    5e70:	sub	r5, r0, sl
    5e74:	ldrd	r0, [r4]
    5e78:	bl	49578 <__aeabi_l2d>
    5e7c:	strd	r0, [r6]
    5e80:	add	r6, r6, #8
    5e84:	add	r4, r4, #8
    5e88:	subs	r5, r5, #1
    5e8c:	bne	5e74 <ReadCompressedDoubleData+0x11f8>
    5e90:	b	5f7c <ReadCompressedDoubleData+0x1300>
    5e94:	sub	r1, r4, #128	; 0x80
    5e98:	add	r0, r8, #1024	; 0x400
    5e9c:	lsl	r9, r2, #7
    5ea0:	add	r5, sp, #16
    5ea4:	str	r2, [sp]
    5ea8:	str	r1, [sp, #4]
    5eac:	mov	r1, #0
    5eb0:	mov	sl, r1
    5eb4:	mov	r6, r0
    5eb8:	ldr	r0, [sp, #12]
    5ebc:	ldr	r1, [sp, #8]
    5ec0:	mov	r2, r5
    5ec4:	mov	r3, r9
    5ec8:	bl	31f0 <InflateData>
    5ecc:	mov	r7, #0
    5ed0:	add	r0, r5, r7
    5ed4:	vld1.64	{d8-d9}, [r0]
    5ed8:	vmov.32	r0, d9[0]
    5edc:	vmov.32	r1, d9[1]
    5ee0:	bl	49564 <__aeabi_ul2d>
    5ee4:	vmov.32	r2, d8[0]
    5ee8:	vmov.32	r3, d8[1]
    5eec:	vmov	d9, r0, r1
    5ef0:	mov	r0, r2
    5ef4:	mov	r1, r3
    5ef8:	bl	49564 <__aeabi_ul2d>
    5efc:	vmov	d8, r0, r1
    5f00:	add	r0, r8, r7
    5f04:	add	r7, r7, #16
    5f08:	cmp	r7, #1024	; 0x400
    5f0c:	vst1.64	{d8-d9}, [r0]
    5f10:	bne	5ed0 <ReadCompressedDoubleData+0x1254>
    5f14:	ldr	r2, [sp, #4]
    5f18:	add	r1, sl, #128	; 0x80
    5f1c:	add	r8, r8, #1024	; 0x400
    5f20:	add	r0, r6, #1024	; 0x400
    5f24:	cmp	r1, r2
    5f28:	blt	5eb0 <ReadCompressedDoubleData+0x1234>
    5f2c:	ldr	r0, [sp]
    5f30:	sub	r5, r4, r1
    5f34:	ldr	r1, [sp, #8]
    5f38:	add	r4, sp, #16
    5f3c:	mov	r2, r4
    5f40:	mul	r3, r5, r0
    5f44:	ldr	r0, [sp, #12]
    5f48:	mov	r7, r3
    5f4c:	bl	31f0 <InflateData>
    5f50:	cmp	r5, #1
    5f54:	blt	5f7c <ReadCompressedDoubleData+0x1300>
    5f58:	ldr	r0, [sp, #4]
    5f5c:	sub	r5, r0, sl
    5f60:	ldrd	r0, [r4]
    5f64:	bl	49564 <__aeabi_ul2d>
    5f68:	strd	r0, [r6]
    5f6c:	add	r6, r6, #8
    5f70:	add	r4, r4, #8
    5f74:	subs	r5, r5, #1
    5f78:	bne	5f60 <ReadCompressedDoubleData+0x12e4>
    5f7c:	mov	sl, r7
    5f80:	mov	r0, sl
    5f84:	sub	sp, fp, #48	; 0x30
    5f88:	vpop	{d8-d9}
    5f8c:	add	sp, sp, #4
    5f90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00005f94 <ReadSingleData>:
    5f94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5f98:	add	fp, sp, #28
    5f9c:	sub	sp, sp, #4
    5fa0:	vpush	{d8-d9}
    5fa4:	sub	sp, sp, #2112	; 0x840
    5fa8:	mov	r6, r0
    5fac:	mov	r0, #0
    5fb0:	cmp	r6, #0
    5fb4:	beq	7610 <ReadSingleData+0x167c>
    5fb8:	cmp	r1, #0
    5fbc:	mov	r9, r1
    5fc0:	ldrne	r1, [r6]
    5fc4:	cmpne	r1, #0
    5fc8:	beq	7610 <ReadSingleData+0x167c>
    5fcc:	mov	r0, r2
    5fd0:	mov	r7, r3
    5fd4:	mov	r8, r2
    5fd8:	bl	193c <Mat_SizeOf@plt>
    5fdc:	mov	sl, r0
    5fe0:	sub	r0, r8, #1
    5fe4:	mov	r5, #0
    5fe8:	str	r6, [sp, #28]
    5fec:	cmp	r0, #11
    5ff0:	str	sl, [sp, #24]
    5ff4:	bhi	7398 <ReadSingleData+0x1404>
    5ff8:	add	r1, pc, #4
    5ffc:	ldr	r0, [r1, r0, lsl #2]
    6000:	add	pc, r1, r0
    6004:	.word	0x00000030
    6008:	.word	0x0000007c
    600c:	.word	0x000000c8
    6010:	.word	0x00000128
    6014:	.word	0x00000188
    6018:	.word	0x000001e8
    601c:	.word	0x00000248
    6020:	.word	0x00001394
    6024:	.word	0x000002a0
    6028:	.word	0x00001394
    602c:	.word	0x00001394
    6030:	.word	0x000002fc
    6034:	cmp	r7, #256	; 0x100
    6038:	bgt	6368 <ReadSingleData+0x3d4>
    603c:	ldr	r3, [r6]
    6040:	add	r4, sp, #56	; 0x38
    6044:	mov	r1, sl
    6048:	mov	r2, r7
    604c:	mov	r0, r4
    6050:	bl	18d0 <fread@plt>
    6054:	mov	r5, r0
    6058:	cmp	r7, #1
    605c:	blt	760c <ReadSingleData+0x1678>
    6060:	ldrsb	r0, [r4], #1
    6064:	subs	r7, r7, #1
    6068:	vmov	s0, r0
    606c:	vcvt.f32.s32	s0, s0
    6070:	vstr	s0, [r9]
    6074:	add	r9, r9, #4
    6078:	bne	6060 <ReadSingleData+0xcc>
    607c:	b	760c <ReadSingleData+0x1678>
    6080:	cmp	r7, #256	; 0x100
    6084:	bgt	6444 <ReadSingleData+0x4b0>
    6088:	ldr	r3, [r6]
    608c:	add	r4, sp, #56	; 0x38
    6090:	mov	r1, sl
    6094:	mov	r2, r7
    6098:	mov	r0, r4
    609c:	bl	18d0 <fread@plt>
    60a0:	mov	r5, r0
    60a4:	cmp	r7, #1
    60a8:	blt	760c <ReadSingleData+0x1678>
    60ac:	ldrb	r0, [r4], #1
    60b0:	subs	r7, r7, #1
    60b4:	vmov	s0, r0
    60b8:	vcvt.f32.u32	s0, s0
    60bc:	vstr	s0, [r9]
    60c0:	add	r9, r9, #4
    60c4:	bne	60ac <ReadSingleData+0x118>
    60c8:	b	760c <ReadSingleData+0x1678>
    60cc:	ldr	r0, [r6, #20]
    60d0:	cmp	r0, #0
    60d4:	beq	6520 <ReadSingleData+0x58c>
    60d8:	cmp	r7, #256	; 0x100
    60dc:	bgt	6730 <ReadSingleData+0x79c>
    60e0:	ldr	r3, [r6]
    60e4:	add	r4, sp, #56	; 0x38
    60e8:	mov	r1, sl
    60ec:	mov	r2, r7
    60f0:	mov	r0, r4
    60f4:	bl	18d0 <fread@plt>
    60f8:	mov	r5, r0
    60fc:	cmp	r7, #1
    6100:	blt	760c <ReadSingleData+0x1678>
    6104:	mov	r0, r4
    6108:	bl	1c50 <Mat_int16Swap>
    610c:	vmov	s0, r0
    6110:	subs	r7, r7, #1
    6114:	add	r4, r4, #2
    6118:	vcvt.f32.s32	s0, s0
    611c:	vstr	s0, [r9]
    6120:	add	r9, r9, #4
    6124:	bne	6104 <ReadSingleData+0x170>
    6128:	b	760c <ReadSingleData+0x1678>
    612c:	ldr	r0, [r6, #20]
    6130:	cmp	r0, #0
    6134:	beq	656c <ReadSingleData+0x5d8>
    6138:	cmp	r7, #256	; 0x100
    613c:	bgt	6820 <ReadSingleData+0x88c>
    6140:	ldr	r3, [r6]
    6144:	add	r4, sp, #56	; 0x38
    6148:	mov	r1, sl
    614c:	mov	r2, r7
    6150:	mov	r0, r4
    6154:	bl	18d0 <fread@plt>
    6158:	mov	r5, r0
    615c:	cmp	r7, #1
    6160:	blt	760c <ReadSingleData+0x1678>
    6164:	mov	r0, r4
    6168:	bl	1c64 <Mat_uint16Swap>
    616c:	vmov	s0, r0
    6170:	subs	r7, r7, #1
    6174:	add	r4, r4, #2
    6178:	vcvt.f32.u32	s0, s0
    617c:	vstr	s0, [r9]
    6180:	add	r9, r9, #4
    6184:	bne	6164 <ReadSingleData+0x1d0>
    6188:	b	760c <ReadSingleData+0x1678>
    618c:	ldr	r0, [r6, #20]
    6190:	cmp	r0, #0
    6194:	beq	65b8 <ReadSingleData+0x624>
    6198:	cmp	r7, #256	; 0x100
    619c:	bgt	6910 <ReadSingleData+0x97c>
    61a0:	ldr	r3, [r6]
    61a4:	add	r4, sp, #56	; 0x38
    61a8:	mov	r1, sl
    61ac:	mov	r2, r7
    61b0:	mov	r0, r4
    61b4:	bl	18d0 <fread@plt>
    61b8:	mov	r5, r0
    61bc:	cmp	r7, #1
    61c0:	blt	760c <ReadSingleData+0x1678>
    61c4:	mov	r0, r4
    61c8:	bl	1c28 <Mat_int32Swap>
    61cc:	vmov	s0, r0
    61d0:	subs	r7, r7, #1
    61d4:	add	r4, r4, #4
    61d8:	vcvt.f32.s32	s0, s0
    61dc:	vstr	s0, [r9]
    61e0:	add	r9, r9, #4
    61e4:	bne	61c4 <ReadSingleData+0x230>
    61e8:	b	760c <ReadSingleData+0x1678>
    61ec:	ldr	r0, [r6, #20]
    61f0:	cmp	r0, #0
    61f4:	beq	6604 <ReadSingleData+0x670>
    61f8:	cmp	r7, #256	; 0x100
    61fc:	bgt	69f8 <ReadSingleData+0xa64>
    6200:	ldr	r3, [r6]
    6204:	add	r4, sp, #56	; 0x38
    6208:	mov	r1, sl
    620c:	mov	r2, r7
    6210:	mov	r0, r4
    6214:	bl	18d0 <fread@plt>
    6218:	mov	r5, r0
    621c:	cmp	r7, #1
    6220:	blt	760c <ReadSingleData+0x1678>
    6224:	mov	r0, r4
    6228:	bl	1c3c <Mat_uint32Swap>
    622c:	vmov	s0, r0
    6230:	subs	r7, r7, #1
    6234:	add	r4, r4, #4
    6238:	vcvt.f32.u32	s0, s0
    623c:	vstr	s0, [r9]
    6240:	add	r9, r9, #4
    6244:	bne	6224 <ReadSingleData+0x290>
    6248:	b	760c <ReadSingleData+0x1678>
    624c:	ldr	r0, [r6, #20]
    6250:	cmp	r0, #0
    6254:	beq	6650 <ReadSingleData+0x6bc>
    6258:	cmp	r7, #256	; 0x100
    625c:	bgt	6ae0 <ReadSingleData+0xb4c>
    6260:	ldr	r3, [r6]
    6264:	add	r4, sp, #56	; 0x38
    6268:	mov	r1, sl
    626c:	mov	r2, r7
    6270:	mov	r0, r4
    6274:	bl	18d0 <fread@plt>
    6278:	mov	r5, r0
    627c:	cmp	r7, #1
    6280:	blt	760c <ReadSingleData+0x1678>
    6284:	mov	r0, r4
    6288:	bl	1c7c <Mat_floatSwap>
    628c:	vstr	s0, [r9]
    6290:	subs	r7, r7, #1
    6294:	add	r9, r9, #4
    6298:	add	r4, r4, #4
    629c:	bne	6284 <ReadSingleData+0x2f0>
    62a0:	b	760c <ReadSingleData+0x1678>
    62a4:	ldr	r0, [r6, #20]
    62a8:	cmp	r0, #0
    62ac:	beq	6688 <ReadSingleData+0x6f4>
    62b0:	cmp	r7, #256	; 0x100
    62b4:	bgt	6bb8 <ReadSingleData+0xc24>
    62b8:	ldr	r3, [r6]
    62bc:	add	r4, sp, #56	; 0x38
    62c0:	mov	r1, sl
    62c4:	mov	r2, r7
    62c8:	mov	r0, r4
    62cc:	bl	18d0 <fread@plt>
    62d0:	mov	r5, r0
    62d4:	cmp	r7, #1
    62d8:	blt	760c <ReadSingleData+0x1678>
    62dc:	mov	r0, r4
    62e0:	bl	1cc0 <Mat_doubleSwap>
    62e4:	vcvt.f32.f64	s0, d0
    62e8:	subs	r7, r7, #1
    62ec:	add	r4, r4, #8
    62f0:	vstr	s0, [r9]
    62f4:	add	r9, r9, #4
    62f8:	bne	62dc <ReadSingleData+0x348>
    62fc:	b	760c <ReadSingleData+0x1678>
    6300:	ldr	r0, [r6, #20]
    6304:	cmp	r0, #0
    6308:	beq	66d4 <ReadSingleData+0x740>
    630c:	cmp	r7, #256	; 0x100
    6310:	bgt	6ca4 <ReadSingleData+0xd10>
    6314:	ldr	r3, [r6]
    6318:	add	r4, sp, #56	; 0x38
    631c:	mov	r1, sl
    6320:	mov	r2, r7
    6324:	mov	r0, r4
    6328:	bl	18d0 <fread@plt>
    632c:	mov	r5, r0
    6330:	cmp	r7, #1
    6334:	blt	7398 <ReadSingleData+0x1404>
    6338:	str	r8, [sp, #8]
    633c:	mov	r8, r7
    6340:	mov	r6, r7
    6344:	mov	r7, r9
    6348:	mov	r0, r4
    634c:	bl	1bbc <Mat_int64Swap>
    6350:	bl	497ac <__aeabi_l2f>
    6354:	str	r0, [r7], #4
    6358:	subs	r6, r6, #1
    635c:	add	r4, r4, #8
    6360:	bne	6348 <ReadSingleData+0x3b4>
    6364:	b	6728 <ReadSingleData+0x794>
    6368:	add	r1, r9, #1024	; 0x400
    636c:	str	r7, [sp, #12]
    6370:	sub	r8, r7, #256	; 0x100
    6374:	mov	r0, #0
    6378:	add	r4, sp, #56	; 0x38
    637c:	add	r7, sp, #48	; 0x30
    6380:	mov	r5, #0
    6384:	mov	sl, r0
    6388:	ldr	r0, [sp, #28]
    638c:	mov	r6, r1
    6390:	ldr	r1, [sp, #24]
    6394:	mov	r2, #256	; 0x100
    6398:	ldr	r3, [r0]
    639c:	mov	r0, r4
    63a0:	bl	18d0 <fread@plt>
    63a4:	mov	r1, r9
    63a8:	mov	r2, #0
    63ac:	ldr	r3, [r4, r2]
    63b0:	add	r2, r2, #4
    63b4:	cmp	r2, #256	; 0x100
    63b8:	str	r3, [sp, #48]	; 0x30
    63bc:	vld1.32	{d16[0]}, [r7 :32]
    63c0:	vmovl.s8	q8, d16
    63c4:	vmovl.s16	q8, d16
    63c8:	vcvt.f32.s32	q8, q8
    63cc:	vst1.32	{d16-d17}, [r1]!
    63d0:	bne	63ac <ReadSingleData+0x418>
    63d4:	add	r5, r0, r5
    63d8:	add	r0, sl, #256	; 0x100
    63dc:	add	r9, r9, #1024	; 0x400
    63e0:	add	r1, r6, #1024	; 0x400
    63e4:	cmp	r0, r8
    63e8:	blt	6384 <ReadSingleData+0x3f0>
    63ec:	ldr	r1, [sp, #12]
    63f0:	cmp	r0, r1
    63f4:	bge	7608 <ReadSingleData+0x1674>
    63f8:	sub	r9, r1, r0
    63fc:	ldr	r0, [sp, #28]
    6400:	ldr	r1, [sp, #24]
    6404:	add	r4, sp, #56	; 0x38
    6408:	mov	r2, r9
    640c:	ldr	r3, [r0]
    6410:	mov	r0, r4
    6414:	bl	18d0 <fread@plt>
    6418:	add	r5, r0, r5
    641c:	cmp	r9, #1
    6420:	blt	7608 <ReadSingleData+0x1674>
    6424:	sub	r0, r8, sl
    6428:	ldrsb	r1, [r4], #1
    642c:	subs	r0, r0, #1
    6430:	vmov	s0, r1
    6434:	vcvt.f32.s32	s0, s0
    6438:	vstmia	r6!, {s0}
    643c:	bne	6428 <ReadSingleData+0x494>
    6440:	b	7608 <ReadSingleData+0x1674>
    6444:	add	r1, r9, #1024	; 0x400
    6448:	str	r7, [sp, #12]
    644c:	sub	r8, r7, #256	; 0x100
    6450:	mov	r0, #0
    6454:	add	r4, sp, #56	; 0x38
    6458:	add	r7, sp, #52	; 0x34
    645c:	mov	r5, #0
    6460:	mov	sl, r0
    6464:	ldr	r0, [sp, #28]
    6468:	mov	r6, r1
    646c:	ldr	r1, [sp, #24]
    6470:	mov	r2, #256	; 0x100
    6474:	ldr	r3, [r0]
    6478:	mov	r0, r4
    647c:	bl	18d0 <fread@plt>
    6480:	mov	r1, r9
    6484:	mov	r2, #0
    6488:	ldr	r3, [r4, r2]
    648c:	add	r2, r2, #4
    6490:	cmp	r2, #256	; 0x100
    6494:	str	r3, [sp, #52]	; 0x34
    6498:	vld1.32	{d16[0]}, [r7 :32]
    649c:	vmovl.u8	q8, d16
    64a0:	vmovl.u16	q8, d16
    64a4:	vcvt.f32.u32	q8, q8
    64a8:	vst1.32	{d16-d17}, [r1]!
    64ac:	bne	6488 <ReadSingleData+0x4f4>
    64b0:	add	r5, r0, r5
    64b4:	add	r0, sl, #256	; 0x100
    64b8:	add	r9, r9, #1024	; 0x400
    64bc:	add	r1, r6, #1024	; 0x400
    64c0:	cmp	r0, r8
    64c4:	blt	6460 <ReadSingleData+0x4cc>
    64c8:	ldr	r1, [sp, #12]
    64cc:	cmp	r0, r1
    64d0:	bge	7608 <ReadSingleData+0x1674>
    64d4:	sub	r9, r1, r0
    64d8:	ldr	r0, [sp, #28]
    64dc:	ldr	r1, [sp, #24]
    64e0:	add	r4, sp, #56	; 0x38
    64e4:	mov	r2, r9
    64e8:	ldr	r3, [r0]
    64ec:	mov	r0, r4
    64f0:	bl	18d0 <fread@plt>
    64f4:	add	r5, r0, r5
    64f8:	cmp	r9, #1
    64fc:	blt	7608 <ReadSingleData+0x1674>
    6500:	sub	r0, r8, sl
    6504:	ldrb	r1, [r4], #1
    6508:	subs	r0, r0, #1
    650c:	vmov	s0, r1
    6510:	vcvt.f32.u32	s0, s0
    6514:	vstmia	r6!, {s0}
    6518:	bne	6504 <ReadSingleData+0x570>
    651c:	b	7608 <ReadSingleData+0x1674>
    6520:	cmp	r7, #256	; 0x100
    6524:	bgt	6da4 <ReadSingleData+0xe10>
    6528:	ldr	r3, [r6]
    652c:	add	r4, sp, #56	; 0x38
    6530:	mov	r1, sl
    6534:	mov	r2, r7
    6538:	mov	r0, r4
    653c:	bl	18d0 <fread@plt>
    6540:	mov	r5, r0
    6544:	cmp	r7, #1
    6548:	blt	760c <ReadSingleData+0x1678>
    654c:	ldrsh	r0, [r4], #2
    6550:	subs	r7, r7, #1
    6554:	vmov	s0, r0
    6558:	vcvt.f32.s32	s0, s0
    655c:	vstr	s0, [r9]
    6560:	add	r9, r9, #4
    6564:	bne	654c <ReadSingleData+0x5b8>
    6568:	b	760c <ReadSingleData+0x1678>
    656c:	cmp	r7, #256	; 0x100
    6570:	bgt	6e88 <ReadSingleData+0xef4>
    6574:	ldr	r3, [r6]
    6578:	add	r4, sp, #56	; 0x38
    657c:	mov	r1, sl
    6580:	mov	r2, r7
    6584:	mov	r0, r4
    6588:	bl	18d0 <fread@plt>
    658c:	mov	r5, r0
    6590:	cmp	r7, #1
    6594:	blt	760c <ReadSingleData+0x1678>
    6598:	ldrh	r0, [r4], #2
    659c:	subs	r7, r7, #1
    65a0:	vmov	s0, r0
    65a4:	vcvt.f32.u32	s0, s0
    65a8:	vstr	s0, [r9]
    65ac:	add	r9, r9, #4
    65b0:	bne	6598 <ReadSingleData+0x604>
    65b4:	b	760c <ReadSingleData+0x1678>
    65b8:	cmp	r7, #256	; 0x100
    65bc:	bgt	6f6c <ReadSingleData+0xfd8>
    65c0:	ldr	r3, [r6]
    65c4:	add	r4, sp, #56	; 0x38
    65c8:	mov	r1, sl
    65cc:	mov	r2, r7
    65d0:	mov	r0, r4
    65d4:	bl	18d0 <fread@plt>
    65d8:	mov	r5, r0
    65dc:	cmp	r7, #1
    65e0:	blt	760c <ReadSingleData+0x1678>
    65e4:	ldr	r0, [r4], #4
    65e8:	subs	r7, r7, #1
    65ec:	vmov	s0, r0
    65f0:	vcvt.f32.s32	s0, s0
    65f4:	vstr	s0, [r9]
    65f8:	add	r9, r9, #4
    65fc:	bne	65e4 <ReadSingleData+0x650>
    6600:	b	760c <ReadSingleData+0x1678>
    6604:	cmp	r7, #256	; 0x100
    6608:	bgt	7038 <ReadSingleData+0x10a4>
    660c:	ldr	r3, [r6]
    6610:	add	r4, sp, #56	; 0x38
    6614:	mov	r1, sl
    6618:	mov	r2, r7
    661c:	mov	r0, r4
    6620:	bl	18d0 <fread@plt>
    6624:	mov	r5, r0
    6628:	cmp	r7, #1
    662c:	blt	760c <ReadSingleData+0x1678>
    6630:	ldr	r0, [r4], #4
    6634:	subs	r7, r7, #1
    6638:	vmov	s0, r0
    663c:	vcvt.f32.u32	s0, s0
    6640:	vstr	s0, [r9]
    6644:	add	r9, r9, #4
    6648:	bne	6630 <ReadSingleData+0x69c>
    664c:	b	760c <ReadSingleData+0x1678>
    6650:	cmp	r7, #256	; 0x100
    6654:	bgt	7104 <ReadSingleData+0x1170>
    6658:	ldr	r3, [r6]
    665c:	add	r0, sp, #56	; 0x38
    6660:	mov	r1, sl
    6664:	mov	r2, r7
    6668:	bl	18d0 <fread@plt>
    666c:	mov	r5, r0
    6670:	cmp	r7, #1
    6674:	blt	760c <ReadSingleData+0x1678>
    6678:	lsl	r2, r7, #2
    667c:	add	r1, sp, #56	; 0x38
    6680:	mov	r0, r9
    6684:	b	71a8 <ReadSingleData+0x1214>
    6688:	cmp	r7, #256	; 0x100
    668c:	bgt	71b0 <ReadSingleData+0x121c>
    6690:	ldr	r3, [r6]
    6694:	add	r4, sp, #56	; 0x38
    6698:	mov	r1, sl
    669c:	mov	r2, r7
    66a0:	mov	r0, r4
    66a4:	bl	18d0 <fread@plt>
    66a8:	mov	r5, r0
    66ac:	cmp	r7, #1
    66b0:	blt	760c <ReadSingleData+0x1678>
    66b4:	vldr	d16, [r4]
    66b8:	subs	r7, r7, #1
    66bc:	add	r4, r4, #8
    66c0:	vcvt.f32.f64	s0, d16
    66c4:	vstr	s0, [r9]
    66c8:	add	r9, r9, #4
    66cc:	bne	66b4 <ReadSingleData+0x720>
    66d0:	b	760c <ReadSingleData+0x1678>
    66d4:	cmp	r7, #256	; 0x100
    66d8:	bgt	7280 <ReadSingleData+0x12ec>
    66dc:	ldr	r3, [r6]
    66e0:	add	r4, sp, #56	; 0x38
    66e4:	mov	r1, sl
    66e8:	mov	r2, r7
    66ec:	mov	r0, r4
    66f0:	bl	18d0 <fread@plt>
    66f4:	mov	r5, r0
    66f8:	cmp	r7, #1
    66fc:	blt	7398 <ReadSingleData+0x1404>
    6700:	str	r8, [sp, #8]
    6704:	mov	r8, r7
    6708:	mov	r6, r7
    670c:	mov	r7, r9
    6710:	ldrd	r0, [r4]
    6714:	bl	497ac <__aeabi_l2f>
    6718:	str	r0, [r7], #4
    671c:	subs	r6, r6, #1
    6720:	add	r4, r4, #8
    6724:	bne	6710 <ReadSingleData+0x77c>
    6728:	mov	r7, r8
    672c:	b	7390 <ReadSingleData+0x13fc>
    6730:	sub	r0, r7, #256	; 0x100
    6734:	add	r1, r9, #1024	; 0x400
    6738:	add	r4, sp, #56	; 0x38
    673c:	mov	r5, #0
    6740:	str	r7, [sp, #12]
    6744:	str	r0, [sp, #16]
    6748:	mov	r0, #0
    674c:	ldr	r3, [r6]
    6750:	str	r0, [sp, #20]
    6754:	mov	r8, r1
    6758:	mov	r0, r4
    675c:	mov	r1, sl
    6760:	mov	r2, #256	; 0x100
    6764:	bl	18d0 <fread@plt>
    6768:	mov	r6, r0
    676c:	mov	r7, r9
    6770:	mov	sl, #0
    6774:	add	r0, r4, sl
    6778:	bl	1c50 <Mat_int16Swap>
    677c:	vmov	s0, r0
    6780:	add	sl, sl, #2
    6784:	vcvt.f32.s32	s0, s0
    6788:	cmp	sl, #512	; 0x200
    678c:	vstmia	r7!, {s0}
    6790:	bne	6774 <ReadSingleData+0x7e0>
    6794:	ldr	r7, [sp, #20]
    6798:	ldr	r2, [sp, #16]
    679c:	add	r5, r6, r5
    67a0:	ldr	sl, [sp, #24]
    67a4:	ldr	r6, [sp, #28]
    67a8:	add	r9, r9, #1024	; 0x400
    67ac:	add	r1, r8, #1024	; 0x400
    67b0:	add	r0, r7, #256	; 0x100
    67b4:	cmp	r0, r2
    67b8:	blt	674c <ReadSingleData+0x7b8>
    67bc:	ldr	r1, [sp, #12]
    67c0:	cmp	r0, r1
    67c4:	bge	760c <ReadSingleData+0x1678>
    67c8:	mov	r2, r6
    67cc:	sub	r6, r1, r0
    67d0:	add	r4, sp, #56	; 0x38
    67d4:	mov	r1, sl
    67d8:	ldr	r3, [r2]
    67dc:	mov	r0, r4
    67e0:	mov	r2, r6
    67e4:	bl	18d0 <fread@plt>
    67e8:	add	r5, r0, r5
    67ec:	cmp	r6, #1
    67f0:	blt	760c <ReadSingleData+0x1678>
    67f4:	ldr	r0, [sp, #16]
    67f8:	sub	r6, r0, r7
    67fc:	mov	r0, r4
    6800:	bl	1c50 <Mat_int16Swap>
    6804:	vmov	s0, r0
    6808:	subs	r6, r6, #1
    680c:	add	r4, r4, #2
    6810:	vcvt.f32.s32	s0, s0
    6814:	vstmia	r8!, {s0}
    6818:	bne	67fc <ReadSingleData+0x868>
    681c:	b	760c <ReadSingleData+0x1678>
    6820:	sub	r0, r7, #256	; 0x100
    6824:	add	r1, r9, #1024	; 0x400
    6828:	add	r4, sp, #56	; 0x38
    682c:	mov	r5, #0
    6830:	str	r7, [sp, #12]
    6834:	str	r0, [sp, #16]
    6838:	mov	r0, #0
    683c:	ldr	r3, [r6]
    6840:	str	r0, [sp, #20]
    6844:	mov	r8, r1
    6848:	mov	r0, r4
    684c:	mov	r1, sl
    6850:	mov	r2, #256	; 0x100
    6854:	bl	18d0 <fread@plt>
    6858:	mov	r6, r0
    685c:	mov	r7, r9
    6860:	mov	sl, #0
    6864:	add	r0, r4, sl
    6868:	bl	1c64 <Mat_uint16Swap>
    686c:	vmov	s0, r0
    6870:	add	sl, sl, #2
    6874:	vcvt.f32.u32	s0, s0
    6878:	cmp	sl, #512	; 0x200
    687c:	vstmia	r7!, {s0}
    6880:	bne	6864 <ReadSingleData+0x8d0>
    6884:	ldr	r7, [sp, #20]
    6888:	ldr	r2, [sp, #16]
    688c:	add	r5, r6, r5
    6890:	ldr	sl, [sp, #24]
    6894:	ldr	r6, [sp, #28]
    6898:	add	r9, r9, #1024	; 0x400
    689c:	add	r1, r8, #1024	; 0x400
    68a0:	add	r0, r7, #256	; 0x100
    68a4:	cmp	r0, r2
    68a8:	blt	683c <ReadSingleData+0x8a8>
    68ac:	ldr	r1, [sp, #12]
    68b0:	cmp	r0, r1
    68b4:	bge	760c <ReadSingleData+0x1678>
    68b8:	mov	r2, r6
    68bc:	sub	r6, r1, r0
    68c0:	add	r4, sp, #56	; 0x38
    68c4:	mov	r1, sl
    68c8:	ldr	r3, [r2]
    68cc:	mov	r0, r4
    68d0:	mov	r2, r6
    68d4:	bl	18d0 <fread@plt>
    68d8:	add	r5, r0, r5
    68dc:	cmp	r6, #1
    68e0:	blt	760c <ReadSingleData+0x1678>
    68e4:	ldr	r0, [sp, #16]
    68e8:	sub	r6, r0, r7
    68ec:	mov	r0, r4
    68f0:	bl	1c64 <Mat_uint16Swap>
    68f4:	vmov	s0, r0
    68f8:	subs	r6, r6, #1
    68fc:	add	r4, r4, #2
    6900:	vcvt.f32.u32	s0, s0
    6904:	vstmia	r8!, {s0}
    6908:	bne	68ec <ReadSingleData+0x958>
    690c:	b	760c <ReadSingleData+0x1678>
    6910:	sub	r0, r7, #256	; 0x100
    6914:	add	r1, r9, #1024	; 0x400
    6918:	add	r4, sp, #56	; 0x38
    691c:	mov	r5, #0
    6920:	str	r7, [sp, #12]
    6924:	str	r0, [sp, #20]
    6928:	mov	r0, #0
    692c:	mov	r8, r1
    6930:	ldr	r3, [r6]
    6934:	ldr	r1, [sp, #24]
    6938:	mov	sl, r0
    693c:	mov	r0, r4
    6940:	mov	r2, #256	; 0x100
    6944:	bl	18d0 <fread@plt>
    6948:	mov	r6, r0
    694c:	mov	r7, #0
    6950:	add	r0, r4, r7
    6954:	bl	1c28 <Mat_int32Swap>
    6958:	vmov	s0, r0
    695c:	add	r1, r9, r7
    6960:	add	r7, r7, #4
    6964:	vcvt.f32.s32	s0, s0
    6968:	cmp	r7, #1024	; 0x400
    696c:	vstr	s0, [r1]
    6970:	bne	6950 <ReadSingleData+0x9bc>
    6974:	ldr	r2, [sp, #20]
    6978:	add	r5, r6, r5
    697c:	ldr	r6, [sp, #28]
    6980:	add	r0, sl, #256	; 0x100
    6984:	add	r9, r9, #1024	; 0x400
    6988:	add	r1, r8, #1024	; 0x400
    698c:	cmp	r0, r2
    6990:	blt	692c <ReadSingleData+0x998>
    6994:	ldr	r1, [sp, #12]
    6998:	cmp	r0, r1
    699c:	bge	7608 <ReadSingleData+0x1674>
    69a0:	mov	r2, r6
    69a4:	sub	r6, r1, r0
    69a8:	ldr	r1, [sp, #24]
    69ac:	add	r4, sp, #56	; 0x38
    69b0:	ldr	r3, [r2]
    69b4:	mov	r0, r4
    69b8:	mov	r2, r6
    69bc:	bl	18d0 <fread@plt>
    69c0:	add	r5, r0, r5
    69c4:	cmp	r6, #1
    69c8:	blt	7608 <ReadSingleData+0x1674>
    69cc:	ldr	r0, [sp, #20]
    69d0:	sub	r6, r0, sl
    69d4:	mov	r0, r4
    69d8:	bl	1c28 <Mat_int32Swap>
    69dc:	vmov	s0, r0
    69e0:	subs	r6, r6, #1
    69e4:	add	r4, r4, #4
    69e8:	vcvt.f32.s32	s0, s0
    69ec:	vstmia	r8!, {s0}
    69f0:	bne	69d4 <ReadSingleData+0xa40>
    69f4:	b	7608 <ReadSingleData+0x1674>
    69f8:	sub	r0, r7, #256	; 0x100
    69fc:	add	r1, r9, #1024	; 0x400
    6a00:	add	r4, sp, #56	; 0x38
    6a04:	mov	r5, #0
    6a08:	str	r7, [sp, #12]
    6a0c:	str	r0, [sp, #20]
    6a10:	mov	r0, #0
    6a14:	mov	r8, r1
    6a18:	ldr	r3, [r6]
    6a1c:	ldr	r1, [sp, #24]
    6a20:	mov	sl, r0
    6a24:	mov	r0, r4
    6a28:	mov	r2, #256	; 0x100
    6a2c:	bl	18d0 <fread@plt>
    6a30:	mov	r6, r0
    6a34:	mov	r7, #0
    6a38:	add	r0, r4, r7
    6a3c:	bl	1c3c <Mat_uint32Swap>
    6a40:	vmov	s0, r0
    6a44:	add	r1, r9, r7
    6a48:	add	r7, r7, #4
    6a4c:	vcvt.f32.u32	s0, s0
    6a50:	cmp	r7, #1024	; 0x400
    6a54:	vstr	s0, [r1]
    6a58:	bne	6a38 <ReadSingleData+0xaa4>
    6a5c:	ldr	r2, [sp, #20]
    6a60:	add	r5, r6, r5
    6a64:	ldr	r6, [sp, #28]
    6a68:	add	r0, sl, #256	; 0x100
    6a6c:	add	r9, r9, #1024	; 0x400
    6a70:	add	r1, r8, #1024	; 0x400
    6a74:	cmp	r0, r2
    6a78:	blt	6a14 <ReadSingleData+0xa80>
    6a7c:	ldr	r1, [sp, #12]
    6a80:	cmp	r0, r1
    6a84:	bge	7608 <ReadSingleData+0x1674>
    6a88:	mov	r2, r6
    6a8c:	sub	r6, r1, r0
    6a90:	ldr	r1, [sp, #24]
    6a94:	add	r4, sp, #56	; 0x38
    6a98:	ldr	r3, [r2]
    6a9c:	mov	r0, r4
    6aa0:	mov	r2, r6
    6aa4:	bl	18d0 <fread@plt>
    6aa8:	add	r5, r0, r5
    6aac:	cmp	r6, #1
    6ab0:	blt	7608 <ReadSingleData+0x1674>
    6ab4:	ldr	r0, [sp, #20]
    6ab8:	sub	r6, r0, sl
    6abc:	mov	r0, r4
    6ac0:	bl	1c3c <Mat_uint32Swap>
    6ac4:	vmov	s0, r0
    6ac8:	subs	r6, r6, #1
    6acc:	add	r4, r4, #4
    6ad0:	vcvt.f32.u32	s0, s0
    6ad4:	vstmia	r8!, {s0}
    6ad8:	bne	6abc <ReadSingleData+0xb28>
    6adc:	b	7608 <ReadSingleData+0x1674>
    6ae0:	sub	r0, r7, #256	; 0x100
    6ae4:	add	r1, r9, #1024	; 0x400
    6ae8:	add	r4, sp, #56	; 0x38
    6aec:	mov	r5, #0
    6af0:	str	r7, [sp, #12]
    6af4:	str	r0, [sp, #20]
    6af8:	mov	r0, #0
    6afc:	mov	r8, r1
    6b00:	ldr	r3, [r6]
    6b04:	ldr	r1, [sp, #24]
    6b08:	mov	sl, r0
    6b0c:	mov	r0, r4
    6b10:	mov	r2, #256	; 0x100
    6b14:	bl	18d0 <fread@plt>
    6b18:	mov	r6, r0
    6b1c:	mov	r7, #0
    6b20:	add	r0, r4, r7
    6b24:	bl	1c7c <Mat_floatSwap>
    6b28:	add	r0, r9, r7
    6b2c:	add	r7, r7, #4
    6b30:	cmp	r7, #1024	; 0x400
    6b34:	vstr	s0, [r0]
    6b38:	bne	6b20 <ReadSingleData+0xb8c>
    6b3c:	ldr	r2, [sp, #20]
    6b40:	add	r5, r6, r5
    6b44:	ldr	r6, [sp, #28]
    6b48:	add	r0, sl, #256	; 0x100
    6b4c:	add	r9, r9, #1024	; 0x400
    6b50:	add	r1, r8, #1024	; 0x400
    6b54:	cmp	r0, r2
    6b58:	blt	6afc <ReadSingleData+0xb68>
    6b5c:	ldr	r1, [sp, #12]
    6b60:	cmp	r0, r1
    6b64:	bge	7608 <ReadSingleData+0x1674>
    6b68:	mov	r2, r6
    6b6c:	sub	r6, r1, r0
    6b70:	ldr	r1, [sp, #24]
    6b74:	add	r4, sp, #56	; 0x38
    6b78:	ldr	r3, [r2]
    6b7c:	mov	r0, r4
    6b80:	mov	r2, r6
    6b84:	bl	18d0 <fread@plt>
    6b88:	add	r5, r0, r5
    6b8c:	cmp	r6, #1
    6b90:	blt	7608 <ReadSingleData+0x1674>
    6b94:	ldr	r0, [sp, #20]
    6b98:	sub	r6, r0, sl
    6b9c:	mov	r0, r4
    6ba0:	bl	1c7c <Mat_floatSwap>
    6ba4:	vstmia	r8!, {s0}
    6ba8:	subs	r6, r6, #1
    6bac:	add	r4, r4, #4
    6bb0:	bne	6b9c <ReadSingleData+0xc08>
    6bb4:	b	7608 <ReadSingleData+0x1674>
    6bb8:	sub	r0, r7, #256	; 0x100
    6bbc:	add	r1, r9, #1024	; 0x400
    6bc0:	mov	r5, #0
    6bc4:	str	r7, [sp, #12]
    6bc8:	str	r0, [sp, #16]
    6bcc:	mov	r0, #0
    6bd0:	ldr	r3, [r6]
    6bd4:	add	r4, sp, #56	; 0x38
    6bd8:	str	r0, [sp, #20]
    6bdc:	mov	r8, r1
    6be0:	mov	r1, sl
    6be4:	mov	r2, #256	; 0x100
    6be8:	mov	r0, r4
    6bec:	bl	18d0 <fread@plt>
    6bf0:	mov	r6, r0
    6bf4:	mov	r7, #0
    6bf8:	mov	r0, r4
    6bfc:	add	sl, r9, r7
    6c00:	bl	1cc0 <Mat_doubleSwap>
    6c04:	add	r7, r7, #4
    6c08:	vcvt.f32.f64	s0, d0
    6c0c:	add	r4, r4, #8
    6c10:	cmp	r7, #1024	; 0x400
    6c14:	vstr	s0, [sl]
    6c18:	bne	6bf8 <ReadSingleData+0xc64>
    6c1c:	ldr	r7, [sp, #20]
    6c20:	ldr	r2, [sp, #16]
    6c24:	add	r5, r6, r5
    6c28:	ldr	sl, [sp, #24]
    6c2c:	ldr	r6, [sp, #28]
    6c30:	add	r9, r9, #1024	; 0x400
    6c34:	add	r1, r8, #1024	; 0x400
    6c38:	add	r0, r7, #256	; 0x100
    6c3c:	cmp	r0, r2
    6c40:	blt	6bd0 <ReadSingleData+0xc3c>
    6c44:	ldr	r1, [sp, #12]
    6c48:	cmp	r0, r1
    6c4c:	bge	760c <ReadSingleData+0x1678>
    6c50:	mov	r2, r6
    6c54:	sub	r6, r1, r0
    6c58:	add	r4, sp, #56	; 0x38
    6c5c:	mov	r1, sl
    6c60:	ldr	r3, [r2]
    6c64:	mov	r0, r4
    6c68:	mov	r2, r6
    6c6c:	bl	18d0 <fread@plt>
    6c70:	add	r5, r0, r5
    6c74:	cmp	r6, #1
    6c78:	blt	760c <ReadSingleData+0x1678>
    6c7c:	ldr	r0, [sp, #16]
    6c80:	sub	r6, r0, r7
    6c84:	mov	r0, r4
    6c88:	bl	1cc0 <Mat_doubleSwap>
    6c8c:	vcvt.f32.f64	s0, d0
    6c90:	subs	r6, r6, #1
    6c94:	add	r4, r4, #8
    6c98:	vstmia	r8!, {s0}
    6c9c:	bne	6c84 <ReadSingleData+0xcf0>
    6ca0:	b	760c <ReadSingleData+0x1678>
    6ca4:	sub	r0, r7, #256	; 0x100
    6ca8:	add	r1, r9, #1024	; 0x400
    6cac:	mov	sl, r9
    6cb0:	mov	r5, #0
    6cb4:	str	r8, [sp, #8]
    6cb8:	str	r7, [sp, #12]
    6cbc:	str	r0, [sp, #16]
    6cc0:	mov	r0, #0
    6cc4:	str	r0, [sp, #20]
    6cc8:	ldr	r0, [sp, #28]
    6ccc:	mov	r6, r1
    6cd0:	ldr	r1, [sp, #24]
    6cd4:	add	r4, sp, #56	; 0x38
    6cd8:	mov	r2, #256	; 0x100
    6cdc:	ldr	r3, [r0]
    6ce0:	mov	r0, r4
    6ce4:	bl	18d0 <fread@plt>
    6ce8:	mov	r8, r0
    6cec:	mov	r7, #0
    6cf0:	mov	r0, r4
    6cf4:	bl	1bbc <Mat_int64Swap>
    6cf8:	bl	497ac <__aeabi_l2f>
    6cfc:	str	r0, [sl, r7]
    6d00:	add	r7, r7, #4
    6d04:	add	r4, r4, #8
    6d08:	cmp	r7, #1024	; 0x400
    6d0c:	bne	6cf0 <ReadSingleData+0xd5c>
    6d10:	ldr	r0, [sp, #20]
    6d14:	ldr	r2, [sp, #16]
    6d18:	add	r5, r8, r5
    6d1c:	add	sl, sl, #1024	; 0x400
    6d20:	add	r1, r6, #1024	; 0x400
    6d24:	add	r0, r0, #256	; 0x100
    6d28:	cmp	r0, r2
    6d2c:	blt	6cc4 <ReadSingleData+0xd30>
    6d30:	ldr	r7, [sp, #12]
    6d34:	cmp	r0, r7
    6d38:	bge	738c <ReadSingleData+0x13f8>
    6d3c:	sub	r8, r7, r0
    6d40:	ldr	r0, [sp, #28]
    6d44:	ldr	sl, [sp, #24]
    6d48:	add	r4, sp, #56	; 0x38
    6d4c:	mov	r2, r8
    6d50:	ldr	r3, [r0]
    6d54:	mov	r0, r4
    6d58:	mov	r1, sl
    6d5c:	bl	18d0 <fread@plt>
    6d60:	add	r5, r0, r5
    6d64:	cmp	r8, #1
    6d68:	blt	7390 <ReadSingleData+0x13fc>
    6d6c:	ldr	r0, [sp, #16]
    6d70:	ldr	r1, [sp, #20]
    6d74:	ldr	r8, [sp, #8]
    6d78:	sub	r7, r0, r1
    6d7c:	mov	r0, r4
    6d80:	bl	1bbc <Mat_int64Swap>
    6d84:	bl	497ac <__aeabi_l2f>
    6d88:	str	r0, [r6], #4
    6d8c:	subs	r7, r7, #1
    6d90:	add	r4, r4, #8
    6d94:	bne	6d7c <ReadSingleData+0xde8>
    6d98:	ldr	r7, [sp, #12]
    6d9c:	ldr	r6, [sp, #28]
    6da0:	b	7398 <ReadSingleData+0x1404>
    6da4:	add	r1, r9, #1024	; 0x400
    6da8:	str	r7, [sp, #12]
    6dac:	sub	r8, r7, #256	; 0x100
    6db0:	mov	r0, #0
    6db4:	add	r4, sp, #56	; 0x38
    6db8:	add	r7, sp, #32
    6dbc:	mov	r5, #0
    6dc0:	mov	sl, r0
    6dc4:	ldr	r0, [sp, #28]
    6dc8:	mov	r6, r1
    6dcc:	ldr	r1, [sp, #24]
    6dd0:	mov	r2, #256	; 0x100
    6dd4:	ldr	r3, [r0]
    6dd8:	mov	r0, r4
    6ddc:	bl	18d0 <fread@plt>
    6de0:	mov	r1, r9
    6de4:	mov	r2, #0
    6de8:	ldr	r3, [r4, r2]
    6dec:	str	r3, [sp, #32]
    6df0:	add	r3, r4, r2
    6df4:	add	r2, r2, #8
    6df8:	ldr	r3, [r3, #4]
    6dfc:	cmp	r2, #512	; 0x200
    6e00:	str	r3, [sp, #36]	; 0x24
    6e04:	vld1.16	{d16}, [r7 :64]
    6e08:	vmovl.s16	q8, d16
    6e0c:	vcvt.f32.s32	q8, q8
    6e10:	vst1.32	{d16-d17}, [r1]!
    6e14:	bne	6de8 <ReadSingleData+0xe54>
    6e18:	add	r5, r0, r5
    6e1c:	add	r0, sl, #256	; 0x100
    6e20:	add	r9, r9, #1024	; 0x400
    6e24:	add	r1, r6, #1024	; 0x400
    6e28:	cmp	r0, r8
    6e2c:	blt	6dc0 <ReadSingleData+0xe2c>
    6e30:	ldr	r1, [sp, #12]
    6e34:	cmp	r0, r1
    6e38:	bge	7608 <ReadSingleData+0x1674>
    6e3c:	sub	r9, r1, r0
    6e40:	ldr	r0, [sp, #28]
    6e44:	ldr	r1, [sp, #24]
    6e48:	add	r4, sp, #56	; 0x38
    6e4c:	mov	r2, r9
    6e50:	ldr	r3, [r0]
    6e54:	mov	r0, r4
    6e58:	bl	18d0 <fread@plt>
    6e5c:	add	r5, r0, r5
    6e60:	cmp	r9, #1
    6e64:	blt	7608 <ReadSingleData+0x1674>
    6e68:	sub	r0, r8, sl
    6e6c:	ldrsh	r1, [r4], #2
    6e70:	subs	r0, r0, #1
    6e74:	vmov	s0, r1
    6e78:	vcvt.f32.s32	s0, s0
    6e7c:	vstmia	r6!, {s0}
    6e80:	bne	6e6c <ReadSingleData+0xed8>
    6e84:	b	7608 <ReadSingleData+0x1674>
    6e88:	add	r1, r9, #1024	; 0x400
    6e8c:	str	r7, [sp, #12]
    6e90:	sub	r8, r7, #256	; 0x100
    6e94:	mov	r0, #0
    6e98:	add	r4, sp, #56	; 0x38
    6e9c:	add	r7, sp, #40	; 0x28
    6ea0:	mov	r5, #0
    6ea4:	mov	sl, r0
    6ea8:	ldr	r0, [sp, #28]
    6eac:	mov	r6, r1
    6eb0:	ldr	r1, [sp, #24]
    6eb4:	mov	r2, #256	; 0x100
    6eb8:	ldr	r3, [r0]
    6ebc:	mov	r0, r4
    6ec0:	bl	18d0 <fread@plt>
    6ec4:	mov	r1, r9
    6ec8:	mov	r2, #0
    6ecc:	ldr	r3, [r4, r2]
    6ed0:	str	r3, [sp, #40]	; 0x28
    6ed4:	add	r3, r4, r2
    6ed8:	add	r2, r2, #8
    6edc:	ldr	r3, [r3, #4]
    6ee0:	cmp	r2, #512	; 0x200
    6ee4:	str	r3, [sp, #44]	; 0x2c
    6ee8:	vld1.16	{d16}, [r7 :64]
    6eec:	vmovl.u16	q8, d16
    6ef0:	vcvt.f32.u32	q8, q8
    6ef4:	vst1.32	{d16-d17}, [r1]!
    6ef8:	bne	6ecc <ReadSingleData+0xf38>
    6efc:	add	r5, r0, r5
    6f00:	add	r0, sl, #256	; 0x100
    6f04:	add	r9, r9, #1024	; 0x400
    6f08:	add	r1, r6, #1024	; 0x400
    6f0c:	cmp	r0, r8
    6f10:	blt	6ea4 <ReadSingleData+0xf10>
    6f14:	ldr	r1, [sp, #12]
    6f18:	cmp	r0, r1
    6f1c:	bge	7608 <ReadSingleData+0x1674>
    6f20:	sub	r9, r1, r0
    6f24:	ldr	r0, [sp, #28]
    6f28:	ldr	r1, [sp, #24]
    6f2c:	add	r4, sp, #56	; 0x38
    6f30:	mov	r2, r9
    6f34:	ldr	r3, [r0]
    6f38:	mov	r0, r4
    6f3c:	bl	18d0 <fread@plt>
    6f40:	add	r5, r0, r5
    6f44:	cmp	r9, #1
    6f48:	blt	7608 <ReadSingleData+0x1674>
    6f4c:	sub	r0, r8, sl
    6f50:	ldrh	r1, [r4], #2
    6f54:	subs	r0, r0, #1
    6f58:	vmov	s0, r1
    6f5c:	vcvt.f32.u32	s0, s0
    6f60:	vstmia	r6!, {s0}
    6f64:	bne	6f50 <ReadSingleData+0xfbc>
    6f68:	b	7608 <ReadSingleData+0x1674>
    6f6c:	str	r7, [sp, #12]
    6f70:	add	r1, r9, #1024	; 0x400
    6f74:	sub	r7, r7, #256	; 0x100
    6f78:	mov	r0, #0
    6f7c:	add	r4, sp, #56	; 0x38
    6f80:	mov	r5, #0
    6f84:	mov	r8, r0
    6f88:	ldr	r0, [sp, #28]
    6f8c:	mov	r6, r1
    6f90:	mov	r1, sl
    6f94:	mov	r2, #256	; 0x100
    6f98:	ldr	r3, [r0]
    6f9c:	mov	r0, r4
    6fa0:	bl	18d0 <fread@plt>
    6fa4:	mov	r1, #0
    6fa8:	add	r2, r4, r1
    6fac:	vld1.32	{d16-d17}, [r2]
    6fb0:	add	r2, r9, r1
    6fb4:	add	r1, r1, #16
    6fb8:	cmp	r1, #1024	; 0x400
    6fbc:	vcvt.f32.s32	q8, q8
    6fc0:	vst1.32	{d16-d17}, [r2]
    6fc4:	bne	6fa8 <ReadSingleData+0x1014>
    6fc8:	add	r5, r0, r5
    6fcc:	add	r0, r8, #256	; 0x100
    6fd0:	add	r9, r9, #1024	; 0x400
    6fd4:	add	r1, r6, #1024	; 0x400
    6fd8:	cmp	r0, r7
    6fdc:	blt	6f84 <ReadSingleData+0xff0>
    6fe0:	ldr	r1, [sp, #12]
    6fe4:	cmp	r0, r1
    6fe8:	bge	760c <ReadSingleData+0x1678>
    6fec:	sub	r9, r1, r0
    6ff0:	ldr	r0, [sp, #28]
    6ff4:	add	r4, sp, #56	; 0x38
    6ff8:	mov	r1, sl
    6ffc:	mov	r2, r9
    7000:	ldr	r3, [r0]
    7004:	mov	r0, r4
    7008:	bl	18d0 <fread@plt>
    700c:	add	r5, r0, r5
    7010:	cmp	r9, #1
    7014:	blt	760c <ReadSingleData+0x1678>
    7018:	sub	r0, r7, r8
    701c:	ldr	r1, [r4], #4
    7020:	subs	r0, r0, #1
    7024:	vmov	s0, r1
    7028:	vcvt.f32.s32	s0, s0
    702c:	vstmia	r6!, {s0}
    7030:	bne	701c <ReadSingleData+0x1088>
    7034:	b	760c <ReadSingleData+0x1678>
    7038:	str	r7, [sp, #12]
    703c:	add	r1, r9, #1024	; 0x400
    7040:	sub	r7, r7, #256	; 0x100
    7044:	mov	r0, #0
    7048:	add	r4, sp, #56	; 0x38
    704c:	mov	r5, #0
    7050:	mov	r8, r0
    7054:	ldr	r0, [sp, #28]
    7058:	mov	r6, r1
    705c:	mov	r1, sl
    7060:	mov	r2, #256	; 0x100
    7064:	ldr	r3, [r0]
    7068:	mov	r0, r4
    706c:	bl	18d0 <fread@plt>
    7070:	mov	r1, #0
    7074:	add	r2, r4, r1
    7078:	vld1.32	{d16-d17}, [r2]
    707c:	add	r2, r9, r1
    7080:	add	r1, r1, #16
    7084:	cmp	r1, #1024	; 0x400
    7088:	vcvt.f32.u32	q8, q8
    708c:	vst1.32	{d16-d17}, [r2]
    7090:	bne	7074 <ReadSingleData+0x10e0>
    7094:	add	r5, r0, r5
    7098:	add	r0, r8, #256	; 0x100
    709c:	add	r9, r9, #1024	; 0x400
    70a0:	add	r1, r6, #1024	; 0x400
    70a4:	cmp	r0, r7
    70a8:	blt	7050 <ReadSingleData+0x10bc>
    70ac:	ldr	r1, [sp, #12]
    70b0:	cmp	r0, r1
    70b4:	bge	760c <ReadSingleData+0x1678>
    70b8:	sub	r9, r1, r0
    70bc:	ldr	r0, [sp, #28]
    70c0:	add	r4, sp, #56	; 0x38
    70c4:	mov	r1, sl
    70c8:	mov	r2, r9
    70cc:	ldr	r3, [r0]
    70d0:	mov	r0, r4
    70d4:	bl	18d0 <fread@plt>
    70d8:	add	r5, r0, r5
    70dc:	cmp	r9, #1
    70e0:	blt	760c <ReadSingleData+0x1678>
    70e4:	sub	r0, r7, r8
    70e8:	ldr	r1, [r4], #4
    70ec:	subs	r0, r0, #1
    70f0:	vmov	s0, r1
    70f4:	vcvt.f32.u32	s0, s0
    70f8:	vstmia	r6!, {s0}
    70fc:	bne	70e8 <ReadSingleData+0x1154>
    7100:	b	760c <ReadSingleData+0x1678>
    7104:	sub	r0, r7, #256	; 0x100
    7108:	lsl	r4, r7, #2
    710c:	str	r7, [sp, #12]
    7110:	mov	r7, #0
    7114:	add	r8, sp, #56	; 0x38
    7118:	mov	r5, #0
    711c:	str	r0, [sp, #20]
    7120:	ldr	r3, [r6]
    7124:	mov	r0, r8
    7128:	mov	r1, sl
    712c:	mov	r2, #256	; 0x100
    7130:	bl	18d0 <fread@plt>
    7134:	mov	r6, r0
    7138:	add	r0, r9, r7, lsl #2
    713c:	mov	r1, r8
    7140:	mov	r2, #1024	; 0x400
    7144:	bl	1834 <memcpy@plt>
    7148:	ldr	r0, [sp, #20]
    714c:	add	r5, r6, r5
    7150:	ldr	r6, [sp, #28]
    7154:	add	r7, r7, #256	; 0x100
    7158:	sub	r4, r4, #1024	; 0x400
    715c:	cmp	r7, r0
    7160:	blt	7120 <ReadSingleData+0x118c>
    7164:	ldr	r0, [sp, #12]
    7168:	cmp	r7, r0
    716c:	bge	7608 <ReadSingleData+0x1674>
    7170:	mov	r1, r6
    7174:	ldr	sl, [sp, #24]
    7178:	sub	r6, r0, r7
    717c:	add	r0, sp, #56	; 0x38
    7180:	ldr	r3, [r1]
    7184:	mov	r2, r6
    7188:	mov	r1, sl
    718c:	bl	18d0 <fread@plt>
    7190:	add	r5, r0, r5
    7194:	cmp	r6, #1
    7198:	blt	760c <ReadSingleData+0x1678>
    719c:	add	r0, r9, r7, lsl #2
    71a0:	add	r1, sp, #56	; 0x38
    71a4:	mov	r2, r4
    71a8:	bl	1834 <memcpy@plt>
    71ac:	b	760c <ReadSingleData+0x1678>
    71b0:	add	r1, r9, #1024	; 0x400
    71b4:	sub	r8, r7, #256	; 0x100
    71b8:	mov	r0, #0
    71bc:	add	r4, sp, #56	; 0x38
    71c0:	mov	r5, #0
    71c4:	str	r7, [sp, #12]
    71c8:	mov	r7, r0
    71cc:	ldr	r0, [sp, #28]
    71d0:	mov	r6, r1
    71d4:	mov	r1, sl
    71d8:	mov	r2, #256	; 0x100
    71dc:	ldr	r3, [r0]
    71e0:	mov	r0, r4
    71e4:	bl	18d0 <fread@plt>
    71e8:	mov	r1, #0
    71ec:	mov	r2, r4
    71f0:	vld1.64	{d16-d17}, [r2]!
    71f4:	add	r3, r9, r1
    71f8:	add	r1, r1, #8
    71fc:	cmp	r1, #1024	; 0x400
    7200:	vcvt.f32.f64	s1, d17
    7204:	vcvt.f32.f64	s0, d16
    7208:	vstr	d0, [r3]
    720c:	bne	71f0 <ReadSingleData+0x125c>
    7210:	add	r5, r0, r5
    7214:	add	r0, r7, #256	; 0x100
    7218:	add	r9, r9, #1024	; 0x400
    721c:	add	r1, r6, #1024	; 0x400
    7220:	cmp	r0, r8
    7224:	blt	71c8 <ReadSingleData+0x1234>
    7228:	ldr	r1, [sp, #12]
    722c:	cmp	r0, r1
    7230:	bge	760c <ReadSingleData+0x1678>
    7234:	sub	r9, r1, r0
    7238:	ldr	r0, [sp, #28]
    723c:	add	r4, sp, #56	; 0x38
    7240:	mov	r1, sl
    7244:	mov	r2, r9
    7248:	ldr	r3, [r0]
    724c:	mov	r0, r4
    7250:	bl	18d0 <fread@plt>
    7254:	add	r5, r0, r5
    7258:	cmp	r9, #1
    725c:	blt	760c <ReadSingleData+0x1678>
    7260:	sub	r0, r8, r7
    7264:	vldr	d16, [r4]
    7268:	subs	r0, r0, #1
    726c:	add	r4, r4, #8
    7270:	vcvt.f32.f64	s0, d16
    7274:	vstmia	r6!, {s0}
    7278:	bne	7264 <ReadSingleData+0x12d0>
    727c:	b	760c <ReadSingleData+0x1678>
    7280:	sub	r0, r7, #256	; 0x100
    7284:	str	r7, [sp, #12]
    7288:	add	r1, r9, #1024	; 0x400
    728c:	mov	r7, r9
    7290:	mov	r5, #0
    7294:	str	r8, [sp, #8]
    7298:	str	r0, [sp, #16]
    729c:	mov	r0, #0
    72a0:	ldr	r3, [r6]
    72a4:	mov	r8, r1
    72a8:	mov	r1, sl
    72ac:	add	sl, sp, #56	; 0x38
    72b0:	str	r0, [sp, #20]
    72b4:	mov	r2, #256	; 0x100
    72b8:	mov	r0, sl
    72bc:	bl	18d0 <fread@plt>
    72c0:	mov	r4, r0
    72c4:	mov	r6, #0
    72c8:	vld1.64	{d8-d9}, [sl]!
    72cc:	vmov.32	r0, d9[0]
    72d0:	vmov.32	r1, d9[1]
    72d4:	bl	497ac <__aeabi_l2f>
    72d8:	vmov.32	r2, d8[0]
    72dc:	vmov.32	r1, d8[1]
    72e0:	vmov	s17, r0
    72e4:	mov	r0, r2
    72e8:	bl	497ac <__aeabi_l2f>
    72ec:	vmov	s16, r0
    72f0:	add	r0, r7, r6
    72f4:	add	r6, r6, #8
    72f8:	cmp	r6, #1024	; 0x400
    72fc:	vstr	d8, [r0]
    7300:	bne	72c8 <ReadSingleData+0x1334>
    7304:	ldr	r0, [sp, #20]
    7308:	ldr	r2, [sp, #16]
    730c:	ldr	sl, [sp, #24]
    7310:	ldr	r6, [sp, #28]
    7314:	add	r5, r4, r5
    7318:	add	r7, r7, #1024	; 0x400
    731c:	add	r1, r8, #1024	; 0x400
    7320:	add	r0, r0, #256	; 0x100
    7324:	cmp	r0, r2
    7328:	blt	72a0 <ReadSingleData+0x130c>
    732c:	ldr	r7, [sp, #12]
    7330:	cmp	r0, r7
    7334:	bge	7394 <ReadSingleData+0x1400>
    7338:	ldr	r3, [r6]
    733c:	add	r4, sp, #56	; 0x38
    7340:	sub	r2, r7, r0
    7344:	mov	r1, sl
    7348:	mov	r0, r4
    734c:	str	r2, [sp, #4]
    7350:	bl	18d0 <fread@plt>
    7354:	add	r5, r0, r5
    7358:	ldr	r0, [sp, #4]
    735c:	cmp	r0, #1
    7360:	blt	7394 <ReadSingleData+0x1400>
    7364:	ldr	r0, [sp, #16]
    7368:	ldr	r1, [sp, #20]
    736c:	sub	r6, r0, r1
    7370:	ldrd	r0, [r4]
    7374:	bl	497ac <__aeabi_l2f>
    7378:	str	r0, [r8], #4
    737c:	subs	r6, r6, #1
    7380:	add	r4, r4, #8
    7384:	bne	7370 <ReadSingleData+0x13dc>
    7388:	b	7390 <ReadSingleData+0x13fc>
    738c:	ldr	sl, [sp, #24]
    7390:	ldr	r6, [sp, #28]
    7394:	ldr	r8, [sp, #8]
    7398:	cmp	r8, #13
    739c:	bne	760c <ReadSingleData+0x1678>
    73a0:	ldr	r0, [r6, #20]
    73a4:	cmp	r0, #0
    73a8:	beq	73f8 <ReadSingleData+0x1464>
    73ac:	cmp	r7, #256	; 0x100
    73b0:	bgt	7440 <ReadSingleData+0x14ac>
    73b4:	ldr	r3, [r6]
    73b8:	add	r4, sp, #56	; 0x38
    73bc:	mov	r1, sl
    73c0:	mov	r2, r7
    73c4:	mov	r0, r4
    73c8:	bl	18d0 <fread@plt>
    73cc:	add	r5, r0, r5
    73d0:	cmp	r7, #1
    73d4:	blt	760c <ReadSingleData+0x1678>
    73d8:	mov	r0, r4
    73dc:	bl	1c0c <Mat_uint64Swap>
    73e0:	bl	4979c <__aeabi_ul2f>
    73e4:	str	r0, [r9], #4
    73e8:	subs	r7, r7, #1
    73ec:	add	r4, r4, #8
    73f0:	bne	73d8 <ReadSingleData+0x1444>
    73f4:	b	760c <ReadSingleData+0x1678>
    73f8:	cmp	r7, #256	; 0x100
    73fc:	bgt	751c <ReadSingleData+0x1588>
    7400:	ldr	r3, [r6]
    7404:	add	r4, sp, #56	; 0x38
    7408:	mov	r1, sl
    740c:	mov	r2, r7
    7410:	mov	r0, r4
    7414:	bl	18d0 <fread@plt>
    7418:	add	r5, r0, r5
    741c:	cmp	r7, #1
    7420:	blt	760c <ReadSingleData+0x1678>
    7424:	ldrd	r0, [r4]
    7428:	bl	4979c <__aeabi_ul2f>
    742c:	str	r0, [r9], #4
    7430:	subs	r7, r7, #1
    7434:	add	r4, r4, #8
    7438:	bne	7424 <ReadSingleData+0x1490>
    743c:	b	760c <ReadSingleData+0x1678>
    7440:	sub	r0, r7, #256	; 0x100
    7444:	add	r1, r9, #1024	; 0x400
    7448:	str	r7, [sp, #12]
    744c:	str	r0, [sp, #20]
    7450:	mov	r0, #0
    7454:	mov	r8, r1
    7458:	ldr	r3, [r6]
    745c:	ldr	r1, [sp, #24]
    7460:	add	r6, sp, #56	; 0x38
    7464:	mov	sl, r0
    7468:	mov	r2, #256	; 0x100
    746c:	mov	r0, r6
    7470:	bl	18d0 <fread@plt>
    7474:	mov	r4, r0
    7478:	mov	r7, #0
    747c:	mov	r0, r6
    7480:	bl	1c0c <Mat_uint64Swap>
    7484:	bl	4979c <__aeabi_ul2f>
    7488:	str	r0, [r9, r7]
    748c:	add	r7, r7, #4
    7490:	add	r6, r6, #8
    7494:	cmp	r7, #1024	; 0x400
    7498:	bne	747c <ReadSingleData+0x14e8>
    749c:	ldr	r2, [sp, #20]
    74a0:	ldr	r6, [sp, #28]
    74a4:	add	r0, sl, #256	; 0x100
    74a8:	add	r5, r4, r5
    74ac:	add	r9, r9, #1024	; 0x400
    74b0:	add	r1, r8, #1024	; 0x400
    74b4:	cmp	r0, r2
    74b8:	blt	7454 <ReadSingleData+0x14c0>
    74bc:	ldr	r1, [sp, #12]
    74c0:	cmp	r0, r1
    74c4:	bge	7608 <ReadSingleData+0x1674>
    74c8:	mov	r2, r6
    74cc:	sub	r6, r1, r0
    74d0:	ldr	r1, [sp, #24]
    74d4:	add	r4, sp, #56	; 0x38
    74d8:	ldr	r3, [r2]
    74dc:	mov	r0, r4
    74e0:	mov	r2, r6
    74e4:	bl	18d0 <fread@plt>
    74e8:	add	r5, r0, r5
    74ec:	cmp	r6, #1
    74f0:	blt	7608 <ReadSingleData+0x1674>
    74f4:	ldr	r0, [sp, #20]
    74f8:	sub	r6, r0, sl
    74fc:	mov	r0, r4
    7500:	bl	1c0c <Mat_uint64Swap>
    7504:	bl	4979c <__aeabi_ul2f>
    7508:	str	r0, [r8], #4
    750c:	subs	r6, r6, #1
    7510:	add	r4, r4, #8
    7514:	bne	74fc <ReadSingleData+0x1568>
    7518:	b	7608 <ReadSingleData+0x1674>
    751c:	sub	r0, r7, #256	; 0x100
    7520:	add	r1, r9, #1024	; 0x400
    7524:	str	r7, [sp, #12]
    7528:	str	r0, [sp, #20]
    752c:	mov	r0, #0
    7530:	mov	sl, r1
    7534:	ldr	r3, [r6]
    7538:	ldr	r1, [sp, #24]
    753c:	add	r6, sp, #56	; 0x38
    7540:	mov	r8, r0
    7544:	mov	r2, #256	; 0x100
    7548:	mov	r0, r6
    754c:	bl	18d0 <fread@plt>
    7550:	mov	r4, r0
    7554:	mov	r7, #0
    7558:	vld1.64	{d8-d9}, [r6]!
    755c:	vmov.32	r0, d9[0]
    7560:	vmov.32	r1, d9[1]
    7564:	bl	4979c <__aeabi_ul2f>
    7568:	vmov.32	r2, d8[0]
    756c:	vmov.32	r1, d8[1]
    7570:	vmov	s17, r0
    7574:	mov	r0, r2
    7578:	bl	4979c <__aeabi_ul2f>
    757c:	vmov	s16, r0
    7580:	add	r0, r9, r7
    7584:	add	r7, r7, #8
    7588:	cmp	r7, #1024	; 0x400
    758c:	vstr	d8, [r0]
    7590:	bne	7558 <ReadSingleData+0x15c4>
    7594:	ldr	r2, [sp, #20]
    7598:	ldr	r6, [sp, #28]
    759c:	add	r0, r8, #256	; 0x100
    75a0:	add	r5, r4, r5
    75a4:	add	r9, r9, #1024	; 0x400
    75a8:	add	r1, sl, #1024	; 0x400
    75ac:	cmp	r0, r2
    75b0:	blt	7530 <ReadSingleData+0x159c>
    75b4:	ldr	r1, [sp, #12]
    75b8:	cmp	r0, r1
    75bc:	bge	7608 <ReadSingleData+0x1674>
    75c0:	sub	r7, r1, r0
    75c4:	ldr	r3, [r6]
    75c8:	ldr	r1, [sp, #24]
    75cc:	add	r4, sp, #56	; 0x38
    75d0:	mov	r0, r4
    75d4:	mov	r2, r7
    75d8:	bl	18d0 <fread@plt>
    75dc:	add	r5, r0, r5
    75e0:	cmp	r7, #1
    75e4:	blt	7608 <ReadSingleData+0x1674>
    75e8:	ldr	r0, [sp, #20]
    75ec:	sub	r6, r0, r8
    75f0:	ldrd	r0, [r4]
    75f4:	bl	4979c <__aeabi_ul2f>
    75f8:	str	r0, [sl], #4
    75fc:	subs	r6, r6, #1
    7600:	add	r4, r4, #8
    7604:	bne	75f0 <ReadSingleData+0x165c>
    7608:	ldr	sl, [sp, #24]
    760c:	mul	r0, r5, sl
    7610:	sub	sp, fp, #48	; 0x30
    7614:	vpop	{d8-d9}
    7618:	add	sp, sp, #4
    761c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00007620 <ReadCompressedSingleData>:
    7620:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7624:	add	fp, sp, #28
    7628:	sub	sp, sp, #12
    762c:	mov	r7, r0
    7630:	mov	r0, #0
    7634:	cmp	r1, #0
    7638:	beq	7bb4 <ReadCompressedSingleData+0x594>
    763c:	cmp	r7, #0
    7640:	movne	r5, r2
    7644:	cmpne	r2, #0
    7648:	beq	7bb4 <ReadCompressedSingleData+0x594>
    764c:	ldr	sl, [fp, #8]
    7650:	mov	r0, r3
    7654:	mov	r4, r3
    7658:	mov	r6, r1
    765c:	bl	193c <Mat_SizeOf@plt>
    7660:	mov	r9, r0
    7664:	sub	r0, r4, #1
    7668:	cmp	r0, #12
    766c:	bhi	7bb0 <ReadCompressedSingleData+0x590>
    7670:	add	r1, pc, #4
    7674:	ldr	r0, [r1, r0, lsl #2]
    7678:	add	pc, r1, r0
    767c:	.word	0x00000034
    7680:	.word	0x00000078
    7684:	.word	0x000000bc
    7688:	.word	0x00000110
    768c:	.word	0x00000164
    7690:	.word	0x000001b8
    7694:	.word	0x0000020c
    7698:	.word	0x00000534
    769c:	.word	0x00000258
    76a0:	.word	0x00000534
    76a4:	.word	0x00000534
    76a8:	.word	0x000002a8
    76ac:	.word	0x000002f4
    76b0:	cmp	sl, #1
    76b4:	blt	7bb0 <ReadCompressedSingleData+0x590>
    76b8:	mov	r8, sp
    76bc:	mov	r4, sl
    76c0:	mov	r0, r7
    76c4:	mov	r1, r6
    76c8:	mov	r2, r8
    76cc:	mov	r3, r9
    76d0:	bl	31f0 <InflateData>
    76d4:	ldrsb	r0, [sp]
    76d8:	subs	r4, r4, #1
    76dc:	vmov	s0, r0
    76e0:	vcvt.f32.s32	s0, s0
    76e4:	vstr	s0, [r5]
    76e8:	add	r5, r5, #4
    76ec:	bne	76c0 <ReadCompressedSingleData+0xa0>
    76f0:	b	7bb0 <ReadCompressedSingleData+0x590>
    76f4:	cmp	sl, #1
    76f8:	blt	7bb0 <ReadCompressedSingleData+0x590>
    76fc:	mov	r8, sp
    7700:	mov	r4, sl
    7704:	mov	r0, r7
    7708:	mov	r1, r6
    770c:	mov	r2, r8
    7710:	mov	r3, r9
    7714:	bl	31f0 <InflateData>
    7718:	ldrb	r0, [sp]
    771c:	subs	r4, r4, #1
    7720:	vmov	s0, r0
    7724:	vcvt.f32.u32	s0, s0
    7728:	vstr	s0, [r5]
    772c:	add	r5, r5, #4
    7730:	bne	7704 <ReadCompressedSingleData+0xe4>
    7734:	b	7bb0 <ReadCompressedSingleData+0x590>
    7738:	ldr	r0, [r7, #20]
    773c:	cmp	r0, #0
    7740:	beq	79bc <ReadCompressedSingleData+0x39c>
    7744:	cmp	sl, #1
    7748:	blt	7bb0 <ReadCompressedSingleData+0x590>
    774c:	mov	r8, sp
    7750:	mov	r4, sl
    7754:	mov	r0, r7
    7758:	mov	r1, r6
    775c:	mov	r2, r8
    7760:	mov	r3, r9
    7764:	bl	31f0 <InflateData>
    7768:	mov	r0, r8
    776c:	bl	1c50 <Mat_int16Swap>
    7770:	vmov	s0, r0
    7774:	subs	r4, r4, #1
    7778:	vcvt.f32.s32	s0, s0
    777c:	vstr	s0, [r5]
    7780:	add	r5, r5, #4
    7784:	bne	7754 <ReadCompressedSingleData+0x134>
    7788:	b	7bb0 <ReadCompressedSingleData+0x590>
    778c:	ldr	r0, [r7, #20]
    7790:	cmp	r0, #0
    7794:	beq	7a00 <ReadCompressedSingleData+0x3e0>
    7798:	cmp	sl, #1
    779c:	blt	7bb0 <ReadCompressedSingleData+0x590>
    77a0:	mov	r8, sp
    77a4:	mov	r4, sl
    77a8:	mov	r0, r7
    77ac:	mov	r1, r6
    77b0:	mov	r2, r8
    77b4:	mov	r3, r9
    77b8:	bl	31f0 <InflateData>
    77bc:	mov	r0, r8
    77c0:	bl	1c64 <Mat_uint16Swap>
    77c4:	vmov	s0, r0
    77c8:	subs	r4, r4, #1
    77cc:	vcvt.f32.u32	s0, s0
    77d0:	vstr	s0, [r5]
    77d4:	add	r5, r5, #4
    77d8:	bne	77a8 <ReadCompressedSingleData+0x188>
    77dc:	b	7bb0 <ReadCompressedSingleData+0x590>
    77e0:	ldr	r0, [r7, #20]
    77e4:	cmp	r0, #0
    77e8:	beq	7a44 <ReadCompressedSingleData+0x424>
    77ec:	cmp	sl, #1
    77f0:	blt	7bb0 <ReadCompressedSingleData+0x590>
    77f4:	mov	r8, sp
    77f8:	mov	r4, sl
    77fc:	mov	r0, r7
    7800:	mov	r1, r6
    7804:	mov	r2, r8
    7808:	mov	r3, r9
    780c:	bl	31f0 <InflateData>
    7810:	mov	r0, r8
    7814:	bl	1c28 <Mat_int32Swap>
    7818:	vmov	s0, r0
    781c:	subs	r4, r4, #1
    7820:	vcvt.f32.s32	s0, s0
    7824:	vstr	s0, [r5]
    7828:	add	r5, r5, #4
    782c:	bne	77fc <ReadCompressedSingleData+0x1dc>
    7830:	b	7bb0 <ReadCompressedSingleData+0x590>
    7834:	ldr	r0, [r7, #20]
    7838:	cmp	r0, #0
    783c:	beq	7a84 <ReadCompressedSingleData+0x464>
    7840:	cmp	sl, #1
    7844:	blt	7bb0 <ReadCompressedSingleData+0x590>
    7848:	mov	r8, sp
    784c:	mov	r4, sl
    7850:	mov	r0, r7
    7854:	mov	r1, r6
    7858:	mov	r2, r8
    785c:	mov	r3, r9
    7860:	bl	31f0 <InflateData>
    7864:	mov	r0, r8
    7868:	bl	1c3c <Mat_uint32Swap>
    786c:	vmov	s0, r0
    7870:	subs	r4, r4, #1
    7874:	vcvt.f32.u32	s0, s0
    7878:	vstr	s0, [r5]
    787c:	add	r5, r5, #4
    7880:	bne	7850 <ReadCompressedSingleData+0x230>
    7884:	b	7bb0 <ReadCompressedSingleData+0x590>
    7888:	ldr	r0, [r7, #20]
    788c:	cmp	r0, #0
    7890:	beq	7ac4 <ReadCompressedSingleData+0x4a4>
    7894:	cmp	sl, #1
    7898:	blt	7bb0 <ReadCompressedSingleData+0x590>
    789c:	mov	r8, sp
    78a0:	mov	r4, sl
    78a4:	mov	r0, r7
    78a8:	mov	r1, r6
    78ac:	mov	r2, r8
    78b0:	mov	r3, r9
    78b4:	bl	31f0 <InflateData>
    78b8:	mov	r0, r8
    78bc:	bl	1c7c <Mat_floatSwap>
    78c0:	vstr	s0, [r5]
    78c4:	subs	r4, r4, #1
    78c8:	add	r5, r5, #4
    78cc:	bne	78a4 <ReadCompressedSingleData+0x284>
    78d0:	b	7bb0 <ReadCompressedSingleData+0x590>
    78d4:	ldr	r0, [r7, #20]
    78d8:	cmp	r0, #0
    78dc:	beq	7afc <ReadCompressedSingleData+0x4dc>
    78e0:	cmp	sl, #1
    78e4:	blt	7bb0 <ReadCompressedSingleData+0x590>
    78e8:	mov	r8, sp
    78ec:	mov	r4, sl
    78f0:	mov	r0, r7
    78f4:	mov	r1, r6
    78f8:	mov	r2, r8
    78fc:	mov	r3, r9
    7900:	bl	31f0 <InflateData>
    7904:	mov	r0, r8
    7908:	bl	1cc0 <Mat_doubleSwap>
    790c:	vcvt.f32.f64	s0, d0
    7910:	subs	r4, r4, #1
    7914:	vstr	s0, [r5]
    7918:	add	r5, r5, #4
    791c:	bne	78f0 <ReadCompressedSingleData+0x2d0>
    7920:	b	7bb0 <ReadCompressedSingleData+0x590>
    7924:	ldr	r0, [r7, #20]
    7928:	cmp	r0, #0
    792c:	beq	7b3c <ReadCompressedSingleData+0x51c>
    7930:	cmp	sl, #1
    7934:	blt	7bb0 <ReadCompressedSingleData+0x590>
    7938:	mov	r8, sp
    793c:	mov	r4, sl
    7940:	mov	r0, r7
    7944:	mov	r1, r6
    7948:	mov	r2, r8
    794c:	mov	r3, r9
    7950:	bl	31f0 <InflateData>
    7954:	mov	r0, r8
    7958:	bl	1bbc <Mat_int64Swap>
    795c:	bl	497ac <__aeabi_l2f>
    7960:	str	r0, [r5], #4
    7964:	subs	r4, r4, #1
    7968:	bne	7940 <ReadCompressedSingleData+0x320>
    796c:	b	7bb0 <ReadCompressedSingleData+0x590>
    7970:	ldr	r0, [r7, #20]
    7974:	cmp	r0, #0
    7978:	beq	7b78 <ReadCompressedSingleData+0x558>
    797c:	cmp	sl, #1
    7980:	blt	7bb0 <ReadCompressedSingleData+0x590>
    7984:	mov	r8, sp
    7988:	mov	r4, sl
    798c:	mov	r0, r7
    7990:	mov	r1, r6
    7994:	mov	r2, r8
    7998:	mov	r3, r9
    799c:	bl	31f0 <InflateData>
    79a0:	mov	r0, r8
    79a4:	bl	1c0c <Mat_uint64Swap>
    79a8:	bl	4979c <__aeabi_ul2f>
    79ac:	str	r0, [r5], #4
    79b0:	subs	r4, r4, #1
    79b4:	bne	798c <ReadCompressedSingleData+0x36c>
    79b8:	b	7bb0 <ReadCompressedSingleData+0x590>
    79bc:	cmp	sl, #1
    79c0:	blt	7bb0 <ReadCompressedSingleData+0x590>
    79c4:	mov	r8, sp
    79c8:	mov	r4, sl
    79cc:	mov	r0, r7
    79d0:	mov	r1, r6
    79d4:	mov	r2, r8
    79d8:	mov	r3, r9
    79dc:	bl	31f0 <InflateData>
    79e0:	ldrsh	r0, [sp]
    79e4:	subs	r4, r4, #1
    79e8:	vmov	s0, r0
    79ec:	vcvt.f32.s32	s0, s0
    79f0:	vstr	s0, [r5]
    79f4:	add	r5, r5, #4
    79f8:	bne	79cc <ReadCompressedSingleData+0x3ac>
    79fc:	b	7bb0 <ReadCompressedSingleData+0x590>
    7a00:	cmp	sl, #1
    7a04:	blt	7bb0 <ReadCompressedSingleData+0x590>
    7a08:	mov	r8, sp
    7a0c:	mov	r4, sl
    7a10:	mov	r0, r7
    7a14:	mov	r1, r6
    7a18:	mov	r2, r8
    7a1c:	mov	r3, r9
    7a20:	bl	31f0 <InflateData>
    7a24:	ldrh	r0, [sp]
    7a28:	subs	r4, r4, #1
    7a2c:	vmov	s0, r0
    7a30:	vcvt.f32.u32	s0, s0
    7a34:	vstr	s0, [r5]
    7a38:	add	r5, r5, #4
    7a3c:	bne	7a10 <ReadCompressedSingleData+0x3f0>
    7a40:	b	7bb0 <ReadCompressedSingleData+0x590>
    7a44:	cmp	sl, #1
    7a48:	blt	7bb0 <ReadCompressedSingleData+0x590>
    7a4c:	mov	r8, sp
    7a50:	mov	r4, sl
    7a54:	mov	r0, r7
    7a58:	mov	r1, r6
    7a5c:	mov	r2, r8
    7a60:	mov	r3, r9
    7a64:	bl	31f0 <InflateData>
    7a68:	vldr	s0, [sp]
    7a6c:	subs	r4, r4, #1
    7a70:	vcvt.f32.s32	s0, s0
    7a74:	vstr	s0, [r5]
    7a78:	add	r5, r5, #4
    7a7c:	bne	7a54 <ReadCompressedSingleData+0x434>
    7a80:	b	7bb0 <ReadCompressedSingleData+0x590>
    7a84:	cmp	sl, #1
    7a88:	blt	7bb0 <ReadCompressedSingleData+0x590>
    7a8c:	mov	r8, sp
    7a90:	mov	r4, sl
    7a94:	mov	r0, r7
    7a98:	mov	r1, r6
    7a9c:	mov	r2, r8
    7aa0:	mov	r3, r9
    7aa4:	bl	31f0 <InflateData>
    7aa8:	vldr	s0, [sp]
    7aac:	subs	r4, r4, #1
    7ab0:	vcvt.f32.u32	s0, s0
    7ab4:	vstr	s0, [r5]
    7ab8:	add	r5, r5, #4
    7abc:	bne	7a94 <ReadCompressedSingleData+0x474>
    7ac0:	b	7bb0 <ReadCompressedSingleData+0x590>
    7ac4:	cmp	sl, #1
    7ac8:	blt	7bb0 <ReadCompressedSingleData+0x590>
    7acc:	mov	r8, sp
    7ad0:	mov	r4, sl
    7ad4:	mov	r0, r7
    7ad8:	mov	r1, r6
    7adc:	mov	r2, r8
    7ae0:	mov	r3, r9
    7ae4:	bl	31f0 <InflateData>
    7ae8:	ldr	r0, [sp]
    7aec:	subs	r4, r4, #1
    7af0:	str	r0, [r5], #4
    7af4:	bne	7ad4 <ReadCompressedSingleData+0x4b4>
    7af8:	b	7bb0 <ReadCompressedSingleData+0x590>
    7afc:	cmp	sl, #1
    7b00:	blt	7bb0 <ReadCompressedSingleData+0x590>
    7b04:	mov	r8, sp
    7b08:	mov	r4, sl
    7b0c:	mov	r0, r7
    7b10:	mov	r1, r6
    7b14:	mov	r2, r8
    7b18:	mov	r3, r9
    7b1c:	bl	31f0 <InflateData>
    7b20:	vldr	d16, [sp]
    7b24:	subs	r4, r4, #1
    7b28:	vcvt.f32.f64	s0, d16
    7b2c:	vstr	s0, [r5]
    7b30:	add	r5, r5, #4
    7b34:	bne	7b0c <ReadCompressedSingleData+0x4ec>
    7b38:	b	7bb0 <ReadCompressedSingleData+0x590>
    7b3c:	cmp	sl, #1
    7b40:	blt	7bb0 <ReadCompressedSingleData+0x590>
    7b44:	mov	r8, sp
    7b48:	mov	r4, sl
    7b4c:	mov	r0, r7
    7b50:	mov	r1, r6
    7b54:	mov	r2, r8
    7b58:	mov	r3, r9
    7b5c:	bl	31f0 <InflateData>
    7b60:	ldm	sp, {r0, r1}
    7b64:	bl	497ac <__aeabi_l2f>
    7b68:	str	r0, [r5], #4
    7b6c:	subs	r4, r4, #1
    7b70:	bne	7b4c <ReadCompressedSingleData+0x52c>
    7b74:	b	7bb0 <ReadCompressedSingleData+0x590>
    7b78:	cmp	sl, #1
    7b7c:	blt	7bb0 <ReadCompressedSingleData+0x590>
    7b80:	mov	r8, sp
    7b84:	mov	r4, sl
    7b88:	mov	r0, r7
    7b8c:	mov	r1, r6
    7b90:	mov	r2, r8
    7b94:	mov	r3, r9
    7b98:	bl	31f0 <InflateData>
    7b9c:	ldm	sp, {r0, r1}
    7ba0:	bl	4979c <__aeabi_ul2f>
    7ba4:	str	r0, [r5], #4
    7ba8:	subs	r4, r4, #1
    7bac:	bne	7b88 <ReadCompressedSingleData+0x568>
    7bb0:	mul	r0, r9, sl
    7bb4:	sub	sp, fp, #28
    7bb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00007bbc <ReadInt64Data>:
    7bbc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7bc0:	add	fp, sp, #28
    7bc4:	sub	sp, sp, #60	; 0x3c
    7bc8:	sub	sp, sp, #2048	; 0x800
    7bcc:	mov	r4, r0
    7bd0:	mov	r0, #0
    7bd4:	cmp	r4, #0
    7bd8:	beq	9274 <ReadInt64Data+0x16b8>
    7bdc:	cmp	r1, #0
    7be0:	mov	r8, r1
    7be4:	ldrne	r1, [r4]
    7be8:	cmpne	r1, #0
    7bec:	beq	9274 <ReadInt64Data+0x16b8>
    7bf0:	mov	r0, r2
    7bf4:	mov	r5, r3
    7bf8:	mov	r9, r2
    7bfc:	bl	193c <Mat_SizeOf@plt>
    7c00:	mov	r7, r0
    7c04:	sub	r0, r9, #1
    7c08:	mov	sl, #0
    7c0c:	str	r4, [sp, #20]
    7c10:	cmp	r0, #11
    7c14:	str	r7, [sp, #16]
    7c18:	bhi	9044 <ReadInt64Data+0x1488>
    7c1c:	add	r1, pc, #4
    7c20:	ldr	r0, [r1, r0, lsl #2]
    7c24:	add	pc, r1, r0
    7c28:	.word	0x00000030
    7c2c:	.word	0x00000078
    7c30:	.word	0x000000c0
    7c34:	.word	0x0000011c
    7c38:	.word	0x0000017c
    7c3c:	.word	0x000001d8
    7c40:	.word	0x00000240
    7c44:	.word	0x0000141c
    7c48:	.word	0x000002a0
    7c4c:	.word	0x0000141c
    7c50:	.word	0x0000141c
    7c54:	.word	0x00000300
    7c58:	cmp	r5, #256	; 0x100
    7c5c:	bgt	7f90 <ReadInt64Data+0x3d4>
    7c60:	ldr	r3, [r4]
    7c64:	add	r4, sp, #56	; 0x38
    7c68:	mov	r1, r7
    7c6c:	mov	r2, r5
    7c70:	mov	r0, r4
    7c74:	bl	18d0 <fread@plt>
    7c78:	cmp	r5, #1
    7c7c:	blt	8288 <ReadInt64Data+0x6cc>
    7c80:	ldrsb	r2, [r4], #1
    7c84:	subs	r5, r5, #1
    7c88:	asr	r1, r2, #31
    7c8c:	str	r2, [r8]
    7c90:	str	r1, [r8, #4]
    7c94:	add	r8, r8, #8
    7c98:	bne	7c80 <ReadInt64Data+0xc4>
    7c9c:	b	8288 <ReadInt64Data+0x6cc>
    7ca0:	cmp	r5, #256	; 0x100
    7ca4:	bgt	807c <ReadInt64Data+0x4c0>
    7ca8:	ldr	r3, [r4]
    7cac:	add	r4, sp, #56	; 0x38
    7cb0:	mov	r1, r7
    7cb4:	mov	r2, r5
    7cb8:	mov	r0, r4
    7cbc:	bl	18d0 <fread@plt>
    7cc0:	cmp	r5, #1
    7cc4:	blt	8288 <ReadInt64Data+0x6cc>
    7cc8:	mov	r1, #0
    7ccc:	ldrb	r2, [r4], #1
    7cd0:	subs	r5, r5, #1
    7cd4:	str	r2, [r8]
    7cd8:	str	r1, [r8, #4]
    7cdc:	add	r8, r8, #8
    7ce0:	bne	7ccc <ReadInt64Data+0x110>
    7ce4:	b	8288 <ReadInt64Data+0x6cc>
    7ce8:	ldr	r0, [r4, #20]
    7cec:	cmp	r0, #0
    7cf0:	beq	816c <ReadInt64Data+0x5b0>
    7cf4:	cmp	r5, #256	; 0x100
    7cf8:	bgt	8368 <ReadInt64Data+0x7ac>
    7cfc:	ldr	r3, [r4]
    7d00:	add	r4, sp, #56	; 0x38
    7d04:	mov	r1, r7
    7d08:	mov	r2, r5
    7d0c:	mov	r0, r4
    7d10:	bl	18d0 <fread@plt>
    7d14:	mov	r6, r0
    7d18:	cmp	r5, #1
    7d1c:	blt	8324 <ReadInt64Data+0x768>
    7d20:	mov	r0, r4
    7d24:	bl	1c50 <Mat_int16Swap>
    7d28:	asr	r1, r0, #31
    7d2c:	subs	r5, r5, #1
    7d30:	add	r4, r4, #2
    7d34:	strd	r0, [r8]
    7d38:	add	r8, r8, #8
    7d3c:	bne	7d20 <ReadInt64Data+0x164>
    7d40:	b	8324 <ReadInt64Data+0x768>
    7d44:	ldr	r0, [r4, #20]
    7d48:	cmp	r0, #0
    7d4c:	beq	81b4 <ReadInt64Data+0x5f8>
    7d50:	cmp	r5, #256	; 0x100
    7d54:	bgt	8454 <ReadInt64Data+0x898>
    7d58:	ldr	r3, [r4]
    7d5c:	add	r4, sp, #56	; 0x38
    7d60:	mov	r1, r7
    7d64:	mov	r2, r5
    7d68:	mov	r0, r4
    7d6c:	bl	18d0 <fread@plt>
    7d70:	mov	r9, r0
    7d74:	cmp	r5, #1
    7d78:	blt	7e60 <ReadInt64Data+0x2a4>
    7d7c:	mov	r7, #0
    7d80:	mov	r0, r4
    7d84:	bl	1c64 <Mat_uint16Swap>
    7d88:	mov	r6, r0
    7d8c:	subs	r5, r5, #1
    7d90:	add	r4, r4, #2
    7d94:	strd	r6, [r8]
    7d98:	add	r8, r8, #8
    7d9c:	bne	7d80 <ReadInt64Data+0x1c4>
    7da0:	b	7e5c <ReadInt64Data+0x2a0>
    7da4:	ldr	r0, [r4, #20]
    7da8:	cmp	r0, #0
    7dac:	beq	81fc <ReadInt64Data+0x640>
    7db0:	cmp	r5, #256	; 0x100
    7db4:	bgt	8548 <ReadInt64Data+0x98c>
    7db8:	ldr	r3, [r4]
    7dbc:	add	r4, sp, #56	; 0x38
    7dc0:	mov	r1, r7
    7dc4:	mov	r2, r5
    7dc8:	mov	r0, r4
    7dcc:	bl	18d0 <fread@plt>
    7dd0:	mov	r6, r0
    7dd4:	cmp	r5, #1
    7dd8:	blt	8324 <ReadInt64Data+0x768>
    7ddc:	mov	r0, r4
    7de0:	bl	1c28 <Mat_int32Swap>
    7de4:	asr	r1, r0, #31
    7de8:	subs	r5, r5, #1
    7dec:	add	r4, r4, #4
    7df0:	strd	r0, [r8]
    7df4:	add	r8, r8, #8
    7df8:	bne	7ddc <ReadInt64Data+0x220>
    7dfc:	b	8324 <ReadInt64Data+0x768>
    7e00:	ldr	r0, [r4, #20]
    7e04:	cmp	r0, #0
    7e08:	beq	8244 <ReadInt64Data+0x688>
    7e0c:	cmp	r5, #256	; 0x100
    7e10:	bgt	8634 <ReadInt64Data+0xa78>
    7e14:	ldr	r3, [r4]
    7e18:	add	r4, sp, #56	; 0x38
    7e1c:	mov	r1, r7
    7e20:	mov	r2, r5
    7e24:	mov	r0, r4
    7e28:	bl	18d0 <fread@plt>
    7e2c:	mov	r9, r0
    7e30:	cmp	r5, #1
    7e34:	blt	7e60 <ReadInt64Data+0x2a4>
    7e38:	mov	r7, #0
    7e3c:	mov	r0, r4
    7e40:	bl	1c3c <Mat_uint32Swap>
    7e44:	mov	r6, r0
    7e48:	subs	r5, r5, #1
    7e4c:	add	r4, r4, #4
    7e50:	strd	r6, [r8]
    7e54:	add	r8, r8, #8
    7e58:	bne	7e3c <ReadInt64Data+0x280>
    7e5c:	ldr	r7, [sp, #16]
    7e60:	mov	r5, r9
    7e64:	b	9270 <ReadInt64Data+0x16b4>
    7e68:	ldr	r0, [r4, #20]
    7e6c:	cmp	r0, #0
    7e70:	beq	8290 <ReadInt64Data+0x6d4>
    7e74:	cmp	r5, #256	; 0x100
    7e78:	bgt	8728 <ReadInt64Data+0xb6c>
    7e7c:	ldr	r3, [r4]
    7e80:	add	r4, sp, #56	; 0x38
    7e84:	mov	r1, r7
    7e88:	mov	r2, r5
    7e8c:	mov	r0, r4
    7e90:	bl	18d0 <fread@plt>
    7e94:	mov	r6, r0
    7e98:	cmp	r5, #1
    7e9c:	blt	8324 <ReadInt64Data+0x768>
    7ea0:	mov	r0, r4
    7ea4:	bl	1c7c <Mat_floatSwap>
    7ea8:	vmov	r0, s0
    7eac:	bl	49828 <__aeabi_f2lz>
    7eb0:	strd	r0, [r8]
    7eb4:	subs	r5, r5, #1
    7eb8:	add	r8, r8, #8
    7ebc:	add	r4, r4, #4
    7ec0:	bne	7ea0 <ReadInt64Data+0x2e4>
    7ec4:	b	8324 <ReadInt64Data+0x768>
    7ec8:	ldr	r0, [r4, #20]
    7ecc:	cmp	r0, #0
    7ed0:	beq	82d8 <ReadInt64Data+0x71c>
    7ed4:	cmp	r5, #256	; 0x100
    7ed8:	bgt	881c <ReadInt64Data+0xc60>
    7edc:	ldr	r3, [r4]
    7ee0:	add	r4, sp, #56	; 0x38
    7ee4:	mov	r1, r7
    7ee8:	mov	r2, r5
    7eec:	mov	r0, r4
    7ef0:	bl	18d0 <fread@plt>
    7ef4:	mov	r6, r0
    7ef8:	cmp	r5, #1
    7efc:	blt	8324 <ReadInt64Data+0x768>
    7f00:	mov	r0, r4
    7f04:	bl	1cc0 <Mat_doubleSwap>
    7f08:	vmov	r0, r1, d0
    7f0c:	bl	49854 <__aeabi_d2lz>
    7f10:	strd	r0, [r8]
    7f14:	subs	r5, r5, #1
    7f18:	add	r8, r8, #8
    7f1c:	add	r4, r4, #8
    7f20:	bne	7f00 <ReadInt64Data+0x344>
    7f24:	b	8324 <ReadInt64Data+0x768>
    7f28:	ldr	r0, [r4, #20]
    7f2c:	cmp	r0, #0
    7f30:	beq	832c <ReadInt64Data+0x770>
    7f34:	cmp	r5, #256	; 0x100
    7f38:	bgt	8910 <ReadInt64Data+0xd54>
    7f3c:	ldr	r3, [r4]
    7f40:	add	r4, sp, #56	; 0x38
    7f44:	mov	r1, r7
    7f48:	mov	r2, r5
    7f4c:	mov	r0, r4
    7f50:	bl	18d0 <fread@plt>
    7f54:	mov	sl, r0
    7f58:	cmp	r5, #1
    7f5c:	blt	7f88 <ReadInt64Data+0x3cc>
    7f60:	mov	r6, r5
    7f64:	mov	r7, r8
    7f68:	mov	r0, r4
    7f6c:	bl	1bbc <Mat_int64Swap>
    7f70:	strd	r0, [r7]
    7f74:	subs	r6, r6, #1
    7f78:	add	r7, r7, #8
    7f7c:	add	r4, r4, #8
    7f80:	bne	7f68 <ReadInt64Data+0x3ac>
    7f84:	ldr	r7, [sp, #16]
    7f88:	ldr	r4, [sp, #20]
    7f8c:	b	9044 <ReadInt64Data+0x1488>
    7f90:	sub	r0, r5, #256	; 0x100
    7f94:	str	r5, [sp, #4]
    7f98:	add	r1, r8, #2048	; 0x800
    7f9c:	add	r4, sp, #56	; 0x38
    7fa0:	add	r9, sp, #48	; 0x30
    7fa4:	mov	r5, #0
    7fa8:	str	r0, [sp, #12]
    7fac:	mov	r0, #0
    7fb0:	mov	sl, r0
    7fb4:	ldr	r0, [sp, #20]
    7fb8:	mov	r6, r1
    7fbc:	mov	r1, r7
    7fc0:	mov	r2, #256	; 0x100
    7fc4:	ldr	r3, [r0]
    7fc8:	mov	r0, r4
    7fcc:	bl	18d0 <fread@plt>
    7fd0:	mov	r1, r8
    7fd4:	mov	r2, #0
    7fd8:	add	r3, r4, r2
    7fdc:	add	r2, r2, #2
    7fe0:	ldrh	r3, [r3]
    7fe4:	cmp	r2, #256	; 0x100
    7fe8:	strh	r3, [sp, #48]	; 0x30
    7fec:	vld1.16	{d16[0]}, [r9 :16]
    7ff0:	vmovl.s8	q8, d16
    7ff4:	vmovl.s16	q8, d16
    7ff8:	vmovl.s32	q8, d16
    7ffc:	vst1.64	{d16-d17}, [r1]!
    8000:	bne	7fd8 <ReadInt64Data+0x41c>
    8004:	ldr	r2, [sp, #12]
    8008:	add	r5, r0, r5
    800c:	add	r0, sl, #256	; 0x100
    8010:	add	r8, r8, #2048	; 0x800
    8014:	add	r1, r6, #2048	; 0x800
    8018:	cmp	r0, r2
    801c:	blt	7fb0 <ReadInt64Data+0x3f4>
    8020:	ldr	r2, [sp, #4]
    8024:	cmp	r0, r2
    8028:	bge	9270 <ReadInt64Data+0x16b4>
    802c:	mov	r1, r7
    8030:	sub	r7, r2, r0
    8034:	ldr	r0, [sp, #20]
    8038:	add	r4, sp, #56	; 0x38
    803c:	mov	r2, r7
    8040:	ldr	r3, [r0]
    8044:	mov	r0, r4
    8048:	bl	18d0 <fread@plt>
    804c:	add	r5, r0, r5
    8050:	cmp	r7, #1
    8054:	blt	926c <ReadInt64Data+0x16b0>
    8058:	ldr	r0, [sp, #12]
    805c:	sub	r0, r0, sl
    8060:	ldrsb	r2, [r4], #1
    8064:	subs	r0, r0, #1
    8068:	asr	r3, r2, #31
    806c:	strd	r2, [r6]
    8070:	add	r6, r6, #8
    8074:	bne	8060 <ReadInt64Data+0x4a4>
    8078:	b	926c <ReadInt64Data+0x16b0>
    807c:	sub	r0, r5, #256	; 0x100
    8080:	str	r5, [sp, #4]
    8084:	add	r1, r8, #2048	; 0x800
    8088:	add	r4, sp, #56	; 0x38
    808c:	add	r9, sp, #52	; 0x34
    8090:	mov	r5, #0
    8094:	str	r0, [sp, #12]
    8098:	mov	r0, #0
    809c:	mov	sl, r0
    80a0:	ldr	r0, [sp, #20]
    80a4:	mov	r6, r1
    80a8:	mov	r1, r7
    80ac:	mov	r2, #256	; 0x100
    80b0:	ldr	r3, [r0]
    80b4:	mov	r0, r4
    80b8:	bl	18d0 <fread@plt>
    80bc:	mov	r1, r8
    80c0:	mov	r2, #0
    80c4:	add	r3, r4, r2
    80c8:	add	r2, r2, #2
    80cc:	ldrh	r3, [r3]
    80d0:	cmp	r2, #256	; 0x100
    80d4:	strh	r3, [sp, #52]	; 0x34
    80d8:	vld1.16	{d16[0]}, [r9 :16]
    80dc:	vmovl.u8	q8, d16
    80e0:	vmovl.u16	q8, d16
    80e4:	vmovl.u32	q8, d16
    80e8:	vst1.64	{d16-d17}, [r1]!
    80ec:	bne	80c4 <ReadInt64Data+0x508>
    80f0:	ldr	r2, [sp, #12]
    80f4:	add	r5, r0, r5
    80f8:	add	r0, sl, #256	; 0x100
    80fc:	add	r8, r8, #2048	; 0x800
    8100:	add	r1, r6, #2048	; 0x800
    8104:	cmp	r0, r2
    8108:	blt	809c <ReadInt64Data+0x4e0>
    810c:	ldr	r2, [sp, #4]
    8110:	cmp	r0, r2
    8114:	bge	9270 <ReadInt64Data+0x16b4>
    8118:	mov	r1, r7
    811c:	sub	r7, r2, r0
    8120:	ldr	r0, [sp, #20]
    8124:	add	r4, sp, #56	; 0x38
    8128:	mov	r2, r7
    812c:	ldr	r3, [r0]
    8130:	mov	r0, r4
    8134:	bl	18d0 <fread@plt>
    8138:	add	r5, r0, r5
    813c:	cmp	r7, #1
    8140:	blt	926c <ReadInt64Data+0x16b0>
    8144:	ldr	r0, [sp, #12]
    8148:	mov	r1, #0
    814c:	sub	r0, r0, sl
    8150:	ldrb	r2, [r4], #1
    8154:	subs	r0, r0, #1
    8158:	str	r2, [r6]
    815c:	str	r1, [r6, #4]
    8160:	add	r6, r6, #8
    8164:	bne	8150 <ReadInt64Data+0x594>
    8168:	b	926c <ReadInt64Data+0x16b0>
    816c:	cmp	r5, #256	; 0x100
    8170:	bgt	8a08 <ReadInt64Data+0xe4c>
    8174:	ldr	r3, [r4]
    8178:	add	r4, sp, #56	; 0x38
    817c:	mov	r1, r7
    8180:	mov	r2, r5
    8184:	mov	r0, r4
    8188:	bl	18d0 <fread@plt>
    818c:	cmp	r5, #1
    8190:	blt	8288 <ReadInt64Data+0x6cc>
    8194:	ldrsh	r2, [r4], #2
    8198:	subs	r5, r5, #1
    819c:	asr	r1, r2, #31
    81a0:	str	r2, [r8]
    81a4:	str	r1, [r8, #4]
    81a8:	add	r8, r8, #8
    81ac:	bne	8194 <ReadInt64Data+0x5d8>
    81b0:	b	8288 <ReadInt64Data+0x6cc>
    81b4:	cmp	r5, #256	; 0x100
    81b8:	bgt	8aec <ReadInt64Data+0xf30>
    81bc:	ldr	r3, [r4]
    81c0:	add	r4, sp, #56	; 0x38
    81c4:	mov	r1, r7
    81c8:	mov	r2, r5
    81cc:	mov	r0, r4
    81d0:	bl	18d0 <fread@plt>
    81d4:	cmp	r5, #1
    81d8:	blt	8288 <ReadInt64Data+0x6cc>
    81dc:	mov	r1, #0
    81e0:	ldrh	r2, [r4], #2
    81e4:	subs	r5, r5, #1
    81e8:	str	r2, [r8]
    81ec:	str	r1, [r8, #4]
    81f0:	add	r8, r8, #8
    81f4:	bne	81e0 <ReadInt64Data+0x624>
    81f8:	b	8288 <ReadInt64Data+0x6cc>
    81fc:	cmp	r5, #256	; 0x100
    8200:	bgt	8bd4 <ReadInt64Data+0x1018>
    8204:	ldr	r3, [r4]
    8208:	add	r4, sp, #56	; 0x38
    820c:	mov	r1, r7
    8210:	mov	r2, r5
    8214:	mov	r0, r4
    8218:	bl	18d0 <fread@plt>
    821c:	cmp	r5, #1
    8220:	blt	8288 <ReadInt64Data+0x6cc>
    8224:	ldr	r2, [r4], #4
    8228:	subs	r5, r5, #1
    822c:	asr	r1, r2, #31
    8230:	str	r2, [r8]
    8234:	str	r1, [r8, #4]
    8238:	add	r8, r8, #8
    823c:	bne	8224 <ReadInt64Data+0x668>
    8240:	b	8288 <ReadInt64Data+0x6cc>
    8244:	cmp	r5, #256	; 0x100
    8248:	bgt	8cc0 <ReadInt64Data+0x1104>
    824c:	ldr	r3, [r4]
    8250:	add	r4, sp, #56	; 0x38
    8254:	mov	r1, r7
    8258:	mov	r2, r5
    825c:	mov	r0, r4
    8260:	bl	18d0 <fread@plt>
    8264:	cmp	r5, #1
    8268:	blt	8288 <ReadInt64Data+0x6cc>
    826c:	mov	r1, #0
    8270:	ldr	r2, [r4], #4
    8274:	subs	r5, r5, #1
    8278:	str	r2, [r8]
    827c:	str	r1, [r8, #4]
    8280:	add	r8, r8, #8
    8284:	bne	8270 <ReadInt64Data+0x6b4>
    8288:	mov	r5, r0
    828c:	b	9270 <ReadInt64Data+0x16b4>
    8290:	cmp	r5, #256	; 0x100
    8294:	bgt	8db0 <ReadInt64Data+0x11f4>
    8298:	ldr	r3, [r4]
    829c:	add	r4, sp, #56	; 0x38
    82a0:	mov	r1, r7
    82a4:	mov	r2, r5
    82a8:	mov	r0, r4
    82ac:	bl	18d0 <fread@plt>
    82b0:	mov	r6, r0
    82b4:	cmp	r5, #1
    82b8:	blt	8324 <ReadInt64Data+0x768>
    82bc:	ldr	r0, [r4], #4
    82c0:	bl	49828 <__aeabi_f2lz>
    82c4:	strd	r0, [r8]
    82c8:	subs	r5, r5, #1
    82cc:	add	r8, r8, #8
    82d0:	bne	82bc <ReadInt64Data+0x700>
    82d4:	b	8324 <ReadInt64Data+0x768>
    82d8:	cmp	r5, #256	; 0x100
    82dc:	bgt	8e90 <ReadInt64Data+0x12d4>
    82e0:	ldr	r3, [r4]
    82e4:	add	r4, sp, #56	; 0x38
    82e8:	mov	r1, r7
    82ec:	mov	r2, r5
    82f0:	mov	r0, r4
    82f4:	bl	18d0 <fread@plt>
    82f8:	mov	r6, r0
    82fc:	cmp	r5, #1
    8300:	blt	8324 <ReadInt64Data+0x768>
    8304:	vldr	d16, [r4]
    8308:	vmov	r0, r1, d16
    830c:	bl	49854 <__aeabi_d2lz>
    8310:	strd	r0, [r8]
    8314:	subs	r5, r5, #1
    8318:	add	r8, r8, #8
    831c:	add	r4, r4, #8
    8320:	bne	8304 <ReadInt64Data+0x748>
    8324:	mov	r5, r6
    8328:	b	9270 <ReadInt64Data+0x16b4>
    832c:	cmp	r5, #256	; 0x100
    8330:	bgt	8f80 <ReadInt64Data+0x13c4>
    8334:	ldr	r3, [r4]
    8338:	add	r0, sp, #56	; 0x38
    833c:	mov	r1, r7
    8340:	mov	r2, r5
    8344:	bl	18d0 <fread@plt>
    8348:	mov	sl, r0
    834c:	cmp	r5, #1
    8350:	blt	9044 <ReadInt64Data+0x1488>
    8354:	lsl	r2, r5, #3
    8358:	add	r1, sp, #56	; 0x38
    835c:	mov	r0, r8
    8360:	bl	1834 <memcpy@plt>
    8364:	b	9044 <ReadInt64Data+0x1488>
    8368:	sub	r0, r5, #256	; 0x100
    836c:	str	r5, [sp, #4]
    8370:	add	r1, r8, #2048	; 0x800
    8374:	mov	r5, #0
    8378:	str	r0, [sp, #12]
    837c:	mov	r0, #0
    8380:	ldr	r3, [r4]
    8384:	add	r4, sp, #56	; 0x38
    8388:	mov	sl, r0
    838c:	mov	r9, r1
    8390:	mov	r1, r7
    8394:	mov	r2, #256	; 0x100
    8398:	mov	r0, r4
    839c:	bl	18d0 <fread@plt>
    83a0:	mov	r6, r0
    83a4:	mov	r7, #0
    83a8:	mov	r0, r4
    83ac:	bl	1c50 <Mat_int16Swap>
    83b0:	mov	r1, r8
    83b4:	add	r4, r4, #2
    83b8:	str	r0, [r1, r7]!
    83bc:	add	r7, r7, #8
    83c0:	asr	r0, r0, #31
    83c4:	cmp	r7, #2048	; 0x800
    83c8:	str	r0, [r1, #4]
    83cc:	bne	83a8 <ReadInt64Data+0x7ec>
    83d0:	ldr	r2, [sp, #12]
    83d4:	ldr	r7, [sp, #16]
    83d8:	ldr	r4, [sp, #20]
    83dc:	add	r0, sl, #256	; 0x100
    83e0:	add	r5, r6, r5
    83e4:	add	r8, r8, #2048	; 0x800
    83e8:	add	r1, r9, #2048	; 0x800
    83ec:	cmp	r0, r2
    83f0:	blt	8380 <ReadInt64Data+0x7c4>
    83f4:	ldr	r1, [sp, #4]
    83f8:	cmp	r0, r1
    83fc:	bge	9270 <ReadInt64Data+0x16b4>
    8400:	ldr	r3, [r4]
    8404:	sub	r6, r1, r0
    8408:	add	r4, sp, #56	; 0x38
    840c:	mov	r1, r7
    8410:	mov	r0, r4
    8414:	mov	r2, r6
    8418:	bl	18d0 <fread@plt>
    841c:	add	r5, r0, r5
    8420:	cmp	r6, #1
    8424:	blt	9270 <ReadInt64Data+0x16b4>
    8428:	ldr	r0, [sp, #12]
    842c:	sub	r6, r0, sl
    8430:	mov	r0, r4
    8434:	bl	1c50 <Mat_int16Swap>
    8438:	asr	r1, r0, #31
    843c:	subs	r6, r6, #1
    8440:	add	r4, r4, #2
    8444:	strd	r0, [r9]
    8448:	add	r9, r9, #8
    844c:	bne	8430 <ReadInt64Data+0x874>
    8450:	b	9270 <ReadInt64Data+0x16b4>
    8454:	sub	r1, r5, #256	; 0x100
    8458:	str	r5, [sp, #4]
    845c:	add	r0, r8, #2048	; 0x800
    8460:	mov	sl, #0
    8464:	mov	r5, #0
    8468:	str	r1, [sp, #8]
    846c:	mov	r1, #0
    8470:	ldr	r3, [r4]
    8474:	add	r4, sp, #56	; 0x38
    8478:	str	r1, [sp, #12]
    847c:	mov	r9, r0
    8480:	mov	r1, r7
    8484:	mov	r2, #256	; 0x100
    8488:	mov	r0, r4
    848c:	bl	18d0 <fread@plt>
    8490:	mov	r6, r0
    8494:	mov	r7, #0
    8498:	mov	r0, r4
    849c:	bl	1c64 <Mat_uint16Swap>
    84a0:	mov	r1, r8
    84a4:	add	r4, r4, #2
    84a8:	str	r0, [r1, r7]!
    84ac:	add	r7, r7, #8
    84b0:	cmp	r7, #2048	; 0x800
    84b4:	str	sl, [r1, #4]
    84b8:	bne	8498 <ReadInt64Data+0x8dc>
    84bc:	ldr	r1, [sp, #12]
    84c0:	ldr	r2, [sp, #8]
    84c4:	ldr	r7, [sp, #16]
    84c8:	ldr	r4, [sp, #20]
    84cc:	add	r5, r6, r5
    84d0:	add	r8, r8, #2048	; 0x800
    84d4:	add	r0, r9, #2048	; 0x800
    84d8:	add	r1, r1, #256	; 0x100
    84dc:	cmp	r1, r2
    84e0:	blt	8470 <ReadInt64Data+0x8b4>
    84e4:	ldr	r0, [sp, #4]
    84e8:	cmp	r1, r0
    84ec:	bge	9270 <ReadInt64Data+0x16b4>
    84f0:	ldr	r3, [r4]
    84f4:	sub	r6, r0, r1
    84f8:	add	r4, sp, #56	; 0x38
    84fc:	mov	r1, r7
    8500:	mov	r0, r4
    8504:	mov	r2, r6
    8508:	bl	18d0 <fread@plt>
    850c:	add	r5, r0, r5
    8510:	cmp	r6, #1
    8514:	blt	9270 <ReadInt64Data+0x16b4>
    8518:	ldr	r0, [sp, #8]
    851c:	ldr	r1, [sp, #12]
    8520:	mov	r7, #0
    8524:	sub	r6, r0, r1
    8528:	mov	r0, r4
    852c:	bl	1c64 <Mat_uint16Swap>
    8530:	stm	r9, {r0, r7}
    8534:	add	r9, r9, #8
    8538:	subs	r6, r6, #1
    853c:	add	r4, r4, #2
    8540:	bne	8528 <ReadInt64Data+0x96c>
    8544:	b	926c <ReadInt64Data+0x16b0>
    8548:	sub	r0, r5, #256	; 0x100
    854c:	str	r5, [sp, #4]
    8550:	add	r1, r8, #2048	; 0x800
    8554:	mov	r5, #0
    8558:	str	r0, [sp, #12]
    855c:	mov	r0, #0
    8560:	ldr	r3, [r4]
    8564:	add	r4, sp, #56	; 0x38
    8568:	mov	sl, r0
    856c:	mov	r9, r1
    8570:	mov	r1, r7
    8574:	mov	r2, #256	; 0x100
    8578:	mov	r0, r4
    857c:	bl	18d0 <fread@plt>
    8580:	mov	r6, r0
    8584:	mov	r7, #0
    8588:	mov	r0, r4
    858c:	bl	1c28 <Mat_int32Swap>
    8590:	mov	r1, r8
    8594:	add	r4, r4, #4
    8598:	str	r0, [r1, r7]!
    859c:	add	r7, r7, #8
    85a0:	asr	r0, r0, #31
    85a4:	cmp	r7, #2048	; 0x800
    85a8:	str	r0, [r1, #4]
    85ac:	bne	8588 <ReadInt64Data+0x9cc>
    85b0:	ldr	r2, [sp, #12]
    85b4:	ldr	r7, [sp, #16]
    85b8:	ldr	r4, [sp, #20]
    85bc:	add	r0, sl, #256	; 0x100
    85c0:	add	r5, r6, r5
    85c4:	add	r8, r8, #2048	; 0x800
    85c8:	add	r1, r9, #2048	; 0x800
    85cc:	cmp	r0, r2
    85d0:	blt	8560 <ReadInt64Data+0x9a4>
    85d4:	ldr	r1, [sp, #4]
    85d8:	cmp	r0, r1
    85dc:	bge	9270 <ReadInt64Data+0x16b4>
    85e0:	ldr	r3, [r4]
    85e4:	sub	r6, r1, r0
    85e8:	add	r4, sp, #56	; 0x38
    85ec:	mov	r1, r7
    85f0:	mov	r0, r4
    85f4:	mov	r2, r6
    85f8:	bl	18d0 <fread@plt>
    85fc:	add	r5, r0, r5
    8600:	cmp	r6, #1
    8604:	blt	9270 <ReadInt64Data+0x16b4>
    8608:	ldr	r0, [sp, #12]
    860c:	sub	r6, r0, sl
    8610:	mov	r0, r4
    8614:	bl	1c28 <Mat_int32Swap>
    8618:	asr	r1, r0, #31
    861c:	subs	r6, r6, #1
    8620:	add	r4, r4, #4
    8624:	strd	r0, [r9]
    8628:	add	r9, r9, #8
    862c:	bne	8610 <ReadInt64Data+0xa54>
    8630:	b	9270 <ReadInt64Data+0x16b4>
    8634:	sub	r1, r5, #256	; 0x100
    8638:	str	r5, [sp, #4]
    863c:	add	r0, r8, #2048	; 0x800
    8640:	mov	sl, #0
    8644:	mov	r5, #0
    8648:	str	r1, [sp, #8]
    864c:	mov	r1, #0
    8650:	ldr	r3, [r4]
    8654:	add	r4, sp, #56	; 0x38
    8658:	str	r1, [sp, #12]
    865c:	mov	r9, r0
    8660:	mov	r1, r7
    8664:	mov	r2, #256	; 0x100
    8668:	mov	r0, r4
    866c:	bl	18d0 <fread@plt>
    8670:	mov	r6, r0
    8674:	mov	r7, #0
    8678:	mov	r0, r4
    867c:	bl	1c3c <Mat_uint32Swap>
    8680:	mov	r1, r8
    8684:	add	r4, r4, #4
    8688:	str	r0, [r1, r7]!
    868c:	add	r7, r7, #8
    8690:	cmp	r7, #2048	; 0x800
    8694:	str	sl, [r1, #4]
    8698:	bne	8678 <ReadInt64Data+0xabc>
    869c:	ldr	r1, [sp, #12]
    86a0:	ldr	r2, [sp, #8]
    86a4:	ldr	r7, [sp, #16]
    86a8:	ldr	r4, [sp, #20]
    86ac:	add	r5, r6, r5
    86b0:	add	r8, r8, #2048	; 0x800
    86b4:	add	r0, r9, #2048	; 0x800
    86b8:	add	r1, r1, #256	; 0x100
    86bc:	cmp	r1, r2
    86c0:	blt	8650 <ReadInt64Data+0xa94>
    86c4:	ldr	r0, [sp, #4]
    86c8:	cmp	r1, r0
    86cc:	bge	9270 <ReadInt64Data+0x16b4>
    86d0:	ldr	r3, [r4]
    86d4:	sub	r6, r0, r1
    86d8:	add	r4, sp, #56	; 0x38
    86dc:	mov	r1, r7
    86e0:	mov	r0, r4
    86e4:	mov	r2, r6
    86e8:	bl	18d0 <fread@plt>
    86ec:	add	r5, r0, r5
    86f0:	cmp	r6, #1
    86f4:	blt	9270 <ReadInt64Data+0x16b4>
    86f8:	ldr	r0, [sp, #8]
    86fc:	ldr	r1, [sp, #12]
    8700:	mov	r7, #0
    8704:	sub	r6, r0, r1
    8708:	mov	r0, r4
    870c:	bl	1c3c <Mat_uint32Swap>
    8710:	stm	r9, {r0, r7}
    8714:	add	r9, r9, #8
    8718:	subs	r6, r6, #1
    871c:	add	r4, r4, #4
    8720:	bne	8708 <ReadInt64Data+0xb4c>
    8724:	b	926c <ReadInt64Data+0x16b0>
    8728:	sub	r0, r5, #256	; 0x100
    872c:	str	r5, [sp, #4]
    8730:	add	r1, r8, #2048	; 0x800
    8734:	mov	r5, #0
    8738:	str	r0, [sp, #12]
    873c:	mov	r0, #0
    8740:	ldr	r3, [r4]
    8744:	add	r6, sp, #56	; 0x38
    8748:	mov	sl, r0
    874c:	mov	r9, r1
    8750:	mov	r1, r7
    8754:	mov	r2, #256	; 0x100
    8758:	mov	r0, r6
    875c:	bl	18d0 <fread@plt>
    8760:	mov	r4, r0
    8764:	mov	r7, #0
    8768:	mov	r0, r6
    876c:	bl	1c7c <Mat_floatSwap>
    8770:	vmov	r0, s0
    8774:	bl	49828 <__aeabi_f2lz>
    8778:	mov	r2, r8
    877c:	add	r6, r6, #4
    8780:	str	r0, [r2, r7]!
    8784:	add	r7, r7, #8
    8788:	cmp	r7, #2048	; 0x800
    878c:	str	r1, [r2, #4]
    8790:	bne	8768 <ReadInt64Data+0xbac>
    8794:	ldr	r2, [sp, #12]
    8798:	add	r5, r4, r5
    879c:	ldr	r7, [sp, #16]
    87a0:	ldr	r4, [sp, #20]
    87a4:	add	r0, sl, #256	; 0x100
    87a8:	add	r8, r8, #2048	; 0x800
    87ac:	add	r1, r9, #2048	; 0x800
    87b0:	cmp	r0, r2
    87b4:	blt	8740 <ReadInt64Data+0xb84>
    87b8:	ldr	r1, [sp, #4]
    87bc:	cmp	r0, r1
    87c0:	bge	9270 <ReadInt64Data+0x16b4>
    87c4:	ldr	r3, [r4]
    87c8:	sub	r6, r1, r0
    87cc:	add	r4, sp, #56	; 0x38
    87d0:	mov	r1, r7
    87d4:	mov	r0, r4
    87d8:	mov	r2, r6
    87dc:	bl	18d0 <fread@plt>
    87e0:	add	r5, r0, r5
    87e4:	cmp	r6, #1
    87e8:	blt	9270 <ReadInt64Data+0x16b4>
    87ec:	ldr	r0, [sp, #12]
    87f0:	sub	r6, r0, sl
    87f4:	mov	r0, r4
    87f8:	bl	1c7c <Mat_floatSwap>
    87fc:	vmov	r0, s0
    8800:	bl	49828 <__aeabi_f2lz>
    8804:	strd	r0, [r9]
    8808:	add	r9, r9, #8
    880c:	subs	r6, r6, #1
    8810:	add	r4, r4, #4
    8814:	bne	87f4 <ReadInt64Data+0xc38>
    8818:	b	9270 <ReadInt64Data+0x16b4>
    881c:	sub	r0, r5, #256	; 0x100
    8820:	str	r5, [sp, #4]
    8824:	add	r1, r8, #2048	; 0x800
    8828:	add	r4, sp, #56	; 0x38
    882c:	mov	r5, #0
    8830:	str	r0, [sp, #12]
    8834:	mov	r0, #0
    8838:	mov	sl, r0
    883c:	ldr	r0, [sp, #20]
    8840:	mov	r9, r1
    8844:	mov	r1, r7
    8848:	mov	r2, #256	; 0x100
    884c:	ldr	r3, [r0]
    8850:	mov	r0, r4
    8854:	bl	18d0 <fread@plt>
    8858:	mov	r6, r0
    885c:	mov	r7, #0
    8860:	add	r0, r4, r7
    8864:	bl	1cc0 <Mat_doubleSwap>
    8868:	vmov	r0, r1, d0
    886c:	bl	49854 <__aeabi_d2lz>
    8870:	mov	r2, r8
    8874:	str	r0, [r2, r7]!
    8878:	add	r7, r7, #8
    887c:	cmp	r7, #2048	; 0x800
    8880:	str	r1, [r2, #4]
    8884:	bne	8860 <ReadInt64Data+0xca4>
    8888:	ldr	r2, [sp, #12]
    888c:	ldr	r7, [sp, #16]
    8890:	add	r0, sl, #256	; 0x100
    8894:	add	r5, r6, r5
    8898:	add	r8, r8, #2048	; 0x800
    889c:	add	r1, r9, #2048	; 0x800
    88a0:	cmp	r0, r2
    88a4:	blt	8838 <ReadInt64Data+0xc7c>
    88a8:	ldr	r1, [sp, #4]
    88ac:	cmp	r0, r1
    88b0:	bge	9270 <ReadInt64Data+0x16b4>
    88b4:	sub	r6, r1, r0
    88b8:	ldr	r0, [sp, #20]
    88bc:	add	r4, sp, #56	; 0x38
    88c0:	mov	r1, r7
    88c4:	mov	r2, r6
    88c8:	ldr	r3, [r0]
    88cc:	mov	r0, r4
    88d0:	bl	18d0 <fread@plt>
    88d4:	add	r5, r0, r5
    88d8:	cmp	r6, #1
    88dc:	blt	9270 <ReadInt64Data+0x16b4>
    88e0:	ldr	r0, [sp, #12]
    88e4:	sub	r6, r0, sl
    88e8:	mov	r0, r4
    88ec:	bl	1cc0 <Mat_doubleSwap>
    88f0:	vmov	r0, r1, d0
    88f4:	bl	49854 <__aeabi_d2lz>
    88f8:	strd	r0, [r9]
    88fc:	add	r9, r9, #8
    8900:	subs	r6, r6, #1
    8904:	add	r4, r4, #8
    8908:	bne	88e8 <ReadInt64Data+0xd2c>
    890c:	b	9270 <ReadInt64Data+0x16b4>
    8910:	sub	r0, r5, #256	; 0x100
    8914:	str	r5, [sp, #4]
    8918:	add	r1, r8, #2048	; 0x800
    891c:	add	r4, sp, #56	; 0x38
    8920:	mov	r7, r8
    8924:	mov	r5, #0
    8928:	str	r9, [sp]
    892c:	str	r0, [sp, #8]
    8930:	mov	r0, #0
    8934:	str	r0, [sp, #12]
    8938:	ldr	r0, [sp, #20]
    893c:	mov	r9, r1
    8940:	ldr	r1, [sp, #16]
    8944:	mov	r2, #256	; 0x100
    8948:	ldr	r3, [r0]
    894c:	mov	r0, r4
    8950:	bl	18d0 <fread@plt>
    8954:	mov	r6, r0
    8958:	mov	sl, #0
    895c:	add	r0, r4, sl
    8960:	bl	1bbc <Mat_int64Swap>
    8964:	mov	r2, r7
    8968:	str	r0, [r2, sl]!
    896c:	add	sl, sl, #8
    8970:	cmp	sl, #2048	; 0x800
    8974:	str	r1, [r2, #4]
    8978:	bne	895c <ReadInt64Data+0xda0>
    897c:	ldr	r0, [sp, #12]
    8980:	ldr	r2, [sp, #8]
    8984:	add	r5, r6, r5
    8988:	add	r7, r7, #2048	; 0x800
    898c:	add	r1, r9, #2048	; 0x800
    8990:	add	r0, r0, #256	; 0x100
    8994:	cmp	r0, r2
    8998:	blt	8934 <ReadInt64Data+0xd78>
    899c:	mov	sl, r5
    89a0:	ldr	r5, [sp, #4]
    89a4:	cmp	r0, r5
    89a8:	bge	9038 <ReadInt64Data+0x147c>
    89ac:	sub	r6, r5, r0
    89b0:	ldr	r0, [sp, #20]
    89b4:	ldr	r7, [sp, #16]
    89b8:	add	r4, sp, #56	; 0x38
    89bc:	mov	r2, r6
    89c0:	ldr	r3, [r0]
    89c4:	mov	r0, r4
    89c8:	mov	r1, r7
    89cc:	bl	18d0 <fread@plt>
    89d0:	add	sl, r0, sl
    89d4:	cmp	r6, #1
    89d8:	blt	9030 <ReadInt64Data+0x1474>
    89dc:	ldr	r0, [sp, #8]
    89e0:	ldr	r1, [sp, #12]
    89e4:	sub	r6, r0, r1
    89e8:	mov	r0, r4
    89ec:	bl	1bbc <Mat_int64Swap>
    89f0:	strd	r0, [r9]
    89f4:	add	r9, r9, #8
    89f8:	subs	r6, r6, #1
    89fc:	add	r4, r4, #8
    8a00:	bne	89e8 <ReadInt64Data+0xe2c>
    8a04:	b	9030 <ReadInt64Data+0x1474>
    8a08:	sub	r0, r5, #256	; 0x100
    8a0c:	str	r5, [sp, #4]
    8a10:	add	r1, r8, #2048	; 0x800
    8a14:	add	r4, sp, #56	; 0x38
    8a18:	add	r9, sp, #40	; 0x28
    8a1c:	mov	r5, #0
    8a20:	str	r0, [sp, #12]
    8a24:	mov	r0, #0
    8a28:	mov	sl, r0
    8a2c:	ldr	r0, [sp, #20]
    8a30:	mov	r6, r1
    8a34:	mov	r1, r7
    8a38:	mov	r2, #256	; 0x100
    8a3c:	ldr	r3, [r0]
    8a40:	mov	r0, r4
    8a44:	bl	18d0 <fread@plt>
    8a48:	mov	r1, r8
    8a4c:	mov	r2, #0
    8a50:	ldr	r3, [r4, r2]
    8a54:	add	r2, r2, #4
    8a58:	cmp	r2, #512	; 0x200
    8a5c:	str	r3, [sp, #40]	; 0x28
    8a60:	vld1.32	{d16[0]}, [r9 :32]
    8a64:	vmovl.s16	q8, d16
    8a68:	vmovl.s32	q8, d16
    8a6c:	vst1.64	{d16-d17}, [r1]!
    8a70:	bne	8a50 <ReadInt64Data+0xe94>
    8a74:	ldr	r2, [sp, #12]
    8a78:	add	r5, r0, r5
    8a7c:	add	r0, sl, #256	; 0x100
    8a80:	add	r8, r8, #2048	; 0x800
    8a84:	add	r1, r6, #2048	; 0x800
    8a88:	cmp	r0, r2
    8a8c:	blt	8a28 <ReadInt64Data+0xe6c>
    8a90:	ldr	r2, [sp, #4]
    8a94:	cmp	r0, r2
    8a98:	bge	9270 <ReadInt64Data+0x16b4>
    8a9c:	mov	r1, r7
    8aa0:	sub	r7, r2, r0
    8aa4:	ldr	r0, [sp, #20]
    8aa8:	add	r4, sp, #56	; 0x38
    8aac:	mov	r2, r7
    8ab0:	ldr	r3, [r0]
    8ab4:	mov	r0, r4
    8ab8:	bl	18d0 <fread@plt>
    8abc:	add	r5, r0, r5
    8ac0:	cmp	r7, #1
    8ac4:	blt	926c <ReadInt64Data+0x16b0>
    8ac8:	ldr	r0, [sp, #12]
    8acc:	sub	r0, r0, sl
    8ad0:	ldrsh	r2, [r4], #2
    8ad4:	subs	r0, r0, #1
    8ad8:	asr	r3, r2, #31
    8adc:	strd	r2, [r6]
    8ae0:	add	r6, r6, #8
    8ae4:	bne	8ad0 <ReadInt64Data+0xf14>
    8ae8:	b	926c <ReadInt64Data+0x16b0>
    8aec:	sub	r0, r5, #256	; 0x100
    8af0:	str	r5, [sp, #4]
    8af4:	add	r1, r8, #2048	; 0x800
    8af8:	add	r4, sp, #56	; 0x38
    8afc:	add	r9, sp, #44	; 0x2c
    8b00:	mov	r5, #0
    8b04:	str	r0, [sp, #12]
    8b08:	mov	r0, #0
    8b0c:	mov	sl, r0
    8b10:	ldr	r0, [sp, #20]
    8b14:	mov	r6, r1
    8b18:	mov	r1, r7
    8b1c:	mov	r2, #256	; 0x100
    8b20:	ldr	r3, [r0]
    8b24:	mov	r0, r4
    8b28:	bl	18d0 <fread@plt>
    8b2c:	mov	r1, r8
    8b30:	mov	r2, #0
    8b34:	ldr	r3, [r4, r2]
    8b38:	add	r2, r2, #4
    8b3c:	cmp	r2, #512	; 0x200
    8b40:	str	r3, [sp, #44]	; 0x2c
    8b44:	vld1.32	{d16[0]}, [r9 :32]
    8b48:	vmovl.u16	q8, d16
    8b4c:	vmovl.u32	q8, d16
    8b50:	vst1.64	{d16-d17}, [r1]!
    8b54:	bne	8b34 <ReadInt64Data+0xf78>
    8b58:	ldr	r2, [sp, #12]
    8b5c:	add	r5, r0, r5
    8b60:	add	r0, sl, #256	; 0x100
    8b64:	add	r8, r8, #2048	; 0x800
    8b68:	add	r1, r6, #2048	; 0x800
    8b6c:	cmp	r0, r2
    8b70:	blt	8b0c <ReadInt64Data+0xf50>
    8b74:	ldr	r2, [sp, #4]
    8b78:	cmp	r0, r2
    8b7c:	bge	9270 <ReadInt64Data+0x16b4>
    8b80:	mov	r1, r7
    8b84:	sub	r7, r2, r0
    8b88:	ldr	r0, [sp, #20]
    8b8c:	add	r4, sp, #56	; 0x38
    8b90:	mov	r2, r7
    8b94:	ldr	r3, [r0]
    8b98:	mov	r0, r4
    8b9c:	bl	18d0 <fread@plt>
    8ba0:	add	r5, r0, r5
    8ba4:	cmp	r7, #1
    8ba8:	blt	926c <ReadInt64Data+0x16b0>
    8bac:	ldr	r0, [sp, #12]
    8bb0:	mov	r1, #0
    8bb4:	sub	r0, r0, sl
    8bb8:	ldrh	r2, [r4], #2
    8bbc:	subs	r0, r0, #1
    8bc0:	str	r2, [r6]
    8bc4:	str	r1, [r6, #4]
    8bc8:	add	r6, r6, #8
    8bcc:	bne	8bb8 <ReadInt64Data+0xffc>
    8bd0:	b	926c <ReadInt64Data+0x16b0>
    8bd4:	sub	r0, r5, #256	; 0x100
    8bd8:	str	r5, [sp, #4]
    8bdc:	add	r1, r8, #2048	; 0x800
    8be0:	add	r4, sp, #56	; 0x38
    8be4:	add	r9, sp, #24
    8be8:	mov	r5, #0
    8bec:	str	r0, [sp, #12]
    8bf0:	mov	r0, #0
    8bf4:	mov	sl, r0
    8bf8:	ldr	r0, [sp, #20]
    8bfc:	mov	r6, r1
    8c00:	mov	r1, r7
    8c04:	mov	r2, #256	; 0x100
    8c08:	ldr	r3, [r0]
    8c0c:	mov	r0, r4
    8c10:	bl	18d0 <fread@plt>
    8c14:	mov	r1, r8
    8c18:	mov	r2, #0
    8c1c:	ldr	r3, [r4, r2]
    8c20:	str	r3, [sp, #24]
    8c24:	add	r3, r4, r2
    8c28:	add	r2, r2, #8
    8c2c:	ldr	r3, [r3, #4]
    8c30:	cmp	r2, #1024	; 0x400
    8c34:	str	r3, [sp, #28]
    8c38:	vld1.32	{d16}, [r9 :64]
    8c3c:	vmovl.s32	q8, d16
    8c40:	vst1.64	{d16-d17}, [r1]!
    8c44:	bne	8c1c <ReadInt64Data+0x1060>
    8c48:	ldr	r2, [sp, #12]
    8c4c:	add	r5, r0, r5
    8c50:	add	r0, sl, #256	; 0x100
    8c54:	add	r8, r8, #2048	; 0x800
    8c58:	add	r1, r6, #2048	; 0x800
    8c5c:	cmp	r0, r2
    8c60:	blt	8bf4 <ReadInt64Data+0x1038>
    8c64:	ldr	r2, [sp, #4]
    8c68:	cmp	r0, r2
    8c6c:	bge	9270 <ReadInt64Data+0x16b4>
    8c70:	mov	r1, r7
    8c74:	sub	r7, r2, r0
    8c78:	ldr	r0, [sp, #20]
    8c7c:	add	r4, sp, #56	; 0x38
    8c80:	mov	r2, r7
    8c84:	ldr	r3, [r0]
    8c88:	mov	r0, r4
    8c8c:	bl	18d0 <fread@plt>
    8c90:	add	r5, r0, r5
    8c94:	cmp	r7, #1
    8c98:	blt	926c <ReadInt64Data+0x16b0>
    8c9c:	ldr	r0, [sp, #12]
    8ca0:	sub	r0, r0, sl
    8ca4:	ldr	r2, [r4], #4
    8ca8:	subs	r0, r0, #1
    8cac:	asr	r3, r2, #31
    8cb0:	strd	r2, [r6]
    8cb4:	add	r6, r6, #8
    8cb8:	bne	8ca4 <ReadInt64Data+0x10e8>
    8cbc:	b	926c <ReadInt64Data+0x16b0>
    8cc0:	sub	r0, r5, #256	; 0x100
    8cc4:	str	r5, [sp, #4]
    8cc8:	add	r1, r8, #2048	; 0x800
    8ccc:	add	r4, sp, #56	; 0x38
    8cd0:	add	r9, sp, #32
    8cd4:	mov	r5, #0
    8cd8:	str	r0, [sp, #12]
    8cdc:	mov	r0, #0
    8ce0:	mov	sl, r0
    8ce4:	ldr	r0, [sp, #20]
    8ce8:	mov	r6, r1
    8cec:	mov	r1, r7
    8cf0:	mov	r2, #256	; 0x100
    8cf4:	ldr	r3, [r0]
    8cf8:	mov	r0, r4
    8cfc:	bl	18d0 <fread@plt>
    8d00:	mov	r1, r8
    8d04:	mov	r2, #0
    8d08:	ldr	r3, [r4, r2]
    8d0c:	str	r3, [sp, #32]
    8d10:	add	r3, r4, r2
    8d14:	add	r2, r2, #8
    8d18:	ldr	r3, [r3, #4]
    8d1c:	cmp	r2, #1024	; 0x400
    8d20:	str	r3, [sp, #36]	; 0x24
    8d24:	vld1.32	{d16}, [r9 :64]
    8d28:	vmovl.u32	q8, d16
    8d2c:	vst1.64	{d16-d17}, [r1]!
    8d30:	bne	8d08 <ReadInt64Data+0x114c>
    8d34:	ldr	r2, [sp, #12]
    8d38:	add	r5, r0, r5
    8d3c:	add	r0, sl, #256	; 0x100
    8d40:	add	r8, r8, #2048	; 0x800
    8d44:	add	r1, r6, #2048	; 0x800
    8d48:	cmp	r0, r2
    8d4c:	blt	8ce0 <ReadInt64Data+0x1124>
    8d50:	ldr	r2, [sp, #4]
    8d54:	cmp	r0, r2
    8d58:	bge	9270 <ReadInt64Data+0x16b4>
    8d5c:	mov	r1, r7
    8d60:	sub	r7, r2, r0
    8d64:	ldr	r0, [sp, #20]
    8d68:	add	r4, sp, #56	; 0x38
    8d6c:	mov	r2, r7
    8d70:	ldr	r3, [r0]
    8d74:	mov	r0, r4
    8d78:	bl	18d0 <fread@plt>
    8d7c:	add	r5, r0, r5
    8d80:	cmp	r7, #1
    8d84:	blt	926c <ReadInt64Data+0x16b0>
    8d88:	ldr	r0, [sp, #12]
    8d8c:	mov	r1, #0
    8d90:	sub	r0, r0, sl
    8d94:	ldr	r2, [r4], #4
    8d98:	subs	r0, r0, #1
    8d9c:	str	r2, [r6]
    8da0:	str	r1, [r6, #4]
    8da4:	add	r6, r6, #8
    8da8:	bne	8d94 <ReadInt64Data+0x11d8>
    8dac:	b	926c <ReadInt64Data+0x16b0>
    8db0:	sub	r0, r5, #256	; 0x100
    8db4:	str	r5, [sp, #4]
    8db8:	add	r1, r8, #2048	; 0x800
    8dbc:	mov	r5, #0
    8dc0:	str	r0, [sp, #12]
    8dc4:	mov	r0, #0
    8dc8:	mov	sl, r0
    8dcc:	ldr	r0, [sp, #20]
    8dd0:	add	r9, sp, #56	; 0x38
    8dd4:	mov	r4, r1
    8dd8:	mov	r1, r7
    8ddc:	mov	r2, #256	; 0x100
    8de0:	ldr	r3, [r0]
    8de4:	mov	r0, r9
    8de8:	bl	18d0 <fread@plt>
    8dec:	mov	r6, r0
    8df0:	mov	r7, #0
    8df4:	ldr	r0, [r9], #4
    8df8:	bl	49828 <__aeabi_f2lz>
    8dfc:	mov	r2, r8
    8e00:	str	r0, [r2, r7]!
    8e04:	add	r7, r7, #8
    8e08:	cmp	r7, #2048	; 0x800
    8e0c:	str	r1, [r2, #4]
    8e10:	bne	8df4 <ReadInt64Data+0x1238>
    8e14:	ldr	r2, [sp, #12]
    8e18:	ldr	r7, [sp, #16]
    8e1c:	add	r0, sl, #256	; 0x100
    8e20:	add	r5, r6, r5
    8e24:	add	r8, r8, #2048	; 0x800
    8e28:	add	r1, r4, #2048	; 0x800
    8e2c:	cmp	r0, r2
    8e30:	blt	8dc8 <ReadInt64Data+0x120c>
    8e34:	ldr	r1, [sp, #4]
    8e38:	cmp	r0, r1
    8e3c:	bge	9270 <ReadInt64Data+0x16b4>
    8e40:	sub	r6, r1, r0
    8e44:	ldr	r0, [sp, #20]
    8e48:	mov	r1, r7
    8e4c:	add	r7, sp, #56	; 0x38
    8e50:	mov	r2, r6
    8e54:	ldr	r3, [r0]
    8e58:	mov	r0, r7
    8e5c:	bl	18d0 <fread@plt>
    8e60:	add	r5, r0, r5
    8e64:	cmp	r6, #1
    8e68:	blt	926c <ReadInt64Data+0x16b0>
    8e6c:	ldr	r0, [sp, #12]
    8e70:	sub	r6, r0, sl
    8e74:	ldr	r0, [r7], #4
    8e78:	bl	49828 <__aeabi_f2lz>
    8e7c:	strd	r0, [r4]
    8e80:	add	r4, r4, #8
    8e84:	subs	r6, r6, #1
    8e88:	bne	8e74 <ReadInt64Data+0x12b8>
    8e8c:	b	926c <ReadInt64Data+0x16b0>
    8e90:	sub	r0, r5, #256	; 0x100
    8e94:	str	r5, [sp, #4]
    8e98:	add	r1, r8, #2048	; 0x800
    8e9c:	add	r4, sp, #56	; 0x38
    8ea0:	mov	r5, #0
    8ea4:	str	r0, [sp, #12]
    8ea8:	mov	r0, #0
    8eac:	mov	sl, r0
    8eb0:	ldr	r0, [sp, #20]
    8eb4:	mov	r9, r1
    8eb8:	mov	r1, r7
    8ebc:	mov	r2, #256	; 0x100
    8ec0:	ldr	r3, [r0]
    8ec4:	mov	r0, r4
    8ec8:	bl	18d0 <fread@plt>
    8ecc:	mov	r6, r0
    8ed0:	mov	r7, #0
    8ed4:	add	r0, r4, r7
    8ed8:	vldr	d16, [r0]
    8edc:	vmov	r0, r1, d16
    8ee0:	bl	49854 <__aeabi_d2lz>
    8ee4:	mov	r2, r8
    8ee8:	str	r0, [r2, r7]!
    8eec:	add	r7, r7, #8
    8ef0:	cmp	r7, #2048	; 0x800
    8ef4:	str	r1, [r2, #4]
    8ef8:	bne	8ed4 <ReadInt64Data+0x1318>
    8efc:	ldr	r2, [sp, #12]
    8f00:	ldr	r7, [sp, #16]
    8f04:	add	r0, sl, #256	; 0x100
    8f08:	add	r5, r6, r5
    8f0c:	add	r8, r8, #2048	; 0x800
    8f10:	add	r1, r9, #2048	; 0x800
    8f14:	cmp	r0, r2
    8f18:	blt	8eac <ReadInt64Data+0x12f0>
    8f1c:	ldr	r1, [sp, #4]
    8f20:	cmp	r0, r1
    8f24:	bge	9270 <ReadInt64Data+0x16b4>
    8f28:	sub	r6, r1, r0
    8f2c:	ldr	r0, [sp, #20]
    8f30:	add	r4, sp, #56	; 0x38
    8f34:	mov	r1, r7
    8f38:	mov	r2, r6
    8f3c:	ldr	r3, [r0]
    8f40:	mov	r0, r4
    8f44:	bl	18d0 <fread@plt>
    8f48:	add	r5, r0, r5
    8f4c:	cmp	r6, #1
    8f50:	blt	9270 <ReadInt64Data+0x16b4>
    8f54:	ldr	r0, [sp, #12]
    8f58:	sub	r6, r0, sl
    8f5c:	vldr	d16, [r4]
    8f60:	vmov	r0, r1, d16
    8f64:	bl	49854 <__aeabi_d2lz>
    8f68:	strd	r0, [r9]
    8f6c:	add	r9, r9, #8
    8f70:	subs	r6, r6, #1
    8f74:	add	r4, r4, #8
    8f78:	bne	8f5c <ReadInt64Data+0x13a0>
    8f7c:	b	9270 <ReadInt64Data+0x16b4>
    8f80:	sub	r0, r5, #256	; 0x100
    8f84:	lsl	r4, r5, #3
    8f88:	str	r5, [sp, #4]
    8f8c:	mov	r6, #0
    8f90:	mov	r5, #0
    8f94:	str	r9, [sp]
    8f98:	str	r0, [sp, #12]
    8f9c:	ldr	r0, [sp, #20]
    8fa0:	add	sl, sp, #56	; 0x38
    8fa4:	mov	r1, r7
    8fa8:	mov	r2, #256	; 0x100
    8fac:	ldr	r3, [r0]
    8fb0:	mov	r0, sl
    8fb4:	bl	18d0 <fread@plt>
    8fb8:	mov	r9, r0
    8fbc:	add	r0, r8, r6, lsl #3
    8fc0:	mov	r1, sl
    8fc4:	mov	r2, #2048	; 0x800
    8fc8:	bl	1834 <memcpy@plt>
    8fcc:	ldr	r0, [sp, #12]
    8fd0:	add	r6, r6, #256	; 0x100
    8fd4:	add	r5, r9, r5
    8fd8:	sub	r4, r4, #2048	; 0x800
    8fdc:	cmp	r6, r0
    8fe0:	blt	8f9c <ReadInt64Data+0x13e0>
    8fe4:	mov	sl, r5
    8fe8:	ldr	r5, [sp, #4]
    8fec:	cmp	r6, r5
    8ff0:	bge	9038 <ReadInt64Data+0x147c>
    8ff4:	ldr	r0, [sp, #20]
    8ff8:	ldr	r7, [sp, #16]
    8ffc:	sub	r9, r5, r6
    9000:	mov	r2, r9
    9004:	ldr	r3, [r0]
    9008:	add	r0, sp, #56	; 0x38
    900c:	mov	r1, r7
    9010:	bl	18d0 <fread@plt>
    9014:	add	sl, r0, sl
    9018:	cmp	r9, #1
    901c:	blt	9030 <ReadInt64Data+0x1474>
    9020:	add	r0, r8, r6, lsl #3
    9024:	add	r1, sp, #56	; 0x38
    9028:	mov	r2, r4
    902c:	bl	1834 <memcpy@plt>
    9030:	ldr	r5, [sp, #4]
    9034:	b	903c <ReadInt64Data+0x1480>
    9038:	ldr	r7, [sp, #16]
    903c:	ldr	r4, [sp, #20]
    9040:	ldr	r9, [sp]
    9044:	cmp	r9, #13
    9048:	bne	90dc <ReadInt64Data+0x1520>
    904c:	ldr	r0, [r4, #20]
    9050:	cmp	r0, #0
    9054:	beq	90a4 <ReadInt64Data+0x14e8>
    9058:	cmp	r5, #256	; 0x100
    905c:	bgt	90e4 <ReadInt64Data+0x1528>
    9060:	ldr	r3, [r4]
    9064:	add	r4, sp, #56	; 0x38
    9068:	mov	r1, r7
    906c:	mov	r2, r5
    9070:	mov	r0, r4
    9074:	bl	18d0 <fread@plt>
    9078:	add	sl, r0, sl
    907c:	cmp	r5, #1
    9080:	blt	90dc <ReadInt64Data+0x1520>
    9084:	mov	r0, r4
    9088:	bl	1c0c <Mat_uint64Swap>
    908c:	strd	r0, [r8]
    9090:	subs	r5, r5, #1
    9094:	add	r8, r8, #8
    9098:	add	r4, r4, #8
    909c:	bne	9084 <ReadInt64Data+0x14c8>
    90a0:	b	90dc <ReadInt64Data+0x1520>
    90a4:	cmp	r5, #256	; 0x100
    90a8:	bgt	91c8 <ReadInt64Data+0x160c>
    90ac:	ldr	r3, [r4]
    90b0:	add	r0, sp, #56	; 0x38
    90b4:	mov	r1, r7
    90b8:	mov	r2, r5
    90bc:	bl	18d0 <fread@plt>
    90c0:	add	sl, r0, sl
    90c4:	cmp	r5, #1
    90c8:	blt	90dc <ReadInt64Data+0x1520>
    90cc:	lsl	r2, r5, #3
    90d0:	add	r1, sp, #56	; 0x38
    90d4:	mov	r0, r8
    90d8:	bl	1834 <memcpy@plt>
    90dc:	mov	r5, sl
    90e0:	b	9270 <ReadInt64Data+0x16b4>
    90e4:	sub	r0, r5, #256	; 0x100
    90e8:	str	r5, [sp, #4]
    90ec:	add	r1, r8, #2048	; 0x800
    90f0:	add	r4, sp, #56	; 0x38
    90f4:	mov	r5, sl
    90f8:	str	r0, [sp, #12]
    90fc:	mov	r0, #0
    9100:	mov	sl, r0
    9104:	ldr	r0, [sp, #20]
    9108:	mov	r9, r1
    910c:	mov	r1, r7
    9110:	mov	r2, #256	; 0x100
    9114:	ldr	r3, [r0]
    9118:	mov	r0, r4
    911c:	bl	18d0 <fread@plt>
    9120:	mov	r6, r0
    9124:	mov	r7, #0
    9128:	add	r0, r4, r7
    912c:	bl	1c0c <Mat_uint64Swap>
    9130:	mov	r2, r8
    9134:	str	r0, [r2, r7]!
    9138:	add	r7, r7, #8
    913c:	cmp	r7, #2048	; 0x800
    9140:	str	r1, [r2, #4]
    9144:	bne	9128 <ReadInt64Data+0x156c>
    9148:	ldr	r2, [sp, #12]
    914c:	ldr	r7, [sp, #16]
    9150:	add	r0, sl, #256	; 0x100
    9154:	add	r5, r6, r5
    9158:	add	r8, r8, #2048	; 0x800
    915c:	add	r1, r9, #2048	; 0x800
    9160:	cmp	r0, r2
    9164:	blt	9100 <ReadInt64Data+0x1544>
    9168:	ldr	r1, [sp, #4]
    916c:	cmp	r0, r1
    9170:	bge	9270 <ReadInt64Data+0x16b4>
    9174:	sub	r6, r1, r0
    9178:	ldr	r0, [sp, #20]
    917c:	add	r4, sp, #56	; 0x38
    9180:	mov	r1, r7
    9184:	mov	r2, r6
    9188:	ldr	r3, [r0]
    918c:	mov	r0, r4
    9190:	bl	18d0 <fread@plt>
    9194:	add	r5, r0, r5
    9198:	cmp	r6, #1
    919c:	blt	9270 <ReadInt64Data+0x16b4>
    91a0:	ldr	r0, [sp, #12]
    91a4:	sub	r6, r0, sl
    91a8:	mov	r0, r4
    91ac:	bl	1c0c <Mat_uint64Swap>
    91b0:	strd	r0, [r9]
    91b4:	add	r9, r9, #8
    91b8:	subs	r6, r6, #1
    91bc:	add	r4, r4, #8
    91c0:	bne	91a8 <ReadInt64Data+0x15ec>
    91c4:	b	9270 <ReadInt64Data+0x16b4>
    91c8:	sub	r0, r5, #256	; 0x100
    91cc:	lsl	r4, r5, #3
    91d0:	str	r5, [sp, #4]
    91d4:	mov	r6, #0
    91d8:	add	r9, sp, #56	; 0x38
    91dc:	mov	r5, sl
    91e0:	str	r0, [sp, #12]
    91e4:	ldr	r0, [sp, #20]
    91e8:	mov	r1, r7
    91ec:	mov	r2, #256	; 0x100
    91f0:	ldr	r3, [r0]
    91f4:	mov	r0, r9
    91f8:	bl	18d0 <fread@plt>
    91fc:	mov	sl, r0
    9200:	add	r0, r8, r6, lsl #3
    9204:	mov	r1, r9
    9208:	mov	r2, #2048	; 0x800
    920c:	bl	1834 <memcpy@plt>
    9210:	ldr	r0, [sp, #12]
    9214:	add	r6, r6, #256	; 0x100
    9218:	add	r5, sl, r5
    921c:	sub	r4, r4, #2048	; 0x800
    9220:	cmp	r6, r0
    9224:	blt	91e4 <ReadInt64Data+0x1628>
    9228:	ldr	r0, [sp, #4]
    922c:	cmp	r6, r0
    9230:	bge	926c <ReadInt64Data+0x16b0>
    9234:	sub	r7, r0, r6
    9238:	ldr	r0, [sp, #20]
    923c:	ldr	r1, [sp, #16]
    9240:	mov	r2, r7
    9244:	ldr	r3, [r0]
    9248:	add	r0, sp, #56	; 0x38
    924c:	bl	18d0 <fread@plt>
    9250:	add	r5, r0, r5
    9254:	cmp	r7, #1
    9258:	blt	926c <ReadInt64Data+0x16b0>
    925c:	add	r0, r8, r6, lsl #3
    9260:	add	r1, sp, #56	; 0x38
    9264:	mov	r2, r4
    9268:	bl	1834 <memcpy@plt>
    926c:	ldr	r7, [sp, #16]
    9270:	mul	r0, r5, r7
    9274:	sub	sp, fp, #28
    9278:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000927c <ReadCompressedInt64Data>:
    927c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9280:	add	fp, sp, #28
    9284:	sub	sp, sp, #12
    9288:	mov	r7, r0
    928c:	mov	r0, #0
    9290:	cmp	r1, #0
    9294:	beq	9710 <ReadCompressedInt64Data+0x494>
    9298:	cmp	r7, #0
    929c:	movne	r5, r2
    92a0:	cmpne	r2, #0
    92a4:	beq	9710 <ReadCompressedInt64Data+0x494>
    92a8:	ldr	sl, [fp, #8]
    92ac:	mov	r0, r3
    92b0:	mov	r4, r3
    92b4:	mov	r6, r1
    92b8:	bl	193c <Mat_SizeOf@plt>
    92bc:	mov	r9, r0
    92c0:	sub	r0, r4, #1
    92c4:	cmp	r0, #12
    92c8:	bhi	970c <ReadCompressedInt64Data+0x490>
    92cc:	add	r1, pc, #4
    92d0:	ldr	r0, [r1, r0, lsl #2]
    92d4:	add	pc, r1, r0
    92d8:	.word	0x00000034
    92dc:	.word	0x00000074
    92e0:	.word	0x000000b4
    92e4:	.word	0x00000104
    92e8:	.word	0x00000154
    92ec:	.word	0x000001a4
    92f0:	.word	0x000001f4
    92f4:	.word	0x00000434
    92f8:	.word	0x00000248
    92fc:	.word	0x00000434
    9300:	.word	0x00000434
    9304:	.word	0x0000029c
    9308:	.word	0x000002e8
    930c:	cmp	sl, #1
    9310:	blt	970c <ReadCompressedInt64Data+0x490>
    9314:	mov	r8, sp
    9318:	mov	r4, sl
    931c:	mov	r0, r7
    9320:	mov	r1, r6
    9324:	mov	r2, r8
    9328:	mov	r3, r9
    932c:	bl	31f0 <InflateData>
    9330:	ldrsb	r0, [sp]
    9334:	subs	r4, r4, #1
    9338:	asr	r1, r0, #31
    933c:	strd	r0, [r5]
    9340:	add	r5, r5, #8
    9344:	bne	931c <ReadCompressedInt64Data+0xa0>
    9348:	b	970c <ReadCompressedInt64Data+0x490>
    934c:	cmp	sl, #1
    9350:	blt	9708 <ReadCompressedInt64Data+0x48c>
    9354:	ldr	r4, [fp, #8]
    9358:	mov	r8, sp
    935c:	mov	sl, #0
    9360:	mov	r0, r7
    9364:	mov	r1, r6
    9368:	mov	r2, r8
    936c:	mov	r3, r9
    9370:	bl	31f0 <InflateData>
    9374:	ldrb	r0, [sp]
    9378:	subs	r4, r4, #1
    937c:	stm	r5, {r0, sl}
    9380:	add	r5, r5, #8
    9384:	bne	9360 <ReadCompressedInt64Data+0xe4>
    9388:	b	9708 <ReadCompressedInt64Data+0x48c>
    938c:	ldr	r0, [r7, #20]
    9390:	cmp	r0, #0
    9394:	beq	960c <ReadCompressedInt64Data+0x390>
    9398:	cmp	sl, #1
    939c:	blt	970c <ReadCompressedInt64Data+0x490>
    93a0:	mov	r8, sp
    93a4:	mov	r4, sl
    93a8:	mov	r0, r7
    93ac:	mov	r1, r6
    93b0:	mov	r2, r8
    93b4:	mov	r3, r9
    93b8:	bl	31f0 <InflateData>
    93bc:	mov	r0, r8
    93c0:	bl	1c50 <Mat_int16Swap>
    93c4:	asr	r1, r0, #31
    93c8:	subs	r4, r4, #1
    93cc:	strd	r0, [r5]
    93d0:	add	r5, r5, #8
    93d4:	bne	93a8 <ReadCompressedInt64Data+0x12c>
    93d8:	b	970c <ReadCompressedInt64Data+0x490>
    93dc:	ldr	r0, [r7, #20]
    93e0:	cmp	r0, #0
    93e4:	beq	964c <ReadCompressedInt64Data+0x3d0>
    93e8:	cmp	sl, #1
    93ec:	blt	9708 <ReadCompressedInt64Data+0x48c>
    93f0:	ldr	r4, [fp, #8]
    93f4:	mov	r8, sp
    93f8:	mov	sl, #0
    93fc:	mov	r0, r7
    9400:	mov	r1, r6
    9404:	mov	r2, r8
    9408:	mov	r3, r9
    940c:	bl	31f0 <InflateData>
    9410:	mov	r0, r8
    9414:	bl	1c64 <Mat_uint16Swap>
    9418:	stm	r5, {r0, sl}
    941c:	subs	r4, r4, #1
    9420:	add	r5, r5, #8
    9424:	bne	93fc <ReadCompressedInt64Data+0x180>
    9428:	b	9708 <ReadCompressedInt64Data+0x48c>
    942c:	ldr	r0, [r7, #20]
    9430:	cmp	r0, #0
    9434:	beq	968c <ReadCompressedInt64Data+0x410>
    9438:	cmp	sl, #1
    943c:	blt	970c <ReadCompressedInt64Data+0x490>
    9440:	mov	r8, sp
    9444:	mov	r4, sl
    9448:	mov	r0, r7
    944c:	mov	r1, r6
    9450:	mov	r2, r8
    9454:	mov	r3, r9
    9458:	bl	31f0 <InflateData>
    945c:	mov	r0, r8
    9460:	bl	1c28 <Mat_int32Swap>
    9464:	asr	r1, r0, #31
    9468:	subs	r4, r4, #1
    946c:	strd	r0, [r5]
    9470:	add	r5, r5, #8
    9474:	bne	9448 <ReadCompressedInt64Data+0x1cc>
    9478:	b	970c <ReadCompressedInt64Data+0x490>
    947c:	ldr	r0, [r7, #20]
    9480:	cmp	r0, #0
    9484:	beq	96cc <ReadCompressedInt64Data+0x450>
    9488:	cmp	sl, #1
    948c:	blt	9708 <ReadCompressedInt64Data+0x48c>
    9490:	ldr	sl, [fp, #8]
    9494:	mov	r8, sp
    9498:	mov	r4, #0
    949c:	mov	r0, r7
    94a0:	mov	r1, r6
    94a4:	mov	r2, r8
    94a8:	mov	r3, r9
    94ac:	bl	31f0 <InflateData>
    94b0:	mov	r0, r8
    94b4:	bl	1c3c <Mat_uint32Swap>
    94b8:	stm	r5, {r0, r4}
    94bc:	subs	sl, sl, #1
    94c0:	add	r5, r5, #8
    94c4:	bne	949c <ReadCompressedInt64Data+0x220>
    94c8:	b	9708 <ReadCompressedInt64Data+0x48c>
    94cc:	ldr	r0, [r7, #20]
    94d0:	cmp	r0, #0
    94d4:	beq	9718 <ReadCompressedInt64Data+0x49c>
    94d8:	cmp	sl, #1
    94dc:	blt	970c <ReadCompressedInt64Data+0x490>
    94e0:	mov	r8, sp
    94e4:	mov	r4, sl
    94e8:	mov	r0, r7
    94ec:	mov	r1, r6
    94f0:	mov	r2, r8
    94f4:	mov	r3, r9
    94f8:	bl	31f0 <InflateData>
    94fc:	mov	r0, r8
    9500:	bl	1c7c <Mat_floatSwap>
    9504:	vmov	r0, s0
    9508:	bl	49828 <__aeabi_f2lz>
    950c:	strd	r0, [r5]
    9510:	subs	r4, r4, #1
    9514:	add	r5, r5, #8
    9518:	bne	94e8 <ReadCompressedInt64Data+0x26c>
    951c:	b	970c <ReadCompressedInt64Data+0x490>
    9520:	ldr	r0, [r7, #20]
    9524:	cmp	r0, #0
    9528:	beq	9758 <ReadCompressedInt64Data+0x4dc>
    952c:	cmp	sl, #1
    9530:	blt	970c <ReadCompressedInt64Data+0x490>
    9534:	mov	r8, sp
    9538:	mov	r4, sl
    953c:	mov	r0, r7
    9540:	mov	r1, r6
    9544:	mov	r2, r8
    9548:	mov	r3, r9
    954c:	bl	31f0 <InflateData>
    9550:	mov	r0, r8
    9554:	bl	1cc0 <Mat_doubleSwap>
    9558:	vmov	r0, r1, d0
    955c:	bl	49854 <__aeabi_d2lz>
    9560:	strd	r0, [r5]
    9564:	subs	r4, r4, #1
    9568:	add	r5, r5, #8
    956c:	bne	953c <ReadCompressedInt64Data+0x2c0>
    9570:	b	970c <ReadCompressedInt64Data+0x490>
    9574:	ldr	r0, [r7, #20]
    9578:	cmp	r0, #0
    957c:	beq	979c <ReadCompressedInt64Data+0x520>
    9580:	cmp	sl, #1
    9584:	blt	970c <ReadCompressedInt64Data+0x490>
    9588:	mov	r8, sp
    958c:	mov	r4, sl
    9590:	mov	r0, r7
    9594:	mov	r1, r6
    9598:	mov	r2, r8
    959c:	mov	r3, r9
    95a0:	bl	31f0 <InflateData>
    95a4:	mov	r0, r8
    95a8:	bl	1bbc <Mat_int64Swap>
    95ac:	strd	r0, [r5]
    95b0:	subs	r4, r4, #1
    95b4:	add	r5, r5, #8
    95b8:	bne	9590 <ReadCompressedInt64Data+0x314>
    95bc:	b	970c <ReadCompressedInt64Data+0x490>
    95c0:	ldr	r0, [r7, #20]
    95c4:	cmp	r0, #0
    95c8:	beq	97d8 <ReadCompressedInt64Data+0x55c>
    95cc:	cmp	sl, #1
    95d0:	blt	970c <ReadCompressedInt64Data+0x490>
    95d4:	mov	r8, sp
    95d8:	mov	r4, sl
    95dc:	mov	r0, r7
    95e0:	mov	r1, r6
    95e4:	mov	r2, r8
    95e8:	mov	r3, r9
    95ec:	bl	31f0 <InflateData>
    95f0:	mov	r0, r8
    95f4:	bl	1c0c <Mat_uint64Swap>
    95f8:	strd	r0, [r5]
    95fc:	subs	r4, r4, #1
    9600:	add	r5, r5, #8
    9604:	bne	95dc <ReadCompressedInt64Data+0x360>
    9608:	b	970c <ReadCompressedInt64Data+0x490>
    960c:	cmp	sl, #1
    9610:	blt	970c <ReadCompressedInt64Data+0x490>
    9614:	mov	r8, sp
    9618:	mov	r4, sl
    961c:	mov	r0, r7
    9620:	mov	r1, r6
    9624:	mov	r2, r8
    9628:	mov	r3, r9
    962c:	bl	31f0 <InflateData>
    9630:	ldrsh	r0, [sp]
    9634:	subs	r4, r4, #1
    9638:	asr	r1, r0, #31
    963c:	strd	r0, [r5]
    9640:	add	r5, r5, #8
    9644:	bne	961c <ReadCompressedInt64Data+0x3a0>
    9648:	b	970c <ReadCompressedInt64Data+0x490>
    964c:	cmp	sl, #1
    9650:	blt	9708 <ReadCompressedInt64Data+0x48c>
    9654:	ldr	r4, [fp, #8]
    9658:	mov	r8, sp
    965c:	mov	sl, #0
    9660:	mov	r0, r7
    9664:	mov	r1, r6
    9668:	mov	r2, r8
    966c:	mov	r3, r9
    9670:	bl	31f0 <InflateData>
    9674:	ldrh	r0, [sp]
    9678:	subs	r4, r4, #1
    967c:	stm	r5, {r0, sl}
    9680:	add	r5, r5, #8
    9684:	bne	9660 <ReadCompressedInt64Data+0x3e4>
    9688:	b	9708 <ReadCompressedInt64Data+0x48c>
    968c:	cmp	sl, #1
    9690:	blt	970c <ReadCompressedInt64Data+0x490>
    9694:	mov	r8, sp
    9698:	mov	r4, sl
    969c:	mov	r0, r7
    96a0:	mov	r1, r6
    96a4:	mov	r2, r8
    96a8:	mov	r3, r9
    96ac:	bl	31f0 <InflateData>
    96b0:	ldr	r0, [sp]
    96b4:	subs	r4, r4, #1
    96b8:	asr	r1, r0, #31
    96bc:	strd	r0, [r5]
    96c0:	add	r5, r5, #8
    96c4:	bne	969c <ReadCompressedInt64Data+0x420>
    96c8:	b	970c <ReadCompressedInt64Data+0x490>
    96cc:	cmp	sl, #1
    96d0:	blt	9708 <ReadCompressedInt64Data+0x48c>
    96d4:	ldr	r4, [fp, #8]
    96d8:	mov	r8, sp
    96dc:	mov	sl, #0
    96e0:	mov	r0, r7
    96e4:	mov	r1, r6
    96e8:	mov	r2, r8
    96ec:	mov	r3, r9
    96f0:	bl	31f0 <InflateData>
    96f4:	ldr	r0, [sp]
    96f8:	subs	r4, r4, #1
    96fc:	stm	r5, {r0, sl}
    9700:	add	r5, r5, #8
    9704:	bne	96e0 <ReadCompressedInt64Data+0x464>
    9708:	ldr	sl, [fp, #8]
    970c:	mul	r0, r9, sl
    9710:	sub	sp, fp, #28
    9714:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9718:	cmp	sl, #1
    971c:	blt	970c <ReadCompressedInt64Data+0x490>
    9720:	mov	r8, sp
    9724:	mov	r4, sl
    9728:	mov	r0, r7
    972c:	mov	r1, r6
    9730:	mov	r2, r8
    9734:	mov	r3, r9
    9738:	bl	31f0 <InflateData>
    973c:	ldr	r0, [sp]
    9740:	bl	49828 <__aeabi_f2lz>
    9744:	strd	r0, [r5]
    9748:	subs	r4, r4, #1
    974c:	add	r5, r5, #8
    9750:	bne	9728 <ReadCompressedInt64Data+0x4ac>
    9754:	b	970c <ReadCompressedInt64Data+0x490>
    9758:	cmp	sl, #1
    975c:	blt	970c <ReadCompressedInt64Data+0x490>
    9760:	mov	r8, sp
    9764:	mov	r4, sl
    9768:	mov	r0, r7
    976c:	mov	r1, r6
    9770:	mov	r2, r8
    9774:	mov	r3, r9
    9778:	bl	31f0 <InflateData>
    977c:	vldr	d16, [sp]
    9780:	vmov	r0, r1, d16
    9784:	bl	49854 <__aeabi_d2lz>
    9788:	strd	r0, [r5]
    978c:	subs	r4, r4, #1
    9790:	add	r5, r5, #8
    9794:	bne	9768 <ReadCompressedInt64Data+0x4ec>
    9798:	b	970c <ReadCompressedInt64Data+0x490>
    979c:	cmp	sl, #1
    97a0:	blt	970c <ReadCompressedInt64Data+0x490>
    97a4:	mov	r8, sp
    97a8:	mov	r4, sl
    97ac:	mov	r0, r7
    97b0:	mov	r1, r6
    97b4:	mov	r2, r8
    97b8:	mov	r3, r9
    97bc:	bl	31f0 <InflateData>
    97c0:	ldm	sp, {r0, r1}
    97c4:	subs	r4, r4, #1
    97c8:	strd	r0, [r5]
    97cc:	add	r5, r5, #8
    97d0:	bne	97ac <ReadCompressedInt64Data+0x530>
    97d4:	b	970c <ReadCompressedInt64Data+0x490>
    97d8:	cmp	sl, #1
    97dc:	blt	970c <ReadCompressedInt64Data+0x490>
    97e0:	mov	r8, sp
    97e4:	mov	r4, sl
    97e8:	mov	r0, r7
    97ec:	mov	r1, r6
    97f0:	mov	r2, r8
    97f4:	mov	r3, r9
    97f8:	bl	31f0 <InflateData>
    97fc:	ldm	sp, {r0, r1}
    9800:	subs	r4, r4, #1
    9804:	strd	r0, [r5]
    9808:	add	r5, r5, #8
    980c:	bne	97e8 <ReadCompressedInt64Data+0x56c>
    9810:	b	970c <ReadCompressedInt64Data+0x490>

00009814 <ReadUInt64Data>:
    9814:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9818:	add	fp, sp, #28
    981c:	sub	sp, sp, #60	; 0x3c
    9820:	sub	sp, sp, #2048	; 0x800
    9824:	mov	r4, r0
    9828:	mov	r0, #0
    982c:	cmp	r4, #0
    9830:	beq	aecc <ReadUInt64Data+0x16b8>
    9834:	cmp	r1, #0
    9838:	mov	r8, r1
    983c:	ldrne	r1, [r4]
    9840:	cmpne	r1, #0
    9844:	beq	aecc <ReadUInt64Data+0x16b8>
    9848:	mov	r0, r2
    984c:	mov	r5, r3
    9850:	mov	r9, r2
    9854:	bl	193c <Mat_SizeOf@plt>
    9858:	mov	r7, r0
    985c:	sub	r0, r9, #1
    9860:	mov	sl, #0
    9864:	str	r4, [sp, #20]
    9868:	cmp	r0, #11
    986c:	str	r7, [sp, #16]
    9870:	bhi	ac9c <ReadUInt64Data+0x1488>
    9874:	add	r1, pc, #4
    9878:	ldr	r0, [r1, r0, lsl #2]
    987c:	add	pc, r1, r0
    9880:	.word	0x00000030
    9884:	.word	0x00000078
    9888:	.word	0x000000c0
    988c:	.word	0x0000011c
    9890:	.word	0x0000017c
    9894:	.word	0x000001d8
    9898:	.word	0x00000240
    989c:	.word	0x0000141c
    98a0:	.word	0x000002a0
    98a4:	.word	0x0000141c
    98a8:	.word	0x0000141c
    98ac:	.word	0x00000300
    98b0:	cmp	r5, #256	; 0x100
    98b4:	bgt	9be8 <ReadUInt64Data+0x3d4>
    98b8:	ldr	r3, [r4]
    98bc:	add	r4, sp, #56	; 0x38
    98c0:	mov	r1, r7
    98c4:	mov	r2, r5
    98c8:	mov	r0, r4
    98cc:	bl	18d0 <fread@plt>
    98d0:	cmp	r5, #1
    98d4:	blt	9ee0 <ReadUInt64Data+0x6cc>
    98d8:	ldrsb	r2, [r4], #1
    98dc:	subs	r5, r5, #1
    98e0:	asr	r1, r2, #31
    98e4:	str	r2, [r8]
    98e8:	str	r1, [r8, #4]
    98ec:	add	r8, r8, #8
    98f0:	bne	98d8 <ReadUInt64Data+0xc4>
    98f4:	b	9ee0 <ReadUInt64Data+0x6cc>
    98f8:	cmp	r5, #256	; 0x100
    98fc:	bgt	9cd4 <ReadUInt64Data+0x4c0>
    9900:	ldr	r3, [r4]
    9904:	add	r4, sp, #56	; 0x38
    9908:	mov	r1, r7
    990c:	mov	r2, r5
    9910:	mov	r0, r4
    9914:	bl	18d0 <fread@plt>
    9918:	cmp	r5, #1
    991c:	blt	9ee0 <ReadUInt64Data+0x6cc>
    9920:	mov	r1, #0
    9924:	ldrb	r2, [r4], #1
    9928:	subs	r5, r5, #1
    992c:	str	r2, [r8]
    9930:	str	r1, [r8, #4]
    9934:	add	r8, r8, #8
    9938:	bne	9924 <ReadUInt64Data+0x110>
    993c:	b	9ee0 <ReadUInt64Data+0x6cc>
    9940:	ldr	r0, [r4, #20]
    9944:	cmp	r0, #0
    9948:	beq	9dc4 <ReadUInt64Data+0x5b0>
    994c:	cmp	r5, #256	; 0x100
    9950:	bgt	9fc0 <ReadUInt64Data+0x7ac>
    9954:	ldr	r3, [r4]
    9958:	add	r4, sp, #56	; 0x38
    995c:	mov	r1, r7
    9960:	mov	r2, r5
    9964:	mov	r0, r4
    9968:	bl	18d0 <fread@plt>
    996c:	mov	r6, r0
    9970:	cmp	r5, #1
    9974:	blt	9f7c <ReadUInt64Data+0x768>
    9978:	mov	r0, r4
    997c:	bl	1c50 <Mat_int16Swap>
    9980:	asr	r1, r0, #31
    9984:	subs	r5, r5, #1
    9988:	add	r4, r4, #2
    998c:	strd	r0, [r8]
    9990:	add	r8, r8, #8
    9994:	bne	9978 <ReadUInt64Data+0x164>
    9998:	b	9f7c <ReadUInt64Data+0x768>
    999c:	ldr	r0, [r4, #20]
    99a0:	cmp	r0, #0
    99a4:	beq	9e0c <ReadUInt64Data+0x5f8>
    99a8:	cmp	r5, #256	; 0x100
    99ac:	bgt	a0ac <ReadUInt64Data+0x898>
    99b0:	ldr	r3, [r4]
    99b4:	add	r4, sp, #56	; 0x38
    99b8:	mov	r1, r7
    99bc:	mov	r2, r5
    99c0:	mov	r0, r4
    99c4:	bl	18d0 <fread@plt>
    99c8:	mov	r9, r0
    99cc:	cmp	r5, #1
    99d0:	blt	9ab8 <ReadUInt64Data+0x2a4>
    99d4:	mov	r7, #0
    99d8:	mov	r0, r4
    99dc:	bl	1c64 <Mat_uint16Swap>
    99e0:	mov	r6, r0
    99e4:	subs	r5, r5, #1
    99e8:	add	r4, r4, #2
    99ec:	strd	r6, [r8]
    99f0:	add	r8, r8, #8
    99f4:	bne	99d8 <ReadUInt64Data+0x1c4>
    99f8:	b	9ab4 <ReadUInt64Data+0x2a0>
    99fc:	ldr	r0, [r4, #20]
    9a00:	cmp	r0, #0
    9a04:	beq	9e54 <ReadUInt64Data+0x640>
    9a08:	cmp	r5, #256	; 0x100
    9a0c:	bgt	a1a0 <ReadUInt64Data+0x98c>
    9a10:	ldr	r3, [r4]
    9a14:	add	r4, sp, #56	; 0x38
    9a18:	mov	r1, r7
    9a1c:	mov	r2, r5
    9a20:	mov	r0, r4
    9a24:	bl	18d0 <fread@plt>
    9a28:	mov	r6, r0
    9a2c:	cmp	r5, #1
    9a30:	blt	9f7c <ReadUInt64Data+0x768>
    9a34:	mov	r0, r4
    9a38:	bl	1c28 <Mat_int32Swap>
    9a3c:	asr	r1, r0, #31
    9a40:	subs	r5, r5, #1
    9a44:	add	r4, r4, #4
    9a48:	strd	r0, [r8]
    9a4c:	add	r8, r8, #8
    9a50:	bne	9a34 <ReadUInt64Data+0x220>
    9a54:	b	9f7c <ReadUInt64Data+0x768>
    9a58:	ldr	r0, [r4, #20]
    9a5c:	cmp	r0, #0
    9a60:	beq	9e9c <ReadUInt64Data+0x688>
    9a64:	cmp	r5, #256	; 0x100
    9a68:	bgt	a28c <ReadUInt64Data+0xa78>
    9a6c:	ldr	r3, [r4]
    9a70:	add	r4, sp, #56	; 0x38
    9a74:	mov	r1, r7
    9a78:	mov	r2, r5
    9a7c:	mov	r0, r4
    9a80:	bl	18d0 <fread@plt>
    9a84:	mov	r9, r0
    9a88:	cmp	r5, #1
    9a8c:	blt	9ab8 <ReadUInt64Data+0x2a4>
    9a90:	mov	r7, #0
    9a94:	mov	r0, r4
    9a98:	bl	1c3c <Mat_uint32Swap>
    9a9c:	mov	r6, r0
    9aa0:	subs	r5, r5, #1
    9aa4:	add	r4, r4, #4
    9aa8:	strd	r6, [r8]
    9aac:	add	r8, r8, #8
    9ab0:	bne	9a94 <ReadUInt64Data+0x280>
    9ab4:	ldr	r7, [sp, #16]
    9ab8:	mov	r5, r9
    9abc:	b	aec8 <ReadUInt64Data+0x16b4>
    9ac0:	ldr	r0, [r4, #20]
    9ac4:	cmp	r0, #0
    9ac8:	beq	9ee8 <ReadUInt64Data+0x6d4>
    9acc:	cmp	r5, #256	; 0x100
    9ad0:	bgt	a380 <ReadUInt64Data+0xb6c>
    9ad4:	ldr	r3, [r4]
    9ad8:	add	r4, sp, #56	; 0x38
    9adc:	mov	r1, r7
    9ae0:	mov	r2, r5
    9ae4:	mov	r0, r4
    9ae8:	bl	18d0 <fread@plt>
    9aec:	mov	r6, r0
    9af0:	cmp	r5, #1
    9af4:	blt	9f7c <ReadUInt64Data+0x768>
    9af8:	mov	r0, r4
    9afc:	bl	1c7c <Mat_floatSwap>
    9b00:	vmov	r0, s0
    9b04:	bl	49880 <__aeabi_f2ulz>
    9b08:	strd	r0, [r8]
    9b0c:	subs	r5, r5, #1
    9b10:	add	r8, r8, #8
    9b14:	add	r4, r4, #4
    9b18:	bne	9af8 <ReadUInt64Data+0x2e4>
    9b1c:	b	9f7c <ReadUInt64Data+0x768>
    9b20:	ldr	r0, [r4, #20]
    9b24:	cmp	r0, #0
    9b28:	beq	9f30 <ReadUInt64Data+0x71c>
    9b2c:	cmp	r5, #256	; 0x100
    9b30:	bgt	a474 <ReadUInt64Data+0xc60>
    9b34:	ldr	r3, [r4]
    9b38:	add	r4, sp, #56	; 0x38
    9b3c:	mov	r1, r7
    9b40:	mov	r2, r5
    9b44:	mov	r0, r4
    9b48:	bl	18d0 <fread@plt>
    9b4c:	mov	r6, r0
    9b50:	cmp	r5, #1
    9b54:	blt	9f7c <ReadUInt64Data+0x768>
    9b58:	mov	r0, r4
    9b5c:	bl	1cc0 <Mat_doubleSwap>
    9b60:	vmov	r0, r1, d0
    9b64:	bl	498c0 <__aeabi_d2ulz>
    9b68:	strd	r0, [r8]
    9b6c:	subs	r5, r5, #1
    9b70:	add	r8, r8, #8
    9b74:	add	r4, r4, #8
    9b78:	bne	9b58 <ReadUInt64Data+0x344>
    9b7c:	b	9f7c <ReadUInt64Data+0x768>
    9b80:	ldr	r0, [r4, #20]
    9b84:	cmp	r0, #0
    9b88:	beq	9f84 <ReadUInt64Data+0x770>
    9b8c:	cmp	r5, #256	; 0x100
    9b90:	bgt	a568 <ReadUInt64Data+0xd54>
    9b94:	ldr	r3, [r4]
    9b98:	add	r4, sp, #56	; 0x38
    9b9c:	mov	r1, r7
    9ba0:	mov	r2, r5
    9ba4:	mov	r0, r4
    9ba8:	bl	18d0 <fread@plt>
    9bac:	mov	sl, r0
    9bb0:	cmp	r5, #1
    9bb4:	blt	9be0 <ReadUInt64Data+0x3cc>
    9bb8:	mov	r6, r5
    9bbc:	mov	r7, r8
    9bc0:	mov	r0, r4
    9bc4:	bl	1bbc <Mat_int64Swap>
    9bc8:	strd	r0, [r7]
    9bcc:	subs	r6, r6, #1
    9bd0:	add	r7, r7, #8
    9bd4:	add	r4, r4, #8
    9bd8:	bne	9bc0 <ReadUInt64Data+0x3ac>
    9bdc:	ldr	r7, [sp, #16]
    9be0:	ldr	r4, [sp, #20]
    9be4:	b	ac9c <ReadUInt64Data+0x1488>
    9be8:	sub	r0, r5, #256	; 0x100
    9bec:	str	r5, [sp, #4]
    9bf0:	add	r1, r8, #2048	; 0x800
    9bf4:	add	r4, sp, #56	; 0x38
    9bf8:	add	r9, sp, #48	; 0x30
    9bfc:	mov	r5, #0
    9c00:	str	r0, [sp, #12]
    9c04:	mov	r0, #0
    9c08:	mov	sl, r0
    9c0c:	ldr	r0, [sp, #20]
    9c10:	mov	r6, r1
    9c14:	mov	r1, r7
    9c18:	mov	r2, #256	; 0x100
    9c1c:	ldr	r3, [r0]
    9c20:	mov	r0, r4
    9c24:	bl	18d0 <fread@plt>
    9c28:	mov	r1, r8
    9c2c:	mov	r2, #0
    9c30:	add	r3, r4, r2
    9c34:	add	r2, r2, #2
    9c38:	ldrh	r3, [r3]
    9c3c:	cmp	r2, #256	; 0x100
    9c40:	strh	r3, [sp, #48]	; 0x30
    9c44:	vld1.16	{d16[0]}, [r9 :16]
    9c48:	vmovl.s8	q8, d16
    9c4c:	vmovl.s16	q8, d16
    9c50:	vmovl.s32	q8, d16
    9c54:	vst1.64	{d16-d17}, [r1]!
    9c58:	bne	9c30 <ReadUInt64Data+0x41c>
    9c5c:	ldr	r2, [sp, #12]
    9c60:	add	r5, r0, r5
    9c64:	add	r0, sl, #256	; 0x100
    9c68:	add	r8, r8, #2048	; 0x800
    9c6c:	add	r1, r6, #2048	; 0x800
    9c70:	cmp	r0, r2
    9c74:	blt	9c08 <ReadUInt64Data+0x3f4>
    9c78:	ldr	r2, [sp, #4]
    9c7c:	cmp	r0, r2
    9c80:	bge	aec8 <ReadUInt64Data+0x16b4>
    9c84:	mov	r1, r7
    9c88:	sub	r7, r2, r0
    9c8c:	ldr	r0, [sp, #20]
    9c90:	add	r4, sp, #56	; 0x38
    9c94:	mov	r2, r7
    9c98:	ldr	r3, [r0]
    9c9c:	mov	r0, r4
    9ca0:	bl	18d0 <fread@plt>
    9ca4:	add	r5, r0, r5
    9ca8:	cmp	r7, #1
    9cac:	blt	aec4 <ReadUInt64Data+0x16b0>
    9cb0:	ldr	r0, [sp, #12]
    9cb4:	sub	r0, r0, sl
    9cb8:	ldrsb	r2, [r4], #1
    9cbc:	subs	r0, r0, #1
    9cc0:	asr	r3, r2, #31
    9cc4:	strd	r2, [r6]
    9cc8:	add	r6, r6, #8
    9ccc:	bne	9cb8 <ReadUInt64Data+0x4a4>
    9cd0:	b	aec4 <ReadUInt64Data+0x16b0>
    9cd4:	sub	r0, r5, #256	; 0x100
    9cd8:	str	r5, [sp, #4]
    9cdc:	add	r1, r8, #2048	; 0x800
    9ce0:	add	r4, sp, #56	; 0x38
    9ce4:	add	r9, sp, #52	; 0x34
    9ce8:	mov	r5, #0
    9cec:	str	r0, [sp, #12]
    9cf0:	mov	r0, #0
    9cf4:	mov	sl, r0
    9cf8:	ldr	r0, [sp, #20]
    9cfc:	mov	r6, r1
    9d00:	mov	r1, r7
    9d04:	mov	r2, #256	; 0x100
    9d08:	ldr	r3, [r0]
    9d0c:	mov	r0, r4
    9d10:	bl	18d0 <fread@plt>
    9d14:	mov	r1, r8
    9d18:	mov	r2, #0
    9d1c:	add	r3, r4, r2
    9d20:	add	r2, r2, #2
    9d24:	ldrh	r3, [r3]
    9d28:	cmp	r2, #256	; 0x100
    9d2c:	strh	r3, [sp, #52]	; 0x34
    9d30:	vld1.16	{d16[0]}, [r9 :16]
    9d34:	vmovl.u8	q8, d16
    9d38:	vmovl.u16	q8, d16
    9d3c:	vmovl.u32	q8, d16
    9d40:	vst1.64	{d16-d17}, [r1]!
    9d44:	bne	9d1c <ReadUInt64Data+0x508>
    9d48:	ldr	r2, [sp, #12]
    9d4c:	add	r5, r0, r5
    9d50:	add	r0, sl, #256	; 0x100
    9d54:	add	r8, r8, #2048	; 0x800
    9d58:	add	r1, r6, #2048	; 0x800
    9d5c:	cmp	r0, r2
    9d60:	blt	9cf4 <ReadUInt64Data+0x4e0>
    9d64:	ldr	r2, [sp, #4]
    9d68:	cmp	r0, r2
    9d6c:	bge	aec8 <ReadUInt64Data+0x16b4>
    9d70:	mov	r1, r7
    9d74:	sub	r7, r2, r0
    9d78:	ldr	r0, [sp, #20]
    9d7c:	add	r4, sp, #56	; 0x38
    9d80:	mov	r2, r7
    9d84:	ldr	r3, [r0]
    9d88:	mov	r0, r4
    9d8c:	bl	18d0 <fread@plt>
    9d90:	add	r5, r0, r5
    9d94:	cmp	r7, #1
    9d98:	blt	aec4 <ReadUInt64Data+0x16b0>
    9d9c:	ldr	r0, [sp, #12]
    9da0:	mov	r1, #0
    9da4:	sub	r0, r0, sl
    9da8:	ldrb	r2, [r4], #1
    9dac:	subs	r0, r0, #1
    9db0:	str	r2, [r6]
    9db4:	str	r1, [r6, #4]
    9db8:	add	r6, r6, #8
    9dbc:	bne	9da8 <ReadUInt64Data+0x594>
    9dc0:	b	aec4 <ReadUInt64Data+0x16b0>
    9dc4:	cmp	r5, #256	; 0x100
    9dc8:	bgt	a660 <ReadUInt64Data+0xe4c>
    9dcc:	ldr	r3, [r4]
    9dd0:	add	r4, sp, #56	; 0x38
    9dd4:	mov	r1, r7
    9dd8:	mov	r2, r5
    9ddc:	mov	r0, r4
    9de0:	bl	18d0 <fread@plt>
    9de4:	cmp	r5, #1
    9de8:	blt	9ee0 <ReadUInt64Data+0x6cc>
    9dec:	ldrsh	r2, [r4], #2
    9df0:	subs	r5, r5, #1
    9df4:	asr	r1, r2, #31
    9df8:	str	r2, [r8]
    9dfc:	str	r1, [r8, #4]
    9e00:	add	r8, r8, #8
    9e04:	bne	9dec <ReadUInt64Data+0x5d8>
    9e08:	b	9ee0 <ReadUInt64Data+0x6cc>
    9e0c:	cmp	r5, #256	; 0x100
    9e10:	bgt	a744 <ReadUInt64Data+0xf30>
    9e14:	ldr	r3, [r4]
    9e18:	add	r4, sp, #56	; 0x38
    9e1c:	mov	r1, r7
    9e20:	mov	r2, r5
    9e24:	mov	r0, r4
    9e28:	bl	18d0 <fread@plt>
    9e2c:	cmp	r5, #1
    9e30:	blt	9ee0 <ReadUInt64Data+0x6cc>
    9e34:	mov	r1, #0
    9e38:	ldrh	r2, [r4], #2
    9e3c:	subs	r5, r5, #1
    9e40:	str	r2, [r8]
    9e44:	str	r1, [r8, #4]
    9e48:	add	r8, r8, #8
    9e4c:	bne	9e38 <ReadUInt64Data+0x624>
    9e50:	b	9ee0 <ReadUInt64Data+0x6cc>
    9e54:	cmp	r5, #256	; 0x100
    9e58:	bgt	a82c <ReadUInt64Data+0x1018>
    9e5c:	ldr	r3, [r4]
    9e60:	add	r4, sp, #56	; 0x38
    9e64:	mov	r1, r7
    9e68:	mov	r2, r5
    9e6c:	mov	r0, r4
    9e70:	bl	18d0 <fread@plt>
    9e74:	cmp	r5, #1
    9e78:	blt	9ee0 <ReadUInt64Data+0x6cc>
    9e7c:	ldr	r2, [r4], #4
    9e80:	subs	r5, r5, #1
    9e84:	asr	r1, r2, #31
    9e88:	str	r2, [r8]
    9e8c:	str	r1, [r8, #4]
    9e90:	add	r8, r8, #8
    9e94:	bne	9e7c <ReadUInt64Data+0x668>
    9e98:	b	9ee0 <ReadUInt64Data+0x6cc>
    9e9c:	cmp	r5, #256	; 0x100
    9ea0:	bgt	a918 <ReadUInt64Data+0x1104>
    9ea4:	ldr	r3, [r4]
    9ea8:	add	r4, sp, #56	; 0x38
    9eac:	mov	r1, r7
    9eb0:	mov	r2, r5
    9eb4:	mov	r0, r4
    9eb8:	bl	18d0 <fread@plt>
    9ebc:	cmp	r5, #1
    9ec0:	blt	9ee0 <ReadUInt64Data+0x6cc>
    9ec4:	mov	r1, #0
    9ec8:	ldr	r2, [r4], #4
    9ecc:	subs	r5, r5, #1
    9ed0:	str	r2, [r8]
    9ed4:	str	r1, [r8, #4]
    9ed8:	add	r8, r8, #8
    9edc:	bne	9ec8 <ReadUInt64Data+0x6b4>
    9ee0:	mov	r5, r0
    9ee4:	b	aec8 <ReadUInt64Data+0x16b4>
    9ee8:	cmp	r5, #256	; 0x100
    9eec:	bgt	aa08 <ReadUInt64Data+0x11f4>
    9ef0:	ldr	r3, [r4]
    9ef4:	add	r4, sp, #56	; 0x38
    9ef8:	mov	r1, r7
    9efc:	mov	r2, r5
    9f00:	mov	r0, r4
    9f04:	bl	18d0 <fread@plt>
    9f08:	mov	r6, r0
    9f0c:	cmp	r5, #1
    9f10:	blt	9f7c <ReadUInt64Data+0x768>
    9f14:	ldr	r0, [r4], #4
    9f18:	bl	49880 <__aeabi_f2ulz>
    9f1c:	strd	r0, [r8]
    9f20:	subs	r5, r5, #1
    9f24:	add	r8, r8, #8
    9f28:	bne	9f14 <ReadUInt64Data+0x700>
    9f2c:	b	9f7c <ReadUInt64Data+0x768>
    9f30:	cmp	r5, #256	; 0x100
    9f34:	bgt	aae8 <ReadUInt64Data+0x12d4>
    9f38:	ldr	r3, [r4]
    9f3c:	add	r4, sp, #56	; 0x38
    9f40:	mov	r1, r7
    9f44:	mov	r2, r5
    9f48:	mov	r0, r4
    9f4c:	bl	18d0 <fread@plt>
    9f50:	mov	r6, r0
    9f54:	cmp	r5, #1
    9f58:	blt	9f7c <ReadUInt64Data+0x768>
    9f5c:	vldr	d16, [r4]
    9f60:	vmov	r0, r1, d16
    9f64:	bl	498c0 <__aeabi_d2ulz>
    9f68:	strd	r0, [r8]
    9f6c:	subs	r5, r5, #1
    9f70:	add	r8, r8, #8
    9f74:	add	r4, r4, #8
    9f78:	bne	9f5c <ReadUInt64Data+0x748>
    9f7c:	mov	r5, r6
    9f80:	b	aec8 <ReadUInt64Data+0x16b4>
    9f84:	cmp	r5, #256	; 0x100
    9f88:	bgt	abd8 <ReadUInt64Data+0x13c4>
    9f8c:	ldr	r3, [r4]
    9f90:	add	r0, sp, #56	; 0x38
    9f94:	mov	r1, r7
    9f98:	mov	r2, r5
    9f9c:	bl	18d0 <fread@plt>
    9fa0:	mov	sl, r0
    9fa4:	cmp	r5, #1
    9fa8:	blt	ac9c <ReadUInt64Data+0x1488>
    9fac:	lsl	r2, r5, #3
    9fb0:	add	r1, sp, #56	; 0x38
    9fb4:	mov	r0, r8
    9fb8:	bl	1834 <memcpy@plt>
    9fbc:	b	ac9c <ReadUInt64Data+0x1488>
    9fc0:	sub	r0, r5, #256	; 0x100
    9fc4:	str	r5, [sp, #4]
    9fc8:	add	r1, r8, #2048	; 0x800
    9fcc:	mov	r5, #0
    9fd0:	str	r0, [sp, #12]
    9fd4:	mov	r0, #0
    9fd8:	ldr	r3, [r4]
    9fdc:	add	r4, sp, #56	; 0x38
    9fe0:	mov	sl, r0
    9fe4:	mov	r9, r1
    9fe8:	mov	r1, r7
    9fec:	mov	r2, #256	; 0x100
    9ff0:	mov	r0, r4
    9ff4:	bl	18d0 <fread@plt>
    9ff8:	mov	r6, r0
    9ffc:	mov	r7, #0
    a000:	mov	r0, r4
    a004:	bl	1c50 <Mat_int16Swap>
    a008:	mov	r1, r8
    a00c:	add	r4, r4, #2
    a010:	str	r0, [r1, r7]!
    a014:	add	r7, r7, #8
    a018:	asr	r0, r0, #31
    a01c:	cmp	r7, #2048	; 0x800
    a020:	str	r0, [r1, #4]
    a024:	bne	a000 <ReadUInt64Data+0x7ec>
    a028:	ldr	r2, [sp, #12]
    a02c:	ldr	r7, [sp, #16]
    a030:	ldr	r4, [sp, #20]
    a034:	add	r0, sl, #256	; 0x100
    a038:	add	r5, r6, r5
    a03c:	add	r8, r8, #2048	; 0x800
    a040:	add	r1, r9, #2048	; 0x800
    a044:	cmp	r0, r2
    a048:	blt	9fd8 <ReadUInt64Data+0x7c4>
    a04c:	ldr	r1, [sp, #4]
    a050:	cmp	r0, r1
    a054:	bge	aec8 <ReadUInt64Data+0x16b4>
    a058:	ldr	r3, [r4]
    a05c:	sub	r6, r1, r0
    a060:	add	r4, sp, #56	; 0x38
    a064:	mov	r1, r7
    a068:	mov	r0, r4
    a06c:	mov	r2, r6
    a070:	bl	18d0 <fread@plt>
    a074:	add	r5, r0, r5
    a078:	cmp	r6, #1
    a07c:	blt	aec8 <ReadUInt64Data+0x16b4>
    a080:	ldr	r0, [sp, #12]
    a084:	sub	r6, r0, sl
    a088:	mov	r0, r4
    a08c:	bl	1c50 <Mat_int16Swap>
    a090:	asr	r1, r0, #31
    a094:	subs	r6, r6, #1
    a098:	add	r4, r4, #2
    a09c:	strd	r0, [r9]
    a0a0:	add	r9, r9, #8
    a0a4:	bne	a088 <ReadUInt64Data+0x874>
    a0a8:	b	aec8 <ReadUInt64Data+0x16b4>
    a0ac:	sub	r1, r5, #256	; 0x100
    a0b0:	str	r5, [sp, #4]
    a0b4:	add	r0, r8, #2048	; 0x800
    a0b8:	mov	sl, #0
    a0bc:	mov	r5, #0
    a0c0:	str	r1, [sp, #8]
    a0c4:	mov	r1, #0
    a0c8:	ldr	r3, [r4]
    a0cc:	add	r4, sp, #56	; 0x38
    a0d0:	str	r1, [sp, #12]
    a0d4:	mov	r9, r0
    a0d8:	mov	r1, r7
    a0dc:	mov	r2, #256	; 0x100
    a0e0:	mov	r0, r4
    a0e4:	bl	18d0 <fread@plt>
    a0e8:	mov	r6, r0
    a0ec:	mov	r7, #0
    a0f0:	mov	r0, r4
    a0f4:	bl	1c64 <Mat_uint16Swap>
    a0f8:	mov	r1, r8
    a0fc:	add	r4, r4, #2
    a100:	str	r0, [r1, r7]!
    a104:	add	r7, r7, #8
    a108:	cmp	r7, #2048	; 0x800
    a10c:	str	sl, [r1, #4]
    a110:	bne	a0f0 <ReadUInt64Data+0x8dc>
    a114:	ldr	r1, [sp, #12]
    a118:	ldr	r2, [sp, #8]
    a11c:	ldr	r7, [sp, #16]
    a120:	ldr	r4, [sp, #20]
    a124:	add	r5, r6, r5
    a128:	add	r8, r8, #2048	; 0x800
    a12c:	add	r0, r9, #2048	; 0x800
    a130:	add	r1, r1, #256	; 0x100
    a134:	cmp	r1, r2
    a138:	blt	a0c8 <ReadUInt64Data+0x8b4>
    a13c:	ldr	r0, [sp, #4]
    a140:	cmp	r1, r0
    a144:	bge	aec8 <ReadUInt64Data+0x16b4>
    a148:	ldr	r3, [r4]
    a14c:	sub	r6, r0, r1
    a150:	add	r4, sp, #56	; 0x38
    a154:	mov	r1, r7
    a158:	mov	r0, r4
    a15c:	mov	r2, r6
    a160:	bl	18d0 <fread@plt>
    a164:	add	r5, r0, r5
    a168:	cmp	r6, #1
    a16c:	blt	aec8 <ReadUInt64Data+0x16b4>
    a170:	ldr	r0, [sp, #8]
    a174:	ldr	r1, [sp, #12]
    a178:	mov	r7, #0
    a17c:	sub	r6, r0, r1
    a180:	mov	r0, r4
    a184:	bl	1c64 <Mat_uint16Swap>
    a188:	stm	r9, {r0, r7}
    a18c:	add	r9, r9, #8
    a190:	subs	r6, r6, #1
    a194:	add	r4, r4, #2
    a198:	bne	a180 <ReadUInt64Data+0x96c>
    a19c:	b	aec4 <ReadUInt64Data+0x16b0>
    a1a0:	sub	r0, r5, #256	; 0x100
    a1a4:	str	r5, [sp, #4]
    a1a8:	add	r1, r8, #2048	; 0x800
    a1ac:	mov	r5, #0
    a1b0:	str	r0, [sp, #12]
    a1b4:	mov	r0, #0
    a1b8:	ldr	r3, [r4]
    a1bc:	add	r4, sp, #56	; 0x38
    a1c0:	mov	sl, r0
    a1c4:	mov	r9, r1
    a1c8:	mov	r1, r7
    a1cc:	mov	r2, #256	; 0x100
    a1d0:	mov	r0, r4
    a1d4:	bl	18d0 <fread@plt>
    a1d8:	mov	r6, r0
    a1dc:	mov	r7, #0
    a1e0:	mov	r0, r4
    a1e4:	bl	1c28 <Mat_int32Swap>
    a1e8:	mov	r1, r8
    a1ec:	add	r4, r4, #4
    a1f0:	str	r0, [r1, r7]!
    a1f4:	add	r7, r7, #8
    a1f8:	asr	r0, r0, #31
    a1fc:	cmp	r7, #2048	; 0x800
    a200:	str	r0, [r1, #4]
    a204:	bne	a1e0 <ReadUInt64Data+0x9cc>
    a208:	ldr	r2, [sp, #12]
    a20c:	ldr	r7, [sp, #16]
    a210:	ldr	r4, [sp, #20]
    a214:	add	r0, sl, #256	; 0x100
    a218:	add	r5, r6, r5
    a21c:	add	r8, r8, #2048	; 0x800
    a220:	add	r1, r9, #2048	; 0x800
    a224:	cmp	r0, r2
    a228:	blt	a1b8 <ReadUInt64Data+0x9a4>
    a22c:	ldr	r1, [sp, #4]
    a230:	cmp	r0, r1
    a234:	bge	aec8 <ReadUInt64Data+0x16b4>
    a238:	ldr	r3, [r4]
    a23c:	sub	r6, r1, r0
    a240:	add	r4, sp, #56	; 0x38
    a244:	mov	r1, r7
    a248:	mov	r0, r4
    a24c:	mov	r2, r6
    a250:	bl	18d0 <fread@plt>
    a254:	add	r5, r0, r5
    a258:	cmp	r6, #1
    a25c:	blt	aec8 <ReadUInt64Data+0x16b4>
    a260:	ldr	r0, [sp, #12]
    a264:	sub	r6, r0, sl
    a268:	mov	r0, r4
    a26c:	bl	1c28 <Mat_int32Swap>
    a270:	asr	r1, r0, #31
    a274:	subs	r6, r6, #1
    a278:	add	r4, r4, #4
    a27c:	strd	r0, [r9]
    a280:	add	r9, r9, #8
    a284:	bne	a268 <ReadUInt64Data+0xa54>
    a288:	b	aec8 <ReadUInt64Data+0x16b4>
    a28c:	sub	r1, r5, #256	; 0x100
    a290:	str	r5, [sp, #4]
    a294:	add	r0, r8, #2048	; 0x800
    a298:	mov	sl, #0
    a29c:	mov	r5, #0
    a2a0:	str	r1, [sp, #8]
    a2a4:	mov	r1, #0
    a2a8:	ldr	r3, [r4]
    a2ac:	add	r4, sp, #56	; 0x38
    a2b0:	str	r1, [sp, #12]
    a2b4:	mov	r9, r0
    a2b8:	mov	r1, r7
    a2bc:	mov	r2, #256	; 0x100
    a2c0:	mov	r0, r4
    a2c4:	bl	18d0 <fread@plt>
    a2c8:	mov	r6, r0
    a2cc:	mov	r7, #0
    a2d0:	mov	r0, r4
    a2d4:	bl	1c3c <Mat_uint32Swap>
    a2d8:	mov	r1, r8
    a2dc:	add	r4, r4, #4
    a2e0:	str	r0, [r1, r7]!
    a2e4:	add	r7, r7, #8
    a2e8:	cmp	r7, #2048	; 0x800
    a2ec:	str	sl, [r1, #4]
    a2f0:	bne	a2d0 <ReadUInt64Data+0xabc>
    a2f4:	ldr	r1, [sp, #12]
    a2f8:	ldr	r2, [sp, #8]
    a2fc:	ldr	r7, [sp, #16]
    a300:	ldr	r4, [sp, #20]
    a304:	add	r5, r6, r5
    a308:	add	r8, r8, #2048	; 0x800
    a30c:	add	r0, r9, #2048	; 0x800
    a310:	add	r1, r1, #256	; 0x100
    a314:	cmp	r1, r2
    a318:	blt	a2a8 <ReadUInt64Data+0xa94>
    a31c:	ldr	r0, [sp, #4]
    a320:	cmp	r1, r0
    a324:	bge	aec8 <ReadUInt64Data+0x16b4>
    a328:	ldr	r3, [r4]
    a32c:	sub	r6, r0, r1
    a330:	add	r4, sp, #56	; 0x38
    a334:	mov	r1, r7
    a338:	mov	r0, r4
    a33c:	mov	r2, r6
    a340:	bl	18d0 <fread@plt>
    a344:	add	r5, r0, r5
    a348:	cmp	r6, #1
    a34c:	blt	aec8 <ReadUInt64Data+0x16b4>
    a350:	ldr	r0, [sp, #8]
    a354:	ldr	r1, [sp, #12]
    a358:	mov	r7, #0
    a35c:	sub	r6, r0, r1
    a360:	mov	r0, r4
    a364:	bl	1c3c <Mat_uint32Swap>
    a368:	stm	r9, {r0, r7}
    a36c:	add	r9, r9, #8
    a370:	subs	r6, r6, #1
    a374:	add	r4, r4, #4
    a378:	bne	a360 <ReadUInt64Data+0xb4c>
    a37c:	b	aec4 <ReadUInt64Data+0x16b0>
    a380:	sub	r0, r5, #256	; 0x100
    a384:	str	r5, [sp, #4]
    a388:	add	r1, r8, #2048	; 0x800
    a38c:	mov	r5, #0
    a390:	str	r0, [sp, #12]
    a394:	mov	r0, #0
    a398:	ldr	r3, [r4]
    a39c:	add	r6, sp, #56	; 0x38
    a3a0:	mov	sl, r0
    a3a4:	mov	r9, r1
    a3a8:	mov	r1, r7
    a3ac:	mov	r2, #256	; 0x100
    a3b0:	mov	r0, r6
    a3b4:	bl	18d0 <fread@plt>
    a3b8:	mov	r4, r0
    a3bc:	mov	r7, #0
    a3c0:	mov	r0, r6
    a3c4:	bl	1c7c <Mat_floatSwap>
    a3c8:	vmov	r0, s0
    a3cc:	bl	49880 <__aeabi_f2ulz>
    a3d0:	mov	r2, r8
    a3d4:	add	r6, r6, #4
    a3d8:	str	r0, [r2, r7]!
    a3dc:	add	r7, r7, #8
    a3e0:	cmp	r7, #2048	; 0x800
    a3e4:	str	r1, [r2, #4]
    a3e8:	bne	a3c0 <ReadUInt64Data+0xbac>
    a3ec:	ldr	r2, [sp, #12]
    a3f0:	add	r5, r4, r5
    a3f4:	ldr	r7, [sp, #16]
    a3f8:	ldr	r4, [sp, #20]
    a3fc:	add	r0, sl, #256	; 0x100
    a400:	add	r8, r8, #2048	; 0x800
    a404:	add	r1, r9, #2048	; 0x800
    a408:	cmp	r0, r2
    a40c:	blt	a398 <ReadUInt64Data+0xb84>
    a410:	ldr	r1, [sp, #4]
    a414:	cmp	r0, r1
    a418:	bge	aec8 <ReadUInt64Data+0x16b4>
    a41c:	ldr	r3, [r4]
    a420:	sub	r6, r1, r0
    a424:	add	r4, sp, #56	; 0x38
    a428:	mov	r1, r7
    a42c:	mov	r0, r4
    a430:	mov	r2, r6
    a434:	bl	18d0 <fread@plt>
    a438:	add	r5, r0, r5
    a43c:	cmp	r6, #1
    a440:	blt	aec8 <ReadUInt64Data+0x16b4>
    a444:	ldr	r0, [sp, #12]
    a448:	sub	r6, r0, sl
    a44c:	mov	r0, r4
    a450:	bl	1c7c <Mat_floatSwap>
    a454:	vmov	r0, s0
    a458:	bl	49880 <__aeabi_f2ulz>
    a45c:	strd	r0, [r9]
    a460:	add	r9, r9, #8
    a464:	subs	r6, r6, #1
    a468:	add	r4, r4, #4
    a46c:	bne	a44c <ReadUInt64Data+0xc38>
    a470:	b	aec8 <ReadUInt64Data+0x16b4>
    a474:	sub	r0, r5, #256	; 0x100
    a478:	str	r5, [sp, #4]
    a47c:	add	r1, r8, #2048	; 0x800
    a480:	add	r4, sp, #56	; 0x38
    a484:	mov	r5, #0
    a488:	str	r0, [sp, #12]
    a48c:	mov	r0, #0
    a490:	mov	sl, r0
    a494:	ldr	r0, [sp, #20]
    a498:	mov	r9, r1
    a49c:	mov	r1, r7
    a4a0:	mov	r2, #256	; 0x100
    a4a4:	ldr	r3, [r0]
    a4a8:	mov	r0, r4
    a4ac:	bl	18d0 <fread@plt>
    a4b0:	mov	r6, r0
    a4b4:	mov	r7, #0
    a4b8:	add	r0, r4, r7
    a4bc:	bl	1cc0 <Mat_doubleSwap>
    a4c0:	vmov	r0, r1, d0
    a4c4:	bl	498c0 <__aeabi_d2ulz>
    a4c8:	mov	r2, r8
    a4cc:	str	r0, [r2, r7]!
    a4d0:	add	r7, r7, #8
    a4d4:	cmp	r7, #2048	; 0x800
    a4d8:	str	r1, [r2, #4]
    a4dc:	bne	a4b8 <ReadUInt64Data+0xca4>
    a4e0:	ldr	r2, [sp, #12]
    a4e4:	ldr	r7, [sp, #16]
    a4e8:	add	r0, sl, #256	; 0x100
    a4ec:	add	r5, r6, r5
    a4f0:	add	r8, r8, #2048	; 0x800
    a4f4:	add	r1, r9, #2048	; 0x800
    a4f8:	cmp	r0, r2
    a4fc:	blt	a490 <ReadUInt64Data+0xc7c>
    a500:	ldr	r1, [sp, #4]
    a504:	cmp	r0, r1
    a508:	bge	aec8 <ReadUInt64Data+0x16b4>
    a50c:	sub	r6, r1, r0
    a510:	ldr	r0, [sp, #20]
    a514:	add	r4, sp, #56	; 0x38
    a518:	mov	r1, r7
    a51c:	mov	r2, r6
    a520:	ldr	r3, [r0]
    a524:	mov	r0, r4
    a528:	bl	18d0 <fread@plt>
    a52c:	add	r5, r0, r5
    a530:	cmp	r6, #1
    a534:	blt	aec8 <ReadUInt64Data+0x16b4>
    a538:	ldr	r0, [sp, #12]
    a53c:	sub	r6, r0, sl
    a540:	mov	r0, r4
    a544:	bl	1cc0 <Mat_doubleSwap>
    a548:	vmov	r0, r1, d0
    a54c:	bl	498c0 <__aeabi_d2ulz>
    a550:	strd	r0, [r9]
    a554:	add	r9, r9, #8
    a558:	subs	r6, r6, #1
    a55c:	add	r4, r4, #8
    a560:	bne	a540 <ReadUInt64Data+0xd2c>
    a564:	b	aec8 <ReadUInt64Data+0x16b4>
    a568:	sub	r0, r5, #256	; 0x100
    a56c:	str	r5, [sp, #4]
    a570:	add	r1, r8, #2048	; 0x800
    a574:	add	r4, sp, #56	; 0x38
    a578:	mov	r7, r8
    a57c:	mov	r5, #0
    a580:	str	r9, [sp]
    a584:	str	r0, [sp, #8]
    a588:	mov	r0, #0
    a58c:	str	r0, [sp, #12]
    a590:	ldr	r0, [sp, #20]
    a594:	mov	r9, r1
    a598:	ldr	r1, [sp, #16]
    a59c:	mov	r2, #256	; 0x100
    a5a0:	ldr	r3, [r0]
    a5a4:	mov	r0, r4
    a5a8:	bl	18d0 <fread@plt>
    a5ac:	mov	r6, r0
    a5b0:	mov	sl, #0
    a5b4:	add	r0, r4, sl
    a5b8:	bl	1bbc <Mat_int64Swap>
    a5bc:	mov	r2, r7
    a5c0:	str	r0, [r2, sl]!
    a5c4:	add	sl, sl, #8
    a5c8:	cmp	sl, #2048	; 0x800
    a5cc:	str	r1, [r2, #4]
    a5d0:	bne	a5b4 <ReadUInt64Data+0xda0>
    a5d4:	ldr	r0, [sp, #12]
    a5d8:	ldr	r2, [sp, #8]
    a5dc:	add	r5, r6, r5
    a5e0:	add	r7, r7, #2048	; 0x800
    a5e4:	add	r1, r9, #2048	; 0x800
    a5e8:	add	r0, r0, #256	; 0x100
    a5ec:	cmp	r0, r2
    a5f0:	blt	a58c <ReadUInt64Data+0xd78>
    a5f4:	mov	sl, r5
    a5f8:	ldr	r5, [sp, #4]
    a5fc:	cmp	r0, r5
    a600:	bge	ac90 <ReadUInt64Data+0x147c>
    a604:	sub	r6, r5, r0
    a608:	ldr	r0, [sp, #20]
    a60c:	ldr	r7, [sp, #16]
    a610:	add	r4, sp, #56	; 0x38
    a614:	mov	r2, r6
    a618:	ldr	r3, [r0]
    a61c:	mov	r0, r4
    a620:	mov	r1, r7
    a624:	bl	18d0 <fread@plt>
    a628:	add	sl, r0, sl
    a62c:	cmp	r6, #1
    a630:	blt	ac88 <ReadUInt64Data+0x1474>
    a634:	ldr	r0, [sp, #8]
    a638:	ldr	r1, [sp, #12]
    a63c:	sub	r6, r0, r1
    a640:	mov	r0, r4
    a644:	bl	1bbc <Mat_int64Swap>
    a648:	strd	r0, [r9]
    a64c:	add	r9, r9, #8
    a650:	subs	r6, r6, #1
    a654:	add	r4, r4, #8
    a658:	bne	a640 <ReadUInt64Data+0xe2c>
    a65c:	b	ac88 <ReadUInt64Data+0x1474>
    a660:	sub	r0, r5, #256	; 0x100
    a664:	str	r5, [sp, #4]
    a668:	add	r1, r8, #2048	; 0x800
    a66c:	add	r4, sp, #56	; 0x38
    a670:	add	r9, sp, #40	; 0x28
    a674:	mov	r5, #0
    a678:	str	r0, [sp, #12]
    a67c:	mov	r0, #0
    a680:	mov	sl, r0
    a684:	ldr	r0, [sp, #20]
    a688:	mov	r6, r1
    a68c:	mov	r1, r7
    a690:	mov	r2, #256	; 0x100
    a694:	ldr	r3, [r0]
    a698:	mov	r0, r4
    a69c:	bl	18d0 <fread@plt>
    a6a0:	mov	r1, r8
    a6a4:	mov	r2, #0
    a6a8:	ldr	r3, [r4, r2]
    a6ac:	add	r2, r2, #4
    a6b0:	cmp	r2, #512	; 0x200
    a6b4:	str	r3, [sp, #40]	; 0x28
    a6b8:	vld1.32	{d16[0]}, [r9 :32]
    a6bc:	vmovl.s16	q8, d16
    a6c0:	vmovl.s32	q8, d16
    a6c4:	vst1.64	{d16-d17}, [r1]!
    a6c8:	bne	a6a8 <ReadUInt64Data+0xe94>
    a6cc:	ldr	r2, [sp, #12]
    a6d0:	add	r5, r0, r5
    a6d4:	add	r0, sl, #256	; 0x100
    a6d8:	add	r8, r8, #2048	; 0x800
    a6dc:	add	r1, r6, #2048	; 0x800
    a6e0:	cmp	r0, r2
    a6e4:	blt	a680 <ReadUInt64Data+0xe6c>
    a6e8:	ldr	r2, [sp, #4]
    a6ec:	cmp	r0, r2
    a6f0:	bge	aec8 <ReadUInt64Data+0x16b4>
    a6f4:	mov	r1, r7
    a6f8:	sub	r7, r2, r0
    a6fc:	ldr	r0, [sp, #20]
    a700:	add	r4, sp, #56	; 0x38
    a704:	mov	r2, r7
    a708:	ldr	r3, [r0]
    a70c:	mov	r0, r4
    a710:	bl	18d0 <fread@plt>
    a714:	add	r5, r0, r5
    a718:	cmp	r7, #1
    a71c:	blt	aec4 <ReadUInt64Data+0x16b0>
    a720:	ldr	r0, [sp, #12]
    a724:	sub	r0, r0, sl
    a728:	ldrsh	r2, [r4], #2
    a72c:	subs	r0, r0, #1
    a730:	asr	r3, r2, #31
    a734:	strd	r2, [r6]
    a738:	add	r6, r6, #8
    a73c:	bne	a728 <ReadUInt64Data+0xf14>
    a740:	b	aec4 <ReadUInt64Data+0x16b0>
    a744:	sub	r0, r5, #256	; 0x100
    a748:	str	r5, [sp, #4]
    a74c:	add	r1, r8, #2048	; 0x800
    a750:	add	r4, sp, #56	; 0x38
    a754:	add	r9, sp, #44	; 0x2c
    a758:	mov	r5, #0
    a75c:	str	r0, [sp, #12]
    a760:	mov	r0, #0
    a764:	mov	sl, r0
    a768:	ldr	r0, [sp, #20]
    a76c:	mov	r6, r1
    a770:	mov	r1, r7
    a774:	mov	r2, #256	; 0x100
    a778:	ldr	r3, [r0]
    a77c:	mov	r0, r4
    a780:	bl	18d0 <fread@plt>
    a784:	mov	r1, r8
    a788:	mov	r2, #0
    a78c:	ldr	r3, [r4, r2]
    a790:	add	r2, r2, #4
    a794:	cmp	r2, #512	; 0x200
    a798:	str	r3, [sp, #44]	; 0x2c
    a79c:	vld1.32	{d16[0]}, [r9 :32]
    a7a0:	vmovl.u16	q8, d16
    a7a4:	vmovl.u32	q8, d16
    a7a8:	vst1.64	{d16-d17}, [r1]!
    a7ac:	bne	a78c <ReadUInt64Data+0xf78>
    a7b0:	ldr	r2, [sp, #12]
    a7b4:	add	r5, r0, r5
    a7b8:	add	r0, sl, #256	; 0x100
    a7bc:	add	r8, r8, #2048	; 0x800
    a7c0:	add	r1, r6, #2048	; 0x800
    a7c4:	cmp	r0, r2
    a7c8:	blt	a764 <ReadUInt64Data+0xf50>
    a7cc:	ldr	r2, [sp, #4]
    a7d0:	cmp	r0, r2
    a7d4:	bge	aec8 <ReadUInt64Data+0x16b4>
    a7d8:	mov	r1, r7
    a7dc:	sub	r7, r2, r0
    a7e0:	ldr	r0, [sp, #20]
    a7e4:	add	r4, sp, #56	; 0x38
    a7e8:	mov	r2, r7
    a7ec:	ldr	r3, [r0]
    a7f0:	mov	r0, r4
    a7f4:	bl	18d0 <fread@plt>
    a7f8:	add	r5, r0, r5
    a7fc:	cmp	r7, #1
    a800:	blt	aec4 <ReadUInt64Data+0x16b0>
    a804:	ldr	r0, [sp, #12]
    a808:	mov	r1, #0
    a80c:	sub	r0, r0, sl
    a810:	ldrh	r2, [r4], #2
    a814:	subs	r0, r0, #1
    a818:	str	r2, [r6]
    a81c:	str	r1, [r6, #4]
    a820:	add	r6, r6, #8
    a824:	bne	a810 <ReadUInt64Data+0xffc>
    a828:	b	aec4 <ReadUInt64Data+0x16b0>
    a82c:	sub	r0, r5, #256	; 0x100
    a830:	str	r5, [sp, #4]
    a834:	add	r1, r8, #2048	; 0x800
    a838:	add	r4, sp, #56	; 0x38
    a83c:	add	r9, sp, #24
    a840:	mov	r5, #0
    a844:	str	r0, [sp, #12]
    a848:	mov	r0, #0
    a84c:	mov	sl, r0
    a850:	ldr	r0, [sp, #20]
    a854:	mov	r6, r1
    a858:	mov	r1, r7
    a85c:	mov	r2, #256	; 0x100
    a860:	ldr	r3, [r0]
    a864:	mov	r0, r4
    a868:	bl	18d0 <fread@plt>
    a86c:	mov	r1, r8
    a870:	mov	r2, #0
    a874:	ldr	r3, [r4, r2]
    a878:	str	r3, [sp, #24]
    a87c:	add	r3, r4, r2
    a880:	add	r2, r2, #8
    a884:	ldr	r3, [r3, #4]
    a888:	cmp	r2, #1024	; 0x400
    a88c:	str	r3, [sp, #28]
    a890:	vld1.32	{d16}, [r9 :64]
    a894:	vmovl.s32	q8, d16
    a898:	vst1.64	{d16-d17}, [r1]!
    a89c:	bne	a874 <ReadUInt64Data+0x1060>
    a8a0:	ldr	r2, [sp, #12]
    a8a4:	add	r5, r0, r5
    a8a8:	add	r0, sl, #256	; 0x100
    a8ac:	add	r8, r8, #2048	; 0x800
    a8b0:	add	r1, r6, #2048	; 0x800
    a8b4:	cmp	r0, r2
    a8b8:	blt	a84c <ReadUInt64Data+0x1038>
    a8bc:	ldr	r2, [sp, #4]
    a8c0:	cmp	r0, r2
    a8c4:	bge	aec8 <ReadUInt64Data+0x16b4>
    a8c8:	mov	r1, r7
    a8cc:	sub	r7, r2, r0
    a8d0:	ldr	r0, [sp, #20]
    a8d4:	add	r4, sp, #56	; 0x38
    a8d8:	mov	r2, r7
    a8dc:	ldr	r3, [r0]
    a8e0:	mov	r0, r4
    a8e4:	bl	18d0 <fread@plt>
    a8e8:	add	r5, r0, r5
    a8ec:	cmp	r7, #1
    a8f0:	blt	aec4 <ReadUInt64Data+0x16b0>
    a8f4:	ldr	r0, [sp, #12]
    a8f8:	sub	r0, r0, sl
    a8fc:	ldr	r2, [r4], #4
    a900:	subs	r0, r0, #1
    a904:	asr	r3, r2, #31
    a908:	strd	r2, [r6]
    a90c:	add	r6, r6, #8
    a910:	bne	a8fc <ReadUInt64Data+0x10e8>
    a914:	b	aec4 <ReadUInt64Data+0x16b0>
    a918:	sub	r0, r5, #256	; 0x100
    a91c:	str	r5, [sp, #4]
    a920:	add	r1, r8, #2048	; 0x800
    a924:	add	r4, sp, #56	; 0x38
    a928:	add	r9, sp, #32
    a92c:	mov	r5, #0
    a930:	str	r0, [sp, #12]
    a934:	mov	r0, #0
    a938:	mov	sl, r0
    a93c:	ldr	r0, [sp, #20]
    a940:	mov	r6, r1
    a944:	mov	r1, r7
    a948:	mov	r2, #256	; 0x100
    a94c:	ldr	r3, [r0]
    a950:	mov	r0, r4
    a954:	bl	18d0 <fread@plt>
    a958:	mov	r1, r8
    a95c:	mov	r2, #0
    a960:	ldr	r3, [r4, r2]
    a964:	str	r3, [sp, #32]
    a968:	add	r3, r4, r2
    a96c:	add	r2, r2, #8
    a970:	ldr	r3, [r3, #4]
    a974:	cmp	r2, #1024	; 0x400
    a978:	str	r3, [sp, #36]	; 0x24
    a97c:	vld1.32	{d16}, [r9 :64]
    a980:	vmovl.u32	q8, d16
    a984:	vst1.64	{d16-d17}, [r1]!
    a988:	bne	a960 <ReadUInt64Data+0x114c>
    a98c:	ldr	r2, [sp, #12]
    a990:	add	r5, r0, r5
    a994:	add	r0, sl, #256	; 0x100
    a998:	add	r8, r8, #2048	; 0x800
    a99c:	add	r1, r6, #2048	; 0x800
    a9a0:	cmp	r0, r2
    a9a4:	blt	a938 <ReadUInt64Data+0x1124>
    a9a8:	ldr	r2, [sp, #4]
    a9ac:	cmp	r0, r2
    a9b0:	bge	aec8 <ReadUInt64Data+0x16b4>
    a9b4:	mov	r1, r7
    a9b8:	sub	r7, r2, r0
    a9bc:	ldr	r0, [sp, #20]
    a9c0:	add	r4, sp, #56	; 0x38
    a9c4:	mov	r2, r7
    a9c8:	ldr	r3, [r0]
    a9cc:	mov	r0, r4
    a9d0:	bl	18d0 <fread@plt>
    a9d4:	add	r5, r0, r5
    a9d8:	cmp	r7, #1
    a9dc:	blt	aec4 <ReadUInt64Data+0x16b0>
    a9e0:	ldr	r0, [sp, #12]
    a9e4:	mov	r1, #0
    a9e8:	sub	r0, r0, sl
    a9ec:	ldr	r2, [r4], #4
    a9f0:	subs	r0, r0, #1
    a9f4:	str	r2, [r6]
    a9f8:	str	r1, [r6, #4]
    a9fc:	add	r6, r6, #8
    aa00:	bne	a9ec <ReadUInt64Data+0x11d8>
    aa04:	b	aec4 <ReadUInt64Data+0x16b0>
    aa08:	sub	r0, r5, #256	; 0x100
    aa0c:	str	r5, [sp, #4]
    aa10:	add	r1, r8, #2048	; 0x800
    aa14:	mov	r5, #0
    aa18:	str	r0, [sp, #12]
    aa1c:	mov	r0, #0
    aa20:	mov	sl, r0
    aa24:	ldr	r0, [sp, #20]
    aa28:	add	r9, sp, #56	; 0x38
    aa2c:	mov	r4, r1
    aa30:	mov	r1, r7
    aa34:	mov	r2, #256	; 0x100
    aa38:	ldr	r3, [r0]
    aa3c:	mov	r0, r9
    aa40:	bl	18d0 <fread@plt>
    aa44:	mov	r6, r0
    aa48:	mov	r7, #0
    aa4c:	ldr	r0, [r9], #4
    aa50:	bl	49880 <__aeabi_f2ulz>
    aa54:	mov	r2, r8
    aa58:	str	r0, [r2, r7]!
    aa5c:	add	r7, r7, #8
    aa60:	cmp	r7, #2048	; 0x800
    aa64:	str	r1, [r2, #4]
    aa68:	bne	aa4c <ReadUInt64Data+0x1238>
    aa6c:	ldr	r2, [sp, #12]
    aa70:	ldr	r7, [sp, #16]
    aa74:	add	r0, sl, #256	; 0x100
    aa78:	add	r5, r6, r5
    aa7c:	add	r8, r8, #2048	; 0x800
    aa80:	add	r1, r4, #2048	; 0x800
    aa84:	cmp	r0, r2
    aa88:	blt	aa20 <ReadUInt64Data+0x120c>
    aa8c:	ldr	r1, [sp, #4]
    aa90:	cmp	r0, r1
    aa94:	bge	aec8 <ReadUInt64Data+0x16b4>
    aa98:	sub	r6, r1, r0
    aa9c:	ldr	r0, [sp, #20]
    aaa0:	mov	r1, r7
    aaa4:	add	r7, sp, #56	; 0x38
    aaa8:	mov	r2, r6
    aaac:	ldr	r3, [r0]
    aab0:	mov	r0, r7
    aab4:	bl	18d0 <fread@plt>
    aab8:	add	r5, r0, r5
    aabc:	cmp	r6, #1
    aac0:	blt	aec4 <ReadUInt64Data+0x16b0>
    aac4:	ldr	r0, [sp, #12]
    aac8:	sub	r6, r0, sl
    aacc:	ldr	r0, [r7], #4
    aad0:	bl	49880 <__aeabi_f2ulz>
    aad4:	strd	r0, [r4]
    aad8:	add	r4, r4, #8
    aadc:	subs	r6, r6, #1
    aae0:	bne	aacc <ReadUInt64Data+0x12b8>
    aae4:	b	aec4 <ReadUInt64Data+0x16b0>
    aae8:	sub	r0, r5, #256	; 0x100
    aaec:	str	r5, [sp, #4]
    aaf0:	add	r1, r8, #2048	; 0x800
    aaf4:	add	r4, sp, #56	; 0x38
    aaf8:	mov	r5, #0
    aafc:	str	r0, [sp, #12]
    ab00:	mov	r0, #0
    ab04:	mov	sl, r0
    ab08:	ldr	r0, [sp, #20]
    ab0c:	mov	r9, r1
    ab10:	mov	r1, r7
    ab14:	mov	r2, #256	; 0x100
    ab18:	ldr	r3, [r0]
    ab1c:	mov	r0, r4
    ab20:	bl	18d0 <fread@plt>
    ab24:	mov	r6, r0
    ab28:	mov	r7, #0
    ab2c:	add	r0, r4, r7
    ab30:	vldr	d16, [r0]
    ab34:	vmov	r0, r1, d16
    ab38:	bl	498c0 <__aeabi_d2ulz>
    ab3c:	mov	r2, r8
    ab40:	str	r0, [r2, r7]!
    ab44:	add	r7, r7, #8
    ab48:	cmp	r7, #2048	; 0x800
    ab4c:	str	r1, [r2, #4]
    ab50:	bne	ab2c <ReadUInt64Data+0x1318>
    ab54:	ldr	r2, [sp, #12]
    ab58:	ldr	r7, [sp, #16]
    ab5c:	add	r0, sl, #256	; 0x100
    ab60:	add	r5, r6, r5
    ab64:	add	r8, r8, #2048	; 0x800
    ab68:	add	r1, r9, #2048	; 0x800
    ab6c:	cmp	r0, r2
    ab70:	blt	ab04 <ReadUInt64Data+0x12f0>
    ab74:	ldr	r1, [sp, #4]
    ab78:	cmp	r0, r1
    ab7c:	bge	aec8 <ReadUInt64Data+0x16b4>
    ab80:	sub	r6, r1, r0
    ab84:	ldr	r0, [sp, #20]
    ab88:	add	r4, sp, #56	; 0x38
    ab8c:	mov	r1, r7
    ab90:	mov	r2, r6
    ab94:	ldr	r3, [r0]
    ab98:	mov	r0, r4
    ab9c:	bl	18d0 <fread@plt>
    aba0:	add	r5, r0, r5
    aba4:	cmp	r6, #1
    aba8:	blt	aec8 <ReadUInt64Data+0x16b4>
    abac:	ldr	r0, [sp, #12]
    abb0:	sub	r6, r0, sl
    abb4:	vldr	d16, [r4]
    abb8:	vmov	r0, r1, d16
    abbc:	bl	498c0 <__aeabi_d2ulz>
    abc0:	strd	r0, [r9]
    abc4:	add	r9, r9, #8
    abc8:	subs	r6, r6, #1
    abcc:	add	r4, r4, #8
    abd0:	bne	abb4 <ReadUInt64Data+0x13a0>
    abd4:	b	aec8 <ReadUInt64Data+0x16b4>
    abd8:	sub	r0, r5, #256	; 0x100
    abdc:	lsl	r4, r5, #3
    abe0:	str	r5, [sp, #4]
    abe4:	mov	r6, #0
    abe8:	mov	r5, #0
    abec:	str	r9, [sp]
    abf0:	str	r0, [sp, #12]
    abf4:	ldr	r0, [sp, #20]
    abf8:	add	sl, sp, #56	; 0x38
    abfc:	mov	r1, r7
    ac00:	mov	r2, #256	; 0x100
    ac04:	ldr	r3, [r0]
    ac08:	mov	r0, sl
    ac0c:	bl	18d0 <fread@plt>
    ac10:	mov	r9, r0
    ac14:	add	r0, r8, r6, lsl #3
    ac18:	mov	r1, sl
    ac1c:	mov	r2, #2048	; 0x800
    ac20:	bl	1834 <memcpy@plt>
    ac24:	ldr	r0, [sp, #12]
    ac28:	add	r6, r6, #256	; 0x100
    ac2c:	add	r5, r9, r5
    ac30:	sub	r4, r4, #2048	; 0x800
    ac34:	cmp	r6, r0
    ac38:	blt	abf4 <ReadUInt64Data+0x13e0>
    ac3c:	mov	sl, r5
    ac40:	ldr	r5, [sp, #4]
    ac44:	cmp	r6, r5
    ac48:	bge	ac90 <ReadUInt64Data+0x147c>
    ac4c:	ldr	r0, [sp, #20]
    ac50:	ldr	r7, [sp, #16]
    ac54:	sub	r9, r5, r6
    ac58:	mov	r2, r9
    ac5c:	ldr	r3, [r0]
    ac60:	add	r0, sp, #56	; 0x38
    ac64:	mov	r1, r7
    ac68:	bl	18d0 <fread@plt>
    ac6c:	add	sl, r0, sl
    ac70:	cmp	r9, #1
    ac74:	blt	ac88 <ReadUInt64Data+0x1474>
    ac78:	add	r0, r8, r6, lsl #3
    ac7c:	add	r1, sp, #56	; 0x38
    ac80:	mov	r2, r4
    ac84:	bl	1834 <memcpy@plt>
    ac88:	ldr	r5, [sp, #4]
    ac8c:	b	ac94 <ReadUInt64Data+0x1480>
    ac90:	ldr	r7, [sp, #16]
    ac94:	ldr	r4, [sp, #20]
    ac98:	ldr	r9, [sp]
    ac9c:	cmp	r9, #13
    aca0:	bne	ad34 <ReadUInt64Data+0x1520>
    aca4:	ldr	r0, [r4, #20]
    aca8:	cmp	r0, #0
    acac:	beq	acfc <ReadUInt64Data+0x14e8>
    acb0:	cmp	r5, #256	; 0x100
    acb4:	bgt	ad3c <ReadUInt64Data+0x1528>
    acb8:	ldr	r3, [r4]
    acbc:	add	r4, sp, #56	; 0x38
    acc0:	mov	r1, r7
    acc4:	mov	r2, r5
    acc8:	mov	r0, r4
    accc:	bl	18d0 <fread@plt>
    acd0:	add	sl, r0, sl
    acd4:	cmp	r5, #1
    acd8:	blt	ad34 <ReadUInt64Data+0x1520>
    acdc:	mov	r0, r4
    ace0:	bl	1c0c <Mat_uint64Swap>
    ace4:	strd	r0, [r8]
    ace8:	subs	r5, r5, #1
    acec:	add	r8, r8, #8
    acf0:	add	r4, r4, #8
    acf4:	bne	acdc <ReadUInt64Data+0x14c8>
    acf8:	b	ad34 <ReadUInt64Data+0x1520>
    acfc:	cmp	r5, #256	; 0x100
    ad00:	bgt	ae20 <ReadUInt64Data+0x160c>
    ad04:	ldr	r3, [r4]
    ad08:	add	r0, sp, #56	; 0x38
    ad0c:	mov	r1, r7
    ad10:	mov	r2, r5
    ad14:	bl	18d0 <fread@plt>
    ad18:	add	sl, r0, sl
    ad1c:	cmp	r5, #1
    ad20:	blt	ad34 <ReadUInt64Data+0x1520>
    ad24:	lsl	r2, r5, #3
    ad28:	add	r1, sp, #56	; 0x38
    ad2c:	mov	r0, r8
    ad30:	bl	1834 <memcpy@plt>
    ad34:	mov	r5, sl
    ad38:	b	aec8 <ReadUInt64Data+0x16b4>
    ad3c:	sub	r0, r5, #256	; 0x100
    ad40:	str	r5, [sp, #4]
    ad44:	add	r1, r8, #2048	; 0x800
    ad48:	add	r4, sp, #56	; 0x38
    ad4c:	mov	r5, sl
    ad50:	str	r0, [sp, #12]
    ad54:	mov	r0, #0
    ad58:	mov	sl, r0
    ad5c:	ldr	r0, [sp, #20]
    ad60:	mov	r9, r1
    ad64:	mov	r1, r7
    ad68:	mov	r2, #256	; 0x100
    ad6c:	ldr	r3, [r0]
    ad70:	mov	r0, r4
    ad74:	bl	18d0 <fread@plt>
    ad78:	mov	r6, r0
    ad7c:	mov	r7, #0
    ad80:	add	r0, r4, r7
    ad84:	bl	1c0c <Mat_uint64Swap>
    ad88:	mov	r2, r8
    ad8c:	str	r0, [r2, r7]!
    ad90:	add	r7, r7, #8
    ad94:	cmp	r7, #2048	; 0x800
    ad98:	str	r1, [r2, #4]
    ad9c:	bne	ad80 <ReadUInt64Data+0x156c>
    ada0:	ldr	r2, [sp, #12]
    ada4:	ldr	r7, [sp, #16]
    ada8:	add	r0, sl, #256	; 0x100
    adac:	add	r5, r6, r5
    adb0:	add	r8, r8, #2048	; 0x800
    adb4:	add	r1, r9, #2048	; 0x800
    adb8:	cmp	r0, r2
    adbc:	blt	ad58 <ReadUInt64Data+0x1544>
    adc0:	ldr	r1, [sp, #4]
    adc4:	cmp	r0, r1
    adc8:	bge	aec8 <ReadUInt64Data+0x16b4>
    adcc:	sub	r6, r1, r0
    add0:	ldr	r0, [sp, #20]
    add4:	add	r4, sp, #56	; 0x38
    add8:	mov	r1, r7
    addc:	mov	r2, r6
    ade0:	ldr	r3, [r0]
    ade4:	mov	r0, r4
    ade8:	bl	18d0 <fread@plt>
    adec:	add	r5, r0, r5
    adf0:	cmp	r6, #1
    adf4:	blt	aec8 <ReadUInt64Data+0x16b4>
    adf8:	ldr	r0, [sp, #12]
    adfc:	sub	r6, r0, sl
    ae00:	mov	r0, r4
    ae04:	bl	1c0c <Mat_uint64Swap>
    ae08:	strd	r0, [r9]
    ae0c:	add	r9, r9, #8
    ae10:	subs	r6, r6, #1
    ae14:	add	r4, r4, #8
    ae18:	bne	ae00 <ReadUInt64Data+0x15ec>
    ae1c:	b	aec8 <ReadUInt64Data+0x16b4>
    ae20:	sub	r0, r5, #256	; 0x100
    ae24:	lsl	r4, r5, #3
    ae28:	str	r5, [sp, #4]
    ae2c:	mov	r6, #0
    ae30:	add	r9, sp, #56	; 0x38
    ae34:	mov	r5, sl
    ae38:	str	r0, [sp, #12]
    ae3c:	ldr	r0, [sp, #20]
    ae40:	mov	r1, r7
    ae44:	mov	r2, #256	; 0x100
    ae48:	ldr	r3, [r0]
    ae4c:	mov	r0, r9
    ae50:	bl	18d0 <fread@plt>
    ae54:	mov	sl, r0
    ae58:	add	r0, r8, r6, lsl #3
    ae5c:	mov	r1, r9
    ae60:	mov	r2, #2048	; 0x800
    ae64:	bl	1834 <memcpy@plt>
    ae68:	ldr	r0, [sp, #12]
    ae6c:	add	r6, r6, #256	; 0x100
    ae70:	add	r5, sl, r5
    ae74:	sub	r4, r4, #2048	; 0x800
    ae78:	cmp	r6, r0
    ae7c:	blt	ae3c <ReadUInt64Data+0x1628>
    ae80:	ldr	r0, [sp, #4]
    ae84:	cmp	r6, r0
    ae88:	bge	aec4 <ReadUInt64Data+0x16b0>
    ae8c:	sub	r7, r0, r6
    ae90:	ldr	r0, [sp, #20]
    ae94:	ldr	r1, [sp, #16]
    ae98:	mov	r2, r7
    ae9c:	ldr	r3, [r0]
    aea0:	add	r0, sp, #56	; 0x38
    aea4:	bl	18d0 <fread@plt>
    aea8:	add	r5, r0, r5
    aeac:	cmp	r7, #1
    aeb0:	blt	aec4 <ReadUInt64Data+0x16b0>
    aeb4:	add	r0, r8, r6, lsl #3
    aeb8:	add	r1, sp, #56	; 0x38
    aebc:	mov	r2, r4
    aec0:	bl	1834 <memcpy@plt>
    aec4:	ldr	r7, [sp, #16]
    aec8:	mul	r0, r5, r7
    aecc:	sub	sp, fp, #28
    aed0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000aed4 <ReadCompressedUInt64Data>:
    aed4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    aed8:	add	fp, sp, #28
    aedc:	sub	sp, sp, #12
    aee0:	mov	r7, r0
    aee4:	mov	r0, #0
    aee8:	cmp	r1, #0
    aeec:	beq	b368 <ReadCompressedUInt64Data+0x494>
    aef0:	cmp	r7, #0
    aef4:	movne	r5, r2
    aef8:	cmpne	r2, #0
    aefc:	beq	b368 <ReadCompressedUInt64Data+0x494>
    af00:	ldr	sl, [fp, #8]
    af04:	mov	r0, r3
    af08:	mov	r4, r3
    af0c:	mov	r6, r1
    af10:	bl	193c <Mat_SizeOf@plt>
    af14:	mov	r9, r0
    af18:	sub	r0, r4, #1
    af1c:	cmp	r0, #12
    af20:	bhi	b364 <ReadCompressedUInt64Data+0x490>
    af24:	add	r1, pc, #4
    af28:	ldr	r0, [r1, r0, lsl #2]
    af2c:	add	pc, r1, r0
    af30:	.word	0x00000034
    af34:	.word	0x00000074
    af38:	.word	0x000000b4
    af3c:	.word	0x00000104
    af40:	.word	0x00000154
    af44:	.word	0x000001a4
    af48:	.word	0x000001f4
    af4c:	.word	0x00000434
    af50:	.word	0x00000248
    af54:	.word	0x00000434
    af58:	.word	0x00000434
    af5c:	.word	0x0000029c
    af60:	.word	0x000002e8
    af64:	cmp	sl, #1
    af68:	blt	b364 <ReadCompressedUInt64Data+0x490>
    af6c:	mov	r8, sp
    af70:	mov	r4, sl
    af74:	mov	r0, r7
    af78:	mov	r1, r6
    af7c:	mov	r2, r8
    af80:	mov	r3, r9
    af84:	bl	31f0 <InflateData>
    af88:	ldrsb	r0, [sp]
    af8c:	subs	r4, r4, #1
    af90:	asr	r1, r0, #31
    af94:	strd	r0, [r5]
    af98:	add	r5, r5, #8
    af9c:	bne	af74 <ReadCompressedUInt64Data+0xa0>
    afa0:	b	b364 <ReadCompressedUInt64Data+0x490>
    afa4:	cmp	sl, #1
    afa8:	blt	b360 <ReadCompressedUInt64Data+0x48c>
    afac:	ldr	r4, [fp, #8]
    afb0:	mov	r8, sp
    afb4:	mov	sl, #0
    afb8:	mov	r0, r7
    afbc:	mov	r1, r6
    afc0:	mov	r2, r8
    afc4:	mov	r3, r9
    afc8:	bl	31f0 <InflateData>
    afcc:	ldrb	r0, [sp]
    afd0:	subs	r4, r4, #1
    afd4:	stm	r5, {r0, sl}
    afd8:	add	r5, r5, #8
    afdc:	bne	afb8 <ReadCompressedUInt64Data+0xe4>
    afe0:	b	b360 <ReadCompressedUInt64Data+0x48c>
    afe4:	ldr	r0, [r7, #20]
    afe8:	cmp	r0, #0
    afec:	beq	b264 <ReadCompressedUInt64Data+0x390>
    aff0:	cmp	sl, #1
    aff4:	blt	b364 <ReadCompressedUInt64Data+0x490>
    aff8:	mov	r8, sp
    affc:	mov	r4, sl
    b000:	mov	r0, r7
    b004:	mov	r1, r6
    b008:	mov	r2, r8
    b00c:	mov	r3, r9
    b010:	bl	31f0 <InflateData>
    b014:	mov	r0, r8
    b018:	bl	1c50 <Mat_int16Swap>
    b01c:	asr	r1, r0, #31
    b020:	subs	r4, r4, #1
    b024:	strd	r0, [r5]
    b028:	add	r5, r5, #8
    b02c:	bne	b000 <ReadCompressedUInt64Data+0x12c>
    b030:	b	b364 <ReadCompressedUInt64Data+0x490>
    b034:	ldr	r0, [r7, #20]
    b038:	cmp	r0, #0
    b03c:	beq	b2a4 <ReadCompressedUInt64Data+0x3d0>
    b040:	cmp	sl, #1
    b044:	blt	b360 <ReadCompressedUInt64Data+0x48c>
    b048:	ldr	r4, [fp, #8]
    b04c:	mov	r8, sp
    b050:	mov	sl, #0
    b054:	mov	r0, r7
    b058:	mov	r1, r6
    b05c:	mov	r2, r8
    b060:	mov	r3, r9
    b064:	bl	31f0 <InflateData>
    b068:	mov	r0, r8
    b06c:	bl	1c64 <Mat_uint16Swap>
    b070:	stm	r5, {r0, sl}
    b074:	subs	r4, r4, #1
    b078:	add	r5, r5, #8
    b07c:	bne	b054 <ReadCompressedUInt64Data+0x180>
    b080:	b	b360 <ReadCompressedUInt64Data+0x48c>
    b084:	ldr	r0, [r7, #20]
    b088:	cmp	r0, #0
    b08c:	beq	b2e4 <ReadCompressedUInt64Data+0x410>
    b090:	cmp	sl, #1
    b094:	blt	b364 <ReadCompressedUInt64Data+0x490>
    b098:	mov	r8, sp
    b09c:	mov	r4, sl
    b0a0:	mov	r0, r7
    b0a4:	mov	r1, r6
    b0a8:	mov	r2, r8
    b0ac:	mov	r3, r9
    b0b0:	bl	31f0 <InflateData>
    b0b4:	mov	r0, r8
    b0b8:	bl	1c28 <Mat_int32Swap>
    b0bc:	asr	r1, r0, #31
    b0c0:	subs	r4, r4, #1
    b0c4:	strd	r0, [r5]
    b0c8:	add	r5, r5, #8
    b0cc:	bne	b0a0 <ReadCompressedUInt64Data+0x1cc>
    b0d0:	b	b364 <ReadCompressedUInt64Data+0x490>
    b0d4:	ldr	r0, [r7, #20]
    b0d8:	cmp	r0, #0
    b0dc:	beq	b324 <ReadCompressedUInt64Data+0x450>
    b0e0:	cmp	sl, #1
    b0e4:	blt	b360 <ReadCompressedUInt64Data+0x48c>
    b0e8:	ldr	sl, [fp, #8]
    b0ec:	mov	r8, sp
    b0f0:	mov	r4, #0
    b0f4:	mov	r0, r7
    b0f8:	mov	r1, r6
    b0fc:	mov	r2, r8
    b100:	mov	r3, r9
    b104:	bl	31f0 <InflateData>
    b108:	mov	r0, r8
    b10c:	bl	1c3c <Mat_uint32Swap>
    b110:	stm	r5, {r0, r4}
    b114:	subs	sl, sl, #1
    b118:	add	r5, r5, #8
    b11c:	bne	b0f4 <ReadCompressedUInt64Data+0x220>
    b120:	b	b360 <ReadCompressedUInt64Data+0x48c>
    b124:	ldr	r0, [r7, #20]
    b128:	cmp	r0, #0
    b12c:	beq	b370 <ReadCompressedUInt64Data+0x49c>
    b130:	cmp	sl, #1
    b134:	blt	b364 <ReadCompressedUInt64Data+0x490>
    b138:	mov	r8, sp
    b13c:	mov	r4, sl
    b140:	mov	r0, r7
    b144:	mov	r1, r6
    b148:	mov	r2, r8
    b14c:	mov	r3, r9
    b150:	bl	31f0 <InflateData>
    b154:	mov	r0, r8
    b158:	bl	1c7c <Mat_floatSwap>
    b15c:	vmov	r0, s0
    b160:	bl	49880 <__aeabi_f2ulz>
    b164:	strd	r0, [r5]
    b168:	subs	r4, r4, #1
    b16c:	add	r5, r5, #8
    b170:	bne	b140 <ReadCompressedUInt64Data+0x26c>
    b174:	b	b364 <ReadCompressedUInt64Data+0x490>
    b178:	ldr	r0, [r7, #20]
    b17c:	cmp	r0, #0
    b180:	beq	b3b0 <ReadCompressedUInt64Data+0x4dc>
    b184:	cmp	sl, #1
    b188:	blt	b364 <ReadCompressedUInt64Data+0x490>
    b18c:	mov	r8, sp
    b190:	mov	r4, sl
    b194:	mov	r0, r7
    b198:	mov	r1, r6
    b19c:	mov	r2, r8
    b1a0:	mov	r3, r9
    b1a4:	bl	31f0 <InflateData>
    b1a8:	mov	r0, r8
    b1ac:	bl	1cc0 <Mat_doubleSwap>
    b1b0:	vmov	r0, r1, d0
    b1b4:	bl	498c0 <__aeabi_d2ulz>
    b1b8:	strd	r0, [r5]
    b1bc:	subs	r4, r4, #1
    b1c0:	add	r5, r5, #8
    b1c4:	bne	b194 <ReadCompressedUInt64Data+0x2c0>
    b1c8:	b	b364 <ReadCompressedUInt64Data+0x490>
    b1cc:	ldr	r0, [r7, #20]
    b1d0:	cmp	r0, #0
    b1d4:	beq	b3f4 <ReadCompressedUInt64Data+0x520>
    b1d8:	cmp	sl, #1
    b1dc:	blt	b364 <ReadCompressedUInt64Data+0x490>
    b1e0:	mov	r8, sp
    b1e4:	mov	r4, sl
    b1e8:	mov	r0, r7
    b1ec:	mov	r1, r6
    b1f0:	mov	r2, r8
    b1f4:	mov	r3, r9
    b1f8:	bl	31f0 <InflateData>
    b1fc:	mov	r0, r8
    b200:	bl	1bbc <Mat_int64Swap>
    b204:	strd	r0, [r5]
    b208:	subs	r4, r4, #1
    b20c:	add	r5, r5, #8
    b210:	bne	b1e8 <ReadCompressedUInt64Data+0x314>
    b214:	b	b364 <ReadCompressedUInt64Data+0x490>
    b218:	ldr	r0, [r7, #20]
    b21c:	cmp	r0, #0
    b220:	beq	b430 <ReadCompressedUInt64Data+0x55c>
    b224:	cmp	sl, #1
    b228:	blt	b364 <ReadCompressedUInt64Data+0x490>
    b22c:	mov	r8, sp
    b230:	mov	r4, sl
    b234:	mov	r0, r7
    b238:	mov	r1, r6
    b23c:	mov	r2, r8
    b240:	mov	r3, r9
    b244:	bl	31f0 <InflateData>
    b248:	mov	r0, r8
    b24c:	bl	1c0c <Mat_uint64Swap>
    b250:	strd	r0, [r5]
    b254:	subs	r4, r4, #1
    b258:	add	r5, r5, #8
    b25c:	bne	b234 <ReadCompressedUInt64Data+0x360>
    b260:	b	b364 <ReadCompressedUInt64Data+0x490>
    b264:	cmp	sl, #1
    b268:	blt	b364 <ReadCompressedUInt64Data+0x490>
    b26c:	mov	r8, sp
    b270:	mov	r4, sl
    b274:	mov	r0, r7
    b278:	mov	r1, r6
    b27c:	mov	r2, r8
    b280:	mov	r3, r9
    b284:	bl	31f0 <InflateData>
    b288:	ldrsh	r0, [sp]
    b28c:	subs	r4, r4, #1
    b290:	asr	r1, r0, #31
    b294:	strd	r0, [r5]
    b298:	add	r5, r5, #8
    b29c:	bne	b274 <ReadCompressedUInt64Data+0x3a0>
    b2a0:	b	b364 <ReadCompressedUInt64Data+0x490>
    b2a4:	cmp	sl, #1
    b2a8:	blt	b360 <ReadCompressedUInt64Data+0x48c>
    b2ac:	ldr	r4, [fp, #8]
    b2b0:	mov	r8, sp
    b2b4:	mov	sl, #0
    b2b8:	mov	r0, r7
    b2bc:	mov	r1, r6
    b2c0:	mov	r2, r8
    b2c4:	mov	r3, r9
    b2c8:	bl	31f0 <InflateData>
    b2cc:	ldrh	r0, [sp]
    b2d0:	subs	r4, r4, #1
    b2d4:	stm	r5, {r0, sl}
    b2d8:	add	r5, r5, #8
    b2dc:	bne	b2b8 <ReadCompressedUInt64Data+0x3e4>
    b2e0:	b	b360 <ReadCompressedUInt64Data+0x48c>
    b2e4:	cmp	sl, #1
    b2e8:	blt	b364 <ReadCompressedUInt64Data+0x490>
    b2ec:	mov	r8, sp
    b2f0:	mov	r4, sl
    b2f4:	mov	r0, r7
    b2f8:	mov	r1, r6
    b2fc:	mov	r2, r8
    b300:	mov	r3, r9
    b304:	bl	31f0 <InflateData>
    b308:	ldr	r0, [sp]
    b30c:	subs	r4, r4, #1
    b310:	asr	r1, r0, #31
    b314:	strd	r0, [r5]
    b318:	add	r5, r5, #8
    b31c:	bne	b2f4 <ReadCompressedUInt64Data+0x420>
    b320:	b	b364 <ReadCompressedUInt64Data+0x490>
    b324:	cmp	sl, #1
    b328:	blt	b360 <ReadCompressedUInt64Data+0x48c>
    b32c:	ldr	r4, [fp, #8]
    b330:	mov	r8, sp
    b334:	mov	sl, #0
    b338:	mov	r0, r7
    b33c:	mov	r1, r6
    b340:	mov	r2, r8
    b344:	mov	r3, r9
    b348:	bl	31f0 <InflateData>
    b34c:	ldr	r0, [sp]
    b350:	subs	r4, r4, #1
    b354:	stm	r5, {r0, sl}
    b358:	add	r5, r5, #8
    b35c:	bne	b338 <ReadCompressedUInt64Data+0x464>
    b360:	ldr	sl, [fp, #8]
    b364:	mul	r0, r9, sl
    b368:	sub	sp, fp, #28
    b36c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b370:	cmp	sl, #1
    b374:	blt	b364 <ReadCompressedUInt64Data+0x490>
    b378:	mov	r8, sp
    b37c:	mov	r4, sl
    b380:	mov	r0, r7
    b384:	mov	r1, r6
    b388:	mov	r2, r8
    b38c:	mov	r3, r9
    b390:	bl	31f0 <InflateData>
    b394:	ldr	r0, [sp]
    b398:	bl	49880 <__aeabi_f2ulz>
    b39c:	strd	r0, [r5]
    b3a0:	subs	r4, r4, #1
    b3a4:	add	r5, r5, #8
    b3a8:	bne	b380 <ReadCompressedUInt64Data+0x4ac>
    b3ac:	b	b364 <ReadCompressedUInt64Data+0x490>
    b3b0:	cmp	sl, #1
    b3b4:	blt	b364 <ReadCompressedUInt64Data+0x490>
    b3b8:	mov	r8, sp
    b3bc:	mov	r4, sl
    b3c0:	mov	r0, r7
    b3c4:	mov	r1, r6
    b3c8:	mov	r2, r8
    b3cc:	mov	r3, r9
    b3d0:	bl	31f0 <InflateData>
    b3d4:	vldr	d16, [sp]
    b3d8:	vmov	r0, r1, d16
    b3dc:	bl	498c0 <__aeabi_d2ulz>
    b3e0:	strd	r0, [r5]
    b3e4:	subs	r4, r4, #1
    b3e8:	add	r5, r5, #8
    b3ec:	bne	b3c0 <ReadCompressedUInt64Data+0x4ec>
    b3f0:	b	b364 <ReadCompressedUInt64Data+0x490>
    b3f4:	cmp	sl, #1
    b3f8:	blt	b364 <ReadCompressedUInt64Data+0x490>
    b3fc:	mov	r8, sp
    b400:	mov	r4, sl
    b404:	mov	r0, r7
    b408:	mov	r1, r6
    b40c:	mov	r2, r8
    b410:	mov	r3, r9
    b414:	bl	31f0 <InflateData>
    b418:	ldm	sp, {r0, r1}
    b41c:	subs	r4, r4, #1
    b420:	strd	r0, [r5]
    b424:	add	r5, r5, #8
    b428:	bne	b404 <ReadCompressedUInt64Data+0x530>
    b42c:	b	b364 <ReadCompressedUInt64Data+0x490>
    b430:	cmp	sl, #1
    b434:	blt	b364 <ReadCompressedUInt64Data+0x490>
    b438:	mov	r8, sp
    b43c:	mov	r4, sl
    b440:	mov	r0, r7
    b444:	mov	r1, r6
    b448:	mov	r2, r8
    b44c:	mov	r3, r9
    b450:	bl	31f0 <InflateData>
    b454:	ldm	sp, {r0, r1}
    b458:	subs	r4, r4, #1
    b45c:	strd	r0, [r5]
    b460:	add	r5, r5, #8
    b464:	bne	b440 <ReadCompressedUInt64Data+0x56c>
    b468:	b	b364 <ReadCompressedUInt64Data+0x490>

0000b46c <ReadInt32Data>:
    b46c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b470:	add	fp, sp, #28
    b474:	sub	sp, sp, #60	; 0x3c
    b478:	sub	sp, sp, #2048	; 0x800
    b47c:	mov	sl, r0
    b480:	mov	r0, #0
    b484:	cmp	sl, #0
    b488:	beq	c95c <ReadInt32Data+0x14f0>
    b48c:	cmp	r1, #0
    b490:	mov	r9, r1
    b494:	ldrne	r1, [sl]
    b498:	cmpne	r1, #0
    b49c:	beq	c95c <ReadInt32Data+0x14f0>
    b4a0:	mov	r0, r2
    b4a4:	mov	r5, r3
    b4a8:	mov	r8, r2
    b4ac:	bl	193c <Mat_SizeOf@plt>
    b4b0:	mov	r7, r0
    b4b4:	sub	r0, r8, #1
    b4b8:	mov	r1, #0
    b4bc:	str	sl, [sp, #28]
    b4c0:	cmp	r0, #11
    b4c4:	str	r1, [sp, #16]
    b4c8:	str	r7, [sp, #24]
    b4cc:	bhi	c708 <ReadInt32Data+0x129c>
    b4d0:	add	r1, pc, #4
    b4d4:	ldr	r0, [r1, r0, lsl #2]
    b4d8:	add	pc, r1, r0
    b4dc:	.word	0x00000030
    b4e0:	.word	0x0000006c
    b4e4:	.word	0x000000a8
    b4e8:	.word	0x000000fc
    b4ec:	.word	0x00000150
    b4f0:	.word	0x000001a4
    b4f4:	.word	0x000001f8
    b4f8:	.word	0x0000122c
    b4fc:	.word	0x00000254
    b500:	.word	0x0000122c
    b504:	.word	0x0000122c
    b508:	.word	0x000002b4
    b50c:	cmp	r5, #256	; 0x100
    b510:	bgt	b7f0 <ReadInt32Data+0x384>
    b514:	ldr	r3, [sl]
    b518:	add	r4, sp, #56	; 0x38
    b51c:	mov	r1, r7
    b520:	mov	r2, r5
    b524:	mov	r0, r4
    b528:	bl	18d0 <fread@plt>
    b52c:	cmp	r5, #1
    b530:	blt	bb58 <ReadInt32Data+0x6ec>
    b534:	ldrsb	r1, [r4], #1
    b538:	subs	r5, r5, #1
    b53c:	str	r1, [r9], #4
    b540:	bne	b534 <ReadInt32Data+0xc8>
    b544:	b	bb58 <ReadInt32Data+0x6ec>
    b548:	cmp	r5, #256	; 0x100
    b54c:	bgt	b8cc <ReadInt32Data+0x460>
    b550:	ldr	r3, [sl]
    b554:	add	r4, sp, #56	; 0x38
    b558:	mov	r1, r7
    b55c:	mov	r2, r5
    b560:	mov	r0, r4
    b564:	bl	18d0 <fread@plt>
    b568:	cmp	r5, #1
    b56c:	blt	bb58 <ReadInt32Data+0x6ec>
    b570:	ldrb	r1, [r4], #1
    b574:	subs	r5, r5, #1
    b578:	str	r1, [r9], #4
    b57c:	bne	b570 <ReadInt32Data+0x104>
    b580:	b	bb58 <ReadInt32Data+0x6ec>
    b584:	ldr	r0, [sl, #20]
    b588:	cmp	r0, #0
    b58c:	beq	b9a8 <ReadInt32Data+0x53c>
    b590:	cmp	r5, #256	; 0x100
    b594:	bgt	bba8 <ReadInt32Data+0x73c>
    b598:	ldr	r3, [sl]
    b59c:	add	r4, sp, #56	; 0x38
    b5a0:	mov	r1, r7
    b5a4:	mov	r2, r5
    b5a8:	mov	r0, r4
    b5ac:	bl	18d0 <fread@plt>
    b5b0:	mov	r6, r0
    b5b4:	cmp	r5, #1
    b5b8:	blt	b788 <ReadInt32Data+0x31c>
    b5bc:	mov	r0, r4
    b5c0:	bl	1c50 <Mat_int16Swap>
    b5c4:	str	r0, [r9], #4
    b5c8:	subs	r5, r5, #1
    b5cc:	add	r4, r4, #2
    b5d0:	bne	b5bc <ReadInt32Data+0x150>
    b5d4:	b	b788 <ReadInt32Data+0x31c>
    b5d8:	ldr	r0, [sl, #20]
    b5dc:	cmp	r0, #0
    b5e0:	beq	b9e4 <ReadInt32Data+0x578>
    b5e4:	cmp	r5, #256	; 0x100
    b5e8:	bgt	bc80 <ReadInt32Data+0x814>
    b5ec:	ldr	r3, [sl]
    b5f0:	add	r4, sp, #56	; 0x38
    b5f4:	mov	r1, r7
    b5f8:	mov	r2, r5
    b5fc:	mov	r0, r4
    b600:	bl	18d0 <fread@plt>
    b604:	mov	r6, r0
    b608:	cmp	r5, #1
    b60c:	blt	b788 <ReadInt32Data+0x31c>
    b610:	mov	r0, r4
    b614:	bl	1c64 <Mat_uint16Swap>
    b618:	str	r0, [r9], #4
    b61c:	subs	r5, r5, #1
    b620:	add	r4, r4, #2
    b624:	bne	b610 <ReadInt32Data+0x1a4>
    b628:	b	b788 <ReadInt32Data+0x31c>
    b62c:	ldr	r0, [sl, #20]
    b630:	cmp	r0, #0
    b634:	beq	ba20 <ReadInt32Data+0x5b4>
    b638:	cmp	r5, #256	; 0x100
    b63c:	bgt	bd58 <ReadInt32Data+0x8ec>
    b640:	ldr	r3, [sl]
    b644:	add	r4, sp, #56	; 0x38
    b648:	mov	r1, r7
    b64c:	mov	r2, r5
    b650:	mov	r0, r4
    b654:	bl	18d0 <fread@plt>
    b658:	mov	r6, r0
    b65c:	cmp	r5, #1
    b660:	blt	b788 <ReadInt32Data+0x31c>
    b664:	mov	r0, r4
    b668:	bl	1c28 <Mat_int32Swap>
    b66c:	str	r0, [r9], #4
    b670:	subs	r5, r5, #1
    b674:	add	r4, r4, #4
    b678:	bne	b664 <ReadInt32Data+0x1f8>
    b67c:	b	b788 <ReadInt32Data+0x31c>
    b680:	ldr	r0, [sl, #20]
    b684:	cmp	r0, #0
    b688:	beq	ba8c <ReadInt32Data+0x620>
    b68c:	cmp	r5, #256	; 0x100
    b690:	bgt	be30 <ReadInt32Data+0x9c4>
    b694:	ldr	r3, [sl]
    b698:	add	r4, sp, #56	; 0x38
    b69c:	mov	r1, r7
    b6a0:	mov	r2, r5
    b6a4:	mov	r0, r4
    b6a8:	bl	18d0 <fread@plt>
    b6ac:	mov	r6, r0
    b6b0:	cmp	r5, #1
    b6b4:	blt	b788 <ReadInt32Data+0x31c>
    b6b8:	mov	r0, r4
    b6bc:	bl	1c3c <Mat_uint32Swap>
    b6c0:	str	r0, [r9], #4
    b6c4:	subs	r5, r5, #1
    b6c8:	add	r4, r4, #4
    b6cc:	bne	b6b8 <ReadInt32Data+0x24c>
    b6d0:	b	b788 <ReadInt32Data+0x31c>
    b6d4:	ldr	r0, [sl, #20]
    b6d8:	cmp	r0, #0
    b6dc:	beq	bacc <ReadInt32Data+0x660>
    b6e0:	cmp	r5, #256	; 0x100
    b6e4:	bgt	bf08 <ReadInt32Data+0xa9c>
    b6e8:	ldr	r3, [sl]
    b6ec:	add	r4, sp, #56	; 0x38
    b6f0:	mov	r1, r7
    b6f4:	mov	r2, r5
    b6f8:	mov	r0, r4
    b6fc:	bl	18d0 <fread@plt>
    b700:	mov	r6, r0
    b704:	cmp	r5, #1
    b708:	blt	b788 <ReadInt32Data+0x31c>
    b70c:	mov	r0, r4
    b710:	bl	1c7c <Mat_floatSwap>
    b714:	vcvt.s32.f32	s0, s0
    b718:	subs	r5, r5, #1
    b71c:	add	r4, r4, #4
    b720:	vmov	r0, s0
    b724:	str	r0, [r9], #4
    b728:	bne	b70c <ReadInt32Data+0x2a0>
    b72c:	b	b788 <ReadInt32Data+0x31c>
    b730:	ldr	r0, [sl, #20]
    b734:	cmp	r0, #0
    b738:	beq	bb14 <ReadInt32Data+0x6a8>
    b73c:	cmp	r5, #256	; 0x100
    b740:	bgt	bff0 <ReadInt32Data+0xb84>
    b744:	ldr	r3, [sl]
    b748:	add	r4, sp, #56	; 0x38
    b74c:	mov	r1, r7
    b750:	mov	r2, r5
    b754:	mov	r0, r4
    b758:	bl	18d0 <fread@plt>
    b75c:	mov	r6, r0
    b760:	cmp	r5, #1
    b764:	blt	b788 <ReadInt32Data+0x31c>
    b768:	mov	r0, r4
    b76c:	bl	1cc0 <Mat_doubleSwap>
    b770:	vcvt.s32.f64	s0, d0
    b774:	subs	r5, r5, #1
    b778:	add	r4, r4, #8
    b77c:	vmov	r0, s0
    b780:	str	r0, [r9], #4
    b784:	bne	b768 <ReadInt32Data+0x2fc>
    b788:	mov	r5, r6
    b78c:	b	c958 <ReadInt32Data+0x14ec>
    b790:	ldr	r0, [sl, #20]
    b794:	cmp	r0, #0
    b798:	beq	bb60 <ReadInt32Data+0x6f4>
    b79c:	cmp	r5, #256	; 0x100
    b7a0:	bgt	c0dc <ReadInt32Data+0xc70>
    b7a4:	ldr	r3, [sl]
    b7a8:	add	r4, sp, #56	; 0x38
    b7ac:	mov	r1, r7
    b7b0:	mov	r2, r5
    b7b4:	mov	r0, r4
    b7b8:	bl	18d0 <fread@plt>
    b7bc:	cmp	r5, #1
    b7c0:	str	r0, [sp, #16]
    b7c4:	blt	c708 <ReadInt32Data+0x129c>
    b7c8:	mov	r6, r5
    b7cc:	mov	r7, r9
    b7d0:	mov	r0, r4
    b7d4:	bl	1bbc <Mat_int64Swap>
    b7d8:	str	r0, [r7], #4
    b7dc:	subs	r6, r6, #1
    b7e0:	add	r4, r4, #8
    b7e4:	bne	b7d0 <ReadInt32Data+0x364>
    b7e8:	ldr	r7, [sp, #24]
    b7ec:	b	c708 <ReadInt32Data+0x129c>
    b7f0:	sub	r0, r5, #256	; 0x100
    b7f4:	str	r5, [sp, #8]
    b7f8:	add	r1, r9, #1024	; 0x400
    b7fc:	add	r4, sp, #56	; 0x38
    b800:	add	r8, sp, #48	; 0x30
    b804:	mov	r5, #0
    b808:	str	r0, [sp, #20]
    b80c:	mov	r0, #0
    b810:	mov	sl, r0
    b814:	ldr	r0, [sp, #28]
    b818:	mov	r6, r1
    b81c:	mov	r1, r7
    b820:	mov	r2, #256	; 0x100
    b824:	ldr	r3, [r0]
    b828:	mov	r0, r4
    b82c:	bl	18d0 <fread@plt>
    b830:	mov	r1, r9
    b834:	mov	r2, #0
    b838:	ldr	r3, [r4, r2]
    b83c:	add	r2, r2, #4
    b840:	cmp	r2, #256	; 0x100
    b844:	str	r3, [sp, #48]	; 0x30
    b848:	vld1.32	{d16[0]}, [r8 :32]
    b84c:	vmovl.s8	q8, d16
    b850:	vmovl.s16	q8, d16
    b854:	vst1.32	{d16-d17}, [r1]!
    b858:	bne	b838 <ReadInt32Data+0x3cc>
    b85c:	ldr	r2, [sp, #20]
    b860:	add	r5, r0, r5
    b864:	add	r0, sl, #256	; 0x100
    b868:	add	r9, r9, #1024	; 0x400
    b86c:	add	r1, r6, #1024	; 0x400
    b870:	cmp	r0, r2
    b874:	blt	b810 <ReadInt32Data+0x3a4>
    b878:	ldr	r2, [sp, #8]
    b87c:	cmp	r0, r2
    b880:	bge	c958 <ReadInt32Data+0x14ec>
    b884:	mov	r1, r7
    b888:	sub	r7, r2, r0
    b88c:	ldr	r0, [sp, #28]
    b890:	add	r4, sp, #56	; 0x38
    b894:	mov	r2, r7
    b898:	ldr	r3, [r0]
    b89c:	mov	r0, r4
    b8a0:	bl	18d0 <fread@plt>
    b8a4:	add	r5, r0, r5
    b8a8:	cmp	r7, #1
    b8ac:	blt	c954 <ReadInt32Data+0x14e8>
    b8b0:	ldr	r0, [sp, #20]
    b8b4:	sub	r0, r0, sl
    b8b8:	ldrsb	r1, [r4], #1
    b8bc:	subs	r0, r0, #1
    b8c0:	str	r1, [r6], #4
    b8c4:	bne	b8b8 <ReadInt32Data+0x44c>
    b8c8:	b	c954 <ReadInt32Data+0x14e8>
    b8cc:	sub	r0, r5, #256	; 0x100
    b8d0:	str	r5, [sp, #8]
    b8d4:	add	r1, r9, #1024	; 0x400
    b8d8:	add	r4, sp, #56	; 0x38
    b8dc:	add	r8, sp, #52	; 0x34
    b8e0:	mov	r5, #0
    b8e4:	str	r0, [sp, #20]
    b8e8:	mov	r0, #0
    b8ec:	mov	sl, r0
    b8f0:	ldr	r0, [sp, #28]
    b8f4:	mov	r6, r1
    b8f8:	mov	r1, r7
    b8fc:	mov	r2, #256	; 0x100
    b900:	ldr	r3, [r0]
    b904:	mov	r0, r4
    b908:	bl	18d0 <fread@plt>
    b90c:	mov	r1, r9
    b910:	mov	r2, #0
    b914:	ldr	r3, [r4, r2]
    b918:	add	r2, r2, #4
    b91c:	cmp	r2, #256	; 0x100
    b920:	str	r3, [sp, #52]	; 0x34
    b924:	vld1.32	{d16[0]}, [r8 :32]
    b928:	vmovl.u8	q8, d16
    b92c:	vmovl.u16	q8, d16
    b930:	vst1.32	{d16-d17}, [r1]!
    b934:	bne	b914 <ReadInt32Data+0x4a8>
    b938:	ldr	r2, [sp, #20]
    b93c:	add	r5, r0, r5
    b940:	add	r0, sl, #256	; 0x100
    b944:	add	r9, r9, #1024	; 0x400
    b948:	add	r1, r6, #1024	; 0x400
    b94c:	cmp	r0, r2
    b950:	blt	b8ec <ReadInt32Data+0x480>
    b954:	ldr	r2, [sp, #8]
    b958:	cmp	r0, r2
    b95c:	bge	c958 <ReadInt32Data+0x14ec>
    b960:	mov	r1, r7
    b964:	sub	r7, r2, r0
    b968:	ldr	r0, [sp, #28]
    b96c:	add	r4, sp, #56	; 0x38
    b970:	mov	r2, r7
    b974:	ldr	r3, [r0]
    b978:	mov	r0, r4
    b97c:	bl	18d0 <fread@plt>
    b980:	add	r5, r0, r5
    b984:	cmp	r7, #1
    b988:	blt	c954 <ReadInt32Data+0x14e8>
    b98c:	ldr	r0, [sp, #20]
    b990:	sub	r0, r0, sl
    b994:	ldrb	r1, [r4], #1
    b998:	subs	r0, r0, #1
    b99c:	str	r1, [r6], #4
    b9a0:	bne	b994 <ReadInt32Data+0x528>
    b9a4:	b	c954 <ReadInt32Data+0x14e8>
    b9a8:	cmp	r5, #256	; 0x100
    b9ac:	bgt	c1dc <ReadInt32Data+0xd70>
    b9b0:	ldr	r3, [sl]
    b9b4:	add	r4, sp, #56	; 0x38
    b9b8:	mov	r1, r7
    b9bc:	mov	r2, r5
    b9c0:	mov	r0, r4
    b9c4:	bl	18d0 <fread@plt>
    b9c8:	cmp	r5, #1
    b9cc:	blt	bb58 <ReadInt32Data+0x6ec>
    b9d0:	ldrsh	r1, [r4], #2
    b9d4:	subs	r5, r5, #1
    b9d8:	str	r1, [r9], #4
    b9dc:	bne	b9d0 <ReadInt32Data+0x564>
    b9e0:	b	bb58 <ReadInt32Data+0x6ec>
    b9e4:	cmp	r5, #256	; 0x100
    b9e8:	bgt	c2c0 <ReadInt32Data+0xe54>
    b9ec:	ldr	r3, [sl]
    b9f0:	add	r4, sp, #56	; 0x38
    b9f4:	mov	r1, r7
    b9f8:	mov	r2, r5
    b9fc:	mov	r0, r4
    ba00:	bl	18d0 <fread@plt>
    ba04:	cmp	r5, #1
    ba08:	blt	bb58 <ReadInt32Data+0x6ec>
    ba0c:	ldrh	r1, [r4], #2
    ba10:	subs	r5, r5, #1
    ba14:	str	r1, [r9], #4
    ba18:	bne	ba0c <ReadInt32Data+0x5a0>
    ba1c:	b	bb58 <ReadInt32Data+0x6ec>
    ba20:	cmp	r5, #256	; 0x100
    ba24:	ble	ba94 <ReadInt32Data+0x628>
    ba28:	sub	r0, r5, #256	; 0x100
    ba2c:	lsl	r4, r5, #2
    ba30:	str	r5, [sp, #8]
    ba34:	mov	r6, #0
    ba38:	add	r8, sp, #56	; 0x38
    ba3c:	mov	r5, #0
    ba40:	str	r0, [sp, #20]
    ba44:	ldr	r3, [sl]
    ba48:	mov	r0, r8
    ba4c:	mov	r1, r7
    ba50:	mov	r2, #256	; 0x100
    ba54:	bl	18d0 <fread@plt>
    ba58:	mov	sl, r0
    ba5c:	add	r0, r9, r6, lsl #2
    ba60:	mov	r1, r8
    ba64:	mov	r2, #1024	; 0x400
    ba68:	bl	1834 <memcpy@plt>
    ba6c:	ldr	r0, [sp, #20]
    ba70:	add	r5, sl, r5
    ba74:	ldr	sl, [sp, #28]
    ba78:	add	r6, r6, #256	; 0x100
    ba7c:	sub	r4, r4, #1024	; 0x400
    ba80:	cmp	r6, r0
    ba84:	blt	ba44 <ReadInt32Data+0x5d8>
    ba88:	b	c404 <ReadInt32Data+0xf98>
    ba8c:	cmp	r5, #256	; 0x100
    ba90:	bgt	c3a4 <ReadInt32Data+0xf38>
    ba94:	ldr	r3, [sl]
    ba98:	add	r0, sp, #56	; 0x38
    ba9c:	mov	r1, r7
    baa0:	mov	r2, r5
    baa4:	bl	18d0 <fread@plt>
    baa8:	mov	r4, r0
    baac:	cmp	r5, #1
    bab0:	blt	bac4 <ReadInt32Data+0x658>
    bab4:	lsl	r2, r5, #2
    bab8:	add	r1, sp, #56	; 0x38
    babc:	mov	r0, r9
    bac0:	bl	1834 <memcpy@plt>
    bac4:	mov	r5, r4
    bac8:	b	c958 <ReadInt32Data+0x14ec>
    bacc:	cmp	r5, #256	; 0x100
    bad0:	bgt	c44c <ReadInt32Data+0xfe0>
    bad4:	ldr	r3, [sl]
    bad8:	add	r4, sp, #56	; 0x38
    badc:	mov	r1, r7
    bae0:	mov	r2, r5
    bae4:	mov	r0, r4
    bae8:	bl	18d0 <fread@plt>
    baec:	cmp	r5, #1
    baf0:	blt	bb58 <ReadInt32Data+0x6ec>
    baf4:	vldr	s0, [r4]
    baf8:	subs	r5, r5, #1
    bafc:	add	r4, r4, #4
    bb00:	vcvt.s32.f32	s0, s0
    bb04:	vmov	r1, s0
    bb08:	str	r1, [r9], #4
    bb0c:	bne	baf4 <ReadInt32Data+0x688>
    bb10:	b	bb58 <ReadInt32Data+0x6ec>
    bb14:	cmp	r5, #256	; 0x100
    bb18:	bgt	c51c <ReadInt32Data+0x10b0>
    bb1c:	ldr	r3, [sl]
    bb20:	add	r4, sp, #56	; 0x38
    bb24:	mov	r1, r7
    bb28:	mov	r2, r5
    bb2c:	mov	r0, r4
    bb30:	bl	18d0 <fread@plt>
    bb34:	cmp	r5, #1
    bb38:	blt	bb58 <ReadInt32Data+0x6ec>
    bb3c:	vldr	d16, [r4]
    bb40:	subs	r5, r5, #1
    bb44:	add	r4, r4, #8
    bb48:	vcvt.s32.f64	s0, d16
    bb4c:	vmov	r1, s0
    bb50:	str	r1, [r9], #4
    bb54:	bne	bb3c <ReadInt32Data+0x6d0>
    bb58:	mov	r5, r0
    bb5c:	b	c958 <ReadInt32Data+0x14ec>
    bb60:	cmp	r5, #256	; 0x100
    bb64:	bgt	c60c <ReadInt32Data+0x11a0>
    bb68:	ldr	r3, [sl]
    bb6c:	add	r4, sp, #56	; 0x38
    bb70:	mov	r1, r7
    bb74:	mov	r2, r5
    bb78:	mov	r0, r4
    bb7c:	bl	18d0 <fread@plt>
    bb80:	cmp	r5, #1
    bb84:	str	r0, [sp, #16]
    bb88:	blt	c708 <ReadInt32Data+0x129c>
    bb8c:	mov	r0, r5
    bb90:	mov	r1, r9
    bb94:	ldr	r2, [r4], #8
    bb98:	subs	r0, r0, #1
    bb9c:	str	r2, [r1], #4
    bba0:	bne	bb94 <ReadInt32Data+0x728>
    bba4:	b	c708 <ReadInt32Data+0x129c>
    bba8:	sub	r0, r5, #256	; 0x100
    bbac:	str	r5, [sp, #8]
    bbb0:	add	r1, r9, #1024	; 0x400
    bbb4:	add	r4, sp, #56	; 0x38
    bbb8:	mov	r5, #0
    bbbc:	str	r0, [sp, #20]
    bbc0:	mov	r0, #0
    bbc4:	mov	sl, r0
    bbc8:	ldr	r0, [sp, #28]
    bbcc:	mov	r8, r1
    bbd0:	mov	r1, r7
    bbd4:	mov	r2, #256	; 0x100
    bbd8:	ldr	r3, [r0]
    bbdc:	mov	r0, r4
    bbe0:	bl	18d0 <fread@plt>
    bbe4:	mov	r6, r0
    bbe8:	mov	r7, #0
    bbec:	add	r0, r4, r7
    bbf0:	bl	1c50 <Mat_int16Swap>
    bbf4:	str	r0, [r9, r7, lsl #1]
    bbf8:	add	r7, r7, #2
    bbfc:	cmp	r7, #512	; 0x200
    bc00:	bne	bbec <ReadInt32Data+0x780>
    bc04:	ldr	r2, [sp, #20]
    bc08:	ldr	r7, [sp, #24]
    bc0c:	add	r0, sl, #256	; 0x100
    bc10:	add	r5, r6, r5
    bc14:	add	r9, r9, #1024	; 0x400
    bc18:	add	r1, r8, #1024	; 0x400
    bc1c:	cmp	r0, r2
    bc20:	blt	bbc4 <ReadInt32Data+0x758>
    bc24:	ldr	r1, [sp, #8]
    bc28:	cmp	r0, r1
    bc2c:	bge	c958 <ReadInt32Data+0x14ec>
    bc30:	sub	r6, r1, r0
    bc34:	ldr	r0, [sp, #28]
    bc38:	add	r4, sp, #56	; 0x38
    bc3c:	mov	r1, r7
    bc40:	mov	r2, r6
    bc44:	ldr	r3, [r0]
    bc48:	mov	r0, r4
    bc4c:	bl	18d0 <fread@plt>
    bc50:	add	r5, r0, r5
    bc54:	cmp	r6, #1
    bc58:	blt	c958 <ReadInt32Data+0x14ec>
    bc5c:	ldr	r0, [sp, #20]
    bc60:	sub	r6, r0, sl
    bc64:	mov	r0, r4
    bc68:	bl	1c50 <Mat_int16Swap>
    bc6c:	str	r0, [r8], #4
    bc70:	subs	r6, r6, #1
    bc74:	add	r4, r4, #2
    bc78:	bne	bc64 <ReadInt32Data+0x7f8>
    bc7c:	b	c958 <ReadInt32Data+0x14ec>
    bc80:	sub	r0, r5, #256	; 0x100
    bc84:	str	r5, [sp, #8]
    bc88:	add	r1, r9, #1024	; 0x400
    bc8c:	add	r4, sp, #56	; 0x38
    bc90:	mov	r5, #0
    bc94:	str	r0, [sp, #20]
    bc98:	mov	r0, #0
    bc9c:	mov	sl, r0
    bca0:	ldr	r0, [sp, #28]
    bca4:	mov	r8, r1
    bca8:	mov	r1, r7
    bcac:	mov	r2, #256	; 0x100
    bcb0:	ldr	r3, [r0]
    bcb4:	mov	r0, r4
    bcb8:	bl	18d0 <fread@plt>
    bcbc:	mov	r6, r0
    bcc0:	mov	r7, #0
    bcc4:	add	r0, r4, r7
    bcc8:	bl	1c64 <Mat_uint16Swap>
    bccc:	str	r0, [r9, r7, lsl #1]
    bcd0:	add	r7, r7, #2
    bcd4:	cmp	r7, #512	; 0x200
    bcd8:	bne	bcc4 <ReadInt32Data+0x858>
    bcdc:	ldr	r2, [sp, #20]
    bce0:	ldr	r7, [sp, #24]
    bce4:	add	r0, sl, #256	; 0x100
    bce8:	add	r5, r6, r5
    bcec:	add	r9, r9, #1024	; 0x400
    bcf0:	add	r1, r8, #1024	; 0x400
    bcf4:	cmp	r0, r2
    bcf8:	blt	bc9c <ReadInt32Data+0x830>
    bcfc:	ldr	r1, [sp, #8]
    bd00:	cmp	r0, r1
    bd04:	bge	c958 <ReadInt32Data+0x14ec>
    bd08:	sub	r6, r1, r0
    bd0c:	ldr	r0, [sp, #28]
    bd10:	add	r4, sp, #56	; 0x38
    bd14:	mov	r1, r7
    bd18:	mov	r2, r6
    bd1c:	ldr	r3, [r0]
    bd20:	mov	r0, r4
    bd24:	bl	18d0 <fread@plt>
    bd28:	add	r5, r0, r5
    bd2c:	cmp	r6, #1
    bd30:	blt	c958 <ReadInt32Data+0x14ec>
    bd34:	ldr	r0, [sp, #20]
    bd38:	sub	r6, r0, sl
    bd3c:	mov	r0, r4
    bd40:	bl	1c64 <Mat_uint16Swap>
    bd44:	str	r0, [r8], #4
    bd48:	subs	r6, r6, #1
    bd4c:	add	r4, r4, #2
    bd50:	bne	bd3c <ReadInt32Data+0x8d0>
    bd54:	b	c958 <ReadInt32Data+0x14ec>
    bd58:	sub	r0, r5, #256	; 0x100
    bd5c:	str	r5, [sp, #8]
    bd60:	add	r1, r9, #1024	; 0x400
    bd64:	add	r4, sp, #56	; 0x38
    bd68:	mov	r5, #0
    bd6c:	str	r0, [sp, #20]
    bd70:	mov	r0, #0
    bd74:	mov	sl, r0
    bd78:	ldr	r0, [sp, #28]
    bd7c:	mov	r8, r1
    bd80:	mov	r1, r7
    bd84:	mov	r2, #256	; 0x100
    bd88:	ldr	r3, [r0]
    bd8c:	mov	r0, r4
    bd90:	bl	18d0 <fread@plt>
    bd94:	mov	r6, r0
    bd98:	mov	r7, #0
    bd9c:	add	r0, r4, r7
    bda0:	bl	1c28 <Mat_int32Swap>
    bda4:	str	r0, [r9, r7]
    bda8:	add	r7, r7, #4
    bdac:	cmp	r7, #1024	; 0x400
    bdb0:	bne	bd9c <ReadInt32Data+0x930>
    bdb4:	ldr	r2, [sp, #20]
    bdb8:	ldr	r7, [sp, #24]
    bdbc:	add	r0, sl, #256	; 0x100
    bdc0:	add	r5, r6, r5
    bdc4:	add	r9, r9, #1024	; 0x400
    bdc8:	add	r1, r8, #1024	; 0x400
    bdcc:	cmp	r0, r2
    bdd0:	blt	bd74 <ReadInt32Data+0x908>
    bdd4:	ldr	r1, [sp, #8]
    bdd8:	cmp	r0, r1
    bddc:	bge	c958 <ReadInt32Data+0x14ec>
    bde0:	sub	r6, r1, r0
    bde4:	ldr	r0, [sp, #28]
    bde8:	add	r4, sp, #56	; 0x38
    bdec:	mov	r1, r7
    bdf0:	mov	r2, r6
    bdf4:	ldr	r3, [r0]
    bdf8:	mov	r0, r4
    bdfc:	bl	18d0 <fread@plt>
    be00:	add	r5, r0, r5
    be04:	cmp	r6, #1
    be08:	blt	c958 <ReadInt32Data+0x14ec>
    be0c:	ldr	r0, [sp, #20]
    be10:	sub	r6, r0, sl
    be14:	mov	r0, r4
    be18:	bl	1c28 <Mat_int32Swap>
    be1c:	str	r0, [r8], #4
    be20:	subs	r6, r6, #1
    be24:	add	r4, r4, #4
    be28:	bne	be14 <ReadInt32Data+0x9a8>
    be2c:	b	c958 <ReadInt32Data+0x14ec>
    be30:	sub	r0, r5, #256	; 0x100
    be34:	str	r5, [sp, #8]
    be38:	add	r1, r9, #1024	; 0x400
    be3c:	add	r4, sp, #56	; 0x38
    be40:	mov	r5, #0
    be44:	str	r0, [sp, #20]
    be48:	mov	r0, #0
    be4c:	mov	sl, r0
    be50:	ldr	r0, [sp, #28]
    be54:	mov	r8, r1
    be58:	mov	r1, r7
    be5c:	mov	r2, #256	; 0x100
    be60:	ldr	r3, [r0]
    be64:	mov	r0, r4
    be68:	bl	18d0 <fread@plt>
    be6c:	mov	r6, r0
    be70:	mov	r7, #0
    be74:	add	r0, r4, r7
    be78:	bl	1c3c <Mat_uint32Swap>
    be7c:	str	r0, [r9, r7]
    be80:	add	r7, r7, #4
    be84:	cmp	r7, #1024	; 0x400
    be88:	bne	be74 <ReadInt32Data+0xa08>
    be8c:	ldr	r2, [sp, #20]
    be90:	ldr	r7, [sp, #24]
    be94:	add	r0, sl, #256	; 0x100
    be98:	add	r5, r6, r5
    be9c:	add	r9, r9, #1024	; 0x400
    bea0:	add	r1, r8, #1024	; 0x400
    bea4:	cmp	r0, r2
    bea8:	blt	be4c <ReadInt32Data+0x9e0>
    beac:	ldr	r1, [sp, #8]
    beb0:	cmp	r0, r1
    beb4:	bge	c958 <ReadInt32Data+0x14ec>
    beb8:	sub	r6, r1, r0
    bebc:	ldr	r0, [sp, #28]
    bec0:	add	r4, sp, #56	; 0x38
    bec4:	mov	r1, r7
    bec8:	mov	r2, r6
    becc:	ldr	r3, [r0]
    bed0:	mov	r0, r4
    bed4:	bl	18d0 <fread@plt>
    bed8:	add	r5, r0, r5
    bedc:	cmp	r6, #1
    bee0:	blt	c958 <ReadInt32Data+0x14ec>
    bee4:	ldr	r0, [sp, #20]
    bee8:	sub	r6, r0, sl
    beec:	mov	r0, r4
    bef0:	bl	1c3c <Mat_uint32Swap>
    bef4:	str	r0, [r8], #4
    bef8:	subs	r6, r6, #1
    befc:	add	r4, r4, #4
    bf00:	bne	beec <ReadInt32Data+0xa80>
    bf04:	b	c958 <ReadInt32Data+0x14ec>
    bf08:	sub	r0, r5, #256	; 0x100
    bf0c:	str	r5, [sp, #8]
    bf10:	add	r1, r9, #1024	; 0x400
    bf14:	add	r4, sp, #56	; 0x38
    bf18:	mov	r5, #0
    bf1c:	str	r0, [sp, #20]
    bf20:	mov	r0, #0
    bf24:	mov	sl, r0
    bf28:	ldr	r0, [sp, #28]
    bf2c:	mov	r8, r1
    bf30:	mov	r1, r7
    bf34:	mov	r2, #256	; 0x100
    bf38:	ldr	r3, [r0]
    bf3c:	mov	r0, r4
    bf40:	bl	18d0 <fread@plt>
    bf44:	mov	r6, r0
    bf48:	mov	r7, #0
    bf4c:	add	r0, r4, r7
    bf50:	bl	1c7c <Mat_floatSwap>
    bf54:	vcvt.s32.f32	s0, s0
    bf58:	vmov	r0, s0
    bf5c:	str	r0, [r9, r7]
    bf60:	add	r7, r7, #4
    bf64:	cmp	r7, #1024	; 0x400
    bf68:	bne	bf4c <ReadInt32Data+0xae0>
    bf6c:	ldr	r2, [sp, #20]
    bf70:	ldr	r7, [sp, #24]
    bf74:	add	r0, sl, #256	; 0x100
    bf78:	add	r5, r6, r5
    bf7c:	add	r9, r9, #1024	; 0x400
    bf80:	add	r1, r8, #1024	; 0x400
    bf84:	cmp	r0, r2
    bf88:	blt	bf24 <ReadInt32Data+0xab8>
    bf8c:	ldr	r1, [sp, #8]
    bf90:	cmp	r0, r1
    bf94:	bge	c958 <ReadInt32Data+0x14ec>
    bf98:	sub	r6, r1, r0
    bf9c:	ldr	r0, [sp, #28]
    bfa0:	add	r4, sp, #56	; 0x38
    bfa4:	mov	r1, r7
    bfa8:	mov	r2, r6
    bfac:	ldr	r3, [r0]
    bfb0:	mov	r0, r4
    bfb4:	bl	18d0 <fread@plt>
    bfb8:	add	r5, r0, r5
    bfbc:	cmp	r6, #1
    bfc0:	blt	c958 <ReadInt32Data+0x14ec>
    bfc4:	ldr	r0, [sp, #20]
    bfc8:	sub	r6, r0, sl
    bfcc:	mov	r0, r4
    bfd0:	bl	1c7c <Mat_floatSwap>
    bfd4:	vcvt.s32.f32	s0, s0
    bfd8:	subs	r6, r6, #1
    bfdc:	add	r4, r4, #4
    bfe0:	vmov	r0, s0
    bfe4:	str	r0, [r8], #4
    bfe8:	bne	bfcc <ReadInt32Data+0xb60>
    bfec:	b	c958 <ReadInt32Data+0x14ec>
    bff0:	sub	r0, r5, #256	; 0x100
    bff4:	str	r5, [sp, #8]
    bff8:	add	r1, r9, #1024	; 0x400
    bffc:	mov	r5, #0
    c000:	str	r0, [sp, #20]
    c004:	mov	r0, #0
    c008:	mov	sl, r0
    c00c:	ldr	r0, [sp, #28]
    c010:	add	r6, sp, #56	; 0x38
    c014:	mov	r8, r1
    c018:	mov	r1, r7
    c01c:	mov	r2, #256	; 0x100
    c020:	ldr	r3, [r0]
    c024:	mov	r0, r6
    c028:	bl	18d0 <fread@plt>
    c02c:	mov	r4, r0
    c030:	mov	r7, #0
    c034:	mov	r0, r6
    c038:	bl	1cc0 <Mat_doubleSwap>
    c03c:	vcvt.s32.f64	s0, d0
    c040:	add	r6, r6, #8
    c044:	vmov	r0, s0
    c048:	str	r0, [r9, r7, lsl #2]
    c04c:	add	r7, r7, #1
    c050:	cmp	r7, #256	; 0x100
    c054:	bne	c034 <ReadInt32Data+0xbc8>
    c058:	ldr	r2, [sp, #20]
    c05c:	ldr	r7, [sp, #24]
    c060:	add	r0, sl, #256	; 0x100
    c064:	add	r5, r4, r5
    c068:	add	r9, r9, #1024	; 0x400
    c06c:	add	r1, r8, #1024	; 0x400
    c070:	cmp	r0, r2
    c074:	blt	c008 <ReadInt32Data+0xb9c>
    c078:	ldr	r1, [sp, #8]
    c07c:	cmp	r0, r1
    c080:	bge	c958 <ReadInt32Data+0x14ec>
    c084:	sub	r6, r1, r0
    c088:	ldr	r0, [sp, #28]
    c08c:	add	r4, sp, #56	; 0x38
    c090:	mov	r1, r7
    c094:	mov	r2, r6
    c098:	ldr	r3, [r0]
    c09c:	mov	r0, r4
    c0a0:	bl	18d0 <fread@plt>
    c0a4:	add	r5, r0, r5
    c0a8:	cmp	r6, #1
    c0ac:	blt	c958 <ReadInt32Data+0x14ec>
    c0b0:	ldr	r0, [sp, #20]
    c0b4:	sub	r6, r0, sl
    c0b8:	mov	r0, r4
    c0bc:	bl	1cc0 <Mat_doubleSwap>
    c0c0:	vcvt.s32.f64	s0, d0
    c0c4:	subs	r6, r6, #1
    c0c8:	add	r4, r4, #8
    c0cc:	vmov	r0, s0
    c0d0:	str	r0, [r8], #4
    c0d4:	bne	c0b8 <ReadInt32Data+0xc4c>
    c0d8:	b	c958 <ReadInt32Data+0x14ec>
    c0dc:	sub	r0, r5, #256	; 0x100
    c0e0:	str	r5, [sp, #8]
    c0e4:	add	r1, r9, #1024	; 0x400
    c0e8:	mov	r7, r9
    c0ec:	mov	r5, #0
    c0f0:	str	r8, [sp, #4]
    c0f4:	str	r0, [sp, #12]
    c0f8:	mov	r0, #0
    c0fc:	mov	r6, r1
    c100:	ldr	r3, [sl]
    c104:	ldr	r1, [sp, #24]
    c108:	add	r4, sp, #56	; 0x38
    c10c:	str	r0, [sp, #20]
    c110:	mov	r2, #256	; 0x100
    c114:	mov	r0, r4
    c118:	bl	18d0 <fread@plt>
    c11c:	mov	r8, r0
    c120:	mov	sl, #0
    c124:	mov	r0, r4
    c128:	bl	1bbc <Mat_int64Swap>
    c12c:	str	r0, [r7, sl, lsl #2]
    c130:	add	sl, sl, #1
    c134:	add	r4, r4, #8
    c138:	cmp	sl, #256	; 0x100
    c13c:	bne	c124 <ReadInt32Data+0xcb8>
    c140:	ldr	r0, [sp, #20]
    c144:	ldr	r2, [sp, #12]
    c148:	ldr	sl, [sp, #28]
    c14c:	add	r5, r8, r5
    c150:	add	r7, r7, #1024	; 0x400
    c154:	add	r1, r6, #1024	; 0x400
    c158:	add	r0, r0, #256	; 0x100
    c15c:	cmp	r0, r2
    c160:	blt	c0fc <ReadInt32Data+0xc90>
    c164:	str	r5, [sp, #16]
    c168:	ldr	r5, [sp, #8]
    c16c:	cmp	r0, r5
    c170:	bge	c6ec <ReadInt32Data+0x1280>
    c174:	ldr	r7, [sp, #24]
    c178:	ldr	r3, [sl]
    c17c:	sub	r8, r5, r0
    c180:	add	r4, sp, #56	; 0x38
    c184:	mov	r0, r4
    c188:	mov	r2, r8
    c18c:	mov	r1, r7
    c190:	bl	18d0 <fread@plt>
    c194:	ldr	r1, [sp, #16]
    c198:	cmp	r8, #1
    c19c:	add	r1, r0, r1
    c1a0:	str	r1, [sp, #16]
    c1a4:	blt	c700 <ReadInt32Data+0x1294>
    c1a8:	ldr	r0, [sp, #12]
    c1ac:	ldr	r1, [sp, #20]
    c1b0:	ldr	r8, [sp, #4]
    c1b4:	sub	r7, r0, r1
    c1b8:	mov	r0, r4
    c1bc:	bl	1bbc <Mat_int64Swap>
    c1c0:	str	r0, [r6], #4
    c1c4:	subs	r7, r7, #1
    c1c8:	add	r4, r4, #8
    c1cc:	bne	c1b8 <ReadInt32Data+0xd4c>
    c1d0:	ldr	r7, [sp, #24]
    c1d4:	ldr	r5, [sp, #8]
    c1d8:	b	c708 <ReadInt32Data+0x129c>
    c1dc:	sub	r0, r5, #256	; 0x100
    c1e0:	str	r5, [sp, #8]
    c1e4:	add	r1, r9, #1024	; 0x400
    c1e8:	add	r4, sp, #56	; 0x38
    c1ec:	add	r8, sp, #32
    c1f0:	mov	r5, #0
    c1f4:	str	r0, [sp, #20]
    c1f8:	mov	r0, #0
    c1fc:	mov	sl, r0
    c200:	ldr	r0, [sp, #28]
    c204:	mov	r6, r1
    c208:	mov	r1, r7
    c20c:	mov	r2, #256	; 0x100
    c210:	ldr	r3, [r0]
    c214:	mov	r0, r4
    c218:	bl	18d0 <fread@plt>
    c21c:	mov	r1, r9
    c220:	mov	r2, #0
    c224:	ldr	r3, [r4, r2]
    c228:	str	r3, [sp, #32]
    c22c:	add	r3, r4, r2
    c230:	add	r2, r2, #8
    c234:	ldr	r3, [r3, #4]
    c238:	cmp	r2, #512	; 0x200
    c23c:	str	r3, [sp, #36]	; 0x24
    c240:	vld1.16	{d16}, [r8 :64]
    c244:	vmovl.s16	q8, d16
    c248:	vst1.32	{d16-d17}, [r1]!
    c24c:	bne	c224 <ReadInt32Data+0xdb8>
    c250:	ldr	r2, [sp, #20]
    c254:	add	r5, r0, r5
    c258:	add	r0, sl, #256	; 0x100
    c25c:	add	r9, r9, #1024	; 0x400
    c260:	add	r1, r6, #1024	; 0x400
    c264:	cmp	r0, r2
    c268:	blt	c1fc <ReadInt32Data+0xd90>
    c26c:	ldr	r2, [sp, #8]
    c270:	cmp	r0, r2
    c274:	bge	c958 <ReadInt32Data+0x14ec>
    c278:	mov	r1, r7
    c27c:	sub	r7, r2, r0
    c280:	ldr	r0, [sp, #28]
    c284:	add	r4, sp, #56	; 0x38
    c288:	mov	r2, r7
    c28c:	ldr	r3, [r0]
    c290:	mov	r0, r4
    c294:	bl	18d0 <fread@plt>
    c298:	add	r5, r0, r5
    c29c:	cmp	r7, #1
    c2a0:	blt	c954 <ReadInt32Data+0x14e8>
    c2a4:	ldr	r0, [sp, #20]
    c2a8:	sub	r0, r0, sl
    c2ac:	ldrsh	r1, [r4], #2
    c2b0:	subs	r0, r0, #1
    c2b4:	str	r1, [r6], #4
    c2b8:	bne	c2ac <ReadInt32Data+0xe40>
    c2bc:	b	c954 <ReadInt32Data+0x14e8>
    c2c0:	sub	r0, r5, #256	; 0x100
    c2c4:	str	r5, [sp, #8]
    c2c8:	add	r1, r9, #1024	; 0x400
    c2cc:	add	r4, sp, #56	; 0x38
    c2d0:	add	r8, sp, #40	; 0x28
    c2d4:	mov	r5, #0
    c2d8:	str	r0, [sp, #20]
    c2dc:	mov	r0, #0
    c2e0:	mov	sl, r0
    c2e4:	ldr	r0, [sp, #28]
    c2e8:	mov	r6, r1
    c2ec:	mov	r1, r7
    c2f0:	mov	r2, #256	; 0x100
    c2f4:	ldr	r3, [r0]
    c2f8:	mov	r0, r4
    c2fc:	bl	18d0 <fread@plt>
    c300:	mov	r1, r9
    c304:	mov	r2, #0
    c308:	ldr	r3, [r4, r2]
    c30c:	str	r3, [sp, #40]	; 0x28
    c310:	add	r3, r4, r2
    c314:	add	r2, r2, #8
    c318:	ldr	r3, [r3, #4]
    c31c:	cmp	r2, #512	; 0x200
    c320:	str	r3, [sp, #44]	; 0x2c
    c324:	vld1.16	{d16}, [r8 :64]
    c328:	vmovl.u16	q8, d16
    c32c:	vst1.32	{d16-d17}, [r1]!
    c330:	bne	c308 <ReadInt32Data+0xe9c>
    c334:	ldr	r2, [sp, #20]
    c338:	add	r5, r0, r5
    c33c:	add	r0, sl, #256	; 0x100
    c340:	add	r9, r9, #1024	; 0x400
    c344:	add	r1, r6, #1024	; 0x400
    c348:	cmp	r0, r2
    c34c:	blt	c2e0 <ReadInt32Data+0xe74>
    c350:	ldr	r2, [sp, #8]
    c354:	cmp	r0, r2
    c358:	bge	c958 <ReadInt32Data+0x14ec>
    c35c:	mov	r1, r7
    c360:	sub	r7, r2, r0
    c364:	ldr	r0, [sp, #28]
    c368:	add	r4, sp, #56	; 0x38
    c36c:	mov	r2, r7
    c370:	ldr	r3, [r0]
    c374:	mov	r0, r4
    c378:	bl	18d0 <fread@plt>
    c37c:	add	r5, r0, r5
    c380:	cmp	r7, #1
    c384:	blt	c954 <ReadInt32Data+0x14e8>
    c388:	ldr	r0, [sp, #20]
    c38c:	sub	r0, r0, sl
    c390:	ldrh	r1, [r4], #2
    c394:	subs	r0, r0, #1
    c398:	str	r1, [r6], #4
    c39c:	bne	c390 <ReadInt32Data+0xf24>
    c3a0:	b	c954 <ReadInt32Data+0x14e8>
    c3a4:	sub	r0, r5, #256	; 0x100
    c3a8:	lsl	r4, r5, #2
    c3ac:	str	r5, [sp, #8]
    c3b0:	mov	r6, #0
    c3b4:	add	r8, sp, #56	; 0x38
    c3b8:	mov	r5, #0
    c3bc:	str	r0, [sp, #20]
    c3c0:	ldr	r3, [sl]
    c3c4:	mov	r0, r8
    c3c8:	mov	r1, r7
    c3cc:	mov	r2, #256	; 0x100
    c3d0:	bl	18d0 <fread@plt>
    c3d4:	mov	sl, r0
    c3d8:	add	r0, r9, r6, lsl #2
    c3dc:	mov	r1, r8
    c3e0:	mov	r2, #1024	; 0x400
    c3e4:	bl	1834 <memcpy@plt>
    c3e8:	ldr	r0, [sp, #20]
    c3ec:	add	r5, sl, r5
    c3f0:	ldr	sl, [sp, #28]
    c3f4:	add	r6, r6, #256	; 0x100
    c3f8:	sub	r4, r4, #1024	; 0x400
    c3fc:	cmp	r6, r0
    c400:	blt	c3c0 <ReadInt32Data+0xf54>
    c404:	ldr	r0, [sp, #8]
    c408:	cmp	r6, r0
    c40c:	bge	c954 <ReadInt32Data+0x14e8>
    c410:	ldr	r7, [sp, #24]
    c414:	ldr	r3, [sl]
    c418:	sub	r8, r0, r6
    c41c:	add	r0, sp, #56	; 0x38
    c420:	mov	r2, r8
    c424:	mov	r1, r7
    c428:	bl	18d0 <fread@plt>
    c42c:	add	r5, r0, r5
    c430:	cmp	r8, #1
    c434:	blt	c958 <ReadInt32Data+0x14ec>
    c438:	add	r0, r9, r6, lsl #2
    c43c:	add	r1, sp, #56	; 0x38
    c440:	mov	r2, r4
    c444:	bl	1834 <memcpy@plt>
    c448:	b	c958 <ReadInt32Data+0x14ec>
    c44c:	add	r1, r9, #1024	; 0x400
    c450:	str	r5, [sp, #8]
    c454:	sub	r8, r5, #256	; 0x100
    c458:	mov	r0, #0
    c45c:	add	r4, sp, #56	; 0x38
    c460:	mov	r5, #0
    c464:	mov	sl, r0
    c468:	ldr	r0, [sp, #28]
    c46c:	mov	r6, r1
    c470:	mov	r1, r7
    c474:	mov	r2, #256	; 0x100
    c478:	ldr	r3, [r0]
    c47c:	mov	r0, r4
    c480:	bl	18d0 <fread@plt>
    c484:	mov	r1, #0
    c488:	add	r2, r4, r1
    c48c:	vld1.32	{d16-d17}, [r2]
    c490:	add	r2, r9, r1
    c494:	add	r1, r1, #16
    c498:	cmp	r1, #1024	; 0x400
    c49c:	vcvt.s32.f32	q8, q8
    c4a0:	vst1.32	{d16-d17}, [r2]
    c4a4:	bne	c488 <ReadInt32Data+0x101c>
    c4a8:	add	r5, r0, r5
    c4ac:	add	r0, sl, #256	; 0x100
    c4b0:	add	r9, r9, #1024	; 0x400
    c4b4:	add	r1, r6, #1024	; 0x400
    c4b8:	cmp	r0, r8
    c4bc:	blt	c464 <ReadInt32Data+0xff8>
    c4c0:	ldr	r2, [sp, #8]
    c4c4:	cmp	r0, r2
    c4c8:	bge	c958 <ReadInt32Data+0x14ec>
    c4cc:	mov	r1, r7
    c4d0:	sub	r7, r2, r0
    c4d4:	ldr	r0, [sp, #28]
    c4d8:	add	r4, sp, #56	; 0x38
    c4dc:	mov	r2, r7
    c4e0:	ldr	r3, [r0]
    c4e4:	mov	r0, r4
    c4e8:	bl	18d0 <fread@plt>
    c4ec:	add	r5, r0, r5
    c4f0:	cmp	r7, #1
    c4f4:	blt	c954 <ReadInt32Data+0x14e8>
    c4f8:	sub	r0, r8, sl
    c4fc:	vldr	s0, [r4]
    c500:	subs	r0, r0, #1
    c504:	add	r4, r4, #4
    c508:	vcvt.s32.f32	s0, s0
    c50c:	vmov	r1, s0
    c510:	str	r1, [r6], #4
    c514:	bne	c4fc <ReadInt32Data+0x1090>
    c518:	b	c954 <ReadInt32Data+0x14e8>
    c51c:	sub	r0, r5, #256	; 0x100
    c520:	mov	sl, r5
    c524:	add	r1, r9, #1024	; 0x400
    c528:	add	r4, sp, #56	; 0x38
    c52c:	mov	r5, #0
    c530:	str	r0, [sp, #20]
    c534:	mov	r0, #0
    c538:	mov	r8, r0
    c53c:	ldr	r0, [sp, #28]
    c540:	mov	r6, r1
    c544:	mov	r1, r7
    c548:	mov	r2, #256	; 0x100
    c54c:	ldr	r3, [r0]
    c550:	mov	r0, r4
    c554:	bl	18d0 <fread@plt>
    c558:	mov	r1, #0
    c55c:	mov	r2, r4
    c560:	vld1.64	{d16-d17}, [r2]!
    c564:	vcvt.s32.f64	s0, d16
    c568:	vmov	r3, s0
    c56c:	vcvt.s32.f64	s0, d17
    c570:	vmov.32	d16[0], r3
    c574:	add	r3, r9, r1
    c578:	vmov	r7, s0
    c57c:	add	r1, r1, #8
    c580:	vmov.32	d16[1], r7
    c584:	cmp	r1, #1024	; 0x400
    c588:	vstr	d16, [r3]
    c58c:	bne	c560 <ReadInt32Data+0x10f4>
    c590:	ldr	r2, [sp, #20]
    c594:	ldr	r7, [sp, #24]
    c598:	add	r5, r0, r5
    c59c:	add	r0, r8, #256	; 0x100
    c5a0:	add	r9, r9, #1024	; 0x400
    c5a4:	add	r1, r6, #1024	; 0x400
    c5a8:	cmp	r0, r2
    c5ac:	blt	c538 <ReadInt32Data+0x10cc>
    c5b0:	cmp	r0, sl
    c5b4:	bge	c958 <ReadInt32Data+0x14ec>
    c5b8:	mov	r1, r7
    c5bc:	sub	r7, sl, r0
    c5c0:	ldr	r0, [sp, #28]
    c5c4:	add	r4, sp, #56	; 0x38
    c5c8:	mov	r2, r7
    c5cc:	ldr	r3, [r0]
    c5d0:	mov	r0, r4
    c5d4:	bl	18d0 <fread@plt>
    c5d8:	add	r5, r0, r5
    c5dc:	cmp	r7, #1
    c5e0:	blt	c954 <ReadInt32Data+0x14e8>
    c5e4:	ldr	r0, [sp, #20]
    c5e8:	sub	r0, r0, r8
    c5ec:	vldr	d16, [r4]
    c5f0:	subs	r0, r0, #1
    c5f4:	add	r4, r4, #8
    c5f8:	vcvt.s32.f64	s0, d16
    c5fc:	vmov	r1, s0
    c600:	str	r1, [r6], #4
    c604:	bne	c5ec <ReadInt32Data+0x1180>
    c608:	b	c954 <ReadInt32Data+0x14e8>
    c60c:	str	r8, [sp, #4]
    c610:	add	r1, r9, #1024	; 0x400
    c614:	str	r5, [sp, #8]
    c618:	sub	r8, r5, #256	; 0x100
    c61c:	mov	r0, #0
    c620:	add	r4, sp, #56	; 0x38
    c624:	mov	r7, r9
    c628:	mov	r5, #0
    c62c:	mov	sl, r0
    c630:	ldr	r0, [sp, #28]
    c634:	mov	r6, r1
    c638:	ldr	r1, [sp, #24]
    c63c:	mov	r2, #256	; 0x100
    c640:	ldr	r3, [r0]
    c644:	mov	r0, r4
    c648:	bl	18d0 <fread@plt>
    c64c:	mov	r1, #0
    c650:	mov	r2, r4
    c654:	vld1.64	{d16-d17}, [r2]!
    c658:	add	r3, r7, r1
    c65c:	add	r1, r1, #8
    c660:	cmp	r1, #1024	; 0x400
    c664:	vmovn.i64	d16, q8
    c668:	vstr	d16, [r3]
    c66c:	bne	c654 <ReadInt32Data+0x11e8>
    c670:	add	r5, r0, r5
    c674:	add	r0, sl, #256	; 0x100
    c678:	add	r7, r7, #1024	; 0x400
    c67c:	add	r1, r6, #1024	; 0x400
    c680:	cmp	r0, r8
    c684:	blt	c62c <ReadInt32Data+0x11c0>
    c688:	str	r5, [sp, #16]
    c68c:	ldr	r5, [sp, #8]
    c690:	cmp	r0, r5
    c694:	bge	c6f4 <ReadInt32Data+0x1288>
    c698:	sub	r5, r5, r0
    c69c:	ldr	r0, [sp, #28]
    c6a0:	ldr	r7, [sp, #24]
    c6a4:	add	r4, sp, #56	; 0x38
    c6a8:	mov	r2, r5
    c6ac:	ldr	r3, [r0]
    c6b0:	mov	r0, r4
    c6b4:	mov	r1, r7
    c6b8:	bl	18d0 <fread@plt>
    c6bc:	ldr	r1, [sp, #16]
    c6c0:	cmp	r5, #1
    c6c4:	add	r1, r0, r1
    c6c8:	str	r1, [sp, #16]
    c6cc:	blt	c6e4 <ReadInt32Data+0x1278>
    c6d0:	sub	r0, r8, sl
    c6d4:	ldr	r1, [r4], #8
    c6d8:	subs	r0, r0, #1
    c6dc:	str	r1, [r6], #4
    c6e0:	bne	c6d4 <ReadInt32Data+0x1268>
    c6e4:	ldr	r5, [sp, #8]
    c6e8:	b	c6f8 <ReadInt32Data+0x128c>
    c6ec:	ldr	r7, [sp, #24]
    c6f0:	b	c704 <ReadInt32Data+0x1298>
    c6f4:	ldr	r7, [sp, #24]
    c6f8:	ldr	sl, [sp, #28]
    c6fc:	b	c704 <ReadInt32Data+0x1298>
    c700:	ldr	r5, [sp, #8]
    c704:	ldr	r8, [sp, #4]
    c708:	cmp	r8, #13
    c70c:	bne	c7b0 <ReadInt32Data+0x1344>
    c710:	ldr	r0, [sl, #20]
    c714:	cmp	r0, #0
    c718:	beq	c76c <ReadInt32Data+0x1300>
    c71c:	cmp	r5, #256	; 0x100
    c720:	bgt	c7b8 <ReadInt32Data+0x134c>
    c724:	ldr	r3, [sl]
    c728:	add	r4, sp, #56	; 0x38
    c72c:	mov	r1, r7
    c730:	mov	r2, r5
    c734:	mov	r0, r4
    c738:	bl	18d0 <fread@plt>
    c73c:	ldr	r1, [sp, #16]
    c740:	cmp	r5, #1
    c744:	add	r1, r0, r1
    c748:	str	r1, [sp, #16]
    c74c:	blt	c7b0 <ReadInt32Data+0x1344>
    c750:	mov	r0, r4
    c754:	bl	1c0c <Mat_uint64Swap>
    c758:	str	r0, [r9], #4
    c75c:	subs	r5, r5, #1
    c760:	add	r4, r4, #8
    c764:	bne	c750 <ReadInt32Data+0x12e4>
    c768:	b	c7b0 <ReadInt32Data+0x1344>
    c76c:	cmp	r5, #256	; 0x100
    c770:	bgt	c894 <ReadInt32Data+0x1428>
    c774:	ldr	r3, [sl]
    c778:	add	r4, sp, #56	; 0x38
    c77c:	mov	r1, r7
    c780:	mov	r2, r5
    c784:	mov	r0, r4
    c788:	bl	18d0 <fread@plt>
    c78c:	ldr	r1, [sp, #16]
    c790:	cmp	r5, #1
    c794:	add	r1, r0, r1
    c798:	str	r1, [sp, #16]
    c79c:	blt	c7b0 <ReadInt32Data+0x1344>
    c7a0:	ldr	r0, [r4], #8
    c7a4:	subs	r5, r5, #1
    c7a8:	str	r0, [r9], #4
    c7ac:	bne	c7a0 <ReadInt32Data+0x1334>
    c7b0:	ldr	r5, [sp, #16]
    c7b4:	b	c958 <ReadInt32Data+0x14ec>
    c7b8:	sub	r0, r5, #256	; 0x100
    c7bc:	str	r5, [sp, #8]
    c7c0:	ldr	r5, [sp, #16]
    c7c4:	add	r1, r9, #1024	; 0x400
    c7c8:	str	r0, [sp, #20]
    c7cc:	mov	r0, #0
    c7d0:	mov	sl, r0
    c7d4:	ldr	r0, [sp, #28]
    c7d8:	add	r6, sp, #56	; 0x38
    c7dc:	mov	r8, r1
    c7e0:	mov	r1, r7
    c7e4:	mov	r2, #256	; 0x100
    c7e8:	ldr	r3, [r0]
    c7ec:	mov	r0, r6
    c7f0:	bl	18d0 <fread@plt>
    c7f4:	mov	r4, r0
    c7f8:	mov	r7, #0
    c7fc:	mov	r0, r6
    c800:	bl	1c0c <Mat_uint64Swap>
    c804:	str	r0, [r9, r7, lsl #2]
    c808:	add	r7, r7, #1
    c80c:	add	r6, r6, #8
    c810:	cmp	r7, #256	; 0x100
    c814:	bne	c7fc <ReadInt32Data+0x1390>
    c818:	ldr	r2, [sp, #20]
    c81c:	ldr	r7, [sp, #24]
    c820:	add	r0, sl, #256	; 0x100
    c824:	add	r5, r4, r5
    c828:	add	r9, r9, #1024	; 0x400
    c82c:	add	r1, r8, #1024	; 0x400
    c830:	cmp	r0, r2
    c834:	blt	c7d0 <ReadInt32Data+0x1364>
    c838:	ldr	r1, [sp, #8]
    c83c:	cmp	r0, r1
    c840:	bge	c958 <ReadInt32Data+0x14ec>
    c844:	sub	r6, r1, r0
    c848:	ldr	r0, [sp, #28]
    c84c:	add	r4, sp, #56	; 0x38
    c850:	mov	r1, r7
    c854:	mov	r2, r6
    c858:	ldr	r3, [r0]
    c85c:	mov	r0, r4
    c860:	bl	18d0 <fread@plt>
    c864:	add	r5, r0, r5
    c868:	cmp	r6, #1
    c86c:	blt	c958 <ReadInt32Data+0x14ec>
    c870:	ldr	r0, [sp, #20]
    c874:	sub	r6, r0, sl
    c878:	mov	r0, r4
    c87c:	bl	1c0c <Mat_uint64Swap>
    c880:	str	r0, [r8], #4
    c884:	subs	r6, r6, #1
    c888:	add	r4, r4, #8
    c88c:	bne	c878 <ReadInt32Data+0x140c>
    c890:	b	c958 <ReadInt32Data+0x14ec>
    c894:	str	r5, [sp, #8]
    c898:	sub	r8, r5, #256	; 0x100
    c89c:	ldr	r5, [sp, #16]
    c8a0:	add	r1, r9, #1024	; 0x400
    c8a4:	mov	r0, #0
    c8a8:	add	r4, sp, #56	; 0x38
    c8ac:	mov	sl, r0
    c8b0:	ldr	r0, [sp, #28]
    c8b4:	mov	r6, r1
    c8b8:	mov	r1, r7
    c8bc:	mov	r2, #256	; 0x100
    c8c0:	ldr	r3, [r0]
    c8c4:	mov	r0, r4
    c8c8:	bl	18d0 <fread@plt>
    c8cc:	mov	r1, #0
    c8d0:	mov	r2, r4
    c8d4:	vld1.64	{d16-d17}, [r2]!
    c8d8:	add	r3, r9, r1
    c8dc:	add	r1, r1, #8
    c8e0:	cmp	r1, #1024	; 0x400
    c8e4:	vmovn.i64	d16, q8
    c8e8:	vstr	d16, [r3]
    c8ec:	bne	c8d4 <ReadInt32Data+0x1468>
    c8f0:	add	r5, r0, r5
    c8f4:	add	r0, sl, #256	; 0x100
    c8f8:	add	r9, r9, #1024	; 0x400
    c8fc:	add	r1, r6, #1024	; 0x400
    c900:	cmp	r0, r8
    c904:	blt	c8ac <ReadInt32Data+0x1440>
    c908:	ldr	r2, [sp, #8]
    c90c:	cmp	r0, r2
    c910:	bge	c958 <ReadInt32Data+0x14ec>
    c914:	mov	r1, r7
    c918:	sub	r7, r2, r0
    c91c:	ldr	r0, [sp, #28]
    c920:	add	r4, sp, #56	; 0x38
    c924:	mov	r2, r7
    c928:	ldr	r3, [r0]
    c92c:	mov	r0, r4
    c930:	bl	18d0 <fread@plt>
    c934:	add	r5, r0, r5
    c938:	cmp	r7, #1
    c93c:	blt	c954 <ReadInt32Data+0x14e8>
    c940:	sub	r0, r8, sl
    c944:	ldr	r1, [r4], #8
    c948:	subs	r0, r0, #1
    c94c:	str	r1, [r6], #4
    c950:	bne	c944 <ReadInt32Data+0x14d8>
    c954:	ldr	r7, [sp, #24]
    c958:	mul	r0, r5, r7
    c95c:	sub	sp, fp, #28
    c960:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000c964 <ReadCompressedInt32Data>:
    c964:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c968:	add	fp, sp, #28
    c96c:	sub	sp, sp, #12
    c970:	mov	r7, r0
    c974:	mov	r0, #0
    c978:	cmp	r1, #0
    c97c:	beq	ce84 <ReadCompressedInt32Data+0x520>
    c980:	cmp	r7, #0
    c984:	movne	r5, r2
    c988:	cmpne	r2, #0
    c98c:	beq	ce84 <ReadCompressedInt32Data+0x520>
    c990:	ldr	sl, [fp, #8]
    c994:	mov	r0, r3
    c998:	mov	r4, r3
    c99c:	mov	r6, r1
    c9a0:	bl	193c <Mat_SizeOf@plt>
    c9a4:	mov	r9, r0
    c9a8:	sub	r0, r4, #1
    c9ac:	cmp	r0, #12
    c9b0:	bhi	ce80 <ReadCompressedInt32Data+0x51c>
    c9b4:	add	r1, pc, #4
    c9b8:	ldr	r0, [r1, r0, lsl #2]
    c9bc:	add	pc, r1, r0
    c9c0:	.word	0x00000034
    c9c4:	.word	0x0000006c
    c9c8:	.word	0x000000a4
    c9cc:	.word	0x000000ec
    c9d0:	.word	0x00000134
    c9d4:	.word	0x0000017c
    c9d8:	.word	0x000001c4
    c9dc:	.word	0x000004c0
    c9e0:	.word	0x00000214
    c9e4:	.word	0x000004c0
    c9e8:	.word	0x000004c0
    c9ec:	.word	0x00000264
    c9f0:	.word	0x000002ac
    c9f4:	cmp	sl, #1
    c9f8:	blt	ce80 <ReadCompressedInt32Data+0x51c>
    c9fc:	mov	r8, sp
    ca00:	mov	r4, sl
    ca04:	mov	r0, r7
    ca08:	mov	r1, r6
    ca0c:	mov	r2, r8
    ca10:	mov	r3, r9
    ca14:	bl	31f0 <InflateData>
    ca18:	ldrsb	r0, [sp]
    ca1c:	subs	r4, r4, #1
    ca20:	str	r0, [r5], #4
    ca24:	bne	ca04 <ReadCompressedInt32Data+0xa0>
    ca28:	b	ce80 <ReadCompressedInt32Data+0x51c>
    ca2c:	cmp	sl, #1
    ca30:	blt	ce80 <ReadCompressedInt32Data+0x51c>
    ca34:	mov	r8, sp
    ca38:	mov	r4, sl
    ca3c:	mov	r0, r7
    ca40:	mov	r1, r6
    ca44:	mov	r2, r8
    ca48:	mov	r3, r9
    ca4c:	bl	31f0 <InflateData>
    ca50:	ldrb	r0, [sp]
    ca54:	subs	r4, r4, #1
    ca58:	str	r0, [r5], #4
    ca5c:	bne	ca3c <ReadCompressedInt32Data+0xd8>
    ca60:	b	ce80 <ReadCompressedInt32Data+0x51c>
    ca64:	ldr	r0, [r7, #20]
    ca68:	cmp	r0, #0
    ca6c:	beq	ccb4 <ReadCompressedInt32Data+0x350>
    ca70:	cmp	sl, #1
    ca74:	blt	ce80 <ReadCompressedInt32Data+0x51c>
    ca78:	mov	r8, sp
    ca7c:	mov	r4, sl
    ca80:	mov	r0, r7
    ca84:	mov	r1, r6
    ca88:	mov	r2, r8
    ca8c:	mov	r3, r9
    ca90:	bl	31f0 <InflateData>
    ca94:	mov	r0, r8
    ca98:	bl	1c50 <Mat_int16Swap>
    ca9c:	str	r0, [r5], #4
    caa0:	subs	r4, r4, #1
    caa4:	bne	ca80 <ReadCompressedInt32Data+0x11c>
    caa8:	b	ce80 <ReadCompressedInt32Data+0x51c>
    caac:	ldr	r0, [r7, #20]
    cab0:	cmp	r0, #0
    cab4:	beq	ccec <ReadCompressedInt32Data+0x388>
    cab8:	cmp	sl, #1
    cabc:	blt	ce80 <ReadCompressedInt32Data+0x51c>
    cac0:	mov	r8, sp
    cac4:	mov	r4, sl
    cac8:	mov	r0, r7
    cacc:	mov	r1, r6
    cad0:	mov	r2, r8
    cad4:	mov	r3, r9
    cad8:	bl	31f0 <InflateData>
    cadc:	mov	r0, r8
    cae0:	bl	1c64 <Mat_uint16Swap>
    cae4:	str	r0, [r5], #4
    cae8:	subs	r4, r4, #1
    caec:	bne	cac8 <ReadCompressedInt32Data+0x164>
    caf0:	b	ce80 <ReadCompressedInt32Data+0x51c>
    caf4:	ldr	r0, [r7, #20]
    caf8:	cmp	r0, #0
    cafc:	beq	cd24 <ReadCompressedInt32Data+0x3c0>
    cb00:	cmp	sl, #1
    cb04:	blt	ce80 <ReadCompressedInt32Data+0x51c>
    cb08:	mov	r8, sp
    cb0c:	mov	r4, sl
    cb10:	mov	r0, r7
    cb14:	mov	r1, r6
    cb18:	mov	r2, r8
    cb1c:	mov	r3, r9
    cb20:	bl	31f0 <InflateData>
    cb24:	mov	r0, r8
    cb28:	bl	1c28 <Mat_int32Swap>
    cb2c:	str	r0, [r5], #4
    cb30:	subs	r4, r4, #1
    cb34:	bne	cb10 <ReadCompressedInt32Data+0x1ac>
    cb38:	b	ce80 <ReadCompressedInt32Data+0x51c>
    cb3c:	ldr	r0, [r7, #20]
    cb40:	cmp	r0, #0
    cb44:	beq	cd5c <ReadCompressedInt32Data+0x3f8>
    cb48:	cmp	sl, #1
    cb4c:	blt	ce80 <ReadCompressedInt32Data+0x51c>
    cb50:	mov	r8, sp
    cb54:	mov	r4, sl
    cb58:	mov	r0, r7
    cb5c:	mov	r1, r6
    cb60:	mov	r2, r8
    cb64:	mov	r3, r9
    cb68:	bl	31f0 <InflateData>
    cb6c:	mov	r0, r8
    cb70:	bl	1c3c <Mat_uint32Swap>
    cb74:	str	r0, [r5], #4
    cb78:	subs	r4, r4, #1
    cb7c:	bne	cb58 <ReadCompressedInt32Data+0x1f4>
    cb80:	b	ce80 <ReadCompressedInt32Data+0x51c>
    cb84:	ldr	r0, [r7, #20]
    cb88:	cmp	r0, #0
    cb8c:	beq	cd94 <ReadCompressedInt32Data+0x430>
    cb90:	cmp	sl, #1
    cb94:	blt	ce80 <ReadCompressedInt32Data+0x51c>
    cb98:	mov	r8, sp
    cb9c:	mov	r4, sl
    cba0:	mov	r0, r7
    cba4:	mov	r1, r6
    cba8:	mov	r2, r8
    cbac:	mov	r3, r9
    cbb0:	bl	31f0 <InflateData>
    cbb4:	mov	r0, r8
    cbb8:	bl	1c7c <Mat_floatSwap>
    cbbc:	vcvt.s32.f32	s0, s0
    cbc0:	subs	r4, r4, #1
    cbc4:	vmov	r0, s0
    cbc8:	str	r0, [r5], #4
    cbcc:	bne	cba0 <ReadCompressedInt32Data+0x23c>
    cbd0:	b	ce80 <ReadCompressedInt32Data+0x51c>
    cbd4:	ldr	r0, [r7, #20]
    cbd8:	cmp	r0, #0
    cbdc:	beq	cdd4 <ReadCompressedInt32Data+0x470>
    cbe0:	cmp	sl, #1
    cbe4:	blt	ce80 <ReadCompressedInt32Data+0x51c>
    cbe8:	mov	r8, sp
    cbec:	mov	r4, sl
    cbf0:	mov	r0, r7
    cbf4:	mov	r1, r6
    cbf8:	mov	r2, r8
    cbfc:	mov	r3, r9
    cc00:	bl	31f0 <InflateData>
    cc04:	mov	r0, r8
    cc08:	bl	1cc0 <Mat_doubleSwap>
    cc0c:	vcvt.s32.f64	s0, d0
    cc10:	subs	r4, r4, #1
    cc14:	vmov	r0, s0
    cc18:	str	r0, [r5], #4
    cc1c:	bne	cbf0 <ReadCompressedInt32Data+0x28c>
    cc20:	b	ce80 <ReadCompressedInt32Data+0x51c>
    cc24:	ldr	r0, [r7, #20]
    cc28:	cmp	r0, #0
    cc2c:	beq	ce14 <ReadCompressedInt32Data+0x4b0>
    cc30:	cmp	sl, #1
    cc34:	blt	ce80 <ReadCompressedInt32Data+0x51c>
    cc38:	mov	r8, sp
    cc3c:	mov	r4, sl
    cc40:	mov	r0, r7
    cc44:	mov	r1, r6
    cc48:	mov	r2, r8
    cc4c:	mov	r3, r9
    cc50:	bl	31f0 <InflateData>
    cc54:	mov	r0, r8
    cc58:	bl	1bbc <Mat_int64Swap>
    cc5c:	str	r0, [r5], #4
    cc60:	subs	r4, r4, #1
    cc64:	bne	cc40 <ReadCompressedInt32Data+0x2dc>
    cc68:	b	ce80 <ReadCompressedInt32Data+0x51c>
    cc6c:	ldr	r0, [r7, #20]
    cc70:	cmp	r0, #0
    cc74:	beq	ce4c <ReadCompressedInt32Data+0x4e8>
    cc78:	cmp	sl, #1
    cc7c:	blt	ce80 <ReadCompressedInt32Data+0x51c>
    cc80:	mov	r8, sp
    cc84:	mov	r4, sl
    cc88:	mov	r0, r7
    cc8c:	mov	r1, r6
    cc90:	mov	r2, r8
    cc94:	mov	r3, r9
    cc98:	bl	31f0 <InflateData>
    cc9c:	mov	r0, r8
    cca0:	bl	1c0c <Mat_uint64Swap>
    cca4:	str	r0, [r5], #4
    cca8:	subs	r4, r4, #1
    ccac:	bne	cc88 <ReadCompressedInt32Data+0x324>
    ccb0:	b	ce80 <ReadCompressedInt32Data+0x51c>
    ccb4:	cmp	sl, #1
    ccb8:	blt	ce80 <ReadCompressedInt32Data+0x51c>
    ccbc:	mov	r8, sp
    ccc0:	mov	r4, sl
    ccc4:	mov	r0, r7
    ccc8:	mov	r1, r6
    cccc:	mov	r2, r8
    ccd0:	mov	r3, r9
    ccd4:	bl	31f0 <InflateData>
    ccd8:	ldrsh	r0, [sp]
    ccdc:	subs	r4, r4, #1
    cce0:	str	r0, [r5], #4
    cce4:	bne	ccc4 <ReadCompressedInt32Data+0x360>
    cce8:	b	ce80 <ReadCompressedInt32Data+0x51c>
    ccec:	cmp	sl, #1
    ccf0:	blt	ce80 <ReadCompressedInt32Data+0x51c>
    ccf4:	mov	r8, sp
    ccf8:	mov	r4, sl
    ccfc:	mov	r0, r7
    cd00:	mov	r1, r6
    cd04:	mov	r2, r8
    cd08:	mov	r3, r9
    cd0c:	bl	31f0 <InflateData>
    cd10:	ldrh	r0, [sp]
    cd14:	subs	r4, r4, #1
    cd18:	str	r0, [r5], #4
    cd1c:	bne	ccfc <ReadCompressedInt32Data+0x398>
    cd20:	b	ce80 <ReadCompressedInt32Data+0x51c>
    cd24:	cmp	sl, #1
    cd28:	blt	ce80 <ReadCompressedInt32Data+0x51c>
    cd2c:	mov	r8, sp
    cd30:	mov	r4, sl
    cd34:	mov	r0, r7
    cd38:	mov	r1, r6
    cd3c:	mov	r2, r8
    cd40:	mov	r3, r9
    cd44:	bl	31f0 <InflateData>
    cd48:	ldr	r0, [sp]
    cd4c:	subs	r4, r4, #1
    cd50:	str	r0, [r5], #4
    cd54:	bne	cd34 <ReadCompressedInt32Data+0x3d0>
    cd58:	b	ce80 <ReadCompressedInt32Data+0x51c>
    cd5c:	cmp	sl, #1
    cd60:	blt	ce80 <ReadCompressedInt32Data+0x51c>
    cd64:	mov	r8, sp
    cd68:	mov	r4, sl
    cd6c:	mov	r0, r7
    cd70:	mov	r1, r6
    cd74:	mov	r2, r8
    cd78:	mov	r3, r9
    cd7c:	bl	31f0 <InflateData>
    cd80:	ldr	r0, [sp]
    cd84:	subs	r4, r4, #1
    cd88:	str	r0, [r5], #4
    cd8c:	bne	cd6c <ReadCompressedInt32Data+0x408>
    cd90:	b	ce80 <ReadCompressedInt32Data+0x51c>
    cd94:	cmp	sl, #1
    cd98:	blt	ce80 <ReadCompressedInt32Data+0x51c>
    cd9c:	mov	r8, sp
    cda0:	mov	r4, sl
    cda4:	mov	r0, r7
    cda8:	mov	r1, r6
    cdac:	mov	r2, r8
    cdb0:	mov	r3, r9
    cdb4:	bl	31f0 <InflateData>
    cdb8:	vldr	s0, [sp]
    cdbc:	subs	r4, r4, #1
    cdc0:	vcvt.s32.f32	s0, s0
    cdc4:	vmov	r0, s0
    cdc8:	str	r0, [r5], #4
    cdcc:	bne	cda4 <ReadCompressedInt32Data+0x440>
    cdd0:	b	ce80 <ReadCompressedInt32Data+0x51c>
    cdd4:	cmp	sl, #1
    cdd8:	blt	ce80 <ReadCompressedInt32Data+0x51c>
    cddc:	mov	r8, sp
    cde0:	mov	r4, sl
    cde4:	mov	r0, r7
    cde8:	mov	r1, r6
    cdec:	mov	r2, r8
    cdf0:	mov	r3, r9
    cdf4:	bl	31f0 <InflateData>
    cdf8:	vldr	d16, [sp]
    cdfc:	subs	r4, r4, #1
    ce00:	vcvt.s32.f64	s0, d16
    ce04:	vmov	r0, s0
    ce08:	str	r0, [r5], #4
    ce0c:	bne	cde4 <ReadCompressedInt32Data+0x480>
    ce10:	b	ce80 <ReadCompressedInt32Data+0x51c>
    ce14:	cmp	sl, #1
    ce18:	blt	ce80 <ReadCompressedInt32Data+0x51c>
    ce1c:	mov	r8, sp
    ce20:	mov	r4, sl
    ce24:	mov	r0, r7
    ce28:	mov	r1, r6
    ce2c:	mov	r2, r8
    ce30:	mov	r3, r9
    ce34:	bl	31f0 <InflateData>
    ce38:	ldr	r0, [sp]
    ce3c:	subs	r4, r4, #1
    ce40:	str	r0, [r5], #4
    ce44:	bne	ce24 <ReadCompressedInt32Data+0x4c0>
    ce48:	b	ce80 <ReadCompressedInt32Data+0x51c>
    ce4c:	cmp	sl, #1
    ce50:	blt	ce80 <ReadCompressedInt32Data+0x51c>
    ce54:	mov	r8, sp
    ce58:	mov	r4, sl
    ce5c:	mov	r0, r7
    ce60:	mov	r1, r6
    ce64:	mov	r2, r8
    ce68:	mov	r3, r9
    ce6c:	bl	31f0 <InflateData>
    ce70:	ldr	r0, [sp]
    ce74:	subs	r4, r4, #1
    ce78:	str	r0, [r5], #4
    ce7c:	bne	ce5c <ReadCompressedInt32Data+0x4f8>
    ce80:	mul	r0, r9, sl
    ce84:	sub	sp, fp, #28
    ce88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000ce8c <ReadUInt32Data>:
    ce8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ce90:	add	fp, sp, #28
    ce94:	sub	sp, sp, #60	; 0x3c
    ce98:	sub	sp, sp, #2048	; 0x800
    ce9c:	mov	sl, r0
    cea0:	mov	r0, #0
    cea4:	cmp	sl, #0
    cea8:	beq	e37c <ReadUInt32Data+0x14f0>
    ceac:	cmp	r1, #0
    ceb0:	mov	r9, r1
    ceb4:	ldrne	r1, [sl]
    ceb8:	cmpne	r1, #0
    cebc:	beq	e37c <ReadUInt32Data+0x14f0>
    cec0:	mov	r0, r2
    cec4:	mov	r5, r3
    cec8:	mov	r8, r2
    cecc:	bl	193c <Mat_SizeOf@plt>
    ced0:	mov	r7, r0
    ced4:	sub	r0, r8, #1
    ced8:	mov	r1, #0
    cedc:	str	sl, [sp, #28]
    cee0:	cmp	r0, #11
    cee4:	str	r1, [sp, #16]
    cee8:	str	r7, [sp, #24]
    ceec:	bhi	e128 <ReadUInt32Data+0x129c>
    cef0:	add	r1, pc, #4
    cef4:	ldr	r0, [r1, r0, lsl #2]
    cef8:	add	pc, r1, r0
    cefc:	.word	0x00000030
    cf00:	.word	0x0000006c
    cf04:	.word	0x000000a8
    cf08:	.word	0x000000fc
    cf0c:	.word	0x00000150
    cf10:	.word	0x000001a4
    cf14:	.word	0x000001f8
    cf18:	.word	0x0000122c
    cf1c:	.word	0x00000254
    cf20:	.word	0x0000122c
    cf24:	.word	0x0000122c
    cf28:	.word	0x000002b4
    cf2c:	cmp	r5, #256	; 0x100
    cf30:	bgt	d210 <ReadUInt32Data+0x384>
    cf34:	ldr	r3, [sl]
    cf38:	add	r4, sp, #56	; 0x38
    cf3c:	mov	r1, r7
    cf40:	mov	r2, r5
    cf44:	mov	r0, r4
    cf48:	bl	18d0 <fread@plt>
    cf4c:	cmp	r5, #1
    cf50:	blt	d578 <ReadUInt32Data+0x6ec>
    cf54:	ldrsb	r1, [r4], #1
    cf58:	subs	r5, r5, #1
    cf5c:	str	r1, [r9], #4
    cf60:	bne	cf54 <ReadUInt32Data+0xc8>
    cf64:	b	d578 <ReadUInt32Data+0x6ec>
    cf68:	cmp	r5, #256	; 0x100
    cf6c:	bgt	d2ec <ReadUInt32Data+0x460>
    cf70:	ldr	r3, [sl]
    cf74:	add	r4, sp, #56	; 0x38
    cf78:	mov	r1, r7
    cf7c:	mov	r2, r5
    cf80:	mov	r0, r4
    cf84:	bl	18d0 <fread@plt>
    cf88:	cmp	r5, #1
    cf8c:	blt	d578 <ReadUInt32Data+0x6ec>
    cf90:	ldrb	r1, [r4], #1
    cf94:	subs	r5, r5, #1
    cf98:	str	r1, [r9], #4
    cf9c:	bne	cf90 <ReadUInt32Data+0x104>
    cfa0:	b	d578 <ReadUInt32Data+0x6ec>
    cfa4:	ldr	r0, [sl, #20]
    cfa8:	cmp	r0, #0
    cfac:	beq	d3c8 <ReadUInt32Data+0x53c>
    cfb0:	cmp	r5, #256	; 0x100
    cfb4:	bgt	d5c8 <ReadUInt32Data+0x73c>
    cfb8:	ldr	r3, [sl]
    cfbc:	add	r4, sp, #56	; 0x38
    cfc0:	mov	r1, r7
    cfc4:	mov	r2, r5
    cfc8:	mov	r0, r4
    cfcc:	bl	18d0 <fread@plt>
    cfd0:	mov	r6, r0
    cfd4:	cmp	r5, #1
    cfd8:	blt	d1a8 <ReadUInt32Data+0x31c>
    cfdc:	mov	r0, r4
    cfe0:	bl	1c50 <Mat_int16Swap>
    cfe4:	str	r0, [r9], #4
    cfe8:	subs	r5, r5, #1
    cfec:	add	r4, r4, #2
    cff0:	bne	cfdc <ReadUInt32Data+0x150>
    cff4:	b	d1a8 <ReadUInt32Data+0x31c>
    cff8:	ldr	r0, [sl, #20]
    cffc:	cmp	r0, #0
    d000:	beq	d404 <ReadUInt32Data+0x578>
    d004:	cmp	r5, #256	; 0x100
    d008:	bgt	d6a0 <ReadUInt32Data+0x814>
    d00c:	ldr	r3, [sl]
    d010:	add	r4, sp, #56	; 0x38
    d014:	mov	r1, r7
    d018:	mov	r2, r5
    d01c:	mov	r0, r4
    d020:	bl	18d0 <fread@plt>
    d024:	mov	r6, r0
    d028:	cmp	r5, #1
    d02c:	blt	d1a8 <ReadUInt32Data+0x31c>
    d030:	mov	r0, r4
    d034:	bl	1c64 <Mat_uint16Swap>
    d038:	str	r0, [r9], #4
    d03c:	subs	r5, r5, #1
    d040:	add	r4, r4, #2
    d044:	bne	d030 <ReadUInt32Data+0x1a4>
    d048:	b	d1a8 <ReadUInt32Data+0x31c>
    d04c:	ldr	r0, [sl, #20]
    d050:	cmp	r0, #0
    d054:	beq	d440 <ReadUInt32Data+0x5b4>
    d058:	cmp	r5, #256	; 0x100
    d05c:	bgt	d778 <ReadUInt32Data+0x8ec>
    d060:	ldr	r3, [sl]
    d064:	add	r4, sp, #56	; 0x38
    d068:	mov	r1, r7
    d06c:	mov	r2, r5
    d070:	mov	r0, r4
    d074:	bl	18d0 <fread@plt>
    d078:	mov	r6, r0
    d07c:	cmp	r5, #1
    d080:	blt	d1a8 <ReadUInt32Data+0x31c>
    d084:	mov	r0, r4
    d088:	bl	1c28 <Mat_int32Swap>
    d08c:	str	r0, [r9], #4
    d090:	subs	r5, r5, #1
    d094:	add	r4, r4, #4
    d098:	bne	d084 <ReadUInt32Data+0x1f8>
    d09c:	b	d1a8 <ReadUInt32Data+0x31c>
    d0a0:	ldr	r0, [sl, #20]
    d0a4:	cmp	r0, #0
    d0a8:	beq	d4ac <ReadUInt32Data+0x620>
    d0ac:	cmp	r5, #256	; 0x100
    d0b0:	bgt	d850 <ReadUInt32Data+0x9c4>
    d0b4:	ldr	r3, [sl]
    d0b8:	add	r4, sp, #56	; 0x38
    d0bc:	mov	r1, r7
    d0c0:	mov	r2, r5
    d0c4:	mov	r0, r4
    d0c8:	bl	18d0 <fread@plt>
    d0cc:	mov	r6, r0
    d0d0:	cmp	r5, #1
    d0d4:	blt	d1a8 <ReadUInt32Data+0x31c>
    d0d8:	mov	r0, r4
    d0dc:	bl	1c3c <Mat_uint32Swap>
    d0e0:	str	r0, [r9], #4
    d0e4:	subs	r5, r5, #1
    d0e8:	add	r4, r4, #4
    d0ec:	bne	d0d8 <ReadUInt32Data+0x24c>
    d0f0:	b	d1a8 <ReadUInt32Data+0x31c>
    d0f4:	ldr	r0, [sl, #20]
    d0f8:	cmp	r0, #0
    d0fc:	beq	d4ec <ReadUInt32Data+0x660>
    d100:	cmp	r5, #256	; 0x100
    d104:	bgt	d928 <ReadUInt32Data+0xa9c>
    d108:	ldr	r3, [sl]
    d10c:	add	r4, sp, #56	; 0x38
    d110:	mov	r1, r7
    d114:	mov	r2, r5
    d118:	mov	r0, r4
    d11c:	bl	18d0 <fread@plt>
    d120:	mov	r6, r0
    d124:	cmp	r5, #1
    d128:	blt	d1a8 <ReadUInt32Data+0x31c>
    d12c:	mov	r0, r4
    d130:	bl	1c7c <Mat_floatSwap>
    d134:	vcvt.u32.f32	s0, s0
    d138:	subs	r5, r5, #1
    d13c:	add	r4, r4, #4
    d140:	vmov	r0, s0
    d144:	str	r0, [r9], #4
    d148:	bne	d12c <ReadUInt32Data+0x2a0>
    d14c:	b	d1a8 <ReadUInt32Data+0x31c>
    d150:	ldr	r0, [sl, #20]
    d154:	cmp	r0, #0
    d158:	beq	d534 <ReadUInt32Data+0x6a8>
    d15c:	cmp	r5, #256	; 0x100
    d160:	bgt	da10 <ReadUInt32Data+0xb84>
    d164:	ldr	r3, [sl]
    d168:	add	r4, sp, #56	; 0x38
    d16c:	mov	r1, r7
    d170:	mov	r2, r5
    d174:	mov	r0, r4
    d178:	bl	18d0 <fread@plt>
    d17c:	mov	r6, r0
    d180:	cmp	r5, #1
    d184:	blt	d1a8 <ReadUInt32Data+0x31c>
    d188:	mov	r0, r4
    d18c:	bl	1cc0 <Mat_doubleSwap>
    d190:	vcvt.u32.f64	s0, d0
    d194:	subs	r5, r5, #1
    d198:	add	r4, r4, #8
    d19c:	vmov	r0, s0
    d1a0:	str	r0, [r9], #4
    d1a4:	bne	d188 <ReadUInt32Data+0x2fc>
    d1a8:	mov	r5, r6
    d1ac:	b	e378 <ReadUInt32Data+0x14ec>
    d1b0:	ldr	r0, [sl, #20]
    d1b4:	cmp	r0, #0
    d1b8:	beq	d580 <ReadUInt32Data+0x6f4>
    d1bc:	cmp	r5, #256	; 0x100
    d1c0:	bgt	dafc <ReadUInt32Data+0xc70>
    d1c4:	ldr	r3, [sl]
    d1c8:	add	r4, sp, #56	; 0x38
    d1cc:	mov	r1, r7
    d1d0:	mov	r2, r5
    d1d4:	mov	r0, r4
    d1d8:	bl	18d0 <fread@plt>
    d1dc:	cmp	r5, #1
    d1e0:	str	r0, [sp, #16]
    d1e4:	blt	e128 <ReadUInt32Data+0x129c>
    d1e8:	mov	r6, r5
    d1ec:	mov	r7, r9
    d1f0:	mov	r0, r4
    d1f4:	bl	1bbc <Mat_int64Swap>
    d1f8:	str	r0, [r7], #4
    d1fc:	subs	r6, r6, #1
    d200:	add	r4, r4, #8
    d204:	bne	d1f0 <ReadUInt32Data+0x364>
    d208:	ldr	r7, [sp, #24]
    d20c:	b	e128 <ReadUInt32Data+0x129c>
    d210:	sub	r0, r5, #256	; 0x100
    d214:	str	r5, [sp, #8]
    d218:	add	r1, r9, #1024	; 0x400
    d21c:	add	r4, sp, #56	; 0x38
    d220:	add	r8, sp, #48	; 0x30
    d224:	mov	r5, #0
    d228:	str	r0, [sp, #20]
    d22c:	mov	r0, #0
    d230:	mov	sl, r0
    d234:	ldr	r0, [sp, #28]
    d238:	mov	r6, r1
    d23c:	mov	r1, r7
    d240:	mov	r2, #256	; 0x100
    d244:	ldr	r3, [r0]
    d248:	mov	r0, r4
    d24c:	bl	18d0 <fread@plt>
    d250:	mov	r1, r9
    d254:	mov	r2, #0
    d258:	ldr	r3, [r4, r2]
    d25c:	add	r2, r2, #4
    d260:	cmp	r2, #256	; 0x100
    d264:	str	r3, [sp, #48]	; 0x30
    d268:	vld1.32	{d16[0]}, [r8 :32]
    d26c:	vmovl.s8	q8, d16
    d270:	vmovl.s16	q8, d16
    d274:	vst1.32	{d16-d17}, [r1]!
    d278:	bne	d258 <ReadUInt32Data+0x3cc>
    d27c:	ldr	r2, [sp, #20]
    d280:	add	r5, r0, r5
    d284:	add	r0, sl, #256	; 0x100
    d288:	add	r9, r9, #1024	; 0x400
    d28c:	add	r1, r6, #1024	; 0x400
    d290:	cmp	r0, r2
    d294:	blt	d230 <ReadUInt32Data+0x3a4>
    d298:	ldr	r2, [sp, #8]
    d29c:	cmp	r0, r2
    d2a0:	bge	e378 <ReadUInt32Data+0x14ec>
    d2a4:	mov	r1, r7
    d2a8:	sub	r7, r2, r0
    d2ac:	ldr	r0, [sp, #28]
    d2b0:	add	r4, sp, #56	; 0x38
    d2b4:	mov	r2, r7
    d2b8:	ldr	r3, [r0]
    d2bc:	mov	r0, r4
    d2c0:	bl	18d0 <fread@plt>
    d2c4:	add	r5, r0, r5
    d2c8:	cmp	r7, #1
    d2cc:	blt	e374 <ReadUInt32Data+0x14e8>
    d2d0:	ldr	r0, [sp, #20]
    d2d4:	sub	r0, r0, sl
    d2d8:	ldrsb	r1, [r4], #1
    d2dc:	subs	r0, r0, #1
    d2e0:	str	r1, [r6], #4
    d2e4:	bne	d2d8 <ReadUInt32Data+0x44c>
    d2e8:	b	e374 <ReadUInt32Data+0x14e8>
    d2ec:	sub	r0, r5, #256	; 0x100
    d2f0:	str	r5, [sp, #8]
    d2f4:	add	r1, r9, #1024	; 0x400
    d2f8:	add	r4, sp, #56	; 0x38
    d2fc:	add	r8, sp, #52	; 0x34
    d300:	mov	r5, #0
    d304:	str	r0, [sp, #20]
    d308:	mov	r0, #0
    d30c:	mov	sl, r0
    d310:	ldr	r0, [sp, #28]
    d314:	mov	r6, r1
    d318:	mov	r1, r7
    d31c:	mov	r2, #256	; 0x100
    d320:	ldr	r3, [r0]
    d324:	mov	r0, r4
    d328:	bl	18d0 <fread@plt>
    d32c:	mov	r1, r9
    d330:	mov	r2, #0
    d334:	ldr	r3, [r4, r2]
    d338:	add	r2, r2, #4
    d33c:	cmp	r2, #256	; 0x100
    d340:	str	r3, [sp, #52]	; 0x34
    d344:	vld1.32	{d16[0]}, [r8 :32]
    d348:	vmovl.u8	q8, d16
    d34c:	vmovl.u16	q8, d16
    d350:	vst1.32	{d16-d17}, [r1]!
    d354:	bne	d334 <ReadUInt32Data+0x4a8>
    d358:	ldr	r2, [sp, #20]
    d35c:	add	r5, r0, r5
    d360:	add	r0, sl, #256	; 0x100
    d364:	add	r9, r9, #1024	; 0x400
    d368:	add	r1, r6, #1024	; 0x400
    d36c:	cmp	r0, r2
    d370:	blt	d30c <ReadUInt32Data+0x480>
    d374:	ldr	r2, [sp, #8]
    d378:	cmp	r0, r2
    d37c:	bge	e378 <ReadUInt32Data+0x14ec>
    d380:	mov	r1, r7
    d384:	sub	r7, r2, r0
    d388:	ldr	r0, [sp, #28]
    d38c:	add	r4, sp, #56	; 0x38
    d390:	mov	r2, r7
    d394:	ldr	r3, [r0]
    d398:	mov	r0, r4
    d39c:	bl	18d0 <fread@plt>
    d3a0:	add	r5, r0, r5
    d3a4:	cmp	r7, #1
    d3a8:	blt	e374 <ReadUInt32Data+0x14e8>
    d3ac:	ldr	r0, [sp, #20]
    d3b0:	sub	r0, r0, sl
    d3b4:	ldrb	r1, [r4], #1
    d3b8:	subs	r0, r0, #1
    d3bc:	str	r1, [r6], #4
    d3c0:	bne	d3b4 <ReadUInt32Data+0x528>
    d3c4:	b	e374 <ReadUInt32Data+0x14e8>
    d3c8:	cmp	r5, #256	; 0x100
    d3cc:	bgt	dbfc <ReadUInt32Data+0xd70>
    d3d0:	ldr	r3, [sl]
    d3d4:	add	r4, sp, #56	; 0x38
    d3d8:	mov	r1, r7
    d3dc:	mov	r2, r5
    d3e0:	mov	r0, r4
    d3e4:	bl	18d0 <fread@plt>
    d3e8:	cmp	r5, #1
    d3ec:	blt	d578 <ReadUInt32Data+0x6ec>
    d3f0:	ldrsh	r1, [r4], #2
    d3f4:	subs	r5, r5, #1
    d3f8:	str	r1, [r9], #4
    d3fc:	bne	d3f0 <ReadUInt32Data+0x564>
    d400:	b	d578 <ReadUInt32Data+0x6ec>
    d404:	cmp	r5, #256	; 0x100
    d408:	bgt	dce0 <ReadUInt32Data+0xe54>
    d40c:	ldr	r3, [sl]
    d410:	add	r4, sp, #56	; 0x38
    d414:	mov	r1, r7
    d418:	mov	r2, r5
    d41c:	mov	r0, r4
    d420:	bl	18d0 <fread@plt>
    d424:	cmp	r5, #1
    d428:	blt	d578 <ReadUInt32Data+0x6ec>
    d42c:	ldrh	r1, [r4], #2
    d430:	subs	r5, r5, #1
    d434:	str	r1, [r9], #4
    d438:	bne	d42c <ReadUInt32Data+0x5a0>
    d43c:	b	d578 <ReadUInt32Data+0x6ec>
    d440:	cmp	r5, #256	; 0x100
    d444:	ble	d4b4 <ReadUInt32Data+0x628>
    d448:	sub	r0, r5, #256	; 0x100
    d44c:	lsl	r4, r5, #2
    d450:	str	r5, [sp, #8]
    d454:	mov	r6, #0
    d458:	add	r8, sp, #56	; 0x38
    d45c:	mov	r5, #0
    d460:	str	r0, [sp, #20]
    d464:	ldr	r3, [sl]
    d468:	mov	r0, r8
    d46c:	mov	r1, r7
    d470:	mov	r2, #256	; 0x100
    d474:	bl	18d0 <fread@plt>
    d478:	mov	sl, r0
    d47c:	add	r0, r9, r6, lsl #2
    d480:	mov	r1, r8
    d484:	mov	r2, #1024	; 0x400
    d488:	bl	1834 <memcpy@plt>
    d48c:	ldr	r0, [sp, #20]
    d490:	add	r5, sl, r5
    d494:	ldr	sl, [sp, #28]
    d498:	add	r6, r6, #256	; 0x100
    d49c:	sub	r4, r4, #1024	; 0x400
    d4a0:	cmp	r6, r0
    d4a4:	blt	d464 <ReadUInt32Data+0x5d8>
    d4a8:	b	de24 <ReadUInt32Data+0xf98>
    d4ac:	cmp	r5, #256	; 0x100
    d4b0:	bgt	ddc4 <ReadUInt32Data+0xf38>
    d4b4:	ldr	r3, [sl]
    d4b8:	add	r0, sp, #56	; 0x38
    d4bc:	mov	r1, r7
    d4c0:	mov	r2, r5
    d4c4:	bl	18d0 <fread@plt>
    d4c8:	mov	r4, r0
    d4cc:	cmp	r5, #1
    d4d0:	blt	d4e4 <ReadUInt32Data+0x658>
    d4d4:	lsl	r2, r5, #2
    d4d8:	add	r1, sp, #56	; 0x38
    d4dc:	mov	r0, r9
    d4e0:	bl	1834 <memcpy@plt>
    d4e4:	mov	r5, r4
    d4e8:	b	e378 <ReadUInt32Data+0x14ec>
    d4ec:	cmp	r5, #256	; 0x100
    d4f0:	bgt	de6c <ReadUInt32Data+0xfe0>
    d4f4:	ldr	r3, [sl]
    d4f8:	add	r4, sp, #56	; 0x38
    d4fc:	mov	r1, r7
    d500:	mov	r2, r5
    d504:	mov	r0, r4
    d508:	bl	18d0 <fread@plt>
    d50c:	cmp	r5, #1
    d510:	blt	d578 <ReadUInt32Data+0x6ec>
    d514:	vldr	s0, [r4]
    d518:	subs	r5, r5, #1
    d51c:	add	r4, r4, #4
    d520:	vcvt.u32.f32	s0, s0
    d524:	vmov	r1, s0
    d528:	str	r1, [r9], #4
    d52c:	bne	d514 <ReadUInt32Data+0x688>
    d530:	b	d578 <ReadUInt32Data+0x6ec>
    d534:	cmp	r5, #256	; 0x100
    d538:	bgt	df3c <ReadUInt32Data+0x10b0>
    d53c:	ldr	r3, [sl]
    d540:	add	r4, sp, #56	; 0x38
    d544:	mov	r1, r7
    d548:	mov	r2, r5
    d54c:	mov	r0, r4
    d550:	bl	18d0 <fread@plt>
    d554:	cmp	r5, #1
    d558:	blt	d578 <ReadUInt32Data+0x6ec>
    d55c:	vldr	d16, [r4]
    d560:	subs	r5, r5, #1
    d564:	add	r4, r4, #8
    d568:	vcvt.u32.f64	s0, d16
    d56c:	vmov	r1, s0
    d570:	str	r1, [r9], #4
    d574:	bne	d55c <ReadUInt32Data+0x6d0>
    d578:	mov	r5, r0
    d57c:	b	e378 <ReadUInt32Data+0x14ec>
    d580:	cmp	r5, #256	; 0x100
    d584:	bgt	e02c <ReadUInt32Data+0x11a0>
    d588:	ldr	r3, [sl]
    d58c:	add	r4, sp, #56	; 0x38
    d590:	mov	r1, r7
    d594:	mov	r2, r5
    d598:	mov	r0, r4
    d59c:	bl	18d0 <fread@plt>
    d5a0:	cmp	r5, #1
    d5a4:	str	r0, [sp, #16]
    d5a8:	blt	e128 <ReadUInt32Data+0x129c>
    d5ac:	mov	r0, r5
    d5b0:	mov	r1, r9
    d5b4:	ldr	r2, [r4], #8
    d5b8:	subs	r0, r0, #1
    d5bc:	str	r2, [r1], #4
    d5c0:	bne	d5b4 <ReadUInt32Data+0x728>
    d5c4:	b	e128 <ReadUInt32Data+0x129c>
    d5c8:	sub	r0, r5, #256	; 0x100
    d5cc:	str	r5, [sp, #8]
    d5d0:	add	r1, r9, #1024	; 0x400
    d5d4:	add	r4, sp, #56	; 0x38
    d5d8:	mov	r5, #0
    d5dc:	str	r0, [sp, #20]
    d5e0:	mov	r0, #0
    d5e4:	mov	sl, r0
    d5e8:	ldr	r0, [sp, #28]
    d5ec:	mov	r8, r1
    d5f0:	mov	r1, r7
    d5f4:	mov	r2, #256	; 0x100
    d5f8:	ldr	r3, [r0]
    d5fc:	mov	r0, r4
    d600:	bl	18d0 <fread@plt>
    d604:	mov	r6, r0
    d608:	mov	r7, #0
    d60c:	add	r0, r4, r7
    d610:	bl	1c50 <Mat_int16Swap>
    d614:	str	r0, [r9, r7, lsl #1]
    d618:	add	r7, r7, #2
    d61c:	cmp	r7, #512	; 0x200
    d620:	bne	d60c <ReadUInt32Data+0x780>
    d624:	ldr	r2, [sp, #20]
    d628:	ldr	r7, [sp, #24]
    d62c:	add	r0, sl, #256	; 0x100
    d630:	add	r5, r6, r5
    d634:	add	r9, r9, #1024	; 0x400
    d638:	add	r1, r8, #1024	; 0x400
    d63c:	cmp	r0, r2
    d640:	blt	d5e4 <ReadUInt32Data+0x758>
    d644:	ldr	r1, [sp, #8]
    d648:	cmp	r0, r1
    d64c:	bge	e378 <ReadUInt32Data+0x14ec>
    d650:	sub	r6, r1, r0
    d654:	ldr	r0, [sp, #28]
    d658:	add	r4, sp, #56	; 0x38
    d65c:	mov	r1, r7
    d660:	mov	r2, r6
    d664:	ldr	r3, [r0]
    d668:	mov	r0, r4
    d66c:	bl	18d0 <fread@plt>
    d670:	add	r5, r0, r5
    d674:	cmp	r6, #1
    d678:	blt	e378 <ReadUInt32Data+0x14ec>
    d67c:	ldr	r0, [sp, #20]
    d680:	sub	r6, r0, sl
    d684:	mov	r0, r4
    d688:	bl	1c50 <Mat_int16Swap>
    d68c:	str	r0, [r8], #4
    d690:	subs	r6, r6, #1
    d694:	add	r4, r4, #2
    d698:	bne	d684 <ReadUInt32Data+0x7f8>
    d69c:	b	e378 <ReadUInt32Data+0x14ec>
    d6a0:	sub	r0, r5, #256	; 0x100
    d6a4:	str	r5, [sp, #8]
    d6a8:	add	r1, r9, #1024	; 0x400
    d6ac:	add	r4, sp, #56	; 0x38
    d6b0:	mov	r5, #0
    d6b4:	str	r0, [sp, #20]
    d6b8:	mov	r0, #0
    d6bc:	mov	sl, r0
    d6c0:	ldr	r0, [sp, #28]
    d6c4:	mov	r8, r1
    d6c8:	mov	r1, r7
    d6cc:	mov	r2, #256	; 0x100
    d6d0:	ldr	r3, [r0]
    d6d4:	mov	r0, r4
    d6d8:	bl	18d0 <fread@plt>
    d6dc:	mov	r6, r0
    d6e0:	mov	r7, #0
    d6e4:	add	r0, r4, r7
    d6e8:	bl	1c64 <Mat_uint16Swap>
    d6ec:	str	r0, [r9, r7, lsl #1]
    d6f0:	add	r7, r7, #2
    d6f4:	cmp	r7, #512	; 0x200
    d6f8:	bne	d6e4 <ReadUInt32Data+0x858>
    d6fc:	ldr	r2, [sp, #20]
    d700:	ldr	r7, [sp, #24]
    d704:	add	r0, sl, #256	; 0x100
    d708:	add	r5, r6, r5
    d70c:	add	r9, r9, #1024	; 0x400
    d710:	add	r1, r8, #1024	; 0x400
    d714:	cmp	r0, r2
    d718:	blt	d6bc <ReadUInt32Data+0x830>
    d71c:	ldr	r1, [sp, #8]
    d720:	cmp	r0, r1
    d724:	bge	e378 <ReadUInt32Data+0x14ec>
    d728:	sub	r6, r1, r0
    d72c:	ldr	r0, [sp, #28]
    d730:	add	r4, sp, #56	; 0x38
    d734:	mov	r1, r7
    d738:	mov	r2, r6
    d73c:	ldr	r3, [r0]
    d740:	mov	r0, r4
    d744:	bl	18d0 <fread@plt>
    d748:	add	r5, r0, r5
    d74c:	cmp	r6, #1
    d750:	blt	e378 <ReadUInt32Data+0x14ec>
    d754:	ldr	r0, [sp, #20]
    d758:	sub	r6, r0, sl
    d75c:	mov	r0, r4
    d760:	bl	1c64 <Mat_uint16Swap>
    d764:	str	r0, [r8], #4
    d768:	subs	r6, r6, #1
    d76c:	add	r4, r4, #2
    d770:	bne	d75c <ReadUInt32Data+0x8d0>
    d774:	b	e378 <ReadUInt32Data+0x14ec>
    d778:	sub	r0, r5, #256	; 0x100
    d77c:	str	r5, [sp, #8]
    d780:	add	r1, r9, #1024	; 0x400
    d784:	add	r4, sp, #56	; 0x38
    d788:	mov	r5, #0
    d78c:	str	r0, [sp, #20]
    d790:	mov	r0, #0
    d794:	mov	sl, r0
    d798:	ldr	r0, [sp, #28]
    d79c:	mov	r8, r1
    d7a0:	mov	r1, r7
    d7a4:	mov	r2, #256	; 0x100
    d7a8:	ldr	r3, [r0]
    d7ac:	mov	r0, r4
    d7b0:	bl	18d0 <fread@plt>
    d7b4:	mov	r6, r0
    d7b8:	mov	r7, #0
    d7bc:	add	r0, r4, r7
    d7c0:	bl	1c28 <Mat_int32Swap>
    d7c4:	str	r0, [r9, r7]
    d7c8:	add	r7, r7, #4
    d7cc:	cmp	r7, #1024	; 0x400
    d7d0:	bne	d7bc <ReadUInt32Data+0x930>
    d7d4:	ldr	r2, [sp, #20]
    d7d8:	ldr	r7, [sp, #24]
    d7dc:	add	r0, sl, #256	; 0x100
    d7e0:	add	r5, r6, r5
    d7e4:	add	r9, r9, #1024	; 0x400
    d7e8:	add	r1, r8, #1024	; 0x400
    d7ec:	cmp	r0, r2
    d7f0:	blt	d794 <ReadUInt32Data+0x908>
    d7f4:	ldr	r1, [sp, #8]
    d7f8:	cmp	r0, r1
    d7fc:	bge	e378 <ReadUInt32Data+0x14ec>
    d800:	sub	r6, r1, r0
    d804:	ldr	r0, [sp, #28]
    d808:	add	r4, sp, #56	; 0x38
    d80c:	mov	r1, r7
    d810:	mov	r2, r6
    d814:	ldr	r3, [r0]
    d818:	mov	r0, r4
    d81c:	bl	18d0 <fread@plt>
    d820:	add	r5, r0, r5
    d824:	cmp	r6, #1
    d828:	blt	e378 <ReadUInt32Data+0x14ec>
    d82c:	ldr	r0, [sp, #20]
    d830:	sub	r6, r0, sl
    d834:	mov	r0, r4
    d838:	bl	1c28 <Mat_int32Swap>
    d83c:	str	r0, [r8], #4
    d840:	subs	r6, r6, #1
    d844:	add	r4, r4, #4
    d848:	bne	d834 <ReadUInt32Data+0x9a8>
    d84c:	b	e378 <ReadUInt32Data+0x14ec>
    d850:	sub	r0, r5, #256	; 0x100
    d854:	str	r5, [sp, #8]
    d858:	add	r1, r9, #1024	; 0x400
    d85c:	add	r4, sp, #56	; 0x38
    d860:	mov	r5, #0
    d864:	str	r0, [sp, #20]
    d868:	mov	r0, #0
    d86c:	mov	sl, r0
    d870:	ldr	r0, [sp, #28]
    d874:	mov	r8, r1
    d878:	mov	r1, r7
    d87c:	mov	r2, #256	; 0x100
    d880:	ldr	r3, [r0]
    d884:	mov	r0, r4
    d888:	bl	18d0 <fread@plt>
    d88c:	mov	r6, r0
    d890:	mov	r7, #0
    d894:	add	r0, r4, r7
    d898:	bl	1c3c <Mat_uint32Swap>
    d89c:	str	r0, [r9, r7]
    d8a0:	add	r7, r7, #4
    d8a4:	cmp	r7, #1024	; 0x400
    d8a8:	bne	d894 <ReadUInt32Data+0xa08>
    d8ac:	ldr	r2, [sp, #20]
    d8b0:	ldr	r7, [sp, #24]
    d8b4:	add	r0, sl, #256	; 0x100
    d8b8:	add	r5, r6, r5
    d8bc:	add	r9, r9, #1024	; 0x400
    d8c0:	add	r1, r8, #1024	; 0x400
    d8c4:	cmp	r0, r2
    d8c8:	blt	d86c <ReadUInt32Data+0x9e0>
    d8cc:	ldr	r1, [sp, #8]
    d8d0:	cmp	r0, r1
    d8d4:	bge	e378 <ReadUInt32Data+0x14ec>
    d8d8:	sub	r6, r1, r0
    d8dc:	ldr	r0, [sp, #28]
    d8e0:	add	r4, sp, #56	; 0x38
    d8e4:	mov	r1, r7
    d8e8:	mov	r2, r6
    d8ec:	ldr	r3, [r0]
    d8f0:	mov	r0, r4
    d8f4:	bl	18d0 <fread@plt>
    d8f8:	add	r5, r0, r5
    d8fc:	cmp	r6, #1
    d900:	blt	e378 <ReadUInt32Data+0x14ec>
    d904:	ldr	r0, [sp, #20]
    d908:	sub	r6, r0, sl
    d90c:	mov	r0, r4
    d910:	bl	1c3c <Mat_uint32Swap>
    d914:	str	r0, [r8], #4
    d918:	subs	r6, r6, #1
    d91c:	add	r4, r4, #4
    d920:	bne	d90c <ReadUInt32Data+0xa80>
    d924:	b	e378 <ReadUInt32Data+0x14ec>
    d928:	sub	r0, r5, #256	; 0x100
    d92c:	str	r5, [sp, #8]
    d930:	add	r1, r9, #1024	; 0x400
    d934:	add	r4, sp, #56	; 0x38
    d938:	mov	r5, #0
    d93c:	str	r0, [sp, #20]
    d940:	mov	r0, #0
    d944:	mov	sl, r0
    d948:	ldr	r0, [sp, #28]
    d94c:	mov	r8, r1
    d950:	mov	r1, r7
    d954:	mov	r2, #256	; 0x100
    d958:	ldr	r3, [r0]
    d95c:	mov	r0, r4
    d960:	bl	18d0 <fread@plt>
    d964:	mov	r6, r0
    d968:	mov	r7, #0
    d96c:	add	r0, r4, r7
    d970:	bl	1c7c <Mat_floatSwap>
    d974:	vcvt.u32.f32	s0, s0
    d978:	vmov	r0, s0
    d97c:	str	r0, [r9, r7]
    d980:	add	r7, r7, #4
    d984:	cmp	r7, #1024	; 0x400
    d988:	bne	d96c <ReadUInt32Data+0xae0>
    d98c:	ldr	r2, [sp, #20]
    d990:	ldr	r7, [sp, #24]
    d994:	add	r0, sl, #256	; 0x100
    d998:	add	r5, r6, r5
    d99c:	add	r9, r9, #1024	; 0x400
    d9a0:	add	r1, r8, #1024	; 0x400
    d9a4:	cmp	r0, r2
    d9a8:	blt	d944 <ReadUInt32Data+0xab8>
    d9ac:	ldr	r1, [sp, #8]
    d9b0:	cmp	r0, r1
    d9b4:	bge	e378 <ReadUInt32Data+0x14ec>
    d9b8:	sub	r6, r1, r0
    d9bc:	ldr	r0, [sp, #28]
    d9c0:	add	r4, sp, #56	; 0x38
    d9c4:	mov	r1, r7
    d9c8:	mov	r2, r6
    d9cc:	ldr	r3, [r0]
    d9d0:	mov	r0, r4
    d9d4:	bl	18d0 <fread@plt>
    d9d8:	add	r5, r0, r5
    d9dc:	cmp	r6, #1
    d9e0:	blt	e378 <ReadUInt32Data+0x14ec>
    d9e4:	ldr	r0, [sp, #20]
    d9e8:	sub	r6, r0, sl
    d9ec:	mov	r0, r4
    d9f0:	bl	1c7c <Mat_floatSwap>
    d9f4:	vcvt.u32.f32	s0, s0
    d9f8:	subs	r6, r6, #1
    d9fc:	add	r4, r4, #4
    da00:	vmov	r0, s0
    da04:	str	r0, [r8], #4
    da08:	bne	d9ec <ReadUInt32Data+0xb60>
    da0c:	b	e378 <ReadUInt32Data+0x14ec>
    da10:	sub	r0, r5, #256	; 0x100
    da14:	str	r5, [sp, #8]
    da18:	add	r1, r9, #1024	; 0x400
    da1c:	mov	r5, #0
    da20:	str	r0, [sp, #20]
    da24:	mov	r0, #0
    da28:	mov	sl, r0
    da2c:	ldr	r0, [sp, #28]
    da30:	add	r6, sp, #56	; 0x38
    da34:	mov	r8, r1
    da38:	mov	r1, r7
    da3c:	mov	r2, #256	; 0x100
    da40:	ldr	r3, [r0]
    da44:	mov	r0, r6
    da48:	bl	18d0 <fread@plt>
    da4c:	mov	r4, r0
    da50:	mov	r7, #0
    da54:	mov	r0, r6
    da58:	bl	1cc0 <Mat_doubleSwap>
    da5c:	vcvt.u32.f64	s0, d0
    da60:	add	r6, r6, #8
    da64:	vmov	r0, s0
    da68:	str	r0, [r9, r7, lsl #2]
    da6c:	add	r7, r7, #1
    da70:	cmp	r7, #256	; 0x100
    da74:	bne	da54 <ReadUInt32Data+0xbc8>
    da78:	ldr	r2, [sp, #20]
    da7c:	ldr	r7, [sp, #24]
    da80:	add	r0, sl, #256	; 0x100
    da84:	add	r5, r4, r5
    da88:	add	r9, r9, #1024	; 0x400
    da8c:	add	r1, r8, #1024	; 0x400
    da90:	cmp	r0, r2
    da94:	blt	da28 <ReadUInt32Data+0xb9c>
    da98:	ldr	r1, [sp, #8]
    da9c:	cmp	r0, r1
    daa0:	bge	e378 <ReadUInt32Data+0x14ec>
    daa4:	sub	r6, r1, r0
    daa8:	ldr	r0, [sp, #28]
    daac:	add	r4, sp, #56	; 0x38
    dab0:	mov	r1, r7
    dab4:	mov	r2, r6
    dab8:	ldr	r3, [r0]
    dabc:	mov	r0, r4
    dac0:	bl	18d0 <fread@plt>
    dac4:	add	r5, r0, r5
    dac8:	cmp	r6, #1
    dacc:	blt	e378 <ReadUInt32Data+0x14ec>
    dad0:	ldr	r0, [sp, #20]
    dad4:	sub	r6, r0, sl
    dad8:	mov	r0, r4
    dadc:	bl	1cc0 <Mat_doubleSwap>
    dae0:	vcvt.u32.f64	s0, d0
    dae4:	subs	r6, r6, #1
    dae8:	add	r4, r4, #8
    daec:	vmov	r0, s0
    daf0:	str	r0, [r8], #4
    daf4:	bne	dad8 <ReadUInt32Data+0xc4c>
    daf8:	b	e378 <ReadUInt32Data+0x14ec>
    dafc:	sub	r0, r5, #256	; 0x100
    db00:	str	r5, [sp, #8]
    db04:	add	r1, r9, #1024	; 0x400
    db08:	mov	r7, r9
    db0c:	mov	r5, #0
    db10:	str	r8, [sp, #4]
    db14:	str	r0, [sp, #12]
    db18:	mov	r0, #0
    db1c:	mov	r6, r1
    db20:	ldr	r3, [sl]
    db24:	ldr	r1, [sp, #24]
    db28:	add	r4, sp, #56	; 0x38
    db2c:	str	r0, [sp, #20]
    db30:	mov	r2, #256	; 0x100
    db34:	mov	r0, r4
    db38:	bl	18d0 <fread@plt>
    db3c:	mov	r8, r0
    db40:	mov	sl, #0
    db44:	mov	r0, r4
    db48:	bl	1bbc <Mat_int64Swap>
    db4c:	str	r0, [r7, sl, lsl #2]
    db50:	add	sl, sl, #1
    db54:	add	r4, r4, #8
    db58:	cmp	sl, #256	; 0x100
    db5c:	bne	db44 <ReadUInt32Data+0xcb8>
    db60:	ldr	r0, [sp, #20]
    db64:	ldr	r2, [sp, #12]
    db68:	ldr	sl, [sp, #28]
    db6c:	add	r5, r8, r5
    db70:	add	r7, r7, #1024	; 0x400
    db74:	add	r1, r6, #1024	; 0x400
    db78:	add	r0, r0, #256	; 0x100
    db7c:	cmp	r0, r2
    db80:	blt	db1c <ReadUInt32Data+0xc90>
    db84:	str	r5, [sp, #16]
    db88:	ldr	r5, [sp, #8]
    db8c:	cmp	r0, r5
    db90:	bge	e10c <ReadUInt32Data+0x1280>
    db94:	ldr	r7, [sp, #24]
    db98:	ldr	r3, [sl]
    db9c:	sub	r8, r5, r0
    dba0:	add	r4, sp, #56	; 0x38
    dba4:	mov	r0, r4
    dba8:	mov	r2, r8
    dbac:	mov	r1, r7
    dbb0:	bl	18d0 <fread@plt>
    dbb4:	ldr	r1, [sp, #16]
    dbb8:	cmp	r8, #1
    dbbc:	add	r1, r0, r1
    dbc0:	str	r1, [sp, #16]
    dbc4:	blt	e120 <ReadUInt32Data+0x1294>
    dbc8:	ldr	r0, [sp, #12]
    dbcc:	ldr	r1, [sp, #20]
    dbd0:	ldr	r8, [sp, #4]
    dbd4:	sub	r7, r0, r1
    dbd8:	mov	r0, r4
    dbdc:	bl	1bbc <Mat_int64Swap>
    dbe0:	str	r0, [r6], #4
    dbe4:	subs	r7, r7, #1
    dbe8:	add	r4, r4, #8
    dbec:	bne	dbd8 <ReadUInt32Data+0xd4c>
    dbf0:	ldr	r7, [sp, #24]
    dbf4:	ldr	r5, [sp, #8]
    dbf8:	b	e128 <ReadUInt32Data+0x129c>
    dbfc:	sub	r0, r5, #256	; 0x100
    dc00:	str	r5, [sp, #8]
    dc04:	add	r1, r9, #1024	; 0x400
    dc08:	add	r4, sp, #56	; 0x38
    dc0c:	add	r8, sp, #32
    dc10:	mov	r5, #0
    dc14:	str	r0, [sp, #20]
    dc18:	mov	r0, #0
    dc1c:	mov	sl, r0
    dc20:	ldr	r0, [sp, #28]
    dc24:	mov	r6, r1
    dc28:	mov	r1, r7
    dc2c:	mov	r2, #256	; 0x100
    dc30:	ldr	r3, [r0]
    dc34:	mov	r0, r4
    dc38:	bl	18d0 <fread@plt>
    dc3c:	mov	r1, r9
    dc40:	mov	r2, #0
    dc44:	ldr	r3, [r4, r2]
    dc48:	str	r3, [sp, #32]
    dc4c:	add	r3, r4, r2
    dc50:	add	r2, r2, #8
    dc54:	ldr	r3, [r3, #4]
    dc58:	cmp	r2, #512	; 0x200
    dc5c:	str	r3, [sp, #36]	; 0x24
    dc60:	vld1.16	{d16}, [r8 :64]
    dc64:	vmovl.s16	q8, d16
    dc68:	vst1.32	{d16-d17}, [r1]!
    dc6c:	bne	dc44 <ReadUInt32Data+0xdb8>
    dc70:	ldr	r2, [sp, #20]
    dc74:	add	r5, r0, r5
    dc78:	add	r0, sl, #256	; 0x100
    dc7c:	add	r9, r9, #1024	; 0x400
    dc80:	add	r1, r6, #1024	; 0x400
    dc84:	cmp	r0, r2
    dc88:	blt	dc1c <ReadUInt32Data+0xd90>
    dc8c:	ldr	r2, [sp, #8]
    dc90:	cmp	r0, r2
    dc94:	bge	e378 <ReadUInt32Data+0x14ec>
    dc98:	mov	r1, r7
    dc9c:	sub	r7, r2, r0
    dca0:	ldr	r0, [sp, #28]
    dca4:	add	r4, sp, #56	; 0x38
    dca8:	mov	r2, r7
    dcac:	ldr	r3, [r0]
    dcb0:	mov	r0, r4
    dcb4:	bl	18d0 <fread@plt>
    dcb8:	add	r5, r0, r5
    dcbc:	cmp	r7, #1
    dcc0:	blt	e374 <ReadUInt32Data+0x14e8>
    dcc4:	ldr	r0, [sp, #20]
    dcc8:	sub	r0, r0, sl
    dccc:	ldrsh	r1, [r4], #2
    dcd0:	subs	r0, r0, #1
    dcd4:	str	r1, [r6], #4
    dcd8:	bne	dccc <ReadUInt32Data+0xe40>
    dcdc:	b	e374 <ReadUInt32Data+0x14e8>
    dce0:	sub	r0, r5, #256	; 0x100
    dce4:	str	r5, [sp, #8]
    dce8:	add	r1, r9, #1024	; 0x400
    dcec:	add	r4, sp, #56	; 0x38
    dcf0:	add	r8, sp, #40	; 0x28
    dcf4:	mov	r5, #0
    dcf8:	str	r0, [sp, #20]
    dcfc:	mov	r0, #0
    dd00:	mov	sl, r0
    dd04:	ldr	r0, [sp, #28]
    dd08:	mov	r6, r1
    dd0c:	mov	r1, r7
    dd10:	mov	r2, #256	; 0x100
    dd14:	ldr	r3, [r0]
    dd18:	mov	r0, r4
    dd1c:	bl	18d0 <fread@plt>
    dd20:	mov	r1, r9
    dd24:	mov	r2, #0
    dd28:	ldr	r3, [r4, r2]
    dd2c:	str	r3, [sp, #40]	; 0x28
    dd30:	add	r3, r4, r2
    dd34:	add	r2, r2, #8
    dd38:	ldr	r3, [r3, #4]
    dd3c:	cmp	r2, #512	; 0x200
    dd40:	str	r3, [sp, #44]	; 0x2c
    dd44:	vld1.16	{d16}, [r8 :64]
    dd48:	vmovl.u16	q8, d16
    dd4c:	vst1.32	{d16-d17}, [r1]!
    dd50:	bne	dd28 <ReadUInt32Data+0xe9c>
    dd54:	ldr	r2, [sp, #20]
    dd58:	add	r5, r0, r5
    dd5c:	add	r0, sl, #256	; 0x100
    dd60:	add	r9, r9, #1024	; 0x400
    dd64:	add	r1, r6, #1024	; 0x400
    dd68:	cmp	r0, r2
    dd6c:	blt	dd00 <ReadUInt32Data+0xe74>
    dd70:	ldr	r2, [sp, #8]
    dd74:	cmp	r0, r2
    dd78:	bge	e378 <ReadUInt32Data+0x14ec>
    dd7c:	mov	r1, r7
    dd80:	sub	r7, r2, r0
    dd84:	ldr	r0, [sp, #28]
    dd88:	add	r4, sp, #56	; 0x38
    dd8c:	mov	r2, r7
    dd90:	ldr	r3, [r0]
    dd94:	mov	r0, r4
    dd98:	bl	18d0 <fread@plt>
    dd9c:	add	r5, r0, r5
    dda0:	cmp	r7, #1
    dda4:	blt	e374 <ReadUInt32Data+0x14e8>
    dda8:	ldr	r0, [sp, #20]
    ddac:	sub	r0, r0, sl
    ddb0:	ldrh	r1, [r4], #2
    ddb4:	subs	r0, r0, #1
    ddb8:	str	r1, [r6], #4
    ddbc:	bne	ddb0 <ReadUInt32Data+0xf24>
    ddc0:	b	e374 <ReadUInt32Data+0x14e8>
    ddc4:	sub	r0, r5, #256	; 0x100
    ddc8:	lsl	r4, r5, #2
    ddcc:	str	r5, [sp, #8]
    ddd0:	mov	r6, #0
    ddd4:	add	r8, sp, #56	; 0x38
    ddd8:	mov	r5, #0
    dddc:	str	r0, [sp, #20]
    dde0:	ldr	r3, [sl]
    dde4:	mov	r0, r8
    dde8:	mov	r1, r7
    ddec:	mov	r2, #256	; 0x100
    ddf0:	bl	18d0 <fread@plt>
    ddf4:	mov	sl, r0
    ddf8:	add	r0, r9, r6, lsl #2
    ddfc:	mov	r1, r8
    de00:	mov	r2, #1024	; 0x400
    de04:	bl	1834 <memcpy@plt>
    de08:	ldr	r0, [sp, #20]
    de0c:	add	r5, sl, r5
    de10:	ldr	sl, [sp, #28]
    de14:	add	r6, r6, #256	; 0x100
    de18:	sub	r4, r4, #1024	; 0x400
    de1c:	cmp	r6, r0
    de20:	blt	dde0 <ReadUInt32Data+0xf54>
    de24:	ldr	r0, [sp, #8]
    de28:	cmp	r6, r0
    de2c:	bge	e374 <ReadUInt32Data+0x14e8>
    de30:	ldr	r7, [sp, #24]
    de34:	ldr	r3, [sl]
    de38:	sub	r8, r0, r6
    de3c:	add	r0, sp, #56	; 0x38
    de40:	mov	r2, r8
    de44:	mov	r1, r7
    de48:	bl	18d0 <fread@plt>
    de4c:	add	r5, r0, r5
    de50:	cmp	r8, #1
    de54:	blt	e378 <ReadUInt32Data+0x14ec>
    de58:	add	r0, r9, r6, lsl #2
    de5c:	add	r1, sp, #56	; 0x38
    de60:	mov	r2, r4
    de64:	bl	1834 <memcpy@plt>
    de68:	b	e378 <ReadUInt32Data+0x14ec>
    de6c:	add	r1, r9, #1024	; 0x400
    de70:	str	r5, [sp, #8]
    de74:	sub	r8, r5, #256	; 0x100
    de78:	mov	r0, #0
    de7c:	add	r4, sp, #56	; 0x38
    de80:	mov	r5, #0
    de84:	mov	sl, r0
    de88:	ldr	r0, [sp, #28]
    de8c:	mov	r6, r1
    de90:	mov	r1, r7
    de94:	mov	r2, #256	; 0x100
    de98:	ldr	r3, [r0]
    de9c:	mov	r0, r4
    dea0:	bl	18d0 <fread@plt>
    dea4:	mov	r1, #0
    dea8:	add	r2, r4, r1
    deac:	vld1.32	{d16-d17}, [r2]
    deb0:	add	r2, r9, r1
    deb4:	add	r1, r1, #16
    deb8:	cmp	r1, #1024	; 0x400
    debc:	vcvt.u32.f32	q8, q8
    dec0:	vst1.32	{d16-d17}, [r2]
    dec4:	bne	dea8 <ReadUInt32Data+0x101c>
    dec8:	add	r5, r0, r5
    decc:	add	r0, sl, #256	; 0x100
    ded0:	add	r9, r9, #1024	; 0x400
    ded4:	add	r1, r6, #1024	; 0x400
    ded8:	cmp	r0, r8
    dedc:	blt	de84 <ReadUInt32Data+0xff8>
    dee0:	ldr	r2, [sp, #8]
    dee4:	cmp	r0, r2
    dee8:	bge	e378 <ReadUInt32Data+0x14ec>
    deec:	mov	r1, r7
    def0:	sub	r7, r2, r0
    def4:	ldr	r0, [sp, #28]
    def8:	add	r4, sp, #56	; 0x38
    defc:	mov	r2, r7
    df00:	ldr	r3, [r0]
    df04:	mov	r0, r4
    df08:	bl	18d0 <fread@plt>
    df0c:	add	r5, r0, r5
    df10:	cmp	r7, #1
    df14:	blt	e374 <ReadUInt32Data+0x14e8>
    df18:	sub	r0, r8, sl
    df1c:	vldr	s0, [r4]
    df20:	subs	r0, r0, #1
    df24:	add	r4, r4, #4
    df28:	vcvt.u32.f32	s0, s0
    df2c:	vmov	r1, s0
    df30:	str	r1, [r6], #4
    df34:	bne	df1c <ReadUInt32Data+0x1090>
    df38:	b	e374 <ReadUInt32Data+0x14e8>
    df3c:	sub	r0, r5, #256	; 0x100
    df40:	mov	sl, r5
    df44:	add	r1, r9, #1024	; 0x400
    df48:	add	r4, sp, #56	; 0x38
    df4c:	mov	r5, #0
    df50:	str	r0, [sp, #20]
    df54:	mov	r0, #0
    df58:	mov	r8, r0
    df5c:	ldr	r0, [sp, #28]
    df60:	mov	r6, r1
    df64:	mov	r1, r7
    df68:	mov	r2, #256	; 0x100
    df6c:	ldr	r3, [r0]
    df70:	mov	r0, r4
    df74:	bl	18d0 <fread@plt>
    df78:	mov	r1, #0
    df7c:	mov	r2, r4
    df80:	vld1.64	{d16-d17}, [r2]!
    df84:	vcvt.u32.f64	s0, d16
    df88:	vmov	r3, s0
    df8c:	vcvt.u32.f64	s0, d17
    df90:	vmov.32	d16[0], r3
    df94:	add	r3, r9, r1
    df98:	vmov	r7, s0
    df9c:	add	r1, r1, #8
    dfa0:	vmov.32	d16[1], r7
    dfa4:	cmp	r1, #1024	; 0x400
    dfa8:	vstr	d16, [r3]
    dfac:	bne	df80 <ReadUInt32Data+0x10f4>
    dfb0:	ldr	r2, [sp, #20]
    dfb4:	ldr	r7, [sp, #24]
    dfb8:	add	r5, r0, r5
    dfbc:	add	r0, r8, #256	; 0x100
    dfc0:	add	r9, r9, #1024	; 0x400
    dfc4:	add	r1, r6, #1024	; 0x400
    dfc8:	cmp	r0, r2
    dfcc:	blt	df58 <ReadUInt32Data+0x10cc>
    dfd0:	cmp	r0, sl
    dfd4:	bge	e378 <ReadUInt32Data+0x14ec>
    dfd8:	mov	r1, r7
    dfdc:	sub	r7, sl, r0
    dfe0:	ldr	r0, [sp, #28]
    dfe4:	add	r4, sp, #56	; 0x38
    dfe8:	mov	r2, r7
    dfec:	ldr	r3, [r0]
    dff0:	mov	r0, r4
    dff4:	bl	18d0 <fread@plt>
    dff8:	add	r5, r0, r5
    dffc:	cmp	r7, #1
    e000:	blt	e374 <ReadUInt32Data+0x14e8>
    e004:	ldr	r0, [sp, #20]
    e008:	sub	r0, r0, r8
    e00c:	vldr	d16, [r4]
    e010:	subs	r0, r0, #1
    e014:	add	r4, r4, #8
    e018:	vcvt.u32.f64	s0, d16
    e01c:	vmov	r1, s0
    e020:	str	r1, [r6], #4
    e024:	bne	e00c <ReadUInt32Data+0x1180>
    e028:	b	e374 <ReadUInt32Data+0x14e8>
    e02c:	str	r8, [sp, #4]
    e030:	add	r1, r9, #1024	; 0x400
    e034:	str	r5, [sp, #8]
    e038:	sub	r8, r5, #256	; 0x100
    e03c:	mov	r0, #0
    e040:	add	r4, sp, #56	; 0x38
    e044:	mov	r7, r9
    e048:	mov	r5, #0
    e04c:	mov	sl, r0
    e050:	ldr	r0, [sp, #28]
    e054:	mov	r6, r1
    e058:	ldr	r1, [sp, #24]
    e05c:	mov	r2, #256	; 0x100
    e060:	ldr	r3, [r0]
    e064:	mov	r0, r4
    e068:	bl	18d0 <fread@plt>
    e06c:	mov	r1, #0
    e070:	mov	r2, r4
    e074:	vld1.64	{d16-d17}, [r2]!
    e078:	add	r3, r7, r1
    e07c:	add	r1, r1, #8
    e080:	cmp	r1, #1024	; 0x400
    e084:	vmovn.i64	d16, q8
    e088:	vstr	d16, [r3]
    e08c:	bne	e074 <ReadUInt32Data+0x11e8>
    e090:	add	r5, r0, r5
    e094:	add	r0, sl, #256	; 0x100
    e098:	add	r7, r7, #1024	; 0x400
    e09c:	add	r1, r6, #1024	; 0x400
    e0a0:	cmp	r0, r8
    e0a4:	blt	e04c <ReadUInt32Data+0x11c0>
    e0a8:	str	r5, [sp, #16]
    e0ac:	ldr	r5, [sp, #8]
    e0b0:	cmp	r0, r5
    e0b4:	bge	e114 <ReadUInt32Data+0x1288>
    e0b8:	sub	r5, r5, r0
    e0bc:	ldr	r0, [sp, #28]
    e0c0:	ldr	r7, [sp, #24]
    e0c4:	add	r4, sp, #56	; 0x38
    e0c8:	mov	r2, r5
    e0cc:	ldr	r3, [r0]
    e0d0:	mov	r0, r4
    e0d4:	mov	r1, r7
    e0d8:	bl	18d0 <fread@plt>
    e0dc:	ldr	r1, [sp, #16]
    e0e0:	cmp	r5, #1
    e0e4:	add	r1, r0, r1
    e0e8:	str	r1, [sp, #16]
    e0ec:	blt	e104 <ReadUInt32Data+0x1278>
    e0f0:	sub	r0, r8, sl
    e0f4:	ldr	r1, [r4], #8
    e0f8:	subs	r0, r0, #1
    e0fc:	str	r1, [r6], #4
    e100:	bne	e0f4 <ReadUInt32Data+0x1268>
    e104:	ldr	r5, [sp, #8]
    e108:	b	e118 <ReadUInt32Data+0x128c>
    e10c:	ldr	r7, [sp, #24]
    e110:	b	e124 <ReadUInt32Data+0x1298>
    e114:	ldr	r7, [sp, #24]
    e118:	ldr	sl, [sp, #28]
    e11c:	b	e124 <ReadUInt32Data+0x1298>
    e120:	ldr	r5, [sp, #8]
    e124:	ldr	r8, [sp, #4]
    e128:	cmp	r8, #13
    e12c:	bne	e1d0 <ReadUInt32Data+0x1344>
    e130:	ldr	r0, [sl, #20]
    e134:	cmp	r0, #0
    e138:	beq	e18c <ReadUInt32Data+0x1300>
    e13c:	cmp	r5, #256	; 0x100
    e140:	bgt	e1d8 <ReadUInt32Data+0x134c>
    e144:	ldr	r3, [sl]
    e148:	add	r4, sp, #56	; 0x38
    e14c:	mov	r1, r7
    e150:	mov	r2, r5
    e154:	mov	r0, r4
    e158:	bl	18d0 <fread@plt>
    e15c:	ldr	r1, [sp, #16]
    e160:	cmp	r5, #1
    e164:	add	r1, r0, r1
    e168:	str	r1, [sp, #16]
    e16c:	blt	e1d0 <ReadUInt32Data+0x1344>
    e170:	mov	r0, r4
    e174:	bl	1c0c <Mat_uint64Swap>
    e178:	str	r0, [r9], #4
    e17c:	subs	r5, r5, #1
    e180:	add	r4, r4, #8
    e184:	bne	e170 <ReadUInt32Data+0x12e4>
    e188:	b	e1d0 <ReadUInt32Data+0x1344>
    e18c:	cmp	r5, #256	; 0x100
    e190:	bgt	e2b4 <ReadUInt32Data+0x1428>
    e194:	ldr	r3, [sl]
    e198:	add	r4, sp, #56	; 0x38
    e19c:	mov	r1, r7
    e1a0:	mov	r2, r5
    e1a4:	mov	r0, r4
    e1a8:	bl	18d0 <fread@plt>
    e1ac:	ldr	r1, [sp, #16]
    e1b0:	cmp	r5, #1
    e1b4:	add	r1, r0, r1
    e1b8:	str	r1, [sp, #16]
    e1bc:	blt	e1d0 <ReadUInt32Data+0x1344>
    e1c0:	ldr	r0, [r4], #8
    e1c4:	subs	r5, r5, #1
    e1c8:	str	r0, [r9], #4
    e1cc:	bne	e1c0 <ReadUInt32Data+0x1334>
    e1d0:	ldr	r5, [sp, #16]
    e1d4:	b	e378 <ReadUInt32Data+0x14ec>
    e1d8:	sub	r0, r5, #256	; 0x100
    e1dc:	str	r5, [sp, #8]
    e1e0:	ldr	r5, [sp, #16]
    e1e4:	add	r1, r9, #1024	; 0x400
    e1e8:	str	r0, [sp, #20]
    e1ec:	mov	r0, #0
    e1f0:	mov	sl, r0
    e1f4:	ldr	r0, [sp, #28]
    e1f8:	add	r6, sp, #56	; 0x38
    e1fc:	mov	r8, r1
    e200:	mov	r1, r7
    e204:	mov	r2, #256	; 0x100
    e208:	ldr	r3, [r0]
    e20c:	mov	r0, r6
    e210:	bl	18d0 <fread@plt>
    e214:	mov	r4, r0
    e218:	mov	r7, #0
    e21c:	mov	r0, r6
    e220:	bl	1c0c <Mat_uint64Swap>
    e224:	str	r0, [r9, r7, lsl #2]
    e228:	add	r7, r7, #1
    e22c:	add	r6, r6, #8
    e230:	cmp	r7, #256	; 0x100
    e234:	bne	e21c <ReadUInt32Data+0x1390>
    e238:	ldr	r2, [sp, #20]
    e23c:	ldr	r7, [sp, #24]
    e240:	add	r0, sl, #256	; 0x100
    e244:	add	r5, r4, r5
    e248:	add	r9, r9, #1024	; 0x400
    e24c:	add	r1, r8, #1024	; 0x400
    e250:	cmp	r0, r2
    e254:	blt	e1f0 <ReadUInt32Data+0x1364>
    e258:	ldr	r1, [sp, #8]
    e25c:	cmp	r0, r1
    e260:	bge	e378 <ReadUInt32Data+0x14ec>
    e264:	sub	r6, r1, r0
    e268:	ldr	r0, [sp, #28]
    e26c:	add	r4, sp, #56	; 0x38
    e270:	mov	r1, r7
    e274:	mov	r2, r6
    e278:	ldr	r3, [r0]
    e27c:	mov	r0, r4
    e280:	bl	18d0 <fread@plt>
    e284:	add	r5, r0, r5
    e288:	cmp	r6, #1
    e28c:	blt	e378 <ReadUInt32Data+0x14ec>
    e290:	ldr	r0, [sp, #20]
    e294:	sub	r6, r0, sl
    e298:	mov	r0, r4
    e29c:	bl	1c0c <Mat_uint64Swap>
    e2a0:	str	r0, [r8], #4
    e2a4:	subs	r6, r6, #1
    e2a8:	add	r4, r4, #8
    e2ac:	bne	e298 <ReadUInt32Data+0x140c>
    e2b0:	b	e378 <ReadUInt32Data+0x14ec>
    e2b4:	str	r5, [sp, #8]
    e2b8:	sub	r8, r5, #256	; 0x100
    e2bc:	ldr	r5, [sp, #16]
    e2c0:	add	r1, r9, #1024	; 0x400
    e2c4:	mov	r0, #0
    e2c8:	add	r4, sp, #56	; 0x38
    e2cc:	mov	sl, r0
    e2d0:	ldr	r0, [sp, #28]
    e2d4:	mov	r6, r1
    e2d8:	mov	r1, r7
    e2dc:	mov	r2, #256	; 0x100
    e2e0:	ldr	r3, [r0]
    e2e4:	mov	r0, r4
    e2e8:	bl	18d0 <fread@plt>
    e2ec:	mov	r1, #0
    e2f0:	mov	r2, r4
    e2f4:	vld1.64	{d16-d17}, [r2]!
    e2f8:	add	r3, r9, r1
    e2fc:	add	r1, r1, #8
    e300:	cmp	r1, #1024	; 0x400
    e304:	vmovn.i64	d16, q8
    e308:	vstr	d16, [r3]
    e30c:	bne	e2f4 <ReadUInt32Data+0x1468>
    e310:	add	r5, r0, r5
    e314:	add	r0, sl, #256	; 0x100
    e318:	add	r9, r9, #1024	; 0x400
    e31c:	add	r1, r6, #1024	; 0x400
    e320:	cmp	r0, r8
    e324:	blt	e2cc <ReadUInt32Data+0x1440>
    e328:	ldr	r2, [sp, #8]
    e32c:	cmp	r0, r2
    e330:	bge	e378 <ReadUInt32Data+0x14ec>
    e334:	mov	r1, r7
    e338:	sub	r7, r2, r0
    e33c:	ldr	r0, [sp, #28]
    e340:	add	r4, sp, #56	; 0x38
    e344:	mov	r2, r7
    e348:	ldr	r3, [r0]
    e34c:	mov	r0, r4
    e350:	bl	18d0 <fread@plt>
    e354:	add	r5, r0, r5
    e358:	cmp	r7, #1
    e35c:	blt	e374 <ReadUInt32Data+0x14e8>
    e360:	sub	r0, r8, sl
    e364:	ldr	r1, [r4], #8
    e368:	subs	r0, r0, #1
    e36c:	str	r1, [r6], #4
    e370:	bne	e364 <ReadUInt32Data+0x14d8>
    e374:	ldr	r7, [sp, #24]
    e378:	mul	r0, r5, r7
    e37c:	sub	sp, fp, #28
    e380:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000e384 <ReadCompressedUInt32Data>:
    e384:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e388:	add	fp, sp, #28
    e38c:	sub	sp, sp, #12
    e390:	mov	r7, r0
    e394:	mov	r0, #0
    e398:	cmp	r1, #0
    e39c:	beq	e8a4 <ReadCompressedUInt32Data+0x520>
    e3a0:	cmp	r7, #0
    e3a4:	movne	r5, r2
    e3a8:	cmpne	r2, #0
    e3ac:	beq	e8a4 <ReadCompressedUInt32Data+0x520>
    e3b0:	ldr	sl, [fp, #8]
    e3b4:	mov	r0, r3
    e3b8:	mov	r4, r3
    e3bc:	mov	r6, r1
    e3c0:	bl	193c <Mat_SizeOf@plt>
    e3c4:	mov	r9, r0
    e3c8:	sub	r0, r4, #1
    e3cc:	cmp	r0, #12
    e3d0:	bhi	e8a0 <ReadCompressedUInt32Data+0x51c>
    e3d4:	add	r1, pc, #4
    e3d8:	ldr	r0, [r1, r0, lsl #2]
    e3dc:	add	pc, r1, r0
    e3e0:	.word	0x00000034
    e3e4:	.word	0x0000006c
    e3e8:	.word	0x000000a4
    e3ec:	.word	0x000000ec
    e3f0:	.word	0x00000134
    e3f4:	.word	0x0000017c
    e3f8:	.word	0x000001c4
    e3fc:	.word	0x000004c0
    e400:	.word	0x00000214
    e404:	.word	0x000004c0
    e408:	.word	0x000004c0
    e40c:	.word	0x00000264
    e410:	.word	0x000002ac
    e414:	cmp	sl, #1
    e418:	blt	e8a0 <ReadCompressedUInt32Data+0x51c>
    e41c:	mov	r8, sp
    e420:	mov	r4, sl
    e424:	mov	r0, r7
    e428:	mov	r1, r6
    e42c:	mov	r2, r8
    e430:	mov	r3, r9
    e434:	bl	31f0 <InflateData>
    e438:	ldrsb	r0, [sp]
    e43c:	subs	r4, r4, #1
    e440:	str	r0, [r5], #4
    e444:	bne	e424 <ReadCompressedUInt32Data+0xa0>
    e448:	b	e8a0 <ReadCompressedUInt32Data+0x51c>
    e44c:	cmp	sl, #1
    e450:	blt	e8a0 <ReadCompressedUInt32Data+0x51c>
    e454:	mov	r8, sp
    e458:	mov	r4, sl
    e45c:	mov	r0, r7
    e460:	mov	r1, r6
    e464:	mov	r2, r8
    e468:	mov	r3, r9
    e46c:	bl	31f0 <InflateData>
    e470:	ldrb	r0, [sp]
    e474:	subs	r4, r4, #1
    e478:	str	r0, [r5], #4
    e47c:	bne	e45c <ReadCompressedUInt32Data+0xd8>
    e480:	b	e8a0 <ReadCompressedUInt32Data+0x51c>
    e484:	ldr	r0, [r7, #20]
    e488:	cmp	r0, #0
    e48c:	beq	e6d4 <ReadCompressedUInt32Data+0x350>
    e490:	cmp	sl, #1
    e494:	blt	e8a0 <ReadCompressedUInt32Data+0x51c>
    e498:	mov	r8, sp
    e49c:	mov	r4, sl
    e4a0:	mov	r0, r7
    e4a4:	mov	r1, r6
    e4a8:	mov	r2, r8
    e4ac:	mov	r3, r9
    e4b0:	bl	31f0 <InflateData>
    e4b4:	mov	r0, r8
    e4b8:	bl	1c50 <Mat_int16Swap>
    e4bc:	str	r0, [r5], #4
    e4c0:	subs	r4, r4, #1
    e4c4:	bne	e4a0 <ReadCompressedUInt32Data+0x11c>
    e4c8:	b	e8a0 <ReadCompressedUInt32Data+0x51c>
    e4cc:	ldr	r0, [r7, #20]
    e4d0:	cmp	r0, #0
    e4d4:	beq	e70c <ReadCompressedUInt32Data+0x388>
    e4d8:	cmp	sl, #1
    e4dc:	blt	e8a0 <ReadCompressedUInt32Data+0x51c>
    e4e0:	mov	r8, sp
    e4e4:	mov	r4, sl
    e4e8:	mov	r0, r7
    e4ec:	mov	r1, r6
    e4f0:	mov	r2, r8
    e4f4:	mov	r3, r9
    e4f8:	bl	31f0 <InflateData>
    e4fc:	mov	r0, r8
    e500:	bl	1c64 <Mat_uint16Swap>
    e504:	str	r0, [r5], #4
    e508:	subs	r4, r4, #1
    e50c:	bne	e4e8 <ReadCompressedUInt32Data+0x164>
    e510:	b	e8a0 <ReadCompressedUInt32Data+0x51c>
    e514:	ldr	r0, [r7, #20]
    e518:	cmp	r0, #0
    e51c:	beq	e744 <ReadCompressedUInt32Data+0x3c0>
    e520:	cmp	sl, #1
    e524:	blt	e8a0 <ReadCompressedUInt32Data+0x51c>
    e528:	mov	r8, sp
    e52c:	mov	r4, sl
    e530:	mov	r0, r7
    e534:	mov	r1, r6
    e538:	mov	r2, r8
    e53c:	mov	r3, r9
    e540:	bl	31f0 <InflateData>
    e544:	mov	r0, r8
    e548:	bl	1c28 <Mat_int32Swap>
    e54c:	str	r0, [r5], #4
    e550:	subs	r4, r4, #1
    e554:	bne	e530 <ReadCompressedUInt32Data+0x1ac>
    e558:	b	e8a0 <ReadCompressedUInt32Data+0x51c>
    e55c:	ldr	r0, [r7, #20]
    e560:	cmp	r0, #0
    e564:	beq	e77c <ReadCompressedUInt32Data+0x3f8>
    e568:	cmp	sl, #1
    e56c:	blt	e8a0 <ReadCompressedUInt32Data+0x51c>
    e570:	mov	r8, sp
    e574:	mov	r4, sl
    e578:	mov	r0, r7
    e57c:	mov	r1, r6
    e580:	mov	r2, r8
    e584:	mov	r3, r9
    e588:	bl	31f0 <InflateData>
    e58c:	mov	r0, r8
    e590:	bl	1c3c <Mat_uint32Swap>
    e594:	str	r0, [r5], #4
    e598:	subs	r4, r4, #1
    e59c:	bne	e578 <ReadCompressedUInt32Data+0x1f4>
    e5a0:	b	e8a0 <ReadCompressedUInt32Data+0x51c>
    e5a4:	ldr	r0, [r7, #20]
    e5a8:	cmp	r0, #0
    e5ac:	beq	e7b4 <ReadCompressedUInt32Data+0x430>
    e5b0:	cmp	sl, #1
    e5b4:	blt	e8a0 <ReadCompressedUInt32Data+0x51c>
    e5b8:	mov	r8, sp
    e5bc:	mov	r4, sl
    e5c0:	mov	r0, r7
    e5c4:	mov	r1, r6
    e5c8:	mov	r2, r8
    e5cc:	mov	r3, r9
    e5d0:	bl	31f0 <InflateData>
    e5d4:	mov	r0, r8
    e5d8:	bl	1c7c <Mat_floatSwap>
    e5dc:	vcvt.u32.f32	s0, s0
    e5e0:	subs	r4, r4, #1
    e5e4:	vmov	r0, s0
    e5e8:	str	r0, [r5], #4
    e5ec:	bne	e5c0 <ReadCompressedUInt32Data+0x23c>
    e5f0:	b	e8a0 <ReadCompressedUInt32Data+0x51c>
    e5f4:	ldr	r0, [r7, #20]
    e5f8:	cmp	r0, #0
    e5fc:	beq	e7f4 <ReadCompressedUInt32Data+0x470>
    e600:	cmp	sl, #1
    e604:	blt	e8a0 <ReadCompressedUInt32Data+0x51c>
    e608:	mov	r8, sp
    e60c:	mov	r4, sl
    e610:	mov	r0, r7
    e614:	mov	r1, r6
    e618:	mov	r2, r8
    e61c:	mov	r3, r9
    e620:	bl	31f0 <InflateData>
    e624:	mov	r0, r8
    e628:	bl	1cc0 <Mat_doubleSwap>
    e62c:	vcvt.u32.f64	s0, d0
    e630:	subs	r4, r4, #1
    e634:	vmov	r0, s0
    e638:	str	r0, [r5], #4
    e63c:	bne	e610 <ReadCompressedUInt32Data+0x28c>
    e640:	b	e8a0 <ReadCompressedUInt32Data+0x51c>
    e644:	ldr	r0, [r7, #20]
    e648:	cmp	r0, #0
    e64c:	beq	e834 <ReadCompressedUInt32Data+0x4b0>
    e650:	cmp	sl, #1
    e654:	blt	e8a0 <ReadCompressedUInt32Data+0x51c>
    e658:	mov	r8, sp
    e65c:	mov	r4, sl
    e660:	mov	r0, r7
    e664:	mov	r1, r6
    e668:	mov	r2, r8
    e66c:	mov	r3, r9
    e670:	bl	31f0 <InflateData>
    e674:	mov	r0, r8
    e678:	bl	1bbc <Mat_int64Swap>
    e67c:	str	r0, [r5], #4
    e680:	subs	r4, r4, #1
    e684:	bne	e660 <ReadCompressedUInt32Data+0x2dc>
    e688:	b	e8a0 <ReadCompressedUInt32Data+0x51c>
    e68c:	ldr	r0, [r7, #20]
    e690:	cmp	r0, #0
    e694:	beq	e86c <ReadCompressedUInt32Data+0x4e8>
    e698:	cmp	sl, #1
    e69c:	blt	e8a0 <ReadCompressedUInt32Data+0x51c>
    e6a0:	mov	r8, sp
    e6a4:	mov	r4, sl
    e6a8:	mov	r0, r7
    e6ac:	mov	r1, r6
    e6b0:	mov	r2, r8
    e6b4:	mov	r3, r9
    e6b8:	bl	31f0 <InflateData>
    e6bc:	mov	r0, r8
    e6c0:	bl	1c0c <Mat_uint64Swap>
    e6c4:	str	r0, [r5], #4
    e6c8:	subs	r4, r4, #1
    e6cc:	bne	e6a8 <ReadCompressedUInt32Data+0x324>
    e6d0:	b	e8a0 <ReadCompressedUInt32Data+0x51c>
    e6d4:	cmp	sl, #1
    e6d8:	blt	e8a0 <ReadCompressedUInt32Data+0x51c>
    e6dc:	mov	r8, sp
    e6e0:	mov	r4, sl
    e6e4:	mov	r0, r7
    e6e8:	mov	r1, r6
    e6ec:	mov	r2, r8
    e6f0:	mov	r3, r9
    e6f4:	bl	31f0 <InflateData>
    e6f8:	ldrsh	r0, [sp]
    e6fc:	subs	r4, r4, #1
    e700:	str	r0, [r5], #4
    e704:	bne	e6e4 <ReadCompressedUInt32Data+0x360>
    e708:	b	e8a0 <ReadCompressedUInt32Data+0x51c>
    e70c:	cmp	sl, #1
    e710:	blt	e8a0 <ReadCompressedUInt32Data+0x51c>
    e714:	mov	r8, sp
    e718:	mov	r4, sl
    e71c:	mov	r0, r7
    e720:	mov	r1, r6
    e724:	mov	r2, r8
    e728:	mov	r3, r9
    e72c:	bl	31f0 <InflateData>
    e730:	ldrh	r0, [sp]
    e734:	subs	r4, r4, #1
    e738:	str	r0, [r5], #4
    e73c:	bne	e71c <ReadCompressedUInt32Data+0x398>
    e740:	b	e8a0 <ReadCompressedUInt32Data+0x51c>
    e744:	cmp	sl, #1
    e748:	blt	e8a0 <ReadCompressedUInt32Data+0x51c>
    e74c:	mov	r8, sp
    e750:	mov	r4, sl
    e754:	mov	r0, r7
    e758:	mov	r1, r6
    e75c:	mov	r2, r8
    e760:	mov	r3, r9
    e764:	bl	31f0 <InflateData>
    e768:	ldr	r0, [sp]
    e76c:	subs	r4, r4, #1
    e770:	str	r0, [r5], #4
    e774:	bne	e754 <ReadCompressedUInt32Data+0x3d0>
    e778:	b	e8a0 <ReadCompressedUInt32Data+0x51c>
    e77c:	cmp	sl, #1
    e780:	blt	e8a0 <ReadCompressedUInt32Data+0x51c>
    e784:	mov	r8, sp
    e788:	mov	r4, sl
    e78c:	mov	r0, r7
    e790:	mov	r1, r6
    e794:	mov	r2, r8
    e798:	mov	r3, r9
    e79c:	bl	31f0 <InflateData>
    e7a0:	ldr	r0, [sp]
    e7a4:	subs	r4, r4, #1
    e7a8:	str	r0, [r5], #4
    e7ac:	bne	e78c <ReadCompressedUInt32Data+0x408>
    e7b0:	b	e8a0 <ReadCompressedUInt32Data+0x51c>
    e7b4:	cmp	sl, #1
    e7b8:	blt	e8a0 <ReadCompressedUInt32Data+0x51c>
    e7bc:	mov	r8, sp
    e7c0:	mov	r4, sl
    e7c4:	mov	r0, r7
    e7c8:	mov	r1, r6
    e7cc:	mov	r2, r8
    e7d0:	mov	r3, r9
    e7d4:	bl	31f0 <InflateData>
    e7d8:	vldr	s0, [sp]
    e7dc:	subs	r4, r4, #1
    e7e0:	vcvt.u32.f32	s0, s0
    e7e4:	vmov	r0, s0
    e7e8:	str	r0, [r5], #4
    e7ec:	bne	e7c4 <ReadCompressedUInt32Data+0x440>
    e7f0:	b	e8a0 <ReadCompressedUInt32Data+0x51c>
    e7f4:	cmp	sl, #1
    e7f8:	blt	e8a0 <ReadCompressedUInt32Data+0x51c>
    e7fc:	mov	r8, sp
    e800:	mov	r4, sl
    e804:	mov	r0, r7
    e808:	mov	r1, r6
    e80c:	mov	r2, r8
    e810:	mov	r3, r9
    e814:	bl	31f0 <InflateData>
    e818:	vldr	d16, [sp]
    e81c:	subs	r4, r4, #1
    e820:	vcvt.u32.f64	s0, d16
    e824:	vmov	r0, s0
    e828:	str	r0, [r5], #4
    e82c:	bne	e804 <ReadCompressedUInt32Data+0x480>
    e830:	b	e8a0 <ReadCompressedUInt32Data+0x51c>
    e834:	cmp	sl, #1
    e838:	blt	e8a0 <ReadCompressedUInt32Data+0x51c>
    e83c:	mov	r8, sp
    e840:	mov	r4, sl
    e844:	mov	r0, r7
    e848:	mov	r1, r6
    e84c:	mov	r2, r8
    e850:	mov	r3, r9
    e854:	bl	31f0 <InflateData>
    e858:	ldr	r0, [sp]
    e85c:	subs	r4, r4, #1
    e860:	str	r0, [r5], #4
    e864:	bne	e844 <ReadCompressedUInt32Data+0x4c0>
    e868:	b	e8a0 <ReadCompressedUInt32Data+0x51c>
    e86c:	cmp	sl, #1
    e870:	blt	e8a0 <ReadCompressedUInt32Data+0x51c>
    e874:	mov	r8, sp
    e878:	mov	r4, sl
    e87c:	mov	r0, r7
    e880:	mov	r1, r6
    e884:	mov	r2, r8
    e888:	mov	r3, r9
    e88c:	bl	31f0 <InflateData>
    e890:	ldr	r0, [sp]
    e894:	subs	r4, r4, #1
    e898:	str	r0, [r5], #4
    e89c:	bne	e87c <ReadCompressedUInt32Data+0x4f8>
    e8a0:	mul	r0, r9, sl
    e8a4:	sub	sp, fp, #28
    e8a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000e8ac <ReadInt16Data>:
    e8ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e8b0:	add	fp, sp, #28
    e8b4:	sub	sp, sp, #52	; 0x34
    e8b8:	sub	sp, sp, #2048	; 0x800
    e8bc:	mov	sl, r0
    e8c0:	mov	r0, #0
    e8c4:	cmp	sl, #0
    e8c8:	beq	fd9c <ReadInt16Data+0x14f0>
    e8cc:	cmp	r1, #0
    e8d0:	mov	r9, r1
    e8d4:	ldrne	r1, [sl]
    e8d8:	cmpne	r1, #0
    e8dc:	beq	fd9c <ReadInt16Data+0x14f0>
    e8e0:	mov	r0, r2
    e8e4:	mov	r6, r3
    e8e8:	mov	r5, r2
    e8ec:	bl	193c <Mat_SizeOf@plt>
    e8f0:	mov	r7, r0
    e8f4:	sub	r0, r5, #1
    e8f8:	mov	r1, #0
    e8fc:	str	sl, [sp, #28]
    e900:	cmp	r0, #11
    e904:	str	r1, [sp, #20]
    e908:	str	r7, [sp, #24]
    e90c:	bhi	fb40 <ReadInt16Data+0x1294>
    e910:	add	r1, pc, #4
    e914:	ldr	r0, [r1, r0, lsl #2]
    e918:	add	pc, r1, r0
    e91c:	.word	0x00000030
    e920:	.word	0x00000070
    e924:	.word	0x000000b0
    e928:	.word	0x00000104
    e92c:	.word	0x00000158
    e930:	.word	0x000001ac
    e934:	.word	0x00000200
    e938:	.word	0x00001224
    e93c:	.word	0x0000025c
    e940:	.word	0x00001224
    e944:	.word	0x00001224
    e948:	.word	0x000002b8
    e94c:	cmp	r6, #256	; 0x100
    e950:	bgt	ec38 <ReadInt16Data+0x38c>
    e954:	ldr	r3, [sl]
    e958:	add	r4, sp, #48	; 0x30
    e95c:	mov	r1, r7
    e960:	mov	r2, r6
    e964:	mov	r0, r4
    e968:	bl	18d0 <fread@plt>
    e96c:	mov	r5, r0
    e970:	cmp	r6, #1
    e974:	blt	fd98 <ReadInt16Data+0x14ec>
    e978:	ldrsb	r0, [r4], #1
    e97c:	subs	r6, r6, #1
    e980:	strh	r0, [r9], #2
    e984:	bne	e978 <ReadInt16Data+0xcc>
    e988:	b	fd98 <ReadInt16Data+0x14ec>
    e98c:	cmp	r6, #256	; 0x100
    e990:	bgt	ed1c <ReadInt16Data+0x470>
    e994:	ldr	r3, [sl]
    e998:	add	r4, sp, #48	; 0x30
    e99c:	mov	r1, r7
    e9a0:	mov	r2, r6
    e9a4:	mov	r0, r4
    e9a8:	bl	18d0 <fread@plt>
    e9ac:	mov	r5, r0
    e9b0:	cmp	r6, #1
    e9b4:	blt	fd98 <ReadInt16Data+0x14ec>
    e9b8:	ldrb	r0, [r4], #1
    e9bc:	subs	r6, r6, #1
    e9c0:	strh	r0, [r9], #2
    e9c4:	bne	e9b8 <ReadInt16Data+0x10c>
    e9c8:	b	fd98 <ReadInt16Data+0x14ec>
    e9cc:	ldr	r0, [sl, #20]
    e9d0:	cmp	r0, #0
    e9d4:	beq	ee00 <ReadInt16Data+0x554>
    e9d8:	cmp	r6, #256	; 0x100
    e9dc:	bgt	f004 <ReadInt16Data+0x758>
    e9e0:	ldr	r3, [sl]
    e9e4:	add	r4, sp, #48	; 0x30
    e9e8:	mov	r1, r7
    e9ec:	mov	r2, r6
    e9f0:	mov	r0, r4
    e9f4:	bl	18d0 <fread@plt>
    e9f8:	mov	r5, r0
    e9fc:	cmp	r6, #1
    ea00:	blt	fd98 <ReadInt16Data+0x14ec>
    ea04:	mov	r0, r4
    ea08:	bl	1c50 <Mat_int16Swap>
    ea0c:	strh	r0, [r9], #2
    ea10:	subs	r6, r6, #1
    ea14:	add	r4, r4, #2
    ea18:	bne	ea04 <ReadInt16Data+0x158>
    ea1c:	b	fd98 <ReadInt16Data+0x14ec>
    ea20:	ldr	r0, [sl, #20]
    ea24:	cmp	r0, #0
    ea28:	beq	ee6c <ReadInt16Data+0x5c0>
    ea2c:	cmp	r6, #256	; 0x100
    ea30:	bgt	f0e0 <ReadInt16Data+0x834>
    ea34:	ldr	r3, [sl]
    ea38:	add	r4, sp, #48	; 0x30
    ea3c:	mov	r1, r7
    ea40:	mov	r2, r6
    ea44:	mov	r0, r4
    ea48:	bl	18d0 <fread@plt>
    ea4c:	mov	r5, r0
    ea50:	cmp	r6, #1
    ea54:	blt	fd98 <ReadInt16Data+0x14ec>
    ea58:	mov	r0, r4
    ea5c:	bl	1c64 <Mat_uint16Swap>
    ea60:	strh	r0, [r9], #2
    ea64:	subs	r6, r6, #1
    ea68:	add	r4, r4, #2
    ea6c:	bne	ea58 <ReadInt16Data+0x1ac>
    ea70:	b	fd98 <ReadInt16Data+0x14ec>
    ea74:	ldr	r0, [sl, #20]
    ea78:	cmp	r0, #0
    ea7c:	beq	eea4 <ReadInt16Data+0x5f8>
    ea80:	cmp	r6, #256	; 0x100
    ea84:	bgt	f1bc <ReadInt16Data+0x910>
    ea88:	ldr	r3, [sl]
    ea8c:	add	r4, sp, #48	; 0x30
    ea90:	mov	r1, r7
    ea94:	mov	r2, r6
    ea98:	mov	r0, r4
    ea9c:	bl	18d0 <fread@plt>
    eaa0:	mov	r5, r0
    eaa4:	cmp	r6, #1
    eaa8:	blt	fd98 <ReadInt16Data+0x14ec>
    eaac:	mov	r0, r4
    eab0:	bl	1c28 <Mat_int32Swap>
    eab4:	strh	r0, [r9], #2
    eab8:	subs	r6, r6, #1
    eabc:	add	r4, r4, #4
    eac0:	bne	eaac <ReadInt16Data+0x200>
    eac4:	b	fd98 <ReadInt16Data+0x14ec>
    eac8:	ldr	r0, [sl, #20]
    eacc:	cmp	r0, #0
    ead0:	beq	eee4 <ReadInt16Data+0x638>
    ead4:	cmp	r6, #256	; 0x100
    ead8:	bgt	f2a0 <ReadInt16Data+0x9f4>
    eadc:	ldr	r3, [sl]
    eae0:	add	r4, sp, #48	; 0x30
    eae4:	mov	r1, r7
    eae8:	mov	r2, r6
    eaec:	mov	r0, r4
    eaf0:	bl	18d0 <fread@plt>
    eaf4:	mov	r5, r0
    eaf8:	cmp	r6, #1
    eafc:	blt	fd98 <ReadInt16Data+0x14ec>
    eb00:	mov	r0, r4
    eb04:	bl	1c3c <Mat_uint32Swap>
    eb08:	strh	r0, [r9], #2
    eb0c:	subs	r6, r6, #1
    eb10:	add	r4, r4, #4
    eb14:	bne	eb00 <ReadInt16Data+0x254>
    eb18:	b	fd98 <ReadInt16Data+0x14ec>
    eb1c:	ldr	r0, [sl, #20]
    eb20:	cmp	r0, #0
    eb24:	beq	ef24 <ReadInt16Data+0x678>
    eb28:	cmp	r6, #256	; 0x100
    eb2c:	bgt	f384 <ReadInt16Data+0xad8>
    eb30:	ldr	r3, [sl]
    eb34:	add	r4, sp, #48	; 0x30
    eb38:	mov	r1, r7
    eb3c:	mov	r2, r6
    eb40:	mov	r0, r4
    eb44:	bl	18d0 <fread@plt>
    eb48:	mov	r5, r0
    eb4c:	cmp	r6, #1
    eb50:	blt	fd98 <ReadInt16Data+0x14ec>
    eb54:	mov	r0, r4
    eb58:	bl	1c7c <Mat_floatSwap>
    eb5c:	vcvt.s32.f32	s0, s0
    eb60:	subs	r6, r6, #1
    eb64:	add	r4, r4, #4
    eb68:	vmov	r0, s0
    eb6c:	strh	r0, [r9], #2
    eb70:	bne	eb54 <ReadInt16Data+0x2a8>
    eb74:	b	fd98 <ReadInt16Data+0x14ec>
    eb78:	ldr	r0, [sl, #20]
    eb7c:	cmp	r0, #0
    eb80:	beq	ef70 <ReadInt16Data+0x6c4>
    eb84:	cmp	r6, #256	; 0x100
    eb88:	bgt	f474 <ReadInt16Data+0xbc8>
    eb8c:	ldr	r3, [sl]
    eb90:	add	r4, sp, #48	; 0x30
    eb94:	mov	r1, r7
    eb98:	mov	r2, r6
    eb9c:	mov	r0, r4
    eba0:	bl	18d0 <fread@plt>
    eba4:	mov	r5, r0
    eba8:	cmp	r6, #1
    ebac:	blt	fd98 <ReadInt16Data+0x14ec>
    ebb0:	mov	r0, r4
    ebb4:	bl	1cc0 <Mat_doubleSwap>
    ebb8:	vcvt.s32.f64	s0, d0
    ebbc:	subs	r6, r6, #1
    ebc0:	add	r4, r4, #8
    ebc4:	vmov	r0, s0
    ebc8:	strh	r0, [r9], #2
    ebcc:	bne	ebb0 <ReadInt16Data+0x304>
    ebd0:	b	fd98 <ReadInt16Data+0x14ec>
    ebd4:	ldr	r0, [sl, #20]
    ebd8:	cmp	r0, #0
    ebdc:	beq	efbc <ReadInt16Data+0x710>
    ebe0:	cmp	r6, #256	; 0x100
    ebe4:	bgt	f564 <ReadInt16Data+0xcb8>
    ebe8:	ldr	r3, [sl]
    ebec:	add	r4, sp, #48	; 0x30
    ebf0:	mov	r1, r7
    ebf4:	mov	r2, r6
    ebf8:	mov	r0, r4
    ebfc:	bl	18d0 <fread@plt>
    ec00:	cmp	r6, #1
    ec04:	str	r0, [sp, #20]
    ec08:	blt	fb40 <ReadInt16Data+0x1294>
    ec0c:	mov	r8, r6
    ec10:	mov	r7, r9
    ec14:	mov	r0, r4
    ec18:	bl	1bbc <Mat_int64Swap>
    ec1c:	strh	r0, [r7], #2
    ec20:	subs	r6, r6, #1
    ec24:	add	r4, r4, #8
    ec28:	bne	ec14 <ReadInt16Data+0x368>
    ec2c:	ldr	r7, [sp, #24]
    ec30:	mov	r6, r8
    ec34:	b	fb40 <ReadInt16Data+0x1294>
    ec38:	sub	r0, r6, #256	; 0x100
    ec3c:	add	r1, r9, #512	; 0x200
    ec40:	add	r4, sp, #48	; 0x30
    ec44:	add	r8, sp, #32
    ec48:	mov	r5, #0
    ec4c:	str	r6, [sp, #8]
    ec50:	str	r0, [sp, #20]
    ec54:	mov	r0, #0
    ec58:	mov	sl, r0
    ec5c:	ldr	r0, [sp, #28]
    ec60:	mov	r6, r1
    ec64:	mov	r1, r7
    ec68:	mov	r2, #256	; 0x100
    ec6c:	ldr	r3, [r0]
    ec70:	mov	r0, r4
    ec74:	bl	18d0 <fread@plt>
    ec78:	mov	r1, r9
    ec7c:	mov	r2, #0
    ec80:	ldr	r3, [r4, r2]
    ec84:	str	r3, [sp, #32]
    ec88:	add	r3, r4, r2
    ec8c:	add	r2, r2, #8
    ec90:	ldr	r3, [r3, #4]
    ec94:	cmp	r2, #256	; 0x100
    ec98:	str	r3, [sp, #36]	; 0x24
    ec9c:	vld1.8	{d16}, [r8 :64]
    eca0:	vmovl.s8	q8, d16
    eca4:	vst1.16	{d16-d17}, [r1]!
    eca8:	bne	ec80 <ReadInt16Data+0x3d4>
    ecac:	ldr	r2, [sp, #20]
    ecb0:	add	r5, r0, r5
    ecb4:	add	r0, sl, #256	; 0x100
    ecb8:	add	r9, r9, #512	; 0x200
    ecbc:	add	r1, r6, #512	; 0x200
    ecc0:	cmp	r0, r2
    ecc4:	blt	ec58 <ReadInt16Data+0x3ac>
    ecc8:	ldr	r2, [sp, #8]
    eccc:	cmp	r0, r2
    ecd0:	bge	fd98 <ReadInt16Data+0x14ec>
    ecd4:	mov	r1, r7
    ecd8:	sub	r7, r2, r0
    ecdc:	ldr	r0, [sp, #28]
    ece0:	add	r4, sp, #48	; 0x30
    ece4:	mov	r2, r7
    ece8:	ldr	r3, [r0]
    ecec:	mov	r0, r4
    ecf0:	bl	18d0 <fread@plt>
    ecf4:	add	r5, r0, r5
    ecf8:	cmp	r7, #1
    ecfc:	blt	fd94 <ReadInt16Data+0x14e8>
    ed00:	ldr	r0, [sp, #20]
    ed04:	sub	r0, r0, sl
    ed08:	ldrsb	r1, [r4], #1
    ed0c:	subs	r0, r0, #1
    ed10:	strh	r1, [r6], #2
    ed14:	bne	ed08 <ReadInt16Data+0x45c>
    ed18:	b	fd94 <ReadInt16Data+0x14e8>
    ed1c:	sub	r0, r6, #256	; 0x100
    ed20:	add	r1, r9, #512	; 0x200
    ed24:	add	r4, sp, #48	; 0x30
    ed28:	add	r8, sp, #40	; 0x28
    ed2c:	mov	r5, #0
    ed30:	str	r6, [sp, #8]
    ed34:	str	r0, [sp, #20]
    ed38:	mov	r0, #0
    ed3c:	mov	sl, r0
    ed40:	ldr	r0, [sp, #28]
    ed44:	mov	r6, r1
    ed48:	mov	r1, r7
    ed4c:	mov	r2, #256	; 0x100
    ed50:	ldr	r3, [r0]
    ed54:	mov	r0, r4
    ed58:	bl	18d0 <fread@plt>
    ed5c:	mov	r1, r9
    ed60:	mov	r2, #0
    ed64:	ldr	r3, [r4, r2]
    ed68:	str	r3, [sp, #40]	; 0x28
    ed6c:	add	r3, r4, r2
    ed70:	add	r2, r2, #8
    ed74:	ldr	r3, [r3, #4]
    ed78:	cmp	r2, #256	; 0x100
    ed7c:	str	r3, [sp, #44]	; 0x2c
    ed80:	vld1.8	{d16}, [r8 :64]
    ed84:	vmovl.u8	q8, d16
    ed88:	vst1.16	{d16-d17}, [r1]!
    ed8c:	bne	ed64 <ReadInt16Data+0x4b8>
    ed90:	ldr	r2, [sp, #20]
    ed94:	add	r5, r0, r5
    ed98:	add	r0, sl, #256	; 0x100
    ed9c:	add	r9, r9, #512	; 0x200
    eda0:	add	r1, r6, #512	; 0x200
    eda4:	cmp	r0, r2
    eda8:	blt	ed3c <ReadInt16Data+0x490>
    edac:	ldr	r2, [sp, #8]
    edb0:	cmp	r0, r2
    edb4:	bge	fd98 <ReadInt16Data+0x14ec>
    edb8:	mov	r1, r7
    edbc:	sub	r7, r2, r0
    edc0:	ldr	r0, [sp, #28]
    edc4:	add	r4, sp, #48	; 0x30
    edc8:	mov	r2, r7
    edcc:	ldr	r3, [r0]
    edd0:	mov	r0, r4
    edd4:	bl	18d0 <fread@plt>
    edd8:	add	r5, r0, r5
    eddc:	cmp	r7, #1
    ede0:	blt	fd94 <ReadInt16Data+0x14e8>
    ede4:	ldr	r0, [sp, #20]
    ede8:	sub	r0, r0, sl
    edec:	ldrb	r1, [r4], #1
    edf0:	subs	r0, r0, #1
    edf4:	strh	r1, [r6], #2
    edf8:	bne	edec <ReadInt16Data+0x540>
    edfc:	b	fd94 <ReadInt16Data+0x14e8>
    ee00:	cmp	r6, #256	; 0x100
    ee04:	ble	ee74 <ReadInt16Data+0x5c8>
    ee08:	sub	r0, r6, #256	; 0x100
    ee0c:	lsl	r4, r6, #1
    ee10:	str	r6, [sp, #8]
    ee14:	mov	r6, #0
    ee18:	add	r8, sp, #48	; 0x30
    ee1c:	mov	r5, #0
    ee20:	str	r0, [sp, #20]
    ee24:	ldr	r3, [sl]
    ee28:	mov	r0, r8
    ee2c:	mov	r1, r7
    ee30:	mov	r2, #256	; 0x100
    ee34:	bl	18d0 <fread@plt>
    ee38:	mov	sl, r0
    ee3c:	add	r0, r9, r6, lsl #1
    ee40:	mov	r1, r8
    ee44:	mov	r2, #512	; 0x200
    ee48:	bl	1834 <memcpy@plt>
    ee4c:	ldr	r0, [sp, #20]
    ee50:	add	r5, sl, r5
    ee54:	ldr	sl, [sp, #28]
    ee58:	add	r6, r6, #256	; 0x100
    ee5c:	sub	r4, r4, #512	; 0x200
    ee60:	cmp	r6, r0
    ee64:	blt	ee24 <ReadInt16Data+0x578>
    ee68:	b	f6cc <ReadInt16Data+0xe20>
    ee6c:	cmp	r6, #256	; 0x100
    ee70:	bgt	f66c <ReadInt16Data+0xdc0>
    ee74:	ldr	r3, [sl]
    ee78:	add	r0, sp, #48	; 0x30
    ee7c:	mov	r1, r7
    ee80:	mov	r2, r6
    ee84:	bl	18d0 <fread@plt>
    ee88:	mov	r5, r0
    ee8c:	cmp	r6, #1
    ee90:	blt	fd98 <ReadInt16Data+0x14ec>
    ee94:	lsl	r2, r6, #1
    ee98:	add	r1, sp, #48	; 0x30
    ee9c:	mov	r0, r9
    eea0:	b	f70c <ReadInt16Data+0xe60>
    eea4:	cmp	r6, #256	; 0x100
    eea8:	bgt	f714 <ReadInt16Data+0xe68>
    eeac:	ldr	r3, [sl]
    eeb0:	add	r4, sp, #48	; 0x30
    eeb4:	mov	r1, r7
    eeb8:	mov	r2, r6
    eebc:	mov	r0, r4
    eec0:	bl	18d0 <fread@plt>
    eec4:	mov	r5, r0
    eec8:	cmp	r6, #1
    eecc:	blt	fd98 <ReadInt16Data+0x14ec>
    eed0:	ldr	r0, [r4], #4
    eed4:	subs	r6, r6, #1
    eed8:	strh	r0, [r9], #2
    eedc:	bne	eed0 <ReadInt16Data+0x624>
    eee0:	b	fd98 <ReadInt16Data+0x14ec>
    eee4:	cmp	r6, #256	; 0x100
    eee8:	bgt	f7d8 <ReadInt16Data+0xf2c>
    eeec:	ldr	r3, [sl]
    eef0:	add	r4, sp, #48	; 0x30
    eef4:	mov	r1, r7
    eef8:	mov	r2, r6
    eefc:	mov	r0, r4
    ef00:	bl	18d0 <fread@plt>
    ef04:	mov	r5, r0
    ef08:	cmp	r6, #1
    ef0c:	blt	fd98 <ReadInt16Data+0x14ec>
    ef10:	ldr	r0, [r4], #4
    ef14:	subs	r6, r6, #1
    ef18:	strh	r0, [r9], #2
    ef1c:	bne	ef10 <ReadInt16Data+0x664>
    ef20:	b	fd98 <ReadInt16Data+0x14ec>
    ef24:	cmp	r6, #256	; 0x100
    ef28:	bgt	f89c <ReadInt16Data+0xff0>
    ef2c:	ldr	r3, [sl]
    ef30:	add	r4, sp, #48	; 0x30
    ef34:	mov	r1, r7
    ef38:	mov	r2, r6
    ef3c:	mov	r0, r4
    ef40:	bl	18d0 <fread@plt>
    ef44:	mov	r5, r0
    ef48:	cmp	r6, #1
    ef4c:	blt	fd98 <ReadInt16Data+0x14ec>
    ef50:	vldr	s0, [r4]
    ef54:	subs	r6, r6, #1
    ef58:	add	r4, r4, #4
    ef5c:	vcvt.s32.f32	s0, s0
    ef60:	vmov	r0, s0
    ef64:	strh	r0, [r9], #2
    ef68:	bne	ef50 <ReadInt16Data+0x6a4>
    ef6c:	b	fd98 <ReadInt16Data+0x14ec>
    ef70:	cmp	r6, #256	; 0x100
    ef74:	bgt	f970 <ReadInt16Data+0x10c4>
    ef78:	ldr	r3, [sl]
    ef7c:	add	r4, sp, #48	; 0x30
    ef80:	mov	r1, r7
    ef84:	mov	r2, r6
    ef88:	mov	r0, r4
    ef8c:	bl	18d0 <fread@plt>
    ef90:	mov	r5, r0
    ef94:	cmp	r6, #1
    ef98:	blt	fd98 <ReadInt16Data+0x14ec>
    ef9c:	vldr	d16, [r4]
    efa0:	subs	r6, r6, #1
    efa4:	add	r4, r4, #8
    efa8:	vcvt.s32.f64	s0, d16
    efac:	vmov	r0, s0
    efb0:	strh	r0, [r9], #2
    efb4:	bne	ef9c <ReadInt16Data+0x6f0>
    efb8:	b	fd98 <ReadInt16Data+0x14ec>
    efbc:	cmp	r6, #256	; 0x100
    efc0:	bgt	fa4c <ReadInt16Data+0x11a0>
    efc4:	ldr	r3, [sl]
    efc8:	add	r4, sp, #48	; 0x30
    efcc:	mov	r1, r7
    efd0:	mov	r2, r6
    efd4:	mov	r0, r4
    efd8:	bl	18d0 <fread@plt>
    efdc:	cmp	r6, #1
    efe0:	str	r0, [sp, #20]
    efe4:	blt	fb40 <ReadInt16Data+0x1294>
    efe8:	mov	r0, r6
    efec:	mov	r1, r9
    eff0:	ldrh	r2, [r4], #8
    eff4:	subs	r0, r0, #1
    eff8:	strh	r2, [r1], #2
    effc:	bne	eff0 <ReadInt16Data+0x744>
    f000:	b	fb40 <ReadInt16Data+0x1294>
    f004:	sub	r0, r6, #256	; 0x100
    f008:	add	r1, r9, #512	; 0x200
    f00c:	add	r4, sp, #48	; 0x30
    f010:	mov	r5, #0
    f014:	str	r6, [sp, #8]
    f018:	str	r0, [sp, #20]
    f01c:	mov	r0, #0
    f020:	mov	sl, r0
    f024:	ldr	r0, [sp, #28]
    f028:	mov	r8, r1
    f02c:	mov	r1, r7
    f030:	mov	r2, #256	; 0x100
    f034:	ldr	r3, [r0]
    f038:	mov	r0, r4
    f03c:	bl	18d0 <fread@plt>
    f040:	mov	r6, r0
    f044:	mov	r7, #0
    f048:	add	r0, r4, r7
    f04c:	bl	1c50 <Mat_int16Swap>
    f050:	add	r1, r9, r7
    f054:	add	r7, r7, #2
    f058:	cmp	r7, #512	; 0x200
    f05c:	strh	r0, [r1]
    f060:	bne	f048 <ReadInt16Data+0x79c>
    f064:	ldr	r2, [sp, #20]
    f068:	ldr	r7, [sp, #24]
    f06c:	add	r0, sl, #256	; 0x100
    f070:	add	r5, r6, r5
    f074:	add	r9, r9, #512	; 0x200
    f078:	add	r1, r8, #512	; 0x200
    f07c:	cmp	r0, r2
    f080:	blt	f020 <ReadInt16Data+0x774>
    f084:	ldr	r1, [sp, #8]
    f088:	cmp	r0, r1
    f08c:	bge	fd98 <ReadInt16Data+0x14ec>
    f090:	sub	r6, r1, r0
    f094:	ldr	r0, [sp, #28]
    f098:	add	r4, sp, #48	; 0x30
    f09c:	mov	r1, r7
    f0a0:	mov	r2, r6
    f0a4:	ldr	r3, [r0]
    f0a8:	mov	r0, r4
    f0ac:	bl	18d0 <fread@plt>
    f0b0:	add	r5, r0, r5
    f0b4:	cmp	r6, #1
    f0b8:	blt	fd98 <ReadInt16Data+0x14ec>
    f0bc:	ldr	r0, [sp, #20]
    f0c0:	sub	r6, r0, sl
    f0c4:	mov	r0, r4
    f0c8:	bl	1c50 <Mat_int16Swap>
    f0cc:	strh	r0, [r8], #2
    f0d0:	subs	r6, r6, #1
    f0d4:	add	r4, r4, #2
    f0d8:	bne	f0c4 <ReadInt16Data+0x818>
    f0dc:	b	fd98 <ReadInt16Data+0x14ec>
    f0e0:	sub	r0, r6, #256	; 0x100
    f0e4:	add	r1, r9, #512	; 0x200
    f0e8:	add	r4, sp, #48	; 0x30
    f0ec:	mov	r5, #0
    f0f0:	str	r6, [sp, #8]
    f0f4:	str	r0, [sp, #20]
    f0f8:	mov	r0, #0
    f0fc:	mov	sl, r0
    f100:	ldr	r0, [sp, #28]
    f104:	mov	r8, r1
    f108:	mov	r1, r7
    f10c:	mov	r2, #256	; 0x100
    f110:	ldr	r3, [r0]
    f114:	mov	r0, r4
    f118:	bl	18d0 <fread@plt>
    f11c:	mov	r6, r0
    f120:	mov	r7, #0
    f124:	add	r0, r4, r7
    f128:	bl	1c64 <Mat_uint16Swap>
    f12c:	add	r1, r9, r7
    f130:	add	r7, r7, #2
    f134:	cmp	r7, #512	; 0x200
    f138:	strh	r0, [r1]
    f13c:	bne	f124 <ReadInt16Data+0x878>
    f140:	ldr	r2, [sp, #20]
    f144:	ldr	r7, [sp, #24]
    f148:	add	r0, sl, #256	; 0x100
    f14c:	add	r5, r6, r5
    f150:	add	r9, r9, #512	; 0x200
    f154:	add	r1, r8, #512	; 0x200
    f158:	cmp	r0, r2
    f15c:	blt	f0fc <ReadInt16Data+0x850>
    f160:	ldr	r1, [sp, #8]
    f164:	cmp	r0, r1
    f168:	bge	fd98 <ReadInt16Data+0x14ec>
    f16c:	sub	r6, r1, r0
    f170:	ldr	r0, [sp, #28]
    f174:	add	r4, sp, #48	; 0x30
    f178:	mov	r1, r7
    f17c:	mov	r2, r6
    f180:	ldr	r3, [r0]
    f184:	mov	r0, r4
    f188:	bl	18d0 <fread@plt>
    f18c:	add	r5, r0, r5
    f190:	cmp	r6, #1
    f194:	blt	fd98 <ReadInt16Data+0x14ec>
    f198:	ldr	r0, [sp, #20]
    f19c:	sub	r6, r0, sl
    f1a0:	mov	r0, r4
    f1a4:	bl	1c64 <Mat_uint16Swap>
    f1a8:	strh	r0, [r8], #2
    f1ac:	subs	r6, r6, #1
    f1b0:	add	r4, r4, #2
    f1b4:	bne	f1a0 <ReadInt16Data+0x8f4>
    f1b8:	b	fd98 <ReadInt16Data+0x14ec>
    f1bc:	sub	r0, r6, #256	; 0x100
    f1c0:	add	r1, r9, #512	; 0x200
    f1c4:	mov	r5, #0
    f1c8:	str	r6, [sp, #8]
    f1cc:	str	r0, [sp, #16]
    f1d0:	mov	r0, #0
    f1d4:	ldr	r3, [sl]
    f1d8:	add	r6, sp, #48	; 0x30
    f1dc:	str	r0, [sp, #20]
    f1e0:	mov	r8, r1
    f1e4:	mov	r1, r7
    f1e8:	mov	r2, #256	; 0x100
    f1ec:	mov	r0, r6
    f1f0:	bl	18d0 <fread@plt>
    f1f4:	mov	r4, r0
    f1f8:	mov	r7, #0
    f1fc:	mov	r0, r6
    f200:	add	sl, r9, r7
    f204:	bl	1c28 <Mat_int32Swap>
    f208:	add	r7, r7, #2
    f20c:	add	r6, r6, #4
    f210:	strh	r0, [sl]
    f214:	cmp	r7, #512	; 0x200
    f218:	bne	f1fc <ReadInt16Data+0x950>
    f21c:	ldr	r0, [sp, #20]
    f220:	ldr	r2, [sp, #16]
    f224:	ldr	r7, [sp, #24]
    f228:	ldr	sl, [sp, #28]
    f22c:	add	r5, r4, r5
    f230:	add	r9, r9, #512	; 0x200
    f234:	add	r1, r8, #512	; 0x200
    f238:	add	r0, r0, #256	; 0x100
    f23c:	cmp	r0, r2
    f240:	blt	f1d4 <ReadInt16Data+0x928>
    f244:	ldr	r1, [sp, #8]
    f248:	cmp	r0, r1
    f24c:	bge	fd98 <ReadInt16Data+0x14ec>
    f250:	ldr	r3, [sl]
    f254:	sub	r6, r1, r0
    f258:	add	r4, sp, #48	; 0x30
    f25c:	mov	r1, r7
    f260:	mov	r0, r4
    f264:	mov	r2, r6
    f268:	bl	18d0 <fread@plt>
    f26c:	add	r5, r0, r5
    f270:	cmp	r6, #1
    f274:	blt	fd98 <ReadInt16Data+0x14ec>
    f278:	ldr	r0, [sp, #16]
    f27c:	ldr	r1, [sp, #20]
    f280:	sub	r6, r0, r1
    f284:	mov	r0, r4
    f288:	bl	1c28 <Mat_int32Swap>
    f28c:	strh	r0, [r8], #2
    f290:	subs	r6, r6, #1
    f294:	add	r4, r4, #4
    f298:	bne	f284 <ReadInt16Data+0x9d8>
    f29c:	b	fd98 <ReadInt16Data+0x14ec>
    f2a0:	sub	r0, r6, #256	; 0x100
    f2a4:	add	r1, r9, #512	; 0x200
    f2a8:	mov	r5, #0
    f2ac:	str	r6, [sp, #8]
    f2b0:	str	r0, [sp, #16]
    f2b4:	mov	r0, #0
    f2b8:	ldr	r3, [sl]
    f2bc:	add	r6, sp, #48	; 0x30
    f2c0:	str	r0, [sp, #20]
    f2c4:	mov	r8, r1
    f2c8:	mov	r1, r7
    f2cc:	mov	r2, #256	; 0x100
    f2d0:	mov	r0, r6
    f2d4:	bl	18d0 <fread@plt>
    f2d8:	mov	r4, r0
    f2dc:	mov	r7, #0
    f2e0:	mov	r0, r6
    f2e4:	add	sl, r9, r7
    f2e8:	bl	1c3c <Mat_uint32Swap>
    f2ec:	add	r7, r7, #2
    f2f0:	add	r6, r6, #4
    f2f4:	strh	r0, [sl]
    f2f8:	cmp	r7, #512	; 0x200
    f2fc:	bne	f2e0 <ReadInt16Data+0xa34>
    f300:	ldr	r0, [sp, #20]
    f304:	ldr	r2, [sp, #16]
    f308:	ldr	r7, [sp, #24]
    f30c:	ldr	sl, [sp, #28]
    f310:	add	r5, r4, r5
    f314:	add	r9, r9, #512	; 0x200
    f318:	add	r1, r8, #512	; 0x200
    f31c:	add	r0, r0, #256	; 0x100
    f320:	cmp	r0, r2
    f324:	blt	f2b8 <ReadInt16Data+0xa0c>
    f328:	ldr	r1, [sp, #8]
    f32c:	cmp	r0, r1
    f330:	bge	fd98 <ReadInt16Data+0x14ec>
    f334:	ldr	r3, [sl]
    f338:	sub	r6, r1, r0
    f33c:	add	r4, sp, #48	; 0x30
    f340:	mov	r1, r7
    f344:	mov	r0, r4
    f348:	mov	r2, r6
    f34c:	bl	18d0 <fread@plt>
    f350:	add	r5, r0, r5
    f354:	cmp	r6, #1
    f358:	blt	fd98 <ReadInt16Data+0x14ec>
    f35c:	ldr	r0, [sp, #16]
    f360:	ldr	r1, [sp, #20]
    f364:	sub	r6, r0, r1
    f368:	mov	r0, r4
    f36c:	bl	1c3c <Mat_uint32Swap>
    f370:	strh	r0, [r8], #2
    f374:	subs	r6, r6, #1
    f378:	add	r4, r4, #4
    f37c:	bne	f368 <ReadInt16Data+0xabc>
    f380:	b	fd98 <ReadInt16Data+0x14ec>
    f384:	sub	r0, r6, #256	; 0x100
    f388:	add	r1, r9, #512	; 0x200
    f38c:	mov	r5, #0
    f390:	str	r6, [sp, #8]
    f394:	str	r0, [sp, #20]
    f398:	mov	r0, #0
    f39c:	mov	sl, r0
    f3a0:	ldr	r0, [sp, #28]
    f3a4:	add	r6, sp, #48	; 0x30
    f3a8:	mov	r8, r1
    f3ac:	mov	r1, r7
    f3b0:	mov	r2, #256	; 0x100
    f3b4:	ldr	r3, [r0]
    f3b8:	mov	r0, r6
    f3bc:	bl	18d0 <fread@plt>
    f3c0:	mov	r4, r0
    f3c4:	mov	r7, #0
    f3c8:	mov	r0, r6
    f3cc:	bl	1c7c <Mat_floatSwap>
    f3d0:	vcvt.s32.f32	s0, s0
    f3d4:	add	r0, r9, r7
    f3d8:	add	r7, r7, #2
    f3dc:	add	r6, r6, #4
    f3e0:	vmov	r1, s0
    f3e4:	cmp	r7, #512	; 0x200
    f3e8:	strh	r1, [r0]
    f3ec:	bne	f3c8 <ReadInt16Data+0xb1c>
    f3f0:	ldr	r2, [sp, #20]
    f3f4:	ldr	r7, [sp, #24]
    f3f8:	add	r0, sl, #256	; 0x100
    f3fc:	add	r5, r4, r5
    f400:	add	r9, r9, #512	; 0x200
    f404:	add	r1, r8, #512	; 0x200
    f408:	cmp	r0, r2
    f40c:	blt	f39c <ReadInt16Data+0xaf0>
    f410:	ldr	r1, [sp, #8]
    f414:	cmp	r0, r1
    f418:	bge	fd98 <ReadInt16Data+0x14ec>
    f41c:	sub	r6, r1, r0
    f420:	ldr	r0, [sp, #28]
    f424:	add	r4, sp, #48	; 0x30
    f428:	mov	r1, r7
    f42c:	mov	r2, r6
    f430:	ldr	r3, [r0]
    f434:	mov	r0, r4
    f438:	bl	18d0 <fread@plt>
    f43c:	add	r5, r0, r5
    f440:	cmp	r6, #1
    f444:	blt	fd98 <ReadInt16Data+0x14ec>
    f448:	ldr	r0, [sp, #20]
    f44c:	sub	r6, r0, sl
    f450:	mov	r0, r4
    f454:	bl	1c7c <Mat_floatSwap>
    f458:	vcvt.s32.f32	s0, s0
    f45c:	subs	r6, r6, #1
    f460:	add	r4, r4, #4
    f464:	vmov	r0, s0
    f468:	strh	r0, [r8], #2
    f46c:	bne	f450 <ReadInt16Data+0xba4>
    f470:	b	fd98 <ReadInt16Data+0x14ec>
    f474:	sub	r0, r6, #256	; 0x100
    f478:	add	r1, r9, #512	; 0x200
    f47c:	mov	r5, #0
    f480:	str	r6, [sp, #8]
    f484:	str	r0, [sp, #20]
    f488:	mov	r0, #0
    f48c:	mov	sl, r0
    f490:	ldr	r0, [sp, #28]
    f494:	add	r6, sp, #48	; 0x30
    f498:	mov	r8, r1
    f49c:	mov	r1, r7
    f4a0:	mov	r2, #256	; 0x100
    f4a4:	ldr	r3, [r0]
    f4a8:	mov	r0, r6
    f4ac:	bl	18d0 <fread@plt>
    f4b0:	mov	r4, r0
    f4b4:	mov	r7, #0
    f4b8:	mov	r0, r6
    f4bc:	bl	1cc0 <Mat_doubleSwap>
    f4c0:	vcvt.s32.f64	s0, d0
    f4c4:	add	r0, r9, r7
    f4c8:	add	r7, r7, #2
    f4cc:	add	r6, r6, #8
    f4d0:	vmov	r1, s0
    f4d4:	cmp	r7, #512	; 0x200
    f4d8:	strh	r1, [r0]
    f4dc:	bne	f4b8 <ReadInt16Data+0xc0c>
    f4e0:	ldr	r2, [sp, #20]
    f4e4:	ldr	r7, [sp, #24]
    f4e8:	add	r0, sl, #256	; 0x100
    f4ec:	add	r5, r4, r5
    f4f0:	add	r9, r9, #512	; 0x200
    f4f4:	add	r1, r8, #512	; 0x200
    f4f8:	cmp	r0, r2
    f4fc:	blt	f48c <ReadInt16Data+0xbe0>
    f500:	ldr	r1, [sp, #8]
    f504:	cmp	r0, r1
    f508:	bge	fd98 <ReadInt16Data+0x14ec>
    f50c:	sub	r6, r1, r0
    f510:	ldr	r0, [sp, #28]
    f514:	add	r4, sp, #48	; 0x30
    f518:	mov	r1, r7
    f51c:	mov	r2, r6
    f520:	ldr	r3, [r0]
    f524:	mov	r0, r4
    f528:	bl	18d0 <fread@plt>
    f52c:	add	r5, r0, r5
    f530:	cmp	r6, #1
    f534:	blt	fd98 <ReadInt16Data+0x14ec>
    f538:	ldr	r0, [sp, #20]
    f53c:	sub	r6, r0, sl
    f540:	mov	r0, r4
    f544:	bl	1cc0 <Mat_doubleSwap>
    f548:	vcvt.s32.f64	s0, d0
    f54c:	subs	r6, r6, #1
    f550:	add	r4, r4, #8
    f554:	vmov	r0, s0
    f558:	strh	r0, [r8], #2
    f55c:	bne	f540 <ReadInt16Data+0xc94>
    f560:	b	fd98 <ReadInt16Data+0x14ec>
    f564:	sub	r0, r6, #256	; 0x100
    f568:	mov	r2, #0
    f56c:	add	r1, r9, #512	; 0x200
    f570:	mov	r7, r9
    f574:	str	r5, [sp, #4]
    f578:	str	r6, [sp, #8]
    f57c:	str	r0, [sp, #12]
    f580:	mov	r0, #0
    f584:	str	r2, [sp, #20]
    f588:	str	r1, [sp, #16]
    f58c:	ldr	r3, [sl]
    f590:	ldr	r1, [sp, #24]
    f594:	add	r4, sp, #48	; 0x30
    f598:	mov	r5, r0
    f59c:	mov	r2, #256	; 0x100
    f5a0:	mov	r0, r4
    f5a4:	bl	18d0 <fread@plt>
    f5a8:	mov	r8, r0
    f5ac:	mov	sl, #0
    f5b0:	mov	r0, r4
    f5b4:	add	r6, r7, sl
    f5b8:	bl	1bbc <Mat_int64Swap>
    f5bc:	add	sl, sl, #2
    f5c0:	add	r4, r4, #8
    f5c4:	strh	r0, [r6]
    f5c8:	cmp	sl, #512	; 0x200
    f5cc:	bne	f5b0 <ReadInt16Data+0xd04>
    f5d0:	ldr	r0, [sp, #20]
    f5d4:	ldr	r2, [sp, #12]
    f5d8:	ldr	sl, [sp, #28]
    f5dc:	add	r7, r7, #512	; 0x200
    f5e0:	add	r0, r8, r0
    f5e4:	str	r0, [sp, #20]
    f5e8:	ldr	r0, [sp, #16]
    f5ec:	add	r1, r0, #512	; 0x200
    f5f0:	mov	r0, r5
    f5f4:	add	r0, r5, #256	; 0x100
    f5f8:	cmp	r0, r2
    f5fc:	blt	f588 <ReadInt16Data+0xcdc>
    f600:	ldr	r6, [sp, #8]
    f604:	cmp	r0, r6
    f608:	bge	f664 <ReadInt16Data+0xdb8>
    f60c:	ldr	r7, [sp, #24]
    f610:	ldr	r3, [sl]
    f614:	sub	r8, r6, r0
    f618:	add	r4, sp, #48	; 0x30
    f61c:	mov	r0, r4
    f620:	mov	r2, r8
    f624:	mov	r1, r7
    f628:	bl	18d0 <fread@plt>
    f62c:	ldr	r1, [sp, #20]
    f630:	cmp	r8, #1
    f634:	add	r1, r0, r1
    f638:	str	r1, [sp, #20]
    f63c:	blt	fb3c <ReadInt16Data+0x1290>
    f640:	ldr	r0, [sp, #12]
    f644:	sub	r7, r0, r5
    f648:	ldr	r5, [sp, #16]
    f64c:	mov	r0, r4
    f650:	bl	1bbc <Mat_int64Swap>
    f654:	strh	r0, [r5], #2
    f658:	subs	r7, r7, #1
    f65c:	add	r4, r4, #8
    f660:	bne	f64c <ReadInt16Data+0xda0>
    f664:	ldr	r7, [sp, #24]
    f668:	b	fb3c <ReadInt16Data+0x1290>
    f66c:	sub	r0, r6, #256	; 0x100
    f670:	lsl	r4, r6, #1
    f674:	str	r6, [sp, #8]
    f678:	mov	r6, #0
    f67c:	add	r8, sp, #48	; 0x30
    f680:	mov	r5, #0
    f684:	str	r0, [sp, #20]
    f688:	ldr	r3, [sl]
    f68c:	mov	r0, r8
    f690:	mov	r1, r7
    f694:	mov	r2, #256	; 0x100
    f698:	bl	18d0 <fread@plt>
    f69c:	mov	sl, r0
    f6a0:	add	r0, r9, r6, lsl #1
    f6a4:	mov	r1, r8
    f6a8:	mov	r2, #512	; 0x200
    f6ac:	bl	1834 <memcpy@plt>
    f6b0:	ldr	r0, [sp, #20]
    f6b4:	add	r5, sl, r5
    f6b8:	ldr	sl, [sp, #28]
    f6bc:	add	r6, r6, #256	; 0x100
    f6c0:	sub	r4, r4, #512	; 0x200
    f6c4:	cmp	r6, r0
    f6c8:	blt	f688 <ReadInt16Data+0xddc>
    f6cc:	ldr	r0, [sp, #8]
    f6d0:	cmp	r6, r0
    f6d4:	bge	fd94 <ReadInt16Data+0x14e8>
    f6d8:	ldr	r7, [sp, #24]
    f6dc:	ldr	r3, [sl]
    f6e0:	sub	r8, r0, r6
    f6e4:	add	r0, sp, #48	; 0x30
    f6e8:	mov	r2, r8
    f6ec:	mov	r1, r7
    f6f0:	bl	18d0 <fread@plt>
    f6f4:	add	r5, r0, r5
    f6f8:	cmp	r8, #1
    f6fc:	blt	fd98 <ReadInt16Data+0x14ec>
    f700:	add	r0, r9, r6, lsl #1
    f704:	add	r1, sp, #48	; 0x30
    f708:	mov	r2, r4
    f70c:	bl	1834 <memcpy@plt>
    f710:	b	fd98 <ReadInt16Data+0x14ec>
    f714:	add	r1, r9, #512	; 0x200
    f718:	sub	r8, r6, #256	; 0x100
    f71c:	mov	r0, #0
    f720:	add	r4, sp, #48	; 0x30
    f724:	mov	r5, #0
    f728:	str	r6, [sp, #8]
    f72c:	mov	sl, r0
    f730:	ldr	r0, [sp, #28]
    f734:	mov	r6, r1
    f738:	mov	r1, r7
    f73c:	mov	r2, #256	; 0x100
    f740:	ldr	r3, [r0]
    f744:	mov	r0, r4
    f748:	bl	18d0 <fread@plt>
    f74c:	mov	r1, #0
    f750:	mov	r2, r4
    f754:	vld1.32	{d16-d17}, [r2]!
    f758:	add	r3, r9, r1
    f75c:	add	r1, r1, #8
    f760:	cmp	r1, #512	; 0x200
    f764:	vmovn.i32	d16, q8
    f768:	vst1.16	{d16}, [r3]
    f76c:	bne	f754 <ReadInt16Data+0xea8>
    f770:	add	r5, r0, r5
    f774:	add	r0, sl, #256	; 0x100
    f778:	add	r9, r9, #512	; 0x200
    f77c:	add	r1, r6, #512	; 0x200
    f780:	cmp	r0, r8
    f784:	blt	f72c <ReadInt16Data+0xe80>
    f788:	ldr	r2, [sp, #8]
    f78c:	cmp	r0, r2
    f790:	bge	fd98 <ReadInt16Data+0x14ec>
    f794:	mov	r1, r7
    f798:	sub	r7, r2, r0
    f79c:	ldr	r0, [sp, #28]
    f7a0:	add	r4, sp, #48	; 0x30
    f7a4:	mov	r2, r7
    f7a8:	ldr	r3, [r0]
    f7ac:	mov	r0, r4
    f7b0:	bl	18d0 <fread@plt>
    f7b4:	add	r5, r0, r5
    f7b8:	cmp	r7, #1
    f7bc:	blt	fd94 <ReadInt16Data+0x14e8>
    f7c0:	sub	r0, r8, sl
    f7c4:	ldr	r1, [r4], #4
    f7c8:	subs	r0, r0, #1
    f7cc:	strh	r1, [r6], #2
    f7d0:	bne	f7c4 <ReadInt16Data+0xf18>
    f7d4:	b	fd94 <ReadInt16Data+0x14e8>
    f7d8:	add	r1, r9, #512	; 0x200
    f7dc:	sub	r8, r6, #256	; 0x100
    f7e0:	mov	r0, #0
    f7e4:	add	r4, sp, #48	; 0x30
    f7e8:	mov	r5, #0
    f7ec:	str	r6, [sp, #8]
    f7f0:	mov	sl, r0
    f7f4:	ldr	r0, [sp, #28]
    f7f8:	mov	r6, r1
    f7fc:	mov	r1, r7
    f800:	mov	r2, #256	; 0x100
    f804:	ldr	r3, [r0]
    f808:	mov	r0, r4
    f80c:	bl	18d0 <fread@plt>
    f810:	mov	r1, #0
    f814:	mov	r2, r4
    f818:	vld1.32	{d16-d17}, [r2]!
    f81c:	add	r3, r9, r1
    f820:	add	r1, r1, #8
    f824:	cmp	r1, #512	; 0x200
    f828:	vmovn.i32	d16, q8
    f82c:	vst1.16	{d16}, [r3]
    f830:	bne	f818 <ReadInt16Data+0xf6c>
    f834:	add	r5, r0, r5
    f838:	add	r0, sl, #256	; 0x100
    f83c:	add	r9, r9, #512	; 0x200
    f840:	add	r1, r6, #512	; 0x200
    f844:	cmp	r0, r8
    f848:	blt	f7f0 <ReadInt16Data+0xf44>
    f84c:	ldr	r2, [sp, #8]
    f850:	cmp	r0, r2
    f854:	bge	fd98 <ReadInt16Data+0x14ec>
    f858:	mov	r1, r7
    f85c:	sub	r7, r2, r0
    f860:	ldr	r0, [sp, #28]
    f864:	add	r4, sp, #48	; 0x30
    f868:	mov	r2, r7
    f86c:	ldr	r3, [r0]
    f870:	mov	r0, r4
    f874:	bl	18d0 <fread@plt>
    f878:	add	r5, r0, r5
    f87c:	cmp	r7, #1
    f880:	blt	fd94 <ReadInt16Data+0x14e8>
    f884:	sub	r0, r8, sl
    f888:	ldr	r1, [r4], #4
    f88c:	subs	r0, r0, #1
    f890:	strh	r1, [r6], #2
    f894:	bne	f888 <ReadInt16Data+0xfdc>
    f898:	b	fd94 <ReadInt16Data+0x14e8>
    f89c:	add	r1, r9, #512	; 0x200
    f8a0:	sub	r8, r6, #256	; 0x100
    f8a4:	mov	r0, #0
    f8a8:	add	r4, sp, #48	; 0x30
    f8ac:	mov	r5, #0
    f8b0:	str	r6, [sp, #8]
    f8b4:	mov	sl, r0
    f8b8:	ldr	r0, [sp, #28]
    f8bc:	mov	r6, r1
    f8c0:	mov	r1, r7
    f8c4:	mov	r2, #256	; 0x100
    f8c8:	ldr	r3, [r0]
    f8cc:	mov	r0, r4
    f8d0:	bl	18d0 <fread@plt>
    f8d4:	mov	r1, #0
    f8d8:	mov	r2, r4
    f8dc:	vld1.32	{d16-d17}, [r2]!
    f8e0:	add	r3, r9, r1
    f8e4:	add	r1, r1, #8
    f8e8:	cmp	r1, #512	; 0x200
    f8ec:	vcvt.s32.f32	q8, q8
    f8f0:	vmovn.i32	d16, q8
    f8f4:	vst1.16	{d16}, [r3]
    f8f8:	bne	f8dc <ReadInt16Data+0x1030>
    f8fc:	add	r5, r0, r5
    f900:	add	r0, sl, #256	; 0x100
    f904:	add	r9, r9, #512	; 0x200
    f908:	add	r1, r6, #512	; 0x200
    f90c:	cmp	r0, r8
    f910:	blt	f8b4 <ReadInt16Data+0x1008>
    f914:	ldr	r2, [sp, #8]
    f918:	cmp	r0, r2
    f91c:	bge	fd98 <ReadInt16Data+0x14ec>
    f920:	mov	r1, r7
    f924:	sub	r7, r2, r0
    f928:	ldr	r0, [sp, #28]
    f92c:	add	r4, sp, #48	; 0x30
    f930:	mov	r2, r7
    f934:	ldr	r3, [r0]
    f938:	mov	r0, r4
    f93c:	bl	18d0 <fread@plt>
    f940:	add	r5, r0, r5
    f944:	cmp	r7, #1
    f948:	blt	fd94 <ReadInt16Data+0x14e8>
    f94c:	sub	r0, r8, sl
    f950:	vldr	s0, [r4]
    f954:	subs	r0, r0, #1
    f958:	add	r4, r4, #4
    f95c:	vcvt.s32.f32	s0, s0
    f960:	vmov	r1, s0
    f964:	strh	r1, [r6], #2
    f968:	bne	f950 <ReadInt16Data+0x10a4>
    f96c:	b	fd94 <ReadInt16Data+0x14e8>
    f970:	add	r1, r9, #512	; 0x200
    f974:	sub	r8, r6, #256	; 0x100
    f978:	mov	r0, #0
    f97c:	add	r4, sp, #48	; 0x30
    f980:	mov	r5, #0
    f984:	str	r6, [sp, #8]
    f988:	mov	sl, r0
    f98c:	ldr	r0, [sp, #28]
    f990:	mov	r6, r1
    f994:	mov	r1, r7
    f998:	mov	r2, #256	; 0x100
    f99c:	ldr	r3, [r0]
    f9a0:	mov	r0, r4
    f9a4:	bl	18d0 <fread@plt>
    f9a8:	mov	r1, #0
    f9ac:	mov	r2, r4
    f9b0:	vldr	d16, [r2]
    f9b4:	add	r3, r9, r1
    f9b8:	add	r1, r1, #2
    f9bc:	add	r2, r2, #8
    f9c0:	cmp	r1, #512	; 0x200
    f9c4:	vcvt.s32.f64	s0, d16
    f9c8:	vmov	r7, s0
    f9cc:	strh	r7, [r3]
    f9d0:	bne	f9b0 <ReadInt16Data+0x1104>
    f9d4:	ldr	r7, [sp, #24]
    f9d8:	add	r5, r0, r5
    f9dc:	add	r0, sl, #256	; 0x100
    f9e0:	add	r9, r9, #512	; 0x200
    f9e4:	add	r1, r6, #512	; 0x200
    f9e8:	cmp	r0, r8
    f9ec:	blt	f988 <ReadInt16Data+0x10dc>
    f9f0:	ldr	r2, [sp, #8]
    f9f4:	cmp	r0, r2
    f9f8:	bge	fd98 <ReadInt16Data+0x14ec>
    f9fc:	mov	r1, r7
    fa00:	sub	r7, r2, r0
    fa04:	ldr	r0, [sp, #28]
    fa08:	add	r4, sp, #48	; 0x30
    fa0c:	mov	r2, r7
    fa10:	ldr	r3, [r0]
    fa14:	mov	r0, r4
    fa18:	bl	18d0 <fread@plt>
    fa1c:	add	r5, r0, r5
    fa20:	cmp	r7, #1
    fa24:	blt	fd94 <ReadInt16Data+0x14e8>
    fa28:	sub	r0, r8, sl
    fa2c:	vldr	d16, [r4]
    fa30:	subs	r0, r0, #1
    fa34:	add	r4, r4, #8
    fa38:	vcvt.s32.f64	s0, d16
    fa3c:	vmov	r1, s0
    fa40:	strh	r1, [r6], #2
    fa44:	bne	fa2c <ReadInt16Data+0x1180>
    fa48:	b	fd94 <ReadInt16Data+0x14e8>
    fa4c:	str	r5, [sp, #4]
    fa50:	add	r1, r9, #512	; 0x200
    fa54:	sub	r8, r6, #256	; 0x100
    fa58:	mov	r0, #0
    fa5c:	add	r4, sp, #48	; 0x30
    fa60:	mov	r7, r9
    fa64:	mov	r5, #0
    fa68:	str	r6, [sp, #8]
    fa6c:	mov	sl, r0
    fa70:	ldr	r0, [sp, #28]
    fa74:	mov	r6, r1
    fa78:	ldr	r1, [sp, #24]
    fa7c:	mov	r2, #256	; 0x100
    fa80:	ldr	r3, [r0]
    fa84:	mov	r0, r4
    fa88:	bl	18d0 <fread@plt>
    fa8c:	mov	r1, #0
    fa90:	mov	r2, r4
    fa94:	vld1.64	{d16-d17}, [r2]!
    fa98:	add	r3, r7, r1
    fa9c:	add	r1, r1, #4
    faa0:	cmp	r1, #512	; 0x200
    faa4:	vmovn.i64	d16, q8
    faa8:	vuzp.16	d16, d17
    faac:	vst1.32	{d16[0]}, [r3]
    fab0:	bne	fa94 <ReadInt16Data+0x11e8>
    fab4:	add	r5, r0, r5
    fab8:	add	r0, sl, #256	; 0x100
    fabc:	add	r7, r7, #512	; 0x200
    fac0:	add	r1, r6, #512	; 0x200
    fac4:	cmp	r0, r8
    fac8:	blt	fa6c <ReadInt16Data+0x11c0>
    facc:	ldr	r1, [sp, #8]
    fad0:	cmp	r0, r1
    fad4:	bge	fb2c <ReadInt16Data+0x1280>
    fad8:	sub	r2, r1, r0
    fadc:	ldr	r0, [sp, #28]
    fae0:	ldr	r7, [sp, #24]
    fae4:	add	r4, sp, #48	; 0x30
    fae8:	str	r2, [sp, #16]
    faec:	ldr	r3, [r0]
    faf0:	mov	r0, r4
    faf4:	mov	r1, r7
    faf8:	bl	18d0 <fread@plt>
    fafc:	add	r5, r0, r5
    fb00:	ldr	r0, [sp, #16]
    fb04:	str	r5, [sp, #20]
    fb08:	cmp	r0, #1
    fb0c:	blt	fb24 <ReadInt16Data+0x1278>
    fb10:	sub	r0, r8, sl
    fb14:	ldrh	r1, [r4], #8
    fb18:	subs	r0, r0, #1
    fb1c:	strh	r1, [r6], #2
    fb20:	bne	fb14 <ReadInt16Data+0x1268>
    fb24:	ldr	r6, [sp, #8]
    fb28:	b	fb38 <ReadInt16Data+0x128c>
    fb2c:	ldr	r7, [sp, #24]
    fb30:	str	r5, [sp, #20]
    fb34:	mov	r6, r1
    fb38:	ldr	sl, [sp, #28]
    fb3c:	ldr	r5, [sp, #4]
    fb40:	cmp	r5, #13
    fb44:	bne	fcc8 <ReadInt16Data+0x141c>
    fb48:	ldr	r0, [sl, #20]
    fb4c:	cmp	r0, #0
    fb50:	beq	fba0 <ReadInt16Data+0x12f4>
    fb54:	cmp	r6, #256	; 0x100
    fb58:	bgt	fbe4 <ReadInt16Data+0x1338>
    fb5c:	ldr	r3, [sl]
    fb60:	add	r4, sp, #48	; 0x30
    fb64:	mov	r1, r7
    fb68:	mov	r2, r6
    fb6c:	mov	r0, r4
    fb70:	bl	18d0 <fread@plt>
    fb74:	ldr	r5, [sp, #20]
    fb78:	cmp	r6, #1
    fb7c:	add	r5, r0, r5
    fb80:	blt	fd98 <ReadInt16Data+0x14ec>
    fb84:	mov	r0, r4
    fb88:	bl	1c0c <Mat_uint64Swap>
    fb8c:	strh	r0, [r9], #2
    fb90:	subs	r6, r6, #1
    fb94:	add	r4, r4, #8
    fb98:	bne	fb84 <ReadInt16Data+0x12d8>
    fb9c:	b	fd98 <ReadInt16Data+0x14ec>
    fba0:	cmp	r6, #256	; 0x100
    fba4:	bgt	fcd0 <ReadInt16Data+0x1424>
    fba8:	ldr	r3, [sl]
    fbac:	add	r4, sp, #48	; 0x30
    fbb0:	mov	r1, r7
    fbb4:	mov	r2, r6
    fbb8:	mov	r0, r4
    fbbc:	bl	18d0 <fread@plt>
    fbc0:	ldr	r5, [sp, #20]
    fbc4:	cmp	r6, #1
    fbc8:	add	r5, r0, r5
    fbcc:	blt	fd98 <ReadInt16Data+0x14ec>
    fbd0:	ldrh	r0, [r4], #8
    fbd4:	subs	r6, r6, #1
    fbd8:	strh	r0, [r9], #2
    fbdc:	bne	fbd0 <ReadInt16Data+0x1324>
    fbe0:	b	fd98 <ReadInt16Data+0x14ec>
    fbe4:	add	r1, r9, #512	; 0x200
    fbe8:	sub	r5, r6, #256	; 0x100
    fbec:	mov	r0, #0
    fbf0:	str	r6, [sp, #8]
    fbf4:	ldr	r3, [sl]
    fbf8:	add	r6, sp, #48	; 0x30
    fbfc:	str	r0, [sp, #16]
    fc00:	mov	r8, r1
    fc04:	mov	r1, r7
    fc08:	mov	r2, #256	; 0x100
    fc0c:	mov	r0, r6
    fc10:	bl	18d0 <fread@plt>
    fc14:	mov	r4, r0
    fc18:	mov	r7, #0
    fc1c:	mov	r0, r6
    fc20:	add	sl, r9, r7
    fc24:	bl	1c0c <Mat_uint64Swap>
    fc28:	add	r7, r7, #2
    fc2c:	add	r6, r6, #8
    fc30:	strh	r0, [sl]
    fc34:	cmp	r7, #512	; 0x200
    fc38:	bne	fc1c <ReadInt16Data+0x1370>
    fc3c:	ldr	r0, [sp, #20]
    fc40:	ldr	r7, [sp, #24]
    fc44:	ldr	sl, [sp, #28]
    fc48:	add	r9, r9, #512	; 0x200
    fc4c:	add	r1, r8, #512	; 0x200
    fc50:	add	r0, r4, r0
    fc54:	str	r0, [sp, #20]
    fc58:	ldr	r0, [sp, #16]
    fc5c:	add	r0, r0, #256	; 0x100
    fc60:	cmp	r0, r5
    fc64:	blt	fbf4 <ReadInt16Data+0x1348>
    fc68:	ldr	r1, [sp, #8]
    fc6c:	cmp	r0, r1
    fc70:	bge	fcc8 <ReadInt16Data+0x141c>
    fc74:	ldr	r3, [sl]
    fc78:	sub	r6, r1, r0
    fc7c:	add	r4, sp, #48	; 0x30
    fc80:	mov	r1, r7
    fc84:	mov	r9, r5
    fc88:	mov	r0, r4
    fc8c:	mov	r2, r6
    fc90:	bl	18d0 <fread@plt>
    fc94:	ldr	r5, [sp, #20]
    fc98:	cmp	r6, #1
    fc9c:	add	r5, r0, r5
    fca0:	blt	fd98 <ReadInt16Data+0x14ec>
    fca4:	ldr	r0, [sp, #16]
    fca8:	sub	r6, r9, r0
    fcac:	mov	r0, r4
    fcb0:	bl	1c0c <Mat_uint64Swap>
    fcb4:	strh	r0, [r8], #2
    fcb8:	subs	r6, r6, #1
    fcbc:	add	r4, r4, #8
    fcc0:	bne	fcac <ReadInt16Data+0x1400>
    fcc4:	b	fd98 <ReadInt16Data+0x14ec>
    fcc8:	ldr	r5, [sp, #20]
    fccc:	b	fd98 <ReadInt16Data+0x14ec>
    fcd0:	ldr	r5, [sp, #20]
    fcd4:	add	r1, r9, #512	; 0x200
    fcd8:	sub	r8, r6, #256	; 0x100
    fcdc:	mov	r0, #0
    fce0:	add	r4, sp, #48	; 0x30
    fce4:	str	r6, [sp, #8]
    fce8:	mov	sl, r0
    fcec:	ldr	r0, [sp, #28]
    fcf0:	mov	r6, r1
    fcf4:	mov	r1, r7
    fcf8:	mov	r2, #256	; 0x100
    fcfc:	ldr	r3, [r0]
    fd00:	mov	r0, r4
    fd04:	bl	18d0 <fread@plt>
    fd08:	mov	r1, #0
    fd0c:	mov	r2, r4
    fd10:	vld1.64	{d16-d17}, [r2]!
    fd14:	add	r3, r9, r1
    fd18:	add	r1, r1, #4
    fd1c:	cmp	r1, #512	; 0x200
    fd20:	vmovn.i64	d16, q8
    fd24:	vuzp.16	d16, d17
    fd28:	vst1.32	{d16[0]}, [r3]
    fd2c:	bne	fd10 <ReadInt16Data+0x1464>
    fd30:	add	r5, r0, r5
    fd34:	add	r0, sl, #256	; 0x100
    fd38:	add	r9, r9, #512	; 0x200
    fd3c:	add	r1, r6, #512	; 0x200
    fd40:	cmp	r0, r8
    fd44:	blt	fce8 <ReadInt16Data+0x143c>
    fd48:	ldr	r2, [sp, #8]
    fd4c:	cmp	r0, r2
    fd50:	bge	fd98 <ReadInt16Data+0x14ec>
    fd54:	mov	r1, r7
    fd58:	sub	r7, r2, r0
    fd5c:	ldr	r0, [sp, #28]
    fd60:	add	r4, sp, #48	; 0x30
    fd64:	mov	r2, r7
    fd68:	ldr	r3, [r0]
    fd6c:	mov	r0, r4
    fd70:	bl	18d0 <fread@plt>
    fd74:	add	r5, r0, r5
    fd78:	cmp	r7, #1
    fd7c:	blt	fd94 <ReadInt16Data+0x14e8>
    fd80:	sub	r0, r8, sl
    fd84:	ldrh	r1, [r4], #8
    fd88:	subs	r0, r0, #1
    fd8c:	strh	r1, [r6], #2
    fd90:	bne	fd84 <ReadInt16Data+0x14d8>
    fd94:	ldr	r7, [sp, #24]
    fd98:	mul	r0, r5, r7
    fd9c:	sub	sp, fp, #28
    fda0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000fda4 <ReadCompressedInt16Data>:
    fda4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    fda8:	add	fp, sp, #28
    fdac:	sub	sp, sp, #12
    fdb0:	mov	r7, r0
    fdb4:	mov	r0, #0
    fdb8:	cmp	r1, #0
    fdbc:	beq	102c4 <ReadCompressedInt16Data+0x520>
    fdc0:	cmp	r7, #0
    fdc4:	movne	r5, r2
    fdc8:	cmpne	r2, #0
    fdcc:	beq	102c4 <ReadCompressedInt16Data+0x520>
    fdd0:	ldr	sl, [fp, #8]
    fdd4:	mov	r0, r3
    fdd8:	mov	r4, r3
    fddc:	mov	r6, r1
    fde0:	bl	193c <Mat_SizeOf@plt>
    fde4:	mov	r9, r0
    fde8:	sub	r0, r4, #1
    fdec:	cmp	r0, #12
    fdf0:	bhi	102c0 <ReadCompressedInt16Data+0x51c>
    fdf4:	add	r1, pc, #4
    fdf8:	ldr	r0, [r1, r0, lsl #2]
    fdfc:	add	pc, r1, r0
    fe00:	.word	0x00000034
    fe04:	.word	0x0000006c
    fe08:	.word	0x000000a4
    fe0c:	.word	0x000000ec
    fe10:	.word	0x00000134
    fe14:	.word	0x0000017c
    fe18:	.word	0x000001c4
    fe1c:	.word	0x000004c0
    fe20:	.word	0x00000214
    fe24:	.word	0x000004c0
    fe28:	.word	0x000004c0
    fe2c:	.word	0x00000264
    fe30:	.word	0x000002ac
    fe34:	cmp	sl, #1
    fe38:	blt	102c0 <ReadCompressedInt16Data+0x51c>
    fe3c:	mov	r8, sp
    fe40:	mov	r4, sl
    fe44:	mov	r0, r7
    fe48:	mov	r1, r6
    fe4c:	mov	r2, r8
    fe50:	mov	r3, r9
    fe54:	bl	31f0 <InflateData>
    fe58:	ldrsb	r0, [sp]
    fe5c:	subs	r4, r4, #1
    fe60:	strh	r0, [r5], #2
    fe64:	bne	fe44 <ReadCompressedInt16Data+0xa0>
    fe68:	b	102c0 <ReadCompressedInt16Data+0x51c>
    fe6c:	cmp	sl, #1
    fe70:	blt	102c0 <ReadCompressedInt16Data+0x51c>
    fe74:	mov	r8, sp
    fe78:	mov	r4, sl
    fe7c:	mov	r0, r7
    fe80:	mov	r1, r6
    fe84:	mov	r2, r8
    fe88:	mov	r3, r9
    fe8c:	bl	31f0 <InflateData>
    fe90:	ldrb	r0, [sp]
    fe94:	subs	r4, r4, #1
    fe98:	strh	r0, [r5], #2
    fe9c:	bne	fe7c <ReadCompressedInt16Data+0xd8>
    fea0:	b	102c0 <ReadCompressedInt16Data+0x51c>
    fea4:	ldr	r0, [r7, #20]
    fea8:	cmp	r0, #0
    feac:	beq	100f4 <ReadCompressedInt16Data+0x350>
    feb0:	cmp	sl, #1
    feb4:	blt	102c0 <ReadCompressedInt16Data+0x51c>
    feb8:	mov	r8, sp
    febc:	mov	r4, sl
    fec0:	mov	r0, r7
    fec4:	mov	r1, r6
    fec8:	mov	r2, r8
    fecc:	mov	r3, r9
    fed0:	bl	31f0 <InflateData>
    fed4:	mov	r0, r8
    fed8:	bl	1c50 <Mat_int16Swap>
    fedc:	strh	r0, [r5], #2
    fee0:	subs	r4, r4, #1
    fee4:	bne	fec0 <ReadCompressedInt16Data+0x11c>
    fee8:	b	102c0 <ReadCompressedInt16Data+0x51c>
    feec:	ldr	r0, [r7, #20]
    fef0:	cmp	r0, #0
    fef4:	beq	1012c <ReadCompressedInt16Data+0x388>
    fef8:	cmp	sl, #1
    fefc:	blt	102c0 <ReadCompressedInt16Data+0x51c>
    ff00:	mov	r8, sp
    ff04:	mov	r4, sl
    ff08:	mov	r0, r7
    ff0c:	mov	r1, r6
    ff10:	mov	r2, r8
    ff14:	mov	r3, r9
    ff18:	bl	31f0 <InflateData>
    ff1c:	mov	r0, r8
    ff20:	bl	1c64 <Mat_uint16Swap>
    ff24:	strh	r0, [r5], #2
    ff28:	subs	r4, r4, #1
    ff2c:	bne	ff08 <ReadCompressedInt16Data+0x164>
    ff30:	b	102c0 <ReadCompressedInt16Data+0x51c>
    ff34:	ldr	r0, [r7, #20]
    ff38:	cmp	r0, #0
    ff3c:	beq	10164 <ReadCompressedInt16Data+0x3c0>
    ff40:	cmp	sl, #1
    ff44:	blt	102c0 <ReadCompressedInt16Data+0x51c>
    ff48:	mov	r8, sp
    ff4c:	mov	r4, sl
    ff50:	mov	r0, r7
    ff54:	mov	r1, r6
    ff58:	mov	r2, r8
    ff5c:	mov	r3, r9
    ff60:	bl	31f0 <InflateData>
    ff64:	mov	r0, r8
    ff68:	bl	1c28 <Mat_int32Swap>
    ff6c:	strh	r0, [r5], #2
    ff70:	subs	r4, r4, #1
    ff74:	bne	ff50 <ReadCompressedInt16Data+0x1ac>
    ff78:	b	102c0 <ReadCompressedInt16Data+0x51c>
    ff7c:	ldr	r0, [r7, #20]
    ff80:	cmp	r0, #0
    ff84:	beq	1019c <ReadCompressedInt16Data+0x3f8>
    ff88:	cmp	sl, #1
    ff8c:	blt	102c0 <ReadCompressedInt16Data+0x51c>
    ff90:	mov	r8, sp
    ff94:	mov	r4, sl
    ff98:	mov	r0, r7
    ff9c:	mov	r1, r6
    ffa0:	mov	r2, r8
    ffa4:	mov	r3, r9
    ffa8:	bl	31f0 <InflateData>
    ffac:	mov	r0, r8
    ffb0:	bl	1c3c <Mat_uint32Swap>
    ffb4:	strh	r0, [r5], #2
    ffb8:	subs	r4, r4, #1
    ffbc:	bne	ff98 <ReadCompressedInt16Data+0x1f4>
    ffc0:	b	102c0 <ReadCompressedInt16Data+0x51c>
    ffc4:	ldr	r0, [r7, #20]
    ffc8:	cmp	r0, #0
    ffcc:	beq	101d4 <ReadCompressedInt16Data+0x430>
    ffd0:	cmp	sl, #1
    ffd4:	blt	102c0 <ReadCompressedInt16Data+0x51c>
    ffd8:	mov	r8, sp
    ffdc:	mov	r4, sl
    ffe0:	mov	r0, r7
    ffe4:	mov	r1, r6
    ffe8:	mov	r2, r8
    ffec:	mov	r3, r9
    fff0:	bl	31f0 <InflateData>
    fff4:	mov	r0, r8
    fff8:	bl	1c7c <Mat_floatSwap>
    fffc:	vcvt.s32.f32	s0, s0
   10000:	subs	r4, r4, #1
   10004:	vmov	r0, s0
   10008:	strh	r0, [r5], #2
   1000c:	bne	ffe0 <ReadCompressedInt16Data+0x23c>
   10010:	b	102c0 <ReadCompressedInt16Data+0x51c>
   10014:	ldr	r0, [r7, #20]
   10018:	cmp	r0, #0
   1001c:	beq	10214 <ReadCompressedInt16Data+0x470>
   10020:	cmp	sl, #1
   10024:	blt	102c0 <ReadCompressedInt16Data+0x51c>
   10028:	mov	r8, sp
   1002c:	mov	r4, sl
   10030:	mov	r0, r7
   10034:	mov	r1, r6
   10038:	mov	r2, r8
   1003c:	mov	r3, r9
   10040:	bl	31f0 <InflateData>
   10044:	mov	r0, r8
   10048:	bl	1cc0 <Mat_doubleSwap>
   1004c:	vcvt.s32.f64	s0, d0
   10050:	subs	r4, r4, #1
   10054:	vmov	r0, s0
   10058:	strh	r0, [r5], #2
   1005c:	bne	10030 <ReadCompressedInt16Data+0x28c>
   10060:	b	102c0 <ReadCompressedInt16Data+0x51c>
   10064:	ldr	r0, [r7, #20]
   10068:	cmp	r0, #0
   1006c:	beq	10254 <ReadCompressedInt16Data+0x4b0>
   10070:	cmp	sl, #1
   10074:	blt	102c0 <ReadCompressedInt16Data+0x51c>
   10078:	mov	r8, sp
   1007c:	mov	r4, sl
   10080:	mov	r0, r7
   10084:	mov	r1, r6
   10088:	mov	r2, r8
   1008c:	mov	r3, r9
   10090:	bl	31f0 <InflateData>
   10094:	mov	r0, r8
   10098:	bl	1bbc <Mat_int64Swap>
   1009c:	strh	r0, [r5], #2
   100a0:	subs	r4, r4, #1
   100a4:	bne	10080 <ReadCompressedInt16Data+0x2dc>
   100a8:	b	102c0 <ReadCompressedInt16Data+0x51c>
   100ac:	ldr	r0, [r7, #20]
   100b0:	cmp	r0, #0
   100b4:	beq	1028c <ReadCompressedInt16Data+0x4e8>
   100b8:	cmp	sl, #1
   100bc:	blt	102c0 <ReadCompressedInt16Data+0x51c>
   100c0:	mov	r8, sp
   100c4:	mov	r4, sl
   100c8:	mov	r0, r7
   100cc:	mov	r1, r6
   100d0:	mov	r2, r8
   100d4:	mov	r3, r9
   100d8:	bl	31f0 <InflateData>
   100dc:	mov	r0, r8
   100e0:	bl	1c0c <Mat_uint64Swap>
   100e4:	strh	r0, [r5], #2
   100e8:	subs	r4, r4, #1
   100ec:	bne	100c8 <ReadCompressedInt16Data+0x324>
   100f0:	b	102c0 <ReadCompressedInt16Data+0x51c>
   100f4:	cmp	sl, #1
   100f8:	blt	102c0 <ReadCompressedInt16Data+0x51c>
   100fc:	mov	r8, sp
   10100:	mov	r4, sl
   10104:	mov	r0, r7
   10108:	mov	r1, r6
   1010c:	mov	r2, r8
   10110:	mov	r3, r9
   10114:	bl	31f0 <InflateData>
   10118:	ldrh	r0, [sp]
   1011c:	subs	r4, r4, #1
   10120:	strh	r0, [r5], #2
   10124:	bne	10104 <ReadCompressedInt16Data+0x360>
   10128:	b	102c0 <ReadCompressedInt16Data+0x51c>
   1012c:	cmp	sl, #1
   10130:	blt	102c0 <ReadCompressedInt16Data+0x51c>
   10134:	mov	r8, sp
   10138:	mov	r4, sl
   1013c:	mov	r0, r7
   10140:	mov	r1, r6
   10144:	mov	r2, r8
   10148:	mov	r3, r9
   1014c:	bl	31f0 <InflateData>
   10150:	ldrh	r0, [sp]
   10154:	subs	r4, r4, #1
   10158:	strh	r0, [r5], #2
   1015c:	bne	1013c <ReadCompressedInt16Data+0x398>
   10160:	b	102c0 <ReadCompressedInt16Data+0x51c>
   10164:	cmp	sl, #1
   10168:	blt	102c0 <ReadCompressedInt16Data+0x51c>
   1016c:	mov	r8, sp
   10170:	mov	r4, sl
   10174:	mov	r0, r7
   10178:	mov	r1, r6
   1017c:	mov	r2, r8
   10180:	mov	r3, r9
   10184:	bl	31f0 <InflateData>
   10188:	ldr	r0, [sp]
   1018c:	subs	r4, r4, #1
   10190:	strh	r0, [r5], #2
   10194:	bne	10174 <ReadCompressedInt16Data+0x3d0>
   10198:	b	102c0 <ReadCompressedInt16Data+0x51c>
   1019c:	cmp	sl, #1
   101a0:	blt	102c0 <ReadCompressedInt16Data+0x51c>
   101a4:	mov	r8, sp
   101a8:	mov	r4, sl
   101ac:	mov	r0, r7
   101b0:	mov	r1, r6
   101b4:	mov	r2, r8
   101b8:	mov	r3, r9
   101bc:	bl	31f0 <InflateData>
   101c0:	ldr	r0, [sp]
   101c4:	subs	r4, r4, #1
   101c8:	strh	r0, [r5], #2
   101cc:	bne	101ac <ReadCompressedInt16Data+0x408>
   101d0:	b	102c0 <ReadCompressedInt16Data+0x51c>
   101d4:	cmp	sl, #1
   101d8:	blt	102c0 <ReadCompressedInt16Data+0x51c>
   101dc:	mov	r8, sp
   101e0:	mov	r4, sl
   101e4:	mov	r0, r7
   101e8:	mov	r1, r6
   101ec:	mov	r2, r8
   101f0:	mov	r3, r9
   101f4:	bl	31f0 <InflateData>
   101f8:	vldr	s0, [sp]
   101fc:	subs	r4, r4, #1
   10200:	vcvt.s32.f32	s0, s0
   10204:	vmov	r0, s0
   10208:	strh	r0, [r5], #2
   1020c:	bne	101e4 <ReadCompressedInt16Data+0x440>
   10210:	b	102c0 <ReadCompressedInt16Data+0x51c>
   10214:	cmp	sl, #1
   10218:	blt	102c0 <ReadCompressedInt16Data+0x51c>
   1021c:	mov	r8, sp
   10220:	mov	r4, sl
   10224:	mov	r0, r7
   10228:	mov	r1, r6
   1022c:	mov	r2, r8
   10230:	mov	r3, r9
   10234:	bl	31f0 <InflateData>
   10238:	vldr	d16, [sp]
   1023c:	subs	r4, r4, #1
   10240:	vcvt.s32.f64	s0, d16
   10244:	vmov	r0, s0
   10248:	strh	r0, [r5], #2
   1024c:	bne	10224 <ReadCompressedInt16Data+0x480>
   10250:	b	102c0 <ReadCompressedInt16Data+0x51c>
   10254:	cmp	sl, #1
   10258:	blt	102c0 <ReadCompressedInt16Data+0x51c>
   1025c:	mov	r8, sp
   10260:	mov	r4, sl
   10264:	mov	r0, r7
   10268:	mov	r1, r6
   1026c:	mov	r2, r8
   10270:	mov	r3, r9
   10274:	bl	31f0 <InflateData>
   10278:	ldrh	r0, [sp]
   1027c:	subs	r4, r4, #1
   10280:	strh	r0, [r5], #2
   10284:	bne	10264 <ReadCompressedInt16Data+0x4c0>
   10288:	b	102c0 <ReadCompressedInt16Data+0x51c>
   1028c:	cmp	sl, #1
   10290:	blt	102c0 <ReadCompressedInt16Data+0x51c>
   10294:	mov	r8, sp
   10298:	mov	r4, sl
   1029c:	mov	r0, r7
   102a0:	mov	r1, r6
   102a4:	mov	r2, r8
   102a8:	mov	r3, r9
   102ac:	bl	31f0 <InflateData>
   102b0:	ldrh	r0, [sp]
   102b4:	subs	r4, r4, #1
   102b8:	strh	r0, [r5], #2
   102bc:	bne	1029c <ReadCompressedInt16Data+0x4f8>
   102c0:	mul	r0, r9, sl
   102c4:	sub	sp, fp, #28
   102c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000102cc <ReadUInt16Data>:
   102cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   102d0:	add	fp, sp, #28
   102d4:	sub	sp, sp, #52	; 0x34
   102d8:	sub	sp, sp, #2048	; 0x800
   102dc:	mov	sl, r0
   102e0:	mov	r0, #0
   102e4:	cmp	sl, #0
   102e8:	beq	117bc <ReadUInt16Data+0x14f0>
   102ec:	cmp	r1, #0
   102f0:	mov	r9, r1
   102f4:	ldrne	r1, [sl]
   102f8:	cmpne	r1, #0
   102fc:	beq	117bc <ReadUInt16Data+0x14f0>
   10300:	mov	r0, r2
   10304:	mov	r6, r3
   10308:	mov	r5, r2
   1030c:	bl	193c <Mat_SizeOf@plt>
   10310:	mov	r7, r0
   10314:	sub	r0, r5, #1
   10318:	mov	r1, #0
   1031c:	str	sl, [sp, #28]
   10320:	cmp	r0, #11
   10324:	str	r1, [sp, #20]
   10328:	str	r7, [sp, #24]
   1032c:	bhi	11560 <ReadUInt16Data+0x1294>
   10330:	add	r1, pc, #4
   10334:	ldr	r0, [r1, r0, lsl #2]
   10338:	add	pc, r1, r0
   1033c:	.word	0x00000030
   10340:	.word	0x00000070
   10344:	.word	0x000000b0
   10348:	.word	0x00000104
   1034c:	.word	0x00000158
   10350:	.word	0x000001ac
   10354:	.word	0x00000200
   10358:	.word	0x00001224
   1035c:	.word	0x0000025c
   10360:	.word	0x00001224
   10364:	.word	0x00001224
   10368:	.word	0x000002b8
   1036c:	cmp	r6, #256	; 0x100
   10370:	bgt	10658 <ReadUInt16Data+0x38c>
   10374:	ldr	r3, [sl]
   10378:	add	r4, sp, #48	; 0x30
   1037c:	mov	r1, r7
   10380:	mov	r2, r6
   10384:	mov	r0, r4
   10388:	bl	18d0 <fread@plt>
   1038c:	mov	r5, r0
   10390:	cmp	r6, #1
   10394:	blt	117b8 <ReadUInt16Data+0x14ec>
   10398:	ldrsb	r0, [r4], #1
   1039c:	subs	r6, r6, #1
   103a0:	strh	r0, [r9], #2
   103a4:	bne	10398 <ReadUInt16Data+0xcc>
   103a8:	b	117b8 <ReadUInt16Data+0x14ec>
   103ac:	cmp	r6, #256	; 0x100
   103b0:	bgt	1073c <ReadUInt16Data+0x470>
   103b4:	ldr	r3, [sl]
   103b8:	add	r4, sp, #48	; 0x30
   103bc:	mov	r1, r7
   103c0:	mov	r2, r6
   103c4:	mov	r0, r4
   103c8:	bl	18d0 <fread@plt>
   103cc:	mov	r5, r0
   103d0:	cmp	r6, #1
   103d4:	blt	117b8 <ReadUInt16Data+0x14ec>
   103d8:	ldrb	r0, [r4], #1
   103dc:	subs	r6, r6, #1
   103e0:	strh	r0, [r9], #2
   103e4:	bne	103d8 <ReadUInt16Data+0x10c>
   103e8:	b	117b8 <ReadUInt16Data+0x14ec>
   103ec:	ldr	r0, [sl, #20]
   103f0:	cmp	r0, #0
   103f4:	beq	10820 <ReadUInt16Data+0x554>
   103f8:	cmp	r6, #256	; 0x100
   103fc:	bgt	10a24 <ReadUInt16Data+0x758>
   10400:	ldr	r3, [sl]
   10404:	add	r4, sp, #48	; 0x30
   10408:	mov	r1, r7
   1040c:	mov	r2, r6
   10410:	mov	r0, r4
   10414:	bl	18d0 <fread@plt>
   10418:	mov	r5, r0
   1041c:	cmp	r6, #1
   10420:	blt	117b8 <ReadUInt16Data+0x14ec>
   10424:	mov	r0, r4
   10428:	bl	1c50 <Mat_int16Swap>
   1042c:	strh	r0, [r9], #2
   10430:	subs	r6, r6, #1
   10434:	add	r4, r4, #2
   10438:	bne	10424 <ReadUInt16Data+0x158>
   1043c:	b	117b8 <ReadUInt16Data+0x14ec>
   10440:	ldr	r0, [sl, #20]
   10444:	cmp	r0, #0
   10448:	beq	1088c <ReadUInt16Data+0x5c0>
   1044c:	cmp	r6, #256	; 0x100
   10450:	bgt	10b00 <ReadUInt16Data+0x834>
   10454:	ldr	r3, [sl]
   10458:	add	r4, sp, #48	; 0x30
   1045c:	mov	r1, r7
   10460:	mov	r2, r6
   10464:	mov	r0, r4
   10468:	bl	18d0 <fread@plt>
   1046c:	mov	r5, r0
   10470:	cmp	r6, #1
   10474:	blt	117b8 <ReadUInt16Data+0x14ec>
   10478:	mov	r0, r4
   1047c:	bl	1c64 <Mat_uint16Swap>
   10480:	strh	r0, [r9], #2
   10484:	subs	r6, r6, #1
   10488:	add	r4, r4, #2
   1048c:	bne	10478 <ReadUInt16Data+0x1ac>
   10490:	b	117b8 <ReadUInt16Data+0x14ec>
   10494:	ldr	r0, [sl, #20]
   10498:	cmp	r0, #0
   1049c:	beq	108c4 <ReadUInt16Data+0x5f8>
   104a0:	cmp	r6, #256	; 0x100
   104a4:	bgt	10bdc <ReadUInt16Data+0x910>
   104a8:	ldr	r3, [sl]
   104ac:	add	r4, sp, #48	; 0x30
   104b0:	mov	r1, r7
   104b4:	mov	r2, r6
   104b8:	mov	r0, r4
   104bc:	bl	18d0 <fread@plt>
   104c0:	mov	r5, r0
   104c4:	cmp	r6, #1
   104c8:	blt	117b8 <ReadUInt16Data+0x14ec>
   104cc:	mov	r0, r4
   104d0:	bl	1c28 <Mat_int32Swap>
   104d4:	strh	r0, [r9], #2
   104d8:	subs	r6, r6, #1
   104dc:	add	r4, r4, #4
   104e0:	bne	104cc <ReadUInt16Data+0x200>
   104e4:	b	117b8 <ReadUInt16Data+0x14ec>
   104e8:	ldr	r0, [sl, #20]
   104ec:	cmp	r0, #0
   104f0:	beq	10904 <ReadUInt16Data+0x638>
   104f4:	cmp	r6, #256	; 0x100
   104f8:	bgt	10cc0 <ReadUInt16Data+0x9f4>
   104fc:	ldr	r3, [sl]
   10500:	add	r4, sp, #48	; 0x30
   10504:	mov	r1, r7
   10508:	mov	r2, r6
   1050c:	mov	r0, r4
   10510:	bl	18d0 <fread@plt>
   10514:	mov	r5, r0
   10518:	cmp	r6, #1
   1051c:	blt	117b8 <ReadUInt16Data+0x14ec>
   10520:	mov	r0, r4
   10524:	bl	1c3c <Mat_uint32Swap>
   10528:	strh	r0, [r9], #2
   1052c:	subs	r6, r6, #1
   10530:	add	r4, r4, #4
   10534:	bne	10520 <ReadUInt16Data+0x254>
   10538:	b	117b8 <ReadUInt16Data+0x14ec>
   1053c:	ldr	r0, [sl, #20]
   10540:	cmp	r0, #0
   10544:	beq	10944 <ReadUInt16Data+0x678>
   10548:	cmp	r6, #256	; 0x100
   1054c:	bgt	10da4 <ReadUInt16Data+0xad8>
   10550:	ldr	r3, [sl]
   10554:	add	r4, sp, #48	; 0x30
   10558:	mov	r1, r7
   1055c:	mov	r2, r6
   10560:	mov	r0, r4
   10564:	bl	18d0 <fread@plt>
   10568:	mov	r5, r0
   1056c:	cmp	r6, #1
   10570:	blt	117b8 <ReadUInt16Data+0x14ec>
   10574:	mov	r0, r4
   10578:	bl	1c7c <Mat_floatSwap>
   1057c:	vcvt.u32.f32	s0, s0
   10580:	subs	r6, r6, #1
   10584:	add	r4, r4, #4
   10588:	vmov	r0, s0
   1058c:	strh	r0, [r9], #2
   10590:	bne	10574 <ReadUInt16Data+0x2a8>
   10594:	b	117b8 <ReadUInt16Data+0x14ec>
   10598:	ldr	r0, [sl, #20]
   1059c:	cmp	r0, #0
   105a0:	beq	10990 <ReadUInt16Data+0x6c4>
   105a4:	cmp	r6, #256	; 0x100
   105a8:	bgt	10e94 <ReadUInt16Data+0xbc8>
   105ac:	ldr	r3, [sl]
   105b0:	add	r4, sp, #48	; 0x30
   105b4:	mov	r1, r7
   105b8:	mov	r2, r6
   105bc:	mov	r0, r4
   105c0:	bl	18d0 <fread@plt>
   105c4:	mov	r5, r0
   105c8:	cmp	r6, #1
   105cc:	blt	117b8 <ReadUInt16Data+0x14ec>
   105d0:	mov	r0, r4
   105d4:	bl	1cc0 <Mat_doubleSwap>
   105d8:	vcvt.u32.f64	s0, d0
   105dc:	subs	r6, r6, #1
   105e0:	add	r4, r4, #8
   105e4:	vmov	r0, s0
   105e8:	strh	r0, [r9], #2
   105ec:	bne	105d0 <ReadUInt16Data+0x304>
   105f0:	b	117b8 <ReadUInt16Data+0x14ec>
   105f4:	ldr	r0, [sl, #20]
   105f8:	cmp	r0, #0
   105fc:	beq	109dc <ReadUInt16Data+0x710>
   10600:	cmp	r6, #256	; 0x100
   10604:	bgt	10f84 <ReadUInt16Data+0xcb8>
   10608:	ldr	r3, [sl]
   1060c:	add	r4, sp, #48	; 0x30
   10610:	mov	r1, r7
   10614:	mov	r2, r6
   10618:	mov	r0, r4
   1061c:	bl	18d0 <fread@plt>
   10620:	cmp	r6, #1
   10624:	str	r0, [sp, #20]
   10628:	blt	11560 <ReadUInt16Data+0x1294>
   1062c:	mov	r8, r6
   10630:	mov	r7, r9
   10634:	mov	r0, r4
   10638:	bl	1bbc <Mat_int64Swap>
   1063c:	strh	r0, [r7], #2
   10640:	subs	r6, r6, #1
   10644:	add	r4, r4, #8
   10648:	bne	10634 <ReadUInt16Data+0x368>
   1064c:	ldr	r7, [sp, #24]
   10650:	mov	r6, r8
   10654:	b	11560 <ReadUInt16Data+0x1294>
   10658:	sub	r0, r6, #256	; 0x100
   1065c:	add	r1, r9, #512	; 0x200
   10660:	add	r4, sp, #48	; 0x30
   10664:	add	r8, sp, #32
   10668:	mov	r5, #0
   1066c:	str	r6, [sp, #8]
   10670:	str	r0, [sp, #20]
   10674:	mov	r0, #0
   10678:	mov	sl, r0
   1067c:	ldr	r0, [sp, #28]
   10680:	mov	r6, r1
   10684:	mov	r1, r7
   10688:	mov	r2, #256	; 0x100
   1068c:	ldr	r3, [r0]
   10690:	mov	r0, r4
   10694:	bl	18d0 <fread@plt>
   10698:	mov	r1, r9
   1069c:	mov	r2, #0
   106a0:	ldr	r3, [r4, r2]
   106a4:	str	r3, [sp, #32]
   106a8:	add	r3, r4, r2
   106ac:	add	r2, r2, #8
   106b0:	ldr	r3, [r3, #4]
   106b4:	cmp	r2, #256	; 0x100
   106b8:	str	r3, [sp, #36]	; 0x24
   106bc:	vld1.8	{d16}, [r8 :64]
   106c0:	vmovl.s8	q8, d16
   106c4:	vst1.16	{d16-d17}, [r1]!
   106c8:	bne	106a0 <ReadUInt16Data+0x3d4>
   106cc:	ldr	r2, [sp, #20]
   106d0:	add	r5, r0, r5
   106d4:	add	r0, sl, #256	; 0x100
   106d8:	add	r9, r9, #512	; 0x200
   106dc:	add	r1, r6, #512	; 0x200
   106e0:	cmp	r0, r2
   106e4:	blt	10678 <ReadUInt16Data+0x3ac>
   106e8:	ldr	r2, [sp, #8]
   106ec:	cmp	r0, r2
   106f0:	bge	117b8 <ReadUInt16Data+0x14ec>
   106f4:	mov	r1, r7
   106f8:	sub	r7, r2, r0
   106fc:	ldr	r0, [sp, #28]
   10700:	add	r4, sp, #48	; 0x30
   10704:	mov	r2, r7
   10708:	ldr	r3, [r0]
   1070c:	mov	r0, r4
   10710:	bl	18d0 <fread@plt>
   10714:	add	r5, r0, r5
   10718:	cmp	r7, #1
   1071c:	blt	117b4 <ReadUInt16Data+0x14e8>
   10720:	ldr	r0, [sp, #20]
   10724:	sub	r0, r0, sl
   10728:	ldrsb	r1, [r4], #1
   1072c:	subs	r0, r0, #1
   10730:	strh	r1, [r6], #2
   10734:	bne	10728 <ReadUInt16Data+0x45c>
   10738:	b	117b4 <ReadUInt16Data+0x14e8>
   1073c:	sub	r0, r6, #256	; 0x100
   10740:	add	r1, r9, #512	; 0x200
   10744:	add	r4, sp, #48	; 0x30
   10748:	add	r8, sp, #40	; 0x28
   1074c:	mov	r5, #0
   10750:	str	r6, [sp, #8]
   10754:	str	r0, [sp, #20]
   10758:	mov	r0, #0
   1075c:	mov	sl, r0
   10760:	ldr	r0, [sp, #28]
   10764:	mov	r6, r1
   10768:	mov	r1, r7
   1076c:	mov	r2, #256	; 0x100
   10770:	ldr	r3, [r0]
   10774:	mov	r0, r4
   10778:	bl	18d0 <fread@plt>
   1077c:	mov	r1, r9
   10780:	mov	r2, #0
   10784:	ldr	r3, [r4, r2]
   10788:	str	r3, [sp, #40]	; 0x28
   1078c:	add	r3, r4, r2
   10790:	add	r2, r2, #8
   10794:	ldr	r3, [r3, #4]
   10798:	cmp	r2, #256	; 0x100
   1079c:	str	r3, [sp, #44]	; 0x2c
   107a0:	vld1.8	{d16}, [r8 :64]
   107a4:	vmovl.u8	q8, d16
   107a8:	vst1.16	{d16-d17}, [r1]!
   107ac:	bne	10784 <ReadUInt16Data+0x4b8>
   107b0:	ldr	r2, [sp, #20]
   107b4:	add	r5, r0, r5
   107b8:	add	r0, sl, #256	; 0x100
   107bc:	add	r9, r9, #512	; 0x200
   107c0:	add	r1, r6, #512	; 0x200
   107c4:	cmp	r0, r2
   107c8:	blt	1075c <ReadUInt16Data+0x490>
   107cc:	ldr	r2, [sp, #8]
   107d0:	cmp	r0, r2
   107d4:	bge	117b8 <ReadUInt16Data+0x14ec>
   107d8:	mov	r1, r7
   107dc:	sub	r7, r2, r0
   107e0:	ldr	r0, [sp, #28]
   107e4:	add	r4, sp, #48	; 0x30
   107e8:	mov	r2, r7
   107ec:	ldr	r3, [r0]
   107f0:	mov	r0, r4
   107f4:	bl	18d0 <fread@plt>
   107f8:	add	r5, r0, r5
   107fc:	cmp	r7, #1
   10800:	blt	117b4 <ReadUInt16Data+0x14e8>
   10804:	ldr	r0, [sp, #20]
   10808:	sub	r0, r0, sl
   1080c:	ldrb	r1, [r4], #1
   10810:	subs	r0, r0, #1
   10814:	strh	r1, [r6], #2
   10818:	bne	1080c <ReadUInt16Data+0x540>
   1081c:	b	117b4 <ReadUInt16Data+0x14e8>
   10820:	cmp	r6, #256	; 0x100
   10824:	ble	10894 <ReadUInt16Data+0x5c8>
   10828:	sub	r0, r6, #256	; 0x100
   1082c:	lsl	r4, r6, #1
   10830:	str	r6, [sp, #8]
   10834:	mov	r6, #0
   10838:	add	r8, sp, #48	; 0x30
   1083c:	mov	r5, #0
   10840:	str	r0, [sp, #20]
   10844:	ldr	r3, [sl]
   10848:	mov	r0, r8
   1084c:	mov	r1, r7
   10850:	mov	r2, #256	; 0x100
   10854:	bl	18d0 <fread@plt>
   10858:	mov	sl, r0
   1085c:	add	r0, r9, r6, lsl #1
   10860:	mov	r1, r8
   10864:	mov	r2, #512	; 0x200
   10868:	bl	1834 <memcpy@plt>
   1086c:	ldr	r0, [sp, #20]
   10870:	add	r5, sl, r5
   10874:	ldr	sl, [sp, #28]
   10878:	add	r6, r6, #256	; 0x100
   1087c:	sub	r4, r4, #512	; 0x200
   10880:	cmp	r6, r0
   10884:	blt	10844 <ReadUInt16Data+0x578>
   10888:	b	110ec <ReadUInt16Data+0xe20>
   1088c:	cmp	r6, #256	; 0x100
   10890:	bgt	1108c <ReadUInt16Data+0xdc0>
   10894:	ldr	r3, [sl]
   10898:	add	r0, sp, #48	; 0x30
   1089c:	mov	r1, r7
   108a0:	mov	r2, r6
   108a4:	bl	18d0 <fread@plt>
   108a8:	mov	r5, r0
   108ac:	cmp	r6, #1
   108b0:	blt	117b8 <ReadUInt16Data+0x14ec>
   108b4:	lsl	r2, r6, #1
   108b8:	add	r1, sp, #48	; 0x30
   108bc:	mov	r0, r9
   108c0:	b	1112c <ReadUInt16Data+0xe60>
   108c4:	cmp	r6, #256	; 0x100
   108c8:	bgt	11134 <ReadUInt16Data+0xe68>
   108cc:	ldr	r3, [sl]
   108d0:	add	r4, sp, #48	; 0x30
   108d4:	mov	r1, r7
   108d8:	mov	r2, r6
   108dc:	mov	r0, r4
   108e0:	bl	18d0 <fread@plt>
   108e4:	mov	r5, r0
   108e8:	cmp	r6, #1
   108ec:	blt	117b8 <ReadUInt16Data+0x14ec>
   108f0:	ldr	r0, [r4], #4
   108f4:	subs	r6, r6, #1
   108f8:	strh	r0, [r9], #2
   108fc:	bne	108f0 <ReadUInt16Data+0x624>
   10900:	b	117b8 <ReadUInt16Data+0x14ec>
   10904:	cmp	r6, #256	; 0x100
   10908:	bgt	111f8 <ReadUInt16Data+0xf2c>
   1090c:	ldr	r3, [sl]
   10910:	add	r4, sp, #48	; 0x30
   10914:	mov	r1, r7
   10918:	mov	r2, r6
   1091c:	mov	r0, r4
   10920:	bl	18d0 <fread@plt>
   10924:	mov	r5, r0
   10928:	cmp	r6, #1
   1092c:	blt	117b8 <ReadUInt16Data+0x14ec>
   10930:	ldr	r0, [r4], #4
   10934:	subs	r6, r6, #1
   10938:	strh	r0, [r9], #2
   1093c:	bne	10930 <ReadUInt16Data+0x664>
   10940:	b	117b8 <ReadUInt16Data+0x14ec>
   10944:	cmp	r6, #256	; 0x100
   10948:	bgt	112bc <ReadUInt16Data+0xff0>
   1094c:	ldr	r3, [sl]
   10950:	add	r4, sp, #48	; 0x30
   10954:	mov	r1, r7
   10958:	mov	r2, r6
   1095c:	mov	r0, r4
   10960:	bl	18d0 <fread@plt>
   10964:	mov	r5, r0
   10968:	cmp	r6, #1
   1096c:	blt	117b8 <ReadUInt16Data+0x14ec>
   10970:	vldr	s0, [r4]
   10974:	subs	r6, r6, #1
   10978:	add	r4, r4, #4
   1097c:	vcvt.u32.f32	s0, s0
   10980:	vmov	r0, s0
   10984:	strh	r0, [r9], #2
   10988:	bne	10970 <ReadUInt16Data+0x6a4>
   1098c:	b	117b8 <ReadUInt16Data+0x14ec>
   10990:	cmp	r6, #256	; 0x100
   10994:	bgt	11390 <ReadUInt16Data+0x10c4>
   10998:	ldr	r3, [sl]
   1099c:	add	r4, sp, #48	; 0x30
   109a0:	mov	r1, r7
   109a4:	mov	r2, r6
   109a8:	mov	r0, r4
   109ac:	bl	18d0 <fread@plt>
   109b0:	mov	r5, r0
   109b4:	cmp	r6, #1
   109b8:	blt	117b8 <ReadUInt16Data+0x14ec>
   109bc:	vldr	d16, [r4]
   109c0:	subs	r6, r6, #1
   109c4:	add	r4, r4, #8
   109c8:	vcvt.u32.f64	s0, d16
   109cc:	vmov	r0, s0
   109d0:	strh	r0, [r9], #2
   109d4:	bne	109bc <ReadUInt16Data+0x6f0>
   109d8:	b	117b8 <ReadUInt16Data+0x14ec>
   109dc:	cmp	r6, #256	; 0x100
   109e0:	bgt	1146c <ReadUInt16Data+0x11a0>
   109e4:	ldr	r3, [sl]
   109e8:	add	r4, sp, #48	; 0x30
   109ec:	mov	r1, r7
   109f0:	mov	r2, r6
   109f4:	mov	r0, r4
   109f8:	bl	18d0 <fread@plt>
   109fc:	cmp	r6, #1
   10a00:	str	r0, [sp, #20]
   10a04:	blt	11560 <ReadUInt16Data+0x1294>
   10a08:	mov	r0, r6
   10a0c:	mov	r1, r9
   10a10:	ldrh	r2, [r4], #8
   10a14:	subs	r0, r0, #1
   10a18:	strh	r2, [r1], #2
   10a1c:	bne	10a10 <ReadUInt16Data+0x744>
   10a20:	b	11560 <ReadUInt16Data+0x1294>
   10a24:	sub	r0, r6, #256	; 0x100
   10a28:	add	r1, r9, #512	; 0x200
   10a2c:	add	r4, sp, #48	; 0x30
   10a30:	mov	r5, #0
   10a34:	str	r6, [sp, #8]
   10a38:	str	r0, [sp, #20]
   10a3c:	mov	r0, #0
   10a40:	mov	sl, r0
   10a44:	ldr	r0, [sp, #28]
   10a48:	mov	r8, r1
   10a4c:	mov	r1, r7
   10a50:	mov	r2, #256	; 0x100
   10a54:	ldr	r3, [r0]
   10a58:	mov	r0, r4
   10a5c:	bl	18d0 <fread@plt>
   10a60:	mov	r6, r0
   10a64:	mov	r7, #0
   10a68:	add	r0, r4, r7
   10a6c:	bl	1c50 <Mat_int16Swap>
   10a70:	add	r1, r9, r7
   10a74:	add	r7, r7, #2
   10a78:	cmp	r7, #512	; 0x200
   10a7c:	strh	r0, [r1]
   10a80:	bne	10a68 <ReadUInt16Data+0x79c>
   10a84:	ldr	r2, [sp, #20]
   10a88:	ldr	r7, [sp, #24]
   10a8c:	add	r0, sl, #256	; 0x100
   10a90:	add	r5, r6, r5
   10a94:	add	r9, r9, #512	; 0x200
   10a98:	add	r1, r8, #512	; 0x200
   10a9c:	cmp	r0, r2
   10aa0:	blt	10a40 <ReadUInt16Data+0x774>
   10aa4:	ldr	r1, [sp, #8]
   10aa8:	cmp	r0, r1
   10aac:	bge	117b8 <ReadUInt16Data+0x14ec>
   10ab0:	sub	r6, r1, r0
   10ab4:	ldr	r0, [sp, #28]
   10ab8:	add	r4, sp, #48	; 0x30
   10abc:	mov	r1, r7
   10ac0:	mov	r2, r6
   10ac4:	ldr	r3, [r0]
   10ac8:	mov	r0, r4
   10acc:	bl	18d0 <fread@plt>
   10ad0:	add	r5, r0, r5
   10ad4:	cmp	r6, #1
   10ad8:	blt	117b8 <ReadUInt16Data+0x14ec>
   10adc:	ldr	r0, [sp, #20]
   10ae0:	sub	r6, r0, sl
   10ae4:	mov	r0, r4
   10ae8:	bl	1c50 <Mat_int16Swap>
   10aec:	strh	r0, [r8], #2
   10af0:	subs	r6, r6, #1
   10af4:	add	r4, r4, #2
   10af8:	bne	10ae4 <ReadUInt16Data+0x818>
   10afc:	b	117b8 <ReadUInt16Data+0x14ec>
   10b00:	sub	r0, r6, #256	; 0x100
   10b04:	add	r1, r9, #512	; 0x200
   10b08:	add	r4, sp, #48	; 0x30
   10b0c:	mov	r5, #0
   10b10:	str	r6, [sp, #8]
   10b14:	str	r0, [sp, #20]
   10b18:	mov	r0, #0
   10b1c:	mov	sl, r0
   10b20:	ldr	r0, [sp, #28]
   10b24:	mov	r8, r1
   10b28:	mov	r1, r7
   10b2c:	mov	r2, #256	; 0x100
   10b30:	ldr	r3, [r0]
   10b34:	mov	r0, r4
   10b38:	bl	18d0 <fread@plt>
   10b3c:	mov	r6, r0
   10b40:	mov	r7, #0
   10b44:	add	r0, r4, r7
   10b48:	bl	1c64 <Mat_uint16Swap>
   10b4c:	add	r1, r9, r7
   10b50:	add	r7, r7, #2
   10b54:	cmp	r7, #512	; 0x200
   10b58:	strh	r0, [r1]
   10b5c:	bne	10b44 <ReadUInt16Data+0x878>
   10b60:	ldr	r2, [sp, #20]
   10b64:	ldr	r7, [sp, #24]
   10b68:	add	r0, sl, #256	; 0x100
   10b6c:	add	r5, r6, r5
   10b70:	add	r9, r9, #512	; 0x200
   10b74:	add	r1, r8, #512	; 0x200
   10b78:	cmp	r0, r2
   10b7c:	blt	10b1c <ReadUInt16Data+0x850>
   10b80:	ldr	r1, [sp, #8]
   10b84:	cmp	r0, r1
   10b88:	bge	117b8 <ReadUInt16Data+0x14ec>
   10b8c:	sub	r6, r1, r0
   10b90:	ldr	r0, [sp, #28]
   10b94:	add	r4, sp, #48	; 0x30
   10b98:	mov	r1, r7
   10b9c:	mov	r2, r6
   10ba0:	ldr	r3, [r0]
   10ba4:	mov	r0, r4
   10ba8:	bl	18d0 <fread@plt>
   10bac:	add	r5, r0, r5
   10bb0:	cmp	r6, #1
   10bb4:	blt	117b8 <ReadUInt16Data+0x14ec>
   10bb8:	ldr	r0, [sp, #20]
   10bbc:	sub	r6, r0, sl
   10bc0:	mov	r0, r4
   10bc4:	bl	1c64 <Mat_uint16Swap>
   10bc8:	strh	r0, [r8], #2
   10bcc:	subs	r6, r6, #1
   10bd0:	add	r4, r4, #2
   10bd4:	bne	10bc0 <ReadUInt16Data+0x8f4>
   10bd8:	b	117b8 <ReadUInt16Data+0x14ec>
   10bdc:	sub	r0, r6, #256	; 0x100
   10be0:	add	r1, r9, #512	; 0x200
   10be4:	mov	r5, #0
   10be8:	str	r6, [sp, #8]
   10bec:	str	r0, [sp, #16]
   10bf0:	mov	r0, #0
   10bf4:	ldr	r3, [sl]
   10bf8:	add	r6, sp, #48	; 0x30
   10bfc:	str	r0, [sp, #20]
   10c00:	mov	r8, r1
   10c04:	mov	r1, r7
   10c08:	mov	r2, #256	; 0x100
   10c0c:	mov	r0, r6
   10c10:	bl	18d0 <fread@plt>
   10c14:	mov	r4, r0
   10c18:	mov	r7, #0
   10c1c:	mov	r0, r6
   10c20:	add	sl, r9, r7
   10c24:	bl	1c28 <Mat_int32Swap>
   10c28:	add	r7, r7, #2
   10c2c:	add	r6, r6, #4
   10c30:	strh	r0, [sl]
   10c34:	cmp	r7, #512	; 0x200
   10c38:	bne	10c1c <ReadUInt16Data+0x950>
   10c3c:	ldr	r0, [sp, #20]
   10c40:	ldr	r2, [sp, #16]
   10c44:	ldr	r7, [sp, #24]
   10c48:	ldr	sl, [sp, #28]
   10c4c:	add	r5, r4, r5
   10c50:	add	r9, r9, #512	; 0x200
   10c54:	add	r1, r8, #512	; 0x200
   10c58:	add	r0, r0, #256	; 0x100
   10c5c:	cmp	r0, r2
   10c60:	blt	10bf4 <ReadUInt16Data+0x928>
   10c64:	ldr	r1, [sp, #8]
   10c68:	cmp	r0, r1
   10c6c:	bge	117b8 <ReadUInt16Data+0x14ec>
   10c70:	ldr	r3, [sl]
   10c74:	sub	r6, r1, r0
   10c78:	add	r4, sp, #48	; 0x30
   10c7c:	mov	r1, r7
   10c80:	mov	r0, r4
   10c84:	mov	r2, r6
   10c88:	bl	18d0 <fread@plt>
   10c8c:	add	r5, r0, r5
   10c90:	cmp	r6, #1
   10c94:	blt	117b8 <ReadUInt16Data+0x14ec>
   10c98:	ldr	r0, [sp, #16]
   10c9c:	ldr	r1, [sp, #20]
   10ca0:	sub	r6, r0, r1
   10ca4:	mov	r0, r4
   10ca8:	bl	1c28 <Mat_int32Swap>
   10cac:	strh	r0, [r8], #2
   10cb0:	subs	r6, r6, #1
   10cb4:	add	r4, r4, #4
   10cb8:	bne	10ca4 <ReadUInt16Data+0x9d8>
   10cbc:	b	117b8 <ReadUInt16Data+0x14ec>
   10cc0:	sub	r0, r6, #256	; 0x100
   10cc4:	add	r1, r9, #512	; 0x200
   10cc8:	mov	r5, #0
   10ccc:	str	r6, [sp, #8]
   10cd0:	str	r0, [sp, #16]
   10cd4:	mov	r0, #0
   10cd8:	ldr	r3, [sl]
   10cdc:	add	r6, sp, #48	; 0x30
   10ce0:	str	r0, [sp, #20]
   10ce4:	mov	r8, r1
   10ce8:	mov	r1, r7
   10cec:	mov	r2, #256	; 0x100
   10cf0:	mov	r0, r6
   10cf4:	bl	18d0 <fread@plt>
   10cf8:	mov	r4, r0
   10cfc:	mov	r7, #0
   10d00:	mov	r0, r6
   10d04:	add	sl, r9, r7
   10d08:	bl	1c3c <Mat_uint32Swap>
   10d0c:	add	r7, r7, #2
   10d10:	add	r6, r6, #4
   10d14:	strh	r0, [sl]
   10d18:	cmp	r7, #512	; 0x200
   10d1c:	bne	10d00 <ReadUInt16Data+0xa34>
   10d20:	ldr	r0, [sp, #20]
   10d24:	ldr	r2, [sp, #16]
   10d28:	ldr	r7, [sp, #24]
   10d2c:	ldr	sl, [sp, #28]
   10d30:	add	r5, r4, r5
   10d34:	add	r9, r9, #512	; 0x200
   10d38:	add	r1, r8, #512	; 0x200
   10d3c:	add	r0, r0, #256	; 0x100
   10d40:	cmp	r0, r2
   10d44:	blt	10cd8 <ReadUInt16Data+0xa0c>
   10d48:	ldr	r1, [sp, #8]
   10d4c:	cmp	r0, r1
   10d50:	bge	117b8 <ReadUInt16Data+0x14ec>
   10d54:	ldr	r3, [sl]
   10d58:	sub	r6, r1, r0
   10d5c:	add	r4, sp, #48	; 0x30
   10d60:	mov	r1, r7
   10d64:	mov	r0, r4
   10d68:	mov	r2, r6
   10d6c:	bl	18d0 <fread@plt>
   10d70:	add	r5, r0, r5
   10d74:	cmp	r6, #1
   10d78:	blt	117b8 <ReadUInt16Data+0x14ec>
   10d7c:	ldr	r0, [sp, #16]
   10d80:	ldr	r1, [sp, #20]
   10d84:	sub	r6, r0, r1
   10d88:	mov	r0, r4
   10d8c:	bl	1c3c <Mat_uint32Swap>
   10d90:	strh	r0, [r8], #2
   10d94:	subs	r6, r6, #1
   10d98:	add	r4, r4, #4
   10d9c:	bne	10d88 <ReadUInt16Data+0xabc>
   10da0:	b	117b8 <ReadUInt16Data+0x14ec>
   10da4:	sub	r0, r6, #256	; 0x100
   10da8:	add	r1, r9, #512	; 0x200
   10dac:	mov	r5, #0
   10db0:	str	r6, [sp, #8]
   10db4:	str	r0, [sp, #20]
   10db8:	mov	r0, #0
   10dbc:	mov	sl, r0
   10dc0:	ldr	r0, [sp, #28]
   10dc4:	add	r6, sp, #48	; 0x30
   10dc8:	mov	r8, r1
   10dcc:	mov	r1, r7
   10dd0:	mov	r2, #256	; 0x100
   10dd4:	ldr	r3, [r0]
   10dd8:	mov	r0, r6
   10ddc:	bl	18d0 <fread@plt>
   10de0:	mov	r4, r0
   10de4:	mov	r7, #0
   10de8:	mov	r0, r6
   10dec:	bl	1c7c <Mat_floatSwap>
   10df0:	vcvt.u32.f32	s0, s0
   10df4:	add	r0, r9, r7
   10df8:	add	r7, r7, #2
   10dfc:	add	r6, r6, #4
   10e00:	vmov	r1, s0
   10e04:	cmp	r7, #512	; 0x200
   10e08:	strh	r1, [r0]
   10e0c:	bne	10de8 <ReadUInt16Data+0xb1c>
   10e10:	ldr	r2, [sp, #20]
   10e14:	ldr	r7, [sp, #24]
   10e18:	add	r0, sl, #256	; 0x100
   10e1c:	add	r5, r4, r5
   10e20:	add	r9, r9, #512	; 0x200
   10e24:	add	r1, r8, #512	; 0x200
   10e28:	cmp	r0, r2
   10e2c:	blt	10dbc <ReadUInt16Data+0xaf0>
   10e30:	ldr	r1, [sp, #8]
   10e34:	cmp	r0, r1
   10e38:	bge	117b8 <ReadUInt16Data+0x14ec>
   10e3c:	sub	r6, r1, r0
   10e40:	ldr	r0, [sp, #28]
   10e44:	add	r4, sp, #48	; 0x30
   10e48:	mov	r1, r7
   10e4c:	mov	r2, r6
   10e50:	ldr	r3, [r0]
   10e54:	mov	r0, r4
   10e58:	bl	18d0 <fread@plt>
   10e5c:	add	r5, r0, r5
   10e60:	cmp	r6, #1
   10e64:	blt	117b8 <ReadUInt16Data+0x14ec>
   10e68:	ldr	r0, [sp, #20]
   10e6c:	sub	r6, r0, sl
   10e70:	mov	r0, r4
   10e74:	bl	1c7c <Mat_floatSwap>
   10e78:	vcvt.u32.f32	s0, s0
   10e7c:	subs	r6, r6, #1
   10e80:	add	r4, r4, #4
   10e84:	vmov	r0, s0
   10e88:	strh	r0, [r8], #2
   10e8c:	bne	10e70 <ReadUInt16Data+0xba4>
   10e90:	b	117b8 <ReadUInt16Data+0x14ec>
   10e94:	sub	r0, r6, #256	; 0x100
   10e98:	add	r1, r9, #512	; 0x200
   10e9c:	mov	r5, #0
   10ea0:	str	r6, [sp, #8]
   10ea4:	str	r0, [sp, #20]
   10ea8:	mov	r0, #0
   10eac:	mov	sl, r0
   10eb0:	ldr	r0, [sp, #28]
   10eb4:	add	r6, sp, #48	; 0x30
   10eb8:	mov	r8, r1
   10ebc:	mov	r1, r7
   10ec0:	mov	r2, #256	; 0x100
   10ec4:	ldr	r3, [r0]
   10ec8:	mov	r0, r6
   10ecc:	bl	18d0 <fread@plt>
   10ed0:	mov	r4, r0
   10ed4:	mov	r7, #0
   10ed8:	mov	r0, r6
   10edc:	bl	1cc0 <Mat_doubleSwap>
   10ee0:	vcvt.u32.f64	s0, d0
   10ee4:	add	r0, r9, r7
   10ee8:	add	r7, r7, #2
   10eec:	add	r6, r6, #8
   10ef0:	vmov	r1, s0
   10ef4:	cmp	r7, #512	; 0x200
   10ef8:	strh	r1, [r0]
   10efc:	bne	10ed8 <ReadUInt16Data+0xc0c>
   10f00:	ldr	r2, [sp, #20]
   10f04:	ldr	r7, [sp, #24]
   10f08:	add	r0, sl, #256	; 0x100
   10f0c:	add	r5, r4, r5
   10f10:	add	r9, r9, #512	; 0x200
   10f14:	add	r1, r8, #512	; 0x200
   10f18:	cmp	r0, r2
   10f1c:	blt	10eac <ReadUInt16Data+0xbe0>
   10f20:	ldr	r1, [sp, #8]
   10f24:	cmp	r0, r1
   10f28:	bge	117b8 <ReadUInt16Data+0x14ec>
   10f2c:	sub	r6, r1, r0
   10f30:	ldr	r0, [sp, #28]
   10f34:	add	r4, sp, #48	; 0x30
   10f38:	mov	r1, r7
   10f3c:	mov	r2, r6
   10f40:	ldr	r3, [r0]
   10f44:	mov	r0, r4
   10f48:	bl	18d0 <fread@plt>
   10f4c:	add	r5, r0, r5
   10f50:	cmp	r6, #1
   10f54:	blt	117b8 <ReadUInt16Data+0x14ec>
   10f58:	ldr	r0, [sp, #20]
   10f5c:	sub	r6, r0, sl
   10f60:	mov	r0, r4
   10f64:	bl	1cc0 <Mat_doubleSwap>
   10f68:	vcvt.u32.f64	s0, d0
   10f6c:	subs	r6, r6, #1
   10f70:	add	r4, r4, #8
   10f74:	vmov	r0, s0
   10f78:	strh	r0, [r8], #2
   10f7c:	bne	10f60 <ReadUInt16Data+0xc94>
   10f80:	b	117b8 <ReadUInt16Data+0x14ec>
   10f84:	sub	r0, r6, #256	; 0x100
   10f88:	mov	r2, #0
   10f8c:	add	r1, r9, #512	; 0x200
   10f90:	mov	r7, r9
   10f94:	str	r5, [sp, #4]
   10f98:	str	r6, [sp, #8]
   10f9c:	str	r0, [sp, #12]
   10fa0:	mov	r0, #0
   10fa4:	str	r2, [sp, #20]
   10fa8:	str	r1, [sp, #16]
   10fac:	ldr	r3, [sl]
   10fb0:	ldr	r1, [sp, #24]
   10fb4:	add	r4, sp, #48	; 0x30
   10fb8:	mov	r5, r0
   10fbc:	mov	r2, #256	; 0x100
   10fc0:	mov	r0, r4
   10fc4:	bl	18d0 <fread@plt>
   10fc8:	mov	r8, r0
   10fcc:	mov	sl, #0
   10fd0:	mov	r0, r4
   10fd4:	add	r6, r7, sl
   10fd8:	bl	1bbc <Mat_int64Swap>
   10fdc:	add	sl, sl, #2
   10fe0:	add	r4, r4, #8
   10fe4:	strh	r0, [r6]
   10fe8:	cmp	sl, #512	; 0x200
   10fec:	bne	10fd0 <ReadUInt16Data+0xd04>
   10ff0:	ldr	r0, [sp, #20]
   10ff4:	ldr	r2, [sp, #12]
   10ff8:	ldr	sl, [sp, #28]
   10ffc:	add	r7, r7, #512	; 0x200
   11000:	add	r0, r8, r0
   11004:	str	r0, [sp, #20]
   11008:	ldr	r0, [sp, #16]
   1100c:	add	r1, r0, #512	; 0x200
   11010:	mov	r0, r5
   11014:	add	r0, r5, #256	; 0x100
   11018:	cmp	r0, r2
   1101c:	blt	10fa8 <ReadUInt16Data+0xcdc>
   11020:	ldr	r6, [sp, #8]
   11024:	cmp	r0, r6
   11028:	bge	11084 <ReadUInt16Data+0xdb8>
   1102c:	ldr	r7, [sp, #24]
   11030:	ldr	r3, [sl]
   11034:	sub	r8, r6, r0
   11038:	add	r4, sp, #48	; 0x30
   1103c:	mov	r0, r4
   11040:	mov	r2, r8
   11044:	mov	r1, r7
   11048:	bl	18d0 <fread@plt>
   1104c:	ldr	r1, [sp, #20]
   11050:	cmp	r8, #1
   11054:	add	r1, r0, r1
   11058:	str	r1, [sp, #20]
   1105c:	blt	1155c <ReadUInt16Data+0x1290>
   11060:	ldr	r0, [sp, #12]
   11064:	sub	r7, r0, r5
   11068:	ldr	r5, [sp, #16]
   1106c:	mov	r0, r4
   11070:	bl	1bbc <Mat_int64Swap>
   11074:	strh	r0, [r5], #2
   11078:	subs	r7, r7, #1
   1107c:	add	r4, r4, #8
   11080:	bne	1106c <ReadUInt16Data+0xda0>
   11084:	ldr	r7, [sp, #24]
   11088:	b	1155c <ReadUInt16Data+0x1290>
   1108c:	sub	r0, r6, #256	; 0x100
   11090:	lsl	r4, r6, #1
   11094:	str	r6, [sp, #8]
   11098:	mov	r6, #0
   1109c:	add	r8, sp, #48	; 0x30
   110a0:	mov	r5, #0
   110a4:	str	r0, [sp, #20]
   110a8:	ldr	r3, [sl]
   110ac:	mov	r0, r8
   110b0:	mov	r1, r7
   110b4:	mov	r2, #256	; 0x100
   110b8:	bl	18d0 <fread@plt>
   110bc:	mov	sl, r0
   110c0:	add	r0, r9, r6, lsl #1
   110c4:	mov	r1, r8
   110c8:	mov	r2, #512	; 0x200
   110cc:	bl	1834 <memcpy@plt>
   110d0:	ldr	r0, [sp, #20]
   110d4:	add	r5, sl, r5
   110d8:	ldr	sl, [sp, #28]
   110dc:	add	r6, r6, #256	; 0x100
   110e0:	sub	r4, r4, #512	; 0x200
   110e4:	cmp	r6, r0
   110e8:	blt	110a8 <ReadUInt16Data+0xddc>
   110ec:	ldr	r0, [sp, #8]
   110f0:	cmp	r6, r0
   110f4:	bge	117b4 <ReadUInt16Data+0x14e8>
   110f8:	ldr	r7, [sp, #24]
   110fc:	ldr	r3, [sl]
   11100:	sub	r8, r0, r6
   11104:	add	r0, sp, #48	; 0x30
   11108:	mov	r2, r8
   1110c:	mov	r1, r7
   11110:	bl	18d0 <fread@plt>
   11114:	add	r5, r0, r5
   11118:	cmp	r8, #1
   1111c:	blt	117b8 <ReadUInt16Data+0x14ec>
   11120:	add	r0, r9, r6, lsl #1
   11124:	add	r1, sp, #48	; 0x30
   11128:	mov	r2, r4
   1112c:	bl	1834 <memcpy@plt>
   11130:	b	117b8 <ReadUInt16Data+0x14ec>
   11134:	add	r1, r9, #512	; 0x200
   11138:	sub	r8, r6, #256	; 0x100
   1113c:	mov	r0, #0
   11140:	add	r4, sp, #48	; 0x30
   11144:	mov	r5, #0
   11148:	str	r6, [sp, #8]
   1114c:	mov	sl, r0
   11150:	ldr	r0, [sp, #28]
   11154:	mov	r6, r1
   11158:	mov	r1, r7
   1115c:	mov	r2, #256	; 0x100
   11160:	ldr	r3, [r0]
   11164:	mov	r0, r4
   11168:	bl	18d0 <fread@plt>
   1116c:	mov	r1, #0
   11170:	mov	r2, r4
   11174:	vld1.32	{d16-d17}, [r2]!
   11178:	add	r3, r9, r1
   1117c:	add	r1, r1, #8
   11180:	cmp	r1, #512	; 0x200
   11184:	vmovn.i32	d16, q8
   11188:	vst1.16	{d16}, [r3]
   1118c:	bne	11174 <ReadUInt16Data+0xea8>
   11190:	add	r5, r0, r5
   11194:	add	r0, sl, #256	; 0x100
   11198:	add	r9, r9, #512	; 0x200
   1119c:	add	r1, r6, #512	; 0x200
   111a0:	cmp	r0, r8
   111a4:	blt	1114c <ReadUInt16Data+0xe80>
   111a8:	ldr	r2, [sp, #8]
   111ac:	cmp	r0, r2
   111b0:	bge	117b8 <ReadUInt16Data+0x14ec>
   111b4:	mov	r1, r7
   111b8:	sub	r7, r2, r0
   111bc:	ldr	r0, [sp, #28]
   111c0:	add	r4, sp, #48	; 0x30
   111c4:	mov	r2, r7
   111c8:	ldr	r3, [r0]
   111cc:	mov	r0, r4
   111d0:	bl	18d0 <fread@plt>
   111d4:	add	r5, r0, r5
   111d8:	cmp	r7, #1
   111dc:	blt	117b4 <ReadUInt16Data+0x14e8>
   111e0:	sub	r0, r8, sl
   111e4:	ldr	r1, [r4], #4
   111e8:	subs	r0, r0, #1
   111ec:	strh	r1, [r6], #2
   111f0:	bne	111e4 <ReadUInt16Data+0xf18>
   111f4:	b	117b4 <ReadUInt16Data+0x14e8>
   111f8:	add	r1, r9, #512	; 0x200
   111fc:	sub	r8, r6, #256	; 0x100
   11200:	mov	r0, #0
   11204:	add	r4, sp, #48	; 0x30
   11208:	mov	r5, #0
   1120c:	str	r6, [sp, #8]
   11210:	mov	sl, r0
   11214:	ldr	r0, [sp, #28]
   11218:	mov	r6, r1
   1121c:	mov	r1, r7
   11220:	mov	r2, #256	; 0x100
   11224:	ldr	r3, [r0]
   11228:	mov	r0, r4
   1122c:	bl	18d0 <fread@plt>
   11230:	mov	r1, #0
   11234:	mov	r2, r4
   11238:	vld1.32	{d16-d17}, [r2]!
   1123c:	add	r3, r9, r1
   11240:	add	r1, r1, #8
   11244:	cmp	r1, #512	; 0x200
   11248:	vmovn.i32	d16, q8
   1124c:	vst1.16	{d16}, [r3]
   11250:	bne	11238 <ReadUInt16Data+0xf6c>
   11254:	add	r5, r0, r5
   11258:	add	r0, sl, #256	; 0x100
   1125c:	add	r9, r9, #512	; 0x200
   11260:	add	r1, r6, #512	; 0x200
   11264:	cmp	r0, r8
   11268:	blt	11210 <ReadUInt16Data+0xf44>
   1126c:	ldr	r2, [sp, #8]
   11270:	cmp	r0, r2
   11274:	bge	117b8 <ReadUInt16Data+0x14ec>
   11278:	mov	r1, r7
   1127c:	sub	r7, r2, r0
   11280:	ldr	r0, [sp, #28]
   11284:	add	r4, sp, #48	; 0x30
   11288:	mov	r2, r7
   1128c:	ldr	r3, [r0]
   11290:	mov	r0, r4
   11294:	bl	18d0 <fread@plt>
   11298:	add	r5, r0, r5
   1129c:	cmp	r7, #1
   112a0:	blt	117b4 <ReadUInt16Data+0x14e8>
   112a4:	sub	r0, r8, sl
   112a8:	ldr	r1, [r4], #4
   112ac:	subs	r0, r0, #1
   112b0:	strh	r1, [r6], #2
   112b4:	bne	112a8 <ReadUInt16Data+0xfdc>
   112b8:	b	117b4 <ReadUInt16Data+0x14e8>
   112bc:	add	r1, r9, #512	; 0x200
   112c0:	sub	r8, r6, #256	; 0x100
   112c4:	mov	r0, #0
   112c8:	add	r4, sp, #48	; 0x30
   112cc:	mov	r5, #0
   112d0:	str	r6, [sp, #8]
   112d4:	mov	sl, r0
   112d8:	ldr	r0, [sp, #28]
   112dc:	mov	r6, r1
   112e0:	mov	r1, r7
   112e4:	mov	r2, #256	; 0x100
   112e8:	ldr	r3, [r0]
   112ec:	mov	r0, r4
   112f0:	bl	18d0 <fread@plt>
   112f4:	mov	r1, #0
   112f8:	mov	r2, r4
   112fc:	vld1.32	{d16-d17}, [r2]!
   11300:	add	r3, r9, r1
   11304:	add	r1, r1, #8
   11308:	cmp	r1, #512	; 0x200
   1130c:	vcvt.u32.f32	q8, q8
   11310:	vmovn.i32	d16, q8
   11314:	vst1.16	{d16}, [r3]
   11318:	bne	112fc <ReadUInt16Data+0x1030>
   1131c:	add	r5, r0, r5
   11320:	add	r0, sl, #256	; 0x100
   11324:	add	r9, r9, #512	; 0x200
   11328:	add	r1, r6, #512	; 0x200
   1132c:	cmp	r0, r8
   11330:	blt	112d4 <ReadUInt16Data+0x1008>
   11334:	ldr	r2, [sp, #8]
   11338:	cmp	r0, r2
   1133c:	bge	117b8 <ReadUInt16Data+0x14ec>
   11340:	mov	r1, r7
   11344:	sub	r7, r2, r0
   11348:	ldr	r0, [sp, #28]
   1134c:	add	r4, sp, #48	; 0x30
   11350:	mov	r2, r7
   11354:	ldr	r3, [r0]
   11358:	mov	r0, r4
   1135c:	bl	18d0 <fread@plt>
   11360:	add	r5, r0, r5
   11364:	cmp	r7, #1
   11368:	blt	117b4 <ReadUInt16Data+0x14e8>
   1136c:	sub	r0, r8, sl
   11370:	vldr	s0, [r4]
   11374:	subs	r0, r0, #1
   11378:	add	r4, r4, #4
   1137c:	vcvt.u32.f32	s0, s0
   11380:	vmov	r1, s0
   11384:	strh	r1, [r6], #2
   11388:	bne	11370 <ReadUInt16Data+0x10a4>
   1138c:	b	117b4 <ReadUInt16Data+0x14e8>
   11390:	add	r1, r9, #512	; 0x200
   11394:	sub	r8, r6, #256	; 0x100
   11398:	mov	r0, #0
   1139c:	add	r4, sp, #48	; 0x30
   113a0:	mov	r5, #0
   113a4:	str	r6, [sp, #8]
   113a8:	mov	sl, r0
   113ac:	ldr	r0, [sp, #28]
   113b0:	mov	r6, r1
   113b4:	mov	r1, r7
   113b8:	mov	r2, #256	; 0x100
   113bc:	ldr	r3, [r0]
   113c0:	mov	r0, r4
   113c4:	bl	18d0 <fread@plt>
   113c8:	mov	r1, #0
   113cc:	mov	r2, r4
   113d0:	vldr	d16, [r2]
   113d4:	add	r3, r9, r1
   113d8:	add	r1, r1, #2
   113dc:	add	r2, r2, #8
   113e0:	cmp	r1, #512	; 0x200
   113e4:	vcvt.u32.f64	s0, d16
   113e8:	vmov	r7, s0
   113ec:	strh	r7, [r3]
   113f0:	bne	113d0 <ReadUInt16Data+0x1104>
   113f4:	ldr	r7, [sp, #24]
   113f8:	add	r5, r0, r5
   113fc:	add	r0, sl, #256	; 0x100
   11400:	add	r9, r9, #512	; 0x200
   11404:	add	r1, r6, #512	; 0x200
   11408:	cmp	r0, r8
   1140c:	blt	113a8 <ReadUInt16Data+0x10dc>
   11410:	ldr	r2, [sp, #8]
   11414:	cmp	r0, r2
   11418:	bge	117b8 <ReadUInt16Data+0x14ec>
   1141c:	mov	r1, r7
   11420:	sub	r7, r2, r0
   11424:	ldr	r0, [sp, #28]
   11428:	add	r4, sp, #48	; 0x30
   1142c:	mov	r2, r7
   11430:	ldr	r3, [r0]
   11434:	mov	r0, r4
   11438:	bl	18d0 <fread@plt>
   1143c:	add	r5, r0, r5
   11440:	cmp	r7, #1
   11444:	blt	117b4 <ReadUInt16Data+0x14e8>
   11448:	sub	r0, r8, sl
   1144c:	vldr	d16, [r4]
   11450:	subs	r0, r0, #1
   11454:	add	r4, r4, #8
   11458:	vcvt.u32.f64	s0, d16
   1145c:	vmov	r1, s0
   11460:	strh	r1, [r6], #2
   11464:	bne	1144c <ReadUInt16Data+0x1180>
   11468:	b	117b4 <ReadUInt16Data+0x14e8>
   1146c:	str	r5, [sp, #4]
   11470:	add	r1, r9, #512	; 0x200
   11474:	sub	r8, r6, #256	; 0x100
   11478:	mov	r0, #0
   1147c:	add	r4, sp, #48	; 0x30
   11480:	mov	r7, r9
   11484:	mov	r5, #0
   11488:	str	r6, [sp, #8]
   1148c:	mov	sl, r0
   11490:	ldr	r0, [sp, #28]
   11494:	mov	r6, r1
   11498:	ldr	r1, [sp, #24]
   1149c:	mov	r2, #256	; 0x100
   114a0:	ldr	r3, [r0]
   114a4:	mov	r0, r4
   114a8:	bl	18d0 <fread@plt>
   114ac:	mov	r1, #0
   114b0:	mov	r2, r4
   114b4:	vld1.64	{d16-d17}, [r2]!
   114b8:	add	r3, r7, r1
   114bc:	add	r1, r1, #4
   114c0:	cmp	r1, #512	; 0x200
   114c4:	vmovn.i64	d16, q8
   114c8:	vuzp.16	d16, d17
   114cc:	vst1.32	{d16[0]}, [r3]
   114d0:	bne	114b4 <ReadUInt16Data+0x11e8>
   114d4:	add	r5, r0, r5
   114d8:	add	r0, sl, #256	; 0x100
   114dc:	add	r7, r7, #512	; 0x200
   114e0:	add	r1, r6, #512	; 0x200
   114e4:	cmp	r0, r8
   114e8:	blt	1148c <ReadUInt16Data+0x11c0>
   114ec:	ldr	r1, [sp, #8]
   114f0:	cmp	r0, r1
   114f4:	bge	1154c <ReadUInt16Data+0x1280>
   114f8:	sub	r2, r1, r0
   114fc:	ldr	r0, [sp, #28]
   11500:	ldr	r7, [sp, #24]
   11504:	add	r4, sp, #48	; 0x30
   11508:	str	r2, [sp, #16]
   1150c:	ldr	r3, [r0]
   11510:	mov	r0, r4
   11514:	mov	r1, r7
   11518:	bl	18d0 <fread@plt>
   1151c:	add	r5, r0, r5
   11520:	ldr	r0, [sp, #16]
   11524:	str	r5, [sp, #20]
   11528:	cmp	r0, #1
   1152c:	blt	11544 <ReadUInt16Data+0x1278>
   11530:	sub	r0, r8, sl
   11534:	ldrh	r1, [r4], #8
   11538:	subs	r0, r0, #1
   1153c:	strh	r1, [r6], #2
   11540:	bne	11534 <ReadUInt16Data+0x1268>
   11544:	ldr	r6, [sp, #8]
   11548:	b	11558 <ReadUInt16Data+0x128c>
   1154c:	ldr	r7, [sp, #24]
   11550:	str	r5, [sp, #20]
   11554:	mov	r6, r1
   11558:	ldr	sl, [sp, #28]
   1155c:	ldr	r5, [sp, #4]
   11560:	cmp	r5, #13
   11564:	bne	116e8 <ReadUInt16Data+0x141c>
   11568:	ldr	r0, [sl, #20]
   1156c:	cmp	r0, #0
   11570:	beq	115c0 <ReadUInt16Data+0x12f4>
   11574:	cmp	r6, #256	; 0x100
   11578:	bgt	11604 <ReadUInt16Data+0x1338>
   1157c:	ldr	r3, [sl]
   11580:	add	r4, sp, #48	; 0x30
   11584:	mov	r1, r7
   11588:	mov	r2, r6
   1158c:	mov	r0, r4
   11590:	bl	18d0 <fread@plt>
   11594:	ldr	r5, [sp, #20]
   11598:	cmp	r6, #1
   1159c:	add	r5, r0, r5
   115a0:	blt	117b8 <ReadUInt16Data+0x14ec>
   115a4:	mov	r0, r4
   115a8:	bl	1c0c <Mat_uint64Swap>
   115ac:	strh	r0, [r9], #2
   115b0:	subs	r6, r6, #1
   115b4:	add	r4, r4, #8
   115b8:	bne	115a4 <ReadUInt16Data+0x12d8>
   115bc:	b	117b8 <ReadUInt16Data+0x14ec>
   115c0:	cmp	r6, #256	; 0x100
   115c4:	bgt	116f0 <ReadUInt16Data+0x1424>
   115c8:	ldr	r3, [sl]
   115cc:	add	r4, sp, #48	; 0x30
   115d0:	mov	r1, r7
   115d4:	mov	r2, r6
   115d8:	mov	r0, r4
   115dc:	bl	18d0 <fread@plt>
   115e0:	ldr	r5, [sp, #20]
   115e4:	cmp	r6, #1
   115e8:	add	r5, r0, r5
   115ec:	blt	117b8 <ReadUInt16Data+0x14ec>
   115f0:	ldrh	r0, [r4], #8
   115f4:	subs	r6, r6, #1
   115f8:	strh	r0, [r9], #2
   115fc:	bne	115f0 <ReadUInt16Data+0x1324>
   11600:	b	117b8 <ReadUInt16Data+0x14ec>
   11604:	add	r1, r9, #512	; 0x200
   11608:	sub	r5, r6, #256	; 0x100
   1160c:	mov	r0, #0
   11610:	str	r6, [sp, #8]
   11614:	ldr	r3, [sl]
   11618:	add	r6, sp, #48	; 0x30
   1161c:	str	r0, [sp, #16]
   11620:	mov	r8, r1
   11624:	mov	r1, r7
   11628:	mov	r2, #256	; 0x100
   1162c:	mov	r0, r6
   11630:	bl	18d0 <fread@plt>
   11634:	mov	r4, r0
   11638:	mov	r7, #0
   1163c:	mov	r0, r6
   11640:	add	sl, r9, r7
   11644:	bl	1c0c <Mat_uint64Swap>
   11648:	add	r7, r7, #2
   1164c:	add	r6, r6, #8
   11650:	strh	r0, [sl]
   11654:	cmp	r7, #512	; 0x200
   11658:	bne	1163c <ReadUInt16Data+0x1370>
   1165c:	ldr	r0, [sp, #20]
   11660:	ldr	r7, [sp, #24]
   11664:	ldr	sl, [sp, #28]
   11668:	add	r9, r9, #512	; 0x200
   1166c:	add	r1, r8, #512	; 0x200
   11670:	add	r0, r4, r0
   11674:	str	r0, [sp, #20]
   11678:	ldr	r0, [sp, #16]
   1167c:	add	r0, r0, #256	; 0x100
   11680:	cmp	r0, r5
   11684:	blt	11614 <ReadUInt16Data+0x1348>
   11688:	ldr	r1, [sp, #8]
   1168c:	cmp	r0, r1
   11690:	bge	116e8 <ReadUInt16Data+0x141c>
   11694:	ldr	r3, [sl]
   11698:	sub	r6, r1, r0
   1169c:	add	r4, sp, #48	; 0x30
   116a0:	mov	r1, r7
   116a4:	mov	r9, r5
   116a8:	mov	r0, r4
   116ac:	mov	r2, r6
   116b0:	bl	18d0 <fread@plt>
   116b4:	ldr	r5, [sp, #20]
   116b8:	cmp	r6, #1
   116bc:	add	r5, r0, r5
   116c0:	blt	117b8 <ReadUInt16Data+0x14ec>
   116c4:	ldr	r0, [sp, #16]
   116c8:	sub	r6, r9, r0
   116cc:	mov	r0, r4
   116d0:	bl	1c0c <Mat_uint64Swap>
   116d4:	strh	r0, [r8], #2
   116d8:	subs	r6, r6, #1
   116dc:	add	r4, r4, #8
   116e0:	bne	116cc <ReadUInt16Data+0x1400>
   116e4:	b	117b8 <ReadUInt16Data+0x14ec>
   116e8:	ldr	r5, [sp, #20]
   116ec:	b	117b8 <ReadUInt16Data+0x14ec>
   116f0:	ldr	r5, [sp, #20]
   116f4:	add	r1, r9, #512	; 0x200
   116f8:	sub	r8, r6, #256	; 0x100
   116fc:	mov	r0, #0
   11700:	add	r4, sp, #48	; 0x30
   11704:	str	r6, [sp, #8]
   11708:	mov	sl, r0
   1170c:	ldr	r0, [sp, #28]
   11710:	mov	r6, r1
   11714:	mov	r1, r7
   11718:	mov	r2, #256	; 0x100
   1171c:	ldr	r3, [r0]
   11720:	mov	r0, r4
   11724:	bl	18d0 <fread@plt>
   11728:	mov	r1, #0
   1172c:	mov	r2, r4
   11730:	vld1.64	{d16-d17}, [r2]!
   11734:	add	r3, r9, r1
   11738:	add	r1, r1, #4
   1173c:	cmp	r1, #512	; 0x200
   11740:	vmovn.i64	d16, q8
   11744:	vuzp.16	d16, d17
   11748:	vst1.32	{d16[0]}, [r3]
   1174c:	bne	11730 <ReadUInt16Data+0x1464>
   11750:	add	r5, r0, r5
   11754:	add	r0, sl, #256	; 0x100
   11758:	add	r9, r9, #512	; 0x200
   1175c:	add	r1, r6, #512	; 0x200
   11760:	cmp	r0, r8
   11764:	blt	11708 <ReadUInt16Data+0x143c>
   11768:	ldr	r2, [sp, #8]
   1176c:	cmp	r0, r2
   11770:	bge	117b8 <ReadUInt16Data+0x14ec>
   11774:	mov	r1, r7
   11778:	sub	r7, r2, r0
   1177c:	ldr	r0, [sp, #28]
   11780:	add	r4, sp, #48	; 0x30
   11784:	mov	r2, r7
   11788:	ldr	r3, [r0]
   1178c:	mov	r0, r4
   11790:	bl	18d0 <fread@plt>
   11794:	add	r5, r0, r5
   11798:	cmp	r7, #1
   1179c:	blt	117b4 <ReadUInt16Data+0x14e8>
   117a0:	sub	r0, r8, sl
   117a4:	ldrh	r1, [r4], #8
   117a8:	subs	r0, r0, #1
   117ac:	strh	r1, [r6], #2
   117b0:	bne	117a4 <ReadUInt16Data+0x14d8>
   117b4:	ldr	r7, [sp, #24]
   117b8:	mul	r0, r5, r7
   117bc:	sub	sp, fp, #28
   117c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000117c4 <ReadCompressedUInt16Data>:
   117c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   117c8:	add	fp, sp, #28
   117cc:	sub	sp, sp, #12
   117d0:	mov	r7, r0
   117d4:	mov	r0, #0
   117d8:	cmp	r1, #0
   117dc:	beq	11ce4 <ReadCompressedUInt16Data+0x520>
   117e0:	cmp	r7, #0
   117e4:	movne	r5, r2
   117e8:	cmpne	r2, #0
   117ec:	beq	11ce4 <ReadCompressedUInt16Data+0x520>
   117f0:	ldr	sl, [fp, #8]
   117f4:	mov	r0, r3
   117f8:	mov	r4, r3
   117fc:	mov	r6, r1
   11800:	bl	193c <Mat_SizeOf@plt>
   11804:	mov	r9, r0
   11808:	sub	r0, r4, #1
   1180c:	cmp	r0, #12
   11810:	bhi	11ce0 <ReadCompressedUInt16Data+0x51c>
   11814:	add	r1, pc, #4
   11818:	ldr	r0, [r1, r0, lsl #2]
   1181c:	add	pc, r1, r0
   11820:	.word	0x00000034
   11824:	.word	0x0000006c
   11828:	.word	0x000000a4
   1182c:	.word	0x000000ec
   11830:	.word	0x00000134
   11834:	.word	0x0000017c
   11838:	.word	0x000001c4
   1183c:	.word	0x000004c0
   11840:	.word	0x00000214
   11844:	.word	0x000004c0
   11848:	.word	0x000004c0
   1184c:	.word	0x00000264
   11850:	.word	0x000002ac
   11854:	cmp	sl, #1
   11858:	blt	11ce0 <ReadCompressedUInt16Data+0x51c>
   1185c:	mov	r8, sp
   11860:	mov	r4, sl
   11864:	mov	r0, r7
   11868:	mov	r1, r6
   1186c:	mov	r2, r8
   11870:	mov	r3, r9
   11874:	bl	31f0 <InflateData>
   11878:	ldrsb	r0, [sp]
   1187c:	subs	r4, r4, #1
   11880:	strh	r0, [r5], #2
   11884:	bne	11864 <ReadCompressedUInt16Data+0xa0>
   11888:	b	11ce0 <ReadCompressedUInt16Data+0x51c>
   1188c:	cmp	sl, #1
   11890:	blt	11ce0 <ReadCompressedUInt16Data+0x51c>
   11894:	mov	r8, sp
   11898:	mov	r4, sl
   1189c:	mov	r0, r7
   118a0:	mov	r1, r6
   118a4:	mov	r2, r8
   118a8:	mov	r3, r9
   118ac:	bl	31f0 <InflateData>
   118b0:	ldrb	r0, [sp]
   118b4:	subs	r4, r4, #1
   118b8:	strh	r0, [r5], #2
   118bc:	bne	1189c <ReadCompressedUInt16Data+0xd8>
   118c0:	b	11ce0 <ReadCompressedUInt16Data+0x51c>
   118c4:	ldr	r0, [r7, #20]
   118c8:	cmp	r0, #0
   118cc:	beq	11b14 <ReadCompressedUInt16Data+0x350>
   118d0:	cmp	sl, #1
   118d4:	blt	11ce0 <ReadCompressedUInt16Data+0x51c>
   118d8:	mov	r8, sp
   118dc:	mov	r4, sl
   118e0:	mov	r0, r7
   118e4:	mov	r1, r6
   118e8:	mov	r2, r8
   118ec:	mov	r3, r9
   118f0:	bl	31f0 <InflateData>
   118f4:	mov	r0, r8
   118f8:	bl	1c50 <Mat_int16Swap>
   118fc:	strh	r0, [r5], #2
   11900:	subs	r4, r4, #1
   11904:	bne	118e0 <ReadCompressedUInt16Data+0x11c>
   11908:	b	11ce0 <ReadCompressedUInt16Data+0x51c>
   1190c:	ldr	r0, [r7, #20]
   11910:	cmp	r0, #0
   11914:	beq	11b4c <ReadCompressedUInt16Data+0x388>
   11918:	cmp	sl, #1
   1191c:	blt	11ce0 <ReadCompressedUInt16Data+0x51c>
   11920:	mov	r8, sp
   11924:	mov	r4, sl
   11928:	mov	r0, r7
   1192c:	mov	r1, r6
   11930:	mov	r2, r8
   11934:	mov	r3, r9
   11938:	bl	31f0 <InflateData>
   1193c:	mov	r0, r8
   11940:	bl	1c64 <Mat_uint16Swap>
   11944:	strh	r0, [r5], #2
   11948:	subs	r4, r4, #1
   1194c:	bne	11928 <ReadCompressedUInt16Data+0x164>
   11950:	b	11ce0 <ReadCompressedUInt16Data+0x51c>
   11954:	ldr	r0, [r7, #20]
   11958:	cmp	r0, #0
   1195c:	beq	11b84 <ReadCompressedUInt16Data+0x3c0>
   11960:	cmp	sl, #1
   11964:	blt	11ce0 <ReadCompressedUInt16Data+0x51c>
   11968:	mov	r8, sp
   1196c:	mov	r4, sl
   11970:	mov	r0, r7
   11974:	mov	r1, r6
   11978:	mov	r2, r8
   1197c:	mov	r3, r9
   11980:	bl	31f0 <InflateData>
   11984:	mov	r0, r8
   11988:	bl	1c28 <Mat_int32Swap>
   1198c:	strh	r0, [r5], #2
   11990:	subs	r4, r4, #1
   11994:	bne	11970 <ReadCompressedUInt16Data+0x1ac>
   11998:	b	11ce0 <ReadCompressedUInt16Data+0x51c>
   1199c:	ldr	r0, [r7, #20]
   119a0:	cmp	r0, #0
   119a4:	beq	11bbc <ReadCompressedUInt16Data+0x3f8>
   119a8:	cmp	sl, #1
   119ac:	blt	11ce0 <ReadCompressedUInt16Data+0x51c>
   119b0:	mov	r8, sp
   119b4:	mov	r4, sl
   119b8:	mov	r0, r7
   119bc:	mov	r1, r6
   119c0:	mov	r2, r8
   119c4:	mov	r3, r9
   119c8:	bl	31f0 <InflateData>
   119cc:	mov	r0, r8
   119d0:	bl	1c3c <Mat_uint32Swap>
   119d4:	strh	r0, [r5], #2
   119d8:	subs	r4, r4, #1
   119dc:	bne	119b8 <ReadCompressedUInt16Data+0x1f4>
   119e0:	b	11ce0 <ReadCompressedUInt16Data+0x51c>
   119e4:	ldr	r0, [r7, #20]
   119e8:	cmp	r0, #0
   119ec:	beq	11bf4 <ReadCompressedUInt16Data+0x430>
   119f0:	cmp	sl, #1
   119f4:	blt	11ce0 <ReadCompressedUInt16Data+0x51c>
   119f8:	mov	r8, sp
   119fc:	mov	r4, sl
   11a00:	mov	r0, r7
   11a04:	mov	r1, r6
   11a08:	mov	r2, r8
   11a0c:	mov	r3, r9
   11a10:	bl	31f0 <InflateData>
   11a14:	mov	r0, r8
   11a18:	bl	1c7c <Mat_floatSwap>
   11a1c:	vcvt.u32.f32	s0, s0
   11a20:	subs	r4, r4, #1
   11a24:	vmov	r0, s0
   11a28:	strh	r0, [r5], #2
   11a2c:	bne	11a00 <ReadCompressedUInt16Data+0x23c>
   11a30:	b	11ce0 <ReadCompressedUInt16Data+0x51c>
   11a34:	ldr	r0, [r7, #20]
   11a38:	cmp	r0, #0
   11a3c:	beq	11c34 <ReadCompressedUInt16Data+0x470>
   11a40:	cmp	sl, #1
   11a44:	blt	11ce0 <ReadCompressedUInt16Data+0x51c>
   11a48:	mov	r8, sp
   11a4c:	mov	r4, sl
   11a50:	mov	r0, r7
   11a54:	mov	r1, r6
   11a58:	mov	r2, r8
   11a5c:	mov	r3, r9
   11a60:	bl	31f0 <InflateData>
   11a64:	mov	r0, r8
   11a68:	bl	1cc0 <Mat_doubleSwap>
   11a6c:	vcvt.u32.f64	s0, d0
   11a70:	subs	r4, r4, #1
   11a74:	vmov	r0, s0
   11a78:	strh	r0, [r5], #2
   11a7c:	bne	11a50 <ReadCompressedUInt16Data+0x28c>
   11a80:	b	11ce0 <ReadCompressedUInt16Data+0x51c>
   11a84:	ldr	r0, [r7, #20]
   11a88:	cmp	r0, #0
   11a8c:	beq	11c74 <ReadCompressedUInt16Data+0x4b0>
   11a90:	cmp	sl, #1
   11a94:	blt	11ce0 <ReadCompressedUInt16Data+0x51c>
   11a98:	mov	r8, sp
   11a9c:	mov	r4, sl
   11aa0:	mov	r0, r7
   11aa4:	mov	r1, r6
   11aa8:	mov	r2, r8
   11aac:	mov	r3, r9
   11ab0:	bl	31f0 <InflateData>
   11ab4:	mov	r0, r8
   11ab8:	bl	1bbc <Mat_int64Swap>
   11abc:	strh	r0, [r5], #2
   11ac0:	subs	r4, r4, #1
   11ac4:	bne	11aa0 <ReadCompressedUInt16Data+0x2dc>
   11ac8:	b	11ce0 <ReadCompressedUInt16Data+0x51c>
   11acc:	ldr	r0, [r7, #20]
   11ad0:	cmp	r0, #0
   11ad4:	beq	11cac <ReadCompressedUInt16Data+0x4e8>
   11ad8:	cmp	sl, #1
   11adc:	blt	11ce0 <ReadCompressedUInt16Data+0x51c>
   11ae0:	mov	r8, sp
   11ae4:	mov	r4, sl
   11ae8:	mov	r0, r7
   11aec:	mov	r1, r6
   11af0:	mov	r2, r8
   11af4:	mov	r3, r9
   11af8:	bl	31f0 <InflateData>
   11afc:	mov	r0, r8
   11b00:	bl	1c0c <Mat_uint64Swap>
   11b04:	strh	r0, [r5], #2
   11b08:	subs	r4, r4, #1
   11b0c:	bne	11ae8 <ReadCompressedUInt16Data+0x324>
   11b10:	b	11ce0 <ReadCompressedUInt16Data+0x51c>
   11b14:	cmp	sl, #1
   11b18:	blt	11ce0 <ReadCompressedUInt16Data+0x51c>
   11b1c:	mov	r8, sp
   11b20:	mov	r4, sl
   11b24:	mov	r0, r7
   11b28:	mov	r1, r6
   11b2c:	mov	r2, r8
   11b30:	mov	r3, r9
   11b34:	bl	31f0 <InflateData>
   11b38:	ldrh	r0, [sp]
   11b3c:	subs	r4, r4, #1
   11b40:	strh	r0, [r5], #2
   11b44:	bne	11b24 <ReadCompressedUInt16Data+0x360>
   11b48:	b	11ce0 <ReadCompressedUInt16Data+0x51c>
   11b4c:	cmp	sl, #1
   11b50:	blt	11ce0 <ReadCompressedUInt16Data+0x51c>
   11b54:	mov	r8, sp
   11b58:	mov	r4, sl
   11b5c:	mov	r0, r7
   11b60:	mov	r1, r6
   11b64:	mov	r2, r8
   11b68:	mov	r3, r9
   11b6c:	bl	31f0 <InflateData>
   11b70:	ldrh	r0, [sp]
   11b74:	subs	r4, r4, #1
   11b78:	strh	r0, [r5], #2
   11b7c:	bne	11b5c <ReadCompressedUInt16Data+0x398>
   11b80:	b	11ce0 <ReadCompressedUInt16Data+0x51c>
   11b84:	cmp	sl, #1
   11b88:	blt	11ce0 <ReadCompressedUInt16Data+0x51c>
   11b8c:	mov	r8, sp
   11b90:	mov	r4, sl
   11b94:	mov	r0, r7
   11b98:	mov	r1, r6
   11b9c:	mov	r2, r8
   11ba0:	mov	r3, r9
   11ba4:	bl	31f0 <InflateData>
   11ba8:	ldr	r0, [sp]
   11bac:	subs	r4, r4, #1
   11bb0:	strh	r0, [r5], #2
   11bb4:	bne	11b94 <ReadCompressedUInt16Data+0x3d0>
   11bb8:	b	11ce0 <ReadCompressedUInt16Data+0x51c>
   11bbc:	cmp	sl, #1
   11bc0:	blt	11ce0 <ReadCompressedUInt16Data+0x51c>
   11bc4:	mov	r8, sp
   11bc8:	mov	r4, sl
   11bcc:	mov	r0, r7
   11bd0:	mov	r1, r6
   11bd4:	mov	r2, r8
   11bd8:	mov	r3, r9
   11bdc:	bl	31f0 <InflateData>
   11be0:	ldr	r0, [sp]
   11be4:	subs	r4, r4, #1
   11be8:	strh	r0, [r5], #2
   11bec:	bne	11bcc <ReadCompressedUInt16Data+0x408>
   11bf0:	b	11ce0 <ReadCompressedUInt16Data+0x51c>
   11bf4:	cmp	sl, #1
   11bf8:	blt	11ce0 <ReadCompressedUInt16Data+0x51c>
   11bfc:	mov	r8, sp
   11c00:	mov	r4, sl
   11c04:	mov	r0, r7
   11c08:	mov	r1, r6
   11c0c:	mov	r2, r8
   11c10:	mov	r3, r9
   11c14:	bl	31f0 <InflateData>
   11c18:	vldr	s0, [sp]
   11c1c:	subs	r4, r4, #1
   11c20:	vcvt.u32.f32	s0, s0
   11c24:	vmov	r0, s0
   11c28:	strh	r0, [r5], #2
   11c2c:	bne	11c04 <ReadCompressedUInt16Data+0x440>
   11c30:	b	11ce0 <ReadCompressedUInt16Data+0x51c>
   11c34:	cmp	sl, #1
   11c38:	blt	11ce0 <ReadCompressedUInt16Data+0x51c>
   11c3c:	mov	r8, sp
   11c40:	mov	r4, sl
   11c44:	mov	r0, r7
   11c48:	mov	r1, r6
   11c4c:	mov	r2, r8
   11c50:	mov	r3, r9
   11c54:	bl	31f0 <InflateData>
   11c58:	vldr	d16, [sp]
   11c5c:	subs	r4, r4, #1
   11c60:	vcvt.u32.f64	s0, d16
   11c64:	vmov	r0, s0
   11c68:	strh	r0, [r5], #2
   11c6c:	bne	11c44 <ReadCompressedUInt16Data+0x480>
   11c70:	b	11ce0 <ReadCompressedUInt16Data+0x51c>
   11c74:	cmp	sl, #1
   11c78:	blt	11ce0 <ReadCompressedUInt16Data+0x51c>
   11c7c:	mov	r8, sp
   11c80:	mov	r4, sl
   11c84:	mov	r0, r7
   11c88:	mov	r1, r6
   11c8c:	mov	r2, r8
   11c90:	mov	r3, r9
   11c94:	bl	31f0 <InflateData>
   11c98:	ldrh	r0, [sp]
   11c9c:	subs	r4, r4, #1
   11ca0:	strh	r0, [r5], #2
   11ca4:	bne	11c84 <ReadCompressedUInt16Data+0x4c0>
   11ca8:	b	11ce0 <ReadCompressedUInt16Data+0x51c>
   11cac:	cmp	sl, #1
   11cb0:	blt	11ce0 <ReadCompressedUInt16Data+0x51c>
   11cb4:	mov	r8, sp
   11cb8:	mov	r4, sl
   11cbc:	mov	r0, r7
   11cc0:	mov	r1, r6
   11cc4:	mov	r2, r8
   11cc8:	mov	r3, r9
   11ccc:	bl	31f0 <InflateData>
   11cd0:	ldrh	r0, [sp]
   11cd4:	subs	r4, r4, #1
   11cd8:	strh	r0, [r5], #2
   11cdc:	bne	11cbc <ReadCompressedUInt16Data+0x4f8>
   11ce0:	mul	r0, r9, sl
   11ce4:	sub	sp, fp, #28
   11ce8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00011cec <ReadInt8Data>:
   11cec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11cf0:	add	fp, sp, #28
   11cf4:	sub	sp, sp, #28
   11cf8:	sub	sp, sp, #2048	; 0x800
   11cfc:	mov	r4, r0
   11d00:	mov	r0, #0
   11d04:	cmp	r4, #0
   11d08:	beq	13160 <ReadInt8Data+0x1474>
   11d0c:	cmp	r1, #0
   11d10:	mov	sl, r1
   11d14:	ldrne	r1, [r4]
   11d18:	cmpne	r1, #0
   11d1c:	beq	13160 <ReadInt8Data+0x1474>
   11d20:	mov	r0, r2
   11d24:	mov	r5, r3
   11d28:	mov	r8, r2
   11d2c:	bl	193c <Mat_SizeOf@plt>
   11d30:	str	r0, [sp, #16]
   11d34:	sub	r0, r8, #1
   11d38:	mov	r6, #0
   11d3c:	str	r4, [sp, #20]
   11d40:	cmp	r0, #11
   11d44:	bhi	12f18 <ReadInt8Data+0x122c>
   11d48:	add	r1, pc, #4
   11d4c:	ldr	r0, [r1, r0, lsl #2]
   11d50:	add	pc, r1, r0
   11d54:	.word	0x00000030
   11d58:	.word	0x00000098
   11d5c:	.word	0x000000d4
   11d60:	.word	0x00000128
   11d64:	.word	0x0000017c
   11d68:	.word	0x000001d0
   11d6c:	.word	0x00000224
   11d70:	.word	0x000011c4
   11d74:	.word	0x00000280
   11d78:	.word	0x000011c4
   11d7c:	.word	0x000011c4
   11d80:	.word	0x000002dc
   11d84:	cmp	r5, #256	; 0x100
   11d88:	ble	11df4 <ReadInt8Data+0x108>
   11d8c:	ldr	r9, [sp, #16]
   11d90:	sub	r0, r5, #256	; 0x100
   11d94:	str	r5, [sp, #8]
   11d98:	mov	r5, r4
   11d9c:	mov	r4, #0
   11da0:	add	r8, sp, #24
   11da4:	mov	r6, #0
   11da8:	str	r0, [sp, #12]
   11dac:	ldr	r3, [r5]
   11db0:	mov	r0, r8
   11db4:	mov	r1, r9
   11db8:	mov	r2, #256	; 0x100
   11dbc:	bl	18d0 <fread@plt>
   11dc0:	mov	r7, r0
   11dc4:	add	r0, sl, r4
   11dc8:	mov	r1, r8
   11dcc:	mov	r2, #256	; 0x100
   11dd0:	bl	1834 <memcpy@plt>
   11dd4:	ldr	r0, [sp, #12]
   11dd8:	add	r4, r4, #256	; 0x100
   11ddc:	add	r6, r7, r6
   11de0:	cmp	r4, r0
   11de4:	blt	11dac <ReadInt8Data+0xc0>
   11de8:	b	120ec <ReadInt8Data+0x400>
   11dec:	cmp	r5, #256	; 0x100
   11df0:	bgt	12090 <ReadInt8Data+0x3a4>
   11df4:	ldr	r3, [r4]
   11df8:	ldr	r1, [sp, #16]
   11dfc:	add	r0, sp, #24
   11e00:	mov	r2, r5
   11e04:	bl	18d0 <fread@plt>
   11e08:	mov	r6, r0
   11e0c:	cmp	r5, #1
   11e10:	blt	13158 <ReadInt8Data+0x146c>
   11e14:	add	r1, sp, #24
   11e18:	mov	r0, sl
   11e1c:	mov	r2, r5
   11e20:	bl	1834 <memcpy@plt>
   11e24:	b	13158 <ReadInt8Data+0x146c>
   11e28:	ldr	r0, [r4, #20]
   11e2c:	cmp	r0, #0
   11e30:	beq	12140 <ReadInt8Data+0x454>
   11e34:	cmp	r5, #256	; 0x100
   11e38:	bgt	12324 <ReadInt8Data+0x638>
   11e3c:	ldr	r3, [r4]
   11e40:	ldr	r1, [sp, #16]
   11e44:	add	r4, sp, #24
   11e48:	mov	r2, r5
   11e4c:	mov	r0, r4
   11e50:	bl	18d0 <fread@plt>
   11e54:	mov	r6, r0
   11e58:	cmp	r5, #1
   11e5c:	blt	13158 <ReadInt8Data+0x146c>
   11e60:	mov	r0, r4
   11e64:	bl	1c50 <Mat_int16Swap>
   11e68:	strb	r0, [sl], #1
   11e6c:	subs	r5, r5, #1
   11e70:	add	r4, r4, #2
   11e74:	bne	11e60 <ReadInt8Data+0x174>
   11e78:	b	13158 <ReadInt8Data+0x146c>
   11e7c:	ldr	r0, [r4, #20]
   11e80:	cmp	r0, #0
   11e84:	beq	12180 <ReadInt8Data+0x494>
   11e88:	cmp	r5, #256	; 0x100
   11e8c:	bgt	123f8 <ReadInt8Data+0x70c>
   11e90:	ldr	r3, [r4]
   11e94:	ldr	r1, [sp, #16]
   11e98:	add	r4, sp, #24
   11e9c:	mov	r2, r5
   11ea0:	mov	r0, r4
   11ea4:	bl	18d0 <fread@plt>
   11ea8:	mov	r6, r0
   11eac:	cmp	r5, #1
   11eb0:	blt	13158 <ReadInt8Data+0x146c>
   11eb4:	mov	r0, r4
   11eb8:	bl	1c64 <Mat_uint16Swap>
   11ebc:	strb	r0, [sl], #1
   11ec0:	subs	r5, r5, #1
   11ec4:	add	r4, r4, #2
   11ec8:	bne	11eb4 <ReadInt8Data+0x1c8>
   11ecc:	b	13158 <ReadInt8Data+0x146c>
   11ed0:	ldr	r0, [r4, #20]
   11ed4:	cmp	r0, #0
   11ed8:	beq	121c0 <ReadInt8Data+0x4d4>
   11edc:	cmp	r5, #256	; 0x100
   11ee0:	bgt	124cc <ReadInt8Data+0x7e0>
   11ee4:	ldr	r3, [r4]
   11ee8:	ldr	r1, [sp, #16]
   11eec:	add	r4, sp, #24
   11ef0:	mov	r2, r5
   11ef4:	mov	r0, r4
   11ef8:	bl	18d0 <fread@plt>
   11efc:	mov	r6, r0
   11f00:	cmp	r5, #1
   11f04:	blt	13158 <ReadInt8Data+0x146c>
   11f08:	mov	r0, r4
   11f0c:	bl	1c28 <Mat_int32Swap>
   11f10:	strb	r0, [sl], #1
   11f14:	subs	r5, r5, #1
   11f18:	add	r4, r4, #4
   11f1c:	bne	11f08 <ReadInt8Data+0x21c>
   11f20:	b	13158 <ReadInt8Data+0x146c>
   11f24:	ldr	r0, [r4, #20]
   11f28:	cmp	r0, #0
   11f2c:	beq	12200 <ReadInt8Data+0x514>
   11f30:	cmp	r5, #256	; 0x100
   11f34:	bgt	125a0 <ReadInt8Data+0x8b4>
   11f38:	ldr	r3, [r4]
   11f3c:	ldr	r1, [sp, #16]
   11f40:	add	r4, sp, #24
   11f44:	mov	r2, r5
   11f48:	mov	r0, r4
   11f4c:	bl	18d0 <fread@plt>
   11f50:	mov	r6, r0
   11f54:	cmp	r5, #1
   11f58:	blt	13158 <ReadInt8Data+0x146c>
   11f5c:	mov	r0, r4
   11f60:	bl	1c3c <Mat_uint32Swap>
   11f64:	strb	r0, [sl], #1
   11f68:	subs	r5, r5, #1
   11f6c:	add	r4, r4, #4
   11f70:	bne	11f5c <ReadInt8Data+0x270>
   11f74:	b	13158 <ReadInt8Data+0x146c>
   11f78:	ldr	r0, [r4, #20]
   11f7c:	cmp	r0, #0
   11f80:	beq	12240 <ReadInt8Data+0x554>
   11f84:	cmp	r5, #256	; 0x100
   11f88:	bgt	12674 <ReadInt8Data+0x988>
   11f8c:	ldr	r3, [r4]
   11f90:	ldr	r1, [sp, #16]
   11f94:	add	r4, sp, #24
   11f98:	mov	r2, r5
   11f9c:	mov	r0, r4
   11fa0:	bl	18d0 <fread@plt>
   11fa4:	mov	r6, r0
   11fa8:	cmp	r5, #1
   11fac:	blt	13158 <ReadInt8Data+0x146c>
   11fb0:	mov	r0, r4
   11fb4:	bl	1c7c <Mat_floatSwap>
   11fb8:	vcvt.s32.f32	s0, s0
   11fbc:	subs	r5, r5, #1
   11fc0:	add	r4, r4, #4
   11fc4:	vmov	r0, s0
   11fc8:	strb	r0, [sl], #1
   11fcc:	bne	11fb0 <ReadInt8Data+0x2c4>
   11fd0:	b	13158 <ReadInt8Data+0x146c>
   11fd4:	ldr	r0, [r4, #20]
   11fd8:	cmp	r0, #0
   11fdc:	beq	1228c <ReadInt8Data+0x5a0>
   11fe0:	cmp	r5, #256	; 0x100
   11fe4:	bgt	12758 <ReadInt8Data+0xa6c>
   11fe8:	ldr	r3, [r4]
   11fec:	ldr	r1, [sp, #16]
   11ff0:	add	r4, sp, #24
   11ff4:	mov	r2, r5
   11ff8:	mov	r0, r4
   11ffc:	bl	18d0 <fread@plt>
   12000:	mov	r6, r0
   12004:	cmp	r5, #1
   12008:	blt	13158 <ReadInt8Data+0x146c>
   1200c:	mov	r0, r4
   12010:	bl	1cc0 <Mat_doubleSwap>
   12014:	vcvt.s32.f64	s0, d0
   12018:	subs	r5, r5, #1
   1201c:	add	r4, r4, #8
   12020:	vmov	r0, s0
   12024:	strb	r0, [sl], #1
   12028:	bne	1200c <ReadInt8Data+0x320>
   1202c:	b	13158 <ReadInt8Data+0x146c>
   12030:	ldr	r0, [r4, #20]
   12034:	cmp	r0, #0
   12038:	beq	122d8 <ReadInt8Data+0x5ec>
   1203c:	cmp	r5, #256	; 0x100
   12040:	bgt	1283c <ReadInt8Data+0xb50>
   12044:	ldr	r3, [r4]
   12048:	ldr	r1, [sp, #16]
   1204c:	add	r4, sp, #24
   12050:	mov	r2, r5
   12054:	mov	r0, r4
   12058:	bl	18d0 <fread@plt>
   1205c:	mov	r6, r0
   12060:	cmp	r5, #1
   12064:	blt	1231c <ReadInt8Data+0x630>
   12068:	mov	r9, r5
   1206c:	mov	r7, sl
   12070:	mov	r0, r4
   12074:	bl	1bbc <Mat_int64Swap>
   12078:	strb	r0, [r7], #1
   1207c:	subs	r5, r5, #1
   12080:	add	r4, r4, #8
   12084:	bne	12070 <ReadInt8Data+0x384>
   12088:	mov	r5, r9
   1208c:	b	1231c <ReadInt8Data+0x630>
   12090:	ldr	r9, [sp, #16]
   12094:	sub	r0, r5, #256	; 0x100
   12098:	str	r5, [sp, #8]
   1209c:	mov	r5, r4
   120a0:	mov	r4, #0
   120a4:	add	r8, sp, #24
   120a8:	mov	r6, #0
   120ac:	str	r0, [sp, #12]
   120b0:	ldr	r3, [r5]
   120b4:	mov	r0, r8
   120b8:	mov	r1, r9
   120bc:	mov	r2, #256	; 0x100
   120c0:	bl	18d0 <fread@plt>
   120c4:	mov	r7, r0
   120c8:	add	r0, sl, r4
   120cc:	mov	r1, r8
   120d0:	mov	r2, #256	; 0x100
   120d4:	bl	1834 <memcpy@plt>
   120d8:	ldr	r0, [sp, #12]
   120dc:	add	r4, r4, #256	; 0x100
   120e0:	add	r6, r7, r6
   120e4:	cmp	r4, r0
   120e8:	blt	120b0 <ReadInt8Data+0x3c4>
   120ec:	ldr	r0, [sp, #8]
   120f0:	cmp	r4, r0
   120f4:	bge	12138 <ReadInt8Data+0x44c>
   120f8:	sub	r7, r0, r4
   120fc:	ldr	r0, [sp, #20]
   12100:	mov	r1, r9
   12104:	mov	r5, r9
   12108:	mov	r2, r7
   1210c:	ldr	r3, [r0]
   12110:	add	r0, sp, #24
   12114:	bl	18d0 <fread@plt>
   12118:	add	r6, r0, r6
   1211c:	cmp	r7, #1
   12120:	blt	1315c <ReadInt8Data+0x1470>
   12124:	add	r0, sl, r4
   12128:	add	r1, sp, #24
   1212c:	mov	r2, r7
   12130:	bl	1834 <memcpy@plt>
   12134:	b	1315c <ReadInt8Data+0x1470>
   12138:	mov	r5, r9
   1213c:	b	1315c <ReadInt8Data+0x1470>
   12140:	cmp	r5, #256	; 0x100
   12144:	bgt	1291c <ReadInt8Data+0xc30>
   12148:	ldr	r3, [r4]
   1214c:	ldr	r1, [sp, #16]
   12150:	add	r4, sp, #24
   12154:	mov	r2, r5
   12158:	mov	r0, r4
   1215c:	bl	18d0 <fread@plt>
   12160:	mov	r6, r0
   12164:	cmp	r5, #1
   12168:	blt	13158 <ReadInt8Data+0x146c>
   1216c:	ldrb	r0, [r4], #2
   12170:	subs	r5, r5, #1
   12174:	strb	r0, [sl], #1
   12178:	bne	1216c <ReadInt8Data+0x480>
   1217c:	b	13158 <ReadInt8Data+0x146c>
   12180:	cmp	r5, #256	; 0x100
   12184:	bgt	129ec <ReadInt8Data+0xd00>
   12188:	ldr	r3, [r4]
   1218c:	ldr	r1, [sp, #16]
   12190:	add	r4, sp, #24
   12194:	mov	r2, r5
   12198:	mov	r0, r4
   1219c:	bl	18d0 <fread@plt>
   121a0:	mov	r6, r0
   121a4:	cmp	r5, #1
   121a8:	blt	13158 <ReadInt8Data+0x146c>
   121ac:	ldrb	r0, [r4], #2
   121b0:	subs	r5, r5, #1
   121b4:	strb	r0, [sl], #1
   121b8:	bne	121ac <ReadInt8Data+0x4c0>
   121bc:	b	13158 <ReadInt8Data+0x146c>
   121c0:	cmp	r5, #256	; 0x100
   121c4:	bgt	12abc <ReadInt8Data+0xdd0>
   121c8:	ldr	r3, [r4]
   121cc:	ldr	r1, [sp, #16]
   121d0:	add	r4, sp, #24
   121d4:	mov	r2, r5
   121d8:	mov	r0, r4
   121dc:	bl	18d0 <fread@plt>
   121e0:	mov	r6, r0
   121e4:	cmp	r5, #1
   121e8:	blt	13158 <ReadInt8Data+0x146c>
   121ec:	ldr	r0, [r4], #4
   121f0:	subs	r5, r5, #1
   121f4:	strb	r0, [sl], #1
   121f8:	bne	121ec <ReadInt8Data+0x500>
   121fc:	b	13158 <ReadInt8Data+0x146c>
   12200:	cmp	r5, #256	; 0x100
   12204:	bgt	12b90 <ReadInt8Data+0xea4>
   12208:	ldr	r3, [r4]
   1220c:	ldr	r1, [sp, #16]
   12210:	add	r4, sp, #24
   12214:	mov	r2, r5
   12218:	mov	r0, r4
   1221c:	bl	18d0 <fread@plt>
   12220:	mov	r6, r0
   12224:	cmp	r5, #1
   12228:	blt	13158 <ReadInt8Data+0x146c>
   1222c:	ldr	r0, [r4], #4
   12230:	subs	r5, r5, #1
   12234:	strb	r0, [sl], #1
   12238:	bne	1222c <ReadInt8Data+0x540>
   1223c:	b	13158 <ReadInt8Data+0x146c>
   12240:	cmp	r5, #256	; 0x100
   12244:	bgt	12c64 <ReadInt8Data+0xf78>
   12248:	ldr	r3, [r4]
   1224c:	ldr	r1, [sp, #16]
   12250:	add	r4, sp, #24
   12254:	mov	r2, r5
   12258:	mov	r0, r4
   1225c:	bl	18d0 <fread@plt>
   12260:	mov	r6, r0
   12264:	cmp	r5, #1
   12268:	blt	13158 <ReadInt8Data+0x146c>
   1226c:	vldr	s0, [r4]
   12270:	subs	r5, r5, #1
   12274:	add	r4, r4, #4
   12278:	vcvt.s32.f32	s0, s0
   1227c:	vmov	r0, s0
   12280:	strb	r0, [sl], #1
   12284:	bne	1226c <ReadInt8Data+0x580>
   12288:	b	13158 <ReadInt8Data+0x146c>
   1228c:	cmp	r5, #256	; 0x100
   12290:	bgt	12d48 <ReadInt8Data+0x105c>
   12294:	ldr	r3, [r4]
   12298:	ldr	r1, [sp, #16]
   1229c:	add	r4, sp, #24
   122a0:	mov	r2, r5
   122a4:	mov	r0, r4
   122a8:	bl	18d0 <fread@plt>
   122ac:	mov	r6, r0
   122b0:	cmp	r5, #1
   122b4:	blt	13158 <ReadInt8Data+0x146c>
   122b8:	vldr	d16, [r4]
   122bc:	subs	r5, r5, #1
   122c0:	add	r4, r4, #8
   122c4:	vcvt.s32.f64	s0, d16
   122c8:	vmov	r0, s0
   122cc:	strb	r0, [sl], #1
   122d0:	bne	122b8 <ReadInt8Data+0x5cc>
   122d4:	b	13158 <ReadInt8Data+0x146c>
   122d8:	cmp	r5, #256	; 0x100
   122dc:	bgt	12e28 <ReadInt8Data+0x113c>
   122e0:	ldr	r3, [r4]
   122e4:	ldr	r1, [sp, #16]
   122e8:	add	r4, sp, #24
   122ec:	mov	r2, r5
   122f0:	mov	r0, r4
   122f4:	bl	18d0 <fread@plt>
   122f8:	mov	r6, r0
   122fc:	cmp	r5, #1
   12300:	blt	1231c <ReadInt8Data+0x630>
   12304:	mov	r0, r5
   12308:	mov	r1, sl
   1230c:	ldrb	r2, [r4], #8
   12310:	subs	r0, r0, #1
   12314:	strb	r2, [r1], #1
   12318:	bne	1230c <ReadInt8Data+0x620>
   1231c:	ldr	r4, [sp, #20]
   12320:	b	12f18 <ReadInt8Data+0x122c>
   12324:	sub	r0, r5, #256	; 0x100
   12328:	str	r5, [sp, #8]
   1232c:	mov	r7, #0
   12330:	mov	r5, sl
   12334:	mov	r6, #0
   12338:	str	r0, [sp, #12]
   1233c:	ldr	r3, [r4]
   12340:	ldr	r1, [sp, #16]
   12344:	mov	r9, r7
   12348:	add	r7, sp, #24
   1234c:	mov	r2, #256	; 0x100
   12350:	mov	r0, r7
   12354:	bl	18d0 <fread@plt>
   12358:	mov	r8, r0
   1235c:	mov	r4, #0
   12360:	mov	r0, r7
   12364:	bl	1c50 <Mat_int16Swap>
   12368:	strb	r0, [r5, r4]
   1236c:	add	r4, r4, #1
   12370:	add	r7, r7, #2
   12374:	cmp	r4, #256	; 0x100
   12378:	bne	12360 <ReadInt8Data+0x674>
   1237c:	ldr	r0, [sp, #12]
   12380:	ldr	r4, [sp, #20]
   12384:	add	r7, r9, #256	; 0x100
   12388:	add	r6, r8, r6
   1238c:	add	r5, r5, #256	; 0x100
   12390:	cmp	r7, r0
   12394:	blt	1233c <ReadInt8Data+0x650>
   12398:	ldr	r0, [sp, #8]
   1239c:	cmp	r7, r0
   123a0:	bge	13158 <ReadInt8Data+0x146c>
   123a4:	ldr	r5, [sp, #16]
   123a8:	ldr	r3, [r4]
   123ac:	sub	r8, r0, r7
   123b0:	add	r4, sp, #24
   123b4:	mov	r0, r4
   123b8:	mov	r2, r8
   123bc:	mov	r1, r5
   123c0:	bl	18d0 <fread@plt>
   123c4:	add	r6, r0, r6
   123c8:	cmp	r8, #1
   123cc:	blt	1315c <ReadInt8Data+0x1470>
   123d0:	ldr	r0, [sp, #12]
   123d4:	sub	r5, r0, r9
   123d8:	mov	r0, r4
   123dc:	bl	1c50 <Mat_int16Swap>
   123e0:	strb	r0, [sl, r7]
   123e4:	add	sl, sl, #1
   123e8:	subs	r5, r5, #1
   123ec:	add	r4, r4, #2
   123f0:	bne	123d8 <ReadInt8Data+0x6ec>
   123f4:	b	13158 <ReadInt8Data+0x146c>
   123f8:	sub	r0, r5, #256	; 0x100
   123fc:	str	r5, [sp, #8]
   12400:	mov	r7, #0
   12404:	mov	r5, sl
   12408:	mov	r6, #0
   1240c:	str	r0, [sp, #12]
   12410:	ldr	r3, [r4]
   12414:	ldr	r1, [sp, #16]
   12418:	mov	r9, r7
   1241c:	add	r7, sp, #24
   12420:	mov	r2, #256	; 0x100
   12424:	mov	r0, r7
   12428:	bl	18d0 <fread@plt>
   1242c:	mov	r8, r0
   12430:	mov	r4, #0
   12434:	mov	r0, r7
   12438:	bl	1c64 <Mat_uint16Swap>
   1243c:	strb	r0, [r5, r4]
   12440:	add	r4, r4, #1
   12444:	add	r7, r7, #2
   12448:	cmp	r4, #256	; 0x100
   1244c:	bne	12434 <ReadInt8Data+0x748>
   12450:	ldr	r0, [sp, #12]
   12454:	ldr	r4, [sp, #20]
   12458:	add	r7, r9, #256	; 0x100
   1245c:	add	r6, r8, r6
   12460:	add	r5, r5, #256	; 0x100
   12464:	cmp	r7, r0
   12468:	blt	12410 <ReadInt8Data+0x724>
   1246c:	ldr	r0, [sp, #8]
   12470:	cmp	r7, r0
   12474:	bge	13158 <ReadInt8Data+0x146c>
   12478:	ldr	r5, [sp, #16]
   1247c:	ldr	r3, [r4]
   12480:	sub	r8, r0, r7
   12484:	add	r4, sp, #24
   12488:	mov	r0, r4
   1248c:	mov	r2, r8
   12490:	mov	r1, r5
   12494:	bl	18d0 <fread@plt>
   12498:	add	r6, r0, r6
   1249c:	cmp	r8, #1
   124a0:	blt	1315c <ReadInt8Data+0x1470>
   124a4:	ldr	r0, [sp, #12]
   124a8:	sub	r5, r0, r9
   124ac:	mov	r0, r4
   124b0:	bl	1c64 <Mat_uint16Swap>
   124b4:	strb	r0, [sl, r7]
   124b8:	add	sl, sl, #1
   124bc:	subs	r5, r5, #1
   124c0:	add	r4, r4, #2
   124c4:	bne	124ac <ReadInt8Data+0x7c0>
   124c8:	b	13158 <ReadInt8Data+0x146c>
   124cc:	sub	r0, r5, #256	; 0x100
   124d0:	str	r5, [sp, #8]
   124d4:	mov	r7, #0
   124d8:	mov	r5, sl
   124dc:	mov	r6, #0
   124e0:	str	r0, [sp, #12]
   124e4:	ldr	r3, [r4]
   124e8:	ldr	r1, [sp, #16]
   124ec:	mov	r9, r7
   124f0:	add	r7, sp, #24
   124f4:	mov	r2, #256	; 0x100
   124f8:	mov	r0, r7
   124fc:	bl	18d0 <fread@plt>
   12500:	mov	r8, r0
   12504:	mov	r4, #0
   12508:	mov	r0, r7
   1250c:	bl	1c28 <Mat_int32Swap>
   12510:	strb	r0, [r5, r4]
   12514:	add	r4, r4, #1
   12518:	add	r7, r7, #4
   1251c:	cmp	r4, #256	; 0x100
   12520:	bne	12508 <ReadInt8Data+0x81c>
   12524:	ldr	r0, [sp, #12]
   12528:	ldr	r4, [sp, #20]
   1252c:	add	r7, r9, #256	; 0x100
   12530:	add	r6, r8, r6
   12534:	add	r5, r5, #256	; 0x100
   12538:	cmp	r7, r0
   1253c:	blt	124e4 <ReadInt8Data+0x7f8>
   12540:	ldr	r0, [sp, #8]
   12544:	cmp	r7, r0
   12548:	bge	13158 <ReadInt8Data+0x146c>
   1254c:	ldr	r5, [sp, #16]
   12550:	ldr	r3, [r4]
   12554:	sub	r8, r0, r7
   12558:	add	r4, sp, #24
   1255c:	mov	r0, r4
   12560:	mov	r2, r8
   12564:	mov	r1, r5
   12568:	bl	18d0 <fread@plt>
   1256c:	add	r6, r0, r6
   12570:	cmp	r8, #1
   12574:	blt	1315c <ReadInt8Data+0x1470>
   12578:	ldr	r0, [sp, #12]
   1257c:	sub	r5, r0, r9
   12580:	mov	r0, r4
   12584:	bl	1c28 <Mat_int32Swap>
   12588:	strb	r0, [sl, r7]
   1258c:	add	sl, sl, #1
   12590:	subs	r5, r5, #1
   12594:	add	r4, r4, #4
   12598:	bne	12580 <ReadInt8Data+0x894>
   1259c:	b	13158 <ReadInt8Data+0x146c>
   125a0:	sub	r0, r5, #256	; 0x100
   125a4:	str	r5, [sp, #8]
   125a8:	mov	r7, #0
   125ac:	mov	r5, sl
   125b0:	mov	r6, #0
   125b4:	str	r0, [sp, #12]
   125b8:	ldr	r3, [r4]
   125bc:	ldr	r1, [sp, #16]
   125c0:	mov	r9, r7
   125c4:	add	r7, sp, #24
   125c8:	mov	r2, #256	; 0x100
   125cc:	mov	r0, r7
   125d0:	bl	18d0 <fread@plt>
   125d4:	mov	r8, r0
   125d8:	mov	r4, #0
   125dc:	mov	r0, r7
   125e0:	bl	1c3c <Mat_uint32Swap>
   125e4:	strb	r0, [r5, r4]
   125e8:	add	r4, r4, #1
   125ec:	add	r7, r7, #4
   125f0:	cmp	r4, #256	; 0x100
   125f4:	bne	125dc <ReadInt8Data+0x8f0>
   125f8:	ldr	r0, [sp, #12]
   125fc:	ldr	r4, [sp, #20]
   12600:	add	r7, r9, #256	; 0x100
   12604:	add	r6, r8, r6
   12608:	add	r5, r5, #256	; 0x100
   1260c:	cmp	r7, r0
   12610:	blt	125b8 <ReadInt8Data+0x8cc>
   12614:	ldr	r0, [sp, #8]
   12618:	cmp	r7, r0
   1261c:	bge	13158 <ReadInt8Data+0x146c>
   12620:	ldr	r5, [sp, #16]
   12624:	ldr	r3, [r4]
   12628:	sub	r8, r0, r7
   1262c:	add	r4, sp, #24
   12630:	mov	r0, r4
   12634:	mov	r2, r8
   12638:	mov	r1, r5
   1263c:	bl	18d0 <fread@plt>
   12640:	add	r6, r0, r6
   12644:	cmp	r8, #1
   12648:	blt	1315c <ReadInt8Data+0x1470>
   1264c:	ldr	r0, [sp, #12]
   12650:	sub	r5, r0, r9
   12654:	mov	r0, r4
   12658:	bl	1c3c <Mat_uint32Swap>
   1265c:	strb	r0, [sl, r7]
   12660:	add	sl, sl, #1
   12664:	subs	r5, r5, #1
   12668:	add	r4, r4, #4
   1266c:	bne	12654 <ReadInt8Data+0x968>
   12670:	b	13158 <ReadInt8Data+0x146c>
   12674:	sub	r0, r5, #256	; 0x100
   12678:	str	r5, [sp, #8]
   1267c:	mov	r7, #0
   12680:	mov	r5, sl
   12684:	mov	r6, #0
   12688:	str	r0, [sp, #12]
   1268c:	ldr	r3, [r4]
   12690:	ldr	r1, [sp, #16]
   12694:	mov	r9, r7
   12698:	add	r7, sp, #24
   1269c:	mov	r2, #256	; 0x100
   126a0:	mov	r0, r7
   126a4:	bl	18d0 <fread@plt>
   126a8:	mov	r8, r0
   126ac:	mov	r4, #0
   126b0:	mov	r0, r7
   126b4:	bl	1c7c <Mat_floatSwap>
   126b8:	vcvt.s32.f32	s0, s0
   126bc:	add	r7, r7, #4
   126c0:	vmov	r0, s0
   126c4:	strb	r0, [r5, r4]
   126c8:	add	r4, r4, #1
   126cc:	cmp	r4, #256	; 0x100
   126d0:	bne	126b0 <ReadInt8Data+0x9c4>
   126d4:	ldr	r0, [sp, #12]
   126d8:	ldr	r4, [sp, #20]
   126dc:	add	r7, r9, #256	; 0x100
   126e0:	add	r6, r8, r6
   126e4:	add	r5, r5, #256	; 0x100
   126e8:	cmp	r7, r0
   126ec:	blt	1268c <ReadInt8Data+0x9a0>
   126f0:	ldr	r0, [sp, #8]
   126f4:	cmp	r7, r0
   126f8:	bge	13158 <ReadInt8Data+0x146c>
   126fc:	ldr	r5, [sp, #16]
   12700:	ldr	r3, [r4]
   12704:	sub	r8, r0, r7
   12708:	add	r4, sp, #24
   1270c:	mov	r0, r4
   12710:	mov	r2, r8
   12714:	mov	r1, r5
   12718:	bl	18d0 <fread@plt>
   1271c:	add	r6, r0, r6
   12720:	cmp	r8, #1
   12724:	blt	1315c <ReadInt8Data+0x1470>
   12728:	ldr	r0, [sp, #12]
   1272c:	sub	r5, r0, r9
   12730:	mov	r0, r4
   12734:	bl	1c7c <Mat_floatSwap>
   12738:	vcvt.s32.f32	s0, s0
   1273c:	subs	r5, r5, #1
   12740:	add	r4, r4, #4
   12744:	vmov	r0, s0
   12748:	strb	r0, [sl, r7]
   1274c:	add	sl, sl, #1
   12750:	bne	12730 <ReadInt8Data+0xa44>
   12754:	b	13158 <ReadInt8Data+0x146c>
   12758:	sub	r0, r5, #256	; 0x100
   1275c:	str	r5, [sp, #8]
   12760:	mov	r9, #0
   12764:	mov	r5, sl
   12768:	mov	r6, #0
   1276c:	str	r0, [sp, #12]
   12770:	ldr	r3, [r4]
   12774:	ldr	r1, [sp, #16]
   12778:	add	r7, sp, #24
   1277c:	mov	r2, #256	; 0x100
   12780:	mov	r8, r9
   12784:	mov	r0, r7
   12788:	bl	18d0 <fread@plt>
   1278c:	mov	r9, r0
   12790:	mov	r4, #0
   12794:	mov	r0, r7
   12798:	bl	1cc0 <Mat_doubleSwap>
   1279c:	vcvt.s32.f64	s0, d0
   127a0:	add	r7, r7, #8
   127a4:	vmov	r0, s0
   127a8:	strb	r0, [r5, r4]
   127ac:	add	r4, r4, #1
   127b0:	cmp	r4, #256	; 0x100
   127b4:	bne	12794 <ReadInt8Data+0xaa8>
   127b8:	ldr	r0, [sp, #12]
   127bc:	ldr	r4, [sp, #20]
   127c0:	add	r6, r9, r6
   127c4:	add	r9, r8, #256	; 0x100
   127c8:	add	r5, r5, #256	; 0x100
   127cc:	cmp	r9, r0
   127d0:	blt	12770 <ReadInt8Data+0xa84>
   127d4:	ldr	r0, [sp, #8]
   127d8:	cmp	r9, r0
   127dc:	bge	13158 <ReadInt8Data+0x146c>
   127e0:	ldr	r5, [sp, #16]
   127e4:	ldr	r3, [r4]
   127e8:	sub	r7, r0, r9
   127ec:	add	r4, sp, #24
   127f0:	mov	r0, r4
   127f4:	mov	r2, r7
   127f8:	mov	r1, r5
   127fc:	bl	18d0 <fread@plt>
   12800:	add	r6, r0, r6
   12804:	cmp	r7, #1
   12808:	blt	1315c <ReadInt8Data+0x1470>
   1280c:	ldr	r0, [sp, #12]
   12810:	sub	r5, r0, r8
   12814:	mov	r0, r4
   12818:	bl	1cc0 <Mat_doubleSwap>
   1281c:	vcvt.s32.f64	s0, d0
   12820:	subs	r5, r5, #1
   12824:	add	r4, r4, #8
   12828:	vmov	r0, s0
   1282c:	strb	r0, [sl, r9]
   12830:	add	sl, sl, #1
   12834:	bne	12814 <ReadInt8Data+0xb28>
   12838:	b	13158 <ReadInt8Data+0x146c>
   1283c:	sub	r0, r5, #256	; 0x100
   12840:	str	r5, [sp, #8]
   12844:	mov	r7, #0
   12848:	mov	r5, sl
   1284c:	mov	r6, #0
   12850:	str	r8, [sp, #4]
   12854:	str	r0, [sp, #12]
   12858:	ldr	r3, [r4]
   1285c:	ldr	r1, [sp, #16]
   12860:	mov	r9, r7
   12864:	add	r7, sp, #24
   12868:	mov	r2, #256	; 0x100
   1286c:	mov	r0, r7
   12870:	bl	18d0 <fread@plt>
   12874:	mov	r8, r0
   12878:	mov	r4, #0
   1287c:	mov	r0, r7
   12880:	bl	1bbc <Mat_int64Swap>
   12884:	strb	r0, [r5, r4]
   12888:	add	r4, r4, #1
   1288c:	add	r7, r7, #8
   12890:	cmp	r4, #256	; 0x100
   12894:	bne	1287c <ReadInt8Data+0xb90>
   12898:	ldr	r0, [sp, #12]
   1289c:	ldr	r4, [sp, #20]
   128a0:	add	r7, r9, #256	; 0x100
   128a4:	add	r6, r8, r6
   128a8:	add	r5, r5, #256	; 0x100
   128ac:	cmp	r7, r0
   128b0:	blt	12858 <ReadInt8Data+0xb6c>
   128b4:	ldr	r5, [sp, #8]
   128b8:	cmp	r7, r5
   128bc:	bge	12f14 <ReadInt8Data+0x1228>
   128c0:	mov	r0, r4
   128c4:	sub	r4, r5, r7
   128c8:	ldr	r5, [sp, #16]
   128cc:	add	r8, sp, #24
   128d0:	ldr	r3, [r0]
   128d4:	mov	r0, r8
   128d8:	mov	r2, r4
   128dc:	mov	r1, r5
   128e0:	bl	18d0 <fread@plt>
   128e4:	add	r6, r0, r6
   128e8:	cmp	r4, #1
   128ec:	blt	12f0c <ReadInt8Data+0x1220>
   128f0:	ldr	r0, [sp, #12]
   128f4:	mov	r4, sl
   128f8:	sub	r5, r0, r9
   128fc:	mov	r0, r8
   12900:	bl	1bbc <Mat_int64Swap>
   12904:	strb	r0, [r4, r7]
   12908:	add	r4, r4, #1
   1290c:	subs	r5, r5, #1
   12910:	add	r8, r8, #8
   12914:	bne	128fc <ReadInt8Data+0xc10>
   12918:	b	12f0c <ReadInt8Data+0x1220>
   1291c:	sub	r0, r5, #256	; 0x100
   12920:	str	r5, [sp, #8]
   12924:	ldr	r5, [sp, #16]
   12928:	mov	r7, #0
   1292c:	add	r9, sp, #24
   12930:	mov	r4, sl
   12934:	mov	r6, #0
   12938:	str	r0, [sp, #12]
   1293c:	ldr	r0, [sp, #20]
   12940:	mov	r1, r5
   12944:	mov	r2, #256	; 0x100
   12948:	mov	r8, r7
   1294c:	ldr	r3, [r0]
   12950:	mov	r0, r9
   12954:	bl	18d0 <fread@plt>
   12958:	mov	r1, r9
   1295c:	mov	r2, #0
   12960:	vld1.16	{d16-d17}, [r1]!
   12964:	add	r3, r4, r2
   12968:	add	r2, r2, #8
   1296c:	cmp	r2, #256	; 0x100
   12970:	vmovn.i16	d16, q8
   12974:	vst1.8	{d16}, [r3]
   12978:	bne	12960 <ReadInt8Data+0xc74>
   1297c:	add	r6, r0, r6
   12980:	ldr	r0, [sp, #12]
   12984:	add	r7, r8, #256	; 0x100
   12988:	add	r4, r4, #256	; 0x100
   1298c:	cmp	r7, r0
   12990:	blt	1293c <ReadInt8Data+0xc50>
   12994:	ldr	r0, [sp, #8]
   12998:	cmp	r7, r0
   1299c:	bge	1315c <ReadInt8Data+0x1470>
   129a0:	sub	r9, r0, r7
   129a4:	ldr	r0, [sp, #20]
   129a8:	add	r4, sp, #24
   129ac:	mov	r1, r5
   129b0:	mov	r2, r9
   129b4:	ldr	r3, [r0]
   129b8:	mov	r0, r4
   129bc:	bl	18d0 <fread@plt>
   129c0:	add	r6, r0, r6
   129c4:	cmp	r9, #1
   129c8:	blt	1315c <ReadInt8Data+0x1470>
   129cc:	ldr	r0, [sp, #12]
   129d0:	sub	r0, r0, r8
   129d4:	ldrb	r1, [r4], #2
   129d8:	subs	r0, r0, #1
   129dc:	strb	r1, [sl, r7]
   129e0:	add	sl, sl, #1
   129e4:	bne	129d4 <ReadInt8Data+0xce8>
   129e8:	b	1315c <ReadInt8Data+0x1470>
   129ec:	sub	r0, r5, #256	; 0x100
   129f0:	str	r5, [sp, #8]
   129f4:	ldr	r5, [sp, #16]
   129f8:	mov	r7, #0
   129fc:	add	r9, sp, #24
   12a00:	mov	r4, sl
   12a04:	mov	r6, #0
   12a08:	str	r0, [sp, #12]
   12a0c:	ldr	r0, [sp, #20]
   12a10:	mov	r1, r5
   12a14:	mov	r2, #256	; 0x100
   12a18:	mov	r8, r7
   12a1c:	ldr	r3, [r0]
   12a20:	mov	r0, r9
   12a24:	bl	18d0 <fread@plt>
   12a28:	mov	r1, r9
   12a2c:	mov	r2, #0
   12a30:	vld1.16	{d16-d17}, [r1]!
   12a34:	add	r3, r4, r2
   12a38:	add	r2, r2, #8
   12a3c:	cmp	r2, #256	; 0x100
   12a40:	vmovn.i16	d16, q8
   12a44:	vst1.8	{d16}, [r3]
   12a48:	bne	12a30 <ReadInt8Data+0xd44>
   12a4c:	add	r6, r0, r6
   12a50:	ldr	r0, [sp, #12]
   12a54:	add	r7, r8, #256	; 0x100
   12a58:	add	r4, r4, #256	; 0x100
   12a5c:	cmp	r7, r0
   12a60:	blt	12a0c <ReadInt8Data+0xd20>
   12a64:	ldr	r0, [sp, #8]
   12a68:	cmp	r7, r0
   12a6c:	bge	1315c <ReadInt8Data+0x1470>
   12a70:	sub	r9, r0, r7
   12a74:	ldr	r0, [sp, #20]
   12a78:	add	r4, sp, #24
   12a7c:	mov	r1, r5
   12a80:	mov	r2, r9
   12a84:	ldr	r3, [r0]
   12a88:	mov	r0, r4
   12a8c:	bl	18d0 <fread@plt>
   12a90:	add	r6, r0, r6
   12a94:	cmp	r9, #1
   12a98:	blt	1315c <ReadInt8Data+0x1470>
   12a9c:	ldr	r0, [sp, #12]
   12aa0:	sub	r0, r0, r8
   12aa4:	ldrb	r1, [r4], #2
   12aa8:	subs	r0, r0, #1
   12aac:	strb	r1, [sl, r7]
   12ab0:	add	sl, sl, #1
   12ab4:	bne	12aa4 <ReadInt8Data+0xdb8>
   12ab8:	b	1315c <ReadInt8Data+0x1470>
   12abc:	sub	r0, r5, #256	; 0x100
   12ac0:	str	r5, [sp, #8]
   12ac4:	ldr	r5, [sp, #16]
   12ac8:	mov	r7, #0
   12acc:	add	r9, sp, #24
   12ad0:	mov	r4, sl
   12ad4:	mov	r6, #0
   12ad8:	str	r0, [sp, #12]
   12adc:	ldr	r0, [sp, #20]
   12ae0:	mov	r1, r5
   12ae4:	mov	r2, #256	; 0x100
   12ae8:	mov	r8, r7
   12aec:	ldr	r3, [r0]
   12af0:	mov	r0, r9
   12af4:	bl	18d0 <fread@plt>
   12af8:	mov	r1, r9
   12afc:	mov	r2, #0
   12b00:	vld1.32	{d16-d17}, [r1]!
   12b04:	add	r3, r4, r2
   12b08:	add	r2, r2, #4
   12b0c:	cmp	r2, #256	; 0x100
   12b10:	vmovn.i32	d16, q8
   12b14:	vuzp.8	d16, d17
   12b18:	vst1.32	{d16[0]}, [r3]
   12b1c:	bne	12b00 <ReadInt8Data+0xe14>
   12b20:	add	r6, r0, r6
   12b24:	ldr	r0, [sp, #12]
   12b28:	add	r7, r8, #256	; 0x100
   12b2c:	add	r4, r4, #256	; 0x100
   12b30:	cmp	r7, r0
   12b34:	blt	12adc <ReadInt8Data+0xdf0>
   12b38:	ldr	r0, [sp, #8]
   12b3c:	cmp	r7, r0
   12b40:	bge	1315c <ReadInt8Data+0x1470>
   12b44:	sub	r9, r0, r7
   12b48:	ldr	r0, [sp, #20]
   12b4c:	add	r4, sp, #24
   12b50:	mov	r1, r5
   12b54:	mov	r2, r9
   12b58:	ldr	r3, [r0]
   12b5c:	mov	r0, r4
   12b60:	bl	18d0 <fread@plt>
   12b64:	add	r6, r0, r6
   12b68:	cmp	r9, #1
   12b6c:	blt	1315c <ReadInt8Data+0x1470>
   12b70:	ldr	r0, [sp, #12]
   12b74:	sub	r0, r0, r8
   12b78:	ldr	r1, [r4], #4
   12b7c:	subs	r0, r0, #1
   12b80:	strb	r1, [sl, r7]
   12b84:	add	sl, sl, #1
   12b88:	bne	12b78 <ReadInt8Data+0xe8c>
   12b8c:	b	1315c <ReadInt8Data+0x1470>
   12b90:	sub	r0, r5, #256	; 0x100
   12b94:	str	r5, [sp, #8]
   12b98:	ldr	r5, [sp, #16]
   12b9c:	mov	r7, #0
   12ba0:	add	r9, sp, #24
   12ba4:	mov	r4, sl
   12ba8:	mov	r6, #0
   12bac:	str	r0, [sp, #12]
   12bb0:	ldr	r0, [sp, #20]
   12bb4:	mov	r1, r5
   12bb8:	mov	r2, #256	; 0x100
   12bbc:	mov	r8, r7
   12bc0:	ldr	r3, [r0]
   12bc4:	mov	r0, r9
   12bc8:	bl	18d0 <fread@plt>
   12bcc:	mov	r1, r9
   12bd0:	mov	r2, #0
   12bd4:	vld1.32	{d16-d17}, [r1]!
   12bd8:	add	r3, r4, r2
   12bdc:	add	r2, r2, #4
   12be0:	cmp	r2, #256	; 0x100
   12be4:	vmovn.i32	d16, q8
   12be8:	vuzp.8	d16, d17
   12bec:	vst1.32	{d16[0]}, [r3]
   12bf0:	bne	12bd4 <ReadInt8Data+0xee8>
   12bf4:	add	r6, r0, r6
   12bf8:	ldr	r0, [sp, #12]
   12bfc:	add	r7, r8, #256	; 0x100
   12c00:	add	r4, r4, #256	; 0x100
   12c04:	cmp	r7, r0
   12c08:	blt	12bb0 <ReadInt8Data+0xec4>
   12c0c:	ldr	r0, [sp, #8]
   12c10:	cmp	r7, r0
   12c14:	bge	1315c <ReadInt8Data+0x1470>
   12c18:	sub	r9, r0, r7
   12c1c:	ldr	r0, [sp, #20]
   12c20:	add	r4, sp, #24
   12c24:	mov	r1, r5
   12c28:	mov	r2, r9
   12c2c:	ldr	r3, [r0]
   12c30:	mov	r0, r4
   12c34:	bl	18d0 <fread@plt>
   12c38:	add	r6, r0, r6
   12c3c:	cmp	r9, #1
   12c40:	blt	1315c <ReadInt8Data+0x1470>
   12c44:	ldr	r0, [sp, #12]
   12c48:	sub	r0, r0, r8
   12c4c:	ldr	r1, [r4], #4
   12c50:	subs	r0, r0, #1
   12c54:	strb	r1, [sl, r7]
   12c58:	add	sl, sl, #1
   12c5c:	bne	12c4c <ReadInt8Data+0xf60>
   12c60:	b	1315c <ReadInt8Data+0x1470>
   12c64:	sub	r0, r5, #256	; 0x100
   12c68:	str	r5, [sp, #8]
   12c6c:	ldr	r5, [sp, #16]
   12c70:	mov	r7, #0
   12c74:	add	r9, sp, #24
   12c78:	mov	r4, sl
   12c7c:	mov	r6, #0
   12c80:	str	r0, [sp, #12]
   12c84:	ldr	r0, [sp, #20]
   12c88:	mov	r1, r5
   12c8c:	mov	r2, #256	; 0x100
   12c90:	mov	r8, r7
   12c94:	ldr	r3, [r0]
   12c98:	mov	r0, r9
   12c9c:	bl	18d0 <fread@plt>
   12ca0:	mov	r1, r9
   12ca4:	mov	r2, #0
   12ca8:	vld1.32	{d16-d17}, [r1]!
   12cac:	add	r3, r4, r2
   12cb0:	add	r2, r2, #4
   12cb4:	cmp	r2, #256	; 0x100
   12cb8:	vcvt.s32.f32	q8, q8
   12cbc:	vmovn.i32	d16, q8
   12cc0:	vuzp.8	d16, d17
   12cc4:	vst1.32	{d16[0]}, [r3]
   12cc8:	bne	12ca8 <ReadInt8Data+0xfbc>
   12ccc:	add	r6, r0, r6
   12cd0:	ldr	r0, [sp, #12]
   12cd4:	add	r7, r8, #256	; 0x100
   12cd8:	add	r4, r4, #256	; 0x100
   12cdc:	cmp	r7, r0
   12ce0:	blt	12c84 <ReadInt8Data+0xf98>
   12ce4:	ldr	r0, [sp, #8]
   12ce8:	cmp	r7, r0
   12cec:	bge	1315c <ReadInt8Data+0x1470>
   12cf0:	sub	r9, r0, r7
   12cf4:	ldr	r0, [sp, #20]
   12cf8:	add	r4, sp, #24
   12cfc:	mov	r1, r5
   12d00:	mov	r2, r9
   12d04:	ldr	r3, [r0]
   12d08:	mov	r0, r4
   12d0c:	bl	18d0 <fread@plt>
   12d10:	add	r6, r0, r6
   12d14:	cmp	r9, #1
   12d18:	blt	1315c <ReadInt8Data+0x1470>
   12d1c:	ldr	r0, [sp, #12]
   12d20:	sub	r0, r0, r8
   12d24:	vldr	s0, [r4]
   12d28:	subs	r0, r0, #1
   12d2c:	add	r4, r4, #4
   12d30:	vcvt.s32.f32	s0, s0
   12d34:	vmov	r1, s0
   12d38:	strb	r1, [sl, r7]
   12d3c:	add	sl, sl, #1
   12d40:	bne	12d24 <ReadInt8Data+0x1038>
   12d44:	b	1315c <ReadInt8Data+0x1470>
   12d48:	sub	r0, r5, #256	; 0x100
   12d4c:	str	r5, [sp, #8]
   12d50:	ldr	r5, [sp, #16]
   12d54:	mov	r7, #0
   12d58:	add	r9, sp, #24
   12d5c:	mov	r4, sl
   12d60:	mov	r6, #0
   12d64:	str	r0, [sp, #12]
   12d68:	ldr	r0, [sp, #20]
   12d6c:	mov	r1, r5
   12d70:	mov	r2, #256	; 0x100
   12d74:	mov	r8, r7
   12d78:	ldr	r3, [r0]
   12d7c:	mov	r0, r9
   12d80:	bl	18d0 <fread@plt>
   12d84:	mov	r1, r9
   12d88:	mov	r2, #0
   12d8c:	vldr	d16, [r1]
   12d90:	add	r1, r1, #8
   12d94:	vcvt.s32.f64	s0, d16
   12d98:	vmov	r3, s0
   12d9c:	strb	r3, [r4, r2]
   12da0:	add	r2, r2, #1
   12da4:	cmp	r2, #256	; 0x100
   12da8:	bne	12d8c <ReadInt8Data+0x10a0>
   12dac:	add	r6, r0, r6
   12db0:	ldr	r0, [sp, #12]
   12db4:	add	r7, r8, #256	; 0x100
   12db8:	add	r4, r4, #256	; 0x100
   12dbc:	cmp	r7, r0
   12dc0:	blt	12d68 <ReadInt8Data+0x107c>
   12dc4:	ldr	r0, [sp, #8]
   12dc8:	cmp	r7, r0
   12dcc:	bge	1315c <ReadInt8Data+0x1470>
   12dd0:	sub	r9, r0, r7
   12dd4:	ldr	r0, [sp, #20]
   12dd8:	add	r4, sp, #24
   12ddc:	mov	r1, r5
   12de0:	mov	r2, r9
   12de4:	ldr	r3, [r0]
   12de8:	mov	r0, r4
   12dec:	bl	18d0 <fread@plt>
   12df0:	add	r6, r0, r6
   12df4:	cmp	r9, #1
   12df8:	blt	1315c <ReadInt8Data+0x1470>
   12dfc:	ldr	r0, [sp, #12]
   12e00:	sub	r0, r0, r8
   12e04:	vldr	d16, [r4]
   12e08:	subs	r0, r0, #1
   12e0c:	add	r4, r4, #8
   12e10:	vcvt.s32.f64	s0, d16
   12e14:	vmov	r1, s0
   12e18:	strb	r1, [sl, r7]
   12e1c:	add	sl, sl, #1
   12e20:	bne	12e04 <ReadInt8Data+0x1118>
   12e24:	b	1315c <ReadInt8Data+0x1470>
   12e28:	ldr	r1, [sp, #16]
   12e2c:	sub	r0, r5, #256	; 0x100
   12e30:	mov	r7, #0
   12e34:	mov	r4, sl
   12e38:	mov	r6, #0
   12e3c:	str	r8, [sp, #4]
   12e40:	str	r5, [sp, #8]
   12e44:	str	r0, [sp, #12]
   12e48:	ldr	r0, [sp, #20]
   12e4c:	add	r5, sp, #24
   12e50:	mov	r2, #256	; 0x100
   12e54:	mov	r8, r7
   12e58:	mov	r9, r1
   12e5c:	ldr	r3, [r0]
   12e60:	mov	r0, r5
   12e64:	bl	18d0 <fread@plt>
   12e68:	mov	r1, r5
   12e6c:	mov	r2, #0
   12e70:	vld1.64	{d16-d17}, [r1]!
   12e74:	mov	r5, r4
   12e78:	vmovn.i64	d16, q8
   12e7c:	vmov.32	r3, d16[0]
   12e80:	strb	r3, [r5, r2]!
   12e84:	add	r2, r2, #2
   12e88:	vmov.32	r3, d16[1]
   12e8c:	cmp	r2, #256	; 0x100
   12e90:	strb	r3, [r5, #1]
   12e94:	bne	12e70 <ReadInt8Data+0x1184>
   12e98:	add	r6, r0, r6
   12e9c:	ldr	r0, [sp, #12]
   12ea0:	add	r7, r8, #256	; 0x100
   12ea4:	add	r4, r4, #256	; 0x100
   12ea8:	mov	r1, r9
   12eac:	cmp	r7, r0
   12eb0:	blt	12e48 <ReadInt8Data+0x115c>
   12eb4:	ldr	r5, [sp, #8]
   12eb8:	cmp	r7, r5
   12ebc:	bge	12f10 <ReadInt8Data+0x1224>
   12ec0:	ldr	r0, [sp, #20]
   12ec4:	ldr	r1, [sp, #16]
   12ec8:	sub	r5, r5, r7
   12ecc:	add	r4, sp, #24
   12ed0:	mov	r2, r5
   12ed4:	ldr	r3, [r0]
   12ed8:	mov	r0, r4
   12edc:	bl	18d0 <fread@plt>
   12ee0:	add	r6, r0, r6
   12ee4:	cmp	r5, #1
   12ee8:	blt	12f0c <ReadInt8Data+0x1220>
   12eec:	ldr	r0, [sp, #12]
   12ef0:	mov	r1, sl
   12ef4:	sub	r0, r0, r8
   12ef8:	ldrb	r2, [r4], #8
   12efc:	subs	r0, r0, #1
   12f00:	strb	r2, [r1, r7]
   12f04:	add	r1, r1, #1
   12f08:	bne	12ef8 <ReadInt8Data+0x120c>
   12f0c:	ldr	r5, [sp, #8]
   12f10:	ldr	r4, [sp, #20]
   12f14:	ldr	r8, [sp, #4]
   12f18:	cmp	r8, #13
   12f1c:	bne	13158 <ReadInt8Data+0x146c>
   12f20:	ldr	r0, [r4, #20]
   12f24:	cmp	r0, #0
   12f28:	beq	12f74 <ReadInt8Data+0x1288>
   12f2c:	cmp	r5, #256	; 0x100
   12f30:	bgt	12fb4 <ReadInt8Data+0x12c8>
   12f34:	ldr	r3, [r4]
   12f38:	ldr	r1, [sp, #16]
   12f3c:	add	r4, sp, #24
   12f40:	mov	r2, r5
   12f44:	mov	r0, r4
   12f48:	bl	18d0 <fread@plt>
   12f4c:	add	r6, r0, r6
   12f50:	cmp	r5, #1
   12f54:	blt	13158 <ReadInt8Data+0x146c>
   12f58:	mov	r0, r4
   12f5c:	bl	1c0c <Mat_uint64Swap>
   12f60:	strb	r0, [sl], #1
   12f64:	subs	r5, r5, #1
   12f68:	add	r4, r4, #8
   12f6c:	bne	12f58 <ReadInt8Data+0x126c>
   12f70:	b	13158 <ReadInt8Data+0x146c>
   12f74:	cmp	r5, #256	; 0x100
   12f78:	bgt	13084 <ReadInt8Data+0x1398>
   12f7c:	ldr	r3, [r4]
   12f80:	ldr	r1, [sp, #16]
   12f84:	add	r4, sp, #24
   12f88:	mov	r2, r5
   12f8c:	mov	r0, r4
   12f90:	bl	18d0 <fread@plt>
   12f94:	add	r6, r0, r6
   12f98:	cmp	r5, #1
   12f9c:	blt	13158 <ReadInt8Data+0x146c>
   12fa0:	ldrb	r0, [r4], #8
   12fa4:	subs	r5, r5, #1
   12fa8:	strb	r0, [sl], #1
   12fac:	bne	12fa0 <ReadInt8Data+0x12b4>
   12fb0:	b	13158 <ReadInt8Data+0x146c>
   12fb4:	sub	r0, r5, #256	; 0x100
   12fb8:	str	r5, [sp, #8]
   12fbc:	mov	r7, #0
   12fc0:	mov	r5, sl
   12fc4:	str	r0, [sp, #12]
   12fc8:	ldr	r3, [r4]
   12fcc:	ldr	r1, [sp, #16]
   12fd0:	mov	r9, r7
   12fd4:	add	r7, sp, #24
   12fd8:	mov	r2, #256	; 0x100
   12fdc:	mov	r0, r7
   12fe0:	bl	18d0 <fread@plt>
   12fe4:	mov	r8, r0
   12fe8:	mov	r4, #0
   12fec:	mov	r0, r7
   12ff0:	bl	1c0c <Mat_uint64Swap>
   12ff4:	strb	r0, [r5, r4]
   12ff8:	add	r4, r4, #1
   12ffc:	add	r7, r7, #8
   13000:	cmp	r4, #256	; 0x100
   13004:	bne	12fec <ReadInt8Data+0x1300>
   13008:	ldr	r0, [sp, #12]
   1300c:	ldr	r4, [sp, #20]
   13010:	add	r7, r9, #256	; 0x100
   13014:	add	r6, r8, r6
   13018:	add	r5, r5, #256	; 0x100
   1301c:	cmp	r7, r0
   13020:	blt	12fc8 <ReadInt8Data+0x12dc>
   13024:	ldr	r0, [sp, #8]
   13028:	cmp	r7, r0
   1302c:	bge	13158 <ReadInt8Data+0x146c>
   13030:	ldr	r5, [sp, #16]
   13034:	ldr	r3, [r4]
   13038:	sub	r8, r0, r7
   1303c:	add	r4, sp, #24
   13040:	mov	r0, r4
   13044:	mov	r2, r8
   13048:	mov	r1, r5
   1304c:	bl	18d0 <fread@plt>
   13050:	add	r6, r0, r6
   13054:	cmp	r8, #1
   13058:	blt	1315c <ReadInt8Data+0x1470>
   1305c:	ldr	r0, [sp, #12]
   13060:	sub	r5, r0, r9
   13064:	mov	r0, r4
   13068:	bl	1c0c <Mat_uint64Swap>
   1306c:	strb	r0, [sl, r7]
   13070:	add	sl, sl, #1
   13074:	subs	r5, r5, #1
   13078:	add	r4, r4, #8
   1307c:	bne	13064 <ReadInt8Data+0x1378>
   13080:	b	13158 <ReadInt8Data+0x146c>
   13084:	sub	r0, r5, #256	; 0x100
   13088:	str	r5, [sp, #8]
   1308c:	mov	r7, #0
   13090:	add	r9, sp, #24
   13094:	mov	r5, sl
   13098:	str	r0, [sp, #12]
   1309c:	ldr	r3, [r4]
   130a0:	ldr	r1, [sp, #16]
   130a4:	mov	r0, r9
   130a8:	mov	r2, #256	; 0x100
   130ac:	mov	r8, r7
   130b0:	bl	18d0 <fread@plt>
   130b4:	mov	r1, r9
   130b8:	mov	r2, #0
   130bc:	vld1.64	{d16-d17}, [r1]!
   130c0:	mov	r4, r5
   130c4:	vmovn.i64	d16, q8
   130c8:	vmov.32	r3, d16[0]
   130cc:	strb	r3, [r4, r2]!
   130d0:	add	r2, r2, #2
   130d4:	vmov.32	r3, d16[1]
   130d8:	cmp	r2, #256	; 0x100
   130dc:	strb	r3, [r4, #1]
   130e0:	bne	130bc <ReadInt8Data+0x13d0>
   130e4:	add	r6, r0, r6
   130e8:	ldr	r0, [sp, #12]
   130ec:	ldr	r4, [sp, #20]
   130f0:	add	r7, r8, #256	; 0x100
   130f4:	add	r5, r5, #256	; 0x100
   130f8:	cmp	r7, r0
   130fc:	blt	1309c <ReadInt8Data+0x13b0>
   13100:	ldr	r0, [sp, #8]
   13104:	cmp	r7, r0
   13108:	bge	13158 <ReadInt8Data+0x146c>
   1310c:	ldr	r5, [sp, #16]
   13110:	ldr	r3, [r4]
   13114:	sub	r9, r0, r7
   13118:	add	r4, sp, #24
   1311c:	mov	r0, r4
   13120:	mov	r2, r9
   13124:	mov	r1, r5
   13128:	bl	18d0 <fread@plt>
   1312c:	add	r6, r0, r6
   13130:	cmp	r9, #1
   13134:	blt	1315c <ReadInt8Data+0x1470>
   13138:	ldr	r0, [sp, #12]
   1313c:	sub	r0, r0, r8
   13140:	ldrb	r1, [r4], #8
   13144:	subs	r0, r0, #1
   13148:	strb	r1, [sl, r7]
   1314c:	add	sl, sl, #1
   13150:	bne	13140 <ReadInt8Data+0x1454>
   13154:	b	1315c <ReadInt8Data+0x1470>
   13158:	ldr	r5, [sp, #16]
   1315c:	mul	r0, r6, r5
   13160:	sub	sp, fp, #28
   13164:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00013168 <ReadCompressedInt8Data>:
   13168:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1316c:	add	fp, sp, #28
   13170:	sub	sp, sp, #12
   13174:	mov	r7, r0
   13178:	mov	r0, #0
   1317c:	cmp	r1, #0
   13180:	beq	13688 <ReadCompressedInt8Data+0x520>
   13184:	cmp	r7, #0
   13188:	movne	r5, r2
   1318c:	cmpne	r2, #0
   13190:	beq	13688 <ReadCompressedInt8Data+0x520>
   13194:	ldr	sl, [fp, #8]
   13198:	mov	r0, r3
   1319c:	mov	r4, r3
   131a0:	mov	r6, r1
   131a4:	bl	193c <Mat_SizeOf@plt>
   131a8:	mov	r9, r0
   131ac:	sub	r0, r4, #1
   131b0:	cmp	r0, #12
   131b4:	bhi	13684 <ReadCompressedInt8Data+0x51c>
   131b8:	add	r1, pc, #4
   131bc:	ldr	r0, [r1, r0, lsl #2]
   131c0:	add	pc, r1, r0
   131c4:	.word	0x00000034
   131c8:	.word	0x0000006c
   131cc:	.word	0x000000a4
   131d0:	.word	0x000000ec
   131d4:	.word	0x00000134
   131d8:	.word	0x0000017c
   131dc:	.word	0x000001c4
   131e0:	.word	0x000004c0
   131e4:	.word	0x00000214
   131e8:	.word	0x000004c0
   131ec:	.word	0x000004c0
   131f0:	.word	0x00000264
   131f4:	.word	0x000002ac
   131f8:	cmp	sl, #1
   131fc:	blt	13684 <ReadCompressedInt8Data+0x51c>
   13200:	mov	r8, sp
   13204:	mov	r4, sl
   13208:	mov	r0, r7
   1320c:	mov	r1, r6
   13210:	mov	r2, r8
   13214:	mov	r3, r9
   13218:	bl	31f0 <InflateData>
   1321c:	ldrb	r0, [sp]
   13220:	subs	r4, r4, #1
   13224:	strb	r0, [r5], #1
   13228:	bne	13208 <ReadCompressedInt8Data+0xa0>
   1322c:	b	13684 <ReadCompressedInt8Data+0x51c>
   13230:	cmp	sl, #1
   13234:	blt	13684 <ReadCompressedInt8Data+0x51c>
   13238:	mov	r8, sp
   1323c:	mov	r4, sl
   13240:	mov	r0, r7
   13244:	mov	r1, r6
   13248:	mov	r2, r8
   1324c:	mov	r3, r9
   13250:	bl	31f0 <InflateData>
   13254:	ldrb	r0, [sp]
   13258:	subs	r4, r4, #1
   1325c:	strb	r0, [r5], #1
   13260:	bne	13240 <ReadCompressedInt8Data+0xd8>
   13264:	b	13684 <ReadCompressedInt8Data+0x51c>
   13268:	ldr	r0, [r7, #20]
   1326c:	cmp	r0, #0
   13270:	beq	134b8 <ReadCompressedInt8Data+0x350>
   13274:	cmp	sl, #1
   13278:	blt	13684 <ReadCompressedInt8Data+0x51c>
   1327c:	mov	r8, sp
   13280:	mov	r4, sl
   13284:	mov	r0, r7
   13288:	mov	r1, r6
   1328c:	mov	r2, r8
   13290:	mov	r3, r9
   13294:	bl	31f0 <InflateData>
   13298:	mov	r0, r8
   1329c:	bl	1c50 <Mat_int16Swap>
   132a0:	strb	r0, [r5], #1
   132a4:	subs	r4, r4, #1
   132a8:	bne	13284 <ReadCompressedInt8Data+0x11c>
   132ac:	b	13684 <ReadCompressedInt8Data+0x51c>
   132b0:	ldr	r0, [r7, #20]
   132b4:	cmp	r0, #0
   132b8:	beq	134f0 <ReadCompressedInt8Data+0x388>
   132bc:	cmp	sl, #1
   132c0:	blt	13684 <ReadCompressedInt8Data+0x51c>
   132c4:	mov	r8, sp
   132c8:	mov	r4, sl
   132cc:	mov	r0, r7
   132d0:	mov	r1, r6
   132d4:	mov	r2, r8
   132d8:	mov	r3, r9
   132dc:	bl	31f0 <InflateData>
   132e0:	mov	r0, r8
   132e4:	bl	1c64 <Mat_uint16Swap>
   132e8:	strb	r0, [r5], #1
   132ec:	subs	r4, r4, #1
   132f0:	bne	132cc <ReadCompressedInt8Data+0x164>
   132f4:	b	13684 <ReadCompressedInt8Data+0x51c>
   132f8:	ldr	r0, [r7, #20]
   132fc:	cmp	r0, #0
   13300:	beq	13528 <ReadCompressedInt8Data+0x3c0>
   13304:	cmp	sl, #1
   13308:	blt	13684 <ReadCompressedInt8Data+0x51c>
   1330c:	mov	r8, sp
   13310:	mov	r4, sl
   13314:	mov	r0, r7
   13318:	mov	r1, r6
   1331c:	mov	r2, r8
   13320:	mov	r3, r9
   13324:	bl	31f0 <InflateData>
   13328:	mov	r0, r8
   1332c:	bl	1c28 <Mat_int32Swap>
   13330:	strb	r0, [r5], #1
   13334:	subs	r4, r4, #1
   13338:	bne	13314 <ReadCompressedInt8Data+0x1ac>
   1333c:	b	13684 <ReadCompressedInt8Data+0x51c>
   13340:	ldr	r0, [r7, #20]
   13344:	cmp	r0, #0
   13348:	beq	13560 <ReadCompressedInt8Data+0x3f8>
   1334c:	cmp	sl, #1
   13350:	blt	13684 <ReadCompressedInt8Data+0x51c>
   13354:	mov	r8, sp
   13358:	mov	r4, sl
   1335c:	mov	r0, r7
   13360:	mov	r1, r6
   13364:	mov	r2, r8
   13368:	mov	r3, r9
   1336c:	bl	31f0 <InflateData>
   13370:	mov	r0, r8
   13374:	bl	1c3c <Mat_uint32Swap>
   13378:	strb	r0, [r5], #1
   1337c:	subs	r4, r4, #1
   13380:	bne	1335c <ReadCompressedInt8Data+0x1f4>
   13384:	b	13684 <ReadCompressedInt8Data+0x51c>
   13388:	ldr	r0, [r7, #20]
   1338c:	cmp	r0, #0
   13390:	beq	13598 <ReadCompressedInt8Data+0x430>
   13394:	cmp	sl, #1
   13398:	blt	13684 <ReadCompressedInt8Data+0x51c>
   1339c:	mov	r8, sp
   133a0:	mov	r4, sl
   133a4:	mov	r0, r7
   133a8:	mov	r1, r6
   133ac:	mov	r2, r8
   133b0:	mov	r3, r9
   133b4:	bl	31f0 <InflateData>
   133b8:	mov	r0, r8
   133bc:	bl	1c7c <Mat_floatSwap>
   133c0:	vcvt.s32.f32	s0, s0
   133c4:	subs	r4, r4, #1
   133c8:	vmov	r0, s0
   133cc:	strb	r0, [r5], #1
   133d0:	bne	133a4 <ReadCompressedInt8Data+0x23c>
   133d4:	b	13684 <ReadCompressedInt8Data+0x51c>
   133d8:	ldr	r0, [r7, #20]
   133dc:	cmp	r0, #0
   133e0:	beq	135d8 <ReadCompressedInt8Data+0x470>
   133e4:	cmp	sl, #1
   133e8:	blt	13684 <ReadCompressedInt8Data+0x51c>
   133ec:	mov	r8, sp
   133f0:	mov	r4, sl
   133f4:	mov	r0, r7
   133f8:	mov	r1, r6
   133fc:	mov	r2, r8
   13400:	mov	r3, r9
   13404:	bl	31f0 <InflateData>
   13408:	mov	r0, r8
   1340c:	bl	1cc0 <Mat_doubleSwap>
   13410:	vcvt.s32.f64	s0, d0
   13414:	subs	r4, r4, #1
   13418:	vmov	r0, s0
   1341c:	strb	r0, [r5], #1
   13420:	bne	133f4 <ReadCompressedInt8Data+0x28c>
   13424:	b	13684 <ReadCompressedInt8Data+0x51c>
   13428:	ldr	r0, [r7, #20]
   1342c:	cmp	r0, #0
   13430:	beq	13618 <ReadCompressedInt8Data+0x4b0>
   13434:	cmp	sl, #1
   13438:	blt	13684 <ReadCompressedInt8Data+0x51c>
   1343c:	mov	r8, sp
   13440:	mov	r4, sl
   13444:	mov	r0, r7
   13448:	mov	r1, r6
   1344c:	mov	r2, r8
   13450:	mov	r3, r9
   13454:	bl	31f0 <InflateData>
   13458:	mov	r0, r8
   1345c:	bl	1bbc <Mat_int64Swap>
   13460:	strb	r0, [r5], #1
   13464:	subs	r4, r4, #1
   13468:	bne	13444 <ReadCompressedInt8Data+0x2dc>
   1346c:	b	13684 <ReadCompressedInt8Data+0x51c>
   13470:	ldr	r0, [r7, #20]
   13474:	cmp	r0, #0
   13478:	beq	13650 <ReadCompressedInt8Data+0x4e8>
   1347c:	cmp	sl, #1
   13480:	blt	13684 <ReadCompressedInt8Data+0x51c>
   13484:	mov	r8, sp
   13488:	mov	r4, sl
   1348c:	mov	r0, r7
   13490:	mov	r1, r6
   13494:	mov	r2, r8
   13498:	mov	r3, r9
   1349c:	bl	31f0 <InflateData>
   134a0:	mov	r0, r8
   134a4:	bl	1c0c <Mat_uint64Swap>
   134a8:	strb	r0, [r5], #1
   134ac:	subs	r4, r4, #1
   134b0:	bne	1348c <ReadCompressedInt8Data+0x324>
   134b4:	b	13684 <ReadCompressedInt8Data+0x51c>
   134b8:	cmp	sl, #1
   134bc:	blt	13684 <ReadCompressedInt8Data+0x51c>
   134c0:	mov	r8, sp
   134c4:	mov	r4, sl
   134c8:	mov	r0, r7
   134cc:	mov	r1, r6
   134d0:	mov	r2, r8
   134d4:	mov	r3, r9
   134d8:	bl	31f0 <InflateData>
   134dc:	ldrb	r0, [sp]
   134e0:	subs	r4, r4, #1
   134e4:	strb	r0, [r5], #1
   134e8:	bne	134c8 <ReadCompressedInt8Data+0x360>
   134ec:	b	13684 <ReadCompressedInt8Data+0x51c>
   134f0:	cmp	sl, #1
   134f4:	blt	13684 <ReadCompressedInt8Data+0x51c>
   134f8:	mov	r8, sp
   134fc:	mov	r4, sl
   13500:	mov	r0, r7
   13504:	mov	r1, r6
   13508:	mov	r2, r8
   1350c:	mov	r3, r9
   13510:	bl	31f0 <InflateData>
   13514:	ldrb	r0, [sp]
   13518:	subs	r4, r4, #1
   1351c:	strb	r0, [r5], #1
   13520:	bne	13500 <ReadCompressedInt8Data+0x398>
   13524:	b	13684 <ReadCompressedInt8Data+0x51c>
   13528:	cmp	sl, #1
   1352c:	blt	13684 <ReadCompressedInt8Data+0x51c>
   13530:	mov	r8, sp
   13534:	mov	r4, sl
   13538:	mov	r0, r7
   1353c:	mov	r1, r6
   13540:	mov	r2, r8
   13544:	mov	r3, r9
   13548:	bl	31f0 <InflateData>
   1354c:	ldr	r0, [sp]
   13550:	subs	r4, r4, #1
   13554:	strb	r0, [r5], #1
   13558:	bne	13538 <ReadCompressedInt8Data+0x3d0>
   1355c:	b	13684 <ReadCompressedInt8Data+0x51c>
   13560:	cmp	sl, #1
   13564:	blt	13684 <ReadCompressedInt8Data+0x51c>
   13568:	mov	r8, sp
   1356c:	mov	r4, sl
   13570:	mov	r0, r7
   13574:	mov	r1, r6
   13578:	mov	r2, r8
   1357c:	mov	r3, r9
   13580:	bl	31f0 <InflateData>
   13584:	ldr	r0, [sp]
   13588:	subs	r4, r4, #1
   1358c:	strb	r0, [r5], #1
   13590:	bne	13570 <ReadCompressedInt8Data+0x408>
   13594:	b	13684 <ReadCompressedInt8Data+0x51c>
   13598:	cmp	sl, #1
   1359c:	blt	13684 <ReadCompressedInt8Data+0x51c>
   135a0:	mov	r8, sp
   135a4:	mov	r4, sl
   135a8:	mov	r0, r7
   135ac:	mov	r1, r6
   135b0:	mov	r2, r8
   135b4:	mov	r3, r9
   135b8:	bl	31f0 <InflateData>
   135bc:	vldr	s0, [sp]
   135c0:	subs	r4, r4, #1
   135c4:	vcvt.s32.f32	s0, s0
   135c8:	vmov	r0, s0
   135cc:	strb	r0, [r5], #1
   135d0:	bne	135a8 <ReadCompressedInt8Data+0x440>
   135d4:	b	13684 <ReadCompressedInt8Data+0x51c>
   135d8:	cmp	sl, #1
   135dc:	blt	13684 <ReadCompressedInt8Data+0x51c>
   135e0:	mov	r8, sp
   135e4:	mov	r4, sl
   135e8:	mov	r0, r7
   135ec:	mov	r1, r6
   135f0:	mov	r2, r8
   135f4:	mov	r3, r9
   135f8:	bl	31f0 <InflateData>
   135fc:	vldr	d16, [sp]
   13600:	subs	r4, r4, #1
   13604:	vcvt.s32.f64	s0, d16
   13608:	vmov	r0, s0
   1360c:	strb	r0, [r5], #1
   13610:	bne	135e8 <ReadCompressedInt8Data+0x480>
   13614:	b	13684 <ReadCompressedInt8Data+0x51c>
   13618:	cmp	sl, #1
   1361c:	blt	13684 <ReadCompressedInt8Data+0x51c>
   13620:	mov	r8, sp
   13624:	mov	r4, sl
   13628:	mov	r0, r7
   1362c:	mov	r1, r6
   13630:	mov	r2, r8
   13634:	mov	r3, r9
   13638:	bl	31f0 <InflateData>
   1363c:	ldrb	r0, [sp]
   13640:	subs	r4, r4, #1
   13644:	strb	r0, [r5], #1
   13648:	bne	13628 <ReadCompressedInt8Data+0x4c0>
   1364c:	b	13684 <ReadCompressedInt8Data+0x51c>
   13650:	cmp	sl, #1
   13654:	blt	13684 <ReadCompressedInt8Data+0x51c>
   13658:	mov	r8, sp
   1365c:	mov	r4, sl
   13660:	mov	r0, r7
   13664:	mov	r1, r6
   13668:	mov	r2, r8
   1366c:	mov	r3, r9
   13670:	bl	31f0 <InflateData>
   13674:	ldrb	r0, [sp]
   13678:	subs	r4, r4, #1
   1367c:	strb	r0, [r5], #1
   13680:	bne	13660 <ReadCompressedInt8Data+0x4f8>
   13684:	mul	r0, r9, sl
   13688:	sub	sp, fp, #28
   1368c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00013690 <ReadUInt8Data>:
   13690:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13694:	add	fp, sp, #28
   13698:	sub	sp, sp, #28
   1369c:	sub	sp, sp, #2048	; 0x800
   136a0:	mov	r4, r0
   136a4:	mov	r0, #0
   136a8:	cmp	r4, #0
   136ac:	beq	14b04 <ReadUInt8Data+0x1474>
   136b0:	cmp	r1, #0
   136b4:	mov	sl, r1
   136b8:	ldrne	r1, [r4]
   136bc:	cmpne	r1, #0
   136c0:	beq	14b04 <ReadUInt8Data+0x1474>
   136c4:	mov	r0, r2
   136c8:	mov	r5, r3
   136cc:	mov	r8, r2
   136d0:	bl	193c <Mat_SizeOf@plt>
   136d4:	str	r0, [sp, #16]
   136d8:	sub	r0, r8, #1
   136dc:	mov	r6, #0
   136e0:	str	r4, [sp, #20]
   136e4:	cmp	r0, #11
   136e8:	bhi	148bc <ReadUInt8Data+0x122c>
   136ec:	add	r1, pc, #4
   136f0:	ldr	r0, [r1, r0, lsl #2]
   136f4:	add	pc, r1, r0
   136f8:	.word	0x00000030
   136fc:	.word	0x00000098
   13700:	.word	0x000000d4
   13704:	.word	0x00000128
   13708:	.word	0x0000017c
   1370c:	.word	0x000001d0
   13710:	.word	0x00000224
   13714:	.word	0x000011c4
   13718:	.word	0x00000280
   1371c:	.word	0x000011c4
   13720:	.word	0x000011c4
   13724:	.word	0x000002dc
   13728:	cmp	r5, #256	; 0x100
   1372c:	ble	13798 <ReadUInt8Data+0x108>
   13730:	ldr	r9, [sp, #16]
   13734:	sub	r0, r5, #256	; 0x100
   13738:	str	r5, [sp, #8]
   1373c:	mov	r5, r4
   13740:	mov	r4, #0
   13744:	add	r8, sp, #24
   13748:	mov	r6, #0
   1374c:	str	r0, [sp, #12]
   13750:	ldr	r3, [r5]
   13754:	mov	r0, r8
   13758:	mov	r1, r9
   1375c:	mov	r2, #256	; 0x100
   13760:	bl	18d0 <fread@plt>
   13764:	mov	r7, r0
   13768:	add	r0, sl, r4
   1376c:	mov	r1, r8
   13770:	mov	r2, #256	; 0x100
   13774:	bl	1834 <memcpy@plt>
   13778:	ldr	r0, [sp, #12]
   1377c:	add	r4, r4, #256	; 0x100
   13780:	add	r6, r7, r6
   13784:	cmp	r4, r0
   13788:	blt	13750 <ReadUInt8Data+0xc0>
   1378c:	b	13a90 <ReadUInt8Data+0x400>
   13790:	cmp	r5, #256	; 0x100
   13794:	bgt	13a34 <ReadUInt8Data+0x3a4>
   13798:	ldr	r3, [r4]
   1379c:	ldr	r1, [sp, #16]
   137a0:	add	r0, sp, #24
   137a4:	mov	r2, r5
   137a8:	bl	18d0 <fread@plt>
   137ac:	mov	r6, r0
   137b0:	cmp	r5, #1
   137b4:	blt	14afc <ReadUInt8Data+0x146c>
   137b8:	add	r1, sp, #24
   137bc:	mov	r0, sl
   137c0:	mov	r2, r5
   137c4:	bl	1834 <memcpy@plt>
   137c8:	b	14afc <ReadUInt8Data+0x146c>
   137cc:	ldr	r0, [r4, #20]
   137d0:	cmp	r0, #0
   137d4:	beq	13ae4 <ReadUInt8Data+0x454>
   137d8:	cmp	r5, #256	; 0x100
   137dc:	bgt	13cc8 <ReadUInt8Data+0x638>
   137e0:	ldr	r3, [r4]
   137e4:	ldr	r1, [sp, #16]
   137e8:	add	r4, sp, #24
   137ec:	mov	r2, r5
   137f0:	mov	r0, r4
   137f4:	bl	18d0 <fread@plt>
   137f8:	mov	r6, r0
   137fc:	cmp	r5, #1
   13800:	blt	14afc <ReadUInt8Data+0x146c>
   13804:	mov	r0, r4
   13808:	bl	1c50 <Mat_int16Swap>
   1380c:	strb	r0, [sl], #1
   13810:	subs	r5, r5, #1
   13814:	add	r4, r4, #2
   13818:	bne	13804 <ReadUInt8Data+0x174>
   1381c:	b	14afc <ReadUInt8Data+0x146c>
   13820:	ldr	r0, [r4, #20]
   13824:	cmp	r0, #0
   13828:	beq	13b24 <ReadUInt8Data+0x494>
   1382c:	cmp	r5, #256	; 0x100
   13830:	bgt	13d9c <ReadUInt8Data+0x70c>
   13834:	ldr	r3, [r4]
   13838:	ldr	r1, [sp, #16]
   1383c:	add	r4, sp, #24
   13840:	mov	r2, r5
   13844:	mov	r0, r4
   13848:	bl	18d0 <fread@plt>
   1384c:	mov	r6, r0
   13850:	cmp	r5, #1
   13854:	blt	14afc <ReadUInt8Data+0x146c>
   13858:	mov	r0, r4
   1385c:	bl	1c64 <Mat_uint16Swap>
   13860:	strb	r0, [sl], #1
   13864:	subs	r5, r5, #1
   13868:	add	r4, r4, #2
   1386c:	bne	13858 <ReadUInt8Data+0x1c8>
   13870:	b	14afc <ReadUInt8Data+0x146c>
   13874:	ldr	r0, [r4, #20]
   13878:	cmp	r0, #0
   1387c:	beq	13b64 <ReadUInt8Data+0x4d4>
   13880:	cmp	r5, #256	; 0x100
   13884:	bgt	13e70 <ReadUInt8Data+0x7e0>
   13888:	ldr	r3, [r4]
   1388c:	ldr	r1, [sp, #16]
   13890:	add	r4, sp, #24
   13894:	mov	r2, r5
   13898:	mov	r0, r4
   1389c:	bl	18d0 <fread@plt>
   138a0:	mov	r6, r0
   138a4:	cmp	r5, #1
   138a8:	blt	14afc <ReadUInt8Data+0x146c>
   138ac:	mov	r0, r4
   138b0:	bl	1c28 <Mat_int32Swap>
   138b4:	strb	r0, [sl], #1
   138b8:	subs	r5, r5, #1
   138bc:	add	r4, r4, #4
   138c0:	bne	138ac <ReadUInt8Data+0x21c>
   138c4:	b	14afc <ReadUInt8Data+0x146c>
   138c8:	ldr	r0, [r4, #20]
   138cc:	cmp	r0, #0
   138d0:	beq	13ba4 <ReadUInt8Data+0x514>
   138d4:	cmp	r5, #256	; 0x100
   138d8:	bgt	13f44 <ReadUInt8Data+0x8b4>
   138dc:	ldr	r3, [r4]
   138e0:	ldr	r1, [sp, #16]
   138e4:	add	r4, sp, #24
   138e8:	mov	r2, r5
   138ec:	mov	r0, r4
   138f0:	bl	18d0 <fread@plt>
   138f4:	mov	r6, r0
   138f8:	cmp	r5, #1
   138fc:	blt	14afc <ReadUInt8Data+0x146c>
   13900:	mov	r0, r4
   13904:	bl	1c3c <Mat_uint32Swap>
   13908:	strb	r0, [sl], #1
   1390c:	subs	r5, r5, #1
   13910:	add	r4, r4, #4
   13914:	bne	13900 <ReadUInt8Data+0x270>
   13918:	b	14afc <ReadUInt8Data+0x146c>
   1391c:	ldr	r0, [r4, #20]
   13920:	cmp	r0, #0
   13924:	beq	13be4 <ReadUInt8Data+0x554>
   13928:	cmp	r5, #256	; 0x100
   1392c:	bgt	14018 <ReadUInt8Data+0x988>
   13930:	ldr	r3, [r4]
   13934:	ldr	r1, [sp, #16]
   13938:	add	r4, sp, #24
   1393c:	mov	r2, r5
   13940:	mov	r0, r4
   13944:	bl	18d0 <fread@plt>
   13948:	mov	r6, r0
   1394c:	cmp	r5, #1
   13950:	blt	14afc <ReadUInt8Data+0x146c>
   13954:	mov	r0, r4
   13958:	bl	1c7c <Mat_floatSwap>
   1395c:	vcvt.u32.f32	s0, s0
   13960:	subs	r5, r5, #1
   13964:	add	r4, r4, #4
   13968:	vmov	r0, s0
   1396c:	strb	r0, [sl], #1
   13970:	bne	13954 <ReadUInt8Data+0x2c4>
   13974:	b	14afc <ReadUInt8Data+0x146c>
   13978:	ldr	r0, [r4, #20]
   1397c:	cmp	r0, #0
   13980:	beq	13c30 <ReadUInt8Data+0x5a0>
   13984:	cmp	r5, #256	; 0x100
   13988:	bgt	140fc <ReadUInt8Data+0xa6c>
   1398c:	ldr	r3, [r4]
   13990:	ldr	r1, [sp, #16]
   13994:	add	r4, sp, #24
   13998:	mov	r2, r5
   1399c:	mov	r0, r4
   139a0:	bl	18d0 <fread@plt>
   139a4:	mov	r6, r0
   139a8:	cmp	r5, #1
   139ac:	blt	14afc <ReadUInt8Data+0x146c>
   139b0:	mov	r0, r4
   139b4:	bl	1cc0 <Mat_doubleSwap>
   139b8:	vcvt.u32.f64	s0, d0
   139bc:	subs	r5, r5, #1
   139c0:	add	r4, r4, #8
   139c4:	vmov	r0, s0
   139c8:	strb	r0, [sl], #1
   139cc:	bne	139b0 <ReadUInt8Data+0x320>
   139d0:	b	14afc <ReadUInt8Data+0x146c>
   139d4:	ldr	r0, [r4, #20]
   139d8:	cmp	r0, #0
   139dc:	beq	13c7c <ReadUInt8Data+0x5ec>
   139e0:	cmp	r5, #256	; 0x100
   139e4:	bgt	141e0 <ReadUInt8Data+0xb50>
   139e8:	ldr	r3, [r4]
   139ec:	ldr	r1, [sp, #16]
   139f0:	add	r4, sp, #24
   139f4:	mov	r2, r5
   139f8:	mov	r0, r4
   139fc:	bl	18d0 <fread@plt>
   13a00:	mov	r6, r0
   13a04:	cmp	r5, #1
   13a08:	blt	13cc0 <ReadUInt8Data+0x630>
   13a0c:	mov	r9, r5
   13a10:	mov	r7, sl
   13a14:	mov	r0, r4
   13a18:	bl	1bbc <Mat_int64Swap>
   13a1c:	strb	r0, [r7], #1
   13a20:	subs	r5, r5, #1
   13a24:	add	r4, r4, #8
   13a28:	bne	13a14 <ReadUInt8Data+0x384>
   13a2c:	mov	r5, r9
   13a30:	b	13cc0 <ReadUInt8Data+0x630>
   13a34:	ldr	r9, [sp, #16]
   13a38:	sub	r0, r5, #256	; 0x100
   13a3c:	str	r5, [sp, #8]
   13a40:	mov	r5, r4
   13a44:	mov	r4, #0
   13a48:	add	r8, sp, #24
   13a4c:	mov	r6, #0
   13a50:	str	r0, [sp, #12]
   13a54:	ldr	r3, [r5]
   13a58:	mov	r0, r8
   13a5c:	mov	r1, r9
   13a60:	mov	r2, #256	; 0x100
   13a64:	bl	18d0 <fread@plt>
   13a68:	mov	r7, r0
   13a6c:	add	r0, sl, r4
   13a70:	mov	r1, r8
   13a74:	mov	r2, #256	; 0x100
   13a78:	bl	1834 <memcpy@plt>
   13a7c:	ldr	r0, [sp, #12]
   13a80:	add	r4, r4, #256	; 0x100
   13a84:	add	r6, r7, r6
   13a88:	cmp	r4, r0
   13a8c:	blt	13a54 <ReadUInt8Data+0x3c4>
   13a90:	ldr	r0, [sp, #8]
   13a94:	cmp	r4, r0
   13a98:	bge	13adc <ReadUInt8Data+0x44c>
   13a9c:	sub	r7, r0, r4
   13aa0:	ldr	r0, [sp, #20]
   13aa4:	mov	r1, r9
   13aa8:	mov	r5, r9
   13aac:	mov	r2, r7
   13ab0:	ldr	r3, [r0]
   13ab4:	add	r0, sp, #24
   13ab8:	bl	18d0 <fread@plt>
   13abc:	add	r6, r0, r6
   13ac0:	cmp	r7, #1
   13ac4:	blt	14b00 <ReadUInt8Data+0x1470>
   13ac8:	add	r0, sl, r4
   13acc:	add	r1, sp, #24
   13ad0:	mov	r2, r7
   13ad4:	bl	1834 <memcpy@plt>
   13ad8:	b	14b00 <ReadUInt8Data+0x1470>
   13adc:	mov	r5, r9
   13ae0:	b	14b00 <ReadUInt8Data+0x1470>
   13ae4:	cmp	r5, #256	; 0x100
   13ae8:	bgt	142c0 <ReadUInt8Data+0xc30>
   13aec:	ldr	r3, [r4]
   13af0:	ldr	r1, [sp, #16]
   13af4:	add	r4, sp, #24
   13af8:	mov	r2, r5
   13afc:	mov	r0, r4
   13b00:	bl	18d0 <fread@plt>
   13b04:	mov	r6, r0
   13b08:	cmp	r5, #1
   13b0c:	blt	14afc <ReadUInt8Data+0x146c>
   13b10:	ldrb	r0, [r4], #2
   13b14:	subs	r5, r5, #1
   13b18:	strb	r0, [sl], #1
   13b1c:	bne	13b10 <ReadUInt8Data+0x480>
   13b20:	b	14afc <ReadUInt8Data+0x146c>
   13b24:	cmp	r5, #256	; 0x100
   13b28:	bgt	14390 <ReadUInt8Data+0xd00>
   13b2c:	ldr	r3, [r4]
   13b30:	ldr	r1, [sp, #16]
   13b34:	add	r4, sp, #24
   13b38:	mov	r2, r5
   13b3c:	mov	r0, r4
   13b40:	bl	18d0 <fread@plt>
   13b44:	mov	r6, r0
   13b48:	cmp	r5, #1
   13b4c:	blt	14afc <ReadUInt8Data+0x146c>
   13b50:	ldrb	r0, [r4], #2
   13b54:	subs	r5, r5, #1
   13b58:	strb	r0, [sl], #1
   13b5c:	bne	13b50 <ReadUInt8Data+0x4c0>
   13b60:	b	14afc <ReadUInt8Data+0x146c>
   13b64:	cmp	r5, #256	; 0x100
   13b68:	bgt	14460 <ReadUInt8Data+0xdd0>
   13b6c:	ldr	r3, [r4]
   13b70:	ldr	r1, [sp, #16]
   13b74:	add	r4, sp, #24
   13b78:	mov	r2, r5
   13b7c:	mov	r0, r4
   13b80:	bl	18d0 <fread@plt>
   13b84:	mov	r6, r0
   13b88:	cmp	r5, #1
   13b8c:	blt	14afc <ReadUInt8Data+0x146c>
   13b90:	ldr	r0, [r4], #4
   13b94:	subs	r5, r5, #1
   13b98:	strb	r0, [sl], #1
   13b9c:	bne	13b90 <ReadUInt8Data+0x500>
   13ba0:	b	14afc <ReadUInt8Data+0x146c>
   13ba4:	cmp	r5, #256	; 0x100
   13ba8:	bgt	14534 <ReadUInt8Data+0xea4>
   13bac:	ldr	r3, [r4]
   13bb0:	ldr	r1, [sp, #16]
   13bb4:	add	r4, sp, #24
   13bb8:	mov	r2, r5
   13bbc:	mov	r0, r4
   13bc0:	bl	18d0 <fread@plt>
   13bc4:	mov	r6, r0
   13bc8:	cmp	r5, #1
   13bcc:	blt	14afc <ReadUInt8Data+0x146c>
   13bd0:	ldr	r0, [r4], #4
   13bd4:	subs	r5, r5, #1
   13bd8:	strb	r0, [sl], #1
   13bdc:	bne	13bd0 <ReadUInt8Data+0x540>
   13be0:	b	14afc <ReadUInt8Data+0x146c>
   13be4:	cmp	r5, #256	; 0x100
   13be8:	bgt	14608 <ReadUInt8Data+0xf78>
   13bec:	ldr	r3, [r4]
   13bf0:	ldr	r1, [sp, #16]
   13bf4:	add	r4, sp, #24
   13bf8:	mov	r2, r5
   13bfc:	mov	r0, r4
   13c00:	bl	18d0 <fread@plt>
   13c04:	mov	r6, r0
   13c08:	cmp	r5, #1
   13c0c:	blt	14afc <ReadUInt8Data+0x146c>
   13c10:	vldr	s0, [r4]
   13c14:	subs	r5, r5, #1
   13c18:	add	r4, r4, #4
   13c1c:	vcvt.u32.f32	s0, s0
   13c20:	vmov	r0, s0
   13c24:	strb	r0, [sl], #1
   13c28:	bne	13c10 <ReadUInt8Data+0x580>
   13c2c:	b	14afc <ReadUInt8Data+0x146c>
   13c30:	cmp	r5, #256	; 0x100
   13c34:	bgt	146ec <ReadUInt8Data+0x105c>
   13c38:	ldr	r3, [r4]
   13c3c:	ldr	r1, [sp, #16]
   13c40:	add	r4, sp, #24
   13c44:	mov	r2, r5
   13c48:	mov	r0, r4
   13c4c:	bl	18d0 <fread@plt>
   13c50:	mov	r6, r0
   13c54:	cmp	r5, #1
   13c58:	blt	14afc <ReadUInt8Data+0x146c>
   13c5c:	vldr	d16, [r4]
   13c60:	subs	r5, r5, #1
   13c64:	add	r4, r4, #8
   13c68:	vcvt.u32.f64	s0, d16
   13c6c:	vmov	r0, s0
   13c70:	strb	r0, [sl], #1
   13c74:	bne	13c5c <ReadUInt8Data+0x5cc>
   13c78:	b	14afc <ReadUInt8Data+0x146c>
   13c7c:	cmp	r5, #256	; 0x100
   13c80:	bgt	147cc <ReadUInt8Data+0x113c>
   13c84:	ldr	r3, [r4]
   13c88:	ldr	r1, [sp, #16]
   13c8c:	add	r4, sp, #24
   13c90:	mov	r2, r5
   13c94:	mov	r0, r4
   13c98:	bl	18d0 <fread@plt>
   13c9c:	mov	r6, r0
   13ca0:	cmp	r5, #1
   13ca4:	blt	13cc0 <ReadUInt8Data+0x630>
   13ca8:	mov	r0, r5
   13cac:	mov	r1, sl
   13cb0:	ldrb	r2, [r4], #8
   13cb4:	subs	r0, r0, #1
   13cb8:	strb	r2, [r1], #1
   13cbc:	bne	13cb0 <ReadUInt8Data+0x620>
   13cc0:	ldr	r4, [sp, #20]
   13cc4:	b	148bc <ReadUInt8Data+0x122c>
   13cc8:	sub	r0, r5, #256	; 0x100
   13ccc:	str	r5, [sp, #8]
   13cd0:	mov	r7, #0
   13cd4:	mov	r5, sl
   13cd8:	mov	r6, #0
   13cdc:	str	r0, [sp, #12]
   13ce0:	ldr	r3, [r4]
   13ce4:	ldr	r1, [sp, #16]
   13ce8:	mov	r9, r7
   13cec:	add	r7, sp, #24
   13cf0:	mov	r2, #256	; 0x100
   13cf4:	mov	r0, r7
   13cf8:	bl	18d0 <fread@plt>
   13cfc:	mov	r8, r0
   13d00:	mov	r4, #0
   13d04:	mov	r0, r7
   13d08:	bl	1c50 <Mat_int16Swap>
   13d0c:	strb	r0, [r5, r4]
   13d10:	add	r4, r4, #1
   13d14:	add	r7, r7, #2
   13d18:	cmp	r4, #256	; 0x100
   13d1c:	bne	13d04 <ReadUInt8Data+0x674>
   13d20:	ldr	r0, [sp, #12]
   13d24:	ldr	r4, [sp, #20]
   13d28:	add	r7, r9, #256	; 0x100
   13d2c:	add	r6, r8, r6
   13d30:	add	r5, r5, #256	; 0x100
   13d34:	cmp	r7, r0
   13d38:	blt	13ce0 <ReadUInt8Data+0x650>
   13d3c:	ldr	r0, [sp, #8]
   13d40:	cmp	r7, r0
   13d44:	bge	14afc <ReadUInt8Data+0x146c>
   13d48:	ldr	r5, [sp, #16]
   13d4c:	ldr	r3, [r4]
   13d50:	sub	r8, r0, r7
   13d54:	add	r4, sp, #24
   13d58:	mov	r0, r4
   13d5c:	mov	r2, r8
   13d60:	mov	r1, r5
   13d64:	bl	18d0 <fread@plt>
   13d68:	add	r6, r0, r6
   13d6c:	cmp	r8, #1
   13d70:	blt	14b00 <ReadUInt8Data+0x1470>
   13d74:	ldr	r0, [sp, #12]
   13d78:	sub	r5, r0, r9
   13d7c:	mov	r0, r4
   13d80:	bl	1c50 <Mat_int16Swap>
   13d84:	strb	r0, [sl, r7]
   13d88:	add	sl, sl, #1
   13d8c:	subs	r5, r5, #1
   13d90:	add	r4, r4, #2
   13d94:	bne	13d7c <ReadUInt8Data+0x6ec>
   13d98:	b	14afc <ReadUInt8Data+0x146c>
   13d9c:	sub	r0, r5, #256	; 0x100
   13da0:	str	r5, [sp, #8]
   13da4:	mov	r7, #0
   13da8:	mov	r5, sl
   13dac:	mov	r6, #0
   13db0:	str	r0, [sp, #12]
   13db4:	ldr	r3, [r4]
   13db8:	ldr	r1, [sp, #16]
   13dbc:	mov	r9, r7
   13dc0:	add	r7, sp, #24
   13dc4:	mov	r2, #256	; 0x100
   13dc8:	mov	r0, r7
   13dcc:	bl	18d0 <fread@plt>
   13dd0:	mov	r8, r0
   13dd4:	mov	r4, #0
   13dd8:	mov	r0, r7
   13ddc:	bl	1c64 <Mat_uint16Swap>
   13de0:	strb	r0, [r5, r4]
   13de4:	add	r4, r4, #1
   13de8:	add	r7, r7, #2
   13dec:	cmp	r4, #256	; 0x100
   13df0:	bne	13dd8 <ReadUInt8Data+0x748>
   13df4:	ldr	r0, [sp, #12]
   13df8:	ldr	r4, [sp, #20]
   13dfc:	add	r7, r9, #256	; 0x100
   13e00:	add	r6, r8, r6
   13e04:	add	r5, r5, #256	; 0x100
   13e08:	cmp	r7, r0
   13e0c:	blt	13db4 <ReadUInt8Data+0x724>
   13e10:	ldr	r0, [sp, #8]
   13e14:	cmp	r7, r0
   13e18:	bge	14afc <ReadUInt8Data+0x146c>
   13e1c:	ldr	r5, [sp, #16]
   13e20:	ldr	r3, [r4]
   13e24:	sub	r8, r0, r7
   13e28:	add	r4, sp, #24
   13e2c:	mov	r0, r4
   13e30:	mov	r2, r8
   13e34:	mov	r1, r5
   13e38:	bl	18d0 <fread@plt>
   13e3c:	add	r6, r0, r6
   13e40:	cmp	r8, #1
   13e44:	blt	14b00 <ReadUInt8Data+0x1470>
   13e48:	ldr	r0, [sp, #12]
   13e4c:	sub	r5, r0, r9
   13e50:	mov	r0, r4
   13e54:	bl	1c64 <Mat_uint16Swap>
   13e58:	strb	r0, [sl, r7]
   13e5c:	add	sl, sl, #1
   13e60:	subs	r5, r5, #1
   13e64:	add	r4, r4, #2
   13e68:	bne	13e50 <ReadUInt8Data+0x7c0>
   13e6c:	b	14afc <ReadUInt8Data+0x146c>
   13e70:	sub	r0, r5, #256	; 0x100
   13e74:	str	r5, [sp, #8]
   13e78:	mov	r7, #0
   13e7c:	mov	r5, sl
   13e80:	mov	r6, #0
   13e84:	str	r0, [sp, #12]
   13e88:	ldr	r3, [r4]
   13e8c:	ldr	r1, [sp, #16]
   13e90:	mov	r9, r7
   13e94:	add	r7, sp, #24
   13e98:	mov	r2, #256	; 0x100
   13e9c:	mov	r0, r7
   13ea0:	bl	18d0 <fread@plt>
   13ea4:	mov	r8, r0
   13ea8:	mov	r4, #0
   13eac:	mov	r0, r7
   13eb0:	bl	1c28 <Mat_int32Swap>
   13eb4:	strb	r0, [r5, r4]
   13eb8:	add	r4, r4, #1
   13ebc:	add	r7, r7, #4
   13ec0:	cmp	r4, #256	; 0x100
   13ec4:	bne	13eac <ReadUInt8Data+0x81c>
   13ec8:	ldr	r0, [sp, #12]
   13ecc:	ldr	r4, [sp, #20]
   13ed0:	add	r7, r9, #256	; 0x100
   13ed4:	add	r6, r8, r6
   13ed8:	add	r5, r5, #256	; 0x100
   13edc:	cmp	r7, r0
   13ee0:	blt	13e88 <ReadUInt8Data+0x7f8>
   13ee4:	ldr	r0, [sp, #8]
   13ee8:	cmp	r7, r0
   13eec:	bge	14afc <ReadUInt8Data+0x146c>
   13ef0:	ldr	r5, [sp, #16]
   13ef4:	ldr	r3, [r4]
   13ef8:	sub	r8, r0, r7
   13efc:	add	r4, sp, #24
   13f00:	mov	r0, r4
   13f04:	mov	r2, r8
   13f08:	mov	r1, r5
   13f0c:	bl	18d0 <fread@plt>
   13f10:	add	r6, r0, r6
   13f14:	cmp	r8, #1
   13f18:	blt	14b00 <ReadUInt8Data+0x1470>
   13f1c:	ldr	r0, [sp, #12]
   13f20:	sub	r5, r0, r9
   13f24:	mov	r0, r4
   13f28:	bl	1c28 <Mat_int32Swap>
   13f2c:	strb	r0, [sl, r7]
   13f30:	add	sl, sl, #1
   13f34:	subs	r5, r5, #1
   13f38:	add	r4, r4, #4
   13f3c:	bne	13f24 <ReadUInt8Data+0x894>
   13f40:	b	14afc <ReadUInt8Data+0x146c>
   13f44:	sub	r0, r5, #256	; 0x100
   13f48:	str	r5, [sp, #8]
   13f4c:	mov	r7, #0
   13f50:	mov	r5, sl
   13f54:	mov	r6, #0
   13f58:	str	r0, [sp, #12]
   13f5c:	ldr	r3, [r4]
   13f60:	ldr	r1, [sp, #16]
   13f64:	mov	r9, r7
   13f68:	add	r7, sp, #24
   13f6c:	mov	r2, #256	; 0x100
   13f70:	mov	r0, r7
   13f74:	bl	18d0 <fread@plt>
   13f78:	mov	r8, r0
   13f7c:	mov	r4, #0
   13f80:	mov	r0, r7
   13f84:	bl	1c3c <Mat_uint32Swap>
   13f88:	strb	r0, [r5, r4]
   13f8c:	add	r4, r4, #1
   13f90:	add	r7, r7, #4
   13f94:	cmp	r4, #256	; 0x100
   13f98:	bne	13f80 <ReadUInt8Data+0x8f0>
   13f9c:	ldr	r0, [sp, #12]
   13fa0:	ldr	r4, [sp, #20]
   13fa4:	add	r7, r9, #256	; 0x100
   13fa8:	add	r6, r8, r6
   13fac:	add	r5, r5, #256	; 0x100
   13fb0:	cmp	r7, r0
   13fb4:	blt	13f5c <ReadUInt8Data+0x8cc>
   13fb8:	ldr	r0, [sp, #8]
   13fbc:	cmp	r7, r0
   13fc0:	bge	14afc <ReadUInt8Data+0x146c>
   13fc4:	ldr	r5, [sp, #16]
   13fc8:	ldr	r3, [r4]
   13fcc:	sub	r8, r0, r7
   13fd0:	add	r4, sp, #24
   13fd4:	mov	r0, r4
   13fd8:	mov	r2, r8
   13fdc:	mov	r1, r5
   13fe0:	bl	18d0 <fread@plt>
   13fe4:	add	r6, r0, r6
   13fe8:	cmp	r8, #1
   13fec:	blt	14b00 <ReadUInt8Data+0x1470>
   13ff0:	ldr	r0, [sp, #12]
   13ff4:	sub	r5, r0, r9
   13ff8:	mov	r0, r4
   13ffc:	bl	1c3c <Mat_uint32Swap>
   14000:	strb	r0, [sl, r7]
   14004:	add	sl, sl, #1
   14008:	subs	r5, r5, #1
   1400c:	add	r4, r4, #4
   14010:	bne	13ff8 <ReadUInt8Data+0x968>
   14014:	b	14afc <ReadUInt8Data+0x146c>
   14018:	sub	r0, r5, #256	; 0x100
   1401c:	str	r5, [sp, #8]
   14020:	mov	r7, #0
   14024:	mov	r5, sl
   14028:	mov	r6, #0
   1402c:	str	r0, [sp, #12]
   14030:	ldr	r3, [r4]
   14034:	ldr	r1, [sp, #16]
   14038:	mov	r9, r7
   1403c:	add	r7, sp, #24
   14040:	mov	r2, #256	; 0x100
   14044:	mov	r0, r7
   14048:	bl	18d0 <fread@plt>
   1404c:	mov	r8, r0
   14050:	mov	r4, #0
   14054:	mov	r0, r7
   14058:	bl	1c7c <Mat_floatSwap>
   1405c:	vcvt.u32.f32	s0, s0
   14060:	add	r7, r7, #4
   14064:	vmov	r0, s0
   14068:	strb	r0, [r5, r4]
   1406c:	add	r4, r4, #1
   14070:	cmp	r4, #256	; 0x100
   14074:	bne	14054 <ReadUInt8Data+0x9c4>
   14078:	ldr	r0, [sp, #12]
   1407c:	ldr	r4, [sp, #20]
   14080:	add	r7, r9, #256	; 0x100
   14084:	add	r6, r8, r6
   14088:	add	r5, r5, #256	; 0x100
   1408c:	cmp	r7, r0
   14090:	blt	14030 <ReadUInt8Data+0x9a0>
   14094:	ldr	r0, [sp, #8]
   14098:	cmp	r7, r0
   1409c:	bge	14afc <ReadUInt8Data+0x146c>
   140a0:	ldr	r5, [sp, #16]
   140a4:	ldr	r3, [r4]
   140a8:	sub	r8, r0, r7
   140ac:	add	r4, sp, #24
   140b0:	mov	r0, r4
   140b4:	mov	r2, r8
   140b8:	mov	r1, r5
   140bc:	bl	18d0 <fread@plt>
   140c0:	add	r6, r0, r6
   140c4:	cmp	r8, #1
   140c8:	blt	14b00 <ReadUInt8Data+0x1470>
   140cc:	ldr	r0, [sp, #12]
   140d0:	sub	r5, r0, r9
   140d4:	mov	r0, r4
   140d8:	bl	1c7c <Mat_floatSwap>
   140dc:	vcvt.u32.f32	s0, s0
   140e0:	subs	r5, r5, #1
   140e4:	add	r4, r4, #4
   140e8:	vmov	r0, s0
   140ec:	strb	r0, [sl, r7]
   140f0:	add	sl, sl, #1
   140f4:	bne	140d4 <ReadUInt8Data+0xa44>
   140f8:	b	14afc <ReadUInt8Data+0x146c>
   140fc:	sub	r0, r5, #256	; 0x100
   14100:	str	r5, [sp, #8]
   14104:	mov	r9, #0
   14108:	mov	r5, sl
   1410c:	mov	r6, #0
   14110:	str	r0, [sp, #12]
   14114:	ldr	r3, [r4]
   14118:	ldr	r1, [sp, #16]
   1411c:	add	r7, sp, #24
   14120:	mov	r2, #256	; 0x100
   14124:	mov	r8, r9
   14128:	mov	r0, r7
   1412c:	bl	18d0 <fread@plt>
   14130:	mov	r9, r0
   14134:	mov	r4, #0
   14138:	mov	r0, r7
   1413c:	bl	1cc0 <Mat_doubleSwap>
   14140:	vcvt.u32.f64	s0, d0
   14144:	add	r7, r7, #8
   14148:	vmov	r0, s0
   1414c:	strb	r0, [r5, r4]
   14150:	add	r4, r4, #1
   14154:	cmp	r4, #256	; 0x100
   14158:	bne	14138 <ReadUInt8Data+0xaa8>
   1415c:	ldr	r0, [sp, #12]
   14160:	ldr	r4, [sp, #20]
   14164:	add	r6, r9, r6
   14168:	add	r9, r8, #256	; 0x100
   1416c:	add	r5, r5, #256	; 0x100
   14170:	cmp	r9, r0
   14174:	blt	14114 <ReadUInt8Data+0xa84>
   14178:	ldr	r0, [sp, #8]
   1417c:	cmp	r9, r0
   14180:	bge	14afc <ReadUInt8Data+0x146c>
   14184:	ldr	r5, [sp, #16]
   14188:	ldr	r3, [r4]
   1418c:	sub	r7, r0, r9
   14190:	add	r4, sp, #24
   14194:	mov	r0, r4
   14198:	mov	r2, r7
   1419c:	mov	r1, r5
   141a0:	bl	18d0 <fread@plt>
   141a4:	add	r6, r0, r6
   141a8:	cmp	r7, #1
   141ac:	blt	14b00 <ReadUInt8Data+0x1470>
   141b0:	ldr	r0, [sp, #12]
   141b4:	sub	r5, r0, r8
   141b8:	mov	r0, r4
   141bc:	bl	1cc0 <Mat_doubleSwap>
   141c0:	vcvt.u32.f64	s0, d0
   141c4:	subs	r5, r5, #1
   141c8:	add	r4, r4, #8
   141cc:	vmov	r0, s0
   141d0:	strb	r0, [sl, r9]
   141d4:	add	sl, sl, #1
   141d8:	bne	141b8 <ReadUInt8Data+0xb28>
   141dc:	b	14afc <ReadUInt8Data+0x146c>
   141e0:	sub	r0, r5, #256	; 0x100
   141e4:	str	r5, [sp, #8]
   141e8:	mov	r7, #0
   141ec:	mov	r5, sl
   141f0:	mov	r6, #0
   141f4:	str	r8, [sp, #4]
   141f8:	str	r0, [sp, #12]
   141fc:	ldr	r3, [r4]
   14200:	ldr	r1, [sp, #16]
   14204:	mov	r9, r7
   14208:	add	r7, sp, #24
   1420c:	mov	r2, #256	; 0x100
   14210:	mov	r0, r7
   14214:	bl	18d0 <fread@plt>
   14218:	mov	r8, r0
   1421c:	mov	r4, #0
   14220:	mov	r0, r7
   14224:	bl	1bbc <Mat_int64Swap>
   14228:	strb	r0, [r5, r4]
   1422c:	add	r4, r4, #1
   14230:	add	r7, r7, #8
   14234:	cmp	r4, #256	; 0x100
   14238:	bne	14220 <ReadUInt8Data+0xb90>
   1423c:	ldr	r0, [sp, #12]
   14240:	ldr	r4, [sp, #20]
   14244:	add	r7, r9, #256	; 0x100
   14248:	add	r6, r8, r6
   1424c:	add	r5, r5, #256	; 0x100
   14250:	cmp	r7, r0
   14254:	blt	141fc <ReadUInt8Data+0xb6c>
   14258:	ldr	r5, [sp, #8]
   1425c:	cmp	r7, r5
   14260:	bge	148b8 <ReadUInt8Data+0x1228>
   14264:	mov	r0, r4
   14268:	sub	r4, r5, r7
   1426c:	ldr	r5, [sp, #16]
   14270:	add	r8, sp, #24
   14274:	ldr	r3, [r0]
   14278:	mov	r0, r8
   1427c:	mov	r2, r4
   14280:	mov	r1, r5
   14284:	bl	18d0 <fread@plt>
   14288:	add	r6, r0, r6
   1428c:	cmp	r4, #1
   14290:	blt	148b0 <ReadUInt8Data+0x1220>
   14294:	ldr	r0, [sp, #12]
   14298:	mov	r4, sl
   1429c:	sub	r5, r0, r9
   142a0:	mov	r0, r8
   142a4:	bl	1bbc <Mat_int64Swap>
   142a8:	strb	r0, [r4, r7]
   142ac:	add	r4, r4, #1
   142b0:	subs	r5, r5, #1
   142b4:	add	r8, r8, #8
   142b8:	bne	142a0 <ReadUInt8Data+0xc10>
   142bc:	b	148b0 <ReadUInt8Data+0x1220>
   142c0:	sub	r0, r5, #256	; 0x100
   142c4:	str	r5, [sp, #8]
   142c8:	ldr	r5, [sp, #16]
   142cc:	mov	r7, #0
   142d0:	add	r9, sp, #24
   142d4:	mov	r4, sl
   142d8:	mov	r6, #0
   142dc:	str	r0, [sp, #12]
   142e0:	ldr	r0, [sp, #20]
   142e4:	mov	r1, r5
   142e8:	mov	r2, #256	; 0x100
   142ec:	mov	r8, r7
   142f0:	ldr	r3, [r0]
   142f4:	mov	r0, r9
   142f8:	bl	18d0 <fread@plt>
   142fc:	mov	r1, r9
   14300:	mov	r2, #0
   14304:	vld1.16	{d16-d17}, [r1]!
   14308:	add	r3, r4, r2
   1430c:	add	r2, r2, #8
   14310:	cmp	r2, #256	; 0x100
   14314:	vmovn.i16	d16, q8
   14318:	vst1.8	{d16}, [r3]
   1431c:	bne	14304 <ReadUInt8Data+0xc74>
   14320:	add	r6, r0, r6
   14324:	ldr	r0, [sp, #12]
   14328:	add	r7, r8, #256	; 0x100
   1432c:	add	r4, r4, #256	; 0x100
   14330:	cmp	r7, r0
   14334:	blt	142e0 <ReadUInt8Data+0xc50>
   14338:	ldr	r0, [sp, #8]
   1433c:	cmp	r7, r0
   14340:	bge	14b00 <ReadUInt8Data+0x1470>
   14344:	sub	r9, r0, r7
   14348:	ldr	r0, [sp, #20]
   1434c:	add	r4, sp, #24
   14350:	mov	r1, r5
   14354:	mov	r2, r9
   14358:	ldr	r3, [r0]
   1435c:	mov	r0, r4
   14360:	bl	18d0 <fread@plt>
   14364:	add	r6, r0, r6
   14368:	cmp	r9, #1
   1436c:	blt	14b00 <ReadUInt8Data+0x1470>
   14370:	ldr	r0, [sp, #12]
   14374:	sub	r0, r0, r8
   14378:	ldrb	r1, [r4], #2
   1437c:	subs	r0, r0, #1
   14380:	strb	r1, [sl, r7]
   14384:	add	sl, sl, #1
   14388:	bne	14378 <ReadUInt8Data+0xce8>
   1438c:	b	14b00 <ReadUInt8Data+0x1470>
   14390:	sub	r0, r5, #256	; 0x100
   14394:	str	r5, [sp, #8]
   14398:	ldr	r5, [sp, #16]
   1439c:	mov	r7, #0
   143a0:	add	r9, sp, #24
   143a4:	mov	r4, sl
   143a8:	mov	r6, #0
   143ac:	str	r0, [sp, #12]
   143b0:	ldr	r0, [sp, #20]
   143b4:	mov	r1, r5
   143b8:	mov	r2, #256	; 0x100
   143bc:	mov	r8, r7
   143c0:	ldr	r3, [r0]
   143c4:	mov	r0, r9
   143c8:	bl	18d0 <fread@plt>
   143cc:	mov	r1, r9
   143d0:	mov	r2, #0
   143d4:	vld1.16	{d16-d17}, [r1]!
   143d8:	add	r3, r4, r2
   143dc:	add	r2, r2, #8
   143e0:	cmp	r2, #256	; 0x100
   143e4:	vmovn.i16	d16, q8
   143e8:	vst1.8	{d16}, [r3]
   143ec:	bne	143d4 <ReadUInt8Data+0xd44>
   143f0:	add	r6, r0, r6
   143f4:	ldr	r0, [sp, #12]
   143f8:	add	r7, r8, #256	; 0x100
   143fc:	add	r4, r4, #256	; 0x100
   14400:	cmp	r7, r0
   14404:	blt	143b0 <ReadUInt8Data+0xd20>
   14408:	ldr	r0, [sp, #8]
   1440c:	cmp	r7, r0
   14410:	bge	14b00 <ReadUInt8Data+0x1470>
   14414:	sub	r9, r0, r7
   14418:	ldr	r0, [sp, #20]
   1441c:	add	r4, sp, #24
   14420:	mov	r1, r5
   14424:	mov	r2, r9
   14428:	ldr	r3, [r0]
   1442c:	mov	r0, r4
   14430:	bl	18d0 <fread@plt>
   14434:	add	r6, r0, r6
   14438:	cmp	r9, #1
   1443c:	blt	14b00 <ReadUInt8Data+0x1470>
   14440:	ldr	r0, [sp, #12]
   14444:	sub	r0, r0, r8
   14448:	ldrb	r1, [r4], #2
   1444c:	subs	r0, r0, #1
   14450:	strb	r1, [sl, r7]
   14454:	add	sl, sl, #1
   14458:	bne	14448 <ReadUInt8Data+0xdb8>
   1445c:	b	14b00 <ReadUInt8Data+0x1470>
   14460:	sub	r0, r5, #256	; 0x100
   14464:	str	r5, [sp, #8]
   14468:	ldr	r5, [sp, #16]
   1446c:	mov	r7, #0
   14470:	add	r9, sp, #24
   14474:	mov	r4, sl
   14478:	mov	r6, #0
   1447c:	str	r0, [sp, #12]
   14480:	ldr	r0, [sp, #20]
   14484:	mov	r1, r5
   14488:	mov	r2, #256	; 0x100
   1448c:	mov	r8, r7
   14490:	ldr	r3, [r0]
   14494:	mov	r0, r9
   14498:	bl	18d0 <fread@plt>
   1449c:	mov	r1, r9
   144a0:	mov	r2, #0
   144a4:	vld1.32	{d16-d17}, [r1]!
   144a8:	add	r3, r4, r2
   144ac:	add	r2, r2, #4
   144b0:	cmp	r2, #256	; 0x100
   144b4:	vmovn.i32	d16, q8
   144b8:	vuzp.8	d16, d17
   144bc:	vst1.32	{d16[0]}, [r3]
   144c0:	bne	144a4 <ReadUInt8Data+0xe14>
   144c4:	add	r6, r0, r6
   144c8:	ldr	r0, [sp, #12]
   144cc:	add	r7, r8, #256	; 0x100
   144d0:	add	r4, r4, #256	; 0x100
   144d4:	cmp	r7, r0
   144d8:	blt	14480 <ReadUInt8Data+0xdf0>
   144dc:	ldr	r0, [sp, #8]
   144e0:	cmp	r7, r0
   144e4:	bge	14b00 <ReadUInt8Data+0x1470>
   144e8:	sub	r9, r0, r7
   144ec:	ldr	r0, [sp, #20]
   144f0:	add	r4, sp, #24
   144f4:	mov	r1, r5
   144f8:	mov	r2, r9
   144fc:	ldr	r3, [r0]
   14500:	mov	r0, r4
   14504:	bl	18d0 <fread@plt>
   14508:	add	r6, r0, r6
   1450c:	cmp	r9, #1
   14510:	blt	14b00 <ReadUInt8Data+0x1470>
   14514:	ldr	r0, [sp, #12]
   14518:	sub	r0, r0, r8
   1451c:	ldr	r1, [r4], #4
   14520:	subs	r0, r0, #1
   14524:	strb	r1, [sl, r7]
   14528:	add	sl, sl, #1
   1452c:	bne	1451c <ReadUInt8Data+0xe8c>
   14530:	b	14b00 <ReadUInt8Data+0x1470>
   14534:	sub	r0, r5, #256	; 0x100
   14538:	str	r5, [sp, #8]
   1453c:	ldr	r5, [sp, #16]
   14540:	mov	r7, #0
   14544:	add	r9, sp, #24
   14548:	mov	r4, sl
   1454c:	mov	r6, #0
   14550:	str	r0, [sp, #12]
   14554:	ldr	r0, [sp, #20]
   14558:	mov	r1, r5
   1455c:	mov	r2, #256	; 0x100
   14560:	mov	r8, r7
   14564:	ldr	r3, [r0]
   14568:	mov	r0, r9
   1456c:	bl	18d0 <fread@plt>
   14570:	mov	r1, r9
   14574:	mov	r2, #0
   14578:	vld1.32	{d16-d17}, [r1]!
   1457c:	add	r3, r4, r2
   14580:	add	r2, r2, #4
   14584:	cmp	r2, #256	; 0x100
   14588:	vmovn.i32	d16, q8
   1458c:	vuzp.8	d16, d17
   14590:	vst1.32	{d16[0]}, [r3]
   14594:	bne	14578 <ReadUInt8Data+0xee8>
   14598:	add	r6, r0, r6
   1459c:	ldr	r0, [sp, #12]
   145a0:	add	r7, r8, #256	; 0x100
   145a4:	add	r4, r4, #256	; 0x100
   145a8:	cmp	r7, r0
   145ac:	blt	14554 <ReadUInt8Data+0xec4>
   145b0:	ldr	r0, [sp, #8]
   145b4:	cmp	r7, r0
   145b8:	bge	14b00 <ReadUInt8Data+0x1470>
   145bc:	sub	r9, r0, r7
   145c0:	ldr	r0, [sp, #20]
   145c4:	add	r4, sp, #24
   145c8:	mov	r1, r5
   145cc:	mov	r2, r9
   145d0:	ldr	r3, [r0]
   145d4:	mov	r0, r4
   145d8:	bl	18d0 <fread@plt>
   145dc:	add	r6, r0, r6
   145e0:	cmp	r9, #1
   145e4:	blt	14b00 <ReadUInt8Data+0x1470>
   145e8:	ldr	r0, [sp, #12]
   145ec:	sub	r0, r0, r8
   145f0:	ldr	r1, [r4], #4
   145f4:	subs	r0, r0, #1
   145f8:	strb	r1, [sl, r7]
   145fc:	add	sl, sl, #1
   14600:	bne	145f0 <ReadUInt8Data+0xf60>
   14604:	b	14b00 <ReadUInt8Data+0x1470>
   14608:	sub	r0, r5, #256	; 0x100
   1460c:	str	r5, [sp, #8]
   14610:	ldr	r5, [sp, #16]
   14614:	mov	r7, #0
   14618:	add	r9, sp, #24
   1461c:	mov	r4, sl
   14620:	mov	r6, #0
   14624:	str	r0, [sp, #12]
   14628:	ldr	r0, [sp, #20]
   1462c:	mov	r1, r5
   14630:	mov	r2, #256	; 0x100
   14634:	mov	r8, r7
   14638:	ldr	r3, [r0]
   1463c:	mov	r0, r9
   14640:	bl	18d0 <fread@plt>
   14644:	mov	r1, r9
   14648:	mov	r2, #0
   1464c:	vld1.32	{d16-d17}, [r1]!
   14650:	add	r3, r4, r2
   14654:	add	r2, r2, #4
   14658:	cmp	r2, #256	; 0x100
   1465c:	vcvt.s32.f32	q8, q8
   14660:	vmovn.i32	d16, q8
   14664:	vuzp.8	d16, d17
   14668:	vst1.32	{d16[0]}, [r3]
   1466c:	bne	1464c <ReadUInt8Data+0xfbc>
   14670:	add	r6, r0, r6
   14674:	ldr	r0, [sp, #12]
   14678:	add	r7, r8, #256	; 0x100
   1467c:	add	r4, r4, #256	; 0x100
   14680:	cmp	r7, r0
   14684:	blt	14628 <ReadUInt8Data+0xf98>
   14688:	ldr	r0, [sp, #8]
   1468c:	cmp	r7, r0
   14690:	bge	14b00 <ReadUInt8Data+0x1470>
   14694:	sub	r9, r0, r7
   14698:	ldr	r0, [sp, #20]
   1469c:	add	r4, sp, #24
   146a0:	mov	r1, r5
   146a4:	mov	r2, r9
   146a8:	ldr	r3, [r0]
   146ac:	mov	r0, r4
   146b0:	bl	18d0 <fread@plt>
   146b4:	add	r6, r0, r6
   146b8:	cmp	r9, #1
   146bc:	blt	14b00 <ReadUInt8Data+0x1470>
   146c0:	ldr	r0, [sp, #12]
   146c4:	sub	r0, r0, r8
   146c8:	vldr	s0, [r4]
   146cc:	subs	r0, r0, #1
   146d0:	add	r4, r4, #4
   146d4:	vcvt.u32.f32	s0, s0
   146d8:	vmov	r1, s0
   146dc:	strb	r1, [sl, r7]
   146e0:	add	sl, sl, #1
   146e4:	bne	146c8 <ReadUInt8Data+0x1038>
   146e8:	b	14b00 <ReadUInt8Data+0x1470>
   146ec:	sub	r0, r5, #256	; 0x100
   146f0:	str	r5, [sp, #8]
   146f4:	ldr	r5, [sp, #16]
   146f8:	mov	r7, #0
   146fc:	add	r9, sp, #24
   14700:	mov	r4, sl
   14704:	mov	r6, #0
   14708:	str	r0, [sp, #12]
   1470c:	ldr	r0, [sp, #20]
   14710:	mov	r1, r5
   14714:	mov	r2, #256	; 0x100
   14718:	mov	r8, r7
   1471c:	ldr	r3, [r0]
   14720:	mov	r0, r9
   14724:	bl	18d0 <fread@plt>
   14728:	mov	r1, r9
   1472c:	mov	r2, #0
   14730:	vldr	d16, [r1]
   14734:	add	r1, r1, #8
   14738:	vcvt.u32.f64	s0, d16
   1473c:	vmov	r3, s0
   14740:	strb	r3, [r4, r2]
   14744:	add	r2, r2, #1
   14748:	cmp	r2, #256	; 0x100
   1474c:	bne	14730 <ReadUInt8Data+0x10a0>
   14750:	add	r6, r0, r6
   14754:	ldr	r0, [sp, #12]
   14758:	add	r7, r8, #256	; 0x100
   1475c:	add	r4, r4, #256	; 0x100
   14760:	cmp	r7, r0
   14764:	blt	1470c <ReadUInt8Data+0x107c>
   14768:	ldr	r0, [sp, #8]
   1476c:	cmp	r7, r0
   14770:	bge	14b00 <ReadUInt8Data+0x1470>
   14774:	sub	r9, r0, r7
   14778:	ldr	r0, [sp, #20]
   1477c:	add	r4, sp, #24
   14780:	mov	r1, r5
   14784:	mov	r2, r9
   14788:	ldr	r3, [r0]
   1478c:	mov	r0, r4
   14790:	bl	18d0 <fread@plt>
   14794:	add	r6, r0, r6
   14798:	cmp	r9, #1
   1479c:	blt	14b00 <ReadUInt8Data+0x1470>
   147a0:	ldr	r0, [sp, #12]
   147a4:	sub	r0, r0, r8
   147a8:	vldr	d16, [r4]
   147ac:	subs	r0, r0, #1
   147b0:	add	r4, r4, #8
   147b4:	vcvt.u32.f64	s0, d16
   147b8:	vmov	r1, s0
   147bc:	strb	r1, [sl, r7]
   147c0:	add	sl, sl, #1
   147c4:	bne	147a8 <ReadUInt8Data+0x1118>
   147c8:	b	14b00 <ReadUInt8Data+0x1470>
   147cc:	ldr	r1, [sp, #16]
   147d0:	sub	r0, r5, #256	; 0x100
   147d4:	mov	r7, #0
   147d8:	mov	r4, sl
   147dc:	mov	r6, #0
   147e0:	str	r8, [sp, #4]
   147e4:	str	r5, [sp, #8]
   147e8:	str	r0, [sp, #12]
   147ec:	ldr	r0, [sp, #20]
   147f0:	add	r5, sp, #24
   147f4:	mov	r2, #256	; 0x100
   147f8:	mov	r8, r7
   147fc:	mov	r9, r1
   14800:	ldr	r3, [r0]
   14804:	mov	r0, r5
   14808:	bl	18d0 <fread@plt>
   1480c:	mov	r1, r5
   14810:	mov	r2, #0
   14814:	vld1.64	{d16-d17}, [r1]!
   14818:	mov	r5, r4
   1481c:	vmovn.i64	d16, q8
   14820:	vmov.32	r3, d16[0]
   14824:	strb	r3, [r5, r2]!
   14828:	add	r2, r2, #2
   1482c:	vmov.32	r3, d16[1]
   14830:	cmp	r2, #256	; 0x100
   14834:	strb	r3, [r5, #1]
   14838:	bne	14814 <ReadUInt8Data+0x1184>
   1483c:	add	r6, r0, r6
   14840:	ldr	r0, [sp, #12]
   14844:	add	r7, r8, #256	; 0x100
   14848:	add	r4, r4, #256	; 0x100
   1484c:	mov	r1, r9
   14850:	cmp	r7, r0
   14854:	blt	147ec <ReadUInt8Data+0x115c>
   14858:	ldr	r5, [sp, #8]
   1485c:	cmp	r7, r5
   14860:	bge	148b4 <ReadUInt8Data+0x1224>
   14864:	ldr	r0, [sp, #20]
   14868:	ldr	r1, [sp, #16]
   1486c:	sub	r5, r5, r7
   14870:	add	r4, sp, #24
   14874:	mov	r2, r5
   14878:	ldr	r3, [r0]
   1487c:	mov	r0, r4
   14880:	bl	18d0 <fread@plt>
   14884:	add	r6, r0, r6
   14888:	cmp	r5, #1
   1488c:	blt	148b0 <ReadUInt8Data+0x1220>
   14890:	ldr	r0, [sp, #12]
   14894:	mov	r1, sl
   14898:	sub	r0, r0, r8
   1489c:	ldrb	r2, [r4], #8
   148a0:	subs	r0, r0, #1
   148a4:	strb	r2, [r1, r7]
   148a8:	add	r1, r1, #1
   148ac:	bne	1489c <ReadUInt8Data+0x120c>
   148b0:	ldr	r5, [sp, #8]
   148b4:	ldr	r4, [sp, #20]
   148b8:	ldr	r8, [sp, #4]
   148bc:	cmp	r8, #13
   148c0:	bne	14afc <ReadUInt8Data+0x146c>
   148c4:	ldr	r0, [r4, #20]
   148c8:	cmp	r0, #0
   148cc:	beq	14918 <ReadUInt8Data+0x1288>
   148d0:	cmp	r5, #256	; 0x100
   148d4:	bgt	14958 <ReadUInt8Data+0x12c8>
   148d8:	ldr	r3, [r4]
   148dc:	ldr	r1, [sp, #16]
   148e0:	add	r4, sp, #24
   148e4:	mov	r2, r5
   148e8:	mov	r0, r4
   148ec:	bl	18d0 <fread@plt>
   148f0:	add	r6, r0, r6
   148f4:	cmp	r5, #1
   148f8:	blt	14afc <ReadUInt8Data+0x146c>
   148fc:	mov	r0, r4
   14900:	bl	1c0c <Mat_uint64Swap>
   14904:	strb	r0, [sl], #1
   14908:	subs	r5, r5, #1
   1490c:	add	r4, r4, #8
   14910:	bne	148fc <ReadUInt8Data+0x126c>
   14914:	b	14afc <ReadUInt8Data+0x146c>
   14918:	cmp	r5, #256	; 0x100
   1491c:	bgt	14a28 <ReadUInt8Data+0x1398>
   14920:	ldr	r3, [r4]
   14924:	ldr	r1, [sp, #16]
   14928:	add	r4, sp, #24
   1492c:	mov	r2, r5
   14930:	mov	r0, r4
   14934:	bl	18d0 <fread@plt>
   14938:	add	r6, r0, r6
   1493c:	cmp	r5, #1
   14940:	blt	14afc <ReadUInt8Data+0x146c>
   14944:	ldrb	r0, [r4], #8
   14948:	subs	r5, r5, #1
   1494c:	strb	r0, [sl], #1
   14950:	bne	14944 <ReadUInt8Data+0x12b4>
   14954:	b	14afc <ReadUInt8Data+0x146c>
   14958:	sub	r0, r5, #256	; 0x100
   1495c:	str	r5, [sp, #8]
   14960:	mov	r7, #0
   14964:	mov	r5, sl
   14968:	str	r0, [sp, #12]
   1496c:	ldr	r3, [r4]
   14970:	ldr	r1, [sp, #16]
   14974:	mov	r9, r7
   14978:	add	r7, sp, #24
   1497c:	mov	r2, #256	; 0x100
   14980:	mov	r0, r7
   14984:	bl	18d0 <fread@plt>
   14988:	mov	r8, r0
   1498c:	mov	r4, #0
   14990:	mov	r0, r7
   14994:	bl	1c0c <Mat_uint64Swap>
   14998:	strb	r0, [r5, r4]
   1499c:	add	r4, r4, #1
   149a0:	add	r7, r7, #8
   149a4:	cmp	r4, #256	; 0x100
   149a8:	bne	14990 <ReadUInt8Data+0x1300>
   149ac:	ldr	r0, [sp, #12]
   149b0:	ldr	r4, [sp, #20]
   149b4:	add	r7, r9, #256	; 0x100
   149b8:	add	r6, r8, r6
   149bc:	add	r5, r5, #256	; 0x100
   149c0:	cmp	r7, r0
   149c4:	blt	1496c <ReadUInt8Data+0x12dc>
   149c8:	ldr	r0, [sp, #8]
   149cc:	cmp	r7, r0
   149d0:	bge	14afc <ReadUInt8Data+0x146c>
   149d4:	ldr	r5, [sp, #16]
   149d8:	ldr	r3, [r4]
   149dc:	sub	r8, r0, r7
   149e0:	add	r4, sp, #24
   149e4:	mov	r0, r4
   149e8:	mov	r2, r8
   149ec:	mov	r1, r5
   149f0:	bl	18d0 <fread@plt>
   149f4:	add	r6, r0, r6
   149f8:	cmp	r8, #1
   149fc:	blt	14b00 <ReadUInt8Data+0x1470>
   14a00:	ldr	r0, [sp, #12]
   14a04:	sub	r5, r0, r9
   14a08:	mov	r0, r4
   14a0c:	bl	1c0c <Mat_uint64Swap>
   14a10:	strb	r0, [sl, r7]
   14a14:	add	sl, sl, #1
   14a18:	subs	r5, r5, #1
   14a1c:	add	r4, r4, #8
   14a20:	bne	14a08 <ReadUInt8Data+0x1378>
   14a24:	b	14afc <ReadUInt8Data+0x146c>
   14a28:	sub	r0, r5, #256	; 0x100
   14a2c:	str	r5, [sp, #8]
   14a30:	mov	r7, #0
   14a34:	add	r9, sp, #24
   14a38:	mov	r5, sl
   14a3c:	str	r0, [sp, #12]
   14a40:	ldr	r3, [r4]
   14a44:	ldr	r1, [sp, #16]
   14a48:	mov	r0, r9
   14a4c:	mov	r2, #256	; 0x100
   14a50:	mov	r8, r7
   14a54:	bl	18d0 <fread@plt>
   14a58:	mov	r1, r9
   14a5c:	mov	r2, #0
   14a60:	vld1.64	{d16-d17}, [r1]!
   14a64:	mov	r4, r5
   14a68:	vmovn.i64	d16, q8
   14a6c:	vmov.32	r3, d16[0]
   14a70:	strb	r3, [r4, r2]!
   14a74:	add	r2, r2, #2
   14a78:	vmov.32	r3, d16[1]
   14a7c:	cmp	r2, #256	; 0x100
   14a80:	strb	r3, [r4, #1]
   14a84:	bne	14a60 <ReadUInt8Data+0x13d0>
   14a88:	add	r6, r0, r6
   14a8c:	ldr	r0, [sp, #12]
   14a90:	ldr	r4, [sp, #20]
   14a94:	add	r7, r8, #256	; 0x100
   14a98:	add	r5, r5, #256	; 0x100
   14a9c:	cmp	r7, r0
   14aa0:	blt	14a40 <ReadUInt8Data+0x13b0>
   14aa4:	ldr	r0, [sp, #8]
   14aa8:	cmp	r7, r0
   14aac:	bge	14afc <ReadUInt8Data+0x146c>
   14ab0:	ldr	r5, [sp, #16]
   14ab4:	ldr	r3, [r4]
   14ab8:	sub	r9, r0, r7
   14abc:	add	r4, sp, #24
   14ac0:	mov	r0, r4
   14ac4:	mov	r2, r9
   14ac8:	mov	r1, r5
   14acc:	bl	18d0 <fread@plt>
   14ad0:	add	r6, r0, r6
   14ad4:	cmp	r9, #1
   14ad8:	blt	14b00 <ReadUInt8Data+0x1470>
   14adc:	ldr	r0, [sp, #12]
   14ae0:	sub	r0, r0, r8
   14ae4:	ldrb	r1, [r4], #8
   14ae8:	subs	r0, r0, #1
   14aec:	strb	r1, [sl, r7]
   14af0:	add	sl, sl, #1
   14af4:	bne	14ae4 <ReadUInt8Data+0x1454>
   14af8:	b	14b00 <ReadUInt8Data+0x1470>
   14afc:	ldr	r5, [sp, #16]
   14b00:	mul	r0, r6, r5
   14b04:	sub	sp, fp, #28
   14b08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00014b0c <ReadCompressedUInt8Data>:
   14b0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14b10:	add	fp, sp, #28
   14b14:	sub	sp, sp, #12
   14b18:	mov	r7, r0
   14b1c:	mov	r0, #0
   14b20:	cmp	r1, #0
   14b24:	beq	1502c <ReadCompressedUInt8Data+0x520>
   14b28:	cmp	r7, #0
   14b2c:	movne	r5, r2
   14b30:	cmpne	r2, #0
   14b34:	beq	1502c <ReadCompressedUInt8Data+0x520>
   14b38:	ldr	sl, [fp, #8]
   14b3c:	mov	r0, r3
   14b40:	mov	r4, r3
   14b44:	mov	r6, r1
   14b48:	bl	193c <Mat_SizeOf@plt>
   14b4c:	mov	r9, r0
   14b50:	sub	r0, r4, #1
   14b54:	cmp	r0, #12
   14b58:	bhi	15028 <ReadCompressedUInt8Data+0x51c>
   14b5c:	add	r1, pc, #4
   14b60:	ldr	r0, [r1, r0, lsl #2]
   14b64:	add	pc, r1, r0
   14b68:	.word	0x00000034
   14b6c:	.word	0x0000006c
   14b70:	.word	0x000000a4
   14b74:	.word	0x000000ec
   14b78:	.word	0x00000134
   14b7c:	.word	0x0000017c
   14b80:	.word	0x000001c4
   14b84:	.word	0x000004c0
   14b88:	.word	0x00000214
   14b8c:	.word	0x000004c0
   14b90:	.word	0x000004c0
   14b94:	.word	0x00000264
   14b98:	.word	0x000002ac
   14b9c:	cmp	sl, #1
   14ba0:	blt	15028 <ReadCompressedUInt8Data+0x51c>
   14ba4:	mov	r8, sp
   14ba8:	mov	r4, sl
   14bac:	mov	r0, r7
   14bb0:	mov	r1, r6
   14bb4:	mov	r2, r8
   14bb8:	mov	r3, r9
   14bbc:	bl	31f0 <InflateData>
   14bc0:	ldrb	r0, [sp]
   14bc4:	subs	r4, r4, #1
   14bc8:	strb	r0, [r5], #1
   14bcc:	bne	14bac <ReadCompressedUInt8Data+0xa0>
   14bd0:	b	15028 <ReadCompressedUInt8Data+0x51c>
   14bd4:	cmp	sl, #1
   14bd8:	blt	15028 <ReadCompressedUInt8Data+0x51c>
   14bdc:	mov	r8, sp
   14be0:	mov	r4, sl
   14be4:	mov	r0, r7
   14be8:	mov	r1, r6
   14bec:	mov	r2, r8
   14bf0:	mov	r3, r9
   14bf4:	bl	31f0 <InflateData>
   14bf8:	ldrb	r0, [sp]
   14bfc:	subs	r4, r4, #1
   14c00:	strb	r0, [r5], #1
   14c04:	bne	14be4 <ReadCompressedUInt8Data+0xd8>
   14c08:	b	15028 <ReadCompressedUInt8Data+0x51c>
   14c0c:	ldr	r0, [r7, #20]
   14c10:	cmp	r0, #0
   14c14:	beq	14e5c <ReadCompressedUInt8Data+0x350>
   14c18:	cmp	sl, #1
   14c1c:	blt	15028 <ReadCompressedUInt8Data+0x51c>
   14c20:	mov	r8, sp
   14c24:	mov	r4, sl
   14c28:	mov	r0, r7
   14c2c:	mov	r1, r6
   14c30:	mov	r2, r8
   14c34:	mov	r3, r9
   14c38:	bl	31f0 <InflateData>
   14c3c:	mov	r0, r8
   14c40:	bl	1c50 <Mat_int16Swap>
   14c44:	strb	r0, [r5], #1
   14c48:	subs	r4, r4, #1
   14c4c:	bne	14c28 <ReadCompressedUInt8Data+0x11c>
   14c50:	b	15028 <ReadCompressedUInt8Data+0x51c>
   14c54:	ldr	r0, [r7, #20]
   14c58:	cmp	r0, #0
   14c5c:	beq	14e94 <ReadCompressedUInt8Data+0x388>
   14c60:	cmp	sl, #1
   14c64:	blt	15028 <ReadCompressedUInt8Data+0x51c>
   14c68:	mov	r8, sp
   14c6c:	mov	r4, sl
   14c70:	mov	r0, r7
   14c74:	mov	r1, r6
   14c78:	mov	r2, r8
   14c7c:	mov	r3, r9
   14c80:	bl	31f0 <InflateData>
   14c84:	mov	r0, r8
   14c88:	bl	1c64 <Mat_uint16Swap>
   14c8c:	strb	r0, [r5], #1
   14c90:	subs	r4, r4, #1
   14c94:	bne	14c70 <ReadCompressedUInt8Data+0x164>
   14c98:	b	15028 <ReadCompressedUInt8Data+0x51c>
   14c9c:	ldr	r0, [r7, #20]
   14ca0:	cmp	r0, #0
   14ca4:	beq	14ecc <ReadCompressedUInt8Data+0x3c0>
   14ca8:	cmp	sl, #1
   14cac:	blt	15028 <ReadCompressedUInt8Data+0x51c>
   14cb0:	mov	r8, sp
   14cb4:	mov	r4, sl
   14cb8:	mov	r0, r7
   14cbc:	mov	r1, r6
   14cc0:	mov	r2, r8
   14cc4:	mov	r3, r9
   14cc8:	bl	31f0 <InflateData>
   14ccc:	mov	r0, r8
   14cd0:	bl	1c28 <Mat_int32Swap>
   14cd4:	strb	r0, [r5], #1
   14cd8:	subs	r4, r4, #1
   14cdc:	bne	14cb8 <ReadCompressedUInt8Data+0x1ac>
   14ce0:	b	15028 <ReadCompressedUInt8Data+0x51c>
   14ce4:	ldr	r0, [r7, #20]
   14ce8:	cmp	r0, #0
   14cec:	beq	14f04 <ReadCompressedUInt8Data+0x3f8>
   14cf0:	cmp	sl, #1
   14cf4:	blt	15028 <ReadCompressedUInt8Data+0x51c>
   14cf8:	mov	r8, sp
   14cfc:	mov	r4, sl
   14d00:	mov	r0, r7
   14d04:	mov	r1, r6
   14d08:	mov	r2, r8
   14d0c:	mov	r3, r9
   14d10:	bl	31f0 <InflateData>
   14d14:	mov	r0, r8
   14d18:	bl	1c3c <Mat_uint32Swap>
   14d1c:	strb	r0, [r5], #1
   14d20:	subs	r4, r4, #1
   14d24:	bne	14d00 <ReadCompressedUInt8Data+0x1f4>
   14d28:	b	15028 <ReadCompressedUInt8Data+0x51c>
   14d2c:	ldr	r0, [r7, #20]
   14d30:	cmp	r0, #0
   14d34:	beq	14f3c <ReadCompressedUInt8Data+0x430>
   14d38:	cmp	sl, #1
   14d3c:	blt	15028 <ReadCompressedUInt8Data+0x51c>
   14d40:	mov	r8, sp
   14d44:	mov	r4, sl
   14d48:	mov	r0, r7
   14d4c:	mov	r1, r6
   14d50:	mov	r2, r8
   14d54:	mov	r3, r9
   14d58:	bl	31f0 <InflateData>
   14d5c:	mov	r0, r8
   14d60:	bl	1c7c <Mat_floatSwap>
   14d64:	vcvt.u32.f32	s0, s0
   14d68:	subs	r4, r4, #1
   14d6c:	vmov	r0, s0
   14d70:	strb	r0, [r5], #1
   14d74:	bne	14d48 <ReadCompressedUInt8Data+0x23c>
   14d78:	b	15028 <ReadCompressedUInt8Data+0x51c>
   14d7c:	ldr	r0, [r7, #20]
   14d80:	cmp	r0, #0
   14d84:	beq	14f7c <ReadCompressedUInt8Data+0x470>
   14d88:	cmp	sl, #1
   14d8c:	blt	15028 <ReadCompressedUInt8Data+0x51c>
   14d90:	mov	r8, sp
   14d94:	mov	r4, sl
   14d98:	mov	r0, r7
   14d9c:	mov	r1, r6
   14da0:	mov	r2, r8
   14da4:	mov	r3, r9
   14da8:	bl	31f0 <InflateData>
   14dac:	mov	r0, r8
   14db0:	bl	1cc0 <Mat_doubleSwap>
   14db4:	vcvt.u32.f64	s0, d0
   14db8:	subs	r4, r4, #1
   14dbc:	vmov	r0, s0
   14dc0:	strb	r0, [r5], #1
   14dc4:	bne	14d98 <ReadCompressedUInt8Data+0x28c>
   14dc8:	b	15028 <ReadCompressedUInt8Data+0x51c>
   14dcc:	ldr	r0, [r7, #20]
   14dd0:	cmp	r0, #0
   14dd4:	beq	14fbc <ReadCompressedUInt8Data+0x4b0>
   14dd8:	cmp	sl, #1
   14ddc:	blt	15028 <ReadCompressedUInt8Data+0x51c>
   14de0:	mov	r8, sp
   14de4:	mov	r4, sl
   14de8:	mov	r0, r7
   14dec:	mov	r1, r6
   14df0:	mov	r2, r8
   14df4:	mov	r3, r9
   14df8:	bl	31f0 <InflateData>
   14dfc:	mov	r0, r8
   14e00:	bl	1bbc <Mat_int64Swap>
   14e04:	strb	r0, [r5], #1
   14e08:	subs	r4, r4, #1
   14e0c:	bne	14de8 <ReadCompressedUInt8Data+0x2dc>
   14e10:	b	15028 <ReadCompressedUInt8Data+0x51c>
   14e14:	ldr	r0, [r7, #20]
   14e18:	cmp	r0, #0
   14e1c:	beq	14ff4 <ReadCompressedUInt8Data+0x4e8>
   14e20:	cmp	sl, #1
   14e24:	blt	15028 <ReadCompressedUInt8Data+0x51c>
   14e28:	mov	r8, sp
   14e2c:	mov	r4, sl
   14e30:	mov	r0, r7
   14e34:	mov	r1, r6
   14e38:	mov	r2, r8
   14e3c:	mov	r3, r9
   14e40:	bl	31f0 <InflateData>
   14e44:	mov	r0, r8
   14e48:	bl	1c0c <Mat_uint64Swap>
   14e4c:	strb	r0, [r5], #1
   14e50:	subs	r4, r4, #1
   14e54:	bne	14e30 <ReadCompressedUInt8Data+0x324>
   14e58:	b	15028 <ReadCompressedUInt8Data+0x51c>
   14e5c:	cmp	sl, #1
   14e60:	blt	15028 <ReadCompressedUInt8Data+0x51c>
   14e64:	mov	r8, sp
   14e68:	mov	r4, sl
   14e6c:	mov	r0, r7
   14e70:	mov	r1, r6
   14e74:	mov	r2, r8
   14e78:	mov	r3, r9
   14e7c:	bl	31f0 <InflateData>
   14e80:	ldrb	r0, [sp]
   14e84:	subs	r4, r4, #1
   14e88:	strb	r0, [r5], #1
   14e8c:	bne	14e6c <ReadCompressedUInt8Data+0x360>
   14e90:	b	15028 <ReadCompressedUInt8Data+0x51c>
   14e94:	cmp	sl, #1
   14e98:	blt	15028 <ReadCompressedUInt8Data+0x51c>
   14e9c:	mov	r8, sp
   14ea0:	mov	r4, sl
   14ea4:	mov	r0, r7
   14ea8:	mov	r1, r6
   14eac:	mov	r2, r8
   14eb0:	mov	r3, r9
   14eb4:	bl	31f0 <InflateData>
   14eb8:	ldrb	r0, [sp]
   14ebc:	subs	r4, r4, #1
   14ec0:	strb	r0, [r5], #1
   14ec4:	bne	14ea4 <ReadCompressedUInt8Data+0x398>
   14ec8:	b	15028 <ReadCompressedUInt8Data+0x51c>
   14ecc:	cmp	sl, #1
   14ed0:	blt	15028 <ReadCompressedUInt8Data+0x51c>
   14ed4:	mov	r8, sp
   14ed8:	mov	r4, sl
   14edc:	mov	r0, r7
   14ee0:	mov	r1, r6
   14ee4:	mov	r2, r8
   14ee8:	mov	r3, r9
   14eec:	bl	31f0 <InflateData>
   14ef0:	ldr	r0, [sp]
   14ef4:	subs	r4, r4, #1
   14ef8:	strb	r0, [r5], #1
   14efc:	bne	14edc <ReadCompressedUInt8Data+0x3d0>
   14f00:	b	15028 <ReadCompressedUInt8Data+0x51c>
   14f04:	cmp	sl, #1
   14f08:	blt	15028 <ReadCompressedUInt8Data+0x51c>
   14f0c:	mov	r8, sp
   14f10:	mov	r4, sl
   14f14:	mov	r0, r7
   14f18:	mov	r1, r6
   14f1c:	mov	r2, r8
   14f20:	mov	r3, r9
   14f24:	bl	31f0 <InflateData>
   14f28:	ldr	r0, [sp]
   14f2c:	subs	r4, r4, #1
   14f30:	strb	r0, [r5], #1
   14f34:	bne	14f14 <ReadCompressedUInt8Data+0x408>
   14f38:	b	15028 <ReadCompressedUInt8Data+0x51c>
   14f3c:	cmp	sl, #1
   14f40:	blt	15028 <ReadCompressedUInt8Data+0x51c>
   14f44:	mov	r8, sp
   14f48:	mov	r4, sl
   14f4c:	mov	r0, r7
   14f50:	mov	r1, r6
   14f54:	mov	r2, r8
   14f58:	mov	r3, r9
   14f5c:	bl	31f0 <InflateData>
   14f60:	vldr	s0, [sp]
   14f64:	subs	r4, r4, #1
   14f68:	vcvt.u32.f32	s0, s0
   14f6c:	vmov	r0, s0
   14f70:	strb	r0, [r5], #1
   14f74:	bne	14f4c <ReadCompressedUInt8Data+0x440>
   14f78:	b	15028 <ReadCompressedUInt8Data+0x51c>
   14f7c:	cmp	sl, #1
   14f80:	blt	15028 <ReadCompressedUInt8Data+0x51c>
   14f84:	mov	r8, sp
   14f88:	mov	r4, sl
   14f8c:	mov	r0, r7
   14f90:	mov	r1, r6
   14f94:	mov	r2, r8
   14f98:	mov	r3, r9
   14f9c:	bl	31f0 <InflateData>
   14fa0:	vldr	d16, [sp]
   14fa4:	subs	r4, r4, #1
   14fa8:	vcvt.u32.f64	s0, d16
   14fac:	vmov	r0, s0
   14fb0:	strb	r0, [r5], #1
   14fb4:	bne	14f8c <ReadCompressedUInt8Data+0x480>
   14fb8:	b	15028 <ReadCompressedUInt8Data+0x51c>
   14fbc:	cmp	sl, #1
   14fc0:	blt	15028 <ReadCompressedUInt8Data+0x51c>
   14fc4:	mov	r8, sp
   14fc8:	mov	r4, sl
   14fcc:	mov	r0, r7
   14fd0:	mov	r1, r6
   14fd4:	mov	r2, r8
   14fd8:	mov	r3, r9
   14fdc:	bl	31f0 <InflateData>
   14fe0:	ldrb	r0, [sp]
   14fe4:	subs	r4, r4, #1
   14fe8:	strb	r0, [r5], #1
   14fec:	bne	14fcc <ReadCompressedUInt8Data+0x4c0>
   14ff0:	b	15028 <ReadCompressedUInt8Data+0x51c>
   14ff4:	cmp	sl, #1
   14ff8:	blt	15028 <ReadCompressedUInt8Data+0x51c>
   14ffc:	mov	r8, sp
   15000:	mov	r4, sl
   15004:	mov	r0, r7
   15008:	mov	r1, r6
   1500c:	mov	r2, r8
   15010:	mov	r3, r9
   15014:	bl	31f0 <InflateData>
   15018:	ldrb	r0, [sp]
   1501c:	subs	r4, r4, #1
   15020:	strb	r0, [r5], #1
   15024:	bne	15004 <ReadCompressedUInt8Data+0x4f8>
   15028:	mul	r0, r9, sl
   1502c:	sub	sp, fp, #28
   15030:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015034 <ReadCompressedCharData>:
   15034:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15038:	add	fp, sp, #24
   1503c:	cmp	r0, #0
   15040:	mov	r9, #0
   15044:	movne	r4, r2
   15048:	cmpne	r2, #0
   1504c:	bne	15058 <ReadCompressedCharData+0x24>
   15050:	mov	r0, r9
   15054:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15058:	mov	r6, r0
   1505c:	ldr	r0, [r0]
   15060:	cmp	r0, #0
   15064:	beq	15050 <ReadCompressedCharData+0x1c>
   15068:	ldr	r5, [fp, #8]
   1506c:	mov	r0, r3
   15070:	mov	r7, r3
   15074:	mov	r8, r1
   15078:	bl	193c <Mat_SizeOf@plt>
   1507c:	mov	r9, r0
   15080:	cmp	r7, #15
   15084:	bgt	1509c <ReadCompressedCharData+0x68>
   15088:	cmp	r7, #2
   1508c:	beq	150ac <ReadCompressedCharData+0x78>
   15090:	cmp	r7, #4
   15094:	beq	150c8 <ReadCompressedCharData+0x94>
   15098:	b	1510c <ReadCompressedCharData+0xd8>
   1509c:	cmp	r7, #17
   150a0:	beq	150c8 <ReadCompressedCharData+0x94>
   150a4:	cmp	r7, #16
   150a8:	bne	1510c <ReadCompressedCharData+0xd8>
   150ac:	mul	r9, r9, r5
   150b0:	mov	r0, r6
   150b4:	mov	r1, r8
   150b8:	mov	r2, r4
   150bc:	mov	r3, r9
   150c0:	bl	31f0 <InflateData>
   150c4:	b	15050 <ReadCompressedCharData+0x1c>
   150c8:	mul	r9, r9, r5
   150cc:	mov	r0, r6
   150d0:	mov	r1, r8
   150d4:	mov	r2, r4
   150d8:	mov	r3, r9
   150dc:	bl	31f0 <InflateData>
   150e0:	ldr	r0, [r6, #20]
   150e4:	cmp	r0, #0
   150e8:	beq	15050 <ReadCompressedCharData+0x1c>
   150ec:	cmp	r5, #1
   150f0:	blt	15050 <ReadCompressedCharData+0x1c>
   150f4:	mov	r0, r4
   150f8:	bl	1c64 <Mat_uint16Swap>
   150fc:	add	r4, r4, #2
   15100:	subs	r5, r5, #1
   15104:	bne	150f4 <ReadCompressedCharData+0xc0>
   15108:	b	15050 <ReadCompressedCharData+0x1c>
   1510c:	ldr	r0, [pc, #16]	; 15124 <ReadCompressedCharData+0xf0>
   15110:	mov	r1, r7
   15114:	add	r0, pc, r0
   15118:	bl	1828 <Mat_Warning@plt>
   1511c:	mul	r9, r9, r5
   15120:	b	15050 <ReadCompressedCharData+0x1c>
   15124:	.word	0x00034b18

00015128 <ReadCharData>:
   15128:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1512c:	add	fp, sp, #24
   15130:	sub	sp, sp, #8
   15134:	cmp	r0, #0
   15138:	mov	r4, #0
   1513c:	movne	r6, r1
   15140:	cmpne	r1, #0
   15144:	bne	15154 <ReadCharData+0x2c>
   15148:	mov	r0, r4
   1514c:	sub	sp, fp, #24
   15150:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15154:	mov	r7, r0
   15158:	ldr	r0, [r0]
   1515c:	cmp	r0, #0
   15160:	beq	15148 <ReadCharData+0x20>
   15164:	mov	r0, r2
   15168:	mov	r5, r3
   1516c:	mov	r9, r2
   15170:	bl	193c <Mat_SizeOf@plt>
   15174:	mov	r8, r0
   15178:	cmp	r9, #15
   1517c:	bgt	15194 <ReadCharData+0x6c>
   15180:	cmp	r9, #2
   15184:	beq	151a4 <ReadCharData+0x7c>
   15188:	cmp	r9, #4
   1518c:	beq	151c0 <ReadCharData+0x98>
   15190:	b	1520c <ReadCharData+0xe4>
   15194:	cmp	r9, #17
   15198:	beq	151c0 <ReadCharData+0x98>
   1519c:	cmp	r9, #16
   151a0:	bne	1520c <ReadCharData+0xe4>
   151a4:	ldr	r3, [r7]
   151a8:	mov	r0, r6
   151ac:	mov	r1, r8
   151b0:	mov	r2, r5
   151b4:	sub	sp, fp, #24
   151b8:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   151bc:	b	18d0 <fread@plt>
   151c0:	ldr	r0, [r7, #20]
   151c4:	cmp	r0, #0
   151c8:	beq	15220 <ReadCharData+0xf8>
   151cc:	cmp	r5, #1
   151d0:	blt	1525c <ReadCharData+0x134>
   151d4:	mov	r4, #0
   151d8:	add	r9, sp, #6
   151dc:	ldr	r3, [r7]
   151e0:	mov	r0, r9
   151e4:	mov	r1, r8
   151e8:	mov	r2, #1
   151ec:	bl	18d0 <fread@plt>
   151f0:	add	r4, r0, r4
   151f4:	mov	r0, r9
   151f8:	bl	1c64 <Mat_uint16Swap>
   151fc:	strb	r0, [r6], #1
   15200:	subs	r5, r5, #1
   15204:	bne	151dc <ReadCharData+0xb4>
   15208:	b	15148 <ReadCharData+0x20>
   1520c:	ldr	r0, [pc, #80]	; 15264 <ReadCharData+0x13c>
   15210:	mov	r1, r9
   15214:	add	r0, pc, r0
   15218:	bl	1828 <Mat_Warning@plt>
   1521c:	b	15148 <ReadCharData+0x20>
   15220:	cmp	r5, #1
   15224:	blt	1525c <ReadCharData+0x134>
   15228:	mov	r4, #0
   1522c:	add	r9, sp, #6
   15230:	ldr	r3, [r7]
   15234:	mov	r0, r9
   15238:	mov	r1, r8
   1523c:	mov	r2, #1
   15240:	bl	18d0 <fread@plt>
   15244:	add	r4, r0, r4
   15248:	ldrb	r0, [sp, #6]
   1524c:	subs	r5, r5, #1
   15250:	strb	r0, [r6], #1
   15254:	bne	15230 <ReadCharData+0x108>
   15258:	b	15148 <ReadCharData+0x20>
   1525c:	mov	r4, #0
   15260:	b	15148 <ReadCharData+0x20>
   15264:	.word	0x00034a63

00015268 <ReadDataSlabN>:
   15268:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1526c:	add	fp, sp, #28
   15270:	sub	sp, sp, #164	; 0xa4
   15274:	sub	r9, fp, #72	; 0x48
   15278:	mov	r4, r0
   1527c:	vmov.i32	q8, #0	; 0x00000000
   15280:	mov	r0, #36	; 0x24
   15284:	mov	r5, r2
   15288:	mov	r2, #0
   1528c:	add	r6, sp, #80	; 0x50
   15290:	mov	r7, r9
   15294:	cmp	r4, #0
   15298:	str	r2, [fp, #-40]	; 0xffffffd8
   1529c:	str	r2, [sp, #112]	; 0x70
   152a0:	str	r2, [sp, #72]	; 0x48
   152a4:	str	r4, [sp, #36]	; 0x24
   152a8:	vst1.64	{d16-d17}, [r7], r0
   152ac:	cmpne	r1, #0
   152b0:	str	r2, [r7]
   152b4:	add	r7, r9, #16
   152b8:	vst1.64	{d16-d17}, [r7]
   152bc:	add	r7, r6, #16
   152c0:	vst1.64	{d16-d17}, [r7]
   152c4:	mov	r7, r6
   152c8:	add	r6, sp, #40	; 0x28
   152cc:	vst1.64	{d16-d17}, [r7], r0
   152d0:	str	r2, [r7]
   152d4:	add	r7, r6, #16
   152d8:	vst1.64	{d16-d17}, [r7]
   152dc:	mov	r7, r6
   152e0:	vst1.64	{d16-d17}, [r7], r0
   152e4:	mvn	r0, #0
   152e8:	str	r2, [r7]
   152ec:	bne	152f8 <ReadDataSlabN+0x90>
   152f0:	sub	sp, fp, #28
   152f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   152f8:	ldr	r2, [fp, #8]
   152fc:	cmp	r2, #10
   15300:	bgt	152f0 <ReadDataSlabN+0x88>
   15304:	ldr	r2, [fp, #24]
   15308:	cmp	r2, #0
   1530c:	ldrne	r2, [fp, #20]
   15310:	cmpne	r2, #0
   15314:	beq	152f0 <ReadDataSlabN+0x88>
   15318:	ldr	r2, [fp, #16]
   1531c:	cmp	r2, #0
   15320:	strne	r1, [sp, #24]
   15324:	ldrne	r1, [sp, #36]	; 0x24
   15328:	strne	r3, [sp, #28]
   1532c:	ldrne	r1, [r1]
   15330:	cmpne	r1, #0
   15334:	beq	152f0 <ReadDataSlabN+0x88>
   15338:	ldr	r0, [sp, #28]
   1533c:	bl	193c <Mat_SizeOf@plt>
   15340:	sub	r2, r5, #6
   15344:	cmp	r2, #9
   15348:	bhi	189c4 <ReadDataSlabN+0x375c>
   1534c:	add	r1, pc, #16
   15350:	ldr	r3, [fp, #12]
   15354:	add	r6, sp, #40	; 0x28
   15358:	str	r0, [sp, #32]
   1535c:	ldr	r2, [r1, r2, lsl #2]
   15360:	add	pc, r1, r2
   15364:	.word	0x00000028
   15368:	.word	0x0000031c
   1536c:	.word	0x000003e8
   15370:	.word	0x000004b4
   15374:	.word	0x00000580
   15378:	.word	0x0000064c
   1537c:	.word	0x00000718
   15380:	.word	0x000007e4
   15384:	.word	0x000008b0
   15388:	.word	0x0000097c
   1538c:	ldr	r0, [fp, #20]
   15390:	mov	r8, #0
   15394:	ldr	r0, [r0]
   15398:	sub	r0, r0, #1
   1539c:	str	r0, [fp, #-72]	; 0xffffffb8
   153a0:	ldr	r0, [fp, #24]
   153a4:	ldr	ip, [r3]
   153a8:	str	ip, [sp, #40]	; 0x28
   153ac:	ldr	r0, [r0]
   153b0:	str	r0, [sp, #12]
   153b4:	ldr	r0, [fp, #8]
   153b8:	cmp	r0, #2
   153bc:	blt	15450 <ReadDataSlabN+0x1e8>
   153c0:	mov	r1, r3
   153c4:	mov	r8, #0
   153c8:	mov	r0, #1
   153cc:	mov	r3, ip
   153d0:	ldr	r2, [fp, #20]
   153d4:	mov	r4, #0
   153d8:	ldr	r2, [r2, r0, lsl #2]
   153dc:	str	r3, [r6, r0, lsl #2]
   153e0:	sub	r5, r2, #1
   153e4:	ldr	r2, [fp, #12]
   153e8:	str	r5, [r9, r0, lsl #2]
   153ec:	ldr	r2, [r2, r0, lsl #2]
   153f0:	mov	r7, r2
   153f4:	mul	r3, r7, r3
   153f8:	ldr	r7, [r1, -r4, lsl #2]
   153fc:	add	r4, r4, #1
   15400:	cmp	r0, r4
   15404:	mul	r5, r5, r7
   15408:	bne	153f4 <ReadDataSlabN+0x18c>
   1540c:	ldr	r7, [fp, #16]
   15410:	str	r5, [r9, r0, lsl #2]
   15414:	str	r3, [r6, r0, lsl #2]
   15418:	ldr	r5, [sp, #12]
   1541c:	add	r1, r1, #4
   15420:	ldr	r7, [r7, r0, lsl #2]
   15424:	mla	r8, r7, ip, r8
   15428:	ldr	r7, [fp, #24]
   1542c:	mov	ip, r3
   15430:	mov	r3, r2
   15434:	ldr	r7, [r7, r0, lsl #2]
   15438:	add	r0, r0, #1
   1543c:	mul	r5, r7, r5
   15440:	ldr	r7, [fp, #8]
   15444:	str	r5, [sp, #12]
   15448:	cmp	r0, r7
   1544c:	bne	153d0 <ReadDataSlabN+0x168>
   15450:	ldr	r0, [sp, #32]
   15454:	mov	r2, #1
   15458:	mul	r1, r8, r0
   1545c:	ldr	r0, [sp, #36]	; 0x24
   15460:	ldr	r0, [r0]
   15464:	bl	1a68 <fseek@plt>
   15468:	ldr	r0, [fp, #20]
   1546c:	ldr	r0, [r0]
   15470:	cmp	r0, #1
   15474:	bne	15dac <ReadDataSlabN+0xb44>
   15478:	ldr	r0, [sp, #12]
   1547c:	cmp	r0, #1
   15480:	ldr	r0, [fp, #24]
   15484:	blt	189c4 <ReadDataSlabN+0x375c>
   15488:	ldr	r1, [fp, #16]
   1548c:	add	r0, r0, #4
   15490:	mov	r5, #0
   15494:	str	r0, [sp, #20]
   15498:	add	r0, sp, #80	; 0x50
   1549c:	orr	r7, r0, #4
   154a0:	orr	r0, r9, #4
   154a4:	str	r0, [sp, #4]
   154a8:	add	r1, r1, #4
   154ac:	str	r1, [sp, #16]
   154b0:	ldr	r4, [fp, #16]
   154b4:	ldr	r0, [r4]
   154b8:	cmp	r0, #0
   154bc:	beq	154e8 <ReadDataSlabN+0x280>
   154c0:	ldr	sl, [sp, #32]
   154c4:	mov	r2, #1
   154c8:	mul	r1, r0, sl
   154cc:	ldr	r0, [sp, #36]	; 0x24
   154d0:	ldr	r0, [r0]
   154d4:	bl	1a68 <fseek@plt>
   154d8:	ldr	r0, [r4]
   154dc:	add	r8, r0, r8
   154e0:	ldr	r0, [sp, #24]
   154e4:	b	154f0 <ReadDataSlabN+0x288>
   154e8:	ldr	r0, [sp, #24]
   154ec:	ldr	sl, [sp, #32]
   154f0:	add	r1, r0, r5, lsl #3
   154f4:	ldr	r0, [fp, #24]
   154f8:	ldr	r6, [sp, #36]	; 0x24
   154fc:	ldr	r2, [sp, #28]
   15500:	str	r5, [sp, #8]
   15504:	ldr	r3, [r0]
   15508:	mov	r9, r0
   1550c:	mov	r0, r6
   15510:	bl	3790 <ReadDoubleData>
   15514:	ldr	r0, [fp, #12]
   15518:	ldr	r4, [r4]
   1551c:	ldr	r1, [r9]
   15520:	mov	r2, #1
   15524:	ldr	r5, [r0]
   15528:	sub	r0, r5, r4
   1552c:	sub	r0, r0, r1
   15530:	mul	r1, r0, sl
   15534:	ldr	r0, [r6]
   15538:	bl	1a68 <fseek@plt>
   1553c:	add	r0, r5, r8
   15540:	sub	r8, r0, r4
   15544:	ldr	r0, [fp, #8]
   15548:	cmp	r0, #2
   1554c:	blt	1565c <ReadDataSlabN+0x3f4>
   15550:	mov	r0, #0
   15554:	add	r3, sp, #40	; 0x28
   15558:	mov	r5, r0
   1555c:	ldr	r0, [r7, r0, lsl #2]
   15560:	ldr	r1, [sp, #20]
   15564:	add	r0, r0, #1
   15568:	str	r0, [r7, r5, lsl #2]
   1556c:	ldr	r1, [r1, r5, lsl #2]
   15570:	sdiv	r2, r0, r1
   15574:	mls	r0, r2, r1, r0
   15578:	cmp	r0, #0
   1557c:	bne	15638 <ReadDataSlabN+0x3d0>
   15580:	mov	r0, #0
   15584:	str	r0, [r7, r5, lsl #2]
   15588:	add	r0, r3, r5, lsl #2
   1558c:	ldr	r9, [r0, #4]
   15590:	sdiv	r0, r8, r9
   15594:	mls	r4, r0, r9, r8
   15598:	cmp	r4, #0
   1559c:	beq	155e4 <ReadDataSlabN+0x37c>
   155a0:	ldr	sl, [sp, #16]
   155a4:	ldr	r6, [r3, r5, lsl #2]
   155a8:	sub	r1, r9, r4
   155ac:	mov	r2, #1
   155b0:	ldr	r0, [sl, r5, lsl #2]
   155b4:	mla	r0, r0, r6, r1
   155b8:	ldr	r1, [sp, #32]
   155bc:	mul	r1, r0, r1
   155c0:	ldr	r0, [sp, #36]	; 0x24
   155c4:	ldr	r0, [r0]
   155c8:	bl	1a68 <fseek@plt>
   155cc:	ldr	r0, [sl, r5, lsl #2]
   155d0:	add	r1, r9, r8
   155d4:	add	r3, sp, #40	; 0x28
   155d8:	sub	r1, r1, r4
   155dc:	mla	r8, r0, r6, r1
   155e0:	b	15620 <ReadDataSlabN+0x3b8>
   155e4:	ldr	r6, [sp, #16]
   155e8:	ldr	r0, [r6, r5, lsl #2]
   155ec:	cmp	r0, #0
   155f0:	beq	15620 <ReadDataSlabN+0x3b8>
   155f4:	ldr	r1, [sp, #32]
   155f8:	ldr	r4, [r3, r5, lsl #2]
   155fc:	mov	r2, #1
   15600:	mul	r0, r0, r1
   15604:	mul	r1, r0, r4
   15608:	ldr	r0, [sp, #36]	; 0x24
   1560c:	ldr	r0, [r0]
   15610:	bl	1a68 <fseek@plt>
   15614:	ldr	r0, [r6, r5, lsl #2]
   15618:	add	r3, sp, #40	; 0x28
   1561c:	mla	r8, r0, r4, r8
   15620:	ldr	r2, [fp, #8]
   15624:	add	r1, r5, #2
   15628:	add	r0, r5, #1
   1562c:	cmp	r1, r2
   15630:	blt	15558 <ReadDataSlabN+0x2f0>
   15634:	b	1565c <ReadDataSlabN+0x3f4>
   15638:	ldr	r0, [sp, #4]
   1563c:	mov	r2, #1
   15640:	ldr	r4, [r0, r5, lsl #2]
   15644:	ldr	r0, [sp, #32]
   15648:	mul	r1, r4, r0
   1564c:	ldr	r0, [sp, #36]	; 0x24
   15650:	ldr	r0, [r0]
   15654:	bl	1a68 <fseek@plt>
   15658:	add	r8, r4, r8
   1565c:	ldr	r0, [fp, #24]
   15660:	ldr	r5, [sp, #8]
   15664:	ldr	r1, [sp, #12]
   15668:	ldr	r0, [r0]
   1566c:	add	r5, r0, r5
   15670:	mov	r0, #0
   15674:	cmp	r5, r1
   15678:	blt	154b0 <ReadDataSlabN+0x248>
   1567c:	b	152f0 <ReadDataSlabN+0x88>
   15680:	ldr	r0, [fp, #20]
   15684:	ldr	r5, [fp, #24]
   15688:	mov	r4, #0
   1568c:	ldr	r0, [r0]
   15690:	sub	r0, r0, #1
   15694:	str	r0, [fp, #-72]	; 0xffffffb8
   15698:	ldr	ip, [r3]
   1569c:	str	ip, [sp, #40]	; 0x28
   156a0:	ldr	r0, [r5]
   156a4:	str	r0, [sp, #12]
   156a8:	ldr	r0, [fp, #8]
   156ac:	cmp	r0, #2
   156b0:	blt	16028 <ReadDataSlabN+0xdc0>
   156b4:	ldr	r8, [fp, #16]
   156b8:	mov	r1, r3
   156bc:	mov	r4, #0
   156c0:	mov	r0, #1
   156c4:	mov	r3, ip
   156c8:	ldr	r2, [fp, #20]
   156cc:	ldr	r2, [r2, r0, lsl #2]
   156d0:	str	r3, [r6, r0, lsl #2]
   156d4:	sub	r5, r2, #1
   156d8:	ldr	r2, [fp, #12]
   156dc:	str	r5, [r9, r0, lsl #2]
   156e0:	ldr	lr, [r2, r0, lsl #2]
   156e4:	mov	r2, #0
   156e8:	mov	r7, lr
   156ec:	mul	r3, r7, r3
   156f0:	ldr	r7, [r1, -r2, lsl #2]
   156f4:	add	r2, r2, #1
   156f8:	cmp	r0, r2
   156fc:	mul	r5, r5, r7
   15700:	bne	156ec <ReadDataSlabN+0x484>
   15704:	add	r6, sp, #40	; 0x28
   15708:	str	r5, [r9, r0, lsl #2]
   1570c:	ldr	r5, [fp, #24]
   15710:	ldr	r7, [sp, #12]
   15714:	add	r1, r1, #4
   15718:	str	r3, [r6, r0, lsl #2]
   1571c:	ldr	r2, [r8, r0, lsl #2]
   15720:	mla	r4, r2, ip, r4
   15724:	ldr	r2, [r5, r0, lsl #2]
   15728:	add	r0, r0, #1
   1572c:	mov	ip, r3
   15730:	mov	r3, lr
   15734:	mul	r7, r2, r7
   15738:	ldr	r2, [fp, #8]
   1573c:	str	r7, [sp, #12]
   15740:	cmp	r0, r2
   15744:	bne	156c8 <ReadDataSlabN+0x460>
   15748:	b	1602c <ReadDataSlabN+0xdc4>
   1574c:	ldr	r0, [fp, #20]
   15750:	ldr	r5, [fp, #24]
   15754:	mov	sl, #0
   15758:	ldr	r0, [r0]
   1575c:	sub	r0, r0, #1
   15760:	str	r0, [fp, #-72]	; 0xffffffb8
   15764:	ldr	ip, [r3]
   15768:	str	ip, [sp, #40]	; 0x28
   1576c:	ldr	r0, [r5]
   15770:	str	r0, [sp, #12]
   15774:	ldr	r0, [fp, #8]
   15778:	cmp	r0, #2
   1577c:	blt	16250 <ReadDataSlabN+0xfe8>
   15780:	ldr	r8, [fp, #16]
   15784:	mov	r1, r3
   15788:	mov	sl, #0
   1578c:	mov	r0, #1
   15790:	mov	r3, ip
   15794:	ldr	r2, [fp, #20]
   15798:	ldr	r2, [r2, r0, lsl #2]
   1579c:	str	r3, [r6, r0, lsl #2]
   157a0:	sub	r5, r2, #1
   157a4:	ldr	r2, [fp, #12]
   157a8:	str	r5, [r9, r0, lsl #2]
   157ac:	ldr	lr, [r2, r0, lsl #2]
   157b0:	mov	r2, #0
   157b4:	mov	r7, lr
   157b8:	mul	r3, r7, r3
   157bc:	ldr	r7, [r1, -r2, lsl #2]
   157c0:	add	r2, r2, #1
   157c4:	cmp	r0, r2
   157c8:	mul	r5, r5, r7
   157cc:	bne	157b8 <ReadDataSlabN+0x550>
   157d0:	add	r6, sp, #40	; 0x28
   157d4:	str	r5, [r9, r0, lsl #2]
   157d8:	ldr	r5, [fp, #24]
   157dc:	ldr	r7, [sp, #12]
   157e0:	add	r1, r1, #4
   157e4:	str	r3, [r6, r0, lsl #2]
   157e8:	ldr	r2, [r8, r0, lsl #2]
   157ec:	mla	sl, r2, ip, sl
   157f0:	ldr	r2, [r5, r0, lsl #2]
   157f4:	add	r0, r0, #1
   157f8:	mov	ip, r3
   157fc:	mov	r3, lr
   15800:	mul	r7, r2, r7
   15804:	ldr	r2, [fp, #8]
   15808:	str	r7, [sp, #12]
   1580c:	cmp	r0, r2
   15810:	bne	15794 <ReadDataSlabN+0x52c>
   15814:	b	16254 <ReadDataSlabN+0xfec>
   15818:	ldr	r0, [fp, #20]
   1581c:	ldr	r5, [fp, #24]
   15820:	mov	sl, #0
   15824:	ldr	r0, [r0]
   15828:	sub	r0, r0, #1
   1582c:	str	r0, [fp, #-72]	; 0xffffffb8
   15830:	ldr	ip, [r3]
   15834:	str	ip, [sp, #40]	; 0x28
   15838:	ldr	r0, [r5]
   1583c:	str	r0, [sp, #12]
   15840:	ldr	r0, [fp, #8]
   15844:	cmp	r0, #2
   15848:	blt	16474 <ReadDataSlabN+0x120c>
   1584c:	ldr	r8, [fp, #16]
   15850:	mov	r1, r3
   15854:	mov	sl, #0
   15858:	mov	r0, #1
   1585c:	mov	r3, ip
   15860:	ldr	r2, [fp, #20]
   15864:	ldr	r2, [r2, r0, lsl #2]
   15868:	str	r3, [r6, r0, lsl #2]
   1586c:	sub	r5, r2, #1
   15870:	ldr	r2, [fp, #12]
   15874:	str	r5, [r9, r0, lsl #2]
   15878:	ldr	lr, [r2, r0, lsl #2]
   1587c:	mov	r2, #0
   15880:	mov	r7, lr
   15884:	mul	r3, r7, r3
   15888:	ldr	r7, [r1, -r2, lsl #2]
   1588c:	add	r2, r2, #1
   15890:	cmp	r0, r2
   15894:	mul	r5, r5, r7
   15898:	bne	15884 <ReadDataSlabN+0x61c>
   1589c:	add	r6, sp, #40	; 0x28
   158a0:	str	r5, [r9, r0, lsl #2]
   158a4:	ldr	r5, [fp, #24]
   158a8:	ldr	r7, [sp, #12]
   158ac:	add	r1, r1, #4
   158b0:	str	r3, [r6, r0, lsl #2]
   158b4:	ldr	r2, [r8, r0, lsl #2]
   158b8:	mla	sl, r2, ip, sl
   158bc:	ldr	r2, [r5, r0, lsl #2]
   158c0:	add	r0, r0, #1
   158c4:	mov	ip, r3
   158c8:	mov	r3, lr
   158cc:	mul	r7, r2, r7
   158d0:	ldr	r2, [fp, #8]
   158d4:	str	r7, [sp, #12]
   158d8:	cmp	r0, r2
   158dc:	bne	15860 <ReadDataSlabN+0x5f8>
   158e0:	b	16478 <ReadDataSlabN+0x1210>
   158e4:	ldr	r0, [fp, #20]
   158e8:	ldr	r5, [fp, #24]
   158ec:	mov	r4, #0
   158f0:	ldr	r0, [r0]
   158f4:	sub	r0, r0, #1
   158f8:	str	r0, [fp, #-72]	; 0xffffffb8
   158fc:	ldr	ip, [r3]
   15900:	str	ip, [sp, #40]	; 0x28
   15904:	ldr	r0, [r5]
   15908:	str	r0, [sp, #16]
   1590c:	ldr	r0, [fp, #8]
   15910:	cmp	r0, #2
   15914:	blt	16698 <ReadDataSlabN+0x1430>
   15918:	ldr	r8, [fp, #16]
   1591c:	mov	r1, r3
   15920:	mov	r4, #0
   15924:	mov	r0, #1
   15928:	mov	r3, ip
   1592c:	ldr	r2, [fp, #20]
   15930:	ldr	r2, [r2, r0, lsl #2]
   15934:	str	r3, [r6, r0, lsl #2]
   15938:	sub	r5, r2, #1
   1593c:	ldr	r2, [fp, #12]
   15940:	str	r5, [r9, r0, lsl #2]
   15944:	ldr	lr, [r2, r0, lsl #2]
   15948:	mov	r2, #0
   1594c:	mov	r7, lr
   15950:	mul	r3, r7, r3
   15954:	ldr	r7, [r1, -r2, lsl #2]
   15958:	add	r2, r2, #1
   1595c:	cmp	r0, r2
   15960:	mul	r5, r5, r7
   15964:	bne	15950 <ReadDataSlabN+0x6e8>
   15968:	add	r6, sp, #40	; 0x28
   1596c:	str	r5, [r9, r0, lsl #2]
   15970:	ldr	r5, [fp, #24]
   15974:	ldr	r7, [sp, #16]
   15978:	add	r1, r1, #4
   1597c:	str	r3, [r6, r0, lsl #2]
   15980:	ldr	r2, [r8, r0, lsl #2]
   15984:	mla	r4, r2, ip, r4
   15988:	ldr	r2, [r5, r0, lsl #2]
   1598c:	add	r0, r0, #1
   15990:	mov	ip, r3
   15994:	mov	r3, lr
   15998:	mul	r7, r2, r7
   1599c:	ldr	r2, [fp, #8]
   159a0:	str	r7, [sp, #16]
   159a4:	cmp	r0, r2
   159a8:	bne	1592c <ReadDataSlabN+0x6c4>
   159ac:	b	1669c <ReadDataSlabN+0x1434>
   159b0:	ldr	r0, [fp, #20]
   159b4:	ldr	r5, [fp, #24]
   159b8:	mov	r4, #0
   159bc:	ldr	r0, [r0]
   159c0:	sub	r0, r0, #1
   159c4:	str	r0, [fp, #-72]	; 0xffffffb8
   159c8:	ldr	ip, [r3]
   159cc:	str	ip, [sp, #40]	; 0x28
   159d0:	ldr	r0, [r5]
   159d4:	str	r0, [sp, #16]
   159d8:	ldr	r0, [fp, #8]
   159dc:	cmp	r0, #2
   159e0:	blt	168bc <ReadDataSlabN+0x1654>
   159e4:	ldr	r8, [fp, #16]
   159e8:	mov	r1, r3
   159ec:	mov	r4, #0
   159f0:	mov	r0, #1
   159f4:	mov	r3, ip
   159f8:	ldr	r2, [fp, #20]
   159fc:	ldr	r2, [r2, r0, lsl #2]
   15a00:	str	r3, [r6, r0, lsl #2]
   15a04:	sub	r5, r2, #1
   15a08:	ldr	r2, [fp, #12]
   15a0c:	str	r5, [r9, r0, lsl #2]
   15a10:	ldr	lr, [r2, r0, lsl #2]
   15a14:	mov	r2, #0
   15a18:	mov	r7, lr
   15a1c:	mul	r3, r7, r3
   15a20:	ldr	r7, [r1, -r2, lsl #2]
   15a24:	add	r2, r2, #1
   15a28:	cmp	r0, r2
   15a2c:	mul	r5, r5, r7
   15a30:	bne	15a1c <ReadDataSlabN+0x7b4>
   15a34:	add	r6, sp, #40	; 0x28
   15a38:	str	r5, [r9, r0, lsl #2]
   15a3c:	ldr	r5, [fp, #24]
   15a40:	ldr	r7, [sp, #16]
   15a44:	add	r1, r1, #4
   15a48:	str	r3, [r6, r0, lsl #2]
   15a4c:	ldr	r2, [r8, r0, lsl #2]
   15a50:	mla	r4, r2, ip, r4
   15a54:	ldr	r2, [r5, r0, lsl #2]
   15a58:	add	r0, r0, #1
   15a5c:	mov	ip, r3
   15a60:	mov	r3, lr
   15a64:	mul	r7, r2, r7
   15a68:	ldr	r2, [fp, #8]
   15a6c:	str	r7, [sp, #16]
   15a70:	cmp	r0, r2
   15a74:	bne	159f8 <ReadDataSlabN+0x790>
   15a78:	b	168c0 <ReadDataSlabN+0x1658>
   15a7c:	ldr	r0, [fp, #20]
   15a80:	ldr	r5, [fp, #24]
   15a84:	mov	r4, #0
   15a88:	ldr	r0, [r0]
   15a8c:	sub	r0, r0, #1
   15a90:	str	r0, [fp, #-72]	; 0xffffffb8
   15a94:	ldr	ip, [r3]
   15a98:	str	ip, [sp, #40]	; 0x28
   15a9c:	ldr	r0, [r5]
   15aa0:	str	r0, [sp, #16]
   15aa4:	ldr	r0, [fp, #8]
   15aa8:	cmp	r0, #2
   15aac:	blt	16ae0 <ReadDataSlabN+0x1878>
   15ab0:	ldr	r8, [fp, #16]
   15ab4:	mov	r1, r3
   15ab8:	mov	r4, #0
   15abc:	mov	r0, #1
   15ac0:	mov	r3, ip
   15ac4:	ldr	r2, [fp, #20]
   15ac8:	ldr	r2, [r2, r0, lsl #2]
   15acc:	str	r3, [r6, r0, lsl #2]
   15ad0:	sub	r5, r2, #1
   15ad4:	ldr	r2, [fp, #12]
   15ad8:	str	r5, [r9, r0, lsl #2]
   15adc:	ldr	lr, [r2, r0, lsl #2]
   15ae0:	mov	r2, #0
   15ae4:	mov	r7, lr
   15ae8:	mul	r3, r7, r3
   15aec:	ldr	r7, [r1, -r2, lsl #2]
   15af0:	add	r2, r2, #1
   15af4:	cmp	r0, r2
   15af8:	mul	r5, r5, r7
   15afc:	bne	15ae8 <ReadDataSlabN+0x880>
   15b00:	add	r6, sp, #40	; 0x28
   15b04:	str	r5, [r9, r0, lsl #2]
   15b08:	ldr	r5, [fp, #24]
   15b0c:	ldr	r7, [sp, #16]
   15b10:	add	r1, r1, #4
   15b14:	str	r3, [r6, r0, lsl #2]
   15b18:	ldr	r2, [r8, r0, lsl #2]
   15b1c:	mla	r4, r2, ip, r4
   15b20:	ldr	r2, [r5, r0, lsl #2]
   15b24:	add	r0, r0, #1
   15b28:	mov	ip, r3
   15b2c:	mov	r3, lr
   15b30:	mul	r7, r2, r7
   15b34:	ldr	r2, [fp, #8]
   15b38:	str	r7, [sp, #16]
   15b3c:	cmp	r0, r2
   15b40:	bne	15ac4 <ReadDataSlabN+0x85c>
   15b44:	b	16ae4 <ReadDataSlabN+0x187c>
   15b48:	ldr	r0, [fp, #20]
   15b4c:	ldr	r5, [fp, #24]
   15b50:	mov	r4, #0
   15b54:	ldr	r0, [r0]
   15b58:	sub	r0, r0, #1
   15b5c:	str	r0, [fp, #-72]	; 0xffffffb8
   15b60:	ldr	ip, [r3]
   15b64:	str	ip, [sp, #40]	; 0x28
   15b68:	ldr	r0, [r5]
   15b6c:	str	r0, [sp, #16]
   15b70:	ldr	r0, [fp, #8]
   15b74:	cmp	r0, #2
   15b78:	blt	16d04 <ReadDataSlabN+0x1a9c>
   15b7c:	ldr	r8, [fp, #16]
   15b80:	mov	r1, r3
   15b84:	mov	r4, #0
   15b88:	mov	r0, #1
   15b8c:	mov	r3, ip
   15b90:	ldr	r2, [fp, #20]
   15b94:	ldr	r2, [r2, r0, lsl #2]
   15b98:	str	r3, [r6, r0, lsl #2]
   15b9c:	sub	r5, r2, #1
   15ba0:	ldr	r2, [fp, #12]
   15ba4:	str	r5, [r9, r0, lsl #2]
   15ba8:	ldr	lr, [r2, r0, lsl #2]
   15bac:	mov	r2, #0
   15bb0:	mov	r7, lr
   15bb4:	mul	r3, r7, r3
   15bb8:	ldr	r7, [r1, -r2, lsl #2]
   15bbc:	add	r2, r2, #1
   15bc0:	cmp	r0, r2
   15bc4:	mul	r5, r5, r7
   15bc8:	bne	15bb4 <ReadDataSlabN+0x94c>
   15bcc:	add	r6, sp, #40	; 0x28
   15bd0:	str	r5, [r9, r0, lsl #2]
   15bd4:	ldr	r5, [fp, #24]
   15bd8:	ldr	r7, [sp, #16]
   15bdc:	add	r1, r1, #4
   15be0:	str	r3, [r6, r0, lsl #2]
   15be4:	ldr	r2, [r8, r0, lsl #2]
   15be8:	mla	r4, r2, ip, r4
   15bec:	ldr	r2, [r5, r0, lsl #2]
   15bf0:	add	r0, r0, #1
   15bf4:	mov	ip, r3
   15bf8:	mov	r3, lr
   15bfc:	mul	r7, r2, r7
   15c00:	ldr	r2, [fp, #8]
   15c04:	str	r7, [sp, #16]
   15c08:	cmp	r0, r2
   15c0c:	bne	15b90 <ReadDataSlabN+0x928>
   15c10:	b	16d08 <ReadDataSlabN+0x1aa0>
   15c14:	ldr	r0, [fp, #20]
   15c18:	ldr	r5, [fp, #24]
   15c1c:	mov	r4, #0
   15c20:	ldr	r0, [r0]
   15c24:	sub	r0, r0, #1
   15c28:	str	r0, [fp, #-72]	; 0xffffffb8
   15c2c:	ldr	ip, [r3]
   15c30:	str	ip, [sp, #40]	; 0x28
   15c34:	ldr	r0, [r5]
   15c38:	str	r0, [sp, #16]
   15c3c:	ldr	r0, [fp, #8]
   15c40:	cmp	r0, #2
   15c44:	blt	16f28 <ReadDataSlabN+0x1cc0>
   15c48:	ldr	r8, [fp, #16]
   15c4c:	mov	r1, r3
   15c50:	mov	r4, #0
   15c54:	mov	r0, #1
   15c58:	mov	r3, ip
   15c5c:	ldr	r2, [fp, #20]
   15c60:	ldr	r2, [r2, r0, lsl #2]
   15c64:	str	r3, [r6, r0, lsl #2]
   15c68:	sub	r5, r2, #1
   15c6c:	ldr	r2, [fp, #12]
   15c70:	str	r5, [r9, r0, lsl #2]
   15c74:	ldr	lr, [r2, r0, lsl #2]
   15c78:	mov	r2, #0
   15c7c:	mov	r7, lr
   15c80:	mul	r3, r7, r3
   15c84:	ldr	r7, [r1, -r2, lsl #2]
   15c88:	add	r2, r2, #1
   15c8c:	cmp	r0, r2
   15c90:	mul	r5, r5, r7
   15c94:	bne	15c80 <ReadDataSlabN+0xa18>
   15c98:	add	r6, sp, #40	; 0x28
   15c9c:	str	r5, [r9, r0, lsl #2]
   15ca0:	ldr	r5, [fp, #24]
   15ca4:	ldr	r7, [sp, #16]
   15ca8:	add	r1, r1, #4
   15cac:	str	r3, [r6, r0, lsl #2]
   15cb0:	ldr	r2, [r8, r0, lsl #2]
   15cb4:	mla	r4, r2, ip, r4
   15cb8:	ldr	r2, [r5, r0, lsl #2]
   15cbc:	add	r0, r0, #1
   15cc0:	mov	ip, r3
   15cc4:	mov	r3, lr
   15cc8:	mul	r7, r2, r7
   15ccc:	ldr	r2, [fp, #8]
   15cd0:	str	r7, [sp, #16]
   15cd4:	cmp	r0, r2
   15cd8:	bne	15c5c <ReadDataSlabN+0x9f4>
   15cdc:	b	16f2c <ReadDataSlabN+0x1cc4>
   15ce0:	ldr	r0, [fp, #20]
   15ce4:	ldr	r5, [fp, #24]
   15ce8:	mov	r4, #0
   15cec:	ldr	r0, [r0]
   15cf0:	sub	r0, r0, #1
   15cf4:	str	r0, [fp, #-72]	; 0xffffffb8
   15cf8:	ldr	ip, [r3]
   15cfc:	str	ip, [sp, #40]	; 0x28
   15d00:	ldr	r0, [r5]
   15d04:	str	r0, [sp, #16]
   15d08:	ldr	r0, [fp, #8]
   15d0c:	cmp	r0, #2
   15d10:	blt	1714c <ReadDataSlabN+0x1ee4>
   15d14:	ldr	r8, [fp, #16]
   15d18:	mov	r1, r3
   15d1c:	mov	r4, #0
   15d20:	mov	r0, #1
   15d24:	mov	r3, ip
   15d28:	ldr	r2, [fp, #20]
   15d2c:	ldr	r2, [r2, r0, lsl #2]
   15d30:	str	r3, [r6, r0, lsl #2]
   15d34:	sub	r5, r2, #1
   15d38:	ldr	r2, [fp, #12]
   15d3c:	str	r5, [r9, r0, lsl #2]
   15d40:	ldr	lr, [r2, r0, lsl #2]
   15d44:	mov	r2, #0
   15d48:	mov	r7, lr
   15d4c:	mul	r3, r7, r3
   15d50:	ldr	r7, [r1, -r2, lsl #2]
   15d54:	add	r2, r2, #1
   15d58:	cmp	r0, r2
   15d5c:	mul	r5, r5, r7
   15d60:	bne	15d4c <ReadDataSlabN+0xae4>
   15d64:	add	r6, sp, #40	; 0x28
   15d68:	str	r5, [r9, r0, lsl #2]
   15d6c:	ldr	r5, [fp, #24]
   15d70:	ldr	r7, [sp, #16]
   15d74:	add	r1, r1, #4
   15d78:	str	r3, [r6, r0, lsl #2]
   15d7c:	ldr	r2, [r8, r0, lsl #2]
   15d80:	mla	r4, r2, ip, r4
   15d84:	ldr	r2, [r5, r0, lsl #2]
   15d88:	add	r0, r0, #1
   15d8c:	mov	ip, r3
   15d90:	mov	r3, lr
   15d94:	mul	r7, r2, r7
   15d98:	ldr	r2, [fp, #8]
   15d9c:	str	r7, [sp, #16]
   15da0:	cmp	r0, r2
   15da4:	bne	15d28 <ReadDataSlabN+0xac0>
   15da8:	b	17150 <ReadDataSlabN+0x1ee8>
   15dac:	ldr	r0, [sp, #12]
   15db0:	cmp	r0, #1
   15db4:	ldr	r0, [fp, #24]
   15db8:	blt	189c4 <ReadDataSlabN+0x375c>
   15dbc:	ldr	r1, [fp, #16]
   15dc0:	add	r0, r0, #4
   15dc4:	mov	r5, #0
   15dc8:	str	r0, [sp, #20]
   15dcc:	add	r0, sp, #80	; 0x50
   15dd0:	orr	ip, r0, #4
   15dd4:	orr	r0, r9, #4
   15dd8:	str	r0, [sp]
   15ddc:	str	ip, [sp, #16]
   15de0:	add	r1, r1, #4
   15de4:	mov	r9, r1
   15de8:	str	r1, [sp, #4]
   15dec:	ldr	r4, [fp, #16]
   15df0:	ldr	r0, [r4]
   15df4:	cmp	r0, #0
   15df8:	beq	15e20 <ReadDataSlabN+0xbb8>
   15dfc:	ldr	r1, [sp, #32]
   15e00:	mov	r2, #1
   15e04:	mul	r1, r0, r1
   15e08:	ldr	r0, [sp, #36]	; 0x24
   15e0c:	ldr	r0, [r0]
   15e10:	bl	1a68 <fseek@plt>
   15e14:	ldr	r0, [r4]
   15e18:	add	r8, r0, r8
   15e1c:	b	15e24 <ReadDataSlabN+0xbbc>
   15e20:	mov	r0, #0
   15e24:	ldr	r6, [fp, #24]
   15e28:	ldr	r2, [sp, #24]
   15e2c:	str	r5, [sp, #8]
   15e30:	ldr	r1, [r6]
   15e34:	cmp	r1, #0
   15e38:	ble	15eb4 <ReadDataSlabN+0xc4c>
   15e3c:	ldr	r6, [sp, #28]
   15e40:	ldr	r9, [sp, #32]
   15e44:	ldr	r4, [sp, #36]	; 0x24
   15e48:	ldr	sl, [fp, #20]
   15e4c:	add	r5, r2, r5, lsl #3
   15e50:	mov	r7, #0
   15e54:	mov	r0, r4
   15e58:	mov	r1, r5
   15e5c:	mov	r2, r6
   15e60:	mov	r3, #1
   15e64:	bl	3790 <ReadDoubleData>
   15e68:	ldr	r0, [sl]
   15e6c:	mov	r2, #1
   15e70:	sub	r0, r0, #1
   15e74:	mul	r1, r0, r9
   15e78:	ldr	r0, [r4]
   15e7c:	bl	1a68 <fseek@plt>
   15e80:	ldr	r0, [fp, #24]
   15e84:	ldr	r2, [sl]
   15e88:	add	r7, r7, #1
   15e8c:	add	r5, r5, #8
   15e90:	ldr	r1, [r0]
   15e94:	add	r8, r2, r8
   15e98:	cmp	r7, r1
   15e9c:	blt	15e54 <ReadDataSlabN+0xbec>
   15ea0:	ldr	r0, [fp, #16]
   15ea4:	ldr	r6, [fp, #24]
   15ea8:	ldr	r9, [sp, #4]
   15eac:	ldr	r0, [r0]
   15eb0:	b	15ebc <ReadDataSlabN+0xc54>
   15eb4:	ldr	r2, [fp, #20]
   15eb8:	ldr	r2, [r2]
   15ebc:	ldr	r3, [fp, #12]
   15ec0:	ldr	r3, [r3]
   15ec4:	mls	r1, r2, r1, r3
   15ec8:	mov	r2, #1
   15ecc:	sub	r4, r1, r0
   15ed0:	ldr	r0, [sp, #32]
   15ed4:	mul	r1, r4, r0
   15ed8:	ldr	r0, [sp, #36]	; 0x24
   15edc:	ldr	r0, [r0]
   15ee0:	bl	1a68 <fseek@plt>
   15ee4:	ldr	r0, [fp, #8]
   15ee8:	add	r8, r4, r8
   15eec:	cmp	r0, #2
   15ef0:	blt	16008 <ReadDataSlabN+0xda0>
   15ef4:	ldr	ip, [sp, #16]
   15ef8:	mov	r0, #0
   15efc:	add	r3, sp, #40	; 0x28
   15f00:	mov	r5, r0
   15f04:	ldr	r0, [ip, r0, lsl #2]
   15f08:	ldr	r1, [sp, #20]
   15f0c:	add	r0, r0, #1
   15f10:	str	r0, [ip, r5, lsl #2]
   15f14:	ldr	r1, [r1, r5, lsl #2]
   15f18:	sdiv	r2, r0, r1
   15f1c:	mls	r0, r2, r1, r0
   15f20:	cmp	r0, #0
   15f24:	bne	15fe4 <ReadDataSlabN+0xd7c>
   15f28:	mov	r0, #0
   15f2c:	str	r0, [ip, r5, lsl #2]
   15f30:	add	r0, r3, r5, lsl #2
   15f34:	ldr	r7, [r0, #4]
   15f38:	sdiv	r0, r8, r7
   15f3c:	mls	r4, r0, r7, r8
   15f40:	cmp	r4, #0
   15f44:	beq	15f8c <ReadDataSlabN+0xd24>
   15f48:	ldr	r6, [r3, r5, lsl #2]
   15f4c:	ldr	r0, [r9, r5, lsl #2]
   15f50:	sub	r1, r7, r4
   15f54:	mov	r2, #1
   15f58:	mla	r0, r0, r6, r1
   15f5c:	ldr	r1, [sp, #32]
   15f60:	mul	r1, r0, r1
   15f64:	ldr	r0, [sp, #36]	; 0x24
   15f68:	ldr	r0, [r0]
   15f6c:	bl	1a68 <fseek@plt>
   15f70:	ldr	r0, [r9, r5, lsl #2]
   15f74:	ldr	ip, [sp, #16]
   15f78:	add	r1, r7, r8
   15f7c:	add	r3, sp, #40	; 0x28
   15f80:	sub	r1, r1, r4
   15f84:	mla	r8, r0, r6, r1
   15f88:	b	15fc8 <ReadDataSlabN+0xd60>
   15f8c:	ldr	r0, [r9, r5, lsl #2]
   15f90:	cmp	r0, #0
   15f94:	beq	15fc8 <ReadDataSlabN+0xd60>
   15f98:	ldr	r1, [sp, #32]
   15f9c:	ldr	r4, [r3, r5, lsl #2]
   15fa0:	mov	r2, #1
   15fa4:	mul	r0, r0, r1
   15fa8:	mul	r1, r0, r4
   15fac:	ldr	r0, [sp, #36]	; 0x24
   15fb0:	ldr	r0, [r0]
   15fb4:	bl	1a68 <fseek@plt>
   15fb8:	ldr	r0, [r9, r5, lsl #2]
   15fbc:	ldr	ip, [sp, #16]
   15fc0:	add	r3, sp, #40	; 0x28
   15fc4:	mla	r8, r0, r4, r8
   15fc8:	ldr	r2, [fp, #8]
   15fcc:	ldr	r6, [fp, #24]
   15fd0:	add	r1, r5, #2
   15fd4:	add	r0, r5, #1
   15fd8:	cmp	r1, r2
   15fdc:	blt	15f00 <ReadDataSlabN+0xc98>
   15fe0:	b	16008 <ReadDataSlabN+0xda0>
   15fe4:	ldr	r0, [sp]
   15fe8:	mov	r2, #1
   15fec:	ldr	r4, [r0, r5, lsl #2]
   15ff0:	ldr	r0, [sp, #32]
   15ff4:	mul	r1, r4, r0
   15ff8:	ldr	r0, [sp, #36]	; 0x24
   15ffc:	ldr	r0, [r0]
   16000:	bl	1a68 <fseek@plt>
   16004:	add	r8, r4, r8
   16008:	ldr	r0, [r6]
   1600c:	ldr	r5, [sp, #8]
   16010:	ldr	r1, [sp, #12]
   16014:	add	r5, r0, r5
   16018:	mov	r0, #0
   1601c:	cmp	r5, r1
   16020:	blt	15dec <ReadDataSlabN+0xb84>
   16024:	b	152f0 <ReadDataSlabN+0x88>
   16028:	ldr	r8, [fp, #16]
   1602c:	ldr	r0, [sp, #32]
   16030:	mov	r2, #1
   16034:	mul	r1, r4, r0
   16038:	ldr	r0, [sp, #36]	; 0x24
   1603c:	ldr	r0, [r0]
   16040:	bl	1a68 <fseek@plt>
   16044:	ldr	r0, [fp, #20]
   16048:	ldr	r0, [r0]
   1604c:	cmp	r0, #1
   16050:	bne	17370 <ReadDataSlabN+0x2108>
   16054:	ldr	r0, [sp, #12]
   16058:	cmp	r0, #1
   1605c:	blt	189c4 <ReadDataSlabN+0x375c>
   16060:	add	r0, r8, #4
   16064:	mov	r6, #0
   16068:	str	r0, [sp, #16]
   1606c:	add	r0, r5, #4
   16070:	str	r0, [sp, #20]
   16074:	add	r0, sp, #80	; 0x50
   16078:	orr	r7, r0, #4
   1607c:	orr	r0, r9, #4
   16080:	str	r0, [sp, #4]
   16084:	ldr	r5, [fp, #16]
   16088:	ldr	r0, [r5]
   1608c:	cmp	r0, #0
   16090:	beq	160b8 <ReadDataSlabN+0xe50>
   16094:	ldr	r9, [sp, #32]
   16098:	mov	r2, #1
   1609c:	mul	r1, r0, r9
   160a0:	ldr	r0, [sp, #36]	; 0x24
   160a4:	ldr	r0, [r0]
   160a8:	bl	1a68 <fseek@plt>
   160ac:	ldr	r0, [r5]
   160b0:	add	r4, r0, r4
   160b4:	b	160bc <ReadDataSlabN+0xe54>
   160b8:	ldr	r9, [sp, #32]
   160bc:	ldr	r0, [sp, #24]
   160c0:	ldr	sl, [sp, #36]	; 0x24
   160c4:	ldr	r2, [sp, #28]
   160c8:	str	r6, [sp, #8]
   160cc:	add	r1, r0, r6, lsl #2
   160d0:	ldr	r0, [fp, #24]
   160d4:	ldr	r3, [r0]
   160d8:	mov	r8, r0
   160dc:	mov	r0, sl
   160e0:	bl	5f94 <ReadSingleData>
   160e4:	ldr	r0, [fp, #12]
   160e8:	ldr	r5, [r5]
   160ec:	ldr	r1, [r8]
   160f0:	mov	r2, #1
   160f4:	ldr	r6, [r0]
   160f8:	sub	r0, r6, r5
   160fc:	sub	r0, r0, r1
   16100:	mul	r1, r0, r9
   16104:	ldr	r0, [sl]
   16108:	bl	1a68 <fseek@plt>
   1610c:	add	r0, r6, r4
   16110:	sub	r4, r0, r5
   16114:	ldr	r0, [fp, #8]
   16118:	cmp	r0, #2
   1611c:	blt	1622c <ReadDataSlabN+0xfc4>
   16120:	mov	r0, #0
   16124:	add	r3, sp, #40	; 0x28
   16128:	mov	r8, r0
   1612c:	ldr	r0, [r7, r0, lsl #2]
   16130:	ldr	r1, [sp, #20]
   16134:	add	r0, r0, #1
   16138:	str	r0, [r7, r8, lsl #2]
   1613c:	ldr	r1, [r1, r8, lsl #2]
   16140:	sdiv	r2, r0, r1
   16144:	mls	r0, r2, r1, r0
   16148:	cmp	r0, #0
   1614c:	bne	16208 <ReadDataSlabN+0xfa0>
   16150:	mov	r0, #0
   16154:	str	r0, [r7, r8, lsl #2]
   16158:	add	r0, r3, r8, lsl #2
   1615c:	ldr	r9, [r0, #4]
   16160:	sdiv	r0, r4, r9
   16164:	mls	r5, r0, r9, r4
   16168:	cmp	r5, #0
   1616c:	beq	161b4 <ReadDataSlabN+0xf4c>
   16170:	ldr	sl, [sp, #16]
   16174:	ldr	r6, [r3, r8, lsl #2]
   16178:	sub	r1, r9, r5
   1617c:	mov	r2, #1
   16180:	ldr	r0, [sl, r8, lsl #2]
   16184:	mla	r0, r0, r6, r1
   16188:	ldr	r1, [sp, #32]
   1618c:	mul	r1, r0, r1
   16190:	ldr	r0, [sp, #36]	; 0x24
   16194:	ldr	r0, [r0]
   16198:	bl	1a68 <fseek@plt>
   1619c:	ldr	r0, [sl, r8, lsl #2]
   161a0:	add	r1, r9, r4
   161a4:	add	r3, sp, #40	; 0x28
   161a8:	sub	r1, r1, r5
   161ac:	mla	r4, r0, r6, r1
   161b0:	b	161f0 <ReadDataSlabN+0xf88>
   161b4:	ldr	r6, [sp, #16]
   161b8:	ldr	r0, [r6, r8, lsl #2]
   161bc:	cmp	r0, #0
   161c0:	beq	161f0 <ReadDataSlabN+0xf88>
   161c4:	ldr	r1, [sp, #32]
   161c8:	ldr	r5, [r3, r8, lsl #2]
   161cc:	mov	r2, #1
   161d0:	mul	r0, r0, r1
   161d4:	mul	r1, r0, r5
   161d8:	ldr	r0, [sp, #36]	; 0x24
   161dc:	ldr	r0, [r0]
   161e0:	bl	1a68 <fseek@plt>
   161e4:	ldr	r0, [r6, r8, lsl #2]
   161e8:	add	r3, sp, #40	; 0x28
   161ec:	mla	r4, r0, r5, r4
   161f0:	ldr	r2, [fp, #8]
   161f4:	add	r1, r8, #2
   161f8:	add	r0, r8, #1
   161fc:	cmp	r1, r2
   16200:	blt	16128 <ReadDataSlabN+0xec0>
   16204:	b	1622c <ReadDataSlabN+0xfc4>
   16208:	ldr	r0, [sp, #4]
   1620c:	mov	r2, #1
   16210:	ldr	r5, [r0, r8, lsl #2]
   16214:	ldr	r0, [sp, #32]
   16218:	mul	r1, r5, r0
   1621c:	ldr	r0, [sp, #36]	; 0x24
   16220:	ldr	r0, [r0]
   16224:	bl	1a68 <fseek@plt>
   16228:	add	r4, r5, r4
   1622c:	ldr	r0, [fp, #24]
   16230:	ldr	r6, [sp, #8]
   16234:	ldr	r1, [sp, #12]
   16238:	ldr	r0, [r0]
   1623c:	add	r6, r0, r6
   16240:	mov	r0, #0
   16244:	cmp	r6, r1
   16248:	blt	16084 <ReadDataSlabN+0xe1c>
   1624c:	b	152f0 <ReadDataSlabN+0x88>
   16250:	ldr	r8, [fp, #16]
   16254:	ldr	r0, [sp, #32]
   16258:	mov	r2, #1
   1625c:	mul	r1, sl, r0
   16260:	ldr	r0, [sp, #36]	; 0x24
   16264:	ldr	r0, [r0]
   16268:	bl	1a68 <fseek@plt>
   1626c:	ldr	r0, [fp, #20]
   16270:	ldr	r0, [r0]
   16274:	cmp	r0, #1
   16278:	bne	175ec <ReadDataSlabN+0x2384>
   1627c:	ldr	r0, [sp, #12]
   16280:	cmp	r0, #1
   16284:	blt	189c4 <ReadDataSlabN+0x375c>
   16288:	add	r0, r8, #4
   1628c:	mov	r4, #0
   16290:	str	r0, [sp, #8]
   16294:	add	r0, r5, #4
   16298:	str	r0, [sp, #20]
   1629c:	add	r0, sp, #80	; 0x50
   162a0:	orr	r7, r0, #4
   162a4:	orr	r0, r9, #4
   162a8:	str	r0, [sp, #4]
   162ac:	ldr	r6, [fp, #16]
   162b0:	ldr	r0, [r6]
   162b4:	cmp	r0, #0
   162b8:	beq	162e0 <ReadDataSlabN+0x1078>
   162bc:	ldr	r5, [sp, #32]
   162c0:	mov	r2, #1
   162c4:	mul	r1, r0, r5
   162c8:	ldr	r0, [sp, #36]	; 0x24
   162cc:	ldr	r0, [r0]
   162d0:	bl	1a68 <fseek@plt>
   162d4:	ldr	r0, [r6]
   162d8:	add	sl, r0, sl
   162dc:	b	162e4 <ReadDataSlabN+0x107c>
   162e0:	ldr	r5, [sp, #32]
   162e4:	ldr	r0, [sp, #24]
   162e8:	str	r4, [sp, #16]
   162ec:	ldr	r2, [sp, #28]
   162f0:	add	r1, r0, r4
   162f4:	ldr	r0, [fp, #24]
   162f8:	ldr	r4, [sp, #36]	; 0x24
   162fc:	ldr	r3, [r0]
   16300:	mov	r9, r0
   16304:	mov	r0, r4
   16308:	bl	11cec <ReadInt8Data>
   1630c:	ldr	r0, [fp, #12]
   16310:	ldr	r8, [r6]
   16314:	ldr	r1, [r9]
   16318:	mov	r2, #1
   1631c:	ldr	r6, [r0]
   16320:	sub	r0, r6, r8
   16324:	sub	r0, r0, r1
   16328:	mul	r1, r0, r5
   1632c:	ldr	r0, [r4]
   16330:	bl	1a68 <fseek@plt>
   16334:	add	r0, r6, sl
   16338:	sub	sl, r0, r8
   1633c:	ldr	r0, [fp, #8]
   16340:	cmp	r0, #2
   16344:	blt	16450 <ReadDataSlabN+0x11e8>
   16348:	ldr	r4, [sp, #8]
   1634c:	mov	r0, #0
   16350:	add	r3, sp, #40	; 0x28
   16354:	mov	r8, r0
   16358:	ldr	r0, [r7, r0, lsl #2]
   1635c:	ldr	r1, [sp, #20]
   16360:	add	r0, r0, #1
   16364:	str	r0, [r7, r8, lsl #2]
   16368:	ldr	r1, [r1, r8, lsl #2]
   1636c:	sdiv	r2, r0, r1
   16370:	mls	r0, r2, r1, r0
   16374:	cmp	r0, #0
   16378:	bne	1642c <ReadDataSlabN+0x11c4>
   1637c:	mov	r0, #0
   16380:	str	r0, [r7, r8, lsl #2]
   16384:	add	r0, r3, r8, lsl #2
   16388:	ldr	r9, [r0, #4]
   1638c:	sdiv	r0, sl, r9
   16390:	mls	r6, r0, r9, sl
   16394:	cmp	r6, #0
   16398:	beq	163dc <ReadDataSlabN+0x1174>
   1639c:	ldr	r5, [r3, r8, lsl #2]
   163a0:	ldr	r0, [r4, r8, lsl #2]
   163a4:	sub	r1, r9, r6
   163a8:	mov	r2, #1
   163ac:	mla	r0, r0, r5, r1
   163b0:	ldr	r1, [sp, #32]
   163b4:	mul	r1, r0, r1
   163b8:	ldr	r0, [sp, #36]	; 0x24
   163bc:	ldr	r0, [r0]
   163c0:	bl	1a68 <fseek@plt>
   163c4:	ldr	r0, [r4, r8, lsl #2]
   163c8:	add	r1, r9, sl
   163cc:	add	r3, sp, #40	; 0x28
   163d0:	sub	r1, r1, r6
   163d4:	mla	sl, r0, r5, r1
   163d8:	b	16414 <ReadDataSlabN+0x11ac>
   163dc:	ldr	r0, [r4, r8, lsl #2]
   163e0:	cmp	r0, #0
   163e4:	beq	16414 <ReadDataSlabN+0x11ac>
   163e8:	ldr	r1, [sp, #32]
   163ec:	ldr	r5, [r3, r8, lsl #2]
   163f0:	mov	r2, #1
   163f4:	mul	r0, r0, r1
   163f8:	mul	r1, r0, r5
   163fc:	ldr	r0, [sp, #36]	; 0x24
   16400:	ldr	r0, [r0]
   16404:	bl	1a68 <fseek@plt>
   16408:	ldr	r0, [r4, r8, lsl #2]
   1640c:	add	r3, sp, #40	; 0x28
   16410:	mla	sl, r0, r5, sl
   16414:	ldr	r2, [fp, #8]
   16418:	add	r1, r8, #2
   1641c:	add	r0, r8, #1
   16420:	cmp	r1, r2
   16424:	blt	16354 <ReadDataSlabN+0x10ec>
   16428:	b	16450 <ReadDataSlabN+0x11e8>
   1642c:	ldr	r0, [sp, #4]
   16430:	mov	r2, #1
   16434:	ldr	r5, [r0, r8, lsl #2]
   16438:	ldr	r0, [sp, #32]
   1643c:	mul	r1, r5, r0
   16440:	ldr	r0, [sp, #36]	; 0x24
   16444:	ldr	r0, [r0]
   16448:	bl	1a68 <fseek@plt>
   1644c:	add	sl, r5, sl
   16450:	ldr	r0, [fp, #24]
   16454:	ldr	r4, [sp, #16]
   16458:	ldr	r1, [sp, #12]
   1645c:	ldr	r0, [r0]
   16460:	add	r4, r0, r4
   16464:	mov	r0, #0
   16468:	cmp	r4, r1
   1646c:	blt	162ac <ReadDataSlabN+0x1044>
   16470:	b	152f0 <ReadDataSlabN+0x88>
   16474:	ldr	r8, [fp, #16]
   16478:	ldr	r0, [sp, #32]
   1647c:	mov	r2, #1
   16480:	mul	r1, sl, r0
   16484:	ldr	r0, [sp, #36]	; 0x24
   16488:	ldr	r0, [r0]
   1648c:	bl	1a68 <fseek@plt>
   16490:	ldr	r0, [fp, #20]
   16494:	ldr	r0, [r0]
   16498:	cmp	r0, #1
   1649c:	bne	17864 <ReadDataSlabN+0x25fc>
   164a0:	ldr	r0, [sp, #12]
   164a4:	cmp	r0, #1
   164a8:	blt	189c4 <ReadDataSlabN+0x375c>
   164ac:	add	r0, r8, #4
   164b0:	mov	r4, #0
   164b4:	str	r0, [sp, #8]
   164b8:	add	r0, r5, #4
   164bc:	str	r0, [sp, #20]
   164c0:	add	r0, sp, #80	; 0x50
   164c4:	orr	r7, r0, #4
   164c8:	orr	r0, r9, #4
   164cc:	str	r0, [sp, #4]
   164d0:	ldr	r6, [fp, #16]
   164d4:	ldr	r0, [r6]
   164d8:	cmp	r0, #0
   164dc:	beq	16504 <ReadDataSlabN+0x129c>
   164e0:	ldr	r5, [sp, #32]
   164e4:	mov	r2, #1
   164e8:	mul	r1, r0, r5
   164ec:	ldr	r0, [sp, #36]	; 0x24
   164f0:	ldr	r0, [r0]
   164f4:	bl	1a68 <fseek@plt>
   164f8:	ldr	r0, [r6]
   164fc:	add	sl, r0, sl
   16500:	b	16508 <ReadDataSlabN+0x12a0>
   16504:	ldr	r5, [sp, #32]
   16508:	ldr	r0, [sp, #24]
   1650c:	str	r4, [sp, #16]
   16510:	ldr	r2, [sp, #28]
   16514:	add	r1, r0, r4
   16518:	ldr	r0, [fp, #24]
   1651c:	ldr	r4, [sp, #36]	; 0x24
   16520:	ldr	r3, [r0]
   16524:	mov	r9, r0
   16528:	mov	r0, r4
   1652c:	bl	13690 <ReadUInt8Data>
   16530:	ldr	r0, [fp, #12]
   16534:	ldr	r8, [r6]
   16538:	ldr	r1, [r9]
   1653c:	mov	r2, #1
   16540:	ldr	r6, [r0]
   16544:	sub	r0, r6, r8
   16548:	sub	r0, r0, r1
   1654c:	mul	r1, r0, r5
   16550:	ldr	r0, [r4]
   16554:	bl	1a68 <fseek@plt>
   16558:	add	r0, r6, sl
   1655c:	sub	sl, r0, r8
   16560:	ldr	r0, [fp, #8]
   16564:	cmp	r0, #2
   16568:	blt	16674 <ReadDataSlabN+0x140c>
   1656c:	ldr	r4, [sp, #8]
   16570:	mov	r0, #0
   16574:	add	r3, sp, #40	; 0x28
   16578:	mov	r8, r0
   1657c:	ldr	r0, [r7, r0, lsl #2]
   16580:	ldr	r1, [sp, #20]
   16584:	add	r0, r0, #1
   16588:	str	r0, [r7, r8, lsl #2]
   1658c:	ldr	r1, [r1, r8, lsl #2]
   16590:	sdiv	r2, r0, r1
   16594:	mls	r0, r2, r1, r0
   16598:	cmp	r0, #0
   1659c:	bne	16650 <ReadDataSlabN+0x13e8>
   165a0:	mov	r0, #0
   165a4:	str	r0, [r7, r8, lsl #2]
   165a8:	add	r0, r3, r8, lsl #2
   165ac:	ldr	r9, [r0, #4]
   165b0:	sdiv	r0, sl, r9
   165b4:	mls	r6, r0, r9, sl
   165b8:	cmp	r6, #0
   165bc:	beq	16600 <ReadDataSlabN+0x1398>
   165c0:	ldr	r5, [r3, r8, lsl #2]
   165c4:	ldr	r0, [r4, r8, lsl #2]
   165c8:	sub	r1, r9, r6
   165cc:	mov	r2, #1
   165d0:	mla	r0, r0, r5, r1
   165d4:	ldr	r1, [sp, #32]
   165d8:	mul	r1, r0, r1
   165dc:	ldr	r0, [sp, #36]	; 0x24
   165e0:	ldr	r0, [r0]
   165e4:	bl	1a68 <fseek@plt>
   165e8:	ldr	r0, [r4, r8, lsl #2]
   165ec:	add	r1, r9, sl
   165f0:	add	r3, sp, #40	; 0x28
   165f4:	sub	r1, r1, r6
   165f8:	mla	sl, r0, r5, r1
   165fc:	b	16638 <ReadDataSlabN+0x13d0>
   16600:	ldr	r0, [r4, r8, lsl #2]
   16604:	cmp	r0, #0
   16608:	beq	16638 <ReadDataSlabN+0x13d0>
   1660c:	ldr	r1, [sp, #32]
   16610:	ldr	r5, [r3, r8, lsl #2]
   16614:	mov	r2, #1
   16618:	mul	r0, r0, r1
   1661c:	mul	r1, r0, r5
   16620:	ldr	r0, [sp, #36]	; 0x24
   16624:	ldr	r0, [r0]
   16628:	bl	1a68 <fseek@plt>
   1662c:	ldr	r0, [r4, r8, lsl #2]
   16630:	add	r3, sp, #40	; 0x28
   16634:	mla	sl, r0, r5, sl
   16638:	ldr	r2, [fp, #8]
   1663c:	add	r1, r8, #2
   16640:	add	r0, r8, #1
   16644:	cmp	r1, r2
   16648:	blt	16578 <ReadDataSlabN+0x1310>
   1664c:	b	16674 <ReadDataSlabN+0x140c>
   16650:	ldr	r0, [sp, #4]
   16654:	mov	r2, #1
   16658:	ldr	r5, [r0, r8, lsl #2]
   1665c:	ldr	r0, [sp, #32]
   16660:	mul	r1, r5, r0
   16664:	ldr	r0, [sp, #36]	; 0x24
   16668:	ldr	r0, [r0]
   1666c:	bl	1a68 <fseek@plt>
   16670:	add	sl, r5, sl
   16674:	ldr	r0, [fp, #24]
   16678:	ldr	r4, [sp, #16]
   1667c:	ldr	r1, [sp, #12]
   16680:	ldr	r0, [r0]
   16684:	add	r4, r0, r4
   16688:	mov	r0, #0
   1668c:	cmp	r4, r1
   16690:	blt	164d0 <ReadDataSlabN+0x1268>
   16694:	b	152f0 <ReadDataSlabN+0x88>
   16698:	ldr	r8, [fp, #16]
   1669c:	ldr	r0, [sp, #32]
   166a0:	mov	r2, #1
   166a4:	mul	r1, r4, r0
   166a8:	ldr	r0, [sp, #36]	; 0x24
   166ac:	ldr	r0, [r0]
   166b0:	bl	1a68 <fseek@plt>
   166b4:	ldr	r0, [fp, #20]
   166b8:	ldr	r0, [r0]
   166bc:	cmp	r0, #1
   166c0:	bne	17adc <ReadDataSlabN+0x2874>
   166c4:	ldr	r0, [sp, #16]
   166c8:	cmp	r0, #1
   166cc:	blt	189c4 <ReadDataSlabN+0x375c>
   166d0:	add	r0, r5, #4
   166d4:	add	sl, r8, #4
   166d8:	mov	r5, #0
   166dc:	str	r0, [sp, #20]
   166e0:	add	r0, sp, #80	; 0x50
   166e4:	str	sl, [sp, #8]
   166e8:	orr	r7, r0, #4
   166ec:	orr	r0, r9, #4
   166f0:	str	r0, [sp, #4]
   166f4:	ldr	r6, [fp, #16]
   166f8:	ldr	r0, [r6]
   166fc:	cmp	r0, #0
   16700:	beq	16728 <ReadDataSlabN+0x14c0>
   16704:	ldr	sl, [sp, #32]
   16708:	mov	r2, #1
   1670c:	mul	r1, r0, sl
   16710:	ldr	r0, [sp, #36]	; 0x24
   16714:	ldr	r0, [r0]
   16718:	bl	1a68 <fseek@plt>
   1671c:	ldr	r0, [r6]
   16720:	add	r4, r0, r4
   16724:	b	1672c <ReadDataSlabN+0x14c4>
   16728:	ldr	sl, [sp, #32]
   1672c:	ldr	r0, [sp, #24]
   16730:	str	r5, [sp, #12]
   16734:	ldr	r2, [sp, #28]
   16738:	add	r1, r0, r5, lsl #1
   1673c:	ldr	r0, [fp, #24]
   16740:	ldr	r5, [sp, #36]	; 0x24
   16744:	ldr	r3, [r0]
   16748:	mov	r9, r0
   1674c:	mov	r0, r5
   16750:	bl	e8ac <ReadInt16Data>
   16754:	ldr	r0, [fp, #12]
   16758:	ldr	r8, [r6]
   1675c:	ldr	r1, [r9]
   16760:	mov	r2, #1
   16764:	ldr	r6, [r0]
   16768:	sub	r0, r6, r8
   1676c:	sub	r0, r0, r1
   16770:	mul	r1, r0, sl
   16774:	ldr	r0, [r5]
   16778:	bl	1a68 <fseek@plt>
   1677c:	add	r0, r6, r4
   16780:	sub	r4, r0, r8
   16784:	ldr	r0, [fp, #8]
   16788:	cmp	r0, #2
   1678c:	blt	16898 <ReadDataSlabN+0x1630>
   16790:	ldr	sl, [sp, #8]
   16794:	mov	r0, #0
   16798:	add	r3, sp, #40	; 0x28
   1679c:	mov	r8, r0
   167a0:	ldr	r0, [r7, r0, lsl #2]
   167a4:	ldr	r1, [sp, #20]
   167a8:	add	r0, r0, #1
   167ac:	str	r0, [r7, r8, lsl #2]
   167b0:	ldr	r1, [r1, r8, lsl #2]
   167b4:	sdiv	r2, r0, r1
   167b8:	mls	r0, r2, r1, r0
   167bc:	cmp	r0, #0
   167c0:	bne	16874 <ReadDataSlabN+0x160c>
   167c4:	mov	r0, #0
   167c8:	str	r0, [r7, r8, lsl #2]
   167cc:	add	r0, r3, r8, lsl #2
   167d0:	ldr	r9, [r0, #4]
   167d4:	sdiv	r0, r4, r9
   167d8:	mls	r6, r0, r9, r4
   167dc:	cmp	r6, #0
   167e0:	beq	16824 <ReadDataSlabN+0x15bc>
   167e4:	ldr	r5, [r3, r8, lsl #2]
   167e8:	ldr	r0, [sl, r8, lsl #2]
   167ec:	sub	r1, r9, r6
   167f0:	mov	r2, #1
   167f4:	mla	r0, r0, r5, r1
   167f8:	ldr	r1, [sp, #32]
   167fc:	mul	r1, r0, r1
   16800:	ldr	r0, [sp, #36]	; 0x24
   16804:	ldr	r0, [r0]
   16808:	bl	1a68 <fseek@plt>
   1680c:	ldr	r0, [sl, r8, lsl #2]
   16810:	add	r1, r9, r4
   16814:	add	r3, sp, #40	; 0x28
   16818:	sub	r1, r1, r6
   1681c:	mla	r4, r0, r5, r1
   16820:	b	1685c <ReadDataSlabN+0x15f4>
   16824:	ldr	r0, [sl, r8, lsl #2]
   16828:	cmp	r0, #0
   1682c:	beq	1685c <ReadDataSlabN+0x15f4>
   16830:	ldr	r1, [sp, #32]
   16834:	ldr	r5, [r3, r8, lsl #2]
   16838:	mov	r2, #1
   1683c:	mul	r0, r0, r1
   16840:	mul	r1, r0, r5
   16844:	ldr	r0, [sp, #36]	; 0x24
   16848:	ldr	r0, [r0]
   1684c:	bl	1a68 <fseek@plt>
   16850:	ldr	r0, [sl, r8, lsl #2]
   16854:	add	r3, sp, #40	; 0x28
   16858:	mla	r4, r0, r5, r4
   1685c:	ldr	r2, [fp, #8]
   16860:	add	r1, r8, #2
   16864:	add	r0, r8, #1
   16868:	cmp	r1, r2
   1686c:	blt	1679c <ReadDataSlabN+0x1534>
   16870:	b	16898 <ReadDataSlabN+0x1630>
   16874:	ldr	r0, [sp, #4]
   16878:	mov	r2, #1
   1687c:	ldr	r5, [r0, r8, lsl #2]
   16880:	ldr	r0, [sp, #32]
   16884:	mul	r1, r5, r0
   16888:	ldr	r0, [sp, #36]	; 0x24
   1688c:	ldr	r0, [r0]
   16890:	bl	1a68 <fseek@plt>
   16894:	add	r4, r5, r4
   16898:	ldr	r0, [fp, #24]
   1689c:	ldr	r5, [sp, #12]
   168a0:	ldr	r1, [sp, #16]
   168a4:	ldr	r0, [r0]
   168a8:	add	r5, r0, r5
   168ac:	mov	r0, #0
   168b0:	cmp	r5, r1
   168b4:	blt	166f4 <ReadDataSlabN+0x148c>
   168b8:	b	152f0 <ReadDataSlabN+0x88>
   168bc:	ldr	r8, [fp, #16]
   168c0:	ldr	r0, [sp, #32]
   168c4:	mov	r2, #1
   168c8:	mul	r1, r4, r0
   168cc:	ldr	r0, [sp, #36]	; 0x24
   168d0:	ldr	r0, [r0]
   168d4:	bl	1a68 <fseek@plt>
   168d8:	ldr	r0, [fp, #20]
   168dc:	ldr	r0, [r0]
   168e0:	cmp	r0, #1
   168e4:	bne	17d58 <ReadDataSlabN+0x2af0>
   168e8:	ldr	r0, [sp, #16]
   168ec:	cmp	r0, #1
   168f0:	blt	189c4 <ReadDataSlabN+0x375c>
   168f4:	add	r0, r5, #4
   168f8:	add	sl, r8, #4
   168fc:	mov	r5, #0
   16900:	str	r0, [sp, #20]
   16904:	add	r0, sp, #80	; 0x50
   16908:	str	sl, [sp, #8]
   1690c:	orr	r7, r0, #4
   16910:	orr	r0, r9, #4
   16914:	str	r0, [sp, #4]
   16918:	ldr	r6, [fp, #16]
   1691c:	ldr	r0, [r6]
   16920:	cmp	r0, #0
   16924:	beq	1694c <ReadDataSlabN+0x16e4>
   16928:	ldr	sl, [sp, #32]
   1692c:	mov	r2, #1
   16930:	mul	r1, r0, sl
   16934:	ldr	r0, [sp, #36]	; 0x24
   16938:	ldr	r0, [r0]
   1693c:	bl	1a68 <fseek@plt>
   16940:	ldr	r0, [r6]
   16944:	add	r4, r0, r4
   16948:	b	16950 <ReadDataSlabN+0x16e8>
   1694c:	ldr	sl, [sp, #32]
   16950:	ldr	r0, [sp, #24]
   16954:	str	r5, [sp, #12]
   16958:	ldr	r2, [sp, #28]
   1695c:	add	r1, r0, r5, lsl #1
   16960:	ldr	r0, [fp, #24]
   16964:	ldr	r5, [sp, #36]	; 0x24
   16968:	ldr	r3, [r0]
   1696c:	mov	r9, r0
   16970:	mov	r0, r5
   16974:	bl	102cc <ReadUInt16Data>
   16978:	ldr	r0, [fp, #12]
   1697c:	ldr	r8, [r6]
   16980:	ldr	r1, [r9]
   16984:	mov	r2, #1
   16988:	ldr	r6, [r0]
   1698c:	sub	r0, r6, r8
   16990:	sub	r0, r0, r1
   16994:	mul	r1, r0, sl
   16998:	ldr	r0, [r5]
   1699c:	bl	1a68 <fseek@plt>
   169a0:	add	r0, r6, r4
   169a4:	sub	r4, r0, r8
   169a8:	ldr	r0, [fp, #8]
   169ac:	cmp	r0, #2
   169b0:	blt	16abc <ReadDataSlabN+0x1854>
   169b4:	ldr	sl, [sp, #8]
   169b8:	mov	r0, #0
   169bc:	add	r3, sp, #40	; 0x28
   169c0:	mov	r8, r0
   169c4:	ldr	r0, [r7, r0, lsl #2]
   169c8:	ldr	r1, [sp, #20]
   169cc:	add	r0, r0, #1
   169d0:	str	r0, [r7, r8, lsl #2]
   169d4:	ldr	r1, [r1, r8, lsl #2]
   169d8:	sdiv	r2, r0, r1
   169dc:	mls	r0, r2, r1, r0
   169e0:	cmp	r0, #0
   169e4:	bne	16a98 <ReadDataSlabN+0x1830>
   169e8:	mov	r0, #0
   169ec:	str	r0, [r7, r8, lsl #2]
   169f0:	add	r0, r3, r8, lsl #2
   169f4:	ldr	r9, [r0, #4]
   169f8:	sdiv	r0, r4, r9
   169fc:	mls	r6, r0, r9, r4
   16a00:	cmp	r6, #0
   16a04:	beq	16a48 <ReadDataSlabN+0x17e0>
   16a08:	ldr	r5, [r3, r8, lsl #2]
   16a0c:	ldr	r0, [sl, r8, lsl #2]
   16a10:	sub	r1, r9, r6
   16a14:	mov	r2, #1
   16a18:	mla	r0, r0, r5, r1
   16a1c:	ldr	r1, [sp, #32]
   16a20:	mul	r1, r0, r1
   16a24:	ldr	r0, [sp, #36]	; 0x24
   16a28:	ldr	r0, [r0]
   16a2c:	bl	1a68 <fseek@plt>
   16a30:	ldr	r0, [sl, r8, lsl #2]
   16a34:	add	r1, r9, r4
   16a38:	add	r3, sp, #40	; 0x28
   16a3c:	sub	r1, r1, r6
   16a40:	mla	r4, r0, r5, r1
   16a44:	b	16a80 <ReadDataSlabN+0x1818>
   16a48:	ldr	r0, [sl, r8, lsl #2]
   16a4c:	cmp	r0, #0
   16a50:	beq	16a80 <ReadDataSlabN+0x1818>
   16a54:	ldr	r1, [sp, #32]
   16a58:	ldr	r5, [r3, r8, lsl #2]
   16a5c:	mov	r2, #1
   16a60:	mul	r0, r0, r1
   16a64:	mul	r1, r0, r5
   16a68:	ldr	r0, [sp, #36]	; 0x24
   16a6c:	ldr	r0, [r0]
   16a70:	bl	1a68 <fseek@plt>
   16a74:	ldr	r0, [sl, r8, lsl #2]
   16a78:	add	r3, sp, #40	; 0x28
   16a7c:	mla	r4, r0, r5, r4
   16a80:	ldr	r2, [fp, #8]
   16a84:	add	r1, r8, #2
   16a88:	add	r0, r8, #1
   16a8c:	cmp	r1, r2
   16a90:	blt	169c0 <ReadDataSlabN+0x1758>
   16a94:	b	16abc <ReadDataSlabN+0x1854>
   16a98:	ldr	r0, [sp, #4]
   16a9c:	mov	r2, #1
   16aa0:	ldr	r5, [r0, r8, lsl #2]
   16aa4:	ldr	r0, [sp, #32]
   16aa8:	mul	r1, r5, r0
   16aac:	ldr	r0, [sp, #36]	; 0x24
   16ab0:	ldr	r0, [r0]
   16ab4:	bl	1a68 <fseek@plt>
   16ab8:	add	r4, r5, r4
   16abc:	ldr	r0, [fp, #24]
   16ac0:	ldr	r5, [sp, #12]
   16ac4:	ldr	r1, [sp, #16]
   16ac8:	ldr	r0, [r0]
   16acc:	add	r5, r0, r5
   16ad0:	mov	r0, #0
   16ad4:	cmp	r5, r1
   16ad8:	blt	16918 <ReadDataSlabN+0x16b0>
   16adc:	b	152f0 <ReadDataSlabN+0x88>
   16ae0:	ldr	r8, [fp, #16]
   16ae4:	ldr	r0, [sp, #32]
   16ae8:	mov	r2, #1
   16aec:	mul	r1, r4, r0
   16af0:	ldr	r0, [sp, #36]	; 0x24
   16af4:	ldr	r0, [r0]
   16af8:	bl	1a68 <fseek@plt>
   16afc:	ldr	r0, [fp, #20]
   16b00:	ldr	r0, [r0]
   16b04:	cmp	r0, #1
   16b08:	bne	17fd4 <ReadDataSlabN+0x2d6c>
   16b0c:	ldr	r0, [sp, #16]
   16b10:	cmp	r0, #1
   16b14:	blt	189c4 <ReadDataSlabN+0x375c>
   16b18:	add	r0, r5, #4
   16b1c:	add	sl, r8, #4
   16b20:	mov	r5, #0
   16b24:	str	r0, [sp, #20]
   16b28:	add	r0, sp, #80	; 0x50
   16b2c:	str	sl, [sp, #8]
   16b30:	orr	r7, r0, #4
   16b34:	orr	r0, r9, #4
   16b38:	str	r0, [sp, #4]
   16b3c:	ldr	r6, [fp, #16]
   16b40:	ldr	r0, [r6]
   16b44:	cmp	r0, #0
   16b48:	beq	16b70 <ReadDataSlabN+0x1908>
   16b4c:	ldr	sl, [sp, #32]
   16b50:	mov	r2, #1
   16b54:	mul	r1, r0, sl
   16b58:	ldr	r0, [sp, #36]	; 0x24
   16b5c:	ldr	r0, [r0]
   16b60:	bl	1a68 <fseek@plt>
   16b64:	ldr	r0, [r6]
   16b68:	add	r4, r0, r4
   16b6c:	b	16b74 <ReadDataSlabN+0x190c>
   16b70:	ldr	sl, [sp, #32]
   16b74:	ldr	r0, [sp, #24]
   16b78:	str	r5, [sp, #12]
   16b7c:	ldr	r2, [sp, #28]
   16b80:	add	r1, r0, r5, lsl #2
   16b84:	ldr	r0, [fp, #24]
   16b88:	ldr	r5, [sp, #36]	; 0x24
   16b8c:	ldr	r3, [r0]
   16b90:	mov	r9, r0
   16b94:	mov	r0, r5
   16b98:	bl	b46c <ReadInt32Data>
   16b9c:	ldr	r0, [fp, #12]
   16ba0:	ldr	r8, [r6]
   16ba4:	ldr	r1, [r9]
   16ba8:	mov	r2, #1
   16bac:	ldr	r6, [r0]
   16bb0:	sub	r0, r6, r8
   16bb4:	sub	r0, r0, r1
   16bb8:	mul	r1, r0, sl
   16bbc:	ldr	r0, [r5]
   16bc0:	bl	1a68 <fseek@plt>
   16bc4:	add	r0, r6, r4
   16bc8:	sub	r4, r0, r8
   16bcc:	ldr	r0, [fp, #8]
   16bd0:	cmp	r0, #2
   16bd4:	blt	16ce0 <ReadDataSlabN+0x1a78>
   16bd8:	ldr	sl, [sp, #8]
   16bdc:	mov	r0, #0
   16be0:	add	r3, sp, #40	; 0x28
   16be4:	mov	r8, r0
   16be8:	ldr	r0, [r7, r0, lsl #2]
   16bec:	ldr	r1, [sp, #20]
   16bf0:	add	r0, r0, #1
   16bf4:	str	r0, [r7, r8, lsl #2]
   16bf8:	ldr	r1, [r1, r8, lsl #2]
   16bfc:	sdiv	r2, r0, r1
   16c00:	mls	r0, r2, r1, r0
   16c04:	cmp	r0, #0
   16c08:	bne	16cbc <ReadDataSlabN+0x1a54>
   16c0c:	mov	r0, #0
   16c10:	str	r0, [r7, r8, lsl #2]
   16c14:	add	r0, r3, r8, lsl #2
   16c18:	ldr	r9, [r0, #4]
   16c1c:	sdiv	r0, r4, r9
   16c20:	mls	r6, r0, r9, r4
   16c24:	cmp	r6, #0
   16c28:	beq	16c6c <ReadDataSlabN+0x1a04>
   16c2c:	ldr	r5, [r3, r8, lsl #2]
   16c30:	ldr	r0, [sl, r8, lsl #2]
   16c34:	sub	r1, r9, r6
   16c38:	mov	r2, #1
   16c3c:	mla	r0, r0, r5, r1
   16c40:	ldr	r1, [sp, #32]
   16c44:	mul	r1, r0, r1
   16c48:	ldr	r0, [sp, #36]	; 0x24
   16c4c:	ldr	r0, [r0]
   16c50:	bl	1a68 <fseek@plt>
   16c54:	ldr	r0, [sl, r8, lsl #2]
   16c58:	add	r1, r9, r4
   16c5c:	add	r3, sp, #40	; 0x28
   16c60:	sub	r1, r1, r6
   16c64:	mla	r4, r0, r5, r1
   16c68:	b	16ca4 <ReadDataSlabN+0x1a3c>
   16c6c:	ldr	r0, [sl, r8, lsl #2]
   16c70:	cmp	r0, #0
   16c74:	beq	16ca4 <ReadDataSlabN+0x1a3c>
   16c78:	ldr	r1, [sp, #32]
   16c7c:	ldr	r5, [r3, r8, lsl #2]
   16c80:	mov	r2, #1
   16c84:	mul	r0, r0, r1
   16c88:	mul	r1, r0, r5
   16c8c:	ldr	r0, [sp, #36]	; 0x24
   16c90:	ldr	r0, [r0]
   16c94:	bl	1a68 <fseek@plt>
   16c98:	ldr	r0, [sl, r8, lsl #2]
   16c9c:	add	r3, sp, #40	; 0x28
   16ca0:	mla	r4, r0, r5, r4
   16ca4:	ldr	r2, [fp, #8]
   16ca8:	add	r1, r8, #2
   16cac:	add	r0, r8, #1
   16cb0:	cmp	r1, r2
   16cb4:	blt	16be4 <ReadDataSlabN+0x197c>
   16cb8:	b	16ce0 <ReadDataSlabN+0x1a78>
   16cbc:	ldr	r0, [sp, #4]
   16cc0:	mov	r2, #1
   16cc4:	ldr	r5, [r0, r8, lsl #2]
   16cc8:	ldr	r0, [sp, #32]
   16ccc:	mul	r1, r5, r0
   16cd0:	ldr	r0, [sp, #36]	; 0x24
   16cd4:	ldr	r0, [r0]
   16cd8:	bl	1a68 <fseek@plt>
   16cdc:	add	r4, r5, r4
   16ce0:	ldr	r0, [fp, #24]
   16ce4:	ldr	r5, [sp, #12]
   16ce8:	ldr	r1, [sp, #16]
   16cec:	ldr	r0, [r0]
   16cf0:	add	r5, r0, r5
   16cf4:	mov	r0, #0
   16cf8:	cmp	r5, r1
   16cfc:	blt	16b3c <ReadDataSlabN+0x18d4>
   16d00:	b	152f0 <ReadDataSlabN+0x88>
   16d04:	ldr	r8, [fp, #16]
   16d08:	ldr	r0, [sp, #32]
   16d0c:	mov	r2, #1
   16d10:	mul	r1, r4, r0
   16d14:	ldr	r0, [sp, #36]	; 0x24
   16d18:	ldr	r0, [r0]
   16d1c:	bl	1a68 <fseek@plt>
   16d20:	ldr	r0, [fp, #20]
   16d24:	ldr	r0, [r0]
   16d28:	cmp	r0, #1
   16d2c:	bne	18250 <ReadDataSlabN+0x2fe8>
   16d30:	ldr	r0, [sp, #16]
   16d34:	cmp	r0, #1
   16d38:	blt	189c4 <ReadDataSlabN+0x375c>
   16d3c:	add	r0, r5, #4
   16d40:	add	sl, r8, #4
   16d44:	mov	r5, #0
   16d48:	str	r0, [sp, #20]
   16d4c:	add	r0, sp, #80	; 0x50
   16d50:	str	sl, [sp, #8]
   16d54:	orr	r7, r0, #4
   16d58:	orr	r0, r9, #4
   16d5c:	str	r0, [sp, #4]
   16d60:	ldr	r6, [fp, #16]
   16d64:	ldr	r0, [r6]
   16d68:	cmp	r0, #0
   16d6c:	beq	16d94 <ReadDataSlabN+0x1b2c>
   16d70:	ldr	sl, [sp, #32]
   16d74:	mov	r2, #1
   16d78:	mul	r1, r0, sl
   16d7c:	ldr	r0, [sp, #36]	; 0x24
   16d80:	ldr	r0, [r0]
   16d84:	bl	1a68 <fseek@plt>
   16d88:	ldr	r0, [r6]
   16d8c:	add	r4, r0, r4
   16d90:	b	16d98 <ReadDataSlabN+0x1b30>
   16d94:	ldr	sl, [sp, #32]
   16d98:	ldr	r0, [sp, #24]
   16d9c:	str	r5, [sp, #12]
   16da0:	ldr	r2, [sp, #28]
   16da4:	add	r1, r0, r5, lsl #2
   16da8:	ldr	r0, [fp, #24]
   16dac:	ldr	r5, [sp, #36]	; 0x24
   16db0:	ldr	r3, [r0]
   16db4:	mov	r9, r0
   16db8:	mov	r0, r5
   16dbc:	bl	ce8c <ReadUInt32Data>
   16dc0:	ldr	r0, [fp, #12]
   16dc4:	ldr	r8, [r6]
   16dc8:	ldr	r1, [r9]
   16dcc:	mov	r2, #1
   16dd0:	ldr	r6, [r0]
   16dd4:	sub	r0, r6, r8
   16dd8:	sub	r0, r0, r1
   16ddc:	mul	r1, r0, sl
   16de0:	ldr	r0, [r5]
   16de4:	bl	1a68 <fseek@plt>
   16de8:	add	r0, r6, r4
   16dec:	sub	r4, r0, r8
   16df0:	ldr	r0, [fp, #8]
   16df4:	cmp	r0, #2
   16df8:	blt	16f04 <ReadDataSlabN+0x1c9c>
   16dfc:	ldr	sl, [sp, #8]
   16e00:	mov	r0, #0
   16e04:	add	r3, sp, #40	; 0x28
   16e08:	mov	r8, r0
   16e0c:	ldr	r0, [r7, r0, lsl #2]
   16e10:	ldr	r1, [sp, #20]
   16e14:	add	r0, r0, #1
   16e18:	str	r0, [r7, r8, lsl #2]
   16e1c:	ldr	r1, [r1, r8, lsl #2]
   16e20:	sdiv	r2, r0, r1
   16e24:	mls	r0, r2, r1, r0
   16e28:	cmp	r0, #0
   16e2c:	bne	16ee0 <ReadDataSlabN+0x1c78>
   16e30:	mov	r0, #0
   16e34:	str	r0, [r7, r8, lsl #2]
   16e38:	add	r0, r3, r8, lsl #2
   16e3c:	ldr	r9, [r0, #4]
   16e40:	sdiv	r0, r4, r9
   16e44:	mls	r6, r0, r9, r4
   16e48:	cmp	r6, #0
   16e4c:	beq	16e90 <ReadDataSlabN+0x1c28>
   16e50:	ldr	r5, [r3, r8, lsl #2]
   16e54:	ldr	r0, [sl, r8, lsl #2]
   16e58:	sub	r1, r9, r6
   16e5c:	mov	r2, #1
   16e60:	mla	r0, r0, r5, r1
   16e64:	ldr	r1, [sp, #32]
   16e68:	mul	r1, r0, r1
   16e6c:	ldr	r0, [sp, #36]	; 0x24
   16e70:	ldr	r0, [r0]
   16e74:	bl	1a68 <fseek@plt>
   16e78:	ldr	r0, [sl, r8, lsl #2]
   16e7c:	add	r1, r9, r4
   16e80:	add	r3, sp, #40	; 0x28
   16e84:	sub	r1, r1, r6
   16e88:	mla	r4, r0, r5, r1
   16e8c:	b	16ec8 <ReadDataSlabN+0x1c60>
   16e90:	ldr	r0, [sl, r8, lsl #2]
   16e94:	cmp	r0, #0
   16e98:	beq	16ec8 <ReadDataSlabN+0x1c60>
   16e9c:	ldr	r1, [sp, #32]
   16ea0:	ldr	r5, [r3, r8, lsl #2]
   16ea4:	mov	r2, #1
   16ea8:	mul	r0, r0, r1
   16eac:	mul	r1, r0, r5
   16eb0:	ldr	r0, [sp, #36]	; 0x24
   16eb4:	ldr	r0, [r0]
   16eb8:	bl	1a68 <fseek@plt>
   16ebc:	ldr	r0, [sl, r8, lsl #2]
   16ec0:	add	r3, sp, #40	; 0x28
   16ec4:	mla	r4, r0, r5, r4
   16ec8:	ldr	r2, [fp, #8]
   16ecc:	add	r1, r8, #2
   16ed0:	add	r0, r8, #1
   16ed4:	cmp	r1, r2
   16ed8:	blt	16e08 <ReadDataSlabN+0x1ba0>
   16edc:	b	16f04 <ReadDataSlabN+0x1c9c>
   16ee0:	ldr	r0, [sp, #4]
   16ee4:	mov	r2, #1
   16ee8:	ldr	r5, [r0, r8, lsl #2]
   16eec:	ldr	r0, [sp, #32]
   16ef0:	mul	r1, r5, r0
   16ef4:	ldr	r0, [sp, #36]	; 0x24
   16ef8:	ldr	r0, [r0]
   16efc:	bl	1a68 <fseek@plt>
   16f00:	add	r4, r5, r4
   16f04:	ldr	r0, [fp, #24]
   16f08:	ldr	r5, [sp, #12]
   16f0c:	ldr	r1, [sp, #16]
   16f10:	ldr	r0, [r0]
   16f14:	add	r5, r0, r5
   16f18:	mov	r0, #0
   16f1c:	cmp	r5, r1
   16f20:	blt	16d60 <ReadDataSlabN+0x1af8>
   16f24:	b	152f0 <ReadDataSlabN+0x88>
   16f28:	ldr	r8, [fp, #16]
   16f2c:	ldr	r0, [sp, #32]
   16f30:	mov	r2, #1
   16f34:	mul	r1, r4, r0
   16f38:	ldr	r0, [sp, #36]	; 0x24
   16f3c:	ldr	r0, [r0]
   16f40:	bl	1a68 <fseek@plt>
   16f44:	ldr	r0, [fp, #20]
   16f48:	ldr	r0, [r0]
   16f4c:	cmp	r0, #1
   16f50:	bne	184cc <ReadDataSlabN+0x3264>
   16f54:	ldr	r0, [sp, #16]
   16f58:	cmp	r0, #1
   16f5c:	blt	189c4 <ReadDataSlabN+0x375c>
   16f60:	add	r0, r8, #4
   16f64:	str	r0, [sp, #8]
   16f68:	add	r0, r5, #4
   16f6c:	mov	r5, #0
   16f70:	str	r0, [sp, #20]
   16f74:	add	r0, sp, #80	; 0x50
   16f78:	orr	sl, r0, #4
   16f7c:	orr	r0, r9, #4
   16f80:	str	r0, [sp, #4]
   16f84:	ldr	r6, [fp, #16]
   16f88:	ldr	r0, [r6]
   16f8c:	cmp	r0, #0
   16f90:	beq	16fb8 <ReadDataSlabN+0x1d50>
   16f94:	ldr	r7, [sp, #32]
   16f98:	mov	r2, #1
   16f9c:	mul	r1, r0, r7
   16fa0:	ldr	r0, [sp, #36]	; 0x24
   16fa4:	ldr	r0, [r0]
   16fa8:	bl	1a68 <fseek@plt>
   16fac:	ldr	r0, [r6]
   16fb0:	add	r4, r0, r4
   16fb4:	b	16fbc <ReadDataSlabN+0x1d54>
   16fb8:	ldr	r7, [sp, #32]
   16fbc:	ldr	r0, [sp, #24]
   16fc0:	str	r5, [sp, #12]
   16fc4:	ldr	r2, [sp, #28]
   16fc8:	add	r1, r0, r5, lsl #3
   16fcc:	ldr	r0, [fp, #24]
   16fd0:	ldr	r5, [sp, #36]	; 0x24
   16fd4:	ldr	r3, [r0]
   16fd8:	mov	r9, r0
   16fdc:	mov	r0, r5
   16fe0:	bl	7bbc <ReadInt64Data>
   16fe4:	ldr	r0, [fp, #12]
   16fe8:	ldr	r8, [r6]
   16fec:	ldr	r1, [r9]
   16ff0:	mov	r2, #1
   16ff4:	ldr	r6, [r0]
   16ff8:	sub	r0, r6, r8
   16ffc:	sub	r0, r0, r1
   17000:	mul	r1, r0, r7
   17004:	ldr	r0, [r5]
   17008:	bl	1a68 <fseek@plt>
   1700c:	add	r0, r6, r4
   17010:	sub	r4, r0, r8
   17014:	ldr	r0, [fp, #8]
   17018:	cmp	r0, #2
   1701c:	blt	17128 <ReadDataSlabN+0x1ec0>
   17020:	ldr	r7, [sp, #8]
   17024:	mov	r0, #0
   17028:	add	r3, sp, #40	; 0x28
   1702c:	mov	r8, r0
   17030:	ldr	r0, [sl, r0, lsl #2]
   17034:	ldr	r1, [sp, #20]
   17038:	add	r0, r0, #1
   1703c:	str	r0, [sl, r8, lsl #2]
   17040:	ldr	r1, [r1, r8, lsl #2]
   17044:	sdiv	r2, r0, r1
   17048:	mls	r0, r2, r1, r0
   1704c:	cmp	r0, #0
   17050:	bne	17104 <ReadDataSlabN+0x1e9c>
   17054:	mov	r0, #0
   17058:	str	r0, [sl, r8, lsl #2]
   1705c:	add	r0, r3, r8, lsl #2
   17060:	ldr	r9, [r0, #4]
   17064:	sdiv	r0, r4, r9
   17068:	mls	r6, r0, r9, r4
   1706c:	cmp	r6, #0
   17070:	beq	170b4 <ReadDataSlabN+0x1e4c>
   17074:	ldr	r5, [r3, r8, lsl #2]
   17078:	ldr	r0, [r7, r8, lsl #2]
   1707c:	sub	r1, r9, r6
   17080:	mov	r2, #1
   17084:	mla	r0, r0, r5, r1
   17088:	ldr	r1, [sp, #32]
   1708c:	mul	r1, r0, r1
   17090:	ldr	r0, [sp, #36]	; 0x24
   17094:	ldr	r0, [r0]
   17098:	bl	1a68 <fseek@plt>
   1709c:	ldr	r0, [r7, r8, lsl #2]
   170a0:	add	r1, r9, r4
   170a4:	add	r3, sp, #40	; 0x28
   170a8:	sub	r1, r1, r6
   170ac:	mla	r4, r0, r5, r1
   170b0:	b	170ec <ReadDataSlabN+0x1e84>
   170b4:	ldr	r0, [r7, r8, lsl #2]
   170b8:	cmp	r0, #0
   170bc:	beq	170ec <ReadDataSlabN+0x1e84>
   170c0:	ldr	r1, [sp, #32]
   170c4:	ldr	r5, [r3, r8, lsl #2]
   170c8:	mov	r2, #1
   170cc:	mul	r0, r0, r1
   170d0:	mul	r1, r0, r5
   170d4:	ldr	r0, [sp, #36]	; 0x24
   170d8:	ldr	r0, [r0]
   170dc:	bl	1a68 <fseek@plt>
   170e0:	ldr	r0, [r7, r8, lsl #2]
   170e4:	add	r3, sp, #40	; 0x28
   170e8:	mla	r4, r0, r5, r4
   170ec:	ldr	r2, [fp, #8]
   170f0:	add	r1, r8, #2
   170f4:	add	r0, r8, #1
   170f8:	cmp	r1, r2
   170fc:	blt	1702c <ReadDataSlabN+0x1dc4>
   17100:	b	17128 <ReadDataSlabN+0x1ec0>
   17104:	ldr	r0, [sp, #4]
   17108:	mov	r2, #1
   1710c:	ldr	r5, [r0, r8, lsl #2]
   17110:	ldr	r0, [sp, #32]
   17114:	mul	r1, r5, r0
   17118:	ldr	r0, [sp, #36]	; 0x24
   1711c:	ldr	r0, [r0]
   17120:	bl	1a68 <fseek@plt>
   17124:	add	r4, r5, r4
   17128:	ldr	r0, [fp, #24]
   1712c:	ldr	r5, [sp, #12]
   17130:	ldr	r1, [sp, #16]
   17134:	ldr	r0, [r0]
   17138:	add	r5, r0, r5
   1713c:	mov	r0, #0
   17140:	cmp	r5, r1
   17144:	blt	16f84 <ReadDataSlabN+0x1d1c>
   17148:	b	152f0 <ReadDataSlabN+0x88>
   1714c:	ldr	r8, [fp, #16]
   17150:	ldr	r0, [sp, #32]
   17154:	mov	r2, #1
   17158:	mul	r1, r4, r0
   1715c:	ldr	r0, [sp, #36]	; 0x24
   17160:	ldr	r0, [r0]
   17164:	bl	1a68 <fseek@plt>
   17168:	ldr	r0, [fp, #20]
   1716c:	ldr	r0, [r0]
   17170:	cmp	r0, #1
   17174:	bne	18748 <ReadDataSlabN+0x34e0>
   17178:	ldr	r0, [sp, #16]
   1717c:	cmp	r0, #1
   17180:	blt	189c4 <ReadDataSlabN+0x375c>
   17184:	add	r0, r5, #4
   17188:	add	sl, r8, #4
   1718c:	mov	r5, #0
   17190:	str	r0, [sp, #20]
   17194:	add	r0, sp, #80	; 0x50
   17198:	str	sl, [sp, #8]
   1719c:	orr	r7, r0, #4
   171a0:	orr	r0, r9, #4
   171a4:	str	r0, [sp, #4]
   171a8:	ldr	r6, [fp, #16]
   171ac:	ldr	r0, [r6]
   171b0:	cmp	r0, #0
   171b4:	beq	171dc <ReadDataSlabN+0x1f74>
   171b8:	ldr	sl, [sp, #32]
   171bc:	mov	r2, #1
   171c0:	mul	r1, r0, sl
   171c4:	ldr	r0, [sp, #36]	; 0x24
   171c8:	ldr	r0, [r0]
   171cc:	bl	1a68 <fseek@plt>
   171d0:	ldr	r0, [r6]
   171d4:	add	r4, r0, r4
   171d8:	b	171e0 <ReadDataSlabN+0x1f78>
   171dc:	ldr	sl, [sp, #32]
   171e0:	ldr	r0, [sp, #24]
   171e4:	str	r5, [sp, #12]
   171e8:	ldr	r2, [sp, #28]
   171ec:	add	r1, r0, r5, lsl #3
   171f0:	ldr	r0, [fp, #24]
   171f4:	ldr	r5, [sp, #36]	; 0x24
   171f8:	ldr	r3, [r0]
   171fc:	mov	r9, r0
   17200:	mov	r0, r5
   17204:	bl	9814 <ReadUInt64Data>
   17208:	ldr	r0, [fp, #12]
   1720c:	ldr	r8, [r6]
   17210:	ldr	r1, [r9]
   17214:	mov	r2, #1
   17218:	ldr	r6, [r0]
   1721c:	sub	r0, r6, r8
   17220:	sub	r0, r0, r1
   17224:	mul	r1, r0, sl
   17228:	ldr	r0, [r5]
   1722c:	bl	1a68 <fseek@plt>
   17230:	add	r0, r6, r4
   17234:	sub	r4, r0, r8
   17238:	ldr	r0, [fp, #8]
   1723c:	cmp	r0, #2
   17240:	blt	1734c <ReadDataSlabN+0x20e4>
   17244:	ldr	sl, [sp, #8]
   17248:	mov	r0, #0
   1724c:	add	r3, sp, #40	; 0x28
   17250:	mov	r8, r0
   17254:	ldr	r0, [r7, r0, lsl #2]
   17258:	ldr	r1, [sp, #20]
   1725c:	add	r0, r0, #1
   17260:	str	r0, [r7, r8, lsl #2]
   17264:	ldr	r1, [r1, r8, lsl #2]
   17268:	sdiv	r2, r0, r1
   1726c:	mls	r0, r2, r1, r0
   17270:	cmp	r0, #0
   17274:	bne	17328 <ReadDataSlabN+0x20c0>
   17278:	mov	r0, #0
   1727c:	str	r0, [r7, r8, lsl #2]
   17280:	add	r0, r3, r8, lsl #2
   17284:	ldr	r9, [r0, #4]
   17288:	sdiv	r0, r4, r9
   1728c:	mls	r6, r0, r9, r4
   17290:	cmp	r6, #0
   17294:	beq	172d8 <ReadDataSlabN+0x2070>
   17298:	ldr	r5, [r3, r8, lsl #2]
   1729c:	ldr	r0, [sl, r8, lsl #2]
   172a0:	sub	r1, r9, r6
   172a4:	mov	r2, #1
   172a8:	mla	r0, r0, r5, r1
   172ac:	ldr	r1, [sp, #32]
   172b0:	mul	r1, r0, r1
   172b4:	ldr	r0, [sp, #36]	; 0x24
   172b8:	ldr	r0, [r0]
   172bc:	bl	1a68 <fseek@plt>
   172c0:	ldr	r0, [sl, r8, lsl #2]
   172c4:	add	r1, r9, r4
   172c8:	add	r3, sp, #40	; 0x28
   172cc:	sub	r1, r1, r6
   172d0:	mla	r4, r0, r5, r1
   172d4:	b	17310 <ReadDataSlabN+0x20a8>
   172d8:	ldr	r0, [sl, r8, lsl #2]
   172dc:	cmp	r0, #0
   172e0:	beq	17310 <ReadDataSlabN+0x20a8>
   172e4:	ldr	r1, [sp, #32]
   172e8:	ldr	r5, [r3, r8, lsl #2]
   172ec:	mov	r2, #1
   172f0:	mul	r0, r0, r1
   172f4:	mul	r1, r0, r5
   172f8:	ldr	r0, [sp, #36]	; 0x24
   172fc:	ldr	r0, [r0]
   17300:	bl	1a68 <fseek@plt>
   17304:	ldr	r0, [sl, r8, lsl #2]
   17308:	add	r3, sp, #40	; 0x28
   1730c:	mla	r4, r0, r5, r4
   17310:	ldr	r2, [fp, #8]
   17314:	add	r1, r8, #2
   17318:	add	r0, r8, #1
   1731c:	cmp	r1, r2
   17320:	blt	17250 <ReadDataSlabN+0x1fe8>
   17324:	b	1734c <ReadDataSlabN+0x20e4>
   17328:	ldr	r0, [sp, #4]
   1732c:	mov	r2, #1
   17330:	ldr	r5, [r0, r8, lsl #2]
   17334:	ldr	r0, [sp, #32]
   17338:	mul	r1, r5, r0
   1733c:	ldr	r0, [sp, #36]	; 0x24
   17340:	ldr	r0, [r0]
   17344:	bl	1a68 <fseek@plt>
   17348:	add	r4, r5, r4
   1734c:	ldr	r0, [fp, #24]
   17350:	ldr	r5, [sp, #12]
   17354:	ldr	r1, [sp, #16]
   17358:	ldr	r0, [r0]
   1735c:	add	r5, r0, r5
   17360:	mov	r0, #0
   17364:	cmp	r5, r1
   17368:	blt	171a8 <ReadDataSlabN+0x1f40>
   1736c:	b	152f0 <ReadDataSlabN+0x88>
   17370:	ldr	r0, [sp, #12]
   17374:	cmp	r0, #1
   17378:	blt	189c4 <ReadDataSlabN+0x375c>
   1737c:	add	r0, r5, #4
   17380:	add	r8, r8, #4
   17384:	orr	r1, r9, #4
   17388:	str	r0, [sp, #20]
   1738c:	add	r0, sp, #80	; 0x50
   17390:	str	r1, [sp]
   17394:	str	r8, [sp, #4]
   17398:	orr	r0, r0, #4
   1739c:	mov	r9, r0
   173a0:	mov	r0, #0
   173a4:	str	r0, [sp, #8]
   173a8:	str	r9, [sp, #16]
   173ac:	ldr	r5, [fp, #16]
   173b0:	ldr	r0, [r5]
   173b4:	cmp	r0, #0
   173b8:	beq	173e0 <ReadDataSlabN+0x2178>
   173bc:	ldr	r1, [sp, #32]
   173c0:	mov	r2, #1
   173c4:	mul	r1, r0, r1
   173c8:	ldr	r0, [sp, #36]	; 0x24
   173cc:	ldr	r0, [r0]
   173d0:	bl	1a68 <fseek@plt>
   173d4:	ldr	r0, [r5]
   173d8:	add	r4, r0, r4
   173dc:	b	173e4 <ReadDataSlabN+0x217c>
   173e0:	mov	r0, #0
   173e4:	ldr	r7, [fp, #24]
   173e8:	ldr	r2, [sp, #28]
   173ec:	ldr	r1, [r7]
   173f0:	cmp	r1, #0
   173f4:	ble	1747c <ReadDataSlabN+0x2214>
   173f8:	ldr	r0, [sp, #24]
   173fc:	ldr	r1, [sp, #8]
   17400:	ldr	r8, [sp, #32]
   17404:	ldr	r7, [sp, #36]	; 0x24
   17408:	ldr	sl, [fp, #20]
   1740c:	mov	r9, #0
   17410:	add	r5, r0, r1, lsl #2
   17414:	mov	r0, r7
   17418:	mov	r1, r5
   1741c:	mov	r3, #1
   17420:	mov	r6, r2
   17424:	bl	5f94 <ReadSingleData>
   17428:	ldr	r0, [sl]
   1742c:	mov	r2, #1
   17430:	sub	r0, r0, #1
   17434:	mul	r1, r0, r8
   17438:	ldr	r0, [r7]
   1743c:	bl	1a68 <fseek@plt>
   17440:	ldr	r0, [fp, #24]
   17444:	mov	r2, r6
   17448:	ldr	r6, [sl]
   1744c:	add	r9, r9, #1
   17450:	add	r5, r5, #4
   17454:	ldr	r1, [r0]
   17458:	add	r4, r6, r4
   1745c:	cmp	r9, r1
   17460:	blt	17414 <ReadDataSlabN+0x21ac>
   17464:	ldr	r0, [fp, #16]
   17468:	ldr	r8, [sp, #4]
   1746c:	ldr	r9, [sp, #16]
   17470:	ldr	r7, [fp, #24]
   17474:	ldr	r0, [r0]
   17478:	b	17484 <ReadDataSlabN+0x221c>
   1747c:	ldr	r2, [fp, #20]
   17480:	ldr	r6, [r2]
   17484:	ldr	r3, [fp, #12]
   17488:	mov	r2, #1
   1748c:	ldr	r3, [r3]
   17490:	mls	r1, r6, r1, r3
   17494:	sub	r5, r1, r0
   17498:	ldr	r0, [sp, #32]
   1749c:	mul	r1, r5, r0
   174a0:	ldr	r0, [sp, #36]	; 0x24
   174a4:	ldr	r0, [r0]
   174a8:	bl	1a68 <fseek@plt>
   174ac:	ldr	r0, [fp, #8]
   174b0:	add	r4, r5, r4
   174b4:	cmp	r0, #2
   174b8:	blt	175c8 <ReadDataSlabN+0x2360>
   174bc:	mov	r0, #0
   174c0:	add	r3, sp, #40	; 0x28
   174c4:	mov	r5, r0
   174c8:	ldr	r0, [r9, r0, lsl #2]
   174cc:	ldr	r1, [sp, #20]
   174d0:	add	r0, r0, #1
   174d4:	str	r0, [r9, r5, lsl #2]
   174d8:	ldr	r1, [r1, r5, lsl #2]
   174dc:	sdiv	r2, r0, r1
   174e0:	mls	r0, r2, r1, r0
   174e4:	cmp	r0, #0
   174e8:	bne	175a4 <ReadDataSlabN+0x233c>
   174ec:	mov	r0, #0
   174f0:	str	r0, [r9, r5, lsl #2]
   174f4:	add	r0, r3, r5, lsl #2
   174f8:	ldr	r7, [r0, #4]
   174fc:	sdiv	r0, r4, r7
   17500:	mls	r6, r0, r7, r4
   17504:	cmp	r6, #0
   17508:	beq	17550 <ReadDataSlabN+0x22e8>
   1750c:	ldr	r9, [r3, r5, lsl #2]
   17510:	ldr	r0, [r8, r5, lsl #2]
   17514:	sub	r1, r7, r6
   17518:	mov	r2, #1
   1751c:	mla	r0, r0, r9, r1
   17520:	ldr	r1, [sp, #32]
   17524:	mul	r1, r0, r1
   17528:	ldr	r0, [sp, #36]	; 0x24
   1752c:	ldr	r0, [r0]
   17530:	bl	1a68 <fseek@plt>
   17534:	ldr	r0, [r8, r5, lsl #2]
   17538:	add	r1, r7, r4
   1753c:	add	r3, sp, #40	; 0x28
   17540:	sub	r1, r1, r6
   17544:	mla	r4, r0, r9, r1
   17548:	ldr	r9, [sp, #16]
   1754c:	b	17588 <ReadDataSlabN+0x2320>
   17550:	ldr	r0, [r8, r5, lsl #2]
   17554:	cmp	r0, #0
   17558:	beq	17588 <ReadDataSlabN+0x2320>
   1755c:	ldr	r1, [sp, #32]
   17560:	ldr	r6, [r3, r5, lsl #2]
   17564:	mov	r2, #1
   17568:	mul	r0, r0, r1
   1756c:	mul	r1, r0, r6
   17570:	ldr	r0, [sp, #36]	; 0x24
   17574:	ldr	r0, [r0]
   17578:	bl	1a68 <fseek@plt>
   1757c:	ldr	r0, [r8, r5, lsl #2]
   17580:	add	r3, sp, #40	; 0x28
   17584:	mla	r4, r0, r6, r4
   17588:	ldr	r2, [fp, #8]
   1758c:	ldr	r7, [fp, #24]
   17590:	add	r1, r5, #2
   17594:	add	r0, r5, #1
   17598:	cmp	r1, r2
   1759c:	blt	174c4 <ReadDataSlabN+0x225c>
   175a0:	b	175c8 <ReadDataSlabN+0x2360>
   175a4:	ldr	r0, [sp]
   175a8:	mov	r2, #1
   175ac:	ldr	r5, [r0, r5, lsl #2]
   175b0:	ldr	r0, [sp, #32]
   175b4:	mul	r1, r5, r0
   175b8:	ldr	r0, [sp, #36]	; 0x24
   175bc:	ldr	r0, [r0]
   175c0:	bl	1a68 <fseek@plt>
   175c4:	add	r4, r5, r4
   175c8:	ldr	r0, [r7]
   175cc:	ldr	r2, [sp, #8]
   175d0:	ldr	r1, [sp, #12]
   175d4:	add	r2, r0, r2
   175d8:	mov	r0, #0
   175dc:	cmp	r2, r1
   175e0:	str	r2, [sp, #8]
   175e4:	blt	173ac <ReadDataSlabN+0x2144>
   175e8:	b	152f0 <ReadDataSlabN+0x88>
   175ec:	ldr	r0, [sp, #12]
   175f0:	cmp	r0, #1
   175f4:	blt	189c4 <ReadDataSlabN+0x375c>
   175f8:	add	r0, r5, #4
   175fc:	add	r1, r8, #4
   17600:	mov	r6, #0
   17604:	str	r0, [sp, #20]
   17608:	add	r0, sp, #80	; 0x50
   1760c:	str	r1, [sp, #4]
   17610:	orr	ip, r0, #4
   17614:	orr	r0, r9, #4
   17618:	mov	r9, r1
   1761c:	str	r0, [sp]
   17620:	str	ip, [sp, #16]
   17624:	ldr	r5, [fp, #16]
   17628:	ldr	r0, [r5]
   1762c:	cmp	r0, #0
   17630:	beq	17658 <ReadDataSlabN+0x23f0>
   17634:	ldr	r1, [sp, #32]
   17638:	mov	r2, #1
   1763c:	mul	r1, r0, r1
   17640:	ldr	r0, [sp, #36]	; 0x24
   17644:	ldr	r0, [r0]
   17648:	bl	1a68 <fseek@plt>
   1764c:	ldr	r0, [r5]
   17650:	add	sl, r0, sl
   17654:	b	1765c <ReadDataSlabN+0x23f4>
   17658:	mov	r0, #0
   1765c:	ldr	r7, [fp, #24]
   17660:	str	r6, [sp, #8]
   17664:	ldr	r1, [r7]
   17668:	mov	r4, r7
   1766c:	cmp	r1, #0
   17670:	ble	176ec <ReadDataSlabN+0x2484>
   17674:	ldr	r0, [sp, #24]
   17678:	ldr	r4, [sp, #36]	; 0x24
   1767c:	ldr	r9, [sp, #32]
   17680:	ldr	r7, [fp, #20]
   17684:	mov	r5, #0
   17688:	add	r8, r0, r6
   1768c:	ldr	r6, [sp, #28]
   17690:	add	r1, r8, r5
   17694:	mov	r0, r4
   17698:	mov	r2, r6
   1769c:	mov	r3, #1
   176a0:	bl	11cec <ReadInt8Data>
   176a4:	ldr	r0, [r7]
   176a8:	mov	r2, #1
   176ac:	sub	r0, r0, #1
   176b0:	mul	r1, r0, r9
   176b4:	ldr	r0, [r4]
   176b8:	bl	1a68 <fseek@plt>
   176bc:	ldr	r0, [fp, #24]
   176c0:	ldr	r2, [r7]
   176c4:	add	r5, r5, #1
   176c8:	ldr	r1, [r0]
   176cc:	add	sl, r2, sl
   176d0:	cmp	r5, r1
   176d4:	blt	17690 <ReadDataSlabN+0x2428>
   176d8:	ldr	r0, [fp, #16]
   176dc:	ldr	r4, [fp, #24]
   176e0:	ldr	r9, [sp, #4]
   176e4:	ldr	r0, [r0]
   176e8:	b	176f4 <ReadDataSlabN+0x248c>
   176ec:	ldr	r2, [fp, #20]
   176f0:	ldr	r2, [r2]
   176f4:	ldr	r3, [fp, #12]
   176f8:	ldr	r3, [r3]
   176fc:	mls	r1, r2, r1, r3
   17700:	mov	r2, #1
   17704:	sub	r5, r1, r0
   17708:	ldr	r0, [sp, #32]
   1770c:	mul	r1, r5, r0
   17710:	ldr	r0, [sp, #36]	; 0x24
   17714:	ldr	r0, [r0]
   17718:	bl	1a68 <fseek@plt>
   1771c:	ldr	r0, [fp, #8]
   17720:	add	sl, r5, sl
   17724:	cmp	r0, #2
   17728:	blt	17844 <ReadDataSlabN+0x25dc>
   1772c:	ldr	ip, [sp, #16]
   17730:	mov	r0, #0
   17734:	add	r3, sp, #40	; 0x28
   17738:	mov	r8, r0
   1773c:	ldr	r0, [ip, r0, lsl #2]
   17740:	ldr	r1, [sp, #20]
   17744:	add	r0, r0, #1
   17748:	str	r0, [ip, r8, lsl #2]
   1774c:	ldr	r1, [r1, r8, lsl #2]
   17750:	sdiv	r2, r0, r1
   17754:	mls	r0, r2, r1, r0
   17758:	cmp	r0, #0
   1775c:	bne	17820 <ReadDataSlabN+0x25b8>
   17760:	mov	r0, #0
   17764:	str	r0, [ip, r8, lsl #2]
   17768:	add	r0, r3, r8, lsl #2
   1776c:	ldr	r5, [r0, #4]
   17770:	sdiv	r0, sl, r5
   17774:	mls	r6, r0, r5, sl
   17778:	cmp	r6, #0
   1777c:	beq	177cc <ReadDataSlabN+0x2564>
   17780:	ldr	r7, [r3, r8, lsl #2]
   17784:	ldr	r0, [r9, r8, lsl #2]
   17788:	sub	r1, r5, r6
   1778c:	mov	r2, #1
   17790:	mla	r0, r0, r7, r1
   17794:	ldr	r1, [sp, #32]
   17798:	mul	r1, r0, r1
   1779c:	ldr	r0, [sp, #36]	; 0x24
   177a0:	ldr	r0, [r0]
   177a4:	bl	1a68 <fseek@plt>
   177a8:	ldr	r0, [r9, r8, lsl #2]
   177ac:	add	r1, r5, sl
   177b0:	ldr	ip, [sp, #16]
   177b4:	add	r3, sp, #40	; 0x28
   177b8:	sub	r1, r1, r6
   177bc:	mla	sl, r0, r7, r1
   177c0:	ldr	r7, [fp, #24]
   177c4:	mov	r4, r7
   177c8:	b	17808 <ReadDataSlabN+0x25a0>
   177cc:	ldr	r0, [r9, r8, lsl #2]
   177d0:	cmp	r0, #0
   177d4:	beq	17808 <ReadDataSlabN+0x25a0>
   177d8:	ldr	r1, [sp, #32]
   177dc:	ldr	r5, [r3, r8, lsl #2]
   177e0:	mov	r2, #1
   177e4:	mul	r0, r0, r1
   177e8:	mul	r1, r0, r5
   177ec:	ldr	r0, [sp, #36]	; 0x24
   177f0:	ldr	r0, [r0]
   177f4:	bl	1a68 <fseek@plt>
   177f8:	ldr	r0, [r9, r8, lsl #2]
   177fc:	ldr	ip, [sp, #16]
   17800:	add	r3, sp, #40	; 0x28
   17804:	mla	sl, r0, r5, sl
   17808:	ldr	r2, [fp, #8]
   1780c:	add	r1, r8, #2
   17810:	add	r0, r8, #1
   17814:	cmp	r1, r2
   17818:	blt	17738 <ReadDataSlabN+0x24d0>
   1781c:	b	17844 <ReadDataSlabN+0x25dc>
   17820:	ldr	r0, [sp]
   17824:	mov	r2, #1
   17828:	ldr	r5, [r0, r8, lsl #2]
   1782c:	ldr	r0, [sp, #32]
   17830:	mul	r1, r5, r0
   17834:	ldr	r0, [sp, #36]	; 0x24
   17838:	ldr	r0, [r0]
   1783c:	bl	1a68 <fseek@plt>
   17840:	add	sl, r5, sl
   17844:	ldr	r0, [r4]
   17848:	ldr	r6, [sp, #8]
   1784c:	ldr	r1, [sp, #12]
   17850:	add	r6, r0, r6
   17854:	mov	r0, #0
   17858:	cmp	r6, r1
   1785c:	blt	17624 <ReadDataSlabN+0x23bc>
   17860:	b	152f0 <ReadDataSlabN+0x88>
   17864:	ldr	r0, [sp, #12]
   17868:	cmp	r0, #1
   1786c:	blt	189c4 <ReadDataSlabN+0x375c>
   17870:	add	r0, r5, #4
   17874:	add	r1, r8, #4
   17878:	mov	r6, #0
   1787c:	str	r0, [sp, #20]
   17880:	add	r0, sp, #80	; 0x50
   17884:	str	r1, [sp, #4]
   17888:	orr	ip, r0, #4
   1788c:	orr	r0, r9, #4
   17890:	mov	r9, r1
   17894:	str	r0, [sp]
   17898:	str	ip, [sp, #16]
   1789c:	ldr	r5, [fp, #16]
   178a0:	ldr	r0, [r5]
   178a4:	cmp	r0, #0
   178a8:	beq	178d0 <ReadDataSlabN+0x2668>
   178ac:	ldr	r1, [sp, #32]
   178b0:	mov	r2, #1
   178b4:	mul	r1, r0, r1
   178b8:	ldr	r0, [sp, #36]	; 0x24
   178bc:	ldr	r0, [r0]
   178c0:	bl	1a68 <fseek@plt>
   178c4:	ldr	r0, [r5]
   178c8:	add	sl, r0, sl
   178cc:	b	178d4 <ReadDataSlabN+0x266c>
   178d0:	mov	r0, #0
   178d4:	ldr	r7, [fp, #24]
   178d8:	str	r6, [sp, #8]
   178dc:	ldr	r1, [r7]
   178e0:	mov	r4, r7
   178e4:	cmp	r1, #0
   178e8:	ble	17964 <ReadDataSlabN+0x26fc>
   178ec:	ldr	r0, [sp, #24]
   178f0:	ldr	r4, [sp, #36]	; 0x24
   178f4:	ldr	r9, [sp, #32]
   178f8:	ldr	r7, [fp, #20]
   178fc:	mov	r5, #0
   17900:	add	r8, r0, r6
   17904:	ldr	r6, [sp, #28]
   17908:	add	r1, r8, r5
   1790c:	mov	r0, r4
   17910:	mov	r2, r6
   17914:	mov	r3, #1
   17918:	bl	13690 <ReadUInt8Data>
   1791c:	ldr	r0, [r7]
   17920:	mov	r2, #1
   17924:	sub	r0, r0, #1
   17928:	mul	r1, r0, r9
   1792c:	ldr	r0, [r4]
   17930:	bl	1a68 <fseek@plt>
   17934:	ldr	r0, [fp, #24]
   17938:	ldr	r2, [r7]
   1793c:	add	r5, r5, #1
   17940:	ldr	r1, [r0]
   17944:	add	sl, r2, sl
   17948:	cmp	r5, r1
   1794c:	blt	17908 <ReadDataSlabN+0x26a0>
   17950:	ldr	r0, [fp, #16]
   17954:	ldr	r4, [fp, #24]
   17958:	ldr	r9, [sp, #4]
   1795c:	ldr	r0, [r0]
   17960:	b	1796c <ReadDataSlabN+0x2704>
   17964:	ldr	r2, [fp, #20]
   17968:	ldr	r2, [r2]
   1796c:	ldr	r3, [fp, #12]
   17970:	ldr	r3, [r3]
   17974:	mls	r1, r2, r1, r3
   17978:	mov	r2, #1
   1797c:	sub	r5, r1, r0
   17980:	ldr	r0, [sp, #32]
   17984:	mul	r1, r5, r0
   17988:	ldr	r0, [sp, #36]	; 0x24
   1798c:	ldr	r0, [r0]
   17990:	bl	1a68 <fseek@plt>
   17994:	ldr	r0, [fp, #8]
   17998:	add	sl, r5, sl
   1799c:	cmp	r0, #2
   179a0:	blt	17abc <ReadDataSlabN+0x2854>
   179a4:	ldr	ip, [sp, #16]
   179a8:	mov	r0, #0
   179ac:	add	r3, sp, #40	; 0x28
   179b0:	mov	r8, r0
   179b4:	ldr	r0, [ip, r0, lsl #2]
   179b8:	ldr	r1, [sp, #20]
   179bc:	add	r0, r0, #1
   179c0:	str	r0, [ip, r8, lsl #2]
   179c4:	ldr	r1, [r1, r8, lsl #2]
   179c8:	sdiv	r2, r0, r1
   179cc:	mls	r0, r2, r1, r0
   179d0:	cmp	r0, #0
   179d4:	bne	17a98 <ReadDataSlabN+0x2830>
   179d8:	mov	r0, #0
   179dc:	str	r0, [ip, r8, lsl #2]
   179e0:	add	r0, r3, r8, lsl #2
   179e4:	ldr	r5, [r0, #4]
   179e8:	sdiv	r0, sl, r5
   179ec:	mls	r6, r0, r5, sl
   179f0:	cmp	r6, #0
   179f4:	beq	17a44 <ReadDataSlabN+0x27dc>
   179f8:	ldr	r7, [r3, r8, lsl #2]
   179fc:	ldr	r0, [r9, r8, lsl #2]
   17a00:	sub	r1, r5, r6
   17a04:	mov	r2, #1
   17a08:	mla	r0, r0, r7, r1
   17a0c:	ldr	r1, [sp, #32]
   17a10:	mul	r1, r0, r1
   17a14:	ldr	r0, [sp, #36]	; 0x24
   17a18:	ldr	r0, [r0]
   17a1c:	bl	1a68 <fseek@plt>
   17a20:	ldr	r0, [r9, r8, lsl #2]
   17a24:	add	r1, r5, sl
   17a28:	ldr	ip, [sp, #16]
   17a2c:	add	r3, sp, #40	; 0x28
   17a30:	sub	r1, r1, r6
   17a34:	mla	sl, r0, r7, r1
   17a38:	ldr	r7, [fp, #24]
   17a3c:	mov	r4, r7
   17a40:	b	17a80 <ReadDataSlabN+0x2818>
   17a44:	ldr	r0, [r9, r8, lsl #2]
   17a48:	cmp	r0, #0
   17a4c:	beq	17a80 <ReadDataSlabN+0x2818>
   17a50:	ldr	r1, [sp, #32]
   17a54:	ldr	r5, [r3, r8, lsl #2]
   17a58:	mov	r2, #1
   17a5c:	mul	r0, r0, r1
   17a60:	mul	r1, r0, r5
   17a64:	ldr	r0, [sp, #36]	; 0x24
   17a68:	ldr	r0, [r0]
   17a6c:	bl	1a68 <fseek@plt>
   17a70:	ldr	r0, [r9, r8, lsl #2]
   17a74:	ldr	ip, [sp, #16]
   17a78:	add	r3, sp, #40	; 0x28
   17a7c:	mla	sl, r0, r5, sl
   17a80:	ldr	r2, [fp, #8]
   17a84:	add	r1, r8, #2
   17a88:	add	r0, r8, #1
   17a8c:	cmp	r1, r2
   17a90:	blt	179b0 <ReadDataSlabN+0x2748>
   17a94:	b	17abc <ReadDataSlabN+0x2854>
   17a98:	ldr	r0, [sp]
   17a9c:	mov	r2, #1
   17aa0:	ldr	r5, [r0, r8, lsl #2]
   17aa4:	ldr	r0, [sp, #32]
   17aa8:	mul	r1, r5, r0
   17aac:	ldr	r0, [sp, #36]	; 0x24
   17ab0:	ldr	r0, [r0]
   17ab4:	bl	1a68 <fseek@plt>
   17ab8:	add	sl, r5, sl
   17abc:	ldr	r0, [r4]
   17ac0:	ldr	r6, [sp, #8]
   17ac4:	ldr	r1, [sp, #12]
   17ac8:	add	r6, r0, r6
   17acc:	mov	r0, #0
   17ad0:	cmp	r6, r1
   17ad4:	blt	1789c <ReadDataSlabN+0x2634>
   17ad8:	b	152f0 <ReadDataSlabN+0x88>
   17adc:	ldr	r0, [sp, #16]
   17ae0:	cmp	r0, #1
   17ae4:	blt	189c4 <ReadDataSlabN+0x375c>
   17ae8:	add	r0, r5, #4
   17aec:	add	r8, r8, #4
   17af0:	orr	r1, r9, #4
   17af4:	str	r0, [sp, #8]
   17af8:	add	r0, sp, #80	; 0x50
   17afc:	str	r1, [sp]
   17b00:	str	r8, [sp, #4]
   17b04:	orr	r0, r0, #4
   17b08:	mov	r9, r0
   17b0c:	mov	r0, #0
   17b10:	str	r0, [sp, #12]
   17b14:	str	r9, [sp, #20]
   17b18:	ldr	r5, [fp, #16]
   17b1c:	ldr	r0, [r5]
   17b20:	cmp	r0, #0
   17b24:	beq	17b4c <ReadDataSlabN+0x28e4>
   17b28:	ldr	r1, [sp, #32]
   17b2c:	mov	r2, #1
   17b30:	mul	r1, r0, r1
   17b34:	ldr	r0, [sp, #36]	; 0x24
   17b38:	ldr	r0, [r0]
   17b3c:	bl	1a68 <fseek@plt>
   17b40:	ldr	r0, [r5]
   17b44:	add	r4, r0, r4
   17b48:	b	17b50 <ReadDataSlabN+0x28e8>
   17b4c:	mov	r0, #0
   17b50:	ldr	r7, [fp, #24]
   17b54:	ldr	sl, [sp, #8]
   17b58:	ldr	r2, [sp, #28]
   17b5c:	ldr	r1, [r7]
   17b60:	cmp	r1, #0
   17b64:	ble	17bec <ReadDataSlabN+0x2984>
   17b68:	ldr	r0, [sp, #24]
   17b6c:	ldr	r1, [sp, #12]
   17b70:	ldr	r8, [sp, #32]
   17b74:	ldr	r7, [fp, #20]
   17b78:	ldr	sl, [sp, #36]	; 0x24
   17b7c:	mov	r9, #0
   17b80:	add	r5, r0, r1, lsl #1
   17b84:	mov	r0, sl
   17b88:	mov	r1, r5
   17b8c:	mov	r3, #1
   17b90:	mov	r6, r2
   17b94:	bl	e8ac <ReadInt16Data>
   17b98:	ldr	r0, [r7]
   17b9c:	mov	r2, #1
   17ba0:	sub	r0, r0, #1
   17ba4:	mul	r1, r0, r8
   17ba8:	ldr	r0, [sl]
   17bac:	bl	1a68 <fseek@plt>
   17bb0:	ldr	r0, [fp, #24]
   17bb4:	mov	r2, r6
   17bb8:	ldr	r6, [r7]
   17bbc:	add	r9, r9, #1
   17bc0:	add	r5, r5, #2
   17bc4:	ldr	r1, [r0]
   17bc8:	add	r4, r6, r4
   17bcc:	cmp	r9, r1
   17bd0:	blt	17b84 <ReadDataSlabN+0x291c>
   17bd4:	ldr	r0, [fp, #16]
   17bd8:	ldr	r7, [fp, #24]
   17bdc:	ldr	r0, [r0]
   17be0:	ldmib	sp, {r8, sl}
   17be4:	ldr	r9, [sp, #20]
   17be8:	b	17bf4 <ReadDataSlabN+0x298c>
   17bec:	ldr	r2, [fp, #20]
   17bf0:	ldr	r6, [r2]
   17bf4:	ldr	r3, [fp, #12]
   17bf8:	mov	r2, #1
   17bfc:	ldr	r3, [r3]
   17c00:	mls	r1, r6, r1, r3
   17c04:	sub	r5, r1, r0
   17c08:	ldr	r0, [sp, #32]
   17c0c:	mul	r1, r5, r0
   17c10:	ldr	r0, [sp, #36]	; 0x24
   17c14:	ldr	r0, [r0]
   17c18:	bl	1a68 <fseek@plt>
   17c1c:	ldr	r0, [fp, #8]
   17c20:	add	r4, r5, r4
   17c24:	cmp	r0, #2
   17c28:	blt	17d34 <ReadDataSlabN+0x2acc>
   17c2c:	mov	r0, #0
   17c30:	add	r3, sp, #40	; 0x28
   17c34:	mov	r5, r0
   17c38:	ldr	r0, [r9, r0, lsl #2]
   17c3c:	add	r0, r0, #1
   17c40:	str	r0, [r9, r5, lsl #2]
   17c44:	ldr	r1, [sl, r5, lsl #2]
   17c48:	sdiv	r2, r0, r1
   17c4c:	mls	r0, r2, r1, r0
   17c50:	cmp	r0, #0
   17c54:	bne	17d10 <ReadDataSlabN+0x2aa8>
   17c58:	mov	r0, #0
   17c5c:	str	r0, [r9, r5, lsl #2]
   17c60:	add	r0, r3, r5, lsl #2
   17c64:	ldr	r7, [r0, #4]
   17c68:	sdiv	r0, r4, r7
   17c6c:	mls	r6, r0, r7, r4
   17c70:	cmp	r6, #0
   17c74:	beq	17cbc <ReadDataSlabN+0x2a54>
   17c78:	ldr	r9, [r3, r5, lsl #2]
   17c7c:	ldr	r0, [r8, r5, lsl #2]
   17c80:	sub	r1, r7, r6
   17c84:	mov	r2, #1
   17c88:	mla	r0, r0, r9, r1
   17c8c:	ldr	r1, [sp, #32]
   17c90:	mul	r1, r0, r1
   17c94:	ldr	r0, [sp, #36]	; 0x24
   17c98:	ldr	r0, [r0]
   17c9c:	bl	1a68 <fseek@plt>
   17ca0:	ldr	r0, [r8, r5, lsl #2]
   17ca4:	add	r1, r7, r4
   17ca8:	add	r3, sp, #40	; 0x28
   17cac:	sub	r1, r1, r6
   17cb0:	mla	r4, r0, r9, r1
   17cb4:	ldr	r9, [sp, #20]
   17cb8:	b	17cf4 <ReadDataSlabN+0x2a8c>
   17cbc:	ldr	r0, [r8, r5, lsl #2]
   17cc0:	cmp	r0, #0
   17cc4:	beq	17cf4 <ReadDataSlabN+0x2a8c>
   17cc8:	ldr	r1, [sp, #32]
   17ccc:	ldr	r6, [r3, r5, lsl #2]
   17cd0:	mov	r2, #1
   17cd4:	mul	r0, r0, r1
   17cd8:	mul	r1, r0, r6
   17cdc:	ldr	r0, [sp, #36]	; 0x24
   17ce0:	ldr	r0, [r0]
   17ce4:	bl	1a68 <fseek@plt>
   17ce8:	ldr	r0, [r8, r5, lsl #2]
   17cec:	add	r3, sp, #40	; 0x28
   17cf0:	mla	r4, r0, r6, r4
   17cf4:	ldr	r2, [fp, #8]
   17cf8:	ldr	r7, [fp, #24]
   17cfc:	add	r1, r5, #2
   17d00:	add	r0, r5, #1
   17d04:	cmp	r1, r2
   17d08:	blt	17c34 <ReadDataSlabN+0x29cc>
   17d0c:	b	17d34 <ReadDataSlabN+0x2acc>
   17d10:	ldr	r0, [sp]
   17d14:	mov	r2, #1
   17d18:	ldr	r5, [r0, r5, lsl #2]
   17d1c:	ldr	r0, [sp, #32]
   17d20:	mul	r1, r5, r0
   17d24:	ldr	r0, [sp, #36]	; 0x24
   17d28:	ldr	r0, [r0]
   17d2c:	bl	1a68 <fseek@plt>
   17d30:	add	r4, r5, r4
   17d34:	ldr	r0, [r7]
   17d38:	ldr	r2, [sp, #12]
   17d3c:	ldr	r1, [sp, #16]
   17d40:	add	r2, r0, r2
   17d44:	mov	r0, #0
   17d48:	cmp	r2, r1
   17d4c:	str	r2, [sp, #12]
   17d50:	blt	17b18 <ReadDataSlabN+0x28b0>
   17d54:	b	152f0 <ReadDataSlabN+0x88>
   17d58:	ldr	r0, [sp, #16]
   17d5c:	cmp	r0, #1
   17d60:	blt	189c4 <ReadDataSlabN+0x375c>
   17d64:	add	r0, r5, #4
   17d68:	add	r8, r8, #4
   17d6c:	orr	r1, r9, #4
   17d70:	str	r0, [sp, #8]
   17d74:	add	r0, sp, #80	; 0x50
   17d78:	str	r1, [sp]
   17d7c:	str	r8, [sp, #4]
   17d80:	orr	r0, r0, #4
   17d84:	mov	r9, r0
   17d88:	mov	r0, #0
   17d8c:	str	r0, [sp, #12]
   17d90:	str	r9, [sp, #20]
   17d94:	ldr	r5, [fp, #16]
   17d98:	ldr	r0, [r5]
   17d9c:	cmp	r0, #0
   17da0:	beq	17dc8 <ReadDataSlabN+0x2b60>
   17da4:	ldr	r1, [sp, #32]
   17da8:	mov	r2, #1
   17dac:	mul	r1, r0, r1
   17db0:	ldr	r0, [sp, #36]	; 0x24
   17db4:	ldr	r0, [r0]
   17db8:	bl	1a68 <fseek@plt>
   17dbc:	ldr	r0, [r5]
   17dc0:	add	r4, r0, r4
   17dc4:	b	17dcc <ReadDataSlabN+0x2b64>
   17dc8:	mov	r0, #0
   17dcc:	ldr	r7, [fp, #24]
   17dd0:	ldr	sl, [sp, #8]
   17dd4:	ldr	r2, [sp, #28]
   17dd8:	ldr	r1, [r7]
   17ddc:	cmp	r1, #0
   17de0:	ble	17e68 <ReadDataSlabN+0x2c00>
   17de4:	ldr	r0, [sp, #24]
   17de8:	ldr	r1, [sp, #12]
   17dec:	ldr	r8, [sp, #32]
   17df0:	ldr	r7, [fp, #20]
   17df4:	ldr	sl, [sp, #36]	; 0x24
   17df8:	mov	r9, #0
   17dfc:	add	r5, r0, r1, lsl #1
   17e00:	mov	r0, sl
   17e04:	mov	r1, r5
   17e08:	mov	r3, #1
   17e0c:	mov	r6, r2
   17e10:	bl	102cc <ReadUInt16Data>
   17e14:	ldr	r0, [r7]
   17e18:	mov	r2, #1
   17e1c:	sub	r0, r0, #1
   17e20:	mul	r1, r0, r8
   17e24:	ldr	r0, [sl]
   17e28:	bl	1a68 <fseek@plt>
   17e2c:	ldr	r0, [fp, #24]
   17e30:	mov	r2, r6
   17e34:	ldr	r6, [r7]
   17e38:	add	r9, r9, #1
   17e3c:	add	r5, r5, #2
   17e40:	ldr	r1, [r0]
   17e44:	add	r4, r6, r4
   17e48:	cmp	r9, r1
   17e4c:	blt	17e00 <ReadDataSlabN+0x2b98>
   17e50:	ldr	r0, [fp, #16]
   17e54:	ldr	r7, [fp, #24]
   17e58:	ldr	r0, [r0]
   17e5c:	ldmib	sp, {r8, sl}
   17e60:	ldr	r9, [sp, #20]
   17e64:	b	17e70 <ReadDataSlabN+0x2c08>
   17e68:	ldr	r2, [fp, #20]
   17e6c:	ldr	r6, [r2]
   17e70:	ldr	r3, [fp, #12]
   17e74:	mov	r2, #1
   17e78:	ldr	r3, [r3]
   17e7c:	mls	r1, r6, r1, r3
   17e80:	sub	r5, r1, r0
   17e84:	ldr	r0, [sp, #32]
   17e88:	mul	r1, r5, r0
   17e8c:	ldr	r0, [sp, #36]	; 0x24
   17e90:	ldr	r0, [r0]
   17e94:	bl	1a68 <fseek@plt>
   17e98:	ldr	r0, [fp, #8]
   17e9c:	add	r4, r5, r4
   17ea0:	cmp	r0, #2
   17ea4:	blt	17fb0 <ReadDataSlabN+0x2d48>
   17ea8:	mov	r0, #0
   17eac:	add	r3, sp, #40	; 0x28
   17eb0:	mov	r5, r0
   17eb4:	ldr	r0, [r9, r0, lsl #2]
   17eb8:	add	r0, r0, #1
   17ebc:	str	r0, [r9, r5, lsl #2]
   17ec0:	ldr	r1, [sl, r5, lsl #2]
   17ec4:	sdiv	r2, r0, r1
   17ec8:	mls	r0, r2, r1, r0
   17ecc:	cmp	r0, #0
   17ed0:	bne	17f8c <ReadDataSlabN+0x2d24>
   17ed4:	mov	r0, #0
   17ed8:	str	r0, [r9, r5, lsl #2]
   17edc:	add	r0, r3, r5, lsl #2
   17ee0:	ldr	r7, [r0, #4]
   17ee4:	sdiv	r0, r4, r7
   17ee8:	mls	r6, r0, r7, r4
   17eec:	cmp	r6, #0
   17ef0:	beq	17f38 <ReadDataSlabN+0x2cd0>
   17ef4:	ldr	r9, [r3, r5, lsl #2]
   17ef8:	ldr	r0, [r8, r5, lsl #2]
   17efc:	sub	r1, r7, r6
   17f00:	mov	r2, #1
   17f04:	mla	r0, r0, r9, r1
   17f08:	ldr	r1, [sp, #32]
   17f0c:	mul	r1, r0, r1
   17f10:	ldr	r0, [sp, #36]	; 0x24
   17f14:	ldr	r0, [r0]
   17f18:	bl	1a68 <fseek@plt>
   17f1c:	ldr	r0, [r8, r5, lsl #2]
   17f20:	add	r1, r7, r4
   17f24:	add	r3, sp, #40	; 0x28
   17f28:	sub	r1, r1, r6
   17f2c:	mla	r4, r0, r9, r1
   17f30:	ldr	r9, [sp, #20]
   17f34:	b	17f70 <ReadDataSlabN+0x2d08>
   17f38:	ldr	r0, [r8, r5, lsl #2]
   17f3c:	cmp	r0, #0
   17f40:	beq	17f70 <ReadDataSlabN+0x2d08>
   17f44:	ldr	r1, [sp, #32]
   17f48:	ldr	r6, [r3, r5, lsl #2]
   17f4c:	mov	r2, #1
   17f50:	mul	r0, r0, r1
   17f54:	mul	r1, r0, r6
   17f58:	ldr	r0, [sp, #36]	; 0x24
   17f5c:	ldr	r0, [r0]
   17f60:	bl	1a68 <fseek@plt>
   17f64:	ldr	r0, [r8, r5, lsl #2]
   17f68:	add	r3, sp, #40	; 0x28
   17f6c:	mla	r4, r0, r6, r4
   17f70:	ldr	r2, [fp, #8]
   17f74:	ldr	r7, [fp, #24]
   17f78:	add	r1, r5, #2
   17f7c:	add	r0, r5, #1
   17f80:	cmp	r1, r2
   17f84:	blt	17eb0 <ReadDataSlabN+0x2c48>
   17f88:	b	17fb0 <ReadDataSlabN+0x2d48>
   17f8c:	ldr	r0, [sp]
   17f90:	mov	r2, #1
   17f94:	ldr	r5, [r0, r5, lsl #2]
   17f98:	ldr	r0, [sp, #32]
   17f9c:	mul	r1, r5, r0
   17fa0:	ldr	r0, [sp, #36]	; 0x24
   17fa4:	ldr	r0, [r0]
   17fa8:	bl	1a68 <fseek@plt>
   17fac:	add	r4, r5, r4
   17fb0:	ldr	r0, [r7]
   17fb4:	ldr	r2, [sp, #12]
   17fb8:	ldr	r1, [sp, #16]
   17fbc:	add	r2, r0, r2
   17fc0:	mov	r0, #0
   17fc4:	cmp	r2, r1
   17fc8:	str	r2, [sp, #12]
   17fcc:	blt	17d94 <ReadDataSlabN+0x2b2c>
   17fd0:	b	152f0 <ReadDataSlabN+0x88>
   17fd4:	ldr	r0, [sp, #16]
   17fd8:	cmp	r0, #1
   17fdc:	blt	189c4 <ReadDataSlabN+0x375c>
   17fe0:	add	r0, r5, #4
   17fe4:	add	r8, r8, #4
   17fe8:	orr	r1, r9, #4
   17fec:	str	r0, [sp, #8]
   17ff0:	add	r0, sp, #80	; 0x50
   17ff4:	str	r1, [sp]
   17ff8:	str	r8, [sp, #4]
   17ffc:	orr	r0, r0, #4
   18000:	mov	r9, r0
   18004:	mov	r0, #0
   18008:	str	r0, [sp, #12]
   1800c:	str	r9, [sp, #20]
   18010:	ldr	r5, [fp, #16]
   18014:	ldr	r0, [r5]
   18018:	cmp	r0, #0
   1801c:	beq	18044 <ReadDataSlabN+0x2ddc>
   18020:	ldr	r1, [sp, #32]
   18024:	mov	r2, #1
   18028:	mul	r1, r0, r1
   1802c:	ldr	r0, [sp, #36]	; 0x24
   18030:	ldr	r0, [r0]
   18034:	bl	1a68 <fseek@plt>
   18038:	ldr	r0, [r5]
   1803c:	add	r4, r0, r4
   18040:	b	18048 <ReadDataSlabN+0x2de0>
   18044:	mov	r0, #0
   18048:	ldr	r7, [fp, #24]
   1804c:	ldr	sl, [sp, #8]
   18050:	ldr	r2, [sp, #28]
   18054:	ldr	r1, [r7]
   18058:	cmp	r1, #0
   1805c:	ble	180e4 <ReadDataSlabN+0x2e7c>
   18060:	ldr	r0, [sp, #24]
   18064:	ldr	r1, [sp, #12]
   18068:	ldr	r8, [sp, #32]
   1806c:	ldr	r7, [fp, #20]
   18070:	ldr	sl, [sp, #36]	; 0x24
   18074:	mov	r9, #0
   18078:	add	r5, r0, r1, lsl #2
   1807c:	mov	r0, sl
   18080:	mov	r1, r5
   18084:	mov	r3, #1
   18088:	mov	r6, r2
   1808c:	bl	b46c <ReadInt32Data>
   18090:	ldr	r0, [r7]
   18094:	mov	r2, #1
   18098:	sub	r0, r0, #1
   1809c:	mul	r1, r0, r8
   180a0:	ldr	r0, [sl]
   180a4:	bl	1a68 <fseek@plt>
   180a8:	ldr	r0, [fp, #24]
   180ac:	mov	r2, r6
   180b0:	ldr	r6, [r7]
   180b4:	add	r9, r9, #1
   180b8:	add	r5, r5, #4
   180bc:	ldr	r1, [r0]
   180c0:	add	r4, r6, r4
   180c4:	cmp	r9, r1
   180c8:	blt	1807c <ReadDataSlabN+0x2e14>
   180cc:	ldr	r0, [fp, #16]
   180d0:	ldr	r7, [fp, #24]
   180d4:	ldr	r0, [r0]
   180d8:	ldmib	sp, {r8, sl}
   180dc:	ldr	r9, [sp, #20]
   180e0:	b	180ec <ReadDataSlabN+0x2e84>
   180e4:	ldr	r2, [fp, #20]
   180e8:	ldr	r6, [r2]
   180ec:	ldr	r3, [fp, #12]
   180f0:	mov	r2, #1
   180f4:	ldr	r3, [r3]
   180f8:	mls	r1, r6, r1, r3
   180fc:	sub	r5, r1, r0
   18100:	ldr	r0, [sp, #32]
   18104:	mul	r1, r5, r0
   18108:	ldr	r0, [sp, #36]	; 0x24
   1810c:	ldr	r0, [r0]
   18110:	bl	1a68 <fseek@plt>
   18114:	ldr	r0, [fp, #8]
   18118:	add	r4, r5, r4
   1811c:	cmp	r0, #2
   18120:	blt	1822c <ReadDataSlabN+0x2fc4>
   18124:	mov	r0, #0
   18128:	add	r3, sp, #40	; 0x28
   1812c:	mov	r5, r0
   18130:	ldr	r0, [r9, r0, lsl #2]
   18134:	add	r0, r0, #1
   18138:	str	r0, [r9, r5, lsl #2]
   1813c:	ldr	r1, [sl, r5, lsl #2]
   18140:	sdiv	r2, r0, r1
   18144:	mls	r0, r2, r1, r0
   18148:	cmp	r0, #0
   1814c:	bne	18208 <ReadDataSlabN+0x2fa0>
   18150:	mov	r0, #0
   18154:	str	r0, [r9, r5, lsl #2]
   18158:	add	r0, r3, r5, lsl #2
   1815c:	ldr	r7, [r0, #4]
   18160:	sdiv	r0, r4, r7
   18164:	mls	r6, r0, r7, r4
   18168:	cmp	r6, #0
   1816c:	beq	181b4 <ReadDataSlabN+0x2f4c>
   18170:	ldr	r9, [r3, r5, lsl #2]
   18174:	ldr	r0, [r8, r5, lsl #2]
   18178:	sub	r1, r7, r6
   1817c:	mov	r2, #1
   18180:	mla	r0, r0, r9, r1
   18184:	ldr	r1, [sp, #32]
   18188:	mul	r1, r0, r1
   1818c:	ldr	r0, [sp, #36]	; 0x24
   18190:	ldr	r0, [r0]
   18194:	bl	1a68 <fseek@plt>
   18198:	ldr	r0, [r8, r5, lsl #2]
   1819c:	add	r1, r7, r4
   181a0:	add	r3, sp, #40	; 0x28
   181a4:	sub	r1, r1, r6
   181a8:	mla	r4, r0, r9, r1
   181ac:	ldr	r9, [sp, #20]
   181b0:	b	181ec <ReadDataSlabN+0x2f84>
   181b4:	ldr	r0, [r8, r5, lsl #2]
   181b8:	cmp	r0, #0
   181bc:	beq	181ec <ReadDataSlabN+0x2f84>
   181c0:	ldr	r1, [sp, #32]
   181c4:	ldr	r6, [r3, r5, lsl #2]
   181c8:	mov	r2, #1
   181cc:	mul	r0, r0, r1
   181d0:	mul	r1, r0, r6
   181d4:	ldr	r0, [sp, #36]	; 0x24
   181d8:	ldr	r0, [r0]
   181dc:	bl	1a68 <fseek@plt>
   181e0:	ldr	r0, [r8, r5, lsl #2]
   181e4:	add	r3, sp, #40	; 0x28
   181e8:	mla	r4, r0, r6, r4
   181ec:	ldr	r2, [fp, #8]
   181f0:	ldr	r7, [fp, #24]
   181f4:	add	r1, r5, #2
   181f8:	add	r0, r5, #1
   181fc:	cmp	r1, r2
   18200:	blt	1812c <ReadDataSlabN+0x2ec4>
   18204:	b	1822c <ReadDataSlabN+0x2fc4>
   18208:	ldr	r0, [sp]
   1820c:	mov	r2, #1
   18210:	ldr	r5, [r0, r5, lsl #2]
   18214:	ldr	r0, [sp, #32]
   18218:	mul	r1, r5, r0
   1821c:	ldr	r0, [sp, #36]	; 0x24
   18220:	ldr	r0, [r0]
   18224:	bl	1a68 <fseek@plt>
   18228:	add	r4, r5, r4
   1822c:	ldr	r0, [r7]
   18230:	ldr	r2, [sp, #12]
   18234:	ldr	r1, [sp, #16]
   18238:	add	r2, r0, r2
   1823c:	mov	r0, #0
   18240:	cmp	r2, r1
   18244:	str	r2, [sp, #12]
   18248:	blt	18010 <ReadDataSlabN+0x2da8>
   1824c:	b	152f0 <ReadDataSlabN+0x88>
   18250:	ldr	r0, [sp, #16]
   18254:	cmp	r0, #1
   18258:	blt	189c4 <ReadDataSlabN+0x375c>
   1825c:	add	r0, r5, #4
   18260:	add	r8, r8, #4
   18264:	orr	r1, r9, #4
   18268:	str	r0, [sp, #8]
   1826c:	add	r0, sp, #80	; 0x50
   18270:	str	r1, [sp]
   18274:	str	r8, [sp, #4]
   18278:	orr	r0, r0, #4
   1827c:	mov	r9, r0
   18280:	mov	r0, #0
   18284:	str	r0, [sp, #12]
   18288:	str	r9, [sp, #20]
   1828c:	ldr	r5, [fp, #16]
   18290:	ldr	r0, [r5]
   18294:	cmp	r0, #0
   18298:	beq	182c0 <ReadDataSlabN+0x3058>
   1829c:	ldr	r1, [sp, #32]
   182a0:	mov	r2, #1
   182a4:	mul	r1, r0, r1
   182a8:	ldr	r0, [sp, #36]	; 0x24
   182ac:	ldr	r0, [r0]
   182b0:	bl	1a68 <fseek@plt>
   182b4:	ldr	r0, [r5]
   182b8:	add	r4, r0, r4
   182bc:	b	182c4 <ReadDataSlabN+0x305c>
   182c0:	mov	r0, #0
   182c4:	ldr	r7, [fp, #24]
   182c8:	ldr	sl, [sp, #8]
   182cc:	ldr	r2, [sp, #28]
   182d0:	ldr	r1, [r7]
   182d4:	cmp	r1, #0
   182d8:	ble	18360 <ReadDataSlabN+0x30f8>
   182dc:	ldr	r0, [sp, #24]
   182e0:	ldr	r1, [sp, #12]
   182e4:	ldr	r8, [sp, #32]
   182e8:	ldr	r7, [fp, #20]
   182ec:	ldr	sl, [sp, #36]	; 0x24
   182f0:	mov	r9, #0
   182f4:	add	r5, r0, r1, lsl #2
   182f8:	mov	r0, sl
   182fc:	mov	r1, r5
   18300:	mov	r3, #1
   18304:	mov	r6, r2
   18308:	bl	ce8c <ReadUInt32Data>
   1830c:	ldr	r0, [r7]
   18310:	mov	r2, #1
   18314:	sub	r0, r0, #1
   18318:	mul	r1, r0, r8
   1831c:	ldr	r0, [sl]
   18320:	bl	1a68 <fseek@plt>
   18324:	ldr	r0, [fp, #24]
   18328:	mov	r2, r6
   1832c:	ldr	r6, [r7]
   18330:	add	r9, r9, #1
   18334:	add	r5, r5, #4
   18338:	ldr	r1, [r0]
   1833c:	add	r4, r6, r4
   18340:	cmp	r9, r1
   18344:	blt	182f8 <ReadDataSlabN+0x3090>
   18348:	ldr	r0, [fp, #16]
   1834c:	ldr	r7, [fp, #24]
   18350:	ldr	r0, [r0]
   18354:	ldmib	sp, {r8, sl}
   18358:	ldr	r9, [sp, #20]
   1835c:	b	18368 <ReadDataSlabN+0x3100>
   18360:	ldr	r2, [fp, #20]
   18364:	ldr	r6, [r2]
   18368:	ldr	r3, [fp, #12]
   1836c:	mov	r2, #1
   18370:	ldr	r3, [r3]
   18374:	mls	r1, r6, r1, r3
   18378:	sub	r5, r1, r0
   1837c:	ldr	r0, [sp, #32]
   18380:	mul	r1, r5, r0
   18384:	ldr	r0, [sp, #36]	; 0x24
   18388:	ldr	r0, [r0]
   1838c:	bl	1a68 <fseek@plt>
   18390:	ldr	r0, [fp, #8]
   18394:	add	r4, r5, r4
   18398:	cmp	r0, #2
   1839c:	blt	184a8 <ReadDataSlabN+0x3240>
   183a0:	mov	r0, #0
   183a4:	add	r3, sp, #40	; 0x28
   183a8:	mov	r5, r0
   183ac:	ldr	r0, [r9, r0, lsl #2]
   183b0:	add	r0, r0, #1
   183b4:	str	r0, [r9, r5, lsl #2]
   183b8:	ldr	r1, [sl, r5, lsl #2]
   183bc:	sdiv	r2, r0, r1
   183c0:	mls	r0, r2, r1, r0
   183c4:	cmp	r0, #0
   183c8:	bne	18484 <ReadDataSlabN+0x321c>
   183cc:	mov	r0, #0
   183d0:	str	r0, [r9, r5, lsl #2]
   183d4:	add	r0, r3, r5, lsl #2
   183d8:	ldr	r7, [r0, #4]
   183dc:	sdiv	r0, r4, r7
   183e0:	mls	r6, r0, r7, r4
   183e4:	cmp	r6, #0
   183e8:	beq	18430 <ReadDataSlabN+0x31c8>
   183ec:	ldr	r9, [r3, r5, lsl #2]
   183f0:	ldr	r0, [r8, r5, lsl #2]
   183f4:	sub	r1, r7, r6
   183f8:	mov	r2, #1
   183fc:	mla	r0, r0, r9, r1
   18400:	ldr	r1, [sp, #32]
   18404:	mul	r1, r0, r1
   18408:	ldr	r0, [sp, #36]	; 0x24
   1840c:	ldr	r0, [r0]
   18410:	bl	1a68 <fseek@plt>
   18414:	ldr	r0, [r8, r5, lsl #2]
   18418:	add	r1, r7, r4
   1841c:	add	r3, sp, #40	; 0x28
   18420:	sub	r1, r1, r6
   18424:	mla	r4, r0, r9, r1
   18428:	ldr	r9, [sp, #20]
   1842c:	b	18468 <ReadDataSlabN+0x3200>
   18430:	ldr	r0, [r8, r5, lsl #2]
   18434:	cmp	r0, #0
   18438:	beq	18468 <ReadDataSlabN+0x3200>
   1843c:	ldr	r1, [sp, #32]
   18440:	ldr	r6, [r3, r5, lsl #2]
   18444:	mov	r2, #1
   18448:	mul	r0, r0, r1
   1844c:	mul	r1, r0, r6
   18450:	ldr	r0, [sp, #36]	; 0x24
   18454:	ldr	r0, [r0]
   18458:	bl	1a68 <fseek@plt>
   1845c:	ldr	r0, [r8, r5, lsl #2]
   18460:	add	r3, sp, #40	; 0x28
   18464:	mla	r4, r0, r6, r4
   18468:	ldr	r2, [fp, #8]
   1846c:	ldr	r7, [fp, #24]
   18470:	add	r1, r5, #2
   18474:	add	r0, r5, #1
   18478:	cmp	r1, r2
   1847c:	blt	183a8 <ReadDataSlabN+0x3140>
   18480:	b	184a8 <ReadDataSlabN+0x3240>
   18484:	ldr	r0, [sp]
   18488:	mov	r2, #1
   1848c:	ldr	r5, [r0, r5, lsl #2]
   18490:	ldr	r0, [sp, #32]
   18494:	mul	r1, r5, r0
   18498:	ldr	r0, [sp, #36]	; 0x24
   1849c:	ldr	r0, [r0]
   184a0:	bl	1a68 <fseek@plt>
   184a4:	add	r4, r5, r4
   184a8:	ldr	r0, [r7]
   184ac:	ldr	r2, [sp, #12]
   184b0:	ldr	r1, [sp, #16]
   184b4:	add	r2, r0, r2
   184b8:	mov	r0, #0
   184bc:	cmp	r2, r1
   184c0:	str	r2, [sp, #12]
   184c4:	blt	1828c <ReadDataSlabN+0x3024>
   184c8:	b	152f0 <ReadDataSlabN+0x88>
   184cc:	ldr	r0, [sp, #16]
   184d0:	cmp	r0, #1
   184d4:	blt	189c4 <ReadDataSlabN+0x375c>
   184d8:	add	r0, r5, #4
   184dc:	add	r8, r8, #4
   184e0:	orr	r1, r9, #4
   184e4:	str	r0, [sp, #8]
   184e8:	add	r0, sp, #80	; 0x50
   184ec:	str	r1, [sp]
   184f0:	str	r8, [sp, #4]
   184f4:	orr	r0, r0, #4
   184f8:	mov	r9, r0
   184fc:	mov	r0, #0
   18500:	str	r0, [sp, #12]
   18504:	str	r9, [sp, #20]
   18508:	ldr	r5, [fp, #16]
   1850c:	ldr	r0, [r5]
   18510:	cmp	r0, #0
   18514:	beq	1853c <ReadDataSlabN+0x32d4>
   18518:	ldr	r1, [sp, #32]
   1851c:	mov	r2, #1
   18520:	mul	r1, r0, r1
   18524:	ldr	r0, [sp, #36]	; 0x24
   18528:	ldr	r0, [r0]
   1852c:	bl	1a68 <fseek@plt>
   18530:	ldr	r0, [r5]
   18534:	add	r4, r0, r4
   18538:	b	18540 <ReadDataSlabN+0x32d8>
   1853c:	mov	r0, #0
   18540:	ldr	r7, [fp, #24]
   18544:	ldr	r2, [sp, #28]
   18548:	ldr	sl, [sp, #8]
   1854c:	ldr	r1, [r7]
   18550:	cmp	r1, #0
   18554:	ble	185dc <ReadDataSlabN+0x3374>
   18558:	ldr	r0, [sp, #24]
   1855c:	ldr	r1, [sp, #12]
   18560:	ldr	r8, [sp, #32]
   18564:	ldr	r7, [fp, #20]
   18568:	ldr	sl, [sp, #36]	; 0x24
   1856c:	mov	r9, #0
   18570:	add	r5, r0, r1, lsl #3
   18574:	mov	r0, sl
   18578:	mov	r1, r5
   1857c:	mov	r3, #1
   18580:	mov	r6, r2
   18584:	bl	7bbc <ReadInt64Data>
   18588:	ldr	r0, [r7]
   1858c:	mov	r2, #1
   18590:	sub	r0, r0, #1
   18594:	mul	r1, r0, r8
   18598:	ldr	r0, [sl]
   1859c:	bl	1a68 <fseek@plt>
   185a0:	ldr	r0, [fp, #24]
   185a4:	mov	r2, r6
   185a8:	ldr	r6, [r7]
   185ac:	add	r9, r9, #1
   185b0:	add	r5, r5, #8
   185b4:	ldr	r1, [r0]
   185b8:	add	r4, r6, r4
   185bc:	cmp	r9, r1
   185c0:	blt	18574 <ReadDataSlabN+0x330c>
   185c4:	ldr	r0, [fp, #16]
   185c8:	ldr	r7, [fp, #24]
   185cc:	ldr	r0, [r0]
   185d0:	ldmib	sp, {r8, sl}
   185d4:	ldr	r9, [sp, #20]
   185d8:	b	185e4 <ReadDataSlabN+0x337c>
   185dc:	ldr	r2, [fp, #20]
   185e0:	ldr	r6, [r2]
   185e4:	ldr	r3, [fp, #12]
   185e8:	mov	r2, #1
   185ec:	ldr	r3, [r3]
   185f0:	mls	r1, r6, r1, r3
   185f4:	sub	r5, r1, r0
   185f8:	ldr	r0, [sp, #32]
   185fc:	mul	r1, r5, r0
   18600:	ldr	r0, [sp, #36]	; 0x24
   18604:	ldr	r0, [r0]
   18608:	bl	1a68 <fseek@plt>
   1860c:	ldr	r0, [fp, #8]
   18610:	add	r4, r5, r4
   18614:	cmp	r0, #2
   18618:	blt	18724 <ReadDataSlabN+0x34bc>
   1861c:	mov	r0, #0
   18620:	add	r3, sp, #40	; 0x28
   18624:	mov	r5, r0
   18628:	ldr	r0, [r9, r0, lsl #2]
   1862c:	add	r0, r0, #1
   18630:	str	r0, [r9, r5, lsl #2]
   18634:	ldr	r1, [sl, r5, lsl #2]
   18638:	sdiv	r2, r0, r1
   1863c:	mls	r0, r2, r1, r0
   18640:	cmp	r0, #0
   18644:	bne	18700 <ReadDataSlabN+0x3498>
   18648:	mov	r0, #0
   1864c:	str	r0, [r9, r5, lsl #2]
   18650:	add	r0, r3, r5, lsl #2
   18654:	ldr	r7, [r0, #4]
   18658:	sdiv	r0, r4, r7
   1865c:	mls	r6, r0, r7, r4
   18660:	cmp	r6, #0
   18664:	beq	186ac <ReadDataSlabN+0x3444>
   18668:	ldr	r9, [r3, r5, lsl #2]
   1866c:	ldr	r0, [r8, r5, lsl #2]
   18670:	sub	r1, r7, r6
   18674:	mov	r2, #1
   18678:	mla	r0, r0, r9, r1
   1867c:	ldr	r1, [sp, #32]
   18680:	mul	r1, r0, r1
   18684:	ldr	r0, [sp, #36]	; 0x24
   18688:	ldr	r0, [r0]
   1868c:	bl	1a68 <fseek@plt>
   18690:	ldr	r0, [r8, r5, lsl #2]
   18694:	add	r1, r7, r4
   18698:	add	r3, sp, #40	; 0x28
   1869c:	sub	r1, r1, r6
   186a0:	mla	r4, r0, r9, r1
   186a4:	ldr	r9, [sp, #20]
   186a8:	b	186e4 <ReadDataSlabN+0x347c>
   186ac:	ldr	r0, [r8, r5, lsl #2]
   186b0:	cmp	r0, #0
   186b4:	beq	186e4 <ReadDataSlabN+0x347c>
   186b8:	ldr	r1, [sp, #32]
   186bc:	ldr	r6, [r3, r5, lsl #2]
   186c0:	mov	r2, #1
   186c4:	mul	r0, r0, r1
   186c8:	mul	r1, r0, r6
   186cc:	ldr	r0, [sp, #36]	; 0x24
   186d0:	ldr	r0, [r0]
   186d4:	bl	1a68 <fseek@plt>
   186d8:	ldr	r0, [r8, r5, lsl #2]
   186dc:	add	r3, sp, #40	; 0x28
   186e0:	mla	r4, r0, r6, r4
   186e4:	ldr	r2, [fp, #8]
   186e8:	ldr	r7, [fp, #24]
   186ec:	add	r1, r5, #2
   186f0:	add	r0, r5, #1
   186f4:	cmp	r1, r2
   186f8:	blt	18624 <ReadDataSlabN+0x33bc>
   186fc:	b	18724 <ReadDataSlabN+0x34bc>
   18700:	ldr	r0, [sp]
   18704:	mov	r2, #1
   18708:	ldr	r5, [r0, r5, lsl #2]
   1870c:	ldr	r0, [sp, #32]
   18710:	mul	r1, r5, r0
   18714:	ldr	r0, [sp, #36]	; 0x24
   18718:	ldr	r0, [r0]
   1871c:	bl	1a68 <fseek@plt>
   18720:	add	r4, r5, r4
   18724:	ldr	r0, [r7]
   18728:	ldr	r2, [sp, #12]
   1872c:	ldr	r1, [sp, #16]
   18730:	add	r2, r0, r2
   18734:	mov	r0, #0
   18738:	cmp	r2, r1
   1873c:	str	r2, [sp, #12]
   18740:	blt	18508 <ReadDataSlabN+0x32a0>
   18744:	b	152f0 <ReadDataSlabN+0x88>
   18748:	ldr	r0, [sp, #16]
   1874c:	cmp	r0, #1
   18750:	blt	189c4 <ReadDataSlabN+0x375c>
   18754:	add	r0, r5, #4
   18758:	add	r8, r8, #4
   1875c:	orr	r1, r9, #4
   18760:	str	r0, [sp, #8]
   18764:	add	r0, sp, #80	; 0x50
   18768:	str	r1, [sp]
   1876c:	str	r8, [sp, #4]
   18770:	orr	r0, r0, #4
   18774:	mov	r9, r0
   18778:	mov	r0, #0
   1877c:	str	r0, [sp, #12]
   18780:	str	r9, [sp, #20]
   18784:	ldr	r5, [fp, #16]
   18788:	ldr	r0, [r5]
   1878c:	cmp	r0, #0
   18790:	beq	187b8 <ReadDataSlabN+0x3550>
   18794:	ldr	r1, [sp, #32]
   18798:	mov	r2, #1
   1879c:	mul	r1, r0, r1
   187a0:	ldr	r0, [sp, #36]	; 0x24
   187a4:	ldr	r0, [r0]
   187a8:	bl	1a68 <fseek@plt>
   187ac:	ldr	r0, [r5]
   187b0:	add	r4, r0, r4
   187b4:	b	187bc <ReadDataSlabN+0x3554>
   187b8:	mov	r0, #0
   187bc:	ldr	r7, [fp, #24]
   187c0:	ldr	sl, [sp, #8]
   187c4:	ldr	r2, [sp, #28]
   187c8:	ldr	r1, [r7]
   187cc:	cmp	r1, #0
   187d0:	ble	18858 <ReadDataSlabN+0x35f0>
   187d4:	ldr	r0, [sp, #24]
   187d8:	ldr	r1, [sp, #12]
   187dc:	ldr	r8, [sp, #32]
   187e0:	ldr	r7, [fp, #20]
   187e4:	ldr	sl, [sp, #36]	; 0x24
   187e8:	mov	r9, #0
   187ec:	add	r5, r0, r1, lsl #3
   187f0:	mov	r0, sl
   187f4:	mov	r1, r5
   187f8:	mov	r3, #1
   187fc:	mov	r6, r2
   18800:	bl	9814 <ReadUInt64Data>
   18804:	ldr	r0, [r7]
   18808:	mov	r2, #1
   1880c:	sub	r0, r0, #1
   18810:	mul	r1, r0, r8
   18814:	ldr	r0, [sl]
   18818:	bl	1a68 <fseek@plt>
   1881c:	ldr	r0, [fp, #24]
   18820:	mov	r2, r6
   18824:	ldr	r6, [r7]
   18828:	add	r9, r9, #1
   1882c:	add	r5, r5, #8
   18830:	ldr	r1, [r0]
   18834:	add	r4, r6, r4
   18838:	cmp	r9, r1
   1883c:	blt	187f0 <ReadDataSlabN+0x3588>
   18840:	ldr	r0, [fp, #16]
   18844:	ldr	r7, [fp, #24]
   18848:	ldr	r0, [r0]
   1884c:	ldmib	sp, {r8, sl}
   18850:	ldr	r9, [sp, #20]
   18854:	b	18860 <ReadDataSlabN+0x35f8>
   18858:	ldr	r2, [fp, #20]
   1885c:	ldr	r6, [r2]
   18860:	ldr	r3, [fp, #12]
   18864:	mov	r2, #1
   18868:	ldr	r3, [r3]
   1886c:	mls	r1, r6, r1, r3
   18870:	sub	r5, r1, r0
   18874:	ldr	r0, [sp, #32]
   18878:	mul	r1, r5, r0
   1887c:	ldr	r0, [sp, #36]	; 0x24
   18880:	ldr	r0, [r0]
   18884:	bl	1a68 <fseek@plt>
   18888:	ldr	r0, [fp, #8]
   1888c:	add	r4, r5, r4
   18890:	cmp	r0, #2
   18894:	blt	189a0 <ReadDataSlabN+0x3738>
   18898:	mov	r0, #0
   1889c:	add	r3, sp, #40	; 0x28
   188a0:	mov	r5, r0
   188a4:	ldr	r0, [r9, r0, lsl #2]
   188a8:	add	r0, r0, #1
   188ac:	str	r0, [r9, r5, lsl #2]
   188b0:	ldr	r1, [sl, r5, lsl #2]
   188b4:	sdiv	r2, r0, r1
   188b8:	mls	r0, r2, r1, r0
   188bc:	cmp	r0, #0
   188c0:	bne	1897c <ReadDataSlabN+0x3714>
   188c4:	mov	r0, #0
   188c8:	str	r0, [r9, r5, lsl #2]
   188cc:	add	r0, r3, r5, lsl #2
   188d0:	ldr	r7, [r0, #4]
   188d4:	sdiv	r0, r4, r7
   188d8:	mls	r6, r0, r7, r4
   188dc:	cmp	r6, #0
   188e0:	beq	18928 <ReadDataSlabN+0x36c0>
   188e4:	ldr	r9, [r3, r5, lsl #2]
   188e8:	ldr	r0, [r8, r5, lsl #2]
   188ec:	sub	r1, r7, r6
   188f0:	mov	r2, #1
   188f4:	mla	r0, r0, r9, r1
   188f8:	ldr	r1, [sp, #32]
   188fc:	mul	r1, r0, r1
   18900:	ldr	r0, [sp, #36]	; 0x24
   18904:	ldr	r0, [r0]
   18908:	bl	1a68 <fseek@plt>
   1890c:	ldr	r0, [r8, r5, lsl #2]
   18910:	add	r1, r7, r4
   18914:	add	r3, sp, #40	; 0x28
   18918:	sub	r1, r1, r6
   1891c:	mla	r4, r0, r9, r1
   18920:	ldr	r9, [sp, #20]
   18924:	b	18960 <ReadDataSlabN+0x36f8>
   18928:	ldr	r0, [r8, r5, lsl #2]
   1892c:	cmp	r0, #0
   18930:	beq	18960 <ReadDataSlabN+0x36f8>
   18934:	ldr	r1, [sp, #32]
   18938:	ldr	r6, [r3, r5, lsl #2]
   1893c:	mov	r2, #1
   18940:	mul	r0, r0, r1
   18944:	mul	r1, r0, r6
   18948:	ldr	r0, [sp, #36]	; 0x24
   1894c:	ldr	r0, [r0]
   18950:	bl	1a68 <fseek@plt>
   18954:	ldr	r0, [r8, r5, lsl #2]
   18958:	add	r3, sp, #40	; 0x28
   1895c:	mla	r4, r0, r6, r4
   18960:	ldr	r2, [fp, #8]
   18964:	ldr	r7, [fp, #24]
   18968:	add	r1, r5, #2
   1896c:	add	r0, r5, #1
   18970:	cmp	r1, r2
   18974:	blt	188a0 <ReadDataSlabN+0x3638>
   18978:	b	189a0 <ReadDataSlabN+0x3738>
   1897c:	ldr	r0, [sp]
   18980:	mov	r2, #1
   18984:	ldr	r5, [r0, r5, lsl #2]
   18988:	ldr	r0, [sp, #32]
   1898c:	mul	r1, r5, r0
   18990:	ldr	r0, [sp, #36]	; 0x24
   18994:	ldr	r0, [r0]
   18998:	bl	1a68 <fseek@plt>
   1899c:	add	r4, r5, r4
   189a0:	ldr	r0, [r7]
   189a4:	ldr	r2, [sp, #12]
   189a8:	ldr	r1, [sp, #16]
   189ac:	add	r2, r0, r2
   189b0:	mov	r0, #0
   189b4:	cmp	r2, r1
   189b8:	str	r2, [sp, #12]
   189bc:	blt	18784 <ReadDataSlabN+0x351c>
   189c0:	b	152f0 <ReadDataSlabN+0x88>
   189c4:	mov	r0, #0
   189c8:	b	152f0 <ReadDataSlabN+0x88>

000189cc <ReadCompressedDataSlabN>:
   189cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   189d0:	add	fp, sp, #28
   189d4:	sub	sp, sp, #228	; 0xe4
   189d8:	sub	r5, fp, #72	; 0x48
   189dc:	mov	r7, r0
   189e0:	mov	r6, r2
   189e4:	vmov.i32	q8, #0	; 0x00000000
   189e8:	mov	r0, #36	; 0x24
   189ec:	mov	r4, r3
   189f0:	mov	r3, #0
   189f4:	add	sl, sp, #104	; 0x68
   189f8:	mov	r2, r5
   189fc:	cmp	r7, #0
   18a00:	str	r3, [fp, #-40]	; 0xffffffd8
   18a04:	str	r3, [fp, #-80]	; 0xffffffb0
   18a08:	str	r3, [sp, #136]	; 0x88
   18a0c:	str	r3, [sp, #96]	; 0x60
   18a10:	vst1.64	{d16-d17}, [r2], r0
   18a14:	cmpne	r6, #0
   18a18:	str	r3, [r2]
   18a1c:	add	r2, r5, #16
   18a20:	sub	r5, fp, #112	; 0x70
   18a24:	vst1.64	{d16-d17}, [r2]
   18a28:	add	r2, r5, #16
   18a2c:	vst1.64	{d16-d17}, [r2]
   18a30:	mov	r2, r5
   18a34:	vst1.64	{d16-d17}, [r2], r0
   18a38:	str	r3, [r2]
   18a3c:	add	r2, sl, #16
   18a40:	vst1.64	{d16-d17}, [r2]
   18a44:	mov	r2, sl
   18a48:	vst1.64	{d16-d17}, [r2], r0
   18a4c:	add	r0, sp, #48	; 0x30
   18a50:	str	r3, [r2]
   18a54:	add	r2, r0, #32
   18a58:	vst1.64	{d16-d17}, [r2]
   18a5c:	add	r2, r0, #16
   18a60:	vst1.64	{d16-d17}, [r2]
   18a64:	mov	r2, #52	; 0x34
   18a68:	vst1.64	{d16-d17}, [r0], r2
   18a6c:	str	r3, [r0]
   18a70:	mov	r0, #1
   18a74:	bne	18a80 <ReadCompressedDataSlabN+0xb4>
   18a78:	sub	sp, fp, #28
   18a7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18a80:	ldr	r2, [fp, #12]
   18a84:	cmp	r2, #10
   18a88:	bgt	18a78 <ReadCompressedDataSlabN+0xac>
   18a8c:	ldr	r2, [fp, #28]
   18a90:	cmp	r2, #0
   18a94:	ldrne	r5, [fp, #24]
   18a98:	cmpne	r5, #0
   18a9c:	beq	18a78 <ReadCompressedDataSlabN+0xac>
   18aa0:	ldr	r9, [fp, #20]
   18aa4:	cmp	r9, #0
   18aa8:	ldrne	r2, [r7]
   18aac:	cmpne	r2, #0
   18ab0:	beq	18a78 <ReadCompressedDataSlabN+0xac>
   18ab4:	add	r0, sp, #48	; 0x30
   18ab8:	str	r6, [sp, #36]	; 0x24
   18abc:	str	r7, [sp, #44]	; 0x2c
   18ac0:	bl	1960 <inflateCopy@plt>
   18ac4:	sub	r0, r4, #6
   18ac8:	cmp	r0, #9
   18acc:	bhi	1c8c8 <ReadCompressedDataSlabN+0x3efc>
   18ad0:	add	r1, pc, #8
   18ad4:	ldr	r6, [fp, #16]
   18ad8:	ldr	r0, [r1, r0, lsl #2]
   18adc:	add	pc, r1, r0
   18ae0:	.word	0x00000028
   18ae4:	.word	0x000000f0
   18ae8:	.word	0x000001bc
   18aec:	.word	0x000004f8
   18af0:	.word	0x00000834
   18af4:	.word	0x00000900
   18af8:	.word	0x00000c3c
   18afc:	.word	0x00000d08
   18b00:	.word	0x00000dd4
   18b04:	.word	0x00000ea4
   18b08:	ldr	r0, [r5]
   18b0c:	ldr	r8, [fp, #28]
   18b10:	sub	r0, r0, #1
   18b14:	str	r0, [fp, #-72]	; 0xffffffb8
   18b18:	ldr	ip, [r6]
   18b1c:	str	ip, [sp, #104]	; 0x68
   18b20:	ldr	r0, [r8]
   18b24:	str	r0, [sp, #32]
   18b28:	ldr	r0, [fp, #12]
   18b2c:	cmp	r0, #2
   18b30:	blt	19a50 <ReadCompressedDataSlabN+0x1084>
   18b34:	mov	r4, r8
   18b38:	mov	r8, #0
   18b3c:	mov	r5, #1
   18b40:	mov	r1, r6
   18b44:	mov	r3, ip
   18b48:	sub	r0, fp, #72	; 0x48
   18b4c:	ldr	r2, [fp, #24]
   18b50:	mov	r7, r4
   18b54:	ldr	r2, [r2, r5, lsl #2]
   18b58:	str	r3, [sl, r5, lsl #2]
   18b5c:	sub	r4, r2, #1
   18b60:	mov	r2, #0
   18b64:	str	r4, [r0, r5, lsl #2]
   18b68:	ldr	lr, [r6, r5, lsl #2]
   18b6c:	mov	r6, lr
   18b70:	mul	r3, r6, r3
   18b74:	ldr	r6, [r1, -r2, lsl #2]
   18b78:	add	r2, r2, #1
   18b7c:	cmp	r5, r2
   18b80:	mul	r4, r4, r6
   18b84:	bne	18b70 <ReadCompressedDataSlabN+0x1a4>
   18b88:	str	r4, [r0, r5, lsl #2]
   18b8c:	str	r3, [sl, r5, lsl #2]
   18b90:	ldr	r6, [sp, #32]
   18b94:	mov	r4, r7
   18b98:	add	r1, r1, #4
   18b9c:	ldr	r2, [r9, r5, lsl #2]
   18ba0:	mla	r8, r2, ip, r8
   18ba4:	ldr	r2, [r7, r5, lsl #2]
   18ba8:	add	r5, r5, #1
   18bac:	mov	ip, r3
   18bb0:	mov	r3, lr
   18bb4:	mul	r6, r2, r6
   18bb8:	ldr	r2, [fp, #12]
   18bbc:	str	r6, [sp, #32]
   18bc0:	ldr	r6, [fp, #16]
   18bc4:	cmp	r5, r2
   18bc8:	bne	18b4c <ReadCompressedDataSlabN+0x180>
   18bcc:	b	19a54 <ReadCompressedDataSlabN+0x1088>
   18bd0:	ldr	r0, [r5]
   18bd4:	ldr	r7, [fp, #28]
   18bd8:	sub	r0, r0, #1
   18bdc:	str	r0, [fp, #-72]	; 0xffffffb8
   18be0:	ldr	ip, [r6]
   18be4:	str	ip, [sp, #104]	; 0x68
   18be8:	ldr	r0, [r7]
   18bec:	str	r0, [sp, #28]
   18bf0:	ldr	r0, [fp, #12]
   18bf4:	cmp	r0, #2
   18bf8:	blt	19cc4 <ReadCompressedDataSlabN+0x12f8>
   18bfc:	mov	r4, r7
   18c00:	mov	r8, #0
   18c04:	mov	r5, #1
   18c08:	mov	r1, r6
   18c0c:	mov	r3, ip
   18c10:	sub	r7, fp, #72	; 0x48
   18c14:	ldr	r2, [fp, #24]
   18c18:	mov	r0, r4
   18c1c:	ldr	r2, [r2, r5, lsl #2]
   18c20:	str	r3, [sl, r5, lsl #2]
   18c24:	sub	r4, r2, #1
   18c28:	mov	r2, #0
   18c2c:	str	r4, [r7, r5, lsl #2]
   18c30:	ldr	lr, [r6, r5, lsl #2]
   18c34:	mov	r6, lr
   18c38:	mul	r3, r6, r3
   18c3c:	ldr	r6, [r1, -r2, lsl #2]
   18c40:	add	r2, r2, #1
   18c44:	cmp	r5, r2
   18c48:	mul	r4, r4, r6
   18c4c:	bne	18c38 <ReadCompressedDataSlabN+0x26c>
   18c50:	sub	r7, fp, #72	; 0x48
   18c54:	str	r3, [sl, r5, lsl #2]
   18c58:	ldr	r6, [sp, #28]
   18c5c:	add	r1, r1, #4
   18c60:	str	r4, [r7, r5, lsl #2]
   18c64:	mov	r4, r0
   18c68:	ldr	r2, [r9, r5, lsl #2]
   18c6c:	mla	r8, r2, ip, r8
   18c70:	ldr	r2, [r0, r5, lsl #2]
   18c74:	add	r5, r5, #1
   18c78:	mov	ip, r3
   18c7c:	mov	r3, lr
   18c80:	mul	r6, r2, r6
   18c84:	ldr	r2, [fp, #12]
   18c88:	str	r6, [sp, #28]
   18c8c:	ldr	r6, [fp, #16]
   18c90:	cmp	r5, r2
   18c94:	bne	18c14 <ReadCompressedDataSlabN+0x248>
   18c98:	b	19cc8 <ReadCompressedDataSlabN+0x12fc>
   18c9c:	ldr	r0, [r5]
   18ca0:	ldr	r8, [fp, #28]
   18ca4:	mov	r7, #0
   18ca8:	sub	r0, r0, #1
   18cac:	str	r0, [fp, #-72]	; 0xffffffb8
   18cb0:	ldr	ip, [r6]
   18cb4:	str	ip, [sp, #104]	; 0x68
   18cb8:	ldr	r0, [r8]
   18cbc:	str	r0, [sp, #20]
   18cc0:	ldr	r0, [fp, #12]
   18cc4:	cmp	r0, #2
   18cc8:	blt	18d68 <ReadCompressedDataSlabN+0x39c>
   18ccc:	mov	r4, r8
   18cd0:	mov	r7, #0
   18cd4:	mov	r5, #1
   18cd8:	mov	r1, r6
   18cdc:	mov	r3, ip
   18ce0:	sub	r8, fp, #72	; 0x48
   18ce4:	ldr	r2, [fp, #24]
   18ce8:	mov	r0, r4
   18cec:	ldr	r2, [r2, r5, lsl #2]
   18cf0:	str	r3, [sl, r5, lsl #2]
   18cf4:	sub	r4, r2, #1
   18cf8:	mov	r2, #0
   18cfc:	str	r4, [r8, r5, lsl #2]
   18d00:	ldr	lr, [r6, r5, lsl #2]
   18d04:	mov	r6, lr
   18d08:	mul	r3, r6, r3
   18d0c:	ldr	r6, [r1, -r2, lsl #2]
   18d10:	add	r2, r2, #1
   18d14:	cmp	r5, r2
   18d18:	mul	r4, r4, r6
   18d1c:	bne	18d08 <ReadCompressedDataSlabN+0x33c>
   18d20:	sub	r8, fp, #72	; 0x48
   18d24:	str	r3, [sl, r5, lsl #2]
   18d28:	ldr	r6, [sp, #20]
   18d2c:	add	r1, r1, #4
   18d30:	str	r4, [r8, r5, lsl #2]
   18d34:	mov	r4, r0
   18d38:	ldr	r2, [r9, r5, lsl #2]
   18d3c:	mla	r7, r2, ip, r7
   18d40:	ldr	r2, [r0, r5, lsl #2]
   18d44:	add	r5, r5, #1
   18d48:	mov	ip, r3
   18d4c:	mov	r3, lr
   18d50:	mul	r6, r2, r6
   18d54:	ldr	r2, [fp, #12]
   18d58:	str	r6, [sp, #20]
   18d5c:	ldr	r6, [fp, #16]
   18d60:	cmp	r5, r2
   18d64:	bne	18ce4 <ReadCompressedDataSlabN+0x318>
   18d68:	ldr	r0, [sp, #44]	; 0x2c
   18d6c:	ldr	r2, [fp, #8]
   18d70:	add	r1, sp, #48	; 0x30
   18d74:	mov	r3, r7
   18d78:	bl	26a0 <InflateSkipData>
   18d7c:	ldr	r0, [fp, #24]
   18d80:	str	r7, [sp, #24]
   18d84:	ldr	r0, [r0]
   18d88:	cmp	r0, #1
   18d8c:	bne	19f38 <ReadCompressedDataSlabN+0x156c>
   18d90:	ldr	r0, [sp, #20]
   18d94:	cmp	r0, #1
   18d98:	blt	1c8c8 <ReadCompressedDataSlabN+0x3efc>
   18d9c:	ldr	r0, [fp, #28]
   18da0:	add	r6, r9, #4
   18da4:	add	r1, sp, #48	; 0x30
   18da8:	add	r8, r0, #4
   18dac:	sub	r0, fp, #112	; 0x70
   18db0:	orr	r4, r0, #4
   18db4:	sub	r0, fp, #72	; 0x48
   18db8:	str	r8, [sp, #32]
   18dbc:	orr	r0, r0, #4
   18dc0:	str	r0, [sp, #28]
   18dc4:	mov	r0, #0
   18dc8:	str	r0, [sp, #40]	; 0x28
   18dcc:	ldr	r3, [r9]
   18dd0:	cmp	r3, #0
   18dd4:	beq	18e0c <ReadCompressedDataSlabN+0x440>
   18dd8:	ldr	r7, [sp, #44]	; 0x2c
   18ddc:	ldr	r8, [fp, #8]
   18de0:	mov	r5, r9
   18de4:	mov	r9, r1
   18de8:	mov	r0, r7
   18dec:	mov	r2, r8
   18df0:	bl	26a0 <InflateSkipData>
   18df4:	ldr	r0, [r5]
   18df8:	ldr	r1, [sp, #24]
   18dfc:	ldr	r5, [fp, #28]
   18e00:	add	r1, r0, r1
   18e04:	str	r1, [sp, #24]
   18e08:	b	18e1c <ReadCompressedDataSlabN+0x450>
   18e0c:	ldr	r7, [sp, #44]	; 0x2c
   18e10:	ldr	r5, [fp, #28]
   18e14:	ldr	r8, [fp, #8]
   18e18:	mov	r9, r1
   18e1c:	ldr	r0, [r5]
   18e20:	ldr	r1, [sp, #40]	; 0x28
   18e24:	mov	r3, r8
   18e28:	str	r0, [sp]
   18e2c:	ldr	r0, [sp, #36]	; 0x24
   18e30:	add	r2, r0, r1
   18e34:	mov	r0, r7
   18e38:	mov	r1, r9
   18e3c:	bl	13168 <ReadCompressedInt8Data>
   18e40:	ldr	r1, [fp, #16]
   18e44:	ldr	r0, [fp, #20]
   18e48:	mov	r2, r7
   18e4c:	mov	r7, r0
   18e50:	ldr	r0, [r0]
   18e54:	ldr	r1, [r1]
   18e58:	sub	r0, r1, r0
   18e5c:	ldr	r1, [r5]
   18e60:	sub	r3, r0, r1
   18e64:	mov	r0, r2
   18e68:	mov	r1, r9
   18e6c:	mov	r2, r8
   18e70:	bl	26a0 <InflateSkipData>
   18e74:	ldr	r0, [fp, #16]
   18e78:	ldr	r1, [sp, #24]
   18e7c:	ldr	r0, [r0]
   18e80:	add	r0, r0, r1
   18e84:	ldr	r1, [r7]
   18e88:	sub	r7, r0, r1
   18e8c:	ldr	r0, [fp, #12]
   18e90:	cmp	r0, #2
   18e94:	blt	18fa8 <ReadCompressedDataSlabN+0x5dc>
   18e98:	ldr	r8, [sp, #32]
   18e9c:	mov	r0, #0
   18ea0:	mov	r9, r0
   18ea4:	ldr	r0, [r4, r0, lsl #2]
   18ea8:	add	r0, r0, #1
   18eac:	str	r0, [r4, r9, lsl #2]
   18eb0:	ldr	r1, [r8, r9, lsl #2]
   18eb4:	sdiv	r2, r0, r1
   18eb8:	mls	r0, r2, r1, r0
   18ebc:	cmp	r0, #0
   18ec0:	bne	18f80 <ReadCompressedDataSlabN+0x5b4>
   18ec4:	mov	r0, #0
   18ec8:	mov	r5, sl
   18ecc:	add	sl, sl, r9, lsl #2
   18ed0:	str	r0, [r4, r9, lsl #2]
   18ed4:	ldr	r0, [sl, #4]
   18ed8:	sdiv	r1, r7, r0
   18edc:	mls	r1, r1, r0, r7
   18ee0:	cmp	r1, #0
   18ee4:	beq	18f34 <ReadCompressedDataSlabN+0x568>
   18ee8:	ldr	r2, [r5, r9, lsl #2]
   18eec:	ldr	r3, [r6, r9, lsl #2]
   18ef0:	sub	r0, r0, r1
   18ef4:	add	r1, sp, #48	; 0x30
   18ef8:	mla	r3, r3, r2, r0
   18efc:	ldr	r0, [sp, #44]	; 0x2c
   18f00:	ldr	r2, [fp, #8]
   18f04:	bl	26a0 <InflateSkipData>
   18f08:	ldr	r0, [sl, #4]
   18f0c:	mov	sl, r5
   18f10:	sdiv	r2, r7, r0
   18f14:	add	r1, r0, r7
   18f18:	mul	r0, r2, r0
   18f1c:	ldr	r2, [r6, r9, lsl #2]
   18f20:	sub	r0, r0, r7
   18f24:	add	r0, r1, r0
   18f28:	ldr	r1, [r5, r9, lsl #2]
   18f2c:	mla	r7, r2, r1, r0
   18f30:	b	18f68 <ReadCompressedDataSlabN+0x59c>
   18f34:	ldr	r0, [r6, r9, lsl #2]
   18f38:	add	sl, sp, #104	; 0x68
   18f3c:	cmp	r0, #0
   18f40:	beq	18f68 <ReadCompressedDataSlabN+0x59c>
   18f44:	ldr	r1, [sl, r9, lsl #2]
   18f48:	ldr	r2, [fp, #8]
   18f4c:	mul	r3, r1, r0
   18f50:	ldr	r0, [sp, #44]	; 0x2c
   18f54:	add	r1, sp, #48	; 0x30
   18f58:	bl	26a0 <InflateSkipData>
   18f5c:	ldr	r0, [sl, r9, lsl #2]
   18f60:	ldr	r1, [r6, r9, lsl #2]
   18f64:	mla	r7, r1, r0, r7
   18f68:	ldr	r2, [fp, #12]
   18f6c:	add	r1, r9, #2
   18f70:	add	r0, r9, #1
   18f74:	cmp	r1, r2
   18f78:	blt	18ea0 <ReadCompressedDataSlabN+0x4d4>
   18f7c:	b	18fa8 <ReadCompressedDataSlabN+0x5dc>
   18f80:	ldr	r0, [sp, #28]
   18f84:	ldr	r5, [r0, r9, lsl #2]
   18f88:	cmp	r5, #0
   18f8c:	beq	18fa8 <ReadCompressedDataSlabN+0x5dc>
   18f90:	ldr	r0, [sp, #44]	; 0x2c
   18f94:	ldr	r2, [fp, #8]
   18f98:	add	r1, sp, #48	; 0x30
   18f9c:	mov	r3, r5
   18fa0:	bl	26a0 <InflateSkipData>
   18fa4:	add	r7, r5, r7
   18fa8:	ldr	r0, [fp, #28]
   18fac:	ldr	r1, [sp, #40]	; 0x28
   18fb0:	ldr	r9, [fp, #20]
   18fb4:	str	r7, [sp, #24]
   18fb8:	ldr	r0, [r0]
   18fbc:	add	r1, r0, r1
   18fc0:	ldr	r0, [sp, #20]
   18fc4:	str	r1, [sp, #40]	; 0x28
   18fc8:	cmp	r1, r0
   18fcc:	add	r1, sp, #48	; 0x30
   18fd0:	blt	18dcc <ReadCompressedDataSlabN+0x400>
   18fd4:	b	1c8c8 <ReadCompressedDataSlabN+0x3efc>
   18fd8:	ldr	r0, [r5]
   18fdc:	ldr	r8, [fp, #28]
   18fe0:	mov	r7, #0
   18fe4:	sub	r0, r0, #1
   18fe8:	str	r0, [fp, #-72]	; 0xffffffb8
   18fec:	ldr	ip, [r6]
   18ff0:	str	ip, [sp, #104]	; 0x68
   18ff4:	ldr	r0, [r8]
   18ff8:	str	r0, [sp, #20]
   18ffc:	ldr	r0, [fp, #12]
   19000:	cmp	r0, #2
   19004:	blt	190a4 <ReadCompressedDataSlabN+0x6d8>
   19008:	mov	r4, r8
   1900c:	mov	r7, #0
   19010:	mov	r5, #1
   19014:	mov	r1, r6
   19018:	mov	r3, ip
   1901c:	sub	r8, fp, #72	; 0x48
   19020:	ldr	r2, [fp, #24]
   19024:	mov	r0, r4
   19028:	ldr	r2, [r2, r5, lsl #2]
   1902c:	str	r3, [sl, r5, lsl #2]
   19030:	sub	r4, r2, #1
   19034:	mov	r2, #0
   19038:	str	r4, [r8, r5, lsl #2]
   1903c:	ldr	lr, [r6, r5, lsl #2]
   19040:	mov	r6, lr
   19044:	mul	r3, r6, r3
   19048:	ldr	r6, [r1, -r2, lsl #2]
   1904c:	add	r2, r2, #1
   19050:	cmp	r5, r2
   19054:	mul	r4, r4, r6
   19058:	bne	19044 <ReadCompressedDataSlabN+0x678>
   1905c:	sub	r8, fp, #72	; 0x48
   19060:	str	r3, [sl, r5, lsl #2]
   19064:	ldr	r6, [sp, #20]
   19068:	add	r1, r1, #4
   1906c:	str	r4, [r8, r5, lsl #2]
   19070:	mov	r4, r0
   19074:	ldr	r2, [r9, r5, lsl #2]
   19078:	mla	r7, r2, ip, r7
   1907c:	ldr	r2, [r0, r5, lsl #2]
   19080:	add	r5, r5, #1
   19084:	mov	ip, r3
   19088:	mov	r3, lr
   1908c:	mul	r6, r2, r6
   19090:	ldr	r2, [fp, #12]
   19094:	str	r6, [sp, #20]
   19098:	ldr	r6, [fp, #16]
   1909c:	cmp	r5, r2
   190a0:	bne	19020 <ReadCompressedDataSlabN+0x654>
   190a4:	ldr	r0, [sp, #44]	; 0x2c
   190a8:	ldr	r2, [fp, #8]
   190ac:	add	r1, sp, #48	; 0x30
   190b0:	mov	r3, r7
   190b4:	bl	26a0 <InflateSkipData>
   190b8:	ldr	r0, [fp, #24]
   190bc:	str	r7, [sp, #24]
   190c0:	ldr	r0, [r0]
   190c4:	cmp	r0, #1
   190c8:	bne	1a21c <ReadCompressedDataSlabN+0x1850>
   190cc:	ldr	r0, [sp, #20]
   190d0:	cmp	r0, #1
   190d4:	blt	1c8c8 <ReadCompressedDataSlabN+0x3efc>
   190d8:	ldr	r0, [fp, #28]
   190dc:	add	r6, r9, #4
   190e0:	add	r1, sp, #48	; 0x30
   190e4:	add	r8, r0, #4
   190e8:	sub	r0, fp, #112	; 0x70
   190ec:	orr	r4, r0, #4
   190f0:	sub	r0, fp, #72	; 0x48
   190f4:	str	r8, [sp, #32]
   190f8:	orr	r0, r0, #4
   190fc:	str	r0, [sp, #28]
   19100:	mov	r0, #0
   19104:	str	r0, [sp, #40]	; 0x28
   19108:	ldr	r3, [r9]
   1910c:	cmp	r3, #0
   19110:	beq	19148 <ReadCompressedDataSlabN+0x77c>
   19114:	ldr	r7, [sp, #44]	; 0x2c
   19118:	ldr	r8, [fp, #8]
   1911c:	mov	r5, r9
   19120:	mov	r9, r1
   19124:	mov	r0, r7
   19128:	mov	r2, r8
   1912c:	bl	26a0 <InflateSkipData>
   19130:	ldr	r0, [r5]
   19134:	ldr	r1, [sp, #24]
   19138:	ldr	r5, [fp, #28]
   1913c:	add	r1, r0, r1
   19140:	str	r1, [sp, #24]
   19144:	b	19158 <ReadCompressedDataSlabN+0x78c>
   19148:	ldr	r7, [sp, #44]	; 0x2c
   1914c:	ldr	r5, [fp, #28]
   19150:	ldr	r8, [fp, #8]
   19154:	mov	r9, r1
   19158:	ldr	r0, [r5]
   1915c:	ldr	r1, [sp, #40]	; 0x28
   19160:	mov	r3, r8
   19164:	str	r0, [sp]
   19168:	ldr	r0, [sp, #36]	; 0x24
   1916c:	add	r2, r0, r1
   19170:	mov	r0, r7
   19174:	mov	r1, r9
   19178:	bl	14b0c <ReadCompressedUInt8Data>
   1917c:	ldr	r1, [fp, #16]
   19180:	ldr	r0, [fp, #20]
   19184:	mov	r2, r7
   19188:	mov	r7, r0
   1918c:	ldr	r0, [r0]
   19190:	ldr	r1, [r1]
   19194:	sub	r0, r1, r0
   19198:	ldr	r1, [r5]
   1919c:	sub	r3, r0, r1
   191a0:	mov	r0, r2
   191a4:	mov	r1, r9
   191a8:	mov	r2, r8
   191ac:	bl	26a0 <InflateSkipData>
   191b0:	ldr	r0, [fp, #16]
   191b4:	ldr	r1, [sp, #24]
   191b8:	ldr	r0, [r0]
   191bc:	add	r0, r0, r1
   191c0:	ldr	r1, [r7]
   191c4:	sub	r7, r0, r1
   191c8:	ldr	r0, [fp, #12]
   191cc:	cmp	r0, #2
   191d0:	blt	192e4 <ReadCompressedDataSlabN+0x918>
   191d4:	ldr	r8, [sp, #32]
   191d8:	mov	r0, #0
   191dc:	mov	r9, r0
   191e0:	ldr	r0, [r4, r0, lsl #2]
   191e4:	add	r0, r0, #1
   191e8:	str	r0, [r4, r9, lsl #2]
   191ec:	ldr	r1, [r8, r9, lsl #2]
   191f0:	sdiv	r2, r0, r1
   191f4:	mls	r0, r2, r1, r0
   191f8:	cmp	r0, #0
   191fc:	bne	192bc <ReadCompressedDataSlabN+0x8f0>
   19200:	mov	r0, #0
   19204:	mov	r5, sl
   19208:	add	sl, sl, r9, lsl #2
   1920c:	str	r0, [r4, r9, lsl #2]
   19210:	ldr	r0, [sl, #4]
   19214:	sdiv	r1, r7, r0
   19218:	mls	r1, r1, r0, r7
   1921c:	cmp	r1, #0
   19220:	beq	19270 <ReadCompressedDataSlabN+0x8a4>
   19224:	ldr	r2, [r5, r9, lsl #2]
   19228:	ldr	r3, [r6, r9, lsl #2]
   1922c:	sub	r0, r0, r1
   19230:	add	r1, sp, #48	; 0x30
   19234:	mla	r3, r3, r2, r0
   19238:	ldr	r0, [sp, #44]	; 0x2c
   1923c:	ldr	r2, [fp, #8]
   19240:	bl	26a0 <InflateSkipData>
   19244:	ldr	r0, [sl, #4]
   19248:	mov	sl, r5
   1924c:	sdiv	r2, r7, r0
   19250:	add	r1, r0, r7
   19254:	mul	r0, r2, r0
   19258:	ldr	r2, [r6, r9, lsl #2]
   1925c:	sub	r0, r0, r7
   19260:	add	r0, r1, r0
   19264:	ldr	r1, [r5, r9, lsl #2]
   19268:	mla	r7, r2, r1, r0
   1926c:	b	192a4 <ReadCompressedDataSlabN+0x8d8>
   19270:	ldr	r0, [r6, r9, lsl #2]
   19274:	add	sl, sp, #104	; 0x68
   19278:	cmp	r0, #0
   1927c:	beq	192a4 <ReadCompressedDataSlabN+0x8d8>
   19280:	ldr	r1, [sl, r9, lsl #2]
   19284:	ldr	r2, [fp, #8]
   19288:	mul	r3, r1, r0
   1928c:	ldr	r0, [sp, #44]	; 0x2c
   19290:	add	r1, sp, #48	; 0x30
   19294:	bl	26a0 <InflateSkipData>
   19298:	ldr	r0, [sl, r9, lsl #2]
   1929c:	ldr	r1, [r6, r9, lsl #2]
   192a0:	mla	r7, r1, r0, r7
   192a4:	ldr	r2, [fp, #12]
   192a8:	add	r1, r9, #2
   192ac:	add	r0, r9, #1
   192b0:	cmp	r1, r2
   192b4:	blt	191dc <ReadCompressedDataSlabN+0x810>
   192b8:	b	192e4 <ReadCompressedDataSlabN+0x918>
   192bc:	ldr	r0, [sp, #28]
   192c0:	ldr	r5, [r0, r9, lsl #2]
   192c4:	cmp	r5, #0
   192c8:	beq	192e4 <ReadCompressedDataSlabN+0x918>
   192cc:	ldr	r0, [sp, #44]	; 0x2c
   192d0:	ldr	r2, [fp, #8]
   192d4:	add	r1, sp, #48	; 0x30
   192d8:	mov	r3, r5
   192dc:	bl	26a0 <InflateSkipData>
   192e0:	add	r7, r5, r7
   192e4:	ldr	r0, [fp, #28]
   192e8:	ldr	r1, [sp, #40]	; 0x28
   192ec:	ldr	r9, [fp, #20]
   192f0:	str	r7, [sp, #24]
   192f4:	ldr	r0, [r0]
   192f8:	add	r1, r0, r1
   192fc:	ldr	r0, [sp, #20]
   19300:	str	r1, [sp, #40]	; 0x28
   19304:	cmp	r1, r0
   19308:	add	r1, sp, #48	; 0x30
   1930c:	blt	19108 <ReadCompressedDataSlabN+0x73c>
   19310:	b	1c8c8 <ReadCompressedDataSlabN+0x3efc>
   19314:	ldr	r0, [r5]
   19318:	ldr	r7, [fp, #28]
   1931c:	sub	r0, r0, #1
   19320:	str	r0, [fp, #-72]	; 0xffffffb8
   19324:	ldr	ip, [r6]
   19328:	str	ip, [sp, #104]	; 0x68
   1932c:	ldr	r0, [r7]
   19330:	str	r0, [sp, #28]
   19334:	ldr	r0, [fp, #12]
   19338:	cmp	r0, #2
   1933c:	blt	1a500 <ReadCompressedDataSlabN+0x1b34>
   19340:	mov	r4, r7
   19344:	mov	r8, #0
   19348:	mov	r5, #1
   1934c:	mov	r1, r6
   19350:	mov	r3, ip
   19354:	sub	r7, fp, #72	; 0x48
   19358:	ldr	r2, [fp, #24]
   1935c:	mov	r0, r4
   19360:	ldr	r2, [r2, r5, lsl #2]
   19364:	str	r3, [sl, r5, lsl #2]
   19368:	sub	r4, r2, #1
   1936c:	mov	r2, #0
   19370:	str	r4, [r7, r5, lsl #2]
   19374:	ldr	lr, [r6, r5, lsl #2]
   19378:	mov	r6, lr
   1937c:	mul	r3, r6, r3
   19380:	ldr	r6, [r1, -r2, lsl #2]
   19384:	add	r2, r2, #1
   19388:	cmp	r5, r2
   1938c:	mul	r4, r4, r6
   19390:	bne	1937c <ReadCompressedDataSlabN+0x9b0>
   19394:	sub	r7, fp, #72	; 0x48
   19398:	str	r3, [sl, r5, lsl #2]
   1939c:	ldr	r6, [sp, #28]
   193a0:	add	r1, r1, #4
   193a4:	str	r4, [r7, r5, lsl #2]
   193a8:	mov	r4, r0
   193ac:	ldr	r2, [r9, r5, lsl #2]
   193b0:	mla	r8, r2, ip, r8
   193b4:	ldr	r2, [r0, r5, lsl #2]
   193b8:	add	r5, r5, #1
   193bc:	mov	ip, r3
   193c0:	mov	r3, lr
   193c4:	mul	r6, r2, r6
   193c8:	ldr	r2, [fp, #12]
   193cc:	str	r6, [sp, #28]
   193d0:	ldr	r6, [fp, #16]
   193d4:	cmp	r5, r2
   193d8:	bne	19358 <ReadCompressedDataSlabN+0x98c>
   193dc:	b	1a504 <ReadCompressedDataSlabN+0x1b38>
   193e0:	ldr	r0, [r5]
   193e4:	ldr	r7, [fp, #28]
   193e8:	mov	r8, #0
   193ec:	sub	r0, r0, #1
   193f0:	str	r0, [fp, #-72]	; 0xffffffb8
   193f4:	ldr	ip, [r6]
   193f8:	str	ip, [sp, #104]	; 0x68
   193fc:	ldr	r0, [r7]
   19400:	str	r0, [sp, #28]
   19404:	ldr	r0, [fp, #12]
   19408:	cmp	r0, #2
   1940c:	blt	194ac <ReadCompressedDataSlabN+0xae0>
   19410:	mov	r4, r7
   19414:	mov	r8, #0
   19418:	mov	r5, #1
   1941c:	mov	r1, r6
   19420:	mov	r3, ip
   19424:	sub	r7, fp, #72	; 0x48
   19428:	ldr	r2, [fp, #24]
   1942c:	mov	r0, r4
   19430:	ldr	r2, [r2, r5, lsl #2]
   19434:	str	r3, [sl, r5, lsl #2]
   19438:	sub	r4, r2, #1
   1943c:	mov	r2, #0
   19440:	str	r4, [r7, r5, lsl #2]
   19444:	ldr	lr, [r6, r5, lsl #2]
   19448:	mov	r6, lr
   1944c:	mul	r3, r6, r3
   19450:	ldr	r6, [r1, -r2, lsl #2]
   19454:	add	r2, r2, #1
   19458:	cmp	r5, r2
   1945c:	mul	r4, r4, r6
   19460:	bne	1944c <ReadCompressedDataSlabN+0xa80>
   19464:	sub	r7, fp, #72	; 0x48
   19468:	str	r3, [sl, r5, lsl #2]
   1946c:	ldr	r6, [sp, #28]
   19470:	add	r1, r1, #4
   19474:	str	r4, [r7, r5, lsl #2]
   19478:	mov	r4, r0
   1947c:	ldr	r2, [r9, r5, lsl #2]
   19480:	mla	r8, r2, ip, r8
   19484:	ldr	r2, [r0, r5, lsl #2]
   19488:	add	r5, r5, #1
   1948c:	mov	ip, r3
   19490:	mov	r3, lr
   19494:	mul	r6, r2, r6
   19498:	ldr	r2, [fp, #12]
   1949c:	str	r6, [sp, #28]
   194a0:	ldr	r6, [fp, #16]
   194a4:	cmp	r5, r2
   194a8:	bne	19428 <ReadCompressedDataSlabN+0xa5c>
   194ac:	ldr	r0, [sp, #44]	; 0x2c
   194b0:	ldr	r2, [fp, #8]
   194b4:	add	r1, sp, #48	; 0x30
   194b8:	mov	r3, r8
   194bc:	bl	26a0 <InflateSkipData>
   194c0:	ldr	r0, [fp, #24]
   194c4:	ldr	r0, [r0]
   194c8:	cmp	r0, #1
   194cc:	bne	1a774 <ReadCompressedDataSlabN+0x1da8>
   194d0:	ldr	r0, [sp, #28]
   194d4:	cmp	r0, #1
   194d8:	blt	1c8c8 <ReadCompressedDataSlabN+0x3efc>
   194dc:	ldr	r0, [fp, #28]
   194e0:	add	r6, r9, #4
   194e4:	add	r1, sp, #48	; 0x30
   194e8:	add	r0, r0, #4
   194ec:	str	r0, [sp, #40]	; 0x28
   194f0:	sub	r0, fp, #112	; 0x70
   194f4:	orr	r4, r0, #4
   194f8:	sub	r0, fp, #72	; 0x48
   194fc:	orr	r0, r0, #4
   19500:	str	r0, [sp, #20]
   19504:	mov	r0, #0
   19508:	str	r0, [sp, #32]
   1950c:	ldr	r3, [r9]
   19510:	str	r8, [sp, #24]
   19514:	cmp	r3, #0
   19518:	beq	19550 <ReadCompressedDataSlabN+0xb84>
   1951c:	mov	r7, r9
   19520:	ldr	r9, [sp, #44]	; 0x2c
   19524:	ldr	r5, [fp, #8]
   19528:	mov	r8, r1
   1952c:	mov	r0, r9
   19530:	mov	r2, r5
   19534:	bl	26a0 <InflateSkipData>
   19538:	ldr	r0, [r7]
   1953c:	ldr	r1, [sp, #24]
   19540:	ldr	r7, [fp, #28]
   19544:	add	r1, r0, r1
   19548:	str	r1, [sp, #24]
   1954c:	b	19560 <ReadCompressedDataSlabN+0xb94>
   19550:	ldr	r9, [sp, #44]	; 0x2c
   19554:	ldr	r7, [fp, #28]
   19558:	ldr	r5, [fp, #8]
   1955c:	mov	r8, r1
   19560:	ldr	r0, [r7]
   19564:	ldr	r1, [sp, #32]
   19568:	mov	r3, r5
   1956c:	str	r0, [sp]
   19570:	ldr	r0, [sp, #36]	; 0x24
   19574:	add	r2, r0, r1, lsl #1
   19578:	mov	r0, r9
   1957c:	mov	r1, r8
   19580:	bl	117c4 <ReadCompressedUInt16Data>
   19584:	ldr	r1, [fp, #16]
   19588:	ldr	r0, [fp, #20]
   1958c:	mov	r2, r9
   19590:	mov	r9, r0
   19594:	ldr	r0, [r0]
   19598:	ldr	r1, [r1]
   1959c:	sub	r0, r1, r0
   195a0:	ldr	r1, [r7]
   195a4:	sub	r3, r0, r1
   195a8:	mov	r0, r2
   195ac:	mov	r1, r8
   195b0:	mov	r2, r5
   195b4:	bl	26a0 <InflateSkipData>
   195b8:	ldr	r0, [fp, #16]
   195bc:	ldr	r1, [sp, #24]
   195c0:	ldr	r0, [r0]
   195c4:	add	r0, r0, r1
   195c8:	ldr	r1, [r9]
   195cc:	sub	r8, r0, r1
   195d0:	ldr	r0, [fp, #12]
   195d4:	cmp	r0, #2
   195d8:	blt	196f0 <ReadCompressedDataSlabN+0xd24>
   195dc:	mov	r7, r5
   195e0:	mov	r0, #0
   195e4:	mov	r9, r0
   195e8:	ldr	r0, [r4, r0, lsl #2]
   195ec:	ldr	r1, [sp, #40]	; 0x28
   195f0:	add	r0, r0, #1
   195f4:	str	r0, [r4, r9, lsl #2]
   195f8:	ldr	r1, [r1, r9, lsl #2]
   195fc:	sdiv	r2, r0, r1
   19600:	mls	r0, r2, r1, r0
   19604:	cmp	r0, #0
   19608:	bne	196c8 <ReadCompressedDataSlabN+0xcfc>
   1960c:	mov	r0, #0
   19610:	mov	r5, sl
   19614:	add	sl, sl, r9, lsl #2
   19618:	str	r0, [r4, r9, lsl #2]
   1961c:	ldr	r0, [sl, #4]
   19620:	sdiv	r1, r8, r0
   19624:	mls	r1, r1, r0, r8
   19628:	cmp	r1, #0
   1962c:	beq	1967c <ReadCompressedDataSlabN+0xcb0>
   19630:	ldr	r2, [r5, r9, lsl #2]
   19634:	ldr	r3, [r6, r9, lsl #2]
   19638:	sub	r0, r0, r1
   1963c:	add	r1, sp, #48	; 0x30
   19640:	mla	r3, r3, r2, r0
   19644:	ldr	r0, [sp, #44]	; 0x2c
   19648:	mov	r2, r7
   1964c:	bl	26a0 <InflateSkipData>
   19650:	ldr	r0, [sl, #4]
   19654:	mov	sl, r5
   19658:	sdiv	r2, r8, r0
   1965c:	add	r1, r0, r8
   19660:	mul	r0, r2, r0
   19664:	ldr	r2, [r6, r9, lsl #2]
   19668:	sub	r0, r0, r8
   1966c:	add	r0, r1, r0
   19670:	ldr	r1, [r5, r9, lsl #2]
   19674:	mla	r8, r2, r1, r0
   19678:	b	196b0 <ReadCompressedDataSlabN+0xce4>
   1967c:	ldr	r0, [r6, r9, lsl #2]
   19680:	add	sl, sp, #104	; 0x68
   19684:	cmp	r0, #0
   19688:	beq	196b0 <ReadCompressedDataSlabN+0xce4>
   1968c:	ldr	r1, [sl, r9, lsl #2]
   19690:	mov	r2, r7
   19694:	mul	r3, r1, r0
   19698:	ldr	r0, [sp, #44]	; 0x2c
   1969c:	add	r1, sp, #48	; 0x30
   196a0:	bl	26a0 <InflateSkipData>
   196a4:	ldr	r0, [sl, r9, lsl #2]
   196a8:	ldr	r1, [r6, r9, lsl #2]
   196ac:	mla	r8, r1, r0, r8
   196b0:	ldr	r2, [fp, #12]
   196b4:	add	r1, r9, #2
   196b8:	add	r0, r9, #1
   196bc:	cmp	r1, r2
   196c0:	blt	195e4 <ReadCompressedDataSlabN+0xc18>
   196c4:	b	196f0 <ReadCompressedDataSlabN+0xd24>
   196c8:	ldr	r0, [sp, #20]
   196cc:	ldr	r5, [r0, r9, lsl #2]
   196d0:	cmp	r5, #0
   196d4:	beq	196f0 <ReadCompressedDataSlabN+0xd24>
   196d8:	ldr	r0, [sp, #44]	; 0x2c
   196dc:	add	r1, sp, #48	; 0x30
   196e0:	mov	r2, r7
   196e4:	mov	r3, r5
   196e8:	bl	26a0 <InflateSkipData>
   196ec:	add	r8, r5, r8
   196f0:	ldr	r0, [fp, #28]
   196f4:	ldr	r1, [sp, #32]
   196f8:	ldr	r9, [fp, #20]
   196fc:	ldr	r0, [r0]
   19700:	add	r1, r0, r1
   19704:	ldr	r0, [sp, #28]
   19708:	str	r1, [sp, #32]
   1970c:	cmp	r1, r0
   19710:	add	r1, sp, #48	; 0x30
   19714:	blt	1950c <ReadCompressedDataSlabN+0xb40>
   19718:	b	1c8c8 <ReadCompressedDataSlabN+0x3efc>
   1971c:	ldr	r0, [r5]
   19720:	ldr	r7, [fp, #28]
   19724:	sub	r0, r0, #1
   19728:	str	r0, [fp, #-72]	; 0xffffffb8
   1972c:	ldr	ip, [r6]
   19730:	str	ip, [sp, #104]	; 0x68
   19734:	ldr	r0, [r7]
   19738:	str	r0, [sp, #28]
   1973c:	ldr	r0, [fp, #12]
   19740:	cmp	r0, #2
   19744:	blt	1aa68 <ReadCompressedDataSlabN+0x209c>
   19748:	mov	r4, r7
   1974c:	mov	r8, #0
   19750:	mov	r5, #1
   19754:	mov	r1, r6
   19758:	mov	r3, ip
   1975c:	sub	r7, fp, #72	; 0x48
   19760:	ldr	r2, [fp, #24]
   19764:	mov	r0, r4
   19768:	ldr	r2, [r2, r5, lsl #2]
   1976c:	str	r3, [sl, r5, lsl #2]
   19770:	sub	r4, r2, #1
   19774:	mov	r2, #0
   19778:	str	r4, [r7, r5, lsl #2]
   1977c:	ldr	lr, [r6, r5, lsl #2]
   19780:	mov	r6, lr
   19784:	mul	r3, r6, r3
   19788:	ldr	r6, [r1, -r2, lsl #2]
   1978c:	add	r2, r2, #1
   19790:	cmp	r5, r2
   19794:	mul	r4, r4, r6
   19798:	bne	19784 <ReadCompressedDataSlabN+0xdb8>
   1979c:	sub	r7, fp, #72	; 0x48
   197a0:	str	r3, [sl, r5, lsl #2]
   197a4:	ldr	r6, [sp, #28]
   197a8:	add	r1, r1, #4
   197ac:	str	r4, [r7, r5, lsl #2]
   197b0:	mov	r4, r0
   197b4:	ldr	r2, [r9, r5, lsl #2]
   197b8:	mla	r8, r2, ip, r8
   197bc:	ldr	r2, [r0, r5, lsl #2]
   197c0:	add	r5, r5, #1
   197c4:	mov	ip, r3
   197c8:	mov	r3, lr
   197cc:	mul	r6, r2, r6
   197d0:	ldr	r2, [fp, #12]
   197d4:	str	r6, [sp, #28]
   197d8:	ldr	r6, [fp, #16]
   197dc:	cmp	r5, r2
   197e0:	bne	19760 <ReadCompressedDataSlabN+0xd94>
   197e4:	b	1aa6c <ReadCompressedDataSlabN+0x20a0>
   197e8:	ldr	r0, [r5]
   197ec:	ldr	r7, [fp, #28]
   197f0:	sub	r0, r0, #1
   197f4:	str	r0, [fp, #-72]	; 0xffffffb8
   197f8:	ldr	ip, [r6]
   197fc:	str	ip, [sp, #104]	; 0x68
   19800:	ldr	r0, [r7]
   19804:	str	r0, [sp, #28]
   19808:	ldr	r0, [fp, #12]
   1980c:	cmp	r0, #2
   19810:	blt	1acdc <ReadCompressedDataSlabN+0x2310>
   19814:	mov	r4, r7
   19818:	mov	r8, #0
   1981c:	mov	r5, #1
   19820:	mov	r1, r6
   19824:	mov	r3, ip
   19828:	sub	r7, fp, #72	; 0x48
   1982c:	ldr	r2, [fp, #24]
   19830:	mov	r0, r4
   19834:	ldr	r2, [r2, r5, lsl #2]
   19838:	str	r3, [sl, r5, lsl #2]
   1983c:	sub	r4, r2, #1
   19840:	mov	r2, #0
   19844:	str	r4, [r7, r5, lsl #2]
   19848:	ldr	lr, [r6, r5, lsl #2]
   1984c:	mov	r6, lr
   19850:	mul	r3, r6, r3
   19854:	ldr	r6, [r1, -r2, lsl #2]
   19858:	add	r2, r2, #1
   1985c:	cmp	r5, r2
   19860:	mul	r4, r4, r6
   19864:	bne	19850 <ReadCompressedDataSlabN+0xe84>
   19868:	sub	r7, fp, #72	; 0x48
   1986c:	str	r3, [sl, r5, lsl #2]
   19870:	ldr	r6, [sp, #28]
   19874:	add	r1, r1, #4
   19878:	str	r4, [r7, r5, lsl #2]
   1987c:	mov	r4, r0
   19880:	ldr	r2, [r9, r5, lsl #2]
   19884:	mla	r8, r2, ip, r8
   19888:	ldr	r2, [r0, r5, lsl #2]
   1988c:	add	r5, r5, #1
   19890:	mov	ip, r3
   19894:	mov	r3, lr
   19898:	mul	r6, r2, r6
   1989c:	ldr	r2, [fp, #12]
   198a0:	str	r6, [sp, #28]
   198a4:	ldr	r6, [fp, #16]
   198a8:	cmp	r5, r2
   198ac:	bne	1982c <ReadCompressedDataSlabN+0xe60>
   198b0:	b	1ace0 <ReadCompressedDataSlabN+0x2314>
   198b4:	ldr	r0, [r5]
   198b8:	ldr	r8, [fp, #28]
   198bc:	mov	r1, #0
   198c0:	sub	r0, r0, #1
   198c4:	str	r0, [fp, #-72]	; 0xffffffb8
   198c8:	ldr	ip, [r6]
   198cc:	str	ip, [sp, #104]	; 0x68
   198d0:	ldr	r0, [r8]
   198d4:	str	r0, [sp, #24]
   198d8:	ldr	r0, [fp, #12]
   198dc:	cmp	r0, #2
   198e0:	ldr	r0, [sp, #44]	; 0x2c
   198e4:	blt	1af50 <ReadCompressedDataSlabN+0x2584>
   198e8:	str	r1, [sp, #40]	; 0x28
   198ec:	mov	r5, #1
   198f0:	mov	r1, r6
   198f4:	mov	r3, ip
   198f8:	sub	r7, fp, #72	; 0x48
   198fc:	ldr	r2, [fp, #24]
   19900:	ldr	r2, [r2, r5, lsl #2]
   19904:	str	r3, [sl, r5, lsl #2]
   19908:	sub	r4, r2, #1
   1990c:	mov	r2, #0
   19910:	str	r4, [r7, r5, lsl #2]
   19914:	ldr	lr, [r6, r5, lsl #2]
   19918:	mov	r6, lr
   1991c:	mul	r3, r6, r3
   19920:	ldr	r6, [r1, -r2, lsl #2]
   19924:	add	r2, r2, #1
   19928:	cmp	r5, r2
   1992c:	mul	r4, r4, r6
   19930:	bne	1991c <ReadCompressedDataSlabN+0xf50>
   19934:	sub	r7, fp, #72	; 0x48
   19938:	str	r3, [sl, r5, lsl #2]
   1993c:	ldr	r6, [sp, #24]
   19940:	add	r1, r1, #4
   19944:	str	r4, [r7, r5, lsl #2]
   19948:	ldr	r4, [sp, #40]	; 0x28
   1994c:	ldr	r2, [r9, r5, lsl #2]
   19950:	mla	r4, r2, ip, r4
   19954:	ldr	r2, [r8, r5, lsl #2]
   19958:	add	r5, r5, #1
   1995c:	mov	ip, r3
   19960:	mov	r3, lr
   19964:	str	r4, [sp, #40]	; 0x28
   19968:	mul	r6, r2, r6
   1996c:	ldr	r2, [fp, #12]
   19970:	str	r6, [sp, #24]
   19974:	ldr	r6, [fp, #16]
   19978:	cmp	r5, r2
   1997c:	bne	198fc <ReadCompressedDataSlabN+0xf30>
   19980:	b	1af54 <ReadCompressedDataSlabN+0x2588>
   19984:	ldr	r0, [r5]
   19988:	ldr	r7, [fp, #28]
   1998c:	sub	r0, r0, #1
   19990:	str	r0, [fp, #-72]	; 0xffffffb8
   19994:	ldr	ip, [r6]
   19998:	str	ip, [sp, #104]	; 0x68
   1999c:	ldr	r0, [r7]
   199a0:	str	r0, [sp, #28]
   199a4:	ldr	r0, [fp, #12]
   199a8:	cmp	r0, #2
   199ac:	blt	1b1cc <ReadCompressedDataSlabN+0x2800>
   199b0:	mov	r4, r7
   199b4:	mov	r8, #0
   199b8:	mov	r5, #1
   199bc:	mov	r1, r6
   199c0:	mov	r3, ip
   199c4:	sub	r7, fp, #72	; 0x48
   199c8:	ldr	r2, [fp, #24]
   199cc:	mov	r0, r4
   199d0:	ldr	r2, [r2, r5, lsl #2]
   199d4:	str	r3, [sl, r5, lsl #2]
   199d8:	sub	r4, r2, #1
   199dc:	mov	r2, #0
   199e0:	str	r4, [r7, r5, lsl #2]
   199e4:	ldr	lr, [r6, r5, lsl #2]
   199e8:	mov	r6, lr
   199ec:	mul	r3, r6, r3
   199f0:	ldr	r6, [r1, -r2, lsl #2]
   199f4:	add	r2, r2, #1
   199f8:	cmp	r5, r2
   199fc:	mul	r4, r4, r6
   19a00:	bne	199ec <ReadCompressedDataSlabN+0x1020>
   19a04:	sub	r7, fp, #72	; 0x48
   19a08:	str	r3, [sl, r5, lsl #2]
   19a0c:	ldr	r6, [sp, #28]
   19a10:	add	r1, r1, #4
   19a14:	str	r4, [r7, r5, lsl #2]
   19a18:	mov	r4, r0
   19a1c:	ldr	r2, [r9, r5, lsl #2]
   19a20:	mla	r8, r2, ip, r8
   19a24:	ldr	r2, [r0, r5, lsl #2]
   19a28:	add	r5, r5, #1
   19a2c:	mov	ip, r3
   19a30:	mov	r3, lr
   19a34:	mul	r6, r2, r6
   19a38:	ldr	r2, [fp, #12]
   19a3c:	str	r6, [sp, #28]
   19a40:	ldr	r6, [fp, #16]
   19a44:	cmp	r5, r2
   19a48:	bne	199c8 <ReadCompressedDataSlabN+0xffc>
   19a4c:	b	1b1d0 <ReadCompressedDataSlabN+0x2804>
   19a50:	mov	r8, #0
   19a54:	ldr	r0, [sp, #44]	; 0x2c
   19a58:	ldr	r2, [fp, #8]
   19a5c:	add	r1, sp, #48	; 0x30
   19a60:	mov	r3, r8
   19a64:	mov	r7, r8
   19a68:	bl	26a0 <InflateSkipData>
   19a6c:	ldr	r0, [fp, #24]
   19a70:	ldr	r0, [r0]
   19a74:	cmp	r0, #1
   19a78:	bne	1b440 <ReadCompressedDataSlabN+0x2a74>
   19a7c:	ldr	r0, [sp, #32]
   19a80:	cmp	r0, #1
   19a84:	blt	1c8c8 <ReadCompressedDataSlabN+0x3efc>
   19a88:	ldr	r0, [fp, #28]
   19a8c:	add	r6, r9, #4
   19a90:	add	r1, sp, #48	; 0x30
   19a94:	add	r8, r0, #4
   19a98:	sub	r0, fp, #112	; 0x70
   19a9c:	orr	r4, r0, #4
   19aa0:	sub	r0, fp, #72	; 0x48
   19aa4:	str	r8, [sp, #24]
   19aa8:	orr	r0, r0, #4
   19aac:	str	r0, [sp, #20]
   19ab0:	mov	r0, #0
   19ab4:	str	r0, [sp, #40]	; 0x28
   19ab8:	ldr	r3, [r9]
   19abc:	str	r7, [sp, #28]
   19ac0:	cmp	r3, #0
   19ac4:	beq	19afc <ReadCompressedDataSlabN+0x1130>
   19ac8:	ldr	r8, [sp, #44]	; 0x2c
   19acc:	ldr	r7, [fp, #8]
   19ad0:	mov	r5, r9
   19ad4:	mov	r9, r1
   19ad8:	mov	r0, r8
   19adc:	mov	r2, r7
   19ae0:	bl	26a0 <InflateSkipData>
   19ae4:	ldr	r0, [r5]
   19ae8:	ldr	r1, [sp, #28]
   19aec:	ldr	r5, [fp, #28]
   19af0:	add	r1, r0, r1
   19af4:	str	r1, [sp, #28]
   19af8:	b	19b0c <ReadCompressedDataSlabN+0x1140>
   19afc:	ldr	r8, [sp, #44]	; 0x2c
   19b00:	ldr	r5, [fp, #28]
   19b04:	ldr	r7, [fp, #8]
   19b08:	mov	r9, r1
   19b0c:	ldr	r0, [r5]
   19b10:	ldr	r1, [sp, #40]	; 0x28
   19b14:	mov	r3, r7
   19b18:	str	r0, [sp]
   19b1c:	ldr	r0, [sp, #36]	; 0x24
   19b20:	add	r2, r0, r1, lsl #3
   19b24:	mov	r0, r8
   19b28:	mov	r1, r9
   19b2c:	bl	4c7c <ReadCompressedDoubleData>
   19b30:	ldr	r1, [fp, #16]
   19b34:	ldr	r0, [fp, #20]
   19b38:	mov	r2, r8
   19b3c:	mov	r8, r0
   19b40:	ldr	r0, [r0]
   19b44:	ldr	r1, [r1]
   19b48:	sub	r0, r1, r0
   19b4c:	ldr	r1, [r5]
   19b50:	sub	r3, r0, r1
   19b54:	mov	r0, r2
   19b58:	mov	r1, r9
   19b5c:	mov	r2, r7
   19b60:	bl	26a0 <InflateSkipData>
   19b64:	ldr	r0, [fp, #16]
   19b68:	ldr	r1, [sp, #28]
   19b6c:	ldr	r0, [r0]
   19b70:	add	r0, r0, r1
   19b74:	ldr	r1, [r8]
   19b78:	sub	r7, r0, r1
   19b7c:	ldr	r0, [fp, #12]
   19b80:	cmp	r0, #2
   19b84:	blt	19c98 <ReadCompressedDataSlabN+0x12cc>
   19b88:	ldr	r8, [sp, #24]
   19b8c:	mov	r0, #0
   19b90:	mov	r9, r0
   19b94:	ldr	r0, [r4, r0, lsl #2]
   19b98:	add	r0, r0, #1
   19b9c:	str	r0, [r4, r9, lsl #2]
   19ba0:	ldr	r1, [r8, r9, lsl #2]
   19ba4:	sdiv	r2, r0, r1
   19ba8:	mls	r0, r2, r1, r0
   19bac:	cmp	r0, #0
   19bb0:	bne	19c70 <ReadCompressedDataSlabN+0x12a4>
   19bb4:	mov	r0, #0
   19bb8:	mov	r5, sl
   19bbc:	add	sl, sl, r9, lsl #2
   19bc0:	str	r0, [r4, r9, lsl #2]
   19bc4:	ldr	r0, [sl, #4]
   19bc8:	sdiv	r1, r7, r0
   19bcc:	mls	r1, r1, r0, r7
   19bd0:	cmp	r1, #0
   19bd4:	beq	19c24 <ReadCompressedDataSlabN+0x1258>
   19bd8:	ldr	r2, [r5, r9, lsl #2]
   19bdc:	ldr	r3, [r6, r9, lsl #2]
   19be0:	sub	r0, r0, r1
   19be4:	add	r1, sp, #48	; 0x30
   19be8:	mla	r3, r3, r2, r0
   19bec:	ldr	r0, [sp, #44]	; 0x2c
   19bf0:	ldr	r2, [fp, #8]
   19bf4:	bl	26a0 <InflateSkipData>
   19bf8:	ldr	r0, [sl, #4]
   19bfc:	mov	sl, r5
   19c00:	sdiv	r2, r7, r0
   19c04:	add	r1, r0, r7
   19c08:	mul	r0, r2, r0
   19c0c:	ldr	r2, [r6, r9, lsl #2]
   19c10:	sub	r0, r0, r7
   19c14:	add	r0, r1, r0
   19c18:	ldr	r1, [r5, r9, lsl #2]
   19c1c:	mla	r7, r2, r1, r0
   19c20:	b	19c58 <ReadCompressedDataSlabN+0x128c>
   19c24:	ldr	r0, [r6, r9, lsl #2]
   19c28:	add	sl, sp, #104	; 0x68
   19c2c:	cmp	r0, #0
   19c30:	beq	19c58 <ReadCompressedDataSlabN+0x128c>
   19c34:	ldr	r1, [sl, r9, lsl #2]
   19c38:	ldr	r2, [fp, #8]
   19c3c:	mul	r3, r1, r0
   19c40:	ldr	r0, [sp, #44]	; 0x2c
   19c44:	add	r1, sp, #48	; 0x30
   19c48:	bl	26a0 <InflateSkipData>
   19c4c:	ldr	r0, [sl, r9, lsl #2]
   19c50:	ldr	r1, [r6, r9, lsl #2]
   19c54:	mla	r7, r1, r0, r7
   19c58:	ldr	r2, [fp, #12]
   19c5c:	add	r1, r9, #2
   19c60:	add	r0, r9, #1
   19c64:	cmp	r1, r2
   19c68:	blt	19b90 <ReadCompressedDataSlabN+0x11c4>
   19c6c:	b	19c98 <ReadCompressedDataSlabN+0x12cc>
   19c70:	ldr	r0, [sp, #20]
   19c74:	ldr	r5, [r0, r9, lsl #2]
   19c78:	cmp	r5, #0
   19c7c:	beq	19c98 <ReadCompressedDataSlabN+0x12cc>
   19c80:	ldr	r0, [sp, #44]	; 0x2c
   19c84:	ldr	r2, [fp, #8]
   19c88:	add	r1, sp, #48	; 0x30
   19c8c:	mov	r3, r5
   19c90:	bl	26a0 <InflateSkipData>
   19c94:	add	r7, r5, r7
   19c98:	ldr	r0, [fp, #28]
   19c9c:	ldr	r1, [sp, #40]	; 0x28
   19ca0:	ldr	r9, [fp, #20]
   19ca4:	ldr	r0, [r0]
   19ca8:	add	r1, r0, r1
   19cac:	ldr	r0, [sp, #32]
   19cb0:	str	r1, [sp, #40]	; 0x28
   19cb4:	cmp	r1, r0
   19cb8:	add	r1, sp, #48	; 0x30
   19cbc:	blt	19ab8 <ReadCompressedDataSlabN+0x10ec>
   19cc0:	b	1c8c8 <ReadCompressedDataSlabN+0x3efc>
   19cc4:	mov	r8, #0
   19cc8:	ldr	r0, [sp, #44]	; 0x2c
   19ccc:	ldr	r2, [fp, #8]
   19cd0:	add	r1, sp, #48	; 0x30
   19cd4:	mov	r3, r8
   19cd8:	bl	26a0 <InflateSkipData>
   19cdc:	ldr	r0, [fp, #24]
   19ce0:	ldr	r0, [r0]
   19ce4:	cmp	r0, #1
   19ce8:	bne	1b718 <ReadCompressedDataSlabN+0x2d4c>
   19cec:	ldr	r0, [sp, #28]
   19cf0:	cmp	r0, #1
   19cf4:	blt	1c8c8 <ReadCompressedDataSlabN+0x3efc>
   19cf8:	ldr	r0, [fp, #28]
   19cfc:	add	r6, r9, #4
   19d00:	add	r1, sp, #48	; 0x30
   19d04:	add	r0, r0, #4
   19d08:	str	r0, [sp, #40]	; 0x28
   19d0c:	sub	r0, fp, #112	; 0x70
   19d10:	orr	r4, r0, #4
   19d14:	sub	r0, fp, #72	; 0x48
   19d18:	orr	r0, r0, #4
   19d1c:	str	r0, [sp, #20]
   19d20:	mov	r0, #0
   19d24:	str	r0, [sp, #32]
   19d28:	ldr	r3, [r9]
   19d2c:	str	r8, [sp, #24]
   19d30:	cmp	r3, #0
   19d34:	beq	19d6c <ReadCompressedDataSlabN+0x13a0>
   19d38:	ldr	r8, [sp, #44]	; 0x2c
   19d3c:	ldr	r5, [fp, #8]
   19d40:	mov	r7, r9
   19d44:	mov	r9, r1
   19d48:	mov	r0, r8
   19d4c:	mov	r2, r5
   19d50:	bl	26a0 <InflateSkipData>
   19d54:	ldr	r0, [r7]
   19d58:	ldr	r1, [sp, #24]
   19d5c:	ldr	r7, [fp, #28]
   19d60:	add	r1, r0, r1
   19d64:	str	r1, [sp, #24]
   19d68:	b	19d7c <ReadCompressedDataSlabN+0x13b0>
   19d6c:	ldr	r8, [sp, #44]	; 0x2c
   19d70:	ldr	r7, [fp, #28]
   19d74:	ldr	r5, [fp, #8]
   19d78:	mov	r9, r1
   19d7c:	ldr	r0, [r7]
   19d80:	ldr	r1, [sp, #32]
   19d84:	mov	r3, r5
   19d88:	str	r0, [sp]
   19d8c:	ldr	r0, [sp, #36]	; 0x24
   19d90:	add	r2, r0, r1, lsl #2
   19d94:	mov	r0, r8
   19d98:	mov	r1, r9
   19d9c:	bl	7620 <ReadCompressedSingleData>
   19da0:	ldr	r1, [fp, #16]
   19da4:	ldr	r0, [fp, #20]
   19da8:	mov	r2, r8
   19dac:	mov	r8, r0
   19db0:	ldr	r0, [r0]
   19db4:	ldr	r1, [r1]
   19db8:	sub	r0, r1, r0
   19dbc:	ldr	r1, [r7]
   19dc0:	sub	r3, r0, r1
   19dc4:	mov	r0, r2
   19dc8:	mov	r1, r9
   19dcc:	mov	r2, r5
   19dd0:	bl	26a0 <InflateSkipData>
   19dd4:	ldr	r0, [fp, #16]
   19dd8:	ldr	r1, [sp, #24]
   19ddc:	ldr	r0, [r0]
   19de0:	add	r0, r0, r1
   19de4:	ldr	r1, [r8]
   19de8:	sub	r8, r0, r1
   19dec:	ldr	r0, [fp, #12]
   19df0:	cmp	r0, #2
   19df4:	blt	19f0c <ReadCompressedDataSlabN+0x1540>
   19df8:	mov	r7, r5
   19dfc:	mov	r0, #0
   19e00:	mov	r9, r0
   19e04:	ldr	r0, [r4, r0, lsl #2]
   19e08:	ldr	r1, [sp, #40]	; 0x28
   19e0c:	add	r0, r0, #1
   19e10:	str	r0, [r4, r9, lsl #2]
   19e14:	ldr	r1, [r1, r9, lsl #2]
   19e18:	sdiv	r2, r0, r1
   19e1c:	mls	r0, r2, r1, r0
   19e20:	cmp	r0, #0
   19e24:	bne	19ee4 <ReadCompressedDataSlabN+0x1518>
   19e28:	mov	r0, #0
   19e2c:	mov	r5, sl
   19e30:	add	sl, sl, r9, lsl #2
   19e34:	str	r0, [r4, r9, lsl #2]
   19e38:	ldr	r0, [sl, #4]
   19e3c:	sdiv	r1, r8, r0
   19e40:	mls	r1, r1, r0, r8
   19e44:	cmp	r1, #0
   19e48:	beq	19e98 <ReadCompressedDataSlabN+0x14cc>
   19e4c:	ldr	r2, [r5, r9, lsl #2]
   19e50:	ldr	r3, [r6, r9, lsl #2]
   19e54:	sub	r0, r0, r1
   19e58:	add	r1, sp, #48	; 0x30
   19e5c:	mla	r3, r3, r2, r0
   19e60:	ldr	r0, [sp, #44]	; 0x2c
   19e64:	mov	r2, r7
   19e68:	bl	26a0 <InflateSkipData>
   19e6c:	ldr	r0, [sl, #4]
   19e70:	mov	sl, r5
   19e74:	sdiv	r2, r8, r0
   19e78:	add	r1, r0, r8
   19e7c:	mul	r0, r2, r0
   19e80:	ldr	r2, [r6, r9, lsl #2]
   19e84:	sub	r0, r0, r8
   19e88:	add	r0, r1, r0
   19e8c:	ldr	r1, [r5, r9, lsl #2]
   19e90:	mla	r8, r2, r1, r0
   19e94:	b	19ecc <ReadCompressedDataSlabN+0x1500>
   19e98:	ldr	r0, [r6, r9, lsl #2]
   19e9c:	add	sl, sp, #104	; 0x68
   19ea0:	cmp	r0, #0
   19ea4:	beq	19ecc <ReadCompressedDataSlabN+0x1500>
   19ea8:	ldr	r1, [sl, r9, lsl #2]
   19eac:	mov	r2, r7
   19eb0:	mul	r3, r1, r0
   19eb4:	ldr	r0, [sp, #44]	; 0x2c
   19eb8:	add	r1, sp, #48	; 0x30
   19ebc:	bl	26a0 <InflateSkipData>
   19ec0:	ldr	r0, [sl, r9, lsl #2]
   19ec4:	ldr	r1, [r6, r9, lsl #2]
   19ec8:	mla	r8, r1, r0, r8
   19ecc:	ldr	r2, [fp, #12]
   19ed0:	add	r1, r9, #2
   19ed4:	add	r0, r9, #1
   19ed8:	cmp	r1, r2
   19edc:	blt	19e00 <ReadCompressedDataSlabN+0x1434>
   19ee0:	b	19f0c <ReadCompressedDataSlabN+0x1540>
   19ee4:	ldr	r0, [sp, #20]
   19ee8:	ldr	r5, [r0, r9, lsl #2]
   19eec:	cmp	r5, #0
   19ef0:	beq	19f0c <ReadCompressedDataSlabN+0x1540>
   19ef4:	ldr	r0, [sp, #44]	; 0x2c
   19ef8:	add	r1, sp, #48	; 0x30
   19efc:	mov	r2, r7
   19f00:	mov	r3, r5
   19f04:	bl	26a0 <InflateSkipData>
   19f08:	add	r8, r5, r8
   19f0c:	ldr	r0, [fp, #28]
   19f10:	ldr	r1, [sp, #32]
   19f14:	ldr	r9, [fp, #20]
   19f18:	ldr	r0, [r0]
   19f1c:	add	r1, r0, r1
   19f20:	ldr	r0, [sp, #28]
   19f24:	str	r1, [sp, #32]
   19f28:	cmp	r1, r0
   19f2c:	add	r1, sp, #48	; 0x30
   19f30:	blt	19d28 <ReadCompressedDataSlabN+0x135c>
   19f34:	b	1c8c8 <ReadCompressedDataSlabN+0x3efc>
   19f38:	ldr	r0, [sp, #20]
   19f3c:	cmp	r0, #1
   19f40:	blt	1c8c8 <ReadCompressedDataSlabN+0x3efc>
   19f44:	ldr	r0, [fp, #28]
   19f48:	add	r8, r9, #4
   19f4c:	mov	r4, #1
   19f50:	add	r7, sp, #48	; 0x30
   19f54:	mov	r5, #0
   19f58:	str	r8, [sp, #12]
   19f5c:	add	r0, r0, #4
   19f60:	str	r0, [sp, #32]
   19f64:	sub	r0, fp, #112	; 0x70
   19f68:	orr	r3, r0, #4
   19f6c:	sub	r0, fp, #72	; 0x48
   19f70:	orr	r0, r0, #4
   19f74:	str	r3, [sp, #28]
   19f78:	str	r0, [sp, #4]
   19f7c:	ldr	r0, [sp, #36]	; 0x24
   19f80:	add	r0, r0, #1
   19f84:	str	r0, [sp, #8]
   19f88:	ldr	r3, [r9]
   19f8c:	cmp	r3, #0
   19f90:	beq	19fc0 <ReadCompressedDataSlabN+0x15f4>
   19f94:	ldr	sl, [sp, #44]	; 0x2c
   19f98:	ldr	r6, [fp, #8]
   19f9c:	mov	r1, r7
   19fa0:	mov	r0, sl
   19fa4:	mov	r2, r6
   19fa8:	bl	26a0 <InflateSkipData>
   19fac:	ldr	r0, [r9]
   19fb0:	ldr	r1, [sp, #24]
   19fb4:	add	r1, r0, r1
   19fb8:	str	r1, [sp, #24]
   19fbc:	b	19fc8 <ReadCompressedDataSlabN+0x15fc>
   19fc0:	ldr	sl, [sp, #44]	; 0x2c
   19fc4:	ldr	r6, [fp, #8]
   19fc8:	ldr	r0, [fp, #28]
   19fcc:	mov	r1, r7
   19fd0:	mov	r3, r6
   19fd4:	ldr	r8, [r0]
   19fd8:	ldr	r0, [sp, #36]	; 0x24
   19fdc:	str	r4, [sp]
   19fe0:	add	r2, r0, r5
   19fe4:	mov	r0, sl
   19fe8:	bl	13168 <ReadCompressedInt8Data>
   19fec:	cmp	r8, #2
   19ff0:	str	r5, [sp, #16]
   19ff4:	blt	1a07c <ReadCompressedDataSlabN+0x16b0>
   19ff8:	ldr	r0, [sp, #8]
   19ffc:	ldr	r7, [sp, #24]
   1a000:	mov	r4, #0
   1a004:	add	r0, r0, r5
   1a008:	str	r0, [sp, #40]	; 0x28
   1a00c:	ldr	r0, [fp, #24]
   1a010:	ldr	r8, [fp, #8]
   1a014:	ldr	sl, [sp, #44]	; 0x2c
   1a018:	add	r9, sp, #48	; 0x30
   1a01c:	mov	r1, r9
   1a020:	mov	r6, r0
   1a024:	ldr	r0, [r0]
   1a028:	mov	r2, r8
   1a02c:	sub	r3, r0, #1
   1a030:	mov	r0, sl
   1a034:	bl	26a0 <InflateSkipData>
   1a038:	ldr	r0, [fp, #28]
   1a03c:	ldr	r6, [r6]
   1a040:	mov	r1, r9
   1a044:	mov	r3, r8
   1a048:	ldr	r5, [r0]
   1a04c:	mov	r0, #1
   1a050:	str	r0, [sp]
   1a054:	ldr	r0, [sp, #40]	; 0x28
   1a058:	add	r2, r0, r4
   1a05c:	mov	r0, sl
   1a060:	bl	13168 <ReadCompressedInt8Data>
   1a064:	add	r4, r4, #1
   1a068:	sub	r0, r5, #1
   1a06c:	add	r7, r6, r7
   1a070:	cmp	r4, r0
   1a074:	blt	1a00c <ReadCompressedDataSlabN+0x1640>
   1a078:	b	1a080 <ReadCompressedDataSlabN+0x16b4>
   1a07c:	ldr	r7, [sp, #24]
   1a080:	ldr	r2, [fp, #28]
   1a084:	ldr	r0, [fp, #16]
   1a088:	ldr	r1, [fp, #24]
   1a08c:	ldr	r9, [fp, #20]
   1a090:	ldr	r2, [r2]
   1a094:	ldr	r0, [r0]
   1a098:	ldr	r1, [r1]
   1a09c:	sub	r2, r2, #1
   1a0a0:	mls	r0, r2, r1, r0
   1a0a4:	ldr	r1, [r9]
   1a0a8:	ldr	r2, [fp, #8]
   1a0ac:	sub	r4, r0, r1
   1a0b0:	ldr	r0, [sp, #44]	; 0x2c
   1a0b4:	add	r1, sp, #48	; 0x30
   1a0b8:	sub	r3, r4, #1
   1a0bc:	bl	26a0 <InflateSkipData>
   1a0c0:	ldr	r0, [fp, #12]
   1a0c4:	add	r7, r4, r7
   1a0c8:	cmp	r0, #2
   1a0cc:	blt	1a1f0 <ReadCompressedDataSlabN+0x1824>
   1a0d0:	ldr	r8, [sp, #12]
   1a0d4:	ldr	r3, [sp, #28]
   1a0d8:	mov	r0, #0
   1a0dc:	mov	sl, r0
   1a0e0:	ldr	r0, [r3, r0, lsl #2]
   1a0e4:	ldr	r1, [sp, #32]
   1a0e8:	add	r0, r0, #1
   1a0ec:	str	r0, [r3, sl, lsl #2]
   1a0f0:	ldr	r1, [r1, sl, lsl #2]
   1a0f4:	sdiv	r2, r0, r1
   1a0f8:	mls	r0, r2, r1, r0
   1a0fc:	cmp	r0, #0
   1a100:	bne	1a1c8 <ReadCompressedDataSlabN+0x17fc>
   1a104:	add	r5, sp, #104	; 0x68
   1a108:	mov	r0, #0
   1a10c:	add	r4, r5, sl, lsl #2
   1a110:	str	r0, [r3, sl, lsl #2]
   1a114:	ldr	r0, [r4, #4]
   1a118:	sdiv	r1, r7, r0
   1a11c:	mls	r1, r1, r0, r7
   1a120:	cmp	r1, #0
   1a124:	beq	1a174 <ReadCompressedDataSlabN+0x17a8>
   1a128:	ldr	r2, [r5, sl, lsl #2]
   1a12c:	ldr	r3, [r8, sl, lsl #2]
   1a130:	sub	r0, r0, r1
   1a134:	add	r1, sp, #48	; 0x30
   1a138:	mla	r3, r3, r2, r0
   1a13c:	ldr	r0, [sp, #44]	; 0x2c
   1a140:	ldr	r2, [fp, #8]
   1a144:	bl	26a0 <InflateSkipData>
   1a148:	ldr	r0, [r4, #4]
   1a14c:	ldr	r3, [sp, #28]
   1a150:	sdiv	r2, r7, r0
   1a154:	add	r1, r0, r7
   1a158:	mul	r0, r2, r0
   1a15c:	ldr	r2, [r8, sl, lsl #2]
   1a160:	sub	r0, r0, r7
   1a164:	add	r0, r1, r0
   1a168:	ldr	r1, [r5, sl, lsl #2]
   1a16c:	mla	r7, r2, r1, r0
   1a170:	b	1a1b0 <ReadCompressedDataSlabN+0x17e4>
   1a174:	ldr	r0, [r8, sl, lsl #2]
   1a178:	cmp	r0, #0
   1a17c:	beq	1a1b0 <ReadCompressedDataSlabN+0x17e4>
   1a180:	add	r1, sp, #104	; 0x68
   1a184:	ldr	r2, [fp, #8]
   1a188:	mov	r4, r1
   1a18c:	ldr	r1, [r1, sl, lsl #2]
   1a190:	mul	r3, r1, r0
   1a194:	ldr	r0, [sp, #44]	; 0x2c
   1a198:	add	r1, sp, #48	; 0x30
   1a19c:	bl	26a0 <InflateSkipData>
   1a1a0:	ldr	r0, [r4, sl, lsl #2]
   1a1a4:	ldr	r1, [r8, sl, lsl #2]
   1a1a8:	ldr	r3, [sp, #28]
   1a1ac:	mla	r7, r1, r0, r7
   1a1b0:	ldr	r2, [fp, #12]
   1a1b4:	add	r1, sl, #2
   1a1b8:	add	r0, sl, #1
   1a1bc:	cmp	r1, r2
   1a1c0:	blt	1a0dc <ReadCompressedDataSlabN+0x1710>
   1a1c4:	b	1a1f0 <ReadCompressedDataSlabN+0x1824>
   1a1c8:	ldr	r0, [sp, #4]
   1a1cc:	ldr	r4, [r0, sl, lsl #2]
   1a1d0:	cmp	r4, #0
   1a1d4:	beq	1a1f0 <ReadCompressedDataSlabN+0x1824>
   1a1d8:	ldr	r0, [sp, #44]	; 0x2c
   1a1dc:	ldr	r2, [fp, #8]
   1a1e0:	add	r1, sp, #48	; 0x30
   1a1e4:	mov	r3, r4
   1a1e8:	bl	26a0 <InflateSkipData>
   1a1ec:	add	r7, r4, r7
   1a1f0:	ldr	r0, [fp, #28]
   1a1f4:	ldr	r5, [sp, #16]
   1a1f8:	str	r7, [sp, #24]
   1a1fc:	mov	r4, #1
   1a200:	add	r7, sp, #48	; 0x30
   1a204:	ldr	r0, [r0]
   1a208:	add	r5, r0, r5
   1a20c:	ldr	r0, [sp, #20]
   1a210:	cmp	r5, r0
   1a214:	blt	19f88 <ReadCompressedDataSlabN+0x15bc>
   1a218:	b	1c8c8 <ReadCompressedDataSlabN+0x3efc>
   1a21c:	ldr	r0, [sp, #20]
   1a220:	cmp	r0, #1
   1a224:	blt	1c8c8 <ReadCompressedDataSlabN+0x3efc>
   1a228:	ldr	r0, [fp, #28]
   1a22c:	add	r8, r9, #4
   1a230:	mov	r4, #1
   1a234:	add	r7, sp, #48	; 0x30
   1a238:	mov	r5, #0
   1a23c:	str	r8, [sp, #12]
   1a240:	add	r0, r0, #4
   1a244:	str	r0, [sp, #32]
   1a248:	sub	r0, fp, #112	; 0x70
   1a24c:	orr	r3, r0, #4
   1a250:	sub	r0, fp, #72	; 0x48
   1a254:	orr	r0, r0, #4
   1a258:	str	r3, [sp, #28]
   1a25c:	str	r0, [sp, #4]
   1a260:	ldr	r0, [sp, #36]	; 0x24
   1a264:	add	r0, r0, #1
   1a268:	str	r0, [sp, #8]
   1a26c:	ldr	r3, [r9]
   1a270:	cmp	r3, #0
   1a274:	beq	1a2a4 <ReadCompressedDataSlabN+0x18d8>
   1a278:	ldr	sl, [sp, #44]	; 0x2c
   1a27c:	ldr	r6, [fp, #8]
   1a280:	mov	r1, r7
   1a284:	mov	r0, sl
   1a288:	mov	r2, r6
   1a28c:	bl	26a0 <InflateSkipData>
   1a290:	ldr	r0, [r9]
   1a294:	ldr	r1, [sp, #24]
   1a298:	add	r1, r0, r1
   1a29c:	str	r1, [sp, #24]
   1a2a0:	b	1a2ac <ReadCompressedDataSlabN+0x18e0>
   1a2a4:	ldr	sl, [sp, #44]	; 0x2c
   1a2a8:	ldr	r6, [fp, #8]
   1a2ac:	ldr	r0, [fp, #28]
   1a2b0:	mov	r1, r7
   1a2b4:	mov	r3, r6
   1a2b8:	ldr	r8, [r0]
   1a2bc:	ldr	r0, [sp, #36]	; 0x24
   1a2c0:	str	r4, [sp]
   1a2c4:	add	r2, r0, r5
   1a2c8:	mov	r0, sl
   1a2cc:	bl	14b0c <ReadCompressedUInt8Data>
   1a2d0:	cmp	r8, #2
   1a2d4:	str	r5, [sp, #16]
   1a2d8:	blt	1a360 <ReadCompressedDataSlabN+0x1994>
   1a2dc:	ldr	r0, [sp, #8]
   1a2e0:	ldr	r7, [sp, #24]
   1a2e4:	mov	r4, #0
   1a2e8:	add	r0, r0, r5
   1a2ec:	str	r0, [sp, #40]	; 0x28
   1a2f0:	ldr	r0, [fp, #24]
   1a2f4:	ldr	r8, [fp, #8]
   1a2f8:	ldr	sl, [sp, #44]	; 0x2c
   1a2fc:	add	r9, sp, #48	; 0x30
   1a300:	mov	r1, r9
   1a304:	mov	r6, r0
   1a308:	ldr	r0, [r0]
   1a30c:	mov	r2, r8
   1a310:	sub	r3, r0, #1
   1a314:	mov	r0, sl
   1a318:	bl	26a0 <InflateSkipData>
   1a31c:	ldr	r0, [fp, #28]
   1a320:	ldr	r6, [r6]
   1a324:	mov	r1, r9
   1a328:	mov	r3, r8
   1a32c:	ldr	r5, [r0]
   1a330:	mov	r0, #1
   1a334:	str	r0, [sp]
   1a338:	ldr	r0, [sp, #40]	; 0x28
   1a33c:	add	r2, r0, r4
   1a340:	mov	r0, sl
   1a344:	bl	14b0c <ReadCompressedUInt8Data>
   1a348:	add	r4, r4, #1
   1a34c:	sub	r0, r5, #1
   1a350:	add	r7, r6, r7
   1a354:	cmp	r4, r0
   1a358:	blt	1a2f0 <ReadCompressedDataSlabN+0x1924>
   1a35c:	b	1a364 <ReadCompressedDataSlabN+0x1998>
   1a360:	ldr	r7, [sp, #24]
   1a364:	ldr	r2, [fp, #28]
   1a368:	ldr	r0, [fp, #16]
   1a36c:	ldr	r1, [fp, #24]
   1a370:	ldr	r9, [fp, #20]
   1a374:	ldr	r2, [r2]
   1a378:	ldr	r0, [r0]
   1a37c:	ldr	r1, [r1]
   1a380:	sub	r2, r2, #1
   1a384:	mls	r0, r2, r1, r0
   1a388:	ldr	r1, [r9]
   1a38c:	ldr	r2, [fp, #8]
   1a390:	sub	r4, r0, r1
   1a394:	ldr	r0, [sp, #44]	; 0x2c
   1a398:	add	r1, sp, #48	; 0x30
   1a39c:	sub	r3, r4, #1
   1a3a0:	bl	26a0 <InflateSkipData>
   1a3a4:	ldr	r0, [fp, #12]
   1a3a8:	add	r7, r4, r7
   1a3ac:	cmp	r0, #2
   1a3b0:	blt	1a4d4 <ReadCompressedDataSlabN+0x1b08>
   1a3b4:	ldr	r8, [sp, #12]
   1a3b8:	ldr	r3, [sp, #28]
   1a3bc:	mov	r0, #0
   1a3c0:	mov	sl, r0
   1a3c4:	ldr	r0, [r3, r0, lsl #2]
   1a3c8:	ldr	r1, [sp, #32]
   1a3cc:	add	r0, r0, #1
   1a3d0:	str	r0, [r3, sl, lsl #2]
   1a3d4:	ldr	r1, [r1, sl, lsl #2]
   1a3d8:	sdiv	r2, r0, r1
   1a3dc:	mls	r0, r2, r1, r0
   1a3e0:	cmp	r0, #0
   1a3e4:	bne	1a4ac <ReadCompressedDataSlabN+0x1ae0>
   1a3e8:	add	r5, sp, #104	; 0x68
   1a3ec:	mov	r0, #0
   1a3f0:	add	r4, r5, sl, lsl #2
   1a3f4:	str	r0, [r3, sl, lsl #2]
   1a3f8:	ldr	r0, [r4, #4]
   1a3fc:	sdiv	r1, r7, r0
   1a400:	mls	r1, r1, r0, r7
   1a404:	cmp	r1, #0
   1a408:	beq	1a458 <ReadCompressedDataSlabN+0x1a8c>
   1a40c:	ldr	r2, [r5, sl, lsl #2]
   1a410:	ldr	r3, [r8, sl, lsl #2]
   1a414:	sub	r0, r0, r1
   1a418:	add	r1, sp, #48	; 0x30
   1a41c:	mla	r3, r3, r2, r0
   1a420:	ldr	r0, [sp, #44]	; 0x2c
   1a424:	ldr	r2, [fp, #8]
   1a428:	bl	26a0 <InflateSkipData>
   1a42c:	ldr	r0, [r4, #4]
   1a430:	ldr	r3, [sp, #28]
   1a434:	sdiv	r2, r7, r0
   1a438:	add	r1, r0, r7
   1a43c:	mul	r0, r2, r0
   1a440:	ldr	r2, [r8, sl, lsl #2]
   1a444:	sub	r0, r0, r7
   1a448:	add	r0, r1, r0
   1a44c:	ldr	r1, [r5, sl, lsl #2]
   1a450:	mla	r7, r2, r1, r0
   1a454:	b	1a494 <ReadCompressedDataSlabN+0x1ac8>
   1a458:	ldr	r0, [r8, sl, lsl #2]
   1a45c:	cmp	r0, #0
   1a460:	beq	1a494 <ReadCompressedDataSlabN+0x1ac8>
   1a464:	add	r1, sp, #104	; 0x68
   1a468:	ldr	r2, [fp, #8]
   1a46c:	mov	r4, r1
   1a470:	ldr	r1, [r1, sl, lsl #2]
   1a474:	mul	r3, r1, r0
   1a478:	ldr	r0, [sp, #44]	; 0x2c
   1a47c:	add	r1, sp, #48	; 0x30
   1a480:	bl	26a0 <InflateSkipData>
   1a484:	ldr	r0, [r4, sl, lsl #2]
   1a488:	ldr	r1, [r8, sl, lsl #2]
   1a48c:	ldr	r3, [sp, #28]
   1a490:	mla	r7, r1, r0, r7
   1a494:	ldr	r2, [fp, #12]
   1a498:	add	r1, sl, #2
   1a49c:	add	r0, sl, #1
   1a4a0:	cmp	r1, r2
   1a4a4:	blt	1a3c0 <ReadCompressedDataSlabN+0x19f4>
   1a4a8:	b	1a4d4 <ReadCompressedDataSlabN+0x1b08>
   1a4ac:	ldr	r0, [sp, #4]
   1a4b0:	ldr	r4, [r0, sl, lsl #2]
   1a4b4:	cmp	r4, #0
   1a4b8:	beq	1a4d4 <ReadCompressedDataSlabN+0x1b08>
   1a4bc:	ldr	r0, [sp, #44]	; 0x2c
   1a4c0:	ldr	r2, [fp, #8]
   1a4c4:	add	r1, sp, #48	; 0x30
   1a4c8:	mov	r3, r4
   1a4cc:	bl	26a0 <InflateSkipData>
   1a4d0:	add	r7, r4, r7
   1a4d4:	ldr	r0, [fp, #28]
   1a4d8:	ldr	r5, [sp, #16]
   1a4dc:	str	r7, [sp, #24]
   1a4e0:	mov	r4, #1
   1a4e4:	add	r7, sp, #48	; 0x30
   1a4e8:	ldr	r0, [r0]
   1a4ec:	add	r5, r0, r5
   1a4f0:	ldr	r0, [sp, #20]
   1a4f4:	cmp	r5, r0
   1a4f8:	blt	1a26c <ReadCompressedDataSlabN+0x18a0>
   1a4fc:	b	1c8c8 <ReadCompressedDataSlabN+0x3efc>
   1a500:	mov	r8, #0
   1a504:	ldr	r0, [sp, #44]	; 0x2c
   1a508:	ldr	r2, [fp, #8]
   1a50c:	add	r1, sp, #48	; 0x30
   1a510:	mov	r3, r8
   1a514:	bl	26a0 <InflateSkipData>
   1a518:	ldr	r0, [fp, #24]
   1a51c:	ldr	r0, [r0]
   1a520:	cmp	r0, #1
   1a524:	bne	1ba0c <ReadCompressedDataSlabN+0x3040>
   1a528:	ldr	r0, [sp, #28]
   1a52c:	cmp	r0, #1
   1a530:	blt	1c8c8 <ReadCompressedDataSlabN+0x3efc>
   1a534:	ldr	r0, [fp, #28]
   1a538:	add	r6, r9, #4
   1a53c:	add	r1, sp, #48	; 0x30
   1a540:	add	r0, r0, #4
   1a544:	str	r0, [sp, #40]	; 0x28
   1a548:	sub	r0, fp, #112	; 0x70
   1a54c:	orr	r4, r0, #4
   1a550:	sub	r0, fp, #72	; 0x48
   1a554:	orr	r0, r0, #4
   1a558:	str	r0, [sp, #20]
   1a55c:	mov	r0, #0
   1a560:	str	r0, [sp, #32]
   1a564:	ldr	r3, [r9]
   1a568:	str	r8, [sp, #24]
   1a56c:	cmp	r3, #0
   1a570:	beq	1a5a8 <ReadCompressedDataSlabN+0x1bdc>
   1a574:	ldr	r8, [sp, #44]	; 0x2c
   1a578:	ldr	r5, [fp, #8]
   1a57c:	mov	r7, r9
   1a580:	mov	r9, r1
   1a584:	mov	r0, r8
   1a588:	mov	r2, r5
   1a58c:	bl	26a0 <InflateSkipData>
   1a590:	ldr	r0, [r7]
   1a594:	ldr	r1, [sp, #24]
   1a598:	ldr	r7, [fp, #28]
   1a59c:	add	r1, r0, r1
   1a5a0:	str	r1, [sp, #24]
   1a5a4:	b	1a5b8 <ReadCompressedDataSlabN+0x1bec>
   1a5a8:	ldr	r8, [sp, #44]	; 0x2c
   1a5ac:	ldr	r7, [fp, #28]
   1a5b0:	ldr	r5, [fp, #8]
   1a5b4:	mov	r9, r1
   1a5b8:	ldr	r0, [r7]
   1a5bc:	ldr	r1, [sp, #32]
   1a5c0:	mov	r3, r5
   1a5c4:	str	r0, [sp]
   1a5c8:	ldr	r0, [sp, #36]	; 0x24
   1a5cc:	add	r2, r0, r1, lsl #1
   1a5d0:	mov	r0, r8
   1a5d4:	mov	r1, r9
   1a5d8:	bl	fda4 <ReadCompressedInt16Data>
   1a5dc:	ldr	r1, [fp, #16]
   1a5e0:	ldr	r0, [fp, #20]
   1a5e4:	mov	r2, r8
   1a5e8:	mov	r8, r0
   1a5ec:	ldr	r0, [r0]
   1a5f0:	ldr	r1, [r1]
   1a5f4:	sub	r0, r1, r0
   1a5f8:	ldr	r1, [r7]
   1a5fc:	sub	r3, r0, r1
   1a600:	mov	r0, r2
   1a604:	mov	r1, r9
   1a608:	mov	r2, r5
   1a60c:	bl	26a0 <InflateSkipData>
   1a610:	ldr	r0, [fp, #16]
   1a614:	ldr	r1, [sp, #24]
   1a618:	ldr	r0, [r0]
   1a61c:	add	r0, r0, r1
   1a620:	ldr	r1, [r8]
   1a624:	sub	r8, r0, r1
   1a628:	ldr	r0, [fp, #12]
   1a62c:	cmp	r0, #2
   1a630:	blt	1a748 <ReadCompressedDataSlabN+0x1d7c>
   1a634:	mov	r7, r5
   1a638:	mov	r0, #0
   1a63c:	mov	r9, r0
   1a640:	ldr	r0, [r4, r0, lsl #2]
   1a644:	ldr	r1, [sp, #40]	; 0x28
   1a648:	add	r0, r0, #1
   1a64c:	str	r0, [r4, r9, lsl #2]
   1a650:	ldr	r1, [r1, r9, lsl #2]
   1a654:	sdiv	r2, r0, r1
   1a658:	mls	r0, r2, r1, r0
   1a65c:	cmp	r0, #0
   1a660:	bne	1a720 <ReadCompressedDataSlabN+0x1d54>
   1a664:	mov	r0, #0
   1a668:	mov	r5, sl
   1a66c:	add	sl, sl, r9, lsl #2
   1a670:	str	r0, [r4, r9, lsl #2]
   1a674:	ldr	r0, [sl, #4]
   1a678:	sdiv	r1, r8, r0
   1a67c:	mls	r1, r1, r0, r8
   1a680:	cmp	r1, #0
   1a684:	beq	1a6d4 <ReadCompressedDataSlabN+0x1d08>
   1a688:	ldr	r2, [r5, r9, lsl #2]
   1a68c:	ldr	r3, [r6, r9, lsl #2]
   1a690:	sub	r0, r0, r1
   1a694:	add	r1, sp, #48	; 0x30
   1a698:	mla	r3, r3, r2, r0
   1a69c:	ldr	r0, [sp, #44]	; 0x2c
   1a6a0:	mov	r2, r7
   1a6a4:	bl	26a0 <InflateSkipData>
   1a6a8:	ldr	r0, [sl, #4]
   1a6ac:	mov	sl, r5
   1a6b0:	sdiv	r2, r8, r0
   1a6b4:	add	r1, r0, r8
   1a6b8:	mul	r0, r2, r0
   1a6bc:	ldr	r2, [r6, r9, lsl #2]
   1a6c0:	sub	r0, r0, r8
   1a6c4:	add	r0, r1, r0
   1a6c8:	ldr	r1, [r5, r9, lsl #2]
   1a6cc:	mla	r8, r2, r1, r0
   1a6d0:	b	1a708 <ReadCompressedDataSlabN+0x1d3c>
   1a6d4:	ldr	r0, [r6, r9, lsl #2]
   1a6d8:	add	sl, sp, #104	; 0x68
   1a6dc:	cmp	r0, #0
   1a6e0:	beq	1a708 <ReadCompressedDataSlabN+0x1d3c>
   1a6e4:	ldr	r1, [sl, r9, lsl #2]
   1a6e8:	mov	r2, r7
   1a6ec:	mul	r3, r1, r0
   1a6f0:	ldr	r0, [sp, #44]	; 0x2c
   1a6f4:	add	r1, sp, #48	; 0x30
   1a6f8:	bl	26a0 <InflateSkipData>
   1a6fc:	ldr	r0, [sl, r9, lsl #2]
   1a700:	ldr	r1, [r6, r9, lsl #2]
   1a704:	mla	r8, r1, r0, r8
   1a708:	ldr	r2, [fp, #12]
   1a70c:	add	r1, r9, #2
   1a710:	add	r0, r9, #1
   1a714:	cmp	r1, r2
   1a718:	blt	1a63c <ReadCompressedDataSlabN+0x1c70>
   1a71c:	b	1a748 <ReadCompressedDataSlabN+0x1d7c>
   1a720:	ldr	r0, [sp, #20]
   1a724:	ldr	r5, [r0, r9, lsl #2]
   1a728:	cmp	r5, #0
   1a72c:	beq	1a748 <ReadCompressedDataSlabN+0x1d7c>
   1a730:	ldr	r0, [sp, #44]	; 0x2c
   1a734:	add	r1, sp, #48	; 0x30
   1a738:	mov	r2, r7
   1a73c:	mov	r3, r5
   1a740:	bl	26a0 <InflateSkipData>
   1a744:	add	r8, r5, r8
   1a748:	ldr	r0, [fp, #28]
   1a74c:	ldr	r1, [sp, #32]
   1a750:	ldr	r9, [fp, #20]
   1a754:	ldr	r0, [r0]
   1a758:	add	r1, r0, r1
   1a75c:	ldr	r0, [sp, #28]
   1a760:	str	r1, [sp, #32]
   1a764:	cmp	r1, r0
   1a768:	add	r1, sp, #48	; 0x30
   1a76c:	blt	1a564 <ReadCompressedDataSlabN+0x1b98>
   1a770:	b	1c8c8 <ReadCompressedDataSlabN+0x3efc>
   1a774:	ldr	r0, [sp, #28]
   1a778:	cmp	r0, #1
   1a77c:	blt	1c8c8 <ReadCompressedDataSlabN+0x3efc>
   1a780:	ldr	r0, [fp, #28]
   1a784:	add	r5, r9, #4
   1a788:	mov	r2, #0
   1a78c:	add	r1, sp, #48	; 0x30
   1a790:	str	r2, [sp, #20]
   1a794:	str	r5, [sp, #16]
   1a798:	add	r0, r0, #4
   1a79c:	str	r0, [sp, #40]	; 0x28
   1a7a0:	sub	r0, fp, #112	; 0x70
   1a7a4:	orr	r3, r0, #4
   1a7a8:	sub	r0, fp, #72	; 0x48
   1a7ac:	orr	r0, r0, #4
   1a7b0:	str	r3, [sp, #32]
   1a7b4:	str	r0, [sp, #8]
   1a7b8:	ldr	r0, [sp, #36]	; 0x24
   1a7bc:	add	r0, r0, #2
   1a7c0:	str	r0, [sp, #12]
   1a7c4:	mov	r0, #1
   1a7c8:	ldr	r3, [r9]
   1a7cc:	cmp	r3, #0
   1a7d0:	beq	1a800 <ReadCompressedDataSlabN+0x1e34>
   1a7d4:	ldr	r4, [sp, #44]	; 0x2c
   1a7d8:	ldr	r6, [fp, #8]
   1a7dc:	mov	sl, r1
   1a7e0:	mov	r0, r4
   1a7e4:	mov	r2, r6
   1a7e8:	bl	26a0 <InflateSkipData>
   1a7ec:	ldr	r0, [r9]
   1a7f0:	ldr	r7, [fp, #28]
   1a7f4:	add	r8, r0, r8
   1a7f8:	mov	r0, #1
   1a7fc:	b	1a810 <ReadCompressedDataSlabN+0x1e44>
   1a800:	ldr	r4, [sp, #44]	; 0x2c
   1a804:	ldr	r7, [fp, #28]
   1a808:	ldr	r6, [fp, #8]
   1a80c:	mov	sl, r1
   1a810:	str	r8, [sp, #24]
   1a814:	ldr	r8, [r7]
   1a818:	str	r0, [sp]
   1a81c:	ldr	r0, [sp, #36]	; 0x24
   1a820:	ldr	r5, [sp, #20]
   1a824:	mov	r1, sl
   1a828:	mov	r3, r6
   1a82c:	mov	r9, r4
   1a830:	add	r2, r0, r5, lsl #1
   1a834:	mov	r0, r4
   1a838:	bl	117c4 <ReadCompressedUInt16Data>
   1a83c:	cmp	r8, #2
   1a840:	blt	1a8c4 <ReadCompressedDataSlabN+0x1ef8>
   1a844:	ldr	r0, [sp, #12]
   1a848:	ldr	r8, [sp, #24]
   1a84c:	mov	r4, #0
   1a850:	add	r6, r0, r5, lsl #1
   1a854:	mov	r5, r9
   1a858:	ldr	r0, [fp, #24]
   1a85c:	add	r1, sp, #48	; 0x30
   1a860:	mov	r9, r0
   1a864:	ldr	r0, [r0]
   1a868:	sub	r3, r0, #1
   1a86c:	mov	r0, r5
   1a870:	ldr	r5, [fp, #8]
   1a874:	mov	r2, r5
   1a878:	bl	26a0 <InflateSkipData>
   1a87c:	mov	r0, #1
   1a880:	ldr	sl, [r7]
   1a884:	ldr	r9, [r9]
   1a888:	add	r1, sp, #48	; 0x30
   1a88c:	mov	r2, r6
   1a890:	mov	r3, r5
   1a894:	str	r0, [sp]
   1a898:	ldr	r0, [sp, #44]	; 0x2c
   1a89c:	bl	117c4 <ReadCompressedUInt16Data>
   1a8a0:	ldr	r7, [fp, #28]
   1a8a4:	ldr	r5, [sp, #44]	; 0x2c
   1a8a8:	add	r4, r4, #1
   1a8ac:	sub	r0, sl, #1
   1a8b0:	add	r8, r9, r8
   1a8b4:	add	r6, r6, #2
   1a8b8:	cmp	r4, r0
   1a8bc:	blt	1a858 <ReadCompressedDataSlabN+0x1e8c>
   1a8c0:	b	1a8cc <ReadCompressedDataSlabN+0x1f00>
   1a8c4:	ldr	r8, [sp, #24]
   1a8c8:	mov	r5, r9
   1a8cc:	ldr	r0, [fp, #16]
   1a8d0:	ldr	r1, [fp, #24]
   1a8d4:	ldr	r2, [r7]
   1a8d8:	ldr	r7, [fp, #8]
   1a8dc:	ldr	r0, [r0]
   1a8e0:	ldr	r1, [r1]
   1a8e4:	sub	r2, r2, #1
   1a8e8:	mls	r0, r2, r1, r0
   1a8ec:	ldr	r1, [fp, #20]
   1a8f0:	mov	r2, r7
   1a8f4:	ldr	r1, [r1]
   1a8f8:	sub	r4, r0, r1
   1a8fc:	mov	r0, r5
   1a900:	add	r1, sp, #48	; 0x30
   1a904:	sub	r3, r4, #1
   1a908:	bl	26a0 <InflateSkipData>
   1a90c:	ldr	r0, [fp, #12]
   1a910:	add	r8, r4, r8
   1a914:	cmp	r0, #2
   1a918:	blt	1aa38 <ReadCompressedDataSlabN+0x206c>
   1a91c:	mov	sl, r5
   1a920:	ldr	r5, [sp, #16]
   1a924:	ldr	r3, [sp, #32]
   1a928:	mov	r0, #0
   1a92c:	add	r9, sp, #104	; 0x68
   1a930:	mov	r6, r0
   1a934:	ldr	r0, [r3, r0, lsl #2]
   1a938:	ldr	r1, [sp, #40]	; 0x28
   1a93c:	add	r0, r0, #1
   1a940:	str	r0, [r3, r6, lsl #2]
   1a944:	ldr	r1, [r1, r6, lsl #2]
   1a948:	sdiv	r2, r0, r1
   1a94c:	mls	r0, r2, r1, r0
   1a950:	cmp	r0, #0
   1a954:	bne	1aa10 <ReadCompressedDataSlabN+0x2044>
   1a958:	mov	r0, #0
   1a95c:	add	r4, r9, r6, lsl #2
   1a960:	str	r0, [r3, r6, lsl #2]
   1a964:	ldr	r0, [r4, #4]
   1a968:	sdiv	r1, r8, r0
   1a96c:	mls	r1, r1, r0, r8
   1a970:	cmp	r1, #0
   1a974:	beq	1a9c4 <ReadCompressedDataSlabN+0x1ff8>
   1a978:	ldr	r2, [r9, r6, lsl #2]
   1a97c:	ldr	r3, [r5, r6, lsl #2]
   1a980:	sub	r0, r0, r1
   1a984:	add	r1, sp, #48	; 0x30
   1a988:	mla	r3, r3, r2, r0
   1a98c:	mov	r0, sl
   1a990:	mov	r2, r7
   1a994:	bl	26a0 <InflateSkipData>
   1a998:	ldr	r0, [r4, #4]
   1a99c:	ldr	r3, [sp, #32]
   1a9a0:	sdiv	r2, r8, r0
   1a9a4:	add	r1, r0, r8
   1a9a8:	mul	r0, r2, r0
   1a9ac:	ldr	r2, [r5, r6, lsl #2]
   1a9b0:	sub	r0, r0, r8
   1a9b4:	add	r0, r1, r0
   1a9b8:	ldr	r1, [r9, r6, lsl #2]
   1a9bc:	mla	r8, r2, r1, r0
   1a9c0:	b	1a9f8 <ReadCompressedDataSlabN+0x202c>
   1a9c4:	ldr	r0, [r5, r6, lsl #2]
   1a9c8:	cmp	r0, #0
   1a9cc:	beq	1a9f8 <ReadCompressedDataSlabN+0x202c>
   1a9d0:	ldr	r1, [r9, r6, lsl #2]
   1a9d4:	mov	r2, r7
   1a9d8:	mul	r3, r1, r0
   1a9dc:	mov	r0, sl
   1a9e0:	add	r1, sp, #48	; 0x30
   1a9e4:	bl	26a0 <InflateSkipData>
   1a9e8:	ldr	r0, [r9, r6, lsl #2]
   1a9ec:	ldr	r1, [r5, r6, lsl #2]
   1a9f0:	ldr	r3, [sp, #32]
   1a9f4:	mla	r8, r1, r0, r8
   1a9f8:	ldr	r2, [fp, #12]
   1a9fc:	add	r1, r6, #2
   1aa00:	add	r0, r6, #1
   1aa04:	cmp	r1, r2
   1aa08:	blt	1a930 <ReadCompressedDataSlabN+0x1f64>
   1aa0c:	b	1aa38 <ReadCompressedDataSlabN+0x206c>
   1aa10:	ldr	r0, [sp, #8]
   1aa14:	ldr	r6, [r0, r6, lsl #2]
   1aa18:	cmp	r6, #0
   1aa1c:	beq	1aa38 <ReadCompressedDataSlabN+0x206c>
   1aa20:	mov	r0, sl
   1aa24:	add	r1, sp, #48	; 0x30
   1aa28:	mov	r2, r7
   1aa2c:	mov	r3, r6
   1aa30:	bl	26a0 <InflateSkipData>
   1aa34:	add	r8, r6, r8
   1aa38:	ldr	r0, [fp, #28]
   1aa3c:	ldr	r1, [sp, #20]
   1aa40:	ldr	r9, [fp, #20]
   1aa44:	ldr	r0, [r0]
   1aa48:	add	r1, r0, r1
   1aa4c:	ldr	r0, [sp, #28]
   1aa50:	str	r1, [sp, #20]
   1aa54:	cmp	r1, r0
   1aa58:	mov	r0, #1
   1aa5c:	add	r1, sp, #48	; 0x30
   1aa60:	blt	1a7c8 <ReadCompressedDataSlabN+0x1dfc>
   1aa64:	b	1c8c8 <ReadCompressedDataSlabN+0x3efc>
   1aa68:	mov	r8, #0
   1aa6c:	ldr	r0, [sp, #44]	; 0x2c
   1aa70:	ldr	r2, [fp, #8]
   1aa74:	add	r1, sp, #48	; 0x30
   1aa78:	mov	r3, r8
   1aa7c:	bl	26a0 <InflateSkipData>
   1aa80:	ldr	r0, [fp, #24]
   1aa84:	ldr	r0, [r0]
   1aa88:	cmp	r0, #1
   1aa8c:	bne	1bd00 <ReadCompressedDataSlabN+0x3334>
   1aa90:	ldr	r0, [sp, #28]
   1aa94:	cmp	r0, #1
   1aa98:	blt	1c8c8 <ReadCompressedDataSlabN+0x3efc>
   1aa9c:	ldr	r0, [fp, #28]
   1aaa0:	add	r6, r9, #4
   1aaa4:	add	r1, sp, #48	; 0x30
   1aaa8:	add	r0, r0, #4
   1aaac:	str	r0, [sp, #40]	; 0x28
   1aab0:	sub	r0, fp, #112	; 0x70
   1aab4:	orr	r4, r0, #4
   1aab8:	sub	r0, fp, #72	; 0x48
   1aabc:	orr	r0, r0, #4
   1aac0:	str	r0, [sp, #20]
   1aac4:	mov	r0, #0
   1aac8:	str	r0, [sp, #32]
   1aacc:	ldr	r3, [r9]
   1aad0:	str	r8, [sp, #24]
   1aad4:	cmp	r3, #0
   1aad8:	beq	1ab10 <ReadCompressedDataSlabN+0x2144>
   1aadc:	ldr	r8, [sp, #44]	; 0x2c
   1aae0:	ldr	r5, [fp, #8]
   1aae4:	mov	r7, r9
   1aae8:	mov	r9, r1
   1aaec:	mov	r0, r8
   1aaf0:	mov	r2, r5
   1aaf4:	bl	26a0 <InflateSkipData>
   1aaf8:	ldr	r0, [r7]
   1aafc:	ldr	r1, [sp, #24]
   1ab00:	ldr	r7, [fp, #28]
   1ab04:	add	r1, r0, r1
   1ab08:	str	r1, [sp, #24]
   1ab0c:	b	1ab20 <ReadCompressedDataSlabN+0x2154>
   1ab10:	ldr	r8, [sp, #44]	; 0x2c
   1ab14:	ldr	r7, [fp, #28]
   1ab18:	ldr	r5, [fp, #8]
   1ab1c:	mov	r9, r1
   1ab20:	ldr	r0, [r7]
   1ab24:	ldr	r1, [sp, #32]
   1ab28:	mov	r3, r5
   1ab2c:	str	r0, [sp]
   1ab30:	ldr	r0, [sp, #36]	; 0x24
   1ab34:	add	r2, r0, r1, lsl #2
   1ab38:	mov	r0, r8
   1ab3c:	mov	r1, r9
   1ab40:	bl	c964 <ReadCompressedInt32Data>
   1ab44:	ldr	r1, [fp, #16]
   1ab48:	ldr	r0, [fp, #20]
   1ab4c:	mov	r2, r8
   1ab50:	mov	r8, r0
   1ab54:	ldr	r0, [r0]
   1ab58:	ldr	r1, [r1]
   1ab5c:	sub	r0, r1, r0
   1ab60:	ldr	r1, [r7]
   1ab64:	sub	r3, r0, r1
   1ab68:	mov	r0, r2
   1ab6c:	mov	r1, r9
   1ab70:	mov	r2, r5
   1ab74:	bl	26a0 <InflateSkipData>
   1ab78:	ldr	r0, [fp, #16]
   1ab7c:	ldr	r1, [sp, #24]
   1ab80:	ldr	r0, [r0]
   1ab84:	add	r0, r0, r1
   1ab88:	ldr	r1, [r8]
   1ab8c:	sub	r8, r0, r1
   1ab90:	ldr	r0, [fp, #12]
   1ab94:	cmp	r0, #2
   1ab98:	blt	1acb0 <ReadCompressedDataSlabN+0x22e4>
   1ab9c:	mov	r7, r5
   1aba0:	mov	r0, #0
   1aba4:	mov	r9, r0
   1aba8:	ldr	r0, [r4, r0, lsl #2]
   1abac:	ldr	r1, [sp, #40]	; 0x28
   1abb0:	add	r0, r0, #1
   1abb4:	str	r0, [r4, r9, lsl #2]
   1abb8:	ldr	r1, [r1, r9, lsl #2]
   1abbc:	sdiv	r2, r0, r1
   1abc0:	mls	r0, r2, r1, r0
   1abc4:	cmp	r0, #0
   1abc8:	bne	1ac88 <ReadCompressedDataSlabN+0x22bc>
   1abcc:	mov	r0, #0
   1abd0:	mov	r5, sl
   1abd4:	add	sl, sl, r9, lsl #2
   1abd8:	str	r0, [r4, r9, lsl #2]
   1abdc:	ldr	r0, [sl, #4]
   1abe0:	sdiv	r1, r8, r0
   1abe4:	mls	r1, r1, r0, r8
   1abe8:	cmp	r1, #0
   1abec:	beq	1ac3c <ReadCompressedDataSlabN+0x2270>
   1abf0:	ldr	r2, [r5, r9, lsl #2]
   1abf4:	ldr	r3, [r6, r9, lsl #2]
   1abf8:	sub	r0, r0, r1
   1abfc:	add	r1, sp, #48	; 0x30
   1ac00:	mla	r3, r3, r2, r0
   1ac04:	ldr	r0, [sp, #44]	; 0x2c
   1ac08:	mov	r2, r7
   1ac0c:	bl	26a0 <InflateSkipData>
   1ac10:	ldr	r0, [sl, #4]
   1ac14:	mov	sl, r5
   1ac18:	sdiv	r2, r8, r0
   1ac1c:	add	r1, r0, r8
   1ac20:	mul	r0, r2, r0
   1ac24:	ldr	r2, [r6, r9, lsl #2]
   1ac28:	sub	r0, r0, r8
   1ac2c:	add	r0, r1, r0
   1ac30:	ldr	r1, [r5, r9, lsl #2]
   1ac34:	mla	r8, r2, r1, r0
   1ac38:	b	1ac70 <ReadCompressedDataSlabN+0x22a4>
   1ac3c:	ldr	r0, [r6, r9, lsl #2]
   1ac40:	add	sl, sp, #104	; 0x68
   1ac44:	cmp	r0, #0
   1ac48:	beq	1ac70 <ReadCompressedDataSlabN+0x22a4>
   1ac4c:	ldr	r1, [sl, r9, lsl #2]
   1ac50:	mov	r2, r7
   1ac54:	mul	r3, r1, r0
   1ac58:	ldr	r0, [sp, #44]	; 0x2c
   1ac5c:	add	r1, sp, #48	; 0x30
   1ac60:	bl	26a0 <InflateSkipData>
   1ac64:	ldr	r0, [sl, r9, lsl #2]
   1ac68:	ldr	r1, [r6, r9, lsl #2]
   1ac6c:	mla	r8, r1, r0, r8
   1ac70:	ldr	r2, [fp, #12]
   1ac74:	add	r1, r9, #2
   1ac78:	add	r0, r9, #1
   1ac7c:	cmp	r1, r2
   1ac80:	blt	1aba4 <ReadCompressedDataSlabN+0x21d8>
   1ac84:	b	1acb0 <ReadCompressedDataSlabN+0x22e4>
   1ac88:	ldr	r0, [sp, #20]
   1ac8c:	ldr	r5, [r0, r9, lsl #2]
   1ac90:	cmp	r5, #0
   1ac94:	beq	1acb0 <ReadCompressedDataSlabN+0x22e4>
   1ac98:	ldr	r0, [sp, #44]	; 0x2c
   1ac9c:	add	r1, sp, #48	; 0x30
   1aca0:	mov	r2, r7
   1aca4:	mov	r3, r5
   1aca8:	bl	26a0 <InflateSkipData>
   1acac:	add	r8, r5, r8
   1acb0:	ldr	r0, [fp, #28]
   1acb4:	ldr	r1, [sp, #32]
   1acb8:	ldr	r9, [fp, #20]
   1acbc:	ldr	r0, [r0]
   1acc0:	add	r1, r0, r1
   1acc4:	ldr	r0, [sp, #28]
   1acc8:	str	r1, [sp, #32]
   1accc:	cmp	r1, r0
   1acd0:	add	r1, sp, #48	; 0x30
   1acd4:	blt	1aacc <ReadCompressedDataSlabN+0x2100>
   1acd8:	b	1c8c8 <ReadCompressedDataSlabN+0x3efc>
   1acdc:	mov	r8, #0
   1ace0:	ldr	r0, [sp, #44]	; 0x2c
   1ace4:	ldr	r2, [fp, #8]
   1ace8:	add	r1, sp, #48	; 0x30
   1acec:	mov	r3, r8
   1acf0:	bl	26a0 <InflateSkipData>
   1acf4:	ldr	r0, [fp, #24]
   1acf8:	ldr	r0, [r0]
   1acfc:	cmp	r0, #1
   1ad00:	bne	1bff4 <ReadCompressedDataSlabN+0x3628>
   1ad04:	ldr	r0, [sp, #28]
   1ad08:	cmp	r0, #1
   1ad0c:	blt	1c8c8 <ReadCompressedDataSlabN+0x3efc>
   1ad10:	ldr	r0, [fp, #28]
   1ad14:	add	r6, r9, #4
   1ad18:	add	r1, sp, #48	; 0x30
   1ad1c:	add	r0, r0, #4
   1ad20:	str	r0, [sp, #40]	; 0x28
   1ad24:	sub	r0, fp, #112	; 0x70
   1ad28:	orr	r4, r0, #4
   1ad2c:	sub	r0, fp, #72	; 0x48
   1ad30:	orr	r0, r0, #4
   1ad34:	str	r0, [sp, #20]
   1ad38:	mov	r0, #0
   1ad3c:	str	r0, [sp, #32]
   1ad40:	ldr	r3, [r9]
   1ad44:	str	r8, [sp, #24]
   1ad48:	cmp	r3, #0
   1ad4c:	beq	1ad84 <ReadCompressedDataSlabN+0x23b8>
   1ad50:	ldr	r8, [sp, #44]	; 0x2c
   1ad54:	ldr	r5, [fp, #8]
   1ad58:	mov	r7, r9
   1ad5c:	mov	r9, r1
   1ad60:	mov	r0, r8
   1ad64:	mov	r2, r5
   1ad68:	bl	26a0 <InflateSkipData>
   1ad6c:	ldr	r0, [r7]
   1ad70:	ldr	r1, [sp, #24]
   1ad74:	ldr	r7, [fp, #28]
   1ad78:	add	r1, r0, r1
   1ad7c:	str	r1, [sp, #24]
   1ad80:	b	1ad94 <ReadCompressedDataSlabN+0x23c8>
   1ad84:	ldr	r8, [sp, #44]	; 0x2c
   1ad88:	ldr	r7, [fp, #28]
   1ad8c:	ldr	r5, [fp, #8]
   1ad90:	mov	r9, r1
   1ad94:	ldr	r0, [r7]
   1ad98:	ldr	r1, [sp, #32]
   1ad9c:	mov	r3, r5
   1ada0:	str	r0, [sp]
   1ada4:	ldr	r0, [sp, #36]	; 0x24
   1ada8:	add	r2, r0, r1, lsl #2
   1adac:	mov	r0, r8
   1adb0:	mov	r1, r9
   1adb4:	bl	e384 <ReadCompressedUInt32Data>
   1adb8:	ldr	r1, [fp, #16]
   1adbc:	ldr	r0, [fp, #20]
   1adc0:	mov	r2, r8
   1adc4:	mov	r8, r0
   1adc8:	ldr	r0, [r0]
   1adcc:	ldr	r1, [r1]
   1add0:	sub	r0, r1, r0
   1add4:	ldr	r1, [r7]
   1add8:	sub	r3, r0, r1
   1addc:	mov	r0, r2
   1ade0:	mov	r1, r9
   1ade4:	mov	r2, r5
   1ade8:	bl	26a0 <InflateSkipData>
   1adec:	ldr	r0, [fp, #16]
   1adf0:	ldr	r1, [sp, #24]
   1adf4:	ldr	r0, [r0]
   1adf8:	add	r0, r0, r1
   1adfc:	ldr	r1, [r8]
   1ae00:	sub	r8, r0, r1
   1ae04:	ldr	r0, [fp, #12]
   1ae08:	cmp	r0, #2
   1ae0c:	blt	1af24 <ReadCompressedDataSlabN+0x2558>
   1ae10:	mov	r7, r5
   1ae14:	mov	r0, #0
   1ae18:	mov	r9, r0
   1ae1c:	ldr	r0, [r4, r0, lsl #2]
   1ae20:	ldr	r1, [sp, #40]	; 0x28
   1ae24:	add	r0, r0, #1
   1ae28:	str	r0, [r4, r9, lsl #2]
   1ae2c:	ldr	r1, [r1, r9, lsl #2]
   1ae30:	sdiv	r2, r0, r1
   1ae34:	mls	r0, r2, r1, r0
   1ae38:	cmp	r0, #0
   1ae3c:	bne	1aefc <ReadCompressedDataSlabN+0x2530>
   1ae40:	mov	r0, #0
   1ae44:	mov	r5, sl
   1ae48:	add	sl, sl, r9, lsl #2
   1ae4c:	str	r0, [r4, r9, lsl #2]
   1ae50:	ldr	r0, [sl, #4]
   1ae54:	sdiv	r1, r8, r0
   1ae58:	mls	r1, r1, r0, r8
   1ae5c:	cmp	r1, #0
   1ae60:	beq	1aeb0 <ReadCompressedDataSlabN+0x24e4>
   1ae64:	ldr	r2, [r5, r9, lsl #2]
   1ae68:	ldr	r3, [r6, r9, lsl #2]
   1ae6c:	sub	r0, r0, r1
   1ae70:	add	r1, sp, #48	; 0x30
   1ae74:	mla	r3, r3, r2, r0
   1ae78:	ldr	r0, [sp, #44]	; 0x2c
   1ae7c:	mov	r2, r7
   1ae80:	bl	26a0 <InflateSkipData>
   1ae84:	ldr	r0, [sl, #4]
   1ae88:	mov	sl, r5
   1ae8c:	sdiv	r2, r8, r0
   1ae90:	add	r1, r0, r8
   1ae94:	mul	r0, r2, r0
   1ae98:	ldr	r2, [r6, r9, lsl #2]
   1ae9c:	sub	r0, r0, r8
   1aea0:	add	r0, r1, r0
   1aea4:	ldr	r1, [r5, r9, lsl #2]
   1aea8:	mla	r8, r2, r1, r0
   1aeac:	b	1aee4 <ReadCompressedDataSlabN+0x2518>
   1aeb0:	ldr	r0, [r6, r9, lsl #2]
   1aeb4:	add	sl, sp, #104	; 0x68
   1aeb8:	cmp	r0, #0
   1aebc:	beq	1aee4 <ReadCompressedDataSlabN+0x2518>
   1aec0:	ldr	r1, [sl, r9, lsl #2]
   1aec4:	mov	r2, r7
   1aec8:	mul	r3, r1, r0
   1aecc:	ldr	r0, [sp, #44]	; 0x2c
   1aed0:	add	r1, sp, #48	; 0x30
   1aed4:	bl	26a0 <InflateSkipData>
   1aed8:	ldr	r0, [sl, r9, lsl #2]
   1aedc:	ldr	r1, [r6, r9, lsl #2]
   1aee0:	mla	r8, r1, r0, r8
   1aee4:	ldr	r2, [fp, #12]
   1aee8:	add	r1, r9, #2
   1aeec:	add	r0, r9, #1
   1aef0:	cmp	r1, r2
   1aef4:	blt	1ae18 <ReadCompressedDataSlabN+0x244c>
   1aef8:	b	1af24 <ReadCompressedDataSlabN+0x2558>
   1aefc:	ldr	r0, [sp, #20]
   1af00:	ldr	r5, [r0, r9, lsl #2]
   1af04:	cmp	r5, #0
   1af08:	beq	1af24 <ReadCompressedDataSlabN+0x2558>
   1af0c:	ldr	r0, [sp, #44]	; 0x2c
   1af10:	add	r1, sp, #48	; 0x30
   1af14:	mov	r2, r7
   1af18:	mov	r3, r5
   1af1c:	bl	26a0 <InflateSkipData>
   1af20:	add	r8, r5, r8
   1af24:	ldr	r0, [fp, #28]
   1af28:	ldr	r1, [sp, #32]
   1af2c:	ldr	r9, [fp, #20]
   1af30:	ldr	r0, [r0]
   1af34:	add	r1, r0, r1
   1af38:	ldr	r0, [sp, #28]
   1af3c:	str	r1, [sp, #32]
   1af40:	cmp	r1, r0
   1af44:	add	r1, sp, #48	; 0x30
   1af48:	blt	1ad40 <ReadCompressedDataSlabN+0x2374>
   1af4c:	b	1c8c8 <ReadCompressedDataSlabN+0x3efc>
   1af50:	str	r1, [sp, #40]	; 0x28
   1af54:	ldr	r2, [fp, #8]
   1af58:	ldr	r3, [sp, #40]	; 0x28
   1af5c:	add	r1, sp, #48	; 0x30
   1af60:	bl	26a0 <InflateSkipData>
   1af64:	ldr	r0, [fp, #24]
   1af68:	ldr	r0, [r0]
   1af6c:	cmp	r0, #1
   1af70:	bne	1c2e8 <ReadCompressedDataSlabN+0x391c>
   1af74:	ldr	r0, [sp, #24]
   1af78:	cmp	r0, #1
   1af7c:	blt	1c8c8 <ReadCompressedDataSlabN+0x3efc>
   1af80:	add	r0, r9, #4
   1af84:	add	r1, sp, #48	; 0x30
   1af88:	str	r0, [sp, #20]
   1af8c:	ldr	r0, [fp, #28]
   1af90:	add	r0, r0, #4
   1af94:	str	r0, [sp, #32]
   1af98:	sub	r0, fp, #112	; 0x70
   1af9c:	orr	r4, r0, #4
   1afa0:	sub	r0, fp, #72	; 0x48
   1afa4:	orr	r0, r0, #4
   1afa8:	str	r0, [sp, #16]
   1afac:	mov	r0, #0
   1afb0:	str	r0, [sp, #28]
   1afb4:	ldr	r3, [r9]
   1afb8:	cmp	r3, #0
   1afbc:	beq	1aff0 <ReadCompressedDataSlabN+0x2624>
   1afc0:	ldr	r5, [fp, #8]
   1afc4:	ldr	r0, [sp, #44]	; 0x2c
   1afc8:	mov	r6, r1
   1afcc:	mov	r2, r5
   1afd0:	mov	r8, r5
   1afd4:	bl	26a0 <InflateSkipData>
   1afd8:	ldr	r0, [r9]
   1afdc:	ldr	r9, [sp, #40]	; 0x28
   1afe0:	ldr	r5, [fp, #28]
   1afe4:	add	r9, r0, r9
   1afe8:	str	r9, [sp, #40]	; 0x28
   1afec:	b	1affc <ReadCompressedDataSlabN+0x2630>
   1aff0:	ldr	r5, [fp, #28]
   1aff4:	ldr	r8, [fp, #8]
   1aff8:	mov	r6, r1
   1affc:	ldr	r0, [r5]
   1b000:	ldr	r1, [sp, #28]
   1b004:	ldr	r7, [sp, #44]	; 0x2c
   1b008:	mov	r3, r8
   1b00c:	str	r0, [sp]
   1b010:	ldr	r0, [sp, #36]	; 0x24
   1b014:	add	r2, r0, r1, lsl #3
   1b018:	mov	r0, r7
   1b01c:	mov	r1, r6
   1b020:	bl	927c <ReadCompressedInt64Data>
   1b024:	ldr	r1, [fp, #16]
   1b028:	ldr	r9, [fp, #20]
   1b02c:	mov	r2, r8
   1b030:	ldr	r0, [r9]
   1b034:	ldr	r1, [r1]
   1b038:	sub	r0, r1, r0
   1b03c:	ldr	r1, [r5]
   1b040:	sub	r3, r0, r1
   1b044:	mov	r0, r7
   1b048:	mov	r1, r6
   1b04c:	bl	26a0 <InflateSkipData>
   1b050:	ldr	r0, [fp, #16]
   1b054:	ldr	r1, [sp, #40]	; 0x28
   1b058:	ldr	r0, [r0]
   1b05c:	add	r0, r0, r1
   1b060:	ldr	r1, [r9]
   1b064:	sub	r3, r0, r1
   1b068:	ldr	r0, [fp, #12]
   1b06c:	cmp	r0, #2
   1b070:	blt	1b19c <ReadCompressedDataSlabN+0x27d0>
   1b074:	ldr	r6, [sp, #20]
   1b078:	mov	r0, #0
   1b07c:	mov	r9, r0
   1b080:	ldr	r0, [r4, r0, lsl #2]
   1b084:	ldr	r1, [sp, #32]
   1b088:	add	r0, r0, #1
   1b08c:	str	r0, [r4, r9, lsl #2]
   1b090:	ldr	r1, [r1, r9, lsl #2]
   1b094:	sdiv	r2, r0, r1
   1b098:	mls	r0, r2, r1, r0
   1b09c:	cmp	r0, #0
   1b0a0:	bne	1b16c <ReadCompressedDataSlabN+0x27a0>
   1b0a4:	mov	r0, #0
   1b0a8:	mov	r5, sl
   1b0ac:	add	sl, sl, r9, lsl #2
   1b0b0:	str	r0, [r4, r9, lsl #2]
   1b0b4:	ldr	r0, [sl, #4]
   1b0b8:	sdiv	r1, r3, r0
   1b0bc:	mls	r1, r1, r0, r3
   1b0c0:	cmp	r1, #0
   1b0c4:	beq	1b118 <ReadCompressedDataSlabN+0x274c>
   1b0c8:	mov	r7, r3
   1b0cc:	ldr	r2, [r5, r9, lsl #2]
   1b0d0:	ldr	r3, [r6, r9, lsl #2]
   1b0d4:	sub	r0, r0, r1
   1b0d8:	add	r1, sp, #48	; 0x30
   1b0dc:	mla	r3, r3, r2, r0
   1b0e0:	ldr	r0, [sp, #44]	; 0x2c
   1b0e4:	mov	r2, r8
   1b0e8:	bl	26a0 <InflateSkipData>
   1b0ec:	ldr	r0, [sl, #4]
   1b0f0:	mov	sl, r5
   1b0f4:	sdiv	r2, r7, r0
   1b0f8:	add	r1, r0, r7
   1b0fc:	mul	r0, r2, r0
   1b100:	ldr	r2, [r6, r9, lsl #2]
   1b104:	sub	r0, r0, r7
   1b108:	add	r0, r1, r0
   1b10c:	ldr	r1, [r5, r9, lsl #2]
   1b110:	mla	r3, r2, r1, r0
   1b114:	b	1b154 <ReadCompressedDataSlabN+0x2788>
   1b118:	ldr	r0, [r6, r9, lsl #2]
   1b11c:	add	sl, sp, #104	; 0x68
   1b120:	cmp	r0, #0
   1b124:	beq	1b154 <ReadCompressedDataSlabN+0x2788>
   1b128:	ldr	r1, [sl, r9, lsl #2]
   1b12c:	mov	r5, r3
   1b130:	mov	r2, r8
   1b134:	mul	r3, r1, r0
   1b138:	ldr	r0, [sp, #44]	; 0x2c
   1b13c:	add	r1, sp, #48	; 0x30
   1b140:	bl	26a0 <InflateSkipData>
   1b144:	ldr	r0, [sl, r9, lsl #2]
   1b148:	ldr	r1, [r6, r9, lsl #2]
   1b14c:	mov	r3, r5
   1b150:	mla	r3, r1, r0, r5
   1b154:	ldr	r2, [fp, #12]
   1b158:	add	r1, r9, #2
   1b15c:	add	r0, r9, #1
   1b160:	cmp	r1, r2
   1b164:	blt	1b07c <ReadCompressedDataSlabN+0x26b0>
   1b168:	b	1b19c <ReadCompressedDataSlabN+0x27d0>
   1b16c:	ldr	r0, [sp, #16]
   1b170:	ldr	r6, [r0, r9, lsl #2]
   1b174:	cmp	r6, #0
   1b178:	beq	1b19c <ReadCompressedDataSlabN+0x27d0>
   1b17c:	ldr	r0, [sp, #44]	; 0x2c
   1b180:	mov	r5, r3
   1b184:	add	r1, sp, #48	; 0x30
   1b188:	mov	r2, r8
   1b18c:	mov	r3, r6
   1b190:	bl	26a0 <InflateSkipData>
   1b194:	mov	r3, r5
   1b198:	add	r3, r6, r5
   1b19c:	ldr	r0, [fp, #28]
   1b1a0:	ldr	r1, [sp, #28]
   1b1a4:	ldr	r9, [fp, #20]
   1b1a8:	str	r3, [sp, #40]	; 0x28
   1b1ac:	ldr	r0, [r0]
   1b1b0:	add	r1, r0, r1
   1b1b4:	ldr	r0, [sp, #24]
   1b1b8:	str	r1, [sp, #28]
   1b1bc:	cmp	r1, r0
   1b1c0:	add	r1, sp, #48	; 0x30
   1b1c4:	blt	1afb4 <ReadCompressedDataSlabN+0x25e8>
   1b1c8:	b	1c8c8 <ReadCompressedDataSlabN+0x3efc>
   1b1cc:	mov	r8, #0
   1b1d0:	ldr	r0, [sp, #44]	; 0x2c
   1b1d4:	ldr	r2, [fp, #8]
   1b1d8:	add	r1, sp, #48	; 0x30
   1b1dc:	mov	r3, r8
   1b1e0:	bl	26a0 <InflateSkipData>
   1b1e4:	ldr	r0, [fp, #24]
   1b1e8:	ldr	r0, [r0]
   1b1ec:	cmp	r0, #1
   1b1f0:	bne	1c5d8 <ReadCompressedDataSlabN+0x3c0c>
   1b1f4:	ldr	r0, [sp, #28]
   1b1f8:	cmp	r0, #1
   1b1fc:	blt	1c8c8 <ReadCompressedDataSlabN+0x3efc>
   1b200:	ldr	r0, [fp, #28]
   1b204:	add	r6, r9, #4
   1b208:	add	r1, sp, #48	; 0x30
   1b20c:	add	r0, r0, #4
   1b210:	str	r0, [sp, #40]	; 0x28
   1b214:	sub	r0, fp, #112	; 0x70
   1b218:	orr	r4, r0, #4
   1b21c:	sub	r0, fp, #72	; 0x48
   1b220:	orr	r0, r0, #4
   1b224:	str	r0, [sp, #20]
   1b228:	mov	r0, #0
   1b22c:	str	r0, [sp, #32]
   1b230:	ldr	r3, [r9]
   1b234:	str	r8, [sp, #24]
   1b238:	cmp	r3, #0
   1b23c:	beq	1b274 <ReadCompressedDataSlabN+0x28a8>
   1b240:	ldr	r8, [sp, #44]	; 0x2c
   1b244:	ldr	r5, [fp, #8]
   1b248:	mov	r7, r9
   1b24c:	mov	r9, r1
   1b250:	mov	r0, r8
   1b254:	mov	r2, r5
   1b258:	bl	26a0 <InflateSkipData>
   1b25c:	ldr	r0, [r7]
   1b260:	ldr	r1, [sp, #24]
   1b264:	ldr	r7, [fp, #28]
   1b268:	add	r1, r0, r1
   1b26c:	str	r1, [sp, #24]
   1b270:	b	1b284 <ReadCompressedDataSlabN+0x28b8>
   1b274:	ldr	r8, [sp, #44]	; 0x2c
   1b278:	ldr	r7, [fp, #28]
   1b27c:	ldr	r5, [fp, #8]
   1b280:	mov	r9, r1
   1b284:	ldr	r0, [r7]
   1b288:	ldr	r1, [sp, #32]
   1b28c:	mov	r3, r5
   1b290:	str	r0, [sp]
   1b294:	ldr	r0, [sp, #36]	; 0x24
   1b298:	add	r2, r0, r1, lsl #3
   1b29c:	mov	r0, r8
   1b2a0:	mov	r1, r9
   1b2a4:	bl	aed4 <ReadCompressedUInt64Data>
   1b2a8:	ldr	r1, [fp, #16]
   1b2ac:	ldr	r0, [fp, #20]
   1b2b0:	mov	r2, r8
   1b2b4:	mov	r8, r0
   1b2b8:	ldr	r0, [r0]
   1b2bc:	ldr	r1, [r1]
   1b2c0:	sub	r0, r1, r0
   1b2c4:	ldr	r1, [r7]
   1b2c8:	sub	r3, r0, r1
   1b2cc:	mov	r0, r2
   1b2d0:	mov	r1, r9
   1b2d4:	mov	r2, r5
   1b2d8:	bl	26a0 <InflateSkipData>
   1b2dc:	ldr	r0, [fp, #16]
   1b2e0:	ldr	r1, [sp, #24]
   1b2e4:	ldr	r0, [r0]
   1b2e8:	add	r0, r0, r1
   1b2ec:	ldr	r1, [r8]
   1b2f0:	sub	r8, r0, r1
   1b2f4:	ldr	r0, [fp, #12]
   1b2f8:	cmp	r0, #2
   1b2fc:	blt	1b414 <ReadCompressedDataSlabN+0x2a48>
   1b300:	mov	r7, r5
   1b304:	mov	r0, #0
   1b308:	mov	r9, r0
   1b30c:	ldr	r0, [r4, r0, lsl #2]
   1b310:	ldr	r1, [sp, #40]	; 0x28
   1b314:	add	r0, r0, #1
   1b318:	str	r0, [r4, r9, lsl #2]
   1b31c:	ldr	r1, [r1, r9, lsl #2]
   1b320:	sdiv	r2, r0, r1
   1b324:	mls	r0, r2, r1, r0
   1b328:	cmp	r0, #0
   1b32c:	bne	1b3ec <ReadCompressedDataSlabN+0x2a20>
   1b330:	mov	r0, #0
   1b334:	mov	r5, sl
   1b338:	add	sl, sl, r9, lsl #2
   1b33c:	str	r0, [r4, r9, lsl #2]
   1b340:	ldr	r0, [sl, #4]
   1b344:	sdiv	r1, r8, r0
   1b348:	mls	r1, r1, r0, r8
   1b34c:	cmp	r1, #0
   1b350:	beq	1b3a0 <ReadCompressedDataSlabN+0x29d4>
   1b354:	ldr	r2, [r5, r9, lsl #2]
   1b358:	ldr	r3, [r6, r9, lsl #2]
   1b35c:	sub	r0, r0, r1
   1b360:	add	r1, sp, #48	; 0x30
   1b364:	mla	r3, r3, r2, r0
   1b368:	ldr	r0, [sp, #44]	; 0x2c
   1b36c:	mov	r2, r7
   1b370:	bl	26a0 <InflateSkipData>
   1b374:	ldr	r0, [sl, #4]
   1b378:	mov	sl, r5
   1b37c:	sdiv	r2, r8, r0
   1b380:	add	r1, r0, r8
   1b384:	mul	r0, r2, r0
   1b388:	ldr	r2, [r6, r9, lsl #2]
   1b38c:	sub	r0, r0, r8
   1b390:	add	r0, r1, r0
   1b394:	ldr	r1, [r5, r9, lsl #2]
   1b398:	mla	r8, r2, r1, r0
   1b39c:	b	1b3d4 <ReadCompressedDataSlabN+0x2a08>
   1b3a0:	ldr	r0, [r6, r9, lsl #2]
   1b3a4:	add	sl, sp, #104	; 0x68
   1b3a8:	cmp	r0, #0
   1b3ac:	beq	1b3d4 <ReadCompressedDataSlabN+0x2a08>
   1b3b0:	ldr	r1, [sl, r9, lsl #2]
   1b3b4:	mov	r2, r7
   1b3b8:	mul	r3, r1, r0
   1b3bc:	ldr	r0, [sp, #44]	; 0x2c
   1b3c0:	add	r1, sp, #48	; 0x30
   1b3c4:	bl	26a0 <InflateSkipData>
   1b3c8:	ldr	r0, [sl, r9, lsl #2]
   1b3cc:	ldr	r1, [r6, r9, lsl #2]
   1b3d0:	mla	r8, r1, r0, r8
   1b3d4:	ldr	r2, [fp, #12]
   1b3d8:	add	r1, r9, #2
   1b3dc:	add	r0, r9, #1
   1b3e0:	cmp	r1, r2
   1b3e4:	blt	1b308 <ReadCompressedDataSlabN+0x293c>
   1b3e8:	b	1b414 <ReadCompressedDataSlabN+0x2a48>
   1b3ec:	ldr	r0, [sp, #20]
   1b3f0:	ldr	r5, [r0, r9, lsl #2]
   1b3f4:	cmp	r5, #0
   1b3f8:	beq	1b414 <ReadCompressedDataSlabN+0x2a48>
   1b3fc:	ldr	r0, [sp, #44]	; 0x2c
   1b400:	add	r1, sp, #48	; 0x30
   1b404:	mov	r2, r7
   1b408:	mov	r3, r5
   1b40c:	bl	26a0 <InflateSkipData>
   1b410:	add	r8, r5, r8
   1b414:	ldr	r0, [fp, #28]
   1b418:	ldr	r1, [sp, #32]
   1b41c:	ldr	r9, [fp, #20]
   1b420:	ldr	r0, [r0]
   1b424:	add	r1, r0, r1
   1b428:	ldr	r0, [sp, #28]
   1b42c:	str	r1, [sp, #32]
   1b430:	cmp	r1, r0
   1b434:	add	r1, sp, #48	; 0x30
   1b438:	blt	1b230 <ReadCompressedDataSlabN+0x2864>
   1b43c:	b	1c8c8 <ReadCompressedDataSlabN+0x3efc>
   1b440:	ldr	r0, [sp, #32]
   1b444:	cmp	r0, #1
   1b448:	blt	1c8c8 <ReadCompressedDataSlabN+0x3efc>
   1b44c:	ldr	r0, [fp, #28]
   1b450:	add	r8, r9, #4
   1b454:	mov	r1, #1
   1b458:	add	sl, sp, #48	; 0x30
   1b45c:	str	r8, [sp, #20]
   1b460:	add	r0, r0, #4
   1b464:	str	r0, [sp, #16]
   1b468:	sub	r0, fp, #112	; 0x70
   1b46c:	orr	r3, r0, #4
   1b470:	sub	r0, fp, #72	; 0x48
   1b474:	orr	r0, r0, #4
   1b478:	str	r3, [sp, #40]	; 0x28
   1b47c:	str	r0, [sp, #8]
   1b480:	ldr	r0, [sp, #36]	; 0x24
   1b484:	add	r0, r0, #8
   1b488:	str	r0, [sp, #12]
   1b48c:	mov	r0, #0
   1b490:	str	r0, [sp, #24]
   1b494:	ldr	r3, [r9]
   1b498:	cmp	r3, #0
   1b49c:	beq	1b4c8 <ReadCompressedDataSlabN+0x2afc>
   1b4a0:	ldr	r5, [sp, #44]	; 0x2c
   1b4a4:	ldr	r6, [fp, #8]
   1b4a8:	mov	r1, sl
   1b4ac:	mov	r0, r5
   1b4b0:	mov	r2, r6
   1b4b4:	bl	26a0 <InflateSkipData>
   1b4b8:	ldr	r0, [r9]
   1b4bc:	mov	r1, #1
   1b4c0:	add	r7, r0, r7
   1b4c4:	b	1b4d0 <ReadCompressedDataSlabN+0x2b04>
   1b4c8:	ldr	r5, [sp, #44]	; 0x2c
   1b4cc:	ldr	r6, [fp, #8]
   1b4d0:	ldr	r0, [fp, #28]
   1b4d4:	str	r7, [sp, #28]
   1b4d8:	ldr	r7, [sp, #24]
   1b4dc:	mov	r3, r6
   1b4e0:	ldr	r4, [r0]
   1b4e4:	ldr	r0, [sp, #36]	; 0x24
   1b4e8:	str	r1, [sp]
   1b4ec:	mov	r1, sl
   1b4f0:	add	r2, r0, r7, lsl #3
   1b4f4:	mov	r0, r5
   1b4f8:	bl	4c7c <ReadCompressedDoubleData>
   1b4fc:	cmp	r4, #2
   1b500:	blt	1b580 <ReadCompressedDataSlabN+0x2bb4>
   1b504:	ldr	r0, [sp, #12]
   1b508:	mov	r8, #0
   1b50c:	add	r6, r0, r7, lsl #3
   1b510:	ldr	r7, [sp, #28]
   1b514:	ldr	r0, [fp, #24]
   1b518:	ldr	r9, [fp, #8]
   1b51c:	ldr	r5, [sp, #44]	; 0x2c
   1b520:	add	r1, sp, #48	; 0x30
   1b524:	mov	sl, r0
   1b528:	ldr	r0, [r0]
   1b52c:	mov	r2, r9
   1b530:	sub	r3, r0, #1
   1b534:	mov	r0, r5
   1b538:	bl	26a0 <InflateSkipData>
   1b53c:	ldr	r0, [fp, #28]
   1b540:	ldr	sl, [sl]
   1b544:	add	r1, sp, #48	; 0x30
   1b548:	mov	r2, r6
   1b54c:	mov	r3, r9
   1b550:	ldr	r4, [r0]
   1b554:	mov	r0, #1
   1b558:	str	r0, [sp]
   1b55c:	mov	r0, r5
   1b560:	bl	4c7c <ReadCompressedDoubleData>
   1b564:	add	r8, r8, #1
   1b568:	sub	r0, r4, #1
   1b56c:	add	r7, sl, r7
   1b570:	add	r6, r6, #8
   1b574:	cmp	r8, r0
   1b578:	blt	1b514 <ReadCompressedDataSlabN+0x2b48>
   1b57c:	b	1b584 <ReadCompressedDataSlabN+0x2bb8>
   1b580:	ldr	r7, [sp, #28]
   1b584:	ldr	r2, [fp, #28]
   1b588:	ldr	r0, [fp, #16]
   1b58c:	ldr	r1, [fp, #24]
   1b590:	ldr	r9, [fp, #20]
   1b594:	ldr	r2, [r2]
   1b598:	ldr	r0, [r0]
   1b59c:	ldr	r1, [r1]
   1b5a0:	sub	r2, r2, #1
   1b5a4:	mls	r0, r2, r1, r0
   1b5a8:	ldr	r1, [r9]
   1b5ac:	ldr	r2, [fp, #8]
   1b5b0:	sub	r4, r0, r1
   1b5b4:	ldr	r0, [sp, #44]	; 0x2c
   1b5b8:	add	r1, sp, #48	; 0x30
   1b5bc:	sub	r3, r4, #1
   1b5c0:	bl	26a0 <InflateSkipData>
   1b5c4:	ldr	r0, [fp, #12]
   1b5c8:	add	r7, r4, r7
   1b5cc:	cmp	r0, #2
   1b5d0:	blt	1b6ec <ReadCompressedDataSlabN+0x2d20>
   1b5d4:	ldr	r8, [sp, #20]
   1b5d8:	ldr	sl, [sp, #16]
   1b5dc:	ldr	r3, [sp, #40]	; 0x28
   1b5e0:	mov	r0, #0
   1b5e4:	add	r5, sp, #104	; 0x68
   1b5e8:	mov	r6, r0
   1b5ec:	ldr	r0, [r3, r0, lsl #2]
   1b5f0:	add	r0, r0, #1
   1b5f4:	str	r0, [r3, r6, lsl #2]
   1b5f8:	ldr	r1, [sl, r6, lsl #2]
   1b5fc:	sdiv	r2, r0, r1
   1b600:	mls	r0, r2, r1, r0
   1b604:	cmp	r0, #0
   1b608:	bne	1b6c4 <ReadCompressedDataSlabN+0x2cf8>
   1b60c:	mov	r0, #0
   1b610:	add	r4, r5, r6, lsl #2
   1b614:	str	r0, [r3, r6, lsl #2]
   1b618:	ldr	r0, [r4, #4]
   1b61c:	sdiv	r1, r7, r0
   1b620:	mls	r1, r1, r0, r7
   1b624:	cmp	r1, #0
   1b628:	beq	1b678 <ReadCompressedDataSlabN+0x2cac>
   1b62c:	ldr	r2, [r5, r6, lsl #2]
   1b630:	ldr	r3, [r8, r6, lsl #2]
   1b634:	sub	r0, r0, r1
   1b638:	add	r1, sp, #48	; 0x30
   1b63c:	mla	r3, r3, r2, r0
   1b640:	ldr	r0, [sp, #44]	; 0x2c
   1b644:	ldr	r2, [fp, #8]
   1b648:	bl	26a0 <InflateSkipData>
   1b64c:	ldr	r0, [r4, #4]
   1b650:	ldr	r3, [sp, #40]	; 0x28
   1b654:	sdiv	r2, r7, r0
   1b658:	add	r1, r0, r7
   1b65c:	mul	r0, r2, r0
   1b660:	ldr	r2, [r8, r6, lsl #2]
   1b664:	sub	r0, r0, r7
   1b668:	add	r0, r1, r0
   1b66c:	ldr	r1, [r5, r6, lsl #2]
   1b670:	mla	r7, r2, r1, r0
   1b674:	b	1b6ac <ReadCompressedDataSlabN+0x2ce0>
   1b678:	ldr	r0, [r8, r6, lsl #2]
   1b67c:	cmp	r0, #0
   1b680:	beq	1b6ac <ReadCompressedDataSlabN+0x2ce0>
   1b684:	ldr	r1, [r5, r6, lsl #2]
   1b688:	ldr	r2, [fp, #8]
   1b68c:	mul	r3, r1, r0
   1b690:	ldr	r0, [sp, #44]	; 0x2c
   1b694:	add	r1, sp, #48	; 0x30
   1b698:	bl	26a0 <InflateSkipData>
   1b69c:	ldr	r0, [r5, r6, lsl #2]
   1b6a0:	ldr	r1, [r8, r6, lsl #2]
   1b6a4:	ldr	r3, [sp, #40]	; 0x28
   1b6a8:	mla	r7, r1, r0, r7
   1b6ac:	ldr	r2, [fp, #12]
   1b6b0:	add	r1, r6, #2
   1b6b4:	add	r0, r6, #1
   1b6b8:	cmp	r1, r2
   1b6bc:	blt	1b5e8 <ReadCompressedDataSlabN+0x2c1c>
   1b6c0:	b	1b6ec <ReadCompressedDataSlabN+0x2d20>
   1b6c4:	ldr	r0, [sp, #8]
   1b6c8:	ldr	r6, [r0, r6, lsl #2]
   1b6cc:	cmp	r6, #0
   1b6d0:	beq	1b6ec <ReadCompressedDataSlabN+0x2d20>
   1b6d4:	ldr	r0, [sp, #44]	; 0x2c
   1b6d8:	ldr	r2, [fp, #8]
   1b6dc:	add	r1, sp, #48	; 0x30
   1b6e0:	mov	r3, r6
   1b6e4:	bl	26a0 <InflateSkipData>
   1b6e8:	add	r7, r6, r7
   1b6ec:	ldr	r0, [fp, #28]
   1b6f0:	ldr	r1, [sp, #24]
   1b6f4:	add	sl, sp, #48	; 0x30
   1b6f8:	ldr	r0, [r0]
   1b6fc:	add	r1, r0, r1
   1b700:	ldr	r0, [sp, #32]
   1b704:	str	r1, [sp, #24]
   1b708:	cmp	r1, r0
   1b70c:	mov	r1, #1
   1b710:	blt	1b494 <ReadCompressedDataSlabN+0x2ac8>
   1b714:	b	1c8c8 <ReadCompressedDataSlabN+0x3efc>
   1b718:	ldr	r0, [sp, #28]
   1b71c:	cmp	r0, #1
   1b720:	blt	1c8c8 <ReadCompressedDataSlabN+0x3efc>
   1b724:	ldr	r0, [fp, #28]
   1b728:	add	r5, r9, #4
   1b72c:	mov	r2, #0
   1b730:	add	r1, sp, #48	; 0x30
   1b734:	str	r2, [sp, #20]
   1b738:	str	r5, [sp, #16]
   1b73c:	add	r0, r0, #4
   1b740:	str	r0, [sp, #40]	; 0x28
   1b744:	sub	r0, fp, #112	; 0x70
   1b748:	orr	r3, r0, #4
   1b74c:	sub	r0, fp, #72	; 0x48
   1b750:	orr	r0, r0, #4
   1b754:	str	r3, [sp, #32]
   1b758:	str	r0, [sp, #8]
   1b75c:	ldr	r0, [sp, #36]	; 0x24
   1b760:	add	r0, r0, #4
   1b764:	str	r0, [sp, #12]
   1b768:	mov	r0, #1
   1b76c:	ldr	r3, [r9]
   1b770:	cmp	r3, #0
   1b774:	beq	1b7a4 <ReadCompressedDataSlabN+0x2dd8>
   1b778:	ldr	r4, [sp, #44]	; 0x2c
   1b77c:	ldr	r6, [fp, #8]
   1b780:	mov	sl, r1
   1b784:	mov	r0, r4
   1b788:	mov	r2, r6
   1b78c:	bl	26a0 <InflateSkipData>
   1b790:	ldr	r0, [r9]
   1b794:	ldr	r7, [fp, #28]
   1b798:	add	r8, r0, r8
   1b79c:	mov	r0, #1
   1b7a0:	b	1b7b4 <ReadCompressedDataSlabN+0x2de8>
   1b7a4:	ldr	r4, [sp, #44]	; 0x2c
   1b7a8:	ldr	r7, [fp, #28]
   1b7ac:	ldr	r6, [fp, #8]
   1b7b0:	mov	sl, r1
   1b7b4:	str	r8, [sp, #24]
   1b7b8:	ldr	r8, [r7]
   1b7bc:	str	r0, [sp]
   1b7c0:	ldr	r0, [sp, #36]	; 0x24
   1b7c4:	ldr	r5, [sp, #20]
   1b7c8:	mov	r1, sl
   1b7cc:	mov	r3, r6
   1b7d0:	mov	r9, r4
   1b7d4:	add	r2, r0, r5, lsl #2
   1b7d8:	mov	r0, r4
   1b7dc:	bl	7620 <ReadCompressedSingleData>
   1b7e0:	cmp	r8, #2
   1b7e4:	blt	1b868 <ReadCompressedDataSlabN+0x2e9c>
   1b7e8:	ldr	r0, [sp, #12]
   1b7ec:	ldr	r8, [sp, #24]
   1b7f0:	mov	r4, #0
   1b7f4:	add	r6, r0, r5, lsl #2
   1b7f8:	mov	r5, r9
   1b7fc:	ldr	r0, [fp, #24]
   1b800:	add	r1, sp, #48	; 0x30
   1b804:	mov	r9, r0
   1b808:	ldr	r0, [r0]
   1b80c:	sub	r3, r0, #1
   1b810:	mov	r0, r5
   1b814:	ldr	r5, [fp, #8]
   1b818:	mov	r2, r5
   1b81c:	bl	26a0 <InflateSkipData>
   1b820:	mov	r0, #1
   1b824:	ldr	sl, [r7]
   1b828:	ldr	r9, [r9]
   1b82c:	add	r1, sp, #48	; 0x30
   1b830:	mov	r2, r6
   1b834:	mov	r3, r5
   1b838:	str	r0, [sp]
   1b83c:	ldr	r0, [sp, #44]	; 0x2c
   1b840:	bl	7620 <ReadCompressedSingleData>
   1b844:	ldr	r7, [fp, #28]
   1b848:	ldr	r5, [sp, #44]	; 0x2c
   1b84c:	add	r4, r4, #1
   1b850:	sub	r0, sl, #1
   1b854:	add	r8, r9, r8
   1b858:	add	r6, r6, #4
   1b85c:	cmp	r4, r0
   1b860:	blt	1b7fc <ReadCompressedDataSlabN+0x2e30>
   1b864:	b	1b870 <ReadCompressedDataSlabN+0x2ea4>
   1b868:	ldr	r8, [sp, #24]
   1b86c:	mov	r5, r9
   1b870:	ldr	r0, [fp, #16]
   1b874:	ldr	r1, [fp, #24]
   1b878:	ldr	r2, [r7]
   1b87c:	ldr	r7, [fp, #8]
   1b880:	ldr	r0, [r0]
   1b884:	ldr	r1, [r1]
   1b888:	sub	r2, r2, #1
   1b88c:	mls	r0, r2, r1, r0
   1b890:	ldr	r1, [fp, #20]
   1b894:	mov	r2, r7
   1b898:	ldr	r1, [r1]
   1b89c:	sub	r4, r0, r1
   1b8a0:	mov	r0, r5
   1b8a4:	add	r1, sp, #48	; 0x30
   1b8a8:	sub	r3, r4, #1
   1b8ac:	bl	26a0 <InflateSkipData>
   1b8b0:	ldr	r0, [fp, #12]
   1b8b4:	add	r8, r4, r8
   1b8b8:	cmp	r0, #2
   1b8bc:	blt	1b9dc <ReadCompressedDataSlabN+0x3010>
   1b8c0:	mov	sl, r5
   1b8c4:	ldr	r5, [sp, #16]
   1b8c8:	ldr	r3, [sp, #32]
   1b8cc:	mov	r0, #0
   1b8d0:	add	r9, sp, #104	; 0x68
   1b8d4:	mov	r6, r0
   1b8d8:	ldr	r0, [r3, r0, lsl #2]
   1b8dc:	ldr	r1, [sp, #40]	; 0x28
   1b8e0:	add	r0, r0, #1
   1b8e4:	str	r0, [r3, r6, lsl #2]
   1b8e8:	ldr	r1, [r1, r6, lsl #2]
   1b8ec:	sdiv	r2, r0, r1
   1b8f0:	mls	r0, r2, r1, r0
   1b8f4:	cmp	r0, #0
   1b8f8:	bne	1b9b4 <ReadCompressedDataSlabN+0x2fe8>
   1b8fc:	mov	r0, #0
   1b900:	add	r4, r9, r6, lsl #2
   1b904:	str	r0, [r3, r6, lsl #2]
   1b908:	ldr	r0, [r4, #4]
   1b90c:	sdiv	r1, r8, r0
   1b910:	mls	r1, r1, r0, r8
   1b914:	cmp	r1, #0
   1b918:	beq	1b968 <ReadCompressedDataSlabN+0x2f9c>
   1b91c:	ldr	r2, [r9, r6, lsl #2]
   1b920:	ldr	r3, [r5, r6, lsl #2]
   1b924:	sub	r0, r0, r1
   1b928:	add	r1, sp, #48	; 0x30
   1b92c:	mla	r3, r3, r2, r0
   1b930:	mov	r0, sl
   1b934:	mov	r2, r7
   1b938:	bl	26a0 <InflateSkipData>
   1b93c:	ldr	r0, [r4, #4]
   1b940:	ldr	r3, [sp, #32]
   1b944:	sdiv	r2, r8, r0
   1b948:	add	r1, r0, r8
   1b94c:	mul	r0, r2, r0
   1b950:	ldr	r2, [r5, r6, lsl #2]
   1b954:	sub	r0, r0, r8
   1b958:	add	r0, r1, r0
   1b95c:	ldr	r1, [r9, r6, lsl #2]
   1b960:	mla	r8, r2, r1, r0
   1b964:	b	1b99c <ReadCompressedDataSlabN+0x2fd0>
   1b968:	ldr	r0, [r5, r6, lsl #2]
   1b96c:	cmp	r0, #0
   1b970:	beq	1b99c <ReadCompressedDataSlabN+0x2fd0>
   1b974:	ldr	r1, [r9, r6, lsl #2]
   1b978:	mov	r2, r7
   1b97c:	mul	r3, r1, r0
   1b980:	mov	r0, sl
   1b984:	add	r1, sp, #48	; 0x30
   1b988:	bl	26a0 <InflateSkipData>
   1b98c:	ldr	r0, [r9, r6, lsl #2]
   1b990:	ldr	r1, [r5, r6, lsl #2]
   1b994:	ldr	r3, [sp, #32]
   1b998:	mla	r8, r1, r0, r8
   1b99c:	ldr	r2, [fp, #12]
   1b9a0:	add	r1, r6, #2
   1b9a4:	add	r0, r6, #1
   1b9a8:	cmp	r1, r2
   1b9ac:	blt	1b8d4 <ReadCompressedDataSlabN+0x2f08>
   1b9b0:	b	1b9dc <ReadCompressedDataSlabN+0x3010>
   1b9b4:	ldr	r0, [sp, #8]
   1b9b8:	ldr	r6, [r0, r6, lsl #2]
   1b9bc:	cmp	r6, #0
   1b9c0:	beq	1b9dc <ReadCompressedDataSlabN+0x3010>
   1b9c4:	mov	r0, sl
   1b9c8:	add	r1, sp, #48	; 0x30
   1b9cc:	mov	r2, r7
   1b9d0:	mov	r3, r6
   1b9d4:	bl	26a0 <InflateSkipData>
   1b9d8:	add	r8, r6, r8
   1b9dc:	ldr	r0, [fp, #28]
   1b9e0:	ldr	r1, [sp, #20]
   1b9e4:	ldr	r9, [fp, #20]
   1b9e8:	ldr	r0, [r0]
   1b9ec:	add	r1, r0, r1
   1b9f0:	ldr	r0, [sp, #28]
   1b9f4:	str	r1, [sp, #20]
   1b9f8:	cmp	r1, r0
   1b9fc:	mov	r0, #1
   1ba00:	add	r1, sp, #48	; 0x30
   1ba04:	blt	1b76c <ReadCompressedDataSlabN+0x2da0>
   1ba08:	b	1c8c8 <ReadCompressedDataSlabN+0x3efc>
   1ba0c:	ldr	r0, [sp, #28]
   1ba10:	cmp	r0, #1
   1ba14:	blt	1c8c8 <ReadCompressedDataSlabN+0x3efc>
   1ba18:	ldr	r0, [fp, #28]
   1ba1c:	add	r5, r9, #4
   1ba20:	mov	r2, #0
   1ba24:	add	r1, sp, #48	; 0x30
   1ba28:	str	r2, [sp, #20]
   1ba2c:	str	r5, [sp, #16]
   1ba30:	add	r0, r0, #4
   1ba34:	str	r0, [sp, #40]	; 0x28
   1ba38:	sub	r0, fp, #112	; 0x70
   1ba3c:	orr	r3, r0, #4
   1ba40:	sub	r0, fp, #72	; 0x48
   1ba44:	orr	r0, r0, #4
   1ba48:	str	r3, [sp, #32]
   1ba4c:	str	r0, [sp, #8]
   1ba50:	ldr	r0, [sp, #36]	; 0x24
   1ba54:	add	r0, r0, #2
   1ba58:	str	r0, [sp, #12]
   1ba5c:	mov	r0, #1
   1ba60:	ldr	r3, [r9]
   1ba64:	cmp	r3, #0
   1ba68:	beq	1ba98 <ReadCompressedDataSlabN+0x30cc>
   1ba6c:	ldr	r4, [sp, #44]	; 0x2c
   1ba70:	ldr	r6, [fp, #8]
   1ba74:	mov	sl, r1
   1ba78:	mov	r0, r4
   1ba7c:	mov	r2, r6
   1ba80:	bl	26a0 <InflateSkipData>
   1ba84:	ldr	r0, [r9]
   1ba88:	ldr	r7, [fp, #28]
   1ba8c:	add	r8, r0, r8
   1ba90:	mov	r0, #1
   1ba94:	b	1baa8 <ReadCompressedDataSlabN+0x30dc>
   1ba98:	ldr	r4, [sp, #44]	; 0x2c
   1ba9c:	ldr	r7, [fp, #28]
   1baa0:	ldr	r6, [fp, #8]
   1baa4:	mov	sl, r1
   1baa8:	str	r8, [sp, #24]
   1baac:	ldr	r8, [r7]
   1bab0:	str	r0, [sp]
   1bab4:	ldr	r0, [sp, #36]	; 0x24
   1bab8:	ldr	r5, [sp, #20]
   1babc:	mov	r1, sl
   1bac0:	mov	r3, r6
   1bac4:	mov	r9, r4
   1bac8:	add	r2, r0, r5, lsl #1
   1bacc:	mov	r0, r4
   1bad0:	bl	fda4 <ReadCompressedInt16Data>
   1bad4:	cmp	r8, #2
   1bad8:	blt	1bb5c <ReadCompressedDataSlabN+0x3190>
   1badc:	ldr	r0, [sp, #12]
   1bae0:	ldr	r8, [sp, #24]
   1bae4:	mov	r4, #0
   1bae8:	add	r6, r0, r5, lsl #1
   1baec:	mov	r5, r9
   1baf0:	ldr	r0, [fp, #24]
   1baf4:	add	r1, sp, #48	; 0x30
   1baf8:	mov	r9, r0
   1bafc:	ldr	r0, [r0]
   1bb00:	sub	r3, r0, #1
   1bb04:	mov	r0, r5
   1bb08:	ldr	r5, [fp, #8]
   1bb0c:	mov	r2, r5
   1bb10:	bl	26a0 <InflateSkipData>
   1bb14:	mov	r0, #1
   1bb18:	ldr	sl, [r7]
   1bb1c:	ldr	r9, [r9]
   1bb20:	add	r1, sp, #48	; 0x30
   1bb24:	mov	r2, r6
   1bb28:	mov	r3, r5
   1bb2c:	str	r0, [sp]
   1bb30:	ldr	r0, [sp, #44]	; 0x2c
   1bb34:	bl	fda4 <ReadCompressedInt16Data>
   1bb38:	ldr	r7, [fp, #28]
   1bb3c:	ldr	r5, [sp, #44]	; 0x2c
   1bb40:	add	r4, r4, #1
   1bb44:	sub	r0, sl, #1
   1bb48:	add	r8, r9, r8
   1bb4c:	add	r6, r6, #2
   1bb50:	cmp	r4, r0
   1bb54:	blt	1baf0 <ReadCompressedDataSlabN+0x3124>
   1bb58:	b	1bb64 <ReadCompressedDataSlabN+0x3198>
   1bb5c:	ldr	r8, [sp, #24]
   1bb60:	mov	r5, r9
   1bb64:	ldr	r0, [fp, #16]
   1bb68:	ldr	r1, [fp, #24]
   1bb6c:	ldr	r2, [r7]
   1bb70:	ldr	r7, [fp, #8]
   1bb74:	ldr	r0, [r0]
   1bb78:	ldr	r1, [r1]
   1bb7c:	sub	r2, r2, #1
   1bb80:	mls	r0, r2, r1, r0
   1bb84:	ldr	r1, [fp, #20]
   1bb88:	mov	r2, r7
   1bb8c:	ldr	r1, [r1]
   1bb90:	sub	r4, r0, r1
   1bb94:	mov	r0, r5
   1bb98:	add	r1, sp, #48	; 0x30
   1bb9c:	sub	r3, r4, #1
   1bba0:	bl	26a0 <InflateSkipData>
   1bba4:	ldr	r0, [fp, #12]
   1bba8:	add	r8, r4, r8
   1bbac:	cmp	r0, #2
   1bbb0:	blt	1bcd0 <ReadCompressedDataSlabN+0x3304>
   1bbb4:	mov	sl, r5
   1bbb8:	ldr	r5, [sp, #16]
   1bbbc:	ldr	r3, [sp, #32]
   1bbc0:	mov	r0, #0
   1bbc4:	add	r9, sp, #104	; 0x68
   1bbc8:	mov	r6, r0
   1bbcc:	ldr	r0, [r3, r0, lsl #2]
   1bbd0:	ldr	r1, [sp, #40]	; 0x28
   1bbd4:	add	r0, r0, #1
   1bbd8:	str	r0, [r3, r6, lsl #2]
   1bbdc:	ldr	r1, [r1, r6, lsl #2]
   1bbe0:	sdiv	r2, r0, r1
   1bbe4:	mls	r0, r2, r1, r0
   1bbe8:	cmp	r0, #0
   1bbec:	bne	1bca8 <ReadCompressedDataSlabN+0x32dc>
   1bbf0:	mov	r0, #0
   1bbf4:	add	r4, r9, r6, lsl #2
   1bbf8:	str	r0, [r3, r6, lsl #2]
   1bbfc:	ldr	r0, [r4, #4]
   1bc00:	sdiv	r1, r8, r0
   1bc04:	mls	r1, r1, r0, r8
   1bc08:	cmp	r1, #0
   1bc0c:	beq	1bc5c <ReadCompressedDataSlabN+0x3290>
   1bc10:	ldr	r2, [r9, r6, lsl #2]
   1bc14:	ldr	r3, [r5, r6, lsl #2]
   1bc18:	sub	r0, r0, r1
   1bc1c:	add	r1, sp, #48	; 0x30
   1bc20:	mla	r3, r3, r2, r0
   1bc24:	mov	r0, sl
   1bc28:	mov	r2, r7
   1bc2c:	bl	26a0 <InflateSkipData>
   1bc30:	ldr	r0, [r4, #4]
   1bc34:	ldr	r3, [sp, #32]
   1bc38:	sdiv	r2, r8, r0
   1bc3c:	add	r1, r0, r8
   1bc40:	mul	r0, r2, r0
   1bc44:	ldr	r2, [r5, r6, lsl #2]
   1bc48:	sub	r0, r0, r8
   1bc4c:	add	r0, r1, r0
   1bc50:	ldr	r1, [r9, r6, lsl #2]
   1bc54:	mla	r8, r2, r1, r0
   1bc58:	b	1bc90 <ReadCompressedDataSlabN+0x32c4>
   1bc5c:	ldr	r0, [r5, r6, lsl #2]
   1bc60:	cmp	r0, #0
   1bc64:	beq	1bc90 <ReadCompressedDataSlabN+0x32c4>
   1bc68:	ldr	r1, [r9, r6, lsl #2]
   1bc6c:	mov	r2, r7
   1bc70:	mul	r3, r1, r0
   1bc74:	mov	r0, sl
   1bc78:	add	r1, sp, #48	; 0x30
   1bc7c:	bl	26a0 <InflateSkipData>
   1bc80:	ldr	r0, [r9, r6, lsl #2]
   1bc84:	ldr	r1, [r5, r6, lsl #2]
   1bc88:	ldr	r3, [sp, #32]
   1bc8c:	mla	r8, r1, r0, r8
   1bc90:	ldr	r2, [fp, #12]
   1bc94:	add	r1, r6, #2
   1bc98:	add	r0, r6, #1
   1bc9c:	cmp	r1, r2
   1bca0:	blt	1bbc8 <ReadCompressedDataSlabN+0x31fc>
   1bca4:	b	1bcd0 <ReadCompressedDataSlabN+0x3304>
   1bca8:	ldr	r0, [sp, #8]
   1bcac:	ldr	r6, [r0, r6, lsl #2]
   1bcb0:	cmp	r6, #0
   1bcb4:	beq	1bcd0 <ReadCompressedDataSlabN+0x3304>
   1bcb8:	mov	r0, sl
   1bcbc:	add	r1, sp, #48	; 0x30
   1bcc0:	mov	r2, r7
   1bcc4:	mov	r3, r6
   1bcc8:	bl	26a0 <InflateSkipData>
   1bccc:	add	r8, r6, r8
   1bcd0:	ldr	r0, [fp, #28]
   1bcd4:	ldr	r1, [sp, #20]
   1bcd8:	ldr	r9, [fp, #20]
   1bcdc:	ldr	r0, [r0]
   1bce0:	add	r1, r0, r1
   1bce4:	ldr	r0, [sp, #28]
   1bce8:	str	r1, [sp, #20]
   1bcec:	cmp	r1, r0
   1bcf0:	mov	r0, #1
   1bcf4:	add	r1, sp, #48	; 0x30
   1bcf8:	blt	1ba60 <ReadCompressedDataSlabN+0x3094>
   1bcfc:	b	1c8c8 <ReadCompressedDataSlabN+0x3efc>
   1bd00:	ldr	r0, [sp, #28]
   1bd04:	cmp	r0, #1
   1bd08:	blt	1c8c8 <ReadCompressedDataSlabN+0x3efc>
   1bd0c:	ldr	r0, [fp, #28]
   1bd10:	add	r5, r9, #4
   1bd14:	mov	r2, #0
   1bd18:	add	r1, sp, #48	; 0x30
   1bd1c:	str	r2, [sp, #20]
   1bd20:	str	r5, [sp, #16]
   1bd24:	add	r0, r0, #4
   1bd28:	str	r0, [sp, #40]	; 0x28
   1bd2c:	sub	r0, fp, #112	; 0x70
   1bd30:	orr	r3, r0, #4
   1bd34:	sub	r0, fp, #72	; 0x48
   1bd38:	orr	r0, r0, #4
   1bd3c:	str	r3, [sp, #32]
   1bd40:	str	r0, [sp, #8]
   1bd44:	ldr	r0, [sp, #36]	; 0x24
   1bd48:	add	r0, r0, #4
   1bd4c:	str	r0, [sp, #12]
   1bd50:	mov	r0, #1
   1bd54:	ldr	r3, [r9]
   1bd58:	cmp	r3, #0
   1bd5c:	beq	1bd8c <ReadCompressedDataSlabN+0x33c0>
   1bd60:	ldr	r4, [sp, #44]	; 0x2c
   1bd64:	ldr	r6, [fp, #8]
   1bd68:	mov	sl, r1
   1bd6c:	mov	r0, r4
   1bd70:	mov	r2, r6
   1bd74:	bl	26a0 <InflateSkipData>
   1bd78:	ldr	r0, [r9]
   1bd7c:	ldr	r7, [fp, #28]
   1bd80:	add	r8, r0, r8
   1bd84:	mov	r0, #1
   1bd88:	b	1bd9c <ReadCompressedDataSlabN+0x33d0>
   1bd8c:	ldr	r4, [sp, #44]	; 0x2c
   1bd90:	ldr	r7, [fp, #28]
   1bd94:	ldr	r6, [fp, #8]
   1bd98:	mov	sl, r1
   1bd9c:	str	r8, [sp, #24]
   1bda0:	ldr	r8, [r7]
   1bda4:	str	r0, [sp]
   1bda8:	ldr	r0, [sp, #36]	; 0x24
   1bdac:	ldr	r5, [sp, #20]
   1bdb0:	mov	r1, sl
   1bdb4:	mov	r3, r6
   1bdb8:	mov	r9, r4
   1bdbc:	add	r2, r0, r5, lsl #2
   1bdc0:	mov	r0, r4
   1bdc4:	bl	c964 <ReadCompressedInt32Data>
   1bdc8:	cmp	r8, #2
   1bdcc:	blt	1be50 <ReadCompressedDataSlabN+0x3484>
   1bdd0:	ldr	r0, [sp, #12]
   1bdd4:	ldr	r8, [sp, #24]
   1bdd8:	mov	r4, #0
   1bddc:	add	r6, r0, r5, lsl #2
   1bde0:	mov	r5, r9
   1bde4:	ldr	r0, [fp, #24]
   1bde8:	add	r1, sp, #48	; 0x30
   1bdec:	mov	r9, r0
   1bdf0:	ldr	r0, [r0]
   1bdf4:	sub	r3, r0, #1
   1bdf8:	mov	r0, r5
   1bdfc:	ldr	r5, [fp, #8]
   1be00:	mov	r2, r5
   1be04:	bl	26a0 <InflateSkipData>
   1be08:	mov	r0, #1
   1be0c:	ldr	sl, [r7]
   1be10:	ldr	r9, [r9]
   1be14:	add	r1, sp, #48	; 0x30
   1be18:	mov	r2, r6
   1be1c:	mov	r3, r5
   1be20:	str	r0, [sp]
   1be24:	ldr	r0, [sp, #44]	; 0x2c
   1be28:	bl	c964 <ReadCompressedInt32Data>
   1be2c:	ldr	r7, [fp, #28]
   1be30:	ldr	r5, [sp, #44]	; 0x2c
   1be34:	add	r4, r4, #1
   1be38:	sub	r0, sl, #1
   1be3c:	add	r8, r9, r8
   1be40:	add	r6, r6, #4
   1be44:	cmp	r4, r0
   1be48:	blt	1bde4 <ReadCompressedDataSlabN+0x3418>
   1be4c:	b	1be58 <ReadCompressedDataSlabN+0x348c>
   1be50:	ldr	r8, [sp, #24]
   1be54:	mov	r5, r9
   1be58:	ldr	r0, [fp, #16]
   1be5c:	ldr	r1, [fp, #24]
   1be60:	ldr	r2, [r7]
   1be64:	ldr	r7, [fp, #8]
   1be68:	ldr	r0, [r0]
   1be6c:	ldr	r1, [r1]
   1be70:	sub	r2, r2, #1
   1be74:	mls	r0, r2, r1, r0
   1be78:	ldr	r1, [fp, #20]
   1be7c:	mov	r2, r7
   1be80:	ldr	r1, [r1]
   1be84:	sub	r4, r0, r1
   1be88:	mov	r0, r5
   1be8c:	add	r1, sp, #48	; 0x30
   1be90:	sub	r3, r4, #1
   1be94:	bl	26a0 <InflateSkipData>
   1be98:	ldr	r0, [fp, #12]
   1be9c:	add	r8, r4, r8
   1bea0:	cmp	r0, #2
   1bea4:	blt	1bfc4 <ReadCompressedDataSlabN+0x35f8>
   1bea8:	mov	sl, r5
   1beac:	ldr	r5, [sp, #16]
   1beb0:	ldr	r3, [sp, #32]
   1beb4:	mov	r0, #0
   1beb8:	add	r9, sp, #104	; 0x68
   1bebc:	mov	r6, r0
   1bec0:	ldr	r0, [r3, r0, lsl #2]
   1bec4:	ldr	r1, [sp, #40]	; 0x28
   1bec8:	add	r0, r0, #1
   1becc:	str	r0, [r3, r6, lsl #2]
   1bed0:	ldr	r1, [r1, r6, lsl #2]
   1bed4:	sdiv	r2, r0, r1
   1bed8:	mls	r0, r2, r1, r0
   1bedc:	cmp	r0, #0
   1bee0:	bne	1bf9c <ReadCompressedDataSlabN+0x35d0>
   1bee4:	mov	r0, #0
   1bee8:	add	r4, r9, r6, lsl #2
   1beec:	str	r0, [r3, r6, lsl #2]
   1bef0:	ldr	r0, [r4, #4]
   1bef4:	sdiv	r1, r8, r0
   1bef8:	mls	r1, r1, r0, r8
   1befc:	cmp	r1, #0
   1bf00:	beq	1bf50 <ReadCompressedDataSlabN+0x3584>
   1bf04:	ldr	r2, [r9, r6, lsl #2]
   1bf08:	ldr	r3, [r5, r6, lsl #2]
   1bf0c:	sub	r0, r0, r1
   1bf10:	add	r1, sp, #48	; 0x30
   1bf14:	mla	r3, r3, r2, r0
   1bf18:	mov	r0, sl
   1bf1c:	mov	r2, r7
   1bf20:	bl	26a0 <InflateSkipData>
   1bf24:	ldr	r0, [r4, #4]
   1bf28:	ldr	r3, [sp, #32]
   1bf2c:	sdiv	r2, r8, r0
   1bf30:	add	r1, r0, r8
   1bf34:	mul	r0, r2, r0
   1bf38:	ldr	r2, [r5, r6, lsl #2]
   1bf3c:	sub	r0, r0, r8
   1bf40:	add	r0, r1, r0
   1bf44:	ldr	r1, [r9, r6, lsl #2]
   1bf48:	mla	r8, r2, r1, r0
   1bf4c:	b	1bf84 <ReadCompressedDataSlabN+0x35b8>
   1bf50:	ldr	r0, [r5, r6, lsl #2]
   1bf54:	cmp	r0, #0
   1bf58:	beq	1bf84 <ReadCompressedDataSlabN+0x35b8>
   1bf5c:	ldr	r1, [r9, r6, lsl #2]
   1bf60:	mov	r2, r7
   1bf64:	mul	r3, r1, r0
   1bf68:	mov	r0, sl
   1bf6c:	add	r1, sp, #48	; 0x30
   1bf70:	bl	26a0 <InflateSkipData>
   1bf74:	ldr	r0, [r9, r6, lsl #2]
   1bf78:	ldr	r1, [r5, r6, lsl #2]
   1bf7c:	ldr	r3, [sp, #32]
   1bf80:	mla	r8, r1, r0, r8
   1bf84:	ldr	r2, [fp, #12]
   1bf88:	add	r1, r6, #2
   1bf8c:	add	r0, r6, #1
   1bf90:	cmp	r1, r2
   1bf94:	blt	1bebc <ReadCompressedDataSlabN+0x34f0>
   1bf98:	b	1bfc4 <ReadCompressedDataSlabN+0x35f8>
   1bf9c:	ldr	r0, [sp, #8]
   1bfa0:	ldr	r6, [r0, r6, lsl #2]
   1bfa4:	cmp	r6, #0
   1bfa8:	beq	1bfc4 <ReadCompressedDataSlabN+0x35f8>
   1bfac:	mov	r0, sl
   1bfb0:	add	r1, sp, #48	; 0x30
   1bfb4:	mov	r2, r7
   1bfb8:	mov	r3, r6
   1bfbc:	bl	26a0 <InflateSkipData>
   1bfc0:	add	r8, r6, r8
   1bfc4:	ldr	r0, [fp, #28]
   1bfc8:	ldr	r1, [sp, #20]
   1bfcc:	ldr	r9, [fp, #20]
   1bfd0:	ldr	r0, [r0]
   1bfd4:	add	r1, r0, r1
   1bfd8:	ldr	r0, [sp, #28]
   1bfdc:	str	r1, [sp, #20]
   1bfe0:	cmp	r1, r0
   1bfe4:	mov	r0, #1
   1bfe8:	add	r1, sp, #48	; 0x30
   1bfec:	blt	1bd54 <ReadCompressedDataSlabN+0x3388>
   1bff0:	b	1c8c8 <ReadCompressedDataSlabN+0x3efc>
   1bff4:	ldr	r0, [sp, #28]
   1bff8:	cmp	r0, #1
   1bffc:	blt	1c8c8 <ReadCompressedDataSlabN+0x3efc>
   1c000:	ldr	r0, [fp, #28]
   1c004:	add	r5, r9, #4
   1c008:	mov	r2, #0
   1c00c:	add	r1, sp, #48	; 0x30
   1c010:	str	r2, [sp, #20]
   1c014:	str	r5, [sp, #16]
   1c018:	add	r0, r0, #4
   1c01c:	str	r0, [sp, #40]	; 0x28
   1c020:	sub	r0, fp, #112	; 0x70
   1c024:	orr	r3, r0, #4
   1c028:	sub	r0, fp, #72	; 0x48
   1c02c:	orr	r0, r0, #4
   1c030:	str	r3, [sp, #32]
   1c034:	str	r0, [sp, #8]
   1c038:	ldr	r0, [sp, #36]	; 0x24
   1c03c:	add	r0, r0, #4
   1c040:	str	r0, [sp, #12]
   1c044:	mov	r0, #1
   1c048:	ldr	r3, [r9]
   1c04c:	cmp	r3, #0
   1c050:	beq	1c080 <ReadCompressedDataSlabN+0x36b4>
   1c054:	ldr	r4, [sp, #44]	; 0x2c
   1c058:	ldr	r6, [fp, #8]
   1c05c:	mov	sl, r1
   1c060:	mov	r0, r4
   1c064:	mov	r2, r6
   1c068:	bl	26a0 <InflateSkipData>
   1c06c:	ldr	r0, [r9]
   1c070:	ldr	r7, [fp, #28]
   1c074:	add	r8, r0, r8
   1c078:	mov	r0, #1
   1c07c:	b	1c090 <ReadCompressedDataSlabN+0x36c4>
   1c080:	ldr	r4, [sp, #44]	; 0x2c
   1c084:	ldr	r7, [fp, #28]
   1c088:	ldr	r6, [fp, #8]
   1c08c:	mov	sl, r1
   1c090:	str	r8, [sp, #24]
   1c094:	ldr	r8, [r7]
   1c098:	str	r0, [sp]
   1c09c:	ldr	r0, [sp, #36]	; 0x24
   1c0a0:	ldr	r5, [sp, #20]
   1c0a4:	mov	r1, sl
   1c0a8:	mov	r3, r6
   1c0ac:	mov	r9, r4
   1c0b0:	add	r2, r0, r5, lsl #2
   1c0b4:	mov	r0, r4
   1c0b8:	bl	e384 <ReadCompressedUInt32Data>
   1c0bc:	cmp	r8, #2
   1c0c0:	blt	1c144 <ReadCompressedDataSlabN+0x3778>
   1c0c4:	ldr	r0, [sp, #12]
   1c0c8:	ldr	r8, [sp, #24]
   1c0cc:	mov	r4, #0
   1c0d0:	add	r6, r0, r5, lsl #2
   1c0d4:	mov	r5, r9
   1c0d8:	ldr	r0, [fp, #24]
   1c0dc:	add	r1, sp, #48	; 0x30
   1c0e0:	mov	r9, r0
   1c0e4:	ldr	r0, [r0]
   1c0e8:	sub	r3, r0, #1
   1c0ec:	mov	r0, r5
   1c0f0:	ldr	r5, [fp, #8]
   1c0f4:	mov	r2, r5
   1c0f8:	bl	26a0 <InflateSkipData>
   1c0fc:	mov	r0, #1
   1c100:	ldr	sl, [r7]
   1c104:	ldr	r9, [r9]
   1c108:	add	r1, sp, #48	; 0x30
   1c10c:	mov	r2, r6
   1c110:	mov	r3, r5
   1c114:	str	r0, [sp]
   1c118:	ldr	r0, [sp, #44]	; 0x2c
   1c11c:	bl	e384 <ReadCompressedUInt32Data>
   1c120:	ldr	r7, [fp, #28]
   1c124:	ldr	r5, [sp, #44]	; 0x2c
   1c128:	add	r4, r4, #1
   1c12c:	sub	r0, sl, #1
   1c130:	add	r8, r9, r8
   1c134:	add	r6, r6, #4
   1c138:	cmp	r4, r0
   1c13c:	blt	1c0d8 <ReadCompressedDataSlabN+0x370c>
   1c140:	b	1c14c <ReadCompressedDataSlabN+0x3780>
   1c144:	ldr	r8, [sp, #24]
   1c148:	mov	r5, r9
   1c14c:	ldr	r0, [fp, #16]
   1c150:	ldr	r1, [fp, #24]
   1c154:	ldr	r2, [r7]
   1c158:	ldr	r7, [fp, #8]
   1c15c:	ldr	r0, [r0]
   1c160:	ldr	r1, [r1]
   1c164:	sub	r2, r2, #1
   1c168:	mls	r0, r2, r1, r0
   1c16c:	ldr	r1, [fp, #20]
   1c170:	mov	r2, r7
   1c174:	ldr	r1, [r1]
   1c178:	sub	r4, r0, r1
   1c17c:	mov	r0, r5
   1c180:	add	r1, sp, #48	; 0x30
   1c184:	sub	r3, r4, #1
   1c188:	bl	26a0 <InflateSkipData>
   1c18c:	ldr	r0, [fp, #12]
   1c190:	add	r8, r4, r8
   1c194:	cmp	r0, #2
   1c198:	blt	1c2b8 <ReadCompressedDataSlabN+0x38ec>
   1c19c:	mov	sl, r5
   1c1a0:	ldr	r5, [sp, #16]
   1c1a4:	ldr	r3, [sp, #32]
   1c1a8:	mov	r0, #0
   1c1ac:	add	r9, sp, #104	; 0x68
   1c1b0:	mov	r6, r0
   1c1b4:	ldr	r0, [r3, r0, lsl #2]
   1c1b8:	ldr	r1, [sp, #40]	; 0x28
   1c1bc:	add	r0, r0, #1
   1c1c0:	str	r0, [r3, r6, lsl #2]
   1c1c4:	ldr	r1, [r1, r6, lsl #2]
   1c1c8:	sdiv	r2, r0, r1
   1c1cc:	mls	r0, r2, r1, r0
   1c1d0:	cmp	r0, #0
   1c1d4:	bne	1c290 <ReadCompressedDataSlabN+0x38c4>
   1c1d8:	mov	r0, #0
   1c1dc:	add	r4, r9, r6, lsl #2
   1c1e0:	str	r0, [r3, r6, lsl #2]
   1c1e4:	ldr	r0, [r4, #4]
   1c1e8:	sdiv	r1, r8, r0
   1c1ec:	mls	r1, r1, r0, r8
   1c1f0:	cmp	r1, #0
   1c1f4:	beq	1c244 <ReadCompressedDataSlabN+0x3878>
   1c1f8:	ldr	r2, [r9, r6, lsl #2]
   1c1fc:	ldr	r3, [r5, r6, lsl #2]
   1c200:	sub	r0, r0, r1
   1c204:	add	r1, sp, #48	; 0x30
   1c208:	mla	r3, r3, r2, r0
   1c20c:	mov	r0, sl
   1c210:	mov	r2, r7
   1c214:	bl	26a0 <InflateSkipData>
   1c218:	ldr	r0, [r4, #4]
   1c21c:	ldr	r3, [sp, #32]
   1c220:	sdiv	r2, r8, r0
   1c224:	add	r1, r0, r8
   1c228:	mul	r0, r2, r0
   1c22c:	ldr	r2, [r5, r6, lsl #2]
   1c230:	sub	r0, r0, r8
   1c234:	add	r0, r1, r0
   1c238:	ldr	r1, [r9, r6, lsl #2]
   1c23c:	mla	r8, r2, r1, r0
   1c240:	b	1c278 <ReadCompressedDataSlabN+0x38ac>
   1c244:	ldr	r0, [r5, r6, lsl #2]
   1c248:	cmp	r0, #0
   1c24c:	beq	1c278 <ReadCompressedDataSlabN+0x38ac>
   1c250:	ldr	r1, [r9, r6, lsl #2]
   1c254:	mov	r2, r7
   1c258:	mul	r3, r1, r0
   1c25c:	mov	r0, sl
   1c260:	add	r1, sp, #48	; 0x30
   1c264:	bl	26a0 <InflateSkipData>
   1c268:	ldr	r0, [r9, r6, lsl #2]
   1c26c:	ldr	r1, [r5, r6, lsl #2]
   1c270:	ldr	r3, [sp, #32]
   1c274:	mla	r8, r1, r0, r8
   1c278:	ldr	r2, [fp, #12]
   1c27c:	add	r1, r6, #2
   1c280:	add	r0, r6, #1
   1c284:	cmp	r1, r2
   1c288:	blt	1c1b0 <ReadCompressedDataSlabN+0x37e4>
   1c28c:	b	1c2b8 <ReadCompressedDataSlabN+0x38ec>
   1c290:	ldr	r0, [sp, #8]
   1c294:	ldr	r6, [r0, r6, lsl #2]
   1c298:	cmp	r6, #0
   1c29c:	beq	1c2b8 <ReadCompressedDataSlabN+0x38ec>
   1c2a0:	mov	r0, sl
   1c2a4:	add	r1, sp, #48	; 0x30
   1c2a8:	mov	r2, r7
   1c2ac:	mov	r3, r6
   1c2b0:	bl	26a0 <InflateSkipData>
   1c2b4:	add	r8, r6, r8
   1c2b8:	ldr	r0, [fp, #28]
   1c2bc:	ldr	r1, [sp, #20]
   1c2c0:	ldr	r9, [fp, #20]
   1c2c4:	ldr	r0, [r0]
   1c2c8:	add	r1, r0, r1
   1c2cc:	ldr	r0, [sp, #28]
   1c2d0:	str	r1, [sp, #20]
   1c2d4:	cmp	r1, r0
   1c2d8:	mov	r0, #1
   1c2dc:	add	r1, sp, #48	; 0x30
   1c2e0:	blt	1c048 <ReadCompressedDataSlabN+0x367c>
   1c2e4:	b	1c8c8 <ReadCompressedDataSlabN+0x3efc>
   1c2e8:	ldr	r0, [sp, #24]
   1c2ec:	cmp	r0, #1
   1c2f0:	blt	1c8c8 <ReadCompressedDataSlabN+0x3efc>
   1c2f4:	add	r0, r9, #4
   1c2f8:	mov	sl, #1
   1c2fc:	mov	r5, #0
   1c300:	str	r0, [sp, #16]
   1c304:	ldr	r0, [fp, #28]
   1c308:	add	r0, r0, #4
   1c30c:	str	r0, [sp, #32]
   1c310:	sub	r0, fp, #112	; 0x70
   1c314:	orr	r0, r0, #4
   1c318:	str	r0, [sp, #28]
   1c31c:	sub	r0, fp, #72	; 0x48
   1c320:	orr	r0, r0, #4
   1c324:	str	r0, [sp, #8]
   1c328:	ldr	r0, [sp, #36]	; 0x24
   1c32c:	add	r0, r0, #8
   1c330:	str	r0, [sp, #12]
   1c334:	ldr	r3, [r9]
   1c338:	cmp	r3, #0
   1c33c:	beq	1c374 <ReadCompressedDataSlabN+0x39a8>
   1c340:	ldr	r8, [sp, #44]	; 0x2c
   1c344:	ldr	r6, [fp, #8]
   1c348:	add	r4, sp, #48	; 0x30
   1c34c:	mov	r1, r4
   1c350:	mov	r0, r8
   1c354:	mov	r2, r6
   1c358:	bl	26a0 <InflateSkipData>
   1c35c:	ldr	r0, [r9]
   1c360:	ldr	r1, [sp, #40]	; 0x28
   1c364:	ldr	r7, [fp, #28]
   1c368:	add	r1, r0, r1
   1c36c:	str	r1, [sp, #40]	; 0x28
   1c370:	b	1c384 <ReadCompressedDataSlabN+0x39b8>
   1c374:	ldr	r8, [sp, #44]	; 0x2c
   1c378:	ldr	r7, [fp, #28]
   1c37c:	ldr	r6, [fp, #8]
   1c380:	add	r4, sp, #48	; 0x30
   1c384:	ldr	r0, [sp, #36]	; 0x24
   1c388:	ldr	r9, [r7]
   1c38c:	mov	r1, r4
   1c390:	mov	r3, r6
   1c394:	str	sl, [sp]
   1c398:	mov	sl, r8
   1c39c:	add	r2, r0, r5, lsl #3
   1c3a0:	mov	r0, r8
   1c3a4:	bl	927c <ReadCompressedInt64Data>
   1c3a8:	cmp	r9, #2
   1c3ac:	str	r5, [sp, #20]
   1c3b0:	blt	1c440 <ReadCompressedDataSlabN+0x3a74>
   1c3b4:	ldr	r0, [sp, #12]
   1c3b8:	ldr	r8, [sp, #40]	; 0x28
   1c3bc:	mov	r4, #0
   1c3c0:	add	r6, r0, r5, lsl #3
   1c3c4:	mov	r5, sl
   1c3c8:	ldr	r0, [fp, #24]
   1c3cc:	add	sl, sp, #48	; 0x30
   1c3d0:	mov	r1, sl
   1c3d4:	mov	r9, r0
   1c3d8:	ldr	r0, [r0]
   1c3dc:	sub	r3, r0, #1
   1c3e0:	mov	r0, r5
   1c3e4:	ldr	r5, [fp, #8]
   1c3e8:	mov	r2, r5
   1c3ec:	bl	26a0 <InflateSkipData>
   1c3f0:	ldr	r0, [r7]
   1c3f4:	ldr	r9, [r9]
   1c3f8:	mov	r1, sl
   1c3fc:	mov	r2, r6
   1c400:	mov	r3, r5
   1c404:	str	r0, [sp, #40]	; 0x28
   1c408:	mov	r0, #1
   1c40c:	str	r0, [sp]
   1c410:	ldr	r0, [sp, #44]	; 0x2c
   1c414:	bl	927c <ReadCompressedInt64Data>
   1c418:	ldr	r0, [sp, #40]	; 0x28
   1c41c:	ldr	r7, [fp, #28]
   1c420:	ldr	r5, [sp, #44]	; 0x2c
   1c424:	add	r4, r4, #1
   1c428:	add	r8, r9, r8
   1c42c:	add	r6, r6, #8
   1c430:	sub	r0, r0, #1
   1c434:	cmp	r4, r0
   1c438:	blt	1c3c8 <ReadCompressedDataSlabN+0x39fc>
   1c43c:	b	1c448 <ReadCompressedDataSlabN+0x3a7c>
   1c440:	ldr	r8, [sp, #40]	; 0x28
   1c444:	mov	r5, sl
   1c448:	ldr	r0, [fp, #16]
   1c44c:	ldr	r1, [fp, #24]
   1c450:	ldr	r2, [r7]
   1c454:	ldr	sl, [fp, #8]
   1c458:	ldr	r0, [r0]
   1c45c:	ldr	r1, [r1]
   1c460:	sub	r2, r2, #1
   1c464:	mls	r0, r2, r1, r0
   1c468:	ldr	r1, [fp, #20]
   1c46c:	mov	r2, sl
   1c470:	ldr	r1, [r1]
   1c474:	sub	r4, r0, r1
   1c478:	mov	r0, r5
   1c47c:	add	r1, sp, #48	; 0x30
   1c480:	sub	r3, r4, #1
   1c484:	bl	26a0 <InflateSkipData>
   1c488:	ldr	r0, [fp, #12]
   1c48c:	add	r8, r4, r8
   1c490:	cmp	r0, #2
   1c494:	blt	1c5ac <ReadCompressedDataSlabN+0x3be0>
   1c498:	ldr	r7, [sp, #16]
   1c49c:	ldr	r5, [sp, #28]
   1c4a0:	mov	r0, #0
   1c4a4:	add	r9, sp, #104	; 0x68
   1c4a8:	mov	r6, r0
   1c4ac:	ldr	r0, [r5, r0, lsl #2]
   1c4b0:	ldr	r1, [sp, #32]
   1c4b4:	add	r0, r0, #1
   1c4b8:	str	r0, [r5, r6, lsl #2]
   1c4bc:	ldr	r1, [r1, r6, lsl #2]
   1c4c0:	sdiv	r2, r0, r1
   1c4c4:	mls	r0, r2, r1, r0
   1c4c8:	cmp	r0, #0
   1c4cc:	bne	1c584 <ReadCompressedDataSlabN+0x3bb8>
   1c4d0:	mov	r0, #0
   1c4d4:	add	r4, r9, r6, lsl #2
   1c4d8:	str	r0, [r5, r6, lsl #2]
   1c4dc:	ldr	r0, [r4, #4]
   1c4e0:	sdiv	r1, r8, r0
   1c4e4:	mls	r1, r1, r0, r8
   1c4e8:	cmp	r1, #0
   1c4ec:	beq	1c53c <ReadCompressedDataSlabN+0x3b70>
   1c4f0:	ldr	r2, [r9, r6, lsl #2]
   1c4f4:	ldr	r3, [r7, r6, lsl #2]
   1c4f8:	sub	r0, r0, r1
   1c4fc:	add	r1, sp, #48	; 0x30
   1c500:	mla	r3, r3, r2, r0
   1c504:	ldr	r0, [sp, #44]	; 0x2c
   1c508:	mov	r2, sl
   1c50c:	bl	26a0 <InflateSkipData>
   1c510:	ldr	r0, [r4, #4]
   1c514:	ldr	r5, [sp, #28]
   1c518:	sdiv	r2, r8, r0
   1c51c:	add	r1, r0, r8
   1c520:	mul	r0, r2, r0
   1c524:	ldr	r2, [r7, r6, lsl #2]
   1c528:	sub	r0, r0, r8
   1c52c:	add	r0, r1, r0
   1c530:	ldr	r1, [r9, r6, lsl #2]
   1c534:	mla	r8, r2, r1, r0
   1c538:	b	1c56c <ReadCompressedDataSlabN+0x3ba0>
   1c53c:	ldr	r0, [r7, r6, lsl #2]
   1c540:	cmp	r0, #0
   1c544:	beq	1c56c <ReadCompressedDataSlabN+0x3ba0>
   1c548:	ldr	r1, [r9, r6, lsl #2]
   1c54c:	mov	r2, sl
   1c550:	mul	r3, r1, r0
   1c554:	ldr	r0, [sp, #44]	; 0x2c
   1c558:	add	r1, sp, #48	; 0x30
   1c55c:	bl	26a0 <InflateSkipData>
   1c560:	ldr	r0, [r9, r6, lsl #2]
   1c564:	ldr	r1, [r7, r6, lsl #2]
   1c568:	mla	r8, r1, r0, r8
   1c56c:	ldr	r2, [fp, #12]
   1c570:	add	r1, r6, #2
   1c574:	add	r0, r6, #1
   1c578:	cmp	r1, r2
   1c57c:	blt	1c4a8 <ReadCompressedDataSlabN+0x3adc>
   1c580:	b	1c5ac <ReadCompressedDataSlabN+0x3be0>
   1c584:	ldr	r0, [sp, #8]
   1c588:	ldr	r6, [r0, r6, lsl #2]
   1c58c:	cmp	r6, #0
   1c590:	beq	1c5ac <ReadCompressedDataSlabN+0x3be0>
   1c594:	ldr	r0, [sp, #44]	; 0x2c
   1c598:	add	r1, sp, #48	; 0x30
   1c59c:	mov	r2, sl
   1c5a0:	mov	r3, r6
   1c5a4:	bl	26a0 <InflateSkipData>
   1c5a8:	add	r8, r6, r8
   1c5ac:	ldr	r0, [fp, #28]
   1c5b0:	ldr	r5, [sp, #20]
   1c5b4:	ldr	r9, [fp, #20]
   1c5b8:	mov	sl, #1
   1c5bc:	str	r8, [sp, #40]	; 0x28
   1c5c0:	ldr	r0, [r0]
   1c5c4:	add	r5, r0, r5
   1c5c8:	ldr	r0, [sp, #24]
   1c5cc:	cmp	r5, r0
   1c5d0:	blt	1c334 <ReadCompressedDataSlabN+0x3968>
   1c5d4:	b	1c8c8 <ReadCompressedDataSlabN+0x3efc>
   1c5d8:	ldr	r0, [sp, #28]
   1c5dc:	cmp	r0, #1
   1c5e0:	blt	1c8c8 <ReadCompressedDataSlabN+0x3efc>
   1c5e4:	ldr	r0, [fp, #28]
   1c5e8:	add	r5, r9, #4
   1c5ec:	mov	r2, #0
   1c5f0:	add	r1, sp, #48	; 0x30
   1c5f4:	str	r2, [sp, #20]
   1c5f8:	str	r5, [sp, #16]
   1c5fc:	add	r0, r0, #4
   1c600:	str	r0, [sp, #40]	; 0x28
   1c604:	sub	r0, fp, #112	; 0x70
   1c608:	orr	r3, r0, #4
   1c60c:	sub	r0, fp, #72	; 0x48
   1c610:	orr	r0, r0, #4
   1c614:	str	r3, [sp, #32]
   1c618:	str	r0, [sp, #8]
   1c61c:	ldr	r0, [sp, #36]	; 0x24
   1c620:	add	r0, r0, #8
   1c624:	str	r0, [sp, #12]
   1c628:	mov	r0, #1
   1c62c:	ldr	r3, [r9]
   1c630:	cmp	r3, #0
   1c634:	beq	1c664 <ReadCompressedDataSlabN+0x3c98>
   1c638:	ldr	r4, [sp, #44]	; 0x2c
   1c63c:	ldr	r6, [fp, #8]
   1c640:	mov	sl, r1
   1c644:	mov	r0, r4
   1c648:	mov	r2, r6
   1c64c:	bl	26a0 <InflateSkipData>
   1c650:	ldr	r0, [r9]
   1c654:	ldr	r7, [fp, #28]
   1c658:	add	r8, r0, r8
   1c65c:	mov	r0, #1
   1c660:	b	1c674 <ReadCompressedDataSlabN+0x3ca8>
   1c664:	ldr	r4, [sp, #44]	; 0x2c
   1c668:	ldr	r7, [fp, #28]
   1c66c:	ldr	r6, [fp, #8]
   1c670:	mov	sl, r1
   1c674:	str	r8, [sp, #24]
   1c678:	ldr	r8, [r7]
   1c67c:	str	r0, [sp]
   1c680:	ldr	r0, [sp, #36]	; 0x24
   1c684:	ldr	r5, [sp, #20]
   1c688:	mov	r1, sl
   1c68c:	mov	r3, r6
   1c690:	mov	r9, r4
   1c694:	add	r2, r0, r5, lsl #3
   1c698:	mov	r0, r4
   1c69c:	bl	aed4 <ReadCompressedUInt64Data>
   1c6a0:	cmp	r8, #2
   1c6a4:	blt	1c728 <ReadCompressedDataSlabN+0x3d5c>
   1c6a8:	ldr	r0, [sp, #12]
   1c6ac:	ldr	r8, [sp, #24]
   1c6b0:	mov	r4, #0
   1c6b4:	add	r6, r0, r5, lsl #3
   1c6b8:	mov	r5, r9
   1c6bc:	ldr	r0, [fp, #24]
   1c6c0:	add	r1, sp, #48	; 0x30
   1c6c4:	mov	r9, r0
   1c6c8:	ldr	r0, [r0]
   1c6cc:	sub	r3, r0, #1
   1c6d0:	mov	r0, r5
   1c6d4:	ldr	r5, [fp, #8]
   1c6d8:	mov	r2, r5
   1c6dc:	bl	26a0 <InflateSkipData>
   1c6e0:	mov	r0, #1
   1c6e4:	ldr	sl, [r7]
   1c6e8:	ldr	r9, [r9]
   1c6ec:	add	r1, sp, #48	; 0x30
   1c6f0:	mov	r2, r6
   1c6f4:	mov	r3, r5
   1c6f8:	str	r0, [sp]
   1c6fc:	ldr	r0, [sp, #44]	; 0x2c
   1c700:	bl	aed4 <ReadCompressedUInt64Data>
   1c704:	ldr	r7, [fp, #28]
   1c708:	ldr	r5, [sp, #44]	; 0x2c
   1c70c:	add	r4, r4, #1
   1c710:	sub	r0, sl, #1
   1c714:	add	r8, r9, r8
   1c718:	add	r6, r6, #8
   1c71c:	cmp	r4, r0
   1c720:	blt	1c6bc <ReadCompressedDataSlabN+0x3cf0>
   1c724:	b	1c730 <ReadCompressedDataSlabN+0x3d64>
   1c728:	ldr	r8, [sp, #24]
   1c72c:	mov	r5, r9
   1c730:	ldr	r0, [fp, #16]
   1c734:	ldr	r1, [fp, #24]
   1c738:	ldr	r2, [r7]
   1c73c:	ldr	r7, [fp, #8]
   1c740:	ldr	r0, [r0]
   1c744:	ldr	r1, [r1]
   1c748:	sub	r2, r2, #1
   1c74c:	mls	r0, r2, r1, r0
   1c750:	ldr	r1, [fp, #20]
   1c754:	mov	r2, r7
   1c758:	ldr	r1, [r1]
   1c75c:	sub	r4, r0, r1
   1c760:	mov	r0, r5
   1c764:	add	r1, sp, #48	; 0x30
   1c768:	sub	r3, r4, #1
   1c76c:	bl	26a0 <InflateSkipData>
   1c770:	ldr	r0, [fp, #12]
   1c774:	add	r8, r4, r8
   1c778:	cmp	r0, #2
   1c77c:	blt	1c89c <ReadCompressedDataSlabN+0x3ed0>
   1c780:	mov	sl, r5
   1c784:	ldr	r5, [sp, #16]
   1c788:	ldr	r3, [sp, #32]
   1c78c:	mov	r0, #0
   1c790:	add	r9, sp, #104	; 0x68
   1c794:	mov	r6, r0
   1c798:	ldr	r0, [r3, r0, lsl #2]
   1c79c:	ldr	r1, [sp, #40]	; 0x28
   1c7a0:	add	r0, r0, #1
   1c7a4:	str	r0, [r3, r6, lsl #2]
   1c7a8:	ldr	r1, [r1, r6, lsl #2]
   1c7ac:	sdiv	r2, r0, r1
   1c7b0:	mls	r0, r2, r1, r0
   1c7b4:	cmp	r0, #0
   1c7b8:	bne	1c874 <ReadCompressedDataSlabN+0x3ea8>
   1c7bc:	mov	r0, #0
   1c7c0:	add	r4, r9, r6, lsl #2
   1c7c4:	str	r0, [r3, r6, lsl #2]
   1c7c8:	ldr	r0, [r4, #4]
   1c7cc:	sdiv	r1, r8, r0
   1c7d0:	mls	r1, r1, r0, r8
   1c7d4:	cmp	r1, #0
   1c7d8:	beq	1c828 <ReadCompressedDataSlabN+0x3e5c>
   1c7dc:	ldr	r2, [r9, r6, lsl #2]
   1c7e0:	ldr	r3, [r5, r6, lsl #2]
   1c7e4:	sub	r0, r0, r1
   1c7e8:	add	r1, sp, #48	; 0x30
   1c7ec:	mla	r3, r3, r2, r0
   1c7f0:	mov	r0, sl
   1c7f4:	mov	r2, r7
   1c7f8:	bl	26a0 <InflateSkipData>
   1c7fc:	ldr	r0, [r4, #4]
   1c800:	ldr	r3, [sp, #32]
   1c804:	sdiv	r2, r8, r0
   1c808:	add	r1, r0, r8
   1c80c:	mul	r0, r2, r0
   1c810:	ldr	r2, [r5, r6, lsl #2]
   1c814:	sub	r0, r0, r8
   1c818:	add	r0, r1, r0
   1c81c:	ldr	r1, [r9, r6, lsl #2]
   1c820:	mla	r8, r2, r1, r0
   1c824:	b	1c85c <ReadCompressedDataSlabN+0x3e90>
   1c828:	ldr	r0, [r5, r6, lsl #2]
   1c82c:	cmp	r0, #0
   1c830:	beq	1c85c <ReadCompressedDataSlabN+0x3e90>
   1c834:	ldr	r1, [r9, r6, lsl #2]
   1c838:	mov	r2, r7
   1c83c:	mul	r3, r1, r0
   1c840:	mov	r0, sl
   1c844:	add	r1, sp, #48	; 0x30
   1c848:	bl	26a0 <InflateSkipData>
   1c84c:	ldr	r0, [r9, r6, lsl #2]
   1c850:	ldr	r1, [r5, r6, lsl #2]
   1c854:	ldr	r3, [sp, #32]
   1c858:	mla	r8, r1, r0, r8
   1c85c:	ldr	r2, [fp, #12]
   1c860:	add	r1, r6, #2
   1c864:	add	r0, r6, #1
   1c868:	cmp	r1, r2
   1c86c:	blt	1c794 <ReadCompressedDataSlabN+0x3dc8>
   1c870:	b	1c89c <ReadCompressedDataSlabN+0x3ed0>
   1c874:	ldr	r0, [sp, #8]
   1c878:	ldr	r6, [r0, r6, lsl #2]
   1c87c:	cmp	r6, #0
   1c880:	beq	1c89c <ReadCompressedDataSlabN+0x3ed0>
   1c884:	mov	r0, sl
   1c888:	add	r1, sp, #48	; 0x30
   1c88c:	mov	r2, r7
   1c890:	mov	r3, r6
   1c894:	bl	26a0 <InflateSkipData>
   1c898:	add	r8, r6, r8
   1c89c:	ldr	r0, [fp, #28]
   1c8a0:	ldr	r1, [sp, #20]
   1c8a4:	ldr	r9, [fp, #20]
   1c8a8:	ldr	r0, [r0]
   1c8ac:	add	r1, r0, r1
   1c8b0:	ldr	r0, [sp, #28]
   1c8b4:	str	r1, [sp, #20]
   1c8b8:	cmp	r1, r0
   1c8bc:	mov	r0, #1
   1c8c0:	add	r1, sp, #48	; 0x30
   1c8c4:	blt	1c62c <ReadCompressedDataSlabN+0x3c60>
   1c8c8:	add	r0, sp, #48	; 0x30
   1c8cc:	bl	1954 <inflateEnd@plt>
   1c8d0:	mov	r0, #0
   1c8d4:	b	18a78 <ReadCompressedDataSlabN+0xac>

0001c8d8 <ReadDataSlab1>:
   1c8d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c8dc:	add	fp, sp, #28
   1c8e0:	sub	sp, sp, #4
   1c8e4:	mov	sl, r0
   1c8e8:	mov	r0, r3
   1c8ec:	mov	r8, r3
   1c8f0:	mov	r4, r2
   1c8f4:	mov	r5, r1
   1c8f8:	bl	193c <Mat_SizeOf@plt>
   1c8fc:	mov	r6, r0
   1c900:	ldr	r0, [fp, #8]
   1c904:	mov	r2, #1
   1c908:	mul	r1, r6, r0
   1c90c:	ldr	r0, [sl]
   1c910:	bl	1a68 <fseek@plt>
   1c914:	sub	r0, r4, #6
   1c918:	mov	r4, #0
   1c91c:	cmp	r0, #9
   1c920:	bhi	1cc84 <ReadDataSlab1+0x3ac>
   1c924:	ldr	r1, [fp, #12]
   1c928:	sub	r1, r1, #1
   1c92c:	mul	r9, r6, r1
   1c930:	ldr	r6, [fp, #16]
   1c934:	add	r1, pc, #4
   1c938:	ldr	r0, [r1, r0, lsl #2]
   1c93c:	add	pc, r1, r0
   1c940:	.word	0x00000028
   1c944:	.word	0x00000078
   1c948:	.word	0x000000c8
   1c94c:	.word	0x00000118
   1c950:	.word	0x00000168
   1c954:	.word	0x000001b8
   1c958:	.word	0x00000208
   1c95c:	.word	0x00000258
   1c960:	.word	0x000002a8
   1c964:	.word	0x000002f8
   1c968:	cmp	r9, #0
   1c96c:	beq	1cc90 <ReadDataSlab1+0x3b8>
   1c970:	cmp	r6, #1
   1c974:	blt	1cc84 <ReadDataSlab1+0x3ac>
   1c978:	mov	r4, #0
   1c97c:	mov	r0, sl
   1c980:	mov	r1, r5
   1c984:	mov	r2, r8
   1c988:	mov	r3, #1
   1c98c:	bl	3790 <ReadDoubleData>
   1c990:	mov	r7, r0
   1c994:	ldr	r0, [sl]
   1c998:	mov	r1, r9
   1c99c:	mov	r2, #1
   1c9a0:	bl	1a68 <fseek@plt>
   1c9a4:	add	r4, r7, r4
   1c9a8:	subs	r6, r6, #1
   1c9ac:	add	r5, r5, #8
   1c9b0:	bne	1c97c <ReadDataSlab1+0xa4>
   1c9b4:	b	1cc84 <ReadDataSlab1+0x3ac>
   1c9b8:	cmp	r9, #0
   1c9bc:	beq	1ccac <ReadDataSlab1+0x3d4>
   1c9c0:	cmp	r6, #1
   1c9c4:	blt	1cc84 <ReadDataSlab1+0x3ac>
   1c9c8:	mov	r4, #0
   1c9cc:	mov	r0, sl
   1c9d0:	mov	r1, r5
   1c9d4:	mov	r2, r8
   1c9d8:	mov	r3, #1
   1c9dc:	bl	5f94 <ReadSingleData>
   1c9e0:	mov	r7, r0
   1c9e4:	ldr	r0, [sl]
   1c9e8:	mov	r1, r9
   1c9ec:	mov	r2, #1
   1c9f0:	bl	1a68 <fseek@plt>
   1c9f4:	add	r4, r7, r4
   1c9f8:	subs	r6, r6, #1
   1c9fc:	add	r5, r5, #4
   1ca00:	bne	1c9cc <ReadDataSlab1+0xf4>
   1ca04:	b	1cc84 <ReadDataSlab1+0x3ac>
   1ca08:	cmp	r9, #0
   1ca0c:	beq	1ccc8 <ReadDataSlab1+0x3f0>
   1ca10:	cmp	r6, #1
   1ca14:	blt	1cc84 <ReadDataSlab1+0x3ac>
   1ca18:	mov	r4, #0
   1ca1c:	mov	r0, sl
   1ca20:	mov	r1, r5
   1ca24:	mov	r2, r8
   1ca28:	mov	r3, #1
   1ca2c:	bl	11cec <ReadInt8Data>
   1ca30:	mov	r7, r0
   1ca34:	ldr	r0, [sl]
   1ca38:	mov	r1, r9
   1ca3c:	mov	r2, #1
   1ca40:	bl	1a68 <fseek@plt>
   1ca44:	add	r4, r7, r4
   1ca48:	subs	r6, r6, #1
   1ca4c:	add	r5, r5, #1
   1ca50:	bne	1ca1c <ReadDataSlab1+0x144>
   1ca54:	b	1cc84 <ReadDataSlab1+0x3ac>
   1ca58:	cmp	r9, #0
   1ca5c:	beq	1cce4 <ReadDataSlab1+0x40c>
   1ca60:	cmp	r6, #1
   1ca64:	blt	1cc84 <ReadDataSlab1+0x3ac>
   1ca68:	mov	r4, #0
   1ca6c:	mov	r0, sl
   1ca70:	mov	r1, r5
   1ca74:	mov	r2, r8
   1ca78:	mov	r3, #1
   1ca7c:	bl	13690 <ReadUInt8Data>
   1ca80:	mov	r7, r0
   1ca84:	ldr	r0, [sl]
   1ca88:	mov	r1, r9
   1ca8c:	mov	r2, #1
   1ca90:	bl	1a68 <fseek@plt>
   1ca94:	add	r4, r7, r4
   1ca98:	subs	r6, r6, #1
   1ca9c:	add	r5, r5, #1
   1caa0:	bne	1ca6c <ReadDataSlab1+0x194>
   1caa4:	b	1cc84 <ReadDataSlab1+0x3ac>
   1caa8:	cmp	r9, #0
   1caac:	beq	1cd00 <ReadDataSlab1+0x428>
   1cab0:	cmp	r6, #1
   1cab4:	blt	1cc84 <ReadDataSlab1+0x3ac>
   1cab8:	mov	r4, #0
   1cabc:	mov	r0, sl
   1cac0:	mov	r1, r5
   1cac4:	mov	r2, r8
   1cac8:	mov	r3, #1
   1cacc:	bl	e8ac <ReadInt16Data>
   1cad0:	mov	r7, r0
   1cad4:	ldr	r0, [sl]
   1cad8:	mov	r1, r9
   1cadc:	mov	r2, #1
   1cae0:	bl	1a68 <fseek@plt>
   1cae4:	add	r4, r7, r4
   1cae8:	subs	r6, r6, #1
   1caec:	add	r5, r5, #2
   1caf0:	bne	1cabc <ReadDataSlab1+0x1e4>
   1caf4:	b	1cc84 <ReadDataSlab1+0x3ac>
   1caf8:	cmp	r9, #0
   1cafc:	beq	1cd1c <ReadDataSlab1+0x444>
   1cb00:	cmp	r6, #1
   1cb04:	blt	1cc84 <ReadDataSlab1+0x3ac>
   1cb08:	mov	r4, #0
   1cb0c:	mov	r0, sl
   1cb10:	mov	r1, r5
   1cb14:	mov	r2, r8
   1cb18:	mov	r3, #1
   1cb1c:	bl	102cc <ReadUInt16Data>
   1cb20:	mov	r7, r0
   1cb24:	ldr	r0, [sl]
   1cb28:	mov	r1, r9
   1cb2c:	mov	r2, #1
   1cb30:	bl	1a68 <fseek@plt>
   1cb34:	add	r4, r7, r4
   1cb38:	subs	r6, r6, #1
   1cb3c:	add	r5, r5, #2
   1cb40:	bne	1cb0c <ReadDataSlab1+0x234>
   1cb44:	b	1cc84 <ReadDataSlab1+0x3ac>
   1cb48:	cmp	r9, #0
   1cb4c:	beq	1cd38 <ReadDataSlab1+0x460>
   1cb50:	cmp	r6, #1
   1cb54:	blt	1cc84 <ReadDataSlab1+0x3ac>
   1cb58:	mov	r4, #0
   1cb5c:	mov	r0, sl
   1cb60:	mov	r1, r5
   1cb64:	mov	r2, r8
   1cb68:	mov	r3, #1
   1cb6c:	bl	b46c <ReadInt32Data>
   1cb70:	mov	r7, r0
   1cb74:	ldr	r0, [sl]
   1cb78:	mov	r1, r9
   1cb7c:	mov	r2, #1
   1cb80:	bl	1a68 <fseek@plt>
   1cb84:	add	r4, r7, r4
   1cb88:	subs	r6, r6, #1
   1cb8c:	add	r5, r5, #4
   1cb90:	bne	1cb5c <ReadDataSlab1+0x284>
   1cb94:	b	1cc84 <ReadDataSlab1+0x3ac>
   1cb98:	cmp	r9, #0
   1cb9c:	beq	1cd54 <ReadDataSlab1+0x47c>
   1cba0:	cmp	r6, #1
   1cba4:	blt	1cc84 <ReadDataSlab1+0x3ac>
   1cba8:	mov	r4, #0
   1cbac:	mov	r0, sl
   1cbb0:	mov	r1, r5
   1cbb4:	mov	r2, r8
   1cbb8:	mov	r3, #1
   1cbbc:	bl	ce8c <ReadUInt32Data>
   1cbc0:	mov	r7, r0
   1cbc4:	ldr	r0, [sl]
   1cbc8:	mov	r1, r9
   1cbcc:	mov	r2, #1
   1cbd0:	bl	1a68 <fseek@plt>
   1cbd4:	add	r4, r7, r4
   1cbd8:	subs	r6, r6, #1
   1cbdc:	add	r5, r5, #4
   1cbe0:	bne	1cbac <ReadDataSlab1+0x2d4>
   1cbe4:	b	1cc84 <ReadDataSlab1+0x3ac>
   1cbe8:	cmp	r9, #0
   1cbec:	beq	1cd70 <ReadDataSlab1+0x498>
   1cbf0:	cmp	r6, #1
   1cbf4:	blt	1cc84 <ReadDataSlab1+0x3ac>
   1cbf8:	mov	r4, #0
   1cbfc:	mov	r0, sl
   1cc00:	mov	r1, r5
   1cc04:	mov	r2, r8
   1cc08:	mov	r3, #1
   1cc0c:	bl	7bbc <ReadInt64Data>
   1cc10:	mov	r7, r0
   1cc14:	ldr	r0, [sl]
   1cc18:	mov	r1, r9
   1cc1c:	mov	r2, #1
   1cc20:	bl	1a68 <fseek@plt>
   1cc24:	add	r4, r7, r4
   1cc28:	subs	r6, r6, #1
   1cc2c:	add	r5, r5, #8
   1cc30:	bne	1cbfc <ReadDataSlab1+0x324>
   1cc34:	b	1cc84 <ReadDataSlab1+0x3ac>
   1cc38:	cmp	r9, #0
   1cc3c:	beq	1cd8c <ReadDataSlab1+0x4b4>
   1cc40:	cmp	r6, #1
   1cc44:	blt	1cc84 <ReadDataSlab1+0x3ac>
   1cc48:	mov	r4, #0
   1cc4c:	mov	r0, sl
   1cc50:	mov	r1, r5
   1cc54:	mov	r2, r8
   1cc58:	mov	r3, #1
   1cc5c:	bl	9814 <ReadUInt64Data>
   1cc60:	mov	r7, r0
   1cc64:	ldr	r0, [sl]
   1cc68:	mov	r1, r9
   1cc6c:	mov	r2, #1
   1cc70:	bl	1a68 <fseek@plt>
   1cc74:	add	r4, r7, r4
   1cc78:	subs	r6, r6, #1
   1cc7c:	add	r5, r5, #8
   1cc80:	bne	1cc4c <ReadDataSlab1+0x374>
   1cc84:	mov	r0, r4
   1cc88:	sub	sp, fp, #28
   1cc8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cc90:	mov	r0, sl
   1cc94:	mov	r1, r5
   1cc98:	mov	r2, r8
   1cc9c:	mov	r3, r6
   1cca0:	sub	sp, fp, #28
   1cca4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cca8:	b	3790 <ReadDoubleData>
   1ccac:	mov	r0, sl
   1ccb0:	mov	r1, r5
   1ccb4:	mov	r2, r8
   1ccb8:	mov	r3, r6
   1ccbc:	sub	sp, fp, #28
   1ccc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ccc4:	b	5f94 <ReadSingleData>
   1ccc8:	mov	r0, sl
   1cccc:	mov	r1, r5
   1ccd0:	mov	r2, r8
   1ccd4:	mov	r3, r6
   1ccd8:	sub	sp, fp, #28
   1ccdc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cce0:	b	11cec <ReadInt8Data>
   1cce4:	mov	r0, sl
   1cce8:	mov	r1, r5
   1ccec:	mov	r2, r8
   1ccf0:	mov	r3, r6
   1ccf4:	sub	sp, fp, #28
   1ccf8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ccfc:	b	13690 <ReadUInt8Data>
   1cd00:	mov	r0, sl
   1cd04:	mov	r1, r5
   1cd08:	mov	r2, r8
   1cd0c:	mov	r3, r6
   1cd10:	sub	sp, fp, #28
   1cd14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cd18:	b	e8ac <ReadInt16Data>
   1cd1c:	mov	r0, sl
   1cd20:	mov	r1, r5
   1cd24:	mov	r2, r8
   1cd28:	mov	r3, r6
   1cd2c:	sub	sp, fp, #28
   1cd30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cd34:	b	102cc <ReadUInt16Data>
   1cd38:	mov	r0, sl
   1cd3c:	mov	r1, r5
   1cd40:	mov	r2, r8
   1cd44:	mov	r3, r6
   1cd48:	sub	sp, fp, #28
   1cd4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cd50:	b	b46c <ReadInt32Data>
   1cd54:	mov	r0, sl
   1cd58:	mov	r1, r5
   1cd5c:	mov	r2, r8
   1cd60:	mov	r3, r6
   1cd64:	sub	sp, fp, #28
   1cd68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cd6c:	b	ce8c <ReadUInt32Data>
   1cd70:	mov	r0, sl
   1cd74:	mov	r1, r5
   1cd78:	mov	r2, r8
   1cd7c:	mov	r3, r6
   1cd80:	sub	sp, fp, #28
   1cd84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cd88:	b	7bbc <ReadInt64Data>
   1cd8c:	mov	r0, sl
   1cd90:	mov	r1, r5
   1cd94:	mov	r2, r8
   1cd98:	mov	r3, r6
   1cd9c:	sub	sp, fp, #28
   1cda0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cda4:	b	9814 <ReadUInt64Data>

0001cda8 <ReadDataSlab2>:
   1cda8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cdac:	add	fp, sp, #28
   1cdb0:	sub	sp, sp, #20
   1cdb4:	cmp	r0, #0
   1cdb8:	mov	r9, #0
   1cdbc:	movne	r5, r1
   1cdc0:	cmpne	r1, #0
   1cdc4:	beq	1cdf4 <ReadDataSlab2+0x4c>
   1cdc8:	ldr	r4, [fp, #20]
   1cdcc:	cmp	r4, #0
   1cdd0:	ldrne	r8, [fp, #16]
   1cdd4:	cmpne	r8, #0
   1cdd8:	beq	1cdf4 <ReadDataSlab2+0x4c>
   1cddc:	mov	r6, r0
   1cde0:	ldr	r0, [fp, #12]
   1cde4:	cmp	r0, #0
   1cde8:	ldrne	r0, [r6]
   1cdec:	cmpne	r0, #0
   1cdf0:	bne	1ce00 <ReadDataSlab2+0x58>
   1cdf4:	mov	r0, r9
   1cdf8:	sub	sp, fp, #28
   1cdfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ce00:	mov	r0, r3
   1ce04:	mov	sl, r3
   1ce08:	mov	r7, r2
   1ce0c:	bl	193c <Mat_SizeOf@plt>
   1ce10:	str	r0, [sp, #16]
   1ce14:	sub	r0, r7, #6
   1ce18:	cmp	r0, #9
   1ce1c:	bhi	1cdf4 <ReadDataSlab2+0x4c>
   1ce20:	add	r1, pc, #8
   1ce24:	ldr	r7, [fp, #8]
   1ce28:	ldr	r0, [r1, r0, lsl #2]
   1ce2c:	add	pc, r1, r0
   1ce30:	.word	0x00000028
   1ce34:	.word	0x0000006c
   1ce38:	.word	0x000000b0
   1ce3c:	.word	0x000000f4
   1ce40:	.word	0x00000138
   1ce44:	.word	0x0000017c
   1ce48:	.word	0x000001c0
   1ce4c:	.word	0x00000204
   1ce50:	.word	0x0000028c
   1ce54:	.word	0x00000248
   1ce58:	ldr	r2, [r8]
   1ce5c:	cmp	r2, #1
   1ce60:	bne	1d100 <ReadDataSlab2+0x358>
   1ce64:	ldr	r1, [r7]
   1ce68:	ldr	r0, [r4]
   1ce6c:	cmp	r0, r1
   1ce70:	bne	1d154 <ReadDataSlab2+0x3ac>
   1ce74:	ldr	r1, [r8, #4]
   1ce78:	cmp	r1, #1
   1ce7c:	bne	1d150 <ReadDataSlab2+0x3a8>
   1ce80:	ldr	r1, [r4, #4]
   1ce84:	mov	r2, sl
   1ce88:	mul	r3, r1, r0
   1ce8c:	mov	r0, r6
   1ce90:	mov	r1, r5
   1ce94:	bl	3790 <ReadDoubleData>
   1ce98:	b	1cdf4 <ReadDataSlab2+0x4c>
   1ce9c:	ldr	r2, [r8]
   1cea0:	cmp	r2, #1
   1cea4:	bne	1d108 <ReadDataSlab2+0x360>
   1cea8:	ldr	r1, [r7]
   1ceac:	ldr	r0, [r4]
   1ceb0:	cmp	r0, r1
   1ceb4:	bne	1d290 <ReadDataSlab2+0x4e8>
   1ceb8:	ldr	r1, [r8, #4]
   1cebc:	cmp	r1, #1
   1cec0:	bne	1d28c <ReadDataSlab2+0x4e4>
   1cec4:	ldr	r1, [r4, #4]
   1cec8:	mov	r2, sl
   1cecc:	mul	r3, r1, r0
   1ced0:	mov	r0, r6
   1ced4:	mov	r1, r5
   1ced8:	bl	5f94 <ReadSingleData>
   1cedc:	b	1cdf4 <ReadDataSlab2+0x4c>
   1cee0:	ldr	r2, [r8]
   1cee4:	cmp	r2, #1
   1cee8:	bne	1d110 <ReadDataSlab2+0x368>
   1ceec:	ldr	r1, [r7]
   1cef0:	ldr	r0, [r4]
   1cef4:	cmp	r0, r1
   1cef8:	bne	1d3c8 <ReadDataSlab2+0x620>
   1cefc:	ldr	r1, [r8, #4]
   1cf00:	cmp	r1, #1
   1cf04:	bne	1d3c4 <ReadDataSlab2+0x61c>
   1cf08:	ldr	r1, [r4, #4]
   1cf0c:	mov	r2, sl
   1cf10:	mul	r3, r1, r0
   1cf14:	mov	r0, r6
   1cf18:	mov	r1, r5
   1cf1c:	bl	11cec <ReadInt8Data>
   1cf20:	b	1cdf4 <ReadDataSlab2+0x4c>
   1cf24:	ldr	r2, [r8]
   1cf28:	cmp	r2, #1
   1cf2c:	bne	1d118 <ReadDataSlab2+0x370>
   1cf30:	ldr	r1, [r7]
   1cf34:	ldr	r0, [r4]
   1cf38:	cmp	r0, r1
   1cf3c:	bne	1d500 <ReadDataSlab2+0x758>
   1cf40:	ldr	r1, [r8, #4]
   1cf44:	cmp	r1, #1
   1cf48:	bne	1d4fc <ReadDataSlab2+0x754>
   1cf4c:	ldr	r1, [r4, #4]
   1cf50:	mov	r2, sl
   1cf54:	mul	r3, r1, r0
   1cf58:	mov	r0, r6
   1cf5c:	mov	r1, r5
   1cf60:	bl	13690 <ReadUInt8Data>
   1cf64:	b	1cdf4 <ReadDataSlab2+0x4c>
   1cf68:	ldr	r2, [r8]
   1cf6c:	cmp	r2, #1
   1cf70:	bne	1d120 <ReadDataSlab2+0x378>
   1cf74:	ldr	r1, [r7]
   1cf78:	ldr	r0, [r4]
   1cf7c:	cmp	r0, r1
   1cf80:	bne	1d638 <ReadDataSlab2+0x890>
   1cf84:	ldr	r1, [r8, #4]
   1cf88:	cmp	r1, #1
   1cf8c:	bne	1d634 <ReadDataSlab2+0x88c>
   1cf90:	ldr	r1, [r4, #4]
   1cf94:	mov	r2, sl
   1cf98:	mul	r3, r1, r0
   1cf9c:	mov	r0, r6
   1cfa0:	mov	r1, r5
   1cfa4:	bl	e8ac <ReadInt16Data>
   1cfa8:	b	1cdf4 <ReadDataSlab2+0x4c>
   1cfac:	ldr	r2, [r8]
   1cfb0:	cmp	r2, #1
   1cfb4:	bne	1d128 <ReadDataSlab2+0x380>
   1cfb8:	ldr	r1, [r7]
   1cfbc:	ldr	r0, [r4]
   1cfc0:	cmp	r0, r1
   1cfc4:	bne	1d770 <ReadDataSlab2+0x9c8>
   1cfc8:	ldr	r1, [r8, #4]
   1cfcc:	cmp	r1, #1
   1cfd0:	bne	1d76c <ReadDataSlab2+0x9c4>
   1cfd4:	ldr	r1, [r4, #4]
   1cfd8:	mov	r2, sl
   1cfdc:	mul	r3, r1, r0
   1cfe0:	mov	r0, r6
   1cfe4:	mov	r1, r5
   1cfe8:	bl	102cc <ReadUInt16Data>
   1cfec:	b	1cdf4 <ReadDataSlab2+0x4c>
   1cff0:	ldr	r2, [r8]
   1cff4:	cmp	r2, #1
   1cff8:	bne	1d130 <ReadDataSlab2+0x388>
   1cffc:	ldr	r1, [r7]
   1d000:	ldr	r0, [r4]
   1d004:	cmp	r0, r1
   1d008:	bne	1d8a8 <ReadDataSlab2+0xb00>
   1d00c:	ldr	r1, [r8, #4]
   1d010:	cmp	r1, #1
   1d014:	bne	1d8a4 <ReadDataSlab2+0xafc>
   1d018:	ldr	r1, [r4, #4]
   1d01c:	mov	r2, sl
   1d020:	mul	r3, r1, r0
   1d024:	mov	r0, r6
   1d028:	mov	r1, r5
   1d02c:	bl	b46c <ReadInt32Data>
   1d030:	b	1cdf4 <ReadDataSlab2+0x4c>
   1d034:	ldr	r2, [r8]
   1d038:	cmp	r2, #1
   1d03c:	bne	1d138 <ReadDataSlab2+0x390>
   1d040:	ldr	r1, [r7]
   1d044:	ldr	r0, [r4]
   1d048:	cmp	r0, r1
   1d04c:	bne	1d9e0 <ReadDataSlab2+0xc38>
   1d050:	ldr	r1, [r8, #4]
   1d054:	cmp	r1, #1
   1d058:	bne	1d9dc <ReadDataSlab2+0xc34>
   1d05c:	ldr	r1, [r4, #4]
   1d060:	mov	r2, sl
   1d064:	mul	r3, r1, r0
   1d068:	mov	r0, r6
   1d06c:	mov	r1, r5
   1d070:	bl	ce8c <ReadUInt32Data>
   1d074:	b	1cdf4 <ReadDataSlab2+0x4c>
   1d078:	ldr	r2, [r8]
   1d07c:	cmp	r2, #1
   1d080:	bne	1d140 <ReadDataSlab2+0x398>
   1d084:	ldr	r1, [r7]
   1d088:	ldr	r0, [r4]
   1d08c:	cmp	r0, r1
   1d090:	bne	1db18 <ReadDataSlab2+0xd70>
   1d094:	ldr	r1, [r8, #4]
   1d098:	cmp	r1, #1
   1d09c:	bne	1db14 <ReadDataSlab2+0xd6c>
   1d0a0:	ldr	r1, [r4, #4]
   1d0a4:	mov	r2, sl
   1d0a8:	mul	r3, r1, r0
   1d0ac:	mov	r0, r6
   1d0b0:	mov	r1, r5
   1d0b4:	bl	9814 <ReadUInt64Data>
   1d0b8:	b	1cdf4 <ReadDataSlab2+0x4c>
   1d0bc:	ldr	r2, [r8]
   1d0c0:	cmp	r2, #1
   1d0c4:	bne	1d148 <ReadDataSlab2+0x3a0>
   1d0c8:	ldr	r1, [r7]
   1d0cc:	ldr	r0, [r4]
   1d0d0:	cmp	r0, r1
   1d0d4:	bne	1dc50 <ReadDataSlab2+0xea8>
   1d0d8:	ldr	r1, [r8, #4]
   1d0dc:	cmp	r1, #1
   1d0e0:	bne	1dc4c <ReadDataSlab2+0xea4>
   1d0e4:	ldr	r1, [r4, #4]
   1d0e8:	mov	r2, sl
   1d0ec:	mul	r3, r1, r0
   1d0f0:	mov	r0, r6
   1d0f4:	mov	r1, r5
   1d0f8:	bl	7bbc <ReadInt64Data>
   1d0fc:	b	1cdf4 <ReadDataSlab2+0x4c>
   1d100:	ldr	r1, [r7]
   1d104:	b	1d154 <ReadDataSlab2+0x3ac>
   1d108:	ldr	r1, [r7]
   1d10c:	b	1d290 <ReadDataSlab2+0x4e8>
   1d110:	ldr	r1, [r7]
   1d114:	b	1d3c8 <ReadDataSlab2+0x620>
   1d118:	ldr	r1, [r7]
   1d11c:	b	1d500 <ReadDataSlab2+0x758>
   1d120:	ldr	r1, [r7]
   1d124:	b	1d638 <ReadDataSlab2+0x890>
   1d128:	ldr	r1, [r7]
   1d12c:	b	1d770 <ReadDataSlab2+0x9c8>
   1d130:	ldr	r1, [r7]
   1d134:	b	1d8a8 <ReadDataSlab2+0xb00>
   1d138:	ldr	r1, [r7]
   1d13c:	b	1d9e0 <ReadDataSlab2+0xc38>
   1d140:	ldr	r1, [r7]
   1d144:	b	1db18 <ReadDataSlab2+0xd70>
   1d148:	ldr	r1, [r7]
   1d14c:	b	1dc50 <ReadDataSlab2+0xea8>
   1d150:	mov	r1, r0
   1d154:	ldr	r0, [r6]
   1d158:	ldr	r8, [r8, #4]
   1d15c:	str	r1, [sp, #8]
   1d160:	str	r2, [sp, #12]
   1d164:	bl	1858 <ftell@plt>
   1d168:	cmn	r0, #1
   1d16c:	beq	1dd84 <ReadDataSlab2+0xfdc>
   1d170:	ldr	r0, [fp, #12]
   1d174:	ldr	r1, [sp, #16]
   1d178:	mov	r2, #1
   1d17c:	ldr	r0, [r0, #4]
   1d180:	mul	r0, r0, r1
   1d184:	ldr	r1, [r7]
   1d188:	mul	r1, r0, r1
   1d18c:	ldr	r0, [r6]
   1d190:	bl	1a68 <fseek@plt>
   1d194:	ldr	r0, [r4, #4]
   1d198:	cmp	r0, #1
   1d19c:	blt	1cdf4 <ReadDataSlab2+0x4c>
   1d1a0:	ldr	r0, [sp, #12]
   1d1a4:	ldr	r1, [sp, #16]
   1d1a8:	mov	r4, #0
   1d1ac:	sub	r0, r0, #1
   1d1b0:	mul	r7, r0, r1
   1d1b4:	mul	r0, r8, r1
   1d1b8:	ldr	r1, [sp, #8]
   1d1bc:	mul	r0, r0, r1
   1d1c0:	str	r0, [sp, #8]
   1d1c4:	ldr	r0, [r6]
   1d1c8:	bl	1858 <ftell@plt>
   1d1cc:	cmn	r0, #1
   1d1d0:	beq	1dd84 <ReadDataSlab2+0xfdc>
   1d1d4:	mov	r9, r0
   1d1d8:	ldr	r0, [fp, #12]
   1d1dc:	ldr	r1, [sp, #16]
   1d1e0:	mov	r2, #1
   1d1e4:	str	r4, [sp, #12]
   1d1e8:	ldr	r0, [r0]
   1d1ec:	mul	r1, r0, r1
   1d1f0:	ldr	r0, [r6]
   1d1f4:	bl	1a68 <fseek@plt>
   1d1f8:	ldr	r4, [fp, #20]
   1d1fc:	ldr	r0, [r4]
   1d200:	cmp	r0, #1
   1d204:	blt	1d244 <ReadDataSlab2+0x49c>
   1d208:	mov	r8, #0
   1d20c:	mov	r0, r6
   1d210:	mov	r1, r5
   1d214:	mov	r2, sl
   1d218:	mov	r3, #1
   1d21c:	bl	3790 <ReadDoubleData>
   1d220:	ldr	r0, [r6]
   1d224:	mov	r1, r7
   1d228:	mov	r2, #1
   1d22c:	bl	1a68 <fseek@plt>
   1d230:	ldr	r0, [r4]
   1d234:	add	r8, r8, #1
   1d238:	add	r5, r5, #8
   1d23c:	cmp	r8, r0
   1d240:	blt	1d20c <ReadDataSlab2+0x464>
   1d244:	ldr	r0, [r6]
   1d248:	bl	1858 <ftell@plt>
   1d24c:	cmn	r0, #1
   1d250:	beq	1dd84 <ReadDataSlab2+0xfdc>
   1d254:	ldr	r1, [sp, #8]
   1d258:	mov	r2, #1
   1d25c:	add	r1, r9, r1
   1d260:	sub	r1, r1, r0
   1d264:	ldr	r0, [r6]
   1d268:	bl	1a68 <fseek@plt>
   1d26c:	mov	r0, r4
   1d270:	ldr	r4, [sp, #12]
   1d274:	mov	r9, #0
   1d278:	ldr	r0, [r0, #4]
   1d27c:	add	r4, r4, #1
   1d280:	cmp	r4, r0
   1d284:	blt	1d1c4 <ReadDataSlab2+0x41c>
   1d288:	b	1cdf4 <ReadDataSlab2+0x4c>
   1d28c:	mov	r1, r0
   1d290:	ldr	r0, [r6]
   1d294:	ldr	r8, [r8, #4]
   1d298:	str	r1, [sp, #8]
   1d29c:	str	r2, [sp, #12]
   1d2a0:	bl	1858 <ftell@plt>
   1d2a4:	cmn	r0, #1
   1d2a8:	beq	1dd84 <ReadDataSlab2+0xfdc>
   1d2ac:	ldr	r0, [fp, #12]
   1d2b0:	ldr	r1, [sp, #16]
   1d2b4:	mov	r2, #1
   1d2b8:	ldr	r0, [r0, #4]
   1d2bc:	mul	r0, r0, r1
   1d2c0:	ldr	r1, [r7]
   1d2c4:	mul	r1, r0, r1
   1d2c8:	ldr	r0, [r6]
   1d2cc:	bl	1a68 <fseek@plt>
   1d2d0:	ldr	r0, [r4, #4]
   1d2d4:	cmp	r0, #1
   1d2d8:	blt	1cdf4 <ReadDataSlab2+0x4c>
   1d2dc:	ldr	r0, [sp, #12]
   1d2e0:	ldr	r1, [sp, #16]
   1d2e4:	mov	r4, #0
   1d2e8:	sub	r0, r0, #1
   1d2ec:	mul	r7, r0, r1
   1d2f0:	mul	r0, r8, r1
   1d2f4:	ldr	r1, [sp, #8]
   1d2f8:	mul	r0, r0, r1
   1d2fc:	str	r0, [sp, #4]
   1d300:	ldr	r0, [r6]
   1d304:	bl	1858 <ftell@plt>
   1d308:	cmn	r0, #1
   1d30c:	beq	1dd84 <ReadDataSlab2+0xfdc>
   1d310:	str	r0, [sp, #8]
   1d314:	ldr	r0, [fp, #12]
   1d318:	ldr	r1, [sp, #16]
   1d31c:	mov	r2, #1
   1d320:	str	r4, [sp, #12]
   1d324:	ldr	r0, [r0]
   1d328:	mul	r1, r0, r1
   1d32c:	ldr	r0, [r6]
   1d330:	bl	1a68 <fseek@plt>
   1d334:	ldr	r9, [fp, #20]
   1d338:	ldr	r0, [r9]
   1d33c:	cmp	r0, #1
   1d340:	blt	1d380 <ReadDataSlab2+0x5d8>
   1d344:	mov	r8, #0
   1d348:	mov	r0, r6
   1d34c:	mov	r1, r5
   1d350:	mov	r2, sl
   1d354:	mov	r3, #1
   1d358:	bl	5f94 <ReadSingleData>
   1d35c:	ldr	r0, [r6]
   1d360:	mov	r1, r7
   1d364:	mov	r2, #1
   1d368:	bl	1a68 <fseek@plt>
   1d36c:	ldr	r0, [r9]
   1d370:	add	r8, r8, #1
   1d374:	add	r5, r5, #4
   1d378:	cmp	r8, r0
   1d37c:	blt	1d348 <ReadDataSlab2+0x5a0>
   1d380:	ldr	r0, [r6]
   1d384:	bl	1858 <ftell@plt>
   1d388:	cmn	r0, #1
   1d38c:	beq	1dd84 <ReadDataSlab2+0xfdc>
   1d390:	ldmib	sp, {r1, r2}
   1d394:	add	r1, r2, r1
   1d398:	mov	r2, #1
   1d39c:	sub	r1, r1, r0
   1d3a0:	ldr	r0, [r6]
   1d3a4:	bl	1a68 <fseek@plt>
   1d3a8:	ldr	r4, [sp, #12]
   1d3ac:	ldr	r0, [r9, #4]
   1d3b0:	mov	r9, #0
   1d3b4:	add	r4, r4, #1
   1d3b8:	cmp	r4, r0
   1d3bc:	blt	1d300 <ReadDataSlab2+0x558>
   1d3c0:	b	1cdf4 <ReadDataSlab2+0x4c>
   1d3c4:	mov	r1, r0
   1d3c8:	ldr	r0, [r6]
   1d3cc:	ldr	r8, [r8, #4]
   1d3d0:	str	r1, [sp, #8]
   1d3d4:	str	r2, [sp, #12]
   1d3d8:	bl	1858 <ftell@plt>
   1d3dc:	cmn	r0, #1
   1d3e0:	beq	1dd84 <ReadDataSlab2+0xfdc>
   1d3e4:	ldr	r0, [fp, #12]
   1d3e8:	ldr	r1, [sp, #16]
   1d3ec:	mov	r2, #1
   1d3f0:	ldr	r0, [r0, #4]
   1d3f4:	mul	r0, r0, r1
   1d3f8:	ldr	r1, [r7]
   1d3fc:	mul	r1, r0, r1
   1d400:	ldr	r0, [r6]
   1d404:	bl	1a68 <fseek@plt>
   1d408:	ldr	r0, [r4, #4]
   1d40c:	cmp	r0, #1
   1d410:	blt	1cdf4 <ReadDataSlab2+0x4c>
   1d414:	ldr	r0, [sp, #12]
   1d418:	ldr	r1, [sp, #16]
   1d41c:	sub	r0, r0, #1
   1d420:	mul	r7, r0, r1
   1d424:	mul	r0, r8, r1
   1d428:	ldr	r1, [sp, #8]
   1d42c:	mov	r8, #0
   1d430:	mul	r0, r0, r1
   1d434:	str	r0, [sp, #8]
   1d438:	ldr	r0, [r6]
   1d43c:	bl	1858 <ftell@plt>
   1d440:	cmn	r0, #1
   1d444:	beq	1dd84 <ReadDataSlab2+0xfdc>
   1d448:	mov	r9, r0
   1d44c:	ldr	r0, [fp, #12]
   1d450:	ldr	r1, [sp, #16]
   1d454:	mov	r2, #1
   1d458:	ldr	r0, [r0]
   1d45c:	mul	r1, r0, r1
   1d460:	ldr	r0, [r6]
   1d464:	bl	1a68 <fseek@plt>
   1d468:	ldr	r4, [fp, #20]
   1d46c:	ldr	r0, [r4]
   1d470:	cmp	r0, #1
   1d474:	blt	1d4bc <ReadDataSlab2+0x714>
   1d478:	str	r8, [sp, #12]
   1d47c:	mov	r8, #0
   1d480:	add	r1, r5, r8
   1d484:	mov	r0, r6
   1d488:	mov	r2, sl
   1d48c:	mov	r3, #1
   1d490:	bl	11cec <ReadInt8Data>
   1d494:	ldr	r0, [r6]
   1d498:	mov	r1, r7
   1d49c:	mov	r2, #1
   1d4a0:	bl	1a68 <fseek@plt>
   1d4a4:	ldr	r0, [r4]
   1d4a8:	add	r8, r8, #1
   1d4ac:	cmp	r8, r0
   1d4b0:	blt	1d480 <ReadDataSlab2+0x6d8>
   1d4b4:	add	r5, r5, r8
   1d4b8:	ldr	r8, [sp, #12]
   1d4bc:	ldr	r0, [r6]
   1d4c0:	bl	1858 <ftell@plt>
   1d4c4:	cmn	r0, #1
   1d4c8:	beq	1dd84 <ReadDataSlab2+0xfdc>
   1d4cc:	ldr	r1, [sp, #8]
   1d4d0:	mov	r2, #1
   1d4d4:	add	r1, r9, r1
   1d4d8:	sub	r1, r1, r0
   1d4dc:	ldr	r0, [r6]
   1d4e0:	bl	1a68 <fseek@plt>
   1d4e4:	ldr	r0, [r4, #4]
   1d4e8:	add	r8, r8, #1
   1d4ec:	mov	r9, #0
   1d4f0:	cmp	r8, r0
   1d4f4:	blt	1d438 <ReadDataSlab2+0x690>
   1d4f8:	b	1cdf4 <ReadDataSlab2+0x4c>
   1d4fc:	mov	r1, r0
   1d500:	ldr	r0, [r6]
   1d504:	ldr	r8, [r8, #4]
   1d508:	str	r1, [sp, #8]
   1d50c:	str	r2, [sp, #12]
   1d510:	bl	1858 <ftell@plt>
   1d514:	cmn	r0, #1
   1d518:	beq	1dd84 <ReadDataSlab2+0xfdc>
   1d51c:	ldr	r0, [fp, #12]
   1d520:	ldr	r1, [sp, #16]
   1d524:	mov	r2, #1
   1d528:	ldr	r0, [r0, #4]
   1d52c:	mul	r0, r0, r1
   1d530:	ldr	r1, [r7]
   1d534:	mul	r1, r0, r1
   1d538:	ldr	r0, [r6]
   1d53c:	bl	1a68 <fseek@plt>
   1d540:	ldr	r0, [r4, #4]
   1d544:	cmp	r0, #1
   1d548:	blt	1cdf4 <ReadDataSlab2+0x4c>
   1d54c:	ldr	r0, [sp, #12]
   1d550:	ldr	r1, [sp, #16]
   1d554:	sub	r0, r0, #1
   1d558:	mul	r7, r0, r1
   1d55c:	mul	r0, r8, r1
   1d560:	ldr	r1, [sp, #8]
   1d564:	mov	r8, #0
   1d568:	mul	r0, r0, r1
   1d56c:	str	r0, [sp, #8]
   1d570:	ldr	r0, [r6]
   1d574:	bl	1858 <ftell@plt>
   1d578:	cmn	r0, #1
   1d57c:	beq	1dd84 <ReadDataSlab2+0xfdc>
   1d580:	mov	r9, r0
   1d584:	ldr	r0, [fp, #12]
   1d588:	ldr	r1, [sp, #16]
   1d58c:	mov	r2, #1
   1d590:	ldr	r0, [r0]
   1d594:	mul	r1, r0, r1
   1d598:	ldr	r0, [r6]
   1d59c:	bl	1a68 <fseek@plt>
   1d5a0:	ldr	r4, [fp, #20]
   1d5a4:	ldr	r0, [r4]
   1d5a8:	cmp	r0, #1
   1d5ac:	blt	1d5f4 <ReadDataSlab2+0x84c>
   1d5b0:	str	r8, [sp, #12]
   1d5b4:	mov	r8, #0
   1d5b8:	add	r1, r5, r8
   1d5bc:	mov	r0, r6
   1d5c0:	mov	r2, sl
   1d5c4:	mov	r3, #1
   1d5c8:	bl	13690 <ReadUInt8Data>
   1d5cc:	ldr	r0, [r6]
   1d5d0:	mov	r1, r7
   1d5d4:	mov	r2, #1
   1d5d8:	bl	1a68 <fseek@plt>
   1d5dc:	ldr	r0, [r4]
   1d5e0:	add	r8, r8, #1
   1d5e4:	cmp	r8, r0
   1d5e8:	blt	1d5b8 <ReadDataSlab2+0x810>
   1d5ec:	add	r5, r5, r8
   1d5f0:	ldr	r8, [sp, #12]
   1d5f4:	ldr	r0, [r6]
   1d5f8:	bl	1858 <ftell@plt>
   1d5fc:	cmn	r0, #1
   1d600:	beq	1dd84 <ReadDataSlab2+0xfdc>
   1d604:	ldr	r1, [sp, #8]
   1d608:	mov	r2, #1
   1d60c:	add	r1, r9, r1
   1d610:	sub	r1, r1, r0
   1d614:	ldr	r0, [r6]
   1d618:	bl	1a68 <fseek@plt>
   1d61c:	ldr	r0, [r4, #4]
   1d620:	add	r8, r8, #1
   1d624:	mov	r9, #0
   1d628:	cmp	r8, r0
   1d62c:	blt	1d570 <ReadDataSlab2+0x7c8>
   1d630:	b	1cdf4 <ReadDataSlab2+0x4c>
   1d634:	mov	r1, r0
   1d638:	ldr	r0, [r6]
   1d63c:	ldr	r8, [r8, #4]
   1d640:	str	r1, [sp, #8]
   1d644:	str	r2, [sp, #12]
   1d648:	bl	1858 <ftell@plt>
   1d64c:	cmn	r0, #1
   1d650:	beq	1dd84 <ReadDataSlab2+0xfdc>
   1d654:	ldr	r0, [fp, #12]
   1d658:	ldr	r1, [sp, #16]
   1d65c:	mov	r2, #1
   1d660:	ldr	r0, [r0, #4]
   1d664:	mul	r0, r0, r1
   1d668:	ldr	r1, [r7]
   1d66c:	mul	r1, r0, r1
   1d670:	ldr	r0, [r6]
   1d674:	bl	1a68 <fseek@plt>
   1d678:	ldr	r0, [r4, #4]
   1d67c:	cmp	r0, #1
   1d680:	blt	1cdf4 <ReadDataSlab2+0x4c>
   1d684:	ldr	r0, [sp, #12]
   1d688:	ldr	r1, [sp, #16]
   1d68c:	mov	r4, #0
   1d690:	sub	r0, r0, #1
   1d694:	mul	r7, r0, r1
   1d698:	mul	r0, r8, r1
   1d69c:	ldr	r1, [sp, #8]
   1d6a0:	mul	r0, r0, r1
   1d6a4:	str	r0, [sp, #4]
   1d6a8:	ldr	r0, [r6]
   1d6ac:	bl	1858 <ftell@plt>
   1d6b0:	cmn	r0, #1
   1d6b4:	beq	1dd84 <ReadDataSlab2+0xfdc>
   1d6b8:	str	r0, [sp, #8]
   1d6bc:	ldr	r0, [fp, #12]
   1d6c0:	ldr	r1, [sp, #16]
   1d6c4:	mov	r2, #1
   1d6c8:	str	r4, [sp, #12]
   1d6cc:	ldr	r0, [r0]
   1d6d0:	mul	r1, r0, r1
   1d6d4:	ldr	r0, [r6]
   1d6d8:	bl	1a68 <fseek@plt>
   1d6dc:	ldr	r9, [fp, #20]
   1d6e0:	ldr	r0, [r9]
   1d6e4:	cmp	r0, #1
   1d6e8:	blt	1d728 <ReadDataSlab2+0x980>
   1d6ec:	mov	r8, #0
   1d6f0:	mov	r0, r6
   1d6f4:	mov	r1, r5
   1d6f8:	mov	r2, sl
   1d6fc:	mov	r3, #1
   1d700:	bl	e8ac <ReadInt16Data>
   1d704:	ldr	r0, [r6]
   1d708:	mov	r1, r7
   1d70c:	mov	r2, #1
   1d710:	bl	1a68 <fseek@plt>
   1d714:	ldr	r0, [r9]
   1d718:	add	r8, r8, #1
   1d71c:	add	r5, r5, #2
   1d720:	cmp	r8, r0
   1d724:	blt	1d6f0 <ReadDataSlab2+0x948>
   1d728:	ldr	r0, [r6]
   1d72c:	bl	1858 <ftell@plt>
   1d730:	cmn	r0, #1
   1d734:	beq	1dd84 <ReadDataSlab2+0xfdc>
   1d738:	ldmib	sp, {r1, r2}
   1d73c:	add	r1, r2, r1
   1d740:	mov	r2, #1
   1d744:	sub	r1, r1, r0
   1d748:	ldr	r0, [r6]
   1d74c:	bl	1a68 <fseek@plt>
   1d750:	ldr	r4, [sp, #12]
   1d754:	ldr	r0, [r9, #4]
   1d758:	mov	r9, #0
   1d75c:	add	r4, r4, #1
   1d760:	cmp	r4, r0
   1d764:	blt	1d6a8 <ReadDataSlab2+0x900>
   1d768:	b	1cdf4 <ReadDataSlab2+0x4c>
   1d76c:	mov	r1, r0
   1d770:	ldr	r0, [r6]
   1d774:	ldr	r8, [r8, #4]
   1d778:	str	r1, [sp, #8]
   1d77c:	str	r2, [sp, #12]
   1d780:	bl	1858 <ftell@plt>
   1d784:	cmn	r0, #1
   1d788:	beq	1dd84 <ReadDataSlab2+0xfdc>
   1d78c:	ldr	r0, [fp, #12]
   1d790:	ldr	r1, [sp, #16]
   1d794:	mov	r2, #1
   1d798:	ldr	r0, [r0, #4]
   1d79c:	mul	r0, r0, r1
   1d7a0:	ldr	r1, [r7]
   1d7a4:	mul	r1, r0, r1
   1d7a8:	ldr	r0, [r6]
   1d7ac:	bl	1a68 <fseek@plt>
   1d7b0:	ldr	r0, [r4, #4]
   1d7b4:	cmp	r0, #1
   1d7b8:	blt	1cdf4 <ReadDataSlab2+0x4c>
   1d7bc:	ldr	r0, [sp, #12]
   1d7c0:	ldr	r1, [sp, #16]
   1d7c4:	mov	r4, #0
   1d7c8:	sub	r0, r0, #1
   1d7cc:	mul	r7, r0, r1
   1d7d0:	mul	r0, r8, r1
   1d7d4:	ldr	r1, [sp, #8]
   1d7d8:	mul	r0, r0, r1
   1d7dc:	str	r0, [sp, #4]
   1d7e0:	ldr	r0, [r6]
   1d7e4:	bl	1858 <ftell@plt>
   1d7e8:	cmn	r0, #1
   1d7ec:	beq	1dd84 <ReadDataSlab2+0xfdc>
   1d7f0:	str	r0, [sp, #8]
   1d7f4:	ldr	r0, [fp, #12]
   1d7f8:	ldr	r1, [sp, #16]
   1d7fc:	mov	r2, #1
   1d800:	str	r4, [sp, #12]
   1d804:	ldr	r0, [r0]
   1d808:	mul	r1, r0, r1
   1d80c:	ldr	r0, [r6]
   1d810:	bl	1a68 <fseek@plt>
   1d814:	ldr	r9, [fp, #20]
   1d818:	ldr	r0, [r9]
   1d81c:	cmp	r0, #1
   1d820:	blt	1d860 <ReadDataSlab2+0xab8>
   1d824:	mov	r8, #0
   1d828:	mov	r0, r6
   1d82c:	mov	r1, r5
   1d830:	mov	r2, sl
   1d834:	mov	r3, #1
   1d838:	bl	102cc <ReadUInt16Data>
   1d83c:	ldr	r0, [r6]
   1d840:	mov	r1, r7
   1d844:	mov	r2, #1
   1d848:	bl	1a68 <fseek@plt>
   1d84c:	ldr	r0, [r9]
   1d850:	add	r8, r8, #1
   1d854:	add	r5, r5, #2
   1d858:	cmp	r8, r0
   1d85c:	blt	1d828 <ReadDataSlab2+0xa80>
   1d860:	ldr	r0, [r6]
   1d864:	bl	1858 <ftell@plt>
   1d868:	cmn	r0, #1
   1d86c:	beq	1dd84 <ReadDataSlab2+0xfdc>
   1d870:	ldmib	sp, {r1, r2}
   1d874:	add	r1, r2, r1
   1d878:	mov	r2, #1
   1d87c:	sub	r1, r1, r0
   1d880:	ldr	r0, [r6]
   1d884:	bl	1a68 <fseek@plt>
   1d888:	ldr	r4, [sp, #12]
   1d88c:	ldr	r0, [r9, #4]
   1d890:	mov	r9, #0
   1d894:	add	r4, r4, #1
   1d898:	cmp	r4, r0
   1d89c:	blt	1d7e0 <ReadDataSlab2+0xa38>
   1d8a0:	b	1cdf4 <ReadDataSlab2+0x4c>
   1d8a4:	mov	r1, r0
   1d8a8:	ldr	r0, [r6]
   1d8ac:	ldr	r8, [r8, #4]
   1d8b0:	str	r1, [sp, #8]
   1d8b4:	str	r2, [sp, #12]
   1d8b8:	bl	1858 <ftell@plt>
   1d8bc:	cmn	r0, #1
   1d8c0:	beq	1dd84 <ReadDataSlab2+0xfdc>
   1d8c4:	ldr	r0, [fp, #12]
   1d8c8:	ldr	r1, [sp, #16]
   1d8cc:	mov	r2, #1
   1d8d0:	ldr	r0, [r0, #4]
   1d8d4:	mul	r0, r0, r1
   1d8d8:	ldr	r1, [r7]
   1d8dc:	mul	r1, r0, r1
   1d8e0:	ldr	r0, [r6]
   1d8e4:	bl	1a68 <fseek@plt>
   1d8e8:	ldr	r0, [r4, #4]
   1d8ec:	cmp	r0, #1
   1d8f0:	blt	1cdf4 <ReadDataSlab2+0x4c>
   1d8f4:	ldr	r0, [sp, #12]
   1d8f8:	ldr	r1, [sp, #16]
   1d8fc:	sub	r0, r0, #1
   1d900:	mul	r7, r0, r1
   1d904:	mul	r0, r8, r1
   1d908:	ldr	r1, [sp, #8]
   1d90c:	mov	r8, #0
   1d910:	mul	r0, r0, r1
   1d914:	str	r0, [sp, #8]
   1d918:	ldr	r0, [r6]
   1d91c:	bl	1858 <ftell@plt>
   1d920:	cmn	r0, #1
   1d924:	beq	1dd84 <ReadDataSlab2+0xfdc>
   1d928:	mov	r9, r0
   1d92c:	ldr	r0, [fp, #12]
   1d930:	ldr	r1, [sp, #16]
   1d934:	mov	r2, #1
   1d938:	ldr	r0, [r0]
   1d93c:	mul	r1, r0, r1
   1d940:	ldr	r0, [r6]
   1d944:	bl	1a68 <fseek@plt>
   1d948:	ldr	r4, [fp, #20]
   1d94c:	str	r8, [sp, #12]
   1d950:	ldr	r0, [r4]
   1d954:	cmp	r0, #1
   1d958:	blt	1d998 <ReadDataSlab2+0xbf0>
   1d95c:	mov	r8, #0
   1d960:	mov	r0, r6
   1d964:	mov	r1, r5
   1d968:	mov	r2, sl
   1d96c:	mov	r3, #1
   1d970:	bl	b46c <ReadInt32Data>
   1d974:	ldr	r0, [r6]
   1d978:	mov	r1, r7
   1d97c:	mov	r2, #1
   1d980:	bl	1a68 <fseek@plt>
   1d984:	ldr	r0, [r4]
   1d988:	add	r8, r8, #1
   1d98c:	add	r5, r5, #4
   1d990:	cmp	r8, r0
   1d994:	blt	1d960 <ReadDataSlab2+0xbb8>
   1d998:	ldr	r0, [r6]
   1d99c:	bl	1858 <ftell@plt>
   1d9a0:	cmn	r0, #1
   1d9a4:	beq	1dd84 <ReadDataSlab2+0xfdc>
   1d9a8:	ldr	r1, [sp, #8]
   1d9ac:	mov	r2, #1
   1d9b0:	add	r1, r9, r1
   1d9b4:	sub	r1, r1, r0
   1d9b8:	ldr	r0, [r6]
   1d9bc:	bl	1a68 <fseek@plt>
   1d9c0:	ldr	r8, [sp, #12]
   1d9c4:	ldr	r0, [r4, #4]
   1d9c8:	mov	r9, #0
   1d9cc:	add	r8, r8, #1
   1d9d0:	cmp	r8, r0
   1d9d4:	blt	1d918 <ReadDataSlab2+0xb70>
   1d9d8:	b	1cdf4 <ReadDataSlab2+0x4c>
   1d9dc:	mov	r1, r0
   1d9e0:	ldr	r0, [r6]
   1d9e4:	ldr	r8, [r8, #4]
   1d9e8:	str	r1, [sp, #8]
   1d9ec:	str	r2, [sp, #12]
   1d9f0:	bl	1858 <ftell@plt>
   1d9f4:	cmn	r0, #1
   1d9f8:	beq	1dd84 <ReadDataSlab2+0xfdc>
   1d9fc:	ldr	r0, [fp, #12]
   1da00:	ldr	r1, [sp, #16]
   1da04:	mov	r2, #1
   1da08:	ldr	r0, [r0, #4]
   1da0c:	mul	r0, r0, r1
   1da10:	ldr	r1, [r7]
   1da14:	mul	r1, r0, r1
   1da18:	ldr	r0, [r6]
   1da1c:	bl	1a68 <fseek@plt>
   1da20:	ldr	r0, [r4, #4]
   1da24:	cmp	r0, #1
   1da28:	blt	1cdf4 <ReadDataSlab2+0x4c>
   1da2c:	ldr	r0, [sp, #12]
   1da30:	ldr	r1, [sp, #16]
   1da34:	mov	r4, #0
   1da38:	sub	r0, r0, #1
   1da3c:	mul	r7, r0, r1
   1da40:	mul	r0, r8, r1
   1da44:	ldr	r1, [sp, #8]
   1da48:	mul	r0, r0, r1
   1da4c:	str	r0, [sp, #4]
   1da50:	ldr	r0, [r6]
   1da54:	bl	1858 <ftell@plt>
   1da58:	cmn	r0, #1
   1da5c:	beq	1dd84 <ReadDataSlab2+0xfdc>
   1da60:	str	r0, [sp, #8]
   1da64:	ldr	r0, [fp, #12]
   1da68:	ldr	r1, [sp, #16]
   1da6c:	mov	r2, #1
   1da70:	str	r4, [sp, #12]
   1da74:	ldr	r0, [r0]
   1da78:	mul	r1, r0, r1
   1da7c:	ldr	r0, [r6]
   1da80:	bl	1a68 <fseek@plt>
   1da84:	ldr	r9, [fp, #20]
   1da88:	ldr	r0, [r9]
   1da8c:	cmp	r0, #1
   1da90:	blt	1dad0 <ReadDataSlab2+0xd28>
   1da94:	mov	r8, #0
   1da98:	mov	r0, r6
   1da9c:	mov	r1, r5
   1daa0:	mov	r2, sl
   1daa4:	mov	r3, #1
   1daa8:	bl	ce8c <ReadUInt32Data>
   1daac:	ldr	r0, [r6]
   1dab0:	mov	r1, r7
   1dab4:	mov	r2, #1
   1dab8:	bl	1a68 <fseek@plt>
   1dabc:	ldr	r0, [r9]
   1dac0:	add	r8, r8, #1
   1dac4:	add	r5, r5, #4
   1dac8:	cmp	r8, r0
   1dacc:	blt	1da98 <ReadDataSlab2+0xcf0>
   1dad0:	ldr	r0, [r6]
   1dad4:	bl	1858 <ftell@plt>
   1dad8:	cmn	r0, #1
   1dadc:	beq	1dd84 <ReadDataSlab2+0xfdc>
   1dae0:	ldmib	sp, {r1, r2}
   1dae4:	add	r1, r2, r1
   1dae8:	mov	r2, #1
   1daec:	sub	r1, r1, r0
   1daf0:	ldr	r0, [r6]
   1daf4:	bl	1a68 <fseek@plt>
   1daf8:	ldr	r4, [sp, #12]
   1dafc:	ldr	r0, [r9, #4]
   1db00:	mov	r9, #0
   1db04:	add	r4, r4, #1
   1db08:	cmp	r4, r0
   1db0c:	blt	1da50 <ReadDataSlab2+0xca8>
   1db10:	b	1cdf4 <ReadDataSlab2+0x4c>
   1db14:	mov	r1, r0
   1db18:	ldr	r0, [r6]
   1db1c:	ldr	r8, [r8, #4]
   1db20:	str	r1, [sp, #8]
   1db24:	str	r2, [sp, #12]
   1db28:	bl	1858 <ftell@plt>
   1db2c:	cmn	r0, #1
   1db30:	beq	1dd84 <ReadDataSlab2+0xfdc>
   1db34:	ldr	r0, [fp, #12]
   1db38:	ldr	r1, [sp, #16]
   1db3c:	mov	r2, #1
   1db40:	ldr	r0, [r0, #4]
   1db44:	mul	r0, r0, r1
   1db48:	ldr	r1, [r7]
   1db4c:	mul	r1, r0, r1
   1db50:	ldr	r0, [r6]
   1db54:	bl	1a68 <fseek@plt>
   1db58:	ldr	r0, [r4, #4]
   1db5c:	cmp	r0, #1
   1db60:	blt	1cdf4 <ReadDataSlab2+0x4c>
   1db64:	ldr	r0, [sp, #12]
   1db68:	ldr	r1, [sp, #16]
   1db6c:	mov	r4, #0
   1db70:	sub	r0, r0, #1
   1db74:	mul	r7, r0, r1
   1db78:	mul	r0, r8, r1
   1db7c:	ldr	r1, [sp, #8]
   1db80:	mul	r0, r0, r1
   1db84:	str	r0, [sp, #4]
   1db88:	ldr	r0, [r6]
   1db8c:	bl	1858 <ftell@plt>
   1db90:	cmn	r0, #1
   1db94:	beq	1dd84 <ReadDataSlab2+0xfdc>
   1db98:	str	r0, [sp, #8]
   1db9c:	ldr	r0, [fp, #12]
   1dba0:	ldr	r1, [sp, #16]
   1dba4:	mov	r2, #1
   1dba8:	str	r4, [sp, #12]
   1dbac:	ldr	r0, [r0]
   1dbb0:	mul	r1, r0, r1
   1dbb4:	ldr	r0, [r6]
   1dbb8:	bl	1a68 <fseek@plt>
   1dbbc:	ldr	r9, [fp, #20]
   1dbc0:	ldr	r0, [r9]
   1dbc4:	cmp	r0, #1
   1dbc8:	blt	1dc08 <ReadDataSlab2+0xe60>
   1dbcc:	mov	r8, #0
   1dbd0:	mov	r0, r6
   1dbd4:	mov	r1, r5
   1dbd8:	mov	r2, sl
   1dbdc:	mov	r3, #1
   1dbe0:	bl	9814 <ReadUInt64Data>
   1dbe4:	ldr	r0, [r6]
   1dbe8:	mov	r1, r7
   1dbec:	mov	r2, #1
   1dbf0:	bl	1a68 <fseek@plt>
   1dbf4:	ldr	r0, [r9]
   1dbf8:	add	r8, r8, #1
   1dbfc:	add	r5, r5, #8
   1dc00:	cmp	r8, r0
   1dc04:	blt	1dbd0 <ReadDataSlab2+0xe28>
   1dc08:	ldr	r0, [r6]
   1dc0c:	bl	1858 <ftell@plt>
   1dc10:	cmn	r0, #1
   1dc14:	beq	1dd84 <ReadDataSlab2+0xfdc>
   1dc18:	ldmib	sp, {r1, r2}
   1dc1c:	add	r1, r2, r1
   1dc20:	mov	r2, #1
   1dc24:	sub	r1, r1, r0
   1dc28:	ldr	r0, [r6]
   1dc2c:	bl	1a68 <fseek@plt>
   1dc30:	ldr	r4, [sp, #12]
   1dc34:	ldr	r0, [r9, #4]
   1dc38:	mov	r9, #0
   1dc3c:	add	r4, r4, #1
   1dc40:	cmp	r4, r0
   1dc44:	blt	1db88 <ReadDataSlab2+0xde0>
   1dc48:	b	1cdf4 <ReadDataSlab2+0x4c>
   1dc4c:	mov	r1, r0
   1dc50:	ldr	r0, [r6]
   1dc54:	ldr	r8, [r8, #4]
   1dc58:	str	r1, [sp, #8]
   1dc5c:	str	r2, [sp, #12]
   1dc60:	bl	1858 <ftell@plt>
   1dc64:	cmn	r0, #1
   1dc68:	beq	1dd84 <ReadDataSlab2+0xfdc>
   1dc6c:	ldr	r0, [fp, #12]
   1dc70:	ldr	r1, [sp, #16]
   1dc74:	mov	r2, #1
   1dc78:	ldr	r0, [r0, #4]
   1dc7c:	mul	r0, r0, r1
   1dc80:	ldr	r1, [r7]
   1dc84:	mul	r1, r0, r1
   1dc88:	ldr	r0, [r6]
   1dc8c:	bl	1a68 <fseek@plt>
   1dc90:	ldr	r0, [r4, #4]
   1dc94:	cmp	r0, #1
   1dc98:	blt	1cdf4 <ReadDataSlab2+0x4c>
   1dc9c:	ldr	r0, [sp, #12]
   1dca0:	ldr	r1, [sp, #16]
   1dca4:	sub	r0, r0, #1
   1dca8:	mul	r7, r0, r1
   1dcac:	mul	r0, r8, r1
   1dcb0:	ldr	r1, [sp, #8]
   1dcb4:	mov	r8, #0
   1dcb8:	mul	r0, r0, r1
   1dcbc:	str	r0, [sp, #8]
   1dcc0:	ldr	r0, [r6]
   1dcc4:	bl	1858 <ftell@plt>
   1dcc8:	cmn	r0, #1
   1dccc:	beq	1dd84 <ReadDataSlab2+0xfdc>
   1dcd0:	mov	r9, r0
   1dcd4:	ldr	r0, [fp, #12]
   1dcd8:	ldr	r1, [sp, #16]
   1dcdc:	mov	r2, #1
   1dce0:	ldr	r0, [r0]
   1dce4:	mul	r1, r0, r1
   1dce8:	ldr	r0, [r6]
   1dcec:	bl	1a68 <fseek@plt>
   1dcf0:	ldr	r4, [fp, #20]
   1dcf4:	str	r8, [sp, #12]
   1dcf8:	ldr	r0, [r4]
   1dcfc:	cmp	r0, #1
   1dd00:	blt	1dd40 <ReadDataSlab2+0xf98>
   1dd04:	mov	r8, #0
   1dd08:	mov	r0, r6
   1dd0c:	mov	r1, r5
   1dd10:	mov	r2, sl
   1dd14:	mov	r3, #1
   1dd18:	bl	7bbc <ReadInt64Data>
   1dd1c:	ldr	r0, [r6]
   1dd20:	mov	r1, r7
   1dd24:	mov	r2, #1
   1dd28:	bl	1a68 <fseek@plt>
   1dd2c:	ldr	r0, [r4]
   1dd30:	add	r8, r8, #1
   1dd34:	add	r5, r5, #8
   1dd38:	cmp	r8, r0
   1dd3c:	blt	1dd08 <ReadDataSlab2+0xf60>
   1dd40:	ldr	r0, [r6]
   1dd44:	bl	1858 <ftell@plt>
   1dd48:	cmn	r0, #1
   1dd4c:	beq	1dd84 <ReadDataSlab2+0xfdc>
   1dd50:	ldr	r1, [sp, #8]
   1dd54:	mov	r2, #1
   1dd58:	add	r1, r9, r1
   1dd5c:	sub	r1, r1, r0
   1dd60:	ldr	r0, [r6]
   1dd64:	bl	1a68 <fseek@plt>
   1dd68:	ldr	r8, [sp, #12]
   1dd6c:	ldr	r0, [r4, #4]
   1dd70:	mov	r9, #0
   1dd74:	add	r8, r8, #1
   1dd78:	cmp	r8, r0
   1dd7c:	blt	1dcc0 <ReadDataSlab2+0xf18>
   1dd80:	b	1cdf4 <ReadDataSlab2+0x4c>
   1dd84:	ldr	r0, [pc, #12]	; 1dd98 <ReadDataSlab2+0xff0>
   1dd88:	add	r0, pc, r0
   1dd8c:	bl	19cc <Mat_Critical@plt>
   1dd90:	mvn	r9, #0
   1dd94:	b	1cdf4 <ReadDataSlab2+0x4c>
   1dd98:	.word	0x0002bf30

0001dd9c <ReadCompressedDataSlab1>:
   1dd9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dda0:	add	fp, sp, #28
   1dda4:	sub	sp, sp, #68	; 0x44
   1dda8:	mov	r4, r2
   1ddac:	add	r2, sp, #8
   1ddb0:	mov	r6, r0
   1ddb4:	mov	r5, r3
   1ddb8:	vmov.i32	q8, #0	; 0x00000000
   1ddbc:	mov	r0, #52	; 0x34
   1ddc0:	mov	r7, #0
   1ddc4:	mov	r3, r2
   1ddc8:	cmp	r6, #0
   1ddcc:	str	r7, [sp, #56]	; 0x38
   1ddd0:	vst1.64	{d16-d17}, [r3], r0
   1ddd4:	add	r0, r2, #32
   1ddd8:	vst1.64	{d16-d17}, [r0]
   1dddc:	add	r0, r2, #16
   1dde0:	str	r7, [r3]
   1dde4:	vst1.64	{d16-d17}, [r0]
   1dde8:	beq	1e384 <ReadCompressedDataSlab1+0x5e8>
   1ddec:	cmp	r4, #0
   1ddf0:	ldrne	r0, [r6]
   1ddf4:	cmpne	r0, #0
   1ddf8:	beq	1e384 <ReadCompressedDataSlab1+0x5e8>
   1ddfc:	ldr	r9, [fp, #12]
   1de00:	ldr	r8, [fp, #8]
   1de04:	add	r7, sp, #8
   1de08:	mov	r0, r7
   1de0c:	bl	1960 <inflateCopy@plt>
   1de10:	mov	r0, r6
   1de14:	mov	r1, r7
   1de18:	mov	r2, r8
   1de1c:	mov	r3, r9
   1de20:	bl	26a0 <InflateSkipData>
   1de24:	sub	r0, r5, #6
   1de28:	mov	r7, #0
   1de2c:	cmp	r0, #9
   1de30:	bhi	1e37c <ReadCompressedDataSlab1+0x5e0>
   1de34:	ldr	r1, [fp, #16]
   1de38:	mov	r9, r8
   1de3c:	ldr	r8, [fp, #20]
   1de40:	sub	r1, r1, #1
   1de44:	str	r1, [sp, #4]
   1de48:	add	r1, pc, #4
   1de4c:	ldr	r0, [r1, r0, lsl #2]
   1de50:	add	pc, r1, r0
   1de54:	.word	0x00000028
   1de58:	.word	0x0000008c
   1de5c:	.word	0x000000f0
   1de60:	.word	0x00000154
   1de64:	.word	0x000001b8
   1de68:	.word	0x0000021c
   1de6c:	.word	0x00000280
   1de70:	.word	0x000002e4
   1de74:	.word	0x00000348
   1de78:	.word	0x000003ac
   1de7c:	ldr	r0, [sp, #4]
   1de80:	cmp	r0, #0
   1de84:	beq	1e264 <ReadCompressedDataSlab1+0x4c8>
   1de88:	cmp	r8, #1
   1de8c:	blt	1e37c <ReadCompressedDataSlab1+0x5e0>
   1de90:	mov	r7, #0
   1de94:	add	sl, sp, #8
   1de98:	mov	r0, #1
   1de9c:	mov	r1, sl
   1dea0:	mov	r2, r4
   1dea4:	mov	r3, r9
   1dea8:	str	r0, [sp]
   1deac:	mov	r0, r6
   1deb0:	bl	4c7c <ReadCompressedDoubleData>
   1deb4:	ldr	r3, [sp, #4]
   1deb8:	mov	r5, r0
   1debc:	mov	r0, r6
   1dec0:	mov	r1, sl
   1dec4:	mov	r2, r9
   1dec8:	bl	26a0 <InflateSkipData>
   1decc:	add	r7, r5, r7
   1ded0:	subs	r8, r8, #1
   1ded4:	add	r4, r4, #8
   1ded8:	bne	1de98 <ReadCompressedDataSlab1+0xfc>
   1dedc:	b	1e37c <ReadCompressedDataSlab1+0x5e0>
   1dee0:	ldr	r0, [sp, #4]
   1dee4:	cmp	r0, #0
   1dee8:	beq	1e280 <ReadCompressedDataSlab1+0x4e4>
   1deec:	cmp	r8, #1
   1def0:	blt	1e37c <ReadCompressedDataSlab1+0x5e0>
   1def4:	mov	r7, #0
   1def8:	add	sl, sp, #8
   1defc:	mov	r0, #1
   1df00:	mov	r1, sl
   1df04:	mov	r2, r4
   1df08:	mov	r3, r9
   1df0c:	str	r0, [sp]
   1df10:	mov	r0, r6
   1df14:	bl	7620 <ReadCompressedSingleData>
   1df18:	ldr	r3, [sp, #4]
   1df1c:	mov	r5, r0
   1df20:	mov	r0, r6
   1df24:	mov	r1, sl
   1df28:	mov	r2, r9
   1df2c:	bl	26a0 <InflateSkipData>
   1df30:	add	r7, r5, r7
   1df34:	subs	r8, r8, #1
   1df38:	add	r4, r4, #4
   1df3c:	bne	1defc <ReadCompressedDataSlab1+0x160>
   1df40:	b	1e37c <ReadCompressedDataSlab1+0x5e0>
   1df44:	ldr	r0, [sp, #4]
   1df48:	cmp	r0, #0
   1df4c:	beq	1e29c <ReadCompressedDataSlab1+0x500>
   1df50:	cmp	r8, #1
   1df54:	blt	1e37c <ReadCompressedDataSlab1+0x5e0>
   1df58:	mov	r7, #0
   1df5c:	mov	r0, #1
   1df60:	add	sl, sp, #8
   1df64:	mov	r2, r4
   1df68:	mov	r3, r9
   1df6c:	str	r0, [sp]
   1df70:	mov	r0, r6
   1df74:	mov	r1, sl
   1df78:	bl	13168 <ReadCompressedInt8Data>
   1df7c:	ldr	r3, [sp, #4]
   1df80:	mov	r5, r0
   1df84:	mov	r0, r6
   1df88:	mov	r1, sl
   1df8c:	mov	r2, r9
   1df90:	bl	26a0 <InflateSkipData>
   1df94:	add	r7, r5, r7
   1df98:	subs	r8, r8, #1
   1df9c:	add	r4, r4, #1
   1dfa0:	bne	1df5c <ReadCompressedDataSlab1+0x1c0>
   1dfa4:	b	1e37c <ReadCompressedDataSlab1+0x5e0>
   1dfa8:	ldr	r0, [sp, #4]
   1dfac:	cmp	r0, #0
   1dfb0:	beq	1e2b8 <ReadCompressedDataSlab1+0x51c>
   1dfb4:	cmp	r8, #1
   1dfb8:	blt	1e37c <ReadCompressedDataSlab1+0x5e0>
   1dfbc:	mov	r7, #0
   1dfc0:	mov	r0, #1
   1dfc4:	add	sl, sp, #8
   1dfc8:	mov	r2, r4
   1dfcc:	mov	r3, r9
   1dfd0:	str	r0, [sp]
   1dfd4:	mov	r0, r6
   1dfd8:	mov	r1, sl
   1dfdc:	bl	14b0c <ReadCompressedUInt8Data>
   1dfe0:	ldr	r3, [sp, #4]
   1dfe4:	mov	r5, r0
   1dfe8:	mov	r0, r6
   1dfec:	mov	r1, sl
   1dff0:	mov	r2, r9
   1dff4:	bl	26a0 <InflateSkipData>
   1dff8:	add	r7, r5, r7
   1dffc:	subs	r8, r8, #1
   1e000:	add	r4, r4, #1
   1e004:	bne	1dfc0 <ReadCompressedDataSlab1+0x224>
   1e008:	b	1e37c <ReadCompressedDataSlab1+0x5e0>
   1e00c:	ldr	r0, [sp, #4]
   1e010:	cmp	r0, #0
   1e014:	beq	1e2d4 <ReadCompressedDataSlab1+0x538>
   1e018:	cmp	r8, #1
   1e01c:	blt	1e37c <ReadCompressedDataSlab1+0x5e0>
   1e020:	mov	r7, #0
   1e024:	add	sl, sp, #8
   1e028:	mov	r0, #1
   1e02c:	mov	r1, sl
   1e030:	mov	r2, r4
   1e034:	mov	r3, r9
   1e038:	str	r0, [sp]
   1e03c:	mov	r0, r6
   1e040:	bl	fda4 <ReadCompressedInt16Data>
   1e044:	ldr	r3, [sp, #4]
   1e048:	mov	r5, r0
   1e04c:	mov	r0, r6
   1e050:	mov	r1, sl
   1e054:	mov	r2, r9
   1e058:	bl	26a0 <InflateSkipData>
   1e05c:	add	r7, r5, r7
   1e060:	subs	r8, r8, #1
   1e064:	add	r4, r4, #2
   1e068:	bne	1e028 <ReadCompressedDataSlab1+0x28c>
   1e06c:	b	1e37c <ReadCompressedDataSlab1+0x5e0>
   1e070:	ldr	r0, [sp, #4]
   1e074:	cmp	r0, #0
   1e078:	beq	1e2f0 <ReadCompressedDataSlab1+0x554>
   1e07c:	cmp	r8, #1
   1e080:	blt	1e37c <ReadCompressedDataSlab1+0x5e0>
   1e084:	mov	r7, #0
   1e088:	add	sl, sp, #8
   1e08c:	mov	r0, #1
   1e090:	mov	r1, sl
   1e094:	mov	r2, r4
   1e098:	mov	r3, r9
   1e09c:	str	r0, [sp]
   1e0a0:	mov	r0, r6
   1e0a4:	bl	117c4 <ReadCompressedUInt16Data>
   1e0a8:	ldr	r3, [sp, #4]
   1e0ac:	mov	r5, r0
   1e0b0:	mov	r0, r6
   1e0b4:	mov	r1, sl
   1e0b8:	mov	r2, r9
   1e0bc:	bl	26a0 <InflateSkipData>
   1e0c0:	add	r7, r5, r7
   1e0c4:	subs	r8, r8, #1
   1e0c8:	add	r4, r4, #2
   1e0cc:	bne	1e08c <ReadCompressedDataSlab1+0x2f0>
   1e0d0:	b	1e37c <ReadCompressedDataSlab1+0x5e0>
   1e0d4:	ldr	r0, [sp, #4]
   1e0d8:	cmp	r0, #0
   1e0dc:	beq	1e30c <ReadCompressedDataSlab1+0x570>
   1e0e0:	cmp	r8, #1
   1e0e4:	blt	1e37c <ReadCompressedDataSlab1+0x5e0>
   1e0e8:	mov	r7, #0
   1e0ec:	add	sl, sp, #8
   1e0f0:	mov	r0, #1
   1e0f4:	mov	r1, sl
   1e0f8:	mov	r2, r4
   1e0fc:	mov	r3, r9
   1e100:	str	r0, [sp]
   1e104:	mov	r0, r6
   1e108:	bl	c964 <ReadCompressedInt32Data>
   1e10c:	ldr	r3, [sp, #4]
   1e110:	mov	r5, r0
   1e114:	mov	r0, r6
   1e118:	mov	r1, sl
   1e11c:	mov	r2, r9
   1e120:	bl	26a0 <InflateSkipData>
   1e124:	add	r7, r5, r7
   1e128:	subs	r8, r8, #1
   1e12c:	add	r4, r4, #4
   1e130:	bne	1e0f0 <ReadCompressedDataSlab1+0x354>
   1e134:	b	1e37c <ReadCompressedDataSlab1+0x5e0>
   1e138:	ldr	r0, [sp, #4]
   1e13c:	cmp	r0, #0
   1e140:	beq	1e328 <ReadCompressedDataSlab1+0x58c>
   1e144:	cmp	r8, #1
   1e148:	blt	1e37c <ReadCompressedDataSlab1+0x5e0>
   1e14c:	mov	r7, #0
   1e150:	add	sl, sp, #8
   1e154:	mov	r0, #1
   1e158:	mov	r1, sl
   1e15c:	mov	r2, r4
   1e160:	mov	r3, r9
   1e164:	str	r0, [sp]
   1e168:	mov	r0, r6
   1e16c:	bl	e384 <ReadCompressedUInt32Data>
   1e170:	ldr	r3, [sp, #4]
   1e174:	mov	r5, r0
   1e178:	mov	r0, r6
   1e17c:	mov	r1, sl
   1e180:	mov	r2, r9
   1e184:	bl	26a0 <InflateSkipData>
   1e188:	add	r7, r5, r7
   1e18c:	subs	r8, r8, #1
   1e190:	add	r4, r4, #4
   1e194:	bne	1e154 <ReadCompressedDataSlab1+0x3b8>
   1e198:	b	1e37c <ReadCompressedDataSlab1+0x5e0>
   1e19c:	ldr	r0, [sp, #4]
   1e1a0:	cmp	r0, #0
   1e1a4:	beq	1e344 <ReadCompressedDataSlab1+0x5a8>
   1e1a8:	cmp	r8, #1
   1e1ac:	blt	1e37c <ReadCompressedDataSlab1+0x5e0>
   1e1b0:	mov	r7, #0
   1e1b4:	add	sl, sp, #8
   1e1b8:	mov	r0, #1
   1e1bc:	mov	r1, sl
   1e1c0:	mov	r2, r4
   1e1c4:	mov	r3, r9
   1e1c8:	str	r0, [sp]
   1e1cc:	mov	r0, r6
   1e1d0:	bl	927c <ReadCompressedInt64Data>
   1e1d4:	ldr	r3, [sp, #4]
   1e1d8:	mov	r5, r0
   1e1dc:	mov	r0, r6
   1e1e0:	mov	r1, sl
   1e1e4:	mov	r2, r9
   1e1e8:	bl	26a0 <InflateSkipData>
   1e1ec:	add	r7, r5, r7
   1e1f0:	subs	r8, r8, #1
   1e1f4:	add	r4, r4, #8
   1e1f8:	bne	1e1b8 <ReadCompressedDataSlab1+0x41c>
   1e1fc:	b	1e37c <ReadCompressedDataSlab1+0x5e0>
   1e200:	ldr	r0, [sp, #4]
   1e204:	cmp	r0, #0
   1e208:	beq	1e360 <ReadCompressedDataSlab1+0x5c4>
   1e20c:	cmp	r8, #1
   1e210:	blt	1e37c <ReadCompressedDataSlab1+0x5e0>
   1e214:	mov	r7, #0
   1e218:	add	sl, sp, #8
   1e21c:	mov	r0, #1
   1e220:	mov	r1, sl
   1e224:	mov	r2, r4
   1e228:	mov	r3, r9
   1e22c:	str	r0, [sp]
   1e230:	mov	r0, r6
   1e234:	bl	aed4 <ReadCompressedUInt64Data>
   1e238:	ldr	r3, [sp, #4]
   1e23c:	mov	r5, r0
   1e240:	mov	r0, r6
   1e244:	mov	r1, sl
   1e248:	mov	r2, r9
   1e24c:	bl	26a0 <InflateSkipData>
   1e250:	add	r7, r5, r7
   1e254:	subs	r8, r8, #1
   1e258:	add	r4, r4, #8
   1e25c:	bne	1e21c <ReadCompressedDataSlab1+0x480>
   1e260:	b	1e37c <ReadCompressedDataSlab1+0x5e0>
   1e264:	add	r1, sp, #8
   1e268:	mov	r0, r6
   1e26c:	mov	r2, r4
   1e270:	mov	r3, r9
   1e274:	str	r8, [sp]
   1e278:	bl	4c7c <ReadCompressedDoubleData>
   1e27c:	b	1e378 <ReadCompressedDataSlab1+0x5dc>
   1e280:	add	r1, sp, #8
   1e284:	mov	r0, r6
   1e288:	mov	r2, r4
   1e28c:	mov	r3, r9
   1e290:	str	r8, [sp]
   1e294:	bl	7620 <ReadCompressedSingleData>
   1e298:	b	1e378 <ReadCompressedDataSlab1+0x5dc>
   1e29c:	add	r1, sp, #8
   1e2a0:	mov	r0, r6
   1e2a4:	mov	r2, r4
   1e2a8:	mov	r3, r9
   1e2ac:	str	r8, [sp]
   1e2b0:	bl	13168 <ReadCompressedInt8Data>
   1e2b4:	b	1e378 <ReadCompressedDataSlab1+0x5dc>
   1e2b8:	add	r1, sp, #8
   1e2bc:	mov	r0, r6
   1e2c0:	mov	r2, r4
   1e2c4:	mov	r3, r9
   1e2c8:	str	r8, [sp]
   1e2cc:	bl	14b0c <ReadCompressedUInt8Data>
   1e2d0:	b	1e378 <ReadCompressedDataSlab1+0x5dc>
   1e2d4:	add	r1, sp, #8
   1e2d8:	mov	r0, r6
   1e2dc:	mov	r2, r4
   1e2e0:	mov	r3, r9
   1e2e4:	str	r8, [sp]
   1e2e8:	bl	fda4 <ReadCompressedInt16Data>
   1e2ec:	b	1e378 <ReadCompressedDataSlab1+0x5dc>
   1e2f0:	add	r1, sp, #8
   1e2f4:	mov	r0, r6
   1e2f8:	mov	r2, r4
   1e2fc:	mov	r3, r9
   1e300:	str	r8, [sp]
   1e304:	bl	117c4 <ReadCompressedUInt16Data>
   1e308:	b	1e378 <ReadCompressedDataSlab1+0x5dc>
   1e30c:	add	r1, sp, #8
   1e310:	mov	r0, r6
   1e314:	mov	r2, r4
   1e318:	mov	r3, r9
   1e31c:	str	r8, [sp]
   1e320:	bl	c964 <ReadCompressedInt32Data>
   1e324:	b	1e378 <ReadCompressedDataSlab1+0x5dc>
   1e328:	add	r1, sp, #8
   1e32c:	mov	r0, r6
   1e330:	mov	r2, r4
   1e334:	mov	r3, r9
   1e338:	str	r8, [sp]
   1e33c:	bl	e384 <ReadCompressedUInt32Data>
   1e340:	b	1e378 <ReadCompressedDataSlab1+0x5dc>
   1e344:	add	r1, sp, #8
   1e348:	mov	r0, r6
   1e34c:	mov	r2, r4
   1e350:	mov	r3, r9
   1e354:	str	r8, [sp]
   1e358:	bl	927c <ReadCompressedInt64Data>
   1e35c:	b	1e378 <ReadCompressedDataSlab1+0x5dc>
   1e360:	add	r1, sp, #8
   1e364:	mov	r0, r6
   1e368:	mov	r2, r4
   1e36c:	mov	r3, r9
   1e370:	str	r8, [sp]
   1e374:	bl	aed4 <ReadCompressedUInt64Data>
   1e378:	mov	r7, r0
   1e37c:	add	r0, sp, #8
   1e380:	bl	1954 <inflateEnd@plt>
   1e384:	mov	r0, r7
   1e388:	sub	sp, fp, #28
   1e38c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001e390 <ReadCompressedDataSlab2>:
   1e390:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e394:	add	fp, sp, #28
   1e398:	sub	sp, sp, #84	; 0x54
   1e39c:	mov	r4, r2
   1e3a0:	add	r2, sp, #24
   1e3a4:	mov	r5, r0
   1e3a8:	mov	r6, r3
   1e3ac:	vmov.i32	q8, #0	; 0x00000000
   1e3b0:	mov	r0, #52	; 0x34
   1e3b4:	mov	r3, r2
   1e3b8:	cmp	r5, #0
   1e3bc:	vst1.64	{d16-d17}, [r3], r0
   1e3c0:	mov	r0, #0
   1e3c4:	cmpne	r4, #0
   1e3c8:	str	r0, [r3]
   1e3cc:	add	r3, r2, #32
   1e3d0:	add	r2, r2, #16
   1e3d4:	str	r0, [sp, #72]	; 0x48
   1e3d8:	vst1.64	{d16-d17}, [r3]
   1e3dc:	vst1.64	{d16-d17}, [r2]
   1e3e0:	beq	1fe2c <ReadCompressedDataSlab2+0x1a9c>
   1e3e4:	ldr	r7, [fp, #24]
   1e3e8:	cmp	r7, #0
   1e3ec:	ldrne	r0, [fp, #20]
   1e3f0:	cmpne	r0, #0
   1e3f4:	beq	1fe2c <ReadCompressedDataSlab2+0x1a9c>
   1e3f8:	ldr	r0, [fp, #16]
   1e3fc:	cmp	r0, #0
   1e400:	ldrne	r0, [r5]
   1e404:	cmpne	r0, #0
   1e408:	beq	1fe2c <ReadCompressedDataSlab2+0x1a9c>
   1e40c:	add	r0, sp, #24
   1e410:	bl	1960 <inflateCopy@plt>
   1e414:	sub	r0, r6, #6
   1e418:	cmp	r0, #9
   1e41c:	bhi	1fe24 <ReadCompressedDataSlab2+0x1a94>
   1e420:	str	r5, [sp, #20]
   1e424:	add	r1, pc, #16
   1e428:	ldr	r2, [fp, #12]
   1e42c:	ldr	r8, [fp, #8]
   1e430:	mov	sl, r7
   1e434:	ldr	r0, [r1, r0, lsl #2]
   1e438:	add	pc, r1, r0
   1e43c:	.word	0x00000028
   1e440:	.word	0x000000b8
   1e444:	.word	0x00000148
   1e448:	.word	0x000001d8
   1e44c:	.word	0x00000268
   1e450:	.word	0x000002f8
   1e454:	.word	0x00000388
   1e458:	.word	0x00000418
   1e45c:	.word	0x00000538
   1e460:	.word	0x000004a8
   1e464:	ldr	r0, [fp, #16]
   1e468:	ldr	r7, [r2]
   1e46c:	ldr	r9, [fp, #20]
   1e470:	ldr	r5, [sp, #20]
   1e474:	add	r1, sp, #24
   1e478:	mov	r2, r8
   1e47c:	ldr	r0, [r0, #4]
   1e480:	ldr	r6, [r9, #4]
   1e484:	mul	r3, r0, r7
   1e488:	ldr	r0, [r9]
   1e48c:	str	r0, [sp, #12]
   1e490:	mov	r0, r5
   1e494:	bl	26a0 <InflateSkipData>
   1e498:	sub	r0, r6, #1
   1e49c:	mul	r3, r0, r7
   1e4a0:	ldr	r0, [r9]
   1e4a4:	cmp	r0, #1
   1e4a8:	bne	1ea04 <ReadCompressedDataSlab2+0x674>
   1e4ac:	ldr	r2, [fp, #12]
   1e4b0:	ldr	r0, [sl]
   1e4b4:	ldr	r1, [r2]
   1e4b8:	cmp	r0, r1
   1e4bc:	bne	1f6d0 <ReadCompressedDataSlab2+0x1340>
   1e4c0:	ldr	r1, [fp, #20]
   1e4c4:	ldr	r1, [r1, #4]
   1e4c8:	cmp	r1, #1
   1e4cc:	bne	1f6d0 <ReadCompressedDataSlab2+0x1340>
   1e4d0:	ldr	r1, [sl, #4]
   1e4d4:	mov	r2, r4
   1e4d8:	mov	r3, r8
   1e4dc:	mul	r0, r1, r0
   1e4e0:	add	r1, sp, #24
   1e4e4:	str	r0, [sp]
   1e4e8:	mov	r0, r5
   1e4ec:	bl	4c7c <ReadCompressedDoubleData>
   1e4f0:	b	1fe24 <ReadCompressedDataSlab2+0x1a94>
   1e4f4:	ldr	r0, [fp, #16]
   1e4f8:	ldr	r7, [r2]
   1e4fc:	ldr	r9, [fp, #20]
   1e500:	ldr	r5, [sp, #20]
   1e504:	add	r1, sp, #24
   1e508:	mov	r2, r8
   1e50c:	ldr	r0, [r0, #4]
   1e510:	ldr	r6, [r9, #4]
   1e514:	mul	r3, r0, r7
   1e518:	ldr	r0, [r9]
   1e51c:	str	r0, [sp, #12]
   1e520:	mov	r0, r5
   1e524:	bl	26a0 <InflateSkipData>
   1e528:	sub	r0, r6, #1
   1e52c:	mul	r3, r0, r7
   1e530:	ldr	r0, [r9]
   1e534:	cmp	r0, #1
   1e538:	bne	1eb4c <ReadCompressedDataSlab2+0x7bc>
   1e53c:	ldr	r2, [fp, #12]
   1e540:	ldr	r0, [sl]
   1e544:	ldr	r1, [r2]
   1e548:	cmp	r0, r1
   1e54c:	bne	1f78c <ReadCompressedDataSlab2+0x13fc>
   1e550:	ldr	r1, [fp, #20]
   1e554:	ldr	r1, [r1, #4]
   1e558:	cmp	r1, #1
   1e55c:	bne	1f78c <ReadCompressedDataSlab2+0x13fc>
   1e560:	ldr	r1, [sl, #4]
   1e564:	mov	r2, r4
   1e568:	mov	r3, r8
   1e56c:	mul	r0, r1, r0
   1e570:	add	r1, sp, #24
   1e574:	str	r0, [sp]
   1e578:	mov	r0, r5
   1e57c:	bl	7620 <ReadCompressedSingleData>
   1e580:	b	1fe24 <ReadCompressedDataSlab2+0x1a94>
   1e584:	ldr	r0, [fp, #16]
   1e588:	ldr	r7, [r2]
   1e58c:	ldr	r9, [fp, #20]
   1e590:	ldr	r5, [sp, #20]
   1e594:	add	r1, sp, #24
   1e598:	mov	r2, r8
   1e59c:	ldr	r0, [r0, #4]
   1e5a0:	ldr	r6, [r9, #4]
   1e5a4:	mul	r3, r0, r7
   1e5a8:	ldr	r0, [r9]
   1e5ac:	str	r0, [sp, #12]
   1e5b0:	mov	r0, r5
   1e5b4:	bl	26a0 <InflateSkipData>
   1e5b8:	sub	r0, r6, #1
   1e5bc:	mul	r3, r0, r7
   1e5c0:	ldr	r0, [r9]
   1e5c4:	cmp	r0, #1
   1e5c8:	bne	1ec94 <ReadCompressedDataSlab2+0x904>
   1e5cc:	ldr	r2, [fp, #12]
   1e5d0:	ldr	r0, [sl]
   1e5d4:	ldr	r1, [r2]
   1e5d8:	cmp	r0, r1
   1e5dc:	bne	1f848 <ReadCompressedDataSlab2+0x14b8>
   1e5e0:	ldr	r1, [fp, #20]
   1e5e4:	ldr	r1, [r1, #4]
   1e5e8:	cmp	r1, #1
   1e5ec:	bne	1f848 <ReadCompressedDataSlab2+0x14b8>
   1e5f0:	ldr	r1, [sl, #4]
   1e5f4:	mov	r2, r4
   1e5f8:	mov	r3, r8
   1e5fc:	mul	r0, r1, r0
   1e600:	add	r1, sp, #24
   1e604:	str	r0, [sp]
   1e608:	mov	r0, r5
   1e60c:	bl	13168 <ReadCompressedInt8Data>
   1e610:	b	1fe24 <ReadCompressedDataSlab2+0x1a94>
   1e614:	ldr	r0, [fp, #16]
   1e618:	ldr	r7, [r2]
   1e61c:	ldr	r9, [fp, #20]
   1e620:	ldr	r5, [sp, #20]
   1e624:	add	r1, sp, #24
   1e628:	mov	r2, r8
   1e62c:	ldr	r0, [r0, #4]
   1e630:	ldr	r6, [r9, #4]
   1e634:	mul	r3, r0, r7
   1e638:	ldr	r0, [r9]
   1e63c:	str	r0, [sp, #12]
   1e640:	mov	r0, r5
   1e644:	bl	26a0 <InflateSkipData>
   1e648:	sub	r0, r6, #1
   1e64c:	mul	r3, r0, r7
   1e650:	ldr	r0, [r9]
   1e654:	cmp	r0, #1
   1e658:	bne	1ede0 <ReadCompressedDataSlab2+0xa50>
   1e65c:	ldr	r2, [fp, #12]
   1e660:	ldr	r0, [sl]
   1e664:	ldr	r1, [r2]
   1e668:	cmp	r0, r1
   1e66c:	bne	1f904 <ReadCompressedDataSlab2+0x1574>
   1e670:	ldr	r1, [fp, #20]
   1e674:	ldr	r1, [r1, #4]
   1e678:	cmp	r1, #1
   1e67c:	bne	1f904 <ReadCompressedDataSlab2+0x1574>
   1e680:	ldr	r1, [sl, #4]
   1e684:	mov	r2, r4
   1e688:	mov	r3, r8
   1e68c:	mul	r0, r1, r0
   1e690:	add	r1, sp, #24
   1e694:	str	r0, [sp]
   1e698:	mov	r0, r5
   1e69c:	bl	14b0c <ReadCompressedUInt8Data>
   1e6a0:	b	1fe24 <ReadCompressedDataSlab2+0x1a94>
   1e6a4:	ldr	r0, [fp, #16]
   1e6a8:	ldr	r7, [r2]
   1e6ac:	ldr	r9, [fp, #20]
   1e6b0:	ldr	r5, [sp, #20]
   1e6b4:	add	r1, sp, #24
   1e6b8:	mov	r2, r8
   1e6bc:	ldr	r0, [r0, #4]
   1e6c0:	ldr	r6, [r9, #4]
   1e6c4:	mul	r3, r0, r7
   1e6c8:	ldr	r0, [r9]
   1e6cc:	str	r0, [sp, #12]
   1e6d0:	mov	r0, r5
   1e6d4:	bl	26a0 <InflateSkipData>
   1e6d8:	sub	r0, r6, #1
   1e6dc:	mul	r3, r0, r7
   1e6e0:	ldr	r0, [r9]
   1e6e4:	cmp	r0, #1
   1e6e8:	bne	1ef2c <ReadCompressedDataSlab2+0xb9c>
   1e6ec:	ldr	r2, [fp, #12]
   1e6f0:	ldr	r0, [sl]
   1e6f4:	ldr	r1, [r2]
   1e6f8:	cmp	r0, r1
   1e6fc:	bne	1f9c0 <ReadCompressedDataSlab2+0x1630>
   1e700:	ldr	r1, [fp, #20]
   1e704:	ldr	r1, [r1, #4]
   1e708:	cmp	r1, #1
   1e70c:	bne	1f9c0 <ReadCompressedDataSlab2+0x1630>
   1e710:	ldr	r1, [sl, #4]
   1e714:	mov	r2, r4
   1e718:	mov	r3, r8
   1e71c:	mul	r0, r1, r0
   1e720:	add	r1, sp, #24
   1e724:	str	r0, [sp]
   1e728:	mov	r0, r5
   1e72c:	bl	fda4 <ReadCompressedInt16Data>
   1e730:	b	1fe24 <ReadCompressedDataSlab2+0x1a94>
   1e734:	ldr	r0, [fp, #16]
   1e738:	ldr	r7, [r2]
   1e73c:	ldr	r9, [fp, #20]
   1e740:	ldr	r5, [sp, #20]
   1e744:	add	r1, sp, #24
   1e748:	mov	r2, r8
   1e74c:	ldr	r0, [r0, #4]
   1e750:	ldr	r6, [r9, #4]
   1e754:	mul	r3, r0, r7
   1e758:	ldr	r0, [r9]
   1e75c:	str	r0, [sp, #16]
   1e760:	mov	r0, r5
   1e764:	bl	26a0 <InflateSkipData>
   1e768:	sub	r0, r6, #1
   1e76c:	mul	r3, r0, r7
   1e770:	ldr	r0, [r9]
   1e774:	cmp	r0, #1
   1e778:	bne	1f074 <ReadCompressedDataSlab2+0xce4>
   1e77c:	ldr	r2, [fp, #12]
   1e780:	ldr	r0, [sl]
   1e784:	ldr	r1, [r2]
   1e788:	cmp	r0, r1
   1e78c:	bne	1fa7c <ReadCompressedDataSlab2+0x16ec>
   1e790:	ldr	r1, [fp, #20]
   1e794:	ldr	r1, [r1, #4]
   1e798:	cmp	r1, #1
   1e79c:	bne	1fa7c <ReadCompressedDataSlab2+0x16ec>
   1e7a0:	ldr	r1, [sl, #4]
   1e7a4:	mov	r2, r4
   1e7a8:	mov	r3, r8
   1e7ac:	mul	r0, r1, r0
   1e7b0:	add	r1, sp, #24
   1e7b4:	str	r0, [sp]
   1e7b8:	mov	r0, r5
   1e7bc:	bl	117c4 <ReadCompressedUInt16Data>
   1e7c0:	b	1fe24 <ReadCompressedDataSlab2+0x1a94>
   1e7c4:	ldr	r0, [fp, #16]
   1e7c8:	ldr	r7, [r2]
   1e7cc:	ldr	r9, [fp, #20]
   1e7d0:	ldr	r5, [sp, #20]
   1e7d4:	add	r1, sp, #24
   1e7d8:	mov	r2, r8
   1e7dc:	ldr	r0, [r0, #4]
   1e7e0:	ldr	r6, [r9, #4]
   1e7e4:	mul	r3, r0, r7
   1e7e8:	ldr	r0, [r9]
   1e7ec:	str	r0, [sp, #12]
   1e7f0:	mov	r0, r5
   1e7f4:	bl	26a0 <InflateSkipData>
   1e7f8:	sub	r0, r6, #1
   1e7fc:	mul	r3, r0, r7
   1e800:	ldr	r0, [r9]
   1e804:	cmp	r0, #1
   1e808:	bne	1f1c8 <ReadCompressedDataSlab2+0xe38>
   1e80c:	ldr	r2, [fp, #12]
   1e810:	ldr	r0, [sl]
   1e814:	ldr	r1, [r2]
   1e818:	cmp	r0, r1
   1e81c:	bne	1fb38 <ReadCompressedDataSlab2+0x17a8>
   1e820:	ldr	r1, [fp, #20]
   1e824:	ldr	r1, [r1, #4]
   1e828:	cmp	r1, #1
   1e82c:	bne	1fb38 <ReadCompressedDataSlab2+0x17a8>
   1e830:	ldr	r1, [sl, #4]
   1e834:	mov	r2, r4
   1e838:	mov	r3, r8
   1e83c:	mul	r0, r1, r0
   1e840:	add	r1, sp, #24
   1e844:	str	r0, [sp]
   1e848:	mov	r0, r5
   1e84c:	bl	c964 <ReadCompressedInt32Data>
   1e850:	b	1fe24 <ReadCompressedDataSlab2+0x1a94>
   1e854:	ldr	r0, [fp, #16]
   1e858:	ldr	r7, [r2]
   1e85c:	ldr	r9, [fp, #20]
   1e860:	ldr	r5, [sp, #20]
   1e864:	add	r1, sp, #24
   1e868:	mov	r2, r8
   1e86c:	ldr	r0, [r0, #4]
   1e870:	ldr	r6, [r9, #4]
   1e874:	mul	r3, r0, r7
   1e878:	ldr	r0, [r9]
   1e87c:	str	r0, [sp, #12]
   1e880:	mov	r0, r5
   1e884:	bl	26a0 <InflateSkipData>
   1e888:	sub	r0, r6, #1
   1e88c:	mul	r3, r0, r7
   1e890:	ldr	r0, [r9]
   1e894:	cmp	r0, #1
   1e898:	bne	1f310 <ReadCompressedDataSlab2+0xf80>
   1e89c:	ldr	r2, [fp, #12]
   1e8a0:	ldr	r0, [sl]
   1e8a4:	ldr	r1, [r2]
   1e8a8:	cmp	r0, r1
   1e8ac:	bne	1fbf4 <ReadCompressedDataSlab2+0x1864>
   1e8b0:	ldr	r1, [fp, #20]
   1e8b4:	ldr	r1, [r1, #4]
   1e8b8:	cmp	r1, #1
   1e8bc:	bne	1fbf4 <ReadCompressedDataSlab2+0x1864>
   1e8c0:	ldr	r1, [sl, #4]
   1e8c4:	mov	r2, r4
   1e8c8:	mov	r3, r8
   1e8cc:	mul	r0, r1, r0
   1e8d0:	add	r1, sp, #24
   1e8d4:	str	r0, [sp]
   1e8d8:	mov	r0, r5
   1e8dc:	bl	e384 <ReadCompressedUInt32Data>
   1e8e0:	b	1fe24 <ReadCompressedDataSlab2+0x1a94>
   1e8e4:	ldr	r0, [fp, #16]
   1e8e8:	ldr	r7, [r2]
   1e8ec:	ldr	r9, [fp, #20]
   1e8f0:	ldr	r5, [sp, #20]
   1e8f4:	add	r1, sp, #24
   1e8f8:	mov	r2, r8
   1e8fc:	ldr	r0, [r0, #4]
   1e900:	ldr	r6, [r9, #4]
   1e904:	mul	r3, r0, r7
   1e908:	ldr	r0, [r9]
   1e90c:	str	r0, [sp, #12]
   1e910:	mov	r0, r5
   1e914:	bl	26a0 <InflateSkipData>
   1e918:	sub	r0, r6, #1
   1e91c:	mul	r3, r0, r7
   1e920:	ldr	r0, [r9]
   1e924:	cmp	r0, #1
   1e928:	bne	1f458 <ReadCompressedDataSlab2+0x10c8>
   1e92c:	ldr	r2, [fp, #12]
   1e930:	ldr	r0, [sl]
   1e934:	ldr	r1, [r2]
   1e938:	cmp	r0, r1
   1e93c:	bne	1fcb0 <ReadCompressedDataSlab2+0x1920>
   1e940:	ldr	r1, [fp, #20]
   1e944:	ldr	r1, [r1, #4]
   1e948:	cmp	r1, #1
   1e94c:	bne	1fcb0 <ReadCompressedDataSlab2+0x1920>
   1e950:	ldr	r1, [sl, #4]
   1e954:	mov	r2, r4
   1e958:	mov	r3, r8
   1e95c:	mul	r0, r1, r0
   1e960:	add	r1, sp, #24
   1e964:	str	r0, [sp]
   1e968:	mov	r0, r5
   1e96c:	bl	aed4 <ReadCompressedUInt64Data>
   1e970:	b	1fe24 <ReadCompressedDataSlab2+0x1a94>
   1e974:	ldr	r0, [fp, #16]
   1e978:	ldr	r7, [r2]
   1e97c:	ldr	r9, [fp, #20]
   1e980:	ldr	r5, [sp, #20]
   1e984:	add	r1, sp, #24
   1e988:	mov	r2, r8
   1e98c:	ldr	r0, [r0, #4]
   1e990:	ldr	r6, [r9, #4]
   1e994:	mul	r3, r0, r7
   1e998:	ldr	r0, [r9]
   1e99c:	str	r0, [sp, #12]
   1e9a0:	mov	r0, r5
   1e9a4:	bl	26a0 <InflateSkipData>
   1e9a8:	sub	r0, r6, #1
   1e9ac:	mul	r3, r0, r7
   1e9b0:	ldr	r0, [r9]
   1e9b4:	cmp	r0, #1
   1e9b8:	bne	1f5a0 <ReadCompressedDataSlab2+0x1210>
   1e9bc:	ldr	r2, [fp, #12]
   1e9c0:	ldr	r0, [sl]
   1e9c4:	ldr	r1, [r2]
   1e9c8:	cmp	r0, r1
   1e9cc:	bne	1fd6c <ReadCompressedDataSlab2+0x19dc>
   1e9d0:	ldr	r1, [fp, #20]
   1e9d4:	ldr	r1, [r1, #4]
   1e9d8:	cmp	r1, #1
   1e9dc:	bne	1fd6c <ReadCompressedDataSlab2+0x19dc>
   1e9e0:	ldr	r1, [sl, #4]
   1e9e4:	mov	r2, r4
   1e9e8:	mov	r3, r8
   1e9ec:	mul	r0, r1, r0
   1e9f0:	add	r1, sp, #24
   1e9f4:	str	r0, [sp]
   1e9f8:	mov	r0, r5
   1e9fc:	bl	927c <ReadCompressedInt64Data>
   1ea00:	b	1fe24 <ReadCompressedDataSlab2+0x1a94>
   1ea04:	ldr	r0, [sl, #4]
   1ea08:	ldr	r9, [fp, #16]
   1ea0c:	cmp	r0, #1
   1ea10:	blt	1fe24 <ReadCompressedDataSlab2+0x1a94>
   1ea14:	ldr	r0, [sp, #12]
   1ea18:	mov	r7, sl
   1ea1c:	mov	r1, #0
   1ea20:	add	r6, sp, #24
   1ea24:	mov	sl, r3
   1ea28:	str	r3, [sp, #16]
   1ea2c:	sub	r0, r0, #1
   1ea30:	str	r0, [sp, #12]
   1ea34:	ldr	r3, [r9]
   1ea38:	str	r1, [sp, #20]
   1ea3c:	mov	r0, r5
   1ea40:	mov	r1, r6
   1ea44:	mov	r2, r8
   1ea48:	bl	26a0 <InflateSkipData>
   1ea4c:	mov	sl, r7
   1ea50:	mov	r0, #1
   1ea54:	mov	r1, r6
   1ea58:	mov	r2, r4
   1ea5c:	mov	r3, r8
   1ea60:	mov	r9, r6
   1ea64:	ldr	sl, [r7]
   1ea68:	str	r0, [sp]
   1ea6c:	mov	r0, r5
   1ea70:	bl	4c7c <ReadCompressedDoubleData>
   1ea74:	add	r4, r4, #8
   1ea78:	cmp	sl, #2
   1ea7c:	blt	1eae0 <ReadCompressedDataSlab2+0x750>
   1ea80:	ldr	r8, [fp, #8]
   1ea84:	ldr	r7, [sp, #12]
   1ea88:	mov	sl, #0
   1ea8c:	mov	r6, r9
   1ea90:	mov	r0, r5
   1ea94:	mov	r1, r6
   1ea98:	mov	r2, r8
   1ea9c:	mov	r3, r7
   1eaa0:	bl	26a0 <InflateSkipData>
   1eaa4:	ldr	r0, [fp, #24]
   1eaa8:	mov	r1, r6
   1eaac:	mov	r2, r4
   1eab0:	mov	r3, r8
   1eab4:	ldr	r9, [r0]
   1eab8:	mov	r0, #1
   1eabc:	str	r0, [sp]
   1eac0:	mov	r0, r5
   1eac4:	bl	4c7c <ReadCompressedDoubleData>
   1eac8:	add	sl, sl, #1
   1eacc:	sub	r0, r9, #1
   1ead0:	add	r4, r4, #8
   1ead4:	cmp	sl, r0
   1ead8:	blt	1ea90 <ReadCompressedDataSlab2+0x700>
   1eadc:	b	1eae8 <ReadCompressedDataSlab2+0x758>
   1eae0:	ldr	r8, [fp, #8]
   1eae4:	mov	r6, r9
   1eae8:	ldr	r7, [fp, #24]
   1eaec:	ldr	r1, [fp, #20]
   1eaf0:	ldr	r0, [fp, #12]
   1eaf4:	ldr	sl, [sp, #16]
   1eaf8:	ldr	r9, [fp, #16]
   1eafc:	ldr	r2, [r7]
   1eb00:	ldr	r1, [r1]
   1eb04:	ldr	r0, [r0]
   1eb08:	sub	r2, r2, #1
   1eb0c:	add	r0, r0, sl
   1eb10:	mul	r1, r2, r1
   1eb14:	mov	r2, r8
   1eb18:	mvn	r1, r1
   1eb1c:	add	r0, r0, r1
   1eb20:	ldr	r1, [r9]
   1eb24:	sub	r3, r0, r1
   1eb28:	mov	r0, r5
   1eb2c:	mov	r1, r6
   1eb30:	bl	26a0 <InflateSkipData>
   1eb34:	ldr	r1, [sp, #20]
   1eb38:	ldr	r0, [r7, #4]
   1eb3c:	add	r1, r1, #1
   1eb40:	cmp	r1, r0
   1eb44:	blt	1ea34 <ReadCompressedDataSlab2+0x6a4>
   1eb48:	b	1fe24 <ReadCompressedDataSlab2+0x1a94>
   1eb4c:	ldr	r0, [sl, #4]
   1eb50:	ldr	r9, [fp, #16]
   1eb54:	cmp	r0, #1
   1eb58:	blt	1fe24 <ReadCompressedDataSlab2+0x1a94>
   1eb5c:	ldr	r0, [sp, #12]
   1eb60:	mov	r7, sl
   1eb64:	mov	r1, #0
   1eb68:	add	r6, sp, #24
   1eb6c:	mov	sl, r3
   1eb70:	str	r3, [sp, #16]
   1eb74:	sub	r0, r0, #1
   1eb78:	str	r0, [sp, #12]
   1eb7c:	ldr	r3, [r9]
   1eb80:	str	r1, [sp, #20]
   1eb84:	mov	r0, r5
   1eb88:	mov	r1, r6
   1eb8c:	mov	r2, r8
   1eb90:	bl	26a0 <InflateSkipData>
   1eb94:	mov	sl, r7
   1eb98:	mov	r0, #1
   1eb9c:	mov	r1, r6
   1eba0:	mov	r2, r4
   1eba4:	mov	r3, r8
   1eba8:	mov	r9, r6
   1ebac:	ldr	sl, [r7]
   1ebb0:	str	r0, [sp]
   1ebb4:	mov	r0, r5
   1ebb8:	bl	7620 <ReadCompressedSingleData>
   1ebbc:	add	r4, r4, #4
   1ebc0:	cmp	sl, #2
   1ebc4:	blt	1ec28 <ReadCompressedDataSlab2+0x898>
   1ebc8:	ldr	r8, [fp, #8]
   1ebcc:	ldr	r7, [sp, #12]
   1ebd0:	mov	sl, #0
   1ebd4:	mov	r6, r9
   1ebd8:	mov	r0, r5
   1ebdc:	mov	r1, r6
   1ebe0:	mov	r2, r8
   1ebe4:	mov	r3, r7
   1ebe8:	bl	26a0 <InflateSkipData>
   1ebec:	ldr	r0, [fp, #24]
   1ebf0:	mov	r1, r6
   1ebf4:	mov	r2, r4
   1ebf8:	mov	r3, r8
   1ebfc:	ldr	r9, [r0]
   1ec00:	mov	r0, #1
   1ec04:	str	r0, [sp]
   1ec08:	mov	r0, r5
   1ec0c:	bl	7620 <ReadCompressedSingleData>
   1ec10:	add	sl, sl, #1
   1ec14:	sub	r0, r9, #1
   1ec18:	add	r4, r4, #4
   1ec1c:	cmp	sl, r0
   1ec20:	blt	1ebd8 <ReadCompressedDataSlab2+0x848>
   1ec24:	b	1ec30 <ReadCompressedDataSlab2+0x8a0>
   1ec28:	ldr	r8, [fp, #8]
   1ec2c:	mov	r6, r9
   1ec30:	ldr	r7, [fp, #24]
   1ec34:	ldr	r1, [fp, #20]
   1ec38:	ldr	r0, [fp, #12]
   1ec3c:	ldr	sl, [sp, #16]
   1ec40:	ldr	r9, [fp, #16]
   1ec44:	ldr	r2, [r7]
   1ec48:	ldr	r1, [r1]
   1ec4c:	ldr	r0, [r0]
   1ec50:	sub	r2, r2, #1
   1ec54:	add	r0, r0, sl
   1ec58:	mul	r1, r2, r1
   1ec5c:	mov	r2, r8
   1ec60:	mvn	r1, r1
   1ec64:	add	r0, r0, r1
   1ec68:	ldr	r1, [r9]
   1ec6c:	sub	r3, r0, r1
   1ec70:	mov	r0, r5
   1ec74:	mov	r1, r6
   1ec78:	bl	26a0 <InflateSkipData>
   1ec7c:	ldr	r1, [sp, #20]
   1ec80:	ldr	r0, [r7, #4]
   1ec84:	add	r1, r1, #1
   1ec88:	cmp	r1, r0
   1ec8c:	blt	1eb7c <ReadCompressedDataSlab2+0x7ec>
   1ec90:	b	1fe24 <ReadCompressedDataSlab2+0x1a94>
   1ec94:	ldr	r0, [sl, #4]
   1ec98:	mov	r7, r8
   1ec9c:	ldr	r8, [fp, #16]
   1eca0:	cmp	r0, #1
   1eca4:	blt	1fe24 <ReadCompressedDataSlab2+0x1a94>
   1eca8:	ldr	r0, [sp, #12]
   1ecac:	mov	r1, r8
   1ecb0:	mov	r6, #0
   1ecb4:	add	r9, sp, #24
   1ecb8:	mov	r8, r3
   1ecbc:	str	r3, [sp, #16]
   1ecc0:	sub	r0, r0, #1
   1ecc4:	str	r0, [sp, #12]
   1ecc8:	ldr	r3, [r1]
   1eccc:	mov	r8, r1
   1ecd0:	mov	r0, r5
   1ecd4:	mov	r1, r9
   1ecd8:	mov	r2, r7
   1ecdc:	bl	26a0 <InflateSkipData>
   1ece0:	ldr	sl, [sl]
   1ece4:	mov	r0, #1
   1ece8:	mov	r1, r9
   1ecec:	mov	r2, r4
   1ecf0:	mov	r3, r7
   1ecf4:	str	r0, [sp]
   1ecf8:	mov	r0, r5
   1ecfc:	bl	13168 <ReadCompressedInt8Data>
   1ed00:	add	r4, r4, #1
   1ed04:	cmp	sl, #2
   1ed08:	blt	1ed74 <ReadCompressedDataSlab2+0x9e4>
   1ed0c:	str	r6, [sp, #20]
   1ed10:	ldr	r8, [fp, #8]
   1ed14:	ldr	r6, [sp, #12]
   1ed18:	mov	r1, r9
   1ed1c:	mov	sl, #0
   1ed20:	mov	r7, #1
   1ed24:	mov	r0, r5
   1ed28:	mov	r2, r8
   1ed2c:	mov	r3, r6
   1ed30:	bl	26a0 <InflateSkipData>
   1ed34:	ldr	r0, [fp, #24]
   1ed38:	add	r2, r4, sl
   1ed3c:	add	r1, sp, #24
   1ed40:	mov	r3, r8
   1ed44:	ldr	r9, [r0]
   1ed48:	mov	r0, r5
   1ed4c:	str	r7, [sp]
   1ed50:	bl	13168 <ReadCompressedInt8Data>
   1ed54:	add	sl, sl, #1
   1ed58:	sub	r0, r9, #1
   1ed5c:	add	r1, sp, #24
   1ed60:	cmp	sl, r0
   1ed64:	blt	1ed24 <ReadCompressedDataSlab2+0x994>
   1ed68:	ldr	r8, [fp, #16]
   1ed6c:	ldr	r6, [sp, #20]
   1ed70:	add	r4, r4, sl
   1ed74:	mov	r3, r8
   1ed78:	ldr	sl, [fp, #24]
   1ed7c:	ldr	r1, [fp, #20]
   1ed80:	ldr	r0, [fp, #12]
   1ed84:	ldr	r8, [sp, #16]
   1ed88:	ldr	r7, [fp, #8]
   1ed8c:	add	r9, sp, #24
   1ed90:	ldr	r2, [sl]
   1ed94:	ldr	r1, [r1]
   1ed98:	ldr	r0, [r0]
   1ed9c:	sub	r2, r2, #1
   1eda0:	add	r0, r0, r8
   1eda4:	mul	r1, r2, r1
   1eda8:	mov	r2, r7
   1edac:	mvn	r1, r1
   1edb0:	add	r0, r0, r1
   1edb4:	ldr	r1, [r3]
   1edb8:	sub	r3, r0, r1
   1edbc:	mov	r0, r5
   1edc0:	mov	r1, r9
   1edc4:	bl	26a0 <InflateSkipData>
   1edc8:	ldr	r0, [sl, #4]
   1edcc:	ldr	r1, [fp, #16]
   1edd0:	add	r6, r6, #1
   1edd4:	cmp	r6, r0
   1edd8:	blt	1ecc8 <ReadCompressedDataSlab2+0x938>
   1eddc:	b	1fe24 <ReadCompressedDataSlab2+0x1a94>
   1ede0:	ldr	r0, [sl, #4]
   1ede4:	mov	r7, r8
   1ede8:	ldr	r8, [fp, #16]
   1edec:	cmp	r0, #1
   1edf0:	blt	1fe24 <ReadCompressedDataSlab2+0x1a94>
   1edf4:	ldr	r0, [sp, #12]
   1edf8:	mov	r1, r8
   1edfc:	mov	r6, #0
   1ee00:	add	r9, sp, #24
   1ee04:	mov	r8, r3
   1ee08:	str	r3, [sp, #16]
   1ee0c:	sub	r0, r0, #1
   1ee10:	str	r0, [sp, #12]
   1ee14:	ldr	r3, [r1]
   1ee18:	mov	r8, r1
   1ee1c:	mov	r0, r5
   1ee20:	mov	r1, r9
   1ee24:	mov	r2, r7
   1ee28:	bl	26a0 <InflateSkipData>
   1ee2c:	ldr	sl, [sl]
   1ee30:	mov	r0, #1
   1ee34:	mov	r1, r9
   1ee38:	mov	r2, r4
   1ee3c:	mov	r3, r7
   1ee40:	str	r0, [sp]
   1ee44:	mov	r0, r5
   1ee48:	bl	14b0c <ReadCompressedUInt8Data>
   1ee4c:	add	r4, r4, #1
   1ee50:	cmp	sl, #2
   1ee54:	blt	1eec0 <ReadCompressedDataSlab2+0xb30>
   1ee58:	str	r6, [sp, #20]
   1ee5c:	ldr	r8, [fp, #8]
   1ee60:	ldr	r6, [sp, #12]
   1ee64:	mov	r1, r9
   1ee68:	mov	sl, #0
   1ee6c:	mov	r7, #1
   1ee70:	mov	r0, r5
   1ee74:	mov	r2, r8
   1ee78:	mov	r3, r6
   1ee7c:	bl	26a0 <InflateSkipData>
   1ee80:	ldr	r0, [fp, #24]
   1ee84:	add	r2, r4, sl
   1ee88:	add	r1, sp, #24
   1ee8c:	mov	r3, r8
   1ee90:	ldr	r9, [r0]
   1ee94:	mov	r0, r5
   1ee98:	str	r7, [sp]
   1ee9c:	bl	14b0c <ReadCompressedUInt8Data>
   1eea0:	add	sl, sl, #1
   1eea4:	sub	r0, r9, #1
   1eea8:	add	r1, sp, #24
   1eeac:	cmp	sl, r0
   1eeb0:	blt	1ee70 <ReadCompressedDataSlab2+0xae0>
   1eeb4:	ldr	r8, [fp, #16]
   1eeb8:	ldr	r6, [sp, #20]
   1eebc:	add	r4, r4, sl
   1eec0:	mov	r3, r8
   1eec4:	ldr	sl, [fp, #24]
   1eec8:	ldr	r1, [fp, #20]
   1eecc:	ldr	r0, [fp, #12]
   1eed0:	ldr	r8, [sp, #16]
   1eed4:	ldr	r7, [fp, #8]
   1eed8:	add	r9, sp, #24
   1eedc:	ldr	r2, [sl]
   1eee0:	ldr	r1, [r1]
   1eee4:	ldr	r0, [r0]
   1eee8:	sub	r2, r2, #1
   1eeec:	add	r0, r0, r8
   1eef0:	mul	r1, r2, r1
   1eef4:	mov	r2, r7
   1eef8:	mvn	r1, r1
   1eefc:	add	r0, r0, r1
   1ef00:	ldr	r1, [r3]
   1ef04:	sub	r3, r0, r1
   1ef08:	mov	r0, r5
   1ef0c:	mov	r1, r9
   1ef10:	bl	26a0 <InflateSkipData>
   1ef14:	ldr	r0, [sl, #4]
   1ef18:	ldr	r1, [fp, #16]
   1ef1c:	add	r6, r6, #1
   1ef20:	cmp	r6, r0
   1ef24:	blt	1ee14 <ReadCompressedDataSlab2+0xa84>
   1ef28:	b	1fe24 <ReadCompressedDataSlab2+0x1a94>
   1ef2c:	ldr	r0, [sl, #4]
   1ef30:	ldr	r9, [fp, #16]
   1ef34:	cmp	r0, #1
   1ef38:	blt	1fe24 <ReadCompressedDataSlab2+0x1a94>
   1ef3c:	ldr	r0, [sp, #12]
   1ef40:	mov	r7, sl
   1ef44:	mov	r1, #0
   1ef48:	add	r6, sp, #24
   1ef4c:	mov	sl, r3
   1ef50:	str	r3, [sp, #16]
   1ef54:	sub	r0, r0, #1
   1ef58:	str	r0, [sp, #12]
   1ef5c:	ldr	r3, [r9]
   1ef60:	str	r1, [sp, #20]
   1ef64:	mov	r0, r5
   1ef68:	mov	r1, r6
   1ef6c:	mov	r2, r8
   1ef70:	bl	26a0 <InflateSkipData>
   1ef74:	mov	sl, r7
   1ef78:	mov	r0, #1
   1ef7c:	mov	r1, r6
   1ef80:	mov	r2, r4
   1ef84:	mov	r3, r8
   1ef88:	mov	r9, r6
   1ef8c:	ldr	sl, [r7]
   1ef90:	str	r0, [sp]
   1ef94:	mov	r0, r5
   1ef98:	bl	fda4 <ReadCompressedInt16Data>
   1ef9c:	add	r4, r4, #2
   1efa0:	cmp	sl, #2
   1efa4:	blt	1f008 <ReadCompressedDataSlab2+0xc78>
   1efa8:	ldr	r8, [fp, #8]
   1efac:	ldr	r7, [sp, #12]
   1efb0:	mov	sl, #0
   1efb4:	mov	r6, r9
   1efb8:	mov	r0, r5
   1efbc:	mov	r1, r6
   1efc0:	mov	r2, r8
   1efc4:	mov	r3, r7
   1efc8:	bl	26a0 <InflateSkipData>
   1efcc:	ldr	r0, [fp, #24]
   1efd0:	mov	r1, r6
   1efd4:	mov	r2, r4
   1efd8:	mov	r3, r8
   1efdc:	ldr	r9, [r0]
   1efe0:	mov	r0, #1
   1efe4:	str	r0, [sp]
   1efe8:	mov	r0, r5
   1efec:	bl	fda4 <ReadCompressedInt16Data>
   1eff0:	add	sl, sl, #1
   1eff4:	sub	r0, r9, #1
   1eff8:	add	r4, r4, #2
   1effc:	cmp	sl, r0
   1f000:	blt	1efb8 <ReadCompressedDataSlab2+0xc28>
   1f004:	b	1f010 <ReadCompressedDataSlab2+0xc80>
   1f008:	ldr	r8, [fp, #8]
   1f00c:	mov	r6, r9
   1f010:	ldr	r7, [fp, #24]
   1f014:	ldr	r1, [fp, #20]
   1f018:	ldr	r0, [fp, #12]
   1f01c:	ldr	sl, [sp, #16]
   1f020:	ldr	r9, [fp, #16]
   1f024:	ldr	r2, [r7]
   1f028:	ldr	r1, [r1]
   1f02c:	ldr	r0, [r0]
   1f030:	sub	r2, r2, #1
   1f034:	add	r0, r0, sl
   1f038:	mul	r1, r2, r1
   1f03c:	mov	r2, r8
   1f040:	mvn	r1, r1
   1f044:	add	r0, r0, r1
   1f048:	ldr	r1, [r9]
   1f04c:	sub	r3, r0, r1
   1f050:	mov	r0, r5
   1f054:	mov	r1, r6
   1f058:	bl	26a0 <InflateSkipData>
   1f05c:	ldr	r1, [sp, #20]
   1f060:	ldr	r0, [r7, #4]
   1f064:	add	r1, r1, #1
   1f068:	cmp	r1, r0
   1f06c:	blt	1ef5c <ReadCompressedDataSlab2+0xbcc>
   1f070:	b	1fe24 <ReadCompressedDataSlab2+0x1a94>
   1f074:	ldr	r0, [sl, #4]
   1f078:	ldr	r9, [fp, #16]
   1f07c:	cmp	r0, #1
   1f080:	blt	1fe24 <ReadCompressedDataSlab2+0x1a94>
   1f084:	ldr	r0, [sp, #16]
   1f088:	mov	r7, sl
   1f08c:	mov	r6, r5
   1f090:	mov	r1, #0
   1f094:	add	r5, sp, #24
   1f098:	mov	sl, r3
   1f09c:	str	r3, [sp, #12]
   1f0a0:	sub	r0, r0, #1
   1f0a4:	str	r0, [sp, #8]
   1f0a8:	ldr	r3, [r9]
   1f0ac:	str	r1, [sp, #16]
   1f0b0:	mov	r0, r6
   1f0b4:	mov	r1, r5
   1f0b8:	mov	r2, r8
   1f0bc:	bl	26a0 <InflateSkipData>
   1f0c0:	mov	sl, r7
   1f0c4:	mov	r0, #1
   1f0c8:	mov	r1, r5
   1f0cc:	mov	r2, r4
   1f0d0:	mov	r3, r8
   1f0d4:	mov	r9, r5
   1f0d8:	ldr	sl, [r7]
   1f0dc:	str	r0, [sp]
   1f0e0:	mov	r0, r6
   1f0e4:	bl	117c4 <ReadCompressedUInt16Data>
   1f0e8:	add	r4, r4, #2
   1f0ec:	cmp	sl, #2
   1f0f0:	blt	1f158 <ReadCompressedDataSlab2+0xdc8>
   1f0f4:	ldr	r8, [fp, #8]
   1f0f8:	ldr	r7, [sp, #8]
   1f0fc:	ldr	r6, [sp, #20]
   1f100:	mov	sl, #0
   1f104:	mov	r5, r9
   1f108:	mov	r0, r6
   1f10c:	mov	r1, r5
   1f110:	mov	r2, r8
   1f114:	mov	r3, r7
   1f118:	bl	26a0 <InflateSkipData>
   1f11c:	ldr	r0, [fp, #24]
   1f120:	mov	r1, r5
   1f124:	mov	r2, r4
   1f128:	mov	r3, r8
   1f12c:	ldr	r9, [r0]
   1f130:	mov	r0, #1
   1f134:	str	r0, [sp]
   1f138:	mov	r0, r6
   1f13c:	bl	117c4 <ReadCompressedUInt16Data>
   1f140:	add	sl, sl, #1
   1f144:	sub	r0, r9, #1
   1f148:	add	r4, r4, #2
   1f14c:	cmp	sl, r0
   1f150:	blt	1f108 <ReadCompressedDataSlab2+0xd78>
   1f154:	b	1f164 <ReadCompressedDataSlab2+0xdd4>
   1f158:	ldr	r8, [fp, #8]
   1f15c:	ldr	r6, [sp, #20]
   1f160:	mov	r5, r9
   1f164:	ldr	r7, [fp, #24]
   1f168:	ldr	r1, [fp, #20]
   1f16c:	ldr	r0, [fp, #12]
   1f170:	ldr	sl, [sp, #12]
   1f174:	ldr	r9, [fp, #16]
   1f178:	ldr	r2, [r7]
   1f17c:	ldr	r1, [r1]
   1f180:	ldr	r0, [r0]
   1f184:	sub	r2, r2, #1
   1f188:	add	r0, r0, sl
   1f18c:	mul	r1, r2, r1
   1f190:	mov	r2, r8
   1f194:	mvn	r1, r1
   1f198:	add	r0, r0, r1
   1f19c:	ldr	r1, [r9]
   1f1a0:	sub	r3, r0, r1
   1f1a4:	mov	r0, r6
   1f1a8:	mov	r1, r5
   1f1ac:	bl	26a0 <InflateSkipData>
   1f1b0:	ldr	r1, [sp, #16]
   1f1b4:	ldr	r0, [r7, #4]
   1f1b8:	add	r1, r1, #1
   1f1bc:	cmp	r1, r0
   1f1c0:	blt	1f0a8 <ReadCompressedDataSlab2+0xd18>
   1f1c4:	b	1fe24 <ReadCompressedDataSlab2+0x1a94>
   1f1c8:	ldr	r0, [sl, #4]
   1f1cc:	ldr	r9, [fp, #16]
   1f1d0:	cmp	r0, #1
   1f1d4:	blt	1fe24 <ReadCompressedDataSlab2+0x1a94>
   1f1d8:	ldr	r0, [sp, #12]
   1f1dc:	mov	r7, sl
   1f1e0:	mov	r1, #0
   1f1e4:	add	r6, sp, #24
   1f1e8:	mov	sl, r3
   1f1ec:	str	r3, [sp, #16]
   1f1f0:	sub	r0, r0, #1
   1f1f4:	str	r0, [sp, #12]
   1f1f8:	ldr	r3, [r9]
   1f1fc:	str	r1, [sp, #20]
   1f200:	mov	r0, r5
   1f204:	mov	r1, r6
   1f208:	mov	r2, r8
   1f20c:	bl	26a0 <InflateSkipData>
   1f210:	mov	sl, r7
   1f214:	mov	r0, #1
   1f218:	mov	r1, r6
   1f21c:	mov	r2, r4
   1f220:	mov	r3, r8
   1f224:	mov	r9, r6
   1f228:	ldr	sl, [r7]
   1f22c:	str	r0, [sp]
   1f230:	mov	r0, r5
   1f234:	bl	c964 <ReadCompressedInt32Data>
   1f238:	add	r4, r4, #4
   1f23c:	cmp	sl, #2
   1f240:	blt	1f2a4 <ReadCompressedDataSlab2+0xf14>
   1f244:	ldr	r8, [fp, #8]
   1f248:	ldr	r7, [sp, #12]
   1f24c:	mov	sl, #0
   1f250:	mov	r6, r9
   1f254:	mov	r0, r5
   1f258:	mov	r1, r6
   1f25c:	mov	r2, r8
   1f260:	mov	r3, r7
   1f264:	bl	26a0 <InflateSkipData>
   1f268:	ldr	r0, [fp, #24]
   1f26c:	mov	r1, r6
   1f270:	mov	r2, r4
   1f274:	mov	r3, r8
   1f278:	ldr	r9, [r0]
   1f27c:	mov	r0, #1
   1f280:	str	r0, [sp]
   1f284:	mov	r0, r5
   1f288:	bl	c964 <ReadCompressedInt32Data>
   1f28c:	add	sl, sl, #1
   1f290:	sub	r0, r9, #1
   1f294:	add	r4, r4, #4
   1f298:	cmp	sl, r0
   1f29c:	blt	1f254 <ReadCompressedDataSlab2+0xec4>
   1f2a0:	b	1f2ac <ReadCompressedDataSlab2+0xf1c>
   1f2a4:	ldr	r8, [fp, #8]
   1f2a8:	mov	r6, r9
   1f2ac:	ldr	r7, [fp, #24]
   1f2b0:	ldr	r1, [fp, #20]
   1f2b4:	ldr	r0, [fp, #12]
   1f2b8:	ldr	sl, [sp, #16]
   1f2bc:	ldr	r9, [fp, #16]
   1f2c0:	ldr	r2, [r7]
   1f2c4:	ldr	r1, [r1]
   1f2c8:	ldr	r0, [r0]
   1f2cc:	sub	r2, r2, #1
   1f2d0:	add	r0, r0, sl
   1f2d4:	mul	r1, r2, r1
   1f2d8:	mov	r2, r8
   1f2dc:	mvn	r1, r1
   1f2e0:	add	r0, r0, r1
   1f2e4:	ldr	r1, [r9]
   1f2e8:	sub	r3, r0, r1
   1f2ec:	mov	r0, r5
   1f2f0:	mov	r1, r6
   1f2f4:	bl	26a0 <InflateSkipData>
   1f2f8:	ldr	r1, [sp, #20]
   1f2fc:	ldr	r0, [r7, #4]
   1f300:	add	r1, r1, #1
   1f304:	cmp	r1, r0
   1f308:	blt	1f1f8 <ReadCompressedDataSlab2+0xe68>
   1f30c:	b	1fe24 <ReadCompressedDataSlab2+0x1a94>
   1f310:	ldr	r0, [sl, #4]
   1f314:	ldr	r9, [fp, #16]
   1f318:	cmp	r0, #1
   1f31c:	blt	1fe24 <ReadCompressedDataSlab2+0x1a94>
   1f320:	ldr	r0, [sp, #12]
   1f324:	mov	r7, sl
   1f328:	mov	r1, #0
   1f32c:	add	r6, sp, #24
   1f330:	mov	sl, r3
   1f334:	str	r3, [sp, #16]
   1f338:	sub	r0, r0, #1
   1f33c:	str	r0, [sp, #12]
   1f340:	ldr	r3, [r9]
   1f344:	str	r1, [sp, #20]
   1f348:	mov	r0, r5
   1f34c:	mov	r1, r6
   1f350:	mov	r2, r8
   1f354:	bl	26a0 <InflateSkipData>
   1f358:	mov	sl, r7
   1f35c:	mov	r0, #1
   1f360:	mov	r1, r6
   1f364:	mov	r2, r4
   1f368:	mov	r3, r8
   1f36c:	mov	r9, r6
   1f370:	ldr	sl, [r7]
   1f374:	str	r0, [sp]
   1f378:	mov	r0, r5
   1f37c:	bl	e384 <ReadCompressedUInt32Data>
   1f380:	add	r4, r4, #4
   1f384:	cmp	sl, #2
   1f388:	blt	1f3ec <ReadCompressedDataSlab2+0x105c>
   1f38c:	ldr	r8, [fp, #8]
   1f390:	ldr	r7, [sp, #12]
   1f394:	mov	sl, #0
   1f398:	mov	r6, r9
   1f39c:	mov	r0, r5
   1f3a0:	mov	r1, r6
   1f3a4:	mov	r2, r8
   1f3a8:	mov	r3, r7
   1f3ac:	bl	26a0 <InflateSkipData>
   1f3b0:	ldr	r0, [fp, #24]
   1f3b4:	mov	r1, r6
   1f3b8:	mov	r2, r4
   1f3bc:	mov	r3, r8
   1f3c0:	ldr	r9, [r0]
   1f3c4:	mov	r0, #1
   1f3c8:	str	r0, [sp]
   1f3cc:	mov	r0, r5
   1f3d0:	bl	e384 <ReadCompressedUInt32Data>
   1f3d4:	add	sl, sl, #1
   1f3d8:	sub	r0, r9, #1
   1f3dc:	add	r4, r4, #4
   1f3e0:	cmp	sl, r0
   1f3e4:	blt	1f39c <ReadCompressedDataSlab2+0x100c>
   1f3e8:	b	1f3f4 <ReadCompressedDataSlab2+0x1064>
   1f3ec:	ldr	r8, [fp, #8]
   1f3f0:	mov	r6, r9
   1f3f4:	ldr	r7, [fp, #24]
   1f3f8:	ldr	r1, [fp, #20]
   1f3fc:	ldr	r0, [fp, #12]
   1f400:	ldr	sl, [sp, #16]
   1f404:	ldr	r9, [fp, #16]
   1f408:	ldr	r2, [r7]
   1f40c:	ldr	r1, [r1]
   1f410:	ldr	r0, [r0]
   1f414:	sub	r2, r2, #1
   1f418:	add	r0, r0, sl
   1f41c:	mul	r1, r2, r1
   1f420:	mov	r2, r8
   1f424:	mvn	r1, r1
   1f428:	add	r0, r0, r1
   1f42c:	ldr	r1, [r9]
   1f430:	sub	r3, r0, r1
   1f434:	mov	r0, r5
   1f438:	mov	r1, r6
   1f43c:	bl	26a0 <InflateSkipData>
   1f440:	ldr	r1, [sp, #20]
   1f444:	ldr	r0, [r7, #4]
   1f448:	add	r1, r1, #1
   1f44c:	cmp	r1, r0
   1f450:	blt	1f340 <ReadCompressedDataSlab2+0xfb0>
   1f454:	b	1fe24 <ReadCompressedDataSlab2+0x1a94>
   1f458:	ldr	r0, [sl, #4]
   1f45c:	ldr	r9, [fp, #16]
   1f460:	cmp	r0, #1
   1f464:	blt	1fe24 <ReadCompressedDataSlab2+0x1a94>
   1f468:	ldr	r0, [sp, #12]
   1f46c:	mov	r7, sl
   1f470:	mov	r1, #0
   1f474:	add	r6, sp, #24
   1f478:	mov	sl, r3
   1f47c:	str	r3, [sp, #16]
   1f480:	sub	r0, r0, #1
   1f484:	str	r0, [sp, #12]
   1f488:	ldr	r3, [r9]
   1f48c:	str	r1, [sp, #20]
   1f490:	mov	r0, r5
   1f494:	mov	r1, r6
   1f498:	mov	r2, r8
   1f49c:	bl	26a0 <InflateSkipData>
   1f4a0:	mov	sl, r7
   1f4a4:	mov	r0, #1
   1f4a8:	mov	r1, r6
   1f4ac:	mov	r2, r4
   1f4b0:	mov	r3, r8
   1f4b4:	mov	r9, r6
   1f4b8:	ldr	sl, [r7]
   1f4bc:	str	r0, [sp]
   1f4c0:	mov	r0, r5
   1f4c4:	bl	aed4 <ReadCompressedUInt64Data>
   1f4c8:	add	r4, r4, #8
   1f4cc:	cmp	sl, #2
   1f4d0:	blt	1f534 <ReadCompressedDataSlab2+0x11a4>
   1f4d4:	ldr	r8, [fp, #8]
   1f4d8:	ldr	r7, [sp, #12]
   1f4dc:	mov	sl, #0
   1f4e0:	mov	r6, r9
   1f4e4:	mov	r0, r5
   1f4e8:	mov	r1, r6
   1f4ec:	mov	r2, r8
   1f4f0:	mov	r3, r7
   1f4f4:	bl	26a0 <InflateSkipData>
   1f4f8:	ldr	r0, [fp, #24]
   1f4fc:	mov	r1, r6
   1f500:	mov	r2, r4
   1f504:	mov	r3, r8
   1f508:	ldr	r9, [r0]
   1f50c:	mov	r0, #1
   1f510:	str	r0, [sp]
   1f514:	mov	r0, r5
   1f518:	bl	aed4 <ReadCompressedUInt64Data>
   1f51c:	add	sl, sl, #1
   1f520:	sub	r0, r9, #1
   1f524:	add	r4, r4, #8
   1f528:	cmp	sl, r0
   1f52c:	blt	1f4e4 <ReadCompressedDataSlab2+0x1154>
   1f530:	b	1f53c <ReadCompressedDataSlab2+0x11ac>
   1f534:	ldr	r8, [fp, #8]
   1f538:	mov	r6, r9
   1f53c:	ldr	r7, [fp, #24]
   1f540:	ldr	r1, [fp, #20]
   1f544:	ldr	r0, [fp, #12]
   1f548:	ldr	sl, [sp, #16]
   1f54c:	ldr	r9, [fp, #16]
   1f550:	ldr	r2, [r7]
   1f554:	ldr	r1, [r1]
   1f558:	ldr	r0, [r0]
   1f55c:	sub	r2, r2, #1
   1f560:	add	r0, r0, sl
   1f564:	mul	r1, r2, r1
   1f568:	mov	r2, r8
   1f56c:	mvn	r1, r1
   1f570:	add	r0, r0, r1
   1f574:	ldr	r1, [r9]
   1f578:	sub	r3, r0, r1
   1f57c:	mov	r0, r5
   1f580:	mov	r1, r6
   1f584:	bl	26a0 <InflateSkipData>
   1f588:	ldr	r1, [sp, #20]
   1f58c:	ldr	r0, [r7, #4]
   1f590:	add	r1, r1, #1
   1f594:	cmp	r1, r0
   1f598:	blt	1f488 <ReadCompressedDataSlab2+0x10f8>
   1f59c:	b	1fe24 <ReadCompressedDataSlab2+0x1a94>
   1f5a0:	ldr	r0, [sl, #4]
   1f5a4:	ldr	r1, [sp, #12]
   1f5a8:	ldr	r9, [fp, #16]
   1f5ac:	cmp	r0, #1
   1f5b0:	blt	1fe24 <ReadCompressedDataSlab2+0x1a94>
   1f5b4:	sub	r0, r1, #1
   1f5b8:	mov	r7, #0
   1f5bc:	add	r6, sp, #24
   1f5c0:	str	r3, [sp, #16]
   1f5c4:	str	r0, [sp, #12]
   1f5c8:	ldr	r3, [r9]
   1f5cc:	mov	r0, r5
   1f5d0:	mov	r1, r6
   1f5d4:	mov	r2, r8
   1f5d8:	bl	26a0 <InflateSkipData>
   1f5dc:	ldr	sl, [sl]
   1f5e0:	mov	r0, #1
   1f5e4:	mov	r1, r6
   1f5e8:	mov	r2, r4
   1f5ec:	mov	r3, r8
   1f5f0:	str	r0, [sp]
   1f5f4:	mov	r0, r5
   1f5f8:	bl	927c <ReadCompressedInt64Data>
   1f5fc:	add	r4, r4, #8
   1f600:	cmp	sl, #2
   1f604:	str	r7, [sp, #20]
   1f608:	blt	1f668 <ReadCompressedDataSlab2+0x12d8>
   1f60c:	ldr	r8, [fp, #8]
   1f610:	ldr	r7, [sp, #12]
   1f614:	mov	sl, #0
   1f618:	mov	r0, r5
   1f61c:	mov	r1, r6
   1f620:	mov	r2, r8
   1f624:	mov	r3, r7
   1f628:	bl	26a0 <InflateSkipData>
   1f62c:	ldr	r0, [fp, #24]
   1f630:	mov	r1, r6
   1f634:	mov	r2, r4
   1f638:	mov	r3, r8
   1f63c:	ldr	r9, [r0]
   1f640:	mov	r0, #1
   1f644:	str	r0, [sp]
   1f648:	mov	r0, r5
   1f64c:	bl	927c <ReadCompressedInt64Data>
   1f650:	add	sl, sl, #1
   1f654:	sub	r0, r9, #1
   1f658:	add	r4, r4, #8
   1f65c:	cmp	sl, r0
   1f660:	blt	1f618 <ReadCompressedDataSlab2+0x1288>
   1f664:	b	1f66c <ReadCompressedDataSlab2+0x12dc>
   1f668:	ldr	r8, [fp, #8]
   1f66c:	ldr	sl, [fp, #24]
   1f670:	ldr	r1, [fp, #20]
   1f674:	ldr	r0, [fp, #12]
   1f678:	ldr	r7, [sp, #16]
   1f67c:	ldr	r9, [fp, #16]
   1f680:	ldr	r2, [sl]
   1f684:	ldr	r1, [r1]
   1f688:	ldr	r0, [r0]
   1f68c:	sub	r2, r2, #1
   1f690:	add	r0, r0, r7
   1f694:	mul	r1, r2, r1
   1f698:	mov	r2, r8
   1f69c:	mvn	r1, r1
   1f6a0:	add	r0, r0, r1
   1f6a4:	ldr	r1, [r9]
   1f6a8:	sub	r3, r0, r1
   1f6ac:	mov	r0, r5
   1f6b0:	mov	r1, r6
   1f6b4:	bl	26a0 <InflateSkipData>
   1f6b8:	ldr	r7, [sp, #20]
   1f6bc:	ldr	r0, [sl, #4]
   1f6c0:	add	r7, r7, #1
   1f6c4:	cmp	r7, r0
   1f6c8:	blt	1f5c8 <ReadCompressedDataSlab2+0x1238>
   1f6cc:	b	1fe24 <ReadCompressedDataSlab2+0x1a94>
   1f6d0:	ldr	r0, [sl, #4]
   1f6d4:	str	r3, [sp, #16]
   1f6d8:	cmp	r0, #1
   1f6dc:	ldr	r0, [fp, #16]
   1f6e0:	blt	1fe24 <ReadCompressedDataSlab2+0x1a94>
   1f6e4:	mov	r9, r8
   1f6e8:	mov	r6, r2
   1f6ec:	mov	r7, #0
   1f6f0:	ldr	r3, [r0]
   1f6f4:	add	r1, sp, #24
   1f6f8:	mov	r0, r5
   1f6fc:	mov	r2, r9
   1f700:	mov	r8, r1
   1f704:	bl	26a0 <InflateSkipData>
   1f708:	ldr	r0, [sl]
   1f70c:	mov	r1, r8
   1f710:	mov	r2, r4
   1f714:	mov	r3, r9
   1f718:	str	r0, [sp]
   1f71c:	mov	r0, r5
   1f720:	bl	4c7c <ReadCompressedDoubleData>
   1f724:	ldr	r0, [r6]
   1f728:	ldr	r1, [sp, #16]
   1f72c:	mov	r8, r6
   1f730:	ldr	r6, [sl]
   1f734:	add	r0, r0, r1
   1f738:	ldr	r1, [fp, #20]
   1f73c:	sub	r2, r6, #1
   1f740:	ldr	r1, [r1]
   1f744:	mul	r1, r1, r2
   1f748:	mov	r2, r9
   1f74c:	mvn	r1, r1
   1f750:	add	r0, r0, r1
   1f754:	ldr	r1, [fp, #16]
   1f758:	ldr	r1, [r1]
   1f75c:	sub	r3, r0, r1
   1f760:	mov	r0, r5
   1f764:	add	r1, sp, #24
   1f768:	bl	26a0 <InflateSkipData>
   1f76c:	ldr	r0, [sl, #4]
   1f770:	add	r7, r7, #1
   1f774:	add	r4, r4, r6, lsl #3
   1f778:	mov	r6, r8
   1f77c:	cmp	r7, r0
   1f780:	ldr	r0, [fp, #16]
   1f784:	blt	1f6f0 <ReadCompressedDataSlab2+0x1360>
   1f788:	b	1fe24 <ReadCompressedDataSlab2+0x1a94>
   1f78c:	ldr	r0, [sl, #4]
   1f790:	str	r3, [sp, #16]
   1f794:	cmp	r0, #1
   1f798:	ldr	r0, [fp, #16]
   1f79c:	blt	1fe24 <ReadCompressedDataSlab2+0x1a94>
   1f7a0:	mov	r9, r8
   1f7a4:	mov	r6, r2
   1f7a8:	mov	r7, #0
   1f7ac:	ldr	r3, [r0]
   1f7b0:	add	r1, sp, #24
   1f7b4:	mov	r0, r5
   1f7b8:	mov	r2, r9
   1f7bc:	mov	r8, r1
   1f7c0:	bl	26a0 <InflateSkipData>
   1f7c4:	ldr	r0, [sl]
   1f7c8:	mov	r1, r8
   1f7cc:	mov	r2, r4
   1f7d0:	mov	r3, r9
   1f7d4:	str	r0, [sp]
   1f7d8:	mov	r0, r5
   1f7dc:	bl	7620 <ReadCompressedSingleData>
   1f7e0:	ldr	r0, [r6]
   1f7e4:	ldr	r1, [sp, #16]
   1f7e8:	mov	r8, r6
   1f7ec:	ldr	r6, [sl]
   1f7f0:	add	r0, r0, r1
   1f7f4:	ldr	r1, [fp, #20]
   1f7f8:	sub	r2, r6, #1
   1f7fc:	ldr	r1, [r1]
   1f800:	mul	r1, r1, r2
   1f804:	mov	r2, r9
   1f808:	mvn	r1, r1
   1f80c:	add	r0, r0, r1
   1f810:	ldr	r1, [fp, #16]
   1f814:	ldr	r1, [r1]
   1f818:	sub	r3, r0, r1
   1f81c:	mov	r0, r5
   1f820:	add	r1, sp, #24
   1f824:	bl	26a0 <InflateSkipData>
   1f828:	ldr	r0, [sl, #4]
   1f82c:	add	r7, r7, #1
   1f830:	add	r4, r4, r6, lsl #2
   1f834:	mov	r6, r8
   1f838:	cmp	r7, r0
   1f83c:	ldr	r0, [fp, #16]
   1f840:	blt	1f7ac <ReadCompressedDataSlab2+0x141c>
   1f844:	b	1fe24 <ReadCompressedDataSlab2+0x1a94>
   1f848:	ldr	r0, [sl, #4]
   1f84c:	str	r3, [sp, #16]
   1f850:	cmp	r0, #1
   1f854:	ldr	r0, [fp, #16]
   1f858:	blt	1fe24 <ReadCompressedDataSlab2+0x1a94>
   1f85c:	mov	r9, r8
   1f860:	mov	r6, r2
   1f864:	mov	r7, #0
   1f868:	ldr	r3, [r0]
   1f86c:	add	r1, sp, #24
   1f870:	mov	r0, r5
   1f874:	mov	r2, r9
   1f878:	mov	r8, r1
   1f87c:	bl	26a0 <InflateSkipData>
   1f880:	ldr	r0, [sl]
   1f884:	mov	r1, r8
   1f888:	mov	r2, r4
   1f88c:	mov	r3, r9
   1f890:	str	r0, [sp]
   1f894:	mov	r0, r5
   1f898:	bl	13168 <ReadCompressedInt8Data>
   1f89c:	ldr	r0, [r6]
   1f8a0:	ldr	r1, [sp, #16]
   1f8a4:	mov	r8, r6
   1f8a8:	ldr	r6, [sl]
   1f8ac:	add	r0, r0, r1
   1f8b0:	ldr	r1, [fp, #20]
   1f8b4:	sub	r2, r6, #1
   1f8b8:	ldr	r1, [r1]
   1f8bc:	mul	r1, r1, r2
   1f8c0:	mov	r2, r9
   1f8c4:	mvn	r1, r1
   1f8c8:	add	r0, r0, r1
   1f8cc:	ldr	r1, [fp, #16]
   1f8d0:	ldr	r1, [r1]
   1f8d4:	sub	r3, r0, r1
   1f8d8:	mov	r0, r5
   1f8dc:	add	r1, sp, #24
   1f8e0:	bl	26a0 <InflateSkipData>
   1f8e4:	ldr	r0, [sl, #4]
   1f8e8:	add	r7, r7, #1
   1f8ec:	add	r4, r4, r6
   1f8f0:	mov	r6, r8
   1f8f4:	cmp	r7, r0
   1f8f8:	ldr	r0, [fp, #16]
   1f8fc:	blt	1f868 <ReadCompressedDataSlab2+0x14d8>
   1f900:	b	1fe24 <ReadCompressedDataSlab2+0x1a94>
   1f904:	ldr	r0, [sl, #4]
   1f908:	str	r3, [sp, #16]
   1f90c:	cmp	r0, #1
   1f910:	ldr	r0, [fp, #16]
   1f914:	blt	1fe24 <ReadCompressedDataSlab2+0x1a94>
   1f918:	mov	r9, r8
   1f91c:	mov	r6, r2
   1f920:	mov	r7, #0
   1f924:	ldr	r3, [r0]
   1f928:	add	r1, sp, #24
   1f92c:	mov	r0, r5
   1f930:	mov	r2, r9
   1f934:	mov	r8, r1
   1f938:	bl	26a0 <InflateSkipData>
   1f93c:	ldr	r0, [sl]
   1f940:	mov	r1, r8
   1f944:	mov	r2, r4
   1f948:	mov	r3, r9
   1f94c:	str	r0, [sp]
   1f950:	mov	r0, r5
   1f954:	bl	14b0c <ReadCompressedUInt8Data>
   1f958:	ldr	r0, [r6]
   1f95c:	ldr	r1, [sp, #16]
   1f960:	mov	r8, r6
   1f964:	ldr	r6, [sl]
   1f968:	add	r0, r0, r1
   1f96c:	ldr	r1, [fp, #20]
   1f970:	sub	r2, r6, #1
   1f974:	ldr	r1, [r1]
   1f978:	mul	r1, r1, r2
   1f97c:	mov	r2, r9
   1f980:	mvn	r1, r1
   1f984:	add	r0, r0, r1
   1f988:	ldr	r1, [fp, #16]
   1f98c:	ldr	r1, [r1]
   1f990:	sub	r3, r0, r1
   1f994:	mov	r0, r5
   1f998:	add	r1, sp, #24
   1f99c:	bl	26a0 <InflateSkipData>
   1f9a0:	ldr	r0, [sl, #4]
   1f9a4:	add	r7, r7, #1
   1f9a8:	add	r4, r4, r6
   1f9ac:	mov	r6, r8
   1f9b0:	cmp	r7, r0
   1f9b4:	ldr	r0, [fp, #16]
   1f9b8:	blt	1f924 <ReadCompressedDataSlab2+0x1594>
   1f9bc:	b	1fe24 <ReadCompressedDataSlab2+0x1a94>
   1f9c0:	ldr	r0, [sl, #4]
   1f9c4:	str	r3, [sp, #16]
   1f9c8:	cmp	r0, #1
   1f9cc:	ldr	r0, [fp, #16]
   1f9d0:	blt	1fe24 <ReadCompressedDataSlab2+0x1a94>
   1f9d4:	mov	r9, r8
   1f9d8:	mov	r6, r2
   1f9dc:	mov	r7, #0
   1f9e0:	ldr	r3, [r0]
   1f9e4:	add	r1, sp, #24
   1f9e8:	mov	r0, r5
   1f9ec:	mov	r2, r9
   1f9f0:	mov	r8, r1
   1f9f4:	bl	26a0 <InflateSkipData>
   1f9f8:	ldr	r0, [sl]
   1f9fc:	mov	r1, r8
   1fa00:	mov	r2, r4
   1fa04:	mov	r3, r9
   1fa08:	str	r0, [sp]
   1fa0c:	mov	r0, r5
   1fa10:	bl	fda4 <ReadCompressedInt16Data>
   1fa14:	ldr	r0, [r6]
   1fa18:	ldr	r1, [sp, #16]
   1fa1c:	mov	r8, r6
   1fa20:	ldr	r6, [sl]
   1fa24:	add	r0, r0, r1
   1fa28:	ldr	r1, [fp, #20]
   1fa2c:	sub	r2, r6, #1
   1fa30:	ldr	r1, [r1]
   1fa34:	mul	r1, r1, r2
   1fa38:	mov	r2, r9
   1fa3c:	mvn	r1, r1
   1fa40:	add	r0, r0, r1
   1fa44:	ldr	r1, [fp, #16]
   1fa48:	ldr	r1, [r1]
   1fa4c:	sub	r3, r0, r1
   1fa50:	mov	r0, r5
   1fa54:	add	r1, sp, #24
   1fa58:	bl	26a0 <InflateSkipData>
   1fa5c:	ldr	r0, [sl, #4]
   1fa60:	add	r7, r7, #1
   1fa64:	add	r4, r4, r6, lsl #1
   1fa68:	mov	r6, r8
   1fa6c:	cmp	r7, r0
   1fa70:	ldr	r0, [fp, #16]
   1fa74:	blt	1f9e0 <ReadCompressedDataSlab2+0x1650>
   1fa78:	b	1fe24 <ReadCompressedDataSlab2+0x1a94>
   1fa7c:	ldr	r0, [sl, #4]
   1fa80:	str	r3, [sp, #12]
   1fa84:	cmp	r0, #1
   1fa88:	ldr	r0, [fp, #16]
   1fa8c:	blt	1fe24 <ReadCompressedDataSlab2+0x1a94>
   1fa90:	mov	r9, r8
   1fa94:	mov	r6, r2
   1fa98:	mov	r7, #0
   1fa9c:	ldr	r3, [r0]
   1faa0:	add	r1, sp, #24
   1faa4:	mov	r0, r5
   1faa8:	mov	r2, r9
   1faac:	mov	r8, r1
   1fab0:	bl	26a0 <InflateSkipData>
   1fab4:	ldr	r0, [sl]
   1fab8:	mov	r1, r8
   1fabc:	mov	r2, r4
   1fac0:	mov	r3, r9
   1fac4:	str	r0, [sp]
   1fac8:	mov	r0, r5
   1facc:	bl	117c4 <ReadCompressedUInt16Data>
   1fad0:	ldr	r0, [r6]
   1fad4:	ldr	r1, [sp, #12]
   1fad8:	mov	r8, r6
   1fadc:	ldr	r6, [sl]
   1fae0:	add	r0, r0, r1
   1fae4:	ldr	r1, [fp, #20]
   1fae8:	sub	r2, r6, #1
   1faec:	ldr	r1, [r1]
   1faf0:	mul	r1, r1, r2
   1faf4:	mov	r2, r9
   1faf8:	mvn	r1, r1
   1fafc:	add	r0, r0, r1
   1fb00:	ldr	r1, [fp, #16]
   1fb04:	ldr	r1, [r1]
   1fb08:	sub	r3, r0, r1
   1fb0c:	mov	r0, r5
   1fb10:	add	r1, sp, #24
   1fb14:	bl	26a0 <InflateSkipData>
   1fb18:	ldr	r0, [sl, #4]
   1fb1c:	add	r7, r7, #1
   1fb20:	add	r4, r4, r6, lsl #1
   1fb24:	mov	r6, r8
   1fb28:	cmp	r7, r0
   1fb2c:	ldr	r0, [fp, #16]
   1fb30:	blt	1fa9c <ReadCompressedDataSlab2+0x170c>
   1fb34:	b	1fe24 <ReadCompressedDataSlab2+0x1a94>
   1fb38:	ldr	r0, [sl, #4]
   1fb3c:	str	r3, [sp, #16]
   1fb40:	cmp	r0, #1
   1fb44:	ldr	r0, [fp, #16]
   1fb48:	blt	1fe24 <ReadCompressedDataSlab2+0x1a94>
   1fb4c:	mov	r9, r8
   1fb50:	mov	r6, r2
   1fb54:	mov	r7, #0
   1fb58:	ldr	r3, [r0]
   1fb5c:	add	r1, sp, #24
   1fb60:	mov	r0, r5
   1fb64:	mov	r2, r9
   1fb68:	mov	r8, r1
   1fb6c:	bl	26a0 <InflateSkipData>
   1fb70:	ldr	r0, [sl]
   1fb74:	mov	r1, r8
   1fb78:	mov	r2, r4
   1fb7c:	mov	r3, r9
   1fb80:	str	r0, [sp]
   1fb84:	mov	r0, r5
   1fb88:	bl	c964 <ReadCompressedInt32Data>
   1fb8c:	ldr	r0, [r6]
   1fb90:	ldr	r1, [sp, #16]
   1fb94:	mov	r8, r6
   1fb98:	ldr	r6, [sl]
   1fb9c:	add	r0, r0, r1
   1fba0:	ldr	r1, [fp, #20]
   1fba4:	sub	r2, r6, #1
   1fba8:	ldr	r1, [r1]
   1fbac:	mul	r1, r1, r2
   1fbb0:	mov	r2, r9
   1fbb4:	mvn	r1, r1
   1fbb8:	add	r0, r0, r1
   1fbbc:	ldr	r1, [fp, #16]
   1fbc0:	ldr	r1, [r1]
   1fbc4:	sub	r3, r0, r1
   1fbc8:	mov	r0, r5
   1fbcc:	add	r1, sp, #24
   1fbd0:	bl	26a0 <InflateSkipData>
   1fbd4:	ldr	r0, [sl, #4]
   1fbd8:	add	r7, r7, #1
   1fbdc:	add	r4, r4, r6, lsl #2
   1fbe0:	mov	r6, r8
   1fbe4:	cmp	r7, r0
   1fbe8:	ldr	r0, [fp, #16]
   1fbec:	blt	1fb58 <ReadCompressedDataSlab2+0x17c8>
   1fbf0:	b	1fe24 <ReadCompressedDataSlab2+0x1a94>
   1fbf4:	ldr	r0, [sl, #4]
   1fbf8:	str	r3, [sp, #16]
   1fbfc:	cmp	r0, #1
   1fc00:	ldr	r0, [fp, #16]
   1fc04:	blt	1fe24 <ReadCompressedDataSlab2+0x1a94>
   1fc08:	mov	r9, r8
   1fc0c:	mov	r6, r2
   1fc10:	mov	r7, #0
   1fc14:	ldr	r3, [r0]
   1fc18:	add	r1, sp, #24
   1fc1c:	mov	r0, r5
   1fc20:	mov	r2, r9
   1fc24:	mov	r8, r1
   1fc28:	bl	26a0 <InflateSkipData>
   1fc2c:	ldr	r0, [sl]
   1fc30:	mov	r1, r8
   1fc34:	mov	r2, r4
   1fc38:	mov	r3, r9
   1fc3c:	str	r0, [sp]
   1fc40:	mov	r0, r5
   1fc44:	bl	e384 <ReadCompressedUInt32Data>
   1fc48:	ldr	r0, [r6]
   1fc4c:	ldr	r1, [sp, #16]
   1fc50:	mov	r8, r6
   1fc54:	ldr	r6, [sl]
   1fc58:	add	r0, r0, r1
   1fc5c:	ldr	r1, [fp, #20]
   1fc60:	sub	r2, r6, #1
   1fc64:	ldr	r1, [r1]
   1fc68:	mul	r1, r1, r2
   1fc6c:	mov	r2, r9
   1fc70:	mvn	r1, r1
   1fc74:	add	r0, r0, r1
   1fc78:	ldr	r1, [fp, #16]
   1fc7c:	ldr	r1, [r1]
   1fc80:	sub	r3, r0, r1
   1fc84:	mov	r0, r5
   1fc88:	add	r1, sp, #24
   1fc8c:	bl	26a0 <InflateSkipData>
   1fc90:	ldr	r0, [sl, #4]
   1fc94:	add	r7, r7, #1
   1fc98:	add	r4, r4, r6, lsl #2
   1fc9c:	mov	r6, r8
   1fca0:	cmp	r7, r0
   1fca4:	ldr	r0, [fp, #16]
   1fca8:	blt	1fc14 <ReadCompressedDataSlab2+0x1884>
   1fcac:	b	1fe24 <ReadCompressedDataSlab2+0x1a94>
   1fcb0:	ldr	r0, [sl, #4]
   1fcb4:	str	r3, [sp, #16]
   1fcb8:	cmp	r0, #1
   1fcbc:	ldr	r0, [fp, #16]
   1fcc0:	blt	1fe24 <ReadCompressedDataSlab2+0x1a94>
   1fcc4:	mov	r9, r8
   1fcc8:	mov	r6, r2
   1fccc:	mov	r7, #0
   1fcd0:	ldr	r3, [r0]
   1fcd4:	add	r1, sp, #24
   1fcd8:	mov	r0, r5
   1fcdc:	mov	r2, r9
   1fce0:	mov	r8, r1
   1fce4:	bl	26a0 <InflateSkipData>
   1fce8:	ldr	r0, [sl]
   1fcec:	mov	r1, r8
   1fcf0:	mov	r2, r4
   1fcf4:	mov	r3, r9
   1fcf8:	str	r0, [sp]
   1fcfc:	mov	r0, r5
   1fd00:	bl	aed4 <ReadCompressedUInt64Data>
   1fd04:	ldr	r0, [r6]
   1fd08:	ldr	r1, [sp, #16]
   1fd0c:	mov	r8, r6
   1fd10:	ldr	r6, [sl]
   1fd14:	add	r0, r0, r1
   1fd18:	ldr	r1, [fp, #20]
   1fd1c:	sub	r2, r6, #1
   1fd20:	ldr	r1, [r1]
   1fd24:	mul	r1, r1, r2
   1fd28:	mov	r2, r9
   1fd2c:	mvn	r1, r1
   1fd30:	add	r0, r0, r1
   1fd34:	ldr	r1, [fp, #16]
   1fd38:	ldr	r1, [r1]
   1fd3c:	sub	r3, r0, r1
   1fd40:	mov	r0, r5
   1fd44:	add	r1, sp, #24
   1fd48:	bl	26a0 <InflateSkipData>
   1fd4c:	ldr	r0, [sl, #4]
   1fd50:	add	r7, r7, #1
   1fd54:	add	r4, r4, r6, lsl #3
   1fd58:	mov	r6, r8
   1fd5c:	cmp	r7, r0
   1fd60:	ldr	r0, [fp, #16]
   1fd64:	blt	1fcd0 <ReadCompressedDataSlab2+0x1940>
   1fd68:	b	1fe24 <ReadCompressedDataSlab2+0x1a94>
   1fd6c:	ldr	r0, [sl, #4]
   1fd70:	str	r3, [sp, #16]
   1fd74:	cmp	r0, #1
   1fd78:	ldr	r0, [fp, #16]
   1fd7c:	blt	1fe24 <ReadCompressedDataSlab2+0x1a94>
   1fd80:	mov	r9, r8
   1fd84:	mov	r6, r2
   1fd88:	mov	r7, #0
   1fd8c:	ldr	r3, [r0]
   1fd90:	add	r1, sp, #24
   1fd94:	mov	r0, r5
   1fd98:	mov	r2, r9
   1fd9c:	mov	r8, r1
   1fda0:	bl	26a0 <InflateSkipData>
   1fda4:	ldr	r0, [sl]
   1fda8:	mov	r1, r8
   1fdac:	mov	r2, r4
   1fdb0:	mov	r3, r9
   1fdb4:	str	r0, [sp]
   1fdb8:	mov	r0, r5
   1fdbc:	bl	927c <ReadCompressedInt64Data>
   1fdc0:	ldr	r0, [r6]
   1fdc4:	ldr	r1, [sp, #16]
   1fdc8:	mov	r8, r6
   1fdcc:	ldr	r6, [sl]
   1fdd0:	add	r0, r0, r1
   1fdd4:	ldr	r1, [fp, #20]
   1fdd8:	sub	r2, r6, #1
   1fddc:	ldr	r1, [r1]
   1fde0:	mul	r1, r1, r2
   1fde4:	mov	r2, r9
   1fde8:	mvn	r1, r1
   1fdec:	add	r0, r0, r1
   1fdf0:	ldr	r1, [fp, #16]
   1fdf4:	ldr	r1, [r1]
   1fdf8:	sub	r3, r0, r1
   1fdfc:	mov	r0, r5
   1fe00:	add	r1, sp, #24
   1fe04:	bl	26a0 <InflateSkipData>
   1fe08:	ldr	r0, [sl, #4]
   1fe0c:	add	r7, r7, #1
   1fe10:	add	r4, r4, r6, lsl #3
   1fe14:	mov	r6, r8
   1fe18:	cmp	r7, r0
   1fe1c:	ldr	r0, [fp, #16]
   1fe20:	blt	1fd8c <ReadCompressedDataSlab2+0x19fc>
   1fe24:	add	r0, sp, #24
   1fe28:	bl	1954 <inflateEnd@plt>
   1fe2c:	mov	r0, #0
   1fe30:	sub	sp, fp, #28
   1fe34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001fe38 <Mat_Create5>:
   1fe38:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1fe3c:	add	fp, sp, #24
   1fe40:	sub	sp, sp, #24
   1fe44:	mov	r4, #0
   1fe48:	mov	r8, r1
   1fe4c:	mov	r6, r0
   1fe50:	strh	r4, [sp, #22]
   1fe54:	ldr	r1, [pc, #408]	; 1fff4 <Mat_Create5+0x1bc>
   1fe58:	add	r1, pc, r1
   1fe5c:	bl	17f8 <fopen@plt>
   1fe60:	cmp	r0, #0
   1fe64:	beq	1ffe8 <Mat_Create5+0x1b0>
   1fe68:	mov	r5, r0
   1fe6c:	mov	r0, #44	; 0x2c
   1fe70:	bl	18e8 <malloc@plt>
   1fe74:	cmp	r0, #0
   1fe78:	beq	1ff1c <Mat_Create5+0xe4>
   1fe7c:	mov	r4, r0
   1fe80:	mov	r7, #0
   1fe84:	mov	r0, #128	; 0x80
   1fe88:	str	r7, [r4, #16]
   1fe8c:	str	r0, [r4, #28]
   1fe90:	mov	r0, #0
   1fe94:	str	r7, [r4, #32]
   1fe98:	str	r7, [r4, #36]	; 0x24
   1fe9c:	str	r7, [r4, #40]	; 0x28
   1fea0:	bl	184c <time@plt>
   1fea4:	str	r0, [sp, #16]
   1fea8:	str	r5, [r4]
   1feac:	mov	r1, r6
   1feb0:	ldr	r0, [pc, #320]	; 1fff8 <Mat_Create5+0x1c0>
   1feb4:	add	r0, pc, r0
   1feb8:	bl	1de4 <strdup_printf>
   1febc:	str	r0, [r4, #12]
   1fec0:	mov	r0, #128	; 0x80
   1fec4:	mov	r9, #1
   1fec8:	str	r7, [r4, #20]
   1fecc:	str	r9, [r4, #24]
   1fed0:	bl	18e8 <malloc@plt>
   1fed4:	mov	r7, r0
   1fed8:	str	r0, [r4, #4]
   1fedc:	mov	r0, #8
   1fee0:	bl	18e8 <malloc@plt>
   1fee4:	mov	r6, r0
   1fee8:	str	r0, [r4, #8]
   1feec:	mov	r0, r7
   1fef0:	mov	r1, #32
   1fef4:	mov	r2, #128	; 0x80
   1fef8:	bl	19a8 <memset@plt>
   1fefc:	cmp	r8, #0
   1ff00:	beq	1ff2c <Mat_Create5+0xf4>
   1ff04:	ldr	r2, [pc, #248]	; 20004 <Mat_Create5+0x1cc>
   1ff08:	mov	r0, r7
   1ff0c:	mov	r1, #116	; 0x74
   1ff10:	mov	r3, r8
   1ff14:	add	r2, pc, r2
   1ff18:	b	1ff64 <Mat_Create5+0x12c>
   1ff1c:	mov	r0, r5
   1ff20:	bl	19e4 <fclose@plt>
   1ff24:	mov	r4, #0
   1ff28:	b	1ffe8 <Mat_Create5+0x1b0>
   1ff2c:	add	r0, sp, #16
   1ff30:	bl	1870 <ctime@plt>
   1ff34:	mov	r1, #15
   1ff38:	mov	r2, #5
   1ff3c:	str	r0, [sp, #12]
   1ff40:	str	r9, [sp]
   1ff44:	mov	r0, r7
   1ff48:	str	r1, [sp, #8]
   1ff4c:	str	r2, [sp, #4]
   1ff50:	mov	r1, #116	; 0x74
   1ff54:	ldr	r2, [pc, #160]	; 1fffc <Mat_Create5+0x1c4>
   1ff58:	ldr	r3, [pc, #160]	; 20000 <Mat_Create5+0x1c8>
   1ff5c:	add	r2, pc, r2
   1ff60:	add	r3, pc, r3
   1ff64:	bl	1990 <snprintf@plt>
   1ff68:	cmp	r0, #116	; 0x74
   1ff6c:	mov	r1, #1
   1ff70:	mov	r2, #116	; 0x74
   1ff74:	mov	r3, r5
   1ff78:	movcs	r0, #0
   1ff7c:	strbcs	r0, [r7, #115]	; 0x73
   1ff80:	movw	r0, #8224	; 0x2020
   1ff84:	movt	r0, #8224	; 0x2020
   1ff88:	str	r0, [r6, #4]
   1ff8c:	str	r0, [r6]
   1ff90:	mov	r0, #256	; 0x100
   1ff94:	str	r0, [r4, #16]
   1ff98:	strh	r0, [sp, #20]
   1ff9c:	movw	r0, #19785	; 0x4d49
   1ffa0:	strh	r0, [sp, #22]
   1ffa4:	mov	r0, r7
   1ffa8:	bl	18c4 <fwrite@plt>
   1ffac:	mov	r0, r6
   1ffb0:	mov	r1, #1
   1ffb4:	mov	r2, #8
   1ffb8:	mov	r3, r5
   1ffbc:	bl	18c4 <fwrite@plt>
   1ffc0:	add	r0, sp, #20
   1ffc4:	mov	r1, #2
   1ffc8:	mov	r2, #1
   1ffcc:	mov	r3, r5
   1ffd0:	bl	18c4 <fwrite@plt>
   1ffd4:	add	r0, sp, #22
   1ffd8:	mov	r1, #2
   1ffdc:	mov	r2, #1
   1ffe0:	mov	r3, r5
   1ffe4:	bl	18c4 <fwrite@plt>
   1ffe8:	mov	r0, r4
   1ffec:	sub	sp, fp, #24
   1fff0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1fff4:	.word	0x00029e81
   1fff8:	.word	0x0002a74f
   1fffc:	.word	0x00029d81
   20000:	.word	0x00029dc5
   20004:	.word	0x0002a6ef

00020008 <Mat_VarRead5>:
   20008:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2000c:	add	fp, sp, #28
   20010:	sub	sp, sp, #44	; 0x2c
   20014:	mov	r4, r0
   20018:	mov	r0, #1
   2001c:	cmp	r1, #0
   20020:	str	r0, [fp, #-32]	; 0xffffffe0
   20024:	beq	20584 <Mat_VarRead5+0x57c>
   20028:	ldr	r0, [r1, #4]
   2002c:	mov	r5, r1
   20030:	cmp	r0, #0
   20034:	beq	20584 <Mat_VarRead5+0x57c>
   20038:	mov	r9, r5
   2003c:	ldr	r0, [r9, #52]!	; 0x34
   20040:	ldr	r1, [r0, #16]
   20044:	cmp	r1, #0
   20048:	beq	2005c <Mat_VarRead5+0x54>
   2004c:	str	r1, [r5, #40]	; 0x28
   20050:	mov	r1, #0
   20054:	str	r1, [r0, #16]
   20058:	b	20584 <Mat_VarRead5+0x57c>
   2005c:	ldr	r0, [r4]
   20060:	bl	1858 <ftell@plt>
   20064:	cmn	r0, #1
   20068:	beq	20090 <Mat_VarRead5+0x88>
   2006c:	mov	sl, r0
   20070:	sub	r1, fp, #32
   20074:	mov	r0, r5
   20078:	bl	45294 <SafeMulDims>
   2007c:	cmp	r0, #0
   20080:	beq	200a0 <Mat_VarRead5+0x98>
   20084:	ldr	r0, [pc, #4060]	; 21068 <Mat_VarRead5+0x1060>
   20088:	add	r0, pc, r0
   2008c:	b	20098 <Mat_VarRead5+0x90>
   20090:	ldr	r0, [pc, #4088]	; 21090 <Mat_VarRead5+0x1088>
   20094:	add	r0, pc, r0
   20098:	bl	19cc <Mat_Critical@plt>
   2009c:	b	20584 <Mat_VarRead5+0x57c>
   200a0:	ldr	r1, [r5, #16]
   200a4:	cmp	r1, #16
   200a8:	bhi	201f0 <Mat_VarRead5+0x1e8>
   200ac:	ldr	r7, [r4, #20]
   200b0:	add	r0, pc, #4
   200b4:	ldr	r2, [r0, r1, lsl #2]
   200b8:	add	pc, r0, r2
   200bc:	.word	0x00000044
   200c0:	.word	0x00000074
   200c4:	.word	0x000000bc
   200c8:	.word	0x00000134
   200cc:	.word	0x00000140
   200d0:	.word	0x000001e0
   200d4:	.word	0x000002b0
   200d8:	.word	0x000002d0
   200dc:	.word	0x000002f0
   200e0:	.word	0x00000310
   200e4:	.word	0x00000330
   200e8:	.word	0x00000350
   200ec:	.word	0x00000370
   200f0:	.word	0x00000390
   200f4:	.word	0x000003b0
   200f8:	.word	0x000003e4
   200fc:	.word	0x000004d0
   20100:	add	r0, pc, #904	; 0x388
   20104:	mov	r6, r5
   20108:	vld1.64	{d16-d17}, [r0]
   2010c:	mov	r0, #32
   20110:	vst1.32	{d16-d17}, [r6], r0
   20114:	mov	r0, #8
   20118:	bl	18e8 <malloc@plt>
   2011c:	mov	r1, #0
   20120:	str	r0, [r6]
   20124:	str	r1, [r0]
   20128:	str	r1, [r0, #4]
   2012c:	b	204c4 <Mat_VarRead5+0x4bc>
   20130:	ldr	r7, [r5, #40]	; 0x28
   20134:	cmp	r7, #0
   20138:	beq	20698 <Mat_VarRead5+0x690>
   2013c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20140:	cmp	r0, #0
   20144:	beq	20170 <Mat_VarRead5+0x168>
   20148:	mov	r6, #0
   2014c:	ldr	r1, [r7, r6, lsl #2]
   20150:	cmp	r1, #0
   20154:	beq	20164 <Mat_VarRead5+0x15c>
   20158:	mov	r0, r4
   2015c:	bl	20008 <Mat_VarRead5>
   20160:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20164:	add	r6, r6, #1
   20168:	cmp	r6, r0
   2016c:	bcc	2014c <Mat_VarRead5+0x144>
   20170:	mov	r0, #21
   20174:	b	205d8 <Mat_VarRead5+0x5d0>
   20178:	mov	r0, #22
   2017c:	str	r0, [r5, #8]
   20180:	ldr	r0, [r5]
   20184:	cmp	r0, #0
   20188:	beq	204c4 <Mat_VarRead5+0x4bc>
   2018c:	ldr	r0, [r5, #12]
   20190:	cmp	r0, #0
   20194:	ldrne	r0, [r5, #40]	; 0x28
   20198:	cmpne	r0, #0
   2019c:	beq	204c4 <Mat_VarRead5+0x4bc>
   201a0:	ldr	r0, [r5, #52]	; 0x34
   201a4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   201a8:	ldr	r2, [r0, #4]
   201ac:	add	r0, sp, #32
   201b0:	bl	452f0 <SafeMul>
   201b4:	ldr	r0, [sp, #32]
   201b8:	cmp	r0, #0
   201bc:	beq	204c4 <Mat_VarRead5+0x4bc>
   201c0:	ldr	r7, [r5, #40]	; 0x28
   201c4:	mov	r6, #0
   201c8:	ldr	r1, [r7, r6, lsl #2]
   201cc:	cmp	r1, #0
   201d0:	beq	201e0 <Mat_VarRead5+0x1d8>
   201d4:	mov	r0, r4
   201d8:	bl	20008 <Mat_VarRead5>
   201dc:	ldr	r0, [sp, #32]
   201e0:	add	r6, r6, #1
   201e4:	cmp	r6, r0
   201e8:	bcc	201c8 <Mat_VarRead5+0x1c0>
   201ec:	b	204c4 <Mat_VarRead5+0x4bc>
   201f0:	ldr	r0, [pc, #4060]	; 211d4 <Mat_VarRead5+0x11cc>
   201f4:	add	r0, pc, r0
   201f8:	b	206a4 <Mat_VarRead5+0x69c>
   201fc:	ldr	r1, [r5, #52]	; 0x34
   20200:	ldr	r0, [r4]
   20204:	mov	r2, #0
   20208:	mov	r6, #0
   2020c:	ldr	r1, [r1]
   20210:	bl	1a68 <fseek@plt>
   20214:	ldr	r0, [r5, #48]	; 0x30
   20218:	cmp	r0, #1
   2021c:	bne	205e0 <Mat_VarRead5+0x5d8>
   20220:	ldr	r0, [r9]
   20224:	add	r8, sp, #32
   20228:	mov	r2, r8
   2022c:	ldr	r1, [r0, #12]
   20230:	mov	r0, r4
   20234:	str	r6, [r1, #4]
   20238:	bl	30c0 <InflateDataType>
   2023c:	mov	r6, r7
   20240:	cmp	r7, #0
   20244:	beq	20250 <Mat_VarRead5+0x248>
   20248:	add	r0, sp, #32
   2024c:	bl	1c3c <Mat_uint32Swap>
   20250:	ldr	r0, [sp, #32]
   20254:	uxtb	r7, r0
   20258:	cmp	r7, #25
   2025c:	movcs	r7, #0
   20260:	cmp	r0, #65536	; 0x10000
   20264:	bcs	207d8 <Mat_VarRead5+0x7d0>
   20268:	ldr	r0, [r9]
   2026c:	add	r8, r8, #4
   20270:	mov	r2, r8
   20274:	ldr	r1, [r0, #12]
   20278:	mov	r0, r4
   2027c:	bl	30c0 <InflateDataType>
   20280:	cmp	r6, #0
   20284:	beq	20290 <Mat_VarRead5+0x288>
   20288:	mov	r0, r8
   2028c:	bl	1c3c <Mat_uint32Swap>
   20290:	ldr	r6, [sp, #36]	; 0x24
   20294:	mov	r0, #0
   20298:	b	207e0 <Mat_VarRead5+0x7d8>
   2029c:	mov	r0, #0
   202a0:	str	r7, [sp, #20]
   202a4:	str	r0, [sp, #28]
   202a8:	mov	r0, #28
   202ac:	str	r0, [r5, #12]
   202b0:	mov	r0, #28
   202b4:	bl	18e8 <malloc@plt>
   202b8:	cmp	r0, #0
   202bc:	str	r0, [r5, #40]	; 0x28
   202c0:	beq	206ac <Mat_VarRead5+0x6a4>
   202c4:	mov	r7, r0
   202c8:	ldr	r0, [r5]
   202cc:	mov	r2, #0
   202d0:	mov	r6, #0
   202d4:	str	r0, [r7]
   202d8:	ldr	r1, [r5, #52]	; 0x34
   202dc:	ldr	r0, [r4]
   202e0:	ldr	r1, [r1]
   202e4:	bl	1a68 <fseek@plt>
   202e8:	ldr	r0, [r5, #48]	; 0x30
   202ec:	str	r7, [sp, #24]
   202f0:	cmp	r0, #1
   202f4:	bne	206b8 <Mat_VarRead5+0x6b0>
   202f8:	ldr	r0, [r9]
   202fc:	add	r2, sp, #32
   20300:	ldr	r1, [r0, #12]
   20304:	mov	r0, r4
   20308:	str	r6, [r1, #4]
   2030c:	bl	30c0 <InflateDataType>
   20310:	ldr	r0, [r4, #20]
   20314:	cmp	r0, #0
   20318:	beq	20324 <Mat_VarRead5+0x31c>
   2031c:	add	r0, sp, #32
   20320:	bl	1c3c <Mat_uint32Swap>
   20324:	ldr	r0, [sp, #32]
   20328:	mov	r1, #0
   2032c:	uxtb	r6, r0
   20330:	cmp	r6, #25
   20334:	movcs	r6, r1
   20338:	cmp	r0, #65536	; 0x10000
   2033c:	bcs	20730 <Mat_VarRead5+0x728>
   20340:	mov	r0, #0
   20344:	add	r2, sp, #28
   20348:	mov	r3, #5
   2034c:	str	r0, [sp, #16]
   20350:	ldr	r0, [r9]
   20354:	ldr	r1, [r0, #12]
   20358:	mov	r0, #1
   2035c:	str	r0, [sp]
   20360:	mov	r0, r4
   20364:	bl	c964 <ReadCompressedInt32Data>
   20368:	b	20740 <Mat_VarRead5+0x738>
   2036c:	ldr	r1, [r5, #52]	; 0x34
   20370:	ldr	r0, [r4]
   20374:	mov	r2, #0
   20378:	ldr	r1, [r1]
   2037c:	bl	1a68 <fseek@plt>
   20380:	mov	r0, #8
   20384:	mov	r1, #9
   20388:	b	204bc <Mat_VarRead5+0x4b4>
   2038c:	ldr	r1, [r5, #52]	; 0x34
   20390:	ldr	r0, [r4]
   20394:	mov	r2, #0
   20398:	ldr	r1, [r1]
   2039c:	bl	1a68 <fseek@plt>
   203a0:	mov	r0, #4
   203a4:	mov	r1, #7
   203a8:	b	204bc <Mat_VarRead5+0x4b4>
   203ac:	ldr	r1, [r5, #52]	; 0x34
   203b0:	ldr	r0, [r4]
   203b4:	mov	r2, #0
   203b8:	ldr	r1, [r1]
   203bc:	bl	1a68 <fseek@plt>
   203c0:	mov	r0, #1
   203c4:	str	r0, [r5, #8]
   203c8:	b	204c0 <Mat_VarRead5+0x4b8>
   203cc:	ldr	r1, [r5, #52]	; 0x34
   203d0:	ldr	r0, [r4]
   203d4:	mov	r2, #0
   203d8:	ldr	r1, [r1]
   203dc:	bl	1a68 <fseek@plt>
   203e0:	mov	r0, #1
   203e4:	mov	r1, #2
   203e8:	b	204bc <Mat_VarRead5+0x4b4>
   203ec:	ldr	r1, [r5, #52]	; 0x34
   203f0:	ldr	r0, [r4]
   203f4:	mov	r2, #0
   203f8:	ldr	r1, [r1]
   203fc:	bl	1a68 <fseek@plt>
   20400:	mov	r0, #2
   20404:	mov	r1, #3
   20408:	b	204bc <Mat_VarRead5+0x4b4>
   2040c:	ldr	r1, [r5, #52]	; 0x34
   20410:	ldr	r0, [r4]
   20414:	mov	r2, #0
   20418:	ldr	r1, [r1]
   2041c:	bl	1a68 <fseek@plt>
   20420:	mov	r0, #2
   20424:	mov	r1, #4
   20428:	b	204bc <Mat_VarRead5+0x4b4>
   2042c:	ldr	r1, [r5, #52]	; 0x34
   20430:	ldr	r0, [r4]
   20434:	mov	r2, #0
   20438:	ldr	r1, [r1]
   2043c:	bl	1a68 <fseek@plt>
   20440:	mov	r0, #4
   20444:	mov	r1, #5
   20448:	b	204bc <Mat_VarRead5+0x4b4>
   2044c:	ldr	r1, [r5, #52]	; 0x34
   20450:	ldr	r0, [r4]
   20454:	mov	r2, #0
   20458:	ldr	r1, [r1]
   2045c:	bl	1a68 <fseek@plt>
   20460:	mov	r0, #4
   20464:	mov	r1, #6
   20468:	b	204bc <Mat_VarRead5+0x4b4>
   2046c:	ldr	r1, [r5, #52]	; 0x34
   20470:	ldr	r0, [r4]
   20474:	mov	r2, #0
   20478:	ldr	r1, [r1]
   2047c:	bl	1a68 <fseek@plt>
   20480:	mov	r0, #8
   20484:	mov	r1, #12
   20488:	b	204bc <Mat_VarRead5+0x4b4>
   2048c:	nop	{0}
   20490:	.word	0x00000000
   20494:	.word	0x00000002
   20498:	.word	0x00000009
   2049c:	.word	0x00000008
   204a0:	ldr	r1, [r5, #52]	; 0x34
   204a4:	ldr	r0, [r4]
   204a8:	mov	r2, #0
   204ac:	ldr	r1, [r1]
   204b0:	bl	1a68 <fseek@plt>
   204b4:	mov	r0, #8
   204b8:	mov	r1, #13
   204bc:	str	r1, [r5, #8]
   204c0:	str	r0, [r5, #12]
   204c4:	ldr	r0, [r5, #16]
   204c8:	sub	r0, r0, #6
   204cc:	cmp	r0, #9
   204d0:	bhi	20574 <Mat_VarRead5+0x56c>
   204d4:	ldr	r2, [r5, #12]
   204d8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   204dc:	ldr	r6, [r5, #20]
   204e0:	mov	r0, r5
   204e4:	bl	452f0 <SafeMul>
   204e8:	ldr	r0, [r5]
   204ec:	cmp	r6, #0
   204f0:	beq	20534 <Mat_VarRead5+0x52c>
   204f4:	bl	4520c <ComplexMalloc>
   204f8:	cmp	r0, #0
   204fc:	beq	2055c <Mat_VarRead5+0x554>
   20500:	ldr	r2, [r0]
   20504:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20508:	mov	r7, r0
   2050c:	mov	r0, r4
   20510:	mov	r1, r5
   20514:	bl	218e0 <Mat_VarReadNumeric5>
   20518:	ldr	r2, [r7, #4]
   2051c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20520:	mov	r0, r4
   20524:	mov	r1, r5
   20528:	bl	218e0 <Mat_VarReadNumeric5>
   2052c:	str	r7, [r5, #40]	; 0x28
   20530:	b	20574 <Mat_VarRead5+0x56c>
   20534:	bl	18e8 <malloc@plt>
   20538:	cmp	r0, #0
   2053c:	str	r0, [r5, #40]	; 0x28
   20540:	beq	20568 <Mat_VarRead5+0x560>
   20544:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20548:	mov	r2, r0
   2054c:	mov	r0, r4
   20550:	mov	r1, r5
   20554:	bl	218e0 <Mat_VarReadNumeric5>
   20558:	b	20574 <Mat_VarRead5+0x56c>
   2055c:	ldr	r0, [pc, #4072]	; 2154c <Mat_VarRead5+0x1544>
   20560:	add	r0, pc, r0
   20564:	b	20570 <Mat_VarRead5+0x568>
   20568:	ldr	r0, [pc, #4064]	; 21550 <Mat_VarRead5+0x1548>
   2056c:	add	r0, pc, r0
   20570:	bl	19cc <Mat_Critical@plt>
   20574:	ldr	r0, [r4]
   20578:	mov	r1, sl
   2057c:	mov	r2, #0
   20580:	bl	1a68 <fseek@plt>
   20584:	sub	sp, fp, #28
   20588:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2058c:	ldr	r0, [r5]
   20590:	cmp	r0, #0
   20594:	ldrne	r1, [r5, #12]
   20598:	cmpne	r1, #0
   2059c:	beq	204c4 <Mat_VarRead5+0x4bc>
   205a0:	ldr	r8, [r5, #40]	; 0x28
   205a4:	cmp	r8, #0
   205a8:	beq	205d4 <Mat_VarRead5+0x5cc>
   205ac:	cmp	r1, r0
   205b0:	bhi	205d4 <Mat_VarRead5+0x5cc>
   205b4:	udiv	r7, r0, r1
   205b8:	mov	r6, #0
   205bc:	ldr	r1, [r8, r6, lsl #2]
   205c0:	mov	r0, r4
   205c4:	bl	20008 <Mat_VarRead5>
   205c8:	add	r6, r6, #1
   205cc:	cmp	r6, r7
   205d0:	bcc	205bc <Mat_VarRead5+0x5b4>
   205d4:	mov	r0, #24
   205d8:	str	r0, [r5, #8]
   205dc:	b	204c4 <Mat_VarRead5+0x4bc>
   205e0:	ldr	r3, [r4]
   205e4:	mov	r0, #1
   205e8:	add	r8, sp, #32
   205ec:	mov	r1, #4
   205f0:	mov	r2, #1
   205f4:	str	r0, [sp, #24]
   205f8:	mov	r0, r8
   205fc:	bl	18d0 <fread@plt>
   20600:	mov	r6, r7
   20604:	cmp	r7, #0
   20608:	beq	20614 <Mat_VarRead5+0x60c>
   2060c:	add	r0, sp, #32
   20610:	bl	1c3c <Mat_uint32Swap>
   20614:	ldr	r0, [sp, #32]
   20618:	mov	r1, #0
   2061c:	uxtb	r7, r0
   20620:	cmp	r7, #25
   20624:	movcs	r7, r1
   20628:	cmp	r1, r0, lsr #16
   2062c:	bne	20660 <Mat_VarRead5+0x658>
   20630:	ldr	r3, [r4]
   20634:	add	r8, r8, #4
   20638:	mov	r1, #4
   2063c:	mov	r2, #1
   20640:	mov	r0, r8
   20644:	bl	18d0 <fread@plt>
   20648:	cmp	r6, #0
   2064c:	beq	20658 <Mat_VarRead5+0x650>
   20650:	mov	r0, r8
   20654:	bl	1c3c <Mat_uint32Swap>
   20658:	mov	r0, #0
   2065c:	str	r0, [sp, #24]
   20660:	mov	r0, #2
   20664:	str	r0, [r5, #8]
   20668:	mov	r0, #2
   2066c:	bl	193c <Mat_SizeOf@plt>
   20670:	str	r0, [r5, #12]
   20674:	mov	r2, r0
   20678:	mov	r0, r5
   2067c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   20680:	bl	452f0 <SafeMul>
   20684:	cmp	r0, #0
   20688:	beq	207f8 <Mat_VarRead5+0x7f0>
   2068c:	ldr	r0, [pc, #4080]	; 21684 <Mat_VarRead5+0x167c>
   20690:	add	r0, pc, r0
   20694:	b	20d88 <Mat_VarRead5+0xd80>
   20698:	ldr	r1, [r5, #36]	; 0x24
   2069c:	ldr	r0, [pc, #4092]	; 216a0 <Mat_VarRead5+0x1698>
   206a0:	add	r0, pc, r0
   206a4:	bl	19cc <Mat_Critical@plt>
   206a8:	b	204c4 <Mat_VarRead5+0x4bc>
   206ac:	ldr	r0, [pc, #4080]	; 216a4 <Mat_VarRead5+0x169c>
   206b0:	add	r0, pc, r0
   206b4:	b	20d88 <Mat_VarRead5+0xd80>
   206b8:	ldr	r3, [r4]
   206bc:	add	r0, sp, #32
   206c0:	mov	r1, #4
   206c4:	mov	r2, #1
   206c8:	bl	18d0 <fread@plt>
   206cc:	ldr	r0, [r4, #20]
   206d0:	cmp	r0, #0
   206d4:	beq	206e0 <Mat_VarRead5+0x6d8>
   206d8:	add	r0, sp, #32
   206dc:	bl	1c3c <Mat_uint32Swap>
   206e0:	ldr	r0, [sp, #32]
   206e4:	mov	r1, #0
   206e8:	uxtb	r6, r0
   206ec:	cmp	r6, #25
   206f0:	movcs	r6, r1
   206f4:	cmp	r0, #65536	; 0x10000
   206f8:	bcs	20730 <Mat_VarRead5+0x728>
   206fc:	ldr	r3, [r4]
   20700:	mov	r0, #0
   20704:	mov	r1, #4
   20708:	mov	r2, #1
   2070c:	str	r0, [sp, #16]
   20710:	add	r0, sp, #28
   20714:	bl	18d0 <fread@plt>
   20718:	ldr	r0, [r4, #20]
   2071c:	cmp	r0, #0
   20720:	beq	20740 <Mat_VarRead5+0x738>
   20724:	add	r0, sp, #28
   20728:	bl	1c28 <Mat_int32Swap>
   2072c:	b	20740 <Mat_VarRead5+0x738>
   20730:	lsr	r0, r0, #16
   20734:	str	r0, [sp, #28]
   20738:	mov	r0, #1
   2073c:	str	r0, [sp, #16]
   20740:	ldr	r0, [sp, #28]
   20744:	ldr	r8, [sp, #24]
   20748:	asr	r1, r0, #31
   2074c:	add	r0, r0, r1, lsr #30
   20750:	asr	r7, r0, #2
   20754:	bic	r0, r0, #3
   20758:	str	r7, [r8, #8]
   2075c:	bl	18e8 <malloc@plt>
   20760:	cmp	r0, #0
   20764:	str	r0, [r8, #4]
   20768:	beq	2089c <Mat_VarRead5+0x894>
   2076c:	mov	r2, r0
   20770:	ldr	r0, [r5, #48]	; 0x30
   20774:	cmp	r0, #1
   20778:	beq	208a8 <Mat_VarRead5+0x8a0>
   2077c:	mov	r1, #0
   20780:	cmp	r0, #0
   20784:	str	r1, [sp, #12]
   20788:	bne	20970 <Mat_VarRead5+0x968>
   2078c:	mov	r1, r2
   20790:	mov	r0, r4
   20794:	mov	r2, r6
   20798:	mov	r3, r7
   2079c:	bl	b46c <ReadInt32Data>
   207a0:	ldr	r1, [sp, #16]
   207a4:	cmp	r1, #0
   207a8:	addne	r0, r0, #4
   207ac:	asr	r1, r0, #31
   207b0:	str	r0, [sp, #12]
   207b4:	add	r1, r0, r1, lsr #29
   207b8:	bic	r1, r1, #7
   207bc:	subs	r1, r0, r1
   207c0:	beq	208f8 <Mat_VarRead5+0x8f0>
   207c4:	ldr	r0, [r4]
   207c8:	rsb	r1, r1, #8
   207cc:	mov	r2, #1
   207d0:	bl	1a68 <fseek@plt>
   207d4:	b	208f8 <Mat_VarRead5+0x8f0>
   207d8:	lsr	r6, r0, #16
   207dc:	mov	r0, #1
   207e0:	str	r0, [sp, #24]
   207e4:	mov	r0, r7
   207e8:	str	r7, [r5, #8]
   207ec:	bl	193c <Mat_SizeOf@plt>
   207f0:	str	r0, [r5, #12]
   207f4:	str	r6, [r5]
   207f8:	ldr	r0, [r5, #20]
   207fc:	cmp	r0, #0
   20800:	bne	204c4 <Mat_VarRead5+0x4bc>
   20804:	ldr	r6, [r5]
   20808:	mov	r1, #1
   2080c:	add	r0, r6, #1
   20810:	bl	17b0 <calloc@plt>
   20814:	cmp	r0, #0
   20818:	str	r0, [r5, #40]	; 0x28
   2081c:	beq	20a9c <Mat_VarRead5+0xa94>
   20820:	cmp	r6, #0
   20824:	beq	204c4 <Mat_VarRead5+0x4bc>
   20828:	ldr	r2, [r5, #12]
   2082c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   20830:	add	r0, sp, #28
   20834:	bl	452f0 <SafeMul>
   20838:	cmp	r0, #0
   2083c:	bne	204c4 <Mat_VarRead5+0x4bc>
   20840:	ldr	r0, [r5]
   20844:	ldr	r1, [sp, #28]
   20848:	cmp	r1, r0
   2084c:	bhi	204c4 <Mat_VarRead5+0x4bc>
   20850:	ldr	r0, [r5, #48]	; 0x30
   20854:	cmp	r0, #1
   20858:	beq	20e78 <Mat_VarRead5+0xe70>
   2085c:	cmp	r0, #0
   20860:	bne	204c4 <Mat_VarRead5+0x4bc>
   20864:	ldr	r1, [r5, #40]	; 0x28
   20868:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2086c:	mov	r0, r4
   20870:	mov	r2, r7
   20874:	bl	15128 <ReadCharData>
   20878:	ldr	r1, [sp, #24]
   2087c:	cmp	r1, #0
   20880:	addne	r0, r0, #4
   20884:	asr	r1, r0, #31
   20888:	add	r1, r0, r1, lsr #29
   2088c:	bic	r1, r1, #7
   20890:	subs	r1, r0, r1
   20894:	bne	2175c <Mat_VarRead5+0x1754>
   20898:	b	204c4 <Mat_VarRead5+0x4bc>
   2089c:	ldr	r0, [pc, #4044]	; 21870 <Mat_VarRead5+0x1868>
   208a0:	add	r0, pc, r0
   208a4:	b	20d88 <Mat_VarRead5+0xd80>
   208a8:	ldr	r0, [r9]
   208ac:	mov	r3, r6
   208b0:	ldr	r1, [r0, #12]
   208b4:	mov	r0, r4
   208b8:	str	r7, [sp]
   208bc:	bl	c964 <ReadCompressedInt32Data>
   208c0:	ldr	r1, [sp, #16]
   208c4:	cmp	r1, #0
   208c8:	addne	r0, r0, #4
   208cc:	asr	r1, r0, #31
   208d0:	str	r0, [sp, #12]
   208d4:	add	r1, r0, r1, lsr #29
   208d8:	bic	r1, r1, #7
   208dc:	subs	r0, r0, r1
   208e0:	beq	208f8 <Mat_VarRead5+0x8f0>
   208e4:	ldr	r1, [r9]
   208e8:	rsb	r2, r0, #8
   208ec:	mov	r0, r4
   208f0:	ldr	r1, [r1, #12]
   208f4:	bl	234c <InflateSkip>
   208f8:	ldr	r0, [r5, #48]	; 0x30
   208fc:	cmp	r0, #1
   20900:	bne	20970 <Mat_VarRead5+0x968>
   20904:	ldr	r0, [r9]
   20908:	mov	r6, #0
   2090c:	add	r2, sp, #32
   20910:	ldr	r1, [r0, #12]
   20914:	mov	r0, r4
   20918:	str	r6, [r1, #4]
   2091c:	bl	30c0 <InflateDataType>
   20920:	ldr	r0, [r4, #20]
   20924:	cmp	r0, #0
   20928:	beq	20934 <Mat_VarRead5+0x92c>
   2092c:	add	r0, sp, #32
   20930:	bl	1c3c <Mat_uint32Swap>
   20934:	ldr	r0, [sp, #32]
   20938:	uxtb	r1, r0
   2093c:	cmp	r1, #25
   20940:	movcc	r6, r1
   20944:	cmp	r0, #65536	; 0x10000
   20948:	bcs	209e8 <Mat_VarRead5+0x9e0>
   2094c:	ldr	r0, [r9]
   20950:	add	r2, sp, #28
   20954:	mov	r3, #5
   20958:	ldr	r1, [r0, #12]
   2095c:	mov	r0, #1
   20960:	str	r0, [sp]
   20964:	mov	r0, r4
   20968:	bl	c964 <ReadCompressedInt32Data>
   2096c:	b	209f8 <Mat_VarRead5+0x9f0>
   20970:	ldr	r3, [r4]
   20974:	add	r0, sp, #32
   20978:	mov	r1, #4
   2097c:	mov	r2, #1
   20980:	bl	18d0 <fread@plt>
   20984:	ldr	r0, [r4, #20]
   20988:	cmp	r0, #0
   2098c:	beq	20998 <Mat_VarRead5+0x990>
   20990:	add	r0, sp, #32
   20994:	bl	1c3c <Mat_uint32Swap>
   20998:	ldr	r0, [sp, #32]
   2099c:	mov	r1, #0
   209a0:	uxtb	r6, r0
   209a4:	cmp	r6, #25
   209a8:	movcs	r6, r1
   209ac:	cmp	r0, #65536	; 0x10000
   209b0:	bcs	209e8 <Mat_VarRead5+0x9e0>
   209b4:	ldr	r3, [r4]
   209b8:	add	r0, sp, #28
   209bc:	mov	r1, #4
   209c0:	mov	r2, #1
   209c4:	bl	18d0 <fread@plt>
   209c8:	ldr	r0, [r4, #20]
   209cc:	cmp	r0, #0
   209d0:	beq	209f8 <Mat_VarRead5+0x9f0>
   209d4:	mov	r0, #0
   209d8:	str	r0, [sp, #16]
   209dc:	add	r0, sp, #28
   209e0:	bl	1c28 <Mat_int32Swap>
   209e4:	b	20a00 <Mat_VarRead5+0x9f8>
   209e8:	lsr	r0, r0, #16
   209ec:	str	r0, [sp, #28]
   209f0:	mov	r0, #1
   209f4:	b	209fc <Mat_VarRead5+0x9f4>
   209f8:	mov	r0, #0
   209fc:	str	r0, [sp, #16]
   20a00:	ldr	r0, [sp, #28]
   20a04:	ldr	r8, [sp, #24]
   20a08:	asr	r1, r0, #31
   20a0c:	add	r0, r0, r1, lsr #30
   20a10:	asr	r7, r0, #2
   20a14:	bic	r0, r0, #3
   20a18:	str	r7, [r8, #16]
   20a1c:	bl	18e8 <malloc@plt>
   20a20:	cmp	r0, #0
   20a24:	str	r0, [r8, #12]
   20a28:	beq	20a90 <Mat_VarRead5+0xa88>
   20a2c:	mov	r2, r0
   20a30:	ldr	r0, [r5, #48]	; 0x30
   20a34:	cmp	r0, #1
   20a38:	beq	20aa8 <Mat_VarRead5+0xaa0>
   20a3c:	cmp	r0, #0
   20a40:	bne	20b74 <Mat_VarRead5+0xb6c>
   20a44:	mov	r1, r2
   20a48:	mov	r0, r4
   20a4c:	mov	r2, r6
   20a50:	mov	r3, r7
   20a54:	bl	b46c <ReadInt32Data>
   20a58:	ldr	r1, [sp, #16]
   20a5c:	cmp	r1, #0
   20a60:	addne	r0, r0, #4
   20a64:	asr	r1, r0, #31
   20a68:	str	r0, [sp, #12]
   20a6c:	add	r1, r0, r1, lsr #29
   20a70:	bic	r1, r1, #7
   20a74:	subs	r1, r0, r1
   20a78:	beq	20af8 <Mat_VarRead5+0xaf0>
   20a7c:	ldr	r0, [r4]
   20a80:	rsb	r1, r1, #8
   20a84:	mov	r2, #1
   20a88:	bl	1a68 <fseek@plt>
   20a8c:	b	20af8 <Mat_VarRead5+0xaf0>
   20a90:	ldr	r0, [pc, #3652]	; 218dc <Mat_VarRead5+0x18d4>
   20a94:	add	r0, pc, r0
   20a98:	b	20d88 <Mat_VarRead5+0xd80>
   20a9c:	ldr	r0, [pc, #3628]	; 218d0 <Mat_VarRead5+0x18c8>
   20aa0:	add	r0, pc, r0
   20aa4:	b	20d88 <Mat_VarRead5+0xd80>
   20aa8:	ldr	r0, [r9]
   20aac:	mov	r3, r6
   20ab0:	ldr	r1, [r0, #12]
   20ab4:	mov	r0, r4
   20ab8:	str	r7, [sp]
   20abc:	bl	c964 <ReadCompressedInt32Data>
   20ac0:	ldr	r1, [sp, #16]
   20ac4:	cmp	r1, #0
   20ac8:	addne	r0, r0, #4
   20acc:	asr	r1, r0, #31
   20ad0:	str	r0, [sp, #12]
   20ad4:	add	r1, r0, r1, lsr #29
   20ad8:	bic	r1, r1, #7
   20adc:	subs	r0, r0, r1
   20ae0:	beq	20af8 <Mat_VarRead5+0xaf0>
   20ae4:	ldr	r1, [r9]
   20ae8:	rsb	r2, r0, #8
   20aec:	mov	r0, r4
   20af0:	ldr	r1, [r1, #12]
   20af4:	bl	234c <InflateSkip>
   20af8:	ldr	r0, [r5, #48]	; 0x30
   20afc:	cmp	r0, #1
   20b00:	bne	20b74 <Mat_VarRead5+0xb6c>
   20b04:	ldr	r0, [r9]
   20b08:	mov	r6, #0
   20b0c:	add	r2, sp, #32
   20b10:	ldr	r1, [r0, #12]
   20b14:	mov	r0, r4
   20b18:	str	r6, [r1, #4]
   20b1c:	bl	30c0 <InflateDataType>
   20b20:	ldr	r0, [r4, #20]
   20b24:	cmp	r0, #0
   20b28:	beq	20b34 <Mat_VarRead5+0xb2c>
   20b2c:	add	r0, sp, #32
   20b30:	bl	1c3c <Mat_uint32Swap>
   20b34:	ldr	r0, [sp, #32]
   20b38:	uxtb	r1, r0
   20b3c:	cmp	r1, #25
   20b40:	movcc	r6, r1
   20b44:	cmp	r0, #65536	; 0x10000
   20b48:	bcs	20be4 <Mat_VarRead5+0xbdc>
   20b4c:	ldr	r0, [r9]
   20b50:	add	r2, sp, #28
   20b54:	mov	r3, #5
   20b58:	ldr	r1, [r0, #12]
   20b5c:	mov	r0, #1
   20b60:	str	r0, [sp]
   20b64:	mov	r0, r4
   20b68:	bl	c964 <ReadCompressedInt32Data>
   20b6c:	mov	r8, #0
   20b70:	b	20bf0 <Mat_VarRead5+0xbe8>
   20b74:	ldr	r3, [r4]
   20b78:	add	r0, sp, #32
   20b7c:	mov	r1, #4
   20b80:	mov	r2, #1
   20b84:	bl	18d0 <fread@plt>
   20b88:	ldr	r0, [r4, #20]
   20b8c:	cmp	r0, #0
   20b90:	beq	20b9c <Mat_VarRead5+0xb94>
   20b94:	add	r0, sp, #32
   20b98:	bl	1c3c <Mat_uint32Swap>
   20b9c:	ldr	r0, [sp, #32]
   20ba0:	mov	r8, #0
   20ba4:	uxtb	r6, r0
   20ba8:	cmp	r6, #25
   20bac:	movcs	r6, r8
   20bb0:	cmp	r0, #65536	; 0x10000
   20bb4:	bcs	20be4 <Mat_VarRead5+0xbdc>
   20bb8:	ldr	r3, [r4]
   20bbc:	add	r0, sp, #28
   20bc0:	mov	r1, #4
   20bc4:	mov	r2, #1
   20bc8:	bl	18d0 <fread@plt>
   20bcc:	ldr	r0, [r4, #20]
   20bd0:	cmp	r0, #0
   20bd4:	beq	20bf0 <Mat_VarRead5+0xbe8>
   20bd8:	add	r0, sp, #28
   20bdc:	bl	1c28 <Mat_int32Swap>
   20be0:	b	20bf0 <Mat_VarRead5+0xbe8>
   20be4:	lsr	r0, r0, #16
   20be8:	mov	r8, #1
   20bec:	str	r0, [sp, #28]
   20bf0:	ldr	r0, [r5, #28]
   20bf4:	mov	r7, r6
   20bf8:	cmp	r0, #0
   20bfc:	movwne	r7, #2
   20c00:	cmp	r6, #9
   20c04:	movne	r7, r6
   20c08:	mov	r0, r7
   20c0c:	str	r7, [r5, #8]
   20c10:	bl	193c <Mat_SizeOf@plt>
   20c14:	cmp	r0, #0
   20c18:	beq	204c4 <Mat_VarRead5+0x4bc>
   20c1c:	ldr	r1, [sp, #28]
   20c20:	ldr	r6, [sp, #24]
   20c24:	str	r7, [sp, #8]
   20c28:	str	r8, [sp, #16]
   20c2c:	udiv	r7, r1, r0
   20c30:	str	r7, [r6, #20]!
   20c34:	ldr	r0, [r5, #8]
   20c38:	ldr	r8, [r5, #20]
   20c3c:	bl	193c <Mat_SizeOf@plt>
   20c40:	mul	r0, r0, r7
   20c44:	cmp	r8, #0
   20c48:	beq	20ce0 <Mat_VarRead5+0xcd8>
   20c4c:	bl	4520c <ComplexMalloc>
   20c50:	cmp	r0, #0
   20c54:	beq	20d74 <Mat_VarRead5+0xd6c>
   20c58:	mov	r8, r0
   20c5c:	ldr	r0, [r5, #48]	; 0x30
   20c60:	str	r6, [sp, #4]
   20c64:	cmp	r0, #1
   20c68:	beq	20d90 <Mat_VarRead5+0xd88>
   20c6c:	cmp	r0, #0
   20c70:	bne	21648 <Mat_VarRead5+0x1640>
   20c74:	ldr	r0, [r5, #8]
   20c78:	sub	r0, r0, #1
   20c7c:	cmp	r0, #12
   20c80:	bhi	20fb8 <Mat_VarRead5+0xfb0>
   20c84:	add	r1, pc, #4
   20c88:	ldr	r0, [r1, r0, lsl #2]
   20c8c:	add	pc, r1, r0
   20c90:	.word	0x00000034
   20c94:	.word	0x0000022c
   20c98:	.word	0x00000248
   20c9c:	.word	0x00000264
   20ca0:	.word	0x00000280
   20ca4:	.word	0x0000029c
   20ca8:	.word	0x000002b8
   20cac:	.word	0x00000328
   20cb0:	.word	0x000002d4
   20cb4:	.word	0x00000328
   20cb8:	.word	0x00000328
   20cbc:	.word	0x000002f0
   20cc0:	.word	0x0000030c
   20cc4:	ldr	r0, [sp, #4]
   20cc8:	ldr	r1, [r8]
   20ccc:	ldr	r2, [sp, #8]
   20cd0:	ldr	r3, [r0]
   20cd4:	mov	r0, r4
   20cd8:	bl	11cec <ReadInt8Data>
   20cdc:	b	20fb4 <Mat_VarRead5+0xfac>
   20ce0:	bl	18e8 <malloc@plt>
   20ce4:	mov	r2, r0
   20ce8:	ldr	r0, [sp, #24]
   20cec:	cmp	r2, #0
   20cf0:	str	r2, [r0, #24]
   20cf4:	beq	20d80 <Mat_VarRead5+0xd78>
   20cf8:	ldr	r0, [r5, #48]	; 0x30
   20cfc:	cmp	r0, #1
   20d00:	beq	20e08 <Mat_VarRead5+0xe00>
   20d04:	cmp	r0, #0
   20d08:	bne	204c4 <Mat_VarRead5+0x4bc>
   20d0c:	ldr	r0, [r5, #8]
   20d10:	sub	r0, r0, #1
   20d14:	cmp	r0, #12
   20d18:	bhi	21738 <Mat_VarRead5+0x1730>
   20d1c:	add	r1, pc, #4
   20d20:	ldr	r0, [r1, r0, lsl #2]
   20d24:	add	pc, r1, r0
   20d28:	.word	0x00000034
   20d2c:	.word	0x0000092c
   20d30:	.word	0x00000944
   20d34:	.word	0x00000960
   20d38:	.word	0x00000980
   20d3c:	.word	0x00000998
   20d40:	.word	0x000009b0
   20d44:	.word	0x00000a10
   20d48:	.word	0x000009c8
   20d4c:	.word	0x00000a10
   20d50:	.word	0x00000a10
   20d54:	.word	0x000009e0
   20d58:	.word	0x000009f8
   20d5c:	mov	r1, r2
   20d60:	ldr	r3, [r6]
   20d64:	ldr	r2, [sp, #8]
   20d68:	mov	r0, r4
   20d6c:	bl	11cec <ReadInt8Data>
   20d70:	b	21734 <Mat_VarRead5+0x172c>
   20d74:	ldr	r0, [pc, #2904]	; 218d4 <Mat_VarRead5+0x18cc>
   20d78:	add	r0, pc, r0
   20d7c:	b	20d88 <Mat_VarRead5+0xd80>
   20d80:	ldr	r0, [pc, #2896]	; 218d8 <Mat_VarRead5+0x18d0>
   20d84:	add	r0, pc, r0
   20d88:	bl	19cc <Mat_Critical@plt>
   20d8c:	b	204c4 <Mat_VarRead5+0x4bc>
   20d90:	ldr	r0, [r5, #8]
   20d94:	sub	r0, r0, #1
   20d98:	cmp	r0, #12
   20d9c:	bhi	21250 <Mat_VarRead5+0x1248>
   20da0:	add	r1, pc, #4
   20da4:	ldr	r0, [r1, r0, lsl #2]
   20da8:	add	pc, r1, r0
   20dac:	.word	0x00000034
   20db0:	.word	0x00000338
   20db4:	.word	0x00000360
   20db8:	.word	0x00000388
   20dbc:	.word	0x000003b0
   20dc0:	.word	0x000003d8
   20dc4:	.word	0x00000400
   20dc8:	.word	0x000004a4
   20dcc:	.word	0x0000042c
   20dd0:	.word	0x000004a4
   20dd4:	.word	0x000004a4
   20dd8:	.word	0x00000454
   20ddc:	.word	0x0000047c
   20de0:	ldr	r0, [r9]
   20de4:	ldr	r2, [r8]
   20de8:	ldr	r3, [sp, #8]
   20dec:	ldr	r1, [r0, #12]
   20df0:	ldr	r0, [sp, #4]
   20df4:	ldr	r0, [r0]
   20df8:	str	r0, [sp]
   20dfc:	mov	r0, r4
   20e00:	bl	13168 <ReadCompressedInt8Data>
   20e04:	b	2124c <Mat_VarRead5+0x1244>
   20e08:	ldr	r0, [r5, #8]
   20e0c:	sub	r0, r0, #1
   20e10:	cmp	r0, #12
   20e14:	bhi	21894 <Mat_VarRead5+0x188c>
   20e18:	add	r1, pc, #4
   20e1c:	ldr	r0, [r1, r0, lsl #2]
   20e20:	add	pc, r1, r0
   20e24:	.word	0x00000034
   20e28:	.word	0x0000094c
   20e2c:	.word	0x0000096c
   20e30:	.word	0x0000098c
   20e34:	.word	0x000009ac
   20e38:	.word	0x000009cc
   20e3c:	.word	0x000009ec
   20e40:	.word	0x00000a70
   20e44:	.word	0x00000a0c
   20e48:	.word	0x00000a70
   20e4c:	.word	0x00000a70
   20e50:	.word	0x00000a2c
   20e54:	.word	0x00000a50
   20e58:	ldr	r0, [r9]
   20e5c:	ldr	r3, [sp, #8]
   20e60:	ldr	r1, [r0, #12]
   20e64:	ldr	r0, [r6]
   20e68:	str	r0, [sp]
   20e6c:	mov	r0, r4
   20e70:	bl	13168 <ReadCompressedInt8Data>
   20e74:	b	21890 <Mat_VarRead5+0x1888>
   20e78:	ldr	r0, [r5, #52]	; 0x34
   20e7c:	ldr	r2, [r5, #40]	; 0x28
   20e80:	mov	r3, r7
   20e84:	ldr	r1, [r0, #12]
   20e88:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20e8c:	str	r0, [sp]
   20e90:	mov	r0, r4
   20e94:	bl	15034 <ReadCompressedCharData>
   20e98:	ldr	r1, [sp, #24]
   20e9c:	cmp	r1, #0
   20ea0:	addne	r0, r0, #4
   20ea4:	asr	r1, r0, #31
   20ea8:	add	r1, r0, r1, lsr #29
   20eac:	bic	r1, r1, #7
   20eb0:	subs	r0, r0, r1
   20eb4:	bne	218b8 <Mat_VarRead5+0x18b0>
   20eb8:	b	204c4 <Mat_VarRead5+0x4bc>
   20ebc:	ldr	r0, [sp, #4]
   20ec0:	ldr	r1, [r8]
   20ec4:	ldr	r2, [sp, #8]
   20ec8:	ldr	r3, [r0]
   20ecc:	mov	r0, r4
   20ed0:	bl	13690 <ReadUInt8Data>
   20ed4:	b	20fb4 <Mat_VarRead5+0xfac>
   20ed8:	ldr	r0, [sp, #4]
   20edc:	ldr	r1, [r8]
   20ee0:	ldr	r2, [sp, #8]
   20ee4:	ldr	r3, [r0]
   20ee8:	mov	r0, r4
   20eec:	bl	e8ac <ReadInt16Data>
   20ef0:	b	20fb4 <Mat_VarRead5+0xfac>
   20ef4:	ldr	r0, [sp, #4]
   20ef8:	ldr	r1, [r8]
   20efc:	ldr	r2, [sp, #8]
   20f00:	ldr	r3, [r0]
   20f04:	mov	r0, r4
   20f08:	bl	102cc <ReadUInt16Data>
   20f0c:	b	20fb4 <Mat_VarRead5+0xfac>
   20f10:	ldr	r0, [sp, #4]
   20f14:	ldr	r1, [r8]
   20f18:	ldr	r2, [sp, #8]
   20f1c:	ldr	r3, [r0]
   20f20:	mov	r0, r4
   20f24:	bl	b46c <ReadInt32Data>
   20f28:	b	20fb4 <Mat_VarRead5+0xfac>
   20f2c:	ldr	r0, [sp, #4]
   20f30:	ldr	r1, [r8]
   20f34:	ldr	r2, [sp, #8]
   20f38:	ldr	r3, [r0]
   20f3c:	mov	r0, r4
   20f40:	bl	ce8c <ReadUInt32Data>
   20f44:	b	20fb4 <Mat_VarRead5+0xfac>
   20f48:	ldr	r0, [sp, #4]
   20f4c:	ldr	r1, [r8]
   20f50:	ldr	r2, [sp, #8]
   20f54:	ldr	r3, [r0]
   20f58:	mov	r0, r4
   20f5c:	bl	5f94 <ReadSingleData>
   20f60:	b	20fb4 <Mat_VarRead5+0xfac>
   20f64:	ldr	r0, [sp, #4]
   20f68:	ldr	r1, [r8]
   20f6c:	ldr	r2, [sp, #8]
   20f70:	ldr	r3, [r0]
   20f74:	mov	r0, r4
   20f78:	bl	3790 <ReadDoubleData>
   20f7c:	b	20fb4 <Mat_VarRead5+0xfac>
   20f80:	ldr	r0, [sp, #4]
   20f84:	ldr	r1, [r8]
   20f88:	ldr	r2, [sp, #8]
   20f8c:	ldr	r3, [r0]
   20f90:	mov	r0, r4
   20f94:	bl	7bbc <ReadInt64Data>
   20f98:	b	20fb4 <Mat_VarRead5+0xfac>
   20f9c:	ldr	r0, [sp, #4]
   20fa0:	ldr	r1, [r8]
   20fa4:	ldr	r2, [sp, #8]
   20fa8:	ldr	r3, [r0]
   20fac:	mov	r0, r4
   20fb0:	bl	9814 <ReadUInt64Data>
   20fb4:	str	r0, [sp, #12]
   20fb8:	ldr	r0, [sp, #16]
   20fbc:	ldr	r1, [sp, #12]
   20fc0:	cmp	r0, #0
   20fc4:	addne	r1, r1, #4
   20fc8:	asr	r0, r1, #31
   20fcc:	add	r0, r1, r0, lsr #29
   20fd0:	bic	r0, r0, #7
   20fd4:	subs	r1, r1, r0
   20fd8:	beq	20fec <Mat_VarRead5+0xfe4>
   20fdc:	ldr	r0, [r4]
   20fe0:	rsb	r1, r1, #8
   20fe4:	mov	r2, #1
   20fe8:	bl	1a68 <fseek@plt>
   20fec:	ldr	r3, [r4]
   20ff0:	add	r6, sp, #32
   20ff4:	mov	r1, #4
   20ff8:	mov	r2, #1
   20ffc:	mov	r0, r6
   21000:	bl	18d0 <fread@plt>
   21004:	ldr	r0, [sp, #20]
   21008:	cmp	r0, #0
   2100c:	beq	21018 <Mat_VarRead5+0x1010>
   21010:	add	r0, sp, #32
   21014:	bl	1c3c <Mat_uint32Swap>
   21018:	ldr	r0, [sp, #32]
   2101c:	uxtb	r9, r0
   21020:	cmp	r9, #25
   21024:	movcs	r9, #0
   21028:	cmp	r0, #65536	; 0x10000
   2102c:	bcs	2106c <Mat_VarRead5+0x1064>
   21030:	ldr	r3, [r4]
   21034:	add	r6, r6, #4
   21038:	mov	r1, #4
   2103c:	mov	r2, #1
   21040:	mov	r0, r6
   21044:	bl	18d0 <fread@plt>
   21048:	ldr	r0, [sp, #20]
   2104c:	cmp	r0, #0
   21050:	beq	2105c <Mat_VarRead5+0x1054>
   21054:	mov	r0, r6
   21058:	bl	1c3c <Mat_uint32Swap>
   2105c:	ldr	r0, [sp, #36]	; 0x24
   21060:	mov	r6, #0
   21064:	b	21074 <Mat_VarRead5+0x106c>
   21068:	.word	0x00029cbc
   2106c:	lsr	r0, r0, #16
   21070:	mov	r6, #1
   21074:	ldr	r1, [r5, #8]
   21078:	sub	r1, r1, #1
   2107c:	cmp	r1, #12
   21080:	bhi	2147c <Mat_VarRead5+0x1474>
   21084:	add	r2, pc, #8
   21088:	ldr	r1, [r2, r1, lsl #2]
   2108c:	add	pc, r2, r1
   21090:	.word	0x00029c24
   21094:	.word	0x00000034
   21098:	.word	0x000002f0
   2109c:	.word	0x0000030c
   210a0:	.word	0x00000328
   210a4:	.word	0x00000344
   210a8:	.word	0x00000360
   210ac:	.word	0x0000037c
   210b0:	.word	0x000003e8
   210b4:	.word	0x00000398
   210b8:	.word	0x000003e8
   210bc:	.word	0x000003e8
   210c0:	.word	0x000003b4
   210c4:	.word	0x000003d0
   210c8:	ldr	r0, [sp, #4]
   210cc:	ldr	r1, [r8, #4]
   210d0:	mov	r2, r9
   210d4:	ldr	r3, [r0]
   210d8:	mov	r0, r4
   210dc:	bl	11cec <ReadInt8Data>
   210e0:	b	2147c <Mat_VarRead5+0x1474>
   210e4:	ldr	r0, [r9]
   210e8:	ldr	r2, [r8]
   210ec:	ldr	r3, [sp, #8]
   210f0:	ldr	r1, [r0, #12]
   210f4:	ldr	r0, [sp, #4]
   210f8:	ldr	r0, [r0]
   210fc:	str	r0, [sp]
   21100:	mov	r0, r4
   21104:	bl	14b0c <ReadCompressedUInt8Data>
   21108:	b	2124c <Mat_VarRead5+0x1244>
   2110c:	ldr	r0, [r9]
   21110:	ldr	r2, [r8]
   21114:	ldr	r3, [sp, #8]
   21118:	ldr	r1, [r0, #12]
   2111c:	ldr	r0, [sp, #4]
   21120:	ldr	r0, [r0]
   21124:	str	r0, [sp]
   21128:	mov	r0, r4
   2112c:	bl	fda4 <ReadCompressedInt16Data>
   21130:	b	2124c <Mat_VarRead5+0x1244>
   21134:	ldr	r0, [r9]
   21138:	ldr	r2, [r8]
   2113c:	ldr	r3, [sp, #8]
   21140:	ldr	r1, [r0, #12]
   21144:	ldr	r0, [sp, #4]
   21148:	ldr	r0, [r0]
   2114c:	str	r0, [sp]
   21150:	mov	r0, r4
   21154:	bl	117c4 <ReadCompressedUInt16Data>
   21158:	b	2124c <Mat_VarRead5+0x1244>
   2115c:	ldr	r0, [r9]
   21160:	ldr	r2, [r8]
   21164:	ldr	r3, [sp, #8]
   21168:	ldr	r1, [r0, #12]
   2116c:	ldr	r0, [sp, #4]
   21170:	ldr	r0, [r0]
   21174:	str	r0, [sp]
   21178:	mov	r0, r4
   2117c:	bl	c964 <ReadCompressedInt32Data>
   21180:	b	2124c <Mat_VarRead5+0x1244>
   21184:	ldr	r0, [r9]
   21188:	ldr	r2, [r8]
   2118c:	ldr	r3, [sp, #8]
   21190:	ldr	r1, [r0, #12]
   21194:	ldr	r0, [sp, #4]
   21198:	ldr	r0, [r0]
   2119c:	str	r0, [sp]
   211a0:	mov	r0, r4
   211a4:	bl	e384 <ReadCompressedUInt32Data>
   211a8:	b	2124c <Mat_VarRead5+0x1244>
   211ac:	ldr	r0, [r9]
   211b0:	ldr	r2, [r8]
   211b4:	ldr	r3, [sp, #8]
   211b8:	ldr	r1, [r0, #12]
   211bc:	ldr	r0, [sp, #4]
   211c0:	ldr	r0, [r0]
   211c4:	str	r0, [sp]
   211c8:	mov	r0, r4
   211cc:	bl	7620 <ReadCompressedSingleData>
   211d0:	b	2124c <Mat_VarRead5+0x1244>
   211d4:	.word	0x00029ca3
   211d8:	ldr	r0, [r9]
   211dc:	ldr	r2, [r8]
   211e0:	ldr	r3, [sp, #8]
   211e4:	ldr	r1, [r0, #12]
   211e8:	ldr	r0, [sp, #4]
   211ec:	ldr	r0, [r0]
   211f0:	str	r0, [sp]
   211f4:	mov	r0, r4
   211f8:	bl	4c7c <ReadCompressedDoubleData>
   211fc:	b	2124c <Mat_VarRead5+0x1244>
   21200:	ldr	r0, [r9]
   21204:	ldr	r2, [r8]
   21208:	ldr	r3, [sp, #8]
   2120c:	ldr	r1, [r0, #12]
   21210:	ldr	r0, [sp, #4]
   21214:	ldr	r0, [r0]
   21218:	str	r0, [sp]
   2121c:	mov	r0, r4
   21220:	bl	927c <ReadCompressedInt64Data>
   21224:	b	2124c <Mat_VarRead5+0x1244>
   21228:	ldr	r0, [r9]
   2122c:	ldr	r2, [r8]
   21230:	ldr	r3, [sp, #8]
   21234:	ldr	r1, [r0, #12]
   21238:	ldr	r0, [sp, #4]
   2123c:	ldr	r0, [r0]
   21240:	str	r0, [sp]
   21244:	mov	r0, r4
   21248:	bl	aed4 <ReadCompressedUInt64Data>
   2124c:	str	r0, [sp, #12]
   21250:	ldr	r0, [sp, #16]
   21254:	ldr	r1, [sp, #12]
   21258:	cmp	r0, #0
   2125c:	addne	r1, r1, #4
   21260:	asr	r0, r1, #31
   21264:	add	r0, r1, r0, lsr #29
   21268:	bic	r0, r0, #7
   2126c:	subs	r0, r1, r0
   21270:	beq	21288 <Mat_VarRead5+0x1280>
   21274:	ldr	r1, [r9]
   21278:	rsb	r2, r0, #8
   2127c:	mov	r0, r4
   21280:	ldr	r1, [r1, #12]
   21284:	bl	234c <InflateSkip>
   21288:	ldr	r0, [r9]
   2128c:	add	r7, sp, #32
   21290:	mov	r2, r7
   21294:	ldr	r1, [r0, #12]
   21298:	mov	r0, r4
   2129c:	bl	30c0 <InflateDataType>
   212a0:	ldr	r0, [sp, #20]
   212a4:	cmp	r0, #0
   212a8:	beq	212b4 <Mat_VarRead5+0x12ac>
   212ac:	add	r0, sp, #32
   212b0:	bl	1c3c <Mat_uint32Swap>
   212b4:	ldr	r0, [sp, #32]
   212b8:	uxtb	r6, r0
   212bc:	cmp	r6, #25
   212c0:	movcs	r6, #0
   212c4:	cmp	r0, #65536	; 0x10000
   212c8:	bcs	21304 <Mat_VarRead5+0x12fc>
   212cc:	ldr	r0, [r9]
   212d0:	add	r7, r7, #4
   212d4:	mov	r2, r7
   212d8:	ldr	r1, [r0, #12]
   212dc:	mov	r0, r4
   212e0:	bl	30c0 <InflateDataType>
   212e4:	ldr	r0, [sp, #20]
   212e8:	cmp	r0, #0
   212ec:	beq	212f8 <Mat_VarRead5+0x12f0>
   212f0:	mov	r0, r7
   212f4:	bl	1c3c <Mat_uint32Swap>
   212f8:	ldr	r0, [sp, #36]	; 0x24
   212fc:	mov	r7, #0
   21300:	b	2130c <Mat_VarRead5+0x1304>
   21304:	lsr	r0, r0, #16
   21308:	mov	r7, #1
   2130c:	ldr	r1, [r5, #8]
   21310:	sub	r1, r1, #1
   21314:	cmp	r1, #12
   21318:	bhi	21618 <Mat_VarRead5+0x1610>
   2131c:	add	r2, pc, #4
   21320:	ldr	r1, [r2, r1, lsl #2]
   21324:	add	pc, r2, r1
   21328:	.word	0x00000034
   2132c:	.word	0x00000184
   21330:	.word	0x000001ac
   21334:	.word	0x000001d4
   21338:	.word	0x000001fc
   2133c:	.word	0x0000022c
   21340:	.word	0x00000254
   21344:	.word	0x000002f0
   21348:	.word	0x0000027c
   2134c:	.word	0x000002f0
   21350:	.word	0x000002f0
   21354:	.word	0x000002a4
   21358:	.word	0x000002cc
   2135c:	ldr	r0, [r9]
   21360:	ldr	r2, [r8, #4]
   21364:	mov	r3, r6
   21368:	ldr	r1, [r0, #12]
   2136c:	ldr	r0, [sp, #4]
   21370:	ldr	r0, [r0]
   21374:	str	r0, [sp]
   21378:	mov	r0, r4
   2137c:	bl	13168 <ReadCompressedInt8Data>
   21380:	b	21618 <Mat_VarRead5+0x1610>
   21384:	ldr	r0, [sp, #4]
   21388:	ldr	r1, [r8, #4]
   2138c:	mov	r2, r9
   21390:	ldr	r3, [r0]
   21394:	mov	r0, r4
   21398:	bl	13690 <ReadUInt8Data>
   2139c:	b	2147c <Mat_VarRead5+0x1474>
   213a0:	ldr	r0, [sp, #4]
   213a4:	ldr	r1, [r8, #4]
   213a8:	mov	r2, r9
   213ac:	ldr	r3, [r0]
   213b0:	mov	r0, r4
   213b4:	bl	e8ac <ReadInt16Data>
   213b8:	b	2147c <Mat_VarRead5+0x1474>
   213bc:	ldr	r0, [sp, #4]
   213c0:	ldr	r1, [r8, #4]
   213c4:	mov	r2, r9
   213c8:	ldr	r3, [r0]
   213cc:	mov	r0, r4
   213d0:	bl	102cc <ReadUInt16Data>
   213d4:	b	2147c <Mat_VarRead5+0x1474>
   213d8:	ldr	r0, [sp, #4]
   213dc:	ldr	r1, [r8, #4]
   213e0:	mov	r2, r9
   213e4:	ldr	r3, [r0]
   213e8:	mov	r0, r4
   213ec:	bl	b46c <ReadInt32Data>
   213f0:	b	2147c <Mat_VarRead5+0x1474>
   213f4:	ldr	r0, [sp, #4]
   213f8:	ldr	r1, [r8, #4]
   213fc:	mov	r2, r9
   21400:	ldr	r3, [r0]
   21404:	mov	r0, r4
   21408:	bl	ce8c <ReadUInt32Data>
   2140c:	b	2147c <Mat_VarRead5+0x1474>
   21410:	ldr	r0, [sp, #4]
   21414:	ldr	r1, [r8, #4]
   21418:	mov	r2, r9
   2141c:	ldr	r3, [r0]
   21420:	mov	r0, r4
   21424:	bl	5f94 <ReadSingleData>
   21428:	b	2147c <Mat_VarRead5+0x1474>
   2142c:	ldr	r0, [sp, #4]
   21430:	ldr	r1, [r8, #4]
   21434:	mov	r2, r9
   21438:	ldr	r3, [r0]
   2143c:	mov	r0, r4
   21440:	bl	3790 <ReadDoubleData>
   21444:	b	2147c <Mat_VarRead5+0x1474>
   21448:	ldr	r0, [sp, #4]
   2144c:	ldr	r1, [r8, #4]
   21450:	mov	r2, r9
   21454:	ldr	r3, [r0]
   21458:	mov	r0, r4
   2145c:	bl	7bbc <ReadInt64Data>
   21460:	b	2147c <Mat_VarRead5+0x1474>
   21464:	ldr	r0, [sp, #4]
   21468:	ldr	r1, [r8, #4]
   2146c:	mov	r2, r9
   21470:	ldr	r3, [r0]
   21474:	mov	r0, r4
   21478:	bl	9814 <ReadUInt64Data>
   2147c:	cmp	r6, #0
   21480:	addne	r0, r0, #4
   21484:	asr	r1, r0, #31
   21488:	add	r1, r0, r1, lsr #29
   2148c:	bic	r1, r1, #7
   21490:	subs	r1, r0, r1
   21494:	beq	21648 <Mat_VarRead5+0x1640>
   21498:	ldr	r0, [r4]
   2149c:	rsb	r1, r1, #8
   214a0:	mov	r2, #1
   214a4:	bl	1a68 <fseek@plt>
   214a8:	b	21648 <Mat_VarRead5+0x1640>
   214ac:	ldr	r0, [r9]
   214b0:	ldr	r2, [r8, #4]
   214b4:	mov	r3, r6
   214b8:	ldr	r1, [r0, #12]
   214bc:	ldr	r0, [sp, #4]
   214c0:	ldr	r0, [r0]
   214c4:	str	r0, [sp]
   214c8:	mov	r0, r4
   214cc:	bl	14b0c <ReadCompressedUInt8Data>
   214d0:	b	21618 <Mat_VarRead5+0x1610>
   214d4:	ldr	r0, [r9]
   214d8:	ldr	r2, [r8, #4]
   214dc:	mov	r3, r6
   214e0:	ldr	r1, [r0, #12]
   214e4:	ldr	r0, [sp, #4]
   214e8:	ldr	r0, [r0]
   214ec:	str	r0, [sp]
   214f0:	mov	r0, r4
   214f4:	bl	fda4 <ReadCompressedInt16Data>
   214f8:	b	21618 <Mat_VarRead5+0x1610>
   214fc:	ldr	r0, [r9]
   21500:	ldr	r2, [r8, #4]
   21504:	mov	r3, r6
   21508:	ldr	r1, [r0, #12]
   2150c:	ldr	r0, [sp, #4]
   21510:	ldr	r0, [r0]
   21514:	str	r0, [sp]
   21518:	mov	r0, r4
   2151c:	bl	117c4 <ReadCompressedUInt16Data>
   21520:	b	21618 <Mat_VarRead5+0x1610>
   21524:	ldr	r0, [r9]
   21528:	ldr	r2, [r8, #4]
   2152c:	mov	r3, r6
   21530:	ldr	r1, [r0, #12]
   21534:	ldr	r0, [sp, #4]
   21538:	ldr	r0, [r0]
   2153c:	str	r0, [sp]
   21540:	mov	r0, r4
   21544:	bl	c964 <ReadCompressedInt32Data>
   21548:	b	21618 <Mat_VarRead5+0x1610>
   2154c:	.word	0x00029961
   21550:	.word	0x000297f8
   21554:	ldr	r0, [r9]
   21558:	ldr	r2, [r8, #4]
   2155c:	mov	r3, r6
   21560:	ldr	r1, [r0, #12]
   21564:	ldr	r0, [sp, #4]
   21568:	ldr	r0, [r0]
   2156c:	str	r0, [sp]
   21570:	mov	r0, r4
   21574:	bl	e384 <ReadCompressedUInt32Data>
   21578:	b	21618 <Mat_VarRead5+0x1610>
   2157c:	ldr	r0, [r9]
   21580:	ldr	r2, [r8, #4]
   21584:	mov	r3, r6
   21588:	ldr	r1, [r0, #12]
   2158c:	ldr	r0, [sp, #4]
   21590:	ldr	r0, [r0]
   21594:	str	r0, [sp]
   21598:	mov	r0, r4
   2159c:	bl	7620 <ReadCompressedSingleData>
   215a0:	b	21618 <Mat_VarRead5+0x1610>
   215a4:	ldr	r0, [r9]
   215a8:	ldr	r2, [r8, #4]
   215ac:	mov	r3, r6
   215b0:	ldr	r1, [r0, #12]
   215b4:	ldr	r0, [sp, #4]
   215b8:	ldr	r0, [r0]
   215bc:	str	r0, [sp]
   215c0:	mov	r0, r4
   215c4:	bl	4c7c <ReadCompressedDoubleData>
   215c8:	b	21618 <Mat_VarRead5+0x1610>
   215cc:	ldr	r0, [r9]
   215d0:	ldr	r2, [r8, #4]
   215d4:	mov	r3, r6
   215d8:	ldr	r1, [r0, #12]
   215dc:	ldr	r0, [sp, #4]
   215e0:	ldr	r0, [r0]
   215e4:	str	r0, [sp]
   215e8:	mov	r0, r4
   215ec:	bl	927c <ReadCompressedInt64Data>
   215f0:	b	21618 <Mat_VarRead5+0x1610>
   215f4:	ldr	r0, [r9]
   215f8:	ldr	r2, [r8, #4]
   215fc:	mov	r3, r6
   21600:	ldr	r1, [r0, #12]
   21604:	ldr	r0, [sp, #4]
   21608:	ldr	r0, [r0]
   2160c:	str	r0, [sp]
   21610:	mov	r0, r4
   21614:	bl	aed4 <ReadCompressedUInt64Data>
   21618:	cmp	r7, #0
   2161c:	addne	r0, r0, #4
   21620:	asr	r1, r0, #31
   21624:	add	r1, r0, r1, lsr #29
   21628:	bic	r1, r1, #7
   2162c:	subs	r0, r0, r1
   21630:	beq	21648 <Mat_VarRead5+0x1640>
   21634:	ldr	r1, [r9]
   21638:	rsb	r2, r0, #8
   2163c:	mov	r0, r4
   21640:	ldr	r1, [r1, #12]
   21644:	bl	234c <InflateSkip>
   21648:	ldr	r0, [sp, #24]
   2164c:	str	r8, [r0, #24]
   21650:	b	204c4 <Mat_VarRead5+0x4bc>
   21654:	mov	r1, r2
   21658:	ldr	r3, [r6]
   2165c:	ldr	r2, [sp, #8]
   21660:	mov	r0, r4
   21664:	bl	13690 <ReadUInt8Data>
   21668:	b	21734 <Mat_VarRead5+0x172c>
   2166c:	mov	r1, r2
   21670:	ldr	r3, [r6]
   21674:	ldr	r2, [sp, #8]
   21678:	mov	r0, r4
   2167c:	bl	e8ac <ReadInt16Data>
   21680:	b	21734 <Mat_VarRead5+0x172c>
   21684:	.word	0x000296b4
   21688:	mov	r1, r2
   2168c:	ldr	r3, [r6]
   21690:	ldr	r2, [sp, #8]
   21694:	mov	r0, r4
   21698:	bl	102cc <ReadUInt16Data>
   2169c:	b	21734 <Mat_VarRead5+0x172c>
   216a0:	.word	0x000296ea
   216a4:	.word	0x000296f9
   216a8:	mov	r1, r2
   216ac:	ldr	r3, [r6]
   216b0:	ldr	r2, [sp, #8]
   216b4:	mov	r0, r4
   216b8:	bl	b46c <ReadInt32Data>
   216bc:	b	21734 <Mat_VarRead5+0x172c>
   216c0:	mov	r1, r2
   216c4:	ldr	r3, [r6]
   216c8:	ldr	r2, [sp, #8]
   216cc:	mov	r0, r4
   216d0:	bl	ce8c <ReadUInt32Data>
   216d4:	b	21734 <Mat_VarRead5+0x172c>
   216d8:	mov	r1, r2
   216dc:	ldr	r3, [r6]
   216e0:	ldr	r2, [sp, #8]
   216e4:	mov	r0, r4
   216e8:	bl	5f94 <ReadSingleData>
   216ec:	b	21734 <Mat_VarRead5+0x172c>
   216f0:	mov	r1, r2
   216f4:	ldr	r3, [r6]
   216f8:	ldr	r2, [sp, #8]
   216fc:	mov	r0, r4
   21700:	bl	3790 <ReadDoubleData>
   21704:	b	21734 <Mat_VarRead5+0x172c>
   21708:	mov	r1, r2
   2170c:	ldr	r3, [r6]
   21710:	ldr	r2, [sp, #8]
   21714:	mov	r0, r4
   21718:	bl	7bbc <ReadInt64Data>
   2171c:	b	21734 <Mat_VarRead5+0x172c>
   21720:	mov	r1, r2
   21724:	ldr	r3, [r6]
   21728:	ldr	r2, [sp, #8]
   2172c:	mov	r0, r4
   21730:	bl	9814 <ReadUInt64Data>
   21734:	str	r0, [sp, #12]
   21738:	ldr	r0, [sp, #16]
   2173c:	ldr	r1, [sp, #12]
   21740:	cmp	r0, #0
   21744:	addne	r1, r1, #4
   21748:	asr	r0, r1, #31
   2174c:	add	r0, r1, r0, lsr #29
   21750:	bic	r0, r0, #7
   21754:	subs	r1, r1, r0
   21758:	beq	204c4 <Mat_VarRead5+0x4bc>
   2175c:	ldr	r0, [r4]
   21760:	rsb	r1, r1, #8
   21764:	mov	r2, #1
   21768:	bl	1a68 <fseek@plt>
   2176c:	b	204c4 <Mat_VarRead5+0x4bc>
   21770:	ldr	r0, [r9]
   21774:	ldr	r3, [sp, #8]
   21778:	ldr	r1, [r0, #12]
   2177c:	ldr	r0, [r6]
   21780:	str	r0, [sp]
   21784:	mov	r0, r4
   21788:	bl	14b0c <ReadCompressedUInt8Data>
   2178c:	b	21890 <Mat_VarRead5+0x1888>
   21790:	ldr	r0, [r9]
   21794:	ldr	r3, [sp, #8]
   21798:	ldr	r1, [r0, #12]
   2179c:	ldr	r0, [r6]
   217a0:	str	r0, [sp]
   217a4:	mov	r0, r4
   217a8:	bl	fda4 <ReadCompressedInt16Data>
   217ac:	b	21890 <Mat_VarRead5+0x1888>
   217b0:	ldr	r0, [r9]
   217b4:	ldr	r3, [sp, #8]
   217b8:	ldr	r1, [r0, #12]
   217bc:	ldr	r0, [r6]
   217c0:	str	r0, [sp]
   217c4:	mov	r0, r4
   217c8:	bl	117c4 <ReadCompressedUInt16Data>
   217cc:	b	21890 <Mat_VarRead5+0x1888>
   217d0:	ldr	r0, [r9]
   217d4:	ldr	r3, [sp, #8]
   217d8:	ldr	r1, [r0, #12]
   217dc:	ldr	r0, [r6]
   217e0:	str	r0, [sp]
   217e4:	mov	r0, r4
   217e8:	bl	c964 <ReadCompressedInt32Data>
   217ec:	b	21890 <Mat_VarRead5+0x1888>
   217f0:	ldr	r0, [r9]
   217f4:	ldr	r3, [sp, #8]
   217f8:	ldr	r1, [r0, #12]
   217fc:	ldr	r0, [r6]
   21800:	str	r0, [sp]
   21804:	mov	r0, r4
   21808:	bl	e384 <ReadCompressedUInt32Data>
   2180c:	b	21890 <Mat_VarRead5+0x1888>
   21810:	ldr	r0, [r9]
   21814:	ldr	r3, [sp, #8]
   21818:	ldr	r1, [r0, #12]
   2181c:	ldr	r0, [r6]
   21820:	str	r0, [sp]
   21824:	mov	r0, r4
   21828:	bl	7620 <ReadCompressedSingleData>
   2182c:	b	21890 <Mat_VarRead5+0x1888>
   21830:	ldr	r0, [r9]
   21834:	ldr	r3, [sp, #8]
   21838:	ldr	r1, [r0, #12]
   2183c:	ldr	r0, [r6]
   21840:	str	r0, [sp]
   21844:	mov	r0, r4
   21848:	bl	4c7c <ReadCompressedDoubleData>
   2184c:	b	21890 <Mat_VarRead5+0x1888>
   21850:	ldr	r0, [r9]
   21854:	ldr	r3, [sp, #8]
   21858:	ldr	r1, [r0, #12]
   2185c:	ldr	r0, [r6]
   21860:	str	r0, [sp]
   21864:	mov	r0, r4
   21868:	bl	927c <ReadCompressedInt64Data>
   2186c:	b	21890 <Mat_VarRead5+0x1888>
   21870:	.word	0x00029539
   21874:	ldr	r0, [r9]
   21878:	ldr	r3, [sp, #8]
   2187c:	ldr	r1, [r0, #12]
   21880:	ldr	r0, [r6]
   21884:	str	r0, [sp]
   21888:	mov	r0, r4
   2188c:	bl	aed4 <ReadCompressedUInt64Data>
   21890:	str	r0, [sp, #12]
   21894:	ldr	r0, [sp, #16]
   21898:	ldr	r1, [sp, #12]
   2189c:	cmp	r0, #0
   218a0:	addne	r1, r1, #4
   218a4:	asr	r0, r1, #31
   218a8:	add	r0, r1, r0, lsr #29
   218ac:	bic	r0, r0, #7
   218b0:	subs	r0, r1, r0
   218b4:	beq	204c4 <Mat_VarRead5+0x4bc>
   218b8:	ldr	r1, [r9]
   218bc:	rsb	r2, r0, #8
   218c0:	mov	r0, r4
   218c4:	ldr	r1, [r1, #12]
   218c8:	bl	234c <InflateSkip>
   218cc:	b	204c4 <Mat_VarRead5+0x4bc>
   218d0:	.word	0x000292c4
   218d4:	.word	0x000290bd
   218d8:	.word	0x000290e6
   218dc:	.word	0x00029373

000218e0 <Mat_VarReadNumeric5>:
   218e0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   218e4:	add	fp, sp, #24
   218e8:	sub	sp, sp, #16
   218ec:	mov	r4, r0
   218f0:	ldr	r0, [r1, #48]	; 0x30
   218f4:	mov	r9, r3
   218f8:	mov	r8, r2
   218fc:	mov	r5, r1
   21900:	cmp	r0, #1
   21904:	bne	21970 <Mat_VarReadNumeric5+0x90>
   21908:	ldr	r0, [r5, #52]	; 0x34
   2190c:	add	r7, sp, #8
   21910:	mov	r6, #0
   21914:	mov	r2, r7
   21918:	ldr	r1, [r0, #12]
   2191c:	mov	r0, r4
   21920:	str	r6, [r1, #4]
   21924:	bl	30c0 <InflateDataType>
   21928:	ldr	r0, [r4, #20]
   2192c:	cmp	r0, #0
   21930:	beq	2193c <Mat_VarReadNumeric5+0x5c>
   21934:	add	r0, sp, #8
   21938:	bl	1c3c <Mat_uint32Swap>
   2193c:	ldr	r0, [sp, #8]
   21940:	uxtb	r1, r0
   21944:	cmp	r1, #25
   21948:	movcc	r6, r1
   2194c:	cmp	r0, #65536	; 0x10000
   21950:	bcs	219fc <Mat_VarReadNumeric5+0x11c>
   21954:	ldr	r0, [r5, #52]	; 0x34
   21958:	add	r7, r7, #4
   2195c:	mov	r2, r7
   21960:	ldr	r1, [r0, #12]
   21964:	mov	r0, r4
   21968:	bl	30c0 <InflateDataType>
   2196c:	b	219cc <Mat_VarReadNumeric5+0xec>
   21970:	ldr	r3, [r4]
   21974:	add	r7, sp, #8
   21978:	mov	r1, #4
   2197c:	mov	r2, #1
   21980:	mov	r0, r7
   21984:	bl	18d0 <fread@plt>
   21988:	ldr	r0, [r4, #20]
   2198c:	cmp	r0, #0
   21990:	beq	2199c <Mat_VarReadNumeric5+0xbc>
   21994:	add	r0, sp, #8
   21998:	bl	1c3c <Mat_uint32Swap>
   2199c:	ldr	r0, [sp, #8]
   219a0:	uxtb	r6, r0
   219a4:	cmp	r6, #25
   219a8:	movcs	r6, #0
   219ac:	cmp	r0, #65536	; 0x10000
   219b0:	bcs	219fc <Mat_VarReadNumeric5+0x11c>
   219b4:	ldr	r3, [r4]
   219b8:	add	r7, r7, #4
   219bc:	mov	r1, #4
   219c0:	mov	r2, #1
   219c4:	mov	r0, r7
   219c8:	bl	18d0 <fread@plt>
   219cc:	ldr	r0, [r4, #20]
   219d0:	cmp	r0, #0
   219d4:	beq	219e0 <Mat_VarReadNumeric5+0x100>
   219d8:	mov	r0, r7
   219dc:	bl	1c3c <Mat_uint32Swap>
   219e0:	ldr	r0, [sp, #12]
   219e4:	mov	r7, #0
   219e8:	cmp	r0, #0
   219ec:	bne	21a04 <Mat_VarReadNumeric5+0x124>
   219f0:	mov	r0, #0
   219f4:	str	r0, [r5]
   219f8:	b	21d28 <Mat_VarReadNumeric5+0x448>
   219fc:	lsr	r0, r0, #16
   21a00:	mov	r7, #1
   21a04:	ldr	r1, [r5, #48]	; 0x30
   21a08:	cmp	r1, #1
   21a0c:	beq	21a74 <Mat_VarReadNumeric5+0x194>
   21a10:	cmp	r1, #0
   21a14:	bne	21d28 <Mat_VarReadNumeric5+0x448>
   21a18:	ldr	r1, [r5, #16]
   21a1c:	sub	r1, r1, #6
   21a20:	cmp	r1, #9
   21a24:	bhi	21bac <Mat_VarReadNumeric5+0x2cc>
   21a28:	add	r0, pc, #4
   21a2c:	ldr	r1, [r0, r1, lsl #2]
   21a30:	add	pc, r0, r1
   21a34:	.word	0x00000028
   21a38:	.word	0x000000a4
   21a3c:	.word	0x000000bc
   21a40:	.word	0x000000d4
   21a44:	.word	0x000000ec
   21a48:	.word	0x00000104
   21a4c:	.word	0x0000011c
   21a50:	.word	0x00000134
   21a54:	.word	0x0000014c
   21a58:	.word	0x00000164
   21a5c:	mov	r0, r4
   21a60:	mov	r1, r8
   21a64:	mov	r2, r6
   21a68:	mov	r3, r9
   21a6c:	bl	3790 <ReadDoubleData>
   21a70:	b	21bac <Mat_VarReadNumeric5+0x2cc>
   21a74:	ldr	r1, [r5, #16]
   21a78:	sub	r1, r1, #6
   21a7c:	cmp	r1, #9
   21a80:	bhi	21cf8 <Mat_VarReadNumeric5+0x418>
   21a84:	add	r0, pc, #4
   21a88:	ldr	r1, [r0, r1, lsl #2]
   21a8c:	add	pc, r0, r1
   21a90:	.word	0x00000028
   21a94:	.word	0x0000014c
   21a98:	.word	0x0000016c
   21a9c:	.word	0x0000018c
   21aa0:	.word	0x000001ac
   21aa4:	.word	0x000001cc
   21aa8:	.word	0x000001ec
   21aac:	.word	0x0000020c
   21ab0:	.word	0x0000022c
   21ab4:	.word	0x0000024c
   21ab8:	ldr	r0, [r5, #52]	; 0x34
   21abc:	mov	r2, r8
   21ac0:	mov	r3, r6
   21ac4:	ldr	r1, [r0, #12]
   21ac8:	mov	r0, r4
   21acc:	str	r9, [sp]
   21ad0:	bl	4c7c <ReadCompressedDoubleData>
   21ad4:	b	21cf8 <Mat_VarReadNumeric5+0x418>
   21ad8:	mov	r0, r4
   21adc:	mov	r1, r8
   21ae0:	mov	r2, r6
   21ae4:	mov	r3, r9
   21ae8:	bl	5f94 <ReadSingleData>
   21aec:	b	21bac <Mat_VarReadNumeric5+0x2cc>
   21af0:	mov	r0, r4
   21af4:	mov	r1, r8
   21af8:	mov	r2, r6
   21afc:	mov	r3, r9
   21b00:	bl	11cec <ReadInt8Data>
   21b04:	b	21bac <Mat_VarReadNumeric5+0x2cc>
   21b08:	mov	r0, r4
   21b0c:	mov	r1, r8
   21b10:	mov	r2, r6
   21b14:	mov	r3, r9
   21b18:	bl	13690 <ReadUInt8Data>
   21b1c:	b	21bac <Mat_VarReadNumeric5+0x2cc>
   21b20:	mov	r0, r4
   21b24:	mov	r1, r8
   21b28:	mov	r2, r6
   21b2c:	mov	r3, r9
   21b30:	bl	e8ac <ReadInt16Data>
   21b34:	b	21bac <Mat_VarReadNumeric5+0x2cc>
   21b38:	mov	r0, r4
   21b3c:	mov	r1, r8
   21b40:	mov	r2, r6
   21b44:	mov	r3, r9
   21b48:	bl	102cc <ReadUInt16Data>
   21b4c:	b	21bac <Mat_VarReadNumeric5+0x2cc>
   21b50:	mov	r0, r4
   21b54:	mov	r1, r8
   21b58:	mov	r2, r6
   21b5c:	mov	r3, r9
   21b60:	bl	b46c <ReadInt32Data>
   21b64:	b	21bac <Mat_VarReadNumeric5+0x2cc>
   21b68:	mov	r0, r4
   21b6c:	mov	r1, r8
   21b70:	mov	r2, r6
   21b74:	mov	r3, r9
   21b78:	bl	ce8c <ReadUInt32Data>
   21b7c:	b	21bac <Mat_VarReadNumeric5+0x2cc>
   21b80:	mov	r0, r4
   21b84:	mov	r1, r8
   21b88:	mov	r2, r6
   21b8c:	mov	r3, r9
   21b90:	bl	7bbc <ReadInt64Data>
   21b94:	b	21bac <Mat_VarReadNumeric5+0x2cc>
   21b98:	mov	r0, r4
   21b9c:	mov	r1, r8
   21ba0:	mov	r2, r6
   21ba4:	mov	r3, r9
   21ba8:	bl	9814 <ReadUInt64Data>
   21bac:	cmp	r7, #0
   21bb0:	addne	r0, r0, #4
   21bb4:	asr	r1, r0, #31
   21bb8:	add	r1, r0, r1, lsr #29
   21bbc:	bic	r1, r1, #7
   21bc0:	subs	r1, r0, r1
   21bc4:	beq	21d28 <Mat_VarReadNumeric5+0x448>
   21bc8:	ldr	r0, [r4]
   21bcc:	rsb	r1, r1, #8
   21bd0:	mov	r2, #1
   21bd4:	bl	1a68 <fseek@plt>
   21bd8:	b	21d28 <Mat_VarReadNumeric5+0x448>
   21bdc:	ldr	r0, [r5, #52]	; 0x34
   21be0:	mov	r2, r8
   21be4:	mov	r3, r6
   21be8:	ldr	r1, [r0, #12]
   21bec:	mov	r0, r4
   21bf0:	str	r9, [sp]
   21bf4:	bl	7620 <ReadCompressedSingleData>
   21bf8:	b	21cf8 <Mat_VarReadNumeric5+0x418>
   21bfc:	ldr	r0, [r5, #52]	; 0x34
   21c00:	mov	r2, r8
   21c04:	mov	r3, r6
   21c08:	ldr	r1, [r0, #12]
   21c0c:	mov	r0, r4
   21c10:	str	r9, [sp]
   21c14:	bl	13168 <ReadCompressedInt8Data>
   21c18:	b	21cf8 <Mat_VarReadNumeric5+0x418>
   21c1c:	ldr	r0, [r5, #52]	; 0x34
   21c20:	mov	r2, r8
   21c24:	mov	r3, r6
   21c28:	ldr	r1, [r0, #12]
   21c2c:	mov	r0, r4
   21c30:	str	r9, [sp]
   21c34:	bl	14b0c <ReadCompressedUInt8Data>
   21c38:	b	21cf8 <Mat_VarReadNumeric5+0x418>
   21c3c:	ldr	r0, [r5, #52]	; 0x34
   21c40:	mov	r2, r8
   21c44:	mov	r3, r6
   21c48:	ldr	r1, [r0, #12]
   21c4c:	mov	r0, r4
   21c50:	str	r9, [sp]
   21c54:	bl	fda4 <ReadCompressedInt16Data>
   21c58:	b	21cf8 <Mat_VarReadNumeric5+0x418>
   21c5c:	ldr	r0, [r5, #52]	; 0x34
   21c60:	mov	r2, r8
   21c64:	mov	r3, r6
   21c68:	ldr	r1, [r0, #12]
   21c6c:	mov	r0, r4
   21c70:	str	r9, [sp]
   21c74:	bl	117c4 <ReadCompressedUInt16Data>
   21c78:	b	21cf8 <Mat_VarReadNumeric5+0x418>
   21c7c:	ldr	r0, [r5, #52]	; 0x34
   21c80:	mov	r2, r8
   21c84:	mov	r3, r6
   21c88:	ldr	r1, [r0, #12]
   21c8c:	mov	r0, r4
   21c90:	str	r9, [sp]
   21c94:	bl	c964 <ReadCompressedInt32Data>
   21c98:	b	21cf8 <Mat_VarReadNumeric5+0x418>
   21c9c:	ldr	r0, [r5, #52]	; 0x34
   21ca0:	mov	r2, r8
   21ca4:	mov	r3, r6
   21ca8:	ldr	r1, [r0, #12]
   21cac:	mov	r0, r4
   21cb0:	str	r9, [sp]
   21cb4:	bl	e384 <ReadCompressedUInt32Data>
   21cb8:	b	21cf8 <Mat_VarReadNumeric5+0x418>
   21cbc:	ldr	r0, [r5, #52]	; 0x34
   21cc0:	mov	r2, r8
   21cc4:	mov	r3, r6
   21cc8:	ldr	r1, [r0, #12]
   21ccc:	mov	r0, r4
   21cd0:	str	r9, [sp]
   21cd4:	bl	927c <ReadCompressedInt64Data>
   21cd8:	b	21cf8 <Mat_VarReadNumeric5+0x418>
   21cdc:	ldr	r0, [r5, #52]	; 0x34
   21ce0:	mov	r2, r8
   21ce4:	mov	r3, r6
   21ce8:	ldr	r1, [r0, #12]
   21cec:	mov	r0, r4
   21cf0:	str	r9, [sp]
   21cf4:	bl	aed4 <ReadCompressedUInt64Data>
   21cf8:	cmp	r7, #0
   21cfc:	addne	r0, r0, #4
   21d00:	asr	r1, r0, #31
   21d04:	add	r1, r0, r1, lsr #29
   21d08:	bic	r1, r1, #7
   21d0c:	subs	r0, r0, r1
   21d10:	beq	21d28 <Mat_VarReadNumeric5+0x448>
   21d14:	ldr	r1, [r5, #52]	; 0x34
   21d18:	rsb	r2, r0, #8
   21d1c:	mov	r0, r4
   21d20:	ldr	r1, [r1, #12]
   21d24:	bl	234c <InflateSkip>
   21d28:	sub	sp, fp, #24
   21d2c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00021d30 <Mat_VarReadData5>:
   21d30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21d34:	add	fp, sp, #28
   21d38:	sub	sp, sp, #92	; 0x5c
   21d3c:	mov	r4, r1
   21d40:	ldr	r1, [r1, #52]	; 0x34
   21d44:	mov	r8, r0
   21d48:	ldr	r0, [r0]
   21d4c:	str	r2, [sp, #24]
   21d50:	mov	r2, #0
   21d54:	mov	r9, r3
   21d58:	mov	r6, #0
   21d5c:	ldr	r1, [r1]
   21d60:	bl	1a68 <fseek@plt>
   21d64:	ldr	r0, [r4, #48]	; 0x30
   21d68:	ldr	sl, [fp, #12]
   21d6c:	ldr	r7, [fp, #8]
   21d70:	cmp	r0, #1
   21d74:	beq	21df0 <Mat_VarReadData5+0xc0>
   21d78:	cmp	r0, #0
   21d7c:	bne	21f64 <Mat_VarReadData5+0x234>
   21d80:	ldr	r3, [r8]
   21d84:	sub	r5, fp, #36	; 0x24
   21d88:	mov	r1, #4
   21d8c:	mov	r2, #2
   21d90:	mov	r0, r5
   21d94:	bl	18d0 <fread@plt>
   21d98:	ldr	r0, [r8, #20]
   21d9c:	cmp	r0, #0
   21da0:	beq	21db4 <Mat_VarReadData5+0x84>
   21da4:	mov	r0, r5
   21da8:	bl	1c28 <Mat_int32Swap>
   21dac:	add	r0, r5, #4
   21db0:	bl	1c28 <Mat_int32Swap>
   21db4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   21db8:	uxtb	r1, r0
   21dbc:	cmp	r1, #25
   21dc0:	movcs	r1, #0
   21dc4:	cmp	r0, #65536	; 0x10000
   21dc8:	str	r1, [r4, #8]
   21dcc:	bcc	21f5c <Mat_VarReadData5+0x22c>
   21dd0:	ldr	r0, [r8]
   21dd4:	mvn	r1, #3
   21dd8:	mov	r2, #1
   21ddc:	bl	1a68 <fseek@plt>
   21de0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   21de4:	mov	r1, #4
   21de8:	add	r6, r1, r0, asr #16
   21dec:	b	21f64 <Mat_VarReadData5+0x234>
   21df0:	ldr	r0, [r4, #52]	; 0x34
   21df4:	ldr	r6, [r0, #16]
   21df8:	cmp	r6, #0
   21dfc:	beq	21e80 <Mat_VarReadData5+0x150>
   21e00:	ldr	r0, [r4, #20]
   21e04:	cmp	r0, #0
   21e08:	beq	21eb0 <Mat_VarReadData5+0x180>
   21e0c:	ldr	r0, [sp, #24]
   21e10:	ldr	r5, [r4, #32]
   21e14:	ldr	r1, [r0]
   21e18:	ldr	r0, [r6]
   21e1c:	ldm	r4, {ip, lr}
   21e20:	ldr	r3, [r4, #8]
   21e24:	ldr	r2, [r4, #16]
   21e28:	stm	sp, {r5, r9}
   21e2c:	add	r5, sp, #8
   21e30:	stm	r5, {r7, sl, lr}
   21e34:	str	ip, [sp, #20]
   21e38:	bl	2251c <GetDataSlab>
   21e3c:	mov	r5, r0
   21e40:	cmp	r0, #0
   21e44:	bne	22504 <Mat_VarReadData5+0x7d4>
   21e48:	ldr	r0, [sp, #24]
   21e4c:	mov	ip, r7
   21e50:	ldr	r7, [r4, #32]
   21e54:	ldr	r5, [r4, #4]
   21e58:	ldr	r3, [r4, #8]
   21e5c:	ldr	r2, [r4, #16]
   21e60:	ldr	r1, [r0, #4]
   21e64:	ldr	r0, [r6, #4]
   21e68:	ldr	r6, [r4]
   21e6c:	stm	sp, {r7, r9, ip}
   21e70:	str	sl, [sp, #12]
   21e74:	str	r5, [sp, #16]
   21e78:	str	r6, [sp, #20]
   21e7c:	b	21edc <Mat_VarReadData5+0x1ac>
   21e80:	ldr	r1, [r0, #12]
   21e84:	add	r0, sp, #28
   21e88:	bl	1960 <inflateCopy@plt>
   21e8c:	cmp	r0, #0
   21e90:	beq	21ee8 <Mat_VarReadData5+0x1b8>
   21e94:	bl	18a0 <zError@plt>
   21e98:	mov	r1, r0
   21e9c:	ldr	r0, [pc, #1644]	; 22510 <Mat_VarReadData5+0x7e0>
   21ea0:	add	r0, pc, r0
   21ea4:	bl	19cc <Mat_Critical@plt>
   21ea8:	mvn	r5, #0
   21eac:	b	22504 <Mat_VarReadData5+0x7d4>
   21eb0:	ldr	r0, [r4, #32]
   21eb4:	ldm	r4, {r1, r5}
   21eb8:	ldr	r3, [r4, #8]
   21ebc:	ldr	r2, [r4, #16]
   21ec0:	stm	sp, {r0, r9}
   21ec4:	str	r1, [sp, #20]
   21ec8:	mov	r0, r6
   21ecc:	str	r7, [sp, #8]
   21ed0:	str	sl, [sp, #12]
   21ed4:	str	r5, [sp, #16]
   21ed8:	ldr	r1, [sp, #24]
   21edc:	bl	2251c <GetDataSlab>
   21ee0:	mov	r5, r0
   21ee4:	b	22504 <Mat_VarReadData5+0x7d4>
   21ee8:	sub	r5, fp, #36	; 0x24
   21eec:	mov	r6, #0
   21ef0:	add	r1, sp, #28
   21ef4:	mov	r0, r8
   21ef8:	mov	r2, r5
   21efc:	str	r6, [sp, #32]
   21f00:	bl	30c0 <InflateDataType>
   21f04:	ldr	r0, [r8, #20]
   21f08:	cmp	r0, #0
   21f0c:	beq	21f18 <Mat_VarReadData5+0x1e8>
   21f10:	sub	r0, fp, #36	; 0x24
   21f14:	bl	1c28 <Mat_int32Swap>
   21f18:	ldr	r0, [fp, #-36]	; 0xffffffdc
   21f1c:	uxtb	r1, r0
   21f20:	cmp	r1, #25
   21f24:	movcs	r1, r6
   21f28:	cmp	r6, r0, lsr #16
   21f2c:	str	r1, [r4, #8]
   21f30:	bne	21de4 <Mat_VarReadData5+0xb4>
   21f34:	add	r5, r5, #4
   21f38:	add	r1, sp, #28
   21f3c:	mov	r0, r8
   21f40:	mov	r2, r5
   21f44:	bl	30c0 <InflateDataType>
   21f48:	ldr	r0, [r8, #20]
   21f4c:	cmp	r0, #0
   21f50:	beq	21f5c <Mat_VarReadData5+0x22c>
   21f54:	mov	r0, r5
   21f58:	bl	1c28 <Mat_int32Swap>
   21f5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   21f60:	add	r6, r0, #8
   21f64:	asr	r0, r6, #31
   21f68:	add	r0, r6, r0, lsr #29
   21f6c:	bic	r0, r0, #7
   21f70:	subs	r0, r6, r0
   21f74:	rsb	r0, r0, #8
   21f78:	addne	r6, r6, r0
   21f7c:	ldr	r0, [r4, #4]
   21f80:	cmp	r0, #2
   21f84:	bne	220c8 <Mat_VarReadData5+0x398>
   21f88:	ldr	r2, [sl]
   21f8c:	ldr	r0, [r9]
   21f90:	ldr	r1, [r7]
   21f94:	mov	r5, #1
   21f98:	sub	r2, r2, #1
   21f9c:	mla	r0, r2, r1, r0
   21fa0:	add	r1, r0, #1
   21fa4:	ldr	r0, [r4, #32]
   21fa8:	ldr	r2, [r0]
   21fac:	cmp	r1, r2
   21fb0:	bhi	22504 <Mat_VarReadData5+0x7d4>
   21fb4:	ldr	r3, [sl, #4]
   21fb8:	ldr	r1, [r9, #4]
   21fbc:	ldr	r2, [r7, #4]
   21fc0:	sub	r3, r3, #1
   21fc4:	mla	r1, r3, r2, r1
   21fc8:	ldr	r2, [r0, #4]
   21fcc:	add	r1, r1, #1
   21fd0:	cmp	r1, r2
   21fd4:	bhi	22504 <Mat_VarReadData5+0x7d4>
   21fd8:	ldr	r1, [r4, #48]	; 0x30
   21fdc:	cmp	r1, #1
   21fe0:	beq	22354 <Mat_VarReadData5+0x624>
   21fe4:	cmp	r1, #0
   21fe8:	bne	224e8 <Mat_VarReadData5+0x7b8>
   21fec:	ldr	r1, [r4, #20]
   21ff0:	cmp	r1, #0
   21ff4:	beq	22488 <Mat_VarReadData5+0x758>
   21ff8:	ldr	r1, [sp, #24]
   21ffc:	ldr	r3, [r4, #8]
   22000:	ldr	r2, [r4, #16]
   22004:	ldr	r1, [r1]
   22008:	stm	sp, {r0, r9}
   2200c:	mov	r0, r8
   22010:	str	r7, [sp, #8]
   22014:	str	sl, [sp, #12]
   22018:	bl	1cda8 <ReadDataSlab2>
   2201c:	ldr	r0, [r4, #52]	; 0x34
   22020:	mov	r2, #0
   22024:	mov	r5, #0
   22028:	ldr	r0, [r0]
   2202c:	add	r1, r0, r6
   22030:	ldr	r0, [r8]
   22034:	bl	1a68 <fseek@plt>
   22038:	ldr	r3, [r8]
   2203c:	sub	r6, fp, #36	; 0x24
   22040:	mov	r1, #4
   22044:	mov	r2, #2
   22048:	mov	r0, r6
   2204c:	bl	18d0 <fread@plt>
   22050:	ldr	r0, [r8, #20]
   22054:	cmp	r0, #0
   22058:	beq	2206c <Mat_VarReadData5+0x33c>
   2205c:	mov	r0, r6
   22060:	bl	1c28 <Mat_int32Swap>
   22064:	add	r0, r6, #4
   22068:	bl	1c28 <Mat_int32Swap>
   2206c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   22070:	uxtb	r1, r0
   22074:	cmp	r1, #25
   22078:	movcc	r5, r1
   2207c:	cmp	r0, #65536	; 0x10000
   22080:	str	r5, [r4, #8]
   22084:	bcc	2209c <Mat_VarReadData5+0x36c>
   22088:	ldr	r0, [r8]
   2208c:	mvn	r1, #3
   22090:	mov	r2, #1
   22094:	bl	1a68 <fseek@plt>
   22098:	ldr	r5, [r4, #8]
   2209c:	ldr	r0, [sp, #24]
   220a0:	ldr	r2, [r4, #16]
   220a4:	mov	r3, r5
   220a8:	ldr	r1, [r0, #4]
   220ac:	ldr	r0, [r4, #32]
   220b0:	stm	sp, {r0, r9}
   220b4:	ldr	r0, [fp, #8]
   220b8:	str	sl, [sp, #12]
   220bc:	str	r0, [sp, #8]
   220c0:	mov	r0, r8
   220c4:	b	224a4 <Mat_VarReadData5+0x774>
   220c8:	ldr	r1, [r4, #48]	; 0x30
   220cc:	cmp	r1, #1
   220d0:	beq	221c0 <Mat_VarReadData5+0x490>
   220d4:	cmp	r1, #0
   220d8:	bne	224e8 <Mat_VarReadData5+0x7b8>
   220dc:	ldr	r1, [r4, #20]
   220e0:	cmp	r1, #0
   220e4:	beq	222fc <Mat_VarReadData5+0x5cc>
   220e8:	ldr	r1, [sp, #24]
   220ec:	ldr	r5, [r4, #32]
   220f0:	ldr	r3, [r4, #8]
   220f4:	ldr	r2, [r4, #16]
   220f8:	ldr	r1, [r1]
   220fc:	stm	sp, {r0, r5, r9}
   22100:	mov	r0, r8
   22104:	str	r7, [sp, #12]
   22108:	str	sl, [sp, #16]
   2210c:	bl	15268 <ReadDataSlabN>
   22110:	ldr	r0, [r4, #52]	; 0x34
   22114:	mov	r2, #0
   22118:	mov	r5, #0
   2211c:	ldr	r0, [r0]
   22120:	add	r1, r0, r6
   22124:	ldr	r0, [r8]
   22128:	bl	1a68 <fseek@plt>
   2212c:	ldr	r3, [r8]
   22130:	sub	r6, fp, #36	; 0x24
   22134:	mov	r1, #4
   22138:	mov	r2, #2
   2213c:	mov	r0, r6
   22140:	bl	18d0 <fread@plt>
   22144:	ldr	r0, [r8, #20]
   22148:	cmp	r0, #0
   2214c:	beq	22160 <Mat_VarReadData5+0x430>
   22150:	mov	r0, r6
   22154:	bl	1c28 <Mat_int32Swap>
   22158:	add	r0, r6, #4
   2215c:	bl	1c28 <Mat_int32Swap>
   22160:	ldr	r0, [fp, #-36]	; 0xffffffdc
   22164:	uxtb	r1, r0
   22168:	cmp	r1, #25
   2216c:	movcc	r5, r1
   22170:	cmp	r0, #65536	; 0x10000
   22174:	str	r5, [r4, #8]
   22178:	bcc	22190 <Mat_VarReadData5+0x460>
   2217c:	ldr	r0, [r8]
   22180:	mvn	r1, #3
   22184:	mov	r2, #1
   22188:	bl	1a68 <fseek@plt>
   2218c:	ldr	r5, [r4, #8]
   22190:	ldr	r0, [sp, #24]
   22194:	ldr	r3, [r4, #32]
   22198:	ldr	r2, [r4, #16]
   2219c:	ldr	r1, [r0, #4]
   221a0:	ldr	r0, [r4, #4]
   221a4:	stm	sp, {r0, r3, r9}
   221a8:	ldr	r0, [fp, #8]
   221ac:	mov	r3, r5
   221b0:	str	sl, [sp, #16]
   221b4:	str	r0, [sp, #12]
   221b8:	mov	r0, r8
   221bc:	b	2231c <Mat_VarReadData5+0x5ec>
   221c0:	ldr	r1, [r4, #20]
   221c4:	cmp	r1, #0
   221c8:	beq	22324 <Mat_VarReadData5+0x5f4>
   221cc:	ldr	r1, [sp, #24]
   221d0:	ldr	r5, [r4, #32]
   221d4:	ldr	r3, [r4, #16]
   221d8:	ldr	r2, [r1]
   221dc:	ldr	r1, [r4, #8]
   221e0:	str	r1, [sp]
   221e4:	stmib	sp, {r0, r5, r9}
   221e8:	add	r5, sp, #28
   221ec:	mov	r0, r8
   221f0:	str	r7, [sp, #16]
   221f4:	str	sl, [sp, #20]
   221f8:	mov	r1, r5
   221fc:	bl	189cc <ReadCompressedDataSlabN>
   22200:	ldr	r1, [r4, #52]	; 0x34
   22204:	ldr	r0, [r8]
   22208:	mov	r2, #0
   2220c:	mov	r7, #0
   22210:	ldr	r1, [r1]
   22214:	bl	1a68 <fseek@plt>
   22218:	mov	r0, r5
   2221c:	bl	1954 <inflateEnd@plt>
   22220:	ldr	r0, [r4, #52]	; 0x34
   22224:	ldr	r1, [r0, #12]
   22228:	mov	r0, r5
   2222c:	bl	1960 <inflateCopy@plt>
   22230:	mov	r5, r0
   22234:	cmp	r0, #0
   22238:	beq	22254 <Mat_VarReadData5+0x524>
   2223c:	mov	r0, r5
   22240:	bl	18a0 <zError@plt>
   22244:	mov	r1, r0
   22248:	ldr	r0, [pc, #712]	; 22518 <Mat_VarReadData5+0x7e8>
   2224c:	add	r0, pc, r0
   22250:	bl	19cc <Mat_Critical@plt>
   22254:	add	sl, sp, #28
   22258:	mov	r0, r8
   2225c:	mov	r2, r6
   22260:	mov	r1, sl
   22264:	bl	234c <InflateSkip>
   22268:	sub	r2, fp, #36	; 0x24
   2226c:	mov	r0, r8
   22270:	mov	r1, sl
   22274:	str	r7, [sp, #32]
   22278:	bl	30c0 <InflateDataType>
   2227c:	ldr	r0, [r8, #20]
   22280:	cmp	r0, #0
   22284:	beq	22290 <Mat_VarReadData5+0x560>
   22288:	sub	r0, fp, #36	; 0x24
   2228c:	bl	1c28 <Mat_int32Swap>
   22290:	ldr	r1, [fp, #-36]	; 0xffffffdc
   22294:	ldr	sl, [fp, #12]
   22298:	mov	r2, #0
   2229c:	uxtb	r0, r1
   222a0:	cmp	r0, #25
   222a4:	movcs	r0, r2
   222a8:	cmp	r2, r1, lsr #16
   222ac:	str	r0, [r4, #8]
   222b0:	bne	222c8 <Mat_VarReadData5+0x598>
   222b4:	add	r1, sp, #28
   222b8:	mov	r0, r8
   222bc:	mov	r2, #4
   222c0:	bl	234c <InflateSkip>
   222c4:	ldr	r0, [r4, #8]
   222c8:	ldr	r1, [sp, #24]
   222cc:	ldr	r6, [r4, #32]
   222d0:	ldr	r3, [r4, #16]
   222d4:	ldr	r2, [r1, #4]
   222d8:	ldr	r1, [r4, #4]
   222dc:	stm	sp, {r0, r1, r6, r9}
   222e0:	ldr	r0, [fp, #8]
   222e4:	add	r1, sp, #28
   222e8:	str	sl, [sp, #20]
   222ec:	str	r0, [sp, #16]
   222f0:	mov	r0, r8
   222f4:	bl	189cc <ReadCompressedDataSlabN>
   222f8:	b	224d8 <Mat_VarReadData5+0x7a8>
   222fc:	ldr	r1, [r4, #32]
   22300:	ldr	r3, [r4, #8]
   22304:	ldr	r2, [r4, #16]
   22308:	stm	sp, {r0, r1, r9}
   2230c:	mov	r0, r8
   22310:	str	r7, [sp, #12]
   22314:	str	sl, [sp, #16]
   22318:	ldr	r1, [sp, #24]
   2231c:	bl	15268 <ReadDataSlabN>
   22320:	b	224e8 <Mat_VarReadData5+0x7b8>
   22324:	ldr	r1, [r4, #8]
   22328:	ldr	r2, [r4, #32]
   2232c:	ldr	r3, [r4, #16]
   22330:	str	r1, [sp]
   22334:	stmib	sp, {r0, r2, r9}
   22338:	add	r1, sp, #28
   2233c:	mov	r0, r8
   22340:	str	r7, [sp, #16]
   22344:	str	sl, [sp, #20]
   22348:	ldr	r2, [sp, #24]
   2234c:	bl	189cc <ReadCompressedDataSlabN>
   22350:	b	224d4 <Mat_VarReadData5+0x7a4>
   22354:	ldr	r1, [r4, #20]
   22358:	cmp	r1, #0
   2235c:	beq	224ac <Mat_VarReadData5+0x77c>
   22360:	ldr	r1, [sp, #24]
   22364:	ldr	r3, [r4, #16]
   22368:	add	r5, sp, #28
   2236c:	ldr	r2, [r1]
   22370:	ldr	r1, [r4, #8]
   22374:	str	r1, [sp]
   22378:	stmib	sp, {r0, r9}
   2237c:	mov	r0, r8
   22380:	mov	r1, r5
   22384:	str	r7, [sp, #12]
   22388:	str	sl, [sp, #16]
   2238c:	bl	1e390 <ReadCompressedDataSlab2>
   22390:	ldr	r1, [r4, #52]	; 0x34
   22394:	ldr	r0, [r8]
   22398:	mov	r2, #0
   2239c:	mov	r7, #0
   223a0:	ldr	r1, [r1]
   223a4:	bl	1a68 <fseek@plt>
   223a8:	mov	r0, r5
   223ac:	bl	1954 <inflateEnd@plt>
   223b0:	ldr	r0, [r4, #52]	; 0x34
   223b4:	ldr	r1, [r0, #12]
   223b8:	mov	r0, r5
   223bc:	bl	1960 <inflateCopy@plt>
   223c0:	mov	r5, r0
   223c4:	cmp	r0, #0
   223c8:	beq	223e4 <Mat_VarReadData5+0x6b4>
   223cc:	mov	r0, r5
   223d0:	bl	18a0 <zError@plt>
   223d4:	mov	r1, r0
   223d8:	ldr	r0, [pc, #308]	; 22514 <Mat_VarReadData5+0x7e4>
   223dc:	add	r0, pc, r0
   223e0:	bl	19cc <Mat_Critical@plt>
   223e4:	add	sl, sp, #28
   223e8:	mov	r0, r8
   223ec:	mov	r2, r6
   223f0:	mov	r1, sl
   223f4:	bl	234c <InflateSkip>
   223f8:	sub	r2, fp, #36	; 0x24
   223fc:	mov	r0, r8
   22400:	mov	r1, sl
   22404:	str	r7, [sp, #32]
   22408:	bl	30c0 <InflateDataType>
   2240c:	ldr	r0, [r8, #20]
   22410:	cmp	r0, #0
   22414:	beq	22420 <Mat_VarReadData5+0x6f0>
   22418:	sub	r0, fp, #36	; 0x24
   2241c:	bl	1c28 <Mat_int32Swap>
   22420:	ldr	r1, [fp, #-36]	; 0xffffffdc
   22424:	ldr	r6, [fp, #12]
   22428:	mov	r2, #0
   2242c:	uxtb	r0, r1
   22430:	cmp	r0, #25
   22434:	movcs	r0, r2
   22438:	cmp	r2, r1, lsr #16
   2243c:	str	r0, [r4, #8]
   22440:	bne	22458 <Mat_VarReadData5+0x728>
   22444:	add	r1, sp, #28
   22448:	mov	r0, r8
   2244c:	mov	r2, #4
   22450:	bl	234c <InflateSkip>
   22454:	ldr	r0, [r4, #8]
   22458:	ldr	r1, [sp, #24]
   2245c:	ldr	r3, [r4, #16]
   22460:	ldr	r2, [r1, #4]
   22464:	ldr	r1, [r4, #32]
   22468:	stm	sp, {r0, r1, r9}
   2246c:	ldr	r0, [fp, #8]
   22470:	add	r1, sp, #28
   22474:	str	r6, [sp, #16]
   22478:	str	r0, [sp, #12]
   2247c:	mov	r0, r8
   22480:	bl	1e390 <ReadCompressedDataSlab2>
   22484:	b	224d8 <Mat_VarReadData5+0x7a8>
   22488:	ldr	r3, [r4, #8]
   2248c:	ldr	r2, [r4, #16]
   22490:	stm	sp, {r0, r9}
   22494:	mov	r0, r8
   22498:	str	r7, [sp, #8]
   2249c:	str	sl, [sp, #12]
   224a0:	ldr	r1, [sp, #24]
   224a4:	bl	1cda8 <ReadDataSlab2>
   224a8:	b	224e8 <Mat_VarReadData5+0x7b8>
   224ac:	ldr	r1, [r4, #8]
   224b0:	ldr	r3, [r4, #16]
   224b4:	str	r1, [sp]
   224b8:	stmib	sp, {r0, r9}
   224bc:	add	r1, sp, #28
   224c0:	mov	r0, r8
   224c4:	str	r7, [sp, #12]
   224c8:	str	sl, [sp, #16]
   224cc:	ldr	r2, [sp, #24]
   224d0:	bl	1e390 <ReadCompressedDataSlab2>
   224d4:	mov	r5, #0
   224d8:	add	r0, sp, #28
   224dc:	bl	1954 <inflateEnd@plt>
   224e0:	cmp	r5, #0
   224e4:	bne	22504 <Mat_VarReadData5+0x7d4>
   224e8:	ldr	r0, [r4, #16]
   224ec:	bl	45274 <ClassType2DataType>
   224f0:	str	r0, [r4, #8]
   224f4:	ldr	r0, [r4, #16]
   224f8:	bl	1a38 <Mat_SizeOfClass@plt>
   224fc:	mov	r5, #0
   22500:	str	r0, [r4, #12]
   22504:	mov	r0, r5
   22508:	sub	sp, fp, #28
   2250c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22510:	.word	0x0002804f
   22514:	.word	0x00027b13
   22518:	.word	0x00027ca3

0002251c <GetDataSlab>:
   2251c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22520:	add	fp, sp, #28
   22524:	sub	sp, sp, #188	; 0xbc
   22528:	cmp	r2, #6
   2252c:	mov	lr, r1
   22530:	str	r0, [sp, #52]	; 0x34
   22534:	cmpeq	r3, #9
   22538:	beq	225ac <GetDataSlab+0x90>
   2253c:	cmp	r2, #7
   22540:	cmpeq	r3, #7
   22544:	beq	225ac <GetDataSlab+0x90>
   22548:	cmp	r2, #10
   2254c:	cmpeq	r3, #3
   22550:	beq	225ac <GetDataSlab+0x90>
   22554:	cmp	r2, #12
   22558:	cmpeq	r3, #5
   2255c:	beq	225ac <GetDataSlab+0x90>
   22560:	cmp	r2, #14
   22564:	cmpeq	r3, #12
   22568:	beq	225ac <GetDataSlab+0x90>
   2256c:	cmp	r2, #8
   22570:	cmpeq	r3, #1
   22574:	beq	225ac <GetDataSlab+0x90>
   22578:	cmp	r2, #11
   2257c:	cmpeq	r3, #4
   22580:	beq	225ac <GetDataSlab+0x90>
   22584:	cmp	r2, #13
   22588:	cmpeq	r3, #6
   2258c:	beq	225ac <GetDataSlab+0x90>
   22590:	cmp	r2, #15
   22594:	cmpeq	r3, #13
   22598:	beq	225ac <GetDataSlab+0x90>
   2259c:	cmp	r2, #9
   225a0:	mov	r7, #0
   225a4:	cmpeq	r3, #2
   225a8:	bne	225b0 <GetDataSlab+0x94>
   225ac:	mov	r7, #1
   225b0:	ldr	r0, [fp, #24]
   225b4:	ldr	r8, [fp, #20]
   225b8:	ldr	sl, [fp, #16]
   225bc:	ldr	ip, [fp, #12]
   225c0:	ldr	r9, [fp, #8]
   225c4:	cmp	r0, #2
   225c8:	bne	22770 <GetDataSlab+0x254>
   225cc:	mov	r4, r9
   225d0:	str	r3, [sp, #48]	; 0x30
   225d4:	ldr	r9, [sl]
   225d8:	mov	r3, sl
   225dc:	ldr	sl, [r8]
   225e0:	ldr	r6, [ip]
   225e4:	ldr	r5, [r4]
   225e8:	sub	r0, sl, #1
   225ec:	mla	r0, r0, r9, r6
   225f0:	add	r1, r0, #1
   225f4:	mov	r0, #1
   225f8:	cmp	r1, r5
   225fc:	bhi	242ac <GetDataSlab+0x1d90>
   22600:	str	r6, [sp, #36]	; 0x24
   22604:	mov	r6, r8
   22608:	ldr	r8, [ip, #4]
   2260c:	mov	ip, r3
   22610:	str	r5, [sp, #40]	; 0x28
   22614:	mov	r3, r6
   22618:	ldr	r1, [ip, #4]!
   2261c:	ldr	r5, [r3, #4]!
   22620:	str	r8, [sp, #32]
   22624:	str	r1, [sp, #44]	; 0x2c
   22628:	sub	r6, r5, #1
   2262c:	str	r5, [sp, #56]	; 0x38
   22630:	ldr	r5, [r4, #4]
   22634:	mla	r6, r6, r1, r8
   22638:	add	r6, r6, #1
   2263c:	cmp	r6, r5
   22640:	bhi	242ac <GetDataSlab+0x1d90>
   22644:	ldr	r6, [sp, #40]	; 0x28
   22648:	ldr	r4, [sp, #44]	; 0x2c
   2264c:	cmp	r9, #1
   22650:	cmpeq	sl, r6
   22654:	beq	24288 <GetDataSlab+0x1d6c>
   22658:	ldr	r5, [sp, #56]	; 0x38
   2265c:	ldr	r1, [fp, #20]
   22660:	sub	r2, r2, #6
   22664:	cmp	r2, #9
   22668:	bhi	242ac <GetDataSlab+0x1d90>
   2266c:	add	r0, pc, #8
   22670:	mov	r8, ip
   22674:	ldr	r2, [r0, r2, lsl #2]
   22678:	add	pc, r0, r2
   2267c:	.word	0x00000028
   22680:	.word	0x00001c38
   22684:	.word	0x00001d04
   22688:	.word	0x00001dd4
   2268c:	.word	0x00001ea4
   22690:	.word	0x00001f68
   22694:	.word	0x0000202c
   22698:	.word	0x00002104
   2269c:	.word	0x000021dc
   226a0:	.word	0x000022a4
   226a4:	ldr	r0, [sp, #48]	; 0x30
   226a8:	sub	r1, r0, #1
   226ac:	mov	r0, #1
   226b0:	cmp	r1, #11
   226b4:	bhi	3c108 <GetDataSlab+0x19bec>
   226b8:	add	r2, pc, #4
   226bc:	ldr	r1, [r2, r1, lsl #2]
   226c0:	add	pc, r2, r1
   226c4:	.word	0x00000030
   226c8:	.word	0x00019634
   226cc:	.word	0x000196ac
   226d0:	.word	0x0001972c
   226d4:	.word	0x000197ac
   226d8:	.word	0x0001982c
   226dc:	.word	0x000198ac
   226e0:	.word	0x00019a44
   226e4:	.word	0x00019928
   226e8:	.word	0x00019a44
   226ec:	.word	0x00019a44
   226f0:	.word	0x000199a0
   226f4:	cmp	r5, #1
   226f8:	blt	242a8 <GetDataSlab+0x1d8c>
   226fc:	ldr	r0, [sp, #36]	; 0x24
   22700:	ldr	r1, [sp, #32]
   22704:	mul	r2, r4, r6
   22708:	mov	r3, #0
   2270c:	mla	r0, r1, r6, r0
   22710:	ldr	r1, [sp, #52]	; 0x34
   22714:	add	r1, r1, r0
   22718:	cmp	sl, #1
   2271c:	blt	22758 <GetDataSlab+0x23c>
   22720:	mov	r0, #0
   22724:	mov	r7, sl
   22728:	mov	r6, lr
   2272c:	add	r5, r1, r0
   22730:	add	r0, r0, r9
   22734:	subs	r7, r7, #1
   22738:	ldrsb	r5, [r5]
   2273c:	vmov	s0, r5
   22740:	vcvt.f64.s32	d16, s0
   22744:	vstr	d16, [r6]
   22748:	add	r6, r6, #8
   2274c:	bne	2272c <GetDataSlab+0x210>
   22750:	ldr	r5, [sp, #56]	; 0x38
   22754:	add	lr, lr, sl, lsl #3
   22758:	add	r3, r3, #1
   2275c:	add	r1, r1, r2
   22760:	mov	r0, #0
   22764:	cmp	r3, r5
   22768:	bne	22718 <GetDataSlab+0x1fc>
   2276c:	b	242ac <GetDataSlab+0x1d90>
   22770:	sub	r4, fp, #72	; 0x48
   22774:	vmov.i32	q8, #0	; 0x00000000
   22778:	mov	r0, #36	; 0x24
   2277c:	mov	r5, #0
   22780:	mov	r1, r4
   22784:	str	r5, [fp, #-40]	; 0xffffffd8
   22788:	str	r5, [sp, #136]	; 0x88
   2278c:	str	r5, [sp, #96]	; 0x60
   22790:	vst1.64	{d16-d17}, [r1], r0
   22794:	str	r5, [r1]
   22798:	add	r1, r4, #16
   2279c:	add	r4, sp, #104	; 0x68
   227a0:	vst1.64	{d16-d17}, [r1]
   227a4:	add	r1, r4, #16
   227a8:	vst1.64	{d16-d17}, [r1]
   227ac:	mov	r1, r4
   227b0:	add	r4, sp, #64	; 0x40
   227b4:	vst1.64	{d16-d17}, [r1], r0
   227b8:	str	r5, [r1]
   227bc:	add	r1, r4, #16
   227c0:	vst1.64	{d16-d17}, [r1]
   227c4:	mov	r1, r4
   227c8:	vst1.64	{d16-d17}, [r1], r0
   227cc:	sub	r0, r2, #6
   227d0:	cmp	r0, #9
   227d4:	str	r5, [r1]
   227d8:	bhi	22ac0 <GetDataSlab+0x5a4>
   227dc:	add	r1, pc, #12
   227e0:	str	lr, [sp, #60]	; 0x3c
   227e4:	str	ip, [sp, #56]	; 0x38
   227e8:	ldr	r0, [r1, r0, lsl #2]
   227ec:	add	pc, r1, r0
   227f0:	.word	0x00000028
   227f4:	.word	0x000002d8
   227f8:	.word	0x00000580
   227fc:	.word	0x0000082c
   22800:	.word	0x00000ad8
   22804:	.word	0x00000d5c
   22808:	.word	0x00000fe0
   2280c:	.word	0x00001290
   22810:	.word	0x00001540
   22814:	.word	0x000017ec
   22818:	sub	r1, r3, #1
   2281c:	mov	r0, #1
   22820:	cmp	r1, #11
   22824:	bhi	32138 <GetDataSlab+0xfc1c>
   22828:	add	r2, pc, #8
   2282c:	sub	lr, fp, #72	; 0x48
   22830:	ldr	r1, [r2, r1, lsl #2]
   22834:	add	pc, r2, r1
   22838:	.word	0x00000030
   2283c:	.word	0x000021b0
   22840:	.word	0x00002400
   22844:	.word	0x0000264c
   22848:	.word	0x00002898
   2284c:	.word	0x00002aec
   22850:	.word	0x00002d40
   22854:	.word	0x0000f900
   22858:	.word	0x00002f8c
   2285c:	.word	0x0000f900
   22860:	.word	0x0000f900
   22864:	.word	0x000031d0
   22868:	ldr	r0, [sl]
   2286c:	mov	r3, #0
   22870:	str	r0, [sp, #40]	; 0x28
   22874:	sub	r0, r0, #1
   22878:	str	r0, [fp, #-72]	; 0xffffffb8
   2287c:	ldr	r0, [r9]
   22880:	add	r9, sp, #64	; 0x40
   22884:	str	r0, [sp, #64]	; 0x40
   22888:	str	r0, [sp, #44]	; 0x2c
   2288c:	ldr	r0, [fp, #24]
   22890:	ldr	r1, [r8]
   22894:	cmp	r0, #2
   22898:	str	r1, [sp, #48]	; 0x30
   2289c:	str	r1, [sp, #56]	; 0x38
   228a0:	blt	22940 <GetDataSlab+0x424>
   228a4:	ldr	r2, [sp, #44]	; 0x2c
   228a8:	ldr	r4, [sp, #48]	; 0x30
   228ac:	ldr	r1, [fp, #8]
   228b0:	mov	r0, #1
   228b4:	mov	r3, #0
   228b8:	mov	r7, r2
   228bc:	str	r4, [sp, #56]	; 0x38
   228c0:	ldr	r6, [sl, r0, lsl #2]
   228c4:	ldr	r4, [fp, #8]
   228c8:	str	r2, [r9, r0, lsl #2]
   228cc:	sub	r5, r6, #1
   228d0:	str	r5, [lr, r0, lsl #2]
   228d4:	ldr	r8, [r4, r0, lsl #2]
   228d8:	mov	r4, #0
   228dc:	mov	r6, r8
   228e0:	mul	r2, r6, r2
   228e4:	ldr	r6, [r1, -r4, lsl #2]
   228e8:	add	r4, r4, #1
   228ec:	cmp	r0, r4
   228f0:	mul	r5, r5, r6
   228f4:	bne	228e0 <GetDataSlab+0x3c4>
   228f8:	add	r9, sp, #64	; 0x40
   228fc:	sub	lr, fp, #72	; 0x48
   22900:	ldr	r4, [fp, #20]
   22904:	add	r1, r1, #4
   22908:	str	r2, [r9, r0, lsl #2]
   2290c:	str	r5, [lr, r0, lsl #2]
   22910:	ldr	r6, [ip, r0, lsl #2]
   22914:	mla	r3, r6, r7, r3
   22918:	ldr	r7, [r4, r0, lsl #2]
   2291c:	ldr	r4, [sp, #56]	; 0x38
   22920:	add	r0, r0, #1
   22924:	mul	r4, r7, r4
   22928:	mov	r7, r2
   2292c:	mov	r2, r8
   22930:	str	r4, [sp, #56]	; 0x38
   22934:	ldr	r4, [fp, #24]
   22938:	cmp	r0, r4
   2293c:	bne	228c0 <GetDataSlab+0x3a4>
   22940:	ldr	r0, [sp, #52]	; 0x34
   22944:	add	sl, r0, r3
   22948:	ldr	r0, [sp, #40]	; 0x28
   2294c:	cmp	r0, #1
   22950:	bne	30438 <GetDataSlab+0xdf1c>
   22954:	ldr	r0, [sp, #56]	; 0x38
   22958:	ldr	lr, [sp, #48]	; 0x30
   2295c:	cmp	r0, #1
   22960:	blt	242a8 <GetDataSlab+0x1d8c>
   22964:	ldr	r0, [fp, #20]
   22968:	add	r8, ip, #4
   2296c:	mov	r5, #0
   22970:	add	r9, r0, #4
   22974:	add	r0, sp, #104	; 0x68
   22978:	orr	r6, r0, #4
   2297c:	sub	r0, fp, #72	; 0x48
   22980:	orr	r0, r0, #4
   22984:	str	r0, [sp, #40]	; 0x28
   22988:	lsl	r0, lr, #3
   2298c:	str	r0, [sp, #52]	; 0x34
   22990:	cmp	lr, #1
   22994:	blt	229c8 <GetDataSlab+0x4ac>
   22998:	ldr	r0, [fp, #12]
   2299c:	ldr	ip, [sp, #48]	; 0x30
   229a0:	ldr	lr, [sp, #60]	; 0x3c
   229a4:	ldr	r0, [r0]
   229a8:	add	r0, sl, r0
   229ac:	ldrsb	r1, [r0], #1
   229b0:	subs	ip, ip, #1
   229b4:	vmov	s0, r1
   229b8:	vcvt.f64.s32	d16, s0
   229bc:	vstr	d16, [lr]
   229c0:	add	lr, lr, #8
   229c4:	bne	229ac <GetDataSlab+0x490>
   229c8:	ldr	r0, [sp, #44]	; 0x2c
   229cc:	add	sl, sl, r0
   229d0:	add	r3, r3, r0
   229d4:	ldr	r0, [fp, #24]
   229d8:	cmp	r0, #2
   229dc:	blt	22a80 <GetDataSlab+0x564>
   229e0:	ldr	ip, [sp, #60]	; 0x3c
   229e4:	ldr	lr, [sp, #48]	; 0x30
   229e8:	mov	r4, #0
   229ec:	ldr	r1, [r6, r4, lsl #2]
   229f0:	mov	r0, r4
   229f4:	add	r1, r1, #1
   229f8:	str	r1, [r6, r4, lsl #2]
   229fc:	ldr	r4, [r9, r4, lsl #2]
   22a00:	sdiv	r2, r1, r4
   22a04:	mls	r1, r2, r4, r1
   22a08:	cmp	r1, #0
   22a0c:	bne	22a8c <GetDataSlab+0x570>
   22a10:	mov	r1, #0
   22a14:	add	r2, sp, #64	; 0x40
   22a18:	str	r1, [r6, r0, lsl #2]
   22a1c:	add	r1, r2, r0, lsl #2
   22a20:	ldr	r4, [r1, #4]
   22a24:	sdiv	r1, r3, r4
   22a28:	mls	r1, r1, r4, r3
   22a2c:	cmp	r1, #0
   22a30:	beq	22a50 <GetDataSlab+0x534>
   22a34:	ldr	r2, [r2, r0, lsl #2]
   22a38:	ldr	r7, [r8, r0, lsl #2]
   22a3c:	sub	r1, r4, r1
   22a40:	mla	r1, r7, r2, r1
   22a44:	add	r3, r1, r3
   22a48:	add	sl, sl, r1
   22a4c:	b	22a68 <GetDataSlab+0x54c>
   22a50:	ldr	r1, [r8, r0, lsl #2]
   22a54:	cmp	r1, #0
   22a58:	addne	r2, sp, #64	; 0x40
   22a5c:	ldrne	r2, [r2, r0, lsl #2]
   22a60:	mlane	r3, r2, r1, r3
   22a64:	mlane	sl, r2, r1, sl
   22a68:	ldr	r1, [fp, #24]
   22a6c:	add	r4, r0, #1
   22a70:	add	r0, r0, #2
   22a74:	cmp	r0, r1
   22a78:	blt	229ec <GetDataSlab+0x4d0>
   22a7c:	b	22a9c <GetDataSlab+0x580>
   22a80:	ldr	ip, [sp, #60]	; 0x3c
   22a84:	ldr	lr, [sp, #48]	; 0x30
   22a88:	b	22a9c <GetDataSlab+0x580>
   22a8c:	ldr	r1, [sp, #40]	; 0x28
   22a90:	ldr	r0, [r1, r0, lsl #2]
   22a94:	add	sl, sl, r0
   22a98:	add	r3, r0, r3
   22a9c:	ldr	r0, [sp, #52]	; 0x34
   22aa0:	ldr	r1, [sp, #56]	; 0x38
   22aa4:	add	r5, r5, lr
   22aa8:	add	ip, ip, r0
   22aac:	mov	r0, #0
   22ab0:	cmp	r5, r1
   22ab4:	str	ip, [sp, #60]	; 0x3c
   22ab8:	blt	22990 <GetDataSlab+0x474>
   22abc:	b	242ac <GetDataSlab+0x1d90>
   22ac0:	mov	r0, #1
   22ac4:	b	242ac <GetDataSlab+0x1d90>
   22ac8:	sub	r1, r3, #1
   22acc:	mov	r0, #1
   22ad0:	cmp	r1, #11
   22ad4:	bhi	330d4 <GetDataSlab+0x10bb8>
   22ad8:	add	r2, pc, #8
   22adc:	sub	lr, fp, #72	; 0x48
   22ae0:	ldr	r1, [r2, r1, lsl #2]
   22ae4:	add	pc, r2, r1
   22ae8:	.word	0x00000030
   22aec:	.word	0x000031bc
   22af0:	.word	0x00003420
   22af4:	.word	0x0000366c
   22af8:	.word	0x000038b8
   22afc:	.word	0x00003b0c
   22b00:	.word	0x00003d60
   22b04:	.word	0x000105ec
   22b08:	.word	0x00003f9c
   22b0c:	.word	0x000105ec
   22b10:	.word	0x000105ec
   22b14:	.word	0x000041e8
   22b18:	mov	r0, sl
   22b1c:	mov	sl, lr
   22b20:	mov	r3, #0
   22b24:	ldr	lr, [r0]
   22b28:	sub	r0, lr, #1
   22b2c:	str	r0, [fp, #-72]	; 0xffffffb8
   22b30:	ldr	r0, [r9]
   22b34:	add	r9, sp, #64	; 0x40
   22b38:	str	r0, [sp, #64]	; 0x40
   22b3c:	str	r0, [sp, #44]	; 0x2c
   22b40:	ldr	r0, [fp, #24]
   22b44:	ldr	r1, [r8]
   22b48:	cmp	r0, #2
   22b4c:	str	r1, [sp, #48]	; 0x30
   22b50:	str	r1, [sp, #56]	; 0x38
   22b54:	blt	22bf8 <GetDataSlab+0x6dc>
   22b58:	ldr	r2, [sp, #44]	; 0x2c
   22b5c:	ldr	r4, [sp, #48]	; 0x30
   22b60:	ldr	r1, [fp, #8]
   22b64:	mov	r0, #1
   22b68:	mov	r3, #0
   22b6c:	mov	r7, r2
   22b70:	str	r4, [sp, #56]	; 0x38
   22b74:	ldr	r4, [fp, #16]
   22b78:	ldr	r6, [r4, r0, lsl #2]
   22b7c:	ldr	r4, [fp, #8]
   22b80:	str	r2, [r9, r0, lsl #2]
   22b84:	sub	r5, r6, #1
   22b88:	str	r5, [sl, r0, lsl #2]
   22b8c:	ldr	r8, [r4, r0, lsl #2]
   22b90:	mov	r4, #0
   22b94:	mov	r6, r8
   22b98:	mul	r2, r6, r2
   22b9c:	ldr	r6, [r1, -r4, lsl #2]
   22ba0:	add	r4, r4, #1
   22ba4:	cmp	r0, r4
   22ba8:	mul	r5, r5, r6
   22bac:	bne	22b98 <GetDataSlab+0x67c>
   22bb0:	add	r9, sp, #64	; 0x40
   22bb4:	sub	sl, fp, #72	; 0x48
   22bb8:	ldr	r4, [fp, #20]
   22bbc:	add	r1, r1, #4
   22bc0:	str	r2, [r9, r0, lsl #2]
   22bc4:	str	r5, [sl, r0, lsl #2]
   22bc8:	ldr	r6, [ip, r0, lsl #2]
   22bcc:	mla	r3, r6, r7, r3
   22bd0:	ldr	r7, [r4, r0, lsl #2]
   22bd4:	ldr	r4, [sp, #56]	; 0x38
   22bd8:	add	r0, r0, #1
   22bdc:	mul	r4, r7, r4
   22be0:	mov	r7, r2
   22be4:	mov	r2, r8
   22be8:	str	r4, [sp, #56]	; 0x38
   22bec:	ldr	r4, [fp, #24]
   22bf0:	cmp	r0, r4
   22bf4:	bne	22b74 <GetDataSlab+0x658>
   22bf8:	ldr	r0, [sp, #52]	; 0x34
   22bfc:	cmp	lr, #1
   22c00:	add	r5, r0, r3
   22c04:	bne	305e4 <GetDataSlab+0xe0c8>
   22c08:	ldr	r0, [sp, #56]	; 0x38
   22c0c:	ldr	r1, [sp, #48]	; 0x30
   22c10:	cmp	r0, #1
   22c14:	blt	242a8 <GetDataSlab+0x1d8c>
   22c18:	ldr	r0, [fp, #20]
   22c1c:	add	r8, ip, #4
   22c20:	mov	sl, #0
   22c24:	add	r9, r0, #4
   22c28:	add	r0, sp, #104	; 0x68
   22c2c:	orr	r6, r0, #4
   22c30:	sub	r0, fp, #72	; 0x48
   22c34:	orr	r0, r0, #4
   22c38:	str	r0, [sp, #40]	; 0x28
   22c3c:	lsl	r0, r1, #2
   22c40:	str	r0, [sp, #52]	; 0x34
   22c44:	cmp	r1, #1
   22c48:	blt	22c7c <GetDataSlab+0x760>
   22c4c:	ldr	r0, [fp, #12]
   22c50:	ldr	lr, [sp, #60]	; 0x3c
   22c54:	mov	ip, r1
   22c58:	ldr	r0, [r0]
   22c5c:	add	r0, r5, r0
   22c60:	ldrsb	r1, [r0], #1
   22c64:	subs	ip, ip, #1
   22c68:	vmov	s0, r1
   22c6c:	vcvt.f32.s32	s0, s0
   22c70:	vstr	s0, [lr]
   22c74:	add	lr, lr, #4
   22c78:	bne	22c60 <GetDataSlab+0x744>
   22c7c:	ldr	r0, [sp, #44]	; 0x2c
   22c80:	add	r5, r5, r0
   22c84:	add	r3, r3, r0
   22c88:	ldr	r0, [fp, #24]
   22c8c:	cmp	r0, #2
   22c90:	blt	22d30 <GetDataSlab+0x814>
   22c94:	ldr	ip, [sp, #60]	; 0x3c
   22c98:	mov	r4, #0
   22c9c:	mov	lr, #0
   22ca0:	ldr	r1, [r6, r4, lsl #2]
   22ca4:	mov	r0, r4
   22ca8:	add	r1, r1, #1
   22cac:	str	r1, [r6, r4, lsl #2]
   22cb0:	ldr	r4, [r9, r4, lsl #2]
   22cb4:	sdiv	r2, r1, r4
   22cb8:	mls	r1, r2, r4, r1
   22cbc:	cmp	r1, #0
   22cc0:	bne	22d38 <GetDataSlab+0x81c>
   22cc4:	add	r2, sp, #64	; 0x40
   22cc8:	str	lr, [r6, r0, lsl #2]
   22ccc:	add	r1, r2, r0, lsl #2
   22cd0:	ldr	r4, [r1, #4]
   22cd4:	sdiv	r1, r3, r4
   22cd8:	mls	r1, r1, r4, r3
   22cdc:	cmp	r1, #0
   22ce0:	beq	22d00 <GetDataSlab+0x7e4>
   22ce4:	ldr	r2, [r2, r0, lsl #2]
   22ce8:	ldr	r7, [r8, r0, lsl #2]
   22cec:	sub	r1, r4, r1
   22cf0:	mla	r1, r7, r2, r1
   22cf4:	add	r3, r1, r3
   22cf8:	add	r5, r5, r1
   22cfc:	b	22d18 <GetDataSlab+0x7fc>
   22d00:	ldr	r1, [r8, r0, lsl #2]
   22d04:	cmp	r1, #0
   22d08:	addne	r2, sp, #64	; 0x40
   22d0c:	ldrne	r2, [r2, r0, lsl #2]
   22d10:	mlane	r3, r2, r1, r3
   22d14:	mlane	r5, r2, r1, r5
   22d18:	ldr	r1, [fp, #24]
   22d1c:	add	r4, r0, #1
   22d20:	add	r0, r0, #2
   22d24:	cmp	r0, r1
   22d28:	blt	22ca0 <GetDataSlab+0x784>
   22d2c:	b	22d48 <GetDataSlab+0x82c>
   22d30:	ldr	ip, [sp, #60]	; 0x3c
   22d34:	b	22d48 <GetDataSlab+0x82c>
   22d38:	ldr	r1, [sp, #40]	; 0x28
   22d3c:	ldr	r0, [r1, r0, lsl #2]
   22d40:	add	r5, r5, r0
   22d44:	add	r3, r0, r3
   22d48:	ldr	r1, [sp, #48]	; 0x30
   22d4c:	ldr	r0, [sp, #52]	; 0x34
   22d50:	ldr	r2, [sp, #56]	; 0x38
   22d54:	add	sl, sl, r1
   22d58:	add	ip, ip, r0
   22d5c:	mov	r0, #0
   22d60:	cmp	sl, r2
   22d64:	str	ip, [sp, #60]	; 0x3c
   22d68:	blt	22c44 <GetDataSlab+0x728>
   22d6c:	b	242ac <GetDataSlab+0x1d90>
   22d70:	sub	r1, r3, #1
   22d74:	mov	r0, #1
   22d78:	cmp	r1, #11
   22d7c:	bhi	34028 <GetDataSlab+0x11b0c>
   22d80:	add	r2, pc, #8
   22d84:	sub	lr, fp, #72	; 0x48
   22d88:	ldr	r1, [r2, r1, lsl #2]
   22d8c:	add	pc, r2, r1
   22d90:	.word	0x00000030
   22d94:	.word	0x000041d8
   22d98:	.word	0x00004434
   22d9c:	.word	0x0000468c
   22da0:	.word	0x000048e4
   22da4:	.word	0x00004b44
   22da8:	.word	0x00004da4
   22dac:	.word	0x00011298
   22db0:	.word	0x00005000
   22db4:	.word	0x00011298
   22db8:	.word	0x00011298
   22dbc:	.word	0x0000525c
   22dc0:	ldr	r3, [sl]
   22dc4:	add	r5, sp, #64	; 0x40
   22dc8:	sub	r0, r3, #1
   22dcc:	str	r0, [fp, #-72]	; 0xffffffb8
   22dd0:	ldr	r0, [r9]
   22dd4:	mov	r9, lr
   22dd8:	mov	lr, #0
   22ddc:	str	r0, [sp, #64]	; 0x40
   22de0:	str	r0, [sp, #48]	; 0x30
   22de4:	ldr	r0, [fp, #24]
   22de8:	ldr	sl, [r8]
   22dec:	cmp	r0, #2
   22df0:	mov	r0, sl
   22df4:	str	sl, [sp, #56]	; 0x38
   22df8:	blt	22ea4 <GetDataSlab+0x988>
   22dfc:	ldr	r7, [sp, #48]	; 0x30
   22e00:	ldr	r1, [fp, #8]
   22e04:	mov	r0, #1
   22e08:	mov	lr, #0
   22e0c:	mov	r2, sl
   22e10:	str	sl, [sp, #56]	; 0x38
   22e14:	mov	r8, r7
   22e18:	ldr	r6, [fp, #16]
   22e1c:	mov	r2, r9
   22e20:	ldr	r6, [r6, r0, lsl #2]
   22e24:	str	r7, [r5, r0, lsl #2]
   22e28:	sub	r4, r6, #1
   22e2c:	ldr	r6, [fp, #8]
   22e30:	str	r4, [r9, r0, lsl #2]
   22e34:	ldr	ip, [r6, r0, lsl #2]
   22e38:	mov	r6, #0
   22e3c:	mov	r5, ip
   22e40:	mul	r7, r5, r7
   22e44:	ldr	r5, [r1, -r6, lsl #2]
   22e48:	add	r6, r6, #1
   22e4c:	cmp	r0, r6
   22e50:	mul	r4, r4, r5
   22e54:	bne	22e40 <GetDataSlab+0x924>
   22e58:	ldr	r6, [fp, #12]
   22e5c:	add	r5, sp, #64	; 0x40
   22e60:	str	r4, [r2, r0, lsl #2]
   22e64:	mov	r9, r2
   22e68:	ldr	r2, [sp, #56]	; 0x38
   22e6c:	add	r1, r1, #4
   22e70:	str	r7, [r5, r0, lsl #2]
   22e74:	ldr	r4, [r6, r0, lsl #2]
   22e78:	ldr	r6, [fp, #20]
   22e7c:	mla	lr, r4, r8, lr
   22e80:	ldr	r4, [r6, r0, lsl #2]
   22e84:	ldr	r6, [fp, #24]
   22e88:	add	r0, r0, #1
   22e8c:	mov	r8, r7
   22e90:	mov	r7, ip
   22e94:	mul	r2, r4, r2
   22e98:	cmp	r0, r6
   22e9c:	str	r2, [sp, #56]	; 0x38
   22ea0:	bne	22e18 <GetDataSlab+0x8fc>
   22ea4:	ldr	r0, [sp, #52]	; 0x34
   22ea8:	cmp	r3, #1
   22eac:	add	r2, r0, lr
   22eb0:	bne	30774 <GetDataSlab+0xe258>
   22eb4:	ldr	r0, [sp, #56]	; 0x38
   22eb8:	cmp	r0, #1
   22ebc:	ldr	r0, [fp, #20]
   22ec0:	blt	242a8 <GetDataSlab+0x1d8c>
   22ec4:	ldr	r7, [fp, #12]
   22ec8:	add	r8, r0, #4
   22ecc:	add	r0, sp, #104	; 0x68
   22ed0:	mov	r9, #0
   22ed4:	orr	r3, r0, #4
   22ed8:	sub	r0, fp, #72	; 0x48
   22edc:	orr	r0, r0, #4
   22ee0:	str	r0, [sp, #44]	; 0x2c
   22ee4:	ldr	r0, [r7], #4
   22ee8:	str	r0, [sp, #52]	; 0x34
   22eec:	ldr	r6, [sp, #52]	; 0x34
   22ef0:	ldr	r1, [fp, #12]
   22ef4:	ldr	r0, [sp, #48]	; 0x30
   22ef8:	cmp	sl, #1
   22efc:	add	ip, r6, lr
   22f00:	add	r4, r2, r6
   22f04:	blt	22f3c <GetDataSlab+0xa20>
   22f08:	ldr	r0, [sp, #60]	; 0x3c
   22f0c:	ldr	r6, [fp, #20]
   22f10:	add	r5, r0, r9
   22f14:	mov	r0, #0
   22f18:	ldrb	r2, [r4, r0]
   22f1c:	strb	r2, [r5, r0]
   22f20:	add	r0, r0, #1
   22f24:	ldr	sl, [r6]
   22f28:	cmp	r0, sl
   22f2c:	blt	22f18 <GetDataSlab+0x9fc>
   22f30:	ldr	r0, [fp, #8]
   22f34:	ldr	r6, [r1]
   22f38:	ldr	r0, [r0]
   22f3c:	str	r0, [sp, #48]	; 0x30
   22f40:	sub	r0, r0, r6
   22f44:	str	r6, [sp, #52]	; 0x34
   22f48:	add	r2, r4, r0
   22f4c:	add	lr, ip, r0
   22f50:	ldr	r0, [fp, #24]
   22f54:	add	r4, sp, #64	; 0x40
   22f58:	cmp	r0, #2
   22f5c:	blt	23004 <GetDataSlab+0xae8>
   22f60:	mov	r5, #0
   22f64:	mov	r0, r5
   22f68:	ldr	r5, [r3, r5, lsl #2]
   22f6c:	add	r5, r5, #1
   22f70:	str	r5, [r3, r0, lsl #2]
   22f74:	ldr	r1, [r8, r0, lsl #2]
   22f78:	sdiv	r6, r5, r1
   22f7c:	mls	r1, r6, r1, r5
   22f80:	cmp	r1, #0
   22f84:	bne	22ff4 <GetDataSlab+0xad8>
   22f88:	mov	r1, #0
   22f8c:	str	r1, [r3, r0, lsl #2]
   22f90:	add	r1, r4, r0, lsl #2
   22f94:	ldr	r5, [r1, #4]
   22f98:	sdiv	r1, lr, r5
   22f9c:	mls	ip, r1, r5, lr
   22fa0:	cmp	ip, #0
   22fa4:	beq	22fc4 <GetDataSlab+0xaa8>
   22fa8:	ldr	r1, [r4, r0, lsl #2]
   22fac:	ldr	r6, [r7, r0, lsl #2]
   22fb0:	sub	r5, r5, ip
   22fb4:	mla	r1, r6, r1, r5
   22fb8:	add	lr, r1, lr
   22fbc:	add	r2, r2, r1
   22fc0:	b	22fdc <GetDataSlab+0xac0>
   22fc4:	ldr	r5, [r7, r0, lsl #2]
   22fc8:	add	r4, sp, #64	; 0x40
   22fcc:	cmp	r5, #0
   22fd0:	ldrne	r1, [r4, r0, lsl #2]
   22fd4:	mlane	lr, r1, r5, lr
   22fd8:	mlane	r2, r1, r5, r2
   22fdc:	ldr	r1, [fp, #24]
   22fe0:	add	r5, r0, #1
   22fe4:	add	r0, r0, #2
   22fe8:	cmp	r0, r1
   22fec:	blt	22f64 <GetDataSlab+0xa48>
   22ff0:	b	23004 <GetDataSlab+0xae8>
   22ff4:	ldr	r1, [sp, #44]	; 0x2c
   22ff8:	ldr	r0, [r1, r0, lsl #2]
   22ffc:	add	r2, r2, r0
   23000:	add	lr, r0, lr
   23004:	ldr	r1, [sp, #56]	; 0x38
   23008:	add	r9, sl, r9
   2300c:	mov	r0, #0
   23010:	cmp	r9, r1
   23014:	blt	22eec <GetDataSlab+0x9d0>
   23018:	b	242ac <GetDataSlab+0x1d90>
   2301c:	sub	r1, r3, #1
   23020:	mov	r0, #1
   23024:	cmp	r1, #11
   23028:	bhi	34f70 <GetDataSlab+0x12a54>
   2302c:	add	r2, pc, #8
   23030:	sub	lr, fp, #72	; 0x48
   23034:	ldr	r1, [r2, r1, lsl #2]
   23038:	add	pc, r2, r1
   2303c:	.word	0x00000030
   23040:	.word	0x00005204
   23044:	.word	0x00005460
   23048:	.word	0x000056b8
   2304c:	.word	0x00005910
   23050:	.word	0x00005b70
   23054:	.word	0x00005dd0
   23058:	.word	0x00011f34
   2305c:	.word	0x0000602c
   23060:	.word	0x00011f34
   23064:	.word	0x00011f34
   23068:	.word	0x00006288
   2306c:	ldr	r3, [sl]
   23070:	add	r5, sp, #64	; 0x40
   23074:	sub	r0, r3, #1
   23078:	str	r0, [fp, #-72]	; 0xffffffb8
   2307c:	ldr	r0, [r9]
   23080:	mov	r9, lr
   23084:	mov	lr, #0
   23088:	str	r0, [sp, #64]	; 0x40
   2308c:	str	r0, [sp, #48]	; 0x30
   23090:	ldr	r0, [fp, #24]
   23094:	ldr	sl, [r8]
   23098:	cmp	r0, #2
   2309c:	mov	r0, sl
   230a0:	str	sl, [sp, #56]	; 0x38
   230a4:	blt	23150 <GetDataSlab+0xc34>
   230a8:	ldr	r7, [sp, #48]	; 0x30
   230ac:	ldr	r1, [fp, #8]
   230b0:	mov	r0, #1
   230b4:	mov	lr, #0
   230b8:	mov	r2, sl
   230bc:	str	sl, [sp, #56]	; 0x38
   230c0:	mov	r8, r7
   230c4:	ldr	r6, [fp, #16]
   230c8:	mov	r2, r9
   230cc:	ldr	r6, [r6, r0, lsl #2]
   230d0:	str	r7, [r5, r0, lsl #2]
   230d4:	sub	r4, r6, #1
   230d8:	ldr	r6, [fp, #8]
   230dc:	str	r4, [r9, r0, lsl #2]
   230e0:	ldr	ip, [r6, r0, lsl #2]
   230e4:	mov	r6, #0
   230e8:	mov	r5, ip
   230ec:	mul	r7, r5, r7
   230f0:	ldr	r5, [r1, -r6, lsl #2]
   230f4:	add	r6, r6, #1
   230f8:	cmp	r0, r6
   230fc:	mul	r4, r4, r5
   23100:	bne	230ec <GetDataSlab+0xbd0>
   23104:	ldr	r6, [fp, #12]
   23108:	add	r5, sp, #64	; 0x40
   2310c:	str	r4, [r2, r0, lsl #2]
   23110:	mov	r9, r2
   23114:	ldr	r2, [sp, #56]	; 0x38
   23118:	add	r1, r1, #4
   2311c:	str	r7, [r5, r0, lsl #2]
   23120:	ldr	r4, [r6, r0, lsl #2]
   23124:	ldr	r6, [fp, #20]
   23128:	mla	lr, r4, r8, lr
   2312c:	ldr	r4, [r6, r0, lsl #2]
   23130:	ldr	r6, [fp, #24]
   23134:	add	r0, r0, #1
   23138:	mov	r8, r7
   2313c:	mov	r7, ip
   23140:	mul	r2, r4, r2
   23144:	cmp	r0, r6
   23148:	str	r2, [sp, #56]	; 0x38
   2314c:	bne	230c4 <GetDataSlab+0xba8>
   23150:	ldr	r0, [sp, #52]	; 0x34
   23154:	cmp	r3, #1
   23158:	add	r2, r0, lr
   2315c:	bne	3090c <GetDataSlab+0xe3f0>
   23160:	ldr	r0, [sp, #56]	; 0x38
   23164:	cmp	r0, #1
   23168:	ldr	r0, [fp, #20]
   2316c:	blt	242a8 <GetDataSlab+0x1d8c>
   23170:	ldr	r7, [fp, #12]
   23174:	add	r8, r0, #4
   23178:	add	r0, sp, #104	; 0x68
   2317c:	mov	r9, #0
   23180:	orr	r3, r0, #4
   23184:	sub	r0, fp, #72	; 0x48
   23188:	orr	r0, r0, #4
   2318c:	str	r0, [sp, #44]	; 0x2c
   23190:	ldr	r0, [r7], #4
   23194:	str	r0, [sp, #52]	; 0x34
   23198:	ldr	r6, [sp, #52]	; 0x34
   2319c:	ldr	r1, [fp, #12]
   231a0:	ldr	r0, [sp, #48]	; 0x30
   231a4:	cmp	sl, #1
   231a8:	add	ip, r6, lr
   231ac:	add	r4, r2, r6
   231b0:	blt	231e8 <GetDataSlab+0xccc>
   231b4:	ldr	r0, [sp, #60]	; 0x3c
   231b8:	ldr	r6, [fp, #20]
   231bc:	add	r5, r0, r9
   231c0:	mov	r0, #0
   231c4:	ldrb	r2, [r4, r0]
   231c8:	strb	r2, [r5, r0]
   231cc:	add	r0, r0, #1
   231d0:	ldr	sl, [r6]
   231d4:	cmp	r0, sl
   231d8:	blt	231c4 <GetDataSlab+0xca8>
   231dc:	ldr	r0, [fp, #8]
   231e0:	ldr	r6, [r1]
   231e4:	ldr	r0, [r0]
   231e8:	str	r0, [sp, #48]	; 0x30
   231ec:	sub	r0, r0, r6
   231f0:	str	r6, [sp, #52]	; 0x34
   231f4:	add	r2, r4, r0
   231f8:	add	lr, ip, r0
   231fc:	ldr	r0, [fp, #24]
   23200:	add	r4, sp, #64	; 0x40
   23204:	cmp	r0, #2
   23208:	blt	232b0 <GetDataSlab+0xd94>
   2320c:	mov	r5, #0
   23210:	mov	r0, r5
   23214:	ldr	r5, [r3, r5, lsl #2]
   23218:	add	r5, r5, #1
   2321c:	str	r5, [r3, r0, lsl #2]
   23220:	ldr	r1, [r8, r0, lsl #2]
   23224:	sdiv	r6, r5, r1
   23228:	mls	r1, r6, r1, r5
   2322c:	cmp	r1, #0
   23230:	bne	232a0 <GetDataSlab+0xd84>
   23234:	mov	r1, #0
   23238:	str	r1, [r3, r0, lsl #2]
   2323c:	add	r1, r4, r0, lsl #2
   23240:	ldr	r5, [r1, #4]
   23244:	sdiv	r1, lr, r5
   23248:	mls	ip, r1, r5, lr
   2324c:	cmp	ip, #0
   23250:	beq	23270 <GetDataSlab+0xd54>
   23254:	ldr	r1, [r4, r0, lsl #2]
   23258:	ldr	r6, [r7, r0, lsl #2]
   2325c:	sub	r5, r5, ip
   23260:	mla	r1, r6, r1, r5
   23264:	add	lr, r1, lr
   23268:	add	r2, r2, r1
   2326c:	b	23288 <GetDataSlab+0xd6c>
   23270:	ldr	r5, [r7, r0, lsl #2]
   23274:	add	r4, sp, #64	; 0x40
   23278:	cmp	r5, #0
   2327c:	ldrne	r1, [r4, r0, lsl #2]
   23280:	mlane	lr, r1, r5, lr
   23284:	mlane	r2, r1, r5, r2
   23288:	ldr	r1, [fp, #24]
   2328c:	add	r5, r0, #1
   23290:	add	r0, r0, #2
   23294:	cmp	r0, r1
   23298:	blt	23210 <GetDataSlab+0xcf4>
   2329c:	b	232b0 <GetDataSlab+0xd94>
   232a0:	ldr	r1, [sp, #44]	; 0x2c
   232a4:	ldr	r0, [r1, r0, lsl #2]
   232a8:	add	r2, r2, r0
   232ac:	add	lr, r0, lr
   232b0:	ldr	r1, [sp, #56]	; 0x38
   232b4:	add	r9, sl, r9
   232b8:	mov	r0, #0
   232bc:	cmp	r9, r1
   232c0:	blt	23198 <GetDataSlab+0xc7c>
   232c4:	b	242ac <GetDataSlab+0x1d90>
   232c8:	sub	r1, r3, #1
   232cc:	mov	r0, #1
   232d0:	cmp	r1, #11
   232d4:	bhi	35e84 <GetDataSlab+0x13968>
   232d8:	add	r2, pc, #4
   232dc:	ldr	r1, [r2, r1, lsl #2]
   232e0:	add	pc, r2, r1
   232e4:	.word	0x00000030
   232e8:	.word	0x00006234
   232ec:	.word	0x0000646c
   232f0:	.word	0x000066ac
   232f4:	.word	0x000068ec
   232f8:	.word	0x00006b34
   232fc:	.word	0x00006d7c
   23300:	.word	0x00012ba0
   23304:	.word	0x00006fc8
   23308:	.word	0x00012ba0
   2330c:	.word	0x00012ba0
   23310:	.word	0x00007214
   23314:	mov	r1, r8
   23318:	ldr	r8, [sl]
   2331c:	mov	r3, #0
   23320:	sub	sl, fp, #72	; 0x48
   23324:	sub	r0, r8, #1
   23328:	str	r0, [fp, #-72]	; 0xffffffb8
   2332c:	ldr	r0, [r9]
   23330:	add	r9, sp, #64	; 0x40
   23334:	str	r0, [sp, #64]	; 0x40
   23338:	str	r0, [sp, #44]	; 0x2c
   2333c:	ldr	r0, [fp, #24]
   23340:	ldr	r1, [r1]
   23344:	cmp	r0, #2
   23348:	str	r1, [sp, #48]	; 0x30
   2334c:	str	r1, [sp, #56]	; 0x38
   23350:	blt	233f4 <GetDataSlab+0xed8>
   23354:	ldr	r2, [sp, #44]	; 0x2c
   23358:	ldr	r6, [sp, #48]	; 0x30
   2335c:	ldr	r1, [fp, #8]
   23360:	mov	r0, #1
   23364:	mov	r3, #0
   23368:	mov	r7, r2
   2336c:	str	r6, [sp, #56]	; 0x38
   23370:	ldr	r6, [fp, #16]
   23374:	mov	r4, #0
   23378:	ldr	r6, [r6, r0, lsl #2]
   2337c:	str	r2, [r9, r0, lsl #2]
   23380:	sub	r5, r6, #1
   23384:	ldr	r6, [fp, #8]
   23388:	str	r5, [sl, r0, lsl #2]
   2338c:	ldr	lr, [r6, r0, lsl #2]
   23390:	mov	r6, lr
   23394:	mul	r2, r6, r2
   23398:	ldr	r6, [r1, -r4, lsl #2]
   2339c:	add	r4, r4, #1
   233a0:	cmp	r0, r4
   233a4:	mul	r5, r5, r6
   233a8:	bne	23394 <GetDataSlab+0xe78>
   233ac:	add	r9, sp, #64	; 0x40
   233b0:	sub	sl, fp, #72	; 0x48
   233b4:	ldr	r4, [fp, #20]
   233b8:	add	r1, r1, #4
   233bc:	str	r2, [r9, r0, lsl #2]
   233c0:	str	r5, [sl, r0, lsl #2]
   233c4:	ldr	r6, [ip, r0, lsl #2]
   233c8:	mla	r3, r6, r7, r3
   233cc:	ldr	r7, [r4, r0, lsl #2]
   233d0:	ldr	r4, [sp, #56]	; 0x38
   233d4:	add	r0, r0, #1
   233d8:	mul	r4, r7, r4
   233dc:	mov	r7, r2
   233e0:	mov	r2, lr
   233e4:	str	r4, [sp, #56]	; 0x38
   233e8:	ldr	r4, [fp, #24]
   233ec:	cmp	r0, r4
   233f0:	bne	23370 <GetDataSlab+0xe54>
   233f4:	ldr	r0, [sp, #52]	; 0x34
   233f8:	cmp	r8, #1
   233fc:	mov	r1, sl
   23400:	add	r5, r0, r3
   23404:	bne	30aa4 <GetDataSlab+0xe588>
   23408:	ldr	r0, [sp, #56]	; 0x38
   2340c:	ldr	r2, [sp, #48]	; 0x30
   23410:	cmp	r0, #1
   23414:	blt	242a8 <GetDataSlab+0x1d8c>
   23418:	ldr	r0, [fp, #20]
   2341c:	add	sl, ip, #4
   23420:	orr	r9, r1, #4
   23424:	mov	r8, #0
   23428:	add	lr, r0, #4
   2342c:	add	r0, sp, #104	; 0x68
   23430:	orr	r6, r0, #4
   23434:	lsl	r0, r2, #1
   23438:	str	r0, [sp, #52]	; 0x34
   2343c:	cmp	r2, #1
   23440:	blt	23468 <GetDataSlab+0xf4c>
   23444:	ldr	r0, [fp, #12]
   23448:	ldr	ip, [sp, #48]	; 0x30
   2344c:	ldr	r4, [sp, #60]	; 0x3c
   23450:	ldr	r0, [r0]
   23454:	add	r0, r5, r0
   23458:	ldrsb	r1, [r0], #1
   2345c:	subs	ip, ip, #1
   23460:	strh	r1, [r4], #2
   23464:	bne	23458 <GetDataSlab+0xf3c>
   23468:	ldr	r0, [sp, #44]	; 0x2c
   2346c:	add	ip, sp, #64	; 0x40
   23470:	add	r5, r5, r0
   23474:	add	r3, r3, r0
   23478:	ldr	r0, [fp, #24]
   2347c:	cmp	r0, #2
   23480:	blt	23520 <GetDataSlab+0x1004>
   23484:	mov	r4, #0
   23488:	ldr	r1, [r6, r4, lsl #2]
   2348c:	mov	r0, r4
   23490:	add	r1, r1, #1
   23494:	str	r1, [r6, r4, lsl #2]
   23498:	ldr	r4, [lr, r4, lsl #2]
   2349c:	sdiv	r2, r1, r4
   234a0:	mls	r1, r2, r4, r1
   234a4:	cmp	r1, #0
   234a8:	bne	23514 <GetDataSlab+0xff8>
   234ac:	mov	r1, #0
   234b0:	str	r1, [r6, r0, lsl #2]
   234b4:	add	r1, ip, r0, lsl #2
   234b8:	ldr	r4, [r1, #4]
   234bc:	sdiv	r1, r3, r4
   234c0:	mls	r1, r1, r4, r3
   234c4:	cmp	r1, #0
   234c8:	beq	234e8 <GetDataSlab+0xfcc>
   234cc:	ldr	r2, [ip, r0, lsl #2]
   234d0:	ldr	r7, [sl, r0, lsl #2]
   234d4:	sub	r1, r4, r1
   234d8:	mla	r1, r7, r2, r1
   234dc:	add	r3, r1, r3
   234e0:	add	r5, r5, r1
   234e4:	b	234fc <GetDataSlab+0xfe0>
   234e8:	ldr	r1, [sl, r0, lsl #2]
   234ec:	cmp	r1, #0
   234f0:	ldrne	r2, [ip, r0, lsl #2]
   234f4:	mlane	r3, r2, r1, r3
   234f8:	mlane	r5, r2, r1, r5
   234fc:	ldr	r1, [fp, #24]
   23500:	add	r4, r0, #1
   23504:	add	r0, r0, #2
   23508:	cmp	r0, r1
   2350c:	blt	23488 <GetDataSlab+0xf6c>
   23510:	b	23520 <GetDataSlab+0x1004>
   23514:	ldr	r0, [r9, r0, lsl #2]
   23518:	add	r5, r5, r0
   2351c:	add	r3, r0, r3
   23520:	ldr	r0, [sp, #60]	; 0x3c
   23524:	ldr	r1, [sp, #52]	; 0x34
   23528:	ldr	r2, [sp, #48]	; 0x30
   2352c:	add	r0, r0, r1
   23530:	ldr	r1, [sp, #56]	; 0x38
   23534:	add	r8, r8, r2
   23538:	str	r0, [sp, #60]	; 0x3c
   2353c:	mov	r0, #0
   23540:	cmp	r8, r1
   23544:	blt	2343c <GetDataSlab+0xf20>
   23548:	b	242ac <GetDataSlab+0x1d90>
   2354c:	sub	r1, r3, #1
   23550:	mov	r0, #1
   23554:	cmp	r1, #11
   23558:	bhi	36d70 <GetDataSlab+0x14854>
   2355c:	add	r2, pc, #4
   23560:	ldr	r1, [r2, r1, lsl #2]
   23564:	add	pc, r2, r1
   23568:	.word	0x00000030
   2356c:	.word	0x000071d4
   23570:	.word	0x0000740c
   23574:	.word	0x0000764c
   23578:	.word	0x0000788c
   2357c:	.word	0x00007ad4
   23580:	.word	0x00007d18
   23584:	.word	0x00013808
   23588:	.word	0x00007f64
   2358c:	.word	0x00013808
   23590:	.word	0x00013808
   23594:	.word	0x000081b0
   23598:	mov	r1, r8
   2359c:	ldr	r8, [sl]
   235a0:	mov	r3, #0
   235a4:	sub	sl, fp, #72	; 0x48
   235a8:	sub	r0, r8, #1
   235ac:	str	r0, [fp, #-72]	; 0xffffffb8
   235b0:	ldr	r0, [r9]
   235b4:	add	r9, sp, #64	; 0x40
   235b8:	str	r0, [sp, #64]	; 0x40
   235bc:	str	r0, [sp, #44]	; 0x2c
   235c0:	ldr	r0, [fp, #24]
   235c4:	ldr	r1, [r1]
   235c8:	cmp	r0, #2
   235cc:	str	r1, [sp, #48]	; 0x30
   235d0:	str	r1, [sp, #56]	; 0x38
   235d4:	blt	23678 <GetDataSlab+0x115c>
   235d8:	ldr	r2, [sp, #44]	; 0x2c
   235dc:	ldr	r6, [sp, #48]	; 0x30
   235e0:	ldr	r1, [fp, #8]
   235e4:	mov	r0, #1
   235e8:	mov	r3, #0
   235ec:	mov	r7, r2
   235f0:	str	r6, [sp, #56]	; 0x38
   235f4:	ldr	r6, [fp, #16]
   235f8:	mov	r4, #0
   235fc:	ldr	r6, [r6, r0, lsl #2]
   23600:	str	r2, [r9, r0, lsl #2]
   23604:	sub	r5, r6, #1
   23608:	ldr	r6, [fp, #8]
   2360c:	str	r5, [sl, r0, lsl #2]
   23610:	ldr	lr, [r6, r0, lsl #2]
   23614:	mov	r6, lr
   23618:	mul	r2, r6, r2
   2361c:	ldr	r6, [r1, -r4, lsl #2]
   23620:	add	r4, r4, #1
   23624:	cmp	r0, r4
   23628:	mul	r5, r5, r6
   2362c:	bne	23618 <GetDataSlab+0x10fc>
   23630:	add	r9, sp, #64	; 0x40
   23634:	sub	sl, fp, #72	; 0x48
   23638:	ldr	r4, [fp, #20]
   2363c:	add	r1, r1, #4
   23640:	str	r2, [r9, r0, lsl #2]
   23644:	str	r5, [sl, r0, lsl #2]
   23648:	ldr	r6, [ip, r0, lsl #2]
   2364c:	mla	r3, r6, r7, r3
   23650:	ldr	r7, [r4, r0, lsl #2]
   23654:	ldr	r4, [sp, #56]	; 0x38
   23658:	add	r0, r0, #1
   2365c:	mul	r4, r7, r4
   23660:	mov	r7, r2
   23664:	mov	r2, lr
   23668:	str	r4, [sp, #56]	; 0x38
   2366c:	ldr	r4, [fp, #24]
   23670:	cmp	r0, r4
   23674:	bne	235f4 <GetDataSlab+0x10d8>
   23678:	ldr	r0, [sp, #52]	; 0x34
   2367c:	cmp	r8, #1
   23680:	mov	r1, sl
   23684:	add	r5, r0, r3
   23688:	bne	30c2c <GetDataSlab+0xe710>
   2368c:	ldr	r0, [sp, #56]	; 0x38
   23690:	ldr	r2, [sp, #48]	; 0x30
   23694:	cmp	r0, #1
   23698:	blt	242a8 <GetDataSlab+0x1d8c>
   2369c:	ldr	r0, [fp, #20]
   236a0:	add	sl, ip, #4
   236a4:	orr	r9, r1, #4
   236a8:	mov	r8, #0
   236ac:	add	lr, r0, #4
   236b0:	add	r0, sp, #104	; 0x68
   236b4:	orr	r6, r0, #4
   236b8:	lsl	r0, r2, #1
   236bc:	str	r0, [sp, #52]	; 0x34
   236c0:	cmp	r2, #1
   236c4:	blt	236ec <GetDataSlab+0x11d0>
   236c8:	ldr	r0, [fp, #12]
   236cc:	ldr	ip, [sp, #48]	; 0x30
   236d0:	ldr	r4, [sp, #60]	; 0x3c
   236d4:	ldr	r0, [r0]
   236d8:	add	r0, r5, r0
   236dc:	ldrsb	r1, [r0], #1
   236e0:	subs	ip, ip, #1
   236e4:	strh	r1, [r4], #2
   236e8:	bne	236dc <GetDataSlab+0x11c0>
   236ec:	ldr	r0, [sp, #44]	; 0x2c
   236f0:	add	ip, sp, #64	; 0x40
   236f4:	add	r5, r5, r0
   236f8:	add	r3, r3, r0
   236fc:	ldr	r0, [fp, #24]
   23700:	cmp	r0, #2
   23704:	blt	237a4 <GetDataSlab+0x1288>
   23708:	mov	r4, #0
   2370c:	ldr	r1, [r6, r4, lsl #2]
   23710:	mov	r0, r4
   23714:	add	r1, r1, #1
   23718:	str	r1, [r6, r4, lsl #2]
   2371c:	ldr	r4, [lr, r4, lsl #2]
   23720:	sdiv	r2, r1, r4
   23724:	mls	r1, r2, r4, r1
   23728:	cmp	r1, #0
   2372c:	bne	23798 <GetDataSlab+0x127c>
   23730:	mov	r1, #0
   23734:	str	r1, [r6, r0, lsl #2]
   23738:	add	r1, ip, r0, lsl #2
   2373c:	ldr	r4, [r1, #4]
   23740:	sdiv	r1, r3, r4
   23744:	mls	r1, r1, r4, r3
   23748:	cmp	r1, #0
   2374c:	beq	2376c <GetDataSlab+0x1250>
   23750:	ldr	r2, [ip, r0, lsl #2]
   23754:	ldr	r7, [sl, r0, lsl #2]
   23758:	sub	r1, r4, r1
   2375c:	mla	r1, r7, r2, r1
   23760:	add	r3, r1, r3
   23764:	add	r5, r5, r1
   23768:	b	23780 <GetDataSlab+0x1264>
   2376c:	ldr	r1, [sl, r0, lsl #2]
   23770:	cmp	r1, #0
   23774:	ldrne	r2, [ip, r0, lsl #2]
   23778:	mlane	r3, r2, r1, r3
   2377c:	mlane	r5, r2, r1, r5
   23780:	ldr	r1, [fp, #24]
   23784:	add	r4, r0, #1
   23788:	add	r0, r0, #2
   2378c:	cmp	r0, r1
   23790:	blt	2370c <GetDataSlab+0x11f0>
   23794:	b	237a4 <GetDataSlab+0x1288>
   23798:	ldr	r0, [r9, r0, lsl #2]
   2379c:	add	r5, r5, r0
   237a0:	add	r3, r0, r3
   237a4:	ldr	r0, [sp, #60]	; 0x3c
   237a8:	ldr	r1, [sp, #52]	; 0x34
   237ac:	ldr	r2, [sp, #48]	; 0x30
   237b0:	add	r0, r0, r1
   237b4:	ldr	r1, [sp, #56]	; 0x38
   237b8:	add	r8, r8, r2
   237bc:	str	r0, [sp, #60]	; 0x3c
   237c0:	mov	r0, #0
   237c4:	cmp	r8, r1
   237c8:	blt	236c0 <GetDataSlab+0x11a4>
   237cc:	b	242ac <GetDataSlab+0x1d90>
   237d0:	sub	r1, r3, #1
   237d4:	mov	r0, #1
   237d8:	cmp	r1, #11
   237dc:	bhi	37c9c <GetDataSlab+0x15780>
   237e0:	add	r2, pc, #8
   237e4:	sub	lr, fp, #72	; 0x48
   237e8:	ldr	r1, [r2, r1, lsl #2]
   237ec:	add	pc, r2, r1
   237f0:	.word	0x00000030
   237f4:	.word	0x0000816c
   237f8:	.word	0x000083c8
   237fc:	.word	0x00008620
   23800:	.word	0x00008878
   23804:	.word	0x00008ad8
   23808:	.word	0x00008d38
   2380c:	.word	0x000144ac
   23810:	.word	0x00008f94
   23814:	.word	0x000144ac
   23818:	.word	0x000144ac
   2381c:	.word	0x000091f0
   23820:	ldr	r3, [sl]
   23824:	mov	sl, #0
   23828:	add	r5, sp, #64	; 0x40
   2382c:	sub	r0, r3, #1
   23830:	str	r0, [fp, #-72]	; 0xffffffb8
   23834:	ldr	r0, [r9]
   23838:	mov	r9, lr
   2383c:	str	r0, [sp, #64]	; 0x40
   23840:	str	r0, [sp, #48]	; 0x30
   23844:	ldr	r0, [fp, #24]
   23848:	ldr	lr, [r8]
   2384c:	cmp	r0, #2
   23850:	mov	r0, lr
   23854:	str	lr, [sp, #56]	; 0x38
   23858:	blt	23904 <GetDataSlab+0x13e8>
   2385c:	ldr	r7, [sp, #48]	; 0x30
   23860:	ldr	r1, [fp, #8]
   23864:	mov	r0, #1
   23868:	mov	sl, #0
   2386c:	mov	r2, lr
   23870:	str	lr, [sp, #56]	; 0x38
   23874:	mov	r8, r7
   23878:	ldr	r6, [fp, #16]
   2387c:	mov	r2, r9
   23880:	ldr	r6, [r6, r0, lsl #2]
   23884:	str	r7, [r5, r0, lsl #2]
   23888:	sub	r4, r6, #1
   2388c:	ldr	r6, [fp, #8]
   23890:	str	r4, [r9, r0, lsl #2]
   23894:	ldr	ip, [r6, r0, lsl #2]
   23898:	mov	r6, #0
   2389c:	mov	r5, ip
   238a0:	mul	r7, r5, r7
   238a4:	ldr	r5, [r1, -r6, lsl #2]
   238a8:	add	r6, r6, #1
   238ac:	cmp	r0, r6
   238b0:	mul	r4, r4, r5
   238b4:	bne	238a0 <GetDataSlab+0x1384>
   238b8:	ldr	r6, [fp, #12]
   238bc:	add	r5, sp, #64	; 0x40
   238c0:	str	r4, [r2, r0, lsl #2]
   238c4:	mov	r9, r2
   238c8:	ldr	r2, [sp, #56]	; 0x38
   238cc:	add	r1, r1, #4
   238d0:	str	r7, [r5, r0, lsl #2]
   238d4:	ldr	r4, [r6, r0, lsl #2]
   238d8:	ldr	r6, [fp, #20]
   238dc:	mla	sl, r4, r8, sl
   238e0:	ldr	r4, [r6, r0, lsl #2]
   238e4:	ldr	r6, [fp, #24]
   238e8:	add	r0, r0, #1
   238ec:	mov	r8, r7
   238f0:	mov	r7, ip
   238f4:	mul	r2, r4, r2
   238f8:	cmp	r0, r6
   238fc:	str	r2, [sp, #56]	; 0x38
   23900:	bne	23878 <GetDataSlab+0x135c>
   23904:	ldr	r0, [sp, #52]	; 0x34
   23908:	cmp	r3, #1
   2390c:	add	r2, r0, sl
   23910:	bne	30db4 <GetDataSlab+0xe898>
   23914:	ldr	r0, [sp, #56]	; 0x38
   23918:	cmp	r0, #1
   2391c:	ldr	r0, [fp, #20]
   23920:	blt	242a8 <GetDataSlab+0x1d8c>
   23924:	ldr	r7, [fp, #12]
   23928:	add	r8, r0, #4
   2392c:	add	r0, sp, #104	; 0x68
   23930:	mov	r9, #0
   23934:	orr	r3, r0, #4
   23938:	sub	r0, fp, #72	; 0x48
   2393c:	orr	r0, r0, #4
   23940:	str	r0, [sp, #44]	; 0x2c
   23944:	ldr	r0, [r7], #4
   23948:	str	r0, [sp, #52]	; 0x34
   2394c:	ldr	r6, [sp, #52]	; 0x34
   23950:	ldr	r1, [fp, #12]
   23954:	ldr	r0, [sp, #48]	; 0x30
   23958:	cmp	lr, #1
   2395c:	add	sl, r6, sl
   23960:	add	r4, r2, r6
   23964:	blt	239a0 <GetDataSlab+0x1484>
   23968:	ldr	r0, [sp, #60]	; 0x3c
   2396c:	ldr	r6, [fp, #20]
   23970:	add	r5, r0, r9, lsl #2
   23974:	mov	r0, #0
   23978:	add	r2, r4, r0
   2397c:	ldrsb	r2, [r2]
   23980:	str	r2, [r5, r0, lsl #2]
   23984:	add	r0, r0, #1
   23988:	ldr	lr, [r6]
   2398c:	cmp	r0, lr
   23990:	blt	23978 <GetDataSlab+0x145c>
   23994:	ldr	r0, [fp, #8]
   23998:	ldr	r6, [r1]
   2399c:	ldr	r0, [r0]
   239a0:	str	r0, [sp, #48]	; 0x30
   239a4:	sub	r0, r0, r6
   239a8:	str	r6, [sp, #52]	; 0x34
   239ac:	add	r2, r4, r0
   239b0:	add	sl, sl, r0
   239b4:	ldr	r0, [fp, #24]
   239b8:	add	r4, sp, #64	; 0x40
   239bc:	cmp	r0, #2
   239c0:	blt	23a68 <GetDataSlab+0x154c>
   239c4:	mov	r5, #0
   239c8:	mov	r0, r5
   239cc:	ldr	r5, [r3, r5, lsl #2]
   239d0:	add	r5, r5, #1
   239d4:	str	r5, [r3, r0, lsl #2]
   239d8:	ldr	r1, [r8, r0, lsl #2]
   239dc:	sdiv	r6, r5, r1
   239e0:	mls	r1, r6, r1, r5
   239e4:	cmp	r1, #0
   239e8:	bne	23a58 <GetDataSlab+0x153c>
   239ec:	mov	r1, #0
   239f0:	str	r1, [r3, r0, lsl #2]
   239f4:	add	r1, r4, r0, lsl #2
   239f8:	ldr	r5, [r1, #4]
   239fc:	sdiv	r1, sl, r5
   23a00:	mls	ip, r1, r5, sl
   23a04:	cmp	ip, #0
   23a08:	beq	23a28 <GetDataSlab+0x150c>
   23a0c:	ldr	r1, [r4, r0, lsl #2]
   23a10:	ldr	r6, [r7, r0, lsl #2]
   23a14:	sub	r5, r5, ip
   23a18:	mla	r1, r6, r1, r5
   23a1c:	add	sl, r1, sl
   23a20:	add	r2, r2, r1
   23a24:	b	23a40 <GetDataSlab+0x1524>
   23a28:	ldr	r5, [r7, r0, lsl #2]
   23a2c:	add	r4, sp, #64	; 0x40
   23a30:	cmp	r5, #0
   23a34:	ldrne	r1, [r4, r0, lsl #2]
   23a38:	mlane	sl, r1, r5, sl
   23a3c:	mlane	r2, r1, r5, r2
   23a40:	ldr	r1, [fp, #24]
   23a44:	add	r5, r0, #1
   23a48:	add	r0, r0, #2
   23a4c:	cmp	r0, r1
   23a50:	blt	239c8 <GetDataSlab+0x14ac>
   23a54:	b	23a68 <GetDataSlab+0x154c>
   23a58:	ldr	r1, [sp, #44]	; 0x2c
   23a5c:	ldr	r0, [r1, r0, lsl #2]
   23a60:	add	r2, r2, r0
   23a64:	add	sl, r0, sl
   23a68:	ldr	r1, [sp, #56]	; 0x38
   23a6c:	add	r9, lr, r9
   23a70:	mov	r0, #0
   23a74:	cmp	r9, r1
   23a78:	blt	2394c <GetDataSlab+0x1430>
   23a7c:	b	242ac <GetDataSlab+0x1d90>
   23a80:	sub	r1, r3, #1
   23a84:	mov	r0, #1
   23a88:	cmp	r1, #11
   23a8c:	bhi	38be4 <GetDataSlab+0x166c8>
   23a90:	add	r2, pc, #8
   23a94:	sub	lr, fp, #72	; 0x48
   23a98:	ldr	r1, [r2, r1, lsl #2]
   23a9c:	add	pc, r2, r1
   23aa0:	.word	0x00000030
   23aa4:	.word	0x00009194
   23aa8:	.word	0x000093f0
   23aac:	.word	0x00009648
   23ab0:	.word	0x000098a0
   23ab4:	.word	0x00009b00
   23ab8:	.word	0x00009d60
   23abc:	.word	0x00015144
   23ac0:	.word	0x00009fbc
   23ac4:	.word	0x00015144
   23ac8:	.word	0x00015144
   23acc:	.word	0x0000a218
   23ad0:	ldr	r3, [sl]
   23ad4:	mov	sl, #0
   23ad8:	add	r5, sp, #64	; 0x40
   23adc:	sub	r0, r3, #1
   23ae0:	str	r0, [fp, #-72]	; 0xffffffb8
   23ae4:	ldr	r0, [r9]
   23ae8:	mov	r9, lr
   23aec:	str	r0, [sp, #64]	; 0x40
   23af0:	str	r0, [sp, #48]	; 0x30
   23af4:	ldr	r0, [fp, #24]
   23af8:	ldr	lr, [r8]
   23afc:	cmp	r0, #2
   23b00:	mov	r0, lr
   23b04:	str	lr, [sp, #56]	; 0x38
   23b08:	blt	23bb4 <GetDataSlab+0x1698>
   23b0c:	ldr	r7, [sp, #48]	; 0x30
   23b10:	ldr	r1, [fp, #8]
   23b14:	mov	r0, #1
   23b18:	mov	sl, #0
   23b1c:	mov	r2, lr
   23b20:	str	lr, [sp, #56]	; 0x38
   23b24:	mov	r8, r7
   23b28:	ldr	r6, [fp, #16]
   23b2c:	mov	r2, r9
   23b30:	ldr	r6, [r6, r0, lsl #2]
   23b34:	str	r7, [r5, r0, lsl #2]
   23b38:	sub	r4, r6, #1
   23b3c:	ldr	r6, [fp, #8]
   23b40:	str	r4, [r9, r0, lsl #2]
   23b44:	ldr	ip, [r6, r0, lsl #2]
   23b48:	mov	r6, #0
   23b4c:	mov	r5, ip
   23b50:	mul	r7, r5, r7
   23b54:	ldr	r5, [r1, -r6, lsl #2]
   23b58:	add	r6, r6, #1
   23b5c:	cmp	r0, r6
   23b60:	mul	r4, r4, r5
   23b64:	bne	23b50 <GetDataSlab+0x1634>
   23b68:	ldr	r6, [fp, #12]
   23b6c:	add	r5, sp, #64	; 0x40
   23b70:	str	r4, [r2, r0, lsl #2]
   23b74:	mov	r9, r2
   23b78:	ldr	r2, [sp, #56]	; 0x38
   23b7c:	add	r1, r1, #4
   23b80:	str	r7, [r5, r0, lsl #2]
   23b84:	ldr	r4, [r6, r0, lsl #2]
   23b88:	ldr	r6, [fp, #20]
   23b8c:	mla	sl, r4, r8, sl
   23b90:	ldr	r4, [r6, r0, lsl #2]
   23b94:	ldr	r6, [fp, #24]
   23b98:	add	r0, r0, #1
   23b9c:	mov	r8, r7
   23ba0:	mov	r7, ip
   23ba4:	mul	r2, r4, r2
   23ba8:	cmp	r0, r6
   23bac:	str	r2, [sp, #56]	; 0x38
   23bb0:	bne	23b28 <GetDataSlab+0x160c>
   23bb4:	ldr	r0, [sp, #52]	; 0x34
   23bb8:	cmp	r3, #1
   23bbc:	add	r2, r0, sl
   23bc0:	bne	30f4c <GetDataSlab+0xea30>
   23bc4:	ldr	r0, [sp, #56]	; 0x38
   23bc8:	cmp	r0, #1
   23bcc:	ldr	r0, [fp, #20]
   23bd0:	blt	242a8 <GetDataSlab+0x1d8c>
   23bd4:	ldr	r7, [fp, #12]
   23bd8:	add	r8, r0, #4
   23bdc:	add	r0, sp, #104	; 0x68
   23be0:	mov	r9, #0
   23be4:	orr	r3, r0, #4
   23be8:	sub	r0, fp, #72	; 0x48
   23bec:	orr	r0, r0, #4
   23bf0:	str	r0, [sp, #44]	; 0x2c
   23bf4:	ldr	r0, [r7], #4
   23bf8:	str	r0, [sp, #52]	; 0x34
   23bfc:	ldr	r6, [sp, #52]	; 0x34
   23c00:	ldr	r1, [fp, #12]
   23c04:	ldr	r0, [sp, #48]	; 0x30
   23c08:	cmp	lr, #1
   23c0c:	add	sl, r6, sl
   23c10:	add	r4, r2, r6
   23c14:	blt	23c50 <GetDataSlab+0x1734>
   23c18:	ldr	r0, [sp, #60]	; 0x3c
   23c1c:	ldr	r6, [fp, #20]
   23c20:	add	r5, r0, r9, lsl #2
   23c24:	mov	r0, #0
   23c28:	add	r2, r4, r0
   23c2c:	ldrsb	r2, [r2]
   23c30:	str	r2, [r5, r0, lsl #2]
   23c34:	add	r0, r0, #1
   23c38:	ldr	lr, [r6]
   23c3c:	cmp	r0, lr
   23c40:	blt	23c28 <GetDataSlab+0x170c>
   23c44:	ldr	r0, [fp, #8]
   23c48:	ldr	r6, [r1]
   23c4c:	ldr	r0, [r0]
   23c50:	str	r0, [sp, #48]	; 0x30
   23c54:	sub	r0, r0, r6
   23c58:	str	r6, [sp, #52]	; 0x34
   23c5c:	add	r2, r4, r0
   23c60:	add	sl, sl, r0
   23c64:	ldr	r0, [fp, #24]
   23c68:	add	r4, sp, #64	; 0x40
   23c6c:	cmp	r0, #2
   23c70:	blt	23d18 <GetDataSlab+0x17fc>
   23c74:	mov	r5, #0
   23c78:	mov	r0, r5
   23c7c:	ldr	r5, [r3, r5, lsl #2]
   23c80:	add	r5, r5, #1
   23c84:	str	r5, [r3, r0, lsl #2]
   23c88:	ldr	r1, [r8, r0, lsl #2]
   23c8c:	sdiv	r6, r5, r1
   23c90:	mls	r1, r6, r1, r5
   23c94:	cmp	r1, #0
   23c98:	bne	23d08 <GetDataSlab+0x17ec>
   23c9c:	mov	r1, #0
   23ca0:	str	r1, [r3, r0, lsl #2]
   23ca4:	add	r1, r4, r0, lsl #2
   23ca8:	ldr	r5, [r1, #4]
   23cac:	sdiv	r1, sl, r5
   23cb0:	mls	ip, r1, r5, sl
   23cb4:	cmp	ip, #0
   23cb8:	beq	23cd8 <GetDataSlab+0x17bc>
   23cbc:	ldr	r1, [r4, r0, lsl #2]
   23cc0:	ldr	r6, [r7, r0, lsl #2]
   23cc4:	sub	r5, r5, ip
   23cc8:	mla	r1, r6, r1, r5
   23ccc:	add	sl, r1, sl
   23cd0:	add	r2, r2, r1
   23cd4:	b	23cf0 <GetDataSlab+0x17d4>
   23cd8:	ldr	r5, [r7, r0, lsl #2]
   23cdc:	add	r4, sp, #64	; 0x40
   23ce0:	cmp	r5, #0
   23ce4:	ldrne	r1, [r4, r0, lsl #2]
   23ce8:	mlane	sl, r1, r5, sl
   23cec:	mlane	r2, r1, r5, r2
   23cf0:	ldr	r1, [fp, #24]
   23cf4:	add	r5, r0, #1
   23cf8:	add	r0, r0, #2
   23cfc:	cmp	r0, r1
   23d00:	blt	23c78 <GetDataSlab+0x175c>
   23d04:	b	23d18 <GetDataSlab+0x17fc>
   23d08:	ldr	r1, [sp, #44]	; 0x2c
   23d0c:	ldr	r0, [r1, r0, lsl #2]
   23d10:	add	r2, r2, r0
   23d14:	add	sl, r0, sl
   23d18:	ldr	r1, [sp, #56]	; 0x38
   23d1c:	add	r9, lr, r9
   23d20:	mov	r0, #0
   23d24:	cmp	r9, r1
   23d28:	blt	23bfc <GetDataSlab+0x16e0>
   23d2c:	b	242ac <GetDataSlab+0x1d90>
   23d30:	sub	r1, r3, #1
   23d34:	mov	r0, #1
   23d38:	cmp	r1, #11
   23d3c:	bhi	39b64 <GetDataSlab+0x17648>
   23d40:	add	r2, pc, #4
   23d44:	ldr	r1, [r2, r1, lsl #2]
   23d48:	add	pc, r2, r1
   23d4c:	.word	0x00000030
   23d50:	.word	0x0000a1c0
   23d54:	.word	0x0000a3fc
   23d58:	.word	0x0000a64c
   23d5c:	.word	0x0000a890
   23d60:	.word	0x0000aadc
   23d64:	.word	0x0000ad30
   23d68:	.word	0x00015e18
   23d6c:	.word	0x0000af94
   23d70:	.word	0x00015e18
   23d74:	.word	0x00015e18
   23d78:	.word	0x0000b200
   23d7c:	ldr	lr, [sl]
   23d80:	mov	r3, #0
   23d84:	sub	sl, fp, #72	; 0x48
   23d88:	sub	r0, lr, #1
   23d8c:	str	r0, [fp, #-72]	; 0xffffffb8
   23d90:	ldr	r0, [r9]
   23d94:	add	r9, sp, #64	; 0x40
   23d98:	str	r0, [sp, #64]	; 0x40
   23d9c:	str	r0, [sp, #44]	; 0x2c
   23da0:	ldr	r0, [fp, #24]
   23da4:	ldr	r1, [r8]
   23da8:	cmp	r0, #2
   23dac:	str	r1, [sp, #48]	; 0x30
   23db0:	str	r1, [sp, #56]	; 0x38
   23db4:	blt	23e58 <GetDataSlab+0x193c>
   23db8:	ldr	r2, [sp, #44]	; 0x2c
   23dbc:	ldr	r4, [sp, #48]	; 0x30
   23dc0:	ldr	r1, [fp, #8]
   23dc4:	mov	r0, #1
   23dc8:	mov	r3, #0
   23dcc:	mov	r7, r2
   23dd0:	str	r4, [sp, #56]	; 0x38
   23dd4:	ldr	r4, [fp, #16]
   23dd8:	ldr	r6, [r4, r0, lsl #2]
   23ddc:	ldr	r4, [fp, #8]
   23de0:	str	r2, [r9, r0, lsl #2]
   23de4:	sub	r5, r6, #1
   23de8:	str	r5, [sl, r0, lsl #2]
   23dec:	ldr	r8, [r4, r0, lsl #2]
   23df0:	mov	r4, #0
   23df4:	mov	r6, r8
   23df8:	mul	r2, r6, r2
   23dfc:	ldr	r6, [r1, -r4, lsl #2]
   23e00:	add	r4, r4, #1
   23e04:	cmp	r0, r4
   23e08:	mul	r5, r5, r6
   23e0c:	bne	23df8 <GetDataSlab+0x18dc>
   23e10:	add	r9, sp, #64	; 0x40
   23e14:	sub	sl, fp, #72	; 0x48
   23e18:	ldr	r4, [fp, #20]
   23e1c:	add	r1, r1, #4
   23e20:	str	r2, [r9, r0, lsl #2]
   23e24:	str	r5, [sl, r0, lsl #2]
   23e28:	ldr	r6, [ip, r0, lsl #2]
   23e2c:	mla	r3, r6, r7, r3
   23e30:	ldr	r7, [r4, r0, lsl #2]
   23e34:	ldr	r4, [sp, #56]	; 0x38
   23e38:	add	r0, r0, #1
   23e3c:	mul	r4, r7, r4
   23e40:	mov	r7, r2
   23e44:	mov	r2, r8
   23e48:	str	r4, [sp, #56]	; 0x38
   23e4c:	ldr	r4, [fp, #24]
   23e50:	cmp	r0, r4
   23e54:	bne	23dd4 <GetDataSlab+0x18b8>
   23e58:	ldr	r0, [sp, #52]	; 0x34
   23e5c:	cmp	lr, #1
   23e60:	add	sl, r0, r3
   23e64:	bne	310e4 <GetDataSlab+0xebc8>
   23e68:	ldr	r0, [sp, #56]	; 0x38
   23e6c:	cmp	r0, #1
   23e70:	blt	242a8 <GetDataSlab+0x1d8c>
   23e74:	ldr	r0, [fp, #20]
   23e78:	ldr	r1, [sp, #48]	; 0x30
   23e7c:	add	r8, ip, #4
   23e80:	mov	r5, #0
   23e84:	add	r9, r0, #4
   23e88:	add	r0, sp, #104	; 0x68
   23e8c:	orr	r6, r0, #4
   23e90:	sub	r0, fp, #72	; 0x48
   23e94:	orr	r0, r0, #4
   23e98:	str	r0, [sp, #36]	; 0x24
   23e9c:	lsl	r0, r1, #3
   23ea0:	str	r0, [sp, #40]	; 0x28
   23ea4:	mov	r0, #0
   23ea8:	str	r0, [sp, #52]	; 0x34
   23eac:	cmp	r1, #1
   23eb0:	blt	23ee4 <GetDataSlab+0x19c8>
   23eb4:	ldr	r0, [fp, #12]
   23eb8:	ldr	ip, [sp, #48]	; 0x30
   23ebc:	ldr	lr, [sp, #60]	; 0x3c
   23ec0:	ldr	r0, [r0]
   23ec4:	add	r0, sl, r0
   23ec8:	ldrsb	r4, [r0], #1
   23ecc:	subs	ip, ip, #1
   23ed0:	asr	r1, r4, #31
   23ed4:	str	r4, [lr]
   23ed8:	str	r1, [lr, #4]
   23edc:	add	lr, lr, #8
   23ee0:	bne	23ec8 <GetDataSlab+0x19ac>
   23ee4:	ldr	r0, [sp, #44]	; 0x2c
   23ee8:	add	sl, sl, r0
   23eec:	add	r3, r3, r0
   23ef0:	ldr	r0, [fp, #24]
   23ef4:	cmp	r0, #2
   23ef8:	blt	23f94 <GetDataSlab+0x1a78>
   23efc:	ldr	ip, [sp, #60]	; 0x3c
   23f00:	mov	r4, #0
   23f04:	ldr	r1, [r6, r4, lsl #2]
   23f08:	mov	r0, r4
   23f0c:	add	r1, r1, #1
   23f10:	str	r1, [r6, r4, lsl #2]
   23f14:	ldr	r4, [r9, r4, lsl #2]
   23f18:	sdiv	r2, r1, r4
   23f1c:	mls	r1, r2, r4, r1
   23f20:	cmp	r1, #0
   23f24:	bne	23f9c <GetDataSlab+0x1a80>
   23f28:	add	r2, sp, #64	; 0x40
   23f2c:	str	r5, [r6, r0, lsl #2]
   23f30:	add	r1, r2, r0, lsl #2
   23f34:	ldr	r4, [r1, #4]
   23f38:	sdiv	r1, r3, r4
   23f3c:	mls	r1, r1, r4, r3
   23f40:	cmp	r1, #0
   23f44:	beq	23f64 <GetDataSlab+0x1a48>
   23f48:	ldr	r2, [r2, r0, lsl #2]
   23f4c:	ldr	r7, [r8, r0, lsl #2]
   23f50:	sub	r1, r4, r1
   23f54:	mla	r1, r7, r2, r1
   23f58:	add	r3, r1, r3
   23f5c:	add	sl, sl, r1
   23f60:	b	23f7c <GetDataSlab+0x1a60>
   23f64:	ldr	r1, [r8, r0, lsl #2]
   23f68:	cmp	r1, #0
   23f6c:	addne	r2, sp, #64	; 0x40
   23f70:	ldrne	r2, [r2, r0, lsl #2]
   23f74:	mlane	r3, r2, r1, r3
   23f78:	mlane	sl, r2, r1, sl
   23f7c:	ldr	r1, [fp, #24]
   23f80:	add	r4, r0, #1
   23f84:	add	r0, r0, #2
   23f88:	cmp	r0, r1
   23f8c:	blt	23f04 <GetDataSlab+0x19e8>
   23f90:	b	23fac <GetDataSlab+0x1a90>
   23f94:	ldr	ip, [sp, #60]	; 0x3c
   23f98:	b	23fac <GetDataSlab+0x1a90>
   23f9c:	ldr	r1, [sp, #36]	; 0x24
   23fa0:	ldr	r0, [r1, r0, lsl #2]
   23fa4:	add	sl, sl, r0
   23fa8:	add	r3, r0, r3
   23fac:	ldr	r1, [sp, #48]	; 0x30
   23fb0:	ldr	r7, [sp, #52]	; 0x34
   23fb4:	ldr	r0, [sp, #40]	; 0x28
   23fb8:	ldr	r2, [sp, #56]	; 0x38
   23fbc:	add	r7, r7, r1
   23fc0:	add	ip, ip, r0
   23fc4:	mov	r0, #0
   23fc8:	cmp	r7, r2
   23fcc:	str	ip, [sp, #60]	; 0x3c
   23fd0:	str	r7, [sp, #52]	; 0x34
   23fd4:	blt	23eac <GetDataSlab+0x1990>
   23fd8:	b	242ac <GetDataSlab+0x1d90>
   23fdc:	sub	r1, r3, #1
   23fe0:	mov	r0, #1
   23fe4:	cmp	r1, #11
   23fe8:	bhi	3aab8 <GetDataSlab+0x1859c>
   23fec:	add	r2, pc, #4
   23ff0:	ldr	r1, [r2, r1, lsl #2]
   23ff4:	add	pc, r2, r1
   23ff8:	.word	0x00000030
   23ffc:	.word	0x0000b1b4
   24000:	.word	0x0000b3f0
   24004:	.word	0x0000b640
   24008:	.word	0x0000b884
   2400c:	.word	0x0000bad0
   24010:	.word	0x0000bd10
   24014:	.word	0x00016ac0
   24018:	.word	0x0000bf74
   2401c:	.word	0x00016ac0
   24020:	.word	0x00016ac0
   24024:	.word	0x0000c1e0
   24028:	ldr	lr, [sl]
   2402c:	mov	r3, #0
   24030:	sub	sl, fp, #72	; 0x48
   24034:	sub	r0, lr, #1
   24038:	str	r0, [fp, #-72]	; 0xffffffb8
   2403c:	ldr	r0, [r9]
   24040:	add	r9, sp, #64	; 0x40
   24044:	str	r0, [sp, #64]	; 0x40
   24048:	str	r0, [sp, #44]	; 0x2c
   2404c:	ldr	r0, [fp, #24]
   24050:	ldr	r1, [r8]
   24054:	cmp	r0, #2
   24058:	str	r1, [sp, #48]	; 0x30
   2405c:	str	r1, [sp, #56]	; 0x38
   24060:	blt	24104 <GetDataSlab+0x1be8>
   24064:	ldr	r2, [sp, #44]	; 0x2c
   24068:	ldr	r4, [sp, #48]	; 0x30
   2406c:	ldr	r1, [fp, #8]
   24070:	mov	r0, #1
   24074:	mov	r3, #0
   24078:	mov	r7, r2
   2407c:	str	r4, [sp, #56]	; 0x38
   24080:	ldr	r4, [fp, #16]
   24084:	ldr	r6, [r4, r0, lsl #2]
   24088:	ldr	r4, [fp, #8]
   2408c:	str	r2, [r9, r0, lsl #2]
   24090:	sub	r5, r6, #1
   24094:	str	r5, [sl, r0, lsl #2]
   24098:	ldr	r8, [r4, r0, lsl #2]
   2409c:	mov	r4, #0
   240a0:	mov	r6, r8
   240a4:	mul	r2, r6, r2
   240a8:	ldr	r6, [r1, -r4, lsl #2]
   240ac:	add	r4, r4, #1
   240b0:	cmp	r0, r4
   240b4:	mul	r5, r5, r6
   240b8:	bne	240a4 <GetDataSlab+0x1b88>
   240bc:	add	r9, sp, #64	; 0x40
   240c0:	sub	sl, fp, #72	; 0x48
   240c4:	ldr	r4, [fp, #20]
   240c8:	add	r1, r1, #4
   240cc:	str	r2, [r9, r0, lsl #2]
   240d0:	str	r5, [sl, r0, lsl #2]
   240d4:	ldr	r6, [ip, r0, lsl #2]
   240d8:	mla	r3, r6, r7, r3
   240dc:	ldr	r7, [r4, r0, lsl #2]
   240e0:	ldr	r4, [sp, #56]	; 0x38
   240e4:	add	r0, r0, #1
   240e8:	mul	r4, r7, r4
   240ec:	mov	r7, r2
   240f0:	mov	r2, r8
   240f4:	str	r4, [sp, #56]	; 0x38
   240f8:	ldr	r4, [fp, #24]
   240fc:	cmp	r0, r4
   24100:	bne	24080 <GetDataSlab+0x1b64>
   24104:	ldr	r0, [sp, #52]	; 0x34
   24108:	cmp	lr, #1
   2410c:	add	sl, r0, r3
   24110:	bne	31288 <GetDataSlab+0xed6c>
   24114:	ldr	r0, [sp, #56]	; 0x38
   24118:	cmp	r0, #1
   2411c:	blt	242a8 <GetDataSlab+0x1d8c>
   24120:	ldr	r0, [fp, #20]
   24124:	ldr	r1, [sp, #48]	; 0x30
   24128:	add	r8, ip, #4
   2412c:	mov	r5, #0
   24130:	add	r9, r0, #4
   24134:	add	r0, sp, #104	; 0x68
   24138:	orr	r6, r0, #4
   2413c:	sub	r0, fp, #72	; 0x48
   24140:	orr	r0, r0, #4
   24144:	str	r0, [sp, #36]	; 0x24
   24148:	lsl	r0, r1, #3
   2414c:	str	r0, [sp, #40]	; 0x28
   24150:	mov	r0, #0
   24154:	str	r0, [sp, #52]	; 0x34
   24158:	cmp	r1, #1
   2415c:	blt	24190 <GetDataSlab+0x1c74>
   24160:	ldr	r0, [fp, #12]
   24164:	ldr	ip, [sp, #48]	; 0x30
   24168:	ldr	lr, [sp, #60]	; 0x3c
   2416c:	ldr	r0, [r0]
   24170:	add	r0, sl, r0
   24174:	ldrsb	r4, [r0], #1
   24178:	subs	ip, ip, #1
   2417c:	asr	r1, r4, #31
   24180:	str	r4, [lr]
   24184:	str	r1, [lr, #4]
   24188:	add	lr, lr, #8
   2418c:	bne	24174 <GetDataSlab+0x1c58>
   24190:	ldr	r0, [sp, #44]	; 0x2c
   24194:	add	sl, sl, r0
   24198:	add	r3, r3, r0
   2419c:	ldr	r0, [fp, #24]
   241a0:	cmp	r0, #2
   241a4:	blt	24240 <GetDataSlab+0x1d24>
   241a8:	ldr	ip, [sp, #60]	; 0x3c
   241ac:	mov	r4, #0
   241b0:	ldr	r1, [r6, r4, lsl #2]
   241b4:	mov	r0, r4
   241b8:	add	r1, r1, #1
   241bc:	str	r1, [r6, r4, lsl #2]
   241c0:	ldr	r4, [r9, r4, lsl #2]
   241c4:	sdiv	r2, r1, r4
   241c8:	mls	r1, r2, r4, r1
   241cc:	cmp	r1, #0
   241d0:	bne	24248 <GetDataSlab+0x1d2c>
   241d4:	add	r2, sp, #64	; 0x40
   241d8:	str	r5, [r6, r0, lsl #2]
   241dc:	add	r1, r2, r0, lsl #2
   241e0:	ldr	r4, [r1, #4]
   241e4:	sdiv	r1, r3, r4
   241e8:	mls	r1, r1, r4, r3
   241ec:	cmp	r1, #0
   241f0:	beq	24210 <GetDataSlab+0x1cf4>
   241f4:	ldr	r2, [r2, r0, lsl #2]
   241f8:	ldr	r7, [r8, r0, lsl #2]
   241fc:	sub	r1, r4, r1
   24200:	mla	r1, r7, r2, r1
   24204:	add	r3, r1, r3
   24208:	add	sl, sl, r1
   2420c:	b	24228 <GetDataSlab+0x1d0c>
   24210:	ldr	r1, [r8, r0, lsl #2]
   24214:	cmp	r1, #0
   24218:	addne	r2, sp, #64	; 0x40
   2421c:	ldrne	r2, [r2, r0, lsl #2]
   24220:	mlane	r3, r2, r1, r3
   24224:	mlane	sl, r2, r1, sl
   24228:	ldr	r1, [fp, #24]
   2422c:	add	r4, r0, #1
   24230:	add	r0, r0, #2
   24234:	cmp	r0, r1
   24238:	blt	241b0 <GetDataSlab+0x1c94>
   2423c:	b	24258 <GetDataSlab+0x1d3c>
   24240:	ldr	ip, [sp, #60]	; 0x3c
   24244:	b	24258 <GetDataSlab+0x1d3c>
   24248:	ldr	r1, [sp, #36]	; 0x24
   2424c:	ldr	r0, [r1, r0, lsl #2]
   24250:	add	sl, sl, r0
   24254:	add	r3, r0, r3
   24258:	ldr	r1, [sp, #48]	; 0x30
   2425c:	ldr	r7, [sp, #52]	; 0x34
   24260:	ldr	r0, [sp, #40]	; 0x28
   24264:	ldr	r2, [sp, #56]	; 0x38
   24268:	add	r7, r7, r1
   2426c:	add	ip, ip, r0
   24270:	mov	r0, #0
   24274:	cmp	r7, r2
   24278:	str	ip, [sp, #60]	; 0x3c
   2427c:	str	r7, [sp, #52]	; 0x34
   24280:	blt	24158 <GetDataSlab+0x1c3c>
   24284:	b	242ac <GetDataSlab+0x1d90>
   24288:	cmp	r7, #0
   2428c:	beq	22658 <GetDataSlab+0x13c>
   24290:	cmp	r4, #1
   24294:	bne	22658 <GetDataSlab+0x13c>
   24298:	ldr	r2, [fp, #28]
   2429c:	ldr	r1, [sp, #52]	; 0x34
   242a0:	mov	r0, lr
   242a4:	bl	1834 <memcpy@plt>
   242a8:	mov	r0, #0
   242ac:	sub	sp, fp, #28
   242b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   242b4:	ldr	r0, [sp, #48]	; 0x30
   242b8:	sub	r1, r0, #1
   242bc:	mov	r0, #1
   242c0:	cmp	r1, #11
   242c4:	bhi	3c5ac <GetDataSlab+0x1a090>
   242c8:	add	r2, pc, #4
   242cc:	ldr	r1, [r2, r1, lsl #2]
   242d0:	add	pc, r2, r1
   242d4:	.word	0x00000030
   242d8:	.word	0x00017ed8
   242dc:	.word	0x00017f50
   242e0:	.word	0x00017fd0
   242e4:	.word	0x00018050
   242e8:	.word	0x000180cc
   242ec:	.word	0x00018148
   242f0:	.word	0x000182d8
   242f4:	.word	0x000181bc
   242f8:	.word	0x000182d8
   242fc:	.word	0x000182d8
   24300:	.word	0x00018238
   24304:	cmp	r5, #1
   24308:	blt	242a8 <GetDataSlab+0x1d8c>
   2430c:	ldr	r0, [sp, #36]	; 0x24
   24310:	ldr	r1, [sp, #32]
   24314:	mul	r2, r4, r6
   24318:	mov	r3, #0
   2431c:	mla	r0, r1, r6, r0
   24320:	ldr	r1, [sp, #52]	; 0x34
   24324:	add	r1, r1, r0
   24328:	cmp	sl, #1
   2432c:	blt	24368 <GetDataSlab+0x1e4c>
   24330:	mov	r0, #0
   24334:	mov	r7, sl
   24338:	mov	r6, lr
   2433c:	add	r5, r1, r0
   24340:	add	r0, r0, r9
   24344:	subs	r7, r7, #1
   24348:	ldrsb	r5, [r5]
   2434c:	vmov	s0, r5
   24350:	vcvt.f32.s32	s0, s0
   24354:	vstr	s0, [r6]
   24358:	add	r6, r6, #4
   2435c:	bne	2433c <GetDataSlab+0x1e20>
   24360:	ldr	r5, [sp, #56]	; 0x38
   24364:	add	lr, lr, sl, lsl #2
   24368:	add	r3, r3, #1
   2436c:	add	r1, r1, r2
   24370:	mov	r0, #0
   24374:	cmp	r3, r5
   24378:	bne	24328 <GetDataSlab+0x1e0c>
   2437c:	b	242ac <GetDataSlab+0x1d90>
   24380:	ldr	r0, [sp, #48]	; 0x30
   24384:	sub	r2, r0, #1
   24388:	mov	r0, #1
   2438c:	cmp	r2, #11
   24390:	bhi	3ca88 <GetDataSlab+0x1a56c>
   24394:	add	r7, pc, #4
   24398:	ldr	r2, [r7, r2, lsl #2]
   2439c:	add	pc, r7, r2
   243a0:	.word	0x00000030
   243a4:	.word	0x000182ac
   243a8:	.word	0x0001832c
   243ac:	.word	0x000183b0
   243b0:	.word	0x00018434
   243b4:	.word	0x000184b8
   243b8:	.word	0x0001853c
   243bc:	.word	0x000186e8
   243c0:	.word	0x000185cc
   243c4:	.word	0x000186e8
   243c8:	.word	0x000186e8
   243cc:	.word	0x0001865c
   243d0:	cmp	r5, #1
   243d4:	blt	242a8 <GetDataSlab+0x1d8c>
   243d8:	ldr	r0, [sp, #36]	; 0x24
   243dc:	ldr	r2, [sp, #32]
   243e0:	mov	r7, #0
   243e4:	mla	r0, r2, r6, r0
   243e8:	ldr	r2, [sp, #52]	; 0x34
   243ec:	add	r2, r2, r0
   243f0:	cmp	sl, #1
   243f4:	blt	24438 <GetDataSlab+0x1f1c>
   243f8:	ldr	r5, [fp, #8]
   243fc:	ldr	r4, [fp, #16]
   24400:	mov	r0, #0
   24404:	ldr	r6, [r4]
   24408:	mul	r6, r6, r0
   2440c:	ldrb	r6, [r2, r6]
   24410:	strb	r6, [lr, r0]
   24414:	add	r0, r0, #1
   24418:	ldr	sl, [r1]
   2441c:	cmp	r0, sl
   24420:	blt	24404 <GetDataSlab+0x1ee8>
   24424:	add	lr, lr, r0
   24428:	ldr	r0, [r3]
   2442c:	ldr	r6, [r5]
   24430:	ldr	r4, [r8]
   24434:	mov	r5, r0
   24438:	add	r7, r7, #1
   2443c:	mla	r2, r6, r4, r2
   24440:	mov	r0, #0
   24444:	cmp	r7, r5
   24448:	blt	243f0 <GetDataSlab+0x1ed4>
   2444c:	b	242ac <GetDataSlab+0x1d90>
   24450:	ldr	r0, [sp, #48]	; 0x30
   24454:	sub	r2, r0, #1
   24458:	mov	r0, #1
   2445c:	cmp	r2, #11
   24460:	bhi	3cf5c <GetDataSlab+0x1aa40>
   24464:	add	r7, pc, #4
   24468:	ldr	r2, [r7, r2, lsl #2]
   2446c:	add	pc, r7, r2
   24470:	.word	0x00000030
   24474:	.word	0x000186b0
   24478:	.word	0x00018730
   2447c:	.word	0x000187b4
   24480:	.word	0x00018838
   24484:	.word	0x000188bc
   24488:	.word	0x00018940
   2448c:	.word	0x00018aec
   24490:	.word	0x000189d0
   24494:	.word	0x00018aec
   24498:	.word	0x00018aec
   2449c:	.word	0x00018a60
   244a0:	cmp	r5, #1
   244a4:	blt	242a8 <GetDataSlab+0x1d8c>
   244a8:	ldr	r0, [sp, #36]	; 0x24
   244ac:	ldr	r2, [sp, #32]
   244b0:	mov	r7, #0
   244b4:	mla	r0, r2, r6, r0
   244b8:	ldr	r2, [sp, #52]	; 0x34
   244bc:	add	r2, r2, r0
   244c0:	cmp	sl, #1
   244c4:	blt	24508 <GetDataSlab+0x1fec>
   244c8:	ldr	r5, [fp, #8]
   244cc:	ldr	r4, [fp, #16]
   244d0:	mov	r0, #0
   244d4:	ldr	r6, [r4]
   244d8:	mul	r6, r6, r0
   244dc:	ldrb	r6, [r2, r6]
   244e0:	strb	r6, [lr, r0]
   244e4:	add	r0, r0, #1
   244e8:	ldr	sl, [r1]
   244ec:	cmp	r0, sl
   244f0:	blt	244d4 <GetDataSlab+0x1fb8>
   244f4:	add	lr, lr, r0
   244f8:	ldr	r0, [r3]
   244fc:	ldr	r6, [r5]
   24500:	ldr	r4, [r8]
   24504:	mov	r5, r0
   24508:	add	r7, r7, #1
   2450c:	mla	r2, r6, r4, r2
   24510:	mov	r0, #0
   24514:	cmp	r7, r5
   24518:	blt	244c0 <GetDataSlab+0x1fa4>
   2451c:	b	242ac <GetDataSlab+0x1d90>
   24520:	ldr	r0, [sp, #48]	; 0x30
   24524:	sub	r1, r0, #1
   24528:	mov	r0, #1
   2452c:	cmp	r1, #11
   24530:	bhi	3d3b8 <GetDataSlab+0x1ae9c>
   24534:	add	r2, pc, #4
   24538:	ldr	r1, [r2, r1, lsl #2]
   2453c:	add	pc, r2, r1
   24540:	.word	0x00000030
   24544:	.word	0x00018ab4
   24548:	.word	0x00018b24
   2454c:	.word	0x00018b9c
   24550:	.word	0x00018c14
   24554:	.word	0x00018c8c
   24558:	.word	0x00018d04
   2455c:	.word	0x00018e78
   24560:	.word	0x00018d80
   24564:	.word	0x00018e78
   24568:	.word	0x00018e78
   2456c:	.word	0x00018dfc
   24570:	cmp	r5, #1
   24574:	blt	242a8 <GetDataSlab+0x1d8c>
   24578:	ldr	r0, [sp, #36]	; 0x24
   2457c:	ldr	r1, [sp, #32]
   24580:	mul	r2, r4, r6
   24584:	mov	r3, #0
   24588:	mla	r0, r1, r6, r0
   2458c:	ldr	r1, [sp, #52]	; 0x34
   24590:	add	r1, r1, r0
   24594:	cmp	sl, #1
   24598:	blt	245cc <GetDataSlab+0x20b0>
   2459c:	mov	r6, #0
   245a0:	mov	r0, sl
   245a4:	mov	r7, lr
   245a8:	add	r5, r6, r9
   245ac:	add	r6, r1, r6
   245b0:	subs	r0, r0, #1
   245b4:	ldrsb	r6, [r6]
   245b8:	strh	r6, [r7], #2
   245bc:	mov	r6, r5
   245c0:	bne	245a8 <GetDataSlab+0x208c>
   245c4:	ldr	r5, [sp, #56]	; 0x38
   245c8:	add	lr, lr, sl, lsl #1
   245cc:	add	r3, r3, #1
   245d0:	add	r1, r1, r2
   245d4:	mov	r0, #0
   245d8:	cmp	r3, r5
   245dc:	bne	24594 <GetDataSlab+0x2078>
   245e0:	b	242ac <GetDataSlab+0x1d90>
   245e4:	ldr	r0, [sp, #48]	; 0x30
   245e8:	sub	r1, r0, #1
   245ec:	mov	r0, #1
   245f0:	cmp	r1, #11
   245f4:	bhi	3d800 <GetDataSlab+0x1b2e4>
   245f8:	add	r2, pc, #4
   245fc:	ldr	r1, [r2, r1, lsl #2]
   24600:	add	pc, r2, r1
   24604:	.word	0x00000030
   24608:	.word	0x00018e38
   2460c:	.word	0x00018ea8
   24610:	.word	0x00018f20
   24614:	.word	0x00018f98
   24618:	.word	0x00019010
   2461c:	.word	0x00019088
   24620:	.word	0x000191fc
   24624:	.word	0x00019104
   24628:	.word	0x000191fc
   2462c:	.word	0x000191fc
   24630:	.word	0x00019180
   24634:	cmp	r5, #1
   24638:	blt	242a8 <GetDataSlab+0x1d8c>
   2463c:	ldr	r0, [sp, #36]	; 0x24
   24640:	ldr	r1, [sp, #32]
   24644:	mul	r2, r4, r6
   24648:	mov	r3, #0
   2464c:	mla	r0, r1, r6, r0
   24650:	ldr	r1, [sp, #52]	; 0x34
   24654:	add	r1, r1, r0
   24658:	cmp	sl, #1
   2465c:	blt	24690 <GetDataSlab+0x2174>
   24660:	mov	r6, #0
   24664:	mov	r0, sl
   24668:	mov	r7, lr
   2466c:	add	r5, r6, r9
   24670:	add	r6, r1, r6
   24674:	subs	r0, r0, #1
   24678:	ldrsb	r6, [r6]
   2467c:	strh	r6, [r7], #2
   24680:	mov	r6, r5
   24684:	bne	2466c <GetDataSlab+0x2150>
   24688:	ldr	r5, [sp, #56]	; 0x38
   2468c:	add	lr, lr, sl, lsl #1
   24690:	add	r3, r3, #1
   24694:	add	r1, r1, r2
   24698:	mov	r0, #0
   2469c:	cmp	r3, r5
   246a0:	bne	24658 <GetDataSlab+0x213c>
   246a4:	b	242ac <GetDataSlab+0x1d90>
   246a8:	ldr	r0, [sp, #48]	; 0x30
   246ac:	sub	r2, r0, #1
   246b0:	mov	r0, #1
   246b4:	cmp	r2, #11
   246b8:	bhi	3dd00 <GetDataSlab+0x1b7e4>
   246bc:	add	r7, pc, #4
   246c0:	ldr	r2, [r7, r2, lsl #2]
   246c4:	add	pc, r7, r2
   246c8:	.word	0x00000030
   246cc:	.word	0x000191bc
   246d0:	.word	0x00019244
   246d4:	.word	0x000192d4
   246d8:	.word	0x00019364
   246dc:	.word	0x000193f0
   246e0:	.word	0x0001947c
   246e4:	.word	0x00019638
   246e8:	.word	0x00019514
   246ec:	.word	0x00019638
   246f0:	.word	0x00019638
   246f4:	.word	0x000195ac
   246f8:	cmp	r5, #1
   246fc:	blt	242a8 <GetDataSlab+0x1d8c>
   24700:	ldr	r0, [sp, #36]	; 0x24
   24704:	ldr	r2, [sp, #32]
   24708:	mov	r7, #0
   2470c:	mla	r0, r2, r6, r0
   24710:	ldr	r2, [sp, #52]	; 0x34
   24714:	add	r2, r2, r0
   24718:	cmp	sl, #1
   2471c:	blt	24768 <GetDataSlab+0x224c>
   24720:	ldr	r4, [fp, #8]
   24724:	mov	r0, #0
   24728:	mov	r6, #0
   2472c:	mov	ip, r4
   24730:	ldr	r4, [fp, #16]
   24734:	ldr	r5, [r4]
   24738:	add	r0, r0, #4
   2473c:	mla	r5, r5, r6, r2
   24740:	ldrsb	r5, [r5]
   24744:	str	r5, [lr, r6, lsl #2]
   24748:	add	r6, r6, #1
   2474c:	ldr	sl, [r1]
   24750:	cmp	r6, sl
   24754:	blt	24734 <GetDataSlab+0x2218>
   24758:	ldr	r5, [r3]
   2475c:	ldr	r6, [ip]
   24760:	ldr	r4, [r8]
   24764:	add	lr, lr, r0
   24768:	add	r7, r7, #1
   2476c:	mla	r2, r6, r4, r2
   24770:	mov	r0, #0
   24774:	cmp	r7, r5
   24778:	blt	24718 <GetDataSlab+0x21fc>
   2477c:	b	242ac <GetDataSlab+0x1d90>
   24780:	ldr	r0, [sp, #48]	; 0x30
   24784:	sub	r2, r0, #1
   24788:	mov	r0, #1
   2478c:	cmp	r2, #11
   24790:	bhi	3e21c <GetDataSlab+0x1bd00>
   24794:	add	r7, pc, #4
   24798:	ldr	r2, [r7, r2, lsl #2]
   2479c:	add	pc, r7, r2
   247a0:	.word	0x00000030
   247a4:	.word	0x00019600
   247a8:	.word	0x00019688
   247ac:	.word	0x00019718
   247b0:	.word	0x000197a8
   247b4:	.word	0x00019834
   247b8:	.word	0x000198c0
   247bc:	.word	0x00019a7c
   247c0:	.word	0x00019958
   247c4:	.word	0x00019a7c
   247c8:	.word	0x00019a7c
   247cc:	.word	0x000199f0
   247d0:	cmp	r5, #1
   247d4:	blt	242a8 <GetDataSlab+0x1d8c>
   247d8:	ldr	r0, [sp, #36]	; 0x24
   247dc:	ldr	r2, [sp, #32]
   247e0:	mov	r7, #0
   247e4:	mla	r0, r2, r6, r0
   247e8:	ldr	r2, [sp, #52]	; 0x34
   247ec:	add	r2, r2, r0
   247f0:	cmp	sl, #1
   247f4:	blt	24840 <GetDataSlab+0x2324>
   247f8:	ldr	r4, [fp, #8]
   247fc:	mov	r0, #0
   24800:	mov	r6, #0
   24804:	mov	ip, r4
   24808:	ldr	r4, [fp, #16]
   2480c:	ldr	r5, [r4]
   24810:	add	r0, r0, #4
   24814:	mla	r5, r5, r6, r2
   24818:	ldrsb	r5, [r5]
   2481c:	str	r5, [lr, r6, lsl #2]
   24820:	add	r6, r6, #1
   24824:	ldr	sl, [r1]
   24828:	cmp	r6, sl
   2482c:	blt	2480c <GetDataSlab+0x22f0>
   24830:	ldr	r5, [r3]
   24834:	ldr	r6, [ip]
   24838:	ldr	r4, [r8]
   2483c:	add	lr, lr, r0
   24840:	add	r7, r7, #1
   24844:	mla	r2, r6, r4, r2
   24848:	mov	r0, #0
   2484c:	cmp	r7, r5
   24850:	blt	247f0 <GetDataSlab+0x22d4>
   24854:	b	242ac <GetDataSlab+0x1d90>
   24858:	ldr	r0, [sp, #48]	; 0x30
   2485c:	sub	r1, r0, #1
   24860:	mov	r0, #1
   24864:	cmp	r1, #11
   24868:	bhi	3e6d0 <GetDataSlab+0x1c1b4>
   2486c:	add	r2, pc, #4
   24870:	ldr	r1, [r2, r1, lsl #2]
   24874:	add	pc, r2, r1
   24878:	.word	0x00000030
   2487c:	.word	0x00019a44
   24880:	.word	0x00019abc
   24884:	.word	0x00019b38
   24888:	.word	0x00019bb8
   2488c:	.word	0x00019c34
   24890:	.word	0x00019cb4
   24894:	.word	0x00019e58
   24898:	.word	0x00019d3c
   2489c:	.word	0x00019e58
   248a0:	.word	0x00019e58
   248a4:	.word	0x00019dcc
   248a8:	cmp	r5, #1
   248ac:	blt	242a8 <GetDataSlab+0x1d8c>
   248b0:	ldr	r0, [sp, #36]	; 0x24
   248b4:	ldr	r1, [sp, #32]
   248b8:	mul	r2, r4, r6
   248bc:	mov	r3, #0
   248c0:	mla	r0, r1, r6, r0
   248c4:	ldr	r1, [sp, #52]	; 0x34
   248c8:	add	r1, r1, r0
   248cc:	cmp	sl, #1
   248d0:	blt	24908 <GetDataSlab+0x23ec>
   248d4:	mov	r0, #0
   248d8:	mov	r7, sl
   248dc:	mov	r6, lr
   248e0:	add	r5, r1, r0
   248e4:	add	r0, r0, r9
   248e8:	subs	r7, r7, #1
   248ec:	ldrsb	r4, [r5]
   248f0:	asr	r5, r4, #31
   248f4:	strd	r4, [r6]
   248f8:	add	r6, r6, #8
   248fc:	bne	248e0 <GetDataSlab+0x23c4>
   24900:	ldr	r5, [sp, #56]	; 0x38
   24904:	add	lr, lr, sl, lsl #3
   24908:	add	r3, r3, #1
   2490c:	add	r1, r1, r2
   24910:	mov	r0, #0
   24914:	cmp	r3, r5
   24918:	bne	248cc <GetDataSlab+0x23b0>
   2491c:	b	242ac <GetDataSlab+0x1d90>
   24920:	ldr	r0, [sp, #48]	; 0x30
   24924:	sub	r1, r0, #1
   24928:	mov	r0, #1
   2492c:	cmp	r1, #11
   24930:	bhi	3eb74 <GetDataSlab+0x1c658>
   24934:	add	r2, pc, #4
   24938:	ldr	r1, [r2, r1, lsl #2]
   2493c:	add	pc, r2, r1
   24940:	.word	0x00000030
   24944:	.word	0x00019e20
   24948:	.word	0x00019e98
   2494c:	.word	0x00019f14
   24950:	.word	0x00019f94
   24954:	.word	0x0001a010
   24958:	.word	0x0001a090
   2495c:	.word	0x0001a234
   24960:	.word	0x0001a118
   24964:	.word	0x0001a234
   24968:	.word	0x0001a234
   2496c:	.word	0x0001a1a8
   24970:	cmp	r5, #1
   24974:	blt	242a8 <GetDataSlab+0x1d8c>
   24978:	ldr	r0, [sp, #36]	; 0x24
   2497c:	ldr	r1, [sp, #32]
   24980:	mul	r2, r4, r6
   24984:	mov	r3, #0
   24988:	mla	r0, r1, r6, r0
   2498c:	ldr	r1, [sp, #52]	; 0x34
   24990:	add	r1, r1, r0
   24994:	cmp	sl, #1
   24998:	blt	249d0 <GetDataSlab+0x24b4>
   2499c:	mov	r0, #0
   249a0:	mov	r7, sl
   249a4:	mov	r6, lr
   249a8:	add	r5, r1, r0
   249ac:	add	r0, r0, r9
   249b0:	subs	r7, r7, #1
   249b4:	ldrsb	r4, [r5]
   249b8:	asr	r5, r4, #31
   249bc:	strd	r4, [r6]
   249c0:	add	r6, r6, #8
   249c4:	bne	249a8 <GetDataSlab+0x248c>
   249c8:	ldr	r5, [sp, #56]	; 0x38
   249cc:	add	lr, lr, sl, lsl #3
   249d0:	add	r3, r3, #1
   249d4:	add	r1, r1, r2
   249d8:	mov	r0, #0
   249dc:	cmp	r3, r5
   249e0:	bne	24994 <GetDataSlab+0x2478>
   249e4:	b	242ac <GetDataSlab+0x1d90>
   249e8:	ldr	sl, [sl]
   249ec:	mov	r3, #0
   249f0:	sub	r0, sl, #1
   249f4:	str	r0, [fp, #-72]	; 0xffffffb8
   249f8:	ldr	r0, [r9]
   249fc:	add	r9, sp, #64	; 0x40
   24a00:	str	r0, [sp, #64]	; 0x40
   24a04:	str	r0, [sp, #44]	; 0x2c
   24a08:	ldr	r0, [fp, #24]
   24a0c:	ldr	r1, [r8]
   24a10:	cmp	r0, #2
   24a14:	str	r1, [sp, #48]	; 0x30
   24a18:	str	r1, [sp, #56]	; 0x38
   24a1c:	blt	24ac0 <GetDataSlab+0x25a4>
   24a20:	ldr	r2, [sp, #44]	; 0x2c
   24a24:	ldr	r4, [sp, #48]	; 0x30
   24a28:	ldr	r1, [fp, #8]
   24a2c:	mov	r0, #1
   24a30:	mov	r3, #0
   24a34:	mov	r7, r2
   24a38:	str	r4, [sp, #56]	; 0x38
   24a3c:	ldr	r4, [fp, #16]
   24a40:	ldr	r6, [r4, r0, lsl #2]
   24a44:	ldr	r4, [fp, #8]
   24a48:	str	r2, [r9, r0, lsl #2]
   24a4c:	sub	r5, r6, #1
   24a50:	str	r5, [lr, r0, lsl #2]
   24a54:	ldr	r8, [r4, r0, lsl #2]
   24a58:	mov	r4, #0
   24a5c:	mov	r6, r8
   24a60:	mul	r2, r6, r2
   24a64:	ldr	r6, [r1, -r4, lsl #2]
   24a68:	add	r4, r4, #1
   24a6c:	cmp	r0, r4
   24a70:	mul	r5, r5, r6
   24a74:	bne	24a60 <GetDataSlab+0x2544>
   24a78:	add	r9, sp, #64	; 0x40
   24a7c:	sub	lr, fp, #72	; 0x48
   24a80:	ldr	r4, [fp, #20]
   24a84:	add	r1, r1, #4
   24a88:	str	r2, [r9, r0, lsl #2]
   24a8c:	str	r5, [lr, r0, lsl #2]
   24a90:	ldr	r6, [ip, r0, lsl #2]
   24a94:	mla	r3, r6, r7, r3
   24a98:	ldr	r7, [r4, r0, lsl #2]
   24a9c:	ldr	r4, [sp, #56]	; 0x38
   24aa0:	add	r0, r0, #1
   24aa4:	mul	r4, r7, r4
   24aa8:	mov	r7, r2
   24aac:	mov	r2, r8
   24ab0:	str	r4, [sp, #56]	; 0x38
   24ab4:	ldr	r4, [fp, #24]
   24ab8:	cmp	r0, r4
   24abc:	bne	24a3c <GetDataSlab+0x2520>
   24ac0:	ldr	r0, [sp, #52]	; 0x34
   24ac4:	cmp	sl, #1
   24ac8:	add	r5, r0, r3
   24acc:	bne	3142c <GetDataSlab+0xef10>
   24ad0:	ldr	r0, [sp, #56]	; 0x38
   24ad4:	ldr	r1, [sp, #48]	; 0x30
   24ad8:	cmp	r0, #1
   24adc:	blt	242a8 <GetDataSlab+0x1d8c>
   24ae0:	ldr	r0, [fp, #20]
   24ae4:	add	r8, ip, #4
   24ae8:	mov	sl, #0
   24aec:	add	r9, r0, #4
   24af0:	add	r0, sp, #104	; 0x68
   24af4:	orr	r6, r0, #4
   24af8:	sub	r0, fp, #72	; 0x48
   24afc:	orr	r0, r0, #4
   24b00:	str	r0, [sp, #40]	; 0x28
   24b04:	lsl	r0, r1, #3
   24b08:	str	r0, [sp, #52]	; 0x34
   24b0c:	cmp	r1, #1
   24b10:	blt	24b44 <GetDataSlab+0x2628>
   24b14:	ldr	r0, [fp, #12]
   24b18:	ldr	lr, [sp, #60]	; 0x3c
   24b1c:	mov	ip, r1
   24b20:	ldr	r0, [r0]
   24b24:	add	r0, r5, r0
   24b28:	ldrb	r1, [r0], #1
   24b2c:	subs	ip, ip, #1
   24b30:	vmov	s0, r1
   24b34:	vcvt.f64.u32	d16, s0
   24b38:	vstr	d16, [lr]
   24b3c:	add	lr, lr, #8
   24b40:	bne	24b28 <GetDataSlab+0x260c>
   24b44:	ldr	r0, [sp, #44]	; 0x2c
   24b48:	add	r5, r5, r0
   24b4c:	add	r3, r3, r0
   24b50:	ldr	r0, [fp, #24]
   24b54:	cmp	r0, #2
   24b58:	blt	24bf8 <GetDataSlab+0x26dc>
   24b5c:	ldr	ip, [sp, #60]	; 0x3c
   24b60:	mov	r4, #0
   24b64:	mov	lr, #0
   24b68:	ldr	r1, [r6, r4, lsl #2]
   24b6c:	mov	r0, r4
   24b70:	add	r1, r1, #1
   24b74:	str	r1, [r6, r4, lsl #2]
   24b78:	ldr	r4, [r9, r4, lsl #2]
   24b7c:	sdiv	r2, r1, r4
   24b80:	mls	r1, r2, r4, r1
   24b84:	cmp	r1, #0
   24b88:	bne	24c00 <GetDataSlab+0x26e4>
   24b8c:	add	r2, sp, #64	; 0x40
   24b90:	str	lr, [r6, r0, lsl #2]
   24b94:	add	r1, r2, r0, lsl #2
   24b98:	ldr	r4, [r1, #4]
   24b9c:	sdiv	r1, r3, r4
   24ba0:	mls	r1, r1, r4, r3
   24ba4:	cmp	r1, #0
   24ba8:	beq	24bc8 <GetDataSlab+0x26ac>
   24bac:	ldr	r2, [r2, r0, lsl #2]
   24bb0:	ldr	r7, [r8, r0, lsl #2]
   24bb4:	sub	r1, r4, r1
   24bb8:	mla	r1, r7, r2, r1
   24bbc:	add	r3, r1, r3
   24bc0:	add	r5, r5, r1
   24bc4:	b	24be0 <GetDataSlab+0x26c4>
   24bc8:	ldr	r1, [r8, r0, lsl #2]
   24bcc:	cmp	r1, #0
   24bd0:	addne	r2, sp, #64	; 0x40
   24bd4:	ldrne	r2, [r2, r0, lsl #2]
   24bd8:	mlane	r3, r2, r1, r3
   24bdc:	mlane	r5, r2, r1, r5
   24be0:	ldr	r1, [fp, #24]
   24be4:	add	r4, r0, #1
   24be8:	add	r0, r0, #2
   24bec:	cmp	r0, r1
   24bf0:	blt	24b68 <GetDataSlab+0x264c>
   24bf4:	b	24c10 <GetDataSlab+0x26f4>
   24bf8:	ldr	ip, [sp, #60]	; 0x3c
   24bfc:	b	24c10 <GetDataSlab+0x26f4>
   24c00:	ldr	r1, [sp, #40]	; 0x28
   24c04:	ldr	r0, [r1, r0, lsl #2]
   24c08:	add	r5, r5, r0
   24c0c:	add	r3, r0, r3
   24c10:	ldr	r1, [sp, #48]	; 0x30
   24c14:	ldr	r0, [sp, #52]	; 0x34
   24c18:	ldr	r2, [sp, #56]	; 0x38
   24c1c:	add	sl, sl, r1
   24c20:	add	ip, ip, r0
   24c24:	mov	r0, #0
   24c28:	cmp	sl, r2
   24c2c:	str	ip, [sp, #60]	; 0x3c
   24c30:	blt	24b0c <GetDataSlab+0x25f0>
   24c34:	b	242ac <GetDataSlab+0x1d90>
   24c38:	mov	r1, r8
   24c3c:	ldr	r8, [sl]
   24c40:	mov	r2, #0
   24c44:	add	r3, sp, #64	; 0x40
   24c48:	sub	r0, r8, #1
   24c4c:	str	r0, [fp, #-72]	; 0xffffffb8
   24c50:	ldr	r0, [r9]
   24c54:	str	r0, [sp, #64]	; 0x40
   24c58:	str	r0, [sp, #40]	; 0x28
   24c5c:	ldr	r0, [fp, #24]
   24c60:	ldr	r1, [r1]
   24c64:	cmp	r0, #2
   24c68:	str	r1, [sp, #44]	; 0x2c
   24c6c:	str	r1, [sp, #48]	; 0x30
   24c70:	blt	24d10 <GetDataSlab+0x27f4>
   24c74:	ldr	r6, [sp, #40]	; 0x28
   24c78:	ldr	r0, [sp, #44]	; 0x2c
   24c7c:	mov	r1, #1
   24c80:	mov	r2, #0
   24c84:	mov	r7, r9
   24c88:	mov	r5, r6
   24c8c:	str	r0, [sp, #48]	; 0x30
   24c90:	ldr	r0, [sl, r1, lsl #2]
   24c94:	str	r6, [r3, r1, lsl #2]
   24c98:	mov	r3, #0
   24c9c:	sub	r0, r0, #1
   24ca0:	str	r0, [lr, r1, lsl #2]
   24ca4:	ldr	lr, [r9, r1, lsl #2]
   24ca8:	mov	r4, lr
   24cac:	mul	r6, r4, r6
   24cb0:	ldr	r4, [r7, -r3, lsl #2]
   24cb4:	add	r3, r3, #1
   24cb8:	cmp	r1, r3
   24cbc:	mul	r0, r0, r4
   24cc0:	bne	24cac <GetDataSlab+0x2790>
   24cc4:	add	r3, sp, #64	; 0x40
   24cc8:	sub	r4, fp, #72	; 0x48
   24ccc:	add	r7, r7, #4
   24cd0:	str	r6, [r3, r1, lsl #2]
   24cd4:	str	r0, [r4, r1, lsl #2]
   24cd8:	ldr	r0, [ip, r1, lsl #2]
   24cdc:	mla	r2, r0, r5, r2
   24ce0:	ldr	r0, [fp, #20]
   24ce4:	ldr	r5, [sp, #48]	; 0x30
   24ce8:	ldr	r0, [r0, r1, lsl #2]
   24cec:	add	r1, r1, #1
   24cf0:	mul	r5, r0, r5
   24cf4:	ldr	r0, [fp, #24]
   24cf8:	str	r5, [sp, #48]	; 0x30
   24cfc:	mov	r5, r6
   24d00:	mov	r6, lr
   24d04:	mov	lr, r4
   24d08:	cmp	r1, r0
   24d0c:	bne	24c90 <GetDataSlab+0x2774>
   24d10:	ldr	r0, [sp, #52]	; 0x34
   24d14:	cmp	r8, #1
   24d18:	add	r9, r0, r2, lsl #1
   24d1c:	bne	315bc <GetDataSlab+0xf0a0>
   24d20:	ldr	r0, [sp, #48]	; 0x30
   24d24:	ldr	r1, [sp, #44]	; 0x2c
   24d28:	cmp	r0, #1
   24d2c:	blt	242a8 <GetDataSlab+0x1d8c>
   24d30:	ldr	r0, [fp, #20]
   24d34:	mov	r8, #0
   24d38:	add	sl, r0, #4
   24d3c:	add	r0, sp, #104	; 0x68
   24d40:	orr	r6, r0, #4
   24d44:	orr	r0, lr, #4
   24d48:	mov	lr, #0
   24d4c:	str	r0, [sp, #32]
   24d50:	lsl	r0, r1, #3
   24d54:	str	r0, [sp, #52]	; 0x34
   24d58:	ldr	r0, [ip], #4
   24d5c:	str	ip, [sp, #56]	; 0x38
   24d60:	str	r0, [sp, #36]	; 0x24
   24d64:	ldr	r5, [sp, #56]	; 0x38
   24d68:	cmp	r1, #1
   24d6c:	blt	24d9c <GetDataSlab+0x2880>
   24d70:	ldr	r0, [sp, #36]	; 0x24
   24d74:	ldr	r3, [sp, #60]	; 0x3c
   24d78:	mov	ip, r1
   24d7c:	add	r0, r9, r0, lsl #1
   24d80:	ldrsh	r4, [r0], #2
   24d84:	subs	ip, ip, #1
   24d88:	vmov	s0, r4
   24d8c:	vcvt.f64.s32	d16, s0
   24d90:	vstr	d16, [r3]
   24d94:	add	r3, r3, #8
   24d98:	bne	24d80 <GetDataSlab+0x2864>
   24d9c:	ldr	r0, [sp, #40]	; 0x28
   24da0:	add	ip, sp, #64	; 0x40
   24da4:	add	r9, r9, r0, lsl #1
   24da8:	add	r2, r2, r0
   24dac:	ldr	r0, [fp, #24]
   24db0:	cmp	r0, #2
   24db4:	blt	24e58 <GetDataSlab+0x293c>
   24db8:	mov	r3, #0
   24dbc:	mov	r0, r3
   24dc0:	ldr	r3, [r6, r3, lsl #2]
   24dc4:	add	r3, r3, #1
   24dc8:	str	r3, [r6, r0, lsl #2]
   24dcc:	ldr	r4, [sl, r0, lsl #2]
   24dd0:	sdiv	r1, r3, r4
   24dd4:	mls	r1, r1, r4, r3
   24dd8:	cmp	r1, #0
   24ddc:	bne	24e48 <GetDataSlab+0x292c>
   24de0:	add	r1, ip, r0, lsl #2
   24de4:	str	r8, [r6, r0, lsl #2]
   24de8:	ldr	r3, [r1, #4]
   24dec:	sdiv	r1, r2, r3
   24df0:	mls	r4, r1, r3, r2
   24df4:	cmp	r4, #0
   24df8:	beq	24e14 <GetDataSlab+0x28f8>
   24dfc:	ldr	r1, [ip, r0, lsl #2]
   24e00:	ldr	r7, [r5, r0, lsl #2]
   24e04:	sub	r3, r3, r4
   24e08:	mla	r1, r7, r1, r3
   24e0c:	add	r2, r1, r2
   24e10:	b	24e2c <GetDataSlab+0x2910>
   24e14:	ldr	r3, [r5, r0, lsl #2]
   24e18:	cmp	r3, #0
   24e1c:	beq	24e30 <GetDataSlab+0x2914>
   24e20:	ldr	r1, [ip, r0, lsl #2]
   24e24:	mla	r2, r1, r3, r2
   24e28:	mul	r1, r1, r3
   24e2c:	add	r9, r9, r1, lsl #1
   24e30:	ldr	r1, [fp, #24]
   24e34:	add	r3, r0, #1
   24e38:	add	r0, r0, #2
   24e3c:	cmp	r0, r1
   24e40:	blt	24dbc <GetDataSlab+0x28a0>
   24e44:	b	24e58 <GetDataSlab+0x293c>
   24e48:	ldr	r1, [sp, #32]
   24e4c:	ldr	r0, [r1, r0, lsl #2]
   24e50:	add	r9, r9, r0, lsl #1
   24e54:	add	r2, r0, r2
   24e58:	ldr	r0, [sp, #60]	; 0x3c
   24e5c:	ldr	r1, [sp, #52]	; 0x34
   24e60:	ldr	r3, [sp, #48]	; 0x30
   24e64:	add	r0, r0, r1
   24e68:	ldr	r1, [sp, #44]	; 0x2c
   24e6c:	str	r0, [sp, #60]	; 0x3c
   24e70:	mov	r0, #0
   24e74:	add	lr, lr, r1
   24e78:	cmp	lr, r3
   24e7c:	blt	24d68 <GetDataSlab+0x284c>
   24e80:	b	242ac <GetDataSlab+0x1d90>
   24e84:	mov	r1, r8
   24e88:	ldr	r8, [sl]
   24e8c:	mov	r2, #0
   24e90:	add	r3, sp, #64	; 0x40
   24e94:	sub	r0, r8, #1
   24e98:	str	r0, [fp, #-72]	; 0xffffffb8
   24e9c:	ldr	r0, [r9]
   24ea0:	str	r0, [sp, #64]	; 0x40
   24ea4:	str	r0, [sp, #40]	; 0x28
   24ea8:	ldr	r0, [fp, #24]
   24eac:	ldr	r1, [r1]
   24eb0:	cmp	r0, #2
   24eb4:	str	r1, [sp, #44]	; 0x2c
   24eb8:	str	r1, [sp, #48]	; 0x30
   24ebc:	blt	24f5c <GetDataSlab+0x2a40>
   24ec0:	ldr	r6, [sp, #40]	; 0x28
   24ec4:	ldr	r0, [sp, #44]	; 0x2c
   24ec8:	mov	r1, #1
   24ecc:	mov	r2, #0
   24ed0:	mov	r7, r9
   24ed4:	mov	r5, r6
   24ed8:	str	r0, [sp, #48]	; 0x30
   24edc:	ldr	r0, [sl, r1, lsl #2]
   24ee0:	str	r6, [r3, r1, lsl #2]
   24ee4:	mov	r3, #0
   24ee8:	sub	r0, r0, #1
   24eec:	str	r0, [lr, r1, lsl #2]
   24ef0:	ldr	lr, [r9, r1, lsl #2]
   24ef4:	mov	r4, lr
   24ef8:	mul	r6, r4, r6
   24efc:	ldr	r4, [r7, -r3, lsl #2]
   24f00:	add	r3, r3, #1
   24f04:	cmp	r1, r3
   24f08:	mul	r0, r0, r4
   24f0c:	bne	24ef8 <GetDataSlab+0x29dc>
   24f10:	add	r3, sp, #64	; 0x40
   24f14:	sub	r4, fp, #72	; 0x48
   24f18:	add	r7, r7, #4
   24f1c:	str	r6, [r3, r1, lsl #2]
   24f20:	str	r0, [r4, r1, lsl #2]
   24f24:	ldr	r0, [ip, r1, lsl #2]
   24f28:	mla	r2, r0, r5, r2
   24f2c:	ldr	r0, [fp, #20]
   24f30:	ldr	r5, [sp, #48]	; 0x30
   24f34:	ldr	r0, [r0, r1, lsl #2]
   24f38:	add	r1, r1, #1
   24f3c:	mul	r5, r0, r5
   24f40:	ldr	r0, [fp, #24]
   24f44:	str	r5, [sp, #48]	; 0x30
   24f48:	mov	r5, r6
   24f4c:	mov	r6, lr
   24f50:	mov	lr, r4
   24f54:	cmp	r1, r0
   24f58:	bne	24edc <GetDataSlab+0x29c0>
   24f5c:	ldr	r0, [sp, #52]	; 0x34
   24f60:	cmp	r8, #1
   24f64:	add	r9, r0, r2, lsl #1
   24f68:	bne	31758 <GetDataSlab+0xf23c>
   24f6c:	ldr	r0, [sp, #48]	; 0x30
   24f70:	ldr	r1, [sp, #44]	; 0x2c
   24f74:	cmp	r0, #1
   24f78:	blt	242a8 <GetDataSlab+0x1d8c>
   24f7c:	ldr	r0, [fp, #20]
   24f80:	mov	r8, #0
   24f84:	add	sl, r0, #4
   24f88:	add	r0, sp, #104	; 0x68
   24f8c:	orr	r6, r0, #4
   24f90:	orr	r0, lr, #4
   24f94:	mov	lr, #0
   24f98:	str	r0, [sp, #32]
   24f9c:	lsl	r0, r1, #3
   24fa0:	str	r0, [sp, #52]	; 0x34
   24fa4:	ldr	r0, [ip], #4
   24fa8:	str	ip, [sp, #56]	; 0x38
   24fac:	str	r0, [sp, #36]	; 0x24
   24fb0:	ldr	r5, [sp, #56]	; 0x38
   24fb4:	cmp	r1, #1
   24fb8:	blt	24fe8 <GetDataSlab+0x2acc>
   24fbc:	ldr	r0, [sp, #36]	; 0x24
   24fc0:	ldr	r3, [sp, #60]	; 0x3c
   24fc4:	mov	ip, r1
   24fc8:	add	r0, r9, r0, lsl #1
   24fcc:	ldrh	r4, [r0], #2
   24fd0:	subs	ip, ip, #1
   24fd4:	vmov	s0, r4
   24fd8:	vcvt.f64.u32	d16, s0
   24fdc:	vstr	d16, [r3]
   24fe0:	add	r3, r3, #8
   24fe4:	bne	24fcc <GetDataSlab+0x2ab0>
   24fe8:	ldr	r0, [sp, #40]	; 0x28
   24fec:	add	ip, sp, #64	; 0x40
   24ff0:	add	r9, r9, r0, lsl #1
   24ff4:	add	r2, r2, r0
   24ff8:	ldr	r0, [fp, #24]
   24ffc:	cmp	r0, #2
   25000:	blt	250a4 <GetDataSlab+0x2b88>
   25004:	mov	r3, #0
   25008:	mov	r0, r3
   2500c:	ldr	r3, [r6, r3, lsl #2]
   25010:	add	r3, r3, #1
   25014:	str	r3, [r6, r0, lsl #2]
   25018:	ldr	r4, [sl, r0, lsl #2]
   2501c:	sdiv	r1, r3, r4
   25020:	mls	r1, r1, r4, r3
   25024:	cmp	r1, #0
   25028:	bne	25094 <GetDataSlab+0x2b78>
   2502c:	add	r1, ip, r0, lsl #2
   25030:	str	r8, [r6, r0, lsl #2]
   25034:	ldr	r3, [r1, #4]
   25038:	sdiv	r1, r2, r3
   2503c:	mls	r4, r1, r3, r2
   25040:	cmp	r4, #0
   25044:	beq	25060 <GetDataSlab+0x2b44>
   25048:	ldr	r1, [ip, r0, lsl #2]
   2504c:	ldr	r7, [r5, r0, lsl #2]
   25050:	sub	r3, r3, r4
   25054:	mla	r1, r7, r1, r3
   25058:	add	r2, r1, r2
   2505c:	b	25078 <GetDataSlab+0x2b5c>
   25060:	ldr	r3, [r5, r0, lsl #2]
   25064:	cmp	r3, #0
   25068:	beq	2507c <GetDataSlab+0x2b60>
   2506c:	ldr	r1, [ip, r0, lsl #2]
   25070:	mla	r2, r1, r3, r2
   25074:	mul	r1, r1, r3
   25078:	add	r9, r9, r1, lsl #1
   2507c:	ldr	r1, [fp, #24]
   25080:	add	r3, r0, #1
   25084:	add	r0, r0, #2
   25088:	cmp	r0, r1
   2508c:	blt	25008 <GetDataSlab+0x2aec>
   25090:	b	250a4 <GetDataSlab+0x2b88>
   25094:	ldr	r1, [sp, #32]
   25098:	ldr	r0, [r1, r0, lsl #2]
   2509c:	add	r9, r9, r0, lsl #1
   250a0:	add	r2, r0, r2
   250a4:	ldr	r0, [sp, #60]	; 0x3c
   250a8:	ldr	r1, [sp, #52]	; 0x34
   250ac:	ldr	r3, [sp, #48]	; 0x30
   250b0:	add	r0, r0, r1
   250b4:	ldr	r1, [sp, #44]	; 0x2c
   250b8:	str	r0, [sp, #60]	; 0x3c
   250bc:	mov	r0, #0
   250c0:	add	lr, lr, r1
   250c4:	cmp	lr, r3
   250c8:	blt	24fb4 <GetDataSlab+0x2a98>
   250cc:	b	242ac <GetDataSlab+0x1d90>
   250d0:	mov	r1, r8
   250d4:	ldr	r8, [sl]
   250d8:	mov	r3, #0
   250dc:	add	r2, sp, #64	; 0x40
   250e0:	sub	r0, r8, #1
   250e4:	str	r0, [fp, #-72]	; 0xffffffb8
   250e8:	ldr	r0, [r9]
   250ec:	str	r0, [sp, #64]	; 0x40
   250f0:	str	r0, [sp, #44]	; 0x2c
   250f4:	ldr	r0, [fp, #24]
   250f8:	ldr	r1, [r1]
   250fc:	cmp	r0, #2
   25100:	str	r1, [sp, #48]	; 0x30
   25104:	str	r1, [sp, #56]	; 0x38
   25108:	blt	251a4 <GetDataSlab+0x2c88>
   2510c:	ldr	r6, [sp, #44]	; 0x2c
   25110:	ldr	r0, [sp, #48]	; 0x30
   25114:	mov	r1, #1
   25118:	mov	r3, #0
   2511c:	mov	r7, r9
   25120:	mov	r5, r6
   25124:	str	r0, [sp, #56]	; 0x38
   25128:	ldr	r0, [sl, r1, lsl #2]
   2512c:	str	r6, [r2, r1, lsl #2]
   25130:	mov	r2, #0
   25134:	sub	r0, r0, #1
   25138:	str	r0, [lr, r1, lsl #2]
   2513c:	ldr	sl, [r9, r1, lsl #2]
   25140:	mov	r4, sl
   25144:	mul	r6, r4, r6
   25148:	ldr	r4, [r7, -r2, lsl #2]
   2514c:	add	r2, r2, #1
   25150:	cmp	r1, r2
   25154:	mul	r0, r0, r4
   25158:	bne	25144 <GetDataSlab+0x2c28>
   2515c:	add	r2, sp, #64	; 0x40
   25160:	str	r0, [lr, r1, lsl #2]
   25164:	ldr	r4, [sp, #56]	; 0x38
   25168:	add	r7, r7, #4
   2516c:	str	r6, [r2, r1, lsl #2]
   25170:	ldr	r0, [ip, r1, lsl #2]
   25174:	mla	r3, r0, r5, r3
   25178:	ldr	r0, [fp, #20]
   2517c:	mov	r5, r6
   25180:	mov	r6, sl
   25184:	ldr	sl, [fp, #16]
   25188:	ldr	r0, [r0, r1, lsl #2]
   2518c:	add	r1, r1, #1
   25190:	mul	r4, r0, r4
   25194:	ldr	r0, [fp, #24]
   25198:	str	r4, [sp, #56]	; 0x38
   2519c:	cmp	r1, r0
   251a0:	bne	25128 <GetDataSlab+0x2c0c>
   251a4:	ldr	r0, [sp, #52]	; 0x34
   251a8:	cmp	r8, #1
   251ac:	add	lr, r0, r3, lsl #2
   251b0:	bne	318f4 <GetDataSlab+0xf3d8>
   251b4:	ldr	r0, [sp, #56]	; 0x38
   251b8:	cmp	r0, #1
   251bc:	blt	242a8 <GetDataSlab+0x1d8c>
   251c0:	ldr	r0, [fp, #20]
   251c4:	add	r9, ip, #4
   251c8:	ldr	ip, [sp, #48]	; 0x30
   251cc:	mov	r8, #0
   251d0:	add	sl, r0, #4
   251d4:	add	r0, sp, #104	; 0x68
   251d8:	orr	r6, r0, #4
   251dc:	sub	r0, fp, #72	; 0x48
   251e0:	orr	r0, r0, #4
   251e4:	str	r0, [sp, #40]	; 0x28
   251e8:	lsl	r0, ip, #3
   251ec:	str	r0, [sp, #52]	; 0x34
   251f0:	ldr	r1, [sp, #60]	; 0x3c
   251f4:	cmp	ip, #1
   251f8:	blt	2522c <GetDataSlab+0x2d10>
   251fc:	ldr	r0, [fp, #12]
   25200:	ldr	ip, [sp, #48]	; 0x30
   25204:	mov	r2, r1
   25208:	ldr	r0, [r0]
   2520c:	add	r0, lr, r0, lsl #2
   25210:	ldr	r4, [r0], #4
   25214:	subs	ip, ip, #1
   25218:	vmov	s0, r4
   2521c:	vcvt.f64.s32	d16, s0
   25220:	vstr	d16, [r2]
   25224:	add	r2, r2, #8
   25228:	bne	25210 <GetDataSlab+0x2cf4>
   2522c:	ldr	r0, [sp, #44]	; 0x2c
   25230:	add	r5, sp, #64	; 0x40
   25234:	str	r1, [sp, #60]	; 0x3c
   25238:	add	lr, lr, r0, lsl #2
   2523c:	add	r3, r3, r0
   25240:	ldr	r0, [fp, #24]
   25244:	cmp	r0, #2
   25248:	blt	252e4 <GetDataSlab+0x2dc8>
   2524c:	ldr	ip, [sp, #48]	; 0x30
   25250:	mov	r2, #0
   25254:	mov	r0, r2
   25258:	ldr	r2, [r6, r2, lsl #2]
   2525c:	add	r2, r2, #1
   25260:	str	r2, [r6, r0, lsl #2]
   25264:	ldr	r4, [sl, r0, lsl #2]
   25268:	sdiv	r1, r2, r4
   2526c:	mls	r1, r1, r4, r2
   25270:	cmp	r1, #0
   25274:	bne	252ec <GetDataSlab+0x2dd0>
   25278:	mov	r1, #0
   2527c:	str	r1, [r6, r0, lsl #2]
   25280:	add	r1, r5, r0, lsl #2
   25284:	ldr	r2, [r1, #4]
   25288:	sdiv	r1, r3, r2
   2528c:	mls	r4, r1, r2, r3
   25290:	cmp	r4, #0
   25294:	beq	252b0 <GetDataSlab+0x2d94>
   25298:	ldr	r1, [r5, r0, lsl #2]
   2529c:	ldr	r7, [r9, r0, lsl #2]
   252a0:	sub	r2, r2, r4
   252a4:	mla	r1, r7, r1, r2
   252a8:	add	r3, r1, r3
   252ac:	b	252c8 <GetDataSlab+0x2dac>
   252b0:	ldr	r2, [r9, r0, lsl #2]
   252b4:	cmp	r2, #0
   252b8:	beq	252cc <GetDataSlab+0x2db0>
   252bc:	ldr	r1, [r5, r0, lsl #2]
   252c0:	mla	r3, r1, r2, r3
   252c4:	mul	r1, r1, r2
   252c8:	add	lr, lr, r1, lsl #2
   252cc:	ldr	r1, [fp, #24]
   252d0:	add	r2, r0, #1
   252d4:	add	r0, r0, #2
   252d8:	cmp	r0, r1
   252dc:	blt	25254 <GetDataSlab+0x2d38>
   252e0:	b	252fc <GetDataSlab+0x2de0>
   252e4:	ldr	ip, [sp, #48]	; 0x30
   252e8:	b	252fc <GetDataSlab+0x2de0>
   252ec:	ldr	r1, [sp, #40]	; 0x28
   252f0:	ldr	r0, [r1, r0, lsl #2]
   252f4:	add	lr, lr, r0, lsl #2
   252f8:	add	r3, r0, r3
   252fc:	ldr	r0, [sp, #52]	; 0x34
   25300:	ldr	r1, [sp, #60]	; 0x3c
   25304:	add	r8, r8, ip
   25308:	add	r1, r1, r0
   2530c:	mov	r0, #0
   25310:	str	r1, [sp, #60]	; 0x3c
   25314:	ldr	r1, [sp, #56]	; 0x38
   25318:	cmp	r8, r1
   2531c:	blt	251f0 <GetDataSlab+0x2cd4>
   25320:	b	242ac <GetDataSlab+0x1d90>
   25324:	mov	r1, r8
   25328:	ldr	r8, [sl]
   2532c:	mov	r3, #0
   25330:	add	r2, sp, #64	; 0x40
   25334:	sub	r0, r8, #1
   25338:	str	r0, [fp, #-72]	; 0xffffffb8
   2533c:	ldr	r0, [r9]
   25340:	str	r0, [sp, #64]	; 0x40
   25344:	str	r0, [sp, #44]	; 0x2c
   25348:	ldr	r0, [fp, #24]
   2534c:	ldr	r1, [r1]
   25350:	cmp	r0, #2
   25354:	str	r1, [sp, #48]	; 0x30
   25358:	str	r1, [sp, #56]	; 0x38
   2535c:	blt	253f8 <GetDataSlab+0x2edc>
   25360:	ldr	r6, [sp, #44]	; 0x2c
   25364:	ldr	r0, [sp, #48]	; 0x30
   25368:	mov	r1, #1
   2536c:	mov	r3, #0
   25370:	mov	r7, r9
   25374:	mov	r5, r6
   25378:	str	r0, [sp, #56]	; 0x38
   2537c:	ldr	r0, [sl, r1, lsl #2]
   25380:	str	r6, [r2, r1, lsl #2]
   25384:	mov	r2, #0
   25388:	sub	r0, r0, #1
   2538c:	str	r0, [lr, r1, lsl #2]
   25390:	ldr	sl, [r9, r1, lsl #2]
   25394:	mov	r4, sl
   25398:	mul	r6, r4, r6
   2539c:	ldr	r4, [r7, -r2, lsl #2]
   253a0:	add	r2, r2, #1
   253a4:	cmp	r1, r2
   253a8:	mul	r0, r0, r4
   253ac:	bne	25398 <GetDataSlab+0x2e7c>
   253b0:	add	r2, sp, #64	; 0x40
   253b4:	str	r0, [lr, r1, lsl #2]
   253b8:	ldr	r4, [sp, #56]	; 0x38
   253bc:	add	r7, r7, #4
   253c0:	str	r6, [r2, r1, lsl #2]
   253c4:	ldr	r0, [ip, r1, lsl #2]
   253c8:	mla	r3, r0, r5, r3
   253cc:	ldr	r0, [fp, #20]
   253d0:	mov	r5, r6
   253d4:	mov	r6, sl
   253d8:	ldr	sl, [fp, #16]
   253dc:	ldr	r0, [r0, r1, lsl #2]
   253e0:	add	r1, r1, #1
   253e4:	mul	r4, r0, r4
   253e8:	ldr	r0, [fp, #24]
   253ec:	str	r4, [sp, #56]	; 0x38
   253f0:	cmp	r1, r0
   253f4:	bne	2537c <GetDataSlab+0x2e60>
   253f8:	ldr	r0, [sp, #52]	; 0x34
   253fc:	cmp	r8, #1
   25400:	add	lr, r0, r3, lsl #2
   25404:	bne	31a9c <GetDataSlab+0xf580>
   25408:	ldr	r0, [sp, #56]	; 0x38
   2540c:	cmp	r0, #1
   25410:	blt	242a8 <GetDataSlab+0x1d8c>
   25414:	ldr	r0, [fp, #20]
   25418:	add	r9, ip, #4
   2541c:	ldr	ip, [sp, #48]	; 0x30
   25420:	mov	r8, #0
   25424:	add	sl, r0, #4
   25428:	add	r0, sp, #104	; 0x68
   2542c:	orr	r6, r0, #4
   25430:	sub	r0, fp, #72	; 0x48
   25434:	orr	r0, r0, #4
   25438:	str	r0, [sp, #40]	; 0x28
   2543c:	lsl	r0, ip, #3
   25440:	str	r0, [sp, #52]	; 0x34
   25444:	ldr	r1, [sp, #60]	; 0x3c
   25448:	cmp	ip, #1
   2544c:	blt	25480 <GetDataSlab+0x2f64>
   25450:	ldr	r0, [fp, #12]
   25454:	ldr	ip, [sp, #48]	; 0x30
   25458:	mov	r2, r1
   2545c:	ldr	r0, [r0]
   25460:	add	r0, lr, r0, lsl #2
   25464:	ldr	r4, [r0], #4
   25468:	subs	ip, ip, #1
   2546c:	vmov	s0, r4
   25470:	vcvt.f64.u32	d16, s0
   25474:	vstr	d16, [r2]
   25478:	add	r2, r2, #8
   2547c:	bne	25464 <GetDataSlab+0x2f48>
   25480:	ldr	r0, [sp, #44]	; 0x2c
   25484:	add	r5, sp, #64	; 0x40
   25488:	str	r1, [sp, #60]	; 0x3c
   2548c:	add	lr, lr, r0, lsl #2
   25490:	add	r3, r3, r0
   25494:	ldr	r0, [fp, #24]
   25498:	cmp	r0, #2
   2549c:	blt	25538 <GetDataSlab+0x301c>
   254a0:	ldr	ip, [sp, #48]	; 0x30
   254a4:	mov	r2, #0
   254a8:	mov	r0, r2
   254ac:	ldr	r2, [r6, r2, lsl #2]
   254b0:	add	r2, r2, #1
   254b4:	str	r2, [r6, r0, lsl #2]
   254b8:	ldr	r4, [sl, r0, lsl #2]
   254bc:	sdiv	r1, r2, r4
   254c0:	mls	r1, r1, r4, r2
   254c4:	cmp	r1, #0
   254c8:	bne	25540 <GetDataSlab+0x3024>
   254cc:	mov	r1, #0
   254d0:	str	r1, [r6, r0, lsl #2]
   254d4:	add	r1, r5, r0, lsl #2
   254d8:	ldr	r2, [r1, #4]
   254dc:	sdiv	r1, r3, r2
   254e0:	mls	r4, r1, r2, r3
   254e4:	cmp	r4, #0
   254e8:	beq	25504 <GetDataSlab+0x2fe8>
   254ec:	ldr	r1, [r5, r0, lsl #2]
   254f0:	ldr	r7, [r9, r0, lsl #2]
   254f4:	sub	r2, r2, r4
   254f8:	mla	r1, r7, r1, r2
   254fc:	add	r3, r1, r3
   25500:	b	2551c <GetDataSlab+0x3000>
   25504:	ldr	r2, [r9, r0, lsl #2]
   25508:	cmp	r2, #0
   2550c:	beq	25520 <GetDataSlab+0x3004>
   25510:	ldr	r1, [r5, r0, lsl #2]
   25514:	mla	r3, r1, r2, r3
   25518:	mul	r1, r1, r2
   2551c:	add	lr, lr, r1, lsl #2
   25520:	ldr	r1, [fp, #24]
   25524:	add	r2, r0, #1
   25528:	add	r0, r0, #2
   2552c:	cmp	r0, r1
   25530:	blt	254a8 <GetDataSlab+0x2f8c>
   25534:	b	25550 <GetDataSlab+0x3034>
   25538:	ldr	ip, [sp, #48]	; 0x30
   2553c:	b	25550 <GetDataSlab+0x3034>
   25540:	ldr	r1, [sp, #40]	; 0x28
   25544:	ldr	r0, [r1, r0, lsl #2]
   25548:	add	lr, lr, r0, lsl #2
   2554c:	add	r3, r0, r3
   25550:	ldr	r0, [sp, #52]	; 0x34
   25554:	ldr	r1, [sp, #60]	; 0x3c
   25558:	add	r8, r8, ip
   2555c:	add	r1, r1, r0
   25560:	mov	r0, #0
   25564:	str	r1, [sp, #60]	; 0x3c
   25568:	ldr	r1, [sp, #56]	; 0x38
   2556c:	cmp	r8, r1
   25570:	blt	25444 <GetDataSlab+0x2f28>
   25574:	b	242ac <GetDataSlab+0x1d90>
   25578:	mov	r1, r8
   2557c:	ldr	r8, [sl]
   25580:	mov	r2, #0
   25584:	add	r3, sp, #64	; 0x40
   25588:	sub	r0, r8, #1
   2558c:	str	r0, [fp, #-72]	; 0xffffffb8
   25590:	ldr	r0, [r9]
   25594:	str	r0, [sp, #64]	; 0x40
   25598:	str	r0, [sp, #40]	; 0x28
   2559c:	ldr	r0, [fp, #24]
   255a0:	ldr	r1, [r1]
   255a4:	cmp	r0, #2
   255a8:	str	r1, [sp, #44]	; 0x2c
   255ac:	str	r1, [sp, #48]	; 0x30
   255b0:	blt	25650 <GetDataSlab+0x3134>
   255b4:	ldr	r6, [sp, #40]	; 0x28
   255b8:	ldr	r0, [sp, #44]	; 0x2c
   255bc:	mov	r1, #1
   255c0:	mov	r2, #0
   255c4:	mov	r7, r9
   255c8:	mov	r5, r6
   255cc:	str	r0, [sp, #48]	; 0x30
   255d0:	ldr	r0, [sl, r1, lsl #2]
   255d4:	str	r6, [r3, r1, lsl #2]
   255d8:	mov	r3, #0
   255dc:	sub	r0, r0, #1
   255e0:	str	r0, [lr, r1, lsl #2]
   255e4:	ldr	lr, [r9, r1, lsl #2]
   255e8:	mov	r4, lr
   255ec:	mul	r6, r4, r6
   255f0:	ldr	r4, [r7, -r3, lsl #2]
   255f4:	add	r3, r3, #1
   255f8:	cmp	r1, r3
   255fc:	mul	r0, r0, r4
   25600:	bne	255ec <GetDataSlab+0x30d0>
   25604:	add	r3, sp, #64	; 0x40
   25608:	sub	r4, fp, #72	; 0x48
   2560c:	add	r7, r7, #4
   25610:	str	r6, [r3, r1, lsl #2]
   25614:	str	r0, [r4, r1, lsl #2]
   25618:	ldr	r0, [ip, r1, lsl #2]
   2561c:	mla	r2, r0, r5, r2
   25620:	ldr	r0, [fp, #20]
   25624:	ldr	r5, [sp, #48]	; 0x30
   25628:	ldr	r0, [r0, r1, lsl #2]
   2562c:	add	r1, r1, #1
   25630:	mul	r5, r0, r5
   25634:	ldr	r0, [fp, #24]
   25638:	str	r5, [sp, #48]	; 0x30
   2563c:	mov	r5, r6
   25640:	mov	r6, lr
   25644:	mov	lr, r4
   25648:	cmp	r1, r0
   2564c:	bne	255d0 <GetDataSlab+0x30b4>
   25650:	ldr	r0, [sp, #52]	; 0x34
   25654:	cmp	r8, #1
   25658:	add	r9, r0, r2, lsl #2
   2565c:	bne	31c44 <GetDataSlab+0xf728>
   25660:	ldr	r0, [sp, #48]	; 0x30
   25664:	ldr	r1, [sp, #44]	; 0x2c
   25668:	cmp	r0, #1
   2566c:	blt	242a8 <GetDataSlab+0x1d8c>
   25670:	ldr	r0, [fp, #20]
   25674:	mov	r8, #0
   25678:	add	sl, r0, #4
   2567c:	add	r0, sp, #104	; 0x68
   25680:	orr	r6, r0, #4
   25684:	orr	r0, lr, #4
   25688:	mov	lr, #0
   2568c:	str	r0, [sp, #32]
   25690:	lsl	r0, r1, #3
   25694:	str	r0, [sp, #52]	; 0x34
   25698:	ldr	r0, [ip], #4
   2569c:	str	ip, [sp, #56]	; 0x38
   256a0:	str	r0, [sp, #36]	; 0x24
   256a4:	ldr	r5, [sp, #56]	; 0x38
   256a8:	cmp	r1, #1
   256ac:	blt	256dc <GetDataSlab+0x31c0>
   256b0:	ldr	r0, [sp, #36]	; 0x24
   256b4:	ldr	ip, [sp, #44]	; 0x2c
   256b8:	ldr	r3, [sp, #60]	; 0x3c
   256bc:	add	r0, r9, r0, lsl #2
   256c0:	vldr	s0, [r0]
   256c4:	subs	ip, ip, #1
   256c8:	add	r0, r0, #4
   256cc:	vcvt.f64.f32	d16, s0
   256d0:	vstr	d16, [r3]
   256d4:	add	r3, r3, #8
   256d8:	bne	256c0 <GetDataSlab+0x31a4>
   256dc:	ldr	r0, [sp, #40]	; 0x28
   256e0:	add	ip, sp, #64	; 0x40
   256e4:	add	r9, r9, r0, lsl #2
   256e8:	add	r2, r2, r0
   256ec:	ldr	r0, [fp, #24]
   256f0:	cmp	r0, #2
   256f4:	blt	25798 <GetDataSlab+0x327c>
   256f8:	mov	r3, #0
   256fc:	mov	r0, r3
   25700:	ldr	r3, [r6, r3, lsl #2]
   25704:	add	r3, r3, #1
   25708:	str	r3, [r6, r0, lsl #2]
   2570c:	ldr	r4, [sl, r0, lsl #2]
   25710:	sdiv	r1, r3, r4
   25714:	mls	r1, r1, r4, r3
   25718:	cmp	r1, #0
   2571c:	bne	25788 <GetDataSlab+0x326c>
   25720:	add	r1, ip, r0, lsl #2
   25724:	str	r8, [r6, r0, lsl #2]
   25728:	ldr	r3, [r1, #4]
   2572c:	sdiv	r1, r2, r3
   25730:	mls	r4, r1, r3, r2
   25734:	cmp	r4, #0
   25738:	beq	25754 <GetDataSlab+0x3238>
   2573c:	ldr	r1, [ip, r0, lsl #2]
   25740:	ldr	r7, [r5, r0, lsl #2]
   25744:	sub	r3, r3, r4
   25748:	mla	r1, r7, r1, r3
   2574c:	add	r2, r1, r2
   25750:	b	2576c <GetDataSlab+0x3250>
   25754:	ldr	r3, [r5, r0, lsl #2]
   25758:	cmp	r3, #0
   2575c:	beq	25770 <GetDataSlab+0x3254>
   25760:	ldr	r1, [ip, r0, lsl #2]
   25764:	mla	r2, r1, r3, r2
   25768:	mul	r1, r1, r3
   2576c:	add	r9, r9, r1, lsl #2
   25770:	ldr	r1, [fp, #24]
   25774:	add	r3, r0, #1
   25778:	add	r0, r0, #2
   2577c:	cmp	r0, r1
   25780:	blt	256fc <GetDataSlab+0x31e0>
   25784:	b	25798 <GetDataSlab+0x327c>
   25788:	ldr	r1, [sp, #32]
   2578c:	ldr	r0, [r1, r0, lsl #2]
   25790:	add	r9, r9, r0, lsl #2
   25794:	add	r2, r0, r2
   25798:	ldr	r0, [sp, #60]	; 0x3c
   2579c:	ldr	r1, [sp, #52]	; 0x34
   257a0:	ldr	r3, [sp, #48]	; 0x30
   257a4:	add	r0, r0, r1
   257a8:	ldr	r1, [sp, #44]	; 0x2c
   257ac:	str	r0, [sp, #60]	; 0x3c
   257b0:	mov	r0, #0
   257b4:	add	lr, lr, r1
   257b8:	cmp	lr, r3
   257bc:	blt	256a8 <GetDataSlab+0x318c>
   257c0:	b	242ac <GetDataSlab+0x1d90>
   257c4:	ldr	r0, [sl]
   257c8:	mov	r2, #0
   257cc:	add	r3, sp, #64	; 0x40
   257d0:	str	r0, [sp, #28]
   257d4:	sub	r0, r0, #1
   257d8:	str	r0, [fp, #-72]	; 0xffffffb8
   257dc:	ldr	r0, [r9]
   257e0:	str	r0, [sp, #64]	; 0x40
   257e4:	str	r0, [sp, #40]	; 0x28
   257e8:	ldr	r0, [fp, #24]
   257ec:	ldr	r1, [r8]
   257f0:	cmp	r0, #2
   257f4:	str	r1, [sp, #44]	; 0x2c
   257f8:	str	r1, [sp, #48]	; 0x30
   257fc:	blt	25894 <GetDataSlab+0x3378>
   25800:	ldr	r6, [sp, #40]	; 0x28
   25804:	ldr	r0, [sp, #44]	; 0x2c
   25808:	mov	r1, #1
   2580c:	mov	r2, #0
   25810:	mov	r7, r9
   25814:	mov	r5, r6
   25818:	str	r0, [sp, #48]	; 0x30
   2581c:	ldr	r0, [sl, r1, lsl #2]
   25820:	str	r6, [r3, r1, lsl #2]
   25824:	mov	r3, #0
   25828:	sub	r0, r0, #1
   2582c:	str	r0, [lr, r1, lsl #2]
   25830:	ldr	r8, [r9, r1, lsl #2]
   25834:	mov	r4, r8
   25838:	mul	r6, r4, r6
   2583c:	ldr	r4, [r7, -r3, lsl #2]
   25840:	add	r3, r3, #1
   25844:	cmp	r1, r3
   25848:	mul	r0, r0, r4
   2584c:	bne	25838 <GetDataSlab+0x331c>
   25850:	add	r3, sp, #64	; 0x40
   25854:	str	r0, [lr, r1, lsl #2]
   25858:	ldr	r4, [sp, #48]	; 0x30
   2585c:	add	r7, r7, #4
   25860:	str	r6, [r3, r1, lsl #2]
   25864:	ldr	r0, [ip, r1, lsl #2]
   25868:	mla	r2, r0, r5, r2
   2586c:	ldr	r0, [fp, #20]
   25870:	mov	r5, r6
   25874:	mov	r6, r8
   25878:	ldr	r0, [r0, r1, lsl #2]
   2587c:	add	r1, r1, #1
   25880:	mul	r4, r0, r4
   25884:	ldr	r0, [fp, #24]
   25888:	str	r4, [sp, #48]	; 0x30
   2588c:	cmp	r1, r0
   25890:	bne	2581c <GetDataSlab+0x3300>
   25894:	ldr	r0, [sp, #52]	; 0x34
   25898:	ldr	r6, [sp, #28]
   2589c:	add	r9, r0, r2, lsl #3
   258a0:	cmp	r6, #1
   258a4:	bne	31ddc <GetDataSlab+0xf8c0>
   258a8:	ldr	r0, [sp, #48]	; 0x30
   258ac:	cmp	r0, #1
   258b0:	ldr	r0, [fp, #20]
   258b4:	blt	242a8 <GetDataSlab+0x1d8c>
   258b8:	ldr	r1, [sp, #44]	; 0x2c
   258bc:	add	sl, r0, #4
   258c0:	add	r0, sp, #104	; 0x68
   258c4:	mov	r8, #0
   258c8:	orr	r6, r0, #4
   258cc:	orr	r0, lr, #4
   258d0:	mov	lr, #0
   258d4:	str	r0, [sp, #32]
   258d8:	lsl	r0, r1, #3
   258dc:	str	r0, [sp, #52]	; 0x34
   258e0:	ldr	r0, [ip], #4
   258e4:	str	ip, [sp, #56]	; 0x38
   258e8:	str	r0, [sp, #36]	; 0x24
   258ec:	ldr	r5, [sp, #56]	; 0x38
   258f0:	cmp	r1, #1
   258f4:	blt	25920 <GetDataSlab+0x3404>
   258f8:	ldr	r0, [sp, #36]	; 0x24
   258fc:	ldr	r3, [sp, #60]	; 0x3c
   25900:	mov	ip, r1
   25904:	add	r0, r9, r0, lsl #3
   25908:	vldr	d16, [r0]
   2590c:	subs	ip, ip, #1
   25910:	add	r0, r0, #8
   25914:	vstr	d16, [r3]
   25918:	add	r3, r3, #8
   2591c:	bne	25908 <GetDataSlab+0x33ec>
   25920:	ldr	r0, [sp, #40]	; 0x28
   25924:	add	ip, sp, #64	; 0x40
   25928:	add	r9, r9, r0, lsl #3
   2592c:	add	r2, r2, r0
   25930:	ldr	r0, [fp, #24]
   25934:	cmp	r0, #2
   25938:	blt	259dc <GetDataSlab+0x34c0>
   2593c:	mov	r3, #0
   25940:	mov	r0, r3
   25944:	ldr	r3, [r6, r3, lsl #2]
   25948:	add	r3, r3, #1
   2594c:	str	r3, [r6, r0, lsl #2]
   25950:	ldr	r4, [sl, r0, lsl #2]
   25954:	sdiv	r1, r3, r4
   25958:	mls	r1, r1, r4, r3
   2595c:	cmp	r1, #0
   25960:	bne	259cc <GetDataSlab+0x34b0>
   25964:	add	r1, ip, r0, lsl #2
   25968:	str	r8, [r6, r0, lsl #2]
   2596c:	ldr	r3, [r1, #4]
   25970:	sdiv	r1, r2, r3
   25974:	mls	r4, r1, r3, r2
   25978:	cmp	r4, #0
   2597c:	beq	25998 <GetDataSlab+0x347c>
   25980:	ldr	r1, [ip, r0, lsl #2]
   25984:	ldr	r7, [r5, r0, lsl #2]
   25988:	sub	r3, r3, r4
   2598c:	mla	r1, r7, r1, r3
   25990:	add	r2, r1, r2
   25994:	b	259b0 <GetDataSlab+0x3494>
   25998:	ldr	r3, [r5, r0, lsl #2]
   2599c:	cmp	r3, #0
   259a0:	beq	259b4 <GetDataSlab+0x3498>
   259a4:	ldr	r1, [ip, r0, lsl #2]
   259a8:	mla	r2, r1, r3, r2
   259ac:	mul	r1, r1, r3
   259b0:	add	r9, r9, r1, lsl #3
   259b4:	ldr	r1, [fp, #24]
   259b8:	add	r3, r0, #1
   259bc:	add	r0, r0, #2
   259c0:	cmp	r0, r1
   259c4:	blt	25940 <GetDataSlab+0x3424>
   259c8:	b	259dc <GetDataSlab+0x34c0>
   259cc:	ldr	r1, [sp, #32]
   259d0:	ldr	r0, [r1, r0, lsl #2]
   259d4:	add	r9, r9, r0, lsl #3
   259d8:	add	r2, r0, r2
   259dc:	ldr	r0, [sp, #60]	; 0x3c
   259e0:	ldr	r1, [sp, #52]	; 0x34
   259e4:	ldr	r3, [sp, #48]	; 0x30
   259e8:	add	r0, r0, r1
   259ec:	ldr	r1, [sp, #44]	; 0x2c
   259f0:	str	r0, [sp, #60]	; 0x3c
   259f4:	mov	r0, #0
   259f8:	add	lr, lr, r1
   259fc:	cmp	lr, r3
   25a00:	blt	258f0 <GetDataSlab+0x33d4>
   25a04:	b	242ac <GetDataSlab+0x1d90>
   25a08:	ldr	r0, [sl]
   25a0c:	mov	r4, #0
   25a10:	add	r6, sp, #64	; 0x40
   25a14:	str	r3, [sp, #48]	; 0x30
   25a18:	str	r0, [sp, #36]	; 0x24
   25a1c:	sub	r0, r0, #1
   25a20:	str	r0, [fp, #-72]	; 0xffffffb8
   25a24:	ldr	r0, [r9]
   25a28:	str	r0, [sp, #64]	; 0x40
   25a2c:	str	r0, [sp, #28]
   25a30:	ldr	r0, [fp, #24]
   25a34:	ldr	r1, [r8]
   25a38:	cmp	r0, #2
   25a3c:	str	r1, [sp, #32]
   25a40:	str	r1, [sp, #40]	; 0x28
   25a44:	blt	25af0 <GetDataSlab+0x35d4>
   25a48:	ldr	r3, [sp, #28]
   25a4c:	ldr	r0, [sp, #32]
   25a50:	mov	r1, #1
   25a54:	mov	r4, #0
   25a58:	mov	r2, r9
   25a5c:	mov	r7, r3
   25a60:	str	r0, [sp, #40]	; 0x28
   25a64:	ldr	r0, [sl, r1, lsl #2]
   25a68:	str	r3, [r6, r1, lsl #2]
   25a6c:	mov	ip, sl
   25a70:	sub	r5, r0, #1
   25a74:	mov	r0, #0
   25a78:	str	r5, [lr, r1, lsl #2]
   25a7c:	ldr	lr, [r9, r1, lsl #2]
   25a80:	mov	r6, lr
   25a84:	mul	r3, r6, r3
   25a88:	ldr	r6, [r2, -r0, lsl #2]
   25a8c:	add	r0, r0, #1
   25a90:	cmp	r1, r0
   25a94:	mul	r5, r5, r6
   25a98:	bne	25a84 <GetDataSlab+0x3568>
   25a9c:	sub	r0, fp, #72	; 0x48
   25aa0:	add	r6, sp, #64	; 0x40
   25aa4:	add	r2, r2, #4
   25aa8:	str	r5, [r0, r1, lsl #2]
   25aac:	mov	sl, r0
   25ab0:	ldr	r0, [fp, #12]
   25ab4:	str	r3, [r6, r1, lsl #2]
   25ab8:	ldr	r5, [sp, #40]	; 0x28
   25abc:	ldr	r0, [r0, r1, lsl #2]
   25ac0:	mla	r4, r0, r7, r4
   25ac4:	ldr	r0, [r8, r1, lsl #2]
   25ac8:	add	r1, r1, #1
   25acc:	mov	r7, r3
   25ad0:	mov	r3, lr
   25ad4:	mov	lr, sl
   25ad8:	mov	sl, ip
   25adc:	mul	r5, r0, r5
   25ae0:	ldr	r0, [fp, #24]
   25ae4:	str	r5, [sp, #40]	; 0x28
   25ae8:	cmp	r1, r0
   25aec:	bne	25a64 <GetDataSlab+0x3548>
   25af0:	ldr	r0, [sp, #52]	; 0x34
   25af4:	ldr	r7, [sp, #36]	; 0x24
   25af8:	add	sl, r0, r4, lsl #3
   25afc:	cmp	r7, #1
   25b00:	bne	31f70 <GetDataSlab+0xfa54>
   25b04:	ldr	r0, [sp, #40]	; 0x28
   25b08:	ldr	r3, [sp, #48]	; 0x30
   25b0c:	cmp	r0, #1
   25b10:	ldr	r0, [sp, #60]	; 0x3c
   25b14:	blt	32134 <GetDataSlab+0xfc18>
   25b18:	add	r1, sp, #104	; 0x68
   25b1c:	add	r8, r8, #4
   25b20:	str	r0, [sp, #44]	; 0x2c
   25b24:	orr	r7, r1, #4
   25b28:	orr	r1, lr, #4
   25b2c:	ldr	lr, [sp, #32]
   25b30:	str	r1, [sp, #12]
   25b34:	lsl	r1, lr, #3
   25b38:	str	r1, [sp, #24]
   25b3c:	ldr	r1, [fp, #12]
   25b40:	mov	r9, r1
   25b44:	ldr	r1, [r9], #4
   25b48:	str	r1, [sp, #20]
   25b4c:	mov	r1, #0
   25b50:	str	r9, [sp, #16]
   25b54:	mov	r6, r8
   25b58:	mov	r5, sl
   25b5c:	cmp	lr, #1
   25b60:	str	r1, [sp, #36]	; 0x24
   25b64:	blt	25b94 <GetDataSlab+0x3678>
   25b68:	ldr	r0, [sp, #20]
   25b6c:	ldr	r8, [sp, #32]
   25b70:	ldr	sl, [sp, #44]	; 0x2c
   25b74:	add	r9, r5, r0, lsl #3
   25b78:	ldrd	r0, [r9]
   25b7c:	bl	49578 <__aeabi_l2d>
   25b80:	strd	r0, [sl]
   25b84:	subs	r8, r8, #1
   25b88:	add	sl, sl, #8
   25b8c:	add	r9, r9, #8
   25b90:	bne	25b78 <GetDataSlab+0x365c>
   25b94:	ldr	r0, [sp, #28]
   25b98:	mov	sl, r5
   25b9c:	add	sl, r5, r0, lsl #3
   25ba0:	add	r4, r4, r0
   25ba4:	ldr	r0, [fp, #24]
   25ba8:	cmp	r0, #2
   25bac:	blt	25c5c <GetDataSlab+0x3740>
   25bb0:	ldr	r3, [sp, #48]	; 0x30
   25bb4:	ldr	lr, [sp, #32]
   25bb8:	ldr	r9, [sp, #16]
   25bbc:	add	r5, sp, #64	; 0x40
   25bc0:	mov	r1, #0
   25bc4:	mov	r8, r6
   25bc8:	mov	ip, r5
   25bcc:	mov	r0, r1
   25bd0:	ldr	r1, [r7, r1, lsl #2]
   25bd4:	add	r1, r1, #1
   25bd8:	str	r1, [r7, r0, lsl #2]
   25bdc:	ldr	r2, [r8, r0, lsl #2]
   25be0:	sdiv	r6, r1, r2
   25be4:	mls	r1, r6, r2, r1
   25be8:	cmp	r1, #0
   25bec:	bne	25c6c <GetDataSlab+0x3750>
   25bf0:	mov	r1, #0
   25bf4:	str	r1, [r7, r0, lsl #2]
   25bf8:	add	r1, ip, r0, lsl #2
   25bfc:	ldr	r1, [r1, #4]
   25c00:	sdiv	r2, r4, r1
   25c04:	mls	r2, r2, r1, r4
   25c08:	cmp	r2, #0
   25c0c:	beq	25c28 <GetDataSlab+0x370c>
   25c10:	ldr	r5, [ip, r0, lsl #2]
   25c14:	ldr	r6, [r9, r0, lsl #2]
   25c18:	sub	r1, r1, r2
   25c1c:	mla	r1, r6, r5, r1
   25c20:	add	r4, r1, r4
   25c24:	b	25c40 <GetDataSlab+0x3724>
   25c28:	ldr	r1, [r9, r0, lsl #2]
   25c2c:	cmp	r1, #0
   25c30:	beq	25c44 <GetDataSlab+0x3728>
   25c34:	ldr	r2, [ip, r0, lsl #2]
   25c38:	mla	r4, r2, r1, r4
   25c3c:	mul	r1, r2, r1
   25c40:	add	sl, sl, r1, lsl #3
   25c44:	ldr	r2, [fp, #24]
   25c48:	add	r1, r0, #1
   25c4c:	add	r0, r0, #2
   25c50:	cmp	r0, r2
   25c54:	blt	25bcc <GetDataSlab+0x36b0>
   25c58:	b	25c7c <GetDataSlab+0x3760>
   25c5c:	ldr	r3, [sp, #48]	; 0x30
   25c60:	ldr	lr, [sp, #32]
   25c64:	mov	r8, r6
   25c68:	b	25c7c <GetDataSlab+0x3760>
   25c6c:	ldr	r1, [sp, #12]
   25c70:	ldr	r0, [r1, r0, lsl #2]
   25c74:	add	sl, sl, r0, lsl #3
   25c78:	add	r4, r0, r4
   25c7c:	ldr	r0, [sp, #24]
   25c80:	ldr	r1, [sp, #44]	; 0x2c
   25c84:	add	r1, r1, r0
   25c88:	ldr	r0, [sp, #40]	; 0x28
   25c8c:	str	r1, [sp, #44]	; 0x2c
   25c90:	ldr	r1, [sp, #36]	; 0x24
   25c94:	add	r1, r1, lr
   25c98:	cmp	r1, r0
   25c9c:	blt	25b54 <GetDataSlab+0x3638>
   25ca0:	b	32134 <GetDataSlab+0xfc18>
   25ca4:	mov	r0, sl
   25ca8:	mov	sl, lr
   25cac:	mov	r3, #0
   25cb0:	ldr	lr, [r0]
   25cb4:	sub	r0, lr, #1
   25cb8:	str	r0, [fp, #-72]	; 0xffffffb8
   25cbc:	ldr	r0, [r9]
   25cc0:	add	r9, sp, #64	; 0x40
   25cc4:	str	r0, [sp, #64]	; 0x40
   25cc8:	str	r0, [sp, #44]	; 0x2c
   25ccc:	ldr	r0, [fp, #24]
   25cd0:	ldr	r1, [r8]
   25cd4:	cmp	r0, #2
   25cd8:	str	r1, [sp, #48]	; 0x30
   25cdc:	str	r1, [sp, #56]	; 0x38
   25ce0:	blt	25d84 <GetDataSlab+0x3868>
   25ce4:	ldr	r2, [sp, #44]	; 0x2c
   25ce8:	ldr	r4, [sp, #48]	; 0x30
   25cec:	ldr	r1, [fp, #8]
   25cf0:	mov	r0, #1
   25cf4:	mov	r3, #0
   25cf8:	mov	r7, r2
   25cfc:	str	r4, [sp, #56]	; 0x38
   25d00:	ldr	r4, [fp, #16]
   25d04:	ldr	r6, [r4, r0, lsl #2]
   25d08:	ldr	r4, [fp, #8]
   25d0c:	str	r2, [r9, r0, lsl #2]
   25d10:	sub	r5, r6, #1
   25d14:	str	r5, [sl, r0, lsl #2]
   25d18:	ldr	r8, [r4, r0, lsl #2]
   25d1c:	mov	r4, #0
   25d20:	mov	r6, r8
   25d24:	mul	r2, r6, r2
   25d28:	ldr	r6, [r1, -r4, lsl #2]
   25d2c:	add	r4, r4, #1
   25d30:	cmp	r0, r4
   25d34:	mul	r5, r5, r6
   25d38:	bne	25d24 <GetDataSlab+0x3808>
   25d3c:	add	r9, sp, #64	; 0x40
   25d40:	sub	sl, fp, #72	; 0x48
   25d44:	ldr	r4, [fp, #20]
   25d48:	add	r1, r1, #4
   25d4c:	str	r2, [r9, r0, lsl #2]
   25d50:	str	r5, [sl, r0, lsl #2]
   25d54:	ldr	r6, [ip, r0, lsl #2]
   25d58:	mla	r3, r6, r7, r3
   25d5c:	ldr	r7, [r4, r0, lsl #2]
   25d60:	ldr	r4, [sp, #56]	; 0x38
   25d64:	add	r0, r0, #1
   25d68:	mul	r4, r7, r4
   25d6c:	mov	r7, r2
   25d70:	mov	r2, r8
   25d74:	str	r4, [sp, #56]	; 0x38
   25d78:	ldr	r4, [fp, #24]
   25d7c:	cmp	r0, r4
   25d80:	bne	25d00 <GetDataSlab+0x37e4>
   25d84:	ldr	r0, [sp, #52]	; 0x34
   25d88:	cmp	lr, #1
   25d8c:	add	sl, r0, r3
   25d90:	bne	323bc <GetDataSlab+0xfea0>
   25d94:	ldr	r0, [sp, #56]	; 0x38
   25d98:	ldr	r1, [sp, #48]	; 0x30
   25d9c:	cmp	r0, #1
   25da0:	blt	242a8 <GetDataSlab+0x1d8c>
   25da4:	ldr	r0, [fp, #20]
   25da8:	add	r8, ip, #4
   25dac:	mov	r5, #0
   25db0:	add	r9, r0, #4
   25db4:	add	r0, sp, #104	; 0x68
   25db8:	orr	r6, r0, #4
   25dbc:	sub	r0, fp, #72	; 0x48
   25dc0:	orr	r0, r0, #4
   25dc4:	str	r0, [sp, #36]	; 0x24
   25dc8:	lsl	r0, r1, #2
   25dcc:	str	r0, [sp, #40]	; 0x28
   25dd0:	mov	r0, #0
   25dd4:	str	r0, [sp, #52]	; 0x34
   25dd8:	cmp	r1, #1
   25ddc:	blt	25e10 <GetDataSlab+0x38f4>
   25de0:	ldr	r0, [fp, #12]
   25de4:	ldr	lr, [sp, #60]	; 0x3c
   25de8:	mov	ip, r1
   25dec:	ldr	r0, [r0]
   25df0:	add	r0, sl, r0
   25df4:	ldrb	r1, [r0], #1
   25df8:	subs	ip, ip, #1
   25dfc:	vmov	s0, r1
   25e00:	vcvt.f32.u32	s0, s0
   25e04:	vstr	s0, [lr]
   25e08:	add	lr, lr, #4
   25e0c:	bne	25df4 <GetDataSlab+0x38d8>
   25e10:	ldr	r0, [sp, #44]	; 0x2c
   25e14:	add	sl, sl, r0
   25e18:	add	r3, r3, r0
   25e1c:	ldr	r0, [fp, #24]
   25e20:	cmp	r0, #2
   25e24:	blt	25ec0 <GetDataSlab+0x39a4>
   25e28:	ldr	ip, [sp, #60]	; 0x3c
   25e2c:	mov	r4, #0
   25e30:	ldr	r1, [r6, r4, lsl #2]
   25e34:	mov	r0, r4
   25e38:	add	r1, r1, #1
   25e3c:	str	r1, [r6, r4, lsl #2]
   25e40:	ldr	r4, [r9, r4, lsl #2]
   25e44:	sdiv	r2, r1, r4
   25e48:	mls	r1, r2, r4, r1
   25e4c:	cmp	r1, #0
   25e50:	bne	25ec8 <GetDataSlab+0x39ac>
   25e54:	add	r2, sp, #64	; 0x40
   25e58:	str	r5, [r6, r0, lsl #2]
   25e5c:	add	r1, r2, r0, lsl #2
   25e60:	ldr	r4, [r1, #4]
   25e64:	sdiv	r1, r3, r4
   25e68:	mls	r1, r1, r4, r3
   25e6c:	cmp	r1, #0
   25e70:	beq	25e90 <GetDataSlab+0x3974>
   25e74:	ldr	r2, [r2, r0, lsl #2]
   25e78:	ldr	r7, [r8, r0, lsl #2]
   25e7c:	sub	r1, r4, r1
   25e80:	mla	r1, r7, r2, r1
   25e84:	add	r3, r1, r3
   25e88:	add	sl, sl, r1
   25e8c:	b	25ea8 <GetDataSlab+0x398c>
   25e90:	ldr	r1, [r8, r0, lsl #2]
   25e94:	cmp	r1, #0
   25e98:	addne	r2, sp, #64	; 0x40
   25e9c:	ldrne	r2, [r2, r0, lsl #2]
   25ea0:	mlane	r3, r2, r1, r3
   25ea4:	mlane	sl, r2, r1, sl
   25ea8:	ldr	r1, [fp, #24]
   25eac:	add	r4, r0, #1
   25eb0:	add	r0, r0, #2
   25eb4:	cmp	r0, r1
   25eb8:	blt	25e30 <GetDataSlab+0x3914>
   25ebc:	b	25ed8 <GetDataSlab+0x39bc>
   25ec0:	ldr	ip, [sp, #60]	; 0x3c
   25ec4:	b	25ed8 <GetDataSlab+0x39bc>
   25ec8:	ldr	r1, [sp, #36]	; 0x24
   25ecc:	ldr	r0, [r1, r0, lsl #2]
   25ed0:	add	sl, sl, r0
   25ed4:	add	r3, r0, r3
   25ed8:	ldr	r1, [sp, #48]	; 0x30
   25edc:	ldr	r7, [sp, #52]	; 0x34
   25ee0:	ldr	r0, [sp, #40]	; 0x28
   25ee4:	ldr	r2, [sp, #56]	; 0x38
   25ee8:	add	r7, r7, r1
   25eec:	add	ip, ip, r0
   25ef0:	mov	r0, #0
   25ef4:	cmp	r7, r2
   25ef8:	str	ip, [sp, #60]	; 0x3c
   25efc:	str	r7, [sp, #52]	; 0x34
   25f00:	blt	25dd8 <GetDataSlab+0x38bc>
   25f04:	b	242ac <GetDataSlab+0x1d90>
   25f08:	mov	r1, r8
   25f0c:	ldr	r8, [sl]
   25f10:	mov	r2, #0
   25f14:	add	r3, sp, #64	; 0x40
   25f18:	sub	r0, r8, #1
   25f1c:	str	r0, [fp, #-72]	; 0xffffffb8
   25f20:	ldr	r0, [r9]
   25f24:	str	r0, [sp, #64]	; 0x40
   25f28:	str	r0, [sp, #40]	; 0x28
   25f2c:	ldr	r0, [fp, #24]
   25f30:	ldr	r1, [r1]
   25f34:	cmp	r0, #2
   25f38:	str	r1, [sp, #44]	; 0x2c
   25f3c:	str	r1, [sp, #48]	; 0x30
   25f40:	blt	25fe0 <GetDataSlab+0x3ac4>
   25f44:	ldr	r6, [sp, #40]	; 0x28
   25f48:	ldr	r0, [sp, #44]	; 0x2c
   25f4c:	mov	r1, #1
   25f50:	mov	r2, #0
   25f54:	mov	r7, r9
   25f58:	mov	r5, r6
   25f5c:	str	r0, [sp, #48]	; 0x30
   25f60:	ldr	r0, [sl, r1, lsl #2]
   25f64:	str	r6, [r3, r1, lsl #2]
   25f68:	mov	r3, #0
   25f6c:	sub	r0, r0, #1
   25f70:	str	r0, [lr, r1, lsl #2]
   25f74:	ldr	lr, [r9, r1, lsl #2]
   25f78:	mov	r4, lr
   25f7c:	mul	r6, r4, r6
   25f80:	ldr	r4, [r7, -r3, lsl #2]
   25f84:	add	r3, r3, #1
   25f88:	cmp	r1, r3
   25f8c:	mul	r0, r0, r4
   25f90:	bne	25f7c <GetDataSlab+0x3a60>
   25f94:	add	r3, sp, #64	; 0x40
   25f98:	sub	r4, fp, #72	; 0x48
   25f9c:	add	r7, r7, #4
   25fa0:	str	r6, [r3, r1, lsl #2]
   25fa4:	str	r0, [r4, r1, lsl #2]
   25fa8:	ldr	r0, [ip, r1, lsl #2]
   25fac:	mla	r2, r0, r5, r2
   25fb0:	ldr	r0, [fp, #20]
   25fb4:	ldr	r5, [sp, #48]	; 0x30
   25fb8:	ldr	r0, [r0, r1, lsl #2]
   25fbc:	add	r1, r1, #1
   25fc0:	mul	r5, r0, r5
   25fc4:	ldr	r0, [fp, #24]
   25fc8:	str	r5, [sp, #48]	; 0x30
   25fcc:	mov	r5, r6
   25fd0:	mov	r6, lr
   25fd4:	mov	lr, r4
   25fd8:	cmp	r1, r0
   25fdc:	bne	25f60 <GetDataSlab+0x3a44>
   25fe0:	ldr	r0, [sp, #52]	; 0x34
   25fe4:	cmp	r8, #1
   25fe8:	add	r9, r0, r2, lsl #1
   25fec:	bne	32560 <GetDataSlab+0x10044>
   25ff0:	ldr	r0, [sp, #48]	; 0x30
   25ff4:	ldr	r1, [sp, #44]	; 0x2c
   25ff8:	cmp	r0, #1
   25ffc:	blt	242a8 <GetDataSlab+0x1d8c>
   26000:	ldr	r0, [fp, #20]
   26004:	mov	r8, #0
   26008:	add	sl, r0, #4
   2600c:	add	r0, sp, #104	; 0x68
   26010:	orr	r6, r0, #4
   26014:	orr	r0, lr, #4
   26018:	mov	lr, #0
   2601c:	str	r0, [sp, #32]
   26020:	lsl	r0, r1, #2
   26024:	str	r0, [sp, #52]	; 0x34
   26028:	ldr	r0, [ip], #4
   2602c:	str	ip, [sp, #56]	; 0x38
   26030:	str	r0, [sp, #36]	; 0x24
   26034:	ldr	r5, [sp, #56]	; 0x38
   26038:	cmp	r1, #1
   2603c:	blt	2606c <GetDataSlab+0x3b50>
   26040:	ldr	r0, [sp, #36]	; 0x24
   26044:	ldr	r3, [sp, #60]	; 0x3c
   26048:	mov	ip, r1
   2604c:	add	r0, r9, r0, lsl #1
   26050:	ldrsh	r4, [r0], #2
   26054:	subs	ip, ip, #1
   26058:	vmov	s0, r4
   2605c:	vcvt.f32.s32	s0, s0
   26060:	vstr	s0, [r3]
   26064:	add	r3, r3, #4
   26068:	bne	26050 <GetDataSlab+0x3b34>
   2606c:	ldr	r0, [sp, #40]	; 0x28
   26070:	add	ip, sp, #64	; 0x40
   26074:	add	r9, r9, r0, lsl #1
   26078:	add	r2, r2, r0
   2607c:	ldr	r0, [fp, #24]
   26080:	cmp	r0, #2
   26084:	blt	26128 <GetDataSlab+0x3c0c>
   26088:	mov	r3, #0
   2608c:	mov	r0, r3
   26090:	ldr	r3, [r6, r3, lsl #2]
   26094:	add	r3, r3, #1
   26098:	str	r3, [r6, r0, lsl #2]
   2609c:	ldr	r4, [sl, r0, lsl #2]
   260a0:	sdiv	r1, r3, r4
   260a4:	mls	r1, r1, r4, r3
   260a8:	cmp	r1, #0
   260ac:	bne	26118 <GetDataSlab+0x3bfc>
   260b0:	add	r1, ip, r0, lsl #2
   260b4:	str	r8, [r6, r0, lsl #2]
   260b8:	ldr	r3, [r1, #4]
   260bc:	sdiv	r1, r2, r3
   260c0:	mls	r4, r1, r3, r2
   260c4:	cmp	r4, #0
   260c8:	beq	260e4 <GetDataSlab+0x3bc8>
   260cc:	ldr	r1, [ip, r0, lsl #2]
   260d0:	ldr	r7, [r5, r0, lsl #2]
   260d4:	sub	r3, r3, r4
   260d8:	mla	r1, r7, r1, r3
   260dc:	add	r2, r1, r2
   260e0:	b	260fc <GetDataSlab+0x3be0>
   260e4:	ldr	r3, [r5, r0, lsl #2]
   260e8:	cmp	r3, #0
   260ec:	beq	26100 <GetDataSlab+0x3be4>
   260f0:	ldr	r1, [ip, r0, lsl #2]
   260f4:	mla	r2, r1, r3, r2
   260f8:	mul	r1, r1, r3
   260fc:	add	r9, r9, r1, lsl #1
   26100:	ldr	r1, [fp, #24]
   26104:	add	r3, r0, #1
   26108:	add	r0, r0, #2
   2610c:	cmp	r0, r1
   26110:	blt	2608c <GetDataSlab+0x3b70>
   26114:	b	26128 <GetDataSlab+0x3c0c>
   26118:	ldr	r1, [sp, #32]
   2611c:	ldr	r0, [r1, r0, lsl #2]
   26120:	add	r9, r9, r0, lsl #1
   26124:	add	r2, r0, r2
   26128:	ldr	r0, [sp, #60]	; 0x3c
   2612c:	ldr	r1, [sp, #52]	; 0x34
   26130:	ldr	r3, [sp, #48]	; 0x30
   26134:	add	r0, r0, r1
   26138:	ldr	r1, [sp, #44]	; 0x2c
   2613c:	str	r0, [sp, #60]	; 0x3c
   26140:	mov	r0, #0
   26144:	add	lr, lr, r1
   26148:	cmp	lr, r3
   2614c:	blt	26038 <GetDataSlab+0x3b1c>
   26150:	b	242ac <GetDataSlab+0x1d90>
   26154:	mov	r1, r8
   26158:	ldr	r8, [sl]
   2615c:	mov	r2, #0
   26160:	add	r3, sp, #64	; 0x40
   26164:	sub	r0, r8, #1
   26168:	str	r0, [fp, #-72]	; 0xffffffb8
   2616c:	ldr	r0, [r9]
   26170:	str	r0, [sp, #64]	; 0x40
   26174:	str	r0, [sp, #40]	; 0x28
   26178:	ldr	r0, [fp, #24]
   2617c:	ldr	r1, [r1]
   26180:	cmp	r0, #2
   26184:	str	r1, [sp, #44]	; 0x2c
   26188:	str	r1, [sp, #48]	; 0x30
   2618c:	blt	2622c <GetDataSlab+0x3d10>
   26190:	ldr	r6, [sp, #40]	; 0x28
   26194:	ldr	r0, [sp, #44]	; 0x2c
   26198:	mov	r1, #1
   2619c:	mov	r2, #0
   261a0:	mov	r7, r9
   261a4:	mov	r5, r6
   261a8:	str	r0, [sp, #48]	; 0x30
   261ac:	ldr	r0, [sl, r1, lsl #2]
   261b0:	str	r6, [r3, r1, lsl #2]
   261b4:	mov	r3, #0
   261b8:	sub	r0, r0, #1
   261bc:	str	r0, [lr, r1, lsl #2]
   261c0:	ldr	lr, [r9, r1, lsl #2]
   261c4:	mov	r4, lr
   261c8:	mul	r6, r4, r6
   261cc:	ldr	r4, [r7, -r3, lsl #2]
   261d0:	add	r3, r3, #1
   261d4:	cmp	r1, r3
   261d8:	mul	r0, r0, r4
   261dc:	bne	261c8 <GetDataSlab+0x3cac>
   261e0:	add	r3, sp, #64	; 0x40
   261e4:	sub	r4, fp, #72	; 0x48
   261e8:	add	r7, r7, #4
   261ec:	str	r6, [r3, r1, lsl #2]
   261f0:	str	r0, [r4, r1, lsl #2]
   261f4:	ldr	r0, [ip, r1, lsl #2]
   261f8:	mla	r2, r0, r5, r2
   261fc:	ldr	r0, [fp, #20]
   26200:	ldr	r5, [sp, #48]	; 0x30
   26204:	ldr	r0, [r0, r1, lsl #2]
   26208:	add	r1, r1, #1
   2620c:	mul	r5, r0, r5
   26210:	ldr	r0, [fp, #24]
   26214:	str	r5, [sp, #48]	; 0x30
   26218:	mov	r5, r6
   2621c:	mov	r6, lr
   26220:	mov	lr, r4
   26224:	cmp	r1, r0
   26228:	bne	261ac <GetDataSlab+0x3c90>
   2622c:	ldr	r0, [sp, #52]	; 0x34
   26230:	cmp	r8, #1
   26234:	add	r9, r0, r2, lsl #1
   26238:	bne	326fc <GetDataSlab+0x101e0>
   2623c:	ldr	r0, [sp, #48]	; 0x30
   26240:	ldr	r1, [sp, #44]	; 0x2c
   26244:	cmp	r0, #1
   26248:	blt	242a8 <GetDataSlab+0x1d8c>
   2624c:	ldr	r0, [fp, #20]
   26250:	mov	r8, #0
   26254:	add	sl, r0, #4
   26258:	add	r0, sp, #104	; 0x68
   2625c:	orr	r6, r0, #4
   26260:	orr	r0, lr, #4
   26264:	mov	lr, #0
   26268:	str	r0, [sp, #32]
   2626c:	lsl	r0, r1, #2
   26270:	str	r0, [sp, #52]	; 0x34
   26274:	ldr	r0, [ip], #4
   26278:	str	ip, [sp, #56]	; 0x38
   2627c:	str	r0, [sp, #36]	; 0x24
   26280:	ldr	r5, [sp, #56]	; 0x38
   26284:	cmp	r1, #1
   26288:	blt	262b8 <GetDataSlab+0x3d9c>
   2628c:	ldr	r0, [sp, #36]	; 0x24
   26290:	ldr	r3, [sp, #60]	; 0x3c
   26294:	mov	ip, r1
   26298:	add	r0, r9, r0, lsl #1
   2629c:	ldrh	r4, [r0], #2
   262a0:	subs	ip, ip, #1
   262a4:	vmov	s0, r4
   262a8:	vcvt.f32.u32	s0, s0
   262ac:	vstr	s0, [r3]
   262b0:	add	r3, r3, #4
   262b4:	bne	2629c <GetDataSlab+0x3d80>
   262b8:	ldr	r0, [sp, #40]	; 0x28
   262bc:	add	ip, sp, #64	; 0x40
   262c0:	add	r9, r9, r0, lsl #1
   262c4:	add	r2, r2, r0
   262c8:	ldr	r0, [fp, #24]
   262cc:	cmp	r0, #2
   262d0:	blt	26374 <GetDataSlab+0x3e58>
   262d4:	mov	r3, #0
   262d8:	mov	r0, r3
   262dc:	ldr	r3, [r6, r3, lsl #2]
   262e0:	add	r3, r3, #1
   262e4:	str	r3, [r6, r0, lsl #2]
   262e8:	ldr	r4, [sl, r0, lsl #2]
   262ec:	sdiv	r1, r3, r4
   262f0:	mls	r1, r1, r4, r3
   262f4:	cmp	r1, #0
   262f8:	bne	26364 <GetDataSlab+0x3e48>
   262fc:	add	r1, ip, r0, lsl #2
   26300:	str	r8, [r6, r0, lsl #2]
   26304:	ldr	r3, [r1, #4]
   26308:	sdiv	r1, r2, r3
   2630c:	mls	r4, r1, r3, r2
   26310:	cmp	r4, #0
   26314:	beq	26330 <GetDataSlab+0x3e14>
   26318:	ldr	r1, [ip, r0, lsl #2]
   2631c:	ldr	r7, [r5, r0, lsl #2]
   26320:	sub	r3, r3, r4
   26324:	mla	r1, r7, r1, r3
   26328:	add	r2, r1, r2
   2632c:	b	26348 <GetDataSlab+0x3e2c>
   26330:	ldr	r3, [r5, r0, lsl #2]
   26334:	cmp	r3, #0
   26338:	beq	2634c <GetDataSlab+0x3e30>
   2633c:	ldr	r1, [ip, r0, lsl #2]
   26340:	mla	r2, r1, r3, r2
   26344:	mul	r1, r1, r3
   26348:	add	r9, r9, r1, lsl #1
   2634c:	ldr	r1, [fp, #24]
   26350:	add	r3, r0, #1
   26354:	add	r0, r0, #2
   26358:	cmp	r0, r1
   2635c:	blt	262d8 <GetDataSlab+0x3dbc>
   26360:	b	26374 <GetDataSlab+0x3e58>
   26364:	ldr	r1, [sp, #32]
   26368:	ldr	r0, [r1, r0, lsl #2]
   2636c:	add	r9, r9, r0, lsl #1
   26370:	add	r2, r0, r2
   26374:	ldr	r0, [sp, #60]	; 0x3c
   26378:	ldr	r1, [sp, #52]	; 0x34
   2637c:	ldr	r3, [sp, #48]	; 0x30
   26380:	add	r0, r0, r1
   26384:	ldr	r1, [sp, #44]	; 0x2c
   26388:	str	r0, [sp, #60]	; 0x3c
   2638c:	mov	r0, #0
   26390:	add	lr, lr, r1
   26394:	cmp	lr, r3
   26398:	blt	26284 <GetDataSlab+0x3d68>
   2639c:	b	242ac <GetDataSlab+0x1d90>
   263a0:	mov	r1, r8
   263a4:	ldr	r8, [sl]
   263a8:	mov	r3, #0
   263ac:	add	r2, sp, #64	; 0x40
   263b0:	sub	r0, r8, #1
   263b4:	str	r0, [fp, #-72]	; 0xffffffb8
   263b8:	ldr	r0, [r9]
   263bc:	str	r0, [sp, #64]	; 0x40
   263c0:	str	r0, [sp, #44]	; 0x2c
   263c4:	ldr	r0, [fp, #24]
   263c8:	ldr	r1, [r1]
   263cc:	cmp	r0, #2
   263d0:	str	r1, [sp, #48]	; 0x30
   263d4:	str	r1, [sp, #56]	; 0x38
   263d8:	blt	26474 <GetDataSlab+0x3f58>
   263dc:	ldr	r6, [sp, #44]	; 0x2c
   263e0:	ldr	r0, [sp, #48]	; 0x30
   263e4:	mov	r1, #1
   263e8:	mov	r3, #0
   263ec:	mov	r7, r9
   263f0:	mov	r5, r6
   263f4:	str	r0, [sp, #56]	; 0x38
   263f8:	ldr	r0, [sl, r1, lsl #2]
   263fc:	str	r6, [r2, r1, lsl #2]
   26400:	mov	r2, #0
   26404:	sub	r0, r0, #1
   26408:	str	r0, [lr, r1, lsl #2]
   2640c:	ldr	sl, [r9, r1, lsl #2]
   26410:	mov	r4, sl
   26414:	mul	r6, r4, r6
   26418:	ldr	r4, [r7, -r2, lsl #2]
   2641c:	add	r2, r2, #1
   26420:	cmp	r1, r2
   26424:	mul	r0, r0, r4
   26428:	bne	26414 <GetDataSlab+0x3ef8>
   2642c:	add	r2, sp, #64	; 0x40
   26430:	str	r0, [lr, r1, lsl #2]
   26434:	ldr	r4, [sp, #56]	; 0x38
   26438:	add	r7, r7, #4
   2643c:	str	r6, [r2, r1, lsl #2]
   26440:	ldr	r0, [ip, r1, lsl #2]
   26444:	mla	r3, r0, r5, r3
   26448:	ldr	r0, [fp, #20]
   2644c:	mov	r5, r6
   26450:	mov	r6, sl
   26454:	ldr	sl, [fp, #16]
   26458:	ldr	r0, [r0, r1, lsl #2]
   2645c:	add	r1, r1, #1
   26460:	mul	r4, r0, r4
   26464:	ldr	r0, [fp, #24]
   26468:	str	r4, [sp, #56]	; 0x38
   2646c:	cmp	r1, r0
   26470:	bne	263f8 <GetDataSlab+0x3edc>
   26474:	ldr	r0, [sp, #52]	; 0x34
   26478:	cmp	r8, #1
   2647c:	add	lr, r0, r3, lsl #2
   26480:	bne	32898 <GetDataSlab+0x1037c>
   26484:	ldr	r0, [sp, #56]	; 0x38
   26488:	cmp	r0, #1
   2648c:	blt	242a8 <GetDataSlab+0x1d8c>
   26490:	ldr	r0, [fp, #20]
   26494:	add	r9, ip, #4
   26498:	ldr	ip, [sp, #48]	; 0x30
   2649c:	mov	r8, #0
   264a0:	add	sl, r0, #4
   264a4:	add	r0, sp, #104	; 0x68
   264a8:	orr	r6, r0, #4
   264ac:	sub	r0, fp, #72	; 0x48
   264b0:	orr	r0, r0, #4
   264b4:	str	r0, [sp, #40]	; 0x28
   264b8:	lsl	r0, ip, #2
   264bc:	str	r0, [sp, #52]	; 0x34
   264c0:	ldr	r1, [sp, #60]	; 0x3c
   264c4:	cmp	ip, #1
   264c8:	blt	264fc <GetDataSlab+0x3fe0>
   264cc:	ldr	r0, [fp, #12]
   264d0:	ldr	ip, [sp, #48]	; 0x30
   264d4:	mov	r2, r1
   264d8:	ldr	r0, [r0]
   264dc:	add	r0, lr, r0, lsl #2
   264e0:	ldr	r4, [r0], #4
   264e4:	subs	ip, ip, #1
   264e8:	vmov	s0, r4
   264ec:	vcvt.f32.s32	s0, s0
   264f0:	vstr	s0, [r2]
   264f4:	add	r2, r2, #4
   264f8:	bne	264e0 <GetDataSlab+0x3fc4>
   264fc:	ldr	r0, [sp, #44]	; 0x2c
   26500:	add	r5, sp, #64	; 0x40
   26504:	str	r1, [sp, #60]	; 0x3c
   26508:	add	lr, lr, r0, lsl #2
   2650c:	add	r3, r3, r0
   26510:	ldr	r0, [fp, #24]
   26514:	cmp	r0, #2
   26518:	blt	265b4 <GetDataSlab+0x4098>
   2651c:	ldr	ip, [sp, #48]	; 0x30
   26520:	mov	r2, #0
   26524:	mov	r0, r2
   26528:	ldr	r2, [r6, r2, lsl #2]
   2652c:	add	r2, r2, #1
   26530:	str	r2, [r6, r0, lsl #2]
   26534:	ldr	r4, [sl, r0, lsl #2]
   26538:	sdiv	r1, r2, r4
   2653c:	mls	r1, r1, r4, r2
   26540:	cmp	r1, #0
   26544:	bne	265bc <GetDataSlab+0x40a0>
   26548:	mov	r1, #0
   2654c:	str	r1, [r6, r0, lsl #2]
   26550:	add	r1, r5, r0, lsl #2
   26554:	ldr	r2, [r1, #4]
   26558:	sdiv	r1, r3, r2
   2655c:	mls	r4, r1, r2, r3
   26560:	cmp	r4, #0
   26564:	beq	26580 <GetDataSlab+0x4064>
   26568:	ldr	r1, [r5, r0, lsl #2]
   2656c:	ldr	r7, [r9, r0, lsl #2]
   26570:	sub	r2, r2, r4
   26574:	mla	r1, r7, r1, r2
   26578:	add	r3, r1, r3
   2657c:	b	26598 <GetDataSlab+0x407c>
   26580:	ldr	r2, [r9, r0, lsl #2]
   26584:	cmp	r2, #0
   26588:	beq	2659c <GetDataSlab+0x4080>
   2658c:	ldr	r1, [r5, r0, lsl #2]
   26590:	mla	r3, r1, r2, r3
   26594:	mul	r1, r1, r2
   26598:	add	lr, lr, r1, lsl #2
   2659c:	ldr	r1, [fp, #24]
   265a0:	add	r2, r0, #1
   265a4:	add	r0, r0, #2
   265a8:	cmp	r0, r1
   265ac:	blt	26524 <GetDataSlab+0x4008>
   265b0:	b	265cc <GetDataSlab+0x40b0>
   265b4:	ldr	ip, [sp, #48]	; 0x30
   265b8:	b	265cc <GetDataSlab+0x40b0>
   265bc:	ldr	r1, [sp, #40]	; 0x28
   265c0:	ldr	r0, [r1, r0, lsl #2]
   265c4:	add	lr, lr, r0, lsl #2
   265c8:	add	r3, r0, r3
   265cc:	ldr	r0, [sp, #52]	; 0x34
   265d0:	ldr	r1, [sp, #60]	; 0x3c
   265d4:	add	r8, r8, ip
   265d8:	add	r1, r1, r0
   265dc:	mov	r0, #0
   265e0:	str	r1, [sp, #60]	; 0x3c
   265e4:	ldr	r1, [sp, #56]	; 0x38
   265e8:	cmp	r8, r1
   265ec:	blt	264c0 <GetDataSlab+0x3fa4>
   265f0:	b	242ac <GetDataSlab+0x1d90>
   265f4:	mov	r1, r8
   265f8:	ldr	r8, [sl]
   265fc:	mov	r3, #0
   26600:	add	r2, sp, #64	; 0x40
   26604:	sub	r0, r8, #1
   26608:	str	r0, [fp, #-72]	; 0xffffffb8
   2660c:	ldr	r0, [r9]
   26610:	str	r0, [sp, #64]	; 0x40
   26614:	str	r0, [sp, #44]	; 0x2c
   26618:	ldr	r0, [fp, #24]
   2661c:	ldr	r1, [r1]
   26620:	cmp	r0, #2
   26624:	str	r1, [sp, #48]	; 0x30
   26628:	str	r1, [sp, #56]	; 0x38
   2662c:	blt	266c8 <GetDataSlab+0x41ac>
   26630:	ldr	r6, [sp, #44]	; 0x2c
   26634:	ldr	r0, [sp, #48]	; 0x30
   26638:	mov	r1, #1
   2663c:	mov	r3, #0
   26640:	mov	r7, r9
   26644:	mov	r5, r6
   26648:	str	r0, [sp, #56]	; 0x38
   2664c:	ldr	r0, [sl, r1, lsl #2]
   26650:	str	r6, [r2, r1, lsl #2]
   26654:	mov	r2, #0
   26658:	sub	r0, r0, #1
   2665c:	str	r0, [lr, r1, lsl #2]
   26660:	ldr	sl, [r9, r1, lsl #2]
   26664:	mov	r4, sl
   26668:	mul	r6, r4, r6
   2666c:	ldr	r4, [r7, -r2, lsl #2]
   26670:	add	r2, r2, #1
   26674:	cmp	r1, r2
   26678:	mul	r0, r0, r4
   2667c:	bne	26668 <GetDataSlab+0x414c>
   26680:	add	r2, sp, #64	; 0x40
   26684:	str	r0, [lr, r1, lsl #2]
   26688:	ldr	r4, [sp, #56]	; 0x38
   2668c:	add	r7, r7, #4
   26690:	str	r6, [r2, r1, lsl #2]
   26694:	ldr	r0, [ip, r1, lsl #2]
   26698:	mla	r3, r0, r5, r3
   2669c:	ldr	r0, [fp, #20]
   266a0:	mov	r5, r6
   266a4:	mov	r6, sl
   266a8:	ldr	sl, [fp, #16]
   266ac:	ldr	r0, [r0, r1, lsl #2]
   266b0:	add	r1, r1, #1
   266b4:	mul	r4, r0, r4
   266b8:	ldr	r0, [fp, #24]
   266bc:	str	r4, [sp, #56]	; 0x38
   266c0:	cmp	r1, r0
   266c4:	bne	2664c <GetDataSlab+0x4130>
   266c8:	ldr	r0, [sp, #52]	; 0x34
   266cc:	cmp	r8, #1
   266d0:	add	lr, r0, r3, lsl #2
   266d4:	bne	32a40 <GetDataSlab+0x10524>
   266d8:	ldr	r0, [sp, #56]	; 0x38
   266dc:	cmp	r0, #1
   266e0:	blt	242a8 <GetDataSlab+0x1d8c>
   266e4:	ldr	r0, [fp, #20]
   266e8:	add	r9, ip, #4
   266ec:	ldr	ip, [sp, #48]	; 0x30
   266f0:	mov	r8, #0
   266f4:	add	sl, r0, #4
   266f8:	add	r0, sp, #104	; 0x68
   266fc:	orr	r6, r0, #4
   26700:	sub	r0, fp, #72	; 0x48
   26704:	orr	r0, r0, #4
   26708:	str	r0, [sp, #40]	; 0x28
   2670c:	lsl	r0, ip, #2
   26710:	str	r0, [sp, #52]	; 0x34
   26714:	ldr	r1, [sp, #60]	; 0x3c
   26718:	cmp	ip, #1
   2671c:	blt	26750 <GetDataSlab+0x4234>
   26720:	ldr	r0, [fp, #12]
   26724:	ldr	ip, [sp, #48]	; 0x30
   26728:	mov	r2, r1
   2672c:	ldr	r0, [r0]
   26730:	add	r0, lr, r0, lsl #2
   26734:	ldr	r4, [r0], #4
   26738:	subs	ip, ip, #1
   2673c:	vmov	s0, r4
   26740:	vcvt.f32.u32	s0, s0
   26744:	vstr	s0, [r2]
   26748:	add	r2, r2, #4
   2674c:	bne	26734 <GetDataSlab+0x4218>
   26750:	ldr	r0, [sp, #44]	; 0x2c
   26754:	add	r5, sp, #64	; 0x40
   26758:	str	r1, [sp, #60]	; 0x3c
   2675c:	add	lr, lr, r0, lsl #2
   26760:	add	r3, r3, r0
   26764:	ldr	r0, [fp, #24]
   26768:	cmp	r0, #2
   2676c:	blt	26808 <GetDataSlab+0x42ec>
   26770:	ldr	ip, [sp, #48]	; 0x30
   26774:	mov	r2, #0
   26778:	mov	r0, r2
   2677c:	ldr	r2, [r6, r2, lsl #2]
   26780:	add	r2, r2, #1
   26784:	str	r2, [r6, r0, lsl #2]
   26788:	ldr	r4, [sl, r0, lsl #2]
   2678c:	sdiv	r1, r2, r4
   26790:	mls	r1, r1, r4, r2
   26794:	cmp	r1, #0
   26798:	bne	26810 <GetDataSlab+0x42f4>
   2679c:	mov	r1, #0
   267a0:	str	r1, [r6, r0, lsl #2]
   267a4:	add	r1, r5, r0, lsl #2
   267a8:	ldr	r2, [r1, #4]
   267ac:	sdiv	r1, r3, r2
   267b0:	mls	r4, r1, r2, r3
   267b4:	cmp	r4, #0
   267b8:	beq	267d4 <GetDataSlab+0x42b8>
   267bc:	ldr	r1, [r5, r0, lsl #2]
   267c0:	ldr	r7, [r9, r0, lsl #2]
   267c4:	sub	r2, r2, r4
   267c8:	mla	r1, r7, r1, r2
   267cc:	add	r3, r1, r3
   267d0:	b	267ec <GetDataSlab+0x42d0>
   267d4:	ldr	r2, [r9, r0, lsl #2]
   267d8:	cmp	r2, #0
   267dc:	beq	267f0 <GetDataSlab+0x42d4>
   267e0:	ldr	r1, [r5, r0, lsl #2]
   267e4:	mla	r3, r1, r2, r3
   267e8:	mul	r1, r1, r2
   267ec:	add	lr, lr, r1, lsl #2
   267f0:	ldr	r1, [fp, #24]
   267f4:	add	r2, r0, #1
   267f8:	add	r0, r0, #2
   267fc:	cmp	r0, r1
   26800:	blt	26778 <GetDataSlab+0x425c>
   26804:	b	26820 <GetDataSlab+0x4304>
   26808:	ldr	ip, [sp, #48]	; 0x30
   2680c:	b	26820 <GetDataSlab+0x4304>
   26810:	ldr	r1, [sp, #40]	; 0x28
   26814:	ldr	r0, [r1, r0, lsl #2]
   26818:	add	lr, lr, r0, lsl #2
   2681c:	add	r3, r0, r3
   26820:	ldr	r0, [sp, #52]	; 0x34
   26824:	ldr	r1, [sp, #60]	; 0x3c
   26828:	add	r8, r8, ip
   2682c:	add	r1, r1, r0
   26830:	mov	r0, #0
   26834:	str	r1, [sp, #60]	; 0x3c
   26838:	ldr	r1, [sp, #56]	; 0x38
   2683c:	cmp	r8, r1
   26840:	blt	26714 <GetDataSlab+0x41f8>
   26844:	b	242ac <GetDataSlab+0x1d90>
   26848:	ldr	r0, [sl]
   2684c:	mov	r2, #0
   26850:	add	r3, sp, #64	; 0x40
   26854:	str	r0, [sp, #28]
   26858:	sub	r0, r0, #1
   2685c:	str	r0, [fp, #-72]	; 0xffffffb8
   26860:	ldr	r0, [r9]
   26864:	str	r0, [sp, #64]	; 0x40
   26868:	str	r0, [sp, #40]	; 0x28
   2686c:	ldr	r0, [fp, #24]
   26870:	ldr	r1, [r8]
   26874:	cmp	r0, #2
   26878:	str	r1, [sp, #44]	; 0x2c
   2687c:	str	r1, [sp, #48]	; 0x30
   26880:	blt	26918 <GetDataSlab+0x43fc>
   26884:	ldr	r6, [sp, #40]	; 0x28
   26888:	ldr	r0, [sp, #44]	; 0x2c
   2688c:	mov	r1, #1
   26890:	mov	r2, #0
   26894:	mov	r7, r9
   26898:	mov	r5, r6
   2689c:	str	r0, [sp, #48]	; 0x30
   268a0:	ldr	r0, [sl, r1, lsl #2]
   268a4:	str	r6, [r3, r1, lsl #2]
   268a8:	mov	r3, #0
   268ac:	sub	r0, r0, #1
   268b0:	str	r0, [lr, r1, lsl #2]
   268b4:	ldr	r8, [r9, r1, lsl #2]
   268b8:	mov	r4, r8
   268bc:	mul	r6, r4, r6
   268c0:	ldr	r4, [r7, -r3, lsl #2]
   268c4:	add	r3, r3, #1
   268c8:	cmp	r1, r3
   268cc:	mul	r0, r0, r4
   268d0:	bne	268bc <GetDataSlab+0x43a0>
   268d4:	add	r3, sp, #64	; 0x40
   268d8:	str	r0, [lr, r1, lsl #2]
   268dc:	ldr	r4, [sp, #48]	; 0x30
   268e0:	add	r7, r7, #4
   268e4:	str	r6, [r3, r1, lsl #2]
   268e8:	ldr	r0, [ip, r1, lsl #2]
   268ec:	mla	r2, r0, r5, r2
   268f0:	ldr	r0, [fp, #20]
   268f4:	mov	r5, r6
   268f8:	mov	r6, r8
   268fc:	ldr	r0, [r0, r1, lsl #2]
   26900:	add	r1, r1, #1
   26904:	mul	r4, r0, r4
   26908:	ldr	r0, [fp, #24]
   2690c:	str	r4, [sp, #48]	; 0x30
   26910:	cmp	r1, r0
   26914:	bne	268a0 <GetDataSlab+0x4384>
   26918:	ldr	r0, [sp, #52]	; 0x34
   2691c:	ldr	r6, [sp, #28]
   26920:	add	r9, r0, r2, lsl #2
   26924:	cmp	r6, #1
   26928:	bne	32be8 <GetDataSlab+0x106cc>
   2692c:	ldr	r0, [sp, #48]	; 0x30
   26930:	cmp	r0, #1
   26934:	ldr	r0, [fp, #20]
   26938:	blt	242a8 <GetDataSlab+0x1d8c>
   2693c:	ldr	r1, [sp, #44]	; 0x2c
   26940:	add	sl, r0, #4
   26944:	add	r0, sp, #104	; 0x68
   26948:	mov	r8, #0
   2694c:	orr	r6, r0, #4
   26950:	orr	r0, lr, #4
   26954:	mov	lr, #0
   26958:	str	r0, [sp, #32]
   2695c:	lsl	r0, r1, #2
   26960:	str	r0, [sp, #52]	; 0x34
   26964:	ldr	r0, [ip], #4
   26968:	str	ip, [sp, #56]	; 0x38
   2696c:	str	r0, [sp, #36]	; 0x24
   26970:	ldr	r5, [sp, #56]	; 0x38
   26974:	cmp	r1, #1
   26978:	blt	2699c <GetDataSlab+0x4480>
   2697c:	ldr	r0, [sp, #36]	; 0x24
   26980:	ldr	r3, [sp, #60]	; 0x3c
   26984:	mov	ip, r1
   26988:	add	r0, r9, r0, lsl #2
   2698c:	ldr	r4, [r0], #4
   26990:	subs	ip, ip, #1
   26994:	str	r4, [r3], #4
   26998:	bne	2698c <GetDataSlab+0x4470>
   2699c:	ldr	r0, [sp, #40]	; 0x28
   269a0:	add	ip, sp, #64	; 0x40
   269a4:	add	r9, r9, r0, lsl #2
   269a8:	add	r2, r2, r0
   269ac:	ldr	r0, [fp, #24]
   269b0:	cmp	r0, #2
   269b4:	blt	26a58 <GetDataSlab+0x453c>
   269b8:	mov	r3, #0
   269bc:	mov	r0, r3
   269c0:	ldr	r3, [r6, r3, lsl #2]
   269c4:	add	r3, r3, #1
   269c8:	str	r3, [r6, r0, lsl #2]
   269cc:	ldr	r4, [sl, r0, lsl #2]
   269d0:	sdiv	r1, r3, r4
   269d4:	mls	r1, r1, r4, r3
   269d8:	cmp	r1, #0
   269dc:	bne	26a48 <GetDataSlab+0x452c>
   269e0:	add	r1, ip, r0, lsl #2
   269e4:	str	r8, [r6, r0, lsl #2]
   269e8:	ldr	r3, [r1, #4]
   269ec:	sdiv	r1, r2, r3
   269f0:	mls	r4, r1, r3, r2
   269f4:	cmp	r4, #0
   269f8:	beq	26a14 <GetDataSlab+0x44f8>
   269fc:	ldr	r1, [ip, r0, lsl #2]
   26a00:	ldr	r7, [r5, r0, lsl #2]
   26a04:	sub	r3, r3, r4
   26a08:	mla	r1, r7, r1, r3
   26a0c:	add	r2, r1, r2
   26a10:	b	26a2c <GetDataSlab+0x4510>
   26a14:	ldr	r3, [r5, r0, lsl #2]
   26a18:	cmp	r3, #0
   26a1c:	beq	26a30 <GetDataSlab+0x4514>
   26a20:	ldr	r1, [ip, r0, lsl #2]
   26a24:	mla	r2, r1, r3, r2
   26a28:	mul	r1, r1, r3
   26a2c:	add	r9, r9, r1, lsl #2
   26a30:	ldr	r1, [fp, #24]
   26a34:	add	r3, r0, #1
   26a38:	add	r0, r0, #2
   26a3c:	cmp	r0, r1
   26a40:	blt	269bc <GetDataSlab+0x44a0>
   26a44:	b	26a58 <GetDataSlab+0x453c>
   26a48:	ldr	r1, [sp, #32]
   26a4c:	ldr	r0, [r1, r0, lsl #2]
   26a50:	add	r9, r9, r0, lsl #2
   26a54:	add	r2, r0, r2
   26a58:	ldr	r0, [sp, #60]	; 0x3c
   26a5c:	ldr	r1, [sp, #52]	; 0x34
   26a60:	ldr	r3, [sp, #48]	; 0x30
   26a64:	add	r0, r0, r1
   26a68:	ldr	r1, [sp, #44]	; 0x2c
   26a6c:	str	r0, [sp, #60]	; 0x3c
   26a70:	mov	r0, #0
   26a74:	add	lr, lr, r1
   26a78:	cmp	lr, r3
   26a7c:	blt	26974 <GetDataSlab+0x4458>
   26a80:	b	242ac <GetDataSlab+0x1d90>
   26a84:	mov	r1, r8
   26a88:	ldr	r8, [sl]
   26a8c:	mov	r2, #0
   26a90:	add	r3, sp, #64	; 0x40
   26a94:	sub	r0, r8, #1
   26a98:	str	r0, [fp, #-72]	; 0xffffffb8
   26a9c:	ldr	r0, [r9]
   26aa0:	str	r0, [sp, #64]	; 0x40
   26aa4:	str	r0, [sp, #40]	; 0x28
   26aa8:	ldr	r0, [fp, #24]
   26aac:	ldr	r1, [r1]
   26ab0:	cmp	r0, #2
   26ab4:	str	r1, [sp, #44]	; 0x2c
   26ab8:	str	r1, [sp, #48]	; 0x30
   26abc:	blt	26b5c <GetDataSlab+0x4640>
   26ac0:	ldr	r6, [sp, #40]	; 0x28
   26ac4:	ldr	r0, [sp, #44]	; 0x2c
   26ac8:	mov	r1, #1
   26acc:	mov	r2, #0
   26ad0:	mov	r7, r9
   26ad4:	mov	r5, r6
   26ad8:	str	r0, [sp, #48]	; 0x30
   26adc:	ldr	r0, [sl, r1, lsl #2]
   26ae0:	str	r6, [r3, r1, lsl #2]
   26ae4:	mov	r3, #0
   26ae8:	sub	r0, r0, #1
   26aec:	str	r0, [lr, r1, lsl #2]
   26af0:	ldr	lr, [r9, r1, lsl #2]
   26af4:	mov	r4, lr
   26af8:	mul	r6, r4, r6
   26afc:	ldr	r4, [r7, -r3, lsl #2]
   26b00:	add	r3, r3, #1
   26b04:	cmp	r1, r3
   26b08:	mul	r0, r0, r4
   26b0c:	bne	26af8 <GetDataSlab+0x45dc>
   26b10:	add	r3, sp, #64	; 0x40
   26b14:	sub	r4, fp, #72	; 0x48
   26b18:	add	r7, r7, #4
   26b1c:	str	r6, [r3, r1, lsl #2]
   26b20:	str	r0, [r4, r1, lsl #2]
   26b24:	ldr	r0, [ip, r1, lsl #2]
   26b28:	mla	r2, r0, r5, r2
   26b2c:	ldr	r0, [fp, #20]
   26b30:	ldr	r5, [sp, #48]	; 0x30
   26b34:	ldr	r0, [r0, r1, lsl #2]
   26b38:	add	r1, r1, #1
   26b3c:	mul	r5, r0, r5
   26b40:	ldr	r0, [fp, #24]
   26b44:	str	r5, [sp, #48]	; 0x30
   26b48:	mov	r5, r6
   26b4c:	mov	r6, lr
   26b50:	mov	lr, r4
   26b54:	cmp	r1, r0
   26b58:	bne	26adc <GetDataSlab+0x45c0>
   26b5c:	ldr	r0, [sp, #52]	; 0x34
   26b60:	cmp	r8, #1
   26b64:	add	r9, r0, r2, lsl #3
   26b68:	bne	32d74 <GetDataSlab+0x10858>
   26b6c:	ldr	r0, [sp, #48]	; 0x30
   26b70:	ldr	r1, [sp, #44]	; 0x2c
   26b74:	cmp	r0, #1
   26b78:	blt	242a8 <GetDataSlab+0x1d8c>
   26b7c:	ldr	r0, [fp, #20]
   26b80:	mov	r8, #0
   26b84:	add	sl, r0, #4
   26b88:	add	r0, sp, #104	; 0x68
   26b8c:	orr	r6, r0, #4
   26b90:	orr	r0, lr, #4
   26b94:	mov	lr, #0
   26b98:	str	r0, [sp, #32]
   26b9c:	lsl	r0, r1, #2
   26ba0:	str	r0, [sp, #52]	; 0x34
   26ba4:	ldr	r0, [ip], #4
   26ba8:	str	ip, [sp, #56]	; 0x38
   26bac:	str	r0, [sp, #36]	; 0x24
   26bb0:	ldr	r5, [sp, #56]	; 0x38
   26bb4:	cmp	r1, #1
   26bb8:	blt	26be8 <GetDataSlab+0x46cc>
   26bbc:	ldr	r0, [sp, #36]	; 0x24
   26bc0:	ldr	ip, [sp, #44]	; 0x2c
   26bc4:	ldr	r3, [sp, #60]	; 0x3c
   26bc8:	add	r0, r9, r0, lsl #3
   26bcc:	vldr	d16, [r0]
   26bd0:	subs	ip, ip, #1
   26bd4:	add	r0, r0, #8
   26bd8:	vcvt.f32.f64	s0, d16
   26bdc:	vstr	s0, [r3]
   26be0:	add	r3, r3, #4
   26be4:	bne	26bcc <GetDataSlab+0x46b0>
   26be8:	ldr	r0, [sp, #40]	; 0x28
   26bec:	add	ip, sp, #64	; 0x40
   26bf0:	add	r9, r9, r0, lsl #3
   26bf4:	add	r2, r2, r0
   26bf8:	ldr	r0, [fp, #24]
   26bfc:	cmp	r0, #2
   26c00:	blt	26ca4 <GetDataSlab+0x4788>
   26c04:	mov	r3, #0
   26c08:	mov	r0, r3
   26c0c:	ldr	r3, [r6, r3, lsl #2]
   26c10:	add	r3, r3, #1
   26c14:	str	r3, [r6, r0, lsl #2]
   26c18:	ldr	r4, [sl, r0, lsl #2]
   26c1c:	sdiv	r1, r3, r4
   26c20:	mls	r1, r1, r4, r3
   26c24:	cmp	r1, #0
   26c28:	bne	26c94 <GetDataSlab+0x4778>
   26c2c:	add	r1, ip, r0, lsl #2
   26c30:	str	r8, [r6, r0, lsl #2]
   26c34:	ldr	r3, [r1, #4]
   26c38:	sdiv	r1, r2, r3
   26c3c:	mls	r4, r1, r3, r2
   26c40:	cmp	r4, #0
   26c44:	beq	26c60 <GetDataSlab+0x4744>
   26c48:	ldr	r1, [ip, r0, lsl #2]
   26c4c:	ldr	r7, [r5, r0, lsl #2]
   26c50:	sub	r3, r3, r4
   26c54:	mla	r1, r7, r1, r3
   26c58:	add	r2, r1, r2
   26c5c:	b	26c78 <GetDataSlab+0x475c>
   26c60:	ldr	r3, [r5, r0, lsl #2]
   26c64:	cmp	r3, #0
   26c68:	beq	26c7c <GetDataSlab+0x4760>
   26c6c:	ldr	r1, [ip, r0, lsl #2]
   26c70:	mla	r2, r1, r3, r2
   26c74:	mul	r1, r1, r3
   26c78:	add	r9, r9, r1, lsl #3
   26c7c:	ldr	r1, [fp, #24]
   26c80:	add	r3, r0, #1
   26c84:	add	r0, r0, #2
   26c88:	cmp	r0, r1
   26c8c:	blt	26c08 <GetDataSlab+0x46ec>
   26c90:	b	26ca4 <GetDataSlab+0x4788>
   26c94:	ldr	r1, [sp, #32]
   26c98:	ldr	r0, [r1, r0, lsl #2]
   26c9c:	add	r9, r9, r0, lsl #3
   26ca0:	add	r2, r0, r2
   26ca4:	ldr	r0, [sp, #60]	; 0x3c
   26ca8:	ldr	r1, [sp, #52]	; 0x34
   26cac:	ldr	r3, [sp, #48]	; 0x30
   26cb0:	add	r0, r0, r1
   26cb4:	ldr	r1, [sp, #44]	; 0x2c
   26cb8:	str	r0, [sp, #60]	; 0x3c
   26cbc:	mov	r0, #0
   26cc0:	add	lr, lr, r1
   26cc4:	cmp	lr, r3
   26cc8:	blt	26bb4 <GetDataSlab+0x4698>
   26ccc:	b	242ac <GetDataSlab+0x1d90>
   26cd0:	ldr	r0, [sl]
   26cd4:	mov	r4, #0
   26cd8:	add	r6, sp, #64	; 0x40
   26cdc:	str	r3, [sp, #48]	; 0x30
   26ce0:	str	r0, [sp, #36]	; 0x24
   26ce4:	sub	r0, r0, #1
   26ce8:	str	r0, [fp, #-72]	; 0xffffffb8
   26cec:	ldr	r0, [r9]
   26cf0:	str	r0, [sp, #64]	; 0x40
   26cf4:	str	r0, [sp, #28]
   26cf8:	ldr	r0, [fp, #24]
   26cfc:	ldr	r1, [r8]
   26d00:	cmp	r0, #2
   26d04:	str	r1, [sp, #32]
   26d08:	str	r1, [sp, #40]	; 0x28
   26d0c:	blt	26db8 <GetDataSlab+0x489c>
   26d10:	ldr	r3, [sp, #28]
   26d14:	ldr	r0, [sp, #32]
   26d18:	mov	r1, #1
   26d1c:	mov	r4, #0
   26d20:	mov	r2, r9
   26d24:	mov	r7, r3
   26d28:	str	r0, [sp, #40]	; 0x28
   26d2c:	ldr	r0, [sl, r1, lsl #2]
   26d30:	str	r3, [r6, r1, lsl #2]
   26d34:	mov	ip, sl
   26d38:	sub	r5, r0, #1
   26d3c:	mov	r0, #0
   26d40:	str	r5, [lr, r1, lsl #2]
   26d44:	ldr	lr, [r9, r1, lsl #2]
   26d48:	mov	r6, lr
   26d4c:	mul	r3, r6, r3
   26d50:	ldr	r6, [r2, -r0, lsl #2]
   26d54:	add	r0, r0, #1
   26d58:	cmp	r1, r0
   26d5c:	mul	r5, r5, r6
   26d60:	bne	26d4c <GetDataSlab+0x4830>
   26d64:	sub	r0, fp, #72	; 0x48
   26d68:	add	r6, sp, #64	; 0x40
   26d6c:	add	r2, r2, #4
   26d70:	str	r5, [r0, r1, lsl #2]
   26d74:	mov	sl, r0
   26d78:	ldr	r0, [fp, #12]
   26d7c:	str	r3, [r6, r1, lsl #2]
   26d80:	ldr	r5, [sp, #40]	; 0x28
   26d84:	ldr	r0, [r0, r1, lsl #2]
   26d88:	mla	r4, r0, r7, r4
   26d8c:	ldr	r0, [r8, r1, lsl #2]
   26d90:	add	r1, r1, #1
   26d94:	mov	r7, r3
   26d98:	mov	r3, lr
   26d9c:	mov	lr, sl
   26da0:	mov	sl, ip
   26da4:	mul	r5, r0, r5
   26da8:	ldr	r0, [fp, #24]
   26dac:	str	r5, [sp, #40]	; 0x28
   26db0:	cmp	r1, r0
   26db4:	bne	26d2c <GetDataSlab+0x4810>
   26db8:	ldr	r0, [sp, #52]	; 0x34
   26dbc:	ldr	r7, [sp, #36]	; 0x24
   26dc0:	add	r9, r0, r4, lsl #3
   26dc4:	cmp	r7, #1
   26dc8:	bne	32f0c <GetDataSlab+0x109f0>
   26dcc:	ldr	r0, [sp, #40]	; 0x28
   26dd0:	ldr	r3, [sp, #48]	; 0x30
   26dd4:	cmp	r0, #1
   26dd8:	ldr	r0, [sp, #60]	; 0x3c
   26ddc:	blt	330d0 <GetDataSlab+0x10bb4>
   26de0:	add	r1, sp, #104	; 0x68
   26de4:	add	r8, r8, #4
   26de8:	str	r0, [sp, #44]	; 0x2c
   26dec:	orr	r7, r1, #4
   26df0:	orr	r1, lr, #4
   26df4:	ldr	lr, [sp, #32]
   26df8:	str	r1, [sp, #12]
   26dfc:	lsl	r1, lr, #2
   26e00:	str	r1, [sp, #24]
   26e04:	ldr	r1, [fp, #12]
   26e08:	mov	sl, r1
   26e0c:	ldr	r1, [sl], #4
   26e10:	str	r1, [sp, #20]
   26e14:	mov	r1, #0
   26e18:	str	sl, [sp, #16]
   26e1c:	mov	r6, r8
   26e20:	mov	r5, r9
   26e24:	cmp	lr, #1
   26e28:	str	r1, [sp, #36]	; 0x24
   26e2c:	blt	26e58 <GetDataSlab+0x493c>
   26e30:	ldr	r0, [sp, #20]
   26e34:	ldr	r8, [sp, #32]
   26e38:	ldr	sl, [sp, #44]	; 0x2c
   26e3c:	add	r9, r5, r0, lsl #3
   26e40:	ldrd	r0, [r9]
   26e44:	bl	497ac <__aeabi_l2f>
   26e48:	str	r0, [sl], #4
   26e4c:	subs	r8, r8, #1
   26e50:	add	r9, r9, #8
   26e54:	bne	26e40 <GetDataSlab+0x4924>
   26e58:	ldr	r0, [sp, #28]
   26e5c:	mov	r9, r5
   26e60:	add	r9, r5, r0, lsl #3
   26e64:	add	r4, r4, r0
   26e68:	ldr	r0, [fp, #24]
   26e6c:	cmp	r0, #2
   26e70:	blt	26f20 <GetDataSlab+0x4a04>
   26e74:	ldr	r3, [sp, #48]	; 0x30
   26e78:	ldr	lr, [sp, #32]
   26e7c:	ldr	sl, [sp, #16]
   26e80:	add	r5, sp, #64	; 0x40
   26e84:	mov	r1, #0
   26e88:	mov	r8, r6
   26e8c:	mov	ip, r5
   26e90:	mov	r0, r1
   26e94:	ldr	r1, [r7, r1, lsl #2]
   26e98:	add	r1, r1, #1
   26e9c:	str	r1, [r7, r0, lsl #2]
   26ea0:	ldr	r2, [r8, r0, lsl #2]
   26ea4:	sdiv	r6, r1, r2
   26ea8:	mls	r1, r6, r2, r1
   26eac:	cmp	r1, #0
   26eb0:	bne	26f30 <GetDataSlab+0x4a14>
   26eb4:	mov	r1, #0
   26eb8:	str	r1, [r7, r0, lsl #2]
   26ebc:	add	r1, ip, r0, lsl #2
   26ec0:	ldr	r1, [r1, #4]
   26ec4:	sdiv	r2, r4, r1
   26ec8:	mls	r2, r2, r1, r4
   26ecc:	cmp	r2, #0
   26ed0:	beq	26eec <GetDataSlab+0x49d0>
   26ed4:	ldr	r5, [ip, r0, lsl #2]
   26ed8:	ldr	r6, [sl, r0, lsl #2]
   26edc:	sub	r1, r1, r2
   26ee0:	mla	r1, r6, r5, r1
   26ee4:	add	r4, r1, r4
   26ee8:	b	26f04 <GetDataSlab+0x49e8>
   26eec:	ldr	r1, [sl, r0, lsl #2]
   26ef0:	cmp	r1, #0
   26ef4:	beq	26f08 <GetDataSlab+0x49ec>
   26ef8:	ldr	r2, [ip, r0, lsl #2]
   26efc:	mla	r4, r2, r1, r4
   26f00:	mul	r1, r2, r1
   26f04:	add	r9, r9, r1, lsl #3
   26f08:	ldr	r2, [fp, #24]
   26f0c:	add	r1, r0, #1
   26f10:	add	r0, r0, #2
   26f14:	cmp	r0, r2
   26f18:	blt	26e90 <GetDataSlab+0x4974>
   26f1c:	b	26f40 <GetDataSlab+0x4a24>
   26f20:	ldr	r3, [sp, #48]	; 0x30
   26f24:	ldr	lr, [sp, #32]
   26f28:	mov	r8, r6
   26f2c:	b	26f40 <GetDataSlab+0x4a24>
   26f30:	ldr	r1, [sp, #12]
   26f34:	ldr	r0, [r1, r0, lsl #2]
   26f38:	add	r9, r9, r0, lsl #3
   26f3c:	add	r4, r0, r4
   26f40:	ldr	r0, [sp, #24]
   26f44:	ldr	r1, [sp, #44]	; 0x2c
   26f48:	add	r1, r1, r0
   26f4c:	ldr	r0, [sp, #40]	; 0x28
   26f50:	str	r1, [sp, #44]	; 0x2c
   26f54:	ldr	r1, [sp, #36]	; 0x24
   26f58:	add	r1, r1, lr
   26f5c:	cmp	r1, r0
   26f60:	blt	26e1c <GetDataSlab+0x4900>
   26f64:	b	330d0 <GetDataSlab+0x10bb4>
   26f68:	ldr	r3, [sl]
   26f6c:	add	r5, sp, #64	; 0x40
   26f70:	sub	r0, r3, #1
   26f74:	str	r0, [fp, #-72]	; 0xffffffb8
   26f78:	ldr	r0, [r9]
   26f7c:	mov	r9, lr
   26f80:	mov	lr, #0
   26f84:	str	r0, [sp, #64]	; 0x40
   26f88:	str	r0, [sp, #48]	; 0x30
   26f8c:	ldr	r0, [fp, #24]
   26f90:	ldr	sl, [r8]
   26f94:	cmp	r0, #2
   26f98:	mov	r0, sl
   26f9c:	str	sl, [sp, #56]	; 0x38
   26fa0:	blt	2704c <GetDataSlab+0x4b30>
   26fa4:	ldr	r7, [sp, #48]	; 0x30
   26fa8:	ldr	r1, [fp, #8]
   26fac:	mov	r0, #1
   26fb0:	mov	lr, #0
   26fb4:	mov	r2, sl
   26fb8:	str	sl, [sp, #56]	; 0x38
   26fbc:	mov	r8, r7
   26fc0:	ldr	r6, [fp, #16]
   26fc4:	mov	r2, r9
   26fc8:	ldr	r6, [r6, r0, lsl #2]
   26fcc:	str	r7, [r5, r0, lsl #2]
   26fd0:	sub	r4, r6, #1
   26fd4:	ldr	r6, [fp, #8]
   26fd8:	str	r4, [r9, r0, lsl #2]
   26fdc:	ldr	ip, [r6, r0, lsl #2]
   26fe0:	mov	r6, #0
   26fe4:	mov	r5, ip
   26fe8:	mul	r7, r5, r7
   26fec:	ldr	r5, [r1, -r6, lsl #2]
   26ff0:	add	r6, r6, #1
   26ff4:	cmp	r0, r6
   26ff8:	mul	r4, r4, r5
   26ffc:	bne	26fe8 <GetDataSlab+0x4acc>
   27000:	ldr	r6, [fp, #12]
   27004:	add	r5, sp, #64	; 0x40
   27008:	str	r4, [r2, r0, lsl #2]
   2700c:	mov	r9, r2
   27010:	ldr	r2, [sp, #56]	; 0x38
   27014:	add	r1, r1, #4
   27018:	str	r7, [r5, r0, lsl #2]
   2701c:	ldr	r4, [r6, r0, lsl #2]
   27020:	ldr	r6, [fp, #20]
   27024:	mla	lr, r4, r8, lr
   27028:	ldr	r4, [r6, r0, lsl #2]
   2702c:	ldr	r6, [fp, #24]
   27030:	add	r0, r0, #1
   27034:	mov	r8, r7
   27038:	mov	r7, ip
   2703c:	mul	r2, r4, r2
   27040:	cmp	r0, r6
   27044:	str	r2, [sp, #56]	; 0x38
   27048:	bne	26fc0 <GetDataSlab+0x4aa4>
   2704c:	ldr	r0, [sp, #52]	; 0x34
   27050:	cmp	r3, #1
   27054:	add	r2, r0, lr
   27058:	bne	33354 <GetDataSlab+0x10e38>
   2705c:	ldr	r0, [sp, #56]	; 0x38
   27060:	cmp	r0, #1
   27064:	ldr	r0, [fp, #20]
   27068:	blt	242a8 <GetDataSlab+0x1d8c>
   2706c:	ldr	r7, [fp, #12]
   27070:	add	r8, r0, #4
   27074:	add	r0, sp, #104	; 0x68
   27078:	mov	r9, #0
   2707c:	orr	r3, r0, #4
   27080:	sub	r0, fp, #72	; 0x48
   27084:	orr	r0, r0, #4
   27088:	str	r0, [sp, #44]	; 0x2c
   2708c:	ldr	r0, [r7], #4
   27090:	str	r0, [sp, #52]	; 0x34
   27094:	ldr	r6, [sp, #52]	; 0x34
   27098:	ldr	r1, [fp, #12]
   2709c:	ldr	r0, [sp, #48]	; 0x30
   270a0:	cmp	sl, #1
   270a4:	add	ip, r6, lr
   270a8:	add	r4, r2, r6
   270ac:	blt	270e4 <GetDataSlab+0x4bc8>
   270b0:	ldr	r0, [sp, #60]	; 0x3c
   270b4:	ldr	r6, [fp, #20]
   270b8:	add	r5, r0, r9
   270bc:	mov	r0, #0
   270c0:	ldrb	r2, [r4, r0]
   270c4:	strb	r2, [r5, r0]
   270c8:	add	r0, r0, #1
   270cc:	ldr	sl, [r6]
   270d0:	cmp	r0, sl
   270d4:	blt	270c0 <GetDataSlab+0x4ba4>
   270d8:	ldr	r0, [fp, #8]
   270dc:	ldr	r6, [r1]
   270e0:	ldr	r0, [r0]
   270e4:	str	r0, [sp, #48]	; 0x30
   270e8:	sub	r0, r0, r6
   270ec:	str	r6, [sp, #52]	; 0x34
   270f0:	add	r2, r4, r0
   270f4:	add	lr, ip, r0
   270f8:	ldr	r0, [fp, #24]
   270fc:	add	r4, sp, #64	; 0x40
   27100:	cmp	r0, #2
   27104:	blt	271ac <GetDataSlab+0x4c90>
   27108:	mov	r5, #0
   2710c:	mov	r0, r5
   27110:	ldr	r5, [r3, r5, lsl #2]
   27114:	add	r5, r5, #1
   27118:	str	r5, [r3, r0, lsl #2]
   2711c:	ldr	r1, [r8, r0, lsl #2]
   27120:	sdiv	r6, r5, r1
   27124:	mls	r1, r6, r1, r5
   27128:	cmp	r1, #0
   2712c:	bne	2719c <GetDataSlab+0x4c80>
   27130:	mov	r1, #0
   27134:	str	r1, [r3, r0, lsl #2]
   27138:	add	r1, r4, r0, lsl #2
   2713c:	ldr	r5, [r1, #4]
   27140:	sdiv	r1, lr, r5
   27144:	mls	ip, r1, r5, lr
   27148:	cmp	ip, #0
   2714c:	beq	2716c <GetDataSlab+0x4c50>
   27150:	ldr	r1, [r4, r0, lsl #2]
   27154:	ldr	r6, [r7, r0, lsl #2]
   27158:	sub	r5, r5, ip
   2715c:	mla	r1, r6, r1, r5
   27160:	add	lr, r1, lr
   27164:	add	r2, r2, r1
   27168:	b	27184 <GetDataSlab+0x4c68>
   2716c:	ldr	r5, [r7, r0, lsl #2]
   27170:	add	r4, sp, #64	; 0x40
   27174:	cmp	r5, #0
   27178:	ldrne	r1, [r4, r0, lsl #2]
   2717c:	mlane	lr, r1, r5, lr
   27180:	mlane	r2, r1, r5, r2
   27184:	ldr	r1, [fp, #24]
   27188:	add	r5, r0, #1
   2718c:	add	r0, r0, #2
   27190:	cmp	r0, r1
   27194:	blt	2710c <GetDataSlab+0x4bf0>
   27198:	b	271ac <GetDataSlab+0x4c90>
   2719c:	ldr	r1, [sp, #44]	; 0x2c
   271a0:	ldr	r0, [r1, r0, lsl #2]
   271a4:	add	r2, r2, r0
   271a8:	add	lr, r0, lr
   271ac:	ldr	r1, [sp, #56]	; 0x38
   271b0:	add	r9, sl, r9
   271b4:	mov	r0, #0
   271b8:	cmp	r9, r1
   271bc:	blt	27094 <GetDataSlab+0x4b78>
   271c0:	b	242ac <GetDataSlab+0x1d90>
   271c4:	ldr	r3, [sl]
   271c8:	add	r5, sp, #64	; 0x40
   271cc:	sub	r0, r3, #1
   271d0:	str	r0, [fp, #-72]	; 0xffffffb8
   271d4:	ldr	r0, [r9]
   271d8:	mov	r9, #0
   271dc:	str	r0, [sp, #64]	; 0x40
   271e0:	str	r0, [sp, #48]	; 0x30
   271e4:	ldr	r0, [fp, #24]
   271e8:	ldr	sl, [r8]
   271ec:	cmp	r0, #2
   271f0:	mov	r0, sl
   271f4:	str	sl, [sp, #56]	; 0x38
   271f8:	blt	2729c <GetDataSlab+0x4d80>
   271fc:	ldr	r7, [sp, #48]	; 0x30
   27200:	ldr	r1, [fp, #8]
   27204:	mov	r0, #1
   27208:	mov	r9, #0
   2720c:	mov	r2, sl
   27210:	str	sl, [sp, #56]	; 0x38
   27214:	mov	r8, r7
   27218:	ldr	r6, [fp, #16]
   2721c:	ldr	r2, [fp, #8]
   27220:	ldr	r6, [r6, r0, lsl #2]
   27224:	str	r7, [r5, r0, lsl #2]
   27228:	sub	r4, r6, #1
   2722c:	mov	r6, #0
   27230:	str	r4, [lr, r0, lsl #2]
   27234:	ldr	ip, [r2, r0, lsl #2]
   27238:	mov	r5, ip
   2723c:	mul	r7, r5, r7
   27240:	ldr	r5, [r1, -r6, lsl #2]
   27244:	add	r6, r6, #1
   27248:	cmp	r0, r6
   2724c:	mul	r4, r4, r5
   27250:	bne	2723c <GetDataSlab+0x4d20>
   27254:	ldr	r6, [fp, #12]
   27258:	add	r5, sp, #64	; 0x40
   2725c:	str	r4, [lr, r0, lsl #2]
   27260:	ldr	r2, [sp, #56]	; 0x38
   27264:	add	r1, r1, #4
   27268:	str	r7, [r5, r0, lsl #2]
   2726c:	ldr	r4, [r6, r0, lsl #2]
   27270:	ldr	r6, [fp, #20]
   27274:	mla	r9, r4, r8, r9
   27278:	ldr	r4, [r6, r0, lsl #2]
   2727c:	ldr	r6, [fp, #24]
   27280:	add	r0, r0, #1
   27284:	mov	r8, r7
   27288:	mov	r7, ip
   2728c:	mul	r2, r4, r2
   27290:	cmp	r0, r6
   27294:	str	r2, [sp, #56]	; 0x38
   27298:	bne	27218 <GetDataSlab+0x4cfc>
   2729c:	ldr	r0, [sp, #52]	; 0x34
   272a0:	mov	r2, r9
   272a4:	cmp	r3, #1
   272a8:	add	r4, r0, r9, lsl #1
   272ac:	bne	334ec <GetDataSlab+0x10fd0>
   272b0:	ldr	r0, [sp, #56]	; 0x38
   272b4:	ldr	lr, [fp, #12]
   272b8:	cmp	r0, #1
   272bc:	ldr	r0, [fp, #20]
   272c0:	blt	242a8 <GetDataSlab+0x1d8c>
   272c4:	add	r8, r0, #4
   272c8:	add	r0, sp, #104	; 0x68
   272cc:	mov	r9, #0
   272d0:	orr	r3, r0, #4
   272d4:	sub	r0, fp, #72	; 0x48
   272d8:	orr	r0, r0, #4
   272dc:	str	r0, [sp, #44]	; 0x2c
   272e0:	ldr	r0, [lr], #4
   272e4:	str	r0, [sp, #52]	; 0x34
   272e8:	ldr	r1, [sp, #52]	; 0x34
   272ec:	ldr	r0, [sp, #48]	; 0x30
   272f0:	cmp	sl, #1
   272f4:	add	r2, r1, r2
   272f8:	add	ip, r4, r1, lsl #1
   272fc:	blt	2733c <GetDataSlab+0x4e20>
   27300:	ldr	r0, [sp, #60]	; 0x3c
   27304:	ldr	r6, [fp, #20]
   27308:	mov	r4, ip
   2730c:	add	r5, r0, r9
   27310:	mov	r0, #0
   27314:	ldrb	r1, [r4], #2
   27318:	strb	r1, [r5, r0]
   2731c:	add	r0, r0, #1
   27320:	ldr	sl, [r6]
   27324:	cmp	r0, sl
   27328:	blt	27314 <GetDataSlab+0x4df8>
   2732c:	ldr	r0, [fp, #12]
   27330:	ldr	r1, [r0]
   27334:	ldr	r0, [fp, #8]
   27338:	ldr	r0, [r0]
   2733c:	str	r0, [sp, #48]	; 0x30
   27340:	sub	r0, r0, r1
   27344:	str	r1, [sp, #52]	; 0x34
   27348:	add	r4, ip, r0, lsl #1
   2734c:	add	r2, r2, r0
   27350:	ldr	r0, [fp, #24]
   27354:	cmp	r0, #2
   27358:	blt	27404 <GetDataSlab+0x4ee8>
   2735c:	mov	r5, #0
   27360:	add	ip, sp, #64	; 0x40
   27364:	ldr	r1, [r3, r5, lsl #2]
   27368:	mov	r0, r5
   2736c:	add	r1, r1, #1
   27370:	str	r1, [r3, r5, lsl #2]
   27374:	ldr	r5, [r8, r5, lsl #2]
   27378:	sdiv	r6, r1, r5
   2737c:	mls	r1, r6, r5, r1
   27380:	cmp	r1, #0
   27384:	bne	273f4 <GetDataSlab+0x4ed8>
   27388:	mov	r1, #0
   2738c:	str	r1, [r3, r0, lsl #2]
   27390:	add	r1, ip, r0, lsl #2
   27394:	ldr	r5, [r1, #4]
   27398:	sdiv	r1, r2, r5
   2739c:	mls	r1, r1, r5, r2
   273a0:	cmp	r1, #0
   273a4:	beq	273c0 <GetDataSlab+0x4ea4>
   273a8:	ldr	r6, [ip, r0, lsl #2]
   273ac:	ldr	r7, [lr, r0, lsl #2]
   273b0:	sub	r1, r5, r1
   273b4:	mla	r1, r7, r6, r1
   273b8:	add	r2, r1, r2
   273bc:	b	273d8 <GetDataSlab+0x4ebc>
   273c0:	ldr	r1, [lr, r0, lsl #2]
   273c4:	cmp	r1, #0
   273c8:	beq	273dc <GetDataSlab+0x4ec0>
   273cc:	ldr	r7, [ip, r0, lsl #2]
   273d0:	mla	r2, r7, r1, r2
   273d4:	mul	r1, r7, r1
   273d8:	add	r4, r4, r1, lsl #1
   273dc:	ldr	r1, [fp, #24]
   273e0:	add	r5, r0, #1
   273e4:	add	r0, r0, #2
   273e8:	cmp	r0, r1
   273ec:	blt	27364 <GetDataSlab+0x4e48>
   273f0:	b	27404 <GetDataSlab+0x4ee8>
   273f4:	ldr	r1, [sp, #44]	; 0x2c
   273f8:	ldr	r0, [r1, r0, lsl #2]
   273fc:	add	r4, r4, r0, lsl #1
   27400:	add	r2, r0, r2
   27404:	ldr	r1, [sp, #56]	; 0x38
   27408:	add	r9, sl, r9
   2740c:	mov	r0, #0
   27410:	cmp	r9, r1
   27414:	blt	272e8 <GetDataSlab+0x4dcc>
   27418:	b	242ac <GetDataSlab+0x1d90>
   2741c:	ldr	r3, [sl]
   27420:	add	r5, sp, #64	; 0x40
   27424:	sub	r0, r3, #1
   27428:	str	r0, [fp, #-72]	; 0xffffffb8
   2742c:	ldr	r0, [r9]
   27430:	mov	r9, #0
   27434:	str	r0, [sp, #64]	; 0x40
   27438:	str	r0, [sp, #48]	; 0x30
   2743c:	ldr	r0, [fp, #24]
   27440:	ldr	sl, [r8]
   27444:	cmp	r0, #2
   27448:	mov	r0, sl
   2744c:	str	sl, [sp, #56]	; 0x38
   27450:	blt	274f4 <GetDataSlab+0x4fd8>
   27454:	ldr	r7, [sp, #48]	; 0x30
   27458:	ldr	r1, [fp, #8]
   2745c:	mov	r0, #1
   27460:	mov	r9, #0
   27464:	mov	r2, sl
   27468:	str	sl, [sp, #56]	; 0x38
   2746c:	mov	r8, r7
   27470:	ldr	r6, [fp, #16]
   27474:	ldr	r2, [fp, #8]
   27478:	ldr	r6, [r6, r0, lsl #2]
   2747c:	str	r7, [r5, r0, lsl #2]
   27480:	sub	r4, r6, #1
   27484:	mov	r6, #0
   27488:	str	r4, [lr, r0, lsl #2]
   2748c:	ldr	ip, [r2, r0, lsl #2]
   27490:	mov	r5, ip
   27494:	mul	r7, r5, r7
   27498:	ldr	r5, [r1, -r6, lsl #2]
   2749c:	add	r6, r6, #1
   274a0:	cmp	r0, r6
   274a4:	mul	r4, r4, r5
   274a8:	bne	27494 <GetDataSlab+0x4f78>
   274ac:	ldr	r6, [fp, #12]
   274b0:	add	r5, sp, #64	; 0x40
   274b4:	str	r4, [lr, r0, lsl #2]
   274b8:	ldr	r2, [sp, #56]	; 0x38
   274bc:	add	r1, r1, #4
   274c0:	str	r7, [r5, r0, lsl #2]
   274c4:	ldr	r4, [r6, r0, lsl #2]
   274c8:	ldr	r6, [fp, #20]
   274cc:	mla	r9, r4, r8, r9
   274d0:	ldr	r4, [r6, r0, lsl #2]
   274d4:	ldr	r6, [fp, #24]
   274d8:	add	r0, r0, #1
   274dc:	mov	r8, r7
   274e0:	mov	r7, ip
   274e4:	mul	r2, r4, r2
   274e8:	cmp	r0, r6
   274ec:	str	r2, [sp, #56]	; 0x38
   274f0:	bne	27470 <GetDataSlab+0x4f54>
   274f4:	ldr	r0, [sp, #52]	; 0x34
   274f8:	mov	r2, r9
   274fc:	cmp	r3, #1
   27500:	add	r4, r0, r9, lsl #1
   27504:	bne	33684 <GetDataSlab+0x11168>
   27508:	ldr	r0, [sp, #56]	; 0x38
   2750c:	ldr	lr, [fp, #12]
   27510:	cmp	r0, #1
   27514:	ldr	r0, [fp, #20]
   27518:	blt	242a8 <GetDataSlab+0x1d8c>
   2751c:	add	r8, r0, #4
   27520:	add	r0, sp, #104	; 0x68
   27524:	mov	r9, #0
   27528:	orr	r3, r0, #4
   2752c:	sub	r0, fp, #72	; 0x48
   27530:	orr	r0, r0, #4
   27534:	str	r0, [sp, #44]	; 0x2c
   27538:	ldr	r0, [lr], #4
   2753c:	str	r0, [sp, #52]	; 0x34
   27540:	ldr	r1, [sp, #52]	; 0x34
   27544:	ldr	r0, [sp, #48]	; 0x30
   27548:	cmp	sl, #1
   2754c:	add	r2, r1, r2
   27550:	add	ip, r4, r1, lsl #1
   27554:	blt	27594 <GetDataSlab+0x5078>
   27558:	ldr	r0, [sp, #60]	; 0x3c
   2755c:	ldr	r6, [fp, #20]
   27560:	mov	r4, ip
   27564:	add	r5, r0, r9
   27568:	mov	r0, #0
   2756c:	ldrb	r1, [r4], #2
   27570:	strb	r1, [r5, r0]
   27574:	add	r0, r0, #1
   27578:	ldr	sl, [r6]
   2757c:	cmp	r0, sl
   27580:	blt	2756c <GetDataSlab+0x5050>
   27584:	ldr	r0, [fp, #12]
   27588:	ldr	r1, [r0]
   2758c:	ldr	r0, [fp, #8]
   27590:	ldr	r0, [r0]
   27594:	str	r0, [sp, #48]	; 0x30
   27598:	sub	r0, r0, r1
   2759c:	str	r1, [sp, #52]	; 0x34
   275a0:	add	r4, ip, r0, lsl #1
   275a4:	add	r2, r2, r0
   275a8:	ldr	r0, [fp, #24]
   275ac:	cmp	r0, #2
   275b0:	blt	2765c <GetDataSlab+0x5140>
   275b4:	mov	r5, #0
   275b8:	add	ip, sp, #64	; 0x40
   275bc:	ldr	r1, [r3, r5, lsl #2]
   275c0:	mov	r0, r5
   275c4:	add	r1, r1, #1
   275c8:	str	r1, [r3, r5, lsl #2]
   275cc:	ldr	r5, [r8, r5, lsl #2]
   275d0:	sdiv	r6, r1, r5
   275d4:	mls	r1, r6, r5, r1
   275d8:	cmp	r1, #0
   275dc:	bne	2764c <GetDataSlab+0x5130>
   275e0:	mov	r1, #0
   275e4:	str	r1, [r3, r0, lsl #2]
   275e8:	add	r1, ip, r0, lsl #2
   275ec:	ldr	r5, [r1, #4]
   275f0:	sdiv	r1, r2, r5
   275f4:	mls	r1, r1, r5, r2
   275f8:	cmp	r1, #0
   275fc:	beq	27618 <GetDataSlab+0x50fc>
   27600:	ldr	r6, [ip, r0, lsl #2]
   27604:	ldr	r7, [lr, r0, lsl #2]
   27608:	sub	r1, r5, r1
   2760c:	mla	r1, r7, r6, r1
   27610:	add	r2, r1, r2
   27614:	b	27630 <GetDataSlab+0x5114>
   27618:	ldr	r1, [lr, r0, lsl #2]
   2761c:	cmp	r1, #0
   27620:	beq	27634 <GetDataSlab+0x5118>
   27624:	ldr	r7, [ip, r0, lsl #2]
   27628:	mla	r2, r7, r1, r2
   2762c:	mul	r1, r7, r1
   27630:	add	r4, r4, r1, lsl #1
   27634:	ldr	r1, [fp, #24]
   27638:	add	r5, r0, #1
   2763c:	add	r0, r0, #2
   27640:	cmp	r0, r1
   27644:	blt	275bc <GetDataSlab+0x50a0>
   27648:	b	2765c <GetDataSlab+0x5140>
   2764c:	ldr	r1, [sp, #44]	; 0x2c
   27650:	ldr	r0, [r1, r0, lsl #2]
   27654:	add	r4, r4, r0, lsl #1
   27658:	add	r2, r0, r2
   2765c:	ldr	r1, [sp, #56]	; 0x38
   27660:	add	r9, sl, r9
   27664:	mov	r0, #0
   27668:	cmp	r9, r1
   2766c:	blt	27540 <GetDataSlab+0x5024>
   27670:	b	242ac <GetDataSlab+0x1d90>
   27674:	ldr	r3, [sl]
   27678:	mov	sl, #0
   2767c:	add	r5, sp, #64	; 0x40
   27680:	sub	r0, r3, #1
   27684:	str	r0, [fp, #-72]	; 0xffffffb8
   27688:	ldr	r0, [r9]
   2768c:	mov	r9, lr
   27690:	str	r0, [sp, #64]	; 0x40
   27694:	str	r0, [sp, #48]	; 0x30
   27698:	ldr	r0, [fp, #24]
   2769c:	ldr	lr, [r8]
   276a0:	cmp	r0, #2
   276a4:	mov	r0, lr
   276a8:	str	lr, [sp, #56]	; 0x38
   276ac:	blt	27758 <GetDataSlab+0x523c>
   276b0:	ldr	r7, [sp, #48]	; 0x30
   276b4:	ldr	r1, [fp, #8]
   276b8:	mov	r0, #1
   276bc:	mov	sl, #0
   276c0:	mov	r2, lr
   276c4:	str	lr, [sp, #56]	; 0x38
   276c8:	mov	r8, r7
   276cc:	ldr	r6, [fp, #16]
   276d0:	mov	r2, r9
   276d4:	ldr	r6, [r6, r0, lsl #2]
   276d8:	str	r7, [r5, r0, lsl #2]
   276dc:	sub	r4, r6, #1
   276e0:	ldr	r6, [fp, #8]
   276e4:	str	r4, [r9, r0, lsl #2]
   276e8:	ldr	ip, [r6, r0, lsl #2]
   276ec:	mov	r6, #0
   276f0:	mov	r5, ip
   276f4:	mul	r7, r5, r7
   276f8:	ldr	r5, [r1, -r6, lsl #2]
   276fc:	add	r6, r6, #1
   27700:	cmp	r0, r6
   27704:	mul	r4, r4, r5
   27708:	bne	276f4 <GetDataSlab+0x51d8>
   2770c:	ldr	r6, [fp, #12]
   27710:	add	r5, sp, #64	; 0x40
   27714:	str	r4, [r2, r0, lsl #2]
   27718:	mov	r9, r2
   2771c:	ldr	r2, [sp, #56]	; 0x38
   27720:	add	r1, r1, #4
   27724:	str	r7, [r5, r0, lsl #2]
   27728:	ldr	r4, [r6, r0, lsl #2]
   2772c:	ldr	r6, [fp, #20]
   27730:	mla	sl, r4, r8, sl
   27734:	ldr	r4, [r6, r0, lsl #2]
   27738:	ldr	r6, [fp, #24]
   2773c:	add	r0, r0, #1
   27740:	mov	r8, r7
   27744:	mov	r7, ip
   27748:	mul	r2, r4, r2
   2774c:	cmp	r0, r6
   27750:	str	r2, [sp, #56]	; 0x38
   27754:	bne	276cc <GetDataSlab+0x51b0>
   27758:	ldr	r0, [sp, #52]	; 0x34
   2775c:	cmp	r3, #1
   27760:	add	r2, r0, sl, lsl #2
   27764:	bne	3381c <GetDataSlab+0x11300>
   27768:	ldr	r0, [sp, #56]	; 0x38
   2776c:	cmp	r0, #1
   27770:	ldr	r0, [fp, #20]
   27774:	blt	242a8 <GetDataSlab+0x1d8c>
   27778:	ldr	r7, [fp, #12]
   2777c:	add	r8, r0, #4
   27780:	add	r0, sp, #104	; 0x68
   27784:	mov	r9, #0
   27788:	orr	r3, r0, #4
   2778c:	sub	r0, fp, #72	; 0x48
   27790:	orr	r0, r0, #4
   27794:	str	r0, [sp, #44]	; 0x2c
   27798:	ldr	r0, [r7], #4
   2779c:	str	r0, [sp, #52]	; 0x34
   277a0:	ldr	r6, [sp, #52]	; 0x34
   277a4:	ldr	r1, [fp, #12]
   277a8:	ldr	r0, [sp, #48]	; 0x30
   277ac:	cmp	lr, #1
   277b0:	add	sl, r6, sl
   277b4:	add	r4, r2, r6, lsl #2
   277b8:	blt	277f0 <GetDataSlab+0x52d4>
   277bc:	ldr	r0, [sp, #60]	; 0x3c
   277c0:	ldr	r6, [fp, #20]
   277c4:	add	r5, r0, r9
   277c8:	mov	r0, #0
   277cc:	ldr	r2, [r4, r0, lsl #2]
   277d0:	strb	r2, [r5, r0]
   277d4:	add	r0, r0, #1
   277d8:	ldr	lr, [r6]
   277dc:	cmp	r0, lr
   277e0:	blt	277cc <GetDataSlab+0x52b0>
   277e4:	ldr	r0, [fp, #8]
   277e8:	ldr	r6, [r1]
   277ec:	ldr	r0, [r0]
   277f0:	str	r0, [sp, #48]	; 0x30
   277f4:	sub	r0, r0, r6
   277f8:	str	r6, [sp, #52]	; 0x34
   277fc:	add	r2, r4, r0, lsl #2
   27800:	add	sl, sl, r0
   27804:	ldr	r0, [fp, #24]
   27808:	add	r4, sp, #64	; 0x40
   2780c:	cmp	r0, #2
   27810:	blt	278bc <GetDataSlab+0x53a0>
   27814:	mov	r5, #0
   27818:	mov	r0, r5
   2781c:	ldr	r5, [r3, r5, lsl #2]
   27820:	add	r5, r5, #1
   27824:	str	r5, [r3, r0, lsl #2]
   27828:	ldr	r1, [r8, r0, lsl #2]
   2782c:	sdiv	r6, r5, r1
   27830:	mls	r1, r6, r1, r5
   27834:	cmp	r1, #0
   27838:	bne	278ac <GetDataSlab+0x5390>
   2783c:	mov	r1, #0
   27840:	str	r1, [r3, r0, lsl #2]
   27844:	add	r1, r4, r0, lsl #2
   27848:	ldr	r5, [r1, #4]
   2784c:	sdiv	r1, sl, r5
   27850:	mls	ip, r1, r5, sl
   27854:	cmp	ip, #0
   27858:	beq	27874 <GetDataSlab+0x5358>
   2785c:	ldr	r1, [r4, r0, lsl #2]
   27860:	ldr	r6, [r7, r0, lsl #2]
   27864:	sub	r5, r5, ip
   27868:	mla	r1, r6, r1, r5
   2786c:	add	sl, r1, sl
   27870:	b	27890 <GetDataSlab+0x5374>
   27874:	ldr	r5, [r7, r0, lsl #2]
   27878:	add	r4, sp, #64	; 0x40
   2787c:	cmp	r5, #0
   27880:	beq	27894 <GetDataSlab+0x5378>
   27884:	ldr	r1, [r4, r0, lsl #2]
   27888:	mla	sl, r1, r5, sl
   2788c:	mul	r1, r1, r5
   27890:	add	r2, r2, r1, lsl #2
   27894:	ldr	r1, [fp, #24]
   27898:	add	r5, r0, #1
   2789c:	add	r0, r0, #2
   278a0:	cmp	r0, r1
   278a4:	blt	27818 <GetDataSlab+0x52fc>
   278a8:	b	278bc <GetDataSlab+0x53a0>
   278ac:	ldr	r1, [sp, #44]	; 0x2c
   278b0:	ldr	r0, [r1, r0, lsl #2]
   278b4:	add	r2, r2, r0, lsl #2
   278b8:	add	sl, r0, sl
   278bc:	ldr	r1, [sp, #56]	; 0x38
   278c0:	add	r9, lr, r9
   278c4:	mov	r0, #0
   278c8:	cmp	r9, r1
   278cc:	blt	277a0 <GetDataSlab+0x5284>
   278d0:	b	242ac <GetDataSlab+0x1d90>
   278d4:	ldr	r3, [sl]
   278d8:	add	r5, sp, #64	; 0x40
   278dc:	sub	r0, r3, #1
   278e0:	str	r0, [fp, #-72]	; 0xffffffb8
   278e4:	ldr	r0, [r9]
   278e8:	mov	r9, lr
   278ec:	mov	lr, #0
   278f0:	str	r0, [sp, #64]	; 0x40
   278f4:	str	r0, [sp, #48]	; 0x30
   278f8:	ldr	r0, [fp, #24]
   278fc:	ldr	sl, [r8]
   27900:	cmp	r0, #2
   27904:	mov	r0, sl
   27908:	str	sl, [sp, #56]	; 0x38
   2790c:	blt	279b8 <GetDataSlab+0x549c>
   27910:	ldr	r7, [sp, #48]	; 0x30
   27914:	ldr	r1, [fp, #8]
   27918:	mov	r0, #1
   2791c:	mov	lr, #0
   27920:	mov	r2, sl
   27924:	str	sl, [sp, #56]	; 0x38
   27928:	mov	r8, r7
   2792c:	ldr	r6, [fp, #16]
   27930:	mov	r2, r9
   27934:	ldr	r6, [r6, r0, lsl #2]
   27938:	str	r7, [r5, r0, lsl #2]
   2793c:	sub	r4, r6, #1
   27940:	ldr	r6, [fp, #8]
   27944:	str	r4, [r9, r0, lsl #2]
   27948:	ldr	ip, [r6, r0, lsl #2]
   2794c:	mov	r6, #0
   27950:	mov	r5, ip
   27954:	mul	r7, r5, r7
   27958:	ldr	r5, [r1, -r6, lsl #2]
   2795c:	add	r6, r6, #1
   27960:	cmp	r0, r6
   27964:	mul	r4, r4, r5
   27968:	bne	27954 <GetDataSlab+0x5438>
   2796c:	ldr	r6, [fp, #12]
   27970:	add	r5, sp, #64	; 0x40
   27974:	str	r4, [r2, r0, lsl #2]
   27978:	mov	r9, r2
   2797c:	ldr	r2, [sp, #56]	; 0x38
   27980:	add	r1, r1, #4
   27984:	str	r7, [r5, r0, lsl #2]
   27988:	ldr	r4, [r6, r0, lsl #2]
   2798c:	ldr	r6, [fp, #20]
   27990:	mla	lr, r4, r8, lr
   27994:	ldr	r4, [r6, r0, lsl #2]
   27998:	ldr	r6, [fp, #24]
   2799c:	add	r0, r0, #1
   279a0:	mov	r8, r7
   279a4:	mov	r7, ip
   279a8:	mul	r2, r4, r2
   279ac:	cmp	r0, r6
   279b0:	str	r2, [sp, #56]	; 0x38
   279b4:	bne	2792c <GetDataSlab+0x5410>
   279b8:	ldr	r0, [sp, #52]	; 0x34
   279bc:	cmp	r3, #1
   279c0:	add	r2, r0, lr, lsl #2
   279c4:	bne	339b8 <GetDataSlab+0x1149c>
   279c8:	ldr	r0, [sp, #56]	; 0x38
   279cc:	cmp	r0, #1
   279d0:	ldr	r0, [fp, #20]
   279d4:	blt	242a8 <GetDataSlab+0x1d8c>
   279d8:	ldr	r7, [fp, #12]
   279dc:	add	r8, r0, #4
   279e0:	add	r0, sp, #104	; 0x68
   279e4:	mov	r9, #0
   279e8:	orr	r3, r0, #4
   279ec:	sub	r0, fp, #72	; 0x48
   279f0:	orr	r0, r0, #4
   279f4:	str	r0, [sp, #44]	; 0x2c
   279f8:	ldr	r0, [r7], #4
   279fc:	str	r0, [sp, #52]	; 0x34
   27a00:	ldr	r6, [sp, #52]	; 0x34
   27a04:	ldr	r1, [fp, #12]
   27a08:	ldr	r0, [sp, #48]	; 0x30
   27a0c:	cmp	sl, #1
   27a10:	add	ip, r6, lr
   27a14:	add	r4, r2, r6, lsl #2
   27a18:	blt	27a50 <GetDataSlab+0x5534>
   27a1c:	ldr	r0, [sp, #60]	; 0x3c
   27a20:	ldr	r6, [fp, #20]
   27a24:	add	r5, r0, r9
   27a28:	mov	r0, #0
   27a2c:	ldr	r2, [r4, r0, lsl #2]
   27a30:	strb	r2, [r5, r0]
   27a34:	add	r0, r0, #1
   27a38:	ldr	sl, [r6]
   27a3c:	cmp	r0, sl
   27a40:	blt	27a2c <GetDataSlab+0x5510>
   27a44:	ldr	r0, [fp, #8]
   27a48:	ldr	r6, [r1]
   27a4c:	ldr	r0, [r0]
   27a50:	str	r0, [sp, #48]	; 0x30
   27a54:	sub	r0, r0, r6
   27a58:	str	r6, [sp, #52]	; 0x34
   27a5c:	add	r2, r4, r0, lsl #2
   27a60:	add	lr, ip, r0
   27a64:	ldr	r0, [fp, #24]
   27a68:	add	r4, sp, #64	; 0x40
   27a6c:	cmp	r0, #2
   27a70:	blt	27b1c <GetDataSlab+0x5600>
   27a74:	mov	r5, #0
   27a78:	mov	r0, r5
   27a7c:	ldr	r5, [r3, r5, lsl #2]
   27a80:	add	r5, r5, #1
   27a84:	str	r5, [r3, r0, lsl #2]
   27a88:	ldr	r1, [r8, r0, lsl #2]
   27a8c:	sdiv	r6, r5, r1
   27a90:	mls	r1, r6, r1, r5
   27a94:	cmp	r1, #0
   27a98:	bne	27b0c <GetDataSlab+0x55f0>
   27a9c:	mov	r1, #0
   27aa0:	str	r1, [r3, r0, lsl #2]
   27aa4:	add	r1, r4, r0, lsl #2
   27aa8:	ldr	r5, [r1, #4]
   27aac:	sdiv	r1, lr, r5
   27ab0:	mls	ip, r1, r5, lr
   27ab4:	cmp	ip, #0
   27ab8:	beq	27ad4 <GetDataSlab+0x55b8>
   27abc:	ldr	r1, [r4, r0, lsl #2]
   27ac0:	ldr	r6, [r7, r0, lsl #2]
   27ac4:	sub	r5, r5, ip
   27ac8:	mla	r1, r6, r1, r5
   27acc:	add	lr, r1, lr
   27ad0:	b	27af0 <GetDataSlab+0x55d4>
   27ad4:	ldr	r5, [r7, r0, lsl #2]
   27ad8:	add	r4, sp, #64	; 0x40
   27adc:	cmp	r5, #0
   27ae0:	beq	27af4 <GetDataSlab+0x55d8>
   27ae4:	ldr	r1, [r4, r0, lsl #2]
   27ae8:	mla	lr, r1, r5, lr
   27aec:	mul	r1, r1, r5
   27af0:	add	r2, r2, r1, lsl #2
   27af4:	ldr	r1, [fp, #24]
   27af8:	add	r5, r0, #1
   27afc:	add	r0, r0, #2
   27b00:	cmp	r0, r1
   27b04:	blt	27a78 <GetDataSlab+0x555c>
   27b08:	b	27b1c <GetDataSlab+0x5600>
   27b0c:	ldr	r1, [sp, #44]	; 0x2c
   27b10:	ldr	r0, [r1, r0, lsl #2]
   27b14:	add	r2, r2, r0, lsl #2
   27b18:	add	lr, r0, lr
   27b1c:	ldr	r1, [sp, #56]	; 0x38
   27b20:	add	r9, sl, r9
   27b24:	mov	r0, #0
   27b28:	cmp	r9, r1
   27b2c:	blt	27a00 <GetDataSlab+0x54e4>
   27b30:	b	242ac <GetDataSlab+0x1d90>
   27b34:	ldr	r3, [sl]
   27b38:	mov	sl, #0
   27b3c:	add	r5, sp, #64	; 0x40
   27b40:	sub	r0, r3, #1
   27b44:	str	r0, [fp, #-72]	; 0xffffffb8
   27b48:	ldr	r0, [r9]
   27b4c:	str	r0, [sp, #64]	; 0x40
   27b50:	str	r0, [sp, #48]	; 0x30
   27b54:	ldr	r0, [fp, #24]
   27b58:	ldr	ip, [r8]
   27b5c:	cmp	r0, #2
   27b60:	mov	r0, ip
   27b64:	str	ip, [sp, #56]	; 0x38
   27b68:	blt	27c08 <GetDataSlab+0x56ec>
   27b6c:	ldr	r7, [sp, #48]	; 0x30
   27b70:	mov	r0, #1
   27b74:	mov	sl, #0
   27b78:	mov	r1, r9
   27b7c:	mov	r2, ip
   27b80:	str	ip, [sp, #56]	; 0x38
   27b84:	mov	r8, r7
   27b88:	ldr	r6, [fp, #16]
   27b8c:	ldr	r6, [r6, r0, lsl #2]
   27b90:	str	r7, [r5, r0, lsl #2]
   27b94:	sub	r4, r6, #1
   27b98:	mov	r6, #0
   27b9c:	str	r4, [lr, r0, lsl #2]
   27ba0:	ldr	r2, [r9, r0, lsl #2]
   27ba4:	mov	r5, r2
   27ba8:	mul	r7, r5, r7
   27bac:	ldr	r5, [r1, -r6, lsl #2]
   27bb0:	add	r6, r6, #1
   27bb4:	cmp	r0, r6
   27bb8:	mul	r4, r4, r5
   27bbc:	bne	27ba8 <GetDataSlab+0x568c>
   27bc0:	ldr	r6, [fp, #12]
   27bc4:	add	r5, sp, #64	; 0x40
   27bc8:	str	r4, [lr, r0, lsl #2]
   27bcc:	add	r1, r1, #4
   27bd0:	str	r7, [r5, r0, lsl #2]
   27bd4:	ldr	r4, [r6, r0, lsl #2]
   27bd8:	ldr	r6, [fp, #20]
   27bdc:	mla	sl, r4, r8, sl
   27be0:	ldr	r4, [r6, r0, lsl #2]
   27be4:	ldr	r6, [sp, #56]	; 0x38
   27be8:	add	r0, r0, #1
   27bec:	mov	r8, r7
   27bf0:	mov	r7, r2
   27bf4:	mul	r6, r4, r6
   27bf8:	str	r6, [sp, #56]	; 0x38
   27bfc:	ldr	r6, [fp, #24]
   27c00:	cmp	r0, r6
   27c04:	bne	27b88 <GetDataSlab+0x566c>
   27c08:	ldr	r0, [sp, #52]	; 0x34
   27c0c:	cmp	r3, #1
   27c10:	add	r2, r0, sl, lsl #2
   27c14:	bne	33b54 <GetDataSlab+0x11638>
   27c18:	ldr	r0, [sp, #56]	; 0x38
   27c1c:	ldr	lr, [fp, #12]
   27c20:	cmp	r0, #1
   27c24:	ldr	r0, [fp, #20]
   27c28:	blt	242a8 <GetDataSlab+0x1d8c>
   27c2c:	add	r9, r0, #4
   27c30:	add	r0, sp, #104	; 0x68
   27c34:	mov	r8, #0
   27c38:	orr	r3, r0, #4
   27c3c:	sub	r0, fp, #72	; 0x48
   27c40:	orr	r0, r0, #4
   27c44:	str	r0, [sp, #44]	; 0x2c
   27c48:	ldr	r0, [lr], #4
   27c4c:	str	r0, [sp, #52]	; 0x34
   27c50:	ldr	r1, [sp, #52]	; 0x34
   27c54:	ldr	r0, [sp, #48]	; 0x30
   27c58:	cmp	ip, #1
   27c5c:	add	sl, r1, sl
   27c60:	add	r6, r2, r1, lsl #2
   27c64:	blt	27cb0 <GetDataSlab+0x5794>
   27c68:	ldr	r0, [sp, #60]	; 0x3c
   27c6c:	ldr	r1, [fp, #20]
   27c70:	mov	r4, r6
   27c74:	add	r5, r0, r8
   27c78:	mov	r0, #0
   27c7c:	vldr	s0, [r4]
   27c80:	add	r4, r4, #4
   27c84:	vcvt.s32.f32	s0, s0
   27c88:	vmov	r2, s0
   27c8c:	strb	r2, [r5, r0]
   27c90:	add	r0, r0, #1
   27c94:	ldr	ip, [r1]
   27c98:	cmp	r0, ip
   27c9c:	blt	27c7c <GetDataSlab+0x5760>
   27ca0:	ldr	r0, [fp, #12]
   27ca4:	ldr	r1, [r0]
   27ca8:	ldr	r0, [fp, #8]
   27cac:	ldr	r0, [r0]
   27cb0:	str	r0, [sp, #48]	; 0x30
   27cb4:	sub	r0, r0, r1
   27cb8:	str	r1, [sp, #52]	; 0x34
   27cbc:	add	r2, r6, r0, lsl #2
   27cc0:	add	sl, sl, r0
   27cc4:	ldr	r0, [fp, #24]
   27cc8:	cmp	r0, #2
   27ccc:	blt	27d78 <GetDataSlab+0x585c>
   27cd0:	mov	r5, #0
   27cd4:	add	r4, sp, #64	; 0x40
   27cd8:	ldr	r6, [r3, r5, lsl #2]
   27cdc:	mov	r0, r5
   27ce0:	add	r6, r6, #1
   27ce4:	str	r6, [r3, r5, lsl #2]
   27ce8:	ldr	r5, [r9, r5, lsl #2]
   27cec:	sdiv	r1, r6, r5
   27cf0:	mls	r1, r1, r5, r6
   27cf4:	cmp	r1, #0
   27cf8:	bne	27d68 <GetDataSlab+0x584c>
   27cfc:	mov	r1, #0
   27d00:	str	r1, [r3, r0, lsl #2]
   27d04:	add	r1, r4, r0, lsl #2
   27d08:	ldr	r5, [r1, #4]
   27d0c:	sdiv	r1, sl, r5
   27d10:	mls	r6, r1, r5, sl
   27d14:	cmp	r6, #0
   27d18:	beq	27d34 <GetDataSlab+0x5818>
   27d1c:	ldr	r1, [r4, r0, lsl #2]
   27d20:	ldr	r7, [lr, r0, lsl #2]
   27d24:	sub	r6, r5, r6
   27d28:	mla	r1, r7, r1, r6
   27d2c:	add	sl, r1, sl
   27d30:	b	27d4c <GetDataSlab+0x5830>
   27d34:	ldr	r6, [lr, r0, lsl #2]
   27d38:	cmp	r6, #0
   27d3c:	beq	27d50 <GetDataSlab+0x5834>
   27d40:	ldr	r1, [r4, r0, lsl #2]
   27d44:	mla	sl, r1, r6, sl
   27d48:	mul	r1, r1, r6
   27d4c:	add	r2, r2, r1, lsl #2
   27d50:	ldr	r1, [fp, #24]
   27d54:	add	r5, r0, #1
   27d58:	add	r0, r0, #2
   27d5c:	cmp	r0, r1
   27d60:	blt	27cd8 <GetDataSlab+0x57bc>
   27d64:	b	27d78 <GetDataSlab+0x585c>
   27d68:	ldr	r1, [sp, #44]	; 0x2c
   27d6c:	ldr	r0, [r1, r0, lsl #2]
   27d70:	add	r2, r2, r0, lsl #2
   27d74:	add	sl, r0, sl
   27d78:	ldr	r1, [sp, #56]	; 0x38
   27d7c:	add	r8, ip, r8
   27d80:	mov	r0, #0
   27d84:	cmp	r8, r1
   27d88:	blt	27c50 <GetDataSlab+0x5734>
   27d8c:	b	242ac <GetDataSlab+0x1d90>
   27d90:	ldr	r3, [sl]
   27d94:	mov	sl, #0
   27d98:	add	r5, sp, #64	; 0x40
   27d9c:	sub	r0, r3, #1
   27da0:	str	r0, [fp, #-72]	; 0xffffffb8
   27da4:	ldr	r0, [r9]
   27da8:	str	r0, [sp, #64]	; 0x40
   27dac:	str	r0, [sp, #48]	; 0x30
   27db0:	ldr	r0, [fp, #24]
   27db4:	ldr	ip, [r8]
   27db8:	cmp	r0, #2
   27dbc:	mov	r0, ip
   27dc0:	str	ip, [sp, #56]	; 0x38
   27dc4:	blt	27e64 <GetDataSlab+0x5948>
   27dc8:	ldr	r7, [sp, #48]	; 0x30
   27dcc:	mov	r0, #1
   27dd0:	mov	sl, #0
   27dd4:	mov	r1, r9
   27dd8:	mov	r2, ip
   27ddc:	str	ip, [sp, #56]	; 0x38
   27de0:	mov	r8, r7
   27de4:	ldr	r6, [fp, #16]
   27de8:	ldr	r6, [r6, r0, lsl #2]
   27dec:	str	r7, [r5, r0, lsl #2]
   27df0:	sub	r4, r6, #1
   27df4:	mov	r6, #0
   27df8:	str	r4, [lr, r0, lsl #2]
   27dfc:	ldr	r2, [r9, r0, lsl #2]
   27e00:	mov	r5, r2
   27e04:	mul	r7, r5, r7
   27e08:	ldr	r5, [r1, -r6, lsl #2]
   27e0c:	add	r6, r6, #1
   27e10:	cmp	r0, r6
   27e14:	mul	r4, r4, r5
   27e18:	bne	27e04 <GetDataSlab+0x58e8>
   27e1c:	ldr	r6, [fp, #12]
   27e20:	add	r5, sp, #64	; 0x40
   27e24:	str	r4, [lr, r0, lsl #2]
   27e28:	add	r1, r1, #4
   27e2c:	str	r7, [r5, r0, lsl #2]
   27e30:	ldr	r4, [r6, r0, lsl #2]
   27e34:	ldr	r6, [fp, #20]
   27e38:	mla	sl, r4, r8, sl
   27e3c:	ldr	r4, [r6, r0, lsl #2]
   27e40:	ldr	r6, [sp, #56]	; 0x38
   27e44:	add	r0, r0, #1
   27e48:	mov	r8, r7
   27e4c:	mov	r7, r2
   27e50:	mul	r6, r4, r6
   27e54:	str	r6, [sp, #56]	; 0x38
   27e58:	ldr	r6, [fp, #24]
   27e5c:	cmp	r0, r6
   27e60:	bne	27de4 <GetDataSlab+0x58c8>
   27e64:	ldr	r0, [sp, #52]	; 0x34
   27e68:	cmp	r3, #1
   27e6c:	add	r2, r0, sl, lsl #3
   27e70:	bne	33cf8 <GetDataSlab+0x117dc>
   27e74:	ldr	r0, [sp, #56]	; 0x38
   27e78:	ldr	lr, [fp, #12]
   27e7c:	cmp	r0, #1
   27e80:	ldr	r0, [fp, #20]
   27e84:	blt	242a8 <GetDataSlab+0x1d8c>
   27e88:	add	r9, r0, #4
   27e8c:	add	r0, sp, #104	; 0x68
   27e90:	mov	r8, #0
   27e94:	orr	r3, r0, #4
   27e98:	sub	r0, fp, #72	; 0x48
   27e9c:	orr	r0, r0, #4
   27ea0:	str	r0, [sp, #44]	; 0x2c
   27ea4:	ldr	r0, [lr], #4
   27ea8:	str	r0, [sp, #52]	; 0x34
   27eac:	ldr	r1, [sp, #52]	; 0x34
   27eb0:	ldr	r0, [sp, #48]	; 0x30
   27eb4:	cmp	ip, #1
   27eb8:	add	sl, r1, sl
   27ebc:	add	r6, r2, r1, lsl #3
   27ec0:	blt	27f0c <GetDataSlab+0x59f0>
   27ec4:	ldr	r0, [sp, #60]	; 0x3c
   27ec8:	ldr	r1, [fp, #20]
   27ecc:	mov	r4, r6
   27ed0:	add	r5, r0, r8
   27ed4:	mov	r0, #0
   27ed8:	vldr	d16, [r4]
   27edc:	add	r4, r4, #8
   27ee0:	vcvt.s32.f64	s0, d16
   27ee4:	vmov	r2, s0
   27ee8:	strb	r2, [r5, r0]
   27eec:	add	r0, r0, #1
   27ef0:	ldr	ip, [r1]
   27ef4:	cmp	r0, ip
   27ef8:	blt	27ed8 <GetDataSlab+0x59bc>
   27efc:	ldr	r0, [fp, #12]
   27f00:	ldr	r1, [r0]
   27f04:	ldr	r0, [fp, #8]
   27f08:	ldr	r0, [r0]
   27f0c:	str	r0, [sp, #48]	; 0x30
   27f10:	sub	r0, r0, r1
   27f14:	str	r1, [sp, #52]	; 0x34
   27f18:	add	r2, r6, r0, lsl #3
   27f1c:	add	sl, sl, r0
   27f20:	ldr	r0, [fp, #24]
   27f24:	cmp	r0, #2
   27f28:	blt	27fd4 <GetDataSlab+0x5ab8>
   27f2c:	mov	r5, #0
   27f30:	add	r4, sp, #64	; 0x40
   27f34:	ldr	r6, [r3, r5, lsl #2]
   27f38:	mov	r0, r5
   27f3c:	add	r6, r6, #1
   27f40:	str	r6, [r3, r5, lsl #2]
   27f44:	ldr	r5, [r9, r5, lsl #2]
   27f48:	sdiv	r1, r6, r5
   27f4c:	mls	r1, r1, r5, r6
   27f50:	cmp	r1, #0
   27f54:	bne	27fc4 <GetDataSlab+0x5aa8>
   27f58:	mov	r1, #0
   27f5c:	str	r1, [r3, r0, lsl #2]
   27f60:	add	r1, r4, r0, lsl #2
   27f64:	ldr	r5, [r1, #4]
   27f68:	sdiv	r1, sl, r5
   27f6c:	mls	r6, r1, r5, sl
   27f70:	cmp	r6, #0
   27f74:	beq	27f90 <GetDataSlab+0x5a74>
   27f78:	ldr	r1, [r4, r0, lsl #2]
   27f7c:	ldr	r7, [lr, r0, lsl #2]
   27f80:	sub	r6, r5, r6
   27f84:	mla	r1, r7, r1, r6
   27f88:	add	sl, r1, sl
   27f8c:	b	27fa8 <GetDataSlab+0x5a8c>
   27f90:	ldr	r6, [lr, r0, lsl #2]
   27f94:	cmp	r6, #0
   27f98:	beq	27fac <GetDataSlab+0x5a90>
   27f9c:	ldr	r1, [r4, r0, lsl #2]
   27fa0:	mla	sl, r1, r6, sl
   27fa4:	mul	r1, r1, r6
   27fa8:	add	r2, r2, r1, lsl #3
   27fac:	ldr	r1, [fp, #24]
   27fb0:	add	r5, r0, #1
   27fb4:	add	r0, r0, #2
   27fb8:	cmp	r0, r1
   27fbc:	blt	27f34 <GetDataSlab+0x5a18>
   27fc0:	b	27fd4 <GetDataSlab+0x5ab8>
   27fc4:	ldr	r1, [sp, #44]	; 0x2c
   27fc8:	ldr	r0, [r1, r0, lsl #2]
   27fcc:	add	r2, r2, r0, lsl #3
   27fd0:	add	sl, r0, sl
   27fd4:	ldr	r1, [sp, #56]	; 0x38
   27fd8:	add	r8, ip, r8
   27fdc:	mov	r0, #0
   27fe0:	cmp	r8, r1
   27fe4:	blt	27eac <GetDataSlab+0x5990>
   27fe8:	b	242ac <GetDataSlab+0x1d90>
   27fec:	ldr	r5, [sl]
   27ff0:	add	r6, sp, #64	; 0x40
   27ff4:	str	r3, [sp, #48]	; 0x30
   27ff8:	sub	r0, r5, #1
   27ffc:	str	r0, [fp, #-72]	; 0xffffffb8
   28000:	ldr	r0, [r9]
   28004:	str	r0, [sp, #64]	; 0x40
   28008:	str	r0, [sp, #44]	; 0x2c
   2800c:	ldr	r0, [fp, #24]
   28010:	ldr	r1, [r8]
   28014:	mov	r8, #0
   28018:	cmp	r0, #2
   2801c:	mov	r0, r1
   28020:	str	r1, [sp, #56]	; 0x38
   28024:	blt	280cc <GetDataSlab+0x5bb0>
   28028:	ldr	r7, [sp, #44]	; 0x2c
   2802c:	mov	sl, lr
   28030:	mov	r0, #1
   28034:	mov	r8, #0
   28038:	mov	r2, r9
   2803c:	mov	r3, r1
   28040:	str	r1, [sp, #56]	; 0x38
   28044:	mov	lr, r7
   28048:	ldr	r3, [fp, #16]
   2804c:	ldr	r3, [r3, r0, lsl #2]
   28050:	str	r7, [r6, r0, lsl #2]
   28054:	mov	r6, #0
   28058:	sub	r4, r3, #1
   2805c:	str	r4, [sl, r0, lsl #2]
   28060:	ldr	ip, [r9, r0, lsl #2]
   28064:	mov	r3, ip
   28068:	mul	r7, r3, r7
   2806c:	ldr	r3, [r2, -r6, lsl #2]
   28070:	add	r6, r6, #1
   28074:	cmp	r0, r6
   28078:	mul	r4, r4, r3
   2807c:	bne	28068 <GetDataSlab+0x5b4c>
   28080:	ldr	r3, [fp, #12]
   28084:	add	r6, sp, #64	; 0x40
   28088:	sub	sl, fp, #72	; 0x48
   2808c:	add	r2, r2, #4
   28090:	str	r4, [sl, r0, lsl #2]
   28094:	str	r7, [r6, r0, lsl #2]
   28098:	ldr	r4, [sp, #56]	; 0x38
   2809c:	ldr	r3, [r3, r0, lsl #2]
   280a0:	mla	r8, r3, lr, r8
   280a4:	ldr	r3, [fp, #20]
   280a8:	mov	lr, r7
   280ac:	mov	r7, ip
   280b0:	ldr	r3, [r3, r0, lsl #2]
   280b4:	add	r0, r0, #1
   280b8:	mul	r4, r3, r4
   280bc:	ldr	r3, [fp, #24]
   280c0:	str	r4, [sp, #56]	; 0x38
   280c4:	cmp	r0, r3
   280c8:	bne	28048 <GetDataSlab+0x5b2c>
   280cc:	ldr	r0, [sp, #52]	; 0x34
   280d0:	cmp	r5, #1
   280d4:	add	r4, r0, r8, lsl #3
   280d8:	bne	33e9c <GetDataSlab+0x11980>
   280dc:	ldr	r0, [sp, #56]	; 0x38
   280e0:	ldr	r9, [fp, #12]
   280e4:	cmp	r0, #1
   280e8:	blt	34020 <GetDataSlab+0x11b04>
   280ec:	ldr	r0, [fp, #20]
   280f0:	ldr	r3, [r9], #4
   280f4:	mov	sl, #0
   280f8:	add	lr, r0, #4
   280fc:	add	r0, sp, #104	; 0x68
   28100:	orr	r2, r0, #4
   28104:	sub	r0, fp, #72	; 0x48
   28108:	orr	r0, r0, #4
   2810c:	str	r0, [sp, #36]	; 0x24
   28110:	add	r8, r3, r8
   28114:	add	ip, r4, r3, lsl #3
   28118:	cmp	r1, #1
   2811c:	blt	28160 <GetDataSlab+0x5c44>
   28120:	ldr	r0, [sp, #60]	; 0x3c
   28124:	ldr	r5, [fp, #20]
   28128:	mov	r3, #0
   2812c:	mov	r4, ip
   28130:	add	r7, r0, sl
   28134:	ldrb	r0, [r4], #8
   28138:	strb	r0, [r7, r3]
   2813c:	add	r3, r3, #1
   28140:	ldr	r1, [r5]
   28144:	cmp	r3, r1
   28148:	blt	28134 <GetDataSlab+0x5c18>
   2814c:	ldr	r0, [fp, #12]
   28150:	ldr	r3, [r0]
   28154:	ldr	r0, [fp, #8]
   28158:	ldr	r0, [r0]
   2815c:	str	r0, [sp, #44]	; 0x2c
   28160:	ldr	r0, [sp, #44]	; 0x2c
   28164:	str	r3, [sp, #40]	; 0x28
   28168:	sub	r0, r0, r3
   2816c:	add	r4, ip, r0, lsl #3
   28170:	add	r8, r8, r0
   28174:	ldr	r0, [fp, #24]
   28178:	cmp	r0, #2
   2817c:	blt	28228 <GetDataSlab+0x5d0c>
   28180:	mov	r3, #0
   28184:	add	ip, sp, #64	; 0x40
   28188:	ldr	r0, [r2, r3, lsl #2]
   2818c:	mov	r7, r3
   28190:	add	r0, r0, #1
   28194:	str	r0, [r2, r3, lsl #2]
   28198:	ldr	r3, [lr, r3, lsl #2]
   2819c:	sdiv	r6, r0, r3
   281a0:	mls	r0, r6, r3, r0
   281a4:	cmp	r0, #0
   281a8:	bne	28218 <GetDataSlab+0x5cfc>
   281ac:	mov	r0, #0
   281b0:	str	r0, [r2, r7, lsl #2]
   281b4:	add	r0, ip, r7, lsl #2
   281b8:	ldr	r3, [r0, #4]
   281bc:	sdiv	r0, r8, r3
   281c0:	mls	r0, r0, r3, r8
   281c4:	cmp	r0, #0
   281c8:	beq	281e4 <GetDataSlab+0x5cc8>
   281cc:	ldr	r6, [ip, r7, lsl #2]
   281d0:	ldr	r5, [r9, r7, lsl #2]
   281d4:	sub	r0, r3, r0
   281d8:	mla	r0, r5, r6, r0
   281dc:	add	r8, r0, r8
   281e0:	b	281fc <GetDataSlab+0x5ce0>
   281e4:	ldr	r0, [r9, r7, lsl #2]
   281e8:	cmp	r0, #0
   281ec:	beq	28200 <GetDataSlab+0x5ce4>
   281f0:	ldr	r3, [ip, r7, lsl #2]
   281f4:	mla	r8, r3, r0, r8
   281f8:	mul	r0, r3, r0
   281fc:	add	r4, r4, r0, lsl #3
   28200:	add	r3, r7, #1
   28204:	add	r0, r7, #2
   28208:	ldr	r7, [fp, #24]
   2820c:	cmp	r0, r7
   28210:	blt	28188 <GetDataSlab+0x5c6c>
   28214:	b	28228 <GetDataSlab+0x5d0c>
   28218:	ldr	r0, [sp, #36]	; 0x24
   2821c:	ldr	r0, [r0, r7, lsl #2]
   28220:	add	r4, r4, r0, lsl #3
   28224:	add	r8, r0, r8
   28228:	ldr	r0, [sp, #56]	; 0x38
   2822c:	ldr	r3, [sp, #40]	; 0x28
   28230:	add	sl, r1, sl
   28234:	cmp	sl, r0
   28238:	blt	28110 <GetDataSlab+0x5bf4>
   2823c:	b	34020 <GetDataSlab+0x11b04>
   28240:	ldr	r3, [sl]
   28244:	add	r5, sp, #64	; 0x40
   28248:	sub	r0, r3, #1
   2824c:	str	r0, [fp, #-72]	; 0xffffffb8
   28250:	ldr	r0, [r9]
   28254:	mov	r9, lr
   28258:	mov	lr, #0
   2825c:	str	r0, [sp, #64]	; 0x40
   28260:	str	r0, [sp, #48]	; 0x30
   28264:	ldr	r0, [fp, #24]
   28268:	ldr	sl, [r8]
   2826c:	cmp	r0, #2
   28270:	mov	r0, sl
   28274:	str	sl, [sp, #56]	; 0x38
   28278:	blt	28324 <GetDataSlab+0x5e08>
   2827c:	ldr	r7, [sp, #48]	; 0x30
   28280:	ldr	r1, [fp, #8]
   28284:	mov	r0, #1
   28288:	mov	lr, #0
   2828c:	mov	r2, sl
   28290:	str	sl, [sp, #56]	; 0x38
   28294:	mov	r8, r7
   28298:	ldr	r6, [fp, #16]
   2829c:	mov	r2, r9
   282a0:	ldr	r6, [r6, r0, lsl #2]
   282a4:	str	r7, [r5, r0, lsl #2]
   282a8:	sub	r4, r6, #1
   282ac:	ldr	r6, [fp, #8]
   282b0:	str	r4, [r9, r0, lsl #2]
   282b4:	ldr	ip, [r6, r0, lsl #2]
   282b8:	mov	r6, #0
   282bc:	mov	r5, ip
   282c0:	mul	r7, r5, r7
   282c4:	ldr	r5, [r1, -r6, lsl #2]
   282c8:	add	r6, r6, #1
   282cc:	cmp	r0, r6
   282d0:	mul	r4, r4, r5
   282d4:	bne	282c0 <GetDataSlab+0x5da4>
   282d8:	ldr	r6, [fp, #12]
   282dc:	add	r5, sp, #64	; 0x40
   282e0:	str	r4, [r2, r0, lsl #2]
   282e4:	mov	r9, r2
   282e8:	ldr	r2, [sp, #56]	; 0x38
   282ec:	add	r1, r1, #4
   282f0:	str	r7, [r5, r0, lsl #2]
   282f4:	ldr	r4, [r6, r0, lsl #2]
   282f8:	ldr	r6, [fp, #20]
   282fc:	mla	lr, r4, r8, lr
   28300:	ldr	r4, [r6, r0, lsl #2]
   28304:	ldr	r6, [fp, #24]
   28308:	add	r0, r0, #1
   2830c:	mov	r8, r7
   28310:	mov	r7, ip
   28314:	mul	r2, r4, r2
   28318:	cmp	r0, r6
   2831c:	str	r2, [sp, #56]	; 0x38
   28320:	bne	28298 <GetDataSlab+0x5d7c>
   28324:	ldr	r0, [sp, #52]	; 0x34
   28328:	cmp	r3, #1
   2832c:	add	r2, r0, lr
   28330:	bne	3429c <GetDataSlab+0x11d80>
   28334:	ldr	r0, [sp, #56]	; 0x38
   28338:	cmp	r0, #1
   2833c:	ldr	r0, [fp, #20]
   28340:	blt	242a8 <GetDataSlab+0x1d8c>
   28344:	ldr	r7, [fp, #12]
   28348:	add	r8, r0, #4
   2834c:	add	r0, sp, #104	; 0x68
   28350:	mov	r9, #0
   28354:	orr	r3, r0, #4
   28358:	sub	r0, fp, #72	; 0x48
   2835c:	orr	r0, r0, #4
   28360:	str	r0, [sp, #44]	; 0x2c
   28364:	ldr	r0, [r7], #4
   28368:	str	r0, [sp, #52]	; 0x34
   2836c:	ldr	r6, [sp, #52]	; 0x34
   28370:	ldr	r1, [fp, #12]
   28374:	ldr	r0, [sp, #48]	; 0x30
   28378:	cmp	sl, #1
   2837c:	add	ip, r6, lr
   28380:	add	r4, r2, r6
   28384:	blt	283bc <GetDataSlab+0x5ea0>
   28388:	ldr	r0, [sp, #60]	; 0x3c
   2838c:	ldr	r6, [fp, #20]
   28390:	add	r5, r0, r9
   28394:	mov	r0, #0
   28398:	ldrb	r2, [r4, r0]
   2839c:	strb	r2, [r5, r0]
   283a0:	add	r0, r0, #1
   283a4:	ldr	sl, [r6]
   283a8:	cmp	r0, sl
   283ac:	blt	28398 <GetDataSlab+0x5e7c>
   283b0:	ldr	r0, [fp, #8]
   283b4:	ldr	r6, [r1]
   283b8:	ldr	r0, [r0]
   283bc:	str	r0, [sp, #48]	; 0x30
   283c0:	sub	r0, r0, r6
   283c4:	str	r6, [sp, #52]	; 0x34
   283c8:	add	r2, r4, r0
   283cc:	add	lr, ip, r0
   283d0:	ldr	r0, [fp, #24]
   283d4:	add	r4, sp, #64	; 0x40
   283d8:	cmp	r0, #2
   283dc:	blt	28484 <GetDataSlab+0x5f68>
   283e0:	mov	r5, #0
   283e4:	mov	r0, r5
   283e8:	ldr	r5, [r3, r5, lsl #2]
   283ec:	add	r5, r5, #1
   283f0:	str	r5, [r3, r0, lsl #2]
   283f4:	ldr	r1, [r8, r0, lsl #2]
   283f8:	sdiv	r6, r5, r1
   283fc:	mls	r1, r6, r1, r5
   28400:	cmp	r1, #0
   28404:	bne	28474 <GetDataSlab+0x5f58>
   28408:	mov	r1, #0
   2840c:	str	r1, [r3, r0, lsl #2]
   28410:	add	r1, r4, r0, lsl #2
   28414:	ldr	r5, [r1, #4]
   28418:	sdiv	r1, lr, r5
   2841c:	mls	ip, r1, r5, lr
   28420:	cmp	ip, #0
   28424:	beq	28444 <GetDataSlab+0x5f28>
   28428:	ldr	r1, [r4, r0, lsl #2]
   2842c:	ldr	r6, [r7, r0, lsl #2]
   28430:	sub	r5, r5, ip
   28434:	mla	r1, r6, r1, r5
   28438:	add	lr, r1, lr
   2843c:	add	r2, r2, r1
   28440:	b	2845c <GetDataSlab+0x5f40>
   28444:	ldr	r5, [r7, r0, lsl #2]
   28448:	add	r4, sp, #64	; 0x40
   2844c:	cmp	r5, #0
   28450:	ldrne	r1, [r4, r0, lsl #2]
   28454:	mlane	lr, r1, r5, lr
   28458:	mlane	r2, r1, r5, r2
   2845c:	ldr	r1, [fp, #24]
   28460:	add	r5, r0, #1
   28464:	add	r0, r0, #2
   28468:	cmp	r0, r1
   2846c:	blt	283e4 <GetDataSlab+0x5ec8>
   28470:	b	28484 <GetDataSlab+0x5f68>
   28474:	ldr	r1, [sp, #44]	; 0x2c
   28478:	ldr	r0, [r1, r0, lsl #2]
   2847c:	add	r2, r2, r0
   28480:	add	lr, r0, lr
   28484:	ldr	r1, [sp, #56]	; 0x38
   28488:	add	r9, sl, r9
   2848c:	mov	r0, #0
   28490:	cmp	r9, r1
   28494:	blt	2836c <GetDataSlab+0x5e50>
   28498:	b	242ac <GetDataSlab+0x1d90>
   2849c:	ldr	r3, [sl]
   284a0:	add	r5, sp, #64	; 0x40
   284a4:	sub	r0, r3, #1
   284a8:	str	r0, [fp, #-72]	; 0xffffffb8
   284ac:	ldr	r0, [r9]
   284b0:	mov	r9, #0
   284b4:	str	r0, [sp, #64]	; 0x40
   284b8:	str	r0, [sp, #48]	; 0x30
   284bc:	ldr	r0, [fp, #24]
   284c0:	ldr	sl, [r8]
   284c4:	cmp	r0, #2
   284c8:	mov	r0, sl
   284cc:	str	sl, [sp, #56]	; 0x38
   284d0:	blt	28574 <GetDataSlab+0x6058>
   284d4:	ldr	r7, [sp, #48]	; 0x30
   284d8:	ldr	r1, [fp, #8]
   284dc:	mov	r0, #1
   284e0:	mov	r9, #0
   284e4:	mov	r2, sl
   284e8:	str	sl, [sp, #56]	; 0x38
   284ec:	mov	r8, r7
   284f0:	ldr	r6, [fp, #16]
   284f4:	ldr	r2, [fp, #8]
   284f8:	ldr	r6, [r6, r0, lsl #2]
   284fc:	str	r7, [r5, r0, lsl #2]
   28500:	sub	r4, r6, #1
   28504:	mov	r6, #0
   28508:	str	r4, [lr, r0, lsl #2]
   2850c:	ldr	ip, [r2, r0, lsl #2]
   28510:	mov	r5, ip
   28514:	mul	r7, r5, r7
   28518:	ldr	r5, [r1, -r6, lsl #2]
   2851c:	add	r6, r6, #1
   28520:	cmp	r0, r6
   28524:	mul	r4, r4, r5
   28528:	bne	28514 <GetDataSlab+0x5ff8>
   2852c:	ldr	r6, [fp, #12]
   28530:	add	r5, sp, #64	; 0x40
   28534:	str	r4, [lr, r0, lsl #2]
   28538:	ldr	r2, [sp, #56]	; 0x38
   2853c:	add	r1, r1, #4
   28540:	str	r7, [r5, r0, lsl #2]
   28544:	ldr	r4, [r6, r0, lsl #2]
   28548:	ldr	r6, [fp, #20]
   2854c:	mla	r9, r4, r8, r9
   28550:	ldr	r4, [r6, r0, lsl #2]
   28554:	ldr	r6, [fp, #24]
   28558:	add	r0, r0, #1
   2855c:	mov	r8, r7
   28560:	mov	r7, ip
   28564:	mul	r2, r4, r2
   28568:	cmp	r0, r6
   2856c:	str	r2, [sp, #56]	; 0x38
   28570:	bne	284f0 <GetDataSlab+0x5fd4>
   28574:	ldr	r0, [sp, #52]	; 0x34
   28578:	mov	r2, r9
   2857c:	cmp	r3, #1
   28580:	add	r4, r0, r9, lsl #1
   28584:	bne	34434 <GetDataSlab+0x11f18>
   28588:	ldr	r0, [sp, #56]	; 0x38
   2858c:	ldr	lr, [fp, #12]
   28590:	cmp	r0, #1
   28594:	ldr	r0, [fp, #20]
   28598:	blt	242a8 <GetDataSlab+0x1d8c>
   2859c:	add	r8, r0, #4
   285a0:	add	r0, sp, #104	; 0x68
   285a4:	mov	r9, #0
   285a8:	orr	r3, r0, #4
   285ac:	sub	r0, fp, #72	; 0x48
   285b0:	orr	r0, r0, #4
   285b4:	str	r0, [sp, #44]	; 0x2c
   285b8:	ldr	r0, [lr], #4
   285bc:	str	r0, [sp, #52]	; 0x34
   285c0:	ldr	r1, [sp, #52]	; 0x34
   285c4:	ldr	r0, [sp, #48]	; 0x30
   285c8:	cmp	sl, #1
   285cc:	add	r2, r1, r2
   285d0:	add	ip, r4, r1, lsl #1
   285d4:	blt	28614 <GetDataSlab+0x60f8>
   285d8:	ldr	r0, [sp, #60]	; 0x3c
   285dc:	ldr	r6, [fp, #20]
   285e0:	mov	r4, ip
   285e4:	add	r5, r0, r9
   285e8:	mov	r0, #0
   285ec:	ldrb	r1, [r4], #2
   285f0:	strb	r1, [r5, r0]
   285f4:	add	r0, r0, #1
   285f8:	ldr	sl, [r6]
   285fc:	cmp	r0, sl
   28600:	blt	285ec <GetDataSlab+0x60d0>
   28604:	ldr	r0, [fp, #12]
   28608:	ldr	r1, [r0]
   2860c:	ldr	r0, [fp, #8]
   28610:	ldr	r0, [r0]
   28614:	str	r0, [sp, #48]	; 0x30
   28618:	sub	r0, r0, r1
   2861c:	str	r1, [sp, #52]	; 0x34
   28620:	add	r4, ip, r0, lsl #1
   28624:	add	r2, r2, r0
   28628:	ldr	r0, [fp, #24]
   2862c:	cmp	r0, #2
   28630:	blt	286dc <GetDataSlab+0x61c0>
   28634:	mov	r5, #0
   28638:	add	ip, sp, #64	; 0x40
   2863c:	ldr	r1, [r3, r5, lsl #2]
   28640:	mov	r0, r5
   28644:	add	r1, r1, #1
   28648:	str	r1, [r3, r5, lsl #2]
   2864c:	ldr	r5, [r8, r5, lsl #2]
   28650:	sdiv	r6, r1, r5
   28654:	mls	r1, r6, r5, r1
   28658:	cmp	r1, #0
   2865c:	bne	286cc <GetDataSlab+0x61b0>
   28660:	mov	r1, #0
   28664:	str	r1, [r3, r0, lsl #2]
   28668:	add	r1, ip, r0, lsl #2
   2866c:	ldr	r5, [r1, #4]
   28670:	sdiv	r1, r2, r5
   28674:	mls	r1, r1, r5, r2
   28678:	cmp	r1, #0
   2867c:	beq	28698 <GetDataSlab+0x617c>
   28680:	ldr	r6, [ip, r0, lsl #2]
   28684:	ldr	r7, [lr, r0, lsl #2]
   28688:	sub	r1, r5, r1
   2868c:	mla	r1, r7, r6, r1
   28690:	add	r2, r1, r2
   28694:	b	286b0 <GetDataSlab+0x6194>
   28698:	ldr	r1, [lr, r0, lsl #2]
   2869c:	cmp	r1, #0
   286a0:	beq	286b4 <GetDataSlab+0x6198>
   286a4:	ldr	r7, [ip, r0, lsl #2]
   286a8:	mla	r2, r7, r1, r2
   286ac:	mul	r1, r7, r1
   286b0:	add	r4, r4, r1, lsl #1
   286b4:	ldr	r1, [fp, #24]
   286b8:	add	r5, r0, #1
   286bc:	add	r0, r0, #2
   286c0:	cmp	r0, r1
   286c4:	blt	2863c <GetDataSlab+0x6120>
   286c8:	b	286dc <GetDataSlab+0x61c0>
   286cc:	ldr	r1, [sp, #44]	; 0x2c
   286d0:	ldr	r0, [r1, r0, lsl #2]
   286d4:	add	r4, r4, r0, lsl #1
   286d8:	add	r2, r0, r2
   286dc:	ldr	r1, [sp, #56]	; 0x38
   286e0:	add	r9, sl, r9
   286e4:	mov	r0, #0
   286e8:	cmp	r9, r1
   286ec:	blt	285c0 <GetDataSlab+0x60a4>
   286f0:	b	242ac <GetDataSlab+0x1d90>
   286f4:	ldr	r3, [sl]
   286f8:	add	r5, sp, #64	; 0x40
   286fc:	sub	r0, r3, #1
   28700:	str	r0, [fp, #-72]	; 0xffffffb8
   28704:	ldr	r0, [r9]
   28708:	mov	r9, #0
   2870c:	str	r0, [sp, #64]	; 0x40
   28710:	str	r0, [sp, #48]	; 0x30
   28714:	ldr	r0, [fp, #24]
   28718:	ldr	sl, [r8]
   2871c:	cmp	r0, #2
   28720:	mov	r0, sl
   28724:	str	sl, [sp, #56]	; 0x38
   28728:	blt	287cc <GetDataSlab+0x62b0>
   2872c:	ldr	r7, [sp, #48]	; 0x30
   28730:	ldr	r1, [fp, #8]
   28734:	mov	r0, #1
   28738:	mov	r9, #0
   2873c:	mov	r2, sl
   28740:	str	sl, [sp, #56]	; 0x38
   28744:	mov	r8, r7
   28748:	ldr	r6, [fp, #16]
   2874c:	ldr	r2, [fp, #8]
   28750:	ldr	r6, [r6, r0, lsl #2]
   28754:	str	r7, [r5, r0, lsl #2]
   28758:	sub	r4, r6, #1
   2875c:	mov	r6, #0
   28760:	str	r4, [lr, r0, lsl #2]
   28764:	ldr	ip, [r2, r0, lsl #2]
   28768:	mov	r5, ip
   2876c:	mul	r7, r5, r7
   28770:	ldr	r5, [r1, -r6, lsl #2]
   28774:	add	r6, r6, #1
   28778:	cmp	r0, r6
   2877c:	mul	r4, r4, r5
   28780:	bne	2876c <GetDataSlab+0x6250>
   28784:	ldr	r6, [fp, #12]
   28788:	add	r5, sp, #64	; 0x40
   2878c:	str	r4, [lr, r0, lsl #2]
   28790:	ldr	r2, [sp, #56]	; 0x38
   28794:	add	r1, r1, #4
   28798:	str	r7, [r5, r0, lsl #2]
   2879c:	ldr	r4, [r6, r0, lsl #2]
   287a0:	ldr	r6, [fp, #20]
   287a4:	mla	r9, r4, r8, r9
   287a8:	ldr	r4, [r6, r0, lsl #2]
   287ac:	ldr	r6, [fp, #24]
   287b0:	add	r0, r0, #1
   287b4:	mov	r8, r7
   287b8:	mov	r7, ip
   287bc:	mul	r2, r4, r2
   287c0:	cmp	r0, r6
   287c4:	str	r2, [sp, #56]	; 0x38
   287c8:	bne	28748 <GetDataSlab+0x622c>
   287cc:	ldr	r0, [sp, #52]	; 0x34
   287d0:	mov	r2, r9
   287d4:	cmp	r3, #1
   287d8:	add	r4, r0, r9, lsl #1
   287dc:	bne	345cc <GetDataSlab+0x120b0>
   287e0:	ldr	r0, [sp, #56]	; 0x38
   287e4:	ldr	lr, [fp, #12]
   287e8:	cmp	r0, #1
   287ec:	ldr	r0, [fp, #20]
   287f0:	blt	242a8 <GetDataSlab+0x1d8c>
   287f4:	add	r8, r0, #4
   287f8:	add	r0, sp, #104	; 0x68
   287fc:	mov	r9, #0
   28800:	orr	r3, r0, #4
   28804:	sub	r0, fp, #72	; 0x48
   28808:	orr	r0, r0, #4
   2880c:	str	r0, [sp, #44]	; 0x2c
   28810:	ldr	r0, [lr], #4
   28814:	str	r0, [sp, #52]	; 0x34
   28818:	ldr	r1, [sp, #52]	; 0x34
   2881c:	ldr	r0, [sp, #48]	; 0x30
   28820:	cmp	sl, #1
   28824:	add	r2, r1, r2
   28828:	add	ip, r4, r1, lsl #1
   2882c:	blt	2886c <GetDataSlab+0x6350>
   28830:	ldr	r0, [sp, #60]	; 0x3c
   28834:	ldr	r6, [fp, #20]
   28838:	mov	r4, ip
   2883c:	add	r5, r0, r9
   28840:	mov	r0, #0
   28844:	ldrb	r1, [r4], #2
   28848:	strb	r1, [r5, r0]
   2884c:	add	r0, r0, #1
   28850:	ldr	sl, [r6]
   28854:	cmp	r0, sl
   28858:	blt	28844 <GetDataSlab+0x6328>
   2885c:	ldr	r0, [fp, #12]
   28860:	ldr	r1, [r0]
   28864:	ldr	r0, [fp, #8]
   28868:	ldr	r0, [r0]
   2886c:	str	r0, [sp, #48]	; 0x30
   28870:	sub	r0, r0, r1
   28874:	str	r1, [sp, #52]	; 0x34
   28878:	add	r4, ip, r0, lsl #1
   2887c:	add	r2, r2, r0
   28880:	ldr	r0, [fp, #24]
   28884:	cmp	r0, #2
   28888:	blt	28934 <GetDataSlab+0x6418>
   2888c:	mov	r5, #0
   28890:	add	ip, sp, #64	; 0x40
   28894:	ldr	r1, [r3, r5, lsl #2]
   28898:	mov	r0, r5
   2889c:	add	r1, r1, #1
   288a0:	str	r1, [r3, r5, lsl #2]
   288a4:	ldr	r5, [r8, r5, lsl #2]
   288a8:	sdiv	r6, r1, r5
   288ac:	mls	r1, r6, r5, r1
   288b0:	cmp	r1, #0
   288b4:	bne	28924 <GetDataSlab+0x6408>
   288b8:	mov	r1, #0
   288bc:	str	r1, [r3, r0, lsl #2]
   288c0:	add	r1, ip, r0, lsl #2
   288c4:	ldr	r5, [r1, #4]
   288c8:	sdiv	r1, r2, r5
   288cc:	mls	r1, r1, r5, r2
   288d0:	cmp	r1, #0
   288d4:	beq	288f0 <GetDataSlab+0x63d4>
   288d8:	ldr	r6, [ip, r0, lsl #2]
   288dc:	ldr	r7, [lr, r0, lsl #2]
   288e0:	sub	r1, r5, r1
   288e4:	mla	r1, r7, r6, r1
   288e8:	add	r2, r1, r2
   288ec:	b	28908 <GetDataSlab+0x63ec>
   288f0:	ldr	r1, [lr, r0, lsl #2]
   288f4:	cmp	r1, #0
   288f8:	beq	2890c <GetDataSlab+0x63f0>
   288fc:	ldr	r7, [ip, r0, lsl #2]
   28900:	mla	r2, r7, r1, r2
   28904:	mul	r1, r7, r1
   28908:	add	r4, r4, r1, lsl #1
   2890c:	ldr	r1, [fp, #24]
   28910:	add	r5, r0, #1
   28914:	add	r0, r0, #2
   28918:	cmp	r0, r1
   2891c:	blt	28894 <GetDataSlab+0x6378>
   28920:	b	28934 <GetDataSlab+0x6418>
   28924:	ldr	r1, [sp, #44]	; 0x2c
   28928:	ldr	r0, [r1, r0, lsl #2]
   2892c:	add	r4, r4, r0, lsl #1
   28930:	add	r2, r0, r2
   28934:	ldr	r1, [sp, #56]	; 0x38
   28938:	add	r9, sl, r9
   2893c:	mov	r0, #0
   28940:	cmp	r9, r1
   28944:	blt	28818 <GetDataSlab+0x62fc>
   28948:	b	242ac <GetDataSlab+0x1d90>
   2894c:	ldr	r3, [sl]
   28950:	mov	sl, #0
   28954:	add	r5, sp, #64	; 0x40
   28958:	sub	r0, r3, #1
   2895c:	str	r0, [fp, #-72]	; 0xffffffb8
   28960:	ldr	r0, [r9]
   28964:	mov	r9, lr
   28968:	str	r0, [sp, #64]	; 0x40
   2896c:	str	r0, [sp, #48]	; 0x30
   28970:	ldr	r0, [fp, #24]
   28974:	ldr	lr, [r8]
   28978:	cmp	r0, #2
   2897c:	mov	r0, lr
   28980:	str	lr, [sp, #56]	; 0x38
   28984:	blt	28a30 <GetDataSlab+0x6514>
   28988:	ldr	r7, [sp, #48]	; 0x30
   2898c:	ldr	r1, [fp, #8]
   28990:	mov	r0, #1
   28994:	mov	sl, #0
   28998:	mov	r2, lr
   2899c:	str	lr, [sp, #56]	; 0x38
   289a0:	mov	r8, r7
   289a4:	ldr	r6, [fp, #16]
   289a8:	mov	r2, r9
   289ac:	ldr	r6, [r6, r0, lsl #2]
   289b0:	str	r7, [r5, r0, lsl #2]
   289b4:	sub	r4, r6, #1
   289b8:	ldr	r6, [fp, #8]
   289bc:	str	r4, [r9, r0, lsl #2]
   289c0:	ldr	ip, [r6, r0, lsl #2]
   289c4:	mov	r6, #0
   289c8:	mov	r5, ip
   289cc:	mul	r7, r5, r7
   289d0:	ldr	r5, [r1, -r6, lsl #2]
   289d4:	add	r6, r6, #1
   289d8:	cmp	r0, r6
   289dc:	mul	r4, r4, r5
   289e0:	bne	289cc <GetDataSlab+0x64b0>
   289e4:	ldr	r6, [fp, #12]
   289e8:	add	r5, sp, #64	; 0x40
   289ec:	str	r4, [r2, r0, lsl #2]
   289f0:	mov	r9, r2
   289f4:	ldr	r2, [sp, #56]	; 0x38
   289f8:	add	r1, r1, #4
   289fc:	str	r7, [r5, r0, lsl #2]
   28a00:	ldr	r4, [r6, r0, lsl #2]
   28a04:	ldr	r6, [fp, #20]
   28a08:	mla	sl, r4, r8, sl
   28a0c:	ldr	r4, [r6, r0, lsl #2]
   28a10:	ldr	r6, [fp, #24]
   28a14:	add	r0, r0, #1
   28a18:	mov	r8, r7
   28a1c:	mov	r7, ip
   28a20:	mul	r2, r4, r2
   28a24:	cmp	r0, r6
   28a28:	str	r2, [sp, #56]	; 0x38
   28a2c:	bne	289a4 <GetDataSlab+0x6488>
   28a30:	ldr	r0, [sp, #52]	; 0x34
   28a34:	cmp	r3, #1
   28a38:	add	r2, r0, sl, lsl #2
   28a3c:	bne	34764 <GetDataSlab+0x12248>
   28a40:	ldr	r0, [sp, #56]	; 0x38
   28a44:	cmp	r0, #1
   28a48:	ldr	r0, [fp, #20]
   28a4c:	blt	242a8 <GetDataSlab+0x1d8c>
   28a50:	ldr	r7, [fp, #12]
   28a54:	add	r8, r0, #4
   28a58:	add	r0, sp, #104	; 0x68
   28a5c:	mov	r9, #0
   28a60:	orr	r3, r0, #4
   28a64:	sub	r0, fp, #72	; 0x48
   28a68:	orr	r0, r0, #4
   28a6c:	str	r0, [sp, #44]	; 0x2c
   28a70:	ldr	r0, [r7], #4
   28a74:	str	r0, [sp, #52]	; 0x34
   28a78:	ldr	r6, [sp, #52]	; 0x34
   28a7c:	ldr	r1, [fp, #12]
   28a80:	ldr	r0, [sp, #48]	; 0x30
   28a84:	cmp	lr, #1
   28a88:	add	sl, r6, sl
   28a8c:	add	r4, r2, r6, lsl #2
   28a90:	blt	28ac8 <GetDataSlab+0x65ac>
   28a94:	ldr	r0, [sp, #60]	; 0x3c
   28a98:	ldr	r6, [fp, #20]
   28a9c:	add	r5, r0, r9
   28aa0:	mov	r0, #0
   28aa4:	ldr	r2, [r4, r0, lsl #2]
   28aa8:	strb	r2, [r5, r0]
   28aac:	add	r0, r0, #1
   28ab0:	ldr	lr, [r6]
   28ab4:	cmp	r0, lr
   28ab8:	blt	28aa4 <GetDataSlab+0x6588>
   28abc:	ldr	r0, [fp, #8]
   28ac0:	ldr	r6, [r1]
   28ac4:	ldr	r0, [r0]
   28ac8:	str	r0, [sp, #48]	; 0x30
   28acc:	sub	r0, r0, r6
   28ad0:	str	r6, [sp, #52]	; 0x34
   28ad4:	add	r2, r4, r0, lsl #2
   28ad8:	add	sl, sl, r0
   28adc:	ldr	r0, [fp, #24]
   28ae0:	add	r4, sp, #64	; 0x40
   28ae4:	cmp	r0, #2
   28ae8:	blt	28b94 <GetDataSlab+0x6678>
   28aec:	mov	r5, #0
   28af0:	mov	r0, r5
   28af4:	ldr	r5, [r3, r5, lsl #2]
   28af8:	add	r5, r5, #1
   28afc:	str	r5, [r3, r0, lsl #2]
   28b00:	ldr	r1, [r8, r0, lsl #2]
   28b04:	sdiv	r6, r5, r1
   28b08:	mls	r1, r6, r1, r5
   28b0c:	cmp	r1, #0
   28b10:	bne	28b84 <GetDataSlab+0x6668>
   28b14:	mov	r1, #0
   28b18:	str	r1, [r3, r0, lsl #2]
   28b1c:	add	r1, r4, r0, lsl #2
   28b20:	ldr	r5, [r1, #4]
   28b24:	sdiv	r1, sl, r5
   28b28:	mls	ip, r1, r5, sl
   28b2c:	cmp	ip, #0
   28b30:	beq	28b4c <GetDataSlab+0x6630>
   28b34:	ldr	r1, [r4, r0, lsl #2]
   28b38:	ldr	r6, [r7, r0, lsl #2]
   28b3c:	sub	r5, r5, ip
   28b40:	mla	r1, r6, r1, r5
   28b44:	add	sl, r1, sl
   28b48:	b	28b68 <GetDataSlab+0x664c>
   28b4c:	ldr	r5, [r7, r0, lsl #2]
   28b50:	add	r4, sp, #64	; 0x40
   28b54:	cmp	r5, #0
   28b58:	beq	28b6c <GetDataSlab+0x6650>
   28b5c:	ldr	r1, [r4, r0, lsl #2]
   28b60:	mla	sl, r1, r5, sl
   28b64:	mul	r1, r1, r5
   28b68:	add	r2, r2, r1, lsl #2
   28b6c:	ldr	r1, [fp, #24]
   28b70:	add	r5, r0, #1
   28b74:	add	r0, r0, #2
   28b78:	cmp	r0, r1
   28b7c:	blt	28af0 <GetDataSlab+0x65d4>
   28b80:	b	28b94 <GetDataSlab+0x6678>
   28b84:	ldr	r1, [sp, #44]	; 0x2c
   28b88:	ldr	r0, [r1, r0, lsl #2]
   28b8c:	add	r2, r2, r0, lsl #2
   28b90:	add	sl, r0, sl
   28b94:	ldr	r1, [sp, #56]	; 0x38
   28b98:	add	r9, lr, r9
   28b9c:	mov	r0, #0
   28ba0:	cmp	r9, r1
   28ba4:	blt	28a78 <GetDataSlab+0x655c>
   28ba8:	b	242ac <GetDataSlab+0x1d90>
   28bac:	ldr	r3, [sl]
   28bb0:	add	r5, sp, #64	; 0x40
   28bb4:	sub	r0, r3, #1
   28bb8:	str	r0, [fp, #-72]	; 0xffffffb8
   28bbc:	ldr	r0, [r9]
   28bc0:	mov	r9, lr
   28bc4:	mov	lr, #0
   28bc8:	str	r0, [sp, #64]	; 0x40
   28bcc:	str	r0, [sp, #48]	; 0x30
   28bd0:	ldr	r0, [fp, #24]
   28bd4:	ldr	sl, [r8]
   28bd8:	cmp	r0, #2
   28bdc:	mov	r0, sl
   28be0:	str	sl, [sp, #56]	; 0x38
   28be4:	blt	28c90 <GetDataSlab+0x6774>
   28be8:	ldr	r7, [sp, #48]	; 0x30
   28bec:	ldr	r1, [fp, #8]
   28bf0:	mov	r0, #1
   28bf4:	mov	lr, #0
   28bf8:	mov	r2, sl
   28bfc:	str	sl, [sp, #56]	; 0x38
   28c00:	mov	r8, r7
   28c04:	ldr	r6, [fp, #16]
   28c08:	mov	r2, r9
   28c0c:	ldr	r6, [r6, r0, lsl #2]
   28c10:	str	r7, [r5, r0, lsl #2]
   28c14:	sub	r4, r6, #1
   28c18:	ldr	r6, [fp, #8]
   28c1c:	str	r4, [r9, r0, lsl #2]
   28c20:	ldr	ip, [r6, r0, lsl #2]
   28c24:	mov	r6, #0
   28c28:	mov	r5, ip
   28c2c:	mul	r7, r5, r7
   28c30:	ldr	r5, [r1, -r6, lsl #2]
   28c34:	add	r6, r6, #1
   28c38:	cmp	r0, r6
   28c3c:	mul	r4, r4, r5
   28c40:	bne	28c2c <GetDataSlab+0x6710>
   28c44:	ldr	r6, [fp, #12]
   28c48:	add	r5, sp, #64	; 0x40
   28c4c:	str	r4, [r2, r0, lsl #2]
   28c50:	mov	r9, r2
   28c54:	ldr	r2, [sp, #56]	; 0x38
   28c58:	add	r1, r1, #4
   28c5c:	str	r7, [r5, r0, lsl #2]
   28c60:	ldr	r4, [r6, r0, lsl #2]
   28c64:	ldr	r6, [fp, #20]
   28c68:	mla	lr, r4, r8, lr
   28c6c:	ldr	r4, [r6, r0, lsl #2]
   28c70:	ldr	r6, [fp, #24]
   28c74:	add	r0, r0, #1
   28c78:	mov	r8, r7
   28c7c:	mov	r7, ip
   28c80:	mul	r2, r4, r2
   28c84:	cmp	r0, r6
   28c88:	str	r2, [sp, #56]	; 0x38
   28c8c:	bne	28c04 <GetDataSlab+0x66e8>
   28c90:	ldr	r0, [sp, #52]	; 0x34
   28c94:	cmp	r3, #1
   28c98:	add	r2, r0, lr, lsl #2
   28c9c:	bne	34900 <GetDataSlab+0x123e4>
   28ca0:	ldr	r0, [sp, #56]	; 0x38
   28ca4:	cmp	r0, #1
   28ca8:	ldr	r0, [fp, #20]
   28cac:	blt	242a8 <GetDataSlab+0x1d8c>
   28cb0:	ldr	r7, [fp, #12]
   28cb4:	add	r8, r0, #4
   28cb8:	add	r0, sp, #104	; 0x68
   28cbc:	mov	r9, #0
   28cc0:	orr	r3, r0, #4
   28cc4:	sub	r0, fp, #72	; 0x48
   28cc8:	orr	r0, r0, #4
   28ccc:	str	r0, [sp, #44]	; 0x2c
   28cd0:	ldr	r0, [r7], #4
   28cd4:	str	r0, [sp, #52]	; 0x34
   28cd8:	ldr	r6, [sp, #52]	; 0x34
   28cdc:	ldr	r1, [fp, #12]
   28ce0:	ldr	r0, [sp, #48]	; 0x30
   28ce4:	cmp	sl, #1
   28ce8:	add	ip, r6, lr
   28cec:	add	r4, r2, r6, lsl #2
   28cf0:	blt	28d28 <GetDataSlab+0x680c>
   28cf4:	ldr	r0, [sp, #60]	; 0x3c
   28cf8:	ldr	r6, [fp, #20]
   28cfc:	add	r5, r0, r9
   28d00:	mov	r0, #0
   28d04:	ldr	r2, [r4, r0, lsl #2]
   28d08:	strb	r2, [r5, r0]
   28d0c:	add	r0, r0, #1
   28d10:	ldr	sl, [r6]
   28d14:	cmp	r0, sl
   28d18:	blt	28d04 <GetDataSlab+0x67e8>
   28d1c:	ldr	r0, [fp, #8]
   28d20:	ldr	r6, [r1]
   28d24:	ldr	r0, [r0]
   28d28:	str	r0, [sp, #48]	; 0x30
   28d2c:	sub	r0, r0, r6
   28d30:	str	r6, [sp, #52]	; 0x34
   28d34:	add	r2, r4, r0, lsl #2
   28d38:	add	lr, ip, r0
   28d3c:	ldr	r0, [fp, #24]
   28d40:	add	r4, sp, #64	; 0x40
   28d44:	cmp	r0, #2
   28d48:	blt	28df4 <GetDataSlab+0x68d8>
   28d4c:	mov	r5, #0
   28d50:	mov	r0, r5
   28d54:	ldr	r5, [r3, r5, lsl #2]
   28d58:	add	r5, r5, #1
   28d5c:	str	r5, [r3, r0, lsl #2]
   28d60:	ldr	r1, [r8, r0, lsl #2]
   28d64:	sdiv	r6, r5, r1
   28d68:	mls	r1, r6, r1, r5
   28d6c:	cmp	r1, #0
   28d70:	bne	28de4 <GetDataSlab+0x68c8>
   28d74:	mov	r1, #0
   28d78:	str	r1, [r3, r0, lsl #2]
   28d7c:	add	r1, r4, r0, lsl #2
   28d80:	ldr	r5, [r1, #4]
   28d84:	sdiv	r1, lr, r5
   28d88:	mls	ip, r1, r5, lr
   28d8c:	cmp	ip, #0
   28d90:	beq	28dac <GetDataSlab+0x6890>
   28d94:	ldr	r1, [r4, r0, lsl #2]
   28d98:	ldr	r6, [r7, r0, lsl #2]
   28d9c:	sub	r5, r5, ip
   28da0:	mla	r1, r6, r1, r5
   28da4:	add	lr, r1, lr
   28da8:	b	28dc8 <GetDataSlab+0x68ac>
   28dac:	ldr	r5, [r7, r0, lsl #2]
   28db0:	add	r4, sp, #64	; 0x40
   28db4:	cmp	r5, #0
   28db8:	beq	28dcc <GetDataSlab+0x68b0>
   28dbc:	ldr	r1, [r4, r0, lsl #2]
   28dc0:	mla	lr, r1, r5, lr
   28dc4:	mul	r1, r1, r5
   28dc8:	add	r2, r2, r1, lsl #2
   28dcc:	ldr	r1, [fp, #24]
   28dd0:	add	r5, r0, #1
   28dd4:	add	r0, r0, #2
   28dd8:	cmp	r0, r1
   28ddc:	blt	28d50 <GetDataSlab+0x6834>
   28de0:	b	28df4 <GetDataSlab+0x68d8>
   28de4:	ldr	r1, [sp, #44]	; 0x2c
   28de8:	ldr	r0, [r1, r0, lsl #2]
   28dec:	add	r2, r2, r0, lsl #2
   28df0:	add	lr, r0, lr
   28df4:	ldr	r1, [sp, #56]	; 0x38
   28df8:	add	r9, sl, r9
   28dfc:	mov	r0, #0
   28e00:	cmp	r9, r1
   28e04:	blt	28cd8 <GetDataSlab+0x67bc>
   28e08:	b	242ac <GetDataSlab+0x1d90>
   28e0c:	ldr	r3, [sl]
   28e10:	mov	sl, #0
   28e14:	add	r5, sp, #64	; 0x40
   28e18:	sub	r0, r3, #1
   28e1c:	str	r0, [fp, #-72]	; 0xffffffb8
   28e20:	ldr	r0, [r9]
   28e24:	str	r0, [sp, #64]	; 0x40
   28e28:	str	r0, [sp, #48]	; 0x30
   28e2c:	ldr	r0, [fp, #24]
   28e30:	ldr	ip, [r8]
   28e34:	cmp	r0, #2
   28e38:	mov	r0, ip
   28e3c:	str	ip, [sp, #56]	; 0x38
   28e40:	blt	28ee0 <GetDataSlab+0x69c4>
   28e44:	ldr	r7, [sp, #48]	; 0x30
   28e48:	mov	r0, #1
   28e4c:	mov	sl, #0
   28e50:	mov	r1, r9
   28e54:	mov	r2, ip
   28e58:	str	ip, [sp, #56]	; 0x38
   28e5c:	mov	r8, r7
   28e60:	ldr	r6, [fp, #16]
   28e64:	ldr	r6, [r6, r0, lsl #2]
   28e68:	str	r7, [r5, r0, lsl #2]
   28e6c:	sub	r4, r6, #1
   28e70:	mov	r6, #0
   28e74:	str	r4, [lr, r0, lsl #2]
   28e78:	ldr	r2, [r9, r0, lsl #2]
   28e7c:	mov	r5, r2
   28e80:	mul	r7, r5, r7
   28e84:	ldr	r5, [r1, -r6, lsl #2]
   28e88:	add	r6, r6, #1
   28e8c:	cmp	r0, r6
   28e90:	mul	r4, r4, r5
   28e94:	bne	28e80 <GetDataSlab+0x6964>
   28e98:	ldr	r6, [fp, #12]
   28e9c:	add	r5, sp, #64	; 0x40
   28ea0:	str	r4, [lr, r0, lsl #2]
   28ea4:	add	r1, r1, #4
   28ea8:	str	r7, [r5, r0, lsl #2]
   28eac:	ldr	r4, [r6, r0, lsl #2]
   28eb0:	ldr	r6, [fp, #20]
   28eb4:	mla	sl, r4, r8, sl
   28eb8:	ldr	r4, [r6, r0, lsl #2]
   28ebc:	ldr	r6, [sp, #56]	; 0x38
   28ec0:	add	r0, r0, #1
   28ec4:	mov	r8, r7
   28ec8:	mov	r7, r2
   28ecc:	mul	r6, r4, r6
   28ed0:	str	r6, [sp, #56]	; 0x38
   28ed4:	ldr	r6, [fp, #24]
   28ed8:	cmp	r0, r6
   28edc:	bne	28e60 <GetDataSlab+0x6944>
   28ee0:	ldr	r0, [sp, #52]	; 0x34
   28ee4:	cmp	r3, #1
   28ee8:	add	r2, r0, sl, lsl #2
   28eec:	bne	34a9c <GetDataSlab+0x12580>
   28ef0:	ldr	r0, [sp, #56]	; 0x38
   28ef4:	ldr	lr, [fp, #12]
   28ef8:	cmp	r0, #1
   28efc:	ldr	r0, [fp, #20]
   28f00:	blt	242a8 <GetDataSlab+0x1d8c>
   28f04:	add	r9, r0, #4
   28f08:	add	r0, sp, #104	; 0x68
   28f0c:	mov	r8, #0
   28f10:	orr	r3, r0, #4
   28f14:	sub	r0, fp, #72	; 0x48
   28f18:	orr	r0, r0, #4
   28f1c:	str	r0, [sp, #44]	; 0x2c
   28f20:	ldr	r0, [lr], #4
   28f24:	str	r0, [sp, #52]	; 0x34
   28f28:	ldr	r1, [sp, #52]	; 0x34
   28f2c:	ldr	r0, [sp, #48]	; 0x30
   28f30:	cmp	ip, #1
   28f34:	add	sl, r1, sl
   28f38:	add	r6, r2, r1, lsl #2
   28f3c:	blt	28f88 <GetDataSlab+0x6a6c>
   28f40:	ldr	r0, [sp, #60]	; 0x3c
   28f44:	ldr	r1, [fp, #20]
   28f48:	mov	r4, r6
   28f4c:	add	r5, r0, r8
   28f50:	mov	r0, #0
   28f54:	vldr	s0, [r4]
   28f58:	add	r4, r4, #4
   28f5c:	vcvt.u32.f32	s0, s0
   28f60:	vmov	r2, s0
   28f64:	strb	r2, [r5, r0]
   28f68:	add	r0, r0, #1
   28f6c:	ldr	ip, [r1]
   28f70:	cmp	r0, ip
   28f74:	blt	28f54 <GetDataSlab+0x6a38>
   28f78:	ldr	r0, [fp, #12]
   28f7c:	ldr	r1, [r0]
   28f80:	ldr	r0, [fp, #8]
   28f84:	ldr	r0, [r0]
   28f88:	str	r0, [sp, #48]	; 0x30
   28f8c:	sub	r0, r0, r1
   28f90:	str	r1, [sp, #52]	; 0x34
   28f94:	add	r2, r6, r0, lsl #2
   28f98:	add	sl, sl, r0
   28f9c:	ldr	r0, [fp, #24]
   28fa0:	cmp	r0, #2
   28fa4:	blt	29050 <GetDataSlab+0x6b34>
   28fa8:	mov	r5, #0
   28fac:	add	r4, sp, #64	; 0x40
   28fb0:	ldr	r6, [r3, r5, lsl #2]
   28fb4:	mov	r0, r5
   28fb8:	add	r6, r6, #1
   28fbc:	str	r6, [r3, r5, lsl #2]
   28fc0:	ldr	r5, [r9, r5, lsl #2]
   28fc4:	sdiv	r1, r6, r5
   28fc8:	mls	r1, r1, r5, r6
   28fcc:	cmp	r1, #0
   28fd0:	bne	29040 <GetDataSlab+0x6b24>
   28fd4:	mov	r1, #0
   28fd8:	str	r1, [r3, r0, lsl #2]
   28fdc:	add	r1, r4, r0, lsl #2
   28fe0:	ldr	r5, [r1, #4]
   28fe4:	sdiv	r1, sl, r5
   28fe8:	mls	r6, r1, r5, sl
   28fec:	cmp	r6, #0
   28ff0:	beq	2900c <GetDataSlab+0x6af0>
   28ff4:	ldr	r1, [r4, r0, lsl #2]
   28ff8:	ldr	r7, [lr, r0, lsl #2]
   28ffc:	sub	r6, r5, r6
   29000:	mla	r1, r7, r1, r6
   29004:	add	sl, r1, sl
   29008:	b	29024 <GetDataSlab+0x6b08>
   2900c:	ldr	r6, [lr, r0, lsl #2]
   29010:	cmp	r6, #0
   29014:	beq	29028 <GetDataSlab+0x6b0c>
   29018:	ldr	r1, [r4, r0, lsl #2]
   2901c:	mla	sl, r1, r6, sl
   29020:	mul	r1, r1, r6
   29024:	add	r2, r2, r1, lsl #2
   29028:	ldr	r1, [fp, #24]
   2902c:	add	r5, r0, #1
   29030:	add	r0, r0, #2
   29034:	cmp	r0, r1
   29038:	blt	28fb0 <GetDataSlab+0x6a94>
   2903c:	b	29050 <GetDataSlab+0x6b34>
   29040:	ldr	r1, [sp, #44]	; 0x2c
   29044:	ldr	r0, [r1, r0, lsl #2]
   29048:	add	r2, r2, r0, lsl #2
   2904c:	add	sl, r0, sl
   29050:	ldr	r1, [sp, #56]	; 0x38
   29054:	add	r8, ip, r8
   29058:	mov	r0, #0
   2905c:	cmp	r8, r1
   29060:	blt	28f28 <GetDataSlab+0x6a0c>
   29064:	b	242ac <GetDataSlab+0x1d90>
   29068:	ldr	r3, [sl]
   2906c:	mov	sl, #0
   29070:	add	r5, sp, #64	; 0x40
   29074:	sub	r0, r3, #1
   29078:	str	r0, [fp, #-72]	; 0xffffffb8
   2907c:	ldr	r0, [r9]
   29080:	str	r0, [sp, #64]	; 0x40
   29084:	str	r0, [sp, #48]	; 0x30
   29088:	ldr	r0, [fp, #24]
   2908c:	ldr	ip, [r8]
   29090:	cmp	r0, #2
   29094:	mov	r0, ip
   29098:	str	ip, [sp, #56]	; 0x38
   2909c:	blt	2913c <GetDataSlab+0x6c20>
   290a0:	ldr	r7, [sp, #48]	; 0x30
   290a4:	mov	r0, #1
   290a8:	mov	sl, #0
   290ac:	mov	r1, r9
   290b0:	mov	r2, ip
   290b4:	str	ip, [sp, #56]	; 0x38
   290b8:	mov	r8, r7
   290bc:	ldr	r6, [fp, #16]
   290c0:	ldr	r6, [r6, r0, lsl #2]
   290c4:	str	r7, [r5, r0, lsl #2]
   290c8:	sub	r4, r6, #1
   290cc:	mov	r6, #0
   290d0:	str	r4, [lr, r0, lsl #2]
   290d4:	ldr	r2, [r9, r0, lsl #2]
   290d8:	mov	r5, r2
   290dc:	mul	r7, r5, r7
   290e0:	ldr	r5, [r1, -r6, lsl #2]
   290e4:	add	r6, r6, #1
   290e8:	cmp	r0, r6
   290ec:	mul	r4, r4, r5
   290f0:	bne	290dc <GetDataSlab+0x6bc0>
   290f4:	ldr	r6, [fp, #12]
   290f8:	add	r5, sp, #64	; 0x40
   290fc:	str	r4, [lr, r0, lsl #2]
   29100:	add	r1, r1, #4
   29104:	str	r7, [r5, r0, lsl #2]
   29108:	ldr	r4, [r6, r0, lsl #2]
   2910c:	ldr	r6, [fp, #20]
   29110:	mla	sl, r4, r8, sl
   29114:	ldr	r4, [r6, r0, lsl #2]
   29118:	ldr	r6, [sp, #56]	; 0x38
   2911c:	add	r0, r0, #1
   29120:	mov	r8, r7
   29124:	mov	r7, r2
   29128:	mul	r6, r4, r6
   2912c:	str	r6, [sp, #56]	; 0x38
   29130:	ldr	r6, [fp, #24]
   29134:	cmp	r0, r6
   29138:	bne	290bc <GetDataSlab+0x6ba0>
   2913c:	ldr	r0, [sp, #52]	; 0x34
   29140:	cmp	r3, #1
   29144:	add	r2, r0, sl, lsl #3
   29148:	bne	34c40 <GetDataSlab+0x12724>
   2914c:	ldr	r0, [sp, #56]	; 0x38
   29150:	ldr	lr, [fp, #12]
   29154:	cmp	r0, #1
   29158:	ldr	r0, [fp, #20]
   2915c:	blt	242a8 <GetDataSlab+0x1d8c>
   29160:	add	r9, r0, #4
   29164:	add	r0, sp, #104	; 0x68
   29168:	mov	r8, #0
   2916c:	orr	r3, r0, #4
   29170:	sub	r0, fp, #72	; 0x48
   29174:	orr	r0, r0, #4
   29178:	str	r0, [sp, #44]	; 0x2c
   2917c:	ldr	r0, [lr], #4
   29180:	str	r0, [sp, #52]	; 0x34
   29184:	ldr	r1, [sp, #52]	; 0x34
   29188:	ldr	r0, [sp, #48]	; 0x30
   2918c:	cmp	ip, #1
   29190:	add	sl, r1, sl
   29194:	add	r6, r2, r1, lsl #3
   29198:	blt	291e4 <GetDataSlab+0x6cc8>
   2919c:	ldr	r0, [sp, #60]	; 0x3c
   291a0:	ldr	r1, [fp, #20]
   291a4:	mov	r4, r6
   291a8:	add	r5, r0, r8
   291ac:	mov	r0, #0
   291b0:	vldr	d16, [r4]
   291b4:	add	r4, r4, #8
   291b8:	vcvt.u32.f64	s0, d16
   291bc:	vmov	r2, s0
   291c0:	strb	r2, [r5, r0]
   291c4:	add	r0, r0, #1
   291c8:	ldr	ip, [r1]
   291cc:	cmp	r0, ip
   291d0:	blt	291b0 <GetDataSlab+0x6c94>
   291d4:	ldr	r0, [fp, #12]
   291d8:	ldr	r1, [r0]
   291dc:	ldr	r0, [fp, #8]
   291e0:	ldr	r0, [r0]
   291e4:	str	r0, [sp, #48]	; 0x30
   291e8:	sub	r0, r0, r1
   291ec:	str	r1, [sp, #52]	; 0x34
   291f0:	add	r2, r6, r0, lsl #3
   291f4:	add	sl, sl, r0
   291f8:	ldr	r0, [fp, #24]
   291fc:	cmp	r0, #2
   29200:	blt	292ac <GetDataSlab+0x6d90>
   29204:	mov	r5, #0
   29208:	add	r4, sp, #64	; 0x40
   2920c:	ldr	r6, [r3, r5, lsl #2]
   29210:	mov	r0, r5
   29214:	add	r6, r6, #1
   29218:	str	r6, [r3, r5, lsl #2]
   2921c:	ldr	r5, [r9, r5, lsl #2]
   29220:	sdiv	r1, r6, r5
   29224:	mls	r1, r1, r5, r6
   29228:	cmp	r1, #0
   2922c:	bne	2929c <GetDataSlab+0x6d80>
   29230:	mov	r1, #0
   29234:	str	r1, [r3, r0, lsl #2]
   29238:	add	r1, r4, r0, lsl #2
   2923c:	ldr	r5, [r1, #4]
   29240:	sdiv	r1, sl, r5
   29244:	mls	r6, r1, r5, sl
   29248:	cmp	r6, #0
   2924c:	beq	29268 <GetDataSlab+0x6d4c>
   29250:	ldr	r1, [r4, r0, lsl #2]
   29254:	ldr	r7, [lr, r0, lsl #2]
   29258:	sub	r6, r5, r6
   2925c:	mla	r1, r7, r1, r6
   29260:	add	sl, r1, sl
   29264:	b	29280 <GetDataSlab+0x6d64>
   29268:	ldr	r6, [lr, r0, lsl #2]
   2926c:	cmp	r6, #0
   29270:	beq	29284 <GetDataSlab+0x6d68>
   29274:	ldr	r1, [r4, r0, lsl #2]
   29278:	mla	sl, r1, r6, sl
   2927c:	mul	r1, r1, r6
   29280:	add	r2, r2, r1, lsl #3
   29284:	ldr	r1, [fp, #24]
   29288:	add	r5, r0, #1
   2928c:	add	r0, r0, #2
   29290:	cmp	r0, r1
   29294:	blt	2920c <GetDataSlab+0x6cf0>
   29298:	b	292ac <GetDataSlab+0x6d90>
   2929c:	ldr	r1, [sp, #44]	; 0x2c
   292a0:	ldr	r0, [r1, r0, lsl #2]
   292a4:	add	r2, r2, r0, lsl #3
   292a8:	add	sl, r0, sl
   292ac:	ldr	r1, [sp, #56]	; 0x38
   292b0:	add	r8, ip, r8
   292b4:	mov	r0, #0
   292b8:	cmp	r8, r1
   292bc:	blt	29184 <GetDataSlab+0x6c68>
   292c0:	b	242ac <GetDataSlab+0x1d90>
   292c4:	ldr	r5, [sl]
   292c8:	add	r6, sp, #64	; 0x40
   292cc:	str	r3, [sp, #48]	; 0x30
   292d0:	sub	r0, r5, #1
   292d4:	str	r0, [fp, #-72]	; 0xffffffb8
   292d8:	ldr	r0, [r9]
   292dc:	str	r0, [sp, #64]	; 0x40
   292e0:	str	r0, [sp, #44]	; 0x2c
   292e4:	ldr	r0, [fp, #24]
   292e8:	ldr	r1, [r8]
   292ec:	mov	r8, #0
   292f0:	cmp	r0, #2
   292f4:	mov	r0, r1
   292f8:	str	r1, [sp, #56]	; 0x38
   292fc:	blt	293a4 <GetDataSlab+0x6e88>
   29300:	ldr	r7, [sp, #44]	; 0x2c
   29304:	mov	sl, lr
   29308:	mov	r0, #1
   2930c:	mov	r8, #0
   29310:	mov	r2, r9
   29314:	mov	r3, r1
   29318:	str	r1, [sp, #56]	; 0x38
   2931c:	mov	lr, r7
   29320:	ldr	r3, [fp, #16]
   29324:	ldr	r3, [r3, r0, lsl #2]
   29328:	str	r7, [r6, r0, lsl #2]
   2932c:	mov	r6, #0
   29330:	sub	r4, r3, #1
   29334:	str	r4, [sl, r0, lsl #2]
   29338:	ldr	ip, [r9, r0, lsl #2]
   2933c:	mov	r3, ip
   29340:	mul	r7, r3, r7
   29344:	ldr	r3, [r2, -r6, lsl #2]
   29348:	add	r6, r6, #1
   2934c:	cmp	r0, r6
   29350:	mul	r4, r4, r3
   29354:	bne	29340 <GetDataSlab+0x6e24>
   29358:	ldr	r3, [fp, #12]
   2935c:	add	r6, sp, #64	; 0x40
   29360:	sub	sl, fp, #72	; 0x48
   29364:	add	r2, r2, #4
   29368:	str	r4, [sl, r0, lsl #2]
   2936c:	str	r7, [r6, r0, lsl #2]
   29370:	ldr	r4, [sp, #56]	; 0x38
   29374:	ldr	r3, [r3, r0, lsl #2]
   29378:	mla	r8, r3, lr, r8
   2937c:	ldr	r3, [fp, #20]
   29380:	mov	lr, r7
   29384:	mov	r7, ip
   29388:	ldr	r3, [r3, r0, lsl #2]
   2938c:	add	r0, r0, #1
   29390:	mul	r4, r3, r4
   29394:	ldr	r3, [fp, #24]
   29398:	str	r4, [sp, #56]	; 0x38
   2939c:	cmp	r0, r3
   293a0:	bne	29320 <GetDataSlab+0x6e04>
   293a4:	ldr	r0, [sp, #52]	; 0x34
   293a8:	cmp	r5, #1
   293ac:	add	r4, r0, r8, lsl #3
   293b0:	bne	34de4 <GetDataSlab+0x128c8>
   293b4:	ldr	r0, [sp, #56]	; 0x38
   293b8:	ldr	r9, [fp, #12]
   293bc:	cmp	r0, #1
   293c0:	blt	34f68 <GetDataSlab+0x12a4c>
   293c4:	ldr	r0, [fp, #20]
   293c8:	ldr	r3, [r9], #4
   293cc:	mov	sl, #0
   293d0:	add	lr, r0, #4
   293d4:	add	r0, sp, #104	; 0x68
   293d8:	orr	r2, r0, #4
   293dc:	sub	r0, fp, #72	; 0x48
   293e0:	orr	r0, r0, #4
   293e4:	str	r0, [sp, #36]	; 0x24
   293e8:	add	r8, r3, r8
   293ec:	add	ip, r4, r3, lsl #3
   293f0:	cmp	r1, #1
   293f4:	blt	29438 <GetDataSlab+0x6f1c>
   293f8:	ldr	r0, [sp, #60]	; 0x3c
   293fc:	ldr	r5, [fp, #20]
   29400:	mov	r3, #0
   29404:	mov	r4, ip
   29408:	add	r7, r0, sl
   2940c:	ldrb	r0, [r4], #8
   29410:	strb	r0, [r7, r3]
   29414:	add	r3, r3, #1
   29418:	ldr	r1, [r5]
   2941c:	cmp	r3, r1
   29420:	blt	2940c <GetDataSlab+0x6ef0>
   29424:	ldr	r0, [fp, #12]
   29428:	ldr	r3, [r0]
   2942c:	ldr	r0, [fp, #8]
   29430:	ldr	r0, [r0]
   29434:	str	r0, [sp, #44]	; 0x2c
   29438:	ldr	r0, [sp, #44]	; 0x2c
   2943c:	str	r3, [sp, #40]	; 0x28
   29440:	sub	r0, r0, r3
   29444:	add	r4, ip, r0, lsl #3
   29448:	add	r8, r8, r0
   2944c:	ldr	r0, [fp, #24]
   29450:	cmp	r0, #2
   29454:	blt	29500 <GetDataSlab+0x6fe4>
   29458:	mov	r3, #0
   2945c:	add	ip, sp, #64	; 0x40
   29460:	ldr	r0, [r2, r3, lsl #2]
   29464:	mov	r7, r3
   29468:	add	r0, r0, #1
   2946c:	str	r0, [r2, r3, lsl #2]
   29470:	ldr	r3, [lr, r3, lsl #2]
   29474:	sdiv	r6, r0, r3
   29478:	mls	r0, r6, r3, r0
   2947c:	cmp	r0, #0
   29480:	bne	294f0 <GetDataSlab+0x6fd4>
   29484:	mov	r0, #0
   29488:	str	r0, [r2, r7, lsl #2]
   2948c:	add	r0, ip, r7, lsl #2
   29490:	ldr	r3, [r0, #4]
   29494:	sdiv	r0, r8, r3
   29498:	mls	r0, r0, r3, r8
   2949c:	cmp	r0, #0
   294a0:	beq	294bc <GetDataSlab+0x6fa0>
   294a4:	ldr	r6, [ip, r7, lsl #2]
   294a8:	ldr	r5, [r9, r7, lsl #2]
   294ac:	sub	r0, r3, r0
   294b0:	mla	r0, r5, r6, r0
   294b4:	add	r8, r0, r8
   294b8:	b	294d4 <GetDataSlab+0x6fb8>
   294bc:	ldr	r0, [r9, r7, lsl #2]
   294c0:	cmp	r0, #0
   294c4:	beq	294d8 <GetDataSlab+0x6fbc>
   294c8:	ldr	r3, [ip, r7, lsl #2]
   294cc:	mla	r8, r3, r0, r8
   294d0:	mul	r0, r3, r0
   294d4:	add	r4, r4, r0, lsl #3
   294d8:	add	r3, r7, #1
   294dc:	add	r0, r7, #2
   294e0:	ldr	r7, [fp, #24]
   294e4:	cmp	r0, r7
   294e8:	blt	29460 <GetDataSlab+0x6f44>
   294ec:	b	29500 <GetDataSlab+0x6fe4>
   294f0:	ldr	r0, [sp, #36]	; 0x24
   294f4:	ldr	r0, [r0, r7, lsl #2]
   294f8:	add	r4, r4, r0, lsl #3
   294fc:	add	r8, r0, r8
   29500:	ldr	r0, [sp, #56]	; 0x38
   29504:	ldr	r3, [sp, #40]	; 0x28
   29508:	add	sl, r1, sl
   2950c:	cmp	sl, r0
   29510:	blt	293e8 <GetDataSlab+0x6ecc>
   29514:	b	34f68 <GetDataSlab+0x12a4c>
   29518:	mov	r1, r8
   2951c:	ldr	r8, [sl]
   29520:	mov	r3, #0
   29524:	sub	sl, fp, #72	; 0x48
   29528:	sub	r0, r8, #1
   2952c:	str	r0, [fp, #-72]	; 0xffffffb8
   29530:	ldr	r0, [r9]
   29534:	add	r9, sp, #64	; 0x40
   29538:	str	r0, [sp, #64]	; 0x40
   2953c:	str	r0, [sp, #44]	; 0x2c
   29540:	ldr	r0, [fp, #24]
   29544:	ldr	r1, [r1]
   29548:	cmp	r0, #2
   2954c:	str	r1, [sp, #48]	; 0x30
   29550:	str	r1, [sp, #56]	; 0x38
   29554:	blt	295f8 <GetDataSlab+0x70dc>
   29558:	ldr	r2, [sp, #44]	; 0x2c
   2955c:	ldr	r6, [sp, #48]	; 0x30
   29560:	ldr	r1, [fp, #8]
   29564:	mov	r0, #1
   29568:	mov	r3, #0
   2956c:	mov	r7, r2
   29570:	str	r6, [sp, #56]	; 0x38
   29574:	ldr	r6, [fp, #16]
   29578:	mov	r4, #0
   2957c:	ldr	r6, [r6, r0, lsl #2]
   29580:	str	r2, [r9, r0, lsl #2]
   29584:	sub	r5, r6, #1
   29588:	ldr	r6, [fp, #8]
   2958c:	str	r5, [sl, r0, lsl #2]
   29590:	ldr	lr, [r6, r0, lsl #2]
   29594:	mov	r6, lr
   29598:	mul	r2, r6, r2
   2959c:	ldr	r6, [r1, -r4, lsl #2]
   295a0:	add	r4, r4, #1
   295a4:	cmp	r0, r4
   295a8:	mul	r5, r5, r6
   295ac:	bne	29598 <GetDataSlab+0x707c>
   295b0:	add	r9, sp, #64	; 0x40
   295b4:	sub	sl, fp, #72	; 0x48
   295b8:	ldr	r4, [fp, #20]
   295bc:	add	r1, r1, #4
   295c0:	str	r2, [r9, r0, lsl #2]
   295c4:	str	r5, [sl, r0, lsl #2]
   295c8:	ldr	r6, [ip, r0, lsl #2]
   295cc:	mla	r3, r6, r7, r3
   295d0:	ldr	r7, [r4, r0, lsl #2]
   295d4:	ldr	r4, [sp, #56]	; 0x38
   295d8:	add	r0, r0, #1
   295dc:	mul	r4, r7, r4
   295e0:	mov	r7, r2
   295e4:	mov	r2, lr
   295e8:	str	r4, [sp, #56]	; 0x38
   295ec:	ldr	r4, [fp, #24]
   295f0:	cmp	r0, r4
   295f4:	bne	29574 <GetDataSlab+0x7058>
   295f8:	ldr	r0, [sp, #52]	; 0x34
   295fc:	cmp	r8, #1
   29600:	mov	r1, sl
   29604:	add	r5, r0, r3
   29608:	bne	351e4 <GetDataSlab+0x12cc8>
   2960c:	ldr	r0, [sp, #56]	; 0x38
   29610:	ldr	r2, [sp, #48]	; 0x30
   29614:	cmp	r0, #1
   29618:	blt	242a8 <GetDataSlab+0x1d8c>
   2961c:	ldr	r0, [fp, #20]
   29620:	add	sl, ip, #4
   29624:	orr	r9, r1, #4
   29628:	mov	r8, #0
   2962c:	add	lr, r0, #4
   29630:	add	r0, sp, #104	; 0x68
   29634:	orr	r6, r0, #4
   29638:	lsl	r0, r2, #1
   2963c:	str	r0, [sp, #52]	; 0x34
   29640:	cmp	r2, #1
   29644:	blt	2966c <GetDataSlab+0x7150>
   29648:	ldr	r0, [fp, #12]
   2964c:	ldr	ip, [sp, #48]	; 0x30
   29650:	ldr	r4, [sp, #60]	; 0x3c
   29654:	ldr	r0, [r0]
   29658:	add	r0, r5, r0
   2965c:	ldrb	r1, [r0], #1
   29660:	subs	ip, ip, #1
   29664:	strh	r1, [r4], #2
   29668:	bne	2965c <GetDataSlab+0x7140>
   2966c:	ldr	r0, [sp, #44]	; 0x2c
   29670:	add	ip, sp, #64	; 0x40
   29674:	add	r5, r5, r0
   29678:	add	r3, r3, r0
   2967c:	ldr	r0, [fp, #24]
   29680:	cmp	r0, #2
   29684:	blt	29724 <GetDataSlab+0x7208>
   29688:	mov	r4, #0
   2968c:	ldr	r1, [r6, r4, lsl #2]
   29690:	mov	r0, r4
   29694:	add	r1, r1, #1
   29698:	str	r1, [r6, r4, lsl #2]
   2969c:	ldr	r4, [lr, r4, lsl #2]
   296a0:	sdiv	r2, r1, r4
   296a4:	mls	r1, r2, r4, r1
   296a8:	cmp	r1, #0
   296ac:	bne	29718 <GetDataSlab+0x71fc>
   296b0:	mov	r1, #0
   296b4:	str	r1, [r6, r0, lsl #2]
   296b8:	add	r1, ip, r0, lsl #2
   296bc:	ldr	r4, [r1, #4]
   296c0:	sdiv	r1, r3, r4
   296c4:	mls	r1, r1, r4, r3
   296c8:	cmp	r1, #0
   296cc:	beq	296ec <GetDataSlab+0x71d0>
   296d0:	ldr	r2, [ip, r0, lsl #2]
   296d4:	ldr	r7, [sl, r0, lsl #2]
   296d8:	sub	r1, r4, r1
   296dc:	mla	r1, r7, r2, r1
   296e0:	add	r3, r1, r3
   296e4:	add	r5, r5, r1
   296e8:	b	29700 <GetDataSlab+0x71e4>
   296ec:	ldr	r1, [sl, r0, lsl #2]
   296f0:	cmp	r1, #0
   296f4:	ldrne	r2, [ip, r0, lsl #2]
   296f8:	mlane	r3, r2, r1, r3
   296fc:	mlane	r5, r2, r1, r5
   29700:	ldr	r1, [fp, #24]
   29704:	add	r4, r0, #1
   29708:	add	r0, r0, #2
   2970c:	cmp	r0, r1
   29710:	blt	2968c <GetDataSlab+0x7170>
   29714:	b	29724 <GetDataSlab+0x7208>
   29718:	ldr	r0, [r9, r0, lsl #2]
   2971c:	add	r5, r5, r0
   29720:	add	r3, r0, r3
   29724:	ldr	r0, [sp, #60]	; 0x3c
   29728:	ldr	r1, [sp, #52]	; 0x34
   2972c:	ldr	r2, [sp, #48]	; 0x30
   29730:	add	r0, r0, r1
   29734:	ldr	r1, [sp, #56]	; 0x38
   29738:	add	r8, r8, r2
   2973c:	str	r0, [sp, #60]	; 0x3c
   29740:	mov	r0, #0
   29744:	cmp	r8, r1
   29748:	blt	29640 <GetDataSlab+0x7124>
   2974c:	b	242ac <GetDataSlab+0x1d90>
   29750:	ldr	r0, [sl]
   29754:	mov	r2, #0
   29758:	add	r3, sp, #64	; 0x40
   2975c:	sub	lr, fp, #72	; 0x48
   29760:	str	r0, [sp, #28]
   29764:	sub	r0, r0, #1
   29768:	str	r0, [fp, #-72]	; 0xffffffb8
   2976c:	ldr	r0, [r9]
   29770:	str	r0, [sp, #64]	; 0x40
   29774:	str	r0, [sp, #40]	; 0x28
   29778:	ldr	r0, [fp, #24]
   2977c:	ldr	r1, [r8]
   29780:	cmp	r0, #2
   29784:	str	r1, [sp, #44]	; 0x2c
   29788:	str	r1, [sp, #48]	; 0x30
   2978c:	blt	29824 <GetDataSlab+0x7308>
   29790:	ldr	r6, [sp, #40]	; 0x28
   29794:	ldr	r0, [sp, #44]	; 0x2c
   29798:	mov	r1, #1
   2979c:	mov	r2, #0
   297a0:	mov	r7, r9
   297a4:	mov	r5, r6
   297a8:	str	r0, [sp, #48]	; 0x30
   297ac:	ldr	r0, [sl, r1, lsl #2]
   297b0:	str	r6, [r3, r1, lsl #2]
   297b4:	mov	r3, #0
   297b8:	sub	r0, r0, #1
   297bc:	str	r0, [lr, r1, lsl #2]
   297c0:	ldr	r8, [r9, r1, lsl #2]
   297c4:	mov	r4, r8
   297c8:	mul	r6, r4, r6
   297cc:	ldr	r4, [r7, -r3, lsl #2]
   297d0:	add	r3, r3, #1
   297d4:	cmp	r1, r3
   297d8:	mul	r0, r0, r4
   297dc:	bne	297c8 <GetDataSlab+0x72ac>
   297e0:	add	r3, sp, #64	; 0x40
   297e4:	str	r0, [lr, r1, lsl #2]
   297e8:	ldr	r4, [sp, #48]	; 0x30
   297ec:	add	r7, r7, #4
   297f0:	str	r6, [r3, r1, lsl #2]
   297f4:	ldr	r0, [ip, r1, lsl #2]
   297f8:	mla	r2, r0, r5, r2
   297fc:	ldr	r0, [fp, #20]
   29800:	mov	r5, r6
   29804:	mov	r6, r8
   29808:	ldr	r0, [r0, r1, lsl #2]
   2980c:	add	r1, r1, #1
   29810:	mul	r4, r0, r4
   29814:	ldr	r0, [fp, #24]
   29818:	str	r4, [sp, #48]	; 0x30
   2981c:	cmp	r1, r0
   29820:	bne	297ac <GetDataSlab+0x7290>
   29824:	ldr	r0, [sp, #52]	; 0x34
   29828:	ldr	r6, [sp, #28]
   2982c:	add	r9, r0, r2, lsl #1
   29830:	cmp	r6, #1
   29834:	bne	3536c <GetDataSlab+0x12e50>
   29838:	ldr	r0, [sp, #48]	; 0x30
   2983c:	cmp	r0, #1
   29840:	ldr	r0, [fp, #20]
   29844:	blt	242a8 <GetDataSlab+0x1d8c>
   29848:	ldr	r1, [sp, #44]	; 0x2c
   2984c:	add	sl, r0, #4
   29850:	add	r0, sp, #104	; 0x68
   29854:	mov	r8, #0
   29858:	orr	r6, r0, #4
   2985c:	orr	r0, lr, #4
   29860:	mov	lr, #0
   29864:	str	r0, [sp, #32]
   29868:	lsl	r0, r1, #1
   2986c:	str	r0, [sp, #52]	; 0x34
   29870:	ldr	r0, [ip], #4
   29874:	str	ip, [sp, #56]	; 0x38
   29878:	str	r0, [sp, #36]	; 0x24
   2987c:	ldr	r5, [sp, #56]	; 0x38
   29880:	cmp	r1, #1
   29884:	blt	298a8 <GetDataSlab+0x738c>
   29888:	ldr	r0, [sp, #36]	; 0x24
   2988c:	ldr	r3, [sp, #60]	; 0x3c
   29890:	mov	ip, r1
   29894:	add	r0, r9, r0, lsl #1
   29898:	ldrh	r4, [r0], #2
   2989c:	subs	ip, ip, #1
   298a0:	strh	r4, [r3], #2
   298a4:	bne	29898 <GetDataSlab+0x737c>
   298a8:	ldr	r0, [sp, #40]	; 0x28
   298ac:	add	ip, sp, #64	; 0x40
   298b0:	add	r9, r9, r0, lsl #1
   298b4:	add	r2, r2, r0
   298b8:	ldr	r0, [fp, #24]
   298bc:	cmp	r0, #2
   298c0:	blt	29964 <GetDataSlab+0x7448>
   298c4:	mov	r3, #0
   298c8:	mov	r0, r3
   298cc:	ldr	r3, [r6, r3, lsl #2]
   298d0:	add	r3, r3, #1
   298d4:	str	r3, [r6, r0, lsl #2]
   298d8:	ldr	r4, [sl, r0, lsl #2]
   298dc:	sdiv	r1, r3, r4
   298e0:	mls	r1, r1, r4, r3
   298e4:	cmp	r1, #0
   298e8:	bne	29954 <GetDataSlab+0x7438>
   298ec:	add	r1, ip, r0, lsl #2
   298f0:	str	r8, [r6, r0, lsl #2]
   298f4:	ldr	r3, [r1, #4]
   298f8:	sdiv	r1, r2, r3
   298fc:	mls	r4, r1, r3, r2
   29900:	cmp	r4, #0
   29904:	beq	29920 <GetDataSlab+0x7404>
   29908:	ldr	r1, [ip, r0, lsl #2]
   2990c:	ldr	r7, [r5, r0, lsl #2]
   29910:	sub	r3, r3, r4
   29914:	mla	r1, r7, r1, r3
   29918:	add	r2, r1, r2
   2991c:	b	29938 <GetDataSlab+0x741c>
   29920:	ldr	r3, [r5, r0, lsl #2]
   29924:	cmp	r3, #0
   29928:	beq	2993c <GetDataSlab+0x7420>
   2992c:	ldr	r1, [ip, r0, lsl #2]
   29930:	mla	r2, r1, r3, r2
   29934:	mul	r1, r1, r3
   29938:	add	r9, r9, r1, lsl #1
   2993c:	ldr	r1, [fp, #24]
   29940:	add	r3, r0, #1
   29944:	add	r0, r0, #2
   29948:	cmp	r0, r1
   2994c:	blt	298c8 <GetDataSlab+0x73ac>
   29950:	b	29964 <GetDataSlab+0x7448>
   29954:	ldr	r1, [sp, #32]
   29958:	ldr	r0, [r1, r0, lsl #2]
   2995c:	add	r9, r9, r0, lsl #1
   29960:	add	r2, r0, r2
   29964:	ldr	r0, [sp, #60]	; 0x3c
   29968:	ldr	r1, [sp, #52]	; 0x34
   2996c:	ldr	r3, [sp, #48]	; 0x30
   29970:	add	r0, r0, r1
   29974:	ldr	r1, [sp, #44]	; 0x2c
   29978:	str	r0, [sp, #60]	; 0x3c
   2997c:	mov	r0, #0
   29980:	add	lr, lr, r1
   29984:	cmp	lr, r3
   29988:	blt	29880 <GetDataSlab+0x7364>
   2998c:	b	242ac <GetDataSlab+0x1d90>
   29990:	ldr	r0, [sl]
   29994:	mov	r2, #0
   29998:	add	r3, sp, #64	; 0x40
   2999c:	sub	lr, fp, #72	; 0x48
   299a0:	str	r0, [sp, #28]
   299a4:	sub	r0, r0, #1
   299a8:	str	r0, [fp, #-72]	; 0xffffffb8
   299ac:	ldr	r0, [r9]
   299b0:	str	r0, [sp, #64]	; 0x40
   299b4:	str	r0, [sp, #40]	; 0x28
   299b8:	ldr	r0, [fp, #24]
   299bc:	ldr	r1, [r8]
   299c0:	cmp	r0, #2
   299c4:	str	r1, [sp, #44]	; 0x2c
   299c8:	str	r1, [sp, #48]	; 0x30
   299cc:	blt	29a64 <GetDataSlab+0x7548>
   299d0:	ldr	r6, [sp, #40]	; 0x28
   299d4:	ldr	r0, [sp, #44]	; 0x2c
   299d8:	mov	r1, #1
   299dc:	mov	r2, #0
   299e0:	mov	r7, r9
   299e4:	mov	r5, r6
   299e8:	str	r0, [sp, #48]	; 0x30
   299ec:	ldr	r0, [sl, r1, lsl #2]
   299f0:	str	r6, [r3, r1, lsl #2]
   299f4:	mov	r3, #0
   299f8:	sub	r0, r0, #1
   299fc:	str	r0, [lr, r1, lsl #2]
   29a00:	ldr	r8, [r9, r1, lsl #2]
   29a04:	mov	r4, r8
   29a08:	mul	r6, r4, r6
   29a0c:	ldr	r4, [r7, -r3, lsl #2]
   29a10:	add	r3, r3, #1
   29a14:	cmp	r1, r3
   29a18:	mul	r0, r0, r4
   29a1c:	bne	29a08 <GetDataSlab+0x74ec>
   29a20:	add	r3, sp, #64	; 0x40
   29a24:	str	r0, [lr, r1, lsl #2]
   29a28:	ldr	r4, [sp, #48]	; 0x30
   29a2c:	add	r7, r7, #4
   29a30:	str	r6, [r3, r1, lsl #2]
   29a34:	ldr	r0, [ip, r1, lsl #2]
   29a38:	mla	r2, r0, r5, r2
   29a3c:	ldr	r0, [fp, #20]
   29a40:	mov	r5, r6
   29a44:	mov	r6, r8
   29a48:	ldr	r0, [r0, r1, lsl #2]
   29a4c:	add	r1, r1, #1
   29a50:	mul	r4, r0, r4
   29a54:	ldr	r0, [fp, #24]
   29a58:	str	r4, [sp, #48]	; 0x30
   29a5c:	cmp	r1, r0
   29a60:	bne	299ec <GetDataSlab+0x74d0>
   29a64:	ldr	r0, [sp, #52]	; 0x34
   29a68:	ldr	r6, [sp, #28]
   29a6c:	add	r9, r0, r2, lsl #1
   29a70:	cmp	r6, #1
   29a74:	bne	354f8 <GetDataSlab+0x12fdc>
   29a78:	ldr	r0, [sp, #48]	; 0x30
   29a7c:	cmp	r0, #1
   29a80:	ldr	r0, [fp, #20]
   29a84:	blt	242a8 <GetDataSlab+0x1d8c>
   29a88:	ldr	r1, [sp, #44]	; 0x2c
   29a8c:	add	sl, r0, #4
   29a90:	add	r0, sp, #104	; 0x68
   29a94:	mov	r8, #0
   29a98:	orr	r6, r0, #4
   29a9c:	orr	r0, lr, #4
   29aa0:	mov	lr, #0
   29aa4:	str	r0, [sp, #32]
   29aa8:	lsl	r0, r1, #1
   29aac:	str	r0, [sp, #52]	; 0x34
   29ab0:	ldr	r0, [ip], #4
   29ab4:	str	ip, [sp, #56]	; 0x38
   29ab8:	str	r0, [sp, #36]	; 0x24
   29abc:	ldr	r5, [sp, #56]	; 0x38
   29ac0:	cmp	r1, #1
   29ac4:	blt	29ae8 <GetDataSlab+0x75cc>
   29ac8:	ldr	r0, [sp, #36]	; 0x24
   29acc:	ldr	r3, [sp, #60]	; 0x3c
   29ad0:	mov	ip, r1
   29ad4:	add	r0, r9, r0, lsl #1
   29ad8:	ldrh	r4, [r0], #2
   29adc:	subs	ip, ip, #1
   29ae0:	strh	r4, [r3], #2
   29ae4:	bne	29ad8 <GetDataSlab+0x75bc>
   29ae8:	ldr	r0, [sp, #40]	; 0x28
   29aec:	add	ip, sp, #64	; 0x40
   29af0:	add	r9, r9, r0, lsl #1
   29af4:	add	r2, r2, r0
   29af8:	ldr	r0, [fp, #24]
   29afc:	cmp	r0, #2
   29b00:	blt	29ba4 <GetDataSlab+0x7688>
   29b04:	mov	r3, #0
   29b08:	mov	r0, r3
   29b0c:	ldr	r3, [r6, r3, lsl #2]
   29b10:	add	r3, r3, #1
   29b14:	str	r3, [r6, r0, lsl #2]
   29b18:	ldr	r4, [sl, r0, lsl #2]
   29b1c:	sdiv	r1, r3, r4
   29b20:	mls	r1, r1, r4, r3
   29b24:	cmp	r1, #0
   29b28:	bne	29b94 <GetDataSlab+0x7678>
   29b2c:	add	r1, ip, r0, lsl #2
   29b30:	str	r8, [r6, r0, lsl #2]
   29b34:	ldr	r3, [r1, #4]
   29b38:	sdiv	r1, r2, r3
   29b3c:	mls	r4, r1, r3, r2
   29b40:	cmp	r4, #0
   29b44:	beq	29b60 <GetDataSlab+0x7644>
   29b48:	ldr	r1, [ip, r0, lsl #2]
   29b4c:	ldr	r7, [r5, r0, lsl #2]
   29b50:	sub	r3, r3, r4
   29b54:	mla	r1, r7, r1, r3
   29b58:	add	r2, r1, r2
   29b5c:	b	29b78 <GetDataSlab+0x765c>
   29b60:	ldr	r3, [r5, r0, lsl #2]
   29b64:	cmp	r3, #0
   29b68:	beq	29b7c <GetDataSlab+0x7660>
   29b6c:	ldr	r1, [ip, r0, lsl #2]
   29b70:	mla	r2, r1, r3, r2
   29b74:	mul	r1, r1, r3
   29b78:	add	r9, r9, r1, lsl #1
   29b7c:	ldr	r1, [fp, #24]
   29b80:	add	r3, r0, #1
   29b84:	add	r0, r0, #2
   29b88:	cmp	r0, r1
   29b8c:	blt	29b08 <GetDataSlab+0x75ec>
   29b90:	b	29ba4 <GetDataSlab+0x7688>
   29b94:	ldr	r1, [sp, #32]
   29b98:	ldr	r0, [r1, r0, lsl #2]
   29b9c:	add	r9, r9, r0, lsl #1
   29ba0:	add	r2, r0, r2
   29ba4:	ldr	r0, [sp, #60]	; 0x3c
   29ba8:	ldr	r1, [sp, #52]	; 0x34
   29bac:	ldr	r3, [sp, #48]	; 0x30
   29bb0:	add	r0, r0, r1
   29bb4:	ldr	r1, [sp, #44]	; 0x2c
   29bb8:	str	r0, [sp, #60]	; 0x3c
   29bbc:	mov	r0, #0
   29bc0:	add	lr, lr, r1
   29bc4:	cmp	lr, r3
   29bc8:	blt	29ac0 <GetDataSlab+0x75a4>
   29bcc:	b	242ac <GetDataSlab+0x1d90>
   29bd0:	ldr	r0, [sl]
   29bd4:	mov	r3, #0
   29bd8:	add	r2, sp, #64	; 0x40
   29bdc:	sub	lr, fp, #72	; 0x48
   29be0:	str	r0, [sp, #28]
   29be4:	sub	r0, r0, #1
   29be8:	str	r0, [fp, #-72]	; 0xffffffb8
   29bec:	ldr	r0, [r9]
   29bf0:	str	r0, [sp, #64]	; 0x40
   29bf4:	str	r0, [sp, #44]	; 0x2c
   29bf8:	ldr	r0, [fp, #24]
   29bfc:	ldr	r1, [r8]
   29c00:	cmp	r0, #2
   29c04:	str	r1, [sp, #48]	; 0x30
   29c08:	str	r1, [sp, #56]	; 0x38
   29c0c:	blt	29ca4 <GetDataSlab+0x7788>
   29c10:	ldr	r6, [sp, #44]	; 0x2c
   29c14:	ldr	r0, [sp, #48]	; 0x30
   29c18:	mov	r1, #1
   29c1c:	mov	r3, #0
   29c20:	mov	r7, r9
   29c24:	mov	r5, r6
   29c28:	str	r0, [sp, #56]	; 0x38
   29c2c:	ldr	r0, [sl, r1, lsl #2]
   29c30:	str	r6, [r2, r1, lsl #2]
   29c34:	mov	r2, #0
   29c38:	sub	r0, r0, #1
   29c3c:	str	r0, [lr, r1, lsl #2]
   29c40:	ldr	sl, [r9, r1, lsl #2]
   29c44:	mov	r4, sl
   29c48:	mul	r6, r4, r6
   29c4c:	ldr	r4, [r7, -r2, lsl #2]
   29c50:	add	r2, r2, #1
   29c54:	cmp	r1, r2
   29c58:	mul	r0, r0, r4
   29c5c:	bne	29c48 <GetDataSlab+0x772c>
   29c60:	add	r2, sp, #64	; 0x40
   29c64:	str	r0, [lr, r1, lsl #2]
   29c68:	ldr	r4, [sp, #56]	; 0x38
   29c6c:	add	r7, r7, #4
   29c70:	str	r6, [r2, r1, lsl #2]
   29c74:	ldr	r0, [ip, r1, lsl #2]
   29c78:	mla	r3, r0, r5, r3
   29c7c:	ldr	r0, [r8, r1, lsl #2]
   29c80:	mov	r5, r6
   29c84:	mov	r6, sl
   29c88:	ldr	sl, [fp, #16]
   29c8c:	add	r1, r1, #1
   29c90:	mul	r4, r0, r4
   29c94:	ldr	r0, [fp, #24]
   29c98:	str	r4, [sp, #56]	; 0x38
   29c9c:	cmp	r1, r0
   29ca0:	bne	29c2c <GetDataSlab+0x7710>
   29ca4:	ldr	r0, [sp, #52]	; 0x34
   29ca8:	ldr	r2, [sp, #28]
   29cac:	add	lr, r0, r3, lsl #2
   29cb0:	cmp	r2, #1
   29cb4:	bne	35684 <GetDataSlab+0x13168>
   29cb8:	ldr	r0, [sp, #56]	; 0x38
   29cbc:	ldr	r9, [sp, #48]	; 0x30
   29cc0:	cmp	r0, #1
   29cc4:	blt	242a8 <GetDataSlab+0x1d8c>
   29cc8:	mov	r0, r8
   29ccc:	add	r8, ip, #4
   29cd0:	mov	ip, #0
   29cd4:	add	sl, r0, #4
   29cd8:	add	r0, sp, #104	; 0x68
   29cdc:	orr	r6, r0, #4
   29ce0:	sub	r0, fp, #72	; 0x48
   29ce4:	orr	r0, r0, #4
   29ce8:	str	r0, [sp, #40]	; 0x28
   29cec:	lsl	r0, r9, #1
   29cf0:	str	r0, [sp, #52]	; 0x34
   29cf4:	ldr	r5, [sp, #60]	; 0x3c
   29cf8:	cmp	r9, #1
   29cfc:	blt	29d24 <GetDataSlab+0x7808>
   29d00:	ldr	r0, [fp, #12]
   29d04:	ldr	r9, [sp, #48]	; 0x30
   29d08:	mov	r2, r5
   29d0c:	ldr	r0, [r0]
   29d10:	add	r0, lr, r0, lsl #2
   29d14:	ldr	r4, [r0], #4
   29d18:	subs	r9, r9, #1
   29d1c:	strh	r4, [r2], #2
   29d20:	bne	29d14 <GetDataSlab+0x77f8>
   29d24:	ldr	r0, [sp, #44]	; 0x2c
   29d28:	add	lr, lr, r0, lsl #2
   29d2c:	add	r3, r3, r0
   29d30:	ldr	r0, [fp, #24]
   29d34:	cmp	r0, #2
   29d38:	blt	29ddc <GetDataSlab+0x78c0>
   29d3c:	ldr	r9, [sp, #48]	; 0x30
   29d40:	mov	r2, #0
   29d44:	mov	r0, r2
   29d48:	ldr	r2, [r6, r2, lsl #2]
   29d4c:	add	r2, r2, #1
   29d50:	str	r2, [r6, r0, lsl #2]
   29d54:	ldr	r4, [sl, r0, lsl #2]
   29d58:	sdiv	r1, r2, r4
   29d5c:	mls	r1, r1, r4, r2
   29d60:	cmp	r1, #0
   29d64:	bne	29de4 <GetDataSlab+0x78c8>
   29d68:	mov	r1, #0
   29d6c:	add	r7, sp, #64	; 0x40
   29d70:	str	r1, [r6, r0, lsl #2]
   29d74:	add	r1, r7, r0, lsl #2
   29d78:	ldr	r2, [r1, #4]
   29d7c:	sdiv	r1, r3, r2
   29d80:	mls	r4, r1, r2, r3
   29d84:	cmp	r4, #0
   29d88:	beq	29da4 <GetDataSlab+0x7888>
   29d8c:	ldr	r1, [r7, r0, lsl #2]
   29d90:	ldr	r7, [r8, r0, lsl #2]
   29d94:	sub	r2, r2, r4
   29d98:	mla	r1, r7, r1, r2
   29d9c:	add	r3, r1, r3
   29da0:	b	29dc0 <GetDataSlab+0x78a4>
   29da4:	ldr	r2, [r8, r0, lsl #2]
   29da8:	cmp	r2, #0
   29dac:	beq	29dc4 <GetDataSlab+0x78a8>
   29db0:	add	r1, sp, #64	; 0x40
   29db4:	ldr	r1, [r1, r0, lsl #2]
   29db8:	mla	r3, r1, r2, r3
   29dbc:	mul	r1, r1, r2
   29dc0:	add	lr, lr, r1, lsl #2
   29dc4:	ldr	r1, [fp, #24]
   29dc8:	add	r2, r0, #1
   29dcc:	add	r0, r0, #2
   29dd0:	cmp	r0, r1
   29dd4:	blt	29d44 <GetDataSlab+0x7828>
   29dd8:	b	29df4 <GetDataSlab+0x78d8>
   29ddc:	ldr	r9, [sp, #48]	; 0x30
   29de0:	b	29df4 <GetDataSlab+0x78d8>
   29de4:	ldr	r1, [sp, #40]	; 0x28
   29de8:	ldr	r0, [r1, r0, lsl #2]
   29dec:	add	lr, lr, r0, lsl #2
   29df0:	add	r3, r0, r3
   29df4:	ldr	r0, [sp, #52]	; 0x34
   29df8:	ldr	r1, [sp, #56]	; 0x38
   29dfc:	add	ip, ip, r9
   29e00:	add	r5, r5, r0
   29e04:	mov	r0, #0
   29e08:	cmp	ip, r1
   29e0c:	str	r5, [sp, #60]	; 0x3c
   29e10:	blt	29cf4 <GetDataSlab+0x77d8>
   29e14:	b	242ac <GetDataSlab+0x1d90>
   29e18:	ldr	r0, [sl]
   29e1c:	mov	r3, #0
   29e20:	add	r2, sp, #64	; 0x40
   29e24:	sub	lr, fp, #72	; 0x48
   29e28:	str	r0, [sp, #28]
   29e2c:	sub	r0, r0, #1
   29e30:	str	r0, [fp, #-72]	; 0xffffffb8
   29e34:	ldr	r0, [r9]
   29e38:	str	r0, [sp, #64]	; 0x40
   29e3c:	str	r0, [sp, #44]	; 0x2c
   29e40:	ldr	r0, [fp, #24]
   29e44:	ldr	r1, [r8]
   29e48:	cmp	r0, #2
   29e4c:	str	r1, [sp, #48]	; 0x30
   29e50:	str	r1, [sp, #56]	; 0x38
   29e54:	blt	29eec <GetDataSlab+0x79d0>
   29e58:	ldr	r6, [sp, #44]	; 0x2c
   29e5c:	ldr	r0, [sp, #48]	; 0x30
   29e60:	mov	r1, #1
   29e64:	mov	r3, #0
   29e68:	mov	r7, r9
   29e6c:	mov	r5, r6
   29e70:	str	r0, [sp, #56]	; 0x38
   29e74:	ldr	r0, [sl, r1, lsl #2]
   29e78:	str	r6, [r2, r1, lsl #2]
   29e7c:	mov	r2, #0
   29e80:	sub	r0, r0, #1
   29e84:	str	r0, [lr, r1, lsl #2]
   29e88:	ldr	sl, [r9, r1, lsl #2]
   29e8c:	mov	r4, sl
   29e90:	mul	r6, r4, r6
   29e94:	ldr	r4, [r7, -r2, lsl #2]
   29e98:	add	r2, r2, #1
   29e9c:	cmp	r1, r2
   29ea0:	mul	r0, r0, r4
   29ea4:	bne	29e90 <GetDataSlab+0x7974>
   29ea8:	add	r2, sp, #64	; 0x40
   29eac:	str	r0, [lr, r1, lsl #2]
   29eb0:	ldr	r4, [sp, #56]	; 0x38
   29eb4:	add	r7, r7, #4
   29eb8:	str	r6, [r2, r1, lsl #2]
   29ebc:	ldr	r0, [ip, r1, lsl #2]
   29ec0:	mla	r3, r0, r5, r3
   29ec4:	ldr	r0, [r8, r1, lsl #2]
   29ec8:	mov	r5, r6
   29ecc:	mov	r6, sl
   29ed0:	ldr	sl, [fp, #16]
   29ed4:	add	r1, r1, #1
   29ed8:	mul	r4, r0, r4
   29edc:	ldr	r0, [fp, #24]
   29ee0:	str	r4, [sp, #56]	; 0x38
   29ee4:	cmp	r1, r0
   29ee8:	bne	29e74 <GetDataSlab+0x7958>
   29eec:	ldr	r0, [sp, #52]	; 0x34
   29ef0:	ldr	r2, [sp, #28]
   29ef4:	add	lr, r0, r3, lsl #2
   29ef8:	cmp	r2, #1
   29efc:	bne	35828 <GetDataSlab+0x1330c>
   29f00:	ldr	r0, [sp, #56]	; 0x38
   29f04:	ldr	r9, [sp, #48]	; 0x30
   29f08:	cmp	r0, #1
   29f0c:	blt	242a8 <GetDataSlab+0x1d8c>
   29f10:	mov	r0, r8
   29f14:	add	r8, ip, #4
   29f18:	mov	ip, #0
   29f1c:	add	sl, r0, #4
   29f20:	add	r0, sp, #104	; 0x68
   29f24:	orr	r6, r0, #4
   29f28:	sub	r0, fp, #72	; 0x48
   29f2c:	orr	r0, r0, #4
   29f30:	str	r0, [sp, #40]	; 0x28
   29f34:	lsl	r0, r9, #1
   29f38:	str	r0, [sp, #52]	; 0x34
   29f3c:	ldr	r5, [sp, #60]	; 0x3c
   29f40:	cmp	r9, #1
   29f44:	blt	29f6c <GetDataSlab+0x7a50>
   29f48:	ldr	r0, [fp, #12]
   29f4c:	ldr	r9, [sp, #48]	; 0x30
   29f50:	mov	r2, r5
   29f54:	ldr	r0, [r0]
   29f58:	add	r0, lr, r0, lsl #2
   29f5c:	ldr	r4, [r0], #4
   29f60:	subs	r9, r9, #1
   29f64:	strh	r4, [r2], #2
   29f68:	bne	29f5c <GetDataSlab+0x7a40>
   29f6c:	ldr	r0, [sp, #44]	; 0x2c
   29f70:	add	lr, lr, r0, lsl #2
   29f74:	add	r3, r3, r0
   29f78:	ldr	r0, [fp, #24]
   29f7c:	cmp	r0, #2
   29f80:	blt	2a024 <GetDataSlab+0x7b08>
   29f84:	ldr	r9, [sp, #48]	; 0x30
   29f88:	mov	r2, #0
   29f8c:	mov	r0, r2
   29f90:	ldr	r2, [r6, r2, lsl #2]
   29f94:	add	r2, r2, #1
   29f98:	str	r2, [r6, r0, lsl #2]
   29f9c:	ldr	r4, [sl, r0, lsl #2]
   29fa0:	sdiv	r1, r2, r4
   29fa4:	mls	r1, r1, r4, r2
   29fa8:	cmp	r1, #0
   29fac:	bne	2a02c <GetDataSlab+0x7b10>
   29fb0:	mov	r1, #0
   29fb4:	add	r7, sp, #64	; 0x40
   29fb8:	str	r1, [r6, r0, lsl #2]
   29fbc:	add	r1, r7, r0, lsl #2
   29fc0:	ldr	r2, [r1, #4]
   29fc4:	sdiv	r1, r3, r2
   29fc8:	mls	r4, r1, r2, r3
   29fcc:	cmp	r4, #0
   29fd0:	beq	29fec <GetDataSlab+0x7ad0>
   29fd4:	ldr	r1, [r7, r0, lsl #2]
   29fd8:	ldr	r7, [r8, r0, lsl #2]
   29fdc:	sub	r2, r2, r4
   29fe0:	mla	r1, r7, r1, r2
   29fe4:	add	r3, r1, r3
   29fe8:	b	2a008 <GetDataSlab+0x7aec>
   29fec:	ldr	r2, [r8, r0, lsl #2]
   29ff0:	cmp	r2, #0
   29ff4:	beq	2a00c <GetDataSlab+0x7af0>
   29ff8:	add	r1, sp, #64	; 0x40
   29ffc:	ldr	r1, [r1, r0, lsl #2]
   2a000:	mla	r3, r1, r2, r3
   2a004:	mul	r1, r1, r2
   2a008:	add	lr, lr, r1, lsl #2
   2a00c:	ldr	r1, [fp, #24]
   2a010:	add	r2, r0, #1
   2a014:	add	r0, r0, #2
   2a018:	cmp	r0, r1
   2a01c:	blt	29f8c <GetDataSlab+0x7a70>
   2a020:	b	2a03c <GetDataSlab+0x7b20>
   2a024:	ldr	r9, [sp, #48]	; 0x30
   2a028:	b	2a03c <GetDataSlab+0x7b20>
   2a02c:	ldr	r1, [sp, #40]	; 0x28
   2a030:	ldr	r0, [r1, r0, lsl #2]
   2a034:	add	lr, lr, r0, lsl #2
   2a038:	add	r3, r0, r3
   2a03c:	ldr	r0, [sp, #52]	; 0x34
   2a040:	ldr	r1, [sp, #56]	; 0x38
   2a044:	add	ip, ip, r9
   2a048:	add	r5, r5, r0
   2a04c:	mov	r0, #0
   2a050:	cmp	ip, r1
   2a054:	str	r5, [sp, #60]	; 0x3c
   2a058:	blt	29f3c <GetDataSlab+0x7a20>
   2a05c:	b	242ac <GetDataSlab+0x1d90>
   2a060:	mov	r1, r8
   2a064:	ldr	r8, [sl]
   2a068:	mov	r2, #0
   2a06c:	add	r3, sp, #64	; 0x40
   2a070:	sub	r4, fp, #72	; 0x48
   2a074:	sub	r0, r8, #1
   2a078:	str	r0, [fp, #-72]	; 0xffffffb8
   2a07c:	ldr	r0, [r9]
   2a080:	str	r0, [sp, #64]	; 0x40
   2a084:	str	r0, [sp, #40]	; 0x28
   2a088:	ldr	r0, [fp, #24]
   2a08c:	ldr	r1, [r1]
   2a090:	cmp	r0, #2
   2a094:	str	r1, [sp, #44]	; 0x2c
   2a098:	str	r1, [sp, #48]	; 0x30
   2a09c:	blt	2a138 <GetDataSlab+0x7c1c>
   2a0a0:	ldr	r6, [sp, #40]	; 0x28
   2a0a4:	ldr	r0, [sp, #44]	; 0x2c
   2a0a8:	mov	r1, #1
   2a0ac:	mov	r2, #0
   2a0b0:	mov	r7, r9
   2a0b4:	mov	r5, r6
   2a0b8:	str	r0, [sp, #48]	; 0x30
   2a0bc:	ldr	r0, [sl, r1, lsl #2]
   2a0c0:	str	r6, [r3, r1, lsl #2]
   2a0c4:	mov	r3, #0
   2a0c8:	sub	r0, r0, #1
   2a0cc:	str	r0, [r4, r1, lsl #2]
   2a0d0:	ldr	lr, [r9, r1, lsl #2]
   2a0d4:	mov	r4, lr
   2a0d8:	mul	r6, r4, r6
   2a0dc:	ldr	r4, [r7, -r3, lsl #2]
   2a0e0:	add	r3, r3, #1
   2a0e4:	cmp	r1, r3
   2a0e8:	mul	r0, r0, r4
   2a0ec:	bne	2a0d8 <GetDataSlab+0x7bbc>
   2a0f0:	add	r3, sp, #64	; 0x40
   2a0f4:	sub	r4, fp, #72	; 0x48
   2a0f8:	add	r7, r7, #4
   2a0fc:	str	r6, [r3, r1, lsl #2]
   2a100:	str	r0, [r4, r1, lsl #2]
   2a104:	ldr	r0, [ip, r1, lsl #2]
   2a108:	mla	r2, r0, r5, r2
   2a10c:	ldr	r0, [fp, #20]
   2a110:	ldr	r5, [sp, #48]	; 0x30
   2a114:	ldr	r0, [r0, r1, lsl #2]
   2a118:	add	r1, r1, #1
   2a11c:	mul	r5, r0, r5
   2a120:	ldr	r0, [fp, #24]
   2a124:	str	r5, [sp, #48]	; 0x30
   2a128:	mov	r5, r6
   2a12c:	mov	r6, lr
   2a130:	cmp	r1, r0
   2a134:	bne	2a0bc <GetDataSlab+0x7ba0>
   2a138:	ldr	r0, [sp, #52]	; 0x34
   2a13c:	cmp	r8, #1
   2a140:	add	r9, r0, r2, lsl #2
   2a144:	bne	359cc <GetDataSlab+0x134b0>
   2a148:	ldr	r0, [sp, #48]	; 0x30
   2a14c:	ldr	r1, [sp, #44]	; 0x2c
   2a150:	cmp	r0, #1
   2a154:	blt	242a8 <GetDataSlab+0x1d8c>
   2a158:	ldr	r0, [fp, #20]
   2a15c:	mov	r8, #0
   2a160:	mov	lr, #0
   2a164:	add	sl, r0, #4
   2a168:	add	r0, sp, #104	; 0x68
   2a16c:	orr	r6, r0, #4
   2a170:	orr	r0, r4, #4
   2a174:	str	r0, [sp, #32]
   2a178:	lsl	r0, r1, #1
   2a17c:	str	r0, [sp, #52]	; 0x34
   2a180:	ldr	r0, [ip], #4
   2a184:	str	ip, [sp, #56]	; 0x38
   2a188:	str	r0, [sp, #36]	; 0x24
   2a18c:	ldr	r5, [sp, #56]	; 0x38
   2a190:	cmp	r1, #1
   2a194:	blt	2a1c4 <GetDataSlab+0x7ca8>
   2a198:	ldr	r0, [sp, #36]	; 0x24
   2a19c:	ldr	r3, [sp, #60]	; 0x3c
   2a1a0:	mov	ip, r1
   2a1a4:	add	r0, r9, r0, lsl #2
   2a1a8:	vldr	s0, [r0]
   2a1ac:	subs	ip, ip, #1
   2a1b0:	add	r0, r0, #4
   2a1b4:	vcvt.s32.f32	s0, s0
   2a1b8:	vmov	r4, s0
   2a1bc:	strh	r4, [r3], #2
   2a1c0:	bne	2a1a8 <GetDataSlab+0x7c8c>
   2a1c4:	ldr	r0, [sp, #40]	; 0x28
   2a1c8:	add	ip, sp, #64	; 0x40
   2a1cc:	add	r9, r9, r0, lsl #2
   2a1d0:	add	r2, r2, r0
   2a1d4:	ldr	r0, [fp, #24]
   2a1d8:	cmp	r0, #2
   2a1dc:	blt	2a280 <GetDataSlab+0x7d64>
   2a1e0:	mov	r3, #0
   2a1e4:	mov	r0, r3
   2a1e8:	ldr	r3, [r6, r3, lsl #2]
   2a1ec:	add	r3, r3, #1
   2a1f0:	str	r3, [r6, r0, lsl #2]
   2a1f4:	ldr	r4, [sl, r0, lsl #2]
   2a1f8:	sdiv	r1, r3, r4
   2a1fc:	mls	r1, r1, r4, r3
   2a200:	cmp	r1, #0
   2a204:	bne	2a270 <GetDataSlab+0x7d54>
   2a208:	add	r1, ip, r0, lsl #2
   2a20c:	str	r8, [r6, r0, lsl #2]
   2a210:	ldr	r3, [r1, #4]
   2a214:	sdiv	r1, r2, r3
   2a218:	mls	r4, r1, r3, r2
   2a21c:	cmp	r4, #0
   2a220:	beq	2a23c <GetDataSlab+0x7d20>
   2a224:	ldr	r1, [ip, r0, lsl #2]
   2a228:	ldr	r7, [r5, r0, lsl #2]
   2a22c:	sub	r3, r3, r4
   2a230:	mla	r1, r7, r1, r3
   2a234:	add	r2, r1, r2
   2a238:	b	2a254 <GetDataSlab+0x7d38>
   2a23c:	ldr	r3, [r5, r0, lsl #2]
   2a240:	cmp	r3, #0
   2a244:	beq	2a258 <GetDataSlab+0x7d3c>
   2a248:	ldr	r1, [ip, r0, lsl #2]
   2a24c:	mla	r2, r1, r3, r2
   2a250:	mul	r1, r1, r3
   2a254:	add	r9, r9, r1, lsl #2
   2a258:	ldr	r1, [fp, #24]
   2a25c:	add	r3, r0, #1
   2a260:	add	r0, r0, #2
   2a264:	cmp	r0, r1
   2a268:	blt	2a1e4 <GetDataSlab+0x7cc8>
   2a26c:	b	2a280 <GetDataSlab+0x7d64>
   2a270:	ldr	r1, [sp, #32]
   2a274:	ldr	r0, [r1, r0, lsl #2]
   2a278:	add	r9, r9, r0, lsl #2
   2a27c:	add	r2, r0, r2
   2a280:	ldr	r0, [sp, #60]	; 0x3c
   2a284:	ldr	r1, [sp, #52]	; 0x34
   2a288:	ldr	r3, [sp, #48]	; 0x30
   2a28c:	add	r0, r0, r1
   2a290:	ldr	r1, [sp, #44]	; 0x2c
   2a294:	str	r0, [sp, #60]	; 0x3c
   2a298:	mov	r0, #0
   2a29c:	add	lr, lr, r1
   2a2a0:	cmp	lr, r3
   2a2a4:	blt	2a190 <GetDataSlab+0x7c74>
   2a2a8:	b	242ac <GetDataSlab+0x1d90>
   2a2ac:	mov	r1, r8
   2a2b0:	ldr	r8, [sl]
   2a2b4:	mov	r2, #0
   2a2b8:	add	r3, sp, #64	; 0x40
   2a2bc:	sub	r4, fp, #72	; 0x48
   2a2c0:	sub	r0, r8, #1
   2a2c4:	str	r0, [fp, #-72]	; 0xffffffb8
   2a2c8:	ldr	r0, [r9]
   2a2cc:	str	r0, [sp, #64]	; 0x40
   2a2d0:	str	r0, [sp, #40]	; 0x28
   2a2d4:	ldr	r0, [fp, #24]
   2a2d8:	ldr	r1, [r1]
   2a2dc:	cmp	r0, #2
   2a2e0:	str	r1, [sp, #44]	; 0x2c
   2a2e4:	str	r1, [sp, #48]	; 0x30
   2a2e8:	blt	2a384 <GetDataSlab+0x7e68>
   2a2ec:	ldr	r6, [sp, #40]	; 0x28
   2a2f0:	ldr	r0, [sp, #44]	; 0x2c
   2a2f4:	mov	r1, #1
   2a2f8:	mov	r2, #0
   2a2fc:	mov	r7, r9
   2a300:	mov	r5, r6
   2a304:	str	r0, [sp, #48]	; 0x30
   2a308:	ldr	r0, [sl, r1, lsl #2]
   2a30c:	str	r6, [r3, r1, lsl #2]
   2a310:	mov	r3, #0
   2a314:	sub	r0, r0, #1
   2a318:	str	r0, [r4, r1, lsl #2]
   2a31c:	ldr	lr, [r9, r1, lsl #2]
   2a320:	mov	r4, lr
   2a324:	mul	r6, r4, r6
   2a328:	ldr	r4, [r7, -r3, lsl #2]
   2a32c:	add	r3, r3, #1
   2a330:	cmp	r1, r3
   2a334:	mul	r0, r0, r4
   2a338:	bne	2a324 <GetDataSlab+0x7e08>
   2a33c:	add	r3, sp, #64	; 0x40
   2a340:	sub	r4, fp, #72	; 0x48
   2a344:	add	r7, r7, #4
   2a348:	str	r6, [r3, r1, lsl #2]
   2a34c:	str	r0, [r4, r1, lsl #2]
   2a350:	ldr	r0, [ip, r1, lsl #2]
   2a354:	mla	r2, r0, r5, r2
   2a358:	ldr	r0, [fp, #20]
   2a35c:	ldr	r5, [sp, #48]	; 0x30
   2a360:	ldr	r0, [r0, r1, lsl #2]
   2a364:	add	r1, r1, #1
   2a368:	mul	r5, r0, r5
   2a36c:	ldr	r0, [fp, #24]
   2a370:	str	r5, [sp, #48]	; 0x30
   2a374:	mov	r5, r6
   2a378:	mov	r6, lr
   2a37c:	cmp	r1, r0
   2a380:	bne	2a308 <GetDataSlab+0x7dec>
   2a384:	ldr	r0, [sp, #52]	; 0x34
   2a388:	cmp	r8, #1
   2a38c:	add	r9, r0, r2, lsl #3
   2a390:	bne	35b60 <GetDataSlab+0x13644>
   2a394:	ldr	r0, [sp, #48]	; 0x30
   2a398:	ldr	r1, [sp, #44]	; 0x2c
   2a39c:	cmp	r0, #1
   2a3a0:	blt	242a8 <GetDataSlab+0x1d8c>
   2a3a4:	ldr	r0, [fp, #20]
   2a3a8:	mov	r8, #0
   2a3ac:	mov	lr, #0
   2a3b0:	add	sl, r0, #4
   2a3b4:	add	r0, sp, #104	; 0x68
   2a3b8:	orr	r6, r0, #4
   2a3bc:	orr	r0, r4, #4
   2a3c0:	str	r0, [sp, #32]
   2a3c4:	lsl	r0, r1, #1
   2a3c8:	str	r0, [sp, #52]	; 0x34
   2a3cc:	ldr	r0, [ip], #4
   2a3d0:	str	ip, [sp, #56]	; 0x38
   2a3d4:	str	r0, [sp, #36]	; 0x24
   2a3d8:	ldr	r5, [sp, #56]	; 0x38
   2a3dc:	cmp	r1, #1
   2a3e0:	blt	2a410 <GetDataSlab+0x7ef4>
   2a3e4:	ldr	r0, [sp, #36]	; 0x24
   2a3e8:	ldr	r3, [sp, #60]	; 0x3c
   2a3ec:	mov	ip, r1
   2a3f0:	add	r0, r9, r0, lsl #3
   2a3f4:	vldr	d16, [r0]
   2a3f8:	subs	ip, ip, #1
   2a3fc:	add	r0, r0, #8
   2a400:	vcvt.s32.f64	s0, d16
   2a404:	vmov	r4, s0
   2a408:	strh	r4, [r3], #2
   2a40c:	bne	2a3f4 <GetDataSlab+0x7ed8>
   2a410:	ldr	r0, [sp, #40]	; 0x28
   2a414:	add	ip, sp, #64	; 0x40
   2a418:	add	r9, r9, r0, lsl #3
   2a41c:	add	r2, r2, r0
   2a420:	ldr	r0, [fp, #24]
   2a424:	cmp	r0, #2
   2a428:	blt	2a4cc <GetDataSlab+0x7fb0>
   2a42c:	mov	r3, #0
   2a430:	mov	r0, r3
   2a434:	ldr	r3, [r6, r3, lsl #2]
   2a438:	add	r3, r3, #1
   2a43c:	str	r3, [r6, r0, lsl #2]
   2a440:	ldr	r4, [sl, r0, lsl #2]
   2a444:	sdiv	r1, r3, r4
   2a448:	mls	r1, r1, r4, r3
   2a44c:	cmp	r1, #0
   2a450:	bne	2a4bc <GetDataSlab+0x7fa0>
   2a454:	add	r1, ip, r0, lsl #2
   2a458:	str	r8, [r6, r0, lsl #2]
   2a45c:	ldr	r3, [r1, #4]
   2a460:	sdiv	r1, r2, r3
   2a464:	mls	r4, r1, r3, r2
   2a468:	cmp	r4, #0
   2a46c:	beq	2a488 <GetDataSlab+0x7f6c>
   2a470:	ldr	r1, [ip, r0, lsl #2]
   2a474:	ldr	r7, [r5, r0, lsl #2]
   2a478:	sub	r3, r3, r4
   2a47c:	mla	r1, r7, r1, r3
   2a480:	add	r2, r1, r2
   2a484:	b	2a4a0 <GetDataSlab+0x7f84>
   2a488:	ldr	r3, [r5, r0, lsl #2]
   2a48c:	cmp	r3, #0
   2a490:	beq	2a4a4 <GetDataSlab+0x7f88>
   2a494:	ldr	r1, [ip, r0, lsl #2]
   2a498:	mla	r2, r1, r3, r2
   2a49c:	mul	r1, r1, r3
   2a4a0:	add	r9, r9, r1, lsl #3
   2a4a4:	ldr	r1, [fp, #24]
   2a4a8:	add	r3, r0, #1
   2a4ac:	add	r0, r0, #2
   2a4b0:	cmp	r0, r1
   2a4b4:	blt	2a430 <GetDataSlab+0x7f14>
   2a4b8:	b	2a4cc <GetDataSlab+0x7fb0>
   2a4bc:	ldr	r1, [sp, #32]
   2a4c0:	ldr	r0, [r1, r0, lsl #2]
   2a4c4:	add	r9, r9, r0, lsl #3
   2a4c8:	add	r2, r0, r2
   2a4cc:	ldr	r0, [sp, #60]	; 0x3c
   2a4d0:	ldr	r1, [sp, #52]	; 0x34
   2a4d4:	ldr	r3, [sp, #48]	; 0x30
   2a4d8:	add	r0, r0, r1
   2a4dc:	ldr	r1, [sp, #44]	; 0x2c
   2a4e0:	str	r0, [sp, #60]	; 0x3c
   2a4e4:	mov	r0, #0
   2a4e8:	add	lr, lr, r1
   2a4ec:	cmp	lr, r3
   2a4f0:	blt	2a3dc <GetDataSlab+0x7ec0>
   2a4f4:	b	242ac <GetDataSlab+0x1d90>
   2a4f8:	ldr	r0, [sl]
   2a4fc:	mov	r1, #0
   2a500:	add	r4, sp, #64	; 0x40
   2a504:	sub	sl, fp, #72	; 0x48
   2a508:	str	r3, [sp, #48]	; 0x30
   2a50c:	str	r0, [sp, #16]
   2a510:	sub	r0, r0, #1
   2a514:	str	r0, [fp, #-72]	; 0xffffffb8
   2a518:	ldr	r0, [r9]
   2a51c:	str	r0, [sp, #64]	; 0x40
   2a520:	str	r0, [sp, #44]	; 0x2c
   2a524:	ldr	r0, [fp, #24]
   2a528:	ldr	r2, [r8]
   2a52c:	cmp	r0, #2
   2a530:	str	r2, [sp, #40]	; 0x28
   2a534:	str	r2, [sp, #56]	; 0x38
   2a538:	blt	2a5d8 <GetDataSlab+0x80bc>
   2a53c:	ldr	r7, [sp, #44]	; 0x2c
   2a540:	ldr	r2, [sp, #40]	; 0x28
   2a544:	mov	r0, #1
   2a548:	mov	r1, #0
   2a54c:	mov	r3, r9
   2a550:	mov	r6, r7
   2a554:	str	r2, [sp, #56]	; 0x38
   2a558:	ldr	r2, [fp, #16]
   2a55c:	ldr	r2, [r2, r0, lsl #2]
   2a560:	str	r7, [r4, r0, lsl #2]
   2a564:	sub	r5, r2, #1
   2a568:	mov	r2, #0
   2a56c:	str	r5, [sl, r0, lsl #2]
   2a570:	ldr	r8, [r9, r0, lsl #2]
   2a574:	mov	r4, r8
   2a578:	mul	r7, r4, r7
   2a57c:	ldr	r4, [r3, -r2, lsl #2]
   2a580:	add	r2, r2, #1
   2a584:	cmp	r0, r2
   2a588:	mul	r5, r5, r4
   2a58c:	bne	2a578 <GetDataSlab+0x805c>
   2a590:	add	r4, sp, #64	; 0x40
   2a594:	sub	sl, fp, #72	; 0x48
   2a598:	add	r3, r3, #4
   2a59c:	str	r5, [sl, r0, lsl #2]
   2a5a0:	str	r7, [r4, r0, lsl #2]
   2a5a4:	ldr	r5, [sp, #56]	; 0x38
   2a5a8:	ldr	r2, [ip, r0, lsl #2]
   2a5ac:	mla	r1, r2, r6, r1
   2a5b0:	ldr	r2, [fp, #20]
   2a5b4:	mov	r6, r7
   2a5b8:	mov	r7, r8
   2a5bc:	ldr	r2, [r2, r0, lsl #2]
   2a5c0:	add	r0, r0, #1
   2a5c4:	mul	r5, r2, r5
   2a5c8:	ldr	r2, [fp, #24]
   2a5cc:	str	r5, [sp, #56]	; 0x38
   2a5d0:	cmp	r0, r2
   2a5d4:	bne	2a558 <GetDataSlab+0x803c>
   2a5d8:	ldr	r0, [sp, #52]	; 0x34
   2a5dc:	ldr	r5, [sp, #16]
   2a5e0:	add	r9, r0, r1, lsl #3
   2a5e4:	cmp	r5, #1
   2a5e8:	bne	35cf4 <GetDataSlab+0x137d8>
   2a5ec:	ldr	r0, [sp, #56]	; 0x38
   2a5f0:	ldr	r5, [sp, #40]	; 0x28
   2a5f4:	cmp	r0, #1
   2a5f8:	ldr	r0, [fp, #20]
   2a5fc:	blt	35e7c <GetDataSlab+0x13960>
   2a600:	mov	r3, lr
   2a604:	add	lr, r0, #4
   2a608:	add	r0, sp, #104	; 0x68
   2a60c:	mov	r4, ip
   2a610:	mov	sl, #0
   2a614:	orr	r6, r0, #4
   2a618:	sub	r0, fp, #72	; 0x48
   2a61c:	mov	ip, r3
   2a620:	add	r3, sp, #64	; 0x40
   2a624:	orr	r0, r0, #4
   2a628:	str	r0, [sp, #28]
   2a62c:	lsl	r0, r5, #1
   2a630:	str	r0, [sp, #36]	; 0x24
   2a634:	ldr	r0, [r4], #4
   2a638:	str	r0, [sp, #32]
   2a63c:	cmp	r5, #1
   2a640:	blt	2a660 <GetDataSlab+0x8144>
   2a644:	ldr	r0, [sp, #32]
   2a648:	add	r2, r9, r0, lsl #3
   2a64c:	mov	r0, ip
   2a650:	ldrh	r7, [r2], #8
   2a654:	subs	r5, r5, #1
   2a658:	strh	r7, [r0], #2
   2a65c:	bne	2a650 <GetDataSlab+0x8134>
   2a660:	ldr	r0, [sp, #44]	; 0x2c
   2a664:	add	r9, r9, r0, lsl #3
   2a668:	add	r1, r1, r0
   2a66c:	ldr	r0, [fp, #24]
   2a670:	cmp	r0, #2
   2a674:	blt	2a71c <GetDataSlab+0x8200>
   2a678:	mov	r2, #0
   2a67c:	ldr	r0, [r6, r2, lsl #2]
   2a680:	mov	r8, r2
   2a684:	add	r0, r0, #1
   2a688:	str	r0, [r6, r2, lsl #2]
   2a68c:	ldr	r2, [lr, r2, lsl #2]
   2a690:	sdiv	r5, r0, r2
   2a694:	mls	r0, r5, r2, r0
   2a698:	cmp	r0, #0
   2a69c:	bne	2a70c <GetDataSlab+0x81f0>
   2a6a0:	mov	r0, #0
   2a6a4:	str	r0, [r6, r8, lsl #2]
   2a6a8:	add	r0, r3, r8, lsl #2
   2a6ac:	ldr	r0, [r0, #4]
   2a6b0:	sdiv	r2, r1, r0
   2a6b4:	mls	r2, r2, r0, r1
   2a6b8:	cmp	r2, #0
   2a6bc:	beq	2a6d8 <GetDataSlab+0x81bc>
   2a6c0:	ldr	r5, [r3, r8, lsl #2]
   2a6c4:	ldr	r7, [r4, r8, lsl #2]
   2a6c8:	sub	r0, r0, r2
   2a6cc:	mla	r0, r7, r5, r0
   2a6d0:	add	r1, r0, r1
   2a6d4:	b	2a6f0 <GetDataSlab+0x81d4>
   2a6d8:	ldr	r0, [r4, r8, lsl #2]
   2a6dc:	cmp	r0, #0
   2a6e0:	beq	2a6f4 <GetDataSlab+0x81d8>
   2a6e4:	ldr	r2, [r3, r8, lsl #2]
   2a6e8:	mla	r1, r2, r0, r1
   2a6ec:	mul	r0, r2, r0
   2a6f0:	add	r9, r9, r0, lsl #3
   2a6f4:	ldr	r7, [fp, #24]
   2a6f8:	add	r0, r8, #2
   2a6fc:	add	r2, r8, #1
   2a700:	cmp	r0, r7
   2a704:	blt	2a67c <GetDataSlab+0x8160>
   2a708:	b	2a71c <GetDataSlab+0x8200>
   2a70c:	ldr	r0, [sp, #28]
   2a710:	ldr	r0, [r0, r8, lsl #2]
   2a714:	add	r9, r9, r0, lsl #3
   2a718:	add	r1, r0, r1
   2a71c:	ldr	r0, [sp, #36]	; 0x24
   2a720:	ldr	r5, [sp, #40]	; 0x28
   2a724:	add	ip, ip, r0
   2a728:	ldr	r0, [sp, #56]	; 0x38
   2a72c:	add	sl, sl, r5
   2a730:	cmp	sl, r0
   2a734:	blt	2a63c <GetDataSlab+0x8120>
   2a738:	b	35e7c <GetDataSlab+0x13960>
   2a73c:	mov	r1, r8
   2a740:	ldr	r8, [sl]
   2a744:	mov	r3, #0
   2a748:	sub	sl, fp, #72	; 0x48
   2a74c:	sub	r0, r8, #1
   2a750:	str	r0, [fp, #-72]	; 0xffffffb8
   2a754:	ldr	r0, [r9]
   2a758:	add	r9, sp, #64	; 0x40
   2a75c:	str	r0, [sp, #64]	; 0x40
   2a760:	str	r0, [sp, #44]	; 0x2c
   2a764:	ldr	r0, [fp, #24]
   2a768:	ldr	r1, [r1]
   2a76c:	cmp	r0, #2
   2a770:	str	r1, [sp, #48]	; 0x30
   2a774:	str	r1, [sp, #56]	; 0x38
   2a778:	blt	2a81c <GetDataSlab+0x8300>
   2a77c:	ldr	r2, [sp, #44]	; 0x2c
   2a780:	ldr	r6, [sp, #48]	; 0x30
   2a784:	ldr	r1, [fp, #8]
   2a788:	mov	r0, #1
   2a78c:	mov	r3, #0
   2a790:	mov	r7, r2
   2a794:	str	r6, [sp, #56]	; 0x38
   2a798:	ldr	r6, [fp, #16]
   2a79c:	mov	r4, #0
   2a7a0:	ldr	r6, [r6, r0, lsl #2]
   2a7a4:	str	r2, [r9, r0, lsl #2]
   2a7a8:	sub	r5, r6, #1
   2a7ac:	ldr	r6, [fp, #8]
   2a7b0:	str	r5, [sl, r0, lsl #2]
   2a7b4:	ldr	lr, [r6, r0, lsl #2]
   2a7b8:	mov	r6, lr
   2a7bc:	mul	r2, r6, r2
   2a7c0:	ldr	r6, [r1, -r4, lsl #2]
   2a7c4:	add	r4, r4, #1
   2a7c8:	cmp	r0, r4
   2a7cc:	mul	r5, r5, r6
   2a7d0:	bne	2a7bc <GetDataSlab+0x82a0>
   2a7d4:	add	r9, sp, #64	; 0x40
   2a7d8:	sub	sl, fp, #72	; 0x48
   2a7dc:	ldr	r4, [fp, #20]
   2a7e0:	add	r1, r1, #4
   2a7e4:	str	r2, [r9, r0, lsl #2]
   2a7e8:	str	r5, [sl, r0, lsl #2]
   2a7ec:	ldr	r6, [ip, r0, lsl #2]
   2a7f0:	mla	r3, r6, r7, r3
   2a7f4:	ldr	r7, [r4, r0, lsl #2]
   2a7f8:	ldr	r4, [sp, #56]	; 0x38
   2a7fc:	add	r0, r0, #1
   2a800:	mul	r4, r7, r4
   2a804:	mov	r7, r2
   2a808:	mov	r2, lr
   2a80c:	str	r4, [sp, #56]	; 0x38
   2a810:	ldr	r4, [fp, #24]
   2a814:	cmp	r0, r4
   2a818:	bne	2a798 <GetDataSlab+0x827c>
   2a81c:	ldr	r0, [sp, #52]	; 0x34
   2a820:	cmp	r8, #1
   2a824:	mov	r1, sl
   2a828:	add	r5, r0, r3
   2a82c:	bne	360dc <GetDataSlab+0x13bc0>
   2a830:	ldr	r0, [sp, #56]	; 0x38
   2a834:	ldr	r2, [sp, #48]	; 0x30
   2a838:	cmp	r0, #1
   2a83c:	blt	242a8 <GetDataSlab+0x1d8c>
   2a840:	ldr	r0, [fp, #20]
   2a844:	add	sl, ip, #4
   2a848:	orr	r9, r1, #4
   2a84c:	mov	r8, #0
   2a850:	add	lr, r0, #4
   2a854:	add	r0, sp, #104	; 0x68
   2a858:	orr	r6, r0, #4
   2a85c:	lsl	r0, r2, #1
   2a860:	str	r0, [sp, #52]	; 0x34
   2a864:	cmp	r2, #1
   2a868:	blt	2a890 <GetDataSlab+0x8374>
   2a86c:	ldr	r0, [fp, #12]
   2a870:	ldr	ip, [sp, #48]	; 0x30
   2a874:	ldr	r4, [sp, #60]	; 0x3c
   2a878:	ldr	r0, [r0]
   2a87c:	add	r0, r5, r0
   2a880:	ldrb	r1, [r0], #1
   2a884:	subs	ip, ip, #1
   2a888:	strh	r1, [r4], #2
   2a88c:	bne	2a880 <GetDataSlab+0x8364>
   2a890:	ldr	r0, [sp, #44]	; 0x2c
   2a894:	add	ip, sp, #64	; 0x40
   2a898:	add	r5, r5, r0
   2a89c:	add	r3, r3, r0
   2a8a0:	ldr	r0, [fp, #24]
   2a8a4:	cmp	r0, #2
   2a8a8:	blt	2a948 <GetDataSlab+0x842c>
   2a8ac:	mov	r4, #0
   2a8b0:	ldr	r1, [r6, r4, lsl #2]
   2a8b4:	mov	r0, r4
   2a8b8:	add	r1, r1, #1
   2a8bc:	str	r1, [r6, r4, lsl #2]
   2a8c0:	ldr	r4, [lr, r4, lsl #2]
   2a8c4:	sdiv	r2, r1, r4
   2a8c8:	mls	r1, r2, r4, r1
   2a8cc:	cmp	r1, #0
   2a8d0:	bne	2a93c <GetDataSlab+0x8420>
   2a8d4:	mov	r1, #0
   2a8d8:	str	r1, [r6, r0, lsl #2]
   2a8dc:	add	r1, ip, r0, lsl #2
   2a8e0:	ldr	r4, [r1, #4]
   2a8e4:	sdiv	r1, r3, r4
   2a8e8:	mls	r1, r1, r4, r3
   2a8ec:	cmp	r1, #0
   2a8f0:	beq	2a910 <GetDataSlab+0x83f4>
   2a8f4:	ldr	r2, [ip, r0, lsl #2]
   2a8f8:	ldr	r7, [sl, r0, lsl #2]
   2a8fc:	sub	r1, r4, r1
   2a900:	mla	r1, r7, r2, r1
   2a904:	add	r3, r1, r3
   2a908:	add	r5, r5, r1
   2a90c:	b	2a924 <GetDataSlab+0x8408>
   2a910:	ldr	r1, [sl, r0, lsl #2]
   2a914:	cmp	r1, #0
   2a918:	ldrne	r2, [ip, r0, lsl #2]
   2a91c:	mlane	r3, r2, r1, r3
   2a920:	mlane	r5, r2, r1, r5
   2a924:	ldr	r1, [fp, #24]
   2a928:	add	r4, r0, #1
   2a92c:	add	r0, r0, #2
   2a930:	cmp	r0, r1
   2a934:	blt	2a8b0 <GetDataSlab+0x8394>
   2a938:	b	2a948 <GetDataSlab+0x842c>
   2a93c:	ldr	r0, [r9, r0, lsl #2]
   2a940:	add	r5, r5, r0
   2a944:	add	r3, r0, r3
   2a948:	ldr	r0, [sp, #60]	; 0x3c
   2a94c:	ldr	r1, [sp, #52]	; 0x34
   2a950:	ldr	r2, [sp, #48]	; 0x30
   2a954:	add	r0, r0, r1
   2a958:	ldr	r1, [sp, #56]	; 0x38
   2a95c:	add	r8, r8, r2
   2a960:	str	r0, [sp, #60]	; 0x3c
   2a964:	mov	r0, #0
   2a968:	cmp	r8, r1
   2a96c:	blt	2a864 <GetDataSlab+0x8348>
   2a970:	b	242ac <GetDataSlab+0x1d90>
   2a974:	ldr	r0, [sl]
   2a978:	mov	r2, #0
   2a97c:	add	r3, sp, #64	; 0x40
   2a980:	sub	lr, fp, #72	; 0x48
   2a984:	str	r0, [sp, #28]
   2a988:	sub	r0, r0, #1
   2a98c:	str	r0, [fp, #-72]	; 0xffffffb8
   2a990:	ldr	r0, [r9]
   2a994:	str	r0, [sp, #64]	; 0x40
   2a998:	str	r0, [sp, #40]	; 0x28
   2a99c:	ldr	r0, [fp, #24]
   2a9a0:	ldr	r1, [r8]
   2a9a4:	cmp	r0, #2
   2a9a8:	str	r1, [sp, #44]	; 0x2c
   2a9ac:	str	r1, [sp, #48]	; 0x30
   2a9b0:	blt	2aa48 <GetDataSlab+0x852c>
   2a9b4:	ldr	r6, [sp, #40]	; 0x28
   2a9b8:	ldr	r0, [sp, #44]	; 0x2c
   2a9bc:	mov	r1, #1
   2a9c0:	mov	r2, #0
   2a9c4:	mov	r7, r9
   2a9c8:	mov	r5, r6
   2a9cc:	str	r0, [sp, #48]	; 0x30
   2a9d0:	ldr	r0, [sl, r1, lsl #2]
   2a9d4:	str	r6, [r3, r1, lsl #2]
   2a9d8:	mov	r3, #0
   2a9dc:	sub	r0, r0, #1
   2a9e0:	str	r0, [lr, r1, lsl #2]
   2a9e4:	ldr	r8, [r9, r1, lsl #2]
   2a9e8:	mov	r4, r8
   2a9ec:	mul	r6, r4, r6
   2a9f0:	ldr	r4, [r7, -r3, lsl #2]
   2a9f4:	add	r3, r3, #1
   2a9f8:	cmp	r1, r3
   2a9fc:	mul	r0, r0, r4
   2aa00:	bne	2a9ec <GetDataSlab+0x84d0>
   2aa04:	add	r3, sp, #64	; 0x40
   2aa08:	str	r0, [lr, r1, lsl #2]
   2aa0c:	ldr	r4, [sp, #48]	; 0x30
   2aa10:	add	r7, r7, #4
   2aa14:	str	r6, [r3, r1, lsl #2]
   2aa18:	ldr	r0, [ip, r1, lsl #2]
   2aa1c:	mla	r2, r0, r5, r2
   2aa20:	ldr	r0, [fp, #20]
   2aa24:	mov	r5, r6
   2aa28:	mov	r6, r8
   2aa2c:	ldr	r0, [r0, r1, lsl #2]
   2aa30:	add	r1, r1, #1
   2aa34:	mul	r4, r0, r4
   2aa38:	ldr	r0, [fp, #24]
   2aa3c:	str	r4, [sp, #48]	; 0x30
   2aa40:	cmp	r1, r0
   2aa44:	bne	2a9d0 <GetDataSlab+0x84b4>
   2aa48:	ldr	r0, [sp, #52]	; 0x34
   2aa4c:	ldr	r6, [sp, #28]
   2aa50:	add	r9, r0, r2, lsl #1
   2aa54:	cmp	r6, #1
   2aa58:	bne	36264 <GetDataSlab+0x13d48>
   2aa5c:	ldr	r0, [sp, #48]	; 0x30
   2aa60:	cmp	r0, #1
   2aa64:	ldr	r0, [fp, #20]
   2aa68:	blt	242a8 <GetDataSlab+0x1d8c>
   2aa6c:	ldr	r1, [sp, #44]	; 0x2c
   2aa70:	add	sl, r0, #4
   2aa74:	add	r0, sp, #104	; 0x68
   2aa78:	mov	r8, #0
   2aa7c:	orr	r6, r0, #4
   2aa80:	orr	r0, lr, #4
   2aa84:	mov	lr, #0
   2aa88:	str	r0, [sp, #32]
   2aa8c:	lsl	r0, r1, #1
   2aa90:	str	r0, [sp, #52]	; 0x34
   2aa94:	ldr	r0, [ip], #4
   2aa98:	str	ip, [sp, #56]	; 0x38
   2aa9c:	str	r0, [sp, #36]	; 0x24
   2aaa0:	ldr	r5, [sp, #56]	; 0x38
   2aaa4:	cmp	r1, #1
   2aaa8:	blt	2aacc <GetDataSlab+0x85b0>
   2aaac:	ldr	r0, [sp, #36]	; 0x24
   2aab0:	ldr	r3, [sp, #60]	; 0x3c
   2aab4:	mov	ip, r1
   2aab8:	add	r0, r9, r0, lsl #1
   2aabc:	ldrh	r4, [r0], #2
   2aac0:	subs	ip, ip, #1
   2aac4:	strh	r4, [r3], #2
   2aac8:	bne	2aabc <GetDataSlab+0x85a0>
   2aacc:	ldr	r0, [sp, #40]	; 0x28
   2aad0:	add	ip, sp, #64	; 0x40
   2aad4:	add	r9, r9, r0, lsl #1
   2aad8:	add	r2, r2, r0
   2aadc:	ldr	r0, [fp, #24]
   2aae0:	cmp	r0, #2
   2aae4:	blt	2ab88 <GetDataSlab+0x866c>
   2aae8:	mov	r3, #0
   2aaec:	mov	r0, r3
   2aaf0:	ldr	r3, [r6, r3, lsl #2]
   2aaf4:	add	r3, r3, #1
   2aaf8:	str	r3, [r6, r0, lsl #2]
   2aafc:	ldr	r4, [sl, r0, lsl #2]
   2ab00:	sdiv	r1, r3, r4
   2ab04:	mls	r1, r1, r4, r3
   2ab08:	cmp	r1, #0
   2ab0c:	bne	2ab78 <GetDataSlab+0x865c>
   2ab10:	add	r1, ip, r0, lsl #2
   2ab14:	str	r8, [r6, r0, lsl #2]
   2ab18:	ldr	r3, [r1, #4]
   2ab1c:	sdiv	r1, r2, r3
   2ab20:	mls	r4, r1, r3, r2
   2ab24:	cmp	r4, #0
   2ab28:	beq	2ab44 <GetDataSlab+0x8628>
   2ab2c:	ldr	r1, [ip, r0, lsl #2]
   2ab30:	ldr	r7, [r5, r0, lsl #2]
   2ab34:	sub	r3, r3, r4
   2ab38:	mla	r1, r7, r1, r3
   2ab3c:	add	r2, r1, r2
   2ab40:	b	2ab5c <GetDataSlab+0x8640>
   2ab44:	ldr	r3, [r5, r0, lsl #2]
   2ab48:	cmp	r3, #0
   2ab4c:	beq	2ab60 <GetDataSlab+0x8644>
   2ab50:	ldr	r1, [ip, r0, lsl #2]
   2ab54:	mla	r2, r1, r3, r2
   2ab58:	mul	r1, r1, r3
   2ab5c:	add	r9, r9, r1, lsl #1
   2ab60:	ldr	r1, [fp, #24]
   2ab64:	add	r3, r0, #1
   2ab68:	add	r0, r0, #2
   2ab6c:	cmp	r0, r1
   2ab70:	blt	2aaec <GetDataSlab+0x85d0>
   2ab74:	b	2ab88 <GetDataSlab+0x866c>
   2ab78:	ldr	r1, [sp, #32]
   2ab7c:	ldr	r0, [r1, r0, lsl #2]
   2ab80:	add	r9, r9, r0, lsl #1
   2ab84:	add	r2, r0, r2
   2ab88:	ldr	r0, [sp, #60]	; 0x3c
   2ab8c:	ldr	r1, [sp, #52]	; 0x34
   2ab90:	ldr	r3, [sp, #48]	; 0x30
   2ab94:	add	r0, r0, r1
   2ab98:	ldr	r1, [sp, #44]	; 0x2c
   2ab9c:	str	r0, [sp, #60]	; 0x3c
   2aba0:	mov	r0, #0
   2aba4:	add	lr, lr, r1
   2aba8:	cmp	lr, r3
   2abac:	blt	2aaa4 <GetDataSlab+0x8588>
   2abb0:	b	242ac <GetDataSlab+0x1d90>
   2abb4:	ldr	r0, [sl]
   2abb8:	mov	r2, #0
   2abbc:	add	r3, sp, #64	; 0x40
   2abc0:	sub	lr, fp, #72	; 0x48
   2abc4:	str	r0, [sp, #28]
   2abc8:	sub	r0, r0, #1
   2abcc:	str	r0, [fp, #-72]	; 0xffffffb8
   2abd0:	ldr	r0, [r9]
   2abd4:	str	r0, [sp, #64]	; 0x40
   2abd8:	str	r0, [sp, #40]	; 0x28
   2abdc:	ldr	r0, [fp, #24]
   2abe0:	ldr	r1, [r8]
   2abe4:	cmp	r0, #2
   2abe8:	str	r1, [sp, #44]	; 0x2c
   2abec:	str	r1, [sp, #48]	; 0x30
   2abf0:	blt	2ac88 <GetDataSlab+0x876c>
   2abf4:	ldr	r6, [sp, #40]	; 0x28
   2abf8:	ldr	r0, [sp, #44]	; 0x2c
   2abfc:	mov	r1, #1
   2ac00:	mov	r2, #0
   2ac04:	mov	r7, r9
   2ac08:	mov	r5, r6
   2ac0c:	str	r0, [sp, #48]	; 0x30
   2ac10:	ldr	r0, [sl, r1, lsl #2]
   2ac14:	str	r6, [r3, r1, lsl #2]
   2ac18:	mov	r3, #0
   2ac1c:	sub	r0, r0, #1
   2ac20:	str	r0, [lr, r1, lsl #2]
   2ac24:	ldr	r8, [r9, r1, lsl #2]
   2ac28:	mov	r4, r8
   2ac2c:	mul	r6, r4, r6
   2ac30:	ldr	r4, [r7, -r3, lsl #2]
   2ac34:	add	r3, r3, #1
   2ac38:	cmp	r1, r3
   2ac3c:	mul	r0, r0, r4
   2ac40:	bne	2ac2c <GetDataSlab+0x8710>
   2ac44:	add	r3, sp, #64	; 0x40
   2ac48:	str	r0, [lr, r1, lsl #2]
   2ac4c:	ldr	r4, [sp, #48]	; 0x30
   2ac50:	add	r7, r7, #4
   2ac54:	str	r6, [r3, r1, lsl #2]
   2ac58:	ldr	r0, [ip, r1, lsl #2]
   2ac5c:	mla	r2, r0, r5, r2
   2ac60:	ldr	r0, [fp, #20]
   2ac64:	mov	r5, r6
   2ac68:	mov	r6, r8
   2ac6c:	ldr	r0, [r0, r1, lsl #2]
   2ac70:	add	r1, r1, #1
   2ac74:	mul	r4, r0, r4
   2ac78:	ldr	r0, [fp, #24]
   2ac7c:	str	r4, [sp, #48]	; 0x30
   2ac80:	cmp	r1, r0
   2ac84:	bne	2ac10 <GetDataSlab+0x86f4>
   2ac88:	ldr	r0, [sp, #52]	; 0x34
   2ac8c:	ldr	r6, [sp, #28]
   2ac90:	add	r9, r0, r2, lsl #1
   2ac94:	cmp	r6, #1
   2ac98:	bne	363f0 <GetDataSlab+0x13ed4>
   2ac9c:	ldr	r0, [sp, #48]	; 0x30
   2aca0:	cmp	r0, #1
   2aca4:	ldr	r0, [fp, #20]
   2aca8:	blt	242a8 <GetDataSlab+0x1d8c>
   2acac:	ldr	r1, [sp, #44]	; 0x2c
   2acb0:	add	sl, r0, #4
   2acb4:	add	r0, sp, #104	; 0x68
   2acb8:	mov	r8, #0
   2acbc:	orr	r6, r0, #4
   2acc0:	orr	r0, lr, #4
   2acc4:	mov	lr, #0
   2acc8:	str	r0, [sp, #32]
   2accc:	lsl	r0, r1, #1
   2acd0:	str	r0, [sp, #52]	; 0x34
   2acd4:	ldr	r0, [ip], #4
   2acd8:	str	ip, [sp, #56]	; 0x38
   2acdc:	str	r0, [sp, #36]	; 0x24
   2ace0:	ldr	r5, [sp, #56]	; 0x38
   2ace4:	cmp	r1, #1
   2ace8:	blt	2ad0c <GetDataSlab+0x87f0>
   2acec:	ldr	r0, [sp, #36]	; 0x24
   2acf0:	ldr	r3, [sp, #60]	; 0x3c
   2acf4:	mov	ip, r1
   2acf8:	add	r0, r9, r0, lsl #1
   2acfc:	ldrh	r4, [r0], #2
   2ad00:	subs	ip, ip, #1
   2ad04:	strh	r4, [r3], #2
   2ad08:	bne	2acfc <GetDataSlab+0x87e0>
   2ad0c:	ldr	r0, [sp, #40]	; 0x28
   2ad10:	add	ip, sp, #64	; 0x40
   2ad14:	add	r9, r9, r0, lsl #1
   2ad18:	add	r2, r2, r0
   2ad1c:	ldr	r0, [fp, #24]
   2ad20:	cmp	r0, #2
   2ad24:	blt	2adc8 <GetDataSlab+0x88ac>
   2ad28:	mov	r3, #0
   2ad2c:	mov	r0, r3
   2ad30:	ldr	r3, [r6, r3, lsl #2]
   2ad34:	add	r3, r3, #1
   2ad38:	str	r3, [r6, r0, lsl #2]
   2ad3c:	ldr	r4, [sl, r0, lsl #2]
   2ad40:	sdiv	r1, r3, r4
   2ad44:	mls	r1, r1, r4, r3
   2ad48:	cmp	r1, #0
   2ad4c:	bne	2adb8 <GetDataSlab+0x889c>
   2ad50:	add	r1, ip, r0, lsl #2
   2ad54:	str	r8, [r6, r0, lsl #2]
   2ad58:	ldr	r3, [r1, #4]
   2ad5c:	sdiv	r1, r2, r3
   2ad60:	mls	r4, r1, r3, r2
   2ad64:	cmp	r4, #0
   2ad68:	beq	2ad84 <GetDataSlab+0x8868>
   2ad6c:	ldr	r1, [ip, r0, lsl #2]
   2ad70:	ldr	r7, [r5, r0, lsl #2]
   2ad74:	sub	r3, r3, r4
   2ad78:	mla	r1, r7, r1, r3
   2ad7c:	add	r2, r1, r2
   2ad80:	b	2ad9c <GetDataSlab+0x8880>
   2ad84:	ldr	r3, [r5, r0, lsl #2]
   2ad88:	cmp	r3, #0
   2ad8c:	beq	2ada0 <GetDataSlab+0x8884>
   2ad90:	ldr	r1, [ip, r0, lsl #2]
   2ad94:	mla	r2, r1, r3, r2
   2ad98:	mul	r1, r1, r3
   2ad9c:	add	r9, r9, r1, lsl #1
   2ada0:	ldr	r1, [fp, #24]
   2ada4:	add	r3, r0, #1
   2ada8:	add	r0, r0, #2
   2adac:	cmp	r0, r1
   2adb0:	blt	2ad2c <GetDataSlab+0x8810>
   2adb4:	b	2adc8 <GetDataSlab+0x88ac>
   2adb8:	ldr	r1, [sp, #32]
   2adbc:	ldr	r0, [r1, r0, lsl #2]
   2adc0:	add	r9, r9, r0, lsl #1
   2adc4:	add	r2, r0, r2
   2adc8:	ldr	r0, [sp, #60]	; 0x3c
   2adcc:	ldr	r1, [sp, #52]	; 0x34
   2add0:	ldr	r3, [sp, #48]	; 0x30
   2add4:	add	r0, r0, r1
   2add8:	ldr	r1, [sp, #44]	; 0x2c
   2addc:	str	r0, [sp, #60]	; 0x3c
   2ade0:	mov	r0, #0
   2ade4:	add	lr, lr, r1
   2ade8:	cmp	lr, r3
   2adec:	blt	2ace4 <GetDataSlab+0x87c8>
   2adf0:	b	242ac <GetDataSlab+0x1d90>
   2adf4:	ldr	r0, [sl]
   2adf8:	mov	r3, #0
   2adfc:	add	r2, sp, #64	; 0x40
   2ae00:	sub	lr, fp, #72	; 0x48
   2ae04:	str	r0, [sp, #28]
   2ae08:	sub	r0, r0, #1
   2ae0c:	str	r0, [fp, #-72]	; 0xffffffb8
   2ae10:	ldr	r0, [r9]
   2ae14:	str	r0, [sp, #64]	; 0x40
   2ae18:	str	r0, [sp, #44]	; 0x2c
   2ae1c:	ldr	r0, [fp, #24]
   2ae20:	ldr	r1, [r8]
   2ae24:	cmp	r0, #2
   2ae28:	str	r1, [sp, #48]	; 0x30
   2ae2c:	str	r1, [sp, #56]	; 0x38
   2ae30:	blt	2aec8 <GetDataSlab+0x89ac>
   2ae34:	ldr	r6, [sp, #44]	; 0x2c
   2ae38:	ldr	r0, [sp, #48]	; 0x30
   2ae3c:	mov	r1, #1
   2ae40:	mov	r3, #0
   2ae44:	mov	r7, r9
   2ae48:	mov	r5, r6
   2ae4c:	str	r0, [sp, #56]	; 0x38
   2ae50:	ldr	r0, [sl, r1, lsl #2]
   2ae54:	str	r6, [r2, r1, lsl #2]
   2ae58:	mov	r2, #0
   2ae5c:	sub	r0, r0, #1
   2ae60:	str	r0, [lr, r1, lsl #2]
   2ae64:	ldr	sl, [r9, r1, lsl #2]
   2ae68:	mov	r4, sl
   2ae6c:	mul	r6, r4, r6
   2ae70:	ldr	r4, [r7, -r2, lsl #2]
   2ae74:	add	r2, r2, #1
   2ae78:	cmp	r1, r2
   2ae7c:	mul	r0, r0, r4
   2ae80:	bne	2ae6c <GetDataSlab+0x8950>
   2ae84:	add	r2, sp, #64	; 0x40
   2ae88:	str	r0, [lr, r1, lsl #2]
   2ae8c:	ldr	r4, [sp, #56]	; 0x38
   2ae90:	add	r7, r7, #4
   2ae94:	str	r6, [r2, r1, lsl #2]
   2ae98:	ldr	r0, [ip, r1, lsl #2]
   2ae9c:	mla	r3, r0, r5, r3
   2aea0:	ldr	r0, [r8, r1, lsl #2]
   2aea4:	mov	r5, r6
   2aea8:	mov	r6, sl
   2aeac:	ldr	sl, [fp, #16]
   2aeb0:	add	r1, r1, #1
   2aeb4:	mul	r4, r0, r4
   2aeb8:	ldr	r0, [fp, #24]
   2aebc:	str	r4, [sp, #56]	; 0x38
   2aec0:	cmp	r1, r0
   2aec4:	bne	2ae50 <GetDataSlab+0x8934>
   2aec8:	ldr	r0, [sp, #52]	; 0x34
   2aecc:	ldr	r2, [sp, #28]
   2aed0:	add	lr, r0, r3, lsl #2
   2aed4:	cmp	r2, #1
   2aed8:	bne	3657c <GetDataSlab+0x14060>
   2aedc:	ldr	r0, [sp, #56]	; 0x38
   2aee0:	ldr	r9, [sp, #48]	; 0x30
   2aee4:	cmp	r0, #1
   2aee8:	blt	242a8 <GetDataSlab+0x1d8c>
   2aeec:	mov	r0, r8
   2aef0:	add	r8, ip, #4
   2aef4:	mov	ip, #0
   2aef8:	add	sl, r0, #4
   2aefc:	add	r0, sp, #104	; 0x68
   2af00:	orr	r6, r0, #4
   2af04:	sub	r0, fp, #72	; 0x48
   2af08:	orr	r0, r0, #4
   2af0c:	str	r0, [sp, #40]	; 0x28
   2af10:	lsl	r0, r9, #1
   2af14:	str	r0, [sp, #52]	; 0x34
   2af18:	ldr	r5, [sp, #60]	; 0x3c
   2af1c:	cmp	r9, #1
   2af20:	blt	2af48 <GetDataSlab+0x8a2c>
   2af24:	ldr	r0, [fp, #12]
   2af28:	ldr	r9, [sp, #48]	; 0x30
   2af2c:	mov	r2, r5
   2af30:	ldr	r0, [r0]
   2af34:	add	r0, lr, r0, lsl #2
   2af38:	ldr	r4, [r0], #4
   2af3c:	subs	r9, r9, #1
   2af40:	strh	r4, [r2], #2
   2af44:	bne	2af38 <GetDataSlab+0x8a1c>
   2af48:	ldr	r0, [sp, #44]	; 0x2c
   2af4c:	add	lr, lr, r0, lsl #2
   2af50:	add	r3, r3, r0
   2af54:	ldr	r0, [fp, #24]
   2af58:	cmp	r0, #2
   2af5c:	blt	2b000 <GetDataSlab+0x8ae4>
   2af60:	ldr	r9, [sp, #48]	; 0x30
   2af64:	mov	r2, #0
   2af68:	mov	r0, r2
   2af6c:	ldr	r2, [r6, r2, lsl #2]
   2af70:	add	r2, r2, #1
   2af74:	str	r2, [r6, r0, lsl #2]
   2af78:	ldr	r4, [sl, r0, lsl #2]
   2af7c:	sdiv	r1, r2, r4
   2af80:	mls	r1, r1, r4, r2
   2af84:	cmp	r1, #0
   2af88:	bne	2b008 <GetDataSlab+0x8aec>
   2af8c:	mov	r1, #0
   2af90:	add	r7, sp, #64	; 0x40
   2af94:	str	r1, [r6, r0, lsl #2]
   2af98:	add	r1, r7, r0, lsl #2
   2af9c:	ldr	r2, [r1, #4]
   2afa0:	sdiv	r1, r3, r2
   2afa4:	mls	r4, r1, r2, r3
   2afa8:	cmp	r4, #0
   2afac:	beq	2afc8 <GetDataSlab+0x8aac>
   2afb0:	ldr	r1, [r7, r0, lsl #2]
   2afb4:	ldr	r7, [r8, r0, lsl #2]
   2afb8:	sub	r2, r2, r4
   2afbc:	mla	r1, r7, r1, r2
   2afc0:	add	r3, r1, r3
   2afc4:	b	2afe4 <GetDataSlab+0x8ac8>
   2afc8:	ldr	r2, [r8, r0, lsl #2]
   2afcc:	cmp	r2, #0
   2afd0:	beq	2afe8 <GetDataSlab+0x8acc>
   2afd4:	add	r1, sp, #64	; 0x40
   2afd8:	ldr	r1, [r1, r0, lsl #2]
   2afdc:	mla	r3, r1, r2, r3
   2afe0:	mul	r1, r1, r2
   2afe4:	add	lr, lr, r1, lsl #2
   2afe8:	ldr	r1, [fp, #24]
   2afec:	add	r2, r0, #1
   2aff0:	add	r0, r0, #2
   2aff4:	cmp	r0, r1
   2aff8:	blt	2af68 <GetDataSlab+0x8a4c>
   2affc:	b	2b018 <GetDataSlab+0x8afc>
   2b000:	ldr	r9, [sp, #48]	; 0x30
   2b004:	b	2b018 <GetDataSlab+0x8afc>
   2b008:	ldr	r1, [sp, #40]	; 0x28
   2b00c:	ldr	r0, [r1, r0, lsl #2]
   2b010:	add	lr, lr, r0, lsl #2
   2b014:	add	r3, r0, r3
   2b018:	ldr	r0, [sp, #52]	; 0x34
   2b01c:	ldr	r1, [sp, #56]	; 0x38
   2b020:	add	ip, ip, r9
   2b024:	add	r5, r5, r0
   2b028:	mov	r0, #0
   2b02c:	cmp	ip, r1
   2b030:	str	r5, [sp, #60]	; 0x3c
   2b034:	blt	2af18 <GetDataSlab+0x89fc>
   2b038:	b	242ac <GetDataSlab+0x1d90>
   2b03c:	ldr	r0, [sl]
   2b040:	mov	r3, #0
   2b044:	add	r2, sp, #64	; 0x40
   2b048:	sub	lr, fp, #72	; 0x48
   2b04c:	str	r0, [sp, #28]
   2b050:	sub	r0, r0, #1
   2b054:	str	r0, [fp, #-72]	; 0xffffffb8
   2b058:	ldr	r0, [r9]
   2b05c:	str	r0, [sp, #64]	; 0x40
   2b060:	str	r0, [sp, #44]	; 0x2c
   2b064:	ldr	r0, [fp, #24]
   2b068:	ldr	r1, [r8]
   2b06c:	cmp	r0, #2
   2b070:	str	r1, [sp, #48]	; 0x30
   2b074:	str	r1, [sp, #56]	; 0x38
   2b078:	blt	2b110 <GetDataSlab+0x8bf4>
   2b07c:	ldr	r6, [sp, #44]	; 0x2c
   2b080:	ldr	r0, [sp, #48]	; 0x30
   2b084:	mov	r1, #1
   2b088:	mov	r3, #0
   2b08c:	mov	r7, r9
   2b090:	mov	r5, r6
   2b094:	str	r0, [sp, #56]	; 0x38
   2b098:	ldr	r0, [sl, r1, lsl #2]
   2b09c:	str	r6, [r2, r1, lsl #2]
   2b0a0:	mov	r2, #0
   2b0a4:	sub	r0, r0, #1
   2b0a8:	str	r0, [lr, r1, lsl #2]
   2b0ac:	ldr	sl, [r9, r1, lsl #2]
   2b0b0:	mov	r4, sl
   2b0b4:	mul	r6, r4, r6
   2b0b8:	ldr	r4, [r7, -r2, lsl #2]
   2b0bc:	add	r2, r2, #1
   2b0c0:	cmp	r1, r2
   2b0c4:	mul	r0, r0, r4
   2b0c8:	bne	2b0b4 <GetDataSlab+0x8b98>
   2b0cc:	add	r2, sp, #64	; 0x40
   2b0d0:	str	r0, [lr, r1, lsl #2]
   2b0d4:	ldr	r4, [sp, #56]	; 0x38
   2b0d8:	add	r7, r7, #4
   2b0dc:	str	r6, [r2, r1, lsl #2]
   2b0e0:	ldr	r0, [ip, r1, lsl #2]
   2b0e4:	mla	r3, r0, r5, r3
   2b0e8:	ldr	r0, [r8, r1, lsl #2]
   2b0ec:	mov	r5, r6
   2b0f0:	mov	r6, sl
   2b0f4:	ldr	sl, [fp, #16]
   2b0f8:	add	r1, r1, #1
   2b0fc:	mul	r4, r0, r4
   2b100:	ldr	r0, [fp, #24]
   2b104:	str	r4, [sp, #56]	; 0x38
   2b108:	cmp	r1, r0
   2b10c:	bne	2b098 <GetDataSlab+0x8b7c>
   2b110:	ldr	r0, [sp, #52]	; 0x34
   2b114:	ldr	r2, [sp, #28]
   2b118:	add	r5, r0, r3, lsl #2
   2b11c:	cmp	r2, #1
   2b120:	bne	36720 <GetDataSlab+0x14204>
   2b124:	ldr	r0, [sp, #56]	; 0x38
   2b128:	ldr	r9, [sp, #48]	; 0x30
   2b12c:	cmp	r0, #1
   2b130:	blt	242a8 <GetDataSlab+0x1d8c>
   2b134:	mov	r0, r8
   2b138:	add	r8, ip, #4
   2b13c:	mov	ip, #0
   2b140:	add	sl, r0, #4
   2b144:	add	r0, sp, #104	; 0x68
   2b148:	orr	r6, r0, #4
   2b14c:	orr	r0, lr, #4
   2b150:	str	r0, [sp, #40]	; 0x28
   2b154:	lsl	r0, r9, #1
   2b158:	str	r0, [sp, #52]	; 0x34
   2b15c:	ldr	lr, [sp, #60]	; 0x3c
   2b160:	cmp	r9, #1
   2b164:	blt	2b18c <GetDataSlab+0x8c70>
   2b168:	ldr	r0, [fp, #12]
   2b16c:	ldr	r9, [sp, #48]	; 0x30
   2b170:	mov	r2, lr
   2b174:	ldr	r0, [r0]
   2b178:	add	r0, r5, r0, lsl #2
   2b17c:	ldr	r4, [r0], #4
   2b180:	subs	r9, r9, #1
   2b184:	strh	r4, [r2], #2
   2b188:	bne	2b17c <GetDataSlab+0x8c60>
   2b18c:	ldr	r0, [sp, #44]	; 0x2c
   2b190:	add	r5, r5, r0, lsl #2
   2b194:	add	r3, r3, r0
   2b198:	ldr	r0, [fp, #24]
   2b19c:	cmp	r0, #2
   2b1a0:	blt	2b244 <GetDataSlab+0x8d28>
   2b1a4:	ldr	r9, [sp, #48]	; 0x30
   2b1a8:	mov	r2, #0
   2b1ac:	mov	r0, r2
   2b1b0:	ldr	r2, [r6, r2, lsl #2]
   2b1b4:	add	r2, r2, #1
   2b1b8:	str	r2, [r6, r0, lsl #2]
   2b1bc:	ldr	r4, [sl, r0, lsl #2]
   2b1c0:	sdiv	r1, r2, r4
   2b1c4:	mls	r1, r1, r4, r2
   2b1c8:	cmp	r1, #0
   2b1cc:	bne	2b24c <GetDataSlab+0x8d30>
   2b1d0:	mov	r1, #0
   2b1d4:	add	r7, sp, #64	; 0x40
   2b1d8:	str	r1, [r6, r0, lsl #2]
   2b1dc:	add	r1, r7, r0, lsl #2
   2b1e0:	ldr	r2, [r1, #4]
   2b1e4:	sdiv	r1, r3, r2
   2b1e8:	mls	r4, r1, r2, r3
   2b1ec:	cmp	r4, #0
   2b1f0:	beq	2b20c <GetDataSlab+0x8cf0>
   2b1f4:	ldr	r1, [r7, r0, lsl #2]
   2b1f8:	ldr	r7, [r8, r0, lsl #2]
   2b1fc:	sub	r2, r2, r4
   2b200:	mla	r1, r7, r1, r2
   2b204:	add	r3, r1, r3
   2b208:	b	2b228 <GetDataSlab+0x8d0c>
   2b20c:	ldr	r2, [r8, r0, lsl #2]
   2b210:	cmp	r2, #0
   2b214:	beq	2b22c <GetDataSlab+0x8d10>
   2b218:	add	r1, sp, #64	; 0x40
   2b21c:	ldr	r1, [r1, r0, lsl #2]
   2b220:	mla	r3, r1, r2, r3
   2b224:	mul	r1, r1, r2
   2b228:	add	r5, r5, r1, lsl #2
   2b22c:	ldr	r1, [fp, #24]
   2b230:	add	r2, r0, #1
   2b234:	add	r0, r0, #2
   2b238:	cmp	r0, r1
   2b23c:	blt	2b1ac <GetDataSlab+0x8c90>
   2b240:	b	2b25c <GetDataSlab+0x8d40>
   2b244:	ldr	r9, [sp, #48]	; 0x30
   2b248:	b	2b25c <GetDataSlab+0x8d40>
   2b24c:	ldr	r1, [sp, #40]	; 0x28
   2b250:	ldr	r0, [r1, r0, lsl #2]
   2b254:	add	r5, r5, r0, lsl #2
   2b258:	add	r3, r0, r3
   2b25c:	ldr	r0, [sp, #52]	; 0x34
   2b260:	ldr	r1, [sp, #56]	; 0x38
   2b264:	add	ip, ip, r9
   2b268:	add	lr, lr, r0
   2b26c:	mov	r0, #0
   2b270:	cmp	ip, r1
   2b274:	str	lr, [sp, #60]	; 0x3c
   2b278:	blt	2b15c <GetDataSlab+0x8c40>
   2b27c:	b	242ac <GetDataSlab+0x1d90>
   2b280:	mov	r1, r8
   2b284:	ldr	r8, [sl]
   2b288:	mov	r2, #0
   2b28c:	add	r3, sp, #64	; 0x40
   2b290:	sub	r4, fp, #72	; 0x48
   2b294:	sub	r0, r8, #1
   2b298:	str	r0, [fp, #-72]	; 0xffffffb8
   2b29c:	ldr	r0, [r9]
   2b2a0:	str	r0, [sp, #64]	; 0x40
   2b2a4:	str	r0, [sp, #40]	; 0x28
   2b2a8:	ldr	r0, [fp, #24]
   2b2ac:	ldr	r1, [r1]
   2b2b0:	cmp	r0, #2
   2b2b4:	str	r1, [sp, #44]	; 0x2c
   2b2b8:	str	r1, [sp, #48]	; 0x30
   2b2bc:	blt	2b358 <GetDataSlab+0x8e3c>
   2b2c0:	ldr	r6, [sp, #40]	; 0x28
   2b2c4:	ldr	r0, [sp, #44]	; 0x2c
   2b2c8:	mov	r1, #1
   2b2cc:	mov	r2, #0
   2b2d0:	mov	r7, r9
   2b2d4:	mov	r5, r6
   2b2d8:	str	r0, [sp, #48]	; 0x30
   2b2dc:	ldr	r0, [sl, r1, lsl #2]
   2b2e0:	str	r6, [r3, r1, lsl #2]
   2b2e4:	mov	r3, #0
   2b2e8:	sub	r0, r0, #1
   2b2ec:	str	r0, [r4, r1, lsl #2]
   2b2f0:	ldr	lr, [r9, r1, lsl #2]
   2b2f4:	mov	r4, lr
   2b2f8:	mul	r6, r4, r6
   2b2fc:	ldr	r4, [r7, -r3, lsl #2]
   2b300:	add	r3, r3, #1
   2b304:	cmp	r1, r3
   2b308:	mul	r0, r0, r4
   2b30c:	bne	2b2f8 <GetDataSlab+0x8ddc>
   2b310:	add	r3, sp, #64	; 0x40
   2b314:	sub	r4, fp, #72	; 0x48
   2b318:	add	r7, r7, #4
   2b31c:	str	r6, [r3, r1, lsl #2]
   2b320:	str	r0, [r4, r1, lsl #2]
   2b324:	ldr	r0, [ip, r1, lsl #2]
   2b328:	mla	r2, r0, r5, r2
   2b32c:	ldr	r0, [fp, #20]
   2b330:	ldr	r5, [sp, #48]	; 0x30
   2b334:	ldr	r0, [r0, r1, lsl #2]
   2b338:	add	r1, r1, #1
   2b33c:	mul	r5, r0, r5
   2b340:	ldr	r0, [fp, #24]
   2b344:	str	r5, [sp, #48]	; 0x30
   2b348:	mov	r5, r6
   2b34c:	mov	r6, lr
   2b350:	cmp	r1, r0
   2b354:	bne	2b2dc <GetDataSlab+0x8dc0>
   2b358:	ldr	r0, [sp, #52]	; 0x34
   2b35c:	cmp	r8, #1
   2b360:	add	r9, r0, r2, lsl #2
   2b364:	bne	368b8 <GetDataSlab+0x1439c>
   2b368:	ldr	r0, [sp, #48]	; 0x30
   2b36c:	ldr	r1, [sp, #44]	; 0x2c
   2b370:	cmp	r0, #1
   2b374:	blt	242a8 <GetDataSlab+0x1d8c>
   2b378:	ldr	r0, [fp, #20]
   2b37c:	mov	r8, #0
   2b380:	mov	lr, #0
   2b384:	add	sl, r0, #4
   2b388:	add	r0, sp, #104	; 0x68
   2b38c:	orr	r6, r0, #4
   2b390:	orr	r0, r4, #4
   2b394:	str	r0, [sp, #32]
   2b398:	lsl	r0, r1, #1
   2b39c:	str	r0, [sp, #52]	; 0x34
   2b3a0:	ldr	r0, [ip], #4
   2b3a4:	str	ip, [sp, #56]	; 0x38
   2b3a8:	str	r0, [sp, #36]	; 0x24
   2b3ac:	ldr	r5, [sp, #56]	; 0x38
   2b3b0:	cmp	r1, #1
   2b3b4:	blt	2b3e4 <GetDataSlab+0x8ec8>
   2b3b8:	ldr	r0, [sp, #36]	; 0x24
   2b3bc:	ldr	r3, [sp, #60]	; 0x3c
   2b3c0:	mov	ip, r1
   2b3c4:	add	r0, r9, r0, lsl #2
   2b3c8:	vldr	s0, [r0]
   2b3cc:	subs	ip, ip, #1
   2b3d0:	add	r0, r0, #4
   2b3d4:	vcvt.u32.f32	s0, s0
   2b3d8:	vmov	r4, s0
   2b3dc:	strh	r4, [r3], #2
   2b3e0:	bne	2b3c8 <GetDataSlab+0x8eac>
   2b3e4:	ldr	r0, [sp, #40]	; 0x28
   2b3e8:	add	ip, sp, #64	; 0x40
   2b3ec:	add	r9, r9, r0, lsl #2
   2b3f0:	add	r2, r2, r0
   2b3f4:	ldr	r0, [fp, #24]
   2b3f8:	cmp	r0, #2
   2b3fc:	blt	2b4a0 <GetDataSlab+0x8f84>
   2b400:	mov	r3, #0
   2b404:	mov	r0, r3
   2b408:	ldr	r3, [r6, r3, lsl #2]
   2b40c:	add	r3, r3, #1
   2b410:	str	r3, [r6, r0, lsl #2]
   2b414:	ldr	r4, [sl, r0, lsl #2]
   2b418:	sdiv	r1, r3, r4
   2b41c:	mls	r1, r1, r4, r3
   2b420:	cmp	r1, #0
   2b424:	bne	2b490 <GetDataSlab+0x8f74>
   2b428:	add	r1, ip, r0, lsl #2
   2b42c:	str	r8, [r6, r0, lsl #2]
   2b430:	ldr	r3, [r1, #4]
   2b434:	sdiv	r1, r2, r3
   2b438:	mls	r4, r1, r3, r2
   2b43c:	cmp	r4, #0
   2b440:	beq	2b45c <GetDataSlab+0x8f40>
   2b444:	ldr	r1, [ip, r0, lsl #2]
   2b448:	ldr	r7, [r5, r0, lsl #2]
   2b44c:	sub	r3, r3, r4
   2b450:	mla	r1, r7, r1, r3
   2b454:	add	r2, r1, r2
   2b458:	b	2b474 <GetDataSlab+0x8f58>
   2b45c:	ldr	r3, [r5, r0, lsl #2]
   2b460:	cmp	r3, #0
   2b464:	beq	2b478 <GetDataSlab+0x8f5c>
   2b468:	ldr	r1, [ip, r0, lsl #2]
   2b46c:	mla	r2, r1, r3, r2
   2b470:	mul	r1, r1, r3
   2b474:	add	r9, r9, r1, lsl #2
   2b478:	ldr	r1, [fp, #24]
   2b47c:	add	r3, r0, #1
   2b480:	add	r0, r0, #2
   2b484:	cmp	r0, r1
   2b488:	blt	2b404 <GetDataSlab+0x8ee8>
   2b48c:	b	2b4a0 <GetDataSlab+0x8f84>
   2b490:	ldr	r1, [sp, #32]
   2b494:	ldr	r0, [r1, r0, lsl #2]
   2b498:	add	r9, r9, r0, lsl #2
   2b49c:	add	r2, r0, r2
   2b4a0:	ldr	r0, [sp, #60]	; 0x3c
   2b4a4:	ldr	r1, [sp, #52]	; 0x34
   2b4a8:	ldr	r3, [sp, #48]	; 0x30
   2b4ac:	add	r0, r0, r1
   2b4b0:	ldr	r1, [sp, #44]	; 0x2c
   2b4b4:	str	r0, [sp, #60]	; 0x3c
   2b4b8:	mov	r0, #0
   2b4bc:	add	lr, lr, r1
   2b4c0:	cmp	lr, r3
   2b4c4:	blt	2b3b0 <GetDataSlab+0x8e94>
   2b4c8:	b	242ac <GetDataSlab+0x1d90>
   2b4cc:	mov	r1, r8
   2b4d0:	ldr	r8, [sl]
   2b4d4:	mov	r2, #0
   2b4d8:	add	r3, sp, #64	; 0x40
   2b4dc:	sub	r4, fp, #72	; 0x48
   2b4e0:	sub	r0, r8, #1
   2b4e4:	str	r0, [fp, #-72]	; 0xffffffb8
   2b4e8:	ldr	r0, [r9]
   2b4ec:	str	r0, [sp, #64]	; 0x40
   2b4f0:	str	r0, [sp, #40]	; 0x28
   2b4f4:	ldr	r0, [fp, #24]
   2b4f8:	ldr	r1, [r1]
   2b4fc:	cmp	r0, #2
   2b500:	str	r1, [sp, #44]	; 0x2c
   2b504:	str	r1, [sp, #48]	; 0x30
   2b508:	blt	2b5a4 <GetDataSlab+0x9088>
   2b50c:	ldr	r6, [sp, #40]	; 0x28
   2b510:	ldr	r0, [sp, #44]	; 0x2c
   2b514:	mov	r1, #1
   2b518:	mov	r2, #0
   2b51c:	mov	r7, r9
   2b520:	mov	r5, r6
   2b524:	str	r0, [sp, #48]	; 0x30
   2b528:	ldr	r0, [sl, r1, lsl #2]
   2b52c:	str	r6, [r3, r1, lsl #2]
   2b530:	mov	r3, #0
   2b534:	sub	r0, r0, #1
   2b538:	str	r0, [r4, r1, lsl #2]
   2b53c:	ldr	lr, [r9, r1, lsl #2]
   2b540:	mov	r4, lr
   2b544:	mul	r6, r4, r6
   2b548:	ldr	r4, [r7, -r3, lsl #2]
   2b54c:	add	r3, r3, #1
   2b550:	cmp	r1, r3
   2b554:	mul	r0, r0, r4
   2b558:	bne	2b544 <GetDataSlab+0x9028>
   2b55c:	add	r3, sp, #64	; 0x40
   2b560:	sub	r4, fp, #72	; 0x48
   2b564:	add	r7, r7, #4
   2b568:	str	r6, [r3, r1, lsl #2]
   2b56c:	str	r0, [r4, r1, lsl #2]
   2b570:	ldr	r0, [ip, r1, lsl #2]
   2b574:	mla	r2, r0, r5, r2
   2b578:	ldr	r0, [fp, #20]
   2b57c:	ldr	r5, [sp, #48]	; 0x30
   2b580:	ldr	r0, [r0, r1, lsl #2]
   2b584:	add	r1, r1, #1
   2b588:	mul	r5, r0, r5
   2b58c:	ldr	r0, [fp, #24]
   2b590:	str	r5, [sp, #48]	; 0x30
   2b594:	mov	r5, r6
   2b598:	mov	r6, lr
   2b59c:	cmp	r1, r0
   2b5a0:	bne	2b528 <GetDataSlab+0x900c>
   2b5a4:	ldr	r0, [sp, #52]	; 0x34
   2b5a8:	cmp	r8, #1
   2b5ac:	add	r9, r0, r2, lsl #3
   2b5b0:	bne	36a4c <GetDataSlab+0x14530>
   2b5b4:	ldr	r0, [sp, #48]	; 0x30
   2b5b8:	ldr	r1, [sp, #44]	; 0x2c
   2b5bc:	cmp	r0, #1
   2b5c0:	blt	242a8 <GetDataSlab+0x1d8c>
   2b5c4:	ldr	r0, [fp, #20]
   2b5c8:	mov	r8, #0
   2b5cc:	mov	lr, #0
   2b5d0:	add	sl, r0, #4
   2b5d4:	add	r0, sp, #104	; 0x68
   2b5d8:	orr	r6, r0, #4
   2b5dc:	orr	r0, r4, #4
   2b5e0:	str	r0, [sp, #32]
   2b5e4:	lsl	r0, r1, #1
   2b5e8:	str	r0, [sp, #52]	; 0x34
   2b5ec:	ldr	r0, [ip], #4
   2b5f0:	str	ip, [sp, #56]	; 0x38
   2b5f4:	str	r0, [sp, #36]	; 0x24
   2b5f8:	ldr	r5, [sp, #56]	; 0x38
   2b5fc:	cmp	r1, #1
   2b600:	blt	2b630 <GetDataSlab+0x9114>
   2b604:	ldr	r0, [sp, #36]	; 0x24
   2b608:	ldr	r3, [sp, #60]	; 0x3c
   2b60c:	mov	ip, r1
   2b610:	add	r0, r9, r0, lsl #3
   2b614:	vldr	d16, [r0]
   2b618:	subs	ip, ip, #1
   2b61c:	add	r0, r0, #8
   2b620:	vcvt.u32.f64	s0, d16
   2b624:	vmov	r4, s0
   2b628:	strh	r4, [r3], #2
   2b62c:	bne	2b614 <GetDataSlab+0x90f8>
   2b630:	ldr	r0, [sp, #40]	; 0x28
   2b634:	add	ip, sp, #64	; 0x40
   2b638:	add	r9, r9, r0, lsl #3
   2b63c:	add	r2, r2, r0
   2b640:	ldr	r0, [fp, #24]
   2b644:	cmp	r0, #2
   2b648:	blt	2b6ec <GetDataSlab+0x91d0>
   2b64c:	mov	r3, #0
   2b650:	mov	r0, r3
   2b654:	ldr	r3, [r6, r3, lsl #2]
   2b658:	add	r3, r3, #1
   2b65c:	str	r3, [r6, r0, lsl #2]
   2b660:	ldr	r4, [sl, r0, lsl #2]
   2b664:	sdiv	r1, r3, r4
   2b668:	mls	r1, r1, r4, r3
   2b66c:	cmp	r1, #0
   2b670:	bne	2b6dc <GetDataSlab+0x91c0>
   2b674:	add	r1, ip, r0, lsl #2
   2b678:	str	r8, [r6, r0, lsl #2]
   2b67c:	ldr	r3, [r1, #4]
   2b680:	sdiv	r1, r2, r3
   2b684:	mls	r4, r1, r3, r2
   2b688:	cmp	r4, #0
   2b68c:	beq	2b6a8 <GetDataSlab+0x918c>
   2b690:	ldr	r1, [ip, r0, lsl #2]
   2b694:	ldr	r7, [r5, r0, lsl #2]
   2b698:	sub	r3, r3, r4
   2b69c:	mla	r1, r7, r1, r3
   2b6a0:	add	r2, r1, r2
   2b6a4:	b	2b6c0 <GetDataSlab+0x91a4>
   2b6a8:	ldr	r3, [r5, r0, lsl #2]
   2b6ac:	cmp	r3, #0
   2b6b0:	beq	2b6c4 <GetDataSlab+0x91a8>
   2b6b4:	ldr	r1, [ip, r0, lsl #2]
   2b6b8:	mla	r2, r1, r3, r2
   2b6bc:	mul	r1, r1, r3
   2b6c0:	add	r9, r9, r1, lsl #3
   2b6c4:	ldr	r1, [fp, #24]
   2b6c8:	add	r3, r0, #1
   2b6cc:	add	r0, r0, #2
   2b6d0:	cmp	r0, r1
   2b6d4:	blt	2b650 <GetDataSlab+0x9134>
   2b6d8:	b	2b6ec <GetDataSlab+0x91d0>
   2b6dc:	ldr	r1, [sp, #32]
   2b6e0:	ldr	r0, [r1, r0, lsl #2]
   2b6e4:	add	r9, r9, r0, lsl #3
   2b6e8:	add	r2, r0, r2
   2b6ec:	ldr	r0, [sp, #60]	; 0x3c
   2b6f0:	ldr	r1, [sp, #52]	; 0x34
   2b6f4:	ldr	r3, [sp, #48]	; 0x30
   2b6f8:	add	r0, r0, r1
   2b6fc:	ldr	r1, [sp, #44]	; 0x2c
   2b700:	str	r0, [sp, #60]	; 0x3c
   2b704:	mov	r0, #0
   2b708:	add	lr, lr, r1
   2b70c:	cmp	lr, r3
   2b710:	blt	2b5fc <GetDataSlab+0x90e0>
   2b714:	b	242ac <GetDataSlab+0x1d90>
   2b718:	ldr	r0, [sl]
   2b71c:	mov	r1, #0
   2b720:	add	r4, sp, #64	; 0x40
   2b724:	sub	sl, fp, #72	; 0x48
   2b728:	str	r3, [sp, #48]	; 0x30
   2b72c:	str	r0, [sp, #16]
   2b730:	sub	r0, r0, #1
   2b734:	str	r0, [fp, #-72]	; 0xffffffb8
   2b738:	ldr	r0, [r9]
   2b73c:	str	r0, [sp, #64]	; 0x40
   2b740:	str	r0, [sp, #44]	; 0x2c
   2b744:	ldr	r0, [fp, #24]
   2b748:	ldr	r2, [r8]
   2b74c:	cmp	r0, #2
   2b750:	str	r2, [sp, #40]	; 0x28
   2b754:	str	r2, [sp, #56]	; 0x38
   2b758:	blt	2b7f8 <GetDataSlab+0x92dc>
   2b75c:	ldr	r7, [sp, #44]	; 0x2c
   2b760:	ldr	r2, [sp, #40]	; 0x28
   2b764:	mov	r0, #1
   2b768:	mov	r1, #0
   2b76c:	mov	r3, r9
   2b770:	mov	r6, r7
   2b774:	str	r2, [sp, #56]	; 0x38
   2b778:	ldr	r2, [fp, #16]
   2b77c:	ldr	r2, [r2, r0, lsl #2]
   2b780:	str	r7, [r4, r0, lsl #2]
   2b784:	sub	r5, r2, #1
   2b788:	mov	r2, #0
   2b78c:	str	r5, [sl, r0, lsl #2]
   2b790:	ldr	r8, [r9, r0, lsl #2]
   2b794:	mov	r4, r8
   2b798:	mul	r7, r4, r7
   2b79c:	ldr	r4, [r3, -r2, lsl #2]
   2b7a0:	add	r2, r2, #1
   2b7a4:	cmp	r0, r2
   2b7a8:	mul	r5, r5, r4
   2b7ac:	bne	2b798 <GetDataSlab+0x927c>
   2b7b0:	add	r4, sp, #64	; 0x40
   2b7b4:	sub	sl, fp, #72	; 0x48
   2b7b8:	add	r3, r3, #4
   2b7bc:	str	r5, [sl, r0, lsl #2]
   2b7c0:	str	r7, [r4, r0, lsl #2]
   2b7c4:	ldr	r5, [sp, #56]	; 0x38
   2b7c8:	ldr	r2, [ip, r0, lsl #2]
   2b7cc:	mla	r1, r2, r6, r1
   2b7d0:	ldr	r2, [fp, #20]
   2b7d4:	mov	r6, r7
   2b7d8:	mov	r7, r8
   2b7dc:	ldr	r2, [r2, r0, lsl #2]
   2b7e0:	add	r0, r0, #1
   2b7e4:	mul	r5, r2, r5
   2b7e8:	ldr	r2, [fp, #24]
   2b7ec:	str	r5, [sp, #56]	; 0x38
   2b7f0:	cmp	r0, r2
   2b7f4:	bne	2b778 <GetDataSlab+0x925c>
   2b7f8:	ldr	r0, [sp, #52]	; 0x34
   2b7fc:	ldr	r5, [sp, #16]
   2b800:	add	r9, r0, r1, lsl #3
   2b804:	cmp	r5, #1
   2b808:	bne	36be0 <GetDataSlab+0x146c4>
   2b80c:	ldr	r0, [sp, #56]	; 0x38
   2b810:	ldr	r5, [sp, #40]	; 0x28
   2b814:	cmp	r0, #1
   2b818:	ldr	r0, [fp, #20]
   2b81c:	blt	36d68 <GetDataSlab+0x1484c>
   2b820:	mov	r3, lr
   2b824:	add	lr, r0, #4
   2b828:	add	r0, sp, #104	; 0x68
   2b82c:	mov	r4, ip
   2b830:	mov	sl, #0
   2b834:	orr	r6, r0, #4
   2b838:	sub	r0, fp, #72	; 0x48
   2b83c:	mov	ip, r3
   2b840:	add	r3, sp, #64	; 0x40
   2b844:	orr	r0, r0, #4
   2b848:	str	r0, [sp, #28]
   2b84c:	lsl	r0, r5, #1
   2b850:	str	r0, [sp, #36]	; 0x24
   2b854:	ldr	r0, [r4], #4
   2b858:	str	r0, [sp, #32]
   2b85c:	cmp	r5, #1
   2b860:	blt	2b880 <GetDataSlab+0x9364>
   2b864:	ldr	r0, [sp, #32]
   2b868:	add	r2, r9, r0, lsl #3
   2b86c:	mov	r0, ip
   2b870:	ldrh	r7, [r2], #8
   2b874:	subs	r5, r5, #1
   2b878:	strh	r7, [r0], #2
   2b87c:	bne	2b870 <GetDataSlab+0x9354>
   2b880:	ldr	r0, [sp, #44]	; 0x2c
   2b884:	add	r9, r9, r0, lsl #3
   2b888:	add	r1, r1, r0
   2b88c:	ldr	r0, [fp, #24]
   2b890:	cmp	r0, #2
   2b894:	blt	2b93c <GetDataSlab+0x9420>
   2b898:	mov	r2, #0
   2b89c:	ldr	r0, [r6, r2, lsl #2]
   2b8a0:	mov	r8, r2
   2b8a4:	add	r0, r0, #1
   2b8a8:	str	r0, [r6, r2, lsl #2]
   2b8ac:	ldr	r2, [lr, r2, lsl #2]
   2b8b0:	sdiv	r5, r0, r2
   2b8b4:	mls	r0, r5, r2, r0
   2b8b8:	cmp	r0, #0
   2b8bc:	bne	2b92c <GetDataSlab+0x9410>
   2b8c0:	mov	r0, #0
   2b8c4:	str	r0, [r6, r8, lsl #2]
   2b8c8:	add	r0, r3, r8, lsl #2
   2b8cc:	ldr	r0, [r0, #4]
   2b8d0:	sdiv	r2, r1, r0
   2b8d4:	mls	r2, r2, r0, r1
   2b8d8:	cmp	r2, #0
   2b8dc:	beq	2b8f8 <GetDataSlab+0x93dc>
   2b8e0:	ldr	r5, [r3, r8, lsl #2]
   2b8e4:	ldr	r7, [r4, r8, lsl #2]
   2b8e8:	sub	r0, r0, r2
   2b8ec:	mla	r0, r7, r5, r0
   2b8f0:	add	r1, r0, r1
   2b8f4:	b	2b910 <GetDataSlab+0x93f4>
   2b8f8:	ldr	r0, [r4, r8, lsl #2]
   2b8fc:	cmp	r0, #0
   2b900:	beq	2b914 <GetDataSlab+0x93f8>
   2b904:	ldr	r2, [r3, r8, lsl #2]
   2b908:	mla	r1, r2, r0, r1
   2b90c:	mul	r0, r2, r0
   2b910:	add	r9, r9, r0, lsl #3
   2b914:	ldr	r7, [fp, #24]
   2b918:	add	r0, r8, #2
   2b91c:	add	r2, r8, #1
   2b920:	cmp	r0, r7
   2b924:	blt	2b89c <GetDataSlab+0x9380>
   2b928:	b	2b93c <GetDataSlab+0x9420>
   2b92c:	ldr	r0, [sp, #28]
   2b930:	ldr	r0, [r0, r8, lsl #2]
   2b934:	add	r9, r9, r0, lsl #3
   2b938:	add	r1, r0, r1
   2b93c:	ldr	r0, [sp, #36]	; 0x24
   2b940:	ldr	r5, [sp, #40]	; 0x28
   2b944:	add	ip, ip, r0
   2b948:	ldr	r0, [sp, #56]	; 0x38
   2b94c:	add	sl, sl, r5
   2b950:	cmp	sl, r0
   2b954:	blt	2b85c <GetDataSlab+0x9340>
   2b958:	b	36d68 <GetDataSlab+0x1484c>
   2b95c:	ldr	r3, [sl]
   2b960:	add	r5, sp, #64	; 0x40
   2b964:	sub	r0, r3, #1
   2b968:	str	r0, [fp, #-72]	; 0xffffffb8
   2b96c:	ldr	r0, [r9]
   2b970:	mov	r9, lr
   2b974:	mov	lr, #0
   2b978:	str	r0, [sp, #64]	; 0x40
   2b97c:	str	r0, [sp, #48]	; 0x30
   2b980:	ldr	r0, [fp, #24]
   2b984:	ldr	sl, [r8]
   2b988:	cmp	r0, #2
   2b98c:	mov	r0, sl
   2b990:	str	sl, [sp, #56]	; 0x38
   2b994:	blt	2ba40 <GetDataSlab+0x9524>
   2b998:	ldr	r7, [sp, #48]	; 0x30
   2b99c:	ldr	r1, [fp, #8]
   2b9a0:	mov	r0, #1
   2b9a4:	mov	lr, #0
   2b9a8:	mov	r2, sl
   2b9ac:	str	sl, [sp, #56]	; 0x38
   2b9b0:	mov	r8, r7
   2b9b4:	ldr	r6, [fp, #16]
   2b9b8:	mov	r2, r9
   2b9bc:	ldr	r6, [r6, r0, lsl #2]
   2b9c0:	str	r7, [r5, r0, lsl #2]
   2b9c4:	sub	r4, r6, #1
   2b9c8:	ldr	r6, [fp, #8]
   2b9cc:	str	r4, [r9, r0, lsl #2]
   2b9d0:	ldr	ip, [r6, r0, lsl #2]
   2b9d4:	mov	r6, #0
   2b9d8:	mov	r5, ip
   2b9dc:	mul	r7, r5, r7
   2b9e0:	ldr	r5, [r1, -r6, lsl #2]
   2b9e4:	add	r6, r6, #1
   2b9e8:	cmp	r0, r6
   2b9ec:	mul	r4, r4, r5
   2b9f0:	bne	2b9dc <GetDataSlab+0x94c0>
   2b9f4:	ldr	r6, [fp, #12]
   2b9f8:	add	r5, sp, #64	; 0x40
   2b9fc:	str	r4, [r2, r0, lsl #2]
   2ba00:	mov	r9, r2
   2ba04:	ldr	r2, [sp, #56]	; 0x38
   2ba08:	add	r1, r1, #4
   2ba0c:	str	r7, [r5, r0, lsl #2]
   2ba10:	ldr	r4, [r6, r0, lsl #2]
   2ba14:	ldr	r6, [fp, #20]
   2ba18:	mla	lr, r4, r8, lr
   2ba1c:	ldr	r4, [r6, r0, lsl #2]
   2ba20:	ldr	r6, [fp, #24]
   2ba24:	add	r0, r0, #1
   2ba28:	mov	r8, r7
   2ba2c:	mov	r7, ip
   2ba30:	mul	r2, r4, r2
   2ba34:	cmp	r0, r6
   2ba38:	str	r2, [sp, #56]	; 0x38
   2ba3c:	bne	2b9b4 <GetDataSlab+0x9498>
   2ba40:	ldr	r0, [sp, #52]	; 0x34
   2ba44:	cmp	r3, #1
   2ba48:	add	r2, r0, lr
   2ba4c:	bne	36fc8 <GetDataSlab+0x14aac>
   2ba50:	ldr	r0, [sp, #56]	; 0x38
   2ba54:	cmp	r0, #1
   2ba58:	ldr	r0, [fp, #20]
   2ba5c:	blt	242a8 <GetDataSlab+0x1d8c>
   2ba60:	ldr	r7, [fp, #12]
   2ba64:	add	r8, r0, #4
   2ba68:	add	r0, sp, #104	; 0x68
   2ba6c:	mov	r9, #0
   2ba70:	orr	r3, r0, #4
   2ba74:	sub	r0, fp, #72	; 0x48
   2ba78:	orr	r0, r0, #4
   2ba7c:	str	r0, [sp, #44]	; 0x2c
   2ba80:	ldr	r0, [r7], #4
   2ba84:	str	r0, [sp, #52]	; 0x34
   2ba88:	ldr	r6, [sp, #52]	; 0x34
   2ba8c:	ldr	r1, [fp, #12]
   2ba90:	ldr	r0, [sp, #48]	; 0x30
   2ba94:	cmp	sl, #1
   2ba98:	add	ip, r6, lr
   2ba9c:	add	r4, r2, r6
   2baa0:	blt	2bad8 <GetDataSlab+0x95bc>
   2baa4:	ldr	r0, [sp, #60]	; 0x3c
   2baa8:	ldr	r6, [fp, #20]
   2baac:	add	r5, r0, r9, lsl #2
   2bab0:	mov	r0, #0
   2bab4:	ldrb	r2, [r4, r0]
   2bab8:	str	r2, [r5, r0, lsl #2]
   2babc:	add	r0, r0, #1
   2bac0:	ldr	sl, [r6]
   2bac4:	cmp	r0, sl
   2bac8:	blt	2bab4 <GetDataSlab+0x9598>
   2bacc:	ldr	r0, [fp, #8]
   2bad0:	ldr	r6, [r1]
   2bad4:	ldr	r0, [r0]
   2bad8:	str	r0, [sp, #48]	; 0x30
   2badc:	sub	r0, r0, r6
   2bae0:	str	r6, [sp, #52]	; 0x34
   2bae4:	add	r2, r4, r0
   2bae8:	add	lr, ip, r0
   2baec:	ldr	r0, [fp, #24]
   2baf0:	add	r4, sp, #64	; 0x40
   2baf4:	cmp	r0, #2
   2baf8:	blt	2bba0 <GetDataSlab+0x9684>
   2bafc:	mov	r5, #0
   2bb00:	mov	r0, r5
   2bb04:	ldr	r5, [r3, r5, lsl #2]
   2bb08:	add	r5, r5, #1
   2bb0c:	str	r5, [r3, r0, lsl #2]
   2bb10:	ldr	r1, [r8, r0, lsl #2]
   2bb14:	sdiv	r6, r5, r1
   2bb18:	mls	r1, r6, r1, r5
   2bb1c:	cmp	r1, #0
   2bb20:	bne	2bb90 <GetDataSlab+0x9674>
   2bb24:	mov	r1, #0
   2bb28:	str	r1, [r3, r0, lsl #2]
   2bb2c:	add	r1, r4, r0, lsl #2
   2bb30:	ldr	r5, [r1, #4]
   2bb34:	sdiv	r1, lr, r5
   2bb38:	mls	ip, r1, r5, lr
   2bb3c:	cmp	ip, #0
   2bb40:	beq	2bb60 <GetDataSlab+0x9644>
   2bb44:	ldr	r1, [r4, r0, lsl #2]
   2bb48:	ldr	r6, [r7, r0, lsl #2]
   2bb4c:	sub	r5, r5, ip
   2bb50:	mla	r1, r6, r1, r5
   2bb54:	add	lr, r1, lr
   2bb58:	add	r2, r2, r1
   2bb5c:	b	2bb78 <GetDataSlab+0x965c>
   2bb60:	ldr	r5, [r7, r0, lsl #2]
   2bb64:	add	r4, sp, #64	; 0x40
   2bb68:	cmp	r5, #0
   2bb6c:	ldrne	r1, [r4, r0, lsl #2]
   2bb70:	mlane	lr, r1, r5, lr
   2bb74:	mlane	r2, r1, r5, r2
   2bb78:	ldr	r1, [fp, #24]
   2bb7c:	add	r5, r0, #1
   2bb80:	add	r0, r0, #2
   2bb84:	cmp	r0, r1
   2bb88:	blt	2bb00 <GetDataSlab+0x95e4>
   2bb8c:	b	2bba0 <GetDataSlab+0x9684>
   2bb90:	ldr	r1, [sp, #44]	; 0x2c
   2bb94:	ldr	r0, [r1, r0, lsl #2]
   2bb98:	add	r2, r2, r0
   2bb9c:	add	lr, r0, lr
   2bba0:	ldr	r1, [sp, #56]	; 0x38
   2bba4:	add	r9, sl, r9
   2bba8:	mov	r0, #0
   2bbac:	cmp	r9, r1
   2bbb0:	blt	2ba88 <GetDataSlab+0x956c>
   2bbb4:	b	242ac <GetDataSlab+0x1d90>
   2bbb8:	ldr	r3, [sl]
   2bbbc:	add	r5, sp, #64	; 0x40
   2bbc0:	sub	r0, r3, #1
   2bbc4:	str	r0, [fp, #-72]	; 0xffffffb8
   2bbc8:	ldr	r0, [r9]
   2bbcc:	mov	r9, #0
   2bbd0:	str	r0, [sp, #64]	; 0x40
   2bbd4:	str	r0, [sp, #48]	; 0x30
   2bbd8:	ldr	r0, [fp, #24]
   2bbdc:	ldr	sl, [r8]
   2bbe0:	cmp	r0, #2
   2bbe4:	mov	r0, sl
   2bbe8:	str	sl, [sp, #56]	; 0x38
   2bbec:	blt	2bc90 <GetDataSlab+0x9774>
   2bbf0:	ldr	r7, [sp, #48]	; 0x30
   2bbf4:	ldr	r1, [fp, #8]
   2bbf8:	mov	r0, #1
   2bbfc:	mov	r9, #0
   2bc00:	mov	r2, sl
   2bc04:	str	sl, [sp, #56]	; 0x38
   2bc08:	mov	r8, r7
   2bc0c:	ldr	r6, [fp, #16]
   2bc10:	ldr	r2, [fp, #8]
   2bc14:	ldr	r6, [r6, r0, lsl #2]
   2bc18:	str	r7, [r5, r0, lsl #2]
   2bc1c:	sub	r4, r6, #1
   2bc20:	mov	r6, #0
   2bc24:	str	r4, [lr, r0, lsl #2]
   2bc28:	ldr	ip, [r2, r0, lsl #2]
   2bc2c:	mov	r5, ip
   2bc30:	mul	r7, r5, r7
   2bc34:	ldr	r5, [r1, -r6, lsl #2]
   2bc38:	add	r6, r6, #1
   2bc3c:	cmp	r0, r6
   2bc40:	mul	r4, r4, r5
   2bc44:	bne	2bc30 <GetDataSlab+0x9714>
   2bc48:	ldr	r6, [fp, #12]
   2bc4c:	add	r5, sp, #64	; 0x40
   2bc50:	str	r4, [lr, r0, lsl #2]
   2bc54:	ldr	r2, [sp, #56]	; 0x38
   2bc58:	add	r1, r1, #4
   2bc5c:	str	r7, [r5, r0, lsl #2]
   2bc60:	ldr	r4, [r6, r0, lsl #2]
   2bc64:	ldr	r6, [fp, #20]
   2bc68:	mla	r9, r4, r8, r9
   2bc6c:	ldr	r4, [r6, r0, lsl #2]
   2bc70:	ldr	r6, [fp, #24]
   2bc74:	add	r0, r0, #1
   2bc78:	mov	r8, r7
   2bc7c:	mov	r7, ip
   2bc80:	mul	r2, r4, r2
   2bc84:	cmp	r0, r6
   2bc88:	str	r2, [sp, #56]	; 0x38
   2bc8c:	bne	2bc0c <GetDataSlab+0x96f0>
   2bc90:	ldr	r0, [sp, #52]	; 0x34
   2bc94:	mov	r2, r9
   2bc98:	cmp	r3, #1
   2bc9c:	add	r4, r0, r9, lsl #1
   2bca0:	bne	37160 <GetDataSlab+0x14c44>
   2bca4:	ldr	r0, [sp, #56]	; 0x38
   2bca8:	ldr	lr, [fp, #12]
   2bcac:	cmp	r0, #1
   2bcb0:	ldr	r0, [fp, #20]
   2bcb4:	blt	242a8 <GetDataSlab+0x1d8c>
   2bcb8:	add	r8, r0, #4
   2bcbc:	add	r0, sp, #104	; 0x68
   2bcc0:	mov	r9, #0
   2bcc4:	orr	r3, r0, #4
   2bcc8:	sub	r0, fp, #72	; 0x48
   2bccc:	orr	r0, r0, #4
   2bcd0:	str	r0, [sp, #44]	; 0x2c
   2bcd4:	ldr	r0, [lr], #4
   2bcd8:	str	r0, [sp, #52]	; 0x34
   2bcdc:	ldr	r1, [sp, #52]	; 0x34
   2bce0:	ldr	r0, [sp, #48]	; 0x30
   2bce4:	cmp	sl, #1
   2bce8:	add	r2, r1, r2
   2bcec:	add	ip, r4, r1, lsl #1
   2bcf0:	blt	2bd30 <GetDataSlab+0x9814>
   2bcf4:	ldr	r0, [sp, #60]	; 0x3c
   2bcf8:	ldr	r6, [fp, #20]
   2bcfc:	mov	r4, ip
   2bd00:	add	r5, r0, r9, lsl #2
   2bd04:	mov	r0, #0
   2bd08:	ldrsh	r1, [r4], #2
   2bd0c:	str	r1, [r5, r0, lsl #2]
   2bd10:	add	r0, r0, #1
   2bd14:	ldr	sl, [r6]
   2bd18:	cmp	r0, sl
   2bd1c:	blt	2bd08 <GetDataSlab+0x97ec>
   2bd20:	ldr	r0, [fp, #12]
   2bd24:	ldr	r1, [r0]
   2bd28:	ldr	r0, [fp, #8]
   2bd2c:	ldr	r0, [r0]
   2bd30:	str	r0, [sp, #48]	; 0x30
   2bd34:	sub	r0, r0, r1
   2bd38:	str	r1, [sp, #52]	; 0x34
   2bd3c:	add	r4, ip, r0, lsl #1
   2bd40:	add	r2, r2, r0
   2bd44:	ldr	r0, [fp, #24]
   2bd48:	cmp	r0, #2
   2bd4c:	blt	2bdf8 <GetDataSlab+0x98dc>
   2bd50:	mov	r5, #0
   2bd54:	add	ip, sp, #64	; 0x40
   2bd58:	ldr	r1, [r3, r5, lsl #2]
   2bd5c:	mov	r0, r5
   2bd60:	add	r1, r1, #1
   2bd64:	str	r1, [r3, r5, lsl #2]
   2bd68:	ldr	r5, [r8, r5, lsl #2]
   2bd6c:	sdiv	r6, r1, r5
   2bd70:	mls	r1, r6, r5, r1
   2bd74:	cmp	r1, #0
   2bd78:	bne	2bde8 <GetDataSlab+0x98cc>
   2bd7c:	mov	r1, #0
   2bd80:	str	r1, [r3, r0, lsl #2]
   2bd84:	add	r1, ip, r0, lsl #2
   2bd88:	ldr	r5, [r1, #4]
   2bd8c:	sdiv	r1, r2, r5
   2bd90:	mls	r1, r1, r5, r2
   2bd94:	cmp	r1, #0
   2bd98:	beq	2bdb4 <GetDataSlab+0x9898>
   2bd9c:	ldr	r6, [ip, r0, lsl #2]
   2bda0:	ldr	r7, [lr, r0, lsl #2]
   2bda4:	sub	r1, r5, r1
   2bda8:	mla	r1, r7, r6, r1
   2bdac:	add	r2, r1, r2
   2bdb0:	b	2bdcc <GetDataSlab+0x98b0>
   2bdb4:	ldr	r1, [lr, r0, lsl #2]
   2bdb8:	cmp	r1, #0
   2bdbc:	beq	2bdd0 <GetDataSlab+0x98b4>
   2bdc0:	ldr	r7, [ip, r0, lsl #2]
   2bdc4:	mla	r2, r7, r1, r2
   2bdc8:	mul	r1, r7, r1
   2bdcc:	add	r4, r4, r1, lsl #1
   2bdd0:	ldr	r1, [fp, #24]
   2bdd4:	add	r5, r0, #1
   2bdd8:	add	r0, r0, #2
   2bddc:	cmp	r0, r1
   2bde0:	blt	2bd58 <GetDataSlab+0x983c>
   2bde4:	b	2bdf8 <GetDataSlab+0x98dc>
   2bde8:	ldr	r1, [sp, #44]	; 0x2c
   2bdec:	ldr	r0, [r1, r0, lsl #2]
   2bdf0:	add	r4, r4, r0, lsl #1
   2bdf4:	add	r2, r0, r2
   2bdf8:	ldr	r1, [sp, #56]	; 0x38
   2bdfc:	add	r9, sl, r9
   2be00:	mov	r0, #0
   2be04:	cmp	r9, r1
   2be08:	blt	2bcdc <GetDataSlab+0x97c0>
   2be0c:	b	242ac <GetDataSlab+0x1d90>
   2be10:	ldr	r3, [sl]
   2be14:	add	r5, sp, #64	; 0x40
   2be18:	sub	r0, r3, #1
   2be1c:	str	r0, [fp, #-72]	; 0xffffffb8
   2be20:	ldr	r0, [r9]
   2be24:	mov	r9, #0
   2be28:	str	r0, [sp, #64]	; 0x40
   2be2c:	str	r0, [sp, #48]	; 0x30
   2be30:	ldr	r0, [fp, #24]
   2be34:	ldr	sl, [r8]
   2be38:	cmp	r0, #2
   2be3c:	mov	r0, sl
   2be40:	str	sl, [sp, #56]	; 0x38
   2be44:	blt	2bee8 <GetDataSlab+0x99cc>
   2be48:	ldr	r7, [sp, #48]	; 0x30
   2be4c:	ldr	r1, [fp, #8]
   2be50:	mov	r0, #1
   2be54:	mov	r9, #0
   2be58:	mov	r2, sl
   2be5c:	str	sl, [sp, #56]	; 0x38
   2be60:	mov	r8, r7
   2be64:	ldr	r6, [fp, #16]
   2be68:	ldr	r2, [fp, #8]
   2be6c:	ldr	r6, [r6, r0, lsl #2]
   2be70:	str	r7, [r5, r0, lsl #2]
   2be74:	sub	r4, r6, #1
   2be78:	mov	r6, #0
   2be7c:	str	r4, [lr, r0, lsl #2]
   2be80:	ldr	ip, [r2, r0, lsl #2]
   2be84:	mov	r5, ip
   2be88:	mul	r7, r5, r7
   2be8c:	ldr	r5, [r1, -r6, lsl #2]
   2be90:	add	r6, r6, #1
   2be94:	cmp	r0, r6
   2be98:	mul	r4, r4, r5
   2be9c:	bne	2be88 <GetDataSlab+0x996c>
   2bea0:	ldr	r6, [fp, #12]
   2bea4:	add	r5, sp, #64	; 0x40
   2bea8:	str	r4, [lr, r0, lsl #2]
   2beac:	ldr	r2, [sp, #56]	; 0x38
   2beb0:	add	r1, r1, #4
   2beb4:	str	r7, [r5, r0, lsl #2]
   2beb8:	ldr	r4, [r6, r0, lsl #2]
   2bebc:	ldr	r6, [fp, #20]
   2bec0:	mla	r9, r4, r8, r9
   2bec4:	ldr	r4, [r6, r0, lsl #2]
   2bec8:	ldr	r6, [fp, #24]
   2becc:	add	r0, r0, #1
   2bed0:	mov	r8, r7
   2bed4:	mov	r7, ip
   2bed8:	mul	r2, r4, r2
   2bedc:	cmp	r0, r6
   2bee0:	str	r2, [sp, #56]	; 0x38
   2bee4:	bne	2be64 <GetDataSlab+0x9948>
   2bee8:	ldr	r0, [sp, #52]	; 0x34
   2beec:	mov	r2, r9
   2bef0:	cmp	r3, #1
   2bef4:	add	r4, r0, r9, lsl #1
   2bef8:	bne	372f8 <GetDataSlab+0x14ddc>
   2befc:	ldr	r0, [sp, #56]	; 0x38
   2bf00:	ldr	lr, [fp, #12]
   2bf04:	cmp	r0, #1
   2bf08:	ldr	r0, [fp, #20]
   2bf0c:	blt	242a8 <GetDataSlab+0x1d8c>
   2bf10:	add	r8, r0, #4
   2bf14:	add	r0, sp, #104	; 0x68
   2bf18:	mov	r9, #0
   2bf1c:	orr	r3, r0, #4
   2bf20:	sub	r0, fp, #72	; 0x48
   2bf24:	orr	r0, r0, #4
   2bf28:	str	r0, [sp, #44]	; 0x2c
   2bf2c:	ldr	r0, [lr], #4
   2bf30:	str	r0, [sp, #52]	; 0x34
   2bf34:	ldr	r1, [sp, #52]	; 0x34
   2bf38:	ldr	r0, [sp, #48]	; 0x30
   2bf3c:	cmp	sl, #1
   2bf40:	add	r2, r1, r2
   2bf44:	add	ip, r4, r1, lsl #1
   2bf48:	blt	2bf88 <GetDataSlab+0x9a6c>
   2bf4c:	ldr	r0, [sp, #60]	; 0x3c
   2bf50:	ldr	r6, [fp, #20]
   2bf54:	mov	r4, ip
   2bf58:	add	r5, r0, r9, lsl #2
   2bf5c:	mov	r0, #0
   2bf60:	ldrh	r1, [r4], #2
   2bf64:	str	r1, [r5, r0, lsl #2]
   2bf68:	add	r0, r0, #1
   2bf6c:	ldr	sl, [r6]
   2bf70:	cmp	r0, sl
   2bf74:	blt	2bf60 <GetDataSlab+0x9a44>
   2bf78:	ldr	r0, [fp, #12]
   2bf7c:	ldr	r1, [r0]
   2bf80:	ldr	r0, [fp, #8]
   2bf84:	ldr	r0, [r0]
   2bf88:	str	r0, [sp, #48]	; 0x30
   2bf8c:	sub	r0, r0, r1
   2bf90:	str	r1, [sp, #52]	; 0x34
   2bf94:	add	r4, ip, r0, lsl #1
   2bf98:	add	r2, r2, r0
   2bf9c:	ldr	r0, [fp, #24]
   2bfa0:	cmp	r0, #2
   2bfa4:	blt	2c050 <GetDataSlab+0x9b34>
   2bfa8:	mov	r5, #0
   2bfac:	add	ip, sp, #64	; 0x40
   2bfb0:	ldr	r1, [r3, r5, lsl #2]
   2bfb4:	mov	r0, r5
   2bfb8:	add	r1, r1, #1
   2bfbc:	str	r1, [r3, r5, lsl #2]
   2bfc0:	ldr	r5, [r8, r5, lsl #2]
   2bfc4:	sdiv	r6, r1, r5
   2bfc8:	mls	r1, r6, r5, r1
   2bfcc:	cmp	r1, #0
   2bfd0:	bne	2c040 <GetDataSlab+0x9b24>
   2bfd4:	mov	r1, #0
   2bfd8:	str	r1, [r3, r0, lsl #2]
   2bfdc:	add	r1, ip, r0, lsl #2
   2bfe0:	ldr	r5, [r1, #4]
   2bfe4:	sdiv	r1, r2, r5
   2bfe8:	mls	r1, r1, r5, r2
   2bfec:	cmp	r1, #0
   2bff0:	beq	2c00c <GetDataSlab+0x9af0>
   2bff4:	ldr	r6, [ip, r0, lsl #2]
   2bff8:	ldr	r7, [lr, r0, lsl #2]
   2bffc:	sub	r1, r5, r1
   2c000:	mla	r1, r7, r6, r1
   2c004:	add	r2, r1, r2
   2c008:	b	2c024 <GetDataSlab+0x9b08>
   2c00c:	ldr	r1, [lr, r0, lsl #2]
   2c010:	cmp	r1, #0
   2c014:	beq	2c028 <GetDataSlab+0x9b0c>
   2c018:	ldr	r7, [ip, r0, lsl #2]
   2c01c:	mla	r2, r7, r1, r2
   2c020:	mul	r1, r7, r1
   2c024:	add	r4, r4, r1, lsl #1
   2c028:	ldr	r1, [fp, #24]
   2c02c:	add	r5, r0, #1
   2c030:	add	r0, r0, #2
   2c034:	cmp	r0, r1
   2c038:	blt	2bfb0 <GetDataSlab+0x9a94>
   2c03c:	b	2c050 <GetDataSlab+0x9b34>
   2c040:	ldr	r1, [sp, #44]	; 0x2c
   2c044:	ldr	r0, [r1, r0, lsl #2]
   2c048:	add	r4, r4, r0, lsl #1
   2c04c:	add	r2, r0, r2
   2c050:	ldr	r1, [sp, #56]	; 0x38
   2c054:	add	r9, sl, r9
   2c058:	mov	r0, #0
   2c05c:	cmp	r9, r1
   2c060:	blt	2bf34 <GetDataSlab+0x9a18>
   2c064:	b	242ac <GetDataSlab+0x1d90>
   2c068:	ldr	r3, [sl]
   2c06c:	add	r5, sp, #64	; 0x40
   2c070:	sub	r0, r3, #1
   2c074:	str	r0, [fp, #-72]	; 0xffffffb8
   2c078:	ldr	r0, [r9]
   2c07c:	mov	r9, lr
   2c080:	mov	lr, #0
   2c084:	str	r0, [sp, #64]	; 0x40
   2c088:	str	r0, [sp, #48]	; 0x30
   2c08c:	ldr	r0, [fp, #24]
   2c090:	ldr	sl, [r8]
   2c094:	cmp	r0, #2
   2c098:	mov	r0, sl
   2c09c:	str	sl, [sp, #56]	; 0x38
   2c0a0:	blt	2c14c <GetDataSlab+0x9c30>
   2c0a4:	ldr	r7, [sp, #48]	; 0x30
   2c0a8:	ldr	r1, [fp, #8]
   2c0ac:	mov	r0, #1
   2c0b0:	mov	lr, #0
   2c0b4:	mov	r2, sl
   2c0b8:	str	sl, [sp, #56]	; 0x38
   2c0bc:	mov	r8, r7
   2c0c0:	ldr	r6, [fp, #16]
   2c0c4:	mov	r2, r9
   2c0c8:	ldr	r6, [r6, r0, lsl #2]
   2c0cc:	str	r7, [r5, r0, lsl #2]
   2c0d0:	sub	r4, r6, #1
   2c0d4:	ldr	r6, [fp, #8]
   2c0d8:	str	r4, [r9, r0, lsl #2]
   2c0dc:	ldr	ip, [r6, r0, lsl #2]
   2c0e0:	mov	r6, #0
   2c0e4:	mov	r5, ip
   2c0e8:	mul	r7, r5, r7
   2c0ec:	ldr	r5, [r1, -r6, lsl #2]
   2c0f0:	add	r6, r6, #1
   2c0f4:	cmp	r0, r6
   2c0f8:	mul	r4, r4, r5
   2c0fc:	bne	2c0e8 <GetDataSlab+0x9bcc>
   2c100:	ldr	r6, [fp, #12]
   2c104:	add	r5, sp, #64	; 0x40
   2c108:	str	r4, [r2, r0, lsl #2]
   2c10c:	mov	r9, r2
   2c110:	ldr	r2, [sp, #56]	; 0x38
   2c114:	add	r1, r1, #4
   2c118:	str	r7, [r5, r0, lsl #2]
   2c11c:	ldr	r4, [r6, r0, lsl #2]
   2c120:	ldr	r6, [fp, #20]
   2c124:	mla	lr, r4, r8, lr
   2c128:	ldr	r4, [r6, r0, lsl #2]
   2c12c:	ldr	r6, [fp, #24]
   2c130:	add	r0, r0, #1
   2c134:	mov	r8, r7
   2c138:	mov	r7, ip
   2c13c:	mul	r2, r4, r2
   2c140:	cmp	r0, r6
   2c144:	str	r2, [sp, #56]	; 0x38
   2c148:	bne	2c0c0 <GetDataSlab+0x9ba4>
   2c14c:	ldr	r0, [sp, #52]	; 0x34
   2c150:	cmp	r3, #1
   2c154:	add	r2, r0, lr, lsl #2
   2c158:	bne	37490 <GetDataSlab+0x14f74>
   2c15c:	ldr	r0, [sp, #56]	; 0x38
   2c160:	cmp	r0, #1
   2c164:	ldr	r0, [fp, #20]
   2c168:	blt	242a8 <GetDataSlab+0x1d8c>
   2c16c:	ldr	r7, [fp, #12]
   2c170:	add	r8, r0, #4
   2c174:	add	r0, sp, #104	; 0x68
   2c178:	mov	r9, #0
   2c17c:	orr	r3, r0, #4
   2c180:	sub	r0, fp, #72	; 0x48
   2c184:	orr	r0, r0, #4
   2c188:	str	r0, [sp, #44]	; 0x2c
   2c18c:	ldr	r0, [r7], #4
   2c190:	str	r0, [sp, #52]	; 0x34
   2c194:	ldr	r6, [sp, #52]	; 0x34
   2c198:	ldr	r1, [fp, #12]
   2c19c:	ldr	r0, [sp, #48]	; 0x30
   2c1a0:	cmp	sl, #1
   2c1a4:	add	ip, r6, lr
   2c1a8:	add	r4, r2, r6, lsl #2
   2c1ac:	blt	2c1e4 <GetDataSlab+0x9cc8>
   2c1b0:	ldr	r0, [sp, #60]	; 0x3c
   2c1b4:	ldr	r6, [fp, #20]
   2c1b8:	add	r5, r0, r9, lsl #2
   2c1bc:	mov	r0, #0
   2c1c0:	ldr	r2, [r4, r0, lsl #2]
   2c1c4:	str	r2, [r5, r0, lsl #2]
   2c1c8:	add	r0, r0, #1
   2c1cc:	ldr	sl, [r6]
   2c1d0:	cmp	r0, sl
   2c1d4:	blt	2c1c0 <GetDataSlab+0x9ca4>
   2c1d8:	ldr	r0, [fp, #8]
   2c1dc:	ldr	r6, [r1]
   2c1e0:	ldr	r0, [r0]
   2c1e4:	str	r0, [sp, #48]	; 0x30
   2c1e8:	sub	r0, r0, r6
   2c1ec:	str	r6, [sp, #52]	; 0x34
   2c1f0:	add	r2, r4, r0, lsl #2
   2c1f4:	add	lr, ip, r0
   2c1f8:	ldr	r0, [fp, #24]
   2c1fc:	add	r4, sp, #64	; 0x40
   2c200:	cmp	r0, #2
   2c204:	blt	2c2b0 <GetDataSlab+0x9d94>
   2c208:	mov	r5, #0
   2c20c:	mov	r0, r5
   2c210:	ldr	r5, [r3, r5, lsl #2]
   2c214:	add	r5, r5, #1
   2c218:	str	r5, [r3, r0, lsl #2]
   2c21c:	ldr	r1, [r8, r0, lsl #2]
   2c220:	sdiv	r6, r5, r1
   2c224:	mls	r1, r6, r1, r5
   2c228:	cmp	r1, #0
   2c22c:	bne	2c2a0 <GetDataSlab+0x9d84>
   2c230:	mov	r1, #0
   2c234:	str	r1, [r3, r0, lsl #2]
   2c238:	add	r1, r4, r0, lsl #2
   2c23c:	ldr	r5, [r1, #4]
   2c240:	sdiv	r1, lr, r5
   2c244:	mls	ip, r1, r5, lr
   2c248:	cmp	ip, #0
   2c24c:	beq	2c268 <GetDataSlab+0x9d4c>
   2c250:	ldr	r1, [r4, r0, lsl #2]
   2c254:	ldr	r6, [r7, r0, lsl #2]
   2c258:	sub	r5, r5, ip
   2c25c:	mla	r1, r6, r1, r5
   2c260:	add	lr, r1, lr
   2c264:	b	2c284 <GetDataSlab+0x9d68>
   2c268:	ldr	r5, [r7, r0, lsl #2]
   2c26c:	add	r4, sp, #64	; 0x40
   2c270:	cmp	r5, #0
   2c274:	beq	2c288 <GetDataSlab+0x9d6c>
   2c278:	ldr	r1, [r4, r0, lsl #2]
   2c27c:	mla	lr, r1, r5, lr
   2c280:	mul	r1, r1, r5
   2c284:	add	r2, r2, r1, lsl #2
   2c288:	ldr	r1, [fp, #24]
   2c28c:	add	r5, r0, #1
   2c290:	add	r0, r0, #2
   2c294:	cmp	r0, r1
   2c298:	blt	2c20c <GetDataSlab+0x9cf0>
   2c29c:	b	2c2b0 <GetDataSlab+0x9d94>
   2c2a0:	ldr	r1, [sp, #44]	; 0x2c
   2c2a4:	ldr	r0, [r1, r0, lsl #2]
   2c2a8:	add	r2, r2, r0, lsl #2
   2c2ac:	add	lr, r0, lr
   2c2b0:	ldr	r1, [sp, #56]	; 0x38
   2c2b4:	add	r9, sl, r9
   2c2b8:	mov	r0, #0
   2c2bc:	cmp	r9, r1
   2c2c0:	blt	2c194 <GetDataSlab+0x9c78>
   2c2c4:	b	242ac <GetDataSlab+0x1d90>
   2c2c8:	ldr	r3, [sl]
   2c2cc:	add	r5, sp, #64	; 0x40
   2c2d0:	sub	r0, r3, #1
   2c2d4:	str	r0, [fp, #-72]	; 0xffffffb8
   2c2d8:	ldr	r0, [r9]
   2c2dc:	mov	r9, lr
   2c2e0:	mov	lr, #0
   2c2e4:	str	r0, [sp, #64]	; 0x40
   2c2e8:	str	r0, [sp, #48]	; 0x30
   2c2ec:	ldr	r0, [fp, #24]
   2c2f0:	ldr	sl, [r8]
   2c2f4:	cmp	r0, #2
   2c2f8:	mov	r0, sl
   2c2fc:	str	sl, [sp, #56]	; 0x38
   2c300:	blt	2c3ac <GetDataSlab+0x9e90>
   2c304:	ldr	r7, [sp, #48]	; 0x30
   2c308:	ldr	r1, [fp, #8]
   2c30c:	mov	r0, #1
   2c310:	mov	lr, #0
   2c314:	mov	r2, sl
   2c318:	str	sl, [sp, #56]	; 0x38
   2c31c:	mov	r8, r7
   2c320:	ldr	r6, [fp, #16]
   2c324:	mov	r2, r9
   2c328:	ldr	r6, [r6, r0, lsl #2]
   2c32c:	str	r7, [r5, r0, lsl #2]
   2c330:	sub	r4, r6, #1
   2c334:	ldr	r6, [fp, #8]
   2c338:	str	r4, [r9, r0, lsl #2]
   2c33c:	ldr	ip, [r6, r0, lsl #2]
   2c340:	mov	r6, #0
   2c344:	mov	r5, ip
   2c348:	mul	r7, r5, r7
   2c34c:	ldr	r5, [r1, -r6, lsl #2]
   2c350:	add	r6, r6, #1
   2c354:	cmp	r0, r6
   2c358:	mul	r4, r4, r5
   2c35c:	bne	2c348 <GetDataSlab+0x9e2c>
   2c360:	ldr	r6, [fp, #12]
   2c364:	add	r5, sp, #64	; 0x40
   2c368:	str	r4, [r2, r0, lsl #2]
   2c36c:	mov	r9, r2
   2c370:	ldr	r2, [sp, #56]	; 0x38
   2c374:	add	r1, r1, #4
   2c378:	str	r7, [r5, r0, lsl #2]
   2c37c:	ldr	r4, [r6, r0, lsl #2]
   2c380:	ldr	r6, [fp, #20]
   2c384:	mla	lr, r4, r8, lr
   2c388:	ldr	r4, [r6, r0, lsl #2]
   2c38c:	ldr	r6, [fp, #24]
   2c390:	add	r0, r0, #1
   2c394:	mov	r8, r7
   2c398:	mov	r7, ip
   2c39c:	mul	r2, r4, r2
   2c3a0:	cmp	r0, r6
   2c3a4:	str	r2, [sp, #56]	; 0x38
   2c3a8:	bne	2c320 <GetDataSlab+0x9e04>
   2c3ac:	ldr	r0, [sp, #52]	; 0x34
   2c3b0:	cmp	r3, #1
   2c3b4:	add	r2, r0, lr, lsl #2
   2c3b8:	bne	3762c <GetDataSlab+0x15110>
   2c3bc:	ldr	r0, [sp, #56]	; 0x38
   2c3c0:	cmp	r0, #1
   2c3c4:	ldr	r0, [fp, #20]
   2c3c8:	blt	242a8 <GetDataSlab+0x1d8c>
   2c3cc:	ldr	r7, [fp, #12]
   2c3d0:	add	r8, r0, #4
   2c3d4:	add	r0, sp, #104	; 0x68
   2c3d8:	mov	r9, #0
   2c3dc:	orr	r3, r0, #4
   2c3e0:	sub	r0, fp, #72	; 0x48
   2c3e4:	orr	r0, r0, #4
   2c3e8:	str	r0, [sp, #44]	; 0x2c
   2c3ec:	ldr	r0, [r7], #4
   2c3f0:	str	r0, [sp, #52]	; 0x34
   2c3f4:	ldr	r6, [sp, #52]	; 0x34
   2c3f8:	ldr	r1, [fp, #12]
   2c3fc:	ldr	r0, [sp, #48]	; 0x30
   2c400:	cmp	sl, #1
   2c404:	add	ip, r6, lr
   2c408:	add	r4, r2, r6, lsl #2
   2c40c:	blt	2c444 <GetDataSlab+0x9f28>
   2c410:	ldr	r0, [sp, #60]	; 0x3c
   2c414:	ldr	r6, [fp, #20]
   2c418:	add	r5, r0, r9, lsl #2
   2c41c:	mov	r0, #0
   2c420:	ldr	r2, [r4, r0, lsl #2]
   2c424:	str	r2, [r5, r0, lsl #2]
   2c428:	add	r0, r0, #1
   2c42c:	ldr	sl, [r6]
   2c430:	cmp	r0, sl
   2c434:	blt	2c420 <GetDataSlab+0x9f04>
   2c438:	ldr	r0, [fp, #8]
   2c43c:	ldr	r6, [r1]
   2c440:	ldr	r0, [r0]
   2c444:	str	r0, [sp, #48]	; 0x30
   2c448:	sub	r0, r0, r6
   2c44c:	str	r6, [sp, #52]	; 0x34
   2c450:	add	r2, r4, r0, lsl #2
   2c454:	add	lr, ip, r0
   2c458:	ldr	r0, [fp, #24]
   2c45c:	add	r4, sp, #64	; 0x40
   2c460:	cmp	r0, #2
   2c464:	blt	2c510 <GetDataSlab+0x9ff4>
   2c468:	mov	r5, #0
   2c46c:	mov	r0, r5
   2c470:	ldr	r5, [r3, r5, lsl #2]
   2c474:	add	r5, r5, #1
   2c478:	str	r5, [r3, r0, lsl #2]
   2c47c:	ldr	r1, [r8, r0, lsl #2]
   2c480:	sdiv	r6, r5, r1
   2c484:	mls	r1, r6, r1, r5
   2c488:	cmp	r1, #0
   2c48c:	bne	2c500 <GetDataSlab+0x9fe4>
   2c490:	mov	r1, #0
   2c494:	str	r1, [r3, r0, lsl #2]
   2c498:	add	r1, r4, r0, lsl #2
   2c49c:	ldr	r5, [r1, #4]
   2c4a0:	sdiv	r1, lr, r5
   2c4a4:	mls	ip, r1, r5, lr
   2c4a8:	cmp	ip, #0
   2c4ac:	beq	2c4c8 <GetDataSlab+0x9fac>
   2c4b0:	ldr	r1, [r4, r0, lsl #2]
   2c4b4:	ldr	r6, [r7, r0, lsl #2]
   2c4b8:	sub	r5, r5, ip
   2c4bc:	mla	r1, r6, r1, r5
   2c4c0:	add	lr, r1, lr
   2c4c4:	b	2c4e4 <GetDataSlab+0x9fc8>
   2c4c8:	ldr	r5, [r7, r0, lsl #2]
   2c4cc:	add	r4, sp, #64	; 0x40
   2c4d0:	cmp	r5, #0
   2c4d4:	beq	2c4e8 <GetDataSlab+0x9fcc>
   2c4d8:	ldr	r1, [r4, r0, lsl #2]
   2c4dc:	mla	lr, r1, r5, lr
   2c4e0:	mul	r1, r1, r5
   2c4e4:	add	r2, r2, r1, lsl #2
   2c4e8:	ldr	r1, [fp, #24]
   2c4ec:	add	r5, r0, #1
   2c4f0:	add	r0, r0, #2
   2c4f4:	cmp	r0, r1
   2c4f8:	blt	2c46c <GetDataSlab+0x9f50>
   2c4fc:	b	2c510 <GetDataSlab+0x9ff4>
   2c500:	ldr	r1, [sp, #44]	; 0x2c
   2c504:	ldr	r0, [r1, r0, lsl #2]
   2c508:	add	r2, r2, r0, lsl #2
   2c50c:	add	lr, r0, lr
   2c510:	ldr	r1, [sp, #56]	; 0x38
   2c514:	add	r9, sl, r9
   2c518:	mov	r0, #0
   2c51c:	cmp	r9, r1
   2c520:	blt	2c3f4 <GetDataSlab+0x9ed8>
   2c524:	b	242ac <GetDataSlab+0x1d90>
   2c528:	ldr	r3, [sl]
   2c52c:	mov	sl, #0
   2c530:	add	r5, sp, #64	; 0x40
   2c534:	sub	r0, r3, #1
   2c538:	str	r0, [fp, #-72]	; 0xffffffb8
   2c53c:	ldr	r0, [r9]
   2c540:	str	r0, [sp, #64]	; 0x40
   2c544:	str	r0, [sp, #48]	; 0x30
   2c548:	ldr	r0, [fp, #24]
   2c54c:	ldr	ip, [r8]
   2c550:	cmp	r0, #2
   2c554:	mov	r0, ip
   2c558:	str	ip, [sp, #56]	; 0x38
   2c55c:	blt	2c5fc <GetDataSlab+0xa0e0>
   2c560:	ldr	r7, [sp, #48]	; 0x30
   2c564:	mov	r0, #1
   2c568:	mov	sl, #0
   2c56c:	mov	r1, r9
   2c570:	mov	r2, ip
   2c574:	str	ip, [sp, #56]	; 0x38
   2c578:	mov	r8, r7
   2c57c:	ldr	r6, [fp, #16]
   2c580:	ldr	r6, [r6, r0, lsl #2]
   2c584:	str	r7, [r5, r0, lsl #2]
   2c588:	sub	r4, r6, #1
   2c58c:	mov	r6, #0
   2c590:	str	r4, [lr, r0, lsl #2]
   2c594:	ldr	r2, [r9, r0, lsl #2]
   2c598:	mov	r5, r2
   2c59c:	mul	r7, r5, r7
   2c5a0:	ldr	r5, [r1, -r6, lsl #2]
   2c5a4:	add	r6, r6, #1
   2c5a8:	cmp	r0, r6
   2c5ac:	mul	r4, r4, r5
   2c5b0:	bne	2c59c <GetDataSlab+0xa080>
   2c5b4:	ldr	r6, [fp, #12]
   2c5b8:	add	r5, sp, #64	; 0x40
   2c5bc:	str	r4, [lr, r0, lsl #2]
   2c5c0:	add	r1, r1, #4
   2c5c4:	str	r7, [r5, r0, lsl #2]
   2c5c8:	ldr	r4, [r6, r0, lsl #2]
   2c5cc:	ldr	r6, [fp, #20]
   2c5d0:	mla	sl, r4, r8, sl
   2c5d4:	ldr	r4, [r6, r0, lsl #2]
   2c5d8:	ldr	r6, [sp, #56]	; 0x38
   2c5dc:	add	r0, r0, #1
   2c5e0:	mov	r8, r7
   2c5e4:	mov	r7, r2
   2c5e8:	mul	r6, r4, r6
   2c5ec:	str	r6, [sp, #56]	; 0x38
   2c5f0:	ldr	r6, [fp, #24]
   2c5f4:	cmp	r0, r6
   2c5f8:	bne	2c57c <GetDataSlab+0xa060>
   2c5fc:	ldr	r0, [sp, #52]	; 0x34
   2c600:	cmp	r3, #1
   2c604:	add	r2, r0, sl, lsl #2
   2c608:	bne	377c8 <GetDataSlab+0x152ac>
   2c60c:	ldr	r0, [sp, #56]	; 0x38
   2c610:	ldr	lr, [fp, #12]
   2c614:	cmp	r0, #1
   2c618:	ldr	r0, [fp, #20]
   2c61c:	blt	242a8 <GetDataSlab+0x1d8c>
   2c620:	add	r9, r0, #4
   2c624:	add	r0, sp, #104	; 0x68
   2c628:	mov	r8, #0
   2c62c:	orr	r3, r0, #4
   2c630:	sub	r0, fp, #72	; 0x48
   2c634:	orr	r0, r0, #4
   2c638:	str	r0, [sp, #44]	; 0x2c
   2c63c:	ldr	r0, [lr], #4
   2c640:	str	r0, [sp, #52]	; 0x34
   2c644:	ldr	r1, [sp, #52]	; 0x34
   2c648:	ldr	r0, [sp, #48]	; 0x30
   2c64c:	cmp	ip, #1
   2c650:	add	sl, r1, sl
   2c654:	add	r6, r2, r1, lsl #2
   2c658:	blt	2c6a4 <GetDataSlab+0xa188>
   2c65c:	ldr	r0, [sp, #60]	; 0x3c
   2c660:	ldr	r1, [fp, #20]
   2c664:	mov	r4, r6
   2c668:	add	r5, r0, r8, lsl #2
   2c66c:	mov	r0, #0
   2c670:	vldr	s0, [r4]
   2c674:	add	r4, r4, #4
   2c678:	vcvt.s32.f32	s0, s0
   2c67c:	vmov	r2, s0
   2c680:	str	r2, [r5, r0, lsl #2]
   2c684:	add	r0, r0, #1
   2c688:	ldr	ip, [r1]
   2c68c:	cmp	r0, ip
   2c690:	blt	2c670 <GetDataSlab+0xa154>
   2c694:	ldr	r0, [fp, #12]
   2c698:	ldr	r1, [r0]
   2c69c:	ldr	r0, [fp, #8]
   2c6a0:	ldr	r0, [r0]
   2c6a4:	str	r0, [sp, #48]	; 0x30
   2c6a8:	sub	r0, r0, r1
   2c6ac:	str	r1, [sp, #52]	; 0x34
   2c6b0:	add	r2, r6, r0, lsl #2
   2c6b4:	add	sl, sl, r0
   2c6b8:	ldr	r0, [fp, #24]
   2c6bc:	cmp	r0, #2
   2c6c0:	blt	2c76c <GetDataSlab+0xa250>
   2c6c4:	mov	r5, #0
   2c6c8:	add	r4, sp, #64	; 0x40
   2c6cc:	ldr	r6, [r3, r5, lsl #2]
   2c6d0:	mov	r0, r5
   2c6d4:	add	r6, r6, #1
   2c6d8:	str	r6, [r3, r5, lsl #2]
   2c6dc:	ldr	r5, [r9, r5, lsl #2]
   2c6e0:	sdiv	r1, r6, r5
   2c6e4:	mls	r1, r1, r5, r6
   2c6e8:	cmp	r1, #0
   2c6ec:	bne	2c75c <GetDataSlab+0xa240>
   2c6f0:	mov	r1, #0
   2c6f4:	str	r1, [r3, r0, lsl #2]
   2c6f8:	add	r1, r4, r0, lsl #2
   2c6fc:	ldr	r5, [r1, #4]
   2c700:	sdiv	r1, sl, r5
   2c704:	mls	r6, r1, r5, sl
   2c708:	cmp	r6, #0
   2c70c:	beq	2c728 <GetDataSlab+0xa20c>
   2c710:	ldr	r1, [r4, r0, lsl #2]
   2c714:	ldr	r7, [lr, r0, lsl #2]
   2c718:	sub	r6, r5, r6
   2c71c:	mla	r1, r7, r1, r6
   2c720:	add	sl, r1, sl
   2c724:	b	2c740 <GetDataSlab+0xa224>
   2c728:	ldr	r6, [lr, r0, lsl #2]
   2c72c:	cmp	r6, #0
   2c730:	beq	2c744 <GetDataSlab+0xa228>
   2c734:	ldr	r1, [r4, r0, lsl #2]
   2c738:	mla	sl, r1, r6, sl
   2c73c:	mul	r1, r1, r6
   2c740:	add	r2, r2, r1, lsl #2
   2c744:	ldr	r1, [fp, #24]
   2c748:	add	r5, r0, #1
   2c74c:	add	r0, r0, #2
   2c750:	cmp	r0, r1
   2c754:	blt	2c6cc <GetDataSlab+0xa1b0>
   2c758:	b	2c76c <GetDataSlab+0xa250>
   2c75c:	ldr	r1, [sp, #44]	; 0x2c
   2c760:	ldr	r0, [r1, r0, lsl #2]
   2c764:	add	r2, r2, r0, lsl #2
   2c768:	add	sl, r0, sl
   2c76c:	ldr	r1, [sp, #56]	; 0x38
   2c770:	add	r8, ip, r8
   2c774:	mov	r0, #0
   2c778:	cmp	r8, r1
   2c77c:	blt	2c644 <GetDataSlab+0xa128>
   2c780:	b	242ac <GetDataSlab+0x1d90>
   2c784:	ldr	r3, [sl]
   2c788:	mov	sl, #0
   2c78c:	add	r5, sp, #64	; 0x40
   2c790:	sub	r0, r3, #1
   2c794:	str	r0, [fp, #-72]	; 0xffffffb8
   2c798:	ldr	r0, [r9]
   2c79c:	str	r0, [sp, #64]	; 0x40
   2c7a0:	str	r0, [sp, #48]	; 0x30
   2c7a4:	ldr	r0, [fp, #24]
   2c7a8:	ldr	ip, [r8]
   2c7ac:	cmp	r0, #2
   2c7b0:	mov	r0, ip
   2c7b4:	str	ip, [sp, #56]	; 0x38
   2c7b8:	blt	2c858 <GetDataSlab+0xa33c>
   2c7bc:	ldr	r7, [sp, #48]	; 0x30
   2c7c0:	mov	r0, #1
   2c7c4:	mov	sl, #0
   2c7c8:	mov	r1, r9
   2c7cc:	mov	r2, ip
   2c7d0:	str	ip, [sp, #56]	; 0x38
   2c7d4:	mov	r8, r7
   2c7d8:	ldr	r6, [fp, #16]
   2c7dc:	ldr	r6, [r6, r0, lsl #2]
   2c7e0:	str	r7, [r5, r0, lsl #2]
   2c7e4:	sub	r4, r6, #1
   2c7e8:	mov	r6, #0
   2c7ec:	str	r4, [lr, r0, lsl #2]
   2c7f0:	ldr	r2, [r9, r0, lsl #2]
   2c7f4:	mov	r5, r2
   2c7f8:	mul	r7, r5, r7
   2c7fc:	ldr	r5, [r1, -r6, lsl #2]
   2c800:	add	r6, r6, #1
   2c804:	cmp	r0, r6
   2c808:	mul	r4, r4, r5
   2c80c:	bne	2c7f8 <GetDataSlab+0xa2dc>
   2c810:	ldr	r6, [fp, #12]
   2c814:	add	r5, sp, #64	; 0x40
   2c818:	str	r4, [lr, r0, lsl #2]
   2c81c:	add	r1, r1, #4
   2c820:	str	r7, [r5, r0, lsl #2]
   2c824:	ldr	r4, [r6, r0, lsl #2]
   2c828:	ldr	r6, [fp, #20]
   2c82c:	mla	sl, r4, r8, sl
   2c830:	ldr	r4, [r6, r0, lsl #2]
   2c834:	ldr	r6, [sp, #56]	; 0x38
   2c838:	add	r0, r0, #1
   2c83c:	mov	r8, r7
   2c840:	mov	r7, r2
   2c844:	mul	r6, r4, r6
   2c848:	str	r6, [sp, #56]	; 0x38
   2c84c:	ldr	r6, [fp, #24]
   2c850:	cmp	r0, r6
   2c854:	bne	2c7d8 <GetDataSlab+0xa2bc>
   2c858:	ldr	r0, [sp, #52]	; 0x34
   2c85c:	cmp	r3, #1
   2c860:	add	r2, r0, sl, lsl #3
   2c864:	bne	3796c <GetDataSlab+0x15450>
   2c868:	ldr	r0, [sp, #56]	; 0x38
   2c86c:	ldr	lr, [fp, #12]
   2c870:	cmp	r0, #1
   2c874:	ldr	r0, [fp, #20]
   2c878:	blt	242a8 <GetDataSlab+0x1d8c>
   2c87c:	add	r9, r0, #4
   2c880:	add	r0, sp, #104	; 0x68
   2c884:	mov	r8, #0
   2c888:	orr	r3, r0, #4
   2c88c:	sub	r0, fp, #72	; 0x48
   2c890:	orr	r0, r0, #4
   2c894:	str	r0, [sp, #44]	; 0x2c
   2c898:	ldr	r0, [lr], #4
   2c89c:	str	r0, [sp, #52]	; 0x34
   2c8a0:	ldr	r1, [sp, #52]	; 0x34
   2c8a4:	ldr	r0, [sp, #48]	; 0x30
   2c8a8:	cmp	ip, #1
   2c8ac:	add	sl, r1, sl
   2c8b0:	add	r6, r2, r1, lsl #3
   2c8b4:	blt	2c900 <GetDataSlab+0xa3e4>
   2c8b8:	ldr	r0, [sp, #60]	; 0x3c
   2c8bc:	ldr	r1, [fp, #20]
   2c8c0:	mov	r4, r6
   2c8c4:	add	r5, r0, r8, lsl #2
   2c8c8:	mov	r0, #0
   2c8cc:	vldr	d16, [r4]
   2c8d0:	add	r4, r4, #8
   2c8d4:	vcvt.s32.f64	s0, d16
   2c8d8:	vmov	r2, s0
   2c8dc:	str	r2, [r5, r0, lsl #2]
   2c8e0:	add	r0, r0, #1
   2c8e4:	ldr	ip, [r1]
   2c8e8:	cmp	r0, ip
   2c8ec:	blt	2c8cc <GetDataSlab+0xa3b0>
   2c8f0:	ldr	r0, [fp, #12]
   2c8f4:	ldr	r1, [r0]
   2c8f8:	ldr	r0, [fp, #8]
   2c8fc:	ldr	r0, [r0]
   2c900:	str	r0, [sp, #48]	; 0x30
   2c904:	sub	r0, r0, r1
   2c908:	str	r1, [sp, #52]	; 0x34
   2c90c:	add	r2, r6, r0, lsl #3
   2c910:	add	sl, sl, r0
   2c914:	ldr	r0, [fp, #24]
   2c918:	cmp	r0, #2
   2c91c:	blt	2c9c8 <GetDataSlab+0xa4ac>
   2c920:	mov	r5, #0
   2c924:	add	r4, sp, #64	; 0x40
   2c928:	ldr	r6, [r3, r5, lsl #2]
   2c92c:	mov	r0, r5
   2c930:	add	r6, r6, #1
   2c934:	str	r6, [r3, r5, lsl #2]
   2c938:	ldr	r5, [r9, r5, lsl #2]
   2c93c:	sdiv	r1, r6, r5
   2c940:	mls	r1, r1, r5, r6
   2c944:	cmp	r1, #0
   2c948:	bne	2c9b8 <GetDataSlab+0xa49c>
   2c94c:	mov	r1, #0
   2c950:	str	r1, [r3, r0, lsl #2]
   2c954:	add	r1, r4, r0, lsl #2
   2c958:	ldr	r5, [r1, #4]
   2c95c:	sdiv	r1, sl, r5
   2c960:	mls	r6, r1, r5, sl
   2c964:	cmp	r6, #0
   2c968:	beq	2c984 <GetDataSlab+0xa468>
   2c96c:	ldr	r1, [r4, r0, lsl #2]
   2c970:	ldr	r7, [lr, r0, lsl #2]
   2c974:	sub	r6, r5, r6
   2c978:	mla	r1, r7, r1, r6
   2c97c:	add	sl, r1, sl
   2c980:	b	2c99c <GetDataSlab+0xa480>
   2c984:	ldr	r6, [lr, r0, lsl #2]
   2c988:	cmp	r6, #0
   2c98c:	beq	2c9a0 <GetDataSlab+0xa484>
   2c990:	ldr	r1, [r4, r0, lsl #2]
   2c994:	mla	sl, r1, r6, sl
   2c998:	mul	r1, r1, r6
   2c99c:	add	r2, r2, r1, lsl #3
   2c9a0:	ldr	r1, [fp, #24]
   2c9a4:	add	r5, r0, #1
   2c9a8:	add	r0, r0, #2
   2c9ac:	cmp	r0, r1
   2c9b0:	blt	2c928 <GetDataSlab+0xa40c>
   2c9b4:	b	2c9c8 <GetDataSlab+0xa4ac>
   2c9b8:	ldr	r1, [sp, #44]	; 0x2c
   2c9bc:	ldr	r0, [r1, r0, lsl #2]
   2c9c0:	add	r2, r2, r0, lsl #3
   2c9c4:	add	sl, r0, sl
   2c9c8:	ldr	r1, [sp, #56]	; 0x38
   2c9cc:	add	r8, ip, r8
   2c9d0:	mov	r0, #0
   2c9d4:	cmp	r8, r1
   2c9d8:	blt	2c8a0 <GetDataSlab+0xa384>
   2c9dc:	b	242ac <GetDataSlab+0x1d90>
   2c9e0:	ldr	r5, [sl]
   2c9e4:	add	r6, sp, #64	; 0x40
   2c9e8:	str	r3, [sp, #48]	; 0x30
   2c9ec:	sub	r0, r5, #1
   2c9f0:	str	r0, [fp, #-72]	; 0xffffffb8
   2c9f4:	ldr	r0, [r9]
   2c9f8:	str	r0, [sp, #64]	; 0x40
   2c9fc:	str	r0, [sp, #44]	; 0x2c
   2ca00:	ldr	r0, [fp, #24]
   2ca04:	ldr	r1, [r8]
   2ca08:	mov	r8, #0
   2ca0c:	cmp	r0, #2
   2ca10:	mov	r0, r1
   2ca14:	str	r1, [sp, #56]	; 0x38
   2ca18:	blt	2cac0 <GetDataSlab+0xa5a4>
   2ca1c:	ldr	r7, [sp, #44]	; 0x2c
   2ca20:	mov	sl, lr
   2ca24:	mov	r0, #1
   2ca28:	mov	r8, #0
   2ca2c:	mov	r2, r9
   2ca30:	mov	r3, r1
   2ca34:	str	r1, [sp, #56]	; 0x38
   2ca38:	mov	lr, r7
   2ca3c:	ldr	r3, [fp, #16]
   2ca40:	ldr	r3, [r3, r0, lsl #2]
   2ca44:	str	r7, [r6, r0, lsl #2]
   2ca48:	mov	r6, #0
   2ca4c:	sub	r4, r3, #1
   2ca50:	str	r4, [sl, r0, lsl #2]
   2ca54:	ldr	ip, [r9, r0, lsl #2]
   2ca58:	mov	r3, ip
   2ca5c:	mul	r7, r3, r7
   2ca60:	ldr	r3, [r2, -r6, lsl #2]
   2ca64:	add	r6, r6, #1
   2ca68:	cmp	r0, r6
   2ca6c:	mul	r4, r4, r3
   2ca70:	bne	2ca5c <GetDataSlab+0xa540>
   2ca74:	ldr	r3, [fp, #12]
   2ca78:	add	r6, sp, #64	; 0x40
   2ca7c:	sub	sl, fp, #72	; 0x48
   2ca80:	add	r2, r2, #4
   2ca84:	str	r4, [sl, r0, lsl #2]
   2ca88:	str	r7, [r6, r0, lsl #2]
   2ca8c:	ldr	r4, [sp, #56]	; 0x38
   2ca90:	ldr	r3, [r3, r0, lsl #2]
   2ca94:	mla	r8, r3, lr, r8
   2ca98:	ldr	r3, [fp, #20]
   2ca9c:	mov	lr, r7
   2caa0:	mov	r7, ip
   2caa4:	ldr	r3, [r3, r0, lsl #2]
   2caa8:	add	r0, r0, #1
   2caac:	mul	r4, r3, r4
   2cab0:	ldr	r3, [fp, #24]
   2cab4:	str	r4, [sp, #56]	; 0x38
   2cab8:	cmp	r0, r3
   2cabc:	bne	2ca3c <GetDataSlab+0xa520>
   2cac0:	ldr	r0, [sp, #52]	; 0x34
   2cac4:	cmp	r5, #1
   2cac8:	add	r4, r0, r8, lsl #3
   2cacc:	bne	37b10 <GetDataSlab+0x155f4>
   2cad0:	ldr	r0, [sp, #56]	; 0x38
   2cad4:	ldr	r9, [fp, #12]
   2cad8:	cmp	r0, #1
   2cadc:	blt	37c94 <GetDataSlab+0x15778>
   2cae0:	ldr	r0, [fp, #20]
   2cae4:	ldr	r3, [r9], #4
   2cae8:	mov	sl, #0
   2caec:	add	lr, r0, #4
   2caf0:	add	r0, sp, #104	; 0x68
   2caf4:	orr	r2, r0, #4
   2caf8:	sub	r0, fp, #72	; 0x48
   2cafc:	orr	r0, r0, #4
   2cb00:	str	r0, [sp, #36]	; 0x24
   2cb04:	add	r8, r3, r8
   2cb08:	add	ip, r4, r3, lsl #3
   2cb0c:	cmp	r1, #1
   2cb10:	blt	2cb54 <GetDataSlab+0xa638>
   2cb14:	ldr	r0, [sp, #60]	; 0x3c
   2cb18:	ldr	r5, [fp, #20]
   2cb1c:	mov	r3, #0
   2cb20:	mov	r4, ip
   2cb24:	add	r7, r0, sl, lsl #2
   2cb28:	ldr	r0, [r4], #8
   2cb2c:	str	r0, [r7, r3, lsl #2]
   2cb30:	add	r3, r3, #1
   2cb34:	ldr	r1, [r5]
   2cb38:	cmp	r3, r1
   2cb3c:	blt	2cb28 <GetDataSlab+0xa60c>
   2cb40:	ldr	r0, [fp, #12]
   2cb44:	ldr	r3, [r0]
   2cb48:	ldr	r0, [fp, #8]
   2cb4c:	ldr	r0, [r0]
   2cb50:	str	r0, [sp, #44]	; 0x2c
   2cb54:	ldr	r0, [sp, #44]	; 0x2c
   2cb58:	str	r3, [sp, #40]	; 0x28
   2cb5c:	sub	r0, r0, r3
   2cb60:	add	r4, ip, r0, lsl #3
   2cb64:	add	r8, r8, r0
   2cb68:	ldr	r0, [fp, #24]
   2cb6c:	cmp	r0, #2
   2cb70:	blt	2cc1c <GetDataSlab+0xa700>
   2cb74:	mov	r3, #0
   2cb78:	add	ip, sp, #64	; 0x40
   2cb7c:	ldr	r0, [r2, r3, lsl #2]
   2cb80:	mov	r7, r3
   2cb84:	add	r0, r0, #1
   2cb88:	str	r0, [r2, r3, lsl #2]
   2cb8c:	ldr	r3, [lr, r3, lsl #2]
   2cb90:	sdiv	r6, r0, r3
   2cb94:	mls	r0, r6, r3, r0
   2cb98:	cmp	r0, #0
   2cb9c:	bne	2cc0c <GetDataSlab+0xa6f0>
   2cba0:	mov	r0, #0
   2cba4:	str	r0, [r2, r7, lsl #2]
   2cba8:	add	r0, ip, r7, lsl #2
   2cbac:	ldr	r3, [r0, #4]
   2cbb0:	sdiv	r0, r8, r3
   2cbb4:	mls	r0, r0, r3, r8
   2cbb8:	cmp	r0, #0
   2cbbc:	beq	2cbd8 <GetDataSlab+0xa6bc>
   2cbc0:	ldr	r6, [ip, r7, lsl #2]
   2cbc4:	ldr	r5, [r9, r7, lsl #2]
   2cbc8:	sub	r0, r3, r0
   2cbcc:	mla	r0, r5, r6, r0
   2cbd0:	add	r8, r0, r8
   2cbd4:	b	2cbf0 <GetDataSlab+0xa6d4>
   2cbd8:	ldr	r0, [r9, r7, lsl #2]
   2cbdc:	cmp	r0, #0
   2cbe0:	beq	2cbf4 <GetDataSlab+0xa6d8>
   2cbe4:	ldr	r3, [ip, r7, lsl #2]
   2cbe8:	mla	r8, r3, r0, r8
   2cbec:	mul	r0, r3, r0
   2cbf0:	add	r4, r4, r0, lsl #3
   2cbf4:	add	r3, r7, #1
   2cbf8:	add	r0, r7, #2
   2cbfc:	ldr	r7, [fp, #24]
   2cc00:	cmp	r0, r7
   2cc04:	blt	2cb7c <GetDataSlab+0xa660>
   2cc08:	b	2cc1c <GetDataSlab+0xa700>
   2cc0c:	ldr	r0, [sp, #36]	; 0x24
   2cc10:	ldr	r0, [r0, r7, lsl #2]
   2cc14:	add	r4, r4, r0, lsl #3
   2cc18:	add	r8, r0, r8
   2cc1c:	ldr	r0, [sp, #56]	; 0x38
   2cc20:	ldr	r3, [sp, #40]	; 0x28
   2cc24:	add	sl, r1, sl
   2cc28:	cmp	sl, r0
   2cc2c:	blt	2cb04 <GetDataSlab+0xa5e8>
   2cc30:	b	37c94 <GetDataSlab+0x15778>
   2cc34:	ldr	r3, [sl]
   2cc38:	add	r5, sp, #64	; 0x40
   2cc3c:	sub	r0, r3, #1
   2cc40:	str	r0, [fp, #-72]	; 0xffffffb8
   2cc44:	ldr	r0, [r9]
   2cc48:	mov	r9, lr
   2cc4c:	mov	lr, #0
   2cc50:	str	r0, [sp, #64]	; 0x40
   2cc54:	str	r0, [sp, #48]	; 0x30
   2cc58:	ldr	r0, [fp, #24]
   2cc5c:	ldr	sl, [r8]
   2cc60:	cmp	r0, #2
   2cc64:	mov	r0, sl
   2cc68:	str	sl, [sp, #56]	; 0x38
   2cc6c:	blt	2cd18 <GetDataSlab+0xa7fc>
   2cc70:	ldr	r7, [sp, #48]	; 0x30
   2cc74:	ldr	r1, [fp, #8]
   2cc78:	mov	r0, #1
   2cc7c:	mov	lr, #0
   2cc80:	mov	r2, sl
   2cc84:	str	sl, [sp, #56]	; 0x38
   2cc88:	mov	r8, r7
   2cc8c:	ldr	r6, [fp, #16]
   2cc90:	mov	r2, r9
   2cc94:	ldr	r6, [r6, r0, lsl #2]
   2cc98:	str	r7, [r5, r0, lsl #2]
   2cc9c:	sub	r4, r6, #1
   2cca0:	ldr	r6, [fp, #8]
   2cca4:	str	r4, [r9, r0, lsl #2]
   2cca8:	ldr	ip, [r6, r0, lsl #2]
   2ccac:	mov	r6, #0
   2ccb0:	mov	r5, ip
   2ccb4:	mul	r7, r5, r7
   2ccb8:	ldr	r5, [r1, -r6, lsl #2]
   2ccbc:	add	r6, r6, #1
   2ccc0:	cmp	r0, r6
   2ccc4:	mul	r4, r4, r5
   2ccc8:	bne	2ccb4 <GetDataSlab+0xa798>
   2cccc:	ldr	r6, [fp, #12]
   2ccd0:	add	r5, sp, #64	; 0x40
   2ccd4:	str	r4, [r2, r0, lsl #2]
   2ccd8:	mov	r9, r2
   2ccdc:	ldr	r2, [sp, #56]	; 0x38
   2cce0:	add	r1, r1, #4
   2cce4:	str	r7, [r5, r0, lsl #2]
   2cce8:	ldr	r4, [r6, r0, lsl #2]
   2ccec:	ldr	r6, [fp, #20]
   2ccf0:	mla	lr, r4, r8, lr
   2ccf4:	ldr	r4, [r6, r0, lsl #2]
   2ccf8:	ldr	r6, [fp, #24]
   2ccfc:	add	r0, r0, #1
   2cd00:	mov	r8, r7
   2cd04:	mov	r7, ip
   2cd08:	mul	r2, r4, r2
   2cd0c:	cmp	r0, r6
   2cd10:	str	r2, [sp, #56]	; 0x38
   2cd14:	bne	2cc8c <GetDataSlab+0xa770>
   2cd18:	ldr	r0, [sp, #52]	; 0x34
   2cd1c:	cmp	r3, #1
   2cd20:	add	r2, r0, lr
   2cd24:	bne	37f10 <GetDataSlab+0x159f4>
   2cd28:	ldr	r0, [sp, #56]	; 0x38
   2cd2c:	cmp	r0, #1
   2cd30:	ldr	r0, [fp, #20]
   2cd34:	blt	242a8 <GetDataSlab+0x1d8c>
   2cd38:	ldr	r7, [fp, #12]
   2cd3c:	add	r8, r0, #4
   2cd40:	add	r0, sp, #104	; 0x68
   2cd44:	mov	r9, #0
   2cd48:	orr	r3, r0, #4
   2cd4c:	sub	r0, fp, #72	; 0x48
   2cd50:	orr	r0, r0, #4
   2cd54:	str	r0, [sp, #44]	; 0x2c
   2cd58:	ldr	r0, [r7], #4
   2cd5c:	str	r0, [sp, #52]	; 0x34
   2cd60:	ldr	r6, [sp, #52]	; 0x34
   2cd64:	ldr	r1, [fp, #12]
   2cd68:	ldr	r0, [sp, #48]	; 0x30
   2cd6c:	cmp	sl, #1
   2cd70:	add	ip, r6, lr
   2cd74:	add	r4, r2, r6
   2cd78:	blt	2cdb0 <GetDataSlab+0xa894>
   2cd7c:	ldr	r0, [sp, #60]	; 0x3c
   2cd80:	ldr	r6, [fp, #20]
   2cd84:	add	r5, r0, r9, lsl #2
   2cd88:	mov	r0, #0
   2cd8c:	ldrb	r2, [r4, r0]
   2cd90:	str	r2, [r5, r0, lsl #2]
   2cd94:	add	r0, r0, #1
   2cd98:	ldr	sl, [r6]
   2cd9c:	cmp	r0, sl
   2cda0:	blt	2cd8c <GetDataSlab+0xa870>
   2cda4:	ldr	r0, [fp, #8]
   2cda8:	ldr	r6, [r1]
   2cdac:	ldr	r0, [r0]
   2cdb0:	str	r0, [sp, #48]	; 0x30
   2cdb4:	sub	r0, r0, r6
   2cdb8:	str	r6, [sp, #52]	; 0x34
   2cdbc:	add	r2, r4, r0
   2cdc0:	add	lr, ip, r0
   2cdc4:	ldr	r0, [fp, #24]
   2cdc8:	add	r4, sp, #64	; 0x40
   2cdcc:	cmp	r0, #2
   2cdd0:	blt	2ce78 <GetDataSlab+0xa95c>
   2cdd4:	mov	r5, #0
   2cdd8:	mov	r0, r5
   2cddc:	ldr	r5, [r3, r5, lsl #2]
   2cde0:	add	r5, r5, #1
   2cde4:	str	r5, [r3, r0, lsl #2]
   2cde8:	ldr	r1, [r8, r0, lsl #2]
   2cdec:	sdiv	r6, r5, r1
   2cdf0:	mls	r1, r6, r1, r5
   2cdf4:	cmp	r1, #0
   2cdf8:	bne	2ce68 <GetDataSlab+0xa94c>
   2cdfc:	mov	r1, #0
   2ce00:	str	r1, [r3, r0, lsl #2]
   2ce04:	add	r1, r4, r0, lsl #2
   2ce08:	ldr	r5, [r1, #4]
   2ce0c:	sdiv	r1, lr, r5
   2ce10:	mls	ip, r1, r5, lr
   2ce14:	cmp	ip, #0
   2ce18:	beq	2ce38 <GetDataSlab+0xa91c>
   2ce1c:	ldr	r1, [r4, r0, lsl #2]
   2ce20:	ldr	r6, [r7, r0, lsl #2]
   2ce24:	sub	r5, r5, ip
   2ce28:	mla	r1, r6, r1, r5
   2ce2c:	add	lr, r1, lr
   2ce30:	add	r2, r2, r1
   2ce34:	b	2ce50 <GetDataSlab+0xa934>
   2ce38:	ldr	r5, [r7, r0, lsl #2]
   2ce3c:	add	r4, sp, #64	; 0x40
   2ce40:	cmp	r5, #0
   2ce44:	ldrne	r1, [r4, r0, lsl #2]
   2ce48:	mlane	lr, r1, r5, lr
   2ce4c:	mlane	r2, r1, r5, r2
   2ce50:	ldr	r1, [fp, #24]
   2ce54:	add	r5, r0, #1
   2ce58:	add	r0, r0, #2
   2ce5c:	cmp	r0, r1
   2ce60:	blt	2cdd8 <GetDataSlab+0xa8bc>
   2ce64:	b	2ce78 <GetDataSlab+0xa95c>
   2ce68:	ldr	r1, [sp, #44]	; 0x2c
   2ce6c:	ldr	r0, [r1, r0, lsl #2]
   2ce70:	add	r2, r2, r0
   2ce74:	add	lr, r0, lr
   2ce78:	ldr	r1, [sp, #56]	; 0x38
   2ce7c:	add	r9, sl, r9
   2ce80:	mov	r0, #0
   2ce84:	cmp	r9, r1
   2ce88:	blt	2cd60 <GetDataSlab+0xa844>
   2ce8c:	b	242ac <GetDataSlab+0x1d90>
   2ce90:	ldr	r3, [sl]
   2ce94:	add	r5, sp, #64	; 0x40
   2ce98:	sub	r0, r3, #1
   2ce9c:	str	r0, [fp, #-72]	; 0xffffffb8
   2cea0:	ldr	r0, [r9]
   2cea4:	mov	r9, #0
   2cea8:	str	r0, [sp, #64]	; 0x40
   2ceac:	str	r0, [sp, #48]	; 0x30
   2ceb0:	ldr	r0, [fp, #24]
   2ceb4:	ldr	sl, [r8]
   2ceb8:	cmp	r0, #2
   2cebc:	mov	r0, sl
   2cec0:	str	sl, [sp, #56]	; 0x38
   2cec4:	blt	2cf68 <GetDataSlab+0xaa4c>
   2cec8:	ldr	r7, [sp, #48]	; 0x30
   2cecc:	ldr	r1, [fp, #8]
   2ced0:	mov	r0, #1
   2ced4:	mov	r9, #0
   2ced8:	mov	r2, sl
   2cedc:	str	sl, [sp, #56]	; 0x38
   2cee0:	mov	r8, r7
   2cee4:	ldr	r6, [fp, #16]
   2cee8:	ldr	r2, [fp, #8]
   2ceec:	ldr	r6, [r6, r0, lsl #2]
   2cef0:	str	r7, [r5, r0, lsl #2]
   2cef4:	sub	r4, r6, #1
   2cef8:	mov	r6, #0
   2cefc:	str	r4, [lr, r0, lsl #2]
   2cf00:	ldr	ip, [r2, r0, lsl #2]
   2cf04:	mov	r5, ip
   2cf08:	mul	r7, r5, r7
   2cf0c:	ldr	r5, [r1, -r6, lsl #2]
   2cf10:	add	r6, r6, #1
   2cf14:	cmp	r0, r6
   2cf18:	mul	r4, r4, r5
   2cf1c:	bne	2cf08 <GetDataSlab+0xa9ec>
   2cf20:	ldr	r6, [fp, #12]
   2cf24:	add	r5, sp, #64	; 0x40
   2cf28:	str	r4, [lr, r0, lsl #2]
   2cf2c:	ldr	r2, [sp, #56]	; 0x38
   2cf30:	add	r1, r1, #4
   2cf34:	str	r7, [r5, r0, lsl #2]
   2cf38:	ldr	r4, [r6, r0, lsl #2]
   2cf3c:	ldr	r6, [fp, #20]
   2cf40:	mla	r9, r4, r8, r9
   2cf44:	ldr	r4, [r6, r0, lsl #2]
   2cf48:	ldr	r6, [fp, #24]
   2cf4c:	add	r0, r0, #1
   2cf50:	mov	r8, r7
   2cf54:	mov	r7, ip
   2cf58:	mul	r2, r4, r2
   2cf5c:	cmp	r0, r6
   2cf60:	str	r2, [sp, #56]	; 0x38
   2cf64:	bne	2cee4 <GetDataSlab+0xa9c8>
   2cf68:	ldr	r0, [sp, #52]	; 0x34
   2cf6c:	mov	r2, r9
   2cf70:	cmp	r3, #1
   2cf74:	add	r4, r0, r9, lsl #1
   2cf78:	bne	380a8 <GetDataSlab+0x15b8c>
   2cf7c:	ldr	r0, [sp, #56]	; 0x38
   2cf80:	ldr	lr, [fp, #12]
   2cf84:	cmp	r0, #1
   2cf88:	ldr	r0, [fp, #20]
   2cf8c:	blt	242a8 <GetDataSlab+0x1d8c>
   2cf90:	add	r8, r0, #4
   2cf94:	add	r0, sp, #104	; 0x68
   2cf98:	mov	r9, #0
   2cf9c:	orr	r3, r0, #4
   2cfa0:	sub	r0, fp, #72	; 0x48
   2cfa4:	orr	r0, r0, #4
   2cfa8:	str	r0, [sp, #44]	; 0x2c
   2cfac:	ldr	r0, [lr], #4
   2cfb0:	str	r0, [sp, #52]	; 0x34
   2cfb4:	ldr	r1, [sp, #52]	; 0x34
   2cfb8:	ldr	r0, [sp, #48]	; 0x30
   2cfbc:	cmp	sl, #1
   2cfc0:	add	r2, r1, r2
   2cfc4:	add	ip, r4, r1, lsl #1
   2cfc8:	blt	2d008 <GetDataSlab+0xaaec>
   2cfcc:	ldr	r0, [sp, #60]	; 0x3c
   2cfd0:	ldr	r6, [fp, #20]
   2cfd4:	mov	r4, ip
   2cfd8:	add	r5, r0, r9, lsl #2
   2cfdc:	mov	r0, #0
   2cfe0:	ldrsh	r1, [r4], #2
   2cfe4:	str	r1, [r5, r0, lsl #2]
   2cfe8:	add	r0, r0, #1
   2cfec:	ldr	sl, [r6]
   2cff0:	cmp	r0, sl
   2cff4:	blt	2cfe0 <GetDataSlab+0xaac4>
   2cff8:	ldr	r0, [fp, #12]
   2cffc:	ldr	r1, [r0]
   2d000:	ldr	r0, [fp, #8]
   2d004:	ldr	r0, [r0]
   2d008:	str	r0, [sp, #48]	; 0x30
   2d00c:	sub	r0, r0, r1
   2d010:	str	r1, [sp, #52]	; 0x34
   2d014:	add	r4, ip, r0, lsl #1
   2d018:	add	r2, r2, r0
   2d01c:	ldr	r0, [fp, #24]
   2d020:	cmp	r0, #2
   2d024:	blt	2d0d0 <GetDataSlab+0xabb4>
   2d028:	mov	r5, #0
   2d02c:	add	ip, sp, #64	; 0x40
   2d030:	ldr	r1, [r3, r5, lsl #2]
   2d034:	mov	r0, r5
   2d038:	add	r1, r1, #1
   2d03c:	str	r1, [r3, r5, lsl #2]
   2d040:	ldr	r5, [r8, r5, lsl #2]
   2d044:	sdiv	r6, r1, r5
   2d048:	mls	r1, r6, r5, r1
   2d04c:	cmp	r1, #0
   2d050:	bne	2d0c0 <GetDataSlab+0xaba4>
   2d054:	mov	r1, #0
   2d058:	str	r1, [r3, r0, lsl #2]
   2d05c:	add	r1, ip, r0, lsl #2
   2d060:	ldr	r5, [r1, #4]
   2d064:	sdiv	r1, r2, r5
   2d068:	mls	r1, r1, r5, r2
   2d06c:	cmp	r1, #0
   2d070:	beq	2d08c <GetDataSlab+0xab70>
   2d074:	ldr	r6, [ip, r0, lsl #2]
   2d078:	ldr	r7, [lr, r0, lsl #2]
   2d07c:	sub	r1, r5, r1
   2d080:	mla	r1, r7, r6, r1
   2d084:	add	r2, r1, r2
   2d088:	b	2d0a4 <GetDataSlab+0xab88>
   2d08c:	ldr	r1, [lr, r0, lsl #2]
   2d090:	cmp	r1, #0
   2d094:	beq	2d0a8 <GetDataSlab+0xab8c>
   2d098:	ldr	r7, [ip, r0, lsl #2]
   2d09c:	mla	r2, r7, r1, r2
   2d0a0:	mul	r1, r7, r1
   2d0a4:	add	r4, r4, r1, lsl #1
   2d0a8:	ldr	r1, [fp, #24]
   2d0ac:	add	r5, r0, #1
   2d0b0:	add	r0, r0, #2
   2d0b4:	cmp	r0, r1
   2d0b8:	blt	2d030 <GetDataSlab+0xab14>
   2d0bc:	b	2d0d0 <GetDataSlab+0xabb4>
   2d0c0:	ldr	r1, [sp, #44]	; 0x2c
   2d0c4:	ldr	r0, [r1, r0, lsl #2]
   2d0c8:	add	r4, r4, r0, lsl #1
   2d0cc:	add	r2, r0, r2
   2d0d0:	ldr	r1, [sp, #56]	; 0x38
   2d0d4:	add	r9, sl, r9
   2d0d8:	mov	r0, #0
   2d0dc:	cmp	r9, r1
   2d0e0:	blt	2cfb4 <GetDataSlab+0xaa98>
   2d0e4:	b	242ac <GetDataSlab+0x1d90>
   2d0e8:	ldr	r3, [sl]
   2d0ec:	add	r5, sp, #64	; 0x40
   2d0f0:	sub	r0, r3, #1
   2d0f4:	str	r0, [fp, #-72]	; 0xffffffb8
   2d0f8:	ldr	r0, [r9]
   2d0fc:	mov	r9, #0
   2d100:	str	r0, [sp, #64]	; 0x40
   2d104:	str	r0, [sp, #48]	; 0x30
   2d108:	ldr	r0, [fp, #24]
   2d10c:	ldr	sl, [r8]
   2d110:	cmp	r0, #2
   2d114:	mov	r0, sl
   2d118:	str	sl, [sp, #56]	; 0x38
   2d11c:	blt	2d1c0 <GetDataSlab+0xaca4>
   2d120:	ldr	r7, [sp, #48]	; 0x30
   2d124:	ldr	r1, [fp, #8]
   2d128:	mov	r0, #1
   2d12c:	mov	r9, #0
   2d130:	mov	r2, sl
   2d134:	str	sl, [sp, #56]	; 0x38
   2d138:	mov	r8, r7
   2d13c:	ldr	r6, [fp, #16]
   2d140:	ldr	r2, [fp, #8]
   2d144:	ldr	r6, [r6, r0, lsl #2]
   2d148:	str	r7, [r5, r0, lsl #2]
   2d14c:	sub	r4, r6, #1
   2d150:	mov	r6, #0
   2d154:	str	r4, [lr, r0, lsl #2]
   2d158:	ldr	ip, [r2, r0, lsl #2]
   2d15c:	mov	r5, ip
   2d160:	mul	r7, r5, r7
   2d164:	ldr	r5, [r1, -r6, lsl #2]
   2d168:	add	r6, r6, #1
   2d16c:	cmp	r0, r6
   2d170:	mul	r4, r4, r5
   2d174:	bne	2d160 <GetDataSlab+0xac44>
   2d178:	ldr	r6, [fp, #12]
   2d17c:	add	r5, sp, #64	; 0x40
   2d180:	str	r4, [lr, r0, lsl #2]
   2d184:	ldr	r2, [sp, #56]	; 0x38
   2d188:	add	r1, r1, #4
   2d18c:	str	r7, [r5, r0, lsl #2]
   2d190:	ldr	r4, [r6, r0, lsl #2]
   2d194:	ldr	r6, [fp, #20]
   2d198:	mla	r9, r4, r8, r9
   2d19c:	ldr	r4, [r6, r0, lsl #2]
   2d1a0:	ldr	r6, [fp, #24]
   2d1a4:	add	r0, r0, #1
   2d1a8:	mov	r8, r7
   2d1ac:	mov	r7, ip
   2d1b0:	mul	r2, r4, r2
   2d1b4:	cmp	r0, r6
   2d1b8:	str	r2, [sp, #56]	; 0x38
   2d1bc:	bne	2d13c <GetDataSlab+0xac20>
   2d1c0:	ldr	r0, [sp, #52]	; 0x34
   2d1c4:	mov	r2, r9
   2d1c8:	cmp	r3, #1
   2d1cc:	add	r4, r0, r9, lsl #1
   2d1d0:	bne	38240 <GetDataSlab+0x15d24>
   2d1d4:	ldr	r0, [sp, #56]	; 0x38
   2d1d8:	ldr	lr, [fp, #12]
   2d1dc:	cmp	r0, #1
   2d1e0:	ldr	r0, [fp, #20]
   2d1e4:	blt	242a8 <GetDataSlab+0x1d8c>
   2d1e8:	add	r8, r0, #4
   2d1ec:	add	r0, sp, #104	; 0x68
   2d1f0:	mov	r9, #0
   2d1f4:	orr	r3, r0, #4
   2d1f8:	sub	r0, fp, #72	; 0x48
   2d1fc:	orr	r0, r0, #4
   2d200:	str	r0, [sp, #44]	; 0x2c
   2d204:	ldr	r0, [lr], #4
   2d208:	str	r0, [sp, #52]	; 0x34
   2d20c:	ldr	r1, [sp, #52]	; 0x34
   2d210:	ldr	r0, [sp, #48]	; 0x30
   2d214:	cmp	sl, #1
   2d218:	add	r2, r1, r2
   2d21c:	add	ip, r4, r1, lsl #1
   2d220:	blt	2d260 <GetDataSlab+0xad44>
   2d224:	ldr	r0, [sp, #60]	; 0x3c
   2d228:	ldr	r6, [fp, #20]
   2d22c:	mov	r4, ip
   2d230:	add	r5, r0, r9, lsl #2
   2d234:	mov	r0, #0
   2d238:	ldrh	r1, [r4], #2
   2d23c:	str	r1, [r5, r0, lsl #2]
   2d240:	add	r0, r0, #1
   2d244:	ldr	sl, [r6]
   2d248:	cmp	r0, sl
   2d24c:	blt	2d238 <GetDataSlab+0xad1c>
   2d250:	ldr	r0, [fp, #12]
   2d254:	ldr	r1, [r0]
   2d258:	ldr	r0, [fp, #8]
   2d25c:	ldr	r0, [r0]
   2d260:	str	r0, [sp, #48]	; 0x30
   2d264:	sub	r0, r0, r1
   2d268:	str	r1, [sp, #52]	; 0x34
   2d26c:	add	r4, ip, r0, lsl #1
   2d270:	add	r2, r2, r0
   2d274:	ldr	r0, [fp, #24]
   2d278:	cmp	r0, #2
   2d27c:	blt	2d328 <GetDataSlab+0xae0c>
   2d280:	mov	r5, #0
   2d284:	add	ip, sp, #64	; 0x40
   2d288:	ldr	r1, [r3, r5, lsl #2]
   2d28c:	mov	r0, r5
   2d290:	add	r1, r1, #1
   2d294:	str	r1, [r3, r5, lsl #2]
   2d298:	ldr	r5, [r8, r5, lsl #2]
   2d29c:	sdiv	r6, r1, r5
   2d2a0:	mls	r1, r6, r5, r1
   2d2a4:	cmp	r1, #0
   2d2a8:	bne	2d318 <GetDataSlab+0xadfc>
   2d2ac:	mov	r1, #0
   2d2b0:	str	r1, [r3, r0, lsl #2]
   2d2b4:	add	r1, ip, r0, lsl #2
   2d2b8:	ldr	r5, [r1, #4]
   2d2bc:	sdiv	r1, r2, r5
   2d2c0:	mls	r1, r1, r5, r2
   2d2c4:	cmp	r1, #0
   2d2c8:	beq	2d2e4 <GetDataSlab+0xadc8>
   2d2cc:	ldr	r6, [ip, r0, lsl #2]
   2d2d0:	ldr	r7, [lr, r0, lsl #2]
   2d2d4:	sub	r1, r5, r1
   2d2d8:	mla	r1, r7, r6, r1
   2d2dc:	add	r2, r1, r2
   2d2e0:	b	2d2fc <GetDataSlab+0xade0>
   2d2e4:	ldr	r1, [lr, r0, lsl #2]
   2d2e8:	cmp	r1, #0
   2d2ec:	beq	2d300 <GetDataSlab+0xade4>
   2d2f0:	ldr	r7, [ip, r0, lsl #2]
   2d2f4:	mla	r2, r7, r1, r2
   2d2f8:	mul	r1, r7, r1
   2d2fc:	add	r4, r4, r1, lsl #1
   2d300:	ldr	r1, [fp, #24]
   2d304:	add	r5, r0, #1
   2d308:	add	r0, r0, #2
   2d30c:	cmp	r0, r1
   2d310:	blt	2d288 <GetDataSlab+0xad6c>
   2d314:	b	2d328 <GetDataSlab+0xae0c>
   2d318:	ldr	r1, [sp, #44]	; 0x2c
   2d31c:	ldr	r0, [r1, r0, lsl #2]
   2d320:	add	r4, r4, r0, lsl #1
   2d324:	add	r2, r0, r2
   2d328:	ldr	r1, [sp, #56]	; 0x38
   2d32c:	add	r9, sl, r9
   2d330:	mov	r0, #0
   2d334:	cmp	r9, r1
   2d338:	blt	2d20c <GetDataSlab+0xacf0>
   2d33c:	b	242ac <GetDataSlab+0x1d90>
   2d340:	ldr	r3, [sl]
   2d344:	add	r5, sp, #64	; 0x40
   2d348:	sub	r0, r3, #1
   2d34c:	str	r0, [fp, #-72]	; 0xffffffb8
   2d350:	ldr	r0, [r9]
   2d354:	mov	r9, lr
   2d358:	mov	lr, #0
   2d35c:	str	r0, [sp, #64]	; 0x40
   2d360:	str	r0, [sp, #48]	; 0x30
   2d364:	ldr	r0, [fp, #24]
   2d368:	ldr	sl, [r8]
   2d36c:	cmp	r0, #2
   2d370:	mov	r0, sl
   2d374:	str	sl, [sp, #56]	; 0x38
   2d378:	blt	2d424 <GetDataSlab+0xaf08>
   2d37c:	ldr	r7, [sp, #48]	; 0x30
   2d380:	ldr	r1, [fp, #8]
   2d384:	mov	r0, #1
   2d388:	mov	lr, #0
   2d38c:	mov	r2, sl
   2d390:	str	sl, [sp, #56]	; 0x38
   2d394:	mov	r8, r7
   2d398:	ldr	r6, [fp, #16]
   2d39c:	mov	r2, r9
   2d3a0:	ldr	r6, [r6, r0, lsl #2]
   2d3a4:	str	r7, [r5, r0, lsl #2]
   2d3a8:	sub	r4, r6, #1
   2d3ac:	ldr	r6, [fp, #8]
   2d3b0:	str	r4, [r9, r0, lsl #2]
   2d3b4:	ldr	ip, [r6, r0, lsl #2]
   2d3b8:	mov	r6, #0
   2d3bc:	mov	r5, ip
   2d3c0:	mul	r7, r5, r7
   2d3c4:	ldr	r5, [r1, -r6, lsl #2]
   2d3c8:	add	r6, r6, #1
   2d3cc:	cmp	r0, r6
   2d3d0:	mul	r4, r4, r5
   2d3d4:	bne	2d3c0 <GetDataSlab+0xaea4>
   2d3d8:	ldr	r6, [fp, #12]
   2d3dc:	add	r5, sp, #64	; 0x40
   2d3e0:	str	r4, [r2, r0, lsl #2]
   2d3e4:	mov	r9, r2
   2d3e8:	ldr	r2, [sp, #56]	; 0x38
   2d3ec:	add	r1, r1, #4
   2d3f0:	str	r7, [r5, r0, lsl #2]
   2d3f4:	ldr	r4, [r6, r0, lsl #2]
   2d3f8:	ldr	r6, [fp, #20]
   2d3fc:	mla	lr, r4, r8, lr
   2d400:	ldr	r4, [r6, r0, lsl #2]
   2d404:	ldr	r6, [fp, #24]
   2d408:	add	r0, r0, #1
   2d40c:	mov	r8, r7
   2d410:	mov	r7, ip
   2d414:	mul	r2, r4, r2
   2d418:	cmp	r0, r6
   2d41c:	str	r2, [sp, #56]	; 0x38
   2d420:	bne	2d398 <GetDataSlab+0xae7c>
   2d424:	ldr	r0, [sp, #52]	; 0x34
   2d428:	cmp	r3, #1
   2d42c:	add	r2, r0, lr, lsl #2
   2d430:	bne	383d8 <GetDataSlab+0x15ebc>
   2d434:	ldr	r0, [sp, #56]	; 0x38
   2d438:	cmp	r0, #1
   2d43c:	ldr	r0, [fp, #20]
   2d440:	blt	242a8 <GetDataSlab+0x1d8c>
   2d444:	ldr	r7, [fp, #12]
   2d448:	add	r8, r0, #4
   2d44c:	add	r0, sp, #104	; 0x68
   2d450:	mov	r9, #0
   2d454:	orr	r3, r0, #4
   2d458:	sub	r0, fp, #72	; 0x48
   2d45c:	orr	r0, r0, #4
   2d460:	str	r0, [sp, #44]	; 0x2c
   2d464:	ldr	r0, [r7], #4
   2d468:	str	r0, [sp, #52]	; 0x34
   2d46c:	ldr	r6, [sp, #52]	; 0x34
   2d470:	ldr	r1, [fp, #12]
   2d474:	ldr	r0, [sp, #48]	; 0x30
   2d478:	cmp	sl, #1
   2d47c:	add	ip, r6, lr
   2d480:	add	r4, r2, r6, lsl #2
   2d484:	blt	2d4bc <GetDataSlab+0xafa0>
   2d488:	ldr	r0, [sp, #60]	; 0x3c
   2d48c:	ldr	r6, [fp, #20]
   2d490:	add	r5, r0, r9, lsl #2
   2d494:	mov	r0, #0
   2d498:	ldr	r2, [r4, r0, lsl #2]
   2d49c:	str	r2, [r5, r0, lsl #2]
   2d4a0:	add	r0, r0, #1
   2d4a4:	ldr	sl, [r6]
   2d4a8:	cmp	r0, sl
   2d4ac:	blt	2d498 <GetDataSlab+0xaf7c>
   2d4b0:	ldr	r0, [fp, #8]
   2d4b4:	ldr	r6, [r1]
   2d4b8:	ldr	r0, [r0]
   2d4bc:	str	r0, [sp, #48]	; 0x30
   2d4c0:	sub	r0, r0, r6
   2d4c4:	str	r6, [sp, #52]	; 0x34
   2d4c8:	add	r2, r4, r0, lsl #2
   2d4cc:	add	lr, ip, r0
   2d4d0:	ldr	r0, [fp, #24]
   2d4d4:	add	r4, sp, #64	; 0x40
   2d4d8:	cmp	r0, #2
   2d4dc:	blt	2d588 <GetDataSlab+0xb06c>
   2d4e0:	mov	r5, #0
   2d4e4:	mov	r0, r5
   2d4e8:	ldr	r5, [r3, r5, lsl #2]
   2d4ec:	add	r5, r5, #1
   2d4f0:	str	r5, [r3, r0, lsl #2]
   2d4f4:	ldr	r1, [r8, r0, lsl #2]
   2d4f8:	sdiv	r6, r5, r1
   2d4fc:	mls	r1, r6, r1, r5
   2d500:	cmp	r1, #0
   2d504:	bne	2d578 <GetDataSlab+0xb05c>
   2d508:	mov	r1, #0
   2d50c:	str	r1, [r3, r0, lsl #2]
   2d510:	add	r1, r4, r0, lsl #2
   2d514:	ldr	r5, [r1, #4]
   2d518:	sdiv	r1, lr, r5
   2d51c:	mls	ip, r1, r5, lr
   2d520:	cmp	ip, #0
   2d524:	beq	2d540 <GetDataSlab+0xb024>
   2d528:	ldr	r1, [r4, r0, lsl #2]
   2d52c:	ldr	r6, [r7, r0, lsl #2]
   2d530:	sub	r5, r5, ip
   2d534:	mla	r1, r6, r1, r5
   2d538:	add	lr, r1, lr
   2d53c:	b	2d55c <GetDataSlab+0xb040>
   2d540:	ldr	r5, [r7, r0, lsl #2]
   2d544:	add	r4, sp, #64	; 0x40
   2d548:	cmp	r5, #0
   2d54c:	beq	2d560 <GetDataSlab+0xb044>
   2d550:	ldr	r1, [r4, r0, lsl #2]
   2d554:	mla	lr, r1, r5, lr
   2d558:	mul	r1, r1, r5
   2d55c:	add	r2, r2, r1, lsl #2
   2d560:	ldr	r1, [fp, #24]
   2d564:	add	r5, r0, #1
   2d568:	add	r0, r0, #2
   2d56c:	cmp	r0, r1
   2d570:	blt	2d4e4 <GetDataSlab+0xafc8>
   2d574:	b	2d588 <GetDataSlab+0xb06c>
   2d578:	ldr	r1, [sp, #44]	; 0x2c
   2d57c:	ldr	r0, [r1, r0, lsl #2]
   2d580:	add	r2, r2, r0, lsl #2
   2d584:	add	lr, r0, lr
   2d588:	ldr	r1, [sp, #56]	; 0x38
   2d58c:	add	r9, sl, r9
   2d590:	mov	r0, #0
   2d594:	cmp	r9, r1
   2d598:	blt	2d46c <GetDataSlab+0xaf50>
   2d59c:	b	242ac <GetDataSlab+0x1d90>
   2d5a0:	ldr	r3, [sl]
   2d5a4:	add	r5, sp, #64	; 0x40
   2d5a8:	sub	r0, r3, #1
   2d5ac:	str	r0, [fp, #-72]	; 0xffffffb8
   2d5b0:	ldr	r0, [r9]
   2d5b4:	mov	r9, lr
   2d5b8:	mov	lr, #0
   2d5bc:	str	r0, [sp, #64]	; 0x40
   2d5c0:	str	r0, [sp, #48]	; 0x30
   2d5c4:	ldr	r0, [fp, #24]
   2d5c8:	ldr	sl, [r8]
   2d5cc:	cmp	r0, #2
   2d5d0:	mov	r0, sl
   2d5d4:	str	sl, [sp, #56]	; 0x38
   2d5d8:	blt	2d684 <GetDataSlab+0xb168>
   2d5dc:	ldr	r7, [sp, #48]	; 0x30
   2d5e0:	ldr	r1, [fp, #8]
   2d5e4:	mov	r0, #1
   2d5e8:	mov	lr, #0
   2d5ec:	mov	r2, sl
   2d5f0:	str	sl, [sp, #56]	; 0x38
   2d5f4:	mov	r8, r7
   2d5f8:	ldr	r6, [fp, #16]
   2d5fc:	mov	r2, r9
   2d600:	ldr	r6, [r6, r0, lsl #2]
   2d604:	str	r7, [r5, r0, lsl #2]
   2d608:	sub	r4, r6, #1
   2d60c:	ldr	r6, [fp, #8]
   2d610:	str	r4, [r9, r0, lsl #2]
   2d614:	ldr	ip, [r6, r0, lsl #2]
   2d618:	mov	r6, #0
   2d61c:	mov	r5, ip
   2d620:	mul	r7, r5, r7
   2d624:	ldr	r5, [r1, -r6, lsl #2]
   2d628:	add	r6, r6, #1
   2d62c:	cmp	r0, r6
   2d630:	mul	r4, r4, r5
   2d634:	bne	2d620 <GetDataSlab+0xb104>
   2d638:	ldr	r6, [fp, #12]
   2d63c:	add	r5, sp, #64	; 0x40
   2d640:	str	r4, [r2, r0, lsl #2]
   2d644:	mov	r9, r2
   2d648:	ldr	r2, [sp, #56]	; 0x38
   2d64c:	add	r1, r1, #4
   2d650:	str	r7, [r5, r0, lsl #2]
   2d654:	ldr	r4, [r6, r0, lsl #2]
   2d658:	ldr	r6, [fp, #20]
   2d65c:	mla	lr, r4, r8, lr
   2d660:	ldr	r4, [r6, r0, lsl #2]
   2d664:	ldr	r6, [fp, #24]
   2d668:	add	r0, r0, #1
   2d66c:	mov	r8, r7
   2d670:	mov	r7, ip
   2d674:	mul	r2, r4, r2
   2d678:	cmp	r0, r6
   2d67c:	str	r2, [sp, #56]	; 0x38
   2d680:	bne	2d5f8 <GetDataSlab+0xb0dc>
   2d684:	ldr	r0, [sp, #52]	; 0x34
   2d688:	cmp	r3, #1
   2d68c:	add	r2, r0, lr, lsl #2
   2d690:	bne	38574 <GetDataSlab+0x16058>
   2d694:	ldr	r0, [sp, #56]	; 0x38
   2d698:	cmp	r0, #1
   2d69c:	ldr	r0, [fp, #20]
   2d6a0:	blt	242a8 <GetDataSlab+0x1d8c>
   2d6a4:	ldr	r7, [fp, #12]
   2d6a8:	add	r8, r0, #4
   2d6ac:	add	r0, sp, #104	; 0x68
   2d6b0:	mov	r9, #0
   2d6b4:	orr	r3, r0, #4
   2d6b8:	sub	r0, fp, #72	; 0x48
   2d6bc:	orr	r0, r0, #4
   2d6c0:	str	r0, [sp, #44]	; 0x2c
   2d6c4:	ldr	r0, [r7], #4
   2d6c8:	str	r0, [sp, #52]	; 0x34
   2d6cc:	ldr	r6, [sp, #52]	; 0x34
   2d6d0:	ldr	r1, [fp, #12]
   2d6d4:	ldr	r0, [sp, #48]	; 0x30
   2d6d8:	cmp	sl, #1
   2d6dc:	add	ip, r6, lr
   2d6e0:	add	r4, r2, r6, lsl #2
   2d6e4:	blt	2d71c <GetDataSlab+0xb200>
   2d6e8:	ldr	r0, [sp, #60]	; 0x3c
   2d6ec:	ldr	r6, [fp, #20]
   2d6f0:	add	r5, r0, r9, lsl #2
   2d6f4:	mov	r0, #0
   2d6f8:	ldr	r2, [r4, r0, lsl #2]
   2d6fc:	str	r2, [r5, r0, lsl #2]
   2d700:	add	r0, r0, #1
   2d704:	ldr	sl, [r6]
   2d708:	cmp	r0, sl
   2d70c:	blt	2d6f8 <GetDataSlab+0xb1dc>
   2d710:	ldr	r0, [fp, #8]
   2d714:	ldr	r6, [r1]
   2d718:	ldr	r0, [r0]
   2d71c:	str	r0, [sp, #48]	; 0x30
   2d720:	sub	r0, r0, r6
   2d724:	str	r6, [sp, #52]	; 0x34
   2d728:	add	r2, r4, r0, lsl #2
   2d72c:	add	lr, ip, r0
   2d730:	ldr	r0, [fp, #24]
   2d734:	add	r4, sp, #64	; 0x40
   2d738:	cmp	r0, #2
   2d73c:	blt	2d7e8 <GetDataSlab+0xb2cc>
   2d740:	mov	r5, #0
   2d744:	mov	r0, r5
   2d748:	ldr	r5, [r3, r5, lsl #2]
   2d74c:	add	r5, r5, #1
   2d750:	str	r5, [r3, r0, lsl #2]
   2d754:	ldr	r1, [r8, r0, lsl #2]
   2d758:	sdiv	r6, r5, r1
   2d75c:	mls	r1, r6, r1, r5
   2d760:	cmp	r1, #0
   2d764:	bne	2d7d8 <GetDataSlab+0xb2bc>
   2d768:	mov	r1, #0
   2d76c:	str	r1, [r3, r0, lsl #2]
   2d770:	add	r1, r4, r0, lsl #2
   2d774:	ldr	r5, [r1, #4]
   2d778:	sdiv	r1, lr, r5
   2d77c:	mls	ip, r1, r5, lr
   2d780:	cmp	ip, #0
   2d784:	beq	2d7a0 <GetDataSlab+0xb284>
   2d788:	ldr	r1, [r4, r0, lsl #2]
   2d78c:	ldr	r6, [r7, r0, lsl #2]
   2d790:	sub	r5, r5, ip
   2d794:	mla	r1, r6, r1, r5
   2d798:	add	lr, r1, lr
   2d79c:	b	2d7bc <GetDataSlab+0xb2a0>
   2d7a0:	ldr	r5, [r7, r0, lsl #2]
   2d7a4:	add	r4, sp, #64	; 0x40
   2d7a8:	cmp	r5, #0
   2d7ac:	beq	2d7c0 <GetDataSlab+0xb2a4>
   2d7b0:	ldr	r1, [r4, r0, lsl #2]
   2d7b4:	mla	lr, r1, r5, lr
   2d7b8:	mul	r1, r1, r5
   2d7bc:	add	r2, r2, r1, lsl #2
   2d7c0:	ldr	r1, [fp, #24]
   2d7c4:	add	r5, r0, #1
   2d7c8:	add	r0, r0, #2
   2d7cc:	cmp	r0, r1
   2d7d0:	blt	2d744 <GetDataSlab+0xb228>
   2d7d4:	b	2d7e8 <GetDataSlab+0xb2cc>
   2d7d8:	ldr	r1, [sp, #44]	; 0x2c
   2d7dc:	ldr	r0, [r1, r0, lsl #2]
   2d7e0:	add	r2, r2, r0, lsl #2
   2d7e4:	add	lr, r0, lr
   2d7e8:	ldr	r1, [sp, #56]	; 0x38
   2d7ec:	add	r9, sl, r9
   2d7f0:	mov	r0, #0
   2d7f4:	cmp	r9, r1
   2d7f8:	blt	2d6cc <GetDataSlab+0xb1b0>
   2d7fc:	b	242ac <GetDataSlab+0x1d90>
   2d800:	ldr	r3, [sl]
   2d804:	mov	sl, #0
   2d808:	add	r5, sp, #64	; 0x40
   2d80c:	sub	r0, r3, #1
   2d810:	str	r0, [fp, #-72]	; 0xffffffb8
   2d814:	ldr	r0, [r9]
   2d818:	str	r0, [sp, #64]	; 0x40
   2d81c:	str	r0, [sp, #48]	; 0x30
   2d820:	ldr	r0, [fp, #24]
   2d824:	ldr	ip, [r8]
   2d828:	cmp	r0, #2
   2d82c:	mov	r0, ip
   2d830:	str	ip, [sp, #56]	; 0x38
   2d834:	blt	2d8d4 <GetDataSlab+0xb3b8>
   2d838:	ldr	r7, [sp, #48]	; 0x30
   2d83c:	mov	r0, #1
   2d840:	mov	sl, #0
   2d844:	mov	r1, r9
   2d848:	mov	r2, ip
   2d84c:	str	ip, [sp, #56]	; 0x38
   2d850:	mov	r8, r7
   2d854:	ldr	r6, [fp, #16]
   2d858:	ldr	r6, [r6, r0, lsl #2]
   2d85c:	str	r7, [r5, r0, lsl #2]
   2d860:	sub	r4, r6, #1
   2d864:	mov	r6, #0
   2d868:	str	r4, [lr, r0, lsl #2]
   2d86c:	ldr	r2, [r9, r0, lsl #2]
   2d870:	mov	r5, r2
   2d874:	mul	r7, r5, r7
   2d878:	ldr	r5, [r1, -r6, lsl #2]
   2d87c:	add	r6, r6, #1
   2d880:	cmp	r0, r6
   2d884:	mul	r4, r4, r5
   2d888:	bne	2d874 <GetDataSlab+0xb358>
   2d88c:	ldr	r6, [fp, #12]
   2d890:	add	r5, sp, #64	; 0x40
   2d894:	str	r4, [lr, r0, lsl #2]
   2d898:	add	r1, r1, #4
   2d89c:	str	r7, [r5, r0, lsl #2]
   2d8a0:	ldr	r4, [r6, r0, lsl #2]
   2d8a4:	ldr	r6, [fp, #20]
   2d8a8:	mla	sl, r4, r8, sl
   2d8ac:	ldr	r4, [r6, r0, lsl #2]
   2d8b0:	ldr	r6, [sp, #56]	; 0x38
   2d8b4:	add	r0, r0, #1
   2d8b8:	mov	r8, r7
   2d8bc:	mov	r7, r2
   2d8c0:	mul	r6, r4, r6
   2d8c4:	str	r6, [sp, #56]	; 0x38
   2d8c8:	ldr	r6, [fp, #24]
   2d8cc:	cmp	r0, r6
   2d8d0:	bne	2d854 <GetDataSlab+0xb338>
   2d8d4:	ldr	r0, [sp, #52]	; 0x34
   2d8d8:	cmp	r3, #1
   2d8dc:	add	r2, r0, sl, lsl #2
   2d8e0:	bne	38710 <GetDataSlab+0x161f4>
   2d8e4:	ldr	r0, [sp, #56]	; 0x38
   2d8e8:	ldr	lr, [fp, #12]
   2d8ec:	cmp	r0, #1
   2d8f0:	ldr	r0, [fp, #20]
   2d8f4:	blt	242a8 <GetDataSlab+0x1d8c>
   2d8f8:	add	r9, r0, #4
   2d8fc:	add	r0, sp, #104	; 0x68
   2d900:	mov	r8, #0
   2d904:	orr	r3, r0, #4
   2d908:	sub	r0, fp, #72	; 0x48
   2d90c:	orr	r0, r0, #4
   2d910:	str	r0, [sp, #44]	; 0x2c
   2d914:	ldr	r0, [lr], #4
   2d918:	str	r0, [sp, #52]	; 0x34
   2d91c:	ldr	r1, [sp, #52]	; 0x34
   2d920:	ldr	r0, [sp, #48]	; 0x30
   2d924:	cmp	ip, #1
   2d928:	add	sl, r1, sl
   2d92c:	add	r6, r2, r1, lsl #2
   2d930:	blt	2d97c <GetDataSlab+0xb460>
   2d934:	ldr	r0, [sp, #60]	; 0x3c
   2d938:	ldr	r1, [fp, #20]
   2d93c:	mov	r4, r6
   2d940:	add	r5, r0, r8, lsl #2
   2d944:	mov	r0, #0
   2d948:	vldr	s0, [r4]
   2d94c:	add	r4, r4, #4
   2d950:	vcvt.u32.f32	s0, s0
   2d954:	vmov	r2, s0
   2d958:	str	r2, [r5, r0, lsl #2]
   2d95c:	add	r0, r0, #1
   2d960:	ldr	ip, [r1]
   2d964:	cmp	r0, ip
   2d968:	blt	2d948 <GetDataSlab+0xb42c>
   2d96c:	ldr	r0, [fp, #12]
   2d970:	ldr	r1, [r0]
   2d974:	ldr	r0, [fp, #8]
   2d978:	ldr	r0, [r0]
   2d97c:	str	r0, [sp, #48]	; 0x30
   2d980:	sub	r0, r0, r1
   2d984:	str	r1, [sp, #52]	; 0x34
   2d988:	add	r2, r6, r0, lsl #2
   2d98c:	add	sl, sl, r0
   2d990:	ldr	r0, [fp, #24]
   2d994:	cmp	r0, #2
   2d998:	blt	2da44 <GetDataSlab+0xb528>
   2d99c:	mov	r5, #0
   2d9a0:	add	r4, sp, #64	; 0x40
   2d9a4:	ldr	r6, [r3, r5, lsl #2]
   2d9a8:	mov	r0, r5
   2d9ac:	add	r6, r6, #1
   2d9b0:	str	r6, [r3, r5, lsl #2]
   2d9b4:	ldr	r5, [r9, r5, lsl #2]
   2d9b8:	sdiv	r1, r6, r5
   2d9bc:	mls	r1, r1, r5, r6
   2d9c0:	cmp	r1, #0
   2d9c4:	bne	2da34 <GetDataSlab+0xb518>
   2d9c8:	mov	r1, #0
   2d9cc:	str	r1, [r3, r0, lsl #2]
   2d9d0:	add	r1, r4, r0, lsl #2
   2d9d4:	ldr	r5, [r1, #4]
   2d9d8:	sdiv	r1, sl, r5
   2d9dc:	mls	r6, r1, r5, sl
   2d9e0:	cmp	r6, #0
   2d9e4:	beq	2da00 <GetDataSlab+0xb4e4>
   2d9e8:	ldr	r1, [r4, r0, lsl #2]
   2d9ec:	ldr	r7, [lr, r0, lsl #2]
   2d9f0:	sub	r6, r5, r6
   2d9f4:	mla	r1, r7, r1, r6
   2d9f8:	add	sl, r1, sl
   2d9fc:	b	2da18 <GetDataSlab+0xb4fc>
   2da00:	ldr	r6, [lr, r0, lsl #2]
   2da04:	cmp	r6, #0
   2da08:	beq	2da1c <GetDataSlab+0xb500>
   2da0c:	ldr	r1, [r4, r0, lsl #2]
   2da10:	mla	sl, r1, r6, sl
   2da14:	mul	r1, r1, r6
   2da18:	add	r2, r2, r1, lsl #2
   2da1c:	ldr	r1, [fp, #24]
   2da20:	add	r5, r0, #1
   2da24:	add	r0, r0, #2
   2da28:	cmp	r0, r1
   2da2c:	blt	2d9a4 <GetDataSlab+0xb488>
   2da30:	b	2da44 <GetDataSlab+0xb528>
   2da34:	ldr	r1, [sp, #44]	; 0x2c
   2da38:	ldr	r0, [r1, r0, lsl #2]
   2da3c:	add	r2, r2, r0, lsl #2
   2da40:	add	sl, r0, sl
   2da44:	ldr	r1, [sp, #56]	; 0x38
   2da48:	add	r8, ip, r8
   2da4c:	mov	r0, #0
   2da50:	cmp	r8, r1
   2da54:	blt	2d91c <GetDataSlab+0xb400>
   2da58:	b	242ac <GetDataSlab+0x1d90>
   2da5c:	ldr	r3, [sl]
   2da60:	mov	sl, #0
   2da64:	add	r5, sp, #64	; 0x40
   2da68:	sub	r0, r3, #1
   2da6c:	str	r0, [fp, #-72]	; 0xffffffb8
   2da70:	ldr	r0, [r9]
   2da74:	str	r0, [sp, #64]	; 0x40
   2da78:	str	r0, [sp, #48]	; 0x30
   2da7c:	ldr	r0, [fp, #24]
   2da80:	ldr	ip, [r8]
   2da84:	cmp	r0, #2
   2da88:	mov	r0, ip
   2da8c:	str	ip, [sp, #56]	; 0x38
   2da90:	blt	2db30 <GetDataSlab+0xb614>
   2da94:	ldr	r7, [sp, #48]	; 0x30
   2da98:	mov	r0, #1
   2da9c:	mov	sl, #0
   2daa0:	mov	r1, r9
   2daa4:	mov	r2, ip
   2daa8:	str	ip, [sp, #56]	; 0x38
   2daac:	mov	r8, r7
   2dab0:	ldr	r6, [fp, #16]
   2dab4:	ldr	r6, [r6, r0, lsl #2]
   2dab8:	str	r7, [r5, r0, lsl #2]
   2dabc:	sub	r4, r6, #1
   2dac0:	mov	r6, #0
   2dac4:	str	r4, [lr, r0, lsl #2]
   2dac8:	ldr	r2, [r9, r0, lsl #2]
   2dacc:	mov	r5, r2
   2dad0:	mul	r7, r5, r7
   2dad4:	ldr	r5, [r1, -r6, lsl #2]
   2dad8:	add	r6, r6, #1
   2dadc:	cmp	r0, r6
   2dae0:	mul	r4, r4, r5
   2dae4:	bne	2dad0 <GetDataSlab+0xb5b4>
   2dae8:	ldr	r6, [fp, #12]
   2daec:	add	r5, sp, #64	; 0x40
   2daf0:	str	r4, [lr, r0, lsl #2]
   2daf4:	add	r1, r1, #4
   2daf8:	str	r7, [r5, r0, lsl #2]
   2dafc:	ldr	r4, [r6, r0, lsl #2]
   2db00:	ldr	r6, [fp, #20]
   2db04:	mla	sl, r4, r8, sl
   2db08:	ldr	r4, [r6, r0, lsl #2]
   2db0c:	ldr	r6, [sp, #56]	; 0x38
   2db10:	add	r0, r0, #1
   2db14:	mov	r8, r7
   2db18:	mov	r7, r2
   2db1c:	mul	r6, r4, r6
   2db20:	str	r6, [sp, #56]	; 0x38
   2db24:	ldr	r6, [fp, #24]
   2db28:	cmp	r0, r6
   2db2c:	bne	2dab0 <GetDataSlab+0xb594>
   2db30:	ldr	r0, [sp, #52]	; 0x34
   2db34:	cmp	r3, #1
   2db38:	add	r2, r0, sl, lsl #3
   2db3c:	bne	388b4 <GetDataSlab+0x16398>
   2db40:	ldr	r0, [sp, #56]	; 0x38
   2db44:	ldr	lr, [fp, #12]
   2db48:	cmp	r0, #1
   2db4c:	ldr	r0, [fp, #20]
   2db50:	blt	242a8 <GetDataSlab+0x1d8c>
   2db54:	add	r9, r0, #4
   2db58:	add	r0, sp, #104	; 0x68
   2db5c:	mov	r8, #0
   2db60:	orr	r3, r0, #4
   2db64:	sub	r0, fp, #72	; 0x48
   2db68:	orr	r0, r0, #4
   2db6c:	str	r0, [sp, #44]	; 0x2c
   2db70:	ldr	r0, [lr], #4
   2db74:	str	r0, [sp, #52]	; 0x34
   2db78:	ldr	r1, [sp, #52]	; 0x34
   2db7c:	ldr	r0, [sp, #48]	; 0x30
   2db80:	cmp	ip, #1
   2db84:	add	sl, r1, sl
   2db88:	add	r6, r2, r1, lsl #3
   2db8c:	blt	2dbd8 <GetDataSlab+0xb6bc>
   2db90:	ldr	r0, [sp, #60]	; 0x3c
   2db94:	ldr	r1, [fp, #20]
   2db98:	mov	r4, r6
   2db9c:	add	r5, r0, r8, lsl #2
   2dba0:	mov	r0, #0
   2dba4:	vldr	d16, [r4]
   2dba8:	add	r4, r4, #8
   2dbac:	vcvt.u32.f64	s0, d16
   2dbb0:	vmov	r2, s0
   2dbb4:	str	r2, [r5, r0, lsl #2]
   2dbb8:	add	r0, r0, #1
   2dbbc:	ldr	ip, [r1]
   2dbc0:	cmp	r0, ip
   2dbc4:	blt	2dba4 <GetDataSlab+0xb688>
   2dbc8:	ldr	r0, [fp, #12]
   2dbcc:	ldr	r1, [r0]
   2dbd0:	ldr	r0, [fp, #8]
   2dbd4:	ldr	r0, [r0]
   2dbd8:	str	r0, [sp, #48]	; 0x30
   2dbdc:	sub	r0, r0, r1
   2dbe0:	str	r1, [sp, #52]	; 0x34
   2dbe4:	add	r2, r6, r0, lsl #3
   2dbe8:	add	sl, sl, r0
   2dbec:	ldr	r0, [fp, #24]
   2dbf0:	cmp	r0, #2
   2dbf4:	blt	2dca0 <GetDataSlab+0xb784>
   2dbf8:	mov	r5, #0
   2dbfc:	add	r4, sp, #64	; 0x40
   2dc00:	ldr	r6, [r3, r5, lsl #2]
   2dc04:	mov	r0, r5
   2dc08:	add	r6, r6, #1
   2dc0c:	str	r6, [r3, r5, lsl #2]
   2dc10:	ldr	r5, [r9, r5, lsl #2]
   2dc14:	sdiv	r1, r6, r5
   2dc18:	mls	r1, r1, r5, r6
   2dc1c:	cmp	r1, #0
   2dc20:	bne	2dc90 <GetDataSlab+0xb774>
   2dc24:	mov	r1, #0
   2dc28:	str	r1, [r3, r0, lsl #2]
   2dc2c:	add	r1, r4, r0, lsl #2
   2dc30:	ldr	r5, [r1, #4]
   2dc34:	sdiv	r1, sl, r5
   2dc38:	mls	r6, r1, r5, sl
   2dc3c:	cmp	r6, #0
   2dc40:	beq	2dc5c <GetDataSlab+0xb740>
   2dc44:	ldr	r1, [r4, r0, lsl #2]
   2dc48:	ldr	r7, [lr, r0, lsl #2]
   2dc4c:	sub	r6, r5, r6
   2dc50:	mla	r1, r7, r1, r6
   2dc54:	add	sl, r1, sl
   2dc58:	b	2dc74 <GetDataSlab+0xb758>
   2dc5c:	ldr	r6, [lr, r0, lsl #2]
   2dc60:	cmp	r6, #0
   2dc64:	beq	2dc78 <GetDataSlab+0xb75c>
   2dc68:	ldr	r1, [r4, r0, lsl #2]
   2dc6c:	mla	sl, r1, r6, sl
   2dc70:	mul	r1, r1, r6
   2dc74:	add	r2, r2, r1, lsl #3
   2dc78:	ldr	r1, [fp, #24]
   2dc7c:	add	r5, r0, #1
   2dc80:	add	r0, r0, #2
   2dc84:	cmp	r0, r1
   2dc88:	blt	2dc00 <GetDataSlab+0xb6e4>
   2dc8c:	b	2dca0 <GetDataSlab+0xb784>
   2dc90:	ldr	r1, [sp, #44]	; 0x2c
   2dc94:	ldr	r0, [r1, r0, lsl #2]
   2dc98:	add	r2, r2, r0, lsl #3
   2dc9c:	add	sl, r0, sl
   2dca0:	ldr	r1, [sp, #56]	; 0x38
   2dca4:	add	r8, ip, r8
   2dca8:	mov	r0, #0
   2dcac:	cmp	r8, r1
   2dcb0:	blt	2db78 <GetDataSlab+0xb65c>
   2dcb4:	b	242ac <GetDataSlab+0x1d90>
   2dcb8:	ldr	r5, [sl]
   2dcbc:	add	r6, sp, #64	; 0x40
   2dcc0:	str	r3, [sp, #48]	; 0x30
   2dcc4:	sub	r0, r5, #1
   2dcc8:	str	r0, [fp, #-72]	; 0xffffffb8
   2dccc:	ldr	r0, [r9]
   2dcd0:	str	r0, [sp, #64]	; 0x40
   2dcd4:	str	r0, [sp, #44]	; 0x2c
   2dcd8:	ldr	r0, [fp, #24]
   2dcdc:	ldr	r1, [r8]
   2dce0:	mov	r8, #0
   2dce4:	cmp	r0, #2
   2dce8:	mov	r0, r1
   2dcec:	str	r1, [sp, #56]	; 0x38
   2dcf0:	blt	2dd98 <GetDataSlab+0xb87c>
   2dcf4:	ldr	r7, [sp, #44]	; 0x2c
   2dcf8:	mov	sl, lr
   2dcfc:	mov	r0, #1
   2dd00:	mov	r8, #0
   2dd04:	mov	r2, r9
   2dd08:	mov	r3, r1
   2dd0c:	str	r1, [sp, #56]	; 0x38
   2dd10:	mov	lr, r7
   2dd14:	ldr	r3, [fp, #16]
   2dd18:	ldr	r3, [r3, r0, lsl #2]
   2dd1c:	str	r7, [r6, r0, lsl #2]
   2dd20:	mov	r6, #0
   2dd24:	sub	r4, r3, #1
   2dd28:	str	r4, [sl, r0, lsl #2]
   2dd2c:	ldr	ip, [r9, r0, lsl #2]
   2dd30:	mov	r3, ip
   2dd34:	mul	r7, r3, r7
   2dd38:	ldr	r3, [r2, -r6, lsl #2]
   2dd3c:	add	r6, r6, #1
   2dd40:	cmp	r0, r6
   2dd44:	mul	r4, r4, r3
   2dd48:	bne	2dd34 <GetDataSlab+0xb818>
   2dd4c:	ldr	r3, [fp, #12]
   2dd50:	add	r6, sp, #64	; 0x40
   2dd54:	sub	sl, fp, #72	; 0x48
   2dd58:	add	r2, r2, #4
   2dd5c:	str	r4, [sl, r0, lsl #2]
   2dd60:	str	r7, [r6, r0, lsl #2]
   2dd64:	ldr	r4, [sp, #56]	; 0x38
   2dd68:	ldr	r3, [r3, r0, lsl #2]
   2dd6c:	mla	r8, r3, lr, r8
   2dd70:	ldr	r3, [fp, #20]
   2dd74:	mov	lr, r7
   2dd78:	mov	r7, ip
   2dd7c:	ldr	r3, [r3, r0, lsl #2]
   2dd80:	add	r0, r0, #1
   2dd84:	mul	r4, r3, r4
   2dd88:	ldr	r3, [fp, #24]
   2dd8c:	str	r4, [sp, #56]	; 0x38
   2dd90:	cmp	r0, r3
   2dd94:	bne	2dd14 <GetDataSlab+0xb7f8>
   2dd98:	ldr	r0, [sp, #52]	; 0x34
   2dd9c:	cmp	r5, #1
   2dda0:	add	r4, r0, r8, lsl #3
   2dda4:	bne	38a58 <GetDataSlab+0x1653c>
   2dda8:	ldr	r0, [sp, #56]	; 0x38
   2ddac:	ldr	r9, [fp, #12]
   2ddb0:	cmp	r0, #1
   2ddb4:	blt	38bdc <GetDataSlab+0x166c0>
   2ddb8:	ldr	r0, [fp, #20]
   2ddbc:	ldr	r3, [r9], #4
   2ddc0:	mov	sl, #0
   2ddc4:	add	lr, r0, #4
   2ddc8:	add	r0, sp, #104	; 0x68
   2ddcc:	orr	r2, r0, #4
   2ddd0:	sub	r0, fp, #72	; 0x48
   2ddd4:	orr	r0, r0, #4
   2ddd8:	str	r0, [sp, #36]	; 0x24
   2dddc:	add	r8, r3, r8
   2dde0:	add	ip, r4, r3, lsl #3
   2dde4:	cmp	r1, #1
   2dde8:	blt	2de2c <GetDataSlab+0xb910>
   2ddec:	ldr	r0, [sp, #60]	; 0x3c
   2ddf0:	ldr	r5, [fp, #20]
   2ddf4:	mov	r3, #0
   2ddf8:	mov	r4, ip
   2ddfc:	add	r7, r0, sl, lsl #2
   2de00:	ldr	r0, [r4], #8
   2de04:	str	r0, [r7, r3, lsl #2]
   2de08:	add	r3, r3, #1
   2de0c:	ldr	r1, [r5]
   2de10:	cmp	r3, r1
   2de14:	blt	2de00 <GetDataSlab+0xb8e4>
   2de18:	ldr	r0, [fp, #12]
   2de1c:	ldr	r3, [r0]
   2de20:	ldr	r0, [fp, #8]
   2de24:	ldr	r0, [r0]
   2de28:	str	r0, [sp, #44]	; 0x2c
   2de2c:	ldr	r0, [sp, #44]	; 0x2c
   2de30:	str	r3, [sp, #40]	; 0x28
   2de34:	sub	r0, r0, r3
   2de38:	add	r4, ip, r0, lsl #3
   2de3c:	add	r8, r8, r0
   2de40:	ldr	r0, [fp, #24]
   2de44:	cmp	r0, #2
   2de48:	blt	2def4 <GetDataSlab+0xb9d8>
   2de4c:	mov	r3, #0
   2de50:	add	ip, sp, #64	; 0x40
   2de54:	ldr	r0, [r2, r3, lsl #2]
   2de58:	mov	r7, r3
   2de5c:	add	r0, r0, #1
   2de60:	str	r0, [r2, r3, lsl #2]
   2de64:	ldr	r3, [lr, r3, lsl #2]
   2de68:	sdiv	r6, r0, r3
   2de6c:	mls	r0, r6, r3, r0
   2de70:	cmp	r0, #0
   2de74:	bne	2dee4 <GetDataSlab+0xb9c8>
   2de78:	mov	r0, #0
   2de7c:	str	r0, [r2, r7, lsl #2]
   2de80:	add	r0, ip, r7, lsl #2
   2de84:	ldr	r3, [r0, #4]
   2de88:	sdiv	r0, r8, r3
   2de8c:	mls	r0, r0, r3, r8
   2de90:	cmp	r0, #0
   2de94:	beq	2deb0 <GetDataSlab+0xb994>
   2de98:	ldr	r6, [ip, r7, lsl #2]
   2de9c:	ldr	r5, [r9, r7, lsl #2]
   2dea0:	sub	r0, r3, r0
   2dea4:	mla	r0, r5, r6, r0
   2dea8:	add	r8, r0, r8
   2deac:	b	2dec8 <GetDataSlab+0xb9ac>
   2deb0:	ldr	r0, [r9, r7, lsl #2]
   2deb4:	cmp	r0, #0
   2deb8:	beq	2decc <GetDataSlab+0xb9b0>
   2debc:	ldr	r3, [ip, r7, lsl #2]
   2dec0:	mla	r8, r3, r0, r8
   2dec4:	mul	r0, r3, r0
   2dec8:	add	r4, r4, r0, lsl #3
   2decc:	add	r3, r7, #1
   2ded0:	add	r0, r7, #2
   2ded4:	ldr	r7, [fp, #24]
   2ded8:	cmp	r0, r7
   2dedc:	blt	2de54 <GetDataSlab+0xb938>
   2dee0:	b	2def4 <GetDataSlab+0xb9d8>
   2dee4:	ldr	r0, [sp, #36]	; 0x24
   2dee8:	ldr	r0, [r0, r7, lsl #2]
   2deec:	add	r4, r4, r0, lsl #3
   2def0:	add	r8, r0, r8
   2def4:	ldr	r0, [sp, #56]	; 0x38
   2def8:	ldr	r3, [sp, #40]	; 0x28
   2defc:	add	sl, r1, sl
   2df00:	cmp	sl, r0
   2df04:	blt	2dddc <GetDataSlab+0xb8c0>
   2df08:	b	38bdc <GetDataSlab+0x166c0>
   2df0c:	mov	r1, r8
   2df10:	ldr	r8, [sl]
   2df14:	mov	r3, #0
   2df18:	add	r4, sp, #64	; 0x40
   2df1c:	sub	lr, fp, #72	; 0x48
   2df20:	sub	r0, r8, #1
   2df24:	str	r0, [fp, #-72]	; 0xffffffb8
   2df28:	ldr	r0, [r9]
   2df2c:	str	r0, [sp, #64]	; 0x40
   2df30:	str	r0, [sp, #44]	; 0x2c
   2df34:	ldr	r0, [fp, #24]
   2df38:	ldr	r1, [r1]
   2df3c:	cmp	r0, #2
   2df40:	str	r1, [sp, #48]	; 0x30
   2df44:	str	r1, [sp, #56]	; 0x38
   2df48:	blt	2dfe4 <GetDataSlab+0xbac8>
   2df4c:	ldr	r2, [sp, #44]	; 0x2c
   2df50:	ldr	r5, [sp, #48]	; 0x30
   2df54:	mov	r0, #1
   2df58:	mov	r3, #0
   2df5c:	mov	r1, r9
   2df60:	mov	r7, r2
   2df64:	str	r5, [sp, #56]	; 0x38
   2df68:	ldr	r6, [sl, r0, lsl #2]
   2df6c:	str	r2, [r4, r0, lsl #2]
   2df70:	mov	r4, #0
   2df74:	sub	r5, r6, #1
   2df78:	str	r5, [lr, r0, lsl #2]
   2df7c:	ldr	sl, [r9, r0, lsl #2]
   2df80:	mov	r6, sl
   2df84:	mul	r2, r6, r2
   2df88:	ldr	r6, [r1, -r4, lsl #2]
   2df8c:	add	r4, r4, #1
   2df90:	cmp	r0, r4
   2df94:	mul	r5, r5, r6
   2df98:	bne	2df84 <GetDataSlab+0xba68>
   2df9c:	add	r4, sp, #64	; 0x40
   2dfa0:	str	r5, [lr, r0, lsl #2]
   2dfa4:	ldr	r5, [sp, #56]	; 0x38
   2dfa8:	add	r1, r1, #4
   2dfac:	str	r2, [r4, r0, lsl #2]
   2dfb0:	ldr	r6, [ip, r0, lsl #2]
   2dfb4:	mla	r3, r6, r7, r3
   2dfb8:	ldr	r7, [fp, #20]
   2dfbc:	ldr	r7, [r7, r0, lsl #2]
   2dfc0:	add	r0, r0, #1
   2dfc4:	mul	r5, r7, r5
   2dfc8:	ldr	r7, [fp, #24]
   2dfcc:	str	r5, [sp, #56]	; 0x38
   2dfd0:	cmp	r0, r7
   2dfd4:	mov	r7, r2
   2dfd8:	mov	r2, sl
   2dfdc:	ldr	sl, [fp, #16]
   2dfe0:	bne	2df68 <GetDataSlab+0xba4c>
   2dfe4:	ldr	r0, [sp, #52]	; 0x34
   2dfe8:	cmp	r8, #1
   2dfec:	add	r5, r0, r3
   2dff0:	bne	38e58 <GetDataSlab+0x1693c>
   2dff4:	ldr	r0, [sp, #56]	; 0x38
   2dff8:	cmp	r0, #1
   2dffc:	blt	242a8 <GetDataSlab+0x1d8c>
   2e000:	ldr	r0, [fp, #20]
   2e004:	mov	r1, lr
   2e008:	add	lr, ip, #4
   2e00c:	mov	r9, #0
   2e010:	mov	r8, #0
   2e014:	add	sl, r0, #4
   2e018:	add	r0, sp, #104	; 0x68
   2e01c:	orr	r6, r0, #4
   2e020:	orr	r0, r1, #4
   2e024:	ldr	r1, [sp, #48]	; 0x30
   2e028:	str	r0, [sp, #40]	; 0x28
   2e02c:	lsl	r0, r1, #3
   2e030:	str	r0, [sp, #52]	; 0x34
   2e034:	cmp	r1, #1
   2e038:	blt	2e064 <GetDataSlab+0xbb48>
   2e03c:	ldr	r0, [fp, #12]
   2e040:	ldr	ip, [sp, #48]	; 0x30
   2e044:	ldr	r4, [sp, #60]	; 0x3c
   2e048:	ldr	r0, [r0]
   2e04c:	add	r0, r5, r0
   2e050:	ldrb	r2, [r0], #1
   2e054:	subs	ip, ip, #1
   2e058:	stm	r4, {r2, r9}
   2e05c:	add	r4, r4, #8
   2e060:	bne	2e050 <GetDataSlab+0xbb34>
   2e064:	ldr	r0, [sp, #44]	; 0x2c
   2e068:	add	ip, sp, #64	; 0x40
   2e06c:	add	r5, r5, r0
   2e070:	add	r3, r3, r0
   2e074:	ldr	r0, [fp, #24]
   2e078:	cmp	r0, #2
   2e07c:	blt	2e11c <GetDataSlab+0xbc00>
   2e080:	mov	r4, #0
   2e084:	ldr	r2, [r6, r4, lsl #2]
   2e088:	mov	r0, r4
   2e08c:	add	r2, r2, #1
   2e090:	str	r2, [r6, r4, lsl #2]
   2e094:	ldr	r4, [sl, r4, lsl #2]
   2e098:	sdiv	r7, r2, r4
   2e09c:	mls	r2, r7, r4, r2
   2e0a0:	cmp	r2, #0
   2e0a4:	bne	2e10c <GetDataSlab+0xbbf0>
   2e0a8:	add	r2, ip, r0, lsl #2
   2e0ac:	str	r9, [r6, r0, lsl #2]
   2e0b0:	ldr	r4, [r2, #4]
   2e0b4:	sdiv	r2, r3, r4
   2e0b8:	mls	r2, r2, r4, r3
   2e0bc:	cmp	r2, #0
   2e0c0:	beq	2e0e0 <GetDataSlab+0xbbc4>
   2e0c4:	ldr	r7, [ip, r0, lsl #2]
   2e0c8:	ldr	r1, [lr, r0, lsl #2]
   2e0cc:	sub	r2, r4, r2
   2e0d0:	mla	r1, r1, r7, r2
   2e0d4:	add	r3, r1, r3
   2e0d8:	add	r5, r5, r1
   2e0dc:	b	2e0f4 <GetDataSlab+0xbbd8>
   2e0e0:	ldr	r2, [lr, r0, lsl #2]
   2e0e4:	cmp	r2, #0
   2e0e8:	ldrne	r1, [ip, r0, lsl #2]
   2e0ec:	mlane	r3, r1, r2, r3
   2e0f0:	mlane	r5, r1, r2, r5
   2e0f4:	ldr	r1, [fp, #24]
   2e0f8:	add	r4, r0, #1
   2e0fc:	add	r0, r0, #2
   2e100:	cmp	r0, r1
   2e104:	blt	2e084 <GetDataSlab+0xbb68>
   2e108:	b	2e11c <GetDataSlab+0xbc00>
   2e10c:	ldr	r1, [sp, #40]	; 0x28
   2e110:	ldr	r0, [r1, r0, lsl #2]
   2e114:	add	r5, r5, r0
   2e118:	add	r3, r0, r3
   2e11c:	ldr	r0, [sp, #60]	; 0x3c
   2e120:	ldr	r1, [sp, #52]	; 0x34
   2e124:	ldr	r2, [sp, #56]	; 0x38
   2e128:	add	r0, r0, r1
   2e12c:	ldr	r1, [sp, #48]	; 0x30
   2e130:	str	r0, [sp, #60]	; 0x3c
   2e134:	mov	r0, #0
   2e138:	add	r8, r8, r1
   2e13c:	cmp	r8, r2
   2e140:	blt	2e034 <GetDataSlab+0xbb18>
   2e144:	b	242ac <GetDataSlab+0x1d90>
   2e148:	mov	r1, r8
   2e14c:	ldr	r8, [sl]
   2e150:	add	r2, sp, #64	; 0x40
   2e154:	sub	r3, fp, #72	; 0x48
   2e158:	sub	r0, r8, #1
   2e15c:	str	r0, [fp, #-72]	; 0xffffffb8
   2e160:	ldr	r0, [r9]
   2e164:	mov	r9, #0
   2e168:	str	r0, [sp, #64]	; 0x40
   2e16c:	str	r0, [sp, #40]	; 0x28
   2e170:	ldr	r0, [fp, #24]
   2e174:	ldr	r1, [r1]
   2e178:	cmp	r0, #2
   2e17c:	str	r1, [sp, #44]	; 0x2c
   2e180:	str	r1, [sp, #48]	; 0x30
   2e184:	blt	2e224 <GetDataSlab+0xbd08>
   2e188:	ldr	r6, [sp, #40]	; 0x28
   2e18c:	ldr	r0, [sp, #44]	; 0x2c
   2e190:	ldr	r7, [fp, #8]
   2e194:	mov	r1, #1
   2e198:	mov	r9, #0
   2e19c:	mov	r5, r6
   2e1a0:	str	r0, [sp, #48]	; 0x30
   2e1a4:	ldr	r0, [sl, r1, lsl #2]
   2e1a8:	str	r6, [r2, r1, lsl #2]
   2e1ac:	ldr	r2, [fp, #8]
   2e1b0:	sub	r0, r0, #1
   2e1b4:	str	r0, [r3, r1, lsl #2]
   2e1b8:	mov	r3, #0
   2e1bc:	ldr	lr, [r2, r1, lsl #2]
   2e1c0:	mov	r4, lr
   2e1c4:	mul	r6, r4, r6
   2e1c8:	ldr	r4, [r7, -r3, lsl #2]
   2e1cc:	add	r3, r3, #1
   2e1d0:	cmp	r1, r3
   2e1d4:	mul	r0, r0, r4
   2e1d8:	bne	2e1c4 <GetDataSlab+0xbca8>
   2e1dc:	add	r2, sp, #64	; 0x40
   2e1e0:	sub	r3, fp, #72	; 0x48
   2e1e4:	ldr	r4, [sp, #48]	; 0x30
   2e1e8:	add	r7, r7, #4
   2e1ec:	str	r6, [r2, r1, lsl #2]
   2e1f0:	str	r0, [r3, r1, lsl #2]
   2e1f4:	ldr	r0, [ip, r1, lsl #2]
   2e1f8:	mla	r9, r0, r5, r9
   2e1fc:	ldr	r0, [fp, #20]
   2e200:	mov	r5, r6
   2e204:	mov	r6, lr
   2e208:	ldr	r0, [r0, r1, lsl #2]
   2e20c:	add	r1, r1, #1
   2e210:	mul	r4, r0, r4
   2e214:	ldr	r0, [fp, #24]
   2e218:	str	r4, [sp, #48]	; 0x30
   2e21c:	cmp	r1, r0
   2e220:	bne	2e1a4 <GetDataSlab+0xbc88>
   2e224:	ldr	r0, [sp, #52]	; 0x34
   2e228:	cmp	r8, #1
   2e22c:	add	lr, r0, r9, lsl #1
   2e230:	bne	38ff8 <GetDataSlab+0x16adc>
   2e234:	ldr	r0, [sp, #48]	; 0x30
   2e238:	ldr	r1, [sp, #44]	; 0x2c
   2e23c:	cmp	r0, #1
   2e240:	blt	242a8 <GetDataSlab+0x1d8c>
   2e244:	ldr	r0, [fp, #20]
   2e248:	mov	sl, #0
   2e24c:	add	r8, r0, #4
   2e250:	add	r0, sp, #104	; 0x68
   2e254:	orr	r6, r0, #4
   2e258:	sub	r0, fp, #72	; 0x48
   2e25c:	orr	r0, r0, #4
   2e260:	str	r0, [sp, #32]
   2e264:	lsl	r0, r1, #3
   2e268:	str	r0, [sp, #52]	; 0x34
   2e26c:	ldr	r0, [ip], #4
   2e270:	str	r0, [sp, #36]	; 0x24
   2e274:	str	ip, [sp, #56]	; 0x38
   2e278:	cmp	r1, #1
   2e27c:	blt	2e2a8 <GetDataSlab+0xbd8c>
   2e280:	ldr	r0, [sp, #36]	; 0x24
   2e284:	ldr	r3, [sp, #60]	; 0x3c
   2e288:	mov	ip, r1
   2e28c:	add	r0, lr, r0, lsl #1
   2e290:	ldrsh	r4, [r0], #2
   2e294:	subs	ip, ip, #1
   2e298:	asr	r5, r4, #31
   2e29c:	strd	r4, [r3]
   2e2a0:	add	r3, r3, #8
   2e2a4:	bne	2e290 <GetDataSlab+0xbd74>
   2e2a8:	ldr	r0, [sp, #40]	; 0x28
   2e2ac:	add	r7, sp, #64	; 0x40
   2e2b0:	add	lr, lr, r0, lsl #1
   2e2b4:	add	r9, r9, r0
   2e2b8:	ldr	r0, [fp, #24]
   2e2bc:	cmp	r0, #2
   2e2c0:	blt	2e36c <GetDataSlab+0xbe50>
   2e2c4:	ldr	r2, [sp, #56]	; 0x38
   2e2c8:	mov	r3, #0
   2e2cc:	mov	ip, #0
   2e2d0:	mov	r0, r3
   2e2d4:	ldr	r3, [r6, r3, lsl #2]
   2e2d8:	add	r3, r3, #1
   2e2dc:	str	r3, [r6, r0, lsl #2]
   2e2e0:	ldr	r5, [r8, r0, lsl #2]
   2e2e4:	sdiv	r4, r3, r5
   2e2e8:	mls	r3, r4, r5, r3
   2e2ec:	cmp	r3, #0
   2e2f0:	bne	2e35c <GetDataSlab+0xbe40>
   2e2f4:	add	r3, r7, r0, lsl #2
   2e2f8:	str	ip, [r6, r0, lsl #2]
   2e2fc:	ldr	r3, [r3, #4]
   2e300:	sdiv	r5, r9, r3
   2e304:	mls	r4, r5, r3, r9
   2e308:	cmp	r4, #0
   2e30c:	beq	2e328 <GetDataSlab+0xbe0c>
   2e310:	ldr	r5, [r7, r0, lsl #2]
   2e314:	ldr	r1, [r2, r0, lsl #2]
   2e318:	sub	r3, r3, r4
   2e31c:	mla	r1, r1, r5, r3
   2e320:	add	r9, r1, r9
   2e324:	b	2e340 <GetDataSlab+0xbe24>
   2e328:	ldr	r3, [r2, r0, lsl #2]
   2e32c:	cmp	r3, #0
   2e330:	beq	2e344 <GetDataSlab+0xbe28>
   2e334:	ldr	r1, [r7, r0, lsl #2]
   2e338:	mla	r9, r1, r3, r9
   2e33c:	mul	r1, r1, r3
   2e340:	add	lr, lr, r1, lsl #1
   2e344:	ldr	r1, [fp, #24]
   2e348:	add	r3, r0, #1
   2e34c:	add	r0, r0, #2
   2e350:	cmp	r0, r1
   2e354:	blt	2e2d0 <GetDataSlab+0xbdb4>
   2e358:	b	2e36c <GetDataSlab+0xbe50>
   2e35c:	ldr	r1, [sp, #32]
   2e360:	ldr	r0, [r1, r0, lsl #2]
   2e364:	add	lr, lr, r0, lsl #1
   2e368:	add	r9, r0, r9
   2e36c:	ldr	r0, [sp, #60]	; 0x3c
   2e370:	ldr	r1, [sp, #52]	; 0x34
   2e374:	ldr	r2, [sp, #48]	; 0x30
   2e378:	add	r0, r0, r1
   2e37c:	ldr	r1, [sp, #44]	; 0x2c
   2e380:	str	r0, [sp, #60]	; 0x3c
   2e384:	mov	r0, #0
   2e388:	add	sl, sl, r1
   2e38c:	cmp	sl, r2
   2e390:	blt	2e278 <GetDataSlab+0xbd5c>
   2e394:	b	242ac <GetDataSlab+0x1d90>
   2e398:	ldr	r0, [sl]
   2e39c:	mov	r2, #0
   2e3a0:	add	r3, sp, #64	; 0x40
   2e3a4:	sub	lr, fp, #72	; 0x48
   2e3a8:	str	r0, [sp, #56]	; 0x38
   2e3ac:	sub	r0, r0, #1
   2e3b0:	str	r0, [fp, #-72]	; 0xffffffb8
   2e3b4:	ldr	r0, [r9]
   2e3b8:	str	r0, [sp, #64]	; 0x40
   2e3bc:	str	r0, [sp, #40]	; 0x28
   2e3c0:	ldr	r0, [fp, #24]
   2e3c4:	ldr	r1, [r8]
   2e3c8:	cmp	r0, #2
   2e3cc:	str	r1, [sp, #44]	; 0x2c
   2e3d0:	str	r1, [sp, #48]	; 0x30
   2e3d4:	blt	2e46c <GetDataSlab+0xbf50>
   2e3d8:	ldr	r4, [sp, #40]	; 0x28
   2e3dc:	ldr	r0, [sp, #44]	; 0x2c
   2e3e0:	mov	r1, #1
   2e3e4:	mov	r2, #0
   2e3e8:	mov	r7, r9
   2e3ec:	mov	r5, r4
   2e3f0:	str	r0, [sp, #48]	; 0x30
   2e3f4:	ldr	r0, [sl, r1, lsl #2]
   2e3f8:	str	r4, [r3, r1, lsl #2]
   2e3fc:	mov	r3, #0
   2e400:	sub	r0, r0, #1
   2e404:	str	r0, [lr, r1, lsl #2]
   2e408:	ldr	r9, [r9, r1, lsl #2]
   2e40c:	mov	r6, r9
   2e410:	mul	r4, r6, r4
   2e414:	ldr	r6, [r7, -r3, lsl #2]
   2e418:	add	r3, r3, #1
   2e41c:	cmp	r1, r3
   2e420:	mul	r0, r0, r6
   2e424:	bne	2e410 <GetDataSlab+0xbef4>
   2e428:	add	r3, sp, #64	; 0x40
   2e42c:	str	r0, [lr, r1, lsl #2]
   2e430:	add	r7, r7, #4
   2e434:	str	r4, [r3, r1, lsl #2]
   2e438:	ldr	r0, [ip, r1, lsl #2]
   2e43c:	mla	r2, r0, r5, r2
   2e440:	ldr	r0, [r8, r1, lsl #2]
   2e444:	ldr	r5, [sp, #48]	; 0x30
   2e448:	add	r1, r1, #1
   2e44c:	mul	r5, r0, r5
   2e450:	ldr	r0, [fp, #24]
   2e454:	str	r5, [sp, #48]	; 0x30
   2e458:	mov	r5, r4
   2e45c:	mov	r4, r9
   2e460:	ldr	r9, [fp, #8]
   2e464:	cmp	r1, r0
   2e468:	bne	2e3f4 <GetDataSlab+0xbed8>
   2e46c:	ldr	r0, [sp, #52]	; 0x34
   2e470:	ldr	r5, [sp, #56]	; 0x38
   2e474:	add	lr, r0, r2, lsl #1
   2e478:	cmp	r5, #1
   2e47c:	bne	39184 <GetDataSlab+0x16c68>
   2e480:	ldr	r0, [sp, #48]	; 0x30
   2e484:	ldr	r1, [sp, #44]	; 0x2c
   2e488:	cmp	r0, #1
   2e48c:	blt	242a8 <GetDataSlab+0x1d8c>
   2e490:	add	r0, sp, #104	; 0x68
   2e494:	add	sl, r8, #4
   2e498:	mov	r9, #0
   2e49c:	mov	r8, #0
   2e4a0:	orr	r7, r0, #4
   2e4a4:	sub	r0, fp, #72	; 0x48
   2e4a8:	orr	r0, r0, #4
   2e4ac:	str	r0, [sp, #32]
   2e4b0:	lsl	r0, r1, #3
   2e4b4:	str	r0, [sp, #52]	; 0x34
   2e4b8:	ldr	r0, [ip], #4
   2e4bc:	str	ip, [sp, #56]	; 0x38
   2e4c0:	str	r0, [sp, #36]	; 0x24
   2e4c4:	ldr	r5, [sp, #56]	; 0x38
   2e4c8:	cmp	r1, #1
   2e4cc:	blt	2e4f4 <GetDataSlab+0xbfd8>
   2e4d0:	ldr	r0, [sp, #36]	; 0x24
   2e4d4:	ldr	ip, [sp, #44]	; 0x2c
   2e4d8:	ldr	r3, [sp, #60]	; 0x3c
   2e4dc:	add	r0, lr, r0, lsl #1
   2e4e0:	ldrh	r4, [r0], #2
   2e4e4:	subs	ip, ip, #1
   2e4e8:	stm	r3, {r4, r9}
   2e4ec:	add	r3, r3, #8
   2e4f0:	bne	2e4e0 <GetDataSlab+0xbfc4>
   2e4f4:	ldr	r0, [sp, #40]	; 0x28
   2e4f8:	add	ip, sp, #64	; 0x40
   2e4fc:	add	lr, lr, r0, lsl #1
   2e500:	add	r2, r2, r0
   2e504:	ldr	r0, [fp, #24]
   2e508:	cmp	r0, #2
   2e50c:	blt	2e5b0 <GetDataSlab+0xc094>
   2e510:	mov	r3, #0
   2e514:	mov	r0, r3
   2e518:	ldr	r3, [r7, r3, lsl #2]
   2e51c:	add	r3, r3, #1
   2e520:	str	r3, [r7, r0, lsl #2]
   2e524:	ldr	r4, [sl, r0, lsl #2]
   2e528:	sdiv	r6, r3, r4
   2e52c:	mls	r3, r6, r4, r3
   2e530:	cmp	r3, #0
   2e534:	bne	2e5a0 <GetDataSlab+0xc084>
   2e538:	add	r3, ip, r0, lsl #2
   2e53c:	str	r9, [r7, r0, lsl #2]
   2e540:	ldr	r3, [r3, #4]
   2e544:	sdiv	r6, r2, r3
   2e548:	mls	r4, r6, r3, r2
   2e54c:	cmp	r4, #0
   2e550:	beq	2e56c <GetDataSlab+0xc050>
   2e554:	ldr	r6, [ip, r0, lsl #2]
   2e558:	ldr	r1, [r5, r0, lsl #2]
   2e55c:	sub	r3, r3, r4
   2e560:	mla	r1, r1, r6, r3
   2e564:	add	r2, r1, r2
   2e568:	b	2e584 <GetDataSlab+0xc068>
   2e56c:	ldr	r3, [r5, r0, lsl #2]
   2e570:	cmp	r3, #0
   2e574:	beq	2e588 <GetDataSlab+0xc06c>
   2e578:	ldr	r1, [ip, r0, lsl #2]
   2e57c:	mla	r2, r1, r3, r2
   2e580:	mul	r1, r1, r3
   2e584:	add	lr, lr, r1, lsl #1
   2e588:	ldr	r1, [fp, #24]
   2e58c:	add	r3, r0, #1
   2e590:	add	r0, r0, #2
   2e594:	cmp	r0, r1
   2e598:	blt	2e514 <GetDataSlab+0xbff8>
   2e59c:	b	2e5b0 <GetDataSlab+0xc094>
   2e5a0:	ldr	r1, [sp, #32]
   2e5a4:	ldr	r0, [r1, r0, lsl #2]
   2e5a8:	add	lr, lr, r0, lsl #1
   2e5ac:	add	r2, r0, r2
   2e5b0:	ldr	r0, [sp, #60]	; 0x3c
   2e5b4:	ldr	r1, [sp, #52]	; 0x34
   2e5b8:	ldr	r3, [sp, #48]	; 0x30
   2e5bc:	add	r0, r0, r1
   2e5c0:	ldr	r1, [sp, #44]	; 0x2c
   2e5c4:	str	r0, [sp, #60]	; 0x3c
   2e5c8:	mov	r0, #0
   2e5cc:	add	r8, r8, r1
   2e5d0:	cmp	r8, r3
   2e5d4:	blt	2e4c8 <GetDataSlab+0xbfac>
   2e5d8:	b	242ac <GetDataSlab+0x1d90>
   2e5dc:	mov	r1, r8
   2e5e0:	ldr	r8, [sl]
   2e5e4:	mov	r3, #0
   2e5e8:	add	r2, sp, #64	; 0x40
   2e5ec:	sub	lr, fp, #72	; 0x48
   2e5f0:	sub	r0, r8, #1
   2e5f4:	str	r0, [fp, #-72]	; 0xffffffb8
   2e5f8:	ldr	r0, [r9]
   2e5fc:	str	r0, [sp, #64]	; 0x40
   2e600:	str	r0, [sp, #44]	; 0x2c
   2e604:	ldr	r0, [fp, #24]
   2e608:	ldr	r1, [r1]
   2e60c:	cmp	r0, #2
   2e610:	str	r1, [sp, #48]	; 0x30
   2e614:	str	r1, [sp, #56]	; 0x38
   2e618:	blt	2e6b4 <GetDataSlab+0xc198>
   2e61c:	ldr	r6, [sp, #44]	; 0x2c
   2e620:	ldr	r0, [sp, #48]	; 0x30
   2e624:	mov	r1, #1
   2e628:	mov	r3, #0
   2e62c:	mov	r7, r9
   2e630:	mov	r5, r6
   2e634:	str	r0, [sp, #56]	; 0x38
   2e638:	ldr	r0, [sl, r1, lsl #2]
   2e63c:	str	r6, [r2, r1, lsl #2]
   2e640:	mov	r2, #0
   2e644:	sub	r0, r0, #1
   2e648:	str	r0, [lr, r1, lsl #2]
   2e64c:	ldr	sl, [r9, r1, lsl #2]
   2e650:	mov	r4, sl
   2e654:	mul	r6, r4, r6
   2e658:	ldr	r4, [r7, -r2, lsl #2]
   2e65c:	add	r2, r2, #1
   2e660:	cmp	r1, r2
   2e664:	mul	r0, r0, r4
   2e668:	bne	2e654 <GetDataSlab+0xc138>
   2e66c:	add	r2, sp, #64	; 0x40
   2e670:	str	r0, [lr, r1, lsl #2]
   2e674:	ldr	r4, [sp, #56]	; 0x38
   2e678:	add	r7, r7, #4
   2e67c:	str	r6, [r2, r1, lsl #2]
   2e680:	ldr	r0, [ip, r1, lsl #2]
   2e684:	mla	r3, r0, r5, r3
   2e688:	ldr	r0, [fp, #20]
   2e68c:	mov	r5, r6
   2e690:	mov	r6, sl
   2e694:	ldr	sl, [fp, #16]
   2e698:	ldr	r0, [r0, r1, lsl #2]
   2e69c:	add	r1, r1, #1
   2e6a0:	mul	r4, r0, r4
   2e6a4:	ldr	r0, [fp, #24]
   2e6a8:	str	r4, [sp, #56]	; 0x38
   2e6ac:	cmp	r1, r0
   2e6b0:	bne	2e638 <GetDataSlab+0xc11c>
   2e6b4:	ldr	r0, [sp, #52]	; 0x34
   2e6b8:	cmp	r8, #1
   2e6bc:	add	r9, r0, r3, lsl #2
   2e6c0:	bne	39318 <GetDataSlab+0x16dfc>
   2e6c4:	ldr	r0, [sp, #56]	; 0x38
   2e6c8:	ldr	r2, [sp, #48]	; 0x30
   2e6cc:	cmp	r0, #1
   2e6d0:	blt	242a8 <GetDataSlab+0x1d8c>
   2e6d4:	ldr	r0, [fp, #20]
   2e6d8:	mov	r1, lr
   2e6dc:	add	sl, ip, #4
   2e6e0:	mov	r8, #0
   2e6e4:	add	lr, r0, #4
   2e6e8:	add	r0, sp, #104	; 0x68
   2e6ec:	orr	r6, r0, #4
   2e6f0:	orr	r0, r1, #4
   2e6f4:	str	r0, [sp, #40]	; 0x28
   2e6f8:	lsl	r0, r2, #3
   2e6fc:	str	r0, [sp, #52]	; 0x34
   2e700:	ldr	r1, [sp, #60]	; 0x3c
   2e704:	cmp	r2, #1
   2e708:	blt	2e738 <GetDataSlab+0xc21c>
   2e70c:	ldr	r0, [fp, #12]
   2e710:	mov	ip, r2
   2e714:	mov	r2, r1
   2e718:	ldr	r0, [r0]
   2e71c:	add	r0, r9, r0, lsl #2
   2e720:	ldr	r4, [r0], #4
   2e724:	subs	ip, ip, #1
   2e728:	asr	r5, r4, #31
   2e72c:	strd	r4, [r2]
   2e730:	add	r2, r2, #8
   2e734:	bne	2e720 <GetDataSlab+0xc204>
   2e738:	ldr	r0, [sp, #44]	; 0x2c
   2e73c:	add	r7, sp, #64	; 0x40
   2e740:	str	r1, [sp, #60]	; 0x3c
   2e744:	add	r9, r9, r0, lsl #2
   2e748:	add	r3, r3, r0
   2e74c:	ldr	r0, [fp, #24]
   2e750:	cmp	r0, #2
   2e754:	blt	2e7fc <GetDataSlab+0xc2e0>
   2e758:	mov	r2, #0
   2e75c:	mov	ip, #0
   2e760:	mov	r0, r2
   2e764:	ldr	r2, [r6, r2, lsl #2]
   2e768:	add	r2, r2, #1
   2e76c:	str	r2, [r6, r0, lsl #2]
   2e770:	ldr	r5, [lr, r0, lsl #2]
   2e774:	sdiv	r4, r2, r5
   2e778:	mls	r2, r4, r5, r2
   2e77c:	cmp	r2, #0
   2e780:	bne	2e7ec <GetDataSlab+0xc2d0>
   2e784:	add	r2, r7, r0, lsl #2
   2e788:	str	ip, [r6, r0, lsl #2]
   2e78c:	ldr	r2, [r2, #4]
   2e790:	sdiv	r5, r3, r2
   2e794:	mls	r4, r5, r2, r3
   2e798:	cmp	r4, #0
   2e79c:	beq	2e7b8 <GetDataSlab+0xc29c>
   2e7a0:	ldr	r5, [r7, r0, lsl #2]
   2e7a4:	ldr	r1, [sl, r0, lsl #2]
   2e7a8:	sub	r2, r2, r4
   2e7ac:	mla	r1, r1, r5, r2
   2e7b0:	add	r3, r1, r3
   2e7b4:	b	2e7d0 <GetDataSlab+0xc2b4>
   2e7b8:	ldr	r2, [sl, r0, lsl #2]
   2e7bc:	cmp	r2, #0
   2e7c0:	beq	2e7d4 <GetDataSlab+0xc2b8>
   2e7c4:	ldr	r1, [r7, r0, lsl #2]
   2e7c8:	mla	r3, r1, r2, r3
   2e7cc:	mul	r1, r1, r2
   2e7d0:	add	r9, r9, r1, lsl #2
   2e7d4:	ldr	r1, [fp, #24]
   2e7d8:	add	r2, r0, #1
   2e7dc:	add	r0, r0, #2
   2e7e0:	cmp	r0, r1
   2e7e4:	blt	2e760 <GetDataSlab+0xc244>
   2e7e8:	b	2e7fc <GetDataSlab+0xc2e0>
   2e7ec:	ldr	r1, [sp, #40]	; 0x28
   2e7f0:	ldr	r0, [r1, r0, lsl #2]
   2e7f4:	add	r9, r9, r0, lsl #2
   2e7f8:	add	r3, r0, r3
   2e7fc:	ldr	r0, [sp, #52]	; 0x34
   2e800:	ldr	r1, [sp, #60]	; 0x3c
   2e804:	ldr	r2, [sp, #48]	; 0x30
   2e808:	add	r1, r1, r0
   2e80c:	add	r8, r8, r2
   2e810:	mov	r0, #0
   2e814:	str	r1, [sp, #60]	; 0x3c
   2e818:	ldr	r1, [sp, #56]	; 0x38
   2e81c:	cmp	r8, r1
   2e820:	blt	2e700 <GetDataSlab+0xc1e4>
   2e824:	b	242ac <GetDataSlab+0x1d90>
   2e828:	mov	r1, r8
   2e82c:	ldr	r8, [sl]
   2e830:	mov	r3, #0
   2e834:	add	r2, sp, #64	; 0x40
   2e838:	sub	lr, fp, #72	; 0x48
   2e83c:	sub	r0, r8, #1
   2e840:	str	r0, [fp, #-72]	; 0xffffffb8
   2e844:	ldr	r0, [r9]
   2e848:	str	r0, [sp, #64]	; 0x40
   2e84c:	str	r0, [sp, #40]	; 0x28
   2e850:	ldr	r0, [fp, #24]
   2e854:	ldr	r1, [r1]
   2e858:	cmp	r0, #2
   2e85c:	str	r1, [sp, #44]	; 0x2c
   2e860:	str	r1, [sp, #48]	; 0x30
   2e864:	blt	2e900 <GetDataSlab+0xc3e4>
   2e868:	ldr	r6, [sp, #40]	; 0x28
   2e86c:	ldr	r0, [sp, #44]	; 0x2c
   2e870:	mov	r1, #1
   2e874:	mov	r3, #0
   2e878:	mov	r7, r9
   2e87c:	mov	r5, r6
   2e880:	str	r0, [sp, #48]	; 0x30
   2e884:	ldr	r0, [sl, r1, lsl #2]
   2e888:	str	r6, [r2, r1, lsl #2]
   2e88c:	mov	r2, #0
   2e890:	sub	r0, r0, #1
   2e894:	str	r0, [lr, r1, lsl #2]
   2e898:	ldr	r9, [r9, r1, lsl #2]
   2e89c:	mov	r4, r9
   2e8a0:	mul	r6, r4, r6
   2e8a4:	ldr	r4, [r7, -r2, lsl #2]
   2e8a8:	add	r2, r2, #1
   2e8ac:	cmp	r1, r2
   2e8b0:	mul	r0, r0, r4
   2e8b4:	bne	2e8a0 <GetDataSlab+0xc384>
   2e8b8:	add	r2, sp, #64	; 0x40
   2e8bc:	str	r0, [lr, r1, lsl #2]
   2e8c0:	ldr	r4, [sp, #48]	; 0x30
   2e8c4:	add	r7, r7, #4
   2e8c8:	str	r6, [r2, r1, lsl #2]
   2e8cc:	ldr	r0, [ip, r1, lsl #2]
   2e8d0:	mla	r3, r0, r5, r3
   2e8d4:	ldr	r0, [fp, #20]
   2e8d8:	mov	r5, r6
   2e8dc:	mov	r6, r9
   2e8e0:	ldr	r9, [fp, #8]
   2e8e4:	ldr	r0, [r0, r1, lsl #2]
   2e8e8:	add	r1, r1, #1
   2e8ec:	mul	r4, r0, r4
   2e8f0:	ldr	r0, [fp, #24]
   2e8f4:	str	r4, [sp, #48]	; 0x30
   2e8f8:	cmp	r1, r0
   2e8fc:	bne	2e884 <GetDataSlab+0xc368>
   2e900:	ldr	r0, [sp, #52]	; 0x34
   2e904:	cmp	r8, #1
   2e908:	add	sl, r0, r3, lsl #2
   2e90c:	bne	394c0 <GetDataSlab+0x16fa4>
   2e910:	ldr	r0, [sp, #48]	; 0x30
   2e914:	cmp	r0, #1
   2e918:	blt	242a8 <GetDataSlab+0x1d8c>
   2e91c:	ldr	r0, [fp, #20]
   2e920:	add	r8, ip, #4
   2e924:	ldr	ip, [sp, #44]	; 0x2c
   2e928:	mov	r1, lr
   2e92c:	mov	r9, #0
   2e930:	add	lr, r0, #4
   2e934:	add	r0, sp, #104	; 0x68
   2e938:	orr	r6, r0, #4
   2e93c:	orr	r0, r1, #4
   2e940:	str	r0, [sp, #36]	; 0x24
   2e944:	lsl	r0, ip, #3
   2e948:	str	r0, [sp, #52]	; 0x34
   2e94c:	mov	r0, #0
   2e950:	str	r0, [sp, #56]	; 0x38
   2e954:	cmp	ip, #1
   2e958:	blt	2e984 <GetDataSlab+0xc468>
   2e95c:	ldr	r0, [fp, #12]
   2e960:	ldr	ip, [sp, #44]	; 0x2c
   2e964:	ldr	r2, [sp, #60]	; 0x3c
   2e968:	ldr	r0, [r0]
   2e96c:	add	r0, sl, r0, lsl #2
   2e970:	ldr	r4, [r0], #4
   2e974:	subs	ip, ip, #1
   2e978:	stm	r2, {r4, r9}
   2e97c:	add	r2, r2, #8
   2e980:	bne	2e970 <GetDataSlab+0xc454>
   2e984:	ldr	r0, [sp, #40]	; 0x28
   2e988:	add	r5, sp, #64	; 0x40
   2e98c:	add	sl, sl, r0, lsl #2
   2e990:	add	r3, r3, r0
   2e994:	ldr	r0, [fp, #24]
   2e998:	cmp	r0, #2
   2e99c:	blt	2ea34 <GetDataSlab+0xc518>
   2e9a0:	ldr	ip, [sp, #44]	; 0x2c
   2e9a4:	mov	r2, #0
   2e9a8:	mov	r0, r2
   2e9ac:	ldr	r2, [r6, r2, lsl #2]
   2e9b0:	add	r2, r2, #1
   2e9b4:	str	r2, [r6, r0, lsl #2]
   2e9b8:	ldr	r4, [lr, r0, lsl #2]
   2e9bc:	sdiv	r1, r2, r4
   2e9c0:	mls	r1, r1, r4, r2
   2e9c4:	cmp	r1, #0
   2e9c8:	bne	2ea3c <GetDataSlab+0xc520>
   2e9cc:	add	r1, r5, r0, lsl #2
   2e9d0:	str	r9, [r6, r0, lsl #2]
   2e9d4:	ldr	r2, [r1, #4]
   2e9d8:	sdiv	r1, r3, r2
   2e9dc:	mls	r4, r1, r2, r3
   2e9e0:	cmp	r4, #0
   2e9e4:	beq	2ea00 <GetDataSlab+0xc4e4>
   2e9e8:	ldr	r1, [r5, r0, lsl #2]
   2e9ec:	ldr	r7, [r8, r0, lsl #2]
   2e9f0:	sub	r2, r2, r4
   2e9f4:	mla	r1, r7, r1, r2
   2e9f8:	add	r3, r1, r3
   2e9fc:	b	2ea18 <GetDataSlab+0xc4fc>
   2ea00:	ldr	r2, [r8, r0, lsl #2]
   2ea04:	cmp	r2, #0
   2ea08:	beq	2ea1c <GetDataSlab+0xc500>
   2ea0c:	ldr	r1, [r5, r0, lsl #2]
   2ea10:	mla	r3, r1, r2, r3
   2ea14:	mul	r1, r1, r2
   2ea18:	add	sl, sl, r1, lsl #2
   2ea1c:	ldr	r1, [fp, #24]
   2ea20:	add	r2, r0, #1
   2ea24:	add	r0, r0, #2
   2ea28:	cmp	r0, r1
   2ea2c:	blt	2e9a8 <GetDataSlab+0xc48c>
   2ea30:	b	2ea4c <GetDataSlab+0xc530>
   2ea34:	ldr	ip, [sp, #44]	; 0x2c
   2ea38:	b	2ea4c <GetDataSlab+0xc530>
   2ea3c:	ldr	r1, [sp, #36]	; 0x24
   2ea40:	ldr	r0, [r1, r0, lsl #2]
   2ea44:	add	sl, sl, r0, lsl #2
   2ea48:	add	r3, r0, r3
   2ea4c:	ldr	r0, [sp, #60]	; 0x3c
   2ea50:	ldr	r1, [sp, #52]	; 0x34
   2ea54:	ldr	r2, [sp, #56]	; 0x38
   2ea58:	add	r0, r0, r1
   2ea5c:	ldr	r1, [sp, #48]	; 0x30
   2ea60:	add	r2, r2, ip
   2ea64:	str	r0, [sp, #60]	; 0x3c
   2ea68:	mov	r0, #0
   2ea6c:	str	r2, [sp, #56]	; 0x38
   2ea70:	cmp	r2, r1
   2ea74:	blt	2e954 <GetDataSlab+0xc438>
   2ea78:	b	242ac <GetDataSlab+0x1d90>
   2ea7c:	ldr	ip, [sl]
   2ea80:	add	r4, sp, #64	; 0x40
   2ea84:	sub	lr, fp, #72	; 0x48
   2ea88:	sub	r0, ip, #1
   2ea8c:	str	r0, [fp, #-72]	; 0xffffffb8
   2ea90:	ldr	r0, [r9]
   2ea94:	mov	r9, #0
   2ea98:	str	r0, [sp, #64]	; 0x40
   2ea9c:	str	r0, [sp, #40]	; 0x28
   2eaa0:	ldr	r0, [fp, #24]
   2eaa4:	ldr	r1, [r8]
   2eaa8:	cmp	r0, #2
   2eaac:	str	r1, [sp, #44]	; 0x2c
   2eab0:	str	r1, [sp, #48]	; 0x30
   2eab4:	blt	2eb50 <GetDataSlab+0xc634>
   2eab8:	ldr	r3, [sp, #40]	; 0x28
   2eabc:	ldr	r0, [sp, #44]	; 0x2c
   2eac0:	ldr	r2, [fp, #8]
   2eac4:	mov	r1, #1
   2eac8:	mov	r9, #0
   2eacc:	mov	r7, r3
   2ead0:	str	r0, [sp, #48]	; 0x30
   2ead4:	ldr	r0, [sl, r1, lsl #2]
   2ead8:	str	r3, [r4, r1, lsl #2]
   2eadc:	mov	r4, #0
   2eae0:	sub	r5, r0, #1
   2eae4:	ldr	r0, [fp, #8]
   2eae8:	str	r5, [lr, r1, lsl #2]
   2eaec:	ldr	r0, [r0, r1, lsl #2]
   2eaf0:	mov	r6, r0
   2eaf4:	mul	r3, r6, r3
   2eaf8:	ldr	r6, [r2, -r4, lsl #2]
   2eafc:	add	r4, r4, #1
   2eb00:	cmp	r1, r4
   2eb04:	mul	r5, r5, r6
   2eb08:	bne	2eaf4 <GetDataSlab+0xc5d8>
   2eb0c:	ldr	r6, [fp, #12]
   2eb10:	add	r4, sp, #64	; 0x40
   2eb14:	str	r5, [lr, r1, lsl #2]
   2eb18:	ldr	r5, [sp, #48]	; 0x30
   2eb1c:	add	r2, r2, #4
   2eb20:	str	r3, [r4, r1, lsl #2]
   2eb24:	ldr	r6, [r6, r1, lsl #2]
   2eb28:	mla	r9, r6, r7, r9
   2eb2c:	ldr	r7, [r8, r1, lsl #2]
   2eb30:	add	r1, r1, #1
   2eb34:	mul	r5, r7, r5
   2eb38:	ldr	r7, [fp, #24]
   2eb3c:	str	r5, [sp, #48]	; 0x30
   2eb40:	cmp	r1, r7
   2eb44:	mov	r7, r3
   2eb48:	mov	r3, r0
   2eb4c:	bne	2ead4 <GetDataSlab+0xc5b8>
   2eb50:	ldr	r0, [sp, #52]	; 0x34
   2eb54:	cmp	ip, #1
   2eb58:	add	r5, r0, r9, lsl #2
   2eb5c:	bne	3966c <GetDataSlab+0x17150>
   2eb60:	ldr	r0, [sp, #48]	; 0x30
   2eb64:	cmp	r0, #1
   2eb68:	blt	242a8 <GetDataSlab+0x1d8c>
   2eb6c:	add	r0, sp, #104	; 0x68
   2eb70:	add	r4, r8, #4
   2eb74:	orr	r6, r0, #4
   2eb78:	orr	r0, lr, #4
   2eb7c:	ldr	lr, [sp, #44]	; 0x2c
   2eb80:	str	r0, [sp, #28]
   2eb84:	lsl	r0, lr, #3
   2eb88:	str	r0, [sp, #36]	; 0x24
   2eb8c:	ldr	r0, [sp, #56]	; 0x38
   2eb90:	ldr	r1, [r0], #4
   2eb94:	str	r0, [sp, #56]	; 0x38
   2eb98:	mov	r0, #0
   2eb9c:	str	r1, [sp, #32]
   2eba0:	str	r0, [sp, #52]	; 0x34
   2eba4:	cmp	lr, #1
   2eba8:	blt	2ebd4 <GetDataSlab+0xc6b8>
   2ebac:	ldr	r0, [sp, #32]
   2ebb0:	ldr	r8, [sp, #44]	; 0x2c
   2ebb4:	ldr	sl, [sp, #60]	; 0x3c
   2ebb8:	add	r7, r5, r0, lsl #2
   2ebbc:	ldr	r0, [r7], #4
   2ebc0:	bl	49828 <__aeabi_f2lz>
   2ebc4:	strd	r0, [sl]
   2ebc8:	subs	r8, r8, #1
   2ebcc:	add	sl, sl, #8
   2ebd0:	bne	2ebbc <GetDataSlab+0xc6a0>
   2ebd4:	ldr	r0, [sp, #40]	; 0x28
   2ebd8:	add	r5, r5, r0, lsl #2
   2ebdc:	add	r9, r9, r0
   2ebe0:	ldr	r0, [fp, #24]
   2ebe4:	cmp	r0, #2
   2ebe8:	blt	2ec98 <GetDataSlab+0xc77c>
   2ebec:	ldr	ip, [sp, #60]	; 0x3c
   2ebf0:	ldr	lr, [sp, #44]	; 0x2c
   2ebf4:	mov	r1, #0
   2ebf8:	mov	r8, #0
   2ebfc:	mov	r0, r1
   2ec00:	ldr	r1, [r6, r1, lsl #2]
   2ec04:	add	r1, r1, #1
   2ec08:	str	r1, [r6, r0, lsl #2]
   2ec0c:	ldr	r2, [r4, r0, lsl #2]
   2ec10:	sdiv	r3, r1, r2
   2ec14:	mls	r1, r3, r2, r1
   2ec18:	cmp	r1, #0
   2ec1c:	bne	2eca4 <GetDataSlab+0xc788>
   2ec20:	add	r3, sp, #64	; 0x40
   2ec24:	str	r8, [r6, r0, lsl #2]
   2ec28:	add	r1, r3, r0, lsl #2
   2ec2c:	ldr	r1, [r1, #4]
   2ec30:	sdiv	r2, r9, r1
   2ec34:	mls	r2, r2, r1, r9
   2ec38:	cmp	r2, #0
   2ec3c:	beq	2ec5c <GetDataSlab+0xc740>
   2ec40:	ldr	r7, [sp, #56]	; 0x38
   2ec44:	ldr	r3, [r3, r0, lsl #2]
   2ec48:	sub	r1, r1, r2
   2ec4c:	ldr	r7, [r7, r0, lsl #2]
   2ec50:	mla	r1, r7, r3, r1
   2ec54:	add	r9, r1, r9
   2ec58:	b	2ec7c <GetDataSlab+0xc760>
   2ec5c:	ldr	r1, [sp, #56]	; 0x38
   2ec60:	ldr	r1, [r1, r0, lsl #2]
   2ec64:	cmp	r1, #0
   2ec68:	beq	2ec80 <GetDataSlab+0xc764>
   2ec6c:	add	r2, sp, #64	; 0x40
   2ec70:	ldr	r2, [r2, r0, lsl #2]
   2ec74:	mla	r9, r2, r1, r9
   2ec78:	mul	r1, r2, r1
   2ec7c:	add	r5, r5, r1, lsl #2
   2ec80:	ldr	r2, [fp, #24]
   2ec84:	add	r1, r0, #1
   2ec88:	add	r0, r0, #2
   2ec8c:	cmp	r0, r2
   2ec90:	blt	2ebfc <GetDataSlab+0xc6e0>
   2ec94:	b	2ecb4 <GetDataSlab+0xc798>
   2ec98:	ldr	ip, [sp, #60]	; 0x3c
   2ec9c:	ldr	lr, [sp, #44]	; 0x2c
   2eca0:	b	2ecb4 <GetDataSlab+0xc798>
   2eca4:	ldr	r1, [sp, #28]
   2eca8:	ldr	r0, [r1, r0, lsl #2]
   2ecac:	add	r5, r5, r0, lsl #2
   2ecb0:	add	r9, r0, r9
   2ecb4:	ldr	r2, [sp, #52]	; 0x34
   2ecb8:	ldr	r0, [sp, #36]	; 0x24
   2ecbc:	ldr	r1, [sp, #48]	; 0x30
   2ecc0:	add	r2, r2, lr
   2ecc4:	add	ip, ip, r0
   2ecc8:	mov	r0, #0
   2eccc:	cmp	r2, r1
   2ecd0:	str	ip, [sp, #60]	; 0x3c
   2ecd4:	str	r2, [sp, #52]	; 0x34
   2ecd8:	blt	2eba4 <GetDataSlab+0xc688>
   2ecdc:	b	242ac <GetDataSlab+0x1d90>
   2ece0:	ldr	ip, [sl]
   2ece4:	add	r4, sp, #64	; 0x40
   2ece8:	sub	lr, fp, #72	; 0x48
   2ecec:	sub	r0, ip, #1
   2ecf0:	str	r0, [fp, #-72]	; 0xffffffb8
   2ecf4:	ldr	r0, [r9]
   2ecf8:	mov	r9, #0
   2ecfc:	str	r0, [sp, #64]	; 0x40
   2ed00:	str	r0, [sp, #40]	; 0x28
   2ed04:	ldr	r0, [fp, #24]
   2ed08:	ldr	r1, [r8]
   2ed0c:	cmp	r0, #2
   2ed10:	str	r1, [sp, #44]	; 0x2c
   2ed14:	str	r1, [sp, #48]	; 0x30
   2ed18:	blt	2edb4 <GetDataSlab+0xc898>
   2ed1c:	ldr	r3, [sp, #40]	; 0x28
   2ed20:	ldr	r0, [sp, #44]	; 0x2c
   2ed24:	ldr	r2, [fp, #8]
   2ed28:	mov	r1, #1
   2ed2c:	mov	r9, #0
   2ed30:	mov	r5, r3
   2ed34:	str	r0, [sp, #48]	; 0x30
   2ed38:	ldr	r0, [sl, r1, lsl #2]
   2ed3c:	str	r3, [r4, r1, lsl #2]
   2ed40:	mov	r4, #0
   2ed44:	sub	r6, r0, #1
   2ed48:	ldr	r0, [fp, #8]
   2ed4c:	str	r6, [lr, r1, lsl #2]
   2ed50:	ldr	r0, [r0, r1, lsl #2]
   2ed54:	mov	r7, r0
   2ed58:	mul	r3, r7, r3
   2ed5c:	ldr	r7, [r2, -r4, lsl #2]
   2ed60:	add	r4, r4, #1
   2ed64:	cmp	r1, r4
   2ed68:	mul	r6, r6, r7
   2ed6c:	bne	2ed58 <GetDataSlab+0xc83c>
   2ed70:	ldr	r7, [fp, #12]
   2ed74:	add	r4, sp, #64	; 0x40
   2ed78:	str	r6, [lr, r1, lsl #2]
   2ed7c:	add	r2, r2, #4
   2ed80:	str	r3, [r4, r1, lsl #2]
   2ed84:	ldr	r7, [r7, r1, lsl #2]
   2ed88:	mla	r9, r7, r5, r9
   2ed8c:	ldr	r7, [r8, r1, lsl #2]
   2ed90:	ldr	r5, [sp, #48]	; 0x30
   2ed94:	add	r1, r1, #1
   2ed98:	mul	r5, r7, r5
   2ed9c:	ldr	r7, [fp, #24]
   2eda0:	str	r5, [sp, #48]	; 0x30
   2eda4:	mov	r5, r3
   2eda8:	mov	r3, r0
   2edac:	cmp	r1, r7
   2edb0:	bne	2ed38 <GetDataSlab+0xc81c>
   2edb4:	ldr	r0, [sp, #52]	; 0x34
   2edb8:	cmp	ip, #1
   2edbc:	add	r4, r0, r9, lsl #3
   2edc0:	bne	39818 <GetDataSlab+0x172fc>
   2edc4:	ldr	r0, [sp, #48]	; 0x30
   2edc8:	cmp	r0, #1
   2edcc:	blt	242a8 <GetDataSlab+0x1d8c>
   2edd0:	add	r0, sp, #104	; 0x68
   2edd4:	add	r6, r8, #4
   2edd8:	orr	r7, r0, #4
   2eddc:	orr	r0, lr, #4
   2ede0:	ldr	lr, [sp, #44]	; 0x2c
   2ede4:	str	r0, [sp, #28]
   2ede8:	lsl	r0, lr, #3
   2edec:	str	r0, [sp, #36]	; 0x24
   2edf0:	ldr	r0, [sp, #56]	; 0x38
   2edf4:	ldr	r1, [r0], #4
   2edf8:	str	r0, [sp, #56]	; 0x38
   2edfc:	mov	r0, #0
   2ee00:	str	r1, [sp, #32]
   2ee04:	str	r0, [sp, #52]	; 0x34
   2ee08:	cmp	lr, #1
   2ee0c:	blt	2ee40 <GetDataSlab+0xc924>
   2ee10:	ldr	r0, [sp, #32]
   2ee14:	ldr	r8, [sp, #44]	; 0x2c
   2ee18:	ldr	sl, [sp, #60]	; 0x3c
   2ee1c:	add	r5, r4, r0, lsl #3
   2ee20:	vldr	d16, [r5]
   2ee24:	vmov	r0, r1, d16
   2ee28:	bl	49854 <__aeabi_d2lz>
   2ee2c:	strd	r0, [sl]
   2ee30:	subs	r8, r8, #1
   2ee34:	add	sl, sl, #8
   2ee38:	add	r5, r5, #8
   2ee3c:	bne	2ee20 <GetDataSlab+0xc904>
   2ee40:	ldr	r0, [sp, #40]	; 0x28
   2ee44:	add	r4, r4, r0, lsl #3
   2ee48:	add	r9, r9, r0
   2ee4c:	ldr	r0, [fp, #24]
   2ee50:	cmp	r0, #2
   2ee54:	blt	2ef04 <GetDataSlab+0xc9e8>
   2ee58:	ldr	ip, [sp, #60]	; 0x3c
   2ee5c:	ldr	lr, [sp, #44]	; 0x2c
   2ee60:	mov	r1, #0
   2ee64:	mov	r8, #0
   2ee68:	mov	r0, r1
   2ee6c:	ldr	r1, [r7, r1, lsl #2]
   2ee70:	add	r1, r1, #1
   2ee74:	str	r1, [r7, r0, lsl #2]
   2ee78:	ldr	r2, [r6, r0, lsl #2]
   2ee7c:	sdiv	r3, r1, r2
   2ee80:	mls	r1, r3, r2, r1
   2ee84:	cmp	r1, #0
   2ee88:	bne	2ef10 <GetDataSlab+0xc9f4>
   2ee8c:	add	r3, sp, #64	; 0x40
   2ee90:	str	r8, [r7, r0, lsl #2]
   2ee94:	add	r1, r3, r0, lsl #2
   2ee98:	ldr	r1, [r1, #4]
   2ee9c:	sdiv	r2, r9, r1
   2eea0:	mls	r2, r2, r1, r9
   2eea4:	cmp	r2, #0
   2eea8:	beq	2eec8 <GetDataSlab+0xc9ac>
   2eeac:	ldr	r5, [sp, #56]	; 0x38
   2eeb0:	ldr	r3, [r3, r0, lsl #2]
   2eeb4:	sub	r1, r1, r2
   2eeb8:	ldr	r5, [r5, r0, lsl #2]
   2eebc:	mla	r1, r5, r3, r1
   2eec0:	add	r9, r1, r9
   2eec4:	b	2eee8 <GetDataSlab+0xc9cc>
   2eec8:	ldr	r1, [sp, #56]	; 0x38
   2eecc:	ldr	r1, [r1, r0, lsl #2]
   2eed0:	cmp	r1, #0
   2eed4:	beq	2eeec <GetDataSlab+0xc9d0>
   2eed8:	add	r2, sp, #64	; 0x40
   2eedc:	ldr	r2, [r2, r0, lsl #2]
   2eee0:	mla	r9, r2, r1, r9
   2eee4:	mul	r1, r2, r1
   2eee8:	add	r4, r4, r1, lsl #3
   2eeec:	ldr	r2, [fp, #24]
   2eef0:	add	r1, r0, #1
   2eef4:	add	r0, r0, #2
   2eef8:	cmp	r0, r2
   2eefc:	blt	2ee68 <GetDataSlab+0xc94c>
   2ef00:	b	2ef20 <GetDataSlab+0xca04>
   2ef04:	ldr	ip, [sp, #60]	; 0x3c
   2ef08:	ldr	lr, [sp, #44]	; 0x2c
   2ef0c:	b	2ef20 <GetDataSlab+0xca04>
   2ef10:	ldr	r1, [sp, #28]
   2ef14:	ldr	r0, [r1, r0, lsl #2]
   2ef18:	add	r4, r4, r0, lsl #3
   2ef1c:	add	r9, r0, r9
   2ef20:	ldr	r2, [sp, #52]	; 0x34
   2ef24:	ldr	r0, [sp, #36]	; 0x24
   2ef28:	ldr	r1, [sp, #48]	; 0x30
   2ef2c:	add	r2, r2, lr
   2ef30:	add	ip, ip, r0
   2ef34:	mov	r0, #0
   2ef38:	cmp	r2, r1
   2ef3c:	str	ip, [sp, #60]	; 0x3c
   2ef40:	str	r2, [sp, #52]	; 0x34
   2ef44:	blt	2ee08 <GetDataSlab+0xc8ec>
   2ef48:	b	242ac <GetDataSlab+0x1d90>
   2ef4c:	ldr	r0, [sl]
   2ef50:	mov	r1, r9
   2ef54:	mov	sl, #0
   2ef58:	add	r4, sp, #64	; 0x40
   2ef5c:	str	r3, [sp, #48]	; 0x30
   2ef60:	str	r0, [sp, #16]
   2ef64:	sub	r0, r0, #1
   2ef68:	str	r0, [fp, #-72]	; 0xffffffb8
   2ef6c:	ldr	r0, [r9]
   2ef70:	sub	r9, fp, #72	; 0x48
   2ef74:	str	r0, [sp, #64]	; 0x40
   2ef78:	str	r0, [sp, #44]	; 0x2c
   2ef7c:	ldr	r0, [fp, #24]
   2ef80:	ldr	r1, [r8]
   2ef84:	cmp	r0, #2
   2ef88:	str	r1, [sp, #40]	; 0x28
   2ef8c:	str	r1, [sp, #56]	; 0x38
   2ef90:	blt	2f034 <GetDataSlab+0xcb18>
   2ef94:	ldr	r7, [sp, #44]	; 0x2c
   2ef98:	ldr	r1, [sp, #40]	; 0x28
   2ef9c:	ldr	r3, [fp, #8]
   2efa0:	mov	r0, #1
   2efa4:	mov	sl, #0
   2efa8:	mov	r6, r7
   2efac:	str	r1, [sp, #56]	; 0x38
   2efb0:	ldr	r1, [fp, #16]
   2efb4:	ldr	r2, [r1, r0, lsl #2]
   2efb8:	ldr	r1, [fp, #8]
   2efbc:	str	r7, [r4, r0, lsl #2]
   2efc0:	sub	r5, r2, #1
   2efc4:	mov	r2, #0
   2efc8:	str	r5, [r9, r0, lsl #2]
   2efcc:	ldr	r8, [r1, r0, lsl #2]
   2efd0:	mov	r4, r8
   2efd4:	mul	r7, r4, r7
   2efd8:	ldr	r4, [r3, -r2, lsl #2]
   2efdc:	add	r2, r2, #1
   2efe0:	cmp	r0, r2
   2efe4:	mul	r5, r5, r4
   2efe8:	bne	2efd4 <GetDataSlab+0xcab8>
   2efec:	add	r4, sp, #64	; 0x40
   2eff0:	sub	r9, fp, #72	; 0x48
   2eff4:	ldr	r1, [fp, #20]
   2eff8:	add	r3, r3, #4
   2effc:	str	r7, [r4, r0, lsl #2]
   2f000:	str	r5, [r9, r0, lsl #2]
   2f004:	ldr	r2, [ip, r0, lsl #2]
   2f008:	mla	sl, r2, r6, sl
   2f00c:	ldr	r2, [r1, r0, lsl #2]
   2f010:	ldr	r1, [sp, #56]	; 0x38
   2f014:	add	r0, r0, #1
   2f018:	mov	r6, r7
   2f01c:	mov	r7, r8
   2f020:	mul	r1, r2, r1
   2f024:	str	r1, [sp, #56]	; 0x38
   2f028:	ldr	r1, [fp, #24]
   2f02c:	cmp	r0, r1
   2f030:	bne	2efb0 <GetDataSlab+0xca94>
   2f034:	ldr	r0, [sp, #52]	; 0x34
   2f038:	ldr	r5, [sp, #16]
   2f03c:	add	r3, r0, sl, lsl #3
   2f040:	cmp	r5, #1
   2f044:	bne	399cc <GetDataSlab+0x174b0>
   2f048:	ldr	r0, [sp, #56]	; 0x38
   2f04c:	ldr	r2, [sp, #40]	; 0x28
   2f050:	cmp	r0, #1
   2f054:	ldr	r0, [fp, #20]
   2f058:	blt	39b5c <GetDataSlab+0x17640>
   2f05c:	mov	r4, ip
   2f060:	add	ip, r0, #4
   2f064:	add	r0, sp, #104	; 0x68
   2f068:	mov	r1, lr
   2f06c:	mov	lr, #0
   2f070:	orr	r6, r0, #4
   2f074:	sub	r0, fp, #72	; 0x48
   2f078:	orr	r0, r0, #4
   2f07c:	str	r0, [sp, #28]
   2f080:	lsl	r0, r2, #3
   2f084:	str	r0, [sp, #36]	; 0x24
   2f088:	ldr	r0, [r4], #4
   2f08c:	str	r0, [sp, #32]
   2f090:	cmp	r2, #1
   2f094:	blt	2f0c0 <GetDataSlab+0xcba4>
   2f098:	ldr	r0, [sp, #32]
   2f09c:	ldr	r5, [sp, #40]	; 0x28
   2f0a0:	add	r2, r3, r0, lsl #3
   2f0a4:	mov	r0, r1
   2f0a8:	ldrd	r8, [r2]
   2f0ac:	subs	r5, r5, #1
   2f0b0:	add	r2, r2, #8
   2f0b4:	strd	r8, [r0]
   2f0b8:	add	r0, r0, #8
   2f0bc:	bne	2f0a8 <GetDataSlab+0xcb8c>
   2f0c0:	ldr	r0, [sp, #44]	; 0x2c
   2f0c4:	mov	r9, r1
   2f0c8:	add	r3, r3, r0, lsl #3
   2f0cc:	add	sl, sl, r0
   2f0d0:	ldr	r0, [fp, #24]
   2f0d4:	cmp	r0, #2
   2f0d8:	blt	2f188 <GetDataSlab+0xcc6c>
   2f0dc:	mov	r2, #0
   2f0e0:	mov	r1, #0
   2f0e4:	ldr	r0, [r6, r2, lsl #2]
   2f0e8:	mov	r8, r2
   2f0ec:	add	r0, r0, #1
   2f0f0:	str	r0, [r6, r2, lsl #2]
   2f0f4:	ldr	r2, [ip, r2, lsl #2]
   2f0f8:	sdiv	r5, r0, r2
   2f0fc:	mls	r0, r5, r2, r0
   2f100:	cmp	r0, #0
   2f104:	bne	2f178 <GetDataSlab+0xcc5c>
   2f108:	add	r5, sp, #64	; 0x40
   2f10c:	str	r1, [r6, r8, lsl #2]
   2f110:	add	r0, r5, r8, lsl #2
   2f114:	ldr	r0, [r0, #4]
   2f118:	sdiv	r2, sl, r0
   2f11c:	mls	r2, r2, r0, sl
   2f120:	cmp	r2, #0
   2f124:	beq	2f140 <GetDataSlab+0xcc24>
   2f128:	ldr	r5, [r5, r8, lsl #2]
   2f12c:	ldr	r7, [r4, r8, lsl #2]
   2f130:	sub	r0, r0, r2
   2f134:	mla	r0, r7, r5, r0
   2f138:	add	sl, r0, sl
   2f13c:	b	2f15c <GetDataSlab+0xcc40>
   2f140:	ldr	r0, [r4, r8, lsl #2]
   2f144:	cmp	r0, #0
   2f148:	beq	2f160 <GetDataSlab+0xcc44>
   2f14c:	add	r2, sp, #64	; 0x40
   2f150:	ldr	r2, [r2, r8, lsl #2]
   2f154:	mla	sl, r2, r0, sl
   2f158:	mul	r0, r2, r0
   2f15c:	add	r3, r3, r0, lsl #3
   2f160:	ldr	r5, [fp, #24]
   2f164:	add	r0, r8, #2
   2f168:	add	r2, r8, #1
   2f16c:	cmp	r0, r5
   2f170:	blt	2f0e4 <GetDataSlab+0xcbc8>
   2f174:	b	2f188 <GetDataSlab+0xcc6c>
   2f178:	ldr	r0, [sp, #28]
   2f17c:	ldr	r0, [r0, r8, lsl #2]
   2f180:	add	r3, r3, r0, lsl #3
   2f184:	add	sl, r0, sl
   2f188:	ldr	r0, [sp, #36]	; 0x24
   2f18c:	mov	r1, r9
   2f190:	ldr	r2, [sp, #40]	; 0x28
   2f194:	add	r1, r9, r0
   2f198:	ldr	r0, [sp, #56]	; 0x38
   2f19c:	add	lr, lr, r2
   2f1a0:	cmp	lr, r0
   2f1a4:	blt	2f090 <GetDataSlab+0xcb74>
   2f1a8:	b	39b5c <GetDataSlab+0x17640>
   2f1ac:	mov	r1, r8
   2f1b0:	ldr	r8, [sl]
   2f1b4:	mov	r3, #0
   2f1b8:	add	r4, sp, #64	; 0x40
   2f1bc:	sub	lr, fp, #72	; 0x48
   2f1c0:	sub	r0, r8, #1
   2f1c4:	str	r0, [fp, #-72]	; 0xffffffb8
   2f1c8:	ldr	r0, [r9]
   2f1cc:	str	r0, [sp, #64]	; 0x40
   2f1d0:	str	r0, [sp, #44]	; 0x2c
   2f1d4:	ldr	r0, [fp, #24]
   2f1d8:	ldr	r1, [r1]
   2f1dc:	cmp	r0, #2
   2f1e0:	str	r1, [sp, #48]	; 0x30
   2f1e4:	str	r1, [sp, #56]	; 0x38
   2f1e8:	blt	2f284 <GetDataSlab+0xcd68>
   2f1ec:	ldr	r2, [sp, #44]	; 0x2c
   2f1f0:	ldr	r5, [sp, #48]	; 0x30
   2f1f4:	mov	r0, #1
   2f1f8:	mov	r3, #0
   2f1fc:	mov	r1, r9
   2f200:	mov	r7, r2
   2f204:	str	r5, [sp, #56]	; 0x38
   2f208:	ldr	r6, [sl, r0, lsl #2]
   2f20c:	str	r2, [r4, r0, lsl #2]
   2f210:	mov	r4, #0
   2f214:	sub	r5, r6, #1
   2f218:	str	r5, [lr, r0, lsl #2]
   2f21c:	ldr	sl, [r9, r0, lsl #2]
   2f220:	mov	r6, sl
   2f224:	mul	r2, r6, r2
   2f228:	ldr	r6, [r1, -r4, lsl #2]
   2f22c:	add	r4, r4, #1
   2f230:	cmp	r0, r4
   2f234:	mul	r5, r5, r6
   2f238:	bne	2f224 <GetDataSlab+0xcd08>
   2f23c:	add	r4, sp, #64	; 0x40
   2f240:	str	r5, [lr, r0, lsl #2]
   2f244:	ldr	r5, [sp, #56]	; 0x38
   2f248:	add	r1, r1, #4
   2f24c:	str	r2, [r4, r0, lsl #2]
   2f250:	ldr	r6, [ip, r0, lsl #2]
   2f254:	mla	r3, r6, r7, r3
   2f258:	ldr	r7, [fp, #20]
   2f25c:	ldr	r7, [r7, r0, lsl #2]
   2f260:	add	r0, r0, #1
   2f264:	mul	r5, r7, r5
   2f268:	ldr	r7, [fp, #24]
   2f26c:	str	r5, [sp, #56]	; 0x38
   2f270:	cmp	r0, r7
   2f274:	mov	r7, r2
   2f278:	mov	r2, sl
   2f27c:	ldr	sl, [fp, #16]
   2f280:	bne	2f208 <GetDataSlab+0xccec>
   2f284:	ldr	r0, [sp, #52]	; 0x34
   2f288:	cmp	r8, #1
   2f28c:	add	r5, r0, r3
   2f290:	bne	39dc4 <GetDataSlab+0x178a8>
   2f294:	ldr	r0, [sp, #56]	; 0x38
   2f298:	cmp	r0, #1
   2f29c:	blt	242a8 <GetDataSlab+0x1d8c>
   2f2a0:	ldr	r0, [fp, #20]
   2f2a4:	mov	r1, lr
   2f2a8:	add	lr, ip, #4
   2f2ac:	mov	r9, #0
   2f2b0:	mov	r8, #0
   2f2b4:	add	sl, r0, #4
   2f2b8:	add	r0, sp, #104	; 0x68
   2f2bc:	orr	r6, r0, #4
   2f2c0:	orr	r0, r1, #4
   2f2c4:	ldr	r1, [sp, #48]	; 0x30
   2f2c8:	str	r0, [sp, #40]	; 0x28
   2f2cc:	lsl	r0, r1, #3
   2f2d0:	str	r0, [sp, #52]	; 0x34
   2f2d4:	cmp	r1, #1
   2f2d8:	blt	2f304 <GetDataSlab+0xcde8>
   2f2dc:	ldr	r0, [fp, #12]
   2f2e0:	ldr	ip, [sp, #48]	; 0x30
   2f2e4:	ldr	r4, [sp, #60]	; 0x3c
   2f2e8:	ldr	r0, [r0]
   2f2ec:	add	r0, r5, r0
   2f2f0:	ldrb	r2, [r0], #1
   2f2f4:	subs	ip, ip, #1
   2f2f8:	stm	r4, {r2, r9}
   2f2fc:	add	r4, r4, #8
   2f300:	bne	2f2f0 <GetDataSlab+0xcdd4>
   2f304:	ldr	r0, [sp, #44]	; 0x2c
   2f308:	add	ip, sp, #64	; 0x40
   2f30c:	add	r5, r5, r0
   2f310:	add	r3, r3, r0
   2f314:	ldr	r0, [fp, #24]
   2f318:	cmp	r0, #2
   2f31c:	blt	2f3bc <GetDataSlab+0xcea0>
   2f320:	mov	r4, #0
   2f324:	ldr	r2, [r6, r4, lsl #2]
   2f328:	mov	r0, r4
   2f32c:	add	r2, r2, #1
   2f330:	str	r2, [r6, r4, lsl #2]
   2f334:	ldr	r4, [sl, r4, lsl #2]
   2f338:	sdiv	r7, r2, r4
   2f33c:	mls	r2, r7, r4, r2
   2f340:	cmp	r2, #0
   2f344:	bne	2f3ac <GetDataSlab+0xce90>
   2f348:	add	r2, ip, r0, lsl #2
   2f34c:	str	r9, [r6, r0, lsl #2]
   2f350:	ldr	r4, [r2, #4]
   2f354:	sdiv	r2, r3, r4
   2f358:	mls	r2, r2, r4, r3
   2f35c:	cmp	r2, #0
   2f360:	beq	2f380 <GetDataSlab+0xce64>
   2f364:	ldr	r7, [ip, r0, lsl #2]
   2f368:	ldr	r1, [lr, r0, lsl #2]
   2f36c:	sub	r2, r4, r2
   2f370:	mla	r1, r1, r7, r2
   2f374:	add	r3, r1, r3
   2f378:	add	r5, r5, r1
   2f37c:	b	2f394 <GetDataSlab+0xce78>
   2f380:	ldr	r2, [lr, r0, lsl #2]
   2f384:	cmp	r2, #0
   2f388:	ldrne	r1, [ip, r0, lsl #2]
   2f38c:	mlane	r3, r1, r2, r3
   2f390:	mlane	r5, r1, r2, r5
   2f394:	ldr	r1, [fp, #24]
   2f398:	add	r4, r0, #1
   2f39c:	add	r0, r0, #2
   2f3a0:	cmp	r0, r1
   2f3a4:	blt	2f324 <GetDataSlab+0xce08>
   2f3a8:	b	2f3bc <GetDataSlab+0xcea0>
   2f3ac:	ldr	r1, [sp, #40]	; 0x28
   2f3b0:	ldr	r0, [r1, r0, lsl #2]
   2f3b4:	add	r5, r5, r0
   2f3b8:	add	r3, r0, r3
   2f3bc:	ldr	r0, [sp, #60]	; 0x3c
   2f3c0:	ldr	r1, [sp, #52]	; 0x34
   2f3c4:	ldr	r2, [sp, #56]	; 0x38
   2f3c8:	add	r0, r0, r1
   2f3cc:	ldr	r1, [sp, #48]	; 0x30
   2f3d0:	str	r0, [sp, #60]	; 0x3c
   2f3d4:	mov	r0, #0
   2f3d8:	add	r8, r8, r1
   2f3dc:	cmp	r8, r2
   2f3e0:	blt	2f2d4 <GetDataSlab+0xcdb8>
   2f3e4:	b	242ac <GetDataSlab+0x1d90>
   2f3e8:	mov	r1, r8
   2f3ec:	ldr	r8, [sl]
   2f3f0:	add	r2, sp, #64	; 0x40
   2f3f4:	sub	r3, fp, #72	; 0x48
   2f3f8:	sub	r0, r8, #1
   2f3fc:	str	r0, [fp, #-72]	; 0xffffffb8
   2f400:	ldr	r0, [r9]
   2f404:	mov	r9, #0
   2f408:	str	r0, [sp, #64]	; 0x40
   2f40c:	str	r0, [sp, #40]	; 0x28
   2f410:	ldr	r0, [fp, #24]
   2f414:	ldr	r1, [r1]
   2f418:	cmp	r0, #2
   2f41c:	str	r1, [sp, #44]	; 0x2c
   2f420:	str	r1, [sp, #48]	; 0x30
   2f424:	blt	2f4c4 <GetDataSlab+0xcfa8>
   2f428:	ldr	r6, [sp, #40]	; 0x28
   2f42c:	ldr	r0, [sp, #44]	; 0x2c
   2f430:	ldr	r7, [fp, #8]
   2f434:	mov	r1, #1
   2f438:	mov	r9, #0
   2f43c:	mov	r5, r6
   2f440:	str	r0, [sp, #48]	; 0x30
   2f444:	ldr	r0, [sl, r1, lsl #2]
   2f448:	str	r6, [r2, r1, lsl #2]
   2f44c:	ldr	r2, [fp, #8]
   2f450:	sub	r0, r0, #1
   2f454:	str	r0, [r3, r1, lsl #2]
   2f458:	mov	r3, #0
   2f45c:	ldr	lr, [r2, r1, lsl #2]
   2f460:	mov	r4, lr
   2f464:	mul	r6, r4, r6
   2f468:	ldr	r4, [r7, -r3, lsl #2]
   2f46c:	add	r3, r3, #1
   2f470:	cmp	r1, r3
   2f474:	mul	r0, r0, r4
   2f478:	bne	2f464 <GetDataSlab+0xcf48>
   2f47c:	add	r2, sp, #64	; 0x40
   2f480:	sub	r3, fp, #72	; 0x48
   2f484:	ldr	r4, [sp, #48]	; 0x30
   2f488:	add	r7, r7, #4
   2f48c:	str	r6, [r2, r1, lsl #2]
   2f490:	str	r0, [r3, r1, lsl #2]
   2f494:	ldr	r0, [ip, r1, lsl #2]
   2f498:	mla	r9, r0, r5, r9
   2f49c:	ldr	r0, [fp, #20]
   2f4a0:	mov	r5, r6
   2f4a4:	mov	r6, lr
   2f4a8:	ldr	r0, [r0, r1, lsl #2]
   2f4ac:	add	r1, r1, #1
   2f4b0:	mul	r4, r0, r4
   2f4b4:	ldr	r0, [fp, #24]
   2f4b8:	str	r4, [sp, #48]	; 0x30
   2f4bc:	cmp	r1, r0
   2f4c0:	bne	2f444 <GetDataSlab+0xcf28>
   2f4c4:	ldr	r0, [sp, #52]	; 0x34
   2f4c8:	cmp	r8, #1
   2f4cc:	add	lr, r0, r9, lsl #1
   2f4d0:	bne	39f64 <GetDataSlab+0x17a48>
   2f4d4:	ldr	r0, [sp, #48]	; 0x30
   2f4d8:	ldr	r1, [sp, #44]	; 0x2c
   2f4dc:	cmp	r0, #1
   2f4e0:	blt	242a8 <GetDataSlab+0x1d8c>
   2f4e4:	ldr	r0, [fp, #20]
   2f4e8:	mov	sl, #0
   2f4ec:	add	r8, r0, #4
   2f4f0:	add	r0, sp, #104	; 0x68
   2f4f4:	orr	r6, r0, #4
   2f4f8:	sub	r0, fp, #72	; 0x48
   2f4fc:	orr	r0, r0, #4
   2f500:	str	r0, [sp, #32]
   2f504:	lsl	r0, r1, #3
   2f508:	str	r0, [sp, #52]	; 0x34
   2f50c:	ldr	r0, [ip], #4
   2f510:	str	r0, [sp, #36]	; 0x24
   2f514:	str	ip, [sp, #56]	; 0x38
   2f518:	cmp	r1, #1
   2f51c:	blt	2f548 <GetDataSlab+0xd02c>
   2f520:	ldr	r0, [sp, #36]	; 0x24
   2f524:	ldr	r3, [sp, #60]	; 0x3c
   2f528:	mov	ip, r1
   2f52c:	add	r0, lr, r0, lsl #1
   2f530:	ldrsh	r4, [r0], #2
   2f534:	subs	ip, ip, #1
   2f538:	asr	r5, r4, #31
   2f53c:	strd	r4, [r3]
   2f540:	add	r3, r3, #8
   2f544:	bne	2f530 <GetDataSlab+0xd014>
   2f548:	ldr	r0, [sp, #40]	; 0x28
   2f54c:	add	r7, sp, #64	; 0x40
   2f550:	add	lr, lr, r0, lsl #1
   2f554:	add	r9, r9, r0
   2f558:	ldr	r0, [fp, #24]
   2f55c:	cmp	r0, #2
   2f560:	blt	2f60c <GetDataSlab+0xd0f0>
   2f564:	ldr	r2, [sp, #56]	; 0x38
   2f568:	mov	r3, #0
   2f56c:	mov	ip, #0
   2f570:	mov	r0, r3
   2f574:	ldr	r3, [r6, r3, lsl #2]
   2f578:	add	r3, r3, #1
   2f57c:	str	r3, [r6, r0, lsl #2]
   2f580:	ldr	r5, [r8, r0, lsl #2]
   2f584:	sdiv	r4, r3, r5
   2f588:	mls	r3, r4, r5, r3
   2f58c:	cmp	r3, #0
   2f590:	bne	2f5fc <GetDataSlab+0xd0e0>
   2f594:	add	r3, r7, r0, lsl #2
   2f598:	str	ip, [r6, r0, lsl #2]
   2f59c:	ldr	r3, [r3, #4]
   2f5a0:	sdiv	r5, r9, r3
   2f5a4:	mls	r4, r5, r3, r9
   2f5a8:	cmp	r4, #0
   2f5ac:	beq	2f5c8 <GetDataSlab+0xd0ac>
   2f5b0:	ldr	r5, [r7, r0, lsl #2]
   2f5b4:	ldr	r1, [r2, r0, lsl #2]
   2f5b8:	sub	r3, r3, r4
   2f5bc:	mla	r1, r1, r5, r3
   2f5c0:	add	r9, r1, r9
   2f5c4:	b	2f5e0 <GetDataSlab+0xd0c4>
   2f5c8:	ldr	r3, [r2, r0, lsl #2]
   2f5cc:	cmp	r3, #0
   2f5d0:	beq	2f5e4 <GetDataSlab+0xd0c8>
   2f5d4:	ldr	r1, [r7, r0, lsl #2]
   2f5d8:	mla	r9, r1, r3, r9
   2f5dc:	mul	r1, r1, r3
   2f5e0:	add	lr, lr, r1, lsl #1
   2f5e4:	ldr	r1, [fp, #24]
   2f5e8:	add	r3, r0, #1
   2f5ec:	add	r0, r0, #2
   2f5f0:	cmp	r0, r1
   2f5f4:	blt	2f570 <GetDataSlab+0xd054>
   2f5f8:	b	2f60c <GetDataSlab+0xd0f0>
   2f5fc:	ldr	r1, [sp, #32]
   2f600:	ldr	r0, [r1, r0, lsl #2]
   2f604:	add	lr, lr, r0, lsl #1
   2f608:	add	r9, r0, r9
   2f60c:	ldr	r0, [sp, #60]	; 0x3c
   2f610:	ldr	r1, [sp, #52]	; 0x34
   2f614:	ldr	r2, [sp, #48]	; 0x30
   2f618:	add	r0, r0, r1
   2f61c:	ldr	r1, [sp, #44]	; 0x2c
   2f620:	str	r0, [sp, #60]	; 0x3c
   2f624:	mov	r0, #0
   2f628:	add	sl, sl, r1
   2f62c:	cmp	sl, r2
   2f630:	blt	2f518 <GetDataSlab+0xcffc>
   2f634:	b	242ac <GetDataSlab+0x1d90>
   2f638:	ldr	r0, [sl]
   2f63c:	mov	r2, #0
   2f640:	add	r3, sp, #64	; 0x40
   2f644:	sub	lr, fp, #72	; 0x48
   2f648:	str	r0, [sp, #56]	; 0x38
   2f64c:	sub	r0, r0, #1
   2f650:	str	r0, [fp, #-72]	; 0xffffffb8
   2f654:	ldr	r0, [r9]
   2f658:	str	r0, [sp, #64]	; 0x40
   2f65c:	str	r0, [sp, #40]	; 0x28
   2f660:	ldr	r0, [fp, #24]
   2f664:	ldr	r1, [r8]
   2f668:	cmp	r0, #2
   2f66c:	str	r1, [sp, #44]	; 0x2c
   2f670:	str	r1, [sp, #48]	; 0x30
   2f674:	blt	2f70c <GetDataSlab+0xd1f0>
   2f678:	ldr	r4, [sp, #40]	; 0x28
   2f67c:	ldr	r0, [sp, #44]	; 0x2c
   2f680:	mov	r1, #1
   2f684:	mov	r2, #0
   2f688:	mov	r7, r9
   2f68c:	mov	r5, r4
   2f690:	str	r0, [sp, #48]	; 0x30
   2f694:	ldr	r0, [sl, r1, lsl #2]
   2f698:	str	r4, [r3, r1, lsl #2]
   2f69c:	mov	r3, #0
   2f6a0:	sub	r0, r0, #1
   2f6a4:	str	r0, [lr, r1, lsl #2]
   2f6a8:	ldr	r9, [r9, r1, lsl #2]
   2f6ac:	mov	r6, r9
   2f6b0:	mul	r4, r6, r4
   2f6b4:	ldr	r6, [r7, -r3, lsl #2]
   2f6b8:	add	r3, r3, #1
   2f6bc:	cmp	r1, r3
   2f6c0:	mul	r0, r0, r6
   2f6c4:	bne	2f6b0 <GetDataSlab+0xd194>
   2f6c8:	add	r3, sp, #64	; 0x40
   2f6cc:	str	r0, [lr, r1, lsl #2]
   2f6d0:	add	r7, r7, #4
   2f6d4:	str	r4, [r3, r1, lsl #2]
   2f6d8:	ldr	r0, [ip, r1, lsl #2]
   2f6dc:	mla	r2, r0, r5, r2
   2f6e0:	ldr	r0, [r8, r1, lsl #2]
   2f6e4:	ldr	r5, [sp, #48]	; 0x30
   2f6e8:	add	r1, r1, #1
   2f6ec:	mul	r5, r0, r5
   2f6f0:	ldr	r0, [fp, #24]
   2f6f4:	str	r5, [sp, #48]	; 0x30
   2f6f8:	mov	r5, r4
   2f6fc:	mov	r4, r9
   2f700:	ldr	r9, [fp, #8]
   2f704:	cmp	r1, r0
   2f708:	bne	2f694 <GetDataSlab+0xd178>
   2f70c:	ldr	r0, [sp, #52]	; 0x34
   2f710:	ldr	r5, [sp, #56]	; 0x38
   2f714:	add	lr, r0, r2, lsl #1
   2f718:	cmp	r5, #1
   2f71c:	bne	3a0f0 <GetDataSlab+0x17bd4>
   2f720:	ldr	r0, [sp, #48]	; 0x30
   2f724:	ldr	r1, [sp, #44]	; 0x2c
   2f728:	cmp	r0, #1
   2f72c:	blt	242a8 <GetDataSlab+0x1d8c>
   2f730:	add	r0, sp, #104	; 0x68
   2f734:	add	sl, r8, #4
   2f738:	mov	r9, #0
   2f73c:	mov	r8, #0
   2f740:	orr	r7, r0, #4
   2f744:	sub	r0, fp, #72	; 0x48
   2f748:	orr	r0, r0, #4
   2f74c:	str	r0, [sp, #32]
   2f750:	lsl	r0, r1, #3
   2f754:	str	r0, [sp, #52]	; 0x34
   2f758:	ldr	r0, [ip], #4
   2f75c:	str	ip, [sp, #56]	; 0x38
   2f760:	str	r0, [sp, #36]	; 0x24
   2f764:	ldr	r5, [sp, #56]	; 0x38
   2f768:	cmp	r1, #1
   2f76c:	blt	2f794 <GetDataSlab+0xd278>
   2f770:	ldr	r0, [sp, #36]	; 0x24
   2f774:	ldr	ip, [sp, #44]	; 0x2c
   2f778:	ldr	r3, [sp, #60]	; 0x3c
   2f77c:	add	r0, lr, r0, lsl #1
   2f780:	ldrh	r4, [r0], #2
   2f784:	subs	ip, ip, #1
   2f788:	stm	r3, {r4, r9}
   2f78c:	add	r3, r3, #8
   2f790:	bne	2f780 <GetDataSlab+0xd264>
   2f794:	ldr	r0, [sp, #40]	; 0x28
   2f798:	add	ip, sp, #64	; 0x40
   2f79c:	add	lr, lr, r0, lsl #1
   2f7a0:	add	r2, r2, r0
   2f7a4:	ldr	r0, [fp, #24]
   2f7a8:	cmp	r0, #2
   2f7ac:	blt	2f850 <GetDataSlab+0xd334>
   2f7b0:	mov	r3, #0
   2f7b4:	mov	r0, r3
   2f7b8:	ldr	r3, [r7, r3, lsl #2]
   2f7bc:	add	r3, r3, #1
   2f7c0:	str	r3, [r7, r0, lsl #2]
   2f7c4:	ldr	r4, [sl, r0, lsl #2]
   2f7c8:	sdiv	r6, r3, r4
   2f7cc:	mls	r3, r6, r4, r3
   2f7d0:	cmp	r3, #0
   2f7d4:	bne	2f840 <GetDataSlab+0xd324>
   2f7d8:	add	r3, ip, r0, lsl #2
   2f7dc:	str	r9, [r7, r0, lsl #2]
   2f7e0:	ldr	r3, [r3, #4]
   2f7e4:	sdiv	r6, r2, r3
   2f7e8:	mls	r4, r6, r3, r2
   2f7ec:	cmp	r4, #0
   2f7f0:	beq	2f80c <GetDataSlab+0xd2f0>
   2f7f4:	ldr	r6, [ip, r0, lsl #2]
   2f7f8:	ldr	r1, [r5, r0, lsl #2]
   2f7fc:	sub	r3, r3, r4
   2f800:	mla	r1, r1, r6, r3
   2f804:	add	r2, r1, r2
   2f808:	b	2f824 <GetDataSlab+0xd308>
   2f80c:	ldr	r3, [r5, r0, lsl #2]
   2f810:	cmp	r3, #0
   2f814:	beq	2f828 <GetDataSlab+0xd30c>
   2f818:	ldr	r1, [ip, r0, lsl #2]
   2f81c:	mla	r2, r1, r3, r2
   2f820:	mul	r1, r1, r3
   2f824:	add	lr, lr, r1, lsl #1
   2f828:	ldr	r1, [fp, #24]
   2f82c:	add	r3, r0, #1
   2f830:	add	r0, r0, #2
   2f834:	cmp	r0, r1
   2f838:	blt	2f7b4 <GetDataSlab+0xd298>
   2f83c:	b	2f850 <GetDataSlab+0xd334>
   2f840:	ldr	r1, [sp, #32]
   2f844:	ldr	r0, [r1, r0, lsl #2]
   2f848:	add	lr, lr, r0, lsl #1
   2f84c:	add	r2, r0, r2
   2f850:	ldr	r0, [sp, #60]	; 0x3c
   2f854:	ldr	r1, [sp, #52]	; 0x34
   2f858:	ldr	r3, [sp, #48]	; 0x30
   2f85c:	add	r0, r0, r1
   2f860:	ldr	r1, [sp, #44]	; 0x2c
   2f864:	str	r0, [sp, #60]	; 0x3c
   2f868:	mov	r0, #0
   2f86c:	add	r8, r8, r1
   2f870:	cmp	r8, r3
   2f874:	blt	2f768 <GetDataSlab+0xd24c>
   2f878:	b	242ac <GetDataSlab+0x1d90>
   2f87c:	mov	r1, r8
   2f880:	ldr	r8, [sl]
   2f884:	mov	r3, #0
   2f888:	add	r2, sp, #64	; 0x40
   2f88c:	sub	lr, fp, #72	; 0x48
   2f890:	sub	r0, r8, #1
   2f894:	str	r0, [fp, #-72]	; 0xffffffb8
   2f898:	ldr	r0, [r9]
   2f89c:	str	r0, [sp, #64]	; 0x40
   2f8a0:	str	r0, [sp, #44]	; 0x2c
   2f8a4:	ldr	r0, [fp, #24]
   2f8a8:	ldr	r1, [r1]
   2f8ac:	cmp	r0, #2
   2f8b0:	str	r1, [sp, #48]	; 0x30
   2f8b4:	str	r1, [sp, #56]	; 0x38
   2f8b8:	blt	2f954 <GetDataSlab+0xd438>
   2f8bc:	ldr	r6, [sp, #44]	; 0x2c
   2f8c0:	ldr	r0, [sp, #48]	; 0x30
   2f8c4:	mov	r1, #1
   2f8c8:	mov	r3, #0
   2f8cc:	mov	r7, r9
   2f8d0:	mov	r5, r6
   2f8d4:	str	r0, [sp, #56]	; 0x38
   2f8d8:	ldr	r0, [sl, r1, lsl #2]
   2f8dc:	str	r6, [r2, r1, lsl #2]
   2f8e0:	mov	r2, #0
   2f8e4:	sub	r0, r0, #1
   2f8e8:	str	r0, [lr, r1, lsl #2]
   2f8ec:	ldr	sl, [r9, r1, lsl #2]
   2f8f0:	mov	r4, sl
   2f8f4:	mul	r6, r4, r6
   2f8f8:	ldr	r4, [r7, -r2, lsl #2]
   2f8fc:	add	r2, r2, #1
   2f900:	cmp	r1, r2
   2f904:	mul	r0, r0, r4
   2f908:	bne	2f8f4 <GetDataSlab+0xd3d8>
   2f90c:	add	r2, sp, #64	; 0x40
   2f910:	str	r0, [lr, r1, lsl #2]
   2f914:	ldr	r4, [sp, #56]	; 0x38
   2f918:	add	r7, r7, #4
   2f91c:	str	r6, [r2, r1, lsl #2]
   2f920:	ldr	r0, [ip, r1, lsl #2]
   2f924:	mla	r3, r0, r5, r3
   2f928:	ldr	r0, [fp, #20]
   2f92c:	mov	r5, r6
   2f930:	mov	r6, sl
   2f934:	ldr	sl, [fp, #16]
   2f938:	ldr	r0, [r0, r1, lsl #2]
   2f93c:	add	r1, r1, #1
   2f940:	mul	r4, r0, r4
   2f944:	ldr	r0, [fp, #24]
   2f948:	str	r4, [sp, #56]	; 0x38
   2f94c:	cmp	r1, r0
   2f950:	bne	2f8d8 <GetDataSlab+0xd3bc>
   2f954:	ldr	r0, [sp, #52]	; 0x34
   2f958:	cmp	r8, #1
   2f95c:	add	r9, r0, r3, lsl #2
   2f960:	bne	3a284 <GetDataSlab+0x17d68>
   2f964:	ldr	r0, [sp, #56]	; 0x38
   2f968:	ldr	r2, [sp, #48]	; 0x30
   2f96c:	cmp	r0, #1
   2f970:	blt	242a8 <GetDataSlab+0x1d8c>
   2f974:	ldr	r0, [fp, #20]
   2f978:	mov	r1, lr
   2f97c:	add	sl, ip, #4
   2f980:	mov	r8, #0
   2f984:	add	lr, r0, #4
   2f988:	add	r0, sp, #104	; 0x68
   2f98c:	orr	r6, r0, #4
   2f990:	orr	r0, r1, #4
   2f994:	str	r0, [sp, #40]	; 0x28
   2f998:	lsl	r0, r2, #3
   2f99c:	str	r0, [sp, #52]	; 0x34
   2f9a0:	ldr	r1, [sp, #60]	; 0x3c
   2f9a4:	cmp	r2, #1
   2f9a8:	blt	2f9d8 <GetDataSlab+0xd4bc>
   2f9ac:	ldr	r0, [fp, #12]
   2f9b0:	mov	ip, r2
   2f9b4:	mov	r2, r1
   2f9b8:	ldr	r0, [r0]
   2f9bc:	add	r0, r9, r0, lsl #2
   2f9c0:	ldr	r4, [r0], #4
   2f9c4:	subs	ip, ip, #1
   2f9c8:	asr	r5, r4, #31
   2f9cc:	strd	r4, [r2]
   2f9d0:	add	r2, r2, #8
   2f9d4:	bne	2f9c0 <GetDataSlab+0xd4a4>
   2f9d8:	ldr	r0, [sp, #44]	; 0x2c
   2f9dc:	add	r7, sp, #64	; 0x40
   2f9e0:	str	r1, [sp, #60]	; 0x3c
   2f9e4:	add	r9, r9, r0, lsl #2
   2f9e8:	add	r3, r3, r0
   2f9ec:	ldr	r0, [fp, #24]
   2f9f0:	cmp	r0, #2
   2f9f4:	blt	2fa9c <GetDataSlab+0xd580>
   2f9f8:	mov	r2, #0
   2f9fc:	mov	ip, #0
   2fa00:	mov	r0, r2
   2fa04:	ldr	r2, [r6, r2, lsl #2]
   2fa08:	add	r2, r2, #1
   2fa0c:	str	r2, [r6, r0, lsl #2]
   2fa10:	ldr	r5, [lr, r0, lsl #2]
   2fa14:	sdiv	r4, r2, r5
   2fa18:	mls	r2, r4, r5, r2
   2fa1c:	cmp	r2, #0
   2fa20:	bne	2fa8c <GetDataSlab+0xd570>
   2fa24:	add	r2, r7, r0, lsl #2
   2fa28:	str	ip, [r6, r0, lsl #2]
   2fa2c:	ldr	r2, [r2, #4]
   2fa30:	sdiv	r5, r3, r2
   2fa34:	mls	r4, r5, r2, r3
   2fa38:	cmp	r4, #0
   2fa3c:	beq	2fa58 <GetDataSlab+0xd53c>
   2fa40:	ldr	r5, [r7, r0, lsl #2]
   2fa44:	ldr	r1, [sl, r0, lsl #2]
   2fa48:	sub	r2, r2, r4
   2fa4c:	mla	r1, r1, r5, r2
   2fa50:	add	r3, r1, r3
   2fa54:	b	2fa70 <GetDataSlab+0xd554>
   2fa58:	ldr	r2, [sl, r0, lsl #2]
   2fa5c:	cmp	r2, #0
   2fa60:	beq	2fa74 <GetDataSlab+0xd558>
   2fa64:	ldr	r1, [r7, r0, lsl #2]
   2fa68:	mla	r3, r1, r2, r3
   2fa6c:	mul	r1, r1, r2
   2fa70:	add	r9, r9, r1, lsl #2
   2fa74:	ldr	r1, [fp, #24]
   2fa78:	add	r2, r0, #1
   2fa7c:	add	r0, r0, #2
   2fa80:	cmp	r0, r1
   2fa84:	blt	2fa00 <GetDataSlab+0xd4e4>
   2fa88:	b	2fa9c <GetDataSlab+0xd580>
   2fa8c:	ldr	r1, [sp, #40]	; 0x28
   2fa90:	ldr	r0, [r1, r0, lsl #2]
   2fa94:	add	r9, r9, r0, lsl #2
   2fa98:	add	r3, r0, r3
   2fa9c:	ldr	r0, [sp, #52]	; 0x34
   2faa0:	ldr	r1, [sp, #60]	; 0x3c
   2faa4:	ldr	r2, [sp, #48]	; 0x30
   2faa8:	add	r1, r1, r0
   2faac:	add	r8, r8, r2
   2fab0:	mov	r0, #0
   2fab4:	str	r1, [sp, #60]	; 0x3c
   2fab8:	ldr	r1, [sp, #56]	; 0x38
   2fabc:	cmp	r8, r1
   2fac0:	blt	2f9a0 <GetDataSlab+0xd484>
   2fac4:	b	242ac <GetDataSlab+0x1d90>
   2fac8:	mov	r1, r8
   2facc:	ldr	r8, [sl]
   2fad0:	mov	r3, #0
   2fad4:	add	r2, sp, #64	; 0x40
   2fad8:	sub	lr, fp, #72	; 0x48
   2fadc:	sub	r0, r8, #1
   2fae0:	str	r0, [fp, #-72]	; 0xffffffb8
   2fae4:	ldr	r0, [r9]
   2fae8:	str	r0, [sp, #64]	; 0x40
   2faec:	str	r0, [sp, #44]	; 0x2c
   2faf0:	ldr	r0, [fp, #24]
   2faf4:	ldr	r1, [r1]
   2faf8:	cmp	r0, #2
   2fafc:	str	r1, [sp, #48]	; 0x30
   2fb00:	str	r1, [sp, #56]	; 0x38
   2fb04:	blt	2fba0 <GetDataSlab+0xd684>
   2fb08:	ldr	r6, [sp, #44]	; 0x2c
   2fb0c:	ldr	r0, [sp, #48]	; 0x30
   2fb10:	mov	r1, #1
   2fb14:	mov	r3, #0
   2fb18:	mov	r7, r9
   2fb1c:	mov	r5, r6
   2fb20:	str	r0, [sp, #56]	; 0x38
   2fb24:	ldr	r0, [sl, r1, lsl #2]
   2fb28:	str	r6, [r2, r1, lsl #2]
   2fb2c:	mov	r2, #0
   2fb30:	sub	r0, r0, #1
   2fb34:	str	r0, [lr, r1, lsl #2]
   2fb38:	ldr	r9, [r9, r1, lsl #2]
   2fb3c:	mov	r4, r9
   2fb40:	mul	r6, r4, r6
   2fb44:	ldr	r4, [r7, -r2, lsl #2]
   2fb48:	add	r2, r2, #1
   2fb4c:	cmp	r1, r2
   2fb50:	mul	r0, r0, r4
   2fb54:	bne	2fb40 <GetDataSlab+0xd624>
   2fb58:	add	r2, sp, #64	; 0x40
   2fb5c:	str	r0, [lr, r1, lsl #2]
   2fb60:	ldr	r4, [sp, #56]	; 0x38
   2fb64:	add	r7, r7, #4
   2fb68:	str	r6, [r2, r1, lsl #2]
   2fb6c:	ldr	r0, [ip, r1, lsl #2]
   2fb70:	mla	r3, r0, r5, r3
   2fb74:	ldr	r0, [fp, #20]
   2fb78:	mov	r5, r6
   2fb7c:	mov	r6, r9
   2fb80:	ldr	r9, [fp, #8]
   2fb84:	ldr	r0, [r0, r1, lsl #2]
   2fb88:	add	r1, r1, #1
   2fb8c:	mul	r4, r0, r4
   2fb90:	ldr	r0, [fp, #24]
   2fb94:	str	r4, [sp, #56]	; 0x38
   2fb98:	cmp	r1, r0
   2fb9c:	bne	2fb24 <GetDataSlab+0xd608>
   2fba0:	ldr	r0, [sp, #52]	; 0x34
   2fba4:	cmp	r8, #1
   2fba8:	add	r5, r0, r3, lsl #2
   2fbac:	bne	3a428 <GetDataSlab+0x17f0c>
   2fbb0:	ldr	r0, [sp, #56]	; 0x38
   2fbb4:	cmp	r0, #1
   2fbb8:	blt	242a8 <GetDataSlab+0x1d8c>
   2fbbc:	ldr	r0, [fp, #20]
   2fbc0:	mov	r1, lr
   2fbc4:	add	sl, ip, #4
   2fbc8:	mov	r9, #0
   2fbcc:	mov	r8, #0
   2fbd0:	add	lr, r0, #4
   2fbd4:	add	r0, sp, #104	; 0x68
   2fbd8:	orr	r6, r0, #4
   2fbdc:	orr	r0, r1, #4
   2fbe0:	ldr	r1, [sp, #48]	; 0x30
   2fbe4:	str	r0, [sp, #40]	; 0x28
   2fbe8:	lsl	r0, r1, #3
   2fbec:	str	r0, [sp, #52]	; 0x34
   2fbf0:	cmp	r1, #1
   2fbf4:	blt	2fc20 <GetDataSlab+0xd704>
   2fbf8:	ldr	r0, [fp, #12]
   2fbfc:	ldr	ip, [sp, #48]	; 0x30
   2fc00:	ldr	r2, [sp, #60]	; 0x3c
   2fc04:	ldr	r0, [r0]
   2fc08:	add	r0, r5, r0, lsl #2
   2fc0c:	ldr	r4, [r0], #4
   2fc10:	subs	ip, ip, #1
   2fc14:	stm	r2, {r4, r9}
   2fc18:	add	r2, r2, #8
   2fc1c:	bne	2fc0c <GetDataSlab+0xd6f0>
   2fc20:	ldr	r0, [sp, #44]	; 0x2c
   2fc24:	add	ip, sp, #64	; 0x40
   2fc28:	add	r5, r5, r0, lsl #2
   2fc2c:	add	r3, r3, r0
   2fc30:	ldr	r0, [fp, #24]
   2fc34:	cmp	r0, #2
   2fc38:	blt	2fcdc <GetDataSlab+0xd7c0>
   2fc3c:	mov	r2, #0
   2fc40:	mov	r0, r2
   2fc44:	ldr	r2, [r6, r2, lsl #2]
   2fc48:	add	r2, r2, #1
   2fc4c:	str	r2, [r6, r0, lsl #2]
   2fc50:	ldr	r4, [lr, r0, lsl #2]
   2fc54:	sdiv	r1, r2, r4
   2fc58:	mls	r1, r1, r4, r2
   2fc5c:	cmp	r1, #0
   2fc60:	bne	2fccc <GetDataSlab+0xd7b0>
   2fc64:	add	r1, ip, r0, lsl #2
   2fc68:	str	r9, [r6, r0, lsl #2]
   2fc6c:	ldr	r2, [r1, #4]
   2fc70:	sdiv	r1, r3, r2
   2fc74:	mls	r4, r1, r2, r3
   2fc78:	cmp	r4, #0
   2fc7c:	beq	2fc98 <GetDataSlab+0xd77c>
   2fc80:	ldr	r1, [ip, r0, lsl #2]
   2fc84:	ldr	r7, [sl, r0, lsl #2]
   2fc88:	sub	r2, r2, r4
   2fc8c:	mla	r1, r7, r1, r2
   2fc90:	add	r3, r1, r3
   2fc94:	b	2fcb0 <GetDataSlab+0xd794>
   2fc98:	ldr	r2, [sl, r0, lsl #2]
   2fc9c:	cmp	r2, #0
   2fca0:	beq	2fcb4 <GetDataSlab+0xd798>
   2fca4:	ldr	r1, [ip, r0, lsl #2]
   2fca8:	mla	r3, r1, r2, r3
   2fcac:	mul	r1, r1, r2
   2fcb0:	add	r5, r5, r1, lsl #2
   2fcb4:	ldr	r1, [fp, #24]
   2fcb8:	add	r2, r0, #1
   2fcbc:	add	r0, r0, #2
   2fcc0:	cmp	r0, r1
   2fcc4:	blt	2fc40 <GetDataSlab+0xd724>
   2fcc8:	b	2fcdc <GetDataSlab+0xd7c0>
   2fccc:	ldr	r1, [sp, #40]	; 0x28
   2fcd0:	ldr	r0, [r1, r0, lsl #2]
   2fcd4:	add	r5, r5, r0, lsl #2
   2fcd8:	add	r3, r0, r3
   2fcdc:	ldr	r0, [sp, #60]	; 0x3c
   2fce0:	ldr	r1, [sp, #52]	; 0x34
   2fce4:	ldr	r2, [sp, #56]	; 0x38
   2fce8:	add	r0, r0, r1
   2fcec:	ldr	r1, [sp, #48]	; 0x30
   2fcf0:	str	r0, [sp, #60]	; 0x3c
   2fcf4:	mov	r0, #0
   2fcf8:	add	r8, r8, r1
   2fcfc:	cmp	r8, r2
   2fd00:	blt	2fbf0 <GetDataSlab+0xd6d4>
   2fd04:	b	242ac <GetDataSlab+0x1d90>
   2fd08:	ldr	ip, [sl]
   2fd0c:	add	r4, sp, #64	; 0x40
   2fd10:	sub	lr, fp, #72	; 0x48
   2fd14:	sub	r0, ip, #1
   2fd18:	str	r0, [fp, #-72]	; 0xffffffb8
   2fd1c:	ldr	r0, [r9]
   2fd20:	mov	r9, #0
   2fd24:	str	r0, [sp, #64]	; 0x40
   2fd28:	str	r0, [sp, #40]	; 0x28
   2fd2c:	ldr	r0, [fp, #24]
   2fd30:	ldr	r1, [r8]
   2fd34:	cmp	r0, #2
   2fd38:	str	r1, [sp, #44]	; 0x2c
   2fd3c:	str	r1, [sp, #48]	; 0x30
   2fd40:	blt	2fddc <GetDataSlab+0xd8c0>
   2fd44:	ldr	r3, [sp, #40]	; 0x28
   2fd48:	ldr	r0, [sp, #44]	; 0x2c
   2fd4c:	ldr	r2, [fp, #8]
   2fd50:	mov	r1, #1
   2fd54:	mov	r9, #0
   2fd58:	mov	r7, r3
   2fd5c:	str	r0, [sp, #48]	; 0x30
   2fd60:	ldr	r0, [sl, r1, lsl #2]
   2fd64:	str	r3, [r4, r1, lsl #2]
   2fd68:	mov	r4, #0
   2fd6c:	sub	r5, r0, #1
   2fd70:	ldr	r0, [fp, #8]
   2fd74:	str	r5, [lr, r1, lsl #2]
   2fd78:	ldr	r0, [r0, r1, lsl #2]
   2fd7c:	mov	r6, r0
   2fd80:	mul	r3, r6, r3
   2fd84:	ldr	r6, [r2, -r4, lsl #2]
   2fd88:	add	r4, r4, #1
   2fd8c:	cmp	r1, r4
   2fd90:	mul	r5, r5, r6
   2fd94:	bne	2fd80 <GetDataSlab+0xd864>
   2fd98:	ldr	r6, [fp, #12]
   2fd9c:	add	r4, sp, #64	; 0x40
   2fda0:	str	r5, [lr, r1, lsl #2]
   2fda4:	ldr	r5, [sp, #48]	; 0x30
   2fda8:	add	r2, r2, #4
   2fdac:	str	r3, [r4, r1, lsl #2]
   2fdb0:	ldr	r6, [r6, r1, lsl #2]
   2fdb4:	mla	r9, r6, r7, r9
   2fdb8:	ldr	r7, [r8, r1, lsl #2]
   2fdbc:	add	r1, r1, #1
   2fdc0:	mul	r5, r7, r5
   2fdc4:	ldr	r7, [fp, #24]
   2fdc8:	str	r5, [sp, #48]	; 0x30
   2fdcc:	cmp	r1, r7
   2fdd0:	mov	r7, r3
   2fdd4:	mov	r3, r0
   2fdd8:	bne	2fd60 <GetDataSlab+0xd844>
   2fddc:	ldr	r0, [sp, #52]	; 0x34
   2fde0:	cmp	ip, #1
   2fde4:	add	r5, r0, r9, lsl #2
   2fde8:	bne	3a5c0 <GetDataSlab+0x180a4>
   2fdec:	ldr	r0, [sp, #48]	; 0x30
   2fdf0:	cmp	r0, #1
   2fdf4:	blt	242a8 <GetDataSlab+0x1d8c>
   2fdf8:	add	r0, sp, #104	; 0x68
   2fdfc:	add	r4, r8, #4
   2fe00:	orr	r6, r0, #4
   2fe04:	orr	r0, lr, #4
   2fe08:	ldr	lr, [sp, #44]	; 0x2c
   2fe0c:	str	r0, [sp, #28]
   2fe10:	lsl	r0, lr, #3
   2fe14:	str	r0, [sp, #36]	; 0x24
   2fe18:	ldr	r0, [sp, #56]	; 0x38
   2fe1c:	ldr	r1, [r0], #4
   2fe20:	str	r0, [sp, #56]	; 0x38
   2fe24:	mov	r0, #0
   2fe28:	str	r1, [sp, #32]
   2fe2c:	str	r0, [sp, #52]	; 0x34
   2fe30:	cmp	lr, #1
   2fe34:	blt	2fe60 <GetDataSlab+0xd944>
   2fe38:	ldr	r0, [sp, #32]
   2fe3c:	ldr	r8, [sp, #44]	; 0x2c
   2fe40:	ldr	sl, [sp, #60]	; 0x3c
   2fe44:	add	r7, r5, r0, lsl #2
   2fe48:	ldr	r0, [r7], #4
   2fe4c:	bl	49880 <__aeabi_f2ulz>
   2fe50:	strd	r0, [sl]
   2fe54:	subs	r8, r8, #1
   2fe58:	add	sl, sl, #8
   2fe5c:	bne	2fe48 <GetDataSlab+0xd92c>
   2fe60:	ldr	r0, [sp, #40]	; 0x28
   2fe64:	add	r5, r5, r0, lsl #2
   2fe68:	add	r9, r9, r0
   2fe6c:	ldr	r0, [fp, #24]
   2fe70:	cmp	r0, #2
   2fe74:	blt	2ff24 <GetDataSlab+0xda08>
   2fe78:	ldr	ip, [sp, #60]	; 0x3c
   2fe7c:	ldr	lr, [sp, #44]	; 0x2c
   2fe80:	mov	r1, #0
   2fe84:	mov	r8, #0
   2fe88:	mov	r0, r1
   2fe8c:	ldr	r1, [r6, r1, lsl #2]
   2fe90:	add	r1, r1, #1
   2fe94:	str	r1, [r6, r0, lsl #2]
   2fe98:	ldr	r2, [r4, r0, lsl #2]
   2fe9c:	sdiv	r3, r1, r2
   2fea0:	mls	r1, r3, r2, r1
   2fea4:	cmp	r1, #0
   2fea8:	bne	2ff30 <GetDataSlab+0xda14>
   2feac:	add	r3, sp, #64	; 0x40
   2feb0:	str	r8, [r6, r0, lsl #2]
   2feb4:	add	r1, r3, r0, lsl #2
   2feb8:	ldr	r1, [r1, #4]
   2febc:	sdiv	r2, r9, r1
   2fec0:	mls	r2, r2, r1, r9
   2fec4:	cmp	r2, #0
   2fec8:	beq	2fee8 <GetDataSlab+0xd9cc>
   2fecc:	ldr	r7, [sp, #56]	; 0x38
   2fed0:	ldr	r3, [r3, r0, lsl #2]
   2fed4:	sub	r1, r1, r2
   2fed8:	ldr	r7, [r7, r0, lsl #2]
   2fedc:	mla	r1, r7, r3, r1
   2fee0:	add	r9, r1, r9
   2fee4:	b	2ff08 <GetDataSlab+0xd9ec>
   2fee8:	ldr	r1, [sp, #56]	; 0x38
   2feec:	ldr	r1, [r1, r0, lsl #2]
   2fef0:	cmp	r1, #0
   2fef4:	beq	2ff0c <GetDataSlab+0xd9f0>
   2fef8:	add	r2, sp, #64	; 0x40
   2fefc:	ldr	r2, [r2, r0, lsl #2]
   2ff00:	mla	r9, r2, r1, r9
   2ff04:	mul	r1, r2, r1
   2ff08:	add	r5, r5, r1, lsl #2
   2ff0c:	ldr	r2, [fp, #24]
   2ff10:	add	r1, r0, #1
   2ff14:	add	r0, r0, #2
   2ff18:	cmp	r0, r2
   2ff1c:	blt	2fe88 <GetDataSlab+0xd96c>
   2ff20:	b	2ff40 <GetDataSlab+0xda24>
   2ff24:	ldr	ip, [sp, #60]	; 0x3c
   2ff28:	ldr	lr, [sp, #44]	; 0x2c
   2ff2c:	b	2ff40 <GetDataSlab+0xda24>
   2ff30:	ldr	r1, [sp, #28]
   2ff34:	ldr	r0, [r1, r0, lsl #2]
   2ff38:	add	r5, r5, r0, lsl #2
   2ff3c:	add	r9, r0, r9
   2ff40:	ldr	r2, [sp, #52]	; 0x34
   2ff44:	ldr	r0, [sp, #36]	; 0x24
   2ff48:	ldr	r1, [sp, #48]	; 0x30
   2ff4c:	add	r2, r2, lr
   2ff50:	add	ip, ip, r0
   2ff54:	mov	r0, #0
   2ff58:	cmp	r2, r1
   2ff5c:	str	ip, [sp, #60]	; 0x3c
   2ff60:	str	r2, [sp, #52]	; 0x34
   2ff64:	blt	2fe30 <GetDataSlab+0xd914>
   2ff68:	b	242ac <GetDataSlab+0x1d90>
   2ff6c:	ldr	ip, [sl]
   2ff70:	add	r4, sp, #64	; 0x40
   2ff74:	sub	lr, fp, #72	; 0x48
   2ff78:	sub	r0, ip, #1
   2ff7c:	str	r0, [fp, #-72]	; 0xffffffb8
   2ff80:	ldr	r0, [r9]
   2ff84:	mov	r9, #0
   2ff88:	str	r0, [sp, #64]	; 0x40
   2ff8c:	str	r0, [sp, #40]	; 0x28
   2ff90:	ldr	r0, [fp, #24]
   2ff94:	ldr	r1, [r8]
   2ff98:	cmp	r0, #2
   2ff9c:	str	r1, [sp, #44]	; 0x2c
   2ffa0:	str	r1, [sp, #48]	; 0x30
   2ffa4:	blt	30040 <GetDataSlab+0xdb24>
   2ffa8:	ldr	r3, [sp, #40]	; 0x28
   2ffac:	ldr	r0, [sp, #44]	; 0x2c
   2ffb0:	ldr	r2, [fp, #8]
   2ffb4:	mov	r1, #1
   2ffb8:	mov	r9, #0
   2ffbc:	mov	r7, r3
   2ffc0:	str	r0, [sp, #48]	; 0x30
   2ffc4:	ldr	r0, [sl, r1, lsl #2]
   2ffc8:	str	r3, [r4, r1, lsl #2]
   2ffcc:	mov	r4, #0
   2ffd0:	sub	r5, r0, #1
   2ffd4:	ldr	r0, [fp, #8]
   2ffd8:	str	r5, [lr, r1, lsl #2]
   2ffdc:	ldr	r0, [r0, r1, lsl #2]
   2ffe0:	mov	r6, r0
   2ffe4:	mul	r3, r6, r3
   2ffe8:	ldr	r6, [r2, -r4, lsl #2]
   2ffec:	add	r4, r4, #1
   2fff0:	cmp	r1, r4
   2fff4:	mul	r5, r5, r6
   2fff8:	bne	2ffe4 <GetDataSlab+0xdac8>
   2fffc:	ldr	r6, [fp, #12]
   30000:	add	r4, sp, #64	; 0x40
   30004:	str	r5, [lr, r1, lsl #2]
   30008:	ldr	r5, [sp, #48]	; 0x30
   3000c:	add	r2, r2, #4
   30010:	str	r3, [r4, r1, lsl #2]
   30014:	ldr	r6, [r6, r1, lsl #2]
   30018:	mla	r9, r6, r7, r9
   3001c:	ldr	r7, [r8, r1, lsl #2]
   30020:	add	r1, r1, #1
   30024:	mul	r5, r7, r5
   30028:	ldr	r7, [fp, #24]
   3002c:	str	r5, [sp, #48]	; 0x30
   30030:	cmp	r1, r7
   30034:	mov	r7, r3
   30038:	mov	r3, r0
   3003c:	bne	2ffc4 <GetDataSlab+0xdaa8>
   30040:	ldr	r0, [sp, #52]	; 0x34
   30044:	cmp	ip, #1
   30048:	add	r5, r0, r9, lsl #3
   3004c:	bne	3a76c <GetDataSlab+0x18250>
   30050:	ldr	r0, [sp, #48]	; 0x30
   30054:	cmp	r0, #1
   30058:	blt	242a8 <GetDataSlab+0x1d8c>
   3005c:	add	r0, sp, #104	; 0x68
   30060:	add	r4, r8, #4
   30064:	orr	r6, r0, #4
   30068:	orr	r0, lr, #4
   3006c:	ldr	lr, [sp, #44]	; 0x2c
   30070:	str	r0, [sp, #28]
   30074:	lsl	r0, lr, #3
   30078:	str	r0, [sp, #36]	; 0x24
   3007c:	ldr	r0, [sp, #56]	; 0x38
   30080:	ldr	r1, [r0], #4
   30084:	str	r0, [sp, #56]	; 0x38
   30088:	mov	r0, #0
   3008c:	str	r1, [sp, #32]
   30090:	str	r0, [sp, #52]	; 0x34
   30094:	cmp	lr, #1
   30098:	blt	300cc <GetDataSlab+0xdbb0>
   3009c:	ldr	r0, [sp, #32]
   300a0:	ldr	r8, [sp, #44]	; 0x2c
   300a4:	ldr	sl, [sp, #60]	; 0x3c
   300a8:	add	r7, r5, r0, lsl #3
   300ac:	vldr	d16, [r7]
   300b0:	vmov	r0, r1, d16
   300b4:	bl	498c0 <__aeabi_d2ulz>
   300b8:	strd	r0, [sl]
   300bc:	subs	r8, r8, #1
   300c0:	add	sl, sl, #8
   300c4:	add	r7, r7, #8
   300c8:	bne	300ac <GetDataSlab+0xdb90>
   300cc:	ldr	r0, [sp, #40]	; 0x28
   300d0:	add	r5, r5, r0, lsl #3
   300d4:	add	r9, r9, r0
   300d8:	ldr	r0, [fp, #24]
   300dc:	cmp	r0, #2
   300e0:	blt	30190 <GetDataSlab+0xdc74>
   300e4:	ldr	ip, [sp, #60]	; 0x3c
   300e8:	ldr	lr, [sp, #44]	; 0x2c
   300ec:	mov	r1, #0
   300f0:	mov	r8, #0
   300f4:	mov	r0, r1
   300f8:	ldr	r1, [r6, r1, lsl #2]
   300fc:	add	r1, r1, #1
   30100:	str	r1, [r6, r0, lsl #2]
   30104:	ldr	r2, [r4, r0, lsl #2]
   30108:	sdiv	r3, r1, r2
   3010c:	mls	r1, r3, r2, r1
   30110:	cmp	r1, #0
   30114:	bne	3019c <GetDataSlab+0xdc80>
   30118:	add	r3, sp, #64	; 0x40
   3011c:	str	r8, [r6, r0, lsl #2]
   30120:	add	r1, r3, r0, lsl #2
   30124:	ldr	r1, [r1, #4]
   30128:	sdiv	r2, r9, r1
   3012c:	mls	r2, r2, r1, r9
   30130:	cmp	r2, #0
   30134:	beq	30154 <GetDataSlab+0xdc38>
   30138:	ldr	r7, [sp, #56]	; 0x38
   3013c:	ldr	r3, [r3, r0, lsl #2]
   30140:	sub	r1, r1, r2
   30144:	ldr	r7, [r7, r0, lsl #2]
   30148:	mla	r1, r7, r3, r1
   3014c:	add	r9, r1, r9
   30150:	b	30174 <GetDataSlab+0xdc58>
   30154:	ldr	r1, [sp, #56]	; 0x38
   30158:	ldr	r1, [r1, r0, lsl #2]
   3015c:	cmp	r1, #0
   30160:	beq	30178 <GetDataSlab+0xdc5c>
   30164:	add	r2, sp, #64	; 0x40
   30168:	ldr	r2, [r2, r0, lsl #2]
   3016c:	mla	r9, r2, r1, r9
   30170:	mul	r1, r2, r1
   30174:	add	r5, r5, r1, lsl #3
   30178:	ldr	r2, [fp, #24]
   3017c:	add	r1, r0, #1
   30180:	add	r0, r0, #2
   30184:	cmp	r0, r2
   30188:	blt	300f4 <GetDataSlab+0xdbd8>
   3018c:	b	301ac <GetDataSlab+0xdc90>
   30190:	ldr	ip, [sp, #60]	; 0x3c
   30194:	ldr	lr, [sp, #44]	; 0x2c
   30198:	b	301ac <GetDataSlab+0xdc90>
   3019c:	ldr	r1, [sp, #28]
   301a0:	ldr	r0, [r1, r0, lsl #2]
   301a4:	add	r5, r5, r0, lsl #3
   301a8:	add	r9, r0, r9
   301ac:	ldr	r2, [sp, #52]	; 0x34
   301b0:	ldr	r0, [sp, #36]	; 0x24
   301b4:	ldr	r1, [sp, #48]	; 0x30
   301b8:	add	r2, r2, lr
   301bc:	add	ip, ip, r0
   301c0:	mov	r0, #0
   301c4:	cmp	r2, r1
   301c8:	str	ip, [sp, #60]	; 0x3c
   301cc:	str	r2, [sp, #52]	; 0x34
   301d0:	blt	30094 <GetDataSlab+0xdb78>
   301d4:	b	242ac <GetDataSlab+0x1d90>
   301d8:	ldr	r0, [sl]
   301dc:	mov	r1, r9
   301e0:	mov	sl, #0
   301e4:	add	r4, sp, #64	; 0x40
   301e8:	str	r3, [sp, #48]	; 0x30
   301ec:	str	r0, [sp, #16]
   301f0:	sub	r0, r0, #1
   301f4:	str	r0, [fp, #-72]	; 0xffffffb8
   301f8:	ldr	r0, [r9]
   301fc:	sub	r9, fp, #72	; 0x48
   30200:	str	r0, [sp, #64]	; 0x40
   30204:	str	r0, [sp, #44]	; 0x2c
   30208:	ldr	r0, [fp, #24]
   3020c:	ldr	r1, [r8]
   30210:	cmp	r0, #2
   30214:	str	r1, [sp, #40]	; 0x28
   30218:	str	r1, [sp, #56]	; 0x38
   3021c:	blt	302c0 <GetDataSlab+0xdda4>
   30220:	ldr	r7, [sp, #44]	; 0x2c
   30224:	ldr	r1, [sp, #40]	; 0x28
   30228:	ldr	r3, [fp, #8]
   3022c:	mov	r0, #1
   30230:	mov	sl, #0
   30234:	mov	r6, r7
   30238:	str	r1, [sp, #56]	; 0x38
   3023c:	ldr	r1, [fp, #16]
   30240:	ldr	r2, [r1, r0, lsl #2]
   30244:	ldr	r1, [fp, #8]
   30248:	str	r7, [r4, r0, lsl #2]
   3024c:	sub	r5, r2, #1
   30250:	mov	r2, #0
   30254:	str	r5, [r9, r0, lsl #2]
   30258:	ldr	r8, [r1, r0, lsl #2]
   3025c:	mov	r4, r8
   30260:	mul	r7, r4, r7
   30264:	ldr	r4, [r3, -r2, lsl #2]
   30268:	add	r2, r2, #1
   3026c:	cmp	r0, r2
   30270:	mul	r5, r5, r4
   30274:	bne	30260 <GetDataSlab+0xdd44>
   30278:	add	r4, sp, #64	; 0x40
   3027c:	sub	r9, fp, #72	; 0x48
   30280:	ldr	r1, [fp, #20]
   30284:	add	r3, r3, #4
   30288:	str	r7, [r4, r0, lsl #2]
   3028c:	str	r5, [r9, r0, lsl #2]
   30290:	ldr	r2, [ip, r0, lsl #2]
   30294:	mla	sl, r2, r6, sl
   30298:	ldr	r2, [r1, r0, lsl #2]
   3029c:	ldr	r1, [sp, #56]	; 0x38
   302a0:	add	r0, r0, #1
   302a4:	mov	r6, r7
   302a8:	mov	r7, r8
   302ac:	mul	r1, r2, r1
   302b0:	str	r1, [sp, #56]	; 0x38
   302b4:	ldr	r1, [fp, #24]
   302b8:	cmp	r0, r1
   302bc:	bne	3023c <GetDataSlab+0xdd20>
   302c0:	ldr	r0, [sp, #52]	; 0x34
   302c4:	ldr	r5, [sp, #16]
   302c8:	add	r3, r0, sl, lsl #3
   302cc:	cmp	r5, #1
   302d0:	bne	3a920 <GetDataSlab+0x18404>
   302d4:	ldr	r0, [sp, #56]	; 0x38
   302d8:	ldr	r2, [sp, #40]	; 0x28
   302dc:	cmp	r0, #1
   302e0:	ldr	r0, [fp, #20]
   302e4:	blt	3aab0 <GetDataSlab+0x18594>
   302e8:	mov	r4, ip
   302ec:	add	ip, r0, #4
   302f0:	add	r0, sp, #104	; 0x68
   302f4:	mov	r1, lr
   302f8:	mov	lr, #0
   302fc:	orr	r6, r0, #4
   30300:	sub	r0, fp, #72	; 0x48
   30304:	orr	r0, r0, #4
   30308:	str	r0, [sp, #28]
   3030c:	lsl	r0, r2, #3
   30310:	str	r0, [sp, #36]	; 0x24
   30314:	ldr	r0, [r4], #4
   30318:	str	r0, [sp, #32]
   3031c:	cmp	r2, #1
   30320:	blt	3034c <GetDataSlab+0xde30>
   30324:	ldr	r0, [sp, #32]
   30328:	ldr	r5, [sp, #40]	; 0x28
   3032c:	add	r2, r3, r0, lsl #3
   30330:	mov	r0, r1
   30334:	ldrd	r8, [r2]
   30338:	subs	r5, r5, #1
   3033c:	add	r2, r2, #8
   30340:	strd	r8, [r0]
   30344:	add	r0, r0, #8
   30348:	bne	30334 <GetDataSlab+0xde18>
   3034c:	ldr	r0, [sp, #44]	; 0x2c
   30350:	mov	r9, r1
   30354:	add	r3, r3, r0, lsl #3
   30358:	add	sl, sl, r0
   3035c:	ldr	r0, [fp, #24]
   30360:	cmp	r0, #2
   30364:	blt	30414 <GetDataSlab+0xdef8>
   30368:	mov	r2, #0
   3036c:	mov	r1, #0
   30370:	ldr	r0, [r6, r2, lsl #2]
   30374:	mov	r8, r2
   30378:	add	r0, r0, #1
   3037c:	str	r0, [r6, r2, lsl #2]
   30380:	ldr	r2, [ip, r2, lsl #2]
   30384:	sdiv	r5, r0, r2
   30388:	mls	r0, r5, r2, r0
   3038c:	cmp	r0, #0
   30390:	bne	30404 <GetDataSlab+0xdee8>
   30394:	add	r5, sp, #64	; 0x40
   30398:	str	r1, [r6, r8, lsl #2]
   3039c:	add	r0, r5, r8, lsl #2
   303a0:	ldr	r0, [r0, #4]
   303a4:	sdiv	r2, sl, r0
   303a8:	mls	r2, r2, r0, sl
   303ac:	cmp	r2, #0
   303b0:	beq	303cc <GetDataSlab+0xdeb0>
   303b4:	ldr	r5, [r5, r8, lsl #2]
   303b8:	ldr	r7, [r4, r8, lsl #2]
   303bc:	sub	r0, r0, r2
   303c0:	mla	r0, r7, r5, r0
   303c4:	add	sl, r0, sl
   303c8:	b	303e8 <GetDataSlab+0xdecc>
   303cc:	ldr	r0, [r4, r8, lsl #2]
   303d0:	cmp	r0, #0
   303d4:	beq	303ec <GetDataSlab+0xded0>
   303d8:	add	r2, sp, #64	; 0x40
   303dc:	ldr	r2, [r2, r8, lsl #2]
   303e0:	mla	sl, r2, r0, sl
   303e4:	mul	r0, r2, r0
   303e8:	add	r3, r3, r0, lsl #3
   303ec:	ldr	r5, [fp, #24]
   303f0:	add	r0, r8, #2
   303f4:	add	r2, r8, #1
   303f8:	cmp	r0, r5
   303fc:	blt	30370 <GetDataSlab+0xde54>
   30400:	b	30414 <GetDataSlab+0xdef8>
   30404:	ldr	r0, [sp, #28]
   30408:	ldr	r0, [r0, r8, lsl #2]
   3040c:	add	r3, r3, r0, lsl #3
   30410:	add	sl, r0, sl
   30414:	ldr	r0, [sp, #36]	; 0x24
   30418:	mov	r1, r9
   3041c:	ldr	r2, [sp, #40]	; 0x28
   30420:	add	r1, r9, r0
   30424:	ldr	r0, [sp, #56]	; 0x38
   30428:	add	lr, lr, r2
   3042c:	cmp	lr, r0
   30430:	blt	3031c <GetDataSlab+0xde00>
   30434:	b	3aab0 <GetDataSlab+0x18594>
   30438:	ldr	r0, [sp, #56]	; 0x38
   3043c:	ldr	r6, [sp, #48]	; 0x30
   30440:	cmp	r0, #1
   30444:	blt	242a8 <GetDataSlab+0x1d8c>
   30448:	ldr	r0, [sp, #40]	; 0x28
   3044c:	ldr	r1, [sp, #44]	; 0x2c
   30450:	add	r9, ip, #4
   30454:	mov	ip, #0
   30458:	mov	lr, #0
   3045c:	mls	r1, r6, r0, r1
   30460:	mul	r0, r6, r0
   30464:	str	r0, [sp, #36]	; 0x24
   30468:	ldr	r0, [fp, #20]
   3046c:	str	r1, [sp, #52]	; 0x34
   30470:	add	r8, r0, #4
   30474:	add	r0, sp, #104	; 0x68
   30478:	orr	r2, r0, #4
   3047c:	sub	r0, fp, #72	; 0x48
   30480:	orr	r0, r0, #4
   30484:	str	r0, [sp, #32]
   30488:	lsl	r0, r6, #3
   3048c:	str	r0, [sp, #44]	; 0x2c
   30490:	ldr	r0, [fp, #12]
   30494:	cmp	r6, #1
   30498:	ldr	r0, [r0]
   3049c:	blt	304f0 <GetDataSlab+0xdfd4>
   304a0:	ldr	r1, [sp, #36]	; 0x24
   304a4:	ldr	ip, [sp, #60]	; 0x3c
   304a8:	add	r5, sl, r0
   304ac:	mov	r4, r6
   304b0:	mov	r7, r1
   304b4:	add	r1, r1, r3
   304b8:	add	r3, sl, r7
   304bc:	ldr	r7, [sp, #40]	; 0x28
   304c0:	ldrsb	r6, [r5], r7
   304c4:	subs	r4, r4, #1
   304c8:	vmov	s0, r6
   304cc:	vcvt.f64.s32	d16, s0
   304d0:	vstr	d16, [ip]
   304d4:	add	ip, ip, #8
   304d8:	bne	304c0 <GetDataSlab+0xdfa4>
   304dc:	add	r4, r1, r0
   304e0:	mov	sl, r3
   304e4:	add	r5, sp, #64	; 0x40
   304e8:	mov	ip, #0
   304ec:	b	304f8 <GetDataSlab+0xdfdc>
   304f0:	add	r4, r0, r3
   304f4:	add	r5, sp, #64	; 0x40
   304f8:	ldr	r1, [sp, #52]	; 0x34
   304fc:	sub	r0, r1, r0
   30500:	add	sl, sl, r1
   30504:	add	r3, r4, r0
   30508:	ldr	r0, [fp, #24]
   3050c:	cmp	r0, #2
   30510:	blt	305b0 <GetDataSlab+0xe094>
   30514:	mov	r4, #0
   30518:	ldr	r6, [r2, r4, lsl #2]
   3051c:	mov	r0, r4
   30520:	add	r6, r6, #1
   30524:	str	r6, [r2, r4, lsl #2]
   30528:	ldr	r4, [r8, r4, lsl #2]
   3052c:	sdiv	r7, r6, r4
   30530:	mls	r7, r7, r4, r6
   30534:	cmp	r7, #0
   30538:	bne	305a0 <GetDataSlab+0xe084>
   3053c:	add	r7, r5, r0, lsl #2
   30540:	str	ip, [r2, r0, lsl #2]
   30544:	ldr	r4, [r7, #4]
   30548:	sdiv	r7, r3, r4
   3054c:	mls	r6, r7, r4, r3
   30550:	cmp	r6, #0
   30554:	beq	30574 <GetDataSlab+0xe058>
   30558:	ldr	r7, [r5, r0, lsl #2]
   3055c:	ldr	r1, [r9, r0, lsl #2]
   30560:	sub	r6, r4, r6
   30564:	mla	r1, r1, r7, r6
   30568:	add	r3, r1, r3
   3056c:	add	sl, sl, r1
   30570:	b	30588 <GetDataSlab+0xe06c>
   30574:	ldr	r6, [r9, r0, lsl #2]
   30578:	cmp	r6, #0
   3057c:	ldrne	r1, [r5, r0, lsl #2]
   30580:	mlane	r3, r1, r6, r3
   30584:	mlane	sl, r1, r6, sl
   30588:	ldr	r1, [fp, #24]
   3058c:	add	r4, r0, #1
   30590:	add	r0, r0, #2
   30594:	cmp	r0, r1
   30598:	blt	30518 <GetDataSlab+0xdffc>
   3059c:	b	305b0 <GetDataSlab+0xe094>
   305a0:	ldr	r1, [sp, #32]
   305a4:	ldr	r0, [r1, r0, lsl #2]
   305a8:	add	sl, sl, r0
   305ac:	add	r3, r0, r3
   305b0:	ldr	r0, [sp, #60]	; 0x3c
   305b4:	ldr	r1, [sp, #44]	; 0x2c
   305b8:	ldr	r6, [sp, #48]	; 0x30
   305bc:	mov	r4, lr
   305c0:	add	r0, r0, r1
   305c4:	ldr	r1, [sp, #56]	; 0x38
   305c8:	add	r4, lr, r6
   305cc:	str	r0, [sp, #60]	; 0x3c
   305d0:	mov	r0, #0
   305d4:	mov	lr, r4
   305d8:	cmp	r4, r1
   305dc:	blt	30490 <GetDataSlab+0xdf74>
   305e0:	b	242ac <GetDataSlab+0x1d90>
   305e4:	ldr	r0, [sp, #56]	; 0x38
   305e8:	ldr	r4, [sp, #48]	; 0x30
   305ec:	cmp	r0, #1
   305f0:	blt	242a8 <GetDataSlab+0x1d8c>
   305f4:	ldr	r0, [sp, #44]	; 0x2c
   305f8:	add	r9, ip, #4
   305fc:	mov	sl, #0
   30600:	mls	r0, r4, lr, r0
   30604:	str	r0, [sp, #52]	; 0x34
   30608:	mul	r0, r4, lr
   3060c:	str	r0, [sp, #40]	; 0x28
   30610:	ldr	r0, [fp, #20]
   30614:	add	r8, r0, #4
   30618:	add	r0, sp, #104	; 0x68
   3061c:	orr	r2, r0, #4
   30620:	sub	r0, fp, #72	; 0x48
   30624:	orr	r0, r0, #4
   30628:	str	r0, [sp, #36]	; 0x24
   3062c:	lsl	r0, r4, #2
   30630:	str	r0, [sp, #44]	; 0x2c
   30634:	ldr	r0, [fp, #12]
   30638:	cmp	r4, #1
   3063c:	ldr	r0, [r0]
   30640:	blt	30684 <GetDataSlab+0xe168>
   30644:	ldr	r1, [sp, #40]	; 0x28
   30648:	ldr	ip, [sp, #60]	; 0x3c
   3064c:	mov	r7, r1
   30650:	add	r1, r1, r3
   30654:	add	r3, r5, r7
   30658:	add	r5, r5, r0
   3065c:	ldrsb	r6, [r5], lr
   30660:	subs	r4, r4, #1
   30664:	vmov	s0, r6
   30668:	vcvt.f32.s32	s0, s0
   3066c:	vstr	s0, [ip]
   30670:	add	ip, ip, #4
   30674:	bne	3065c <GetDataSlab+0xe140>
   30678:	add	r4, r1, r0
   3067c:	mov	r5, r3
   30680:	b	30688 <GetDataSlab+0xe16c>
   30684:	add	r4, r0, r3
   30688:	ldr	r1, [sp, #52]	; 0x34
   3068c:	add	ip, sp, #64	; 0x40
   30690:	sub	r0, r1, r0
   30694:	add	r5, r5, r1
   30698:	add	r3, r4, r0
   3069c:	ldr	r0, [fp, #24]
   306a0:	cmp	r0, #2
   306a4:	blt	30748 <GetDataSlab+0xe22c>
   306a8:	mov	r4, #0
   306ac:	ldr	r6, [r2, r4, lsl #2]
   306b0:	mov	r0, r4
   306b4:	add	r6, r6, #1
   306b8:	str	r6, [r2, r4, lsl #2]
   306bc:	ldr	r4, [r8, r4, lsl #2]
   306c0:	sdiv	r7, r6, r4
   306c4:	mls	r7, r7, r4, r6
   306c8:	cmp	r7, #0
   306cc:	bne	30738 <GetDataSlab+0xe21c>
   306d0:	add	r7, ip, r0, lsl #2
   306d4:	mov	r1, #0
   306d8:	ldr	r4, [r7, #4]
   306dc:	str	r1, [r2, r0, lsl #2]
   306e0:	sdiv	r7, r3, r4
   306e4:	mls	r6, r7, r4, r3
   306e8:	cmp	r6, #0
   306ec:	beq	3070c <GetDataSlab+0xe1f0>
   306f0:	ldr	r7, [ip, r0, lsl #2]
   306f4:	ldr	r1, [r9, r0, lsl #2]
   306f8:	sub	r6, r4, r6
   306fc:	mla	r1, r1, r7, r6
   30700:	add	r3, r1, r3
   30704:	add	r5, r5, r1
   30708:	b	30720 <GetDataSlab+0xe204>
   3070c:	ldr	r6, [r9, r0, lsl #2]
   30710:	cmp	r6, #0
   30714:	ldrne	r1, [ip, r0, lsl #2]
   30718:	mlane	r3, r1, r6, r3
   3071c:	mlane	r5, r1, r6, r5
   30720:	ldr	r1, [fp, #24]
   30724:	add	r4, r0, #1
   30728:	add	r0, r0, #2
   3072c:	cmp	r0, r1
   30730:	blt	306ac <GetDataSlab+0xe190>
   30734:	b	30748 <GetDataSlab+0xe22c>
   30738:	ldr	r1, [sp, #36]	; 0x24
   3073c:	ldr	r0, [r1, r0, lsl #2]
   30740:	add	r5, r5, r0
   30744:	add	r3, r0, r3
   30748:	ldr	r0, [sp, #60]	; 0x3c
   3074c:	ldr	r1, [sp, #44]	; 0x2c
   30750:	ldr	r4, [sp, #48]	; 0x30
   30754:	add	r0, r0, r1
   30758:	ldr	r1, [sp, #56]	; 0x38
   3075c:	add	sl, sl, r4
   30760:	str	r0, [sp, #60]	; 0x3c
   30764:	mov	r0, #0
   30768:	cmp	sl, r1
   3076c:	blt	30634 <GetDataSlab+0xe118>
   30770:	b	242ac <GetDataSlab+0x1d90>
   30774:	ldr	r0, [sp, #56]	; 0x38
   30778:	cmp	r0, #1
   3077c:	ldr	r0, [fp, #20]
   30780:	blt	242a8 <GetDataSlab+0x1d8c>
   30784:	add	r0, r0, #4
   30788:	ldr	r9, [fp, #12]
   3078c:	str	r0, [sp, #40]	; 0x28
   30790:	add	r0, sp, #104	; 0x68
   30794:	orr	ip, r0, #4
   30798:	sub	r0, fp, #72	; 0x48
   3079c:	orr	r0, r0, #4
   307a0:	str	r0, [sp, #36]	; 0x24
   307a4:	ldr	r0, [r9], #4
   307a8:	str	r0, [sp, #44]	; 0x2c
   307ac:	mov	r0, #0
   307b0:	str	r0, [sp, #52]	; 0x34
   307b4:	ldr	r6, [sp, #44]	; 0x2c
   307b8:	cmp	sl, #1
   307bc:	add	r0, r6, lr
   307c0:	add	r4, r2, r6
   307c4:	blt	30818 <GetDataSlab+0xe2fc>
   307c8:	ldr	r2, [sp, #60]	; 0x3c
   307cc:	ldr	r1, [sp, #52]	; 0x34
   307d0:	ldr	r7, [fp, #20]
   307d4:	mov	r6, #0
   307d8:	add	r5, r2, r1
   307dc:	ldr	r1, [fp, #16]
   307e0:	ldrb	r2, [r4]
   307e4:	strb	r2, [r5, r6]
   307e8:	add	r6, r6, #1
   307ec:	ldr	r3, [r1]
   307f0:	ldr	sl, [r7]
   307f4:	add	r0, r3, r0
   307f8:	add	r4, r4, r3
   307fc:	cmp	r6, sl
   30800:	blt	307e0 <GetDataSlab+0xe2c4>
   30804:	ldr	r7, [fp, #12]
   30808:	ldr	r6, [r7]
   3080c:	ldr	r7, [fp, #8]
   30810:	ldr	r1, [r7]
   30814:	b	3081c <GetDataSlab+0xe300>
   30818:	ldr	r1, [sp, #48]	; 0x30
   3081c:	mls	r5, r3, sl, r1
   30820:	str	r1, [sp, #48]	; 0x30
   30824:	str	r6, [sp, #44]	; 0x2c
   30828:	sub	r5, r5, r6
   3082c:	add	lr, r5, r0
   30830:	ldr	r0, [fp, #24]
   30834:	add	r2, r4, r5
   30838:	cmp	r0, #2
   3083c:	blt	308ec <GetDataSlab+0xe3d0>
   30840:	ldr	r1, [sp, #40]	; 0x28
   30844:	mov	r5, #0
   30848:	mov	r0, r5
   3084c:	ldr	r5, [ip, r5, lsl #2]
   30850:	add	r5, r5, #1
   30854:	str	r5, [ip, r0, lsl #2]
   30858:	ldr	r6, [r1, r0, lsl #2]
   3085c:	sdiv	r8, r5, r6
   30860:	mls	r5, r8, r6, r5
   30864:	cmp	r5, #0
   30868:	bne	308dc <GetDataSlab+0xe3c0>
   3086c:	mov	r4, #0
   30870:	str	r4, [ip, r0, lsl #2]
   30874:	add	r4, sp, #64	; 0x40
   30878:	add	r5, r4, r0, lsl #2
   3087c:	ldr	r5, [r5, #4]
   30880:	sdiv	r6, lr, r5
   30884:	mls	r6, r6, r5, lr
   30888:	cmp	r6, #0
   3088c:	beq	308ac <GetDataSlab+0xe390>
   30890:	ldr	r7, [r4, r0, lsl #2]
   30894:	ldr	r4, [r9, r0, lsl #2]
   30898:	sub	r5, r5, r6
   3089c:	mla	r4, r4, r7, r5
   308a0:	add	lr, r4, lr
   308a4:	add	r2, r2, r4
   308a8:	b	308c4 <GetDataSlab+0xe3a8>
   308ac:	ldr	r5, [r9, r0, lsl #2]
   308b0:	cmp	r5, #0
   308b4:	addne	r4, sp, #64	; 0x40
   308b8:	ldrne	r4, [r4, r0, lsl #2]
   308bc:	mlane	lr, r4, r5, lr
   308c0:	mlane	r2, r4, r5, r2
   308c4:	ldr	r4, [fp, #24]
   308c8:	add	r5, r0, #1
   308cc:	add	r0, r0, #2
   308d0:	cmp	r0, r4
   308d4:	blt	30848 <GetDataSlab+0xe32c>
   308d8:	b	308ec <GetDataSlab+0xe3d0>
   308dc:	ldr	r1, [sp, #36]	; 0x24
   308e0:	ldr	r0, [r1, r0, lsl #2]
   308e4:	add	r2, r2, r0
   308e8:	add	lr, r0, lr
   308ec:	ldr	r4, [sp, #52]	; 0x34
   308f0:	ldr	r1, [sp, #56]	; 0x38
   308f4:	mov	r0, #0
   308f8:	add	r4, sl, r4
   308fc:	cmp	r4, r1
   30900:	str	r4, [sp, #52]	; 0x34
   30904:	blt	307b4 <GetDataSlab+0xe298>
   30908:	b	242ac <GetDataSlab+0x1d90>
   3090c:	ldr	r0, [sp, #56]	; 0x38
   30910:	cmp	r0, #1
   30914:	ldr	r0, [fp, #20]
   30918:	blt	242a8 <GetDataSlab+0x1d8c>
   3091c:	add	r0, r0, #4
   30920:	ldr	r9, [fp, #12]
   30924:	str	r0, [sp, #40]	; 0x28
   30928:	add	r0, sp, #104	; 0x68
   3092c:	orr	ip, r0, #4
   30930:	sub	r0, fp, #72	; 0x48
   30934:	orr	r0, r0, #4
   30938:	str	r0, [sp, #36]	; 0x24
   3093c:	ldr	r0, [r9], #4
   30940:	str	r0, [sp, #44]	; 0x2c
   30944:	mov	r0, #0
   30948:	str	r0, [sp, #52]	; 0x34
   3094c:	ldr	r6, [sp, #44]	; 0x2c
   30950:	cmp	sl, #1
   30954:	add	r0, r6, lr
   30958:	add	r4, r2, r6
   3095c:	blt	309b0 <GetDataSlab+0xe494>
   30960:	ldr	r2, [sp, #60]	; 0x3c
   30964:	ldr	r1, [sp, #52]	; 0x34
   30968:	ldr	r7, [fp, #20]
   3096c:	mov	r6, #0
   30970:	add	r5, r2, r1
   30974:	ldr	r1, [fp, #16]
   30978:	ldrb	r2, [r4]
   3097c:	strb	r2, [r5, r6]
   30980:	add	r6, r6, #1
   30984:	ldr	r3, [r1]
   30988:	ldr	sl, [r7]
   3098c:	add	r0, r3, r0
   30990:	add	r4, r4, r3
   30994:	cmp	r6, sl
   30998:	blt	30978 <GetDataSlab+0xe45c>
   3099c:	ldr	r7, [fp, #12]
   309a0:	ldr	r6, [r7]
   309a4:	ldr	r7, [fp, #8]
   309a8:	ldr	r1, [r7]
   309ac:	b	309b4 <GetDataSlab+0xe498>
   309b0:	ldr	r1, [sp, #48]	; 0x30
   309b4:	mls	r5, r3, sl, r1
   309b8:	str	r1, [sp, #48]	; 0x30
   309bc:	str	r6, [sp, #44]	; 0x2c
   309c0:	sub	r5, r5, r6
   309c4:	add	lr, r5, r0
   309c8:	ldr	r0, [fp, #24]
   309cc:	add	r2, r4, r5
   309d0:	cmp	r0, #2
   309d4:	blt	30a84 <GetDataSlab+0xe568>
   309d8:	ldr	r1, [sp, #40]	; 0x28
   309dc:	mov	r5, #0
   309e0:	mov	r0, r5
   309e4:	ldr	r5, [ip, r5, lsl #2]
   309e8:	add	r5, r5, #1
   309ec:	str	r5, [ip, r0, lsl #2]
   309f0:	ldr	r6, [r1, r0, lsl #2]
   309f4:	sdiv	r8, r5, r6
   309f8:	mls	r5, r8, r6, r5
   309fc:	cmp	r5, #0
   30a00:	bne	30a74 <GetDataSlab+0xe558>
   30a04:	mov	r4, #0
   30a08:	str	r4, [ip, r0, lsl #2]
   30a0c:	add	r4, sp, #64	; 0x40
   30a10:	add	r5, r4, r0, lsl #2
   30a14:	ldr	r5, [r5, #4]
   30a18:	sdiv	r6, lr, r5
   30a1c:	mls	r6, r6, r5, lr
   30a20:	cmp	r6, #0
   30a24:	beq	30a44 <GetDataSlab+0xe528>
   30a28:	ldr	r7, [r4, r0, lsl #2]
   30a2c:	ldr	r4, [r9, r0, lsl #2]
   30a30:	sub	r5, r5, r6
   30a34:	mla	r4, r4, r7, r5
   30a38:	add	lr, r4, lr
   30a3c:	add	r2, r2, r4
   30a40:	b	30a5c <GetDataSlab+0xe540>
   30a44:	ldr	r5, [r9, r0, lsl #2]
   30a48:	cmp	r5, #0
   30a4c:	addne	r4, sp, #64	; 0x40
   30a50:	ldrne	r4, [r4, r0, lsl #2]
   30a54:	mlane	lr, r4, r5, lr
   30a58:	mlane	r2, r4, r5, r2
   30a5c:	ldr	r4, [fp, #24]
   30a60:	add	r5, r0, #1
   30a64:	add	r0, r0, #2
   30a68:	cmp	r0, r4
   30a6c:	blt	309e0 <GetDataSlab+0xe4c4>
   30a70:	b	30a84 <GetDataSlab+0xe568>
   30a74:	ldr	r1, [sp, #36]	; 0x24
   30a78:	ldr	r0, [r1, r0, lsl #2]
   30a7c:	add	r2, r2, r0
   30a80:	add	lr, r0, lr
   30a84:	ldr	r4, [sp, #52]	; 0x34
   30a88:	ldr	r1, [sp, #56]	; 0x38
   30a8c:	mov	r0, #0
   30a90:	add	r4, sl, r4
   30a94:	cmp	r4, r1
   30a98:	str	r4, [sp, #52]	; 0x34
   30a9c:	blt	3094c <GetDataSlab+0xe430>
   30aa0:	b	242ac <GetDataSlab+0x1d90>
   30aa4:	ldr	r0, [sp, #56]	; 0x38
   30aa8:	ldr	r7, [sp, #48]	; 0x30
   30aac:	cmp	r0, #1
   30ab0:	blt	242a8 <GetDataSlab+0x1d8c>
   30ab4:	ldr	r0, [sp, #44]	; 0x2c
   30ab8:	add	ip, ip, #4
   30abc:	mov	sl, #0
   30ac0:	mls	r0, r7, r8, r0
   30ac4:	str	r0, [sp, #52]	; 0x34
   30ac8:	mul	r0, r7, r8
   30acc:	str	r0, [sp, #40]	; 0x28
   30ad0:	ldr	r0, [fp, #20]
   30ad4:	add	r9, r0, #4
   30ad8:	add	r0, sp, #104	; 0x68
   30adc:	orr	r2, r0, #4
   30ae0:	orr	r0, r1, #4
   30ae4:	str	r0, [sp, #36]	; 0x24
   30ae8:	lsl	r0, r7, #1
   30aec:	str	r0, [sp, #44]	; 0x2c
   30af0:	ldr	r0, [fp, #12]
   30af4:	cmp	r7, #1
   30af8:	ldr	r0, [r0]
   30afc:	blt	30b38 <GetDataSlab+0xe61c>
   30b00:	mov	r1, r7
   30b04:	ldr	r7, [sp, #40]	; 0x28
   30b08:	ldr	lr, [sp, #60]	; 0x3c
   30b0c:	add	r4, r7, r3
   30b10:	add	r7, r5, r7
   30b14:	add	r5, r5, r0
   30b18:	mov	r3, r1
   30b1c:	ldrsb	r6, [r5], r8
   30b20:	subs	r3, r3, #1
   30b24:	strh	r6, [lr], #2
   30b28:	bne	30b1c <GetDataSlab+0xe600>
   30b2c:	add	r3, r4, r0
   30b30:	mov	r5, r7
   30b34:	b	30b3c <GetDataSlab+0xe620>
   30b38:	add	r3, r0, r3
   30b3c:	ldr	r1, [sp, #52]	; 0x34
   30b40:	ldr	lr, [sp, #60]	; 0x3c
   30b44:	sub	r0, r1, r0
   30b48:	add	r5, r5, r1
   30b4c:	add	r3, r3, r0
   30b50:	ldr	r0, [fp, #24]
   30b54:	cmp	r0, #2
   30b58:	blt	30c04 <GetDataSlab+0xe6e8>
   30b5c:	mov	r4, #0
   30b60:	ldr	r6, [r2, r4, lsl #2]
   30b64:	mov	r0, r4
   30b68:	add	r6, r6, #1
   30b6c:	str	r6, [r2, r4, lsl #2]
   30b70:	ldr	r4, [r9, r4, lsl #2]
   30b74:	sdiv	r7, r6, r4
   30b78:	mls	r7, r7, r4, r6
   30b7c:	cmp	r7, #0
   30b80:	bne	30bf4 <GetDataSlab+0xe6d8>
   30b84:	mov	r1, #0
   30b88:	str	r1, [r2, r0, lsl #2]
   30b8c:	add	r1, sp, #64	; 0x40
   30b90:	add	r7, r1, r0, lsl #2
   30b94:	ldr	r4, [r7, #4]
   30b98:	sdiv	r7, r3, r4
   30b9c:	mls	r6, r7, r4, r3
   30ba0:	cmp	r6, #0
   30ba4:	beq	30bc4 <GetDataSlab+0xe6a8>
   30ba8:	ldr	r7, [r1, r0, lsl #2]
   30bac:	ldr	r1, [ip, r0, lsl #2]
   30bb0:	sub	r6, r4, r6
   30bb4:	mla	r1, r1, r7, r6
   30bb8:	add	r3, r1, r3
   30bbc:	add	r5, r5, r1
   30bc0:	b	30bdc <GetDataSlab+0xe6c0>
   30bc4:	ldr	r6, [ip, r0, lsl #2]
   30bc8:	cmp	r6, #0
   30bcc:	addne	r1, sp, #64	; 0x40
   30bd0:	ldrne	r1, [r1, r0, lsl #2]
   30bd4:	mlane	r3, r1, r6, r3
   30bd8:	mlane	r5, r1, r6, r5
   30bdc:	ldr	r1, [fp, #24]
   30be0:	add	r4, r0, #1
   30be4:	add	r0, r0, #2
   30be8:	cmp	r0, r1
   30bec:	blt	30b60 <GetDataSlab+0xe644>
   30bf0:	b	30c04 <GetDataSlab+0xe6e8>
   30bf4:	ldr	r1, [sp, #36]	; 0x24
   30bf8:	ldr	r0, [r1, r0, lsl #2]
   30bfc:	add	r5, r5, r0
   30c00:	add	r3, r0, r3
   30c04:	ldr	r7, [sp, #48]	; 0x30
   30c08:	ldr	r0, [sp, #44]	; 0x2c
   30c0c:	ldr	r1, [sp, #56]	; 0x38
   30c10:	add	sl, sl, r7
   30c14:	add	lr, lr, r0
   30c18:	mov	r0, #0
   30c1c:	cmp	sl, r1
   30c20:	str	lr, [sp, #60]	; 0x3c
   30c24:	blt	30af0 <GetDataSlab+0xe5d4>
   30c28:	b	242ac <GetDataSlab+0x1d90>
   30c2c:	ldr	r0, [sp, #56]	; 0x38
   30c30:	ldr	r7, [sp, #48]	; 0x30
   30c34:	cmp	r0, #1
   30c38:	blt	242a8 <GetDataSlab+0x1d8c>
   30c3c:	ldr	r0, [sp, #44]	; 0x2c
   30c40:	add	ip, ip, #4
   30c44:	mov	sl, #0
   30c48:	mls	r0, r7, r8, r0
   30c4c:	str	r0, [sp, #52]	; 0x34
   30c50:	mul	r0, r7, r8
   30c54:	str	r0, [sp, #40]	; 0x28
   30c58:	ldr	r0, [fp, #20]
   30c5c:	add	r9, r0, #4
   30c60:	add	r0, sp, #104	; 0x68
   30c64:	orr	r2, r0, #4
   30c68:	orr	r0, r1, #4
   30c6c:	str	r0, [sp, #36]	; 0x24
   30c70:	lsl	r0, r7, #1
   30c74:	str	r0, [sp, #44]	; 0x2c
   30c78:	ldr	r0, [fp, #12]
   30c7c:	cmp	r7, #1
   30c80:	ldr	r0, [r0]
   30c84:	blt	30cc0 <GetDataSlab+0xe7a4>
   30c88:	mov	r1, r7
   30c8c:	ldr	r7, [sp, #40]	; 0x28
   30c90:	ldr	lr, [sp, #60]	; 0x3c
   30c94:	add	r4, r7, r3
   30c98:	add	r7, r5, r7
   30c9c:	add	r5, r5, r0
   30ca0:	mov	r3, r1
   30ca4:	ldrsb	r6, [r5], r8
   30ca8:	subs	r3, r3, #1
   30cac:	strh	r6, [lr], #2
   30cb0:	bne	30ca4 <GetDataSlab+0xe788>
   30cb4:	add	r3, r4, r0
   30cb8:	mov	r5, r7
   30cbc:	b	30cc4 <GetDataSlab+0xe7a8>
   30cc0:	add	r3, r0, r3
   30cc4:	ldr	r1, [sp, #52]	; 0x34
   30cc8:	ldr	lr, [sp, #60]	; 0x3c
   30ccc:	sub	r0, r1, r0
   30cd0:	add	r5, r5, r1
   30cd4:	add	r3, r3, r0
   30cd8:	ldr	r0, [fp, #24]
   30cdc:	cmp	r0, #2
   30ce0:	blt	30d8c <GetDataSlab+0xe870>
   30ce4:	mov	r4, #0
   30ce8:	ldr	r6, [r2, r4, lsl #2]
   30cec:	mov	r0, r4
   30cf0:	add	r6, r6, #1
   30cf4:	str	r6, [r2, r4, lsl #2]
   30cf8:	ldr	r4, [r9, r4, lsl #2]
   30cfc:	sdiv	r7, r6, r4
   30d00:	mls	r7, r7, r4, r6
   30d04:	cmp	r7, #0
   30d08:	bne	30d7c <GetDataSlab+0xe860>
   30d0c:	mov	r1, #0
   30d10:	str	r1, [r2, r0, lsl #2]
   30d14:	add	r1, sp, #64	; 0x40
   30d18:	add	r7, r1, r0, lsl #2
   30d1c:	ldr	r4, [r7, #4]
   30d20:	sdiv	r7, r3, r4
   30d24:	mls	r6, r7, r4, r3
   30d28:	cmp	r6, #0
   30d2c:	beq	30d4c <GetDataSlab+0xe830>
   30d30:	ldr	r7, [r1, r0, lsl #2]
   30d34:	ldr	r1, [ip, r0, lsl #2]
   30d38:	sub	r6, r4, r6
   30d3c:	mla	r1, r1, r7, r6
   30d40:	add	r3, r1, r3
   30d44:	add	r5, r5, r1
   30d48:	b	30d64 <GetDataSlab+0xe848>
   30d4c:	ldr	r6, [ip, r0, lsl #2]
   30d50:	cmp	r6, #0
   30d54:	addne	r1, sp, #64	; 0x40
   30d58:	ldrne	r1, [r1, r0, lsl #2]
   30d5c:	mlane	r3, r1, r6, r3
   30d60:	mlane	r5, r1, r6, r5
   30d64:	ldr	r1, [fp, #24]
   30d68:	add	r4, r0, #1
   30d6c:	add	r0, r0, #2
   30d70:	cmp	r0, r1
   30d74:	blt	30ce8 <GetDataSlab+0xe7cc>
   30d78:	b	30d8c <GetDataSlab+0xe870>
   30d7c:	ldr	r1, [sp, #36]	; 0x24
   30d80:	ldr	r0, [r1, r0, lsl #2]
   30d84:	add	r5, r5, r0
   30d88:	add	r3, r0, r3
   30d8c:	ldr	r7, [sp, #48]	; 0x30
   30d90:	ldr	r0, [sp, #44]	; 0x2c
   30d94:	ldr	r1, [sp, #56]	; 0x38
   30d98:	add	sl, sl, r7
   30d9c:	add	lr, lr, r0
   30da0:	mov	r0, #0
   30da4:	cmp	sl, r1
   30da8:	str	lr, [sp, #60]	; 0x3c
   30dac:	blt	30c78 <GetDataSlab+0xe75c>
   30db0:	b	242ac <GetDataSlab+0x1d90>
   30db4:	ldr	r0, [sp, #56]	; 0x38
   30db8:	cmp	r0, #1
   30dbc:	ldr	r0, [fp, #20]
   30dc0:	blt	242a8 <GetDataSlab+0x1d8c>
   30dc4:	add	r0, r0, #4
   30dc8:	ldr	r9, [fp, #12]
   30dcc:	str	r0, [sp, #40]	; 0x28
   30dd0:	add	r0, sp, #104	; 0x68
   30dd4:	orr	ip, r0, #4
   30dd8:	sub	r0, fp, #72	; 0x48
   30ddc:	orr	r0, r0, #4
   30de0:	str	r0, [sp, #36]	; 0x24
   30de4:	ldr	r0, [r9], #4
   30de8:	str	r0, [sp, #44]	; 0x2c
   30dec:	mov	r0, #0
   30df0:	str	r0, [sp, #52]	; 0x34
   30df4:	ldr	r6, [sp, #44]	; 0x2c
   30df8:	cmp	lr, #1
   30dfc:	add	r0, r6, sl
   30e00:	add	r4, r2, r6
   30e04:	blt	30e58 <GetDataSlab+0xe93c>
   30e08:	ldr	r2, [sp, #60]	; 0x3c
   30e0c:	ldr	r1, [sp, #52]	; 0x34
   30e10:	ldr	r7, [fp, #20]
   30e14:	mov	r6, #0
   30e18:	add	r5, r2, r1, lsl #2
   30e1c:	ldr	r1, [fp, #16]
   30e20:	ldrsb	r2, [r4]
   30e24:	str	r2, [r5, r6, lsl #2]
   30e28:	add	r6, r6, #1
   30e2c:	ldr	r3, [r1]
   30e30:	ldr	lr, [r7]
   30e34:	add	r0, r3, r0
   30e38:	add	r4, r4, r3
   30e3c:	cmp	r6, lr
   30e40:	blt	30e20 <GetDataSlab+0xe904>
   30e44:	ldr	r7, [fp, #12]
   30e48:	ldr	r6, [r7]
   30e4c:	ldr	r7, [fp, #8]
   30e50:	ldr	r1, [r7]
   30e54:	b	30e5c <GetDataSlab+0xe940>
   30e58:	ldr	r1, [sp, #48]	; 0x30
   30e5c:	mls	r5, r3, lr, r1
   30e60:	str	r1, [sp, #48]	; 0x30
   30e64:	str	r6, [sp, #44]	; 0x2c
   30e68:	sub	r5, r5, r6
   30e6c:	add	sl, r5, r0
   30e70:	ldr	r0, [fp, #24]
   30e74:	add	r2, r4, r5
   30e78:	cmp	r0, #2
   30e7c:	blt	30f2c <GetDataSlab+0xea10>
   30e80:	ldr	r1, [sp, #40]	; 0x28
   30e84:	mov	r5, #0
   30e88:	mov	r0, r5
   30e8c:	ldr	r5, [ip, r5, lsl #2]
   30e90:	add	r5, r5, #1
   30e94:	str	r5, [ip, r0, lsl #2]
   30e98:	ldr	r6, [r1, r0, lsl #2]
   30e9c:	sdiv	r8, r5, r6
   30ea0:	mls	r5, r8, r6, r5
   30ea4:	cmp	r5, #0
   30ea8:	bne	30f1c <GetDataSlab+0xea00>
   30eac:	mov	r4, #0
   30eb0:	str	r4, [ip, r0, lsl #2]
   30eb4:	add	r4, sp, #64	; 0x40
   30eb8:	add	r5, r4, r0, lsl #2
   30ebc:	ldr	r5, [r5, #4]
   30ec0:	sdiv	r6, sl, r5
   30ec4:	mls	r6, r6, r5, sl
   30ec8:	cmp	r6, #0
   30ecc:	beq	30eec <GetDataSlab+0xe9d0>
   30ed0:	ldr	r7, [r4, r0, lsl #2]
   30ed4:	ldr	r4, [r9, r0, lsl #2]
   30ed8:	sub	r5, r5, r6
   30edc:	mla	r4, r4, r7, r5
   30ee0:	add	sl, r4, sl
   30ee4:	add	r2, r2, r4
   30ee8:	b	30f04 <GetDataSlab+0xe9e8>
   30eec:	ldr	r5, [r9, r0, lsl #2]
   30ef0:	cmp	r5, #0
   30ef4:	addne	r4, sp, #64	; 0x40
   30ef8:	ldrne	r4, [r4, r0, lsl #2]
   30efc:	mlane	sl, r4, r5, sl
   30f00:	mlane	r2, r4, r5, r2
   30f04:	ldr	r4, [fp, #24]
   30f08:	add	r5, r0, #1
   30f0c:	add	r0, r0, #2
   30f10:	cmp	r0, r4
   30f14:	blt	30e88 <GetDataSlab+0xe96c>
   30f18:	b	30f2c <GetDataSlab+0xea10>
   30f1c:	ldr	r1, [sp, #36]	; 0x24
   30f20:	ldr	r0, [r1, r0, lsl #2]
   30f24:	add	r2, r2, r0
   30f28:	add	sl, r0, sl
   30f2c:	ldr	r4, [sp, #52]	; 0x34
   30f30:	ldr	r1, [sp, #56]	; 0x38
   30f34:	mov	r0, #0
   30f38:	add	r4, lr, r4
   30f3c:	cmp	r4, r1
   30f40:	str	r4, [sp, #52]	; 0x34
   30f44:	blt	30df4 <GetDataSlab+0xe8d8>
   30f48:	b	242ac <GetDataSlab+0x1d90>
   30f4c:	ldr	r0, [sp, #56]	; 0x38
   30f50:	cmp	r0, #1
   30f54:	ldr	r0, [fp, #20]
   30f58:	blt	242a8 <GetDataSlab+0x1d8c>
   30f5c:	add	r0, r0, #4
   30f60:	ldr	r9, [fp, #12]
   30f64:	str	r0, [sp, #40]	; 0x28
   30f68:	add	r0, sp, #104	; 0x68
   30f6c:	orr	ip, r0, #4
   30f70:	sub	r0, fp, #72	; 0x48
   30f74:	orr	r0, r0, #4
   30f78:	str	r0, [sp, #36]	; 0x24
   30f7c:	ldr	r0, [r9], #4
   30f80:	str	r0, [sp, #44]	; 0x2c
   30f84:	mov	r0, #0
   30f88:	str	r0, [sp, #52]	; 0x34
   30f8c:	ldr	r6, [sp, #44]	; 0x2c
   30f90:	cmp	lr, #1
   30f94:	add	r0, r6, sl
   30f98:	add	r4, r2, r6
   30f9c:	blt	30ff0 <GetDataSlab+0xead4>
   30fa0:	ldr	r2, [sp, #60]	; 0x3c
   30fa4:	ldr	r1, [sp, #52]	; 0x34
   30fa8:	ldr	r7, [fp, #20]
   30fac:	mov	r6, #0
   30fb0:	add	r5, r2, r1, lsl #2
   30fb4:	ldr	r1, [fp, #16]
   30fb8:	ldrsb	r2, [r4]
   30fbc:	str	r2, [r5, r6, lsl #2]
   30fc0:	add	r6, r6, #1
   30fc4:	ldr	r3, [r1]
   30fc8:	ldr	lr, [r7]
   30fcc:	add	r0, r3, r0
   30fd0:	add	r4, r4, r3
   30fd4:	cmp	r6, lr
   30fd8:	blt	30fb8 <GetDataSlab+0xea9c>
   30fdc:	ldr	r7, [fp, #12]
   30fe0:	ldr	r6, [r7]
   30fe4:	ldr	r7, [fp, #8]
   30fe8:	ldr	r1, [r7]
   30fec:	b	30ff4 <GetDataSlab+0xead8>
   30ff0:	ldr	r1, [sp, #48]	; 0x30
   30ff4:	mls	r5, r3, lr, r1
   30ff8:	str	r1, [sp, #48]	; 0x30
   30ffc:	str	r6, [sp, #44]	; 0x2c
   31000:	sub	r5, r5, r6
   31004:	add	sl, r5, r0
   31008:	ldr	r0, [fp, #24]
   3100c:	add	r2, r4, r5
   31010:	cmp	r0, #2
   31014:	blt	310c4 <GetDataSlab+0xeba8>
   31018:	ldr	r1, [sp, #40]	; 0x28
   3101c:	mov	r5, #0
   31020:	mov	r0, r5
   31024:	ldr	r5, [ip, r5, lsl #2]
   31028:	add	r5, r5, #1
   3102c:	str	r5, [ip, r0, lsl #2]
   31030:	ldr	r6, [r1, r0, lsl #2]
   31034:	sdiv	r8, r5, r6
   31038:	mls	r5, r8, r6, r5
   3103c:	cmp	r5, #0
   31040:	bne	310b4 <GetDataSlab+0xeb98>
   31044:	mov	r4, #0
   31048:	str	r4, [ip, r0, lsl #2]
   3104c:	add	r4, sp, #64	; 0x40
   31050:	add	r5, r4, r0, lsl #2
   31054:	ldr	r5, [r5, #4]
   31058:	sdiv	r6, sl, r5
   3105c:	mls	r6, r6, r5, sl
   31060:	cmp	r6, #0
   31064:	beq	31084 <GetDataSlab+0xeb68>
   31068:	ldr	r7, [r4, r0, lsl #2]
   3106c:	ldr	r4, [r9, r0, lsl #2]
   31070:	sub	r5, r5, r6
   31074:	mla	r4, r4, r7, r5
   31078:	add	sl, r4, sl
   3107c:	add	r2, r2, r4
   31080:	b	3109c <GetDataSlab+0xeb80>
   31084:	ldr	r5, [r9, r0, lsl #2]
   31088:	cmp	r5, #0
   3108c:	addne	r4, sp, #64	; 0x40
   31090:	ldrne	r4, [r4, r0, lsl #2]
   31094:	mlane	sl, r4, r5, sl
   31098:	mlane	r2, r4, r5, r2
   3109c:	ldr	r4, [fp, #24]
   310a0:	add	r5, r0, #1
   310a4:	add	r0, r0, #2
   310a8:	cmp	r0, r4
   310ac:	blt	31020 <GetDataSlab+0xeb04>
   310b0:	b	310c4 <GetDataSlab+0xeba8>
   310b4:	ldr	r1, [sp, #36]	; 0x24
   310b8:	ldr	r0, [r1, r0, lsl #2]
   310bc:	add	r2, r2, r0
   310c0:	add	sl, r0, sl
   310c4:	ldr	r4, [sp, #52]	; 0x34
   310c8:	ldr	r1, [sp, #56]	; 0x38
   310cc:	mov	r0, #0
   310d0:	add	r4, lr, r4
   310d4:	cmp	r4, r1
   310d8:	str	r4, [sp, #52]	; 0x34
   310dc:	blt	30f8c <GetDataSlab+0xea70>
   310e0:	b	242ac <GetDataSlab+0x1d90>
   310e4:	ldr	r0, [sp, #56]	; 0x38
   310e8:	cmp	r0, #1
   310ec:	blt	242a8 <GetDataSlab+0x1d8c>
   310f0:	ldr	r0, [sp, #48]	; 0x30
   310f4:	ldr	r1, [sp, #44]	; 0x2c
   310f8:	add	r9, ip, #4
   310fc:	str	r9, [sp, #32]
   31100:	mls	r1, r0, lr, r1
   31104:	mov	ip, r0
   31108:	str	r1, [sp, #44]	; 0x2c
   3110c:	mul	r1, r0, lr
   31110:	ldr	r0, [fp, #20]
   31114:	str	r1, [sp, #36]	; 0x24
   31118:	add	r8, r0, #4
   3111c:	add	r0, sp, #104	; 0x68
   31120:	orr	r2, r0, #4
   31124:	sub	r0, fp, #72	; 0x48
   31128:	orr	r0, r0, #4
   3112c:	str	r0, [sp, #28]
   31130:	lsl	r0, ip, #3
   31134:	str	r0, [sp, #40]	; 0x28
   31138:	mov	r0, #0
   3113c:	str	r0, [sp, #52]	; 0x34
   31140:	ldr	r0, [fp, #12]
   31144:	cmp	ip, #1
   31148:	ldr	r0, [r0]
   3114c:	blt	31194 <GetDataSlab+0xec78>
   31150:	ldr	r1, [sp, #36]	; 0x24
   31154:	mov	r4, ip
   31158:	ldr	ip, [sp, #60]	; 0x3c
   3115c:	add	r5, sl, r0
   31160:	add	r7, r1, r3
   31164:	add	r3, sl, r1
   31168:	ldrsb	r6, [r5], lr
   3116c:	subs	r4, r4, #1
   31170:	asr	r9, r6, #31
   31174:	stm	ip, {r6, r9}
   31178:	add	ip, ip, #8
   3117c:	bne	31168 <GetDataSlab+0xec4c>
   31180:	ldr	ip, [sp, #48]	; 0x30
   31184:	ldr	r9, [sp, #32]
   31188:	add	r4, r7, r0
   3118c:	mov	sl, r3
   31190:	b	31198 <GetDataSlab+0xec7c>
   31194:	add	r4, r0, r3
   31198:	add	r5, sp, #64	; 0x40
   3119c:	ldr	r1, [sp, #44]	; 0x2c
   311a0:	sub	r0, r1, r0
   311a4:	add	sl, sl, r1
   311a8:	add	r3, r4, r0
   311ac:	ldr	r0, [fp, #24]
   311b0:	cmp	r0, #2
   311b4:	blt	31258 <GetDataSlab+0xed3c>
   311b8:	mov	r4, #0
   311bc:	ldr	r6, [r2, r4, lsl #2]
   311c0:	mov	r0, r4
   311c4:	add	r6, r6, #1
   311c8:	str	r6, [r2, r4, lsl #2]
   311cc:	ldr	r4, [r8, r4, lsl #2]
   311d0:	sdiv	r7, r6, r4
   311d4:	mls	r7, r7, r4, r6
   311d8:	cmp	r7, #0
   311dc:	bne	31248 <GetDataSlab+0xed2c>
   311e0:	add	r7, r5, r0, lsl #2
   311e4:	mov	r1, #0
   311e8:	ldr	r4, [r7, #4]
   311ec:	str	r1, [r2, r0, lsl #2]
   311f0:	sdiv	r7, r3, r4
   311f4:	mls	r6, r7, r4, r3
   311f8:	cmp	r6, #0
   311fc:	beq	3121c <GetDataSlab+0xed00>
   31200:	ldr	r7, [r5, r0, lsl #2]
   31204:	ldr	r1, [r9, r0, lsl #2]
   31208:	sub	r6, r4, r6
   3120c:	mla	r1, r1, r7, r6
   31210:	add	r3, r1, r3
   31214:	add	sl, sl, r1
   31218:	b	31230 <GetDataSlab+0xed14>
   3121c:	ldr	r6, [r9, r0, lsl #2]
   31220:	cmp	r6, #0
   31224:	ldrne	r1, [r5, r0, lsl #2]
   31228:	mlane	r3, r1, r6, r3
   3122c:	mlane	sl, r1, r6, sl
   31230:	ldr	r1, [fp, #24]
   31234:	add	r4, r0, #1
   31238:	add	r0, r0, #2
   3123c:	cmp	r0, r1
   31240:	blt	311bc <GetDataSlab+0xeca0>
   31244:	b	31258 <GetDataSlab+0xed3c>
   31248:	ldr	r1, [sp, #28]
   3124c:	ldr	r0, [r1, r0, lsl #2]
   31250:	add	sl, sl, r0
   31254:	add	r3, r0, r3
   31258:	ldr	r0, [sp, #60]	; 0x3c
   3125c:	ldr	r1, [sp, #40]	; 0x28
   31260:	ldr	r4, [sp, #52]	; 0x34
   31264:	add	r0, r0, r1
   31268:	ldr	r1, [sp, #56]	; 0x38
   3126c:	add	r4, r4, ip
   31270:	str	r0, [sp, #60]	; 0x3c
   31274:	mov	r0, #0
   31278:	str	r4, [sp, #52]	; 0x34
   3127c:	cmp	r4, r1
   31280:	blt	31140 <GetDataSlab+0xec24>
   31284:	b	242ac <GetDataSlab+0x1d90>
   31288:	ldr	r0, [sp, #56]	; 0x38
   3128c:	cmp	r0, #1
   31290:	blt	242a8 <GetDataSlab+0x1d8c>
   31294:	ldr	r0, [sp, #48]	; 0x30
   31298:	ldr	r1, [sp, #44]	; 0x2c
   3129c:	add	r9, ip, #4
   312a0:	str	r9, [sp, #32]
   312a4:	mls	r1, r0, lr, r1
   312a8:	mov	ip, r0
   312ac:	str	r1, [sp, #44]	; 0x2c
   312b0:	mul	r1, r0, lr
   312b4:	ldr	r0, [fp, #20]
   312b8:	str	r1, [sp, #36]	; 0x24
   312bc:	add	r8, r0, #4
   312c0:	add	r0, sp, #104	; 0x68
   312c4:	orr	r2, r0, #4
   312c8:	sub	r0, fp, #72	; 0x48
   312cc:	orr	r0, r0, #4
   312d0:	str	r0, [sp, #28]
   312d4:	lsl	r0, ip, #3
   312d8:	str	r0, [sp, #40]	; 0x28
   312dc:	mov	r0, #0
   312e0:	str	r0, [sp, #52]	; 0x34
   312e4:	ldr	r0, [fp, #12]
   312e8:	cmp	ip, #1
   312ec:	ldr	r0, [r0]
   312f0:	blt	31338 <GetDataSlab+0xee1c>
   312f4:	ldr	r1, [sp, #36]	; 0x24
   312f8:	mov	r4, ip
   312fc:	ldr	ip, [sp, #60]	; 0x3c
   31300:	add	r5, sl, r0
   31304:	add	r7, r1, r3
   31308:	add	r3, sl, r1
   3130c:	ldrsb	r6, [r5], lr
   31310:	subs	r4, r4, #1
   31314:	asr	r9, r6, #31
   31318:	stm	ip, {r6, r9}
   3131c:	add	ip, ip, #8
   31320:	bne	3130c <GetDataSlab+0xedf0>
   31324:	ldr	ip, [sp, #48]	; 0x30
   31328:	ldr	r9, [sp, #32]
   3132c:	add	r4, r7, r0
   31330:	mov	sl, r3
   31334:	b	3133c <GetDataSlab+0xee20>
   31338:	add	r4, r0, r3
   3133c:	add	r5, sp, #64	; 0x40
   31340:	ldr	r1, [sp, #44]	; 0x2c
   31344:	sub	r0, r1, r0
   31348:	add	sl, sl, r1
   3134c:	add	r3, r4, r0
   31350:	ldr	r0, [fp, #24]
   31354:	cmp	r0, #2
   31358:	blt	313fc <GetDataSlab+0xeee0>
   3135c:	mov	r4, #0
   31360:	ldr	r6, [r2, r4, lsl #2]
   31364:	mov	r0, r4
   31368:	add	r6, r6, #1
   3136c:	str	r6, [r2, r4, lsl #2]
   31370:	ldr	r4, [r8, r4, lsl #2]
   31374:	sdiv	r7, r6, r4
   31378:	mls	r7, r7, r4, r6
   3137c:	cmp	r7, #0
   31380:	bne	313ec <GetDataSlab+0xeed0>
   31384:	add	r7, r5, r0, lsl #2
   31388:	mov	r1, #0
   3138c:	ldr	r4, [r7, #4]
   31390:	str	r1, [r2, r0, lsl #2]
   31394:	sdiv	r7, r3, r4
   31398:	mls	r6, r7, r4, r3
   3139c:	cmp	r6, #0
   313a0:	beq	313c0 <GetDataSlab+0xeea4>
   313a4:	ldr	r7, [r5, r0, lsl #2]
   313a8:	ldr	r1, [r9, r0, lsl #2]
   313ac:	sub	r6, r4, r6
   313b0:	mla	r1, r1, r7, r6
   313b4:	add	r3, r1, r3
   313b8:	add	sl, sl, r1
   313bc:	b	313d4 <GetDataSlab+0xeeb8>
   313c0:	ldr	r6, [r9, r0, lsl #2]
   313c4:	cmp	r6, #0
   313c8:	ldrne	r1, [r5, r0, lsl #2]
   313cc:	mlane	r3, r1, r6, r3
   313d0:	mlane	sl, r1, r6, sl
   313d4:	ldr	r1, [fp, #24]
   313d8:	add	r4, r0, #1
   313dc:	add	r0, r0, #2
   313e0:	cmp	r0, r1
   313e4:	blt	31360 <GetDataSlab+0xee44>
   313e8:	b	313fc <GetDataSlab+0xeee0>
   313ec:	ldr	r1, [sp, #28]
   313f0:	ldr	r0, [r1, r0, lsl #2]
   313f4:	add	sl, sl, r0
   313f8:	add	r3, r0, r3
   313fc:	ldr	r0, [sp, #60]	; 0x3c
   31400:	ldr	r1, [sp, #40]	; 0x28
   31404:	ldr	r4, [sp, #52]	; 0x34
   31408:	add	r0, r0, r1
   3140c:	ldr	r1, [sp, #56]	; 0x38
   31410:	add	r4, r4, ip
   31414:	str	r0, [sp, #60]	; 0x3c
   31418:	mov	r0, #0
   3141c:	str	r4, [sp, #52]	; 0x34
   31420:	cmp	r4, r1
   31424:	blt	312e4 <GetDataSlab+0xedc8>
   31428:	b	242ac <GetDataSlab+0x1d90>
   3142c:	ldr	r0, [sp, #56]	; 0x38
   31430:	ldr	r4, [sp, #48]	; 0x30
   31434:	cmp	r0, #1
   31438:	blt	242a8 <GetDataSlab+0x1d8c>
   3143c:	ldr	r0, [sp, #44]	; 0x2c
   31440:	add	r9, ip, #4
   31444:	mov	lr, #0
   31448:	mls	r0, r4, sl, r0
   3144c:	str	r0, [sp, #52]	; 0x34
   31450:	mul	r0, r4, sl
   31454:	str	r0, [sp, #40]	; 0x28
   31458:	ldr	r0, [fp, #20]
   3145c:	add	r8, r0, #4
   31460:	add	r0, sp, #104	; 0x68
   31464:	orr	r2, r0, #4
   31468:	sub	r0, fp, #72	; 0x48
   3146c:	orr	r0, r0, #4
   31470:	str	r0, [sp, #36]	; 0x24
   31474:	lsl	r0, r4, #3
   31478:	str	r0, [sp, #44]	; 0x2c
   3147c:	ldr	r0, [fp, #12]
   31480:	cmp	r4, #1
   31484:	ldr	r0, [r0]
   31488:	blt	314cc <GetDataSlab+0xefb0>
   3148c:	ldr	r1, [sp, #40]	; 0x28
   31490:	ldr	ip, [sp, #60]	; 0x3c
   31494:	mov	r7, r1
   31498:	add	r1, r1, r3
   3149c:	add	r3, r5, r7
   314a0:	add	r5, r5, r0
   314a4:	ldrb	r6, [r5], sl
   314a8:	subs	r4, r4, #1
   314ac:	vmov	s0, r6
   314b0:	vcvt.f64.u32	d16, s0
   314b4:	vstr	d16, [ip]
   314b8:	add	ip, ip, #8
   314bc:	bne	314a4 <GetDataSlab+0xef88>
   314c0:	add	r4, r1, r0
   314c4:	mov	r5, r3
   314c8:	b	314d0 <GetDataSlab+0xefb4>
   314cc:	add	r4, r0, r3
   314d0:	ldr	r1, [sp, #52]	; 0x34
   314d4:	add	ip, sp, #64	; 0x40
   314d8:	sub	r0, r1, r0
   314dc:	add	r5, r5, r1
   314e0:	add	r3, r4, r0
   314e4:	ldr	r0, [fp, #24]
   314e8:	cmp	r0, #2
   314ec:	blt	31590 <GetDataSlab+0xf074>
   314f0:	mov	r4, #0
   314f4:	ldr	r6, [r2, r4, lsl #2]
   314f8:	mov	r0, r4
   314fc:	add	r6, r6, #1
   31500:	str	r6, [r2, r4, lsl #2]
   31504:	ldr	r4, [r8, r4, lsl #2]
   31508:	sdiv	r7, r6, r4
   3150c:	mls	r7, r7, r4, r6
   31510:	cmp	r7, #0
   31514:	bne	31580 <GetDataSlab+0xf064>
   31518:	add	r7, ip, r0, lsl #2
   3151c:	mov	r1, #0
   31520:	ldr	r4, [r7, #4]
   31524:	str	r1, [r2, r0, lsl #2]
   31528:	sdiv	r7, r3, r4
   3152c:	mls	r6, r7, r4, r3
   31530:	cmp	r6, #0
   31534:	beq	31554 <GetDataSlab+0xf038>
   31538:	ldr	r7, [ip, r0, lsl #2]
   3153c:	ldr	r1, [r9, r0, lsl #2]
   31540:	sub	r6, r4, r6
   31544:	mla	r1, r1, r7, r6
   31548:	add	r3, r1, r3
   3154c:	add	r5, r5, r1
   31550:	b	31568 <GetDataSlab+0xf04c>
   31554:	ldr	r6, [r9, r0, lsl #2]
   31558:	cmp	r6, #0
   3155c:	ldrne	r1, [ip, r0, lsl #2]
   31560:	mlane	r3, r1, r6, r3
   31564:	mlane	r5, r1, r6, r5
   31568:	ldr	r1, [fp, #24]
   3156c:	add	r4, r0, #1
   31570:	add	r0, r0, #2
   31574:	cmp	r0, r1
   31578:	blt	314f4 <GetDataSlab+0xefd8>
   3157c:	b	31590 <GetDataSlab+0xf074>
   31580:	ldr	r1, [sp, #36]	; 0x24
   31584:	ldr	r0, [r1, r0, lsl #2]
   31588:	add	r5, r5, r0
   3158c:	add	r3, r0, r3
   31590:	ldr	r0, [sp, #60]	; 0x3c
   31594:	ldr	r1, [sp, #44]	; 0x2c
   31598:	ldr	r4, [sp, #48]	; 0x30
   3159c:	add	r0, r0, r1
   315a0:	ldr	r1, [sp, #56]	; 0x38
   315a4:	add	lr, lr, r4
   315a8:	str	r0, [sp, #60]	; 0x3c
   315ac:	mov	r0, #0
   315b0:	cmp	lr, r1
   315b4:	blt	3147c <GetDataSlab+0xef60>
   315b8:	b	242ac <GetDataSlab+0x1d90>
   315bc:	ldr	r0, [sp, #48]	; 0x30
   315c0:	cmp	r0, #1
   315c4:	ldr	r0, [sp, #44]	; 0x2c
   315c8:	blt	242a8 <GetDataSlab+0x1d8c>
   315cc:	ldr	r1, [sp, #40]	; 0x28
   315d0:	ldr	r3, [ip], #4
   315d4:	lsl	r4, r8, #1
   315d8:	mov	sl, #0
   315dc:	mls	r0, r0, r8, r1
   315e0:	mov	r1, lr
   315e4:	str	ip, [sp, #56]	; 0x38
   315e8:	str	r3, [sp, #52]	; 0x34
   315ec:	sub	r0, r0, r3
   315f0:	str	r0, [sp, #40]	; 0x28
   315f4:	ldr	r0, [fp, #20]
   315f8:	add	lr, r0, #4
   315fc:	add	r0, sp, #104	; 0x68
   31600:	orr	r6, r0, #4
   31604:	orr	r0, r1, #4
   31608:	ldr	r1, [sp, #44]	; 0x2c
   3160c:	str	r0, [sp, #28]
   31610:	mla	r0, r1, r8, r3
   31614:	mov	r8, #0
   31618:	str	r0, [sp, #32]
   3161c:	lsl	r0, r1, #3
   31620:	str	r0, [sp, #36]	; 0x24
   31624:	ldr	r0, [sp, #52]	; 0x34
   31628:	cmp	r1, #1
   3162c:	blt	31660 <GetDataSlab+0xf144>
   31630:	ldr	r0, [sp, #52]	; 0x34
   31634:	ldr	r1, [sp, #44]	; 0x2c
   31638:	ldr	ip, [sp, #60]	; 0x3c
   3163c:	add	r0, r9, r0, lsl #1
   31640:	ldrsh	r3, [r0], r4
   31644:	subs	r1, r1, #1
   31648:	vmov	s0, r3
   3164c:	vcvt.f64.s32	d16, s0
   31650:	vstr	d16, [ip]
   31654:	add	ip, ip, #8
   31658:	bne	31640 <GetDataSlab+0xf124>
   3165c:	ldr	r0, [sp, #32]
   31660:	ldr	r3, [sp, #40]	; 0x28
   31664:	add	r1, r9, r3, lsl #1
   31668:	add	r9, r1, r0, lsl #1
   3166c:	add	r0, r0, r2
   31670:	add	r2, r0, r3
   31674:	ldr	r0, [fp, #24]
   31678:	cmp	r0, #2
   3167c:	blt	3172c <GetDataSlab+0xf210>
   31680:	ldr	ip, [sp, #56]	; 0x38
   31684:	mov	r1, #0
   31688:	mov	r0, r1
   3168c:	ldr	r1, [r6, r1, lsl #2]
   31690:	add	r1, r1, #1
   31694:	str	r1, [r6, r0, lsl #2]
   31698:	ldr	r3, [lr, r0, lsl #2]
   3169c:	sdiv	r7, r1, r3
   316a0:	mls	r1, r7, r3, r1
   316a4:	cmp	r1, #0
   316a8:	bne	3171c <GetDataSlab+0xf200>
   316ac:	add	r5, sp, #64	; 0x40
   316b0:	str	sl, [r6, r0, lsl #2]
   316b4:	add	r1, r5, r0, lsl #2
   316b8:	ldr	r1, [r1, #4]
   316bc:	sdiv	r3, r2, r1
   316c0:	mls	r3, r3, r1, r2
   316c4:	cmp	r3, #0
   316c8:	beq	316e4 <GetDataSlab+0xf1c8>
   316cc:	ldr	r7, [r5, r0, lsl #2]
   316d0:	ldr	r5, [ip, r0, lsl #2]
   316d4:	sub	r1, r1, r3
   316d8:	mla	r1, r5, r7, r1
   316dc:	add	r2, r1, r2
   316e0:	b	31700 <GetDataSlab+0xf1e4>
   316e4:	ldr	r1, [ip, r0, lsl #2]
   316e8:	cmp	r1, #0
   316ec:	beq	31704 <GetDataSlab+0xf1e8>
   316f0:	add	r3, sp, #64	; 0x40
   316f4:	ldr	r3, [r3, r0, lsl #2]
   316f8:	mla	r2, r3, r1, r2
   316fc:	mul	r1, r3, r1
   31700:	add	r9, r9, r1, lsl #1
   31704:	ldr	r3, [fp, #24]
   31708:	add	r1, r0, #1
   3170c:	add	r0, r0, #2
   31710:	cmp	r0, r3
   31714:	blt	31688 <GetDataSlab+0xf16c>
   31718:	b	3172c <GetDataSlab+0xf210>
   3171c:	ldr	r1, [sp, #28]
   31720:	ldr	r0, [r1, r0, lsl #2]
   31724:	add	r9, r9, r0, lsl #1
   31728:	add	r2, r0, r2
   3172c:	ldr	r0, [sp, #60]	; 0x3c
   31730:	ldr	r1, [sp, #36]	; 0x24
   31734:	ldr	r3, [sp, #48]	; 0x30
   31738:	add	r0, r0, r1
   3173c:	ldr	r1, [sp, #44]	; 0x2c
   31740:	str	r0, [sp, #60]	; 0x3c
   31744:	mov	r0, #0
   31748:	add	r8, r8, r1
   3174c:	cmp	r8, r3
   31750:	blt	31624 <GetDataSlab+0xf108>
   31754:	b	242ac <GetDataSlab+0x1d90>
   31758:	ldr	r0, [sp, #48]	; 0x30
   3175c:	cmp	r0, #1
   31760:	ldr	r0, [sp, #44]	; 0x2c
   31764:	blt	242a8 <GetDataSlab+0x1d8c>
   31768:	ldr	r1, [sp, #40]	; 0x28
   3176c:	ldr	r3, [ip], #4
   31770:	lsl	r4, r8, #1
   31774:	mov	sl, #0
   31778:	mls	r0, r0, r8, r1
   3177c:	mov	r1, lr
   31780:	str	ip, [sp, #56]	; 0x38
   31784:	str	r3, [sp, #52]	; 0x34
   31788:	sub	r0, r0, r3
   3178c:	str	r0, [sp, #40]	; 0x28
   31790:	ldr	r0, [fp, #20]
   31794:	add	lr, r0, #4
   31798:	add	r0, sp, #104	; 0x68
   3179c:	orr	r6, r0, #4
   317a0:	orr	r0, r1, #4
   317a4:	ldr	r1, [sp, #44]	; 0x2c
   317a8:	str	r0, [sp, #28]
   317ac:	mla	r0, r1, r8, r3
   317b0:	mov	r8, #0
   317b4:	str	r0, [sp, #32]
   317b8:	lsl	r0, r1, #3
   317bc:	str	r0, [sp, #36]	; 0x24
   317c0:	ldr	r0, [sp, #52]	; 0x34
   317c4:	cmp	r1, #1
   317c8:	blt	317fc <GetDataSlab+0xf2e0>
   317cc:	ldr	r0, [sp, #52]	; 0x34
   317d0:	ldr	r1, [sp, #44]	; 0x2c
   317d4:	ldr	ip, [sp, #60]	; 0x3c
   317d8:	add	r0, r9, r0, lsl #1
   317dc:	ldrh	r3, [r0], r4
   317e0:	subs	r1, r1, #1
   317e4:	vmov	s0, r3
   317e8:	vcvt.f64.u32	d16, s0
   317ec:	vstr	d16, [ip]
   317f0:	add	ip, ip, #8
   317f4:	bne	317dc <GetDataSlab+0xf2c0>
   317f8:	ldr	r0, [sp, #32]
   317fc:	ldr	r3, [sp, #40]	; 0x28
   31800:	add	r1, r9, r3, lsl #1
   31804:	add	r9, r1, r0, lsl #1
   31808:	add	r0, r0, r2
   3180c:	add	r2, r0, r3
   31810:	ldr	r0, [fp, #24]
   31814:	cmp	r0, #2
   31818:	blt	318c8 <GetDataSlab+0xf3ac>
   3181c:	ldr	ip, [sp, #56]	; 0x38
   31820:	mov	r1, #0
   31824:	mov	r0, r1
   31828:	ldr	r1, [r6, r1, lsl #2]
   3182c:	add	r1, r1, #1
   31830:	str	r1, [r6, r0, lsl #2]
   31834:	ldr	r3, [lr, r0, lsl #2]
   31838:	sdiv	r7, r1, r3
   3183c:	mls	r1, r7, r3, r1
   31840:	cmp	r1, #0
   31844:	bne	318b8 <GetDataSlab+0xf39c>
   31848:	add	r5, sp, #64	; 0x40
   3184c:	str	sl, [r6, r0, lsl #2]
   31850:	add	r1, r5, r0, lsl #2
   31854:	ldr	r1, [r1, #4]
   31858:	sdiv	r3, r2, r1
   3185c:	mls	r3, r3, r1, r2
   31860:	cmp	r3, #0
   31864:	beq	31880 <GetDataSlab+0xf364>
   31868:	ldr	r7, [r5, r0, lsl #2]
   3186c:	ldr	r5, [ip, r0, lsl #2]
   31870:	sub	r1, r1, r3
   31874:	mla	r1, r5, r7, r1
   31878:	add	r2, r1, r2
   3187c:	b	3189c <GetDataSlab+0xf380>
   31880:	ldr	r1, [ip, r0, lsl #2]
   31884:	cmp	r1, #0
   31888:	beq	318a0 <GetDataSlab+0xf384>
   3188c:	add	r3, sp, #64	; 0x40
   31890:	ldr	r3, [r3, r0, lsl #2]
   31894:	mla	r2, r3, r1, r2
   31898:	mul	r1, r3, r1
   3189c:	add	r9, r9, r1, lsl #1
   318a0:	ldr	r3, [fp, #24]
   318a4:	add	r1, r0, #1
   318a8:	add	r0, r0, #2
   318ac:	cmp	r0, r3
   318b0:	blt	31824 <GetDataSlab+0xf308>
   318b4:	b	318c8 <GetDataSlab+0xf3ac>
   318b8:	ldr	r1, [sp, #28]
   318bc:	ldr	r0, [r1, r0, lsl #2]
   318c0:	add	r9, r9, r0, lsl #1
   318c4:	add	r2, r0, r2
   318c8:	ldr	r0, [sp, #60]	; 0x3c
   318cc:	ldr	r1, [sp, #36]	; 0x24
   318d0:	ldr	r3, [sp, #48]	; 0x30
   318d4:	add	r0, r0, r1
   318d8:	ldr	r1, [sp, #44]	; 0x2c
   318dc:	str	r0, [sp, #60]	; 0x3c
   318e0:	mov	r0, #0
   318e4:	add	r8, r8, r1
   318e8:	cmp	r8, r3
   318ec:	blt	317c0 <GetDataSlab+0xf2a4>
   318f0:	b	242ac <GetDataSlab+0x1d90>
   318f4:	ldr	r0, [sp, #56]	; 0x38
   318f8:	cmp	r0, #1
   318fc:	blt	242a8 <GetDataSlab+0x1d8c>
   31900:	ldr	r0, [sp, #48]	; 0x30
   31904:	ldr	r1, [sp, #44]	; 0x2c
   31908:	add	r9, ip, #4
   3190c:	mls	r1, r0, r8, r1
   31910:	mov	ip, r0
   31914:	ldr	r0, [fp, #20]
   31918:	str	r1, [sp, #44]	; 0x2c
   3191c:	add	sl, r0, #4
   31920:	add	r0, sp, #104	; 0x68
   31924:	orr	r1, r0, #4
   31928:	sub	r0, fp, #72	; 0x48
   3192c:	orr	r0, r0, #4
   31930:	str	r0, [sp, #32]
   31934:	mul	r0, ip, r8
   31938:	lsl	r8, r8, #2
   3193c:	str	r0, [sp, #36]	; 0x24
   31940:	lsl	r0, ip, #3
   31944:	str	r0, [sp, #40]	; 0x28
   31948:	mov	r0, #0
   3194c:	str	r0, [sp, #52]	; 0x34
   31950:	ldr	r0, [fp, #12]
   31954:	cmp	ip, #1
   31958:	ldr	r0, [r0]
   3195c:	blt	319a4 <GetDataSlab+0xf488>
   31960:	ldr	r2, [sp, #36]	; 0x24
   31964:	add	r5, lr, r0, lsl #2
   31968:	add	r4, r2, r3
   3196c:	add	r3, lr, r2, lsl #2
   31970:	mov	r2, ip
   31974:	ldr	ip, [sp, #60]	; 0x3c
   31978:	ldr	r6, [r5], r8
   3197c:	subs	r2, r2, #1
   31980:	vmov	s0, r6
   31984:	vcvt.f64.s32	d16, s0
   31988:	vstr	d16, [ip]
   3198c:	add	ip, ip, #8
   31990:	bne	31978 <GetDataSlab+0xf45c>
   31994:	ldr	ip, [sp, #48]	; 0x30
   31998:	add	r2, r4, r0
   3199c:	mov	lr, r3
   319a0:	b	319a8 <GetDataSlab+0xf48c>
   319a4:	add	r2, r0, r3
   319a8:	add	r5, sp, #64	; 0x40
   319ac:	ldr	r3, [sp, #44]	; 0x2c
   319b0:	sub	r0, r3, r0
   319b4:	add	lr, lr, r3, lsl #2
   319b8:	add	r3, r2, r0
   319bc:	ldr	r0, [fp, #24]
   319c0:	cmp	r0, #2
   319c4:	blt	31a6c <GetDataSlab+0xf550>
   319c8:	mov	r2, #0
   319cc:	mov	r0, r2
   319d0:	ldr	r2, [r1, r2, lsl #2]
   319d4:	add	r2, r2, #1
   319d8:	str	r2, [r1, r0, lsl #2]
   319dc:	ldr	r6, [sl, r0, lsl #2]
   319e0:	sdiv	r4, r2, r6
   319e4:	mls	r2, r4, r6, r2
   319e8:	cmp	r2, #0
   319ec:	bne	31a5c <GetDataSlab+0xf540>
   319f0:	mov	r2, #0
   319f4:	str	r2, [r1, r0, lsl #2]
   319f8:	add	r2, r5, r0, lsl #2
   319fc:	ldr	r2, [r2, #4]
   31a00:	sdiv	r6, r3, r2
   31a04:	mls	r6, r6, r2, r3
   31a08:	cmp	r6, #0
   31a0c:	beq	31a28 <GetDataSlab+0xf50c>
   31a10:	ldr	r4, [r5, r0, lsl #2]
   31a14:	ldr	r7, [r9, r0, lsl #2]
   31a18:	sub	r2, r2, r6
   31a1c:	mla	r2, r7, r4, r2
   31a20:	add	r3, r2, r3
   31a24:	b	31a40 <GetDataSlab+0xf524>
   31a28:	ldr	r2, [r9, r0, lsl #2]
   31a2c:	cmp	r2, #0
   31a30:	beq	31a44 <GetDataSlab+0xf528>
   31a34:	ldr	r7, [r5, r0, lsl #2]
   31a38:	mla	r3, r7, r2, r3
   31a3c:	mul	r2, r7, r2
   31a40:	add	lr, lr, r2, lsl #2
   31a44:	ldr	r7, [fp, #24]
   31a48:	add	r2, r0, #1
   31a4c:	add	r0, r0, #2
   31a50:	cmp	r0, r7
   31a54:	blt	319cc <GetDataSlab+0xf4b0>
   31a58:	b	31a6c <GetDataSlab+0xf550>
   31a5c:	ldr	r2, [sp, #32]
   31a60:	ldr	r0, [r2, r0, lsl #2]
   31a64:	add	lr, lr, r0, lsl #2
   31a68:	add	r3, r0, r3
   31a6c:	ldr	r0, [sp, #60]	; 0x3c
   31a70:	ldr	r2, [sp, #40]	; 0x28
   31a74:	ldr	r4, [sp, #52]	; 0x34
   31a78:	add	r0, r0, r2
   31a7c:	ldr	r2, [sp, #56]	; 0x38
   31a80:	add	r4, r4, ip
   31a84:	str	r0, [sp, #60]	; 0x3c
   31a88:	mov	r0, #0
   31a8c:	str	r4, [sp, #52]	; 0x34
   31a90:	cmp	r4, r2
   31a94:	blt	31950 <GetDataSlab+0xf434>
   31a98:	b	242ac <GetDataSlab+0x1d90>
   31a9c:	ldr	r0, [sp, #56]	; 0x38
   31aa0:	cmp	r0, #1
   31aa4:	blt	242a8 <GetDataSlab+0x1d8c>
   31aa8:	ldr	r0, [sp, #48]	; 0x30
   31aac:	ldr	r1, [sp, #44]	; 0x2c
   31ab0:	add	r9, ip, #4
   31ab4:	mls	r1, r0, r8, r1
   31ab8:	mov	ip, r0
   31abc:	ldr	r0, [fp, #20]
   31ac0:	str	r1, [sp, #44]	; 0x2c
   31ac4:	add	sl, r0, #4
   31ac8:	add	r0, sp, #104	; 0x68
   31acc:	orr	r1, r0, #4
   31ad0:	sub	r0, fp, #72	; 0x48
   31ad4:	orr	r0, r0, #4
   31ad8:	str	r0, [sp, #32]
   31adc:	mul	r0, ip, r8
   31ae0:	lsl	r8, r8, #2
   31ae4:	str	r0, [sp, #36]	; 0x24
   31ae8:	lsl	r0, ip, #3
   31aec:	str	r0, [sp, #40]	; 0x28
   31af0:	mov	r0, #0
   31af4:	str	r0, [sp, #52]	; 0x34
   31af8:	ldr	r0, [fp, #12]
   31afc:	cmp	ip, #1
   31b00:	ldr	r0, [r0]
   31b04:	blt	31b4c <GetDataSlab+0xf630>
   31b08:	ldr	r2, [sp, #36]	; 0x24
   31b0c:	add	r5, lr, r0, lsl #2
   31b10:	add	r4, r2, r3
   31b14:	add	r3, lr, r2, lsl #2
   31b18:	mov	r2, ip
   31b1c:	ldr	ip, [sp, #60]	; 0x3c
   31b20:	ldr	r6, [r5], r8
   31b24:	subs	r2, r2, #1
   31b28:	vmov	s0, r6
   31b2c:	vcvt.f64.u32	d16, s0
   31b30:	vstr	d16, [ip]
   31b34:	add	ip, ip, #8
   31b38:	bne	31b20 <GetDataSlab+0xf604>
   31b3c:	ldr	ip, [sp, #48]	; 0x30
   31b40:	add	r2, r4, r0
   31b44:	mov	lr, r3
   31b48:	b	31b50 <GetDataSlab+0xf634>
   31b4c:	add	r2, r0, r3
   31b50:	add	r5, sp, #64	; 0x40
   31b54:	ldr	r3, [sp, #44]	; 0x2c
   31b58:	sub	r0, r3, r0
   31b5c:	add	lr, lr, r3, lsl #2
   31b60:	add	r3, r2, r0
   31b64:	ldr	r0, [fp, #24]
   31b68:	cmp	r0, #2
   31b6c:	blt	31c14 <GetDataSlab+0xf6f8>
   31b70:	mov	r2, #0
   31b74:	mov	r0, r2
   31b78:	ldr	r2, [r1, r2, lsl #2]
   31b7c:	add	r2, r2, #1
   31b80:	str	r2, [r1, r0, lsl #2]
   31b84:	ldr	r6, [sl, r0, lsl #2]
   31b88:	sdiv	r4, r2, r6
   31b8c:	mls	r2, r4, r6, r2
   31b90:	cmp	r2, #0
   31b94:	bne	31c04 <GetDataSlab+0xf6e8>
   31b98:	mov	r2, #0
   31b9c:	str	r2, [r1, r0, lsl #2]
   31ba0:	add	r2, r5, r0, lsl #2
   31ba4:	ldr	r2, [r2, #4]
   31ba8:	sdiv	r6, r3, r2
   31bac:	mls	r6, r6, r2, r3
   31bb0:	cmp	r6, #0
   31bb4:	beq	31bd0 <GetDataSlab+0xf6b4>
   31bb8:	ldr	r4, [r5, r0, lsl #2]
   31bbc:	ldr	r7, [r9, r0, lsl #2]
   31bc0:	sub	r2, r2, r6
   31bc4:	mla	r2, r7, r4, r2
   31bc8:	add	r3, r2, r3
   31bcc:	b	31be8 <GetDataSlab+0xf6cc>
   31bd0:	ldr	r2, [r9, r0, lsl #2]
   31bd4:	cmp	r2, #0
   31bd8:	beq	31bec <GetDataSlab+0xf6d0>
   31bdc:	ldr	r7, [r5, r0, lsl #2]
   31be0:	mla	r3, r7, r2, r3
   31be4:	mul	r2, r7, r2
   31be8:	add	lr, lr, r2, lsl #2
   31bec:	ldr	r7, [fp, #24]
   31bf0:	add	r2, r0, #1
   31bf4:	add	r0, r0, #2
   31bf8:	cmp	r0, r7
   31bfc:	blt	31b74 <GetDataSlab+0xf658>
   31c00:	b	31c14 <GetDataSlab+0xf6f8>
   31c04:	ldr	r2, [sp, #32]
   31c08:	ldr	r0, [r2, r0, lsl #2]
   31c0c:	add	lr, lr, r0, lsl #2
   31c10:	add	r3, r0, r3
   31c14:	ldr	r0, [sp, #60]	; 0x3c
   31c18:	ldr	r2, [sp, #40]	; 0x28
   31c1c:	ldr	r4, [sp, #52]	; 0x34
   31c20:	add	r0, r0, r2
   31c24:	ldr	r2, [sp, #56]	; 0x38
   31c28:	add	r4, r4, ip
   31c2c:	str	r0, [sp, #60]	; 0x3c
   31c30:	mov	r0, #0
   31c34:	str	r4, [sp, #52]	; 0x34
   31c38:	cmp	r4, r2
   31c3c:	blt	31af8 <GetDataSlab+0xf5dc>
   31c40:	b	242ac <GetDataSlab+0x1d90>
   31c44:	ldr	r0, [sp, #48]	; 0x30
   31c48:	ldr	r3, [sp, #44]	; 0x2c
   31c4c:	cmp	r0, #1
   31c50:	blt	242a8 <GetDataSlab+0x1d8c>
   31c54:	ldr	r0, [sp, #40]	; 0x28
   31c58:	ldr	r4, [ip], #4
   31c5c:	mov	r1, lr
   31c60:	mov	sl, #0
   31c64:	mls	r0, r3, r8, r0
   31c68:	str	r4, [sp, #52]	; 0x34
   31c6c:	str	ip, [sp, #56]	; 0x38
   31c70:	sub	r0, r0, r4
   31c74:	str	r0, [sp, #40]	; 0x28
   31c78:	ldr	r0, [fp, #20]
   31c7c:	add	lr, r0, #4
   31c80:	add	r0, sp, #104	; 0x68
   31c84:	orr	r7, r0, #4
   31c88:	orr	r0, r1, #4
   31c8c:	str	r0, [sp, #28]
   31c90:	mla	r0, r3, r8, r4
   31c94:	lsl	r4, r8, #2
   31c98:	mov	r8, #0
   31c9c:	str	r0, [sp, #32]
   31ca0:	lsl	r0, r3, #3
   31ca4:	str	r0, [sp, #36]	; 0x24
   31ca8:	ldr	r0, [sp, #52]	; 0x34
   31cac:	cmp	r3, #1
   31cb0:	blt	31ce4 <GetDataSlab+0xf7c8>
   31cb4:	ldr	r0, [sp, #52]	; 0x34
   31cb8:	ldr	ip, [sp, #60]	; 0x3c
   31cbc:	mov	r1, r3
   31cc0:	add	r0, r9, r0, lsl #2
   31cc4:	vldr	s0, [r0]
   31cc8:	add	r0, r0, r4
   31ccc:	subs	r1, r1, #1
   31cd0:	vcvt.f64.f32	d16, s0
   31cd4:	vstr	d16, [ip]
   31cd8:	add	ip, ip, #8
   31cdc:	bne	31cc4 <GetDataSlab+0xf7a8>
   31ce0:	ldr	r0, [sp, #32]
   31ce4:	ldr	r3, [sp, #40]	; 0x28
   31ce8:	add	r1, r9, r3, lsl #2
   31cec:	add	r9, r1, r0, lsl #2
   31cf0:	add	r0, r0, r2
   31cf4:	add	r2, r0, r3
   31cf8:	ldr	r0, [fp, #24]
   31cfc:	cmp	r0, #2
   31d00:	blt	31db0 <GetDataSlab+0xf894>
   31d04:	ldr	ip, [sp, #56]	; 0x38
   31d08:	mov	r1, #0
   31d0c:	mov	r0, r1
   31d10:	ldr	r1, [r7, r1, lsl #2]
   31d14:	add	r1, r1, #1
   31d18:	str	r1, [r7, r0, lsl #2]
   31d1c:	ldr	r3, [lr, r0, lsl #2]
   31d20:	sdiv	r6, r1, r3
   31d24:	mls	r1, r6, r3, r1
   31d28:	cmp	r1, #0
   31d2c:	bne	31da0 <GetDataSlab+0xf884>
   31d30:	add	r5, sp, #64	; 0x40
   31d34:	str	sl, [r7, r0, lsl #2]
   31d38:	add	r1, r5, r0, lsl #2
   31d3c:	ldr	r1, [r1, #4]
   31d40:	sdiv	r3, r2, r1
   31d44:	mls	r3, r3, r1, r2
   31d48:	cmp	r3, #0
   31d4c:	beq	31d68 <GetDataSlab+0xf84c>
   31d50:	ldr	r6, [r5, r0, lsl #2]
   31d54:	ldr	r5, [ip, r0, lsl #2]
   31d58:	sub	r1, r1, r3
   31d5c:	mla	r1, r5, r6, r1
   31d60:	add	r2, r1, r2
   31d64:	b	31d84 <GetDataSlab+0xf868>
   31d68:	ldr	r1, [ip, r0, lsl #2]
   31d6c:	cmp	r1, #0
   31d70:	beq	31d88 <GetDataSlab+0xf86c>
   31d74:	add	r3, sp, #64	; 0x40
   31d78:	ldr	r3, [r3, r0, lsl #2]
   31d7c:	mla	r2, r3, r1, r2
   31d80:	mul	r1, r3, r1
   31d84:	add	r9, r9, r1, lsl #2
   31d88:	ldr	r3, [fp, #24]
   31d8c:	add	r1, r0, #1
   31d90:	add	r0, r0, #2
   31d94:	cmp	r0, r3
   31d98:	blt	31d0c <GetDataSlab+0xf7f0>
   31d9c:	b	31db0 <GetDataSlab+0xf894>
   31da0:	ldr	r1, [sp, #28]
   31da4:	ldr	r0, [r1, r0, lsl #2]
   31da8:	add	r9, r9, r0, lsl #2
   31dac:	add	r2, r0, r2
   31db0:	ldr	r0, [sp, #60]	; 0x3c
   31db4:	ldr	r1, [sp, #36]	; 0x24
   31db8:	ldr	r3, [sp, #44]	; 0x2c
   31dbc:	add	r0, r0, r1
   31dc0:	ldr	r1, [sp, #48]	; 0x30
   31dc4:	add	r8, r8, r3
   31dc8:	str	r0, [sp, #60]	; 0x3c
   31dcc:	mov	r0, #0
   31dd0:	cmp	r8, r1
   31dd4:	blt	31ca8 <GetDataSlab+0xf78c>
   31dd8:	b	242ac <GetDataSlab+0x1d90>
   31ddc:	ldr	r0, [sp, #48]	; 0x30
   31de0:	ldr	r1, [fp, #20]
   31de4:	cmp	r0, #1
   31de8:	blt	242a8 <GetDataSlab+0x1d8c>
   31dec:	ldr	r4, [sp, #44]	; 0x2c
   31df0:	ldr	r0, [sp, #40]	; 0x28
   31df4:	ldr	r5, [ip], #4
   31df8:	mov	r3, lr
   31dfc:	add	sl, r1, #4
   31e00:	mov	r8, #0
   31e04:	mls	r0, r4, r6, r0
   31e08:	mov	lr, ip
   31e0c:	mov	r1, r4
   31e10:	str	r5, [sp, #56]	; 0x38
   31e14:	sub	r0, r0, r5
   31e18:	str	r0, [sp, #52]	; 0x34
   31e1c:	add	r0, sp, #104	; 0x68
   31e20:	orr	r7, r0, #4
   31e24:	orr	r0, r3, #4
   31e28:	str	r0, [sp, #32]
   31e2c:	mla	r0, r4, r6, r5
   31e30:	lsl	r6, r6, #3
   31e34:	str	r0, [sp, #36]	; 0x24
   31e38:	lsl	r0, r4, #3
   31e3c:	str	r0, [sp, #40]	; 0x28
   31e40:	ldr	r0, [sp, #56]	; 0x38
   31e44:	cmp	r1, #1
   31e48:	blt	31e78 <GetDataSlab+0xf95c>
   31e4c:	ldr	r0, [sp, #56]	; 0x38
   31e50:	ldr	r3, [sp, #44]	; 0x2c
   31e54:	ldr	r1, [sp, #60]	; 0x3c
   31e58:	add	r0, r9, r0, lsl #3
   31e5c:	vldr	d16, [r0]
   31e60:	add	r0, r0, r6
   31e64:	subs	r3, r3, #1
   31e68:	vstr	d16, [r1]
   31e6c:	add	r1, r1, #8
   31e70:	bne	31e5c <GetDataSlab+0xf940>
   31e74:	ldr	r0, [sp, #36]	; 0x24
   31e78:	ldr	r3, [sp, #52]	; 0x34
   31e7c:	add	r1, r9, r3, lsl #3
   31e80:	add	r9, r1, r0, lsl #3
   31e84:	add	r0, r0, r2
   31e88:	add	r2, r0, r3
   31e8c:	ldr	r0, [fp, #24]
   31e90:	cmp	r0, #2
   31e94:	blt	31f44 <GetDataSlab+0xfa28>
   31e98:	mov	ip, #0
   31e9c:	ldr	r1, [r7, ip, lsl #2]
   31ea0:	mov	r0, ip
   31ea4:	add	r1, r1, #1
   31ea8:	str	r1, [r7, ip, lsl #2]
   31eac:	ldr	r3, [sl, ip, lsl #2]
   31eb0:	sdiv	r4, r1, r3
   31eb4:	mls	r1, r4, r3, r1
   31eb8:	cmp	r1, #0
   31ebc:	bne	31f34 <GetDataSlab+0xfa18>
   31ec0:	mov	r1, #0
   31ec4:	add	r5, sp, #64	; 0x40
   31ec8:	str	r1, [r7, r0, lsl #2]
   31ecc:	add	r1, r5, r0, lsl #2
   31ed0:	ldr	r1, [r1, #4]
   31ed4:	sdiv	r3, r2, r1
   31ed8:	mls	r3, r3, r1, r2
   31edc:	cmp	r3, #0
   31ee0:	beq	31efc <GetDataSlab+0xf9e0>
   31ee4:	ldr	r4, [r5, r0, lsl #2]
   31ee8:	ldr	r5, [lr, r0, lsl #2]
   31eec:	sub	r1, r1, r3
   31ef0:	mla	r1, r5, r4, r1
   31ef4:	add	r2, r1, r2
   31ef8:	b	31f18 <GetDataSlab+0xf9fc>
   31efc:	mov	r1, lr
   31f00:	ldr	r1, [lr, r0, lsl #2]
   31f04:	cmp	r1, #0
   31f08:	beq	31f1c <GetDataSlab+0xfa00>
   31f0c:	ldr	r3, [r5, r0, lsl #2]
   31f10:	mla	r2, r3, r1, r2
   31f14:	mul	r1, r3, r1
   31f18:	add	r9, r9, r1, lsl #3
   31f1c:	ldr	r1, [fp, #24]
   31f20:	add	ip, r0, #1
   31f24:	add	r0, r0, #2
   31f28:	cmp	r0, r1
   31f2c:	blt	31e9c <GetDataSlab+0xf980>
   31f30:	b	31f44 <GetDataSlab+0xfa28>
   31f34:	ldr	r1, [sp, #32]
   31f38:	ldr	r0, [r1, r0, lsl #2]
   31f3c:	add	r9, r9, r0, lsl #3
   31f40:	add	r2, r0, r2
   31f44:	ldr	r0, [sp, #60]	; 0x3c
   31f48:	ldr	r1, [sp, #40]	; 0x28
   31f4c:	ldr	r3, [sp, #48]	; 0x30
   31f50:	add	r0, r0, r1
   31f54:	ldr	r1, [sp, #44]	; 0x2c
   31f58:	str	r0, [sp, #60]	; 0x3c
   31f5c:	mov	r0, #0
   31f60:	add	r8, r8, r1
   31f64:	cmp	r8, r3
   31f68:	blt	31e40 <GetDataSlab+0xf924>
   31f6c:	b	242ac <GetDataSlab+0x1d90>
   31f70:	ldr	r0, [sp, #40]	; 0x28
   31f74:	ldr	r1, [sp, #60]	; 0x3c
   31f78:	ldr	r3, [sp, #48]	; 0x30
   31f7c:	cmp	r0, #1
   31f80:	blt	32134 <GetDataSlab+0xfc18>
   31f84:	ldr	r2, [fp, #12]
   31f88:	ldr	r9, [sp, #32]
   31f8c:	ldr	r0, [sp, #28]
   31f90:	add	r5, sp, #64	; 0x40
   31f94:	str	r1, [sp, #36]	; 0x24
   31f98:	lsl	r6, r7, #3
   31f9c:	mov	r1, #0
   31fa0:	mov	ip, r5
   31fa4:	ldr	r3, [r2], #4
   31fa8:	mls	r0, r9, r7, r0
   31fac:	sub	r0, r0, r3
   31fb0:	str	r3, [sp, #24]
   31fb4:	str	r2, [sp, #8]
   31fb8:	str	r0, [sp, #16]
   31fbc:	add	r0, r8, #4
   31fc0:	str	r0, [sp, #44]	; 0x2c
   31fc4:	add	r0, sp, #104	; 0x68
   31fc8:	orr	r8, r0, #4
   31fcc:	orr	r0, lr, #4
   31fd0:	mov	lr, r2
   31fd4:	str	r0, [sp]
   31fd8:	mla	r0, r9, r7, r3
   31fdc:	str	r0, [sp, #4]
   31fe0:	lsl	r0, r9, #3
   31fe4:	str	r0, [sp, #12]
   31fe8:	ldr	r0, [sp, #24]
   31fec:	cmp	r9, #1
   31ff0:	str	r1, [sp, #28]
   31ff4:	blt	3203c <GetDataSlab+0xfb20>
   31ff8:	ldr	r0, [sp, #24]
   31ffc:	ldr	r7, [sp, #36]	; 0x24
   32000:	str	sl, [sp, #20]
   32004:	add	sl, sl, r0, lsl #3
   32008:	ldrd	r0, [sl]
   3200c:	bl	49578 <__aeabi_l2d>
   32010:	strd	r0, [r7]
   32014:	add	sl, sl, r6
   32018:	subs	r9, r9, #1
   3201c:	add	r7, r7, #8
   32020:	bne	32008 <GetDataSlab+0xfaec>
   32024:	ldr	r0, [sp, #4]
   32028:	ldr	r9, [sp, #32]
   3202c:	ldr	sl, [sp, #20]
   32030:	ldr	lr, [sp, #8]
   32034:	add	r5, sp, #64	; 0x40
   32038:	mov	ip, r5
   3203c:	ldr	r2, [sp, #16]
   32040:	add	r1, sl, r2, lsl #3
   32044:	add	sl, r1, r0, lsl #3
   32048:	add	r0, r0, r4
   3204c:	add	r4, r0, r2
   32050:	ldr	r0, [fp, #24]
   32054:	cmp	r0, #2
   32058:	blt	320f8 <GetDataSlab+0xfbdc>
   3205c:	ldr	r3, [sp, #48]	; 0x30
   32060:	mov	r1, #0
   32064:	mov	r0, r1
   32068:	ldr	r1, [r8, r1, lsl #2]
   3206c:	ldr	r2, [sp, #44]	; 0x2c
   32070:	add	r1, r1, #1
   32074:	str	r1, [r8, r0, lsl #2]
   32078:	ldr	r2, [r2, r0, lsl #2]
   3207c:	sdiv	r7, r1, r2
   32080:	mls	r1, r7, r2, r1
   32084:	cmp	r1, #0
   32088:	bne	32100 <GetDataSlab+0xfbe4>
   3208c:	mov	r1, #0
   32090:	str	r1, [r8, r0, lsl #2]
   32094:	add	r1, ip, r0, lsl #2
   32098:	ldr	r1, [r1, #4]
   3209c:	sdiv	r2, r4, r1
   320a0:	mls	r2, r2, r1, r4
   320a4:	cmp	r2, #0
   320a8:	beq	320c4 <GetDataSlab+0xfba8>
   320ac:	ldr	r5, [ip, r0, lsl #2]
   320b0:	ldr	r7, [lr, r0, lsl #2]
   320b4:	sub	r1, r1, r2
   320b8:	mla	r1, r7, r5, r1
   320bc:	add	r4, r1, r4
   320c0:	b	320dc <GetDataSlab+0xfbc0>
   320c4:	ldr	r1, [lr, r0, lsl #2]
   320c8:	cmp	r1, #0
   320cc:	beq	320e0 <GetDataSlab+0xfbc4>
   320d0:	ldr	r2, [ip, r0, lsl #2]
   320d4:	mla	r4, r2, r1, r4
   320d8:	mul	r1, r2, r1
   320dc:	add	sl, sl, r1, lsl #3
   320e0:	ldr	r2, [fp, #24]
   320e4:	add	r1, r0, #1
   320e8:	add	r0, r0, #2
   320ec:	cmp	r0, r2
   320f0:	blt	32064 <GetDataSlab+0xfb48>
   320f4:	b	32110 <GetDataSlab+0xfbf4>
   320f8:	ldr	r3, [sp, #48]	; 0x30
   320fc:	b	32110 <GetDataSlab+0xfbf4>
   32100:	ldr	r1, [sp]
   32104:	ldr	r0, [r1, r0, lsl #2]
   32108:	add	sl, sl, r0, lsl #3
   3210c:	add	r4, r0, r4
   32110:	ldr	r0, [sp, #12]
   32114:	ldr	r1, [sp, #36]	; 0x24
   32118:	add	r1, r1, r0
   3211c:	ldr	r0, [sp, #40]	; 0x28
   32120:	str	r1, [sp, #36]	; 0x24
   32124:	ldr	r1, [sp, #28]
   32128:	add	r1, r1, r9
   3212c:	cmp	r1, r0
   32130:	blt	31fe8 <GetDataSlab+0xfacc>
   32134:	mov	r0, #0
   32138:	cmp	r3, #13
   3213c:	bne	242ac <GetDataSlab+0x1d90>
   32140:	ldr	r8, [fp, #16]
   32144:	ldr	lr, [fp, #20]
   32148:	mov	r9, #0
   3214c:	add	r4, sp, #64	; 0x40
   32150:	ldr	ip, [r8]
   32154:	sub	r0, ip, #1
   32158:	str	r0, [fp, #-72]	; 0xffffffb8
   3215c:	ldr	r0, [fp, #8]
   32160:	ldr	r0, [r0]
   32164:	str	r0, [sp, #64]	; 0x40
   32168:	str	r0, [sp, #40]	; 0x28
   3216c:	ldr	r0, [fp, #24]
   32170:	ldr	r1, [lr]
   32174:	cmp	r0, #2
   32178:	sub	r0, fp, #72	; 0x48
   3217c:	str	r1, [sp, #44]	; 0x2c
   32180:	str	r1, [sp, #48]	; 0x30
   32184:	blt	32224 <GetDataSlab+0xfd08>
   32188:	ldr	r3, [sp, #40]	; 0x28
   3218c:	ldr	r5, [sp, #44]	; 0x2c
   32190:	ldr	r2, [fp, #8]
   32194:	mov	r1, #1
   32198:	mov	r9, #0
   3219c:	mov	r7, r3
   321a0:	str	r5, [sp, #48]	; 0x30
   321a4:	ldr	r5, [r8, r1, lsl #2]
   321a8:	str	r3, [r4, r1, lsl #2]
   321ac:	mov	r4, #0
   321b0:	sub	r5, r5, #1
   321b4:	str	r5, [r0, r1, lsl #2]
   321b8:	ldr	r0, [fp, #8]
   321bc:	ldr	sl, [r0, r1, lsl #2]
   321c0:	mov	r6, sl
   321c4:	mul	r3, r6, r3
   321c8:	ldr	r6, [r2, -r4, lsl #2]
   321cc:	add	r4, r4, #1
   321d0:	cmp	r1, r4
   321d4:	mul	r5, r5, r6
   321d8:	bne	321c4 <GetDataSlab+0xfca8>
   321dc:	ldr	r6, [fp, #12]
   321e0:	add	r4, sp, #64	; 0x40
   321e4:	sub	r0, fp, #72	; 0x48
   321e8:	add	r2, r2, #4
   321ec:	str	r5, [r0, r1, lsl #2]
   321f0:	str	r3, [r4, r1, lsl #2]
   321f4:	ldr	r5, [sp, #48]	; 0x30
   321f8:	ldr	r6, [r6, r1, lsl #2]
   321fc:	mla	r9, r6, r7, r9
   32200:	ldr	r7, [lr, r1, lsl #2]
   32204:	add	r1, r1, #1
   32208:	mul	r5, r7, r5
   3220c:	ldr	r7, [fp, #24]
   32210:	str	r5, [sp, #48]	; 0x30
   32214:	cmp	r1, r7
   32218:	mov	r7, r3
   3221c:	mov	r3, sl
   32220:	bne	321a4 <GetDataSlab+0xfc88>
   32224:	ldr	r0, [sp, #52]	; 0x34
   32228:	cmp	ip, #1
   3222c:	add	r5, r0, r9, lsl #3
   32230:	bne	3ad18 <GetDataSlab+0x187fc>
   32234:	ldr	r0, [sp, #48]	; 0x30
   32238:	cmp	r0, #1
   3223c:	blt	242a8 <GetDataSlab+0x1d8c>
   32240:	add	r4, lr, #4
   32244:	ldr	lr, [sp, #44]	; 0x2c
   32248:	add	r0, sp, #104	; 0x68
   3224c:	orr	r6, r0, #4
   32250:	sub	r0, fp, #72	; 0x48
   32254:	orr	r0, r0, #4
   32258:	str	r0, [sp, #28]
   3225c:	lsl	r0, lr, #3
   32260:	str	r0, [sp, #36]	; 0x24
   32264:	ldr	r0, [sp, #56]	; 0x38
   32268:	ldr	r1, [r0], #4
   3226c:	str	r0, [sp, #56]	; 0x38
   32270:	mov	r0, #0
   32274:	str	r1, [sp, #32]
   32278:	str	r0, [sp, #52]	; 0x34
   3227c:	cmp	lr, #1
   32280:	blt	322b0 <GetDataSlab+0xfd94>
   32284:	ldr	r0, [sp, #32]
   32288:	ldr	r8, [sp, #44]	; 0x2c
   3228c:	ldr	sl, [sp, #60]	; 0x3c
   32290:	add	r7, r5, r0, lsl #3
   32294:	ldrd	r0, [r7]
   32298:	bl	49564 <__aeabi_ul2d>
   3229c:	strd	r0, [sl]
   322a0:	subs	r8, r8, #1
   322a4:	add	sl, sl, #8
   322a8:	add	r7, r7, #8
   322ac:	bne	32294 <GetDataSlab+0xfd78>
   322b0:	ldr	r0, [sp, #40]	; 0x28
   322b4:	add	r5, r5, r0, lsl #3
   322b8:	add	r9, r9, r0
   322bc:	ldr	r0, [fp, #24]
   322c0:	cmp	r0, #2
   322c4:	blt	32374 <GetDataSlab+0xfe58>
   322c8:	ldr	ip, [sp, #60]	; 0x3c
   322cc:	ldr	lr, [sp, #44]	; 0x2c
   322d0:	mov	r1, #0
   322d4:	mov	r8, #0
   322d8:	mov	r0, r1
   322dc:	ldr	r1, [r6, r1, lsl #2]
   322e0:	add	r1, r1, #1
   322e4:	str	r1, [r6, r0, lsl #2]
   322e8:	ldr	r2, [r4, r0, lsl #2]
   322ec:	sdiv	r3, r1, r2
   322f0:	mls	r1, r3, r2, r1
   322f4:	cmp	r1, #0
   322f8:	bne	32380 <GetDataSlab+0xfe64>
   322fc:	add	r3, sp, #64	; 0x40
   32300:	str	r8, [r6, r0, lsl #2]
   32304:	add	r1, r3, r0, lsl #2
   32308:	ldr	r1, [r1, #4]
   3230c:	sdiv	r2, r9, r1
   32310:	mls	r2, r2, r1, r9
   32314:	cmp	r2, #0
   32318:	beq	32338 <GetDataSlab+0xfe1c>
   3231c:	ldr	r7, [sp, #56]	; 0x38
   32320:	ldr	r3, [r3, r0, lsl #2]
   32324:	sub	r1, r1, r2
   32328:	ldr	r7, [r7, r0, lsl #2]
   3232c:	mla	r1, r7, r3, r1
   32330:	add	r9, r1, r9
   32334:	b	32358 <GetDataSlab+0xfe3c>
   32338:	ldr	r1, [sp, #56]	; 0x38
   3233c:	ldr	r1, [r1, r0, lsl #2]
   32340:	cmp	r1, #0
   32344:	beq	3235c <GetDataSlab+0xfe40>
   32348:	add	r2, sp, #64	; 0x40
   3234c:	ldr	r2, [r2, r0, lsl #2]
   32350:	mla	r9, r2, r1, r9
   32354:	mul	r1, r2, r1
   32358:	add	r5, r5, r1, lsl #3
   3235c:	ldr	r2, [fp, #24]
   32360:	add	r1, r0, #1
   32364:	add	r0, r0, #2
   32368:	cmp	r0, r2
   3236c:	blt	322d8 <GetDataSlab+0xfdbc>
   32370:	b	32390 <GetDataSlab+0xfe74>
   32374:	ldr	ip, [sp, #60]	; 0x3c
   32378:	ldr	lr, [sp, #44]	; 0x2c
   3237c:	b	32390 <GetDataSlab+0xfe74>
   32380:	ldr	r1, [sp, #28]
   32384:	ldr	r0, [r1, r0, lsl #2]
   32388:	add	r5, r5, r0, lsl #3
   3238c:	add	r9, r0, r9
   32390:	ldr	r2, [sp, #52]	; 0x34
   32394:	ldr	r0, [sp, #36]	; 0x24
   32398:	ldr	r1, [sp, #48]	; 0x30
   3239c:	add	r2, r2, lr
   323a0:	add	ip, ip, r0
   323a4:	mov	r0, #0
   323a8:	cmp	r2, r1
   323ac:	str	ip, [sp, #60]	; 0x3c
   323b0:	str	r2, [sp, #52]	; 0x34
   323b4:	blt	3227c <GetDataSlab+0xfd60>
   323b8:	b	242ac <GetDataSlab+0x1d90>
   323bc:	ldr	r0, [sp, #56]	; 0x38
   323c0:	ldr	r4, [sp, #48]	; 0x30
   323c4:	cmp	r0, #1
   323c8:	blt	242a8 <GetDataSlab+0x1d8c>
   323cc:	ldr	r0, [sp, #44]	; 0x2c
   323d0:	add	r9, ip, #4
   323d4:	mov	ip, #0
   323d8:	mls	r0, r4, lr, r0
   323dc:	str	r0, [sp, #44]	; 0x2c
   323e0:	mul	r0, r4, lr
   323e4:	str	r0, [sp, #36]	; 0x24
   323e8:	ldr	r0, [fp, #20]
   323ec:	add	r8, r0, #4
   323f0:	add	r0, sp, #104	; 0x68
   323f4:	orr	r2, r0, #4
   323f8:	sub	r0, fp, #72	; 0x48
   323fc:	orr	r0, r0, #4
   32400:	str	r0, [sp, #32]
   32404:	lsl	r0, r4, #2
   32408:	str	r0, [sp, #40]	; 0x28
   3240c:	mov	r0, #0
   32410:	str	r0, [sp, #52]	; 0x34
   32414:	ldr	r0, [fp, #12]
   32418:	cmp	r4, #1
   3241c:	ldr	r0, [r0]
   32420:	blt	3246c <GetDataSlab+0xff50>
   32424:	ldr	r1, [sp, #36]	; 0x24
   32428:	ldr	ip, [sp, #60]	; 0x3c
   3242c:	add	r5, sl, r0
   32430:	mov	r7, r1
   32434:	add	r1, r1, r3
   32438:	add	r3, sl, r7
   3243c:	ldrb	r6, [r5], lr
   32440:	subs	r4, r4, #1
   32444:	vmov	s0, r6
   32448:	vcvt.f32.u32	s0, s0
   3244c:	vstr	s0, [ip]
   32450:	add	ip, ip, #4
   32454:	bne	3243c <GetDataSlab+0xff20>
   32458:	add	r4, r1, r0
   3245c:	mov	sl, r3
   32460:	add	r5, sp, #64	; 0x40
   32464:	mov	ip, #0
   32468:	b	32474 <GetDataSlab+0xff58>
   3246c:	add	r4, r0, r3
   32470:	add	r5, sp, #64	; 0x40
   32474:	ldr	r1, [sp, #44]	; 0x2c
   32478:	sub	r0, r1, r0
   3247c:	add	sl, sl, r1
   32480:	add	r3, r4, r0
   32484:	ldr	r0, [fp, #24]
   32488:	cmp	r0, #2
   3248c:	blt	3252c <GetDataSlab+0x10010>
   32490:	mov	r4, #0
   32494:	ldr	r6, [r2, r4, lsl #2]
   32498:	mov	r0, r4
   3249c:	add	r6, r6, #1
   324a0:	str	r6, [r2, r4, lsl #2]
   324a4:	ldr	r4, [r8, r4, lsl #2]
   324a8:	sdiv	r7, r6, r4
   324ac:	mls	r7, r7, r4, r6
   324b0:	cmp	r7, #0
   324b4:	bne	3251c <GetDataSlab+0x10000>
   324b8:	add	r7, r5, r0, lsl #2
   324bc:	str	ip, [r2, r0, lsl #2]
   324c0:	ldr	r4, [r7, #4]
   324c4:	sdiv	r7, r3, r4
   324c8:	mls	r6, r7, r4, r3
   324cc:	cmp	r6, #0
   324d0:	beq	324f0 <GetDataSlab+0xffd4>
   324d4:	ldr	r7, [r5, r0, lsl #2]
   324d8:	ldr	r1, [r9, r0, lsl #2]
   324dc:	sub	r6, r4, r6
   324e0:	mla	r1, r1, r7, r6
   324e4:	add	r3, r1, r3
   324e8:	add	sl, sl, r1
   324ec:	b	32504 <GetDataSlab+0xffe8>
   324f0:	ldr	r6, [r9, r0, lsl #2]
   324f4:	cmp	r6, #0
   324f8:	ldrne	r1, [r5, r0, lsl #2]
   324fc:	mlane	r3, r1, r6, r3
   32500:	mlane	sl, r1, r6, sl
   32504:	ldr	r1, [fp, #24]
   32508:	add	r4, r0, #1
   3250c:	add	r0, r0, #2
   32510:	cmp	r0, r1
   32514:	blt	32494 <GetDataSlab+0xff78>
   32518:	b	3252c <GetDataSlab+0x10010>
   3251c:	ldr	r1, [sp, #32]
   32520:	ldr	r0, [r1, r0, lsl #2]
   32524:	add	sl, sl, r0
   32528:	add	r3, r0, r3
   3252c:	ldr	r0, [sp, #60]	; 0x3c
   32530:	ldr	r1, [sp, #40]	; 0x28
   32534:	ldr	r4, [sp, #48]	; 0x30
   32538:	ldr	r5, [sp, #52]	; 0x34
   3253c:	add	r0, r0, r1
   32540:	ldr	r1, [sp, #56]	; 0x38
   32544:	add	r5, r5, r4
   32548:	str	r0, [sp, #60]	; 0x3c
   3254c:	mov	r0, #0
   32550:	str	r5, [sp, #52]	; 0x34
   32554:	cmp	r5, r1
   32558:	blt	32414 <GetDataSlab+0xfef8>
   3255c:	b	242ac <GetDataSlab+0x1d90>
   32560:	ldr	r0, [sp, #48]	; 0x30
   32564:	cmp	r0, #1
   32568:	ldr	r0, [sp, #44]	; 0x2c
   3256c:	blt	242a8 <GetDataSlab+0x1d8c>
   32570:	ldr	r1, [sp, #40]	; 0x28
   32574:	ldr	r3, [ip], #4
   32578:	lsl	r4, r8, #1
   3257c:	mov	sl, #0
   32580:	mls	r0, r0, r8, r1
   32584:	mov	r1, lr
   32588:	str	ip, [sp, #56]	; 0x38
   3258c:	str	r3, [sp, #52]	; 0x34
   32590:	sub	r0, r0, r3
   32594:	str	r0, [sp, #40]	; 0x28
   32598:	ldr	r0, [fp, #20]
   3259c:	add	lr, r0, #4
   325a0:	add	r0, sp, #104	; 0x68
   325a4:	orr	r6, r0, #4
   325a8:	orr	r0, r1, #4
   325ac:	ldr	r1, [sp, #44]	; 0x2c
   325b0:	str	r0, [sp, #28]
   325b4:	mla	r0, r1, r8, r3
   325b8:	mov	r8, #0
   325bc:	str	r0, [sp, #32]
   325c0:	lsl	r0, r1, #2
   325c4:	str	r0, [sp, #36]	; 0x24
   325c8:	ldr	r0, [sp, #52]	; 0x34
   325cc:	cmp	r1, #1
   325d0:	blt	32604 <GetDataSlab+0x100e8>
   325d4:	ldr	r0, [sp, #52]	; 0x34
   325d8:	ldr	r1, [sp, #44]	; 0x2c
   325dc:	ldr	ip, [sp, #60]	; 0x3c
   325e0:	add	r0, r9, r0, lsl #1
   325e4:	ldrsh	r3, [r0], r4
   325e8:	subs	r1, r1, #1
   325ec:	vmov	s0, r3
   325f0:	vcvt.f32.s32	s0, s0
   325f4:	vstr	s0, [ip]
   325f8:	add	ip, ip, #4
   325fc:	bne	325e4 <GetDataSlab+0x100c8>
   32600:	ldr	r0, [sp, #32]
   32604:	ldr	r3, [sp, #40]	; 0x28
   32608:	add	r1, r9, r3, lsl #1
   3260c:	add	r9, r1, r0, lsl #1
   32610:	add	r0, r0, r2
   32614:	add	r2, r0, r3
   32618:	ldr	r0, [fp, #24]
   3261c:	cmp	r0, #2
   32620:	blt	326d0 <GetDataSlab+0x101b4>
   32624:	ldr	ip, [sp, #56]	; 0x38
   32628:	mov	r1, #0
   3262c:	mov	r0, r1
   32630:	ldr	r1, [r6, r1, lsl #2]
   32634:	add	r1, r1, #1
   32638:	str	r1, [r6, r0, lsl #2]
   3263c:	ldr	r3, [lr, r0, lsl #2]
   32640:	sdiv	r7, r1, r3
   32644:	mls	r1, r7, r3, r1
   32648:	cmp	r1, #0
   3264c:	bne	326c0 <GetDataSlab+0x101a4>
   32650:	add	r5, sp, #64	; 0x40
   32654:	str	sl, [r6, r0, lsl #2]
   32658:	add	r1, r5, r0, lsl #2
   3265c:	ldr	r1, [r1, #4]
   32660:	sdiv	r3, r2, r1
   32664:	mls	r3, r3, r1, r2
   32668:	cmp	r3, #0
   3266c:	beq	32688 <GetDataSlab+0x1016c>
   32670:	ldr	r7, [r5, r0, lsl #2]
   32674:	ldr	r5, [ip, r0, lsl #2]
   32678:	sub	r1, r1, r3
   3267c:	mla	r1, r5, r7, r1
   32680:	add	r2, r1, r2
   32684:	b	326a4 <GetDataSlab+0x10188>
   32688:	ldr	r1, [ip, r0, lsl #2]
   3268c:	cmp	r1, #0
   32690:	beq	326a8 <GetDataSlab+0x1018c>
   32694:	add	r3, sp, #64	; 0x40
   32698:	ldr	r3, [r3, r0, lsl #2]
   3269c:	mla	r2, r3, r1, r2
   326a0:	mul	r1, r3, r1
   326a4:	add	r9, r9, r1, lsl #1
   326a8:	ldr	r3, [fp, #24]
   326ac:	add	r1, r0, #1
   326b0:	add	r0, r0, #2
   326b4:	cmp	r0, r3
   326b8:	blt	3262c <GetDataSlab+0x10110>
   326bc:	b	326d0 <GetDataSlab+0x101b4>
   326c0:	ldr	r1, [sp, #28]
   326c4:	ldr	r0, [r1, r0, lsl #2]
   326c8:	add	r9, r9, r0, lsl #1
   326cc:	add	r2, r0, r2
   326d0:	ldr	r0, [sp, #60]	; 0x3c
   326d4:	ldr	r1, [sp, #36]	; 0x24
   326d8:	ldr	r3, [sp, #48]	; 0x30
   326dc:	add	r0, r0, r1
   326e0:	ldr	r1, [sp, #44]	; 0x2c
   326e4:	str	r0, [sp, #60]	; 0x3c
   326e8:	mov	r0, #0
   326ec:	add	r8, r8, r1
   326f0:	cmp	r8, r3
   326f4:	blt	325c8 <GetDataSlab+0x100ac>
   326f8:	b	242ac <GetDataSlab+0x1d90>
   326fc:	ldr	r0, [sp, #48]	; 0x30
   32700:	cmp	r0, #1
   32704:	ldr	r0, [sp, #44]	; 0x2c
   32708:	blt	242a8 <GetDataSlab+0x1d8c>
   3270c:	ldr	r1, [sp, #40]	; 0x28
   32710:	ldr	r3, [ip], #4
   32714:	lsl	r4, r8, #1
   32718:	mov	sl, #0
   3271c:	mls	r0, r0, r8, r1
   32720:	mov	r1, lr
   32724:	str	ip, [sp, #56]	; 0x38
   32728:	str	r3, [sp, #52]	; 0x34
   3272c:	sub	r0, r0, r3
   32730:	str	r0, [sp, #40]	; 0x28
   32734:	ldr	r0, [fp, #20]
   32738:	add	lr, r0, #4
   3273c:	add	r0, sp, #104	; 0x68
   32740:	orr	r6, r0, #4
   32744:	orr	r0, r1, #4
   32748:	ldr	r1, [sp, #44]	; 0x2c
   3274c:	str	r0, [sp, #28]
   32750:	mla	r0, r1, r8, r3
   32754:	mov	r8, #0
   32758:	str	r0, [sp, #32]
   3275c:	lsl	r0, r1, #2
   32760:	str	r0, [sp, #36]	; 0x24
   32764:	ldr	r0, [sp, #52]	; 0x34
   32768:	cmp	r1, #1
   3276c:	blt	327a0 <GetDataSlab+0x10284>
   32770:	ldr	r0, [sp, #52]	; 0x34
   32774:	ldr	r1, [sp, #44]	; 0x2c
   32778:	ldr	ip, [sp, #60]	; 0x3c
   3277c:	add	r0, r9, r0, lsl #1
   32780:	ldrh	r3, [r0], r4
   32784:	subs	r1, r1, #1
   32788:	vmov	s0, r3
   3278c:	vcvt.f32.u32	s0, s0
   32790:	vstr	s0, [ip]
   32794:	add	ip, ip, #4
   32798:	bne	32780 <GetDataSlab+0x10264>
   3279c:	ldr	r0, [sp, #32]
   327a0:	ldr	r3, [sp, #40]	; 0x28
   327a4:	add	r1, r9, r3, lsl #1
   327a8:	add	r9, r1, r0, lsl #1
   327ac:	add	r0, r0, r2
   327b0:	add	r2, r0, r3
   327b4:	ldr	r0, [fp, #24]
   327b8:	cmp	r0, #2
   327bc:	blt	3286c <GetDataSlab+0x10350>
   327c0:	ldr	ip, [sp, #56]	; 0x38
   327c4:	mov	r1, #0
   327c8:	mov	r0, r1
   327cc:	ldr	r1, [r6, r1, lsl #2]
   327d0:	add	r1, r1, #1
   327d4:	str	r1, [r6, r0, lsl #2]
   327d8:	ldr	r3, [lr, r0, lsl #2]
   327dc:	sdiv	r7, r1, r3
   327e0:	mls	r1, r7, r3, r1
   327e4:	cmp	r1, #0
   327e8:	bne	3285c <GetDataSlab+0x10340>
   327ec:	add	r5, sp, #64	; 0x40
   327f0:	str	sl, [r6, r0, lsl #2]
   327f4:	add	r1, r5, r0, lsl #2
   327f8:	ldr	r1, [r1, #4]
   327fc:	sdiv	r3, r2, r1
   32800:	mls	r3, r3, r1, r2
   32804:	cmp	r3, #0
   32808:	beq	32824 <GetDataSlab+0x10308>
   3280c:	ldr	r7, [r5, r0, lsl #2]
   32810:	ldr	r5, [ip, r0, lsl #2]
   32814:	sub	r1, r1, r3
   32818:	mla	r1, r5, r7, r1
   3281c:	add	r2, r1, r2
   32820:	b	32840 <GetDataSlab+0x10324>
   32824:	ldr	r1, [ip, r0, lsl #2]
   32828:	cmp	r1, #0
   3282c:	beq	32844 <GetDataSlab+0x10328>
   32830:	add	r3, sp, #64	; 0x40
   32834:	ldr	r3, [r3, r0, lsl #2]
   32838:	mla	r2, r3, r1, r2
   3283c:	mul	r1, r3, r1
   32840:	add	r9, r9, r1, lsl #1
   32844:	ldr	r3, [fp, #24]
   32848:	add	r1, r0, #1
   3284c:	add	r0, r0, #2
   32850:	cmp	r0, r3
   32854:	blt	327c8 <GetDataSlab+0x102ac>
   32858:	b	3286c <GetDataSlab+0x10350>
   3285c:	ldr	r1, [sp, #28]
   32860:	ldr	r0, [r1, r0, lsl #2]
   32864:	add	r9, r9, r0, lsl #1
   32868:	add	r2, r0, r2
   3286c:	ldr	r0, [sp, #60]	; 0x3c
   32870:	ldr	r1, [sp, #36]	; 0x24
   32874:	ldr	r3, [sp, #48]	; 0x30
   32878:	add	r0, r0, r1
   3287c:	ldr	r1, [sp, #44]	; 0x2c
   32880:	str	r0, [sp, #60]	; 0x3c
   32884:	mov	r0, #0
   32888:	add	r8, r8, r1
   3288c:	cmp	r8, r3
   32890:	blt	32764 <GetDataSlab+0x10248>
   32894:	b	242ac <GetDataSlab+0x1d90>
   32898:	ldr	r0, [sp, #56]	; 0x38
   3289c:	cmp	r0, #1
   328a0:	blt	242a8 <GetDataSlab+0x1d8c>
   328a4:	ldr	r0, [sp, #48]	; 0x30
   328a8:	ldr	r1, [sp, #44]	; 0x2c
   328ac:	add	r9, ip, #4
   328b0:	mls	r1, r0, r8, r1
   328b4:	mov	ip, r0
   328b8:	ldr	r0, [fp, #20]
   328bc:	str	r1, [sp, #44]	; 0x2c
   328c0:	add	sl, r0, #4
   328c4:	add	r0, sp, #104	; 0x68
   328c8:	orr	r1, r0, #4
   328cc:	sub	r0, fp, #72	; 0x48
   328d0:	orr	r0, r0, #4
   328d4:	str	r0, [sp, #32]
   328d8:	mul	r0, ip, r8
   328dc:	lsl	r8, r8, #2
   328e0:	str	r0, [sp, #36]	; 0x24
   328e4:	lsl	r0, ip, #2
   328e8:	str	r0, [sp, #40]	; 0x28
   328ec:	mov	r0, #0
   328f0:	str	r0, [sp, #52]	; 0x34
   328f4:	ldr	r0, [fp, #12]
   328f8:	cmp	ip, #1
   328fc:	ldr	r0, [r0]
   32900:	blt	32948 <GetDataSlab+0x1042c>
   32904:	ldr	r2, [sp, #36]	; 0x24
   32908:	add	r5, lr, r0, lsl #2
   3290c:	add	r4, r2, r3
   32910:	add	r3, lr, r2, lsl #2
   32914:	mov	r2, ip
   32918:	ldr	ip, [sp, #60]	; 0x3c
   3291c:	ldr	r6, [r5], r8
   32920:	subs	r2, r2, #1
   32924:	vmov	s0, r6
   32928:	vcvt.f32.s32	s0, s0
   3292c:	vstr	s0, [ip]
   32930:	add	ip, ip, #4
   32934:	bne	3291c <GetDataSlab+0x10400>
   32938:	ldr	ip, [sp, #48]	; 0x30
   3293c:	add	r2, r4, r0
   32940:	mov	lr, r3
   32944:	b	3294c <GetDataSlab+0x10430>
   32948:	add	r2, r0, r3
   3294c:	add	r5, sp, #64	; 0x40
   32950:	ldr	r3, [sp, #44]	; 0x2c
   32954:	sub	r0, r3, r0
   32958:	add	lr, lr, r3, lsl #2
   3295c:	add	r3, r2, r0
   32960:	ldr	r0, [fp, #24]
   32964:	cmp	r0, #2
   32968:	blt	32a10 <GetDataSlab+0x104f4>
   3296c:	mov	r2, #0
   32970:	mov	r0, r2
   32974:	ldr	r2, [r1, r2, lsl #2]
   32978:	add	r2, r2, #1
   3297c:	str	r2, [r1, r0, lsl #2]
   32980:	ldr	r6, [sl, r0, lsl #2]
   32984:	sdiv	r4, r2, r6
   32988:	mls	r2, r4, r6, r2
   3298c:	cmp	r2, #0
   32990:	bne	32a00 <GetDataSlab+0x104e4>
   32994:	mov	r2, #0
   32998:	str	r2, [r1, r0, lsl #2]
   3299c:	add	r2, r5, r0, lsl #2
   329a0:	ldr	r2, [r2, #4]
   329a4:	sdiv	r6, r3, r2
   329a8:	mls	r6, r6, r2, r3
   329ac:	cmp	r6, #0
   329b0:	beq	329cc <GetDataSlab+0x104b0>
   329b4:	ldr	r4, [r5, r0, lsl #2]
   329b8:	ldr	r7, [r9, r0, lsl #2]
   329bc:	sub	r2, r2, r6
   329c0:	mla	r2, r7, r4, r2
   329c4:	add	r3, r2, r3
   329c8:	b	329e4 <GetDataSlab+0x104c8>
   329cc:	ldr	r2, [r9, r0, lsl #2]
   329d0:	cmp	r2, #0
   329d4:	beq	329e8 <GetDataSlab+0x104cc>
   329d8:	ldr	r7, [r5, r0, lsl #2]
   329dc:	mla	r3, r7, r2, r3
   329e0:	mul	r2, r7, r2
   329e4:	add	lr, lr, r2, lsl #2
   329e8:	ldr	r7, [fp, #24]
   329ec:	add	r2, r0, #1
   329f0:	add	r0, r0, #2
   329f4:	cmp	r0, r7
   329f8:	blt	32970 <GetDataSlab+0x10454>
   329fc:	b	32a10 <GetDataSlab+0x104f4>
   32a00:	ldr	r2, [sp, #32]
   32a04:	ldr	r0, [r2, r0, lsl #2]
   32a08:	add	lr, lr, r0, lsl #2
   32a0c:	add	r3, r0, r3
   32a10:	ldr	r0, [sp, #60]	; 0x3c
   32a14:	ldr	r2, [sp, #40]	; 0x28
   32a18:	ldr	r4, [sp, #52]	; 0x34
   32a1c:	add	r0, r0, r2
   32a20:	ldr	r2, [sp, #56]	; 0x38
   32a24:	add	r4, r4, ip
   32a28:	str	r0, [sp, #60]	; 0x3c
   32a2c:	mov	r0, #0
   32a30:	str	r4, [sp, #52]	; 0x34
   32a34:	cmp	r4, r2
   32a38:	blt	328f4 <GetDataSlab+0x103d8>
   32a3c:	b	242ac <GetDataSlab+0x1d90>
   32a40:	ldr	r0, [sp, #56]	; 0x38
   32a44:	cmp	r0, #1
   32a48:	blt	242a8 <GetDataSlab+0x1d8c>
   32a4c:	ldr	r0, [sp, #48]	; 0x30
   32a50:	ldr	r1, [sp, #44]	; 0x2c
   32a54:	add	r9, ip, #4
   32a58:	mls	r1, r0, r8, r1
   32a5c:	mov	ip, r0
   32a60:	ldr	r0, [fp, #20]
   32a64:	str	r1, [sp, #44]	; 0x2c
   32a68:	add	sl, r0, #4
   32a6c:	add	r0, sp, #104	; 0x68
   32a70:	orr	r1, r0, #4
   32a74:	sub	r0, fp, #72	; 0x48
   32a78:	orr	r0, r0, #4
   32a7c:	str	r0, [sp, #32]
   32a80:	mul	r0, ip, r8
   32a84:	lsl	r8, r8, #2
   32a88:	str	r0, [sp, #36]	; 0x24
   32a8c:	lsl	r0, ip, #2
   32a90:	str	r0, [sp, #40]	; 0x28
   32a94:	mov	r0, #0
   32a98:	str	r0, [sp, #52]	; 0x34
   32a9c:	ldr	r0, [fp, #12]
   32aa0:	cmp	ip, #1
   32aa4:	ldr	r0, [r0]
   32aa8:	blt	32af0 <GetDataSlab+0x105d4>
   32aac:	ldr	r2, [sp, #36]	; 0x24
   32ab0:	add	r5, lr, r0, lsl #2
   32ab4:	add	r4, r2, r3
   32ab8:	add	r3, lr, r2, lsl #2
   32abc:	mov	r2, ip
   32ac0:	ldr	ip, [sp, #60]	; 0x3c
   32ac4:	ldr	r6, [r5], r8
   32ac8:	subs	r2, r2, #1
   32acc:	vmov	s0, r6
   32ad0:	vcvt.f32.u32	s0, s0
   32ad4:	vstr	s0, [ip]
   32ad8:	add	ip, ip, #4
   32adc:	bne	32ac4 <GetDataSlab+0x105a8>
   32ae0:	ldr	ip, [sp, #48]	; 0x30
   32ae4:	add	r2, r4, r0
   32ae8:	mov	lr, r3
   32aec:	b	32af4 <GetDataSlab+0x105d8>
   32af0:	add	r2, r0, r3
   32af4:	add	r5, sp, #64	; 0x40
   32af8:	ldr	r3, [sp, #44]	; 0x2c
   32afc:	sub	r0, r3, r0
   32b00:	add	lr, lr, r3, lsl #2
   32b04:	add	r3, r2, r0
   32b08:	ldr	r0, [fp, #24]
   32b0c:	cmp	r0, #2
   32b10:	blt	32bb8 <GetDataSlab+0x1069c>
   32b14:	mov	r2, #0
   32b18:	mov	r0, r2
   32b1c:	ldr	r2, [r1, r2, lsl #2]
   32b20:	add	r2, r2, #1
   32b24:	str	r2, [r1, r0, lsl #2]
   32b28:	ldr	r6, [sl, r0, lsl #2]
   32b2c:	sdiv	r4, r2, r6
   32b30:	mls	r2, r4, r6, r2
   32b34:	cmp	r2, #0
   32b38:	bne	32ba8 <GetDataSlab+0x1068c>
   32b3c:	mov	r2, #0
   32b40:	str	r2, [r1, r0, lsl #2]
   32b44:	add	r2, r5, r0, lsl #2
   32b48:	ldr	r2, [r2, #4]
   32b4c:	sdiv	r6, r3, r2
   32b50:	mls	r6, r6, r2, r3
   32b54:	cmp	r6, #0
   32b58:	beq	32b74 <GetDataSlab+0x10658>
   32b5c:	ldr	r4, [r5, r0, lsl #2]
   32b60:	ldr	r7, [r9, r0, lsl #2]
   32b64:	sub	r2, r2, r6
   32b68:	mla	r2, r7, r4, r2
   32b6c:	add	r3, r2, r3
   32b70:	b	32b8c <GetDataSlab+0x10670>
   32b74:	ldr	r2, [r9, r0, lsl #2]
   32b78:	cmp	r2, #0
   32b7c:	beq	32b90 <GetDataSlab+0x10674>
   32b80:	ldr	r7, [r5, r0, lsl #2]
   32b84:	mla	r3, r7, r2, r3
   32b88:	mul	r2, r7, r2
   32b8c:	add	lr, lr, r2, lsl #2
   32b90:	ldr	r7, [fp, #24]
   32b94:	add	r2, r0, #1
   32b98:	add	r0, r0, #2
   32b9c:	cmp	r0, r7
   32ba0:	blt	32b18 <GetDataSlab+0x105fc>
   32ba4:	b	32bb8 <GetDataSlab+0x1069c>
   32ba8:	ldr	r2, [sp, #32]
   32bac:	ldr	r0, [r2, r0, lsl #2]
   32bb0:	add	lr, lr, r0, lsl #2
   32bb4:	add	r3, r0, r3
   32bb8:	ldr	r0, [sp, #60]	; 0x3c
   32bbc:	ldr	r2, [sp, #40]	; 0x28
   32bc0:	ldr	r4, [sp, #52]	; 0x34
   32bc4:	add	r0, r0, r2
   32bc8:	ldr	r2, [sp, #56]	; 0x38
   32bcc:	add	r4, r4, ip
   32bd0:	str	r0, [sp, #60]	; 0x3c
   32bd4:	mov	r0, #0
   32bd8:	str	r4, [sp, #52]	; 0x34
   32bdc:	cmp	r4, r2
   32be0:	blt	32a9c <GetDataSlab+0x10580>
   32be4:	b	242ac <GetDataSlab+0x1d90>
   32be8:	ldr	r0, [sp, #48]	; 0x30
   32bec:	ldr	r1, [fp, #20]
   32bf0:	cmp	r0, #1
   32bf4:	blt	242a8 <GetDataSlab+0x1d8c>
   32bf8:	ldr	r4, [sp, #44]	; 0x2c
   32bfc:	ldr	r0, [sp, #40]	; 0x28
   32c00:	ldr	r5, [ip], #4
   32c04:	mov	r3, lr
   32c08:	add	sl, r1, #4
   32c0c:	mov	r8, #0
   32c10:	mls	r0, r4, r6, r0
   32c14:	mov	lr, ip
   32c18:	mov	r1, r4
   32c1c:	str	r5, [sp, #56]	; 0x38
   32c20:	sub	r0, r0, r5
   32c24:	str	r0, [sp, #52]	; 0x34
   32c28:	add	r0, sp, #104	; 0x68
   32c2c:	orr	r7, r0, #4
   32c30:	orr	r0, r3, #4
   32c34:	str	r0, [sp, #32]
   32c38:	mla	r0, r4, r6, r5
   32c3c:	lsl	r6, r6, #2
   32c40:	str	r0, [sp, #36]	; 0x24
   32c44:	lsl	r0, r4, #2
   32c48:	str	r0, [sp, #40]	; 0x28
   32c4c:	ldr	r0, [sp, #56]	; 0x38
   32c50:	cmp	r1, #1
   32c54:	blt	32c7c <GetDataSlab+0x10760>
   32c58:	ldr	r0, [sp, #56]	; 0x38
   32c5c:	ldr	r3, [sp, #44]	; 0x2c
   32c60:	ldr	r1, [sp, #60]	; 0x3c
   32c64:	add	r0, r9, r0, lsl #2
   32c68:	ldr	r4, [r0], r6
   32c6c:	subs	r3, r3, #1
   32c70:	str	r4, [r1], #4
   32c74:	bne	32c68 <GetDataSlab+0x1074c>
   32c78:	ldr	r0, [sp, #36]	; 0x24
   32c7c:	ldr	r3, [sp, #52]	; 0x34
   32c80:	add	r1, r9, r3, lsl #2
   32c84:	add	r9, r1, r0, lsl #2
   32c88:	add	r0, r0, r2
   32c8c:	add	r2, r0, r3
   32c90:	ldr	r0, [fp, #24]
   32c94:	cmp	r0, #2
   32c98:	blt	32d48 <GetDataSlab+0x1082c>
   32c9c:	mov	ip, #0
   32ca0:	ldr	r1, [r7, ip, lsl #2]
   32ca4:	mov	r0, ip
   32ca8:	add	r1, r1, #1
   32cac:	str	r1, [r7, ip, lsl #2]
   32cb0:	ldr	r3, [sl, ip, lsl #2]
   32cb4:	sdiv	r4, r1, r3
   32cb8:	mls	r1, r4, r3, r1
   32cbc:	cmp	r1, #0
   32cc0:	bne	32d38 <GetDataSlab+0x1081c>
   32cc4:	mov	r1, #0
   32cc8:	add	r5, sp, #64	; 0x40
   32ccc:	str	r1, [r7, r0, lsl #2]
   32cd0:	add	r1, r5, r0, lsl #2
   32cd4:	ldr	r1, [r1, #4]
   32cd8:	sdiv	r3, r2, r1
   32cdc:	mls	r3, r3, r1, r2
   32ce0:	cmp	r3, #0
   32ce4:	beq	32d00 <GetDataSlab+0x107e4>
   32ce8:	ldr	r4, [r5, r0, lsl #2]
   32cec:	ldr	r5, [lr, r0, lsl #2]
   32cf0:	sub	r1, r1, r3
   32cf4:	mla	r1, r5, r4, r1
   32cf8:	add	r2, r1, r2
   32cfc:	b	32d1c <GetDataSlab+0x10800>
   32d00:	mov	r1, lr
   32d04:	ldr	r1, [lr, r0, lsl #2]
   32d08:	cmp	r1, #0
   32d0c:	beq	32d20 <GetDataSlab+0x10804>
   32d10:	ldr	r3, [r5, r0, lsl #2]
   32d14:	mla	r2, r3, r1, r2
   32d18:	mul	r1, r3, r1
   32d1c:	add	r9, r9, r1, lsl #2
   32d20:	ldr	r1, [fp, #24]
   32d24:	add	ip, r0, #1
   32d28:	add	r0, r0, #2
   32d2c:	cmp	r0, r1
   32d30:	blt	32ca0 <GetDataSlab+0x10784>
   32d34:	b	32d48 <GetDataSlab+0x1082c>
   32d38:	ldr	r1, [sp, #32]
   32d3c:	ldr	r0, [r1, r0, lsl #2]
   32d40:	add	r9, r9, r0, lsl #2
   32d44:	add	r2, r0, r2
   32d48:	ldr	r0, [sp, #60]	; 0x3c
   32d4c:	ldr	r1, [sp, #40]	; 0x28
   32d50:	ldr	r3, [sp, #48]	; 0x30
   32d54:	add	r0, r0, r1
   32d58:	ldr	r1, [sp, #44]	; 0x2c
   32d5c:	str	r0, [sp, #60]	; 0x3c
   32d60:	mov	r0, #0
   32d64:	add	r8, r8, r1
   32d68:	cmp	r8, r3
   32d6c:	blt	32c4c <GetDataSlab+0x10730>
   32d70:	b	242ac <GetDataSlab+0x1d90>
   32d74:	ldr	r0, [sp, #48]	; 0x30
   32d78:	ldr	r3, [sp, #44]	; 0x2c
   32d7c:	cmp	r0, #1
   32d80:	blt	242a8 <GetDataSlab+0x1d8c>
   32d84:	ldr	r0, [sp, #40]	; 0x28
   32d88:	ldr	r4, [ip], #4
   32d8c:	mov	r1, lr
   32d90:	mov	sl, #0
   32d94:	mls	r0, r3, r8, r0
   32d98:	str	r4, [sp, #52]	; 0x34
   32d9c:	str	ip, [sp, #56]	; 0x38
   32da0:	sub	r0, r0, r4
   32da4:	str	r0, [sp, #40]	; 0x28
   32da8:	ldr	r0, [fp, #20]
   32dac:	add	lr, r0, #4
   32db0:	add	r0, sp, #104	; 0x68
   32db4:	orr	r7, r0, #4
   32db8:	orr	r0, r1, #4
   32dbc:	str	r0, [sp, #28]
   32dc0:	mla	r0, r3, r8, r4
   32dc4:	lsl	r4, r8, #3
   32dc8:	mov	r8, #0
   32dcc:	str	r0, [sp, #32]
   32dd0:	lsl	r0, r3, #2
   32dd4:	str	r0, [sp, #36]	; 0x24
   32dd8:	ldr	r0, [sp, #52]	; 0x34
   32ddc:	cmp	r3, #1
   32de0:	blt	32e14 <GetDataSlab+0x108f8>
   32de4:	ldr	r0, [sp, #52]	; 0x34
   32de8:	ldr	ip, [sp, #60]	; 0x3c
   32dec:	mov	r1, r3
   32df0:	add	r0, r9, r0, lsl #3
   32df4:	vldr	d16, [r0]
   32df8:	add	r0, r0, r4
   32dfc:	subs	r1, r1, #1
   32e00:	vcvt.f32.f64	s0, d16
   32e04:	vstr	s0, [ip]
   32e08:	add	ip, ip, #4
   32e0c:	bne	32df4 <GetDataSlab+0x108d8>
   32e10:	ldr	r0, [sp, #32]
   32e14:	ldr	r3, [sp, #40]	; 0x28
   32e18:	add	r1, r9, r3, lsl #3
   32e1c:	add	r9, r1, r0, lsl #3
   32e20:	add	r0, r0, r2
   32e24:	add	r2, r0, r3
   32e28:	ldr	r0, [fp, #24]
   32e2c:	cmp	r0, #2
   32e30:	blt	32ee0 <GetDataSlab+0x109c4>
   32e34:	ldr	ip, [sp, #56]	; 0x38
   32e38:	mov	r1, #0
   32e3c:	mov	r0, r1
   32e40:	ldr	r1, [r7, r1, lsl #2]
   32e44:	add	r1, r1, #1
   32e48:	str	r1, [r7, r0, lsl #2]
   32e4c:	ldr	r3, [lr, r0, lsl #2]
   32e50:	sdiv	r6, r1, r3
   32e54:	mls	r1, r6, r3, r1
   32e58:	cmp	r1, #0
   32e5c:	bne	32ed0 <GetDataSlab+0x109b4>
   32e60:	add	r5, sp, #64	; 0x40
   32e64:	str	sl, [r7, r0, lsl #2]
   32e68:	add	r1, r5, r0, lsl #2
   32e6c:	ldr	r1, [r1, #4]
   32e70:	sdiv	r3, r2, r1
   32e74:	mls	r3, r3, r1, r2
   32e78:	cmp	r3, #0
   32e7c:	beq	32e98 <GetDataSlab+0x1097c>
   32e80:	ldr	r6, [r5, r0, lsl #2]
   32e84:	ldr	r5, [ip, r0, lsl #2]
   32e88:	sub	r1, r1, r3
   32e8c:	mla	r1, r5, r6, r1
   32e90:	add	r2, r1, r2
   32e94:	b	32eb4 <GetDataSlab+0x10998>
   32e98:	ldr	r1, [ip, r0, lsl #2]
   32e9c:	cmp	r1, #0
   32ea0:	beq	32eb8 <GetDataSlab+0x1099c>
   32ea4:	add	r3, sp, #64	; 0x40
   32ea8:	ldr	r3, [r3, r0, lsl #2]
   32eac:	mla	r2, r3, r1, r2
   32eb0:	mul	r1, r3, r1
   32eb4:	add	r9, r9, r1, lsl #3
   32eb8:	ldr	r3, [fp, #24]
   32ebc:	add	r1, r0, #1
   32ec0:	add	r0, r0, #2
   32ec4:	cmp	r0, r3
   32ec8:	blt	32e3c <GetDataSlab+0x10920>
   32ecc:	b	32ee0 <GetDataSlab+0x109c4>
   32ed0:	ldr	r1, [sp, #28]
   32ed4:	ldr	r0, [r1, r0, lsl #2]
   32ed8:	add	r9, r9, r0, lsl #3
   32edc:	add	r2, r0, r2
   32ee0:	ldr	r0, [sp, #60]	; 0x3c
   32ee4:	ldr	r1, [sp, #36]	; 0x24
   32ee8:	ldr	r3, [sp, #44]	; 0x2c
   32eec:	add	r0, r0, r1
   32ef0:	ldr	r1, [sp, #48]	; 0x30
   32ef4:	add	r8, r8, r3
   32ef8:	str	r0, [sp, #60]	; 0x3c
   32efc:	mov	r0, #0
   32f00:	cmp	r8, r1
   32f04:	blt	32dd8 <GetDataSlab+0x108bc>
   32f08:	b	242ac <GetDataSlab+0x1d90>
   32f0c:	ldr	r0, [sp, #40]	; 0x28
   32f10:	ldr	r1, [sp, #60]	; 0x3c
   32f14:	ldr	r3, [sp, #48]	; 0x30
   32f18:	cmp	r0, #1
   32f1c:	blt	330d0 <GetDataSlab+0x10bb4>
   32f20:	ldr	r2, [fp, #12]
   32f24:	ldr	sl, [sp, #32]
   32f28:	ldr	r0, [sp, #28]
   32f2c:	add	r5, sp, #64	; 0x40
   32f30:	str	r1, [sp, #36]	; 0x24
   32f34:	lsl	r6, r7, #3
   32f38:	mov	r1, #0
   32f3c:	mov	ip, r5
   32f40:	ldr	r3, [r2], #4
   32f44:	mls	r0, sl, r7, r0
   32f48:	sub	r0, r0, r3
   32f4c:	str	r3, [sp, #24]
   32f50:	str	r2, [sp, #8]
   32f54:	str	r0, [sp, #16]
   32f58:	add	r0, r8, #4
   32f5c:	str	r0, [sp, #44]	; 0x2c
   32f60:	add	r0, sp, #104	; 0x68
   32f64:	orr	r8, r0, #4
   32f68:	orr	r0, lr, #4
   32f6c:	mov	lr, r2
   32f70:	str	r0, [sp]
   32f74:	mla	r0, sl, r7, r3
   32f78:	str	r0, [sp, #4]
   32f7c:	lsl	r0, sl, #2
   32f80:	str	r0, [sp, #12]
   32f84:	ldr	r0, [sp, #24]
   32f88:	cmp	sl, #1
   32f8c:	str	r1, [sp, #28]
   32f90:	blt	32fd8 <GetDataSlab+0x10abc>
   32f94:	ldr	r0, [sp, #24]
   32f98:	str	r9, [sp, #20]
   32f9c:	add	r0, r9, r0, lsl #3
   32fa0:	ldr	r9, [sp, #36]	; 0x24
   32fa4:	add	r7, r0, r6
   32fa8:	ldrd	r0, [r0]
   32fac:	bl	497ac <__aeabi_l2f>
   32fb0:	str	r0, [r9], #4
   32fb4:	subs	sl, sl, #1
   32fb8:	mov	r0, r7
   32fbc:	bne	32fa4 <GetDataSlab+0x10a88>
   32fc0:	ldr	r0, [sp, #4]
   32fc4:	ldr	sl, [sp, #32]
   32fc8:	ldr	r9, [sp, #20]
   32fcc:	ldr	lr, [sp, #8]
   32fd0:	add	r5, sp, #64	; 0x40
   32fd4:	mov	ip, r5
   32fd8:	ldr	r2, [sp, #16]
   32fdc:	add	r1, r9, r2, lsl #3
   32fe0:	add	r9, r1, r0, lsl #3
   32fe4:	add	r0, r0, r4
   32fe8:	add	r4, r0, r2
   32fec:	ldr	r0, [fp, #24]
   32ff0:	cmp	r0, #2
   32ff4:	blt	33094 <GetDataSlab+0x10b78>
   32ff8:	ldr	r3, [sp, #48]	; 0x30
   32ffc:	mov	r1, #0
   33000:	mov	r0, r1
   33004:	ldr	r1, [r8, r1, lsl #2]
   33008:	ldr	r2, [sp, #44]	; 0x2c
   3300c:	add	r1, r1, #1
   33010:	str	r1, [r8, r0, lsl #2]
   33014:	ldr	r2, [r2, r0, lsl #2]
   33018:	sdiv	r7, r1, r2
   3301c:	mls	r1, r7, r2, r1
   33020:	cmp	r1, #0
   33024:	bne	3309c <GetDataSlab+0x10b80>
   33028:	mov	r1, #0
   3302c:	str	r1, [r8, r0, lsl #2]
   33030:	add	r1, ip, r0, lsl #2
   33034:	ldr	r1, [r1, #4]
   33038:	sdiv	r2, r4, r1
   3303c:	mls	r2, r2, r1, r4
   33040:	cmp	r2, #0
   33044:	beq	33060 <GetDataSlab+0x10b44>
   33048:	ldr	r5, [ip, r0, lsl #2]
   3304c:	ldr	r7, [lr, r0, lsl #2]
   33050:	sub	r1, r1, r2
   33054:	mla	r1, r7, r5, r1
   33058:	add	r4, r1, r4
   3305c:	b	33078 <GetDataSlab+0x10b5c>
   33060:	ldr	r1, [lr, r0, lsl #2]
   33064:	cmp	r1, #0
   33068:	beq	3307c <GetDataSlab+0x10b60>
   3306c:	ldr	r2, [ip, r0, lsl #2]
   33070:	mla	r4, r2, r1, r4
   33074:	mul	r1, r2, r1
   33078:	add	r9, r9, r1, lsl #3
   3307c:	ldr	r2, [fp, #24]
   33080:	add	r1, r0, #1
   33084:	add	r0, r0, #2
   33088:	cmp	r0, r2
   3308c:	blt	33000 <GetDataSlab+0x10ae4>
   33090:	b	330ac <GetDataSlab+0x10b90>
   33094:	ldr	r3, [sp, #48]	; 0x30
   33098:	b	330ac <GetDataSlab+0x10b90>
   3309c:	ldr	r1, [sp]
   330a0:	ldr	r0, [r1, r0, lsl #2]
   330a4:	add	r9, r9, r0, lsl #3
   330a8:	add	r4, r0, r4
   330ac:	ldr	r0, [sp, #12]
   330b0:	ldr	r1, [sp, #36]	; 0x24
   330b4:	add	r1, r1, r0
   330b8:	ldr	r0, [sp, #40]	; 0x28
   330bc:	str	r1, [sp, #36]	; 0x24
   330c0:	ldr	r1, [sp, #28]
   330c4:	add	r1, r1, sl
   330c8:	cmp	r1, r0
   330cc:	blt	32f84 <GetDataSlab+0x10a68>
   330d0:	mov	r0, #0
   330d4:	cmp	r3, #13
   330d8:	bne	242ac <GetDataSlab+0x1d90>
   330dc:	ldr	r8, [fp, #16]
   330e0:	ldr	lr, [fp, #20]
   330e4:	mov	r9, #0
   330e8:	add	r4, sp, #64	; 0x40
   330ec:	ldr	ip, [r8]
   330f0:	sub	r0, ip, #1
   330f4:	str	r0, [fp, #-72]	; 0xffffffb8
   330f8:	ldr	r0, [fp, #8]
   330fc:	ldr	r0, [r0]
   33100:	str	r0, [sp, #64]	; 0x40
   33104:	str	r0, [sp, #40]	; 0x28
   33108:	ldr	r0, [fp, #24]
   3310c:	ldr	r1, [lr]
   33110:	cmp	r0, #2
   33114:	sub	r0, fp, #72	; 0x48
   33118:	str	r1, [sp, #44]	; 0x2c
   3311c:	str	r1, [sp, #48]	; 0x30
   33120:	blt	331c0 <GetDataSlab+0x10ca4>
   33124:	ldr	r3, [sp, #40]	; 0x28
   33128:	ldr	r5, [sp, #44]	; 0x2c
   3312c:	ldr	r2, [fp, #8]
   33130:	mov	r1, #1
   33134:	mov	r9, #0
   33138:	mov	r7, r3
   3313c:	str	r5, [sp, #48]	; 0x30
   33140:	ldr	r5, [r8, r1, lsl #2]
   33144:	str	r3, [r4, r1, lsl #2]
   33148:	mov	r4, #0
   3314c:	sub	r5, r5, #1
   33150:	str	r5, [r0, r1, lsl #2]
   33154:	ldr	r0, [fp, #8]
   33158:	ldr	sl, [r0, r1, lsl #2]
   3315c:	mov	r6, sl
   33160:	mul	r3, r6, r3
   33164:	ldr	r6, [r2, -r4, lsl #2]
   33168:	add	r4, r4, #1
   3316c:	cmp	r1, r4
   33170:	mul	r5, r5, r6
   33174:	bne	33160 <GetDataSlab+0x10c44>
   33178:	ldr	r6, [fp, #12]
   3317c:	add	r4, sp, #64	; 0x40
   33180:	sub	r0, fp, #72	; 0x48
   33184:	add	r2, r2, #4
   33188:	str	r5, [r0, r1, lsl #2]
   3318c:	str	r3, [r4, r1, lsl #2]
   33190:	ldr	r5, [sp, #48]	; 0x30
   33194:	ldr	r6, [r6, r1, lsl #2]
   33198:	mla	r9, r6, r7, r9
   3319c:	ldr	r7, [lr, r1, lsl #2]
   331a0:	add	r1, r1, #1
   331a4:	mul	r5, r7, r5
   331a8:	ldr	r7, [fp, #24]
   331ac:	str	r5, [sp, #48]	; 0x30
   331b0:	cmp	r1, r7
   331b4:	mov	r7, r3
   331b8:	mov	r3, sl
   331bc:	bne	33140 <GetDataSlab+0x10c24>
   331c0:	ldr	r0, [sp, #52]	; 0x34
   331c4:	cmp	ip, #1
   331c8:	add	r5, r0, r9, lsl #3
   331cc:	bne	3aec4 <GetDataSlab+0x189a8>
   331d0:	ldr	r0, [sp, #48]	; 0x30
   331d4:	cmp	r0, #1
   331d8:	blt	242a8 <GetDataSlab+0x1d8c>
   331dc:	add	r4, lr, #4
   331e0:	ldr	lr, [sp, #44]	; 0x2c
   331e4:	add	r0, sp, #104	; 0x68
   331e8:	orr	r6, r0, #4
   331ec:	sub	r0, fp, #72	; 0x48
   331f0:	orr	r0, r0, #4
   331f4:	str	r0, [sp, #28]
   331f8:	lsl	r0, lr, #2
   331fc:	str	r0, [sp, #36]	; 0x24
   33200:	ldr	r0, [sp, #56]	; 0x38
   33204:	ldr	r1, [r0], #4
   33208:	str	r0, [sp, #56]	; 0x38
   3320c:	mov	r0, #0
   33210:	str	r1, [sp, #32]
   33214:	str	r0, [sp, #52]	; 0x34
   33218:	cmp	lr, #1
   3321c:	blt	33248 <GetDataSlab+0x10d2c>
   33220:	ldr	r0, [sp, #32]
   33224:	ldr	r8, [sp, #44]	; 0x2c
   33228:	ldr	sl, [sp, #60]	; 0x3c
   3322c:	add	r7, r5, r0, lsl #3
   33230:	ldrd	r0, [r7]
   33234:	bl	4979c <__aeabi_ul2f>
   33238:	str	r0, [sl], #4
   3323c:	subs	r8, r8, #1
   33240:	add	r7, r7, #8
   33244:	bne	33230 <GetDataSlab+0x10d14>
   33248:	ldr	r0, [sp, #40]	; 0x28
   3324c:	add	r5, r5, r0, lsl #3
   33250:	add	r9, r9, r0
   33254:	ldr	r0, [fp, #24]
   33258:	cmp	r0, #2
   3325c:	blt	3330c <GetDataSlab+0x10df0>
   33260:	ldr	ip, [sp, #60]	; 0x3c
   33264:	ldr	lr, [sp, #44]	; 0x2c
   33268:	mov	r1, #0
   3326c:	mov	r8, #0
   33270:	mov	r0, r1
   33274:	ldr	r1, [r6, r1, lsl #2]
   33278:	add	r1, r1, #1
   3327c:	str	r1, [r6, r0, lsl #2]
   33280:	ldr	r2, [r4, r0, lsl #2]
   33284:	sdiv	r3, r1, r2
   33288:	mls	r1, r3, r2, r1
   3328c:	cmp	r1, #0
   33290:	bne	33318 <GetDataSlab+0x10dfc>
   33294:	add	r3, sp, #64	; 0x40
   33298:	str	r8, [r6, r0, lsl #2]
   3329c:	add	r1, r3, r0, lsl #2
   332a0:	ldr	r1, [r1, #4]
   332a4:	sdiv	r2, r9, r1
   332a8:	mls	r2, r2, r1, r9
   332ac:	cmp	r2, #0
   332b0:	beq	332d0 <GetDataSlab+0x10db4>
   332b4:	ldr	r7, [sp, #56]	; 0x38
   332b8:	ldr	r3, [r3, r0, lsl #2]
   332bc:	sub	r1, r1, r2
   332c0:	ldr	r7, [r7, r0, lsl #2]
   332c4:	mla	r1, r7, r3, r1
   332c8:	add	r9, r1, r9
   332cc:	b	332f0 <GetDataSlab+0x10dd4>
   332d0:	ldr	r1, [sp, #56]	; 0x38
   332d4:	ldr	r1, [r1, r0, lsl #2]
   332d8:	cmp	r1, #0
   332dc:	beq	332f4 <GetDataSlab+0x10dd8>
   332e0:	add	r2, sp, #64	; 0x40
   332e4:	ldr	r2, [r2, r0, lsl #2]
   332e8:	mla	r9, r2, r1, r9
   332ec:	mul	r1, r2, r1
   332f0:	add	r5, r5, r1, lsl #3
   332f4:	ldr	r2, [fp, #24]
   332f8:	add	r1, r0, #1
   332fc:	add	r0, r0, #2
   33300:	cmp	r0, r2
   33304:	blt	33270 <GetDataSlab+0x10d54>
   33308:	b	33328 <GetDataSlab+0x10e0c>
   3330c:	ldr	ip, [sp, #60]	; 0x3c
   33310:	ldr	lr, [sp, #44]	; 0x2c
   33314:	b	33328 <GetDataSlab+0x10e0c>
   33318:	ldr	r1, [sp, #28]
   3331c:	ldr	r0, [r1, r0, lsl #2]
   33320:	add	r5, r5, r0, lsl #3
   33324:	add	r9, r0, r9
   33328:	ldr	r2, [sp, #52]	; 0x34
   3332c:	ldr	r0, [sp, #36]	; 0x24
   33330:	ldr	r1, [sp, #48]	; 0x30
   33334:	add	r2, r2, lr
   33338:	add	ip, ip, r0
   3333c:	mov	r0, #0
   33340:	cmp	r2, r1
   33344:	str	ip, [sp, #60]	; 0x3c
   33348:	str	r2, [sp, #52]	; 0x34
   3334c:	blt	33218 <GetDataSlab+0x10cfc>
   33350:	b	242ac <GetDataSlab+0x1d90>
   33354:	ldr	r0, [sp, #56]	; 0x38
   33358:	cmp	r0, #1
   3335c:	ldr	r0, [fp, #20]
   33360:	blt	242a8 <GetDataSlab+0x1d8c>
   33364:	add	r0, r0, #4
   33368:	ldr	r9, [fp, #12]
   3336c:	str	r0, [sp, #40]	; 0x28
   33370:	add	r0, sp, #104	; 0x68
   33374:	orr	ip, r0, #4
   33378:	sub	r0, fp, #72	; 0x48
   3337c:	orr	r0, r0, #4
   33380:	str	r0, [sp, #36]	; 0x24
   33384:	ldr	r0, [r9], #4
   33388:	str	r0, [sp, #44]	; 0x2c
   3338c:	mov	r0, #0
   33390:	str	r0, [sp, #52]	; 0x34
   33394:	ldr	r6, [sp, #44]	; 0x2c
   33398:	cmp	sl, #1
   3339c:	add	r0, r6, lr
   333a0:	add	r4, r2, r6
   333a4:	blt	333f8 <GetDataSlab+0x10edc>
   333a8:	ldr	r2, [sp, #60]	; 0x3c
   333ac:	ldr	r1, [sp, #52]	; 0x34
   333b0:	ldr	r7, [fp, #20]
   333b4:	mov	r6, #0
   333b8:	add	r5, r2, r1
   333bc:	ldr	r1, [fp, #16]
   333c0:	ldrb	r2, [r4]
   333c4:	strb	r2, [r5, r6]
   333c8:	add	r6, r6, #1
   333cc:	ldr	r3, [r1]
   333d0:	ldr	sl, [r7]
   333d4:	add	r0, r3, r0
   333d8:	add	r4, r4, r3
   333dc:	cmp	r6, sl
   333e0:	blt	333c0 <GetDataSlab+0x10ea4>
   333e4:	ldr	r7, [fp, #12]
   333e8:	ldr	r6, [r7]
   333ec:	ldr	r7, [fp, #8]
   333f0:	ldr	r1, [r7]
   333f4:	b	333fc <GetDataSlab+0x10ee0>
   333f8:	ldr	r1, [sp, #48]	; 0x30
   333fc:	mls	r5, r3, sl, r1
   33400:	str	r1, [sp, #48]	; 0x30
   33404:	str	r6, [sp, #44]	; 0x2c
   33408:	sub	r5, r5, r6
   3340c:	add	lr, r5, r0
   33410:	ldr	r0, [fp, #24]
   33414:	add	r2, r4, r5
   33418:	cmp	r0, #2
   3341c:	blt	334cc <GetDataSlab+0x10fb0>
   33420:	ldr	r1, [sp, #40]	; 0x28
   33424:	mov	r5, #0
   33428:	mov	r0, r5
   3342c:	ldr	r5, [ip, r5, lsl #2]
   33430:	add	r5, r5, #1
   33434:	str	r5, [ip, r0, lsl #2]
   33438:	ldr	r6, [r1, r0, lsl #2]
   3343c:	sdiv	r8, r5, r6
   33440:	mls	r5, r8, r6, r5
   33444:	cmp	r5, #0
   33448:	bne	334bc <GetDataSlab+0x10fa0>
   3344c:	mov	r4, #0
   33450:	str	r4, [ip, r0, lsl #2]
   33454:	add	r4, sp, #64	; 0x40
   33458:	add	r5, r4, r0, lsl #2
   3345c:	ldr	r5, [r5, #4]
   33460:	sdiv	r6, lr, r5
   33464:	mls	r6, r6, r5, lr
   33468:	cmp	r6, #0
   3346c:	beq	3348c <GetDataSlab+0x10f70>
   33470:	ldr	r7, [r4, r0, lsl #2]
   33474:	ldr	r4, [r9, r0, lsl #2]
   33478:	sub	r5, r5, r6
   3347c:	mla	r4, r4, r7, r5
   33480:	add	lr, r4, lr
   33484:	add	r2, r2, r4
   33488:	b	334a4 <GetDataSlab+0x10f88>
   3348c:	ldr	r5, [r9, r0, lsl #2]
   33490:	cmp	r5, #0
   33494:	addne	r4, sp, #64	; 0x40
   33498:	ldrne	r4, [r4, r0, lsl #2]
   3349c:	mlane	lr, r4, r5, lr
   334a0:	mlane	r2, r4, r5, r2
   334a4:	ldr	r4, [fp, #24]
   334a8:	add	r5, r0, #1
   334ac:	add	r0, r0, #2
   334b0:	cmp	r0, r4
   334b4:	blt	33428 <GetDataSlab+0x10f0c>
   334b8:	b	334cc <GetDataSlab+0x10fb0>
   334bc:	ldr	r1, [sp, #36]	; 0x24
   334c0:	ldr	r0, [r1, r0, lsl #2]
   334c4:	add	r2, r2, r0
   334c8:	add	lr, r0, lr
   334cc:	ldr	r4, [sp, #52]	; 0x34
   334d0:	ldr	r1, [sp, #56]	; 0x38
   334d4:	mov	r0, #0
   334d8:	add	r4, sl, r4
   334dc:	cmp	r4, r1
   334e0:	str	r4, [sp, #52]	; 0x34
   334e4:	blt	33394 <GetDataSlab+0x10e78>
   334e8:	b	242ac <GetDataSlab+0x1d90>
   334ec:	ldr	r0, [sp, #56]	; 0x38
   334f0:	ldr	r9, [fp, #12]
   334f4:	cmp	r0, #1
   334f8:	ldr	r0, [fp, #20]
   334fc:	blt	242a8 <GetDataSlab+0x1d8c>
   33500:	mov	r1, lr
   33504:	add	lr, r0, #4
   33508:	add	r0, sp, #104	; 0x68
   3350c:	orr	ip, r0, #4
   33510:	orr	r0, r1, #4
   33514:	str	r0, [sp, #40]	; 0x28
   33518:	ldr	r0, [r9], #4
   3351c:	str	r0, [sp, #44]	; 0x2c
   33520:	mov	r0, #0
   33524:	str	r0, [sp, #52]	; 0x34
   33528:	ldr	r1, [sp, #44]	; 0x2c
   3352c:	cmp	sl, #1
   33530:	add	r0, r1, r2
   33534:	add	r4, r4, r1, lsl #1
   33538:	blt	3358c <GetDataSlab+0x11070>
   3353c:	ldr	r2, [sp, #60]	; 0x3c
   33540:	ldr	r1, [sp, #52]	; 0x34
   33544:	ldr	r7, [fp, #20]
   33548:	mov	r6, #0
   3354c:	add	r5, r2, r1
   33550:	ldr	r1, [fp, #16]
   33554:	ldrb	r2, [r4]
   33558:	strb	r2, [r5, r6]
   3355c:	add	r6, r6, #1
   33560:	ldr	r3, [r1]
   33564:	ldr	sl, [r7]
   33568:	add	r0, r3, r0
   3356c:	add	r4, r4, r3, lsl #1
   33570:	cmp	r6, sl
   33574:	blt	33554 <GetDataSlab+0x11038>
   33578:	ldr	r5, [fp, #12]
   3357c:	ldr	r2, [r5]
   33580:	ldr	r5, [fp, #8]
   33584:	ldr	r1, [r5]
   33588:	b	33594 <GetDataSlab+0x11078>
   3358c:	mov	r2, r1
   33590:	ldr	r1, [sp, #48]	; 0x30
   33594:	mls	r6, r3, sl, r1
   33598:	str	r2, [sp, #44]	; 0x2c
   3359c:	sub	r6, r6, r2
   335a0:	add	r2, r6, r0
   335a4:	ldr	r0, [fp, #24]
   335a8:	add	r4, r4, r6, lsl #1
   335ac:	cmp	r0, #2
   335b0:	blt	33660 <GetDataSlab+0x11144>
   335b4:	mov	r5, #0
   335b8:	ldr	r6, [ip, r5, lsl #2]
   335bc:	mov	r0, r5
   335c0:	add	r6, r6, #1
   335c4:	str	r6, [ip, r5, lsl #2]
   335c8:	ldr	r5, [lr, r5, lsl #2]
   335cc:	sdiv	r7, r6, r5
   335d0:	mls	r5, r7, r5, r6
   335d4:	cmp	r5, #0
   335d8:	bne	33650 <GetDataSlab+0x11134>
   335dc:	mov	r5, #0
   335e0:	add	r7, sp, #64	; 0x40
   335e4:	str	r5, [ip, r0, lsl #2]
   335e8:	add	r5, r7, r0, lsl #2
   335ec:	ldr	r5, [r5, #4]
   335f0:	sdiv	r6, r2, r5
   335f4:	mls	r6, r6, r5, r2
   335f8:	cmp	r6, #0
   335fc:	beq	33618 <GetDataSlab+0x110fc>
   33600:	ldr	r7, [r7, r0, lsl #2]
   33604:	ldr	r8, [r9, r0, lsl #2]
   33608:	sub	r5, r5, r6
   3360c:	mla	r5, r8, r7, r5
   33610:	add	r2, r5, r2
   33614:	b	33634 <GetDataSlab+0x11118>
   33618:	ldr	r5, [r9, r0, lsl #2]
   3361c:	cmp	r5, #0
   33620:	beq	33638 <GetDataSlab+0x1111c>
   33624:	add	r6, sp, #64	; 0x40
   33628:	ldr	r6, [r6, r0, lsl #2]
   3362c:	mla	r2, r6, r5, r2
   33630:	mul	r5, r6, r5
   33634:	add	r4, r4, r5, lsl #1
   33638:	ldr	r6, [fp, #24]
   3363c:	add	r5, r0, #1
   33640:	add	r0, r0, #2
   33644:	cmp	r0, r6
   33648:	blt	335b8 <GetDataSlab+0x1109c>
   3364c:	b	33660 <GetDataSlab+0x11144>
   33650:	ldr	r5, [sp, #40]	; 0x28
   33654:	ldr	r0, [r5, r0, lsl #2]
   33658:	add	r4, r4, r0, lsl #1
   3365c:	add	r2, r0, r2
   33660:	ldr	r5, [sp, #52]	; 0x34
   33664:	str	r1, [sp, #48]	; 0x30
   33668:	ldr	r1, [sp, #56]	; 0x38
   3366c:	mov	r0, #0
   33670:	add	r5, sl, r5
   33674:	cmp	r5, r1
   33678:	str	r5, [sp, #52]	; 0x34
   3367c:	blt	33528 <GetDataSlab+0x1100c>
   33680:	b	242ac <GetDataSlab+0x1d90>
   33684:	ldr	r0, [sp, #56]	; 0x38
   33688:	ldr	r9, [fp, #12]
   3368c:	cmp	r0, #1
   33690:	ldr	r0, [fp, #20]
   33694:	blt	242a8 <GetDataSlab+0x1d8c>
   33698:	mov	r1, lr
   3369c:	add	lr, r0, #4
   336a0:	add	r0, sp, #104	; 0x68
   336a4:	orr	ip, r0, #4
   336a8:	orr	r0, r1, #4
   336ac:	str	r0, [sp, #40]	; 0x28
   336b0:	ldr	r0, [r9], #4
   336b4:	str	r0, [sp, #44]	; 0x2c
   336b8:	mov	r0, #0
   336bc:	str	r0, [sp, #52]	; 0x34
   336c0:	ldr	r1, [sp, #44]	; 0x2c
   336c4:	cmp	sl, #1
   336c8:	add	r0, r1, r2
   336cc:	add	r4, r4, r1, lsl #1
   336d0:	blt	33724 <GetDataSlab+0x11208>
   336d4:	ldr	r2, [sp, #60]	; 0x3c
   336d8:	ldr	r1, [sp, #52]	; 0x34
   336dc:	ldr	r7, [fp, #20]
   336e0:	mov	r6, #0
   336e4:	add	r5, r2, r1
   336e8:	ldr	r1, [fp, #16]
   336ec:	ldrb	r2, [r4]
   336f0:	strb	r2, [r5, r6]
   336f4:	add	r6, r6, #1
   336f8:	ldr	r3, [r1]
   336fc:	ldr	sl, [r7]
   33700:	add	r0, r3, r0
   33704:	add	r4, r4, r3, lsl #1
   33708:	cmp	r6, sl
   3370c:	blt	336ec <GetDataSlab+0x111d0>
   33710:	ldr	r5, [fp, #12]
   33714:	ldr	r2, [r5]
   33718:	ldr	r5, [fp, #8]
   3371c:	ldr	r1, [r5]
   33720:	b	3372c <GetDataSlab+0x11210>
   33724:	mov	r2, r1
   33728:	ldr	r1, [sp, #48]	; 0x30
   3372c:	mls	r6, r3, sl, r1
   33730:	str	r2, [sp, #44]	; 0x2c
   33734:	sub	r6, r6, r2
   33738:	add	r2, r6, r0
   3373c:	ldr	r0, [fp, #24]
   33740:	add	r4, r4, r6, lsl #1
   33744:	cmp	r0, #2
   33748:	blt	337f8 <GetDataSlab+0x112dc>
   3374c:	mov	r5, #0
   33750:	ldr	r6, [ip, r5, lsl #2]
   33754:	mov	r0, r5
   33758:	add	r6, r6, #1
   3375c:	str	r6, [ip, r5, lsl #2]
   33760:	ldr	r5, [lr, r5, lsl #2]
   33764:	sdiv	r7, r6, r5
   33768:	mls	r5, r7, r5, r6
   3376c:	cmp	r5, #0
   33770:	bne	337e8 <GetDataSlab+0x112cc>
   33774:	mov	r5, #0
   33778:	add	r7, sp, #64	; 0x40
   3377c:	str	r5, [ip, r0, lsl #2]
   33780:	add	r5, r7, r0, lsl #2
   33784:	ldr	r5, [r5, #4]
   33788:	sdiv	r6, r2, r5
   3378c:	mls	r6, r6, r5, r2
   33790:	cmp	r6, #0
   33794:	beq	337b0 <GetDataSlab+0x11294>
   33798:	ldr	r7, [r7, r0, lsl #2]
   3379c:	ldr	r8, [r9, r0, lsl #2]
   337a0:	sub	r5, r5, r6
   337a4:	mla	r5, r8, r7, r5
   337a8:	add	r2, r5, r2
   337ac:	b	337cc <GetDataSlab+0x112b0>
   337b0:	ldr	r5, [r9, r0, lsl #2]
   337b4:	cmp	r5, #0
   337b8:	beq	337d0 <GetDataSlab+0x112b4>
   337bc:	add	r6, sp, #64	; 0x40
   337c0:	ldr	r6, [r6, r0, lsl #2]
   337c4:	mla	r2, r6, r5, r2
   337c8:	mul	r5, r6, r5
   337cc:	add	r4, r4, r5, lsl #1
   337d0:	ldr	r6, [fp, #24]
   337d4:	add	r5, r0, #1
   337d8:	add	r0, r0, #2
   337dc:	cmp	r0, r6
   337e0:	blt	33750 <GetDataSlab+0x11234>
   337e4:	b	337f8 <GetDataSlab+0x112dc>
   337e8:	ldr	r5, [sp, #40]	; 0x28
   337ec:	ldr	r0, [r5, r0, lsl #2]
   337f0:	add	r4, r4, r0, lsl #1
   337f4:	add	r2, r0, r2
   337f8:	ldr	r5, [sp, #52]	; 0x34
   337fc:	str	r1, [sp, #48]	; 0x30
   33800:	ldr	r1, [sp, #56]	; 0x38
   33804:	mov	r0, #0
   33808:	add	r5, sl, r5
   3380c:	cmp	r5, r1
   33810:	str	r5, [sp, #52]	; 0x34
   33814:	blt	336c0 <GetDataSlab+0x111a4>
   33818:	b	242ac <GetDataSlab+0x1d90>
   3381c:	ldr	r0, [sp, #56]	; 0x38
   33820:	cmp	r0, #1
   33824:	ldr	r0, [fp, #20]
   33828:	blt	242a8 <GetDataSlab+0x1d8c>
   3382c:	add	r0, r0, #4
   33830:	ldr	r9, [fp, #12]
   33834:	str	r0, [sp, #40]	; 0x28
   33838:	add	r0, sp, #104	; 0x68
   3383c:	orr	ip, r0, #4
   33840:	sub	r0, fp, #72	; 0x48
   33844:	orr	r0, r0, #4
   33848:	str	r0, [sp, #36]	; 0x24
   3384c:	ldr	r0, [r9], #4
   33850:	str	r0, [sp, #44]	; 0x2c
   33854:	mov	r0, #0
   33858:	str	r0, [sp, #52]	; 0x34
   3385c:	ldr	r6, [sp, #44]	; 0x2c
   33860:	cmp	lr, #1
   33864:	add	r0, r6, sl
   33868:	add	r4, r2, r6, lsl #2
   3386c:	blt	338c0 <GetDataSlab+0x113a4>
   33870:	ldr	r2, [sp, #60]	; 0x3c
   33874:	ldr	r1, [sp, #52]	; 0x34
   33878:	ldr	r7, [fp, #20]
   3387c:	mov	r6, #0
   33880:	add	r5, r2, r1
   33884:	ldr	r1, [fp, #16]
   33888:	ldr	r2, [r4]
   3388c:	strb	r2, [r5, r6]
   33890:	add	r6, r6, #1
   33894:	ldr	r3, [r1]
   33898:	ldr	lr, [r7]
   3389c:	add	r0, r3, r0
   338a0:	add	r4, r4, r3, lsl #2
   338a4:	cmp	r6, lr
   338a8:	blt	33888 <GetDataSlab+0x1136c>
   338ac:	ldr	r7, [fp, #12]
   338b0:	ldr	r6, [r7]
   338b4:	ldr	r7, [fp, #8]
   338b8:	ldr	r1, [r7]
   338bc:	b	338c4 <GetDataSlab+0x113a8>
   338c0:	ldr	r1, [sp, #48]	; 0x30
   338c4:	mls	r5, r3, lr, r1
   338c8:	str	r1, [sp, #48]	; 0x30
   338cc:	str	r6, [sp, #44]	; 0x2c
   338d0:	sub	r5, r5, r6
   338d4:	add	sl, r5, r0
   338d8:	ldr	r0, [fp, #24]
   338dc:	add	r2, r4, r5, lsl #2
   338e0:	cmp	r0, #2
   338e4:	blt	33998 <GetDataSlab+0x1147c>
   338e8:	ldr	r1, [sp, #40]	; 0x28
   338ec:	mov	r5, #0
   338f0:	mov	r0, r5
   338f4:	ldr	r5, [ip, r5, lsl #2]
   338f8:	add	r5, r5, #1
   338fc:	str	r5, [ip, r0, lsl #2]
   33900:	ldr	r6, [r1, r0, lsl #2]
   33904:	sdiv	r8, r5, r6
   33908:	mls	r5, r8, r6, r5
   3390c:	cmp	r5, #0
   33910:	bne	33988 <GetDataSlab+0x1146c>
   33914:	mov	r4, #0
   33918:	str	r4, [ip, r0, lsl #2]
   3391c:	add	r4, sp, #64	; 0x40
   33920:	add	r5, r4, r0, lsl #2
   33924:	ldr	r5, [r5, #4]
   33928:	sdiv	r6, sl, r5
   3392c:	mls	r6, r6, r5, sl
   33930:	cmp	r6, #0
   33934:	beq	33950 <GetDataSlab+0x11434>
   33938:	ldr	r7, [r4, r0, lsl #2]
   3393c:	ldr	r4, [r9, r0, lsl #2]
   33940:	sub	r5, r5, r6
   33944:	mla	r4, r4, r7, r5
   33948:	add	sl, r4, sl
   3394c:	b	3396c <GetDataSlab+0x11450>
   33950:	ldr	r5, [r9, r0, lsl #2]
   33954:	cmp	r5, #0
   33958:	beq	33970 <GetDataSlab+0x11454>
   3395c:	add	r4, sp, #64	; 0x40
   33960:	ldr	r4, [r4, r0, lsl #2]
   33964:	mla	sl, r4, r5, sl
   33968:	mul	r4, r4, r5
   3396c:	add	r2, r2, r4, lsl #2
   33970:	ldr	r4, [fp, #24]
   33974:	add	r5, r0, #1
   33978:	add	r0, r0, #2
   3397c:	cmp	r0, r4
   33980:	blt	338f0 <GetDataSlab+0x113d4>
   33984:	b	33998 <GetDataSlab+0x1147c>
   33988:	ldr	r1, [sp, #36]	; 0x24
   3398c:	ldr	r0, [r1, r0, lsl #2]
   33990:	add	r2, r2, r0, lsl #2
   33994:	add	sl, r0, sl
   33998:	ldr	r4, [sp, #52]	; 0x34
   3399c:	ldr	r1, [sp, #56]	; 0x38
   339a0:	mov	r0, #0
   339a4:	add	r4, lr, r4
   339a8:	cmp	r4, r1
   339ac:	str	r4, [sp, #52]	; 0x34
   339b0:	blt	3385c <GetDataSlab+0x11340>
   339b4:	b	242ac <GetDataSlab+0x1d90>
   339b8:	ldr	r0, [sp, #56]	; 0x38
   339bc:	cmp	r0, #1
   339c0:	ldr	r0, [fp, #20]
   339c4:	blt	242a8 <GetDataSlab+0x1d8c>
   339c8:	add	r0, r0, #4
   339cc:	ldr	r9, [fp, #12]
   339d0:	str	r0, [sp, #40]	; 0x28
   339d4:	add	r0, sp, #104	; 0x68
   339d8:	orr	ip, r0, #4
   339dc:	sub	r0, fp, #72	; 0x48
   339e0:	orr	r0, r0, #4
   339e4:	str	r0, [sp, #36]	; 0x24
   339e8:	ldr	r0, [r9], #4
   339ec:	str	r0, [sp, #44]	; 0x2c
   339f0:	mov	r0, #0
   339f4:	str	r0, [sp, #52]	; 0x34
   339f8:	ldr	r6, [sp, #44]	; 0x2c
   339fc:	cmp	sl, #1
   33a00:	add	r0, r6, lr
   33a04:	add	r4, r2, r6, lsl #2
   33a08:	blt	33a5c <GetDataSlab+0x11540>
   33a0c:	ldr	r2, [sp, #60]	; 0x3c
   33a10:	ldr	r1, [sp, #52]	; 0x34
   33a14:	ldr	r7, [fp, #20]
   33a18:	mov	r6, #0
   33a1c:	add	r5, r2, r1
   33a20:	ldr	r1, [fp, #16]
   33a24:	ldr	r2, [r4]
   33a28:	strb	r2, [r5, r6]
   33a2c:	add	r6, r6, #1
   33a30:	ldr	r3, [r1]
   33a34:	ldr	sl, [r7]
   33a38:	add	r0, r3, r0
   33a3c:	add	r4, r4, r3, lsl #2
   33a40:	cmp	r6, sl
   33a44:	blt	33a24 <GetDataSlab+0x11508>
   33a48:	ldr	r7, [fp, #12]
   33a4c:	ldr	r6, [r7]
   33a50:	ldr	r7, [fp, #8]
   33a54:	ldr	r1, [r7]
   33a58:	b	33a60 <GetDataSlab+0x11544>
   33a5c:	ldr	r1, [sp, #48]	; 0x30
   33a60:	mls	r5, r3, sl, r1
   33a64:	str	r1, [sp, #48]	; 0x30
   33a68:	str	r6, [sp, #44]	; 0x2c
   33a6c:	sub	r5, r5, r6
   33a70:	add	lr, r5, r0
   33a74:	ldr	r0, [fp, #24]
   33a78:	add	r2, r4, r5, lsl #2
   33a7c:	cmp	r0, #2
   33a80:	blt	33b34 <GetDataSlab+0x11618>
   33a84:	ldr	r1, [sp, #40]	; 0x28
   33a88:	mov	r5, #0
   33a8c:	mov	r0, r5
   33a90:	ldr	r5, [ip, r5, lsl #2]
   33a94:	add	r5, r5, #1
   33a98:	str	r5, [ip, r0, lsl #2]
   33a9c:	ldr	r6, [r1, r0, lsl #2]
   33aa0:	sdiv	r8, r5, r6
   33aa4:	mls	r5, r8, r6, r5
   33aa8:	cmp	r5, #0
   33aac:	bne	33b24 <GetDataSlab+0x11608>
   33ab0:	mov	r4, #0
   33ab4:	str	r4, [ip, r0, lsl #2]
   33ab8:	add	r4, sp, #64	; 0x40
   33abc:	add	r5, r4, r0, lsl #2
   33ac0:	ldr	r5, [r5, #4]
   33ac4:	sdiv	r6, lr, r5
   33ac8:	mls	r6, r6, r5, lr
   33acc:	cmp	r6, #0
   33ad0:	beq	33aec <GetDataSlab+0x115d0>
   33ad4:	ldr	r7, [r4, r0, lsl #2]
   33ad8:	ldr	r4, [r9, r0, lsl #2]
   33adc:	sub	r5, r5, r6
   33ae0:	mla	r4, r4, r7, r5
   33ae4:	add	lr, r4, lr
   33ae8:	b	33b08 <GetDataSlab+0x115ec>
   33aec:	ldr	r5, [r9, r0, lsl #2]
   33af0:	cmp	r5, #0
   33af4:	beq	33b0c <GetDataSlab+0x115f0>
   33af8:	add	r4, sp, #64	; 0x40
   33afc:	ldr	r4, [r4, r0, lsl #2]
   33b00:	mla	lr, r4, r5, lr
   33b04:	mul	r4, r4, r5
   33b08:	add	r2, r2, r4, lsl #2
   33b0c:	ldr	r4, [fp, #24]
   33b10:	add	r5, r0, #1
   33b14:	add	r0, r0, #2
   33b18:	cmp	r0, r4
   33b1c:	blt	33a8c <GetDataSlab+0x11570>
   33b20:	b	33b34 <GetDataSlab+0x11618>
   33b24:	ldr	r1, [sp, #36]	; 0x24
   33b28:	ldr	r0, [r1, r0, lsl #2]
   33b2c:	add	r2, r2, r0, lsl #2
   33b30:	add	lr, r0, lr
   33b34:	ldr	r4, [sp, #52]	; 0x34
   33b38:	ldr	r1, [sp, #56]	; 0x38
   33b3c:	mov	r0, #0
   33b40:	add	r4, sl, r4
   33b44:	cmp	r4, r1
   33b48:	str	r4, [sp, #52]	; 0x34
   33b4c:	blt	339f8 <GetDataSlab+0x114dc>
   33b50:	b	242ac <GetDataSlab+0x1d90>
   33b54:	ldr	r0, [sp, #56]	; 0x38
   33b58:	ldr	r9, [fp, #12]
   33b5c:	cmp	r0, #1
   33b60:	ldr	r0, [fp, #20]
   33b64:	blt	242a8 <GetDataSlab+0x1d8c>
   33b68:	add	r7, r0, #4
   33b6c:	mov	r0, lr
   33b70:	add	r1, sp, #104	; 0x68
   33b74:	orr	r0, r0, #4
   33b78:	orr	lr, r1, #4
   33b7c:	str	r0, [sp, #40]	; 0x28
   33b80:	ldr	r0, [r9], #4
   33b84:	str	r0, [sp, #44]	; 0x2c
   33b88:	mov	r0, #0
   33b8c:	str	r0, [sp, #52]	; 0x34
   33b90:	ldr	r5, [sp, #44]	; 0x2c
   33b94:	cmp	ip, #1
   33b98:	add	r0, r5, sl
   33b9c:	add	r4, r2, r5, lsl #2
   33ba0:	blt	33c04 <GetDataSlab+0x116e8>
   33ba4:	ldr	r1, [sp, #60]	; 0x3c
   33ba8:	ldr	r2, [sp, #52]	; 0x34
   33bac:	mov	r8, r7
   33bb0:	ldr	r7, [fp, #16]
   33bb4:	mov	r6, #0
   33bb8:	add	r5, r1, r2
   33bbc:	ldr	r1, [fp, #20]
   33bc0:	vldr	s0, [r4]
   33bc4:	vcvt.s32.f32	s0, s0
   33bc8:	vmov	r2, s0
   33bcc:	strb	r2, [r5, r6]
   33bd0:	add	r6, r6, #1
   33bd4:	ldr	r3, [r7]
   33bd8:	ldr	ip, [r1]
   33bdc:	add	r0, r3, r0
   33be0:	add	r4, r4, r3, lsl #2
   33be4:	cmp	r6, ip
   33be8:	blt	33bc0 <GetDataSlab+0x116a4>
   33bec:	ldr	r1, [fp, #12]
   33bf0:	mov	r7, r8
   33bf4:	ldr	r5, [r1]
   33bf8:	ldr	r1, [fp, #8]
   33bfc:	ldr	r1, [r1]
   33c00:	b	33c08 <GetDataSlab+0x116ec>
   33c04:	ldr	r1, [sp, #48]	; 0x30
   33c08:	mls	r6, r3, ip, r1
   33c0c:	str	r1, [sp, #48]	; 0x30
   33c10:	str	r5, [sp, #44]	; 0x2c
   33c14:	sub	r6, r6, r5
   33c18:	add	sl, r6, r0
   33c1c:	ldr	r0, [fp, #24]
   33c20:	add	r2, r4, r6, lsl #2
   33c24:	cmp	r0, #2
   33c28:	blt	33cd8 <GetDataSlab+0x117bc>
   33c2c:	mov	r5, #0
   33c30:	ldr	r6, [lr, r5, lsl #2]
   33c34:	mov	r0, r5
   33c38:	add	r6, r6, #1
   33c3c:	str	r6, [lr, r5, lsl #2]
   33c40:	ldr	r5, [r7, r5, lsl #2]
   33c44:	sdiv	r1, r6, r5
   33c48:	mls	r1, r1, r5, r6
   33c4c:	cmp	r1, #0
   33c50:	bne	33cc8 <GetDataSlab+0x117ac>
   33c54:	mov	r1, #0
   33c58:	add	r4, sp, #64	; 0x40
   33c5c:	str	r1, [lr, r0, lsl #2]
   33c60:	add	r1, r4, r0, lsl #2
   33c64:	ldr	r5, [r1, #4]
   33c68:	sdiv	r1, sl, r5
   33c6c:	mls	r6, r1, r5, sl
   33c70:	cmp	r6, #0
   33c74:	beq	33c90 <GetDataSlab+0x11774>
   33c78:	ldr	r1, [r4, r0, lsl #2]
   33c7c:	ldr	r8, [r9, r0, lsl #2]
   33c80:	sub	r5, r5, r6
   33c84:	mla	r1, r8, r1, r5
   33c88:	add	sl, r1, sl
   33c8c:	b	33cac <GetDataSlab+0x11790>
   33c90:	ldr	r5, [r9, r0, lsl #2]
   33c94:	cmp	r5, #0
   33c98:	beq	33cb0 <GetDataSlab+0x11794>
   33c9c:	add	r1, sp, #64	; 0x40
   33ca0:	ldr	r1, [r1, r0, lsl #2]
   33ca4:	mla	sl, r1, r5, sl
   33ca8:	mul	r1, r1, r5
   33cac:	add	r2, r2, r1, lsl #2
   33cb0:	ldr	r1, [fp, #24]
   33cb4:	add	r5, r0, #1
   33cb8:	add	r0, r0, #2
   33cbc:	cmp	r0, r1
   33cc0:	blt	33c30 <GetDataSlab+0x11714>
   33cc4:	b	33cd8 <GetDataSlab+0x117bc>
   33cc8:	ldr	r1, [sp, #40]	; 0x28
   33ccc:	ldr	r0, [r1, r0, lsl #2]
   33cd0:	add	r2, r2, r0, lsl #2
   33cd4:	add	sl, r0, sl
   33cd8:	ldr	r4, [sp, #52]	; 0x34
   33cdc:	ldr	r1, [sp, #56]	; 0x38
   33ce0:	mov	r0, #0
   33ce4:	add	r4, ip, r4
   33ce8:	cmp	r4, r1
   33cec:	str	r4, [sp, #52]	; 0x34
   33cf0:	blt	33b90 <GetDataSlab+0x11674>
   33cf4:	b	242ac <GetDataSlab+0x1d90>
   33cf8:	ldr	r0, [sp, #56]	; 0x38
   33cfc:	ldr	r9, [fp, #12]
   33d00:	cmp	r0, #1
   33d04:	ldr	r0, [fp, #20]
   33d08:	blt	242a8 <GetDataSlab+0x1d8c>
   33d0c:	add	r7, r0, #4
   33d10:	mov	r0, lr
   33d14:	add	r1, sp, #104	; 0x68
   33d18:	orr	r0, r0, #4
   33d1c:	orr	lr, r1, #4
   33d20:	str	r0, [sp, #40]	; 0x28
   33d24:	ldr	r0, [r9], #4
   33d28:	str	r0, [sp, #44]	; 0x2c
   33d2c:	mov	r0, #0
   33d30:	str	r0, [sp, #52]	; 0x34
   33d34:	ldr	r5, [sp, #44]	; 0x2c
   33d38:	cmp	ip, #1
   33d3c:	add	r0, r5, sl
   33d40:	add	r4, r2, r5, lsl #3
   33d44:	blt	33da8 <GetDataSlab+0x1188c>
   33d48:	ldr	r1, [sp, #60]	; 0x3c
   33d4c:	ldr	r2, [sp, #52]	; 0x34
   33d50:	mov	r8, r7
   33d54:	ldr	r7, [fp, #16]
   33d58:	mov	r6, #0
   33d5c:	add	r5, r1, r2
   33d60:	ldr	r1, [fp, #20]
   33d64:	vldr	d16, [r4]
   33d68:	vcvt.s32.f64	s0, d16
   33d6c:	vmov	r2, s0
   33d70:	strb	r2, [r5, r6]
   33d74:	add	r6, r6, #1
   33d78:	ldr	r3, [r7]
   33d7c:	ldr	ip, [r1]
   33d80:	add	r0, r3, r0
   33d84:	add	r4, r4, r3, lsl #3
   33d88:	cmp	r6, ip
   33d8c:	blt	33d64 <GetDataSlab+0x11848>
   33d90:	ldr	r1, [fp, #12]
   33d94:	mov	r7, r8
   33d98:	ldr	r5, [r1]
   33d9c:	ldr	r1, [fp, #8]
   33da0:	ldr	r1, [r1]
   33da4:	b	33dac <GetDataSlab+0x11890>
   33da8:	ldr	r1, [sp, #48]	; 0x30
   33dac:	mls	r6, r3, ip, r1
   33db0:	str	r1, [sp, #48]	; 0x30
   33db4:	str	r5, [sp, #44]	; 0x2c
   33db8:	sub	r6, r6, r5
   33dbc:	add	sl, r6, r0
   33dc0:	ldr	r0, [fp, #24]
   33dc4:	add	r2, r4, r6, lsl #3
   33dc8:	cmp	r0, #2
   33dcc:	blt	33e7c <GetDataSlab+0x11960>
   33dd0:	mov	r5, #0
   33dd4:	ldr	r6, [lr, r5, lsl #2]
   33dd8:	mov	r0, r5
   33ddc:	add	r6, r6, #1
   33de0:	str	r6, [lr, r5, lsl #2]
   33de4:	ldr	r5, [r7, r5, lsl #2]
   33de8:	sdiv	r1, r6, r5
   33dec:	mls	r1, r1, r5, r6
   33df0:	cmp	r1, #0
   33df4:	bne	33e6c <GetDataSlab+0x11950>
   33df8:	mov	r1, #0
   33dfc:	add	r4, sp, #64	; 0x40
   33e00:	str	r1, [lr, r0, lsl #2]
   33e04:	add	r1, r4, r0, lsl #2
   33e08:	ldr	r5, [r1, #4]
   33e0c:	sdiv	r1, sl, r5
   33e10:	mls	r6, r1, r5, sl
   33e14:	cmp	r6, #0
   33e18:	beq	33e34 <GetDataSlab+0x11918>
   33e1c:	ldr	r1, [r4, r0, lsl #2]
   33e20:	ldr	r8, [r9, r0, lsl #2]
   33e24:	sub	r5, r5, r6
   33e28:	mla	r1, r8, r1, r5
   33e2c:	add	sl, r1, sl
   33e30:	b	33e50 <GetDataSlab+0x11934>
   33e34:	ldr	r5, [r9, r0, lsl #2]
   33e38:	cmp	r5, #0
   33e3c:	beq	33e54 <GetDataSlab+0x11938>
   33e40:	add	r1, sp, #64	; 0x40
   33e44:	ldr	r1, [r1, r0, lsl #2]
   33e48:	mla	sl, r1, r5, sl
   33e4c:	mul	r1, r1, r5
   33e50:	add	r2, r2, r1, lsl #3
   33e54:	ldr	r1, [fp, #24]
   33e58:	add	r5, r0, #1
   33e5c:	add	r0, r0, #2
   33e60:	cmp	r0, r1
   33e64:	blt	33dd4 <GetDataSlab+0x118b8>
   33e68:	b	33e7c <GetDataSlab+0x11960>
   33e6c:	ldr	r1, [sp, #40]	; 0x28
   33e70:	ldr	r0, [r1, r0, lsl #2]
   33e74:	add	r2, r2, r0, lsl #3
   33e78:	add	sl, r0, sl
   33e7c:	ldr	r4, [sp, #52]	; 0x34
   33e80:	ldr	r1, [sp, #56]	; 0x38
   33e84:	mov	r0, #0
   33e88:	add	r4, ip, r4
   33e8c:	cmp	r4, r1
   33e90:	str	r4, [sp, #52]	; 0x34
   33e94:	blt	33d34 <GetDataSlab+0x11818>
   33e98:	b	242ac <GetDataSlab+0x1d90>
   33e9c:	ldr	r0, [sp, #56]	; 0x38
   33ea0:	ldr	lr, [sp, #60]	; 0x3c
   33ea4:	ldr	r9, [fp, #12]
   33ea8:	cmp	r0, #1
   33eac:	blt	34020 <GetDataSlab+0x11b04>
   33eb0:	ldr	r0, [fp, #20]
   33eb4:	ldr	r2, [r9], #4
   33eb8:	mov	r6, #0
   33ebc:	add	sl, r0, #4
   33ec0:	add	r0, sp, #104	; 0x68
   33ec4:	orr	ip, r0, #4
   33ec8:	sub	r0, fp, #72	; 0x48
   33ecc:	orr	r0, r0, #4
   33ed0:	str	r0, [sp, #36]	; 0x24
   33ed4:	add	r3, r2, r8
   33ed8:	add	r4, r4, r2, lsl #3
   33edc:	cmp	r1, #1
   33ee0:	str	r6, [sp, #40]	; 0x28
   33ee4:	blt	33f30 <GetDataSlab+0x11a14>
   33ee8:	ldr	r0, [fp, #20]
   33eec:	ldr	r2, [fp, #16]
   33ef0:	add	r6, lr, r6
   33ef4:	mov	r7, #0
   33ef8:	ldrb	r1, [r4]
   33efc:	strb	r1, [r6, r7]
   33f00:	add	r7, r7, #1
   33f04:	ldr	r5, [r2]
   33f08:	ldr	r1, [r0]
   33f0c:	add	r3, r5, r3
   33f10:	add	r4, r4, r5, lsl #3
   33f14:	cmp	r7, r1
   33f18:	blt	33ef8 <GetDataSlab+0x119dc>
   33f1c:	ldr	r0, [fp, #12]
   33f20:	ldr	r7, [r0]
   33f24:	ldr	r0, [fp, #8]
   33f28:	ldr	r0, [r0]
   33f2c:	b	33f38 <GetDataSlab+0x11a1c>
   33f30:	ldr	r0, [sp, #44]	; 0x2c
   33f34:	mov	r7, r2
   33f38:	mls	r6, r5, r1, r0
   33f3c:	str	r0, [sp, #44]	; 0x2c
   33f40:	ldr	r0, [fp, #24]
   33f44:	mov	r2, r7
   33f48:	sub	r6, r6, r7
   33f4c:	add	r4, r4, r6, lsl #3
   33f50:	add	r8, r6, r3
   33f54:	cmp	r0, #2
   33f58:	blt	3400c <GetDataSlab+0x11af0>
   33f5c:	mov	r3, #0
   33f60:	mov	r6, r3
   33f64:	ldr	r3, [ip, r3, lsl #2]
   33f68:	add	r3, r3, #1
   33f6c:	str	r3, [ip, r6, lsl #2]
   33f70:	ldr	r7, [sl, r6, lsl #2]
   33f74:	sdiv	r0, r3, r7
   33f78:	mls	r0, r0, r7, r3
   33f7c:	cmp	r0, #0
   33f80:	bne	33ffc <GetDataSlab+0x11ae0>
   33f84:	mov	r0, #0
   33f88:	add	r7, sp, #64	; 0x40
   33f8c:	str	r0, [ip, r6, lsl #2]
   33f90:	add	r0, r7, r6, lsl #2
   33f94:	ldr	r3, [r0, #4]
   33f98:	sdiv	r0, r8, r3
   33f9c:	mls	lr, r0, r3, r8
   33fa0:	cmp	lr, #0
   33fa4:	beq	33fc0 <GetDataSlab+0x11aa4>
   33fa8:	ldr	r0, [r7, r6, lsl #2]
   33fac:	ldr	r7, [r9, r6, lsl #2]
   33fb0:	sub	r3, r3, lr
   33fb4:	mla	r0, r7, r0, r3
   33fb8:	add	r8, r0, r8
   33fbc:	b	33fdc <GetDataSlab+0x11ac0>
   33fc0:	ldr	r3, [r9, r6, lsl #2]
   33fc4:	cmp	r3, #0
   33fc8:	beq	33fe0 <GetDataSlab+0x11ac4>
   33fcc:	add	r0, sp, #64	; 0x40
   33fd0:	ldr	r0, [r0, r6, lsl #2]
   33fd4:	mla	r8, r0, r3, r8
   33fd8:	mul	r0, r0, r3
   33fdc:	add	r4, r4, r0, lsl #3
   33fe0:	add	r3, r6, #1
   33fe4:	add	r0, r6, #2
   33fe8:	ldr	r6, [fp, #24]
   33fec:	ldr	lr, [sp, #60]	; 0x3c
   33ff0:	cmp	r0, r6
   33ff4:	blt	33f60 <GetDataSlab+0x11a44>
   33ff8:	b	3400c <GetDataSlab+0x11af0>
   33ffc:	ldr	r0, [sp, #36]	; 0x24
   34000:	ldr	r0, [r0, r6, lsl #2]
   34004:	add	r4, r4, r0, lsl #3
   34008:	add	r8, r0, r8
   3400c:	ldr	r6, [sp, #40]	; 0x28
   34010:	ldr	r0, [sp, #56]	; 0x38
   34014:	add	r6, r1, r6
   34018:	cmp	r6, r0
   3401c:	blt	33ed4 <GetDataSlab+0x119b8>
   34020:	ldr	r3, [sp, #48]	; 0x30
   34024:	mov	r0, #0
   34028:	cmp	r3, #13
   3402c:	bne	242ac <GetDataSlab+0x1d90>
   34030:	ldr	r0, [fp, #16]
   34034:	ldr	lr, [fp, #8]
   34038:	add	r5, sp, #64	; 0x40
   3403c:	sub	r9, fp, #72	; 0x48
   34040:	ldr	r3, [r0]
   34044:	sub	r0, r3, #1
   34048:	str	r0, [fp, #-72]	; 0xffffffb8
   3404c:	ldr	r0, [lr]
   34050:	mov	lr, #0
   34054:	str	r0, [sp, #48]	; 0x30
   34058:	str	r0, [sp, #64]	; 0x40
   3405c:	ldr	r0, [fp, #20]
   34060:	ldr	sl, [r0]
   34064:	ldr	r0, [fp, #24]
   34068:	cmp	r0, #2
   3406c:	mov	r0, sl
   34070:	str	sl, [sp, #56]	; 0x38
   34074:	blt	3411c <GetDataSlab+0x11c00>
   34078:	ldr	r7, [sp, #48]	; 0x30
   3407c:	ldr	r1, [fp, #8]
   34080:	mov	r0, #1
   34084:	mov	lr, #0
   34088:	mov	r2, sl
   3408c:	str	sl, [sp, #56]	; 0x38
   34090:	mov	r8, r7
   34094:	ldr	r6, [fp, #16]
   34098:	ldr	r2, [fp, #8]
   3409c:	ldr	r6, [r6, r0, lsl #2]
   340a0:	str	r7, [r5, r0, lsl #2]
   340a4:	sub	r4, r6, #1
   340a8:	mov	r6, #0
   340ac:	str	r4, [r9, r0, lsl #2]
   340b0:	ldr	ip, [r2, r0, lsl #2]
   340b4:	mov	r5, ip
   340b8:	mul	r7, r5, r7
   340bc:	ldr	r5, [r1, -r6, lsl #2]
   340c0:	add	r6, r6, #1
   340c4:	cmp	r0, r6
   340c8:	mul	r4, r4, r5
   340cc:	bne	340b8 <GetDataSlab+0x11b9c>
   340d0:	ldr	r6, [fp, #12]
   340d4:	add	r5, sp, #64	; 0x40
   340d8:	sub	r9, fp, #72	; 0x48
   340dc:	ldr	r2, [sp, #56]	; 0x38
   340e0:	add	r1, r1, #4
   340e4:	str	r7, [r5, r0, lsl #2]
   340e8:	str	r4, [r9, r0, lsl #2]
   340ec:	ldr	r4, [r6, r0, lsl #2]
   340f0:	ldr	r6, [fp, #20]
   340f4:	mla	lr, r4, r8, lr
   340f8:	ldr	r4, [r6, r0, lsl #2]
   340fc:	ldr	r6, [fp, #24]
   34100:	add	r0, r0, #1
   34104:	mov	r8, r7
   34108:	mov	r7, ip
   3410c:	mul	r2, r4, r2
   34110:	cmp	r0, r6
   34114:	str	r2, [sp, #56]	; 0x38
   34118:	bne	34094 <GetDataSlab+0x11b78>
   3411c:	ldr	r0, [sp, #52]	; 0x34
   34120:	mov	r2, lr
   34124:	cmp	r3, #1
   34128:	add	r4, r0, lr, lsl #3
   3412c:	bne	3b070 <GetDataSlab+0x18b54>
   34130:	ldr	r0, [sp, #56]	; 0x38
   34134:	ldr	lr, [fp, #12]
   34138:	cmp	r0, #1
   3413c:	ldr	r0, [fp, #20]
   34140:	blt	242a8 <GetDataSlab+0x1d8c>
   34144:	add	r8, r0, #4
   34148:	add	r0, sp, #104	; 0x68
   3414c:	mov	r9, #0
   34150:	orr	r3, r0, #4
   34154:	sub	r0, fp, #72	; 0x48
   34158:	orr	r0, r0, #4
   3415c:	str	r0, [sp, #44]	; 0x2c
   34160:	ldr	r0, [lr], #4
   34164:	str	r0, [sp, #52]	; 0x34
   34168:	ldr	r1, [sp, #52]	; 0x34
   3416c:	ldr	r0, [sp, #48]	; 0x30
   34170:	cmp	sl, #1
   34174:	add	r2, r1, r2
   34178:	add	ip, r4, r1, lsl #3
   3417c:	blt	341bc <GetDataSlab+0x11ca0>
   34180:	ldr	r0, [sp, #60]	; 0x3c
   34184:	ldr	r6, [fp, #20]
   34188:	mov	r4, ip
   3418c:	add	r5, r0, r9
   34190:	mov	r0, #0
   34194:	ldrb	r1, [r4], #8
   34198:	strb	r1, [r5, r0]
   3419c:	add	r0, r0, #1
   341a0:	ldr	sl, [r6]
   341a4:	cmp	r0, sl
   341a8:	blt	34194 <GetDataSlab+0x11c78>
   341ac:	ldr	r0, [fp, #12]
   341b0:	ldr	r1, [r0]
   341b4:	ldr	r0, [fp, #8]
   341b8:	ldr	r0, [r0]
   341bc:	str	r0, [sp, #48]	; 0x30
   341c0:	sub	r0, r0, r1
   341c4:	str	r1, [sp, #52]	; 0x34
   341c8:	add	r4, ip, r0, lsl #3
   341cc:	add	r2, r2, r0
   341d0:	ldr	r0, [fp, #24]
   341d4:	cmp	r0, #2
   341d8:	blt	34284 <GetDataSlab+0x11d68>
   341dc:	mov	r5, #0
   341e0:	add	ip, sp, #64	; 0x40
   341e4:	ldr	r1, [r3, r5, lsl #2]
   341e8:	mov	r0, r5
   341ec:	add	r1, r1, #1
   341f0:	str	r1, [r3, r5, lsl #2]
   341f4:	ldr	r5, [r8, r5, lsl #2]
   341f8:	sdiv	r6, r1, r5
   341fc:	mls	r1, r6, r5, r1
   34200:	cmp	r1, #0
   34204:	bne	34274 <GetDataSlab+0x11d58>
   34208:	mov	r1, #0
   3420c:	str	r1, [r3, r0, lsl #2]
   34210:	add	r1, ip, r0, lsl #2
   34214:	ldr	r5, [r1, #4]
   34218:	sdiv	r1, r2, r5
   3421c:	mls	r1, r1, r5, r2
   34220:	cmp	r1, #0
   34224:	beq	34240 <GetDataSlab+0x11d24>
   34228:	ldr	r6, [ip, r0, lsl #2]
   3422c:	ldr	r7, [lr, r0, lsl #2]
   34230:	sub	r1, r5, r1
   34234:	mla	r1, r7, r6, r1
   34238:	add	r2, r1, r2
   3423c:	b	34258 <GetDataSlab+0x11d3c>
   34240:	ldr	r1, [lr, r0, lsl #2]
   34244:	cmp	r1, #0
   34248:	beq	3425c <GetDataSlab+0x11d40>
   3424c:	ldr	r7, [ip, r0, lsl #2]
   34250:	mla	r2, r7, r1, r2
   34254:	mul	r1, r7, r1
   34258:	add	r4, r4, r1, lsl #3
   3425c:	ldr	r1, [fp, #24]
   34260:	add	r5, r0, #1
   34264:	add	r0, r0, #2
   34268:	cmp	r0, r1
   3426c:	blt	341e4 <GetDataSlab+0x11cc8>
   34270:	b	34284 <GetDataSlab+0x11d68>
   34274:	ldr	r1, [sp, #44]	; 0x2c
   34278:	ldr	r0, [r1, r0, lsl #2]
   3427c:	add	r4, r4, r0, lsl #3
   34280:	add	r2, r0, r2
   34284:	ldr	r1, [sp, #56]	; 0x38
   34288:	add	r9, sl, r9
   3428c:	mov	r0, #0
   34290:	cmp	r9, r1
   34294:	blt	34168 <GetDataSlab+0x11c4c>
   34298:	b	242ac <GetDataSlab+0x1d90>
   3429c:	ldr	r0, [sp, #56]	; 0x38
   342a0:	cmp	r0, #1
   342a4:	ldr	r0, [fp, #20]
   342a8:	blt	242a8 <GetDataSlab+0x1d8c>
   342ac:	add	r0, r0, #4
   342b0:	ldr	r9, [fp, #12]
   342b4:	str	r0, [sp, #40]	; 0x28
   342b8:	add	r0, sp, #104	; 0x68
   342bc:	orr	ip, r0, #4
   342c0:	sub	r0, fp, #72	; 0x48
   342c4:	orr	r0, r0, #4
   342c8:	str	r0, [sp, #36]	; 0x24
   342cc:	ldr	r0, [r9], #4
   342d0:	str	r0, [sp, #44]	; 0x2c
   342d4:	mov	r0, #0
   342d8:	str	r0, [sp, #52]	; 0x34
   342dc:	ldr	r6, [sp, #44]	; 0x2c
   342e0:	cmp	sl, #1
   342e4:	add	r0, r6, lr
   342e8:	add	r4, r2, r6
   342ec:	blt	34340 <GetDataSlab+0x11e24>
   342f0:	ldr	r2, [sp, #60]	; 0x3c
   342f4:	ldr	r1, [sp, #52]	; 0x34
   342f8:	ldr	r7, [fp, #20]
   342fc:	mov	r6, #0
   34300:	add	r5, r2, r1
   34304:	ldr	r1, [fp, #16]
   34308:	ldrb	r2, [r4]
   3430c:	strb	r2, [r5, r6]
   34310:	add	r6, r6, #1
   34314:	ldr	r3, [r1]
   34318:	ldr	sl, [r7]
   3431c:	add	r0, r3, r0
   34320:	add	r4, r4, r3
   34324:	cmp	r6, sl
   34328:	blt	34308 <GetDataSlab+0x11dec>
   3432c:	ldr	r7, [fp, #12]
   34330:	ldr	r6, [r7]
   34334:	ldr	r7, [fp, #8]
   34338:	ldr	r1, [r7]
   3433c:	b	34344 <GetDataSlab+0x11e28>
   34340:	ldr	r1, [sp, #48]	; 0x30
   34344:	mls	r5, r3, sl, r1
   34348:	str	r1, [sp, #48]	; 0x30
   3434c:	str	r6, [sp, #44]	; 0x2c
   34350:	sub	r5, r5, r6
   34354:	add	lr, r5, r0
   34358:	ldr	r0, [fp, #24]
   3435c:	add	r2, r4, r5
   34360:	cmp	r0, #2
   34364:	blt	34414 <GetDataSlab+0x11ef8>
   34368:	ldr	r1, [sp, #40]	; 0x28
   3436c:	mov	r5, #0
   34370:	mov	r0, r5
   34374:	ldr	r5, [ip, r5, lsl #2]
   34378:	add	r5, r5, #1
   3437c:	str	r5, [ip, r0, lsl #2]
   34380:	ldr	r6, [r1, r0, lsl #2]
   34384:	sdiv	r8, r5, r6
   34388:	mls	r5, r8, r6, r5
   3438c:	cmp	r5, #0
   34390:	bne	34404 <GetDataSlab+0x11ee8>
   34394:	mov	r4, #0
   34398:	str	r4, [ip, r0, lsl #2]
   3439c:	add	r4, sp, #64	; 0x40
   343a0:	add	r5, r4, r0, lsl #2
   343a4:	ldr	r5, [r5, #4]
   343a8:	sdiv	r6, lr, r5
   343ac:	mls	r6, r6, r5, lr
   343b0:	cmp	r6, #0
   343b4:	beq	343d4 <GetDataSlab+0x11eb8>
   343b8:	ldr	r7, [r4, r0, lsl #2]
   343bc:	ldr	r4, [r9, r0, lsl #2]
   343c0:	sub	r5, r5, r6
   343c4:	mla	r4, r4, r7, r5
   343c8:	add	lr, r4, lr
   343cc:	add	r2, r2, r4
   343d0:	b	343ec <GetDataSlab+0x11ed0>
   343d4:	ldr	r5, [r9, r0, lsl #2]
   343d8:	cmp	r5, #0
   343dc:	addne	r4, sp, #64	; 0x40
   343e0:	ldrne	r4, [r4, r0, lsl #2]
   343e4:	mlane	lr, r4, r5, lr
   343e8:	mlane	r2, r4, r5, r2
   343ec:	ldr	r4, [fp, #24]
   343f0:	add	r5, r0, #1
   343f4:	add	r0, r0, #2
   343f8:	cmp	r0, r4
   343fc:	blt	34370 <GetDataSlab+0x11e54>
   34400:	b	34414 <GetDataSlab+0x11ef8>
   34404:	ldr	r1, [sp, #36]	; 0x24
   34408:	ldr	r0, [r1, r0, lsl #2]
   3440c:	add	r2, r2, r0
   34410:	add	lr, r0, lr
   34414:	ldr	r4, [sp, #52]	; 0x34
   34418:	ldr	r1, [sp, #56]	; 0x38
   3441c:	mov	r0, #0
   34420:	add	r4, sl, r4
   34424:	cmp	r4, r1
   34428:	str	r4, [sp, #52]	; 0x34
   3442c:	blt	342dc <GetDataSlab+0x11dc0>
   34430:	b	242ac <GetDataSlab+0x1d90>
   34434:	ldr	r0, [sp, #56]	; 0x38
   34438:	ldr	r9, [fp, #12]
   3443c:	cmp	r0, #1
   34440:	ldr	r0, [fp, #20]
   34444:	blt	242a8 <GetDataSlab+0x1d8c>
   34448:	mov	r1, lr
   3444c:	add	lr, r0, #4
   34450:	add	r0, sp, #104	; 0x68
   34454:	orr	ip, r0, #4
   34458:	orr	r0, r1, #4
   3445c:	str	r0, [sp, #40]	; 0x28
   34460:	ldr	r0, [r9], #4
   34464:	str	r0, [sp, #44]	; 0x2c
   34468:	mov	r0, #0
   3446c:	str	r0, [sp, #52]	; 0x34
   34470:	ldr	r1, [sp, #44]	; 0x2c
   34474:	cmp	sl, #1
   34478:	add	r0, r1, r2
   3447c:	add	r4, r4, r1, lsl #1
   34480:	blt	344d4 <GetDataSlab+0x11fb8>
   34484:	ldr	r2, [sp, #60]	; 0x3c
   34488:	ldr	r1, [sp, #52]	; 0x34
   3448c:	ldr	r7, [fp, #20]
   34490:	mov	r6, #0
   34494:	add	r5, r2, r1
   34498:	ldr	r1, [fp, #16]
   3449c:	ldrb	r2, [r4]
   344a0:	strb	r2, [r5, r6]
   344a4:	add	r6, r6, #1
   344a8:	ldr	r3, [r1]
   344ac:	ldr	sl, [r7]
   344b0:	add	r0, r3, r0
   344b4:	add	r4, r4, r3, lsl #1
   344b8:	cmp	r6, sl
   344bc:	blt	3449c <GetDataSlab+0x11f80>
   344c0:	ldr	r5, [fp, #12]
   344c4:	ldr	r2, [r5]
   344c8:	ldr	r5, [fp, #8]
   344cc:	ldr	r1, [r5]
   344d0:	b	344dc <GetDataSlab+0x11fc0>
   344d4:	mov	r2, r1
   344d8:	ldr	r1, [sp, #48]	; 0x30
   344dc:	mls	r6, r3, sl, r1
   344e0:	str	r2, [sp, #44]	; 0x2c
   344e4:	sub	r6, r6, r2
   344e8:	add	r2, r6, r0
   344ec:	ldr	r0, [fp, #24]
   344f0:	add	r4, r4, r6, lsl #1
   344f4:	cmp	r0, #2
   344f8:	blt	345a8 <GetDataSlab+0x1208c>
   344fc:	mov	r5, #0
   34500:	ldr	r6, [ip, r5, lsl #2]
   34504:	mov	r0, r5
   34508:	add	r6, r6, #1
   3450c:	str	r6, [ip, r5, lsl #2]
   34510:	ldr	r5, [lr, r5, lsl #2]
   34514:	sdiv	r7, r6, r5
   34518:	mls	r5, r7, r5, r6
   3451c:	cmp	r5, #0
   34520:	bne	34598 <GetDataSlab+0x1207c>
   34524:	mov	r5, #0
   34528:	add	r7, sp, #64	; 0x40
   3452c:	str	r5, [ip, r0, lsl #2]
   34530:	add	r5, r7, r0, lsl #2
   34534:	ldr	r5, [r5, #4]
   34538:	sdiv	r6, r2, r5
   3453c:	mls	r6, r6, r5, r2
   34540:	cmp	r6, #0
   34544:	beq	34560 <GetDataSlab+0x12044>
   34548:	ldr	r7, [r7, r0, lsl #2]
   3454c:	ldr	r8, [r9, r0, lsl #2]
   34550:	sub	r5, r5, r6
   34554:	mla	r5, r8, r7, r5
   34558:	add	r2, r5, r2
   3455c:	b	3457c <GetDataSlab+0x12060>
   34560:	ldr	r5, [r9, r0, lsl #2]
   34564:	cmp	r5, #0
   34568:	beq	34580 <GetDataSlab+0x12064>
   3456c:	add	r6, sp, #64	; 0x40
   34570:	ldr	r6, [r6, r0, lsl #2]
   34574:	mla	r2, r6, r5, r2
   34578:	mul	r5, r6, r5
   3457c:	add	r4, r4, r5, lsl #1
   34580:	ldr	r6, [fp, #24]
   34584:	add	r5, r0, #1
   34588:	add	r0, r0, #2
   3458c:	cmp	r0, r6
   34590:	blt	34500 <GetDataSlab+0x11fe4>
   34594:	b	345a8 <GetDataSlab+0x1208c>
   34598:	ldr	r5, [sp, #40]	; 0x28
   3459c:	ldr	r0, [r5, r0, lsl #2]
   345a0:	add	r4, r4, r0, lsl #1
   345a4:	add	r2, r0, r2
   345a8:	ldr	r5, [sp, #52]	; 0x34
   345ac:	str	r1, [sp, #48]	; 0x30
   345b0:	ldr	r1, [sp, #56]	; 0x38
   345b4:	mov	r0, #0
   345b8:	add	r5, sl, r5
   345bc:	cmp	r5, r1
   345c0:	str	r5, [sp, #52]	; 0x34
   345c4:	blt	34470 <GetDataSlab+0x11f54>
   345c8:	b	242ac <GetDataSlab+0x1d90>
   345cc:	ldr	r0, [sp, #56]	; 0x38
   345d0:	ldr	r9, [fp, #12]
   345d4:	cmp	r0, #1
   345d8:	ldr	r0, [fp, #20]
   345dc:	blt	242a8 <GetDataSlab+0x1d8c>
   345e0:	mov	r1, lr
   345e4:	add	lr, r0, #4
   345e8:	add	r0, sp, #104	; 0x68
   345ec:	orr	ip, r0, #4
   345f0:	orr	r0, r1, #4
   345f4:	str	r0, [sp, #40]	; 0x28
   345f8:	ldr	r0, [r9], #4
   345fc:	str	r0, [sp, #44]	; 0x2c
   34600:	mov	r0, #0
   34604:	str	r0, [sp, #52]	; 0x34
   34608:	ldr	r1, [sp, #44]	; 0x2c
   3460c:	cmp	sl, #1
   34610:	add	r0, r1, r2
   34614:	add	r4, r4, r1, lsl #1
   34618:	blt	3466c <GetDataSlab+0x12150>
   3461c:	ldr	r2, [sp, #60]	; 0x3c
   34620:	ldr	r1, [sp, #52]	; 0x34
   34624:	ldr	r7, [fp, #20]
   34628:	mov	r6, #0
   3462c:	add	r5, r2, r1
   34630:	ldr	r1, [fp, #16]
   34634:	ldrb	r2, [r4]
   34638:	strb	r2, [r5, r6]
   3463c:	add	r6, r6, #1
   34640:	ldr	r3, [r1]
   34644:	ldr	sl, [r7]
   34648:	add	r0, r3, r0
   3464c:	add	r4, r4, r3, lsl #1
   34650:	cmp	r6, sl
   34654:	blt	34634 <GetDataSlab+0x12118>
   34658:	ldr	r5, [fp, #12]
   3465c:	ldr	r2, [r5]
   34660:	ldr	r5, [fp, #8]
   34664:	ldr	r1, [r5]
   34668:	b	34674 <GetDataSlab+0x12158>
   3466c:	mov	r2, r1
   34670:	ldr	r1, [sp, #48]	; 0x30
   34674:	mls	r6, r3, sl, r1
   34678:	str	r2, [sp, #44]	; 0x2c
   3467c:	sub	r6, r6, r2
   34680:	add	r2, r6, r0
   34684:	ldr	r0, [fp, #24]
   34688:	add	r4, r4, r6, lsl #1
   3468c:	cmp	r0, #2
   34690:	blt	34740 <GetDataSlab+0x12224>
   34694:	mov	r5, #0
   34698:	ldr	r6, [ip, r5, lsl #2]
   3469c:	mov	r0, r5
   346a0:	add	r6, r6, #1
   346a4:	str	r6, [ip, r5, lsl #2]
   346a8:	ldr	r5, [lr, r5, lsl #2]
   346ac:	sdiv	r7, r6, r5
   346b0:	mls	r5, r7, r5, r6
   346b4:	cmp	r5, #0
   346b8:	bne	34730 <GetDataSlab+0x12214>
   346bc:	mov	r5, #0
   346c0:	add	r7, sp, #64	; 0x40
   346c4:	str	r5, [ip, r0, lsl #2]
   346c8:	add	r5, r7, r0, lsl #2
   346cc:	ldr	r5, [r5, #4]
   346d0:	sdiv	r6, r2, r5
   346d4:	mls	r6, r6, r5, r2
   346d8:	cmp	r6, #0
   346dc:	beq	346f8 <GetDataSlab+0x121dc>
   346e0:	ldr	r7, [r7, r0, lsl #2]
   346e4:	ldr	r8, [r9, r0, lsl #2]
   346e8:	sub	r5, r5, r6
   346ec:	mla	r5, r8, r7, r5
   346f0:	add	r2, r5, r2
   346f4:	b	34714 <GetDataSlab+0x121f8>
   346f8:	ldr	r5, [r9, r0, lsl #2]
   346fc:	cmp	r5, #0
   34700:	beq	34718 <GetDataSlab+0x121fc>
   34704:	add	r6, sp, #64	; 0x40
   34708:	ldr	r6, [r6, r0, lsl #2]
   3470c:	mla	r2, r6, r5, r2
   34710:	mul	r5, r6, r5
   34714:	add	r4, r4, r5, lsl #1
   34718:	ldr	r6, [fp, #24]
   3471c:	add	r5, r0, #1
   34720:	add	r0, r0, #2
   34724:	cmp	r0, r6
   34728:	blt	34698 <GetDataSlab+0x1217c>
   3472c:	b	34740 <GetDataSlab+0x12224>
   34730:	ldr	r5, [sp, #40]	; 0x28
   34734:	ldr	r0, [r5, r0, lsl #2]
   34738:	add	r4, r4, r0, lsl #1
   3473c:	add	r2, r0, r2
   34740:	ldr	r5, [sp, #52]	; 0x34
   34744:	str	r1, [sp, #48]	; 0x30
   34748:	ldr	r1, [sp, #56]	; 0x38
   3474c:	mov	r0, #0
   34750:	add	r5, sl, r5
   34754:	cmp	r5, r1
   34758:	str	r5, [sp, #52]	; 0x34
   3475c:	blt	34608 <GetDataSlab+0x120ec>
   34760:	b	242ac <GetDataSlab+0x1d90>
   34764:	ldr	r0, [sp, #56]	; 0x38
   34768:	cmp	r0, #1
   3476c:	ldr	r0, [fp, #20]
   34770:	blt	242a8 <GetDataSlab+0x1d8c>
   34774:	add	r0, r0, #4
   34778:	ldr	r9, [fp, #12]
   3477c:	str	r0, [sp, #40]	; 0x28
   34780:	add	r0, sp, #104	; 0x68
   34784:	orr	ip, r0, #4
   34788:	sub	r0, fp, #72	; 0x48
   3478c:	orr	r0, r0, #4
   34790:	str	r0, [sp, #36]	; 0x24
   34794:	ldr	r0, [r9], #4
   34798:	str	r0, [sp, #44]	; 0x2c
   3479c:	mov	r0, #0
   347a0:	str	r0, [sp, #52]	; 0x34
   347a4:	ldr	r6, [sp, #44]	; 0x2c
   347a8:	cmp	lr, #1
   347ac:	add	r0, r6, sl
   347b0:	add	r4, r2, r6, lsl #2
   347b4:	blt	34808 <GetDataSlab+0x122ec>
   347b8:	ldr	r2, [sp, #60]	; 0x3c
   347bc:	ldr	r1, [sp, #52]	; 0x34
   347c0:	ldr	r7, [fp, #20]
   347c4:	mov	r6, #0
   347c8:	add	r5, r2, r1
   347cc:	ldr	r1, [fp, #16]
   347d0:	ldr	r2, [r4]
   347d4:	strb	r2, [r5, r6]
   347d8:	add	r6, r6, #1
   347dc:	ldr	r3, [r1]
   347e0:	ldr	lr, [r7]
   347e4:	add	r0, r3, r0
   347e8:	add	r4, r4, r3, lsl #2
   347ec:	cmp	r6, lr
   347f0:	blt	347d0 <GetDataSlab+0x122b4>
   347f4:	ldr	r7, [fp, #12]
   347f8:	ldr	r6, [r7]
   347fc:	ldr	r7, [fp, #8]
   34800:	ldr	r1, [r7]
   34804:	b	3480c <GetDataSlab+0x122f0>
   34808:	ldr	r1, [sp, #48]	; 0x30
   3480c:	mls	r5, r3, lr, r1
   34810:	str	r1, [sp, #48]	; 0x30
   34814:	str	r6, [sp, #44]	; 0x2c
   34818:	sub	r5, r5, r6
   3481c:	add	sl, r5, r0
   34820:	ldr	r0, [fp, #24]
   34824:	add	r2, r4, r5, lsl #2
   34828:	cmp	r0, #2
   3482c:	blt	348e0 <GetDataSlab+0x123c4>
   34830:	ldr	r1, [sp, #40]	; 0x28
   34834:	mov	r5, #0
   34838:	mov	r0, r5
   3483c:	ldr	r5, [ip, r5, lsl #2]
   34840:	add	r5, r5, #1
   34844:	str	r5, [ip, r0, lsl #2]
   34848:	ldr	r6, [r1, r0, lsl #2]
   3484c:	sdiv	r8, r5, r6
   34850:	mls	r5, r8, r6, r5
   34854:	cmp	r5, #0
   34858:	bne	348d0 <GetDataSlab+0x123b4>
   3485c:	mov	r4, #0
   34860:	str	r4, [ip, r0, lsl #2]
   34864:	add	r4, sp, #64	; 0x40
   34868:	add	r5, r4, r0, lsl #2
   3486c:	ldr	r5, [r5, #4]
   34870:	sdiv	r6, sl, r5
   34874:	mls	r6, r6, r5, sl
   34878:	cmp	r6, #0
   3487c:	beq	34898 <GetDataSlab+0x1237c>
   34880:	ldr	r7, [r4, r0, lsl #2]
   34884:	ldr	r4, [r9, r0, lsl #2]
   34888:	sub	r5, r5, r6
   3488c:	mla	r4, r4, r7, r5
   34890:	add	sl, r4, sl
   34894:	b	348b4 <GetDataSlab+0x12398>
   34898:	ldr	r5, [r9, r0, lsl #2]
   3489c:	cmp	r5, #0
   348a0:	beq	348b8 <GetDataSlab+0x1239c>
   348a4:	add	r4, sp, #64	; 0x40
   348a8:	ldr	r4, [r4, r0, lsl #2]
   348ac:	mla	sl, r4, r5, sl
   348b0:	mul	r4, r4, r5
   348b4:	add	r2, r2, r4, lsl #2
   348b8:	ldr	r4, [fp, #24]
   348bc:	add	r5, r0, #1
   348c0:	add	r0, r0, #2
   348c4:	cmp	r0, r4
   348c8:	blt	34838 <GetDataSlab+0x1231c>
   348cc:	b	348e0 <GetDataSlab+0x123c4>
   348d0:	ldr	r1, [sp, #36]	; 0x24
   348d4:	ldr	r0, [r1, r0, lsl #2]
   348d8:	add	r2, r2, r0, lsl #2
   348dc:	add	sl, r0, sl
   348e0:	ldr	r4, [sp, #52]	; 0x34
   348e4:	ldr	r1, [sp, #56]	; 0x38
   348e8:	mov	r0, #0
   348ec:	add	r4, lr, r4
   348f0:	cmp	r4, r1
   348f4:	str	r4, [sp, #52]	; 0x34
   348f8:	blt	347a4 <GetDataSlab+0x12288>
   348fc:	b	242ac <GetDataSlab+0x1d90>
   34900:	ldr	r0, [sp, #56]	; 0x38
   34904:	cmp	r0, #1
   34908:	ldr	r0, [fp, #20]
   3490c:	blt	242a8 <GetDataSlab+0x1d8c>
   34910:	add	r0, r0, #4
   34914:	ldr	r9, [fp, #12]
   34918:	str	r0, [sp, #40]	; 0x28
   3491c:	add	r0, sp, #104	; 0x68
   34920:	orr	ip, r0, #4
   34924:	sub	r0, fp, #72	; 0x48
   34928:	orr	r0, r0, #4
   3492c:	str	r0, [sp, #36]	; 0x24
   34930:	ldr	r0, [r9], #4
   34934:	str	r0, [sp, #44]	; 0x2c
   34938:	mov	r0, #0
   3493c:	str	r0, [sp, #52]	; 0x34
   34940:	ldr	r6, [sp, #44]	; 0x2c
   34944:	cmp	sl, #1
   34948:	add	r0, r6, lr
   3494c:	add	r4, r2, r6, lsl #2
   34950:	blt	349a4 <GetDataSlab+0x12488>
   34954:	ldr	r2, [sp, #60]	; 0x3c
   34958:	ldr	r1, [sp, #52]	; 0x34
   3495c:	ldr	r7, [fp, #20]
   34960:	mov	r6, #0
   34964:	add	r5, r2, r1
   34968:	ldr	r1, [fp, #16]
   3496c:	ldr	r2, [r4]
   34970:	strb	r2, [r5, r6]
   34974:	add	r6, r6, #1
   34978:	ldr	r3, [r1]
   3497c:	ldr	sl, [r7]
   34980:	add	r0, r3, r0
   34984:	add	r4, r4, r3, lsl #2
   34988:	cmp	r6, sl
   3498c:	blt	3496c <GetDataSlab+0x12450>
   34990:	ldr	r7, [fp, #12]
   34994:	ldr	r6, [r7]
   34998:	ldr	r7, [fp, #8]
   3499c:	ldr	r1, [r7]
   349a0:	b	349a8 <GetDataSlab+0x1248c>
   349a4:	ldr	r1, [sp, #48]	; 0x30
   349a8:	mls	r5, r3, sl, r1
   349ac:	str	r1, [sp, #48]	; 0x30
   349b0:	str	r6, [sp, #44]	; 0x2c
   349b4:	sub	r5, r5, r6
   349b8:	add	lr, r5, r0
   349bc:	ldr	r0, [fp, #24]
   349c0:	add	r2, r4, r5, lsl #2
   349c4:	cmp	r0, #2
   349c8:	blt	34a7c <GetDataSlab+0x12560>
   349cc:	ldr	r1, [sp, #40]	; 0x28
   349d0:	mov	r5, #0
   349d4:	mov	r0, r5
   349d8:	ldr	r5, [ip, r5, lsl #2]
   349dc:	add	r5, r5, #1
   349e0:	str	r5, [ip, r0, lsl #2]
   349e4:	ldr	r6, [r1, r0, lsl #2]
   349e8:	sdiv	r8, r5, r6
   349ec:	mls	r5, r8, r6, r5
   349f0:	cmp	r5, #0
   349f4:	bne	34a6c <GetDataSlab+0x12550>
   349f8:	mov	r4, #0
   349fc:	str	r4, [ip, r0, lsl #2]
   34a00:	add	r4, sp, #64	; 0x40
   34a04:	add	r5, r4, r0, lsl #2
   34a08:	ldr	r5, [r5, #4]
   34a0c:	sdiv	r6, lr, r5
   34a10:	mls	r6, r6, r5, lr
   34a14:	cmp	r6, #0
   34a18:	beq	34a34 <GetDataSlab+0x12518>
   34a1c:	ldr	r7, [r4, r0, lsl #2]
   34a20:	ldr	r4, [r9, r0, lsl #2]
   34a24:	sub	r5, r5, r6
   34a28:	mla	r4, r4, r7, r5
   34a2c:	add	lr, r4, lr
   34a30:	b	34a50 <GetDataSlab+0x12534>
   34a34:	ldr	r5, [r9, r0, lsl #2]
   34a38:	cmp	r5, #0
   34a3c:	beq	34a54 <GetDataSlab+0x12538>
   34a40:	add	r4, sp, #64	; 0x40
   34a44:	ldr	r4, [r4, r0, lsl #2]
   34a48:	mla	lr, r4, r5, lr
   34a4c:	mul	r4, r4, r5
   34a50:	add	r2, r2, r4, lsl #2
   34a54:	ldr	r4, [fp, #24]
   34a58:	add	r5, r0, #1
   34a5c:	add	r0, r0, #2
   34a60:	cmp	r0, r4
   34a64:	blt	349d4 <GetDataSlab+0x124b8>
   34a68:	b	34a7c <GetDataSlab+0x12560>
   34a6c:	ldr	r1, [sp, #36]	; 0x24
   34a70:	ldr	r0, [r1, r0, lsl #2]
   34a74:	add	r2, r2, r0, lsl #2
   34a78:	add	lr, r0, lr
   34a7c:	ldr	r4, [sp, #52]	; 0x34
   34a80:	ldr	r1, [sp, #56]	; 0x38
   34a84:	mov	r0, #0
   34a88:	add	r4, sl, r4
   34a8c:	cmp	r4, r1
   34a90:	str	r4, [sp, #52]	; 0x34
   34a94:	blt	34940 <GetDataSlab+0x12424>
   34a98:	b	242ac <GetDataSlab+0x1d90>
   34a9c:	ldr	r0, [sp, #56]	; 0x38
   34aa0:	ldr	r9, [fp, #12]
   34aa4:	cmp	r0, #1
   34aa8:	ldr	r0, [fp, #20]
   34aac:	blt	242a8 <GetDataSlab+0x1d8c>
   34ab0:	add	r7, r0, #4
   34ab4:	mov	r0, lr
   34ab8:	add	r1, sp, #104	; 0x68
   34abc:	orr	r0, r0, #4
   34ac0:	orr	lr, r1, #4
   34ac4:	str	r0, [sp, #40]	; 0x28
   34ac8:	ldr	r0, [r9], #4
   34acc:	str	r0, [sp, #44]	; 0x2c
   34ad0:	mov	r0, #0
   34ad4:	str	r0, [sp, #52]	; 0x34
   34ad8:	ldr	r5, [sp, #44]	; 0x2c
   34adc:	cmp	ip, #1
   34ae0:	add	r0, r5, sl
   34ae4:	add	r4, r2, r5, lsl #2
   34ae8:	blt	34b4c <GetDataSlab+0x12630>
   34aec:	ldr	r1, [sp, #60]	; 0x3c
   34af0:	ldr	r2, [sp, #52]	; 0x34
   34af4:	mov	r8, r7
   34af8:	ldr	r7, [fp, #16]
   34afc:	mov	r6, #0
   34b00:	add	r5, r1, r2
   34b04:	ldr	r1, [fp, #20]
   34b08:	vldr	s0, [r4]
   34b0c:	vcvt.u32.f32	s0, s0
   34b10:	vmov	r2, s0
   34b14:	strb	r2, [r5, r6]
   34b18:	add	r6, r6, #1
   34b1c:	ldr	r3, [r7]
   34b20:	ldr	ip, [r1]
   34b24:	add	r0, r3, r0
   34b28:	add	r4, r4, r3, lsl #2
   34b2c:	cmp	r6, ip
   34b30:	blt	34b08 <GetDataSlab+0x125ec>
   34b34:	ldr	r1, [fp, #12]
   34b38:	mov	r7, r8
   34b3c:	ldr	r5, [r1]
   34b40:	ldr	r1, [fp, #8]
   34b44:	ldr	r1, [r1]
   34b48:	b	34b50 <GetDataSlab+0x12634>
   34b4c:	ldr	r1, [sp, #48]	; 0x30
   34b50:	mls	r6, r3, ip, r1
   34b54:	str	r1, [sp, #48]	; 0x30
   34b58:	str	r5, [sp, #44]	; 0x2c
   34b5c:	sub	r6, r6, r5
   34b60:	add	sl, r6, r0
   34b64:	ldr	r0, [fp, #24]
   34b68:	add	r2, r4, r6, lsl #2
   34b6c:	cmp	r0, #2
   34b70:	blt	34c20 <GetDataSlab+0x12704>
   34b74:	mov	r5, #0
   34b78:	ldr	r6, [lr, r5, lsl #2]
   34b7c:	mov	r0, r5
   34b80:	add	r6, r6, #1
   34b84:	str	r6, [lr, r5, lsl #2]
   34b88:	ldr	r5, [r7, r5, lsl #2]
   34b8c:	sdiv	r1, r6, r5
   34b90:	mls	r1, r1, r5, r6
   34b94:	cmp	r1, #0
   34b98:	bne	34c10 <GetDataSlab+0x126f4>
   34b9c:	mov	r1, #0
   34ba0:	add	r4, sp, #64	; 0x40
   34ba4:	str	r1, [lr, r0, lsl #2]
   34ba8:	add	r1, r4, r0, lsl #2
   34bac:	ldr	r5, [r1, #4]
   34bb0:	sdiv	r1, sl, r5
   34bb4:	mls	r6, r1, r5, sl
   34bb8:	cmp	r6, #0
   34bbc:	beq	34bd8 <GetDataSlab+0x126bc>
   34bc0:	ldr	r1, [r4, r0, lsl #2]
   34bc4:	ldr	r8, [r9, r0, lsl #2]
   34bc8:	sub	r5, r5, r6
   34bcc:	mla	r1, r8, r1, r5
   34bd0:	add	sl, r1, sl
   34bd4:	b	34bf4 <GetDataSlab+0x126d8>
   34bd8:	ldr	r5, [r9, r0, lsl #2]
   34bdc:	cmp	r5, #0
   34be0:	beq	34bf8 <GetDataSlab+0x126dc>
   34be4:	add	r1, sp, #64	; 0x40
   34be8:	ldr	r1, [r1, r0, lsl #2]
   34bec:	mla	sl, r1, r5, sl
   34bf0:	mul	r1, r1, r5
   34bf4:	add	r2, r2, r1, lsl #2
   34bf8:	ldr	r1, [fp, #24]
   34bfc:	add	r5, r0, #1
   34c00:	add	r0, r0, #2
   34c04:	cmp	r0, r1
   34c08:	blt	34b78 <GetDataSlab+0x1265c>
   34c0c:	b	34c20 <GetDataSlab+0x12704>
   34c10:	ldr	r1, [sp, #40]	; 0x28
   34c14:	ldr	r0, [r1, r0, lsl #2]
   34c18:	add	r2, r2, r0, lsl #2
   34c1c:	add	sl, r0, sl
   34c20:	ldr	r4, [sp, #52]	; 0x34
   34c24:	ldr	r1, [sp, #56]	; 0x38
   34c28:	mov	r0, #0
   34c2c:	add	r4, ip, r4
   34c30:	cmp	r4, r1
   34c34:	str	r4, [sp, #52]	; 0x34
   34c38:	blt	34ad8 <GetDataSlab+0x125bc>
   34c3c:	b	242ac <GetDataSlab+0x1d90>
   34c40:	ldr	r0, [sp, #56]	; 0x38
   34c44:	ldr	r9, [fp, #12]
   34c48:	cmp	r0, #1
   34c4c:	ldr	r0, [fp, #20]
   34c50:	blt	242a8 <GetDataSlab+0x1d8c>
   34c54:	add	r7, r0, #4
   34c58:	mov	r0, lr
   34c5c:	add	r1, sp, #104	; 0x68
   34c60:	orr	r0, r0, #4
   34c64:	orr	lr, r1, #4
   34c68:	str	r0, [sp, #40]	; 0x28
   34c6c:	ldr	r0, [r9], #4
   34c70:	str	r0, [sp, #44]	; 0x2c
   34c74:	mov	r0, #0
   34c78:	str	r0, [sp, #52]	; 0x34
   34c7c:	ldr	r5, [sp, #44]	; 0x2c
   34c80:	cmp	ip, #1
   34c84:	add	r0, r5, sl
   34c88:	add	r4, r2, r5, lsl #3
   34c8c:	blt	34cf0 <GetDataSlab+0x127d4>
   34c90:	ldr	r1, [sp, #60]	; 0x3c
   34c94:	ldr	r2, [sp, #52]	; 0x34
   34c98:	mov	r8, r7
   34c9c:	ldr	r7, [fp, #16]
   34ca0:	mov	r6, #0
   34ca4:	add	r5, r1, r2
   34ca8:	ldr	r1, [fp, #20]
   34cac:	vldr	d16, [r4]
   34cb0:	vcvt.u32.f64	s0, d16
   34cb4:	vmov	r2, s0
   34cb8:	strb	r2, [r5, r6]
   34cbc:	add	r6, r6, #1
   34cc0:	ldr	r3, [r7]
   34cc4:	ldr	ip, [r1]
   34cc8:	add	r0, r3, r0
   34ccc:	add	r4, r4, r3, lsl #3
   34cd0:	cmp	r6, ip
   34cd4:	blt	34cac <GetDataSlab+0x12790>
   34cd8:	ldr	r1, [fp, #12]
   34cdc:	mov	r7, r8
   34ce0:	ldr	r5, [r1]
   34ce4:	ldr	r1, [fp, #8]
   34ce8:	ldr	r1, [r1]
   34cec:	b	34cf4 <GetDataSlab+0x127d8>
   34cf0:	ldr	r1, [sp, #48]	; 0x30
   34cf4:	mls	r6, r3, ip, r1
   34cf8:	str	r1, [sp, #48]	; 0x30
   34cfc:	str	r5, [sp, #44]	; 0x2c
   34d00:	sub	r6, r6, r5
   34d04:	add	sl, r6, r0
   34d08:	ldr	r0, [fp, #24]
   34d0c:	add	r2, r4, r6, lsl #3
   34d10:	cmp	r0, #2
   34d14:	blt	34dc4 <GetDataSlab+0x128a8>
   34d18:	mov	r5, #0
   34d1c:	ldr	r6, [lr, r5, lsl #2]
   34d20:	mov	r0, r5
   34d24:	add	r6, r6, #1
   34d28:	str	r6, [lr, r5, lsl #2]
   34d2c:	ldr	r5, [r7, r5, lsl #2]
   34d30:	sdiv	r1, r6, r5
   34d34:	mls	r1, r1, r5, r6
   34d38:	cmp	r1, #0
   34d3c:	bne	34db4 <GetDataSlab+0x12898>
   34d40:	mov	r1, #0
   34d44:	add	r4, sp, #64	; 0x40
   34d48:	str	r1, [lr, r0, lsl #2]
   34d4c:	add	r1, r4, r0, lsl #2
   34d50:	ldr	r5, [r1, #4]
   34d54:	sdiv	r1, sl, r5
   34d58:	mls	r6, r1, r5, sl
   34d5c:	cmp	r6, #0
   34d60:	beq	34d7c <GetDataSlab+0x12860>
   34d64:	ldr	r1, [r4, r0, lsl #2]
   34d68:	ldr	r8, [r9, r0, lsl #2]
   34d6c:	sub	r5, r5, r6
   34d70:	mla	r1, r8, r1, r5
   34d74:	add	sl, r1, sl
   34d78:	b	34d98 <GetDataSlab+0x1287c>
   34d7c:	ldr	r5, [r9, r0, lsl #2]
   34d80:	cmp	r5, #0
   34d84:	beq	34d9c <GetDataSlab+0x12880>
   34d88:	add	r1, sp, #64	; 0x40
   34d8c:	ldr	r1, [r1, r0, lsl #2]
   34d90:	mla	sl, r1, r5, sl
   34d94:	mul	r1, r1, r5
   34d98:	add	r2, r2, r1, lsl #3
   34d9c:	ldr	r1, [fp, #24]
   34da0:	add	r5, r0, #1
   34da4:	add	r0, r0, #2
   34da8:	cmp	r0, r1
   34dac:	blt	34d1c <GetDataSlab+0x12800>
   34db0:	b	34dc4 <GetDataSlab+0x128a8>
   34db4:	ldr	r1, [sp, #40]	; 0x28
   34db8:	ldr	r0, [r1, r0, lsl #2]
   34dbc:	add	r2, r2, r0, lsl #3
   34dc0:	add	sl, r0, sl
   34dc4:	ldr	r4, [sp, #52]	; 0x34
   34dc8:	ldr	r1, [sp, #56]	; 0x38
   34dcc:	mov	r0, #0
   34dd0:	add	r4, ip, r4
   34dd4:	cmp	r4, r1
   34dd8:	str	r4, [sp, #52]	; 0x34
   34ddc:	blt	34c7c <GetDataSlab+0x12760>
   34de0:	b	242ac <GetDataSlab+0x1d90>
   34de4:	ldr	r0, [sp, #56]	; 0x38
   34de8:	ldr	lr, [sp, #60]	; 0x3c
   34dec:	ldr	r9, [fp, #12]
   34df0:	cmp	r0, #1
   34df4:	blt	34f68 <GetDataSlab+0x12a4c>
   34df8:	ldr	r0, [fp, #20]
   34dfc:	ldr	r2, [r9], #4
   34e00:	mov	r6, #0
   34e04:	add	sl, r0, #4
   34e08:	add	r0, sp, #104	; 0x68
   34e0c:	orr	ip, r0, #4
   34e10:	sub	r0, fp, #72	; 0x48
   34e14:	orr	r0, r0, #4
   34e18:	str	r0, [sp, #36]	; 0x24
   34e1c:	add	r3, r2, r8
   34e20:	add	r4, r4, r2, lsl #3
   34e24:	cmp	r1, #1
   34e28:	str	r6, [sp, #40]	; 0x28
   34e2c:	blt	34e78 <GetDataSlab+0x1295c>
   34e30:	ldr	r0, [fp, #20]
   34e34:	ldr	r2, [fp, #16]
   34e38:	add	r6, lr, r6
   34e3c:	mov	r7, #0
   34e40:	ldrb	r1, [r4]
   34e44:	strb	r1, [r6, r7]
   34e48:	add	r7, r7, #1
   34e4c:	ldr	r5, [r2]
   34e50:	ldr	r1, [r0]
   34e54:	add	r3, r5, r3
   34e58:	add	r4, r4, r5, lsl #3
   34e5c:	cmp	r7, r1
   34e60:	blt	34e40 <GetDataSlab+0x12924>
   34e64:	ldr	r0, [fp, #12]
   34e68:	ldr	r7, [r0]
   34e6c:	ldr	r0, [fp, #8]
   34e70:	ldr	r0, [r0]
   34e74:	b	34e80 <GetDataSlab+0x12964>
   34e78:	ldr	r0, [sp, #44]	; 0x2c
   34e7c:	mov	r7, r2
   34e80:	mls	r6, r5, r1, r0
   34e84:	str	r0, [sp, #44]	; 0x2c
   34e88:	ldr	r0, [fp, #24]
   34e8c:	mov	r2, r7
   34e90:	sub	r6, r6, r7
   34e94:	add	r4, r4, r6, lsl #3
   34e98:	add	r8, r6, r3
   34e9c:	cmp	r0, #2
   34ea0:	blt	34f54 <GetDataSlab+0x12a38>
   34ea4:	mov	r3, #0
   34ea8:	mov	r6, r3
   34eac:	ldr	r3, [ip, r3, lsl #2]
   34eb0:	add	r3, r3, #1
   34eb4:	str	r3, [ip, r6, lsl #2]
   34eb8:	ldr	r7, [sl, r6, lsl #2]
   34ebc:	sdiv	r0, r3, r7
   34ec0:	mls	r0, r0, r7, r3
   34ec4:	cmp	r0, #0
   34ec8:	bne	34f44 <GetDataSlab+0x12a28>
   34ecc:	mov	r0, #0
   34ed0:	add	r7, sp, #64	; 0x40
   34ed4:	str	r0, [ip, r6, lsl #2]
   34ed8:	add	r0, r7, r6, lsl #2
   34edc:	ldr	r3, [r0, #4]
   34ee0:	sdiv	r0, r8, r3
   34ee4:	mls	lr, r0, r3, r8
   34ee8:	cmp	lr, #0
   34eec:	beq	34f08 <GetDataSlab+0x129ec>
   34ef0:	ldr	r0, [r7, r6, lsl #2]
   34ef4:	ldr	r7, [r9, r6, lsl #2]
   34ef8:	sub	r3, r3, lr
   34efc:	mla	r0, r7, r0, r3
   34f00:	add	r8, r0, r8
   34f04:	b	34f24 <GetDataSlab+0x12a08>
   34f08:	ldr	r3, [r9, r6, lsl #2]
   34f0c:	cmp	r3, #0
   34f10:	beq	34f28 <GetDataSlab+0x12a0c>
   34f14:	add	r0, sp, #64	; 0x40
   34f18:	ldr	r0, [r0, r6, lsl #2]
   34f1c:	mla	r8, r0, r3, r8
   34f20:	mul	r0, r0, r3
   34f24:	add	r4, r4, r0, lsl #3
   34f28:	add	r3, r6, #1
   34f2c:	add	r0, r6, #2
   34f30:	ldr	r6, [fp, #24]
   34f34:	ldr	lr, [sp, #60]	; 0x3c
   34f38:	cmp	r0, r6
   34f3c:	blt	34ea8 <GetDataSlab+0x1298c>
   34f40:	b	34f54 <GetDataSlab+0x12a38>
   34f44:	ldr	r0, [sp, #36]	; 0x24
   34f48:	ldr	r0, [r0, r6, lsl #2]
   34f4c:	add	r4, r4, r0, lsl #3
   34f50:	add	r8, r0, r8
   34f54:	ldr	r6, [sp, #40]	; 0x28
   34f58:	ldr	r0, [sp, #56]	; 0x38
   34f5c:	add	r6, r1, r6
   34f60:	cmp	r6, r0
   34f64:	blt	34e1c <GetDataSlab+0x12900>
   34f68:	ldr	r3, [sp, #48]	; 0x30
   34f6c:	mov	r0, #0
   34f70:	cmp	r3, #13
   34f74:	bne	242ac <GetDataSlab+0x1d90>
   34f78:	ldr	r0, [fp, #16]
   34f7c:	ldr	lr, [fp, #8]
   34f80:	add	r5, sp, #64	; 0x40
   34f84:	sub	r9, fp, #72	; 0x48
   34f88:	ldr	r3, [r0]
   34f8c:	sub	r0, r3, #1
   34f90:	str	r0, [fp, #-72]	; 0xffffffb8
   34f94:	ldr	r0, [lr]
   34f98:	mov	lr, #0
   34f9c:	str	r0, [sp, #48]	; 0x30
   34fa0:	str	r0, [sp, #64]	; 0x40
   34fa4:	ldr	r0, [fp, #20]
   34fa8:	ldr	sl, [r0]
   34fac:	ldr	r0, [fp, #24]
   34fb0:	cmp	r0, #2
   34fb4:	mov	r0, sl
   34fb8:	str	sl, [sp, #56]	; 0x38
   34fbc:	blt	35064 <GetDataSlab+0x12b48>
   34fc0:	ldr	r7, [sp, #48]	; 0x30
   34fc4:	ldr	r1, [fp, #8]
   34fc8:	mov	r0, #1
   34fcc:	mov	lr, #0
   34fd0:	mov	r2, sl
   34fd4:	str	sl, [sp, #56]	; 0x38
   34fd8:	mov	r8, r7
   34fdc:	ldr	r6, [fp, #16]
   34fe0:	ldr	r2, [fp, #8]
   34fe4:	ldr	r6, [r6, r0, lsl #2]
   34fe8:	str	r7, [r5, r0, lsl #2]
   34fec:	sub	r4, r6, #1
   34ff0:	mov	r6, #0
   34ff4:	str	r4, [r9, r0, lsl #2]
   34ff8:	ldr	ip, [r2, r0, lsl #2]
   34ffc:	mov	r5, ip
   35000:	mul	r7, r5, r7
   35004:	ldr	r5, [r1, -r6, lsl #2]
   35008:	add	r6, r6, #1
   3500c:	cmp	r0, r6
   35010:	mul	r4, r4, r5
   35014:	bne	35000 <GetDataSlab+0x12ae4>
   35018:	ldr	r6, [fp, #12]
   3501c:	add	r5, sp, #64	; 0x40
   35020:	sub	r9, fp, #72	; 0x48
   35024:	ldr	r2, [sp, #56]	; 0x38
   35028:	add	r1, r1, #4
   3502c:	str	r7, [r5, r0, lsl #2]
   35030:	str	r4, [r9, r0, lsl #2]
   35034:	ldr	r4, [r6, r0, lsl #2]
   35038:	ldr	r6, [fp, #20]
   3503c:	mla	lr, r4, r8, lr
   35040:	ldr	r4, [r6, r0, lsl #2]
   35044:	ldr	r6, [fp, #24]
   35048:	add	r0, r0, #1
   3504c:	mov	r8, r7
   35050:	mov	r7, ip
   35054:	mul	r2, r4, r2
   35058:	cmp	r0, r6
   3505c:	str	r2, [sp, #56]	; 0x38
   35060:	bne	34fdc <GetDataSlab+0x12ac0>
   35064:	ldr	r0, [sp, #52]	; 0x34
   35068:	mov	r2, lr
   3506c:	cmp	r3, #1
   35070:	add	r4, r0, lr, lsl #3
   35074:	bne	3b208 <GetDataSlab+0x18cec>
   35078:	ldr	r0, [sp, #56]	; 0x38
   3507c:	ldr	lr, [fp, #12]
   35080:	cmp	r0, #1
   35084:	ldr	r0, [fp, #20]
   35088:	blt	242a8 <GetDataSlab+0x1d8c>
   3508c:	add	r8, r0, #4
   35090:	add	r0, sp, #104	; 0x68
   35094:	mov	r9, #0
   35098:	orr	r3, r0, #4
   3509c:	sub	r0, fp, #72	; 0x48
   350a0:	orr	r0, r0, #4
   350a4:	str	r0, [sp, #44]	; 0x2c
   350a8:	ldr	r0, [lr], #4
   350ac:	str	r0, [sp, #52]	; 0x34
   350b0:	ldr	r1, [sp, #52]	; 0x34
   350b4:	ldr	r0, [sp, #48]	; 0x30
   350b8:	cmp	sl, #1
   350bc:	add	r2, r1, r2
   350c0:	add	ip, r4, r1, lsl #3
   350c4:	blt	35104 <GetDataSlab+0x12be8>
   350c8:	ldr	r0, [sp, #60]	; 0x3c
   350cc:	ldr	r6, [fp, #20]
   350d0:	mov	r4, ip
   350d4:	add	r5, r0, r9
   350d8:	mov	r0, #0
   350dc:	ldrb	r1, [r4], #8
   350e0:	strb	r1, [r5, r0]
   350e4:	add	r0, r0, #1
   350e8:	ldr	sl, [r6]
   350ec:	cmp	r0, sl
   350f0:	blt	350dc <GetDataSlab+0x12bc0>
   350f4:	ldr	r0, [fp, #12]
   350f8:	ldr	r1, [r0]
   350fc:	ldr	r0, [fp, #8]
   35100:	ldr	r0, [r0]
   35104:	str	r0, [sp, #48]	; 0x30
   35108:	sub	r0, r0, r1
   3510c:	str	r1, [sp, #52]	; 0x34
   35110:	add	r4, ip, r0, lsl #3
   35114:	add	r2, r2, r0
   35118:	ldr	r0, [fp, #24]
   3511c:	cmp	r0, #2
   35120:	blt	351cc <GetDataSlab+0x12cb0>
   35124:	mov	r5, #0
   35128:	add	ip, sp, #64	; 0x40
   3512c:	ldr	r1, [r3, r5, lsl #2]
   35130:	mov	r0, r5
   35134:	add	r1, r1, #1
   35138:	str	r1, [r3, r5, lsl #2]
   3513c:	ldr	r5, [r8, r5, lsl #2]
   35140:	sdiv	r6, r1, r5
   35144:	mls	r1, r6, r5, r1
   35148:	cmp	r1, #0
   3514c:	bne	351bc <GetDataSlab+0x12ca0>
   35150:	mov	r1, #0
   35154:	str	r1, [r3, r0, lsl #2]
   35158:	add	r1, ip, r0, lsl #2
   3515c:	ldr	r5, [r1, #4]
   35160:	sdiv	r1, r2, r5
   35164:	mls	r1, r1, r5, r2
   35168:	cmp	r1, #0
   3516c:	beq	35188 <GetDataSlab+0x12c6c>
   35170:	ldr	r6, [ip, r0, lsl #2]
   35174:	ldr	r7, [lr, r0, lsl #2]
   35178:	sub	r1, r5, r1
   3517c:	mla	r1, r7, r6, r1
   35180:	add	r2, r1, r2
   35184:	b	351a0 <GetDataSlab+0x12c84>
   35188:	ldr	r1, [lr, r0, lsl #2]
   3518c:	cmp	r1, #0
   35190:	beq	351a4 <GetDataSlab+0x12c88>
   35194:	ldr	r7, [ip, r0, lsl #2]
   35198:	mla	r2, r7, r1, r2
   3519c:	mul	r1, r7, r1
   351a0:	add	r4, r4, r1, lsl #3
   351a4:	ldr	r1, [fp, #24]
   351a8:	add	r5, r0, #1
   351ac:	add	r0, r0, #2
   351b0:	cmp	r0, r1
   351b4:	blt	3512c <GetDataSlab+0x12c10>
   351b8:	b	351cc <GetDataSlab+0x12cb0>
   351bc:	ldr	r1, [sp, #44]	; 0x2c
   351c0:	ldr	r0, [r1, r0, lsl #2]
   351c4:	add	r4, r4, r0, lsl #3
   351c8:	add	r2, r0, r2
   351cc:	ldr	r1, [sp, #56]	; 0x38
   351d0:	add	r9, sl, r9
   351d4:	mov	r0, #0
   351d8:	cmp	r9, r1
   351dc:	blt	350b0 <GetDataSlab+0x12b94>
   351e0:	b	242ac <GetDataSlab+0x1d90>
   351e4:	ldr	r0, [sp, #56]	; 0x38
   351e8:	ldr	r7, [sp, #48]	; 0x30
   351ec:	cmp	r0, #1
   351f0:	blt	242a8 <GetDataSlab+0x1d8c>
   351f4:	ldr	r0, [sp, #44]	; 0x2c
   351f8:	add	ip, ip, #4
   351fc:	mov	sl, #0
   35200:	mls	r0, r7, r8, r0
   35204:	str	r0, [sp, #52]	; 0x34
   35208:	mul	r0, r7, r8
   3520c:	str	r0, [sp, #40]	; 0x28
   35210:	ldr	r0, [fp, #20]
   35214:	add	r9, r0, #4
   35218:	add	r0, sp, #104	; 0x68
   3521c:	orr	r2, r0, #4
   35220:	orr	r0, r1, #4
   35224:	str	r0, [sp, #36]	; 0x24
   35228:	lsl	r0, r7, #1
   3522c:	str	r0, [sp, #44]	; 0x2c
   35230:	ldr	r0, [fp, #12]
   35234:	cmp	r7, #1
   35238:	ldr	r0, [r0]
   3523c:	blt	35278 <GetDataSlab+0x12d5c>
   35240:	mov	r1, r7
   35244:	ldr	r7, [sp, #40]	; 0x28
   35248:	ldr	lr, [sp, #60]	; 0x3c
   3524c:	add	r4, r7, r3
   35250:	add	r7, r5, r7
   35254:	add	r5, r5, r0
   35258:	mov	r3, r1
   3525c:	ldrb	r6, [r5], r8
   35260:	subs	r3, r3, #1
   35264:	strh	r6, [lr], #2
   35268:	bne	3525c <GetDataSlab+0x12d40>
   3526c:	add	r3, r4, r0
   35270:	mov	r5, r7
   35274:	b	3527c <GetDataSlab+0x12d60>
   35278:	add	r3, r0, r3
   3527c:	ldr	r1, [sp, #52]	; 0x34
   35280:	ldr	lr, [sp, #60]	; 0x3c
   35284:	sub	r0, r1, r0
   35288:	add	r5, r5, r1
   3528c:	add	r3, r3, r0
   35290:	ldr	r0, [fp, #24]
   35294:	cmp	r0, #2
   35298:	blt	35344 <GetDataSlab+0x12e28>
   3529c:	mov	r4, #0
   352a0:	ldr	r6, [r2, r4, lsl #2]
   352a4:	mov	r0, r4
   352a8:	add	r6, r6, #1
   352ac:	str	r6, [r2, r4, lsl #2]
   352b0:	ldr	r4, [r9, r4, lsl #2]
   352b4:	sdiv	r7, r6, r4
   352b8:	mls	r7, r7, r4, r6
   352bc:	cmp	r7, #0
   352c0:	bne	35334 <GetDataSlab+0x12e18>
   352c4:	mov	r1, #0
   352c8:	str	r1, [r2, r0, lsl #2]
   352cc:	add	r1, sp, #64	; 0x40
   352d0:	add	r7, r1, r0, lsl #2
   352d4:	ldr	r4, [r7, #4]
   352d8:	sdiv	r7, r3, r4
   352dc:	mls	r6, r7, r4, r3
   352e0:	cmp	r6, #0
   352e4:	beq	35304 <GetDataSlab+0x12de8>
   352e8:	ldr	r7, [r1, r0, lsl #2]
   352ec:	ldr	r1, [ip, r0, lsl #2]
   352f0:	sub	r6, r4, r6
   352f4:	mla	r1, r1, r7, r6
   352f8:	add	r3, r1, r3
   352fc:	add	r5, r5, r1
   35300:	b	3531c <GetDataSlab+0x12e00>
   35304:	ldr	r6, [ip, r0, lsl #2]
   35308:	cmp	r6, #0
   3530c:	addne	r1, sp, #64	; 0x40
   35310:	ldrne	r1, [r1, r0, lsl #2]
   35314:	mlane	r3, r1, r6, r3
   35318:	mlane	r5, r1, r6, r5
   3531c:	ldr	r1, [fp, #24]
   35320:	add	r4, r0, #1
   35324:	add	r0, r0, #2
   35328:	cmp	r0, r1
   3532c:	blt	352a0 <GetDataSlab+0x12d84>
   35330:	b	35344 <GetDataSlab+0x12e28>
   35334:	ldr	r1, [sp, #36]	; 0x24
   35338:	ldr	r0, [r1, r0, lsl #2]
   3533c:	add	r5, r5, r0
   35340:	add	r3, r0, r3
   35344:	ldr	r7, [sp, #48]	; 0x30
   35348:	ldr	r0, [sp, #44]	; 0x2c
   3534c:	ldr	r1, [sp, #56]	; 0x38
   35350:	add	sl, sl, r7
   35354:	add	lr, lr, r0
   35358:	mov	r0, #0
   3535c:	cmp	sl, r1
   35360:	str	lr, [sp, #60]	; 0x3c
   35364:	blt	35230 <GetDataSlab+0x12d14>
   35368:	b	242ac <GetDataSlab+0x1d90>
   3536c:	ldr	r0, [sp, #48]	; 0x30
   35370:	ldr	r1, [fp, #20]
   35374:	cmp	r0, #1
   35378:	blt	242a8 <GetDataSlab+0x1d8c>
   3537c:	ldr	r4, [sp, #44]	; 0x2c
   35380:	ldr	r0, [sp, #40]	; 0x28
   35384:	ldr	r5, [ip], #4
   35388:	mov	r3, lr
   3538c:	add	sl, r1, #4
   35390:	mov	r8, #0
   35394:	mls	r0, r4, r6, r0
   35398:	mov	lr, ip
   3539c:	mov	r1, r4
   353a0:	str	r5, [sp, #56]	; 0x38
   353a4:	sub	r0, r0, r5
   353a8:	str	r0, [sp, #52]	; 0x34
   353ac:	add	r0, sp, #104	; 0x68
   353b0:	orr	r7, r0, #4
   353b4:	orr	r0, r3, #4
   353b8:	str	r0, [sp, #32]
   353bc:	mla	r0, r4, r6, r5
   353c0:	lsl	r6, r6, #1
   353c4:	str	r0, [sp, #36]	; 0x24
   353c8:	lsl	r0, r4, #1
   353cc:	str	r0, [sp, #40]	; 0x28
   353d0:	ldr	r0, [sp, #56]	; 0x38
   353d4:	cmp	r1, #1
   353d8:	blt	35400 <GetDataSlab+0x12ee4>
   353dc:	ldr	r0, [sp, #56]	; 0x38
   353e0:	ldr	r3, [sp, #44]	; 0x2c
   353e4:	ldr	r1, [sp, #60]	; 0x3c
   353e8:	add	r0, r9, r0, lsl #1
   353ec:	ldrh	r4, [r0], r6
   353f0:	subs	r3, r3, #1
   353f4:	strh	r4, [r1], #2
   353f8:	bne	353ec <GetDataSlab+0x12ed0>
   353fc:	ldr	r0, [sp, #36]	; 0x24
   35400:	ldr	r3, [sp, #52]	; 0x34
   35404:	add	r1, r9, r3, lsl #1
   35408:	add	r9, r1, r0, lsl #1
   3540c:	add	r0, r0, r2
   35410:	add	r2, r0, r3
   35414:	ldr	r0, [fp, #24]
   35418:	cmp	r0, #2
   3541c:	blt	354cc <GetDataSlab+0x12fb0>
   35420:	mov	ip, #0
   35424:	ldr	r1, [r7, ip, lsl #2]
   35428:	mov	r0, ip
   3542c:	add	r1, r1, #1
   35430:	str	r1, [r7, ip, lsl #2]
   35434:	ldr	r3, [sl, ip, lsl #2]
   35438:	sdiv	r4, r1, r3
   3543c:	mls	r1, r4, r3, r1
   35440:	cmp	r1, #0
   35444:	bne	354bc <GetDataSlab+0x12fa0>
   35448:	mov	r1, #0
   3544c:	add	r5, sp, #64	; 0x40
   35450:	str	r1, [r7, r0, lsl #2]
   35454:	add	r1, r5, r0, lsl #2
   35458:	ldr	r1, [r1, #4]
   3545c:	sdiv	r3, r2, r1
   35460:	mls	r3, r3, r1, r2
   35464:	cmp	r3, #0
   35468:	beq	35484 <GetDataSlab+0x12f68>
   3546c:	ldr	r4, [r5, r0, lsl #2]
   35470:	ldr	r5, [lr, r0, lsl #2]
   35474:	sub	r1, r1, r3
   35478:	mla	r1, r5, r4, r1
   3547c:	add	r2, r1, r2
   35480:	b	354a0 <GetDataSlab+0x12f84>
   35484:	mov	r1, lr
   35488:	ldr	r1, [lr, r0, lsl #2]
   3548c:	cmp	r1, #0
   35490:	beq	354a4 <GetDataSlab+0x12f88>
   35494:	ldr	r3, [r5, r0, lsl #2]
   35498:	mla	r2, r3, r1, r2
   3549c:	mul	r1, r3, r1
   354a0:	add	r9, r9, r1, lsl #1
   354a4:	ldr	r1, [fp, #24]
   354a8:	add	ip, r0, #1
   354ac:	add	r0, r0, #2
   354b0:	cmp	r0, r1
   354b4:	blt	35424 <GetDataSlab+0x12f08>
   354b8:	b	354cc <GetDataSlab+0x12fb0>
   354bc:	ldr	r1, [sp, #32]
   354c0:	ldr	r0, [r1, r0, lsl #2]
   354c4:	add	r9, r9, r0, lsl #1
   354c8:	add	r2, r0, r2
   354cc:	ldr	r0, [sp, #60]	; 0x3c
   354d0:	ldr	r1, [sp, #40]	; 0x28
   354d4:	ldr	r3, [sp, #48]	; 0x30
   354d8:	add	r0, r0, r1
   354dc:	ldr	r1, [sp, #44]	; 0x2c
   354e0:	str	r0, [sp, #60]	; 0x3c
   354e4:	mov	r0, #0
   354e8:	add	r8, r8, r1
   354ec:	cmp	r8, r3
   354f0:	blt	353d0 <GetDataSlab+0x12eb4>
   354f4:	b	242ac <GetDataSlab+0x1d90>
   354f8:	ldr	r0, [sp, #48]	; 0x30
   354fc:	ldr	r1, [fp, #20]
   35500:	cmp	r0, #1
   35504:	blt	242a8 <GetDataSlab+0x1d8c>
   35508:	ldr	r4, [sp, #44]	; 0x2c
   3550c:	ldr	r0, [sp, #40]	; 0x28
   35510:	ldr	r5, [ip], #4
   35514:	mov	r3, lr
   35518:	add	sl, r1, #4
   3551c:	mov	r8, #0
   35520:	mls	r0, r4, r6, r0
   35524:	mov	lr, ip
   35528:	mov	r1, r4
   3552c:	str	r5, [sp, #56]	; 0x38
   35530:	sub	r0, r0, r5
   35534:	str	r0, [sp, #52]	; 0x34
   35538:	add	r0, sp, #104	; 0x68
   3553c:	orr	r7, r0, #4
   35540:	orr	r0, r3, #4
   35544:	str	r0, [sp, #32]
   35548:	mla	r0, r4, r6, r5
   3554c:	lsl	r6, r6, #1
   35550:	str	r0, [sp, #36]	; 0x24
   35554:	lsl	r0, r4, #1
   35558:	str	r0, [sp, #40]	; 0x28
   3555c:	ldr	r0, [sp, #56]	; 0x38
   35560:	cmp	r1, #1
   35564:	blt	3558c <GetDataSlab+0x13070>
   35568:	ldr	r0, [sp, #56]	; 0x38
   3556c:	ldr	r3, [sp, #44]	; 0x2c
   35570:	ldr	r1, [sp, #60]	; 0x3c
   35574:	add	r0, r9, r0, lsl #1
   35578:	ldrh	r4, [r0], r6
   3557c:	subs	r3, r3, #1
   35580:	strh	r4, [r1], #2
   35584:	bne	35578 <GetDataSlab+0x1305c>
   35588:	ldr	r0, [sp, #36]	; 0x24
   3558c:	ldr	r3, [sp, #52]	; 0x34
   35590:	add	r1, r9, r3, lsl #1
   35594:	add	r9, r1, r0, lsl #1
   35598:	add	r0, r0, r2
   3559c:	add	r2, r0, r3
   355a0:	ldr	r0, [fp, #24]
   355a4:	cmp	r0, #2
   355a8:	blt	35658 <GetDataSlab+0x1313c>
   355ac:	mov	ip, #0
   355b0:	ldr	r1, [r7, ip, lsl #2]
   355b4:	mov	r0, ip
   355b8:	add	r1, r1, #1
   355bc:	str	r1, [r7, ip, lsl #2]
   355c0:	ldr	r3, [sl, ip, lsl #2]
   355c4:	sdiv	r4, r1, r3
   355c8:	mls	r1, r4, r3, r1
   355cc:	cmp	r1, #0
   355d0:	bne	35648 <GetDataSlab+0x1312c>
   355d4:	mov	r1, #0
   355d8:	add	r5, sp, #64	; 0x40
   355dc:	str	r1, [r7, r0, lsl #2]
   355e0:	add	r1, r5, r0, lsl #2
   355e4:	ldr	r1, [r1, #4]
   355e8:	sdiv	r3, r2, r1
   355ec:	mls	r3, r3, r1, r2
   355f0:	cmp	r3, #0
   355f4:	beq	35610 <GetDataSlab+0x130f4>
   355f8:	ldr	r4, [r5, r0, lsl #2]
   355fc:	ldr	r5, [lr, r0, lsl #2]
   35600:	sub	r1, r1, r3
   35604:	mla	r1, r5, r4, r1
   35608:	add	r2, r1, r2
   3560c:	b	3562c <GetDataSlab+0x13110>
   35610:	mov	r1, lr
   35614:	ldr	r1, [lr, r0, lsl #2]
   35618:	cmp	r1, #0
   3561c:	beq	35630 <GetDataSlab+0x13114>
   35620:	ldr	r3, [r5, r0, lsl #2]
   35624:	mla	r2, r3, r1, r2
   35628:	mul	r1, r3, r1
   3562c:	add	r9, r9, r1, lsl #1
   35630:	ldr	r1, [fp, #24]
   35634:	add	ip, r0, #1
   35638:	add	r0, r0, #2
   3563c:	cmp	r0, r1
   35640:	blt	355b0 <GetDataSlab+0x13094>
   35644:	b	35658 <GetDataSlab+0x1313c>
   35648:	ldr	r1, [sp, #32]
   3564c:	ldr	r0, [r1, r0, lsl #2]
   35650:	add	r9, r9, r0, lsl #1
   35654:	add	r2, r0, r2
   35658:	ldr	r0, [sp, #60]	; 0x3c
   3565c:	ldr	r1, [sp, #40]	; 0x28
   35660:	ldr	r3, [sp, #48]	; 0x30
   35664:	add	r0, r0, r1
   35668:	ldr	r1, [sp, #44]	; 0x2c
   3566c:	str	r0, [sp, #60]	; 0x3c
   35670:	mov	r0, #0
   35674:	add	r8, r8, r1
   35678:	cmp	r8, r3
   3567c:	blt	3555c <GetDataSlab+0x13040>
   35680:	b	242ac <GetDataSlab+0x1d90>
   35684:	ldr	r0, [sp, #56]	; 0x38
   35688:	ldr	r9, [sp, #48]	; 0x30
   3568c:	cmp	r0, #1
   35690:	blt	242a8 <GetDataSlab+0x1d8c>
   35694:	ldr	r0, [sp, #44]	; 0x2c
   35698:	add	sl, r8, #4
   3569c:	add	ip, ip, #4
   356a0:	lsl	r8, r2, #2
   356a4:	mls	r0, r9, r2, r0
   356a8:	str	r0, [sp, #44]	; 0x2c
   356ac:	add	r0, sp, #104	; 0x68
   356b0:	orr	r1, r0, #4
   356b4:	sub	r0, fp, #72	; 0x48
   356b8:	orr	r0, r0, #4
   356bc:	str	r0, [sp, #32]
   356c0:	mul	r0, r9, r2
   356c4:	str	r0, [sp, #36]	; 0x24
   356c8:	lsl	r0, r9, #1
   356cc:	str	r0, [sp, #40]	; 0x28
   356d0:	mov	r0, #0
   356d4:	str	r0, [sp, #52]	; 0x34
   356d8:	ldr	r0, [fp, #12]
   356dc:	cmp	r9, #1
   356e0:	ldr	r0, [r0]
   356e4:	blt	35730 <GetDataSlab+0x13214>
   356e8:	ldr	r2, [sp, #36]	; 0x24
   356ec:	mov	r4, ip
   356f0:	mov	ip, r9
   356f4:	ldr	r9, [sp, #60]	; 0x3c
   356f8:	add	r5, lr, r0, lsl #2
   356fc:	mov	r7, r2
   35700:	add	r2, r2, r3
   35704:	add	r3, lr, r7, lsl #2
   35708:	ldr	r6, [r5], r8
   3570c:	subs	ip, ip, #1
   35710:	strh	r6, [r9], #2
   35714:	bne	35708 <GetDataSlab+0x131ec>
   35718:	ldr	r9, [sp, #48]	; 0x30
   3571c:	add	r2, r2, r0
   35720:	mov	lr, r3
   35724:	add	r5, sp, #64	; 0x40
   35728:	mov	ip, r4
   3572c:	b	35738 <GetDataSlab+0x1321c>
   35730:	add	r2, r0, r3
   35734:	add	r5, sp, #64	; 0x40
   35738:	ldr	r3, [sp, #44]	; 0x2c
   3573c:	sub	r0, r3, r0
   35740:	add	lr, lr, r3, lsl #2
   35744:	add	r3, r2, r0
   35748:	ldr	r0, [fp, #24]
   3574c:	cmp	r0, #2
   35750:	blt	357f8 <GetDataSlab+0x132dc>
   35754:	mov	r2, #0
   35758:	mov	r0, r2
   3575c:	ldr	r2, [r1, r2, lsl #2]
   35760:	add	r2, r2, #1
   35764:	str	r2, [r1, r0, lsl #2]
   35768:	ldr	r6, [sl, r0, lsl #2]
   3576c:	sdiv	r4, r2, r6
   35770:	mls	r2, r4, r6, r2
   35774:	cmp	r2, #0
   35778:	bne	357e8 <GetDataSlab+0x132cc>
   3577c:	mov	r2, #0
   35780:	str	r2, [r1, r0, lsl #2]
   35784:	add	r2, r5, r0, lsl #2
   35788:	ldr	r2, [r2, #4]
   3578c:	sdiv	r6, r3, r2
   35790:	mls	r6, r6, r2, r3
   35794:	cmp	r6, #0
   35798:	beq	357b4 <GetDataSlab+0x13298>
   3579c:	ldr	r4, [r5, r0, lsl #2]
   357a0:	ldr	r7, [ip, r0, lsl #2]
   357a4:	sub	r2, r2, r6
   357a8:	mla	r2, r7, r4, r2
   357ac:	add	r3, r2, r3
   357b0:	b	357cc <GetDataSlab+0x132b0>
   357b4:	ldr	r2, [ip, r0, lsl #2]
   357b8:	cmp	r2, #0
   357bc:	beq	357d0 <GetDataSlab+0x132b4>
   357c0:	ldr	r7, [r5, r0, lsl #2]
   357c4:	mla	r3, r7, r2, r3
   357c8:	mul	r2, r7, r2
   357cc:	add	lr, lr, r2, lsl #2
   357d0:	ldr	r7, [fp, #24]
   357d4:	add	r2, r0, #1
   357d8:	add	r0, r0, #2
   357dc:	cmp	r0, r7
   357e0:	blt	35758 <GetDataSlab+0x1323c>
   357e4:	b	357f8 <GetDataSlab+0x132dc>
   357e8:	ldr	r2, [sp, #32]
   357ec:	ldr	r0, [r2, r0, lsl #2]
   357f0:	add	lr, lr, r0, lsl #2
   357f4:	add	r3, r0, r3
   357f8:	ldr	r0, [sp, #60]	; 0x3c
   357fc:	ldr	r2, [sp, #40]	; 0x28
   35800:	ldr	r4, [sp, #52]	; 0x34
   35804:	add	r0, r0, r2
   35808:	ldr	r2, [sp, #56]	; 0x38
   3580c:	add	r4, r4, r9
   35810:	str	r0, [sp, #60]	; 0x3c
   35814:	mov	r0, #0
   35818:	str	r4, [sp, #52]	; 0x34
   3581c:	cmp	r4, r2
   35820:	blt	356d8 <GetDataSlab+0x131bc>
   35824:	b	242ac <GetDataSlab+0x1d90>
   35828:	ldr	r0, [sp, #56]	; 0x38
   3582c:	ldr	r9, [sp, #48]	; 0x30
   35830:	cmp	r0, #1
   35834:	blt	242a8 <GetDataSlab+0x1d8c>
   35838:	ldr	r0, [sp, #44]	; 0x2c
   3583c:	add	sl, r8, #4
   35840:	add	ip, ip, #4
   35844:	lsl	r8, r2, #2
   35848:	mls	r0, r9, r2, r0
   3584c:	str	r0, [sp, #44]	; 0x2c
   35850:	add	r0, sp, #104	; 0x68
   35854:	orr	r1, r0, #4
   35858:	sub	r0, fp, #72	; 0x48
   3585c:	orr	r0, r0, #4
   35860:	str	r0, [sp, #32]
   35864:	mul	r0, r9, r2
   35868:	str	r0, [sp, #36]	; 0x24
   3586c:	lsl	r0, r9, #1
   35870:	str	r0, [sp, #40]	; 0x28
   35874:	mov	r0, #0
   35878:	str	r0, [sp, #52]	; 0x34
   3587c:	ldr	r0, [fp, #12]
   35880:	cmp	r9, #1
   35884:	ldr	r0, [r0]
   35888:	blt	358d4 <GetDataSlab+0x133b8>
   3588c:	ldr	r2, [sp, #36]	; 0x24
   35890:	mov	r4, ip
   35894:	mov	ip, r9
   35898:	ldr	r9, [sp, #60]	; 0x3c
   3589c:	add	r5, lr, r0, lsl #2
   358a0:	mov	r7, r2
   358a4:	add	r2, r2, r3
   358a8:	add	r3, lr, r7, lsl #2
   358ac:	ldr	r6, [r5], r8
   358b0:	subs	ip, ip, #1
   358b4:	strh	r6, [r9], #2
   358b8:	bne	358ac <GetDataSlab+0x13390>
   358bc:	ldr	r9, [sp, #48]	; 0x30
   358c0:	add	r2, r2, r0
   358c4:	mov	lr, r3
   358c8:	add	r5, sp, #64	; 0x40
   358cc:	mov	ip, r4
   358d0:	b	358dc <GetDataSlab+0x133c0>
   358d4:	add	r2, r0, r3
   358d8:	add	r5, sp, #64	; 0x40
   358dc:	ldr	r3, [sp, #44]	; 0x2c
   358e0:	sub	r0, r3, r0
   358e4:	add	lr, lr, r3, lsl #2
   358e8:	add	r3, r2, r0
   358ec:	ldr	r0, [fp, #24]
   358f0:	cmp	r0, #2
   358f4:	blt	3599c <GetDataSlab+0x13480>
   358f8:	mov	r2, #0
   358fc:	mov	r0, r2
   35900:	ldr	r2, [r1, r2, lsl #2]
   35904:	add	r2, r2, #1
   35908:	str	r2, [r1, r0, lsl #2]
   3590c:	ldr	r6, [sl, r0, lsl #2]
   35910:	sdiv	r4, r2, r6
   35914:	mls	r2, r4, r6, r2
   35918:	cmp	r2, #0
   3591c:	bne	3598c <GetDataSlab+0x13470>
   35920:	mov	r2, #0
   35924:	str	r2, [r1, r0, lsl #2]
   35928:	add	r2, r5, r0, lsl #2
   3592c:	ldr	r2, [r2, #4]
   35930:	sdiv	r6, r3, r2
   35934:	mls	r6, r6, r2, r3
   35938:	cmp	r6, #0
   3593c:	beq	35958 <GetDataSlab+0x1343c>
   35940:	ldr	r4, [r5, r0, lsl #2]
   35944:	ldr	r7, [ip, r0, lsl #2]
   35948:	sub	r2, r2, r6
   3594c:	mla	r2, r7, r4, r2
   35950:	add	r3, r2, r3
   35954:	b	35970 <GetDataSlab+0x13454>
   35958:	ldr	r2, [ip, r0, lsl #2]
   3595c:	cmp	r2, #0
   35960:	beq	35974 <GetDataSlab+0x13458>
   35964:	ldr	r7, [r5, r0, lsl #2]
   35968:	mla	r3, r7, r2, r3
   3596c:	mul	r2, r7, r2
   35970:	add	lr, lr, r2, lsl #2
   35974:	ldr	r7, [fp, #24]
   35978:	add	r2, r0, #1
   3597c:	add	r0, r0, #2
   35980:	cmp	r0, r7
   35984:	blt	358fc <GetDataSlab+0x133e0>
   35988:	b	3599c <GetDataSlab+0x13480>
   3598c:	ldr	r2, [sp, #32]
   35990:	ldr	r0, [r2, r0, lsl #2]
   35994:	add	lr, lr, r0, lsl #2
   35998:	add	r3, r0, r3
   3599c:	ldr	r0, [sp, #60]	; 0x3c
   359a0:	ldr	r2, [sp, #40]	; 0x28
   359a4:	ldr	r4, [sp, #52]	; 0x34
   359a8:	add	r0, r0, r2
   359ac:	ldr	r2, [sp, #56]	; 0x38
   359b0:	add	r4, r4, r9
   359b4:	str	r0, [sp, #60]	; 0x3c
   359b8:	mov	r0, #0
   359bc:	str	r4, [sp, #52]	; 0x34
   359c0:	cmp	r4, r2
   359c4:	blt	3587c <GetDataSlab+0x13360>
   359c8:	b	242ac <GetDataSlab+0x1d90>
   359cc:	ldr	r0, [sp, #48]	; 0x30
   359d0:	ldr	r1, [sp, #44]	; 0x2c
   359d4:	cmp	r0, #1
   359d8:	blt	242a8 <GetDataSlab+0x1d8c>
   359dc:	ldr	r0, [sp, #40]	; 0x28
   359e0:	ldr	r3, [ip], #4
   359e4:	mov	sl, #0
   359e8:	mls	r0, r1, r8, r0
   359ec:	str	ip, [sp, #56]	; 0x38
   359f0:	str	r3, [sp, #52]	; 0x34
   359f4:	sub	r0, r0, r3
   359f8:	str	r0, [sp, #40]	; 0x28
   359fc:	ldr	r0, [fp, #20]
   35a00:	add	lr, r0, #4
   35a04:	add	r0, sp, #104	; 0x68
   35a08:	orr	r6, r0, #4
   35a0c:	orr	r0, r4, #4
   35a10:	lsl	r4, r8, #2
   35a14:	str	r0, [sp, #28]
   35a18:	mla	r0, r1, r8, r3
   35a1c:	mov	r8, #0
   35a20:	str	r0, [sp, #32]
   35a24:	lsl	r0, r1, #1
   35a28:	str	r0, [sp, #36]	; 0x24
   35a2c:	ldr	r0, [sp, #52]	; 0x34
   35a30:	cmp	r1, #1
   35a34:	blt	35a68 <GetDataSlab+0x1354c>
   35a38:	ldr	r0, [sp, #52]	; 0x34
   35a3c:	ldr	r1, [sp, #44]	; 0x2c
   35a40:	ldr	ip, [sp, #60]	; 0x3c
   35a44:	add	r0, r9, r0, lsl #2
   35a48:	vldr	s0, [r0]
   35a4c:	add	r0, r0, r4
   35a50:	subs	r1, r1, #1
   35a54:	vcvt.s32.f32	s0, s0
   35a58:	vmov	r3, s0
   35a5c:	strh	r3, [ip], #2
   35a60:	bne	35a48 <GetDataSlab+0x1352c>
   35a64:	ldr	r0, [sp, #32]
   35a68:	ldr	r3, [sp, #40]	; 0x28
   35a6c:	add	r1, r9, r3, lsl #2
   35a70:	add	r9, r1, r0, lsl #2
   35a74:	add	r0, r0, r2
   35a78:	add	r2, r0, r3
   35a7c:	ldr	r0, [fp, #24]
   35a80:	cmp	r0, #2
   35a84:	blt	35b34 <GetDataSlab+0x13618>
   35a88:	ldr	ip, [sp, #56]	; 0x38
   35a8c:	mov	r1, #0
   35a90:	mov	r0, r1
   35a94:	ldr	r1, [r6, r1, lsl #2]
   35a98:	add	r1, r1, #1
   35a9c:	str	r1, [r6, r0, lsl #2]
   35aa0:	ldr	r3, [lr, r0, lsl #2]
   35aa4:	sdiv	r7, r1, r3
   35aa8:	mls	r1, r7, r3, r1
   35aac:	cmp	r1, #0
   35ab0:	bne	35b24 <GetDataSlab+0x13608>
   35ab4:	add	r5, sp, #64	; 0x40
   35ab8:	str	sl, [r6, r0, lsl #2]
   35abc:	add	r1, r5, r0, lsl #2
   35ac0:	ldr	r1, [r1, #4]
   35ac4:	sdiv	r3, r2, r1
   35ac8:	mls	r3, r3, r1, r2
   35acc:	cmp	r3, #0
   35ad0:	beq	35aec <GetDataSlab+0x135d0>
   35ad4:	ldr	r7, [r5, r0, lsl #2]
   35ad8:	ldr	r5, [ip, r0, lsl #2]
   35adc:	sub	r1, r1, r3
   35ae0:	mla	r1, r5, r7, r1
   35ae4:	add	r2, r1, r2
   35ae8:	b	35b08 <GetDataSlab+0x135ec>
   35aec:	ldr	r1, [ip, r0, lsl #2]
   35af0:	cmp	r1, #0
   35af4:	beq	35b0c <GetDataSlab+0x135f0>
   35af8:	add	r3, sp, #64	; 0x40
   35afc:	ldr	r3, [r3, r0, lsl #2]
   35b00:	mla	r2, r3, r1, r2
   35b04:	mul	r1, r3, r1
   35b08:	add	r9, r9, r1, lsl #2
   35b0c:	ldr	r3, [fp, #24]
   35b10:	add	r1, r0, #1
   35b14:	add	r0, r0, #2
   35b18:	cmp	r0, r3
   35b1c:	blt	35a90 <GetDataSlab+0x13574>
   35b20:	b	35b34 <GetDataSlab+0x13618>
   35b24:	ldr	r1, [sp, #28]
   35b28:	ldr	r0, [r1, r0, lsl #2]
   35b2c:	add	r9, r9, r0, lsl #2
   35b30:	add	r2, r0, r2
   35b34:	ldr	r0, [sp, #60]	; 0x3c
   35b38:	ldr	r1, [sp, #36]	; 0x24
   35b3c:	ldr	r3, [sp, #48]	; 0x30
   35b40:	add	r0, r0, r1
   35b44:	ldr	r1, [sp, #44]	; 0x2c
   35b48:	str	r0, [sp, #60]	; 0x3c
   35b4c:	mov	r0, #0
   35b50:	add	r8, r8, r1
   35b54:	cmp	r8, r3
   35b58:	blt	35a2c <GetDataSlab+0x13510>
   35b5c:	b	242ac <GetDataSlab+0x1d90>
   35b60:	ldr	r0, [sp, #48]	; 0x30
   35b64:	ldr	r1, [sp, #44]	; 0x2c
   35b68:	cmp	r0, #1
   35b6c:	blt	242a8 <GetDataSlab+0x1d8c>
   35b70:	ldr	r0, [sp, #40]	; 0x28
   35b74:	ldr	r3, [ip], #4
   35b78:	mov	sl, #0
   35b7c:	mls	r0, r1, r8, r0
   35b80:	str	ip, [sp, #56]	; 0x38
   35b84:	str	r3, [sp, #52]	; 0x34
   35b88:	sub	r0, r0, r3
   35b8c:	str	r0, [sp, #40]	; 0x28
   35b90:	ldr	r0, [fp, #20]
   35b94:	add	lr, r0, #4
   35b98:	add	r0, sp, #104	; 0x68
   35b9c:	orr	r6, r0, #4
   35ba0:	orr	r0, r4, #4
   35ba4:	lsl	r4, r8, #3
   35ba8:	str	r0, [sp, #28]
   35bac:	mla	r0, r1, r8, r3
   35bb0:	mov	r8, #0
   35bb4:	str	r0, [sp, #32]
   35bb8:	lsl	r0, r1, #1
   35bbc:	str	r0, [sp, #36]	; 0x24
   35bc0:	ldr	r0, [sp, #52]	; 0x34
   35bc4:	cmp	r1, #1
   35bc8:	blt	35bfc <GetDataSlab+0x136e0>
   35bcc:	ldr	r0, [sp, #52]	; 0x34
   35bd0:	ldr	r1, [sp, #44]	; 0x2c
   35bd4:	ldr	ip, [sp, #60]	; 0x3c
   35bd8:	add	r0, r9, r0, lsl #3
   35bdc:	vldr	d16, [r0]
   35be0:	add	r0, r0, r4
   35be4:	subs	r1, r1, #1
   35be8:	vcvt.s32.f64	s0, d16
   35bec:	vmov	r3, s0
   35bf0:	strh	r3, [ip], #2
   35bf4:	bne	35bdc <GetDataSlab+0x136c0>
   35bf8:	ldr	r0, [sp, #32]
   35bfc:	ldr	r3, [sp, #40]	; 0x28
   35c00:	add	r1, r9, r3, lsl #3
   35c04:	add	r9, r1, r0, lsl #3
   35c08:	add	r0, r0, r2
   35c0c:	add	r2, r0, r3
   35c10:	ldr	r0, [fp, #24]
   35c14:	cmp	r0, #2
   35c18:	blt	35cc8 <GetDataSlab+0x137ac>
   35c1c:	ldr	ip, [sp, #56]	; 0x38
   35c20:	mov	r1, #0
   35c24:	mov	r0, r1
   35c28:	ldr	r1, [r6, r1, lsl #2]
   35c2c:	add	r1, r1, #1
   35c30:	str	r1, [r6, r0, lsl #2]
   35c34:	ldr	r3, [lr, r0, lsl #2]
   35c38:	sdiv	r7, r1, r3
   35c3c:	mls	r1, r7, r3, r1
   35c40:	cmp	r1, #0
   35c44:	bne	35cb8 <GetDataSlab+0x1379c>
   35c48:	add	r5, sp, #64	; 0x40
   35c4c:	str	sl, [r6, r0, lsl #2]
   35c50:	add	r1, r5, r0, lsl #2
   35c54:	ldr	r1, [r1, #4]
   35c58:	sdiv	r3, r2, r1
   35c5c:	mls	r3, r3, r1, r2
   35c60:	cmp	r3, #0
   35c64:	beq	35c80 <GetDataSlab+0x13764>
   35c68:	ldr	r7, [r5, r0, lsl #2]
   35c6c:	ldr	r5, [ip, r0, lsl #2]
   35c70:	sub	r1, r1, r3
   35c74:	mla	r1, r5, r7, r1
   35c78:	add	r2, r1, r2
   35c7c:	b	35c9c <GetDataSlab+0x13780>
   35c80:	ldr	r1, [ip, r0, lsl #2]
   35c84:	cmp	r1, #0
   35c88:	beq	35ca0 <GetDataSlab+0x13784>
   35c8c:	add	r3, sp, #64	; 0x40
   35c90:	ldr	r3, [r3, r0, lsl #2]
   35c94:	mla	r2, r3, r1, r2
   35c98:	mul	r1, r3, r1
   35c9c:	add	r9, r9, r1, lsl #3
   35ca0:	ldr	r3, [fp, #24]
   35ca4:	add	r1, r0, #1
   35ca8:	add	r0, r0, #2
   35cac:	cmp	r0, r3
   35cb0:	blt	35c24 <GetDataSlab+0x13708>
   35cb4:	b	35cc8 <GetDataSlab+0x137ac>
   35cb8:	ldr	r1, [sp, #28]
   35cbc:	ldr	r0, [r1, r0, lsl #2]
   35cc0:	add	r9, r9, r0, lsl #3
   35cc4:	add	r2, r0, r2
   35cc8:	ldr	r0, [sp, #60]	; 0x3c
   35ccc:	ldr	r1, [sp, #36]	; 0x24
   35cd0:	ldr	r3, [sp, #48]	; 0x30
   35cd4:	add	r0, r0, r1
   35cd8:	ldr	r1, [sp, #44]	; 0x2c
   35cdc:	str	r0, [sp, #60]	; 0x3c
   35ce0:	mov	r0, #0
   35ce4:	add	r8, r8, r1
   35ce8:	cmp	r8, r3
   35cec:	blt	35bc0 <GetDataSlab+0x136a4>
   35cf0:	b	242ac <GetDataSlab+0x1d90>
   35cf4:	ldr	r0, [sp, #56]	; 0x38
   35cf8:	ldr	r3, [fp, #20]
   35cfc:	ldr	r8, [sp, #40]	; 0x28
   35d00:	cmp	r0, #1
   35d04:	blt	35e7c <GetDataSlab+0x13960>
   35d08:	ldr	r0, [sp, #44]	; 0x2c
   35d0c:	mov	r2, lr
   35d10:	mov	lr, ip
   35d14:	add	ip, r3, #4
   35d18:	mov	sl, #0
   35d1c:	ldr	r4, [lr], #4
   35d20:	str	r2, [sp, #44]	; 0x2c
   35d24:	mls	r0, r8, r5, r0
   35d28:	sub	r0, r0, r4
   35d2c:	str	r4, [sp, #36]	; 0x24
   35d30:	str	r0, [sp, #32]
   35d34:	add	r0, sp, #104	; 0x68
   35d38:	orr	r6, r0, #4
   35d3c:	sub	r0, fp, #72	; 0x48
   35d40:	orr	r0, r0, #4
   35d44:	str	r0, [sp, #20]
   35d48:	mla	r0, r8, r5, r4
   35d4c:	lsl	r5, r5, #3
   35d50:	str	r0, [sp, #24]
   35d54:	lsl	r0, r8, #1
   35d58:	str	r0, [sp, #28]
   35d5c:	ldr	r0, [sp, #36]	; 0x24
   35d60:	cmp	r8, #1
   35d64:	blt	35d90 <GetDataSlab+0x13874>
   35d68:	ldr	r0, [sp, #36]	; 0x24
   35d6c:	mov	r2, r8
   35d70:	ldr	r8, [sp, #44]	; 0x2c
   35d74:	add	r0, r9, r0, lsl #3
   35d78:	ldrh	r7, [r0], r5
   35d7c:	subs	r2, r2, #1
   35d80:	strh	r7, [r8], #2
   35d84:	bne	35d78 <GetDataSlab+0x1385c>
   35d88:	ldr	r0, [sp, #24]
   35d8c:	ldr	r8, [sp, #40]	; 0x28
   35d90:	ldr	r3, [sp, #32]
   35d94:	add	r2, r9, r3, lsl #3
   35d98:	add	r9, r2, r0, lsl #3
   35d9c:	add	r0, r0, r1
   35da0:	add	r1, r0, r3
   35da4:	ldr	r0, [fp, #24]
   35da8:	cmp	r0, #2
   35dac:	blt	35e5c <GetDataSlab+0x13940>
   35db0:	mov	r2, #0
   35db4:	mov	r0, r2
   35db8:	ldr	r2, [r6, r2, lsl #2]
   35dbc:	add	r2, r2, #1
   35dc0:	str	r2, [r6, r0, lsl #2]
   35dc4:	ldr	r7, [ip, r0, lsl #2]
   35dc8:	sdiv	r4, r2, r7
   35dcc:	mls	r2, r4, r7, r2
   35dd0:	cmp	r2, #0
   35dd4:	bne	35e4c <GetDataSlab+0x13930>
   35dd8:	mov	r2, #0
   35ddc:	add	r3, sp, #64	; 0x40
   35de0:	str	r2, [r6, r0, lsl #2]
   35de4:	add	r2, r3, r0, lsl #2
   35de8:	ldr	r2, [r2, #4]
   35dec:	sdiv	r4, r1, r2
   35df0:	mls	r7, r4, r2, r1
   35df4:	cmp	r7, #0
   35df8:	beq	35e14 <GetDataSlab+0x138f8>
   35dfc:	ldr	r4, [r3, r0, lsl #2]
   35e00:	ldr	r3, [lr, r0, lsl #2]
   35e04:	sub	r2, r2, r7
   35e08:	mla	r2, r3, r4, r2
   35e0c:	add	r1, r2, r1
   35e10:	b	35e30 <GetDataSlab+0x13914>
   35e14:	ldr	r2, [lr, r0, lsl #2]
   35e18:	cmp	r2, #0
   35e1c:	beq	35e34 <GetDataSlab+0x13918>
   35e20:	add	r3, sp, #64	; 0x40
   35e24:	ldr	r3, [r3, r0, lsl #2]
   35e28:	mla	r1, r3, r2, r1
   35e2c:	mul	r2, r3, r2
   35e30:	add	r9, r9, r2, lsl #3
   35e34:	ldr	r3, [fp, #24]
   35e38:	add	r2, r0, #1
   35e3c:	add	r0, r0, #2
   35e40:	cmp	r0, r3
   35e44:	blt	35db4 <GetDataSlab+0x13898>
   35e48:	b	35e5c <GetDataSlab+0x13940>
   35e4c:	ldr	r2, [sp, #20]
   35e50:	ldr	r0, [r2, r0, lsl #2]
   35e54:	add	r9, r9, r0, lsl #3
   35e58:	add	r1, r0, r1
   35e5c:	ldr	r0, [sp, #28]
   35e60:	ldr	r2, [sp, #44]	; 0x2c
   35e64:	add	sl, sl, r8
   35e68:	add	r2, r2, r0
   35e6c:	ldr	r0, [sp, #56]	; 0x38
   35e70:	str	r2, [sp, #44]	; 0x2c
   35e74:	cmp	sl, r0
   35e78:	blt	35d5c <GetDataSlab+0x13840>
   35e7c:	ldr	r3, [sp, #48]	; 0x30
   35e80:	mov	r0, #0
   35e84:	cmp	r3, #13
   35e88:	bne	242ac <GetDataSlab+0x1d90>
   35e8c:	ldr	sl, [fp, #16]
   35e90:	ldr	r9, [fp, #8]
   35e94:	ldr	lr, [fp, #12]
   35e98:	mov	r2, #0
   35e9c:	add	ip, sp, #64	; 0x40
   35ea0:	sub	r3, fp, #72	; 0x48
   35ea4:	ldr	r0, [sl]
   35ea8:	str	r0, [sp, #28]
   35eac:	sub	r0, r0, #1
   35eb0:	str	r0, [fp, #-72]	; 0xffffffb8
   35eb4:	ldr	r0, [r9]
   35eb8:	str	r0, [sp, #40]	; 0x28
   35ebc:	str	r0, [sp, #64]	; 0x40
   35ec0:	ldr	r0, [fp, #20]
   35ec4:	ldr	r1, [r0]
   35ec8:	ldr	r0, [fp, #24]
   35ecc:	cmp	r0, #2
   35ed0:	str	r1, [sp, #44]	; 0x2c
   35ed4:	str	r1, [sp, #48]	; 0x30
   35ed8:	blt	35f70 <GetDataSlab+0x13a54>
   35edc:	ldr	r6, [sp, #40]	; 0x28
   35ee0:	ldr	r0, [sp, #44]	; 0x2c
   35ee4:	mov	r1, #1
   35ee8:	mov	r2, #0
   35eec:	mov	r7, r9
   35ef0:	mov	r5, r6
   35ef4:	str	r0, [sp, #48]	; 0x30
   35ef8:	ldr	r0, [sl, r1, lsl #2]
   35efc:	str	r6, [ip, r1, lsl #2]
   35f00:	sub	r0, r0, #1
   35f04:	str	r0, [r3, r1, lsl #2]
   35f08:	mov	r3, #0
   35f0c:	ldr	r8, [r9, r1, lsl #2]
   35f10:	mov	r4, r8
   35f14:	mul	r6, r4, r6
   35f18:	ldr	r4, [r7, -r3, lsl #2]
   35f1c:	add	r3, r3, #1
   35f20:	cmp	r1, r3
   35f24:	mul	r0, r0, r4
   35f28:	bne	35f14 <GetDataSlab+0x139f8>
   35f2c:	sub	r3, fp, #72	; 0x48
   35f30:	str	r6, [ip, r1, lsl #2]
   35f34:	ldr	r4, [sp, #48]	; 0x30
   35f38:	add	r7, r7, #4
   35f3c:	str	r0, [r3, r1, lsl #2]
   35f40:	ldr	r0, [lr, r1, lsl #2]
   35f44:	mla	r2, r0, r5, r2
   35f48:	ldr	r0, [fp, #20]
   35f4c:	mov	r5, r6
   35f50:	mov	r6, r8
   35f54:	ldr	r0, [r0, r1, lsl #2]
   35f58:	add	r1, r1, #1
   35f5c:	mul	r4, r0, r4
   35f60:	ldr	r0, [fp, #24]
   35f64:	str	r4, [sp, #48]	; 0x30
   35f68:	cmp	r1, r0
   35f6c:	bne	35ef8 <GetDataSlab+0x139dc>
   35f70:	ldr	r0, [sp, #52]	; 0x34
   35f74:	ldr	r5, [sp, #28]
   35f78:	add	r9, r0, r2, lsl #3
   35f7c:	cmp	r5, #1
   35f80:	bne	3b3a0 <GetDataSlab+0x18e84>
   35f84:	ldr	r0, [sp, #48]	; 0x30
   35f88:	cmp	r0, #1
   35f8c:	ldr	r0, [fp, #20]
   35f90:	blt	242a8 <GetDataSlab+0x1d8c>
   35f94:	ldr	ip, [sp, #44]	; 0x2c
   35f98:	add	sl, r0, #4
   35f9c:	add	r0, sp, #104	; 0x68
   35fa0:	mov	r8, #0
   35fa4:	orr	r6, r0, #4
   35fa8:	sub	r0, fp, #72	; 0x48
   35fac:	orr	r0, r0, #4
   35fb0:	str	r0, [sp, #32]
   35fb4:	lsl	r0, ip, #1
   35fb8:	str	r0, [sp, #52]	; 0x34
   35fbc:	ldr	r0, [lr], #4
   35fc0:	str	lr, [sp, #56]	; 0x38
   35fc4:	mov	lr, #0
   35fc8:	str	r0, [sp, #36]	; 0x24
   35fcc:	ldr	r5, [sp, #56]	; 0x38
   35fd0:	cmp	ip, #1
   35fd4:	blt	35ff4 <GetDataSlab+0x13ad8>
   35fd8:	ldr	r0, [sp, #36]	; 0x24
   35fdc:	ldr	r3, [sp, #60]	; 0x3c
   35fe0:	add	r0, r9, r0, lsl #3
   35fe4:	ldrh	r4, [r0], #8
   35fe8:	subs	ip, ip, #1
   35fec:	strh	r4, [r3], #2
   35ff0:	bne	35fe4 <GetDataSlab+0x13ac8>
   35ff4:	ldr	r0, [sp, #40]	; 0x28
   35ff8:	add	ip, sp, #64	; 0x40
   35ffc:	add	r9, r9, r0, lsl #3
   36000:	add	r2, r2, r0
   36004:	ldr	r0, [fp, #24]
   36008:	cmp	r0, #2
   3600c:	blt	360b0 <GetDataSlab+0x13b94>
   36010:	mov	r3, #0
   36014:	mov	r0, r3
   36018:	ldr	r3, [r6, r3, lsl #2]
   3601c:	add	r3, r3, #1
   36020:	str	r3, [r6, r0, lsl #2]
   36024:	ldr	r4, [sl, r0, lsl #2]
   36028:	sdiv	r1, r3, r4
   3602c:	mls	r1, r1, r4, r3
   36030:	cmp	r1, #0
   36034:	bne	360a0 <GetDataSlab+0x13b84>
   36038:	add	r1, ip, r0, lsl #2
   3603c:	str	r8, [r6, r0, lsl #2]
   36040:	ldr	r3, [r1, #4]
   36044:	sdiv	r1, r2, r3
   36048:	mls	r4, r1, r3, r2
   3604c:	cmp	r4, #0
   36050:	beq	3606c <GetDataSlab+0x13b50>
   36054:	ldr	r1, [ip, r0, lsl #2]
   36058:	ldr	r7, [r5, r0, lsl #2]
   3605c:	sub	r3, r3, r4
   36060:	mla	r1, r7, r1, r3
   36064:	add	r2, r1, r2
   36068:	b	36084 <GetDataSlab+0x13b68>
   3606c:	ldr	r3, [r5, r0, lsl #2]
   36070:	cmp	r3, #0
   36074:	beq	36088 <GetDataSlab+0x13b6c>
   36078:	ldr	r1, [ip, r0, lsl #2]
   3607c:	mla	r2, r1, r3, r2
   36080:	mul	r1, r1, r3
   36084:	add	r9, r9, r1, lsl #3
   36088:	ldr	r1, [fp, #24]
   3608c:	add	r3, r0, #1
   36090:	add	r0, r0, #2
   36094:	cmp	r0, r1
   36098:	blt	36014 <GetDataSlab+0x13af8>
   3609c:	b	360b0 <GetDataSlab+0x13b94>
   360a0:	ldr	r1, [sp, #32]
   360a4:	ldr	r0, [r1, r0, lsl #2]
   360a8:	add	r9, r9, r0, lsl #3
   360ac:	add	r2, r0, r2
   360b0:	ldr	r0, [sp, #60]	; 0x3c
   360b4:	ldr	r1, [sp, #52]	; 0x34
   360b8:	ldr	ip, [sp, #44]	; 0x2c
   360bc:	add	r0, r0, r1
   360c0:	ldr	r1, [sp, #48]	; 0x30
   360c4:	add	lr, lr, ip
   360c8:	str	r0, [sp, #60]	; 0x3c
   360cc:	mov	r0, #0
   360d0:	cmp	lr, r1
   360d4:	blt	35fd0 <GetDataSlab+0x13ab4>
   360d8:	b	242ac <GetDataSlab+0x1d90>
   360dc:	ldr	r0, [sp, #56]	; 0x38
   360e0:	ldr	r7, [sp, #48]	; 0x30
   360e4:	cmp	r0, #1
   360e8:	blt	242a8 <GetDataSlab+0x1d8c>
   360ec:	ldr	r0, [sp, #44]	; 0x2c
   360f0:	add	ip, ip, #4
   360f4:	mov	sl, #0
   360f8:	mls	r0, r7, r8, r0
   360fc:	str	r0, [sp, #52]	; 0x34
   36100:	mul	r0, r7, r8
   36104:	str	r0, [sp, #40]	; 0x28
   36108:	ldr	r0, [fp, #20]
   3610c:	add	r9, r0, #4
   36110:	add	r0, sp, #104	; 0x68
   36114:	orr	r2, r0, #4
   36118:	orr	r0, r1, #4
   3611c:	str	r0, [sp, #36]	; 0x24
   36120:	lsl	r0, r7, #1
   36124:	str	r0, [sp, #44]	; 0x2c
   36128:	ldr	r0, [fp, #12]
   3612c:	cmp	r7, #1
   36130:	ldr	r0, [r0]
   36134:	blt	36170 <GetDataSlab+0x13c54>
   36138:	mov	r1, r7
   3613c:	ldr	r7, [sp, #40]	; 0x28
   36140:	ldr	lr, [sp, #60]	; 0x3c
   36144:	add	r4, r7, r3
   36148:	add	r7, r5, r7
   3614c:	add	r5, r5, r0
   36150:	mov	r3, r1
   36154:	ldrb	r6, [r5], r8
   36158:	subs	r3, r3, #1
   3615c:	strh	r6, [lr], #2
   36160:	bne	36154 <GetDataSlab+0x13c38>
   36164:	add	r3, r4, r0
   36168:	mov	r5, r7
   3616c:	b	36174 <GetDataSlab+0x13c58>
   36170:	add	r3, r0, r3
   36174:	ldr	r1, [sp, #52]	; 0x34
   36178:	ldr	lr, [sp, #60]	; 0x3c
   3617c:	sub	r0, r1, r0
   36180:	add	r5, r5, r1
   36184:	add	r3, r3, r0
   36188:	ldr	r0, [fp, #24]
   3618c:	cmp	r0, #2
   36190:	blt	3623c <GetDataSlab+0x13d20>
   36194:	mov	r4, #0
   36198:	ldr	r6, [r2, r4, lsl #2]
   3619c:	mov	r0, r4
   361a0:	add	r6, r6, #1
   361a4:	str	r6, [r2, r4, lsl #2]
   361a8:	ldr	r4, [r9, r4, lsl #2]
   361ac:	sdiv	r7, r6, r4
   361b0:	mls	r7, r7, r4, r6
   361b4:	cmp	r7, #0
   361b8:	bne	3622c <GetDataSlab+0x13d10>
   361bc:	mov	r1, #0
   361c0:	str	r1, [r2, r0, lsl #2]
   361c4:	add	r1, sp, #64	; 0x40
   361c8:	add	r7, r1, r0, lsl #2
   361cc:	ldr	r4, [r7, #4]
   361d0:	sdiv	r7, r3, r4
   361d4:	mls	r6, r7, r4, r3
   361d8:	cmp	r6, #0
   361dc:	beq	361fc <GetDataSlab+0x13ce0>
   361e0:	ldr	r7, [r1, r0, lsl #2]
   361e4:	ldr	r1, [ip, r0, lsl #2]
   361e8:	sub	r6, r4, r6
   361ec:	mla	r1, r1, r7, r6
   361f0:	add	r3, r1, r3
   361f4:	add	r5, r5, r1
   361f8:	b	36214 <GetDataSlab+0x13cf8>
   361fc:	ldr	r6, [ip, r0, lsl #2]
   36200:	cmp	r6, #0
   36204:	addne	r1, sp, #64	; 0x40
   36208:	ldrne	r1, [r1, r0, lsl #2]
   3620c:	mlane	r3, r1, r6, r3
   36210:	mlane	r5, r1, r6, r5
   36214:	ldr	r1, [fp, #24]
   36218:	add	r4, r0, #1
   3621c:	add	r0, r0, #2
   36220:	cmp	r0, r1
   36224:	blt	36198 <GetDataSlab+0x13c7c>
   36228:	b	3623c <GetDataSlab+0x13d20>
   3622c:	ldr	r1, [sp, #36]	; 0x24
   36230:	ldr	r0, [r1, r0, lsl #2]
   36234:	add	r5, r5, r0
   36238:	add	r3, r0, r3
   3623c:	ldr	r7, [sp, #48]	; 0x30
   36240:	ldr	r0, [sp, #44]	; 0x2c
   36244:	ldr	r1, [sp, #56]	; 0x38
   36248:	add	sl, sl, r7
   3624c:	add	lr, lr, r0
   36250:	mov	r0, #0
   36254:	cmp	sl, r1
   36258:	str	lr, [sp, #60]	; 0x3c
   3625c:	blt	36128 <GetDataSlab+0x13c0c>
   36260:	b	242ac <GetDataSlab+0x1d90>
   36264:	ldr	r0, [sp, #48]	; 0x30
   36268:	ldr	r1, [fp, #20]
   3626c:	cmp	r0, #1
   36270:	blt	242a8 <GetDataSlab+0x1d8c>
   36274:	ldr	r4, [sp, #44]	; 0x2c
   36278:	ldr	r0, [sp, #40]	; 0x28
   3627c:	ldr	r5, [ip], #4
   36280:	mov	r3, lr
   36284:	add	sl, r1, #4
   36288:	mov	r8, #0
   3628c:	mls	r0, r4, r6, r0
   36290:	mov	lr, ip
   36294:	mov	r1, r4
   36298:	str	r5, [sp, #56]	; 0x38
   3629c:	sub	r0, r0, r5
   362a0:	str	r0, [sp, #52]	; 0x34
   362a4:	add	r0, sp, #104	; 0x68
   362a8:	orr	r7, r0, #4
   362ac:	orr	r0, r3, #4
   362b0:	str	r0, [sp, #32]
   362b4:	mla	r0, r4, r6, r5
   362b8:	lsl	r6, r6, #1
   362bc:	str	r0, [sp, #36]	; 0x24
   362c0:	lsl	r0, r4, #1
   362c4:	str	r0, [sp, #40]	; 0x28
   362c8:	ldr	r0, [sp, #56]	; 0x38
   362cc:	cmp	r1, #1
   362d0:	blt	362f8 <GetDataSlab+0x13ddc>
   362d4:	ldr	r0, [sp, #56]	; 0x38
   362d8:	ldr	r3, [sp, #44]	; 0x2c
   362dc:	ldr	r1, [sp, #60]	; 0x3c
   362e0:	add	r0, r9, r0, lsl #1
   362e4:	ldrh	r4, [r0], r6
   362e8:	subs	r3, r3, #1
   362ec:	strh	r4, [r1], #2
   362f0:	bne	362e4 <GetDataSlab+0x13dc8>
   362f4:	ldr	r0, [sp, #36]	; 0x24
   362f8:	ldr	r3, [sp, #52]	; 0x34
   362fc:	add	r1, r9, r3, lsl #1
   36300:	add	r9, r1, r0, lsl #1
   36304:	add	r0, r0, r2
   36308:	add	r2, r0, r3
   3630c:	ldr	r0, [fp, #24]
   36310:	cmp	r0, #2
   36314:	blt	363c4 <GetDataSlab+0x13ea8>
   36318:	mov	ip, #0
   3631c:	ldr	r1, [r7, ip, lsl #2]
   36320:	mov	r0, ip
   36324:	add	r1, r1, #1
   36328:	str	r1, [r7, ip, lsl #2]
   3632c:	ldr	r3, [sl, ip, lsl #2]
   36330:	sdiv	r4, r1, r3
   36334:	mls	r1, r4, r3, r1
   36338:	cmp	r1, #0
   3633c:	bne	363b4 <GetDataSlab+0x13e98>
   36340:	mov	r1, #0
   36344:	add	r5, sp, #64	; 0x40
   36348:	str	r1, [r7, r0, lsl #2]
   3634c:	add	r1, r5, r0, lsl #2
   36350:	ldr	r1, [r1, #4]
   36354:	sdiv	r3, r2, r1
   36358:	mls	r3, r3, r1, r2
   3635c:	cmp	r3, #0
   36360:	beq	3637c <GetDataSlab+0x13e60>
   36364:	ldr	r4, [r5, r0, lsl #2]
   36368:	ldr	r5, [lr, r0, lsl #2]
   3636c:	sub	r1, r1, r3
   36370:	mla	r1, r5, r4, r1
   36374:	add	r2, r1, r2
   36378:	b	36398 <GetDataSlab+0x13e7c>
   3637c:	mov	r1, lr
   36380:	ldr	r1, [lr, r0, lsl #2]
   36384:	cmp	r1, #0
   36388:	beq	3639c <GetDataSlab+0x13e80>
   3638c:	ldr	r3, [r5, r0, lsl #2]
   36390:	mla	r2, r3, r1, r2
   36394:	mul	r1, r3, r1
   36398:	add	r9, r9, r1, lsl #1
   3639c:	ldr	r1, [fp, #24]
   363a0:	add	ip, r0, #1
   363a4:	add	r0, r0, #2
   363a8:	cmp	r0, r1
   363ac:	blt	3631c <GetDataSlab+0x13e00>
   363b0:	b	363c4 <GetDataSlab+0x13ea8>
   363b4:	ldr	r1, [sp, #32]
   363b8:	ldr	r0, [r1, r0, lsl #2]
   363bc:	add	r9, r9, r0, lsl #1
   363c0:	add	r2, r0, r2
   363c4:	ldr	r0, [sp, #60]	; 0x3c
   363c8:	ldr	r1, [sp, #40]	; 0x28
   363cc:	ldr	r3, [sp, #48]	; 0x30
   363d0:	add	r0, r0, r1
   363d4:	ldr	r1, [sp, #44]	; 0x2c
   363d8:	str	r0, [sp, #60]	; 0x3c
   363dc:	mov	r0, #0
   363e0:	add	r8, r8, r1
   363e4:	cmp	r8, r3
   363e8:	blt	362c8 <GetDataSlab+0x13dac>
   363ec:	b	242ac <GetDataSlab+0x1d90>
   363f0:	ldr	r0, [sp, #48]	; 0x30
   363f4:	ldr	r1, [fp, #20]
   363f8:	cmp	r0, #1
   363fc:	blt	242a8 <GetDataSlab+0x1d8c>
   36400:	ldr	r4, [sp, #44]	; 0x2c
   36404:	ldr	r0, [sp, #40]	; 0x28
   36408:	ldr	r5, [ip], #4
   3640c:	mov	r3, lr
   36410:	add	sl, r1, #4
   36414:	mov	r8, #0
   36418:	mls	r0, r4, r6, r0
   3641c:	mov	lr, ip
   36420:	mov	r1, r4
   36424:	str	r5, [sp, #56]	; 0x38
   36428:	sub	r0, r0, r5
   3642c:	str	r0, [sp, #52]	; 0x34
   36430:	add	r0, sp, #104	; 0x68
   36434:	orr	r7, r0, #4
   36438:	orr	r0, r3, #4
   3643c:	str	r0, [sp, #32]
   36440:	mla	r0, r4, r6, r5
   36444:	lsl	r6, r6, #1
   36448:	str	r0, [sp, #36]	; 0x24
   3644c:	lsl	r0, r4, #1
   36450:	str	r0, [sp, #40]	; 0x28
   36454:	ldr	r0, [sp, #56]	; 0x38
   36458:	cmp	r1, #1
   3645c:	blt	36484 <GetDataSlab+0x13f68>
   36460:	ldr	r0, [sp, #56]	; 0x38
   36464:	ldr	r3, [sp, #44]	; 0x2c
   36468:	ldr	r1, [sp, #60]	; 0x3c
   3646c:	add	r0, r9, r0, lsl #1
   36470:	ldrh	r4, [r0], r6
   36474:	subs	r3, r3, #1
   36478:	strh	r4, [r1], #2
   3647c:	bne	36470 <GetDataSlab+0x13f54>
   36480:	ldr	r0, [sp, #36]	; 0x24
   36484:	ldr	r3, [sp, #52]	; 0x34
   36488:	add	r1, r9, r3, lsl #1
   3648c:	add	r9, r1, r0, lsl #1
   36490:	add	r0, r0, r2
   36494:	add	r2, r0, r3
   36498:	ldr	r0, [fp, #24]
   3649c:	cmp	r0, #2
   364a0:	blt	36550 <GetDataSlab+0x14034>
   364a4:	mov	ip, #0
   364a8:	ldr	r1, [r7, ip, lsl #2]
   364ac:	mov	r0, ip
   364b0:	add	r1, r1, #1
   364b4:	str	r1, [r7, ip, lsl #2]
   364b8:	ldr	r3, [sl, ip, lsl #2]
   364bc:	sdiv	r4, r1, r3
   364c0:	mls	r1, r4, r3, r1
   364c4:	cmp	r1, #0
   364c8:	bne	36540 <GetDataSlab+0x14024>
   364cc:	mov	r1, #0
   364d0:	add	r5, sp, #64	; 0x40
   364d4:	str	r1, [r7, r0, lsl #2]
   364d8:	add	r1, r5, r0, lsl #2
   364dc:	ldr	r1, [r1, #4]
   364e0:	sdiv	r3, r2, r1
   364e4:	mls	r3, r3, r1, r2
   364e8:	cmp	r3, #0
   364ec:	beq	36508 <GetDataSlab+0x13fec>
   364f0:	ldr	r4, [r5, r0, lsl #2]
   364f4:	ldr	r5, [lr, r0, lsl #2]
   364f8:	sub	r1, r1, r3
   364fc:	mla	r1, r5, r4, r1
   36500:	add	r2, r1, r2
   36504:	b	36524 <GetDataSlab+0x14008>
   36508:	mov	r1, lr
   3650c:	ldr	r1, [lr, r0, lsl #2]
   36510:	cmp	r1, #0
   36514:	beq	36528 <GetDataSlab+0x1400c>
   36518:	ldr	r3, [r5, r0, lsl #2]
   3651c:	mla	r2, r3, r1, r2
   36520:	mul	r1, r3, r1
   36524:	add	r9, r9, r1, lsl #1
   36528:	ldr	r1, [fp, #24]
   3652c:	add	ip, r0, #1
   36530:	add	r0, r0, #2
   36534:	cmp	r0, r1
   36538:	blt	364a8 <GetDataSlab+0x13f8c>
   3653c:	b	36550 <GetDataSlab+0x14034>
   36540:	ldr	r1, [sp, #32]
   36544:	ldr	r0, [r1, r0, lsl #2]
   36548:	add	r9, r9, r0, lsl #1
   3654c:	add	r2, r0, r2
   36550:	ldr	r0, [sp, #60]	; 0x3c
   36554:	ldr	r1, [sp, #40]	; 0x28
   36558:	ldr	r3, [sp, #48]	; 0x30
   3655c:	add	r0, r0, r1
   36560:	ldr	r1, [sp, #44]	; 0x2c
   36564:	str	r0, [sp, #60]	; 0x3c
   36568:	mov	r0, #0
   3656c:	add	r8, r8, r1
   36570:	cmp	r8, r3
   36574:	blt	36454 <GetDataSlab+0x13f38>
   36578:	b	242ac <GetDataSlab+0x1d90>
   3657c:	ldr	r0, [sp, #56]	; 0x38
   36580:	ldr	r9, [sp, #48]	; 0x30
   36584:	cmp	r0, #1
   36588:	blt	242a8 <GetDataSlab+0x1d8c>
   3658c:	ldr	r0, [sp, #44]	; 0x2c
   36590:	add	sl, r8, #4
   36594:	add	ip, ip, #4
   36598:	lsl	r8, r2, #2
   3659c:	mls	r0, r9, r2, r0
   365a0:	str	r0, [sp, #44]	; 0x2c
   365a4:	add	r0, sp, #104	; 0x68
   365a8:	orr	r1, r0, #4
   365ac:	sub	r0, fp, #72	; 0x48
   365b0:	orr	r0, r0, #4
   365b4:	str	r0, [sp, #32]
   365b8:	mul	r0, r9, r2
   365bc:	str	r0, [sp, #36]	; 0x24
   365c0:	lsl	r0, r9, #1
   365c4:	str	r0, [sp, #40]	; 0x28
   365c8:	mov	r0, #0
   365cc:	str	r0, [sp, #52]	; 0x34
   365d0:	ldr	r0, [fp, #12]
   365d4:	cmp	r9, #1
   365d8:	ldr	r0, [r0]
   365dc:	blt	36628 <GetDataSlab+0x1410c>
   365e0:	ldr	r2, [sp, #36]	; 0x24
   365e4:	mov	r4, ip
   365e8:	mov	ip, r9
   365ec:	ldr	r9, [sp, #60]	; 0x3c
   365f0:	add	r5, lr, r0, lsl #2
   365f4:	mov	r7, r2
   365f8:	add	r2, r2, r3
   365fc:	add	r3, lr, r7, lsl #2
   36600:	ldr	r6, [r5], r8
   36604:	subs	ip, ip, #1
   36608:	strh	r6, [r9], #2
   3660c:	bne	36600 <GetDataSlab+0x140e4>
   36610:	ldr	r9, [sp, #48]	; 0x30
   36614:	add	r2, r2, r0
   36618:	mov	lr, r3
   3661c:	add	r5, sp, #64	; 0x40
   36620:	mov	ip, r4
   36624:	b	36630 <GetDataSlab+0x14114>
   36628:	add	r2, r0, r3
   3662c:	add	r5, sp, #64	; 0x40
   36630:	ldr	r3, [sp, #44]	; 0x2c
   36634:	sub	r0, r3, r0
   36638:	add	lr, lr, r3, lsl #2
   3663c:	add	r3, r2, r0
   36640:	ldr	r0, [fp, #24]
   36644:	cmp	r0, #2
   36648:	blt	366f0 <GetDataSlab+0x141d4>
   3664c:	mov	r2, #0
   36650:	mov	r0, r2
   36654:	ldr	r2, [r1, r2, lsl #2]
   36658:	add	r2, r2, #1
   3665c:	str	r2, [r1, r0, lsl #2]
   36660:	ldr	r6, [sl, r0, lsl #2]
   36664:	sdiv	r4, r2, r6
   36668:	mls	r2, r4, r6, r2
   3666c:	cmp	r2, #0
   36670:	bne	366e0 <GetDataSlab+0x141c4>
   36674:	mov	r2, #0
   36678:	str	r2, [r1, r0, lsl #2]
   3667c:	add	r2, r5, r0, lsl #2
   36680:	ldr	r2, [r2, #4]
   36684:	sdiv	r6, r3, r2
   36688:	mls	r6, r6, r2, r3
   3668c:	cmp	r6, #0
   36690:	beq	366ac <GetDataSlab+0x14190>
   36694:	ldr	r4, [r5, r0, lsl #2]
   36698:	ldr	r7, [ip, r0, lsl #2]
   3669c:	sub	r2, r2, r6
   366a0:	mla	r2, r7, r4, r2
   366a4:	add	r3, r2, r3
   366a8:	b	366c4 <GetDataSlab+0x141a8>
   366ac:	ldr	r2, [ip, r0, lsl #2]
   366b0:	cmp	r2, #0
   366b4:	beq	366c8 <GetDataSlab+0x141ac>
   366b8:	ldr	r7, [r5, r0, lsl #2]
   366bc:	mla	r3, r7, r2, r3
   366c0:	mul	r2, r7, r2
   366c4:	add	lr, lr, r2, lsl #2
   366c8:	ldr	r7, [fp, #24]
   366cc:	add	r2, r0, #1
   366d0:	add	r0, r0, #2
   366d4:	cmp	r0, r7
   366d8:	blt	36650 <GetDataSlab+0x14134>
   366dc:	b	366f0 <GetDataSlab+0x141d4>
   366e0:	ldr	r2, [sp, #32]
   366e4:	ldr	r0, [r2, r0, lsl #2]
   366e8:	add	lr, lr, r0, lsl #2
   366ec:	add	r3, r0, r3
   366f0:	ldr	r0, [sp, #60]	; 0x3c
   366f4:	ldr	r2, [sp, #40]	; 0x28
   366f8:	ldr	r4, [sp, #52]	; 0x34
   366fc:	add	r0, r0, r2
   36700:	ldr	r2, [sp, #56]	; 0x38
   36704:	add	r4, r4, r9
   36708:	str	r0, [sp, #60]	; 0x3c
   3670c:	mov	r0, #0
   36710:	str	r4, [sp, #52]	; 0x34
   36714:	cmp	r4, r2
   36718:	blt	365d0 <GetDataSlab+0x140b4>
   3671c:	b	242ac <GetDataSlab+0x1d90>
   36720:	ldr	r0, [sp, #56]	; 0x38
   36724:	ldr	r9, [sp, #48]	; 0x30
   36728:	cmp	r0, #1
   3672c:	blt	242a8 <GetDataSlab+0x1d8c>
   36730:	ldr	r0, [sp, #44]	; 0x2c
   36734:	add	r1, sp, #104	; 0x68
   36738:	add	sl, r8, #4
   3673c:	lsl	r8, r2, #2
   36740:	orr	r1, r1, #4
   36744:	mls	r0, r9, r2, r0
   36748:	str	r0, [sp, #44]	; 0x2c
   3674c:	mov	r0, lr
   36750:	add	lr, ip, #4
   36754:	orr	r0, r0, #4
   36758:	str	r0, [sp, #32]
   3675c:	mul	r0, r9, r2
   36760:	str	r0, [sp, #36]	; 0x24
   36764:	lsl	r0, r9, #1
   36768:	str	r0, [sp, #40]	; 0x28
   3676c:	mov	r0, #0
   36770:	str	r0, [sp, #52]	; 0x34
   36774:	ldr	r0, [fp, #12]
   36778:	cmp	r9, #1
   3677c:	ldr	r0, [r0]
   36780:	blt	367c0 <GetDataSlab+0x142a4>
   36784:	ldr	r2, [sp, #36]	; 0x24
   36788:	mov	ip, r9
   3678c:	ldr	r9, [sp, #60]	; 0x3c
   36790:	mov	r7, r2
   36794:	add	r2, r2, r3
   36798:	add	r3, r5, r7, lsl #2
   3679c:	add	r5, r5, r0, lsl #2
   367a0:	ldr	r6, [r5], r8
   367a4:	subs	ip, ip, #1
   367a8:	strh	r6, [r9], #2
   367ac:	bne	367a0 <GetDataSlab+0x14284>
   367b0:	ldr	r9, [sp, #48]	; 0x30
   367b4:	add	r2, r2, r0
   367b8:	mov	r5, r3
   367bc:	b	367c4 <GetDataSlab+0x142a8>
   367c0:	add	r2, r0, r3
   367c4:	ldr	r3, [sp, #44]	; 0x2c
   367c8:	add	ip, sp, #64	; 0x40
   367cc:	sub	r0, r3, r0
   367d0:	add	r5, r5, r3, lsl #2
   367d4:	add	r3, r2, r0
   367d8:	ldr	r0, [fp, #24]
   367dc:	cmp	r0, #2
   367e0:	blt	36888 <GetDataSlab+0x1436c>
   367e4:	mov	r2, #0
   367e8:	mov	r0, r2
   367ec:	ldr	r2, [r1, r2, lsl #2]
   367f0:	add	r2, r2, #1
   367f4:	str	r2, [r1, r0, lsl #2]
   367f8:	ldr	r6, [sl, r0, lsl #2]
   367fc:	sdiv	r4, r2, r6
   36800:	mls	r2, r4, r6, r2
   36804:	cmp	r2, #0
   36808:	bne	36878 <GetDataSlab+0x1435c>
   3680c:	mov	r2, #0
   36810:	str	r2, [r1, r0, lsl #2]
   36814:	add	r2, ip, r0, lsl #2
   36818:	ldr	r2, [r2, #4]
   3681c:	sdiv	r6, r3, r2
   36820:	mls	r6, r6, r2, r3
   36824:	cmp	r6, #0
   36828:	beq	36844 <GetDataSlab+0x14328>
   3682c:	ldr	r4, [ip, r0, lsl #2]
   36830:	ldr	r7, [lr, r0, lsl #2]
   36834:	sub	r2, r2, r6
   36838:	mla	r2, r7, r4, r2
   3683c:	add	r3, r2, r3
   36840:	b	3685c <GetDataSlab+0x14340>
   36844:	ldr	r2, [lr, r0, lsl #2]
   36848:	cmp	r2, #0
   3684c:	beq	36860 <GetDataSlab+0x14344>
   36850:	ldr	r7, [ip, r0, lsl #2]
   36854:	mla	r3, r7, r2, r3
   36858:	mul	r2, r7, r2
   3685c:	add	r5, r5, r2, lsl #2
   36860:	ldr	r7, [fp, #24]
   36864:	add	r2, r0, #1
   36868:	add	r0, r0, #2
   3686c:	cmp	r0, r7
   36870:	blt	367e8 <GetDataSlab+0x142cc>
   36874:	b	36888 <GetDataSlab+0x1436c>
   36878:	ldr	r2, [sp, #32]
   3687c:	ldr	r0, [r2, r0, lsl #2]
   36880:	add	r5, r5, r0, lsl #2
   36884:	add	r3, r0, r3
   36888:	ldr	r0, [sp, #60]	; 0x3c
   3688c:	ldr	r2, [sp, #40]	; 0x28
   36890:	ldr	r7, [sp, #52]	; 0x34
   36894:	add	r0, r0, r2
   36898:	ldr	r2, [sp, #56]	; 0x38
   3689c:	add	r7, r7, r9
   368a0:	str	r0, [sp, #60]	; 0x3c
   368a4:	mov	r0, #0
   368a8:	str	r7, [sp, #52]	; 0x34
   368ac:	cmp	r7, r2
   368b0:	blt	36774 <GetDataSlab+0x14258>
   368b4:	b	242ac <GetDataSlab+0x1d90>
   368b8:	ldr	r0, [sp, #48]	; 0x30
   368bc:	ldr	r1, [sp, #44]	; 0x2c
   368c0:	cmp	r0, #1
   368c4:	blt	242a8 <GetDataSlab+0x1d8c>
   368c8:	ldr	r0, [sp, #40]	; 0x28
   368cc:	ldr	r3, [ip], #4
   368d0:	mov	sl, #0
   368d4:	mls	r0, r1, r8, r0
   368d8:	str	ip, [sp, #56]	; 0x38
   368dc:	str	r3, [sp, #52]	; 0x34
   368e0:	sub	r0, r0, r3
   368e4:	str	r0, [sp, #40]	; 0x28
   368e8:	ldr	r0, [fp, #20]
   368ec:	add	lr, r0, #4
   368f0:	add	r0, sp, #104	; 0x68
   368f4:	orr	r6, r0, #4
   368f8:	orr	r0, r4, #4
   368fc:	lsl	r4, r8, #2
   36900:	str	r0, [sp, #28]
   36904:	mla	r0, r1, r8, r3
   36908:	mov	r8, #0
   3690c:	str	r0, [sp, #32]
   36910:	lsl	r0, r1, #1
   36914:	str	r0, [sp, #36]	; 0x24
   36918:	ldr	r0, [sp, #52]	; 0x34
   3691c:	cmp	r1, #1
   36920:	blt	36954 <GetDataSlab+0x14438>
   36924:	ldr	r0, [sp, #52]	; 0x34
   36928:	ldr	r1, [sp, #44]	; 0x2c
   3692c:	ldr	ip, [sp, #60]	; 0x3c
   36930:	add	r0, r9, r0, lsl #2
   36934:	vldr	s0, [r0]
   36938:	add	r0, r0, r4
   3693c:	subs	r1, r1, #1
   36940:	vcvt.u32.f32	s0, s0
   36944:	vmov	r3, s0
   36948:	strh	r3, [ip], #2
   3694c:	bne	36934 <GetDataSlab+0x14418>
   36950:	ldr	r0, [sp, #32]
   36954:	ldr	r3, [sp, #40]	; 0x28
   36958:	add	r1, r9, r3, lsl #2
   3695c:	add	r9, r1, r0, lsl #2
   36960:	add	r0, r0, r2
   36964:	add	r2, r0, r3
   36968:	ldr	r0, [fp, #24]
   3696c:	cmp	r0, #2
   36970:	blt	36a20 <GetDataSlab+0x14504>
   36974:	ldr	ip, [sp, #56]	; 0x38
   36978:	mov	r1, #0
   3697c:	mov	r0, r1
   36980:	ldr	r1, [r6, r1, lsl #2]
   36984:	add	r1, r1, #1
   36988:	str	r1, [r6, r0, lsl #2]
   3698c:	ldr	r3, [lr, r0, lsl #2]
   36990:	sdiv	r7, r1, r3
   36994:	mls	r1, r7, r3, r1
   36998:	cmp	r1, #0
   3699c:	bne	36a10 <GetDataSlab+0x144f4>
   369a0:	add	r5, sp, #64	; 0x40
   369a4:	str	sl, [r6, r0, lsl #2]
   369a8:	add	r1, r5, r0, lsl #2
   369ac:	ldr	r1, [r1, #4]
   369b0:	sdiv	r3, r2, r1
   369b4:	mls	r3, r3, r1, r2
   369b8:	cmp	r3, #0
   369bc:	beq	369d8 <GetDataSlab+0x144bc>
   369c0:	ldr	r7, [r5, r0, lsl #2]
   369c4:	ldr	r5, [ip, r0, lsl #2]
   369c8:	sub	r1, r1, r3
   369cc:	mla	r1, r5, r7, r1
   369d0:	add	r2, r1, r2
   369d4:	b	369f4 <GetDataSlab+0x144d8>
   369d8:	ldr	r1, [ip, r0, lsl #2]
   369dc:	cmp	r1, #0
   369e0:	beq	369f8 <GetDataSlab+0x144dc>
   369e4:	add	r3, sp, #64	; 0x40
   369e8:	ldr	r3, [r3, r0, lsl #2]
   369ec:	mla	r2, r3, r1, r2
   369f0:	mul	r1, r3, r1
   369f4:	add	r9, r9, r1, lsl #2
   369f8:	ldr	r3, [fp, #24]
   369fc:	add	r1, r0, #1
   36a00:	add	r0, r0, #2
   36a04:	cmp	r0, r3
   36a08:	blt	3697c <GetDataSlab+0x14460>
   36a0c:	b	36a20 <GetDataSlab+0x14504>
   36a10:	ldr	r1, [sp, #28]
   36a14:	ldr	r0, [r1, r0, lsl #2]
   36a18:	add	r9, r9, r0, lsl #2
   36a1c:	add	r2, r0, r2
   36a20:	ldr	r0, [sp, #60]	; 0x3c
   36a24:	ldr	r1, [sp, #36]	; 0x24
   36a28:	ldr	r3, [sp, #48]	; 0x30
   36a2c:	add	r0, r0, r1
   36a30:	ldr	r1, [sp, #44]	; 0x2c
   36a34:	str	r0, [sp, #60]	; 0x3c
   36a38:	mov	r0, #0
   36a3c:	add	r8, r8, r1
   36a40:	cmp	r8, r3
   36a44:	blt	36918 <GetDataSlab+0x143fc>
   36a48:	b	242ac <GetDataSlab+0x1d90>
   36a4c:	ldr	r0, [sp, #48]	; 0x30
   36a50:	ldr	r1, [sp, #44]	; 0x2c
   36a54:	cmp	r0, #1
   36a58:	blt	242a8 <GetDataSlab+0x1d8c>
   36a5c:	ldr	r0, [sp, #40]	; 0x28
   36a60:	ldr	r3, [ip], #4
   36a64:	mov	sl, #0
   36a68:	mls	r0, r1, r8, r0
   36a6c:	str	ip, [sp, #56]	; 0x38
   36a70:	str	r3, [sp, #52]	; 0x34
   36a74:	sub	r0, r0, r3
   36a78:	str	r0, [sp, #40]	; 0x28
   36a7c:	ldr	r0, [fp, #20]
   36a80:	add	lr, r0, #4
   36a84:	add	r0, sp, #104	; 0x68
   36a88:	orr	r6, r0, #4
   36a8c:	orr	r0, r4, #4
   36a90:	lsl	r4, r8, #3
   36a94:	str	r0, [sp, #28]
   36a98:	mla	r0, r1, r8, r3
   36a9c:	mov	r8, #0
   36aa0:	str	r0, [sp, #32]
   36aa4:	lsl	r0, r1, #1
   36aa8:	str	r0, [sp, #36]	; 0x24
   36aac:	ldr	r0, [sp, #52]	; 0x34
   36ab0:	cmp	r1, #1
   36ab4:	blt	36ae8 <GetDataSlab+0x145cc>
   36ab8:	ldr	r0, [sp, #52]	; 0x34
   36abc:	ldr	r1, [sp, #44]	; 0x2c
   36ac0:	ldr	ip, [sp, #60]	; 0x3c
   36ac4:	add	r0, r9, r0, lsl #3
   36ac8:	vldr	d16, [r0]
   36acc:	add	r0, r0, r4
   36ad0:	subs	r1, r1, #1
   36ad4:	vcvt.u32.f64	s0, d16
   36ad8:	vmov	r3, s0
   36adc:	strh	r3, [ip], #2
   36ae0:	bne	36ac8 <GetDataSlab+0x145ac>
   36ae4:	ldr	r0, [sp, #32]
   36ae8:	ldr	r3, [sp, #40]	; 0x28
   36aec:	add	r1, r9, r3, lsl #3
   36af0:	add	r9, r1, r0, lsl #3
   36af4:	add	r0, r0, r2
   36af8:	add	r2, r0, r3
   36afc:	ldr	r0, [fp, #24]
   36b00:	cmp	r0, #2
   36b04:	blt	36bb4 <GetDataSlab+0x14698>
   36b08:	ldr	ip, [sp, #56]	; 0x38
   36b0c:	mov	r1, #0
   36b10:	mov	r0, r1
   36b14:	ldr	r1, [r6, r1, lsl #2]
   36b18:	add	r1, r1, #1
   36b1c:	str	r1, [r6, r0, lsl #2]
   36b20:	ldr	r3, [lr, r0, lsl #2]
   36b24:	sdiv	r7, r1, r3
   36b28:	mls	r1, r7, r3, r1
   36b2c:	cmp	r1, #0
   36b30:	bne	36ba4 <GetDataSlab+0x14688>
   36b34:	add	r5, sp, #64	; 0x40
   36b38:	str	sl, [r6, r0, lsl #2]
   36b3c:	add	r1, r5, r0, lsl #2
   36b40:	ldr	r1, [r1, #4]
   36b44:	sdiv	r3, r2, r1
   36b48:	mls	r3, r3, r1, r2
   36b4c:	cmp	r3, #0
   36b50:	beq	36b6c <GetDataSlab+0x14650>
   36b54:	ldr	r7, [r5, r0, lsl #2]
   36b58:	ldr	r5, [ip, r0, lsl #2]
   36b5c:	sub	r1, r1, r3
   36b60:	mla	r1, r5, r7, r1
   36b64:	add	r2, r1, r2
   36b68:	b	36b88 <GetDataSlab+0x1466c>
   36b6c:	ldr	r1, [ip, r0, lsl #2]
   36b70:	cmp	r1, #0
   36b74:	beq	36b8c <GetDataSlab+0x14670>
   36b78:	add	r3, sp, #64	; 0x40
   36b7c:	ldr	r3, [r3, r0, lsl #2]
   36b80:	mla	r2, r3, r1, r2
   36b84:	mul	r1, r3, r1
   36b88:	add	r9, r9, r1, lsl #3
   36b8c:	ldr	r3, [fp, #24]
   36b90:	add	r1, r0, #1
   36b94:	add	r0, r0, #2
   36b98:	cmp	r0, r3
   36b9c:	blt	36b10 <GetDataSlab+0x145f4>
   36ba0:	b	36bb4 <GetDataSlab+0x14698>
   36ba4:	ldr	r1, [sp, #28]
   36ba8:	ldr	r0, [r1, r0, lsl #2]
   36bac:	add	r9, r9, r0, lsl #3
   36bb0:	add	r2, r0, r2
   36bb4:	ldr	r0, [sp, #60]	; 0x3c
   36bb8:	ldr	r1, [sp, #36]	; 0x24
   36bbc:	ldr	r3, [sp, #48]	; 0x30
   36bc0:	add	r0, r0, r1
   36bc4:	ldr	r1, [sp, #44]	; 0x2c
   36bc8:	str	r0, [sp, #60]	; 0x3c
   36bcc:	mov	r0, #0
   36bd0:	add	r8, r8, r1
   36bd4:	cmp	r8, r3
   36bd8:	blt	36aac <GetDataSlab+0x14590>
   36bdc:	b	242ac <GetDataSlab+0x1d90>
   36be0:	ldr	r0, [sp, #56]	; 0x38
   36be4:	ldr	r3, [fp, #20]
   36be8:	ldr	r8, [sp, #40]	; 0x28
   36bec:	cmp	r0, #1
   36bf0:	blt	36d68 <GetDataSlab+0x1484c>
   36bf4:	ldr	r0, [sp, #44]	; 0x2c
   36bf8:	mov	r2, lr
   36bfc:	mov	lr, ip
   36c00:	add	ip, r3, #4
   36c04:	mov	sl, #0
   36c08:	ldr	r4, [lr], #4
   36c0c:	str	r2, [sp, #44]	; 0x2c
   36c10:	mls	r0, r8, r5, r0
   36c14:	sub	r0, r0, r4
   36c18:	str	r4, [sp, #36]	; 0x24
   36c1c:	str	r0, [sp, #32]
   36c20:	add	r0, sp, #104	; 0x68
   36c24:	orr	r6, r0, #4
   36c28:	sub	r0, fp, #72	; 0x48
   36c2c:	orr	r0, r0, #4
   36c30:	str	r0, [sp, #20]
   36c34:	mla	r0, r8, r5, r4
   36c38:	lsl	r5, r5, #3
   36c3c:	str	r0, [sp, #24]
   36c40:	lsl	r0, r8, #1
   36c44:	str	r0, [sp, #28]
   36c48:	ldr	r0, [sp, #36]	; 0x24
   36c4c:	cmp	r8, #1
   36c50:	blt	36c7c <GetDataSlab+0x14760>
   36c54:	ldr	r0, [sp, #36]	; 0x24
   36c58:	mov	r2, r8
   36c5c:	ldr	r8, [sp, #44]	; 0x2c
   36c60:	add	r0, r9, r0, lsl #3
   36c64:	ldrh	r7, [r0], r5
   36c68:	subs	r2, r2, #1
   36c6c:	strh	r7, [r8], #2
   36c70:	bne	36c64 <GetDataSlab+0x14748>
   36c74:	ldr	r0, [sp, #24]
   36c78:	ldr	r8, [sp, #40]	; 0x28
   36c7c:	ldr	r3, [sp, #32]
   36c80:	add	r2, r9, r3, lsl #3
   36c84:	add	r9, r2, r0, lsl #3
   36c88:	add	r0, r0, r1
   36c8c:	add	r1, r0, r3
   36c90:	ldr	r0, [fp, #24]
   36c94:	cmp	r0, #2
   36c98:	blt	36d48 <GetDataSlab+0x1482c>
   36c9c:	mov	r2, #0
   36ca0:	mov	r0, r2
   36ca4:	ldr	r2, [r6, r2, lsl #2]
   36ca8:	add	r2, r2, #1
   36cac:	str	r2, [r6, r0, lsl #2]
   36cb0:	ldr	r7, [ip, r0, lsl #2]
   36cb4:	sdiv	r4, r2, r7
   36cb8:	mls	r2, r4, r7, r2
   36cbc:	cmp	r2, #0
   36cc0:	bne	36d38 <GetDataSlab+0x1481c>
   36cc4:	mov	r2, #0
   36cc8:	add	r3, sp, #64	; 0x40
   36ccc:	str	r2, [r6, r0, lsl #2]
   36cd0:	add	r2, r3, r0, lsl #2
   36cd4:	ldr	r2, [r2, #4]
   36cd8:	sdiv	r4, r1, r2
   36cdc:	mls	r7, r4, r2, r1
   36ce0:	cmp	r7, #0
   36ce4:	beq	36d00 <GetDataSlab+0x147e4>
   36ce8:	ldr	r4, [r3, r0, lsl #2]
   36cec:	ldr	r3, [lr, r0, lsl #2]
   36cf0:	sub	r2, r2, r7
   36cf4:	mla	r2, r3, r4, r2
   36cf8:	add	r1, r2, r1
   36cfc:	b	36d1c <GetDataSlab+0x14800>
   36d00:	ldr	r2, [lr, r0, lsl #2]
   36d04:	cmp	r2, #0
   36d08:	beq	36d20 <GetDataSlab+0x14804>
   36d0c:	add	r3, sp, #64	; 0x40
   36d10:	ldr	r3, [r3, r0, lsl #2]
   36d14:	mla	r1, r3, r2, r1
   36d18:	mul	r2, r3, r2
   36d1c:	add	r9, r9, r2, lsl #3
   36d20:	ldr	r3, [fp, #24]
   36d24:	add	r2, r0, #1
   36d28:	add	r0, r0, #2
   36d2c:	cmp	r0, r3
   36d30:	blt	36ca0 <GetDataSlab+0x14784>
   36d34:	b	36d48 <GetDataSlab+0x1482c>
   36d38:	ldr	r2, [sp, #20]
   36d3c:	ldr	r0, [r2, r0, lsl #2]
   36d40:	add	r9, r9, r0, lsl #3
   36d44:	add	r1, r0, r1
   36d48:	ldr	r0, [sp, #28]
   36d4c:	ldr	r2, [sp, #44]	; 0x2c
   36d50:	add	sl, sl, r8
   36d54:	add	r2, r2, r0
   36d58:	ldr	r0, [sp, #56]	; 0x38
   36d5c:	str	r2, [sp, #44]	; 0x2c
   36d60:	cmp	sl, r0
   36d64:	blt	36c48 <GetDataSlab+0x1472c>
   36d68:	ldr	r3, [sp, #48]	; 0x30
   36d6c:	mov	r0, #0
   36d70:	cmp	r3, #13
   36d74:	bne	242ac <GetDataSlab+0x1d90>
   36d78:	ldr	sl, [fp, #16]
   36d7c:	ldr	r9, [fp, #8]
   36d80:	ldr	lr, [fp, #12]
   36d84:	mov	r2, #0
   36d88:	add	ip, sp, #64	; 0x40
   36d8c:	sub	r3, fp, #72	; 0x48
   36d90:	ldr	r0, [sl]
   36d94:	str	r0, [sp, #28]
   36d98:	sub	r0, r0, #1
   36d9c:	str	r0, [fp, #-72]	; 0xffffffb8
   36da0:	ldr	r0, [r9]
   36da4:	str	r0, [sp, #40]	; 0x28
   36da8:	str	r0, [sp, #64]	; 0x40
   36dac:	ldr	r0, [fp, #20]
   36db0:	ldr	r1, [r0]
   36db4:	ldr	r0, [fp, #24]
   36db8:	cmp	r0, #2
   36dbc:	str	r1, [sp, #44]	; 0x2c
   36dc0:	str	r1, [sp, #48]	; 0x30
   36dc4:	blt	36e5c <GetDataSlab+0x14940>
   36dc8:	ldr	r6, [sp, #40]	; 0x28
   36dcc:	ldr	r0, [sp, #44]	; 0x2c
   36dd0:	mov	r1, #1
   36dd4:	mov	r2, #0
   36dd8:	mov	r7, r9
   36ddc:	mov	r5, r6
   36de0:	str	r0, [sp, #48]	; 0x30
   36de4:	ldr	r0, [sl, r1, lsl #2]
   36de8:	str	r6, [ip, r1, lsl #2]
   36dec:	sub	r0, r0, #1
   36df0:	str	r0, [r3, r1, lsl #2]
   36df4:	mov	r3, #0
   36df8:	ldr	r8, [r9, r1, lsl #2]
   36dfc:	mov	r4, r8
   36e00:	mul	r6, r4, r6
   36e04:	ldr	r4, [r7, -r3, lsl #2]
   36e08:	add	r3, r3, #1
   36e0c:	cmp	r1, r3
   36e10:	mul	r0, r0, r4
   36e14:	bne	36e00 <GetDataSlab+0x148e4>
   36e18:	sub	r3, fp, #72	; 0x48
   36e1c:	str	r6, [ip, r1, lsl #2]
   36e20:	ldr	r4, [sp, #48]	; 0x30
   36e24:	add	r7, r7, #4
   36e28:	str	r0, [r3, r1, lsl #2]
   36e2c:	ldr	r0, [lr, r1, lsl #2]
   36e30:	mla	r2, r0, r5, r2
   36e34:	ldr	r0, [fp, #20]
   36e38:	mov	r5, r6
   36e3c:	mov	r6, r8
   36e40:	ldr	r0, [r0, r1, lsl #2]
   36e44:	add	r1, r1, #1
   36e48:	mul	r4, r0, r4
   36e4c:	ldr	r0, [fp, #24]
   36e50:	str	r4, [sp, #48]	; 0x30
   36e54:	cmp	r1, r0
   36e58:	bne	36de4 <GetDataSlab+0x148c8>
   36e5c:	ldr	r0, [sp, #52]	; 0x34
   36e60:	ldr	r5, [sp, #28]
   36e64:	add	r9, r0, r2, lsl #3
   36e68:	cmp	r5, #1
   36e6c:	bne	3b528 <GetDataSlab+0x1900c>
   36e70:	ldr	r0, [sp, #48]	; 0x30
   36e74:	cmp	r0, #1
   36e78:	ldr	r0, [fp, #20]
   36e7c:	blt	242a8 <GetDataSlab+0x1d8c>
   36e80:	ldr	ip, [sp, #44]	; 0x2c
   36e84:	add	sl, r0, #4
   36e88:	add	r0, sp, #104	; 0x68
   36e8c:	mov	r8, #0
   36e90:	orr	r6, r0, #4
   36e94:	sub	r0, fp, #72	; 0x48
   36e98:	orr	r0, r0, #4
   36e9c:	str	r0, [sp, #32]
   36ea0:	lsl	r0, ip, #1
   36ea4:	str	r0, [sp, #52]	; 0x34
   36ea8:	ldr	r0, [lr], #4
   36eac:	str	lr, [sp, #56]	; 0x38
   36eb0:	mov	lr, #0
   36eb4:	str	r0, [sp, #36]	; 0x24
   36eb8:	ldr	r5, [sp, #56]	; 0x38
   36ebc:	cmp	ip, #1
   36ec0:	blt	36ee0 <GetDataSlab+0x149c4>
   36ec4:	ldr	r0, [sp, #36]	; 0x24
   36ec8:	ldr	r3, [sp, #60]	; 0x3c
   36ecc:	add	r0, r9, r0, lsl #3
   36ed0:	ldrh	r4, [r0], #8
   36ed4:	subs	ip, ip, #1
   36ed8:	strh	r4, [r3], #2
   36edc:	bne	36ed0 <GetDataSlab+0x149b4>
   36ee0:	ldr	r0, [sp, #40]	; 0x28
   36ee4:	add	ip, sp, #64	; 0x40
   36ee8:	add	r9, r9, r0, lsl #3
   36eec:	add	r2, r2, r0
   36ef0:	ldr	r0, [fp, #24]
   36ef4:	cmp	r0, #2
   36ef8:	blt	36f9c <GetDataSlab+0x14a80>
   36efc:	mov	r3, #0
   36f00:	mov	r0, r3
   36f04:	ldr	r3, [r6, r3, lsl #2]
   36f08:	add	r3, r3, #1
   36f0c:	str	r3, [r6, r0, lsl #2]
   36f10:	ldr	r4, [sl, r0, lsl #2]
   36f14:	sdiv	r1, r3, r4
   36f18:	mls	r1, r1, r4, r3
   36f1c:	cmp	r1, #0
   36f20:	bne	36f8c <GetDataSlab+0x14a70>
   36f24:	add	r1, ip, r0, lsl #2
   36f28:	str	r8, [r6, r0, lsl #2]
   36f2c:	ldr	r3, [r1, #4]
   36f30:	sdiv	r1, r2, r3
   36f34:	mls	r4, r1, r3, r2
   36f38:	cmp	r4, #0
   36f3c:	beq	36f58 <GetDataSlab+0x14a3c>
   36f40:	ldr	r1, [ip, r0, lsl #2]
   36f44:	ldr	r7, [r5, r0, lsl #2]
   36f48:	sub	r3, r3, r4
   36f4c:	mla	r1, r7, r1, r3
   36f50:	add	r2, r1, r2
   36f54:	b	36f70 <GetDataSlab+0x14a54>
   36f58:	ldr	r3, [r5, r0, lsl #2]
   36f5c:	cmp	r3, #0
   36f60:	beq	36f74 <GetDataSlab+0x14a58>
   36f64:	ldr	r1, [ip, r0, lsl #2]
   36f68:	mla	r2, r1, r3, r2
   36f6c:	mul	r1, r1, r3
   36f70:	add	r9, r9, r1, lsl #3
   36f74:	ldr	r1, [fp, #24]
   36f78:	add	r3, r0, #1
   36f7c:	add	r0, r0, #2
   36f80:	cmp	r0, r1
   36f84:	blt	36f00 <GetDataSlab+0x149e4>
   36f88:	b	36f9c <GetDataSlab+0x14a80>
   36f8c:	ldr	r1, [sp, #32]
   36f90:	ldr	r0, [r1, r0, lsl #2]
   36f94:	add	r9, r9, r0, lsl #3
   36f98:	add	r2, r0, r2
   36f9c:	ldr	r0, [sp, #60]	; 0x3c
   36fa0:	ldr	r1, [sp, #52]	; 0x34
   36fa4:	ldr	ip, [sp, #44]	; 0x2c
   36fa8:	add	r0, r0, r1
   36fac:	ldr	r1, [sp, #48]	; 0x30
   36fb0:	add	lr, lr, ip
   36fb4:	str	r0, [sp, #60]	; 0x3c
   36fb8:	mov	r0, #0
   36fbc:	cmp	lr, r1
   36fc0:	blt	36ebc <GetDataSlab+0x149a0>
   36fc4:	b	242ac <GetDataSlab+0x1d90>
   36fc8:	ldr	r0, [sp, #56]	; 0x38
   36fcc:	cmp	r0, #1
   36fd0:	ldr	r0, [fp, #20]
   36fd4:	blt	242a8 <GetDataSlab+0x1d8c>
   36fd8:	add	r0, r0, #4
   36fdc:	ldr	r9, [fp, #12]
   36fe0:	str	r0, [sp, #40]	; 0x28
   36fe4:	add	r0, sp, #104	; 0x68
   36fe8:	orr	ip, r0, #4
   36fec:	sub	r0, fp, #72	; 0x48
   36ff0:	orr	r0, r0, #4
   36ff4:	str	r0, [sp, #36]	; 0x24
   36ff8:	ldr	r0, [r9], #4
   36ffc:	str	r0, [sp, #44]	; 0x2c
   37000:	mov	r0, #0
   37004:	str	r0, [sp, #52]	; 0x34
   37008:	ldr	r6, [sp, #44]	; 0x2c
   3700c:	cmp	sl, #1
   37010:	add	r0, r6, lr
   37014:	add	r4, r2, r6
   37018:	blt	3706c <GetDataSlab+0x14b50>
   3701c:	ldr	r2, [sp, #60]	; 0x3c
   37020:	ldr	r1, [sp, #52]	; 0x34
   37024:	ldr	r7, [fp, #20]
   37028:	mov	r6, #0
   3702c:	add	r5, r2, r1, lsl #2
   37030:	ldr	r1, [fp, #16]
   37034:	ldrb	r2, [r4]
   37038:	str	r2, [r5, r6, lsl #2]
   3703c:	add	r6, r6, #1
   37040:	ldr	r3, [r1]
   37044:	ldr	sl, [r7]
   37048:	add	r0, r3, r0
   3704c:	add	r4, r4, r3
   37050:	cmp	r6, sl
   37054:	blt	37034 <GetDataSlab+0x14b18>
   37058:	ldr	r7, [fp, #12]
   3705c:	ldr	r6, [r7]
   37060:	ldr	r7, [fp, #8]
   37064:	ldr	r1, [r7]
   37068:	b	37070 <GetDataSlab+0x14b54>
   3706c:	ldr	r1, [sp, #48]	; 0x30
   37070:	mls	r5, r3, sl, r1
   37074:	str	r1, [sp, #48]	; 0x30
   37078:	str	r6, [sp, #44]	; 0x2c
   3707c:	sub	r5, r5, r6
   37080:	add	lr, r5, r0
   37084:	ldr	r0, [fp, #24]
   37088:	add	r2, r4, r5
   3708c:	cmp	r0, #2
   37090:	blt	37140 <GetDataSlab+0x14c24>
   37094:	ldr	r1, [sp, #40]	; 0x28
   37098:	mov	r5, #0
   3709c:	mov	r0, r5
   370a0:	ldr	r5, [ip, r5, lsl #2]
   370a4:	add	r5, r5, #1
   370a8:	str	r5, [ip, r0, lsl #2]
   370ac:	ldr	r6, [r1, r0, lsl #2]
   370b0:	sdiv	r8, r5, r6
   370b4:	mls	r5, r8, r6, r5
   370b8:	cmp	r5, #0
   370bc:	bne	37130 <GetDataSlab+0x14c14>
   370c0:	mov	r4, #0
   370c4:	str	r4, [ip, r0, lsl #2]
   370c8:	add	r4, sp, #64	; 0x40
   370cc:	add	r5, r4, r0, lsl #2
   370d0:	ldr	r5, [r5, #4]
   370d4:	sdiv	r6, lr, r5
   370d8:	mls	r6, r6, r5, lr
   370dc:	cmp	r6, #0
   370e0:	beq	37100 <GetDataSlab+0x14be4>
   370e4:	ldr	r7, [r4, r0, lsl #2]
   370e8:	ldr	r4, [r9, r0, lsl #2]
   370ec:	sub	r5, r5, r6
   370f0:	mla	r4, r4, r7, r5
   370f4:	add	lr, r4, lr
   370f8:	add	r2, r2, r4
   370fc:	b	37118 <GetDataSlab+0x14bfc>
   37100:	ldr	r5, [r9, r0, lsl #2]
   37104:	cmp	r5, #0
   37108:	addne	r4, sp, #64	; 0x40
   3710c:	ldrne	r4, [r4, r0, lsl #2]
   37110:	mlane	lr, r4, r5, lr
   37114:	mlane	r2, r4, r5, r2
   37118:	ldr	r4, [fp, #24]
   3711c:	add	r5, r0, #1
   37120:	add	r0, r0, #2
   37124:	cmp	r0, r4
   37128:	blt	3709c <GetDataSlab+0x14b80>
   3712c:	b	37140 <GetDataSlab+0x14c24>
   37130:	ldr	r1, [sp, #36]	; 0x24
   37134:	ldr	r0, [r1, r0, lsl #2]
   37138:	add	r2, r2, r0
   3713c:	add	lr, r0, lr
   37140:	ldr	r4, [sp, #52]	; 0x34
   37144:	ldr	r1, [sp, #56]	; 0x38
   37148:	mov	r0, #0
   3714c:	add	r4, sl, r4
   37150:	cmp	r4, r1
   37154:	str	r4, [sp, #52]	; 0x34
   37158:	blt	37008 <GetDataSlab+0x14aec>
   3715c:	b	242ac <GetDataSlab+0x1d90>
   37160:	ldr	r0, [sp, #56]	; 0x38
   37164:	ldr	r9, [fp, #12]
   37168:	cmp	r0, #1
   3716c:	ldr	r0, [fp, #20]
   37170:	blt	242a8 <GetDataSlab+0x1d8c>
   37174:	mov	r1, lr
   37178:	add	lr, r0, #4
   3717c:	add	r0, sp, #104	; 0x68
   37180:	orr	ip, r0, #4
   37184:	orr	r0, r1, #4
   37188:	str	r0, [sp, #40]	; 0x28
   3718c:	ldr	r0, [r9], #4
   37190:	str	r0, [sp, #44]	; 0x2c
   37194:	mov	r0, #0
   37198:	str	r0, [sp, #52]	; 0x34
   3719c:	ldr	r1, [sp, #44]	; 0x2c
   371a0:	cmp	sl, #1
   371a4:	add	r0, r1, r2
   371a8:	add	r4, r4, r1, lsl #1
   371ac:	blt	37200 <GetDataSlab+0x14ce4>
   371b0:	ldr	r2, [sp, #60]	; 0x3c
   371b4:	ldr	r1, [sp, #52]	; 0x34
   371b8:	ldr	r7, [fp, #20]
   371bc:	mov	r6, #0
   371c0:	add	r5, r2, r1, lsl #2
   371c4:	ldr	r1, [fp, #16]
   371c8:	ldrsh	r2, [r4]
   371cc:	str	r2, [r5, r6, lsl #2]
   371d0:	add	r6, r6, #1
   371d4:	ldr	r3, [r1]
   371d8:	ldr	sl, [r7]
   371dc:	add	r0, r3, r0
   371e0:	add	r4, r4, r3, lsl #1
   371e4:	cmp	r6, sl
   371e8:	blt	371c8 <GetDataSlab+0x14cac>
   371ec:	ldr	r5, [fp, #12]
   371f0:	ldr	r2, [r5]
   371f4:	ldr	r5, [fp, #8]
   371f8:	ldr	r1, [r5]
   371fc:	b	37208 <GetDataSlab+0x14cec>
   37200:	mov	r2, r1
   37204:	ldr	r1, [sp, #48]	; 0x30
   37208:	mls	r6, r3, sl, r1
   3720c:	str	r2, [sp, #44]	; 0x2c
   37210:	sub	r6, r6, r2
   37214:	add	r2, r6, r0
   37218:	ldr	r0, [fp, #24]
   3721c:	add	r4, r4, r6, lsl #1
   37220:	cmp	r0, #2
   37224:	blt	372d4 <GetDataSlab+0x14db8>
   37228:	mov	r5, #0
   3722c:	ldr	r6, [ip, r5, lsl #2]
   37230:	mov	r0, r5
   37234:	add	r6, r6, #1
   37238:	str	r6, [ip, r5, lsl #2]
   3723c:	ldr	r5, [lr, r5, lsl #2]
   37240:	sdiv	r7, r6, r5
   37244:	mls	r5, r7, r5, r6
   37248:	cmp	r5, #0
   3724c:	bne	372c4 <GetDataSlab+0x14da8>
   37250:	mov	r5, #0
   37254:	add	r7, sp, #64	; 0x40
   37258:	str	r5, [ip, r0, lsl #2]
   3725c:	add	r5, r7, r0, lsl #2
   37260:	ldr	r5, [r5, #4]
   37264:	sdiv	r6, r2, r5
   37268:	mls	r6, r6, r5, r2
   3726c:	cmp	r6, #0
   37270:	beq	3728c <GetDataSlab+0x14d70>
   37274:	ldr	r7, [r7, r0, lsl #2]
   37278:	ldr	r8, [r9, r0, lsl #2]
   3727c:	sub	r5, r5, r6
   37280:	mla	r5, r8, r7, r5
   37284:	add	r2, r5, r2
   37288:	b	372a8 <GetDataSlab+0x14d8c>
   3728c:	ldr	r5, [r9, r0, lsl #2]
   37290:	cmp	r5, #0
   37294:	beq	372ac <GetDataSlab+0x14d90>
   37298:	add	r6, sp, #64	; 0x40
   3729c:	ldr	r6, [r6, r0, lsl #2]
   372a0:	mla	r2, r6, r5, r2
   372a4:	mul	r5, r6, r5
   372a8:	add	r4, r4, r5, lsl #1
   372ac:	ldr	r6, [fp, #24]
   372b0:	add	r5, r0, #1
   372b4:	add	r0, r0, #2
   372b8:	cmp	r0, r6
   372bc:	blt	3722c <GetDataSlab+0x14d10>
   372c0:	b	372d4 <GetDataSlab+0x14db8>
   372c4:	ldr	r5, [sp, #40]	; 0x28
   372c8:	ldr	r0, [r5, r0, lsl #2]
   372cc:	add	r4, r4, r0, lsl #1
   372d0:	add	r2, r0, r2
   372d4:	ldr	r5, [sp, #52]	; 0x34
   372d8:	str	r1, [sp, #48]	; 0x30
   372dc:	ldr	r1, [sp, #56]	; 0x38
   372e0:	mov	r0, #0
   372e4:	add	r5, sl, r5
   372e8:	cmp	r5, r1
   372ec:	str	r5, [sp, #52]	; 0x34
   372f0:	blt	3719c <GetDataSlab+0x14c80>
   372f4:	b	242ac <GetDataSlab+0x1d90>
   372f8:	ldr	r0, [sp, #56]	; 0x38
   372fc:	ldr	r9, [fp, #12]
   37300:	cmp	r0, #1
   37304:	ldr	r0, [fp, #20]
   37308:	blt	242a8 <GetDataSlab+0x1d8c>
   3730c:	mov	r1, lr
   37310:	add	lr, r0, #4
   37314:	add	r0, sp, #104	; 0x68
   37318:	orr	ip, r0, #4
   3731c:	orr	r0, r1, #4
   37320:	str	r0, [sp, #40]	; 0x28
   37324:	ldr	r0, [r9], #4
   37328:	str	r0, [sp, #44]	; 0x2c
   3732c:	mov	r0, #0
   37330:	str	r0, [sp, #52]	; 0x34
   37334:	ldr	r1, [sp, #44]	; 0x2c
   37338:	cmp	sl, #1
   3733c:	add	r0, r1, r2
   37340:	add	r4, r4, r1, lsl #1
   37344:	blt	37398 <GetDataSlab+0x14e7c>
   37348:	ldr	r2, [sp, #60]	; 0x3c
   3734c:	ldr	r1, [sp, #52]	; 0x34
   37350:	ldr	r7, [fp, #20]
   37354:	mov	r6, #0
   37358:	add	r5, r2, r1, lsl #2
   3735c:	ldr	r1, [fp, #16]
   37360:	ldrh	r2, [r4]
   37364:	str	r2, [r5, r6, lsl #2]
   37368:	add	r6, r6, #1
   3736c:	ldr	r3, [r1]
   37370:	ldr	sl, [r7]
   37374:	add	r0, r3, r0
   37378:	add	r4, r4, r3, lsl #1
   3737c:	cmp	r6, sl
   37380:	blt	37360 <GetDataSlab+0x14e44>
   37384:	ldr	r5, [fp, #12]
   37388:	ldr	r2, [r5]
   3738c:	ldr	r5, [fp, #8]
   37390:	ldr	r1, [r5]
   37394:	b	373a0 <GetDataSlab+0x14e84>
   37398:	mov	r2, r1
   3739c:	ldr	r1, [sp, #48]	; 0x30
   373a0:	mls	r6, r3, sl, r1
   373a4:	str	r2, [sp, #44]	; 0x2c
   373a8:	sub	r6, r6, r2
   373ac:	add	r2, r6, r0
   373b0:	ldr	r0, [fp, #24]
   373b4:	add	r4, r4, r6, lsl #1
   373b8:	cmp	r0, #2
   373bc:	blt	3746c <GetDataSlab+0x14f50>
   373c0:	mov	r5, #0
   373c4:	ldr	r6, [ip, r5, lsl #2]
   373c8:	mov	r0, r5
   373cc:	add	r6, r6, #1
   373d0:	str	r6, [ip, r5, lsl #2]
   373d4:	ldr	r5, [lr, r5, lsl #2]
   373d8:	sdiv	r7, r6, r5
   373dc:	mls	r5, r7, r5, r6
   373e0:	cmp	r5, #0
   373e4:	bne	3745c <GetDataSlab+0x14f40>
   373e8:	mov	r5, #0
   373ec:	add	r7, sp, #64	; 0x40
   373f0:	str	r5, [ip, r0, lsl #2]
   373f4:	add	r5, r7, r0, lsl #2
   373f8:	ldr	r5, [r5, #4]
   373fc:	sdiv	r6, r2, r5
   37400:	mls	r6, r6, r5, r2
   37404:	cmp	r6, #0
   37408:	beq	37424 <GetDataSlab+0x14f08>
   3740c:	ldr	r7, [r7, r0, lsl #2]
   37410:	ldr	r8, [r9, r0, lsl #2]
   37414:	sub	r5, r5, r6
   37418:	mla	r5, r8, r7, r5
   3741c:	add	r2, r5, r2
   37420:	b	37440 <GetDataSlab+0x14f24>
   37424:	ldr	r5, [r9, r0, lsl #2]
   37428:	cmp	r5, #0
   3742c:	beq	37444 <GetDataSlab+0x14f28>
   37430:	add	r6, sp, #64	; 0x40
   37434:	ldr	r6, [r6, r0, lsl #2]
   37438:	mla	r2, r6, r5, r2
   3743c:	mul	r5, r6, r5
   37440:	add	r4, r4, r5, lsl #1
   37444:	ldr	r6, [fp, #24]
   37448:	add	r5, r0, #1
   3744c:	add	r0, r0, #2
   37450:	cmp	r0, r6
   37454:	blt	373c4 <GetDataSlab+0x14ea8>
   37458:	b	3746c <GetDataSlab+0x14f50>
   3745c:	ldr	r5, [sp, #40]	; 0x28
   37460:	ldr	r0, [r5, r0, lsl #2]
   37464:	add	r4, r4, r0, lsl #1
   37468:	add	r2, r0, r2
   3746c:	ldr	r5, [sp, #52]	; 0x34
   37470:	str	r1, [sp, #48]	; 0x30
   37474:	ldr	r1, [sp, #56]	; 0x38
   37478:	mov	r0, #0
   3747c:	add	r5, sl, r5
   37480:	cmp	r5, r1
   37484:	str	r5, [sp, #52]	; 0x34
   37488:	blt	37334 <GetDataSlab+0x14e18>
   3748c:	b	242ac <GetDataSlab+0x1d90>
   37490:	ldr	r0, [sp, #56]	; 0x38
   37494:	cmp	r0, #1
   37498:	ldr	r0, [fp, #20]
   3749c:	blt	242a8 <GetDataSlab+0x1d8c>
   374a0:	add	r0, r0, #4
   374a4:	ldr	r9, [fp, #12]
   374a8:	str	r0, [sp, #40]	; 0x28
   374ac:	add	r0, sp, #104	; 0x68
   374b0:	orr	ip, r0, #4
   374b4:	sub	r0, fp, #72	; 0x48
   374b8:	orr	r0, r0, #4
   374bc:	str	r0, [sp, #36]	; 0x24
   374c0:	ldr	r0, [r9], #4
   374c4:	str	r0, [sp, #44]	; 0x2c
   374c8:	mov	r0, #0
   374cc:	str	r0, [sp, #52]	; 0x34
   374d0:	ldr	r6, [sp, #44]	; 0x2c
   374d4:	cmp	sl, #1
   374d8:	add	r0, r6, lr
   374dc:	add	r4, r2, r6, lsl #2
   374e0:	blt	37534 <GetDataSlab+0x15018>
   374e4:	ldr	r2, [sp, #60]	; 0x3c
   374e8:	ldr	r1, [sp, #52]	; 0x34
   374ec:	ldr	r7, [fp, #20]
   374f0:	mov	r6, #0
   374f4:	add	r5, r2, r1, lsl #2
   374f8:	ldr	r1, [fp, #16]
   374fc:	ldr	r2, [r4]
   37500:	str	r2, [r5, r6, lsl #2]
   37504:	add	r6, r6, #1
   37508:	ldr	r3, [r1]
   3750c:	ldr	sl, [r7]
   37510:	add	r0, r3, r0
   37514:	add	r4, r4, r3, lsl #2
   37518:	cmp	r6, sl
   3751c:	blt	374fc <GetDataSlab+0x14fe0>
   37520:	ldr	r7, [fp, #12]
   37524:	ldr	r6, [r7]
   37528:	ldr	r7, [fp, #8]
   3752c:	ldr	r1, [r7]
   37530:	b	37538 <GetDataSlab+0x1501c>
   37534:	ldr	r1, [sp, #48]	; 0x30
   37538:	mls	r5, r3, sl, r1
   3753c:	str	r1, [sp, #48]	; 0x30
   37540:	str	r6, [sp, #44]	; 0x2c
   37544:	sub	r5, r5, r6
   37548:	add	lr, r5, r0
   3754c:	ldr	r0, [fp, #24]
   37550:	add	r2, r4, r5, lsl #2
   37554:	cmp	r0, #2
   37558:	blt	3760c <GetDataSlab+0x150f0>
   3755c:	ldr	r1, [sp, #40]	; 0x28
   37560:	mov	r5, #0
   37564:	mov	r0, r5
   37568:	ldr	r5, [ip, r5, lsl #2]
   3756c:	add	r5, r5, #1
   37570:	str	r5, [ip, r0, lsl #2]
   37574:	ldr	r6, [r1, r0, lsl #2]
   37578:	sdiv	r8, r5, r6
   3757c:	mls	r5, r8, r6, r5
   37580:	cmp	r5, #0
   37584:	bne	375fc <GetDataSlab+0x150e0>
   37588:	mov	r4, #0
   3758c:	str	r4, [ip, r0, lsl #2]
   37590:	add	r4, sp, #64	; 0x40
   37594:	add	r5, r4, r0, lsl #2
   37598:	ldr	r5, [r5, #4]
   3759c:	sdiv	r6, lr, r5
   375a0:	mls	r6, r6, r5, lr
   375a4:	cmp	r6, #0
   375a8:	beq	375c4 <GetDataSlab+0x150a8>
   375ac:	ldr	r7, [r4, r0, lsl #2]
   375b0:	ldr	r4, [r9, r0, lsl #2]
   375b4:	sub	r5, r5, r6
   375b8:	mla	r4, r4, r7, r5
   375bc:	add	lr, r4, lr
   375c0:	b	375e0 <GetDataSlab+0x150c4>
   375c4:	ldr	r5, [r9, r0, lsl #2]
   375c8:	cmp	r5, #0
   375cc:	beq	375e4 <GetDataSlab+0x150c8>
   375d0:	add	r4, sp, #64	; 0x40
   375d4:	ldr	r4, [r4, r0, lsl #2]
   375d8:	mla	lr, r4, r5, lr
   375dc:	mul	r4, r4, r5
   375e0:	add	r2, r2, r4, lsl #2
   375e4:	ldr	r4, [fp, #24]
   375e8:	add	r5, r0, #1
   375ec:	add	r0, r0, #2
   375f0:	cmp	r0, r4
   375f4:	blt	37564 <GetDataSlab+0x15048>
   375f8:	b	3760c <GetDataSlab+0x150f0>
   375fc:	ldr	r1, [sp, #36]	; 0x24
   37600:	ldr	r0, [r1, r0, lsl #2]
   37604:	add	r2, r2, r0, lsl #2
   37608:	add	lr, r0, lr
   3760c:	ldr	r4, [sp, #52]	; 0x34
   37610:	ldr	r1, [sp, #56]	; 0x38
   37614:	mov	r0, #0
   37618:	add	r4, sl, r4
   3761c:	cmp	r4, r1
   37620:	str	r4, [sp, #52]	; 0x34
   37624:	blt	374d0 <GetDataSlab+0x14fb4>
   37628:	b	242ac <GetDataSlab+0x1d90>
   3762c:	ldr	r0, [sp, #56]	; 0x38
   37630:	cmp	r0, #1
   37634:	ldr	r0, [fp, #20]
   37638:	blt	242a8 <GetDataSlab+0x1d8c>
   3763c:	add	r0, r0, #4
   37640:	ldr	r9, [fp, #12]
   37644:	str	r0, [sp, #40]	; 0x28
   37648:	add	r0, sp, #104	; 0x68
   3764c:	orr	ip, r0, #4
   37650:	sub	r0, fp, #72	; 0x48
   37654:	orr	r0, r0, #4
   37658:	str	r0, [sp, #36]	; 0x24
   3765c:	ldr	r0, [r9], #4
   37660:	str	r0, [sp, #44]	; 0x2c
   37664:	mov	r0, #0
   37668:	str	r0, [sp, #52]	; 0x34
   3766c:	ldr	r6, [sp, #44]	; 0x2c
   37670:	cmp	sl, #1
   37674:	add	r0, r6, lr
   37678:	add	r4, r2, r6, lsl #2
   3767c:	blt	376d0 <GetDataSlab+0x151b4>
   37680:	ldr	r2, [sp, #60]	; 0x3c
   37684:	ldr	r1, [sp, #52]	; 0x34
   37688:	ldr	r7, [fp, #20]
   3768c:	mov	r6, #0
   37690:	add	r5, r2, r1, lsl #2
   37694:	ldr	r1, [fp, #16]
   37698:	ldr	r2, [r4]
   3769c:	str	r2, [r5, r6, lsl #2]
   376a0:	add	r6, r6, #1
   376a4:	ldr	r3, [r1]
   376a8:	ldr	sl, [r7]
   376ac:	add	r0, r3, r0
   376b0:	add	r4, r4, r3, lsl #2
   376b4:	cmp	r6, sl
   376b8:	blt	37698 <GetDataSlab+0x1517c>
   376bc:	ldr	r7, [fp, #12]
   376c0:	ldr	r6, [r7]
   376c4:	ldr	r7, [fp, #8]
   376c8:	ldr	r1, [r7]
   376cc:	b	376d4 <GetDataSlab+0x151b8>
   376d0:	ldr	r1, [sp, #48]	; 0x30
   376d4:	mls	r5, r3, sl, r1
   376d8:	str	r1, [sp, #48]	; 0x30
   376dc:	str	r6, [sp, #44]	; 0x2c
   376e0:	sub	r5, r5, r6
   376e4:	add	lr, r5, r0
   376e8:	ldr	r0, [fp, #24]
   376ec:	add	r2, r4, r5, lsl #2
   376f0:	cmp	r0, #2
   376f4:	blt	377a8 <GetDataSlab+0x1528c>
   376f8:	ldr	r1, [sp, #40]	; 0x28
   376fc:	mov	r5, #0
   37700:	mov	r0, r5
   37704:	ldr	r5, [ip, r5, lsl #2]
   37708:	add	r5, r5, #1
   3770c:	str	r5, [ip, r0, lsl #2]
   37710:	ldr	r6, [r1, r0, lsl #2]
   37714:	sdiv	r8, r5, r6
   37718:	mls	r5, r8, r6, r5
   3771c:	cmp	r5, #0
   37720:	bne	37798 <GetDataSlab+0x1527c>
   37724:	mov	r4, #0
   37728:	str	r4, [ip, r0, lsl #2]
   3772c:	add	r4, sp, #64	; 0x40
   37730:	add	r5, r4, r0, lsl #2
   37734:	ldr	r5, [r5, #4]
   37738:	sdiv	r6, lr, r5
   3773c:	mls	r6, r6, r5, lr
   37740:	cmp	r6, #0
   37744:	beq	37760 <GetDataSlab+0x15244>
   37748:	ldr	r7, [r4, r0, lsl #2]
   3774c:	ldr	r4, [r9, r0, lsl #2]
   37750:	sub	r5, r5, r6
   37754:	mla	r4, r4, r7, r5
   37758:	add	lr, r4, lr
   3775c:	b	3777c <GetDataSlab+0x15260>
   37760:	ldr	r5, [r9, r0, lsl #2]
   37764:	cmp	r5, #0
   37768:	beq	37780 <GetDataSlab+0x15264>
   3776c:	add	r4, sp, #64	; 0x40
   37770:	ldr	r4, [r4, r0, lsl #2]
   37774:	mla	lr, r4, r5, lr
   37778:	mul	r4, r4, r5
   3777c:	add	r2, r2, r4, lsl #2
   37780:	ldr	r4, [fp, #24]
   37784:	add	r5, r0, #1
   37788:	add	r0, r0, #2
   3778c:	cmp	r0, r4
   37790:	blt	37700 <GetDataSlab+0x151e4>
   37794:	b	377a8 <GetDataSlab+0x1528c>
   37798:	ldr	r1, [sp, #36]	; 0x24
   3779c:	ldr	r0, [r1, r0, lsl #2]
   377a0:	add	r2, r2, r0, lsl #2
   377a4:	add	lr, r0, lr
   377a8:	ldr	r4, [sp, #52]	; 0x34
   377ac:	ldr	r1, [sp, #56]	; 0x38
   377b0:	mov	r0, #0
   377b4:	add	r4, sl, r4
   377b8:	cmp	r4, r1
   377bc:	str	r4, [sp, #52]	; 0x34
   377c0:	blt	3766c <GetDataSlab+0x15150>
   377c4:	b	242ac <GetDataSlab+0x1d90>
   377c8:	ldr	r0, [sp, #56]	; 0x38
   377cc:	ldr	r9, [fp, #12]
   377d0:	cmp	r0, #1
   377d4:	ldr	r0, [fp, #20]
   377d8:	blt	242a8 <GetDataSlab+0x1d8c>
   377dc:	add	r7, r0, #4
   377e0:	mov	r0, lr
   377e4:	add	r1, sp, #104	; 0x68
   377e8:	orr	r0, r0, #4
   377ec:	orr	lr, r1, #4
   377f0:	str	r0, [sp, #40]	; 0x28
   377f4:	ldr	r0, [r9], #4
   377f8:	str	r0, [sp, #44]	; 0x2c
   377fc:	mov	r0, #0
   37800:	str	r0, [sp, #52]	; 0x34
   37804:	ldr	r5, [sp, #44]	; 0x2c
   37808:	cmp	ip, #1
   3780c:	add	r0, r5, sl
   37810:	add	r4, r2, r5, lsl #2
   37814:	blt	37878 <GetDataSlab+0x1535c>
   37818:	ldr	r1, [sp, #60]	; 0x3c
   3781c:	ldr	r2, [sp, #52]	; 0x34
   37820:	mov	r8, r7
   37824:	ldr	r7, [fp, #16]
   37828:	mov	r6, #0
   3782c:	add	r5, r1, r2, lsl #2
   37830:	ldr	r1, [fp, #20]
   37834:	vldr	s0, [r4]
   37838:	vcvt.s32.f32	s0, s0
   3783c:	vmov	r2, s0
   37840:	str	r2, [r5, r6, lsl #2]
   37844:	add	r6, r6, #1
   37848:	ldr	r3, [r7]
   3784c:	ldr	ip, [r1]
   37850:	add	r0, r3, r0
   37854:	add	r4, r4, r3, lsl #2
   37858:	cmp	r6, ip
   3785c:	blt	37834 <GetDataSlab+0x15318>
   37860:	ldr	r1, [fp, #12]
   37864:	mov	r7, r8
   37868:	ldr	r5, [r1]
   3786c:	ldr	r1, [fp, #8]
   37870:	ldr	r1, [r1]
   37874:	b	3787c <GetDataSlab+0x15360>
   37878:	ldr	r1, [sp, #48]	; 0x30
   3787c:	mls	r6, r3, ip, r1
   37880:	str	r1, [sp, #48]	; 0x30
   37884:	str	r5, [sp, #44]	; 0x2c
   37888:	sub	r6, r6, r5
   3788c:	add	sl, r6, r0
   37890:	ldr	r0, [fp, #24]
   37894:	add	r2, r4, r6, lsl #2
   37898:	cmp	r0, #2
   3789c:	blt	3794c <GetDataSlab+0x15430>
   378a0:	mov	r5, #0
   378a4:	ldr	r6, [lr, r5, lsl #2]
   378a8:	mov	r0, r5
   378ac:	add	r6, r6, #1
   378b0:	str	r6, [lr, r5, lsl #2]
   378b4:	ldr	r5, [r7, r5, lsl #2]
   378b8:	sdiv	r1, r6, r5
   378bc:	mls	r1, r1, r5, r6
   378c0:	cmp	r1, #0
   378c4:	bne	3793c <GetDataSlab+0x15420>
   378c8:	mov	r1, #0
   378cc:	add	r4, sp, #64	; 0x40
   378d0:	str	r1, [lr, r0, lsl #2]
   378d4:	add	r1, r4, r0, lsl #2
   378d8:	ldr	r5, [r1, #4]
   378dc:	sdiv	r1, sl, r5
   378e0:	mls	r6, r1, r5, sl
   378e4:	cmp	r6, #0
   378e8:	beq	37904 <GetDataSlab+0x153e8>
   378ec:	ldr	r1, [r4, r0, lsl #2]
   378f0:	ldr	r8, [r9, r0, lsl #2]
   378f4:	sub	r5, r5, r6
   378f8:	mla	r1, r8, r1, r5
   378fc:	add	sl, r1, sl
   37900:	b	37920 <GetDataSlab+0x15404>
   37904:	ldr	r5, [r9, r0, lsl #2]
   37908:	cmp	r5, #0
   3790c:	beq	37924 <GetDataSlab+0x15408>
   37910:	add	r1, sp, #64	; 0x40
   37914:	ldr	r1, [r1, r0, lsl #2]
   37918:	mla	sl, r1, r5, sl
   3791c:	mul	r1, r1, r5
   37920:	add	r2, r2, r1, lsl #2
   37924:	ldr	r1, [fp, #24]
   37928:	add	r5, r0, #1
   3792c:	add	r0, r0, #2
   37930:	cmp	r0, r1
   37934:	blt	378a4 <GetDataSlab+0x15388>
   37938:	b	3794c <GetDataSlab+0x15430>
   3793c:	ldr	r1, [sp, #40]	; 0x28
   37940:	ldr	r0, [r1, r0, lsl #2]
   37944:	add	r2, r2, r0, lsl #2
   37948:	add	sl, r0, sl
   3794c:	ldr	r4, [sp, #52]	; 0x34
   37950:	ldr	r1, [sp, #56]	; 0x38
   37954:	mov	r0, #0
   37958:	add	r4, ip, r4
   3795c:	cmp	r4, r1
   37960:	str	r4, [sp, #52]	; 0x34
   37964:	blt	37804 <GetDataSlab+0x152e8>
   37968:	b	242ac <GetDataSlab+0x1d90>
   3796c:	ldr	r0, [sp, #56]	; 0x38
   37970:	ldr	r9, [fp, #12]
   37974:	cmp	r0, #1
   37978:	ldr	r0, [fp, #20]
   3797c:	blt	242a8 <GetDataSlab+0x1d8c>
   37980:	add	r7, r0, #4
   37984:	mov	r0, lr
   37988:	add	r1, sp, #104	; 0x68
   3798c:	orr	r0, r0, #4
   37990:	orr	lr, r1, #4
   37994:	str	r0, [sp, #40]	; 0x28
   37998:	ldr	r0, [r9], #4
   3799c:	str	r0, [sp, #44]	; 0x2c
   379a0:	mov	r0, #0
   379a4:	str	r0, [sp, #52]	; 0x34
   379a8:	ldr	r5, [sp, #44]	; 0x2c
   379ac:	cmp	ip, #1
   379b0:	add	r0, r5, sl
   379b4:	add	r4, r2, r5, lsl #3
   379b8:	blt	37a1c <GetDataSlab+0x15500>
   379bc:	ldr	r1, [sp, #60]	; 0x3c
   379c0:	ldr	r2, [sp, #52]	; 0x34
   379c4:	mov	r8, r7
   379c8:	ldr	r7, [fp, #16]
   379cc:	mov	r6, #0
   379d0:	add	r5, r1, r2, lsl #2
   379d4:	ldr	r1, [fp, #20]
   379d8:	vldr	d16, [r4]
   379dc:	vcvt.s32.f64	s0, d16
   379e0:	vmov	r2, s0
   379e4:	str	r2, [r5, r6, lsl #2]
   379e8:	add	r6, r6, #1
   379ec:	ldr	r3, [r7]
   379f0:	ldr	ip, [r1]
   379f4:	add	r0, r3, r0
   379f8:	add	r4, r4, r3, lsl #3
   379fc:	cmp	r6, ip
   37a00:	blt	379d8 <GetDataSlab+0x154bc>
   37a04:	ldr	r1, [fp, #12]
   37a08:	mov	r7, r8
   37a0c:	ldr	r5, [r1]
   37a10:	ldr	r1, [fp, #8]
   37a14:	ldr	r1, [r1]
   37a18:	b	37a20 <GetDataSlab+0x15504>
   37a1c:	ldr	r1, [sp, #48]	; 0x30
   37a20:	mls	r6, r3, ip, r1
   37a24:	str	r1, [sp, #48]	; 0x30
   37a28:	str	r5, [sp, #44]	; 0x2c
   37a2c:	sub	r6, r6, r5
   37a30:	add	sl, r6, r0
   37a34:	ldr	r0, [fp, #24]
   37a38:	add	r2, r4, r6, lsl #3
   37a3c:	cmp	r0, #2
   37a40:	blt	37af0 <GetDataSlab+0x155d4>
   37a44:	mov	r5, #0
   37a48:	ldr	r6, [lr, r5, lsl #2]
   37a4c:	mov	r0, r5
   37a50:	add	r6, r6, #1
   37a54:	str	r6, [lr, r5, lsl #2]
   37a58:	ldr	r5, [r7, r5, lsl #2]
   37a5c:	sdiv	r1, r6, r5
   37a60:	mls	r1, r1, r5, r6
   37a64:	cmp	r1, #0
   37a68:	bne	37ae0 <GetDataSlab+0x155c4>
   37a6c:	mov	r1, #0
   37a70:	add	r4, sp, #64	; 0x40
   37a74:	str	r1, [lr, r0, lsl #2]
   37a78:	add	r1, r4, r0, lsl #2
   37a7c:	ldr	r5, [r1, #4]
   37a80:	sdiv	r1, sl, r5
   37a84:	mls	r6, r1, r5, sl
   37a88:	cmp	r6, #0
   37a8c:	beq	37aa8 <GetDataSlab+0x1558c>
   37a90:	ldr	r1, [r4, r0, lsl #2]
   37a94:	ldr	r8, [r9, r0, lsl #2]
   37a98:	sub	r5, r5, r6
   37a9c:	mla	r1, r8, r1, r5
   37aa0:	add	sl, r1, sl
   37aa4:	b	37ac4 <GetDataSlab+0x155a8>
   37aa8:	ldr	r5, [r9, r0, lsl #2]
   37aac:	cmp	r5, #0
   37ab0:	beq	37ac8 <GetDataSlab+0x155ac>
   37ab4:	add	r1, sp, #64	; 0x40
   37ab8:	ldr	r1, [r1, r0, lsl #2]
   37abc:	mla	sl, r1, r5, sl
   37ac0:	mul	r1, r1, r5
   37ac4:	add	r2, r2, r1, lsl #3
   37ac8:	ldr	r1, [fp, #24]
   37acc:	add	r5, r0, #1
   37ad0:	add	r0, r0, #2
   37ad4:	cmp	r0, r1
   37ad8:	blt	37a48 <GetDataSlab+0x1552c>
   37adc:	b	37af0 <GetDataSlab+0x155d4>
   37ae0:	ldr	r1, [sp, #40]	; 0x28
   37ae4:	ldr	r0, [r1, r0, lsl #2]
   37ae8:	add	r2, r2, r0, lsl #3
   37aec:	add	sl, r0, sl
   37af0:	ldr	r4, [sp, #52]	; 0x34
   37af4:	ldr	r1, [sp, #56]	; 0x38
   37af8:	mov	r0, #0
   37afc:	add	r4, ip, r4
   37b00:	cmp	r4, r1
   37b04:	str	r4, [sp, #52]	; 0x34
   37b08:	blt	379a8 <GetDataSlab+0x1548c>
   37b0c:	b	242ac <GetDataSlab+0x1d90>
   37b10:	ldr	r0, [sp, #56]	; 0x38
   37b14:	ldr	lr, [sp, #60]	; 0x3c
   37b18:	ldr	r9, [fp, #12]
   37b1c:	cmp	r0, #1
   37b20:	blt	37c94 <GetDataSlab+0x15778>
   37b24:	ldr	r0, [fp, #20]
   37b28:	ldr	r2, [r9], #4
   37b2c:	mov	r6, #0
   37b30:	add	sl, r0, #4
   37b34:	add	r0, sp, #104	; 0x68
   37b38:	orr	ip, r0, #4
   37b3c:	sub	r0, fp, #72	; 0x48
   37b40:	orr	r0, r0, #4
   37b44:	str	r0, [sp, #36]	; 0x24
   37b48:	add	r3, r2, r8
   37b4c:	add	r4, r4, r2, lsl #3
   37b50:	cmp	r1, #1
   37b54:	str	r6, [sp, #40]	; 0x28
   37b58:	blt	37ba4 <GetDataSlab+0x15688>
   37b5c:	ldr	r0, [fp, #20]
   37b60:	ldr	r2, [fp, #16]
   37b64:	add	r6, lr, r6, lsl #2
   37b68:	mov	r7, #0
   37b6c:	ldr	r1, [r4]
   37b70:	str	r1, [r6, r7, lsl #2]
   37b74:	add	r7, r7, #1
   37b78:	ldr	r5, [r2]
   37b7c:	ldr	r1, [r0]
   37b80:	add	r3, r5, r3
   37b84:	add	r4, r4, r5, lsl #3
   37b88:	cmp	r7, r1
   37b8c:	blt	37b6c <GetDataSlab+0x15650>
   37b90:	ldr	r0, [fp, #12]
   37b94:	ldr	r7, [r0]
   37b98:	ldr	r0, [fp, #8]
   37b9c:	ldr	r0, [r0]
   37ba0:	b	37bac <GetDataSlab+0x15690>
   37ba4:	ldr	r0, [sp, #44]	; 0x2c
   37ba8:	mov	r7, r2
   37bac:	mls	r6, r5, r1, r0
   37bb0:	str	r0, [sp, #44]	; 0x2c
   37bb4:	ldr	r0, [fp, #24]
   37bb8:	mov	r2, r7
   37bbc:	sub	r6, r6, r7
   37bc0:	add	r4, r4, r6, lsl #3
   37bc4:	add	r8, r6, r3
   37bc8:	cmp	r0, #2
   37bcc:	blt	37c80 <GetDataSlab+0x15764>
   37bd0:	mov	r3, #0
   37bd4:	mov	r6, r3
   37bd8:	ldr	r3, [ip, r3, lsl #2]
   37bdc:	add	r3, r3, #1
   37be0:	str	r3, [ip, r6, lsl #2]
   37be4:	ldr	r7, [sl, r6, lsl #2]
   37be8:	sdiv	r0, r3, r7
   37bec:	mls	r0, r0, r7, r3
   37bf0:	cmp	r0, #0
   37bf4:	bne	37c70 <GetDataSlab+0x15754>
   37bf8:	mov	r0, #0
   37bfc:	add	r7, sp, #64	; 0x40
   37c00:	str	r0, [ip, r6, lsl #2]
   37c04:	add	r0, r7, r6, lsl #2
   37c08:	ldr	r3, [r0, #4]
   37c0c:	sdiv	r0, r8, r3
   37c10:	mls	lr, r0, r3, r8
   37c14:	cmp	lr, #0
   37c18:	beq	37c34 <GetDataSlab+0x15718>
   37c1c:	ldr	r0, [r7, r6, lsl #2]
   37c20:	ldr	r7, [r9, r6, lsl #2]
   37c24:	sub	r3, r3, lr
   37c28:	mla	r0, r7, r0, r3
   37c2c:	add	r8, r0, r8
   37c30:	b	37c50 <GetDataSlab+0x15734>
   37c34:	ldr	r3, [r9, r6, lsl #2]
   37c38:	cmp	r3, #0
   37c3c:	beq	37c54 <GetDataSlab+0x15738>
   37c40:	add	r0, sp, #64	; 0x40
   37c44:	ldr	r0, [r0, r6, lsl #2]
   37c48:	mla	r8, r0, r3, r8
   37c4c:	mul	r0, r0, r3
   37c50:	add	r4, r4, r0, lsl #3
   37c54:	add	r3, r6, #1
   37c58:	add	r0, r6, #2
   37c5c:	ldr	r6, [fp, #24]
   37c60:	ldr	lr, [sp, #60]	; 0x3c
   37c64:	cmp	r0, r6
   37c68:	blt	37bd4 <GetDataSlab+0x156b8>
   37c6c:	b	37c80 <GetDataSlab+0x15764>
   37c70:	ldr	r0, [sp, #36]	; 0x24
   37c74:	ldr	r0, [r0, r6, lsl #2]
   37c78:	add	r4, r4, r0, lsl #3
   37c7c:	add	r8, r0, r8
   37c80:	ldr	r6, [sp, #40]	; 0x28
   37c84:	ldr	r0, [sp, #56]	; 0x38
   37c88:	add	r6, r1, r6
   37c8c:	cmp	r6, r0
   37c90:	blt	37b48 <GetDataSlab+0x1562c>
   37c94:	ldr	r3, [sp, #48]	; 0x30
   37c98:	mov	r0, #0
   37c9c:	cmp	r3, #13
   37ca0:	bne	242ac <GetDataSlab+0x1d90>
   37ca4:	ldr	r0, [fp, #16]
   37ca8:	ldr	lr, [fp, #8]
   37cac:	add	r5, sp, #64	; 0x40
   37cb0:	sub	r9, fp, #72	; 0x48
   37cb4:	ldr	r3, [r0]
   37cb8:	sub	r0, r3, #1
   37cbc:	str	r0, [fp, #-72]	; 0xffffffb8
   37cc0:	ldr	r0, [lr]
   37cc4:	mov	lr, #0
   37cc8:	str	r0, [sp, #48]	; 0x30
   37ccc:	str	r0, [sp, #64]	; 0x40
   37cd0:	ldr	r0, [fp, #20]
   37cd4:	ldr	sl, [r0]
   37cd8:	ldr	r0, [fp, #24]
   37cdc:	cmp	r0, #2
   37ce0:	mov	r0, sl
   37ce4:	str	sl, [sp, #56]	; 0x38
   37ce8:	blt	37d90 <GetDataSlab+0x15874>
   37cec:	ldr	r7, [sp, #48]	; 0x30
   37cf0:	ldr	r1, [fp, #8]
   37cf4:	mov	r0, #1
   37cf8:	mov	lr, #0
   37cfc:	mov	r2, sl
   37d00:	str	sl, [sp, #56]	; 0x38
   37d04:	mov	r8, r7
   37d08:	ldr	r6, [fp, #16]
   37d0c:	ldr	r2, [fp, #8]
   37d10:	ldr	r6, [r6, r0, lsl #2]
   37d14:	str	r7, [r5, r0, lsl #2]
   37d18:	sub	r4, r6, #1
   37d1c:	mov	r6, #0
   37d20:	str	r4, [r9, r0, lsl #2]
   37d24:	ldr	ip, [r2, r0, lsl #2]
   37d28:	mov	r5, ip
   37d2c:	mul	r7, r5, r7
   37d30:	ldr	r5, [r1, -r6, lsl #2]
   37d34:	add	r6, r6, #1
   37d38:	cmp	r0, r6
   37d3c:	mul	r4, r4, r5
   37d40:	bne	37d2c <GetDataSlab+0x15810>
   37d44:	ldr	r6, [fp, #12]
   37d48:	add	r5, sp, #64	; 0x40
   37d4c:	sub	r9, fp, #72	; 0x48
   37d50:	ldr	r2, [sp, #56]	; 0x38
   37d54:	add	r1, r1, #4
   37d58:	str	r7, [r5, r0, lsl #2]
   37d5c:	str	r4, [r9, r0, lsl #2]
   37d60:	ldr	r4, [r6, r0, lsl #2]
   37d64:	ldr	r6, [fp, #20]
   37d68:	mla	lr, r4, r8, lr
   37d6c:	ldr	r4, [r6, r0, lsl #2]
   37d70:	ldr	r6, [fp, #24]
   37d74:	add	r0, r0, #1
   37d78:	mov	r8, r7
   37d7c:	mov	r7, ip
   37d80:	mul	r2, r4, r2
   37d84:	cmp	r0, r6
   37d88:	str	r2, [sp, #56]	; 0x38
   37d8c:	bne	37d08 <GetDataSlab+0x157ec>
   37d90:	ldr	r0, [sp, #52]	; 0x34
   37d94:	mov	r2, lr
   37d98:	cmp	r3, #1
   37d9c:	add	r4, r0, lr, lsl #3
   37da0:	bne	3b6b0 <GetDataSlab+0x19194>
   37da4:	ldr	r0, [sp, #56]	; 0x38
   37da8:	ldr	lr, [fp, #12]
   37dac:	cmp	r0, #1
   37db0:	ldr	r0, [fp, #20]
   37db4:	blt	242a8 <GetDataSlab+0x1d8c>
   37db8:	add	r8, r0, #4
   37dbc:	add	r0, sp, #104	; 0x68
   37dc0:	mov	r9, #0
   37dc4:	orr	r3, r0, #4
   37dc8:	sub	r0, fp, #72	; 0x48
   37dcc:	orr	r0, r0, #4
   37dd0:	str	r0, [sp, #44]	; 0x2c
   37dd4:	ldr	r0, [lr], #4
   37dd8:	str	r0, [sp, #52]	; 0x34
   37ddc:	ldr	r1, [sp, #52]	; 0x34
   37de0:	ldr	r0, [sp, #48]	; 0x30
   37de4:	cmp	sl, #1
   37de8:	add	r2, r1, r2
   37dec:	add	ip, r4, r1, lsl #3
   37df0:	blt	37e30 <GetDataSlab+0x15914>
   37df4:	ldr	r0, [sp, #60]	; 0x3c
   37df8:	ldr	r6, [fp, #20]
   37dfc:	mov	r4, ip
   37e00:	add	r5, r0, r9, lsl #2
   37e04:	mov	r0, #0
   37e08:	ldr	r1, [r4], #8
   37e0c:	str	r1, [r5, r0, lsl #2]
   37e10:	add	r0, r0, #1
   37e14:	ldr	sl, [r6]
   37e18:	cmp	r0, sl
   37e1c:	blt	37e08 <GetDataSlab+0x158ec>
   37e20:	ldr	r0, [fp, #12]
   37e24:	ldr	r1, [r0]
   37e28:	ldr	r0, [fp, #8]
   37e2c:	ldr	r0, [r0]
   37e30:	str	r0, [sp, #48]	; 0x30
   37e34:	sub	r0, r0, r1
   37e38:	str	r1, [sp, #52]	; 0x34
   37e3c:	add	r4, ip, r0, lsl #3
   37e40:	add	r2, r2, r0
   37e44:	ldr	r0, [fp, #24]
   37e48:	cmp	r0, #2
   37e4c:	blt	37ef8 <GetDataSlab+0x159dc>
   37e50:	mov	r5, #0
   37e54:	add	ip, sp, #64	; 0x40
   37e58:	ldr	r1, [r3, r5, lsl #2]
   37e5c:	mov	r0, r5
   37e60:	add	r1, r1, #1
   37e64:	str	r1, [r3, r5, lsl #2]
   37e68:	ldr	r5, [r8, r5, lsl #2]
   37e6c:	sdiv	r6, r1, r5
   37e70:	mls	r1, r6, r5, r1
   37e74:	cmp	r1, #0
   37e78:	bne	37ee8 <GetDataSlab+0x159cc>
   37e7c:	mov	r1, #0
   37e80:	str	r1, [r3, r0, lsl #2]
   37e84:	add	r1, ip, r0, lsl #2
   37e88:	ldr	r5, [r1, #4]
   37e8c:	sdiv	r1, r2, r5
   37e90:	mls	r1, r1, r5, r2
   37e94:	cmp	r1, #0
   37e98:	beq	37eb4 <GetDataSlab+0x15998>
   37e9c:	ldr	r6, [ip, r0, lsl #2]
   37ea0:	ldr	r7, [lr, r0, lsl #2]
   37ea4:	sub	r1, r5, r1
   37ea8:	mla	r1, r7, r6, r1
   37eac:	add	r2, r1, r2
   37eb0:	b	37ecc <GetDataSlab+0x159b0>
   37eb4:	ldr	r1, [lr, r0, lsl #2]
   37eb8:	cmp	r1, #0
   37ebc:	beq	37ed0 <GetDataSlab+0x159b4>
   37ec0:	ldr	r7, [ip, r0, lsl #2]
   37ec4:	mla	r2, r7, r1, r2
   37ec8:	mul	r1, r7, r1
   37ecc:	add	r4, r4, r1, lsl #3
   37ed0:	ldr	r1, [fp, #24]
   37ed4:	add	r5, r0, #1
   37ed8:	add	r0, r0, #2
   37edc:	cmp	r0, r1
   37ee0:	blt	37e58 <GetDataSlab+0x1593c>
   37ee4:	b	37ef8 <GetDataSlab+0x159dc>
   37ee8:	ldr	r1, [sp, #44]	; 0x2c
   37eec:	ldr	r0, [r1, r0, lsl #2]
   37ef0:	add	r4, r4, r0, lsl #3
   37ef4:	add	r2, r0, r2
   37ef8:	ldr	r1, [sp, #56]	; 0x38
   37efc:	add	r9, sl, r9
   37f00:	mov	r0, #0
   37f04:	cmp	r9, r1
   37f08:	blt	37ddc <GetDataSlab+0x158c0>
   37f0c:	b	242ac <GetDataSlab+0x1d90>
   37f10:	ldr	r0, [sp, #56]	; 0x38
   37f14:	cmp	r0, #1
   37f18:	ldr	r0, [fp, #20]
   37f1c:	blt	242a8 <GetDataSlab+0x1d8c>
   37f20:	add	r0, r0, #4
   37f24:	ldr	r9, [fp, #12]
   37f28:	str	r0, [sp, #40]	; 0x28
   37f2c:	add	r0, sp, #104	; 0x68
   37f30:	orr	ip, r0, #4
   37f34:	sub	r0, fp, #72	; 0x48
   37f38:	orr	r0, r0, #4
   37f3c:	str	r0, [sp, #36]	; 0x24
   37f40:	ldr	r0, [r9], #4
   37f44:	str	r0, [sp, #44]	; 0x2c
   37f48:	mov	r0, #0
   37f4c:	str	r0, [sp, #52]	; 0x34
   37f50:	ldr	r6, [sp, #44]	; 0x2c
   37f54:	cmp	sl, #1
   37f58:	add	r0, r6, lr
   37f5c:	add	r4, r2, r6
   37f60:	blt	37fb4 <GetDataSlab+0x15a98>
   37f64:	ldr	r2, [sp, #60]	; 0x3c
   37f68:	ldr	r1, [sp, #52]	; 0x34
   37f6c:	ldr	r7, [fp, #20]
   37f70:	mov	r6, #0
   37f74:	add	r5, r2, r1, lsl #2
   37f78:	ldr	r1, [fp, #16]
   37f7c:	ldrb	r2, [r4]
   37f80:	str	r2, [r5, r6, lsl #2]
   37f84:	add	r6, r6, #1
   37f88:	ldr	r3, [r1]
   37f8c:	ldr	sl, [r7]
   37f90:	add	r0, r3, r0
   37f94:	add	r4, r4, r3
   37f98:	cmp	r6, sl
   37f9c:	blt	37f7c <GetDataSlab+0x15a60>
   37fa0:	ldr	r7, [fp, #12]
   37fa4:	ldr	r6, [r7]
   37fa8:	ldr	r7, [fp, #8]
   37fac:	ldr	r1, [r7]
   37fb0:	b	37fb8 <GetDataSlab+0x15a9c>
   37fb4:	ldr	r1, [sp, #48]	; 0x30
   37fb8:	mls	r5, r3, sl, r1
   37fbc:	str	r1, [sp, #48]	; 0x30
   37fc0:	str	r6, [sp, #44]	; 0x2c
   37fc4:	sub	r5, r5, r6
   37fc8:	add	lr, r5, r0
   37fcc:	ldr	r0, [fp, #24]
   37fd0:	add	r2, r4, r5
   37fd4:	cmp	r0, #2
   37fd8:	blt	38088 <GetDataSlab+0x15b6c>
   37fdc:	ldr	r1, [sp, #40]	; 0x28
   37fe0:	mov	r5, #0
   37fe4:	mov	r0, r5
   37fe8:	ldr	r5, [ip, r5, lsl #2]
   37fec:	add	r5, r5, #1
   37ff0:	str	r5, [ip, r0, lsl #2]
   37ff4:	ldr	r6, [r1, r0, lsl #2]
   37ff8:	sdiv	r8, r5, r6
   37ffc:	mls	r5, r8, r6, r5
   38000:	cmp	r5, #0
   38004:	bne	38078 <GetDataSlab+0x15b5c>
   38008:	mov	r4, #0
   3800c:	str	r4, [ip, r0, lsl #2]
   38010:	add	r4, sp, #64	; 0x40
   38014:	add	r5, r4, r0, lsl #2
   38018:	ldr	r5, [r5, #4]
   3801c:	sdiv	r6, lr, r5
   38020:	mls	r6, r6, r5, lr
   38024:	cmp	r6, #0
   38028:	beq	38048 <GetDataSlab+0x15b2c>
   3802c:	ldr	r7, [r4, r0, lsl #2]
   38030:	ldr	r4, [r9, r0, lsl #2]
   38034:	sub	r5, r5, r6
   38038:	mla	r4, r4, r7, r5
   3803c:	add	lr, r4, lr
   38040:	add	r2, r2, r4
   38044:	b	38060 <GetDataSlab+0x15b44>
   38048:	ldr	r5, [r9, r0, lsl #2]
   3804c:	cmp	r5, #0
   38050:	addne	r4, sp, #64	; 0x40
   38054:	ldrne	r4, [r4, r0, lsl #2]
   38058:	mlane	lr, r4, r5, lr
   3805c:	mlane	r2, r4, r5, r2
   38060:	ldr	r4, [fp, #24]
   38064:	add	r5, r0, #1
   38068:	add	r0, r0, #2
   3806c:	cmp	r0, r4
   38070:	blt	37fe4 <GetDataSlab+0x15ac8>
   38074:	b	38088 <GetDataSlab+0x15b6c>
   38078:	ldr	r1, [sp, #36]	; 0x24
   3807c:	ldr	r0, [r1, r0, lsl #2]
   38080:	add	r2, r2, r0
   38084:	add	lr, r0, lr
   38088:	ldr	r4, [sp, #52]	; 0x34
   3808c:	ldr	r1, [sp, #56]	; 0x38
   38090:	mov	r0, #0
   38094:	add	r4, sl, r4
   38098:	cmp	r4, r1
   3809c:	str	r4, [sp, #52]	; 0x34
   380a0:	blt	37f50 <GetDataSlab+0x15a34>
   380a4:	b	242ac <GetDataSlab+0x1d90>
   380a8:	ldr	r0, [sp, #56]	; 0x38
   380ac:	ldr	r9, [fp, #12]
   380b0:	cmp	r0, #1
   380b4:	ldr	r0, [fp, #20]
   380b8:	blt	242a8 <GetDataSlab+0x1d8c>
   380bc:	mov	r1, lr
   380c0:	add	lr, r0, #4
   380c4:	add	r0, sp, #104	; 0x68
   380c8:	orr	ip, r0, #4
   380cc:	orr	r0, r1, #4
   380d0:	str	r0, [sp, #40]	; 0x28
   380d4:	ldr	r0, [r9], #4
   380d8:	str	r0, [sp, #44]	; 0x2c
   380dc:	mov	r0, #0
   380e0:	str	r0, [sp, #52]	; 0x34
   380e4:	ldr	r1, [sp, #44]	; 0x2c
   380e8:	cmp	sl, #1
   380ec:	add	r0, r1, r2
   380f0:	add	r4, r4, r1, lsl #1
   380f4:	blt	38148 <GetDataSlab+0x15c2c>
   380f8:	ldr	r2, [sp, #60]	; 0x3c
   380fc:	ldr	r1, [sp, #52]	; 0x34
   38100:	ldr	r7, [fp, #20]
   38104:	mov	r6, #0
   38108:	add	r5, r2, r1, lsl #2
   3810c:	ldr	r1, [fp, #16]
   38110:	ldrsh	r2, [r4]
   38114:	str	r2, [r5, r6, lsl #2]
   38118:	add	r6, r6, #1
   3811c:	ldr	r3, [r1]
   38120:	ldr	sl, [r7]
   38124:	add	r0, r3, r0
   38128:	add	r4, r4, r3, lsl #1
   3812c:	cmp	r6, sl
   38130:	blt	38110 <GetDataSlab+0x15bf4>
   38134:	ldr	r5, [fp, #12]
   38138:	ldr	r2, [r5]
   3813c:	ldr	r5, [fp, #8]
   38140:	ldr	r1, [r5]
   38144:	b	38150 <GetDataSlab+0x15c34>
   38148:	mov	r2, r1
   3814c:	ldr	r1, [sp, #48]	; 0x30
   38150:	mls	r6, r3, sl, r1
   38154:	str	r2, [sp, #44]	; 0x2c
   38158:	sub	r6, r6, r2
   3815c:	add	r2, r6, r0
   38160:	ldr	r0, [fp, #24]
   38164:	add	r4, r4, r6, lsl #1
   38168:	cmp	r0, #2
   3816c:	blt	3821c <GetDataSlab+0x15d00>
   38170:	mov	r5, #0
   38174:	ldr	r6, [ip, r5, lsl #2]
   38178:	mov	r0, r5
   3817c:	add	r6, r6, #1
   38180:	str	r6, [ip, r5, lsl #2]
   38184:	ldr	r5, [lr, r5, lsl #2]
   38188:	sdiv	r7, r6, r5
   3818c:	mls	r5, r7, r5, r6
   38190:	cmp	r5, #0
   38194:	bne	3820c <GetDataSlab+0x15cf0>
   38198:	mov	r5, #0
   3819c:	add	r7, sp, #64	; 0x40
   381a0:	str	r5, [ip, r0, lsl #2]
   381a4:	add	r5, r7, r0, lsl #2
   381a8:	ldr	r5, [r5, #4]
   381ac:	sdiv	r6, r2, r5
   381b0:	mls	r6, r6, r5, r2
   381b4:	cmp	r6, #0
   381b8:	beq	381d4 <GetDataSlab+0x15cb8>
   381bc:	ldr	r7, [r7, r0, lsl #2]
   381c0:	ldr	r8, [r9, r0, lsl #2]
   381c4:	sub	r5, r5, r6
   381c8:	mla	r5, r8, r7, r5
   381cc:	add	r2, r5, r2
   381d0:	b	381f0 <GetDataSlab+0x15cd4>
   381d4:	ldr	r5, [r9, r0, lsl #2]
   381d8:	cmp	r5, #0
   381dc:	beq	381f4 <GetDataSlab+0x15cd8>
   381e0:	add	r6, sp, #64	; 0x40
   381e4:	ldr	r6, [r6, r0, lsl #2]
   381e8:	mla	r2, r6, r5, r2
   381ec:	mul	r5, r6, r5
   381f0:	add	r4, r4, r5, lsl #1
   381f4:	ldr	r6, [fp, #24]
   381f8:	add	r5, r0, #1
   381fc:	add	r0, r0, #2
   38200:	cmp	r0, r6
   38204:	blt	38174 <GetDataSlab+0x15c58>
   38208:	b	3821c <GetDataSlab+0x15d00>
   3820c:	ldr	r5, [sp, #40]	; 0x28
   38210:	ldr	r0, [r5, r0, lsl #2]
   38214:	add	r4, r4, r0, lsl #1
   38218:	add	r2, r0, r2
   3821c:	ldr	r5, [sp, #52]	; 0x34
   38220:	str	r1, [sp, #48]	; 0x30
   38224:	ldr	r1, [sp, #56]	; 0x38
   38228:	mov	r0, #0
   3822c:	add	r5, sl, r5
   38230:	cmp	r5, r1
   38234:	str	r5, [sp, #52]	; 0x34
   38238:	blt	380e4 <GetDataSlab+0x15bc8>
   3823c:	b	242ac <GetDataSlab+0x1d90>
   38240:	ldr	r0, [sp, #56]	; 0x38
   38244:	ldr	r9, [fp, #12]
   38248:	cmp	r0, #1
   3824c:	ldr	r0, [fp, #20]
   38250:	blt	242a8 <GetDataSlab+0x1d8c>
   38254:	mov	r1, lr
   38258:	add	lr, r0, #4
   3825c:	add	r0, sp, #104	; 0x68
   38260:	orr	ip, r0, #4
   38264:	orr	r0, r1, #4
   38268:	str	r0, [sp, #40]	; 0x28
   3826c:	ldr	r0, [r9], #4
   38270:	str	r0, [sp, #44]	; 0x2c
   38274:	mov	r0, #0
   38278:	str	r0, [sp, #52]	; 0x34
   3827c:	ldr	r1, [sp, #44]	; 0x2c
   38280:	cmp	sl, #1
   38284:	add	r0, r1, r2
   38288:	add	r4, r4, r1, lsl #1
   3828c:	blt	382e0 <GetDataSlab+0x15dc4>
   38290:	ldr	r2, [sp, #60]	; 0x3c
   38294:	ldr	r1, [sp, #52]	; 0x34
   38298:	ldr	r7, [fp, #20]
   3829c:	mov	r6, #0
   382a0:	add	r5, r2, r1, lsl #2
   382a4:	ldr	r1, [fp, #16]
   382a8:	ldrh	r2, [r4]
   382ac:	str	r2, [r5, r6, lsl #2]
   382b0:	add	r6, r6, #1
   382b4:	ldr	r3, [r1]
   382b8:	ldr	sl, [r7]
   382bc:	add	r0, r3, r0
   382c0:	add	r4, r4, r3, lsl #1
   382c4:	cmp	r6, sl
   382c8:	blt	382a8 <GetDataSlab+0x15d8c>
   382cc:	ldr	r5, [fp, #12]
   382d0:	ldr	r2, [r5]
   382d4:	ldr	r5, [fp, #8]
   382d8:	ldr	r1, [r5]
   382dc:	b	382e8 <GetDataSlab+0x15dcc>
   382e0:	mov	r2, r1
   382e4:	ldr	r1, [sp, #48]	; 0x30
   382e8:	mls	r6, r3, sl, r1
   382ec:	str	r2, [sp, #44]	; 0x2c
   382f0:	sub	r6, r6, r2
   382f4:	add	r2, r6, r0
   382f8:	ldr	r0, [fp, #24]
   382fc:	add	r4, r4, r6, lsl #1
   38300:	cmp	r0, #2
   38304:	blt	383b4 <GetDataSlab+0x15e98>
   38308:	mov	r5, #0
   3830c:	ldr	r6, [ip, r5, lsl #2]
   38310:	mov	r0, r5
   38314:	add	r6, r6, #1
   38318:	str	r6, [ip, r5, lsl #2]
   3831c:	ldr	r5, [lr, r5, lsl #2]
   38320:	sdiv	r7, r6, r5
   38324:	mls	r5, r7, r5, r6
   38328:	cmp	r5, #0
   3832c:	bne	383a4 <GetDataSlab+0x15e88>
   38330:	mov	r5, #0
   38334:	add	r7, sp, #64	; 0x40
   38338:	str	r5, [ip, r0, lsl #2]
   3833c:	add	r5, r7, r0, lsl #2
   38340:	ldr	r5, [r5, #4]
   38344:	sdiv	r6, r2, r5
   38348:	mls	r6, r6, r5, r2
   3834c:	cmp	r6, #0
   38350:	beq	3836c <GetDataSlab+0x15e50>
   38354:	ldr	r7, [r7, r0, lsl #2]
   38358:	ldr	r8, [r9, r0, lsl #2]
   3835c:	sub	r5, r5, r6
   38360:	mla	r5, r8, r7, r5
   38364:	add	r2, r5, r2
   38368:	b	38388 <GetDataSlab+0x15e6c>
   3836c:	ldr	r5, [r9, r0, lsl #2]
   38370:	cmp	r5, #0
   38374:	beq	3838c <GetDataSlab+0x15e70>
   38378:	add	r6, sp, #64	; 0x40
   3837c:	ldr	r6, [r6, r0, lsl #2]
   38380:	mla	r2, r6, r5, r2
   38384:	mul	r5, r6, r5
   38388:	add	r4, r4, r5, lsl #1
   3838c:	ldr	r6, [fp, #24]
   38390:	add	r5, r0, #1
   38394:	add	r0, r0, #2
   38398:	cmp	r0, r6
   3839c:	blt	3830c <GetDataSlab+0x15df0>
   383a0:	b	383b4 <GetDataSlab+0x15e98>
   383a4:	ldr	r5, [sp, #40]	; 0x28
   383a8:	ldr	r0, [r5, r0, lsl #2]
   383ac:	add	r4, r4, r0, lsl #1
   383b0:	add	r2, r0, r2
   383b4:	ldr	r5, [sp, #52]	; 0x34
   383b8:	str	r1, [sp, #48]	; 0x30
   383bc:	ldr	r1, [sp, #56]	; 0x38
   383c0:	mov	r0, #0
   383c4:	add	r5, sl, r5
   383c8:	cmp	r5, r1
   383cc:	str	r5, [sp, #52]	; 0x34
   383d0:	blt	3827c <GetDataSlab+0x15d60>
   383d4:	b	242ac <GetDataSlab+0x1d90>
   383d8:	ldr	r0, [sp, #56]	; 0x38
   383dc:	cmp	r0, #1
   383e0:	ldr	r0, [fp, #20]
   383e4:	blt	242a8 <GetDataSlab+0x1d8c>
   383e8:	add	r0, r0, #4
   383ec:	ldr	r9, [fp, #12]
   383f0:	str	r0, [sp, #40]	; 0x28
   383f4:	add	r0, sp, #104	; 0x68
   383f8:	orr	ip, r0, #4
   383fc:	sub	r0, fp, #72	; 0x48
   38400:	orr	r0, r0, #4
   38404:	str	r0, [sp, #36]	; 0x24
   38408:	ldr	r0, [r9], #4
   3840c:	str	r0, [sp, #44]	; 0x2c
   38410:	mov	r0, #0
   38414:	str	r0, [sp, #52]	; 0x34
   38418:	ldr	r6, [sp, #44]	; 0x2c
   3841c:	cmp	sl, #1
   38420:	add	r0, r6, lr
   38424:	add	r4, r2, r6, lsl #2
   38428:	blt	3847c <GetDataSlab+0x15f60>
   3842c:	ldr	r2, [sp, #60]	; 0x3c
   38430:	ldr	r1, [sp, #52]	; 0x34
   38434:	ldr	r7, [fp, #20]
   38438:	mov	r6, #0
   3843c:	add	r5, r2, r1, lsl #2
   38440:	ldr	r1, [fp, #16]
   38444:	ldr	r2, [r4]
   38448:	str	r2, [r5, r6, lsl #2]
   3844c:	add	r6, r6, #1
   38450:	ldr	r3, [r1]
   38454:	ldr	sl, [r7]
   38458:	add	r0, r3, r0
   3845c:	add	r4, r4, r3, lsl #2
   38460:	cmp	r6, sl
   38464:	blt	38444 <GetDataSlab+0x15f28>
   38468:	ldr	r7, [fp, #12]
   3846c:	ldr	r6, [r7]
   38470:	ldr	r7, [fp, #8]
   38474:	ldr	r1, [r7]
   38478:	b	38480 <GetDataSlab+0x15f64>
   3847c:	ldr	r1, [sp, #48]	; 0x30
   38480:	mls	r5, r3, sl, r1
   38484:	str	r1, [sp, #48]	; 0x30
   38488:	str	r6, [sp, #44]	; 0x2c
   3848c:	sub	r5, r5, r6
   38490:	add	lr, r5, r0
   38494:	ldr	r0, [fp, #24]
   38498:	add	r2, r4, r5, lsl #2
   3849c:	cmp	r0, #2
   384a0:	blt	38554 <GetDataSlab+0x16038>
   384a4:	ldr	r1, [sp, #40]	; 0x28
   384a8:	mov	r5, #0
   384ac:	mov	r0, r5
   384b0:	ldr	r5, [ip, r5, lsl #2]
   384b4:	add	r5, r5, #1
   384b8:	str	r5, [ip, r0, lsl #2]
   384bc:	ldr	r6, [r1, r0, lsl #2]
   384c0:	sdiv	r8, r5, r6
   384c4:	mls	r5, r8, r6, r5
   384c8:	cmp	r5, #0
   384cc:	bne	38544 <GetDataSlab+0x16028>
   384d0:	mov	r4, #0
   384d4:	str	r4, [ip, r0, lsl #2]
   384d8:	add	r4, sp, #64	; 0x40
   384dc:	add	r5, r4, r0, lsl #2
   384e0:	ldr	r5, [r5, #4]
   384e4:	sdiv	r6, lr, r5
   384e8:	mls	r6, r6, r5, lr
   384ec:	cmp	r6, #0
   384f0:	beq	3850c <GetDataSlab+0x15ff0>
   384f4:	ldr	r7, [r4, r0, lsl #2]
   384f8:	ldr	r4, [r9, r0, lsl #2]
   384fc:	sub	r5, r5, r6
   38500:	mla	r4, r4, r7, r5
   38504:	add	lr, r4, lr
   38508:	b	38528 <GetDataSlab+0x1600c>
   3850c:	ldr	r5, [r9, r0, lsl #2]
   38510:	cmp	r5, #0
   38514:	beq	3852c <GetDataSlab+0x16010>
   38518:	add	r4, sp, #64	; 0x40
   3851c:	ldr	r4, [r4, r0, lsl #2]
   38520:	mla	lr, r4, r5, lr
   38524:	mul	r4, r4, r5
   38528:	add	r2, r2, r4, lsl #2
   3852c:	ldr	r4, [fp, #24]
   38530:	add	r5, r0, #1
   38534:	add	r0, r0, #2
   38538:	cmp	r0, r4
   3853c:	blt	384ac <GetDataSlab+0x15f90>
   38540:	b	38554 <GetDataSlab+0x16038>
   38544:	ldr	r1, [sp, #36]	; 0x24
   38548:	ldr	r0, [r1, r0, lsl #2]
   3854c:	add	r2, r2, r0, lsl #2
   38550:	add	lr, r0, lr
   38554:	ldr	r4, [sp, #52]	; 0x34
   38558:	ldr	r1, [sp, #56]	; 0x38
   3855c:	mov	r0, #0
   38560:	add	r4, sl, r4
   38564:	cmp	r4, r1
   38568:	str	r4, [sp, #52]	; 0x34
   3856c:	blt	38418 <GetDataSlab+0x15efc>
   38570:	b	242ac <GetDataSlab+0x1d90>
   38574:	ldr	r0, [sp, #56]	; 0x38
   38578:	cmp	r0, #1
   3857c:	ldr	r0, [fp, #20]
   38580:	blt	242a8 <GetDataSlab+0x1d8c>
   38584:	add	r0, r0, #4
   38588:	ldr	r9, [fp, #12]
   3858c:	str	r0, [sp, #40]	; 0x28
   38590:	add	r0, sp, #104	; 0x68
   38594:	orr	ip, r0, #4
   38598:	sub	r0, fp, #72	; 0x48
   3859c:	orr	r0, r0, #4
   385a0:	str	r0, [sp, #36]	; 0x24
   385a4:	ldr	r0, [r9], #4
   385a8:	str	r0, [sp, #44]	; 0x2c
   385ac:	mov	r0, #0
   385b0:	str	r0, [sp, #52]	; 0x34
   385b4:	ldr	r6, [sp, #44]	; 0x2c
   385b8:	cmp	sl, #1
   385bc:	add	r0, r6, lr
   385c0:	add	r4, r2, r6, lsl #2
   385c4:	blt	38618 <GetDataSlab+0x160fc>
   385c8:	ldr	r2, [sp, #60]	; 0x3c
   385cc:	ldr	r1, [sp, #52]	; 0x34
   385d0:	ldr	r7, [fp, #20]
   385d4:	mov	r6, #0
   385d8:	add	r5, r2, r1, lsl #2
   385dc:	ldr	r1, [fp, #16]
   385e0:	ldr	r2, [r4]
   385e4:	str	r2, [r5, r6, lsl #2]
   385e8:	add	r6, r6, #1
   385ec:	ldr	r3, [r1]
   385f0:	ldr	sl, [r7]
   385f4:	add	r0, r3, r0
   385f8:	add	r4, r4, r3, lsl #2
   385fc:	cmp	r6, sl
   38600:	blt	385e0 <GetDataSlab+0x160c4>
   38604:	ldr	r7, [fp, #12]
   38608:	ldr	r6, [r7]
   3860c:	ldr	r7, [fp, #8]
   38610:	ldr	r1, [r7]
   38614:	b	3861c <GetDataSlab+0x16100>
   38618:	ldr	r1, [sp, #48]	; 0x30
   3861c:	mls	r5, r3, sl, r1
   38620:	str	r1, [sp, #48]	; 0x30
   38624:	str	r6, [sp, #44]	; 0x2c
   38628:	sub	r5, r5, r6
   3862c:	add	lr, r5, r0
   38630:	ldr	r0, [fp, #24]
   38634:	add	r2, r4, r5, lsl #2
   38638:	cmp	r0, #2
   3863c:	blt	386f0 <GetDataSlab+0x161d4>
   38640:	ldr	r1, [sp, #40]	; 0x28
   38644:	mov	r5, #0
   38648:	mov	r0, r5
   3864c:	ldr	r5, [ip, r5, lsl #2]
   38650:	add	r5, r5, #1
   38654:	str	r5, [ip, r0, lsl #2]
   38658:	ldr	r6, [r1, r0, lsl #2]
   3865c:	sdiv	r8, r5, r6
   38660:	mls	r5, r8, r6, r5
   38664:	cmp	r5, #0
   38668:	bne	386e0 <GetDataSlab+0x161c4>
   3866c:	mov	r4, #0
   38670:	str	r4, [ip, r0, lsl #2]
   38674:	add	r4, sp, #64	; 0x40
   38678:	add	r5, r4, r0, lsl #2
   3867c:	ldr	r5, [r5, #4]
   38680:	sdiv	r6, lr, r5
   38684:	mls	r6, r6, r5, lr
   38688:	cmp	r6, #0
   3868c:	beq	386a8 <GetDataSlab+0x1618c>
   38690:	ldr	r7, [r4, r0, lsl #2]
   38694:	ldr	r4, [r9, r0, lsl #2]
   38698:	sub	r5, r5, r6
   3869c:	mla	r4, r4, r7, r5
   386a0:	add	lr, r4, lr
   386a4:	b	386c4 <GetDataSlab+0x161a8>
   386a8:	ldr	r5, [r9, r0, lsl #2]
   386ac:	cmp	r5, #0
   386b0:	beq	386c8 <GetDataSlab+0x161ac>
   386b4:	add	r4, sp, #64	; 0x40
   386b8:	ldr	r4, [r4, r0, lsl #2]
   386bc:	mla	lr, r4, r5, lr
   386c0:	mul	r4, r4, r5
   386c4:	add	r2, r2, r4, lsl #2
   386c8:	ldr	r4, [fp, #24]
   386cc:	add	r5, r0, #1
   386d0:	add	r0, r0, #2
   386d4:	cmp	r0, r4
   386d8:	blt	38648 <GetDataSlab+0x1612c>
   386dc:	b	386f0 <GetDataSlab+0x161d4>
   386e0:	ldr	r1, [sp, #36]	; 0x24
   386e4:	ldr	r0, [r1, r0, lsl #2]
   386e8:	add	r2, r2, r0, lsl #2
   386ec:	add	lr, r0, lr
   386f0:	ldr	r4, [sp, #52]	; 0x34
   386f4:	ldr	r1, [sp, #56]	; 0x38
   386f8:	mov	r0, #0
   386fc:	add	r4, sl, r4
   38700:	cmp	r4, r1
   38704:	str	r4, [sp, #52]	; 0x34
   38708:	blt	385b4 <GetDataSlab+0x16098>
   3870c:	b	242ac <GetDataSlab+0x1d90>
   38710:	ldr	r0, [sp, #56]	; 0x38
   38714:	ldr	r9, [fp, #12]
   38718:	cmp	r0, #1
   3871c:	ldr	r0, [fp, #20]
   38720:	blt	242a8 <GetDataSlab+0x1d8c>
   38724:	add	r7, r0, #4
   38728:	mov	r0, lr
   3872c:	add	r1, sp, #104	; 0x68
   38730:	orr	r0, r0, #4
   38734:	orr	lr, r1, #4
   38738:	str	r0, [sp, #40]	; 0x28
   3873c:	ldr	r0, [r9], #4
   38740:	str	r0, [sp, #44]	; 0x2c
   38744:	mov	r0, #0
   38748:	str	r0, [sp, #52]	; 0x34
   3874c:	ldr	r5, [sp, #44]	; 0x2c
   38750:	cmp	ip, #1
   38754:	add	r0, r5, sl
   38758:	add	r4, r2, r5, lsl #2
   3875c:	blt	387c0 <GetDataSlab+0x162a4>
   38760:	ldr	r1, [sp, #60]	; 0x3c
   38764:	ldr	r2, [sp, #52]	; 0x34
   38768:	mov	r8, r7
   3876c:	ldr	r7, [fp, #16]
   38770:	mov	r6, #0
   38774:	add	r5, r1, r2, lsl #2
   38778:	ldr	r1, [fp, #20]
   3877c:	vldr	s0, [r4]
   38780:	vcvt.u32.f32	s0, s0
   38784:	vmov	r2, s0
   38788:	str	r2, [r5, r6, lsl #2]
   3878c:	add	r6, r6, #1
   38790:	ldr	r3, [r7]
   38794:	ldr	ip, [r1]
   38798:	add	r0, r3, r0
   3879c:	add	r4, r4, r3, lsl #2
   387a0:	cmp	r6, ip
   387a4:	blt	3877c <GetDataSlab+0x16260>
   387a8:	ldr	r1, [fp, #12]
   387ac:	mov	r7, r8
   387b0:	ldr	r5, [r1]
   387b4:	ldr	r1, [fp, #8]
   387b8:	ldr	r1, [r1]
   387bc:	b	387c4 <GetDataSlab+0x162a8>
   387c0:	ldr	r1, [sp, #48]	; 0x30
   387c4:	mls	r6, r3, ip, r1
   387c8:	str	r1, [sp, #48]	; 0x30
   387cc:	str	r5, [sp, #44]	; 0x2c
   387d0:	sub	r6, r6, r5
   387d4:	add	sl, r6, r0
   387d8:	ldr	r0, [fp, #24]
   387dc:	add	r2, r4, r6, lsl #2
   387e0:	cmp	r0, #2
   387e4:	blt	38894 <GetDataSlab+0x16378>
   387e8:	mov	r5, #0
   387ec:	ldr	r6, [lr, r5, lsl #2]
   387f0:	mov	r0, r5
   387f4:	add	r6, r6, #1
   387f8:	str	r6, [lr, r5, lsl #2]
   387fc:	ldr	r5, [r7, r5, lsl #2]
   38800:	sdiv	r1, r6, r5
   38804:	mls	r1, r1, r5, r6
   38808:	cmp	r1, #0
   3880c:	bne	38884 <GetDataSlab+0x16368>
   38810:	mov	r1, #0
   38814:	add	r4, sp, #64	; 0x40
   38818:	str	r1, [lr, r0, lsl #2]
   3881c:	add	r1, r4, r0, lsl #2
   38820:	ldr	r5, [r1, #4]
   38824:	sdiv	r1, sl, r5
   38828:	mls	r6, r1, r5, sl
   3882c:	cmp	r6, #0
   38830:	beq	3884c <GetDataSlab+0x16330>
   38834:	ldr	r1, [r4, r0, lsl #2]
   38838:	ldr	r8, [r9, r0, lsl #2]
   3883c:	sub	r5, r5, r6
   38840:	mla	r1, r8, r1, r5
   38844:	add	sl, r1, sl
   38848:	b	38868 <GetDataSlab+0x1634c>
   3884c:	ldr	r5, [r9, r0, lsl #2]
   38850:	cmp	r5, #0
   38854:	beq	3886c <GetDataSlab+0x16350>
   38858:	add	r1, sp, #64	; 0x40
   3885c:	ldr	r1, [r1, r0, lsl #2]
   38860:	mla	sl, r1, r5, sl
   38864:	mul	r1, r1, r5
   38868:	add	r2, r2, r1, lsl #2
   3886c:	ldr	r1, [fp, #24]
   38870:	add	r5, r0, #1
   38874:	add	r0, r0, #2
   38878:	cmp	r0, r1
   3887c:	blt	387ec <GetDataSlab+0x162d0>
   38880:	b	38894 <GetDataSlab+0x16378>
   38884:	ldr	r1, [sp, #40]	; 0x28
   38888:	ldr	r0, [r1, r0, lsl #2]
   3888c:	add	r2, r2, r0, lsl #2
   38890:	add	sl, r0, sl
   38894:	ldr	r4, [sp, #52]	; 0x34
   38898:	ldr	r1, [sp, #56]	; 0x38
   3889c:	mov	r0, #0
   388a0:	add	r4, ip, r4
   388a4:	cmp	r4, r1
   388a8:	str	r4, [sp, #52]	; 0x34
   388ac:	blt	3874c <GetDataSlab+0x16230>
   388b0:	b	242ac <GetDataSlab+0x1d90>
   388b4:	ldr	r0, [sp, #56]	; 0x38
   388b8:	ldr	r9, [fp, #12]
   388bc:	cmp	r0, #1
   388c0:	ldr	r0, [fp, #20]
   388c4:	blt	242a8 <GetDataSlab+0x1d8c>
   388c8:	add	r7, r0, #4
   388cc:	mov	r0, lr
   388d0:	add	r1, sp, #104	; 0x68
   388d4:	orr	r0, r0, #4
   388d8:	orr	lr, r1, #4
   388dc:	str	r0, [sp, #40]	; 0x28
   388e0:	ldr	r0, [r9], #4
   388e4:	str	r0, [sp, #44]	; 0x2c
   388e8:	mov	r0, #0
   388ec:	str	r0, [sp, #52]	; 0x34
   388f0:	ldr	r5, [sp, #44]	; 0x2c
   388f4:	cmp	ip, #1
   388f8:	add	r0, r5, sl
   388fc:	add	r4, r2, r5, lsl #3
   38900:	blt	38964 <GetDataSlab+0x16448>
   38904:	ldr	r1, [sp, #60]	; 0x3c
   38908:	ldr	r2, [sp, #52]	; 0x34
   3890c:	mov	r8, r7
   38910:	ldr	r7, [fp, #16]
   38914:	mov	r6, #0
   38918:	add	r5, r1, r2, lsl #2
   3891c:	ldr	r1, [fp, #20]
   38920:	vldr	d16, [r4]
   38924:	vcvt.u32.f64	s0, d16
   38928:	vmov	r2, s0
   3892c:	str	r2, [r5, r6, lsl #2]
   38930:	add	r6, r6, #1
   38934:	ldr	r3, [r7]
   38938:	ldr	ip, [r1]
   3893c:	add	r0, r3, r0
   38940:	add	r4, r4, r3, lsl #3
   38944:	cmp	r6, ip
   38948:	blt	38920 <GetDataSlab+0x16404>
   3894c:	ldr	r1, [fp, #12]
   38950:	mov	r7, r8
   38954:	ldr	r5, [r1]
   38958:	ldr	r1, [fp, #8]
   3895c:	ldr	r1, [r1]
   38960:	b	38968 <GetDataSlab+0x1644c>
   38964:	ldr	r1, [sp, #48]	; 0x30
   38968:	mls	r6, r3, ip, r1
   3896c:	str	r1, [sp, #48]	; 0x30
   38970:	str	r5, [sp, #44]	; 0x2c
   38974:	sub	r6, r6, r5
   38978:	add	sl, r6, r0
   3897c:	ldr	r0, [fp, #24]
   38980:	add	r2, r4, r6, lsl #3
   38984:	cmp	r0, #2
   38988:	blt	38a38 <GetDataSlab+0x1651c>
   3898c:	mov	r5, #0
   38990:	ldr	r6, [lr, r5, lsl #2]
   38994:	mov	r0, r5
   38998:	add	r6, r6, #1
   3899c:	str	r6, [lr, r5, lsl #2]
   389a0:	ldr	r5, [r7, r5, lsl #2]
   389a4:	sdiv	r1, r6, r5
   389a8:	mls	r1, r1, r5, r6
   389ac:	cmp	r1, #0
   389b0:	bne	38a28 <GetDataSlab+0x1650c>
   389b4:	mov	r1, #0
   389b8:	add	r4, sp, #64	; 0x40
   389bc:	str	r1, [lr, r0, lsl #2]
   389c0:	add	r1, r4, r0, lsl #2
   389c4:	ldr	r5, [r1, #4]
   389c8:	sdiv	r1, sl, r5
   389cc:	mls	r6, r1, r5, sl
   389d0:	cmp	r6, #0
   389d4:	beq	389f0 <GetDataSlab+0x164d4>
   389d8:	ldr	r1, [r4, r0, lsl #2]
   389dc:	ldr	r8, [r9, r0, lsl #2]
   389e0:	sub	r5, r5, r6
   389e4:	mla	r1, r8, r1, r5
   389e8:	add	sl, r1, sl
   389ec:	b	38a0c <GetDataSlab+0x164f0>
   389f0:	ldr	r5, [r9, r0, lsl #2]
   389f4:	cmp	r5, #0
   389f8:	beq	38a10 <GetDataSlab+0x164f4>
   389fc:	add	r1, sp, #64	; 0x40
   38a00:	ldr	r1, [r1, r0, lsl #2]
   38a04:	mla	sl, r1, r5, sl
   38a08:	mul	r1, r1, r5
   38a0c:	add	r2, r2, r1, lsl #3
   38a10:	ldr	r1, [fp, #24]
   38a14:	add	r5, r0, #1
   38a18:	add	r0, r0, #2
   38a1c:	cmp	r0, r1
   38a20:	blt	38990 <GetDataSlab+0x16474>
   38a24:	b	38a38 <GetDataSlab+0x1651c>
   38a28:	ldr	r1, [sp, #40]	; 0x28
   38a2c:	ldr	r0, [r1, r0, lsl #2]
   38a30:	add	r2, r2, r0, lsl #3
   38a34:	add	sl, r0, sl
   38a38:	ldr	r4, [sp, #52]	; 0x34
   38a3c:	ldr	r1, [sp, #56]	; 0x38
   38a40:	mov	r0, #0
   38a44:	add	r4, ip, r4
   38a48:	cmp	r4, r1
   38a4c:	str	r4, [sp, #52]	; 0x34
   38a50:	blt	388f0 <GetDataSlab+0x163d4>
   38a54:	b	242ac <GetDataSlab+0x1d90>
   38a58:	ldr	r0, [sp, #56]	; 0x38
   38a5c:	ldr	lr, [sp, #60]	; 0x3c
   38a60:	ldr	r9, [fp, #12]
   38a64:	cmp	r0, #1
   38a68:	blt	38bdc <GetDataSlab+0x166c0>
   38a6c:	ldr	r0, [fp, #20]
   38a70:	ldr	r2, [r9], #4
   38a74:	mov	r6, #0
   38a78:	add	sl, r0, #4
   38a7c:	add	r0, sp, #104	; 0x68
   38a80:	orr	ip, r0, #4
   38a84:	sub	r0, fp, #72	; 0x48
   38a88:	orr	r0, r0, #4
   38a8c:	str	r0, [sp, #36]	; 0x24
   38a90:	add	r3, r2, r8
   38a94:	add	r4, r4, r2, lsl #3
   38a98:	cmp	r1, #1
   38a9c:	str	r6, [sp, #40]	; 0x28
   38aa0:	blt	38aec <GetDataSlab+0x165d0>
   38aa4:	ldr	r0, [fp, #20]
   38aa8:	ldr	r2, [fp, #16]
   38aac:	add	r6, lr, r6, lsl #2
   38ab0:	mov	r7, #0
   38ab4:	ldr	r1, [r4]
   38ab8:	str	r1, [r6, r7, lsl #2]
   38abc:	add	r7, r7, #1
   38ac0:	ldr	r5, [r2]
   38ac4:	ldr	r1, [r0]
   38ac8:	add	r3, r5, r3
   38acc:	add	r4, r4, r5, lsl #3
   38ad0:	cmp	r7, r1
   38ad4:	blt	38ab4 <GetDataSlab+0x16598>
   38ad8:	ldr	r0, [fp, #12]
   38adc:	ldr	r7, [r0]
   38ae0:	ldr	r0, [fp, #8]
   38ae4:	ldr	r0, [r0]
   38ae8:	b	38af4 <GetDataSlab+0x165d8>
   38aec:	ldr	r0, [sp, #44]	; 0x2c
   38af0:	mov	r7, r2
   38af4:	mls	r6, r5, r1, r0
   38af8:	str	r0, [sp, #44]	; 0x2c
   38afc:	ldr	r0, [fp, #24]
   38b00:	mov	r2, r7
   38b04:	sub	r6, r6, r7
   38b08:	add	r4, r4, r6, lsl #3
   38b0c:	add	r8, r6, r3
   38b10:	cmp	r0, #2
   38b14:	blt	38bc8 <GetDataSlab+0x166ac>
   38b18:	mov	r3, #0
   38b1c:	mov	r6, r3
   38b20:	ldr	r3, [ip, r3, lsl #2]
   38b24:	add	r3, r3, #1
   38b28:	str	r3, [ip, r6, lsl #2]
   38b2c:	ldr	r7, [sl, r6, lsl #2]
   38b30:	sdiv	r0, r3, r7
   38b34:	mls	r0, r0, r7, r3
   38b38:	cmp	r0, #0
   38b3c:	bne	38bb8 <GetDataSlab+0x1669c>
   38b40:	mov	r0, #0
   38b44:	add	r7, sp, #64	; 0x40
   38b48:	str	r0, [ip, r6, lsl #2]
   38b4c:	add	r0, r7, r6, lsl #2
   38b50:	ldr	r3, [r0, #4]
   38b54:	sdiv	r0, r8, r3
   38b58:	mls	lr, r0, r3, r8
   38b5c:	cmp	lr, #0
   38b60:	beq	38b7c <GetDataSlab+0x16660>
   38b64:	ldr	r0, [r7, r6, lsl #2]
   38b68:	ldr	r7, [r9, r6, lsl #2]
   38b6c:	sub	r3, r3, lr
   38b70:	mla	r0, r7, r0, r3
   38b74:	add	r8, r0, r8
   38b78:	b	38b98 <GetDataSlab+0x1667c>
   38b7c:	ldr	r3, [r9, r6, lsl #2]
   38b80:	cmp	r3, #0
   38b84:	beq	38b9c <GetDataSlab+0x16680>
   38b88:	add	r0, sp, #64	; 0x40
   38b8c:	ldr	r0, [r0, r6, lsl #2]
   38b90:	mla	r8, r0, r3, r8
   38b94:	mul	r0, r0, r3
   38b98:	add	r4, r4, r0, lsl #3
   38b9c:	add	r3, r6, #1
   38ba0:	add	r0, r6, #2
   38ba4:	ldr	r6, [fp, #24]
   38ba8:	ldr	lr, [sp, #60]	; 0x3c
   38bac:	cmp	r0, r6
   38bb0:	blt	38b1c <GetDataSlab+0x16600>
   38bb4:	b	38bc8 <GetDataSlab+0x166ac>
   38bb8:	ldr	r0, [sp, #36]	; 0x24
   38bbc:	ldr	r0, [r0, r6, lsl #2]
   38bc0:	add	r4, r4, r0, lsl #3
   38bc4:	add	r8, r0, r8
   38bc8:	ldr	r6, [sp, #40]	; 0x28
   38bcc:	ldr	r0, [sp, #56]	; 0x38
   38bd0:	add	r6, r1, r6
   38bd4:	cmp	r6, r0
   38bd8:	blt	38a90 <GetDataSlab+0x16574>
   38bdc:	ldr	r3, [sp, #48]	; 0x30
   38be0:	mov	r0, #0
   38be4:	cmp	r3, #13
   38be8:	bne	242ac <GetDataSlab+0x1d90>
   38bec:	ldr	r0, [fp, #16]
   38bf0:	ldr	lr, [fp, #8]
   38bf4:	add	r5, sp, #64	; 0x40
   38bf8:	sub	r9, fp, #72	; 0x48
   38bfc:	ldr	r3, [r0]
   38c00:	sub	r0, r3, #1
   38c04:	str	r0, [fp, #-72]	; 0xffffffb8
   38c08:	ldr	r0, [lr]
   38c0c:	mov	lr, #0
   38c10:	str	r0, [sp, #48]	; 0x30
   38c14:	str	r0, [sp, #64]	; 0x40
   38c18:	ldr	r0, [fp, #20]
   38c1c:	ldr	sl, [r0]
   38c20:	ldr	r0, [fp, #24]
   38c24:	cmp	r0, #2
   38c28:	mov	r0, sl
   38c2c:	str	sl, [sp, #56]	; 0x38
   38c30:	blt	38cd8 <GetDataSlab+0x167bc>
   38c34:	ldr	r7, [sp, #48]	; 0x30
   38c38:	ldr	r1, [fp, #8]
   38c3c:	mov	r0, #1
   38c40:	mov	lr, #0
   38c44:	mov	r2, sl
   38c48:	str	sl, [sp, #56]	; 0x38
   38c4c:	mov	r8, r7
   38c50:	ldr	r6, [fp, #16]
   38c54:	ldr	r2, [fp, #8]
   38c58:	ldr	r6, [r6, r0, lsl #2]
   38c5c:	str	r7, [r5, r0, lsl #2]
   38c60:	sub	r4, r6, #1
   38c64:	mov	r6, #0
   38c68:	str	r4, [r9, r0, lsl #2]
   38c6c:	ldr	ip, [r2, r0, lsl #2]
   38c70:	mov	r5, ip
   38c74:	mul	r7, r5, r7
   38c78:	ldr	r5, [r1, -r6, lsl #2]
   38c7c:	add	r6, r6, #1
   38c80:	cmp	r0, r6
   38c84:	mul	r4, r4, r5
   38c88:	bne	38c74 <GetDataSlab+0x16758>
   38c8c:	ldr	r6, [fp, #12]
   38c90:	add	r5, sp, #64	; 0x40
   38c94:	sub	r9, fp, #72	; 0x48
   38c98:	ldr	r2, [sp, #56]	; 0x38
   38c9c:	add	r1, r1, #4
   38ca0:	str	r7, [r5, r0, lsl #2]
   38ca4:	str	r4, [r9, r0, lsl #2]
   38ca8:	ldr	r4, [r6, r0, lsl #2]
   38cac:	ldr	r6, [fp, #20]
   38cb0:	mla	lr, r4, r8, lr
   38cb4:	ldr	r4, [r6, r0, lsl #2]
   38cb8:	ldr	r6, [fp, #24]
   38cbc:	add	r0, r0, #1
   38cc0:	mov	r8, r7
   38cc4:	mov	r7, ip
   38cc8:	mul	r2, r4, r2
   38ccc:	cmp	r0, r6
   38cd0:	str	r2, [sp, #56]	; 0x38
   38cd4:	bne	38c50 <GetDataSlab+0x16734>
   38cd8:	ldr	r0, [sp, #52]	; 0x34
   38cdc:	mov	r2, lr
   38ce0:	cmp	r3, #1
   38ce4:	add	r4, r0, lr, lsl #3
   38ce8:	bne	3b848 <GetDataSlab+0x1932c>
   38cec:	ldr	r0, [sp, #56]	; 0x38
   38cf0:	ldr	lr, [fp, #12]
   38cf4:	cmp	r0, #1
   38cf8:	ldr	r0, [fp, #20]
   38cfc:	blt	242a8 <GetDataSlab+0x1d8c>
   38d00:	add	r8, r0, #4
   38d04:	add	r0, sp, #104	; 0x68
   38d08:	mov	r9, #0
   38d0c:	orr	r3, r0, #4
   38d10:	sub	r0, fp, #72	; 0x48
   38d14:	orr	r0, r0, #4
   38d18:	str	r0, [sp, #44]	; 0x2c
   38d1c:	ldr	r0, [lr], #4
   38d20:	str	r0, [sp, #52]	; 0x34
   38d24:	ldr	r1, [sp, #52]	; 0x34
   38d28:	ldr	r0, [sp, #48]	; 0x30
   38d2c:	cmp	sl, #1
   38d30:	add	r2, r1, r2
   38d34:	add	ip, r4, r1, lsl #3
   38d38:	blt	38d78 <GetDataSlab+0x1685c>
   38d3c:	ldr	r0, [sp, #60]	; 0x3c
   38d40:	ldr	r6, [fp, #20]
   38d44:	mov	r4, ip
   38d48:	add	r5, r0, r9, lsl #2
   38d4c:	mov	r0, #0
   38d50:	ldr	r1, [r4], #8
   38d54:	str	r1, [r5, r0, lsl #2]
   38d58:	add	r0, r0, #1
   38d5c:	ldr	sl, [r6]
   38d60:	cmp	r0, sl
   38d64:	blt	38d50 <GetDataSlab+0x16834>
   38d68:	ldr	r0, [fp, #12]
   38d6c:	ldr	r1, [r0]
   38d70:	ldr	r0, [fp, #8]
   38d74:	ldr	r0, [r0]
   38d78:	str	r0, [sp, #48]	; 0x30
   38d7c:	sub	r0, r0, r1
   38d80:	str	r1, [sp, #52]	; 0x34
   38d84:	add	r4, ip, r0, lsl #3
   38d88:	add	r2, r2, r0
   38d8c:	ldr	r0, [fp, #24]
   38d90:	cmp	r0, #2
   38d94:	blt	38e40 <GetDataSlab+0x16924>
   38d98:	mov	r5, #0
   38d9c:	add	ip, sp, #64	; 0x40
   38da0:	ldr	r1, [r3, r5, lsl #2]
   38da4:	mov	r0, r5
   38da8:	add	r1, r1, #1
   38dac:	str	r1, [r3, r5, lsl #2]
   38db0:	ldr	r5, [r8, r5, lsl #2]
   38db4:	sdiv	r6, r1, r5
   38db8:	mls	r1, r6, r5, r1
   38dbc:	cmp	r1, #0
   38dc0:	bne	38e30 <GetDataSlab+0x16914>
   38dc4:	mov	r1, #0
   38dc8:	str	r1, [r3, r0, lsl #2]
   38dcc:	add	r1, ip, r0, lsl #2
   38dd0:	ldr	r5, [r1, #4]
   38dd4:	sdiv	r1, r2, r5
   38dd8:	mls	r1, r1, r5, r2
   38ddc:	cmp	r1, #0
   38de0:	beq	38dfc <GetDataSlab+0x168e0>
   38de4:	ldr	r6, [ip, r0, lsl #2]
   38de8:	ldr	r7, [lr, r0, lsl #2]
   38dec:	sub	r1, r5, r1
   38df0:	mla	r1, r7, r6, r1
   38df4:	add	r2, r1, r2
   38df8:	b	38e14 <GetDataSlab+0x168f8>
   38dfc:	ldr	r1, [lr, r0, lsl #2]
   38e00:	cmp	r1, #0
   38e04:	beq	38e18 <GetDataSlab+0x168fc>
   38e08:	ldr	r7, [ip, r0, lsl #2]
   38e0c:	mla	r2, r7, r1, r2
   38e10:	mul	r1, r7, r1
   38e14:	add	r4, r4, r1, lsl #3
   38e18:	ldr	r1, [fp, #24]
   38e1c:	add	r5, r0, #1
   38e20:	add	r0, r0, #2
   38e24:	cmp	r0, r1
   38e28:	blt	38da0 <GetDataSlab+0x16884>
   38e2c:	b	38e40 <GetDataSlab+0x16924>
   38e30:	ldr	r1, [sp, #44]	; 0x2c
   38e34:	ldr	r0, [r1, r0, lsl #2]
   38e38:	add	r4, r4, r0, lsl #3
   38e3c:	add	r2, r0, r2
   38e40:	ldr	r1, [sp, #56]	; 0x38
   38e44:	add	r9, sl, r9
   38e48:	mov	r0, #0
   38e4c:	cmp	r9, r1
   38e50:	blt	38d24 <GetDataSlab+0x16808>
   38e54:	b	242ac <GetDataSlab+0x1d90>
   38e58:	ldr	r0, [sp, #56]	; 0x38
   38e5c:	cmp	r0, #1
   38e60:	blt	242a8 <GetDataSlab+0x1d8c>
   38e64:	ldr	r1, [sp, #48]	; 0x30
   38e68:	ldr	r0, [sp, #44]	; 0x2c
   38e6c:	add	r7, ip, #4
   38e70:	mov	r9, #0
   38e74:	str	r7, [sp, #32]
   38e78:	mls	r0, r1, r8, r0
   38e7c:	str	r0, [sp, #44]	; 0x2c
   38e80:	mul	r0, r1, r8
   38e84:	str	r0, [sp, #36]	; 0x24
   38e88:	ldr	r0, [fp, #20]
   38e8c:	add	sl, r0, #4
   38e90:	add	r0, sp, #104	; 0x68
   38e94:	orr	r2, r0, #4
   38e98:	orr	r0, lr, #4
   38e9c:	mov	lr, r7
   38ea0:	str	r0, [sp, #28]
   38ea4:	lsl	r0, r1, #3
   38ea8:	str	r0, [sp, #40]	; 0x28
   38eac:	mov	r0, #0
   38eb0:	str	r0, [sp, #52]	; 0x34
   38eb4:	ldr	r0, [fp, #12]
   38eb8:	cmp	r1, #1
   38ebc:	ldr	r0, [r0]
   38ec0:	blt	38f00 <GetDataSlab+0x169e4>
   38ec4:	ldr	r7, [sp, #36]	; 0x24
   38ec8:	ldr	ip, [sp, #60]	; 0x3c
   38ecc:	mov	lr, r1
   38ed0:	add	r4, r7, r3
   38ed4:	add	r3, r5, r7
   38ed8:	add	r5, r5, r0
   38edc:	ldrb	r6, [r5], r8
   38ee0:	subs	lr, lr, #1
   38ee4:	stm	ip, {r6, r9}
   38ee8:	add	ip, ip, #8
   38eec:	bne	38edc <GetDataSlab+0x169c0>
   38ef0:	ldr	lr, [sp, #32]
   38ef4:	add	r4, r4, r0
   38ef8:	mov	r5, r3
   38efc:	b	38f04 <GetDataSlab+0x169e8>
   38f00:	add	r4, r0, r3
   38f04:	ldr	r1, [sp, #44]	; 0x2c
   38f08:	ldr	ip, [sp, #60]	; 0x3c
   38f0c:	sub	r0, r1, r0
   38f10:	add	r5, r5, r1
   38f14:	add	r3, r4, r0
   38f18:	ldr	r0, [fp, #24]
   38f1c:	cmp	r0, #2
   38f20:	blt	38fc8 <GetDataSlab+0x16aac>
   38f24:	mov	r4, #0
   38f28:	ldr	r6, [r2, r4, lsl #2]
   38f2c:	mov	r0, r4
   38f30:	add	r6, r6, #1
   38f34:	str	r6, [r2, r4, lsl #2]
   38f38:	ldr	r4, [sl, r4, lsl #2]
   38f3c:	sdiv	r7, r6, r4
   38f40:	mls	r7, r7, r4, r6
   38f44:	cmp	r7, #0
   38f48:	bne	38fb8 <GetDataSlab+0x16a9c>
   38f4c:	add	r1, sp, #64	; 0x40
   38f50:	str	r9, [r2, r0, lsl #2]
   38f54:	add	r7, r1, r0, lsl #2
   38f58:	ldr	r4, [r7, #4]
   38f5c:	sdiv	r7, r3, r4
   38f60:	mls	r6, r7, r4, r3
   38f64:	cmp	r6, #0
   38f68:	beq	38f88 <GetDataSlab+0x16a6c>
   38f6c:	ldr	r7, [r1, r0, lsl #2]
   38f70:	ldr	r1, [lr, r0, lsl #2]
   38f74:	sub	r6, r4, r6
   38f78:	mla	r1, r1, r7, r6
   38f7c:	add	r3, r1, r3
   38f80:	add	r5, r5, r1
   38f84:	b	38fa0 <GetDataSlab+0x16a84>
   38f88:	ldr	r6, [lr, r0, lsl #2]
   38f8c:	cmp	r6, #0
   38f90:	addne	r1, sp, #64	; 0x40
   38f94:	ldrne	r1, [r1, r0, lsl #2]
   38f98:	mlane	r3, r1, r6, r3
   38f9c:	mlane	r5, r1, r6, r5
   38fa0:	ldr	r1, [fp, #24]
   38fa4:	add	r4, r0, #1
   38fa8:	add	r0, r0, #2
   38fac:	cmp	r0, r1
   38fb0:	blt	38f28 <GetDataSlab+0x16a0c>
   38fb4:	b	38fc8 <GetDataSlab+0x16aac>
   38fb8:	ldr	r1, [sp, #28]
   38fbc:	ldr	r0, [r1, r0, lsl #2]
   38fc0:	add	r5, r5, r0
   38fc4:	add	r3, r0, r3
   38fc8:	ldr	r1, [sp, #48]	; 0x30
   38fcc:	ldr	r6, [sp, #52]	; 0x34
   38fd0:	ldr	r0, [sp, #40]	; 0x28
   38fd4:	ldr	r7, [sp, #56]	; 0x38
   38fd8:	add	r6, r6, r1
   38fdc:	add	ip, ip, r0
   38fe0:	mov	r0, #0
   38fe4:	cmp	r6, r7
   38fe8:	str	ip, [sp, #60]	; 0x3c
   38fec:	str	r6, [sp, #52]	; 0x34
   38ff0:	blt	38eb4 <GetDataSlab+0x16998>
   38ff4:	b	242ac <GetDataSlab+0x1d90>
   38ff8:	ldr	r0, [sp, #48]	; 0x30
   38ffc:	ldr	r1, [sp, #44]	; 0x2c
   39000:	cmp	r0, #1
   39004:	blt	242a8 <GetDataSlab+0x1d8c>
   39008:	ldr	r0, [sp, #40]	; 0x28
   3900c:	ldr	r2, [ip], #4
   39010:	lsl	r4, r8, #1
   39014:	mls	r0, r1, r8, r0
   39018:	str	ip, [sp, #56]	; 0x38
   3901c:	str	r2, [sp, #52]	; 0x34
   39020:	sub	r0, r0, r2
   39024:	ldr	r6, [sp, #56]	; 0x38
   39028:	str	r0, [sp, #40]	; 0x28
   3902c:	ldr	r0, [fp, #20]
   39030:	add	sl, r0, #4
   39034:	add	r0, sp, #104	; 0x68
   39038:	orr	r7, r0, #4
   3903c:	sub	r0, fp, #72	; 0x48
   39040:	orr	r0, r0, #4
   39044:	str	r0, [sp, #28]
   39048:	mla	r0, r1, r8, r2
   3904c:	mov	r8, #0
   39050:	str	r0, [sp, #32]
   39054:	lsl	r0, r1, #3
   39058:	str	r0, [sp, #36]	; 0x24
   3905c:	ldr	r0, [sp, #52]	; 0x34
   39060:	cmp	r1, #1
   39064:	blt	39090 <GetDataSlab+0x16b74>
   39068:	ldr	r0, [sp, #52]	; 0x34
   3906c:	ldr	ip, [sp, #60]	; 0x3c
   39070:	add	r0, lr, r0, lsl #1
   39074:	ldrsh	r2, [r0], r4
   39078:	subs	r1, r1, #1
   3907c:	asr	r3, r2, #31
   39080:	strd	r2, [ip]
   39084:	add	ip, ip, #8
   39088:	bne	39074 <GetDataSlab+0x16b58>
   3908c:	ldr	r0, [sp, #32]
   39090:	ldr	r2, [sp, #40]	; 0x28
   39094:	add	ip, sp, #64	; 0x40
   39098:	add	r1, lr, r2, lsl #1
   3909c:	add	lr, r1, r0, lsl #1
   390a0:	add	r0, r0, r9
   390a4:	add	r9, r0, r2
   390a8:	ldr	r0, [fp, #24]
   390ac:	cmp	r0, #2
   390b0:	blt	39158 <GetDataSlab+0x16c3c>
   390b4:	mov	r1, #0
   390b8:	mov	r0, r1
   390bc:	ldr	r1, [r7, r1, lsl #2]
   390c0:	add	r1, r1, #1
   390c4:	str	r1, [r7, r0, lsl #2]
   390c8:	ldr	r2, [sl, r0, lsl #2]
   390cc:	sdiv	r3, r1, r2
   390d0:	mls	r1, r3, r2, r1
   390d4:	cmp	r1, #0
   390d8:	bne	39148 <GetDataSlab+0x16c2c>
   390dc:	mov	r1, #0
   390e0:	str	r1, [r7, r0, lsl #2]
   390e4:	add	r1, ip, r0, lsl #2
   390e8:	ldr	r1, [r1, #4]
   390ec:	sdiv	r2, r9, r1
   390f0:	mls	r3, r2, r1, r9
   390f4:	cmp	r3, #0
   390f8:	beq	39114 <GetDataSlab+0x16bf8>
   390fc:	ldr	r2, [ip, r0, lsl #2]
   39100:	ldr	r5, [r6, r0, lsl #2]
   39104:	sub	r1, r1, r3
   39108:	mla	r1, r5, r2, r1
   3910c:	add	r9, r1, r9
   39110:	b	3912c <GetDataSlab+0x16c10>
   39114:	ldr	r1, [r6, r0, lsl #2]
   39118:	cmp	r1, #0
   3911c:	beq	39130 <GetDataSlab+0x16c14>
   39120:	ldr	r2, [ip, r0, lsl #2]
   39124:	mla	r9, r2, r1, r9
   39128:	mul	r1, r2, r1
   3912c:	add	lr, lr, r1, lsl #1
   39130:	ldr	r2, [fp, #24]
   39134:	add	r1, r0, #1
   39138:	add	r0, r0, #2
   3913c:	cmp	r0, r2
   39140:	blt	390b8 <GetDataSlab+0x16b9c>
   39144:	b	39158 <GetDataSlab+0x16c3c>
   39148:	ldr	r1, [sp, #28]
   3914c:	ldr	r0, [r1, r0, lsl #2]
   39150:	add	lr, lr, r0, lsl #1
   39154:	add	r9, r0, r9
   39158:	ldr	r0, [sp, #60]	; 0x3c
   3915c:	ldr	r1, [sp, #36]	; 0x24
   39160:	ldr	r2, [sp, #48]	; 0x30
   39164:	add	r0, r0, r1
   39168:	ldr	r1, [sp, #44]	; 0x2c
   3916c:	str	r0, [sp, #60]	; 0x3c
   39170:	mov	r0, #0
   39174:	add	r8, r8, r1
   39178:	cmp	r8, r2
   3917c:	blt	3905c <GetDataSlab+0x16b40>
   39180:	b	242ac <GetDataSlab+0x1d90>
   39184:	ldr	r0, [sp, #48]	; 0x30
   39188:	ldr	r3, [sp, #44]	; 0x2c
   3918c:	cmp	r0, #1
   39190:	blt	242a8 <GetDataSlab+0x1d8c>
   39194:	ldr	r0, [sp, #40]	; 0x28
   39198:	ldr	r4, [ip], #4
   3919c:	mov	r1, r8
   391a0:	lsl	r6, r5, #1
   391a4:	mov	sl, #0
   391a8:	mls	r0, r3, r5, r0
   391ac:	mov	r8, ip
   391b0:	add	ip, r1, #4
   391b4:	str	r4, [sp, #52]	; 0x34
   391b8:	sub	r0, r0, r4
   391bc:	str	r0, [sp, #40]	; 0x28
   391c0:	add	r0, sp, #104	; 0x68
   391c4:	orr	r7, r0, #4
   391c8:	sub	r0, fp, #72	; 0x48
   391cc:	orr	r0, r0, #4
   391d0:	str	r0, [sp, #28]
   391d4:	mla	r0, r3, r5, r4
   391d8:	str	r0, [sp, #32]
   391dc:	lsl	r0, r3, #3
   391e0:	str	r0, [sp, #36]	; 0x24
   391e4:	mov	r0, #0
   391e8:	str	r0, [sp, #56]	; 0x38
   391ec:	ldr	r0, [sp, #52]	; 0x34
   391f0:	cmp	r3, #1
   391f4:	blt	3921c <GetDataSlab+0x16d00>
   391f8:	ldr	r0, [sp, #52]	; 0x34
   391fc:	ldr	r4, [sp, #60]	; 0x3c
   39200:	add	r1, lr, r0, lsl #1
   39204:	ldrh	r0, [r1], r6
   39208:	subs	r3, r3, #1
   3920c:	stm	r4, {r0, sl}
   39210:	add	r4, r4, #8
   39214:	bne	39204 <GetDataSlab+0x16ce8>
   39218:	ldr	r0, [sp, #32]
   3921c:	ldr	r3, [sp, #40]	; 0x28
   39220:	add	r1, lr, r3, lsl #1
   39224:	add	lr, r1, r0, lsl #1
   39228:	add	r0, r0, r2
   3922c:	add	r2, r0, r3
   39230:	ldr	r0, [fp, #24]
   39234:	cmp	r0, #2
   39238:	blt	392e4 <GetDataSlab+0x16dc8>
   3923c:	mov	r9, #0
   39240:	ldr	r1, [r7, r9, lsl #2]
   39244:	mov	r0, r9
   39248:	add	r1, r1, #1
   3924c:	str	r1, [r7, r9, lsl #2]
   39250:	ldr	r3, [ip, r9, lsl #2]
   39254:	sdiv	r4, r1, r3
   39258:	mls	r1, r4, r3, r1
   3925c:	cmp	r1, #0
   39260:	bne	392d4 <GetDataSlab+0x16db8>
   39264:	add	r5, sp, #64	; 0x40
   39268:	str	sl, [r7, r0, lsl #2]
   3926c:	add	r1, r5, r0, lsl #2
   39270:	ldr	r3, [r1, #4]
   39274:	sdiv	r1, r2, r3
   39278:	mls	r4, r1, r3, r2
   3927c:	cmp	r4, #0
   39280:	beq	3929c <GetDataSlab+0x16d80>
   39284:	ldr	r1, [r5, r0, lsl #2]
   39288:	ldr	r5, [r8, r0, lsl #2]
   3928c:	sub	r3, r3, r4
   39290:	mla	r1, r5, r1, r3
   39294:	add	r2, r1, r2
   39298:	b	392b8 <GetDataSlab+0x16d9c>
   3929c:	ldr	r3, [r8, r0, lsl #2]
   392a0:	cmp	r3, #0
   392a4:	beq	392bc <GetDataSlab+0x16da0>
   392a8:	add	r1, sp, #64	; 0x40
   392ac:	ldr	r1, [r1, r0, lsl #2]
   392b0:	mla	r2, r1, r3, r2
   392b4:	mul	r1, r1, r3
   392b8:	add	lr, lr, r1, lsl #1
   392bc:	ldr	r1, [fp, #24]
   392c0:	add	r9, r0, #1
   392c4:	add	r0, r0, #2
   392c8:	cmp	r0, r1
   392cc:	blt	39240 <GetDataSlab+0x16d24>
   392d0:	b	392e4 <GetDataSlab+0x16dc8>
   392d4:	ldr	r1, [sp, #28]
   392d8:	ldr	r0, [r1, r0, lsl #2]
   392dc:	add	lr, lr, r0, lsl #1
   392e0:	add	r2, r0, r2
   392e4:	ldr	r0, [sp, #60]	; 0x3c
   392e8:	ldr	r1, [sp, #36]	; 0x24
   392ec:	ldr	r3, [sp, #44]	; 0x2c
   392f0:	ldr	r4, [sp, #56]	; 0x38
   392f4:	add	r0, r0, r1
   392f8:	ldr	r1, [sp, #48]	; 0x30
   392fc:	add	r4, r4, r3
   39300:	str	r0, [sp, #60]	; 0x3c
   39304:	mov	r0, #0
   39308:	str	r4, [sp, #56]	; 0x38
   3930c:	cmp	r4, r1
   39310:	blt	391ec <GetDataSlab+0x16cd0>
   39314:	b	242ac <GetDataSlab+0x1d90>
   39318:	ldr	r0, [sp, #56]	; 0x38
   3931c:	ldr	r4, [sp, #48]	; 0x30
   39320:	cmp	r0, #1
   39324:	blt	242a8 <GetDataSlab+0x1d8c>
   39328:	ldr	r0, [sp, #44]	; 0x2c
   3932c:	mov	r2, lr
   39330:	add	lr, ip, #4
   39334:	mov	ip, #0
   39338:	mls	r0, r4, r8, r0
   3933c:	str	r0, [sp, #44]	; 0x2c
   39340:	ldr	r0, [fp, #20]
   39344:	add	sl, r0, #4
   39348:	add	r0, sp, #104	; 0x68
   3934c:	orr	r1, r0, #4
   39350:	orr	r0, r2, #4
   39354:	str	r0, [sp, #32]
   39358:	mul	r0, r4, r8
   3935c:	lsl	r8, r8, #2
   39360:	str	r0, [sp, #36]	; 0x24
   39364:	lsl	r0, r4, #3
   39368:	str	r0, [sp, #40]	; 0x28
   3936c:	mov	r0, #0
   39370:	str	r0, [sp, #52]	; 0x34
   39374:	ldr	r0, [fp, #12]
   39378:	cmp	r4, #1
   3937c:	ldr	r6, [r0]
   39380:	blt	393c8 <GetDataSlab+0x16eac>
   39384:	ldr	r0, [sp, #36]	; 0x24
   39388:	ldr	ip, [sp, #60]	; 0x3c
   3938c:	add	r5, r9, r6, lsl #2
   39390:	mov	r2, r4
   39394:	add	r3, r0, r3
   39398:	add	r7, r9, r0, lsl #2
   3939c:	ldr	r0, [r5], r8
   393a0:	subs	r2, r2, #1
   393a4:	asr	r9, r0, #31
   393a8:	stm	ip, {r0, r9}
   393ac:	add	ip, ip, #8
   393b0:	bne	3939c <GetDataSlab+0x16e80>
   393b4:	mov	r9, r7
   393b8:	add	r2, r3, r6
   393bc:	add	r7, sp, #64	; 0x40
   393c0:	mov	ip, #0
   393c4:	b	393d0 <GetDataSlab+0x16eb4>
   393c8:	add	r2, r6, r3
   393cc:	add	r7, sp, #64	; 0x40
   393d0:	ldr	r0, [sp, #44]	; 0x2c
   393d4:	add	r9, r9, r0, lsl #2
   393d8:	sub	r0, r0, r6
   393dc:	add	r3, r2, r0
   393e0:	ldr	r0, [fp, #24]
   393e4:	cmp	r0, #2
   393e8:	blt	3948c <GetDataSlab+0x16f70>
   393ec:	mov	r2, #0
   393f0:	mov	r0, r2
   393f4:	ldr	r2, [r1, r2, lsl #2]
   393f8:	add	r2, r2, #1
   393fc:	str	r2, [r1, r0, lsl #2]
   39400:	ldr	r6, [sl, r0, lsl #2]
   39404:	sdiv	r5, r2, r6
   39408:	mls	r2, r5, r6, r2
   3940c:	cmp	r2, #0
   39410:	bne	3947c <GetDataSlab+0x16f60>
   39414:	add	r2, r7, r0, lsl #2
   39418:	str	ip, [r1, r0, lsl #2]
   3941c:	ldr	r2, [r2, #4]
   39420:	sdiv	r6, r3, r2
   39424:	mls	r6, r6, r2, r3
   39428:	cmp	r6, #0
   3942c:	beq	39448 <GetDataSlab+0x16f2c>
   39430:	ldr	r5, [r7, r0, lsl #2]
   39434:	ldr	r4, [lr, r0, lsl #2]
   39438:	sub	r2, r2, r6
   3943c:	mla	r2, r4, r5, r2
   39440:	add	r3, r2, r3
   39444:	b	39460 <GetDataSlab+0x16f44>
   39448:	ldr	r2, [lr, r0, lsl #2]
   3944c:	cmp	r2, #0
   39450:	beq	39464 <GetDataSlab+0x16f48>
   39454:	ldr	r6, [r7, r0, lsl #2]
   39458:	mla	r3, r6, r2, r3
   3945c:	mul	r2, r6, r2
   39460:	add	r9, r9, r2, lsl #2
   39464:	ldr	r6, [fp, #24]
   39468:	add	r2, r0, #1
   3946c:	add	r0, r0, #2
   39470:	cmp	r0, r6
   39474:	blt	393f0 <GetDataSlab+0x16ed4>
   39478:	b	3948c <GetDataSlab+0x16f70>
   3947c:	ldr	r2, [sp, #32]
   39480:	ldr	r0, [r2, r0, lsl #2]
   39484:	add	r9, r9, r0, lsl #2
   39488:	add	r3, r0, r3
   3948c:	ldr	r0, [sp, #60]	; 0x3c
   39490:	ldr	r2, [sp, #40]	; 0x28
   39494:	ldr	r4, [sp, #48]	; 0x30
   39498:	ldr	r5, [sp, #52]	; 0x34
   3949c:	add	r0, r0, r2
   394a0:	ldr	r2, [sp, #56]	; 0x38
   394a4:	add	r5, r5, r4
   394a8:	str	r0, [sp, #60]	; 0x3c
   394ac:	mov	r0, #0
   394b0:	str	r5, [sp, #52]	; 0x34
   394b4:	cmp	r5, r2
   394b8:	blt	39374 <GetDataSlab+0x16e58>
   394bc:	b	242ac <GetDataSlab+0x1d90>
   394c0:	ldr	r0, [sp, #48]	; 0x30
   394c4:	cmp	r0, #1
   394c8:	blt	242a8 <GetDataSlab+0x1d8c>
   394cc:	ldr	r0, [sp, #44]	; 0x2c
   394d0:	ldr	r1, [sp, #40]	; 0x28
   394d4:	mov	r2, lr
   394d8:	mov	r9, #0
   394dc:	mls	r1, r0, r8, r1
   394e0:	str	r1, [sp, #40]	; 0x28
   394e4:	add	r1, ip, #4
   394e8:	mov	ip, r0
   394ec:	ldr	r0, [fp, #20]
   394f0:	str	r1, [sp, #56]	; 0x38
   394f4:	add	lr, r0, #4
   394f8:	add	r0, sp, #104	; 0x68
   394fc:	orr	r1, r0, #4
   39500:	orr	r0, r2, #4
   39504:	str	r0, [sp, #28]
   39508:	mul	r0, ip, r8
   3950c:	lsl	r8, r8, #2
   39510:	str	r0, [sp, #32]
   39514:	lsl	r0, ip, #3
   39518:	str	r0, [sp, #36]	; 0x24
   3951c:	mov	r0, #0
   39520:	str	r0, [sp, #52]	; 0x34
   39524:	ldr	r0, [fp, #12]
   39528:	cmp	ip, #1
   3952c:	ldr	r0, [r0]
   39530:	blt	39570 <GetDataSlab+0x17054>
   39534:	ldr	r2, [sp, #32]
   39538:	add	r5, sl, r0, lsl #2
   3953c:	add	r3, r2, r3
   39540:	add	r4, sl, r2, lsl #2
   39544:	mov	r2, ip
   39548:	ldr	ip, [sp, #60]	; 0x3c
   3954c:	ldr	r6, [r5], r8
   39550:	subs	r2, r2, #1
   39554:	stm	ip, {r6, r9}
   39558:	add	ip, ip, #8
   3955c:	bne	3954c <GetDataSlab+0x17030>
   39560:	ldr	ip, [sp, #44]	; 0x2c
   39564:	add	r2, r3, r0
   39568:	mov	sl, r4
   3956c:	b	39574 <GetDataSlab+0x17058>
   39570:	add	r2, r0, r3
   39574:	add	r5, sp, #64	; 0x40
   39578:	ldr	r3, [sp, #40]	; 0x28
   3957c:	sub	r0, r3, r0
   39580:	add	sl, sl, r3, lsl #2
   39584:	add	r3, r2, r0
   39588:	ldr	r0, [fp, #24]
   3958c:	cmp	r0, #2
   39590:	blt	3963c <GetDataSlab+0x17120>
   39594:	mov	r2, #0
   39598:	mov	r0, r2
   3959c:	ldr	r2, [r1, r2, lsl #2]
   395a0:	add	r2, r2, #1
   395a4:	str	r2, [r1, r0, lsl #2]
   395a8:	ldr	r6, [lr, r0, lsl #2]
   395ac:	sdiv	r4, r2, r6
   395b0:	mls	r2, r4, r6, r2
   395b4:	cmp	r2, #0
   395b8:	bne	3962c <GetDataSlab+0x17110>
   395bc:	add	r2, r5, r0, lsl #2
   395c0:	str	r9, [r1, r0, lsl #2]
   395c4:	ldr	r2, [r2, #4]
   395c8:	sdiv	r6, r3, r2
   395cc:	mls	r6, r6, r2, r3
   395d0:	cmp	r6, #0
   395d4:	beq	395f4 <GetDataSlab+0x170d8>
   395d8:	ldr	r7, [sp, #56]	; 0x38
   395dc:	ldr	r4, [r5, r0, lsl #2]
   395e0:	sub	r2, r2, r6
   395e4:	ldr	r7, [r7, r0, lsl #2]
   395e8:	mla	r2, r7, r4, r2
   395ec:	add	r3, r2, r3
   395f0:	b	39610 <GetDataSlab+0x170f4>
   395f4:	ldr	r2, [sp, #56]	; 0x38
   395f8:	ldr	r2, [r2, r0, lsl #2]
   395fc:	cmp	r2, #0
   39600:	beq	39614 <GetDataSlab+0x170f8>
   39604:	ldr	r7, [r5, r0, lsl #2]
   39608:	mla	r3, r7, r2, r3
   3960c:	mul	r2, r7, r2
   39610:	add	sl, sl, r2, lsl #2
   39614:	ldr	r7, [fp, #24]
   39618:	add	r2, r0, #1
   3961c:	add	r0, r0, #2
   39620:	cmp	r0, r7
   39624:	blt	39598 <GetDataSlab+0x1707c>
   39628:	b	3963c <GetDataSlab+0x17120>
   3962c:	ldr	r2, [sp, #28]
   39630:	ldr	r0, [r2, r0, lsl #2]
   39634:	add	sl, sl, r0, lsl #2
   39638:	add	r3, r0, r3
   3963c:	ldr	r0, [sp, #60]	; 0x3c
   39640:	ldr	r2, [sp, #36]	; 0x24
   39644:	ldr	r4, [sp, #52]	; 0x34
   39648:	add	r0, r0, r2
   3964c:	ldr	r2, [sp, #48]	; 0x30
   39650:	add	r4, r4, ip
   39654:	str	r0, [sp, #60]	; 0x3c
   39658:	mov	r0, #0
   3965c:	str	r4, [sp, #52]	; 0x34
   39660:	cmp	r4, r2
   39664:	blt	39524 <GetDataSlab+0x17008>
   39668:	b	242ac <GetDataSlab+0x1d90>
   3966c:	ldr	r0, [sp, #48]	; 0x30
   39670:	cmp	r0, #1
   39674:	blt	242a8 <GetDataSlab+0x1d8c>
   39678:	ldr	r1, [sp, #56]	; 0x38
   3967c:	ldr	r2, [sp, #44]	; 0x2c
   39680:	ldr	r0, [sp, #40]	; 0x28
   39684:	lsl	r6, ip, #2
   39688:	ldr	sl, [r1], #4
   3968c:	mls	r0, r2, ip, r0
   39690:	sub	r0, r0, sl
   39694:	str	r1, [sp, #56]	; 0x38
   39698:	add	r1, r8, #4
   3969c:	mov	r8, r2
   396a0:	str	sl, [sp, #32]
   396a4:	str	r0, [sp, #40]	; 0x28
   396a8:	add	r0, sp, #104	; 0x68
   396ac:	str	r1, [sp, #28]
   396b0:	orr	r4, r0, #4
   396b4:	orr	r0, lr, #4
   396b8:	mov	lr, r1
   396bc:	str	r0, [sp, #20]
   396c0:	mla	r0, r2, ip, sl
   396c4:	str	r0, [sp, #24]
   396c8:	lsl	r0, r2, #3
   396cc:	str	r0, [sp, #36]	; 0x24
   396d0:	mov	r0, #0
   396d4:	str	r0, [sp, #52]	; 0x34
   396d8:	cmp	r8, #1
   396dc:	mov	r0, sl
   396e0:	blt	39714 <GetDataSlab+0x171f8>
   396e4:	ldr	r7, [sp, #60]	; 0x3c
   396e8:	add	sl, r5, sl, lsl #2
   396ec:	ldr	r0, [sl], r6
   396f0:	bl	49828 <__aeabi_f2lz>
   396f4:	strd	r0, [r7]
   396f8:	subs	r8, r8, #1
   396fc:	add	r7, r7, #8
   39700:	bne	396ec <GetDataSlab+0x171d0>
   39704:	ldr	r0, [sp, #24]
   39708:	ldr	r8, [sp, #44]	; 0x2c
   3970c:	ldr	sl, [sp, #32]
   39710:	ldr	lr, [sp, #28]
   39714:	ldr	r2, [sp, #40]	; 0x28
   39718:	ldr	ip, [sp, #60]	; 0x3c
   3971c:	add	r1, r5, r2, lsl #2
   39720:	add	r5, r1, r0, lsl #2
   39724:	add	r0, r0, r9
   39728:	add	r9, r0, r2
   3972c:	ldr	r0, [fp, #24]
   39730:	cmp	r0, #2
   39734:	blt	397ec <GetDataSlab+0x172d0>
   39738:	mov	r1, #0
   3973c:	mov	r0, r1
   39740:	ldr	r1, [r4, r1, lsl #2]
   39744:	add	r1, r1, #1
   39748:	str	r1, [r4, r0, lsl #2]
   3974c:	ldr	r2, [lr, r0, lsl #2]
   39750:	sdiv	r3, r1, r2
   39754:	mls	r1, r3, r2, r1
   39758:	cmp	r1, #0
   3975c:	bne	397dc <GetDataSlab+0x172c0>
   39760:	mov	r1, #0
   39764:	add	r3, sp, #64	; 0x40
   39768:	str	r1, [r4, r0, lsl #2]
   3976c:	add	r1, r3, r0, lsl #2
   39770:	ldr	r1, [r1, #4]
   39774:	sdiv	r2, r9, r1
   39778:	mls	r2, r2, r1, r9
   3977c:	cmp	r2, #0
   39780:	beq	397a0 <GetDataSlab+0x17284>
   39784:	ldr	r7, [sp, #56]	; 0x38
   39788:	ldr	r3, [r3, r0, lsl #2]
   3978c:	sub	r1, r1, r2
   39790:	ldr	r7, [r7, r0, lsl #2]
   39794:	mla	r1, r7, r3, r1
   39798:	add	r9, r1, r9
   3979c:	b	397c0 <GetDataSlab+0x172a4>
   397a0:	ldr	r1, [sp, #56]	; 0x38
   397a4:	ldr	r1, [r1, r0, lsl #2]
   397a8:	cmp	r1, #0
   397ac:	beq	397c4 <GetDataSlab+0x172a8>
   397b0:	add	r2, sp, #64	; 0x40
   397b4:	ldr	r2, [r2, r0, lsl #2]
   397b8:	mla	r9, r2, r1, r9
   397bc:	mul	r1, r2, r1
   397c0:	add	r5, r5, r1, lsl #2
   397c4:	ldr	r2, [fp, #24]
   397c8:	add	r1, r0, #1
   397cc:	add	r0, r0, #2
   397d0:	cmp	r0, r2
   397d4:	blt	3973c <GetDataSlab+0x17220>
   397d8:	b	397ec <GetDataSlab+0x172d0>
   397dc:	ldr	r1, [sp, #20]
   397e0:	ldr	r0, [r1, r0, lsl #2]
   397e4:	add	r5, r5, r0, lsl #2
   397e8:	add	r9, r0, r9
   397ec:	ldr	r2, [sp, #52]	; 0x34
   397f0:	ldr	r0, [sp, #36]	; 0x24
   397f4:	ldr	r1, [sp, #48]	; 0x30
   397f8:	add	r2, r2, r8
   397fc:	add	ip, ip, r0
   39800:	mov	r0, #0
   39804:	cmp	r2, r1
   39808:	str	ip, [sp, #60]	; 0x3c
   3980c:	str	r2, [sp, #52]	; 0x34
   39810:	blt	396d8 <GetDataSlab+0x171bc>
   39814:	b	242ac <GetDataSlab+0x1d90>
   39818:	ldr	r0, [sp, #48]	; 0x30
   3981c:	cmp	r0, #1
   39820:	blt	242a8 <GetDataSlab+0x1d8c>
   39824:	ldr	r1, [sp, #56]	; 0x38
   39828:	ldr	r2, [sp, #44]	; 0x2c
   3982c:	ldr	r0, [sp, #40]	; 0x28
   39830:	lsl	sl, ip, #3
   39834:	ldr	r3, [r1], #4
   39838:	mls	r0, r2, ip, r0
   3983c:	sub	r0, r0, r3
   39840:	str	r1, [sp, #56]	; 0x38
   39844:	str	r3, [sp, #28]
   39848:	str	r0, [sp, #36]	; 0x24
   3984c:	add	r0, r8, #4
   39850:	mov	r8, r3
   39854:	str	r0, [sp, #52]	; 0x34
   39858:	add	r0, sp, #104	; 0x68
   3985c:	orr	r7, r0, #4
   39860:	orr	r0, lr, #4
   39864:	mov	lr, r2
   39868:	str	r0, [sp, #20]
   3986c:	mla	r0, r2, ip, r3
   39870:	str	r0, [sp, #24]
   39874:	lsl	r0, r2, #3
   39878:	str	r0, [sp, #32]
   3987c:	mov	r0, #0
   39880:	str	r0, [sp, #40]	; 0x28
   39884:	cmp	lr, #1
   39888:	mov	r0, r8
   3988c:	blt	398c8 <GetDataSlab+0x173ac>
   39890:	ldr	r5, [sp, #60]	; 0x3c
   39894:	add	r8, r4, r8, lsl #3
   39898:	mov	r6, lr
   3989c:	vldr	d16, [r8]
   398a0:	vmov	r0, r1, d16
   398a4:	bl	49854 <__aeabi_d2lz>
   398a8:	strd	r0, [r5]
   398ac:	add	r8, r8, sl
   398b0:	subs	r6, r6, #1
   398b4:	add	r5, r5, #8
   398b8:	bne	3989c <GetDataSlab+0x17380>
   398bc:	ldr	r0, [sp, #24]
   398c0:	ldr	lr, [sp, #44]	; 0x2c
   398c4:	ldr	r8, [sp, #28]
   398c8:	ldr	r2, [sp, #36]	; 0x24
   398cc:	ldr	ip, [sp, #60]	; 0x3c
   398d0:	add	r1, r4, r2, lsl #3
   398d4:	add	r4, r1, r0, lsl #3
   398d8:	add	r0, r0, r9
   398dc:	add	r9, r0, r2
   398e0:	ldr	r0, [fp, #24]
   398e4:	cmp	r0, #2
   398e8:	blt	399a0 <GetDataSlab+0x17484>
   398ec:	ldr	r5, [sp, #56]	; 0x38
   398f0:	mov	r1, #0
   398f4:	mov	r0, r1
   398f8:	ldr	r1, [r7, r1, lsl #2]
   398fc:	ldr	r2, [sp, #52]	; 0x34
   39900:	add	r1, r1, #1
   39904:	str	r1, [r7, r0, lsl #2]
   39908:	ldr	r2, [r2, r0, lsl #2]
   3990c:	sdiv	r3, r1, r2
   39910:	mls	r1, r3, r2, r1
   39914:	cmp	r1, #0
   39918:	bne	39990 <GetDataSlab+0x17474>
   3991c:	mov	r1, #0
   39920:	add	r3, sp, #64	; 0x40
   39924:	str	r1, [r7, r0, lsl #2]
   39928:	add	r1, r3, r0, lsl #2
   3992c:	ldr	r1, [r1, #4]
   39930:	sdiv	r2, r9, r1
   39934:	mls	r2, r2, r1, r9
   39938:	cmp	r2, #0
   3993c:	beq	39958 <GetDataSlab+0x1743c>
   39940:	ldr	r3, [r3, r0, lsl #2]
   39944:	ldr	r6, [r5, r0, lsl #2]
   39948:	sub	r1, r1, r2
   3994c:	mla	r1, r6, r3, r1
   39950:	add	r9, r1, r9
   39954:	b	39974 <GetDataSlab+0x17458>
   39958:	ldr	r1, [r5, r0, lsl #2]
   3995c:	cmp	r1, #0
   39960:	beq	39978 <GetDataSlab+0x1745c>
   39964:	add	r2, sp, #64	; 0x40
   39968:	ldr	r2, [r2, r0, lsl #2]
   3996c:	mla	r9, r2, r1, r9
   39970:	mul	r1, r2, r1
   39974:	add	r4, r4, r1, lsl #3
   39978:	ldr	r2, [fp, #24]
   3997c:	add	r1, r0, #1
   39980:	add	r0, r0, #2
   39984:	cmp	r0, r2
   39988:	blt	398f4 <GetDataSlab+0x173d8>
   3998c:	b	399a0 <GetDataSlab+0x17484>
   39990:	ldr	r1, [sp, #20]
   39994:	ldr	r0, [r1, r0, lsl #2]
   39998:	add	r4, r4, r0, lsl #3
   3999c:	add	r9, r0, r9
   399a0:	ldr	r2, [sp, #40]	; 0x28
   399a4:	ldr	r0, [sp, #32]
   399a8:	ldr	r1, [sp, #48]	; 0x30
   399ac:	add	r2, r2, lr
   399b0:	add	ip, ip, r0
   399b4:	mov	r0, #0
   399b8:	cmp	r2, r1
   399bc:	str	ip, [sp, #60]	; 0x3c
   399c0:	str	r2, [sp, #40]	; 0x28
   399c4:	blt	39884 <GetDataSlab+0x17368>
   399c8:	b	242ac <GetDataSlab+0x1d90>
   399cc:	ldr	r0, [sp, #56]	; 0x38
   399d0:	ldr	r2, [fp, #20]
   399d4:	ldr	r8, [sp, #40]	; 0x28
   399d8:	cmp	r0, #1
   399dc:	blt	39b5c <GetDataSlab+0x17640>
   399e0:	ldr	r0, [sp, #44]	; 0x2c
   399e4:	mov	r1, lr
   399e8:	mov	lr, ip
   399ec:	add	ip, r2, #4
   399f0:	mov	r9, #0
   399f4:	ldr	r4, [lr], #4
   399f8:	str	r1, [sp, #44]	; 0x2c
   399fc:	mls	r0, r8, r5, r0
   39a00:	sub	r0, r0, r4
   39a04:	str	r4, [sp, #36]	; 0x24
   39a08:	str	r0, [sp, #32]
   39a0c:	add	r0, sp, #104	; 0x68
   39a10:	orr	r6, r0, #4
   39a14:	sub	r0, fp, #72	; 0x48
   39a18:	orr	r0, r0, #4
   39a1c:	str	r0, [sp, #20]
   39a20:	mla	r0, r8, r5, r4
   39a24:	lsl	r5, r5, #3
   39a28:	str	r0, [sp, #24]
   39a2c:	lsl	r0, r8, #3
   39a30:	str	r0, [sp, #28]
   39a34:	ldr	r0, [sp, #36]	; 0x24
   39a38:	cmp	r8, #1
   39a3c:	blt	39a70 <GetDataSlab+0x17554>
   39a40:	ldr	r0, [sp, #36]	; 0x24
   39a44:	mov	r2, r8
   39a48:	ldr	r8, [sp, #44]	; 0x2c
   39a4c:	add	r7, r3, r0, lsl #3
   39a50:	ldrd	r0, [r7]
   39a54:	add	r7, r7, r5
   39a58:	subs	r2, r2, #1
   39a5c:	strd	r0, [r8]
   39a60:	add	r8, r8, #8
   39a64:	bne	39a50 <GetDataSlab+0x17534>
   39a68:	ldr	r0, [sp, #24]
   39a6c:	ldr	r8, [sp, #40]	; 0x28
   39a70:	ldr	r2, [sp, #32]
   39a74:	add	r1, r3, r2, lsl #3
   39a78:	add	r3, r1, r0, lsl #3
   39a7c:	add	r0, r0, sl
   39a80:	add	sl, r0, r2
   39a84:	ldr	r0, [fp, #24]
   39a88:	cmp	r0, #2
   39a8c:	blt	39b3c <GetDataSlab+0x17620>
   39a90:	mov	r2, #0
   39a94:	ldr	r1, [r6, r2, lsl #2]
   39a98:	mov	r0, r2
   39a9c:	add	r1, r1, #1
   39aa0:	str	r1, [r6, r2, lsl #2]
   39aa4:	ldr	r2, [ip, r2, lsl #2]
   39aa8:	sdiv	r7, r1, r2
   39aac:	mls	r1, r7, r2, r1
   39ab0:	cmp	r1, #0
   39ab4:	bne	39b2c <GetDataSlab+0x17610>
   39ab8:	mov	r1, #0
   39abc:	add	r4, sp, #64	; 0x40
   39ac0:	str	r1, [r6, r0, lsl #2]
   39ac4:	add	r1, r4, r0, lsl #2
   39ac8:	ldr	r2, [r1, #4]
   39acc:	sdiv	r1, sl, r2
   39ad0:	mls	r7, r1, r2, sl
   39ad4:	cmp	r7, #0
   39ad8:	beq	39af4 <GetDataSlab+0x175d8>
   39adc:	ldr	r1, [r4, r0, lsl #2]
   39ae0:	ldr	r4, [lr, r0, lsl #2]
   39ae4:	sub	r2, r2, r7
   39ae8:	mla	r1, r4, r1, r2
   39aec:	add	sl, r1, sl
   39af0:	b	39b10 <GetDataSlab+0x175f4>
   39af4:	ldr	r2, [lr, r0, lsl #2]
   39af8:	cmp	r2, #0
   39afc:	beq	39b14 <GetDataSlab+0x175f8>
   39b00:	add	r1, sp, #64	; 0x40
   39b04:	ldr	r1, [r1, r0, lsl #2]
   39b08:	mla	sl, r1, r2, sl
   39b0c:	mul	r1, r1, r2
   39b10:	add	r3, r3, r1, lsl #3
   39b14:	ldr	r1, [fp, #24]
   39b18:	add	r2, r0, #1
   39b1c:	add	r0, r0, #2
   39b20:	cmp	r0, r1
   39b24:	blt	39a94 <GetDataSlab+0x17578>
   39b28:	b	39b3c <GetDataSlab+0x17620>
   39b2c:	ldr	r1, [sp, #20]
   39b30:	ldr	r0, [r1, r0, lsl #2]
   39b34:	add	r3, r3, r0, lsl #3
   39b38:	add	sl, r0, sl
   39b3c:	ldr	r0, [sp, #28]
   39b40:	ldr	r1, [sp, #44]	; 0x2c
   39b44:	add	r9, r9, r8
   39b48:	add	r1, r1, r0
   39b4c:	ldr	r0, [sp, #56]	; 0x38
   39b50:	str	r1, [sp, #44]	; 0x2c
   39b54:	cmp	r9, r0
   39b58:	blt	39a34 <GetDataSlab+0x17518>
   39b5c:	ldr	r3, [sp, #48]	; 0x30
   39b60:	mov	r0, #0
   39b64:	cmp	r3, #13
   39b68:	bne	242ac <GetDataSlab+0x1d90>
   39b6c:	ldr	r9, [fp, #16]
   39b70:	ldr	lr, [fp, #8]
   39b74:	ldr	ip, [fp, #12]
   39b78:	mov	r2, #0
   39b7c:	add	r3, sp, #64	; 0x40
   39b80:	sub	r4, fp, #72	; 0x48
   39b84:	ldr	r0, [r9]
   39b88:	str	r0, [sp, #28]
   39b8c:	sub	r0, r0, #1
   39b90:	str	r0, [fp, #-72]	; 0xffffffb8
   39b94:	ldr	r0, [lr]
   39b98:	str	r0, [sp, #40]	; 0x28
   39b9c:	str	r0, [sp, #64]	; 0x40
   39ba0:	ldr	r0, [fp, #20]
   39ba4:	ldr	r1, [r0]
   39ba8:	ldr	r0, [fp, #24]
   39bac:	cmp	r0, #2
   39bb0:	mov	r5, r1
   39bb4:	str	r1, [sp, #48]	; 0x30
   39bb8:	blt	39c48 <GetDataSlab+0x1772c>
   39bbc:	ldr	r6, [sp, #40]	; 0x28
   39bc0:	ldr	r5, [sp, #48]	; 0x30
   39bc4:	mov	r1, #1
   39bc8:	mov	r2, #0
   39bcc:	mov	r7, lr
   39bd0:	mov	sl, r6
   39bd4:	ldr	r0, [r9, r1, lsl #2]
   39bd8:	str	r6, [r3, r1, lsl #2]
   39bdc:	mov	r3, #0
   39be0:	sub	r0, r0, #1
   39be4:	str	r0, [r4, r1, lsl #2]
   39be8:	ldr	r8, [lr, r1, lsl #2]
   39bec:	mov	r4, r8
   39bf0:	mul	r6, r4, r6
   39bf4:	ldr	r4, [r7, -r3, lsl #2]
   39bf8:	add	r3, r3, #1
   39bfc:	cmp	r1, r3
   39c00:	mul	r0, r0, r4
   39c04:	bne	39bf0 <GetDataSlab+0x176d4>
   39c08:	add	r3, sp, #64	; 0x40
   39c0c:	sub	r4, fp, #72	; 0x48
   39c10:	add	r7, r7, #4
   39c14:	str	r6, [r3, r1, lsl #2]
   39c18:	str	r0, [r4, r1, lsl #2]
   39c1c:	ldr	r0, [ip, r1, lsl #2]
   39c20:	mla	r2, r0, sl, r2
   39c24:	ldr	r0, [fp, #20]
   39c28:	mov	sl, r6
   39c2c:	mov	r6, r8
   39c30:	ldr	r0, [r0, r1, lsl #2]
   39c34:	add	r1, r1, #1
   39c38:	mul	r5, r0, r5
   39c3c:	ldr	r0, [fp, #24]
   39c40:	cmp	r1, r0
   39c44:	bne	39bd4 <GetDataSlab+0x176b8>
   39c48:	str	r5, [sp, #44]	; 0x2c
   39c4c:	ldr	r0, [sp, #52]	; 0x34
   39c50:	ldr	r5, [sp, #28]
   39c54:	add	sl, r0, r2, lsl #3
   39c58:	cmp	r5, #1
   39c5c:	bne	3b9e0 <GetDataSlab+0x194c4>
   39c60:	ldr	r0, [sp, #44]	; 0x2c
   39c64:	cmp	r0, #1
   39c68:	ldr	r0, [fp, #20]
   39c6c:	blt	242a8 <GetDataSlab+0x1d8c>
   39c70:	ldr	r1, [sp, #48]	; 0x30
   39c74:	add	r9, r0, #4
   39c78:	add	r0, sp, #104	; 0x68
   39c7c:	mov	r8, #0
   39c80:	mov	lr, #0
   39c84:	orr	r6, r0, #4
   39c88:	sub	r0, fp, #72	; 0x48
   39c8c:	orr	r0, r0, #4
   39c90:	str	r0, [sp, #32]
   39c94:	lsl	r0, r1, #3
   39c98:	str	r0, [sp, #52]	; 0x34
   39c9c:	ldr	r0, [ip], #4
   39ca0:	str	ip, [sp, #56]	; 0x38
   39ca4:	str	r0, [sp, #36]	; 0x24
   39ca8:	ldr	r7, [sp, #56]	; 0x38
   39cac:	cmp	r1, #1
   39cb0:	blt	39cdc <GetDataSlab+0x177c0>
   39cb4:	ldr	r0, [sp, #36]	; 0x24
   39cb8:	ldr	ip, [sp, #48]	; 0x30
   39cbc:	ldr	r3, [sp, #60]	; 0x3c
   39cc0:	add	r0, sl, r0, lsl #3
   39cc4:	ldrd	r4, [r0]
   39cc8:	subs	ip, ip, #1
   39ccc:	add	r0, r0, #8
   39cd0:	strd	r4, [r3]
   39cd4:	add	r3, r3, #8
   39cd8:	bne	39cc4 <GetDataSlab+0x177a8>
   39cdc:	ldr	r0, [sp, #40]	; 0x28
   39ce0:	add	ip, sp, #64	; 0x40
   39ce4:	add	sl, sl, r0, lsl #3
   39ce8:	add	r2, r2, r0
   39cec:	ldr	r0, [fp, #24]
   39cf0:	cmp	r0, #2
   39cf4:	blt	39d98 <GetDataSlab+0x1787c>
   39cf8:	mov	r3, #0
   39cfc:	mov	r0, r3
   39d00:	ldr	r3, [r6, r3, lsl #2]
   39d04:	add	r3, r3, #1
   39d08:	str	r3, [r6, r0, lsl #2]
   39d0c:	ldr	r5, [r9, r0, lsl #2]
   39d10:	sdiv	r4, r3, r5
   39d14:	mls	r3, r4, r5, r3
   39d18:	cmp	r3, #0
   39d1c:	bne	39d88 <GetDataSlab+0x1786c>
   39d20:	add	r3, ip, r0, lsl #2
   39d24:	str	r8, [r6, r0, lsl #2]
   39d28:	ldr	r3, [r3, #4]
   39d2c:	sdiv	r5, r2, r3
   39d30:	mls	r4, r5, r3, r2
   39d34:	cmp	r4, #0
   39d38:	beq	39d54 <GetDataSlab+0x17838>
   39d3c:	ldr	r5, [ip, r0, lsl #2]
   39d40:	ldr	r1, [r7, r0, lsl #2]
   39d44:	sub	r3, r3, r4
   39d48:	mla	r1, r1, r5, r3
   39d4c:	add	r2, r1, r2
   39d50:	b	39d6c <GetDataSlab+0x17850>
   39d54:	ldr	r3, [r7, r0, lsl #2]
   39d58:	cmp	r3, #0
   39d5c:	beq	39d70 <GetDataSlab+0x17854>
   39d60:	ldr	r1, [ip, r0, lsl #2]
   39d64:	mla	r2, r1, r3, r2
   39d68:	mul	r1, r1, r3
   39d6c:	add	sl, sl, r1, lsl #3
   39d70:	ldr	r1, [fp, #24]
   39d74:	add	r3, r0, #1
   39d78:	add	r0, r0, #2
   39d7c:	cmp	r0, r1
   39d80:	blt	39cfc <GetDataSlab+0x177e0>
   39d84:	b	39d98 <GetDataSlab+0x1787c>
   39d88:	ldr	r1, [sp, #32]
   39d8c:	ldr	r0, [r1, r0, lsl #2]
   39d90:	add	sl, sl, r0, lsl #3
   39d94:	add	r2, r0, r2
   39d98:	ldr	r0, [sp, #60]	; 0x3c
   39d9c:	ldr	r1, [sp, #52]	; 0x34
   39da0:	ldr	r3, [sp, #44]	; 0x2c
   39da4:	add	r0, r0, r1
   39da8:	ldr	r1, [sp, #48]	; 0x30
   39dac:	str	r0, [sp, #60]	; 0x3c
   39db0:	mov	r0, #0
   39db4:	add	lr, lr, r1
   39db8:	cmp	lr, r3
   39dbc:	blt	39cac <GetDataSlab+0x17790>
   39dc0:	b	242ac <GetDataSlab+0x1d90>
   39dc4:	ldr	r0, [sp, #56]	; 0x38
   39dc8:	cmp	r0, #1
   39dcc:	blt	242a8 <GetDataSlab+0x1d8c>
   39dd0:	ldr	r1, [sp, #48]	; 0x30
   39dd4:	ldr	r0, [sp, #44]	; 0x2c
   39dd8:	add	r7, ip, #4
   39ddc:	mov	r9, #0
   39de0:	str	r7, [sp, #32]
   39de4:	mls	r0, r1, r8, r0
   39de8:	str	r0, [sp, #44]	; 0x2c
   39dec:	mul	r0, r1, r8
   39df0:	str	r0, [sp, #36]	; 0x24
   39df4:	ldr	r0, [fp, #20]
   39df8:	add	sl, r0, #4
   39dfc:	add	r0, sp, #104	; 0x68
   39e00:	orr	r2, r0, #4
   39e04:	orr	r0, lr, #4
   39e08:	mov	lr, r7
   39e0c:	str	r0, [sp, #28]
   39e10:	lsl	r0, r1, #3
   39e14:	str	r0, [sp, #40]	; 0x28
   39e18:	mov	r0, #0
   39e1c:	str	r0, [sp, #52]	; 0x34
   39e20:	ldr	r0, [fp, #12]
   39e24:	cmp	r1, #1
   39e28:	ldr	r0, [r0]
   39e2c:	blt	39e6c <GetDataSlab+0x17950>
   39e30:	ldr	r7, [sp, #36]	; 0x24
   39e34:	ldr	ip, [sp, #60]	; 0x3c
   39e38:	mov	lr, r1
   39e3c:	add	r4, r7, r3
   39e40:	add	r3, r5, r7
   39e44:	add	r5, r5, r0
   39e48:	ldrb	r6, [r5], r8
   39e4c:	subs	lr, lr, #1
   39e50:	stm	ip, {r6, r9}
   39e54:	add	ip, ip, #8
   39e58:	bne	39e48 <GetDataSlab+0x1792c>
   39e5c:	ldr	lr, [sp, #32]
   39e60:	add	r4, r4, r0
   39e64:	mov	r5, r3
   39e68:	b	39e70 <GetDataSlab+0x17954>
   39e6c:	add	r4, r0, r3
   39e70:	ldr	r1, [sp, #44]	; 0x2c
   39e74:	ldr	ip, [sp, #60]	; 0x3c
   39e78:	sub	r0, r1, r0
   39e7c:	add	r5, r5, r1
   39e80:	add	r3, r4, r0
   39e84:	ldr	r0, [fp, #24]
   39e88:	cmp	r0, #2
   39e8c:	blt	39f34 <GetDataSlab+0x17a18>
   39e90:	mov	r4, #0
   39e94:	ldr	r6, [r2, r4, lsl #2]
   39e98:	mov	r0, r4
   39e9c:	add	r6, r6, #1
   39ea0:	str	r6, [r2, r4, lsl #2]
   39ea4:	ldr	r4, [sl, r4, lsl #2]
   39ea8:	sdiv	r7, r6, r4
   39eac:	mls	r7, r7, r4, r6
   39eb0:	cmp	r7, #0
   39eb4:	bne	39f24 <GetDataSlab+0x17a08>
   39eb8:	add	r1, sp, #64	; 0x40
   39ebc:	str	r9, [r2, r0, lsl #2]
   39ec0:	add	r7, r1, r0, lsl #2
   39ec4:	ldr	r4, [r7, #4]
   39ec8:	sdiv	r7, r3, r4
   39ecc:	mls	r6, r7, r4, r3
   39ed0:	cmp	r6, #0
   39ed4:	beq	39ef4 <GetDataSlab+0x179d8>
   39ed8:	ldr	r7, [r1, r0, lsl #2]
   39edc:	ldr	r1, [lr, r0, lsl #2]
   39ee0:	sub	r6, r4, r6
   39ee4:	mla	r1, r1, r7, r6
   39ee8:	add	r3, r1, r3
   39eec:	add	r5, r5, r1
   39ef0:	b	39f0c <GetDataSlab+0x179f0>
   39ef4:	ldr	r6, [lr, r0, lsl #2]
   39ef8:	cmp	r6, #0
   39efc:	addne	r1, sp, #64	; 0x40
   39f00:	ldrne	r1, [r1, r0, lsl #2]
   39f04:	mlane	r3, r1, r6, r3
   39f08:	mlane	r5, r1, r6, r5
   39f0c:	ldr	r1, [fp, #24]
   39f10:	add	r4, r0, #1
   39f14:	add	r0, r0, #2
   39f18:	cmp	r0, r1
   39f1c:	blt	39e94 <GetDataSlab+0x17978>
   39f20:	b	39f34 <GetDataSlab+0x17a18>
   39f24:	ldr	r1, [sp, #28]
   39f28:	ldr	r0, [r1, r0, lsl #2]
   39f2c:	add	r5, r5, r0
   39f30:	add	r3, r0, r3
   39f34:	ldr	r1, [sp, #48]	; 0x30
   39f38:	ldr	r6, [sp, #52]	; 0x34
   39f3c:	ldr	r0, [sp, #40]	; 0x28
   39f40:	ldr	r7, [sp, #56]	; 0x38
   39f44:	add	r6, r6, r1
   39f48:	add	ip, ip, r0
   39f4c:	mov	r0, #0
   39f50:	cmp	r6, r7
   39f54:	str	ip, [sp, #60]	; 0x3c
   39f58:	str	r6, [sp, #52]	; 0x34
   39f5c:	blt	39e20 <GetDataSlab+0x17904>
   39f60:	b	242ac <GetDataSlab+0x1d90>
   39f64:	ldr	r0, [sp, #48]	; 0x30
   39f68:	ldr	r1, [sp, #44]	; 0x2c
   39f6c:	cmp	r0, #1
   39f70:	blt	242a8 <GetDataSlab+0x1d8c>
   39f74:	ldr	r0, [sp, #40]	; 0x28
   39f78:	ldr	r2, [ip], #4
   39f7c:	lsl	r4, r8, #1
   39f80:	mls	r0, r1, r8, r0
   39f84:	str	ip, [sp, #56]	; 0x38
   39f88:	str	r2, [sp, #52]	; 0x34
   39f8c:	sub	r0, r0, r2
   39f90:	ldr	r6, [sp, #56]	; 0x38
   39f94:	str	r0, [sp, #40]	; 0x28
   39f98:	ldr	r0, [fp, #20]
   39f9c:	add	sl, r0, #4
   39fa0:	add	r0, sp, #104	; 0x68
   39fa4:	orr	r7, r0, #4
   39fa8:	sub	r0, fp, #72	; 0x48
   39fac:	orr	r0, r0, #4
   39fb0:	str	r0, [sp, #28]
   39fb4:	mla	r0, r1, r8, r2
   39fb8:	mov	r8, #0
   39fbc:	str	r0, [sp, #32]
   39fc0:	lsl	r0, r1, #3
   39fc4:	str	r0, [sp, #36]	; 0x24
   39fc8:	ldr	r0, [sp, #52]	; 0x34
   39fcc:	cmp	r1, #1
   39fd0:	blt	39ffc <GetDataSlab+0x17ae0>
   39fd4:	ldr	r0, [sp, #52]	; 0x34
   39fd8:	ldr	ip, [sp, #60]	; 0x3c
   39fdc:	add	r0, lr, r0, lsl #1
   39fe0:	ldrsh	r2, [r0], r4
   39fe4:	subs	r1, r1, #1
   39fe8:	asr	r3, r2, #31
   39fec:	strd	r2, [ip]
   39ff0:	add	ip, ip, #8
   39ff4:	bne	39fe0 <GetDataSlab+0x17ac4>
   39ff8:	ldr	r0, [sp, #32]
   39ffc:	ldr	r2, [sp, #40]	; 0x28
   3a000:	add	ip, sp, #64	; 0x40
   3a004:	add	r1, lr, r2, lsl #1
   3a008:	add	lr, r1, r0, lsl #1
   3a00c:	add	r0, r0, r9
   3a010:	add	r9, r0, r2
   3a014:	ldr	r0, [fp, #24]
   3a018:	cmp	r0, #2
   3a01c:	blt	3a0c4 <GetDataSlab+0x17ba8>
   3a020:	mov	r1, #0
   3a024:	mov	r0, r1
   3a028:	ldr	r1, [r7, r1, lsl #2]
   3a02c:	add	r1, r1, #1
   3a030:	str	r1, [r7, r0, lsl #2]
   3a034:	ldr	r2, [sl, r0, lsl #2]
   3a038:	sdiv	r3, r1, r2
   3a03c:	mls	r1, r3, r2, r1
   3a040:	cmp	r1, #0
   3a044:	bne	3a0b4 <GetDataSlab+0x17b98>
   3a048:	mov	r1, #0
   3a04c:	str	r1, [r7, r0, lsl #2]
   3a050:	add	r1, ip, r0, lsl #2
   3a054:	ldr	r1, [r1, #4]
   3a058:	sdiv	r2, r9, r1
   3a05c:	mls	r3, r2, r1, r9
   3a060:	cmp	r3, #0
   3a064:	beq	3a080 <GetDataSlab+0x17b64>
   3a068:	ldr	r2, [ip, r0, lsl #2]
   3a06c:	ldr	r5, [r6, r0, lsl #2]
   3a070:	sub	r1, r1, r3
   3a074:	mla	r1, r5, r2, r1
   3a078:	add	r9, r1, r9
   3a07c:	b	3a098 <GetDataSlab+0x17b7c>
   3a080:	ldr	r1, [r6, r0, lsl #2]
   3a084:	cmp	r1, #0
   3a088:	beq	3a09c <GetDataSlab+0x17b80>
   3a08c:	ldr	r2, [ip, r0, lsl #2]
   3a090:	mla	r9, r2, r1, r9
   3a094:	mul	r1, r2, r1
   3a098:	add	lr, lr, r1, lsl #1
   3a09c:	ldr	r2, [fp, #24]
   3a0a0:	add	r1, r0, #1
   3a0a4:	add	r0, r0, #2
   3a0a8:	cmp	r0, r2
   3a0ac:	blt	3a024 <GetDataSlab+0x17b08>
   3a0b0:	b	3a0c4 <GetDataSlab+0x17ba8>
   3a0b4:	ldr	r1, [sp, #28]
   3a0b8:	ldr	r0, [r1, r0, lsl #2]
   3a0bc:	add	lr, lr, r0, lsl #1
   3a0c0:	add	r9, r0, r9
   3a0c4:	ldr	r0, [sp, #60]	; 0x3c
   3a0c8:	ldr	r1, [sp, #36]	; 0x24
   3a0cc:	ldr	r2, [sp, #48]	; 0x30
   3a0d0:	add	r0, r0, r1
   3a0d4:	ldr	r1, [sp, #44]	; 0x2c
   3a0d8:	str	r0, [sp, #60]	; 0x3c
   3a0dc:	mov	r0, #0
   3a0e0:	add	r8, r8, r1
   3a0e4:	cmp	r8, r2
   3a0e8:	blt	39fc8 <GetDataSlab+0x17aac>
   3a0ec:	b	242ac <GetDataSlab+0x1d90>
   3a0f0:	ldr	r0, [sp, #48]	; 0x30
   3a0f4:	ldr	r3, [sp, #44]	; 0x2c
   3a0f8:	cmp	r0, #1
   3a0fc:	blt	242a8 <GetDataSlab+0x1d8c>
   3a100:	ldr	r0, [sp, #40]	; 0x28
   3a104:	ldr	r4, [ip], #4
   3a108:	mov	r1, r8
   3a10c:	lsl	r6, r5, #1
   3a110:	mov	sl, #0
   3a114:	mls	r0, r3, r5, r0
   3a118:	mov	r8, ip
   3a11c:	add	ip, r1, #4
   3a120:	str	r4, [sp, #52]	; 0x34
   3a124:	sub	r0, r0, r4
   3a128:	str	r0, [sp, #40]	; 0x28
   3a12c:	add	r0, sp, #104	; 0x68
   3a130:	orr	r7, r0, #4
   3a134:	sub	r0, fp, #72	; 0x48
   3a138:	orr	r0, r0, #4
   3a13c:	str	r0, [sp, #28]
   3a140:	mla	r0, r3, r5, r4
   3a144:	str	r0, [sp, #32]
   3a148:	lsl	r0, r3, #3
   3a14c:	str	r0, [sp, #36]	; 0x24
   3a150:	mov	r0, #0
   3a154:	str	r0, [sp, #56]	; 0x38
   3a158:	ldr	r0, [sp, #52]	; 0x34
   3a15c:	cmp	r3, #1
   3a160:	blt	3a188 <GetDataSlab+0x17c6c>
   3a164:	ldr	r0, [sp, #52]	; 0x34
   3a168:	ldr	r4, [sp, #60]	; 0x3c
   3a16c:	add	r1, lr, r0, lsl #1
   3a170:	ldrh	r0, [r1], r6
   3a174:	subs	r3, r3, #1
   3a178:	stm	r4, {r0, sl}
   3a17c:	add	r4, r4, #8
   3a180:	bne	3a170 <GetDataSlab+0x17c54>
   3a184:	ldr	r0, [sp, #32]
   3a188:	ldr	r3, [sp, #40]	; 0x28
   3a18c:	add	r1, lr, r3, lsl #1
   3a190:	add	lr, r1, r0, lsl #1
   3a194:	add	r0, r0, r2
   3a198:	add	r2, r0, r3
   3a19c:	ldr	r0, [fp, #24]
   3a1a0:	cmp	r0, #2
   3a1a4:	blt	3a250 <GetDataSlab+0x17d34>
   3a1a8:	mov	r9, #0
   3a1ac:	ldr	r1, [r7, r9, lsl #2]
   3a1b0:	mov	r0, r9
   3a1b4:	add	r1, r1, #1
   3a1b8:	str	r1, [r7, r9, lsl #2]
   3a1bc:	ldr	r3, [ip, r9, lsl #2]
   3a1c0:	sdiv	r4, r1, r3
   3a1c4:	mls	r1, r4, r3, r1
   3a1c8:	cmp	r1, #0
   3a1cc:	bne	3a240 <GetDataSlab+0x17d24>
   3a1d0:	add	r5, sp, #64	; 0x40
   3a1d4:	str	sl, [r7, r0, lsl #2]
   3a1d8:	add	r1, r5, r0, lsl #2
   3a1dc:	ldr	r3, [r1, #4]
   3a1e0:	sdiv	r1, r2, r3
   3a1e4:	mls	r4, r1, r3, r2
   3a1e8:	cmp	r4, #0
   3a1ec:	beq	3a208 <GetDataSlab+0x17cec>
   3a1f0:	ldr	r1, [r5, r0, lsl #2]
   3a1f4:	ldr	r5, [r8, r0, lsl #2]
   3a1f8:	sub	r3, r3, r4
   3a1fc:	mla	r1, r5, r1, r3
   3a200:	add	r2, r1, r2
   3a204:	b	3a224 <GetDataSlab+0x17d08>
   3a208:	ldr	r3, [r8, r0, lsl #2]
   3a20c:	cmp	r3, #0
   3a210:	beq	3a228 <GetDataSlab+0x17d0c>
   3a214:	add	r1, sp, #64	; 0x40
   3a218:	ldr	r1, [r1, r0, lsl #2]
   3a21c:	mla	r2, r1, r3, r2
   3a220:	mul	r1, r1, r3
   3a224:	add	lr, lr, r1, lsl #1
   3a228:	ldr	r1, [fp, #24]
   3a22c:	add	r9, r0, #1
   3a230:	add	r0, r0, #2
   3a234:	cmp	r0, r1
   3a238:	blt	3a1ac <GetDataSlab+0x17c90>
   3a23c:	b	3a250 <GetDataSlab+0x17d34>
   3a240:	ldr	r1, [sp, #28]
   3a244:	ldr	r0, [r1, r0, lsl #2]
   3a248:	add	lr, lr, r0, lsl #1
   3a24c:	add	r2, r0, r2
   3a250:	ldr	r0, [sp, #60]	; 0x3c
   3a254:	ldr	r1, [sp, #36]	; 0x24
   3a258:	ldr	r3, [sp, #44]	; 0x2c
   3a25c:	ldr	r4, [sp, #56]	; 0x38
   3a260:	add	r0, r0, r1
   3a264:	ldr	r1, [sp, #48]	; 0x30
   3a268:	add	r4, r4, r3
   3a26c:	str	r0, [sp, #60]	; 0x3c
   3a270:	mov	r0, #0
   3a274:	str	r4, [sp, #56]	; 0x38
   3a278:	cmp	r4, r1
   3a27c:	blt	3a158 <GetDataSlab+0x17c3c>
   3a280:	b	242ac <GetDataSlab+0x1d90>
   3a284:	ldr	r0, [sp, #56]	; 0x38
   3a288:	ldr	r4, [sp, #48]	; 0x30
   3a28c:	cmp	r0, #1
   3a290:	blt	242a8 <GetDataSlab+0x1d8c>
   3a294:	ldr	r0, [sp, #44]	; 0x2c
   3a298:	mov	r2, lr
   3a29c:	add	lr, ip, #4
   3a2a0:	mov	ip, #0
   3a2a4:	mls	r0, r4, r8, r0
   3a2a8:	str	r0, [sp, #44]	; 0x2c
   3a2ac:	ldr	r0, [fp, #20]
   3a2b0:	add	sl, r0, #4
   3a2b4:	add	r0, sp, #104	; 0x68
   3a2b8:	orr	r1, r0, #4
   3a2bc:	orr	r0, r2, #4
   3a2c0:	str	r0, [sp, #32]
   3a2c4:	mul	r0, r4, r8
   3a2c8:	lsl	r8, r8, #2
   3a2cc:	str	r0, [sp, #36]	; 0x24
   3a2d0:	lsl	r0, r4, #3
   3a2d4:	str	r0, [sp, #40]	; 0x28
   3a2d8:	mov	r0, #0
   3a2dc:	str	r0, [sp, #52]	; 0x34
   3a2e0:	ldr	r0, [fp, #12]
   3a2e4:	cmp	r4, #1
   3a2e8:	ldr	r6, [r0]
   3a2ec:	blt	3a330 <GetDataSlab+0x17e14>
   3a2f0:	ldr	r0, [sp, #36]	; 0x24
   3a2f4:	ldr	ip, [sp, #60]	; 0x3c
   3a2f8:	add	r5, r9, r6, lsl #2
   3a2fc:	mov	r2, r4
   3a300:	add	r3, r0, r3
   3a304:	add	r7, r9, r0, lsl #2
   3a308:	ldr	r0, [r5], r8
   3a30c:	subs	r2, r2, #1
   3a310:	asr	r9, r0, #31
   3a314:	stm	ip, {r0, r9}
   3a318:	add	ip, ip, #8
   3a31c:	bne	3a308 <GetDataSlab+0x17dec>
   3a320:	add	r2, r3, r6
   3a324:	mov	r9, r7
   3a328:	mov	ip, #0
   3a32c:	b	3a334 <GetDataSlab+0x17e18>
   3a330:	add	r2, r6, r3
   3a334:	ldr	r0, [sp, #44]	; 0x2c
   3a338:	add	r7, sp, #64	; 0x40
   3a33c:	add	r9, r9, r0, lsl #2
   3a340:	sub	r0, r0, r6
   3a344:	add	r3, r2, r0
   3a348:	ldr	r0, [fp, #24]
   3a34c:	cmp	r0, #2
   3a350:	blt	3a3f4 <GetDataSlab+0x17ed8>
   3a354:	mov	r2, #0
   3a358:	mov	r0, r2
   3a35c:	ldr	r2, [r1, r2, lsl #2]
   3a360:	add	r2, r2, #1
   3a364:	str	r2, [r1, r0, lsl #2]
   3a368:	ldr	r6, [sl, r0, lsl #2]
   3a36c:	sdiv	r5, r2, r6
   3a370:	mls	r2, r5, r6, r2
   3a374:	cmp	r2, #0
   3a378:	bne	3a3e4 <GetDataSlab+0x17ec8>
   3a37c:	add	r2, r7, r0, lsl #2
   3a380:	str	ip, [r1, r0, lsl #2]
   3a384:	ldr	r2, [r2, #4]
   3a388:	sdiv	r6, r3, r2
   3a38c:	mls	r6, r6, r2, r3
   3a390:	cmp	r6, #0
   3a394:	beq	3a3b0 <GetDataSlab+0x17e94>
   3a398:	ldr	r5, [r7, r0, lsl #2]
   3a39c:	ldr	r4, [lr, r0, lsl #2]
   3a3a0:	sub	r2, r2, r6
   3a3a4:	mla	r2, r4, r5, r2
   3a3a8:	add	r3, r2, r3
   3a3ac:	b	3a3c8 <GetDataSlab+0x17eac>
   3a3b0:	ldr	r2, [lr, r0, lsl #2]
   3a3b4:	cmp	r2, #0
   3a3b8:	beq	3a3cc <GetDataSlab+0x17eb0>
   3a3bc:	ldr	r6, [r7, r0, lsl #2]
   3a3c0:	mla	r3, r6, r2, r3
   3a3c4:	mul	r2, r6, r2
   3a3c8:	add	r9, r9, r2, lsl #2
   3a3cc:	ldr	r6, [fp, #24]
   3a3d0:	add	r2, r0, #1
   3a3d4:	add	r0, r0, #2
   3a3d8:	cmp	r0, r6
   3a3dc:	blt	3a358 <GetDataSlab+0x17e3c>
   3a3e0:	b	3a3f4 <GetDataSlab+0x17ed8>
   3a3e4:	ldr	r2, [sp, #32]
   3a3e8:	ldr	r0, [r2, r0, lsl #2]
   3a3ec:	add	r9, r9, r0, lsl #2
   3a3f0:	add	r3, r0, r3
   3a3f4:	ldr	r0, [sp, #60]	; 0x3c
   3a3f8:	ldr	r2, [sp, #40]	; 0x28
   3a3fc:	ldr	r4, [sp, #48]	; 0x30
   3a400:	ldr	r5, [sp, #52]	; 0x34
   3a404:	add	r0, r0, r2
   3a408:	ldr	r2, [sp, #56]	; 0x38
   3a40c:	add	r5, r5, r4
   3a410:	str	r0, [sp, #60]	; 0x3c
   3a414:	mov	r0, #0
   3a418:	str	r5, [sp, #52]	; 0x34
   3a41c:	cmp	r5, r2
   3a420:	blt	3a2e0 <GetDataSlab+0x17dc4>
   3a424:	b	242ac <GetDataSlab+0x1d90>
   3a428:	ldr	r0, [sp, #56]	; 0x38
   3a42c:	cmp	r0, #1
   3a430:	blt	242a8 <GetDataSlab+0x1d8c>
   3a434:	ldr	r2, [sp, #48]	; 0x30
   3a438:	ldr	r0, [sp, #44]	; 0x2c
   3a43c:	mov	r4, lr
   3a440:	add	lr, ip, #4
   3a444:	mov	r9, #0
   3a448:	mls	r0, r2, r8, r0
   3a44c:	str	r0, [sp, #44]	; 0x2c
   3a450:	ldr	r0, [fp, #20]
   3a454:	add	sl, r0, #4
   3a458:	add	r0, sp, #104	; 0x68
   3a45c:	orr	r1, r0, #4
   3a460:	orr	r0, r4, #4
   3a464:	str	r0, [sp, #32]
   3a468:	mul	r0, r2, r8
   3a46c:	lsl	r8, r8, #2
   3a470:	str	r0, [sp, #36]	; 0x24
   3a474:	lsl	r0, r2, #3
   3a478:	str	r0, [sp, #40]	; 0x28
   3a47c:	mov	r0, #0
   3a480:	str	r0, [sp, #52]	; 0x34
   3a484:	ldr	r0, [fp, #12]
   3a488:	cmp	r2, #1
   3a48c:	ldr	r0, [r0]
   3a490:	blt	3a4c8 <GetDataSlab+0x17fac>
   3a494:	ldr	r7, [sp, #36]	; 0x24
   3a498:	ldr	ip, [sp, #60]	; 0x3c
   3a49c:	add	r4, r5, r7, lsl #2
   3a4a0:	add	r3, r7, r3
   3a4a4:	add	r5, r5, r0, lsl #2
   3a4a8:	ldr	r6, [r5], r8
   3a4ac:	subs	r2, r2, #1
   3a4b0:	stm	ip, {r6, r9}
   3a4b4:	add	ip, ip, #8
   3a4b8:	bne	3a4a8 <GetDataSlab+0x17f8c>
   3a4bc:	add	r2, r3, r0
   3a4c0:	mov	r5, r4
   3a4c4:	b	3a4cc <GetDataSlab+0x17fb0>
   3a4c8:	add	r2, r0, r3
   3a4cc:	ldr	r3, [sp, #44]	; 0x2c
   3a4d0:	add	ip, sp, #64	; 0x40
   3a4d4:	sub	r0, r3, r0
   3a4d8:	add	r5, r5, r3, lsl #2
   3a4dc:	add	r3, r2, r0
   3a4e0:	ldr	r0, [fp, #24]
   3a4e4:	cmp	r0, #2
   3a4e8:	blt	3a58c <GetDataSlab+0x18070>
   3a4ec:	mov	r2, #0
   3a4f0:	mov	r0, r2
   3a4f4:	ldr	r2, [r1, r2, lsl #2]
   3a4f8:	add	r2, r2, #1
   3a4fc:	str	r2, [r1, r0, lsl #2]
   3a500:	ldr	r6, [sl, r0, lsl #2]
   3a504:	sdiv	r4, r2, r6
   3a508:	mls	r2, r4, r6, r2
   3a50c:	cmp	r2, #0
   3a510:	bne	3a57c <GetDataSlab+0x18060>
   3a514:	add	r2, ip, r0, lsl #2
   3a518:	str	r9, [r1, r0, lsl #2]
   3a51c:	ldr	r2, [r2, #4]
   3a520:	sdiv	r6, r3, r2
   3a524:	mls	r6, r6, r2, r3
   3a528:	cmp	r6, #0
   3a52c:	beq	3a548 <GetDataSlab+0x1802c>
   3a530:	ldr	r4, [ip, r0, lsl #2]
   3a534:	ldr	r7, [lr, r0, lsl #2]
   3a538:	sub	r2, r2, r6
   3a53c:	mla	r2, r7, r4, r2
   3a540:	add	r3, r2, r3
   3a544:	b	3a560 <GetDataSlab+0x18044>
   3a548:	ldr	r2, [lr, r0, lsl #2]
   3a54c:	cmp	r2, #0
   3a550:	beq	3a564 <GetDataSlab+0x18048>
   3a554:	ldr	r7, [ip, r0, lsl #2]
   3a558:	mla	r3, r7, r2, r3
   3a55c:	mul	r2, r7, r2
   3a560:	add	r5, r5, r2, lsl #2
   3a564:	ldr	r7, [fp, #24]
   3a568:	add	r2, r0, #1
   3a56c:	add	r0, r0, #2
   3a570:	cmp	r0, r7
   3a574:	blt	3a4f0 <GetDataSlab+0x17fd4>
   3a578:	b	3a58c <GetDataSlab+0x18070>
   3a57c:	ldr	r2, [sp, #32]
   3a580:	ldr	r0, [r2, r0, lsl #2]
   3a584:	add	r5, r5, r0, lsl #2
   3a588:	add	r3, r0, r3
   3a58c:	ldr	r0, [sp, #60]	; 0x3c
   3a590:	ldr	r2, [sp, #40]	; 0x28
   3a594:	ldr	r6, [sp, #52]	; 0x34
   3a598:	ldr	r7, [sp, #56]	; 0x38
   3a59c:	add	r0, r0, r2
   3a5a0:	ldr	r2, [sp, #48]	; 0x30
   3a5a4:	str	r0, [sp, #60]	; 0x3c
   3a5a8:	mov	r0, #0
   3a5ac:	add	r6, r6, r2
   3a5b0:	cmp	r6, r7
   3a5b4:	str	r6, [sp, #52]	; 0x34
   3a5b8:	blt	3a484 <GetDataSlab+0x17f68>
   3a5bc:	b	242ac <GetDataSlab+0x1d90>
   3a5c0:	ldr	r0, [sp, #48]	; 0x30
   3a5c4:	cmp	r0, #1
   3a5c8:	blt	242a8 <GetDataSlab+0x1d8c>
   3a5cc:	ldr	r1, [sp, #56]	; 0x38
   3a5d0:	ldr	r2, [sp, #44]	; 0x2c
   3a5d4:	ldr	r0, [sp, #40]	; 0x28
   3a5d8:	lsl	r6, ip, #2
   3a5dc:	ldr	sl, [r1], #4
   3a5e0:	mls	r0, r2, ip, r0
   3a5e4:	sub	r0, r0, sl
   3a5e8:	str	r1, [sp, #56]	; 0x38
   3a5ec:	add	r1, r8, #4
   3a5f0:	mov	r8, r2
   3a5f4:	str	sl, [sp, #32]
   3a5f8:	str	r0, [sp, #40]	; 0x28
   3a5fc:	add	r0, sp, #104	; 0x68
   3a600:	str	r1, [sp, #28]
   3a604:	orr	r4, r0, #4
   3a608:	orr	r0, lr, #4
   3a60c:	mov	lr, r1
   3a610:	str	r0, [sp, #20]
   3a614:	mla	r0, r2, ip, sl
   3a618:	str	r0, [sp, #24]
   3a61c:	lsl	r0, r2, #3
   3a620:	str	r0, [sp, #36]	; 0x24
   3a624:	mov	r0, #0
   3a628:	str	r0, [sp, #52]	; 0x34
   3a62c:	cmp	r8, #1
   3a630:	mov	r0, sl
   3a634:	blt	3a668 <GetDataSlab+0x1814c>
   3a638:	ldr	r7, [sp, #60]	; 0x3c
   3a63c:	add	sl, r5, sl, lsl #2
   3a640:	ldr	r0, [sl], r6
   3a644:	bl	49880 <__aeabi_f2ulz>
   3a648:	strd	r0, [r7]
   3a64c:	subs	r8, r8, #1
   3a650:	add	r7, r7, #8
   3a654:	bne	3a640 <GetDataSlab+0x18124>
   3a658:	ldr	r0, [sp, #24]
   3a65c:	ldr	r8, [sp, #44]	; 0x2c
   3a660:	ldr	sl, [sp, #32]
   3a664:	ldr	lr, [sp, #28]
   3a668:	ldr	r2, [sp, #40]	; 0x28
   3a66c:	ldr	ip, [sp, #60]	; 0x3c
   3a670:	add	r1, r5, r2, lsl #2
   3a674:	add	r5, r1, r0, lsl #2
   3a678:	add	r0, r0, r9
   3a67c:	add	r9, r0, r2
   3a680:	ldr	r0, [fp, #24]
   3a684:	cmp	r0, #2
   3a688:	blt	3a740 <GetDataSlab+0x18224>
   3a68c:	mov	r1, #0
   3a690:	mov	r0, r1
   3a694:	ldr	r1, [r4, r1, lsl #2]
   3a698:	add	r1, r1, #1
   3a69c:	str	r1, [r4, r0, lsl #2]
   3a6a0:	ldr	r2, [lr, r0, lsl #2]
   3a6a4:	sdiv	r3, r1, r2
   3a6a8:	mls	r1, r3, r2, r1
   3a6ac:	cmp	r1, #0
   3a6b0:	bne	3a730 <GetDataSlab+0x18214>
   3a6b4:	mov	r1, #0
   3a6b8:	add	r3, sp, #64	; 0x40
   3a6bc:	str	r1, [r4, r0, lsl #2]
   3a6c0:	add	r1, r3, r0, lsl #2
   3a6c4:	ldr	r1, [r1, #4]
   3a6c8:	sdiv	r2, r9, r1
   3a6cc:	mls	r2, r2, r1, r9
   3a6d0:	cmp	r2, #0
   3a6d4:	beq	3a6f4 <GetDataSlab+0x181d8>
   3a6d8:	ldr	r7, [sp, #56]	; 0x38
   3a6dc:	ldr	r3, [r3, r0, lsl #2]
   3a6e0:	sub	r1, r1, r2
   3a6e4:	ldr	r7, [r7, r0, lsl #2]
   3a6e8:	mla	r1, r7, r3, r1
   3a6ec:	add	r9, r1, r9
   3a6f0:	b	3a714 <GetDataSlab+0x181f8>
   3a6f4:	ldr	r1, [sp, #56]	; 0x38
   3a6f8:	ldr	r1, [r1, r0, lsl #2]
   3a6fc:	cmp	r1, #0
   3a700:	beq	3a718 <GetDataSlab+0x181fc>
   3a704:	add	r2, sp, #64	; 0x40
   3a708:	ldr	r2, [r2, r0, lsl #2]
   3a70c:	mla	r9, r2, r1, r9
   3a710:	mul	r1, r2, r1
   3a714:	add	r5, r5, r1, lsl #2
   3a718:	ldr	r2, [fp, #24]
   3a71c:	add	r1, r0, #1
   3a720:	add	r0, r0, #2
   3a724:	cmp	r0, r2
   3a728:	blt	3a690 <GetDataSlab+0x18174>
   3a72c:	b	3a740 <GetDataSlab+0x18224>
   3a730:	ldr	r1, [sp, #20]
   3a734:	ldr	r0, [r1, r0, lsl #2]
   3a738:	add	r5, r5, r0, lsl #2
   3a73c:	add	r9, r0, r9
   3a740:	ldr	r2, [sp, #52]	; 0x34
   3a744:	ldr	r0, [sp, #36]	; 0x24
   3a748:	ldr	r1, [sp, #48]	; 0x30
   3a74c:	add	r2, r2, r8
   3a750:	add	ip, ip, r0
   3a754:	mov	r0, #0
   3a758:	cmp	r2, r1
   3a75c:	str	ip, [sp, #60]	; 0x3c
   3a760:	str	r2, [sp, #52]	; 0x34
   3a764:	blt	3a62c <GetDataSlab+0x18110>
   3a768:	b	242ac <GetDataSlab+0x1d90>
   3a76c:	ldr	r0, [sp, #48]	; 0x30
   3a770:	cmp	r0, #1
   3a774:	blt	242a8 <GetDataSlab+0x1d8c>
   3a778:	ldr	r1, [sp, #56]	; 0x38
   3a77c:	ldr	r2, [sp, #44]	; 0x2c
   3a780:	ldr	r0, [sp, #40]	; 0x28
   3a784:	lsl	sl, ip, #3
   3a788:	ldr	r3, [r1], #4
   3a78c:	mls	r0, r2, ip, r0
   3a790:	sub	r0, r0, r3
   3a794:	str	r1, [sp, #56]	; 0x38
   3a798:	str	r3, [sp, #28]
   3a79c:	str	r0, [sp, #36]	; 0x24
   3a7a0:	add	r0, r8, #4
   3a7a4:	mov	r8, r3
   3a7a8:	str	r0, [sp, #52]	; 0x34
   3a7ac:	add	r0, sp, #104	; 0x68
   3a7b0:	orr	r4, r0, #4
   3a7b4:	orr	r0, lr, #4
   3a7b8:	mov	lr, r2
   3a7bc:	str	r0, [sp, #20]
   3a7c0:	mla	r0, r2, ip, r3
   3a7c4:	str	r0, [sp, #24]
   3a7c8:	lsl	r0, r2, #3
   3a7cc:	str	r0, [sp, #32]
   3a7d0:	mov	r0, #0
   3a7d4:	str	r0, [sp, #40]	; 0x28
   3a7d8:	cmp	lr, #1
   3a7dc:	mov	r0, r8
   3a7e0:	blt	3a81c <GetDataSlab+0x18300>
   3a7e4:	ldr	r7, [sp, #60]	; 0x3c
   3a7e8:	add	r8, r5, r8, lsl #3
   3a7ec:	mov	r6, lr
   3a7f0:	vldr	d16, [r8]
   3a7f4:	vmov	r0, r1, d16
   3a7f8:	bl	498c0 <__aeabi_d2ulz>
   3a7fc:	strd	r0, [r7]
   3a800:	add	r8, r8, sl
   3a804:	subs	r6, r6, #1
   3a808:	add	r7, r7, #8
   3a80c:	bne	3a7f0 <GetDataSlab+0x182d4>
   3a810:	ldr	r0, [sp, #24]
   3a814:	ldr	lr, [sp, #44]	; 0x2c
   3a818:	ldr	r8, [sp, #28]
   3a81c:	ldr	r2, [sp, #36]	; 0x24
   3a820:	ldr	ip, [sp, #60]	; 0x3c
   3a824:	add	r1, r5, r2, lsl #3
   3a828:	add	r5, r1, r0, lsl #3
   3a82c:	add	r0, r0, r9
   3a830:	add	r9, r0, r2
   3a834:	ldr	r0, [fp, #24]
   3a838:	cmp	r0, #2
   3a83c:	blt	3a8f4 <GetDataSlab+0x183d8>
   3a840:	ldr	r6, [sp, #56]	; 0x38
   3a844:	mov	r1, #0
   3a848:	mov	r0, r1
   3a84c:	ldr	r1, [r4, r1, lsl #2]
   3a850:	ldr	r2, [sp, #52]	; 0x34
   3a854:	add	r1, r1, #1
   3a858:	str	r1, [r4, r0, lsl #2]
   3a85c:	ldr	r2, [r2, r0, lsl #2]
   3a860:	sdiv	r3, r1, r2
   3a864:	mls	r1, r3, r2, r1
   3a868:	cmp	r1, #0
   3a86c:	bne	3a8e4 <GetDataSlab+0x183c8>
   3a870:	mov	r1, #0
   3a874:	add	r3, sp, #64	; 0x40
   3a878:	str	r1, [r4, r0, lsl #2]
   3a87c:	add	r1, r3, r0, lsl #2
   3a880:	ldr	r1, [r1, #4]
   3a884:	sdiv	r2, r9, r1
   3a888:	mls	r2, r2, r1, r9
   3a88c:	cmp	r2, #0
   3a890:	beq	3a8ac <GetDataSlab+0x18390>
   3a894:	ldr	r3, [r3, r0, lsl #2]
   3a898:	ldr	r7, [r6, r0, lsl #2]
   3a89c:	sub	r1, r1, r2
   3a8a0:	mla	r1, r7, r3, r1
   3a8a4:	add	r9, r1, r9
   3a8a8:	b	3a8c8 <GetDataSlab+0x183ac>
   3a8ac:	ldr	r1, [r6, r0, lsl #2]
   3a8b0:	cmp	r1, #0
   3a8b4:	beq	3a8cc <GetDataSlab+0x183b0>
   3a8b8:	add	r2, sp, #64	; 0x40
   3a8bc:	ldr	r2, [r2, r0, lsl #2]
   3a8c0:	mla	r9, r2, r1, r9
   3a8c4:	mul	r1, r2, r1
   3a8c8:	add	r5, r5, r1, lsl #3
   3a8cc:	ldr	r2, [fp, #24]
   3a8d0:	add	r1, r0, #1
   3a8d4:	add	r0, r0, #2
   3a8d8:	cmp	r0, r2
   3a8dc:	blt	3a848 <GetDataSlab+0x1832c>
   3a8e0:	b	3a8f4 <GetDataSlab+0x183d8>
   3a8e4:	ldr	r1, [sp, #20]
   3a8e8:	ldr	r0, [r1, r0, lsl #2]
   3a8ec:	add	r5, r5, r0, lsl #3
   3a8f0:	add	r9, r0, r9
   3a8f4:	ldr	r2, [sp, #40]	; 0x28
   3a8f8:	ldr	r0, [sp, #32]
   3a8fc:	ldr	r1, [sp, #48]	; 0x30
   3a900:	add	r2, r2, lr
   3a904:	add	ip, ip, r0
   3a908:	mov	r0, #0
   3a90c:	cmp	r2, r1
   3a910:	str	ip, [sp, #60]	; 0x3c
   3a914:	str	r2, [sp, #40]	; 0x28
   3a918:	blt	3a7d8 <GetDataSlab+0x182bc>
   3a91c:	b	242ac <GetDataSlab+0x1d90>
   3a920:	ldr	r0, [sp, #56]	; 0x38
   3a924:	ldr	r2, [fp, #20]
   3a928:	ldr	r8, [sp, #40]	; 0x28
   3a92c:	cmp	r0, #1
   3a930:	blt	3aab0 <GetDataSlab+0x18594>
   3a934:	ldr	r0, [sp, #44]	; 0x2c
   3a938:	mov	r1, lr
   3a93c:	mov	lr, ip
   3a940:	add	ip, r2, #4
   3a944:	mov	r9, #0
   3a948:	ldr	r4, [lr], #4
   3a94c:	str	r1, [sp, #44]	; 0x2c
   3a950:	mls	r0, r8, r5, r0
   3a954:	sub	r0, r0, r4
   3a958:	str	r4, [sp, #36]	; 0x24
   3a95c:	str	r0, [sp, #32]
   3a960:	add	r0, sp, #104	; 0x68
   3a964:	orr	r6, r0, #4
   3a968:	sub	r0, fp, #72	; 0x48
   3a96c:	orr	r0, r0, #4
   3a970:	str	r0, [sp, #20]
   3a974:	mla	r0, r8, r5, r4
   3a978:	lsl	r5, r5, #3
   3a97c:	str	r0, [sp, #24]
   3a980:	lsl	r0, r8, #3
   3a984:	str	r0, [sp, #28]
   3a988:	ldr	r0, [sp, #36]	; 0x24
   3a98c:	cmp	r8, #1
   3a990:	blt	3a9c4 <GetDataSlab+0x184a8>
   3a994:	ldr	r0, [sp, #36]	; 0x24
   3a998:	mov	r2, r8
   3a99c:	ldr	r8, [sp, #44]	; 0x2c
   3a9a0:	add	r7, r3, r0, lsl #3
   3a9a4:	ldrd	r0, [r7]
   3a9a8:	add	r7, r7, r5
   3a9ac:	subs	r2, r2, #1
   3a9b0:	strd	r0, [r8]
   3a9b4:	add	r8, r8, #8
   3a9b8:	bne	3a9a4 <GetDataSlab+0x18488>
   3a9bc:	ldr	r0, [sp, #24]
   3a9c0:	ldr	r8, [sp, #40]	; 0x28
   3a9c4:	ldr	r2, [sp, #32]
   3a9c8:	add	r1, r3, r2, lsl #3
   3a9cc:	add	r3, r1, r0, lsl #3
   3a9d0:	add	r0, r0, sl
   3a9d4:	add	sl, r0, r2
   3a9d8:	ldr	r0, [fp, #24]
   3a9dc:	cmp	r0, #2
   3a9e0:	blt	3aa90 <GetDataSlab+0x18574>
   3a9e4:	mov	r2, #0
   3a9e8:	ldr	r1, [r6, r2, lsl #2]
   3a9ec:	mov	r0, r2
   3a9f0:	add	r1, r1, #1
   3a9f4:	str	r1, [r6, r2, lsl #2]
   3a9f8:	ldr	r2, [ip, r2, lsl #2]
   3a9fc:	sdiv	r7, r1, r2
   3aa00:	mls	r1, r7, r2, r1
   3aa04:	cmp	r1, #0
   3aa08:	bne	3aa80 <GetDataSlab+0x18564>
   3aa0c:	mov	r1, #0
   3aa10:	add	r4, sp, #64	; 0x40
   3aa14:	str	r1, [r6, r0, lsl #2]
   3aa18:	add	r1, r4, r0, lsl #2
   3aa1c:	ldr	r2, [r1, #4]
   3aa20:	sdiv	r1, sl, r2
   3aa24:	mls	r7, r1, r2, sl
   3aa28:	cmp	r7, #0
   3aa2c:	beq	3aa48 <GetDataSlab+0x1852c>
   3aa30:	ldr	r1, [r4, r0, lsl #2]
   3aa34:	ldr	r4, [lr, r0, lsl #2]
   3aa38:	sub	r2, r2, r7
   3aa3c:	mla	r1, r4, r1, r2
   3aa40:	add	sl, r1, sl
   3aa44:	b	3aa64 <GetDataSlab+0x18548>
   3aa48:	ldr	r2, [lr, r0, lsl #2]
   3aa4c:	cmp	r2, #0
   3aa50:	beq	3aa68 <GetDataSlab+0x1854c>
   3aa54:	add	r1, sp, #64	; 0x40
   3aa58:	ldr	r1, [r1, r0, lsl #2]
   3aa5c:	mla	sl, r1, r2, sl
   3aa60:	mul	r1, r1, r2
   3aa64:	add	r3, r3, r1, lsl #3
   3aa68:	ldr	r1, [fp, #24]
   3aa6c:	add	r2, r0, #1
   3aa70:	add	r0, r0, #2
   3aa74:	cmp	r0, r1
   3aa78:	blt	3a9e8 <GetDataSlab+0x184cc>
   3aa7c:	b	3aa90 <GetDataSlab+0x18574>
   3aa80:	ldr	r1, [sp, #20]
   3aa84:	ldr	r0, [r1, r0, lsl #2]
   3aa88:	add	r3, r3, r0, lsl #3
   3aa8c:	add	sl, r0, sl
   3aa90:	ldr	r0, [sp, #28]
   3aa94:	ldr	r1, [sp, #44]	; 0x2c
   3aa98:	add	r9, r9, r8
   3aa9c:	add	r1, r1, r0
   3aaa0:	ldr	r0, [sp, #56]	; 0x38
   3aaa4:	str	r1, [sp, #44]	; 0x2c
   3aaa8:	cmp	r9, r0
   3aaac:	blt	3a988 <GetDataSlab+0x1846c>
   3aab0:	ldr	r3, [sp, #48]	; 0x30
   3aab4:	mov	r0, #0
   3aab8:	cmp	r3, #13
   3aabc:	bne	242ac <GetDataSlab+0x1d90>
   3aac0:	ldr	r9, [fp, #16]
   3aac4:	ldr	lr, [fp, #8]
   3aac8:	ldr	ip, [fp, #12]
   3aacc:	mov	r2, #0
   3aad0:	add	r3, sp, #64	; 0x40
   3aad4:	sub	r4, fp, #72	; 0x48
   3aad8:	ldr	r0, [r9]
   3aadc:	str	r0, [sp, #28]
   3aae0:	sub	r0, r0, #1
   3aae4:	str	r0, [fp, #-72]	; 0xffffffb8
   3aae8:	ldr	r0, [lr]
   3aaec:	str	r0, [sp, #40]	; 0x28
   3aaf0:	str	r0, [sp, #64]	; 0x40
   3aaf4:	ldr	r0, [fp, #20]
   3aaf8:	ldr	r1, [r0]
   3aafc:	ldr	r0, [fp, #24]
   3ab00:	cmp	r0, #2
   3ab04:	mov	r5, r1
   3ab08:	str	r1, [sp, #48]	; 0x30
   3ab0c:	blt	3ab9c <GetDataSlab+0x18680>
   3ab10:	ldr	r6, [sp, #40]	; 0x28
   3ab14:	ldr	r5, [sp, #48]	; 0x30
   3ab18:	mov	r1, #1
   3ab1c:	mov	r2, #0
   3ab20:	mov	r7, lr
   3ab24:	mov	sl, r6
   3ab28:	ldr	r0, [r9, r1, lsl #2]
   3ab2c:	str	r6, [r3, r1, lsl #2]
   3ab30:	mov	r3, #0
   3ab34:	sub	r0, r0, #1
   3ab38:	str	r0, [r4, r1, lsl #2]
   3ab3c:	ldr	r8, [lr, r1, lsl #2]
   3ab40:	mov	r4, r8
   3ab44:	mul	r6, r4, r6
   3ab48:	ldr	r4, [r7, -r3, lsl #2]
   3ab4c:	add	r3, r3, #1
   3ab50:	cmp	r1, r3
   3ab54:	mul	r0, r0, r4
   3ab58:	bne	3ab44 <GetDataSlab+0x18628>
   3ab5c:	add	r3, sp, #64	; 0x40
   3ab60:	sub	r4, fp, #72	; 0x48
   3ab64:	add	r7, r7, #4
   3ab68:	str	r6, [r3, r1, lsl #2]
   3ab6c:	str	r0, [r4, r1, lsl #2]
   3ab70:	ldr	r0, [ip, r1, lsl #2]
   3ab74:	mla	r2, r0, sl, r2
   3ab78:	ldr	r0, [fp, #20]
   3ab7c:	mov	sl, r6
   3ab80:	mov	r6, r8
   3ab84:	ldr	r0, [r0, r1, lsl #2]
   3ab88:	add	r1, r1, #1
   3ab8c:	mul	r5, r0, r5
   3ab90:	ldr	r0, [fp, #24]
   3ab94:	cmp	r1, r0
   3ab98:	bne	3ab28 <GetDataSlab+0x1860c>
   3ab9c:	str	r5, [sp, #44]	; 0x2c
   3aba0:	ldr	r0, [sp, #52]	; 0x34
   3aba4:	ldr	r5, [sp, #28]
   3aba8:	add	sl, r0, r2, lsl #3
   3abac:	cmp	r5, #1
   3abb0:	bne	3bb6c <GetDataSlab+0x19650>
   3abb4:	ldr	r0, [sp, #44]	; 0x2c
   3abb8:	cmp	r0, #1
   3abbc:	ldr	r0, [fp, #20]
   3abc0:	blt	242a8 <GetDataSlab+0x1d8c>
   3abc4:	ldr	r1, [sp, #48]	; 0x30
   3abc8:	add	r9, r0, #4
   3abcc:	add	r0, sp, #104	; 0x68
   3abd0:	mov	r8, #0
   3abd4:	mov	lr, #0
   3abd8:	orr	r6, r0, #4
   3abdc:	sub	r0, fp, #72	; 0x48
   3abe0:	orr	r0, r0, #4
   3abe4:	str	r0, [sp, #32]
   3abe8:	lsl	r0, r1, #3
   3abec:	str	r0, [sp, #52]	; 0x34
   3abf0:	ldr	r0, [ip], #4
   3abf4:	str	ip, [sp, #56]	; 0x38
   3abf8:	str	r0, [sp, #36]	; 0x24
   3abfc:	ldr	r7, [sp, #56]	; 0x38
   3ac00:	cmp	r1, #1
   3ac04:	blt	3ac30 <GetDataSlab+0x18714>
   3ac08:	ldr	r0, [sp, #36]	; 0x24
   3ac0c:	ldr	ip, [sp, #48]	; 0x30
   3ac10:	ldr	r3, [sp, #60]	; 0x3c
   3ac14:	add	r0, sl, r0, lsl #3
   3ac18:	ldrd	r4, [r0]
   3ac1c:	subs	ip, ip, #1
   3ac20:	add	r0, r0, #8
   3ac24:	strd	r4, [r3]
   3ac28:	add	r3, r3, #8
   3ac2c:	bne	3ac18 <GetDataSlab+0x186fc>
   3ac30:	ldr	r0, [sp, #40]	; 0x28
   3ac34:	add	ip, sp, #64	; 0x40
   3ac38:	add	sl, sl, r0, lsl #3
   3ac3c:	add	r2, r2, r0
   3ac40:	ldr	r0, [fp, #24]
   3ac44:	cmp	r0, #2
   3ac48:	blt	3acec <GetDataSlab+0x187d0>
   3ac4c:	mov	r3, #0
   3ac50:	mov	r0, r3
   3ac54:	ldr	r3, [r6, r3, lsl #2]
   3ac58:	add	r3, r3, #1
   3ac5c:	str	r3, [r6, r0, lsl #2]
   3ac60:	ldr	r5, [r9, r0, lsl #2]
   3ac64:	sdiv	r4, r3, r5
   3ac68:	mls	r3, r4, r5, r3
   3ac6c:	cmp	r3, #0
   3ac70:	bne	3acdc <GetDataSlab+0x187c0>
   3ac74:	add	r3, ip, r0, lsl #2
   3ac78:	str	r8, [r6, r0, lsl #2]
   3ac7c:	ldr	r3, [r3, #4]
   3ac80:	sdiv	r5, r2, r3
   3ac84:	mls	r4, r5, r3, r2
   3ac88:	cmp	r4, #0
   3ac8c:	beq	3aca8 <GetDataSlab+0x1878c>
   3ac90:	ldr	r5, [ip, r0, lsl #2]
   3ac94:	ldr	r1, [r7, r0, lsl #2]
   3ac98:	sub	r3, r3, r4
   3ac9c:	mla	r1, r1, r5, r3
   3aca0:	add	r2, r1, r2
   3aca4:	b	3acc0 <GetDataSlab+0x187a4>
   3aca8:	ldr	r3, [r7, r0, lsl #2]
   3acac:	cmp	r3, #0
   3acb0:	beq	3acc4 <GetDataSlab+0x187a8>
   3acb4:	ldr	r1, [ip, r0, lsl #2]
   3acb8:	mla	r2, r1, r3, r2
   3acbc:	mul	r1, r1, r3
   3acc0:	add	sl, sl, r1, lsl #3
   3acc4:	ldr	r1, [fp, #24]
   3acc8:	add	r3, r0, #1
   3accc:	add	r0, r0, #2
   3acd0:	cmp	r0, r1
   3acd4:	blt	3ac50 <GetDataSlab+0x18734>
   3acd8:	b	3acec <GetDataSlab+0x187d0>
   3acdc:	ldr	r1, [sp, #32]
   3ace0:	ldr	r0, [r1, r0, lsl #2]
   3ace4:	add	sl, sl, r0, lsl #3
   3ace8:	add	r2, r0, r2
   3acec:	ldr	r0, [sp, #60]	; 0x3c
   3acf0:	ldr	r1, [sp, #52]	; 0x34
   3acf4:	ldr	r3, [sp, #44]	; 0x2c
   3acf8:	add	r0, r0, r1
   3acfc:	ldr	r1, [sp, #48]	; 0x30
   3ad00:	str	r0, [sp, #60]	; 0x3c
   3ad04:	mov	r0, #0
   3ad08:	add	lr, lr, r1
   3ad0c:	cmp	lr, r3
   3ad10:	blt	3ac00 <GetDataSlab+0x186e4>
   3ad14:	b	242ac <GetDataSlab+0x1d90>
   3ad18:	ldr	r0, [sp, #48]	; 0x30
   3ad1c:	cmp	r0, #1
   3ad20:	blt	242a8 <GetDataSlab+0x1d8c>
   3ad24:	ldr	r1, [sp, #56]	; 0x38
   3ad28:	ldr	r8, [sp, #44]	; 0x2c
   3ad2c:	ldr	r0, [sp, #40]	; 0x28
   3ad30:	lsl	sl, ip, #3
   3ad34:	ldr	r2, [r1], #4
   3ad38:	mls	r0, r8, ip, r0
   3ad3c:	sub	r0, r0, r2
   3ad40:	str	r1, [sp, #56]	; 0x38
   3ad44:	str	r2, [sp, #28]
   3ad48:	str	r0, [sp, #36]	; 0x24
   3ad4c:	add	r0, lr, #4
   3ad50:	mov	lr, r2
   3ad54:	str	r0, [sp, #52]	; 0x34
   3ad58:	add	r0, sp, #104	; 0x68
   3ad5c:	orr	r4, r0, #4
   3ad60:	sub	r0, fp, #72	; 0x48
   3ad64:	orr	r0, r0, #4
   3ad68:	str	r0, [sp, #20]
   3ad6c:	mla	r0, r8, ip, r2
   3ad70:	str	r0, [sp, #24]
   3ad74:	lsl	r0, r8, #3
   3ad78:	str	r0, [sp, #32]
   3ad7c:	mov	r0, #0
   3ad80:	str	r0, [sp, #40]	; 0x28
   3ad84:	cmp	r8, #1
   3ad88:	mov	r0, lr
   3ad8c:	blt	3adc0 <GetDataSlab+0x188a4>
   3ad90:	ldr	r7, [sp, #60]	; 0x3c
   3ad94:	add	r6, r5, lr, lsl #3
   3ad98:	ldrd	r0, [r6]
   3ad9c:	bl	49564 <__aeabi_ul2d>
   3ada0:	strd	r0, [r7]
   3ada4:	add	r6, r6, sl
   3ada8:	subs	r8, r8, #1
   3adac:	add	r7, r7, #8
   3adb0:	bne	3ad98 <GetDataSlab+0x1887c>
   3adb4:	ldr	r0, [sp, #24]
   3adb8:	ldr	r8, [sp, #44]	; 0x2c
   3adbc:	ldr	lr, [sp, #28]
   3adc0:	ldr	r2, [sp, #36]	; 0x24
   3adc4:	ldr	ip, [sp, #60]	; 0x3c
   3adc8:	add	r1, r5, r2, lsl #3
   3adcc:	add	r5, r1, r0, lsl #3
   3add0:	add	r0, r0, r9
   3add4:	add	r9, r0, r2
   3add8:	ldr	r0, [fp, #24]
   3addc:	cmp	r0, #2
   3ade0:	blt	3ae98 <GetDataSlab+0x1897c>
   3ade4:	ldr	r6, [sp, #56]	; 0x38
   3ade8:	mov	r1, #0
   3adec:	mov	r0, r1
   3adf0:	ldr	r1, [r4, r1, lsl #2]
   3adf4:	ldr	r2, [sp, #52]	; 0x34
   3adf8:	add	r1, r1, #1
   3adfc:	str	r1, [r4, r0, lsl #2]
   3ae00:	ldr	r2, [r2, r0, lsl #2]
   3ae04:	sdiv	r3, r1, r2
   3ae08:	mls	r1, r3, r2, r1
   3ae0c:	cmp	r1, #0
   3ae10:	bne	3ae88 <GetDataSlab+0x1896c>
   3ae14:	mov	r1, #0
   3ae18:	add	r3, sp, #64	; 0x40
   3ae1c:	str	r1, [r4, r0, lsl #2]
   3ae20:	add	r1, r3, r0, lsl #2
   3ae24:	ldr	r1, [r1, #4]
   3ae28:	sdiv	r2, r9, r1
   3ae2c:	mls	r2, r2, r1, r9
   3ae30:	cmp	r2, #0
   3ae34:	beq	3ae50 <GetDataSlab+0x18934>
   3ae38:	ldr	r3, [r3, r0, lsl #2]
   3ae3c:	ldr	r7, [r6, r0, lsl #2]
   3ae40:	sub	r1, r1, r2
   3ae44:	mla	r1, r7, r3, r1
   3ae48:	add	r9, r1, r9
   3ae4c:	b	3ae6c <GetDataSlab+0x18950>
   3ae50:	ldr	r1, [r6, r0, lsl #2]
   3ae54:	cmp	r1, #0
   3ae58:	beq	3ae70 <GetDataSlab+0x18954>
   3ae5c:	add	r2, sp, #64	; 0x40
   3ae60:	ldr	r2, [r2, r0, lsl #2]
   3ae64:	mla	r9, r2, r1, r9
   3ae68:	mul	r1, r2, r1
   3ae6c:	add	r5, r5, r1, lsl #3
   3ae70:	ldr	r2, [fp, #24]
   3ae74:	add	r1, r0, #1
   3ae78:	add	r0, r0, #2
   3ae7c:	cmp	r0, r2
   3ae80:	blt	3adec <GetDataSlab+0x188d0>
   3ae84:	b	3ae98 <GetDataSlab+0x1897c>
   3ae88:	ldr	r1, [sp, #20]
   3ae8c:	ldr	r0, [r1, r0, lsl #2]
   3ae90:	add	r5, r5, r0, lsl #3
   3ae94:	add	r9, r0, r9
   3ae98:	ldr	r2, [sp, #40]	; 0x28
   3ae9c:	ldr	r0, [sp, #32]
   3aea0:	ldr	r1, [sp, #48]	; 0x30
   3aea4:	add	r2, r2, r8
   3aea8:	add	ip, ip, r0
   3aeac:	mov	r0, #0
   3aeb0:	cmp	r2, r1
   3aeb4:	str	ip, [sp, #60]	; 0x3c
   3aeb8:	str	r2, [sp, #40]	; 0x28
   3aebc:	blt	3ad84 <GetDataSlab+0x18868>
   3aec0:	b	242ac <GetDataSlab+0x1d90>
   3aec4:	ldr	r0, [sp, #48]	; 0x30
   3aec8:	cmp	r0, #1
   3aecc:	blt	242a8 <GetDataSlab+0x1d8c>
   3aed0:	ldr	r1, [sp, #56]	; 0x38
   3aed4:	ldr	sl, [sp, #44]	; 0x2c
   3aed8:	ldr	r0, [sp, #40]	; 0x28
   3aedc:	add	lr, lr, #4
   3aee0:	lsl	r6, ip, #3
   3aee4:	str	lr, [sp, #28]
   3aee8:	ldr	r8, [r1], #4
   3aeec:	mls	r0, sl, ip, r0
   3aef0:	sub	r0, r0, r8
   3aef4:	str	r1, [sp, #56]	; 0x38
   3aef8:	str	r8, [sp, #32]
   3aefc:	str	r0, [sp, #40]	; 0x28
   3af00:	add	r0, sp, #104	; 0x68
   3af04:	orr	r4, r0, #4
   3af08:	sub	r0, fp, #72	; 0x48
   3af0c:	orr	r0, r0, #4
   3af10:	str	r0, [sp, #20]
   3af14:	mla	r0, sl, ip, r8
   3af18:	str	r0, [sp, #24]
   3af1c:	lsl	r0, sl, #2
   3af20:	str	r0, [sp, #36]	; 0x24
   3af24:	mov	r0, #0
   3af28:	str	r0, [sp, #52]	; 0x34
   3af2c:	cmp	sl, #1
   3af30:	mov	r0, r8
   3af34:	blt	3af6c <GetDataSlab+0x18a50>
   3af38:	add	r0, r5, r8, lsl #3
   3af3c:	ldr	r8, [sp, #60]	; 0x3c
   3af40:	add	r7, r0, r6
   3af44:	ldrd	r0, [r0]
   3af48:	bl	4979c <__aeabi_ul2f>
   3af4c:	str	r0, [r8], #4
   3af50:	subs	sl, sl, #1
   3af54:	mov	r0, r7
   3af58:	bne	3af40 <GetDataSlab+0x18a24>
   3af5c:	ldr	r0, [sp, #24]
   3af60:	ldr	sl, [sp, #44]	; 0x2c
   3af64:	ldr	r8, [sp, #32]
   3af68:	ldr	lr, [sp, #28]
   3af6c:	ldr	r2, [sp, #40]	; 0x28
   3af70:	ldr	ip, [sp, #60]	; 0x3c
   3af74:	add	r1, r5, r2, lsl #3
   3af78:	add	r5, r1, r0, lsl #3
   3af7c:	add	r0, r0, r9
   3af80:	add	r9, r0, r2
   3af84:	ldr	r0, [fp, #24]
   3af88:	cmp	r0, #2
   3af8c:	blt	3b044 <GetDataSlab+0x18b28>
   3af90:	mov	r1, #0
   3af94:	mov	r0, r1
   3af98:	ldr	r1, [r4, r1, lsl #2]
   3af9c:	add	r1, r1, #1
   3afa0:	str	r1, [r4, r0, lsl #2]
   3afa4:	ldr	r2, [lr, r0, lsl #2]
   3afa8:	sdiv	r3, r1, r2
   3afac:	mls	r1, r3, r2, r1
   3afb0:	cmp	r1, #0
   3afb4:	bne	3b034 <GetDataSlab+0x18b18>
   3afb8:	mov	r1, #0
   3afbc:	add	r3, sp, #64	; 0x40
   3afc0:	str	r1, [r4, r0, lsl #2]
   3afc4:	add	r1, r3, r0, lsl #2
   3afc8:	ldr	r1, [r1, #4]
   3afcc:	sdiv	r2, r9, r1
   3afd0:	mls	r2, r2, r1, r9
   3afd4:	cmp	r2, #0
   3afd8:	beq	3aff8 <GetDataSlab+0x18adc>
   3afdc:	ldr	r7, [sp, #56]	; 0x38
   3afe0:	ldr	r3, [r3, r0, lsl #2]
   3afe4:	sub	r1, r1, r2
   3afe8:	ldr	r7, [r7, r0, lsl #2]
   3afec:	mla	r1, r7, r3, r1
   3aff0:	add	r9, r1, r9
   3aff4:	b	3b018 <GetDataSlab+0x18afc>
   3aff8:	ldr	r1, [sp, #56]	; 0x38
   3affc:	ldr	r1, [r1, r0, lsl #2]
   3b000:	cmp	r1, #0
   3b004:	beq	3b01c <GetDataSlab+0x18b00>
   3b008:	add	r2, sp, #64	; 0x40
   3b00c:	ldr	r2, [r2, r0, lsl #2]
   3b010:	mla	r9, r2, r1, r9
   3b014:	mul	r1, r2, r1
   3b018:	add	r5, r5, r1, lsl #3
   3b01c:	ldr	r2, [fp, #24]
   3b020:	add	r1, r0, #1
   3b024:	add	r0, r0, #2
   3b028:	cmp	r0, r2
   3b02c:	blt	3af94 <GetDataSlab+0x18a78>
   3b030:	b	3b044 <GetDataSlab+0x18b28>
   3b034:	ldr	r1, [sp, #20]
   3b038:	ldr	r0, [r1, r0, lsl #2]
   3b03c:	add	r5, r5, r0, lsl #3
   3b040:	add	r9, r0, r9
   3b044:	ldr	r2, [sp, #52]	; 0x34
   3b048:	ldr	r0, [sp, #36]	; 0x24
   3b04c:	ldr	r1, [sp, #48]	; 0x30
   3b050:	add	r2, r2, sl
   3b054:	add	ip, ip, r0
   3b058:	mov	r0, #0
   3b05c:	cmp	r2, r1
   3b060:	str	ip, [sp, #60]	; 0x3c
   3b064:	str	r2, [sp, #52]	; 0x34
   3b068:	blt	3af2c <GetDataSlab+0x18a10>
   3b06c:	b	242ac <GetDataSlab+0x1d90>
   3b070:	ldr	r0, [sp, #56]	; 0x38
   3b074:	ldr	r9, [fp, #12]
   3b078:	cmp	r0, #1
   3b07c:	ldr	r0, [fp, #20]
   3b080:	blt	242a8 <GetDataSlab+0x1d8c>
   3b084:	add	lr, r0, #4
   3b088:	add	r0, sp, #104	; 0x68
   3b08c:	orr	ip, r0, #4
   3b090:	sub	r0, fp, #72	; 0x48
   3b094:	orr	r0, r0, #4
   3b098:	str	r0, [sp, #40]	; 0x28
   3b09c:	ldr	r0, [r9], #4
   3b0a0:	str	r0, [sp, #44]	; 0x2c
   3b0a4:	mov	r0, #0
   3b0a8:	str	r0, [sp, #52]	; 0x34
   3b0ac:	ldr	r1, [sp, #44]	; 0x2c
   3b0b0:	cmp	sl, #1
   3b0b4:	add	r0, r1, r2
   3b0b8:	add	r4, r4, r1, lsl #3
   3b0bc:	blt	3b110 <GetDataSlab+0x18bf4>
   3b0c0:	ldr	r2, [sp, #60]	; 0x3c
   3b0c4:	ldr	r1, [sp, #52]	; 0x34
   3b0c8:	ldr	r7, [fp, #20]
   3b0cc:	mov	r6, #0
   3b0d0:	add	r5, r2, r1
   3b0d4:	ldr	r1, [fp, #16]
   3b0d8:	ldrb	r2, [r4]
   3b0dc:	strb	r2, [r5, r6]
   3b0e0:	add	r6, r6, #1
   3b0e4:	ldr	r3, [r1]
   3b0e8:	ldr	sl, [r7]
   3b0ec:	add	r0, r3, r0
   3b0f0:	add	r4, r4, r3, lsl #3
   3b0f4:	cmp	r6, sl
   3b0f8:	blt	3b0d8 <GetDataSlab+0x18bbc>
   3b0fc:	ldr	r5, [fp, #12]
   3b100:	ldr	r2, [r5]
   3b104:	ldr	r5, [fp, #8]
   3b108:	ldr	r1, [r5]
   3b10c:	b	3b118 <GetDataSlab+0x18bfc>
   3b110:	mov	r2, r1
   3b114:	ldr	r1, [sp, #48]	; 0x30
   3b118:	mls	r6, r3, sl, r1
   3b11c:	str	r2, [sp, #44]	; 0x2c
   3b120:	sub	r6, r6, r2
   3b124:	add	r2, r6, r0
   3b128:	ldr	r0, [fp, #24]
   3b12c:	add	r4, r4, r6, lsl #3
   3b130:	cmp	r0, #2
   3b134:	blt	3b1e4 <GetDataSlab+0x18cc8>
   3b138:	mov	r5, #0
   3b13c:	ldr	r6, [ip, r5, lsl #2]
   3b140:	mov	r0, r5
   3b144:	add	r6, r6, #1
   3b148:	str	r6, [ip, r5, lsl #2]
   3b14c:	ldr	r5, [lr, r5, lsl #2]
   3b150:	sdiv	r7, r6, r5
   3b154:	mls	r5, r7, r5, r6
   3b158:	cmp	r5, #0
   3b15c:	bne	3b1d4 <GetDataSlab+0x18cb8>
   3b160:	mov	r5, #0
   3b164:	add	r7, sp, #64	; 0x40
   3b168:	str	r5, [ip, r0, lsl #2]
   3b16c:	add	r5, r7, r0, lsl #2
   3b170:	ldr	r5, [r5, #4]
   3b174:	sdiv	r6, r2, r5
   3b178:	mls	r6, r6, r5, r2
   3b17c:	cmp	r6, #0
   3b180:	beq	3b19c <GetDataSlab+0x18c80>
   3b184:	ldr	r7, [r7, r0, lsl #2]
   3b188:	ldr	r8, [r9, r0, lsl #2]
   3b18c:	sub	r5, r5, r6
   3b190:	mla	r5, r8, r7, r5
   3b194:	add	r2, r5, r2
   3b198:	b	3b1b8 <GetDataSlab+0x18c9c>
   3b19c:	ldr	r5, [r9, r0, lsl #2]
   3b1a0:	cmp	r5, #0
   3b1a4:	beq	3b1bc <GetDataSlab+0x18ca0>
   3b1a8:	add	r6, sp, #64	; 0x40
   3b1ac:	ldr	r6, [r6, r0, lsl #2]
   3b1b0:	mla	r2, r6, r5, r2
   3b1b4:	mul	r5, r6, r5
   3b1b8:	add	r4, r4, r5, lsl #3
   3b1bc:	ldr	r6, [fp, #24]
   3b1c0:	add	r5, r0, #1
   3b1c4:	add	r0, r0, #2
   3b1c8:	cmp	r0, r6
   3b1cc:	blt	3b13c <GetDataSlab+0x18c20>
   3b1d0:	b	3b1e4 <GetDataSlab+0x18cc8>
   3b1d4:	ldr	r5, [sp, #40]	; 0x28
   3b1d8:	ldr	r0, [r5, r0, lsl #2]
   3b1dc:	add	r4, r4, r0, lsl #3
   3b1e0:	add	r2, r0, r2
   3b1e4:	ldr	r5, [sp, #52]	; 0x34
   3b1e8:	str	r1, [sp, #48]	; 0x30
   3b1ec:	ldr	r1, [sp, #56]	; 0x38
   3b1f0:	mov	r0, #0
   3b1f4:	add	r5, sl, r5
   3b1f8:	cmp	r5, r1
   3b1fc:	str	r5, [sp, #52]	; 0x34
   3b200:	blt	3b0ac <GetDataSlab+0x18b90>
   3b204:	b	242ac <GetDataSlab+0x1d90>
   3b208:	ldr	r0, [sp, #56]	; 0x38
   3b20c:	ldr	r9, [fp, #12]
   3b210:	cmp	r0, #1
   3b214:	ldr	r0, [fp, #20]
   3b218:	blt	242a8 <GetDataSlab+0x1d8c>
   3b21c:	add	lr, r0, #4
   3b220:	add	r0, sp, #104	; 0x68
   3b224:	orr	ip, r0, #4
   3b228:	sub	r0, fp, #72	; 0x48
   3b22c:	orr	r0, r0, #4
   3b230:	str	r0, [sp, #40]	; 0x28
   3b234:	ldr	r0, [r9], #4
   3b238:	str	r0, [sp, #44]	; 0x2c
   3b23c:	mov	r0, #0
   3b240:	str	r0, [sp, #52]	; 0x34
   3b244:	ldr	r1, [sp, #44]	; 0x2c
   3b248:	cmp	sl, #1
   3b24c:	add	r0, r1, r2
   3b250:	add	r4, r4, r1, lsl #3
   3b254:	blt	3b2a8 <GetDataSlab+0x18d8c>
   3b258:	ldr	r2, [sp, #60]	; 0x3c
   3b25c:	ldr	r1, [sp, #52]	; 0x34
   3b260:	ldr	r7, [fp, #20]
   3b264:	mov	r6, #0
   3b268:	add	r5, r2, r1
   3b26c:	ldr	r1, [fp, #16]
   3b270:	ldrb	r2, [r4]
   3b274:	strb	r2, [r5, r6]
   3b278:	add	r6, r6, #1
   3b27c:	ldr	r3, [r1]
   3b280:	ldr	sl, [r7]
   3b284:	add	r0, r3, r0
   3b288:	add	r4, r4, r3, lsl #3
   3b28c:	cmp	r6, sl
   3b290:	blt	3b270 <GetDataSlab+0x18d54>
   3b294:	ldr	r5, [fp, #12]
   3b298:	ldr	r2, [r5]
   3b29c:	ldr	r5, [fp, #8]
   3b2a0:	ldr	r1, [r5]
   3b2a4:	b	3b2b0 <GetDataSlab+0x18d94>
   3b2a8:	mov	r2, r1
   3b2ac:	ldr	r1, [sp, #48]	; 0x30
   3b2b0:	mls	r6, r3, sl, r1
   3b2b4:	str	r2, [sp, #44]	; 0x2c
   3b2b8:	sub	r6, r6, r2
   3b2bc:	add	r2, r6, r0
   3b2c0:	ldr	r0, [fp, #24]
   3b2c4:	add	r4, r4, r6, lsl #3
   3b2c8:	cmp	r0, #2
   3b2cc:	blt	3b37c <GetDataSlab+0x18e60>
   3b2d0:	mov	r5, #0
   3b2d4:	ldr	r6, [ip, r5, lsl #2]
   3b2d8:	mov	r0, r5
   3b2dc:	add	r6, r6, #1
   3b2e0:	str	r6, [ip, r5, lsl #2]
   3b2e4:	ldr	r5, [lr, r5, lsl #2]
   3b2e8:	sdiv	r7, r6, r5
   3b2ec:	mls	r5, r7, r5, r6
   3b2f0:	cmp	r5, #0
   3b2f4:	bne	3b36c <GetDataSlab+0x18e50>
   3b2f8:	mov	r5, #0
   3b2fc:	add	r7, sp, #64	; 0x40
   3b300:	str	r5, [ip, r0, lsl #2]
   3b304:	add	r5, r7, r0, lsl #2
   3b308:	ldr	r5, [r5, #4]
   3b30c:	sdiv	r6, r2, r5
   3b310:	mls	r6, r6, r5, r2
   3b314:	cmp	r6, #0
   3b318:	beq	3b334 <GetDataSlab+0x18e18>
   3b31c:	ldr	r7, [r7, r0, lsl #2]
   3b320:	ldr	r8, [r9, r0, lsl #2]
   3b324:	sub	r5, r5, r6
   3b328:	mla	r5, r8, r7, r5
   3b32c:	add	r2, r5, r2
   3b330:	b	3b350 <GetDataSlab+0x18e34>
   3b334:	ldr	r5, [r9, r0, lsl #2]
   3b338:	cmp	r5, #0
   3b33c:	beq	3b354 <GetDataSlab+0x18e38>
   3b340:	add	r6, sp, #64	; 0x40
   3b344:	ldr	r6, [r6, r0, lsl #2]
   3b348:	mla	r2, r6, r5, r2
   3b34c:	mul	r5, r6, r5
   3b350:	add	r4, r4, r5, lsl #3
   3b354:	ldr	r6, [fp, #24]
   3b358:	add	r5, r0, #1
   3b35c:	add	r0, r0, #2
   3b360:	cmp	r0, r6
   3b364:	blt	3b2d4 <GetDataSlab+0x18db8>
   3b368:	b	3b37c <GetDataSlab+0x18e60>
   3b36c:	ldr	r5, [sp, #40]	; 0x28
   3b370:	ldr	r0, [r5, r0, lsl #2]
   3b374:	add	r4, r4, r0, lsl #3
   3b378:	add	r2, r0, r2
   3b37c:	ldr	r5, [sp, #52]	; 0x34
   3b380:	str	r1, [sp, #48]	; 0x30
   3b384:	ldr	r1, [sp, #56]	; 0x38
   3b388:	mov	r0, #0
   3b38c:	add	r5, sl, r5
   3b390:	cmp	r5, r1
   3b394:	str	r5, [sp, #52]	; 0x34
   3b398:	blt	3b244 <GetDataSlab+0x18d28>
   3b39c:	b	242ac <GetDataSlab+0x1d90>
   3b3a0:	ldr	r0, [sp, #48]	; 0x30
   3b3a4:	ldr	r1, [fp, #20]
   3b3a8:	cmp	r0, #1
   3b3ac:	blt	242a8 <GetDataSlab+0x1d8c>
   3b3b0:	ldr	r3, [sp, #44]	; 0x2c
   3b3b4:	ldr	r0, [sp, #40]	; 0x28
   3b3b8:	ldr	r6, [lr], #4
   3b3bc:	add	sl, r1, #4
   3b3c0:	mov	r8, #0
   3b3c4:	mls	r0, r3, r5, r0
   3b3c8:	mov	r1, r3
   3b3cc:	str	r6, [sp, #56]	; 0x38
   3b3d0:	sub	r0, r0, r6
   3b3d4:	str	r0, [sp, #52]	; 0x34
   3b3d8:	add	r0, sp, #104	; 0x68
   3b3dc:	orr	r7, r0, #4
   3b3e0:	sub	r0, fp, #72	; 0x48
   3b3e4:	orr	r0, r0, #4
   3b3e8:	str	r0, [sp, #32]
   3b3ec:	mla	r0, r3, r5, r6
   3b3f0:	lsl	r6, r5, #3
   3b3f4:	str	r0, [sp, #36]	; 0x24
   3b3f8:	lsl	r0, r3, #1
   3b3fc:	str	r0, [sp, #40]	; 0x28
   3b400:	ldr	r0, [sp, #56]	; 0x38
   3b404:	cmp	r1, #1
   3b408:	blt	3b430 <GetDataSlab+0x18f14>
   3b40c:	ldr	r0, [sp, #56]	; 0x38
   3b410:	ldr	r3, [sp, #44]	; 0x2c
   3b414:	ldr	r1, [sp, #60]	; 0x3c
   3b418:	add	r0, r9, r0, lsl #3
   3b41c:	ldrh	r4, [r0], r6
   3b420:	subs	r3, r3, #1
   3b424:	strh	r4, [r1], #2
   3b428:	bne	3b41c <GetDataSlab+0x18f00>
   3b42c:	ldr	r0, [sp, #36]	; 0x24
   3b430:	ldr	r3, [sp, #52]	; 0x34
   3b434:	add	r1, r9, r3, lsl #3
   3b438:	add	r9, r1, r0, lsl #3
   3b43c:	add	r0, r0, r2
   3b440:	add	r2, r0, r3
   3b444:	ldr	r0, [fp, #24]
   3b448:	cmp	r0, #2
   3b44c:	blt	3b4fc <GetDataSlab+0x18fe0>
   3b450:	mov	ip, #0
   3b454:	ldr	r1, [r7, ip, lsl #2]
   3b458:	mov	r0, ip
   3b45c:	add	r1, r1, #1
   3b460:	str	r1, [r7, ip, lsl #2]
   3b464:	ldr	r3, [sl, ip, lsl #2]
   3b468:	sdiv	r4, r1, r3
   3b46c:	mls	r1, r4, r3, r1
   3b470:	cmp	r1, #0
   3b474:	bne	3b4ec <GetDataSlab+0x18fd0>
   3b478:	mov	r1, #0
   3b47c:	add	r5, sp, #64	; 0x40
   3b480:	str	r1, [r7, r0, lsl #2]
   3b484:	add	r1, r5, r0, lsl #2
   3b488:	ldr	r1, [r1, #4]
   3b48c:	sdiv	r3, r2, r1
   3b490:	mls	r3, r3, r1, r2
   3b494:	cmp	r3, #0
   3b498:	beq	3b4b4 <GetDataSlab+0x18f98>
   3b49c:	ldr	r4, [r5, r0, lsl #2]
   3b4a0:	ldr	r5, [lr, r0, lsl #2]
   3b4a4:	sub	r1, r1, r3
   3b4a8:	mla	r1, r5, r4, r1
   3b4ac:	add	r2, r1, r2
   3b4b0:	b	3b4d0 <GetDataSlab+0x18fb4>
   3b4b4:	mov	r1, lr
   3b4b8:	ldr	r1, [lr, r0, lsl #2]
   3b4bc:	cmp	r1, #0
   3b4c0:	beq	3b4d4 <GetDataSlab+0x18fb8>
   3b4c4:	ldr	r3, [r5, r0, lsl #2]
   3b4c8:	mla	r2, r3, r1, r2
   3b4cc:	mul	r1, r3, r1
   3b4d0:	add	r9, r9, r1, lsl #3
   3b4d4:	ldr	r1, [fp, #24]
   3b4d8:	add	ip, r0, #1
   3b4dc:	add	r0, r0, #2
   3b4e0:	cmp	r0, r1
   3b4e4:	blt	3b454 <GetDataSlab+0x18f38>
   3b4e8:	b	3b4fc <GetDataSlab+0x18fe0>
   3b4ec:	ldr	r1, [sp, #32]
   3b4f0:	ldr	r0, [r1, r0, lsl #2]
   3b4f4:	add	r9, r9, r0, lsl #3
   3b4f8:	add	r2, r0, r2
   3b4fc:	ldr	r0, [sp, #60]	; 0x3c
   3b500:	ldr	r1, [sp, #40]	; 0x28
   3b504:	ldr	r3, [sp, #48]	; 0x30
   3b508:	add	r0, r0, r1
   3b50c:	ldr	r1, [sp, #44]	; 0x2c
   3b510:	str	r0, [sp, #60]	; 0x3c
   3b514:	mov	r0, #0
   3b518:	add	r8, r8, r1
   3b51c:	cmp	r8, r3
   3b520:	blt	3b400 <GetDataSlab+0x18ee4>
   3b524:	b	242ac <GetDataSlab+0x1d90>
   3b528:	ldr	r0, [sp, #48]	; 0x30
   3b52c:	ldr	r1, [fp, #20]
   3b530:	cmp	r0, #1
   3b534:	blt	242a8 <GetDataSlab+0x1d8c>
   3b538:	ldr	r3, [sp, #44]	; 0x2c
   3b53c:	ldr	r0, [sp, #40]	; 0x28
   3b540:	ldr	r6, [lr], #4
   3b544:	add	sl, r1, #4
   3b548:	mov	r8, #0
   3b54c:	mls	r0, r3, r5, r0
   3b550:	mov	r1, r3
   3b554:	str	r6, [sp, #56]	; 0x38
   3b558:	sub	r0, r0, r6
   3b55c:	str	r0, [sp, #52]	; 0x34
   3b560:	add	r0, sp, #104	; 0x68
   3b564:	orr	r7, r0, #4
   3b568:	sub	r0, fp, #72	; 0x48
   3b56c:	orr	r0, r0, #4
   3b570:	str	r0, [sp, #32]
   3b574:	mla	r0, r3, r5, r6
   3b578:	lsl	r6, r5, #3
   3b57c:	str	r0, [sp, #36]	; 0x24
   3b580:	lsl	r0, r3, #1
   3b584:	str	r0, [sp, #40]	; 0x28
   3b588:	ldr	r0, [sp, #56]	; 0x38
   3b58c:	cmp	r1, #1
   3b590:	blt	3b5b8 <GetDataSlab+0x1909c>
   3b594:	ldr	r0, [sp, #56]	; 0x38
   3b598:	ldr	r3, [sp, #44]	; 0x2c
   3b59c:	ldr	r1, [sp, #60]	; 0x3c
   3b5a0:	add	r0, r9, r0, lsl #3
   3b5a4:	ldrh	r4, [r0], r6
   3b5a8:	subs	r3, r3, #1
   3b5ac:	strh	r4, [r1], #2
   3b5b0:	bne	3b5a4 <GetDataSlab+0x19088>
   3b5b4:	ldr	r0, [sp, #36]	; 0x24
   3b5b8:	ldr	r3, [sp, #52]	; 0x34
   3b5bc:	add	r1, r9, r3, lsl #3
   3b5c0:	add	r9, r1, r0, lsl #3
   3b5c4:	add	r0, r0, r2
   3b5c8:	add	r2, r0, r3
   3b5cc:	ldr	r0, [fp, #24]
   3b5d0:	cmp	r0, #2
   3b5d4:	blt	3b684 <GetDataSlab+0x19168>
   3b5d8:	mov	ip, #0
   3b5dc:	ldr	r1, [r7, ip, lsl #2]
   3b5e0:	mov	r0, ip
   3b5e4:	add	r1, r1, #1
   3b5e8:	str	r1, [r7, ip, lsl #2]
   3b5ec:	ldr	r3, [sl, ip, lsl #2]
   3b5f0:	sdiv	r4, r1, r3
   3b5f4:	mls	r1, r4, r3, r1
   3b5f8:	cmp	r1, #0
   3b5fc:	bne	3b674 <GetDataSlab+0x19158>
   3b600:	mov	r1, #0
   3b604:	add	r5, sp, #64	; 0x40
   3b608:	str	r1, [r7, r0, lsl #2]
   3b60c:	add	r1, r5, r0, lsl #2
   3b610:	ldr	r1, [r1, #4]
   3b614:	sdiv	r3, r2, r1
   3b618:	mls	r3, r3, r1, r2
   3b61c:	cmp	r3, #0
   3b620:	beq	3b63c <GetDataSlab+0x19120>
   3b624:	ldr	r4, [r5, r0, lsl #2]
   3b628:	ldr	r5, [lr, r0, lsl #2]
   3b62c:	sub	r1, r1, r3
   3b630:	mla	r1, r5, r4, r1
   3b634:	add	r2, r1, r2
   3b638:	b	3b658 <GetDataSlab+0x1913c>
   3b63c:	mov	r1, lr
   3b640:	ldr	r1, [lr, r0, lsl #2]
   3b644:	cmp	r1, #0
   3b648:	beq	3b65c <GetDataSlab+0x19140>
   3b64c:	ldr	r3, [r5, r0, lsl #2]
   3b650:	mla	r2, r3, r1, r2
   3b654:	mul	r1, r3, r1
   3b658:	add	r9, r9, r1, lsl #3
   3b65c:	ldr	r1, [fp, #24]
   3b660:	add	ip, r0, #1
   3b664:	add	r0, r0, #2
   3b668:	cmp	r0, r1
   3b66c:	blt	3b5dc <GetDataSlab+0x190c0>
   3b670:	b	3b684 <GetDataSlab+0x19168>
   3b674:	ldr	r1, [sp, #32]
   3b678:	ldr	r0, [r1, r0, lsl #2]
   3b67c:	add	r9, r9, r0, lsl #3
   3b680:	add	r2, r0, r2
   3b684:	ldr	r0, [sp, #60]	; 0x3c
   3b688:	ldr	r1, [sp, #40]	; 0x28
   3b68c:	ldr	r3, [sp, #48]	; 0x30
   3b690:	add	r0, r0, r1
   3b694:	ldr	r1, [sp, #44]	; 0x2c
   3b698:	str	r0, [sp, #60]	; 0x3c
   3b69c:	mov	r0, #0
   3b6a0:	add	r8, r8, r1
   3b6a4:	cmp	r8, r3
   3b6a8:	blt	3b588 <GetDataSlab+0x1906c>
   3b6ac:	b	242ac <GetDataSlab+0x1d90>
   3b6b0:	ldr	r0, [sp, #56]	; 0x38
   3b6b4:	ldr	r9, [fp, #12]
   3b6b8:	cmp	r0, #1
   3b6bc:	ldr	r0, [fp, #20]
   3b6c0:	blt	242a8 <GetDataSlab+0x1d8c>
   3b6c4:	add	lr, r0, #4
   3b6c8:	add	r0, sp, #104	; 0x68
   3b6cc:	orr	ip, r0, #4
   3b6d0:	sub	r0, fp, #72	; 0x48
   3b6d4:	orr	r0, r0, #4
   3b6d8:	str	r0, [sp, #40]	; 0x28
   3b6dc:	ldr	r0, [r9], #4
   3b6e0:	str	r0, [sp, #44]	; 0x2c
   3b6e4:	mov	r0, #0
   3b6e8:	str	r0, [sp, #52]	; 0x34
   3b6ec:	ldr	r1, [sp, #44]	; 0x2c
   3b6f0:	cmp	sl, #1
   3b6f4:	add	r0, r1, r2
   3b6f8:	add	r4, r4, r1, lsl #3
   3b6fc:	blt	3b750 <GetDataSlab+0x19234>
   3b700:	ldr	r2, [sp, #60]	; 0x3c
   3b704:	ldr	r1, [sp, #52]	; 0x34
   3b708:	ldr	r7, [fp, #20]
   3b70c:	mov	r6, #0
   3b710:	add	r5, r2, r1, lsl #2
   3b714:	ldr	r1, [fp, #16]
   3b718:	ldr	r2, [r4]
   3b71c:	str	r2, [r5, r6, lsl #2]
   3b720:	add	r6, r6, #1
   3b724:	ldr	r3, [r1]
   3b728:	ldr	sl, [r7]
   3b72c:	add	r0, r3, r0
   3b730:	add	r4, r4, r3, lsl #3
   3b734:	cmp	r6, sl
   3b738:	blt	3b718 <GetDataSlab+0x191fc>
   3b73c:	ldr	r5, [fp, #12]
   3b740:	ldr	r2, [r5]
   3b744:	ldr	r5, [fp, #8]
   3b748:	ldr	r1, [r5]
   3b74c:	b	3b758 <GetDataSlab+0x1923c>
   3b750:	mov	r2, r1
   3b754:	ldr	r1, [sp, #48]	; 0x30
   3b758:	mls	r6, r3, sl, r1
   3b75c:	str	r2, [sp, #44]	; 0x2c
   3b760:	sub	r6, r6, r2
   3b764:	add	r2, r6, r0
   3b768:	ldr	r0, [fp, #24]
   3b76c:	add	r4, r4, r6, lsl #3
   3b770:	cmp	r0, #2
   3b774:	blt	3b824 <GetDataSlab+0x19308>
   3b778:	mov	r5, #0
   3b77c:	ldr	r6, [ip, r5, lsl #2]
   3b780:	mov	r0, r5
   3b784:	add	r6, r6, #1
   3b788:	str	r6, [ip, r5, lsl #2]
   3b78c:	ldr	r5, [lr, r5, lsl #2]
   3b790:	sdiv	r7, r6, r5
   3b794:	mls	r5, r7, r5, r6
   3b798:	cmp	r5, #0
   3b79c:	bne	3b814 <GetDataSlab+0x192f8>
   3b7a0:	mov	r5, #0
   3b7a4:	add	r7, sp, #64	; 0x40
   3b7a8:	str	r5, [ip, r0, lsl #2]
   3b7ac:	add	r5, r7, r0, lsl #2
   3b7b0:	ldr	r5, [r5, #4]
   3b7b4:	sdiv	r6, r2, r5
   3b7b8:	mls	r6, r6, r5, r2
   3b7bc:	cmp	r6, #0
   3b7c0:	beq	3b7dc <GetDataSlab+0x192c0>
   3b7c4:	ldr	r7, [r7, r0, lsl #2]
   3b7c8:	ldr	r8, [r9, r0, lsl #2]
   3b7cc:	sub	r5, r5, r6
   3b7d0:	mla	r5, r8, r7, r5
   3b7d4:	add	r2, r5, r2
   3b7d8:	b	3b7f8 <GetDataSlab+0x192dc>
   3b7dc:	ldr	r5, [r9, r0, lsl #2]
   3b7e0:	cmp	r5, #0
   3b7e4:	beq	3b7fc <GetDataSlab+0x192e0>
   3b7e8:	add	r6, sp, #64	; 0x40
   3b7ec:	ldr	r6, [r6, r0, lsl #2]
   3b7f0:	mla	r2, r6, r5, r2
   3b7f4:	mul	r5, r6, r5
   3b7f8:	add	r4, r4, r5, lsl #3
   3b7fc:	ldr	r6, [fp, #24]
   3b800:	add	r5, r0, #1
   3b804:	add	r0, r0, #2
   3b808:	cmp	r0, r6
   3b80c:	blt	3b77c <GetDataSlab+0x19260>
   3b810:	b	3b824 <GetDataSlab+0x19308>
   3b814:	ldr	r5, [sp, #40]	; 0x28
   3b818:	ldr	r0, [r5, r0, lsl #2]
   3b81c:	add	r4, r4, r0, lsl #3
   3b820:	add	r2, r0, r2
   3b824:	ldr	r5, [sp, #52]	; 0x34
   3b828:	str	r1, [sp, #48]	; 0x30
   3b82c:	ldr	r1, [sp, #56]	; 0x38
   3b830:	mov	r0, #0
   3b834:	add	r5, sl, r5
   3b838:	cmp	r5, r1
   3b83c:	str	r5, [sp, #52]	; 0x34
   3b840:	blt	3b6ec <GetDataSlab+0x191d0>
   3b844:	b	242ac <GetDataSlab+0x1d90>
   3b848:	ldr	r0, [sp, #56]	; 0x38
   3b84c:	ldr	r9, [fp, #12]
   3b850:	cmp	r0, #1
   3b854:	ldr	r0, [fp, #20]
   3b858:	blt	242a8 <GetDataSlab+0x1d8c>
   3b85c:	add	lr, r0, #4
   3b860:	add	r0, sp, #104	; 0x68
   3b864:	orr	ip, r0, #4
   3b868:	sub	r0, fp, #72	; 0x48
   3b86c:	orr	r0, r0, #4
   3b870:	str	r0, [sp, #40]	; 0x28
   3b874:	ldr	r0, [r9], #4
   3b878:	str	r0, [sp, #44]	; 0x2c
   3b87c:	mov	r0, #0
   3b880:	str	r0, [sp, #52]	; 0x34
   3b884:	ldr	r1, [sp, #44]	; 0x2c
   3b888:	cmp	sl, #1
   3b88c:	add	r0, r1, r2
   3b890:	add	r4, r4, r1, lsl #3
   3b894:	blt	3b8e8 <GetDataSlab+0x193cc>
   3b898:	ldr	r2, [sp, #60]	; 0x3c
   3b89c:	ldr	r1, [sp, #52]	; 0x34
   3b8a0:	ldr	r7, [fp, #20]
   3b8a4:	mov	r6, #0
   3b8a8:	add	r5, r2, r1, lsl #2
   3b8ac:	ldr	r1, [fp, #16]
   3b8b0:	ldr	r2, [r4]
   3b8b4:	str	r2, [r5, r6, lsl #2]
   3b8b8:	add	r6, r6, #1
   3b8bc:	ldr	r3, [r1]
   3b8c0:	ldr	sl, [r7]
   3b8c4:	add	r0, r3, r0
   3b8c8:	add	r4, r4, r3, lsl #3
   3b8cc:	cmp	r6, sl
   3b8d0:	blt	3b8b0 <GetDataSlab+0x19394>
   3b8d4:	ldr	r5, [fp, #12]
   3b8d8:	ldr	r2, [r5]
   3b8dc:	ldr	r5, [fp, #8]
   3b8e0:	ldr	r1, [r5]
   3b8e4:	b	3b8f0 <GetDataSlab+0x193d4>
   3b8e8:	mov	r2, r1
   3b8ec:	ldr	r1, [sp, #48]	; 0x30
   3b8f0:	mls	r6, r3, sl, r1
   3b8f4:	str	r2, [sp, #44]	; 0x2c
   3b8f8:	sub	r6, r6, r2
   3b8fc:	add	r2, r6, r0
   3b900:	ldr	r0, [fp, #24]
   3b904:	add	r4, r4, r6, lsl #3
   3b908:	cmp	r0, #2
   3b90c:	blt	3b9bc <GetDataSlab+0x194a0>
   3b910:	mov	r5, #0
   3b914:	ldr	r6, [ip, r5, lsl #2]
   3b918:	mov	r0, r5
   3b91c:	add	r6, r6, #1
   3b920:	str	r6, [ip, r5, lsl #2]
   3b924:	ldr	r5, [lr, r5, lsl #2]
   3b928:	sdiv	r7, r6, r5
   3b92c:	mls	r5, r7, r5, r6
   3b930:	cmp	r5, #0
   3b934:	bne	3b9ac <GetDataSlab+0x19490>
   3b938:	mov	r5, #0
   3b93c:	add	r7, sp, #64	; 0x40
   3b940:	str	r5, [ip, r0, lsl #2]
   3b944:	add	r5, r7, r0, lsl #2
   3b948:	ldr	r5, [r5, #4]
   3b94c:	sdiv	r6, r2, r5
   3b950:	mls	r6, r6, r5, r2
   3b954:	cmp	r6, #0
   3b958:	beq	3b974 <GetDataSlab+0x19458>
   3b95c:	ldr	r7, [r7, r0, lsl #2]
   3b960:	ldr	r8, [r9, r0, lsl #2]
   3b964:	sub	r5, r5, r6
   3b968:	mla	r5, r8, r7, r5
   3b96c:	add	r2, r5, r2
   3b970:	b	3b990 <GetDataSlab+0x19474>
   3b974:	ldr	r5, [r9, r0, lsl #2]
   3b978:	cmp	r5, #0
   3b97c:	beq	3b994 <GetDataSlab+0x19478>
   3b980:	add	r6, sp, #64	; 0x40
   3b984:	ldr	r6, [r6, r0, lsl #2]
   3b988:	mla	r2, r6, r5, r2
   3b98c:	mul	r5, r6, r5
   3b990:	add	r4, r4, r5, lsl #3
   3b994:	ldr	r6, [fp, #24]
   3b998:	add	r5, r0, #1
   3b99c:	add	r0, r0, #2
   3b9a0:	cmp	r0, r6
   3b9a4:	blt	3b914 <GetDataSlab+0x193f8>
   3b9a8:	b	3b9bc <GetDataSlab+0x194a0>
   3b9ac:	ldr	r5, [sp, #40]	; 0x28
   3b9b0:	ldr	r0, [r5, r0, lsl #2]
   3b9b4:	add	r4, r4, r0, lsl #3
   3b9b8:	add	r2, r0, r2
   3b9bc:	ldr	r5, [sp, #52]	; 0x34
   3b9c0:	str	r1, [sp, #48]	; 0x30
   3b9c4:	ldr	r1, [sp, #56]	; 0x38
   3b9c8:	mov	r0, #0
   3b9cc:	add	r5, sl, r5
   3b9d0:	cmp	r5, r1
   3b9d4:	str	r5, [sp, #52]	; 0x34
   3b9d8:	blt	3b884 <GetDataSlab+0x19368>
   3b9dc:	b	242ac <GetDataSlab+0x1d90>
   3b9e0:	ldr	r0, [sp, #44]	; 0x2c
   3b9e4:	ldr	r1, [fp, #20]
   3b9e8:	cmp	r0, #1
   3b9ec:	blt	242a8 <GetDataSlab+0x1d8c>
   3b9f0:	ldr	r3, [sp, #48]	; 0x30
   3b9f4:	ldr	r0, [sp, #40]	; 0x28
   3b9f8:	ldr	r4, [ip], #4
   3b9fc:	add	lr, r1, #4
   3ba00:	lsl	r6, r5, #3
   3ba04:	mov	r8, #0
   3ba08:	mls	r0, r3, r5, r0
   3ba0c:	mov	r9, ip
   3ba10:	str	r4, [sp, #56]	; 0x38
   3ba14:	sub	r0, r0, r4
   3ba18:	str	r0, [sp, #52]	; 0x34
   3ba1c:	add	r0, sp, #104	; 0x68
   3ba20:	orr	r7, r0, #4
   3ba24:	sub	r0, fp, #72	; 0x48
   3ba28:	orr	r0, r0, #4
   3ba2c:	str	r0, [sp, #32]
   3ba30:	mla	r0, r3, r5, r4
   3ba34:	str	r0, [sp, #36]	; 0x24
   3ba38:	lsl	r0, r3, #3
   3ba3c:	str	r0, [sp, #40]	; 0x28
   3ba40:	ldr	r0, [sp, #56]	; 0x38
   3ba44:	cmp	r3, #1
   3ba48:	blt	3ba74 <GetDataSlab+0x19558>
   3ba4c:	ldr	r0, [sp, #56]	; 0x38
   3ba50:	ldr	r4, [sp, #60]	; 0x3c
   3ba54:	add	r5, sl, r0, lsl #3
   3ba58:	ldrd	r0, [r5]
   3ba5c:	add	r5, r5, r6
   3ba60:	subs	r3, r3, #1
   3ba64:	strd	r0, [r4]
   3ba68:	add	r4, r4, #8
   3ba6c:	bne	3ba58 <GetDataSlab+0x1953c>
   3ba70:	ldr	r0, [sp, #36]	; 0x24
   3ba74:	ldr	r3, [sp, #52]	; 0x34
   3ba78:	add	r1, sl, r3, lsl #3
   3ba7c:	add	sl, r1, r0, lsl #3
   3ba80:	add	r0, r0, r2
   3ba84:	add	r2, r0, r3
   3ba88:	ldr	r0, [fp, #24]
   3ba8c:	cmp	r0, #2
   3ba90:	blt	3bb40 <GetDataSlab+0x19624>
   3ba94:	mov	ip, #0
   3ba98:	ldr	r1, [r7, ip, lsl #2]
   3ba9c:	mov	r0, ip
   3baa0:	add	r1, r1, #1
   3baa4:	str	r1, [r7, ip, lsl #2]
   3baa8:	ldr	r3, [lr, ip, lsl #2]
   3baac:	sdiv	r5, r1, r3
   3bab0:	mls	r1, r5, r3, r1
   3bab4:	cmp	r1, #0
   3bab8:	bne	3bb30 <GetDataSlab+0x19614>
   3babc:	mov	r1, #0
   3bac0:	add	r5, sp, #64	; 0x40
   3bac4:	str	r1, [r7, r0, lsl #2]
   3bac8:	add	r1, r5, r0, lsl #2
   3bacc:	ldr	r1, [r1, #4]
   3bad0:	sdiv	r3, r2, r1
   3bad4:	mls	r3, r3, r1, r2
   3bad8:	cmp	r3, #0
   3badc:	beq	3baf8 <GetDataSlab+0x195dc>
   3bae0:	ldr	r5, [r5, r0, lsl #2]
   3bae4:	ldr	r4, [r9, r0, lsl #2]
   3bae8:	sub	r1, r1, r3
   3baec:	mla	r1, r4, r5, r1
   3baf0:	add	r2, r1, r2
   3baf4:	b	3bb14 <GetDataSlab+0x195f8>
   3baf8:	mov	r1, r9
   3bafc:	ldr	r1, [r9, r0, lsl #2]
   3bb00:	cmp	r1, #0
   3bb04:	beq	3bb18 <GetDataSlab+0x195fc>
   3bb08:	ldr	r3, [r5, r0, lsl #2]
   3bb0c:	mla	r2, r3, r1, r2
   3bb10:	mul	r1, r3, r1
   3bb14:	add	sl, sl, r1, lsl #3
   3bb18:	ldr	r1, [fp, #24]
   3bb1c:	add	ip, r0, #1
   3bb20:	add	r0, r0, #2
   3bb24:	cmp	r0, r1
   3bb28:	blt	3ba98 <GetDataSlab+0x1957c>
   3bb2c:	b	3bb40 <GetDataSlab+0x19624>
   3bb30:	ldr	r1, [sp, #32]
   3bb34:	ldr	r0, [r1, r0, lsl #2]
   3bb38:	add	sl, sl, r0, lsl #3
   3bb3c:	add	r2, r0, r2
   3bb40:	ldr	r0, [sp, #60]	; 0x3c
   3bb44:	ldr	r1, [sp, #40]	; 0x28
   3bb48:	ldr	r3, [sp, #48]	; 0x30
   3bb4c:	add	r0, r0, r1
   3bb50:	ldr	r1, [sp, #44]	; 0x2c
   3bb54:	add	r8, r8, r3
   3bb58:	str	r0, [sp, #60]	; 0x3c
   3bb5c:	mov	r0, #0
   3bb60:	cmp	r8, r1
   3bb64:	blt	3ba40 <GetDataSlab+0x19524>
   3bb68:	b	242ac <GetDataSlab+0x1d90>
   3bb6c:	ldr	r0, [sp, #44]	; 0x2c
   3bb70:	ldr	r1, [fp, #20]
   3bb74:	cmp	r0, #1
   3bb78:	blt	242a8 <GetDataSlab+0x1d8c>
   3bb7c:	ldr	r3, [sp, #48]	; 0x30
   3bb80:	ldr	r0, [sp, #40]	; 0x28
   3bb84:	ldr	r4, [ip], #4
   3bb88:	add	lr, r1, #4
   3bb8c:	lsl	r6, r5, #3
   3bb90:	mov	r8, #0
   3bb94:	mls	r0, r3, r5, r0
   3bb98:	mov	r9, ip
   3bb9c:	str	r4, [sp, #56]	; 0x38
   3bba0:	sub	r0, r0, r4
   3bba4:	str	r0, [sp, #52]	; 0x34
   3bba8:	add	r0, sp, #104	; 0x68
   3bbac:	orr	r7, r0, #4
   3bbb0:	sub	r0, fp, #72	; 0x48
   3bbb4:	orr	r0, r0, #4
   3bbb8:	str	r0, [sp, #32]
   3bbbc:	mla	r0, r3, r5, r4
   3bbc0:	str	r0, [sp, #36]	; 0x24
   3bbc4:	lsl	r0, r3, #3
   3bbc8:	str	r0, [sp, #40]	; 0x28
   3bbcc:	ldr	r0, [sp, #56]	; 0x38
   3bbd0:	cmp	r3, #1
   3bbd4:	blt	3bc00 <GetDataSlab+0x196e4>
   3bbd8:	ldr	r0, [sp, #56]	; 0x38
   3bbdc:	ldr	r4, [sp, #60]	; 0x3c
   3bbe0:	add	r5, sl, r0, lsl #3
   3bbe4:	ldrd	r0, [r5]
   3bbe8:	add	r5, r5, r6
   3bbec:	subs	r3, r3, #1
   3bbf0:	strd	r0, [r4]
   3bbf4:	add	r4, r4, #8
   3bbf8:	bne	3bbe4 <GetDataSlab+0x196c8>
   3bbfc:	ldr	r0, [sp, #36]	; 0x24
   3bc00:	ldr	r3, [sp, #52]	; 0x34
   3bc04:	add	r1, sl, r3, lsl #3
   3bc08:	add	sl, r1, r0, lsl #3
   3bc0c:	add	r0, r0, r2
   3bc10:	add	r2, r0, r3
   3bc14:	ldr	r0, [fp, #24]
   3bc18:	cmp	r0, #2
   3bc1c:	blt	3bccc <GetDataSlab+0x197b0>
   3bc20:	mov	ip, #0
   3bc24:	ldr	r1, [r7, ip, lsl #2]
   3bc28:	mov	r0, ip
   3bc2c:	add	r1, r1, #1
   3bc30:	str	r1, [r7, ip, lsl #2]
   3bc34:	ldr	r3, [lr, ip, lsl #2]
   3bc38:	sdiv	r5, r1, r3
   3bc3c:	mls	r1, r5, r3, r1
   3bc40:	cmp	r1, #0
   3bc44:	bne	3bcbc <GetDataSlab+0x197a0>
   3bc48:	mov	r1, #0
   3bc4c:	add	r5, sp, #64	; 0x40
   3bc50:	str	r1, [r7, r0, lsl #2]
   3bc54:	add	r1, r5, r0, lsl #2
   3bc58:	ldr	r1, [r1, #4]
   3bc5c:	sdiv	r3, r2, r1
   3bc60:	mls	r3, r3, r1, r2
   3bc64:	cmp	r3, #0
   3bc68:	beq	3bc84 <GetDataSlab+0x19768>
   3bc6c:	ldr	r5, [r5, r0, lsl #2]
   3bc70:	ldr	r4, [r9, r0, lsl #2]
   3bc74:	sub	r1, r1, r3
   3bc78:	mla	r1, r4, r5, r1
   3bc7c:	add	r2, r1, r2
   3bc80:	b	3bca0 <GetDataSlab+0x19784>
   3bc84:	mov	r1, r9
   3bc88:	ldr	r1, [r9, r0, lsl #2]
   3bc8c:	cmp	r1, #0
   3bc90:	beq	3bca4 <GetDataSlab+0x19788>
   3bc94:	ldr	r3, [r5, r0, lsl #2]
   3bc98:	mla	r2, r3, r1, r2
   3bc9c:	mul	r1, r3, r1
   3bca0:	add	sl, sl, r1, lsl #3
   3bca4:	ldr	r1, [fp, #24]
   3bca8:	add	ip, r0, #1
   3bcac:	add	r0, r0, #2
   3bcb0:	cmp	r0, r1
   3bcb4:	blt	3bc24 <GetDataSlab+0x19708>
   3bcb8:	b	3bccc <GetDataSlab+0x197b0>
   3bcbc:	ldr	r1, [sp, #32]
   3bcc0:	ldr	r0, [r1, r0, lsl #2]
   3bcc4:	add	sl, sl, r0, lsl #3
   3bcc8:	add	r2, r0, r2
   3bccc:	ldr	r0, [sp, #60]	; 0x3c
   3bcd0:	ldr	r1, [sp, #40]	; 0x28
   3bcd4:	ldr	r3, [sp, #48]	; 0x30
   3bcd8:	add	r0, r0, r1
   3bcdc:	ldr	r1, [sp, #44]	; 0x2c
   3bce0:	add	r8, r8, r3
   3bce4:	str	r0, [sp, #60]	; 0x3c
   3bce8:	mov	r0, #0
   3bcec:	cmp	r8, r1
   3bcf0:	blt	3bbcc <GetDataSlab+0x196b0>
   3bcf4:	b	242ac <GetDataSlab+0x1d90>
   3bcf8:	cmp	r5, #1
   3bcfc:	blt	242a8 <GetDataSlab+0x1d8c>
   3bd00:	ldr	r0, [sp, #36]	; 0x24
   3bd04:	ldr	r1, [sp, #32]
   3bd08:	mul	r2, r4, r6
   3bd0c:	mov	r3, #0
   3bd10:	mla	r0, r1, r6, r0
   3bd14:	ldr	r1, [sp, #52]	; 0x34
   3bd18:	add	r1, r1, r0
   3bd1c:	cmp	sl, #1
   3bd20:	blt	3bd58 <GetDataSlab+0x1983c>
   3bd24:	mov	r0, #0
   3bd28:	mov	r7, sl
   3bd2c:	mov	r6, lr
   3bd30:	ldrb	r5, [r1, r0]
   3bd34:	add	r0, r0, r9
   3bd38:	subs	r7, r7, #1
   3bd3c:	vmov	s0, r5
   3bd40:	vcvt.f64.u32	d16, s0
   3bd44:	vstr	d16, [r6]
   3bd48:	add	r6, r6, #8
   3bd4c:	bne	3bd30 <GetDataSlab+0x19814>
   3bd50:	ldr	r5, [sp, #56]	; 0x38
   3bd54:	add	lr, lr, sl, lsl #3
   3bd58:	add	r3, r3, #1
   3bd5c:	add	r1, r1, r2
   3bd60:	mov	r0, #0
   3bd64:	cmp	r3, r5
   3bd68:	bne	3bd1c <GetDataSlab+0x19800>
   3bd6c:	b	242ac <GetDataSlab+0x1d90>
   3bd70:	cmp	r5, #1
   3bd74:	blt	242a8 <GetDataSlab+0x1d8c>
   3bd78:	ldr	r0, [sp, #36]	; 0x24
   3bd7c:	ldr	r1, [sp, #32]
   3bd80:	lsl	r3, r9, #1
   3bd84:	mov	r7, #0
   3bd88:	mla	r0, r1, r6, r0
   3bd8c:	ldr	r1, [sp, #52]	; 0x34
   3bd90:	add	r1, r1, r0, lsl #1
   3bd94:	mul	r0, r4, r6
   3bd98:	lsl	r2, r0, #1
   3bd9c:	cmp	sl, #1
   3bda0:	blt	3bdd8 <GetDataSlab+0x198bc>
   3bda4:	mov	r0, #0
   3bda8:	mov	r6, sl
   3bdac:	mov	r5, lr
   3bdb0:	ldrsh	r4, [r1, -r0]
   3bdb4:	sub	r0, r0, r3
   3bdb8:	subs	r6, r6, #1
   3bdbc:	vmov	s0, r4
   3bdc0:	vcvt.f64.s32	d16, s0
   3bdc4:	vstr	d16, [r5]
   3bdc8:	add	r5, r5, #8
   3bdcc:	bne	3bdb0 <GetDataSlab+0x19894>
   3bdd0:	ldr	r5, [sp, #56]	; 0x38
   3bdd4:	add	lr, lr, sl, lsl #3
   3bdd8:	add	r7, r7, #1
   3bddc:	add	r1, r1, r2
   3bde0:	mov	r0, #0
   3bde4:	cmp	r7, r5
   3bde8:	bne	3bd9c <GetDataSlab+0x19880>
   3bdec:	b	242ac <GetDataSlab+0x1d90>
   3bdf0:	cmp	r5, #1
   3bdf4:	blt	242a8 <GetDataSlab+0x1d8c>
   3bdf8:	ldr	r0, [sp, #36]	; 0x24
   3bdfc:	ldr	r1, [sp, #32]
   3be00:	lsl	r3, r9, #1
   3be04:	mov	r7, #0
   3be08:	mla	r0, r1, r6, r0
   3be0c:	ldr	r1, [sp, #52]	; 0x34
   3be10:	add	r1, r1, r0, lsl #1
   3be14:	mul	r0, r4, r6
   3be18:	lsl	r2, r0, #1
   3be1c:	cmp	sl, #1
   3be20:	blt	3be58 <GetDataSlab+0x1993c>
   3be24:	mov	r0, #0
   3be28:	mov	r6, sl
   3be2c:	mov	r5, lr
   3be30:	ldrh	r4, [r1, -r0]
   3be34:	sub	r0, r0, r3
   3be38:	subs	r6, r6, #1
   3be3c:	vmov	s0, r4
   3be40:	vcvt.f64.u32	d16, s0
   3be44:	vstr	d16, [r5]
   3be48:	add	r5, r5, #8
   3be4c:	bne	3be30 <GetDataSlab+0x19914>
   3be50:	ldr	r5, [sp, #56]	; 0x38
   3be54:	add	lr, lr, sl, lsl #3
   3be58:	add	r7, r7, #1
   3be5c:	add	r1, r1, r2
   3be60:	mov	r0, #0
   3be64:	cmp	r7, r5
   3be68:	bne	3be1c <GetDataSlab+0x19900>
   3be6c:	b	242ac <GetDataSlab+0x1d90>
   3be70:	cmp	r5, #1
   3be74:	blt	242a8 <GetDataSlab+0x1d8c>
   3be78:	ldr	r0, [sp, #36]	; 0x24
   3be7c:	ldr	r1, [sp, #32]
   3be80:	lsl	r3, r9, #2
   3be84:	mov	r7, #0
   3be88:	mla	r0, r1, r6, r0
   3be8c:	ldr	r1, [sp, #52]	; 0x34
   3be90:	add	r1, r1, r0, lsl #2
   3be94:	mul	r0, r4, r6
   3be98:	lsl	r2, r0, #2
   3be9c:	cmp	sl, #1
   3bea0:	blt	3bed8 <GetDataSlab+0x199bc>
   3bea4:	mov	r0, #0
   3bea8:	mov	r6, sl
   3beac:	mov	r5, lr
   3beb0:	sub	r4, r1, r0
   3beb4:	sub	r0, r0, r3
   3beb8:	subs	r6, r6, #1
   3bebc:	vldr	s0, [r4]
   3bec0:	vcvt.f64.s32	d16, s0
   3bec4:	vstr	d16, [r5]
   3bec8:	add	r5, r5, #8
   3becc:	bne	3beb0 <GetDataSlab+0x19994>
   3bed0:	ldr	r5, [sp, #56]	; 0x38
   3bed4:	add	lr, lr, sl, lsl #3
   3bed8:	add	r7, r7, #1
   3bedc:	add	r1, r1, r2
   3bee0:	mov	r0, #0
   3bee4:	cmp	r7, r5
   3bee8:	bne	3be9c <GetDataSlab+0x19980>
   3beec:	b	242ac <GetDataSlab+0x1d90>
   3bef0:	cmp	r5, #1
   3bef4:	blt	242a8 <GetDataSlab+0x1d8c>
   3bef8:	ldr	r0, [sp, #36]	; 0x24
   3befc:	ldr	r1, [sp, #32]
   3bf00:	lsl	r3, r9, #2
   3bf04:	mov	r7, #0
   3bf08:	mla	r0, r1, r6, r0
   3bf0c:	ldr	r1, [sp, #52]	; 0x34
   3bf10:	add	r1, r1, r0, lsl #2
   3bf14:	mul	r0, r4, r6
   3bf18:	lsl	r2, r0, #2
   3bf1c:	cmp	sl, #1
   3bf20:	blt	3bf58 <GetDataSlab+0x19a3c>
   3bf24:	mov	r0, #0
   3bf28:	mov	r6, sl
   3bf2c:	mov	r5, lr
   3bf30:	sub	r4, r1, r0
   3bf34:	sub	r0, r0, r3
   3bf38:	subs	r6, r6, #1
   3bf3c:	vldr	s0, [r4]
   3bf40:	vcvt.f64.u32	d16, s0
   3bf44:	vstr	d16, [r5]
   3bf48:	add	r5, r5, #8
   3bf4c:	bne	3bf30 <GetDataSlab+0x19a14>
   3bf50:	ldr	r5, [sp, #56]	; 0x38
   3bf54:	add	lr, lr, sl, lsl #3
   3bf58:	add	r7, r7, #1
   3bf5c:	add	r1, r1, r2
   3bf60:	mov	r0, #0
   3bf64:	cmp	r7, r5
   3bf68:	bne	3bf1c <GetDataSlab+0x19a00>
   3bf6c:	b	242ac <GetDataSlab+0x1d90>
   3bf70:	cmp	r5, #1
   3bf74:	blt	242a8 <GetDataSlab+0x1d8c>
   3bf78:	ldr	r0, [sp, #36]	; 0x24
   3bf7c:	ldr	r1, [sp, #32]
   3bf80:	lsl	r3, r9, #2
   3bf84:	mov	r7, #0
   3bf88:	mla	r0, r1, r6, r0
   3bf8c:	ldr	r1, [sp, #52]	; 0x34
   3bf90:	add	r1, r1, r0, lsl #2
   3bf94:	mul	r0, r4, r6
   3bf98:	lsl	r2, r0, #2
   3bf9c:	cmp	sl, #1
   3bfa0:	blt	3bfd4 <GetDataSlab+0x19ab8>
   3bfa4:	mov	r0, r1
   3bfa8:	mov	r6, sl
   3bfac:	mov	r5, lr
   3bfb0:	vldr	s0, [r0]
   3bfb4:	add	r0, r0, r3
   3bfb8:	subs	r6, r6, #1
   3bfbc:	vcvt.f64.f32	d16, s0
   3bfc0:	vstr	d16, [r5]
   3bfc4:	add	r5, r5, #8
   3bfc8:	bne	3bfb0 <GetDataSlab+0x19a94>
   3bfcc:	ldr	r5, [sp, #56]	; 0x38
   3bfd0:	add	lr, lr, sl, lsl #3
   3bfd4:	add	r7, r7, #1
   3bfd8:	add	r1, r1, r2
   3bfdc:	mov	r0, #0
   3bfe0:	cmp	r7, r5
   3bfe4:	bne	3bf9c <GetDataSlab+0x19a80>
   3bfe8:	b	242ac <GetDataSlab+0x1d90>
   3bfec:	cmp	r5, #1
   3bff0:	blt	242a8 <GetDataSlab+0x1d8c>
   3bff4:	ldr	r0, [sp, #36]	; 0x24
   3bff8:	ldr	r1, [sp, #32]
   3bffc:	lsl	r3, r9, #3
   3c000:	mov	r7, #0
   3c004:	mla	r0, r1, r6, r0
   3c008:	ldr	r1, [sp, #52]	; 0x34
   3c00c:	add	r1, r1, r0, lsl #3
   3c010:	mul	r0, r4, r6
   3c014:	lsl	r2, r0, #3
   3c018:	cmp	sl, #1
   3c01c:	blt	3c04c <GetDataSlab+0x19b30>
   3c020:	mov	r0, r1
   3c024:	mov	r6, sl
   3c028:	mov	r5, lr
   3c02c:	vldr	d16, [r0]
   3c030:	add	r0, r0, r3
   3c034:	subs	r6, r6, #1
   3c038:	vstr	d16, [r5]
   3c03c:	add	r5, r5, #8
   3c040:	bne	3c02c <GetDataSlab+0x19b10>
   3c044:	ldr	r5, [sp, #56]	; 0x38
   3c048:	add	lr, lr, sl, lsl #3
   3c04c:	add	r7, r7, #1
   3c050:	add	r1, r1, r2
   3c054:	mov	r0, #0
   3c058:	cmp	r7, r5
   3c05c:	bne	3c018 <GetDataSlab+0x19afc>
   3c060:	b	242ac <GetDataSlab+0x1d90>
   3c064:	cmp	r5, #1
   3c068:	blt	242a8 <GetDataSlab+0x1d8c>
   3c06c:	ldr	r0, [sp, #36]	; 0x24
   3c070:	ldr	r1, [sp, #32]
   3c074:	mov	r2, r4
   3c078:	lsl	r7, r9, #3
   3c07c:	mla	r0, r1, r6, r0
   3c080:	ldr	r1, [sp, #52]	; 0x34
   3c084:	add	r4, r1, r0, lsl #3
   3c088:	mul	r0, r2, r6
   3c08c:	mov	r1, #0
   3c090:	lsl	r0, r0, #3
   3c094:	str	r0, [sp, #24]
   3c098:	cmp	sl, #1
   3c09c:	blt	3c0ec <GetDataSlab+0x19bd0>
   3c0a0:	mov	r8, #0
   3c0a4:	mov	r5, sl
   3c0a8:	mov	r6, lr
   3c0ac:	str	r1, [sp, #28]
   3c0b0:	str	lr, [sp, #60]	; 0x3c
   3c0b4:	mov	r1, r4
   3c0b8:	ldr	r0, [r1, -r8]!
   3c0bc:	ldr	r1, [r1, #4]
   3c0c0:	bl	49578 <__aeabi_l2d>
   3c0c4:	strd	r0, [r6]
   3c0c8:	sub	r8, r8, r7
   3c0cc:	subs	r5, r5, #1
   3c0d0:	add	r6, r6, #8
   3c0d4:	bne	3c0b4 <GetDataSlab+0x19b98>
   3c0d8:	ldr	lr, [sp, #60]	; 0x3c
   3c0dc:	ldr	r5, [sp, #56]	; 0x38
   3c0e0:	ldr	r6, [sp, #40]	; 0x28
   3c0e4:	ldr	r1, [sp, #28]
   3c0e8:	add	lr, lr, sl, lsl #3
   3c0ec:	ldr	r0, [sp, #24]
   3c0f0:	add	r1, r1, #1
   3c0f4:	cmp	r1, r5
   3c0f8:	add	r4, r4, r0
   3c0fc:	bne	3c098 <GetDataSlab+0x19b7c>
   3c100:	ldr	r4, [sp, #44]	; 0x2c
   3c104:	mov	r0, #0
   3c108:	ldr	r1, [sp, #48]	; 0x30
   3c10c:	cmp	r1, #13
   3c110:	bne	242ac <GetDataSlab+0x1d90>
   3c114:	cmp	r5, #1
   3c118:	blt	242a8 <GetDataSlab+0x1d8c>
   3c11c:	ldr	r0, [sp, #36]	; 0x24
   3c120:	ldr	r1, [sp, #32]
   3c124:	mov	r2, r4
   3c128:	lsl	r7, r9, #3
   3c12c:	mov	r9, #0
   3c130:	mla	r0, r1, r6, r0
   3c134:	ldr	r1, [sp, #52]	; 0x34
   3c138:	add	r4, r1, r0, lsl #3
   3c13c:	mul	r0, r2, r6
   3c140:	lsl	r0, r0, #3
   3c144:	str	r0, [sp, #52]	; 0x34
   3c148:	cmp	sl, #1
   3c14c:	blt	3c190 <GetDataSlab+0x19c74>
   3c150:	mov	r6, #0
   3c154:	mov	r5, sl
   3c158:	mov	r8, lr
   3c15c:	str	lr, [sp, #60]	; 0x3c
   3c160:	mov	r1, r4
   3c164:	ldr	r0, [r1, -r6]!
   3c168:	ldr	r1, [r1, #4]
   3c16c:	bl	49564 <__aeabi_ul2d>
   3c170:	strd	r0, [r8]
   3c174:	sub	r6, r6, r7
   3c178:	subs	r5, r5, #1
   3c17c:	add	r8, r8, #8
   3c180:	bne	3c160 <GetDataSlab+0x19c44>
   3c184:	ldr	lr, [sp, #60]	; 0x3c
   3c188:	ldr	r5, [sp, #56]	; 0x38
   3c18c:	add	lr, lr, sl, lsl #3
   3c190:	ldr	r0, [sp, #52]	; 0x34
   3c194:	add	r9, r9, #1
   3c198:	cmp	r9, r5
   3c19c:	add	r4, r4, r0
   3c1a0:	mov	r0, #0
   3c1a4:	bne	3c148 <GetDataSlab+0x19c2c>
   3c1a8:	b	242ac <GetDataSlab+0x1d90>
   3c1ac:	cmp	r5, #1
   3c1b0:	blt	242a8 <GetDataSlab+0x1d8c>
   3c1b4:	ldr	r0, [sp, #36]	; 0x24
   3c1b8:	ldr	r1, [sp, #32]
   3c1bc:	mul	r2, r4, r6
   3c1c0:	mov	r3, #0
   3c1c4:	mla	r0, r1, r6, r0
   3c1c8:	ldr	r1, [sp, #52]	; 0x34
   3c1cc:	add	r1, r1, r0
   3c1d0:	cmp	sl, #1
   3c1d4:	blt	3c20c <GetDataSlab+0x19cf0>
   3c1d8:	mov	r0, #0
   3c1dc:	mov	r7, sl
   3c1e0:	mov	r6, lr
   3c1e4:	ldrb	r5, [r1, r0]
   3c1e8:	add	r0, r0, r9
   3c1ec:	subs	r7, r7, #1
   3c1f0:	vmov	s0, r5
   3c1f4:	vcvt.f32.u32	s0, s0
   3c1f8:	vstr	s0, [r6]
   3c1fc:	add	r6, r6, #4
   3c200:	bne	3c1e4 <GetDataSlab+0x19cc8>
   3c204:	ldr	r5, [sp, #56]	; 0x38
   3c208:	add	lr, lr, sl, lsl #2
   3c20c:	add	r3, r3, #1
   3c210:	add	r1, r1, r2
   3c214:	mov	r0, #0
   3c218:	cmp	r3, r5
   3c21c:	bne	3c1d0 <GetDataSlab+0x19cb4>
   3c220:	b	242ac <GetDataSlab+0x1d90>
   3c224:	cmp	r5, #1
   3c228:	blt	242a8 <GetDataSlab+0x1d8c>
   3c22c:	ldr	r0, [sp, #36]	; 0x24
   3c230:	ldr	r1, [sp, #32]
   3c234:	lsl	r3, r9, #1
   3c238:	mov	r7, #0
   3c23c:	mla	r0, r1, r6, r0
   3c240:	ldr	r1, [sp, #52]	; 0x34
   3c244:	add	r1, r1, r0, lsl #1
   3c248:	mul	r0, r4, r6
   3c24c:	lsl	r2, r0, #1
   3c250:	cmp	sl, #1
   3c254:	blt	3c28c <GetDataSlab+0x19d70>
   3c258:	mov	r0, #0
   3c25c:	mov	r6, sl
   3c260:	mov	r5, lr
   3c264:	ldrsh	r4, [r1, -r0]
   3c268:	sub	r0, r0, r3
   3c26c:	subs	r6, r6, #1
   3c270:	vmov	s0, r4
   3c274:	vcvt.f32.s32	s0, s0
   3c278:	vstr	s0, [r5]
   3c27c:	add	r5, r5, #4
   3c280:	bne	3c264 <GetDataSlab+0x19d48>
   3c284:	ldr	r5, [sp, #56]	; 0x38
   3c288:	add	lr, lr, sl, lsl #2
   3c28c:	add	r7, r7, #1
   3c290:	add	r1, r1, r2
   3c294:	mov	r0, #0
   3c298:	cmp	r7, r5
   3c29c:	bne	3c250 <GetDataSlab+0x19d34>
   3c2a0:	b	242ac <GetDataSlab+0x1d90>
   3c2a4:	cmp	r5, #1
   3c2a8:	blt	242a8 <GetDataSlab+0x1d8c>
   3c2ac:	ldr	r0, [sp, #36]	; 0x24
   3c2b0:	ldr	r1, [sp, #32]
   3c2b4:	lsl	r3, r9, #1
   3c2b8:	mov	r7, #0
   3c2bc:	mla	r0, r1, r6, r0
   3c2c0:	ldr	r1, [sp, #52]	; 0x34
   3c2c4:	add	r1, r1, r0, lsl #1
   3c2c8:	mul	r0, r4, r6
   3c2cc:	lsl	r2, r0, #1
   3c2d0:	cmp	sl, #1
   3c2d4:	blt	3c30c <GetDataSlab+0x19df0>
   3c2d8:	mov	r0, #0
   3c2dc:	mov	r6, sl
   3c2e0:	mov	r5, lr
   3c2e4:	ldrh	r4, [r1, -r0]
   3c2e8:	sub	r0, r0, r3
   3c2ec:	subs	r6, r6, #1
   3c2f0:	vmov	s0, r4
   3c2f4:	vcvt.f32.u32	s0, s0
   3c2f8:	vstr	s0, [r5]
   3c2fc:	add	r5, r5, #4
   3c300:	bne	3c2e4 <GetDataSlab+0x19dc8>
   3c304:	ldr	r5, [sp, #56]	; 0x38
   3c308:	add	lr, lr, sl, lsl #2
   3c30c:	add	r7, r7, #1
   3c310:	add	r1, r1, r2
   3c314:	mov	r0, #0
   3c318:	cmp	r7, r5
   3c31c:	bne	3c2d0 <GetDataSlab+0x19db4>
   3c320:	b	242ac <GetDataSlab+0x1d90>
   3c324:	cmp	r5, #1
   3c328:	blt	242a8 <GetDataSlab+0x1d8c>
   3c32c:	ldr	r0, [sp, #36]	; 0x24
   3c330:	ldr	r1, [sp, #32]
   3c334:	mov	r3, #0
   3c338:	mla	r0, r1, r6, r0
   3c33c:	ldr	r1, [sp, #52]	; 0x34
   3c340:	add	r1, r1, r0, lsl #2
   3c344:	mul	r0, r4, r6
   3c348:	lsl	r2, r0, #2
   3c34c:	cmp	sl, #1
   3c350:	blt	3c388 <GetDataSlab+0x19e6c>
   3c354:	mov	r0, #0
   3c358:	mov	r7, sl
   3c35c:	mov	r6, lr
   3c360:	add	r5, r1, r0, lsl #2
   3c364:	add	r0, r0, r9
   3c368:	subs	r7, r7, #1
   3c36c:	vldr	s0, [r5]
   3c370:	vcvt.f32.s32	s0, s0
   3c374:	vstr	s0, [r6]
   3c378:	add	r6, r6, #4
   3c37c:	bne	3c360 <GetDataSlab+0x19e44>
   3c380:	ldr	r5, [sp, #56]	; 0x38
   3c384:	add	lr, lr, sl, lsl #2
   3c388:	add	r3, r3, #1
   3c38c:	add	r1, r1, r2
   3c390:	mov	r0, #0
   3c394:	cmp	r3, r5
   3c398:	bne	3c34c <GetDataSlab+0x19e30>
   3c39c:	b	242ac <GetDataSlab+0x1d90>
   3c3a0:	cmp	r5, #1
   3c3a4:	blt	242a8 <GetDataSlab+0x1d8c>
   3c3a8:	ldr	r0, [sp, #36]	; 0x24
   3c3ac:	ldr	r1, [sp, #32]
   3c3b0:	mov	r3, #0
   3c3b4:	mla	r0, r1, r6, r0
   3c3b8:	ldr	r1, [sp, #52]	; 0x34
   3c3bc:	add	r1, r1, r0, lsl #2
   3c3c0:	mul	r0, r4, r6
   3c3c4:	lsl	r2, r0, #2
   3c3c8:	cmp	sl, #1
   3c3cc:	blt	3c404 <GetDataSlab+0x19ee8>
   3c3d0:	mov	r0, #0
   3c3d4:	mov	r7, sl
   3c3d8:	mov	r6, lr
   3c3dc:	add	r5, r1, r0, lsl #2
   3c3e0:	add	r0, r0, r9
   3c3e4:	subs	r7, r7, #1
   3c3e8:	vldr	s0, [r5]
   3c3ec:	vcvt.f32.u32	s0, s0
   3c3f0:	vstr	s0, [r6]
   3c3f4:	add	r6, r6, #4
   3c3f8:	bne	3c3dc <GetDataSlab+0x19ec0>
   3c3fc:	ldr	r5, [sp, #56]	; 0x38
   3c400:	add	lr, lr, sl, lsl #2
   3c404:	add	r3, r3, #1
   3c408:	add	r1, r1, r2
   3c40c:	mov	r0, #0
   3c410:	cmp	r3, r5
   3c414:	bne	3c3c8 <GetDataSlab+0x19eac>
   3c418:	b	242ac <GetDataSlab+0x1d90>
   3c41c:	cmp	r5, #1
   3c420:	blt	242a8 <GetDataSlab+0x1d8c>
   3c424:	ldr	r0, [sp, #36]	; 0x24
   3c428:	ldr	r1, [sp, #32]
   3c42c:	mov	r3, #0
   3c430:	mla	r0, r1, r6, r0
   3c434:	ldr	r1, [sp, #52]	; 0x34
   3c438:	add	r1, r1, r0, lsl #2
   3c43c:	mul	r0, r4, r6
   3c440:	lsl	r2, r0, #2
   3c444:	cmp	sl, #1
   3c448:	blt	3c478 <GetDataSlab+0x19f5c>
   3c44c:	mov	r6, #0
   3c450:	mov	r0, sl
   3c454:	mov	r7, lr
   3c458:	add	r5, r6, r9
   3c45c:	ldr	r6, [r1, r6, lsl #2]
   3c460:	subs	r0, r0, #1
   3c464:	str	r6, [r7], #4
   3c468:	mov	r6, r5
   3c46c:	bne	3c458 <GetDataSlab+0x19f3c>
   3c470:	ldr	r5, [sp, #56]	; 0x38
   3c474:	add	lr, lr, sl, lsl #2
   3c478:	add	r3, r3, #1
   3c47c:	add	r1, r1, r2
   3c480:	mov	r0, #0
   3c484:	cmp	r3, r5
   3c488:	bne	3c444 <GetDataSlab+0x19f28>
   3c48c:	b	242ac <GetDataSlab+0x1d90>
   3c490:	cmp	r5, #1
   3c494:	blt	242a8 <GetDataSlab+0x1d8c>
   3c498:	ldr	r0, [sp, #36]	; 0x24
   3c49c:	ldr	r1, [sp, #32]
   3c4a0:	lsl	r3, r9, #3
   3c4a4:	mov	r7, #0
   3c4a8:	mla	r0, r1, r6, r0
   3c4ac:	ldr	r1, [sp, #52]	; 0x34
   3c4b0:	add	r1, r1, r0, lsl #3
   3c4b4:	mul	r0, r4, r6
   3c4b8:	lsl	r2, r0, #3
   3c4bc:	cmp	sl, #1
   3c4c0:	blt	3c4f4 <GetDataSlab+0x19fd8>
   3c4c4:	mov	r0, r1
   3c4c8:	mov	r6, sl
   3c4cc:	mov	r5, lr
   3c4d0:	vldr	d16, [r0]
   3c4d4:	add	r0, r0, r3
   3c4d8:	subs	r6, r6, #1
   3c4dc:	vcvt.f32.f64	s0, d16
   3c4e0:	vstr	s0, [r5]
   3c4e4:	add	r5, r5, #4
   3c4e8:	bne	3c4d0 <GetDataSlab+0x19fb4>
   3c4ec:	ldr	r5, [sp, #56]	; 0x38
   3c4f0:	add	lr, lr, sl, lsl #2
   3c4f4:	add	r7, r7, #1
   3c4f8:	add	r1, r1, r2
   3c4fc:	mov	r0, #0
   3c500:	cmp	r7, r5
   3c504:	bne	3c4bc <GetDataSlab+0x19fa0>
   3c508:	b	242ac <GetDataSlab+0x1d90>
   3c50c:	cmp	r5, #1
   3c510:	blt	242a8 <GetDataSlab+0x1d8c>
   3c514:	ldr	r0, [sp, #36]	; 0x24
   3c518:	ldr	r1, [sp, #32]
   3c51c:	mov	r2, r4
   3c520:	lsl	r7, r9, #3
   3c524:	mla	r0, r1, r6, r0
   3c528:	ldr	r1, [sp, #52]	; 0x34
   3c52c:	add	r4, r1, r0, lsl #3
   3c530:	mul	r0, r2, r6
   3c534:	mov	r1, #0
   3c538:	lsl	r0, r0, #3
   3c53c:	str	r0, [sp, #24]
   3c540:	cmp	sl, #1
   3c544:	blt	3c590 <GetDataSlab+0x1a074>
   3c548:	mov	r8, #0
   3c54c:	mov	r5, sl
   3c550:	mov	r6, lr
   3c554:	str	r1, [sp, #28]
   3c558:	str	lr, [sp, #60]	; 0x3c
   3c55c:	mov	r1, r4
   3c560:	ldr	r0, [r1, -r8]!
   3c564:	ldr	r1, [r1, #4]
   3c568:	bl	497ac <__aeabi_l2f>
   3c56c:	str	r0, [r6], #4
   3c570:	sub	r8, r8, r7
   3c574:	subs	r5, r5, #1
   3c578:	bne	3c55c <GetDataSlab+0x1a040>
   3c57c:	ldr	lr, [sp, #60]	; 0x3c
   3c580:	ldr	r5, [sp, #56]	; 0x38
   3c584:	ldr	r6, [sp, #40]	; 0x28
   3c588:	ldr	r1, [sp, #28]
   3c58c:	add	lr, lr, sl, lsl #2
   3c590:	ldr	r0, [sp, #24]
   3c594:	add	r1, r1, #1
   3c598:	cmp	r1, r5
   3c59c:	add	r4, r4, r0
   3c5a0:	bne	3c540 <GetDataSlab+0x1a024>
   3c5a4:	ldr	r4, [sp, #44]	; 0x2c
   3c5a8:	mov	r0, #0
   3c5ac:	ldr	r1, [sp, #48]	; 0x30
   3c5b0:	cmp	r1, #13
   3c5b4:	bne	242ac <GetDataSlab+0x1d90>
   3c5b8:	cmp	r5, #1
   3c5bc:	blt	242a8 <GetDataSlab+0x1d8c>
   3c5c0:	ldr	r0, [sp, #36]	; 0x24
   3c5c4:	ldr	r1, [sp, #32]
   3c5c8:	mov	r2, r4
   3c5cc:	lsl	r7, r9, #3
   3c5d0:	mov	r9, #0
   3c5d4:	mla	r0, r1, r6, r0
   3c5d8:	ldr	r1, [sp, #52]	; 0x34
   3c5dc:	add	r4, r1, r0, lsl #3
   3c5e0:	mul	r0, r2, r6
   3c5e4:	lsl	r0, r0, #3
   3c5e8:	str	r0, [sp, #52]	; 0x34
   3c5ec:	cmp	sl, #1
   3c5f0:	blt	3c630 <GetDataSlab+0x1a114>
   3c5f4:	mov	r6, #0
   3c5f8:	mov	r5, sl
   3c5fc:	mov	r8, lr
   3c600:	str	lr, [sp, #60]	; 0x3c
   3c604:	mov	r1, r4
   3c608:	ldr	r0, [r1, -r6]!
   3c60c:	ldr	r1, [r1, #4]
   3c610:	bl	4979c <__aeabi_ul2f>
   3c614:	str	r0, [r8], #4
   3c618:	sub	r6, r6, r7
   3c61c:	subs	r5, r5, #1
   3c620:	bne	3c604 <GetDataSlab+0x1a0e8>
   3c624:	ldr	lr, [sp, #60]	; 0x3c
   3c628:	ldr	r5, [sp, #56]	; 0x38
   3c62c:	add	lr, lr, sl, lsl #2
   3c630:	ldr	r0, [sp, #52]	; 0x34
   3c634:	add	r9, r9, #1
   3c638:	cmp	r9, r5
   3c63c:	add	r4, r4, r0
   3c640:	mov	r0, #0
   3c644:	bne	3c5ec <GetDataSlab+0x1a0d0>
   3c648:	b	242ac <GetDataSlab+0x1d90>
   3c64c:	cmp	r5, #1
   3c650:	blt	242a8 <GetDataSlab+0x1d8c>
   3c654:	ldr	r0, [sp, #36]	; 0x24
   3c658:	ldr	r2, [sp, #32]
   3c65c:	mov	r7, #0
   3c660:	mla	r0, r2, r6, r0
   3c664:	ldr	r2, [sp, #52]	; 0x34
   3c668:	add	r2, r2, r0
   3c66c:	cmp	sl, #1
   3c670:	blt	3c6b4 <GetDataSlab+0x1a198>
   3c674:	ldr	r5, [fp, #8]
   3c678:	ldr	r4, [fp, #16]
   3c67c:	mov	r0, #0
   3c680:	ldr	r6, [r4]
   3c684:	mul	r6, r6, r0
   3c688:	ldrb	r6, [r2, r6]
   3c68c:	strb	r6, [lr, r0]
   3c690:	add	r0, r0, #1
   3c694:	ldr	sl, [r1]
   3c698:	cmp	r0, sl
   3c69c:	blt	3c680 <GetDataSlab+0x1a164>
   3c6a0:	add	lr, lr, r0
   3c6a4:	ldr	r0, [r3]
   3c6a8:	ldr	r6, [r5]
   3c6ac:	ldr	r4, [r8]
   3c6b0:	mov	r5, r0
   3c6b4:	add	r7, r7, #1
   3c6b8:	mla	r2, r6, r4, r2
   3c6bc:	mov	r0, #0
   3c6c0:	cmp	r7, r5
   3c6c4:	blt	3c66c <GetDataSlab+0x1a150>
   3c6c8:	b	242ac <GetDataSlab+0x1d90>
   3c6cc:	cmp	r5, #1
   3c6d0:	blt	242a8 <GetDataSlab+0x1d8c>
   3c6d4:	ldr	r0, [sp, #36]	; 0x24
   3c6d8:	ldr	r2, [sp, #32]
   3c6dc:	mov	r7, #0
   3c6e0:	mla	r0, r2, r6, r0
   3c6e4:	ldr	r2, [sp, #52]	; 0x34
   3c6e8:	add	r2, r2, r0, lsl #1
   3c6ec:	cmp	sl, #1
   3c6f0:	blt	3c734 <GetDataSlab+0x1a218>
   3c6f4:	ldr	r5, [fp, #8]
   3c6f8:	ldr	r4, [fp, #16]
   3c6fc:	mov	r0, #0
   3c700:	ldr	r6, [r4]
   3c704:	mul	r6, r6, r0
   3c708:	ldrb	r6, [r2, r6, lsl #1]
   3c70c:	strb	r6, [lr, r0]
   3c710:	add	r0, r0, #1
   3c714:	ldr	sl, [r1]
   3c718:	cmp	r0, sl
   3c71c:	blt	3c700 <GetDataSlab+0x1a1e4>
   3c720:	add	lr, lr, r0
   3c724:	ldr	r0, [r3]
   3c728:	ldr	r6, [r5]
   3c72c:	ldr	r4, [r8]
   3c730:	mov	r5, r0
   3c734:	mul	r0, r6, r4
   3c738:	add	r7, r7, #1
   3c73c:	add	r2, r2, r0, lsl #1
   3c740:	mov	r0, #0
   3c744:	cmp	r7, r5
   3c748:	blt	3c6ec <GetDataSlab+0x1a1d0>
   3c74c:	b	242ac <GetDataSlab+0x1d90>
   3c750:	cmp	r5, #1
   3c754:	blt	242a8 <GetDataSlab+0x1d8c>
   3c758:	ldr	r0, [sp, #36]	; 0x24
   3c75c:	ldr	r2, [sp, #32]
   3c760:	mov	r7, #0
   3c764:	mla	r0, r2, r6, r0
   3c768:	ldr	r2, [sp, #52]	; 0x34
   3c76c:	add	r2, r2, r0, lsl #1
   3c770:	cmp	sl, #1
   3c774:	blt	3c7b8 <GetDataSlab+0x1a29c>
   3c778:	ldr	r5, [fp, #8]
   3c77c:	ldr	r4, [fp, #16]
   3c780:	mov	r0, #0
   3c784:	ldr	r6, [r4]
   3c788:	mul	r6, r6, r0
   3c78c:	ldrb	r6, [r2, r6, lsl #1]
   3c790:	strb	r6, [lr, r0]
   3c794:	add	r0, r0, #1
   3c798:	ldr	sl, [r1]
   3c79c:	cmp	r0, sl
   3c7a0:	blt	3c784 <GetDataSlab+0x1a268>
   3c7a4:	add	lr, lr, r0
   3c7a8:	ldr	r0, [r3]
   3c7ac:	ldr	r6, [r5]
   3c7b0:	ldr	r4, [r8]
   3c7b4:	mov	r5, r0
   3c7b8:	mul	r0, r6, r4
   3c7bc:	add	r7, r7, #1
   3c7c0:	add	r2, r2, r0, lsl #1
   3c7c4:	mov	r0, #0
   3c7c8:	cmp	r7, r5
   3c7cc:	blt	3c770 <GetDataSlab+0x1a254>
   3c7d0:	b	242ac <GetDataSlab+0x1d90>
   3c7d4:	cmp	r5, #1
   3c7d8:	blt	242a8 <GetDataSlab+0x1d8c>
   3c7dc:	ldr	r0, [sp, #36]	; 0x24
   3c7e0:	ldr	r2, [sp, #32]
   3c7e4:	mov	r7, #0
   3c7e8:	mla	r0, r2, r6, r0
   3c7ec:	ldr	r2, [sp, #52]	; 0x34
   3c7f0:	add	r2, r2, r0, lsl #2
   3c7f4:	cmp	sl, #1
   3c7f8:	blt	3c83c <GetDataSlab+0x1a320>
   3c7fc:	ldr	r5, [fp, #8]
   3c800:	ldr	r4, [fp, #16]
   3c804:	mov	r0, #0
   3c808:	ldr	r6, [r4]
   3c80c:	mul	r6, r6, r0
   3c810:	ldr	r6, [r2, r6, lsl #2]
   3c814:	strb	r6, [lr, r0]
   3c818:	add	r0, r0, #1
   3c81c:	ldr	sl, [r1]
   3c820:	cmp	r0, sl
   3c824:	blt	3c808 <GetDataSlab+0x1a2ec>
   3c828:	add	lr, lr, r0
   3c82c:	ldr	r0, [r3]
   3c830:	ldr	r6, [r5]
   3c834:	ldr	r4, [r8]
   3c838:	mov	r5, r0
   3c83c:	mul	r0, r6, r4
   3c840:	add	r7, r7, #1
   3c844:	add	r2, r2, r0, lsl #2
   3c848:	mov	r0, #0
   3c84c:	cmp	r7, r5
   3c850:	blt	3c7f4 <GetDataSlab+0x1a2d8>
   3c854:	b	242ac <GetDataSlab+0x1d90>
   3c858:	cmp	r5, #1
   3c85c:	blt	242a8 <GetDataSlab+0x1d8c>
   3c860:	ldr	r0, [sp, #36]	; 0x24
   3c864:	ldr	r2, [sp, #32]
   3c868:	mov	r7, #0
   3c86c:	mla	r0, r2, r6, r0
   3c870:	ldr	r2, [sp, #52]	; 0x34
   3c874:	add	r2, r2, r0, lsl #2
   3c878:	cmp	sl, #1
   3c87c:	blt	3c8c0 <GetDataSlab+0x1a3a4>
   3c880:	ldr	r5, [fp, #8]
   3c884:	ldr	r4, [fp, #16]
   3c888:	mov	r0, #0
   3c88c:	ldr	r6, [r4]
   3c890:	mul	r6, r6, r0
   3c894:	ldr	r6, [r2, r6, lsl #2]
   3c898:	strb	r6, [lr, r0]
   3c89c:	add	r0, r0, #1
   3c8a0:	ldr	sl, [r1]
   3c8a4:	cmp	r0, sl
   3c8a8:	blt	3c88c <GetDataSlab+0x1a370>
   3c8ac:	add	lr, lr, r0
   3c8b0:	ldr	r0, [r3]
   3c8b4:	ldr	r6, [r5]
   3c8b8:	ldr	r4, [r8]
   3c8bc:	mov	r5, r0
   3c8c0:	mul	r0, r6, r4
   3c8c4:	add	r7, r7, #1
   3c8c8:	add	r2, r2, r0, lsl #2
   3c8cc:	mov	r0, #0
   3c8d0:	cmp	r7, r5
   3c8d4:	blt	3c878 <GetDataSlab+0x1a35c>
   3c8d8:	b	242ac <GetDataSlab+0x1d90>
   3c8dc:	cmp	r5, #1
   3c8e0:	blt	242a8 <GetDataSlab+0x1d8c>
   3c8e4:	ldr	r0, [sp, #36]	; 0x24
   3c8e8:	ldr	r2, [sp, #32]
   3c8ec:	mov	r7, #0
   3c8f0:	mla	r0, r2, r6, r0
   3c8f4:	ldr	r2, [sp, #52]	; 0x34
   3c8f8:	add	r2, r2, r0, lsl #2
   3c8fc:	cmp	sl, #1
   3c900:	blt	3c950 <GetDataSlab+0x1a434>
   3c904:	ldr	r5, [fp, #8]
   3c908:	ldr	r4, [fp, #16]
   3c90c:	mov	r0, #0
   3c910:	ldr	r6, [r4]
   3c914:	mul	r6, r6, r0
   3c918:	add	r6, r2, r6, lsl #2
   3c91c:	vldr	s0, [r6]
   3c920:	vcvt.s32.f32	s0, s0
   3c924:	vmov	r6, s0
   3c928:	strb	r6, [lr, r0]
   3c92c:	add	r0, r0, #1
   3c930:	ldr	sl, [r1]
   3c934:	cmp	r0, sl
   3c938:	blt	3c910 <GetDataSlab+0x1a3f4>
   3c93c:	add	lr, lr, r0
   3c940:	ldr	r0, [r3]
   3c944:	ldr	r6, [r5]
   3c948:	ldr	r4, [r8]
   3c94c:	mov	r5, r0
   3c950:	mul	r0, r6, r4
   3c954:	add	r7, r7, #1
   3c958:	add	r2, r2, r0, lsl #2
   3c95c:	mov	r0, #0
   3c960:	cmp	r7, r5
   3c964:	blt	3c8fc <GetDataSlab+0x1a3e0>
   3c968:	b	242ac <GetDataSlab+0x1d90>
   3c96c:	cmp	r5, #1
   3c970:	blt	242a8 <GetDataSlab+0x1d8c>
   3c974:	ldr	r0, [sp, #36]	; 0x24
   3c978:	ldr	r2, [sp, #32]
   3c97c:	mov	r7, #0
   3c980:	mla	r0, r2, r6, r0
   3c984:	ldr	r2, [sp, #52]	; 0x34
   3c988:	add	r2, r2, r0, lsl #3
   3c98c:	cmp	sl, #1
   3c990:	blt	3c9e0 <GetDataSlab+0x1a4c4>
   3c994:	ldr	r5, [fp, #8]
   3c998:	ldr	r4, [fp, #16]
   3c99c:	mov	r0, #0
   3c9a0:	ldr	r6, [r4]
   3c9a4:	mul	r6, r6, r0
   3c9a8:	add	r6, r2, r6, lsl #3
   3c9ac:	vldr	d16, [r6]
   3c9b0:	vcvt.s32.f64	s0, d16
   3c9b4:	vmov	r6, s0
   3c9b8:	strb	r6, [lr, r0]
   3c9bc:	add	r0, r0, #1
   3c9c0:	ldr	sl, [r1]
   3c9c4:	cmp	r0, sl
   3c9c8:	blt	3c9a0 <GetDataSlab+0x1a484>
   3c9cc:	add	lr, lr, r0
   3c9d0:	ldr	r0, [r3]
   3c9d4:	ldr	r6, [r5]
   3c9d8:	ldr	r4, [r8]
   3c9dc:	mov	r5, r0
   3c9e0:	mul	r0, r6, r4
   3c9e4:	add	r7, r7, #1
   3c9e8:	add	r2, r2, r0, lsl #3
   3c9ec:	mov	r0, #0
   3c9f0:	cmp	r7, r5
   3c9f4:	blt	3c98c <GetDataSlab+0x1a470>
   3c9f8:	b	242ac <GetDataSlab+0x1d90>
   3c9fc:	cmp	r5, #1
   3ca00:	blt	242a8 <GetDataSlab+0x1d8c>
   3ca04:	ldr	r0, [sp, #36]	; 0x24
   3ca08:	ldr	r2, [sp, #32]
   3ca0c:	ldr	r4, [fp, #8]
   3ca10:	mla	r0, r2, r6, r0
   3ca14:	ldr	r2, [sp, #52]	; 0x34
   3ca18:	add	r0, r2, r0, lsl #3
   3ca1c:	mov	r2, #0
   3ca20:	cmp	sl, #1
   3ca24:	blt	3ca64 <GetDataSlab+0x1a548>
   3ca28:	ldr	r5, [fp, #16]
   3ca2c:	mov	r7, #0
   3ca30:	ldr	r6, [r5]
   3ca34:	mul	r6, r6, r7
   3ca38:	ldrb	r6, [r0, r6, lsl #3]
   3ca3c:	strb	r6, [lr, r7]
   3ca40:	add	r7, r7, #1
   3ca44:	ldr	sl, [r1]
   3ca48:	cmp	r7, sl
   3ca4c:	blt	3ca30 <GetDataSlab+0x1a514>
   3ca50:	add	lr, lr, r7
   3ca54:	ldr	r5, [r3]
   3ca58:	ldr	r6, [r4]
   3ca5c:	ldr	r7, [r8]
   3ca60:	b	3ca68 <GetDataSlab+0x1a54c>
   3ca64:	ldr	r7, [sp, #44]	; 0x2c
   3ca68:	str	r7, [sp, #44]	; 0x2c
   3ca6c:	mul	r7, r6, r7
   3ca70:	add	r2, r2, #1
   3ca74:	add	r0, r0, r7, lsl #3
   3ca78:	cmp	r2, r5
   3ca7c:	blt	3ca20 <GetDataSlab+0x1a504>
   3ca80:	ldr	r4, [sp, #44]	; 0x2c
   3ca84:	mov	r0, #0
   3ca88:	ldr	r2, [sp, #48]	; 0x30
   3ca8c:	cmp	r2, #13
   3ca90:	bne	242ac <GetDataSlab+0x1d90>
   3ca94:	cmp	r5, #1
   3ca98:	blt	242a8 <GetDataSlab+0x1d8c>
   3ca9c:	ldr	r0, [fp, #12]
   3caa0:	mov	r7, #0
   3caa4:	mov	r2, r0
   3caa8:	ldr	r0, [r0]
   3caac:	ldr	r2, [r2, #4]
   3cab0:	mla	r0, r6, r2, r0
   3cab4:	ldr	r2, [sp, #52]	; 0x34
   3cab8:	add	r2, r2, r0, lsl #3
   3cabc:	cmp	sl, #1
   3cac0:	blt	3cb04 <GetDataSlab+0x1a5e8>
   3cac4:	ldr	r5, [fp, #8]
   3cac8:	ldr	r4, [fp, #16]
   3cacc:	mov	r0, #0
   3cad0:	ldr	r6, [r4]
   3cad4:	mul	r6, r6, r0
   3cad8:	ldrb	r6, [r2, r6, lsl #3]
   3cadc:	strb	r6, [lr, r0]
   3cae0:	add	r0, r0, #1
   3cae4:	ldr	sl, [r1]
   3cae8:	cmp	r0, sl
   3caec:	blt	3cad0 <GetDataSlab+0x1a5b4>
   3caf0:	add	lr, lr, r0
   3caf4:	ldr	r0, [r3]
   3caf8:	ldr	r6, [r5]
   3cafc:	ldr	r4, [r8]
   3cb00:	mov	r5, r0
   3cb04:	mul	r0, r6, r4
   3cb08:	add	r7, r7, #1
   3cb0c:	add	r2, r2, r0, lsl #3
   3cb10:	mov	r0, #0
   3cb14:	cmp	r7, r5
   3cb18:	blt	3cabc <GetDataSlab+0x1a5a0>
   3cb1c:	b	242ac <GetDataSlab+0x1d90>
   3cb20:	cmp	r5, #1
   3cb24:	blt	242a8 <GetDataSlab+0x1d8c>
   3cb28:	ldr	r0, [sp, #36]	; 0x24
   3cb2c:	ldr	r2, [sp, #32]
   3cb30:	mov	r7, #0
   3cb34:	mla	r0, r2, r6, r0
   3cb38:	ldr	r2, [sp, #52]	; 0x34
   3cb3c:	add	r2, r2, r0
   3cb40:	cmp	sl, #1
   3cb44:	blt	3cb88 <GetDataSlab+0x1a66c>
   3cb48:	ldr	r5, [fp, #8]
   3cb4c:	ldr	r4, [fp, #16]
   3cb50:	mov	r0, #0
   3cb54:	ldr	r6, [r4]
   3cb58:	mul	r6, r6, r0
   3cb5c:	ldrb	r6, [r2, r6]
   3cb60:	strb	r6, [lr, r0]
   3cb64:	add	r0, r0, #1
   3cb68:	ldr	sl, [r1]
   3cb6c:	cmp	r0, sl
   3cb70:	blt	3cb54 <GetDataSlab+0x1a638>
   3cb74:	add	lr, lr, r0
   3cb78:	ldr	r0, [r3]
   3cb7c:	ldr	r6, [r5]
   3cb80:	ldr	r4, [r8]
   3cb84:	mov	r5, r0
   3cb88:	add	r7, r7, #1
   3cb8c:	mla	r2, r6, r4, r2
   3cb90:	mov	r0, #0
   3cb94:	cmp	r7, r5
   3cb98:	blt	3cb40 <GetDataSlab+0x1a624>
   3cb9c:	b	242ac <GetDataSlab+0x1d90>
   3cba0:	cmp	r5, #1
   3cba4:	blt	242a8 <GetDataSlab+0x1d8c>
   3cba8:	ldr	r0, [sp, #36]	; 0x24
   3cbac:	ldr	r2, [sp, #32]
   3cbb0:	mov	r7, #0
   3cbb4:	mla	r0, r2, r6, r0
   3cbb8:	ldr	r2, [sp, #52]	; 0x34
   3cbbc:	add	r2, r2, r0, lsl #1
   3cbc0:	cmp	sl, #1
   3cbc4:	blt	3cc08 <GetDataSlab+0x1a6ec>
   3cbc8:	ldr	r5, [fp, #8]
   3cbcc:	ldr	r4, [fp, #16]
   3cbd0:	mov	r0, #0
   3cbd4:	ldr	r6, [r4]
   3cbd8:	mul	r6, r6, r0
   3cbdc:	ldrb	r6, [r2, r6, lsl #1]
   3cbe0:	strb	r6, [lr, r0]
   3cbe4:	add	r0, r0, #1
   3cbe8:	ldr	sl, [r1]
   3cbec:	cmp	r0, sl
   3cbf0:	blt	3cbd4 <GetDataSlab+0x1a6b8>
   3cbf4:	add	lr, lr, r0
   3cbf8:	ldr	r0, [r3]
   3cbfc:	ldr	r6, [r5]
   3cc00:	ldr	r4, [r8]
   3cc04:	mov	r5, r0
   3cc08:	mul	r0, r6, r4
   3cc0c:	add	r7, r7, #1
   3cc10:	add	r2, r2, r0, lsl #1
   3cc14:	mov	r0, #0
   3cc18:	cmp	r7, r5
   3cc1c:	blt	3cbc0 <GetDataSlab+0x1a6a4>
   3cc20:	b	242ac <GetDataSlab+0x1d90>
   3cc24:	cmp	r5, #1
   3cc28:	blt	242a8 <GetDataSlab+0x1d8c>
   3cc2c:	ldr	r0, [sp, #36]	; 0x24
   3cc30:	ldr	r2, [sp, #32]
   3cc34:	mov	r7, #0
   3cc38:	mla	r0, r2, r6, r0
   3cc3c:	ldr	r2, [sp, #52]	; 0x34
   3cc40:	add	r2, r2, r0, lsl #1
   3cc44:	cmp	sl, #1
   3cc48:	blt	3cc8c <GetDataSlab+0x1a770>
   3cc4c:	ldr	r5, [fp, #8]
   3cc50:	ldr	r4, [fp, #16]
   3cc54:	mov	r0, #0
   3cc58:	ldr	r6, [r4]
   3cc5c:	mul	r6, r6, r0
   3cc60:	ldrb	r6, [r2, r6, lsl #1]
   3cc64:	strb	r6, [lr, r0]
   3cc68:	add	r0, r0, #1
   3cc6c:	ldr	sl, [r1]
   3cc70:	cmp	r0, sl
   3cc74:	blt	3cc58 <GetDataSlab+0x1a73c>
   3cc78:	add	lr, lr, r0
   3cc7c:	ldr	r0, [r3]
   3cc80:	ldr	r6, [r5]
   3cc84:	ldr	r4, [r8]
   3cc88:	mov	r5, r0
   3cc8c:	mul	r0, r6, r4
   3cc90:	add	r7, r7, #1
   3cc94:	add	r2, r2, r0, lsl #1
   3cc98:	mov	r0, #0
   3cc9c:	cmp	r7, r5
   3cca0:	blt	3cc44 <GetDataSlab+0x1a728>
   3cca4:	b	242ac <GetDataSlab+0x1d90>
   3cca8:	cmp	r5, #1
   3ccac:	blt	242a8 <GetDataSlab+0x1d8c>
   3ccb0:	ldr	r0, [sp, #36]	; 0x24
   3ccb4:	ldr	r2, [sp, #32]
   3ccb8:	mov	r7, #0
   3ccbc:	mla	r0, r2, r6, r0
   3ccc0:	ldr	r2, [sp, #52]	; 0x34
   3ccc4:	add	r2, r2, r0, lsl #2
   3ccc8:	cmp	sl, #1
   3cccc:	blt	3cd10 <GetDataSlab+0x1a7f4>
   3ccd0:	ldr	r5, [fp, #8]
   3ccd4:	ldr	r4, [fp, #16]
   3ccd8:	mov	r0, #0
   3ccdc:	ldr	r6, [r4]
   3cce0:	mul	r6, r6, r0
   3cce4:	ldr	r6, [r2, r6, lsl #2]
   3cce8:	strb	r6, [lr, r0]
   3ccec:	add	r0, r0, #1
   3ccf0:	ldr	sl, [r1]
   3ccf4:	cmp	r0, sl
   3ccf8:	blt	3ccdc <GetDataSlab+0x1a7c0>
   3ccfc:	add	lr, lr, r0
   3cd00:	ldr	r0, [r3]
   3cd04:	ldr	r6, [r5]
   3cd08:	ldr	r4, [r8]
   3cd0c:	mov	r5, r0
   3cd10:	mul	r0, r6, r4
   3cd14:	add	r7, r7, #1
   3cd18:	add	r2, r2, r0, lsl #2
   3cd1c:	mov	r0, #0
   3cd20:	cmp	r7, r5
   3cd24:	blt	3ccc8 <GetDataSlab+0x1a7ac>
   3cd28:	b	242ac <GetDataSlab+0x1d90>
   3cd2c:	cmp	r5, #1
   3cd30:	blt	242a8 <GetDataSlab+0x1d8c>
   3cd34:	ldr	r0, [sp, #36]	; 0x24
   3cd38:	ldr	r2, [sp, #32]
   3cd3c:	mov	r7, #0
   3cd40:	mla	r0, r2, r6, r0
   3cd44:	ldr	r2, [sp, #52]	; 0x34
   3cd48:	add	r2, r2, r0, lsl #2
   3cd4c:	cmp	sl, #1
   3cd50:	blt	3cd94 <GetDataSlab+0x1a878>
   3cd54:	ldr	r5, [fp, #8]
   3cd58:	ldr	r4, [fp, #16]
   3cd5c:	mov	r0, #0
   3cd60:	ldr	r6, [r4]
   3cd64:	mul	r6, r6, r0
   3cd68:	ldr	r6, [r2, r6, lsl #2]
   3cd6c:	strb	r6, [lr, r0]
   3cd70:	add	r0, r0, #1
   3cd74:	ldr	sl, [r1]
   3cd78:	cmp	r0, sl
   3cd7c:	blt	3cd60 <GetDataSlab+0x1a844>
   3cd80:	add	lr, lr, r0
   3cd84:	ldr	r0, [r3]
   3cd88:	ldr	r6, [r5]
   3cd8c:	ldr	r4, [r8]
   3cd90:	mov	r5, r0
   3cd94:	mul	r0, r6, r4
   3cd98:	add	r7, r7, #1
   3cd9c:	add	r2, r2, r0, lsl #2
   3cda0:	mov	r0, #0
   3cda4:	cmp	r7, r5
   3cda8:	blt	3cd4c <GetDataSlab+0x1a830>
   3cdac:	b	242ac <GetDataSlab+0x1d90>
   3cdb0:	cmp	r5, #1
   3cdb4:	blt	242a8 <GetDataSlab+0x1d8c>
   3cdb8:	ldr	r0, [sp, #36]	; 0x24
   3cdbc:	ldr	r2, [sp, #32]
   3cdc0:	mov	r7, #0
   3cdc4:	mla	r0, r2, r6, r0
   3cdc8:	ldr	r2, [sp, #52]	; 0x34
   3cdcc:	add	r2, r2, r0, lsl #2
   3cdd0:	cmp	sl, #1
   3cdd4:	blt	3ce24 <GetDataSlab+0x1a908>
   3cdd8:	ldr	r5, [fp, #8]
   3cddc:	ldr	r4, [fp, #16]
   3cde0:	mov	r0, #0
   3cde4:	ldr	r6, [r4]
   3cde8:	mul	r6, r6, r0
   3cdec:	add	r6, r2, r6, lsl #2
   3cdf0:	vldr	s0, [r6]
   3cdf4:	vcvt.u32.f32	s0, s0
   3cdf8:	vmov	r6, s0
   3cdfc:	strb	r6, [lr, r0]
   3ce00:	add	r0, r0, #1
   3ce04:	ldr	sl, [r1]
   3ce08:	cmp	r0, sl
   3ce0c:	blt	3cde4 <GetDataSlab+0x1a8c8>
   3ce10:	add	lr, lr, r0
   3ce14:	ldr	r0, [r3]
   3ce18:	ldr	r6, [r5]
   3ce1c:	ldr	r4, [r8]
   3ce20:	mov	r5, r0
   3ce24:	mul	r0, r6, r4
   3ce28:	add	r7, r7, #1
   3ce2c:	add	r2, r2, r0, lsl #2
   3ce30:	mov	r0, #0
   3ce34:	cmp	r7, r5
   3ce38:	blt	3cdd0 <GetDataSlab+0x1a8b4>
   3ce3c:	b	242ac <GetDataSlab+0x1d90>
   3ce40:	cmp	r5, #1
   3ce44:	blt	242a8 <GetDataSlab+0x1d8c>
   3ce48:	ldr	r0, [sp, #36]	; 0x24
   3ce4c:	ldr	r2, [sp, #32]
   3ce50:	mov	r7, #0
   3ce54:	mla	r0, r2, r6, r0
   3ce58:	ldr	r2, [sp, #52]	; 0x34
   3ce5c:	add	r2, r2, r0, lsl #3
   3ce60:	cmp	sl, #1
   3ce64:	blt	3ceb4 <GetDataSlab+0x1a998>
   3ce68:	ldr	r5, [fp, #8]
   3ce6c:	ldr	r4, [fp, #16]
   3ce70:	mov	r0, #0
   3ce74:	ldr	r6, [r4]
   3ce78:	mul	r6, r6, r0
   3ce7c:	add	r6, r2, r6, lsl #3
   3ce80:	vldr	d16, [r6]
   3ce84:	vcvt.u32.f64	s0, d16
   3ce88:	vmov	r6, s0
   3ce8c:	strb	r6, [lr, r0]
   3ce90:	add	r0, r0, #1
   3ce94:	ldr	sl, [r1]
   3ce98:	cmp	r0, sl
   3ce9c:	blt	3ce74 <GetDataSlab+0x1a958>
   3cea0:	add	lr, lr, r0
   3cea4:	ldr	r0, [r3]
   3cea8:	ldr	r6, [r5]
   3ceac:	ldr	r4, [r8]
   3ceb0:	mov	r5, r0
   3ceb4:	mul	r0, r6, r4
   3ceb8:	add	r7, r7, #1
   3cebc:	add	r2, r2, r0, lsl #3
   3cec0:	mov	r0, #0
   3cec4:	cmp	r7, r5
   3cec8:	blt	3ce60 <GetDataSlab+0x1a944>
   3cecc:	b	242ac <GetDataSlab+0x1d90>
   3ced0:	cmp	r5, #1
   3ced4:	blt	242a8 <GetDataSlab+0x1d8c>
   3ced8:	ldr	r0, [sp, #36]	; 0x24
   3cedc:	ldr	r2, [sp, #32]
   3cee0:	ldr	r4, [fp, #8]
   3cee4:	mla	r0, r2, r6, r0
   3cee8:	ldr	r2, [sp, #52]	; 0x34
   3ceec:	add	r0, r2, r0, lsl #3
   3cef0:	mov	r2, #0
   3cef4:	cmp	sl, #1
   3cef8:	blt	3cf38 <GetDataSlab+0x1aa1c>
   3cefc:	ldr	r5, [fp, #16]
   3cf00:	mov	r7, #0
   3cf04:	ldr	r6, [r5]
   3cf08:	mul	r6, r6, r7
   3cf0c:	ldrb	r6, [r0, r6, lsl #3]
   3cf10:	strb	r6, [lr, r7]
   3cf14:	add	r7, r7, #1
   3cf18:	ldr	sl, [r1]
   3cf1c:	cmp	r7, sl
   3cf20:	blt	3cf04 <GetDataSlab+0x1a9e8>
   3cf24:	add	lr, lr, r7
   3cf28:	ldr	r5, [r3]
   3cf2c:	ldr	r6, [r4]
   3cf30:	ldr	r7, [r8]
   3cf34:	b	3cf3c <GetDataSlab+0x1aa20>
   3cf38:	ldr	r7, [sp, #44]	; 0x2c
   3cf3c:	str	r7, [sp, #44]	; 0x2c
   3cf40:	mul	r7, r6, r7
   3cf44:	add	r2, r2, #1
   3cf48:	add	r0, r0, r7, lsl #3
   3cf4c:	cmp	r2, r5
   3cf50:	blt	3cef4 <GetDataSlab+0x1a9d8>
   3cf54:	ldr	r4, [sp, #44]	; 0x2c
   3cf58:	mov	r0, #0
   3cf5c:	ldr	r2, [sp, #48]	; 0x30
   3cf60:	cmp	r2, #13
   3cf64:	bne	242ac <GetDataSlab+0x1d90>
   3cf68:	cmp	r5, #1
   3cf6c:	blt	242a8 <GetDataSlab+0x1d8c>
   3cf70:	ldr	r0, [fp, #12]
   3cf74:	mov	r7, #0
   3cf78:	mov	r2, r0
   3cf7c:	ldr	r0, [r0]
   3cf80:	ldr	r2, [r2, #4]
   3cf84:	mla	r0, r6, r2, r0
   3cf88:	ldr	r2, [sp, #52]	; 0x34
   3cf8c:	add	r2, r2, r0, lsl #3
   3cf90:	cmp	sl, #1
   3cf94:	blt	3cfd8 <GetDataSlab+0x1aabc>
   3cf98:	ldr	r5, [fp, #8]
   3cf9c:	ldr	r4, [fp, #16]
   3cfa0:	mov	r0, #0
   3cfa4:	ldr	r6, [r4]
   3cfa8:	mul	r6, r6, r0
   3cfac:	ldrb	r6, [r2, r6, lsl #3]
   3cfb0:	strb	r6, [lr, r0]
   3cfb4:	add	r0, r0, #1
   3cfb8:	ldr	sl, [r1]
   3cfbc:	cmp	r0, sl
   3cfc0:	blt	3cfa4 <GetDataSlab+0x1aa88>
   3cfc4:	add	lr, lr, r0
   3cfc8:	ldr	r0, [r3]
   3cfcc:	ldr	r6, [r5]
   3cfd0:	ldr	r4, [r8]
   3cfd4:	mov	r5, r0
   3cfd8:	mul	r0, r6, r4
   3cfdc:	add	r7, r7, #1
   3cfe0:	add	r2, r2, r0, lsl #3
   3cfe4:	mov	r0, #0
   3cfe8:	cmp	r7, r5
   3cfec:	blt	3cf90 <GetDataSlab+0x1aa74>
   3cff0:	b	242ac <GetDataSlab+0x1d90>
   3cff4:	cmp	r5, #1
   3cff8:	blt	242a8 <GetDataSlab+0x1d8c>
   3cffc:	ldr	r0, [sp, #36]	; 0x24
   3d000:	ldr	r1, [sp, #32]
   3d004:	mul	r2, r4, r6
   3d008:	mov	r3, #0
   3d00c:	mla	r0, r1, r6, r0
   3d010:	ldr	r1, [sp, #52]	; 0x34
   3d014:	add	r1, r1, r0
   3d018:	cmp	sl, #1
   3d01c:	blt	3d04c <GetDataSlab+0x1ab30>
   3d020:	mov	r6, #0
   3d024:	mov	r0, sl
   3d028:	mov	r7, lr
   3d02c:	add	r5, r6, r9
   3d030:	ldrb	r6, [r1, r6]
   3d034:	subs	r0, r0, #1
   3d038:	strh	r6, [r7], #2
   3d03c:	mov	r6, r5
   3d040:	bne	3d02c <GetDataSlab+0x1ab10>
   3d044:	ldr	r5, [sp, #56]	; 0x38
   3d048:	add	lr, lr, sl, lsl #1
   3d04c:	add	r3, r3, #1
   3d050:	add	r1, r1, r2
   3d054:	mov	r0, #0
   3d058:	cmp	r3, r5
   3d05c:	bne	3d018 <GetDataSlab+0x1aafc>
   3d060:	b	242ac <GetDataSlab+0x1d90>
   3d064:	cmp	r5, #1
   3d068:	blt	242a8 <GetDataSlab+0x1d8c>
   3d06c:	ldr	r0, [sp, #36]	; 0x24
   3d070:	ldr	r1, [sp, #32]
   3d074:	lsl	r3, r9, #1
   3d078:	mov	r7, #0
   3d07c:	mla	r0, r1, r6, r0
   3d080:	ldr	r1, [sp, #52]	; 0x34
   3d084:	add	r1, r1, r0, lsl #1
   3d088:	mul	r0, r4, r6
   3d08c:	lsl	r2, r0, #1
   3d090:	cmp	sl, #1
   3d094:	blt	3d0c4 <GetDataSlab+0x1aba8>
   3d098:	mov	r5, #0
   3d09c:	mov	r0, sl
   3d0a0:	mov	r6, lr
   3d0a4:	sub	r4, r5, r3
   3d0a8:	ldrh	r5, [r1, -r5]
   3d0ac:	subs	r0, r0, #1
   3d0b0:	strh	r5, [r6], #2
   3d0b4:	mov	r5, r4
   3d0b8:	bne	3d0a4 <GetDataSlab+0x1ab88>
   3d0bc:	ldr	r5, [sp, #56]	; 0x38
   3d0c0:	add	lr, lr, sl, lsl #1
   3d0c4:	add	r7, r7, #1
   3d0c8:	add	r1, r1, r2
   3d0cc:	mov	r0, #0
   3d0d0:	cmp	r7, r5
   3d0d4:	bne	3d090 <GetDataSlab+0x1ab74>
   3d0d8:	b	242ac <GetDataSlab+0x1d90>
   3d0dc:	cmp	r5, #1
   3d0e0:	blt	242a8 <GetDataSlab+0x1d8c>
   3d0e4:	ldr	r0, [sp, #36]	; 0x24
   3d0e8:	ldr	r1, [sp, #32]
   3d0ec:	lsl	r3, r9, #1
   3d0f0:	mov	r7, #0
   3d0f4:	mla	r0, r1, r6, r0
   3d0f8:	ldr	r1, [sp, #52]	; 0x34
   3d0fc:	add	r1, r1, r0, lsl #1
   3d100:	mul	r0, r4, r6
   3d104:	lsl	r2, r0, #1
   3d108:	cmp	sl, #1
   3d10c:	blt	3d13c <GetDataSlab+0x1ac20>
   3d110:	mov	r5, #0
   3d114:	mov	r0, sl
   3d118:	mov	r6, lr
   3d11c:	sub	r4, r5, r3
   3d120:	ldrh	r5, [r1, -r5]
   3d124:	subs	r0, r0, #1
   3d128:	strh	r5, [r6], #2
   3d12c:	mov	r5, r4
   3d130:	bne	3d11c <GetDataSlab+0x1ac00>
   3d134:	ldr	r5, [sp, #56]	; 0x38
   3d138:	add	lr, lr, sl, lsl #1
   3d13c:	add	r7, r7, #1
   3d140:	add	r1, r1, r2
   3d144:	mov	r0, #0
   3d148:	cmp	r7, r5
   3d14c:	bne	3d108 <GetDataSlab+0x1abec>
   3d150:	b	242ac <GetDataSlab+0x1d90>
   3d154:	cmp	r5, #1
   3d158:	blt	242a8 <GetDataSlab+0x1d8c>
   3d15c:	ldr	r0, [sp, #36]	; 0x24
   3d160:	ldr	r1, [sp, #32]
   3d164:	lsl	r3, r9, #2
   3d168:	mov	r7, #0
   3d16c:	mla	r0, r1, r6, r0
   3d170:	ldr	r1, [sp, #52]	; 0x34
   3d174:	add	r1, r1, r0, lsl #2
   3d178:	mul	r0, r4, r6
   3d17c:	lsl	r2, r0, #2
   3d180:	cmp	sl, #1
   3d184:	blt	3d1b4 <GetDataSlab+0x1ac98>
   3d188:	mov	r5, #0
   3d18c:	mov	r0, sl
   3d190:	mov	r6, lr
   3d194:	sub	r4, r5, r3
   3d198:	ldr	r5, [r1, -r5]
   3d19c:	subs	r0, r0, #1
   3d1a0:	strh	r5, [r6], #2
   3d1a4:	mov	r5, r4
   3d1a8:	bne	3d194 <GetDataSlab+0x1ac78>
   3d1ac:	ldr	r5, [sp, #56]	; 0x38
   3d1b0:	add	lr, lr, sl, lsl #1
   3d1b4:	add	r7, r7, #1
   3d1b8:	add	r1, r1, r2
   3d1bc:	mov	r0, #0
   3d1c0:	cmp	r7, r5
   3d1c4:	bne	3d180 <GetDataSlab+0x1ac64>
   3d1c8:	b	242ac <GetDataSlab+0x1d90>
   3d1cc:	cmp	r5, #1
   3d1d0:	blt	242a8 <GetDataSlab+0x1d8c>
   3d1d4:	ldr	r0, [sp, #36]	; 0x24
   3d1d8:	ldr	r1, [sp, #32]
   3d1dc:	lsl	r3, r9, #2
   3d1e0:	mov	r7, #0
   3d1e4:	mla	r0, r1, r6, r0
   3d1e8:	ldr	r1, [sp, #52]	; 0x34
   3d1ec:	add	r1, r1, r0, lsl #2
   3d1f0:	mul	r0, r4, r6
   3d1f4:	lsl	r2, r0, #2
   3d1f8:	cmp	sl, #1
   3d1fc:	blt	3d22c <GetDataSlab+0x1ad10>
   3d200:	mov	r5, #0
   3d204:	mov	r0, sl
   3d208:	mov	r6, lr
   3d20c:	sub	r4, r5, r3
   3d210:	ldr	r5, [r1, -r5]
   3d214:	subs	r0, r0, #1
   3d218:	strh	r5, [r6], #2
   3d21c:	mov	r5, r4
   3d220:	bne	3d20c <GetDataSlab+0x1acf0>
   3d224:	ldr	r5, [sp, #56]	; 0x38
   3d228:	add	lr, lr, sl, lsl #1
   3d22c:	add	r7, r7, #1
   3d230:	add	r1, r1, r2
   3d234:	mov	r0, #0
   3d238:	cmp	r7, r5
   3d23c:	bne	3d1f8 <GetDataSlab+0x1acdc>
   3d240:	b	242ac <GetDataSlab+0x1d90>
   3d244:	cmp	r5, #1
   3d248:	blt	242a8 <GetDataSlab+0x1d8c>
   3d24c:	ldr	r0, [sp, #36]	; 0x24
   3d250:	ldr	r1, [sp, #32]
   3d254:	lsl	r3, r9, #2
   3d258:	mov	r7, #0
   3d25c:	mla	r0, r1, r6, r0
   3d260:	ldr	r1, [sp, #52]	; 0x34
   3d264:	add	r1, r1, r0, lsl #2
   3d268:	mul	r0, r4, r6
   3d26c:	lsl	r2, r0, #2
   3d270:	cmp	sl, #1
   3d274:	blt	3d2a8 <GetDataSlab+0x1ad8c>
   3d278:	mov	r0, r1
   3d27c:	mov	r6, sl
   3d280:	mov	r5, lr
   3d284:	vldr	s0, [r0]
   3d288:	add	r0, r0, r3
   3d28c:	subs	r6, r6, #1
   3d290:	vcvt.s32.f32	s0, s0
   3d294:	vmov	r4, s0
   3d298:	strh	r4, [r5], #2
   3d29c:	bne	3d284 <GetDataSlab+0x1ad68>
   3d2a0:	ldr	r5, [sp, #56]	; 0x38
   3d2a4:	add	lr, lr, sl, lsl #1
   3d2a8:	add	r7, r7, #1
   3d2ac:	add	r1, r1, r2
   3d2b0:	mov	r0, #0
   3d2b4:	cmp	r7, r5
   3d2b8:	bne	3d270 <GetDataSlab+0x1ad54>
   3d2bc:	b	242ac <GetDataSlab+0x1d90>
   3d2c0:	cmp	r5, #1
   3d2c4:	blt	242a8 <GetDataSlab+0x1d8c>
   3d2c8:	ldr	r0, [sp, #36]	; 0x24
   3d2cc:	ldr	r1, [sp, #32]
   3d2d0:	lsl	r3, r9, #3
   3d2d4:	mov	r7, #0
   3d2d8:	mla	r0, r1, r6, r0
   3d2dc:	ldr	r1, [sp, #52]	; 0x34
   3d2e0:	add	r1, r1, r0, lsl #3
   3d2e4:	mul	r0, r4, r6
   3d2e8:	lsl	r2, r0, #3
   3d2ec:	cmp	sl, #1
   3d2f0:	blt	3d324 <GetDataSlab+0x1ae08>
   3d2f4:	mov	r0, r1
   3d2f8:	mov	r6, sl
   3d2fc:	mov	r5, lr
   3d300:	vldr	d16, [r0]
   3d304:	add	r0, r0, r3
   3d308:	subs	r6, r6, #1
   3d30c:	vcvt.s32.f64	s0, d16
   3d310:	vmov	r4, s0
   3d314:	strh	r4, [r5], #2
   3d318:	bne	3d300 <GetDataSlab+0x1ade4>
   3d31c:	ldr	r5, [sp, #56]	; 0x38
   3d320:	add	lr, lr, sl, lsl #1
   3d324:	add	r7, r7, #1
   3d328:	add	r1, r1, r2
   3d32c:	mov	r0, #0
   3d330:	cmp	r7, r5
   3d334:	bne	3d2ec <GetDataSlab+0x1add0>
   3d338:	b	242ac <GetDataSlab+0x1d90>
   3d33c:	cmp	r5, #1
   3d340:	blt	242a8 <GetDataSlab+0x1d8c>
   3d344:	ldr	r0, [sp, #36]	; 0x24
   3d348:	ldr	r1, [sp, #32]
   3d34c:	lsl	r2, r9, #3
   3d350:	mov	r3, #0
   3d354:	mla	r0, r1, r6, r0
   3d358:	ldr	r1, [sp, #52]	; 0x34
   3d35c:	add	r0, r1, r0, lsl #3
   3d360:	mul	r1, r4, r6
   3d364:	lsl	r1, r1, #3
   3d368:	cmp	sl, #1
   3d36c:	blt	3d3a4 <GetDataSlab+0x1ae88>
   3d370:	mov	r5, #0
   3d374:	mov	r7, sl
   3d378:	mov	r6, lr
   3d37c:	sub	r4, r5, r2
   3d380:	ldrh	r5, [r0, -r5]
   3d384:	subs	r7, r7, #1
   3d388:	strh	r5, [r6], #2
   3d38c:	mov	r5, r4
   3d390:	bne	3d37c <GetDataSlab+0x1ae60>
   3d394:	ldr	r5, [sp, #56]	; 0x38
   3d398:	ldr	r6, [sp, #40]	; 0x28
   3d39c:	ldr	r4, [sp, #44]	; 0x2c
   3d3a0:	add	lr, lr, sl, lsl #1
   3d3a4:	add	r3, r3, #1
   3d3a8:	add	r0, r0, r1
   3d3ac:	cmp	r3, r5
   3d3b0:	bne	3d368 <GetDataSlab+0x1ae4c>
   3d3b4:	mov	r0, #0
   3d3b8:	ldr	r1, [sp, #48]	; 0x30
   3d3bc:	cmp	r1, #13
   3d3c0:	bne	242ac <GetDataSlab+0x1d90>
   3d3c4:	cmp	r5, #1
   3d3c8:	blt	242a8 <GetDataSlab+0x1d8c>
   3d3cc:	ldr	r0, [sp, #36]	; 0x24
   3d3d0:	ldr	r1, [sp, #32]
   3d3d4:	lsl	r3, r9, #3
   3d3d8:	mov	r7, #0
   3d3dc:	mla	r0, r1, r6, r0
   3d3e0:	ldr	r1, [sp, #52]	; 0x34
   3d3e4:	add	r1, r1, r0, lsl #3
   3d3e8:	mul	r0, r4, r6
   3d3ec:	lsl	r2, r0, #3
   3d3f0:	cmp	sl, #1
   3d3f4:	blt	3d424 <GetDataSlab+0x1af08>
   3d3f8:	mov	r5, #0
   3d3fc:	mov	r0, sl
   3d400:	mov	r6, lr
   3d404:	sub	r4, r5, r3
   3d408:	ldrh	r5, [r1, -r5]
   3d40c:	subs	r0, r0, #1
   3d410:	strh	r5, [r6], #2
   3d414:	mov	r5, r4
   3d418:	bne	3d404 <GetDataSlab+0x1aee8>
   3d41c:	ldr	r5, [sp, #56]	; 0x38
   3d420:	add	lr, lr, sl, lsl #1
   3d424:	add	r7, r7, #1
   3d428:	add	r1, r1, r2
   3d42c:	mov	r0, #0
   3d430:	cmp	r7, r5
   3d434:	bne	3d3f0 <GetDataSlab+0x1aed4>
   3d438:	b	242ac <GetDataSlab+0x1d90>
   3d43c:	cmp	r5, #1
   3d440:	blt	242a8 <GetDataSlab+0x1d8c>
   3d444:	ldr	r0, [sp, #36]	; 0x24
   3d448:	ldr	r1, [sp, #32]
   3d44c:	mul	r2, r4, r6
   3d450:	mov	r3, #0
   3d454:	mla	r0, r1, r6, r0
   3d458:	ldr	r1, [sp, #52]	; 0x34
   3d45c:	add	r1, r1, r0
   3d460:	cmp	sl, #1
   3d464:	blt	3d494 <GetDataSlab+0x1af78>
   3d468:	mov	r6, #0
   3d46c:	mov	r0, sl
   3d470:	mov	r7, lr
   3d474:	add	r5, r6, r9
   3d478:	ldrb	r6, [r1, r6]
   3d47c:	subs	r0, r0, #1
   3d480:	strh	r6, [r7], #2
   3d484:	mov	r6, r5
   3d488:	bne	3d474 <GetDataSlab+0x1af58>
   3d48c:	ldr	r5, [sp, #56]	; 0x38
   3d490:	add	lr, lr, sl, lsl #1
   3d494:	add	r3, r3, #1
   3d498:	add	r1, r1, r2
   3d49c:	mov	r0, #0
   3d4a0:	cmp	r3, r5
   3d4a4:	bne	3d460 <GetDataSlab+0x1af44>
   3d4a8:	b	242ac <GetDataSlab+0x1d90>
   3d4ac:	cmp	r5, #1
   3d4b0:	blt	242a8 <GetDataSlab+0x1d8c>
   3d4b4:	ldr	r0, [sp, #36]	; 0x24
   3d4b8:	ldr	r1, [sp, #32]
   3d4bc:	lsl	r3, r9, #1
   3d4c0:	mov	r7, #0
   3d4c4:	mla	r0, r1, r6, r0
   3d4c8:	ldr	r1, [sp, #52]	; 0x34
   3d4cc:	add	r1, r1, r0, lsl #1
   3d4d0:	mul	r0, r4, r6
   3d4d4:	lsl	r2, r0, #1
   3d4d8:	cmp	sl, #1
   3d4dc:	blt	3d50c <GetDataSlab+0x1aff0>
   3d4e0:	mov	r5, #0
   3d4e4:	mov	r0, sl
   3d4e8:	mov	r6, lr
   3d4ec:	sub	r4, r5, r3
   3d4f0:	ldrh	r5, [r1, -r5]
   3d4f4:	subs	r0, r0, #1
   3d4f8:	strh	r5, [r6], #2
   3d4fc:	mov	r5, r4
   3d500:	bne	3d4ec <GetDataSlab+0x1afd0>
   3d504:	ldr	r5, [sp, #56]	; 0x38
   3d508:	add	lr, lr, sl, lsl #1
   3d50c:	add	r7, r7, #1
   3d510:	add	r1, r1, r2
   3d514:	mov	r0, #0
   3d518:	cmp	r7, r5
   3d51c:	bne	3d4d8 <GetDataSlab+0x1afbc>
   3d520:	b	242ac <GetDataSlab+0x1d90>
   3d524:	cmp	r5, #1
   3d528:	blt	242a8 <GetDataSlab+0x1d8c>
   3d52c:	ldr	r0, [sp, #36]	; 0x24
   3d530:	ldr	r1, [sp, #32]
   3d534:	lsl	r3, r9, #1
   3d538:	mov	r7, #0
   3d53c:	mla	r0, r1, r6, r0
   3d540:	ldr	r1, [sp, #52]	; 0x34
   3d544:	add	r1, r1, r0, lsl #1
   3d548:	mul	r0, r4, r6
   3d54c:	lsl	r2, r0, #1
   3d550:	cmp	sl, #1
   3d554:	blt	3d584 <GetDataSlab+0x1b068>
   3d558:	mov	r5, #0
   3d55c:	mov	r0, sl
   3d560:	mov	r6, lr
   3d564:	sub	r4, r5, r3
   3d568:	ldrh	r5, [r1, -r5]
   3d56c:	subs	r0, r0, #1
   3d570:	strh	r5, [r6], #2
   3d574:	mov	r5, r4
   3d578:	bne	3d564 <GetDataSlab+0x1b048>
   3d57c:	ldr	r5, [sp, #56]	; 0x38
   3d580:	add	lr, lr, sl, lsl #1
   3d584:	add	r7, r7, #1
   3d588:	add	r1, r1, r2
   3d58c:	mov	r0, #0
   3d590:	cmp	r7, r5
   3d594:	bne	3d550 <GetDataSlab+0x1b034>
   3d598:	b	242ac <GetDataSlab+0x1d90>
   3d59c:	cmp	r5, #1
   3d5a0:	blt	242a8 <GetDataSlab+0x1d8c>
   3d5a4:	ldr	r0, [sp, #36]	; 0x24
   3d5a8:	ldr	r1, [sp, #32]
   3d5ac:	lsl	r3, r9, #2
   3d5b0:	mov	r7, #0
   3d5b4:	mla	r0, r1, r6, r0
   3d5b8:	ldr	r1, [sp, #52]	; 0x34
   3d5bc:	add	r1, r1, r0, lsl #2
   3d5c0:	mul	r0, r4, r6
   3d5c4:	lsl	r2, r0, #2
   3d5c8:	cmp	sl, #1
   3d5cc:	blt	3d5fc <GetDataSlab+0x1b0e0>
   3d5d0:	mov	r5, #0
   3d5d4:	mov	r0, sl
   3d5d8:	mov	r6, lr
   3d5dc:	sub	r4, r5, r3
   3d5e0:	ldr	r5, [r1, -r5]
   3d5e4:	subs	r0, r0, #1
   3d5e8:	strh	r5, [r6], #2
   3d5ec:	mov	r5, r4
   3d5f0:	bne	3d5dc <GetDataSlab+0x1b0c0>
   3d5f4:	ldr	r5, [sp, #56]	; 0x38
   3d5f8:	add	lr, lr, sl, lsl #1
   3d5fc:	add	r7, r7, #1
   3d600:	add	r1, r1, r2
   3d604:	mov	r0, #0
   3d608:	cmp	r7, r5
   3d60c:	bne	3d5c8 <GetDataSlab+0x1b0ac>
   3d610:	b	242ac <GetDataSlab+0x1d90>
   3d614:	cmp	r5, #1
   3d618:	blt	242a8 <GetDataSlab+0x1d8c>
   3d61c:	ldr	r0, [sp, #36]	; 0x24
   3d620:	ldr	r1, [sp, #32]
   3d624:	lsl	r3, r9, #2
   3d628:	mov	r7, #0
   3d62c:	mla	r0, r1, r6, r0
   3d630:	ldr	r1, [sp, #52]	; 0x34
   3d634:	add	r1, r1, r0, lsl #2
   3d638:	mul	r0, r4, r6
   3d63c:	lsl	r2, r0, #2
   3d640:	cmp	sl, #1
   3d644:	blt	3d674 <GetDataSlab+0x1b158>
   3d648:	mov	r5, #0
   3d64c:	mov	r0, sl
   3d650:	mov	r6, lr
   3d654:	sub	r4, r5, r3
   3d658:	ldr	r5, [r1, -r5]
   3d65c:	subs	r0, r0, #1
   3d660:	strh	r5, [r6], #2
   3d664:	mov	r5, r4
   3d668:	bne	3d654 <GetDataSlab+0x1b138>
   3d66c:	ldr	r5, [sp, #56]	; 0x38
   3d670:	add	lr, lr, sl, lsl #1
   3d674:	add	r7, r7, #1
   3d678:	add	r1, r1, r2
   3d67c:	mov	r0, #0
   3d680:	cmp	r7, r5
   3d684:	bne	3d640 <GetDataSlab+0x1b124>
   3d688:	b	242ac <GetDataSlab+0x1d90>
   3d68c:	cmp	r5, #1
   3d690:	blt	242a8 <GetDataSlab+0x1d8c>
   3d694:	ldr	r0, [sp, #36]	; 0x24
   3d698:	ldr	r1, [sp, #32]
   3d69c:	lsl	r3, r9, #2
   3d6a0:	mov	r7, #0
   3d6a4:	mla	r0, r1, r6, r0
   3d6a8:	ldr	r1, [sp, #52]	; 0x34
   3d6ac:	add	r1, r1, r0, lsl #2
   3d6b0:	mul	r0, r4, r6
   3d6b4:	lsl	r2, r0, #2
   3d6b8:	cmp	sl, #1
   3d6bc:	blt	3d6f0 <GetDataSlab+0x1b1d4>
   3d6c0:	mov	r0, r1
   3d6c4:	mov	r6, sl
   3d6c8:	mov	r5, lr
   3d6cc:	vldr	s0, [r0]
   3d6d0:	add	r0, r0, r3
   3d6d4:	subs	r6, r6, #1
   3d6d8:	vcvt.u32.f32	s0, s0
   3d6dc:	vmov	r4, s0
   3d6e0:	strh	r4, [r5], #2
   3d6e4:	bne	3d6cc <GetDataSlab+0x1b1b0>
   3d6e8:	ldr	r5, [sp, #56]	; 0x38
   3d6ec:	add	lr, lr, sl, lsl #1
   3d6f0:	add	r7, r7, #1
   3d6f4:	add	r1, r1, r2
   3d6f8:	mov	r0, #0
   3d6fc:	cmp	r7, r5
   3d700:	bne	3d6b8 <GetDataSlab+0x1b19c>
   3d704:	b	242ac <GetDataSlab+0x1d90>
   3d708:	cmp	r5, #1
   3d70c:	blt	242a8 <GetDataSlab+0x1d8c>
   3d710:	ldr	r0, [sp, #36]	; 0x24
   3d714:	ldr	r1, [sp, #32]
   3d718:	lsl	r3, r9, #3
   3d71c:	mov	r7, #0
   3d720:	mla	r0, r1, r6, r0
   3d724:	ldr	r1, [sp, #52]	; 0x34
   3d728:	add	r1, r1, r0, lsl #3
   3d72c:	mul	r0, r4, r6
   3d730:	lsl	r2, r0, #3
   3d734:	cmp	sl, #1
   3d738:	blt	3d76c <GetDataSlab+0x1b250>
   3d73c:	mov	r0, r1
   3d740:	mov	r6, sl
   3d744:	mov	r5, lr
   3d748:	vldr	d16, [r0]
   3d74c:	add	r0, r0, r3
   3d750:	subs	r6, r6, #1
   3d754:	vcvt.u32.f64	s0, d16
   3d758:	vmov	r4, s0
   3d75c:	strh	r4, [r5], #2
   3d760:	bne	3d748 <GetDataSlab+0x1b22c>
   3d764:	ldr	r5, [sp, #56]	; 0x38
   3d768:	add	lr, lr, sl, lsl #1
   3d76c:	add	r7, r7, #1
   3d770:	add	r1, r1, r2
   3d774:	mov	r0, #0
   3d778:	cmp	r7, r5
   3d77c:	bne	3d734 <GetDataSlab+0x1b218>
   3d780:	b	242ac <GetDataSlab+0x1d90>
   3d784:	cmp	r5, #1
   3d788:	blt	242a8 <GetDataSlab+0x1d8c>
   3d78c:	ldr	r0, [sp, #36]	; 0x24
   3d790:	ldr	r1, [sp, #32]
   3d794:	lsl	r2, r9, #3
   3d798:	mov	r3, #0
   3d79c:	mla	r0, r1, r6, r0
   3d7a0:	ldr	r1, [sp, #52]	; 0x34
   3d7a4:	add	r0, r1, r0, lsl #3
   3d7a8:	mul	r1, r4, r6
   3d7ac:	lsl	r1, r1, #3
   3d7b0:	cmp	sl, #1
   3d7b4:	blt	3d7ec <GetDataSlab+0x1b2d0>
   3d7b8:	mov	r5, #0
   3d7bc:	mov	r7, sl
   3d7c0:	mov	r6, lr
   3d7c4:	sub	r4, r5, r2
   3d7c8:	ldrh	r5, [r0, -r5]
   3d7cc:	subs	r7, r7, #1
   3d7d0:	strh	r5, [r6], #2
   3d7d4:	mov	r5, r4
   3d7d8:	bne	3d7c4 <GetDataSlab+0x1b2a8>
   3d7dc:	ldr	r5, [sp, #56]	; 0x38
   3d7e0:	ldr	r6, [sp, #40]	; 0x28
   3d7e4:	ldr	r4, [sp, #44]	; 0x2c
   3d7e8:	add	lr, lr, sl, lsl #1
   3d7ec:	add	r3, r3, #1
   3d7f0:	add	r0, r0, r1
   3d7f4:	cmp	r3, r5
   3d7f8:	bne	3d7b0 <GetDataSlab+0x1b294>
   3d7fc:	mov	r0, #0
   3d800:	ldr	r1, [sp, #48]	; 0x30
   3d804:	cmp	r1, #13
   3d808:	bne	242ac <GetDataSlab+0x1d90>
   3d80c:	cmp	r5, #1
   3d810:	blt	242a8 <GetDataSlab+0x1d8c>
   3d814:	ldr	r0, [sp, #36]	; 0x24
   3d818:	ldr	r1, [sp, #32]
   3d81c:	lsl	r3, r9, #3
   3d820:	mov	r7, #0
   3d824:	mla	r0, r1, r6, r0
   3d828:	ldr	r1, [sp, #52]	; 0x34
   3d82c:	add	r1, r1, r0, lsl #3
   3d830:	mul	r0, r4, r6
   3d834:	lsl	r2, r0, #3
   3d838:	cmp	sl, #1
   3d83c:	blt	3d86c <GetDataSlab+0x1b350>
   3d840:	mov	r5, #0
   3d844:	mov	r0, sl
   3d848:	mov	r6, lr
   3d84c:	sub	r4, r5, r3
   3d850:	ldrh	r5, [r1, -r5]
   3d854:	subs	r0, r0, #1
   3d858:	strh	r5, [r6], #2
   3d85c:	mov	r5, r4
   3d860:	bne	3d84c <GetDataSlab+0x1b330>
   3d864:	ldr	r5, [sp, #56]	; 0x38
   3d868:	add	lr, lr, sl, lsl #1
   3d86c:	add	r7, r7, #1
   3d870:	add	r1, r1, r2
   3d874:	mov	r0, #0
   3d878:	cmp	r7, r5
   3d87c:	bne	3d838 <GetDataSlab+0x1b31c>
   3d880:	b	242ac <GetDataSlab+0x1d90>
   3d884:	cmp	r5, #1
   3d888:	blt	242a8 <GetDataSlab+0x1d8c>
   3d88c:	ldr	r0, [sp, #36]	; 0x24
   3d890:	ldr	r2, [sp, #32]
   3d894:	mov	r7, #0
   3d898:	mla	r0, r2, r6, r0
   3d89c:	ldr	r2, [sp, #52]	; 0x34
   3d8a0:	add	r2, r2, r0
   3d8a4:	cmp	sl, #1
   3d8a8:	blt	3d8f4 <GetDataSlab+0x1b3d8>
   3d8ac:	ldr	r4, [fp, #8]
   3d8b0:	mov	r0, #0
   3d8b4:	mov	r6, #0
   3d8b8:	mov	ip, r4
   3d8bc:	ldr	r4, [fp, #16]
   3d8c0:	ldr	r5, [r4]
   3d8c4:	add	r0, r0, #4
   3d8c8:	mul	r5, r5, r6
   3d8cc:	ldrb	r5, [r2, r5]
   3d8d0:	str	r5, [lr, r6, lsl #2]
   3d8d4:	add	r6, r6, #1
   3d8d8:	ldr	sl, [r1]
   3d8dc:	cmp	r6, sl
   3d8e0:	blt	3d8c0 <GetDataSlab+0x1b3a4>
   3d8e4:	ldr	r5, [r3]
   3d8e8:	ldr	r6, [ip]
   3d8ec:	ldr	r4, [r8]
   3d8f0:	add	lr, lr, r0
   3d8f4:	add	r7, r7, #1
   3d8f8:	mla	r2, r6, r4, r2
   3d8fc:	mov	r0, #0
   3d900:	cmp	r7, r5
   3d904:	blt	3d8a4 <GetDataSlab+0x1b388>
   3d908:	b	242ac <GetDataSlab+0x1d90>
   3d90c:	cmp	r5, #1
   3d910:	blt	242a8 <GetDataSlab+0x1d8c>
   3d914:	ldr	r0, [sp, #36]	; 0x24
   3d918:	ldr	r2, [sp, #32]
   3d91c:	mov	r7, #0
   3d920:	mla	r0, r2, r6, r0
   3d924:	ldr	r2, [sp, #52]	; 0x34
   3d928:	add	r2, r2, r0, lsl #1
   3d92c:	cmp	sl, #1
   3d930:	blt	3d980 <GetDataSlab+0x1b464>
   3d934:	ldr	r4, [fp, #8]
   3d938:	mov	r0, #0
   3d93c:	mov	r6, #0
   3d940:	mov	ip, r4
   3d944:	ldr	r4, [fp, #16]
   3d948:	ldr	r5, [r4]
   3d94c:	add	r0, r0, #4
   3d950:	mul	r5, r5, r6
   3d954:	add	r5, r2, r5, lsl #1
   3d958:	ldrsh	r5, [r5]
   3d95c:	str	r5, [lr, r6, lsl #2]
   3d960:	add	r6, r6, #1
   3d964:	ldr	sl, [r1]
   3d968:	cmp	r6, sl
   3d96c:	blt	3d948 <GetDataSlab+0x1b42c>
   3d970:	ldr	r5, [r3]
   3d974:	ldr	r6, [ip]
   3d978:	ldr	r4, [r8]
   3d97c:	add	lr, lr, r0
   3d980:	mul	r0, r6, r4
   3d984:	add	r7, r7, #1
   3d988:	add	r2, r2, r0, lsl #1
   3d98c:	mov	r0, #0
   3d990:	cmp	r7, r5
   3d994:	blt	3d92c <GetDataSlab+0x1b410>
   3d998:	b	242ac <GetDataSlab+0x1d90>
   3d99c:	cmp	r5, #1
   3d9a0:	blt	242a8 <GetDataSlab+0x1d8c>
   3d9a4:	ldr	r0, [sp, #36]	; 0x24
   3d9a8:	ldr	r2, [sp, #32]
   3d9ac:	mov	r7, #0
   3d9b0:	mla	r0, r2, r6, r0
   3d9b4:	ldr	r2, [sp, #52]	; 0x34
   3d9b8:	add	r2, r2, r0, lsl #1
   3d9bc:	cmp	sl, #1
   3d9c0:	blt	3da10 <GetDataSlab+0x1b4f4>
   3d9c4:	ldr	r4, [fp, #8]
   3d9c8:	mov	r0, #0
   3d9cc:	mov	r6, #0
   3d9d0:	mov	ip, r4
   3d9d4:	ldr	r4, [fp, #16]
   3d9d8:	ldr	r5, [r4]
   3d9dc:	add	r0, r0, #4
   3d9e0:	mul	r5, r5, r6
   3d9e4:	add	r5, r2, r5, lsl #1
   3d9e8:	ldrh	r5, [r5]
   3d9ec:	str	r5, [lr, r6, lsl #2]
   3d9f0:	add	r6, r6, #1
   3d9f4:	ldr	sl, [r1]
   3d9f8:	cmp	r6, sl
   3d9fc:	blt	3d9d8 <GetDataSlab+0x1b4bc>
   3da00:	ldr	r5, [r3]
   3da04:	ldr	r6, [ip]
   3da08:	ldr	r4, [r8]
   3da0c:	add	lr, lr, r0
   3da10:	mul	r0, r6, r4
   3da14:	add	r7, r7, #1
   3da18:	add	r2, r2, r0, lsl #1
   3da1c:	mov	r0, #0
   3da20:	cmp	r7, r5
   3da24:	blt	3d9bc <GetDataSlab+0x1b4a0>
   3da28:	b	242ac <GetDataSlab+0x1d90>
   3da2c:	cmp	r5, #1
   3da30:	blt	242a8 <GetDataSlab+0x1d8c>
   3da34:	ldr	r0, [sp, #36]	; 0x24
   3da38:	ldr	r2, [sp, #32]
   3da3c:	mov	r7, #0
   3da40:	mla	r0, r2, r6, r0
   3da44:	ldr	r2, [sp, #52]	; 0x34
   3da48:	add	r2, r2, r0, lsl #2
   3da4c:	cmp	sl, #1
   3da50:	blt	3da9c <GetDataSlab+0x1b580>
   3da54:	ldr	r4, [fp, #8]
   3da58:	mov	r0, #0
   3da5c:	mov	r6, #0
   3da60:	mov	ip, r4
   3da64:	ldr	r4, [fp, #16]
   3da68:	ldr	r5, [r4]
   3da6c:	add	r0, r0, #4
   3da70:	mul	r5, r5, r6
   3da74:	ldr	r5, [r2, r5, lsl #2]
   3da78:	str	r5, [lr, r6, lsl #2]
   3da7c:	add	r6, r6, #1
   3da80:	ldr	sl, [r1]
   3da84:	cmp	r6, sl
   3da88:	blt	3da68 <GetDataSlab+0x1b54c>
   3da8c:	ldr	r5, [r3]
   3da90:	ldr	r6, [ip]
   3da94:	ldr	r4, [r8]
   3da98:	add	lr, lr, r0
   3da9c:	mul	r0, r6, r4
   3daa0:	add	r7, r7, #1
   3daa4:	add	r2, r2, r0, lsl #2
   3daa8:	mov	r0, #0
   3daac:	cmp	r7, r5
   3dab0:	blt	3da4c <GetDataSlab+0x1b530>
   3dab4:	b	242ac <GetDataSlab+0x1d90>
   3dab8:	cmp	r5, #1
   3dabc:	blt	242a8 <GetDataSlab+0x1d8c>
   3dac0:	ldr	r0, [sp, #36]	; 0x24
   3dac4:	ldr	r2, [sp, #32]
   3dac8:	mov	r7, #0
   3dacc:	mla	r0, r2, r6, r0
   3dad0:	ldr	r2, [sp, #52]	; 0x34
   3dad4:	add	r2, r2, r0, lsl #2
   3dad8:	cmp	sl, #1
   3dadc:	blt	3db28 <GetDataSlab+0x1b60c>
   3dae0:	ldr	r4, [fp, #8]
   3dae4:	mov	r0, #0
   3dae8:	mov	r6, #0
   3daec:	mov	ip, r4
   3daf0:	ldr	r4, [fp, #16]
   3daf4:	ldr	r5, [r4]
   3daf8:	add	r0, r0, #4
   3dafc:	mul	r5, r5, r6
   3db00:	ldr	r5, [r2, r5, lsl #2]
   3db04:	str	r5, [lr, r6, lsl #2]
   3db08:	add	r6, r6, #1
   3db0c:	ldr	sl, [r1]
   3db10:	cmp	r6, sl
   3db14:	blt	3daf4 <GetDataSlab+0x1b5d8>
   3db18:	ldr	r5, [r3]
   3db1c:	ldr	r6, [ip]
   3db20:	ldr	r4, [r8]
   3db24:	add	lr, lr, r0
   3db28:	mul	r0, r6, r4
   3db2c:	add	r7, r7, #1
   3db30:	add	r2, r2, r0, lsl #2
   3db34:	mov	r0, #0
   3db38:	cmp	r7, r5
   3db3c:	blt	3dad8 <GetDataSlab+0x1b5bc>
   3db40:	b	242ac <GetDataSlab+0x1d90>
   3db44:	cmp	r5, #1
   3db48:	blt	242a8 <GetDataSlab+0x1d8c>
   3db4c:	ldr	r0, [sp, #36]	; 0x24
   3db50:	ldr	r2, [sp, #32]
   3db54:	mov	r7, #0
   3db58:	mla	r0, r2, r6, r0
   3db5c:	ldr	r2, [sp, #52]	; 0x34
   3db60:	add	r2, r2, r0, lsl #2
   3db64:	cmp	sl, #1
   3db68:	blt	3dbc0 <GetDataSlab+0x1b6a4>
   3db6c:	ldr	r4, [fp, #8]
   3db70:	mov	r0, #0
   3db74:	mov	r6, #0
   3db78:	mov	ip, r4
   3db7c:	ldr	r4, [fp, #16]
   3db80:	ldr	r5, [r4]
   3db84:	add	r0, r0, #4
   3db88:	mul	r5, r5, r6
   3db8c:	add	r5, r2, r5, lsl #2
   3db90:	vldr	s0, [r5]
   3db94:	vcvt.s32.f32	s0, s0
   3db98:	vmov	r5, s0
   3db9c:	str	r5, [lr, r6, lsl #2]
   3dba0:	add	r6, r6, #1
   3dba4:	ldr	sl, [r1]
   3dba8:	cmp	r6, sl
   3dbac:	blt	3db80 <GetDataSlab+0x1b664>
   3dbb0:	ldr	r5, [r3]
   3dbb4:	ldr	r6, [ip]
   3dbb8:	ldr	r4, [r8]
   3dbbc:	add	lr, lr, r0
   3dbc0:	mul	r0, r6, r4
   3dbc4:	add	r7, r7, #1
   3dbc8:	add	r2, r2, r0, lsl #2
   3dbcc:	mov	r0, #0
   3dbd0:	cmp	r7, r5
   3dbd4:	blt	3db64 <GetDataSlab+0x1b648>
   3dbd8:	b	242ac <GetDataSlab+0x1d90>
   3dbdc:	cmp	r5, #1
   3dbe0:	blt	242a8 <GetDataSlab+0x1d8c>
   3dbe4:	ldr	r0, [sp, #36]	; 0x24
   3dbe8:	ldr	r2, [sp, #32]
   3dbec:	mov	r7, #0
   3dbf0:	mla	r0, r2, r6, r0
   3dbf4:	ldr	r2, [sp, #52]	; 0x34
   3dbf8:	add	r2, r2, r0, lsl #3
   3dbfc:	cmp	sl, #1
   3dc00:	blt	3dc58 <GetDataSlab+0x1b73c>
   3dc04:	ldr	r4, [fp, #8]
   3dc08:	mov	r0, #0
   3dc0c:	mov	r6, #0
   3dc10:	mov	ip, r4
   3dc14:	ldr	r4, [fp, #16]
   3dc18:	ldr	r5, [r4]
   3dc1c:	add	r0, r0, #4
   3dc20:	mul	r5, r5, r6
   3dc24:	add	r5, r2, r5, lsl #3
   3dc28:	vldr	d16, [r5]
   3dc2c:	vcvt.s32.f64	s0, d16
   3dc30:	vmov	r5, s0
   3dc34:	str	r5, [lr, r6, lsl #2]
   3dc38:	add	r6, r6, #1
   3dc3c:	ldr	sl, [r1]
   3dc40:	cmp	r6, sl
   3dc44:	blt	3dc18 <GetDataSlab+0x1b6fc>
   3dc48:	ldr	r5, [r3]
   3dc4c:	ldr	r6, [ip]
   3dc50:	ldr	r4, [r8]
   3dc54:	add	lr, lr, r0
   3dc58:	mul	r0, r6, r4
   3dc5c:	add	r7, r7, #1
   3dc60:	add	r2, r2, r0, lsl #3
   3dc64:	mov	r0, #0
   3dc68:	cmp	r7, r5
   3dc6c:	blt	3dbfc <GetDataSlab+0x1b6e0>
   3dc70:	b	242ac <GetDataSlab+0x1d90>
   3dc74:	cmp	r5, #1
   3dc78:	blt	242a8 <GetDataSlab+0x1d8c>
   3dc7c:	ldr	r0, [sp, #36]	; 0x24
   3dc80:	ldr	r2, [sp, #32]
   3dc84:	ldr	r4, [fp, #8]
   3dc88:	mla	r0, r2, r6, r0
   3dc8c:	ldr	r2, [sp, #52]	; 0x34
   3dc90:	mov	r9, r4
   3dc94:	ldr	r4, [sp, #44]	; 0x2c
   3dc98:	add	r0, r2, r0, lsl #3
   3dc9c:	mov	r2, #0
   3dca0:	cmp	sl, #1
   3dca4:	blt	3dce8 <GetDataSlab+0x1b7cc>
   3dca8:	ldr	r4, [fp, #16]
   3dcac:	mov	r7, #0
   3dcb0:	mov	r6, #0
   3dcb4:	ldr	r5, [r4]
   3dcb8:	add	r7, r7, #4
   3dcbc:	mul	r5, r5, r6
   3dcc0:	ldr	r5, [r0, r5, lsl #3]
   3dcc4:	str	r5, [lr, r6, lsl #2]
   3dcc8:	add	r6, r6, #1
   3dccc:	ldr	sl, [r1]
   3dcd0:	cmp	r6, sl
   3dcd4:	blt	3dcb4 <GetDataSlab+0x1b798>
   3dcd8:	ldr	r5, [r3]
   3dcdc:	ldr	r6, [r9]
   3dce0:	ldr	r4, [r8]
   3dce4:	add	lr, lr, r7
   3dce8:	mul	r7, r6, r4
   3dcec:	add	r2, r2, #1
   3dcf0:	add	r0, r0, r7, lsl #3
   3dcf4:	cmp	r2, r5
   3dcf8:	blt	3dca0 <GetDataSlab+0x1b784>
   3dcfc:	mov	r0, #0
   3dd00:	ldr	r2, [sp, #48]	; 0x30
   3dd04:	cmp	r2, #13
   3dd08:	bne	242ac <GetDataSlab+0x1d90>
   3dd0c:	cmp	r5, #1
   3dd10:	blt	242a8 <GetDataSlab+0x1d8c>
   3dd14:	ldr	r0, [fp, #12]
   3dd18:	mov	r7, #0
   3dd1c:	mov	r2, r0
   3dd20:	ldr	r0, [r0]
   3dd24:	ldr	r2, [r2, #4]
   3dd28:	mla	r0, r6, r2, r0
   3dd2c:	ldr	r2, [sp, #52]	; 0x34
   3dd30:	add	r2, r2, r0, lsl #3
   3dd34:	cmp	sl, #1
   3dd38:	blt	3dd84 <GetDataSlab+0x1b868>
   3dd3c:	ldr	r4, [fp, #8]
   3dd40:	mov	r0, #0
   3dd44:	mov	r6, #0
   3dd48:	mov	ip, r4
   3dd4c:	ldr	r4, [fp, #16]
   3dd50:	ldr	r5, [r4]
   3dd54:	add	r0, r0, #4
   3dd58:	mul	r5, r5, r6
   3dd5c:	ldr	r5, [r2, r5, lsl #3]
   3dd60:	str	r5, [lr, r6, lsl #2]
   3dd64:	add	r6, r6, #1
   3dd68:	ldr	sl, [r1]
   3dd6c:	cmp	r6, sl
   3dd70:	blt	3dd50 <GetDataSlab+0x1b834>
   3dd74:	ldr	r5, [r3]
   3dd78:	ldr	r6, [ip]
   3dd7c:	ldr	r4, [r8]
   3dd80:	add	lr, lr, r0
   3dd84:	mul	r0, r6, r4
   3dd88:	add	r7, r7, #1
   3dd8c:	add	r2, r2, r0, lsl #3
   3dd90:	mov	r0, #0
   3dd94:	cmp	r7, r5
   3dd98:	blt	3dd34 <GetDataSlab+0x1b818>
   3dd9c:	b	242ac <GetDataSlab+0x1d90>
   3dda0:	cmp	r5, #1
   3dda4:	blt	242a8 <GetDataSlab+0x1d8c>
   3dda8:	ldr	r0, [sp, #36]	; 0x24
   3ddac:	ldr	r2, [sp, #32]
   3ddb0:	mov	r7, #0
   3ddb4:	mla	r0, r2, r6, r0
   3ddb8:	ldr	r2, [sp, #52]	; 0x34
   3ddbc:	add	r2, r2, r0
   3ddc0:	cmp	sl, #1
   3ddc4:	blt	3de10 <GetDataSlab+0x1b8f4>
   3ddc8:	ldr	r4, [fp, #8]
   3ddcc:	mov	r0, #0
   3ddd0:	mov	r6, #0
   3ddd4:	mov	ip, r4
   3ddd8:	ldr	r4, [fp, #16]
   3dddc:	ldr	r5, [r4]
   3dde0:	add	r0, r0, #4
   3dde4:	mul	r5, r5, r6
   3dde8:	ldrb	r5, [r2, r5]
   3ddec:	str	r5, [lr, r6, lsl #2]
   3ddf0:	add	r6, r6, #1
   3ddf4:	ldr	sl, [r1]
   3ddf8:	cmp	r6, sl
   3ddfc:	blt	3dddc <GetDataSlab+0x1b8c0>
   3de00:	ldr	r5, [r3]
   3de04:	ldr	r6, [ip]
   3de08:	ldr	r4, [r8]
   3de0c:	add	lr, lr, r0
   3de10:	add	r7, r7, #1
   3de14:	mla	r2, r6, r4, r2
   3de18:	mov	r0, #0
   3de1c:	cmp	r7, r5
   3de20:	blt	3ddc0 <GetDataSlab+0x1b8a4>
   3de24:	b	242ac <GetDataSlab+0x1d90>
   3de28:	cmp	r5, #1
   3de2c:	blt	242a8 <GetDataSlab+0x1d8c>
   3de30:	ldr	r0, [sp, #36]	; 0x24
   3de34:	ldr	r2, [sp, #32]
   3de38:	mov	r7, #0
   3de3c:	mla	r0, r2, r6, r0
   3de40:	ldr	r2, [sp, #52]	; 0x34
   3de44:	add	r2, r2, r0, lsl #1
   3de48:	cmp	sl, #1
   3de4c:	blt	3de9c <GetDataSlab+0x1b980>
   3de50:	ldr	r4, [fp, #8]
   3de54:	mov	r0, #0
   3de58:	mov	r6, #0
   3de5c:	mov	ip, r4
   3de60:	ldr	r4, [fp, #16]
   3de64:	ldr	r5, [r4]
   3de68:	add	r0, r0, #4
   3de6c:	mul	r5, r5, r6
   3de70:	add	r5, r2, r5, lsl #1
   3de74:	ldrsh	r5, [r5]
   3de78:	str	r5, [lr, r6, lsl #2]
   3de7c:	add	r6, r6, #1
   3de80:	ldr	sl, [r1]
   3de84:	cmp	r6, sl
   3de88:	blt	3de64 <GetDataSlab+0x1b948>
   3de8c:	ldr	r5, [r3]
   3de90:	ldr	r6, [ip]
   3de94:	ldr	r4, [r8]
   3de98:	add	lr, lr, r0
   3de9c:	mul	r0, r6, r4
   3dea0:	add	r7, r7, #1
   3dea4:	add	r2, r2, r0, lsl #1
   3dea8:	mov	r0, #0
   3deac:	cmp	r7, r5
   3deb0:	blt	3de48 <GetDataSlab+0x1b92c>
   3deb4:	b	242ac <GetDataSlab+0x1d90>
   3deb8:	cmp	r5, #1
   3debc:	blt	242a8 <GetDataSlab+0x1d8c>
   3dec0:	ldr	r0, [sp, #36]	; 0x24
   3dec4:	ldr	r2, [sp, #32]
   3dec8:	mov	r7, #0
   3decc:	mla	r0, r2, r6, r0
   3ded0:	ldr	r2, [sp, #52]	; 0x34
   3ded4:	add	r2, r2, r0, lsl #1
   3ded8:	cmp	sl, #1
   3dedc:	blt	3df2c <GetDataSlab+0x1ba10>
   3dee0:	ldr	r4, [fp, #8]
   3dee4:	mov	r0, #0
   3dee8:	mov	r6, #0
   3deec:	mov	ip, r4
   3def0:	ldr	r4, [fp, #16]
   3def4:	ldr	r5, [r4]
   3def8:	add	r0, r0, #4
   3defc:	mul	r5, r5, r6
   3df00:	add	r5, r2, r5, lsl #1
   3df04:	ldrh	r5, [r5]
   3df08:	str	r5, [lr, r6, lsl #2]
   3df0c:	add	r6, r6, #1
   3df10:	ldr	sl, [r1]
   3df14:	cmp	r6, sl
   3df18:	blt	3def4 <GetDataSlab+0x1b9d8>
   3df1c:	ldr	r5, [r3]
   3df20:	ldr	r6, [ip]
   3df24:	ldr	r4, [r8]
   3df28:	add	lr, lr, r0
   3df2c:	mul	r0, r6, r4
   3df30:	add	r7, r7, #1
   3df34:	add	r2, r2, r0, lsl #1
   3df38:	mov	r0, #0
   3df3c:	cmp	r7, r5
   3df40:	blt	3ded8 <GetDataSlab+0x1b9bc>
   3df44:	b	242ac <GetDataSlab+0x1d90>
   3df48:	cmp	r5, #1
   3df4c:	blt	242a8 <GetDataSlab+0x1d8c>
   3df50:	ldr	r0, [sp, #36]	; 0x24
   3df54:	ldr	r2, [sp, #32]
   3df58:	mov	r7, #0
   3df5c:	mla	r0, r2, r6, r0
   3df60:	ldr	r2, [sp, #52]	; 0x34
   3df64:	add	r2, r2, r0, lsl #2
   3df68:	cmp	sl, #1
   3df6c:	blt	3dfb8 <GetDataSlab+0x1ba9c>
   3df70:	ldr	r4, [fp, #8]
   3df74:	mov	r0, #0
   3df78:	mov	r6, #0
   3df7c:	mov	ip, r4
   3df80:	ldr	r4, [fp, #16]
   3df84:	ldr	r5, [r4]
   3df88:	add	r0, r0, #4
   3df8c:	mul	r5, r5, r6
   3df90:	ldr	r5, [r2, r5, lsl #2]
   3df94:	str	r5, [lr, r6, lsl #2]
   3df98:	add	r6, r6, #1
   3df9c:	ldr	sl, [r1]
   3dfa0:	cmp	r6, sl
   3dfa4:	blt	3df84 <GetDataSlab+0x1ba68>
   3dfa8:	ldr	r5, [r3]
   3dfac:	ldr	r6, [ip]
   3dfb0:	ldr	r4, [r8]
   3dfb4:	add	lr, lr, r0
   3dfb8:	mul	r0, r6, r4
   3dfbc:	add	r7, r7, #1
   3dfc0:	add	r2, r2, r0, lsl #2
   3dfc4:	mov	r0, #0
   3dfc8:	cmp	r7, r5
   3dfcc:	blt	3df68 <GetDataSlab+0x1ba4c>
   3dfd0:	b	242ac <GetDataSlab+0x1d90>
   3dfd4:	cmp	r5, #1
   3dfd8:	blt	242a8 <GetDataSlab+0x1d8c>
   3dfdc:	ldr	r0, [sp, #36]	; 0x24
   3dfe0:	ldr	r2, [sp, #32]
   3dfe4:	mov	r7, #0
   3dfe8:	mla	r0, r2, r6, r0
   3dfec:	ldr	r2, [sp, #52]	; 0x34
   3dff0:	add	r2, r2, r0, lsl #2
   3dff4:	cmp	sl, #1
   3dff8:	blt	3e044 <GetDataSlab+0x1bb28>
   3dffc:	ldr	r4, [fp, #8]
   3e000:	mov	r0, #0
   3e004:	mov	r6, #0
   3e008:	mov	ip, r4
   3e00c:	ldr	r4, [fp, #16]
   3e010:	ldr	r5, [r4]
   3e014:	add	r0, r0, #4
   3e018:	mul	r5, r5, r6
   3e01c:	ldr	r5, [r2, r5, lsl #2]
   3e020:	str	r5, [lr, r6, lsl #2]
   3e024:	add	r6, r6, #1
   3e028:	ldr	sl, [r1]
   3e02c:	cmp	r6, sl
   3e030:	blt	3e010 <GetDataSlab+0x1baf4>
   3e034:	ldr	r5, [r3]
   3e038:	ldr	r6, [ip]
   3e03c:	ldr	r4, [r8]
   3e040:	add	lr, lr, r0
   3e044:	mul	r0, r6, r4
   3e048:	add	r7, r7, #1
   3e04c:	add	r2, r2, r0, lsl #2
   3e050:	mov	r0, #0
   3e054:	cmp	r7, r5
   3e058:	blt	3dff4 <GetDataSlab+0x1bad8>
   3e05c:	b	242ac <GetDataSlab+0x1d90>
   3e060:	cmp	r5, #1
   3e064:	blt	242a8 <GetDataSlab+0x1d8c>
   3e068:	ldr	r0, [sp, #36]	; 0x24
   3e06c:	ldr	r2, [sp, #32]
   3e070:	mov	r7, #0
   3e074:	mla	r0, r2, r6, r0
   3e078:	ldr	r2, [sp, #52]	; 0x34
   3e07c:	add	r2, r2, r0, lsl #2
   3e080:	cmp	sl, #1
   3e084:	blt	3e0dc <GetDataSlab+0x1bbc0>
   3e088:	ldr	r4, [fp, #8]
   3e08c:	mov	r0, #0
   3e090:	mov	r6, #0
   3e094:	mov	ip, r4
   3e098:	ldr	r4, [fp, #16]
   3e09c:	ldr	r5, [r4]
   3e0a0:	add	r0, r0, #4
   3e0a4:	mul	r5, r5, r6
   3e0a8:	add	r5, r2, r5, lsl #2
   3e0ac:	vldr	s0, [r5]
   3e0b0:	vcvt.u32.f32	s0, s0
   3e0b4:	vmov	r5, s0
   3e0b8:	str	r5, [lr, r6, lsl #2]
   3e0bc:	add	r6, r6, #1
   3e0c0:	ldr	sl, [r1]
   3e0c4:	cmp	r6, sl
   3e0c8:	blt	3e09c <GetDataSlab+0x1bb80>
   3e0cc:	ldr	r5, [r3]
   3e0d0:	ldr	r6, [ip]
   3e0d4:	ldr	r4, [r8]
   3e0d8:	add	lr, lr, r0
   3e0dc:	mul	r0, r6, r4
   3e0e0:	add	r7, r7, #1
   3e0e4:	add	r2, r2, r0, lsl #2
   3e0e8:	mov	r0, #0
   3e0ec:	cmp	r7, r5
   3e0f0:	blt	3e080 <GetDataSlab+0x1bb64>
   3e0f4:	b	242ac <GetDataSlab+0x1d90>
   3e0f8:	cmp	r5, #1
   3e0fc:	blt	242a8 <GetDataSlab+0x1d8c>
   3e100:	ldr	r0, [sp, #36]	; 0x24
   3e104:	ldr	r2, [sp, #32]
   3e108:	mov	r7, #0
   3e10c:	mla	r0, r2, r6, r0
   3e110:	ldr	r2, [sp, #52]	; 0x34
   3e114:	add	r2, r2, r0, lsl #3
   3e118:	cmp	sl, #1
   3e11c:	blt	3e174 <GetDataSlab+0x1bc58>
   3e120:	ldr	r4, [fp, #8]
   3e124:	mov	r0, #0
   3e128:	mov	r6, #0
   3e12c:	mov	ip, r4
   3e130:	ldr	r4, [fp, #16]
   3e134:	ldr	r5, [r4]
   3e138:	add	r0, r0, #4
   3e13c:	mul	r5, r5, r6
   3e140:	add	r5, r2, r5, lsl #3
   3e144:	vldr	d16, [r5]
   3e148:	vcvt.u32.f64	s0, d16
   3e14c:	vmov	r5, s0
   3e150:	str	r5, [lr, r6, lsl #2]
   3e154:	add	r6, r6, #1
   3e158:	ldr	sl, [r1]
   3e15c:	cmp	r6, sl
   3e160:	blt	3e134 <GetDataSlab+0x1bc18>
   3e164:	ldr	r5, [r3]
   3e168:	ldr	r6, [ip]
   3e16c:	ldr	r4, [r8]
   3e170:	add	lr, lr, r0
   3e174:	mul	r0, r6, r4
   3e178:	add	r7, r7, #1
   3e17c:	add	r2, r2, r0, lsl #3
   3e180:	mov	r0, #0
   3e184:	cmp	r7, r5
   3e188:	blt	3e118 <GetDataSlab+0x1bbfc>
   3e18c:	b	242ac <GetDataSlab+0x1d90>
   3e190:	cmp	r5, #1
   3e194:	blt	242a8 <GetDataSlab+0x1d8c>
   3e198:	ldr	r0, [sp, #36]	; 0x24
   3e19c:	ldr	r2, [sp, #32]
   3e1a0:	ldr	r4, [fp, #8]
   3e1a4:	mla	r0, r2, r6, r0
   3e1a8:	ldr	r2, [sp, #52]	; 0x34
   3e1ac:	mov	r9, r4
   3e1b0:	ldr	r4, [sp, #44]	; 0x2c
   3e1b4:	add	r0, r2, r0, lsl #3
   3e1b8:	mov	r2, #0
   3e1bc:	cmp	sl, #1
   3e1c0:	blt	3e204 <GetDataSlab+0x1bce8>
   3e1c4:	ldr	r4, [fp, #16]
   3e1c8:	mov	r7, #0
   3e1cc:	mov	r6, #0
   3e1d0:	ldr	r5, [r4]
   3e1d4:	add	r7, r7, #4
   3e1d8:	mul	r5, r5, r6
   3e1dc:	ldr	r5, [r0, r5, lsl #3]
   3e1e0:	str	r5, [lr, r6, lsl #2]
   3e1e4:	add	r6, r6, #1
   3e1e8:	ldr	sl, [r1]
   3e1ec:	cmp	r6, sl
   3e1f0:	blt	3e1d0 <GetDataSlab+0x1bcb4>
   3e1f4:	ldr	r5, [r3]
   3e1f8:	ldr	r6, [r9]
   3e1fc:	ldr	r4, [r8]
   3e200:	add	lr, lr, r7
   3e204:	mul	r7, r6, r4
   3e208:	add	r2, r2, #1
   3e20c:	add	r0, r0, r7, lsl #3
   3e210:	cmp	r2, r5
   3e214:	blt	3e1bc <GetDataSlab+0x1bca0>
   3e218:	mov	r0, #0
   3e21c:	ldr	r2, [sp, #48]	; 0x30
   3e220:	cmp	r2, #13
   3e224:	bne	242ac <GetDataSlab+0x1d90>
   3e228:	cmp	r5, #1
   3e22c:	blt	242a8 <GetDataSlab+0x1d8c>
   3e230:	ldr	r0, [fp, #12]
   3e234:	mov	r7, #0
   3e238:	mov	r2, r0
   3e23c:	ldr	r0, [r0]
   3e240:	ldr	r2, [r2, #4]
   3e244:	mla	r0, r6, r2, r0
   3e248:	ldr	r2, [sp, #52]	; 0x34
   3e24c:	add	r2, r2, r0, lsl #3
   3e250:	cmp	sl, #1
   3e254:	blt	3e2a0 <GetDataSlab+0x1bd84>
   3e258:	ldr	r4, [fp, #8]
   3e25c:	mov	r0, #0
   3e260:	mov	r6, #0
   3e264:	mov	ip, r4
   3e268:	ldr	r4, [fp, #16]
   3e26c:	ldr	r5, [r4]
   3e270:	add	r0, r0, #4
   3e274:	mul	r5, r5, r6
   3e278:	ldr	r5, [r2, r5, lsl #3]
   3e27c:	str	r5, [lr, r6, lsl #2]
   3e280:	add	r6, r6, #1
   3e284:	ldr	sl, [r1]
   3e288:	cmp	r6, sl
   3e28c:	blt	3e26c <GetDataSlab+0x1bd50>
   3e290:	ldr	r5, [r3]
   3e294:	ldr	r6, [ip]
   3e298:	ldr	r4, [r8]
   3e29c:	add	lr, lr, r0
   3e2a0:	mul	r0, r6, r4
   3e2a4:	add	r7, r7, #1
   3e2a8:	add	r2, r2, r0, lsl #3
   3e2ac:	mov	r0, #0
   3e2b0:	cmp	r7, r5
   3e2b4:	blt	3e250 <GetDataSlab+0x1bd34>
   3e2b8:	b	242ac <GetDataSlab+0x1d90>
   3e2bc:	cmp	r5, #1
   3e2c0:	blt	242a8 <GetDataSlab+0x1d8c>
   3e2c4:	ldr	r0, [sp, #36]	; 0x24
   3e2c8:	ldr	r1, [sp, #32]
   3e2cc:	mul	r2, r4, r6
   3e2d0:	mov	r3, #0
   3e2d4:	mov	r7, #0
   3e2d8:	mla	r0, r1, r6, r0
   3e2dc:	ldr	r1, [sp, #52]	; 0x34
   3e2e0:	add	r1, r1, r0
   3e2e4:	cmp	sl, #1
   3e2e8:	blt	3e31c <GetDataSlab+0x1be00>
   3e2ec:	mov	r0, #0
   3e2f0:	mov	r6, sl
   3e2f4:	mov	r5, lr
   3e2f8:	ldrb	r4, [r1, r0]
   3e2fc:	add	r0, r0, r9
   3e300:	subs	r6, r6, #1
   3e304:	str	r4, [r5]
   3e308:	str	r3, [r5, #4]
   3e30c:	add	r5, r5, #8
   3e310:	bne	3e2f8 <GetDataSlab+0x1bddc>
   3e314:	ldr	r5, [sp, #56]	; 0x38
   3e318:	add	lr, lr, sl, lsl #3
   3e31c:	add	r7, r7, #1
   3e320:	add	r1, r1, r2
   3e324:	mov	r0, #0
   3e328:	cmp	r7, r5
   3e32c:	bne	3e2e4 <GetDataSlab+0x1bdc8>
   3e330:	b	242ac <GetDataSlab+0x1d90>
   3e334:	cmp	r5, #1
   3e338:	blt	242a8 <GetDataSlab+0x1d8c>
   3e33c:	ldr	r0, [sp, #36]	; 0x24
   3e340:	ldr	r1, [sp, #32]
   3e344:	lsl	r3, r9, #1
   3e348:	mov	r7, #0
   3e34c:	mla	r0, r1, r6, r0
   3e350:	ldr	r1, [sp, #52]	; 0x34
   3e354:	add	r1, r1, r0, lsl #1
   3e358:	mul	r0, r4, r6
   3e35c:	lsl	r2, r0, #1
   3e360:	cmp	sl, #1
   3e364:	blt	3e398 <GetDataSlab+0x1be7c>
   3e368:	mov	r0, #0
   3e36c:	mov	r6, sl
   3e370:	mov	r5, lr
   3e374:	ldrsh	r4, [r1, -r0]
   3e378:	sub	r0, r0, r3
   3e37c:	subs	r6, r6, #1
   3e380:	asr	r9, r4, #31
   3e384:	stm	r5, {r4, r9}
   3e388:	add	r5, r5, #8
   3e38c:	bne	3e374 <GetDataSlab+0x1be58>
   3e390:	ldr	r5, [sp, #56]	; 0x38
   3e394:	add	lr, lr, sl, lsl #3
   3e398:	add	r7, r7, #1
   3e39c:	add	r1, r1, r2
   3e3a0:	mov	r0, #0
   3e3a4:	cmp	r7, r5
   3e3a8:	bne	3e360 <GetDataSlab+0x1be44>
   3e3ac:	b	242ac <GetDataSlab+0x1d90>
   3e3b0:	cmp	r5, #1
   3e3b4:	blt	242a8 <GetDataSlab+0x1d8c>
   3e3b8:	ldr	r0, [sp, #36]	; 0x24
   3e3bc:	ldr	r1, [sp, #32]
   3e3c0:	lsl	r3, r9, #1
   3e3c4:	mov	r7, #0
   3e3c8:	mla	r0, r1, r6, r0
   3e3cc:	ldr	r1, [sp, #52]	; 0x34
   3e3d0:	add	r1, r1, r0, lsl #1
   3e3d4:	mul	r0, r4, r6
   3e3d8:	mov	r6, #0
   3e3dc:	lsl	r2, r0, #1
   3e3e0:	cmp	sl, #1
   3e3e4:	blt	3e418 <GetDataSlab+0x1befc>
   3e3e8:	mov	r0, #0
   3e3ec:	mov	r5, sl
   3e3f0:	mov	r4, lr
   3e3f4:	ldrh	r8, [r1, -r0]
   3e3f8:	sub	r0, r0, r3
   3e3fc:	subs	r5, r5, #1
   3e400:	str	r8, [r4]
   3e404:	str	r7, [r4, #4]
   3e408:	add	r4, r4, #8
   3e40c:	bne	3e3f4 <GetDataSlab+0x1bed8>
   3e410:	ldr	r5, [sp, #56]	; 0x38
   3e414:	add	lr, lr, sl, lsl #3
   3e418:	add	r6, r6, #1
   3e41c:	add	r1, r1, r2
   3e420:	mov	r0, #0
   3e424:	cmp	r6, r5
   3e428:	bne	3e3e0 <GetDataSlab+0x1bec4>
   3e42c:	b	242ac <GetDataSlab+0x1d90>
   3e430:	cmp	r5, #1
   3e434:	blt	242a8 <GetDataSlab+0x1d8c>
   3e438:	ldr	r0, [sp, #36]	; 0x24
   3e43c:	ldr	r1, [sp, #32]
   3e440:	lsl	r3, r9, #2
   3e444:	mov	r7, #0
   3e448:	mla	r0, r1, r6, r0
   3e44c:	ldr	r1, [sp, #52]	; 0x34
   3e450:	add	r1, r1, r0, lsl #2
   3e454:	mul	r0, r4, r6
   3e458:	lsl	r2, r0, #2
   3e45c:	cmp	sl, #1
   3e460:	blt	3e494 <GetDataSlab+0x1bf78>
   3e464:	mov	r0, #0
   3e468:	mov	r6, sl
   3e46c:	mov	r5, lr
   3e470:	ldr	r4, [r1, -r0]
   3e474:	sub	r0, r0, r3
   3e478:	subs	r6, r6, #1
   3e47c:	asr	r9, r4, #31
   3e480:	stm	r5, {r4, r9}
   3e484:	add	r5, r5, #8
   3e488:	bne	3e470 <GetDataSlab+0x1bf54>
   3e48c:	ldr	r5, [sp, #56]	; 0x38
   3e490:	add	lr, lr, sl, lsl #3
   3e494:	add	r7, r7, #1
   3e498:	add	r1, r1, r2
   3e49c:	mov	r0, #0
   3e4a0:	cmp	r7, r5
   3e4a4:	bne	3e45c <GetDataSlab+0x1bf40>
   3e4a8:	b	242ac <GetDataSlab+0x1d90>
   3e4ac:	cmp	r5, #1
   3e4b0:	blt	242a8 <GetDataSlab+0x1d8c>
   3e4b4:	ldr	r0, [sp, #36]	; 0x24
   3e4b8:	ldr	r1, [sp, #32]
   3e4bc:	lsl	r3, r9, #2
   3e4c0:	mov	r7, #0
   3e4c4:	mla	r0, r1, r6, r0
   3e4c8:	ldr	r1, [sp, #52]	; 0x34
   3e4cc:	add	r1, r1, r0, lsl #2
   3e4d0:	mul	r0, r4, r6
   3e4d4:	mov	r6, #0
   3e4d8:	lsl	r2, r0, #2
   3e4dc:	cmp	sl, #1
   3e4e0:	blt	3e514 <GetDataSlab+0x1bff8>
   3e4e4:	mov	r0, #0
   3e4e8:	mov	r5, sl
   3e4ec:	mov	r4, lr
   3e4f0:	ldr	r8, [r1, -r0]
   3e4f4:	sub	r0, r0, r3
   3e4f8:	subs	r5, r5, #1
   3e4fc:	str	r8, [r4]
   3e500:	str	r7, [r4, #4]
   3e504:	add	r4, r4, #8
   3e508:	bne	3e4f0 <GetDataSlab+0x1bfd4>
   3e50c:	ldr	r5, [sp, #56]	; 0x38
   3e510:	add	lr, lr, sl, lsl #3
   3e514:	add	r6, r6, #1
   3e518:	add	r1, r1, r2
   3e51c:	mov	r0, #0
   3e520:	cmp	r6, r5
   3e524:	bne	3e4dc <GetDataSlab+0x1bfc0>
   3e528:	b	242ac <GetDataSlab+0x1d90>
   3e52c:	cmp	r5, #1
   3e530:	blt	242a8 <GetDataSlab+0x1d8c>
   3e534:	ldr	r0, [sp, #36]	; 0x24
   3e538:	ldr	r1, [sp, #32]
   3e53c:	lsl	r7, r9, #2
   3e540:	mov	r9, #0
   3e544:	mla	r0, r1, r6, r0
   3e548:	ldr	r1, [sp, #52]	; 0x34
   3e54c:	add	r8, r1, r0, lsl #2
   3e550:	mul	r0, r4, r6
   3e554:	lsl	r0, r0, #2
   3e558:	str	r0, [sp, #52]	; 0x34
   3e55c:	cmp	sl, #1
   3e560:	blt	3e598 <GetDataSlab+0x1c07c>
   3e564:	mov	r5, r8
   3e568:	mov	r4, sl
   3e56c:	mov	r6, lr
   3e570:	str	lr, [sp, #60]	; 0x3c
   3e574:	ldr	r0, [r5], r7
   3e578:	bl	49828 <__aeabi_f2lz>
   3e57c:	strd	r0, [r6]
   3e580:	subs	r4, r4, #1
   3e584:	add	r6, r6, #8
   3e588:	bne	3e574 <GetDataSlab+0x1c058>
   3e58c:	ldr	lr, [sp, #60]	; 0x3c
   3e590:	ldr	r5, [sp, #56]	; 0x38
   3e594:	add	lr, lr, sl, lsl #3
   3e598:	ldr	r0, [sp, #52]	; 0x34
   3e59c:	add	r9, r9, #1
   3e5a0:	cmp	r9, r5
   3e5a4:	add	r8, r8, r0
   3e5a8:	mov	r0, #0
   3e5ac:	bne	3e55c <GetDataSlab+0x1c040>
   3e5b0:	b	242ac <GetDataSlab+0x1d90>
   3e5b4:	cmp	r5, #1
   3e5b8:	blt	242a8 <GetDataSlab+0x1d8c>
   3e5bc:	ldr	r0, [sp, #36]	; 0x24
   3e5c0:	ldr	r1, [sp, #32]
   3e5c4:	lsl	r7, r9, #3
   3e5c8:	mov	r9, #0
   3e5cc:	mla	r0, r1, r6, r0
   3e5d0:	ldr	r1, [sp, #52]	; 0x34
   3e5d4:	add	r8, r1, r0, lsl #3
   3e5d8:	mul	r0, r4, r6
   3e5dc:	lsl	r0, r0, #3
   3e5e0:	str	r0, [sp, #52]	; 0x34
   3e5e4:	cmp	sl, #1
   3e5e8:	blt	3e628 <GetDataSlab+0x1c10c>
   3e5ec:	mov	r5, r8
   3e5f0:	mov	r4, sl
   3e5f4:	mov	r6, lr
   3e5f8:	str	lr, [sp, #60]	; 0x3c
   3e5fc:	vldr	d16, [r5]
   3e600:	vmov	r0, r1, d16
   3e604:	bl	49854 <__aeabi_d2lz>
   3e608:	strd	r0, [r6]
   3e60c:	add	r5, r5, r7
   3e610:	subs	r4, r4, #1
   3e614:	add	r6, r6, #8
   3e618:	bne	3e5fc <GetDataSlab+0x1c0e0>
   3e61c:	ldr	lr, [sp, #60]	; 0x3c
   3e620:	ldr	r5, [sp, #56]	; 0x38
   3e624:	add	lr, lr, sl, lsl #3
   3e628:	ldr	r0, [sp, #52]	; 0x34
   3e62c:	add	r9, r9, #1
   3e630:	cmp	r9, r5
   3e634:	add	r8, r8, r0
   3e638:	mov	r0, #0
   3e63c:	bne	3e5e4 <GetDataSlab+0x1c0c8>
   3e640:	b	242ac <GetDataSlab+0x1d90>
   3e644:	cmp	r5, #1
   3e648:	blt	242a8 <GetDataSlab+0x1d8c>
   3e64c:	ldr	r0, [sp, #36]	; 0x24
   3e650:	ldr	r1, [sp, #32]
   3e654:	mov	r2, r4
   3e658:	mov	r3, #0
   3e65c:	mla	r0, r1, r6, r0
   3e660:	ldr	r1, [sp, #52]	; 0x34
   3e664:	add	r4, r1, r0, lsl #3
   3e668:	mul	r1, r2, r6
   3e66c:	lsl	r2, r9, #3
   3e670:	lsl	r1, r1, #3
   3e674:	cmp	sl, #1
   3e678:	blt	3e6b8 <GetDataSlab+0x1c19c>
   3e67c:	mov	r7, #0
   3e680:	mov	r6, sl
   3e684:	mov	r5, lr
   3e688:	mov	r0, r4
   3e68c:	subs	r6, r6, #1
   3e690:	ldr	r8, [r0, -r7]!
   3e694:	sub	r7, r7, r2
   3e698:	ldr	r0, [r0, #4]
   3e69c:	str	r8, [r5]
   3e6a0:	str	r0, [r5, #4]
   3e6a4:	add	r5, r5, #8
   3e6a8:	bne	3e688 <GetDataSlab+0x1c16c>
   3e6ac:	ldr	r5, [sp, #56]	; 0x38
   3e6b0:	ldr	r6, [sp, #40]	; 0x28
   3e6b4:	add	lr, lr, sl, lsl #3
   3e6b8:	add	r3, r3, #1
   3e6bc:	add	r4, r4, r1
   3e6c0:	cmp	r3, r5
   3e6c4:	bne	3e674 <GetDataSlab+0x1c158>
   3e6c8:	ldr	r4, [sp, #44]	; 0x2c
   3e6cc:	mov	r0, #0
   3e6d0:	ldr	r1, [sp, #48]	; 0x30
   3e6d4:	cmp	r1, #13
   3e6d8:	bne	242ac <GetDataSlab+0x1d90>
   3e6dc:	cmp	r5, #1
   3e6e0:	blt	242a8 <GetDataSlab+0x1d8c>
   3e6e4:	ldr	r0, [sp, #36]	; 0x24
   3e6e8:	ldr	r1, [sp, #32]
   3e6ec:	mov	r2, r4
   3e6f0:	lsl	r3, r9, #3
   3e6f4:	mov	r7, #0
   3e6f8:	mla	r0, r1, r6, r0
   3e6fc:	ldr	r1, [sp, #52]	; 0x34
   3e700:	add	r4, r1, r0, lsl #3
   3e704:	mul	r0, r2, r6
   3e708:	lsl	r2, r0, #3
   3e70c:	cmp	sl, #1
   3e710:	blt	3e748 <GetDataSlab+0x1c22c>
   3e714:	mov	r0, #0
   3e718:	mov	r6, sl
   3e71c:	mov	r5, lr
   3e720:	mov	r1, r4
   3e724:	subs	r6, r6, #1
   3e728:	ldr	r8, [r1, -r0]!
   3e72c:	sub	r0, r0, r3
   3e730:	ldr	r9, [r1, #4]
   3e734:	strd	r8, [r5]
   3e738:	add	r5, r5, #8
   3e73c:	bne	3e720 <GetDataSlab+0x1c204>
   3e740:	ldr	r5, [sp, #56]	; 0x38
   3e744:	add	lr, lr, sl, lsl #3
   3e748:	add	r7, r7, #1
   3e74c:	add	r4, r4, r2
   3e750:	mov	r0, #0
   3e754:	cmp	r7, r5
   3e758:	bne	3e70c <GetDataSlab+0x1c1f0>
   3e75c:	b	242ac <GetDataSlab+0x1d90>
   3e760:	cmp	r5, #1
   3e764:	blt	242a8 <GetDataSlab+0x1d8c>
   3e768:	ldr	r0, [sp, #36]	; 0x24
   3e76c:	ldr	r1, [sp, #32]
   3e770:	mul	r2, r4, r6
   3e774:	mov	r3, #0
   3e778:	mov	r7, #0
   3e77c:	mla	r0, r1, r6, r0
   3e780:	ldr	r1, [sp, #52]	; 0x34
   3e784:	add	r1, r1, r0
   3e788:	cmp	sl, #1
   3e78c:	blt	3e7c0 <GetDataSlab+0x1c2a4>
   3e790:	mov	r0, #0
   3e794:	mov	r6, sl
   3e798:	mov	r5, lr
   3e79c:	ldrb	r4, [r1, r0]
   3e7a0:	add	r0, r0, r9
   3e7a4:	subs	r6, r6, #1
   3e7a8:	str	r4, [r5]
   3e7ac:	str	r3, [r5, #4]
   3e7b0:	add	r5, r5, #8
   3e7b4:	bne	3e79c <GetDataSlab+0x1c280>
   3e7b8:	ldr	r5, [sp, #56]	; 0x38
   3e7bc:	add	lr, lr, sl, lsl #3
   3e7c0:	add	r7, r7, #1
   3e7c4:	add	r1, r1, r2
   3e7c8:	mov	r0, #0
   3e7cc:	cmp	r7, r5
   3e7d0:	bne	3e788 <GetDataSlab+0x1c26c>
   3e7d4:	b	242ac <GetDataSlab+0x1d90>
   3e7d8:	cmp	r5, #1
   3e7dc:	blt	242a8 <GetDataSlab+0x1d8c>
   3e7e0:	ldr	r0, [sp, #36]	; 0x24
   3e7e4:	ldr	r1, [sp, #32]
   3e7e8:	lsl	r3, r9, #1
   3e7ec:	mov	r7, #0
   3e7f0:	mla	r0, r1, r6, r0
   3e7f4:	ldr	r1, [sp, #52]	; 0x34
   3e7f8:	add	r1, r1, r0, lsl #1
   3e7fc:	mul	r0, r4, r6
   3e800:	lsl	r2, r0, #1
   3e804:	cmp	sl, #1
   3e808:	blt	3e83c <GetDataSlab+0x1c320>
   3e80c:	mov	r0, #0
   3e810:	mov	r6, sl
   3e814:	mov	r5, lr
   3e818:	ldrsh	r4, [r1, -r0]
   3e81c:	sub	r0, r0, r3
   3e820:	subs	r6, r6, #1
   3e824:	asr	r9, r4, #31
   3e828:	stm	r5, {r4, r9}
   3e82c:	add	r5, r5, #8
   3e830:	bne	3e818 <GetDataSlab+0x1c2fc>
   3e834:	ldr	r5, [sp, #56]	; 0x38
   3e838:	add	lr, lr, sl, lsl #3
   3e83c:	add	r7, r7, #1
   3e840:	add	r1, r1, r2
   3e844:	mov	r0, #0
   3e848:	cmp	r7, r5
   3e84c:	bne	3e804 <GetDataSlab+0x1c2e8>
   3e850:	b	242ac <GetDataSlab+0x1d90>
   3e854:	cmp	r5, #1
   3e858:	blt	242a8 <GetDataSlab+0x1d8c>
   3e85c:	ldr	r0, [sp, #36]	; 0x24
   3e860:	ldr	r1, [sp, #32]
   3e864:	lsl	r3, r9, #1
   3e868:	mov	r7, #0
   3e86c:	mla	r0, r1, r6, r0
   3e870:	ldr	r1, [sp, #52]	; 0x34
   3e874:	add	r1, r1, r0, lsl #1
   3e878:	mul	r0, r4, r6
   3e87c:	mov	r6, #0
   3e880:	lsl	r2, r0, #1
   3e884:	cmp	sl, #1
   3e888:	blt	3e8bc <GetDataSlab+0x1c3a0>
   3e88c:	mov	r0, #0
   3e890:	mov	r5, sl
   3e894:	mov	r4, lr
   3e898:	ldrh	r8, [r1, -r0]
   3e89c:	sub	r0, r0, r3
   3e8a0:	subs	r5, r5, #1
   3e8a4:	str	r8, [r4]
   3e8a8:	str	r7, [r4, #4]
   3e8ac:	add	r4, r4, #8
   3e8b0:	bne	3e898 <GetDataSlab+0x1c37c>
   3e8b4:	ldr	r5, [sp, #56]	; 0x38
   3e8b8:	add	lr, lr, sl, lsl #3
   3e8bc:	add	r6, r6, #1
   3e8c0:	add	r1, r1, r2
   3e8c4:	mov	r0, #0
   3e8c8:	cmp	r6, r5
   3e8cc:	bne	3e884 <GetDataSlab+0x1c368>
   3e8d0:	b	242ac <GetDataSlab+0x1d90>
   3e8d4:	cmp	r5, #1
   3e8d8:	blt	242a8 <GetDataSlab+0x1d8c>
   3e8dc:	ldr	r0, [sp, #36]	; 0x24
   3e8e0:	ldr	r1, [sp, #32]
   3e8e4:	lsl	r3, r9, #2
   3e8e8:	mov	r7, #0
   3e8ec:	mla	r0, r1, r6, r0
   3e8f0:	ldr	r1, [sp, #52]	; 0x34
   3e8f4:	add	r1, r1, r0, lsl #2
   3e8f8:	mul	r0, r4, r6
   3e8fc:	lsl	r2, r0, #2
   3e900:	cmp	sl, #1
   3e904:	blt	3e938 <GetDataSlab+0x1c41c>
   3e908:	mov	r0, #0
   3e90c:	mov	r6, sl
   3e910:	mov	r5, lr
   3e914:	ldr	r4, [r1, -r0]
   3e918:	sub	r0, r0, r3
   3e91c:	subs	r6, r6, #1
   3e920:	asr	r9, r4, #31
   3e924:	stm	r5, {r4, r9}
   3e928:	add	r5, r5, #8
   3e92c:	bne	3e914 <GetDataSlab+0x1c3f8>
   3e930:	ldr	r5, [sp, #56]	; 0x38
   3e934:	add	lr, lr, sl, lsl #3
   3e938:	add	r7, r7, #1
   3e93c:	add	r1, r1, r2
   3e940:	mov	r0, #0
   3e944:	cmp	r7, r5
   3e948:	bne	3e900 <GetDataSlab+0x1c3e4>
   3e94c:	b	242ac <GetDataSlab+0x1d90>
   3e950:	cmp	r5, #1
   3e954:	blt	242a8 <GetDataSlab+0x1d8c>
   3e958:	ldr	r0, [sp, #36]	; 0x24
   3e95c:	ldr	r1, [sp, #32]
   3e960:	lsl	r3, r9, #2
   3e964:	mov	r7, #0
   3e968:	mla	r0, r1, r6, r0
   3e96c:	ldr	r1, [sp, #52]	; 0x34
   3e970:	add	r1, r1, r0, lsl #2
   3e974:	mul	r0, r4, r6
   3e978:	mov	r6, #0
   3e97c:	lsl	r2, r0, #2
   3e980:	cmp	sl, #1
   3e984:	blt	3e9b8 <GetDataSlab+0x1c49c>
   3e988:	mov	r0, #0
   3e98c:	mov	r5, sl
   3e990:	mov	r4, lr
   3e994:	ldr	r8, [r1, -r0]
   3e998:	sub	r0, r0, r3
   3e99c:	subs	r5, r5, #1
   3e9a0:	str	r8, [r4]
   3e9a4:	str	r7, [r4, #4]
   3e9a8:	add	r4, r4, #8
   3e9ac:	bne	3e994 <GetDataSlab+0x1c478>
   3e9b0:	ldr	r5, [sp, #56]	; 0x38
   3e9b4:	add	lr, lr, sl, lsl #3
   3e9b8:	add	r6, r6, #1
   3e9bc:	add	r1, r1, r2
   3e9c0:	mov	r0, #0
   3e9c4:	cmp	r6, r5
   3e9c8:	bne	3e980 <GetDataSlab+0x1c464>
   3e9cc:	b	242ac <GetDataSlab+0x1d90>
   3e9d0:	cmp	r5, #1
   3e9d4:	blt	242a8 <GetDataSlab+0x1d8c>
   3e9d8:	ldr	r0, [sp, #36]	; 0x24
   3e9dc:	ldr	r1, [sp, #32]
   3e9e0:	lsl	r7, r9, #2
   3e9e4:	mov	r9, #0
   3e9e8:	mla	r0, r1, r6, r0
   3e9ec:	ldr	r1, [sp, #52]	; 0x34
   3e9f0:	add	r8, r1, r0, lsl #2
   3e9f4:	mul	r0, r4, r6
   3e9f8:	lsl	r0, r0, #2
   3e9fc:	str	r0, [sp, #52]	; 0x34
   3ea00:	cmp	sl, #1
   3ea04:	blt	3ea3c <GetDataSlab+0x1c520>
   3ea08:	mov	r5, r8
   3ea0c:	mov	r4, sl
   3ea10:	mov	r6, lr
   3ea14:	str	lr, [sp, #60]	; 0x3c
   3ea18:	ldr	r0, [r5], r7
   3ea1c:	bl	49880 <__aeabi_f2ulz>
   3ea20:	strd	r0, [r6]
   3ea24:	subs	r4, r4, #1
   3ea28:	add	r6, r6, #8
   3ea2c:	bne	3ea18 <GetDataSlab+0x1c4fc>
   3ea30:	ldr	lr, [sp, #60]	; 0x3c
   3ea34:	ldr	r5, [sp, #56]	; 0x38
   3ea38:	add	lr, lr, sl, lsl #3
   3ea3c:	ldr	r0, [sp, #52]	; 0x34
   3ea40:	add	r9, r9, #1
   3ea44:	cmp	r9, r5
   3ea48:	add	r8, r8, r0
   3ea4c:	mov	r0, #0
   3ea50:	bne	3ea00 <GetDataSlab+0x1c4e4>
   3ea54:	b	242ac <GetDataSlab+0x1d90>
   3ea58:	cmp	r5, #1
   3ea5c:	blt	242a8 <GetDataSlab+0x1d8c>
   3ea60:	ldr	r0, [sp, #36]	; 0x24
   3ea64:	ldr	r1, [sp, #32]
   3ea68:	lsl	r7, r9, #3
   3ea6c:	mov	r9, #0
   3ea70:	mla	r0, r1, r6, r0
   3ea74:	ldr	r1, [sp, #52]	; 0x34
   3ea78:	add	r8, r1, r0, lsl #3
   3ea7c:	mul	r0, r4, r6
   3ea80:	lsl	r0, r0, #3
   3ea84:	str	r0, [sp, #52]	; 0x34
   3ea88:	cmp	sl, #1
   3ea8c:	blt	3eacc <GetDataSlab+0x1c5b0>
   3ea90:	mov	r5, r8
   3ea94:	mov	r4, sl
   3ea98:	mov	r6, lr
   3ea9c:	str	lr, [sp, #60]	; 0x3c
   3eaa0:	vldr	d16, [r5]
   3eaa4:	vmov	r0, r1, d16
   3eaa8:	bl	498c0 <__aeabi_d2ulz>
   3eaac:	strd	r0, [r6]
   3eab0:	add	r5, r5, r7
   3eab4:	subs	r4, r4, #1
   3eab8:	add	r6, r6, #8
   3eabc:	bne	3eaa0 <GetDataSlab+0x1c584>
   3eac0:	ldr	lr, [sp, #60]	; 0x3c
   3eac4:	ldr	r5, [sp, #56]	; 0x38
   3eac8:	add	lr, lr, sl, lsl #3
   3eacc:	ldr	r0, [sp, #52]	; 0x34
   3ead0:	add	r9, r9, #1
   3ead4:	cmp	r9, r5
   3ead8:	add	r8, r8, r0
   3eadc:	mov	r0, #0
   3eae0:	bne	3ea88 <GetDataSlab+0x1c56c>
   3eae4:	b	242ac <GetDataSlab+0x1d90>
   3eae8:	cmp	r5, #1
   3eaec:	blt	242a8 <GetDataSlab+0x1d8c>
   3eaf0:	ldr	r0, [sp, #36]	; 0x24
   3eaf4:	ldr	r1, [sp, #32]
   3eaf8:	mov	r2, r4
   3eafc:	mov	r3, #0
   3eb00:	mla	r0, r1, r6, r0
   3eb04:	ldr	r1, [sp, #52]	; 0x34
   3eb08:	add	r4, r1, r0, lsl #3
   3eb0c:	mul	r1, r2, r6
   3eb10:	lsl	r2, r9, #3
   3eb14:	lsl	r1, r1, #3
   3eb18:	cmp	sl, #1
   3eb1c:	blt	3eb5c <GetDataSlab+0x1c640>
   3eb20:	mov	r7, #0
   3eb24:	mov	r6, sl
   3eb28:	mov	r5, lr
   3eb2c:	mov	r0, r4
   3eb30:	subs	r6, r6, #1
   3eb34:	ldr	r8, [r0, -r7]!
   3eb38:	sub	r7, r7, r2
   3eb3c:	ldr	r0, [r0, #4]
   3eb40:	str	r8, [r5]
   3eb44:	str	r0, [r5, #4]
   3eb48:	add	r5, r5, #8
   3eb4c:	bne	3eb2c <GetDataSlab+0x1c610>
   3eb50:	ldr	r5, [sp, #56]	; 0x38
   3eb54:	ldr	r6, [sp, #40]	; 0x28
   3eb58:	add	lr, lr, sl, lsl #3
   3eb5c:	add	r3, r3, #1
   3eb60:	add	r4, r4, r1
   3eb64:	cmp	r3, r5
   3eb68:	bne	3eb18 <GetDataSlab+0x1c5fc>
   3eb6c:	ldr	r4, [sp, #44]	; 0x2c
   3eb70:	mov	r0, #0
   3eb74:	ldr	r1, [sp, #48]	; 0x30
   3eb78:	cmp	r1, #13
   3eb7c:	bne	242ac <GetDataSlab+0x1d90>
   3eb80:	cmp	r5, #1
   3eb84:	blt	242a8 <GetDataSlab+0x1d8c>
   3eb88:	ldr	r0, [sp, #36]	; 0x24
   3eb8c:	ldr	r1, [sp, #32]
   3eb90:	mov	r2, r4
   3eb94:	lsl	r3, r9, #3
   3eb98:	mov	r7, #0
   3eb9c:	mla	r0, r1, r6, r0
   3eba0:	ldr	r1, [sp, #52]	; 0x34
   3eba4:	add	r4, r1, r0, lsl #3
   3eba8:	mul	r0, r2, r6
   3ebac:	lsl	r2, r0, #3
   3ebb0:	cmp	sl, #1
   3ebb4:	blt	3ebec <GetDataSlab+0x1c6d0>
   3ebb8:	mov	r0, #0
   3ebbc:	mov	r6, sl
   3ebc0:	mov	r5, lr
   3ebc4:	mov	r1, r4
   3ebc8:	subs	r6, r6, #1
   3ebcc:	ldr	r8, [r1, -r0]!
   3ebd0:	sub	r0, r0, r3
   3ebd4:	ldr	r9, [r1, #4]
   3ebd8:	strd	r8, [r5]
   3ebdc:	add	r5, r5, #8
   3ebe0:	bne	3ebc4 <GetDataSlab+0x1c6a8>
   3ebe4:	ldr	r5, [sp, #56]	; 0x38
   3ebe8:	add	lr, lr, sl, lsl #3
   3ebec:	add	r7, r7, #1
   3ebf0:	add	r4, r4, r2
   3ebf4:	mov	r0, #0
   3ebf8:	cmp	r7, r5
   3ebfc:	bne	3ebb0 <GetDataSlab+0x1c694>
   3ec00:	b	242ac <GetDataSlab+0x1d90>

0003ec04 <Mat_VarReadDataLinear5>:
   3ec04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3ec08:	add	fp, sp, #28
   3ec0c:	sub	sp, sp, #84	; 0x54
   3ec10:	mov	r7, r0
   3ec14:	mov	r0, #1
   3ec18:	mvn	r5, #0
   3ec1c:	str	r0, [sp, #16]
   3ec20:	ldr	r0, [r7, #16]
   3ec24:	cmp	r0, #16
   3ec28:	beq	3f0c8 <Mat_VarReadDataLinear5+0x4c4>
   3ec2c:	mov	r4, r1
   3ec30:	ldr	r1, [r1, #52]	; 0x34
   3ec34:	ldr	r0, [r7]
   3ec38:	mov	r8, r2
   3ec3c:	mov	r2, #0
   3ec40:	mov	r9, r3
   3ec44:	mov	r6, #0
   3ec48:	ldr	r1, [r1]
   3ec4c:	bl	1a68 <fseek@plt>
   3ec50:	ldr	r0, [r4, #48]	; 0x30
   3ec54:	cmp	r0, #1
   3ec58:	beq	3eccc <Mat_VarReadDataLinear5+0xc8>
   3ec5c:	cmp	r0, #0
   3ec60:	bne	3ee14 <Mat_VarReadDataLinear5+0x210>
   3ec64:	ldr	r3, [r7]
   3ec68:	sub	r5, fp, #36	; 0x24
   3ec6c:	mov	r1, #4
   3ec70:	mov	r2, #2
   3ec74:	mov	r0, r5
   3ec78:	bl	18d0 <fread@plt>
   3ec7c:	ldr	r0, [r7, #20]
   3ec80:	cmp	r0, #0
   3ec84:	beq	3ec98 <Mat_VarReadDataLinear5+0x94>
   3ec88:	mov	r0, r5
   3ec8c:	bl	1c28 <Mat_int32Swap>
   3ec90:	add	r0, r5, #4
   3ec94:	bl	1c28 <Mat_int32Swap>
   3ec98:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3ec9c:	uxtb	r1, r0
   3eca0:	cmp	r0, #65536	; 0x10000
   3eca4:	str	r1, [r4, #8]
   3eca8:	bcc	3ee0c <Mat_VarReadDataLinear5+0x208>
   3ecac:	ldr	r0, [r7]
   3ecb0:	mvn	r1, #3
   3ecb4:	mov	r2, #1
   3ecb8:	bl	1a68 <fseek@plt>
   3ecbc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3ecc0:	mov	r1, #4
   3ecc4:	add	r6, r1, r0, asr #16
   3ecc8:	b	3ee14 <Mat_VarReadDataLinear5+0x210>
   3eccc:	ldr	r0, [r4, #52]	; 0x34
   3ecd0:	ldr	r6, [r0, #16]
   3ecd4:	cmp	r6, #0
   3ecd8:	beq	3ed38 <Mat_VarReadDataLinear5+0x134>
   3ecdc:	ldr	r0, [r4, #20]
   3ece0:	cmp	r0, #0
   3ece4:	beq	3ed6c <Mat_VarReadDataLinear5+0x168>
   3ece8:	ldr	r3, [r4, #8]
   3ecec:	ldr	r2, [r4, #16]
   3ecf0:	ldr	r1, [r8]
   3ecf4:	ldr	r0, [r6]
   3ecf8:	ldr	sl, [fp, #8]
   3ecfc:	ldr	r7, [fp, #12]
   3ed00:	str	r9, [sp]
   3ed04:	str	sl, [sp, #4]
   3ed08:	str	r7, [sp, #8]
   3ed0c:	bl	3f0e0 <GetDataLinear>
   3ed10:	mov	r5, r0
   3ed14:	cmp	r0, #0
   3ed18:	bne	3f0c8 <Mat_VarReadDataLinear5+0x4c4>
   3ed1c:	ldr	r3, [r4, #8]
   3ed20:	ldr	r2, [r4, #16]
   3ed24:	ldr	r1, [r8, #4]
   3ed28:	ldr	r0, [r6, #4]
   3ed2c:	stm	sp, {r9, sl}
   3ed30:	str	r7, [sp, #8]
   3ed34:	b	3ed90 <Mat_VarReadDataLinear5+0x18c>
   3ed38:	ldr	r1, [r0, #12]
   3ed3c:	mov	r0, #0
   3ed40:	str	r0, [r1, #4]
   3ed44:	add	r0, sp, #20
   3ed48:	bl	1960 <inflateCopy@plt>
   3ed4c:	cmp	r0, #0
   3ed50:	beq	3ed9c <Mat_VarReadDataLinear5+0x198>
   3ed54:	bl	18a0 <zError@plt>
   3ed58:	mov	r1, r0
   3ed5c:	ldr	r0, [pc, #880]	; 3f0d4 <Mat_VarReadDataLinear5+0x4d0>
   3ed60:	add	r0, pc, r0
   3ed64:	bl	19cc <Mat_Critical@plt>
   3ed68:	b	3f0c8 <Mat_VarReadDataLinear5+0x4c4>
   3ed6c:	ldr	r0, [fp, #8]
   3ed70:	ldr	r3, [r4, #8]
   3ed74:	ldr	r2, [r4, #16]
   3ed78:	str	r9, [sp]
   3ed7c:	mov	r1, r8
   3ed80:	str	r0, [sp, #4]
   3ed84:	ldr	r0, [fp, #12]
   3ed88:	str	r0, [sp, #8]
   3ed8c:	mov	r0, r6
   3ed90:	bl	3f0e0 <GetDataLinear>
   3ed94:	mov	r5, r0
   3ed98:	b	3f0c8 <Mat_VarReadDataLinear5+0x4c4>
   3ed9c:	sub	r5, fp, #36	; 0x24
   3eda0:	add	r1, sp, #20
   3eda4:	mov	r0, r7
   3eda8:	mov	r2, r5
   3edac:	bl	30c0 <InflateDataType>
   3edb0:	ldr	r0, [r7, #20]
   3edb4:	cmp	r0, #0
   3edb8:	beq	3edcc <Mat_VarReadDataLinear5+0x1c8>
   3edbc:	mov	r0, r5
   3edc0:	bl	1c28 <Mat_int32Swap>
   3edc4:	add	r0, r5, #4
   3edc8:	bl	1c28 <Mat_int32Swap>
   3edcc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3edd0:	uxtb	r1, r0
   3edd4:	str	r1, [r4, #8]
   3edd8:	mov	r1, #0
   3eddc:	cmp	r1, r0, lsr #16
   3ede0:	bne	3ecc0 <Mat_VarReadDataLinear5+0xbc>
   3ede4:	add	r5, r5, #4
   3ede8:	add	r1, sp, #20
   3edec:	mov	r0, r7
   3edf0:	mov	r2, r5
   3edf4:	bl	30c0 <InflateDataType>
   3edf8:	ldr	r0, [r7, #20]
   3edfc:	cmp	r0, #0
   3ee00:	beq	3ee0c <Mat_VarReadDataLinear5+0x208>
   3ee04:	mov	r0, r5
   3ee08:	bl	1c28 <Mat_int32Swap>
   3ee0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3ee10:	add	r6, r0, #8
   3ee14:	asr	r0, r6, #31
   3ee18:	add	r1, sp, #16
   3ee1c:	add	r0, r6, r0, lsr #29
   3ee20:	bic	r0, r0, #7
   3ee24:	subs	r0, r6, r0
   3ee28:	rsb	r0, r0, #8
   3ee2c:	addne	r6, r6, r0
   3ee30:	mov	r0, r4
   3ee34:	bl	45294 <SafeMulDims>
   3ee38:	mov	sl, r0
   3ee3c:	cmp	r0, #0
   3ee40:	beq	3ee50 <Mat_VarReadDataLinear5+0x24c>
   3ee44:	ldr	r0, [pc, #652]	; 3f0d8 <Mat_VarReadDataLinear5+0x4d4>
   3ee48:	add	r0, pc, r0
   3ee4c:	bl	19cc <Mat_Critical@plt>
   3ee50:	ldr	ip, [fp, #12]
   3ee54:	ldr	lr, [fp, #8]
   3ee58:	ldr	r1, [sp, #16]
   3ee5c:	mov	r5, #1
   3ee60:	sub	r0, ip, #1
   3ee64:	mla	r0, r0, lr, r9
   3ee68:	add	r0, r0, #1
   3ee6c:	cmp	r0, r1
   3ee70:	bhi	3f0b0 <Mat_VarReadDataLinear5+0x4ac>
   3ee74:	ldr	r0, [r4, #48]	; 0x30
   3ee78:	cmp	r0, #1
   3ee7c:	beq	3ef48 <Mat_VarReadDataLinear5+0x344>
   3ee80:	cmp	r0, #0
   3ee84:	bne	3f07c <Mat_VarReadDataLinear5+0x478>
   3ee88:	ldr	r0, [r4, #20]
   3ee8c:	cmp	r0, #0
   3ee90:	beq	3f060 <Mat_VarReadDataLinear5+0x45c>
   3ee94:	ldr	r3, [r4, #8]
   3ee98:	ldr	r2, [r4, #16]
   3ee9c:	ldr	r1, [r8]
   3eea0:	mov	r0, r7
   3eea4:	stm	sp, {r9, lr}
   3eea8:	str	ip, [sp, #8]
   3eeac:	bl	1c8d8 <ReadDataSlab1>
   3eeb0:	ldr	r0, [r4, #52]	; 0x34
   3eeb4:	mov	r2, #0
   3eeb8:	ldr	r0, [r0]
   3eebc:	add	r1, r0, r6
   3eec0:	ldr	r0, [r7]
   3eec4:	bl	1a68 <fseek@plt>
   3eec8:	ldr	r3, [r7]
   3eecc:	sub	r5, fp, #36	; 0x24
   3eed0:	mov	r1, #4
   3eed4:	mov	r2, #2
   3eed8:	mov	r0, r5
   3eedc:	bl	18d0 <fread@plt>
   3eee0:	ldr	r0, [r7, #20]
   3eee4:	cmp	r0, #0
   3eee8:	beq	3eefc <Mat_VarReadDataLinear5+0x2f8>
   3eeec:	mov	r0, r5
   3eef0:	bl	1c28 <Mat_int32Swap>
   3eef4:	add	r0, r5, #4
   3eef8:	bl	1c28 <Mat_int32Swap>
   3eefc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3ef00:	uxtb	r3, r0
   3ef04:	cmp	r0, #65536	; 0x10000
   3ef08:	str	r3, [r4, #8]
   3ef0c:	bcc	3ef24 <Mat_VarReadDataLinear5+0x320>
   3ef10:	ldr	r0, [r7]
   3ef14:	mvn	r1, #3
   3ef18:	mov	r2, #1
   3ef1c:	bl	1a68 <fseek@plt>
   3ef20:	ldr	r3, [r4, #8]
   3ef24:	ldr	r0, [fp, #8]
   3ef28:	ldr	r2, [r4, #16]
   3ef2c:	ldr	r1, [r8, #4]
   3ef30:	str	r9, [sp]
   3ef34:	str	r0, [sp, #4]
   3ef38:	ldr	r0, [fp, #12]
   3ef3c:	str	r0, [sp, #8]
   3ef40:	mov	r0, r7
   3ef44:	b	3f078 <Mat_VarReadDataLinear5+0x474>
   3ef48:	ldr	r0, [r4, #20]
   3ef4c:	cmp	r0, #0
   3ef50:	beq	3f084 <Mat_VarReadDataLinear5+0x480>
   3ef54:	ldr	r0, [r4, #8]
   3ef58:	ldr	r2, [r8]
   3ef5c:	ldr	r3, [r4, #16]
   3ef60:	add	r5, sp, #20
   3ef64:	mov	r1, r5
   3ef68:	stm	sp, {r0, r9, lr}
   3ef6c:	mov	r0, r7
   3ef70:	str	ip, [sp, #12]
   3ef74:	bl	1dd9c <ReadCompressedDataSlab1>
   3ef78:	ldr	r1, [r4, #52]	; 0x34
   3ef7c:	ldr	r0, [r7]
   3ef80:	mov	r2, #0
   3ef84:	ldr	r1, [r1]
   3ef88:	bl	1a68 <fseek@plt>
   3ef8c:	mov	r0, r5
   3ef90:	bl	1954 <inflateEnd@plt>
   3ef94:	ldr	r0, [r4, #52]	; 0x34
   3ef98:	ldr	r1, [r0, #12]
   3ef9c:	mov	r0, r5
   3efa0:	bl	1960 <inflateCopy@plt>
   3efa4:	mov	r5, r0
   3efa8:	cmp	r0, #0
   3efac:	beq	3efc8 <Mat_VarReadDataLinear5+0x3c4>
   3efb0:	mov	r0, r5
   3efb4:	bl	18a0 <zError@plt>
   3efb8:	mov	r1, r0
   3efbc:	ldr	r0, [pc, #280]	; 3f0dc <Mat_VarReadDataLinear5+0x4d8>
   3efc0:	add	r0, pc, r0
   3efc4:	bl	19cc <Mat_Critical@plt>
   3efc8:	add	sl, sp, #20
   3efcc:	mov	r0, r7
   3efd0:	mov	r2, r6
   3efd4:	mov	r1, sl
   3efd8:	bl	234c <InflateSkip>
   3efdc:	mov	r0, #0
   3efe0:	sub	r2, fp, #36	; 0x24
   3efe4:	mov	r1, sl
   3efe8:	str	r0, [sp, #24]
   3efec:	mov	r0, r7
   3eff0:	bl	30c0 <InflateDataType>
   3eff4:	ldr	r0, [r7, #20]
   3eff8:	cmp	r0, #0
   3effc:	beq	3f008 <Mat_VarReadDataLinear5+0x404>
   3f000:	sub	r0, fp, #36	; 0x24
   3f004:	bl	1c28 <Mat_int32Swap>
   3f008:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3f00c:	mov	r2, #0
   3f010:	uxtb	r0, r1
   3f014:	cmp	r2, r1, lsr #16
   3f018:	str	r0, [r4, #8]
   3f01c:	bne	3f034 <Mat_VarReadDataLinear5+0x430>
   3f020:	add	r1, sp, #20
   3f024:	mov	r0, r7
   3f028:	mov	r2, #4
   3f02c:	bl	234c <InflateSkip>
   3f030:	ldr	r0, [r4, #8]
   3f034:	ldr	r3, [r4, #16]
   3f038:	ldr	r2, [r8, #4]
   3f03c:	stm	sp, {r0, r9}
   3f040:	ldr	r0, [fp, #8]
   3f044:	add	r1, sp, #20
   3f048:	str	r0, [sp, #8]
   3f04c:	ldr	r0, [fp, #12]
   3f050:	str	r0, [sp, #12]
   3f054:	mov	r0, r7
   3f058:	bl	1dd9c <ReadCompressedDataSlab1>
   3f05c:	b	3f0a8 <Mat_VarReadDataLinear5+0x4a4>
   3f060:	ldr	r3, [r4, #8]
   3f064:	ldr	r2, [r4, #16]
   3f068:	mov	r0, r7
   3f06c:	mov	r1, r8
   3f070:	stm	sp, {r9, lr}
   3f074:	str	ip, [sp, #8]
   3f078:	bl	1c8d8 <ReadDataSlab1>
   3f07c:	mov	r5, sl
   3f080:	b	3f0b0 <Mat_VarReadDataLinear5+0x4ac>
   3f084:	ldr	r0, [r4, #8]
   3f088:	ldr	r3, [r4, #16]
   3f08c:	add	r1, sp, #20
   3f090:	mov	r2, r8
   3f094:	stm	sp, {r0, r9, lr}
   3f098:	mov	r0, r7
   3f09c:	str	ip, [sp, #12]
   3f0a0:	bl	1dd9c <ReadCompressedDataSlab1>
   3f0a4:	mov	r5, sl
   3f0a8:	add	r0, sp, #20
   3f0ac:	bl	1954 <inflateEnd@plt>
   3f0b0:	ldr	r0, [r4, #16]
   3f0b4:	bl	45274 <ClassType2DataType>
   3f0b8:	str	r0, [r4, #8]
   3f0bc:	ldr	r0, [r4, #16]
   3f0c0:	bl	1a38 <Mat_SizeOfClass@plt>
   3f0c4:	str	r0, [r4, #12]
   3f0c8:	mov	r0, r5
   3f0cc:	sub	sp, fp, #28
   3f0d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3f0d4:	.word	0x0000b18f
   3f0d8:	.word	0x0000aefc
   3f0dc:	.word	0x0000af2f

0003f0e0 <GetDataLinear>:
   3f0e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3f0e4:	add	fp, sp, #28
   3f0e8:	sub	sp, sp, #4
   3f0ec:	mov	r5, r0
   3f0f0:	mov	r0, r3
   3f0f4:	mov	r7, r2
   3f0f8:	mov	r4, r1
   3f0fc:	bl	193c <Mat_SizeOf@plt>
   3f100:	sub	r1, r7, #6
   3f104:	cmp	r1, #9
   3f108:	bhi	3f190 <GetDataLinear+0xb0>
   3f10c:	add	r2, pc, #20
   3f110:	mov	r8, r0
   3f114:	ldr	r6, [fp, #16]
   3f118:	ldr	r9, [fp, #12]
   3f11c:	ldr	r0, [fp, #8]
   3f120:	ldr	r1, [r2, r1, lsl #2]
   3f124:	add	pc, r2, r1
   3f128:	.word	0x00000028
   3f12c:	.word	0x00000070
   3f130:	.word	0x000000b0
   3f134:	.word	0x000000ec
   3f138:	.word	0x00000128
   3f13c:	.word	0x00000168
   3f140:	.word	0x000001a8
   3f144:	.word	0x000001e8
   3f148:	.word	0x00000228
   3f14c:	.word	0x00000268
   3f150:	add	r7, r5, r0, lsl #3
   3f154:	cmp	r9, #0
   3f158:	beq	3f3d0 <GetDataLinear+0x2f0>
   3f15c:	mov	sl, #0
   3f160:	cmp	r6, #1
   3f164:	blt	3f3e4 <GetDataLinear+0x304>
   3f168:	lsl	r5, r9, #3
   3f16c:	mov	r0, r4
   3f170:	mov	r1, r7
   3f174:	mov	r2, r8
   3f178:	bl	1834 <memcpy@plt>
   3f17c:	add	r7, r7, r5
   3f180:	subs	r6, r6, #1
   3f184:	add	r4, r4, #8
   3f188:	bne	3f16c <GetDataLinear+0x8c>
   3f18c:	b	3f3e4 <GetDataLinear+0x304>
   3f190:	mov	sl, #1
   3f194:	b	3f3e4 <GetDataLinear+0x304>
   3f198:	add	r7, r5, r0, lsl #2
   3f19c:	cmp	r9, #0
   3f1a0:	beq	3f3d0 <GetDataLinear+0x2f0>
   3f1a4:	mov	sl, #0
   3f1a8:	cmp	r6, #1
   3f1ac:	blt	3f3e4 <GetDataLinear+0x304>
   3f1b0:	lsl	r5, r9, #2
   3f1b4:	mov	r0, r4
   3f1b8:	mov	r1, r7
   3f1bc:	mov	r2, r8
   3f1c0:	bl	1834 <memcpy@plt>
   3f1c4:	add	r7, r7, r5
   3f1c8:	subs	r6, r6, #1
   3f1cc:	add	r4, r4, #4
   3f1d0:	bne	3f1b4 <GetDataLinear+0xd4>
   3f1d4:	b	3f3e4 <GetDataLinear+0x304>
   3f1d8:	add	r7, r5, r0
   3f1dc:	cmp	r9, #0
   3f1e0:	beq	3f3d0 <GetDataLinear+0x2f0>
   3f1e4:	mov	sl, #0
   3f1e8:	cmp	r6, #1
   3f1ec:	blt	3f3e4 <GetDataLinear+0x304>
   3f1f0:	mov	r0, r4
   3f1f4:	mov	r1, r7
   3f1f8:	mov	r2, r8
   3f1fc:	bl	1834 <memcpy@plt>
   3f200:	add	r7, r7, r9
   3f204:	subs	r6, r6, #1
   3f208:	add	r4, r4, #1
   3f20c:	bne	3f1f0 <GetDataLinear+0x110>
   3f210:	b	3f3e4 <GetDataLinear+0x304>
   3f214:	add	r7, r5, r0
   3f218:	cmp	r9, #0
   3f21c:	beq	3f3d0 <GetDataLinear+0x2f0>
   3f220:	mov	sl, #0
   3f224:	cmp	r6, #1
   3f228:	blt	3f3e4 <GetDataLinear+0x304>
   3f22c:	mov	r0, r4
   3f230:	mov	r1, r7
   3f234:	mov	r2, r8
   3f238:	bl	1834 <memcpy@plt>
   3f23c:	add	r7, r7, r9
   3f240:	subs	r6, r6, #1
   3f244:	add	r4, r4, #1
   3f248:	bne	3f22c <GetDataLinear+0x14c>
   3f24c:	b	3f3e4 <GetDataLinear+0x304>
   3f250:	add	r7, r5, r0, lsl #1
   3f254:	cmp	r9, #0
   3f258:	beq	3f3d0 <GetDataLinear+0x2f0>
   3f25c:	mov	sl, #0
   3f260:	cmp	r6, #1
   3f264:	blt	3f3e4 <GetDataLinear+0x304>
   3f268:	lsl	r5, r9, #1
   3f26c:	mov	r0, r4
   3f270:	mov	r1, r7
   3f274:	mov	r2, r8
   3f278:	bl	1834 <memcpy@plt>
   3f27c:	add	r7, r7, r5
   3f280:	subs	r6, r6, #1
   3f284:	add	r4, r4, #2
   3f288:	bne	3f26c <GetDataLinear+0x18c>
   3f28c:	b	3f3e4 <GetDataLinear+0x304>
   3f290:	add	r7, r5, r0, lsl #1
   3f294:	cmp	r9, #0
   3f298:	beq	3f3d0 <GetDataLinear+0x2f0>
   3f29c:	mov	sl, #0
   3f2a0:	cmp	r6, #1
   3f2a4:	blt	3f3e4 <GetDataLinear+0x304>
   3f2a8:	lsl	r5, r9, #1
   3f2ac:	mov	r0, r4
   3f2b0:	mov	r1, r7
   3f2b4:	mov	r2, r8
   3f2b8:	bl	1834 <memcpy@plt>
   3f2bc:	add	r7, r7, r5
   3f2c0:	subs	r6, r6, #1
   3f2c4:	add	r4, r4, #2
   3f2c8:	bne	3f2ac <GetDataLinear+0x1cc>
   3f2cc:	b	3f3e4 <GetDataLinear+0x304>
   3f2d0:	add	r7, r5, r0, lsl #2
   3f2d4:	cmp	r9, #0
   3f2d8:	beq	3f3d0 <GetDataLinear+0x2f0>
   3f2dc:	mov	sl, #0
   3f2e0:	cmp	r6, #1
   3f2e4:	blt	3f3e4 <GetDataLinear+0x304>
   3f2e8:	lsl	r5, r9, #2
   3f2ec:	mov	r0, r4
   3f2f0:	mov	r1, r7
   3f2f4:	mov	r2, r8
   3f2f8:	bl	1834 <memcpy@plt>
   3f2fc:	add	r7, r7, r5
   3f300:	subs	r6, r6, #1
   3f304:	add	r4, r4, #4
   3f308:	bne	3f2ec <GetDataLinear+0x20c>
   3f30c:	b	3f3e4 <GetDataLinear+0x304>
   3f310:	add	r7, r5, r0, lsl #2
   3f314:	cmp	r9, #0
   3f318:	beq	3f3d0 <GetDataLinear+0x2f0>
   3f31c:	mov	sl, #0
   3f320:	cmp	r6, #1
   3f324:	blt	3f3e4 <GetDataLinear+0x304>
   3f328:	lsl	r5, r9, #2
   3f32c:	mov	r0, r4
   3f330:	mov	r1, r7
   3f334:	mov	r2, r8
   3f338:	bl	1834 <memcpy@plt>
   3f33c:	add	r7, r7, r5
   3f340:	subs	r6, r6, #1
   3f344:	add	r4, r4, #4
   3f348:	bne	3f32c <GetDataLinear+0x24c>
   3f34c:	b	3f3e4 <GetDataLinear+0x304>
   3f350:	add	r7, r5, r0, lsl #3
   3f354:	cmp	r9, #0
   3f358:	beq	3f3d0 <GetDataLinear+0x2f0>
   3f35c:	mov	sl, #0
   3f360:	cmp	r6, #1
   3f364:	blt	3f3e4 <GetDataLinear+0x304>
   3f368:	lsl	r5, r9, #3
   3f36c:	mov	r0, r4
   3f370:	mov	r1, r7
   3f374:	mov	r2, r8
   3f378:	bl	1834 <memcpy@plt>
   3f37c:	add	r7, r7, r5
   3f380:	subs	r6, r6, #1
   3f384:	add	r4, r4, #8
   3f388:	bne	3f36c <GetDataLinear+0x28c>
   3f38c:	b	3f3e4 <GetDataLinear+0x304>
   3f390:	add	r7, r5, r0, lsl #3
   3f394:	cmp	r9, #0
   3f398:	beq	3f3d0 <GetDataLinear+0x2f0>
   3f39c:	mov	sl, #0
   3f3a0:	cmp	r6, #1
   3f3a4:	blt	3f3e4 <GetDataLinear+0x304>
   3f3a8:	lsl	r5, r9, #3
   3f3ac:	mov	r0, r4
   3f3b0:	mov	r1, r7
   3f3b4:	mov	r2, r8
   3f3b8:	bl	1834 <memcpy@plt>
   3f3bc:	add	r7, r7, r5
   3f3c0:	subs	r6, r6, #1
   3f3c4:	add	r4, r4, #8
   3f3c8:	bne	3f3ac <GetDataLinear+0x2cc>
   3f3cc:	b	3f3e4 <GetDataLinear+0x304>
   3f3d0:	mul	r2, r8, r6
   3f3d4:	mov	r0, r4
   3f3d8:	mov	r1, r7
   3f3dc:	bl	1834 <memcpy@plt>
   3f3e0:	mov	sl, #0
   3f3e4:	mov	r0, sl
   3f3e8:	sub	sp, fp, #28
   3f3ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003f3f0 <Mat_VarWrite5>:
   3f3f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3f3f4:	add	fp, sp, #28
   3f3f8:	sub	sp, sp, #52	; 0x34
   3f3fc:	sub	sp, sp, #4096	; 0x1000
   3f400:	mov	r4, r0
   3f404:	mov	r0, #6
   3f408:	mov	r5, r1
   3f40c:	mov	r1, #14
   3f410:	mvn	r6, #0
   3f414:	str	r0, [fp, #-40]	; 0xffffffd8
   3f418:	mov	r0, #5
   3f41c:	cmp	r4, #0
   3f420:	str	r1, [fp, #-56]	; 0xffffffc8
   3f424:	str	r0, [fp, #-44]	; 0xffffffd4
   3f428:	mov	r0, #8
   3f42c:	str	r0, [fp, #-48]	; 0xffffffd0
   3f430:	mov	r0, #0
   3f434:	str	r0, [fp, #-52]	; 0xffffffcc
   3f438:	str	r0, [fp, #-64]	; 0xffffffc0
   3f43c:	beq	3f464 <Mat_VarWrite5+0x74>
   3f440:	ldr	r0, [r4]
   3f444:	mov	r7, r2
   3f448:	mov	r1, #0
   3f44c:	mov	r2, #2
   3f450:	bl	1a68 <fseek@plt>
   3f454:	cmp	r5, #0
   3f458:	ldrne	r0, [r5, #36]	; 0x24
   3f45c:	cmpne	r0, #0
   3f460:	bne	3f470 <Mat_VarWrite5+0x80>
   3f464:	mov	r0, r6
   3f468:	sub	sp, fp, #28
   3f46c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3f470:	cmp	r7, #1
   3f474:	beq	3f658 <Mat_VarWrite5+0x268>
   3f478:	mov	r8, #0
   3f47c:	cmp	r7, #0
   3f480:	bne	3f78c <Mat_VarWrite5+0x39c>
   3f484:	ldr	r3, [r4]
   3f488:	sub	r0, fp, #56	; 0x38
   3f48c:	mov	r1, #4
   3f490:	mov	r2, #1
   3f494:	bl	18c4 <fwrite@plt>
   3f498:	ldr	r3, [r4]
   3f49c:	sub	r0, fp, #52	; 0x34
   3f4a0:	mov	r1, #4
   3f4a4:	mov	r2, #1
   3f4a8:	bl	18c4 <fwrite@plt>
   3f4ac:	ldr	r0, [r4]
   3f4b0:	bl	1858 <ftell@plt>
   3f4b4:	mov	r8, r0
   3f4b8:	ldr	r0, [r5, #16]
   3f4bc:	ldr	r2, [r5, #20]
   3f4c0:	uxtb	r1, r0
   3f4c4:	cmp	r2, #0
   3f4c8:	str	r1, [fp, #-36]	; 0xffffffdc
   3f4cc:	orrne	r1, r1, #2048	; 0x800
   3f4d0:	strne	r1, [fp, #-36]	; 0xffffffdc
   3f4d4:	ldr	r2, [r5, #24]
   3f4d8:	cmp	r2, #0
   3f4dc:	orrne	r1, r1, #1024	; 0x400
   3f4e0:	strne	r1, [fp, #-36]	; 0xffffffdc
   3f4e4:	ldr	r2, [r5, #28]
   3f4e8:	cmp	r2, #0
   3f4ec:	mov	r2, #1
   3f4f0:	orrne	r1, r1, #512	; 0x200
   3f4f4:	strne	r1, [fp, #-36]	; 0xffffffdc
   3f4f8:	cmp	r0, #5
   3f4fc:	mov	r1, #4
   3f500:	ldreq	r0, [r5, #40]	; 0x28
   3f504:	ldreq	r0, [r0]
   3f508:	streq	r0, [fp, #-64]	; 0xffffffc0
   3f50c:	sub	r0, fp, #40	; 0x28
   3f510:	ldr	r3, [r4]
   3f514:	bl	18c4 <fwrite@plt>
   3f518:	ldr	r3, [r4]
   3f51c:	sub	r0, fp, #48	; 0x30
   3f520:	mov	r1, #4
   3f524:	mov	r2, #1
   3f528:	bl	18c4 <fwrite@plt>
   3f52c:	ldr	r3, [r4]
   3f530:	sub	r0, fp, #36	; 0x24
   3f534:	mov	r1, #4
   3f538:	mov	r2, #1
   3f53c:	bl	18c4 <fwrite@plt>
   3f540:	ldr	r3, [r4]
   3f544:	sub	r0, fp, #64	; 0x40
   3f548:	mov	r1, #4
   3f54c:	mov	r2, #1
   3f550:	bl	18c4 <fwrite@plt>
   3f554:	ldr	r0, [r5, #4]
   3f558:	mov	r1, #4
   3f55c:	mov	r2, #1
   3f560:	lsl	r0, r0, #2
   3f564:	str	r0, [fp, #-60]	; 0xffffffc4
   3f568:	sub	r0, fp, #44	; 0x2c
   3f56c:	ldr	r3, [r4]
   3f570:	bl	18c4 <fwrite@plt>
   3f574:	ldr	r3, [r4]
   3f578:	sub	r0, fp, #60	; 0x3c
   3f57c:	mov	r1, #4
   3f580:	mov	r2, #1
   3f584:	bl	18c4 <fwrite@plt>
   3f588:	ldr	r0, [r5, #4]
   3f58c:	cmp	r0, #1
   3f590:	blt	3f5cc <Mat_VarWrite5+0x1dc>
   3f594:	mov	r7, #0
   3f598:	add	r6, sp, #2064	; 0x810
   3f59c:	ldr	r0, [r5, #32]
   3f5a0:	mov	r1, #4
   3f5a4:	mov	r2, #1
   3f5a8:	ldr	r0, [r0, r7, lsl #2]
   3f5ac:	str	r0, [sp, #2064]	; 0x810
   3f5b0:	mov	r0, r6
   3f5b4:	ldr	r3, [r4]
   3f5b8:	bl	18c4 <fwrite@plt>
   3f5bc:	ldr	r0, [r5, #4]
   3f5c0:	add	r7, r7, #1
   3f5c4:	cmp	r7, r0
   3f5c8:	blt	3f59c <Mat_VarWrite5+0x1ac>
   3f5cc:	tst	r0, #1
   3f5d0:	beq	3f5e8 <Mat_VarWrite5+0x1f8>
   3f5d4:	ldr	r3, [r4]
   3f5d8:	sub	r0, fp, #52	; 0x34
   3f5dc:	mov	r1, #4
   3f5e0:	mov	r2, #1
   3f5e4:	bl	18c4 <fwrite@plt>
   3f5e8:	ldr	r0, [r5, #36]	; 0x24
   3f5ec:	bl	196c <strlen@plt>
   3f5f0:	mov	r6, r0
   3f5f4:	cmp	r0, #4
   3f5f8:	bhi	3f6c8 <Mat_VarWrite5+0x2d8>
   3f5fc:	mov	r0, #1
   3f600:	mov	r1, #4
   3f604:	mov	r2, #1
   3f608:	orr	r0, r0, r6, lsl #16
   3f60c:	str	r0, [sp, #2064]	; 0x810
   3f610:	add	r0, sp, #2064	; 0x810
   3f614:	ldr	r3, [r4]
   3f618:	bl	18c4 <fwrite@plt>
   3f61c:	ldr	r0, [r5, #36]	; 0x24
   3f620:	ldr	r3, [r4]
   3f624:	mov	r1, #1
   3f628:	mov	r2, r6
   3f62c:	bl	18c4 <fwrite@plt>
   3f630:	cmp	r6, #4
   3f634:	beq	3f744 <Mat_VarWrite5+0x354>
   3f638:	sub	r6, r6, #1
   3f63c:	ldr	r1, [r4]
   3f640:	mov	r0, #0
   3f644:	bl	1a08 <fputc@plt>
   3f648:	add	r6, r6, #1
   3f64c:	cmp	r6, #3
   3f650:	blt	3f63c <Mat_VarWrite5+0x24c>
   3f654:	b	3f744 <Mat_VarWrite5+0x354>
   3f658:	add	sl, sp, #16
   3f65c:	mov	r1, #0
   3f660:	mov	r2, #2048	; 0x800
   3f664:	mov	r0, sl
   3f668:	bl	19a8 <memset@plt>
   3f66c:	mov	r0, #1
   3f670:	mov	r1, #56	; 0x38
   3f674:	bl	17b0 <calloc@plt>
   3f678:	cmp	r0, #0
   3f67c:	beq	3f464 <Mat_VarWrite5+0x74>
   3f680:	ldr	r2, [pc, #1352]	; 3fbd0 <Mat_VarWrite5+0x7e0>
   3f684:	mvn	r1, #0
   3f688:	mov	r3, #56	; 0x38
   3f68c:	mov	r7, r0
   3f690:	add	r2, pc, r2
   3f694:	bl	18f4 <deflateInit_@plt>
   3f698:	cmp	r0, #0
   3f69c:	beq	3f800 <Mat_VarWrite5+0x410>
   3f6a0:	mov	r8, r0
   3f6a4:	mov	r0, r7
   3f6a8:	bl	181c <free@plt>
   3f6ac:	mov	r0, r8
   3f6b0:	bl	18a0 <zError@plt>
   3f6b4:	mov	r1, r0
   3f6b8:	ldr	r0, [pc, #1300]	; 3fbd4 <Mat_VarWrite5+0x7e4>
   3f6bc:	add	r0, pc, r0
   3f6c0:	bl	19cc <Mat_Critical@plt>
   3f6c4:	b	3f464 <Mat_VarWrite5+0x74>
   3f6c8:	mov	r0, #1
   3f6cc:	str	r6, [sp, #16]
   3f6d0:	mov	r1, #4
   3f6d4:	mov	r2, #1
   3f6d8:	str	r0, [sp, #2064]	; 0x810
   3f6dc:	add	r0, sp, #2064	; 0x810
   3f6e0:	ldr	r3, [r4]
   3f6e4:	bl	18c4 <fwrite@plt>
   3f6e8:	ldr	r3, [r4]
   3f6ec:	add	r0, sp, #16
   3f6f0:	mov	r1, #4
   3f6f4:	mov	r2, #1
   3f6f8:	bl	18c4 <fwrite@plt>
   3f6fc:	ldr	r6, [sp, #16]
   3f700:	ldr	r0, [r5, #36]	; 0x24
   3f704:	ldr	r3, [r4]
   3f708:	mov	r1, #1
   3f70c:	mov	r2, r6
   3f710:	bl	18c4 <fwrite@plt>
   3f714:	asr	r0, r6, #31
   3f718:	add	r0, r6, r0, lsr #29
   3f71c:	bic	r0, r0, #7
   3f720:	subs	r0, r6, r0
   3f724:	beq	3f744 <Mat_VarWrite5+0x354>
   3f728:	sub	r6, r0, #1
   3f72c:	ldr	r1, [r4]
   3f730:	mov	r0, #0
   3f734:	bl	1a08 <fputc@plt>
   3f738:	add	r6, r6, #1
   3f73c:	cmp	r6, #7
   3f740:	blt	3f72c <Mat_VarWrite5+0x33c>
   3f744:	ldr	r0, [r5, #52]	; 0x34
   3f748:	cmp	r0, #0
   3f74c:	beq	3f778 <Mat_VarWrite5+0x388>
   3f750:	ldr	r0, [r4]
   3f754:	bl	1858 <ftell@plt>
   3f758:	ldr	r1, [r5, #52]	; 0x34
   3f75c:	cmn	r0, #1
   3f760:	str	r0, [r1]
   3f764:	bne	3f780 <Mat_VarWrite5+0x390>
   3f768:	ldr	r0, [pc, #1116]	; 3fbcc <Mat_VarWrite5+0x7dc>
   3f76c:	add	r0, pc, r0
   3f770:	bl	19cc <Mat_Critical@plt>
   3f774:	b	3f780 <Mat_VarWrite5+0x390>
   3f778:	mov	r0, #0
   3f77c:	str	r0, [r5, #16]
   3f780:	mov	r0, r4
   3f784:	mov	r1, r5
   3f788:	bl	3fbe0 <WriteType>
   3f78c:	ldr	r0, [r4]
   3f790:	bl	1858 <ftell@plt>
   3f794:	cmn	r8, #1
   3f798:	movne	r5, r0
   3f79c:	cmnne	r0, #1
   3f7a0:	bne	3f7b8 <Mat_VarWrite5+0x3c8>
   3f7a4:	ldr	r0, [pc, #1072]	; 3fbdc <Mat_VarWrite5+0x7ec>
   3f7a8:	add	r0, pc, r0
   3f7ac:	bl	19cc <Mat_Critical@plt>
   3f7b0:	mov	r6, #0
   3f7b4:	b	3f464 <Mat_VarWrite5+0x74>
   3f7b8:	sub	r0, r5, r8
   3f7bc:	mvn	r1, #3
   3f7c0:	mov	r2, #1
   3f7c4:	str	r0, [fp, #-60]	; 0xffffffc4
   3f7c8:	sub	r1, r1, r0
   3f7cc:	ldr	r0, [r4]
   3f7d0:	bl	1a68 <fseek@plt>
   3f7d4:	ldr	r3, [r4]
   3f7d8:	sub	r0, fp, #60	; 0x3c
   3f7dc:	mov	r1, #4
   3f7e0:	mov	r2, #1
   3f7e4:	bl	18c4 <fwrite@plt>
   3f7e8:	ldr	r0, [r4]
   3f7ec:	mov	r1, r5
   3f7f0:	mov	r2, #0
   3f7f4:	mov	r6, #0
   3f7f8:	bl	1a68 <fseek@plt>
   3f7fc:	b	3f464 <Mat_VarWrite5+0x74>
   3f800:	mov	r0, #15
   3f804:	mov	r1, #4
   3f808:	mov	r2, #1
   3f80c:	str	r0, [fp, #-56]	; 0xffffffc8
   3f810:	sub	r0, fp, #56	; 0x38
   3f814:	ldr	r3, [r4]
   3f818:	bl	18c4 <fwrite@plt>
   3f81c:	ldr	r3, [r4]
   3f820:	sub	r0, fp, #52	; 0x34
   3f824:	mov	r1, #4
   3f828:	mov	r2, #1
   3f82c:	bl	18c4 <fwrite@plt>
   3f830:	ldr	r0, [r4]
   3f834:	bl	1858 <ftell@plt>
   3f838:	str	r0, [sp, #8]
   3f83c:	ldr	r0, [r5, #16]
   3f840:	ldr	r1, [r5, #20]
   3f844:	mov	r6, #24
   3f848:	uxtb	r8, r0
   3f84c:	cmp	r1, #0
   3f850:	str	r8, [fp, #-36]	; 0xffffffdc
   3f854:	orrne	r8, r8, #2048	; 0x800
   3f858:	strne	r8, [fp, #-36]	; 0xffffffdc
   3f85c:	ldr	r1, [r5, #24]
   3f860:	cmp	r1, #0
   3f864:	orrne	r8, r8, #1024	; 0x400
   3f868:	strne	r8, [fp, #-36]	; 0xffffffdc
   3f86c:	ldr	r1, [r5, #28]
   3f870:	cmp	r1, #0
   3f874:	mov	r1, #0
   3f878:	orrne	r8, r8, #512	; 0x200
   3f87c:	strne	r8, [fp, #-36]	; 0xffffffdc
   3f880:	cmp	r0, #5
   3f884:	ldreq	r0, [r5, #40]	; 0x28
   3f888:	ldreq	r1, [r0]
   3f88c:	mov	r0, #14
   3f890:	str	r0, [sp, #16]
   3f894:	streq	r1, [fp, #-64]	; 0xffffffc0
   3f898:	str	r1, [sp, #12]
   3f89c:	ldr	r0, [r5, #36]	; 0x24
   3f8a0:	cmp	r0, #0
   3f8a4:	beq	3f8c4 <Mat_VarWrite5+0x4d4>
   3f8a8:	bl	196c <strlen@plt>
   3f8ac:	cmp	r0, #5
   3f8b0:	bcc	3f8c4 <Mat_VarWrite5+0x4d4>
   3f8b4:	ands	r1, r0, #7
   3f8b8:	rsb	r1, r1, #8
   3f8bc:	addne	r0, r0, r1
   3f8c0:	add	r6, r0, #24
   3f8c4:	mov	r0, r5
   3f8c8:	bl	43714 <GetTypeBufSize>
   3f8cc:	add	r0, r0, r6
   3f8d0:	str	sl, [r7]
   3f8d4:	add	r6, sp, #2064	; 0x810
   3f8d8:	str	r0, [sp, #20]
   3f8dc:	mov	r0, #8
   3f8e0:	str	r0, [r7, #4]
   3f8e4:	orr	r0, sl, #4
   3f8e8:	mov	sl, #2048	; 0x800
   3f8ec:	str	r0, [sp, #4]
   3f8f0:	mov	r0, r7
   3f8f4:	mov	r1, #0
   3f8f8:	str	r6, [r7, #12]
   3f8fc:	str	sl, [r7, #16]
   3f900:	bl	18ac <deflate@plt>
   3f904:	ldr	r0, [r7, #16]
   3f908:	ldr	r3, [r4]
   3f90c:	mov	r1, #1
   3f910:	rsb	r2, r0, #2048	; 0x800
   3f914:	mov	r0, r6
   3f918:	bl	18c4 <fwrite@plt>
   3f91c:	ldr	r0, [r7, #16]
   3f920:	cmp	r0, #0
   3f924:	beq	3f8f0 <Mat_VarWrite5+0x500>
   3f928:	mov	r0, #8
   3f92c:	mov	r1, #5
   3f930:	str	r0, [sp, #20]
   3f934:	mov	r0, #6
   3f938:	str	r0, [sp, #16]
   3f93c:	ldr	r0, [sp, #12]
   3f940:	str	r8, [sp, #24]
   3f944:	str	r0, [sp, #28]
   3f948:	ldr	ip, [r5, #4]
   3f94c:	str	r1, [sp, #32]
   3f950:	lsl	r1, ip, #2
   3f954:	cmp	ip, #1
   3f958:	str	r1, [fp, #-60]	; 0xffffffc4
   3f95c:	str	r1, [sp, #36]	; 0x24
   3f960:	blt	3f98c <Mat_VarWrite5+0x59c>
   3f964:	ldr	r2, [r5, #32]
   3f968:	add	lr, sp, #16
   3f96c:	mov	r3, ip
   3f970:	add	r1, lr, #24
   3f974:	ldr	r0, [r2], #4
   3f978:	subs	r3, r3, #1
   3f97c:	str	r0, [r1], #4
   3f980:	bne	3f974 <Mat_VarWrite5+0x584>
   3f984:	mov	r1, ip
   3f988:	b	3f994 <Mat_VarWrite5+0x5a4>
   3f98c:	mov	r1, #0
   3f990:	add	lr, sp, #16
   3f994:	tst	ip, #1
   3f998:	add	r9, lr, #8
   3f99c:	mov	r8, #2048	; 0x800
   3f9a0:	str	lr, [r7]
   3f9a4:	ldrne	r2, [fp, #-52]	; 0xffffffcc
   3f9a8:	addne	r0, lr, r1, lsl #2
   3f9ac:	addne	r1, r1, #1
   3f9b0:	strne	r2, [r0, #24]
   3f9b4:	mov	r0, #24
   3f9b8:	add	r0, r0, r1, lsl #2
   3f9bc:	str	r0, [r7, #4]
   3f9c0:	mov	r0, r7
   3f9c4:	mov	r1, #0
   3f9c8:	str	r6, [r7, #12]
   3f9cc:	str	r8, [r7, #16]
   3f9d0:	bl	18ac <deflate@plt>
   3f9d4:	ldr	r0, [r7, #16]
   3f9d8:	ldr	r3, [r4]
   3f9dc:	mov	r1, #1
   3f9e0:	rsb	r2, r0, #2048	; 0x800
   3f9e4:	mov	r0, r6
   3f9e8:	bl	18c4 <fwrite@plt>
   3f9ec:	ldr	r0, [r7, #16]
   3f9f0:	cmp	r0, #0
   3f9f4:	beq	3f9c0 <Mat_VarWrite5+0x5d0>
   3f9f8:	ldr	sl, [r5, #36]	; 0x24
   3f9fc:	mov	r0, sl
   3fa00:	bl	196c <strlen@plt>
   3fa04:	mov	r8, r0
   3fa08:	cmp	r0, #4
   3fa0c:	bhi	3fa84 <Mat_VarWrite5+0x694>
   3fa10:	mov	r0, #0
   3fa14:	sxth	r2, r8
   3fa18:	mov	r1, sl
   3fa1c:	str	r0, [sp, #20]
   3fa20:	mov	r0, #1
   3fa24:	orr	r0, r0, r8, lsl #16
   3fa28:	str	r0, [sp, #16]
   3fa2c:	ldr	r0, [sp, #4]
   3fa30:	bl	1834 <memcpy@plt>
   3fa34:	add	r1, sp, #16
   3fa38:	mov	r8, #2048	; 0x800
   3fa3c:	mov	r0, #8
   3fa40:	str	r1, [r7]
   3fa44:	str	r0, [r7, #4]
   3fa48:	mov	r0, r7
   3fa4c:	mov	r1, #0
   3fa50:	str	r6, [r7, #12]
   3fa54:	str	r8, [r7, #16]
   3fa58:	bl	18ac <deflate@plt>
   3fa5c:	ldr	r0, [r7, #16]
   3fa60:	ldr	r3, [r4]
   3fa64:	mov	r1, #1
   3fa68:	rsb	r2, r0, #2048	; 0x800
   3fa6c:	mov	r0, r6
   3fa70:	bl	18c4 <fwrite@plt>
   3fa74:	ldr	r0, [r7, #16]
   3fa78:	cmp	r0, #0
   3fa7c:	beq	3fa48 <Mat_VarWrite5+0x658>
   3fa80:	b	3fb14 <Mat_VarWrite5+0x724>
   3fa84:	mov	r0, r9
   3fa88:	mov	r1, #0
   3fa8c:	movw	r2, #2040	; 0x7f8
   3fa90:	bl	19a8 <memset@plt>
   3fa94:	mov	r0, #1
   3fa98:	mov	r1, sl
   3fa9c:	mov	r2, r8
   3faa0:	str	r0, [sp, #16]
   3faa4:	mov	r0, r9
   3faa8:	str	r8, [sp, #20]
   3faac:	bl	1834 <memcpy@plt>
   3fab0:	asr	r0, r8, #31
   3fab4:	add	r1, sp, #16
   3fab8:	add	r0, r8, r0, lsr #29
   3fabc:	str	r1, [r7]
   3fac0:	bic	r0, r0, #7
   3fac4:	subs	r0, r8, r0
   3fac8:	rsb	r0, r0, #8
   3facc:	addne	r8, r8, r0
   3fad0:	add	r0, r8, #8
   3fad4:	mov	r8, #2048	; 0x800
   3fad8:	str	r0, [r7, #4]
   3fadc:	mov	r0, r7
   3fae0:	mov	r1, #0
   3fae4:	str	r6, [r7, #12]
   3fae8:	str	r8, [r7, #16]
   3faec:	bl	18ac <deflate@plt>
   3faf0:	ldr	r0, [r7, #16]
   3faf4:	ldr	r3, [r4]
   3faf8:	mov	r1, #1
   3fafc:	rsb	r2, r0, #2048	; 0x800
   3fb00:	mov	r0, r6
   3fb04:	bl	18c4 <fwrite@plt>
   3fb08:	ldr	r0, [r7, #16]
   3fb0c:	cmp	r0, #0
   3fb10:	beq	3fadc <Mat_VarWrite5+0x6ec>
   3fb14:	ldr	r0, [r5, #52]	; 0x34
   3fb18:	cmp	r0, #0
   3fb1c:	beq	3fb48 <Mat_VarWrite5+0x758>
   3fb20:	ldr	r0, [r4]
   3fb24:	bl	1858 <ftell@plt>
   3fb28:	ldr	r1, [r5, #52]	; 0x34
   3fb2c:	cmn	r0, #1
   3fb30:	str	r0, [r1]
   3fb34:	bne	3fb50 <Mat_VarWrite5+0x760>
   3fb38:	ldr	r0, [pc, #152]	; 3fbd8 <Mat_VarWrite5+0x7e8>
   3fb3c:	add	r0, pc, r0
   3fb40:	bl	19cc <Mat_Critical@plt>
   3fb44:	b	3fb50 <Mat_VarWrite5+0x760>
   3fb48:	mov	r0, #0
   3fb4c:	str	r0, [r5, #16]
   3fb50:	mov	r0, r4
   3fb54:	mov	r1, r5
   3fb58:	mov	r2, r7
   3fb5c:	bl	40bd0 <WriteCompressedType>
   3fb60:	mov	r0, #0
   3fb64:	mov	r8, #2048	; 0x800
   3fb68:	str	r0, [r7]
   3fb6c:	str	r0, [r7, #4]
   3fb70:	mov	r0, r7
   3fb74:	mov	r1, #4
   3fb78:	str	r6, [r7, #12]
   3fb7c:	str	r8, [r7, #16]
   3fb80:	bl	18ac <deflate@plt>
   3fb84:	mov	r5, r0
   3fb88:	ldr	r0, [r7, #16]
   3fb8c:	ldr	r3, [r4]
   3fb90:	mov	r1, #1
   3fb94:	rsb	r2, r0, #2048	; 0x800
   3fb98:	mov	r0, r6
   3fb9c:	bl	18c4 <fwrite@plt>
   3fba0:	cmp	r5, #1
   3fba4:	beq	3fbb4 <Mat_VarWrite5+0x7c4>
   3fba8:	ldr	r0, [r7, #16]
   3fbac:	cmp	r0, #0
   3fbb0:	beq	3fb70 <Mat_VarWrite5+0x780>
   3fbb4:	mov	r0, r7
   3fbb8:	bl	19d8 <deflateEnd@plt>
   3fbbc:	mov	r0, r7
   3fbc0:	bl	181c <free@plt>
   3fbc4:	ldr	r8, [sp, #8]
   3fbc8:	b	3f78c <Mat_VarWrite5+0x39c>
   3fbcc:	.word	0x0000a54c
   3fbd0:	.word	0x0000a87d
   3fbd4:	.word	0x0000a858
   3fbd8:	.word	0x0000a17c
   3fbdc:	.word	0x0000a510

0003fbe0 <WriteType>:
   3fbe0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3fbe4:	add	fp, sp, #28
   3fbe8:	sub	sp, sp, #116	; 0x74
   3fbec:	mov	r6, r1
   3fbf0:	mov	r4, r0
   3fbf4:	mov	r0, #1
   3fbf8:	add	r1, sp, #28
   3fbfc:	strh	r0, [sp, #38]	; 0x26
   3fc00:	str	r0, [sp, #28]
   3fc04:	mov	r0, r6
   3fc08:	bl	45294 <SafeMulDims>
   3fc0c:	ldr	r0, [r6, #16]
   3fc10:	sub	r1, r0, #6
   3fc14:	cmp	r1, #10
   3fc18:	bcs	3fcd4 <WriteType+0xf4>
   3fc1c:	ldr	r0, [r6, #20]
   3fc20:	ldr	r1, [r6, #40]	; 0x28
   3fc24:	cmp	r0, #0
   3fc28:	beq	3fd44 <WriteType+0x164>
   3fc2c:	ldr	r5, [pc, #3980]	; 40bc0 <WriteType+0xfe0>
   3fc30:	cmp	r1, #0
   3fc34:	ldr	r3, [r6, #8]
   3fc38:	ldr	r2, [sp, #28]
   3fc3c:	mov	r0, r4
   3fc40:	mov	r7, r6
   3fc44:	add	r5, pc, r5
   3fc48:	movne	r5, r1
   3fc4c:	ldr	r1, [r5]
   3fc50:	bl	43670 <WriteData>
   3fc54:	asr	r1, r0, #31
   3fc58:	str	r0, [sp, #32]
   3fc5c:	add	r1, r0, r1, lsr #29
   3fc60:	bic	r1, r1, #7
   3fc64:	subs	r0, r0, r1
   3fc68:	beq	3fc88 <WriteType+0xa8>
   3fc6c:	sub	r6, r0, #1
   3fc70:	ldr	r1, [r4]
   3fc74:	mov	r0, #0
   3fc78:	bl	1a08 <fputc@plt>
   3fc7c:	add	r6, r6, #1
   3fc80:	cmp	r6, #7
   3fc84:	blt	3fc70 <WriteType+0x90>
   3fc88:	ldr	r3, [r7, #8]
   3fc8c:	ldr	r1, [r5, #4]
   3fc90:	ldr	r2, [sp, #28]
   3fc94:	mov	r0, r4
   3fc98:	bl	43670 <WriteData>
   3fc9c:	asr	r1, r0, #31
   3fca0:	str	r0, [sp, #32]
   3fca4:	add	r1, r0, r1, lsr #29
   3fca8:	bic	r1, r1, #7
   3fcac:	subs	r0, r0, r1
   3fcb0:	beq	40bb8 <WriteType+0xfd8>
   3fcb4:	sub	r5, r0, #1
   3fcb8:	ldr	r1, [r4]
   3fcbc:	mov	r0, #0
   3fcc0:	bl	1a08 <fputc@plt>
   3fcc4:	add	r5, r5, #1
   3fcc8:	cmp	r5, #7
   3fccc:	blt	3fcb8 <WriteType+0xd8>
   3fcd0:	b	40bb8 <WriteType+0xfd8>
   3fcd4:	sub	r0, r0, #1
   3fcd8:	cmp	r0, #4
   3fcdc:	bhi	40bb8 <WriteType+0xfd8>
   3fce0:	add	r1, pc, #4
   3fce4:	ldr	r0, [r1, r0, lsl #2]
   3fce8:	add	pc, r1, r0
   3fcec:	.word	0x00000014
   3fcf0:	.word	0x00000520
   3fcf4:	.word	0x00000ecc
   3fcf8:	.word	0x0000044c
   3fcfc:	.word	0x00000b50
   3fd00:	ldr	r0, [r6]
   3fd04:	cmp	r0, #0
   3fd08:	beq	40bb8 <WriteType+0xfd8>
   3fd0c:	ldr	r7, [r6, #40]	; 0x28
   3fd10:	cmp	r7, #0
   3fd14:	ldrne	r1, [r6, #12]
   3fd18:	cmpne	r1, #0
   3fd1c:	beq	40bb8 <WriteType+0xfd8>
   3fd20:	udiv	r2, r0, r1
   3fd24:	cmp	r1, r0
   3fd28:	str	r2, [sp, #28]
   3fd2c:	bhi	40bb8 <WriteType+0xfd8>
   3fd30:	mov	r6, #0
   3fd34:	mov	r5, #1
   3fd38:	sub	sl, fp, #60	; 0x3c
   3fd3c:	mov	r9, #0
   3fd40:	b	400e8 <WriteType+0x508>
   3fd44:	ldr	r3, [r6, #8]
   3fd48:	ldr	r2, [sp, #28]
   3fd4c:	mov	r0, r4
   3fd50:	bl	43670 <WriteData>
   3fd54:	asr	r1, r0, #31
   3fd58:	str	r0, [sp, #32]
   3fd5c:	add	r1, r0, r1, lsr #29
   3fd60:	bic	r1, r1, #7
   3fd64:	subs	r0, r0, r1
   3fd68:	beq	40bb8 <WriteType+0xfd8>
   3fd6c:	sub	r5, r0, #1
   3fd70:	ldr	r1, [r4]
   3fd74:	mov	r0, #0
   3fd78:	bl	1a08 <fputc@plt>
   3fd7c:	add	r5, r5, #1
   3fd80:	cmp	r5, #7
   3fd84:	blt	3fd70 <WriteType+0x190>
   3fd88:	b	40bb8 <WriteType+0xfd8>
   3fd8c:	ldr	r3, [r4]
   3fd90:	sub	r0, fp, #48	; 0x30
   3fd94:	mov	r1, #4
   3fd98:	mov	r2, #1
   3fd9c:	bl	18c4 <fwrite@plt>
   3fda0:	ldr	r3, [r4]
   3fda4:	sub	r0, fp, #44	; 0x2c
   3fda8:	mov	r1, #4
   3fdac:	mov	r2, #1
   3fdb0:	bl	18c4 <fwrite@plt>
   3fdb4:	ldr	r0, [r8, #16]
   3fdb8:	cmp	r0, #0
   3fdbc:	beq	40124 <WriteType+0x544>
   3fdc0:	ldr	r0, [r4]
   3fdc4:	bl	1858 <ftell@plt>
   3fdc8:	str	r0, [sp, #12]
   3fdcc:	ldr	r0, [r8, #16]
   3fdd0:	add	r5, sp, #40	; 0x28
   3fdd4:	uxtb	r1, r0
   3fdd8:	str	r1, [sp, #40]	; 0x28
   3fddc:	ldr	r2, [r8, #20]
   3fde0:	cmp	r2, #0
   3fde4:	orrne	r1, r1, #2048	; 0x800
   3fde8:	strne	r1, [sp, #40]	; 0x28
   3fdec:	ldr	r2, [r8, #24]
   3fdf0:	cmp	r2, #0
   3fdf4:	orrne	r1, r1, #1024	; 0x400
   3fdf8:	strne	r1, [sp, #40]	; 0x28
   3fdfc:	ldr	r2, [r8, #28]
   3fe00:	cmp	r2, #0
   3fe04:	orrne	r1, r1, #512	; 0x200
   3fe08:	strne	r1, [sp, #40]	; 0x28
   3fe0c:	cmp	r0, #5
   3fe10:	ldreq	r0, [r8, #40]	; 0x28
   3fe14:	ldreq	r0, [r0]
   3fe18:	streq	r0, [fp, #-56]	; 0xffffffc8
   3fe1c:	ldr	r0, [r4, #20]
   3fe20:	cmp	r0, #0
   3fe24:	beq	3fe34 <WriteType+0x254>
   3fe28:	mov	r0, r5
   3fe2c:	bl	1c28 <Mat_int32Swap>
   3fe30:	str	r0, [sp, #40]	; 0x28
   3fe34:	ldr	r3, [r4]
   3fe38:	sub	r0, fp, #32
   3fe3c:	mov	r1, #4
   3fe40:	mov	r2, #1
   3fe44:	bl	18c4 <fwrite@plt>
   3fe48:	ldr	r3, [r4]
   3fe4c:	sub	r0, fp, #40	; 0x28
   3fe50:	mov	r1, #4
   3fe54:	mov	r2, #1
   3fe58:	bl	18c4 <fwrite@plt>
   3fe5c:	ldr	r3, [r4]
   3fe60:	mov	r0, r5
   3fe64:	mov	r1, #4
   3fe68:	mov	r2, #1
   3fe6c:	bl	18c4 <fwrite@plt>
   3fe70:	ldr	r3, [r4]
   3fe74:	sub	r0, fp, #56	; 0x38
   3fe78:	mov	r1, #4
   3fe7c:	mov	r2, #1
   3fe80:	bl	18c4 <fwrite@plt>
   3fe84:	ldr	r0, [r8, #4]
   3fe88:	mov	r1, #4
   3fe8c:	mov	r2, #1
   3fe90:	lsl	r0, r0, #2
   3fe94:	str	r0, [fp, #-52]	; 0xffffffcc
   3fe98:	sub	r0, fp, #36	; 0x24
   3fe9c:	ldr	r3, [r4]
   3fea0:	bl	18c4 <fwrite@plt>
   3fea4:	ldr	r3, [r4]
   3fea8:	sub	r0, fp, #52	; 0x34
   3feac:	mov	r1, #4
   3feb0:	mov	r2, #1
   3feb4:	bl	18c4 <fwrite@plt>
   3feb8:	ldr	r0, [r8, #4]
   3febc:	cmp	r0, #1
   3fec0:	blt	3fef8 <WriteType+0x318>
   3fec4:	mov	r5, #0
   3fec8:	ldr	r0, [r8, #32]
   3fecc:	mov	r1, #4
   3fed0:	mov	r2, #1
   3fed4:	ldr	r0, [r0, r5, lsl #2]
   3fed8:	str	r0, [fp, #-60]	; 0xffffffc4
   3fedc:	mov	r0, sl
   3fee0:	ldr	r3, [r4]
   3fee4:	bl	18c4 <fwrite@plt>
   3fee8:	ldr	r0, [r8, #4]
   3feec:	add	r5, r5, #1
   3fef0:	cmp	r5, r0
   3fef4:	blt	3fec8 <WriteType+0x2e8>
   3fef8:	tst	r0, #1
   3fefc:	beq	3ff14 <WriteType+0x334>
   3ff00:	ldr	r3, [r4]
   3ff04:	sub	r0, fp, #44	; 0x2c
   3ff08:	mov	r1, #4
   3ff0c:	mov	r2, #1
   3ff10:	bl	18c4 <fwrite@plt>
   3ff14:	ldr	r0, [r8, #36]	; 0x24
   3ff18:	cmp	r0, #0
   3ff1c:	beq	3ff98 <WriteType+0x3b8>
   3ff20:	bl	196c <strlen@plt>
   3ff24:	cmp	r0, #4
   3ff28:	bhi	3ffdc <WriteType+0x3fc>
   3ff2c:	strh	r0, [fp, #-60]	; 0xffffffc4
   3ff30:	sub	r0, fp, #64	; 0x40
   3ff34:	mov	r1, #2
   3ff38:	mov	r2, #1
   3ff3c:	ldr	r3, [r4]
   3ff40:	bl	18c4 <fwrite@plt>
   3ff44:	ldr	r3, [r4]
   3ff48:	mov	r0, sl
   3ff4c:	mov	r1, #2
   3ff50:	mov	r2, #1
   3ff54:	bl	18c4 <fwrite@plt>
   3ff58:	ldrsh	r5, [fp, #-60]	; 0xffffffc4
   3ff5c:	ldr	r0, [r8, #36]	; 0x24
   3ff60:	ldr	r3, [r4]
   3ff64:	mov	r1, #1
   3ff68:	mov	r2, r5
   3ff6c:	bl	18c4 <fwrite@plt>
   3ff70:	cmp	r5, #3
   3ff74:	bgt	40068 <WriteType+0x488>
   3ff78:	sub	r5, r5, #1
   3ff7c:	ldr	r1, [r4]
   3ff80:	mov	r0, #0
   3ff84:	bl	1a08 <fputc@plt>
   3ff88:	add	r5, r5, #1
   3ff8c:	cmp	r5, #3
   3ff90:	blt	3ff7c <WriteType+0x39c>
   3ff94:	b	40068 <WriteType+0x488>
   3ff98:	ldr	r3, [r4]
   3ff9c:	sub	r0, fp, #64	; 0x40
   3ffa0:	mov	r1, #2
   3ffa4:	mov	r2, #1
   3ffa8:	bl	18c4 <fwrite@plt>
   3ffac:	ldr	r1, [r4]
   3ffb0:	mov	r0, #0
   3ffb4:	bl	1a08 <fputc@plt>
   3ffb8:	ldr	r1, [r4]
   3ffbc:	mov	r0, #0
   3ffc0:	bl	1a08 <fputc@plt>
   3ffc4:	ldr	r3, [r4]
   3ffc8:	sub	r0, fp, #44	; 0x2c
   3ffcc:	mov	r1, #4
   3ffd0:	mov	r2, #1
   3ffd4:	bl	18c4 <fwrite@plt>
   3ffd8:	b	40068 <WriteType+0x488>
   3ffdc:	str	r0, [fp, #-60]	; 0xffffffc4
   3ffe0:	sub	r0, fp, #64	; 0x40
   3ffe4:	mov	r1, #2
   3ffe8:	mov	r2, #1
   3ffec:	ldr	r3, [r4]
   3fff0:	bl	18c4 <fwrite@plt>
   3fff4:	ldr	r1, [r4]
   3fff8:	mov	r0, #0
   3fffc:	bl	1a08 <fputc@plt>
   40000:	ldr	r1, [r4]
   40004:	mov	r0, #0
   40008:	bl	1a08 <fputc@plt>
   4000c:	ldr	r3, [r4]
   40010:	mov	r0, sl
   40014:	mov	r1, #4
   40018:	mov	r2, #1
   4001c:	bl	18c4 <fwrite@plt>
   40020:	ldr	r5, [fp, #-60]	; 0xffffffc4
   40024:	ldr	r0, [r8, #36]	; 0x24
   40028:	ldr	r3, [r4]
   4002c:	mov	r1, #1
   40030:	mov	r2, r5
   40034:	bl	18c4 <fwrite@plt>
   40038:	asr	r0, r5, #31
   4003c:	add	r0, r5, r0, lsr #29
   40040:	bic	r0, r0, #7
   40044:	subs	r0, r5, r0
   40048:	beq	40068 <WriteType+0x488>
   4004c:	sub	r5, r0, #1
   40050:	ldr	r1, [r4]
   40054:	mov	r0, #0
   40058:	bl	1a08 <fputc@plt>
   4005c:	add	r5, r5, #1
   40060:	cmp	r5, #7
   40064:	blt	40050 <WriteType+0x470>
   40068:	mov	r0, r4
   4006c:	mov	r1, r8
   40070:	bl	3fbe0 <WriteType>
   40074:	ldr	r0, [r4]
   40078:	bl	1858 <ftell@plt>
   4007c:	mov	r5, r0
   40080:	ldr	r0, [sp, #12]
   40084:	cmn	r0, #1
   40088:	cmnne	r5, #1
   4008c:	bne	400a0 <WriteType+0x4c0>
   40090:	ldr	r0, [pc, #2860]	; 40bc4 <WriteType+0xfe4>
   40094:	add	r0, pc, r0
   40098:	bl	19cc <Mat_Critical@plt>
   4009c:	b	400e0 <WriteType+0x500>
   400a0:	sub	r0, r5, r0
   400a4:	mvn	r1, #3
   400a8:	mov	r2, #1
   400ac:	str	r0, [fp, #-52]	; 0xffffffcc
   400b0:	sub	r1, r1, r0
   400b4:	ldr	r0, [r4]
   400b8:	bl	1a68 <fseek@plt>
   400bc:	ldr	r3, [r4]
   400c0:	sub	r0, fp, #52	; 0x34
   400c4:	mov	r1, #4
   400c8:	mov	r2, #1
   400cc:	bl	18c4 <fwrite@plt>
   400d0:	ldr	r0, [r4]
   400d4:	mov	r1, r5
   400d8:	mov	r2, #0
   400dc:	bl	1a68 <fseek@plt>
   400e0:	mov	r5, #1
   400e4:	b	40124 <WriteType+0x544>
   400e8:	ldr	r8, [r7, r9, lsl #2]
   400ec:	mov	r0, #6
   400f0:	cmp	r4, #0
   400f4:	strh	r5, [fp, #-64]	; 0xffffffc0
   400f8:	str	r6, [fp, #-44]	; 0xffffffd4
   400fc:	str	r6, [fp, #-56]	; 0xffffffc8
   40100:	str	r0, [fp, #-32]	; 0xffffffe0
   40104:	mov	r0, #5
   40108:	str	r0, [fp, #-36]	; 0xffffffdc
   4010c:	mov	r0, #8
   40110:	str	r0, [fp, #-40]	; 0xffffffd8
   40114:	mov	r0, #14
   40118:	cmpne	r8, #0
   4011c:	str	r0, [fp, #-48]	; 0xffffffd0
   40120:	bne	3fd8c <WriteType+0x1ac>
   40124:	ldr	r0, [sp, #28]
   40128:	add	r9, r9, #1
   4012c:	cmp	r9, r0
   40130:	bcc	400e8 <WriteType+0x508>
   40134:	b	40bb8 <WriteType+0xfd8>
   40138:	ldr	r0, [r6, #8]
   4013c:	ldr	r5, [r6, #40]	; 0x28
   40140:	ldr	r6, [sp, #28]
   40144:	mov	r1, #0
   40148:	str	r1, [fp, #-32]	; 0xffffffe0
   4014c:	cmp	r0, #3
   40150:	str	r0, [sp, #40]	; 0x28
   40154:	bgt	40978 <WriteType+0xd98>
   40158:	sub	r1, r0, #1
   4015c:	cmp	r1, #2
   40160:	bcs	40ae8 <WriteType+0xf08>
   40164:	mov	r0, #4
   40168:	mov	r1, #4
   4016c:	mov	r2, #1
   40170:	str	r0, [sp, #40]	; 0x28
   40174:	lsl	r0, r6, #1
   40178:	str	r0, [fp, #-32]	; 0xffffffe0
   4017c:	add	r0, sp, #40	; 0x28
   40180:	ldr	r3, [r4]
   40184:	bl	18c4 <fwrite@plt>
   40188:	ldr	r3, [r4]
   4018c:	sub	r0, fp, #32
   40190:	mov	r1, #4
   40194:	mov	r2, #1
   40198:	bl	18c4 <fwrite@plt>
   4019c:	cmp	r5, #0
   401a0:	beq	40bb0 <WriteType+0xfd0>
   401a4:	cmp	r6, #1
   401a8:	blt	401d4 <WriteType+0x5f4>
   401ac:	sub	r7, fp, #36	; 0x24
   401b0:	ldrb	r0, [r5], #1
   401b4:	mov	r1, #2
   401b8:	mov	r2, #1
   401bc:	strh	r0, [fp, #-36]	; 0xffffffdc
   401c0:	mov	r0, r7
   401c4:	ldr	r3, [r4]
   401c8:	bl	18c4 <fwrite@plt>
   401cc:	subs	r6, r6, #1
   401d0:	bne	401b0 <WriteType+0x5d0>
   401d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   401d8:	asr	r1, r0, #31
   401dc:	add	r1, r0, r1, lsr #29
   401e0:	bic	r1, r1, #7
   401e4:	subs	r0, r0, r1
   401e8:	beq	40bb0 <WriteType+0xfd0>
   401ec:	sub	r5, r0, #1
   401f0:	ldr	r1, [r4]
   401f4:	mov	r0, #0
   401f8:	bl	1a08 <fputc@plt>
   401fc:	add	r5, r5, #1
   40200:	cmp	r5, #7
   40204:	blt	401f0 <WriteType+0x610>
   40208:	b	40bb0 <WriteType+0xfd0>
   4020c:	ldr	r0, [r6, #52]	; 0x34
   40210:	ldr	r9, [r0, #4]
   40214:	cmp	r9, #0
   40218:	beq	40a14 <WriteType+0xe34>
   4021c:	ldr	r1, [r6, #40]	; 0x28
   40220:	ldr	r8, [r0, #8]
   40224:	mov	r5, #0
   40228:	mov	r7, #0
   4022c:	str	r6, [sp, #4]
   40230:	str	r1, [sp, #8]
   40234:	ldr	r0, [r8, r7, lsl #2]
   40238:	mov	r6, r5
   4023c:	bl	196c <strlen@plt>
   40240:	cmp	r0, r5
   40244:	add	r7, r7, #1
   40248:	movhi	r5, r0
   4024c:	cmp	r9, r7
   40250:	bne	40234 <WriteType+0x654>
   40254:	cmp	r0, r6
   40258:	movhi	r6, r0
   4025c:	add	r0, r6, #1
   40260:	mul	r0, r9, r0
   40264:	add	r1, r0, r9
   40268:	tst	r0, #7
   4026c:	add	r5, r5, #1
   40270:	mov	r0, r1
   40274:	bne	40264 <WriteType+0x684>
   40278:	movw	r0, #5
   4027c:	str	r5, [sp, #24]
   40280:	mov	r1, #4
   40284:	mov	r2, #1
   40288:	movt	r0, #4
   4028c:	str	r0, [sp, #16]
   40290:	add	r0, sp, #16
   40294:	ldr	r3, [r4]
   40298:	bl	18c4 <fwrite@plt>
   4029c:	ldr	r3, [r4]
   402a0:	add	r0, sp, #24
   402a4:	mov	r1, #4
   402a8:	mov	r2, #1
   402ac:	bl	18c4 <fwrite@plt>
   402b0:	ldr	r3, [r4]
   402b4:	add	r0, sp, #38	; 0x26
   402b8:	mov	r1, #2
   402bc:	mov	r2, #1
   402c0:	bl	18c4 <fwrite@plt>
   402c4:	ldr	r1, [r4]
   402c8:	mov	r0, #0
   402cc:	mov	r8, #0
   402d0:	bl	1a08 <fputc@plt>
   402d4:	ldr	r1, [r4]
   402d8:	mov	r0, #0
   402dc:	bl	1a08 <fputc@plt>
   402e0:	ldr	r5, [sp, #24]
   402e4:	mov	r1, #4
   402e8:	mov	r2, #1
   402ec:	mul	r0, r5, r9
   402f0:	str	r0, [sp, #32]
   402f4:	add	r0, sp, #32
   402f8:	ldr	r3, [r4]
   402fc:	bl	18c4 <fwrite@plt>
   40300:	mov	r0, r5
   40304:	mov	r1, #1
   40308:	str	r5, [sp, #12]
   4030c:	bl	17b0 <calloc@plt>
   40310:	ldr	r6, [sp, #4]
   40314:	mov	sl, r0
   40318:	ldr	r0, [r6, #52]	; 0x34
   4031c:	ldr	r0, [r0, #8]
   40320:	ldr	r5, [r0, r8, lsl #2]
   40324:	mov	r0, r5
   40328:	bl	196c <strlen@plt>
   4032c:	ldr	r3, [r4]
   40330:	mov	r7, r0
   40334:	mov	r0, r5
   40338:	mov	r1, #1
   4033c:	mov	r2, r7
   40340:	bl	18c4 <fwrite@plt>
   40344:	ldr	r0, [sp, #12]
   40348:	ldr	r3, [r4]
   4034c:	mov	r1, #1
   40350:	sub	r2, r0, r7
   40354:	mov	r0, sl
   40358:	bl	18c4 <fwrite@plt>
   4035c:	add	r8, r8, #1
   40360:	cmp	r9, r8
   40364:	bne	40318 <WriteType+0x738>
   40368:	mov	r0, sl
   4036c:	bl	181c <free@plt>
   40370:	ldr	r1, [sp, #28]
   40374:	add	r0, sp, #20
   40378:	mov	r2, r9
   4037c:	bl	452f0 <SafeMul>
   40380:	ldr	r0, [sp, #20]
   40384:	cmp	r0, #0
   40388:	beq	40bb8 <WriteType+0xfd8>
   4038c:	add	r0, sp, #40	; 0x28
   40390:	mov	r1, #0
   40394:	mov	r2, #1
   40398:	mov	r3, #5
   4039c:	mov	r7, #8
   403a0:	mov	r6, #14
   403a4:	sub	sl, fp, #64	; 0x40
   403a8:	mov	r9, #0
   403ac:	orr	r8, r0, #4
   403b0:	ldr	r0, [sp, #8]
   403b4:	ldr	r5, [r0, r9, lsl #2]
   403b8:	mov	r0, #6
   403bc:	str	r2, [fp, #-68]	; 0xffffffbc
   403c0:	str	r3, [sp, #68]	; 0x44
   403c4:	str	r7, [sp, #64]	; 0x40
   403c8:	str	r1, [sp, #60]	; 0x3c
   403cc:	str	r6, [sp, #56]	; 0x38
   403d0:	str	r1, [sp, #52]	; 0x34
   403d4:	str	r0, [sp, #72]	; 0x48
   403d8:	cmp	r5, #0
   403dc:	beq	405fc <WriteType+0xa1c>
   403e0:	ldr	r3, [r4]
   403e4:	add	r0, sp, #56	; 0x38
   403e8:	mov	r1, #4
   403ec:	mov	r2, #1
   403f0:	bl	18c4 <fwrite@plt>
   403f4:	ldr	r3, [r4]
   403f8:	add	r0, sp, #60	; 0x3c
   403fc:	mov	r1, #4
   40400:	mov	r2, #1
   40404:	bl	18c4 <fwrite@plt>
   40408:	ldr	r0, [r5, #16]
   4040c:	cmp	r0, #0
   40410:	beq	40814 <WriteType+0xc34>
   40414:	ldr	r0, [r4]
   40418:	bl	1858 <ftell@plt>
   4041c:	ldr	r3, [r5, #16]
   40420:	str	r0, [sp, #12]
   40424:	sub	r6, fp, #32
   40428:	add	r7, sp, #40	; 0x28
   4042c:	uxtb	r1, r3
   40430:	str	r1, [sp, #40]	; 0x28
   40434:	ldr	r2, [r5, #20]
   40438:	cmp	r2, #0
   4043c:	orrne	r1, r1, #2048	; 0x800
   40440:	strne	r1, [sp, #40]	; 0x28
   40444:	ldr	r2, [r5, #24]
   40448:	cmp	r2, #0
   4044c:	orrne	r1, r1, #1024	; 0x400
   40450:	strne	r1, [sp, #40]	; 0x28
   40454:	ldr	r2, [r5, #28]
   40458:	cmp	r2, #0
   4045c:	orrne	r1, r1, #512	; 0x200
   40460:	strne	r1, [sp, #40]	; 0x28
   40464:	cmp	r3, #5
   40468:	ldreq	r0, [r5, #40]	; 0x28
   4046c:	ldreq	r0, [r0]
   40470:	streq	r0, [sp, #52]	; 0x34
   40474:	ldr	r0, [r4, #20]
   40478:	cmp	r0, #0
   4047c:	beq	4048c <WriteType+0x8ac>
   40480:	mov	r0, r7
   40484:	bl	1c28 <Mat_int32Swap>
   40488:	str	r0, [sp, #40]	; 0x28
   4048c:	ldr	r3, [r4]
   40490:	add	r0, sp, #72	; 0x48
   40494:	mov	r1, #4
   40498:	mov	r2, #1
   4049c:	bl	18c4 <fwrite@plt>
   404a0:	ldr	r3, [r4]
   404a4:	add	r0, sp, #64	; 0x40
   404a8:	mov	r1, #4
   404ac:	mov	r2, #1
   404b0:	bl	18c4 <fwrite@plt>
   404b4:	ldr	r3, [r4]
   404b8:	mov	r0, r7
   404bc:	mov	r1, #4
   404c0:	mov	r2, #1
   404c4:	bl	18c4 <fwrite@plt>
   404c8:	ldr	r3, [r4]
   404cc:	add	r0, sp, #52	; 0x34
   404d0:	mov	r1, #4
   404d4:	mov	r2, #1
   404d8:	bl	18c4 <fwrite@plt>
   404dc:	ldr	r0, [r5, #4]
   404e0:	mov	r1, #4
   404e4:	mov	r2, #1
   404e8:	lsl	r0, r0, #2
   404ec:	str	r0, [fp, #-32]	; 0xffffffe0
   404f0:	add	r0, sp, #68	; 0x44
   404f4:	ldr	r3, [r4]
   404f8:	bl	18c4 <fwrite@plt>
   404fc:	ldr	r3, [r4]
   40500:	mov	r0, r6
   40504:	mov	r1, #4
   40508:	mov	r2, #1
   4050c:	bl	18c4 <fwrite@plt>
   40510:	ldr	r0, [r5, #4]
   40514:	sub	r6, fp, #36	; 0x24
   40518:	cmp	r0, #1
   4051c:	blt	40554 <WriteType+0x974>
   40520:	mov	r7, #0
   40524:	ldr	r0, [r5, #32]
   40528:	mov	r1, #4
   4052c:	mov	r2, #1
   40530:	ldr	r0, [r0, r7, lsl #2]
   40534:	str	r0, [fp, #-36]	; 0xffffffdc
   40538:	mov	r0, r6
   4053c:	ldr	r3, [r4]
   40540:	bl	18c4 <fwrite@plt>
   40544:	ldr	r0, [r5, #4]
   40548:	add	r7, r7, #1
   4054c:	cmp	r7, r0
   40550:	blt	40524 <WriteType+0x944>
   40554:	tst	r0, #1
   40558:	beq	40570 <WriteType+0x990>
   4055c:	ldr	r3, [r4]
   40560:	add	r0, sp, #60	; 0x3c
   40564:	mov	r1, #4
   40568:	mov	r2, #1
   4056c:	bl	18c4 <fwrite@plt>
   40570:	ldr	r3, [r4]
   40574:	sub	r0, fp, #68	; 0x44
   40578:	mov	r1, #4
   4057c:	mov	r2, #1
   40580:	bl	18c4 <fwrite@plt>
   40584:	ldr	r3, [r4]
   40588:	add	r0, sp, #60	; 0x3c
   4058c:	mov	r1, #4
   40590:	mov	r2, #1
   40594:	bl	18c4 <fwrite@plt>
   40598:	mov	r0, r4
   4059c:	mov	r1, r5
   405a0:	bl	3fbe0 <WriteType>
   405a4:	ldr	r0, [r4]
   405a8:	bl	1858 <ftell@plt>
   405ac:	mov	r5, r0
   405b0:	ldr	r0, [sp, #12]
   405b4:	cmn	r0, #1
   405b8:	cmnne	r5, #1
   405bc:	beq	407c4 <WriteType+0xbe4>
   405c0:	sub	r0, r5, r0
   405c4:	mvn	r1, #3
   405c8:	mov	r2, #1
   405cc:	str	r0, [fp, #-32]	; 0xffffffe0
   405d0:	sub	r1, r1, r0
   405d4:	ldr	r0, [r4]
   405d8:	bl	1a68 <fseek@plt>
   405dc:	ldr	r3, [r4]
   405e0:	sub	r0, fp, #32
   405e4:	mov	r1, #4
   405e8:	mov	r2, #1
   405ec:	bl	18c4 <fwrite@plt>
   405f0:	ldr	r0, [r4]
   405f4:	mov	r1, r5
   405f8:	b	4080c <WriteType+0xc2c>
   405fc:	str	r2, [fp, #-36]	; 0xffffffdc
   40600:	str	r0, [fp, #-44]	; 0xffffffd4
   40604:	str	r7, [fp, #-52]	; 0xffffffcc
   40608:	str	r1, [sp, #44]	; 0x2c
   4060c:	str	r1, [sp, #40]	; 0x28
   40610:	str	r1, [fp, #-56]	; 0xffffffc8
   40614:	str	r6, [fp, #-40]	; 0xffffffd8
   40618:	str	r3, [fp, #-48]	; 0xffffffd0
   4061c:	sub	r0, fp, #40	; 0x28
   40620:	mov	r1, #4
   40624:	mov	r2, #1
   40628:	mov	r7, #6
   4062c:	ldr	r3, [r4]
   40630:	bl	18c4 <fwrite@plt>
   40634:	ldr	r3, [r4]
   40638:	sub	r6, fp, #56	; 0x38
   4063c:	mov	r1, #4
   40640:	mov	r2, #1
   40644:	mov	r0, r6
   40648:	bl	18c4 <fwrite@plt>
   4064c:	ldr	r0, [r4]
   40650:	bl	1858 <ftell@plt>
   40654:	str	r7, [fp, #-32]	; 0xffffffe0
   40658:	mov	r5, r0
   4065c:	sub	r7, fp, #32
   40660:	ldr	r0, [r4, #20]
   40664:	cmp	r0, #0
   40668:	beq	40678 <WriteType+0xa98>
   4066c:	mov	r0, r7
   40670:	bl	1c28 <Mat_int32Swap>
   40674:	str	r0, [fp, #-32]	; 0xffffffe0
   40678:	ldr	r3, [r4]
   4067c:	sub	r0, fp, #44	; 0x2c
   40680:	mov	r1, #4
   40684:	mov	r2, #1
   40688:	bl	18c4 <fwrite@plt>
   4068c:	ldr	r3, [r4]
   40690:	sub	r0, fp, #52	; 0x34
   40694:	mov	r1, #4
   40698:	mov	r2, #1
   4069c:	bl	18c4 <fwrite@plt>
   406a0:	ldr	r3, [r4]
   406a4:	mov	r0, r7
   406a8:	mov	r1, #4
   406ac:	mov	r2, #1
   406b0:	bl	18c4 <fwrite@plt>
   406b4:	ldr	r3, [r4]
   406b8:	mov	r0, r6
   406bc:	mov	r1, #4
   406c0:	mov	r2, #1
   406c4:	bl	18c4 <fwrite@plt>
   406c8:	mov	r0, #8
   406cc:	mov	r1, #4
   406d0:	mov	r2, #1
   406d4:	str	r0, [fp, #-60]	; 0xffffffc4
   406d8:	sub	r0, fp, #48	; 0x30
   406dc:	ldr	r3, [r4]
   406e0:	bl	18c4 <fwrite@plt>
   406e4:	ldr	r3, [r4]
   406e8:	sub	r0, fp, #60	; 0x3c
   406ec:	mov	r1, #4
   406f0:	mov	r2, #1
   406f4:	bl	18c4 <fwrite@plt>
   406f8:	mov	r7, #0
   406fc:	mov	r0, sl
   40700:	mov	r1, #4
   40704:	mov	r2, #1
   40708:	str	r7, [fp, #-64]	; 0xffffffc0
   4070c:	ldr	r3, [r4]
   40710:	bl	18c4 <fwrite@plt>
   40714:	ldr	r0, [r8, r7, lsl #2]
   40718:	mov	r1, #4
   4071c:	mov	r2, #1
   40720:	str	r0, [fp, #-64]	; 0xffffffc0
   40724:	mov	r0, sl
   40728:	ldr	r3, [r4]
   4072c:	bl	18c4 <fwrite@plt>
   40730:	add	r7, r7, #1
   40734:	cmp	r7, #1
   40738:	bne	40714 <WriteType+0xb34>
   4073c:	ldr	r3, [r4]
   40740:	sub	r0, fp, #36	; 0x24
   40744:	mov	r1, #4
   40748:	mov	r2, #1
   4074c:	bl	18c4 <fwrite@plt>
   40750:	ldr	r3, [r4]
   40754:	mov	r0, r6
   40758:	mov	r1, #4
   4075c:	mov	r2, #1
   40760:	bl	18c4 <fwrite@plt>
   40764:	mov	r0, r4
   40768:	mov	r1, #0
   4076c:	mov	r2, #0
   40770:	mov	r3, #9
   40774:	bl	43670 <WriteData>
   40778:	asr	r1, r0, #31
   4077c:	str	r0, [fp, #-60]	; 0xffffffc4
   40780:	add	r1, r0, r1, lsr #29
   40784:	bic	r1, r1, #7
   40788:	subs	r0, r0, r1
   4078c:	beq	407ac <WriteType+0xbcc>
   40790:	sub	r7, r0, #1
   40794:	ldr	r1, [r4]
   40798:	mov	r0, #0
   4079c:	bl	1a08 <fputc@plt>
   407a0:	add	r7, r7, #1
   407a4:	cmp	r7, #7
   407a8:	blt	40794 <WriteType+0xbb4>
   407ac:	ldr	r0, [r4]
   407b0:	bl	1858 <ftell@plt>
   407b4:	cmn	r5, #1
   407b8:	movne	r7, r0
   407bc:	cmnne	r0, #1
   407c0:	bne	407d4 <WriteType+0xbf4>
   407c4:	ldr	r0, [pc, #1020]	; 40bc8 <WriteType+0xfe8>
   407c8:	add	r0, pc, r0
   407cc:	bl	19cc <Mat_Critical@plt>
   407d0:	b	40814 <WriteType+0xc34>
   407d4:	sub	r0, r7, r5
   407d8:	mvn	r1, #3
   407dc:	mov	r2, #1
   407e0:	str	r0, [fp, #-60]	; 0xffffffc4
   407e4:	sub	r1, r1, r0
   407e8:	ldr	r0, [r4]
   407ec:	bl	1a68 <fseek@plt>
   407f0:	ldr	r3, [r4]
   407f4:	sub	r0, fp, #60	; 0x3c
   407f8:	mov	r1, #4
   407fc:	mov	r2, #1
   40800:	bl	18c4 <fwrite@plt>
   40804:	ldr	r0, [r4]
   40808:	mov	r1, r7
   4080c:	mov	r2, #0
   40810:	bl	1a68 <fseek@plt>
   40814:	ldr	r0, [sp, #20]
   40818:	add	r9, r9, #1
   4081c:	mov	r1, #0
   40820:	mov	r2, #1
   40824:	mov	r3, #5
   40828:	mov	r7, #8
   4082c:	mov	r6, #14
   40830:	cmp	r9, r0
   40834:	bcc	403b0 <WriteType+0x7d0>
   40838:	b	40bb8 <WriteType+0xfd8>
   4083c:	ldr	r5, [r6, #40]	; 0x28
   40840:	mov	r0, r4
   40844:	mov	r3, #5
   40848:	mov	r8, r6
   4084c:	ldmib	r5, {r1, r2}
   40850:	bl	43670 <WriteData>
   40854:	asr	r1, r0, #31
   40858:	str	r0, [sp, #32]
   4085c:	add	r1, r0, r1, lsr #29
   40860:	bic	r1, r1, #7
   40864:	subs	r0, r0, r1
   40868:	beq	40888 <WriteType+0xca8>
   4086c:	sub	r6, r0, #1
   40870:	ldr	r1, [r4]
   40874:	mov	r0, #0
   40878:	bl	1a08 <fputc@plt>
   4087c:	add	r6, r6, #1
   40880:	cmp	r6, #7
   40884:	blt	40870 <WriteType+0xc90>
   40888:	ldr	r1, [r5, #12]
   4088c:	ldr	r2, [r5, #16]
   40890:	mov	r0, r4
   40894:	mov	r3, #5
   40898:	bl	43670 <WriteData>
   4089c:	asr	r1, r0, #31
   408a0:	str	r0, [sp, #32]
   408a4:	add	r1, r0, r1, lsr #29
   408a8:	bic	r1, r1, #7
   408ac:	subs	r0, r0, r1
   408b0:	beq	408d0 <WriteType+0xcf0>
   408b4:	sub	r6, r0, #1
   408b8:	ldr	r1, [r4]
   408bc:	mov	r0, #0
   408c0:	bl	1a08 <fputc@plt>
   408c4:	add	r6, r6, #1
   408c8:	cmp	r6, #7
   408cc:	blt	408b8 <WriteType+0xcd8>
   408d0:	ldr	r0, [r8, #20]
   408d4:	mov	r1, r8
   408d8:	cmp	r0, #0
   408dc:	beq	40a9c <WriteType+0xebc>
   408e0:	ldr	r6, [r5, #24]
   408e4:	ldr	r3, [r1, #8]
   408e8:	ldr	r2, [r5, #20]
   408ec:	mov	r0, r4
   408f0:	ldr	r1, [r6]
   408f4:	bl	43670 <WriteData>
   408f8:	asr	r1, r0, #31
   408fc:	str	r0, [sp, #32]
   40900:	add	r1, r0, r1, lsr #29
   40904:	bic	r1, r1, #7
   40908:	subs	r0, r0, r1
   4090c:	beq	4092c <WriteType+0xd4c>
   40910:	sub	r7, r0, #1
   40914:	ldr	r1, [r4]
   40918:	mov	r0, #0
   4091c:	bl	1a08 <fputc@plt>
   40920:	add	r7, r7, #1
   40924:	cmp	r7, #7
   40928:	blt	40914 <WriteType+0xd34>
   4092c:	ldr	r3, [r8, #8]
   40930:	ldr	r2, [r5, #20]
   40934:	ldr	r1, [r6, #4]
   40938:	mov	r0, r4
   4093c:	bl	43670 <WriteData>
   40940:	asr	r1, r0, #31
   40944:	str	r0, [sp, #32]
   40948:	add	r1, r0, r1, lsr #29
   4094c:	bic	r1, r1, #7
   40950:	subs	r0, r0, r1
   40954:	beq	40bb8 <WriteType+0xfd8>
   40958:	sub	r5, r0, #1
   4095c:	ldr	r1, [r4]
   40960:	mov	r0, #0
   40964:	bl	1a08 <fputc@plt>
   40968:	add	r5, r5, #1
   4096c:	cmp	r5, #7
   40970:	blt	4095c <WriteType+0xd7c>
   40974:	b	40bb8 <WriteType+0xfd8>
   40978:	cmp	r0, #16
   4097c:	beq	40b2c <WriteType+0xf4c>
   40980:	cmp	r0, #4
   40984:	bne	40bb0 <WriteType+0xfd0>
   40988:	lsl	r0, r6, #1
   4098c:	mov	r1, #4
   40990:	mov	r2, #1
   40994:	str	r0, [fp, #-32]	; 0xffffffe0
   40998:	add	r0, sp, #40	; 0x28
   4099c:	ldr	r3, [r4]
   409a0:	bl	18c4 <fwrite@plt>
   409a4:	ldr	r3, [r4]
   409a8:	sub	r0, fp, #32
   409ac:	mov	r1, #4
   409b0:	mov	r2, #1
   409b4:	bl	18c4 <fwrite@plt>
   409b8:	cmp	r5, #0
   409bc:	beq	409dc <WriteType+0xdfc>
   409c0:	cmp	r6, #1
   409c4:	blt	409dc <WriteType+0xdfc>
   409c8:	ldr	r3, [r4]
   409cc:	mov	r0, r5
   409d0:	mov	r1, #2
   409d4:	mov	r2, r6
   409d8:	bl	18c4 <fwrite@plt>
   409dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   409e0:	asr	r1, r0, #31
   409e4:	add	r1, r0, r1, lsr #29
   409e8:	bic	r1, r1, #7
   409ec:	subs	r0, r0, r1
   409f0:	beq	40bb0 <WriteType+0xfd0>
   409f4:	sub	r5, r0, #1
   409f8:	ldr	r1, [r4]
   409fc:	mov	r0, #0
   40a00:	bl	1a08 <fputc@plt>
   40a04:	add	r5, r5, #1
   40a08:	cmp	r5, #7
   40a0c:	blt	409f8 <WriteType+0xe18>
   40a10:	b	40bb0 <WriteType+0xfd0>
   40a14:	movw	r0, #5
   40a18:	mov	r1, #4
   40a1c:	mov	r2, #1
   40a20:	mov	r5, #1
   40a24:	movt	r0, #4
   40a28:	str	r0, [sp, #16]
   40a2c:	add	r0, sp, #16
   40a30:	ldr	r3, [r4]
   40a34:	bl	18c4 <fwrite@plt>
   40a38:	str	r5, [sp, #24]
   40a3c:	add	r0, sp, #24
   40a40:	mov	r1, #4
   40a44:	mov	r2, #1
   40a48:	ldr	r3, [r4]
   40a4c:	bl	18c4 <fwrite@plt>
   40a50:	ldr	r3, [r4]
   40a54:	add	r0, sp, #38	; 0x26
   40a58:	mov	r1, #2
   40a5c:	mov	r2, #1
   40a60:	bl	18c4 <fwrite@plt>
   40a64:	ldr	r1, [r4]
   40a68:	mov	r0, #0
   40a6c:	mov	r5, #0
   40a70:	bl	1a08 <fputc@plt>
   40a74:	ldr	r1, [r4]
   40a78:	mov	r0, #0
   40a7c:	bl	1a08 <fputc@plt>
   40a80:	str	r5, [sp, #32]
   40a84:	add	r0, sp, #32
   40a88:	mov	r1, #4
   40a8c:	mov	r2, #1
   40a90:	ldr	r3, [r4]
   40a94:	bl	18c4 <fwrite@plt>
   40a98:	b	40bb8 <WriteType+0xfd8>
   40a9c:	ldr	r3, [r1, #8]
   40aa0:	ldr	r2, [r5, #20]
   40aa4:	ldr	r1, [r5, #24]
   40aa8:	mov	r0, r4
   40aac:	bl	43670 <WriteData>
   40ab0:	asr	r1, r0, #31
   40ab4:	str	r0, [sp, #32]
   40ab8:	add	r1, r0, r1, lsr #29
   40abc:	bic	r1, r1, #7
   40ac0:	subs	r0, r0, r1
   40ac4:	beq	40bb8 <WriteType+0xfd8>
   40ac8:	sub	r5, r0, #1
   40acc:	ldr	r1, [r4]
   40ad0:	mov	r0, #0
   40ad4:	bl	1a08 <fputc@plt>
   40ad8:	add	r5, r5, #1
   40adc:	cmp	r5, #7
   40ae0:	blt	40acc <WriteType+0xeec>
   40ae4:	b	40bb8 <WriteType+0xfd8>
   40ae8:	cmp	r0, #0
   40aec:	bne	40bb0 <WriteType+0xfd0>
   40af0:	mov	r0, #4
   40af4:	mov	r1, #4
   40af8:	mov	r2, #1
   40afc:	str	r0, [sp, #40]	; 0x28
   40b00:	lsl	r0, r6, #1
   40b04:	str	r0, [fp, #-32]	; 0xffffffe0
   40b08:	add	r0, sp, #40	; 0x28
   40b0c:	ldr	r3, [r4]
   40b10:	bl	18c4 <fwrite@plt>
   40b14:	ldr	r3, [r4]
   40b18:	sub	r0, fp, #32
   40b1c:	mov	r1, #4
   40b20:	mov	r2, #1
   40b24:	bl	18c4 <fwrite@plt>
   40b28:	b	40bb0 <WriteType+0xfd0>
   40b2c:	str	r6, [fp, #-32]	; 0xffffffe0
   40b30:	add	r0, sp, #40	; 0x28
   40b34:	mov	r1, #4
   40b38:	mov	r2, #1
   40b3c:	ldr	r3, [r4]
   40b40:	bl	18c4 <fwrite@plt>
   40b44:	ldr	r3, [r4]
   40b48:	sub	r0, fp, #32
   40b4c:	mov	r1, #4
   40b50:	mov	r2, #1
   40b54:	bl	18c4 <fwrite@plt>
   40b58:	ldr	r6, [fp, #-32]	; 0xffffffe0
   40b5c:	cmp	r5, #0
   40b60:	beq	40b80 <WriteType+0xfa0>
   40b64:	cmp	r6, #1
   40b68:	blt	40b80 <WriteType+0xfa0>
   40b6c:	ldr	r3, [r4]
   40b70:	mov	r0, r5
   40b74:	mov	r1, #1
   40b78:	mov	r2, r6
   40b7c:	bl	18c4 <fwrite@plt>
   40b80:	asr	r0, r6, #31
   40b84:	add	r0, r6, r0, lsr #29
   40b88:	bic	r0, r0, #7
   40b8c:	subs	r0, r6, r0
   40b90:	beq	40bb0 <WriteType+0xfd0>
   40b94:	sub	r5, r0, #1
   40b98:	ldr	r1, [r4]
   40b9c:	mov	r0, #0
   40ba0:	bl	1a08 <fputc@plt>
   40ba4:	add	r5, r5, #1
   40ba8:	cmp	r5, #7
   40bac:	blt	40b98 <WriteType+0xfb8>
   40bb0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   40bb4:	str	r0, [sp, #32]
   40bb8:	sub	sp, fp, #28
   40bbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   40bc0:	.word	0x0000a4bc
   40bc4:	.word	0x00009c24
   40bc8:	.word	0x000094f0
   40bcc:	.word	0xe320f000

00040bd0 <WriteCompressedType>:
   40bd0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   40bd4:	add	fp, sp, #28
   40bd8:	sub	sp, sp, #44	; 0x2c
   40bdc:	sub	sp, sp, #10240	; 0x2800
   40be0:	add	r5, sp, #40	; 0x28
   40be4:	mov	r4, r2
   40be8:	mov	r7, r1
   40bec:	mov	sl, r0
   40bf0:	mov	r1, #0
   40bf4:	mov	r2, #2048	; 0x800
   40bf8:	mov	r6, #0
   40bfc:	mov	r0, r5
   40c00:	bl	19a8 <memset@plt>
   40c04:	mov	r0, #1
   40c08:	str	r0, [sp, #36]	; 0x24
   40c0c:	ldr	r0, [r7, #16]
   40c10:	cmp	r0, #0
   40c14:	beq	4153c <WriteCompressedType+0x96c>
   40c18:	add	r1, sp, #36	; 0x24
   40c1c:	mov	r0, r7
   40c20:	bl	45294 <SafeMulDims>
   40c24:	ldr	r0, [r7, #16]
   40c28:	sub	r1, r0, #6
   40c2c:	cmp	r1, #10
   40c30:	bcs	40c98 <WriteCompressedType+0xc8>
   40c34:	ldr	r0, [r7, #20]
   40c38:	ldr	r2, [r7, #40]	; 0x28
   40c3c:	cmp	r0, #0
   40c40:	beq	40de4 <WriteCompressedType+0x214>
   40c44:	ldr	r5, [pc, #2460]	; 415e8 <WriteCompressedType+0xa18>
   40c48:	cmp	r2, #0
   40c4c:	ldr	r0, [r7, #8]
   40c50:	ldr	r3, [sp, #36]	; 0x24
   40c54:	mov	r1, r4
   40c58:	add	r5, pc, r5
   40c5c:	movne	r5, r2
   40c60:	ldr	r2, [r5]
   40c64:	str	r0, [sp]
   40c68:	mov	r0, sl
   40c6c:	bl	439c8 <WriteCompressedData>
   40c70:	mov	r6, r0
   40c74:	ldr	r0, [r7, #8]
   40c78:	ldr	r2, [r5, #4]
   40c7c:	ldr	r3, [sp, #36]	; 0x24
   40c80:	mov	r1, r4
   40c84:	str	r0, [sp]
   40c88:	mov	r0, sl
   40c8c:	bl	439c8 <WriteCompressedData>
   40c90:	add	r6, r0, r6
   40c94:	b	4153c <WriteCompressedType+0x96c>
   40c98:	sub	r0, r0, #1
   40c9c:	cmp	r0, #4
   40ca0:	bhi	4153c <WriteCompressedType+0x96c>
   40ca4:	add	r1, pc, #4
   40ca8:	ldr	r0, [r1, r0, lsl #2]
   40cac:	add	pc, r1, r0
   40cb0:	.word	0x00000014
   40cb4:	.word	0x00000154
   40cb8:	.word	0x0000088c
   40cbc:	.word	0x000005d4
   40cc0:	.word	0x00000774
   40cc4:	ldr	r0, [r7]
   40cc8:	cmp	r0, #0
   40ccc:	beq	4153c <WriteCompressedType+0x96c>
   40cd0:	ldr	r1, [r7, #40]	; 0x28
   40cd4:	cmp	r1, #0
   40cd8:	str	r1, [sp, #28]
   40cdc:	ldrne	r1, [r7, #12]
   40ce0:	cmpne	r1, #0
   40ce4:	beq	4153c <WriteCompressedType+0x96c>
   40ce8:	udiv	r9, r0, r1
   40cec:	cmp	r1, r0
   40cf0:	str	r9, [sp, #36]	; 0x24
   40cf4:	bhi	4153c <WriteCompressedType+0x96c>
   40cf8:	mov	r5, #0
   40cfc:	mov	r8, #2048	; 0x800
   40d00:	sub	r7, fp, #2080	; 0x820
   40d04:	ldr	r0, [sp, #28]
   40d08:	sub	lr, fp, #4096	; 0x1000
   40d0c:	mov	r1, #0
   40d10:	mov	r2, #2048	; 0x800
   40d14:	ldr	r6, [r0, r5, lsl #2]
   40d18:	sub	r0, lr, #32
   40d1c:	bl	19a8 <memset@plt>
   40d20:	cmp	r4, #0
   40d24:	beq	40dd0 <WriteCompressedType+0x200>
   40d28:	cmp	sl, #0
   40d2c:	cmpne	r6, #0
   40d30:	beq	40dd0 <WriteCompressedType+0x200>
   40d34:	add	lr, sp, #4096	; 0x1000
   40d38:	mov	r1, #14
   40d3c:	add	r0, lr, #44	; 0x2c
   40d40:	str	r1, [r0, #2044]	; 0x7fc
   40d44:	ldr	r0, [r6, #16]
   40d48:	cmp	r0, #0
   40d4c:	beq	40d60 <WriteCompressedType+0x190>
   40d50:	mov	r0, r6
   40d54:	bl	43714 <GetTypeBufSize>
   40d58:	add	r0, r0, #24
   40d5c:	b	40d64 <WriteCompressedType+0x194>
   40d60:	mov	r0, #0
   40d64:	add	lr, sp, #4096	; 0x1000
   40d68:	add	r1, lr, #44	; 0x2c
   40d6c:	sub	lr, fp, #4096	; 0x1000
   40d70:	str	r0, [r1, #2048]	; 0x800
   40d74:	sub	r0, lr, #32
   40d78:	str	r0, [r4]
   40d7c:	mov	r0, #8
   40d80:	str	r0, [r4, #4]
   40d84:	mov	r0, r4
   40d88:	mov	r1, #0
   40d8c:	str	r7, [r4, #12]
   40d90:	str	r8, [r4, #16]
   40d94:	bl	18ac <deflate@plt>
   40d98:	ldr	r0, [r4, #16]
   40d9c:	ldr	r3, [sl]
   40da0:	mov	r1, #1
   40da4:	rsb	r2, r0, #2048	; 0x800
   40da8:	mov	r0, r7
   40dac:	bl	18c4 <fwrite@plt>
   40db0:	ldr	r0, [r4, #16]
   40db4:	cmp	r0, #0
   40db8:	beq	40d84 <WriteCompressedType+0x1b4>
   40dbc:	mov	r0, sl
   40dc0:	mov	r1, r6
   40dc4:	mov	r2, r4
   40dc8:	bl	43b48 <WriteCompressedTypeArrayFlags>
   40dcc:	ldr	r9, [sp, #36]	; 0x24
   40dd0:	add	r5, r5, #1
   40dd4:	mov	r6, #0
   40dd8:	cmp	r5, r9
   40ddc:	bcc	40d04 <WriteCompressedType+0x134>
   40de0:	b	4153c <WriteCompressedType+0x96c>
   40de4:	ldr	r0, [r7, #8]
   40de8:	ldr	r3, [sp, #36]	; 0x24
   40dec:	mov	r1, r4
   40df0:	str	r0, [sp]
   40df4:	mov	r0, sl
   40df8:	bl	439c8 <WriteCompressedData>
   40dfc:	mov	r6, r0
   40e00:	b	4153c <WriteCompressedType+0x96c>
   40e04:	ldr	r0, [r7, #52]	; 0x34
   40e08:	ldr	r9, [r0, #4]
   40e0c:	cmp	r9, #0
   40e10:	beq	414b4 <WriteCompressedType+0x8e4>
   40e14:	ldr	r1, [r7, #40]	; 0x28
   40e18:	ldr	r8, [r0, #8]
   40e1c:	str	r7, [sp, #8]
   40e20:	mov	r7, #0
   40e24:	mov	r6, #0
   40e28:	str	r1, [sp, #4]
   40e2c:	ldr	r0, [r8, r6, lsl #2]
   40e30:	mov	r5, r7
   40e34:	bl	196c <strlen@plt>
   40e38:	cmp	r0, r7
   40e3c:	add	r6, r6, #1
   40e40:	movhi	r7, r0
   40e44:	cmp	r9, r6
   40e48:	bne	40e2c <WriteCompressedType+0x25c>
   40e4c:	cmp	r0, r5
   40e50:	mov	r1, r5
   40e54:	mov	r3, #0
   40e58:	movhi	r1, r0
   40e5c:	add	r1, r1, #1
   40e60:	mul	r2, r9, r1
   40e64:	add	r1, r3, r9
   40e68:	add	r3, r2, r3
   40e6c:	add	r7, r7, #1
   40e70:	tst	r3, #7
   40e74:	mov	r3, r1
   40e78:	bne	40e64 <WriteCompressedType+0x294>
   40e7c:	movw	r2, #5
   40e80:	cmp	r0, r5
   40e84:	str	r7, [sp, #44]	; 0x2c
   40e88:	str	r9, [sp, #16]
   40e8c:	str	r7, [sp, #28]
   40e90:	movhi	r5, r0
   40e94:	movt	r2, #4
   40e98:	str	r2, [sp, #40]	; 0x28
   40e9c:	mov	r2, #1
   40ea0:	mla	r0, r9, r5, r1
   40ea4:	mov	r1, #1
   40ea8:	str	r2, [sp, #48]	; 0x30
   40eac:	str	r0, [sp, #52]	; 0x34
   40eb0:	mov	r0, r7
   40eb4:	bl	17b0 <calloc@plt>
   40eb8:	add	lr, sp, #2048	; 0x800
   40ebc:	str	r0, [sp, #12]
   40ec0:	add	r1, sp, #40	; 0x28
   40ec4:	mov	r0, #16
   40ec8:	mov	r6, #0
   40ecc:	mov	r5, #2048	; 0x800
   40ed0:	add	r8, lr, #40	; 0x28
   40ed4:	str	r1, [r4]
   40ed8:	str	r0, [r4, #4]
   40edc:	mov	r0, r4
   40ee0:	mov	r1, #0
   40ee4:	str	r8, [r4, #12]
   40ee8:	str	r5, [r4, #16]
   40eec:	bl	18ac <deflate@plt>
   40ef0:	ldr	r0, [r4, #16]
   40ef4:	ldr	r3, [sl]
   40ef8:	mov	r1, #1
   40efc:	rsb	r2, r0, #2048	; 0x800
   40f00:	mov	r0, r8
   40f04:	bl	18c4 <fwrite@plt>
   40f08:	add	r6, r0, r6
   40f0c:	ldr	r0, [r4, #16]
   40f10:	cmp	r0, #0
   40f14:	beq	40edc <WriteCompressedType+0x30c>
   40f18:	ldr	r7, [sp, #12]
   40f1c:	mov	r5, #0
   40f20:	mov	r9, #2048	; 0x800
   40f24:	ldr	r0, [sp, #8]
   40f28:	ldr	r0, [r0, #52]	; 0x34
   40f2c:	str	r0, [sp, #24]
   40f30:	ldr	r0, [r0, #8]
   40f34:	ldr	r0, [r0, r5, lsl #2]
   40f38:	bl	196c <strlen@plt>
   40f3c:	ldr	r2, [sp, #28]
   40f40:	str	r0, [sp, #20]
   40f44:	mov	r0, r7
   40f48:	mov	r1, #0
   40f4c:	bl	19a8 <memset@plt>
   40f50:	ldr	r0, [sp, #24]
   40f54:	ldr	r2, [sp, #20]
   40f58:	ldr	r0, [r0, #8]
   40f5c:	ldr	r1, [r0, r5, lsl #2]
   40f60:	mov	r0, r7
   40f64:	bl	1834 <memcpy@plt>
   40f68:	ldr	r0, [sp, #28]
   40f6c:	str	r7, [r4]
   40f70:	str	r0, [r4, #4]
   40f74:	mov	r0, r4
   40f78:	mov	r1, #0
   40f7c:	str	r8, [r4, #12]
   40f80:	str	r9, [r4, #16]
   40f84:	bl	18ac <deflate@plt>
   40f88:	ldr	r0, [r4, #16]
   40f8c:	ldr	r3, [sl]
   40f90:	mov	r1, #1
   40f94:	rsb	r2, r0, #2048	; 0x800
   40f98:	mov	r0, r8
   40f9c:	bl	18c4 <fwrite@plt>
   40fa0:	add	r6, r0, r6
   40fa4:	ldr	r0, [r4, #16]
   40fa8:	cmp	r0, #0
   40fac:	beq	40f74 <WriteCompressedType+0x3a4>
   40fb0:	ldr	r0, [sp, #16]
   40fb4:	add	r5, r5, #1
   40fb8:	cmp	r5, r0
   40fbc:	bne	40f24 <WriteCompressedType+0x354>
   40fc0:	ldr	r0, [sp, #12]
   40fc4:	bl	181c <free@plt>
   40fc8:	ldr	r1, [sp, #36]	; 0x24
   40fcc:	ldr	r2, [sp, #16]
   40fd0:	add	r0, sp, #32
   40fd4:	bl	452f0 <SafeMul>
   40fd8:	ldr	r0, [sp, #32]
   40fdc:	cmp	r0, #0
   40fe0:	beq	4153c <WriteCompressedType+0x96c>
   40fe4:	sub	lr, fp, #4096	; 0x1000
   40fe8:	mov	r8, #2048	; 0x800
   40fec:	sub	r7, fp, #2080	; 0x820
   40ff0:	mov	r5, #0
   40ff4:	sub	r0, lr, #32
   40ff8:	add	r1, r0, #8
   40ffc:	add	r0, r0, #24
   41000:	str	r1, [sp, #24]
   41004:	str	r0, [sp, #20]
   41008:	ldr	r0, [sp, #4]
   4100c:	add	lr, sp, #4096	; 0x1000
   41010:	mov	r1, #0
   41014:	mov	r2, #2048	; 0x800
   41018:	ldr	r9, [r0, r5, lsl #2]
   4101c:	add	r0, lr, #40	; 0x28
   41020:	bl	19a8 <memset@plt>
   41024:	cmp	r9, #0
   41028:	str	r5, [sp, #28]
   4102c:	beq	410d8 <WriteCompressedType+0x508>
   41030:	add	lr, sp, #4096	; 0x1000
   41034:	mov	r1, #14
   41038:	mov	r5, r9
   4103c:	add	r0, lr, #44	; 0x2c
   41040:	str	r1, [r0, #-4]
   41044:	ldr	r0, [r9, #16]
   41048:	mov	r9, #0
   4104c:	cmp	r0, #0
   41050:	mov	r0, #0
   41054:	beq	41064 <WriteCompressedType+0x494>
   41058:	mov	r0, r5
   4105c:	bl	43714 <GetTypeBufSize>
   41060:	add	r0, r0, #24
   41064:	add	lr, sp, #4096	; 0x1000
   41068:	add	r1, lr, #44	; 0x2c
   4106c:	add	lr, sp, #4096	; 0x1000
   41070:	str	r0, [r1]
   41074:	add	r0, lr, #40	; 0x28
   41078:	str	r0, [r4]
   4107c:	mov	r0, #8
   41080:	str	r0, [r4, #4]
   41084:	mov	r0, r4
   41088:	mov	r1, #0
   4108c:	str	r7, [r4, #12]
   41090:	str	r8, [r4, #16]
   41094:	bl	18ac <deflate@plt>
   41098:	ldr	r0, [r4, #16]
   4109c:	ldr	r3, [sl]
   410a0:	mov	r1, #1
   410a4:	rsb	r2, r0, #2048	; 0x800
   410a8:	mov	r0, r7
   410ac:	bl	18c4 <fwrite@plt>
   410b0:	add	r9, r0, r9
   410b4:	ldr	r0, [r4, #16]
   410b8:	cmp	r0, #0
   410bc:	beq	41084 <WriteCompressedType+0x4b4>
   410c0:	mov	r0, sl
   410c4:	mov	r1, r5
   410c8:	mov	r2, r4
   410cc:	bl	43b48 <WriteCompressedTypeArrayFlags>
   410d0:	add	r0, r0, r9
   410d4:	b	41268 <WriteCompressedType+0x698>
   410d8:	ldr	r0, [sp, #24]
   410dc:	mov	r1, #0
   410e0:	movw	r2, #2040	; 0x7f8
   410e4:	mov	r5, #0
   410e8:	bl	19a8 <memset@plt>
   410ec:	add	lr, sp, #4096	; 0x1000
   410f0:	mov	r1, #14
   410f4:	add	r0, lr, #44	; 0x2c
   410f8:	sub	lr, fp, #4096	; 0x1000
   410fc:	str	r1, [r0, #2044]	; 0x7fc
   41100:	mov	r1, #48	; 0x30
   41104:	str	r1, [r0, #2048]	; 0x800
   41108:	sub	r0, lr, #32
   4110c:	str	r0, [r4]
   41110:	mov	r0, #8
   41114:	str	r0, [r4, #4]
   41118:	mov	r0, r4
   4111c:	mov	r1, #0
   41120:	str	r7, [r4, #12]
   41124:	str	r8, [r4, #16]
   41128:	bl	18ac <deflate@plt>
   4112c:	ldr	r0, [r4, #16]
   41130:	ldr	r3, [sl]
   41134:	mov	r1, #1
   41138:	rsb	r2, r0, #2048	; 0x800
   4113c:	mov	r0, r7
   41140:	bl	18c4 <fwrite@plt>
   41144:	add	r5, r0, r5
   41148:	ldr	r0, [r4, #16]
   4114c:	cmp	r0, #0
   41150:	beq	41118 <WriteCompressedType+0x548>
   41154:	add	r0, pc, #1004	; 0x3ec
   41158:	sub	lr, fp, #4096	; 0x1000
   4115c:	mov	r2, #20
   41160:	mov	r9, #0
   41164:	vld1.64	{d16-d17}, [r0]
   41168:	sub	r1, lr, #32
   4116c:	add	lr, sp, #4096	; 0x1000
   41170:	mov	r0, r1
   41174:	vst1.32	{d16-d17}, [r0], r2
   41178:	mov	r2, #8
   4117c:	str	r2, [r0]
   41180:	add	r0, lr, #44	; 0x2c
   41184:	mov	r2, #5
   41188:	str	r2, [r0, #2060]	; 0x80c
   4118c:	ldr	r0, [sp, #20]
   41190:	mov	r2, #0
   41194:	str	r2, [r0]
   41198:	str	r2, [r0, #4]
   4119c:	mov	r0, #32
   411a0:	str	r1, [r4]
   411a4:	str	r0, [r4, #4]
   411a8:	mov	r0, r4
   411ac:	mov	r1, #0
   411b0:	str	r7, [r4, #12]
   411b4:	str	r8, [r4, #16]
   411b8:	bl	18ac <deflate@plt>
   411bc:	ldr	r0, [r4, #16]
   411c0:	ldr	r3, [sl]
   411c4:	mov	r1, #1
   411c8:	rsb	r2, r0, #2048	; 0x800
   411cc:	mov	r0, r7
   411d0:	bl	18c4 <fwrite@plt>
   411d4:	add	r5, r0, r5
   411d8:	ldr	r0, [r4, #16]
   411dc:	cmp	r0, #0
   411e0:	beq	411a8 <WriteCompressedType+0x5d8>
   411e4:	add	lr, sp, #4096	; 0x1000
   411e8:	mov	r1, #1
   411ec:	add	r0, lr, #44	; 0x2c
   411f0:	sub	lr, fp, #4096	; 0x1000
   411f4:	str	r1, [r0, #2044]	; 0x7fc
   411f8:	str	r9, [r0, #2048]	; 0x800
   411fc:	sub	r0, lr, #32
   41200:	str	r0, [r4]
   41204:	mov	r0, #8
   41208:	str	r0, [r4, #4]
   4120c:	mov	r0, r4
   41210:	mov	r1, #0
   41214:	str	r7, [r4, #12]
   41218:	str	r8, [r4, #16]
   4121c:	bl	18ac <deflate@plt>
   41220:	ldr	r0, [r4, #16]
   41224:	ldr	r3, [sl]
   41228:	mov	r1, #1
   4122c:	rsb	r2, r0, #2048	; 0x800
   41230:	mov	r0, r7
   41234:	bl	18c4 <fwrite@plt>
   41238:	add	r5, r0, r5
   4123c:	ldr	r0, [r4, #16]
   41240:	cmp	r0, #0
   41244:	beq	4120c <WriteCompressedType+0x63c>
   41248:	mov	r0, #9
   4124c:	mov	r1, r4
   41250:	mov	r2, #0
   41254:	mov	r3, #0
   41258:	str	r0, [sp]
   4125c:	mov	r0, sl
   41260:	bl	439c8 <WriteCompressedData>
   41264:	add	r0, r0, r5
   41268:	ldr	r5, [sp, #28]
   4126c:	add	r6, r0, r6
   41270:	ldr	r0, [sp, #32]
   41274:	add	r5, r5, #1
   41278:	cmp	r5, r0
   4127c:	bcc	41008 <WriteCompressedType+0x438>
   41280:	b	4153c <WriteCompressedType+0x96c>
   41284:	add	lr, sp, #4096	; 0x1000
   41288:	mov	r6, #0
   4128c:	ldr	r5, [r7, #8]
   41290:	ldr	r2, [r7, #40]	; 0x28
   41294:	cmp	sl, #0
   41298:	ldr	r9, [sp, #36]	; 0x24
   4129c:	add	r0, lr, #44	; 0x2c
   412a0:	str	r6, [r0, #-4]
   412a4:	str	r6, [r0]
   412a8:	ldrne	r0, [sl]
   412ac:	cmpne	r0, #0
   412b0:	beq	4153c <WriteCompressedType+0x96c>
   412b4:	cmp	r5, #17
   412b8:	bhi	4153c <WriteCompressedType+0x96c>
   412bc:	movw	r1, #20
   412c0:	mov	r0, #1
   412c4:	movt	r1, #3
   412c8:	tst	r1, r0, lsl r5
   412cc:	beq	41558 <WriteCompressedType+0x988>
   412d0:	mov	r0, r5
   412d4:	str	r2, [sp, #28]
   412d8:	bl	193c <Mat_SizeOf@plt>
   412dc:	cmp	r5, #2
   412e0:	add	lr, sp, #4096	; 0x1000
   412e4:	mul	r1, r0, r9
   412e8:	mov	r6, #0
   412ec:	mov	r8, #1024	; 0x400
   412f0:	sub	r7, fp, #2080	; 0x820
   412f4:	add	r0, lr, #44	; 0x2c
   412f8:	movweq	r5, #16
   412fc:	sub	lr, fp, #4096	; 0x1000
   41300:	str	r5, [r0, #2044]	; 0x7fc
   41304:	mov	r5, r1
   41308:	str	r1, [r0, #2048]	; 0x800
   4130c:	sub	r1, lr, #32
   41310:	mov	r0, #8
   41314:	str	r1, [r4]
   41318:	str	r0, [r4, #4]
   4131c:	mov	r0, r4
   41320:	mov	r1, #0
   41324:	str	r7, [r4, #12]
   41328:	str	r8, [r4, #16]
   4132c:	bl	18ac <deflate@plt>
   41330:	ldr	r0, [r4, #16]
   41334:	ldr	r3, [sl]
   41338:	mov	r1, #1
   4133c:	rsb	r2, r0, #1024	; 0x400
   41340:	mov	r0, r7
   41344:	bl	18c4 <fwrite@plt>
   41348:	add	r6, r0, r6
   4134c:	ldr	r0, [r4, #16]
   41350:	cmp	r0, #0
   41354:	beq	4131c <WriteCompressedType+0x74c>
   41358:	ldr	r0, [sp, #28]
   4135c:	cmp	r0, #0
   41360:	beq	4153c <WriteCompressedType+0x96c>
   41364:	cmp	r9, #1
   41368:	blt	4153c <WriteCompressedType+0x96c>
   4136c:	str	r0, [r4]
   41370:	mov	r8, r5
   41374:	str	r5, [r4, #4]
   41378:	mov	r5, #1024	; 0x400
   4137c:	mov	r0, r4
   41380:	mov	r1, #0
   41384:	str	r7, [r4, #12]
   41388:	str	r5, [r4, #16]
   4138c:	bl	18ac <deflate@plt>
   41390:	ldr	r0, [r4, #16]
   41394:	ldr	r3, [sl]
   41398:	mov	r1, #1
   4139c:	rsb	r2, r0, #1024	; 0x400
   413a0:	mov	r0, r7
   413a4:	bl	18c4 <fwrite@plt>
   413a8:	add	r6, r0, r6
   413ac:	ldr	r0, [r4, #16]
   413b0:	cmp	r0, #0
   413b4:	beq	4137c <WriteCompressedType+0x7ac>
   413b8:	asr	r0, r8, #31
   413bc:	add	r0, r8, r0, lsr #29
   413c0:	bic	r0, r0, #7
   413c4:	subs	r0, r8, r0
   413c8:	beq	4153c <WriteCompressedType+0x96c>
   413cc:	add	lr, sp, #4096	; 0x1000
   413d0:	mov	r5, #1024	; 0x400
   413d4:	rsb	r0, r0, #8
   413d8:	add	r1, lr, #40	; 0x28
   413dc:	str	r1, [r4]
   413e0:	str	r0, [r4, #4]
   413e4:	mov	r0, r4
   413e8:	mov	r1, #0
   413ec:	str	r7, [r4, #12]
   413f0:	str	r5, [r4, #16]
   413f4:	bl	18ac <deflate@plt>
   413f8:	ldr	r0, [r4, #16]
   413fc:	ldr	r3, [sl]
   41400:	mov	r1, #1
   41404:	rsb	r2, r0, #1024	; 0x400
   41408:	mov	r0, r7
   4140c:	bl	18c4 <fwrite@plt>
   41410:	add	r6, r0, r6
   41414:	ldr	r0, [r4, #16]
   41418:	cmp	r0, #0
   4141c:	beq	413e4 <WriteCompressedType+0x814>
   41420:	b	4153c <WriteCompressedType+0x96c>
   41424:	ldr	r5, [r7, #40]	; 0x28
   41428:	mov	r8, #5
   4142c:	mov	r0, sl
   41430:	mov	r1, r4
   41434:	ldmib	r5, {r2, r3}
   41438:	str	r8, [sp]
   4143c:	bl	439c8 <WriteCompressedData>
   41440:	ldr	r2, [r5, #12]
   41444:	ldr	r3, [r5, #16]
   41448:	mov	r6, r0
   4144c:	mov	r0, sl
   41450:	mov	r1, r4
   41454:	str	r8, [sp]
   41458:	bl	439c8 <WriteCompressedData>
   4145c:	add	r8, r0, r6
   41460:	ldr	r0, [r7, #20]
   41464:	cmp	r0, #0
   41468:	beq	4151c <WriteCompressedType+0x94c>
   4146c:	ldr	r6, [r5, #24]
   41470:	ldr	r0, [r7, #8]
   41474:	ldr	r3, [r5, #20]
   41478:	mov	r1, r4
   4147c:	ldr	r2, [r6]
   41480:	str	r0, [sp]
   41484:	mov	r0, sl
   41488:	bl	439c8 <WriteCompressedData>
   4148c:	ldr	r1, [r7, #8]
   41490:	ldr	r3, [r5, #20]
   41494:	ldr	r2, [r6, #4]
   41498:	add	r5, r0, r8
   4149c:	mov	r0, sl
   414a0:	str	r1, [sp]
   414a4:	mov	r1, r4
   414a8:	bl	439c8 <WriteCompressedData>
   414ac:	add	r6, r5, r0
   414b0:	b	4153c <WriteCompressedType+0x96c>
   414b4:	add	r0, pc, #284	; 0x11c
   414b8:	add	lr, sp, #2048	; 0x800
   414bc:	mov	r6, #0
   414c0:	vld1.64	{d16-d17}, [r0]
   414c4:	mov	r0, #16
   414c8:	add	r7, lr, #40	; 0x28
   414cc:	vst1.64	{d16-d17}, [r5]
   414d0:	str	r5, [r4]
   414d4:	mov	r5, #2048	; 0x800
   414d8:	str	r0, [r4, #4]
   414dc:	mov	r0, r4
   414e0:	mov	r1, #0
   414e4:	str	r7, [r4, #12]
   414e8:	str	r5, [r4, #16]
   414ec:	bl	18ac <deflate@plt>
   414f0:	ldr	r0, [r4, #16]
   414f4:	ldr	r3, [sl]
   414f8:	mov	r1, #1
   414fc:	rsb	r2, r0, #2048	; 0x800
   41500:	mov	r0, r7
   41504:	bl	18c4 <fwrite@plt>
   41508:	add	r6, r0, r6
   4150c:	ldr	r0, [r4, #16]
   41510:	cmp	r0, #0
   41514:	beq	414dc <WriteCompressedType+0x90c>
   41518:	b	4153c <WriteCompressedType+0x96c>
   4151c:	ldr	r0, [r7, #8]
   41520:	ldr	r3, [r5, #20]
   41524:	ldr	r2, [r5, #24]
   41528:	mov	r1, r4
   4152c:	str	r0, [sp]
   41530:	mov	r0, sl
   41534:	bl	439c8 <WriteCompressedData>
   41538:	add	r6, r0, r8
   4153c:	mov	r0, r6
   41540:	sub	sp, fp, #28
   41544:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   41548:	.word	0x00000006
   4154c:	.word	0x00000008
   41550:	.word	0x00000006
   41554:	.word	0x00000000
   41558:	cmp	r5, #0
   4155c:	bne	4153c <WriteCompressedType+0x96c>
   41560:	add	lr, sp, #4096	; 0x1000
   41564:	mov	r0, #4
   41568:	lsl	r1, r9, #1
   4156c:	mov	r6, #0
   41570:	mov	r5, #1024	; 0x400
   41574:	sub	r7, fp, #2080	; 0x820
   41578:	add	r2, lr, #44	; 0x2c
   4157c:	sub	lr, fp, #4096	; 0x1000
   41580:	str	r0, [r2, #2044]	; 0x7fc
   41584:	str	r1, [r2, #2048]	; 0x800
   41588:	sub	r1, lr, #32
   4158c:	mov	r0, #8
   41590:	str	r1, [r4]
   41594:	str	r0, [r4, #4]
   41598:	mov	r0, r4
   4159c:	mov	r1, #0
   415a0:	str	r7, [r4, #12]
   415a4:	str	r5, [r4, #16]
   415a8:	bl	18ac <deflate@plt>
   415ac:	ldr	r0, [r4, #16]
   415b0:	ldr	r3, [sl]
   415b4:	mov	r1, #1
   415b8:	rsb	r2, r0, #1024	; 0x400
   415bc:	mov	r0, r7
   415c0:	bl	18c4 <fwrite@plt>
   415c4:	add	r6, r0, r6
   415c8:	ldr	r0, [r4, #16]
   415cc:	cmp	r0, #0
   415d0:	beq	41598 <WriteCompressedType+0x9c8>
   415d4:	b	4153c <WriteCompressedType+0x96c>
   415d8:	.word	0x00040005
   415dc:	.word	0x00000001
   415e0:	.word	0x00000001
   415e4:	.word	0x00000000
   415e8:	.word	0x000094a8

000415ec <Mat_VarReadNextInfo5>:
   415ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   415f0:	add	fp, sp, #28
   415f4:	sub	sp, sp, #84	; 0x54
   415f8:	mov	r4, #0
   415fc:	cmp	r0, #0
   41600:	beq	41d24 <Mat_VarReadNextInfo5+0x738>
   41604:	mov	r5, r0
   41608:	ldr	r0, [r0]
   4160c:	bl	1858 <ftell@plt>
   41610:	cmn	r0, #1
   41614:	beq	41708 <Mat_VarReadNextInfo5+0x11c>
   41618:	ldr	r3, [r5]
   4161c:	mov	r9, r0
   41620:	sub	r0, fp, #36	; 0x24
   41624:	mov	r1, #4
   41628:	mov	r2, #1
   4162c:	bl	18d0 <fread@plt>
   41630:	cmp	r0, #0
   41634:	beq	41d24 <Mat_VarReadNextInfo5+0x738>
   41638:	ldr	r3, [r5]
   4163c:	sub	r0, fp, #40	; 0x28
   41640:	mov	r1, #4
   41644:	mov	r2, #1
   41648:	bl	18d0 <fread@plt>
   4164c:	ldr	r0, [r5, #20]
   41650:	cmp	r0, #0
   41654:	beq	41668 <Mat_VarReadNextInfo5+0x7c>
   41658:	sub	r0, fp, #36	; 0x24
   4165c:	bl	1c28 <Mat_int32Swap>
   41660:	sub	r0, fp, #40	; 0x28
   41664:	bl	1c28 <Mat_int32Swap>
   41668:	ldr	r1, [fp, #-36]	; 0xffffffdc
   4166c:	cmp	r1, #14
   41670:	beq	4171c <Mat_VarReadNextInfo5+0x130>
   41674:	cmp	r1, #15
   41678:	bne	4181c <Mat_VarReadNextInfo5+0x230>
   4167c:	add	r1, sp, #8
   41680:	vmov.i32	q8, #0	; 0x00000000
   41684:	mov	r0, #48	; 0x30
   41688:	mov	r2, r1
   4168c:	vst1.64	{d16-d17}, [r2], r0
   41690:	add	r0, r1, #32
   41694:	vst1.64	{d16-d17}, [r0]
   41698:	add	r0, r1, #16
   4169c:	vst1.64	{d16-d17}, [r2]
   416a0:	vst1.64	{d16-d17}, [r0]
   416a4:	bl	18b8 <Mat_VarCalloc@plt>
   416a8:	mov	r4, r0
   416ac:	mov	r0, #1
   416b0:	mov	r1, #56	; 0x38
   416b4:	str	r0, [r4, #48]	; 0x30
   416b8:	mov	r0, #1
   416bc:	bl	17b0 <calloc@plt>
   416c0:	ldr	r1, [r4, #52]	; 0x34
   416c4:	mov	r2, #56	; 0x38
   416c8:	str	r0, [r1, #12]
   416cc:	ldr	r1, [pc, #1632]	; 41d34 <Mat_VarReadNextInfo5+0x748>
   416d0:	add	r1, pc, r1
   416d4:	bl	19f0 <inflateInit_@plt>
   416d8:	cmp	r0, #0
   416dc:	beq	4187c <Mat_VarReadNextInfo5+0x290>
   416e0:	mov	r6, r0
   416e4:	mov	r0, r4
   416e8:	bl	1930 <Mat_VarFree@plt>
   416ec:	mov	r0, r6
   416f0:	bl	18a0 <zError@plt>
   416f4:	mov	r1, r0
   416f8:	ldr	r0, [pc, #1592]	; 41d38 <Mat_VarReadNextInfo5+0x74c>
   416fc:	add	r0, pc, r0
   41700:	bl	19cc <Mat_Critical@plt>
   41704:	b	41714 <Mat_VarReadNextInfo5+0x128>
   41708:	ldr	r0, [pc, #1568]	; 41d30 <Mat_VarReadNextInfo5+0x744>
   4170c:	add	r0, pc, r0
   41710:	bl	19cc <Mat_Critical@plt>
   41714:	mov	r4, #0
   41718:	b	41d24 <Mat_VarReadNextInfo5+0x738>
   4171c:	bl	18b8 <Mat_VarCalloc@plt>
   41720:	ldr	r3, [r5]
   41724:	add	r7, sp, #8
   41728:	mov	r4, r0
   4172c:	mov	r1, #4
   41730:	mov	r2, #6
   41734:	mov	r0, r7
   41738:	bl	18d0 <fread@plt>
   4173c:	ldr	r0, [r5, #20]
   41740:	cmp	r0, #0
   41744:	beq	41778 <Mat_VarReadNextInfo5+0x18c>
   41748:	mov	r0, r7
   4174c:	bl	1c3c <Mat_uint32Swap>
   41750:	add	r0, r7, #4
   41754:	bl	1c3c <Mat_uint32Swap>
   41758:	add	r0, r7, #8
   4175c:	bl	1c3c <Mat_uint32Swap>
   41760:	add	r0, r7, #12
   41764:	bl	1c3c <Mat_uint32Swap>
   41768:	add	r0, r7, #16
   4176c:	bl	1c3c <Mat_uint32Swap>
   41770:	add	r0, r7, #20
   41774:	bl	1c3c <Mat_uint32Swap>
   41778:	ldr	r0, [sp, #8]
   4177c:	cmp	r0, #6
   41780:	bne	417b4 <Mat_VarReadNextInfo5+0x1c8>
   41784:	ldr	r0, [sp, #16]
   41788:	add	ip, r4, #16
   4178c:	and	r1, r0, #2048	; 0x800
   41790:	and	r2, r0, #1024	; 0x400
   41794:	and	r3, r0, #512	; 0x200
   41798:	uxtb	r0, r0
   4179c:	cmp	r0, #18
   417a0:	movcs	r0, #0
   417a4:	stm	ip, {r0, r1, r2, r3}
   417a8:	cmp	r0, #5
   417ac:	ldreq	r0, [sp, #20]
   417b0:	streq	r0, [r4]
   417b4:	ldr	r2, [sp, #24]
   417b8:	ldr	r3, [sp, #28]
   417bc:	mov	r0, r5
   417c0:	mov	r1, r4
   417c4:	bl	43534 <ReadRankDims>
   417c8:	ldr	r3, [r5]
   417cc:	add	r8, sp, #8
   417d0:	mov	r1, #4
   417d4:	mov	r2, #2
   417d8:	mov	r0, r8
   417dc:	bl	18d0 <fread@plt>
   417e0:	ldr	r0, [r5, #20]
   417e4:	cmp	r0, #0
   417e8:	beq	417f4 <Mat_VarReadNextInfo5+0x208>
   417ec:	add	r0, sp, #8
   417f0:	bl	1c3c <Mat_uint32Swap>
   417f4:	ldr	r0, [sp, #8]
   417f8:	cmp	r0, #1
   417fc:	bne	4182c <Mat_VarReadNextInfo5+0x240>
   41800:	ldr	r0, [r5, #20]
   41804:	cmp	r0, #0
   41808:	beq	418b8 <Mat_VarReadNextInfo5+0x2cc>
   4180c:	add	r0, r8, #4
   41810:	bl	1c3c <Mat_uint32Swap>
   41814:	mov	r6, r0
   41818:	b	418bc <Mat_VarReadNextInfo5+0x2d0>
   4181c:	ldr	r0, [pc, #1316]	; 41d48 <Mat_VarReadNextInfo5+0x75c>
   41820:	add	r0, pc, r0
   41824:	bl	19cc <Mat_Critical@plt>
   41828:	b	41d24 <Mat_VarReadNextInfo5+0x738>
   4182c:	lsr	r7, r0, #16
   41830:	cmp	r7, #4
   41834:	bhi	41924 <Mat_VarReadNextInfo5+0x338>
   41838:	uxth	r0, r0
   4183c:	cmp	r0, #1
   41840:	bne	41924 <Mat_VarReadNextInfo5+0x338>
   41844:	cmp	r7, #0
   41848:	beq	41924 <Mat_VarReadNextInfo5+0x338>
   4184c:	add	r0, r7, #1
   41850:	bl	18e8 <malloc@plt>
   41854:	cmp	r0, #0
   41858:	str	r0, [r4, #36]	; 0x24
   4185c:	beq	41924 <Mat_VarReadNextInfo5+0x338>
   41860:	add	r1, r8, #4
   41864:	mov	r2, r7
   41868:	bl	1834 <memcpy@plt>
   4186c:	ldr	r0, [r4, #36]	; 0x24
   41870:	mov	r1, #0
   41874:	strb	r1, [r0, r7]
   41878:	b	41924 <Mat_VarReadNextInfo5+0x338>
   4187c:	add	r6, sp, #8
   41880:	mov	r0, r5
   41884:	mov	r1, r4
   41888:	mov	r2, r6
   4188c:	bl	2710 <InflateVarTag>
   41890:	mov	r7, r0
   41894:	ldr	r0, [r5, #20]
   41898:	cmp	r0, #0
   4189c:	beq	419d4 <Mat_VarReadNextInfo5+0x3e8>
   418a0:	mov	r0, r6
   418a4:	bl	1c3c <Mat_uint32Swap>
   418a8:	orr	r8, r6, #4
   418ac:	mov	r0, r8
   418b0:	bl	1c3c <Mat_uint32Swap>
   418b4:	b	419d8 <Mat_VarReadNextInfo5+0x3ec>
   418b8:	ldr	r6, [sp, #12]
   418bc:	ands	r0, r6, #7
   418c0:	add	r1, r6, #8
   418c4:	mov	r7, r6
   418c8:	subne	r7, r1, r0
   418cc:	add	r0, r7, #1
   418d0:	bl	18e8 <malloc@plt>
   418d4:	cmp	r0, #0
   418d8:	str	r0, [r4, #36]	; 0x24
   418dc:	beq	41924 <Mat_VarReadNextInfo5+0x338>
   418e0:	ldr	r3, [r5]
   418e4:	mov	r1, #1
   418e8:	mov	r2, r7
   418ec:	bl	18d0 <fread@plt>
   418f0:	mov	r1, r0
   418f4:	ldr	r0, [r4, #36]	; 0x24
   418f8:	cmp	r1, r7
   418fc:	bne	4190c <Mat_VarReadNextInfo5+0x320>
   41900:	mov	r1, #0
   41904:	strb	r1, [r0, r6]
   41908:	b	41924 <Mat_VarReadNextInfo5+0x338>
   4190c:	bl	181c <free@plt>
   41910:	mov	r0, #0
   41914:	str	r0, [r4, #36]	; 0x24
   41918:	ldr	r0, [pc, #1060]	; 41d44 <Mat_VarReadNextInfo5+0x758>
   4191c:	add	r0, pc, r0
   41920:	bl	19cc <Mat_Critical@plt>
   41924:	ldr	r0, [r4, #16]
   41928:	cmp	r0, #1
   4192c:	beq	41950 <Mat_VarReadNextInfo5+0x364>
   41930:	cmp	r0, #16
   41934:	beq	41960 <Mat_VarReadNextInfo5+0x374>
   41938:	cmp	r0, #2
   4193c:	bne	41ce8 <Mat_VarReadNextInfo5+0x6fc>
   41940:	mov	r0, r5
   41944:	mov	r1, r4
   41948:	bl	41d4c <ReadNextStructField>
   4194c:	b	41ce8 <Mat_VarReadNextInfo5+0x6fc>
   41950:	mov	r0, r5
   41954:	mov	r1, r4
   41958:	bl	42b04 <ReadNextCell>
   4195c:	b	41ce8 <Mat_VarReadNextInfo5+0x6fc>
   41960:	mov	r0, #1
   41964:	sub	r1, fp, #32
   41968:	str	r0, [fp, #-32]	; 0xffffffe0
   4196c:	mov	r0, r4
   41970:	bl	45294 <SafeMulDims>
   41974:	mov	r0, #4
   41978:	mov	r2, #4
   4197c:	str	r0, [r4, #12]
   41980:	mov	r0, r4
   41984:	ldr	r1, [fp, #-32]	; 0xffffffe0
   41988:	bl	452f0 <SafeMul>
   4198c:	ldr	r0, [r4]
   41990:	bl	18e8 <malloc@plt>
   41994:	cmp	r0, #0
   41998:	str	r0, [r4, #40]	; 0x28
   4199c:	beq	41a90 <Mat_VarReadNextInfo5+0x4a4>
   419a0:	mov	r7, r0
   419a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   419a8:	cmp	r0, #0
   419ac:	beq	41ce8 <Mat_VarReadNextInfo5+0x6fc>
   419b0:	mov	r6, #0
   419b4:	mov	r0, r5
   419b8:	bl	1a8c <Mat_VarReadNextInfo@plt>
   419bc:	str	r0, [r7, r6, lsl #2]
   419c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   419c4:	add	r6, r6, #1
   419c8:	cmp	r6, r0
   419cc:	bcc	419b4 <Mat_VarReadNextInfo5+0x3c8>
   419d0:	b	41ce8 <Mat_VarReadNextInfo5+0x6fc>
   419d4:	orr	r8, r6, #4
   419d8:	ldr	r0, [sp, #8]
   419dc:	cmp	r0, #14
   419e0:	bne	41a68 <Mat_VarReadNextInfo5+0x47c>
   419e4:	add	r6, sp, #8
   419e8:	mov	r0, r5
   419ec:	mov	r1, r4
   419f0:	mov	r2, r6
   419f4:	bl	2864 <InflateArrayFlags>
   419f8:	ldr	r0, [r5, #20]
   419fc:	cmp	r0, #0
   41a00:	beq	41a1c <Mat_VarReadNextInfo5+0x430>
   41a04:	mov	r0, r6
   41a08:	bl	1c3c <Mat_uint32Swap>
   41a0c:	add	r0, r6, #8
   41a10:	bl	1c3c <Mat_uint32Swap>
   41a14:	add	r0, r6, #12
   41a18:	bl	1c3c <Mat_uint32Swap>
   41a1c:	ldr	r0, [sp, #8]
   41a20:	cmp	r0, #6
   41a24:	bne	41aa0 <Mat_VarReadNextInfo5+0x4b4>
   41a28:	ldr	r1, [sp, #16]
   41a2c:	mov	sl, r4
   41a30:	uxtb	r0, r1
   41a34:	and	r2, r1, #2048	; 0x800
   41a38:	and	r3, r1, #1024	; 0x400
   41a3c:	and	r1, r1, #512	; 0x200
   41a40:	cmp	r0, #18
   41a44:	movcs	r0, #0
   41a48:	str	r0, [sl, #16]!
   41a4c:	cmp	r0, #5
   41a50:	stmib	sl, {r2, r3}
   41a54:	str	r1, [sl, #12]
   41a58:	bne	41aa8 <Mat_VarReadNextInfo5+0x4bc>
   41a5c:	ldr	r0, [sp, #20]
   41a60:	str	r0, [r4]
   41a64:	b	41ab0 <Mat_VarReadNextInfo5+0x4c4>
   41a68:	ldr	r0, [fp, #-40]	; 0xffffffd8
   41a6c:	mov	r2, #1
   41a70:	sub	r1, r0, r7
   41a74:	ldr	r0, [r5]
   41a78:	bl	1a68 <fseek@plt>
   41a7c:	mov	r0, r4
   41a80:	bl	1930 <Mat_VarFree@plt>
   41a84:	ldr	r0, [pc, #688]	; 41d3c <Mat_VarReadNextInfo5+0x750>
   41a88:	add	r0, pc, r0
   41a8c:	b	41710 <Mat_VarReadNextInfo5+0x124>
   41a90:	mov	r0, #0
   41a94:	str	r0, [r4]
   41a98:	str	r0, [r4, #12]
   41a9c:	b	41ce8 <Mat_VarReadNextInfo5+0x6fc>
   41aa0:	mov	sl, r4
   41aa4:	ldr	r0, [sl, #16]!
   41aa8:	cmp	r0, #17
   41aac:	beq	41d0c <Mat_VarReadNextInfo5+0x720>
   41ab0:	mov	r0, #0
   41ab4:	add	r6, sp, #8
   41ab8:	mov	r1, r4
   41abc:	mov	r3, #64	; 0x40
   41ac0:	str	r0, [fp, #-32]	; 0xffffffe0
   41ac4:	sub	r0, fp, #32
   41ac8:	mov	r2, r6
   41acc:	str	r0, [sp]
   41ad0:	mov	r0, r5
   41ad4:	bl	29b8 <InflateRankDims>
   41ad8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   41adc:	mov	r1, #1
   41ae0:	cmp	r0, #0
   41ae4:	addeq	r0, r6, #8
   41ae8:	moveq	r1, #0
   41aec:	streq	r0, [fp, #-32]	; 0xffffffe0
   41af0:	str	r1, [sp, #4]
   41af4:	ldr	r0, [r5, #20]
   41af8:	cmp	r0, #0
   41afc:	beq	41b10 <Mat_VarReadNextInfo5+0x524>
   41b00:	add	r0, sp, #8
   41b04:	bl	1c3c <Mat_uint32Swap>
   41b08:	mov	r0, r8
   41b0c:	bl	1c3c <Mat_uint32Swap>
   41b10:	ldr	r0, [sp, #8]
   41b14:	cmp	r0, #5
   41b18:	bne	41bb0 <Mat_VarReadNextInfo5+0x5c4>
   41b1c:	ldr	r0, [sp, #12]
   41b20:	asr	r1, r0, #31
   41b24:	add	r0, r0, r1, lsr #30
   41b28:	asr	r1, r0, #2
   41b2c:	bic	r0, r0, #3
   41b30:	str	r1, [r4, #4]
   41b34:	bl	18e8 <malloc@plt>
   41b38:	str	r0, [r4, #32]
   41b3c:	ldr	r2, [r5, #20]
   41b40:	ldr	r1, [r4, #4]
   41b44:	cmp	r2, #0
   41b48:	beq	41b88 <Mat_VarReadNextInfo5+0x59c>
   41b4c:	cmp	r1, #1
   41b50:	blt	41bb0 <Mat_VarReadNextInfo5+0x5c4>
   41b54:	mov	r6, #0
   41b58:	mov	r7, #0
   41b5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   41b60:	add	r0, r0, r6
   41b64:	bl	1c3c <Mat_uint32Swap>
   41b68:	ldr	r1, [r4, #32]
   41b6c:	add	r7, r7, #1
   41b70:	str	r0, [r1, r6]
   41b74:	add	r6, r6, #4
   41b78:	ldr	r0, [r4, #4]
   41b7c:	cmp	r7, r0
   41b80:	blt	41b5c <Mat_VarReadNextInfo5+0x570>
   41b84:	b	41bb0 <Mat_VarReadNextInfo5+0x5c4>
   41b88:	cmp	r1, #1
   41b8c:	blt	41bb0 <Mat_VarReadNextInfo5+0x5c4>
   41b90:	ldr	r2, [fp, #-32]	; 0xffffffe0
   41b94:	mov	r1, #0
   41b98:	ldr	r3, [r2, r1, lsl #2]
   41b9c:	str	r3, [r0, r1, lsl #2]
   41ba0:	add	r1, r1, #1
   41ba4:	ldr	r3, [r4, #4]
   41ba8:	cmp	r1, r3
   41bac:	blt	41b98 <Mat_VarReadNextInfo5+0x5ac>
   41bb0:	ldr	r0, [sp, #4]
   41bb4:	cmp	r0, #0
   41bb8:	beq	41bc4 <Mat_VarReadNextInfo5+0x5d8>
   41bbc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   41bc0:	bl	181c <free@plt>
   41bc4:	add	r2, sp, #8
   41bc8:	mov	r0, r5
   41bcc:	mov	r1, r4
   41bd0:	bl	2ca4 <InflateVarNameTag>
   41bd4:	ldr	r0, [r5, #20]
   41bd8:	cmp	r0, #0
   41bdc:	beq	41be8 <Mat_VarReadNextInfo5+0x5fc>
   41be0:	add	r0, sp, #8
   41be4:	bl	1c3c <Mat_uint32Swap>
   41be8:	ldr	r0, [sp, #8]
   41bec:	cmp	r0, #1
   41bf0:	bne	41c10 <Mat_VarReadNextInfo5+0x624>
   41bf4:	ldr	r0, [r5, #20]
   41bf8:	cmp	r0, #0
   41bfc:	beq	41c54 <Mat_VarReadNextInfo5+0x668>
   41c00:	mov	r0, r8
   41c04:	bl	1c3c <Mat_uint32Swap>
   41c08:	mov	r7, r0
   41c0c:	b	41c58 <Mat_VarReadNextInfo5+0x66c>
   41c10:	lsr	r7, r0, #16
   41c14:	cmp	r7, #4
   41c18:	bhi	41c9c <Mat_VarReadNextInfo5+0x6b0>
   41c1c:	uxth	r0, r0
   41c20:	cmp	r0, #1
   41c24:	bne	41c9c <Mat_VarReadNextInfo5+0x6b0>
   41c28:	cmp	r7, #0
   41c2c:	beq	41c9c <Mat_VarReadNextInfo5+0x6b0>
   41c30:	add	r0, r7, #1
   41c34:	bl	18e8 <malloc@plt>
   41c38:	cmp	r0, #0
   41c3c:	str	r0, [r4, #36]	; 0x24
   41c40:	beq	41c9c <Mat_VarReadNextInfo5+0x6b0>
   41c44:	mov	r1, r8
   41c48:	mov	r2, r7
   41c4c:	bl	1834 <memcpy@plt>
   41c50:	b	41c90 <Mat_VarReadNextInfo5+0x6a4>
   41c54:	ldr	r7, [sp, #12]
   41c58:	ands	r0, r7, #7
   41c5c:	add	r1, r7, #8
   41c60:	mov	r6, r7
   41c64:	subne	r6, r1, r0
   41c68:	add	r0, r6, #1
   41c6c:	bl	18e8 <malloc@plt>
   41c70:	cmp	r0, #0
   41c74:	str	r0, [r4, #36]	; 0x24
   41c78:	beq	41c9c <Mat_VarReadNextInfo5+0x6b0>
   41c7c:	mov	r2, r0
   41c80:	mov	r0, r5
   41c84:	mov	r1, r4
   41c88:	mov	r3, r6
   41c8c:	bl	2df8 <InflateVarName>
   41c90:	ldr	r0, [r4, #36]	; 0x24
   41c94:	mov	r1, #0
   41c98:	strb	r1, [r0, r7]
   41c9c:	ldr	r0, [sl]
   41ca0:	cmp	r0, #1
   41ca4:	beq	41cc0 <Mat_VarReadNextInfo5+0x6d4>
   41ca8:	cmp	r0, #2
   41cac:	bne	41ccc <Mat_VarReadNextInfo5+0x6e0>
   41cb0:	mov	r0, r5
   41cb4:	mov	r1, r4
   41cb8:	bl	41d4c <ReadNextStructField>
   41cbc:	b	41ccc <Mat_VarReadNextInfo5+0x6e0>
   41cc0:	mov	r0, r5
   41cc4:	mov	r1, r4
   41cc8:	bl	42b04 <ReadNextCell>
   41ccc:	ldr	r1, [r4, #52]	; 0x34
   41cd0:	ldr	r0, [r5]
   41cd4:	mov	r2, #1
   41cd8:	ldr	r1, [r1, #12]
   41cdc:	ldr	r1, [r1, #4]
   41ce0:	rsb	r1, r1, #0
   41ce4:	bl	1a68 <fseek@plt>
   41ce8:	ldr	r0, [r5]
   41cec:	bl	1858 <ftell@plt>
   41cf0:	ldr	r1, [r4, #52]	; 0x34
   41cf4:	cmn	r0, #1
   41cf8:	str	r0, [r1]
   41cfc:	bne	41d0c <Mat_VarReadNextInfo5+0x720>
   41d00:	ldr	r0, [pc, #56]	; 41d40 <Mat_VarReadNextInfo5+0x754>
   41d04:	add	r0, pc, r0
   41d08:	bl	19cc <Mat_Critical@plt>
   41d0c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   41d10:	mov	r2, #0
   41d14:	add	r0, r9, r0
   41d18:	add	r1, r0, #8
   41d1c:	ldr	r0, [r5]
   41d20:	bl	1a68 <fseek@plt>
   41d24:	mov	r0, r4
   41d28:	sub	sp, fp, #28
   41d2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   41d30:	.word	0x000085ac
   41d34:	.word	0x0000883d
   41d38:	.word	0x00008830
   41d3c:	.word	0x00008543
   41d40:	.word	0x00007fb4
   41d44:	.word	0x00008628
   41d48:	.word	0x0000874e

00041d4c <ReadNextStructField>:
   41d4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   41d50:	add	fp, sp, #28
   41d54:	sub	sp, sp, #124	; 0x7c
   41d58:	mov	r9, r1
   41d5c:	mov	r5, r0
   41d60:	mov	r0, #1
   41d64:	sub	r1, fp, #32
   41d68:	str	r0, [fp, #-32]	; 0xffffffe0
   41d6c:	mov	r0, r9
   41d70:	bl	45294 <SafeMulDims>
   41d74:	cmp	r0, #0
   41d78:	beq	41d90 <ReadNextStructField+0x44>
   41d7c:	ldr	r0, [pc, #3408]	; 42ad4 <ReadNextStructField+0xd88>
   41d80:	add	r0, pc, r0
   41d84:	bl	19cc <Mat_Critical@plt>
   41d88:	mov	r7, #0
   41d8c:	b	42160 <ReadNextStructField+0x414>
   41d90:	ldr	r0, [r9, #48]	; 0x30
   41d94:	str	r5, [sp, #32]
   41d98:	cmp	r0, #1
   41d9c:	bne	41e7c <ReadNextStructField+0x130>
   41da0:	add	r4, sp, #48	; 0x30
   41da4:	vmov.i32	q8, #0	; 0x00000000
   41da8:	mov	r0, #48	; 0x30
   41dac:	mov	r1, r4
   41db0:	mov	r2, r4
   41db4:	vst1.64	{d16-d17}, [r1], r0
   41db8:	add	r0, r4, #32
   41dbc:	vst1.64	{d16-d17}, [r0]
   41dc0:	add	r0, r4, #16
   41dc4:	vst1.64	{d16-d17}, [r1]
   41dc8:	mov	r1, r9
   41dcc:	vst1.64	{d16-d17}, [r0]
   41dd0:	mov	r0, r5
   41dd4:	bl	3388 <InflateFieldNameLength>
   41dd8:	mov	r7, r0
   41ddc:	ldr	r0, [r5, #20]
   41de0:	cmp	r0, #0
   41de4:	beq	41df8 <ReadNextStructField+0xac>
   41de8:	mov	r0, r4
   41dec:	bl	1c3c <Mat_uint32Swap>
   41df0:	orr	r0, r4, #4
   41df4:	bl	1c3c <Mat_uint32Swap>
   41df8:	ldrh	r0, [sp, #48]	; 0x30
   41dfc:	cmp	r0, #5
   41e00:	bne	41f38 <ReadNextStructField+0x1ec>
   41e04:	ldr	r8, [sp, #52]	; 0x34
   41e08:	mov	r0, r5
   41e0c:	mov	r1, r9
   41e10:	mov	r2, r4
   41e14:	bl	34dc <InflateFieldNamesTag>
   41e18:	mov	r6, r0
   41e1c:	ldr	r0, [r5, #20]
   41e20:	orr	sl, r4, #4
   41e24:	cmp	r0, #0
   41e28:	beq	41e3c <ReadNextStructField+0xf0>
   41e2c:	add	r0, sp, #48	; 0x30
   41e30:	bl	1c3c <Mat_uint32Swap>
   41e34:	mov	r0, sl
   41e38:	bl	1c3c <Mat_uint32Swap>
   41e3c:	ldr	r1, [sp, #52]	; 0x34
   41e40:	add	r7, r6, r7
   41e44:	mov	r0, #4
   41e48:	str	r0, [r9, #12]
   41e4c:	udiv	r6, r1, r8
   41e50:	str	r1, [sp, #28]
   41e54:	mul	r0, r6, r8
   41e58:	ands	r4, r0, #7
   41e5c:	rsbne	r4, r4, #8
   41e60:	cmp	r8, r1
   41e64:	bls	41f44 <ReadNextStructField+0x1f8>
   41e68:	ldr	r0, [r9, #52]	; 0x34
   41e6c:	mov	r1, #0
   41e70:	str	r1, [r0, #4]
   41e74:	str	r1, [r0, #8]
   41e78:	b	42020 <ReadNextStructField+0x2d4>
   41e7c:	ldr	r3, [r5]
   41e80:	add	r6, sp, #48	; 0x30
   41e84:	mov	r1, #4
   41e88:	mov	r2, #2
   41e8c:	mov	r0, r6
   41e90:	bl	18d0 <fread@plt>
   41e94:	mov	r7, r0
   41e98:	ldr	r0, [r5, #20]
   41e9c:	cmp	r0, #0
   41ea0:	beq	41eb4 <ReadNextStructField+0x168>
   41ea4:	mov	r0, r6
   41ea8:	bl	1c3c <Mat_uint32Swap>
   41eac:	add	r0, r6, #4
   41eb0:	bl	1c3c <Mat_uint32Swap>
   41eb4:	ldrh	r0, [sp, #48]	; 0x30
   41eb8:	cmp	r0, #5
   41ebc:	bne	41f38 <ReadNextStructField+0x1ec>
   41ec0:	ldr	r3, [r5]
   41ec4:	ldr	r4, [sp, #52]	; 0x34
   41ec8:	mov	r0, r6
   41ecc:	mov	r1, #4
   41ed0:	mov	r2, #2
   41ed4:	mov	r8, #4
   41ed8:	bl	18d0 <fread@plt>
   41edc:	mov	sl, r0
   41ee0:	ldr	r0, [r5, #20]
   41ee4:	add	r6, r6, #4
   41ee8:	cmp	r0, #0
   41eec:	beq	41f00 <ReadNextStructField+0x1b4>
   41ef0:	add	r0, sp, #48	; 0x30
   41ef4:	bl	1c3c <Mat_uint32Swap>
   41ef8:	mov	r0, r6
   41efc:	bl	1c3c <Mat_uint32Swap>
   41f00:	ldr	r0, [sp, #52]	; 0x34
   41f04:	str	r8, [r9, #12]
   41f08:	add	r7, sl, r7
   41f0c:	str	r6, [sp, #24]
   41f10:	ldr	r5, [r9, #52]	; 0x34
   41f14:	str	r7, [sp, #40]	; 0x28
   41f18:	udiv	sl, r0, r4
   41f1c:	cmp	r4, r0
   41f20:	str	r0, [sp, #28]
   41f24:	bls	42060 <ReadNextStructField+0x314>
   41f28:	mov	r0, #0
   41f2c:	str	r0, [r5, #4]
   41f30:	str	r0, [r5, #8]
   41f34:	b	420f0 <ReadNextStructField+0x3a4>
   41f38:	ldr	r0, [pc, #3008]	; 42b00 <ReadNextStructField+0xdb4>
   41f3c:	add	r0, pc, r0
   41f40:	b	42058 <ReadNextStructField+0x30c>
   41f44:	add	r0, r4, r0
   41f48:	str	sl, [sp, #24]
   41f4c:	bl	18e8 <malloc@plt>
   41f50:	cmp	r0, #0
   41f54:	beq	4201c <ReadNextStructField+0x2d0>
   41f58:	mov	sl, r0
   41f5c:	mov	r0, r5
   41f60:	mov	r1, r9
   41f64:	mov	r3, r6
   41f68:	str	r7, [sp, #40]	; 0x28
   41f6c:	str	r8, [sp]
   41f70:	str	r4, [sp, #4]
   41f74:	mov	r2, sl
   41f78:	bl	3630 <InflateFieldNames>
   41f7c:	ldr	r4, [r9, #52]	; 0x34
   41f80:	str	r0, [sp, #36]	; 0x24
   41f84:	mov	r0, r6
   41f88:	mov	r1, #4
   41f8c:	str	r6, [r4, #4]
   41f90:	bl	17b0 <calloc@plt>
   41f94:	cmp	r0, #0
   41f98:	mov	r5, sl
   41f9c:	str	r0, [r4, #8]
   41fa0:	beq	42008 <ReadNextStructField+0x2bc>
   41fa4:	sub	r4, r8, #1
   41fa8:	mov	r7, r5
   41fac:	mov	sl, #0
   41fb0:	mov	r0, r8
   41fb4:	bl	18e8 <malloc@plt>
   41fb8:	ldr	r1, [r9, #52]	; 0x34
   41fbc:	ldr	r1, [r1, #8]
   41fc0:	str	r0, [r1, sl, lsl #2]
   41fc4:	ldr	r0, [r9, #52]	; 0x34
   41fc8:	ldr	r0, [r0, #8]
   41fcc:	ldr	r0, [r0, sl, lsl #2]
   41fd0:	cmp	r0, #0
   41fd4:	beq	41ff8 <ReadNextStructField+0x2ac>
   41fd8:	mov	r1, r7
   41fdc:	mov	r2, r8
   41fe0:	bl	1834 <memcpy@plt>
   41fe4:	ldr	r0, [r9, #52]	; 0x34
   41fe8:	mov	r1, #0
   41fec:	ldr	r0, [r0, #8]
   41ff0:	ldr	r0, [r0, sl, lsl #2]
   41ff4:	strb	r1, [r0, r4]
   41ff8:	add	sl, sl, #1
   41ffc:	add	r7, r7, r8
   42000:	cmp	sl, r6
   42004:	bcc	41fb0 <ReadNextStructField+0x264>
   42008:	ldr	r7, [sp, #40]	; 0x28
   4200c:	ldr	r0, [sp, #36]	; 0x24
   42010:	add	r7, r0, r7
   42014:	mov	r0, r5
   42018:	bl	181c <free@plt>
   4201c:	ldr	sl, [sp, #24]
   42020:	ldr	r1, [fp, #-32]	; 0xffffffe0
   42024:	sub	r0, fp, #36	; 0x24
   42028:	mov	r2, r6
   4202c:	bl	452f0 <SafeMul>
   42030:	cmp	r0, #0
   42034:	bne	42050 <ReadNextStructField+0x304>
   42038:	ldr	r2, [r9, #12]
   4203c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   42040:	mov	r0, r9
   42044:	bl	452f0 <SafeMul>
   42048:	cmp	r0, #0
   4204c:	beq	4216c <ReadNextStructField+0x420>
   42050:	ldr	r0, [pc, #2688]	; 42ad8 <ReadNextStructField+0xd8c>
   42054:	add	r0, pc, r0
   42058:	bl	19cc <Mat_Critical@plt>
   4205c:	b	42160 <ReadNextStructField+0x414>
   42060:	mov	r0, sl
   42064:	mov	r1, #4
   42068:	str	sl, [r5, #4]
   4206c:	bl	17b0 <calloc@plt>
   42070:	cmp	r0, #0
   42074:	str	r0, [r5, #8]
   42078:	beq	420f0 <ReadNextStructField+0x3a4>
   4207c:	ldr	r5, [sp, #32]
   42080:	sub	r7, r4, #1
   42084:	mov	r6, #0
   42088:	mov	r8, #0
   4208c:	mov	r0, r4
   42090:	bl	18e8 <malloc@plt>
   42094:	ldr	r1, [r9, #52]	; 0x34
   42098:	ldr	r1, [r1, #8]
   4209c:	str	r0, [r1, r8, lsl #2]
   420a0:	ldr	r0, [r9, #52]	; 0x34
   420a4:	ldr	r0, [r0, #8]
   420a8:	ldr	r0, [r0, r8, lsl #2]
   420ac:	cmp	r0, #0
   420b0:	beq	420e0 <ReadNextStructField+0x394>
   420b4:	ldr	r3, [r5]
   420b8:	mov	r1, #1
   420bc:	mov	r2, r4
   420c0:	bl	18d0 <fread@plt>
   420c4:	ldr	r1, [r9, #52]	; 0x34
   420c8:	ldr	r1, [r1, #8]
   420cc:	ldr	r1, [r1, r8, lsl #2]
   420d0:	strb	r6, [r1, r7]
   420d4:	ldr	r1, [sp, #40]	; 0x28
   420d8:	add	r1, r0, r1
   420dc:	str	r1, [sp, #40]	; 0x28
   420e0:	add	r8, r8, #1
   420e4:	cmp	r8, sl
   420e8:	bcc	4208c <ReadNextStructField+0x340>
   420ec:	b	420f4 <ReadNextStructField+0x3a8>
   420f0:	ldr	r5, [sp, #32]
   420f4:	mul	r0, sl, r4
   420f8:	ands	r1, r0, #7
   420fc:	beq	42120 <ReadNextStructField+0x3d4>
   42100:	ldr	r0, [r5]
   42104:	rsb	r7, r1, #8
   42108:	mov	r2, #1
   4210c:	mov	r1, r7
   42110:	bl	1a68 <fseek@plt>
   42114:	ldr	r0, [sp, #40]	; 0x28
   42118:	add	r0, r0, r7
   4211c:	str	r0, [sp, #40]	; 0x28
   42120:	ldr	r1, [fp, #-32]	; 0xffffffe0
   42124:	sub	r0, fp, #36	; 0x24
   42128:	mov	r2, sl
   4212c:	bl	452f0 <SafeMul>
   42130:	cmp	r0, #0
   42134:	bne	42150 <ReadNextStructField+0x404>
   42138:	ldr	r2, [r9, #12]
   4213c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   42140:	mov	r0, r9
   42144:	bl	452f0 <SafeMul>
   42148:	cmp	r0, #0
   4214c:	beq	421f8 <ReadNextStructField+0x4ac>
   42150:	ldr	r0, [pc, #2460]	; 42af4 <ReadNextStructField+0xda8>
   42154:	add	r0, pc, r0
   42158:	bl	19cc <Mat_Critical@plt>
   4215c:	ldr	r7, [sp, #40]	; 0x28
   42160:	mov	r0, r7
   42164:	sub	sp, fp, #28
   42168:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4216c:	ldr	r0, [r9]
   42170:	cmp	r0, #0
   42174:	beq	42160 <ReadNextStructField+0x414>
   42178:	ldr	r1, [r9, #12]
   4217c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   42180:	bl	17b0 <calloc@plt>
   42184:	cmp	r0, #0
   42188:	str	r0, [r9, #40]	; 0x28
   4218c:	str	r0, [sp, #36]	; 0x24
   42190:	beq	42538 <ReadNextStructField+0x7ec>
   42194:	ldr	r0, [fp, #-32]	; 0xffffffe0
   42198:	str	sl, [sp, #24]
   4219c:	str	r7, [sp, #40]	; 0x28
   421a0:	cmp	r0, #0
   421a4:	beq	42544 <ReadNextStructField+0x7f8>
   421a8:	mov	r7, #0
   421ac:	str	r8, [sp, #20]
   421b0:	ldr	r1, [sp, #28]
   421b4:	cmp	r8, r1
   421b8:	bhi	421e8 <ReadNextStructField+0x49c>
   421bc:	ldr	r8, [sp, #36]	; 0x24
   421c0:	mul	r4, r7, r6
   421c4:	mov	r5, #0
   421c8:	add	sl, r5, r4
   421cc:	bl	18b8 <Mat_VarCalloc@plt>
   421d0:	add	r5, r5, #1
   421d4:	str	r0, [r8, sl, lsl #2]
   421d8:	cmp	r5, r6
   421dc:	bcc	421c8 <ReadNextStructField+0x47c>
   421e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   421e4:	ldr	r8, [sp, #20]
   421e8:	add	r7, r7, #1
   421ec:	cmp	r7, r0
   421f0:	bcc	421b0 <ReadNextStructField+0x464>
   421f4:	b	42548 <ReadNextStructField+0x7fc>
   421f8:	ldr	r0, [r9]
   421fc:	cmp	r0, #0
   42200:	beq	4215c <ReadNextStructField+0x410>
   42204:	bl	18e8 <malloc@plt>
   42208:	cmp	r0, #0
   4220c:	str	r0, [r9, #40]	; 0x28
   42210:	str	r0, [sp, #36]	; 0x24
   42214:	beq	4215c <ReadNextStructField+0x410>
   42218:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4221c:	cmp	r0, #0
   42220:	beq	422e0 <ReadNextStructField+0x594>
   42224:	mov	r6, #0
   42228:	str	r4, [sp, #20]
   4222c:	ldr	r1, [sp, #28]
   42230:	cmp	r4, r1
   42234:	bhi	42264 <ReadNextStructField+0x518>
   42238:	ldr	r4, [sp, #36]	; 0x24
   4223c:	mul	r5, r6, sl
   42240:	mov	r7, #0
   42244:	add	r8, r7, r5
   42248:	bl	18b8 <Mat_VarCalloc@plt>
   4224c:	add	r7, r7, #1
   42250:	str	r0, [r4, r8, lsl #2]
   42254:	cmp	r7, sl
   42258:	bcc	42244 <ReadNextStructField+0x4f8>
   4225c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   42260:	ldr	r4, [sp, #20]
   42264:	add	r6, r6, #1
   42268:	cmp	r6, r0
   4226c:	bcc	4222c <ReadNextStructField+0x4e0>
   42270:	ldr	r1, [r9, #52]	; 0x34
   42274:	ldr	r1, [r1, #8]
   42278:	cmp	r1, #0
   4227c:	cmpne	r0, #0
   42280:	beq	422e0 <ReadNextStructField+0x594>
   42284:	mov	r8, #0
   42288:	ldr	r0, [sp, #28]
   4228c:	cmp	r4, r0
   42290:	bhi	422d0 <ReadNextStructField+0x584>
   42294:	mul	r6, r8, sl
   42298:	mov	r5, #0
   4229c:	ldr	r0, [r9, #52]	; 0x34
   422a0:	ldr	r0, [r0, #8]
   422a4:	ldr	r0, [r0, r5, lsl #2]
   422a8:	cmp	r0, #0
   422ac:	beq	422c4 <ReadNextStructField+0x578>
   422b0:	add	r7, r5, r6
   422b4:	bl	187c <strdup@plt>
   422b8:	ldr	r1, [sp, #36]	; 0x24
   422bc:	ldr	r1, [r1, r7, lsl #2]
   422c0:	str	r0, [r1, #36]	; 0x24
   422c4:	add	r5, r5, #1
   422c8:	cmp	r5, sl
   422cc:	bcc	4229c <ReadNextStructField+0x550>
   422d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   422d4:	add	r8, r8, #1
   422d8:	cmp	r8, r0
   422dc:	bcc	42288 <ReadNextStructField+0x53c>
   422e0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   422e4:	ldr	r7, [sp, #40]	; 0x28
   422e8:	cmp	r0, #0
   422ec:	beq	42160 <ReadNextStructField+0x414>
   422f0:	add	r6, sp, #48	; 0x30
   422f4:	ldr	r5, [sp, #32]
   422f8:	ldr	sl, [sp, #36]	; 0x24
   422fc:	mov	r8, #0
   42300:	mov	r4, #0
   42304:	add	r0, r6, #20
   42308:	str	r0, [sp, #28]
   4230c:	add	r0, r6, #16
   42310:	str	r0, [sp, #20]
   42314:	add	r0, r6, #12
   42318:	str	r0, [sp, #16]
   4231c:	add	r0, r6, #8
   42320:	str	r0, [sp, #12]
   42324:	ldr	r3, [r5]
   42328:	mov	r0, r6
   4232c:	mov	r1, #4
   42330:	mov	r2, #2
   42334:	bl	18d0 <fread@plt>
   42338:	mov	r1, r5
   4233c:	mov	r5, r0
   42340:	ldr	r0, [r1, #20]
   42344:	cmp	r0, #0
   42348:	beq	4235c <ReadNextStructField+0x610>
   4234c:	mov	r0, r6
   42350:	bl	1c3c <Mat_uint32Swap>
   42354:	ldr	r0, [sp, #24]
   42358:	bl	1c3c <Mat_uint32Swap>
   4235c:	ldr	r0, [sp, #48]	; 0x30
   42360:	add	r7, r5, r7
   42364:	cmp	r0, #14
   42368:	bne	42aa0 <ReadNextStructField+0xd54>
   4236c:	ldr	r0, [sp, #52]	; 0x34
   42370:	ldr	r5, [sp, #32]
   42374:	cmp	r0, #0
   42378:	beq	4242c <ReadNextStructField+0x6e0>
   4237c:	ldr	r3, [r5]
   42380:	str	r0, [sp, #40]	; 0x28
   42384:	mov	r0, r6
   42388:	mov	r1, #4
   4238c:	mov	r2, #6
   42390:	bl	18d0 <fread@plt>
   42394:	mov	r1, r5
   42398:	mov	r5, r0
   4239c:	ldr	r0, [r1, #20]
   423a0:	cmp	r0, #0
   423a4:	beq	423d8 <ReadNextStructField+0x68c>
   423a8:	mov	r0, r6
   423ac:	bl	1c3c <Mat_uint32Swap>
   423b0:	ldr	r0, [sp, #24]
   423b4:	bl	1c3c <Mat_uint32Swap>
   423b8:	ldr	r0, [sp, #12]
   423bc:	bl	1c3c <Mat_uint32Swap>
   423c0:	ldr	r0, [sp, #16]
   423c4:	bl	1c3c <Mat_uint32Swap>
   423c8:	ldr	r0, [sp, #20]
   423cc:	bl	1c3c <Mat_uint32Swap>
   423d0:	ldr	r0, [sp, #28]
   423d4:	bl	1c3c <Mat_uint32Swap>
   423d8:	ldr	r0, [sp, #48]	; 0x30
   423dc:	add	r9, r5, r7
   423e0:	cmp	r0, #6
   423e4:	bne	42448 <ReadNextStructField+0x6fc>
   423e8:	ldr	r0, [sp, #56]	; 0x38
   423ec:	ldr	r1, [sl, r4, lsl #2]!
   423f0:	mov	r6, #0
   423f4:	and	r2, r0, #2048	; 0x800
   423f8:	and	r3, r0, #1024	; 0x400
   423fc:	and	r7, r0, #512	; 0x200
   42400:	uxtb	r0, r0
   42404:	add	ip, r1, #16
   42408:	cmp	r0, #18
   4240c:	movcs	r0, r6
   42410:	mov	r6, sl
   42414:	stm	ip, {r0, r2, r3, r7}
   42418:	cmp	r0, #5
   4241c:	ldreq	r0, [sp, #60]	; 0x3c
   42420:	ldr	r5, [sp, #32]
   42424:	streq	r0, [r1]
   42428:	b	42454 <ReadNextStructField+0x708>
   4242c:	ldr	r0, [sl, r4, lsl #2]
   42430:	ldr	r0, [r0, #52]	; 0x34
   42434:	bl	181c <free@plt>
   42438:	ldr	r0, [sl, r4, lsl #2]
   4243c:	mov	r1, #0
   42440:	str	r1, [r0, #52]	; 0x34
   42444:	b	42520 <ReadNextStructField+0x7d4>
   42448:	ldr	r1, [sl, r4, lsl #2]
   4244c:	ldr	r5, [sp, #32]
   42450:	add	r6, sl, r8
   42454:	ldr	r2, [sp, #64]	; 0x40
   42458:	ldr	r3, [sp, #68]	; 0x44
   4245c:	mov	r0, r5
   42460:	bl	43534 <ReadRankDims>
   42464:	ldr	r3, [r5]
   42468:	mov	sl, r0
   4246c:	add	r0, sp, #48	; 0x30
   42470:	mov	r1, #1
   42474:	mov	r2, #8
   42478:	bl	18d0 <fread@plt>
   4247c:	mov	r1, r5
   42480:	mov	r5, r0
   42484:	ldr	r0, [r1]
   42488:	bl	1858 <ftell@plt>
   4248c:	ldr	r1, [r6]
   42490:	cmn	r0, #1
   42494:	ldr	r2, [r1, #52]	; 0x34
   42498:	str	r0, [r2]
   4249c:	add	r2, r9, sl
   424a0:	add	r7, r2, r5
   424a4:	beq	424cc <ReadNextStructField+0x780>
   424a8:	ldr	r0, [r1, #16]
   424ac:	cmp	r0, #1
   424b0:	beq	424e0 <ReadNextStructField+0x794>
   424b4:	ldr	r5, [sp, #32]
   424b8:	cmp	r0, #2
   424bc:	bne	424f0 <ReadNextStructField+0x7a4>
   424c0:	mov	r0, r5
   424c4:	bl	41d4c <ReadNextStructField>
   424c8:	b	424ec <ReadNextStructField+0x7a0>
   424cc:	ldr	r0, [pc, #1576]	; 42afc <ReadNextStructField+0xdb0>
   424d0:	add	r0, pc, r0
   424d4:	bl	19cc <Mat_Critical@plt>
   424d8:	ldr	r5, [sp, #32]
   424dc:	b	42518 <ReadNextStructField+0x7cc>
   424e0:	ldr	r5, [sp, #32]
   424e4:	mov	r0, r5
   424e8:	bl	42b04 <ReadNextCell>
   424ec:	add	r7, r0, r7
   424f0:	ldr	r1, [r6]
   424f4:	ldr	r0, [sp, #40]	; 0x28
   424f8:	mov	r2, #0
   424fc:	ldr	r1, [r1, #52]	; 0x34
   42500:	sub	r0, r0, #32
   42504:	sub	r0, r0, sl
   42508:	ldr	r1, [r1]
   4250c:	add	r1, r0, r1
   42510:	ldr	r0, [r5]
   42514:	bl	1a68 <fseek@plt>
   42518:	ldr	sl, [sp, #36]	; 0x24
   4251c:	add	r6, sp, #48	; 0x30
   42520:	ldr	r0, [fp, #-36]	; 0xffffffdc
   42524:	add	r4, r4, #1
   42528:	add	r8, r8, #4
   4252c:	cmp	r4, r0
   42530:	bcc	42324 <ReadNextStructField+0x5d8>
   42534:	b	42160 <ReadNextStructField+0x414>
   42538:	ldr	r0, [pc, #1436]	; 42adc <ReadNextStructField+0xd90>
   4253c:	add	r0, pc, r0
   42540:	b	42058 <ReadNextStructField+0x30c>
   42544:	mov	r0, #0
   42548:	ldr	r1, [r9, #52]	; 0x34
   4254c:	ldr	r1, [r1, #8]
   42550:	cmp	r1, #0
   42554:	cmpne	r0, #0
   42558:	beq	425b8 <ReadNextStructField+0x86c>
   4255c:	mov	sl, #0
   42560:	ldr	r0, [sp, #28]
   42564:	cmp	r8, r0
   42568:	bhi	425a8 <ReadNextStructField+0x85c>
   4256c:	mul	r4, sl, r6
   42570:	mov	r5, #0
   42574:	ldr	r0, [r9, #52]	; 0x34
   42578:	ldr	r0, [r0, #8]
   4257c:	ldr	r0, [r0, r5, lsl #2]
   42580:	cmp	r0, #0
   42584:	beq	4259c <ReadNextStructField+0x850>
   42588:	add	r7, r5, r4
   4258c:	bl	187c <strdup@plt>
   42590:	ldr	r1, [sp, #36]	; 0x24
   42594:	ldr	r1, [r1, r7, lsl #2]
   42598:	str	r0, [r1, #36]	; 0x24
   4259c:	add	r5, r5, #1
   425a0:	cmp	r5, r6
   425a4:	bcc	42574 <ReadNextStructField+0x828>
   425a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   425ac:	add	sl, sl, #1
   425b0:	cmp	sl, r0
   425b4:	bcc	42560 <ReadNextStructField+0x814>
   425b8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   425bc:	cmp	r0, #0
   425c0:	beq	4215c <ReadNextStructField+0x410>
   425c4:	ldr	r7, [sp, #40]	; 0x28
   425c8:	ldr	sl, [sp, #24]
   425cc:	add	r5, sp, #48	; 0x30
   425d0:	mov	r8, #0
   425d4:	add	r0, r5, #12
   425d8:	str	r0, [sp, #16]
   425dc:	add	r0, r5, #8
   425e0:	str	r0, [sp, #20]
   425e4:	ldr	r6, [sp, #32]
   425e8:	mov	r1, r9
   425ec:	mov	r2, r5
   425f0:	mov	r0, r6
   425f4:	bl	2710 <InflateVarTag>
   425f8:	mov	r4, r0
   425fc:	ldr	r0, [r6, #20]
   42600:	cmp	r0, #0
   42604:	beq	42618 <ReadNextStructField+0x8cc>
   42608:	mov	r0, r5
   4260c:	bl	1c3c <Mat_uint32Swap>
   42610:	mov	r0, sl
   42614:	bl	1c3c <Mat_uint32Swap>
   42618:	ldr	r0, [sp, #48]	; 0x30
   4261c:	add	r7, r4, r7
   42620:	cmp	r0, #14
   42624:	bne	426ec <ReadNextStructField+0x9a0>
   42628:	ldr	r4, [sp, #36]	; 0x24
   4262c:	ldr	sl, [sp, #52]	; 0x34
   42630:	ldr	r0, [r4, r8, lsl #2]
   42634:	cmp	sl, #0
   42638:	beq	42714 <ReadNextStructField+0x9c8>
   4263c:	ldr	r6, [sp, #32]
   42640:	mov	r1, #1
   42644:	add	r5, sp, #48	; 0x30
   42648:	str	r1, [r0, #48]	; 0x30
   4264c:	mov	r1, r9
   42650:	mov	r2, r5
   42654:	mov	r0, r6
   42658:	bl	2864 <InflateArrayFlags>
   4265c:	mov	r4, r0
   42660:	ldr	r0, [r6, #20]
   42664:	cmp	r0, #0
   42668:	beq	4268c <ReadNextStructField+0x940>
   4266c:	mov	r0, r5
   42670:	bl	1c3c <Mat_uint32Swap>
   42674:	ldr	r0, [sp, #24]
   42678:	bl	1c3c <Mat_uint32Swap>
   4267c:	ldr	r0, [sp, #20]
   42680:	bl	1c3c <Mat_uint32Swap>
   42684:	ldr	r0, [sp, #16]
   42688:	bl	1c3c <Mat_uint32Swap>
   4268c:	ldr	r1, [sp, #48]	; 0x30
   42690:	add	r6, r4, r7
   42694:	sub	r4, sl, #16
   42698:	cmp	r1, #6
   4269c:	bne	4272c <ReadNextStructField+0x9e0>
   426a0:	ldr	r0, [sp, #36]	; 0x24
   426a4:	mov	r5, r6
   426a8:	mov	r6, #0
   426ac:	ldr	r1, [r0, r8, lsl #2]
   426b0:	ldr	r0, [sp, #56]	; 0x38
   426b4:	and	r2, r0, #2048	; 0x800
   426b8:	and	r3, r0, #1024	; 0x400
   426bc:	and	r7, r0, #512	; 0x200
   426c0:	uxtb	r0, r0
   426c4:	add	ip, r1, #16
   426c8:	cmp	r0, #18
   426cc:	movcs	r0, r6
   426d0:	cmp	r0, #5
   426d4:	stm	ip, {r0, r2, r3, r7}
   426d8:	bne	42760 <ReadNextStructField+0xa14>
   426dc:	ldr	r0, [sp, #60]	; 0x3c
   426e0:	mov	r6, r5
   426e4:	str	r0, [r1]
   426e8:	b	4276c <ReadNextStructField+0xa20>
   426ec:	ldr	r4, [sp, #36]	; 0x24
   426f0:	ldr	r0, [r4, r8, lsl #2]
   426f4:	bl	1930 <Mat_VarFree@plt>
   426f8:	mov	r0, #0
   426fc:	mov	r1, r8
   42700:	str	r0, [r4, r8, lsl #2]
   42704:	ldr	r0, [pc, #980]	; 42ae0 <ReadNextStructField+0xd94>
   42708:	add	r0, pc, r0
   4270c:	bl	19cc <Mat_Critical@plt>
   42710:	b	42a8c <ReadNextStructField+0xd40>
   42714:	ldr	r0, [r0, #52]	; 0x34
   42718:	bl	181c <free@plt>
   4271c:	ldr	r0, [r4, r8, lsl #2]
   42720:	mov	r1, #0
   42724:	str	r1, [r0, #52]	; 0x34
   42728:	b	42a84 <ReadNextStructField+0xd38>
   4272c:	ldr	r0, [pc, #944]	; 42ae4 <ReadNextStructField+0xd98>
   42730:	add	r0, pc, r0
   42734:	bl	19cc <Mat_Critical@plt>
   42738:	ldr	r0, [r9, #52]	; 0x34
   4273c:	mov	r2, r4
   42740:	ldr	r1, [r0, #12]
   42744:	ldr	r0, [sp, #32]
   42748:	bl	234c <InflateSkip>
   4274c:	add	r6, r0, r6
   42750:	ldr	r0, [sp, #36]	; 0x24
   42754:	ldr	r0, [r0, r8, lsl #2]
   42758:	ldr	r0, [r0, #16]
   4275c:	b	42764 <ReadNextStructField+0xa18>
   42760:	mov	r6, r5
   42764:	cmp	r0, #17
   42768:	beq	42a6c <ReadNextStructField+0xd20>
   4276c:	ldr	r7, [sp, #32]
   42770:	mov	r0, #0
   42774:	mov	r1, r9
   42778:	add	r2, sp, #48	; 0x30
   4277c:	mov	r3, #64	; 0x40
   42780:	str	r0, [sp, #44]	; 0x2c
   42784:	add	r0, sp, #44	; 0x2c
   42788:	str	r0, [sp]
   4278c:	mov	r0, r7
   42790:	bl	29b8 <InflateRankDims>
   42794:	str	r0, [sp, #28]
   42798:	ldr	r0, [sp, #44]	; 0x2c
   4279c:	mov	r4, #1
   427a0:	cmp	r0, #0
   427a4:	ldreq	r0, [sp, #20]
   427a8:	moveq	r4, #0
   427ac:	streq	r0, [sp, #44]	; 0x2c
   427b0:	ldr	r0, [r7, #20]
   427b4:	cmp	r0, #0
   427b8:	beq	427cc <ReadNextStructField+0xa80>
   427bc:	add	r0, sp, #48	; 0x30
   427c0:	bl	1c3c <Mat_uint32Swap>
   427c4:	ldr	r0, [sp, #24]
   427c8:	bl	1c3c <Mat_uint32Swap>
   427cc:	ldr	r0, [sp, #48]	; 0x30
   427d0:	sub	sl, sl, #24
   427d4:	str	r4, [sp, #40]	; 0x28
   427d8:	cmp	r0, #5
   427dc:	bne	4286c <ReadNextStructField+0xb20>
   427e0:	ldr	r5, [sp, #36]	; 0x24
   427e4:	ldr	r7, [sp, #52]	; 0x34
   427e8:	str	r6, [sp, #12]
   427ec:	ldr	r6, [r5, r8, lsl #2]
   427f0:	asr	r0, r7, #31
   427f4:	add	r0, r7, r0, lsr #30
   427f8:	asr	r1, r0, #2
   427fc:	bic	r0, r0, #3
   42800:	str	r1, [r6, #4]
   42804:	bl	18e8 <malloc@plt>
   42808:	str	r0, [r6, #32]
   4280c:	ldr	r2, [sp, #32]
   42810:	sub	sl, sl, r7
   42814:	add	r4, sp, #48	; 0x30
   42818:	ldr	r1, [r5, r8, lsl #2]
   4281c:	ldr	r2, [r2, #20]
   42820:	ldr	r0, [r1, #4]
   42824:	cmp	r2, #0
   42828:	beq	42878 <ReadNextStructField+0xb2c>
   4282c:	cmp	r0, #1
   42830:	blt	428a4 <ReadNextStructField+0xb58>
   42834:	mov	r7, #0
   42838:	mov	r6, #0
   4283c:	ldr	r0, [sp, #44]	; 0x2c
   42840:	add	r0, r0, r7
   42844:	bl	1c3c <Mat_uint32Swap>
   42848:	ldr	r1, [r5, r8, lsl #2]
   4284c:	add	r6, r6, #1
   42850:	ldr	r2, [r1, #32]
   42854:	str	r0, [r2, r7]
   42858:	add	r7, r7, #4
   4285c:	ldr	r0, [r1, #4]
   42860:	cmp	r6, r0
   42864:	blt	4283c <ReadNextStructField+0xaf0>
   42868:	b	428a4 <ReadNextStructField+0xb58>
   4286c:	ldr	r5, [sp, #36]	; 0x24
   42870:	add	r4, sp, #48	; 0x30
   42874:	b	428b0 <ReadNextStructField+0xb64>
   42878:	cmp	r0, #1
   4287c:	blt	428a4 <ReadNextStructField+0xb58>
   42880:	ldr	r2, [r1, #32]
   42884:	ldr	r7, [sp, #44]	; 0x2c
   42888:	mov	r3, #0
   4288c:	ldr	r0, [r7, r3, lsl #2]
   42890:	str	r0, [r2, r3, lsl #2]
   42894:	add	r3, r3, #1
   42898:	ldr	r0, [r1, #4]
   4289c:	cmp	r3, r0
   428a0:	blt	4288c <ReadNextStructField+0xb40>
   428a4:	ldr	r6, [sp, #12]
   428a8:	tst	r0, #1
   428ac:	subne	sl, sl, #4
   428b0:	ldr	r0, [sp, #28]
   428b4:	add	r7, r0, r6
   428b8:	ldr	r0, [sp, #40]	; 0x28
   428bc:	cmp	r0, #0
   428c0:	beq	428cc <ReadNextStructField+0xb80>
   428c4:	ldr	r0, [sp, #44]	; 0x2c
   428c8:	bl	181c <free@plt>
   428cc:	ldr	r0, [sp, #32]
   428d0:	mov	r1, r9
   428d4:	mov	r2, r4
   428d8:	bl	2ca4 <InflateVarNameTag>
   428dc:	mov	r4, r0
   428e0:	mov	r0, #1
   428e4:	mov	r1, #56	; 0x38
   428e8:	bl	17b0 <calloc@plt>
   428ec:	ldr	r1, [r5, r8, lsl #2]
   428f0:	add	r6, r7, r4
   428f4:	ldr	r1, [r1, #52]	; 0x34
   428f8:	str	r0, [r1, #12]
   428fc:	ldr	r0, [r5, r8, lsl #2]
   42900:	ldr	r0, [r0, #52]	; 0x34
   42904:	ldr	r0, [r0, #12]
   42908:	cmp	r0, #0
   4290c:	beq	4293c <ReadNextStructField+0xbf0>
   42910:	ldr	r1, [r9, #52]	; 0x34
   42914:	ldr	r1, [r1, #12]
   42918:	bl	1960 <inflateCopy@plt>
   4291c:	cmp	r0, #0
   42920:	beq	4294c <ReadNextStructField+0xc00>
   42924:	bl	18a0 <zError@plt>
   42928:	mov	r1, r0
   4292c:	ldr	r0, [pc, #440]	; 42aec <ReadNextStructField+0xda0>
   42930:	add	r0, pc, r0
   42934:	bl	19cc <Mat_Critical@plt>
   42938:	b	42a68 <ReadNextStructField+0xd1c>
   4293c:	ldr	r0, [pc, #428]	; 42af0 <ReadNextStructField+0xda4>
   42940:	add	r0, pc, r0
   42944:	bl	19cc <Mat_Critical@plt>
   42948:	b	42a68 <ReadNextStructField+0xd1c>
   4294c:	ldr	r0, [sp, #32]
   42950:	ldr	r0, [r0]
   42954:	bl	1858 <ftell@plt>
   42958:	ldr	r1, [r5, r8, lsl #2]
   4295c:	cmn	r0, #1
   42960:	ldr	r2, [r1, #52]	; 0x34
   42964:	str	r0, [r2]
   42968:	beq	429a4 <ReadNextStructField+0xc58>
   4296c:	ldr	r3, [r9, #52]	; 0x34
   42970:	ldr	r3, [r3, #12]
   42974:	ldr	r3, [r3, #4]
   42978:	sub	r0, r0, r3
   4297c:	str	r0, [r2]
   42980:	ldr	r0, [r1, #16]
   42984:	cmp	r0, #1
   42988:	beq	429b4 <ReadNextStructField+0xc68>
   4298c:	cmp	r0, #2
   42990:	bne	429c8 <ReadNextStructField+0xc7c>
   42994:	ldr	r4, [sp, #32]
   42998:	mov	r0, r4
   4299c:	bl	41d4c <ReadNextStructField>
   429a0:	b	429c0 <ReadNextStructField+0xc74>
   429a4:	ldr	r0, [pc, #316]	; 42ae8 <ReadNextStructField+0xd9c>
   429a8:	add	r0, pc, r0
   429ac:	bl	19cc <Mat_Critical@plt>
   429b0:	b	42a1c <ReadNextStructField+0xcd0>
   429b4:	ldr	r4, [sp, #32]
   429b8:	mov	r0, r4
   429bc:	bl	42b04 <ReadNextCell>
   429c0:	add	r6, r0, r6
   429c4:	b	42a04 <ReadNextStructField+0xcb8>
   429c8:	movw	r0, #32776	; 0x8008
   429cc:	cmp	sl, r0
   429d0:	bgt	42a00 <ReadNextStructField+0xcb4>
   429d4:	ldr	r4, [sp, #32]
   429d8:	mov	r0, r4
   429dc:	bl	20008 <Mat_VarRead5>
   429e0:	ldr	r0, [r5, r8, lsl #2]
   429e4:	ldr	r1, [r0, #40]	; 0x28
   429e8:	ldr	r0, [r0, #52]	; 0x34
   429ec:	str	r1, [r0, #16]
   429f0:	mov	r1, #0
   429f4:	ldr	r0, [r5, r8, lsl #2]
   429f8:	str	r1, [r0, #40]	; 0x28
   429fc:	b	42a04 <ReadNextStructField+0xcb8>
   42a00:	ldr	r4, [sp, #32]
   42a04:	ldr	r0, [r5, r8, lsl #2]
   42a08:	mov	r2, #0
   42a0c:	ldr	r0, [r0, #52]	; 0x34
   42a10:	ldr	r1, [r0]
   42a14:	ldr	r0, [r4]
   42a18:	bl	1a68 <fseek@plt>
   42a1c:	ldr	r1, [r5, r8, lsl #2]
   42a20:	ldr	r0, [r1, #52]	; 0x34
   42a24:	ldr	r2, [r0, #16]
   42a28:	cmp	r2, #0
   42a2c:	bne	42a40 <ReadNextStructField+0xcf4>
   42a30:	ldr	r1, [r1, #16]
   42a34:	sub	r1, r1, #1
   42a38:	cmp	r1, #1
   42a3c:	bhi	42a68 <ReadNextStructField+0xd1c>
   42a40:	ldr	r0, [r0, #12]
   42a44:	bl	1954 <inflateEnd@plt>
   42a48:	ldr	r0, [r5, r8, lsl #2]
   42a4c:	ldr	r0, [r0, #52]	; 0x34
   42a50:	ldr	r0, [r0, #12]
   42a54:	bl	181c <free@plt>
   42a58:	ldr	r0, [r5, r8, lsl #2]
   42a5c:	mov	r1, #0
   42a60:	ldr	r0, [r0, #52]	; 0x34
   42a64:	str	r1, [r0, #12]
   42a68:	sub	r4, sl, #8
   42a6c:	ldr	r0, [r9, #52]	; 0x34
   42a70:	mov	r2, r4
   42a74:	ldr	r1, [r0, #12]
   42a78:	ldr	r0, [sp, #32]
   42a7c:	bl	234c <InflateSkip>
   42a80:	add	r7, r0, r6
   42a84:	ldr	sl, [sp, #24]
   42a88:	add	r5, sp, #48	; 0x30
   42a8c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   42a90:	add	r8, r8, #1
   42a94:	cmp	r8, r0
   42a98:	bcc	425e4 <ReadNextStructField+0x898>
   42a9c:	b	42160 <ReadNextStructField+0x414>
   42aa0:	ldr	r0, [sl, r4, lsl #2]
   42aa4:	bl	1930 <Mat_VarFree@plt>
   42aa8:	mov	r0, #0
   42aac:	str	r0, [sl, r4, lsl #2]
   42ab0:	ldr	r0, [sp, #32]
   42ab4:	ldr	r0, [r0]
   42ab8:	bl	1858 <ftell@plt>
   42abc:	mov	r2, r0
   42ac0:	ldr	r0, [pc, #48]	; 42af8 <ReadNextStructField+0xdac>
   42ac4:	mov	r1, r4
   42ac8:	add	r0, pc, r0
   42acc:	bl	19cc <Mat_Critical@plt>
   42ad0:	b	42160 <ReadNextStructField+0x414>
   42ad4:	.word	0x00007fc4
   42ad8:	.word	0x00007cf0
   42adc:	.word	0x00007828
   42ae0:	.word	0x000078b6
   42ae4:	.word	0x000078be
   42ae8:	.word	0x00007310
   42aec:	.word	0x000075bf
   42af0:	.word	0x000076db
   42af4:	.word	0x00007bf0
   42af8:	.word	0x0000756c
   42afc:	.word	0x000077e8
   42b00:	.word	0x00008065

00042b04 <ReadNextCell>:
   42b04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   42b08:	add	fp, sp, #28
   42b0c:	sub	sp, sp, #116	; 0x74
   42b10:	mov	r6, r1
   42b14:	mov	r4, r0
   42b18:	mov	r0, #1
   42b1c:	sub	r1, fp, #32
   42b20:	str	r0, [fp, #-32]	; 0xffffffe0
   42b24:	mov	r0, r6
   42b28:	bl	45294 <SafeMulDims>
   42b2c:	cmp	r0, #0
   42b30:	bne	42b54 <ReadNextCell+0x50>
   42b34:	mov	r0, #4
   42b38:	mov	r2, #4
   42b3c:	str	r0, [r6, #12]
   42b40:	mov	r0, r6
   42b44:	ldr	r1, [fp, #-32]	; 0xffffffe0
   42b48:	bl	452f0 <SafeMul>
   42b4c:	cmp	r0, #0
   42b50:	beq	42b70 <ReadNextCell+0x6c>
   42b54:	ldr	r0, [pc, #2476]	; 43508 <ReadNextCell+0xa04>
   42b58:	add	r0, pc, r0
   42b5c:	bl	19cc <Mat_Critical@plt>
   42b60:	mov	r9, #0
   42b64:	mov	r0, r9
   42b68:	sub	sp, fp, #28
   42b6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   42b70:	ldr	r7, [fp, #-32]	; 0xffffffe0
   42b74:	ldr	r1, [r6, #12]
   42b78:	mov	r0, r7
   42b7c:	bl	17b0 <calloc@plt>
   42b80:	cmp	r0, #0
   42b84:	str	r0, [r6, #40]	; 0x28
   42b88:	str	r0, [sp, #36]	; 0x24
   42b8c:	beq	431c4 <ReadNextCell+0x6c0>
   42b90:	ldr	r0, [r6, #48]	; 0x30
   42b94:	str	r4, [sp, #40]	; 0x28
   42b98:	cmp	r0, #1
   42b9c:	bne	431e4 <ReadNextCell+0x6e0>
   42ba0:	add	r2, sp, #48	; 0x30
   42ba4:	vmov.i32	q8, #0	; 0x00000000
   42ba8:	mov	r0, #48	; 0x30
   42bac:	cmp	r7, #0
   42bb0:	mov	r1, r2
   42bb4:	vst1.64	{d16-d17}, [r1], r0
   42bb8:	add	r0, r2, #32
   42bbc:	vst1.64	{d16-d17}, [r0]
   42bc0:	add	r0, r2, #16
   42bc4:	vst1.64	{d16-d17}, [r1]
   42bc8:	vst1.64	{d16-d17}, [r0]
   42bcc:	beq	42b60 <ReadNextCell+0x5c>
   42bd0:	ldr	r5, [sp, #36]	; 0x24
   42bd4:	add	r0, r2, #12
   42bd8:	mov	r9, #0
   42bdc:	mov	r8, #0
   42be0:	str	r6, [sp, #20]
   42be4:	str	r0, [sp, #12]
   42be8:	add	r0, r2, #8
   42bec:	str	r0, [sp, #16]
   42bf0:	orr	r0, r2, #4
   42bf4:	str	r0, [sp, #32]
   42bf8:	bl	18b8 <Mat_VarCalloc@plt>
   42bfc:	mov	sl, r5
   42c00:	cmp	r0, #0
   42c04:	str	r0, [sl, r8, lsl #2]!
   42c08:	beq	42d28 <ReadNextCell+0x224>
   42c0c:	mov	r0, #0
   42c10:	mov	r7, r4
   42c14:	mov	r1, r6
   42c18:	str	r0, [sp, #52]	; 0x34
   42c1c:	str	r0, [sp, #48]	; 0x30
   42c20:	mov	r0, r4
   42c24:	add	r4, sp, #48	; 0x30
   42c28:	mov	r2, r4
   42c2c:	bl	2710 <InflateVarTag>
   42c30:	mov	r5, r0
   42c34:	ldr	r0, [r7, #20]
   42c38:	cmp	r0, #0
   42c3c:	beq	42c50 <ReadNextCell+0x14c>
   42c40:	mov	r0, r4
   42c44:	bl	1c3c <Mat_uint32Swap>
   42c48:	ldr	r0, [sp, #32]
   42c4c:	bl	1c3c <Mat_uint32Swap>
   42c50:	ldr	r7, [sp, #52]	; 0x34
   42c54:	add	r9, r5, r9
   42c58:	cmp	r7, #0
   42c5c:	beq	42d3c <ReadNextCell+0x238>
   42c60:	ldr	r1, [sp, #48]	; 0x30
   42c64:	ldr	r0, [sl]
   42c68:	ldr	r2, [sp, #40]	; 0x28
   42c6c:	cmp	r1, #14
   42c70:	bne	434bc <ReadNextCell+0x9b8>
   42c74:	mov	r1, #1
   42c78:	add	r4, sp, #48	; 0x30
   42c7c:	str	r1, [r0, #48]	; 0x30
   42c80:	mov	r1, r6
   42c84:	mov	r0, r2
   42c88:	mov	r6, r2
   42c8c:	mov	r2, r4
   42c90:	bl	2864 <InflateArrayFlags>
   42c94:	mov	r5, r0
   42c98:	ldr	r0, [r6, #20]
   42c9c:	cmp	r0, #0
   42ca0:	beq	42cc4 <ReadNextCell+0x1c0>
   42ca4:	mov	r0, r4
   42ca8:	bl	1c3c <Mat_uint32Swap>
   42cac:	ldr	r0, [sp, #32]
   42cb0:	bl	1c3c <Mat_uint32Swap>
   42cb4:	ldr	r0, [sp, #16]
   42cb8:	bl	1c3c <Mat_uint32Swap>
   42cbc:	ldr	r0, [sp, #12]
   42cc0:	bl	1c3c <Mat_uint32Swap>
   42cc4:	ldr	r1, [sp, #48]	; 0x30
   42cc8:	add	r5, r5, r9
   42ccc:	sub	r9, r7, #16
   42cd0:	cmp	r1, #6
   42cd4:	bne	42d60 <ReadNextCell+0x25c>
   42cd8:	ldr	r0, [sp, #56]	; 0x38
   42cdc:	ldr	r1, [sl]
   42ce0:	mov	ip, r5
   42ce4:	mov	r6, #0
   42ce8:	and	r2, r0, #2048	; 0x800
   42cec:	and	r3, r0, #1024	; 0x400
   42cf0:	and	r5, r0, #512	; 0x200
   42cf4:	uxtb	r0, r0
   42cf8:	add	lr, r1, #16
   42cfc:	cmp	r0, #18
   42d00:	movcs	r0, r6
   42d04:	stm	lr, {r0, r2, r3, r5}
   42d08:	cmp	r0, #5
   42d0c:	ldr	r4, [sp, #40]	; 0x28
   42d10:	ldr	r6, [sp, #20]
   42d14:	bne	42d98 <ReadNextCell+0x294>
   42d18:	ldr	r0, [sp, #60]	; 0x3c
   42d1c:	mov	r5, ip
   42d20:	str	r0, [r1]
   42d24:	b	42da4 <ReadNextCell+0x2a0>
   42d28:	ldr	r0, [pc, #2016]	; 43510 <ReadNextCell+0xa0c>
   42d2c:	mov	r1, r8
   42d30:	add	r0, pc, r0
   42d34:	bl	19cc <Mat_Critical@plt>
   42d38:	b	431b0 <ReadNextCell+0x6ac>
   42d3c:	ldr	r0, [sl]
   42d40:	ldr	r0, [r0, #52]	; 0x34
   42d44:	bl	181c <free@plt>
   42d48:	ldr	r0, [sl]
   42d4c:	ldr	r5, [sp, #36]	; 0x24
   42d50:	ldr	r4, [sp, #40]	; 0x28
   42d54:	mov	r1, #0
   42d58:	str	r1, [r0, #52]	; 0x34
   42d5c:	b	431b0 <ReadNextCell+0x6ac>
   42d60:	ldr	r0, [pc, #1968]	; 43518 <ReadNextCell+0xa14>
   42d64:	add	r0, pc, r0
   42d68:	bl	19cc <Mat_Critical@plt>
   42d6c:	ldr	r6, [sp, #20]
   42d70:	ldr	r4, [sp, #40]	; 0x28
   42d74:	mov	r2, r9
   42d78:	ldr	r0, [r6, #52]	; 0x34
   42d7c:	ldr	r1, [r0, #12]
   42d80:	mov	r0, r4
   42d84:	bl	234c <InflateSkip>
   42d88:	add	r5, r0, r5
   42d8c:	ldr	r0, [sl]
   42d90:	ldr	r0, [r0, #16]
   42d94:	b	42d9c <ReadNextCell+0x298>
   42d98:	mov	r5, ip
   42d9c:	cmp	r0, #17
   42da0:	beq	43194 <ReadNextCell+0x690>
   42da4:	mov	r0, #0
   42da8:	str	r5, [sp, #24]
   42dac:	mov	r5, r4
   42db0:	mov	r1, r6
   42db4:	mov	r3, #64	; 0x40
   42db8:	str	r0, [sp, #44]	; 0x2c
   42dbc:	add	r0, sp, #44	; 0x2c
   42dc0:	str	r0, [sp]
   42dc4:	mov	r0, r4
   42dc8:	add	r4, sp, #48	; 0x30
   42dcc:	mov	r2, r4
   42dd0:	bl	29b8 <InflateRankDims>
   42dd4:	mov	r9, r0
   42dd8:	ldr	r0, [sp, #44]	; 0x2c
   42ddc:	mov	r1, #1
   42de0:	cmp	r0, #0
   42de4:	ldreq	r0, [sp, #16]
   42de8:	moveq	r1, #0
   42dec:	streq	r0, [sp, #44]	; 0x2c
   42df0:	ldr	r0, [r5, #20]
   42df4:	cmp	r0, #0
   42df8:	beq	42e14 <ReadNextCell+0x310>
   42dfc:	mov	r0, r4
   42e00:	mov	r5, r1
   42e04:	bl	1c3c <Mat_uint32Swap>
   42e08:	ldr	r0, [sp, #32]
   42e0c:	bl	1c3c <Mat_uint32Swap>
   42e10:	mov	r1, r5
   42e14:	ldr	r0, [sp, #48]	; 0x30
   42e18:	sub	r7, r7, #24
   42e1c:	cmp	r0, #5
   42e20:	bne	42eac <ReadNextCell+0x3a8>
   42e24:	stmib	sp, {r1, r9}
   42e28:	ldr	r4, [sp, #52]	; 0x34
   42e2c:	ldr	r5, [sl]
   42e30:	asr	r0, r4, #31
   42e34:	add	r0, r4, r0, lsr #30
   42e38:	asr	r1, r0, #2
   42e3c:	bic	r0, r0, #3
   42e40:	str	r1, [r5, #4]
   42e44:	bl	18e8 <malloc@plt>
   42e48:	str	r0, [r5, #32]
   42e4c:	ldr	r3, [sp, #40]	; 0x28
   42e50:	sub	r7, r7, r4
   42e54:	ldr	r1, [sl]
   42e58:	mov	r4, r7
   42e5c:	ldr	r2, [r3, #20]
   42e60:	ldr	r0, [r1, #4]
   42e64:	cmp	r2, #0
   42e68:	beq	42eb8 <ReadNextCell+0x3b4>
   42e6c:	cmp	r0, #1
   42e70:	blt	42ee4 <ReadNextCell+0x3e0>
   42e74:	mov	r5, #0
   42e78:	mov	r9, #0
   42e7c:	ldr	r0, [sp, #44]	; 0x2c
   42e80:	add	r0, r0, r5
   42e84:	bl	1c3c <Mat_uint32Swap>
   42e88:	ldr	r1, [sl]
   42e8c:	add	r9, r9, #1
   42e90:	ldr	r2, [r1, #32]
   42e94:	str	r0, [r2, r5]
   42e98:	add	r5, r5, #4
   42e9c:	ldr	r0, [r1, #4]
   42ea0:	cmp	r9, r0
   42ea4:	blt	42e7c <ReadNextCell+0x378>
   42ea8:	b	42ee4 <ReadNextCell+0x3e0>
   42eac:	ldr	r5, [sp, #24]
   42eb0:	str	r7, [sp, #28]
   42eb4:	b	42efc <ReadNextCell+0x3f8>
   42eb8:	cmp	r0, #1
   42ebc:	blt	42ee4 <ReadNextCell+0x3e0>
   42ec0:	ldr	r2, [r1, #32]
   42ec4:	ldr	r7, [sp, #44]	; 0x2c
   42ec8:	mov	r3, #0
   42ecc:	ldr	r0, [r7, r3, lsl #2]
   42ed0:	str	r0, [r2, r3, lsl #2]
   42ed4:	add	r3, r3, #1
   42ed8:	ldr	r0, [r1, #4]
   42edc:	cmp	r3, r0
   42ee0:	blt	42ecc <ReadNextCell+0x3c8>
   42ee4:	tst	r0, #1
   42ee8:	ldr	r5, [sp, #24]
   42eec:	subne	r4, r4, #4
   42ef0:	str	r4, [sp, #28]
   42ef4:	add	r4, sp, #48	; 0x30
   42ef8:	ldmib	sp, {r1, r9}
   42efc:	cmp	r1, #0
   42f00:	beq	42f0c <ReadNextCell+0x408>
   42f04:	ldr	r0, [sp, #44]	; 0x2c
   42f08:	bl	181c <free@plt>
   42f0c:	ldr	r7, [sp, #40]	; 0x28
   42f10:	mov	r1, r6
   42f14:	mov	r2, r4
   42f18:	add	r9, r9, r5
   42f1c:	mov	r0, r7
   42f20:	bl	2ca4 <InflateVarNameTag>
   42f24:	mov	r5, r0
   42f28:	ldr	r0, [r7, #20]
   42f2c:	cmp	r0, #0
   42f30:	beq	42f44 <ReadNextCell+0x440>
   42f34:	mov	r0, r4
   42f38:	bl	1c3c <Mat_uint32Swap>
   42f3c:	ldr	r0, [sp, #32]
   42f40:	bl	1c3c <Mat_uint32Swap>
   42f44:	ldr	r7, [sp, #52]	; 0x34
   42f48:	ldr	r0, [sp, #28]
   42f4c:	add	r5, r9, r5
   42f50:	sub	r9, r0, #8
   42f54:	cmp	r7, #0
   42f58:	beq	42fc4 <ReadNextCell+0x4c0>
   42f5c:	ldr	r0, [sp, #48]	; 0x30
   42f60:	cmp	r0, #1
   42f64:	bne	42fcc <ReadNextCell+0x4c8>
   42f68:	ands	r0, r7, #7
   42f6c:	rsb	r0, r0, #8
   42f70:	addne	r7, r7, r0
   42f74:	add	r0, r7, #1
   42f78:	bl	18e8 <malloc@plt>
   42f7c:	ldr	r1, [sl]
   42f80:	ldr	r4, [sp, #40]	; 0x28
   42f84:	sub	r9, r9, r7
   42f88:	str	r0, [r1, #36]	; 0x24
   42f8c:	ldr	r0, [sl]
   42f90:	ldr	r2, [r0, #36]	; 0x24
   42f94:	cmp	r2, #0
   42f98:	beq	4302c <ReadNextCell+0x528>
   42f9c:	mov	r0, r4
   42fa0:	mov	r1, r6
   42fa4:	mov	r3, r7
   42fa8:	bl	2df8 <InflateVarName>
   42fac:	ldr	r1, [sl]
   42fb0:	mov	r2, #0
   42fb4:	add	r5, r0, r5
   42fb8:	ldr	r1, [r1, #36]	; 0x24
   42fbc:	strb	r2, [r1, r7]
   42fc0:	b	4302c <ReadNextCell+0x528>
   42fc4:	ldr	r4, [sp, #40]	; 0x28
   42fc8:	b	4302c <ReadNextCell+0x528>
   42fcc:	ldr	r4, [sp, #40]	; 0x28
   42fd0:	lsr	r7, r0, #16
   42fd4:	cmp	r7, #4
   42fd8:	bhi	4302c <ReadNextCell+0x528>
   42fdc:	uxth	r0, r0
   42fe0:	cmp	r0, #1
   42fe4:	bne	4302c <ReadNextCell+0x528>
   42fe8:	cmp	r7, #0
   42fec:	beq	4302c <ReadNextCell+0x528>
   42ff0:	add	r0, r7, #1
   42ff4:	bl	18e8 <malloc@plt>
   42ff8:	ldr	r1, [sl]
   42ffc:	str	r0, [r1, #36]	; 0x24
   43000:	ldr	r0, [sl]
   43004:	ldr	r0, [r0, #36]	; 0x24
   43008:	cmp	r0, #0
   4300c:	beq	4302c <ReadNextCell+0x528>
   43010:	ldr	r1, [sp, #32]
   43014:	mov	r2, r7
   43018:	bl	1834 <memcpy@plt>
   4301c:	ldr	r0, [sl]
   43020:	mov	r1, #0
   43024:	ldr	r0, [r0, #36]	; 0x24
   43028:	strb	r1, [r0, r7]
   4302c:	mov	r0, #1
   43030:	mov	r1, #56	; 0x38
   43034:	bl	17b0 <calloc@plt>
   43038:	ldr	r1, [sl]
   4303c:	ldr	r1, [r1, #52]	; 0x34
   43040:	str	r0, [r1, #12]
   43044:	ldr	r0, [sl]
   43048:	ldr	r0, [r0, #52]	; 0x34
   4304c:	ldr	r0, [r0, #12]
   43050:	cmp	r0, #0
   43054:	beq	43084 <ReadNextCell+0x580>
   43058:	ldr	r1, [r6, #52]	; 0x34
   4305c:	ldr	r1, [r1, #12]
   43060:	bl	1960 <inflateCopy@plt>
   43064:	cmp	r0, #0
   43068:	beq	43094 <ReadNextCell+0x590>
   4306c:	bl	18a0 <zError@plt>
   43070:	mov	r1, r0
   43074:	ldr	r0, [pc, #1188]	; 43520 <ReadNextCell+0xa1c>
   43078:	add	r0, pc, r0
   4307c:	bl	19cc <Mat_Critical@plt>
   43080:	b	43194 <ReadNextCell+0x690>
   43084:	ldr	r0, [pc, #1176]	; 43524 <ReadNextCell+0xa20>
   43088:	add	r0, pc, r0
   4308c:	bl	19cc <Mat_Critical@plt>
   43090:	b	43194 <ReadNextCell+0x690>
   43094:	ldr	r0, [r4]
   43098:	bl	1858 <ftell@plt>
   4309c:	ldr	r1, [sl]
   430a0:	cmn	r0, #1
   430a4:	ldr	r2, [r1, #52]	; 0x34
   430a8:	str	r0, [r2]
   430ac:	beq	430e4 <ReadNextCell+0x5e0>
   430b0:	ldr	r3, [r6, #52]	; 0x34
   430b4:	ldr	r3, [r3, #12]
   430b8:	ldr	r3, [r3, #4]
   430bc:	sub	r0, r0, r3
   430c0:	str	r0, [r2]
   430c4:	ldr	r0, [r1, #16]
   430c8:	cmp	r0, #1
   430cc:	beq	430f4 <ReadNextCell+0x5f0>
   430d0:	cmp	r0, #2
   430d4:	bne	43104 <ReadNextCell+0x600>
   430d8:	mov	r0, r4
   430dc:	bl	41d4c <ReadNextStructField>
   430e0:	b	430fc <ReadNextCell+0x5f8>
   430e4:	ldr	r0, [pc, #1072]	; 4351c <ReadNextCell+0xa18>
   430e8:	add	r0, pc, r0
   430ec:	bl	19cc <Mat_Critical@plt>
   430f0:	b	43148 <ReadNextCell+0x644>
   430f4:	mov	r0, r4
   430f8:	bl	42b04 <ReadNextCell>
   430fc:	add	r5, r0, r5
   43100:	b	43130 <ReadNextCell+0x62c>
   43104:	cmp	r9, #32768	; 0x8000
   43108:	bgt	43130 <ReadNextCell+0x62c>
   4310c:	mov	r0, r4
   43110:	bl	20008 <Mat_VarRead5>
   43114:	ldr	r0, [sl]
   43118:	ldr	r1, [r0, #40]	; 0x28
   4311c:	ldr	r0, [r0, #52]	; 0x34
   43120:	str	r1, [r0, #16]
   43124:	mov	r1, #0
   43128:	ldr	r0, [sl]
   4312c:	str	r1, [r0, #40]	; 0x28
   43130:	ldr	r1, [sl]
   43134:	ldr	r0, [r4]
   43138:	mov	r2, #0
   4313c:	ldr	r1, [r1, #52]	; 0x34
   43140:	ldr	r1, [r1]
   43144:	bl	1a68 <fseek@plt>
   43148:	ldr	r1, [sl]
   4314c:	ldr	r0, [r1, #52]	; 0x34
   43150:	ldr	r2, [r0, #16]
   43154:	cmp	r2, #0
   43158:	bne	4316c <ReadNextCell+0x668>
   4315c:	ldr	r1, [r1, #16]
   43160:	sub	r1, r1, #1
   43164:	cmp	r1, #1
   43168:	bhi	43194 <ReadNextCell+0x690>
   4316c:	ldr	r0, [r0, #12]
   43170:	bl	1954 <inflateEnd@plt>
   43174:	ldr	r0, [sl]
   43178:	ldr	r0, [r0, #52]	; 0x34
   4317c:	ldr	r0, [r0, #12]
   43180:	bl	181c <free@plt>
   43184:	ldr	r0, [sl]
   43188:	mov	r1, #0
   4318c:	ldr	r0, [r0, #52]	; 0x34
   43190:	str	r1, [r0, #12]
   43194:	ldr	r0, [r6, #52]	; 0x34
   43198:	mov	r2, r9
   4319c:	ldr	r1, [r0, #12]
   431a0:	mov	r0, r4
   431a4:	bl	234c <InflateSkip>
   431a8:	add	r9, r0, r5
   431ac:	ldr	r5, [sp, #36]	; 0x24
   431b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   431b4:	add	r8, r8, #1
   431b8:	cmp	r8, r0
   431bc:	bcc	42bf8 <ReadNextCell+0xf4>
   431c0:	b	42b64 <ReadNextCell+0x60>
   431c4:	ldr	r1, [r6, #36]	; 0x24
   431c8:	mov	r9, #0
   431cc:	cmp	r1, #0
   431d0:	beq	42b64 <ReadNextCell+0x60>
   431d4:	ldr	r0, [pc, #816]	; 4350c <ReadNextCell+0xa08>
   431d8:	add	r0, pc, r0
   431dc:	bl	19cc <Mat_Critical@plt>
   431e0:	b	42b64 <ReadNextCell+0x60>
   431e4:	cmp	r7, #0
   431e8:	beq	42b60 <ReadNextCell+0x5c>
   431ec:	add	sl, sp, #48	; 0x30
   431f0:	ldr	r7, [sp, #36]	; 0x24
   431f4:	mov	r9, #0
   431f8:	mov	r6, #0
   431fc:	add	r0, sl, #20
   43200:	str	r0, [sp, #28]
   43204:	add	r0, sl, #16
   43208:	str	r0, [sp, #24]
   4320c:	add	r0, sl, #12
   43210:	str	r0, [sp, #20]
   43214:	add	r0, sl, #8
   43218:	str	r0, [sp, #16]
   4321c:	add	r0, sl, #4
   43220:	str	r0, [sp, #32]
   43224:	bl	18b8 <Mat_VarCalloc@plt>
   43228:	cmp	r0, #0
   4322c:	str	r0, [r7, r6, lsl #2]
   43230:	beq	43340 <ReadNextCell+0x83c>
   43234:	ldr	r3, [r4]
   43238:	mov	r0, sl
   4323c:	mov	r1, #4
   43240:	mov	r2, #2
   43244:	bl	18d0 <fread@plt>
   43248:	cmp	r0, #0
   4324c:	beq	434a8 <ReadNextCell+0x9a4>
   43250:	mov	r5, r0
   43254:	ldr	r0, [r4, #20]
   43258:	cmp	r0, #0
   4325c:	beq	43270 <ReadNextCell+0x76c>
   43260:	mov	r0, sl
   43264:	bl	1c3c <Mat_uint32Swap>
   43268:	ldr	r0, [sp, #32]
   4326c:	bl	1c3c <Mat_uint32Swap>
   43270:	ldr	r8, [sp, #52]	; 0x34
   43274:	add	r9, r5, r9
   43278:	cmp	r8, #0
   4327c:	beq	43354 <ReadNextCell+0x850>
   43280:	ldr	r0, [sp, #48]	; 0x30
   43284:	cmp	r0, #14
   43288:	bne	434d8 <ReadNextCell+0x9d4>
   4328c:	ldr	r3, [r4]
   43290:	mov	r0, sl
   43294:	mov	r1, #4
   43298:	mov	r2, #6
   4329c:	bl	18d0 <fread@plt>
   432a0:	mov	r2, r0
   432a4:	ldr	r0, [r4, #20]
   432a8:	mov	r5, sl
   432ac:	cmp	r0, #0
   432b0:	beq	432ec <ReadNextCell+0x7e8>
   432b4:	mov	r0, r5
   432b8:	mov	sl, r2
   432bc:	bl	1c3c <Mat_uint32Swap>
   432c0:	ldr	r0, [sp, #32]
   432c4:	bl	1c3c <Mat_uint32Swap>
   432c8:	ldr	r0, [sp, #16]
   432cc:	bl	1c3c <Mat_uint32Swap>
   432d0:	ldr	r0, [sp, #20]
   432d4:	bl	1c3c <Mat_uint32Swap>
   432d8:	ldr	r0, [sp, #24]
   432dc:	bl	1c3c <Mat_uint32Swap>
   432e0:	ldr	r0, [sp, #28]
   432e4:	bl	1c3c <Mat_uint32Swap>
   432e8:	mov	r2, sl
   432ec:	ldr	r0, [sp, #48]	; 0x30
   432f0:	mov	sl, r5
   432f4:	cmp	r0, #6
   432f8:	bne	43370 <ReadNextCell+0x86c>
   432fc:	ldr	r0, [sp, #56]	; 0x38
   43300:	ldr	r1, [r7, r6, lsl #2]
   43304:	mov	r5, #0
   43308:	and	ip, r0, #2048	; 0x800
   4330c:	and	r3, r0, #1024	; 0x400
   43310:	and	r7, r0, #512	; 0x200
   43314:	uxtb	r0, r0
   43318:	cmp	r0, #18
   4331c:	movcs	r0, r5
   43320:	str	r0, [r1, #16]
   43324:	str	ip, [r1, #20]
   43328:	str	r3, [r1, #24]
   4332c:	str	r7, [r1, #28]
   43330:	cmp	r0, #5
   43334:	ldreq	r0, [sp, #60]	; 0x3c
   43338:	streq	r0, [r1]
   4333c:	b	43374 <ReadNextCell+0x870>
   43340:	ldr	r0, [pc, #480]	; 43528 <ReadNextCell+0xa24>
   43344:	mov	r1, r6
   43348:	add	r0, pc, r0
   4334c:	bl	19cc <Mat_Critical@plt>
   43350:	b	434a8 <ReadNextCell+0x9a4>
   43354:	ldr	r0, [r7, r6, lsl #2]
   43358:	ldr	r0, [r0, #52]	; 0x34
   4335c:	bl	181c <free@plt>
   43360:	ldr	r0, [r7, r6, lsl #2]
   43364:	mov	r1, #0
   43368:	str	r1, [r0, #52]	; 0x34
   4336c:	b	434a8 <ReadNextCell+0x9a4>
   43370:	ldr	r1, [r7, r6, lsl #2]
   43374:	add	r7, r2, r9
   43378:	ldr	r2, [sp, #64]	; 0x40
   4337c:	ldr	r3, [sp, #68]	; 0x44
   43380:	mov	r0, r4
   43384:	bl	43534 <ReadRankDims>
   43388:	ldr	r3, [r4]
   4338c:	mov	r5, r0
   43390:	mov	r0, sl
   43394:	mov	r1, #1
   43398:	mov	r2, #8
   4339c:	bl	18d0 <fread@plt>
   433a0:	mov	r9, r0
   433a4:	mov	r0, r4
   433a8:	sub	r4, r8, #32
   433ac:	ldr	r0, [r0, #20]
   433b0:	cmp	r0, #0
   433b4:	beq	433c8 <ReadNextCell+0x8c4>
   433b8:	mov	r0, sl
   433bc:	bl	1c3c <Mat_uint32Swap>
   433c0:	ldr	r0, [sp, #32]
   433c4:	bl	1c3c <Mat_uint32Swap>
   433c8:	add	r7, r7, r5
   433cc:	sub	r8, r4, r5
   433d0:	ldr	r5, [sp, #52]	; 0x34
   433d4:	cmp	r5, #0
   433d8:	beq	43420 <ReadNextCell+0x91c>
   433dc:	ldr	r0, [sp, #48]	; 0x30
   433e0:	cmp	r0, #1
   433e4:	bne	43420 <ReadNextCell+0x91c>
   433e8:	asr	r0, r5, #31
   433ec:	ldr	r4, [sp, #40]	; 0x28
   433f0:	mov	r2, #1
   433f4:	add	r0, r5, r0, lsr #29
   433f8:	bic	r0, r0, #7
   433fc:	sub	r0, r5, r0
   43400:	rsb	r1, r0, #8
   43404:	cmp	r0, #0
   43408:	ldr	r0, [r4]
   4340c:	addgt	r5, r5, r1
   43410:	mov	r1, r5
   43414:	bl	1a68 <fseek@plt>
   43418:	sub	r8, r8, r5
   4341c:	b	43424 <ReadNextCell+0x920>
   43420:	ldr	r4, [sp, #40]	; 0x28
   43424:	ldr	r0, [r4]
   43428:	add	r9, r7, r9
   4342c:	bl	1858 <ftell@plt>
   43430:	ldr	r7, [sp, #36]	; 0x24
   43434:	cmn	r0, #1
   43438:	ldr	r1, [r7, r6, lsl #2]
   4343c:	ldr	r2, [r1, #52]	; 0x34
   43440:	str	r0, [r2]
   43444:	beq	4349c <ReadNextCell+0x998>
   43448:	ldr	r0, [r1, #16]
   4344c:	cmp	r0, #2
   43450:	bne	43468 <ReadNextCell+0x964>
   43454:	mov	r0, r4
   43458:	bl	41d4c <ReadNextStructField>
   4345c:	ldr	r1, [r7, r6, lsl #2]
   43460:	add	r9, r0, r9
   43464:	ldr	r0, [r1, #16]
   43468:	cmp	r0, #1
   4346c:	bne	43480 <ReadNextCell+0x97c>
   43470:	mov	r0, r4
   43474:	bl	42b04 <ReadNextCell>
   43478:	ldr	r1, [r7, r6, lsl #2]
   4347c:	add	r9, r0, r9
   43480:	ldr	r0, [r1, #52]	; 0x34
   43484:	mov	r2, #0
   43488:	ldr	r0, [r0]
   4348c:	add	r1, r0, r8
   43490:	ldr	r0, [r4]
   43494:	bl	1a68 <fseek@plt>
   43498:	b	434a8 <ReadNextCell+0x9a4>
   4349c:	ldr	r0, [pc, #140]	; 43530 <ReadNextCell+0xa2c>
   434a0:	add	r0, pc, r0
   434a4:	bl	19cc <Mat_Critical@plt>
   434a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   434ac:	add	r6, r6, #1
   434b0:	cmp	r6, r0
   434b4:	bcc	43224 <ReadNextCell+0x720>
   434b8:	b	42b64 <ReadNextCell+0x60>
   434bc:	bl	1930 <Mat_VarFree@plt>
   434c0:	mov	r0, #0
   434c4:	mov	r1, r8
   434c8:	str	r0, [sl]
   434cc:	ldr	r0, [pc, #64]	; 43514 <ReadNextCell+0xa10>
   434d0:	add	r0, pc, r0
   434d4:	b	431dc <ReadNextCell+0x6d8>
   434d8:	ldr	r0, [r7, r6, lsl #2]
   434dc:	bl	1930 <Mat_VarFree@plt>
   434e0:	mov	r0, #0
   434e4:	str	r0, [r7, r6, lsl #2]
   434e8:	ldr	r0, [r4]
   434ec:	bl	1858 <ftell@plt>
   434f0:	mov	r2, r0
   434f4:	ldr	r0, [pc, #48]	; 4352c <ReadNextCell+0xa28>
   434f8:	mov	r1, r6
   434fc:	add	r0, pc, r0
   43500:	bl	19cc <Mat_Critical@plt>
   43504:	b	42b64 <ReadNextCell+0x60>
   43508:	.word	0x000071ec
   4350c:	.word	0x00006e85
   43510:	.word	0x00007353
   43514:	.word	0x00006bd9
   43518:	.word	0x0000728a
   4351c:	.word	0x00006bd0
   43520:	.word	0x00006e77
   43524:	.word	0x00006f93
   43528:	.word	0x00006d3b
   4352c:	.word	0x00006bdc
   43530:	.word	0x00006818

00043534 <ReadRankDims>:
   43534:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   43538:	add	fp, sp, #24
   4353c:	sub	sp, sp, #8
   43540:	mov	r7, #0
   43544:	cmp	r2, #5
   43548:	bne	4364c <ReadRankDims+0x118>
   4354c:	mov	r9, r0
   43550:	lsr	r5, r3, #2
   43554:	bic	r0, r3, #3
   43558:	mov	r4, r1
   4355c:	str	r5, [r1, #4]
   43560:	bl	18e8 <malloc@plt>
   43564:	cmp	r0, #0
   43568:	str	r0, [r4, #32]
   4356c:	beq	43608 <ReadRankDims+0xd4>
   43570:	cmp	r5, #0
   43574:	beq	43620 <ReadRankDims+0xec>
   43578:	mov	r6, #0
   4357c:	add	r8, sp, #4
   43580:	mov	r5, #0
   43584:	ldr	r3, [r9]
   43588:	mov	r0, r8
   4358c:	mov	r1, #4
   43590:	mov	r2, #1
   43594:	bl	18d0 <fread@plt>
   43598:	cmp	r0, #1
   4359c:	bne	43628 <ReadRankDims+0xf4>
   435a0:	ldr	r0, [r9, #20]
   435a4:	cmp	r0, #0
   435a8:	beq	435b8 <ReadRankDims+0x84>
   435ac:	mov	r0, r8
   435b0:	bl	1c3c <Mat_uint32Swap>
   435b4:	b	435bc <ReadRankDims+0x88>
   435b8:	ldr	r0, [sp, #4]
   435bc:	ldr	r1, [r4, #32]
   435c0:	add	r7, r6, #4
   435c4:	add	r5, r5, #1
   435c8:	str	r0, [r1, r6]
   435cc:	mov	r6, r7
   435d0:	ldr	r0, [r4, #4]
   435d4:	cmp	r5, r0
   435d8:	blt	43584 <ReadRankDims+0x50>
   435dc:	tst	r0, #1
   435e0:	beq	4364c <ReadRankDims+0x118>
   435e4:	ldr	r3, [r9]
   435e8:	add	r0, sp, #4
   435ec:	mov	r1, #4
   435f0:	mov	r2, #1
   435f4:	bl	18d0 <fread@plt>
   435f8:	cmp	r0, #1
   435fc:	bne	43658 <ReadRankDims+0x124>
   43600:	add	r7, r7, #4
   43604:	b	4364c <ReadRankDims+0x118>
   43608:	mov	r7, #0
   4360c:	str	r7, [r4, #4]
   43610:	ldr	r0, [pc, #84]	; 4366c <ReadRankDims+0x138>
   43614:	add	r0, pc, r0
   43618:	bl	19cc <Mat_Critical@plt>
   4361c:	b	4364c <ReadRankDims+0x118>
   43620:	mov	r7, #0
   43624:	b	4364c <ReadRankDims+0x118>
   43628:	ldr	r0, [r4, #32]
   4362c:	bl	181c <free@plt>
   43630:	mov	r0, #0
   43634:	str	r0, [r4, #4]
   43638:	str	r0, [r4, #32]
   4363c:	ldr	r0, [pc, #36]	; 43668 <ReadRankDims+0x134>
   43640:	add	r0, pc, r0
   43644:	bl	19cc <Mat_Critical@plt>
   43648:	mov	r7, r6
   4364c:	mov	r0, r7
   43650:	sub	sp, fp, #24
   43654:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   43658:	ldr	r0, [pc, #4]	; 43664 <ReadRankDims+0x130>
   4365c:	add	r0, pc, r0
   43660:	b	43618 <ReadRankDims+0xe4>
   43664:	.word	0x000068e8
   43668:	.word	0x00006904
   4366c:	.word	0x00006481

00043670 <WriteData>:
   43670:	push	{r4, r5, r6, r7, fp, lr}
   43674:	add	fp, sp, #16
   43678:	sub	sp, sp, #8
   4367c:	mov	r6, r0
   43680:	mov	r0, #0
   43684:	str	r3, [sp, #4]
   43688:	cmp	r6, #0
   4368c:	str	r0, [sp]
   43690:	beq	4370c <WriteData+0x9c>
   43694:	mov	r5, r1
   43698:	ldr	r1, [r6]
   4369c:	cmp	r1, #0
   436a0:	beq	4370c <WriteData+0x9c>
   436a4:	mov	r0, r3
   436a8:	mov	r4, r2
   436ac:	bl	193c <Mat_SizeOf@plt>
   436b0:	mov	r7, r0
   436b4:	mul	r0, r0, r4
   436b8:	mov	r1, #4
   436bc:	mov	r2, #1
   436c0:	str	r0, [sp]
   436c4:	add	r0, sp, #4
   436c8:	ldr	r3, [r6]
   436cc:	bl	18c4 <fwrite@plt>
   436d0:	ldr	r3, [r6]
   436d4:	mov	r0, sp
   436d8:	mov	r1, #4
   436dc:	mov	r2, #1
   436e0:	bl	18c4 <fwrite@plt>
   436e4:	cmp	r5, #0
   436e8:	beq	43708 <WriteData+0x98>
   436ec:	cmp	r4, #1
   436f0:	blt	43708 <WriteData+0x98>
   436f4:	ldr	r3, [r6]
   436f8:	mov	r0, r5
   436fc:	mov	r1, r7
   43700:	mov	r2, r4
   43704:	bl	18c4 <fwrite@plt>
   43708:	ldr	r0, [sp]
   4370c:	sub	sp, fp, #16
   43710:	pop	{r4, r5, r6, r7, fp, pc}

00043714 <GetTypeBufSize>:
   43714:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   43718:	add	fp, sp, #28
   4371c:	sub	sp, sp, #20
   43720:	mov	r5, r0
   43724:	mov	r0, #1
   43728:	add	r1, sp, #12
   4372c:	str	r0, [sp, #12]
   43730:	mov	r0, r5
   43734:	bl	45294 <SafeMulDims>
   43738:	ldr	r9, [r5, #4]
   4373c:	ldr	r0, [r5, #16]
   43740:	mov	sl, #12
   43744:	tst	r9, #1
   43748:	sub	r0, r0, #1
   4374c:	movweq	sl, #8
   43750:	cmp	r0, #4
   43754:	add	r4, sl, r9, lsl #2
   43758:	bhi	438cc <GetTypeBufSize+0x1b8>
   4375c:	add	r1, pc, #4
   43760:	ldr	r0, [r1, r0, lsl #2]
   43764:	add	pc, r1, r0
   43768:	.word	0x00000014
   4376c:	.word	0x0000007c
   43770:	.word	0x00000164
   43774:	.word	0x00000170
   43778:	.word	0x000001b8
   4377c:	ldr	r0, [r5]
   43780:	cmp	r0, #0
   43784:	ldrne	r2, [r5, #12]
   43788:	cmpne	r2, #0
   4378c:	beq	439bc <GetTypeBufSize+0x2a8>
   43790:	ldr	r5, [r5, #40]	; 0x28
   43794:	udiv	r1, r0, r2
   43798:	str	r1, [sp, #12]
   4379c:	cmp	r5, #0
   437a0:	beq	439bc <GetTypeBufSize+0x2a8>
   437a4:	cmp	r2, r0
   437a8:	bhi	439bc <GetTypeBufSize+0x2a8>
   437ac:	mov	r6, #0
   437b0:	ldr	r0, [r5, r6, lsl #2]
   437b4:	mov	r2, #0
   437b8:	cmp	r0, #0
   437bc:	beq	437cc <GetTypeBufSize+0xb8>
   437c0:	bl	43714 <GetTypeBufSize>
   437c4:	ldr	r1, [sp, #12]
   437c8:	add	r2, r0, #24
   437cc:	add	r0, r4, r2
   437d0:	add	r6, r6, #1
   437d4:	add	r4, r0, #8
   437d8:	cmp	r6, r1
   437dc:	bcc	437b0 <GetTypeBufSize+0x9c>
   437e0:	b	439bc <GetTypeBufSize+0x2a8>
   437e4:	ldr	r0, [r5, #40]	; 0x28
   437e8:	mov	r4, #0
   437ec:	mov	r7, #0
   437f0:	str	r0, [sp, #4]
   437f4:	ldr	r0, [r5, #52]	; 0x34
   437f8:	ldr	r8, [r0, #4]
   437fc:	cmp	r8, #0
   43800:	beq	43834 <GetTypeBufSize+0x120>
   43804:	ldr	r6, [r0, #8]
   43808:	mov	r7, #0
   4380c:	mov	r5, r8
   43810:	ldr	r0, [r6]
   43814:	cmp	r0, #0
   43818:	beq	43828 <GetTypeBufSize+0x114>
   4381c:	bl	196c <strlen@plt>
   43820:	cmp	r0, r7
   43824:	movhi	r7, r0
   43828:	subs	r5, r5, #1
   4382c:	add	r6, r6, #4
   43830:	bne	43810 <GetTypeBufSize+0xfc>
   43834:	add	r0, r7, #1
   43838:	mul	r0, r8, r0
   4383c:	add	r1, r0, r4
   43840:	add	r4, r4, r8
   43844:	tst	r1, #7
   43848:	bne	4383c <GetTypeBufSize+0x128>
   4384c:	ldr	r6, [sp, #4]
   43850:	mla	r0, r7, r8, sl
   43854:	add	r0, r0, r9, lsl #2
   43858:	add	r0, r0, r4
   4385c:	add	r4, r0, #16
   43860:	cmp	r6, #0
   43864:	cmpne	r8, #0
   43868:	beq	439bc <GetTypeBufSize+0x2a8>
   4386c:	ldr	r1, [sp, #12]
   43870:	mov	r0, #1
   43874:	mov	r2, r8
   43878:	str	r0, [sp, #8]
   4387c:	add	r0, sp, #8
   43880:	bl	452f0 <SafeMul>
   43884:	ldr	r1, [sp, #8]
   43888:	cmp	r1, #0
   4388c:	beq	439bc <GetTypeBufSize+0x2a8>
   43890:	mov	r5, #0
   43894:	ldr	r0, [r6, r5, lsl #2]
   43898:	cmp	r0, #0
   4389c:	beq	438b0 <GetTypeBufSize+0x19c>
   438a0:	bl	43714 <GetTypeBufSize>
   438a4:	ldr	r1, [sp, #8]
   438a8:	add	r0, r0, #24
   438ac:	b	438b4 <GetTypeBufSize+0x1a0>
   438b0:	mov	r0, #48	; 0x30
   438b4:	add	r0, r4, r0
   438b8:	add	r5, r5, #1
   438bc:	add	r4, r0, #8
   438c0:	cmp	r5, r1
   438c4:	bcc	43894 <GetTypeBufSize+0x180>
   438c8:	b	439bc <GetTypeBufSize+0x2a8>
   438cc:	ldr	r0, [r5, #8]
   438d0:	ldr	r6, [sp, #12]
   438d4:	b	438ec <GetTypeBufSize+0x1d8>
   438d8:	ldr	r0, [r5, #8]
   438dc:	ldr	r6, [sp, #12]
   438e0:	sub	r1, r0, #1
   438e4:	cmp	r1, #1
   438e8:	movls	r0, #4
   438ec:	bl	193c <Mat_SizeOf@plt>
   438f0:	mov	r2, r0
   438f4:	add	r0, sp, #16
   438f8:	mov	r1, r6
   438fc:	bl	452f0 <SafeMul>
   43900:	ldr	r0, [sp, #16]
   43904:	ands	r1, r0, #7
   43908:	addne	r0, r0, #8
   4390c:	subne	r0, r0, r1
   43910:	strne	r0, [sp, #16]
   43914:	add	r0, r0, #8
   43918:	add	r4, r0, r4
   4391c:	b	439b0 <GetTypeBufSize+0x29c>
   43920:	ldr	r6, [r5, #40]	; 0x28
   43924:	add	r0, sp, #16
   43928:	mov	r2, #4
   4392c:	ldr	r1, [r6, #8]
   43930:	bl	452f0 <SafeMul>
   43934:	ldr	r8, [sp, #16]
   43938:	mov	r2, #4
   4393c:	ands	r0, r8, #7
   43940:	addne	r1, r8, #8
   43944:	subne	r8, r1, r0
   43948:	add	r0, sp, #16
   4394c:	strne	r8, [sp, #16]
   43950:	ldr	r1, [r6, #16]
   43954:	bl	452f0 <SafeMul>
   43958:	ldr	r7, [sp, #16]
   4395c:	ands	r0, r7, #7
   43960:	addne	r1, r7, #8
   43964:	subne	r7, r1, r0
   43968:	strne	r7, [sp, #16]
   4396c:	ldr	r0, [r5, #8]
   43970:	ldr	r6, [r6, #20]
   43974:	bl	193c <Mat_SizeOf@plt>
   43978:	mov	r2, r0
   4397c:	add	r0, sp, #16
   43980:	mov	r1, r6
   43984:	bl	452f0 <SafeMul>
   43988:	ldr	r0, [sp, #16]
   4398c:	ands	r1, r0, #7
   43990:	addne	r0, r0, #8
   43994:	subne	r0, r0, r1
   43998:	add	r1, r4, r8
   4399c:	strne	r0, [sp, #16]
   439a0:	add	r1, r1, r7
   439a4:	add	r0, r0, #8
   439a8:	add	r1, r1, r0
   439ac:	add	r4, r1, #16
   439b0:	ldr	r1, [r5, #20]
   439b4:	cmp	r1, #0
   439b8:	addne	r4, r4, r0
   439bc:	mov	r0, r4
   439c0:	sub	sp, fp, #28
   439c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000439c8 <WriteCompressedData>:
   439c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   439cc:	add	fp, sp, #28
   439d0:	sub	sp, sp, #28
   439d4:	sub	sp, sp, #1024	; 0x400
   439d8:	mov	r6, #0
   439dc:	cmp	r0, #0
   439e0:	str	r6, [sp, #12]
   439e4:	str	r6, [sp, #8]
   439e8:	beq	43b3c <WriteCompressedData+0x174>
   439ec:	mov	r5, r0
   439f0:	ldr	r0, [r0]
   439f4:	cmp	r0, #0
   439f8:	beq	43b3c <WriteCompressedData+0x174>
   439fc:	ldr	r6, [fp, #8]
   43a00:	mov	r9, r3
   43a04:	mov	r8, r2
   43a08:	mov	r4, r1
   43a0c:	mov	r0, r6
   43a10:	bl	193c <Mat_SizeOf@plt>
   43a14:	mul	r0, r0, r9
   43a18:	str	r6, [fp, #-40]	; 0xffffffd8
   43a1c:	sub	r1, fp, #40	; 0x28
   43a20:	mov	r6, #0
   43a24:	mov	sl, #1024	; 0x400
   43a28:	add	r7, sp, #16
   43a2c:	str	r0, [fp, #-36]	; 0xffffffdc
   43a30:	str	r0, [sp, #4]
   43a34:	mov	r0, #8
   43a38:	str	r1, [r4]
   43a3c:	str	r0, [r4, #4]
   43a40:	mov	r0, r4
   43a44:	mov	r1, #0
   43a48:	str	r7, [r4, #12]
   43a4c:	str	sl, [r4, #16]
   43a50:	bl	18ac <deflate@plt>
   43a54:	ldr	r0, [r4, #16]
   43a58:	ldr	r3, [r5]
   43a5c:	mov	r1, #1
   43a60:	rsb	r2, r0, #1024	; 0x400
   43a64:	mov	r0, r7
   43a68:	bl	18c4 <fwrite@plt>
   43a6c:	add	r6, r0, r6
   43a70:	ldr	r0, [r4, #16]
   43a74:	cmp	r0, #0
   43a78:	beq	43a40 <WriteCompressedData+0x78>
   43a7c:	cmp	r8, #0
   43a80:	beq	43b3c <WriteCompressedData+0x174>
   43a84:	cmp	r9, #1
   43a88:	blt	43b3c <WriteCompressedData+0x174>
   43a8c:	ldr	r9, [sp, #4]
   43a90:	str	r8, [r4]
   43a94:	mov	r8, #1024	; 0x400
   43a98:	str	r9, [r4, #4]
   43a9c:	mov	r0, r4
   43aa0:	mov	r1, #0
   43aa4:	str	r7, [r4, #12]
   43aa8:	str	r8, [r4, #16]
   43aac:	bl	18ac <deflate@plt>
   43ab0:	ldr	r0, [r4, #16]
   43ab4:	ldr	r3, [r5]
   43ab8:	mov	r1, #1
   43abc:	rsb	r2, r0, #1024	; 0x400
   43ac0:	mov	r0, r7
   43ac4:	bl	18c4 <fwrite@plt>
   43ac8:	add	r6, r0, r6
   43acc:	ldr	r0, [r4, #16]
   43ad0:	cmp	r0, #0
   43ad4:	beq	43a9c <WriteCompressedData+0xd4>
   43ad8:	asr	r0, r9, #31
   43adc:	add	r0, r9, r0, lsr #29
   43ae0:	bic	r0, r0, #7
   43ae4:	subs	r0, r9, r0
   43ae8:	beq	43b3c <WriteCompressedData+0x174>
   43aec:	add	r1, sp, #8
   43af0:	mov	r8, #1024	; 0x400
   43af4:	rsb	r0, r0, #8
   43af8:	str	r1, [r4]
   43afc:	str	r0, [r4, #4]
   43b00:	mov	r0, r4
   43b04:	mov	r1, #0
   43b08:	str	r7, [r4, #12]
   43b0c:	str	r8, [r4, #16]
   43b10:	bl	18ac <deflate@plt>
   43b14:	ldr	r0, [r4, #16]
   43b18:	ldr	r3, [r5]
   43b1c:	mov	r1, #1
   43b20:	rsb	r2, r0, #1024	; 0x400
   43b24:	mov	r0, r7
   43b28:	bl	18c4 <fwrite@plt>
   43b2c:	add	r6, r0, r6
   43b30:	ldr	r0, [r4, #16]
   43b34:	cmp	r0, #0
   43b38:	beq	43b00 <WriteCompressedData+0x138>
   43b3c:	mov	r0, r6
   43b40:	sub	sp, fp, #28
   43b44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00043b48 <WriteCompressedTypeArrayFlags>:
   43b48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   43b4c:	add	fp, sp, #28
   43b50:	sub	sp, sp, #4
   43b54:	sub	sp, sp, #4096	; 0x1000
   43b58:	mov	r8, sp
   43b5c:	mov	r4, r2
   43b60:	mov	r9, r1
   43b64:	mov	r6, r0
   43b68:	mov	r1, #0
   43b6c:	mov	r2, #2048	; 0x800
   43b70:	mov	r7, #0
   43b74:	mov	r0, r8
   43b78:	bl	19a8 <memset@plt>
   43b7c:	ldr	r2, [r9, #16]
   43b80:	cmp	r2, #0
   43b84:	beq	43d14 <WriteCompressedTypeArrayFlags+0x1cc>
   43b88:	add	r7, r9, #20
   43b8c:	uxtb	r1, r2
   43b90:	ldm	r7, {r0, r3, r7}
   43b94:	cmp	r0, #0
   43b98:	mov	r0, #0
   43b9c:	orrne	r1, r1, #2048	; 0x800
   43ba0:	cmp	r3, #0
   43ba4:	mov	r3, #8
   43ba8:	orrne	r1, r1, #1024	; 0x400
   43bac:	cmp	r7, #0
   43bb0:	orrne	r1, r1, #512	; 0x200
   43bb4:	cmp	r2, #5
   43bb8:	mov	r2, #0
   43bbc:	ldreq	r2, [r9, #40]	; 0x28
   43bc0:	ldreq	r2, [r2]
   43bc4:	str	r3, [sp, #4]
   43bc8:	mov	r3, #6
   43bcc:	str	r3, [sp]
   43bd0:	str	r1, [sp, #8]
   43bd4:	str	r2, [sp, #12]
   43bd8:	mov	r2, #5
   43bdc:	ldr	r1, [r9, #4]
   43be0:	str	r2, [sp, #16]
   43be4:	lsl	r2, r1, #2
   43be8:	cmp	r1, #1
   43bec:	str	r2, [sp, #20]
   43bf0:	blt	43c14 <WriteCompressedTypeArrayFlags+0xcc>
   43bf4:	ldr	r2, [r9, #32]
   43bf8:	add	r0, r8, #24
   43bfc:	mov	r3, r1
   43c00:	ldr	r7, [r2], #4
   43c04:	subs	r3, r3, #1
   43c08:	str	r7, [r0], #4
   43c0c:	bne	43c00 <WriteCompressedTypeArrayFlags+0xb8>
   43c10:	mov	r0, r1
   43c14:	tst	r1, #1
   43c18:	mov	r5, #0
   43c1c:	mov	sl, #2048	; 0x800
   43c20:	add	r7, sp, #2048	; 0x800
   43c24:	addne	r1, r8, r0, lsl #2
   43c28:	movne	r2, #0
   43c2c:	addne	r0, r0, #1
   43c30:	strne	r2, [r1, #24]
   43c34:	mov	r1, #24
   43c38:	str	r8, [r4]
   43c3c:	add	r0, r1, r0, lsl #2
   43c40:	str	r0, [r4, #4]
   43c44:	mov	r0, r4
   43c48:	mov	r1, #0
   43c4c:	str	r7, [r4, #12]
   43c50:	str	sl, [r4, #16]
   43c54:	bl	18ac <deflate@plt>
   43c58:	ldr	r0, [r4, #16]
   43c5c:	ldr	r3, [r6]
   43c60:	mov	r1, #1
   43c64:	rsb	r2, r0, #2048	; 0x800
   43c68:	mov	r0, r7
   43c6c:	bl	18c4 <fwrite@plt>
   43c70:	add	r5, r0, r5
   43c74:	ldr	r0, [r4, #16]
   43c78:	cmp	r0, #0
   43c7c:	beq	43c44 <WriteCompressedTypeArrayFlags+0xfc>
   43c80:	mov	r0, #0
   43c84:	str	r0, [sp, #4]
   43c88:	mov	r0, #1
   43c8c:	str	r0, [sp]
   43c90:	str	r8, [r4]
   43c94:	mov	r0, #8
   43c98:	mov	r8, #2048	; 0x800
   43c9c:	str	r0, [r4, #4]
   43ca0:	mov	r0, r4
   43ca4:	mov	r1, #0
   43ca8:	str	r7, [r4, #12]
   43cac:	str	r8, [r4, #16]
   43cb0:	bl	18ac <deflate@plt>
   43cb4:	ldr	r0, [r4, #16]
   43cb8:	ldr	r3, [r6]
   43cbc:	mov	r1, #1
   43cc0:	rsb	r2, r0, #2048	; 0x800
   43cc4:	mov	r0, r7
   43cc8:	bl	18c4 <fwrite@plt>
   43ccc:	add	r5, r0, r5
   43cd0:	ldr	r0, [r4, #16]
   43cd4:	cmp	r0, #0
   43cd8:	beq	43ca0 <WriteCompressedTypeArrayFlags+0x158>
   43cdc:	ldr	r0, [r6]
   43ce0:	bl	1858 <ftell@plt>
   43ce4:	ldr	r1, [r9, #52]	; 0x34
   43ce8:	cmn	r0, #1
   43cec:	str	r0, [r1]
   43cf0:	bne	43d00 <WriteCompressedTypeArrayFlags+0x1b8>
   43cf4:	ldr	r0, [pc, #36]	; 43d20 <WriteCompressedTypeArrayFlags+0x1d8>
   43cf8:	add	r0, pc, r0
   43cfc:	bl	19cc <Mat_Critical@plt>
   43d00:	mov	r0, r6
   43d04:	mov	r1, r9
   43d08:	mov	r2, r4
   43d0c:	bl	40bd0 <WriteCompressedType>
   43d10:	add	r7, r0, r5
   43d14:	mov	r0, r7
   43d18:	sub	sp, fp, #28
   43d1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   43d20:	.word	0x00005fc0
   43d24:	.word	0x00000000

00043d28 <Mat_Create4>:
   43d28:	push	{r4, r5, r6, r7, fp, lr}
   43d2c:	add	fp, sp, #16
   43d30:	ldr	r1, [pc, #152]	; 43dd0 <Mat_Create4+0xa8>
   43d34:	mov	r5, r0
   43d38:	add	r1, pc, r1
   43d3c:	bl	17f8 <fopen@plt>
   43d40:	mov	r4, #0
   43d44:	cmp	r0, #0
   43d48:	beq	43dc8 <Mat_Create4+0xa0>
   43d4c:	mov	r7, r0
   43d50:	mov	r0, #44	; 0x2c
   43d54:	bl	18e8 <malloc@plt>
   43d58:	cmp	r0, #0
   43d5c:	beq	43db4 <Mat_Create4+0x8c>
   43d60:	mov	r4, #0
   43d64:	str	r7, [r0]
   43d68:	mov	r6, r0
   43d6c:	mov	r1, r5
   43d70:	str	r4, [r0, #4]
   43d74:	str	r4, [r0, #8]
   43d78:	ldr	r0, [pc, #88]	; 43dd8 <Mat_Create4+0xb0>
   43d7c:	add	r0, pc, r0
   43d80:	bl	1de4 <strdup_printf>
   43d84:	str	r0, [r6, #12]
   43d88:	mov	r1, #16
   43d8c:	vmov.i32	q8, #0	; 0x00000000
   43d90:	add	r0, r6, #20
   43d94:	str	r1, [r6, #16]
   43d98:	vst1.32	{d16-d17}, [r0]
   43d9c:	mov	r0, r6
   43da0:	str	r4, [r6, #36]	; 0x24
   43da4:	str	r4, [r6, #40]	; 0x28
   43da8:	bl	199c <Mat_Rewind@plt>
   43dac:	mov	r4, r6
   43db0:	b	43dc8 <Mat_Create4+0xa0>
   43db4:	mov	r0, r7
   43db8:	bl	19e4 <fclose@plt>
   43dbc:	ldr	r0, [pc, #16]	; 43dd4 <Mat_Create4+0xac>
   43dc0:	add	r0, pc, r0
   43dc4:	bl	19cc <Mat_Critical@plt>
   43dc8:	mov	r0, r4
   43dcc:	pop	{r4, r5, r6, r7, fp, pc}
   43dd0:	.word	0x00005fa1
   43dd4:	.word	0x00006348
   43dd8:	.word	0x00006887

00043ddc <Mat_VarWrite4>:
   43ddc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   43de0:	add	fp, sp, #28
   43de4:	sub	sp, sp, #4
   43de8:	vpush	{d8}
   43dec:	sub	sp, sp, #40	; 0x28
   43df0:	cmp	r0, #0
   43df4:	mvn	r5, #0
   43df8:	movne	r6, r1
   43dfc:	cmpne	r1, #0
   43e00:	bne	43e18 <Mat_VarWrite4+0x3c>
   43e04:	mov	r0, r5
   43e08:	sub	sp, fp, #40	; 0x28
   43e0c:	vpop	{d8}
   43e10:	add	sp, sp, #4
   43e14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   43e18:	mov	r9, r0
   43e1c:	ldr	r0, [r6, #36]	; 0x24
   43e20:	cmp	r0, #0
   43e24:	beq	43e04 <Mat_VarWrite4+0x28>
   43e28:	ldr	r1, [r6, #4]
   43e2c:	cmp	r1, #2
   43e30:	bne	43e04 <Mat_VarWrite4+0x28>
   43e34:	ldr	r1, [r6, #8]
   43e38:	mov	r5, #2
   43e3c:	sub	r1, r1, #2
   43e40:	cmp	r1, #7
   43e44:	bhi	43e04 <Mat_VarWrite4+0x28>
   43e48:	uxtb	r2, r1
   43e4c:	mov	r3, #175	; 0xaf
   43e50:	mov	r7, #1
   43e54:	tst	r7, r3, lsr r2
   43e58:	beq	43e04 <Mat_VarWrite4+0x28>
   43e5c:	ldr	r2, [pc, #1240]	; 4433c <Mat_VarWrite4+0x560>
   43e60:	add	r2, pc, r2
   43e64:	ldr	r8, [r2, r1, lsl #2]
   43e68:	str	r8, [sp, #20]
   43e6c:	bl	196c <strlen@plt>
   43e70:	add	r0, r0, #1
   43e74:	mov	r1, #0
   43e78:	mov	r2, #2
   43e7c:	mov	r5, #0
   43e80:	str	r0, [sp, #36]	; 0x24
   43e84:	ldr	r0, [r9]
   43e88:	bl	1a68 <fseek@plt>
   43e8c:	ldr	r0, [r6, #16]
   43e90:	cmp	r0, #12
   43e94:	bhi	43e04 <Mat_VarWrite4+0x28>
   43e98:	mov	r7, #1
   43e9c:	mov	r1, #7872	; 0x1ec0
   43ea0:	tst	r1, r7, lsl r0
   43ea4:	beq	43f68 <Mat_VarWrite4+0x18c>
   43ea8:	ldr	r1, [r6, #4]
   43eac:	ldr	r0, [r6, #32]
   43eb0:	cmp	r1, #1
   43eb4:	blt	43ed4 <Mat_VarWrite4+0xf8>
   43eb8:	mov	r2, #0
   43ebc:	mov	r7, #1
   43ec0:	ldr	r3, [r0, r2, lsl #2]
   43ec4:	add	r2, r2, #1
   43ec8:	cmp	r2, r1
   43ecc:	mul	r7, r3, r7
   43ed0:	blt	43ec0 <Mat_VarWrite4+0xe4>
   43ed4:	ldr	r1, [r0]
   43ed8:	ldr	r0, [r0, #4]
   43edc:	mov	r2, #1
   43ee0:	str	r1, [sp, #24]
   43ee4:	str	r0, [sp, #28]
   43ee8:	mov	r1, #20
   43eec:	ldr	r0, [r6, #20]
   43ef0:	cmp	r0, #0
   43ef4:	movwne	r0, #1
   43ef8:	str	r0, [sp, #32]
   43efc:	add	r0, sp, #20
   43f00:	ldr	r3, [r9]
   43f04:	bl	18c4 <fwrite@plt>
   43f08:	ldr	r0, [r6, #36]	; 0x24
   43f0c:	ldr	r3, [r9]
   43f10:	ldr	r2, [sp, #36]	; 0x24
   43f14:	mov	r1, #1
   43f18:	bl	18c4 <fwrite@plt>
   43f1c:	ldr	r0, [r6, #20]
   43f20:	cmp	r0, #0
   43f24:	beq	43f50 <Mat_VarWrite4+0x174>
   43f28:	ldr	r4, [r6, #40]	; 0x28
   43f2c:	ldr	r3, [r9]
   43f30:	ldr	r1, [r6, #12]
   43f34:	mov	r2, r7
   43f38:	ldr	r0, [r4]
   43f3c:	bl	18c4 <fwrite@plt>
   43f40:	ldr	r0, [r4, #4]
   43f44:	ldr	r1, [r6, #12]
   43f48:	ldr	r3, [r9]
   43f4c:	b	43f5c <Mat_VarWrite4+0x180>
   43f50:	ldr	r3, [r9]
   43f54:	ldr	r1, [r6, #12]
   43f58:	ldr	r0, [r6, #40]	; 0x28
   43f5c:	mov	r2, r7
   43f60:	bl	18c4 <fwrite@plt>
   43f64:	b	43e04 <Mat_VarWrite4+0x28>
   43f68:	cmp	r0, #4
   43f6c:	beq	43fac <Mat_VarWrite4+0x1d0>
   43f70:	cmp	r0, #5
   43f74:	bne	43e04 <Mat_VarWrite4+0x28>
   43f78:	ldr	r0, [r6, #8]
   43f7c:	bl	193c <Mat_SizeOf@plt>
   43f80:	ldr	r7, [r6, #40]	; 0x28
   43f84:	add	r1, r8, #2
   43f88:	str	r1, [sp, #20]
   43f8c:	ldr	r2, [r7, #16]
   43f90:	cmp	r2, #1
   43f94:	blt	43fb8 <Mat_VarWrite4+0x1dc>
   43f98:	ldr	r1, [r7, #12]
   43f9c:	add	r1, r1, r2, lsl #2
   43fa0:	ldr	r1, [r1, #-4]
   43fa4:	add	r1, r1, #1
   43fa8:	b	43fbc <Mat_VarWrite4+0x1e0>
   43fac:	orr	r0, r8, #1
   43fb0:	str	r0, [sp, #20]
   43fb4:	b	43ea8 <Mat_VarWrite4+0xcc>
   43fb8:	mov	r1, #1
   43fbc:	str	r1, [sp, #24]
   43fc0:	mov	sl, r0
   43fc4:	mov	r1, #4
   43fc8:	mov	r5, #0
   43fcc:	mov	r2, #1
   43fd0:	ldr	r0, [r6, #20]
   43fd4:	str	r5, [sp, #32]
   43fd8:	cmp	r0, #0
   43fdc:	add	r0, sp, #20
   43fe0:	movweq	r1, #3
   43fe4:	str	r1, [sp, #28]
   43fe8:	mov	r1, #20
   43fec:	ldr	r3, [r9]
   43ff0:	bl	18c4 <fwrite@plt>
   43ff4:	ldr	r0, [r6, #36]	; 0x24
   43ff8:	ldr	r3, [r9]
   43ffc:	ldr	r2, [sp, #36]	; 0x24
   44000:	mov	r1, #1
   44004:	bl	18c4 <fwrite@plt>
   44008:	ldr	r1, [r7, #16]
   4400c:	cmp	r1, #2
   44010:	blt	4408c <Mat_VarWrite4+0x2b0>
   44014:	ldr	r0, [r7, #12]
   44018:	add	r8, sp, #8
   4401c:	ldr	r4, [r0, r5, lsl #2]
   44020:	add	r5, r5, #1
   44024:	ldr	r2, [r0, r5, lsl #2]
   44028:	cmp	r4, r2
   4402c:	bge	44080 <Mat_VarWrite4+0x2a4>
   44030:	ldr	r1, [r7, #20]
   44034:	cmp	r4, r1
   44038:	bge	4407c <Mat_VarWrite4+0x2a0>
   4403c:	ldr	r0, [r7, #4]
   44040:	mov	r1, #8
   44044:	mov	r2, #1
   44048:	ldr	r0, [r0, r4, lsl #2]
   4404c:	add	r0, r0, #1
   44050:	vmov	s0, r0
   44054:	mov	r0, r8
   44058:	vcvt.f64.s32	d16, s0
   4405c:	vstr	d16, [sp, #8]
   44060:	ldr	r3, [r9]
   44064:	bl	18c4 <fwrite@plt>
   44068:	ldr	r0, [r7, #12]
   4406c:	add	r4, r4, #1
   44070:	ldr	r1, [r0, r5, lsl #2]
   44074:	cmp	r4, r1
   44078:	blt	44030 <Mat_VarWrite4+0x254>
   4407c:	ldr	r1, [r7, #16]
   44080:	sub	r2, r1, #1
   44084:	cmp	r5, r2
   44088:	blt	4401c <Mat_VarWrite4+0x240>
   4408c:	ldr	r0, [r6, #32]
   44090:	mov	r1, #8
   44094:	mov	r2, #1
   44098:	vldr	s0, [r0]
   4409c:	add	r0, sp, #8
   440a0:	vcvt.f64.u32	d16, s0
   440a4:	vstr	d16, [sp, #8]
   440a8:	ldr	r3, [r9]
   440ac:	bl	18c4 <fwrite@plt>
   440b0:	ldr	r1, [r7, #16]
   440b4:	cmp	r1, #2
   440b8:	blt	4412c <Mat_VarWrite4+0x350>
   440bc:	ldr	r0, [r7, #12]
   440c0:	mov	r5, #0
   440c4:	add	r8, sp, #8
   440c8:	ldr	r4, [r0, r5, lsl #2]
   440cc:	add	r5, r5, #1
   440d0:	ldr	r2, [r0, r5, lsl #2]
   440d4:	cmp	r4, r2
   440d8:	bge	44120 <Mat_VarWrite4+0x344>
   440dc:	vmov	s0, r5
   440e0:	vcvt.f64.s32	d8, s0
   440e4:	ldr	r1, [r7, #20]
   440e8:	cmp	r4, r1
   440ec:	bge	4411c <Mat_VarWrite4+0x340>
   440f0:	vstr	d8, [sp, #8]
   440f4:	mov	r0, r8
   440f8:	mov	r1, #8
   440fc:	mov	r2, #1
   44100:	ldr	r3, [r9]
   44104:	bl	18c4 <fwrite@plt>
   44108:	ldr	r0, [r7, #12]
   4410c:	add	r4, r4, #1
   44110:	ldr	r1, [r0, r5, lsl #2]
   44114:	cmp	r4, r1
   44118:	blt	440e4 <Mat_VarWrite4+0x308>
   4411c:	ldr	r1, [r7, #16]
   44120:	sub	r2, r1, #1
   44124:	cmp	r5, r2
   44128:	blt	440c8 <Mat_VarWrite4+0x2ec>
   4412c:	ldr	r0, [r6, #32]
   44130:	mov	r1, #8
   44134:	mov	r2, #1
   44138:	vldr	s0, [r0, #4]
   4413c:	add	r0, sp, #8
   44140:	vcvt.f64.u32	d16, s0
   44144:	vstr	d16, [sp, #8]
   44148:	ldr	r3, [r9]
   4414c:	bl	18c4 <fwrite@plt>
   44150:	mov	r0, #0
   44154:	str	r0, [sp, #12]
   44158:	str	r0, [sp, #8]
   4415c:	ldr	r0, [r6, #20]
   44160:	cmp	r0, #0
   44164:	beq	44298 <Mat_VarWrite4+0x4bc>
   44168:	ldr	r0, [r7, #24]
   4416c:	ldr	r1, [r7, #16]
   44170:	mov	r4, sl
   44174:	ldr	r2, [r0, #4]
   44178:	cmp	r1, #2
   4417c:	str	r2, [sp, #4]
   44180:	blt	441fc <Mat_VarWrite4+0x420>
   44184:	ldr	sl, [r0]
   44188:	ldr	r0, [r7, #12]
   4418c:	mov	r5, #0
   44190:	ldr	r8, [r0, r5, lsl #2]
   44194:	add	r5, r5, #1
   44198:	ldr	r2, [r0, r5, lsl #2]
   4419c:	cmp	r8, r2
   441a0:	bge	441f0 <Mat_VarWrite4+0x414>
   441a4:	ldr	r1, [r7, #20]
   441a8:	cmp	r8, r1
   441ac:	bge	441ec <Mat_VarWrite4+0x410>
   441b0:	mla	r6, r4, r8, sl
   441b4:	ldr	r3, [r9]
   441b8:	mov	r0, r6
   441bc:	mov	r1, r4
   441c0:	mov	r2, #1
   441c4:	bl	18c4 <fwrite@plt>
   441c8:	ldr	r0, [r7, #12]
   441cc:	add	r8, r8, #1
   441d0:	ldr	r1, [r0, r5, lsl #2]
   441d4:	cmp	r8, r1
   441d8:	bge	441ec <Mat_VarWrite4+0x410>
   441dc:	ldr	r1, [r7, #20]
   441e0:	add	r6, r6, r4
   441e4:	cmp	r8, r1
   441e8:	blt	441b4 <Mat_VarWrite4+0x3d8>
   441ec:	ldr	r1, [r7, #16]
   441f0:	sub	r2, r1, #1
   441f4:	cmp	r5, r2
   441f8:	blt	44190 <Mat_VarWrite4+0x3b4>
   441fc:	ldr	r3, [r9]
   44200:	add	r0, sp, #8
   44204:	mov	r1, r4
   44208:	mov	r2, #1
   4420c:	bl	18c4 <fwrite@plt>
   44210:	ldr	r1, [r7, #16]
   44214:	ldr	sl, [sp, #4]
   44218:	cmp	r1, #2
   4421c:	blt	44320 <Mat_VarWrite4+0x544>
   44220:	ldr	r0, [r7, #12]
   44224:	mov	r8, #0
   44228:	ldr	r5, [r0, r8, lsl #2]
   4422c:	add	r8, r8, #1
   44230:	ldr	r2, [r0, r8, lsl #2]
   44234:	cmp	r5, r2
   44238:	bge	44288 <Mat_VarWrite4+0x4ac>
   4423c:	ldr	r1, [r7, #20]
   44240:	cmp	r5, r1
   44244:	bge	44284 <Mat_VarWrite4+0x4a8>
   44248:	mla	r6, r4, r5, sl
   4424c:	ldr	r3, [r9]
   44250:	mov	r0, r6
   44254:	mov	r1, r4
   44258:	mov	r2, #1
   4425c:	bl	18c4 <fwrite@plt>
   44260:	ldr	r0, [r7, #12]
   44264:	add	r5, r5, #1
   44268:	ldr	r1, [r0, r8, lsl #2]
   4426c:	cmp	r5, r1
   44270:	bge	44284 <Mat_VarWrite4+0x4a8>
   44274:	ldr	r1, [r7, #20]
   44278:	add	r6, r6, r4
   4427c:	cmp	r5, r1
   44280:	blt	4424c <Mat_VarWrite4+0x470>
   44284:	ldr	r1, [r7, #16]
   44288:	sub	r2, r1, #1
   4428c:	cmp	r8, r2
   44290:	blt	44228 <Mat_VarWrite4+0x44c>
   44294:	b	44320 <Mat_VarWrite4+0x544>
   44298:	ldr	r1, [r7, #16]
   4429c:	mov	r4, sl
   442a0:	cmp	r1, #2
   442a4:	blt	44320 <Mat_VarWrite4+0x544>
   442a8:	ldr	r8, [r7, #24]
   442ac:	ldr	r0, [r7, #12]
   442b0:	mov	sl, #0
   442b4:	ldr	r5, [r0, sl, lsl #2]
   442b8:	add	sl, sl, #1
   442bc:	ldr	r2, [r0, sl, lsl #2]
   442c0:	cmp	r5, r2
   442c4:	bge	44314 <Mat_VarWrite4+0x538>
   442c8:	ldr	r1, [r7, #20]
   442cc:	cmp	r5, r1
   442d0:	bge	44310 <Mat_VarWrite4+0x534>
   442d4:	mla	r6, r4, r5, r8
   442d8:	ldr	r3, [r9]
   442dc:	mov	r0, r6
   442e0:	mov	r1, r4
   442e4:	mov	r2, #1
   442e8:	bl	18c4 <fwrite@plt>
   442ec:	ldr	r0, [r7, #12]
   442f0:	add	r5, r5, #1
   442f4:	ldr	r1, [r0, sl, lsl #2]
   442f8:	cmp	r5, r1
   442fc:	bge	44310 <Mat_VarWrite4+0x534>
   44300:	ldr	r1, [r7, #20]
   44304:	add	r6, r6, r4
   44308:	cmp	r5, r1
   4430c:	blt	442d8 <Mat_VarWrite4+0x4fc>
   44310:	ldr	r1, [r7, #16]
   44314:	sub	r2, r1, #1
   44318:	cmp	sl, r2
   4431c:	blt	442b4 <Mat_VarWrite4+0x4d8>
   44320:	ldr	r3, [r9]
   44324:	add	r0, sp, #8
   44328:	mov	r1, r4
   4432c:	mov	r2, #1
   44330:	bl	18c4 <fwrite@plt>
   44334:	mov	r5, #0
   44338:	b	43e04 <Mat_VarWrite4+0x28>
   4433c:	.word	0x000063c8

00044340 <Mat_VarRead4>:
   44340:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   44344:	add	fp, sp, #28
   44348:	sub	sp, sp, #20
   4434c:	mov	r5, r1
   44350:	mov	sl, r0
   44354:	mov	r4, #1
   44358:	add	r1, sp, #16
   4435c:	mov	r0, r5
   44360:	str	r4, [sp, #16]
   44364:	bl	45294 <SafeMulDims>
   44368:	ldr	r1, [r5, #52]	; 0x34
   4436c:	ldr	r0, [sl]
   44370:	mov	r2, #0
   44374:	ldr	r1, [r1]
   44378:	bl	1a68 <fseek@plt>
   4437c:	ldr	r0, [r5, #16]
   44380:	cmp	r0, #4
   44384:	beq	443f0 <Mat_VarRead4+0xb0>
   44388:	cmp	r0, #5
   4438c:	beq	44428 <Mat_VarRead4+0xe8>
   44390:	cmp	r0, #6
   44394:	bne	4459c <Mat_VarRead4+0x25c>
   44398:	mov	r0, #8
   4439c:	mov	r2, #8
   443a0:	str	r0, [r5, #12]
   443a4:	mov	r0, r5
   443a8:	ldr	r1, [sp, #16]
   443ac:	bl	452f0 <SafeMul>
   443b0:	ldr	r1, [r5, #20]
   443b4:	ldr	r0, [r5]
   443b8:	cmp	r1, #0
   443bc:	beq	445a8 <Mat_VarRead4+0x268>
   443c0:	bl	4520c <ComplexMalloc>
   443c4:	cmp	r0, #0
   443c8:	beq	445f8 <Mat_VarRead4+0x2b8>
   443cc:	str	r0, [r5, #40]	; 0x28
   443d0:	mov	r6, r0
   443d4:	ldr	r1, [r0]
   443d8:	ldr	r2, [r5, #8]
   443dc:	ldr	r3, [sp, #16]
   443e0:	mov	r0, sl
   443e4:	bl	3790 <ReadDoubleData>
   443e8:	ldr	r1, [r6, #4]
   443ec:	b	445bc <Mat_VarRead4+0x27c>
   443f0:	str	r4, [r5, #12]
   443f4:	ldr	r6, [sp, #16]
   443f8:	mov	r0, r6
   443fc:	str	r6, [r5]
   44400:	bl	18e8 <malloc@plt>
   44404:	cmp	r0, #0
   44408:	str	r0, [r5, #40]	; 0x28
   4440c:	beq	445d0 <Mat_VarRead4+0x290>
   44410:	ldr	r2, [r5, #8]!
   44414:	mov	r1, r0
   44418:	mov	r0, sl
   4441c:	mov	r3, r6
   44420:	bl	13690 <ReadUInt8Data>
   44424:	b	445e0 <Mat_VarRead4+0x2a0>
   44428:	mov	r0, #28
   4442c:	str	r0, [r5, #12]
   44430:	mov	r0, #28
   44434:	bl	18e8 <malloc@plt>
   44438:	cmp	r0, #0
   4443c:	str	r0, [r5, #40]	; 0x28
   44440:	beq	445ec <Mat_VarRead4+0x2ac>
   44444:	mov	r6, r0
   44448:	ldr	r0, [r5, #32]
   4444c:	ldr	r1, [r0, #4]
   44450:	sub	r1, r1, #4
   44454:	clz	r1, r1
   44458:	lsr	r1, r1, #5
   4445c:	str	r1, [r5, #20]
   44460:	ldr	r0, [r0]
   44464:	sub	r7, r0, #1
   44468:	lsl	r0, r7, #2
   4446c:	str	r7, [r6]
   44470:	str	r7, [r6, #8]
   44474:	bl	18e8 <malloc@plt>
   44478:	cmp	r0, #0
   4447c:	str	r0, [r6, #4]
   44480:	beq	44604 <Mat_VarRead4+0x2c4>
   44484:	mov	r1, r0
   44488:	mov	r0, sl
   4448c:	mov	r2, #9
   44490:	mov	r3, r7
   44494:	bl	b46c <ReadInt32Data>
   44498:	ldr	r0, [r6, #8]
   4449c:	cmp	r0, #1
   444a0:	blt	444c8 <Mat_VarRead4+0x188>
   444a4:	ldr	r0, [r6, #4]
   444a8:	mov	r1, #0
   444ac:	ldr	r2, [r0, r1, lsl #2]
   444b0:	sub	r2, r2, #1
   444b4:	str	r2, [r0, r1, lsl #2]
   444b8:	add	r1, r1, #1
   444bc:	ldr	r2, [r6, #8]
   444c0:	cmp	r1, r2
   444c4:	blt	444ac <Mat_VarRead4+0x16c>
   444c8:	add	r1, sp, #8
   444cc:	mov	r0, sl
   444d0:	mov	r2, #9
   444d4:	mov	r3, #1
   444d8:	bl	3790 <ReadDoubleData>
   444dc:	vldr	d16, [sp, #8]
   444e0:	ldr	r0, [r5, #32]
   444e4:	vcvt.u32.f64	s0, d16
   444e8:	vstr	s0, [r0]
   444ec:	ldr	r0, [sl]
   444f0:	bl	1858 <ftell@plt>
   444f4:	cmn	r0, #1
   444f8:	beq	44620 <Mat_VarRead4+0x2e0>
   444fc:	ldr	r7, [sl]
   44500:	ldr	r4, [r6, #8]
   44504:	mov	r8, r0
   44508:	mov	r0, #9
   4450c:	bl	193c <Mat_SizeOf@plt>
   44510:	mul	r1, r0, r4
   44514:	mov	r0, r7
   44518:	mov	r2, #1
   4451c:	bl	1a68 <fseek@plt>
   44520:	add	r1, sp, #8
   44524:	mov	r0, sl
   44528:	mov	r2, #9
   4452c:	mov	r3, #1
   44530:	bl	3790 <ReadDoubleData>
   44534:	vldr	d16, [sp, #8]
   44538:	vldr	d17, [pc, #968]	; 44908 <Mat_VarRead4+0x5c8>
   4453c:	vcmpe.f64	d16, d17
   44540:	vmrs	APSR_nzcv, fpscr
   44544:	bgt	4465c <Mat_VarRead4+0x31c>
   44548:	vcmpe.f64	d16, #0.0
   4454c:	vmrs	APSR_nzcv, fpscr
   44550:	bmi	4465c <Mat_VarRead4+0x31c>
   44554:	ldr	r0, [r5, #32]
   44558:	vcvt.u32.f64	s0, d16
   4455c:	mov	r1, r8
   44560:	mov	r2, #0
   44564:	mov	r4, #0
   44568:	vstr	s0, [r0, #4]
   4456c:	ldr	r0, [sl]
   44570:	bl	1a68 <fseek@plt>
   44574:	ldr	r0, [r5, #32]
   44578:	ldr	r0, [r0, #4]
   4457c:	cmn	r0, #-2147483647	; 0x80000001
   44580:	bcc	44688 <Mat_VarRead4+0x348>
   44584:	ldr	r0, [r6, #4]
   44588:	bl	181c <free@plt>
   4458c:	ldr	r0, [r5, #40]	; 0x28
   44590:	bl	181c <free@plt>
   44594:	str	r4, [r5, #40]	; 0x28
   44598:	b	44674 <Mat_VarRead4+0x334>
   4459c:	ldr	r0, [pc, #1580]	; 44bd0 <Mat_VarRead4+0x890>
   445a0:	add	r0, pc, r0
   445a4:	b	4467c <Mat_VarRead4+0x33c>
   445a8:	bl	18e8 <malloc@plt>
   445ac:	cmp	r0, #0
   445b0:	str	r0, [r5, #40]	; 0x28
   445b4:	beq	44644 <Mat_VarRead4+0x304>
   445b8:	mov	r1, r0
   445bc:	ldr	r2, [r5, #8]
   445c0:	ldr	r3, [sp, #16]
   445c4:	mov	r0, sl
   445c8:	bl	3790 <ReadDoubleData>
   445cc:	b	44650 <Mat_VarRead4+0x310>
   445d0:	ldr	r0, [pc, #1496]	; 44bb0 <Mat_VarRead4+0x870>
   445d4:	add	r0, pc, r0
   445d8:	bl	19cc <Mat_Critical@plt>
   445dc:	add	r5, r5, #8
   445e0:	mov	r0, #2
   445e4:	str	r0, [r5]
   445e8:	b	44680 <Mat_VarRead4+0x340>
   445ec:	ldr	r0, [pc, #1496]	; 44bcc <Mat_VarRead4+0x88c>
   445f0:	add	r0, pc, r0
   445f4:	b	4467c <Mat_VarRead4+0x33c>
   445f8:	ldr	r0, [pc, #1448]	; 44ba8 <Mat_VarRead4+0x868>
   445fc:	add	r0, pc, r0
   44600:	b	4464c <Mat_VarRead4+0x30c>
   44604:	mov	r0, r6
   44608:	bl	181c <free@plt>
   4460c:	mov	r0, #0
   44610:	str	r0, [r5, #40]	; 0x28
   44614:	ldr	r0, [pc, #1464]	; 44bd4 <Mat_VarRead4+0x894>
   44618:	add	r0, pc, r0
   4461c:	b	4467c <Mat_VarRead4+0x33c>
   44620:	ldr	r0, [r6, #4]
   44624:	bl	181c <free@plt>
   44628:	ldr	r0, [r5, #40]	; 0x28
   4462c:	bl	181c <free@plt>
   44630:	mov	r0, #0
   44634:	str	r0, [r5, #40]	; 0x28
   44638:	ldr	r0, [pc, #1396]	; 44bb4 <Mat_VarRead4+0x874>
   4463c:	add	r0, pc, r0
   44640:	b	4467c <Mat_VarRead4+0x33c>
   44644:	ldr	r0, [pc, #1376]	; 44bac <Mat_VarRead4+0x86c>
   44648:	add	r0, pc, r0
   4464c:	bl	19cc <Mat_Critical@plt>
   44650:	mov	r0, #9
   44654:	str	r0, [r5, #8]
   44658:	b	44680 <Mat_VarRead4+0x340>
   4465c:	ldr	r0, [r6, #4]
   44660:	bl	181c <free@plt>
   44664:	ldr	r0, [r5, #40]	; 0x28
   44668:	bl	181c <free@plt>
   4466c:	mov	r0, #0
   44670:	str	r0, [r5, #40]	; 0x28
   44674:	ldr	r0, [pc, #1340]	; 44bb8 <Mat_VarRead4+0x878>
   44678:	add	r0, pc, r0
   4467c:	bl	19cc <Mat_Critical@plt>
   44680:	sub	sp, fp, #28
   44684:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   44688:	add	r0, r0, #1
   4468c:	str	r0, [r6, #16]
   44690:	lsl	r0, r0, #2
   44694:	bl	18e8 <malloc@plt>
   44698:	cmp	r0, #0
   4469c:	str	r0, [r6, #12]
   446a0:	beq	44818 <Mat_VarRead4+0x4d8>
   446a4:	ldr	r9, [r6, #8]
   446a8:	mov	r8, r0
   446ac:	lsl	r0, r9, #2
   446b0:	bl	18e8 <malloc@plt>
   446b4:	cmp	r0, #0
   446b8:	beq	44810 <Mat_VarRead4+0x4d0>
   446bc:	mov	r7, r0
   446c0:	mov	r4, #0
   446c4:	mov	r0, sl
   446c8:	mov	r2, #9
   446cc:	mov	r3, r9
   446d0:	mov	r1, r7
   446d4:	str	r4, [r8]
   446d8:	bl	b46c <ReadInt32Data>
   446dc:	ldr	r0, [r6, #16]
   446e0:	cmp	r0, #3
   446e4:	blt	44728 <Mat_VarRead4+0x3e8>
   446e8:	ldr	r0, [r6, #12]
   446ec:	mov	r1, #1
   446f0:	ldr	r2, [r6, #8]
   446f4:	b	446fc <Mat_VarRead4+0x3bc>
   446f8:	add	r4, r4, #1
   446fc:	cmp	r4, r2
   44700:	bge	44710 <Mat_VarRead4+0x3d0>
   44704:	ldr	r3, [r7, r4, lsl #2]
   44708:	cmp	r3, r1
   4470c:	ble	446f8 <Mat_VarRead4+0x3b8>
   44710:	str	r4, [r0, r1, lsl #2]
   44714:	add	r1, r1, #1
   44718:	ldr	r2, [r6, #16]
   4471c:	sub	r2, r2, #1
   44720:	cmp	r1, r2
   44724:	blt	446f0 <Mat_VarRead4+0x3b0>
   44728:	mov	r0, r7
   4472c:	bl	181c <free@plt>
   44730:	add	r2, r6, #8
   44734:	mov	r3, #1
   44738:	ldm	r2, {r0, r1, r2}
   4473c:	add	r1, r1, r2, lsl #2
   44740:	mov	r2, #9
   44744:	str	r0, [r1, #-4]
   44748:	add	r1, sp, #8
   4474c:	mov	r0, sl
   44750:	bl	3790 <ReadDoubleData>
   44754:	ldr	r4, [r6, #8]
   44758:	str	r4, [r6, #20]
   4475c:	ldr	r9, [r5, #8]
   44760:	ldr	r7, [r5, #20]
   44764:	mov	r0, r9
   44768:	bl	193c <Mat_SizeOf@plt>
   4476c:	mul	r0, r0, r4
   44770:	cmp	r7, #0
   44774:	beq	4483c <Mat_VarRead4+0x4fc>
   44778:	bl	4520c <ComplexMalloc>
   4477c:	cmp	r0, #0
   44780:	beq	448b0 <Mat_VarRead4+0x570>
   44784:	mov	r8, r0
   44788:	str	r0, [r6, #24]
   4478c:	sub	r0, r9, #2
   44790:	cmp	r0, #7
   44794:	bhi	449f4 <Mat_VarRead4+0x6b4>
   44798:	add	r1, pc, #4
   4479c:	ldr	r0, [r1, r0, lsl #2]
   447a0:	add	pc, r1, r0
   447a4:	.word	0x00000020
   447a8:	.word	0x0000016c
   447ac:	.word	0x000001b8
   447b0:	.word	0x00000204
   447b4:	.word	0x00000250
   447b8:	.word	0x00000268
   447bc:	.word	0x00000250
   447c0:	.word	0x000002b4
   447c4:	ldr	r3, [r6, #20]
   447c8:	ldr	r1, [r8]
   447cc:	mov	r0, sl
   447d0:	mov	r2, #2
   447d4:	bl	13690 <ReadUInt8Data>
   447d8:	add	r5, sp, #4
   447dc:	mov	r0, sl
   447e0:	mov	r2, #2
   447e4:	mov	r3, #1
   447e8:	mov	r1, r5
   447ec:	bl	13690 <ReadUInt8Data>
   447f0:	ldr	r1, [r8, #4]
   447f4:	ldr	r3, [r6, #20]
   447f8:	mov	r0, sl
   447fc:	mov	r2, #2
   44800:	bl	13690 <ReadUInt8Data>
   44804:	mov	r0, sl
   44808:	mov	r1, r5
   4480c:	b	448a0 <Mat_VarRead4+0x560>
   44810:	mov	r0, r8
   44814:	bl	181c <free@plt>
   44818:	ldr	r0, [r6, #4]
   4481c:	bl	181c <free@plt>
   44820:	ldr	r0, [r5, #40]	; 0x28
   44824:	bl	181c <free@plt>
   44828:	mov	r0, #0
   4482c:	str	r0, [r5, #40]	; 0x28
   44830:	ldr	r0, [pc, #900]	; 44bbc <Mat_VarRead4+0x87c>
   44834:	add	r0, pc, r0
   44838:	b	4467c <Mat_VarRead4+0x33c>
   4483c:	bl	18e8 <malloc@plt>
   44840:	cmp	r0, #0
   44844:	str	r0, [r6, #24]
   44848:	beq	448dc <Mat_VarRead4+0x59c>
   4484c:	mov	r1, r0
   44850:	sub	r0, r9, #2
   44854:	cmp	r0, #7
   44858:	bhi	44b1c <Mat_VarRead4+0x7dc>
   4485c:	add	r2, pc, #4
   44860:	ldr	r0, [r2, r0, lsl #2]
   44864:	add	pc, r2, r0
   44868:	.word	0x00000020
   4486c:	.word	0x0000023c
   44870:	.word	0x00000264
   44874:	.word	0x0000028c
   44878:	.word	0x000002b4
   4487c:	.word	0x000002f0
   44880:	.word	0x000002b4
   44884:	.word	0x00000318
   44888:	ldr	r3, [r6, #20]
   4488c:	mov	r0, sl
   44890:	mov	r2, #2
   44894:	bl	13690 <ReadUInt8Data>
   44898:	add	r1, sp, #4
   4489c:	mov	r0, sl
   448a0:	mov	r2, #2
   448a4:	mov	r3, #1
   448a8:	bl	13690 <ReadUInt8Data>
   448ac:	b	44680 <Mat_VarRead4+0x340>
   448b0:	ldr	r0, [r6, #12]
   448b4:	bl	181c <free@plt>
   448b8:	ldr	r0, [r6, #4]
   448bc:	bl	181c <free@plt>
   448c0:	ldr	r0, [r5, #40]	; 0x28
   448c4:	bl	181c <free@plt>
   448c8:	mov	r0, #0
   448cc:	str	r0, [r5, #40]	; 0x28
   448d0:	ldr	r0, [pc, #744]	; 44bc0 <Mat_VarRead4+0x880>
   448d4:	add	r0, pc, r0
   448d8:	b	4467c <Mat_VarRead4+0x33c>
   448dc:	ldr	r0, [r6, #12]
   448e0:	bl	181c <free@plt>
   448e4:	ldr	r0, [r6, #4]
   448e8:	bl	181c <free@plt>
   448ec:	ldr	r0, [r5, #40]	; 0x28
   448f0:	bl	181c <free@plt>
   448f4:	mov	r0, #0
   448f8:	str	r0, [r5, #40]	; 0x28
   448fc:	ldr	r0, [pc, #708]	; 44bc8 <Mat_VarRead4+0x888>
   44900:	add	r0, pc, r0
   44904:	b	4467c <Mat_VarRead4+0x33c>
   44908:	.word	0xff800000
   4490c:	.word	0x41dfffff
   44910:	ldr	r3, [r6, #20]
   44914:	ldr	r1, [r8]
   44918:	mov	r0, sl
   4491c:	mov	r2, #3
   44920:	bl	e8ac <ReadInt16Data>
   44924:	add	r5, sp, #4
   44928:	mov	r0, sl
   4492c:	mov	r2, #3
   44930:	mov	r3, #1
   44934:	mov	r1, r5
   44938:	bl	e8ac <ReadInt16Data>
   4493c:	ldr	r1, [r8, #4]
   44940:	ldr	r3, [r6, #20]
   44944:	mov	r0, sl
   44948:	mov	r2, #3
   4494c:	bl	e8ac <ReadInt16Data>
   44950:	mov	r0, sl
   44954:	mov	r1, r5
   44958:	b	44abc <Mat_VarRead4+0x77c>
   4495c:	ldr	r3, [r6, #20]
   44960:	ldr	r1, [r8]
   44964:	mov	r0, sl
   44968:	mov	r2, #4
   4496c:	bl	102cc <ReadUInt16Data>
   44970:	add	r5, sp, #4
   44974:	mov	r0, sl
   44978:	mov	r2, #4
   4497c:	mov	r3, #1
   44980:	mov	r1, r5
   44984:	bl	102cc <ReadUInt16Data>
   44988:	ldr	r1, [r8, #4]
   4498c:	ldr	r3, [r6, #20]
   44990:	mov	r0, sl
   44994:	mov	r2, #4
   44998:	bl	102cc <ReadUInt16Data>
   4499c:	mov	r0, sl
   449a0:	mov	r1, r5
   449a4:	b	44ae4 <Mat_VarRead4+0x7a4>
   449a8:	ldr	r3, [r6, #20]
   449ac:	ldr	r1, [r8]
   449b0:	mov	r0, sl
   449b4:	mov	r2, #5
   449b8:	bl	b46c <ReadInt32Data>
   449bc:	add	r5, sp, #4
   449c0:	mov	r0, sl
   449c4:	mov	r2, #5
   449c8:	mov	r3, #1
   449cc:	mov	r1, r5
   449d0:	bl	b46c <ReadInt32Data>
   449d4:	ldr	r1, [r8, #4]
   449d8:	ldr	r3, [r6, #20]
   449dc:	mov	r0, sl
   449e0:	mov	r2, #5
   449e4:	bl	b46c <ReadInt32Data>
   449e8:	mov	r0, sl
   449ec:	mov	r1, r5
   449f0:	b	44b0c <Mat_VarRead4+0x7cc>
   449f4:	ldr	r0, [r8]
   449f8:	bl	181c <free@plt>
   449fc:	ldr	r0, [r8, #4]
   44a00:	bl	181c <free@plt>
   44a04:	mov	r0, r8
   44a08:	b	44b20 <Mat_VarRead4+0x7e0>
   44a0c:	ldr	r3, [r6, #20]
   44a10:	ldr	r1, [r8]
   44a14:	mov	r0, sl
   44a18:	mov	r2, #7
   44a1c:	bl	5f94 <ReadSingleData>
   44a20:	add	r5, sp, #4
   44a24:	mov	r0, sl
   44a28:	mov	r2, #7
   44a2c:	mov	r3, #1
   44a30:	mov	r1, r5
   44a34:	bl	5f94 <ReadSingleData>
   44a38:	ldr	r1, [r8, #4]
   44a3c:	ldr	r3, [r6, #20]
   44a40:	mov	r0, sl
   44a44:	mov	r2, #7
   44a48:	bl	5f94 <ReadSingleData>
   44a4c:	mov	r0, sl
   44a50:	mov	r1, r5
   44a54:	b	44b70 <Mat_VarRead4+0x830>
   44a58:	ldr	r3, [r6, #20]
   44a5c:	ldr	r1, [r8]
   44a60:	mov	r0, sl
   44a64:	mov	r2, #9
   44a68:	bl	3790 <ReadDoubleData>
   44a6c:	add	r5, sp, #8
   44a70:	mov	r0, sl
   44a74:	mov	r2, #9
   44a78:	mov	r3, #1
   44a7c:	mov	r1, r5
   44a80:	bl	3790 <ReadDoubleData>
   44a84:	ldr	r1, [r8, #4]
   44a88:	ldr	r3, [r6, #20]
   44a8c:	mov	r0, sl
   44a90:	mov	r2, #9
   44a94:	bl	3790 <ReadDoubleData>
   44a98:	mov	r0, sl
   44a9c:	mov	r1, r5
   44aa0:	b	44b98 <Mat_VarRead4+0x858>
   44aa4:	ldr	r3, [r6, #20]
   44aa8:	mov	r0, sl
   44aac:	mov	r2, #3
   44ab0:	bl	e8ac <ReadInt16Data>
   44ab4:	add	r1, sp, #4
   44ab8:	mov	r0, sl
   44abc:	mov	r2, #3
   44ac0:	mov	r3, #1
   44ac4:	bl	e8ac <ReadInt16Data>
   44ac8:	b	44680 <Mat_VarRead4+0x340>
   44acc:	ldr	r3, [r6, #20]
   44ad0:	mov	r0, sl
   44ad4:	mov	r2, #4
   44ad8:	bl	102cc <ReadUInt16Data>
   44adc:	add	r1, sp, #4
   44ae0:	mov	r0, sl
   44ae4:	mov	r2, #4
   44ae8:	mov	r3, #1
   44aec:	bl	102cc <ReadUInt16Data>
   44af0:	b	44680 <Mat_VarRead4+0x340>
   44af4:	ldr	r3, [r6, #20]
   44af8:	mov	r0, sl
   44afc:	mov	r2, #5
   44b00:	bl	b46c <ReadInt32Data>
   44b04:	add	r1, sp, #4
   44b08:	mov	r0, sl
   44b0c:	mov	r2, #5
   44b10:	mov	r3, #1
   44b14:	bl	b46c <ReadInt32Data>
   44b18:	b	44680 <Mat_VarRead4+0x340>
   44b1c:	mov	r0, r1
   44b20:	bl	181c <free@plt>
   44b24:	ldr	r0, [r6, #12]
   44b28:	bl	181c <free@plt>
   44b2c:	ldr	r0, [r6, #4]
   44b30:	bl	181c <free@plt>
   44b34:	ldr	r0, [r5, #40]	; 0x28
   44b38:	bl	181c <free@plt>
   44b3c:	mov	r0, #0
   44b40:	mov	r1, r9
   44b44:	str	r0, [r5, #40]	; 0x28
   44b48:	ldr	r0, [pc, #116]	; 44bc4 <Mat_VarRead4+0x884>
   44b4c:	add	r0, pc, r0
   44b50:	bl	19cc <Mat_Critical@plt>
   44b54:	b	44680 <Mat_VarRead4+0x340>
   44b58:	ldr	r3, [r6, #20]
   44b5c:	mov	r0, sl
   44b60:	mov	r2, #7
   44b64:	bl	5f94 <ReadSingleData>
   44b68:	add	r1, sp, #4
   44b6c:	mov	r0, sl
   44b70:	mov	r2, #7
   44b74:	mov	r3, #1
   44b78:	bl	5f94 <ReadSingleData>
   44b7c:	b	44680 <Mat_VarRead4+0x340>
   44b80:	ldr	r3, [r6, #20]
   44b84:	mov	r0, sl
   44b88:	mov	r2, #9
   44b8c:	bl	3790 <ReadDoubleData>
   44b90:	add	r1, sp, #8
   44b94:	mov	r0, sl
   44b98:	mov	r2, #9
   44b9c:	mov	r3, #1
   44ba0:	bl	3790 <ReadDoubleData>
   44ba4:	b	44680 <Mat_VarRead4+0x340>
   44ba8:	.word	0x000058c5
   44bac:	.word	0x0000571c
   44bb0:	.word	0x00005790
   44bb4:	.word	0x0000567c
   44bb8:	.word	0x00005aec
   44bbc:	.word	0x0000595b
   44bc0:	.word	0x00005561
   44bc4:	.word	0x00005677
   44bc8:	.word	0x0000556a
   44bcc:	.word	0x00005774
   44bd0:	.word	0x00005c65
   44bd4:	.word	0x00005b1a

00044bd8 <Mat_VarReadData4>:
   44bd8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   44bdc:	add	fp, sp, #28
   44be0:	sub	sp, sp, #28
   44be4:	mov	r7, r1
   44be8:	ldr	r1, [r1, #52]	; 0x34
   44bec:	mov	r4, r0
   44bf0:	ldr	r0, [r0]
   44bf4:	mov	r8, r2
   44bf8:	mov	r2, #0
   44bfc:	mov	r5, r3
   44c00:	ldr	r1, [r1]
   44c04:	bl	1a68 <fseek@plt>
   44c08:	ldr	r3, [r7, #8]
   44c0c:	mov	r6, #1
   44c10:	cmp	r3, #9
   44c14:	bhi	44de0 <Mat_VarReadData4+0x208>
   44c18:	mov	r0, #1
   44c1c:	mov	r1, #700	; 0x2bc
   44c20:	tst	r1, r0, lsl r3
   44c24:	beq	44de0 <Mat_VarReadData4+0x208>
   44c28:	ldr	r0, [r7, #4]
   44c2c:	ldr	r9, [fp, #12]
   44c30:	ldr	sl, [fp, #8]
   44c34:	cmp	r0, #2
   44c38:	bne	44d0c <Mat_VarReadData4+0x134>
   44c3c:	ldr	r2, [r9]
   44c40:	ldr	r0, [r5]
   44c44:	ldr	r1, [sl]
   44c48:	mov	r6, #1
   44c4c:	sub	r2, r2, #1
   44c50:	mla	r0, r2, r1, r0
   44c54:	add	r1, r0, #1
   44c58:	ldr	r0, [r7, #32]
   44c5c:	ldr	r2, [r0]
   44c60:	cmp	r1, r2
   44c64:	bhi	44c90 <Mat_VarReadData4+0xb8>
   44c68:	ldr	r6, [r9, #4]
   44c6c:	ldr	r1, [r5, #4]
   44c70:	ldr	r2, [sl, #4]
   44c74:	sub	r6, r6, #1
   44c78:	mla	r1, r6, r2, r1
   44c7c:	ldr	r2, [r0, #4]
   44c80:	mov	r6, #0
   44c84:	add	r1, r1, #1
   44c88:	cmp	r1, r2
   44c8c:	movwhi	r6, #1
   44c90:	ldr	r1, [r7, #20]
   44c94:	cmp	r1, #0
   44c98:	beq	44da4 <Mat_VarReadData4+0x1cc>
   44c9c:	mov	r0, r3
   44ca0:	bl	193c <Mat_SizeOf@plt>
   44ca4:	str	r0, [sp, #24]
   44ca8:	add	r1, sp, #24
   44cac:	mov	r0, r7
   44cb0:	bl	45294 <SafeMulDims>
   44cb4:	ldr	r0, [r7, #32]
   44cb8:	ldr	r1, [r8]
   44cbc:	ldr	r3, [r7, #8]
   44cc0:	ldr	r2, [r7, #16]
   44cc4:	stm	sp, {r0, r5, sl}
   44cc8:	mov	r0, r4
   44ccc:	str	r9, [sp, #12]
   44cd0:	bl	1cda8 <ReadDataSlab2>
   44cd4:	ldr	r0, [r7, #52]	; 0x34
   44cd8:	ldr	r1, [sp, #24]
   44cdc:	mov	r2, #0
   44ce0:	ldr	r0, [r0]
   44ce4:	add	r1, r1, r0
   44ce8:	ldr	r0, [r4]
   44cec:	bl	1a68 <fseek@plt>
   44cf0:	ldr	r0, [r7, #32]
   44cf4:	ldr	r1, [r8, #4]
   44cf8:	ldr	r3, [r7, #8]
   44cfc:	ldr	r2, [r7, #16]
   44d00:	stm	sp, {r0, r5, sl}
   44d04:	mov	r0, r4
   44d08:	b	44db4 <Mat_VarReadData4+0x1dc>
   44d0c:	ldr	r1, [r7, #20]
   44d10:	cmp	r1, #0
   44d14:	beq	44dc0 <Mat_VarReadData4+0x1e8>
   44d18:	mov	r0, r3
   44d1c:	bl	193c <Mat_SizeOf@plt>
   44d20:	str	r0, [sp, #20]
   44d24:	add	r1, sp, #20
   44d28:	mov	r0, r7
   44d2c:	bl	45294 <SafeMulDims>
   44d30:	ldr	r1, [r8]
   44d34:	ldmib	r7, {r0, r3}
   44d38:	ldr	r6, [r7, #32]
   44d3c:	ldr	r2, [r7, #16]
   44d40:	stm	sp, {r0, r6}
   44d44:	mov	r0, r4
   44d48:	str	r5, [sp, #8]
   44d4c:	str	sl, [sp, #12]
   44d50:	str	r9, [sp, #16]
   44d54:	bl	15268 <ReadDataSlabN>
   44d58:	ldr	r0, [r7, #52]	; 0x34
   44d5c:	ldr	r1, [sp, #20]
   44d60:	mov	r2, #0
   44d64:	mov	r6, #0
   44d68:	ldr	r0, [r0]
   44d6c:	add	r1, r1, r0
   44d70:	ldr	r0, [r4]
   44d74:	bl	1a68 <fseek@plt>
   44d78:	ldr	r1, [r8, #4]
   44d7c:	ldmib	r7, {r0, r3}
   44d80:	ldr	r2, [r7, #16]
   44d84:	ldr	r7, [r7, #32]
   44d88:	stm	sp, {r0, r7}
   44d8c:	mov	r0, r4
   44d90:	str	r5, [sp, #8]
   44d94:	str	sl, [sp, #12]
   44d98:	str	r9, [sp, #16]
   44d9c:	bl	15268 <ReadDataSlabN>
   44da0:	b	44de0 <Mat_VarReadData4+0x208>
   44da4:	ldr	r2, [r7, #16]
   44da8:	stm	sp, {r0, r5, sl}
   44dac:	mov	r0, r4
   44db0:	mov	r1, r8
   44db4:	str	r9, [sp, #12]
   44db8:	bl	1cda8 <ReadDataSlab2>
   44dbc:	b	44de0 <Mat_VarReadData4+0x208>
   44dc0:	ldr	r1, [r7, #32]
   44dc4:	ldr	r2, [r7, #16]
   44dc8:	stm	sp, {r0, r1, r5, sl}
   44dcc:	mov	r0, r4
   44dd0:	mov	r1, r8
   44dd4:	str	r9, [sp, #16]
   44dd8:	bl	15268 <ReadDataSlabN>
   44ddc:	mov	r6, #0
   44de0:	mov	r0, r6
   44de4:	sub	sp, fp, #28
   44de8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00044dec <Mat_VarReadDataLinear4>:
   44dec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   44df0:	add	fp, sp, #28
   44df4:	sub	sp, sp, #20
   44df8:	mov	r4, r1
   44dfc:	mov	r5, r0
   44e00:	mov	r7, #1
   44e04:	add	r1, sp, #16
   44e08:	mov	sl, r3
   44e0c:	mov	r8, r2
   44e10:	mov	r0, r4
   44e14:	str	r7, [sp, #16]
   44e18:	bl	45294 <SafeMulDims>
   44e1c:	ldr	r1, [r4, #52]	; 0x34
   44e20:	str	r0, [sp, #12]
   44e24:	ldr	r0, [r5]
   44e28:	mov	r2, #0
   44e2c:	ldr	r1, [r1]
   44e30:	bl	1a68 <fseek@plt>
   44e34:	ldr	r0, [r4, #8]
   44e38:	bl	193c <Mat_SizeOf@plt>
   44e3c:	ldr	ip, [fp, #12]
   44e40:	ldr	lr, [fp, #8]
   44e44:	str	r0, [r4, #12]
   44e48:	mov	r6, r0
   44e4c:	ldr	r9, [sp, #16]
   44e50:	sub	r0, ip, #1
   44e54:	mla	r0, r0, lr, sl
   44e58:	add	r0, r0, #1
   44e5c:	cmp	r0, r9
   44e60:	bhi	44eec <Mat_VarReadDataLinear4+0x100>
   44e64:	ldr	r0, [r4, #20]
   44e68:	cmp	r0, #0
   44e6c:	beq	44ecc <Mat_VarReadDataLinear4+0xe0>
   44e70:	ldr	r3, [r4, #8]
   44e74:	ldr	r2, [r4, #16]
   44e78:	ldr	r1, [r8]
   44e7c:	mov	r0, r5
   44e80:	stm	sp, {sl, lr}
   44e84:	str	ip, [sp, #8]
   44e88:	mov	r7, lr
   44e8c:	bl	1c8d8 <ReadDataSlab1>
   44e90:	ldr	r0, [r4, #52]	; 0x34
   44e94:	mov	r2, #0
   44e98:	ldr	r0, [r0]
   44e9c:	mla	r1, r9, r6, r0
   44ea0:	ldr	r0, [r5]
   44ea4:	bl	1a68 <fseek@plt>
   44ea8:	ldr	r0, [fp, #12]
   44eac:	ldr	r1, [r8, #4]
   44eb0:	ldr	r3, [r4, #8]
   44eb4:	ldr	r2, [r4, #16]
   44eb8:	str	sl, [sp]
   44ebc:	str	r7, [sp, #4]
   44ec0:	str	r0, [sp, #8]
   44ec4:	mov	r0, r5
   44ec8:	b	44ee4 <Mat_VarReadDataLinear4+0xf8>
   44ecc:	ldr	r3, [r4, #8]
   44ed0:	ldr	r2, [r4, #16]
   44ed4:	mov	r0, r5
   44ed8:	mov	r1, r8
   44edc:	stm	sp, {sl, lr}
   44ee0:	str	ip, [sp, #8]
   44ee4:	bl	1c8d8 <ReadDataSlab1>
   44ee8:	ldr	r7, [sp, #12]
   44eec:	mov	r0, r7
   44ef0:	sub	sp, fp, #28
   44ef4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00044ef8 <Mat_VarReadNextInfo4>:
   44ef8:	push	{r4, r5, r6, sl, fp, lr}
   44efc:	add	fp, sp, #16
   44f00:	sub	sp, sp, #8
   44f04:	cmp	r0, #0
   44f08:	beq	451c8 <Mat_VarReadNextInfo4+0x2d0>
   44f0c:	mov	r5, r0
   44f10:	ldr	r0, [r0]
   44f14:	cmp	r0, #0
   44f18:	beq	451c8 <Mat_VarReadNextInfo4+0x2d0>
   44f1c:	bl	18b8 <Mat_VarCalloc@plt>
   44f20:	cmp	r0, #0
   44f24:	beq	451c8 <Mat_VarReadNextInfo4+0x2d0>
   44f28:	ldr	r3, [r5]
   44f2c:	mov	r4, r0
   44f30:	add	r0, sp, #4
   44f34:	mov	r1, #4
   44f38:	mov	r2, #1
   44f3c:	bl	18d0 <fread@plt>
   44f40:	cmp	r0, #0
   44f44:	beq	451c0 <Mat_VarReadNextInfo4+0x2c8>
   44f48:	ldr	r1, [sp, #4]
   44f4c:	movw	r0, #4053	; 0xfd5
   44f50:	cmp	r1, r0
   44f54:	bcc	44f70 <Mat_VarReadNextInfo4+0x78>
   44f58:	add	r0, sp, #4
   44f5c:	bl	1c28 <Mat_int32Swap>
   44f60:	movw	r1, #4052	; 0xfd4
   44f64:	cmp	r0, r1
   44f68:	bgt	451c0 <Mat_VarReadNextInfo4+0x2c8>
   44f6c:	ldr	r1, [sp, #4]
   44f70:	vldr	d16, [pc, #632]	; 451f0 <Mat_VarReadNextInfo4+0x2f8>
   44f74:	vmov	s0, r1
   44f78:	movw	r2, #64536	; 0xfc18
   44f7c:	mvn	r3, #99	; 0x63
   44f80:	vcvt.f64.s32	d17, s0
   44f84:	movt	r2, #65535	; 0xffff
   44f88:	vdiv.f64	d16, d17, d16
   44f8c:	vcvtm.s32.f64	s0, d16
   44f90:	vldr	d16, [pc, #608]	; 451f8 <Mat_VarReadNextInfo4+0x300>
   44f94:	vmov	r0, s0
   44f98:	mla	r1, r0, r2, r1
   44f9c:	cmp	r0, #2
   44fa0:	vmov	s0, r1
   44fa4:	vcvt.f64.s32	d17, s0
   44fa8:	vdiv.f64	d16, d17, d16
   44fac:	vcvtm.s32.f64	s0, d16
   44fb0:	vmov.f64	d16, #36	; 0x41200000  10.0
   44fb4:	vmov	r2, s0
   44fb8:	mla	r3, r2, r3, r1
   44fbc:	vmov	s0, r3
   44fc0:	vcvt.f64.s32	d17, s0
   44fc4:	vdiv.f64	d16, d17, d16
   44fc8:	vcvtm.s32.f64	s0, d16
   44fcc:	vmov	r1, s0
   44fd0:	add	r6, r1, r1, lsl #2
   44fd4:	rsb	r6, r6, #0
   44fd8:	add	r3, r3, r6, lsl #1
   44fdc:	vmov	s0, r3
   44fe0:	vcvt.f64.s32	d16, s0
   44fe4:	vcvtm.s32.f64	s0, d16
   44fe8:	str	r3, [sp, #4]
   44fec:	bcs	451c0 <Mat_VarReadNextInfo4+0x2c8>
   44ff0:	cmp	r2, #0
   44ff4:	str	r0, [r5, #20]
   44ff8:	bne	451c0 <Mat_VarReadNextInfo4+0x2c8>
   44ffc:	cmp	r1, #6
   45000:	bcs	451c0 <Mat_VarReadNextInfo4+0x2c8>
   45004:	ldr	r2, [pc, #500]	; 45200 <Mat_VarReadNextInfo4+0x308>
   45008:	vmov	r0, s0
   4500c:	cmp	r0, #3
   45010:	add	r2, pc, r2
   45014:	ldr	r1, [r2, r1, lsl #2]
   45018:	str	r1, [r4, #8]
   4501c:	bcs	451c0 <Mat_VarReadNextInfo4+0x2c8>
   45020:	mov	r1, #2
   45024:	str	r1, [r4, #4]
   45028:	ldr	r1, [pc, #468]	; 45204 <Mat_VarReadNextInfo4+0x30c>
   4502c:	add	r1, pc, r1
   45030:	ldr	r0, [r1, r0, lsl #2]
   45034:	str	r0, [r4, #16]
   45038:	mov	r0, #8
   4503c:	bl	18e8 <malloc@plt>
   45040:	cmp	r0, #0
   45044:	str	r0, [r4, #32]
   45048:	beq	451c0 <Mat_VarReadNextInfo4+0x2c8>
   4504c:	ldr	r3, [r5]
   45050:	add	r0, sp, #4
   45054:	mov	r1, #4
   45058:	mov	r2, #1
   4505c:	bl	18d0 <fread@plt>
   45060:	mov	r6, r0
   45064:	ldr	r0, [r5, #20]
   45068:	cmp	r0, #0
   4506c:	beq	45078 <Mat_VarReadNextInfo4+0x180>
   45070:	add	r0, sp, #4
   45074:	bl	1c28 <Mat_int32Swap>
   45078:	ldr	r0, [r4, #32]
   4507c:	ldr	r1, [sp, #4]
   45080:	cmp	r6, #0
   45084:	str	r1, [r0]
   45088:	beq	451c0 <Mat_VarReadNextInfo4+0x2c8>
   4508c:	ldr	r3, [r5]
   45090:	add	r0, sp, #4
   45094:	mov	r1, #4
   45098:	mov	r2, #1
   4509c:	bl	18d0 <fread@plt>
   450a0:	mov	r6, r0
   450a4:	ldr	r0, [r5, #20]
   450a8:	cmp	r0, #0
   450ac:	beq	450b8 <Mat_VarReadNextInfo4+0x1c0>
   450b0:	add	r0, sp, #4
   450b4:	bl	1c28 <Mat_int32Swap>
   450b8:	ldr	r0, [r4, #32]
   450bc:	ldr	r1, [sp, #4]
   450c0:	cmp	r6, #0
   450c4:	str	r1, [r0, #4]
   450c8:	beq	451c0 <Mat_VarReadNextInfo4+0x2c8>
   450cc:	ldr	r3, [r5]
   450d0:	add	r6, r4, #20
   450d4:	mov	r1, #4
   450d8:	mov	r2, #1
   450dc:	mov	r0, r6
   450e0:	bl	18d0 <fread@plt>
   450e4:	cmp	r0, #0
   450e8:	beq	451c0 <Mat_VarReadNextInfo4+0x2c8>
   450ec:	ldr	r0, [r6]
   450f0:	cmp	r0, #0
   450f4:	beq	45104 <Mat_VarReadNextInfo4+0x20c>
   450f8:	ldr	r0, [r4, #16]
   450fc:	cmp	r0, #4
   45100:	beq	451c0 <Mat_VarReadNextInfo4+0x2c8>
   45104:	ldr	r3, [r5]
   45108:	add	r0, sp, #4
   4510c:	mov	r1, #4
   45110:	mov	r2, #1
   45114:	bl	18d0 <fread@plt>
   45118:	cmp	r0, #0
   4511c:	beq	451c0 <Mat_VarReadNextInfo4+0x2c8>
   45120:	ldr	r0, [r5, #20]
   45124:	cmp	r0, #0
   45128:	beq	45134 <Mat_VarReadNextInfo4+0x23c>
   4512c:	add	r0, sp, #4
   45130:	bl	1c28 <Mat_int32Swap>
   45134:	ldr	r6, [sp, #4]
   45138:	cmp	r6, #0
   4513c:	ble	451c0 <Mat_VarReadNextInfo4+0x2c8>
   45140:	mov	r0, r6
   45144:	bl	18e8 <malloc@plt>
   45148:	cmp	r0, #0
   4514c:	str	r0, [r4, #36]	; 0x24
   45150:	beq	451c0 <Mat_VarReadNextInfo4+0x2c8>
   45154:	ldr	r3, [r5]
   45158:	mov	r1, #1
   4515c:	mov	r2, r6
   45160:	bl	18d0 <fread@plt>
   45164:	cmp	r0, #0
   45168:	beq	451c0 <Mat_VarReadNextInfo4+0x2c8>
   4516c:	ldr	r0, [r5]
   45170:	bl	1858 <ftell@plt>
   45174:	ldr	r1, [r4, #52]	; 0x34
   45178:	cmn	r0, #1
   4517c:	str	r0, [r1]
   45180:	beq	451d8 <Mat_VarReadNextInfo4+0x2e0>
   45184:	ldr	r0, [r4, #8]
   45188:	bl	193c <Mat_SizeOf@plt>
   4518c:	str	r0, [sp]
   45190:	ldr	r1, [r4, #20]
   45194:	cmp	r1, #0
   45198:	mov	r1, sp
   4519c:	lslne	r0, r0, #1
   451a0:	strne	r0, [sp]
   451a4:	mov	r0, r4
   451a8:	bl	45294 <SafeMulDims>
   451ac:	ldr	r1, [sp]
   451b0:	ldr	r0, [r5]
   451b4:	mov	r2, #1
   451b8:	bl	1a68 <fseek@plt>
   451bc:	b	451cc <Mat_VarReadNextInfo4+0x2d4>
   451c0:	mov	r0, r4
   451c4:	bl	1930 <Mat_VarFree@plt>
   451c8:	mov	r4, #0
   451cc:	mov	r0, r4
   451d0:	sub	sp, fp, #16
   451d4:	pop	{r4, r5, r6, sl, fp, pc}
   451d8:	mov	r0, r4
   451dc:	bl	1930 <Mat_VarFree@plt>
   451e0:	ldr	r0, [pc, #32]	; 45208 <Mat_VarReadNextInfo4+0x310>
   451e4:	add	r0, pc, r0
   451e8:	bl	19cc <Mat_Critical@plt>
   451ec:	b	451c8 <Mat_VarReadNextInfo4+0x2d0>
   451f0:	.word	0x00000000
   451f4:	.word	0x408f4000
   451f8:	.word	0x00000000
   451fc:	.word	0x40590000
   45200:	.word	0x00005238
   45204:	.word	0x00005234
   45208:	.word	0x00004ad4

0004520c <ComplexMalloc>:
   4520c:	push	{r4, r5, r6, sl, fp, lr}
   45210:	add	fp, sp, #16
   45214:	mov	r5, r0
   45218:	mov	r0, #8
   4521c:	bl	18e8 <malloc@plt>
   45220:	mov	r4, r0
   45224:	cmp	r0, #0
   45228:	beq	4526c <ComplexMalloc+0x60>
   4522c:	mov	r0, r5
   45230:	bl	18e8 <malloc@plt>
   45234:	cmp	r0, #0
   45238:	str	r0, [r4]
   4523c:	beq	45260 <ComplexMalloc+0x54>
   45240:	mov	r6, r0
   45244:	mov	r0, r5
   45248:	bl	18e8 <malloc@plt>
   4524c:	cmp	r0, #0
   45250:	str	r0, [r4, #4]
   45254:	bne	4526c <ComplexMalloc+0x60>
   45258:	mov	r0, r6
   4525c:	bl	181c <free@plt>
   45260:	mov	r0, r4
   45264:	bl	181c <free@plt>
   45268:	mov	r4, #0
   4526c:	mov	r0, r4
   45270:	pop	{r4, r5, r6, sl, fp, pc}

00045274 <ClassType2DataType>:
   45274:	sub	r0, r0, #1
   45278:	cmp	r0, #14
   4527c:	ldrls	r1, [pc, #12]	; 45290 <ClassType2DataType+0x1c>
   45280:	movhi	r0, #0
   45284:	addls	r1, pc, r1
   45288:	ldrls	r0, [r1, r0, lsl #2]
   4528c:	bx	lr
   45290:	.word	0x00005714

00045294 <SafeMulDims>:
   45294:	push	{fp, lr}
   45298:	mov	fp, sp
   4529c:	ldr	r2, [r0, #4]
   452a0:	cmp	r2, #1
   452a4:	blt	452d8 <SafeMulDims+0x44>
   452a8:	ldr	lr, [r1]
   452ac:	ldr	ip, [r0, #32]
   452b0:	mov	r3, #0
   452b4:	ldr	r2, [ip, r3, lsl #2]
   452b8:	umull	lr, r2, lr, r2
   452bc:	cmp	r2, #0
   452c0:	str	lr, [r1]
   452c4:	bne	452e0 <SafeMulDims+0x4c>
   452c8:	ldr	r2, [r0, #4]
   452cc:	add	r3, r3, #1
   452d0:	cmp	r3, r2
   452d4:	blt	452b4 <SafeMulDims+0x20>
   452d8:	mov	r0, #0
   452dc:	pop	{fp, pc}
   452e0:	mov	r0, #0
   452e4:	str	r0, [r1]
   452e8:	mov	r0, #1
   452ec:	pop	{fp, pc}

000452f0 <SafeMul>:
   452f0:	umull	r2, r1, r1, r2
   452f4:	cmp	r1, #0
   452f8:	movwne	r1, #1
   452fc:	cmp	r1, #0
   45300:	movwne	r2, #0
   45304:	str	r2, [r0]
   45308:	mov	r0, r1
   4530c:	bx	lr

00045310 <Mat_GetLibraryVersion>:
   45310:	cmp	r0, #0
   45314:	movne	r3, #1
   45318:	strne	r3, [r0]
   4531c:	cmp	r1, #0
   45320:	movne	r0, #5
   45324:	strne	r0, [r1]
   45328:	cmp	r2, #0
   4532c:	movne	r0, #15
   45330:	strne	r0, [r2]
   45334:	bx	lr

00045338 <Mat_CreateVer>:
   45338:	cmp	r2, #256	; 0x100
   4533c:	beq	45350 <Mat_CreateVer+0x18>
   45340:	cmp	r2, #16
   45344:	movne	r0, #0
   45348:	bxne	lr
   4534c:	b	43d28 <Mat_Create4>
   45350:	b	1fe38 <Mat_Create5>

00045354 <Mat_Open>:
   45354:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   45358:	add	fp, sp, #24
   4535c:	sub	sp, sp, #8
   45360:	mov	r9, r1
   45364:	mov	r8, r0
   45368:	tst	r1, #1
   4536c:	bne	45390 <Mat_Open+0x3c>
   45370:	ldr	r1, [pc, #780]	; 45684 <Mat_Open+0x330>
   45374:	mov	r0, r8
   45378:	add	r1, pc, r1
   4537c:	bl	17f8 <fopen@plt>
   45380:	mov	r7, r0
   45384:	cmp	r0, #0
   45388:	bne	453ac <Mat_Open+0x58>
   4538c:	b	45518 <Mat_Open+0x1c4>
   45390:	ldr	r1, [pc, #756]	; 4568c <Mat_Open+0x338>
   45394:	mov	r0, r8
   45398:	add	r1, pc, r1
   4539c:	bl	17f8 <fopen@plt>
   453a0:	mov	r7, r0
   453a4:	cmp	r0, #0
   453a8:	beq	454c0 <Mat_Open+0x16c>
   453ac:	mov	r0, #44	; 0x2c
   453b0:	bl	18e8 <malloc@plt>
   453b4:	cmp	r0, #0
   453b8:	beq	454ac <Mat_Open+0x158>
   453bc:	mov	r5, r0
   453c0:	str	r7, [r0]
   453c4:	mov	r0, #128	; 0x80
   453c8:	mov	r1, #1
   453cc:	bl	17b0 <calloc@plt>
   453d0:	cmp	r0, #0
   453d4:	str	r0, [r5, #4]
   453d8:	beq	454d8 <Mat_Open+0x184>
   453dc:	mov	r4, r0
   453e0:	mov	r0, #8
   453e4:	mov	r1, #1
   453e8:	bl	17b0 <calloc@plt>
   453ec:	cmp	r0, #0
   453f0:	str	r0, [r5, #8]
   453f4:	beq	454f4 <Mat_Open+0x1a0>
   453f8:	mov	r6, #0
   453fc:	mov	r0, r4
   45400:	mov	r1, #1
   45404:	mov	r2, #116	; 0x74
   45408:	mov	r3, r7
   4540c:	str	r6, [r5, #12]
   45410:	str	r6, [r5, #16]
   45414:	str	r6, [r5, #20]
   45418:	str	r6, [r5, #36]	; 0x24
   4541c:	str	r6, [r5, #40]	; 0x28
   45420:	bl	18d0 <fread@plt>
   45424:	mov	r4, r0
   45428:	ldr	r0, [r5, #4]
   4542c:	mov	r1, #1
   45430:	mov	r2, #8
   45434:	mov	r3, r7
   45438:	strb	r6, [r0, #116]	; 0x74
   4543c:	ldr	r0, [r5, #8]
   45440:	bl	18d0 <fread@plt>
   45444:	add	r4, r0, r4
   45448:	add	r0, sp, #4
   4544c:	mov	r1, #2
   45450:	mov	r2, #1
   45454:	mov	r3, r7
   45458:	bl	18d0 <fread@plt>
   4545c:	add	r4, r4, r0, lsl #1
   45460:	add	r0, sp, #6
   45464:	mov	r1, #1
   45468:	mov	r2, #2
   4546c:	mov	r3, r7
   45470:	bl	18d0 <fread@plt>
   45474:	add	r4, r4, r0
   45478:	cmp	r4, #128	; 0x80
   4547c:	bne	45578 <Mat_Open+0x224>
   45480:	mvn	r0, #0
   45484:	movw	r1, #18765	; 0x494d
   45488:	str	r0, [r5, #20]
   4548c:	ldrh	r0, [sp, #6]
   45490:	cmp	r0, r1
   45494:	beq	45528 <Mat_Open+0x1d4>
   45498:	movw	r1, #19785	; 0x4d49
   4549c:	cmp	r0, r1
   454a0:	moveq	r0, #0
   454a4:	streq	r0, [r5, #20]
   454a8:	b	45538 <Mat_Open+0x1e4>
   454ac:	mov	r0, r7
   454b0:	bl	19e4 <fclose@plt>
   454b4:	ldr	r0, [pc, #460]	; 45688 <Mat_Open+0x334>
   454b8:	add	r0, pc, r0
   454bc:	b	45514 <Mat_Open+0x1c0>
   454c0:	bic	r2, r9, #1
   454c4:	mov	r0, r8
   454c8:	mov	r1, #0
   454cc:	bl	19fc <Mat_CreateVer@plt>
   454d0:	mov	r5, r0
   454d4:	b	4551c <Mat_Open+0x1c8>
   454d8:	mov	r0, r5
   454dc:	bl	181c <free@plt>
   454e0:	mov	r0, r7
   454e4:	bl	19e4 <fclose@plt>
   454e8:	ldr	r0, [pc, #416]	; 45690 <Mat_Open+0x33c>
   454ec:	add	r0, pc, r0
   454f0:	b	45514 <Mat_Open+0x1c0>
   454f4:	mov	r0, r4
   454f8:	bl	181c <free@plt>
   454fc:	mov	r0, r5
   45500:	bl	181c <free@plt>
   45504:	mov	r0, r7
   45508:	bl	19e4 <fclose@plt>
   4550c:	ldr	r0, [pc, #384]	; 45694 <Mat_Open+0x340>
   45510:	add	r0, pc, r0
   45514:	bl	19cc <Mat_Critical@plt>
   45518:	mov	r5, #0
   4551c:	mov	r0, r5
   45520:	sub	sp, fp, #24
   45524:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   45528:	mov	r0, #1
   4552c:	str	r0, [r5, #20]
   45530:	add	r0, sp, #4
   45534:	bl	1c50 <Mat_int16Swap>
   45538:	ldrh	r0, [sp, #4]
   4553c:	cmp	r0, #512	; 0x200
   45540:	sxth	r1, r0
   45544:	cmpne	r0, #256	; 0x100
   45548:	str	r1, [r5, #16]
   4554c:	bne	45588 <Mat_Open+0x234>
   45550:	ldr	r0, [r5, #20]
   45554:	cmn	r0, #1
   45558:	beq	45588 <Mat_Open+0x234>
   4555c:	ldr	r0, [r5]
   45560:	bl	1858 <ftell@plt>
   45564:	cmn	r0, #1
   45568:	str	r0, [r5, #28]
   4556c:	beq	45658 <Mat_Open+0x304>
   45570:	mov	r0, #0
   45574:	str	r0, [r5, #32]
   45578:	ldr	r0, [r5, #16]
   4557c:	cmp	r0, #0
   45580:	bne	45608 <Mat_Open+0x2b4>
   45584:	b	45590 <Mat_Open+0x23c>
   45588:	mov	r0, #0
   4558c:	str	r0, [r5, #16]
   45590:	ldr	r0, [r5, #4]
   45594:	bl	181c <free@plt>
   45598:	ldr	r0, [r5, #8]
   4559c:	bl	181c <free@plt>
   455a0:	mov	r0, #0
   455a4:	mov	r1, #16
   455a8:	str	r7, [r5]
   455ac:	str	r0, [r5, #4]
   455b0:	str	r0, [r5, #8]
   455b4:	str	r1, [r5, #16]
   455b8:	str	r0, [r5, #20]
   455bc:	str	r9, [r5, #24]
   455c0:	str	r0, [r5, #28]
   455c4:	str	r0, [r5, #32]
   455c8:	mov	r0, r5
   455cc:	bl	199c <Mat_Rewind@plt>
   455d0:	mov	r0, r5
   455d4:	bl	44ef8 <Mat_VarReadNextInfo4>
   455d8:	cmp	r4, #0
   455dc:	beq	455fc <Mat_Open+0x2a8>
   455e0:	cmp	r0, #0
   455e4:	bne	455fc <Mat_Open+0x2a8>
   455e8:	mov	r0, r5
   455ec:	bl	19c0 <Mat_Close@plt>
   455f0:	ldr	r0, [pc, #172]	; 456a4 <Mat_Open+0x350>
   455f4:	add	r0, pc, r0
   455f8:	b	4564c <Mat_Open+0x2f8>
   455fc:	bl	1930 <Mat_VarFree@plt>
   45600:	mov	r0, r5
   45604:	bl	199c <Mat_Rewind@plt>
   45608:	ldr	r0, [pc, #140]	; 4569c <Mat_Open+0x348>
   4560c:	mov	r1, r8
   45610:	add	r0, pc, r0
   45614:	bl	1de4 <strdup_printf>
   45618:	str	r0, [r5, #12]
   4561c:	str	r9, [r5, #24]
   45620:	ldr	r0, [r5, #16]
   45624:	cmp	r0, #512	; 0x200
   45628:	bne	4551c <Mat_Open+0x1c8>
   4562c:	ldr	r0, [r5]
   45630:	bl	19e4 <fclose@plt>
   45634:	mov	r0, #0
   45638:	str	r0, [r5]
   4563c:	mov	r0, r5
   45640:	bl	19c0 <Mat_Close@plt>
   45644:	ldr	r0, [pc, #84]	; 456a0 <Mat_Open+0x34c>
   45648:	add	r0, pc, r0
   4564c:	mov	r1, r8
   45650:	bl	19cc <Mat_Critical@plt>
   45654:	b	45518 <Mat_Open+0x1c4>
   45658:	ldr	r0, [r5, #4]
   4565c:	bl	181c <free@plt>
   45660:	ldr	r0, [r5, #8]
   45664:	bl	181c <free@plt>
   45668:	mov	r0, r5
   4566c:	bl	181c <free@plt>
   45670:	mov	r0, r7
   45674:	bl	19e4 <fclose@plt>
   45678:	ldr	r0, [pc, #24]	; 45698 <Mat_Open+0x344>
   4567c:	add	r0, pc, r0
   45680:	b	45514 <Mat_Open+0x1c0>
   45684:	.word	0x00004ef4
   45688:	.word	0x00004c50
   4568c:	.word	0x00004ed7
   45690:	.word	0x00004d87
   45694:	.word	0x00004d94
   45698:	.word	0x0000463c
   4569c:	.word	0x00004ff3
   456a0:	.word	0x00004cbe
   456a4:	.word	0x00004ce8

000456a8 <Mat_Rewind>:
   456a8:	push	{r4, sl, fp, lr}
   456ac:	add	fp, sp, #8
   456b0:	ldr	r1, [r0, #16]
   456b4:	cmp	r1, #16
   456b8:	beq	456e0 <Mat_Rewind+0x38>
   456bc:	cmp	r1, #512	; 0x200
   456c0:	beq	456f8 <Mat_Rewind+0x50>
   456c4:	mvn	r4, #0
   456c8:	cmp	r1, #256	; 0x100
   456cc:	bne	45700 <Mat_Rewind+0x58>
   456d0:	ldr	r0, [r0]
   456d4:	mov	r4, #0
   456d8:	mov	r1, #128	; 0x80
   456dc:	b	456ec <Mat_Rewind+0x44>
   456e0:	ldr	r0, [r0]
   456e4:	mov	r4, #0
   456e8:	mov	r1, #0
   456ec:	mov	r2, #0
   456f0:	bl	1a68 <fseek@plt>
   456f4:	b	45700 <Mat_Rewind+0x58>
   456f8:	mov	r4, #0
   456fc:	str	r4, [r0, #32]
   45700:	mov	r0, r4
   45704:	pop	{r4, sl, fp, pc}

00045708 <Mat_Close>:
   45708:	cmp	r0, #0
   4570c:	beq	457b0 <Mat_Close+0xa8>
   45710:	push	{r4, r5, fp, lr}
   45714:	add	fp, sp, #8
   45718:	mov	r4, r0
   4571c:	ldr	r0, [r0]
   45720:	cmp	r0, #0
   45724:	beq	4572c <Mat_Close+0x24>
   45728:	bl	19e4 <fclose@plt>
   4572c:	ldr	r0, [r4, #4]
   45730:	cmp	r0, #0
   45734:	beq	4573c <Mat_Close+0x34>
   45738:	bl	181c <free@plt>
   4573c:	ldr	r0, [r4, #8]
   45740:	cmp	r0, #0
   45744:	beq	4574c <Mat_Close+0x44>
   45748:	bl	181c <free@plt>
   4574c:	ldr	r0, [r4, #12]
   45750:	cmp	r0, #0
   45754:	beq	4575c <Mat_Close+0x54>
   45758:	bl	181c <free@plt>
   4575c:	ldr	r0, [r4, #40]	; 0x28
   45760:	cmp	r0, #0
   45764:	beq	457a4 <Mat_Close+0x9c>
   45768:	ldr	r2, [r4, #36]	; 0x24
   4576c:	cmp	r2, #0
   45770:	beq	457a0 <Mat_Close+0x98>
   45774:	mov	r5, #0
   45778:	ldr	r1, [r0, r5, lsl #2]
   4577c:	cmp	r1, #0
   45780:	beq	45794 <Mat_Close+0x8c>
   45784:	mov	r0, r1
   45788:	bl	181c <free@plt>
   4578c:	ldr	r2, [r4, #36]	; 0x24
   45790:	ldr	r0, [r4, #40]	; 0x28
   45794:	add	r5, r5, #1
   45798:	cmp	r5, r2
   4579c:	bcc	45778 <Mat_Close+0x70>
   457a0:	bl	181c <free@plt>
   457a4:	mov	r0, r4
   457a8:	bl	181c <free@plt>
   457ac:	pop	{r4, r5, fp, lr}
   457b0:	mov	r0, #0
   457b4:	bx	lr

000457b8 <Mat_VarFree>:
   457b8:	cmp	r0, #0
   457bc:	bxeq	lr
   457c0:	push	{r4, r5, r6, sl, fp, lr}
   457c4:	add	fp, sp, #16
   457c8:	mov	r4, r0
   457cc:	ldr	r0, [r0, #32]
   457d0:	cmp	r0, #0
   457d4:	beq	4580c <Mat_VarFree+0x54>
   457d8:	ldr	r1, [r4, #4]
   457dc:	mov	r6, #1
   457e0:	cmp	r1, #1
   457e4:	blt	45818 <Mat_VarFree+0x60>
   457e8:	mov	r2, #0
   457ec:	ldr	r3, [r0, r2, lsl #2]
   457f0:	umull	r6, r3, r6, r3
   457f4:	cmp	r3, #0
   457f8:	bne	45814 <Mat_VarFree+0x5c>
   457fc:	add	r2, r2, #1
   45800:	cmp	r2, r1
   45804:	blt	457ec <Mat_VarFree+0x34>
   45808:	b	45818 <Mat_VarFree+0x60>
   4580c:	mov	r6, #0
   45810:	b	4581c <Mat_VarFree+0x64>
   45814:	mov	r6, #0
   45818:	bl	181c <free@plt>
   4581c:	ldr	r5, [r4, #40]	; 0x28
   45820:	cmp	r5, #0
   45824:	beq	458b4 <Mat_VarFree+0xfc>
   45828:	ldr	r0, [r4, #16]
   4582c:	sub	r0, r0, #1
   45830:	cmp	r0, #15
   45834:	bhi	458b4 <Mat_VarFree+0xfc>
   45838:	add	r1, pc, #4
   4583c:	ldr	r0, [r1, r0, lsl #2]
   45840:	add	pc, r1, r0
   45844:	.word	0x00000120
   45848:	.word	0x00000148
   4584c:	.word	0x00000070
   45850:	.word	0x00000040
   45854:	.word	0x00000188
   45858:	.word	0x00000040
   4585c:	.word	0x00000040
   45860:	.word	0x00000040
   45864:	.word	0x00000040
   45868:	.word	0x00000040
   4586c:	.word	0x00000040
   45870:	.word	0x00000040
   45874:	.word	0x00000040
   45878:	.word	0x00000040
   4587c:	.word	0x00000040
   45880:	.word	0x000001e0
   45884:	ldr	r0, [r4, #44]	; 0x2c
   45888:	cmp	r0, #0
   4588c:	bne	458b4 <Mat_VarFree+0xfc>
   45890:	ldr	r0, [r4, #20]
   45894:	cmp	r0, #0
   45898:	beq	458ac <Mat_VarFree+0xf4>
   4589c:	ldr	r0, [r5]
   458a0:	bl	181c <free@plt>
   458a4:	ldr	r0, [r5, #4]
   458a8:	bl	181c <free@plt>
   458ac:	mov	r0, r5
   458b0:	bl	181c <free@plt>
   458b4:	ldr	r0, [r4, #52]	; 0x34
   458b8:	cmp	r0, #0
   458bc:	beq	45aac <Mat_VarFree+0x2f4>
   458c0:	ldr	r1, [r4, #48]	; 0x30
   458c4:	cmp	r1, #1
   458c8:	bne	45a4c <Mat_VarFree+0x294>
   458cc:	ldr	r0, [r0, #12]
   458d0:	bl	1954 <inflateEnd@plt>
   458d4:	ldr	r0, [r4, #52]	; 0x34
   458d8:	ldr	r0, [r0, #12]
   458dc:	bl	181c <free@plt>
   458e0:	ldr	r0, [r4, #52]	; 0x34
   458e4:	ldr	r5, [r0, #16]
   458e8:	cmp	r5, #0
   458ec:	beq	45a4c <Mat_VarFree+0x294>
   458f0:	ldr	r0, [r4, #16]
   458f4:	cmp	r0, #5
   458f8:	bne	45948 <Mat_VarFree+0x190>
   458fc:	ldr	r0, [r5, #4]
   45900:	cmp	r0, #0
   45904:	beq	4590c <Mat_VarFree+0x154>
   45908:	bl	181c <free@plt>
   4590c:	ldr	r0, [r5, #12]
   45910:	cmp	r0, #0
   45914:	beq	4591c <Mat_VarFree+0x164>
   45918:	bl	181c <free@plt>
   4591c:	ldr	r0, [r4, #20]
   45920:	ldr	r6, [r5, #24]
   45924:	cmp	r0, #0
   45928:	beq	45a34 <Mat_VarFree+0x27c>
   4592c:	cmp	r6, #0
   45930:	beq	45a44 <Mat_VarFree+0x28c>
   45934:	ldr	r0, [r6]
   45938:	bl	181c <free@plt>
   4593c:	ldr	r0, [r6, #4]
   45940:	bl	181c <free@plt>
   45944:	b	45a3c <Mat_VarFree+0x284>
   45948:	ldr	r0, [r4, #20]
   4594c:	cmp	r0, #0
   45950:	beq	45a44 <Mat_VarFree+0x28c>
   45954:	ldr	r0, [r5]
   45958:	bl	181c <free@plt>
   4595c:	ldr	r0, [r5, #4]
   45960:	b	45a40 <Mat_VarFree+0x288>
   45964:	ldr	r0, [r4, #44]	; 0x2c
   45968:	cmp	r0, #0
   4596c:	bne	458b4 <Mat_VarFree+0xfc>
   45970:	cmp	r6, #0
   45974:	beq	458ac <Mat_VarFree+0xf4>
   45978:	ldr	r0, [r5], #4
   4597c:	bl	1930 <Mat_VarFree@plt>
   45980:	subs	r6, r6, #1
   45984:	bne	45978 <Mat_VarFree+0x1c0>
   45988:	b	459c4 <Mat_VarFree+0x20c>
   4598c:	ldr	r0, [r4, #44]	; 0x2c
   45990:	cmp	r0, #0
   45994:	bne	458b4 <Mat_VarFree+0xfc>
   45998:	ldr	r0, [r4, #52]	; 0x34
   4599c:	ldr	r0, [r0, #4]
   459a0:	umull	r6, r0, r6, r0
   459a4:	cmp	r0, #0
   459a8:	bne	458ac <Mat_VarFree+0xf4>
   459ac:	cmp	r6, #0
   459b0:	beq	458ac <Mat_VarFree+0xf4>
   459b4:	ldr	r0, [r5], #4
   459b8:	bl	1930 <Mat_VarFree@plt>
   459bc:	subs	r6, r6, #1
   459c0:	bne	459b4 <Mat_VarFree+0x1fc>
   459c4:	ldr	r5, [r4, #40]	; 0x28
   459c8:	b	458ac <Mat_VarFree+0xf4>
   459cc:	ldr	r0, [r4, #44]	; 0x2c
   459d0:	cmp	r0, #0
   459d4:	bne	458b4 <Mat_VarFree+0xfc>
   459d8:	ldr	r0, [r5, #4]
   459dc:	cmp	r0, #0
   459e0:	beq	459e8 <Mat_VarFree+0x230>
   459e4:	bl	181c <free@plt>
   459e8:	ldr	r0, [r5, #12]
   459ec:	cmp	r0, #0
   459f0:	beq	459f8 <Mat_VarFree+0x240>
   459f4:	bl	181c <free@plt>
   459f8:	ldr	r0, [r4, #20]
   459fc:	ldr	r6, [r5, #24]
   45a00:	cmp	r0, #0
   45a04:	beq	45ac8 <Mat_VarFree+0x310>
   45a08:	cmp	r6, #0
   45a0c:	beq	458ac <Mat_VarFree+0xf4>
   45a10:	ldr	r0, [r6]
   45a14:	bl	181c <free@plt>
   45a18:	ldr	r0, [r6, #4]
   45a1c:	bl	181c <free@plt>
   45a20:	b	45ad0 <Mat_VarFree+0x318>
   45a24:	ldr	r0, [r4, #44]	; 0x2c
   45a28:	cmp	r0, #0
   45a2c:	bne	458b4 <Mat_VarFree+0xfc>
   45a30:	b	458ac <Mat_VarFree+0xf4>
   45a34:	cmp	r6, #0
   45a38:	beq	45a44 <Mat_VarFree+0x28c>
   45a3c:	mov	r0, r6
   45a40:	bl	181c <free@plt>
   45a44:	mov	r0, r5
   45a48:	bl	181c <free@plt>
   45a4c:	ldr	r0, [r4, #52]	; 0x34
   45a50:	ldr	r1, [r0, #8]
   45a54:	cmp	r1, #0
   45a58:	ldrne	r2, [r0, #4]
   45a5c:	cmpne	r2, #0
   45a60:	beq	45aa0 <Mat_VarFree+0x2e8>
   45a64:	mov	r5, #0
   45a68:	ldr	r1, [r1, r5, lsl #2]
   45a6c:	cmp	r1, #0
   45a70:	beq	45a80 <Mat_VarFree+0x2c8>
   45a74:	mov	r0, r1
   45a78:	bl	181c <free@plt>
   45a7c:	ldr	r0, [r4, #52]	; 0x34
   45a80:	ldr	r2, [r0, #4]
   45a84:	ldr	r1, [r0, #8]
   45a88:	add	r5, r5, #1
   45a8c:	cmp	r5, r2
   45a90:	bcc	45a68 <Mat_VarFree+0x2b0>
   45a94:	mov	r0, r1
   45a98:	bl	181c <free@plt>
   45a9c:	ldr	r0, [r4, #52]	; 0x34
   45aa0:	bl	181c <free@plt>
   45aa4:	mov	r0, #0
   45aa8:	str	r0, [r4, #52]	; 0x34
   45aac:	ldr	r0, [r4, #36]	; 0x24
   45ab0:	cmp	r0, #0
   45ab4:	beq	45abc <Mat_VarFree+0x304>
   45ab8:	bl	181c <free@plt>
   45abc:	mov	r0, r4
   45ac0:	pop	{r4, r5, r6, sl, fp, lr}
   45ac4:	b	181c <free@plt>
   45ac8:	cmp	r6, #0
   45acc:	beq	458ac <Mat_VarFree+0xf4>
   45ad0:	mov	r0, r6
   45ad4:	b	458a8 <Mat_VarFree+0xf0>

00045ad8 <Mat_GetFilename>:
   45ad8:	cmp	r0, #0
   45adc:	ldrne	r0, [r0, #12]
   45ae0:	moveq	r0, #0
   45ae4:	bx	lr

00045ae8 <Mat_GetHeader>:
   45ae8:	cmp	r0, #0
   45aec:	ldrne	r0, [r0, #4]
   45af0:	moveq	r0, #0
   45af4:	bx	lr

00045af8 <Mat_GetVersion>:
   45af8:	cmp	r0, #0
   45afc:	ldrne	r0, [r0, #16]
   45b00:	moveq	r0, #0
   45b04:	bx	lr

00045b08 <Mat_GetDir>:
   45b08:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   45b0c:	add	fp, sp, #24
   45b10:	cmp	r1, #0
   45b14:	beq	45b78 <Mat_GetDir+0x70>
   45b18:	mov	r4, r1
   45b1c:	mov	r5, r0
   45b20:	cmp	r0, #0
   45b24:	beq	45c0c <Mat_GetDir+0x104>
   45b28:	ldr	r0, [r5, #40]	; 0x28
   45b2c:	ldr	r1, [r5, #16]
   45b30:	cmp	r0, #0
   45b34:	beq	45b80 <Mat_GetDir+0x78>
   45b38:	cmp	r1, #512	; 0x200
   45b3c:	bne	45d5c <Mat_GetDir+0x254>
   45b40:	mov	r1, #0
   45b44:	str	r1, [r4]
   45b48:	ldr	r2, [r5, #36]	; 0x24
   45b4c:	cmp	r2, #0
   45b50:	beq	45d64 <Mat_GetDir+0x25c>
   45b54:	ldr	r2, [r0, r1, lsl #2]
   45b58:	cmp	r2, #0
   45b5c:	beq	45d64 <Mat_GetDir+0x25c>
   45b60:	add	r1, r1, #1
   45b64:	str	r1, [r4]
   45b68:	ldr	r2, [r5, #36]	; 0x24
   45b6c:	cmp	r1, r2
   45b70:	bcc	45b54 <Mat_GetDir+0x4c>
   45b74:	b	45d64 <Mat_GetDir+0x25c>
   45b78:	mov	r5, #0
   45b7c:	b	45d68 <Mat_GetDir+0x260>
   45b80:	cmp	r1, #512	; 0x200
   45b84:	bne	45c18 <Mat_GetDir+0x110>
   45b88:	ldr	r0, [r5, #36]	; 0x24
   45b8c:	cmp	r0, #0
   45b90:	beq	45c0c <Mat_GetDir+0x104>
   45b94:	ldr	r8, [r5, #32]
   45b98:	mov	r1, #4
   45b9c:	bl	17b0 <calloc@plt>
   45ba0:	cmp	r0, #0
   45ba4:	str	r0, [r5, #40]	; 0x28
   45ba8:	beq	45d04 <Mat_GetDir+0x1fc>
   45bac:	mov	r6, #0
   45bb0:	str	r6, [r5, #32]
   45bb4:	ldr	r9, [pc, #440]	; 45d74 <Mat_GetDir+0x26c>
   45bb8:	add	r9, pc, r9
   45bbc:	mov	r0, r5
   45bc0:	bl	1a8c <Mat_VarReadNextInfo@plt>
   45bc4:	cmp	r0, #0
   45bc8:	beq	45d1c <Mat_GetDir+0x214>
   45bcc:	ldr	r1, [r0, #36]	; 0x24
   45bd0:	mov	r7, r0
   45bd4:	cmp	r1, #0
   45bd8:	beq	45bf0 <Mat_GetDir+0xe8>
   45bdc:	mov	r0, r9
   45be0:	bl	1de4 <strdup_printf>
   45be4:	ldr	r1, [r5, #40]	; 0x28
   45be8:	str	r0, [r1, r6, lsl #2]
   45bec:	add	r6, r6, #1
   45bf0:	mov	r0, r7
   45bf4:	bl	1930 <Mat_VarFree@plt>
   45bf8:	ldr	r0, [r5, #32]
   45bfc:	ldr	r1, [r5, #36]	; 0x24
   45c00:	cmp	r0, r1
   45c04:	bcc	45bbc <Mat_GetDir+0xb4>
   45c08:	b	45d28 <Mat_GetDir+0x220>
   45c0c:	mov	r5, #0
   45c10:	str	r5, [r4]
   45c14:	b	45d68 <Mat_GetDir+0x260>
   45c18:	ldr	r0, [r5]
   45c1c:	bl	1858 <ftell@plt>
   45c20:	cmn	r0, #1
   45c24:	beq	45cf0 <Mat_GetDir+0x1e8>
   45c28:	mov	r8, r0
   45c2c:	ldr	r0, [r5]
   45c30:	ldr	r1, [r5, #28]
   45c34:	mov	r2, #0
   45c38:	mov	r6, #0
   45c3c:	bl	1a68 <fseek@plt>
   45c40:	str	r6, [r5, #36]	; 0x24
   45c44:	mov	r9, #4
   45c48:	ldr	r7, [pc, #300]	; 45d7c <Mat_GetDir+0x274>
   45c4c:	add	r7, pc, r7
   45c50:	mov	r0, r5
   45c54:	bl	1a8c <Mat_VarReadNextInfo@plt>
   45c58:	cmp	r0, #0
   45c5c:	beq	45c8c <Mat_GetDir+0x184>
   45c60:	mov	r6, r0
   45c64:	ldr	r0, [r0, #36]	; 0x24
   45c68:	cmp	r0, #0
   45c6c:	beq	45cd4 <Mat_GetDir+0x1cc>
   45c70:	ldr	r0, [r5, #40]	; 0x28
   45c74:	cmp	r0, #0
   45c78:	beq	45ca0 <Mat_GetDir+0x198>
   45c7c:	ldr	r1, [r5, #36]	; 0x24
   45c80:	add	r1, r9, r1, lsl #2
   45c84:	bl	1888 <realloc@plt>
   45c88:	b	45ca8 <Mat_GetDir+0x1a0>
   45c8c:	ldr	r0, [r5]
   45c90:	bl	1924 <feof@plt>
   45c94:	cmp	r0, #0
   45c98:	bne	45cdc <Mat_GetDir+0x1d4>
   45c9c:	b	45d34 <Mat_GetDir+0x22c>
   45ca0:	mov	r0, #4
   45ca4:	bl	18e8 <malloc@plt>
   45ca8:	cmp	r0, #0
   45cac:	beq	45d40 <Mat_GetDir+0x238>
   45cb0:	str	r0, [r5, #40]	; 0x28
   45cb4:	mov	r0, r7
   45cb8:	ldr	r1, [r6, #36]	; 0x24
   45cbc:	bl	1de4 <strdup_printf>
   45cc0:	ldr	r1, [r5, #36]	; 0x24
   45cc4:	ldr	r2, [r5, #40]	; 0x28
   45cc8:	add	r3, r1, #1
   45ccc:	str	r3, [r5, #36]	; 0x24
   45cd0:	str	r0, [r2, r1, lsl #2]
   45cd4:	mov	r0, r6
   45cd8:	bl	1930 <Mat_VarFree@plt>
   45cdc:	ldr	r0, [r5]
   45ce0:	bl	1924 <feof@plt>
   45ce4:	cmp	r0, #0
   45ce8:	beq	45c50 <Mat_GetDir+0x148>
   45cec:	b	45d4c <Mat_GetDir+0x244>
   45cf0:	mov	r5, #0
   45cf4:	str	r5, [r4]
   45cf8:	ldr	r0, [pc, #132]	; 45d84 <Mat_GetDir+0x27c>
   45cfc:	add	r0, pc, r0
   45d00:	b	45d14 <Mat_GetDir+0x20c>
   45d04:	mov	r5, #0
   45d08:	str	r5, [r4]
   45d0c:	ldr	r0, [pc, #92]	; 45d70 <Mat_GetDir+0x268>
   45d10:	add	r0, pc, r0
   45d14:	bl	19cc <Mat_Critical@plt>
   45d18:	b	45d68 <Mat_GetDir+0x260>
   45d1c:	ldr	r0, [pc, #84]	; 45d78 <Mat_GetDir+0x270>
   45d20:	add	r0, pc, r0
   45d24:	bl	19cc <Mat_Critical@plt>
   45d28:	str	r8, [r5, #32]
   45d2c:	str	r6, [r4]
   45d30:	b	45d64 <Mat_GetDir+0x25c>
   45d34:	ldr	r0, [pc, #68]	; 45d80 <Mat_GetDir+0x278>
   45d38:	add	r0, pc, r0
   45d3c:	b	45d48 <Mat_GetDir+0x240>
   45d40:	ldr	r0, [pc, #64]	; 45d88 <Mat_GetDir+0x280>
   45d44:	add	r0, pc, r0
   45d48:	bl	19cc <Mat_Critical@plt>
   45d4c:	ldr	r0, [r5]
   45d50:	mov	r1, r8
   45d54:	mov	r2, #0
   45d58:	bl	1a68 <fseek@plt>
   45d5c:	ldr	r0, [r5, #36]	; 0x24
   45d60:	str	r0, [r4]
   45d64:	ldr	r5, [r5, #40]	; 0x28
   45d68:	mov	r0, r5
   45d6c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   45d70:	.word	0x00004637
   45d74:	.word	0x00004a4b
   45d78:	.word	0x00004224
   45d7c:	.word	0x000049b7
   45d80:	.word	0x0000420c
   45d84:	.word	0x00003fbc
   45d88:	.word	0x00004603

00045d8c <Mat_VarReadNextInfo>:
   45d8c:	cmp	r0, #0
   45d90:	beq	45dac <Mat_VarReadNextInfo+0x20>
   45d94:	ldr	r1, [r0, #16]
   45d98:	cmp	r1, #16
   45d9c:	beq	45db4 <Mat_VarReadNextInfo+0x28>
   45da0:	cmp	r1, #256	; 0x100
   45da4:	bne	45dac <Mat_VarReadNextInfo+0x20>
   45da8:	b	415ec <Mat_VarReadNextInfo5>
   45dac:	mov	r0, #0
   45db0:	bx	lr
   45db4:	b	44ef8 <Mat_VarReadNextInfo4>

00045db8 <Mat_SizeOfClass>:
   45db8:	sub	r0, r0, #4
   45dbc:	cmp	r0, #11
   45dc0:	ldrls	r1, [pc, #12]	; 45dd4 <Mat_SizeOfClass+0x1c>
   45dc4:	movhi	r0, #0
   45dc8:	addls	r1, pc, r1
   45dcc:	ldrls	r0, [r1, r0, lsl #2]
   45dd0:	bx	lr
   45dd4:	.word	0x00004c10

00045dd8 <Mat_VarCalloc>:
   45dd8:	push	{r4, r5, r6, sl, fp, lr}
   45ddc:	add	fp, sp, #16
   45de0:	vpush	{d8-d9}
   45de4:	mov	r0, #56	; 0x38
   45de8:	bl	18e8 <malloc@plt>
   45dec:	mov	r4, r0
   45df0:	cmp	r0, #0
   45df4:	beq	45e4c <Mat_VarCalloc+0x74>
   45df8:	vmov.i32	q4, #0	; 0x00000000
   45dfc:	add	r0, r4, #32
   45e00:	mov	r6, r4
   45e04:	mov	r5, #0
   45e08:	vst1.32	{d8-d9}, [r0]
   45e0c:	add	r0, r4, #16
   45e10:	str	r5, [r4, #48]	; 0x30
   45e14:	vst1.32	{d8-d9}, [r0]
   45e18:	mov	r0, #52	; 0x34
   45e1c:	vst1.32	{d8-d9}, [r6], r0
   45e20:	mov	r0, #20
   45e24:	bl	18e8 <malloc@plt>
   45e28:	cmp	r0, #0
   45e2c:	str	r0, [r6]
   45e30:	beq	45e40 <Mat_VarCalloc+0x68>
   45e34:	vst1.32	{d8-d9}, [r0]!
   45e38:	str	r5, [r0]
   45e3c:	b	45e4c <Mat_VarCalloc+0x74>
   45e40:	mov	r0, r4
   45e44:	bl	181c <free@plt>
   45e48:	mov	r4, #0
   45e4c:	mov	r0, r4
   45e50:	vpop	{d8-d9}
   45e54:	pop	{r4, r5, r6, sl, fp, pc}

00045e58 <Mat_VarCreate>:
   45e58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   45e5c:	add	fp, sp, #28
   45e60:	sub	sp, sp, #4
   45e64:	ldr	r8, [fp, #8]
   45e68:	mov	r4, #0
   45e6c:	cmp	r8, #0
   45e70:	beq	462a8 <Mat_VarCreate+0x450>
   45e74:	mov	r6, r3
   45e78:	mov	r5, r2
   45e7c:	mov	r9, r1
   45e80:	mov	r7, r0
   45e84:	bl	18b8 <Mat_VarCalloc@plt>
   45e88:	cmp	r0, #0
   45e8c:	beq	462a8 <Mat_VarCreate+0x450>
   45e90:	ldr	r2, [fp, #16]
   45e94:	mov	r4, r0
   45e98:	mov	r0, #0
   45e9c:	cmp	r7, #0
   45ea0:	str	r0, [r4, #48]	; 0x30
   45ea4:	add	r3, r4, #20
   45ea8:	and	r0, r2, #2048	; 0x800
   45eac:	and	r1, r2, #1024	; 0x400
   45eb0:	and	r2, r2, #512	; 0x200
   45eb4:	stm	r3, {r0, r1, r2}
   45eb8:	beq	45ed0 <Mat_VarCreate+0x78>
   45ebc:	ldr	r0, [pc, #1008]	; 462b4 <Mat_VarCreate+0x45c>
   45ec0:	mov	r1, r7
   45ec4:	add	r0, pc, r0
   45ec8:	bl	1de4 <strdup_printf>
   45ecc:	str	r0, [r4, #36]	; 0x24
   45ed0:	lsl	r0, r6, #2
   45ed4:	str	r6, [r4, #4]
   45ed8:	bl	18e8 <malloc@plt>
   45edc:	mov	sl, #1
   45ee0:	cmp	r6, #1
   45ee4:	mov	r7, #1
   45ee8:	str	r0, [r4, #32]
   45eec:	blt	45f10 <Mat_VarCreate+0xb8>
   45ef0:	mov	r7, #1
   45ef4:	mov	r1, #0
   45ef8:	ldr	r2, [r8, r1, lsl #2]
   45efc:	str	r2, [r0, r1, lsl #2]
   45f00:	add	r1, r1, #1
   45f04:	mul	r7, r2, r7
   45f08:	cmp	r1, r6
   45f0c:	blt	45ef8 <Mat_VarCreate+0xa0>
   45f10:	sub	r0, r5, #1
   45f14:	str	r5, [r4, #8]
   45f18:	str	r9, [r4, #16]
   45f1c:	cmp	r0, #21
   45f20:	bhi	4619c <Mat_VarCreate+0x344>
   45f24:	add	r1, pc, #8
   45f28:	ldr	r8, [fp, #12]
   45f2c:	ldr	r0, [r1, r0, lsl #2]
   45f30:	add	pc, r1, r0
   45f34:	.word	0x0000006c
   45f38:	.word	0x0000006c
   45f3c:	.word	0x00000060
   45f40:	.word	0x00000060
   45f44:	.word	0x00000058
   45f48:	.word	0x00000058
   45f4c:	.word	0x00000058
   45f50:	.word	0x00000268
   45f54:	.word	0x00000068
   45f58:	.word	0x00000268
   45f5c:	.word	0x00000268
   45f60:	.word	0x00000068
   45f64:	.word	0x00000068
   45f68:	.word	0x00000268
   45f6c:	.word	0x00000268
   45f70:	.word	0x0000006c
   45f74:	.word	0x00000060
   45f78:	.word	0x00000058
   45f7c:	.word	0x00000268
   45f80:	.word	0x00000268
   45f84:	.word	0x00000058
   45f88:	.word	0x00000284
   45f8c:	mov	sl, #4
   45f90:	b	45fa0 <Mat_VarCreate+0x148>
   45f94:	mov	sl, #2
   45f98:	b	45fa0 <Mat_VarCreate+0x148>
   45f9c:	mov	sl, #8
   45fa0:	cmp	r9, #5
   45fa4:	bne	45fb4 <Mat_VarCreate+0x15c>
   45fa8:	mov	r5, #28
   45fac:	str	r5, [r4, #12]
   45fb0:	b	45fcc <Mat_VarCreate+0x174>
   45fb4:	umull	r5, r0, r7, sl
   45fb8:	str	sl, [r4, #12]
   45fbc:	cmp	r0, #0
   45fc0:	movwne	r0, #1
   45fc4:	cmp	r0, #0
   45fc8:	movwne	r5, #0
   45fcc:	cmp	r8, #0
   45fd0:	str	r5, [r4]
   45fd4:	beq	460f0 <Mat_VarCreate+0x298>
   45fd8:	ldr	r0, [fp, #16]
   45fdc:	tst	r0, #1
   45fe0:	bne	46110 <Mat_VarCreate+0x2b8>
   45fe4:	cmp	r9, #5
   45fe8:	bne	46128 <Mat_VarCreate+0x2d0>
   45fec:	mov	r0, #28
   45ff0:	bl	18e8 <malloc@plt>
   45ff4:	mov	r6, r0
   45ff8:	cmp	r0, #0
   45ffc:	beq	462a4 <Mat_VarCreate+0x44c>
   46000:	ldr	r7, [fp, #12]
   46004:	ldr	r0, [r7]
   46008:	str	r0, [r6]
   4600c:	ldr	r0, [r7, #8]
   46010:	str	r0, [r6, #8]
   46014:	lsl	r5, r0, #2
   46018:	ldr	r9, [r7, #16]
   4601c:	ldr	r8, [r7, #20]
   46020:	mov	r0, r5
   46024:	str	r9, [r6, #16]
   46028:	str	r8, [r6, #20]
   4602c:	bl	18e8 <malloc@plt>
   46030:	cmp	r0, #0
   46034:	str	r0, [r6, #4]
   46038:	beq	46048 <Mat_VarCreate+0x1f0>
   4603c:	ldr	r1, [r7, #4]
   46040:	mov	r2, r5
   46044:	bl	1834 <memcpy@plt>
   46048:	lsl	r5, r9, #2
   4604c:	mov	r0, r5
   46050:	bl	18e8 <malloc@plt>
   46054:	cmp	r0, #0
   46058:	str	r0, [r6, #12]
   4605c:	beq	46070 <Mat_VarCreate+0x218>
   46060:	ldr	r1, [fp, #12]
   46064:	mov	r2, r5
   46068:	ldr	r1, [r1, #12]
   4606c:	bl	1834 <memcpy@plt>
   46070:	ldr	r0, [r4, #20]
   46074:	cmp	r0, #0
   46078:	beq	4627c <Mat_VarCreate+0x424>
   4607c:	mov	r0, #8
   46080:	bl	18e8 <malloc@plt>
   46084:	cmp	r0, #0
   46088:	str	r0, [r6, #24]
   4608c:	beq	462a4 <Mat_VarCreate+0x44c>
   46090:	mov	r5, r0
   46094:	ldr	r0, [fp, #12]
   46098:	mul	r9, r8, sl
   4609c:	ldr	sl, [r0, #24]
   460a0:	mov	r0, r9
   460a4:	bl	18e8 <malloc@plt>
   460a8:	mov	r7, r0
   460ac:	str	r0, [r5]
   460b0:	mov	r0, r9
   460b4:	bl	18e8 <malloc@plt>
   460b8:	mov	r8, r0
   460bc:	cmp	r7, #0
   460c0:	str	r0, [r5, #4]
   460c4:	beq	460d8 <Mat_VarCreate+0x280>
   460c8:	ldr	r1, [sl]
   460cc:	mov	r0, r7
   460d0:	mov	r2, r9
   460d4:	bl	1834 <memcpy@plt>
   460d8:	cmp	r8, #0
   460dc:	beq	462a4 <Mat_VarCreate+0x44c>
   460e0:	ldr	r1, [sl, #4]
   460e4:	mov	r0, r8
   460e8:	mov	r2, r9
   460ec:	b	462a0 <Mat_VarCreate+0x448>
   460f0:	cmp	r9, #1
   460f4:	bne	4611c <Mat_VarCreate+0x2c4>
   460f8:	cmp	r7, #0
   460fc:	beq	4611c <Mat_VarCreate+0x2c4>
   46100:	mov	r0, r7
   46104:	mov	r1, #4
   46108:	bl	17b0 <calloc@plt>
   4610c:	b	46120 <Mat_VarCreate+0x2c8>
   46110:	mov	r0, #1
   46114:	str	r8, [r4, #40]	; 0x28
   46118:	b	46274 <Mat_VarCreate+0x41c>
   4611c:	mov	r0, #0
   46120:	str	r0, [r4, #40]	; 0x28
   46124:	b	462a8 <Mat_VarCreate+0x450>
   46128:	ldr	r0, [r4, #20]
   4612c:	cmp	r0, #0
   46130:	beq	46248 <Mat_VarCreate+0x3f0>
   46134:	mov	r0, #8
   46138:	bl	18e8 <malloc@plt>
   4613c:	cmp	r0, #0
   46140:	str	r0, [r4, #40]	; 0x28
   46144:	cmpne	r5, #0
   46148:	beq	46270 <Mat_VarCreate+0x418>
   4614c:	mov	r6, r0
   46150:	mov	r0, r5
   46154:	bl	18e8 <malloc@plt>
   46158:	mov	r7, r0
   4615c:	str	r0, [r6]
   46160:	mov	r0, r5
   46164:	bl	18e8 <malloc@plt>
   46168:	mov	r9, r0
   4616c:	cmp	r7, #0
   46170:	str	r0, [r6, #4]
   46174:	beq	46188 <Mat_VarCreate+0x330>
   46178:	ldr	r1, [r8]
   4617c:	mov	r0, r7
   46180:	mov	r2, r5
   46184:	bl	1834 <memcpy@plt>
   46188:	cmp	r9, #0
   4618c:	beq	46270 <Mat_VarCreate+0x418>
   46190:	ldr	r1, [r8, #4]
   46194:	mov	r0, r9
   46198:	b	46268 <Mat_VarCreate+0x410>
   4619c:	mov	r0, r4
   461a0:	bl	1930 <Mat_VarFree@plt>
   461a4:	ldr	r0, [pc, #268]	; 462b8 <Mat_VarCreate+0x460>
   461a8:	add	r0, pc, r0
   461ac:	bl	19cc <Mat_Critical@plt>
   461b0:	mov	r4, #0
   461b4:	b	462a8 <Mat_VarCreate+0x450>
   461b8:	mov	sl, #4
   461bc:	cmp	r8, #0
   461c0:	beq	45fa0 <Mat_VarCreate+0x148>
   461c4:	mov	r0, #0
   461c8:	ldr	r1, [r8, r0, lsl #2]
   461cc:	add	r0, r0, #1
   461d0:	cmp	r1, #0
   461d4:	bne	461c8 <Mat_VarCreate+0x370>
   461d8:	ldr	r6, [r4, #52]	; 0x34
   461dc:	sub	r5, r0, #1
   461e0:	cmp	r7, #0
   461e4:	udivne	r5, r5, r7
   461e8:	cmp	r5, #0
   461ec:	str	r5, [r6, #4]
   461f0:	beq	45fa0 <Mat_VarCreate+0x148>
   461f4:	mov	r0, r5
   461f8:	mov	r1, #4
   461fc:	bl	17b0 <calloc@plt>
   46200:	str	r0, [r6, #8]
   46204:	mov	r6, #0
   46208:	ldr	r0, [r8, r6, lsl #2]
   4620c:	ldr	r0, [r0, #36]	; 0x24
   46210:	bl	187c <strdup@plt>
   46214:	ldr	r1, [r4, #52]	; 0x34
   46218:	ldr	r1, [r1, #8]
   4621c:	str	r0, [r1, r6, lsl #2]
   46220:	add	r6, r6, #1
   46224:	cmp	r5, r6
   46228:	bne	46208 <Mat_VarCreate+0x3b0>
   4622c:	umull	r7, r0, r7, r5
   46230:	ldr	r9, [r4, #16]
   46234:	cmp	r0, #0
   46238:	movwne	r0, #1
   4623c:	cmp	r0, #0
   46240:	movwne	r7, #0
   46244:	b	45f8c <Mat_VarCreate+0x134>
   46248:	cmp	r5, #0
   4624c:	beq	46270 <Mat_VarCreate+0x418>
   46250:	mov	r0, r5
   46254:	bl	18e8 <malloc@plt>
   46258:	cmp	r0, #0
   4625c:	str	r0, [r4, #40]	; 0x28
   46260:	beq	46270 <Mat_VarCreate+0x418>
   46264:	mov	r1, r8
   46268:	mov	r2, r5
   4626c:	bl	1834 <memcpy@plt>
   46270:	mov	r0, #0
   46274:	str	r0, [r4, #44]	; 0x2c
   46278:	b	462a8 <Mat_VarCreate+0x450>
   4627c:	mul	r5, r8, sl
   46280:	mov	r0, r5
   46284:	bl	18e8 <malloc@plt>
   46288:	cmp	r0, #0
   4628c:	str	r0, [r6, #24]
   46290:	beq	462a4 <Mat_VarCreate+0x44c>
   46294:	ldr	r1, [fp, #12]
   46298:	mov	r2, r5
   4629c:	ldr	r1, [r1, #24]
   462a0:	bl	1834 <memcpy@plt>
   462a4:	str	r6, [r4, #40]	; 0x28
   462a8:	mov	r0, r4
   462ac:	sub	sp, fp, #28
   462b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   462b4:	.word	0x0000473f
   462b8:	.word	0x000041ca

000462bc <Mat_VarDelete>:
   462bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   462c0:	add	fp, sp, #28
   462c4:	sub	sp, sp, #20
   462c8:	sub	sp, sp, #8192	; 0x2000
   462cc:	mov	r7, r1
   462d0:	ldr	r1, [pc, #1012]	; 466cc <Mat_VarDelete+0x410>
   462d4:	mov	r9, r0
   462d8:	add	r0, sp, #9
   462dc:	mov	r2, #7
   462e0:	add	r1, pc, r1
   462e4:	bl	1834 <memcpy@plt>
   462e8:	cmp	r9, #0
   462ec:	mov	r4, #1
   462f0:	cmpne	r7, #0
   462f4:	bne	46304 <Mat_VarDelete+0x48>
   462f8:	mov	r0, r4
   462fc:	sub	sp, fp, #28
   46300:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   46304:	add	r0, sp, #9
   46308:	bl	1900 <mktemp@plt>
   4630c:	cmp	r0, #0
   46310:	beq	463b4 <Mat_VarDelete+0xf8>
   46314:	mov	r8, r0
   46318:	ldr	r0, [r9, #16]
   4631c:	ldr	r1, [r9, #4]
   46320:	cmp	r0, #512	; 0x200
   46324:	mov	r2, r0
   46328:	movwne	r2, #256	; 0x100
   4632c:	cmp	r0, #16
   46330:	moveq	r2, r0
   46334:	mov	r0, r8
   46338:	bl	19fc <Mat_CreateVer@plt>
   4633c:	cmp	r0, #0
   46340:	beq	462f8 <Mat_VarDelete+0x3c>
   46344:	mov	r6, r0
   46348:	mov	r0, r9
   4634c:	bl	199c <Mat_Rewind@plt>
   46350:	mov	r0, r9
   46354:	bl	17bc <Mat_VarReadNext@plt>
   46358:	cmp	r0, #0
   4635c:	beq	463c4 <Mat_VarDelete+0x108>
   46360:	mov	r4, r0
   46364:	mov	r5, #1
   46368:	ldr	r0, [r4, #36]	; 0x24
   4636c:	mov	r1, r7
   46370:	bl	17c8 <strcmp@plt>
   46374:	cmp	r0, #0
   46378:	beq	46390 <Mat_VarDelete+0xd4>
   4637c:	ldr	r2, [r4, #48]	; 0x30
   46380:	mov	r0, r6
   46384:	mov	r1, r4
   46388:	bl	1840 <Mat_VarWrite@plt>
   4638c:	b	46394 <Mat_VarDelete+0xd8>
   46390:	mov	r5, #0
   46394:	mov	r0, r4
   46398:	bl	1930 <Mat_VarFree@plt>
   4639c:	mov	r0, r9
   463a0:	bl	17bc <Mat_VarReadNext@plt>
   463a4:	mov	r4, r0
   463a8:	cmp	r0, #0
   463ac:	bne	46368 <Mat_VarDelete+0xac>
   463b0:	b	463c8 <Mat_VarDelete+0x10c>
   463b4:	ldr	r0, [pc, #824]	; 466f4 <Mat_VarDelete+0x438>
   463b8:	add	r0, pc, r0
   463bc:	bl	19cc <Mat_Critical@plt>
   463c0:	b	462f8 <Mat_VarDelete+0x3c>
   463c4:	mov	r5, #1
   463c8:	ldr	sl, [r6, #36]	; 0x24
   463cc:	ldr	r7, [r6, #40]	; 0x28
   463d0:	mov	r0, #0
   463d4:	str	r0, [r6, #40]	; 0x28
   463d8:	mov	r0, r6
   463dc:	bl	19c0 <Mat_Close@plt>
   463e0:	cmp	r5, #0
   463e4:	beq	46414 <Mat_VarDelete+0x158>
   463e8:	mov	r0, r8
   463ec:	bl	1a14 <remove@plt>
   463f0:	mov	r4, r0
   463f4:	cmn	r0, #1
   463f8:	bne	462f8 <Mat_VarDelete+0x3c>
   463fc:	ldr	r0, [pc, #748]	; 466f0 <Mat_VarDelete+0x434>
   46400:	mov	r1, r8
   46404:	add	r0, pc, r0
   46408:	bl	19cc <Mat_Critical@plt>
   4640c:	mvn	r4, #0
   46410:	b	462f8 <Mat_VarDelete+0x3c>
   46414:	ldr	r1, [r9, #12]
   46418:	ldr	r0, [pc, #688]	; 466d0 <Mat_VarDelete+0x414>
   4641c:	add	r0, pc, r0
   46420:	bl	1de4 <strdup_printf>
   46424:	mov	r5, r0
   46428:	ldr	r0, [r9]
   4642c:	cmp	r0, #0
   46430:	beq	46440 <Mat_VarDelete+0x184>
   46434:	bl	19e4 <fclose@plt>
   46438:	mov	r0, #0
   4643c:	str	r0, [r9]
   46440:	add	r0, sp, #16
   46444:	mov	r1, #0
   46448:	mov	r2, #8192	; 0x2000
   4644c:	bl	19a8 <memset@plt>
   46450:	ldr	r1, [pc, #636]	; 466d4 <Mat_VarDelete+0x418>
   46454:	mov	r0, r8
   46458:	add	r1, pc, r1
   4645c:	bl	17f8 <fopen@plt>
   46460:	cmp	r0, #0
   46464:	beq	464f4 <Mat_VarDelete+0x238>
   46468:	ldr	r1, [pc, #620]	; 466dc <Mat_VarDelete+0x420>
   4646c:	mov	r4, r0
   46470:	mov	r0, r5
   46474:	add	r1, pc, r1
   46478:	bl	17f8 <fopen@plt>
   4647c:	cmp	r0, #0
   46480:	beq	46504 <Mat_VarDelete+0x248>
   46484:	stm	sp, {r7, r8}
   46488:	mov	r6, r0
   4648c:	add	r7, sp, #16
   46490:	mov	r0, r7
   46494:	mov	r1, #1
   46498:	mov	r2, #8192	; 0x2000
   4649c:	mov	r3, r4
   464a0:	bl	1a50 <fread_unlocked@plt>
   464a4:	cmp	r0, #0
   464a8:	beq	46578 <Mat_VarDelete+0x2bc>
   464ac:	mov	r8, r0
   464b0:	mov	r0, r7
   464b4:	mov	r1, #1
   464b8:	mov	r3, r6
   464bc:	mov	r2, r8
   464c0:	bl	1864 <fwrite_unlocked@plt>
   464c4:	cmp	r8, r0
   464c8:	beq	46490 <Mat_VarDelete+0x1d4>
   464cc:	mov	r0, r4
   464d0:	bl	19e4 <fclose@plt>
   464d4:	mov	r0, r6
   464d8:	bl	19e4 <fclose@plt>
   464dc:	ldr	r0, [pc, #508]	; 466e0 <Mat_VarDelete+0x424>
   464e0:	mov	r1, r5
   464e4:	add	r0, pc, r0
   464e8:	bl	19cc <Mat_Critical@plt>
   464ec:	ldm	sp, {r7, r8}
   464f0:	b	4651c <Mat_VarDelete+0x260>
   464f4:	ldr	r0, [pc, #476]	; 466d8 <Mat_VarDelete+0x41c>
   464f8:	mov	r1, r8
   464fc:	add	r0, pc, r0
   46500:	b	46518 <Mat_VarDelete+0x25c>
   46504:	mov	r0, r4
   46508:	bl	19e4 <fclose@plt>
   4650c:	ldr	r0, [pc, #484]	; 466f8 <Mat_VarDelete+0x43c>
   46510:	mov	r1, r5
   46514:	add	r0, pc, r0
   46518:	bl	19cc <Mat_Critical@plt>
   4651c:	cmp	r7, #0
   46520:	beq	46554 <Mat_VarDelete+0x298>
   46524:	cmp	sl, #0
   46528:	beq	4654c <Mat_VarDelete+0x290>
   4652c:	mov	r4, r7
   46530:	ldr	r0, [r4]
   46534:	cmp	r0, #0
   46538:	beq	46540 <Mat_VarDelete+0x284>
   4653c:	bl	181c <free@plt>
   46540:	subs	sl, sl, #1
   46544:	add	r4, r4, #4
   46548:	bne	46530 <Mat_VarDelete+0x274>
   4654c:	mov	r0, r7
   46550:	bl	181c <free@plt>
   46554:	ldr	r0, [pc, #392]	; 466e4 <Mat_VarDelete+0x428>
   46558:	mov	r1, r8
   4655c:	mov	r2, r5
   46560:	add	r0, pc, r0
   46564:	bl	19cc <Mat_Critical@plt>
   46568:	mvn	r4, #0
   4656c:	mov	r0, r5
   46570:	bl	181c <free@plt>
   46574:	b	462f8 <Mat_VarDelete+0x3c>
   46578:	mov	r0, r4
   4657c:	bl	19e4 <fclose@plt>
   46580:	mov	r0, r6
   46584:	bl	19e4 <fclose@plt>
   46588:	ldr	r6, [sp, #4]
   4658c:	mov	r0, r6
   46590:	bl	1a14 <remove@plt>
   46594:	cmn	r0, #1
   46598:	beq	46668 <Mat_VarDelete+0x3ac>
   4659c:	ldr	r1, [r9, #24]
   465a0:	mov	r4, r0
   465a4:	mov	r0, r5
   465a8:	bl	17e0 <Mat_Open@plt>
   465ac:	cmp	r0, #0
   465b0:	beq	466b8 <Mat_VarDelete+0x3fc>
   465b4:	mov	r8, r0
   465b8:	ldr	r0, [r9, #4]
   465bc:	cmp	r0, #0
   465c0:	beq	465c8 <Mat_VarDelete+0x30c>
   465c4:	bl	181c <free@plt>
   465c8:	ldr	r0, [r9, #8]
   465cc:	cmp	r0, #0
   465d0:	beq	465d8 <Mat_VarDelete+0x31c>
   465d4:	bl	181c <free@plt>
   465d8:	ldr	r0, [r9, #12]
   465dc:	cmp	r0, #0
   465e0:	beq	465e8 <Mat_VarDelete+0x32c>
   465e4:	bl	181c <free@plt>
   465e8:	ldr	r0, [r9, #40]	; 0x28
   465ec:	str	r5, [sp, #4]
   465f0:	cmp	r0, #0
   465f4:	beq	46634 <Mat_VarDelete+0x378>
   465f8:	ldr	r2, [r9, #36]	; 0x24
   465fc:	cmp	r2, #0
   46600:	beq	46630 <Mat_VarDelete+0x374>
   46604:	mov	r5, #0
   46608:	ldr	r1, [r0, r5, lsl #2]
   4660c:	cmp	r1, #0
   46610:	beq	46624 <Mat_VarDelete+0x368>
   46614:	mov	r0, r1
   46618:	bl	181c <free@plt>
   4661c:	ldr	r2, [r9, #36]	; 0x24
   46620:	ldr	r0, [r9, #40]	; 0x28
   46624:	add	r5, r5, #1
   46628:	cmp	r5, r2
   4662c:	bcc	46608 <Mat_VarDelete+0x34c>
   46630:	bl	181c <free@plt>
   46634:	mov	r1, r8
   46638:	mov	ip, r9
   4663c:	ldm	r1!, {r2, r3, r5, r6, r7}
   46640:	stmia	ip!, {r2, r3, r5, r6, r7}
   46644:	ldm	r1, {r0, r2, r3, r5, r6, r7}
   46648:	stm	ip, {r0, r2, r3, r5, r6, r7}
   4664c:	mov	r0, r8
   46650:	bl	181c <free@plt>
   46654:	ldr	r0, [sp]
   46658:	ldr	r5, [sp, #4]
   4665c:	str	sl, [r9, #36]	; 0x24
   46660:	str	r0, [r9, #40]	; 0x28
   46664:	b	4656c <Mat_VarDelete+0x2b0>
   46668:	ldr	r7, [sp]
   4666c:	cmp	r7, #0
   46670:	beq	466a4 <Mat_VarDelete+0x3e8>
   46674:	cmp	sl, #0
   46678:	beq	4669c <Mat_VarDelete+0x3e0>
   4667c:	mov	r4, r7
   46680:	ldr	r0, [r4]
   46684:	cmp	r0, #0
   46688:	beq	46690 <Mat_VarDelete+0x3d4>
   4668c:	bl	181c <free@plt>
   46690:	subs	sl, sl, #1
   46694:	add	r4, r4, #4
   46698:	bne	46680 <Mat_VarDelete+0x3c4>
   4669c:	mov	r0, r7
   466a0:	bl	181c <free@plt>
   466a4:	ldr	r0, [pc, #60]	; 466e8 <Mat_VarDelete+0x42c>
   466a8:	mov	r1, r6
   466ac:	add	r0, pc, r0
   466b0:	bl	19cc <Mat_Critical@plt>
   466b4:	b	46568 <Mat_VarDelete+0x2ac>
   466b8:	ldr	r0, [pc, #44]	; 466ec <Mat_VarDelete+0x430>
   466bc:	mov	r1, r5
   466c0:	add	r0, pc, r0
   466c4:	bl	19cc <Mat_Critical@plt>
   466c8:	b	4656c <Mat_VarDelete+0x2b0>
   466cc:	.word	0x000040a9
   466d0:	.word	0x000041e7
   466d4:	.word	0x00003e14
   466d8:	.word	0x000043a4
   466dc:	.word	0x0000444f
   466e0:	.word	0x00004405
   466e4:	.word	0x00003e30
   466e8:	.word	0x00003d08
   466ec:	.word	0x00003d0d
   466f0:	.word	0x00003fb0
   466f4:	.word	0x0000402c
   466f8:	.word	0x000043b2

000466fc <Mat_VarReadNext>:
   466fc:	push	{r4, r5, r6, sl, fp, lr}
   46700:	add	fp, sp, #16
   46704:	mov	r5, r0
   46708:	ldr	r0, [r0, #16]
   4670c:	mov	r6, #0
   46710:	cmp	r0, #512	; 0x200
   46714:	bne	4673c <Mat_VarReadNext+0x40>
   46718:	mov	r0, r5
   4671c:	bl	1a8c <Mat_VarReadNextInfo@plt>
   46720:	cmp	r0, #0
   46724:	beq	46774 <Mat_VarReadNext+0x78>
   46728:	mov	r4, r0
   4672c:	mov	r0, r5
   46730:	mov	r1, r4
   46734:	bl	47ecc <ReadData>
   46738:	b	46798 <Mat_VarReadNext+0x9c>
   4673c:	ldr	r0, [r5]
   46740:	bl	1924 <feof@plt>
   46744:	mov	r4, #0
   46748:	cmp	r0, #0
   4674c:	bne	46798 <Mat_VarReadNext+0x9c>
   46750:	ldr	r0, [r5]
   46754:	bl	1858 <ftell@plt>
   46758:	mov	r6, r0
   4675c:	cmn	r0, #1
   46760:	bne	46718 <Mat_VarReadNext+0x1c>
   46764:	ldr	r0, [pc, #52]	; 467a0 <Mat_VarReadNext+0xa4>
   46768:	add	r0, pc, r0
   4676c:	bl	19cc <Mat_Critical@plt>
   46770:	b	46798 <Mat_VarReadNext+0x9c>
   46774:	ldr	r0, [r5, #16]
   46778:	mov	r4, #0
   4677c:	cmp	r0, #512	; 0x200
   46780:	beq	46798 <Mat_VarReadNext+0x9c>
   46784:	ldr	r0, [r5]
   46788:	mov	r1, r6
   4678c:	mov	r2, #0
   46790:	mov	r4, #0
   46794:	bl	1a68 <fseek@plt>
   46798:	mov	r0, r4
   4679c:	pop	{r4, r5, r6, sl, fp, pc}
   467a0:	.word	0x00003550

000467a4 <Mat_VarWrite>:
   467a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   467a8:	add	fp, sp, #28
   467ac:	sub	sp, sp, #4
   467b0:	mov	r9, r0
   467b4:	mvn	r0, #0
   467b8:	cmp	r9, #0
   467bc:	movne	sl, r1
   467c0:	cmpne	r1, #0
   467c4:	bne	467d0 <Mat_VarWrite+0x2c>
   467c8:	sub	sp, fp, #28
   467cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   467d0:	ldr	r0, [r9, #40]	; 0x28
   467d4:	mov	r8, r2
   467d8:	cmp	r0, #0
   467dc:	bne	467f4 <Mat_VarWrite+0x50>
   467e0:	mov	r0, #0
   467e4:	mov	r1, sp
   467e8:	str	r0, [sp]
   467ec:	mov	r0, r9
   467f0:	bl	1948 <Mat_GetDir@plt>
   467f4:	ldr	r6, [r9, #36]	; 0x24
   467f8:	cmp	r6, #0
   467fc:	beq	46834 <Mat_VarWrite+0x90>
   46800:	ldr	r4, [r9, #40]	; 0x28
   46804:	mov	r5, #0
   46808:	ldr	r0, [r4, r5, lsl #2]
   4680c:	cmp	r0, #0
   46810:	beq	46828 <Mat_VarWrite+0x84>
   46814:	ldr	r7, [sl, #36]	; 0x24
   46818:	mov	r1, r7
   4681c:	bl	17c8 <strcmp@plt>
   46820:	cmp	r0, #0
   46824:	beq	46864 <Mat_VarWrite+0xc0>
   46828:	add	r5, r5, #1
   4682c:	cmp	r5, r6
   46830:	bcc	46808 <Mat_VarWrite+0x64>
   46834:	ldr	r0, [r9, #16]
   46838:	cmp	r0, #16
   4683c:	beq	4687c <Mat_VarWrite+0xd8>
   46840:	cmp	r0, #512	; 0x200
   46844:	beq	46874 <Mat_VarWrite+0xd0>
   46848:	cmp	r0, #256	; 0x100
   4684c:	bne	468b0 <Mat_VarWrite+0x10c>
   46850:	mov	r0, r9
   46854:	mov	r1, sl
   46858:	mov	r2, r8
   4685c:	bl	3f3f0 <Mat_VarWrite5>
   46860:	b	46888 <Mat_VarWrite+0xe4>
   46864:	ldr	r0, [pc, #196]	; 46930 <Mat_VarWrite+0x18c>
   46868:	mov	r1, r7
   4686c:	add	r0, pc, r0
   46870:	bl	19cc <Mat_Critical@plt>
   46874:	mov	r0, #1
   46878:	b	467c8 <Mat_VarWrite+0x24>
   4687c:	mov	r0, r9
   46880:	mov	r1, sl
   46884:	bl	43ddc <Mat_VarWrite4>
   46888:	cmp	r0, #0
   4688c:	bne	467c8 <Mat_VarWrite+0x24>
   46890:	ldr	r0, [r9, #40]	; 0x28
   46894:	cmp	r0, #0
   46898:	beq	468b8 <Mat_VarWrite+0x114>
   4689c:	ldr	r1, [r9, #36]	; 0x24
   468a0:	mov	r2, #4
   468a4:	add	r1, r2, r1, lsl #2
   468a8:	bl	1888 <realloc@plt>
   468ac:	b	468c0 <Mat_VarWrite+0x11c>
   468b0:	mov	r0, #2
   468b4:	b	467c8 <Mat_VarWrite+0x24>
   468b8:	mov	r0, #4
   468bc:	bl	18e8 <malloc@plt>
   468c0:	mov	r2, r0
   468c4:	cmp	r0, #0
   468c8:	beq	46904 <Mat_VarWrite+0x160>
   468cc:	str	r2, [r9, #40]	; 0x28
   468d0:	ldr	r1, [sl, #36]	; 0x24
   468d4:	cmp	r1, #0
   468d8:	beq	46918 <Mat_VarWrite+0x174>
   468dc:	ldr	r0, [pc, #80]	; 46934 <Mat_VarWrite+0x190>
   468e0:	add	r0, pc, r0
   468e4:	bl	1de4 <strdup_printf>
   468e8:	ldr	r1, [r9, #36]	; 0x24
   468ec:	ldr	r2, [r9, #40]	; 0x28
   468f0:	add	r3, r1, #1
   468f4:	str	r3, [r9, #36]	; 0x24
   468f8:	str	r0, [r2, r1, lsl #2]
   468fc:	mov	r0, #0
   46900:	b	467c8 <Mat_VarWrite+0x24>
   46904:	ldr	r0, [pc, #44]	; 46938 <Mat_VarWrite+0x194>
   46908:	add	r0, pc, r0
   4690c:	bl	19cc <Mat_Critical@plt>
   46910:	mov	r0, #3
   46914:	b	467c8 <Mat_VarWrite+0x24>
   46918:	ldr	r1, [r9, #36]	; 0x24
   4691c:	add	r0, r1, #1
   46920:	str	r0, [r9, #36]	; 0x24
   46924:	mov	r0, #0
   46928:	str	r0, [r2, r1, lsl #2]
   4692c:	b	467c8 <Mat_VarWrite+0x24>
   46930:	.word	0x00004018
   46934:	.word	0x00003d23
   46938:	.word	0x00003a3f

0004693c <Mat_VarDuplicate>:
   4693c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   46940:	add	fp, sp, #28
   46944:	sub	sp, sp, #4
   46948:	vpush	{d8-d9}
   4694c:	sub	sp, sp, #16
   46950:	mov	r9, r1
   46954:	mov	r5, r0
   46958:	bl	18b8 <Mat_VarCalloc@plt>
   4695c:	mov	r4, r0
   46960:	cmp	r0, #0
   46964:	beq	46dc0 <Mat_VarDuplicate+0x484>
   46968:	mov	r0, #36	; 0x24
   4696c:	mov	r1, r5
   46970:	mov	r2, r4
   46974:	add	sl, r5, #16
   46978:	vld1.32	{d8-d9}, [r1], r0
   4697c:	mov	r0, #48	; 0x30
   46980:	vst1.32	{d8-d9}, [r2], r0
   46984:	add	r0, r4, #16
   46988:	vld1.32	{d16-d17}, [sl]
   4698c:	vst1.32	{d16-d17}, [r0]
   46990:	ldr	r0, [r5, #44]	; 0x2c
   46994:	ldr	r3, [r5, #48]	; 0x30
   46998:	str	r0, [r4, #44]	; 0x2c
   4699c:	str	r3, [r2]
   469a0:	ldr	r6, [r1]
   469a4:	cmp	r6, #0
   469a8:	beq	469d8 <Mat_VarDuplicate+0x9c>
   469ac:	mov	r0, r6
   469b0:	bl	196c <strlen@plt>
   469b4:	add	r7, r0, #1
   469b8:	mov	r0, r7
   469bc:	bl	18e8 <malloc@plt>
   469c0:	cmp	r0, #0
   469c4:	str	r0, [r4, #36]	; 0x24
   469c8:	beq	469d8 <Mat_VarDuplicate+0x9c>
   469cc:	mov	r1, r6
   469d0:	mov	r2, r7
   469d4:	bl	1834 <memcpy@plt>
   469d8:	vmov.32	r0, d8[1]
   469dc:	lsl	r6, r0, #2
   469e0:	mov	r0, r6
   469e4:	bl	18e8 <malloc@plt>
   469e8:	cmp	r0, #0
   469ec:	str	r0, [r4, #32]
   469f0:	beq	46a00 <Mat_VarDuplicate+0xc4>
   469f4:	ldr	r1, [r5, #32]
   469f8:	mov	r2, r6
   469fc:	bl	1834 <memcpy@plt>
   46a00:	ldr	r6, [r5, #52]	; 0x34
   46a04:	cmp	r6, #0
   46a08:	beq	46be8 <Mat_VarDuplicate+0x2ac>
   46a0c:	ldr	r0, [r6]
   46a10:	ldr	r7, [r4, #52]	; 0x34
   46a14:	mov	r1, #0
   46a18:	str	r0, [r7]
   46a1c:	str	r1, [r7, #12]
   46a20:	str	r1, [r7, #16]
   46a24:	ldr	r0, [r6, #4]
   46a28:	str	r0, [r7, #4]
   46a2c:	ldr	r0, [r6, #8]
   46a30:	cmp	r0, #0
   46a34:	ldrne	r0, [r6, #4]
   46a38:	cmpne	r0, #0
   46a3c:	bne	46c6c <Mat_VarDuplicate+0x330>
   46a40:	ldr	r0, [r6, #12]
   46a44:	cmp	r0, #0
   46a48:	beq	46a70 <Mat_VarDuplicate+0x134>
   46a4c:	mov	r0, #56	; 0x38
   46a50:	bl	18e8 <malloc@plt>
   46a54:	ldr	r1, [r4, #52]	; 0x34
   46a58:	cmp	r0, #0
   46a5c:	str	r0, [r1, #12]
   46a60:	beq	46a70 <Mat_VarDuplicate+0x134>
   46a64:	ldr	r1, [r6, #12]
   46a68:	bl	1960 <inflateCopy@plt>
   46a6c:	ldr	r6, [r5, #52]	; 0x34
   46a70:	ldr	r0, [r6, #16]
   46a74:	cmp	r0, #0
   46a78:	beq	46d34 <Mat_VarDuplicate+0x3f8>
   46a7c:	ldr	r0, [sl]
   46a80:	cmp	r0, #5
   46a84:	bne	46bfc <Mat_VarDuplicate+0x2c0>
   46a88:	mov	r0, #28
   46a8c:	bl	18e8 <malloc@plt>
   46a90:	mov	r7, r0
   46a94:	ldr	r0, [r4, #52]	; 0x34
   46a98:	cmp	r7, #0
   46a9c:	str	r7, [r0, #16]
   46aa0:	beq	46d34 <Mat_VarDuplicate+0x3f8>
   46aa4:	ldr	r8, [r6, #16]
   46aa8:	ldr	r0, [r8]
   46aac:	str	r0, [r7]
   46ab0:	ldr	r0, [r8, #8]
   46ab4:	str	r0, [r7, #8]
   46ab8:	ldr	r0, [r8, #8]
   46abc:	lsl	r0, r0, #2
   46ac0:	bl	18e8 <malloc@plt>
   46ac4:	cmp	r0, #0
   46ac8:	str	r0, [r7, #4]
   46acc:	beq	46adc <Mat_VarDuplicate+0x1a0>
   46ad0:	ldmib	r8, {r1, r2}
   46ad4:	lsl	r2, r2, #2
   46ad8:	bl	1834 <memcpy@plt>
   46adc:	ldr	r0, [r8, #16]
   46ae0:	str	r0, [r7, #16]
   46ae4:	ldr	r0, [r8, #16]
   46ae8:	lsl	r0, r0, #2
   46aec:	bl	18e8 <malloc@plt>
   46af0:	cmp	r0, #0
   46af4:	str	r0, [r7, #12]
   46af8:	beq	46b0c <Mat_VarDuplicate+0x1d0>
   46afc:	ldr	r2, [r8, #16]
   46b00:	ldr	r1, [r8, #12]
   46b04:	lsl	r2, r2, #2
   46b08:	bl	1834 <memcpy@plt>
   46b0c:	ldr	r0, [r8, #20]
   46b10:	ldr	r1, [r4, #20]
   46b14:	str	r0, [r7, #20]
   46b18:	cmp	r1, #0
   46b1c:	ldr	r0, [r8, #24]
   46b20:	beq	46ce8 <Mat_VarDuplicate+0x3ac>
   46b24:	cmp	r0, #0
   46b28:	beq	46d34 <Mat_VarDuplicate+0x3f8>
   46b2c:	mov	r0, #8
   46b30:	bl	18e8 <malloc@plt>
   46b34:	cmp	r0, #0
   46b38:	str	r0, [r7, #24]
   46b3c:	beq	46d34 <Mat_VarDuplicate+0x3f8>
   46b40:	mov	r7, r0
   46b44:	ldr	r0, [r8, #24]
   46b48:	ldr	r6, [r8, #20]
   46b4c:	str	r0, [sp, #12]
   46b50:	ldr	r0, [r5, #8]
   46b54:	bl	193c <Mat_SizeOf@plt>
   46b58:	mul	r0, r0, r6
   46b5c:	bl	18e8 <malloc@plt>
   46b60:	cmp	r0, #0
   46b64:	str	r0, [r7]
   46b68:	beq	46b9c <Mat_VarDuplicate+0x260>
   46b6c:	mov	r6, r0
   46b70:	ldr	r0, [sp, #12]
   46b74:	ldr	r0, [r0]
   46b78:	stmib	sp, {r0, r7}
   46b7c:	ldr	r0, [r5, #8]
   46b80:	ldr	r7, [r8, #20]
   46b84:	bl	193c <Mat_SizeOf@plt>
   46b88:	ldr	r1, [sp, #4]
   46b8c:	mul	r2, r0, r7
   46b90:	ldr	r7, [sp, #8]
   46b94:	mov	r0, r6
   46b98:	bl	1834 <memcpy@plt>
   46b9c:	ldr	r0, [r5, #8]
   46ba0:	ldr	r6, [r8, #20]
   46ba4:	bl	193c <Mat_SizeOf@plt>
   46ba8:	mul	r0, r0, r6
   46bac:	bl	18e8 <malloc@plt>
   46bb0:	cmp	r0, #0
   46bb4:	str	r0, [r7, #4]
   46bb8:	beq	46d34 <Mat_VarDuplicate+0x3f8>
   46bbc:	mov	r6, r0
   46bc0:	ldr	r0, [sp, #12]
   46bc4:	ldr	r7, [r8, #20]
   46bc8:	ldr	r0, [r0, #4]
   46bcc:	str	r0, [sp, #12]
   46bd0:	ldr	r0, [r5, #8]
   46bd4:	bl	193c <Mat_SizeOf@plt>
   46bd8:	ldr	r1, [sp, #12]
   46bdc:	mul	r2, r0, r7
   46be0:	mov	r0, r6
   46be4:	b	46d30 <Mat_VarDuplicate+0x3f4>
   46be8:	ldr	r0, [r4, #52]	; 0x34
   46bec:	bl	181c <free@plt>
   46bf0:	mov	r0, #0
   46bf4:	str	r0, [r4, #52]	; 0x34
   46bf8:	b	46d34 <Mat_VarDuplicate+0x3f8>
   46bfc:	ldr	r0, [r4, #20]
   46c00:	cmp	r0, #0
   46c04:	beq	46cc0 <Mat_VarDuplicate+0x384>
   46c08:	mov	r0, #8
   46c0c:	bl	18e8 <malloc@plt>
   46c10:	mov	r7, r0
   46c14:	ldr	r0, [r4, #52]	; 0x34
   46c18:	cmp	r7, #0
   46c1c:	str	r7, [r0, #16]
   46c20:	beq	46d34 <Mat_VarDuplicate+0x3f8>
   46c24:	ldr	r8, [r4]
   46c28:	ldr	r6, [r6, #16]
   46c2c:	mov	r0, r8
   46c30:	bl	18e8 <malloc@plt>
   46c34:	cmp	r0, #0
   46c38:	str	r0, [r7]
   46c3c:	beq	46c4c <Mat_VarDuplicate+0x310>
   46c40:	ldr	r1, [r6]
   46c44:	mov	r2, r8
   46c48:	bl	1834 <memcpy@plt>
   46c4c:	mov	r0, r8
   46c50:	bl	18e8 <malloc@plt>
   46c54:	cmp	r0, #0
   46c58:	str	r0, [r7, #4]
   46c5c:	beq	46d34 <Mat_VarDuplicate+0x3f8>
   46c60:	ldr	r1, [r6, #4]
   46c64:	mov	r2, r8
   46c68:	b	46d30 <Mat_VarDuplicate+0x3f4>
   46c6c:	mov	r1, #4
   46c70:	bl	17b0 <calloc@plt>
   46c74:	str	r0, [r7, #8]
   46c78:	ldr	r0, [r6, #4]
   46c7c:	cmp	r0, #0
   46c80:	beq	46a40 <Mat_VarDuplicate+0x104>
   46c84:	mov	r7, #0
   46c88:	ldr	r0, [r6, #8]
   46c8c:	ldr	r0, [r0, r7, lsl #2]
   46c90:	cmp	r0, #0
   46c94:	beq	46cac <Mat_VarDuplicate+0x370>
   46c98:	bl	187c <strdup@plt>
   46c9c:	ldr	r1, [r4, #52]	; 0x34
   46ca0:	ldr	r1, [r1, #8]
   46ca4:	str	r0, [r1, r7, lsl #2]
   46ca8:	ldr	r6, [r5, #52]	; 0x34
   46cac:	ldr	r0, [r6, #4]
   46cb0:	add	r7, r7, #1
   46cb4:	cmp	r7, r0
   46cb8:	bcc	46c88 <Mat_VarDuplicate+0x34c>
   46cbc:	b	46a40 <Mat_VarDuplicate+0x104>
   46cc0:	ldr	r7, [r5]
   46cc4:	mov	r0, r7
   46cc8:	bl	18e8 <malloc@plt>
   46ccc:	ldr	r1, [r4, #52]	; 0x34
   46cd0:	cmp	r0, #0
   46cd4:	str	r0, [r1, #16]
   46cd8:	beq	46d34 <Mat_VarDuplicate+0x3f8>
   46cdc:	ldr	r1, [r6, #16]
   46ce0:	mov	r2, r7
   46ce4:	b	46d30 <Mat_VarDuplicate+0x3f4>
   46ce8:	cmp	r0, #0
   46cec:	beq	46d34 <Mat_VarDuplicate+0x3f8>
   46cf0:	ldr	r0, [r5, #8]
   46cf4:	ldr	r6, [r8, #20]
   46cf8:	bl	193c <Mat_SizeOf@plt>
   46cfc:	mul	r0, r0, r6
   46d00:	bl	18e8 <malloc@plt>
   46d04:	cmp	r0, #0
   46d08:	str	r0, [r7, #24]
   46d0c:	beq	46d34 <Mat_VarDuplicate+0x3f8>
   46d10:	mov	r6, r0
   46d14:	ldr	r0, [r5, #8]
   46d18:	ldr	r7, [r8, #20]
   46d1c:	ldr	r8, [r8, #24]
   46d20:	bl	193c <Mat_SizeOf@plt>
   46d24:	mul	r2, r0, r7
   46d28:	mov	r0, r6
   46d2c:	mov	r1, r8
   46d30:	bl	1834 <memcpy@plt>
   46d34:	ldr	r8, [r5, #40]	; 0x28
   46d38:	cmp	r9, #0
   46d3c:	beq	46dbc <Mat_VarDuplicate+0x480>
   46d40:	cmp	r8, #0
   46d44:	beq	46dc0 <Mat_VarDuplicate+0x484>
   46d48:	ldr	r0, [sl]
   46d4c:	cmp	r0, #1
   46d50:	beq	46dd4 <Mat_VarDuplicate+0x498>
   46d54:	cmp	r0, #5
   46d58:	beq	46e2c <Mat_VarDuplicate+0x4f0>
   46d5c:	cmp	r0, #2
   46d60:	bne	46f70 <Mat_VarDuplicate+0x634>
   46d64:	ldr	r7, [r5]
   46d68:	mov	r0, r7
   46d6c:	bl	18e8 <malloc@plt>
   46d70:	cmp	r0, #0
   46d74:	str	r0, [r4, #40]	; 0x28
   46d78:	beq	46dc0 <Mat_VarDuplicate+0x484>
   46d7c:	mov	r6, r0
   46d80:	ldr	r0, [r5, #12]
   46d84:	cmp	r0, #1
   46d88:	blt	46dc0 <Mat_VarDuplicate+0x484>
   46d8c:	cmp	r0, r7
   46d90:	bhi	46dc0 <Mat_VarDuplicate+0x484>
   46d94:	udiv	r5, r7, r0
   46d98:	mov	r7, #0
   46d9c:	ldr	r0, [r8, r7, lsl #2]
   46da0:	mov	r1, r9
   46da4:	bl	1a80 <Mat_VarDuplicate@plt>
   46da8:	str	r0, [r6, r7, lsl #2]
   46dac:	add	r7, r7, #1
   46db0:	cmp	r7, r5
   46db4:	bcc	46d9c <Mat_VarDuplicate+0x460>
   46db8:	b	46dc0 <Mat_VarDuplicate+0x484>
   46dbc:	str	r8, [r4, #40]	; 0x28
   46dc0:	mov	r0, r4
   46dc4:	sub	sp, fp, #48	; 0x30
   46dc8:	vpop	{d8-d9}
   46dcc:	add	sp, sp, #4
   46dd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   46dd4:	ldr	r7, [r5]
   46dd8:	mov	r0, r7
   46ddc:	bl	18e8 <malloc@plt>
   46de0:	cmp	r0, #0
   46de4:	str	r0, [r4, #40]	; 0x28
   46de8:	beq	46dc0 <Mat_VarDuplicate+0x484>
   46dec:	mov	r6, r0
   46df0:	ldr	r0, [r5, #12]
   46df4:	cmp	r0, #1
   46df8:	blt	46dc0 <Mat_VarDuplicate+0x484>
   46dfc:	cmp	r0, r7
   46e00:	bhi	46dc0 <Mat_VarDuplicate+0x484>
   46e04:	udiv	r5, r7, r0
   46e08:	mov	r7, #0
   46e0c:	ldr	r0, [r8, r7, lsl #2]
   46e10:	mov	r1, r9
   46e14:	bl	1a80 <Mat_VarDuplicate@plt>
   46e18:	str	r0, [r6, r7, lsl #2]
   46e1c:	add	r7, r7, #1
   46e20:	cmp	r7, r5
   46e24:	bcc	46e0c <Mat_VarDuplicate+0x4d0>
   46e28:	b	46dc0 <Mat_VarDuplicate+0x484>
   46e2c:	mov	r0, #28
   46e30:	bl	18e8 <malloc@plt>
   46e34:	cmp	r0, #0
   46e38:	str	r0, [r4, #40]	; 0x28
   46e3c:	beq	46dc0 <Mat_VarDuplicate+0x484>
   46e40:	mov	r6, r0
   46e44:	ldr	r0, [r8]
   46e48:	str	r0, [r6]
   46e4c:	ldr	r0, [r8, #8]
   46e50:	str	r0, [r6, #8]
   46e54:	ldr	r0, [r8, #8]
   46e58:	lsl	r0, r0, #2
   46e5c:	bl	18e8 <malloc@plt>
   46e60:	cmp	r0, #0
   46e64:	str	r0, [r6, #4]
   46e68:	beq	46e78 <Mat_VarDuplicate+0x53c>
   46e6c:	ldmib	r8, {r1, r2}
   46e70:	lsl	r2, r2, #2
   46e74:	bl	1834 <memcpy@plt>
   46e78:	ldr	r0, [r8, #16]
   46e7c:	str	r0, [r6, #16]
   46e80:	ldr	r0, [r8, #16]
   46e84:	lsl	r0, r0, #2
   46e88:	bl	18e8 <malloc@plt>
   46e8c:	cmp	r0, #0
   46e90:	str	r0, [r6, #12]
   46e94:	beq	46ea8 <Mat_VarDuplicate+0x56c>
   46e98:	ldr	r2, [r8, #16]
   46e9c:	ldr	r1, [r8, #12]
   46ea0:	lsl	r2, r2, #2
   46ea4:	bl	1834 <memcpy@plt>
   46ea8:	ldr	r0, [r8, #20]
   46eac:	ldr	r1, [r4, #20]
   46eb0:	str	r0, [r6, #20]
   46eb4:	cmp	r1, #0
   46eb8:	ldr	r0, [r8, #24]
   46ebc:	beq	46ffc <Mat_VarDuplicate+0x6c0>
   46ec0:	cmp	r0, #0
   46ec4:	beq	47048 <Mat_VarDuplicate+0x70c>
   46ec8:	mov	r0, #8
   46ecc:	bl	18e8 <malloc@plt>
   46ed0:	cmp	r0, #0
   46ed4:	str	r0, [r6, #24]
   46ed8:	beq	46dc0 <Mat_VarDuplicate+0x484>
   46edc:	mov	r7, r0
   46ee0:	ldr	r0, [r5, #8]
   46ee4:	ldr	r6, [r8, #20]
   46ee8:	ldr	r9, [r8, #24]
   46eec:	bl	193c <Mat_SizeOf@plt>
   46ef0:	mul	r0, r0, r6
   46ef4:	bl	18e8 <malloc@plt>
   46ef8:	cmp	r0, #0
   46efc:	str	r0, [r7]
   46f00:	beq	46f2c <Mat_VarDuplicate+0x5f0>
   46f04:	mov	r6, r0
   46f08:	ldr	r0, [r9]
   46f0c:	ldr	sl, [r8, #20]
   46f10:	str	r0, [sp, #12]
   46f14:	ldr	r0, [r5, #8]
   46f18:	bl	193c <Mat_SizeOf@plt>
   46f1c:	ldr	r1, [sp, #12]
   46f20:	mul	r2, r0, sl
   46f24:	mov	r0, r6
   46f28:	bl	1834 <memcpy@plt>
   46f2c:	ldr	r0, [r5, #8]
   46f30:	ldr	r6, [r8, #20]
   46f34:	bl	193c <Mat_SizeOf@plt>
   46f38:	mul	r0, r0, r6
   46f3c:	bl	18e8 <malloc@plt>
   46f40:	cmp	r0, #0
   46f44:	str	r0, [r7, #4]
   46f48:	beq	46dc0 <Mat_VarDuplicate+0x484>
   46f4c:	mov	r6, r0
   46f50:	ldr	r0, [r5, #8]
   46f54:	ldr	r9, [r9, #4]
   46f58:	ldr	r7, [r8, #20]
   46f5c:	bl	193c <Mat_SizeOf@plt>
   46f60:	mul	r2, r0, r7
   46f64:	mov	r0, r6
   46f68:	mov	r1, r9
   46f6c:	b	46ff4 <Mat_VarDuplicate+0x6b8>
   46f70:	ldr	r0, [r4, #20]
   46f74:	cmp	r0, #0
   46f78:	beq	46fd4 <Mat_VarDuplicate+0x698>
   46f7c:	mov	r0, #8
   46f80:	bl	18e8 <malloc@plt>
   46f84:	cmp	r0, #0
   46f88:	str	r0, [r4, #40]	; 0x28
   46f8c:	beq	46dc0 <Mat_VarDuplicate+0x484>
   46f90:	ldr	r5, [r4]
   46f94:	mov	r6, r0
   46f98:	mov	r0, r5
   46f9c:	bl	18e8 <malloc@plt>
   46fa0:	cmp	r0, #0
   46fa4:	str	r0, [r6]
   46fa8:	beq	46fb8 <Mat_VarDuplicate+0x67c>
   46fac:	ldr	r1, [r8]
   46fb0:	mov	r2, r5
   46fb4:	bl	1834 <memcpy@plt>
   46fb8:	mov	r0, r5
   46fbc:	bl	18e8 <malloc@plt>
   46fc0:	cmp	r0, #0
   46fc4:	str	r0, [r6, #4]
   46fc8:	beq	46dc0 <Mat_VarDuplicate+0x484>
   46fcc:	ldr	r1, [r8, #4]
   46fd0:	b	46ff0 <Mat_VarDuplicate+0x6b4>
   46fd4:	ldr	r5, [r5]
   46fd8:	mov	r0, r5
   46fdc:	bl	18e8 <malloc@plt>
   46fe0:	cmp	r0, #0
   46fe4:	str	r0, [r4, #40]	; 0x28
   46fe8:	beq	46dc0 <Mat_VarDuplicate+0x484>
   46fec:	mov	r1, r8
   46ff0:	mov	r2, r5
   46ff4:	bl	1834 <memcpy@plt>
   46ff8:	b	46dc0 <Mat_VarDuplicate+0x484>
   46ffc:	cmp	r0, #0
   47000:	beq	47048 <Mat_VarDuplicate+0x70c>
   47004:	ldr	r0, [r5, #8]
   47008:	ldr	r7, [r8, #20]
   4700c:	bl	193c <Mat_SizeOf@plt>
   47010:	mul	r0, r0, r7
   47014:	bl	18e8 <malloc@plt>
   47018:	cmp	r0, #0
   4701c:	str	r0, [r6, #24]
   47020:	beq	46dc0 <Mat_VarDuplicate+0x484>
   47024:	mov	r7, r0
   47028:	ldr	r0, [r5, #8]
   4702c:	ldr	r6, [r8, #20]
   47030:	ldr	r8, [r8, #24]
   47034:	bl	193c <Mat_SizeOf@plt>
   47038:	mul	r2, r0, r6
   4703c:	mov	r0, r7
   47040:	mov	r1, r8
   47044:	b	46ff4 <Mat_VarDuplicate+0x6b8>
   47048:	mov	r0, #0
   4704c:	str	r0, [r6, #24]
   47050:	b	46dc0 <Mat_VarDuplicate+0x484>

00047054 <Mat_CalcSingleSubscript>:
   47054:	push	{r4, r5, r6, sl, fp, lr}
   47058:	add	fp, sp, #16
   4705c:	cmp	r0, #1
   47060:	movlt	r0, #0
   47064:	poplt	{r4, r5, r6, sl, fp, pc}
   47068:	mov	ip, r0
   4706c:	sub	lr, r1, #4
   47070:	mov	r3, #0
   47074:	mov	r0, #0
   47078:	b	470bc <Mat_CalcSingleSubscript+0x68>
   4707c:	cmp	r4, #1
   47080:	blt	470d8 <Mat_CalcSingleSubscript+0x84>
   47084:	sub	r4, r4, #1
   47088:	cmp	r3, #0
   4708c:	beq	470a8 <Mat_CalcSingleSubscript+0x54>
   47090:	mov	r5, #0
   47094:	ldr	r6, [lr, -r5, lsl #2]
   47098:	add	r5, r5, #1
   4709c:	cmp	r3, r5
   470a0:	mul	r4, r6, r4
   470a4:	bne	47094 <Mat_CalcSingleSubscript+0x40>
   470a8:	add	r3, r3, #1
   470ac:	add	r0, r4, r0
   470b0:	add	lr, lr, #4
   470b4:	cmp	r3, ip
   470b8:	popge	{r4, r5, r6, sl, fp, pc}
   470bc:	ldr	r4, [r2, r3, lsl #2]
   470c0:	ldr	r5, [r1, r3, lsl #2]
   470c4:	cmp	r4, r5
   470c8:	ble	4707c <Mat_CalcSingleSubscript+0x28>
   470cc:	ldr	r0, [pc, #12]	; 470e0 <Mat_CalcSingleSubscript+0x8c>
   470d0:	add	r0, pc, r0
   470d4:	bl	19cc <Mat_Critical@plt>
   470d8:	mvn	r0, #0
   470dc:	pop	{r4, r5, r6, sl, fp, pc}
   470e0:	.word	0x00003336

000470e4 <Mat_CalcSingleSubscript2>:
   470e4:	push	{r4, r5, r6, sl, fp, lr}
   470e8:	add	fp, sp, #16
   470ec:	cmp	r0, #1
   470f0:	blt	47154 <Mat_CalcSingleSubscript2+0x70>
   470f4:	sub	ip, r1, #4
   470f8:	mov	lr, #0
   470fc:	ldr	r4, [r2, lr, lsl #2]
   47100:	ldr	r5, [r1, lr, lsl #2]
   47104:	cmp	r4, r5
   47108:	bhi	4715c <Mat_CalcSingleSubscript2+0x78>
   4710c:	cmp	r4, #0
   47110:	beq	47168 <Mat_CalcSingleSubscript2+0x84>
   47114:	sub	r4, r4, #1
   47118:	cmp	lr, #0
   4711c:	beq	47138 <Mat_CalcSingleSubscript2+0x54>
   47120:	mov	r5, #0
   47124:	ldr	r6, [ip, -r5, lsl #2]
   47128:	add	r5, r5, #1
   4712c:	cmp	lr, r5
   47130:	mul	r4, r6, r4
   47134:	bne	47124 <Mat_CalcSingleSubscript2+0x40>
   47138:	ldr	r5, [r3]
   4713c:	add	lr, lr, #1
   47140:	add	ip, ip, #4
   47144:	cmp	lr, r0
   47148:	add	r4, r5, r4
   4714c:	str	r4, [r3]
   47150:	blt	470fc <Mat_CalcSingleSubscript2+0x18>
   47154:	mov	r0, #0
   47158:	pop	{r4, r5, r6, sl, fp, pc}
   4715c:	ldr	r0, [pc, #12]	; 47170 <Mat_CalcSingleSubscript2+0x8c>
   47160:	add	r0, pc, r0
   47164:	bl	19cc <Mat_Critical@plt>
   47168:	mov	r0, #1
   4716c:	pop	{r4, r5, r6, sl, fp, pc}
   47170:	.word	0x000032d3

00047174 <Mat_CalcSubscripts>:
   47174:	push	{r4, r5, r6, sl, fp, lr}
   47178:	add	fp, sp, #16
   4717c:	mov	r5, r0
   47180:	lsl	r0, r0, #2
   47184:	mov	r6, r2
   47188:	mov	r4, r1
   4718c:	bl	18e8 <malloc@plt>
   47190:	cmp	r5, #0
   47194:	popeq	{r4, r5, r6, sl, fp, pc}
   47198:	vmov	s0, r6
   4719c:	rsb	r1, r5, #2
   471a0:	vcvt.f64.s32	d16, s0
   471a4:	mov	r2, #1
   471a8:	subs	r5, r5, #1
   471ac:	beq	471c8 <Mat_CalcSubscripts+0x54>
   471b0:	mov	r3, r1
   471b4:	ldr	r6, [r4, -r3, lsl #2]
   471b8:	add	r3, r3, #1
   471bc:	cmp	r3, #1
   471c0:	mul	r2, r6, r2
   471c4:	bne	471b4 <Mat_CalcSubscripts+0x40>
   471c8:	vmov	s0, r2
   471cc:	add	r1, r1, #1
   471d0:	cmp	r5, #0
   471d4:	vcvt.f64.s32	d17, s0
   471d8:	vdiv.f64	d17, d16, d17
   471dc:	vcvtm.s32.f64	s0, d17
   471e0:	vmov	r3, s0
   471e4:	mul	r2, r2, r3
   471e8:	vmov	s0, r2
   471ec:	add	r2, r3, #1
   471f0:	vcvt.f64.s32	d17, s0
   471f4:	str	r2, [r0, r5, lsl #2]
   471f8:	vsub.f64	d16, d16, d17
   471fc:	bne	471a4 <Mat_CalcSubscripts+0x30>
   47200:	pop	{r4, r5, r6, sl, fp, pc}

00047204 <Mat_CalcSubscripts2>:
   47204:	push	{r4, r5, r6, sl, fp, lr}
   47208:	add	fp, sp, #16
   4720c:	mov	r5, r0
   47210:	lsl	r0, r0, #2
   47214:	mov	r6, r2
   47218:	mov	r4, r1
   4721c:	bl	18e8 <malloc@plt>
   47220:	cmp	r5, #0
   47224:	popeq	{r4, r5, r6, sl, fp, pc}
   47228:	vmov	s0, r6
   4722c:	rsb	r1, r5, #2
   47230:	vcvt.f64.u32	d16, s0
   47234:	mov	r2, #1
   47238:	subs	r5, r5, #1
   4723c:	beq	47258 <Mat_CalcSubscripts2+0x54>
   47240:	mov	r3, r1
   47244:	ldr	r6, [r4, -r3, lsl #2]
   47248:	add	r3, r3, #1
   4724c:	cmp	r3, #1
   47250:	mul	r2, r6, r2
   47254:	bne	47244 <Mat_CalcSubscripts2+0x40>
   47258:	vmov	s0, r2
   4725c:	add	r1, r1, #1
   47260:	cmp	r5, #0
   47264:	vcvt.f64.u32	d17, s0
   47268:	vdiv.f64	d17, d16, d17
   4726c:	vcvtm.u32.f64	s0, d17
   47270:	vmov	r3, s0
   47274:	mul	r2, r2, r3
   47278:	vmov	s0, r2
   4727c:	add	r2, r3, #1
   47280:	vcvt.f64.u32	d17, s0
   47284:	str	r2, [r0, r5, lsl #2]
   47288:	vsub.f64	d16, d16, d17
   4728c:	bne	47234 <Mat_CalcSubscripts2+0x30>
   47290:	pop	{r4, r5, r6, sl, fp, pc}

00047294 <Mat_VarGetSize>:
   47294:	push	{r4, r5, r6, r7, fp, lr}
   47298:	add	fp, sp, #16
   4729c:	mov	r4, r0
   472a0:	ldr	r0, [r0, #16]
   472a4:	cmp	r0, #1
   472a8:	beq	4735c <Mat_VarGetSize+0xc8>
   472ac:	cmp	r0, #5
   472b0:	beq	473c0 <Mat_VarGetSize+0x12c>
   472b4:	cmp	r0, #2
   472b8:	bne	47420 <Mat_VarGetSize+0x18c>
   472bc:	ldr	r5, [r4, #40]	; 0x28
   472c0:	cmp	r5, #0
   472c4:	beq	47460 <Mat_VarGetSize+0x1cc>
   472c8:	ldr	r1, [r4, #52]	; 0x34
   472cc:	ldr	r0, [r4, #4]
   472d0:	ldr	r7, [r1, #4]
   472d4:	cmp	r0, #1
   472d8:	blt	47304 <Mat_VarGetSize+0x70>
   472dc:	ldr	r1, [r4, #32]
   472e0:	mov	r6, #0
   472e4:	mov	r2, #0
   472e8:	ldr	r3, [r1, r2, lsl #2]
   472ec:	umull	r7, r3, r7, r3
   472f0:	cmp	r3, #0
   472f4:	bne	47464 <Mat_VarGetSize+0x1d0>
   472f8:	add	r2, r2, #1
   472fc:	cmp	r2, r0
   47300:	blt	472e8 <Mat_VarGetSize+0x54>
   47304:	mov	r0, #60	; 0x3c
   47308:	umull	r6, r0, r7, r0
   4730c:	cmp	r0, #0
   47310:	movwne	r0, #1
   47314:	cmp	r0, #0
   47318:	movwne	r6, #0
   4731c:	cmp	r7, #0
   47320:	beq	47464 <Mat_VarGetSize+0x1d0>
   47324:	ldr	r0, [r5]
   47328:	cmp	r0, #0
   4732c:	beq	4734c <Mat_VarGetSize+0xb8>
   47330:	ldr	r1, [r0, #16]
   47334:	cmp	r1, #0
   47338:	beq	47348 <Mat_VarGetSize+0xb4>
   4733c:	bl	1a5c <Mat_VarGetSize@plt>
   47340:	add	r6, r0, r6
   47344:	b	4734c <Mat_VarGetSize+0xb8>
   47348:	sub	r6, r6, #56	; 0x38
   4734c:	subs	r7, r7, #1
   47350:	add	r5, r5, #4
   47354:	bne	47324 <Mat_VarGetSize+0x90>
   47358:	b	47464 <Mat_VarGetSize+0x1d0>
   4735c:	ldr	r6, [r4, #40]	; 0x28
   47360:	cmp	r6, #0
   47364:	beq	47458 <Mat_VarGetSize+0x1c4>
   47368:	ldr	r0, [r4]
   4736c:	ldr	r1, [r4, #12]
   47370:	udiv	r4, r0, r1
   47374:	cmp	r1, r0
   47378:	rsb	r2, r4, r4, lsl #4
   4737c:	lsl	r5, r2, #2
   47380:	bhi	47470 <Mat_VarGetSize+0x1dc>
   47384:	mov	r7, #0
   47388:	ldr	r0, [r6, r7, lsl #2]
   4738c:	cmp	r0, #0
   47390:	beq	473b0 <Mat_VarGetSize+0x11c>
   47394:	ldr	r1, [r0, #16]
   47398:	cmp	r1, #0
   4739c:	beq	473ac <Mat_VarGetSize+0x118>
   473a0:	bl	1a5c <Mat_VarGetSize@plt>
   473a4:	add	r5, r0, r5
   473a8:	b	473b0 <Mat_VarGetSize+0x11c>
   473ac:	sub	r5, r5, #56	; 0x38
   473b0:	add	r7, r7, #1
   473b4:	cmp	r7, r4
   473b8:	bcc	47388 <Mat_VarGetSize+0xf4>
   473bc:	b	47470 <Mat_VarGetSize+0x1dc>
   473c0:	ldr	r6, [r4, #40]	; 0x28
   473c4:	cmp	r6, #0
   473c8:	beq	47458 <Mat_VarGetSize+0x1c4>
   473cc:	ldr	r0, [r4, #8]
   473d0:	ldr	r5, [r6, #20]
   473d4:	bl	193c <Mat_SizeOf@plt>
   473d8:	mul	r1, r0, r5
   473dc:	ldr	r2, [r4, #20]
   473e0:	ldr	r0, [r6, #8]
   473e4:	ldr	r3, [r6, #16]
   473e8:	cmp	r2, #0
   473ec:	add	r7, r3, r0
   473f0:	movwne	r2, #1
   473f4:	cmp	r3, #0
   473f8:	lsl	r7, r7, #2
   473fc:	add	r5, r7, r1, lsl r2
   47400:	cmpne	r0, #0
   47404:	bne	47490 <Mat_VarGetSize+0x1fc>
   47408:	ldr	r0, [r4, #28]
   4740c:	mov	r1, #1
   47410:	cmp	r0, #0
   47414:	movweq	r1, #8
   47418:	add	r5, r1, r5
   4741c:	b	47470 <Mat_VarGetSize+0x1dc>
   47420:	ldr	r5, [r4, #4]
   47424:	cmp	r5, #1
   47428:	blt	47458 <Mat_VarGetSize+0x1c4>
   4742c:	bl	1a38 <Mat_SizeOfClass@plt>
   47430:	ldr	r1, [r4, #32]
   47434:	mov	r2, #0
   47438:	ldr	r3, [r1, r2, lsl #2]
   4743c:	umull	r0, r3, r0, r3
   47440:	cmp	r3, #0
   47444:	bne	47478 <Mat_VarGetSize+0x1e4>
   47448:	add	r2, r2, #1
   4744c:	cmp	r2, r5
   47450:	blt	47438 <Mat_VarGetSize+0x1a4>
   47454:	b	4747c <Mat_VarGetSize+0x1e8>
   47458:	mov	r5, #0
   4745c:	b	47470 <Mat_VarGetSize+0x1dc>
   47460:	mov	r6, #0
   47464:	ldr	r0, [r4, #52]	; 0x34
   47468:	ldr	r0, [r0, #4]
   4746c:	add	r5, r6, r0, lsl #6
   47470:	mov	r0, r5
   47474:	pop	{r4, r5, r6, r7, fp, pc}
   47478:	mov	r0, #0
   4747c:	ldr	r1, [r4, #20]
   47480:	cmp	r1, #0
   47484:	movwne	r1, #1
   47488:	lsl	r0, r0, r1
   4748c:	pop	{r4, r5, r6, r7, fp, pc}
   47490:	ldr	r0, [r6, #20]
   47494:	cmp	r0, #0
   47498:	bne	47470 <Mat_VarGetSize+0x1dc>
   4749c:	b	47408 <Mat_VarGetSize+0x174>

000474a0 <Mat_VarPrint>:
   474a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   474a4:	add	fp, sp, #28
   474a8:	sub	sp, sp, #4
   474ac:	cmp	r0, #0
   474b0:	beq	47784 <Mat_VarPrint+0x2e4>
   474b4:	mov	r9, r1
   474b8:	ldr	r1, [r0, #36]	; 0x24
   474bc:	mov	sl, r0
   474c0:	cmp	r1, #0
   474c4:	beq	474d4 <Mat_VarPrint+0x34>
   474c8:	ldr	r0, [pc, #2012]	; 47cac <Mat_VarPrint+0x80c>
   474cc:	add	r0, pc, r0
   474d0:	bl	17ec <printf@plt>
   474d4:	ldr	r1, [sl, #4]
   474d8:	ldr	r0, [pc, #2000]	; 47cb0 <Mat_VarPrint+0x810>
   474dc:	add	r0, pc, r0
   474e0:	bl	17ec <printf@plt>
   474e4:	ldr	r0, [sl, #4]
   474e8:	cmp	r0, #1
   474ec:	blt	47784 <Mat_VarPrint+0x2e4>
   474f0:	ldr	r1, [sl, #32]
   474f4:	cmp	r1, #0
   474f8:	beq	47524 <Mat_VarPrint+0x84>
   474fc:	mov	r7, #1
   47500:	mov	r2, #0
   47504:	ldr	r3, [r1, r2, lsl #2]
   47508:	umull	r7, r3, r7, r3
   4750c:	cmp	r3, #0
   47510:	bne	4752c <Mat_VarPrint+0x8c>
   47514:	add	r2, r2, #1
   47518:	cmp	r2, r0
   4751c:	blt	47504 <Mat_VarPrint+0x64>
   47520:	b	47530 <Mat_VarPrint+0x90>
   47524:	mov	r7, #0
   47528:	b	47580 <Mat_VarPrint+0xe0>
   4752c:	mov	r7, #0
   47530:	ldr	r1, [r1]
   47534:	ldr	r0, [pc, #1912]	; 47cb4 <Mat_VarPrint+0x814>
   47538:	add	r0, pc, r0
   4753c:	bl	17ec <printf@plt>
   47540:	ldr	r0, [sl, #4]
   47544:	cmp	r0, #2
   47548:	blt	47578 <Mat_VarPrint+0xd8>
   4754c:	ldr	r6, [pc, #1892]	; 47cb8 <Mat_VarPrint+0x818>
   47550:	mov	r4, #1
   47554:	add	r6, pc, r6
   47558:	ldr	r0, [sl, #32]
   4755c:	ldr	r1, [r0, r4, lsl #2]
   47560:	mov	r0, r6
   47564:	bl	17ec <printf@plt>
   47568:	ldr	r0, [sl, #4]
   4756c:	add	r4, r4, #1
   47570:	cmp	r4, r0
   47574:	blt	47558 <Mat_VarPrint+0xb8>
   47578:	mov	r0, #10
   4757c:	bl	19b4 <putchar@plt>
   47580:	ldr	r0, [sl, #16]
   47584:	ldr	r1, [pc, #1840]	; 47cbc <Mat_VarPrint+0x81c>
   47588:	add	r1, pc, r1
   4758c:	ldr	r1, [r1, r0, lsl #2]
   47590:	ldr	r0, [pc, #1832]	; 47cc0 <Mat_VarPrint+0x820>
   47594:	add	r0, pc, r0
   47598:	bl	17ec <printf@plt>
   4759c:	ldr	r0, [sl, #20]
   475a0:	cmp	r0, #0
   475a4:	beq	475b4 <Mat_VarPrint+0x114>
   475a8:	ldr	r0, [pc, #1812]	; 47cc4 <Mat_VarPrint+0x824>
   475ac:	add	r0, pc, r0
   475b0:	b	475c8 <Mat_VarPrint+0x128>
   475b4:	ldr	r0, [sl, #28]
   475b8:	cmp	r0, #0
   475bc:	beq	475cc <Mat_VarPrint+0x12c>
   475c0:	ldr	r0, [pc, #1792]	; 47cc8 <Mat_VarPrint+0x828>
   475c4:	add	r0, pc, r0
   475c8:	bl	17ec <printf@plt>
   475cc:	mov	r0, #10
   475d0:	bl	19b4 <putchar@plt>
   475d4:	ldr	r0, [sl, #8]
   475d8:	cmp	r0, #0
   475dc:	beq	475f8 <Mat_VarPrint+0x158>
   475e0:	ldr	r1, [pc, #1764]	; 47ccc <Mat_VarPrint+0x82c>
   475e4:	add	r1, pc, r1
   475e8:	ldr	r1, [r1, r0, lsl #2]
   475ec:	ldr	r0, [pc, #1756]	; 47cd0 <Mat_VarPrint+0x830>
   475f0:	add	r0, pc, r0
   475f4:	bl	17ec <printf@plt>
   475f8:	ldr	r0, [sl, #16]
   475fc:	cmp	r0, #2
   47600:	bne	47688 <Mat_VarPrint+0x1e8>
   47604:	ldr	r0, [sl, #52]	; 0x34
   47608:	ldr	r6, [r0, #4]
   4760c:	umull	r7, r0, r7, r6
   47610:	cmp	r0, #0
   47614:	bne	476f8 <Mat_VarPrint+0x258>
   47618:	cmp	r7, #0
   4761c:	beq	476f8 <Mat_VarPrint+0x258>
   47620:	ldr	r5, [sl, #40]	; 0x28
   47624:	ldr	r0, [pc, #1704]	; 47cd4 <Mat_VarPrint+0x834>
   47628:	mov	r1, r7
   4762c:	add	r0, pc, r0
   47630:	bl	17ec <printf@plt>
   47634:	ldr	r8, [pc, #1692]	; 47cd8 <Mat_VarPrint+0x838>
   47638:	mov	r4, #0
   4763c:	add	r8, pc, r8
   47640:	ldr	r0, [r5, r4, lsl #2]
   47644:	cmp	r0, #0
   47648:	beq	47658 <Mat_VarPrint+0x1b8>
   4764c:	mov	r1, r9
   47650:	bl	1984 <Mat_VarPrint@plt>
   47654:	b	47678 <Mat_VarPrint+0x1d8>
   47658:	ldr	r1, [sl, #52]	; 0x34
   4765c:	udiv	r0, r4, r6
   47660:	mov	r2, #0
   47664:	mls	r0, r0, r6, r4
   47668:	ldr	r1, [r1, #8]
   4766c:	ldr	r1, [r1, r0, lsl #2]
   47670:	mov	r0, r8
   47674:	bl	17ec <printf@plt>
   47678:	add	r4, r4, #1
   4767c:	cmp	r7, r4
   47680:	bne	47640 <Mat_VarPrint+0x1a0>
   47684:	b	47740 <Mat_VarPrint+0x2a0>
   47688:	ldr	r5, [sl, #40]	; 0x28
   4768c:	cmp	r5, #0
   47690:	beq	476e4 <Mat_VarPrint+0x244>
   47694:	ldr	r4, [sl, #12]
   47698:	cmp	r4, #0
   4769c:	ble	476e4 <Mat_VarPrint+0x244>
   476a0:	cmp	r0, #1
   476a4:	bne	47754 <Mat_VarPrint+0x2b4>
   476a8:	ldr	r6, [sl]
   476ac:	ldr	r0, [pc, #1592]	; 47cec <Mat_VarPrint+0x84c>
   476b0:	add	r0, pc, r0
   476b4:	bl	18dc <puts@plt>
   476b8:	cmp	r4, r6
   476bc:	bhi	47740 <Mat_VarPrint+0x2a0>
   476c0:	udiv	r4, r6, r4
   476c4:	mov	r6, #0
   476c8:	ldr	r0, [r5, r6, lsl #2]
   476cc:	mov	r1, r9
   476d0:	bl	1984 <Mat_VarPrint@plt>
   476d4:	add	r6, r6, #1
   476d8:	cmp	r6, r4
   476dc:	bcc	476c8 <Mat_VarPrint+0x228>
   476e0:	b	47740 <Mat_VarPrint+0x2a0>
   476e4:	cmp	r9, #0
   476e8:	beq	47784 <Mat_VarPrint+0x2e4>
   476ec:	ldr	r0, [pc, #1524]	; 47ce8 <Mat_VarPrint+0x848>
   476f0:	add	r0, pc, r0
   476f4:	b	47748 <Mat_VarPrint+0x2a8>
   476f8:	ldr	r0, [pc, #1504]	; 47ce0 <Mat_VarPrint+0x840>
   476fc:	mov	r1, r6
   47700:	add	r0, pc, r0
   47704:	bl	17ec <printf@plt>
   47708:	cmp	r6, #0
   4770c:	beq	47740 <Mat_VarPrint+0x2a0>
   47710:	ldr	r5, [pc, #1484]	; 47ce4 <Mat_VarPrint+0x844>
   47714:	mov	r4, #0
   47718:	add	r5, pc, r5
   4771c:	ldr	r0, [sl, #52]	; 0x34
   47720:	mov	r2, #0
   47724:	ldr	r0, [r0, #8]
   47728:	ldr	r1, [r0, r4, lsl #2]
   4772c:	mov	r0, r5
   47730:	bl	17ec <printf@plt>
   47734:	add	r4, r4, #1
   47738:	cmp	r6, r4
   4773c:	bne	4771c <Mat_VarPrint+0x27c>
   47740:	ldr	r0, [pc, #1428]	; 47cdc <Mat_VarPrint+0x83c>
   47744:	add	r0, pc, r0
   47748:	sub	sp, fp, #28
   4774c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   47750:	b	18dc <puts@plt>
   47754:	cmp	r9, #0
   47758:	beq	47784 <Mat_VarPrint+0x2e4>
   4775c:	ldr	r0, [pc, #1420]	; 47cf0 <Mat_VarPrint+0x850>
   47760:	add	r0, pc, r0
   47764:	bl	18dc <puts@plt>
   47768:	ldr	r0, [sl, #4]
   4776c:	cmp	r0, #3
   47770:	blt	4778c <Mat_VarPrint+0x2ec>
   47774:	ldr	r0, [pc, #1400]	; 47cf4 <Mat_VarPrint+0x854>
   47778:	add	r0, pc, r0
   4777c:	bl	18dc <puts@plt>
   47780:	b	47740 <Mat_VarPrint+0x2a0>
   47784:	sub	sp, fp, #28
   47788:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4778c:	cmp	r0, #2
   47790:	beq	477c0 <Mat_VarPrint+0x320>
   47794:	cmp	r0, #1
   47798:	bne	47740 <Mat_VarPrint+0x2a0>
   4779c:	ldr	r0, [sl, #32]
   477a0:	cmp	r0, #0
   477a4:	beq	47740 <Mat_VarPrint+0x2a0>
   477a8:	ldr	r0, [r0]
   477ac:	cmp	r0, #16
   477b0:	bcc	47740 <Mat_VarPrint+0x2a0>
   477b4:	ldr	r0, [pc, #1340]	; 47cf8 <Mat_VarPrint+0x858>
   477b8:	add	r0, pc, r0
   477bc:	b	4777c <Mat_VarPrint+0x2dc>
   477c0:	ldr	r0, [sl, #32]
   477c4:	cmp	r0, #0
   477c8:	beq	47740 <Mat_VarPrint+0x2a0>
   477cc:	ldr	r1, [sl, #16]
   477d0:	sub	r2, r1, #6
   477d4:	cmp	r2, #10
   477d8:	bcs	4799c <Mat_VarPrint+0x4fc>
   477dc:	ldr	r0, [sl, #8]
   477e0:	bl	193c <Mat_SizeOf@plt>
   477e4:	mov	r5, r0
   477e8:	ldr	r0, [sl, #20]
   477ec:	cmp	r0, #0
   477f0:	beq	478b8 <Mat_VarPrint+0x418>
   477f4:	ldr	r1, [sl, #32]
   477f8:	ldr	r0, [r1]
   477fc:	cmp	r0, #0
   47800:	beq	47740 <Mat_VarPrint+0x2a0>
   47804:	ldr	r2, [sl, #40]	; 0x28
   47808:	mov	r7, #0
   4780c:	ldm	r2, {r6, r8}
   47810:	ldr	r1, [r1, #4]
   47814:	cmp	r1, #0
   47818:	beq	4788c <Mat_VarPrint+0x3ec>
   4781c:	mov	r9, #1
   47820:	b	4782c <Mat_VarPrint+0x38c>
   47824:	ldr	r0, [r0]
   47828:	add	r9, r9, #1
   4782c:	sub	r1, r9, #1
   47830:	mla	r4, r0, r1, r7
   47834:	ldr	r0, [sl, #8]
   47838:	mla	r1, r4, r5, r6
   4783c:	bl	47d28 <Mat_PrintNumber>
   47840:	ldr	r0, [pc, #1204]	; 47cfc <Mat_VarPrint+0x85c>
   47844:	add	r0, pc, r0
   47848:	bl	17ec <printf@plt>
   4784c:	ldr	r0, [sl, #8]
   47850:	mla	r1, r4, r5, r8
   47854:	bl	47d28 <Mat_PrintNumber>
   47858:	ldr	r0, [pc, #1184]	; 47d00 <Mat_VarPrint+0x860>
   4785c:	add	r0, pc, r0
   47860:	bl	17ec <printf@plt>
   47864:	ldr	r0, [sl, #32]
   47868:	cmp	r9, #14
   4786c:	ldr	r1, [r0, #4]
   47870:	cmpls	r9, r1
   47874:	bcc	47824 <Mat_VarPrint+0x384>
   47878:	cmp	r9, r1
   4787c:	bcs	4788c <Mat_VarPrint+0x3ec>
   47880:	ldr	r0, [pc, #1148]	; 47d04 <Mat_VarPrint+0x864>
   47884:	add	r0, pc, r0
   47888:	bl	17ec <printf@plt>
   4788c:	mov	r0, #10
   47890:	bl	19b4 <putchar@plt>
   47894:	ldr	r1, [sl, #32]
   47898:	add	r7, r7, #1
   4789c:	cmp	r7, #14
   478a0:	ldr	r0, [r1]
   478a4:	cmpls	r7, r0
   478a8:	bcc	47810 <Mat_VarPrint+0x370>
   478ac:	cmp	r7, r0
   478b0:	bcs	47740 <Mat_VarPrint+0x2a0>
   478b4:	b	47990 <Mat_VarPrint+0x4f0>
   478b8:	ldr	r0, [sl, #32]
   478bc:	ldr	r1, [r0]
   478c0:	cmp	r1, #0
   478c4:	beq	47740 <Mat_VarPrint+0x2a0>
   478c8:	ldr	r9, [sl, #40]	; 0x28
   478cc:	ldr	r8, [pc, #1080]	; 47d0c <Mat_VarPrint+0x86c>
   478d0:	mov	r7, #0
   478d4:	add	r8, pc, r8
   478d8:	ldr	r0, [r0, #4]
   478dc:	cmp	r0, #0
   478e0:	beq	47968 <Mat_VarPrint+0x4c8>
   478e4:	ldr	r0, [sl, #8]
   478e8:	mla	r1, r7, r5, r9
   478ec:	bl	47d28 <Mat_PrintNumber>
   478f0:	mov	r0, #32
   478f4:	bl	19b4 <putchar@plt>
   478f8:	ldr	r0, [sl, #32]
   478fc:	mov	r1, #0
   47900:	ldr	r2, [r0, #4]
   47904:	cmp	r2, #1
   47908:	movwhi	r1, #1
   4790c:	cmp	r2, #2
   47910:	bcc	47958 <Mat_VarPrint+0x4b8>
   47914:	mov	r6, #1
   47918:	ldr	r0, [r0]
   4791c:	mla	r0, r0, r6, r7
   47920:	mla	r1, r0, r5, r9
   47924:	ldr	r0, [sl, #8]
   47928:	bl	47d28 <Mat_PrintNumber>
   4792c:	mov	r0, #32
   47930:	bl	19b4 <putchar@plt>
   47934:	ldr	r0, [sl, #32]
   47938:	add	r6, r6, #1
   4793c:	mov	r1, #0
   47940:	ldr	r2, [r0, #4]
   47944:	cmp	r6, r2
   47948:	movwcc	r1, #1
   4794c:	cmp	r6, #14
   47950:	cmpls	r6, r2
   47954:	bcc	47918 <Mat_VarPrint+0x478>
   47958:	cmp	r1, #0
   4795c:	beq	47968 <Mat_VarPrint+0x4c8>
   47960:	mov	r0, r8
   47964:	bl	17ec <printf@plt>
   47968:	mov	r0, #10
   4796c:	bl	19b4 <putchar@plt>
   47970:	ldr	r0, [sl, #32]
   47974:	add	r7, r7, #1
   47978:	cmp	r7, #14
   4797c:	ldr	r1, [r0]
   47980:	cmpls	r7, r1
   47984:	bcc	478d8 <Mat_VarPrint+0x438>
   47988:	cmp	r7, r1
   4798c:	bcs	47740 <Mat_VarPrint+0x2a0>
   47990:	ldr	r0, [pc, #880]	; 47d08 <Mat_VarPrint+0x868>
   47994:	add	r0, pc, r0
   47998:	b	4777c <Mat_VarPrint+0x2dc>
   4799c:	cmp	r1, #4
   479a0:	beq	47a94 <Mat_VarPrint+0x5f4>
   479a4:	cmp	r1, #5
   479a8:	bne	47740 <Mat_VarPrint+0x2a0>
   479ac:	ldr	r0, [sl, #8]
   479b0:	bl	193c <Mat_SizeOf@plt>
   479b4:	str	r0, [sp]
   479b8:	ldr	r0, [sl, #20]
   479bc:	ldr	r5, [sl, #40]	; 0x28
   479c0:	cmp	r0, #0
   479c4:	beq	47b7c <Mat_VarPrint+0x6dc>
   479c8:	ldr	r1, [r5, #16]
   479cc:	cmp	r1, #1
   479d0:	beq	47740 <Mat_VarPrint+0x2a0>
   479d4:	ldr	r0, [r5, #24]
   479d8:	mov	r6, #0
   479dc:	ldm	r0, {r8, r9}
   479e0:	ldr	r0, [r5, #12]
   479e4:	ldr	r7, [r0, r6, lsl #2]
   479e8:	add	r6, r6, #1
   479ec:	ldr	r2, [r0, r6, lsl #2]
   479f0:	cmp	r7, r2
   479f4:	bcs	47a84 <Mat_VarPrint+0x5e4>
   479f8:	ldr	r1, [r5, #20]
   479fc:	cmp	r7, r1
   47a00:	bcs	47a80 <Mat_VarPrint+0x5e0>
   47a04:	ldr	r0, [sp]
   47a08:	mul	r4, r0, r7
   47a0c:	ldr	r0, [r5, #4]
   47a10:	mov	r2, r6
   47a14:	ldr	r0, [r0, r7, lsl #2]
   47a18:	add	r1, r0, #1
   47a1c:	ldr	r0, [pc, #756]	; 47d18 <Mat_VarPrint+0x878>
   47a20:	add	r0, pc, r0
   47a24:	bl	17ec <printf@plt>
   47a28:	ldr	r0, [sl, #8]
   47a2c:	add	r1, r8, r4
   47a30:	bl	47d28 <Mat_PrintNumber>
   47a34:	ldr	r0, [pc, #736]	; 47d1c <Mat_VarPrint+0x87c>
   47a38:	add	r0, pc, r0
   47a3c:	bl	17ec <printf@plt>
   47a40:	ldr	r0, [sl, #8]
   47a44:	add	r1, r9, r4
   47a48:	bl	47d28 <Mat_PrintNumber>
   47a4c:	ldr	r0, [pc, #716]	; 47d20 <Mat_VarPrint+0x880>
   47a50:	add	r0, pc, r0
   47a54:	bl	18dc <puts@plt>
   47a58:	ldr	r0, [r5, #12]
   47a5c:	add	r7, r7, #1
   47a60:	ldr	r1, [r0, r6, lsl #2]
   47a64:	cmp	r7, r1
   47a68:	bcs	47a80 <Mat_VarPrint+0x5e0>
   47a6c:	ldr	r1, [sp]
   47a70:	add	r4, r4, r1
   47a74:	ldr	r1, [r5, #20]
   47a78:	cmp	r7, r1
   47a7c:	bcc	47a0c <Mat_VarPrint+0x56c>
   47a80:	ldr	r1, [r5, #16]
   47a84:	sub	r2, r1, #1
   47a88:	cmp	r6, r2
   47a8c:	bcc	479e4 <Mat_VarPrint+0x544>
   47a90:	b	47740 <Mat_VarPrint+0x2a0>
   47a94:	ldr	r1, [sl, #8]
   47a98:	cmp	r1, #17
   47a9c:	cmpne	r1, #4
   47aa0:	bne	47c2c <Mat_VarPrint+0x78c>
   47aa4:	ldr	r1, [r0]
   47aa8:	cmp	r1, #0
   47aac:	beq	47740 <Mat_VarPrint+0x2a0>
   47ab0:	ldr	r7, [sl, #40]	; 0x28
   47ab4:	ldr	r4, [pc, #596]	; 47d10 <Mat_VarPrint+0x870>
   47ab8:	mov	r5, #0
   47abc:	mov	r6, #2
   47ac0:	mov	r9, #0
   47ac4:	add	r4, pc, r4
   47ac8:	ldr	r0, [r0, #4]
   47acc:	cmp	r0, #0
   47ad0:	beq	47b5c <Mat_VarPrint+0x6bc>
   47ad4:	mov	r8, #1
   47ad8:	b	47ae4 <Mat_VarPrint+0x644>
   47adc:	ldr	r1, [r0]
   47ae0:	add	r8, r8, #1
   47ae4:	sub	r0, r8, #1
   47ae8:	mla	r0, r1, r0, r9
   47aec:	add	r0, r7, r0, lsl #1
   47af0:	ldrh	r3, [r0]
   47af4:	cmp	r3, #127	; 0x7f
   47af8:	bhi	47b08 <Mat_VarPrint+0x668>
   47afc:	mov	r0, r3
   47b00:	bl	19b4 <putchar@plt>
   47b04:	b	47b4c <Mat_VarPrint+0x6ac>
   47b08:	cmp	r5, r3, lsr #11
   47b0c:	bne	47b30 <Mat_VarPrint+0x690>
   47b10:	mov	r0, #192	; 0xc0
   47b14:	orr	r1, r0, r3, lsr #6
   47b18:	ldr	r0, [pc, #500]	; 47d14 <Mat_VarPrint+0x874>
   47b1c:	bfi	r3, r6, #6, #26
   47b20:	mov	r2, r3
   47b24:	add	r0, pc, r0
   47b28:	bl	17ec <printf@plt>
   47b2c:	b	47b4c <Mat_VarPrint+0x6ac>
   47b30:	lsr	r2, r3, #6
   47b34:	mov	r0, #224	; 0xe0
   47b38:	orr	r1, r0, r3, lsr #12
   47b3c:	bfi	r3, r6, #6, #26
   47b40:	bfi	r2, r6, #6, #26
   47b44:	mov	r0, r4
   47b48:	bl	17ec <printf@plt>
   47b4c:	ldr	r0, [sl, #32]
   47b50:	ldr	r1, [r0, #4]
   47b54:	cmp	r8, r1
   47b58:	bcc	47adc <Mat_VarPrint+0x63c>
   47b5c:	mov	r0, #10
   47b60:	bl	19b4 <putchar@plt>
   47b64:	ldr	r0, [sl, #32]
   47b68:	add	r9, r9, #1
   47b6c:	ldr	r1, [r0]
   47b70:	cmp	r9, r1
   47b74:	bcc	47ac8 <Mat_VarPrint+0x628>
   47b78:	b	47740 <Mat_VarPrint+0x2a0>
   47b7c:	ldr	r1, [r5, #16]
   47b80:	cmp	r1, #1
   47b84:	beq	47740 <Mat_VarPrint+0x2a0>
   47b88:	ldr	r9, [r5, #24]
   47b8c:	ldr	r0, [r5, #12]
   47b90:	ldr	r8, [pc, #396]	; 47d24 <Mat_VarPrint+0x884>
   47b94:	mov	r4, #0
   47b98:	add	r8, pc, r8
   47b9c:	ldr	r6, [r0, r4, lsl #2]
   47ba0:	add	r4, r4, #1
   47ba4:	ldr	r2, [r0, r4, lsl #2]
   47ba8:	cmp	r6, r2
   47bac:	bcs	47c1c <Mat_VarPrint+0x77c>
   47bb0:	ldr	r1, [r5, #20]
   47bb4:	cmp	r6, r1
   47bb8:	bcs	47c18 <Mat_VarPrint+0x778>
   47bbc:	ldr	r0, [sp]
   47bc0:	mla	r7, r0, r6, r9
   47bc4:	ldr	r0, [r5, #4]
   47bc8:	mov	r2, r4
   47bcc:	ldr	r0, [r0, r6, lsl #2]
   47bd0:	add	r1, r0, #1
   47bd4:	mov	r0, r8
   47bd8:	bl	17ec <printf@plt>
   47bdc:	ldr	r0, [sl, #8]
   47be0:	mov	r1, r7
   47be4:	bl	47d28 <Mat_PrintNumber>
   47be8:	mov	r0, #10
   47bec:	bl	19b4 <putchar@plt>
   47bf0:	ldr	r0, [r5, #12]
   47bf4:	add	r6, r6, #1
   47bf8:	ldr	r1, [r0, r4, lsl #2]
   47bfc:	cmp	r6, r1
   47c00:	bcs	47c18 <Mat_VarPrint+0x778>
   47c04:	ldr	r1, [sp]
   47c08:	add	r7, r7, r1
   47c0c:	ldr	r1, [r5, #20]
   47c10:	cmp	r6, r1
   47c14:	bcc	47bc4 <Mat_VarPrint+0x724>
   47c18:	ldr	r1, [r5, #16]
   47c1c:	sub	r2, r1, #1
   47c20:	cmp	r4, r2
   47c24:	bcc	47b9c <Mat_VarPrint+0x6fc>
   47c28:	b	47740 <Mat_VarPrint+0x2a0>
   47c2c:	ldr	r1, [r0]
   47c30:	cmp	r1, #0
   47c34:	beq	47740 <Mat_VarPrint+0x2a0>
   47c38:	ldr	r5, [sl, #40]	; 0x28
   47c3c:	mov	r6, #0
   47c40:	ldr	r0, [r0, #4]
   47c44:	cmp	r0, #0
   47c48:	beq	47c8c <Mat_VarPrint+0x7ec>
   47c4c:	ldrb	r0, [r5, r6]
   47c50:	bl	19b4 <putchar@plt>
   47c54:	ldr	r0, [sl, #32]
   47c58:	ldr	r1, [r0, #4]
   47c5c:	cmp	r1, #2
   47c60:	bcc	47c8c <Mat_VarPrint+0x7ec>
   47c64:	mov	r4, #1
   47c68:	ldr	r0, [r0]
   47c6c:	mla	r0, r0, r4, r6
   47c70:	ldrb	r0, [r5, r0]
   47c74:	bl	19b4 <putchar@plt>
   47c78:	ldr	r0, [sl, #32]
   47c7c:	add	r4, r4, #1
   47c80:	ldr	r1, [r0, #4]
   47c84:	cmp	r4, r1
   47c88:	bcc	47c68 <Mat_VarPrint+0x7c8>
   47c8c:	mov	r0, #10
   47c90:	bl	19b4 <putchar@plt>
   47c94:	ldr	r0, [sl, #32]
   47c98:	add	r6, r6, #1
   47c9c:	ldr	r1, [r0]
   47ca0:	cmp	r6, r1
   47ca4:	bcc	47c40 <Mat_VarPrint+0x7a0>
   47ca8:	b	47740 <Mat_VarPrint+0x2a0>
   47cac:	.word	0x00003104
   47cb0:	.word	0x00003306
   47cb4:	.word	0x000030a8
   47cb8:	.word	0x0000309c
   47cbc:	.word	0x000138c4
   47cc0:	.word	0x00003063
   47cc4:	.word	0x0000305a
   47cc8:	.word	0x0000304d
   47ccc:	.word	0x000138b0
   47cd0:	.word	0x000031c4
   47cd4:	.word	0x00003198
   47cd8:	.word	0x00003197
   47cdc:	.word	0x000031ed
   47ce0:	.word	0x000030c4
   47ce4:	.word	0x000030bb
   47ce8:	.word	0x0000323f
   47cec:	.word	0x0000327d
   47cf0:	.word	0x000031cd
   47cf4:	.word	0x000031f0
   47cf8:	.word	0x00003180
   47cfc:	.word	0x00002fae
   47d00:	.word	0x00002f9a
   47d04:	.word	0x00002f75
   47d08:	.word	0x00002f93
   47d0c:	.word	0x00002f25
   47d10:	.word	0x00002d39
   47d14:	.word	0x00002cdb
   47d18:	.word	0x00002de4
   47d1c:	.word	0x00002dba
   47d20:	.word	0x00002ebb
   47d24:	.word	0x00002c6c

00047d28 <Mat_PrintNumber>:
   47d28:	sub	r0, r0, #1
   47d2c:	cmp	r0, #12
   47d30:	bxhi	lr
   47d34:	add	r2, pc, #4
   47d38:	ldr	r0, [r2, r0, lsl #2]
   47d3c:	add	pc, r2, r0
   47d40:	.word	0x00000034
   47d44:	.word	0x00000044
   47d48:	.word	0x00000054
   47d4c:	.word	0x00000064
   47d50:	.word	0x00000074
   47d54:	.word	0x00000084
   47d58:	.word	0x00000094
   47d5c:	.word	0x000000d4
   47d60:	.word	0x000000a0
   47d64:	.word	0x000000d4
   47d68:	.word	0x000000d4
   47d6c:	.word	0x000000b4
   47d70:	.word	0x000000c4
   47d74:	ldrsb	r1, [r1]
   47d78:	ldr	r0, [pc, #180]	; 47e34 <Mat_PrintNumber+0x10c>
   47d7c:	add	r0, pc, r0
   47d80:	b	17ec <printf@plt>
   47d84:	ldrb	r1, [r1]
   47d88:	ldr	r0, [pc, #168]	; 47e38 <Mat_PrintNumber+0x110>
   47d8c:	add	r0, pc, r0
   47d90:	b	17ec <printf@plt>
   47d94:	ldrsh	r1, [r1]
   47d98:	ldr	r0, [pc, #140]	; 47e2c <Mat_PrintNumber+0x104>
   47d9c:	add	r0, pc, r0
   47da0:	b	17ec <printf@plt>
   47da4:	ldrh	r1, [r1]
   47da8:	ldr	r0, [pc, #128]	; 47e30 <Mat_PrintNumber+0x108>
   47dac:	add	r0, pc, r0
   47db0:	b	17ec <printf@plt>
   47db4:	ldr	r1, [r1]
   47db8:	ldr	r0, [pc, #100]	; 47e24 <Mat_PrintNumber+0xfc>
   47dbc:	add	r0, pc, r0
   47dc0:	b	17ec <printf@plt>
   47dc4:	ldr	r1, [r1]
   47dc8:	ldr	r0, [pc, #88]	; 47e28 <Mat_PrintNumber+0x100>
   47dcc:	add	r0, pc, r0
   47dd0:	b	17ec <printf@plt>
   47dd4:	vldr	s0, [r1]
   47dd8:	vcvt.f64.f32	d16, s0
   47ddc:	b	47de4 <Mat_PrintNumber+0xbc>
   47de0:	vldr	d16, [r1]
   47de4:	ldr	r0, [pc, #44]	; 47e18 <Mat_PrintNumber+0xf0>
   47de8:	vmov	r2, r3, d16
   47dec:	add	r0, pc, r0
   47df0:	b	17ec <printf@plt>
   47df4:	ldrd	r2, [r1]
   47df8:	ldr	r0, [pc, #28]	; 47e1c <Mat_PrintNumber+0xf4>
   47dfc:	add	r0, pc, r0
   47e00:	b	17ec <printf@plt>
   47e04:	ldrd	r2, [r1]
   47e08:	ldr	r0, [pc, #16]	; 47e20 <Mat_PrintNumber+0xf8>
   47e0c:	add	r0, pc, r0
   47e10:	b	17ec <printf@plt>
   47e14:	bx	lr
   47e18:	.word	0x00002b19
   47e1c:	.word	0x00002b0c
   47e20:	.word	0x00002b01
   47e24:	.word	0x0000225c
   47e28:	.word	0x00002b46
   47e2c:	.word	0x00002b79
   47e30:	.word	0x00002b6d
   47e34:	.word	0x00002ba1
   47e38:	.word	0x00002b96

00047e3c <Mat_VarReadData>:
   47e3c:	push	{fp, lr}
   47e40:	mov	fp, sp
   47e44:	ldr	ip, [r1, #16]
   47e48:	sub	lr, ip, #6
   47e4c:	mvn	ip, #0
   47e50:	cmp	lr, #9
   47e54:	bhi	47e90 <Mat_VarReadData+0x54>
   47e58:	ldr	ip, [r0, #16]
   47e5c:	cmp	ip, #16
   47e60:	beq	47e7c <Mat_VarReadData+0x40>
   47e64:	cmp	ip, #512	; 0x200
   47e68:	beq	47e84 <Mat_VarReadData+0x48>
   47e6c:	cmp	ip, #256	; 0x100
   47e70:	bne	47e8c <Mat_VarReadData+0x50>
   47e74:	pop	{fp, lr}
   47e78:	b	21d30 <Mat_VarReadData5>
   47e7c:	pop	{fp, lr}
   47e80:	b	44bd8 <Mat_VarReadData4>
   47e84:	mov	ip, #1
   47e88:	b	47e90 <Mat_VarReadData+0x54>
   47e8c:	mov	ip, #2
   47e90:	mov	r0, ip
   47e94:	pop	{fp, pc}

00047e98 <Mat_VarReadDataAll>:
   47e98:	mov	r2, r0
   47e9c:	mov	r0, #1
   47ea0:	cmp	r2, #0
   47ea4:	cmpne	r1, #0
   47ea8:	bne	47eb0 <Mat_VarReadDataAll+0x18>
   47eac:	bx	lr
   47eb0:	push	{fp, lr}
   47eb4:	mov	fp, sp
   47eb8:	mov	r0, r2
   47ebc:	bl	47ecc <ReadData>
   47ec0:	mov	r0, #0
   47ec4:	pop	{fp, lr}
   47ec8:	bx	lr

00047ecc <ReadData>:
   47ecc:	cmp	r0, #0
   47ed0:	beq	47ee4 <ReadData+0x18>
   47ed4:	cmp	r1, #0
   47ed8:	ldrne	r2, [r0]
   47edc:	cmpne	r2, #0
   47ee0:	bne	47ee8 <ReadData+0x1c>
   47ee4:	bx	lr
   47ee8:	ldr	r2, [r0, #16]
   47eec:	cmp	r2, #16
   47ef0:	beq	47f00 <ReadData+0x34>
   47ef4:	cmp	r2, #256	; 0x100
   47ef8:	bxne	lr
   47efc:	b	20008 <Mat_VarRead5>
   47f00:	b	44340 <Mat_VarRead4>

00047f04 <Mat_VarReadDataLinear>:
   47f04:	push	{fp, lr}
   47f08:	mov	fp, sp
   47f0c:	ldr	ip, [r1, #16]
   47f10:	sub	lr, ip, #6
   47f14:	mvn	ip, #0
   47f18:	cmp	lr, #9
   47f1c:	bhi	47f58 <Mat_VarReadDataLinear+0x54>
   47f20:	ldr	ip, [r0, #16]
   47f24:	cmp	ip, #16
   47f28:	beq	47f44 <Mat_VarReadDataLinear+0x40>
   47f2c:	cmp	ip, #512	; 0x200
   47f30:	beq	47f4c <Mat_VarReadDataLinear+0x48>
   47f34:	cmp	ip, #256	; 0x100
   47f38:	bne	47f54 <Mat_VarReadDataLinear+0x50>
   47f3c:	pop	{fp, lr}
   47f40:	b	3ec04 <Mat_VarReadDataLinear5>
   47f44:	pop	{fp, lr}
   47f48:	b	44dec <Mat_VarReadDataLinear4>
   47f4c:	mov	ip, #1
   47f50:	b	47f58 <Mat_VarReadDataLinear+0x54>
   47f54:	mov	ip, #2
   47f58:	mov	r0, ip
   47f5c:	pop	{fp, pc}

00047f60 <Mat_VarReadInfo>:
   47f60:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   47f64:	add	fp, sp, #24
   47f68:	cmp	r0, #0
   47f6c:	mov	r5, #0
   47f70:	movne	r6, r1
   47f74:	cmpne	r1, #0
   47f78:	bne	47f84 <Mat_VarReadInfo+0x24>
   47f7c:	mov	r0, r5
   47f80:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   47f84:	mov	r4, r0
   47f88:	ldr	r0, [r0, #16]
   47f8c:	cmp	r0, #512	; 0x200
   47f90:	bne	47ff8 <Mat_VarReadInfo+0x98>
   47f94:	ldr	r0, [r4, #36]	; 0x24
   47f98:	ldr	r8, [r4, #32]
   47f9c:	mov	r5, #0
   47fa0:	str	r5, [r4, #32]
   47fa4:	cmp	r0, #0
   47fa8:	beq	480a0 <Mat_VarReadInfo+0x140>
   47fac:	mov	r0, r4
   47fb0:	bl	1a8c <Mat_VarReadNextInfo@plt>
   47fb4:	cmp	r0, #0
   47fb8:	beq	4808c <Mat_VarReadInfo+0x12c>
   47fbc:	mov	r7, r0
   47fc0:	ldr	r0, [r0, #36]	; 0x24
   47fc4:	cmp	r0, #0
   47fc8:	beq	47fdc <Mat_VarReadInfo+0x7c>
   47fcc:	mov	r1, r6
   47fd0:	bl	17c8 <strcmp@plt>
   47fd4:	cmp	r0, #0
   47fd8:	beq	4809c <Mat_VarReadInfo+0x13c>
   47fdc:	mov	r0, r7
   47fe0:	bl	1930 <Mat_VarFree@plt>
   47fe4:	ldr	r0, [r4, #32]
   47fe8:	ldr	r1, [r4, #36]	; 0x24
   47fec:	cmp	r0, r1
   47ff0:	bcc	47fac <Mat_VarReadInfo+0x4c>
   47ff4:	b	480a0 <Mat_VarReadInfo+0x140>
   47ff8:	ldr	r0, [r4]
   47ffc:	bl	1858 <ftell@plt>
   48000:	cmn	r0, #1
   48004:	beq	4807c <Mat_VarReadInfo+0x11c>
   48008:	mov	r7, r0
   4800c:	ldr	r0, [r4]
   48010:	ldr	r1, [r4, #28]
   48014:	mov	r2, #0
   48018:	bl	1a68 <fseek@plt>
   4801c:	mov	r0, r4
   48020:	bl	1a8c <Mat_VarReadNextInfo@plt>
   48024:	cmp	r0, #0
   48028:	beq	48058 <Mat_VarReadInfo+0xf8>
   4802c:	mov	r5, r0
   48030:	ldr	r0, [r0, #36]	; 0x24
   48034:	cmp	r0, #0
   48038:	beq	4804c <Mat_VarReadInfo+0xec>
   4803c:	mov	r1, r6
   48040:	bl	17c8 <strcmp@plt>
   48044:	cmp	r0, #0
   48048:	beq	480b8 <Mat_VarReadInfo+0x158>
   4804c:	mov	r0, r5
   48050:	bl	1930 <Mat_VarFree@plt>
   48054:	b	48068 <Mat_VarReadInfo+0x108>
   48058:	ldr	r0, [r4]
   4805c:	bl	1924 <feof@plt>
   48060:	cmp	r0, #0
   48064:	beq	480a8 <Mat_VarReadInfo+0x148>
   48068:	ldr	r0, [r4]
   4806c:	bl	1924 <feof@plt>
   48070:	cmp	r0, #0
   48074:	beq	4801c <Mat_VarReadInfo+0xbc>
   48078:	b	480b4 <Mat_VarReadInfo+0x154>
   4807c:	ldr	r0, [pc, #80]	; 480d4 <Mat_VarReadInfo+0x174>
   48080:	add	r0, pc, r0
   48084:	bl	19cc <Mat_Critical@plt>
   48088:	b	47f7c <Mat_VarReadInfo+0x1c>
   4808c:	ldr	r0, [pc, #56]	; 480cc <Mat_VarReadInfo+0x16c>
   48090:	add	r0, pc, r0
   48094:	bl	19cc <Mat_Critical@plt>
   48098:	b	480a0 <Mat_VarReadInfo+0x140>
   4809c:	mov	r5, r7
   480a0:	str	r8, [r4, #32]
   480a4:	b	47f7c <Mat_VarReadInfo+0x1c>
   480a8:	ldr	r0, [pc, #32]	; 480d0 <Mat_VarReadInfo+0x170>
   480ac:	add	r0, pc, r0
   480b0:	bl	19cc <Mat_Critical@plt>
   480b4:	mov	r5, #0
   480b8:	ldr	r0, [r4]
   480bc:	mov	r1, r7
   480c0:	mov	r2, #0
   480c4:	bl	1a68 <fseek@plt>
   480c8:	b	47f7c <Mat_VarReadInfo+0x1c>
   480cc:	.word	0x00001eb4
   480d0:	.word	0x00001e98
   480d4:	.word	0x00001c38

000480d8 <Mat_VarRead>:
   480d8:	push	{r4, r5, r6, r7, fp, lr}
   480dc:	add	fp, sp, #16
   480e0:	cmp	r0, #0
   480e4:	mov	r4, #0
   480e8:	movne	r6, r1
   480ec:	cmpne	r1, #0
   480f0:	bne	480fc <Mat_VarRead+0x24>
   480f4:	mov	r0, r4
   480f8:	pop	{r4, r5, r6, r7, fp, pc}
   480fc:	mov	r5, r0
   48100:	ldr	r0, [r0, #16]
   48104:	cmp	r0, #512	; 0x200
   48108:	bne	48144 <Mat_VarRead+0x6c>
   4810c:	ldr	r7, [r5, #32]
   48110:	mov	r0, #0
   48114:	mov	r1, r6
   48118:	str	r0, [r5, #32]
   4811c:	mov	r0, r5
   48120:	bl	1894 <Mat_VarReadInfo@plt>
   48124:	mov	r4, r0
   48128:	cmp	r0, #0
   4812c:	beq	4813c <Mat_VarRead+0x64>
   48130:	mov	r0, r5
   48134:	mov	r1, r4
   48138:	bl	47ecc <ReadData>
   4813c:	str	r7, [r5, #32]
   48140:	b	480f4 <Mat_VarRead+0x1c>
   48144:	ldr	r0, [r5]
   48148:	bl	1858 <ftell@plt>
   4814c:	cmn	r0, #1
   48150:	beq	48190 <Mat_VarRead+0xb8>
   48154:	mov	r7, r0
   48158:	mov	r0, r5
   4815c:	mov	r1, r6
   48160:	bl	1894 <Mat_VarReadInfo@plt>
   48164:	mov	r4, r0
   48168:	cmp	r0, #0
   4816c:	beq	4817c <Mat_VarRead+0xa4>
   48170:	mov	r0, r5
   48174:	mov	r1, r4
   48178:	bl	47ecc <ReadData>
   4817c:	ldr	r0, [r5]
   48180:	mov	r1, r7
   48184:	mov	r2, #0
   48188:	bl	1a68 <fseek@plt>
   4818c:	b	480f4 <Mat_VarRead+0x1c>
   48190:	ldr	r0, [pc, #8]	; 481a0 <Mat_VarRead+0xc8>
   48194:	add	r0, pc, r0
   48198:	bl	19cc <Mat_Critical@plt>
   4819c:	b	480f4 <Mat_VarRead+0x1c>
   481a0:	.word	0x00001b24

000481a4 <Mat_VarWriteInfo>:
   481a4:	push	{fp, lr}
   481a8:	mov	fp, sp
   481ac:	ldr	r0, [r0, #16]
   481b0:	ldr	r2, [pc, #36]	; 481dc <Mat_VarWriteInfo+0x38>
   481b4:	ldr	r1, [pc, #36]	; 481e0 <Mat_VarWriteInfo+0x3c>
   481b8:	cmp	r0, #512	; 0x200
   481bc:	ldr	r0, [pc, #32]	; 481e4 <Mat_VarWriteInfo+0x40>
   481c0:	add	r2, pc, r2
   481c4:	add	r1, pc, r1
   481c8:	moveq	r1, r2
   481cc:	add	r0, pc, r0
   481d0:	bl	19cc <Mat_Critical@plt>
   481d4:	mov	r0, #1
   481d8:	pop	{fp, pc}
   481dc:	.word	0x00002697
   481e0:	.word	0x000026b3
   481e4:	.word	0x00002647

000481e8 <Mat_VarWriteData>:
   481e8:	push	{fp, lr}
   481ec:	mov	fp, sp
   481f0:	ldr	r0, [r0, #16]
   481f4:	ldr	r2, [pc, #36]	; 48220 <Mat_VarWriteData+0x38>
   481f8:	ldr	r1, [pc, #36]	; 48224 <Mat_VarWriteData+0x3c>
   481fc:	cmp	r0, #512	; 0x200
   48200:	ldr	r0, [pc, #32]	; 48228 <Mat_VarWriteData+0x40>
   48204:	add	r2, pc, r2
   48208:	add	r1, pc, r1
   4820c:	moveq	r1, r2
   48210:	add	r0, pc, r0
   48214:	bl	19cc <Mat_Critical@plt>
   48218:	mov	r0, #1
   4821c:	pop	{fp, pc}
   48220:	.word	0x00002653
   48224:	.word	0x0000266f
   48228:	.word	0x00002603

0004822c <Mat_VarWriteAppend>:
   4822c:	push	{r4, sl, fp, lr}
   48230:	add	fp, sp, #8
   48234:	sub	sp, sp, #8
   48238:	mov	r4, r0
   4823c:	mvn	r0, #0
   48240:	cmp	r4, #0
   48244:	cmpne	r1, #0
   48248:	beq	4827c <Mat_VarWriteAppend+0x50>
   4824c:	ldr	r0, [r4, #40]	; 0x28
   48250:	cmp	r0, #0
   48254:	bne	4826c <Mat_VarWriteAppend+0x40>
   48258:	mov	r0, #0
   4825c:	add	r1, sp, #4
   48260:	str	r0, [sp, #4]
   48264:	mov	r0, r4
   48268:	bl	1948 <Mat_GetDir@plt>
   4826c:	ldr	r1, [r4, #16]
   48270:	mov	r0, #2
   48274:	cmp	r1, #512	; 0x200
   48278:	movweq	r0, #1
   4827c:	sub	sp, fp, #8
   48280:	pop	{r4, sl, fp, pc}

00048284 <Mat_VarGetCell>:
   48284:	push	{r4, r5, r6, sl, fp, lr}
   48288:	add	fp, sp, #16
   4828c:	sub	sp, sp, #8
   48290:	mov	r6, r0
   48294:	mov	r0, #1
   48298:	mov	r4, #0
   4829c:	cmp	r6, #0
   482a0:	str	r0, [sp, #4]
   482a4:	beq	482d0 <Mat_VarGetCell+0x4c>
   482a8:	mov	r5, r1
   482ac:	add	r1, sp, #4
   482b0:	mov	r0, r6
   482b4:	bl	45294 <SafeMulDims>
   482b8:	cmp	r5, #0
   482bc:	blt	482d0 <Mat_VarGetCell+0x4c>
   482c0:	ldr	r0, [sp, #4]
   482c4:	cmp	r0, r5
   482c8:	ldrhi	r0, [r6, #40]	; 0x28
   482cc:	ldrhi	r4, [r0, r5, lsl #2]
   482d0:	mov	r0, r4
   482d4:	sub	sp, fp, #16
   482d8:	pop	{r4, r5, r6, sl, fp, pc}

000482dc <Mat_VarGetCells>:
   482dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   482e0:	add	fp, sp, #28
   482e4:	sub	sp, sp, #172	; 0xac
   482e8:	mov	sl, r3
   482ec:	sub	r3, fp, #72	; 0x48
   482f0:	str	r2, [sp, #16]
   482f4:	mov	r2, r0
   482f8:	vmov.i32	q8, #0	; 0x00000000
   482fc:	mov	r0, #36	; 0x24
   48300:	mov	r7, #0
   48304:	mov	r6, r3
   48308:	add	r3, r3, #16
   4830c:	cmp	r2, #0
   48310:	str	r7, [fp, #-40]	; 0xffffffd8
   48314:	str	r7, [sp, #120]	; 0x78
   48318:	str	r7, [sp, #80]	; 0x50
   4831c:	vst1.64	{d16-d17}, [r6], r0
   48320:	vst1.64	{d16-d17}, [r3]
   48324:	add	r3, sp, #88	; 0x58
   48328:	cmpne	r1, #0
   4832c:	str	r7, [r6]
   48330:	add	r6, r3, #16
   48334:	vst1.64	{d16-d17}, [r3], r0
   48338:	str	r7, [r3]
   4833c:	add	r3, sp, #48	; 0x30
   48340:	vst1.64	{d16-d17}, [r6]
   48344:	add	r6, r3, #16
   48348:	vst1.64	{d16-d17}, [r3], r0
   4834c:	vst1.64	{d16-d17}, [r6]
   48350:	str	r7, [r3]
   48354:	beq	48368 <Mat_VarGetCells+0x8c>
   48358:	ldr	r0, [sp, #16]
   4835c:	cmp	r0, #0
   48360:	cmpne	sl, #0
   48364:	bne	48374 <Mat_VarGetCells+0x98>
   48368:	mov	r0, r7
   4836c:	sub	sp, fp, #28
   48370:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   48374:	ldr	r3, [r2, #4]
   48378:	cmp	r3, #9
   4837c:	bgt	48368 <Mat_VarGetCells+0x8c>
   48380:	ldr	r9, [r2, #32]
   48384:	cmp	r3, #2
   48388:	str	r2, [sp, #12]
   4838c:	str	r1, [sp, #40]	; 0x28
   48390:	str	r3, [sp, #8]
   48394:	ldr	r7, [r9]
   48398:	str	r7, [sp, #48]	; 0x30
   4839c:	ldr	r0, [sl]
   483a0:	ldr	r5, [r1]
   483a4:	mov	r6, r0
   483a8:	str	r5, [fp, #-72]	; 0xffffffb8
   483ac:	str	r0, [sp, #32]
   483b0:	str	r5, [sp, #36]	; 0x24
   483b4:	blt	4841c <Mat_VarGetCells+0x140>
   483b8:	ldr	r1, [sp, #40]	; 0x28
   483bc:	mvn	r0, #3
   483c0:	add	r2, r0, r3, lsl #2
   483c4:	sub	r0, fp, #72	; 0x48
   483c8:	orr	r0, r0, #4
   483cc:	add	r8, r1, #4
   483d0:	mov	r1, r8
   483d4:	bl	1834 <memcpy@plt>
   483d8:	ldr	r0, [sp, #8]
   483dc:	ldr	r5, [sp, #36]	; 0x24
   483e0:	ldr	r6, [sp, #32]
   483e4:	add	r2, sp, #48	; 0x30
   483e8:	add	r1, sl, #4
   483ec:	add	r3, r9, #4
   483f0:	orr	r2, r2, #4
   483f4:	sub	r0, r0, #1
   483f8:	ldr	r4, [r8], #4
   483fc:	subs	r0, r0, #1
   48400:	mla	r5, r7, r4, r5
   48404:	ldr	r4, [r3], #4
   48408:	mul	r7, r4, r7
   4840c:	str	r7, [r2], #4
   48410:	ldr	r4, [r1], #4
   48414:	mul	r6, r4, r6
   48418:	bne	483f8 <Mat_VarGetCells+0x11c>
   4841c:	lsl	r0, r6, #2
   48420:	bl	18e8 <malloc@plt>
   48424:	mov	r7, r0
   48428:	cmp	r6, #1
   4842c:	blt	48368 <Mat_VarGetCells+0x8c>
   48430:	ldr	r0, [sp, #16]
   48434:	ldr	lr, [sp, #8]
   48438:	str	r6, [sp, #28]
   4843c:	ldr	r6, [sp, #40]	; 0x28
   48440:	ldr	r4, [sp, #32]
   48444:	mov	r2, r7
   48448:	mov	r9, #0
   4844c:	str	r7, [sp, #4]
   48450:	add	r3, r0, #8
   48454:	ldr	r0, [r0, #4]
   48458:	sub	r1, lr, #2
   4845c:	sub	r8, lr, #1
   48460:	str	r3, [sp, #44]	; 0x2c
   48464:	mov	r3, sl
   48468:	add	sl, r6, #4
   4846c:	add	r6, r3, #4
   48470:	lsl	r3, r4, #2
   48474:	str	r3, [sp, #24]
   48478:	str	r0, [sp, #20]
   4847c:	cmp	r4, #1
   48480:	blt	484b0 <Mat_VarGetCells+0x1d4>
   48484:	ldr	r0, [sp, #12]
   48488:	ldr	r0, [r0, #40]	; 0x28
   4848c:	add	r7, r0, r5, lsl #2
   48490:	ldr	r0, [sp, #16]
   48494:	ldr	r0, [r0]
   48498:	lsl	r5, r0, #2
   4849c:	mov	r0, r2
   484a0:	ldr	r3, [r7], r5
   484a4:	subs	r4, r4, #1
   484a8:	str	r3, [r0], #4
   484ac:	bne	484a0 <Mat_VarGetCells+0x1c4>
   484b0:	ldr	r5, [sp, #36]	; 0x24
   484b4:	ldr	r0, [sp, #92]	; 0x5c
   484b8:	ldr	r3, [sp, #20]
   484bc:	cmp	lr, #2
   484c0:	str	r2, [sp, #40]	; 0x28
   484c4:	str	r5, [fp, #-72]	; 0xffffffb8
   484c8:	add	ip, r0, #1
   484cc:	ldr	r0, [fp, #-68]	; 0xffffffbc
   484d0:	str	ip, [sp, #92]	; 0x5c
   484d4:	add	r0, r0, r3
   484d8:	str	r0, [fp, #-68]	; 0xffffffbc
   484dc:	blt	4857c <Mat_VarGetCells+0x2a0>
   484e0:	ldr	r5, [sp, #36]	; 0x24
   484e4:	mov	r7, #0
   484e8:	sub	r2, fp, #72	; 0x48
   484ec:	add	r3, sp, #88	; 0x58
   484f0:	b	48500 <Mat_VarGetCells+0x224>
   484f4:	add	r0, r3, r7, lsl #2
   484f8:	mov	r7, lr
   484fc:	ldr	ip, [r0, #8]
   48500:	ldr	r0, [r6, r7, lsl #2]
   48504:	add	lr, r7, #1
   48508:	cmp	ip, r0
   4850c:	bne	4855c <Mat_VarGetCells+0x280>
   48510:	add	r3, r3, r7, lsl #2
   48514:	mov	r0, #0
   48518:	cmp	lr, r8
   4851c:	str	r0, [r3, #4]
   48520:	add	r0, r2, r7, lsl #2
   48524:	ldr	r4, [sl, r7, lsl #2]
   48528:	str	r4, [r0, #4]
   4852c:	bge	48554 <Mat_VarGetCells+0x278>
   48530:	ldr	r2, [r3, #8]
   48534:	add	r2, r2, #1
   48538:	str	r2, [r3, #8]
   4853c:	ldr	r2, [sp, #44]	; 0x2c
   48540:	ldr	r3, [r0, #8]
   48544:	ldr	r2, [r2, r7, lsl #2]
   48548:	add	r2, r3, r2
   4854c:	str	r2, [r0, #8]
   48550:	sub	r2, fp, #72	; 0x48
   48554:	add	r3, sp, #88	; 0x58
   48558:	b	48564 <Mat_VarGetCells+0x288>
   4855c:	add	r0, r2, r7, lsl #2
   48560:	ldr	r4, [r0, #4]
   48564:	add	r0, sp, #48	; 0x30
   48568:	cmp	r1, r7
   4856c:	ldr	r0, [r0, r7, lsl #2]
   48570:	mla	r5, r0, r4, r5
   48574:	bne	484f4 <Mat_VarGetCells+0x218>
   48578:	ldr	lr, [sp, #8]
   4857c:	ldr	r0, [sp, #24]
   48580:	ldr	r2, [sp, #40]	; 0x28
   48584:	ldr	r4, [sp, #32]
   48588:	add	r2, r2, r0
   4858c:	ldr	r0, [sp, #28]
   48590:	add	r9, r9, r4
   48594:	cmp	r9, r0
   48598:	blt	4847c <Mat_VarGetCells+0x1a0>
   4859c:	ldr	r7, [sp, #4]
   485a0:	b	48368 <Mat_VarGetCells+0x8c>

000485a4 <Mat_VarGetCellsLinear>:
   485a4:	push	{r4, r5, r6, r7, fp, lr}
   485a8:	add	fp, sp, #16
   485ac:	cmp	r0, #0
   485b0:	moveq	r0, #0
   485b4:	popeq	{r4, r5, r6, r7, fp, pc}
   485b8:	mov	r7, r0
   485bc:	lsl	r0, r3, #2
   485c0:	mov	r4, r3
   485c4:	mov	r5, r2
   485c8:	mov	r6, r1
   485cc:	bl	18e8 <malloc@plt>
   485d0:	cmp	r4, #1
   485d4:	poplt	{r4, r5, r6, r7, fp, pc}
   485d8:	ldr	r1, [r7, #40]	; 0x28
   485dc:	lsl	r2, r5, #2
   485e0:	mov	r3, r0
   485e4:	add	r1, r1, r6, lsl #2
   485e8:	ldr	r7, [r1], r2
   485ec:	subs	r4, r4, #1
   485f0:	str	r7, [r3], #4
   485f4:	bne	485e8 <Mat_VarGetCellsLinear+0x44>
   485f8:	pop	{r4, r5, r6, r7, fp, pc}

000485fc <Mat_VarSetCell>:
   485fc:	push	{r4, r5, r6, r7, fp, lr}
   48600:	add	fp, sp, #16
   48604:	sub	sp, sp, #8
   48608:	mov	r7, r0
   4860c:	mov	r0, #1
   48610:	mov	r4, #0
   48614:	cmp	r7, #0
   48618:	str	r0, [sp, #4]
   4861c:	beq	4865c <Mat_VarSetCell+0x60>
   48620:	ldr	r0, [r7, #4]
   48624:	cmp	r0, #1
   48628:	blt	4865c <Mat_VarSetCell+0x60>
   4862c:	mov	r6, r1
   48630:	add	r1, sp, #4
   48634:	mov	r0, r7
   48638:	mov	r5, r2
   4863c:	bl	45294 <SafeMulDims>
   48640:	cmp	r6, #0
   48644:	blt	4865c <Mat_VarSetCell+0x60>
   48648:	ldr	r0, [sp, #4]
   4864c:	cmp	r0, r6
   48650:	ldrhi	r0, [r7, #40]	; 0x28
   48654:	ldrhi	r4, [r0, r6, lsl #2]
   48658:	strhi	r5, [r0, r6, lsl #2]
   4865c:	mov	r0, r4
   48660:	sub	sp, fp, #16
   48664:	pop	{r4, r5, r6, r7, fp, pc}

00048668 <Mat_VarCreateStruct>:
   48668:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4866c:	add	fp, sp, #28
   48670:	sub	sp, sp, #4
   48674:	mov	r5, #0
   48678:	cmp	r2, #0
   4867c:	beq	487b8 <Mat_VarCreateStruct+0x150>
   48680:	mov	r9, r3
   48684:	mov	r6, r2
   48688:	mov	sl, r1
   4868c:	mov	r7, r0
   48690:	bl	18b8 <Mat_VarCalloc@plt>
   48694:	cmp	r0, #0
   48698:	beq	487b8 <Mat_VarCreateStruct+0x150>
   4869c:	mov	r4, r0
   486a0:	mov	r0, #0
   486a4:	cmp	r7, #0
   486a8:	str	r0, [r4, #48]	; 0x30
   486ac:	beq	486bc <Mat_VarCreateStruct+0x54>
   486b0:	mov	r0, r7
   486b4:	bl	187c <strdup@plt>
   486b8:	str	r0, [r4, #36]	; 0x24
   486bc:	ldr	r8, [fp, #8]
   486c0:	lsl	r0, sl, #2
   486c4:	str	sl, [r4, #4]
   486c8:	bl	18e8 <malloc@plt>
   486cc:	str	r0, [r4, #32]
   486d0:	mov	r7, #1
   486d4:	ldr	r1, [r4, #4]
   486d8:	cmp	r1, #1
   486dc:	blt	48700 <Mat_VarCreateStruct+0x98>
   486e0:	mov	r1, #0
   486e4:	ldr	r2, [r6, r1, lsl #2]
   486e8:	str	r2, [r0, r1, lsl #2]
   486ec:	mul	r7, r2, r7
   486f0:	add	r1, r1, #1
   486f4:	ldr	r2, [r4, #4]
   486f8:	cmp	r1, r2
   486fc:	blt	486e4 <Mat_VarCreateStruct+0x7c>
   48700:	mov	r0, #22
   48704:	cmp	r8, #0
   48708:	mov	r1, #2
   4870c:	mov	r2, #4
   48710:	str	r0, [r4, #8]
   48714:	str	r2, [r4, #12]
   48718:	str	r1, [r4, #16]
   4871c:	beq	487a4 <Mat_VarCreateStruct+0x13c>
   48720:	ldr	r0, [r4, #52]	; 0x34
   48724:	str	r8, [r0, #4]
   48728:	lsl	r0, r8, #2
   4872c:	bl	18e8 <malloc@plt>
   48730:	ldr	r1, [r4, #52]	; 0x34
   48734:	cmp	r0, #0
   48738:	str	r0, [r1, #8]
   4873c:	beq	487ac <Mat_VarCreateStruct+0x144>
   48740:	mov	r5, #0
   48744:	ldr	r0, [r9, r5, lsl #2]
   48748:	cmp	r0, #0
   4874c:	beq	487ac <Mat_VarCreateStruct+0x144>
   48750:	bl	187c <strdup@plt>
   48754:	ldr	r1, [r4, #52]	; 0x34
   48758:	ldr	r1, [r1, #8]
   4875c:	str	r0, [r1, r5, lsl #2]
   48760:	add	r5, r5, #1
   48764:	cmp	r5, r8
   48768:	bcc	48744 <Mat_VarCreateStruct+0xdc>
   4876c:	cmp	r7, #0
   48770:	beq	487a4 <Mat_VarCreateStruct+0x13c>
   48774:	mov	r0, sp
   48778:	mov	r1, r7
   4877c:	mov	r2, r8
   48780:	bl	452f0 <SafeMul>
   48784:	ldr	r2, [r4, #12]
   48788:	ldr	r1, [sp]
   4878c:	mov	r0, r4
   48790:	bl	452f0 <SafeMul>
   48794:	ldr	r1, [r4, #12]
   48798:	ldr	r0, [sp]
   4879c:	bl	17b0 <calloc@plt>
   487a0:	str	r0, [r4, #40]	; 0x28
   487a4:	mov	r5, r4
   487a8:	b	487b8 <Mat_VarCreateStruct+0x150>
   487ac:	mov	r0, r4
   487b0:	bl	1930 <Mat_VarFree@plt>
   487b4:	mov	r5, #0
   487b8:	mov	r0, r5
   487bc:	sub	sp, fp, #28
   487c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000487c4 <Mat_VarAddStructField>:
   487c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   487c8:	add	fp, sp, #28
   487cc:	sub	sp, sp, #12
   487d0:	mov	r9, r0
   487d4:	mov	r0, #1
   487d8:	mvn	r8, #0
   487dc:	cmp	r9, #0
   487e0:	str	r0, [sp, #8]
   487e4:	movne	r6, r1
   487e8:	cmpne	r1, #0
   487ec:	bne	487fc <Mat_VarAddStructField+0x38>
   487f0:	mov	r0, r8
   487f4:	sub	sp, fp, #28
   487f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   487fc:	add	r1, sp, #8
   48800:	mov	r0, r9
   48804:	bl	45294 <SafeMulDims>
   48808:	ldr	r1, [r9, #52]	; 0x34
   4880c:	ldr	sl, [r1, #4]
   48810:	ldr	r0, [r1, #8]
   48814:	add	r7, sl, #1
   48818:	str	r7, [r1, #4]
   4881c:	lsl	r1, r7, #2
   48820:	bl	1888 <realloc@plt>
   48824:	cmp	r0, #0
   48828:	beq	487f0 <Mat_VarAddStructField+0x2c>
   4882c:	ldr	r1, [r9, #52]	; 0x34
   48830:	str	r0, [r1, #8]
   48834:	mov	r0, r6
   48838:	bl	187c <strdup@plt>
   4883c:	ldr	r1, [r9, #52]	; 0x34
   48840:	mov	r2, r7
   48844:	ldr	r1, [r1, #8]
   48848:	str	r0, [r1, sl, lsl #2]
   4884c:	add	r0, sp, #4
   48850:	ldr	r1, [sp, #8]
   48854:	bl	452f0 <SafeMul>
   48858:	ldr	r1, [sp, #4]
   4885c:	mov	r0, r9
   48860:	mov	r2, #4
   48864:	bl	452f0 <SafeMul>
   48868:	ldr	r0, [r9]
   4886c:	bl	18e8 <malloc@plt>
   48870:	cmp	r0, #0
   48874:	beq	488f8 <Mat_VarAddStructField+0x134>
   48878:	ldr	lr, [sp, #8]
   4887c:	mov	r6, r0
   48880:	ldr	r0, [r9, #40]	; 0x28
   48884:	cmp	lr, #0
   48888:	str	r0, [sp]
   4888c:	beq	488e4 <Mat_VarAddStructField+0x120>
   48890:	ldr	r2, [sp]
   48894:	lsl	r8, sl, #2
   48898:	mov	r0, #0
   4889c:	mov	r3, #0
   488a0:	mov	r4, #0
   488a4:	cmp	sl, #0
   488a8:	beq	488cc <Mat_VarAddStructField+0x108>
   488ac:	add	r1, r6, r3, lsl #2
   488b0:	mov	r7, r2
   488b4:	mov	r5, sl
   488b8:	ldr	ip, [r7], #4
   488bc:	subs	r5, r5, #1
   488c0:	str	ip, [r1], #4
   488c4:	bne	488b8 <Mat_VarAddStructField+0xf4>
   488c8:	add	r3, sl, r3
   488cc:	add	r4, r4, #1
   488d0:	str	r0, [r6, r3, lsl #2]
   488d4:	add	r2, r2, r8
   488d8:	add	r3, r3, #1
   488dc:	cmp	r4, lr
   488e0:	bcc	488a4 <Mat_VarAddStructField+0xe0>
   488e4:	ldr	r0, [sp]
   488e8:	bl	181c <free@plt>
   488ec:	mov	r8, #0
   488f0:	str	r6, [r9, #40]	; 0x28
   488f4:	b	487f0 <Mat_VarAddStructField+0x2c>
   488f8:	mov	r0, #0
   488fc:	str	r0, [r9]
   48900:	b	487f0 <Mat_VarAddStructField+0x2c>

00048904 <Mat_VarGetNumberOfFields>:
   48904:	mov	r1, r0
   48908:	mov	r0, #0
   4890c:	cmp	r1, #0
   48910:	bxeq	lr
   48914:	ldr	r2, [r1, #16]
   48918:	cmp	r2, #2
   4891c:	bne	4892c <Mat_VarGetNumberOfFields+0x28>
   48920:	ldr	r1, [r1, #52]	; 0x34
   48924:	cmp	r1, #0
   48928:	ldrne	r0, [r1, #4]
   4892c:	bx	lr

00048930 <Mat_VarGetStructFieldnames>:
   48930:	mov	r1, r0
   48934:	mov	r0, #0
   48938:	cmp	r1, #0
   4893c:	bxeq	lr
   48940:	ldr	r2, [r1, #16]
   48944:	cmp	r2, #2
   48948:	bne	48958 <Mat_VarGetStructFieldnames+0x28>
   4894c:	ldr	r1, [r1, #52]	; 0x34
   48950:	cmp	r1, #0
   48954:	ldrne	r0, [r1, #8]
   48958:	bx	lr

0004895c <Mat_VarGetStructFieldByIndex>:
   4895c:	push	{r4, r5, r6, r7, fp, lr}
   48960:	add	fp, sp, #16
   48964:	sub	sp, sp, #8
   48968:	mov	r7, r0
   4896c:	mov	r0, #1
   48970:	mov	r4, #0
   48974:	cmp	r7, #0
   48978:	str	r0, [sp, #4]
   4897c:	beq	489ec <Mat_VarGetStructFieldByIndex+0x90>
   48980:	ldr	r0, [r7, #16]
   48984:	cmp	r0, #2
   48988:	bne	489ec <Mat_VarGetStructFieldByIndex+0x90>
   4898c:	ldr	r0, [r7, #12]
   48990:	cmp	r0, #0
   48994:	beq	489ec <Mat_VarGetStructFieldByIndex+0x90>
   48998:	mov	r5, r1
   4899c:	add	r1, sp, #4
   489a0:	mov	r0, r7
   489a4:	mov	r6, r2
   489a8:	bl	45294 <SafeMulDims>
   489ac:	ldr	r0, [sp, #4]
   489b0:	sub	r0, r0, #1
   489b4:	cmp	r0, r6
   489b8:	bcs	489c8 <Mat_VarGetStructFieldByIndex+0x6c>
   489bc:	ldr	r0, [pc, #72]	; 48a0c <Mat_VarGetStructFieldByIndex+0xb0>
   489c0:	add	r0, pc, r0
   489c4:	b	489e8 <Mat_VarGetStructFieldByIndex+0x8c>
   489c8:	ldr	r0, [r7, #52]	; 0x34
   489cc:	ldr	r0, [r0, #4]
   489d0:	cmp	r0, #0
   489d4:	beq	489ec <Mat_VarGetStructFieldByIndex+0x90>
   489d8:	cmp	r0, r5
   489dc:	bcs	489f8 <Mat_VarGetStructFieldByIndex+0x9c>
   489e0:	ldr	r0, [pc, #40]	; 48a10 <Mat_VarGetStructFieldByIndex+0xb4>
   489e4:	add	r0, pc, r0
   489e8:	bl	19cc <Mat_Critical@plt>
   489ec:	mov	r0, r4
   489f0:	sub	sp, fp, #16
   489f4:	pop	{r4, r5, r6, r7, fp, pc}
   489f8:	ldr	r1, [r7, #40]	; 0x28
   489fc:	mul	r0, r0, r6
   48a00:	add	r0, r1, r0, lsl #2
   48a04:	ldr	r4, [r0, r5, lsl #2]
   48a08:	b	489ec <Mat_VarGetStructFieldByIndex+0x90>
   48a0c:	.word	0x00002048
   48a10:	.word	0x00002059

00048a14 <Mat_VarGetStructFieldByName>:
   48a14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   48a18:	add	fp, sp, #28
   48a1c:	sub	sp, sp, #4
   48a20:	mov	r6, r0
   48a24:	mov	r0, #1
   48a28:	mov	sl, #0
   48a2c:	cmp	r6, #0
   48a30:	str	r0, [sp]
   48a34:	beq	48ad4 <Mat_VarGetStructFieldByName+0xc0>
   48a38:	ldr	r0, [r6, #16]
   48a3c:	cmp	r0, #2
   48a40:	bne	48ad4 <Mat_VarGetStructFieldByName+0xc0>
   48a44:	ldr	r0, [r6, #12]
   48a48:	cmp	r0, #0
   48a4c:	beq	48ad4 <Mat_VarGetStructFieldByName+0xc0>
   48a50:	mov	r7, r1
   48a54:	mov	r1, sp
   48a58:	mov	r0, r6
   48a5c:	mov	r9, r2
   48a60:	bl	45294 <SafeMulDims>
   48a64:	ldr	r0, [r6, #52]	; 0x34
   48a68:	mvn	r4, #0
   48a6c:	ldr	r5, [r0, #4]
   48a70:	cmp	r5, #1
   48a74:	blt	48aa4 <Mat_VarGetStructFieldByName+0x90>
   48a78:	ldr	r8, [r0, #8]
   48a7c:	mov	r4, #0
   48a80:	ldr	r0, [r8, r4, lsl #2]
   48a84:	mov	r1, r7
   48a88:	bl	17c8 <strcmp@plt>
   48a8c:	cmp	r0, #0
   48a90:	beq	48aa4 <Mat_VarGetStructFieldByName+0x90>
   48a94:	add	r4, r4, #1
   48a98:	cmp	r4, r5
   48a9c:	blt	48a80 <Mat_VarGetStructFieldByName+0x6c>
   48aa0:	mvn	r4, #0
   48aa4:	ldr	r0, [sp]
   48aa8:	cmp	r0, r9
   48aac:	bls	48ac8 <Mat_VarGetStructFieldByName+0xb4>
   48ab0:	cmp	r4, #0
   48ab4:	ldrge	r1, [r6, #40]	; 0x28
   48ab8:	mulge	r0, r5, r9
   48abc:	addge	r0, r1, r0, lsl #2
   48ac0:	ldrge	sl, [r0, r4, lsl #2]
   48ac4:	b	48ad4 <Mat_VarGetStructFieldByName+0xc0>
   48ac8:	ldr	r0, [pc, #16]	; 48ae0 <Mat_VarGetStructFieldByName+0xcc>
   48acc:	add	r0, pc, r0
   48ad0:	bl	19cc <Mat_Critical@plt>
   48ad4:	mov	r0, sl
   48ad8:	sub	sp, fp, #28
   48adc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   48ae0:	.word	0x00001f3c

00048ae4 <Mat_VarGetStructField>:
   48ae4:	push	{r4, r5, r6, r7, fp, lr}
   48ae8:	add	fp, sp, #16
   48aec:	sub	sp, sp, #8
   48af0:	mov	r5, r0
   48af4:	mov	r0, #1
   48af8:	mov	r6, r1
   48afc:	add	r1, sp, #4
   48b00:	mov	r4, r3
   48b04:	mov	r7, r2
   48b08:	str	r0, [sp, #4]
   48b0c:	mov	r0, r5
   48b10:	bl	45294 <SafeMulDims>
   48b14:	mov	r0, #0
   48b18:	cmp	r4, #0
   48b1c:	blt	48b88 <Mat_VarGetStructField+0xa4>
   48b20:	ldr	r1, [sp, #4]
   48b24:	sub	r1, r1, #1
   48b28:	cmp	r1, r4
   48b2c:	bcc	48b88 <Mat_VarGetStructField+0xa4>
   48b30:	ldr	r1, [r5, #52]	; 0x34
   48b34:	cmp	r7, #2
   48b38:	ldr	r1, [r1, #4]
   48b3c:	bne	48b68 <Mat_VarGetStructField+0x84>
   48b40:	cmp	r1, #1
   48b44:	blt	48b68 <Mat_VarGetStructField+0x84>
   48b48:	ldr	r1, [r6]
   48b4c:	cmp	r1, #0
   48b50:	beq	48b88 <Mat_VarGetStructField+0xa4>
   48b54:	sub	r1, r1, #1
   48b58:	mov	r0, r5
   48b5c:	mov	r2, r4
   48b60:	bl	1a44 <Mat_VarGetStructFieldByIndex@plt>
   48b64:	b	48b88 <Mat_VarGetStructField+0xa4>
   48b68:	cmp	r7, #1
   48b6c:	bne	48b88 <Mat_VarGetStructField+0xa4>
   48b70:	cmp	r1, #1
   48b74:	blt	48b88 <Mat_VarGetStructField+0xa4>
   48b78:	mov	r0, r5
   48b7c:	mov	r1, r6
   48b80:	mov	r2, r4
   48b84:	bl	1a2c <Mat_VarGetStructFieldByName@plt>
   48b88:	sub	sp, fp, #16
   48b8c:	pop	{r4, r5, r6, r7, fp, pc}

00048b90 <Mat_VarGetStructs>:
   48b90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   48b94:	add	fp, sp, #28
   48b98:	sub	sp, sp, #172	; 0xac
   48b9c:	sub	r6, fp, #72	; 0x48
   48ba0:	mov	r7, r0
   48ba4:	mov	r9, r1
   48ba8:	vmov.i32	q8, #0	; 0x00000000
   48bac:	mov	r0, #36	; 0x24
   48bb0:	mov	r4, #0
   48bb4:	str	r2, [sp, #44]	; 0x2c
   48bb8:	add	r2, sp, #88	; 0x58
   48bbc:	str	r3, [sp, #32]
   48bc0:	mov	r1, r6
   48bc4:	cmp	r7, #0
   48bc8:	str	r4, [fp, #-40]	; 0xffffffd8
   48bcc:	str	r4, [sp, #120]	; 0x78
   48bd0:	str	r4, [sp, #80]	; 0x50
   48bd4:	vst1.64	{d16-d17}, [r1], r0
   48bd8:	cmpne	r9, #0
   48bdc:	str	r4, [r1]
   48be0:	add	r1, r6, #16
   48be4:	vst1.64	{d16-d17}, [r1]
   48be8:	add	r1, r2, #16
   48bec:	vst1.64	{d16-d17}, [r1]
   48bf0:	mov	r1, r2
   48bf4:	add	r2, sp, #48	; 0x30
   48bf8:	vst1.64	{d16-d17}, [r1], r0
   48bfc:	str	r4, [r1]
   48c00:	add	r1, r2, #16
   48c04:	vst1.64	{d16-d17}, [r1]
   48c08:	mov	r1, r2
   48c0c:	vst1.64	{d16-d17}, [r1], r0
   48c10:	str	r4, [r1]
   48c14:	beq	48c2c <Mat_VarGetStructs+0x9c>
   48c18:	ldr	r0, [sp, #44]	; 0x2c
   48c1c:	cmp	r0, #0
   48c20:	ldrne	r0, [sp, #32]
   48c24:	cmpne	r0, #0
   48c28:	bne	48c38 <Mat_VarGetStructs+0xa8>
   48c2c:	mov	r0, r4
   48c30:	sub	sp, fp, #28
   48c34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   48c38:	ldr	r0, [r7, #4]
   48c3c:	cmp	r0, #9
   48c40:	bgt	48c2c <Mat_VarGetStructs+0x9c>
   48c44:	ldr	r0, [r7, #16]
   48c48:	cmp	r0, #2
   48c4c:	bne	48c2c <Mat_VarGetStructs+0x9c>
   48c50:	ldr	r4, [fp, #8]
   48c54:	mov	r0, r7
   48c58:	mov	r1, #0
   48c5c:	bl	1a80 <Mat_VarDuplicate@plt>
   48c60:	cmp	r4, #0
   48c64:	str	r0, [sp]
   48c68:	moveq	r1, #1
   48c6c:	streq	r1, [r0, #44]	; 0x2c
   48c70:	ldr	ip, [r7, #32]
   48c74:	ldr	r1, [r7, #52]	; 0x34
   48c78:	ldr	r2, [ip]
   48c7c:	ldr	r1, [r1, #4]
   48c80:	str	r2, [sp, #48]	; 0x30
   48c84:	str	r1, [sp, #28]
   48c88:	ldr	lr, [r0, #32]
   48c8c:	ldr	r0, [sp, #32]
   48c90:	ldr	r8, [r9]
   48c94:	ldr	sl, [r0]
   48c98:	str	sl, [lr]
   48c9c:	ldr	r3, [r9]
   48ca0:	str	r3, [fp, #-72]	; 0xffffffb8
   48ca4:	ldr	r3, [r7, #4]
   48ca8:	cmp	r3, #2
   48cac:	blt	48cf4 <Mat_VarGetStructs+0x164>
   48cb0:	ldr	r1, [sp, #32]
   48cb4:	mov	r3, #1
   48cb8:	ldr	r5, [r9, r3, lsl #2]
   48cbc:	add	r0, sp, #48	; 0x30
   48cc0:	str	r5, [r6, r3, lsl #2]
   48cc4:	mla	r8, r2, r5, r8
   48cc8:	ldr	r4, [ip, r3, lsl #2]
   48ccc:	mul	r4, r4, r2
   48cd0:	str	r4, [r0, r3, lsl #2]
   48cd4:	mov	r2, r4
   48cd8:	ldr	r0, [r1, r3, lsl #2]
   48cdc:	str	r0, [lr, r3, lsl #2]
   48ce0:	mul	sl, r0, sl
   48ce4:	add	r3, r3, #1
   48ce8:	ldr	r0, [r7, #4]
   48cec:	cmp	r3, r0
   48cf0:	blt	48cb8 <Mat_VarGetStructs+0x128>
   48cf4:	ldr	r0, [sp, #28]
   48cf8:	ldr	r4, [sp]
   48cfc:	mul	r0, r0, sl
   48d00:	lsl	r0, r0, #2
   48d04:	str	r0, [r4]
   48d08:	bl	18e8 <malloc@plt>
   48d0c:	cmp	r0, #0
   48d10:	str	r0, [r4, #40]	; 0x28
   48d14:	mov	r1, r0
   48d18:	str	r0, [sp, #4]
   48d1c:	beq	48f00 <Mat_VarGetStructs+0x370>
   48d20:	cmp	sl, #0
   48d24:	beq	48c2c <Mat_VarGetStructs+0x9c>
   48d28:	ldr	r0, [sp, #44]	; 0x2c
   48d2c:	ldr	r1, [sp, #32]
   48d30:	ldr	r4, [sp, #28]
   48d34:	str	r9, [sp, #12]
   48d38:	str	sl, [sp, #8]
   48d3c:	add	r0, r0, #8
   48d40:	mov	r2, r1
   48d44:	str	r0, [sp, #20]
   48d48:	add	r0, r9, #4
   48d4c:	str	r0, [sp, #24]
   48d50:	lsl	r0, r4, #2
   48d54:	str	r0, [sp, #40]	; 0x28
   48d58:	ldr	r0, [r2], #4
   48d5c:	str	r2, [sp, #36]	; 0x24
   48d60:	mov	r2, #0
   48d64:	str	r2, [sp, #16]
   48d68:	cmp	r0, #1
   48d6c:	blt	48df8 <Mat_VarGetStructs+0x268>
   48d70:	ldr	r0, [sp, #4]
   48d74:	ldr	r2, [sp, #40]	; 0x28
   48d78:	ldr	r3, [sp, #16]
   48d7c:	mul	sl, r8, r4
   48d80:	mov	r5, #0
   48d84:	mla	r9, r2, r3, r0
   48d88:	cmp	r4, #0
   48d8c:	beq	48dd0 <Mat_VarGetStructs+0x240>
   48d90:	mov	r8, r9
   48d94:	mov	r6, sl
   48d98:	ldr	r0, [r7, #40]	; 0x28
   48d9c:	ldr	r1, [fp, #8]
   48da0:	ldr	r0, [r0, r6, lsl #2]
   48da4:	cmp	r1, #0
   48da8:	beq	48db4 <Mat_VarGetStructs+0x224>
   48dac:	mov	r1, #1
   48db0:	bl	1a80 <Mat_VarDuplicate@plt>
   48db4:	str	r0, [r8], #4
   48db8:	subs	r4, r4, #1
   48dbc:	add	r6, r6, #1
   48dc0:	bne	48d98 <Mat_VarGetStructs+0x208>
   48dc4:	ldr	r4, [sp, #28]
   48dc8:	ldr	r1, [sp, #32]
   48dcc:	add	sl, r4, sl
   48dd0:	ldr	r0, [sp, #44]	; 0x2c
   48dd4:	add	r5, r5, #1
   48dd8:	ldr	r0, [r0]
   48ddc:	sub	r0, r0, #1
   48de0:	mla	sl, r0, r4, sl
   48de4:	ldr	r0, [sp, #40]	; 0x28
   48de8:	add	r9, r9, r0
   48dec:	ldr	r0, [r1]
   48df0:	cmp	r5, r0
   48df4:	blt	48d88 <Mat_VarGetStructs+0x1f8>
   48df8:	ldr	r9, [sp, #12]
   48dfc:	ldr	r1, [sp, #92]	; 0x5c
   48e00:	ldr	r8, [r9]
   48e04:	add	r4, r1, #1
   48e08:	ldr	r1, [sp, #44]	; 0x2c
   48e0c:	str	r4, [sp, #92]	; 0x5c
   48e10:	str	r8, [fp, #-72]	; 0xffffffb8
   48e14:	ldr	r1, [r1, #4]
   48e18:	ldr	r2, [fp, #-68]	; 0xffffffbc
   48e1c:	add	r1, r2, r1
   48e20:	str	r1, [fp, #-68]	; 0xffffffbc
   48e24:	ldr	lr, [r7, #4]
   48e28:	cmp	lr, #2
   48e2c:	blt	48ed0 <Mat_VarGetStructs+0x340>
   48e30:	sub	ip, lr, #1
   48e34:	mov	r3, #0
   48e38:	sub	sl, fp, #72	; 0x48
   48e3c:	add	r2, sp, #88	; 0x58
   48e40:	b	48e50 <Mat_VarGetStructs+0x2c0>
   48e44:	add	r1, r2, r3, lsl #2
   48e48:	mov	r3, r5
   48e4c:	ldr	r4, [r1, #8]
   48e50:	ldr	r1, [sp, #36]	; 0x24
   48e54:	add	r5, r3, #1
   48e58:	ldr	r1, [r1, r3, lsl #2]
   48e5c:	cmp	r4, r1
   48e60:	bne	48eb0 <Mat_VarGetStructs+0x320>
   48e64:	add	r1, r2, r3, lsl #2
   48e68:	mov	r2, #0
   48e6c:	cmp	r5, ip
   48e70:	str	r2, [r1, #4]
   48e74:	ldr	r2, [sp, #24]
   48e78:	ldr	r4, [r2, r3, lsl #2]
   48e7c:	add	r2, sl, r3, lsl #2
   48e80:	str	r4, [r2, #4]
   48e84:	bge	48ea8 <Mat_VarGetStructs+0x318>
   48e88:	ldr	r6, [r1, #8]
   48e8c:	add	r6, r6, #1
   48e90:	str	r6, [r1, #8]
   48e94:	ldr	r1, [sp, #20]
   48e98:	ldr	r6, [r2, #8]
   48e9c:	ldr	r1, [r1, r3, lsl #2]
   48ea0:	add	r1, r6, r1
   48ea4:	str	r1, [r2, #8]
   48ea8:	add	r2, sp, #88	; 0x58
   48eac:	b	48eb8 <Mat_VarGetStructs+0x328>
   48eb0:	add	r1, sl, r3, lsl #2
   48eb4:	ldr	r4, [r1, #4]
   48eb8:	add	r1, sp, #48	; 0x30
   48ebc:	ldr	r1, [r1, r3, lsl #2]
   48ec0:	mla	r8, r1, r4, r8
   48ec4:	add	r1, r3, #2
   48ec8:	cmp	r1, lr
   48ecc:	blt	48e44 <Mat_VarGetStructs+0x2b4>
   48ed0:	ldr	r1, [sp, #16]
   48ed4:	ldr	sl, [sp, #8]
   48ed8:	ldr	r4, [sp, #28]
   48edc:	mov	r2, r1
   48ee0:	add	r2, r0, r1
   48ee4:	mov	r1, r2
   48ee8:	cmp	r2, sl
   48eec:	str	r2, [sp, #16]
   48ef0:	ldr	r1, [sp, #32]
   48ef4:	bcc	48d68 <Mat_VarGetStructs+0x1d8>
   48ef8:	ldr	r4, [sp]
   48efc:	b	48c2c <Mat_VarGetStructs+0x9c>
   48f00:	mov	r0, r4
   48f04:	bl	1930 <Mat_VarFree@plt>
   48f08:	mov	r4, #0
   48f0c:	b	48c2c <Mat_VarGetStructs+0x9c>

00048f10 <Mat_VarGetStructsLinear>:
   48f10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   48f14:	add	fp, sp, #28
   48f18:	sub	sp, sp, #20
   48f1c:	mov	r5, #0
   48f20:	cmp	r0, #0
   48f24:	beq	49070 <Mat_VarGetStructsLinear+0x160>
   48f28:	mov	r6, r0
   48f2c:	ldr	r0, [r0, #4]
   48f30:	cmp	r0, #10
   48f34:	bgt	49070 <Mat_VarGetStructsLinear+0x160>
   48f38:	ldr	sl, [fp, #8]
   48f3c:	mov	r4, r1
   48f40:	mov	r0, r6
   48f44:	mov	r1, #0
   48f48:	mov	r9, r3
   48f4c:	str	r2, [sp, #12]
   48f50:	bl	1a80 <Mat_VarDuplicate@plt>
   48f54:	cmp	sl, #0
   48f58:	mov	r5, r0
   48f5c:	moveq	r0, #1
   48f60:	streq	r0, [r5, #44]	; 0x2c
   48f64:	ldr	r0, [r6, #52]	; 0x34
   48f68:	ldr	r8, [r0, #4]
   48f6c:	mul	r0, r9, r8
   48f70:	lsl	r0, r0, #2
   48f74:	str	r0, [r5]
   48f78:	bl	18e8 <malloc@plt>
   48f7c:	cmp	r0, #0
   48f80:	str	r0, [r5, #40]	; 0x28
   48f84:	beq	49064 <Mat_VarGetStructsLinear+0x154>
   48f88:	mov	r7, r0
   48f8c:	ldr	r0, [r5, #32]
   48f90:	cmp	r9, #1
   48f94:	mov	r1, #1
   48f98:	str	r9, [r0]
   48f9c:	str	r1, [r0, #4]
   48fa0:	blt	49070 <Mat_VarGetStructsLinear+0x160>
   48fa4:	ldr	r0, [sp, #12]
   48fa8:	str	r5, [sp, #4]
   48fac:	lsl	lr, r8, #2
   48fb0:	mul	r4, r8, r4
   48fb4:	mov	r5, #0
   48fb8:	str	r9, [sp, #16]
   48fbc:	str	lr, [sp, #8]
   48fc0:	sub	r0, r0, #1
   48fc4:	mul	ip, r8, r0
   48fc8:	str	ip, [sp, #12]
   48fcc:	cmp	sl, #0
   48fd0:	beq	4901c <Mat_VarGetStructsLinear+0x10c>
   48fd4:	cmp	r8, #1
   48fd8:	blt	49048 <Mat_VarGetStructsLinear+0x138>
   48fdc:	lsl	sl, r4, #2
   48fe0:	mov	r9, #0
   48fe4:	ldr	r0, [r6, #40]	; 0x28
   48fe8:	mov	r1, #1
   48fec:	add	r0, r0, sl
   48ff0:	ldr	r0, [r0, r9, lsl #2]
   48ff4:	bl	1a80 <Mat_VarDuplicate@plt>
   48ff8:	str	r0, [r7, r9, lsl #2]
   48ffc:	add	r9, r9, #1
   49000:	cmp	r8, r9
   49004:	bne	48fe4 <Mat_VarGetStructsLinear+0xd4>
   49008:	ldr	r9, [sp, #16]
   4900c:	ldr	sl, [fp, #8]
   49010:	ldr	ip, [sp, #12]
   49014:	ldr	lr, [sp, #8]
   49018:	b	49044 <Mat_VarGetStructsLinear+0x134>
   4901c:	cmp	r8, #1
   49020:	blt	49048 <Mat_VarGetStructsLinear+0x138>
   49024:	ldr	r0, [r6, #40]	; 0x28
   49028:	mov	r1, r7
   4902c:	mov	r2, r8
   49030:	add	r0, r0, r4, lsl #2
   49034:	ldr	r3, [r0], #4
   49038:	subs	r2, r2, #1
   4903c:	str	r3, [r1], #4
   49040:	bne	49034 <Mat_VarGetStructsLinear+0x124>
   49044:	add	r4, r8, r4
   49048:	add	r5, r5, #1
   4904c:	add	r7, r7, lr
   49050:	add	r4, r4, ip
   49054:	cmp	r5, r9
   49058:	bne	48fcc <Mat_VarGetStructsLinear+0xbc>
   4905c:	ldr	r5, [sp, #4]
   49060:	b	49070 <Mat_VarGetStructsLinear+0x160>
   49064:	mov	r0, r5
   49068:	bl	1930 <Mat_VarFree@plt>
   4906c:	mov	r5, #0
   49070:	mov	r0, r5
   49074:	sub	sp, fp, #28
   49078:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0004907c <Mat_VarSetStructFieldByIndex>:
   4907c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   49080:	add	fp, sp, #24
   49084:	sub	sp, sp, #8
   49088:	mov	r7, r0
   4908c:	mov	r0, #1
   49090:	mov	r4, #0
   49094:	cmp	r7, #0
   49098:	str	r0, [sp, #4]
   4909c:	beq	4911c <Mat_VarSetStructFieldByIndex+0xa0>
   490a0:	ldr	r0, [r7, #16]
   490a4:	cmp	r0, #2
   490a8:	bne	4911c <Mat_VarSetStructFieldByIndex+0xa0>
   490ac:	ldr	r0, [r7, #40]	; 0x28
   490b0:	cmp	r0, #0
   490b4:	beq	4911c <Mat_VarSetStructFieldByIndex+0xa0>
   490b8:	mov	r6, r1
   490bc:	add	r1, sp, #4
   490c0:	mov	r0, r7
   490c4:	mov	r8, r3
   490c8:	mov	r5, r2
   490cc:	bl	45294 <SafeMulDims>
   490d0:	ldr	r0, [r7, #52]	; 0x34
   490d4:	ldr	r0, [r0, #4]
   490d8:	cmp	r0, r6
   490dc:	ldrhi	r1, [sp, #4]
   490e0:	cmphi	r1, r5
   490e4:	bls	4911c <Mat_VarSetStructFieldByIndex+0xa0>
   490e8:	ldr	r1, [r7, #40]	; 0x28
   490ec:	mla	r0, r0, r5, r6
   490f0:	ldr	r4, [r1, r0, lsl #2]
   490f4:	str	r8, [r1, r0, lsl #2]
   490f8:	ldr	r0, [r8, #36]	; 0x24
   490fc:	cmp	r0, #0
   49100:	beq	49108 <Mat_VarSetStructFieldByIndex+0x8c>
   49104:	bl	181c <free@plt>
   49108:	ldr	r0, [r7, #52]	; 0x34
   4910c:	ldr	r0, [r0, #8]
   49110:	ldr	r0, [r0, r6, lsl #2]
   49114:	bl	187c <strdup@plt>
   49118:	str	r0, [r8, #36]	; 0x24
   4911c:	mov	r0, r4
   49120:	sub	sp, fp, #24
   49124:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00049128 <Mat_VarSetStructFieldByName>:
   49128:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4912c:	add	fp, sp, #28
   49130:	sub	sp, sp, #12
   49134:	mov	r8, r0
   49138:	mov	r0, #1
   4913c:	mov	sl, #0
   49140:	cmp	r8, #0
   49144:	str	r0, [sp, #8]
   49148:	beq	4920c <Mat_VarSetStructFieldByName+0xe4>
   4914c:	ldr	r0, [r8, #16]
   49150:	cmp	r0, #2
   49154:	bne	4920c <Mat_VarSetStructFieldByName+0xe4>
   49158:	ldr	r0, [r8, #40]	; 0x28
   4915c:	cmp	r0, #0
   49160:	beq	4920c <Mat_VarSetStructFieldByName+0xe4>
   49164:	mov	r4, r1
   49168:	add	r1, sp, #8
   4916c:	mov	r0, r8
   49170:	mov	r5, r3
   49174:	mov	r9, r2
   49178:	bl	45294 <SafeMulDims>
   4917c:	ldr	r0, [r8, #52]	; 0x34
   49180:	ldr	r6, [r0, #4]
   49184:	cmp	r6, #1
   49188:	blt	4920c <Mat_VarSetStructFieldByName+0xe4>
   4918c:	str	r5, [sp, #4]
   49190:	ldr	r5, [r0, #8]
   49194:	mov	r7, #0
   49198:	ldr	r0, [r5, r7, lsl #2]
   4919c:	mov	r1, r4
   491a0:	bl	17c8 <strcmp@plt>
   491a4:	cmp	r0, #0
   491a8:	beq	491c0 <Mat_VarSetStructFieldByName+0x98>
   491ac:	add	r7, r7, #1
   491b0:	cmp	r7, r6
   491b4:	blt	49198 <Mat_VarSetStructFieldByName+0x70>
   491b8:	mov	sl, #0
   491bc:	b	4920c <Mat_VarSetStructFieldByName+0xe4>
   491c0:	ldr	r0, [sp, #8]
   491c4:	ldr	r4, [sp, #4]
   491c8:	mov	sl, #0
   491cc:	cmp	r0, r9
   491d0:	bls	4920c <Mat_VarSetStructFieldByName+0xe4>
   491d4:	ldr	r1, [r8, #40]	; 0x28
   491d8:	mul	r0, r6, r9
   491dc:	add	r0, r1, r0, lsl #2
   491e0:	ldr	sl, [r0, r7, lsl #2]
   491e4:	str	r4, [r0, r7, lsl #2]
   491e8:	ldr	r0, [r4, #36]	; 0x24
   491ec:	cmp	r0, #0
   491f0:	beq	491f8 <Mat_VarSetStructFieldByName+0xd0>
   491f4:	bl	181c <free@plt>
   491f8:	ldr	r0, [r8, #52]	; 0x34
   491fc:	ldr	r0, [r0, #8]
   49200:	ldr	r0, [r0, r7, lsl #2]
   49204:	bl	187c <strdup@plt>
   49208:	str	r0, [r4, #36]	; 0x24
   4920c:	mov	r0, sl
   49210:	sub	sp, fp, #28
   49214:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00049218 <__aeabi_drsub>:
   49218:	eor	r1, r1, #-2147483648	; 0x80000000
   4921c:	b	49224 <__adddf3>

00049220 <__aeabi_dsub>:
   49220:	eor	r3, r3, #-2147483648	; 0x80000000

00049224 <__adddf3>:
   49224:	push	{r4, r5, lr}
   49228:	lsl	r4, r1, #1
   4922c:	lsl	r5, r3, #1
   49230:	teq	r4, r5
   49234:	teqeq	r0, r2
   49238:	orrsne	ip, r4, r0
   4923c:	orrsne	ip, r5, r2
   49240:	mvnsne	ip, r4, asr #21
   49244:	mvnsne	ip, r5, asr #21
   49248:	beq	49434 <__adddf3+0x210>
   4924c:	lsr	r4, r4, #21
   49250:	rsbs	r5, r4, r5, lsr #21
   49254:	rsblt	r5, r5, #0
   49258:	ble	49278 <__adddf3+0x54>
   4925c:	add	r4, r4, r5
   49260:	eor	r2, r0, r2
   49264:	eor	r3, r1, r3
   49268:	eor	r0, r2, r0
   4926c:	eor	r1, r3, r1
   49270:	eor	r2, r0, r2
   49274:	eor	r3, r1, r3
   49278:	cmp	r5, #54	; 0x36
   4927c:	pophi	{r4, r5, pc}
   49280:	tst	r1, #-2147483648	; 0x80000000
   49284:	lsl	r1, r1, #12
   49288:	mov	ip, #1048576	; 0x100000
   4928c:	orr	r1, ip, r1, lsr #12
   49290:	beq	4929c <__adddf3+0x78>
   49294:	rsbs	r0, r0, #0
   49298:	rsc	r1, r1, #0
   4929c:	tst	r3, #-2147483648	; 0x80000000
   492a0:	lsl	r3, r3, #12
   492a4:	orr	r3, ip, r3, lsr #12
   492a8:	beq	492b4 <__adddf3+0x90>
   492ac:	rsbs	r2, r2, #0
   492b0:	rsc	r3, r3, #0
   492b4:	teq	r4, r5
   492b8:	beq	4941c <__adddf3+0x1f8>
   492bc:	sub	r4, r4, #1
   492c0:	rsbs	lr, r5, #32
   492c4:	blt	492e0 <__adddf3+0xbc>
   492c8:	lsl	ip, r2, lr
   492cc:	adds	r0, r0, r2, lsr r5
   492d0:	adc	r1, r1, #0
   492d4:	adds	r0, r0, r3, lsl lr
   492d8:	adcs	r1, r1, r3, asr r5
   492dc:	b	492fc <__adddf3+0xd8>
   492e0:	sub	r5, r5, #32
   492e4:	add	lr, lr, #32
   492e8:	cmp	r2, #1
   492ec:	lsl	ip, r3, lr
   492f0:	orrcs	ip, ip, #2
   492f4:	adds	r0, r0, r3, asr r5
   492f8:	adcs	r1, r1, r3, asr #31
   492fc:	and	r5, r1, #-2147483648	; 0x80000000
   49300:	bpl	49310 <__adddf3+0xec>
   49304:	rsbs	ip, ip, #0
   49308:	rscs	r0, r0, #0
   4930c:	rsc	r1, r1, #0
   49310:	cmp	r1, #1048576	; 0x100000
   49314:	bcc	49354 <__adddf3+0x130>
   49318:	cmp	r1, #2097152	; 0x200000
   4931c:	bcc	4933c <__adddf3+0x118>
   49320:	lsrs	r1, r1, #1
   49324:	rrxs	r0, r0
   49328:	rrx	ip, ip
   4932c:	add	r4, r4, #1
   49330:	lsl	r2, r4, #21
   49334:	cmn	r2, #4194304	; 0x400000
   49338:	bcs	49494 <__adddf3+0x270>
   4933c:	cmp	ip, #-2147483648	; 0x80000000
   49340:	lsrseq	ip, r0, #1
   49344:	adcs	r0, r0, #0
   49348:	adc	r1, r1, r4, lsl #20
   4934c:	orr	r1, r1, r5
   49350:	pop	{r4, r5, pc}
   49354:	lsls	ip, ip, #1
   49358:	adcs	r0, r0, r0
   4935c:	adc	r1, r1, r1
   49360:	tst	r1, #1048576	; 0x100000
   49364:	sub	r4, r4, #1
   49368:	bne	4933c <__adddf3+0x118>
   4936c:	teq	r1, #0
   49370:	moveq	r1, r0
   49374:	moveq	r0, #0
   49378:	clz	r3, r1
   4937c:	addeq	r3, r3, #32
   49380:	sub	r3, r3, #11
   49384:	subs	r2, r3, #32
   49388:	bge	493ac <__adddf3+0x188>
   4938c:	adds	r2, r2, #12
   49390:	ble	493a8 <__adddf3+0x184>
   49394:	add	ip, r2, #20
   49398:	rsb	r2, r2, #12
   4939c:	lsl	r0, r1, ip
   493a0:	lsr	r1, r1, r2
   493a4:	b	493bc <__adddf3+0x198>
   493a8:	add	r2, r2, #20
   493ac:	rsble	ip, r2, #32
   493b0:	lsl	r1, r1, r2
   493b4:	orrle	r1, r1, r0, lsr ip
   493b8:	lslle	r0, r0, r2
   493bc:	subs	r4, r4, r3
   493c0:	addge	r1, r1, r4, lsl #20
   493c4:	orrge	r1, r1, r5
   493c8:	popge	{r4, r5, pc}
   493cc:	mvn	r4, r4
   493d0:	subs	r4, r4, #31
   493d4:	bge	49410 <__adddf3+0x1ec>
   493d8:	adds	r4, r4, #12
   493dc:	bgt	493f8 <__adddf3+0x1d4>
   493e0:	add	r4, r4, #20
   493e4:	rsb	r2, r4, #32
   493e8:	lsr	r0, r0, r4
   493ec:	orr	r0, r0, r1, lsl r2
   493f0:	orr	r1, r5, r1, lsr r4
   493f4:	pop	{r4, r5, pc}
   493f8:	rsb	r4, r4, #12
   493fc:	rsb	r2, r4, #32
   49400:	lsr	r0, r0, r2
   49404:	orr	r0, r0, r1, lsl r4
   49408:	mov	r1, r5
   4940c:	pop	{r4, r5, pc}
   49410:	lsr	r0, r1, r4
   49414:	mov	r1, r5
   49418:	pop	{r4, r5, pc}
   4941c:	teq	r4, #0
   49420:	eor	r3, r3, #1048576	; 0x100000
   49424:	eoreq	r1, r1, #1048576	; 0x100000
   49428:	addeq	r4, r4, #1
   4942c:	subne	r5, r5, #1
   49430:	b	492bc <__adddf3+0x98>
   49434:	mvns	ip, r4, asr #21
   49438:	mvnsne	ip, r5, asr #21
   4943c:	beq	494a4 <__adddf3+0x280>
   49440:	teq	r4, r5
   49444:	teqeq	r0, r2
   49448:	beq	4945c <__adddf3+0x238>
   4944c:	orrs	ip, r4, r0
   49450:	moveq	r1, r3
   49454:	moveq	r0, r2
   49458:	pop	{r4, r5, pc}
   4945c:	teq	r1, r3
   49460:	movne	r1, #0
   49464:	movne	r0, #0
   49468:	popne	{r4, r5, pc}
   4946c:	lsrs	ip, r4, #21
   49470:	bne	49484 <__adddf3+0x260>
   49474:	lsls	r0, r0, #1
   49478:	adcs	r1, r1, r1
   4947c:	orrcs	r1, r1, #-2147483648	; 0x80000000
   49480:	pop	{r4, r5, pc}
   49484:	adds	r4, r4, #4194304	; 0x400000
   49488:	addcc	r1, r1, #1048576	; 0x100000
   4948c:	popcc	{r4, r5, pc}
   49490:	and	r5, r1, #-2147483648	; 0x80000000
   49494:	orr	r1, r5, #2130706432	; 0x7f000000
   49498:	orr	r1, r1, #15728640	; 0xf00000
   4949c:	mov	r0, #0
   494a0:	pop	{r4, r5, pc}
   494a4:	mvns	ip, r4, asr #21
   494a8:	movne	r1, r3
   494ac:	movne	r0, r2
   494b0:	mvnseq	ip, r5, asr #21
   494b4:	movne	r3, r1
   494b8:	movne	r2, r0
   494bc:	orrs	r4, r0, r1, lsl #12
   494c0:	orrseq	r5, r2, r3, lsl #12
   494c4:	teqeq	r1, r3
   494c8:	orrne	r1, r1, #524288	; 0x80000
   494cc:	pop	{r4, r5, pc}

000494d0 <__aeabi_ui2d>:
   494d0:	teq	r0, #0
   494d4:	moveq	r1, #0
   494d8:	bxeq	lr
   494dc:	push	{r4, r5, lr}
   494e0:	mov	r4, #1024	; 0x400
   494e4:	add	r4, r4, #50	; 0x32
   494e8:	mov	r5, #0
   494ec:	mov	r1, #0
   494f0:	b	4936c <__adddf3+0x148>

000494f4 <__aeabi_i2d>:
   494f4:	teq	r0, #0
   494f8:	moveq	r1, #0
   494fc:	bxeq	lr
   49500:	push	{r4, r5, lr}
   49504:	mov	r4, #1024	; 0x400
   49508:	add	r4, r4, #50	; 0x32
   4950c:	ands	r5, r0, #-2147483648	; 0x80000000
   49510:	rsbmi	r0, r0, #0
   49514:	mov	r1, #0
   49518:	b	4936c <__adddf3+0x148>

0004951c <__aeabi_f2d>:
   4951c:	lsls	r2, r0, #1
   49520:	asr	r1, r2, #3
   49524:	rrx	r1, r1
   49528:	lsl	r0, r2, #28
   4952c:	andsne	r3, r2, #-16777216	; 0xff000000
   49530:	teqne	r3, #-16777216	; 0xff000000
   49534:	eorne	r1, r1, #939524096	; 0x38000000
   49538:	bxne	lr
   4953c:	bics	r2, r2, #-16777216	; 0xff000000
   49540:	bxeq	lr
   49544:	teq	r3, #-16777216	; 0xff000000
   49548:	orreq	r1, r1, #524288	; 0x80000
   4954c:	bxeq	lr
   49550:	push	{r4, r5, lr}
   49554:	mov	r4, #896	; 0x380
   49558:	and	r5, r1, #-2147483648	; 0x80000000
   4955c:	bic	r1, r1, #-2147483648	; 0x80000000
   49560:	b	4936c <__adddf3+0x148>

00049564 <__aeabi_ul2d>:
   49564:	orrs	r2, r0, r1
   49568:	bxeq	lr
   4956c:	push	{r4, r5, lr}
   49570:	mov	r5, #0
   49574:	b	49594 <__aeabi_l2d+0x1c>

00049578 <__aeabi_l2d>:
   49578:	orrs	r2, r0, r1
   4957c:	bxeq	lr
   49580:	push	{r4, r5, lr}
   49584:	ands	r5, r1, #-2147483648	; 0x80000000
   49588:	bpl	49594 <__aeabi_l2d+0x1c>
   4958c:	rsbs	r0, r0, #0
   49590:	rsc	r1, r1, #0
   49594:	mov	r4, #1024	; 0x400
   49598:	add	r4, r4, #50	; 0x32
   4959c:	lsrs	ip, r1, #22
   495a0:	beq	49310 <__adddf3+0xec>
   495a4:	mov	r2, #3
   495a8:	lsrs	ip, ip, #3
   495ac:	addne	r2, r2, #3
   495b0:	lsrs	ip, ip, #3
   495b4:	addne	r2, r2, #3
   495b8:	add	r2, r2, ip, lsr #3
   495bc:	rsb	r3, r2, #32
   495c0:	lsl	ip, r0, r3
   495c4:	lsr	r0, r0, r2
   495c8:	orr	r0, r0, r1, lsl r3
   495cc:	lsr	r1, r1, r2
   495d0:	add	r4, r4, r2
   495d4:	b	49310 <__adddf3+0xec>

000495d8 <__aeabi_frsub>:
   495d8:	eor	r0, r0, #-2147483648	; 0x80000000
   495dc:	b	495e4 <__addsf3>

000495e0 <__aeabi_fsub>:
   495e0:	eor	r1, r1, #-2147483648	; 0x80000000

000495e4 <__addsf3>:
   495e4:	lsls	r2, r0, #1
   495e8:	lslsne	r3, r1, #1
   495ec:	teqne	r2, r3
   495f0:	mvnsne	ip, r2, asr #24
   495f4:	mvnsne	ip, r3, asr #24
   495f8:	beq	496f0 <__addsf3+0x10c>
   495fc:	lsr	r2, r2, #24
   49600:	rsbs	r3, r2, r3, lsr #24
   49604:	addgt	r2, r2, r3
   49608:	eorgt	r1, r0, r1
   4960c:	eorgt	r0, r1, r0
   49610:	eorgt	r1, r0, r1
   49614:	rsblt	r3, r3, #0
   49618:	cmp	r3, #25
   4961c:	bxhi	lr
   49620:	tst	r0, #-2147483648	; 0x80000000
   49624:	orr	r0, r0, #8388608	; 0x800000
   49628:	bic	r0, r0, #-16777216	; 0xff000000
   4962c:	rsbne	r0, r0, #0
   49630:	tst	r1, #-2147483648	; 0x80000000
   49634:	orr	r1, r1, #8388608	; 0x800000
   49638:	bic	r1, r1, #-16777216	; 0xff000000
   4963c:	rsbne	r1, r1, #0
   49640:	teq	r2, r3
   49644:	beq	496d8 <__addsf3+0xf4>
   49648:	sub	r2, r2, #1
   4964c:	adds	r0, r0, r1, asr r3
   49650:	rsb	r3, r3, #32
   49654:	lsl	r1, r1, r3
   49658:	and	r3, r0, #-2147483648	; 0x80000000
   4965c:	bpl	49668 <__addsf3+0x84>
   49660:	rsbs	r1, r1, #0
   49664:	rsc	r0, r0, #0
   49668:	cmp	r0, #8388608	; 0x800000
   4966c:	bcc	496a0 <__addsf3+0xbc>
   49670:	cmp	r0, #16777216	; 0x1000000
   49674:	bcc	4968c <__addsf3+0xa8>
   49678:	lsrs	r0, r0, #1
   4967c:	rrx	r1, r1
   49680:	add	r2, r2, #1
   49684:	cmp	r2, #254	; 0xfe
   49688:	bcs	49744 <__addsf3+0x160>
   4968c:	cmp	r1, #-2147483648	; 0x80000000
   49690:	adc	r0, r0, r2, lsl #23
   49694:	biceq	r0, r0, #1
   49698:	orr	r0, r0, r3
   4969c:	bx	lr
   496a0:	lsls	r1, r1, #1
   496a4:	adc	r0, r0, r0
   496a8:	tst	r0, #8388608	; 0x800000
   496ac:	sub	r2, r2, #1
   496b0:	bne	4968c <__addsf3+0xa8>
   496b4:	clz	ip, r0
   496b8:	sub	ip, ip, #8
   496bc:	subs	r2, r2, ip
   496c0:	lsl	r0, r0, ip
   496c4:	addge	r0, r0, r2, lsl #23
   496c8:	rsblt	r2, r2, #0
   496cc:	orrge	r0, r0, r3
   496d0:	orrlt	r0, r3, r0, lsr r2
   496d4:	bx	lr
   496d8:	teq	r2, #0
   496dc:	eor	r1, r1, #8388608	; 0x800000
   496e0:	eoreq	r0, r0, #8388608	; 0x800000
   496e4:	addeq	r2, r2, #1
   496e8:	subne	r3, r3, #1
   496ec:	b	49648 <__addsf3+0x64>
   496f0:	lsl	r3, r1, #1
   496f4:	mvns	ip, r2, asr #24
   496f8:	mvnsne	ip, r3, asr #24
   496fc:	beq	49750 <__addsf3+0x16c>
   49700:	teq	r2, r3
   49704:	beq	49714 <__addsf3+0x130>
   49708:	teq	r2, #0
   4970c:	moveq	r0, r1
   49710:	bx	lr
   49714:	teq	r0, r1
   49718:	movne	r0, #0
   4971c:	bxne	lr
   49720:	tst	r2, #-16777216	; 0xff000000
   49724:	bne	49734 <__addsf3+0x150>
   49728:	lsls	r0, r0, #1
   4972c:	orrcs	r0, r0, #-2147483648	; 0x80000000
   49730:	bx	lr
   49734:	adds	r2, r2, #33554432	; 0x2000000
   49738:	addcc	r0, r0, #8388608	; 0x800000
   4973c:	bxcc	lr
   49740:	and	r3, r0, #-2147483648	; 0x80000000
   49744:	orr	r0, r3, #2130706432	; 0x7f000000
   49748:	orr	r0, r0, #8388608	; 0x800000
   4974c:	bx	lr
   49750:	mvns	r2, r2, asr #24
   49754:	movne	r0, r1
   49758:	mvnseq	r3, r3, asr #24
   4975c:	movne	r1, r0
   49760:	lsls	r2, r0, #9
   49764:	lslseq	r3, r1, #9
   49768:	teqeq	r0, r1
   4976c:	orrne	r0, r0, #4194304	; 0x400000
   49770:	bx	lr

00049774 <__aeabi_ui2f>:
   49774:	mov	r3, #0
   49778:	b	49784 <__aeabi_i2f+0x8>

0004977c <__aeabi_i2f>:
   4977c:	ands	r3, r0, #-2147483648	; 0x80000000
   49780:	rsbmi	r0, r0, #0
   49784:	movs	ip, r0
   49788:	bxeq	lr
   4978c:	orr	r3, r3, #1258291200	; 0x4b000000
   49790:	mov	r1, r0
   49794:	mov	r0, #0
   49798:	b	497dc <__aeabi_l2f+0x30>

0004979c <__aeabi_ul2f>:
   4979c:	orrs	r2, r0, r1
   497a0:	bxeq	lr
   497a4:	mov	r3, #0
   497a8:	b	497c4 <__aeabi_l2f+0x18>

000497ac <__aeabi_l2f>:
   497ac:	orrs	r2, r0, r1
   497b0:	bxeq	lr
   497b4:	ands	r3, r1, #-2147483648	; 0x80000000
   497b8:	bpl	497c4 <__aeabi_l2f+0x18>
   497bc:	rsbs	r0, r0, #0
   497c0:	rsc	r1, r1, #0
   497c4:	movs	ip, r1
   497c8:	moveq	ip, r0
   497cc:	moveq	r1, r0
   497d0:	moveq	r0, #0
   497d4:	orr	r3, r3, #1526726656	; 0x5b000000
   497d8:	subeq	r3, r3, #268435456	; 0x10000000
   497dc:	sub	r3, r3, #8388608	; 0x800000
   497e0:	clz	r2, ip
   497e4:	subs	r2, r2, #8
   497e8:	sub	r3, r3, r2, lsl #23
   497ec:	blt	4980c <__aeabi_l2f+0x60>
   497f0:	add	r3, r3, r1, lsl r2
   497f4:	lsl	ip, r0, r2
   497f8:	rsb	r2, r2, #32
   497fc:	cmp	ip, #-2147483648	; 0x80000000
   49800:	adc	r0, r3, r0, lsr r2
   49804:	biceq	r0, r0, #1
   49808:	bx	lr
   4980c:	add	r2, r2, #32
   49810:	lsl	ip, r1, r2
   49814:	rsb	r2, r2, #32
   49818:	orrs	r0, r0, ip, lsl #1
   4981c:	adc	r0, r3, r1, lsr r2
   49820:	biceq	r0, r0, ip, lsr #31
   49824:	bx	lr

00049828 <__aeabi_f2lz>:
   49828:	vmov	s15, r0
   4982c:	vcmpe.f32	s15, #0.0
   49830:	vmrs	APSR_nzcv, fpscr
   49834:	bmi	4983c <__aeabi_f2lz+0x14>
   49838:	b	49880 <__aeabi_f2ulz>
   4983c:	push	{r4, lr}
   49840:	eor	r0, r0, #-2147483648	; 0x80000000
   49844:	bl	49880 <__aeabi_f2ulz>
   49848:	rsbs	r0, r0, #0
   4984c:	rsc	r1, r1, #0
   49850:	pop	{r4, pc}

00049854 <__aeabi_d2lz>:
   49854:	vmov	d7, r0, r1
   49858:	vcmpe.f64	d7, #0.0
   4985c:	vmrs	APSR_nzcv, fpscr
   49860:	bmi	49868 <__aeabi_d2lz+0x14>
   49864:	b	498c0 <__aeabi_d2ulz>
   49868:	push	{r4, lr}
   4986c:	eor	r1, r1, #-2147483648	; 0x80000000
   49870:	bl	498c0 <__aeabi_d2ulz>
   49874:	rsbs	r0, r0, #0
   49878:	rsc	r1, r1, #0
   4987c:	pop	{r4, pc}

00049880 <__aeabi_f2ulz>:
   49880:	vmov	s15, r0
   49884:	vldr	d5, [pc, #36]	; 498b0 <__aeabi_f2ulz+0x30>
   49888:	vcvt.f64.f32	d6, s15
   4988c:	vldr	d7, [pc, #36]	; 498b8 <__aeabi_f2ulz+0x38>
   49890:	vmul.f64	d7, d6, d7
   49894:	vcvt.u32.f64	s14, d7
   49898:	vcvt.f64.u32	d4, s14
   4989c:	vmov	r1, s14
   498a0:	vmls.f64	d6, d4, d5
   498a4:	vcvt.u32.f64	s15, d6
   498a8:	vmov	r0, s15
   498ac:	bx	lr
   498b0:	.word	0x00000000
   498b4:	.word	0x41f00000
   498b8:	.word	0x00000000
   498bc:	.word	0x3df00000

000498c0 <__aeabi_d2ulz>:
   498c0:	vmov	d6, r0, r1
   498c4:	vldr	d7, [pc, #36]	; 498f0 <__aeabi_d2ulz+0x30>
   498c8:	vldr	d5, [pc, #40]	; 498f8 <__aeabi_d2ulz+0x38>
   498cc:	vmul.f64	d7, d6, d7
   498d0:	vcvt.u32.f64	s14, d7
   498d4:	vcvt.f64.u32	d4, s14
   498d8:	vmov	r1, s14
   498dc:	vmls.f64	d6, d4, d5
   498e0:	vcvt.u32.f64	s15, d6
   498e4:	vmov	r0, s15
   498e8:	bx	lr
   498ec:	nop			; (mov r0, r0)
   498f0:	.word	0x00000000
   498f4:	.word	0x3df00000
   498f8:	.word	0x00000000
   498fc:	.word	0x41f00000

Disassembly of section .fini:

00049900 <_fini>:
   49900:	push	{r3, lr}
   49904:	pop	{r3, pc}
