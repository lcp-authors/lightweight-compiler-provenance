
../repos/charybdis/extensions/.libs/m_mkpasswd.so:     file format elf32-littlearm


Disassembly of section .init:

000005b4 <_init>:
 5b4:	push	{r3, lr}
 5b8:	bl	688 <call_weak_fn>
 5bc:	pop	{r3, pc}

Disassembly of section .plt:

000005c0 <.plt>:
 5c0:	push	{lr}		; (str lr, [sp, #-4]!)
 5c4:	ldr	lr, [pc, #4]	; 5d0 <.plt+0x10>
 5c8:	add	lr, pc, lr
 5cc:	ldr	pc, [lr, #8]!
 5d0:	.word	0x00011a30

000005d4 <rb_current_time@plt>:
 5d4:	add	ip, pc, #0, 12
 5d8:	add	ip, ip, #69632	; 0x11000
 5dc:	ldr	pc, [ip, #2608]!	; 0xa30

000005e0 <__cxa_finalize@plt>:
 5e0:	add	ip, pc, #0, 12
 5e4:	add	ip, ip, #69632	; 0x11000
 5e8:	ldr	pc, [ip, #2600]!	; 0xa28

000005ec <sendto_one@plt>:
 5ec:	add	ip, pc, #0, 12
 5f0:	add	ip, ip, #69632	; 0x11000
 5f4:	ldr	pc, [ip, #2592]!	; 0xa20

000005f8 <read@plt>:
 5f8:	add	ip, pc, #0, 12
 5fc:	add	ip, ip, #69632	; 0x11000
 600:	ldr	pc, [ip, #2584]!	; 0xa18

00000604 <time@plt>:
 604:	add	ip, pc, #0, 12
 608:	add	ip, ip, #69632	; 0x11000
 60c:	ldr	pc, [ip, #2576]!	; 0xa10

00000610 <rb_crypt@plt>:
 610:	add	ip, pc, #0, 12
 614:	add	ip, ip, #69632	; 0x11000
 618:	ldr	pc, [ip, #2568]!	; 0xa08

0000061c <puts@plt>:
 61c:	add	ip, pc, #0, 12
 620:	add	ip, ip, #69632	; 0x11000
 624:	ldr	pc, [ip, #2560]!	; 0xa00

00000628 <__gmon_start__@plt>:
 628:	add	ip, pc, #0, 12
 62c:	add	ip, ip, #69632	; 0x11000
 630:	ldr	pc, [ip, #2552]!	; 0x9f8

00000634 <open@plt>:
 634:	add	ip, pc, #0, 12
 638:	add	ip, ip, #69632	; 0x11000
 63c:	ldr	pc, [ip, #2544]!	; 0x9f0

00000640 <exit@plt>:
 640:	add	ip, pc, #0, 12
 644:	add	ip, ip, #69632	; 0x11000
 648:	ldr	pc, [ip, #2536]!	; 0x9e8

0000064c <srand@plt>:
 64c:	add	ip, pc, #0, 12
 650:	add	ip, ip, #69632	; 0x11000
 654:	ldr	pc, [ip, #2528]!	; 0x9e0

00000658 <rand@plt>:
 658:	add	ip, pc, #0, 12
 65c:	add	ip, ip, #69632	; 0x11000
 660:	ldr	pc, [ip, #2520]!	; 0x9d8

00000664 <sendto_one_notice@plt>:
 664:	add	ip, pc, #0, 12
 668:	add	ip, ip, #69632	; 0x11000
 66c:	ldr	pc, [ip, #2512]!	; 0x9d0

00000670 <close@plt>:
 670:	add	ip, pc, #0, 12
 674:	add	ip, ip, #69632	; 0x11000
 678:	ldr	pc, [ip, #2504]!	; 0x9c8

0000067c <irccmp@plt>:
 67c:	add	ip, pc, #0, 12
 680:	add	ip, ip, #69632	; 0x11000
 684:	ldr	pc, [ip, #2496]!	; 0x9c0

Disassembly of section .text:

00000688 <call_weak_fn>:
     688:	ldr	r3, [pc, #20]	; 6a4 <call_weak_fn+0x1c>
     68c:	ldr	r2, [pc, #20]	; 6a8 <call_weak_fn+0x20>
     690:	add	r3, pc, r3
     694:	ldr	r2, [r3, r2]
     698:	cmp	r2, #0
     69c:	bxeq	lr
     6a0:	b	628 <__gmon_start__@plt>
     6a4:	.word	0x00011968
     6a8:	.word	0x00000050

000006ac <deregister_tm_clones>:
     6ac:	ldr	r3, [pc, #52]	; 6e8 <deregister_tm_clones+0x3c>
     6b0:	ldr	r0, [pc, #52]	; 6ec <deregister_tm_clones+0x40>
     6b4:	add	r3, pc, r3
     6b8:	add	r0, pc, r0
     6bc:	add	r3, r3, #3
     6c0:	sub	r3, r3, r0
     6c4:	cmp	r3, #6
     6c8:	ldr	r3, [pc, #32]	; 6f0 <deregister_tm_clones+0x44>
     6cc:	add	r3, pc, r3
     6d0:	bxls	lr
     6d4:	ldr	r2, [pc, #24]	; 6f4 <deregister_tm_clones+0x48>
     6d8:	ldr	r3, [r3, r2]
     6dc:	cmp	r3, #0
     6e0:	bxeq	lr
     6e4:	bx	r3
     6e8:	.word	0x00011a64
     6ec:	.word	0x00011a60
     6f0:	.word	0x0001192c
     6f4:	.word	0x0000004c

000006f8 <register_tm_clones>:
     6f8:	ldr	r1, [pc, #56]	; 738 <register_tm_clones+0x40>
     6fc:	ldr	r0, [pc, #56]	; 73c <register_tm_clones+0x44>
     700:	add	r1, pc, r1
     704:	add	r0, pc, r0
     708:	sub	r1, r1, r0
     70c:	ldr	r3, [pc, #44]	; 740 <register_tm_clones+0x48>
     710:	asr	r1, r1, #2
     714:	add	r3, pc, r3
     718:	add	r1, r1, r1, lsr #31
     71c:	asrs	r1, r1, #1
     720:	bxeq	lr
     724:	ldr	r2, [pc, #24]	; 744 <register_tm_clones+0x4c>
     728:	ldr	r3, [r3, r2]
     72c:	cmp	r3, #0
     730:	bxeq	lr
     734:	bx	r3
     738:	.word	0x00011a18
     73c:	.word	0x00011a14
     740:	.word	0x000118e4
     744:	.word	0x00000058

00000748 <__do_global_dtors_aux>:
     748:	ldr	r3, [pc, #76]	; 79c <__do_global_dtors_aux+0x54>
     74c:	ldr	r2, [pc, #76]	; 7a0 <__do_global_dtors_aux+0x58>
     750:	add	r3, pc, r3
     754:	add	r2, pc, r2
     758:	ldrb	r3, [r3]
     75c:	cmp	r3, #0
     760:	bxne	lr
     764:	ldr	r3, [pc, #56]	; 7a4 <__do_global_dtors_aux+0x5c>
     768:	push	{r4, lr}
     76c:	ldr	r3, [r2, r3]
     770:	cmp	r3, #0
     774:	beq	784 <__do_global_dtors_aux+0x3c>
     778:	ldr	r3, [pc, #40]	; 7a8 <__do_global_dtors_aux+0x60>
     77c:	ldr	r0, [pc, r3]
     780:	bl	5e0 <__cxa_finalize@plt>
     784:	bl	6ac <deregister_tm_clones>
     788:	ldr	r3, [pc, #28]	; 7ac <__do_global_dtors_aux+0x64>
     78c:	mov	r2, #1
     790:	add	r3, pc, r3
     794:	strb	r2, [r3]
     798:	pop	{r4, pc}
     79c:	.word	0x000119c8
     7a0:	.word	0x000118a4
     7a4:	.word	0x00000048
     7a8:	.word	0x000118e0
     7ac:	.word	0x00011988

000007b0 <frame_dummy>:
     7b0:	ldr	r0, [pc, #56]	; 7f0 <frame_dummy+0x40>
     7b4:	ldr	r3, [pc, #56]	; 7f4 <frame_dummy+0x44>
     7b8:	add	r0, pc, r0
     7bc:	ldr	r2, [r0]
     7c0:	add	r3, pc, r3
     7c4:	cmp	r2, #0
     7c8:	bne	7d0 <frame_dummy+0x20>
     7cc:	b	6f8 <register_tm_clones>
     7d0:	ldr	r2, [pc, #32]	; 7f8 <frame_dummy+0x48>
     7d4:	ldr	r3, [r3, r2]
     7d8:	cmp	r3, #0
     7dc:	beq	7cc <frame_dummy+0x1c>
     7e0:	push	{r4, lr}
     7e4:	blx	r3
     7e8:	pop	{r4, lr}
     7ec:	b	6f8 <register_tm_clones>
     7f0:	.word	0x0001173c
     7f4:	.word	0x00011838
     7f8:	.word	0x00000054

000007fc <m_mkpasswd>:
     7fc:	push	{r4, r5, fp, lr}
     800:	add	fp, sp, #12
     804:	sub	sp, sp, #48	; 0x30
     808:	str	r0, [fp, #-40]	; 0xffffffd8
     80c:	str	r1, [fp, #-44]	; 0xffffffd4
     810:	str	r2, [fp, #-48]	; 0xffffffd0
     814:	str	r3, [fp, #-52]	; 0xffffffcc
     818:	ldr	r4, [pc, #560]	; a50 <m_mkpasswd+0x254>
     81c:	add	r4, pc, r4
     820:	ldr	r2, [pc, #556]	; a54 <m_mkpasswd+0x258>
     824:	add	r2, pc, r2
     828:	sub	r3, fp, #32
     82c:	ldm	r2, {r0, r1}
     830:	str	r0, [r3]
     834:	add	r3, r3, #4
     838:	strh	r1, [r3]
     83c:	add	r3, r3, #2
     840:	lsr	r2, r1, #16
     844:	strb	r2, [r3]
     848:	ldr	r3, [fp, #4]
     84c:	add	r3, r3, #4
     850:	ldr	r3, [r3]
     854:	cmp	r3, #0
     858:	beq	874 <m_mkpasswd+0x78>
     85c:	ldr	r3, [fp, #4]
     860:	add	r3, r3, #4
     864:	ldr	r3, [r3]
     868:	ldrb	r3, [r3]
     86c:	cmp	r3, #0
     870:	bne	8a8 <m_mkpasswd+0xac>
     874:	ldr	r3, [fp, #-48]	; 0xffffffd0
     878:	add	r3, r3, #88	; 0x58
     87c:	ldr	r2, [pc, #468]	; a58 <m_mkpasswd+0x25c>
     880:	add	r2, pc, r2
     884:	str	r2, [sp]
     888:	ldr	r2, [pc, #460]	; a5c <m_mkpasswd+0x260>
     88c:	ldr	r2, [r4, r2]
     890:	add	r2, r2, #88	; 0x58
     894:	ldr	r1, [pc, #452]	; a60 <m_mkpasswd+0x264>
     898:	add	r1, pc, r1
     89c:	ldr	r0, [fp, #-48]	; 0xffffffd0
     8a0:	bl	5ec <sendto_one@plt>
     8a4:	b	a48 <m_mkpasswd+0x24c>
     8a8:	ldr	r3, [fp, #-52]	; 0xffffffcc
     8ac:	cmp	r3, #2
     8b0:	bgt	8c0 <m_mkpasswd+0xc4>
     8b4:	sub	r3, fp, #32
     8b8:	str	r3, [fp, #-20]	; 0xffffffec
     8bc:	b	8cc <m_mkpasswd+0xd0>
     8c0:	ldr	r3, [fp, #4]
     8c4:	ldr	r3, [r3, #8]
     8c8:	str	r3, [fp, #-20]	; 0xffffffec
     8cc:	ldr	r3, [pc, #400]	; a64 <m_mkpasswd+0x268>
     8d0:	ldr	r3, [r4, r3]
     8d4:	ldr	r2, [r3, #184]	; 0xb8
     8d8:	ldr	r3, [pc, #392]	; a68 <m_mkpasswd+0x26c>
     8dc:	add	r3, pc, r3
     8e0:	ldr	r3, [r3]
     8e4:	add	r5, r2, r3
     8e8:	bl	5d4 <rb_current_time@plt>
     8ec:	mov	r3, r0
     8f0:	cmp	r5, r3
     8f4:	ble	92c <m_mkpasswd+0x130>
     8f8:	ldr	r3, [fp, #-48]	; 0xffffffd0
     8fc:	add	r3, r3, #88	; 0x58
     900:	ldr	r2, [pc, #356]	; a6c <m_mkpasswd+0x270>
     904:	add	r2, pc, r2
     908:	str	r2, [sp]
     90c:	ldr	r2, [pc, #328]	; a5c <m_mkpasswd+0x260>
     910:	ldr	r2, [r4, r2]
     914:	add	r2, r2, #88	; 0x58
     918:	ldr	r1, [pc, #336]	; a70 <m_mkpasswd+0x274>
     91c:	add	r1, pc, r1
     920:	ldr	r0, [fp, #-48]	; 0xffffffd0
     924:	bl	5ec <sendto_one@plt>
     928:	b	a48 <m_mkpasswd+0x24c>
     92c:	bl	5d4 <rb_current_time@plt>
     930:	mov	r2, r0
     934:	ldr	r3, [pc, #312]	; a74 <m_mkpasswd+0x278>
     938:	add	r3, pc, r3
     93c:	str	r2, [r3]
     940:	ldr	r3, [pc, #304]	; a78 <m_mkpasswd+0x27c>
     944:	add	r3, pc, r3
     948:	mov	r1, r3
     94c:	ldr	r0, [fp, #-20]	; 0xffffffec
     950:	bl	67c <irccmp@plt>
     954:	mov	r3, r0
     958:	cmp	r3, #0
     95c:	bne	970 <m_mkpasswd+0x174>
     960:	mov	r0, #16
     964:	bl	d78 <make_sha256_salt>
     968:	str	r0, [fp, #-16]
     96c:	b	9e8 <m_mkpasswd+0x1ec>
     970:	ldr	r3, [pc, #260]	; a7c <m_mkpasswd+0x280>
     974:	add	r3, pc, r3
     978:	mov	r1, r3
     97c:	ldr	r0, [fp, #-20]	; 0xffffffec
     980:	bl	67c <irccmp@plt>
     984:	mov	r3, r0
     988:	cmp	r3, #0
     98c:	bne	9a0 <m_mkpasswd+0x1a4>
     990:	mov	r0, #16
     994:	bl	e54 <make_sha512_salt>
     998:	str	r0, [fp, #-16]
     99c:	b	9e8 <m_mkpasswd+0x1ec>
     9a0:	ldr	r3, [pc, #216]	; a80 <m_mkpasswd+0x284>
     9a4:	add	r3, pc, r3
     9a8:	mov	r1, r3
     9ac:	ldr	r0, [fp, #-20]	; 0xffffffec
     9b0:	bl	67c <irccmp@plt>
     9b4:	mov	r3, r0
     9b8:	cmp	r3, #0
     9bc:	bne	9d0 <m_mkpasswd+0x1d4>
     9c0:	mov	r0, #8
     9c4:	bl	c9c <make_md5_salt>
     9c8:	str	r0, [fp, #-16]
     9cc:	b	9e8 <m_mkpasswd+0x1ec>
     9d0:	ldr	r3, [pc, #172]	; a84 <m_mkpasswd+0x288>
     9d4:	add	r3, pc, r3
     9d8:	mov	r1, r3
     9dc:	ldr	r0, [fp, #-48]	; 0xffffffd0
     9e0:	bl	664 <sendto_one_notice@plt>
     9e4:	b	a48 <m_mkpasswd+0x24c>
     9e8:	ldr	r3, [fp, #4]
     9ec:	add	r3, r3, #4
     9f0:	ldr	r3, [r3]
     9f4:	ldr	r1, [fp, #-16]
     9f8:	mov	r0, r3
     9fc:	bl	610 <rb_crypt@plt>
     a00:	str	r0, [fp, #-24]	; 0xffffffe8
     a04:	ldr	r3, [fp, #4]
     a08:	add	r3, r3, #4
     a0c:	ldr	r2, [r3]
     a10:	ldr	r3, [fp, #-24]	; 0xffffffe8
     a14:	cmp	r3, #0
     a18:	beq	a24 <m_mkpasswd+0x228>
     a1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     a20:	b	a2c <m_mkpasswd+0x230>
     a24:	ldr	r3, [pc, #92]	; a88 <m_mkpasswd+0x28c>
     a28:	add	r3, pc, r3
     a2c:	str	r3, [sp]
     a30:	mov	r3, r2
     a34:	ldr	r2, [fp, #-20]	; 0xffffffec
     a38:	ldr	r1, [pc, #76]	; a8c <m_mkpasswd+0x290>
     a3c:	add	r1, pc, r1
     a40:	ldr	r0, [fp, #-48]	; 0xffffffd0
     a44:	bl	664 <sendto_one_notice@plt>
     a48:	sub	sp, fp, #12
     a4c:	pop	{r4, r5, fp, pc}
     a50:	.word	0x000117dc
     a54:	.word	0x00000980
     a58:	.word	0x0000087c
     a5c:	.word	0x0000005c
     a60:	.word	0x00000870
     a64:	.word	0x00000060
     a68:	.word	0x00011840
     a6c:	.word	0x000007f8
     a70:	.word	0x00000814
     a74:	.word	0x000117e4
     a78:	.word	0x00000858
     a7c:	.word	0x00000830
     a80:	.word	0x00000808
     a84:	.word	0x000007dc
     a88:	.word	0x000007c4
     a8c:	.word	0x000007b4

00000a90 <mo_mkpasswd>:
     a90:	push	{fp, lr}
     a94:	add	fp, sp, #4
     a98:	sub	sp, sp, #48	; 0x30
     a9c:	str	r0, [fp, #-32]	; 0xffffffe0
     aa0:	str	r1, [fp, #-36]	; 0xffffffdc
     aa4:	str	r2, [fp, #-40]	; 0xffffffd8
     aa8:	str	r3, [fp, #-44]	; 0xffffffd4
     aac:	ldr	ip, [pc, #444]	; c70 <mo_mkpasswd+0x1e0>
     ab0:	add	ip, pc, ip
     ab4:	ldr	r2, [pc, #440]	; c74 <mo_mkpasswd+0x1e4>
     ab8:	add	r2, pc, r2
     abc:	sub	r3, fp, #24
     ac0:	ldm	r2, {r0, r1}
     ac4:	str	r0, [r3]
     ac8:	add	r3, r3, #4
     acc:	strh	r1, [r3]
     ad0:	add	r3, r3, #2
     ad4:	lsr	r2, r1, #16
     ad8:	strb	r2, [r3]
     adc:	ldr	r3, [fp, #4]
     ae0:	add	r3, r3, #4
     ae4:	ldr	r3, [r3]
     ae8:	cmp	r3, #0
     aec:	beq	b08 <mo_mkpasswd+0x78>
     af0:	ldr	r3, [fp, #4]
     af4:	add	r3, r3, #4
     af8:	ldr	r3, [r3]
     afc:	ldrb	r3, [r3]
     b00:	cmp	r3, #0
     b04:	bne	b3c <mo_mkpasswd+0xac>
     b08:	ldr	r3, [fp, #-40]	; 0xffffffd8
     b0c:	add	r3, r3, #88	; 0x58
     b10:	ldr	r2, [pc, #352]	; c78 <mo_mkpasswd+0x1e8>
     b14:	add	r2, pc, r2
     b18:	str	r2, [sp]
     b1c:	ldr	r2, [pc, #344]	; c7c <mo_mkpasswd+0x1ec>
     b20:	ldr	r2, [ip, r2]
     b24:	add	r2, r2, #88	; 0x58
     b28:	ldr	r1, [pc, #336]	; c80 <mo_mkpasswd+0x1f0>
     b2c:	add	r1, pc, r1
     b30:	ldr	r0, [fp, #-40]	; 0xffffffd8
     b34:	bl	5ec <sendto_one@plt>
     b38:	b	c68 <mo_mkpasswd+0x1d8>
     b3c:	ldr	r3, [fp, #-44]	; 0xffffffd4
     b40:	cmp	r3, #2
     b44:	bgt	b54 <mo_mkpasswd+0xc4>
     b48:	sub	r3, fp, #24
     b4c:	str	r3, [fp, #-12]
     b50:	b	b60 <mo_mkpasswd+0xd0>
     b54:	ldr	r3, [fp, #4]
     b58:	ldr	r3, [r3, #8]
     b5c:	str	r3, [fp, #-12]
     b60:	ldr	r3, [pc, #284]	; c84 <mo_mkpasswd+0x1f4>
     b64:	add	r3, pc, r3
     b68:	mov	r1, r3
     b6c:	ldr	r0, [fp, #-12]
     b70:	bl	67c <irccmp@plt>
     b74:	mov	r3, r0
     b78:	cmp	r3, #0
     b7c:	bne	b90 <mo_mkpasswd+0x100>
     b80:	mov	r0, #16
     b84:	bl	d78 <make_sha256_salt>
     b88:	str	r0, [fp, #-8]
     b8c:	b	c08 <mo_mkpasswd+0x178>
     b90:	ldr	r3, [pc, #240]	; c88 <mo_mkpasswd+0x1f8>
     b94:	add	r3, pc, r3
     b98:	mov	r1, r3
     b9c:	ldr	r0, [fp, #-12]
     ba0:	bl	67c <irccmp@plt>
     ba4:	mov	r3, r0
     ba8:	cmp	r3, #0
     bac:	bne	bc0 <mo_mkpasswd+0x130>
     bb0:	mov	r0, #16
     bb4:	bl	e54 <make_sha512_salt>
     bb8:	str	r0, [fp, #-8]
     bbc:	b	c08 <mo_mkpasswd+0x178>
     bc0:	ldr	r3, [pc, #196]	; c8c <mo_mkpasswd+0x1fc>
     bc4:	add	r3, pc, r3
     bc8:	mov	r1, r3
     bcc:	ldr	r0, [fp, #-12]
     bd0:	bl	67c <irccmp@plt>
     bd4:	mov	r3, r0
     bd8:	cmp	r3, #0
     bdc:	bne	bf0 <mo_mkpasswd+0x160>
     be0:	mov	r0, #8
     be4:	bl	c9c <make_md5_salt>
     be8:	str	r0, [fp, #-8]
     bec:	b	c08 <mo_mkpasswd+0x178>
     bf0:	ldr	r3, [pc, #152]	; c90 <mo_mkpasswd+0x200>
     bf4:	add	r3, pc, r3
     bf8:	mov	r1, r3
     bfc:	ldr	r0, [fp, #-40]	; 0xffffffd8
     c00:	bl	664 <sendto_one_notice@plt>
     c04:	b	c68 <mo_mkpasswd+0x1d8>
     c08:	ldr	r3, [fp, #4]
     c0c:	add	r3, r3, #4
     c10:	ldr	r3, [r3]
     c14:	ldr	r1, [fp, #-8]
     c18:	mov	r0, r3
     c1c:	bl	610 <rb_crypt@plt>
     c20:	str	r0, [fp, #-16]
     c24:	ldr	r3, [fp, #4]
     c28:	add	r3, r3, #4
     c2c:	ldr	r2, [r3]
     c30:	ldr	r3, [fp, #-16]
     c34:	cmp	r3, #0
     c38:	beq	c44 <mo_mkpasswd+0x1b4>
     c3c:	ldr	r3, [fp, #-16]
     c40:	b	c4c <mo_mkpasswd+0x1bc>
     c44:	ldr	r3, [pc, #72]	; c94 <mo_mkpasswd+0x204>
     c48:	add	r3, pc, r3
     c4c:	str	r3, [sp]
     c50:	mov	r3, r2
     c54:	ldr	r2, [fp, #-12]
     c58:	ldr	r1, [pc, #56]	; c98 <mo_mkpasswd+0x208>
     c5c:	add	r1, pc, r1
     c60:	ldr	r0, [fp, #-40]	; 0xffffffd8
     c64:	bl	664 <sendto_one_notice@plt>
     c68:	sub	sp, fp, #4
     c6c:	pop	{fp, pc}
     c70:	.word	0x00011548
     c74:	.word	0x000006ec
     c78:	.word	0x000005e8
     c7c:	.word	0x0000005c
     c80:	.word	0x000005dc
     c84:	.word	0x00000638
     c88:	.word	0x00000610
     c8c:	.word	0x000005e8
     c90:	.word	0x000005bc
     c94:	.word	0x000005a4
     c98:	.word	0x00000594

00000c9c <make_md5_salt>:
     c9c:	push	{fp, lr}
     ca0:	add	fp, sp, #4
     ca4:	sub	sp, sp, #8
     ca8:	str	r0, [fp, #-8]
     cac:	ldr	r3, [fp, #-8]
     cb0:	cmp	r3, #16
     cb4:	ble	cd0 <make_md5_salt+0x34>
     cb8:	ldr	r3, [pc, #152]	; d58 <make_md5_salt+0xbc>
     cbc:	add	r3, pc, r3
     cc0:	mov	r0, r3
     cc4:	bl	61c <puts@plt>
     cc8:	mov	r0, #0
     ccc:	bl	640 <exit@plt>
     cd0:	ldr	r3, [pc, #132]	; d5c <make_md5_salt+0xc0>
     cd4:	add	r3, pc, r3
     cd8:	mov	r2, #36	; 0x24
     cdc:	strb	r2, [r3]
     ce0:	ldr	r3, [pc, #120]	; d60 <make_md5_salt+0xc4>
     ce4:	add	r3, pc, r3
     ce8:	mov	r2, #49	; 0x31
     cec:	strb	r2, [r3, #1]
     cf0:	ldr	r3, [pc, #108]	; d64 <make_md5_salt+0xc8>
     cf4:	add	r3, pc, r3
     cf8:	mov	r2, #36	; 0x24
     cfc:	strb	r2, [r3, #2]
     d00:	ldr	r1, [fp, #-8]
     d04:	ldr	r3, [pc, #92]	; d68 <make_md5_salt+0xcc>
     d08:	add	r3, pc, r3
     d0c:	add	r0, r3, #3
     d10:	bl	fd0 <generate_random_salt>
     d14:	ldr	r3, [fp, #-8]
     d18:	add	r3, r3, #3
     d1c:	ldr	r2, [pc, #72]	; d6c <make_md5_salt+0xd0>
     d20:	add	r2, pc, r2
     d24:	mov	r1, #36	; 0x24
     d28:	strb	r1, [r2, r3]
     d2c:	ldr	r3, [fp, #-8]
     d30:	add	r3, r3, #4
     d34:	ldr	r2, [pc, #52]	; d70 <make_md5_salt+0xd4>
     d38:	add	r2, pc, r2
     d3c:	mov	r1, #0
     d40:	strb	r1, [r2, r3]
     d44:	ldr	r3, [pc, #40]	; d74 <make_md5_salt+0xd8>
     d48:	add	r3, pc, r3
     d4c:	mov	r0, r3
     d50:	sub	sp, fp, #4
     d54:	pop	{fp, pc}
     d58:	.word	0x0000054c
     d5c:	.word	0x0001144c
     d60:	.word	0x0001143c
     d64:	.word	0x0001142c
     d68:	.word	0x00011418
     d6c:	.word	0x00011400
     d70:	.word	0x000113e8
     d74:	.word	0x000113d8

00000d78 <make_sha256_salt>:
     d78:	push	{fp, lr}
     d7c:	add	fp, sp, #4
     d80:	sub	sp, sp, #8
     d84:	str	r0, [fp, #-8]
     d88:	ldr	r3, [fp, #-8]
     d8c:	cmp	r3, #16
     d90:	ble	dac <make_sha256_salt+0x34>
     d94:	ldr	r3, [pc, #152]	; e34 <make_sha256_salt+0xbc>
     d98:	add	r3, pc, r3
     d9c:	mov	r0, r3
     da0:	bl	61c <puts@plt>
     da4:	mov	r0, #0
     da8:	bl	640 <exit@plt>
     dac:	ldr	r3, [pc, #132]	; e38 <make_sha256_salt+0xc0>
     db0:	add	r3, pc, r3
     db4:	mov	r2, #36	; 0x24
     db8:	strb	r2, [r3]
     dbc:	ldr	r3, [pc, #120]	; e3c <make_sha256_salt+0xc4>
     dc0:	add	r3, pc, r3
     dc4:	mov	r2, #53	; 0x35
     dc8:	strb	r2, [r3, #1]
     dcc:	ldr	r3, [pc, #108]	; e40 <make_sha256_salt+0xc8>
     dd0:	add	r3, pc, r3
     dd4:	mov	r2, #36	; 0x24
     dd8:	strb	r2, [r3, #2]
     ddc:	ldr	r1, [fp, #-8]
     de0:	ldr	r3, [pc, #92]	; e44 <make_sha256_salt+0xcc>
     de4:	add	r3, pc, r3
     de8:	add	r0, r3, #3
     dec:	bl	fd0 <generate_random_salt>
     df0:	ldr	r3, [fp, #-8]
     df4:	add	r3, r3, #3
     df8:	ldr	r2, [pc, #72]	; e48 <make_sha256_salt+0xd0>
     dfc:	add	r2, pc, r2
     e00:	mov	r1, #36	; 0x24
     e04:	strb	r1, [r2, r3]
     e08:	ldr	r3, [fp, #-8]
     e0c:	add	r3, r3, #4
     e10:	ldr	r2, [pc, #52]	; e4c <make_sha256_salt+0xd4>
     e14:	add	r2, pc, r2
     e18:	mov	r1, #0
     e1c:	strb	r1, [r2, r3]
     e20:	ldr	r3, [pc, #40]	; e50 <make_sha256_salt+0xd8>
     e24:	add	r3, pc, r3
     e28:	mov	r0, r3
     e2c:	sub	sp, fp, #4
     e30:	pop	{fp, pc}
     e34:	.word	0x0000048c
     e38:	.word	0x00011388
     e3c:	.word	0x00011378
     e40:	.word	0x00011368
     e44:	.word	0x00011354
     e48:	.word	0x0001133c
     e4c:	.word	0x00011324
     e50:	.word	0x00011314

00000e54 <make_sha512_salt>:
     e54:	push	{fp, lr}
     e58:	add	fp, sp, #4
     e5c:	sub	sp, sp, #8
     e60:	str	r0, [fp, #-8]
     e64:	ldr	r3, [fp, #-8]
     e68:	cmp	r3, #16
     e6c:	ble	e88 <make_sha512_salt+0x34>
     e70:	ldr	r3, [pc, #152]	; f10 <make_sha512_salt+0xbc>
     e74:	add	r3, pc, r3
     e78:	mov	r0, r3
     e7c:	bl	61c <puts@plt>
     e80:	mov	r0, #0
     e84:	bl	640 <exit@plt>
     e88:	ldr	r3, [pc, #132]	; f14 <make_sha512_salt+0xc0>
     e8c:	add	r3, pc, r3
     e90:	mov	r2, #36	; 0x24
     e94:	strb	r2, [r3]
     e98:	ldr	r3, [pc, #120]	; f18 <make_sha512_salt+0xc4>
     e9c:	add	r3, pc, r3
     ea0:	mov	r2, #54	; 0x36
     ea4:	strb	r2, [r3, #1]
     ea8:	ldr	r3, [pc, #108]	; f1c <make_sha512_salt+0xc8>
     eac:	add	r3, pc, r3
     eb0:	mov	r2, #36	; 0x24
     eb4:	strb	r2, [r3, #2]
     eb8:	ldr	r1, [fp, #-8]
     ebc:	ldr	r3, [pc, #92]	; f20 <make_sha512_salt+0xcc>
     ec0:	add	r3, pc, r3
     ec4:	add	r0, r3, #3
     ec8:	bl	fd0 <generate_random_salt>
     ecc:	ldr	r3, [fp, #-8]
     ed0:	add	r3, r3, #3
     ed4:	ldr	r2, [pc, #72]	; f24 <make_sha512_salt+0xd0>
     ed8:	add	r2, pc, r2
     edc:	mov	r1, #36	; 0x24
     ee0:	strb	r1, [r2, r3]
     ee4:	ldr	r3, [fp, #-8]
     ee8:	add	r3, r3, #4
     eec:	ldr	r2, [pc, #52]	; f28 <make_sha512_salt+0xd4>
     ef0:	add	r2, pc, r2
     ef4:	mov	r1, #0
     ef8:	strb	r1, [r2, r3]
     efc:	ldr	r3, [pc, #40]	; f2c <make_sha512_salt+0xd8>
     f00:	add	r3, pc, r3
     f04:	mov	r0, r3
     f08:	sub	sp, fp, #4
     f0c:	pop	{fp, pc}
     f10:	.word	0x000003cc
     f14:	.word	0x000112c4
     f18:	.word	0x000112b4
     f1c:	.word	0x000112a4
     f20:	.word	0x00011290
     f24:	.word	0x00011278
     f28:	.word	0x00011260
     f2c:	.word	0x00011250

00000f30 <generate_poor_salt>:
     f30:	push	{r4, fp, lr}
     f34:	add	fp, sp, #8
     f38:	sub	sp, sp, #20
     f3c:	str	r0, [fp, #-24]	; 0xffffffe8
     f40:	str	r1, [fp, #-28]	; 0xffffffe4
     f44:	mov	r0, #0
     f48:	bl	604 <time@plt>
     f4c:	mov	r3, r0
     f50:	mov	r0, r3
     f54:	bl	64c <srand@plt>
     f58:	mov	r3, #0
     f5c:	str	r3, [fp, #-16]
     f60:	b	fac <generate_poor_salt+0x7c>
     f64:	ldr	r3, [fp, #-16]
     f68:	ldr	r2, [fp, #-24]	; 0xffffffe8
     f6c:	add	r4, r2, r3
     f70:	bl	658 <rand@plt>
     f74:	mov	r2, r0
     f78:	asr	r3, r2, #31
     f7c:	lsr	r3, r3, #26
     f80:	add	r2, r2, r3
     f84:	and	r2, r2, #63	; 0x3f
     f88:	sub	r3, r2, r3
     f8c:	mov	r2, r3
     f90:	ldr	r3, [pc, #52]	; fcc <generate_poor_salt+0x9c>
     f94:	add	r3, pc, r3
     f98:	ldrb	r3, [r3, r2]
     f9c:	strb	r3, [r4]
     fa0:	ldr	r3, [fp, #-16]
     fa4:	add	r3, r3, #1
     fa8:	str	r3, [fp, #-16]
     fac:	ldr	r2, [fp, #-16]
     fb0:	ldr	r3, [fp, #-28]	; 0xffffffe4
     fb4:	cmp	r2, r3
     fb8:	blt	f64 <generate_poor_salt+0x34>
     fbc:	ldr	r3, [fp, #-24]	; 0xffffffe8
     fc0:	mov	r0, r3
     fc4:	sub	sp, fp, #8
     fc8:	pop	{r4, fp, pc}
     fcc:	.word	0x000110cc

00000fd0 <generate_random_salt>:
     fd0:	push	{fp, lr}
     fd4:	add	fp, sp, #4
     fd8:	sub	sp, sp, #16
     fdc:	str	r0, [fp, #-16]
     fe0:	str	r1, [fp, #-20]	; 0xffffffec
     fe4:	mov	r1, #0
     fe8:	ldr	r3, [pc, #220]	; 10cc <generate_random_salt+0xfc>
     fec:	add	r3, pc, r3
     ff0:	mov	r0, r3
     ff4:	bl	634 <open@plt>
     ff8:	str	r0, [fp, #-12]
     ffc:	ldr	r3, [fp, #-12]
    1000:	cmp	r3, #0
    1004:	bge	101c <generate_random_salt+0x4c>
    1008:	ldr	r1, [fp, #-20]	; 0xffffffec
    100c:	ldr	r0, [fp, #-16]
    1010:	bl	f30 <generate_poor_salt>
    1014:	mov	r3, r0
    1018:	b	10c0 <generate_random_salt+0xf0>
    101c:	ldr	r3, [fp, #-20]	; 0xffffffec
    1020:	mov	r2, r3
    1024:	ldr	r1, [fp, #-16]
    1028:	ldr	r0, [fp, #-12]
    102c:	bl	5f8 <read@plt>
    1030:	mov	r2, r0
    1034:	ldr	r3, [fp, #-20]	; 0xffffffec
    1038:	cmp	r2, r3
    103c:	beq	105c <generate_random_salt+0x8c>
    1040:	ldr	r0, [fp, #-12]
    1044:	bl	670 <close@plt>
    1048:	ldr	r1, [fp, #-20]	; 0xffffffec
    104c:	ldr	r0, [fp, #-16]
    1050:	bl	f30 <generate_poor_salt>
    1054:	mov	r3, r0
    1058:	b	10c0 <generate_random_salt+0xf0>
    105c:	mov	r3, #0
    1060:	str	r3, [fp, #-8]
    1064:	b	10a4 <generate_random_salt+0xd4>
    1068:	ldr	r3, [fp, #-8]
    106c:	ldr	r2, [fp, #-16]
    1070:	add	r3, r2, r3
    1074:	ldr	r2, [fp, #-8]
    1078:	ldr	r1, [fp, #-16]
    107c:	add	r2, r1, r2
    1080:	ldrb	r2, [r2]
    1084:	and	r2, r2, #63	; 0x3f
    1088:	ldr	r1, [pc, #64]	; 10d0 <generate_random_salt+0x100>
    108c:	add	r1, pc, r1
    1090:	ldrb	r2, [r1, r2]
    1094:	strb	r2, [r3]
    1098:	ldr	r3, [fp, #-8]
    109c:	add	r3, r3, #1
    10a0:	str	r3, [fp, #-8]
    10a4:	ldr	r2, [fp, #-8]
    10a8:	ldr	r3, [fp, #-20]	; 0xffffffec
    10ac:	cmp	r2, r3
    10b0:	blt	1068 <generate_random_salt+0x98>
    10b4:	ldr	r0, [fp, #-12]
    10b8:	bl	670 <close@plt>
    10bc:	ldr	r3, [fp, #-16]
    10c0:	mov	r0, r3
    10c4:	sub	sp, fp, #4
    10c8:	pop	{fp, pc}
    10cc:	.word	0x00000270
    10d0:	.word	0x00010fd4

Disassembly of section .fini:

000010d4 <_fini>:
    10d4:	push	{r3, lr}
    10d8:	pop	{r3, pc}
