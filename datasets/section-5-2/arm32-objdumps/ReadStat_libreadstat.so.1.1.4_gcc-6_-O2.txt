
../repos/ReadStat/.libs/libreadstat.so.1.1.4:     file format elf32-littlearm


Disassembly of section .init:

00003d2c <_init>:
    3d2c:	push	{r3, lr}
    3d30:	bl	6078 <call_weak_fn>
    3d34:	pop	{r3, pc}

Disassembly of section .plt:

00003d38 <.plt>:
    3d38:	push	{lr}		; (str lr, [sp, #-4]!)
    3d3c:	ldr	lr, [pc, #4]	; 3d48 <.plt+0x10>
    3d40:	add	lr, pc, lr
    3d44:	ldr	pc, [lr, #8]!
    3d48:	.word	0x000402b8

00003d4c <sas_validate_name@plt>:
    3d4c:	add	ip, pc, #0, 12
    3d50:	add	ip, ip, #64, 20	; 0x40000
    3d54:	ldr	pc, [ip, #696]!	; 0x2b8

00003d58 <calloc@plt>:
    3d58:	add	ip, pc, #0, 12
    3d5c:	add	ip, ip, #64, 20	; 0x40000
    3d60:	ldr	pc, [ip, #688]!	; 0x2b0

00003d64 <readstat_set_seek_handler@plt>:
    3d64:	add	ip, pc, #0, 12
    3d68:	add	ip, ip, #64, 20	; 0x40000
    3d6c:	ldr	pc, [ip, #680]!	; 0x2a8

00003d70 <readstat_set_open_handler@plt>:
    3d70:	add	ip, pc, #0, 12
    3d74:	add	ip, ip, #64, 20	; 0x40000
    3d78:	ldr	pc, [ip, #672]!	; 0x2a0

00003d7c <byteswap8@plt>:
    3d7c:	add	ip, pc, #0, 12
    3d80:	add	ip, ip, #64, 20	; 0x40000
    3d84:	ldr	pc, [ip, #664]!	; 0x298

00003d88 <raise@plt>:
    3d88:	add	ip, pc, #0, 12
    3d8c:	add	ip, ip, #64, 20	; 0x40000
    3d90:	ldr	pc, [ip, #656]!	; 0x290

00003d94 <byteswap4@plt>:
    3d94:	add	ip, pc, #0, 12
    3d98:	add	ip, ip, #64, 20	; 0x40000
    3d9c:	ldr	pc, [ip, #648]!	; 0x288

00003da0 <readstat_validate_metadata@plt>:
    3da0:	add	ip, pc, #0, 12
    3da4:	add	ip, ip, #64, 20	; 0x40000
    3da8:	ldr	pc, [ip, #640]!	; 0x280

00003dac <readstat_sort_label_set@plt>:
    3dac:	add	ip, pc, #0, 12
    3db0:	add	ip, ip, #64, 20	; 0x40000
    3db4:	ldr	pc, [ip, #632]!	; 0x278

00003db8 <por_ctx_free@plt>:
    3db8:	add	ip, pc, #0, 12
    3dbc:	add	ip, ip, #64, 20	; 0x40000
    3dc0:	ldr	pc, [ip, #624]!	; 0x270

00003dc4 <memreverse@plt>:
    3dc4:	add	ip, pc, #0, 12
    3dc8:	add	ip, ip, #64, 20	; 0x40000
    3dcc:	ldr	pc, [ip, #616]!	; 0x268

00003dd0 <iconv_close@plt>:
    3dd0:	add	ip, pc, #0, 12
    3dd4:	add	ip, ip, #64, 20	; 0x40000
    3dd8:	ldr	pc, [ip, #608]!	; 0x260

00003ddc <readstat_write_spaces@plt>:
    3ddc:	add	ip, pc, #0, 12
    3de0:	add	ip, ip, #64, 20	; 0x40000
    3de4:	ldr	pc, [ip, #600]!	; 0x258

00003de8 <iconv@plt>:
    3de8:	add	ip, pc, #0, 12
    3dec:	add	ip, ip, #64, 20	; 0x40000
    3df0:	ldr	pc, [ip, #592]!	; 0x250

00003df4 <sav_parse_timestamp@plt>:
    3df4:	add	ip, pc, #0, 12
    3df8:	add	ip, ip, #64, 20	; 0x40000
    3dfc:	ldr	pc, [ip, #584]!	; 0x248

00003e00 <strcmp@plt>:
    3e00:	add	ip, pc, #0, 12
    3e04:	add	ip, ip, #64, 20	; 0x40000
    3e08:	ldr	pc, [ip, #576]!	; 0x240

00003e0c <__cxa_finalize@plt>:
    3e0c:	add	ip, pc, #0, 12
    3e10:	add	ip, ip, #64, 20	; 0x40000
    3e14:	ldr	pc, [ip, #568]!	; 0x238

00003e18 <ck_hash_table_wipe@plt>:
    3e18:	add	ip, pc, #0, 12
    3e1c:	add	ip, ip, #64, 20	; 0x40000
    3e20:	ldr	pc, [ip, #560]!	; 0x230

00003e24 <readstat_type_class@plt>:
    3e24:	add	ip, pc, #0, 12
    3e28:	add	ip, ip, #64, 20	; 0x40000
    3e2c:	ldr	pc, [ip, #552]!	; 0x228

00003e30 <strtol@plt>:
    3e30:	add	ip, pc, #0, 12
    3e34:	add	ip, ip, #64, 20	; 0x40000
    3e38:	ldr	pc, [ip, #544]!	; 0x220

00003e3c <read@plt>:
    3e3c:	add	ip, pc, #0, 12
    3e40:	add	ip, ip, #64, 20	; 0x40000
    3e44:	ldr	pc, [ip, #536]!	; 0x218

00003e48 <readstat_error_message@plt>:
    3e48:	add	ip, pc, #0, 12
    3e4c:	add	ip, ip, #64, 20	; 0x40000
    3e50:	ldr	pc, [ip, #528]!	; 0x210

00003e54 <mktime@plt>:
    3e54:	add	ip, pc, #0, 12
    3e58:	add	ip, ip, #64, 20	; 0x40000
    3e5c:	ldr	pc, [ip, #520]!	; 0x208

00003e60 <spss_alignment_from_readstat_alignment@plt>:
    3e60:	add	ip, pc, #0, 12
    3e64:	add	ip, ip, #64, 20	; 0x40000
    3e68:	ldr	pc, [ip, #512]!	; 0x200

00003e6c <readstat_copy@plt>:
    3e6c:	add	ip, pc, #0, 12
    3e70:	add	ip, ip, #64, 20	; 0x40000
    3e74:	ldr	pc, [ip, #504]!	; 0x1f8

00003e78 <dta_ctx_free@plt>:
    3e78:	add	ip, pc, #0, 12
    3e7c:	add	ip, ip, #64, 20	; 0x40000
    3e80:	ldr	pc, [ip, #496]!	; 0x1f0

00003e84 <deflateBound@plt>:
    3e84:	add	ip, pc, #0, 12
    3e88:	add	ip, ip, #64, 20	; 0x40000
    3e8c:	ldr	pc, [ip, #488]!	; 0x1e8

00003e90 <readstat_set_update_handler@plt>:
    3e90:	add	ip, pc, #0, 12
    3e94:	add	ip, ip, #64, 20	; 0x40000
    3e98:	ldr	pc, [ip, #480]!	; 0x1e0

00003e9c <memmove@plt>:
    3e9c:	add	ip, pc, #0, 12
    3ea0:	add	ip, ip, #64, 20	; 0x40000
    3ea4:	ldr	pc, [ip, #472]!	; 0x1d8

00003ea8 <byteswap2@plt>:
    3ea8:	add	ip, pc, #0, 12
    3eac:	add	ip, ip, #64, 20	; 0x40000
    3eb0:	ldr	pc, [ip, #464]!	; 0x1d0

00003eb4 <machine_is_little_endian@plt>:
    3eb4:	add	ip, pc, #0, 12
    3eb8:	add	ip, ip, #64, 20	; 0x40000
    3ebc:	ldr	pc, [ip, #456]!	; 0x1c8

00003ec0 <free@plt>:
    3ec0:	add	ip, pc, #0, 12
    3ec4:	add	ip, ip, #64, 20	; 0x40000
    3ec8:	ldr	pc, [ip, #448]!	; 0x1c0

00003ecc <readstat_value_is_system_missing@plt>:
    3ecc:	add	ip, pc, #0, 12
    3ed0:	add	ip, ip, #64, 20	; 0x40000
    3ed4:	ldr	pc, [ip, #440]!	; 0x1b8

00003ed8 <sav_parse_time@plt>:
    3ed8:	add	ip, pc, #0, 12
    3edc:	add	ip, ip, #64, 20	; 0x40000
    3ee0:	ldr	pc, [ip, #432]!	; 0x1b0

00003ee4 <readstat_variable_get_format@plt>:
    3ee4:	add	ip, pc, #0, 12
    3ee8:	add	ip, ip, #64, 20	; 0x40000
    3eec:	ldr	pc, [ip, #424]!	; 0x1a8

00003ef0 <readstat_value_is_defined_missing@plt>:
    3ef0:	add	ip, pc, #0, 12
    3ef4:	add	ip, ip, #64, 20	; 0x40000
    3ef8:	ldr	pc, [ip, #416]!	; 0x1a0

00003efc <ones_to_twos_complement4@plt>:
    3efc:	add	ip, pc, #0, 12
    3f00:	add	ip, ip, #64, 20	; 0x40000
    3f04:	ldr	pc, [ip, #408]!	; 0x198

00003f08 <ones_to_twos_complement2@plt>:
    3f08:	add	ip, pc, #0, 12
    3f0c:	add	ip, ip, #64, 20	; 0x40000
    3f10:	ldr	pc, [ip, #400]!	; 0x190

00003f14 <sav_ctx_free@plt>:
    3f14:	add	ip, pc, #0, 12
    3f18:	add	ip, ip, #64, 20	; 0x40000
    3f1c:	ldr	pc, [ip, #392]!	; 0x188

00003f20 <memcpy@plt>:
    3f20:	add	ip, pc, #0, 12
    3f24:	add	ip, ip, #64, 20	; 0x40000
    3f28:	ldr	pc, [ip, #384]!	; 0x180

00003f2c <spss_parse_format@plt>:
    3f2c:	add	ip, pc, #0, 12
    3f30:	add	ip, ip, #64, 20	; 0x40000
    3f34:	ldr	pc, [ip, #376]!	; 0x178

00003f38 <submit_columns@plt>:
    3f38:	add	ip, pc, #0, 12
    3f3c:	add	ip, ip, #64, 20	; 0x40000
    3f40:	ldr	pc, [ip, #368]!	; 0x170

00003f44 <readstat_variable_get_missing_range_lo@plt>:
    3f44:	add	ip, pc, #0, 12
    3f48:	add	ip, ip, #64, 20	; 0x40000
    3f4c:	ldr	pc, [ip, #360]!	; 0x168

00003f50 <readstat_insert_string_ref@plt>:
    3f50:	add	ip, pc, #0, 12
    3f54:	add	ip, ip, #64, 20	; 0x40000
    3f58:	ldr	pc, [ip, #352]!	; 0x160

00003f5c <time@plt>:
    3f5c:	add	ip, pc, #0, 12
    3f60:	add	ip, ip, #64, 20	; 0x40000
    3f64:	ldr	pc, [ip, #344]!	; 0x158

00003f68 <readstat_begin_writing_file@plt>:
    3f68:	add	ip, pc, #0, 12
    3f6c:	add	ip, ip, #64, 20	; 0x40000
    3f70:	ldr	pc, [ip, #336]!	; 0x150

00003f74 <lseek@plt>:
    3f74:	add	ip, pc, #0, 12
    3f78:	add	ip, ip, #64, 20	; 0x40000
    3f7c:	ldr	pc, [ip, #328]!	; 0x148

00003f80 <unistd_io_init@plt>:
    3f80:	add	ip, pc, #0, 12
    3f84:	add	ip, ip, #64, 20	; 0x40000
    3f88:	ldr	pc, [ip, #320]!	; 0x140

00003f8c <pow@plt>:
    3f8c:	add	ip, pc, #0, 12
    3f90:	add	ip, ip, #64, 20	; 0x40000
    3f94:	ldr	pc, [ip, #312]!	; 0x138

00003f98 <uncompress@plt>:
    3f98:	add	ip, pc, #0, 12
    3f9c:	add	ip, ip, #64, 20	; 0x40000
    3fa0:	ldr	pc, [ip, #304]!	; 0x130

00003fa4 <memcmp@plt>:
    3fa4:	add	ip, pc, #0, 12
    3fa8:	add	ip, ip, #64, 20	; 0x40000
    3fac:	ldr	pc, [ip, #296]!	; 0x128

00003fb0 <readstat_string_value@plt>:
    3fb0:	add	ip, pc, #0, 12
    3fb4:	add	ip, ip, #64, 20	; 0x40000
    3fb8:	ldr	pc, [ip, #288]!	; 0x120

00003fbc <readstat_schema_free@plt>:
    3fbc:	add	ip, pc, #0, 12
    3fc0:	add	ip, ip, #64, 20	; 0x40000
    3fc4:	ldr	pc, [ip, #280]!	; 0x118

00003fc8 <readstat_calloc@plt>:
    3fc8:	add	ip, pc, #0, 12
    3fcc:	add	ip, ip, #64, 20	; 0x40000
    3fd0:	ldr	pc, [ip, #272]!	; 0x110

00003fd4 <ck_str_hash_lookup@plt>:
    3fd4:	add	ip, pc, #0, 12
    3fd8:	add	ip, ip, #64, 20	; 0x40000
    3fdc:	ldr	pc, [ip, #264]!	; 0x108

00003fe0 <sav_compressed_row_bound@plt>:
    3fe0:	add	ip, pc, #0, 12
    3fe4:	add	ip, ip, #64, 20	; 0x40000
    3fe8:	ldr	pc, [ip, #256]!	; 0x100

00003fec <ck_hash_table_grow@plt>:
    3fec:	add	ip, pc, #0, 12
    3ff0:	add	ip, ip, #64, 20	; 0x40000
    3ff4:	ldr	pc, [ip, #248]!	; 0xf8

00003ff8 <realloc@plt>:
    3ff8:	add	ip, pc, #0, 12
    3ffc:	add	ip, ip, #64, 20	; 0x40000
    4000:	ldr	pc, [ip, #240]!	; 0xf0

00004004 <cnxptiee@plt>:
    4004:	add	ip, pc, #0, 12
    4008:	add	ip, ip, #64, 20	; 0x40000
    400c:	ldr	pc, [ip, #232]!	; 0xe8

00004010 <read_version_and_timestamp@plt>:
    4010:	add	ip, pc, #0, 12
    4014:	add	ip, ip, #64, 20	; 0x40000
    4018:	ldr	pc, [ip, #224]!	; 0xe0

0000401c <readstat_write_zeros@plt>:
    401c:	add	ip, pc, #0, 12
    4020:	add	ip, ip, #64, 20	; 0x40000
    4024:	ldr	pc, [ip, #216]!	; 0xd8

00004028 <strcasecmp@plt>:
    4028:	add	ip, pc, #0, 12
    402c:	add	ip, ip, #64, 20	; 0x40000
    4030:	ldr	pc, [ip, #208]!	; 0xd0

00004034 <readstat_copy_quoted@plt>:
    4034:	add	ip, pc, #0, 12
    4038:	add	ip, ip, #64, 20	; 0x40000
    403c:	ldr	pc, [ip, #200]!	; 0xc8

00004040 <deflate@plt>:
    4040:	add	ip, pc, #0, 12
    4044:	add	ip, ip, #64, 20	; 0x40000
    4048:	ldr	pc, [ip, #192]!	; 0xc0

0000404c <submit_value_label@plt>:
    404c:	add	ip, pc, #0, 12
    4050:	add	ip, ip, #64, 20	; 0x40000
    4054:	ldr	pc, [ip, #184]!	; 0xb8

00004058 <sav_ctx_init@plt>:
    4058:	add	ip, pc, #0, 12
    405c:	add	ip, ip, #64, 20	; 0x40000
    4060:	ldr	pc, [ip, #176]!	; 0xb0

00004064 <ck_str_n_hash_lookup@plt>:
    4064:	add	ip, pc, #0, 12
    4068:	add	ip, ip, #64, 20	; 0x40000
    406c:	ldr	pc, [ip, #168]!	; 0xa8

00004070 <spss_measure_from_readstat_measure@plt>:
    4070:	add	ip, pc, #0, 12
    4074:	add	ip, ip, #64, 20	; 0x40000
    4078:	ldr	pc, [ip, #160]!	; 0xa0

0000407c <sas_rle_decompress@plt>:
    407c:	add	ip, pc, #0, 12
    4080:	add	ip, ip, #64, 20	; 0x40000
    4084:	ldr	pc, [ip, #152]!	; 0x98

00004088 <sav_parse_date@plt>:
    4088:	add	ip, pc, #0, 12
    408c:	add	ip, ip, #64, 20	; 0x40000
    4090:	ldr	pc, [ip, #144]!	; 0x90

00004094 <xport_namestr_bswap@plt>:
    4094:	add	ip, pc, #0, 12
    4098:	add	ip, ip, #64, 20	; 0x40000
    409c:	ldr	pc, [ip, #136]!	; 0x88

000040a0 <zsav_current_block@plt>:
    40a0:	add	ip, pc, #0, 12
    40a4:	add	ip, ip, #64, 20	; 0x40000
    40a8:	ldr	pc, [ip, #128]!	; 0x80

000040ac <zsav_ctx_init@plt>:
    40ac:	add	ip, pc, #0, 12
    40b0:	add	ip, ip, #64, 20	; 0x40000
    40b4:	ldr	pc, [ip, #120]!	; 0x78

000040b8 <sas_write_header@plt>:
    40b8:	add	ip, pc, #0, 12
    40bc:	add	ip, ip, #64, 20	; 0x40000
    40c0:	ldr	pc, [ip, #112]!	; 0x70

000040c4 <strtof@plt>:
    40c4:	add	ip, pc, #0, 12
    40c8:	add	ip, ip, #64, 20	; 0x40000
    40cc:	ldr	pc, [ip, #104]!	; 0x68

000040d0 <readstat_schema_find_or_create_entry@plt>:
    40d0:	add	ip, pc, #0, 12
    40d4:	add	ip, ip, #64, 20	; 0x40000
    40d8:	ldr	pc, [ip, #96]!	; 0x60

000040dc <readstat_value_type_class@plt>:
    40dc:	add	ip, pc, #0, 12
    40e0:	add	ip, ip, #64, 20	; 0x40000
    40e4:	ldr	pc, [ip, #88]!	; 0x58

000040e8 <readstat_set_io_ctx@plt>:
    40e8:	add	ip, pc, #0, 12
    40ec:	add	ip, ip, #64, 20	; 0x40000
    40f0:	ldr	pc, [ip, #80]!	; 0x50

000040f4 <spss_format_for_variable@plt>:
    40f4:	add	ip, pc, #0, 12
    40f8:	add	ip, ip, #64, 20	; 0x40000
    40fc:	ldr	pc, [ip, #72]!	; 0x48

00004100 <readstat_parser_free@plt>:
    4100:	add	ip, pc, #0, 12
    4104:	add	ip, ip, #64, 20	; 0x40000
    4108:	ldr	pc, [ip, #64]!	; 0x40

0000410c <malloc@plt>:
    410c:	add	ip, pc, #0, 12
    4110:	add	ip, ip, #64, 20	; 0x40000
    4114:	ldr	pc, [ip, #56]!	; 0x38

00004118 <zsav_add_block@plt>:
    4118:	add	ip, pc, #0, 12
    411c:	add	ip, ip, #64, 20	; 0x40000
    4120:	ldr	pc, [ip, #48]!	; 0x30

00004124 <deflateInit_@plt>:
    4124:	add	ip, pc, #0, 12
    4128:	add	ip, ip, #64, 20	; 0x40000
    412c:	ldr	pc, [ip, #40]!	; 0x28

00004130 <iconv_open@plt>:
    4130:	add	ip, pc, #0, 12
    4134:	add	ip, ip, #64, 20	; 0x40000
    4138:	ldr	pc, [ip, #32]!

0000413c <strerror@plt>:
    413c:	add	ip, pc, #0, 12
    4140:	add	ip, ip, #64, 20	; 0x40000
    4144:	ldr	pc, [ip, #24]!

00004148 <sas_validate_tag@plt>:
    4148:	add	ip, pc, #0, 12
    414c:	add	ip, ip, #64, 20	; 0x40000
    4150:	ldr	pc, [ip, #16]!

00004154 <readstat_write_string@plt>:
    4154:	add	ip, pc, #0, 12
    4158:	add	ip, ip, #64, 20	; 0x40000
    415c:	ldr	pc, [ip, #8]!

00004160 <localtime@plt>:
    4160:	add	ip, pc, #0, 12
    4164:	add	ip, ip, #64, 20	; 0x40000
    4168:	ldr	pc, [ip, #0]!

0000416c <__ctype_tolower_loc@plt>:
    416c:	add	ip, pc, #0, 12
    4170:	add	ip, ip, #258048	; 0x3f000
    4174:	ldr	pc, [ip, #4088]!	; 0xff8

00004178 <modf@plt>:
    4178:	add	ip, pc, #0, 12
    417c:	add	ip, ip, #258048	; 0x3f000
    4180:	ldr	pc, [ip, #4080]!	; 0xff0

00004184 <__ctype_toupper_loc@plt>:
    4184:	add	ip, pc, #0, 12
    4188:	add	ip, ip, #258048	; 0x3f000
    418c:	ldr	pc, [ip, #4072]!	; 0xfe8

00004190 <ck_hash_table_init@plt>:
    4190:	add	ip, pc, #0, 12
    4194:	add	ip, ip, #258048	; 0x3f000
    4198:	ldr	pc, [ip, #4064]!	; 0xfe0

0000419c <__gmon_start__@plt>:
    419c:	add	ip, pc, #0, 12
    41a0:	add	ip, ip, #258048	; 0x3f000
    41a4:	ldr	pc, [ip, #4056]!	; 0xfd8

000041a8 <open@plt>:
    41a8:	add	ip, pc, #0, 12
    41ac:	add	ip, ip, #258048	; 0x3f000
    41b0:	ldr	pc, [ip, #4048]!	; 0xfd0

000041b4 <readstat_double_value@plt>:
    41b4:	add	ip, pc, #0, 12
    41b8:	add	ip, ip, #258048	; 0x3f000
    41bc:	ldr	pc, [ip, #4040]!	; 0xfc8

000041c0 <get_native@plt>:
    41c0:	add	ip, pc, #0, 12
    41c4:	add	ip, ip, #258048	; 0x3f000
    41c8:	ldr	pc, [ip, #4032]!	; 0xfc0

000041cc <dta_ctx_init@plt>:
    41cc:	add	ip, pc, #0, 12
    41d0:	add	ip, ip, #258048	; 0x3f000
    41d4:	ldr	pc, [ip, #4024]!	; 0xfb8

000041d8 <readstat_variable_get_type@plt>:
    41d8:	add	ip, pc, #0, 12
    41dc:	add	ip, ip, #258048	; 0x3f000
    41e0:	ldr	pc, [ip, #4016]!	; 0xfb0

000041e4 <dta_type_info@plt>:
    41e4:	add	ip, pc, #0, 12
    41e8:	add	ip, ip, #258048	; 0x3f000
    41ec:	ldr	pc, [ip, #4008]!	; 0xfa8

000041f0 <sav_parse_long_variable_names_record@plt>:
    41f0:	add	ip, pc, #0, 12
    41f4:	add	ip, ip, #258048	; 0x3f000
    41f8:	ldr	pc, [ip, #4000]!	; 0xfa0

000041fc <strlen@plt>:
    41fc:	add	ip, pc, #0, 12
    4200:	add	ip, ip, #258048	; 0x3f000
    4204:	ldr	pc, [ip, #3992]!	; 0xf98

00004208 <spss_varinfo_compare@plt>:
    4208:	add	ip, pc, #0, 12
    420c:	add	ip, ip, #258048	; 0x3f000
    4210:	ldr	pc, [ip, #3984]!	; 0xf90

00004214 <sav_decompress_row@plt>:
    4214:	add	ip, pc, #0, 12
    4218:	add	ip, ip, #258048	; 0x3f000
    421c:	ldr	pc, [ip, #3976]!	; 0xf88

00004220 <readstat_variable_get_display_width@plt>:
    4220:	add	ip, pc, #0, 12
    4224:	add	ip, ip, #258048	; 0x3f000
    4228:	ldr	pc, [ip, #3968]!	; 0xf80

0000422c <readstat_malloc@plt>:
    422c:	add	ip, pc, #0, 12
    4230:	add	ip, ip, #258048	; 0x3f000
    4234:	ldr	pc, [ip, #3960]!	; 0xf78

00004238 <readstat_convert@plt>:
    4238:	add	ip, pc, #0, 12
    423c:	add	ip, ip, #258048	; 0x3f000
    4240:	ldr	pc, [ip, #3952]!	; 0xf70

00004244 <ck_hash_table_free@plt>:
    4244:	add	ip, pc, #0, 12
    4248:	add	ip, ip, #258048	; 0x3f000
    424c:	ldr	pc, [ip, #3944]!	; 0xf68

00004250 <readstat_por_parse_double@plt>:
    4250:	add	ip, pc, #0, 12
    4254:	add	ip, ip, #258048	; 0x3f000
    4258:	ldr	pc, [ip, #3936]!	; 0xf60

0000425c <por_utf8_encode@plt>:
    425c:	add	ip, pc, #0, 12
    4260:	add	ip, ip, #258048	; 0x3f000
    4264:	ldr	pc, [ip, #3928]!	; 0xf58

00004268 <__errno_location@plt>:
    4268:	add	ip, pc, #0, 12
    426c:	add	ip, ip, #258048	; 0x3f000
    4270:	ldr	pc, [ip, #3920]!	; 0xf50

00004274 <spss_init_variable_for_info@plt>:
    4274:	add	ip, pc, #0, 12
    4278:	add	ip, ip, #258048	; 0x3f000
    427c:	ldr	pc, [ip, #3912]!	; 0xf48

00004280 <snprintf@plt>:
    4280:	add	ip, pc, #0, 12
    4284:	add	ip, ip, #258048	; 0x3f000
    4288:	ldr	pc, [ip, #3904]!	; 0xf40

0000428c <__isoc99_sscanf@plt>:
    428c:	add	ip, pc, #0, 12
    4290:	add	ip, ip, #258048	; 0x3f000
    4294:	ldr	pc, [ip, #3896]!	; 0xf38

00004298 <ck_str_n_hash_insert@plt>:
    4298:	add	ip, pc, #0, 12
    429c:	add	ip, ip, #258048	; 0x3f000
    42a0:	ldr	pc, [ip, #3888]!	; 0xf30

000042a4 <memset@plt>:
    42a4:	add	ip, pc, #0, 12
    42a8:	add	ip, ip, #258048	; 0x3f000
    42ac:	ldr	pc, [ip, #3880]!	; 0xf28

000042b0 <spss_64bit_value@plt>:
    42b0:	add	ip, pc, #0, 12
    42b4:	add	ip, ip, #258048	; 0x3f000
    42b8:	ldr	pc, [ip, #3872]!	; 0xf20

000042bc <strncpy@plt>:
    42bc:	add	ip, pc, #0, 12
    42c0:	add	ip, ip, #258048	; 0x3f000
    42c4:	ldr	pc, [ip, #3864]!	; 0xf18

000042c8 <readstat_variable_get_storage_width@plt>:
    42c8:	add	ip, pc, #0, 12
    42cc:	add	ip, ip, #258048	; 0x3f000
    42d0:	ldr	pc, [ip, #3856]!	; 0xf10

000042d4 <sav_parse_very_long_string_record@plt>:
    42d4:	add	ip, pc, #0, 12
    42d8:	add	ip, ip, #258048	; 0x3f000
    42dc:	ldr	pc, [ip, #3848]!	; 0xf08

000042e0 <readstat_realloc@plt>:
    42e0:	add	ip, pc, #0, 12
    42e4:	add	ip, ip, #258048	; 0x3f000
    42e8:	ldr	pc, [ip, #3840]!	; 0xf00

000042ec <dta_parse_timestamp@plt>:
    42ec:	add	ip, pc, #0, 12
    42f0:	add	ip, ip, #258048	; 0x3f000
    42f4:	ldr	pc, [ip, #3832]!	; 0xef8

000042f8 <strtod@plt>:
    42f8:	add	ip, pc, #0, 12
    42fc:	add	ip, ip, #258048	; 0x3f000
    4300:	ldr	pc, [ip, #3824]!	; 0xef0

00004304 <readstat_variable_get_missing_ranges_count@plt>:
    4304:	add	ip, pc, #0, 12
    4308:	add	ip, ip, #258048	; 0x3f000
    430c:	ldr	pc, [ip, #3816]!	; 0xee8

00004310 <deflateEnd@plt>:
    4310:	add	ip, pc, #0, 12
    4314:	add	ip, ip, #258048	; 0x3f000
    4318:	ldr	pc, [ip, #3808]!	; 0xee0

0000431c <readstat_variable_get_measure@plt>:
    431c:	add	ip, pc, #0, 12
    4320:	add	ip, ip, #258048	; 0x3f000
    4324:	ldr	pc, [ip, #3800]!	; 0xed8

00004328 <readstat_variable_get_missing_range_hi@plt>:
    4328:	add	ip, pc, #0, 12
    432c:	add	ip, ip, #258048	; 0x3f000
    4330:	ldr	pc, [ip, #3792]!	; 0xed0

00004334 <readstat_set_read_handler@plt>:
    4334:	add	ip, pc, #0, 12
    4338:	add	ip, ip, #258048	; 0x3f000
    433c:	ldr	pc, [ip, #3784]!	; 0xec8

00004340 <readstat_value_type@plt>:
    4340:	add	ip, pc, #0, 12
    4344:	add	ip, ip, #258048	; 0x3f000
    4348:	ldr	pc, [ip, #3776]!	; 0xec0

0000434c <sas_header_info_init@plt>:
    434c:	add	ip, pc, #0, 12
    4350:	add	ip, ip, #258048	; 0x3f000
    4354:	ldr	pc, [ip, #3768]!	; 0xeb8

00004358 <readstat_string_ref_init@plt>:
    4358:	add	ip, pc, #0, 12
    435c:	add	ip, ip, #258048	; 0x3f000
    4360:	ldr	pc, [ip, #3760]!	; 0xeb0

00004364 <readstat_variable_get_name@plt>:
    4364:	add	ip, pc, #0, 12
    4368:	add	ip, ip, #258048	; 0x3f000
    436c:	ldr	pc, [ip, #3752]!	; 0xea8

00004370 <ones_to_twos_complement1@plt>:
    4370:	add	ip, pc, #0, 12
    4374:	add	ip, ip, #258048	; 0x3f000
    4378:	ldr	pc, [ip, #3744]!	; 0xea0

0000437c <readstat_get_variable@plt>:
    437c:	add	ip, pc, #0, 12
    4380:	add	ip, ip, #258048	; 0x3f000
    4384:	ldr	pc, [ip, #3736]!	; 0xe98

00004388 <spss_alignment_to_readstat_alignment@plt>:
    4388:	add	ip, pc, #0, 12
    438c:	add	ip, ip, #258048	; 0x3f000
    4390:	ldr	pc, [ip, #3728]!	; 0xe90

00004394 <por_utf8_decode@plt>:
    4394:	add	ip, pc, #0, 12
    4398:	add	ip, ip, #258048	; 0x3f000
    439c:	ldr	pc, [ip, #3720]!	; 0xe88

000043a0 <sas_read_header@plt>:
    43a0:	add	ip, pc, #0, 12
    43a4:	add	ip, ip, #258048	; 0x3f000
    43a8:	ldr	pc, [ip, #3712]!	; 0xe80

000043ac <spss_measure_to_readstat_measure@plt>:
    43ac:	add	ip, pc, #0, 12
    43b0:	add	ip, ip, #258048	; 0x3f000
    43b4:	ldr	pc, [ip, #3704]!	; 0xe78

000043b8 <sas_subheader_remainder@plt>:
    43b8:	add	ip, pc, #0, 12
    43bc:	add	ip, ip, #258048	; 0x3f000
    43c0:	ldr	pc, [ip, #3696]!	; 0xe70

000043c4 <sas_read8@plt>:
    43c4:	add	ip, pc, #0, 12
    43c8:	add	ip, ip, #258048	; 0x3f000
    43cc:	ldr	pc, [ip, #3688]!	; 0xe68

000043d0 <sas_read2@plt>:
    43d0:	add	ip, pc, #0, 12
    43d4:	add	ip, ip, #258048	; 0x3f000
    43d8:	ldr	pc, [ip, #3680]!	; 0xe60

000043dc <readstat_copy_lower@plt>:
    43dc:	add	ip, pc, #0, 12
    43e0:	add	ip, ip, #258048	; 0x3f000
    43e4:	ldr	pc, [ip, #3672]!	; 0xe58

000043e8 <sprintf@plt>:
    43e8:	add	ip, pc, #0, 12
    43ec:	add	ip, ip, #258048	; 0x3f000
    43f0:	ldr	pc, [ip, #3664]!	; 0xe50

000043f4 <sas_read4@plt>:
    43f4:	add	ip, pc, #0, 12
    43f8:	add	ip, ip, #258048	; 0x3f000
    43fc:	ldr	pc, [ip, #3656]!	; 0xe48

00004400 <readstat_variable_get_label@plt>:
    4400:	add	ip, pc, #0, 12
    4404:	add	ip, ip, #258048	; 0x3f000
    4408:	ldr	pc, [ip, #3648]!	; 0xe40

0000440c <spss_format@plt>:
    440c:	add	ip, pc, #0, 12
    4410:	add	ip, ip, #258048	; 0x3f000
    4414:	ldr	pc, [ip, #3640]!	; 0xe38

00004418 <spss_varinfo_free@plt>:
    4418:	add	ip, pc, #0, 12
    441c:	add	ip, ip, #258048	; 0x3f000
    4420:	ldr	pc, [ip, #3632]!	; 0xe30

00004424 <readstat_get_label_set@plt>:
    4424:	add	ip, pc, #0, 12
    4428:	add	ip, ip, #258048	; 0x3f000
    442c:	ldr	pc, [ip, #3624]!	; 0xe28

00004430 <readstat_variable_get_alignment@plt>:
    4430:	add	ip, pc, #0, 12
    4434:	add	ip, ip, #258048	; 0x3f000
    4438:	ldr	pc, [ip, #3616]!	; 0xe20

0000443c <qsort@plt>:
    443c:	add	ip, pc, #0, 12
    4440:	add	ip, ip, #258048	; 0x3f000
    4444:	ldr	pc, [ip, #3608]!	; 0xe18

00004448 <readstat_get_label_set_variable@plt>:
    4448:	add	ip, pc, #0, 12
    444c:	add	ip, ip, #258048	; 0x3f000
    4450:	ldr	pc, [ip, #3600]!	; 0xe10

00004454 <readstat_write_bytes@plt>:
    4454:	add	ip, pc, #0, 12
    4458:	add	ip, ip, #258048	; 0x3f000
    445c:	ldr	pc, [ip, #3592]!	; 0xe08

00004460 <sav_compress_row@plt>:
    4460:	add	ip, pc, #0, 12
    4464:	add	ip, ip, #258048	; 0x3f000
    4468:	ldr	pc, [ip, #3584]!	; 0xe00

0000446c <readstat_set_close_handler@plt>:
    446c:	add	ip, pc, #0, 12
    4470:	add	ip, ip, #258048	; 0x3f000
    4474:	ldr	pc, [ip, #3576]!	; 0xdf8

00004478 <sas_fill_page@plt>:
    4478:	add	ip, pc, #0, 12
    447c:	add	ip, ip, #258048	; 0x3f000
    4480:	ldr	pc, [ip, #3568]!	; 0xdf0

00004484 <sas_rle_compressed_len@plt>:
    4484:	add	ip, pc, #0, 12
    4488:	add	ip, ip, #258048	; 0x3f000
    448c:	ldr	pc, [ip, #3560]!	; 0xde8

00004490 <por_ctx_init@plt>:
    4490:	add	ip, pc, #0, 12
    4494:	add	ip, ip, #258048	; 0x3f000
    4498:	ldr	pc, [ip, #3552]!	; 0xde0

0000449c <readstat_validate_variable@plt>:
    449c:	add	ip, pc, #0, 12
    44a0:	add	ip, ip, #258048	; 0x3f000
    44a4:	ldr	pc, [ip, #3544]!	; 0xdd8

000044a8 <sas_assign_tag@plt>:
    44a8:	add	ip, pc, #0, 12
    44ac:	add	ip, ip, #258048	; 0x3f000
    44b0:	ldr	pc, [ip, #3536]!	; 0xdd0

000044b4 <zsav_compress_row@plt>:
    44b4:	add	ip, pc, #0, 12
    44b8:	add	ip, ip, #258048	; 0x3f000
    44bc:	ldr	pc, [ip, #3528]!	; 0xdc8

000044c0 <zsav_read_compressed_data@plt>:
    44c0:	add	ip, pc, #0, 12
    44c4:	add	ip, ip, #258048	; 0x3f000
    44c8:	ldr	pc, [ip, #3520]!	; 0xdc0

000044cc <readstat_get_value_label@plt>:
    44cc:	add	ip, pc, #0, 12
    44d0:	add	ip, ip, #258048	; 0x3f000
    44d4:	ldr	pc, [ip, #3512]!	; 0xdb8

000044d8 <sas_rle_compress@plt>:
    44d8:	add	ip, pc, #0, 12
    44dc:	add	ip, ip, #258048	; 0x3f000
    44e0:	ldr	pc, [ip, #3504]!	; 0xdb0

000044e4 <readstat_write_line_padding@plt>:
    44e4:	add	ip, pc, #0, 12
    44e8:	add	ip, ip, #258048	; 0x3f000
    44ec:	ldr	pc, [ip, #3496]!	; 0xda8

000044f0 <ck_str_hash_insert@plt>:
    44f0:	add	ip, pc, #0, 12
    44f4:	add	ip, ip, #258048	; 0x3f000
    44f8:	ldr	pc, [ip, #3488]!	; 0xda0

000044fc <strncmp@plt>:
    44fc:	add	ip, pc, #0, 12
    4500:	add	ip, ip, #258048	; 0x3f000
    4504:	ldr	pc, [ip, #3480]!	; 0xd98

00004508 <byteswap_double@plt>:
    4508:	add	ip, pc, #0, 12
    450c:	add	ip, ip, #258048	; 0x3f000
    4510:	ldr	pc, [ip, #3472]!	; 0xd90

00004514 <close@plt>:
    4514:	add	ip, pc, #0, 12
    4518:	add	ip, ip, #258048	; 0x3f000
    451c:	ldr	pc, [ip, #3464]!	; 0xd88

00004520 <readstat_write_bytes_as_lines@plt>:
    4520:	add	ip, pc, #0, 12
    4524:	add	ip, ip, #258048	; 0x3f000
    4528:	ldr	pc, [ip, #3456]!	; 0xd80

0000452c <spss_missingness_for_info@plt>:
    452c:	add	ip, pc, #0, 12
    4530:	add	ip, ip, #258048	; 0x3f000
    4534:	ldr	pc, [ip, #3448]!	; 0xd78

00004538 <handle_variables@plt>:
    4538:	add	ip, pc, #0, 12
    453c:	add	ip, ip, #258048	; 0x3f000
    4540:	ldr	pc, [ip, #3440]!	; 0xd70

00004544 <readstat_variable_get_type_class@plt>:
    4544:	add	ip, pc, #0, 12
    4548:	add	ip, ip, #258048	; 0x3f000
    454c:	ldr	pc, [ip, #3432]!	; 0xd68

00004550 <readstat_write_space_padded_string@plt>:
    4550:	add	ip, pc, #0, 12
    4554:	add	ip, ip, #258048	; 0x3f000
    4558:	ldr	pc, [ip, #3424]!	; 0xd60

0000455c <dta_ctx_alloc@plt>:
    455c:	add	ip, pc, #0, 12
    4560:	add	ip, ip, #258048	; 0x3f000
    4564:	ldr	pc, [ip, #3416]!	; 0xd58

Disassembly of section .text:

00004568 <sas7bdat_copy_text_ref>:
    4568:	push	{r4, r5, lr}
    456c:	sub	sp, sp, #12
    4570:	add	lr, sp, #8
    4574:	ldr	ip, [sp, #24]
    4578:	stmdb	lr, {r2, r3}
    457c:	ldrh	lr, [sp]
    4580:	ldr	r3, [ip, #152]	; 0x98
    4584:	cmp	lr, r3
    4588:	bge	45dc <sas7bdat_copy_text_ref+0x74>
    458c:	ldrh	r3, [sp, #4]
    4590:	cmp	r3, #0
    4594:	moveq	r2, r0
    4598:	moveq	r0, r3
    459c:	strbeq	r3, [r2]
    45a0:	beq	45e0 <sas7bdat_copy_text_ref+0x78>
    45a4:	ldr	r4, [ip, #156]	; 0x9c
    45a8:	ldrh	r2, [sp, #2]
    45ac:	ldr	r4, [r4, lr, lsl #2]
    45b0:	add	r5, r2, r3
    45b4:	cmp	r5, r4
    45b8:	bhi	45dc <sas7bdat_copy_text_ref+0x74>
    45bc:	ldr	r5, [ip, #160]	; 0xa0
    45c0:	ldr	r4, [ip, #208]	; 0xd0
    45c4:	ldr	ip, [r5, lr, lsl #2]
    45c8:	str	r4, [sp, #24]
    45cc:	add	r2, ip, r2
    45d0:	add	sp, sp, #12
    45d4:	pop	{r4, r5, lr}
    45d8:	b	4238 <readstat_convert@plt>
    45dc:	mov	r0, #5
    45e0:	add	sp, sp, #12
    45e4:	pop	{r4, r5, pc}

000045e8 <sas7bdat_parse_single_row.part.6>:
    45e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    45ec:	vpush	{d8}
    45f0:	ldr	r3, [r1, #16]
    45f4:	mov	r4, r1
    45f8:	cmp	r3, #0
    45fc:	sub	sp, sp, #76	; 0x4c
    4600:	str	r0, [sp, #40]	; 0x28
    4604:	bne	461c <sas7bdat_parse_single_row.part.6+0x34>
    4608:	ldr	r3, [r4, #76]	; 0x4c
    460c:	mov	r7, #0
    4610:	add	r3, r3, #1
    4614:	str	r3, [r4, #76]	; 0x4c
    4618:	b	4880 <sas7bdat_parse_single_row.part.6+0x298>
    461c:	ldr	r1, [r1, #176]	; 0xb0
    4620:	ldr	r0, [r4, #180]	; 0xb4
    4624:	lsl	r1, r1, #2
    4628:	add	r1, r1, #1
    462c:	str	r1, [r4, #184]	; 0xb8
    4630:	bl	42e0 <readstat_realloc@plt>
    4634:	cmp	r0, #0
    4638:	str	r0, [r4, #180]	; 0xb4
    463c:	moveq	r7, #3
    4640:	beq	4880 <sas7bdat_parse_single_row.part.6+0x298>
    4644:	vldr	d8, [pc, #580]	; 4890 <sas7bdat_parse_single_row.part.6+0x2a8>
    4648:	mov	r8, #0
    464c:	add	r5, sp, #56	; 0x38
    4650:	mov	r9, r8
    4654:	mov	sl, r5
    4658:	add	r3, sp, #64	; 0x40
    465c:	str	r3, [sp, #44]	; 0x2c
    4660:	ldr	r3, [r4, #80]	; 0x50
    4664:	cmp	r8, r3
    4668:	bcs	4608 <sas7bdat_parse_single_row.part.6+0x20>
    466c:	ldr	r3, [r4, #196]	; 0xc4
    4670:	ldr	r3, [r3, r8, lsl #2]
    4674:	str	r3, [sp, #20]
    4678:	ldr	ip, [r3, #2144]	; 0x860
    467c:	cmp	ip, #0
    4680:	bne	486c <sas7bdat_parse_single_row.part.6+0x284>
    4684:	mov	r3, #40	; 0x28
    4688:	ldr	fp, [r4, #192]	; 0xc0
    468c:	ldr	r2, [r4, #68]	; 0x44
    4690:	mla	fp, r3, r8, fp
    4694:	mov	r3, #0
    4698:	ldrd	r6, [fp, #24]
    469c:	cmp	r7, r3
    46a0:	cmpeq	r6, r2
    46a4:	bhi	4874 <sas7bdat_parse_single_row.part.6+0x28c>
    46a8:	ldr	r5, [fp, #32]
    46ac:	adds	r0, r6, r5
    46b0:	adc	r1, r7, #0
    46b4:	cmp	r3, r1
    46b8:	cmpeq	r2, r0
    46bc:	bcc	4874 <sas7bdat_parse_single_row.part.6+0x28c>
    46c0:	ldr	r3, [sp, #40]	; 0x28
    46c4:	mov	r1, ip
    46c8:	mov	r2, #16
    46cc:	mov	r0, sl
    46d0:	add	r6, r3, r6
    46d4:	bl	42a4 <memset@plt>
    46d8:	ldr	r3, [fp, #36]	; 0x24
    46dc:	cmp	r3, #0
    46e0:	str	r3, [sp, #64]	; 0x40
    46e4:	bne	4778 <sas7bdat_parse_single_row.part.6+0x190>
    46e8:	ldr	r2, [r4, #208]	; 0xd0
    46ec:	mov	r3, r5
    46f0:	str	r2, [sp]
    46f4:	mov	r2, r6
    46f8:	ldr	r1, [r4, #184]	; 0xb8
    46fc:	ldr	r0, [r4, #180]	; 0xb4
    4700:	bl	4238 <readstat_convert@plt>
    4704:	cmp	r0, #0
    4708:	beq	476c <sas7bdat_parse_single_row.part.6+0x184>
    470c:	ldr	r3, [r4, #24]
    4710:	mov	r7, r0
    4714:	cmp	r3, #0
    4718:	beq	4880 <sas7bdat_parse_single_row.part.6+0x298>
    471c:	str	r6, [sp, #8]
    4720:	ldr	r3, [fp, #32]
    4724:	add	r5, r4, #480	; 0x1e0
    4728:	str	r3, [sp, #4]
    472c:	ldr	r2, [fp, #20]
    4730:	ldr	r3, [r4, #76]	; 0x4c
    4734:	add	r2, r2, #1
    4738:	str	r2, [sp]
    473c:	ldr	r2, [pc, #340]	; 4898 <sas7bdat_parse_single_row.part.6+0x2b0>
    4740:	add	r5, r5, #1
    4744:	mov	r0, r5
    4748:	add	r3, r3, #1
    474c:	add	r2, pc, r2
    4750:	mov	r1, #2048	; 0x800
    4754:	bl	4280 <snprintf@plt>
    4758:	mov	r0, r5
    475c:	ldr	r3, [r4, #24]
    4760:	ldr	r1, [r4, #52]	; 0x34
    4764:	blx	r3
    4768:	b	4880 <sas7bdat_parse_single_row.part.6+0x298>
    476c:	ldr	r3, [r4, #180]	; 0xb4
    4770:	str	r3, [sp, #56]	; 0x38
    4774:	b	483c <sas7bdat_parse_single_row.part.6+0x254>
    4778:	cmp	r3, #5
    477c:	bne	483c <sas7bdat_parse_single_row.part.6+0x254>
    4780:	ldr	r2, [r4, #40]	; 0x28
    4784:	add	r3, r6, r5
    4788:	cmp	r2, #0
    478c:	mov	r0, r9
    4790:	mov	r1, #0
    4794:	mov	ip, r3
    4798:	ldrdeq	r2, [sp, #32]
    479c:	beq	47d4 <sas7bdat_parse_single_row.part.6+0x1ec>
    47a0:	ldrd	r2, [sp, #24]
    47a4:	cmp	ip, r6
    47a8:	beq	47cc <sas7bdat_parse_single_row.part.6+0x1e4>
    47ac:	lsl	r3, r1, #8
    47b0:	orr	r3, r3, r0, lsr #24
    47b4:	lsl	r2, r0, #8
    47b8:	ldrb	r0, [ip, #-1]!
    47bc:	mov	r1, #0
    47c0:	orr	r1, r1, r3
    47c4:	orr	r0, r0, r2
    47c8:	b	47a4 <sas7bdat_parse_single_row.part.6+0x1bc>
    47cc:	strd	r2, [sp, #24]
    47d0:	b	4800 <sas7bdat_parse_single_row.part.6+0x218>
    47d4:	cmp	r6, ip
    47d8:	beq	47fc <sas7bdat_parse_single_row.part.6+0x214>
    47dc:	lsl	r3, r1, #8
    47e0:	orr	r3, r3, r0, lsr #24
    47e4:	lsl	r2, r0, #8
    47e8:	ldrb	r0, [r6], #1
    47ec:	mov	r1, #0
    47f0:	orr	r1, r1, r3
    47f4:	orr	r0, r0, r2
    47f8:	b	47d4 <sas7bdat_parse_single_row.part.6+0x1ec>
    47fc:	strd	r2, [sp, #32]
    4800:	mvn	r3, #7
    4804:	mul	r2, r3, r5
    4808:	add	r2, r2, #64	; 0x40
    480c:	bl	23518 <__aeabi_llsl>
    4810:	vmov	d7, r0, r1
    4814:	strd	r0, [sp, #48]	; 0x30
    4818:	vcmp.f64	d7, d7
    481c:	vmrs	APSR_nzcv, fpscr
    4820:	vstrvc	d7, [sp, #56]	; 0x38
    4824:	bvc	483c <sas7bdat_parse_single_row.part.6+0x254>
    4828:	mvn	r1, r1, lsr #8
    482c:	mov	r0, sl
    4830:	uxtb	r1, r1
    4834:	vstr	d8, [sp, #56]	; 0x38
    4838:	bl	44a8 <sas_assign_tag@plt>
    483c:	ldr	r3, [sp, #44]	; 0x2c
    4840:	ldr	r5, [r4, #16]
    4844:	ldm	r3, {r0, r1}
    4848:	ldr	r3, [r4, #52]	; 0x34
    484c:	stm	sp, {r0, r1}
    4850:	str	r3, [sp, #8]
    4854:	ldr	r1, [sp, #20]
    4858:	ldm	sl, {r2, r3}
    485c:	ldr	r0, [r4, #76]	; 0x4c
    4860:	blx	r5
    4864:	cmp	r0, #0
    4868:	bne	487c <sas7bdat_parse_single_row.part.6+0x294>
    486c:	add	r8, r8, #1
    4870:	b	4660 <sas7bdat_parse_single_row.part.6+0x78>
    4874:	mov	r7, #5
    4878:	b	4880 <sas7bdat_parse_single_row.part.6+0x298>
    487c:	mov	r7, #4
    4880:	mov	r0, r7
    4884:	add	sp, sp, #76	; 0x4c
    4888:	vpop	{d8}
    488c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4890:	.word	0x00000000
    4894:	.word	0x7ff80000
    4898:	.word	0x0001fdc8

0000489c <sas7bdat_submit_columns_if_needed.part.7>:
    489c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    48a0:	mov	r4, r0
    48a4:	ldr	r5, [r0]
    48a8:	sub	sp, sp, #84	; 0x54
    48ac:	cmp	r5, #0
    48b0:	beq	4960 <sas7bdat_submit_columns_if_needed.part.7+0xc4>
    48b4:	add	r8, sp, #24
    48b8:	mov	r9, r1
    48bc:	mov	r2, #56	; 0x38
    48c0:	mov	r1, #0
    48c4:	mov	r0, r8
    48c8:	bl	42a4 <memset@plt>
    48cc:	ldr	r0, [r4, #220]	; 0xdc
    48d0:	ldr	r2, [r4, #40]	; 0x28
    48d4:	ldr	sl, [r4, #84]	; 0x54
    48d8:	asr	r1, r0, #31
    48dc:	cmp	r2, #0
    48e0:	ldr	r6, [r4, #80]	; 0x50
    48e4:	ldr	r3, [r4, #44]	; 0x2c
    48e8:	movne	r2, #1
    48ec:	moveq	r2, #2
    48f0:	strd	r0, [sp, #48]	; 0x30
    48f4:	mov	fp, #0
    48f8:	mov	r7, #0
    48fc:	ldr	ip, [r4, #212]	; 0xd4
    4900:	ldr	r0, [r4, #216]	; 0xd8
    4904:	ldr	r1, [r4, #200]	; 0xc8
    4908:	and	r3, r3, #1
    490c:	str	r2, [sp, #60]	; 0x3c
    4910:	cmp	r9, #0
    4914:	add	r2, r4, #224	; 0xe0
    4918:	strd	sl, [sp, #24]
    491c:	strd	r6, [sp, #32]
    4920:	strb	r3, [sp, #76]	; 0x4c
    4924:	str	ip, [sp, #40]	; 0x28
    4928:	str	r0, [sp, #44]	; 0x2c
    492c:	str	r1, [sp, #72]	; 0x48
    4930:	str	r2, [sp, #68]	; 0x44
    4934:	beq	494c <sas7bdat_submit_columns_if_needed.part.7+0xb0>
    4938:	ldrb	r3, [r4, #2529]	; 0x9e1
    493c:	tst	r3, #1
    4940:	movne	r3, #2
    4944:	moveq	r3, #1
    4948:	str	r3, [sp, #56]	; 0x38
    494c:	mov	r0, r8
    4950:	ldr	r1, [r4, #52]	; 0x34
    4954:	blx	r5
    4958:	cmp	r0, #0
    495c:	bne	4b94 <sas7bdat_submit_columns_if_needed.part.7+0x2f8>
    4960:	ldr	r0, [r4, #80]	; 0x50
    4964:	cmp	r0, #0
    4968:	bne	497c <sas7bdat_submit_columns_if_needed.part.7+0xe0>
    496c:	mov	r3, #1
    4970:	str	r3, [r4, #64]	; 0x40
    4974:	mov	r6, #0
    4978:	b	4b98 <sas7bdat_submit_columns_if_needed.part.7+0x2fc>
    497c:	mov	r1, #4
    4980:	bl	3fc8 <readstat_calloc@plt>
    4984:	cmp	r0, #0
    4988:	str	r0, [r4, #196]	; 0xc4
    498c:	moveq	r6, #3
    4990:	beq	4b98 <sas7bdat_submit_columns_if_needed.part.7+0x2fc>
    4994:	add	r3, r4, #480	; 0x1e0
    4998:	mov	r6, #0
    499c:	add	fp, r3, #1
    49a0:	ldr	r3, [pc, #508]	; 4ba4 <sas7bdat_submit_columns_if_needed.part.7+0x308>
    49a4:	mov	r9, r6
    49a8:	mov	r8, r6
    49ac:	add	r3, pc, r3
    49b0:	str	r3, [sp, #20]
    49b4:	ldr	r3, [r4, #80]	; 0x50
    49b8:	cmp	r8, r3
    49bc:	bcs	4b88 <sas7bdat_submit_columns_if_needed.part.7+0x2ec>
    49c0:	mov	r3, #40	; 0x28
    49c4:	ldr	r1, [pc, #476]	; 4ba8 <sas7bdat_submit_columns_if_needed.part.7+0x30c>
    49c8:	mul	sl, r3, r8
    49cc:	ldr	r3, [r4, #196]	; 0xc4
    49d0:	mov	r0, #1
    49d4:	str	r3, [sp, #16]
    49d8:	bl	3fc8 <readstat_calloc@plt>
    49dc:	ldr	r3, [r4, #192]	; 0xc0
    49e0:	lsl	r7, r8, #2
    49e4:	add	r3, r3, sl
    49e8:	ldr	r1, [r3, #32]
    49ec:	ldr	r2, [r3, #36]	; 0x24
    49f0:	str	r8, [r0, #4]
    49f4:	str	r9, [r0, #2148]	; 0x864
    49f8:	str	r1, [r0, #1596]	; 0x63c
    49fc:	ldr	r1, [r3, #36]	; 0x24
    4a00:	mov	r5, r0
    4a04:	cmp	r1, #5
    4a08:	str	r2, [r0]
    4a0c:	ldr	r2, [r3, #32]
    4a10:	bne	4a24 <sas7bdat_submit_columns_if_needed.part.7+0x188>
    4a14:	sub	r2, r2, #3
    4a18:	cmp	r2, #5
    4a1c:	bhi	4ab4 <sas7bdat_submit_columns_if_needed.part.7+0x218>
    4a20:	b	4a3c <sas7bdat_submit_columns_if_needed.part.7+0x1a0>
    4a24:	cmp	r1, #0
    4a28:	bne	4a3c <sas7bdat_submit_columns_if_needed.part.7+0x1a0>
    4a2c:	ldr	r1, [pc, #376]	; 4bac <sas7bdat_submit_columns_if_needed.part.7+0x310>
    4a30:	sub	r2, r2, #1
    4a34:	cmp	r2, r1
    4a38:	bhi	4ab4 <sas7bdat_submit_columns_if_needed.part.7+0x218>
    4a3c:	str	r4, [sp]
    4a40:	mov	r1, #300	; 0x12c
    4a44:	ldm	r3, {r2, r3}
    4a48:	add	r0, r5, #8
    4a4c:	bl	4568 <sas7bdat_copy_text_ref>
    4a50:	cmp	r0, #0
    4a54:	bne	4abc <sas7bdat_submit_columns_if_needed.part.7+0x220>
    4a58:	ldr	r3, [r4, #192]	; 0xc0
    4a5c:	str	r4, [sp]
    4a60:	add	r3, r3, sl
    4a64:	mov	r1, #256	; 0x100
    4a68:	ldrh	ip, [r3, #8]
    4a6c:	ldrh	r2, [r3, #6]
    4a70:	add	r0, r5, #308	; 0x134
    4a74:	ldrh	r3, [r3, #10]
    4a78:	orr	r2, r2, ip, lsl #16
    4a7c:	bl	4568 <sas7bdat_copy_text_ref>
    4a80:	cmp	r0, #0
    4a84:	bne	4abc <sas7bdat_submit_columns_if_needed.part.7+0x220>
    4a88:	ldr	r3, [r4, #192]	; 0xc0
    4a8c:	mov	r1, #1024	; 0x400
    4a90:	add	sl, r3, sl
    4a94:	add	sl, sl, #12
    4a98:	str	r4, [sp]
    4a9c:	add	r0, r5, #564	; 0x234
    4aa0:	ldm	sl, {r2, r3}
    4aa4:	bl	4568 <sas7bdat_copy_text_ref>
    4aa8:	cmp	r0, #0
    4aac:	beq	4b24 <sas7bdat_submit_columns_if_needed.part.7+0x288>
    4ab0:	b	4abc <sas7bdat_submit_columns_if_needed.part.7+0x220>
    4ab4:	mov	r6, #5
    4ab8:	b	4ac0 <sas7bdat_submit_columns_if_needed.part.7+0x224>
    4abc:	mov	r6, r0
    4ac0:	mov	r0, r5
    4ac4:	bl	3ec0 <free@plt>
    4ac8:	cmp	r6, #17
    4acc:	movne	r5, #0
    4ad0:	bne	4b24 <sas7bdat_submit_columns_if_needed.part.7+0x288>
    4ad4:	ldr	r3, [r4, #24]
    4ad8:	cmp	r3, #0
    4adc:	moveq	r5, r3
    4ae0:	beq	4b24 <sas7bdat_submit_columns_if_needed.part.7+0x288>
    4ae4:	add	r2, r5, #564	; 0x234
    4ae8:	add	r3, r5, #308	; 0x134
    4aec:	add	r5, r5, #8
    4af0:	str	r2, [sp, #8]
    4af4:	str	r3, [sp, #4]
    4af8:	str	r5, [sp]
    4afc:	mov	r3, r8
    4b00:	ldr	r2, [sp, #20]
    4b04:	mov	r1, #2048	; 0x800
    4b08:	mov	r0, fp
    4b0c:	bl	4280 <snprintf@plt>
    4b10:	ldr	r3, [r4, #24]
    4b14:	ldr	r1, [r4, #52]	; 0x34
    4b18:	mov	r0, fp
    4b1c:	blx	r3
    4b20:	mov	r5, #0
    4b24:	ldr	r3, [r4, #196]	; 0xc4
    4b28:	ldr	r2, [sp, #16]
    4b2c:	str	r5, [r2, r7]
    4b30:	ldr	r1, [r3, r7]
    4b34:	cmp	r1, #0
    4b38:	beq	4b88 <sas7bdat_submit_columns_if_needed.part.7+0x2ec>
    4b3c:	ldr	r5, [r4, #8]
    4b40:	cmp	r5, #0
    4b44:	beq	4b7c <sas7bdat_submit_columns_if_needed.part.7+0x2e0>
    4b48:	ldr	r3, [r4, #52]	; 0x34
    4b4c:	add	r2, r1, #308	; 0x134
    4b50:	mov	r0, r8
    4b54:	blx	r5
    4b58:	cmp	r0, #1
    4b5c:	beq	4b94 <sas7bdat_submit_columns_if_needed.part.7+0x2f8>
    4b60:	cmp	r0, #2
    4b64:	bne	4b7c <sas7bdat_submit_columns_if_needed.part.7+0x2e0>
    4b68:	ldr	r3, [r4, #196]	; 0xc4
    4b6c:	mov	r2, #1
    4b70:	ldr	r3, [r3, r7]
    4b74:	str	r2, [r3, #2144]	; 0x860
    4b78:	b	4b80 <sas7bdat_submit_columns_if_needed.part.7+0x2e4>
    4b7c:	add	r9, r9, #1
    4b80:	add	r8, r8, #1
    4b84:	b	49b4 <sas7bdat_submit_columns_if_needed.part.7+0x118>
    4b88:	cmp	r6, #0
    4b8c:	beq	496c <sas7bdat_submit_columns_if_needed.part.7+0xd0>
    4b90:	b	4b98 <sas7bdat_submit_columns_if_needed.part.7+0x2fc>
    4b94:	mov	r6, #4
    4b98:	mov	r0, r6
    4b9c:	add	sp, sp, #84	; 0x54
    4ba0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4ba4:	.word	0x0001fbb8
    4ba8:	.word	0x00000868
    4bac:	.word	0x00007ffe

00004bb0 <xport_skip_rest_of_record.isra.2>:
    4bb0:	push	{r4, lr}
    4bb4:	mov	r1, #1
    4bb8:	ldr	r3, [r0, #8]
    4bbc:	ldr	r2, [r0, #20]
    4bc0:	mov	r4, r0
    4bc4:	mov	r0, #0
    4bc8:	blx	r3
    4bcc:	cmn	r0, #1
    4bd0:	bne	4bdc <xport_skip_rest_of_record.isra.2+0x2c>
    4bd4:	mov	r0, #15
    4bd8:	pop	{r4, pc}
    4bdc:	mov	r1, #80	; 0x50
    4be0:	bl	234f8 <__aeabi_idivmod>
    4be4:	cmp	r1, #0
    4be8:	beq	4c08 <xport_skip_rest_of_record.isra.2+0x58>
    4bec:	rsb	r0, r1, #80	; 0x50
    4bf0:	ldr	r3, [r4, #8]
    4bf4:	ldr	r2, [r4, #20]
    4bf8:	mov	r1, #1
    4bfc:	blx	r3
    4c00:	cmn	r0, #1
    4c04:	beq	4bd4 <xport_skip_rest_of_record.isra.2+0x24>
    4c08:	mov	r0, #0
    4c0c:	pop	{r4, pc}

00004c10 <xport_process_row.isra.3>:
    4c10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4c14:	vpush	{d8}
    4c18:	vldr	d8, [pc, #576]	; 4e60 <xport_process_row.isra.3+0x250>
    4c1c:	mov	r5, #0
    4c20:	mov	r4, r0
    4c24:	sub	sp, sp, #76	; 0x4c
    4c28:	add	r8, sp, #48	; 0x30
    4c2c:	add	r3, r8, #1
    4c30:	str	r3, [sp, #24]
    4c34:	add	r3, sp, #56	; 0x38
    4c38:	str	r3, [sp, #20]
    4c3c:	mov	fp, r1
    4c40:	add	r3, sp, #40	; 0x28
    4c44:	mov	r6, r5
    4c48:	mov	r9, r5
    4c4c:	str	r3, [sp, #28]
    4c50:	add	r3, sp, #64	; 0x40
    4c54:	str	r3, [sp, #32]
    4c58:	ldr	r3, [r4, #64]	; 0x40
    4c5c:	cmp	r9, r3
    4c60:	bge	4e20 <xport_process_row.isra.3+0x210>
    4c64:	ldr	r3, [r4, #376]	; 0x178
    4c68:	mov	r2, #16
    4c6c:	mov	r1, #0
    4c70:	ldr	r7, [r3, r9, lsl #2]
    4c74:	ldr	r0, [sp, #20]
    4c78:	bl	42a4 <memset@plt>
    4c7c:	ldr	r3, [r7]
    4c80:	ldr	r2, [r7, #1596]	; 0x63c
    4c84:	cmp	r3, #0
    4c88:	str	r3, [sp, #64]	; 0x40
    4c8c:	lsl	r3, r9, #2
    4c90:	str	r3, [sp, #36]	; 0x24
    4c94:	bne	4ce0 <xport_process_row.isra.3+0xd0>
    4c98:	lsl	r2, r2, #2
    4c9c:	mov	r0, r5
    4ca0:	add	r1, r2, #1
    4ca4:	bl	42e0 <readstat_realloc@plt>
    4ca8:	subs	r5, r0, #0
    4cac:	beq	4e18 <xport_process_row.isra.3+0x208>
    4cb0:	ldr	r1, [r7, #1596]	; 0x63c
    4cb4:	ldr	r2, [r4, #48]	; 0x30
    4cb8:	mov	r3, r1
    4cbc:	lsl	r1, r1, #2
    4cc0:	str	r2, [sp]
    4cc4:	add	r1, r1, #1
    4cc8:	add	r2, fp, r6
    4ccc:	bl	4238 <readstat_convert@plt>
    4cd0:	cmp	r0, #0
    4cd4:	bne	4e44 <xport_process_row.isra.3+0x234>
    4cd8:	str	r5, [sp, #56]	; 0x38
    4cdc:	b	4da0 <xport_process_row.isra.3+0x190>
    4ce0:	sub	r3, r2, #3
    4ce4:	cmp	r3, #5
    4ce8:	vstr	d8, [sp, #40]	; 0x28
    4cec:	bhi	4d98 <xport_process_row.isra.3+0x188>
    4cf0:	add	r1, r6, #1
    4cf4:	mov	r3, #0
    4cf8:	sub	r2, r2, #1
    4cfc:	add	r1, fp, r1
    4d00:	ldr	r0, [sp, #24]
    4d04:	str	r3, [r8]
    4d08:	str	r3, [r8, #4]
    4d0c:	bl	3fa4 <memcmp@plt>
    4d10:	add	sl, fp, r6
    4d14:	cmp	r0, #0
    4d18:	bne	4d68 <xport_process_row.isra.3+0x158>
    4d1c:	ldrb	r0, [fp, r6]
    4d20:	cmp	r0, #46	; 0x2e
    4d24:	bne	4d44 <xport_process_row.isra.3+0x134>
    4d28:	ldrb	r2, [sl]
    4d2c:	cmp	r2, #46	; 0x2e
    4d30:	bne	4d54 <xport_process_row.isra.3+0x144>
    4d34:	ldrb	r3, [sp, #69]	; 0x45
    4d38:	orr	r3, r3, #1
    4d3c:	strb	r3, [sp, #69]	; 0x45
    4d40:	b	4d98 <xport_process_row.isra.3+0x188>
    4d44:	bl	4148 <sas_validate_tag@plt>
    4d48:	cmp	r0, #0
    4d4c:	beq	4d28 <xport_process_row.isra.3+0x118>
    4d50:	b	4d68 <xport_process_row.isra.3+0x158>
    4d54:	ldrb	r3, [sp, #69]	; 0x45
    4d58:	strb	r2, [sp, #68]	; 0x44
    4d5c:	orr	r3, r3, #2
    4d60:	strb	r3, [sp, #69]	; 0x45
    4d64:	b	4d98 <xport_process_row.isra.3+0x188>
    4d68:	mov	r1, sl
    4d6c:	ldr	r2, [r7, #1596]	; 0x63c
    4d70:	mov	r0, r8
    4d74:	bl	3f20 <memcpy@plt>
    4d78:	mov	r3, #0
    4d7c:	ldr	r2, [sp, #28]
    4d80:	mov	r1, #1
    4d84:	mov	r0, r8
    4d88:	bl	4004 <cnxptiee@plt>
    4d8c:	cmp	r0, #0
    4d90:	movne	sl, #16
    4d94:	bne	4e48 <xport_process_row.isra.3+0x238>
    4d98:	ldrd	r2, [sp, #40]	; 0x28
    4d9c:	strd	r2, [sp, #56]	; 0x38
    4da0:	ldr	sl, [r4, #16]
    4da4:	ldr	r3, [r7, #1596]	; 0x63c
    4da8:	cmp	sl, #0
    4dac:	add	r6, r6, r3
    4db0:	bne	4dbc <xport_process_row.isra.3+0x1ac>
    4db4:	add	r9, r9, #1
    4db8:	b	4c58 <xport_process_row.isra.3+0x48>
    4dbc:	ldr	r3, [r4, #376]	; 0x178
    4dc0:	lsl	r2, r9, #2
    4dc4:	ldr	r3, [r3, r2]
    4dc8:	ldr	r3, [r3, #2144]	; 0x860
    4dcc:	cmp	r3, #0
    4dd0:	bne	4db4 <xport_process_row.isra.3+0x1a4>
    4dd4:	ldr	r3, [r4, #72]	; 0x48
    4dd8:	cmp	r3, #0
    4ddc:	bne	4db4 <xport_process_row.isra.3+0x1a4>
    4de0:	ldr	r3, [sp, #32]
    4de4:	ldr	ip, [r4, #36]	; 0x24
    4de8:	ldm	r3, {r0, r1}
    4dec:	ldr	r3, [sp, #20]
    4df0:	ldm	r3, {r2, r3}
    4df4:	stm	sp, {r0, r1}
    4df8:	str	ip, [sp, #8]
    4dfc:	mov	r1, r7
    4e00:	ldr	r0, [r4, #80]	; 0x50
    4e04:	blx	sl
    4e08:	cmp	r0, #0
    4e0c:	beq	4db4 <xport_process_row.isra.3+0x1a4>
    4e10:	mov	sl, #4
    4e14:	b	4e48 <xport_process_row.isra.3+0x238>
    4e18:	mov	sl, #3
    4e1c:	b	4e48 <xport_process_row.isra.3+0x238>
    4e20:	ldr	sl, [r4, #72]	; 0x48
    4e24:	cmp	sl, #0
    4e28:	subne	sl, sl, #1
    4e2c:	ldreq	r3, [r4, #80]	; 0x50
    4e30:	strne	sl, [r4, #72]	; 0x48
    4e34:	addeq	r3, r3, #1
    4e38:	movne	sl, #0
    4e3c:	streq	r3, [r4, #80]	; 0x50
    4e40:	b	4e48 <xport_process_row.isra.3+0x238>
    4e44:	mov	sl, r0
    4e48:	mov	r0, r5
    4e4c:	bl	3ec0 <free@plt>
    4e50:	mov	r0, sl
    4e54:	add	sp, sp, #76	; 0x4c
    4e58:	vpop	{d8}
    4e5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4e60:	.word	0x00000000
    4e64:	.word	0x7ff80000

00004e68 <xport_construct_format.constprop.4>:
    4e68:	lsl	ip, r2, #2
    4e6c:	push	{r4, r5, r6, r7, r8, fp, lr}
    4e70:	mov	lr, r2
    4e74:	add	r2, ip, #8
    4e78:	add	fp, sp, #24
    4e7c:	bic	r2, r2, #7
    4e80:	sub	sp, sp, #12
    4e84:	sub	sp, sp, r2
    4e88:	mov	r7, #0
    4e8c:	add	r5, sp, #8
    4e90:	mov	r2, r1
    4e94:	str	r7, [sp]
    4e98:	mov	r4, r0
    4e9c:	mov	r6, r3
    4ea0:	add	r1, ip, #1
    4ea4:	mov	r3, lr
    4ea8:	mov	r0, r5
    4eac:	ldr	r8, [fp, #4]
    4eb0:	bl	4238 <readstat_convert@plt>
    4eb4:	subs	r7, r0, #0
    4eb8:	bne	4f34 <xport_construct_format.constprop.4+0xcc>
    4ebc:	ldrb	r3, [sp, #8]
    4ec0:	cmp	r3, #0
    4ec4:	strbeq	r7, [r4]
    4ec8:	beq	4f34 <xport_construct_format.constprop.4+0xcc>
    4ecc:	cmp	r8, #0
    4ed0:	beq	4ef4 <xport_construct_format.constprop.4+0x8c>
    4ed4:	ldr	r2, [pc, #100]	; 4f40 <xport_construct_format.constprop.4+0xd8>
    4ed8:	stm	sp, {r6, r8}
    4edc:	mov	r3, r5
    4ee0:	mov	r0, r4
    4ee4:	add	r2, pc, r2
    4ee8:	mov	r1, #256	; 0x100
    4eec:	bl	4280 <snprintf@plt>
    4ef0:	b	4f34 <xport_construct_format.constprop.4+0xcc>
    4ef4:	cmp	r6, #0
    4ef8:	beq	4f1c <xport_construct_format.constprop.4+0xb4>
    4efc:	ldr	r2, [pc, #64]	; 4f44 <xport_construct_format.constprop.4+0xdc>
    4f00:	str	r6, [sp]
    4f04:	mov	r3, r5
    4f08:	mov	r0, r4
    4f0c:	add	r2, pc, r2
    4f10:	mov	r1, #256	; 0x100
    4f14:	bl	4280 <snprintf@plt>
    4f18:	b	4f34 <xport_construct_format.constprop.4+0xcc>
    4f1c:	ldr	r2, [pc, #36]	; 4f48 <xport_construct_format.constprop.4+0xe0>
    4f20:	mov	r3, r5
    4f24:	mov	r0, r4
    4f28:	add	r2, pc, r2
    4f2c:	mov	r1, #256	; 0x100
    4f30:	bl	4280 <snprintf@plt>
    4f34:	mov	r0, r7
    4f38:	sub	sp, fp, #24
    4f3c:	pop	{r4, r5, r6, r7, r8, fp, pc}
    4f40:	.word	0x0001f8d8
    4f44:	.word	0x0001f8b8
    4f48:	.word	0x0001f4e4

00004f4c <xport_write_variables>:
    4f4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4f50:	sub	sp, sp, #236	; 0xec
    4f54:	add	r5, sp, #92	; 0x5c
    4f58:	add	r3, r5, #16
    4f5c:	str	r3, [sp, #28]
    4f60:	mov	r3, #1
    4f64:	str	r3, [sp, #8]
    4f68:	ldr	r3, [pc, #1556]	; 5584 <xport_write_variables+0x638>
    4f6c:	mov	sl, r0
    4f70:	add	r3, pc, r3
    4f74:	str	r3, [sp, #20]
    4f78:	ldr	r3, [pc, #1544]	; 5588 <xport_write_variables+0x63c>
    4f7c:	mov	fp, #0
    4f80:	add	r3, pc, r3
    4f84:	str	r3, [sp, #32]
    4f88:	ldr	r3, [pc, #1532]	; 558c <xport_write_variables+0x640>
    4f8c:	str	fp, [sp, #12]
    4f90:	add	r3, pc, r3
    4f94:	str	r3, [sp, #36]	; 0x24
    4f98:	str	fp, [sp, #16]
    4f9c:	ldr	r2, [sp, #8]
    4fa0:	ldr	r3, [sl, #28]
    4fa4:	sub	r1, r2, #1
    4fa8:	cmp	r3, r1
    4fac:	ble	5294 <xport_write_variables+0x348>
    4fb0:	mov	r0, sl
    4fb4:	bl	437c <readstat_get_variable@plt>
    4fb8:	ldr	r3, [r0]
    4fbc:	mov	r4, r0
    4fc0:	cmp	r3, #0
    4fc4:	ldr	r7, [r0, #1600]	; 0x640
    4fc8:	beq	4fe4 <xport_write_variables+0x98>
    4fcc:	sub	r3, r7, #1
    4fd0:	cmp	r3, #6
    4fd4:	movhi	r7, #8
    4fd8:	bhi	4fe4 <xport_write_variables+0x98>
    4fdc:	cmp	r7, #3
    4fe0:	movcc	r7, #3
    4fe4:	mov	r2, #140	; 0x8c
    4fe8:	mov	r1, #0
    4fec:	mov	r0, r5
    4ff0:	bl	42a4 <memset@plt>
    4ff4:	ldr	r3, [sp, #20]
    4ff8:	strh	r7, [sp, #96]	; 0x60
    4ffc:	add	r8, r4, #7
    5000:	ldm	r3, {r0, r1}
    5004:	add	r3, sp, #148	; 0x94
    5008:	stm	r3, {r0, r1}
    500c:	ldrh	r3, [sp, #8]
    5010:	strh	r3, [sp, #98]	; 0x62
    5014:	add	r3, sp, #164	; 0xa4
    5018:	stm	r3, {r0, r1}
    501c:	ldr	r3, [sp, #12]
    5020:	mov	r0, r4
    5024:	str	r3, [sp, #176]	; 0xb0
    5028:	bl	4544 <readstat_variable_get_type_class@plt>
    502c:	mov	r2, r8
    5030:	cmp	r0, #0
    5034:	moveq	r3, #2
    5038:	movne	r3, #1
    503c:	strh	r3, [sp, #92]	; 0x5c
    5040:	add	r0, r4, #15
    5044:	add	r3, r5, #8
    5048:	ldrb	r1, [r2, #1]!
    504c:	cmp	r1, #0
    5050:	beq	5080 <xport_write_variables+0x134>
    5054:	cmp	r2, r0
    5058:	strb	r1, [r3], #1
    505c:	bne	5048 <xport_write_variables+0xfc>
    5060:	add	r2, r4, #564	; 0x234
    5064:	add	r3, r4, #560	; 0x230
    5068:	add	r1, r4, #600	; 0x258
    506c:	str	r2, [sp, #24]
    5070:	add	r3, r3, #3
    5074:	add	r1, r1, #3
    5078:	add	r2, r5, #16
    507c:	b	50a4 <xport_write_variables+0x158>
    5080:	mov	r2, #32
    5084:	ldr	r1, [sp, #28]
    5088:	cmp	r3, r1
    508c:	bcs	5060 <xport_write_variables+0x114>
    5090:	strb	r2, [r3], #1
    5094:	b	5084 <xport_write_variables+0x138>
    5098:	cmp	r1, r3
    509c:	strb	r0, [r2], #1
    50a0:	beq	50b4 <xport_write_variables+0x168>
    50a4:	ldrb	r0, [r3, #1]!
    50a8:	cmp	r0, #0
    50ac:	bne	5098 <xport_write_variables+0x14c>
    50b0:	b	50f4 <xport_write_variables+0x1a8>
    50b4:	ldrb	r3, [r4, #308]	; 0x134
    50b8:	cmp	r3, #0
    50bc:	beq	51bc <xport_write_variables+0x270>
    50c0:	add	r3, sp, #232	; 0xe8
    50c4:	mov	r6, #0
    50c8:	add	r1, sp, #40	; 0x28
    50cc:	add	r9, sp, #56	; 0x38
    50d0:	str	r6, [r3, #-188]!	; 0xffffff44
    50d4:	mov	r2, r9
    50d8:	str	r1, [sp]
    50dc:	add	r0, r4, #308	; 0x134
    50e0:	ldr	r1, [sp, #32]
    50e4:	str	r6, [sp, #40]	; 0x28
    50e8:	bl	428c <__isoc99_sscanf@plt>
    50ec:	add	r3, r5, #56	; 0x38
    50f0:	b	5118 <xport_write_variables+0x1cc>
    50f4:	add	r1, r5, #56	; 0x38
    50f8:	mov	r3, #32
    50fc:	cmp	r2, r1
    5100:	bcs	50b4 <xport_write_variables+0x168>
    5104:	strb	r3, [r2], #1
    5108:	b	50fc <xport_write_variables+0x1b0>
    510c:	cmp	r6, #8
    5110:	strb	r2, [r3], #1
    5114:	beq	512c <xport_write_variables+0x1e0>
    5118:	ldrb	r2, [r9, r6]
    511c:	add	r6, r6, #1
    5120:	cmp	r2, #0
    5124:	bne	510c <xport_write_variables+0x1c0>
    5128:	b	5148 <xport_write_variables+0x1fc>
    512c:	ldrh	r1, [sp, #44]	; 0x2c
    5130:	ldrh	ip, [sp, #40]	; 0x28
    5134:	mov	r2, #0
    5138:	strh	r1, [sp, #156]	; 0x9c
    513c:	strh	ip, [sp, #158]	; 0x9e
    5140:	add	r3, r5, #72	; 0x48
    5144:	b	516c <xport_write_variables+0x220>
    5148:	add	r1, r5, #64	; 0x40
    514c:	mov	r2, #32
    5150:	cmp	r3, r1
    5154:	bcs	512c <xport_write_variables+0x1e0>
    5158:	strb	r2, [r3], #1
    515c:	b	5150 <xport_write_variables+0x204>
    5160:	cmp	r2, #8
    5164:	strb	r0, [r3], #1
    5168:	beq	5180 <xport_write_variables+0x234>
    516c:	ldrb	r0, [r9, r2]
    5170:	add	r2, r2, #1
    5174:	cmp	r0, #0
    5178:	bne	5160 <xport_write_variables+0x214>
    517c:	b	51a4 <xport_write_variables+0x258>
    5180:	mov	r0, r9
    5184:	strh	r1, [sp, #172]	; 0xac
    5188:	strh	ip, [sp, #174]	; 0xae
    518c:	bl	41fc <strlen@plt>
    5190:	cmp	r0, #8
    5194:	movhi	fp, #1
    5198:	movhi	r6, fp
    519c:	movls	r6, #0
    51a0:	b	51cc <xport_write_variables+0x280>
    51a4:	add	r0, r5, #80	; 0x50
    51a8:	mov	r2, #32
    51ac:	cmp	r3, r0
    51b0:	bcs	5180 <xport_write_variables+0x234>
    51b4:	strb	r2, [r3], #1
    51b8:	b	51ac <xport_write_variables+0x260>
    51bc:	ldr	r6, [r4, #2136]	; 0x858
    51c0:	cmp	r6, #0
    51c4:	strhne	r6, [sp, #156]	; 0x9c
    51c8:	movne	r6, r3
    51cc:	ldr	r3, [r4, #2132]	; 0x854
    51d0:	ldr	r2, [sl, #8]
    51d4:	sub	r3, r3, #3
    51d8:	cmp	r2, #8
    51dc:	clz	r3, r3
    51e0:	lsr	r3, r3, #5
    51e4:	strh	r3, [sp, #160]	; 0xa0
    51e8:	addeq	r4, r4, #39	; 0x27
    51ec:	addeq	r3, r5, #88	; 0x58
    51f0:	bne	523c <xport_write_variables+0x2f0>
    51f4:	ldrb	r2, [r8, #1]!
    51f8:	cmp	r2, #0
    51fc:	beq	5224 <xport_write_variables+0x2d8>
    5200:	cmp	r4, r8
    5204:	strb	r2, [r3], #1
    5208:	bne	51f4 <xport_write_variables+0x2a8>
    520c:	ldr	r0, [sp, #24]
    5210:	bl	41fc <strlen@plt>
    5214:	cmp	r0, #40	; 0x28
    5218:	movhi	r6, #1
    521c:	strh	r0, [sp, #212]	; 0xd4
    5220:	b	523c <xport_write_variables+0x2f0>
    5224:	add	r1, r5, #120	; 0x78
    5228:	mov	r2, #32
    522c:	cmp	r3, r1
    5230:	bcs	520c <xport_write_variables+0x2c0>
    5234:	strb	r2, [r3], #1
    5238:	b	522c <xport_write_variables+0x2e0>
    523c:	cmp	r6, #0
    5240:	mov	r0, r5
    5244:	ldrne	r3, [sp, #16]
    5248:	addne	r3, r3, #1
    524c:	strne	r3, [sp, #16]
    5250:	bl	4094 <xport_namestr_bswap@plt>
    5254:	ldr	r3, [sp, #36]	; 0x24
    5258:	mov	r2, #140	; 0x8c
    525c:	str	r3, [sp]
    5260:	mov	r1, r5
    5264:	mov	r3, #80	; 0x50
    5268:	mov	r0, sl
    526c:	bl	4520 <readstat_write_bytes_as_lines@plt>
    5270:	ldr	r3, [sp, #12]
    5274:	add	r3, r3, r7
    5278:	str	r3, [sp, #12]
    527c:	ldr	r3, [sp, #8]
    5280:	add	r3, r3, #1
    5284:	str	r3, [sp, #8]
    5288:	cmp	r0, #0
    528c:	beq	4f9c <xport_write_variables+0x50>
    5290:	b	5574 <xport_write_variables+0x628>
    5294:	ldr	r3, [pc, #756]	; 5590 <xport_write_variables+0x644>
    5298:	mov	r2, #80	; 0x50
    529c:	add	r3, pc, r3
    52a0:	mov	r1, #32
    52a4:	mov	r0, sl
    52a8:	ldr	r8, [sp, #16]
    52ac:	bl	44e4 <readstat_write_line_padding@plt>
    52b0:	subs	r9, r0, #0
    52b4:	bne	5578 <xport_write_variables+0x62c>
    52b8:	ldr	r3, [sl, #8]
    52bc:	cmp	r8, #0
    52c0:	sub	r3, r3, #8
    52c4:	clz	r3, r3
    52c8:	lsr	r3, r3, #5
    52cc:	moveq	r3, #0
    52d0:	cmp	r3, #0
    52d4:	beq	5578 <xport_write_variables+0x62c>
    52d8:	add	r5, sp, #56	; 0x38
    52dc:	mov	r1, r9
    52e0:	mov	r0, r5
    52e4:	mov	r2, #36	; 0x24
    52e8:	bl	42a4 <memset@plt>
    52ec:	ldr	r3, [pc, #672]	; 5594 <xport_write_variables+0x648>
    52f0:	cmp	fp, #0
    52f4:	add	r3, pc, r3
    52f8:	add	r3, r3, #12
    52fc:	strb	r9, [sp, #64]	; 0x40
    5300:	ldm	r3, {r0, r1}
    5304:	str	r8, [sp, #68]	; 0x44
    5308:	stm	r5, {r0, r1}
    530c:	ldrne	r3, [pc, #644]	; 5598 <xport_write_variables+0x64c>
    5310:	addne	r3, pc, r3
    5314:	ldmne	r3, {r0, r1}
    5318:	stmne	r5, {r0, r1}
    531c:	ldr	r2, [pc, #632]	; 559c <xport_write_variables+0x650>
    5320:	add	r4, sp, #92	; 0x5c
    5324:	mov	r3, r5
    5328:	add	r2, pc, r2
    532c:	mov	r1, #81	; 0x51
    5330:	str	r8, [sp]
    5334:	mov	r0, r4
    5338:	bl	4280 <snprintf@plt>
    533c:	mov	r1, r4
    5340:	mov	r0, sl
    5344:	bl	10068 <xport_write_record>
    5348:	subs	r9, r0, #0
    534c:	bne	5578 <xport_write_variables+0x62c>
    5350:	ldr	r3, [pc, #584]	; 55a0 <xport_write_variables+0x654>
    5354:	mov	r5, #1
    5358:	add	r3, pc, r3
    535c:	add	r6, sp, #44	; 0x2c
    5360:	str	r3, [sp, #8]
    5364:	add	r3, sp, #40	; 0x28
    5368:	str	r3, [sp, #12]
    536c:	ldr	r3, [sl, #28]
    5370:	sub	r1, r5, #1
    5374:	cmp	r3, r1
    5378:	mov	r0, sl
    537c:	ble	5558 <xport_write_variables+0x60c>
    5380:	bl	437c <readstat_get_variable@plt>
    5384:	add	r7, r0, #564	; 0x234
    5388:	mov	r3, r0
    538c:	mov	r0, r7
    5390:	add	r8, r3, #8
    5394:	str	r3, [sp, #16]
    5398:	bl	41fc <strlen@plt>
    539c:	mov	r9, r0
    53a0:	mov	r0, r8
    53a4:	bl	41fc <strlen@plt>
    53a8:	mov	r2, #24
    53ac:	mov	r1, #0
    53b0:	mov	fp, r0
    53b4:	mov	r0, r4
    53b8:	bl	42a4 <memset@plt>
    53bc:	ldr	r3, [sp, #16]
    53c0:	ldrb	r2, [r3, #308]	; 0x134
    53c4:	cmp	r2, #0
    53c8:	beq	54cc <xport_write_variables+0x580>
    53cc:	ldr	r2, [sp, #12]
    53d0:	mov	r1, #2
    53d4:	str	r2, [sp]
    53d8:	add	r0, r3, #308	; 0x134
    53dc:	mov	ip, #8
    53e0:	str	r1, [sp, #40]	; 0x28
    53e4:	mov	r3, r6
    53e8:	mov	r2, r4
    53ec:	ldr	r1, [sp, #8]
    53f0:	str	ip, [sp, #44]	; 0x2c
    53f4:	bl	428c <__isoc99_sscanf@plt>
    53f8:	cmp	r0, #0
    53fc:	movle	r9, #11
    5400:	ble	5578 <xport_write_variables+0x62c>
    5404:	mov	r0, r4
    5408:	bl	41fc <strlen@plt>
    540c:	cmp	r0, #8
    5410:	ble	54cc <xport_write_variables+0x580>
    5414:	uxth	r0, r0
    5418:	strh	r0, [sp, #48]	; 0x30
    541c:	strh	r0, [sp, #50]	; 0x32
    5420:	strh	r5, [sp, #44]	; 0x2c
    5424:	strh	fp, [sp, #46]	; 0x2e
    5428:	strh	r9, [sp, #52]	; 0x34
    542c:	bl	3eb4 <machine_is_little_endian@plt>
    5430:	cmp	r0, #0
    5434:	beq	5474 <xport_write_variables+0x528>
    5438:	ldrh	r0, [sp, #44]	; 0x2c
    543c:	bl	3ea8 <byteswap2@plt>
    5440:	strh	r0, [sp, #44]	; 0x2c
    5444:	ldrh	r0, [sp, #46]	; 0x2e
    5448:	bl	3ea8 <byteswap2@plt>
    544c:	strh	r0, [sp, #46]	; 0x2e
    5450:	ldrh	r0, [sp, #48]	; 0x30
    5454:	bl	3ea8 <byteswap2@plt>
    5458:	strh	r0, [sp, #48]	; 0x30
    545c:	ldrh	r0, [sp, #50]	; 0x32
    5460:	bl	3ea8 <byteswap2@plt>
    5464:	strh	r0, [sp, #50]	; 0x32
    5468:	ldrh	r0, [sp, #52]	; 0x34
    546c:	bl	3ea8 <byteswap2@plt>
    5470:	strh	r0, [sp, #52]	; 0x34
    5474:	mov	r2, #10
    5478:	mov	r1, r6
    547c:	mov	r0, sl
    5480:	bl	4454 <readstat_write_bytes@plt>
    5484:	cmp	r0, #0
    5488:	bne	5574 <xport_write_variables+0x628>
    548c:	mov	r1, r8
    5490:	mov	r0, sl
    5494:	bl	4154 <readstat_write_string@plt>
    5498:	cmp	r0, #0
    549c:	bne	5574 <xport_write_variables+0x628>
    54a0:	mov	r1, r4
    54a4:	mov	r0, sl
    54a8:	bl	4154 <readstat_write_string@plt>
    54ac:	cmp	r0, #0
    54b0:	bne	5574 <xport_write_variables+0x628>
    54b4:	mov	r1, r4
    54b8:	mov	r0, sl
    54bc:	bl	4154 <readstat_write_string@plt>
    54c0:	cmp	r0, #0
    54c4:	beq	553c <xport_write_variables+0x5f0>
    54c8:	b	5574 <xport_write_variables+0x628>
    54cc:	cmp	r9, #40	; 0x28
    54d0:	bls	5550 <xport_write_variables+0x604>
    54d4:	strh	r5, [sp, #44]	; 0x2c
    54d8:	strh	fp, [sp, #46]	; 0x2e
    54dc:	strh	r9, [sp, #48]	; 0x30
    54e0:	bl	3eb4 <machine_is_little_endian@plt>
    54e4:	cmp	r0, #0
    54e8:	beq	5510 <xport_write_variables+0x5c4>
    54ec:	ldrh	r0, [sp, #44]	; 0x2c
    54f0:	bl	3ea8 <byteswap2@plt>
    54f4:	strh	r0, [sp, #44]	; 0x2c
    54f8:	ldrh	r0, [sp, #46]	; 0x2e
    54fc:	bl	3ea8 <byteswap2@plt>
    5500:	strh	r0, [sp, #46]	; 0x2e
    5504:	ldrh	r0, [sp, #48]	; 0x30
    5508:	bl	3ea8 <byteswap2@plt>
    550c:	strh	r0, [sp, #48]	; 0x30
    5510:	mov	r2, #6
    5514:	mov	r1, r6
    5518:	mov	r0, sl
    551c:	bl	4454 <readstat_write_bytes@plt>
    5520:	cmp	r0, #0
    5524:	bne	5574 <xport_write_variables+0x628>
    5528:	mov	r1, r8
    552c:	mov	r0, sl
    5530:	bl	4154 <readstat_write_string@plt>
    5534:	cmp	r0, #0
    5538:	bne	5574 <xport_write_variables+0x628>
    553c:	mov	r1, r7
    5540:	mov	r0, sl
    5544:	bl	4154 <readstat_write_string@plt>
    5548:	cmp	r0, #0
    554c:	bne	5574 <xport_write_variables+0x628>
    5550:	add	r5, r5, #1
    5554:	b	536c <xport_write_variables+0x420>
    5558:	ldr	r3, [pc, #68]	; 55a4 <xport_write_variables+0x658>
    555c:	mov	r2, #80	; 0x50
    5560:	add	r3, pc, r3
    5564:	mov	r1, #32
    5568:	bl	44e4 <readstat_write_line_padding@plt>
    556c:	mov	r9, r0
    5570:	b	5578 <xport_write_variables+0x62c>
    5574:	mov	r9, r0
    5578:	mov	r0, r9
    557c:	add	sp, sp, #236	; 0xec
    5580:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5584:	.word	0x0001f8d4
    5588:	.word	0x0001f83c
    558c:	.word	0x0001fd28
    5590:	.word	0x0001fa1c
    5594:	.word	0x0001f550
    5598:	.word	0x0001f52c
    559c:	.word	0x0001f5ac
    55a0:	.word	0x0001f464
    55a4:	.word	0x0001f758

000055a8 <read_double>:
    55a8:	push	{r4, r5, lr}
    55ac:	sub	sp, sp, #12
    55b0:	mov	r5, r1
    55b4:	mov	r2, #1
    55b8:	add	r1, sp, #7
    55bc:	mov	r4, r0
    55c0:	bl	10f90 <read_bytes>
    55c4:	cmp	r0, #1
    55c8:	movne	r0, #5
    55cc:	bne	55e0 <read_double+0x38>
    55d0:	mov	r1, r5
    55d4:	mov	r0, r4
    55d8:	ldrb	r2, [sp, #7]
    55dc:	bl	110a4 <read_double_with_peek>
    55e0:	add	sp, sp, #12
    55e4:	pop	{r4, r5, pc}

000055e8 <read_integer_in_range.constprop.1>:
    55e8:	push	{r4, r6, r7, lr}
    55ec:	vpush	{d8}
    55f0:	ldr	r7, [pc, #112]	; 5668 <read_integer_in_range.constprop.1+0x80>
    55f4:	mov	r6, #0
    55f8:	vmov	s16, r1
    55fc:	sub	sp, sp, #8
    5600:	add	r3, sp, #8
    5604:	mov	r4, r2
    5608:	strd	r6, [r3, #-8]!
    560c:	mov	r1, r3
    5610:	bl	55a8 <read_double>
    5614:	cmp	r0, #0
    5618:	bne	565c <read_integer_in_range.constprop.1+0x74>
    561c:	vldr	d7, [sp]
    5620:	vcmp.f64	d7, d7
    5624:	vmrs	APSR_nzcv, fpscr
    5628:	bvs	5658 <read_integer_in_range.constprop.1+0x70>
    562c:	vcmpe.f64	d7, #0.0
    5630:	vmrs	APSR_nzcv, fpscr
    5634:	bmi	5658 <read_integer_in_range.constprop.1+0x70>
    5638:	vcvt.f64.s32	d8, s16
    563c:	vcmpe.f64	d7, d8
    5640:	vmrs	APSR_nzcv, fpscr
    5644:	bgt	5658 <read_integer_in_range.constprop.1+0x70>
    5648:	cmp	r4, #0
    564c:	vcvtne.s32.f64	s14, d7
    5650:	vstrne	s14, [r4]
    5654:	b	565c <read_integer_in_range.constprop.1+0x74>
    5658:	mov	r0, #5
    565c:	add	sp, sp, #8
    5660:	vpop	{d8}
    5664:	pop	{r4, r6, r7, pc}
    5668:	.word	0x7ff80000

0000566c <por_emit_format>:
    566c:	vldr	s15, [r2]
    5670:	push	{r4, r5, r6, lr}
    5674:	mov	r4, r2
    5678:	mov	r5, r0
    567c:	vcvt.f64.s32	d0, s15
    5680:	mov	r6, r1
    5684:	bl	12f40 <por_write_double>
    5688:	cmp	r0, #0
    568c:	popne	{r4, r5, r6, pc}
    5690:	vldr	s15, [r4, #4]
    5694:	mov	r1, r6
    5698:	mov	r0, r5
    569c:	vcvt.f64.s32	d0, s15
    56a0:	bl	12f40 <por_write_double>
    56a4:	cmp	r0, #0
    56a8:	popne	{r4, r5, r6, pc}
    56ac:	vldr	s0, [r4, #8]
    56b0:	mov	r1, r6
    56b4:	mov	r0, r5
    56b8:	pop	{r4, r5, r6, lr}
    56bc:	vcvt.f64.s32	d0, s0
    56c0:	b	12f40 <por_write_double>

000056c4 <sav_read_pascal_string.constprop.5>:
    56c4:	push	{r4, r5, r6, r7, r8, lr}
    56c8:	mov	r5, r1
    56cc:	ldr	r1, [r1]
    56d0:	sub	sp, sp, #8
    56d4:	add	r4, r1, #4
    56d8:	add	r7, r1, r2
    56dc:	cmp	r7, r4
    56e0:	movcc	r4, r1
    56e4:	movcc	r0, #5
    56e8:	bcc	5738 <sav_read_pascal_string.constprop.5+0x74>
    56ec:	ldrb	r3, [r3, #436]	; 0x1b4
    56f0:	mov	r8, r0
    56f4:	ldr	r0, [r1]
    56f8:	tst	r3, #1
    56fc:	beq	5704 <sav_read_pascal_string.constprop.5+0x40>
    5700:	bl	3d94 <byteswap4@plt>
    5704:	add	r6, r4, r0
    5708:	cmp	r7, r6
    570c:	movcc	r0, #5
    5710:	bcc	5738 <sav_read_pascal_string.constprop.5+0x74>
    5714:	mov	r2, #0
    5718:	mov	r3, r0
    571c:	str	r2, [sp]
    5720:	mov	r0, r8
    5724:	mov	r2, r4
    5728:	ldr	r1, [pc, #20]	; 5744 <sav_read_pascal_string.constprop.5+0x80>
    572c:	bl	4238 <readstat_convert@plt>
    5730:	cmp	r0, #0
    5734:	moveq	r4, r6
    5738:	str	r4, [r5]
    573c:	add	sp, sp, #8
    5740:	pop	{r4, r5, r6, r7, r8, pc}
    5744:	.word	0x00000101

00005748 <sav_read_compressed_data.constprop.6>:
    5748:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    574c:	sub	sp, sp, #65536	; 0x10000
    5750:	sub	sp, sp, #68	; 0x44
    5754:	mov	r5, r0
    5758:	add	r4, sp, #64	; 0x40
    575c:	ldr	r7, [r0, #344]	; 0x158
    5760:	mov	r2, #56	; 0x38
    5764:	mov	r1, #0
    5768:	sub	r0, r4, #56	; 0x38
    576c:	ldr	fp, [r5, #36]	; 0x24
    5770:	bl	42a4 <memset@plt>
    5774:	add	r3, r5, #400	; 0x190
    5778:	ldrb	r1, [r5, #436]	; 0x1b4
    577c:	add	r9, r5, #416	; 0x1a0
    5780:	ldrd	r8, [r9]
    5784:	ldrd	r2, [r3, #-8]
    5788:	lsl	r7, r7, #3
    578c:	cmp	r7, #0
    5790:	and	r1, r1, #1
    5794:	strd	r8, [r4, #-32]	; 0xffffffe0
    5798:	strd	r2, [r4, #-40]	; 0xffffffd8
    579c:	str	r1, [r4, #-12]
    57a0:	moveq	r9, r7
    57a4:	beq	57b8 <sav_read_compressed_data.constprop.6+0x70>
    57a8:	mov	r0, r7
    57ac:	bl	422c <readstat_malloc@plt>
    57b0:	subs	r9, r0, #0
    57b4:	beq	58d8 <sav_read_compressed_data.constprop.6+0x190>
    57b8:	mov	r6, #0
    57bc:	sub	r3, r4, #56	; 0x38
    57c0:	str	r3, [sp, #4]
    57c4:	ldr	r3, [r5, #36]	; 0x24
    57c8:	ldr	r2, [r5, #40]	; 0x28
    57cc:	ldr	r1, [r5, #28]
    57d0:	ldr	r8, [r3, #16]
    57d4:	ldr	r0, [r5, #32]
    57d8:	ldr	r3, [r3, #20]
    57dc:	blx	r8
    57e0:	subs	r3, r0, #0
    57e4:	str	r3, [sp]
    57e8:	bne	58c0 <sav_read_compressed_data.constprop.6+0x178>
    57ec:	ldr	r2, [fp, #20]
    57f0:	ldr	r3, [fp, #12]
    57f4:	mov	r1, #65536	; 0x10000
    57f8:	mov	r0, r4
    57fc:	blx	r3
    5800:	add	r2, r0, #1
    5804:	cmp	r2, #1
    5808:	mov	sl, r0
    580c:	bls	58c0 <sav_read_compressed_data.constprop.6+0x178>
    5810:	tst	r0, #7
    5814:	bne	58c0 <sav_read_compressed_data.constprop.6+0x178>
    5818:	mov	r8, #0
    581c:	mov	r3, #1
    5820:	str	r3, [r4, #-8]
    5824:	ldr	r3, [r4, #-8]
    5828:	add	ip, r4, r8
    582c:	cmp	r3, #0
    5830:	sub	r8, sl, r8
    5834:	add	r1, r9, r6
    5838:	sub	r2, r7, r6
    583c:	ldr	r0, [sp, #4]
    5840:	beq	57c4 <sav_read_compressed_data.constprop.6+0x7c>
    5844:	str	r8, [r4, #-52]	; 0xffffffcc
    5848:	str	ip, [r4, #-56]	; 0xffffffc8
    584c:	str	r1, [r4, #-48]	; 0xffffffd0
    5850:	str	r2, [r4, #-44]	; 0xffffffd4
    5854:	bl	4214 <sav_decompress_row@plt>
    5858:	ldr	r3, [r4, #-8]
    585c:	ldr	r6, [r4, #-44]	; 0xffffffd4
    5860:	ldr	r8, [r4, #-52]	; 0xffffffcc
    5864:	cmp	r3, #2
    5868:	sub	r6, r7, r6
    586c:	sub	r8, sl, r8
    5870:	bne	5890 <sav_read_compressed_data.constprop.6+0x148>
    5874:	mov	r2, r5
    5878:	mov	r1, r7
    587c:	mov	r0, r9
    5880:	bl	15d74 <sav_process_row>
    5884:	mov	r6, #0
    5888:	cmp	r0, #0
    588c:	bne	58b8 <sav_read_compressed_data.constprop.6+0x170>
    5890:	ldr	r3, [r4, #-8]
    5894:	cmp	r3, #3
    5898:	beq	58c0 <sav_read_compressed_data.constprop.6+0x178>
    589c:	ldr	r3, [r5, #356]	; 0x164
    58a0:	cmp	r3, #0
    58a4:	ble	5824 <sav_read_compressed_data.constprop.6+0xdc>
    58a8:	ldr	r2, [r5, #364]	; 0x16c
    58ac:	cmp	r3, r2
    58b0:	bne	5824 <sav_read_compressed_data.constprop.6+0xdc>
    58b4:	b	58c0 <sav_read_compressed_data.constprop.6+0x178>
    58b8:	mov	sl, r0
    58bc:	b	58c4 <sav_read_compressed_data.constprop.6+0x17c>
    58c0:	ldr	sl, [sp]
    58c4:	cmp	r9, #0
    58c8:	beq	58dc <sav_read_compressed_data.constprop.6+0x194>
    58cc:	mov	r0, r9
    58d0:	bl	3ec0 <free@plt>
    58d4:	b	58dc <sav_read_compressed_data.constprop.6+0x194>
    58d8:	mov	sl, #3
    58dc:	mov	r0, sl
    58e0:	add	sp, sp, #65536	; 0x10000
    58e4:	add	sp, sp, #68	; 0x44
    58e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    58ec:	andeq	r0, r0, r0

000058f0 <dta_interpret_int32_bytes>:
    58f0:	push	{r4, r5, r6, lr}
    58f4:	mov	r5, r1
    58f8:	mov	r6, r2
    58fc:	mov	r1, #0
    5900:	mov	r2, #16
    5904:	mov	r4, r0
    5908:	bl	42a4 <memset@plt>
    590c:	ldrb	r3, [r5, #192]	; 0xc0
    5910:	ldr	r0, [r6]
    5914:	tst	r3, #1
    5918:	beq	5920 <dta_interpret_int32_bytes+0x30>
    591c:	bl	3d94 <byteswap4@plt>
    5920:	ldrb	r3, [r5, #192]	; 0xc0
    5924:	tst	r3, #2
    5928:	beq	5930 <dta_interpret_int32_bytes+0x40>
    592c:	bl	3efc <ones_to_twos_complement4@plt>
    5930:	ldr	r3, [r5, #196]	; 0xc4
    5934:	cmp	r3, r0
    5938:	movge	r3, #0
    593c:	movge	ip, r3
    5940:	movge	r1, r3
    5944:	bge	5974 <dta_interpret_int32_bytes+0x84>
    5948:	ldrb	r2, [r5, #192]	; 0xc0
    594c:	cmn	r0, #-2147483621	; 0x8000001b
    5950:	movle	r3, #0
    5954:	movgt	r3, #1
    5958:	ands	r3, r3, r2, lsr #3
    595c:	addne	r1, r0, #123	; 0x7b
    5960:	movne	r3, #1
    5964:	uxtbne	r1, r1
    5968:	movne	ip, #0
    596c:	moveq	r1, r3
    5970:	moveq	ip, #1
    5974:	ldrb	r2, [r4, #13]
    5978:	mov	lr, #3
    597c:	str	r0, [r4]
    5980:	and	r2, r2, #252	; 0xfc
    5984:	orr	r2, r2, ip
    5988:	orr	r3, r2, r3, lsl #1
    598c:	strb	r1, [r4, #12]
    5990:	strb	r3, [r4, #13]
    5994:	str	lr, [r4, #8]
    5998:	mov	r0, r4
    599c:	pop	{r4, r5, r6, pc}

000059a0 <dta_handle_row>:
    59a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    59a4:	vpush	{d8-d9}
    59a8:	vldr	d9, [pc, #872]	; 5d18 <dta_handle_row+0x378>
    59ac:	vldr	s16, [pc, #876]	; 5d20 <dta_handle_row+0x380>
    59b0:	mov	sl, #0
    59b4:	sub	sp, sp, #2272	; 0x8e0
    59b8:	sub	sp, sp, #4
    59bc:	add	r3, sp, #112	; 0x70
    59c0:	str	r3, [sp, #20]
    59c4:	add	r3, sp, #144	; 0x90
    59c8:	str	r3, [sp, #72]	; 0x48
    59cc:	ldr	r3, [sp, #20]
    59d0:	mov	fp, r0
    59d4:	sub	r3, r3, #4
    59d8:	str	r3, [sp, #80]	; 0x50
    59dc:	ldr	r3, [sp, #72]	; 0x48
    59e0:	mov	r4, r1
    59e4:	mov	r9, sl
    59e8:	sub	r3, r3, #8
    59ec:	str	r3, [sp, #84]	; 0x54
    59f0:	ldr	r3, [r4, #148]	; 0x94
    59f4:	cmp	r9, r3
    59f8:	bge	6058 <dta_handle_row+0x6b8>
    59fc:	add	r5, sp, #128	; 0x80
    5a00:	mov	r2, #16
    5a04:	mov	r1, #0
    5a08:	mov	r0, r5
    5a0c:	bl	42a4 <memset@plt>
    5a10:	ldr	r1, [r4, #28]
    5a14:	lsl	r2, r9, #1
    5a18:	add	r3, r5, #8
    5a1c:	ldrh	r0, [r1, r2]
    5a20:	ldr	r2, [sp, #80]	; 0x50
    5a24:	mov	r1, r4
    5a28:	bl	41e4 <dta_type_info@plt>
    5a2c:	cmp	r0, #0
    5a30:	bne	605c <dta_handle_row+0x6bc>
    5a34:	ldr	r3, [r4, #228]	; 0xe4
    5a38:	lsl	r2, r9, #2
    5a3c:	str	r2, [sp, #76]	; 0x4c
    5a40:	ldr	r3, [r3, r9, lsl #2]
    5a44:	ldr	r2, [sp, #108]	; 0x6c
    5a48:	ldr	r1, [r3, #2144]	; 0x860
    5a4c:	cmp	r1, #0
    5a50:	addne	sl, sl, r2
    5a54:	bne	6050 <dta_handle_row+0x6b0>
    5a58:	ldr	r3, [r4, #160]	; 0xa0
    5a5c:	add	r0, sl, r2
    5a60:	cmp	r0, r3
    5a64:	bhi	6040 <dta_handle_row+0x6a0>
    5a68:	ldr	r3, [sp, #136]	; 0x88
    5a6c:	cmp	r3, #0
    5a70:	addeq	r1, fp, sl
    5a74:	bne	5abc <dta_handle_row+0x11c>
    5a78:	cmp	r3, r2
    5a7c:	beq	5a90 <dta_handle_row+0xf0>
    5a80:	ldrb	r0, [r1, r3]
    5a84:	cmp	r0, #0
    5a88:	addne	r3, r3, #1
    5a8c:	bne	5a78 <dta_handle_row+0xd8>
    5a90:	ldr	r2, [r4, #236]	; 0xec
    5a94:	add	r5, sp, #224	; 0xe0
    5a98:	str	r2, [sp]
    5a9c:	mov	r0, r5
    5aa0:	add	r2, fp, sl
    5aa4:	mov	r1, #2048	; 0x800
    5aa8:	bl	4238 <readstat_convert@plt>
    5aac:	cmp	r0, #0
    5ab0:	bne	605c <dta_handle_row+0x6bc>
    5ab4:	str	r5, [sp, #128]	; 0x80
    5ab8:	b	5ff8 <dta_handle_row+0x658>
    5abc:	cmp	r3, #6
    5ac0:	bne	5c64 <dta_handle_row+0x2c4>
    5ac4:	ldr	r3, [r4, #112]	; 0x70
    5ac8:	add	r5, fp, sl
    5acc:	cmp	r3, #2
    5ad0:	bne	5bbc <dta_handle_row+0x21c>
    5ad4:	ldr	r3, [r4, #232]	; 0xe8
    5ad8:	ldrb	ip, [fp, sl]
    5adc:	cmp	r3, #2
    5ae0:	ldrb	lr, [r5, #1]
    5ae4:	ldrb	r6, [r5, #7]
    5ae8:	bne	5b58 <dta_handle_row+0x1b8>
    5aec:	ldrb	r2, [r5, #2]
    5af0:	ldrb	r3, [r5, #3]
    5af4:	str	r1, [sp, #48]	; 0x30
    5af8:	str	r1, [sp, #40]	; 0x28
    5afc:	str	r3, [sp, #52]	; 0x34
    5b00:	lsl	r3, r2, #8
    5b04:	ldrb	r2, [r5, #4]
    5b08:	str	r3, [sp, #44]	; 0x2c
    5b0c:	mov	r1, #0
    5b10:	str	r1, [sp, #28]
    5b14:	lsl	r3, r2, #24
    5b18:	str	r3, [sp, #24]
    5b1c:	ldrd	r0, [sp, #48]	; 0x30
    5b20:	ldrd	r2, [sp, #40]	; 0x28
    5b24:	ldrb	r8, [r5, #5]
    5b28:	ldrb	r5, [r5, #6]
    5b2c:	adds	r2, r2, r0
    5b30:	ldrd	r0, [sp, #24]
    5b34:	adds	r2, r2, r6
    5b38:	lsl	r8, r8, #16
    5b3c:	add	ip, lr, ip, lsl #8
    5b40:	adds	r0, r0, r2
    5b44:	adds	r2, r0, r8
    5b48:	lsl	r5, r5, #8
    5b4c:	uxth	r8, ip
    5b50:	adds	r2, r2, r5
    5b54:	b	5c08 <dta_handle_row+0x268>
    5b58:	ldrb	r3, [r5, #6]
    5b5c:	ldrb	r2, [r5, #5]
    5b60:	str	r1, [sp, #56]	; 0x38
    5b64:	str	r3, [sp, #60]	; 0x3c
    5b68:	mov	r3, #0
    5b6c:	str	r3, [sp, #36]	; 0x24
    5b70:	lsl	r3, r6, #8
    5b74:	str	r3, [sp, #68]	; 0x44
    5b78:	lsl	r3, r2, #24
    5b7c:	str	r3, [sp, #32]
    5b80:	str	r1, [sp, #64]	; 0x40
    5b84:	ldrd	r2, [sp, #32]
    5b88:	ldrd	r0, [sp, #56]	; 0x38
    5b8c:	ldrb	r7, [r5, #3]
    5b90:	ldrb	r6, [r5, #2]
    5b94:	ldrb	r5, [r5, #4]
    5b98:	adds	r2, r2, r0
    5b9c:	ldrd	r0, [sp, #64]	; 0x40
    5ba0:	add	ip, ip, lr, lsl #8
    5ba4:	add	r7, r6, r7, lsl #8
    5ba8:	adds	r0, r0, r2
    5bac:	add	r5, r7, r5, lsl #16
    5bb0:	uxth	r8, ip
    5bb4:	adds	r2, r0, r5
    5bb8:	b	5c08 <dta_handle_row+0x268>
    5bbc:	cmp	r3, #4
    5bc0:	movne	r8, r1
    5bc4:	movne	r2, #0
    5bc8:	bne	5c08 <dta_handle_row+0x268>
    5bcc:	ldrb	r3, [r4, #192]	; 0xc0
    5bd0:	ldr	r0, [r5]
    5bd4:	ldr	r5, [r5, #4]
    5bd8:	tst	r3, #1
    5bdc:	uxtheq	r8, r0
    5be0:	beq	5bec <dta_handle_row+0x24c>
    5be4:	bl	3d94 <byteswap4@plt>
    5be8:	uxth	r8, r0
    5bec:	ldrb	r3, [r4, #192]	; 0xc0
    5bf0:	tst	r3, #1
    5bf4:	beq	5c04 <dta_handle_row+0x264>
    5bf8:	mov	r0, r5
    5bfc:	bl	3d94 <byteswap4@plt>
    5c00:	mov	r5, r0
    5c04:	mov	r2, r5
    5c08:	ldr	r7, [r4, #216]	; 0xd8
    5c0c:	ldr	r5, [r4, #220]	; 0xdc
    5c10:	mov	lr, #0
    5c14:	add	r1, r5, lr
    5c18:	cmp	r5, lr
    5c1c:	lsr	r1, r1, #1
    5c20:	bls	5c58 <dta_handle_row+0x2b8>
    5c24:	ldr	r0, [r7, r1, lsl #2]
    5c28:	ldrh	r6, [r0]
    5c2c:	cmp	r6, r8
    5c30:	sub	ip, r8, r6
    5c34:	ldreq	ip, [r0, #8]
    5c38:	subeq	ip, r2, ip
    5c3c:	cmp	ip, #0
    5c40:	movlt	r5, r1
    5c44:	blt	5c14 <dta_handle_row+0x274>
    5c48:	addne	lr, r1, #1
    5c4c:	bne	5c14 <dta_handle_row+0x274>
    5c50:	add	r0, r0, #24
    5c54:	str	r0, [sp, #128]	; 0x80
    5c58:	mov	r3, #0
    5c5c:	str	r3, [sp, #136]	; 0x88
    5c60:	b	5ff8 <dta_handle_row+0x658>
    5c64:	cmp	r3, #1
    5c68:	bne	5d2c <dta_handle_row+0x38c>
    5c6c:	mov	r2, #16
    5c70:	add	r0, sp, #192	; 0xc0
    5c74:	bl	42a4 <memset@plt>
    5c78:	ldrb	r3, [r4, #192]	; 0xc0
    5c7c:	ldrb	r0, [fp, sl]
    5c80:	tst	r3, #2
    5c84:	beq	5c8c <dta_handle_row+0x2ec>
    5c88:	bl	4370 <ones_to_twos_complement1@plt>
    5c8c:	ldrsb	r3, [r4, #193]	; 0xc1
    5c90:	sxtb	r0, r0
    5c94:	cmp	r3, r0
    5c98:	movge	r3, #0
    5c9c:	movge	ip, r3
    5ca0:	movge	r1, r3
    5ca4:	bge	5cd4 <dta_handle_row+0x334>
    5ca8:	ldrb	r2, [r4, #192]	; 0xc0
    5cac:	cmp	r0, #101	; 0x65
    5cb0:	movle	r3, #0
    5cb4:	movgt	r3, #1
    5cb8:	ands	r3, r3, r2, lsr #3
    5cbc:	subne	r1, r0, #5
    5cc0:	movne	r3, #1
    5cc4:	uxtbne	r1, r1
    5cc8:	movne	ip, #0
    5ccc:	moveq	r1, r3
    5cd0:	moveq	ip, #1
    5cd4:	ldrb	r2, [sp, #205]	; 0xcd
    5cd8:	strb	r0, [sp, #192]	; 0xc0
    5cdc:	strb	r1, [sp, #204]	; 0xcc
    5ce0:	and	r2, r2, #252	; 0xfc
    5ce4:	orr	r2, r2, ip
    5ce8:	orr	r3, r2, r3, lsl #1
    5cec:	strb	r3, [sp, #205]	; 0xcd
    5cf0:	add	r3, sp, #192	; 0xc0
    5cf4:	mov	r2, #1
    5cf8:	str	r2, [sp, #200]	; 0xc8
    5cfc:	ldm	r3, {r0, r1, r2, r3}
    5d00:	ldr	ip, [sp, #72]	; 0x48
    5d04:	stm	ip, {r0, r1, r2, r3}
    5d08:	ldm	ip, {r0, r1, r2, r3}
    5d0c:	add	ip, sp, #128	; 0x80
    5d10:	stm	ip, {r0, r1, r2, r3}
    5d14:	b	5ff8 <dta_handle_row+0x658>
    5d18:	.word	0x00000000
    5d1c:	.word	0x7ff80000
    5d20:	.word	0x7fc00000
    5d24:	.word	0x00007fe5
    5d28:	.word	0x7fe00000
    5d2c:	cmp	r3, #2
    5d30:	bne	5df0 <dta_handle_row+0x450>
    5d34:	mov	r2, #16
    5d38:	add	r0, sp, #192	; 0xc0
    5d3c:	bl	42a4 <memset@plt>
    5d40:	ldrb	r3, [r4, #192]	; 0xc0
    5d44:	ldrh	r0, [fp, sl]
    5d48:	tst	r3, #1
    5d4c:	beq	5d54 <dta_handle_row+0x3b4>
    5d50:	bl	3ea8 <byteswap2@plt>
    5d54:	ldrb	r3, [r4, #192]	; 0xc0
    5d58:	sxth	r0, r0
    5d5c:	tst	r3, #2
    5d60:	beq	5d68 <dta_handle_row+0x3c8>
    5d64:	bl	3f08 <ones_to_twos_complement2@plt>
    5d68:	ldrsh	r3, [r4, #194]	; 0xc2
    5d6c:	cmp	r3, r0
    5d70:	movge	r3, #0
    5d74:	movge	ip, r3
    5d78:	movge	r1, r3
    5d7c:	bge	5db0 <dta_handle_row+0x410>
    5d80:	ldr	r3, [pc, #-100]	; 5d24 <dta_handle_row+0x384>
    5d84:	ldrb	r2, [r4, #192]	; 0xc0
    5d88:	cmp	r0, r3
    5d8c:	movle	r3, #0
    5d90:	movgt	r3, #1
    5d94:	ands	r3, r3, r2, lsr #3
    5d98:	addne	r1, r0, #123	; 0x7b
    5d9c:	movne	r3, #1
    5da0:	uxtbne	r1, r1
    5da4:	movne	ip, #0
    5da8:	moveq	r1, r3
    5dac:	moveq	ip, #1
    5db0:	ldrb	r2, [sp, #205]	; 0xcd
    5db4:	strb	r1, [sp, #204]	; 0xcc
    5db8:	strh	r0, [sp, #192]	; 0xc0
    5dbc:	and	r2, r2, #252	; 0xfc
    5dc0:	orr	r2, r2, ip
    5dc4:	orr	r3, r2, r3, lsl #1
    5dc8:	strb	r3, [sp, #205]	; 0xcd
    5dcc:	add	r3, sp, #192	; 0xc0
    5dd0:	mov	r2, #2
    5dd4:	str	r2, [sp, #200]	; 0xc8
    5dd8:	ldm	r3, {r0, r1, r2, r3}
    5ddc:	add	ip, sp, #160	; 0xa0
    5de0:	stm	ip, {r0, r1, r2, r3}
    5de4:	add	ip, sp, #128	; 0x80
    5de8:	stm	ip, {r0, r1, r2, r3}
    5dec:	b	5ff8 <dta_handle_row+0x658>
    5df0:	cmp	r3, #3
    5df4:	bne	5e18 <dta_handle_row+0x478>
    5df8:	add	r6, sp, #88	; 0x58
    5dfc:	mov	r0, r6
    5e00:	add	r2, fp, sl
    5e04:	mov	r1, r4
    5e08:	bl	58f0 <dta_interpret_int32_bytes>
    5e0c:	ldm	r6, {r0, r1, r2, r3}
    5e10:	stm	r5, {r0, r1, r2, r3}
    5e14:	b	5ff8 <dta_handle_row+0x658>
    5e18:	cmp	r3, #4
    5e1c:	bne	5ee8 <dta_handle_row+0x548>
    5e20:	mov	r2, #16
    5e24:	mov	r1, #0
    5e28:	add	r0, sp, #192	; 0xc0
    5e2c:	bl	42a4 <memset@plt>
    5e30:	ldrb	r3, [r4, #192]	; 0xc0
    5e34:	ldr	r0, [fp, sl]
    5e38:	vstr	s16, [sp, #120]	; 0x78
    5e3c:	tst	r3, #1
    5e40:	beq	5e48 <dta_handle_row+0x4a8>
    5e44:	bl	3d94 <byteswap4@plt>
    5e48:	ldr	r3, [r4, #200]	; 0xc8
    5e4c:	cmp	r3, r0
    5e50:	bge	5e94 <dta_handle_row+0x4f4>
    5e54:	ldrb	r3, [r4, #192]	; 0xc0
    5e58:	cmp	r0, #2130706432	; 0x7f000000
    5e5c:	movle	r2, #0
    5e60:	movgt	r2, #1
    5e64:	ands	r2, r2, r3, lsr #3
    5e68:	moveq	r3, r2
    5e6c:	moveq	r1, #1
    5e70:	beq	5ea4 <dta_handle_row+0x504>
    5e74:	add	r3, r0, #-2130706432	; 0x81000000
    5e78:	sub	r3, r3, #2048	; 0x800
    5e7c:	mov	r2, #1
    5e80:	asr	r3, r3, #11
    5e84:	add	r3, r3, #97	; 0x61
    5e88:	mov	r1, #0
    5e8c:	uxtb	r3, r3
    5e90:	b	5ea4 <dta_handle_row+0x504>
    5e94:	mov	r2, #0
    5e98:	mov	r1, r2
    5e9c:	mov	r3, r2
    5ea0:	str	r0, [sp, #120]	; 0x78
    5ea4:	ldrb	r0, [sp, #205]	; 0xcd
    5ea8:	ldr	lr, [sp, #120]	; 0x78
    5eac:	strb	r3, [sp, #204]	; 0xcc
    5eb0:	and	r0, r0, #252	; 0xfc
    5eb4:	orr	r0, r0, r1
    5eb8:	add	r1, sp, #192	; 0xc0
    5ebc:	orr	r2, r0, r2, lsl #1
    5ec0:	mov	r0, #4
    5ec4:	str	lr, [sp, #192]	; 0xc0
    5ec8:	strb	r2, [sp, #205]	; 0xcd
    5ecc:	str	r0, [sp, #200]	; 0xc8
    5ed0:	ldm	r1, {r0, r1, r2, r3}
    5ed4:	add	ip, sp, #128	; 0x80
    5ed8:	add	lr, sp, #176	; 0xb0
    5edc:	stm	ip, {r0, r1, r2, r3}
    5ee0:	stm	lr, {r0, r1, r2, r3}
    5ee4:	b	5ff8 <dta_handle_row+0x658>
    5ee8:	cmp	r3, #5
    5eec:	bne	5ff8 <dta_handle_row+0x658>
    5ef0:	mov	r2, #16
    5ef4:	mov	r1, #0
    5ef8:	add	r0, sp, #192	; 0xc0
    5efc:	bl	42a4 <memset@plt>
    5f00:	ldrb	r2, [r4, #192]	; 0xc0
    5f04:	add	r3, fp, sl
    5f08:	add	r5, sp, #128	; 0x80
    5f0c:	ldr	r0, [r3]
    5f10:	ldr	r1, [r3, #4]
    5f14:	tst	r2, #1
    5f18:	ldr	r2, [sp, #20]
    5f1c:	add	r3, sp, #120	; 0x78
    5f20:	vstr	d9, [r2]
    5f24:	stmia	r3!, {r0, r1}
    5f28:	beq	5f38 <dta_handle_row+0x598>
    5f2c:	ldrd	r0, [sp, #120]	; 0x78
    5f30:	bl	3d7c <byteswap8@plt>
    5f34:	strd	r0, [r5, #-8]
    5f38:	ldrd	r2, [r4, #208]	; 0xd0
    5f3c:	ldrd	r0, [sp, #120]	; 0x78
    5f40:	cmp	r2, r0
    5f44:	sbcs	r3, r3, r1
    5f48:	bge	5fa0 <dta_handle_row+0x600>
    5f4c:	ldrb	lr, [r4, #192]	; 0xc0
    5f50:	mov	r2, #0
    5f54:	ldr	r3, [pc, #-564]	; 5d28 <dta_handle_row+0x388>
    5f58:	cmp	r2, r0
    5f5c:	sbcs	r3, r3, r1
    5f60:	movlt	ip, #1
    5f64:	movge	ip, #0
    5f68:	ands	ip, ip, lr, lsr #3
    5f6c:	moveq	r3, ip
    5f70:	moveq	r1, #1
    5f74:	beq	5fb4 <dta_handle_row+0x614>
    5f78:	add	r3, pc, #240	; 0xf0
    5f7c:	ldrd	r2, [r3]
    5f80:	mov	ip, #1
    5f84:	adds	r2, r2, r0
    5f88:	adc	r3, r3, r1
    5f8c:	mov	r1, #0
    5f90:	asr	r3, r3, #8
    5f94:	add	r3, r3, #97	; 0x61
    5f98:	uxtb	r3, r3
    5f9c:	b	5fb4 <dta_handle_row+0x614>
    5fa0:	ldr	r3, [sp, #20]
    5fa4:	mov	ip, #0
    5fa8:	strd	r0, [r3]
    5fac:	mov	r1, ip
    5fb0:	mov	r3, ip
    5fb4:	ldr	r2, [sp, #20]
    5fb8:	strb	r3, [sp, #204]	; 0xcc
    5fbc:	add	r3, sp, #192	; 0xc0
    5fc0:	ldrd	r6, [r2]
    5fc4:	ldrb	r2, [sp, #205]	; 0xcd
    5fc8:	strd	r6, [sp, #192]	; 0xc0
    5fcc:	and	r2, r2, #252	; 0xfc
    5fd0:	orr	r2, r2, r1
    5fd4:	orr	ip, r2, ip, lsl #1
    5fd8:	mov	r2, #5
    5fdc:	strb	ip, [sp, #205]	; 0xcd
    5fe0:	str	r2, [sp, #200]	; 0xc8
    5fe4:	ldm	r3, {r0, r1, r2, r3}
    5fe8:	add	ip, sp, #208	; 0xd0
    5fec:	stm	ip, {r0, r1, r2, r3}
    5ff0:	add	ip, sp, #128	; 0x80
    5ff4:	stm	ip, {r0, r1, r2, r3}
    5ff8:	ldr	r3, [sp, #84]	; 0x54
    5ffc:	ldr	ip, [r4, #228]	; 0xe4
    6000:	ldm	r3, {r0, r1}
    6004:	ldr	r3, [r4, #276]	; 0x114
    6008:	stm	sp, {r0, r1}
    600c:	ldr	r1, [sp, #76]	; 0x4c
    6010:	str	r3, [sp, #8]
    6014:	add	r3, sp, #128	; 0x80
    6018:	ldr	r1, [ip, r1]
    601c:	ldm	r3, {r2, r3}
    6020:	ldr	r5, [r4, #256]	; 0x100
    6024:	ldr	r0, [r4, #184]	; 0xb8
    6028:	blx	r5
    602c:	cmp	r0, #0
    6030:	bne	6048 <dta_handle_row+0x6a8>
    6034:	ldr	r3, [sp, #108]	; 0x6c
    6038:	add	sl, sl, r3
    603c:	b	6050 <dta_handle_row+0x6b0>
    6040:	mov	r0, #5
    6044:	b	605c <dta_handle_row+0x6bc>
    6048:	mov	r0, #4
    604c:	b	605c <dta_handle_row+0x6bc>
    6050:	add	r9, r9, #1
    6054:	b	59f0 <dta_handle_row+0x50>
    6058:	mov	r0, #0
    605c:	add	sp, sp, #2272	; 0x8e0
    6060:	add	sp, sp, #4
    6064:	vpop	{d8-d9}
    6068:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    606c:	nop			; (mov r0, r0)
    6070:	.word	0x00000000
    6074:	.word	0x801fff00

00006078 <call_weak_fn>:
    6078:	ldr	r3, [pc, #20]	; 6094 <call_weak_fn+0x1c>
    607c:	ldr	r2, [pc, #20]	; 6098 <call_weak_fn+0x20>
    6080:	add	r3, pc, r3
    6084:	ldr	r2, [r3, r2]
    6088:	cmp	r2, #0
    608c:	bxeq	lr
    6090:	b	419c <__gmon_start__@plt>
    6094:	.word	0x0003df78
    6098:	.word	0x000002e4

0000609c <deregister_tm_clones>:
    609c:	ldr	r3, [pc, #52]	; 60d8 <deregister_tm_clones+0x3c>
    60a0:	ldr	r0, [pc, #52]	; 60dc <deregister_tm_clones+0x40>
    60a4:	add	r3, pc, r3
    60a8:	add	r0, pc, r0
    60ac:	add	r3, r3, #3
    60b0:	sub	r3, r3, r0
    60b4:	cmp	r3, #6
    60b8:	ldr	r3, [pc, #32]	; 60e0 <deregister_tm_clones+0x44>
    60bc:	add	r3, pc, r3
    60c0:	bxls	lr
    60c4:	ldr	r2, [pc, #24]	; 60e4 <deregister_tm_clones+0x48>
    60c8:	ldr	r3, [r3, r2]
    60cc:	cmp	r3, #0
    60d0:	bxeq	lr
    60d4:	bx	r3
    60d8:	.word	0x0003fc78
    60dc:	.word	0x0003fc74
    60e0:	.word	0x0003df3c
    60e4:	.word	0x000002cc

000060e8 <register_tm_clones>:
    60e8:	ldr	r1, [pc, #56]	; 6128 <register_tm_clones+0x40>
    60ec:	ldr	r0, [pc, #56]	; 612c <register_tm_clones+0x44>
    60f0:	add	r1, pc, r1
    60f4:	add	r0, pc, r0
    60f8:	sub	r1, r1, r0
    60fc:	ldr	r3, [pc, #44]	; 6130 <register_tm_clones+0x48>
    6100:	asr	r1, r1, #2
    6104:	add	r3, pc, r3
    6108:	add	r1, r1, r1, lsr #31
    610c:	asrs	r1, r1, #1
    6110:	bxeq	lr
    6114:	ldr	r2, [pc, #24]	; 6134 <register_tm_clones+0x4c>
    6118:	ldr	r3, [r3, r2]
    611c:	cmp	r3, #0
    6120:	bxeq	lr
    6124:	bx	r3
    6128:	.word	0x0003fc2c
    612c:	.word	0x0003fc28
    6130:	.word	0x0003def4
    6134:	.word	0x00000310

00006138 <__do_global_dtors_aux>:
    6138:	ldr	r3, [pc, #76]	; 618c <__do_global_dtors_aux+0x54>
    613c:	ldr	r2, [pc, #76]	; 6190 <__do_global_dtors_aux+0x58>
    6140:	add	r3, pc, r3
    6144:	add	r2, pc, r2
    6148:	ldrb	r3, [r3]
    614c:	cmp	r3, #0
    6150:	bxne	lr
    6154:	ldr	r3, [pc, #56]	; 6194 <__do_global_dtors_aux+0x5c>
    6158:	push	{r4, lr}
    615c:	ldr	r3, [r2, r3]
    6160:	cmp	r3, #0
    6164:	beq	6174 <__do_global_dtors_aux+0x3c>
    6168:	ldr	r3, [pc, #40]	; 6198 <__do_global_dtors_aux+0x60>
    616c:	ldr	r0, [pc, r3]
    6170:	bl	3e0c <__cxa_finalize@plt>
    6174:	bl	609c <deregister_tm_clones>
    6178:	ldr	r3, [pc, #28]	; 619c <__do_global_dtors_aux+0x64>
    617c:	mov	r2, #1
    6180:	add	r3, pc, r3
    6184:	strb	r2, [r3]
    6188:	pop	{r4, pc}
    618c:	.word	0x0003fbdc
    6190:	.word	0x0003deb4
    6194:	.word	0x000002c8
    6198:	.word	0x0003e1a4
    619c:	.word	0x0003fb9c

000061a0 <frame_dummy>:
    61a0:	ldr	r0, [pc, #56]	; 61e0 <frame_dummy+0x40>
    61a4:	ldr	r3, [pc, #56]	; 61e4 <frame_dummy+0x44>
    61a8:	add	r0, pc, r0
    61ac:	ldr	r2, [r0]
    61b0:	add	r3, pc, r3
    61b4:	cmp	r2, #0
    61b8:	bne	61c0 <frame_dummy+0x20>
    61bc:	b	60e8 <register_tm_clones>
    61c0:	ldr	r2, [pc, #32]	; 61e8 <frame_dummy+0x48>
    61c4:	ldr	r3, [r3, r2]
    61c8:	cmp	r3, #0
    61cc:	beq	61bc <frame_dummy+0x1c>
    61d0:	push	{r4, lr}
    61d4:	blx	r3
    61d8:	pop	{r4, lr}
    61dc:	b	60e8 <register_tm_clones>
    61e0:	.word	0x0003dd54
    61e4:	.word	0x0003de48
    61e8:	.word	0x00000304
    61ec:	.word	0x00000000

000061f0 <ck_hash_str>:
    61f0:	ldrb	ip, [r0]
    61f4:	cmp	ip, #0
    61f8:	beq	6238 <ck_hash_str+0x48>
    61fc:	push	{r4, r5, lr}
    6200:	add	lr, r0, #1
    6204:	ldr	r0, [pc, #56]	; 6244 <ck_hash_str+0x54>
    6208:	mov	r1, #0
    620c:	lsl	r2, r0, #5
    6210:	adds	r4, r2, ip
    6214:	lsl	r3, r1, #5
    6218:	ldrb	ip, [lr], #1
    621c:	orr	r3, r3, r0, lsr #27
    6220:	adc	r5, r3, #0
    6224:	adds	r0, r0, r4
    6228:	adc	r1, r1, r5
    622c:	cmp	ip, #0
    6230:	bne	620c <ck_hash_str+0x1c>
    6234:	pop	{r4, r5, pc}
    6238:	ldr	r0, [pc, #4]	; 6244 <ck_hash_str+0x54>
    623c:	mov	r1, #0
    6240:	bx	lr
    6244:	.word	0x00001505

00006248 <ck_str_n_hash_lookup>:
    6248:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    624c:	sub	sp, sp, #12
    6250:	ldrd	r4, [r2, #8]
    6254:	orrs	r3, r4, r5
    6258:	beq	638c <ck_str_n_hash_lookup+0x144>
    625c:	sub	r3, r1, #1
    6260:	cmp	r3, #126	; 0x7e
    6264:	bhi	638c <ck_str_n_hash_lookup+0x144>
    6268:	ldrb	r3, [r0]
    626c:	add	ip, r0, #1
    6270:	ldr	r4, [pc, #288]	; 6398 <ck_str_n_hash_lookup+0x150>
    6274:	cmp	r3, #0
    6278:	mov	r5, #0
    627c:	beq	62a8 <ck_str_n_hash_lookup+0x60>
    6280:	lsl	r8, r4, #5
    6284:	adds	r6, r8, r3
    6288:	lsl	r9, r5, #5
    628c:	ldrb	r3, [ip], #1
    6290:	orr	r9, r9, r4, lsr #27
    6294:	adc	r7, r9, #0
    6298:	adds	r4, r4, r6
    629c:	adc	r5, r5, r7
    62a0:	cmp	r3, #0
    62a4:	bne	6280 <ck_str_n_hash_lookup+0x38>
    62a8:	ldrd	r8, [r2]
    62ac:	mov	fp, r1
    62b0:	mov	sl, r0
    62b4:	mov	r1, r5
    62b8:	mov	r0, r4
    62bc:	mov	r6, r2
    62c0:	mov	r3, r9
    62c4:	mov	r2, r8
    62c8:	bl	239c0 <__aeabi_uldivmod>
    62cc:	mov	r4, r2
    62d0:	mov	r5, r3
    62d4:	subs	r0, r4, #1
    62d8:	sbc	r1, r5, #0
    62dc:	mov	r2, r8
    62e0:	mov	r3, r9
    62e4:	bl	239c0 <__aeabi_uldivmod>
    62e8:	cmp	r5, r3
    62ec:	cmpeq	r4, r2
    62f0:	strd	r2, [sp]
    62f4:	beq	638c <ck_str_n_hash_lookup+0x144>
    62f8:	add	r3, r4, r4, lsl #5
    62fc:	ldr	r7, [r6, #16]
    6300:	lsl	r3, r3, #2
    6304:	add	r6, r7, r3
    6308:	ldrb	r0, [r7, r3]
    630c:	cmp	r0, #0
    6310:	beq	6384 <ck_str_n_hash_lookup+0x13c>
    6314:	add	fp, fp, #1
    6318:	mov	r3, sl
    631c:	mov	sl, fp
    6320:	mov	fp, r3
    6324:	b	6360 <ck_str_n_hash_lookup+0x118>
    6328:	adds	r0, r4, #1
    632c:	adc	r1, r5, #0
    6330:	bl	239c0 <__aeabi_uldivmod>
    6334:	mov	r4, r2
    6338:	mov	r5, r3
    633c:	ldrd	r2, [sp]
    6340:	add	r6, r4, r4, lsl #5
    6344:	cmp	r3, r5
    6348:	cmpeq	r2, r4
    634c:	beq	638c <ck_str_n_hash_lookup+0x144>
    6350:	ldrb	r0, [r7, r6, lsl #2]
    6354:	add	r6, r7, r6, lsl #2
    6358:	cmp	r0, #0
    635c:	beq	6384 <ck_str_n_hash_lookup+0x13c>
    6360:	mov	r2, sl
    6364:	mov	r1, fp
    6368:	mov	r0, r6
    636c:	bl	44fc <strncmp@plt>
    6370:	mov	r2, r8
    6374:	mov	r3, r9
    6378:	cmp	r0, #0
    637c:	bne	6328 <ck_str_n_hash_lookup+0xe0>
    6380:	ldr	r0, [r6, #128]	; 0x80
    6384:	add	sp, sp, #12
    6388:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    638c:	mov	r0, #0
    6390:	add	sp, sp, #12
    6394:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6398:	.word	0x00001505

0000639c <ck_float_hash_lookup>:
    639c:	push	{r4, r5, r6, lr}
    63a0:	vmov	lr, s0
    63a4:	mov	r2, r0
    63a8:	sub	sp, sp, #8
    63ac:	mov	r4, #0
    63b0:	lsr	ip, lr, #8
    63b4:	uxtb	r5, lr
    63b8:	uxtb	ip, ip
    63bc:	and	r0, ip, #2
    63c0:	and	r3, r5, #1
    63c4:	orr	r3, r3, r0
    63c8:	lsr	r0, lr, #16
    63cc:	mvn	r3, r3, lsl #28
    63d0:	uxtb	r0, r0
    63d4:	and	r6, r0, #4
    63d8:	lsr	lr, lr, #24
    63dc:	mvn	r3, r3, lsr #28
    63e0:	orr	r3, r3, r6
    63e4:	orr	r6, ip, #2
    63e8:	orr	ip, r0, #4
    63ec:	and	r0, lr, #8
    63f0:	orr	r3, r3, r0
    63f4:	orr	lr, lr, #8
    63f8:	mov	r1, #5
    63fc:	orr	r5, r5, #1
    6400:	mov	r0, sp
    6404:	strb	r6, [sp, #1]
    6408:	strb	r5, [sp]
    640c:	strb	ip, [sp, #2]
    6410:	strb	r3, [sp, #4]
    6414:	strb	lr, [sp, #3]
    6418:	strb	r4, [sp, #5]
    641c:	bl	4064 <ck_str_n_hash_lookup@plt>
    6420:	add	sp, sp, #8
    6424:	pop	{r4, r5, r6, pc}

00006428 <ck_double_hash_lookup>:
    6428:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    642c:	sub	sp, sp, #24
    6430:	mov	r2, r0
    6434:	vstr	d0, [sp]
    6438:	add	r3, sp, #12
    643c:	mvn	r9, #15
    6440:	ldm	sp, {r0, r1}
    6444:	stm	r3, {r0, r1}
    6448:	ldrb	r5, [sp, #12]
    644c:	ldrb	ip, [sp, #13]
    6450:	ldrb	r8, [sp, #14]
    6454:	ldrb	sl, [sp, #16]
    6458:	ldrb	r6, [sp, #17]
    645c:	and	r7, ip, #2
    6460:	and	r4, r5, #1
    6464:	ldrb	r1, [sp, #15]
    6468:	orr	r4, r4, r7
    646c:	orr	r4, r4, r9
    6470:	orr	ip, ip, #2
    6474:	and	r7, r8, #4
    6478:	ldrb	lr, [sp, #18]
    647c:	strb	ip, [sp, #13]
    6480:	orr	r7, r4, r7
    6484:	and	ip, r6, #2
    6488:	orr	r4, r8, #4
    648c:	mov	r0, r3
    6490:	and	r3, sl, #1
    6494:	strb	r4, [sp, #14]
    6498:	orr	r3, r3, ip
    649c:	and	r4, r1, #8
    64a0:	ldrb	ip, [sp, #19]
    64a4:	orr	r4, r7, r4
    64a8:	strb	r4, [sp, #20]
    64ac:	orr	r3, r3, r9
    64b0:	and	r4, lr, #4
    64b4:	orr	r1, r1, #8
    64b8:	strb	r1, [sp, #15]
    64bc:	orr	r5, r5, #1
    64c0:	and	r1, ip, #8
    64c4:	orr	r3, r3, r4
    64c8:	orr	r3, r3, r1
    64cc:	strb	r5, [sp, #12]
    64d0:	orr	lr, lr, #4
    64d4:	orr	ip, ip, #8
    64d8:	orr	r5, sl, #1
    64dc:	orr	r6, r6, #2
    64e0:	mov	r4, #0
    64e4:	mov	r1, #10
    64e8:	strb	r5, [sp, #16]
    64ec:	strb	r6, [sp, #17]
    64f0:	strb	lr, [sp, #18]
    64f4:	strb	r3, [sp, #21]
    64f8:	strb	ip, [sp, #19]
    64fc:	strb	r4, [sp, #22]
    6500:	bl	4064 <ck_str_n_hash_lookup@plt>
    6504:	add	sp, sp, #24
    6508:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

0000650c <ck_str_hash_lookup>:
    650c:	push	{r4, r5, r6, lr}
    6510:	mov	r5, r1
    6514:	mov	r4, r0
    6518:	bl	41fc <strlen@plt>
    651c:	mov	r2, r5
    6520:	cmp	r0, #127	; 0x7f
    6524:	movcc	r1, r0
    6528:	movcs	r1, #127	; 0x7f
    652c:	mov	r0, r4
    6530:	pop	{r4, r5, r6, lr}
    6534:	b	4064 <ck_str_n_hash_lookup@plt>

00006538 <ck_hash_table_free>:
    6538:	push	{r4, lr}
    653c:	mov	r4, r0
    6540:	ldr	r0, [r0, #16]
    6544:	bl	3ec0 <free@plt>
    6548:	mov	r0, r4
    654c:	pop	{r4, lr}
    6550:	b	3ec0 <free@plt>

00006554 <ck_hash_table_wipe>:
    6554:	ldr	r2, [r0]
    6558:	mov	r1, #0
    655c:	ldr	r0, [r0, #16]
    6560:	add	r2, r2, r2, lsl #5
    6564:	lsl	r2, r2, #2
    6568:	b	42a4 <memset@plt>

0000656c <ck_hash_table_init>:
    656c:	push	{r4, r5, r6, lr}
    6570:	mov	r5, r0
    6574:	mov	r0, #24
    6578:	bl	410c <malloc@plt>
    657c:	subs	r4, r0, #0
    6580:	beq	65c4 <ck_hash_table_init+0x58>
    6584:	lsl	r6, r5, #1
    6588:	add	r0, r6, r5, lsl #6
    658c:	lsl	r0, r0, #2
    6590:	bl	410c <malloc@plt>
    6594:	cmp	r0, #0
    6598:	mov	r5, r0
    659c:	str	r0, [r4, #16]
    65a0:	beq	65cc <ck_hash_table_init+0x60>
    65a4:	mov	r0, #0
    65a8:	mov	r1, #0
    65ac:	mov	r3, #0
    65b0:	strd	r0, [r4, #8]
    65b4:	str	r6, [r4]
    65b8:	str	r3, [r4, #4]
    65bc:	mov	r0, r4
    65c0:	bl	3e18 <ck_hash_table_wipe@plt>
    65c4:	mov	r0, r4
    65c8:	pop	{r4, r5, r6, pc}
    65cc:	mov	r0, r4
    65d0:	bl	3ec0 <free@plt>
    65d4:	mov	r4, r5
    65d8:	b	65c4 <ck_hash_table_init+0x58>

000065dc <ck_hash_table_grow>:
    65dc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    65e0:	mov	r1, #132	; 0x84
    65e4:	ldrd	r8, [r0]
    65e8:	mov	r5, r0
    65ec:	ldr	sl, [r0, #16]
    65f0:	adds	r6, r8, r8
    65f4:	mov	r0, r6
    65f8:	adc	r7, r9, r9
    65fc:	bl	3d58 <calloc@plt>
    6600:	cmp	r0, #0
    6604:	str	r0, [r5, #16]
    6608:	beq	6670 <ck_hash_table_grow+0x94>
    660c:	mov	r2, #0
    6610:	orrs	r3, r8, r9
    6614:	stm	r5, {r6, r7}
    6618:	str	r2, [r5, #8]
    661c:	str	r2, [r5, #12]
    6620:	movne	r6, r2
    6624:	movne	r7, r2
    6628:	movne	r4, sl
    662c:	bne	664c <ck_hash_table_grow+0x70>
    6630:	b	6678 <ck_hash_table_grow+0x9c>
    6634:	adds	r6, r6, #1
    6638:	adc	r7, r7, #0
    663c:	cmp	r7, r9
    6640:	cmpeq	r6, r8
    6644:	add	r4, r4, #132	; 0x84
    6648:	beq	6678 <ck_hash_table_grow+0x9c>
    664c:	ldrb	r3, [r4]
    6650:	cmp	r3, #0
    6654:	beq	6634 <ck_hash_table_grow+0x58>
    6658:	mov	r2, r5
    665c:	ldr	r1, [r4, #128]	; 0x80
    6660:	mov	r0, r4
    6664:	bl	44f0 <ck_str_hash_insert@plt>
    6668:	cmp	r0, #0
    666c:	bne	6634 <ck_hash_table_grow+0x58>
    6670:	mvn	r0, #0
    6674:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    6678:	mov	r0, sl
    667c:	bl	3ec0 <free@plt>
    6680:	mov	r0, #0
    6684:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00006688 <ck_str_n_hash_insert>:
    6688:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    668c:	vpush	{d8}
    6690:	ldrd	r6, [r3]
    6694:	sub	sp, sp, #28
    6698:	orrs	ip, r6, r7
    669c:	strd	r6, [sp]
    66a0:	beq	683c <ck_str_n_hash_insert+0x1b4>
    66a4:	sub	ip, r1, #1
    66a8:	cmp	ip, #126	; 0x7e
    66ac:	bhi	683c <ck_str_n_hash_insert+0x1b4>
    66b0:	str	r1, [sp, #16]
    66b4:	mov	r9, r0
    66b8:	ldrd	r0, [r3, #8]
    66bc:	str	r2, [sp, #20]
    66c0:	mov	r8, r3
    66c4:	bl	23878 <__aeabi_ul2d>
    66c8:	vmov	d8, r0, r1
    66cc:	ldrd	r0, [sp]
    66d0:	bl	23878 <__aeabi_ul2d>
    66d4:	vldr	d7, [pc, #428]	; 6888 <ck_str_n_hash_insert+0x200>
    66d8:	vmov	d6, r0, r1
    66dc:	vmul.f64	d7, d6, d7
    66e0:	vcmpe.f64	d8, d7
    66e4:	vmrs	APSR_nzcv, fpscr
    66e8:	bge	6868 <ck_str_n_hash_insert+0x1e0>
    66ec:	ldrb	ip, [r9]
    66f0:	add	lr, r9, #1
    66f4:	ldr	r0, [pc, #404]	; 6890 <ck_str_n_hash_insert+0x208>
    66f8:	cmp	ip, #0
    66fc:	mov	r1, #0
    6700:	beq	672c <ck_str_n_hash_insert+0xa4>
    6704:	lsl	r4, r0, #5
    6708:	adds	r2, r4, ip
    670c:	lsl	r5, r1, #5
    6710:	ldrb	ip, [lr], #1
    6714:	orr	r5, r5, r0, lsr #27
    6718:	adc	r3, r5, #0
    671c:	adds	r0, r0, r2
    6720:	adc	r1, r1, r3
    6724:	cmp	ip, #0
    6728:	bne	6704 <ck_str_n_hash_insert+0x7c>
    672c:	ldrd	r4, [sp]
    6730:	mov	r2, r4
    6734:	mov	r3, r5
    6738:	bl	239c0 <__aeabi_uldivmod>
    673c:	mov	r6, r2
    6740:	mov	r7, r3
    6744:	orrs	r3, r6, r7
    6748:	bne	684c <ck_str_n_hash_insert+0x1c4>
    674c:	ldrd	r2, [sp]
    6750:	subs	r2, r2, #1
    6754:	sbc	r3, r3, #0
    6758:	strd	r2, [sp, #8]
    675c:	ldrd	r2, [sp, #8]
    6760:	cmp	r7, r3
    6764:	cmpeq	r6, r2
    6768:	beq	683c <ck_str_n_hash_insert+0x1b4>
    676c:	add	r4, r6, r6, lsl #5
    6770:	ldr	r5, [r8, #16]
    6774:	lsl	r4, r4, #2
    6778:	add	sl, r5, r4
    677c:	ldrb	r3, [r5, r4]
    6780:	cmp	r3, #0
    6784:	beq	67e8 <ck_str_n_hash_insert+0x160>
    6788:	ldr	r3, [sp, #16]
    678c:	add	fp, r3, #1
    6790:	mov	r2, fp
    6794:	mov	r1, r9
    6798:	mov	r0, sl
    679c:	bl	44fc <strncmp@plt>
    67a0:	ldrd	r2, [sp]
    67a4:	cmp	r0, #0
    67a8:	beq	67f8 <ck_str_n_hash_insert+0x170>
    67ac:	adds	r0, r6, #1
    67b0:	adc	r1, r7, #0
    67b4:	bl	239c0 <__aeabi_uldivmod>
    67b8:	mov	r6, r2
    67bc:	mov	r7, r3
    67c0:	ldrd	r2, [sp, #8]
    67c4:	add	r4, r6, r6, lsl #5
    67c8:	cmp	r7, r3
    67cc:	cmpeq	r6, r2
    67d0:	beq	683c <ck_str_n_hash_insert+0x1b4>
    67d4:	ldrb	r3, [r5, r4, lsl #2]
    67d8:	lsl	r4, r4, #2
    67dc:	add	sl, r5, r4
    67e0:	cmp	r3, #0
    67e4:	bne	6790 <ck_str_n_hash_insert+0x108>
    67e8:	ldrd	r2, [r8, #8]
    67ec:	adds	r2, r2, #1
    67f0:	adc	r3, r3, #0
    67f4:	strd	r2, [r8, #8]
    67f8:	ldr	r5, [sp, #16]
    67fc:	mov	r1, r9
    6800:	mov	r2, r5
    6804:	mov	r0, sl
    6808:	bl	3f20 <memcpy@plt>
    680c:	ldr	r3, [r8, #16]
    6810:	mov	r2, #0
    6814:	add	r3, r3, r4
    6818:	mov	r0, #1
    681c:	strb	r2, [r3, r5]
    6820:	ldr	r3, [r8, #16]
    6824:	add	r4, r3, r4
    6828:	ldr	r3, [sp, #20]
    682c:	str	r3, [r4, #128]	; 0x80
    6830:	add	sp, sp, #28
    6834:	vpop	{d8}
    6838:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    683c:	mov	r0, #0
    6840:	add	sp, sp, #28
    6844:	vpop	{d8}
    6848:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    684c:	subs	r0, r6, #1
    6850:	mov	r2, r4
    6854:	mov	r3, r5
    6858:	sbc	r1, r7, #0
    685c:	bl	239c0 <__aeabi_uldivmod>
    6860:	strd	r2, [sp, #8]
    6864:	b	675c <ck_str_n_hash_insert+0xd4>
    6868:	mov	r0, r8
    686c:	bl	3fec <ck_hash_table_grow@plt>
    6870:	cmn	r0, #1
    6874:	beq	683c <ck_str_n_hash_insert+0x1b4>
    6878:	ldrd	r2, [r8]
    687c:	strd	r2, [sp]
    6880:	b	66ec <ck_str_n_hash_insert+0x64>
    6884:	nop			; (mov r0, r0)
    6888:	.word	0x00000000
    688c:	.word	0x3fe80000
    6890:	.word	0x00001505

00006894 <ck_float_hash_insert>:
    6894:	push	{r4, r5, r6, lr}
    6898:	vmov	r5, s0
    689c:	mov	r3, r1
    68a0:	mov	r2, r0
    68a4:	sub	sp, sp, #8
    68a8:	lsr	lr, r5, #8
    68ac:	uxtb	r6, r5
    68b0:	uxtb	lr, lr
    68b4:	and	r0, lr, #2
    68b8:	and	r1, r6, #1
    68bc:	orr	r1, r1, r0
    68c0:	lsr	r0, r5, #16
    68c4:	mvn	r1, r1, lsl #28
    68c8:	uxtb	r0, r0
    68cc:	and	ip, r0, #4
    68d0:	mvn	r1, r1, lsr #28
    68d4:	orr	r1, r1, ip
    68d8:	lsr	r5, r5, #24
    68dc:	orr	ip, lr, #2
    68e0:	strb	ip, [sp, #1]
    68e4:	and	ip, r5, #8
    68e8:	orr	lr, r0, #4
    68ec:	orr	ip, r1, ip
    68f0:	mov	r4, #0
    68f4:	orr	r6, r6, #1
    68f8:	orr	r5, r5, #8
    68fc:	mov	r1, #5
    6900:	mov	r0, sp
    6904:	strb	r6, [sp]
    6908:	strb	lr, [sp, #2]
    690c:	strb	ip, [sp, #4]
    6910:	strb	r5, [sp, #3]
    6914:	strb	r4, [sp, #5]
    6918:	bl	4298 <ck_str_n_hash_insert@plt>
    691c:	add	sp, sp, #8
    6920:	pop	{r4, r5, r6, pc}

00006924 <ck_double_hash_insert>:
    6924:	push	{r4, r5, r6, r7, r8, r9, lr}
    6928:	sub	sp, sp, #28
    692c:	mov	r2, r0
    6930:	vstr	d0, [sp]
    6934:	mov	r3, r1
    6938:	add	ip, sp, #12
    693c:	mvn	r5, #15
    6940:	ldm	sp, {r0, r1}
    6944:	stm	ip, {r0, r1}
    6948:	ldrb	r7, [sp, #12]
    694c:	ldrb	r9, [sp, #13]
    6950:	ldrb	r8, [sp, #14]
    6954:	and	r1, r7, #1
    6958:	orr	r7, r7, #1
    695c:	strb	r7, [sp, #12]
    6960:	mov	r0, ip
    6964:	ldrb	r7, [sp, #15]
    6968:	and	ip, r9, #2
    696c:	ldrb	r6, [sp, #16]
    6970:	ldrb	r4, [sp, #17]
    6974:	orr	r1, r1, ip
    6978:	orr	r1, r1, r5
    697c:	and	ip, r8, #4
    6980:	orr	r8, r8, #4
    6984:	strb	r8, [sp, #14]
    6988:	orr	r1, r1, ip
    698c:	and	r8, r7, #8
    6990:	orr	r1, r1, r8
    6994:	and	ip, r6, #1
    6998:	and	r8, r4, #2
    699c:	ldrb	lr, [sp, #18]
    69a0:	orr	ip, ip, r8
    69a4:	orr	ip, ip, r5
    69a8:	ldrb	r5, [sp, #19]
    69ac:	strb	r1, [sp, #20]
    69b0:	and	r1, lr, #4
    69b4:	orr	r6, r6, #1
    69b8:	orr	ip, ip, r1
    69bc:	and	r1, r5, #8
    69c0:	orr	ip, ip, r1
    69c4:	orr	lr, lr, #4
    69c8:	strb	r6, [sp, #16]
    69cc:	orr	r9, r9, #2
    69d0:	orr	r7, r7, #8
    69d4:	orr	r4, r4, #2
    69d8:	orr	r5, r5, #8
    69dc:	mov	r6, #0
    69e0:	mov	r1, #10
    69e4:	strb	r9, [sp, #13]
    69e8:	strb	r7, [sp, #15]
    69ec:	strb	r4, [sp, #17]
    69f0:	strb	lr, [sp, #18]
    69f4:	strb	ip, [sp, #21]
    69f8:	strb	r5, [sp, #19]
    69fc:	strb	r6, [sp, #22]
    6a00:	bl	4298 <ck_str_n_hash_insert@plt>
    6a04:	add	sp, sp, #28
    6a08:	pop	{r4, r5, r6, r7, r8, r9, pc}

00006a0c <ck_str_hash_insert>:
    6a0c:	push	{r4, r5, r6, lr}
    6a10:	mov	r5, r1
    6a14:	mov	r6, r2
    6a18:	mov	r4, r0
    6a1c:	bl	41fc <strlen@plt>
    6a20:	mov	r3, r6
    6a24:	mov	r2, r5
    6a28:	cmp	r0, #127	; 0x7f
    6a2c:	movcc	r1, r0
    6a30:	movcs	r1, #127	; 0x7f
    6a34:	mov	r0, r4
    6a38:	pop	{r4, r5, r6, lr}
    6a3c:	b	4298 <ck_str_n_hash_insert@plt>

00006a40 <machine_is_little_endian>:
    6a40:	mov	r0, #1
    6a44:	bx	lr

00006a48 <ones_to_twos_complement1>:
    6a48:	bx	lr

00006a4c <ones_to_twos_complement2>:
    6a4c:	cmp	r0, #0
    6a50:	addlt	r0, r0, #1
    6a54:	sxthlt	r0, r0
    6a58:	bx	lr

00006a5c <ones_to_twos_complement4>:
    6a5c:	cmp	r0, #0
    6a60:	addlt	r0, r0, #1
    6a64:	bx	lr

00006a68 <twos_to_ones_complement1>:
    6a68:	bx	lr

00006a6c <twos_to_ones_complement2>:
    6a6c:	cmp	r0, #0
    6a70:	sublt	r0, r0, #1
    6a74:	sxthlt	r0, r0
    6a78:	bx	lr

00006a7c <twos_to_ones_complement4>:
    6a7c:	cmp	r0, #0
    6a80:	sublt	r0, r0, #1
    6a84:	bx	lr

00006a88 <byteswap2>:
    6a88:	rev16	r0, r0
    6a8c:	uxth	r0, r0
    6a90:	bx	lr

00006a94 <byteswap4>:
    6a94:	rev	r0, r0
    6a98:	bx	lr

00006a9c <byteswap8>:
    6a9c:	rev	r3, r0
    6aa0:	rev	r0, r1
    6aa4:	mov	r1, r3
    6aa8:	bx	lr

00006aac <byteswap_float>:
    6aac:	push	{r4, lr}
    6ab0:	vmov	r0, s0
    6ab4:	bl	3d94 <byteswap4@plt>
    6ab8:	vmov	s0, r0
    6abc:	pop	{r4, pc}

00006ac0 <byteswap_double>:
    6ac0:	push	{r4, lr}
    6ac4:	vmov	r0, r1, d0
    6ac8:	bl	3d7c <byteswap8@plt>
    6acc:	vmov	d0, r0, r1
    6ad0:	pop	{r4, pc}

00006ad4 <readstat_convert>:
    6ad4:	push	{r4, r5, r6, lr}
    6ad8:	sub	sp, sp, #24
    6adc:	subs	r4, r3, #0
    6ae0:	mov	r6, r0
    6ae4:	mov	r5, r1
    6ae8:	str	r2, [sp, #12]
    6aec:	str	r3, [sp, #8]
    6af0:	beq	6b30 <readstat_convert+0x5c>
    6af4:	sub	r3, r4, #1
    6af8:	add	r1, r2, r3
    6afc:	ldrb	r2, [r2, r3]
    6b00:	cmp	r2, #32
    6b04:	bne	6b34 <readstat_convert+0x60>
    6b08:	mov	r2, r1
    6b0c:	b	6b24 <readstat_convert+0x50>
    6b10:	ldrb	r1, [r2, #-1]!
    6b14:	sub	r0, r3, #1
    6b18:	cmp	r1, #32
    6b1c:	bne	6b48 <readstat_convert+0x74>
    6b20:	mov	r3, r0
    6b24:	cmp	r3, #0
    6b28:	str	r3, [sp, #8]
    6b2c:	bne	6b10 <readstat_convert+0x3c>
    6b30:	mov	r4, #0
    6b34:	cmp	r5, #0
    6b38:	bne	6b54 <readstat_convert+0x80>
    6b3c:	mov	r0, #19
    6b40:	add	sp, sp, #24
    6b44:	pop	{r4, r5, r6, pc}
    6b48:	cmp	r5, #0
    6b4c:	mov	r4, r3
    6b50:	beq	6b3c <readstat_convert+0x68>
    6b54:	ldr	r3, [sp, #40]	; 0x28
    6b58:	cmp	r3, #0
    6b5c:	beq	6bd8 <readstat_convert+0x104>
    6b60:	add	r3, sp, #24
    6b64:	add	r2, sp, #16
    6b68:	str	r6, [r3, #-4]!
    6b6c:	sub	ip, r5, #1
    6b70:	str	r2, [sp]
    6b74:	add	r1, sp, #12
    6b78:	add	r2, sp, #8
    6b7c:	ldr	r0, [sp, #40]	; 0x28
    6b80:	str	ip, [sp, #16]
    6b84:	bl	3de8 <iconv@plt>
    6b88:	cmn	r0, #1
    6b8c:	beq	6bac <readstat_convert+0xd8>
    6b90:	ldr	r3, [sp, #16]
    6b94:	add	r5, r6, r5
    6b98:	mvn	r3, r3
    6b9c:	mov	r0, #0
    6ba0:	strb	r0, [r5, r3]
    6ba4:	add	sp, sp, #24
    6ba8:	pop	{r4, r5, r6, pc}
    6bac:	bl	4268 <__errno_location@plt>
    6bb0:	ldr	r3, [r0]
    6bb4:	cmp	r3, #7
    6bb8:	beq	6b3c <readstat_convert+0x68>
    6bbc:	cmp	r3, #84	; 0x54
    6bc0:	moveq	r0, #17
    6bc4:	beq	6b40 <readstat_convert+0x6c>
    6bc8:	cmp	r3, #22
    6bcc:	movne	r0, #16
    6bd0:	bne	6b40 <readstat_convert+0x6c>
    6bd4:	b	6b90 <readstat_convert+0xbc>
    6bd8:	add	r3, r4, #1
    6bdc:	cmp	r5, r3
    6be0:	bcc	6b3c <readstat_convert+0x68>
    6be4:	mov	r2, r4
    6be8:	ldr	r1, [sp, #12]
    6bec:	mov	r0, r6
    6bf0:	bl	3f20 <memcpy@plt>
    6bf4:	ldrb	r3, [sp, #40]	; 0x28
    6bf8:	ldr	r0, [sp, #40]	; 0x28
    6bfc:	strb	r3, [r6, r4]
    6c00:	b	6b40 <readstat_convert+0x6c>

00006c04 <readstat_error_message>:
    6c04:	cmp	r0, #0
    6c08:	bxeq	lr
    6c0c:	cmp	r0, #1
    6c10:	beq	6d5c <readstat_error_message+0x158>
    6c14:	cmp	r0, #2
    6c18:	beq	6d68 <readstat_error_message+0x164>
    6c1c:	cmp	r0, #3
    6c20:	beq	6d50 <readstat_error_message+0x14c>
    6c24:	cmp	r0, #4
    6c28:	beq	6d74 <readstat_error_message+0x170>
    6c2c:	cmp	r0, #5
    6c30:	beq	6d80 <readstat_error_message+0x17c>
    6c34:	cmp	r0, #6
    6c38:	beq	6d8c <readstat_error_message+0x188>
    6c3c:	cmp	r0, #7
    6c40:	beq	6d98 <readstat_error_message+0x194>
    6c44:	cmp	r0, #8
    6c48:	beq	6db0 <readstat_error_message+0x1ac>
    6c4c:	cmp	r0, #9
    6c50:	beq	6dbc <readstat_error_message+0x1b8>
    6c54:	cmp	r0, #10
    6c58:	beq	6dc8 <readstat_error_message+0x1c4>
    6c5c:	cmp	r0, #11
    6c60:	beq	6dd4 <readstat_error_message+0x1d0>
    6c64:	cmp	r0, #12
    6c68:	beq	6de0 <readstat_error_message+0x1dc>
    6c6c:	cmp	r0, #13
    6c70:	beq	6dec <readstat_error_message+0x1e8>
    6c74:	cmp	r0, #14
    6c78:	beq	6da4 <readstat_error_message+0x1a0>
    6c7c:	cmp	r0, #15
    6c80:	beq	6df8 <readstat_error_message+0x1f4>
    6c84:	cmp	r0, #16
    6c88:	beq	6e04 <readstat_error_message+0x200>
    6c8c:	cmp	r0, #17
    6c90:	beq	6e10 <readstat_error_message+0x20c>
    6c94:	cmp	r0, #18
    6c98:	beq	6e1c <readstat_error_message+0x218>
    6c9c:	cmp	r0, #19
    6ca0:	beq	6e28 <readstat_error_message+0x224>
    6ca4:	cmp	r0, #20
    6ca8:	beq	6e34 <readstat_error_message+0x230>
    6cac:	cmp	r0, #21
    6cb0:	beq	6e40 <readstat_error_message+0x23c>
    6cb4:	cmp	r0, #22
    6cb8:	beq	6e4c <readstat_error_message+0x248>
    6cbc:	cmp	r0, #23
    6cc0:	beq	6e58 <readstat_error_message+0x254>
    6cc4:	cmp	r0, #24
    6cc8:	beq	6e64 <readstat_error_message+0x260>
    6ccc:	cmp	r0, #25
    6cd0:	beq	6e70 <readstat_error_message+0x26c>
    6cd4:	cmp	r0, #26
    6cd8:	beq	6e7c <readstat_error_message+0x278>
    6cdc:	cmp	r0, #27
    6ce0:	beq	6e88 <readstat_error_message+0x284>
    6ce4:	cmp	r0, #28
    6ce8:	beq	6e94 <readstat_error_message+0x290>
    6cec:	cmp	r0, #38	; 0x26
    6cf0:	beq	6ea0 <readstat_error_message+0x29c>
    6cf4:	cmp	r0, #29
    6cf8:	beq	6eac <readstat_error_message+0x2a8>
    6cfc:	cmp	r0, #30
    6d00:	beq	6ec4 <readstat_error_message+0x2c0>
    6d04:	cmp	r0, #31
    6d08:	beq	6eb8 <readstat_error_message+0x2b4>
    6d0c:	cmp	r0, #32
    6d10:	beq	6f00 <readstat_error_message+0x2fc>
    6d14:	cmp	r0, #33	; 0x21
    6d18:	beq	6ef4 <readstat_error_message+0x2f0>
    6d1c:	cmp	r0, #34	; 0x22
    6d20:	beq	6ee8 <readstat_error_message+0x2e4>
    6d24:	cmp	r0, #35	; 0x23
    6d28:	beq	6edc <readstat_error_message+0x2d8>
    6d2c:	cmp	r0, #36	; 0x24
    6d30:	beq	6ed0 <readstat_error_message+0x2cc>
    6d34:	cmp	r0, #37	; 0x25
    6d38:	beq	6f18 <readstat_error_message+0x314>
    6d3c:	cmp	r0, #39	; 0x27
    6d40:	beq	6f0c <readstat_error_message+0x308>
    6d44:	ldr	r0, [pc, #472]	; 6f24 <readstat_error_message+0x320>
    6d48:	add	r0, pc, r0
    6d4c:	bx	lr
    6d50:	ldr	r0, [pc, #464]	; 6f28 <readstat_error_message+0x324>
    6d54:	add	r0, pc, r0
    6d58:	bx	lr
    6d5c:	ldr	r0, [pc, #456]	; 6f2c <readstat_error_message+0x328>
    6d60:	add	r0, pc, r0
    6d64:	bx	lr
    6d68:	ldr	r0, [pc, #448]	; 6f30 <readstat_error_message+0x32c>
    6d6c:	add	r0, pc, r0
    6d70:	bx	lr
    6d74:	ldr	r0, [pc, #440]	; 6f34 <readstat_error_message+0x330>
    6d78:	add	r0, pc, r0
    6d7c:	bx	lr
    6d80:	ldr	r0, [pc, #432]	; 6f38 <readstat_error_message+0x334>
    6d84:	add	r0, pc, r0
    6d88:	bx	lr
    6d8c:	ldr	r0, [pc, #424]	; 6f3c <readstat_error_message+0x338>
    6d90:	add	r0, pc, r0
    6d94:	bx	lr
    6d98:	ldr	r0, [pc, #416]	; 6f40 <readstat_error_message+0x33c>
    6d9c:	add	r0, pc, r0
    6da0:	bx	lr
    6da4:	ldr	r0, [pc, #408]	; 6f44 <readstat_error_message+0x340>
    6da8:	add	r0, pc, r0
    6dac:	bx	lr
    6db0:	ldr	r0, [pc, #400]	; 6f48 <readstat_error_message+0x344>
    6db4:	add	r0, pc, r0
    6db8:	bx	lr
    6dbc:	ldr	r0, [pc, #392]	; 6f4c <readstat_error_message+0x348>
    6dc0:	add	r0, pc, r0
    6dc4:	bx	lr
    6dc8:	ldr	r0, [pc, #384]	; 6f50 <readstat_error_message+0x34c>
    6dcc:	add	r0, pc, r0
    6dd0:	bx	lr
    6dd4:	ldr	r0, [pc, #376]	; 6f54 <readstat_error_message+0x350>
    6dd8:	add	r0, pc, r0
    6ddc:	bx	lr
    6de0:	ldr	r0, [pc, #368]	; 6f58 <readstat_error_message+0x354>
    6de4:	add	r0, pc, r0
    6de8:	bx	lr
    6dec:	ldr	r0, [pc, #360]	; 6f5c <readstat_error_message+0x358>
    6df0:	add	r0, pc, r0
    6df4:	bx	lr
    6df8:	ldr	r0, [pc, #352]	; 6f60 <readstat_error_message+0x35c>
    6dfc:	add	r0, pc, r0
    6e00:	bx	lr
    6e04:	ldr	r0, [pc, #344]	; 6f64 <readstat_error_message+0x360>
    6e08:	add	r0, pc, r0
    6e0c:	bx	lr
    6e10:	ldr	r0, [pc, #336]	; 6f68 <readstat_error_message+0x364>
    6e14:	add	r0, pc, r0
    6e18:	bx	lr
    6e1c:	ldr	r0, [pc, #328]	; 6f6c <readstat_error_message+0x368>
    6e20:	add	r0, pc, r0
    6e24:	bx	lr
    6e28:	ldr	r0, [pc, #320]	; 6f70 <readstat_error_message+0x36c>
    6e2c:	add	r0, pc, r0
    6e30:	bx	lr
    6e34:	ldr	r0, [pc, #312]	; 6f74 <readstat_error_message+0x370>
    6e38:	add	r0, pc, r0
    6e3c:	bx	lr
    6e40:	ldr	r0, [pc, #304]	; 6f78 <readstat_error_message+0x374>
    6e44:	add	r0, pc, r0
    6e48:	bx	lr
    6e4c:	ldr	r0, [pc, #296]	; 6f7c <readstat_error_message+0x378>
    6e50:	add	r0, pc, r0
    6e54:	bx	lr
    6e58:	ldr	r0, [pc, #288]	; 6f80 <readstat_error_message+0x37c>
    6e5c:	add	r0, pc, r0
    6e60:	bx	lr
    6e64:	ldr	r0, [pc, #280]	; 6f84 <readstat_error_message+0x380>
    6e68:	add	r0, pc, r0
    6e6c:	bx	lr
    6e70:	ldr	r0, [pc, #272]	; 6f88 <readstat_error_message+0x384>
    6e74:	add	r0, pc, r0
    6e78:	bx	lr
    6e7c:	ldr	r0, [pc, #264]	; 6f8c <readstat_error_message+0x388>
    6e80:	add	r0, pc, r0
    6e84:	bx	lr
    6e88:	ldr	r0, [pc, #256]	; 6f90 <readstat_error_message+0x38c>
    6e8c:	add	r0, pc, r0
    6e90:	bx	lr
    6e94:	ldr	r0, [pc, #248]	; 6f94 <readstat_error_message+0x390>
    6e98:	add	r0, pc, r0
    6e9c:	bx	lr
    6ea0:	ldr	r0, [pc, #240]	; 6f98 <readstat_error_message+0x394>
    6ea4:	add	r0, pc, r0
    6ea8:	bx	lr
    6eac:	ldr	r0, [pc, #232]	; 6f9c <readstat_error_message+0x398>
    6eb0:	add	r0, pc, r0
    6eb4:	bx	lr
    6eb8:	ldr	r0, [pc, #224]	; 6fa0 <readstat_error_message+0x39c>
    6ebc:	add	r0, pc, r0
    6ec0:	bx	lr
    6ec4:	ldr	r0, [pc, #216]	; 6fa4 <readstat_error_message+0x3a0>
    6ec8:	add	r0, pc, r0
    6ecc:	bx	lr
    6ed0:	ldr	r0, [pc, #208]	; 6fa8 <readstat_error_message+0x3a4>
    6ed4:	add	r0, pc, r0
    6ed8:	bx	lr
    6edc:	ldr	r0, [pc, #200]	; 6fac <readstat_error_message+0x3a8>
    6ee0:	add	r0, pc, r0
    6ee4:	bx	lr
    6ee8:	ldr	r0, [pc, #192]	; 6fb0 <readstat_error_message+0x3ac>
    6eec:	add	r0, pc, r0
    6ef0:	bx	lr
    6ef4:	ldr	r0, [pc, #184]	; 6fb4 <readstat_error_message+0x3b0>
    6ef8:	add	r0, pc, r0
    6efc:	bx	lr
    6f00:	ldr	r0, [pc, #176]	; 6fb8 <readstat_error_message+0x3b4>
    6f04:	add	r0, pc, r0
    6f08:	bx	lr
    6f0c:	ldr	r0, [pc, #168]	; 6fbc <readstat_error_message+0x3b8>
    6f10:	add	r0, pc, r0
    6f14:	bx	lr
    6f18:	ldr	r0, [pc, #160]	; 6fc0 <readstat_error_message+0x3bc>
    6f1c:	add	r0, pc, r0
    6f20:	bx	lr
    6f24:	.word	0x0001d6ac
    6f28:	.word	0x0001ce84
    6f2c:	.word	0x0001ce48
    6f30:	.word	0x0001ce50
    6f34:	.word	0x0001ce7c
    6f38:	.word	0x0001ceac
    6f3c:	.word	0x0001ced0
    6f40:	.word	0x0001ceec
    6f44:	.word	0x0001d030
    6f48:	.word	0x0001cefc
    6f4c:	.word	0x0001cf24
    6f50:	.word	0x0001cf4c
    6f54:	.word	0x0001cf70
    6f58:	.word	0x0001cf98
    6f5c:	.word	0x0001cfd0
    6f60:	.word	0x0001d048
    6f64:	.word	0x0001d058
    6f68:	.word	0x0001d080
    6f6c:	.word	0x0001d0c0
    6f70:	.word	0x0001d104
    6f74:	.word	0x0001d148
    6f78:	.word	0x0001d1a0
    6f7c:	.word	0x0001d1f0
    6f80:	.word	0x0001d240
    6f84:	.word	0x0001d27c
    6f88:	.word	0x0001d2a4
    6f8c:	.word	0x0001d2cc
    6f90:	.word	0x0001d2f0
    6f94:	.word	0x0001d308
    6f98:	.word	0x0001d32c
    6f9c:	.word	0x0001d344
    6fa0:	.word	0x0001d39c
    6fa4:	.word	0x0001d354
    6fa8:	.word	0x0001d4a0
    6fac:	.word	0x0001d464
    6fb0:	.word	0x0001d424
    6fb4:	.word	0x0001d3d4
    6fb8:	.word	0x0001d394
    6fbc:	.word	0x0001d4bc
    6fc0:	.word	0x0001d480

00006fc4 <unistd_open_handler>:
    6fc4:	push	{r4, lr}
    6fc8:	mov	r4, r1
    6fcc:	mov	r1, #0
    6fd0:	bl	41a8 <open@plt>
    6fd4:	str	r0, [r4]
    6fd8:	pop	{r4, pc}

00006fdc <unistd_close_handler>:
    6fdc:	ldr	r0, [r0]
    6fe0:	cmn	r0, #1
    6fe4:	beq	6fec <unistd_close_handler+0x10>
    6fe8:	b	4514 <close@plt>
    6fec:	mov	r0, #0
    6ff0:	bx	lr

00006ff4 <unistd_seek_handler>:
    6ff4:	cmp	r1, #1
    6ff8:	mov	r3, r2
    6ffc:	beq	700c <unistd_seek_handler+0x18>
    7000:	bcc	7024 <unistd_seek_handler+0x30>
    7004:	cmp	r1, #2
    7008:	bne	701c <unistd_seek_handler+0x28>
    700c:	mov	r2, r1
    7010:	mov	r1, r0
    7014:	ldr	r0, [r3]
    7018:	b	3f74 <lseek@plt>
    701c:	mvn	r0, #0
    7020:	bx	lr
    7024:	mov	r1, r0
    7028:	mov	r2, #0
    702c:	ldr	r0, [r3]
    7030:	b	3f74 <lseek@plt>

00007034 <unistd_update_handler>:
    7034:	push	{r4, r5, r6, lr}
    7038:	sub	sp, sp, #8
    703c:	subs	r5, r1, #0
    7040:	str	r0, [sp, #4]
    7044:	beq	709c <unistd_update_handler+0x68>
    7048:	mov	r6, r2
    704c:	mov	r4, r0
    7050:	mov	r2, #1
    7054:	ldr	r0, [r3]
    7058:	mov	r1, #0
    705c:	bl	3f74 <lseek@plt>
    7060:	cmn	r0, #1
    7064:	moveq	r0, #15
    7068:	bne	7074 <unistd_update_handler+0x40>
    706c:	add	sp, sp, #8
    7070:	pop	{r4, r5, r6, pc}
    7074:	vmov	s15, r0
    7078:	mov	r0, r6
    707c:	vcvt.f64.s32	d0, s15
    7080:	vmov	s15, r4
    7084:	vcvt.f64.s32	d7, s15
    7088:	vdiv.f64	d0, d0, d7
    708c:	blx	r5
    7090:	cmp	r0, #0
    7094:	movne	r0, #4
    7098:	bne	706c <unistd_update_handler+0x38>
    709c:	mov	r0, #0
    70a0:	add	sp, sp, #8
    70a4:	pop	{r4, r5, r6, pc}

000070a8 <unistd_read_handler>:
    70a8:	ldr	r3, [r2]
    70ac:	mov	r2, r1
    70b0:	mov	r1, r0
    70b4:	mov	r0, r3
    70b8:	b	3e3c <read@plt>

000070bc <unistd_io_init>:
    70bc:	push	{r4, r5, r6, lr}
    70c0:	mov	r6, r0
    70c4:	ldr	r4, [pc, #180]	; 7180 <unistd_io_init+0xc4>
    70c8:	ldr	r3, [pc, #180]	; 7184 <unistd_io_init+0xc8>
    70cc:	add	r4, pc, r4
    70d0:	ldr	r1, [r4, r3]
    70d4:	bl	3d70 <readstat_set_open_handler@plt>
    70d8:	subs	r5, r0, #0
    70dc:	beq	70e8 <unistd_io_init+0x2c>
    70e0:	mov	r0, r5
    70e4:	pop	{r4, r5, r6, pc}
    70e8:	ldr	r3, [pc, #152]	; 7188 <unistd_io_init+0xcc>
    70ec:	mov	r0, r6
    70f0:	ldr	r1, [r4, r3]
    70f4:	bl	446c <readstat_set_close_handler@plt>
    70f8:	subs	r5, r0, #0
    70fc:	bne	70e0 <unistd_io_init+0x24>
    7100:	ldr	r3, [pc, #132]	; 718c <unistd_io_init+0xd0>
    7104:	mov	r0, r6
    7108:	ldr	r1, [r4, r3]
    710c:	bl	3d64 <readstat_set_seek_handler@plt>
    7110:	subs	r5, r0, #0
    7114:	bne	70e0 <unistd_io_init+0x24>
    7118:	ldr	r3, [pc, #112]	; 7190 <unistd_io_init+0xd4>
    711c:	mov	r0, r6
    7120:	ldr	r1, [r4, r3]
    7124:	bl	4334 <readstat_set_read_handler@plt>
    7128:	subs	r5, r0, #0
    712c:	bne	70e0 <unistd_io_init+0x24>
    7130:	ldr	r3, [pc, #92]	; 7194 <unistd_io_init+0xd8>
    7134:	mov	r0, r6
    7138:	ldr	r1, [r4, r3]
    713c:	bl	3e90 <readstat_set_update_handler@plt>
    7140:	cmp	r0, #0
    7144:	bne	70e0 <unistd_io_init+0x24>
    7148:	mov	r1, #4
    714c:	mov	r0, #1
    7150:	bl	3d58 <calloc@plt>
    7154:	mvn	r2, #0
    7158:	mov	r3, r0
    715c:	mov	r1, r0
    7160:	str	r2, [r3]
    7164:	mov	r0, r6
    7168:	bl	40e8 <readstat_set_io_ctx@plt>
    716c:	ldr	r3, [r6, #32]
    7170:	mov	r2, #1
    7174:	str	r2, [r3, #24]
    7178:	mov	r5, r0
    717c:	b	70e0 <unistd_io_init+0x24>
    7180:	.word	0x0003cf2c
    7184:	.word	0x000002dc
    7188:	.word	0x0000030c
    718c:	.word	0x00000308
    7190:	.word	0x000002c0
    7194:	.word	0x000002f8

00007198 <readstat_malloc>:
    7198:	ldr	r3, [pc, #20]	; 71b4 <readstat_malloc+0x1c>
    719c:	sub	r2, r0, #1
    71a0:	cmp	r2, r3
    71a4:	bhi	71ac <readstat_malloc+0x14>
    71a8:	b	410c <malloc@plt>
    71ac:	mov	r0, #0
    71b0:	bx	lr
    71b4:	.word	0x00ffefff

000071b8 <readstat_calloc>:
    71b8:	push	{lr}		; (str lr, [sp, #-4]!)
    71bc:	mul	lr, r1, r0
    71c0:	ldr	ip, [pc, #44]	; 71f4 <readstat_calloc+0x3c>
    71c4:	cmp	lr, ip
    71c8:	bhi	71ec <readstat_calloc+0x34>
    71cc:	sub	ip, ip, #1
    71d0:	sub	r2, r0, #1
    71d4:	sub	r3, r1, #1
    71d8:	cmp	r3, ip
    71dc:	cmpls	r2, ip
    71e0:	bhi	71ec <readstat_calloc+0x34>
    71e4:	pop	{lr}		; (ldr lr, [sp], #4)
    71e8:	b	3d58 <calloc@plt>
    71ec:	mov	r0, #0
    71f0:	pop	{pc}		; (ldr pc, [sp], #4)
    71f4:	.word	0x00fff000

000071f8 <readstat_realloc>:
    71f8:	ldr	r3, [pc, #40]	; 7228 <readstat_realloc+0x30>
    71fc:	sub	r2, r1, #1
    7200:	cmp	r2, r3
    7204:	bls	7224 <readstat_realloc+0x2c>
    7208:	cmp	r0, #0
    720c:	beq	7220 <readstat_realloc+0x28>
    7210:	push	{r4, lr}
    7214:	bl	3ec0 <free@plt>
    7218:	mov	r0, #0
    721c:	pop	{r4, pc}
    7220:	bx	lr
    7224:	b	3ff8 <realloc@plt>
    7228:	.word	0x00ffefff

0000722c <readstat_get_row_count>:
    722c:	ldr	r0, [r0]
    7230:	bx	lr

00007234 <readstat_get_var_count>:
    7234:	ldr	r0, [r0, #8]
    7238:	bx	lr

0000723c <readstat_get_creation_time>:
    723c:	ldr	r0, [r0, #16]
    7240:	bx	lr

00007244 <readstat_get_modified_time>:
    7244:	ldr	r0, [r0, #20]
    7248:	bx	lr

0000724c <readstat_get_file_format_version>:
    724c:	ldr	r0, [r0, #24]
    7250:	bx	lr

00007254 <readstat_get_file_format_is_64bit>:
    7254:	ldrb	r0, [r0, #52]	; 0x34
    7258:	and	r0, r0, #1
    725c:	bx	lr

00007260 <readstat_get_compression>:
    7260:	ldr	r0, [r0, #32]
    7264:	bx	lr

00007268 <readstat_get_endianness>:
    7268:	ldr	r0, [r0, #36]	; 0x24
    726c:	bx	lr

00007270 <readstat_get_file_label>:
    7270:	ldr	r0, [r0, #44]	; 0x2c
    7274:	bx	lr

00007278 <readstat_get_file_encoding>:
    7278:	ldr	r0, [r0, #48]	; 0x30
    727c:	bx	lr

00007280 <readstat_get_table_name>:
    7280:	ldr	r0, [r0, #40]	; 0x28
    7284:	bx	lr

00007288 <readstat_set_metadata_handler>:
    7288:	str	r1, [r0]
    728c:	mov	r0, #0
    7290:	bx	lr

00007294 <readstat_set_note_handler>:
    7294:	str	r1, [r0, #4]
    7298:	mov	r0, #0
    729c:	bx	lr

000072a0 <readstat_set_variable_handler>:
    72a0:	str	r1, [r0, #8]
    72a4:	mov	r0, #0
    72a8:	bx	lr

000072ac <readstat_set_value_handler>:
    72ac:	str	r1, [r0, #16]
    72b0:	mov	r0, #0
    72b4:	bx	lr

000072b8 <readstat_set_value_label_handler>:
    72b8:	str	r1, [r0, #20]
    72bc:	mov	r0, #0
    72c0:	bx	lr

000072c4 <readstat_set_error_handler>:
    72c4:	str	r1, [r0, #24]
    72c8:	mov	r0, #0
    72cc:	bx	lr

000072d0 <readstat_set_progress_handler>:
    72d0:	str	r1, [r0, #28]
    72d4:	mov	r0, #0
    72d8:	bx	lr

000072dc <readstat_set_fweight_handler>:
    72dc:	str	r1, [r0, #12]
    72e0:	mov	r0, #0
    72e4:	bx	lr

000072e8 <readstat_set_open_handler>:
    72e8:	ldr	r3, [r0, #32]
    72ec:	mov	r0, #0
    72f0:	str	r1, [r3]
    72f4:	bx	lr

000072f8 <readstat_set_close_handler>:
    72f8:	ldr	r3, [r0, #32]
    72fc:	mov	r0, #0
    7300:	str	r1, [r3, #4]
    7304:	bx	lr

00007308 <readstat_set_seek_handler>:
    7308:	ldr	r3, [r0, #32]
    730c:	mov	r0, #0
    7310:	str	r1, [r3, #8]
    7314:	bx	lr

00007318 <readstat_set_read_handler>:
    7318:	ldr	r3, [r0, #32]
    731c:	mov	r0, #0
    7320:	str	r1, [r3, #12]
    7324:	bx	lr

00007328 <readstat_set_update_handler>:
    7328:	ldr	r3, [r0, #32]
    732c:	mov	r0, #0
    7330:	str	r1, [r3, #16]
    7334:	bx	lr

00007338 <readstat_set_io_ctx>:
    7338:	ldr	r3, [r0, #32]
    733c:	push	{r4, r5, r6, lr}
    7340:	mov	r5, r1
    7344:	ldr	r2, [r3, #24]
    7348:	cmp	r2, #0
    734c:	beq	7360 <readstat_set_io_ctx+0x28>
    7350:	mov	r4, r0
    7354:	ldr	r0, [r3, #20]
    7358:	bl	3ec0 <free@plt>
    735c:	ldr	r3, [r4, #32]
    7360:	mov	r0, #0
    7364:	str	r5, [r3, #20]
    7368:	str	r0, [r3, #24]
    736c:	pop	{r4, r5, r6, pc}

00007370 <readstat_parser_free>:
    7370:	push	{r4, lr}
    7374:	subs	r4, r0, #0
    7378:	popeq	{r4, pc}
    737c:	ldr	r3, [r4, #32]
    7380:	cmp	r3, #0
    7384:	beq	7398 <readstat_parser_free+0x28>
    7388:	mov	r1, #0
    738c:	bl	40e8 <readstat_set_io_ctx@plt>
    7390:	ldr	r0, [r4, #32]
    7394:	bl	3ec0 <free@plt>
    7398:	mov	r0, r4
    739c:	pop	{r4, lr}
    73a0:	b	3ec0 <free@plt>

000073a4 <readstat_parser_init>:
    73a4:	push	{r4, lr}
    73a8:	mov	r1, #52	; 0x34
    73ac:	mov	r0, #1
    73b0:	bl	3d58 <calloc@plt>
    73b4:	mov	r1, #28
    73b8:	mov	r4, r0
    73bc:	mov	r0, #1
    73c0:	bl	3d58 <calloc@plt>
    73c4:	str	r0, [r4, #32]
    73c8:	mov	r0, r4
    73cc:	bl	3f80 <unistd_io_init@plt>
    73d0:	cmp	r0, #0
    73d4:	bne	73ec <readstat_parser_init+0x48>
    73d8:	ldr	r3, [pc, #28]	; 73fc <readstat_parser_init+0x58>
    73dc:	add	r3, pc, r3
    73e0:	str	r3, [r4, #40]	; 0x28
    73e4:	mov	r0, r4
    73e8:	pop	{r4, pc}
    73ec:	mov	r0, r4
    73f0:	bl	4100 <readstat_parser_free@plt>
    73f4:	mov	r4, #0
    73f8:	b	73e4 <readstat_parser_init+0x40>
    73fc:	.word	0x0001d028

00007400 <readstat_set_file_character_encoding>:
    7400:	str	r1, [r0, #36]	; 0x24
    7404:	mov	r0, #0
    7408:	bx	lr

0000740c <readstat_set_handler_character_encoding>:
    740c:	str	r1, [r0, #40]	; 0x28
    7410:	mov	r0, #0
    7414:	bx	lr

00007418 <readstat_set_row_limit>:
    7418:	str	r1, [r0, #44]	; 0x2c
    741c:	mov	r0, #0
    7420:	bx	lr

00007424 <readstat_set_row_offset>:
    7424:	str	r1, [r0, #48]	; 0x30
    7428:	mov	r0, #0
    742c:	bx	lr

00007430 <readstat_type_class>:
    7430:	cmp	r0, #6
    7434:	cmpne	r0, #0
    7438:	moveq	r0, #1
    743c:	movne	r0, #0
    7440:	eor	r0, r0, #1
    7444:	bx	lr

00007448 <readstat_value_type>:
    7448:	sub	sp, sp, #16
    744c:	add	ip, sp, #16
    7450:	stmdb	ip, {r0, r1, r2, r3}
    7454:	ldr	r0, [sp, #8]
    7458:	add	sp, sp, #16
    745c:	bx	lr

00007460 <readstat_value_type_class>:
    7460:	sub	sp, sp, #16
    7464:	add	ip, sp, #16
    7468:	stmdb	ip, {r0, r1, r2, r3}
    746c:	ldr	r0, [sp, #8]
    7470:	add	sp, sp, #16
    7474:	b	3e24 <readstat_type_class@plt>

00007478 <readstat_value_tag>:
    7478:	sub	sp, sp, #16
    747c:	add	ip, sp, #16
    7480:	stmdb	ip, {r0, r1, r2, r3}
    7484:	ldrb	r0, [sp, #12]
    7488:	add	sp, sp, #16
    748c:	bx	lr

00007490 <readstat_value_is_system_missing>:
    7490:	sub	sp, sp, #16
    7494:	add	ip, sp, #16
    7498:	stmdb	ip, {r0, r1, r2, r3}
    749c:	ldrb	r0, [sp, #13]
    74a0:	and	r0, r0, #1
    74a4:	add	sp, sp, #16
    74a8:	bx	lr

000074ac <readstat_value_is_tagged_missing>:
    74ac:	sub	sp, sp, #16
    74b0:	add	ip, sp, #16
    74b4:	stmdb	ip, {r0, r1, r2, r3}
    74b8:	ldrb	r0, [sp, #13]
    74bc:	lsr	r0, r0, #1
    74c0:	and	r0, r0, #1
    74c4:	add	sp, sp, #16
    74c8:	bx	lr

000074cc <readstat_int8_value>:
    74cc:	push	{r4, lr}
    74d0:	sub	sp, sp, #24
    74d4:	add	ip, sp, #8
    74d8:	stm	ip, {r0, r1, r2, r3}
    74dc:	ldm	ip, {r0, r1, r2, r3}
    74e0:	ldr	r4, [sp, #16]
    74e4:	bl	3ecc <readstat_value_is_system_missing@plt>
    74e8:	cmp	r0, #0
    74ec:	movne	r0, #0
    74f0:	bne	751c <readstat_int8_value+0x50>
    74f4:	cmp	r4, #5
    74f8:	beq	7530 <readstat_int8_value+0x64>
    74fc:	cmp	r4, #4
    7500:	beq	7548 <readstat_int8_value+0x7c>
    7504:	cmp	r4, #3
    7508:	beq	7524 <readstat_int8_value+0x58>
    750c:	cmp	r4, #2
    7510:	beq	7524 <readstat_int8_value+0x58>
    7514:	cmp	r4, #1
    7518:	beq	7524 <readstat_int8_value+0x58>
    751c:	add	sp, sp, #24
    7520:	pop	{r4, pc}
    7524:	ldrb	r0, [sp, #8]
    7528:	add	sp, sp, #24
    752c:	pop	{r4, pc}
    7530:	vldr	d7, [sp, #8]
    7534:	vcvt.u32.f64	s15, d7
    7538:	vstr	s15, [sp, #4]
    753c:	ldrb	r0, [sp, #4]
    7540:	add	sp, sp, #24
    7544:	pop	{r4, pc}
    7548:	vldr	s15, [sp, #8]
    754c:	vcvt.u32.f32	s15, s15
    7550:	vstr	s15, [sp, #4]
    7554:	ldrb	r0, [sp, #4]
    7558:	b	751c <readstat_int8_value+0x50>

0000755c <readstat_int16_value>:
    755c:	push	{r4, lr}
    7560:	sub	sp, sp, #24
    7564:	add	ip, sp, #8
    7568:	stm	ip, {r0, r1, r2, r3}
    756c:	ldm	ip, {r0, r1, r2, r3}
    7570:	ldr	r4, [sp, #16]
    7574:	bl	3ecc <readstat_value_is_system_missing@plt>
    7578:	cmp	r0, #0
    757c:	movne	r0, #0
    7580:	bne	75ac <readstat_int16_value+0x50>
    7584:	cmp	r4, #5
    7588:	beq	75b4 <readstat_int16_value+0x58>
    758c:	cmp	r4, #4
    7590:	beq	75d8 <readstat_int16_value+0x7c>
    7594:	cmp	r4, #3
    7598:	beq	75cc <readstat_int16_value+0x70>
    759c:	cmp	r4, #2
    75a0:	beq	75cc <readstat_int16_value+0x70>
    75a4:	cmp	r4, #1
    75a8:	ldrsbeq	r0, [sp, #8]
    75ac:	add	sp, sp, #24
    75b0:	pop	{r4, pc}
    75b4:	vldr	d7, [sp, #8]
    75b8:	vcvt.s32.f64	s15, d7
    75bc:	vstr	s15, [sp, #4]
    75c0:	ldrsh	r0, [sp, #4]
    75c4:	add	sp, sp, #24
    75c8:	pop	{r4, pc}
    75cc:	ldrsh	r0, [sp, #8]
    75d0:	add	sp, sp, #24
    75d4:	pop	{r4, pc}
    75d8:	vldr	s15, [sp, #8]
    75dc:	vcvt.s32.f32	s15, s15
    75e0:	vstr	s15, [sp, #4]
    75e4:	ldrsh	r0, [sp, #4]
    75e8:	b	75ac <readstat_int16_value+0x50>

000075ec <readstat_int32_value>:
    75ec:	push	{r4, lr}
    75f0:	sub	sp, sp, #16
    75f4:	stm	sp, {r0, r1, r2, r3}
    75f8:	ldm	sp, {r0, r1, r2, r3}
    75fc:	mov	r4, r2
    7600:	bl	3ecc <readstat_value_is_system_missing@plt>
    7604:	cmp	r0, #0
    7608:	movne	r0, #0
    760c:	bne	7640 <readstat_int32_value+0x54>
    7610:	cmp	r4, #5
    7614:	beq	7648 <readstat_int32_value+0x5c>
    7618:	cmp	r4, #4
    761c:	beq	765c <readstat_int32_value+0x70>
    7620:	cmp	r4, #3
    7624:	ldreq	r0, [sp]
    7628:	beq	7640 <readstat_int32_value+0x54>
    762c:	cmp	r4, #2
    7630:	ldrsheq	r0, [sp]
    7634:	beq	7640 <readstat_int32_value+0x54>
    7638:	cmp	r4, #1
    763c:	ldrsbeq	r0, [sp]
    7640:	add	sp, sp, #16
    7644:	pop	{r4, pc}
    7648:	vldr	d7, [sp]
    764c:	vcvt.s32.f64	s15, d7
    7650:	vmov	r0, s15
    7654:	add	sp, sp, #16
    7658:	pop	{r4, pc}
    765c:	vldr	s15, [sp]
    7660:	vcvt.s32.f32	s15, s15
    7664:	vmov	r0, s15
    7668:	b	7640 <readstat_int32_value+0x54>

0000766c <readstat_float_value>:
    766c:	push	{r4, lr}
    7670:	sub	sp, sp, #16
    7674:	stm	sp, {r0, r1, r2, r3}
    7678:	ldm	sp, {r0, r1, r2, r3}
    767c:	mov	r4, r2
    7680:	bl	3ecc <readstat_value_is_system_missing@plt>
    7684:	cmp	r0, #0
    7688:	bne	76c0 <readstat_float_value+0x54>
    768c:	cmp	r4, #5
    7690:	beq	76cc <readstat_float_value+0x60>
    7694:	cmp	r4, #4
    7698:	beq	76b4 <readstat_float_value+0x48>
    769c:	cmp	r4, #3
    76a0:	beq	76dc <readstat_float_value+0x70>
    76a4:	cmp	r4, #2
    76a8:	beq	76e8 <readstat_float_value+0x7c>
    76ac:	cmp	r4, #1
    76b0:	beq	76f8 <readstat_float_value+0x8c>
    76b4:	vldr	s0, [sp]
    76b8:	add	sp, sp, #16
    76bc:	pop	{r4, pc}
    76c0:	vldr	s0, [pc, #64]	; 7708 <readstat_float_value+0x9c>
    76c4:	add	sp, sp, #16
    76c8:	pop	{r4, pc}
    76cc:	vldr	d0, [sp]
    76d0:	vcvt.f32.f64	s0, d0
    76d4:	add	sp, sp, #16
    76d8:	pop	{r4, pc}
    76dc:	vldr	s15, [sp]
    76e0:	vcvt.f32.s32	s0, s15
    76e4:	b	76b8 <readstat_float_value+0x4c>
    76e8:	ldrsh	r3, [sp]
    76ec:	vmov	s0, r3
    76f0:	vcvt.f32.s32	s0, s0
    76f4:	b	76b8 <readstat_float_value+0x4c>
    76f8:	ldrsb	r3, [sp]
    76fc:	vmov	s0, r3
    7700:	vcvt.f32.s32	s0, s0
    7704:	b	76b8 <readstat_float_value+0x4c>
    7708:	.word	0x7fc00000

0000770c <readstat_double_value>:
    770c:	push	{r4, lr}
    7710:	sub	sp, sp, #16
    7714:	stm	sp, {r0, r1, r2, r3}
    7718:	ldm	sp, {r0, r1, r2, r3}
    771c:	mov	r4, r2
    7720:	bl	3ecc <readstat_value_is_system_missing@plt>
    7724:	cmp	r0, #0
    7728:	bne	7754 <readstat_double_value+0x48>
    772c:	cmp	r4, #5
    7730:	beq	7760 <readstat_double_value+0x54>
    7734:	cmp	r4, #4
    7738:	beq	777c <readstat_double_value+0x70>
    773c:	cmp	r4, #3
    7740:	beq	7788 <readstat_double_value+0x7c>
    7744:	cmp	r4, #2
    7748:	beq	7794 <readstat_double_value+0x88>
    774c:	cmp	r4, #1
    7750:	beq	776c <readstat_double_value+0x60>
    7754:	vldr	d0, [pc, #76]	; 77a8 <readstat_double_value+0x9c>
    7758:	add	sp, sp, #16
    775c:	pop	{r4, pc}
    7760:	vldr	d0, [sp]
    7764:	add	sp, sp, #16
    7768:	pop	{r4, pc}
    776c:	ldrsb	r3, [sp]
    7770:	vmov	s0, r3
    7774:	vcvt.f64.s32	d0, s0
    7778:	b	7758 <readstat_double_value+0x4c>
    777c:	vldr	s0, [sp]
    7780:	vcvt.f64.f32	d0, s0
    7784:	b	7758 <readstat_double_value+0x4c>
    7788:	vldr	s15, [sp]
    778c:	vcvt.f64.s32	d0, s15
    7790:	b	7758 <readstat_double_value+0x4c>
    7794:	ldrsh	r3, [sp]
    7798:	vmov	s0, r3
    779c:	vcvt.f64.s32	d0, s0
    77a0:	b	7758 <readstat_double_value+0x4c>
    77a4:	nop			; (mov r0, r0)
    77a8:	.word	0x00000000
    77ac:	.word	0x7ff80000

000077b0 <readstat_string_value>:
    77b0:	push	{lr}		; (str lr, [sp, #-4]!)
    77b4:	sub	sp, sp, #20
    77b8:	stm	sp, {r0, r1, r2, r3}
    77bc:	ldm	sp, {r0, r1, r2, r3}
    77c0:	bl	4340 <readstat_value_type@plt>
    77c4:	cmp	r0, #0
    77c8:	movne	r0, #0
    77cc:	ldreq	r0, [sp]
    77d0:	add	sp, sp, #20
    77d4:	pop	{pc}		; (ldr pc, [sp], #4)

000077d8 <readstat_value_is_defined_missing>:
    77d8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    77dc:	vpush	{d8-d9}
    77e0:	sub	sp, sp, #80	; 0x50
    77e4:	stm	sp, {r0, r1, r2, r3}
    77e8:	ldm	sp, {r0, r1, r2, r3}
    77ec:	bl	40dc <readstat_value_type_class@plt>
    77f0:	mov	r5, r0
    77f4:	ldr	r0, [sp, #128]	; 0x80
    77f8:	bl	4544 <readstat_variable_get_type_class@plt>
    77fc:	cmp	r5, r0
    7800:	beq	7814 <readstat_value_is_defined_missing+0x3c>
    7804:	mov	r0, #0
    7808:	add	sp, sp, #80	; 0x50
    780c:	vpop	{d8-d9}
    7810:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    7814:	ldm	sp, {r0, r1, r2, r3}
    7818:	bl	40dc <readstat_value_type_class@plt>
    781c:	subs	r5, r0, #0
    7820:	ldm	sp, {r0, r1, r2, r3}
    7824:	beq	78c0 <readstat_value_is_defined_missing+0xe8>
    7828:	bl	40dc <readstat_value_type_class@plt>
    782c:	cmp	r0, #1
    7830:	bne	7804 <readstat_value_is_defined_missing+0x2c>
    7834:	ldm	sp, {r0, r1, r2, r3}
    7838:	bl	41b4 <readstat_double_value@plt>
    783c:	ldr	r0, [sp, #128]	; 0x80
    7840:	vmov.f64	d9, d0
    7844:	bl	4304 <readstat_variable_get_missing_ranges_count@plt>
    7848:	subs	r7, r0, #0
    784c:	ble	7804 <readstat_value_is_defined_missing+0x2c>
    7850:	mov	r6, #0
    7854:	add	r5, sp, #64	; 0x40
    7858:	add	r4, sp, #48	; 0x30
    785c:	b	7868 <readstat_value_is_defined_missing+0x90>
    7860:	cmp	r7, r6
    7864:	beq	7804 <readstat_value_is_defined_missing+0x2c>
    7868:	mov	r2, r6
    786c:	ldr	r1, [sp, #128]	; 0x80
    7870:	mov	r0, r5
    7874:	bl	3f44 <readstat_variable_get_missing_range_lo@plt>
    7878:	ldm	r5, {r0, r1, r2, r3}
    787c:	bl	41b4 <readstat_double_value@plt>
    7880:	mov	r2, r6
    7884:	ldr	r1, [sp, #128]	; 0x80
    7888:	mov	r0, r4
    788c:	add	r6, r6, #1
    7890:	vmov.f64	d8, d0
    7894:	bl	4328 <readstat_variable_get_missing_range_hi@plt>
    7898:	ldm	r4, {r0, r1, r2, r3}
    789c:	bl	41b4 <readstat_double_value@plt>
    78a0:	vcmpe.f64	d9, d8
    78a4:	vmrs	APSR_nzcv, fpscr
    78a8:	blt	7860 <readstat_value_is_defined_missing+0x88>
    78ac:	vcmpe.f64	d9, d0
    78b0:	vmrs	APSR_nzcv, fpscr
    78b4:	bhi	7860 <readstat_value_is_defined_missing+0x88>
    78b8:	mov	r0, #1
    78bc:	b	7808 <readstat_value_is_defined_missing+0x30>
    78c0:	bl	3fb0 <readstat_string_value@plt>
    78c4:	subs	r9, r0, #0
    78c8:	beq	7804 <readstat_value_is_defined_missing+0x2c>
    78cc:	ldr	r0, [sp, #128]	; 0x80
    78d0:	bl	4304 <readstat_variable_get_missing_ranges_count@plt>
    78d4:	subs	sl, r0, #0
    78d8:	ble	7804 <readstat_value_is_defined_missing+0x2c>
    78dc:	mov	r4, r5
    78e0:	add	r6, sp, #32
    78e4:	add	r5, sp, #16
    78e8:	b	78f4 <readstat_value_is_defined_missing+0x11c>
    78ec:	cmp	sl, r4
    78f0:	beq	7804 <readstat_value_is_defined_missing+0x2c>
    78f4:	mov	r2, r4
    78f8:	ldr	r1, [sp, #128]	; 0x80
    78fc:	mov	r0, r6
    7900:	bl	3f44 <readstat_variable_get_missing_range_lo@plt>
    7904:	ldm	r6, {r0, r1, r2, r3}
    7908:	bl	3fb0 <readstat_string_value@plt>
    790c:	mov	r2, r4
    7910:	ldr	r1, [sp, #128]	; 0x80
    7914:	add	r4, r4, #1
    7918:	mov	r7, r0
    791c:	mov	r0, r5
    7920:	bl	4328 <readstat_variable_get_missing_range_hi@plt>
    7924:	ldm	r5, {r0, r1, r2, r3}
    7928:	bl	3fb0 <readstat_string_value@plt>
    792c:	mov	r1, r7
    7930:	cmp	r7, #0
    7934:	cmpne	r0, #0
    7938:	mov	r8, r0
    793c:	mov	r0, r9
    7940:	beq	78ec <readstat_value_is_defined_missing+0x114>
    7944:	bl	3e00 <strcmp@plt>
    7948:	mov	r1, r8
    794c:	cmp	r0, #0
    7950:	mov	r0, r9
    7954:	blt	78ec <readstat_value_is_defined_missing+0x114>
    7958:	bl	3e00 <strcmp@plt>
    795c:	cmp	r0, #0
    7960:	bgt	78ec <readstat_value_is_defined_missing+0x114>
    7964:	b	78b8 <readstat_value_is_defined_missing+0xe0>

00007968 <readstat_value_is_missing>:
    7968:	push	{lr}		; (str lr, [sp, #-4]!)
    796c:	sub	sp, sp, #20
    7970:	stm	sp, {r0, r1, r2, r3}
    7974:	ldrb	r3, [sp, #13]
    7978:	ldr	lr, [sp, #24]
    797c:	tst	r3, #3
    7980:	bne	799c <readstat_value_is_missing+0x34>
    7984:	cmp	lr, #0
    7988:	beq	79a8 <readstat_value_is_missing+0x40>
    798c:	ldm	sp, {r0, r1, r2, r3}
    7990:	add	sp, sp, #20
    7994:	pop	{lr}		; (ldr lr, [sp], #4)
    7998:	b	3ef0 <readstat_value_is_defined_missing@plt>
    799c:	mov	r0, #1
    79a0:	add	sp, sp, #20
    79a4:	pop	{pc}		; (ldr pc, [sp], #4)
    79a8:	mov	r0, lr
    79ac:	add	sp, sp, #20
    79b0:	pop	{pc}		; (ldr pc, [sp], #4)

000079b4 <readstat_variable_get_name>:
    79b4:	ldrb	r3, [r0, #8]
    79b8:	cmp	r3, #0
    79bc:	addne	r0, r0, #8
    79c0:	moveq	r0, r3
    79c4:	bx	lr

000079c8 <readstat_variable_get_label>:
    79c8:	ldrb	r3, [r0, #564]	; 0x234
    79cc:	cmp	r3, #0
    79d0:	addne	r0, r0, #564	; 0x234
    79d4:	moveq	r0, r3
    79d8:	bx	lr

000079dc <readstat_variable_get_format>:
    79dc:	ldrb	r3, [r0, #308]	; 0x134
    79e0:	cmp	r3, #0
    79e4:	addne	r0, r0, #308	; 0x134
    79e8:	moveq	r0, r3
    79ec:	bx	lr

000079f0 <readstat_variable_get_type>:
    79f0:	ldr	r0, [r0]
    79f4:	bx	lr

000079f8 <readstat_variable_get_type_class>:
    79f8:	ldr	r0, [r0]
    79fc:	b	3e24 <readstat_type_class@plt>

00007a00 <readstat_variable_get_index>:
    7a00:	ldr	r0, [r0, #4]
    7a04:	bx	lr

00007a08 <readstat_variable_get_index_after_skipping>:
    7a08:	ldr	r0, [r0, #2148]	; 0x864
    7a0c:	bx	lr

00007a10 <readstat_variable_get_storage_width>:
    7a10:	ldr	r0, [r0, #1596]	; 0x63c
    7a14:	bx	lr

00007a18 <readstat_variable_get_measure>:
    7a18:	ldr	r0, [r0, #2128]	; 0x850
    7a1c:	bx	lr

00007a20 <readstat_variable_get_alignment>:
    7a20:	ldr	r0, [r0, #2132]	; 0x854
    7a24:	bx	lr

00007a28 <readstat_variable_get_display_width>:
    7a28:	ldr	r0, [r0, #2136]	; 0x858
    7a2c:	bx	lr

00007a30 <readstat_variable_get_missing_ranges_count>:
    7a30:	ldr	r0, [r0, #2120]	; 0x848
    7a34:	bx	lr

00007a38 <readstat_variable_get_missing_range_lo>:
    7a38:	ldr	r3, [r1, #2120]	; 0x848
    7a3c:	mov	ip, r0
    7a40:	cmp	r3, r2
    7a44:	ble	7a58 <readstat_variable_get_missing_range_lo+0x20>
    7a48:	lsl	r3, r2, #1
    7a4c:	add	r3, r3, #1
    7a50:	cmp	r3, #31
    7a54:	bls	7a9c <readstat_variable_get_missing_range_lo+0x64>
    7a58:	push	{r4, r5}
    7a5c:	mov	r4, #0
    7a60:	ldr	r5, [pc, #80]	; 7ab8 <readstat_variable_get_missing_range_lo+0x80>
    7a64:	sub	sp, sp, #16
    7a68:	mov	r0, #0
    7a6c:	mov	r1, #5
    7a70:	mov	r2, #1
    7a74:	str	r0, [sp, #12]
    7a78:	strd	r4, [sp]
    7a7c:	str	r1, [sp, #8]
    7a80:	strb	r2, [sp, #13]
    7a84:	ldm	sp, {r0, r1, r2, r3}
    7a88:	stm	ip, {r0, r1, r2, r3}
    7a8c:	mov	r0, ip
    7a90:	add	sp, sp, #16
    7a94:	pop	{r4, r5}
    7a98:	bx	lr
    7a9c:	add	r1, r1, r2, lsl #5
    7aa0:	add	r1, r1, #1600	; 0x640
    7aa4:	add	r1, r1, #8
    7aa8:	ldm	r1, {r0, r1, r2, r3}
    7aac:	stm	ip, {r0, r1, r2, r3}
    7ab0:	mov	r0, ip
    7ab4:	bx	lr
    7ab8:	.word	0x7ff80000

00007abc <readstat_variable_get_missing_range_hi>:
    7abc:	ldr	r3, [r1, #2120]	; 0x848
    7ac0:	mov	ip, r0
    7ac4:	cmp	r3, r2
    7ac8:	ble	7adc <readstat_variable_get_missing_range_hi+0x20>
    7acc:	lsl	r2, r2, #1
    7ad0:	add	r2, r2, #1
    7ad4:	cmp	r2, #31
    7ad8:	bls	7b20 <readstat_variable_get_missing_range_hi+0x64>
    7adc:	push	{r4, r5}
    7ae0:	mov	r4, #0
    7ae4:	ldr	r5, [pc, #80]	; 7b3c <readstat_variable_get_missing_range_hi+0x80>
    7ae8:	sub	sp, sp, #16
    7aec:	mov	r0, #0
    7af0:	mov	r1, #5
    7af4:	mov	r2, #1
    7af8:	str	r0, [sp, #12]
    7afc:	strd	r4, [sp]
    7b00:	str	r1, [sp, #8]
    7b04:	strb	r2, [sp, #13]
    7b08:	ldm	sp, {r0, r1, r2, r3}
    7b0c:	stm	ip, {r0, r1, r2, r3}
    7b10:	mov	r0, ip
    7b14:	add	sp, sp, #16
    7b18:	pop	{r4, r5}
    7b1c:	bx	lr
    7b20:	add	r2, r1, r2, lsl #4
    7b24:	add	r2, r2, #1600	; 0x640
    7b28:	add	r2, r2, #8
    7b2c:	ldm	r2, {r0, r1, r2, r3}
    7b30:	stm	ip, {r0, r1, r2, r3}
    7b34:	mov	r0, ip
    7b38:	bx	lr
    7b3c:	.word	0x7ff80000

00007b40 <readstat_variable_add_missing_double_range>:
    7b40:	push	{r4, r5, r6, r7, lr}
    7b44:	sub	sp, sp, #68	; 0x44
    7b48:	add	r4, sp, #48	; 0x30
    7b4c:	vstr	d0, [sp, #48]	; 0x30
    7b50:	mov	r6, #0
    7b54:	mov	ip, #5
    7b58:	str	r6, [sp, #60]	; 0x3c
    7b5c:	str	ip, [sp, #56]	; 0x38
    7b60:	mov	r7, r0
    7b64:	ldm	r4, {r0, r1, r2, r3}
    7b68:	vstr	d1, [sp, #48]	; 0x30
    7b6c:	add	ip, sp, #16
    7b70:	add	r5, sp, #32
    7b74:	stm	sp, {r0, r1, r2, r3}
    7b78:	ldm	r4, {r0, r1, r2, r3}
    7b7c:	stm	ip, {r0, r1, r2, r3}
    7b80:	ldm	sp, {r0, r1, r2, r3}
    7b84:	stm	r5, {r0, r1, r2, r3}
    7b88:	mov	r0, r7
    7b8c:	bl	4304 <readstat_variable_get_missing_ranges_count@plt>
    7b90:	lsl	ip, r0, #1
    7b94:	cmp	ip, #31
    7b98:	movhi	r6, #31
    7b9c:	bls	7bac <readstat_variable_add_missing_double_range+0x6c>
    7ba0:	mov	r0, r6
    7ba4:	add	sp, sp, #68	; 0x44
    7ba8:	pop	{r4, r5, r6, r7, pc}
    7bac:	add	lr, r7, r0, lsl #5
    7bb0:	ldm	r5, {r0, r1, r2, r3}
    7bb4:	add	lr, lr, #1600	; 0x640
    7bb8:	add	lr, lr, #8
    7bbc:	add	ip, r7, ip, lsl #4
    7bc0:	stm	lr, {r0, r1, r2, r3}
    7bc4:	add	ip, ip, #1616	; 0x650
    7bc8:	ldm	r4, {r0, r1, r2, r3}
    7bcc:	add	ip, ip, #8
    7bd0:	ldr	lr, [r7, #2120]	; 0x848
    7bd4:	add	lr, lr, #1
    7bd8:	stm	ip, {r0, r1, r2, r3}
    7bdc:	mov	r0, r6
    7be0:	str	lr, [r7, #2120]	; 0x848
    7be4:	add	sp, sp, #68	; 0x44
    7be8:	pop	{r4, r5, r6, r7, pc}

00007bec <readstat_variable_add_missing_double_value>:
    7bec:	push	{r4, r5, r6, r7, lr}
    7bf0:	sub	sp, sp, #68	; 0x44
    7bf4:	add	r4, sp, #48	; 0x30
    7bf8:	vstr	d0, [sp, #48]	; 0x30
    7bfc:	mov	r6, #0
    7c00:	mov	ip, #5
    7c04:	str	r6, [sp, #60]	; 0x3c
    7c08:	str	ip, [sp, #56]	; 0x38
    7c0c:	mov	r7, r0
    7c10:	ldm	r4, {r0, r1, r2, r3}
    7c14:	add	ip, sp, #16
    7c18:	add	r5, sp, #32
    7c1c:	stm	sp, {r0, r1, r2, r3}
    7c20:	ldm	r4, {r0, r1, r2, r3}
    7c24:	stm	ip, {r0, r1, r2, r3}
    7c28:	ldm	sp, {r0, r1, r2, r3}
    7c2c:	stm	r5, {r0, r1, r2, r3}
    7c30:	mov	r0, r7
    7c34:	bl	4304 <readstat_variable_get_missing_ranges_count@plt>
    7c38:	lsl	ip, r0, #1
    7c3c:	cmp	ip, #31
    7c40:	movhi	r6, #31
    7c44:	bls	7c54 <readstat_variable_add_missing_double_value+0x68>
    7c48:	mov	r0, r6
    7c4c:	add	sp, sp, #68	; 0x44
    7c50:	pop	{r4, r5, r6, r7, pc}
    7c54:	add	lr, r7, r0, lsl #5
    7c58:	ldm	r5, {r0, r1, r2, r3}
    7c5c:	add	lr, lr, #1600	; 0x640
    7c60:	add	lr, lr, #8
    7c64:	add	ip, r7, ip, lsl #4
    7c68:	stm	lr, {r0, r1, r2, r3}
    7c6c:	add	ip, ip, #1616	; 0x650
    7c70:	ldm	r4, {r0, r1, r2, r3}
    7c74:	add	ip, ip, #8
    7c78:	ldr	lr, [r7, #2120]	; 0x848
    7c7c:	add	lr, lr, #1
    7c80:	stm	ip, {r0, r1, r2, r3}
    7c84:	mov	r0, r6
    7c88:	str	lr, [r7, #2120]	; 0x848
    7c8c:	add	sp, sp, #68	; 0x44
    7c90:	pop	{r4, r5, r6, r7, pc}

00007c94 <readstat_variable_add_missing_string_range>:
    7c94:	push	{r4, r5, r6, r7, lr}
    7c98:	sub	sp, sp, #68	; 0x44
    7c9c:	add	r4, sp, #48	; 0x30
    7ca0:	mov	r5, #0
    7ca4:	str	r1, [sp, #48]	; 0x30
    7ca8:	str	r5, [sp, #52]	; 0x34
    7cac:	str	r5, [sp, #56]	; 0x38
    7cb0:	str	r5, [sp, #60]	; 0x3c
    7cb4:	mov	ip, r2
    7cb8:	mov	r7, r0
    7cbc:	ldm	r4, {r0, r1, r2, r3}
    7cc0:	add	r6, sp, #32
    7cc4:	str	ip, [sp, #48]	; 0x30
    7cc8:	add	ip, sp, #16
    7ccc:	stm	sp, {r0, r1, r2, r3}
    7cd0:	ldm	r4, {r0, r1, r2, r3}
    7cd4:	stm	ip, {r0, r1, r2, r3}
    7cd8:	ldm	sp, {r0, r1, r2, r3}
    7cdc:	stm	r6, {r0, r1, r2, r3}
    7ce0:	mov	r0, r7
    7ce4:	bl	4304 <readstat_variable_get_missing_ranges_count@plt>
    7ce8:	lsl	ip, r0, #1
    7cec:	cmp	ip, #31
    7cf0:	movhi	r5, #31
    7cf4:	bls	7d04 <readstat_variable_add_missing_string_range+0x70>
    7cf8:	mov	r0, r5
    7cfc:	add	sp, sp, #68	; 0x44
    7d00:	pop	{r4, r5, r6, r7, pc}
    7d04:	add	lr, r7, r0, lsl #5
    7d08:	ldm	r6, {r0, r1, r2, r3}
    7d0c:	add	lr, lr, #1600	; 0x640
    7d10:	add	lr, lr, #8
    7d14:	add	ip, r7, ip, lsl #4
    7d18:	stm	lr, {r0, r1, r2, r3}
    7d1c:	add	ip, ip, #1616	; 0x650
    7d20:	ldm	r4, {r0, r1, r2, r3}
    7d24:	add	ip, ip, #8
    7d28:	ldr	lr, [r7, #2120]	; 0x848
    7d2c:	add	lr, lr, #1
    7d30:	stm	ip, {r0, r1, r2, r3}
    7d34:	mov	r0, r5
    7d38:	str	lr, [r7, #2120]	; 0x848
    7d3c:	add	sp, sp, #68	; 0x44
    7d40:	pop	{r4, r5, r6, r7, pc}

00007d44 <readstat_variable_add_missing_string_value>:
    7d44:	push	{r4, r5, r6, r7, lr}
    7d48:	sub	sp, sp, #68	; 0x44
    7d4c:	add	r4, sp, #48	; 0x30
    7d50:	mov	r5, #0
    7d54:	str	r5, [sp, #52]	; 0x34
    7d58:	str	r5, [sp, #56]	; 0x38
    7d5c:	str	r5, [sp, #60]	; 0x3c
    7d60:	str	r1, [sp, #48]	; 0x30
    7d64:	mov	r7, r0
    7d68:	ldm	r4, {r0, r1, r2, r3}
    7d6c:	add	ip, sp, #16
    7d70:	add	r6, sp, #32
    7d74:	stm	ip, {r0, r1, r2, r3}
    7d78:	stm	sp, {r0, r1, r2, r3}
    7d7c:	stm	r6, {r0, r1, r2, r3}
    7d80:	mov	r0, r7
    7d84:	bl	4304 <readstat_variable_get_missing_ranges_count@plt>
    7d88:	lsl	ip, r0, #1
    7d8c:	cmp	ip, #31
    7d90:	movhi	r5, #31
    7d94:	bls	7da4 <readstat_variable_add_missing_string_value+0x60>
    7d98:	mov	r0, r5
    7d9c:	add	sp, sp, #68	; 0x44
    7da0:	pop	{r4, r5, r6, r7, pc}
    7da4:	add	lr, r7, r0, lsl #5
    7da8:	ldm	r6, {r0, r1, r2, r3}
    7dac:	add	lr, lr, #1600	; 0x640
    7db0:	add	lr, lr, #8
    7db4:	add	ip, r7, ip, lsl #4
    7db8:	stm	lr, {r0, r1, r2, r3}
    7dbc:	add	ip, ip, #1616	; 0x650
    7dc0:	ldm	r4, {r0, r1, r2, r3}
    7dc4:	add	ip, ip, #8
    7dc8:	ldr	lr, [r7, #2120]	; 0x848
    7dcc:	add	lr, lr, #1
    7dd0:	stm	ip, {r0, r1, r2, r3}
    7dd4:	mov	r0, r5
    7dd8:	str	lr, [r7, #2120]	; 0x848
    7ddc:	add	sp, sp, #68	; 0x44
    7de0:	pop	{r4, r5, r6, r7, pc}

00007de4 <readstat_compare_string_refs>:
    7de4:	ldr	ip, [r1]
    7de8:	push	{lr}		; (str lr, [sp, #-4]!)
    7dec:	ldr	lr, [r0]
    7df0:	ldrd	r2, [ip]
    7df4:	ldrd	r0, [lr]
    7df8:	cmp	r1, r3
    7dfc:	cmpeq	r0, r2
    7e00:	ldreq	r0, [lr, #8]
    7e04:	ldreq	r3, [ip, #8]
    7e08:	subeq	r0, r0, r3
    7e0c:	subne	r0, r0, r2
    7e10:	pop	{pc}		; (ldr pc, [sp], #4)

00007e14 <readstat_add_value_label>:
    7e14:	push	{r4, r5, r6, lr}
    7e18:	mov	r6, r1
    7e1c:	ldr	r3, [r0, #268]	; 0x10c
    7e20:	ldr	r1, [r0, #264]	; 0x108
    7e24:	mov	r5, r0
    7e28:	cmp	r1, r3
    7e2c:	beq	7e90 <readstat_add_value_label+0x7c>
    7e30:	ldr	r4, [r0, #260]	; 0x104
    7e34:	add	r4, r4, r1, lsl #5
    7e38:	add	r1, r1, #1
    7e3c:	str	r1, [r5, #264]	; 0x108
    7e40:	mov	r0, r4
    7e44:	mov	r2, #32
    7e48:	mov	r1, #0
    7e4c:	bl	42a4 <memset@plt>
    7e50:	cmp	r6, #0
    7e54:	beq	7e88 <readstat_add_value_label+0x74>
    7e58:	ldrb	r3, [r6]
    7e5c:	cmp	r3, #0
    7e60:	beq	7e88 <readstat_add_value_label+0x74>
    7e64:	mov	r0, r6
    7e68:	bl	41fc <strlen@plt>
    7e6c:	str	r0, [r4, #28]
    7e70:	mov	r5, r0
    7e74:	bl	410c <malloc@plt>
    7e78:	mov	r2, r5
    7e7c:	mov	r1, r6
    7e80:	str	r0, [r4, #24]
    7e84:	bl	3f20 <memcpy@plt>
    7e88:	mov	r0, r4
    7e8c:	pop	{r4, r5, r6, pc}
    7e90:	lsl	r3, r1, #1
    7e94:	str	r3, [r0, #268]	; 0x10c
    7e98:	lsl	r1, r1, #6
    7e9c:	ldr	r0, [r0, #260]	; 0x104
    7ea0:	bl	3ff8 <realloc@plt>
    7ea4:	ldr	r1, [r5, #264]	; 0x108
    7ea8:	mov	r4, r0
    7eac:	str	r0, [r5, #260]	; 0x104
    7eb0:	b	7e34 <readstat_add_value_label+0x20>

00007eb4 <readstat_string_ref_init>:
    7eb4:	push	{r4, r5, r6, r7, r8, lr}
    7eb8:	mov	r8, r0
    7ebc:	bl	41fc <strlen@plt>
    7ec0:	mvn	r6, #0
    7ec4:	mvn	r7, #0
    7ec8:	add	r1, r0, #25
    7ecc:	mov	r5, r0
    7ed0:	mov	r0, #1
    7ed4:	add	r5, r5, r0
    7ed8:	bl	3d58 <calloc@plt>
    7edc:	mov	r1, r8
    7ee0:	mov	r2, r5
    7ee4:	mov	r4, r0
    7ee8:	add	r0, r0, #20
    7eec:	str	r5, [r4, #16]
    7ef0:	strd	r6, [r4, #8]
    7ef4:	strd	r6, [r4]
    7ef8:	bl	3f20 <memcpy@plt>
    7efc:	mov	r0, r4
    7f00:	pop	{r4, r5, r6, r7, r8, pc}

00007f04 <readstat_writer_init>:
    7f04:	push	{r4, r5, r6, lr}
    7f08:	mov	r1, #312	; 0x138
    7f0c:	mov	r0, #1
    7f10:	bl	3d58 <calloc@plt>
    7f14:	mov	r1, #4
    7f18:	mov	r5, #50	; 0x32
    7f1c:	mov	r4, r0
    7f20:	mov	r0, #50	; 0x32
    7f24:	bl	3d58 <calloc@plt>
    7f28:	mov	r1, #4
    7f2c:	str	r5, [r4, #32]
    7f30:	str	r0, [r4, #24]
    7f34:	mov	r0, r5
    7f38:	bl	3d58 <calloc@plt>
    7f3c:	mov	r1, #4
    7f40:	str	r5, [r4, #44]	; 0x2c
    7f44:	str	r0, [r4, #36]	; 0x24
    7f48:	mov	r0, r5
    7f4c:	bl	3d58 <calloc@plt>
    7f50:	mov	r1, #4
    7f54:	str	r5, [r4, #56]	; 0x38
    7f58:	str	r0, [r4, #48]	; 0x30
    7f5c:	mov	r0, #100	; 0x64
    7f60:	bl	3d58 <calloc@plt>
    7f64:	mov	r3, #100	; 0x64
    7f68:	str	r3, [r4, #68]	; 0x44
    7f6c:	str	r0, [r4, #60]	; 0x3c
    7f70:	mov	r0, #0
    7f74:	bl	3f5c <time@plt>
    7f78:	ldr	r3, [pc, #24]	; 7f98 <readstat_writer_init+0x94>
    7f7c:	mov	r2, #1
    7f80:	add	r3, pc, r3
    7f84:	str	r2, [r4, #12]
    7f88:	str	r3, [r4, #280]	; 0x118
    7f8c:	str	r0, [r4, #20]
    7f90:	mov	r0, r4
    7f94:	pop	{r4, r5, r6, pc}
    7f98:	.word	0x000000bc

00007f9c <readstat_validate_variable>:
    7f9c:	ldr	r3, [r0, #308]	; 0x134
    7fa0:	cmp	r3, #0
    7fa4:	bne	7fb0 <readstat_validate_variable+0x14>
    7fa8:	mov	r0, #14
    7fac:	bx	lr
    7fb0:	ldr	r3, [r0, #232]	; 0xe8
    7fb4:	cmp	r3, #0
    7fb8:	beq	7fc4 <readstat_validate_variable+0x28>
    7fbc:	mov	r0, r1
    7fc0:	bx	r3
    7fc4:	mov	r0, r3
    7fc8:	bx	lr

00007fcc <readstat_validate_metadata>:
    7fcc:	ldr	r2, [r0, #308]	; 0x134
    7fd0:	cmp	r2, #0
    7fd4:	bne	7fe0 <readstat_validate_metadata+0x14>
    7fd8:	mov	r0, #14
    7fdc:	bx	lr
    7fe0:	ldr	r3, [r0, #292]	; 0x124
    7fe4:	cmp	r3, #0
    7fe8:	beq	7ff0 <readstat_validate_metadata+0x24>
    7fec:	bx	r3
    7ff0:	mov	r0, r3
    7ff4:	bx	lr

00007ff8 <readstat_set_data_writer>:
    7ff8:	str	r1, [r0]
    7ffc:	mov	r0, #0
    8000:	bx	lr

00008004 <readstat_write_bytes>:
    8004:	push	{r4, r5, r6, lr}
    8008:	mov	r4, r0
    800c:	mov	r5, r2
    8010:	ldr	r3, [r4]
    8014:	ldr	r2, [r4, #304]	; 0x130
    8018:	mov	r0, r1
    801c:	mov	r1, r5
    8020:	blx	r3
    8024:	cmp	r5, r0
    8028:	movls	r3, r0
    802c:	ldrls	r2, [r4, #4]
    8030:	movls	r0, #0
    8034:	addls	r3, r2, r3
    8038:	strls	r3, [r4, #4]
    803c:	movhi	r0, #13
    8040:	pop	{r4, r5, r6, pc}

00008044 <readstat_write_row_default_callback>:
    8044:	b	4454 <readstat_write_bytes@plt>

00008048 <readstat_write_bytes_as_lines>:
    8048:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    804c:	mov	r5, r0
    8050:	ldr	r0, [sp, #32]
    8054:	mov	r6, r2
    8058:	mov	r7, r3
    805c:	mov	r9, r1
    8060:	bl	41fc <strlen@plt>
    8064:	cmp	r6, #0
    8068:	movne	r4, #0
    806c:	movne	sl, r0
    8070:	addne	r8, sl, r7
    8074:	bne	80a8 <readstat_write_bytes_as_lines+0x60>
    8078:	b	80fc <readstat_write_bytes_as_lines+0xb4>
    807c:	bl	4454 <readstat_write_bytes@plt>
    8080:	mov	r4, r6
    8084:	cmp	r0, #0
    8088:	mov	r1, r8
    808c:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
    8090:	ldr	r0, [r5, #4]
    8094:	bl	232b8 <__aeabi_uidivmod>
    8098:	cmp	r7, r1
    809c:	beq	80e0 <readstat_write_bytes_as_lines+0x98>
    80a0:	cmp	r4, r6
    80a4:	bcs	80fc <readstat_write_bytes_as_lines+0xb4>
    80a8:	mov	r1, r8
    80ac:	ldr	r0, [r5, #4]
    80b0:	bl	232b8 <__aeabi_uidivmod>
    80b4:	sub	r3, r6, r4
    80b8:	mov	r0, r5
    80bc:	mov	r2, r3
    80c0:	sub	ip, r7, r1
    80c4:	cmp	ip, r3
    80c8:	add	r1, r9, r4
    80cc:	bhi	807c <readstat_write_bytes_as_lines+0x34>
    80d0:	mov	r2, ip
    80d4:	add	r4, r4, ip
    80d8:	bl	4454 <readstat_write_bytes@plt>
    80dc:	b	8084 <readstat_write_bytes_as_lines+0x3c>
    80e0:	mov	r2, sl
    80e4:	ldr	r1, [sp, #32]
    80e8:	mov	r0, r5
    80ec:	bl	4454 <readstat_write_bytes@plt>
    80f0:	cmp	r0, #0
    80f4:	beq	80a0 <readstat_write_bytes_as_lines+0x58>
    80f8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    80fc:	mov	r0, #0
    8100:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00008104 <readstat_write_line_padding>:
    8104:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    8108:	mov	r5, r0
    810c:	mov	r0, r3
    8110:	mov	r4, r2
    8114:	mov	r6, r3
    8118:	mov	r8, r1
    811c:	bl	41fc <strlen@plt>
    8120:	add	r1, r0, r4
    8124:	mov	r7, r0
    8128:	ldr	r0, [r5, #4]
    812c:	bl	232b8 <__aeabi_uidivmod>
    8130:	cmp	r1, #0
    8134:	bne	8140 <readstat_write_line_padding+0x3c>
    8138:	mov	r0, #0
    813c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    8140:	sub	r4, r4, r1
    8144:	mov	r0, r4
    8148:	bl	410c <malloc@plt>
    814c:	mov	r2, r4
    8150:	mov	r1, r8
    8154:	mov	r9, r0
    8158:	bl	42a4 <memset@plt>
    815c:	mov	r2, r4
    8160:	mov	r1, r9
    8164:	mov	r0, r5
    8168:	bl	4454 <readstat_write_bytes@plt>
    816c:	cmp	r0, #0
    8170:	beq	8184 <readstat_write_line_padding+0x80>
    8174:	mov	r0, r9
    8178:	bl	3ec0 <free@plt>
    817c:	mov	r0, #0
    8180:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    8184:	mov	r2, r7
    8188:	mov	r1, r6
    818c:	mov	r0, r5
    8190:	bl	4454 <readstat_write_bytes@plt>
    8194:	b	8174 <readstat_write_line_padding+0x70>

00008198 <readstat_write_string>:
    8198:	push	{r4, r5, r6, lr}
    819c:	mov	r5, r0
    81a0:	mov	r0, r1
    81a4:	mov	r4, r1
    81a8:	bl	41fc <strlen@plt>
    81ac:	mov	r1, r4
    81b0:	mov	r2, r0
    81b4:	mov	r0, r5
    81b8:	pop	{r4, r5, r6, lr}
    81bc:	b	4454 <readstat_write_bytes@plt>

000081c0 <readstat_write_zeros>:
    81c0:	push	{r4, r5, fp, lr}
    81c4:	subs	r4, r1, #0
    81c8:	add	fp, sp, #12
    81cc:	moveq	r0, r4
    81d0:	beq	8204 <readstat_write_zeros+0x44>
    81d4:	add	r3, r4, #7
    81d8:	bic	r3, r3, #7
    81dc:	sub	sp, sp, r3
    81e0:	mov	r5, r0
    81e4:	mov	r2, r4
    81e8:	mov	r1, #0
    81ec:	mov	r0, sp
    81f0:	bl	42a4 <memset@plt>
    81f4:	mov	r2, r4
    81f8:	mov	r1, sp
    81fc:	mov	r0, r5
    8200:	bl	4454 <readstat_write_bytes@plt>
    8204:	sub	sp, fp, #12
    8208:	pop	{r4, r5, fp, pc}

0000820c <readstat_write_spaces>:
    820c:	push	{r4, r5, fp, lr}
    8210:	subs	r4, r1, #0
    8214:	add	fp, sp, #12
    8218:	moveq	r0, r4
    821c:	beq	8250 <readstat_write_spaces+0x44>
    8220:	add	r3, r4, #7
    8224:	bic	r3, r3, #7
    8228:	sub	sp, sp, r3
    822c:	mov	r5, r0
    8230:	mov	r2, r4
    8234:	mov	r1, #32
    8238:	mov	r0, sp
    823c:	bl	42a4 <memset@plt>
    8240:	mov	r2, r4
    8244:	mov	r1, sp
    8248:	mov	r0, r5
    824c:	bl	4454 <readstat_write_bytes@plt>
    8250:	sub	sp, fp, #12
    8254:	pop	{r4, r5, fp, pc}

00008258 <readstat_write_space_padded_string>:
    8258:	push	{r4, r5, r6, lr}
    825c:	subs	r4, r1, #0
    8260:	beq	82b4 <readstat_write_space_padded_string+0x5c>
    8264:	ldrb	r1, [r4]
    8268:	cmp	r1, #0
    826c:	beq	82b4 <readstat_write_space_padded_string+0x5c>
    8270:	mov	r6, r0
    8274:	mov	r0, r4
    8278:	mov	r5, r2
    827c:	bl	41fc <strlen@plt>
    8280:	mov	r1, r4
    8284:	cmp	r0, r5
    8288:	movcc	r4, r0
    828c:	movcs	r4, r5
    8290:	mov	r2, r4
    8294:	mov	r0, r6
    8298:	bl	4454 <readstat_write_bytes@plt>
    829c:	cmp	r0, #0
    82a0:	popne	{r4, r5, r6, pc}
    82a4:	sub	r1, r5, r4
    82a8:	mov	r0, r6
    82ac:	pop	{r4, r5, r6, lr}
    82b0:	b	3ddc <readstat_write_spaces@plt>
    82b4:	mov	r1, r2
    82b8:	pop	{r4, r5, r6, lr}
    82bc:	b	3ddc <readstat_write_spaces@plt>

000082c0 <readstat_add_label_set>:
    82c0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    82c4:	mov	r5, r0
    82c8:	ldr	r6, [r0, #40]	; 0x28
    82cc:	ldr	r3, [r0, #44]	; 0x2c
    82d0:	mov	r7, r1
    82d4:	cmp	r6, r3
    82d8:	mov	r9, r2
    82dc:	beq	8350 <readstat_add_label_set+0x90>
    82e0:	ldr	r8, [r0, #36]	; 0x24
    82e4:	mov	r1, #284	; 0x11c
    82e8:	mov	r0, #1
    82ec:	bl	3d58 <calloc@plt>
    82f0:	ldr	r2, [pc, #124]	; 8374 <readstat_add_label_set+0xb4>
    82f4:	add	r1, r6, #1
    82f8:	mov	r3, r9
    82fc:	str	r1, [r5, #40]	; 0x28
    8300:	add	r2, pc, r2
    8304:	mov	r1, #256	; 0x100
    8308:	mov	r4, r0
    830c:	str	r0, [r8, r6, lsl #2]
    8310:	str	r7, [r0], #4
    8314:	bl	4280 <snprintf@plt>
    8318:	mov	r1, #32
    831c:	mov	r0, #10
    8320:	bl	3d58 <calloc@plt>
    8324:	mov	r3, #10
    8328:	mov	r1, #4
    832c:	str	r3, [r4, #268]	; 0x10c
    8330:	str	r0, [r4, #260]	; 0x104
    8334:	mov	r0, #2
    8338:	bl	3d58 <calloc@plt>
    833c:	mov	r3, #2
    8340:	str	r3, [r4, #280]	; 0x118
    8344:	str	r0, [r4, #272]	; 0x110
    8348:	mov	r0, r4
    834c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    8350:	lsl	r3, r6, #1
    8354:	str	r3, [r0, #44]	; 0x2c
    8358:	lsl	r1, r6, #3
    835c:	ldr	r0, [r0, #36]	; 0x24
    8360:	bl	3ff8 <realloc@plt>
    8364:	ldr	r6, [r5, #40]	; 0x28
    8368:	mov	r8, r0
    836c:	str	r0, [r5, #36]	; 0x24
    8370:	b	82e4 <readstat_add_label_set+0x24>
    8374:	.word	0x0001c10c

00008378 <readstat_get_label_set>:
    8378:	ldr	r3, [r0, #40]	; 0x28
    837c:	cmp	r3, r1
    8380:	ldrgt	r3, [r0, #36]	; 0x24
    8384:	ldrgt	r0, [r3, r1, lsl #2]
    8388:	movle	r0, #0
    838c:	bx	lr

00008390 <readstat_sort_label_set>:
    8390:	mov	r2, r0
    8394:	mov	r3, r1
    8398:	ldr	r0, [r0, #260]	; 0x104
    839c:	ldr	r1, [r2, #264]	; 0x108
    83a0:	mov	r2, #32
    83a4:	b	443c <qsort@plt>

000083a8 <readstat_get_value_label>:
    83a8:	ldr	r3, [r0, #264]	; 0x108
    83ac:	cmp	r3, r1
    83b0:	ldrgt	r0, [r0, #260]	; 0x104
    83b4:	addgt	r0, r0, r1, lsl #5
    83b8:	movle	r0, #0
    83bc:	bx	lr

000083c0 <readstat_writer_free>:
    83c0:	push	{r4, r5, r6, r7, r8, lr}
    83c4:	subs	r7, r0, #0
    83c8:	popeq	{r4, r5, r6, r7, r8, pc}
    83cc:	ldr	r3, [r7, #288]	; 0x120
    83d0:	cmp	r3, #0
    83d4:	beq	83e8 <readstat_writer_free+0x28>
    83d8:	ldr	r0, [r7, #300]	; 0x12c
    83dc:	cmp	r0, #0
    83e0:	beq	83e8 <readstat_writer_free+0x28>
    83e4:	blx	r3
    83e8:	ldr	r0, [r7, #24]
    83ec:	cmp	r0, #0
    83f0:	beq	8424 <readstat_writer_free+0x64>
    83f4:	ldr	r3, [r7, #28]
    83f8:	cmp	r3, #0
    83fc:	ble	8420 <readstat_writer_free+0x60>
    8400:	mov	r4, #0
    8404:	ldr	r0, [r0, r4, lsl #2]
    8408:	bl	3ec0 <free@plt>
    840c:	ldr	r3, [r7, #28]
    8410:	add	r4, r4, #1
    8414:	cmp	r3, r4
    8418:	ldr	r0, [r7, #24]
    841c:	bgt	8404 <readstat_writer_free+0x44>
    8420:	bl	3ec0 <free@plt>
    8424:	ldr	r0, [r7, #36]	; 0x24
    8428:	cmp	r0, #0
    842c:	beq	84c8 <readstat_writer_free+0x108>
    8430:	ldr	r3, [r7, #40]	; 0x28
    8434:	cmp	r3, #0
    8438:	ble	84c4 <readstat_writer_free+0x104>
    843c:	mov	r8, #0
    8440:	ldr	r6, [r0, r8, lsl #2]
    8444:	ldr	r3, [r6, #264]	; 0x108
    8448:	cmp	r3, #0
    844c:	movgt	r4, #0
    8450:	ble	8494 <readstat_writer_free+0xd4>
    8454:	mov	r1, r4
    8458:	mov	r0, r6
    845c:	bl	44cc <readstat_get_value_label@plt>
    8460:	add	r4, r4, #1
    8464:	ldr	r3, [r0, #24]
    8468:	mov	r5, r0
    846c:	subs	r0, r3, #0
    8470:	beq	8478 <readstat_writer_free+0xb8>
    8474:	bl	3ec0 <free@plt>
    8478:	ldr	r3, [r5, #16]
    847c:	subs	r0, r3, #0
    8480:	beq	8488 <readstat_writer_free+0xc8>
    8484:	bl	3ec0 <free@plt>
    8488:	ldr	r3, [r6, #264]	; 0x108
    848c:	cmp	r4, r3
    8490:	blt	8454 <readstat_writer_free+0x94>
    8494:	ldr	r0, [r6, #260]	; 0x104
    8498:	bl	3ec0 <free@plt>
    849c:	ldr	r0, [r6, #272]	; 0x110
    84a0:	bl	3ec0 <free@plt>
    84a4:	mov	r0, r6
    84a8:	bl	3ec0 <free@plt>
    84ac:	ldr	r3, [r7, #40]	; 0x28
    84b0:	add	r8, r8, #1
    84b4:	cmp	r3, r8
    84b8:	ldrgt	r0, [r7, #36]	; 0x24
    84bc:	bgt	8440 <readstat_writer_free+0x80>
    84c0:	ldr	r0, [r7, #36]	; 0x24
    84c4:	bl	3ec0 <free@plt>
    84c8:	ldr	r0, [r7, #48]	; 0x30
    84cc:	cmp	r0, #0
    84d0:	beq	8504 <readstat_writer_free+0x144>
    84d4:	ldr	r3, [r7, #52]	; 0x34
    84d8:	cmp	r3, #0
    84dc:	ble	8500 <readstat_writer_free+0x140>
    84e0:	mov	r4, #0
    84e4:	ldr	r0, [r0, r4, lsl #2]
    84e8:	bl	3ec0 <free@plt>
    84ec:	ldr	r3, [r7, #52]	; 0x34
    84f0:	add	r4, r4, #1
    84f4:	cmp	r3, r4
    84f8:	ldr	r0, [r7, #48]	; 0x30
    84fc:	bgt	84e4 <readstat_writer_free+0x124>
    8500:	bl	3ec0 <free@plt>
    8504:	ldr	r0, [r7, #60]	; 0x3c
    8508:	cmp	r0, #0
    850c:	beq	8540 <readstat_writer_free+0x180>
    8510:	ldr	r3, [r7, #64]	; 0x40
    8514:	cmp	r3, #0
    8518:	ble	853c <readstat_writer_free+0x17c>
    851c:	mov	r4, #0
    8520:	ldr	r0, [r0, r4, lsl #2]
    8524:	bl	3ec0 <free@plt>
    8528:	ldr	r3, [r7, #64]	; 0x40
    852c:	add	r4, r4, #1
    8530:	cmp	r3, r4
    8534:	ldr	r0, [r7, #60]	; 0x3c
    8538:	bgt	8520 <readstat_writer_free+0x160>
    853c:	bl	3ec0 <free@plt>
    8540:	ldr	r0, [r7, #72]	; 0x48
    8544:	cmp	r0, #0
    8548:	beq	8550 <readstat_writer_free+0x190>
    854c:	bl	3ec0 <free@plt>
    8550:	mov	r0, r7
    8554:	pop	{r4, r5, r6, r7, r8, lr}
    8558:	b	3ec0 <free@plt>

0000855c <readstat_get_label_set_variable>:
    855c:	ldr	r3, [r0, #276]	; 0x114
    8560:	cmp	r3, r1
    8564:	ldrgt	r3, [r0, #272]	; 0x110
    8568:	ldrgt	r0, [r3, r1, lsl #2]
    856c:	movle	r0, #0
    8570:	bx	lr

00008574 <readstat_label_double_value>:
    8574:	push	{r4, lr}
    8578:	vpush	{d8}
    857c:	vmov.f64	d8, d0
    8580:	bl	7e14 <readstat_add_value_label>
    8584:	vcvt.s32.f64	s15, d8
    8588:	vstr	d8, [r0]
    858c:	vpop	{d8}
    8590:	vstr	s15, [r0, #8]
    8594:	pop	{r4, pc}

00008598 <readstat_label_int32_value>:
    8598:	push	{r4, lr}
    859c:	mov	r4, r1
    85a0:	mov	r1, r2
    85a4:	bl	7e14 <readstat_add_value_label>
    85a8:	vmov	s15, r4
    85ac:	vcvt.f64.s32	d7, s15
    85b0:	str	r4, [r0, #8]
    85b4:	vstr	d7, [r0]
    85b8:	pop	{r4, pc}

000085bc <readstat_label_string_value>:
    85bc:	push	{r4, r5, r6, lr}
    85c0:	mov	r4, r1
    85c4:	mov	r1, r2
    85c8:	bl	7e14 <readstat_add_value_label>
    85cc:	cmp	r4, #0
    85d0:	popeq	{r4, r5, r6, pc}
    85d4:	ldrb	r3, [r4]
    85d8:	cmp	r3, #0
    85dc:	popeq	{r4, r5, r6, pc}
    85e0:	mov	r5, r0
    85e4:	mov	r0, r4
    85e8:	bl	41fc <strlen@plt>
    85ec:	str	r0, [r5, #20]
    85f0:	mov	r6, r0
    85f4:	bl	410c <malloc@plt>
    85f8:	mov	r2, r6
    85fc:	mov	r1, r4
    8600:	str	r0, [r5, #16]
    8604:	pop	{r4, r5, r6, lr}
    8608:	b	3f20 <memcpy@plt>

0000860c <readstat_label_tagged_value>:
    860c:	push	{r4, lr}
    8610:	mov	r4, r1
    8614:	mov	r1, r2
    8618:	bl	7e14 <readstat_add_value_label>
    861c:	strb	r4, [r0, #12]
    8620:	pop	{r4, pc}

00008624 <readstat_add_variable>:
    8624:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    8628:	mov	r7, r1
    862c:	ldr	r5, [r0, #28]
    8630:	ldr	r1, [r0, #32]
    8634:	mov	r6, r0
    8638:	cmp	r5, r1
    863c:	mov	r8, r2
    8640:	mov	r9, r3
    8644:	beq	86b8 <readstat_add_variable+0x94>
    8648:	ldr	sl, [r0, #24]
    864c:	ldr	r1, [pc, #136]	; 86dc <readstat_add_variable+0xb8>
    8650:	mov	r0, #1
    8654:	bl	3d58 <calloc@plt>
    8658:	add	r3, r5, #1
    865c:	str	r3, [r6, #28]
    8660:	str	r5, [r0, #4]
    8664:	str	r0, [sl, r5, lsl #2]
    8668:	str	r9, [r0, #1600]	; 0x640
    866c:	str	r8, [r0]
    8670:	mov	r4, r0
    8674:	bl	4544 <readstat_variable_get_type_class@plt>
    8678:	cmp	r0, #0
    867c:	moveq	r3, #1
    8680:	movne	r3, #3
    8684:	str	r3, [r4, #2132]	; 0x854
    8688:	cmp	r7, #0
    868c:	mov	r3, #0
    8690:	str	r3, [r4, #2128]	; 0x850
    8694:	beq	86b0 <readstat_add_variable+0x8c>
    8698:	ldr	r2, [pc, #64]	; 86e0 <readstat_add_variable+0xbc>
    869c:	mov	r3, r7
    86a0:	add	r2, pc, r2
    86a4:	mov	r1, #300	; 0x12c
    86a8:	add	r0, r4, #8
    86ac:	bl	4280 <snprintf@plt>
    86b0:	mov	r0, r4
    86b4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    86b8:	lsl	r3, r5, #1
    86bc:	str	r3, [r0, #32]
    86c0:	lsl	r1, r5, #3
    86c4:	ldr	r0, [r0, #24]
    86c8:	bl	3ff8 <realloc@plt>
    86cc:	ldr	r5, [r6, #28]
    86d0:	mov	sl, r0
    86d4:	str	r0, [r6, #24]
    86d8:	b	864c <readstat_add_variable+0x28>
    86dc:	.word	0x00000868
    86e0:	.word	0x0001bd6c

000086e4 <readstat_add_string_ref>:
    86e4:	push	{r4, r5, r6, lr}
    86e8:	mov	r4, r0
    86ec:	mov	r0, r1
    86f0:	bl	4358 <readstat_string_ref_init@plt>
    86f4:	ldr	r1, [r4, #64]	; 0x40
    86f8:	ldr	r3, [r4, #68]	; 0x44
    86fc:	cmp	r1, r3
    8700:	mov	r5, r0
    8704:	beq	8720 <readstat_add_string_ref+0x3c>
    8708:	ldr	r3, [r4, #60]	; 0x3c
    870c:	add	r2, r1, #1
    8710:	str	r2, [r4, #64]	; 0x40
    8714:	mov	r0, r5
    8718:	str	r5, [r3, r1, lsl #2]
    871c:	pop	{r4, r5, r6, pc}
    8720:	lsl	r3, r1, #1
    8724:	str	r3, [r4, #68]	; 0x44
    8728:	lsl	r1, r1, #3
    872c:	ldr	r0, [r4, #60]	; 0x3c
    8730:	bl	3ff8 <realloc@plt>
    8734:	ldr	r1, [r4, #64]	; 0x40
    8738:	mov	r3, r0
    873c:	str	r0, [r4, #60]	; 0x3c
    8740:	b	870c <readstat_add_string_ref+0x28>

00008744 <readstat_add_note>:
    8744:	push	{r4, r5, r6, r7, r8, lr}
    8748:	mov	r4, r0
    874c:	ldr	r5, [r0, #52]	; 0x34
    8750:	ldr	r3, [r0, #56]	; 0x38
    8754:	mov	r6, r1
    8758:	cmp	r5, r3
    875c:	beq	8794 <readstat_add_note+0x50>
    8760:	ldr	r8, [r0, #48]	; 0x30
    8764:	mov	r0, r6
    8768:	bl	41fc <strlen@plt>
    876c:	add	r7, r0, #1
    8770:	mov	r0, r7
    8774:	bl	410c <malloc@plt>
    8778:	mov	r2, r7
    877c:	mov	r1, r6
    8780:	bl	3f20 <memcpy@plt>
    8784:	add	r2, r5, #1
    8788:	str	r2, [r4, #52]	; 0x34
    878c:	str	r0, [r8, r5, lsl #2]
    8790:	pop	{r4, r5, r6, r7, r8, pc}
    8794:	lsl	r3, r5, #1
    8798:	str	r3, [r0, #56]	; 0x38
    879c:	lsl	r1, r5, #3
    87a0:	ldr	r0, [r0, #48]	; 0x30
    87a4:	bl	3ff8 <realloc@plt>
    87a8:	ldr	r5, [r4, #52]	; 0x34
    87ac:	mov	r8, r0
    87b0:	str	r0, [r4, #48]	; 0x30
    87b4:	b	8764 <readstat_add_note+0x20>

000087b8 <readstat_variable_set_label>:
    87b8:	subs	r3, r1, #0
    87bc:	add	r0, r0, #564	; 0x234
    87c0:	beq	87d4 <readstat_variable_set_label+0x1c>
    87c4:	ldr	r2, [pc, #16]	; 87dc <readstat_variable_set_label+0x24>
    87c8:	mov	r1, #1024	; 0x400
    87cc:	add	r2, pc, r2
    87d0:	b	4280 <snprintf@plt>
    87d4:	mov	r2, #1024	; 0x400
    87d8:	b	42a4 <memset@plt>
    87dc:	.word	0x0001bc40

000087e0 <readstat_variable_set_format>:
    87e0:	subs	r3, r1, #0
    87e4:	add	r0, r0, #308	; 0x134
    87e8:	beq	87fc <readstat_variable_set_format+0x1c>
    87ec:	ldr	r2, [pc, #16]	; 8804 <readstat_variable_set_format+0x24>
    87f0:	mov	r1, #256	; 0x100
    87f4:	add	r2, pc, r2
    87f8:	b	4280 <snprintf@plt>
    87fc:	mov	r2, #256	; 0x100
    8800:	b	42a4 <memset@plt>
    8804:	.word	0x0001bc18

00008808 <readstat_variable_set_measure>:
    8808:	str	r1, [r0, #2128]	; 0x850
    880c:	bx	lr

00008810 <readstat_variable_set_alignment>:
    8810:	str	r1, [r0, #2132]	; 0x854
    8814:	bx	lr

00008818 <readstat_variable_set_display_width>:
    8818:	str	r1, [r0, #2136]	; 0x858
    881c:	bx	lr

00008820 <readstat_variable_set_label_set>:
    8820:	cmp	r1, #0
    8824:	str	r1, [r0, #1588]	; 0x634
    8828:	bxeq	lr
    882c:	push	{r4, r5, r6, lr}
    8830:	mov	r4, r1
    8834:	ldr	r1, [r1, #276]	; 0x114
    8838:	ldr	r3, [r4, #280]	; 0x118
    883c:	mov	r5, r0
    8840:	cmp	r1, r3
    8844:	beq	885c <readstat_variable_set_label_set+0x3c>
    8848:	ldr	r0, [r4, #272]	; 0x110
    884c:	add	r3, r1, #1
    8850:	str	r3, [r4, #276]	; 0x114
    8854:	str	r5, [r0, r1, lsl #2]
    8858:	pop	{r4, r5, r6, pc}
    885c:	lsl	r3, r1, #1
    8860:	str	r3, [r4, #280]	; 0x118
    8864:	lsl	r1, r1, #3
    8868:	ldr	r0, [r4, #272]	; 0x110
    886c:	bl	3ff8 <realloc@plt>
    8870:	ldr	r1, [r4, #276]	; 0x114
    8874:	str	r0, [r4, #272]	; 0x110
    8878:	b	884c <readstat_variable_set_label_set+0x2c>

0000887c <readstat_get_variable>:
    887c:	ldr	r3, [r0, #28]
    8880:	cmp	r3, r1
    8884:	ldrgt	r3, [r0, #24]
    8888:	ldrgt	r0, [r3, r1, lsl #2]
    888c:	movle	r0, #0
    8890:	bx	lr

00008894 <readstat_begin_writing_data>:
    8894:	push	{r4, r5, r6, r7, r8, lr}
    8898:	mov	r4, r0
    889c:	bl	3da0 <readstat_validate_metadata@plt>
    88a0:	subs	r8, r0, #0
    88a4:	bne	8948 <readstat_begin_writing_data+0xb4>
    88a8:	ldr	r3, [r4, #28]
    88ac:	cmp	r3, #0
    88b0:	ble	8950 <readstat_begin_writing_data+0xbc>
    88b4:	mov	r6, r8
    88b8:	mov	r7, r8
    88bc:	mov	r1, r6
    88c0:	mov	r0, r4
    88c4:	bl	437c <readstat_get_variable@plt>
    88c8:	ldr	r3, [r4, #228]	; 0xe4
    88cc:	add	r6, r6, #1
    88d0:	mov	r5, r0
    88d4:	ldr	r1, [r0, #1600]	; 0x640
    88d8:	ldr	r0, [r0]
    88dc:	blx	r3
    88e0:	ldr	r3, [r4, #28]
    88e4:	str	r7, [r5, #1592]	; 0x638
    88e8:	cmp	r3, r6
    88ec:	str	r0, [r5, #1596]	; 0x63c
    88f0:	add	r7, r7, r0
    88f4:	bgt	88bc <readstat_begin_writing_data+0x28>
    88f8:	ldr	r2, [r4, #232]	; 0xe8
    88fc:	cmp	r2, #0
    8900:	beq	8954 <readstat_begin_writing_data+0xc0>
    8904:	cmp	r3, #0
    8908:	ble	8954 <readstat_begin_writing_data+0xc0>
    890c:	mov	r5, #0
    8910:	b	8920 <readstat_begin_writing_data+0x8c>
    8914:	ldr	r3, [r4, #28]
    8918:	cmp	r3, r5
    891c:	ble	8954 <readstat_begin_writing_data+0xc0>
    8920:	mov	r1, r5
    8924:	mov	r0, r4
    8928:	bl	437c <readstat_get_variable@plt>
    892c:	add	r5, r5, #1
    8930:	mov	r1, r0
    8934:	mov	r0, r4
    8938:	bl	449c <readstat_validate_variable@plt>
    893c:	cmp	r0, #0
    8940:	beq	8914 <readstat_begin_writing_data+0x80>
    8944:	mov	r8, r0
    8948:	mov	r0, r8
    894c:	pop	{r4, r5, r6, r7, r8, pc}
    8950:	mov	r7, r8
    8954:	str	r7, [r4, #76]	; 0x4c
    8958:	mov	r0, r7
    895c:	bl	410c <malloc@plt>
    8960:	ldr	r3, [r4, #276]	; 0x114
    8964:	cmp	r3, #0
    8968:	str	r0, [r4, #72]	; 0x48
    896c:	beq	8948 <readstat_begin_writing_data+0xb4>
    8970:	mov	r0, r4
    8974:	pop	{r4, r5, r6, r7, r8, lr}
    8978:	bx	r3

0000897c <readstat_get_string_ref>:
    897c:	ldr	r3, [r0, #64]	; 0x40
    8980:	cmp	r3, r1
    8984:	ldrgt	r3, [r0, #60]	; 0x3c
    8988:	ldrgt	r0, [r3, r1, lsl #2]
    898c:	movle	r0, #0
    8990:	bx	lr

00008994 <readstat_writer_set_file_label>:
    8994:	ldr	r2, [pc, #28]	; 89b8 <readstat_writer_set_file_label+0x24>
    8998:	mov	r3, r1
    899c:	push	{r4, lr}
    89a0:	add	r2, pc, r2
    89a4:	mov	r1, #100	; 0x64
    89a8:	add	r0, r0, #88	; 0x58
    89ac:	bl	4280 <snprintf@plt>
    89b0:	mov	r0, #0
    89b4:	pop	{r4, pc}
    89b8:	.word	0x0001ba6c

000089bc <readstat_writer_set_file_timestamp>:
    89bc:	str	r1, [r0, #20]
    89c0:	mov	r0, #0
    89c4:	bx	lr

000089c8 <readstat_writer_set_table_name>:
    89c8:	ldr	r2, [pc, #28]	; 89ec <readstat_writer_set_table_name+0x24>
    89cc:	mov	r3, r1
    89d0:	push	{r4, lr}
    89d4:	add	r2, pc, r2
    89d8:	mov	r1, #33	; 0x21
    89dc:	add	r0, r0, #188	; 0xbc
    89e0:	bl	4280 <snprintf@plt>
    89e4:	mov	r0, #0
    89e8:	pop	{r4, pc}
    89ec:	.word	0x0001ba38

000089f0 <readstat_writer_set_fweight_variable>:
    89f0:	push	{r4, r5, r6, lr}
    89f4:	mov	r5, r0
    89f8:	mov	r0, r1
    89fc:	mov	r4, r1
    8a00:	bl	4544 <readstat_variable_get_type_class@plt>
    8a04:	cmp	r0, #0
    8a08:	movne	r0, #0
    8a0c:	strne	r4, [r5, #224]	; 0xe0
    8a10:	moveq	r0, #30
    8a14:	pop	{r4, r5, r6, pc}

00008a18 <readstat_writer_set_file_format_version>:
    8a18:	str	r1, [r0, #8]
    8a1c:	mov	r0, #0
    8a20:	bx	lr

00008a24 <readstat_writer_set_file_format_is_64bit>:
    8a24:	str	r1, [r0, #12]
    8a28:	mov	r0, #0
    8a2c:	bx	lr

00008a30 <readstat_writer_set_compression>:
    8a30:	str	r1, [r0, #16]
    8a34:	mov	r0, #0
    8a38:	bx	lr

00008a3c <readstat_writer_set_error_handler>:
    8a3c:	str	r1, [r0, #296]	; 0x128
    8a40:	mov	r0, #0
    8a44:	bx	lr

00008a48 <readstat_begin_writing_file>:
    8a48:	mov	ip, #1
    8a4c:	str	r2, [r0, #80]	; 0x50
    8a50:	str	r1, [r0, #304]	; 0x130
    8a54:	str	ip, [r0, #308]	; 0x134
    8a58:	b	3da0 <readstat_validate_metadata@plt>

00008a5c <readstat_begin_row>:
    8a5c:	ldr	r2, [r0, #308]	; 0x134
    8a60:	push	{r4, r5, r6, lr}
    8a64:	cmp	r2, #0
    8a68:	moveq	r5, #14
    8a6c:	bne	8a78 <readstat_begin_row+0x1c>
    8a70:	mov	r0, r5
    8a74:	pop	{r4, r5, r6, pc}
    8a78:	ldr	r3, [r0, #84]	; 0x54
    8a7c:	mov	r4, r0
    8a80:	cmp	r3, #0
    8a84:	movne	r5, #0
    8a88:	beq	8aa4 <readstat_begin_row+0x48>
    8a8c:	ldr	r2, [r4, #76]	; 0x4c
    8a90:	ldr	r0, [r4, #72]	; 0x48
    8a94:	mov	r1, #0
    8a98:	bl	42a4 <memset@plt>
    8a9c:	mov	r0, r5
    8aa0:	pop	{r4, r5, r6, pc}
    8aa4:	bl	8894 <readstat_begin_writing_data>
    8aa8:	mov	r5, r0
    8aac:	b	8a8c <readstat_begin_row+0x30>

00008ab0 <readstat_insert_int8_value>:
    8ab0:	ldr	r3, [r0, #308]	; 0x134
    8ab4:	cmp	r3, #0
    8ab8:	bne	8ac4 <readstat_insert_int8_value+0x14>
    8abc:	mov	r0, #14
    8ac0:	bx	lr
    8ac4:	ldr	r3, [r1]
    8ac8:	cmp	r3, #1
    8acc:	beq	8ad8 <readstat_insert_int8_value+0x28>
    8ad0:	mov	r0, #12
    8ad4:	bx	lr
    8ad8:	push	{lr}		; (str lr, [sp, #-4]!)
    8adc:	ldr	ip, [r1, #1592]	; 0x638
    8ae0:	ldr	lr, [r0, #72]	; 0x48
    8ae4:	ldr	r3, [r0, #236]	; 0xec
    8ae8:	add	r0, lr, ip
    8aec:	pop	{lr}		; (ldr lr, [sp], #4)
    8af0:	bx	r3

00008af4 <readstat_insert_int16_value>:
    8af4:	ldr	r3, [r0, #308]	; 0x134
    8af8:	cmp	r3, #0
    8afc:	bne	8b08 <readstat_insert_int16_value+0x14>
    8b00:	mov	r0, #14
    8b04:	bx	lr
    8b08:	ldr	r3, [r1]
    8b0c:	cmp	r3, #2
    8b10:	beq	8b1c <readstat_insert_int16_value+0x28>
    8b14:	mov	r0, #12
    8b18:	bx	lr
    8b1c:	push	{lr}		; (str lr, [sp, #-4]!)
    8b20:	ldr	ip, [r1, #1592]	; 0x638
    8b24:	ldr	lr, [r0, #72]	; 0x48
    8b28:	ldr	r3, [r0, #240]	; 0xf0
    8b2c:	add	r0, lr, ip
    8b30:	pop	{lr}		; (ldr lr, [sp], #4)
    8b34:	bx	r3

00008b38 <readstat_insert_int32_value>:
    8b38:	ldr	r3, [r0, #308]	; 0x134
    8b3c:	cmp	r3, #0
    8b40:	bne	8b4c <readstat_insert_int32_value+0x14>
    8b44:	mov	r0, #14
    8b48:	bx	lr
    8b4c:	ldr	r3, [r1]
    8b50:	cmp	r3, #3
    8b54:	beq	8b60 <readstat_insert_int32_value+0x28>
    8b58:	mov	r0, #12
    8b5c:	bx	lr
    8b60:	push	{lr}		; (str lr, [sp, #-4]!)
    8b64:	ldr	ip, [r1, #1592]	; 0x638
    8b68:	ldr	lr, [r0, #72]	; 0x48
    8b6c:	ldr	r3, [r0, #244]	; 0xf4
    8b70:	add	r0, lr, ip
    8b74:	pop	{lr}		; (ldr lr, [sp], #4)
    8b78:	bx	r3

00008b7c <readstat_insert_float_value>:
    8b7c:	ldr	r3, [r0, #308]	; 0x134
    8b80:	cmp	r3, #0
    8b84:	bne	8b90 <readstat_insert_float_value+0x14>
    8b88:	mov	r0, #14
    8b8c:	bx	lr
    8b90:	ldr	r3, [r1]
    8b94:	cmp	r3, #4
    8b98:	beq	8ba4 <readstat_insert_float_value+0x28>
    8b9c:	mov	r0, #12
    8ba0:	bx	lr
    8ba4:	ldr	r2, [r1, #1592]	; 0x638
    8ba8:	ldr	ip, [r0, #72]	; 0x48
    8bac:	ldr	r3, [r0, #248]	; 0xf8
    8bb0:	add	r0, ip, r2
    8bb4:	bx	r3

00008bb8 <readstat_insert_double_value>:
    8bb8:	ldr	r3, [r0, #308]	; 0x134
    8bbc:	cmp	r3, #0
    8bc0:	bne	8bcc <readstat_insert_double_value+0x14>
    8bc4:	mov	r0, #14
    8bc8:	bx	lr
    8bcc:	ldr	r3, [r1]
    8bd0:	cmp	r3, #5
    8bd4:	beq	8be0 <readstat_insert_double_value+0x28>
    8bd8:	mov	r0, #12
    8bdc:	bx	lr
    8be0:	ldr	r2, [r1, #1592]	; 0x638
    8be4:	ldr	ip, [r0, #72]	; 0x48
    8be8:	ldr	r3, [r0, #252]	; 0xfc
    8bec:	add	r0, ip, r2
    8bf0:	bx	r3

00008bf4 <readstat_insert_string_value>:
    8bf4:	ldr	r3, [r0, #308]	; 0x134
    8bf8:	cmp	r3, #0
    8bfc:	bne	8c08 <readstat_insert_string_value+0x14>
    8c00:	mov	r0, #14
    8c04:	bx	lr
    8c08:	ldr	r3, [r1]
    8c0c:	cmp	r3, #0
    8c10:	beq	8c1c <readstat_insert_string_value+0x28>
    8c14:	mov	r0, #12
    8c18:	bx	lr
    8c1c:	push	{lr}		; (str lr, [sp, #-4]!)
    8c20:	ldr	ip, [r1, #1592]	; 0x638
    8c24:	ldr	lr, [r0, #72]	; 0x48
    8c28:	ldr	r3, [r0, #256]	; 0x100
    8c2c:	add	r0, lr, ip
    8c30:	pop	{lr}		; (ldr lr, [sp], #4)
    8c34:	bx	r3

00008c38 <readstat_insert_string_ref>:
    8c38:	ldr	r3, [r0, #308]	; 0x134
    8c3c:	cmp	r3, #0
    8c40:	bne	8c4c <readstat_insert_string_ref+0x14>
    8c44:	mov	r0, #14
    8c48:	bx	lr
    8c4c:	ldr	r3, [r1]
    8c50:	cmp	r3, #6
    8c54:	beq	8c60 <readstat_insert_string_ref+0x28>
    8c58:	mov	r0, #12
    8c5c:	bx	lr
    8c60:	ldr	r3, [r0, #260]	; 0x104
    8c64:	cmp	r3, #0
    8c68:	beq	8ca4 <readstat_insert_string_ref+0x6c>
    8c6c:	cmp	r2, #0
    8c70:	beq	8cd8 <readstat_insert_string_ref+0xa0>
    8c74:	push	{r4, r5, r6, r7}
    8c78:	mvn	r5, #0
    8c7c:	ldrd	r6, [r2, #8]
    8c80:	mvn	r4, #0
    8c84:	cmp	r7, r5
    8c88:	cmpeq	r6, r4
    8c8c:	beq	8cac <readstat_insert_string_ref+0x74>
    8c90:	ldr	ip, [r0, #72]	; 0x48
    8c94:	ldr	r0, [r1, #1592]	; 0x638
    8c98:	pop	{r4, r5, r6, r7}
    8c9c:	add	r0, ip, r0
    8ca0:	bx	r3
    8ca4:	mov	r0, #33	; 0x21
    8ca8:	bx	lr
    8cac:	ldrd	r4, [r2]
    8cb0:	cmp	r5, r7
    8cb4:	cmpeq	r4, r6
    8cb8:	bne	8c90 <readstat_insert_string_ref+0x58>
    8cbc:	ldr	r6, [r0, #84]	; 0x54
    8cc0:	ldr	r4, [r1, #4]
    8cc4:	asr	r7, r6, #31
    8cc8:	asr	r5, r4, #31
    8ccc:	strd	r6, [r2, #8]
    8cd0:	strd	r4, [r2]
    8cd4:	b	8c90 <readstat_insert_string_ref+0x58>
    8cd8:	ldr	ip, [r0, #72]	; 0x48
    8cdc:	ldr	r0, [r1, #1592]	; 0x638
    8ce0:	add	r0, ip, r0
    8ce4:	bx	r3

00008ce8 <readstat_insert_missing_value>:
    8ce8:	ldr	r2, [r0, #308]	; 0x134
    8cec:	mov	r3, r0
    8cf0:	cmp	r2, #0
    8cf4:	bne	8d00 <readstat_insert_missing_value+0x18>
    8cf8:	mov	r0, #14
    8cfc:	bx	lr
    8d00:	ldr	r2, [r1]
    8d04:	cmp	r2, #0
    8d08:	beq	8d28 <readstat_insert_missing_value+0x40>
    8d0c:	cmp	r2, #6
    8d10:	beq	8d3c <readstat_insert_missing_value+0x54>
    8d14:	ldr	r2, [r1, #1592]	; 0x638
    8d18:	ldr	r0, [r0, #72]	; 0x48
    8d1c:	ldr	r3, [r3, #268]	; 0x10c
    8d20:	add	r0, r0, r2
    8d24:	bx	r3
    8d28:	ldr	r2, [r1, #1592]	; 0x638
    8d2c:	ldr	r0, [r0, #72]	; 0x48
    8d30:	ldr	r3, [r3, #264]	; 0x108
    8d34:	add	r0, r0, r2
    8d38:	bx	r3
    8d3c:	mov	r2, #0
    8d40:	b	3f50 <readstat_insert_string_ref@plt>

00008d44 <readstat_insert_tagged_missing_value>:
    8d44:	ldr	r3, [r0, #308]	; 0x134
    8d48:	cmp	r3, #0
    8d4c:	bne	8d58 <readstat_insert_tagged_missing_value+0x14>
    8d50:	mov	r0, #14
    8d54:	bx	lr
    8d58:	ldr	r3, [r0, #272]	; 0x110
    8d5c:	push	{r4, lr}
    8d60:	cmp	r3, #0
    8d64:	beq	8d7c <readstat_insert_tagged_missing_value+0x38>
    8d68:	ldr	lr, [r0, #72]	; 0x48
    8d6c:	ldr	r0, [r1, #1592]	; 0x638
    8d70:	add	r0, lr, r0
    8d74:	pop	{r4, lr}
    8d78:	bx	r3
    8d7c:	ldr	r2, [r1, #1592]	; 0x638
    8d80:	ldr	ip, [r0, #72]	; 0x48
    8d84:	ldr	r3, [r0, #268]	; 0x10c
    8d88:	add	r0, ip, r2
    8d8c:	blx	r3
    8d90:	mov	r0, #23
    8d94:	pop	{r4, pc}

00008d98 <readstat_end_row>:
    8d98:	ldr	r2, [r0, #308]	; 0x134
    8d9c:	cmp	r2, #0
    8da0:	bne	8dac <readstat_end_row+0x14>
    8da4:	mov	r0, #14
    8da8:	bx	lr
    8dac:	ldr	r3, [r0, #280]	; 0x118
    8db0:	push	{r4, lr}
    8db4:	mov	r4, r0
    8db8:	ldr	r2, [r0, #76]	; 0x4c
    8dbc:	ldr	r1, [r0, #72]	; 0x48
    8dc0:	blx	r3
    8dc4:	cmp	r0, #0
    8dc8:	ldreq	r3, [r4, #84]	; 0x54
    8dcc:	addeq	r3, r3, #1
    8dd0:	streq	r3, [r4, #84]	; 0x54
    8dd4:	pop	{r4, pc}

00008dd8 <readstat_end_writing>:
    8dd8:	ldr	r2, [r0, #308]	; 0x134
    8ddc:	cmp	r2, #0
    8de0:	bne	8dec <readstat_end_writing+0x14>
    8de4:	mov	r0, #14
    8de8:	bx	lr
    8dec:	ldr	r2, [r0, #84]	; 0x54
    8df0:	ldr	r1, [r0, #80]	; 0x50
    8df4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    8df8:	cmp	r2, r1
    8dfc:	mov	r4, r0
    8e00:	beq	8e0c <readstat_end_writing+0x34>
    8e04:	mov	r0, #9
    8e08:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    8e0c:	cmp	r2, #0
    8e10:	beq	8e94 <readstat_end_writing+0xbc>
    8e14:	ldr	r1, [r4, #64]	; 0x40
    8e18:	cmp	r1, #1
    8e1c:	ble	8e7c <readstat_end_writing+0xa4>
    8e20:	ldr	r0, [r4, #60]	; 0x3c
    8e24:	mov	r2, #1
    8e28:	mov	r3, r0
    8e2c:	b	8e38 <readstat_end_writing+0x60>
    8e30:	cmp	r2, r1
    8e34:	beq	8e7c <readstat_end_writing+0xa4>
    8e38:	ldr	r5, [r3]
    8e3c:	ldr	lr, [r3, #4]!
    8e40:	add	r2, r2, #1
    8e44:	ldrd	r8, [r5]
    8e48:	ldrd	r6, [lr]
    8e4c:	cmp	r9, r7
    8e50:	cmpeq	r8, r6
    8e54:	sub	ip, r8, r6
    8e58:	ldreq	lr, [lr, #8]
    8e5c:	ldreq	ip, [r5, #8]
    8e60:	subeq	ip, ip, lr
    8e64:	cmp	ip, #0
    8e68:	ble	8e30 <readstat_end_writing+0x58>
    8e6c:	ldr	r3, [pc, #56]	; 8eac <readstat_end_writing+0xd4>
    8e70:	mov	r2, #4
    8e74:	add	r3, pc, r3
    8e78:	bl	443c <qsort@plt>
    8e7c:	ldr	r3, [r4, #284]	; 0x11c
    8e80:	cmp	r3, #0
    8e84:	beq	8ea4 <readstat_end_writing+0xcc>
    8e88:	mov	r0, r4
    8e8c:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    8e90:	bx	r3
    8e94:	bl	8894 <readstat_begin_writing_data>
    8e98:	cmp	r0, #0
    8e9c:	beq	8e14 <readstat_end_writing+0x3c>
    8ea0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    8ea4:	mov	r0, r3
    8ea8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    8eac:	.word	0xffffef68

00008eb0 <memreverse>:
    8eb0:	push	{r4, r5, r6, lr}
    8eb4:	mov	r4, r0
    8eb8:	mov	r5, r1
    8ebc:	bl	3eb4 <machine_is_little_endian@plt>
    8ec0:	cmp	r0, #0
    8ec4:	popeq	{r4, r5, r6, pc}
    8ec8:	add	ip, r5, r5, lsr #31
    8ecc:	asr	ip, ip, #1
    8ed0:	cmp	ip, #0
    8ed4:	pople	{r4, r5, r6, pc}
    8ed8:	mov	r0, r4
    8edc:	add	r1, r4, r5
    8ee0:	add	ip, r4, ip
    8ee4:	ldrb	r2, [r1, #-1]
    8ee8:	ldrb	r3, [r0]
    8eec:	strb	r2, [r0], #1
    8ef0:	cmp	r0, ip
    8ef4:	strb	r3, [r1, #-1]!
    8ef8:	bne	8ee4 <memreverse+0x34>
    8efc:	pop	{r4, r5, r6, pc}

00008f00 <get_native>:
    8f00:	push	{r4, r5, r6, r7, r8, lr}
    8f04:	mov	r4, #0
    8f08:	ldr	r5, [pc, #64]	; 8f50 <get_native+0x50>
    8f0c:	mov	r6, #8
    8f10:	add	r5, pc, r5
    8f14:	add	r7, r5, #24
    8f18:	mov	r1, r5
    8f1c:	mov	r2, r6
    8f20:	mov	r0, r7
    8f24:	bl	3fa4 <memcmp@plt>
    8f28:	add	r5, r5, #8
    8f2c:	cmp	r0, #0
    8f30:	beq	8f48 <get_native+0x48>
    8f34:	add	r4, r4, #1
    8f38:	cmp	r4, #3
    8f3c:	bne	8f18 <get_native+0x18>
    8f40:	mvn	r0, #0
    8f44:	pop	{r4, r5, r6, r7, r8, pc}
    8f48:	add	r0, r4, #1
    8f4c:	pop	{r4, r5, r6, r7, r8, pc}
    8f50:	.word	0x0003b408

00008f54 <cnxptiee>:
    8f54:	push	{r4, r5, r6, r7, lr}
    8f58:	subs	r4, r1, #0
    8f5c:	sub	sp, sp, #36	; 0x24
    8f60:	mov	r6, r0
    8f64:	mov	r5, r2
    8f68:	mov	r7, r3
    8f6c:	beq	9000 <cnxptiee+0xac>
    8f70:	cmp	r4, #1
    8f74:	blt	8ff4 <cnxptiee+0xa0>
    8f78:	cmp	r4, #2
    8f7c:	ble	8fb4 <cnxptiee+0x60>
    8f80:	cmp	r4, #3
    8f84:	bne	8ff4 <cnxptiee+0xa0>
    8f88:	cmp	r7, #3
    8f8c:	beq	9120 <cnxptiee+0x1cc>
    8f90:	add	r3, sp, #16
    8f94:	mov	r1, r3
    8f98:	add	r2, r6, #8
    8f9c:	ldrb	r0, [r2, #-1]!
    8fa0:	cmp	r6, r2
    8fa4:	strb	r0, [r1], #1
    8fa8:	bne	8f9c <cnxptiee+0x48>
    8fac:	mov	r6, r3
    8fb0:	mov	r4, #2
    8fb4:	cmp	r7, #0
    8fb8:	beq	9114 <cnxptiee+0x1c0>
    8fbc:	sub	r3, r7, #1
    8fc0:	cmp	r3, #2
    8fc4:	bhi	9338 <cnxptiee+0x3e4>
    8fc8:	cmp	r4, r7
    8fcc:	beq	9120 <cnxptiee+0x1cc>
    8fd0:	cmp	r4, #1
    8fd4:	beq	9058 <cnxptiee+0x104>
    8fd8:	cmp	r4, #2
    8fdc:	beq	903c <cnxptiee+0xe8>
    8fe0:	cmp	r7, #3
    8fe4:	beq	900c <cnxptiee+0xb8>
    8fe8:	mov	r0, #0
    8fec:	add	sp, sp, #36	; 0x24
    8ff0:	pop	{r4, r5, r6, r7, pc}
    8ff4:	mvn	r0, #0
    8ff8:	add	sp, sp, #36	; 0x24
    8ffc:	pop	{r4, r5, r6, r7, pc}
    9000:	bl	41c0 <get_native@plt>
    9004:	mov	r4, r0
    9008:	b	8f70 <cnxptiee+0x1c>
    900c:	ldr	r0, [r5]
    9010:	ldr	r1, [r5, #4]
    9014:	add	ip, sp, #16
    9018:	sub	r3, r5, #1
    901c:	add	r2, sp, #24
    9020:	add	r5, r5, #7
    9024:	stmia	ip!, {r0, r1}
    9028:	ldrb	r1, [r2, #-1]!
    902c:	strb	r1, [r3, #1]!
    9030:	cmp	r5, r3
    9034:	bne	9028 <cnxptiee+0xd4>
    9038:	b	8fe8 <cnxptiee+0x94>
    903c:	cmp	r7, #1
    9040:	beq	9138 <cnxptiee+0x1e4>
    9044:	ldr	r2, [r6]
    9048:	ldr	r3, [r6, #4]
    904c:	str	r2, [r5]
    9050:	str	r3, [r5, #4]
    9054:	b	8fe0 <cnxptiee+0x8c>
    9058:	ldr	r0, [r6]
    905c:	ldr	r1, [r6, #4]
    9060:	add	r2, sp, #24
    9064:	mov	r3, #0
    9068:	stmia	r2!, {r0, r1}
    906c:	ldrb	r6, [sp, #24]
    9070:	str	r3, [sp, #8]
    9074:	str	r3, [sp, #12]
    9078:	cmp	r6, r3
    907c:	str	r3, [r5]
    9080:	str	r3, [r5, #4]
    9084:	beq	90a0 <cnxptiee+0x14c>
    9088:	mov	r2, #7
    908c:	mov	r1, r5
    9090:	add	r0, sp, #25
    9094:	bl	3fa4 <memcmp@plt>
    9098:	cmp	r0, #0
    909c:	beq	9230 <cnxptiee+0x2dc>
    90a0:	ldr	r3, [sp, #24]
    90a4:	add	r0, sp, #32
    90a8:	mov	r1, #4
    90ac:	str	r3, [r0, #-24]!	; 0xffffffe8
    90b0:	bl	3dc4 <memreverse@plt>
    90b4:	ldr	r3, [sp, #28]
    90b8:	add	r0, sp, #32
    90bc:	mov	r1, #4
    90c0:	str	r3, [r0, #-20]!	; 0xffffffec
    90c4:	bl	3dc4 <memreverse@plt>
    90c8:	ldr	r3, [sp, #8]
    90cc:	ldr	r1, [sp, #12]
    90d0:	bic	r2, r3, #-2147483648	; 0x80000000
    90d4:	cmn	r2, #-2147483647	; 0x80000001
    90d8:	beq	9314 <cnxptiee+0x3c0>
    90dc:	orrs	r2, r3, r1
    90e0:	bic	r2, r3, #-16777216	; 0xff000000
    90e4:	str	r1, [sp, #4]
    90e8:	str	r2, [sp]
    90ec:	beq	8fe0 <cnxptiee+0x8c>
    90f0:	tst	r3, #8388608	; 0x800000
    90f4:	bne	9248 <cnxptiee+0x2f4>
    90f8:	tst	r3, #4194304	; 0x400000
    90fc:	bne	92b4 <cnxptiee+0x360>
    9100:	ands	ip, r3, #2097152	; 0x200000
    9104:	beq	9264 <cnxptiee+0x310>
    9108:	mov	ip, r4
    910c:	mov	lr, #31
    9110:	b	9250 <cnxptiee+0x2fc>
    9114:	bl	41c0 <get_native@plt>
    9118:	mov	r7, r0
    911c:	b	8fbc <cnxptiee+0x68>
    9120:	ldr	r2, [r6]
    9124:	ldr	r3, [r6, #4]
    9128:	mov	r0, #0
    912c:	str	r2, [r5]
    9130:	str	r3, [r5, #4]
    9134:	b	8fec <cnxptiee+0x98>
    9138:	ldr	r0, [r6]
    913c:	ldr	r1, [r6, #4]
    9140:	add	r2, sp, #32
    9144:	add	r3, sp, #24
    9148:	mov	r4, #0
    914c:	stmia	r3!, {r0, r1}
    9150:	str	r0, [r2, #-24]!	; 0xffffffe8
    9154:	mov	r1, #4
    9158:	mov	r0, r2
    915c:	ldr	r6, [r6, #4]
    9160:	str	r4, [sp, #12]
    9164:	bl	3dc4 <memreverse@plt>
    9168:	add	r0, sp, #32
    916c:	mov	r1, #4
    9170:	str	r6, [r0, #-20]!	; 0xffffffec
    9174:	bl	3dc4 <memreverse@plt>
    9178:	ldrb	r3, [sp, #24]
    917c:	str	r4, [r5]
    9180:	str	r4, [r5, #4]
    9184:	cmp	r3, #255	; 0xff
    9188:	beq	92ec <cnxptiee+0x398>
    918c:	ldr	r2, [sp, #8]
    9190:	ldr	ip, [sp, #12]
    9194:	bic	r3, r2, #-16777216	; 0xff000000
    9198:	bic	r3, r3, #15728640	; 0xf00000
    919c:	orrs	r1, r2, ip
    91a0:	stm	sp, {r3, ip}
    91a4:	beq	92c0 <cnxptiee+0x36c>
    91a8:	ldr	r1, [pc, #400]	; 9340 <cnxptiee+0x3ec>
    91ac:	orr	r0, r3, #1048576	; 0x100000
    91b0:	and	r3, r1, r2, lsr #20
    91b4:	sub	r3, r3, #1020	; 0x3fc
    91b8:	sub	r3, r3, #3
    91bc:	ands	lr, r3, #3
    91c0:	beq	91e0 <cnxptiee+0x28c>
    91c4:	lsr	r4, ip, #24
    91c8:	lsl	r0, r0, lr
    91cc:	and	r4, r4, #224	; 0xe0
    91d0:	rsb	r1, lr, #8
    91d4:	lsl	ip, ip, lr
    91d8:	orr	r0, r0, r4, lsr r1
    91dc:	str	ip, [sp, #4]
    91e0:	asr	r1, r3, #2
    91e4:	lsr	r2, r2, #24
    91e8:	and	ip, r2, #128	; 0x80
    91ec:	add	r1, r1, #65	; 0x41
    91f0:	orr	r1, r1, ip
    91f4:	cmn	r3, #260	; 0x104
    91f8:	movlt	r3, #0
    91fc:	orr	r1, r0, r1, lsl #24
    9200:	str	r1, [sp]
    9204:	strlt	r3, [r5]
    9208:	strlt	r3, [r5, #4]
    920c:	blt	8fe8 <cnxptiee+0x94>
    9210:	cmp	r3, #248	; 0xf8
    9214:	ble	92c0 <cnxptiee+0x36c>
    9218:	mvn	r3, #0
    921c:	orr	r2, r2, #127	; 0x7f
    9220:	str	r3, [r5, #1]
    9224:	strb	r2, [r5]
    9228:	str	r3, [r5, #4]
    922c:	b	8fe8 <cnxptiee+0x94>
    9230:	mvn	r3, #0
    9234:	mvn	r6, r6
    9238:	strb	r6, [r5, #2]
    923c:	strb	r3, [r5, #1]
    9240:	strb	r3, [r5]
    9244:	b	8fe0 <cnxptiee+0x8c>
    9248:	mov	lr, #29
    924c:	mov	ip, #3
    9250:	lsr	r0, r1, ip
    9254:	and	r1, r3, #7
    9258:	lsr	r2, r2, ip
    925c:	orr	r1, r0, r1, lsl lr
    9260:	str	r1, [sp, #4]
    9264:	and	r1, r6, #127	; 0x7f
    9268:	bic	r2, r2, #1048576	; 0x100000
    926c:	add	r1, ip, r1, lsl #2
    9270:	add	r1, r1, #760	; 0x2f8
    9274:	add	r1, r1, #3
    9278:	and	r3, r3, #-2147483648	; 0x80000000
    927c:	orr	r3, r2, r3
    9280:	orr	r3, r3, r1, lsl #20
    9284:	str	r3, [sp]
    9288:	mov	r1, #4
    928c:	mov	r0, sp
    9290:	bl	3dc4 <memreverse@plt>
    9294:	ldr	r3, [sp]
    9298:	mov	r1, #4
    929c:	str	r3, [r5]
    92a0:	add	r0, sp, r1
    92a4:	bl	3dc4 <memreverse@plt>
    92a8:	ldr	r3, [sp, #4]
    92ac:	str	r3, [r5, #4]
    92b0:	b	8fe0 <cnxptiee+0x8c>
    92b4:	mov	lr, #30
    92b8:	mov	ip, #2
    92bc:	b	9250 <cnxptiee+0x2fc>
    92c0:	mov	r1, #4
    92c4:	mov	r0, sp
    92c8:	bl	3dc4 <memreverse@plt>
    92cc:	ldr	r3, [sp]
    92d0:	mov	r1, #4
    92d4:	str	r3, [r5]
    92d8:	add	r0, sp, r1
    92dc:	bl	3dc4 <memreverse@plt>
    92e0:	ldr	r3, [sp, #4]
    92e4:	str	r3, [r5, #4]
    92e8:	b	8fe8 <cnxptiee+0x94>
    92ec:	ldrb	r3, [sp, #25]
    92f0:	cmp	r3, #255	; 0xff
    92f4:	bne	918c <cnxptiee+0x238>
    92f8:	ldrb	r3, [sp, #26]
    92fc:	mvn	r3, r3
    9300:	uxtb	r3, r3
    9304:	cmp	r3, #210	; 0xd2
    9308:	moveq	r3, #109	; 0x6d
    930c:	strb	r3, [r5]
    9310:	b	8fe8 <cnxptiee+0x94>
    9314:	cmn	r1, #1
    9318:	bne	90dc <cnxptiee+0x188>
    931c:	and	r3, r3, #-2147483648	; 0x80000000
    9320:	orr	r3, r3, #2130706432	; 0x7f000000
    9324:	orr	r3, r3, #15728640	; 0xf00000
    9328:	mov	r2, #0
    932c:	str	r3, [sp]
    9330:	str	r2, [sp, #4]
    9334:	b	9288 <cnxptiee+0x334>
    9338:	mvn	r0, #1
    933c:	b	8fec <cnxptiee+0x98>
    9340:	.word	0x000007ff
    9344:	.word	0x00000000

00009348 <sas_read8>:
    9348:	mov	r3, r0
    934c:	sub	sp, sp, #8
    9350:	mov	r2, r1
    9354:	ldr	r0, [r0]
    9358:	ldr	r1, [r3, #4]
    935c:	mov	r3, sp
    9360:	cmp	r2, #0
    9364:	stmia	r3!, {r0, r1}
    9368:	ldrd	r0, [sp]
    936c:	bne	9378 <sas_read8+0x30>
    9370:	add	sp, sp, #8
    9374:	bx	lr
    9378:	add	sp, sp, #8
    937c:	b	3d7c <byteswap8@plt>

00009380 <sas_read4>:
    9380:	cmp	r1, #0
    9384:	ldr	r0, [r0]
    9388:	bne	9390 <sas_read4+0x10>
    938c:	bx	lr
    9390:	b	3d94 <byteswap4@plt>

00009394 <sas_read2>:
    9394:	cmp	r1, #0
    9398:	ldrh	r0, [r0]
    939c:	bxeq	lr
    93a0:	b	3ea8 <byteswap2@plt>

000093a4 <sas_subheader_remainder>:
    93a4:	add	r1, r1, #2
    93a8:	sub	r0, r0, r1, lsl #1
    93ac:	bx	lr

000093b0 <sas_read_header>:
    93b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    93b4:	sub	sp, sp, #1392	; 0x570
    93b8:	sub	sp, sp, #12
    93bc:	add	r6, sp, #48	; 0x30
    93c0:	mov	r4, r0
    93c4:	mov	r5, r1
    93c8:	mov	r0, r6
    93cc:	mov	r1, #0
    93d0:	mov	r7, r2
    93d4:	mov	r2, #44	; 0x2c
    93d8:	mov	r8, r3
    93dc:	bl	42a4 <memset@plt>
    93e0:	mov	r2, #1
    93e4:	mov	r3, #60	; 0x3c
    93e8:	mov	r0, r6
    93ec:	str	r2, [sp, #60]	; 0x3c
    93f0:	str	r3, [sp, #68]	; 0x44
    93f4:	bl	3e54 <mktime@plt>
    93f8:	add	r9, sp, #212	; 0xd4
    93fc:	ldr	r3, [r4, #12]
    9400:	ldr	r2, [r4, #20]
    9404:	mov	r1, #164	; 0xa4
    9408:	ldr	sl, [pc, #1384]	; 9978 <sas_read_header+0x5c8>
    940c:	add	sl, pc, sl
    9410:	mov	r6, r0
    9414:	mov	r0, r9
    9418:	blx	r3
    941c:	cmp	r0, #163	; 0xa3
    9420:	bls	94a4 <sas_read_header+0xf4>
    9424:	ldr	r3, [pc, #1360]	; 997c <sas_read_header+0x5cc>
    9428:	mov	r2, #32
    942c:	mov	r0, r9
    9430:	ldr	r1, [sl, r3]
    9434:	bl	3fa4 <memcmp@plt>
    9438:	cmp	r0, #0
    943c:	bne	9484 <sas_read_header+0xd4>
    9440:	ldrb	r3, [sp, #247]	; 0xf7
    9444:	ldrb	sl, [sp, #249]	; 0xf9
    9448:	cmp	r3, #51	; 0x33
    944c:	moveq	r3, #4
    9450:	streq	r3, [r5, #24]
    9454:	ldrb	r3, [sp, #244]	; 0xf4
    9458:	cmp	r3, #51	; 0x33
    945c:	moveq	r3, #1
    9460:	streq	r3, [r5, #4]
    9464:	cmp	sl, #0
    9468:	beq	94b4 <sas_read_header+0x104>
    946c:	cmp	sl, #1
    9470:	beq	97b4 <sas_read_header+0x404>
    9474:	mov	r0, #5
    9478:	add	sp, sp, #1392	; 0x570
    947c:	add	sp, sp, #12
    9480:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9484:	ldr	r3, [pc, #1268]	; 9980 <sas_read_header+0x5d0>
    9488:	mov	r0, r9
    948c:	mov	r2, #32
    9490:	ldr	r1, [sl, r3]
    9494:	bl	3fa4 <memcmp@plt>
    9498:	cmp	r0, #0
    949c:	beq	9440 <sas_read_header+0x90>
    94a0:	b	9474 <sas_read_header+0xc4>
    94a4:	mov	r0, #2
    94a8:	add	sp, sp, #1392	; 0x570
    94ac:	add	sp, sp, #12
    94b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    94b4:	bl	3eb4 <machine_is_little_endian@plt>
    94b8:	str	sl, [r5]
    94bc:	mov	r9, r0
    94c0:	ldr	r1, [pc, #1212]	; 9984 <sas_read_header+0x5d4>
    94c4:	ldrb	r3, [sp, #282]	; 0x11a
    94c8:	add	r1, pc, r1
    94cc:	ldr	r2, [r1]
    94d0:	cmp	r2, r3
    94d4:	beq	9924 <sas_read_header+0x574>
    94d8:	mov	r2, #1
    94dc:	b	94ec <sas_read_header+0x13c>
    94e0:	add	r2, r2, #1
    94e4:	cmp	r2, #62	; 0x3e
    94e8:	beq	9800 <sas_read_header+0x450>
    94ec:	ldr	r0, [r1, #36]	; 0x24
    94f0:	add	r1, r1, #36	; 0x24
    94f4:	cmp	r0, r3
    94f8:	bne	94e0 <sas_read_header+0x130>
    94fc:	add	r2, r2, r2, lsl #3
    9500:	lsl	r2, r2, #2
    9504:	add	r2, r2, #4
    9508:	ldr	r1, [pc, #1144]	; 9988 <sas_read_header+0x5d8>
    950c:	add	r1, pc, r1
    9510:	add	r2, r1, r2
    9514:	str	r2, [r5, #144]	; 0x90
    9518:	cmp	r2, #0
    951c:	addne	sl, sp, #304	; 0x130
    9520:	addne	fp, sp, #368	; 0x170
    9524:	addne	lr, r5, #80	; 0x50
    9528:	beq	97c8 <sas_read_header+0x418>
    952c:	mov	ip, sl
    9530:	add	lr, lr, #16
    9534:	ldm	ip!, {r0, r1, r2, r3}
    9538:	add	sl, sl, #16
    953c:	cmp	ip, fp
    9540:	str	r0, [lr, #-16]
    9544:	str	r1, [lr, #-12]
    9548:	str	r2, [lr, #-8]
    954c:	str	r3, [lr, #-4]
    9550:	bne	952c <sas_read_header+0x17c>
    9554:	ldr	r3, [r4, #8]
    9558:	ldr	r2, [r4, #20]
    955c:	mov	r1, #1
    9560:	ldr	r0, [r5, #24]
    9564:	blx	r3
    9568:	cmn	r0, #1
    956c:	beq	98e4 <sas_read_header+0x534>
    9570:	add	sl, sp, #40	; 0x28
    9574:	sub	r0, sl, #8
    9578:	ldr	r3, [r4, #12]
    957c:	ldr	r2, [r4, #20]
    9580:	mov	r1, #8
    9584:	blx	r3
    9588:	cmp	r0, #7
    958c:	bls	94a4 <sas_read_header+0xf4>
    9590:	cmp	r9, #0
    9594:	bne	98ec <sas_read_header+0x53c>
    9598:	ldr	r3, [r4, #12]
    959c:	ldr	r2, [r4, #20]
    95a0:	mov	r1, #8
    95a4:	mov	r0, sl
    95a8:	blx	r3
    95ac:	cmp	r0, #7
    95b0:	bls	94a4 <sas_read_header+0xf4>
    95b4:	vldr	d0, [sl]
    95b8:	vmov	s15, r6
    95bc:	vldr	d6, [sl, #-8]
    95c0:	vcvt.f64.s32	d7, s15
    95c4:	vadd.f64	d6, d7, d6
    95c8:	vcmp.f64	d6, d6
    95cc:	vmrs	APSR_nzcv, fpscr
    95d0:	bvs	992c <sas_read_header+0x57c>
    95d4:	vldr	d5, [pc, #908]	; 9968 <sas_read_header+0x5b8>
    95d8:	vcmpe.f64	d6, d5
    95dc:	vmrs	APSR_nzcv, fpscr
    95e0:	mvngt	r3, #-2147483648	; 0x80000000
    95e4:	bgt	9600 <sas_read_header+0x250>
    95e8:	vldr	d5, [pc, #896]	; 9970 <sas_read_header+0x5c0>
    95ec:	vcmpe.f64	d6, d5
    95f0:	vmrs	APSR_nzcv, fpscr
    95f4:	movmi	r3, #-2147483648	; 0x80000000
    95f8:	vcvtpl.s32.f64	s13, d6
    95fc:	vmovpl	r3, s13
    9600:	vadd.f64	d7, d7, d0
    9604:	str	r3, [r5, #72]	; 0x48
    9608:	vcmp.f64	d7, d7
    960c:	vmrs	APSR_nzcv, fpscr
    9610:	bvs	9934 <sas_read_header+0x584>
    9614:	vldr	d6, [pc, #844]	; 9968 <sas_read_header+0x5b8>
    9618:	vcmpe.f64	d7, d6
    961c:	vmrs	APSR_nzcv, fpscr
    9620:	mvngt	r3, #-2147483648	; 0x80000000
    9624:	bgt	9640 <sas_read_header+0x290>
    9628:	vldr	d6, [pc, #832]	; 9970 <sas_read_header+0x5c0>
    962c:	vcmpe.f64	d7, d6
    9630:	vmrs	APSR_nzcv, fpscr
    9634:	movmi	r3, #-2147483648	; 0x80000000
    9638:	vcvtpl.s32.f64	s15, d7
    963c:	vmovpl	r3, s15
    9640:	str	r3, [r5, #76]	; 0x4c
    9644:	ldr	r2, [r4, #20]
    9648:	ldr	r3, [r4, #8]
    964c:	mov	r1, #1
    9650:	mov	r0, #16
    9654:	blx	r3
    9658:	cmn	r0, #1
    965c:	beq	98e4 <sas_read_header+0x534>
    9660:	add	r6, sp, #24
    9664:	sub	r0, r6, #12
    9668:	ldr	r3, [r4, #12]
    966c:	ldr	r2, [r4, #20]
    9670:	mov	r1, #4
    9674:	blx	r3
    9678:	cmp	r0, #3
    967c:	bls	94a4 <sas_read_header+0xf4>
    9680:	ldr	r3, [r4, #12]
    9684:	ldr	r2, [r4, #20]
    9688:	mov	r1, #4
    968c:	sub	r0, r6, #8
    9690:	blx	r3
    9694:	cmp	r0, #3
    9698:	bls	94a4 <sas_read_header+0xf4>
    969c:	cmp	r9, #0
    96a0:	bne	993c <sas_read_header+0x58c>
    96a4:	ldr	r2, [sp, #12]
    96a8:	ldr	ip, [sp, #16]
    96ac:	mov	r3, #0
    96b0:	strd	r2, [r5, #64]	; 0x40
    96b4:	subs	r2, r2, #1024	; 0x400
    96b8:	sbc	r3, r3, #0
    96bc:	mov	r1, #0
    96c0:	ldr	r0, [pc, #708]	; 998c <sas_read_header+0x5dc>
    96c4:	cmp	r3, r1
    96c8:	cmpeq	r2, r0
    96cc:	ldr	r2, [pc, #700]	; 9990 <sas_read_header+0x5e0>
    96d0:	movhi	r3, #1
    96d4:	movls	r3, #0
    96d8:	sub	r1, ip, #1024	; 0x400
    96dc:	cmp	r1, r2
    96e0:	orrhi	r3, r3, #1
    96e4:	cmp	r3, #0
    96e8:	mov	r3, #0
    96ec:	str	ip, [r5, #32]
    96f0:	str	r3, [r5, #36]	; 0x24
    96f4:	bne	9474 <sas_read_header+0xc4>
    96f8:	ldr	r3, [r5, #4]
    96fc:	cmp	r3, #0
    9700:	beq	99a4 <sas_read_header+0x5f4>
    9704:	mov	r0, #40	; 0x28
    9708:	mov	r1, #0
    970c:	mov	r2, #24
    9710:	mov	r3, #0
    9714:	add	fp, sp, #376	; 0x178
    9718:	strd	r0, [r5, #40]	; 0x28
    971c:	strd	r2, [r5, #48]	; 0x30
    9720:	mov	r0, fp
    9724:	ldr	r3, [r4, #12]
    9728:	ldr	r2, [r4, #20]
    972c:	mov	r1, #8
    9730:	blx	r3
    9734:	cmp	r0, #7
    9738:	bls	94a4 <sas_read_header+0xf4>
    973c:	cmp	r9, #0
    9740:	ldrd	r0, [fp]
    9744:	bne	99f8 <sas_read_header+0x648>
    9748:	strd	r0, [r5, #56]	; 0x38
    974c:	ldrd	r2, [r5, #56]	; 0x38
    9750:	mov	r0, #16777216	; 0x1000000
    9754:	mov	r1, #0
    9758:	cmp	r0, r2
    975c:	sbcs	r3, r1, r3
    9760:	blt	9474 <sas_read_header+0xc4>
    9764:	ldr	r3, [r4, #8]
    9768:	ldr	r2, [r4, #20]
    976c:	mov	r1, #1
    9770:	mov	r0, #8
    9774:	blx	r3
    9778:	cmn	r0, #1
    977c:	bne	9808 <sas_read_header+0x458>
    9780:	cmp	r7, #0
    9784:	beq	98e4 <sas_read_header+0x534>
    9788:	ldr	r2, [pc, #516]	; 9994 <sas_read_header+0x5e4>
    978c:	mov	r3, #8
    9790:	add	r2, pc, r2
    9794:	mov	r1, #1024	; 0x400
    9798:	mov	r0, fp
    979c:	bl	4280 <snprintf@plt>
    97a0:	mov	r0, fp
    97a4:	mov	r1, r8
    97a8:	blx	r7
    97ac:	mov	r0, #15
    97b0:	b	9478 <sas_read_header+0xc8>
    97b4:	bl	3eb4 <machine_is_little_endian@plt>
    97b8:	str	sl, [r5]
    97bc:	clz	r9, r0
    97c0:	lsr	r9, r9, #5
    97c4:	b	94c0 <sas_read_header+0x110>
    97c8:	cmp	r7, #0
    97cc:	moveq	r0, #7
    97d0:	beq	9478 <sas_read_header+0xc8>
    97d4:	ldr	r2, [pc, #444]	; 9998 <sas_read_header+0x5e8>
    97d8:	add	r4, sp, #376	; 0x178
    97dc:	add	r2, pc, r2
    97e0:	mov	r1, #1024	; 0x400
    97e4:	mov	r0, r4
    97e8:	bl	4280 <snprintf@plt>
    97ec:	mov	r0, r4
    97f0:	mov	r1, r8
    97f4:	blx	r7
    97f8:	mov	r0, #7
    97fc:	b	9478 <sas_read_header+0xc8>
    9800:	ldr	r2, [r5, #144]	; 0x90
    9804:	b	9518 <sas_read_header+0x168>
    9808:	add	r9, sp, #92	; 0x5c
    980c:	mov	r0, r9
    9810:	ldr	r3, [r4, #12]
    9814:	ldr	r2, [r4, #20]
    9818:	mov	r1, #120	; 0x78
    981c:	blx	r3
    9820:	cmp	r0, #119	; 0x77
    9824:	bls	94a4 <sas_read_header+0xf4>
    9828:	ldr	r1, [pc, #364]	; 999c <sas_read_header+0x5ec>
    982c:	sub	sl, sl, #12
    9830:	str	sl, [sp]
    9834:	mov	r0, r9
    9838:	mov	r3, r6
    983c:	sub	r2, r6, #4
    9840:	add	r1, pc, r1
    9844:	bl	428c <__isoc99_sscanf@plt>
    9848:	cmp	r0, #3
    984c:	bne	9474 <sas_read_header+0xc4>
    9850:	add	r0, sp, #20
    9854:	ldm	r0, {r0, r1, r2}
    9858:	cmp	r1, #0
    985c:	cmpeq	r2, #0
    9860:	sub	ip, r0, #8
    9864:	moveq	r3, #1
    9868:	movne	r3, #0
    986c:	cmp	ip, #1
    9870:	movhi	r3, #0
    9874:	andls	r3, r3, #1
    9878:	cmp	r3, #0
    987c:	movne	r3, #0
    9880:	moveq	r3, #1
    9884:	str	r0, [r5, #12]
    9888:	str	r1, [r5, #16]
    988c:	str	r2, [r5, #20]
    9890:	str	r3, [r5, #8]
    9894:	ldr	r2, [r4, #20]
    9898:	ldr	r3, [r4, #8]
    989c:	mov	r1, #0
    98a0:	ldr	r0, [r5, #64]	; 0x40
    98a4:	blx	r3
    98a8:	cmn	r0, #1
    98ac:	movne	r0, #0
    98b0:	bne	9478 <sas_read_header+0xc8>
    98b4:	cmp	r7, #0
    98b8:	beq	98e4 <sas_read_header+0x534>
    98bc:	ldrd	r4, [r5, #64]	; 0x40
    98c0:	ldr	r2, [pc, #216]	; 99a0 <sas_read_header+0x5f0>
    98c4:	mov	r1, #1024	; 0x400
    98c8:	add	r2, pc, r2
    98cc:	strd	r4, [sp]
    98d0:	mov	r0, fp
    98d4:	bl	4280 <snprintf@plt>
    98d8:	mov	r1, r8
    98dc:	mov	r0, fp
    98e0:	blx	r7
    98e4:	mov	r0, #15
    98e8:	b	9478 <sas_read_header+0xc8>
    98ec:	vldr	d0, [sl, #-8]
    98f0:	bl	4508 <byteswap_double@plt>
    98f4:	ldr	r3, [r4, #12]
    98f8:	ldr	r2, [r4, #20]
    98fc:	mov	r1, #8
    9900:	mov	r0, sl
    9904:	vstr	d0, [sl, #-8]
    9908:	blx	r3
    990c:	cmp	r0, #7
    9910:	bls	94a4 <sas_read_header+0xf4>
    9914:	vldr	d0, [sl]
    9918:	bl	4508 <byteswap_double@plt>
    991c:	vstr	d0, [sl]
    9920:	b	95b8 <sas_read_header+0x208>
    9924:	mov	r2, #4
    9928:	b	9508 <sas_read_header+0x158>
    992c:	mov	r3, #0
    9930:	b	9600 <sas_read_header+0x250>
    9934:	mov	r3, #0
    9938:	b	9640 <sas_read_header+0x290>
    993c:	ldr	r0, [sp, #12]
    9940:	bl	3d94 <byteswap4@plt>
    9944:	mov	r3, #0
    9948:	str	r3, [r5, #68]	; 0x44
    994c:	str	r0, [r5, #64]	; 0x40
    9950:	ldr	r0, [sp, #16]
    9954:	bl	3d94 <byteswap4@plt>
    9958:	ldrd	r2, [r5, #64]	; 0x40
    995c:	mov	ip, r0
    9960:	b	96b4 <sas_read_header+0x304>
    9964:	nop			; (mov r0, r0)
    9968:	.word	0xffc00000
    996c:	.word	0x41dfffff
    9970:	.word	0x00000000
    9974:	.word	0xc1e00000
    9978:	.word	0x0003abec
    997c:	.word	0x000002f0
    9980:	.word	0x000002c4
    9984:	.word	0x0003ae70
    9988:	.word	0x0003ae2c
    998c:	.word	0x000ffc00
    9990:	.word	0x00fffc00
    9994:	.word	0x0001acb4
    9998:	.word	0x0001ac44
    999c:	.word	0x0001ac2c
    99a0:	.word	0x0001abb4
    99a4:	mov	r0, #24
    99a8:	mov	r1, #0
    99ac:	mov	r2, #12
    99b0:	mov	r3, #0
    99b4:	add	fp, sp, #376	; 0x178
    99b8:	strd	r0, [r5, #40]	; 0x28
    99bc:	strd	r2, [r5, #48]	; 0x30
    99c0:	mov	r0, fp
    99c4:	ldr	r3, [r4, #12]
    99c8:	ldr	r2, [r4, #20]
    99cc:	mov	r1, #4
    99d0:	blx	r3
    99d4:	cmp	r0, #3
    99d8:	bls	94a4 <sas_read_header+0xf4>
    99dc:	cmp	r9, #0
    99e0:	ldr	r0, [sp, #376]	; 0x178
    99e4:	bne	9a00 <sas_read_header+0x650>
    99e8:	mov	r3, #0
    99ec:	str	r0, [r5, #56]	; 0x38
    99f0:	str	r3, [r5, #60]	; 0x3c
    99f4:	b	974c <sas_read_header+0x39c>
    99f8:	bl	3d7c <byteswap8@plt>
    99fc:	b	9748 <sas_read_header+0x398>
    9a00:	bl	3d94 <byteswap4@plt>
    9a04:	b	99e8 <sas_read_header+0x638>

00009a08 <sas_write_header>:
    9a08:	sub	sp, sp, #8
    9a0c:	push	{r4, r5, r6, r7, r8, r9, lr}
    9a10:	sub	sp, sp, #212	; 0xd4
    9a14:	add	r5, sp, #240	; 0xf0
    9a18:	add	r4, sp, #44	; 0x2c
    9a1c:	stm	r5, {r2, r3}
    9a20:	mov	r7, r0
    9a24:	mov	r2, #44	; 0x2c
    9a28:	mov	r0, r4
    9a2c:	mov	r8, r1
    9a30:	mov	r1, #0
    9a34:	bl	42a4 <memset@plt>
    9a38:	mov	r3, #60	; 0x3c
    9a3c:	mov	r2, #1
    9a40:	mov	r0, r4
    9a44:	str	r3, [sp, #64]	; 0x40
    9a48:	str	r2, [sp, #56]	; 0x38
    9a4c:	bl	3e54 <mktime@plt>
    9a50:	add	r6, sp, #332	; 0x14c
    9a54:	mov	r2, #64	; 0x40
    9a58:	mov	r1, #32
    9a5c:	add	r4, r7, #88	; 0x58
    9a60:	mov	r9, r0
    9a64:	mov	r0, r6
    9a68:	bl	42a4 <memset@plt>
    9a6c:	mov	r0, r4
    9a70:	bl	41fc <strlen@plt>
    9a74:	cmp	r0, #64	; 0x40
    9a78:	bhi	9ad0 <sas_write_header+0xc8>
    9a7c:	cmp	r0, #0
    9a80:	bne	9ad4 <sas_write_header+0xcc>
    9a84:	ldr	r3, [pc, #568]	; 9cc4 <sas_write_header+0x2bc>
    9a88:	add	r3, pc, r3
    9a8c:	ldrh	r1, [r3, #4]
    9a90:	ldrb	r2, [r3, #6]
    9a94:	ldr	r0, [r3]
    9a98:	strh	r1, [r6, #4]
    9a9c:	strb	r2, [r6, #6]
    9aa0:	str	r0, [r6]
    9aa4:	mov	r1, r5
    9aa8:	mov	r2, #164	; 0xa4
    9aac:	mov	r0, r7
    9ab0:	bl	4454 <readstat_write_bytes@plt>
    9ab4:	subs	r4, r0, #0
    9ab8:	beq	9ae8 <sas_write_header+0xe0>
    9abc:	mov	r0, r4
    9ac0:	add	sp, sp, #212	; 0xd4
    9ac4:	pop	{r4, r5, r6, r7, r8, r9, lr}
    9ac8:	add	sp, sp, #8
    9acc:	bx	lr
    9ad0:	mov	r0, #64	; 0x40
    9ad4:	mov	r2, r0
    9ad8:	mov	r1, r4
    9adc:	mov	r0, r6
    9ae0:	bl	3f20 <memcpy@plt>
    9ae4:	b	9aa4 <sas_write_header+0x9c>
    9ae8:	ldr	r1, [r8, #24]
    9aec:	mov	r0, r7
    9af0:	bl	401c <readstat_write_zeros@plt>
    9af4:	subs	r4, r0, #0
    9af8:	bne	9abc <sas_write_header+0xb4>
    9afc:	ldr	r3, [r8, #72]	; 0x48
    9b00:	add	r1, sp, #208	; 0xd0
    9b04:	sub	r3, r3, r9
    9b08:	mov	r2, #8
    9b0c:	vmov	s15, r3
    9b10:	mov	r0, r7
    9b14:	vcvt.f64.s32	d7, s15
    9b18:	vmov	r4, r5, d7
    9b1c:	strd	r4, [r1, #-192]!	; 0xffffff40
    9b20:	bl	4454 <readstat_write_bytes@plt>
    9b24:	subs	r4, r0, #0
    9b28:	bne	9abc <sas_write_header+0xb4>
    9b2c:	ldr	r3, [r8, #76]	; 0x4c
    9b30:	add	r1, sp, #208	; 0xd0
    9b34:	sub	r9, r3, r9
    9b38:	mov	r2, #8
    9b3c:	vmov	s15, r9
    9b40:	mov	r0, r7
    9b44:	vcvt.f64.s32	d7, s15
    9b48:	vmov	r4, r5, d7
    9b4c:	strd	r4, [r1, #-184]!	; 0xffffff48
    9b50:	bl	4454 <readstat_write_bytes@plt>
    9b54:	subs	r4, r0, #0
    9b58:	bne	9abc <sas_write_header+0xb4>
    9b5c:	mov	r1, #16
    9b60:	mov	r0, r7
    9b64:	bl	401c <readstat_write_zeros@plt>
    9b68:	subs	r4, r0, #0
    9b6c:	bne	9abc <sas_write_header+0xb4>
    9b70:	ldr	ip, [r8, #64]	; 0x40
    9b74:	ldr	r3, [r8, #32]
    9b78:	mov	r2, #4
    9b7c:	add	r1, sp, #8
    9b80:	mov	r0, r7
    9b84:	str	ip, [sp, #8]
    9b88:	str	r3, [sp, #12]
    9b8c:	bl	4454 <readstat_write_bytes@plt>
    9b90:	subs	r4, r0, #0
    9b94:	bne	9abc <sas_write_header+0xb4>
    9b98:	mov	r2, #4
    9b9c:	add	r1, sp, #12
    9ba0:	mov	r0, r7
    9ba4:	bl	4454 <readstat_write_bytes@plt>
    9ba8:	subs	r4, r0, #0
    9bac:	bne	9abc <sas_write_header+0xb4>
    9bb0:	ldr	r3, [r8, #4]
    9bb4:	cmp	r3, #0
    9bb8:	beq	9ca0 <sas_write_header+0x298>
    9bbc:	ldrd	r0, [r8, #56]	; 0x38
    9bc0:	add	r5, sp, #208	; 0xd0
    9bc4:	mov	r2, #8
    9bc8:	strd	r0, [r5, #-120]!	; 0xffffff88
    9bcc:	mov	r0, r7
    9bd0:	mov	r1, r5
    9bd4:	bl	4454 <readstat_write_bytes@plt>
    9bd8:	mov	r4, r0
    9bdc:	cmp	r4, #0
    9be0:	bne	9abc <sas_write_header+0xb4>
    9be4:	mov	r1, #8
    9be8:	mov	r0, r7
    9bec:	bl	401c <readstat_write_zeros@plt>
    9bf0:	subs	r4, r0, #0
    9bf4:	bne	9abc <sas_write_header+0xb4>
    9bf8:	mov	r1, r4
    9bfc:	mov	r2, #120	; 0x78
    9c00:	mov	r0, r5
    9c04:	bl	42a4 <memset@plt>
    9c08:	ldr	r2, [pc, #184]	; 9cc8 <sas_write_header+0x2c0>
    9c0c:	add	r3, sp, #96	; 0x60
    9c10:	add	r2, pc, r2
    9c14:	str	r4, [sp, #106]	; 0x6a
    9c18:	ldm	r2, {r0, r1, r2}
    9c1c:	strh	r4, [sp, #110]	; 0x6e
    9c20:	str	r4, [sp, #32]
    9c24:	stmia	r3!, {r0, r1}
    9c28:	ldr	r0, [r7, #8]
    9c2c:	strh	r2, [r3]
    9c30:	mov	r1, #10
    9c34:	str	r4, [sp, #36]	; 0x24
    9c38:	strb	r4, [sp, #40]	; 0x28
    9c3c:	bl	232b8 <__aeabi_uidivmod>
    9c40:	ldr	r2, [pc, #132]	; 9ccc <sas_write_header+0x2c4>
    9c44:	add	r4, sp, #32
    9c48:	mov	r3, #101	; 0x65
    9c4c:	mov	r0, r4
    9c50:	str	r3, [sp]
    9c54:	add	r2, pc, r2
    9c58:	mov	r3, r1
    9c5c:	mov	r1, #9
    9c60:	bl	4280 <snprintf@plt>
    9c64:	ldm	r4, {r0, r1}
    9c68:	mov	r2, #120	; 0x78
    9c6c:	stm	r5, {r0, r1}
    9c70:	mov	r1, r5
    9c74:	mov	r0, r7
    9c78:	bl	4454 <readstat_write_bytes@plt>
    9c7c:	subs	r4, r0, #0
    9c80:	bne	9abc <sas_write_header+0xb4>
    9c84:	ldr	r1, [r8, #64]	; 0x40
    9c88:	ldr	r3, [r7, #4]
    9c8c:	mov	r0, r7
    9c90:	sub	r1, r1, r3
    9c94:	bl	401c <readstat_write_zeros@plt>
    9c98:	mov	r4, r0
    9c9c:	b	9abc <sas_write_header+0xb4>
    9ca0:	ldr	r3, [r8, #56]	; 0x38
    9ca4:	add	r5, sp, #208	; 0xd0
    9ca8:	mov	r2, #4
    9cac:	str	r3, [r5, #-120]!	; 0xffffff88
    9cb0:	mov	r0, r7
    9cb4:	mov	r1, r5
    9cb8:	bl	4454 <readstat_write_bytes@plt>
    9cbc:	mov	r4, r0
    9cc0:	b	9bdc <sas_write_header+0x1d4>
    9cc4:	.word	0x0001aa20
    9cc8:	.word	0x0001a800
    9ccc:	.word	0x0001a85c

00009cd0 <sas_header_info_init>:
    9cd0:	push	{r4, r5, r6, r7, r8, lr}
    9cd4:	mov	r4, r0
    9cd8:	mov	r5, r1
    9cdc:	mov	r0, #1
    9ce0:	mov	r1, #152	; 0x98
    9ce4:	bl	3d58 <calloc@plt>
    9ce8:	cmp	r5, #0
    9cec:	ldr	r3, [r4, #20]
    9cf0:	mov	r5, #0
    9cf4:	mov	r4, #4096	; 0x1000
    9cf8:	movne	r2, #1
    9cfc:	moveq	r2, #0
    9d00:	movne	r6, #8192	; 0x2000
    9d04:	movne	r7, #0
    9d08:	moveq	r6, #1024	; 0x400
    9d0c:	moveq	r7, #0
    9d10:	strd	r4, [r0, #32]
    9d14:	str	r2, [r0, #4]
    9d18:	str	r3, [r0, #72]	; 0x48
    9d1c:	str	r3, [r0, #76]	; 0x4c
    9d20:	movne	r4, #40	; 0x28
    9d24:	movne	r5, #0
    9d28:	movne	r2, #24
    9d2c:	moveq	r4, #24
    9d30:	moveq	r5, #0
    9d34:	moveq	r2, #12
    9d38:	mov	r3, #0
    9d3c:	strd	r6, [r0, #64]	; 0x40
    9d40:	strd	r4, [r0, #40]	; 0x28
    9d44:	strd	r2, [r0, #48]	; 0x30
    9d48:	pop	{r4, r5, r6, r7, r8, pc}

00009d4c <sas_fill_page>:
    9d4c:	push	{r4, r5, r6, lr}
    9d50:	mov	r4, r0
    9d54:	mov	r3, r1
    9d58:	ldrd	r0, [r1, #64]	; 0x40
    9d5c:	ldr	r2, [r4, #4]
    9d60:	ldr	r5, [r3, #32]
    9d64:	subs	r0, r2, r0
    9d68:	rsc	r1, r1, #0
    9d6c:	ldr	r3, [r3, #36]	; 0x24
    9d70:	mov	r2, r5
    9d74:	bl	238ec <__aeabi_ldivmod>
    9d78:	orrs	r1, r2, r3
    9d7c:	bne	9d88 <sas_fill_page+0x3c>
    9d80:	mov	r0, #0
    9d84:	pop	{r4, r5, r6, pc}
    9d88:	sub	r1, r5, r2
    9d8c:	mov	r0, r4
    9d90:	pop	{r4, r5, r6, lr}
    9d94:	b	401c <readstat_write_zeros@plt>

00009d98 <sas_validate_name>:
    9d98:	push	{r4, r5, r6, lr}
    9d9c:	ldrb	lr, [r0]
    9da0:	cmp	lr, #0
    9da4:	beq	9ea4 <sas_validate_name+0x10c>
    9da8:	mov	ip, r0
    9dac:	mov	r3, lr
    9db0:	bic	r2, r3, #32
    9db4:	cmp	r3, #95	; 0x5f
    9db8:	sub	r2, r2, #65	; 0x41
    9dbc:	beq	9dd4 <sas_validate_name+0x3c>
    9dc0:	cmp	r2, #25
    9dc4:	sub	r3, r3, #48	; 0x30
    9dc8:	bls	9dd4 <sas_validate_name+0x3c>
    9dcc:	cmp	r3, #9
    9dd0:	bhi	9e24 <sas_validate_name+0x8c>
    9dd4:	ldrb	r3, [ip, #1]!
    9dd8:	cmp	r3, #0
    9ddc:	bne	9db0 <sas_validate_name+0x18>
    9de0:	cmp	lr, #95	; 0x5f
    9de4:	beq	9e00 <sas_validate_name+0x68>
    9de8:	bic	r3, lr, #32
    9dec:	sub	r3, r3, #65	; 0x41
    9df0:	cmp	r3, #25
    9df4:	bls	9e00 <sas_validate_name+0x68>
    9df8:	mov	r0, #25
    9dfc:	pop	{r4, r5, r6, pc}
    9e00:	mov	r5, r1
    9e04:	ldr	r1, [pc, #160]	; 9eac <sas_validate_name+0x114>
    9e08:	mov	r4, r0
    9e0c:	add	r1, pc, r1
    9e10:	bl	3e00 <strcmp@plt>
    9e14:	cmp	r0, #0
    9e18:	bne	9e2c <sas_validate_name+0x94>
    9e1c:	mov	r0, #27
    9e20:	pop	{r4, r5, r6, pc}
    9e24:	mov	r0, #26
    9e28:	pop	{r4, r5, r6, pc}
    9e2c:	ldr	r1, [pc, #124]	; 9eb0 <sas_validate_name+0x118>
    9e30:	mov	r0, r4
    9e34:	add	r1, pc, r1
    9e38:	bl	3e00 <strcmp@plt>
    9e3c:	cmp	r0, #0
    9e40:	beq	9e1c <sas_validate_name+0x84>
    9e44:	ldr	r1, [pc, #104]	; 9eb4 <sas_validate_name+0x11c>
    9e48:	mov	r0, r4
    9e4c:	add	r1, pc, r1
    9e50:	bl	3e00 <strcmp@plt>
    9e54:	cmp	r0, #0
    9e58:	beq	9e1c <sas_validate_name+0x84>
    9e5c:	ldr	r1, [pc, #84]	; 9eb8 <sas_validate_name+0x120>
    9e60:	mov	r0, r4
    9e64:	add	r1, pc, r1
    9e68:	bl	3e00 <strcmp@plt>
    9e6c:	cmp	r0, #0
    9e70:	beq	9e1c <sas_validate_name+0x84>
    9e74:	ldr	r1, [pc, #64]	; 9ebc <sas_validate_name+0x124>
    9e78:	mov	r0, r4
    9e7c:	add	r1, pc, r1
    9e80:	bl	3e00 <strcmp@plt>
    9e84:	cmp	r0, #0
    9e88:	beq	9e1c <sas_validate_name+0x84>
    9e8c:	mov	r0, r4
    9e90:	bl	41fc <strlen@plt>
    9e94:	cmp	r5, r0
    9e98:	movcc	r0, #28
    9e9c:	movcs	r0, #0
    9ea0:	pop	{r4, r5, r6, pc}
    9ea4:	mov	r0, #38	; 0x26
    9ea8:	pop	{r4, r5, r6, pc}
    9eac:	.word	0x0001a6b0
    9eb0:	.word	0x0001a68c
    9eb4:	.word	0x0001a67c
    9eb8:	.word	0x0001a670
    9ebc:	.word	0x0001a664

00009ec0 <sas_validate_variable>:
    9ec0:	push	{r4, lr}
    9ec4:	bl	4364 <readstat_variable_get_name@plt>
    9ec8:	mov	r1, #32
    9ecc:	pop	{r4, lr}
    9ed0:	b	3d4c <sas_validate_name@plt>

00009ed4 <sas_validate_tag>:
    9ed4:	sub	r3, r0, #65	; 0x41
    9ed8:	cmp	r0, #95	; 0x5f
    9edc:	cmpne	r3, #25
    9ee0:	movhi	r0, #21
    9ee4:	movls	r0, #0
    9ee8:	bx	lr

00009eec <sas_assign_tag>:
    9eec:	push	{r4, r5, r6, lr}
    9ef0:	subs	r4, r1, #0
    9ef4:	mov	r5, r0
    9ef8:	moveq	r4, #95	; 0x5f
    9efc:	beq	9f10 <sas_assign_tag+0x24>
    9f00:	sub	r3, r4, #2
    9f04:	cmp	r3, #25
    9f08:	addls	r4, r4, #63	; 0x3f
    9f0c:	uxtbls	r4, r4
    9f10:	mov	r0, r4
    9f14:	bl	4148 <sas_validate_tag@plt>
    9f18:	ldrb	r3, [r5, #13]
    9f1c:	cmp	r0, #0
    9f20:	orreq	r3, r3, #2
    9f24:	movne	r2, #0
    9f28:	orrne	r3, r3, #1
    9f2c:	strbeq	r4, [r5, #12]
    9f30:	strbne	r2, [r5, #12]
    9f34:	strb	r3, [r5, #13]
    9f38:	pop	{r4, r5, r6, pc}
    9f3c:	andeq	r0, r0, r0

00009f40 <compare_block_pointers>:
    9f40:	ldr	r0, [r0]
    9f44:	ldr	r3, [r1]
    9f48:	sub	r0, r0, r3
    9f4c:	bx	lr

00009f50 <sas7bcat_augment_index>:
    9f50:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9f54:	add	sl, r0, r1
    9f58:	ldr	r3, [r2, #32]
    9f5c:	add	r3, r0, r3
    9f60:	cmp	sl, r3
    9f64:	bcc	a088 <sas7bcat_augment_index+0x138>
    9f68:	ldr	r9, [pc, #288]	; a090 <sas7bcat_augment_index+0x140>
    9f6c:	mov	r5, r2
    9f70:	mov	r4, r0
    9f74:	add	r9, pc, r9
    9f78:	mov	r8, #4
    9f7c:	b	9fa4 <sas7bcat_augment_index+0x54>
    9f80:	ldr	r1, [r5, #84]	; 0x54
    9f84:	ldr	r3, [r5, #88]	; 0x58
    9f88:	cmp	r3, r1
    9f8c:	beq	a044 <sas7bcat_augment_index+0xf4>
    9f90:	ldr	r3, [r5, #32]
    9f94:	add	r4, r4, r3
    9f98:	add	r3, r4, r3
    9f9c:	cmp	sl, r3
    9fa0:	bcc	a088 <sas7bcat_augment_index+0x138>
    9fa4:	mov	r2, r8
    9fa8:	mov	r1, r9
    9fac:	mov	r0, r4
    9fb0:	bl	3fa4 <memcmp@plt>
    9fb4:	cmp	r0, #0
    9fb8:	beq	9fd8 <sas7bcat_augment_index+0x88>
    9fbc:	add	r4, r4, #8
    9fc0:	mov	r0, r4
    9fc4:	mov	r2, r8
    9fc8:	mov	r1, r9
    9fcc:	bl	3fa4 <memcmp@plt>
    9fd0:	cmp	r0, #0
    9fd4:	bne	a088 <sas7bcat_augment_index+0x138>
    9fd8:	ldr	r3, [r5, #48]	; 0x30
    9fdc:	ldrb	r3, [r4, r3]
    9fe0:	cmp	r3, #79	; 0x4f
    9fe4:	bne	9f80 <sas7bcat_augment_index+0x30>
    9fe8:	ldr	r3, [r5, #16]
    9fec:	ldr	r1, [r5, #24]
    9ff0:	cmp	r3, #0
    9ff4:	beq	a06c <sas7bcat_augment_index+0x11c>
    9ff8:	add	r0, r4, #8
    9ffc:	bl	43f4 <sas_read4@plt>
    a000:	ldr	r1, [r5, #24]
    a004:	mov	fp, r0
    a008:	add	r0, r4, #16
    a00c:	bl	43f4 <sas_read4@plt>
    a010:	ldr	r1, [r5, #84]	; 0x54
    a014:	mov	r6, #0
    a018:	adds	r2, r6, r0
    a01c:	ldr	ip, [r5, #80]	; 0x50
    a020:	adc	r3, fp, #0
    a024:	lsl	r0, r1, #3
    a028:	add	r1, r1, #1
    a02c:	str	r1, [r5, #84]	; 0x54
    a030:	strd	r2, [ip, r0]
    a034:	ldr	r3, [r5, #88]	; 0x58
    a038:	mov	r7, fp
    a03c:	cmp	r3, r1
    a040:	bne	9f90 <sas7bcat_augment_index+0x40>
    a044:	lsl	r3, r1, #1
    a048:	ldr	r0, [r5, #80]	; 0x50
    a04c:	str	r3, [r5, #88]	; 0x58
    a050:	lsl	r1, r1, #4
    a054:	bl	42e0 <readstat_realloc@plt>
    a058:	cmp	r0, #0
    a05c:	str	r0, [r5, #80]	; 0x50
    a060:	bne	9f90 <sas7bcat_augment_index+0x40>
    a064:	mov	r0, #3
    a068:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a06c:	add	r0, r4, #4
    a070:	bl	43d0 <sas_read2@plt>
    a074:	ldr	r1, [r5, #24]
    a078:	mov	fp, r0
    a07c:	add	r0, r4, #8
    a080:	bl	43d0 <sas_read2@plt>
    a084:	b	a010 <sas7bcat_augment_index+0xc0>
    a088:	mov	r0, #0
    a08c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a090:	.word	0x0001a574

0000a094 <readstat_parse_sas7bcat>:
    a094:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a098:	vpush	{d8}
    a09c:	mov	r4, r0
    a0a0:	mov	r6, r1
    a0a4:	mov	r0, #1
    a0a8:	add	fp, sp, #40	; 0x28
    a0ac:	mov	r1, #104	; 0x68
    a0b0:	sub	sp, sp, #452	; 0x1c4
    a0b4:	mov	r5, r2
    a0b8:	ldr	sl, [r4, #32]
    a0bc:	bl	3d58 <calloc@plt>
    a0c0:	mov	r1, #152	; 0x98
    a0c4:	mov	r8, r0
    a0c8:	mov	r0, #1
    a0cc:	bl	3d58 <calloc@plt>
    a0d0:	mov	r3, #200	; 0xc8
    a0d4:	str	r3, [r8, #88]	; 0x58
    a0d8:	mov	r7, r0
    a0dc:	mov	r0, #1600	; 0x640
    a0e0:	bl	410c <malloc@plt>
    a0e4:	ldr	r2, [r4, #20]
    a0e8:	ldr	r3, [r4]
    a0ec:	ldr	r1, [sl, #20]
    a0f0:	stmib	r8, {r2, r5, sl}
    a0f4:	str	r3, [r8]
    a0f8:	ldr	r2, [r4, #36]	; 0x24
    a0fc:	ldr	r3, [r4, #40]	; 0x28
    a100:	str	r2, [r8, #92]	; 0x5c
    a104:	str	r3, [r8, #96]	; 0x60
    a108:	ldr	r3, [sl]
    a10c:	str	r0, [r8, #80]	; 0x50
    a110:	mov	r0, r6
    a114:	blx	r3
    a118:	cmn	r0, #1
    a11c:	beq	a190 <readstat_parse_sas7bcat+0xfc>
    a120:	mov	r3, r5
    a124:	ldr	r2, [r4, #24]
    a128:	mov	r1, r7
    a12c:	mov	r0, sl
    a130:	bl	43a0 <sas_read_header@plt>
    a134:	subs	r9, r0, #0
    a138:	beq	a198 <readstat_parse_sas7bcat+0x104>
    a13c:	ldr	r3, [sl, #4]
    a140:	ldr	r0, [sl, #20]
    a144:	blx	r3
    a148:	ldr	r0, [r8, #100]	; 0x64
    a14c:	cmp	r0, #0
    a150:	beq	a158 <readstat_parse_sas7bcat+0xc4>
    a154:	bl	3dd0 <iconv_close@plt>
    a158:	ldr	r0, [r8, #80]	; 0x50
    a15c:	cmp	r0, #0
    a160:	beq	a168 <readstat_parse_sas7bcat+0xd4>
    a164:	bl	3ec0 <free@plt>
    a168:	mov	r0, r8
    a16c:	bl	3ec0 <free@plt>
    a170:	cmp	r7, #0
    a174:	beq	a180 <readstat_parse_sas7bcat+0xec>
    a178:	mov	r0, r7
    a17c:	bl	3ec0 <free@plt>
    a180:	mov	r0, r9
    a184:	sub	sp, fp, #40	; 0x28
    a188:	vpop	{d8}
    a18c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a190:	mov	r9, #1
    a194:	b	a13c <readstat_parse_sas7bcat+0xa8>
    a198:	ldr	r2, [r7, #4]
    a19c:	ldr	r3, [r7, #24]
    a1a0:	str	r2, [r8, #16]
    a1a4:	str	r3, [r8, #20]
    a1a8:	bl	3eb4 <machine_is_little_endian@plt>
    a1ac:	ldrd	r2, [r7, #64]	; 0x40
    a1b0:	ldr	r1, [r7]
    a1b4:	ldr	r6, [r8, #92]	; 0x5c
    a1b8:	strd	r2, [r8, #72]	; 0x48
    a1bc:	ldrd	r2, [r7, #32]
    a1c0:	ldrd	r4, [r7, #56]	; 0x38
    a1c4:	cmp	r6, #0
    a1c8:	strd	r2, [r8, #64]	; 0x40
    a1cc:	ldr	r2, [r8, #20]
    a1d0:	ldreq	r3, [r7, #144]	; 0x90
    a1d4:	strd	r4, [r8, #56]	; 0x38
    a1d8:	add	r4, r2, #212	; 0xd4
    a1dc:	ldr	ip, [r8, #16]
    a1e0:	moveq	r6, r3
    a1e4:	streq	r3, [r8, #92]	; 0x5c
    a1e8:	asr	r5, r4, #31
    a1ec:	cmp	ip, #0
    a1f0:	strd	r4, [r8, #32]
    a1f4:	eor	r0, r0, r1
    a1f8:	str	r0, [r8, #24]
    a1fc:	add	r0, r2, #428	; 0x1ac
    a200:	add	r2, r2, #50	; 0x32
    a204:	lsl	r0, r0, #1
    a208:	asr	r3, r2, #31
    a20c:	asr	r1, r0, #31
    a210:	strd	r2, [r8, #48]	; 0x30
    a214:	strd	r0, [r8, #40]	; 0x28
    a218:	beq	a240 <readstat_parse_sas7bcat+0x1ac>
    a21c:	adds	r0, r0, #144	; 0x90
    a220:	adc	r1, r1, #0
    a224:	adds	r4, r4, #72	; 0x48
    a228:	adc	r5, r5, #0
    a22c:	adds	r2, r2, #24
    a230:	adc	r3, r3, #0
    a234:	strd	r0, [r8, #40]	; 0x28
    a238:	strd	r4, [r8, #32]
    a23c:	strd	r2, [r8, #48]	; 0x30
    a240:	cmp	r6, #0
    a244:	beq	a268 <readstat_parse_sas7bcat+0x1d4>
    a248:	ldr	r4, [r8, #96]	; 0x60
    a24c:	cmp	r4, #0
    a250:	beq	a268 <readstat_parse_sas7bcat+0x1d4>
    a254:	mov	r1, r4
    a258:	mov	r0, r6
    a25c:	bl	3e00 <strcmp@plt>
    a260:	cmp	r0, #0
    a264:	bne	a37c <readstat_parse_sas7bcat+0x2e8>
    a268:	ldr	r3, [r8]
    a26c:	cmp	r3, #0
    a270:	beq	a318 <readstat_parse_sas7bcat+0x284>
    a274:	sub	r4, fp, #372	; 0x174
    a278:	mov	r2, #56	; 0x38
    a27c:	mov	r1, #0
    a280:	mov	r0, r4
    a284:	bl	42a4 <memset@plt>
    a288:	mov	r2, r7
    a28c:	ldr	r0, [r7, #12]
    a290:	ldr	ip, [r2], #80	; 0x50
    a294:	ldr	r3, [r8, #16]
    a298:	cmp	ip, #0
    a29c:	moveq	ip, #2
    a2a0:	movne	ip, #1
    a2a4:	asr	r1, r0, #31
    a2a8:	str	ip, [fp, #-336]	; 0xfffffeb0
    a2ac:	sub	ip, fp, #364	; 0x16c
    a2b0:	ldr	lr, [r7, #72]	; 0x48
    a2b4:	strd	r0, [ip, #16]
    a2b8:	ldr	r0, [r8, #92]	; 0x5c
    a2bc:	ldr	ip, [r7, #76]	; 0x4c
    a2c0:	ldr	r1, [r8, #100]	; 0x64
    a2c4:	and	r3, r3, #1
    a2c8:	sub	r5, fp, #304	; 0x130
    a2cc:	strb	r3, [fp, #-320]	; 0xfffffec0
    a2d0:	str	r0, [fp, #-324]	; 0xfffffebc
    a2d4:	str	lr, [fp, #-356]	; 0xfffffe9c
    a2d8:	str	ip, [fp, #-352]	; 0xfffffea0
    a2dc:	mov	r0, r5
    a2e0:	str	r1, [sp]
    a2e4:	mov	r3, #64	; 0x40
    a2e8:	ldr	r1, [pc, #1472]	; a8b0 <readstat_parse_sas7bcat+0x81c>
    a2ec:	bl	4238 <readstat_convert@plt>
    a2f0:	subs	r9, r0, #0
    a2f4:	bne	a13c <readstat_parse_sas7bcat+0xa8>
    a2f8:	str	r5, [fp, #-328]	; 0xfffffeb8
    a2fc:	mov	r0, r4
    a300:	ldr	r3, [r8]
    a304:	ldr	r1, [r8, #8]
    a308:	blx	r3
    a30c:	cmp	r0, #0
    a310:	movne	r9, #4
    a314:	bne	a13c <readstat_parse_sas7bcat+0xa8>
    a318:	ldr	r0, [r8, #64]	; 0x40
    a31c:	bl	422c <readstat_malloc@plt>
    a320:	subs	r4, r0, #0
    a324:	beq	a3d4 <readstat_parse_sas7bcat+0x340>
    a328:	ldr	r2, [r8, #64]	; 0x40
    a32c:	ldr	r0, [r8, #72]	; 0x48
    a330:	ldr	r3, [sl, #8]
    a334:	add	r0, r0, r2
    a338:	mov	r1, #0
    a33c:	ldr	r2, [sl, #20]
    a340:	blx	r3
    a344:	cmn	r0, #1
    a348:	bne	a398 <readstat_parse_sas7bcat+0x304>
    a34c:	mov	r9, #15
    a350:	mov	r6, #0
    a354:	ldr	r3, [sl, #4]
    a358:	ldr	r0, [sl, #20]
    a35c:	blx	r3
    a360:	mov	r0, r4
    a364:	bl	3ec0 <free@plt>
    a368:	cmp	r6, #0
    a36c:	beq	a148 <readstat_parse_sas7bcat+0xb4>
    a370:	mov	r0, r6
    a374:	bl	3ec0 <free@plt>
    a378:	b	a148 <readstat_parse_sas7bcat+0xb4>
    a37c:	mov	r1, r6
    a380:	mov	r0, r4
    a384:	bl	4130 <iconv_open@plt>
    a388:	cmn	r0, #1
    a38c:	beq	a3dc <readstat_parse_sas7bcat+0x348>
    a390:	str	r0, [r8, #100]	; 0x64
    a394:	b	a268 <readstat_parse_sas7bcat+0x1d4>
    a398:	ldr	r3, [sl, #12]
    a39c:	ldr	r2, [sl, #20]
    a3a0:	ldr	r1, [r8, #64]	; 0x40
    a3a4:	mov	r0, r4
    a3a8:	blx	r3
    a3ac:	ldrd	r2, [r8, #64]	; 0x40
    a3b0:	sub	r1, fp, #396	; 0x18c
    a3b4:	strd	r2, [r1]
    a3b8:	cmp	r0, r2
    a3bc:	asr	r1, r0, #31
    a3c0:	sbcs	r3, r1, r3
    a3c4:	bge	a3e4 <readstat_parse_sas7bcat+0x350>
    a3c8:	mov	r9, #2
    a3cc:	mov	r6, #0
    a3d0:	b	a354 <readstat_parse_sas7bcat+0x2c0>
    a3d4:	mov	r9, #3
    a3d8:	b	a13c <readstat_parse_sas7bcat+0xa8>
    a3dc:	mov	r9, #7
    a3e0:	b	a13c <readstat_parse_sas7bcat+0xa8>
    a3e4:	ldr	r0, [r8, #40]	; 0x28
    a3e8:	ldr	r3, [fp, #-396]	; 0xfffffe74
    a3ec:	mov	r2, r8
    a3f0:	sub	r1, r3, r0
    a3f4:	add	r0, r4, r0
    a3f8:	bl	9f50 <sas7bcat_augment_index>
    a3fc:	subs	r9, r0, #0
    a400:	bne	a514 <readstat_parse_sas7bcat+0x480>
    a404:	ldrd	r2, [r8, #56]	; 0x38
    a408:	cmp	r2, #4
    a40c:	sbcs	r3, r3, #0
    a410:	blt	a540 <readstat_parse_sas7bcat+0x4ac>
    a414:	ldr	r3, [pc, #1176]	; a8b4 <readstat_parse_sas7bcat+0x820>
    a418:	mov	r2, #3
    a41c:	add	r3, pc, r3
    a420:	str	r3, [fp, #-412]	; 0xfffffe64
    a424:	sub	r1, fp, #396	; 0x18c
    a428:	mov	r3, #0
    a42c:	add	r6, r4, #16
    a430:	mov	r5, #4
    a434:	str	r9, [fp, #-420]	; 0xfffffe5c
    a438:	str	r7, [fp, #-428]	; 0xfffffe54
    a43c:	str	r4, [fp, #-404]	; 0xfffffe6c
    a440:	mov	r9, r6
    a444:	str	r5, [fp, #-416]	; 0xfffffe60
    a448:	strd	r2, [r1]
    a44c:	b	a478 <readstat_parse_sas7bcat+0x3e4>
    a450:	sub	r1, fp, #396	; 0x18c
    a454:	ldrd	r2, [r8, #56]	; 0x38
    a458:	ldrd	r0, [r1]
    a45c:	sub	ip, fp, #396	; 0x18c
    a460:	adds	r0, r0, #1
    a464:	adc	r1, r1, #0
    a468:	cmp	r0, r2
    a46c:	sbcs	r3, r1, r3
    a470:	strd	r0, [ip]
    a474:	bge	a534 <readstat_parse_sas7bcat+0x4a0>
    a478:	ldr	r1, [fp, #-396]	; 0xfffffe74
    a47c:	ldr	r0, [r8, #64]	; 0x40
    a480:	ldr	r2, [r8, #72]	; 0x48
    a484:	ldr	r3, [sl, #8]
    a488:	mla	r0, r0, r1, r2
    a48c:	ldr	r2, [sl, #20]
    a490:	mov	r1, #0
    a494:	blx	r3
    a498:	cmn	r0, #1
    a49c:	ldr	r0, [fp, #-404]	; 0xfffffe6c
    a4a0:	beq	a528 <readstat_parse_sas7bcat+0x494>
    a4a4:	ldr	r3, [sl, #12]
    a4a8:	ldr	r2, [sl, #20]
    a4ac:	ldr	r1, [r8, #64]	; 0x40
    a4b0:	blx	r3
    a4b4:	ldrd	r6, [r8, #64]	; 0x40
    a4b8:	ldr	r2, [fp, #-416]	; 0xfffffe60
    a4bc:	ldr	r1, [fp, #-412]	; 0xfffffe64
    a4c0:	mov	r4, r6
    a4c4:	mov	r5, r7
    a4c8:	mov	r6, r0
    a4cc:	asr	r7, r0, #31
    a4d0:	cmp	r6, r4
    a4d4:	sbcs	r3, r7, r5
    a4d8:	mov	r0, r9
    a4dc:	blt	a51c <readstat_parse_sas7bcat+0x488>
    a4e0:	bl	3fa4 <memcmp@plt>
    a4e4:	subs	r6, r0, #0
    a4e8:	bne	a450 <readstat_parse_sas7bcat+0x3bc>
    a4ec:	sub	r1, r4, #16
    a4f0:	mov	r2, r8
    a4f4:	mov	r0, r9
    a4f8:	bl	9f50 <sas7bcat_augment_index>
    a4fc:	cmp	r0, #0
    a500:	beq	a450 <readstat_parse_sas7bcat+0x3bc>
    a504:	ldr	r7, [fp, #-428]	; 0xfffffe54
    a508:	ldr	r4, [fp, #-404]	; 0xfffffe6c
    a50c:	mov	r9, r0
    a510:	b	a354 <readstat_parse_sas7bcat+0x2c0>
    a514:	mov	r6, #0
    a518:	b	a354 <readstat_parse_sas7bcat+0x2c0>
    a51c:	ldr	r7, [fp, #-428]	; 0xfffffe54
    a520:	ldr	r4, [fp, #-404]	; 0xfffffe6c
    a524:	b	a3c8 <readstat_parse_sas7bcat+0x334>
    a528:	ldr	r7, [fp, #-428]	; 0xfffffe54
    a52c:	ldr	r4, [fp, #-404]	; 0xfffffe6c
    a530:	b	a34c <readstat_parse_sas7bcat+0x2b8>
    a534:	ldr	r7, [fp, #-428]	; 0xfffffe54
    a538:	ldr	r4, [fp, #-404]	; 0xfffffe6c
    a53c:	ldr	r9, [fp, #-420]	; 0xfffffe5c
    a540:	ldr	ip, [r8, #84]	; 0x54
    a544:	cmp	ip, #0
    a548:	beq	a5f4 <readstat_parse_sas7bcat+0x560>
    a54c:	cmp	ip, #1
    a550:	ldr	lr, [r8, #80]	; 0x50
    a554:	ble	ae70 <readstat_parse_sas7bcat+0xddc>
    a558:	ldrd	r0, [lr]
    a55c:	ldrd	r2, [lr, #8]
    a560:	cmp	r1, r3
    a564:	cmpeq	r0, r2
    a568:	addls	r5, lr, #8
    a56c:	movls	r6, #1
    a570:	bls	a590 <readstat_parse_sas7bcat+0x4fc>
    a574:	b	ae40 <readstat_parse_sas7bcat+0xdac>
    a578:	ldrd	r0, [r3, #8]
    a57c:	ldrd	r2, [r3]
    a580:	add	r5, r5, #8
    a584:	cmp	r1, r3
    a588:	cmpeq	r0, r2
    a58c:	bcc	ae40 <readstat_parse_sas7bcat+0xdac>
    a590:	add	r6, r6, #1
    a594:	cmp	ip, r6
    a598:	mov	r3, r5
    a59c:	bne	a578 <readstat_parse_sas7bcat+0x4e4>
    a5a0:	mov	r6, #1
    a5a4:	mov	r5, r6
    a5a8:	mov	r0, lr
    a5ac:	str	r8, [fp, #-396]	; 0xfffffe74
    a5b0:	str	r9, [fp, #-404]	; 0xfffffe6c
    a5b4:	mov	r3, r0
    a5b8:	ldrd	r8, [r0, #8]!
    a5bc:	ldrd	r2, [r3]
    a5c0:	lsl	r1, r6, #3
    a5c4:	cmp	r9, r3
    a5c8:	cmpeq	r8, r2
    a5cc:	beq	a5dc <readstat_parse_sas7bcat+0x548>
    a5d0:	cmp	r6, r5
    a5d4:	add	r6, r6, #1
    a5d8:	strdne	r8, [lr, r1]
    a5dc:	add	r5, r5, #1
    a5e0:	cmp	r5, ip
    a5e4:	bne	a5b4 <readstat_parse_sas7bcat+0x520>
    a5e8:	ldr	r8, [fp, #-396]	; 0xfffffe74
    a5ec:	ldr	r9, [fp, #-404]	; 0xfffffe6c
    a5f0:	str	r6, [r8, #84]	; 0x54
    a5f4:	ldr	r2, [r8, #84]	; 0x54
    a5f8:	cmp	r2, #0
    a5fc:	ble	a514 <readstat_parse_sas7bcat+0x480>
    a600:	vldr	d8, [pc, #672]	; a8a8 <readstat_parse_sas7bcat+0x814>
    a604:	mov	r0, #0
    a608:	mov	r1, #0
    a60c:	sub	r3, fp, #452	; 0x1c4
    a610:	str	r9, [fp, #-472]	; 0xfffffe28
    a614:	mov	r9, r8
    a618:	mov	r6, #0
    a61c:	strd	r0, [r3]
    a620:	str	r6, [fp, #-440]	; 0xfffffe48
    a624:	str	sl, [fp, #-444]	; 0xfffffe44
    a628:	str	r7, [fp, #-456]	; 0xfffffe38
    a62c:	str	r4, [fp, #-460]	; 0xfffffe34
    a630:	ldr	r3, [fp, #-452]	; 0xfffffe3c
    a634:	ldr	r1, [r9, #80]	; 0x50
    a638:	ldr	r5, [r9, #12]
    a63c:	lsl	r3, r3, #3
    a640:	add	r0, r1, r3
    a644:	ldrh	r4, [r1, r3]
    a648:	ldr	r3, [r9, #16]
    a64c:	ldr	sl, [r0, #4]
    a650:	cmp	r3, #0
    a654:	movne	r3, #32
    a658:	moveq	r3, #16
    a65c:	cmp	r4, #0
    a660:	cmpne	sl, #0
    a664:	str	r4, [fp, #-416]	; 0xfffffe60
    a668:	str	sl, [fp, #-464]	; 0xfffffe30
    a66c:	str	r3, [fp, #-412]	; 0xfffffe64
    a670:	ble	a7ec <readstat_parse_sas7bcat+0x758>
    a674:	ldrd	r0, [r9, #56]	; 0x38
    a678:	asr	r7, sl, #31
    a67c:	cmp	r0, sl
    a680:	sbcs	r3, r1, r7
    a684:	blt	a7ec <readstat_parse_sas7bcat+0x758>
    a688:	mov	r3, #0
    a68c:	str	r3, [fp, #-396]	; 0xfffffe74
    a690:	sub	r3, fp, #300	; 0x12c
    a694:	str	r3, [fp, #-428]	; 0xfffffe54
    a698:	sub	r3, fp, #296	; 0x128
    a69c:	sub	r3, r3, #2
    a6a0:	str	r3, [fp, #-420]	; 0xfffffe5c
    a6a4:	sub	r3, fp, #296	; 0x128
    a6a8:	str	r3, [fp, #-432]	; 0xfffffe50
    a6ac:	sub	r3, fp, #292	; 0x124
    a6b0:	sub	r8, fp, #304	; 0x130
    a6b4:	sub	r3, r3, #2
    a6b8:	str	r3, [fp, #-436]	; 0xfffffe4c
    a6bc:	mov	r3, r8
    a6c0:	mov	r6, #1
    a6c4:	mov	r8, r5
    a6c8:	mov	r7, #0
    a6cc:	mov	r5, r3
    a6d0:	b	a74c <readstat_parse_sas7bcat+0x6b8>
    a6d4:	bl	43f4 <sas_read4@plt>
    a6d8:	ldr	r1, [r9, #24]
    a6dc:	mov	sl, r0
    a6e0:	ldr	r0, [fp, #-432]	; 0xfffffe50
    a6e4:	bl	43d0 <sas_read2@plt>
    a6e8:	ldr	r1, [r9, #24]
    a6ec:	mov	r4, r0
    a6f0:	ldr	r0, [fp, #-436]	; 0xfffffe4c
    a6f4:	bl	43d0 <sas_read2@plt>
    a6f8:	mov	r3, r0
    a6fc:	sub	r2, fp, #404	; 0x194
    a700:	cmp	sl, #0
    a704:	cmpgt	r4, #0
    a708:	strd	r6, [r2]
    a70c:	ldr	r2, [fp, #-396]	; 0xfffffe74
    a710:	asr	r1, sl, #31
    a714:	add	r3, r2, r3
    a718:	str	r3, [fp, #-396]	; 0xfffffe74
    a71c:	ble	a7d8 <readstat_parse_sas7bcat+0x744>
    a720:	ldrd	r2, [r9, #56]	; 0x38
    a724:	cmp	r2, sl
    a728:	sbcs	r1, r3, r1
    a72c:	blt	a7d8 <readstat_parse_sas7bcat+0x744>
    a730:	sub	r1, fp, #404	; 0x194
    a734:	adds	r6, r6, #1
    a738:	ldrd	r0, [r1]
    a73c:	adc	r7, r7, #0
    a740:	cmp	r0, r2
    a744:	sbcs	r3, r1, r3
    a748:	bge	a7d8 <readstat_parse_sas7bcat+0x744>
    a74c:	ldr	r3, [r9, #72]	; 0x48
    a750:	ldr	r0, [r9, #64]	; 0x40
    a754:	sub	sl, sl, #1
    a758:	add	r3, r4, r3
    a75c:	mla	r0, r0, sl, r3
    a760:	mov	r1, #0
    a764:	ldr	r3, [r8, #8]
    a768:	ldr	r2, [r8, #20]
    a76c:	blx	r3
    a770:	ldr	r4, [fp, #-412]	; 0xfffffe64
    a774:	mov	r1, r4
    a778:	cmn	r0, #1
    a77c:	mov	r0, r5
    a780:	beq	ad64 <readstat_parse_sas7bcat+0xcd0>
    a784:	ldr	r3, [r8, #12]
    a788:	ldr	r2, [r8, #20]
    a78c:	blx	r3
    a790:	cmp	r0, r4
    a794:	mov	r0, r5
    a798:	blt	ad48 <readstat_parse_sas7bcat+0xcb4>
    a79c:	ldr	r3, [r9, #16]
    a7a0:	ldr	r1, [r9, #24]
    a7a4:	cmp	r3, #0
    a7a8:	bne	a6d4 <readstat_parse_sas7bcat+0x640>
    a7ac:	bl	43f4 <sas_read4@plt>
    a7b0:	ldr	r1, [r9, #24]
    a7b4:	mov	sl, r0
    a7b8:	ldr	r0, [fp, #-428]	; 0xfffffe54
    a7bc:	bl	43d0 <sas_read2@plt>
    a7c0:	ldr	r1, [r9, #24]
    a7c4:	mov	r4, r0
    a7c8:	ldr	r0, [fp, #-420]	; 0xfffffe5c
    a7cc:	bl	43d0 <sas_read2@plt>
    a7d0:	mov	r3, r0
    a7d4:	b	a6fc <readstat_parse_sas7bcat+0x668>
    a7d8:	ldr	r3, [fp, #-396]	; 0xfffffe74
    a7dc:	mov	r8, r5
    a7e0:	cmp	r3, #0
    a7e4:	bne	a834 <readstat_parse_sas7bcat+0x7a0>
    a7e8:	ldr	r2, [r9, #84]	; 0x54
    a7ec:	sub	r3, fp, #452	; 0x1c4
    a7f0:	ldrd	r0, [r3]
    a7f4:	adds	r0, r0, #1
    a7f8:	adc	r1, r1, #0
    a7fc:	mov	r5, r1
    a800:	mov	r4, r0
    a804:	asr	r1, r2, #31
    a808:	cmp	r4, r2
    a80c:	strd	r4, [r3]
    a810:	sbcs	r3, r5, r1
    a814:	blt	a630 <readstat_parse_sas7bcat+0x59c>
    a818:	mov	r8, r9
    a81c:	ldr	r6, [fp, #-440]	; 0xfffffe48
    a820:	ldr	sl, [fp, #-444]	; 0xfffffe44
    a824:	ldr	r7, [fp, #-456]	; 0xfffffe38
    a828:	ldr	r4, [fp, #-460]	; 0xfffffe34
    a82c:	ldr	r9, [fp, #-472]	; 0xfffffe28
    a830:	b	a354 <readstat_parse_sas7bcat+0x2c0>
    a834:	ldr	r0, [fp, #-440]	; 0xfffffe48
    a838:	ldr	r1, [fp, #-396]	; 0xfffffe74
    a83c:	bl	42e0 <readstat_realloc@plt>
    a840:	subs	r3, r0, #0
    a844:	str	r3, [fp, #-440]	; 0xfffffe48
    a848:	beq	aef4 <readstat_parse_sas7bcat+0xe60>
    a84c:	ldr	r3, [r9, #16]
    a850:	mov	r7, #0
    a854:	cmp	r3, r7
    a858:	mov	r2, #0
    a85c:	mov	r3, #0
    a860:	sub	r1, fp, #404	; 0x194
    a864:	movne	sl, #32
    a868:	strd	r2, [r1]
    a86c:	sub	r3, fp, #300	; 0x12c
    a870:	str	r3, [fp, #-420]	; 0xfffffe5c
    a874:	sub	r3, fp, #296	; 0x128
    a878:	sub	r3, r3, #2
    a87c:	str	r3, [fp, #-432]	; 0xfffffe50
    a880:	sub	r3, fp, #296	; 0x128
    a884:	str	r3, [fp, #-436]	; 0xfffffe4c
    a888:	sub	r3, fp, #292	; 0x124
    a88c:	moveq	sl, #16
    a890:	sub	r3, r3, #2
    a894:	ldr	r6, [r9, #12]
    a898:	str	r3, [fp, #-468]	; 0xfffffe2c
    a89c:	ldr	r5, [fp, #-464]	; 0xfffffe30
    a8a0:	str	sl, [fp, #-428]	; 0xfffffe54
    a8a4:	b	a934 <readstat_parse_sas7bcat+0x8a0>
    a8a8:	.word	0x00000000
    a8ac:	.word	0x7ff80000
    a8b0:	.word	0x00000101
    a8b4:	.word	0x0001a0cc
    a8b8:	.word	0x0000ffff
    a8bc:	.word	0xfffff0ec
    a8c0:	mov	r0, r8
    a8c4:	bl	43f4 <sas_read4@plt>
    a8c8:	ldr	r1, [r9, #24]
    a8cc:	mov	r5, r0
    a8d0:	ldr	r0, [fp, #-436]	; 0xfffffe4c
    a8d4:	bl	43d0 <sas_read2@plt>
    a8d8:	ldr	r1, [r9, #24]
    a8dc:	str	r0, [fp, #-416]	; 0xfffffe60
    a8e0:	ldr	r0, [fp, #-468]	; 0xfffffe2c
    a8e4:	bl	43d0 <sas_read2@plt>
    a8e8:	mov	sl, r0
    a8ec:	ldr	r3, [fp, #-440]	; 0xfffffe48
    a8f0:	mov	r1, sl
    a8f4:	add	r0, r3, r7
    a8f8:	ldr	r3, [fp, #-396]	; 0xfffffe74
    a8fc:	add	r7, sl, r7
    a900:	cmp	r3, r7
    a904:	bcc	add4 <readstat_parse_sas7bcat+0xd40>
    a908:	ldr	r3, [r6, #12]
    a90c:	ldr	r2, [r6, #20]
    a910:	blx	r3
    a914:	sub	r3, fp, #404	; 0x194
    a918:	sub	r1, fp, #404	; 0x194
    a91c:	ldrd	r2, [r3]
    a920:	adds	r2, r2, #1
    a924:	adc	r3, r3, #0
    a928:	strd	r2, [r1]
    a92c:	cmp	sl, r0
    a930:	bgt	ad48 <readstat_parse_sas7bcat+0xcb4>
    a934:	asr	r3, r5, #31
    a938:	mov	r2, r5
    a93c:	sub	r0, fp, #412	; 0x19c
    a940:	mov	r1, #0
    a944:	strd	r2, [r0]
    a948:	ldr	r3, [fp, #-416]	; 0xfffffe60
    a94c:	sub	ip, r5, #1
    a950:	cmp	r5, r1
    a954:	cmpgt	r3, r1
    a958:	ble	aa0c <readstat_parse_sas7bcat+0x978>
    a95c:	ldrd	r2, [r9, #56]	; 0x38
    a960:	ldrd	r4, [r0]
    a964:	cmp	r2, r4
    a968:	sbcs	r0, r3, r5
    a96c:	blt	aa0c <readstat_parse_sas7bcat+0x978>
    a970:	sub	r0, fp, #404	; 0x194
    a974:	ldrd	r4, [r0]
    a978:	cmp	r4, r2
    a97c:	sbcs	r3, r5, r3
    a980:	bge	aa0c <readstat_parse_sas7bcat+0x978>
    a984:	ldr	r3, [r9, #72]	; 0x48
    a988:	ldr	r2, [fp, #-416]	; 0xfffffe60
    a98c:	ldr	r0, [r9, #64]	; 0x40
    a990:	add	r4, r2, r3
    a994:	ldr	r3, [r6, #8]
    a998:	mla	r0, r0, ip, r4
    a99c:	ldr	r2, [r6, #20]
    a9a0:	blx	r3
    a9a4:	ldr	r4, [fp, #-428]	; 0xfffffe54
    a9a8:	mov	r1, r4
    a9ac:	cmn	r0, #1
    a9b0:	mov	r0, r8
    a9b4:	beq	ad64 <readstat_parse_sas7bcat+0xcd0>
    a9b8:	ldr	r3, [r6, #12]
    a9bc:	ldr	r2, [r6, #20]
    a9c0:	blx	r3
    a9c4:	cmp	r0, r4
    a9c8:	mov	r0, r8
    a9cc:	blt	ad48 <readstat_parse_sas7bcat+0xcb4>
    a9d0:	ldr	r3, [r9, #16]
    a9d4:	ldr	r1, [r9, #24]
    a9d8:	cmp	r3, #0
    a9dc:	bne	a8c0 <readstat_parse_sas7bcat+0x82c>
    a9e0:	bl	43f4 <sas_read4@plt>
    a9e4:	ldr	r1, [r9, #24]
    a9e8:	mov	r5, r0
    a9ec:	ldr	r0, [fp, #-420]	; 0xfffffe5c
    a9f0:	bl	43d0 <sas_read2@plt>
    a9f4:	ldr	r1, [r9, #24]
    a9f8:	str	r0, [fp, #-416]	; 0xfffffe60
    a9fc:	ldr	r0, [fp, #-432]	; 0xfffffe50
    aa00:	bl	43d0 <sas_read2@plt>
    aa04:	mov	sl, r0
    aa08:	b	a8ec <readstat_parse_sas7bcat+0x858>
    aa0c:	ldr	r3, [fp, #-396]	; 0xfffffe74
    aa10:	cmp	r3, #105	; 0x69
    aa14:	ble	a7e8 <readstat_parse_sas7bcat+0x754>
    aa18:	ldr	r5, [fp, #-440]	; 0xfffffe48
    aa1c:	ldr	r3, [r9, #16]
    aa20:	ldrb	r2, [r5, #2]
    aa24:	tst	r2, #8
    aa28:	moveq	r4, #0
    aa2c:	movne	r4, #4
    aa30:	cmp	r3, #0
    aa34:	beq	ad80 <readstat_parse_sas7bcat+0xcec>
    aa38:	add	r0, r4, #42	; 0x2a
    aa3c:	add	r0, r5, r0
    aa40:	ldr	r1, [r9, #24]
    aa44:	bl	43f4 <sas_read4@plt>
    aa48:	ldr	r1, [r9, #24]
    aa4c:	str	r0, [fp, #-416]	; 0xfffffe60
    aa50:	add	r0, r4, #50	; 0x32
    aa54:	add	r0, r5, r0
    aa58:	bl	43f4 <sas_read4@plt>
    aa5c:	mov	r5, #138	; 0x8a
    aa60:	mov	sl, r0
    aa64:	ldr	r2, [r9, #100]	; 0x64
    aa68:	mov	r3, #8
    aa6c:	str	r2, [sp]
    aa70:	ldr	r2, [fp, #-440]	; 0xfffffe48
    aa74:	mov	r1, #129	; 0x81
    aa78:	add	r2, r2, r3
    aa7c:	mov	r0, r8
    aa80:	bl	4238 <readstat_convert@plt>
    aa84:	subs	r3, r0, #0
    aa88:	str	r3, [fp, #-404]	; 0xfffffe6c
    aa8c:	bne	adb4 <readstat_parse_sas7bcat+0xd20>
    aa90:	ldr	r3, [fp, #-440]	; 0xfffffe48
    aa94:	cmp	r4, #0
    aa98:	addne	r4, r4, #16
    aa9c:	ldrsb	r3, [r3, #2]
    aaa0:	cmp	r3, #0
    aaa4:	blt	adf0 <readstat_parse_sas7bcat+0xd5c>
    aaa8:	ldr	r3, [fp, #-396]	; 0xfffffe74
    aaac:	add	r6, r4, r5
    aab0:	cmp	r3, r6
    aab4:	bcc	a7e8 <readstat_parse_sas7bcat+0x754>
    aab8:	mov	r1, #4
    aabc:	mov	r0, sl
    aac0:	bl	3fc8 <readstat_calloc@plt>
    aac4:	mov	r7, r0
    aac8:	str	r0, [fp, #-412]	; 0xfffffe64
    aacc:	bl	3eb4 <machine_is_little_endian@plt>
    aad0:	cmp	r7, #0
    aad4:	str	r0, [fp, #-432]	; 0xfffffe50
    aad8:	beq	af28 <readstat_parse_sas7bcat+0xe94>
    aadc:	ldr	r3, [fp, #-396]	; 0xfffffe74
    aae0:	ldr	r2, [fp, #-440]	; 0xfffffe48
    aae4:	sub	r5, r3, r5
    aae8:	add	r7, r2, r6
    aaec:	ldr	r3, [fp, #-416]	; 0xfffffe60
    aaf0:	ldrb	r2, [fp, #-304]	; 0xfffffed0
    aaf4:	cmp	r3, #0
    aaf8:	sub	r3, r5, r4
    aafc:	str	r3, [fp, #-420]	; 0xfffffe5c
    ab00:	str	r2, [fp, #-436]	; 0xfffffe4c
    ab04:	ble	af6c <readstat_parse_sas7bcat+0xed8>
    ab08:	cmp	r3, #2
    ab0c:	bls	af48 <readstat_parse_sas7bcat+0xeb4>
    ab10:	mov	r6, r7
    ab14:	mov	r4, #0
    ab18:	mov	r5, r3
    ab1c:	b	ab28 <readstat_parse_sas7bcat+0xa94>
    ab20:	cmp	r5, r3
    ab24:	bcc	aecc <readstat_parse_sas7bcat+0xe38>
    ab28:	cmp	sl, r4
    ab2c:	add	r4, r4, #1
    ab30:	ble	ab70 <readstat_parse_sas7bcat+0xadc>
    ab34:	ldr	r1, [r9, #20]
    ab38:	add	r3, r1, #14
    ab3c:	add	r3, r6, r3
    ab40:	sub	r3, r3, r7
    ab44:	add	r1, r1, #10
    ab48:	cmp	r5, r3
    ab4c:	add	r0, r6, r1
    ab50:	bcc	aecc <readstat_parse_sas7bcat+0xe38>
    ab54:	ldr	r1, [r9, #24]
    ab58:	bl	43f4 <sas_read4@plt>
    ab5c:	sub	r3, r6, r7
    ab60:	cmp	sl, r0
    ab64:	bls	aecc <readstat_parse_sas7bcat+0xe38>
    ab68:	ldr	r2, [fp, #-412]	; 0xfffffe64
    ab6c:	str	r3, [r2, r0, lsl #2]
    ab70:	ldrb	r3, [r6, #2]
    ab74:	ldr	r2, [fp, #-416]	; 0xfffffe60
    ab78:	add	r3, r3, #6
    ab7c:	add	r6, r6, r3
    ab80:	add	r3, r6, #3
    ab84:	cmp	r2, r4
    ab88:	sub	r3, r3, r7
    ab8c:	bne	ab20 <readstat_parse_sas7bcat+0xa8c>
    ab90:	mov	r3, #0
    ab94:	str	r3, [fp, #-396]	; 0xfffffe74
    ab98:	str	r8, [fp, #-468]	; 0xfffffe2c
    ab9c:	b	aca0 <readstat_parse_sas7bcat+0xc0c>
    aba0:	mov	r3, #5
    aba4:	add	r0, r0, #22
    aba8:	ldr	r1, [fp, #-432]	; 0xfffffe50
    abac:	str	r3, [fp, #-380]	; 0xfffffe84
    abb0:	bl	43c4 <sas_read8@plt>
    abb4:	mov	r2, r0
    abb8:	mov	r3, r1
    abbc:	sub	r1, fp, #428	; 0x1ac
    abc0:	mvn	r0, #0
    abc4:	strd	r2, [r1]
    abc8:	ldr	r1, [pc, #-792]	; a8b8 <readstat_parse_sas7bcat+0x824>
    abcc:	orr	r3, r3, #65280	; 0xff00
    abd0:	cmp	r3, r1
    abd4:	cmpeq	r2, r0
    abd8:	vldrne	d7, [fp, #-428]	; 0xfffffe54
    abdc:	vnegne.f64	d7, d7
    abe0:	beq	aeb0 <readstat_parse_sas7bcat+0xe1c>
    abe4:	vstr	d7, [fp, #-388]	; 0xfffffe7c
    abe8:	ldr	r1, [r9, #24]
    abec:	add	r0, r6, #8
    abf0:	bl	43d0 <sas_read2@plt>
    abf4:	ldr	r2, [fp, #-420]	; 0xfffffe5c
    abf8:	add	r3, r0, #10
    abfc:	add	r3, r6, r3
    ac00:	sub	r3, r3, r7
    ac04:	cmp	r2, r3
    ac08:	mov	r5, r0
    ac0c:	bcc	aecc <readstat_parse_sas7bcat+0xe38>
    ac10:	ldr	r3, [r9, #4]
    ac14:	cmp	r3, #0
    ac18:	beq	ac8c <readstat_parse_sas7bcat+0xbf8>
    ac1c:	lsl	r1, r0, #2
    ac20:	add	r3, r1, #8
    ac24:	bic	r3, r3, #7
    ac28:	str	sp, [fp, #-428]	; 0xfffffe54
    ac2c:	ldr	r0, [r9, #100]	; 0x64
    ac30:	sub	sp, sp, r3
    ac34:	add	r8, sp, #16
    ac38:	ldr	r2, [fp, #-464]	; 0xfffffe30
    ac3c:	add	r1, r1, #1
    ac40:	str	r0, [sp]
    ac44:	mov	r3, r5
    ac48:	mov	r0, r8
    ac4c:	bl	4238 <readstat_convert@plt>
    ac50:	cmp	r0, #0
    ac54:	bne	ae78 <readstat_parse_sas7bcat+0xde4>
    ac58:	ldr	r3, [r9, #8]
    ac5c:	str	r8, [sp, #8]
    ac60:	str	r3, [sp, #12]
    ac64:	sub	r3, fp, #380	; 0x17c
    ac68:	ldm	r3, {r0, r1}
    ac6c:	stm	sp, {r0, r1}
    ac70:	ldr	r0, [fp, #-468]	; 0xfffffe2c
    ac74:	ldm	r4, {r2, r3}
    ac78:	ldr	r1, [r9, #4]
    ac7c:	blx	r1
    ac80:	cmp	r0, #0
    ac84:	bne	af74 <readstat_parse_sas7bcat+0xee0>
    ac88:	ldr	sp, [fp, #-428]	; 0xfffffe54
    ac8c:	ldr	r3, [fp, #-396]	; 0xfffffe74
    ac90:	add	r5, r5, #11
    ac94:	add	r6, r6, r5
    ac98:	add	r3, r3, #1
    ac9c:	str	r3, [fp, #-396]	; 0xfffffe74
    aca0:	ldr	r3, [fp, #-416]	; 0xfffffe60
    aca4:	ldr	r2, [fp, #-396]	; 0xfffffe74
    aca8:	cmp	sl, r3
    acac:	movlt	r3, sl
    acb0:	cmp	r2, r3
    acb4:	bge	ae80 <readstat_parse_sas7bcat+0xdec>
    acb8:	ldr	r3, [fp, #-412]	; 0xfffffe64
    acbc:	ldr	r2, [fp, #-396]	; 0xfffffe74
    acc0:	ldr	r0, [r3, r2, lsl #2]
    acc4:	ldr	r2, [fp, #-420]	; 0xfffffe5c
    acc8:	add	r3, r0, #30
    accc:	cmp	r2, r3
    acd0:	add	r0, r7, r0
    acd4:	bcc	aecc <readstat_parse_sas7bcat+0xe38>
    acd8:	add	r3, r6, #10
    acdc:	str	r3, [fp, #-464]	; 0xfffffe30
    ace0:	sub	r3, r3, r7
    ace4:	cmp	r2, r3
    ace8:	bcc	aecc <readstat_parse_sas7bcat+0xe38>
    acec:	ldr	r3, [fp, #-436]	; 0xfffffe4c
    acf0:	sub	r4, fp, #388	; 0x184
    acf4:	cmp	r3, #36	; 0x24
    acf8:	mov	r3, #0
    acfc:	str	r3, [r4, #4]
    ad00:	str	r3, [fp, #-388]	; 0xfffffe7c
    ad04:	str	r3, [r4, #8]
    ad08:	str	r3, [r4, #12]
    ad0c:	bne	aba0 <readstat_parse_sas7bcat+0xb0c>
    ad10:	ldrb	r2, [r0, #2]
    ad14:	ldr	r3, [r9, #100]	; 0x64
    ad18:	sub	r5, fp, #372	; 0x174
    ad1c:	sub	r2, r2, #10
    ad20:	add	r2, r0, r2
    ad24:	str	r3, [sp]
    ad28:	mov	r0, r5
    ad2c:	mov	r3, #16
    ad30:	mov	r1, #65	; 0x41
    ad34:	bl	4238 <readstat_convert@plt>
    ad38:	cmp	r0, #0
    ad3c:	bne	ae7c <readstat_parse_sas7bcat+0xde8>
    ad40:	str	r5, [fp, #-388]	; 0xfffffe7c
    ad44:	b	abe8 <readstat_parse_sas7bcat+0xb54>
    ad48:	mov	r8, r9
    ad4c:	ldr	r6, [fp, #-440]	; 0xfffffe48
    ad50:	ldr	sl, [fp, #-444]	; 0xfffffe44
    ad54:	ldr	r7, [fp, #-456]	; 0xfffffe38
    ad58:	ldr	r4, [fp, #-460]	; 0xfffffe34
    ad5c:	mov	r9, #2
    ad60:	b	a354 <readstat_parse_sas7bcat+0x2c0>
    ad64:	mov	r8, r9
    ad68:	ldr	r6, [fp, #-440]	; 0xfffffe48
    ad6c:	ldr	sl, [fp, #-444]	; 0xfffffe44
    ad70:	ldr	r7, [fp, #-456]	; 0xfffffe38
    ad74:	ldr	r4, [fp, #-460]	; 0xfffffe34
    ad78:	mov	r9, #15
    ad7c:	b	a354 <readstat_parse_sas7bcat+0x2c0>
    ad80:	ldr	r5, [fp, #-440]	; 0xfffffe48
    ad84:	add	r0, r4, #38	; 0x26
    ad88:	add	r0, r5, r0
    ad8c:	ldr	r1, [r9, #24]
    ad90:	bl	43f4 <sas_read4@plt>
    ad94:	ldr	r1, [r9, #24]
    ad98:	str	r0, [fp, #-416]	; 0xfffffe60
    ad9c:	add	r0, r4, #42	; 0x2a
    ada0:	add	r0, r5, r0
    ada4:	bl	43f4 <sas_read4@plt>
    ada8:	mov	r5, #106	; 0x6a
    adac:	mov	sl, r0
    adb0:	b	aa64 <readstat_parse_sas7bcat+0x9d0>
    adb4:	ldr	r6, [fp, #-440]	; 0xfffffe48
    adb8:	ldr	sl, [fp, #-444]	; 0xfffffe44
    adbc:	ldr	r7, [fp, #-456]	; 0xfffffe38
    adc0:	ldr	r4, [fp, #-460]	; 0xfffffe34
    adc4:	ldr	r0, [fp, #-404]	; 0xfffffe6c
    adc8:	mov	r8, r9
    adcc:	mov	r9, r0
    add0:	b	a354 <readstat_parse_sas7bcat+0x2c0>
    add4:	mov	r8, r9
    add8:	ldr	r6, [fp, #-440]	; 0xfffffe48
    addc:	ldr	sl, [fp, #-444]	; 0xfffffe44
    ade0:	ldr	r7, [fp, #-456]	; 0xfffffe38
    ade4:	ldr	r4, [fp, #-460]	; 0xfffffe34
    ade8:	mov	r9, #5
    adec:	b	a354 <readstat_parse_sas7bcat+0x2c0>
    adf0:	ldr	r3, [r9, #16]
    adf4:	cmp	r3, #0
    adf8:	bne	aaa8 <readstat_parse_sas7bcat+0xa14>
    adfc:	add	r2, r5, r4
    ae00:	ldr	r1, [fp, #-396]	; 0xfffffe74
    ae04:	add	r3, r2, #32
    ae08:	cmp	r1, r3
    ae0c:	bcc	a7e8 <readstat_parse_sas7bcat+0x754>
    ae10:	ldr	r1, [fp, #-440]	; 0xfffffe48
    ae14:	ldr	r3, [r9, #100]	; 0x64
    ae18:	add	r2, r1, r2
    ae1c:	str	r3, [sp]
    ae20:	mov	r1, #129	; 0x81
    ae24:	mov	r3, #32
    ae28:	mov	r0, r8
    ae2c:	bl	4238 <readstat_convert@plt>
    ae30:	cmp	r0, #0
    ae34:	bne	af10 <readstat_parse_sas7bcat+0xe7c>
    ae38:	add	r4, r4, #32
    ae3c:	b	aaa8 <readstat_parse_sas7bcat+0xa14>
    ae40:	ldr	r3, [pc, #-1420]	; a8bc <readstat_parse_sas7bcat+0x828>
    ae44:	mov	r1, ip
    ae48:	mov	r0, lr
    ae4c:	add	r3, pc, r3
    ae50:	mov	r2, #8
    ae54:	bl	443c <qsort@plt>
    ae58:	ldr	ip, [r8, #84]	; 0x54
    ae5c:	ldr	lr, [r8, #80]	; 0x50
    ae60:	cmp	ip, #0
    ae64:	beq	a5f4 <readstat_parse_sas7bcat+0x560>
    ae68:	cmp	ip, #1
    ae6c:	bgt	a5a0 <readstat_parse_sas7bcat+0x50c>
    ae70:	mov	r6, #1
    ae74:	b	a5f0 <readstat_parse_sas7bcat+0x55c>
    ae78:	ldr	sp, [fp, #-428]	; 0xfffffe54
    ae7c:	str	r0, [fp, #-404]	; 0xfffffe6c
    ae80:	ldr	r0, [fp, #-412]	; 0xfffffe64
    ae84:	bl	3ec0 <free@plt>
    ae88:	ldr	r3, [fp, #-404]	; 0xfffffe6c
    ae8c:	cmp	r3, #0
    ae90:	beq	a7e8 <readstat_parse_sas7bcat+0x754>
    ae94:	ldr	r6, [fp, #-440]	; 0xfffffe48
    ae98:	ldr	sl, [fp, #-444]	; 0xfffffe44
    ae9c:	ldr	r7, [fp, #-456]	; 0xfffffe38
    aea0:	ldr	r4, [fp, #-460]	; 0xfffffe34
    aea4:	mov	r8, r9
    aea8:	ldr	r9, [fp, #-404]	; 0xfffffe6c
    aeac:	b	a354 <readstat_parse_sas7bcat+0x2c0>
    aeb0:	ldr	r3, [fp, #-424]	; 0xfffffe58
    aeb4:	mov	r0, r4
    aeb8:	lsr	r1, r3, #8
    aebc:	uxtb	r1, r1
    aec0:	bl	44a8 <sas_assign_tag@plt>
    aec4:	vmov.f64	d7, d8
    aec8:	b	abe4 <readstat_parse_sas7bcat+0xb50>
    aecc:	ldr	r0, [fp, #-412]	; 0xfffffe64
    aed0:	ldr	r6, [fp, #-440]	; 0xfffffe48
    aed4:	ldr	sl, [fp, #-444]	; 0xfffffe44
    aed8:	ldr	r7, [fp, #-456]	; 0xfffffe38
    aedc:	ldr	r4, [fp, #-460]	; 0xfffffe34
    aee0:	bl	3ec0 <free@plt>
    aee4:	mov	r3, #5
    aee8:	mov	r8, r9
    aeec:	str	r3, [fp, #-404]	; 0xfffffe6c
    aef0:	b	aea8 <readstat_parse_sas7bcat+0xe14>
    aef4:	mov	r8, r9
    aef8:	ldr	r6, [fp, #-440]	; 0xfffffe48
    aefc:	ldr	sl, [fp, #-444]	; 0xfffffe44
    af00:	ldr	r7, [fp, #-456]	; 0xfffffe38
    af04:	ldr	r4, [fp, #-460]	; 0xfffffe34
    af08:	mov	r9, #3
    af0c:	b	a354 <readstat_parse_sas7bcat+0x2c0>
    af10:	ldr	r6, [fp, #-440]	; 0xfffffe48
    af14:	ldr	sl, [fp, #-444]	; 0xfffffe44
    af18:	mov	r8, r9
    af1c:	ldr	r7, [fp, #-456]	; 0xfffffe38
    af20:	ldr	r4, [fp, #-460]	; 0xfffffe34
    af24:	b	adcc <readstat_parse_sas7bcat+0xd38>
    af28:	mov	r3, #3
    af2c:	ldr	r6, [fp, #-440]	; 0xfffffe48
    af30:	ldr	sl, [fp, #-444]	; 0xfffffe44
    af34:	mov	r8, r9
    af38:	ldr	r7, [fp, #-456]	; 0xfffffe38
    af3c:	ldr	r4, [fp, #-460]	; 0xfffffe34
    af40:	str	r3, [fp, #-404]	; 0xfffffe6c
    af44:	b	aea8 <readstat_parse_sas7bcat+0xe14>
    af48:	ldr	r0, [fp, #-412]	; 0xfffffe64
    af4c:	ldr	r6, [fp, #-440]	; 0xfffffe48
    af50:	ldr	sl, [fp, #-444]	; 0xfffffe44
    af54:	mov	r8, r9
    af58:	ldr	r7, [fp, #-456]	; 0xfffffe38
    af5c:	ldr	r4, [fp, #-460]	; 0xfffffe34
    af60:	mov	r9, #5
    af64:	bl	3ec0 <free@plt>
    af68:	b	a354 <readstat_parse_sas7bcat+0x2c0>
    af6c:	mov	r6, r7
    af70:	b	ab90 <readstat_parse_sas7bcat+0xafc>
    af74:	ldr	r6, [fp, #-440]	; 0xfffffe48
    af78:	ldr	sl, [fp, #-444]	; 0xfffffe44
    af7c:	ldr	r7, [fp, #-456]	; 0xfffffe38
    af80:	ldr	r4, [fp, #-460]	; 0xfffffe34
    af84:	ldr	r0, [fp, #-412]	; 0xfffffe64
    af88:	ldr	sp, [fp, #-428]	; 0xfffffe54
    af8c:	bl	3ec0 <free@plt>
    af90:	mov	r3, #4
    af94:	mov	r8, r9
    af98:	str	r3, [fp, #-404]	; 0xfffffe6c
    af9c:	b	aea8 <readstat_parse_sas7bcat+0xe14>

0000afa0 <sas7bcat_begin_data>:
    afa0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    afa4:	sub	sp, sp, #380	; 0x17c
    afa8:	mov	r1, #0
    afac:	mov	r4, r0
    afb0:	str	r0, [sp, #168]	; 0xa8
    afb4:	bl	434c <sas_header_info_init@plt>
    afb8:	ldr	r4, [r4, #40]	; 0x28
    afbc:	ldr	r3, [pc, #1540]	; b5c8 <sas7bcat_begin_data+0x628>
    afc0:	add	r3, pc, r3
    afc4:	str	r3, [sp, #196]	; 0xc4
    afc8:	mov	r5, r0
    afcc:	str	r0, [sp, #184]	; 0xb8
    afd0:	lsl	r0, r4, #3
    afd4:	bl	410c <malloc@plt>
    afd8:	str	r0, [sp, #188]	; 0xbc
    afdc:	ldr	r0, [r5, #32]
    afe0:	bl	410c <malloc@plt>
    afe4:	cmp	r4, #0
    afe8:	str	r0, [sp, #192]	; 0xc0
    afec:	ble	b5b4 <sas7bcat_begin_data+0x614>
    aff0:	ldr	r3, [sp, #188]	; 0xbc
    aff4:	ldr	r8, [pc, #1488]	; b5cc <sas7bcat_begin_data+0x62c>
    aff8:	sub	r3, r3, #4
    affc:	str	r3, [sp, #176]	; 0xb0
    b000:	mov	r3, #0
    b004:	str	r3, [sp, #164]	; 0xa4
    b008:	add	r3, sp, #212	; 0xd4
    b00c:	str	r3, [sp, #172]	; 0xac
    b010:	ldr	r3, [sp, #168]	; 0xa8
    b014:	ldr	r2, [sp, #164]	; 0xa4
    b018:	ldr	r3, [r3, #36]	; 0x24
    b01c:	ldr	r5, [r3, r2, lsl #2]
    b020:	add	r7, r5, #4
    b024:	mov	r0, r7
    b028:	bl	41fc <strlen@plt>
    b02c:	cmp	r0, #8
    b030:	mov	r6, r0
    b034:	movls	r4, #106	; 0x6a
    b038:	bls	b048 <sas7bcat_begin_data+0xa8>
    b03c:	cmp	r0, #32
    b040:	movcs	r6, #32
    b044:	mov	r4, #138	; 0x8a
    b048:	mov	r1, r7
    b04c:	mov	r2, r6
    b050:	ldr	r0, [sp, #172]	; 0xac
    b054:	bl	3f20 <memcpy@plt>
    b058:	ldr	r9, [r5, #264]	; 0x108
    b05c:	cmp	r9, #0
    b060:	ble	b090 <sas7bcat_begin_data+0xf0>
    b064:	mov	r7, #0
    b068:	mov	r1, r7
    b06c:	mov	r0, r5
    b070:	bl	44cc <readstat_get_value_label@plt>
    b074:	ldr	r9, [r5, #264]	; 0x108
    b078:	add	r7, r7, #1
    b07c:	cmp	r7, r9
    b080:	ldr	r3, [r0, #28]
    b084:	add	r3, r3, #41	; 0x29
    b088:	add	r4, r4, r3
    b08c:	blt	b068 <sas7bcat_begin_data+0xc8>
    b090:	add	r1, r4, #8
    b094:	mov	r0, #1
    b098:	bl	3d58 <calloc@plt>
    b09c:	cmp	r6, #8
    b0a0:	mov	sl, r0
    b0a4:	str	r4, [r0]
    b0a8:	str	r9, [r0, #42]	; 0x2a
    b0ac:	str	r9, [r0, #46]	; 0x2e
    b0b0:	bls	b360 <sas7bcat_begin_data+0x3c0>
    b0b4:	ldr	r4, [sp, #172]	; 0xac
    b0b8:	add	r2, sl, #12
    b0bc:	mvn	ip, #127	; 0x7f
    b0c0:	ldm	r4, {r0, r1}
    b0c4:	add	r3, sl, #110	; 0x6e
    b0c8:	strb	ip, [sl, #6]
    b0cc:	stm	r2, {r0, r1}
    b0d0:	mov	r2, #32
    b0d4:	mov	r1, r2
    b0d8:	mov	r0, r3
    b0dc:	bl	42a4 <memset@plt>
    b0e0:	mov	r1, r4
    b0e4:	mov	r2, r6
    b0e8:	bl	3f20 <memcpy@plt>
    b0ec:	mov	r4, #142	; 0x8e
    b0f0:	mov	r7, #138	; 0x8a
    b0f4:	ldr	r3, [r5, #264]	; 0x108
    b0f8:	add	r4, sl, r4
    b0fc:	cmp	r3, #0
    b100:	rsb	r3, r3, r3, lsl #4
    b104:	add	r7, r7, r3, lsl #1
    b108:	add	r7, r7, #4
    b10c:	add	r7, sl, r7
    b110:	ble	b1e8 <sas7bcat_begin_data+0x248>
    b114:	add	r3, sp, #200	; 0xc8
    b118:	mov	r6, #0
    b11c:	mov	r9, #24
    b120:	str	sl, [sp, #180]	; 0xb4
    b124:	mov	fp, r3
    b128:	b	b188 <sas7bcat_begin_data+0x1e8>
    b12c:	ldr	r2, [sl, #20]
    b130:	str	r8, [r4, #14]
    b134:	cmp	r2, #16
    b138:	str	r8, [r4, #18]
    b13c:	str	r8, [r4, #22]
    b140:	str	r8, [r4, #26]
    b144:	movcs	r2, #16
    b148:	ldr	r1, [sl, #16]
    b14c:	bl	3f20 <memcpy@plt>
    b150:	ldr	r2, [sl, #28]
    b154:	add	r0, r7, #10
    b158:	strh	r2, [r7, #8]
    b15c:	sxth	r2, r2
    b160:	ldr	r1, [sl, #24]
    b164:	bl	3f20 <memcpy@plt>
    b168:	ldr	r3, [sl, #28]
    b16c:	ldr	r2, [r5, #264]	; 0x108
    b170:	add	r6, r6, #1
    b174:	add	r3, r3, #11
    b178:	cmp	r6, r2
    b17c:	add	r4, r4, #30
    b180:	add	r7, r7, r3
    b184:	bge	b1e4 <sas7bcat_begin_data+0x244>
    b188:	mov	r1, r6
    b18c:	mov	r0, r5
    b190:	bl	44cc <readstat_get_value_label@plt>
    b194:	strb	r9, [r4, #2]
    b198:	str	r6, [r4, #10]
    b19c:	ldr	r2, [r5]
    b1a0:	add	r1, r4, #14
    b1a4:	cmp	r2, #0
    b1a8:	mov	sl, r0
    b1ac:	mov	r0, r1
    b1b0:	beq	b12c <sas7bcat_begin_data+0x18c>
    b1b4:	vldr	d7, [sl]
    b1b8:	vneg.f64	d7, d7
    b1bc:	vmov	r0, r1, d7
    b1c0:	strd	r0, [sp, #200]	; 0xc8
    b1c4:	bl	3eb4 <machine_is_little_endian@plt>
    b1c8:	cmp	r0, #0
    b1cc:	bne	b350 <sas7bcat_begin_data+0x3b0>
    b1d0:	mov	r2, fp
    b1d4:	ldm	r2!, {r0, r1}
    b1d8:	str	r0, [r4, #22]
    b1dc:	str	r1, [r4, #26]
    b1e0:	b	b150 <sas7bcat_begin_data+0x1b0>
    b1e4:	ldr	sl, [sp, #180]	; 0xb4
    b1e8:	ldr	r3, [sp, #168]	; 0xa8
    b1ec:	ldr	r2, [sp, #164]	; 0xa4
    b1f0:	ldr	r3, [r3, #40]	; 0x28
    b1f4:	add	r2, r2, #1
    b1f8:	cmp	r3, r2
    b1fc:	ldr	r3, [sp, #176]	; 0xb0
    b200:	str	r2, [sp, #164]	; 0xa4
    b204:	str	sl, [r3, #4]!
    b208:	str	r3, [sp, #176]	; 0xb0
    b20c:	bgt	b010 <sas7bcat_begin_data+0x70>
    b210:	ldr	r5, [sp, #184]	; 0xb8
    b214:	ldr	r6, [sp, #172]	; 0xac
    b218:	mov	r0, #4
    b21c:	mov	r1, #0
    b220:	mov	r2, #164	; 0xa4
    b224:	strd	r0, [r5, #56]	; 0x38
    b228:	mov	r1, #0
    b22c:	mov	r0, r6
    b230:	bl	42a4 <memset@plt>
    b234:	ldr	r3, [r5, #4]
    b238:	mov	r2, #34	; 0x22
    b23c:	cmp	r3, #0
    b240:	moveq	r3, r2
    b244:	movne	r3, #51	; 0x33
    b248:	strb	r3, [sp, #244]	; 0xf4
    b24c:	strb	r2, [sp, #247]	; 0xf7
    b250:	bl	3eb4 <machine_is_little_endian@plt>
    b254:	ldr	r3, [pc, #884]	; b5d0 <sas7bcat_begin_data+0x630>
    b258:	mov	r1, #49	; 0x31
    b25c:	add	r3, pc, r3
    b260:	strb	r1, [sp, #251]	; 0xfb
    b264:	mov	r1, #20
    b268:	strb	r1, [sp, #282]	; 0x11a
    b26c:	add	lr, r3, #12
    b270:	ldr	r2, [pc, #860]	; b5d4 <sas7bcat_begin_data+0x634>
    b274:	mov	ip, r6
    b278:	adds	r4, r0, #0
    b27c:	ldm	r3, {r0, r1}
    b280:	add	r3, sp, #296	; 0x128
    b284:	movne	r4, #1
    b288:	stm	r3, {r0, r1}
    b28c:	ldm	lr, {r0, r1}
    b290:	add	r3, sp, #376	; 0x178
    b294:	strb	r4, [sp, #249]	; 0xf9
    b298:	stmdb	r3, {r0, r1}
    b29c:	ldr	r3, [sp, #196]	; 0xc4
    b2a0:	ldr	lr, [r3, r2]
    b2a4:	ldr	r0, [lr]
    b2a8:	ldr	r1, [lr, #4]
    b2ac:	ldr	r2, [lr, #8]
    b2b0:	ldr	r3, [lr, #12]
    b2b4:	stmia	ip!, {r0, r1, r2, r3}
    b2b8:	ldr	r0, [lr, #16]
    b2bc:	ldr	r1, [lr, #20]
    b2c0:	ldr	r2, [lr, #24]
    b2c4:	ldr	r3, [lr, #28]
    b2c8:	stmia	ip!, {r0, r1, r2, r3}
    b2cc:	mov	r2, #156	; 0x9c
    b2d0:	add	r1, sp, #220	; 0xdc
    b2d4:	mov	r0, sp
    b2d8:	bl	3f20 <memcpy@plt>
    b2dc:	ldm	r6, {r2, r3}
    b2e0:	mov	r1, r5
    b2e4:	ldr	r0, [sp, #168]	; 0xa8
    b2e8:	bl	40b8 <sas_write_header@plt>
    b2ec:	subs	r4, r0, #0
    b2f0:	beq	b388 <sas7bcat_begin_data+0x3e8>
    b2f4:	ldr	r3, [sp, #168]	; 0xa8
    b2f8:	ldr	r3, [r3, #40]	; 0x28
    b2fc:	cmp	r3, #0
    b300:	ble	b32c <sas7bcat_begin_data+0x38c>
    b304:	ldr	r3, [sp, #188]	; 0xbc
    b308:	ldr	r7, [sp, #168]	; 0xa8
    b30c:	sub	r6, r3, #4
    b310:	mov	r5, #0
    b314:	ldr	r0, [r6, #4]!
    b318:	bl	3ec0 <free@plt>
    b31c:	ldr	r3, [r7, #40]	; 0x28
    b320:	add	r5, r5, #1
    b324:	cmp	r3, r5
    b328:	bgt	b314 <sas7bcat_begin_data+0x374>
    b32c:	ldr	r0, [sp, #188]	; 0xbc
    b330:	bl	3ec0 <free@plt>
    b334:	ldr	r0, [sp, #184]	; 0xb8
    b338:	bl	3ec0 <free@plt>
    b33c:	ldr	r0, [sp, #192]	; 0xc0
    b340:	bl	3ec0 <free@plt>
    b344:	mov	r0, r4
    b348:	add	sp, sp, #380	; 0x17c
    b34c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b350:	ldrd	r0, [sp, #200]	; 0xc8
    b354:	bl	3d7c <byteswap8@plt>
    b358:	strd	r0, [sp, #200]	; 0xc8
    b35c:	b	b1d0 <sas7bcat_begin_data+0x230>
    b360:	add	r3, r0, #12
    b364:	mov	r2, r6
    b368:	mov	r0, r3
    b36c:	ldr	r1, [sp, #172]	; 0xac
    b370:	str	r8, [sl, #12]
    b374:	str	r8, [sl, #16]
    b378:	bl	3f20 <memcpy@plt>
    b37c:	mov	r4, #110	; 0x6e
    b380:	mov	r7, #106	; 0x6a
    b384:	b	b0f4 <sas7bcat_begin_data+0x154>
    b388:	ldr	r3, [sp, #184]	; 0xb8
    b38c:	ldr	r0, [sp, #168]	; 0xa8
    b390:	ldr	r1, [r3, #32]
    b394:	bl	401c <readstat_write_zeros@plt>
    b398:	subs	r4, r0, #0
    b39c:	bne	b2f4 <sas7bcat_begin_data+0x354>
    b3a0:	ldr	r3, [sp, #184]	; 0xb8
    b3a4:	ldr	r5, [sp, #192]	; 0xc0
    b3a8:	mov	r1, r4
    b3ac:	ldr	r2, [r3, #32]
    b3b0:	mov	r0, r5
    b3b4:	bl	42a4 <memset@plt>
    b3b8:	ldr	r3, [sp, #168]	; 0xa8
    b3bc:	add	r1, r5, #856	; 0x358
    b3c0:	ldr	r6, [r3, #40]	; 0x28
    b3c4:	ldr	r3, [sp, #184]	; 0xb8
    b3c8:	cmp	r6, #0
    b3cc:	ldr	r2, [r3, #32]
    b3d0:	ble	b46c <sas7bcat_begin_data+0x4cc>
    b3d4:	ldr	r0, [sp, #192]	; 0xc0
    b3d8:	add	r3, r0, #1056	; 0x420
    b3dc:	add	r3, r3, #12
    b3e0:	add	r0, r0, r2
    b3e4:	cmp	r3, r0
    b3e8:	bhi	b46c <sas7bcat_begin_data+0x4cc>
    b3ec:	ldr	r3, [sp, #188]	; 0xbc
    b3f0:	ldr	r5, [sp, #192]	; 0xc0
    b3f4:	mov	r2, r4
    b3f8:	sub	lr, r3, #4
    b3fc:	ldr	r8, [pc, #468]	; b5d8 <sas7bcat_begin_data+0x638>
    b400:	add	ip, r5, #1280	; 0x500
    b404:	mov	r3, #16
    b408:	mov	r7, #4
    b40c:	mov	r9, #79	; 0x4f
    b410:	ldr	r4, [sp, #184]	; 0xb8
    b414:	b	b430 <sas7bcat_begin_data+0x490>
    b418:	ldr	r0, [r4, #32]
    b41c:	add	ip, ip, #212	; 0xd4
    b420:	add	fp, r5, r0
    b424:	cmp	sl, fp
    b428:	add	r1, r1, #212	; 0xd4
    b42c:	bhi	b5c0 <sas7bcat_begin_data+0x620>
    b430:	ldr	r0, [lr, #4]!
    b434:	uxth	r3, r3
    b438:	strh	r3, [r1, #8]
    b43c:	str	r8, [r1]
    b440:	strh	r7, [r1, #4]
    b444:	strb	r9, [r1, #50]	; 0x32
    b448:	ldr	r0, [r0]
    b44c:	add	r2, r2, #1
    b450:	add	r3, r3, r0
    b454:	cmp	r6, r2
    b458:	mov	sl, ip
    b45c:	sxth	r3, r3
    b460:	bgt	b418 <sas7bcat_begin_data+0x478>
    b464:	ldr	r3, [sp, #184]	; 0xb8
    b468:	ldr	r2, [r3, #32]
    b46c:	ldr	r1, [sp, #192]	; 0xc0
    b470:	ldr	r0, [sp, #168]	; 0xa8
    b474:	bl	4454 <readstat_write_bytes@plt>
    b478:	subs	r4, r0, #0
    b47c:	bne	b2f4 <sas7bcat_begin_data+0x354>
    b480:	ldr	r3, [sp, #184]	; 0xb8
    b484:	ldr	r0, [sp, #168]	; 0xa8
    b488:	ldr	r1, [r3, #32]
    b48c:	bl	401c <readstat_write_zeros@plt>
    b490:	subs	r4, r0, #0
    b494:	bne	b2f4 <sas7bcat_begin_data+0x354>
    b498:	ldr	r3, [sp, #184]	; 0xb8
    b49c:	mov	r1, r4
    b4a0:	ldr	r0, [sp, #192]	; 0xc0
    b4a4:	ldr	r2, [r3, #32]
    b4a8:	bl	42a4 <memset@plt>
    b4ac:	ldr	r3, [sp, #168]	; 0xa8
    b4b0:	ldr	r3, [r3, #40]	; 0x28
    b4b4:	cmp	r3, #0
    b4b8:	ble	b598 <sas7bcat_begin_data+0x5f8>
    b4bc:	ldr	r3, [sp, #188]	; 0xbc
    b4c0:	mov	r1, #0
    b4c4:	ldr	r5, [r3]
    b4c8:	ldr	r3, [sp, #184]	; 0xb8
    b4cc:	ldr	ip, [r5]
    b4d0:	ldrd	r2, [r3, #32]
    b4d4:	add	r0, ip, #32
    b4d8:	cmp	r2, r0
    b4dc:	sbcs	r1, r3, r1
    b4e0:	blt	b5a0 <sas7bcat_begin_data+0x600>
    b4e4:	mov	r7, #16
    b4e8:	mov	r6, r4
    b4ec:	mov	lr, r7
    b4f0:	ldr	r9, [sp, #188]	; 0xbc
    b4f4:	ldr	sl, [sp, #192]	; 0xc0
    b4f8:	mov	fp, ip
    b4fc:	ldr	r8, [sp, #172]	; 0xac
    b500:	b	b530 <sas7bcat_begin_data+0x590>
    b504:	ldr	r5, [r9, #4]!
    b508:	ldr	r3, [sp, #184]	; 0xb8
    b50c:	mov	r1, #0
    b510:	ldr	fp, [r5]
    b514:	ldrd	r2, [r3, #32]
    b518:	add	r0, fp, #16
    b51c:	add	r0, r0, r7
    b520:	cmp	r2, r0
    b524:	sbcs	r1, r3, r1
    b528:	mov	lr, r7
    b52c:	blt	b5a0 <sas7bcat_begin_data+0x600>
    b530:	mov	ip, r8
    b534:	str	r6, [r8]
    b538:	str	r6, [r8, #4]
    b53c:	str	r6, [r8, #8]
    b540:	str	r6, [r8, #12]
    b544:	add	r7, r7, #16
    b548:	strh	fp, [sp, #218]	; 0xda
    b54c:	ldm	ip!, {r0, r1, r2, r3}
    b550:	uxth	r7, r7
    b554:	add	ip, sl, lr
    b558:	add	r4, r4, #1
    b55c:	str	r0, [sl, lr]
    b560:	str	r1, [ip, #4]
    b564:	str	r3, [ip, #12]
    b568:	str	r2, [ip, #8]
    b56c:	sxtah	r0, sl, r7
    b570:	ldr	r2, [r5]
    b574:	add	r1, r5, #4
    b578:	bl	3f20 <memcpy@plt>
    b57c:	ldr	r3, [sp, #168]	; 0xa8
    b580:	ldr	r2, [r5]
    b584:	ldr	r3, [r3, #40]	; 0x28
    b588:	add	r7, r7, r2
    b58c:	cmp	r3, r4
    b590:	sxth	r7, r7
    b594:	bgt	b504 <sas7bcat_begin_data+0x564>
    b598:	ldr	r3, [sp, #184]	; 0xb8
    b59c:	ldrd	r2, [r3, #32]
    b5a0:	ldr	r1, [sp, #192]	; 0xc0
    b5a4:	ldr	r0, [sp, #168]	; 0xa8
    b5a8:	bl	4454 <readstat_write_bytes@plt>
    b5ac:	mov	r4, r0
    b5b0:	b	b2f4 <sas7bcat_begin_data+0x354>
    b5b4:	add	r3, sp, #212	; 0xd4
    b5b8:	str	r3, [sp, #172]	; 0xac
    b5bc:	b	b210 <sas7bcat_begin_data+0x270>
    b5c0:	mov	r2, r0
    b5c4:	b	b46c <sas7bcat_begin_data+0x4cc>
    b5c8:	.word	0x00039038
    b5cc:	.word	0x20202020
    b5d0:	.word	0x00019294
    b5d4:	.word	0x000002c4
    b5d8:	.word	0x52534c58

0000b5dc <readstat_begin_writing_sas7bcat>:
    b5dc:	ldr	r3, [r0, #8]
    b5e0:	mov	r2, #0
    b5e4:	cmp	r3, #0
    b5e8:	moveq	r3, #9
    b5ec:	streq	r3, [r0, #8]
    b5f0:	ldr	r3, [pc, #8]	; b600 <readstat_begin_writing_sas7bcat+0x24>
    b5f4:	add	r3, pc, r3
    b5f8:	str	r3, [r0, #276]	; 0x114
    b5fc:	b	3f68 <readstat_begin_writing_file@plt>
    b600:	.word	0xfffff9a4

0000b604 <sas7bdat_validate_subheader_pointer>:
    b604:	push	{r4, r5, r6, r7, r8, r9, sl, fp}
    b608:	mov	r5, #0
    b60c:	ldrd	r6, [r0]
    b610:	sub	sp, sp, #8
    b614:	cmp	r7, r5
    b618:	cmpeq	r6, r1
    b61c:	strd	r6, [sp]
    b620:	bls	b634 <sas7bdat_validate_subheader_pointer+0x30>
    b624:	mov	r0, #5
    b628:	add	sp, sp, #8
    b62c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp}
    b630:	bx	lr
    b634:	ldrd	sl, [r0, #8]
    b638:	cmp	r5, fp
    b63c:	cmpeq	r1, sl
    b640:	bcc	b624 <sas7bdat_validate_subheader_pointer+0x20>
    b644:	adds	r8, r6, sl
    b648:	adc	r9, r7, fp
    b64c:	cmp	r5, r9
    b650:	cmpeq	r1, r8
    b654:	bcc	b624 <sas7bdat_validate_subheader_pointer+0x20>
    b658:	ldr	r8, [r3, #144]	; 0x90
    b65c:	uxth	r6, r2
    b660:	ldr	ip, [r3, #148]	; 0x94
    b664:	umull	r8, r9, r8, r6
    b668:	mla	r9, ip, r6, r9
    b66c:	ldrd	r6, [r3, #128]	; 0x80
    b670:	adds	r6, r6, r8
    b674:	adc	r7, r7, r9
    b678:	mov	r8, r6
    b67c:	mov	r9, r7
    b680:	ldrd	r6, [sp]
    b684:	cmp	r7, r9
    b688:	cmpeq	r6, r8
    b68c:	bcc	b624 <sas7bdat_validate_subheader_pointer+0x20>
    b690:	ldrb	r2, [r0, #16]
    b694:	cmp	r2, #0
    b698:	movne	r0, #0
    b69c:	bne	b628 <sas7bdat_validate_subheader_pointer+0x24>
    b6a0:	ldrd	r2, [r3, #136]	; 0x88
    b6a4:	cmp	fp, r3
    b6a8:	cmpeq	sl, r2
    b6ac:	bcc	b624 <sas7bdat_validate_subheader_pointer+0x20>
    b6b0:	adds	r6, r6, r2
    b6b4:	adc	r7, r7, r3
    b6b8:	cmp	r5, r7
    b6bc:	cmpeq	r1, r6
    b6c0:	movcs	r0, #0
    b6c4:	movcc	r0, #5
    b6c8:	b	b628 <sas7bdat_validate_subheader_pointer+0x24>

0000b6cc <sas7bdat_parse_text_ref.isra.1>:
    b6cc:	push	{r4, r5, r6, r7, r8, lr}
    b6d0:	mov	r5, r1
    b6d4:	mov	r4, r0
    b6d8:	ldr	r1, [r2]
    b6dc:	mov	r0, r5
    b6e0:	mov	r6, r2
    b6e4:	bl	43d0 <sas_read2@plt>
    b6e8:	ldr	r1, [r6]
    b6ec:	mov	r8, r0
    b6f0:	add	r0, r5, #2
    b6f4:	bl	43d0 <sas_read2@plt>
    b6f8:	ldr	r1, [r6]
    b6fc:	mov	r7, r0
    b700:	add	r0, r5, #4
    b704:	bl	43d0 <sas_read2@plt>
    b708:	strh	r8, [r4]
    b70c:	strh	r7, [r4, #2]
    b710:	strh	r0, [r4, #4]
    b714:	mov	r0, r4
    b718:	pop	{r4, r5, r6, r7, r8, pc}

0000b71c <sas7bdat_parse_subheader_pointer.isra.2>:
    b71c:	push	{r4, r5, r6, lr}
    b720:	subs	r4, r3, #0
    b724:	mov	r5, r2
    b728:	mov	r6, r0
    b72c:	beq	b744 <sas7bdat_parse_subheader_pointer.isra.2+0x28>
    b730:	cmp	r1, #17
    b734:	bhi	b78c <sas7bdat_parse_subheader_pointer.isra.2+0x70>
    b738:	mov	r4, #5
    b73c:	mov	r0, r4
    b740:	pop	{r4, r5, r6, pc}
    b744:	cmp	r1, #9
    b748:	bls	b738 <sas7bdat_parse_subheader_pointer.isra.2+0x1c>
    b74c:	ldr	r3, [sp, #16]
    b750:	ldr	r1, [r3]
    b754:	bl	43f4 <sas_read4@plt>
    b758:	ldr	r3, [sp, #16]
    b75c:	str	r4, [r5, #4]
    b760:	ldr	r1, [r3]
    b764:	str	r0, [r5]
    b768:	add	r0, r6, #4
    b76c:	bl	43f4 <sas_read4@plt>
    b770:	str	r4, [r5, #12]
    b774:	str	r0, [r5, #8]
    b778:	ldrb	r2, [r6, #8]
    b77c:	strb	r2, [r5, #16]
    b780:	ldrb	r2, [r6, #9]
    b784:	strb	r2, [r5, #17]
    b788:	b	b73c <sas7bdat_parse_subheader_pointer.isra.2+0x20>
    b78c:	ldr	r3, [sp, #16]
    b790:	mov	r4, #0
    b794:	ldr	r1, [r3]
    b798:	bl	43c4 <sas_read8@plt>
    b79c:	ldr	r3, [sp, #16]
    b7a0:	strd	r0, [r5]
    b7a4:	ldr	r1, [r3]
    b7a8:	add	r0, r6, #8
    b7ac:	bl	43c4 <sas_read8@plt>
    b7b0:	strd	r0, [r5, #8]
    b7b4:	ldrb	r2, [r6, #16]
    b7b8:	strb	r2, [r5, #16]
    b7bc:	ldrb	r2, [r6, #17]
    b7c0:	strb	r2, [r5, #17]
    b7c4:	b	b73c <sas7bdat_parse_subheader_pointer.isra.2+0x20>

0000b7c8 <sas7bdat_realloc_col_info.isra.4>:
    b7c8:	push	{r4, r5, r6, lr}
    b7cc:	ldr	r5, [r0]
    b7d0:	cmp	r5, r2
    b7d4:	bcc	b7e0 <sas7bdat_realloc_col_info.isra.4+0x18>
    b7d8:	mov	r0, #0
    b7dc:	pop	{r4, r5, r6, pc}
    b7e0:	mov	r6, r1
    b7e4:	add	r1, r2, r2, lsl #2
    b7e8:	str	r2, [r0]
    b7ec:	lsl	r1, r1, #3
    b7f0:	ldr	r0, [r6]
    b7f4:	mov	r4, r2
    b7f8:	bl	42e0 <readstat_realloc@plt>
    b7fc:	cmp	r0, #0
    b800:	str	r0, [r6]
    b804:	beq	b82c <sas7bdat_realloc_col_info.isra.4+0x64>
    b808:	sub	r2, r4, r5
    b80c:	add	r5, r5, r5, lsl #2
    b810:	add	r2, r2, r2, lsl #2
    b814:	add	r0, r0, r5, lsl #3
    b818:	lsl	r2, r2, #3
    b81c:	mov	r1, #0
    b820:	bl	42a4 <memset@plt>
    b824:	mov	r0, #0
    b828:	pop	{r4, r5, r6, pc}
    b82c:	mov	r0, #3
    b830:	pop	{r4, r5, r6, pc}

0000b834 <sas7bdat_parse_subheader>:
    b834:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b838:	mov	r7, #0
    b83c:	ldrd	r4, [r3, #136]	; 0x88
    b840:	sub	sp, sp, #12
    b844:	adds	r8, r4, #2
    b848:	adc	r9, r5, #0
    b84c:	cmp	r7, r9
    b850:	cmpeq	r2, r8
    b854:	bcs	b868 <sas7bdat_parse_subheader+0x34>
    b858:	mov	r6, #5
    b85c:	mov	r0, r6
    b860:	add	sp, sp, #12
    b864:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b868:	mov	r8, r3
    b86c:	ldr	r3, [pc, #1408]	; bdf4 <sas7bdat_parse_subheader+0x5c0>
    b870:	mov	r7, r1
    b874:	cmp	r0, r3
    b878:	mov	r6, r2
    b87c:	beq	b9bc <sas7bdat_parse_subheader+0x188>
    b880:	ldr	r3, [pc, #1392]	; bdf8 <sas7bdat_parse_subheader+0x5c4>
    b884:	cmp	r0, r3
    b888:	beq	ba64 <sas7bdat_parse_subheader+0x230>
    b88c:	cmn	r0, #1024	; 0x400
    b890:	beq	b8cc <sas7bdat_parse_subheader+0x98>
    b894:	cmn	r0, #3
    b898:	beq	b8dc <sas7bdat_parse_subheader+0xa8>
    b89c:	cmn	r0, #1
    b8a0:	beq	bab8 <sas7bdat_parse_subheader+0x284>
    b8a4:	cmn	r0, #4
    b8a8:	beq	bb7c <sas7bdat_parse_subheader+0x348>
    b8ac:	ldr	r3, [pc, #1352]	; bdfc <sas7bdat_parse_subheader+0x5c8>
    b8b0:	cmp	r0, r3
    b8b4:	beq	bd00 <sas7bdat_parse_subheader+0x4cc>
    b8b8:	cmn	r0, #2
    b8bc:	beq	b8cc <sas7bdat_parse_subheader+0x98>
    b8c0:	bic	r0, r0, #7
    b8c4:	cmn	r0, #8
    b8c8:	bne	b858 <sas7bdat_parse_subheader+0x24>
    b8cc:	mov	r6, #0
    b8d0:	mov	r0, r6
    b8d4:	add	sp, sp, #12
    b8d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b8dc:	add	r7, r1, r4
    b8e0:	mov	r0, r7
    b8e4:	ldr	r1, [r8, #60]	; 0x3c
    b8e8:	bl	43d0 <sas_read2@plt>
    b8ec:	mov	r1, r4
    b8f0:	mov	r9, r0
    b8f4:	mov	r0, r6
    b8f8:	bl	43b8 <sas_subheader_remainder@plt>
    b8fc:	cmp	r9, r0
    b900:	bne	b858 <sas7bdat_parse_subheader+0x24>
    b904:	ldr	r1, [r8, #152]	; 0x98
    b908:	ldr	r0, [r8, #160]	; 0xa0
    b90c:	add	r1, r1, #1
    b910:	str	r1, [r8, #152]	; 0x98
    b914:	lsl	r1, r1, #2
    b918:	bl	42e0 <readstat_realloc@plt>
    b91c:	ldr	r1, [r8, #152]	; 0x98
    b920:	lsl	r1, r1, #2
    b924:	str	r0, [r8, #160]	; 0xa0
    b928:	ldr	r0, [r8, #156]	; 0x9c
    b92c:	bl	42e0 <readstat_realloc@plt>
    b930:	ldr	r3, [r8, #160]	; 0xa0
    b934:	cmp	r0, #0
    b938:	cmpne	r3, #0
    b93c:	str	r0, [r8, #156]	; 0x9c
    b940:	beq	bdd4 <sas7bdat_parse_subheader+0x5a0>
    b944:	sub	r4, r6, r4
    b948:	mov	r0, r4
    b94c:	bl	422c <readstat_malloc@plt>
    b950:	subs	r5, r0, #0
    b954:	beq	bdd4 <sas7bdat_parse_subheader+0x5a0>
    b958:	mov	r1, r7
    b95c:	mov	r2, r4
    b960:	bl	3f20 <memcpy@plt>
    b964:	ldr	r3, [r8, #152]	; 0x98
    b968:	ldr	r1, [r8, #156]	; 0x9c
    b96c:	sub	r3, r3, #-1073741823	; 0xc0000001
    b970:	ldr	r2, [r8, #160]	; 0xa0
    b974:	str	r4, [r1, r3, lsl #2]
    b978:	ldr	r3, [r8, #152]	; 0x98
    b97c:	cmp	r4, #20
    b980:	sub	r3, r3, #-1073741823	; 0xc0000001
    b984:	str	r5, [r2, r3, lsl #2]
    b988:	bls	b8cc <sas7bdat_parse_subheader+0x98>
    b98c:	ldr	r1, [pc, #1132]	; be00 <sas7bdat_parse_subheader+0x5cc>
    b990:	add	r0, r5, #12
    b994:	mov	r2, #8
    b998:	add	r1, pc, r1
    b99c:	bl	44fc <strncmp@plt>
    b9a0:	cmp	r0, #0
    b9a4:	bne	b8cc <sas7bdat_parse_subheader+0x98>
    b9a8:	ldrb	r3, [r8, #2529]	; 0x9e1
    b9ac:	mov	r6, #0
    b9b0:	orr	r3, r3, #1
    b9b4:	strb	r3, [r8, #2529]	; 0x9e1
    b9b8:	b	b85c <sas7bdat_parse_subheader+0x28>
    b9bc:	ldr	r3, [r8, #44]	; 0x2c
    b9c0:	cmp	r3, #0
    b9c4:	beq	bcc0 <sas7bdat_parse_subheader+0x48c>
    b9c8:	cmp	r2, #127	; 0x7f
    b9cc:	bls	b858 <sas7bdat_parse_subheader+0x24>
    b9d0:	add	r0, r7, #40	; 0x28
    b9d4:	ldr	r1, [r8, #60]	; 0x3c
    b9d8:	bl	43c4 <sas_read8@plt>
    b9dc:	ldr	r1, [r8, #60]	; 0x3c
    b9e0:	mov	r6, r0
    b9e4:	add	r0, r7, #48	; 0x30
    b9e8:	bl	43c4 <sas_read8@plt>
    b9ec:	mov	r4, r0
    b9f0:	mov	r5, r1
    b9f4:	add	r0, r7, #120	; 0x78
    b9f8:	ldr	r1, [r8, #60]	; 0x3c
    b9fc:	bl	43c4 <sas_read8@plt>
    ba00:	mov	r7, r0
    ba04:	str	r6, [r8, #68]	; 0x44
    ba08:	mov	r1, r6
    ba0c:	ldr	r0, [r8, #124]	; 0x7c
    ba10:	bl	42e0 <readstat_realloc@plt>
    ba14:	cmp	r0, #0
    ba18:	str	r0, [r8, #124]	; 0x7c
    ba1c:	beq	bdd4 <sas7bdat_parse_subheader+0x5a0>
    ba20:	ldr	r2, [r8, #88]	; 0x58
    ba24:	mov	r3, #0
    ba28:	cmp	r3, r5
    ba2c:	cmpeq	r2, r4
    ba30:	str	r7, [r8, #72]	; 0x48
    ba34:	bcs	bdc8 <sas7bdat_parse_subheader+0x594>
    ba38:	ldr	r0, [r8, #84]	; 0x54
    ba3c:	subs	r2, r4, r2
    ba40:	sbc	r3, r5, r3
    ba44:	cmp	r0, #0
    ba48:	beq	ba5c <sas7bdat_parse_subheader+0x228>
    ba4c:	mov	r1, #0
    ba50:	cmp	r3, r1
    ba54:	cmpeq	r2, r0
    ba58:	bcs	b8cc <sas7bdat_parse_subheader+0x98>
    ba5c:	str	r2, [r8, #84]	; 0x54
    ba60:	b	b8cc <sas7bdat_parse_subheader+0x98>
    ba64:	ldr	r3, [r8, #80]	; 0x50
    ba68:	cmp	r3, #0
    ba6c:	bne	b858 <sas7bdat_parse_subheader+0x24>
    ba70:	ldr	r3, [r8, #64]	; 0x40
    ba74:	cmp	r3, #0
    ba78:	bne	b858 <sas7bdat_parse_subheader+0x24>
    ba7c:	ldr	r3, [r8, #44]	; 0x2c
    ba80:	cmp	r3, #0
    ba84:	beq	bddc <sas7bdat_parse_subheader+0x5a8>
    ba88:	cmp	r2, #15
    ba8c:	bls	b858 <sas7bdat_parse_subheader+0x24>
    ba90:	add	r0, r7, #8
    ba94:	ldr	r1, [r8, #60]	; 0x3c
    ba98:	bl	43c4 <sas_read8@plt>
    ba9c:	str	r0, [r8, #80]	; 0x50
    baa0:	mov	r2, r0
    baa4:	add	r1, r8, #192	; 0xc0
    baa8:	add	r0, r8, #188	; 0xbc
    baac:	add	sp, sp, #12
    bab0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    bab4:	b	b7c8 <sas7bdat_realloc_col_info.isra.4>
    bab8:	ldr	r3, [r8, #44]	; 0x2c
    babc:	ldr	r1, [r8, #60]	; 0x3c
    bac0:	cmp	r3, #0
    bac4:	add	r0, r7, r4
    bac8:	subne	r9, r2, #28
    bacc:	subeq	r9, r2, #20
    bad0:	bl	43d0 <sas_read2@plt>
    bad4:	mov	r1, r4
    bad8:	lsr	r9, r9, #3
    badc:	mov	sl, r0
    bae0:	mov	r0, r6
    bae4:	bl	43b8 <sas_subheader_remainder@plt>
    bae8:	cmp	sl, r0
    baec:	bne	b858 <sas7bdat_parse_subheader+0x24>
    baf0:	ldr	r2, [r8, #164]	; 0xa4
    baf4:	add	r1, r8, #192	; 0xc0
    baf8:	add	r2, r9, r2
    bafc:	str	r2, [r8, #164]	; 0xa4
    bb00:	add	r0, r8, #188	; 0xbc
    bb04:	bl	b7c8 <sas7bdat_realloc_col_info.isra.4>
    bb08:	subs	r6, r0, #0
    bb0c:	bne	b85c <sas7bdat_parse_subheader+0x28>
    bb10:	ldr	r3, [r8, #164]	; 0xa4
    bb14:	sub	r6, r3, r9
    bb18:	cmp	r3, r6
    bb1c:	ble	b8cc <sas7bdat_parse_subheader+0x98>
    bb20:	mov	r5, #40	; 0x28
    bb24:	add	r4, r4, #8
    bb28:	mul	r5, r5, r6
    bb2c:	add	r7, r7, r4
    bb30:	add	sl, r8, #60	; 0x3c
    bb34:	mov	r9, sp
    bb38:	ldr	r4, [r8, #192]	; 0xc0
    bb3c:	mov	r2, sl
    bb40:	mov	r1, r7
    bb44:	mov	r0, r9
    bb48:	bl	b6cc <sas7bdat_parse_text_ref.isra.1>
    bb4c:	ldr	r0, [r9]
    bb50:	ldr	r2, [r8, #164]	; 0xa4
    bb54:	str	r0, [r4, r5]
    bb58:	ldrh	r3, [r9, #4]
    bb5c:	add	r4, r4, r5
    bb60:	add	r6, r6, #1
    bb64:	cmp	r6, r2
    bb68:	add	r7, r7, #8
    bb6c:	strh	r3, [r4, #4]
    bb70:	add	r5, r5, #40	; 0x28
    bb74:	blt	bb38 <sas7bdat_parse_subheader+0x304>
    bb78:	b	b8cc <sas7bdat_parse_subheader+0x98>
    bb7c:	ldr	r3, [r8, #44]	; 0x2c
    bb80:	ldr	r1, [r8, #60]	; 0x3c
    bb84:	cmp	r3, #0
    bb88:	subeq	r9, r2, #20
    bb8c:	ldreq	r3, [pc, #624]	; be04 <sas7bdat_parse_subheader+0x5d0>
    bb90:	subne	r9, r2, #28
    bb94:	add	r0, r7, r4
    bb98:	umulleq	r3, r9, r3, r9
    bb9c:	lsrne	r9, r9, #4
    bba0:	lsreq	r9, r9, #3
    bba4:	bl	43d0 <sas_read2@plt>
    bba8:	mov	r1, r4
    bbac:	mov	sl, r0
    bbb0:	mov	r0, r6
    bbb4:	bl	43b8 <sas_subheader_remainder@plt>
    bbb8:	cmp	sl, r0
    bbbc:	bne	b858 <sas7bdat_parse_subheader+0x24>
    bbc0:	ldr	r2, [r8, #168]	; 0xa8
    bbc4:	add	r1, r8, #192	; 0xc0
    bbc8:	add	r2, r9, r2
    bbcc:	str	r2, [r8, #168]	; 0xa8
    bbd0:	add	r0, r8, #188	; 0xbc
    bbd4:	bl	b7c8 <sas7bdat_realloc_col_info.isra.4>
    bbd8:	subs	r6, r0, #0
    bbdc:	bne	b85c <sas7bdat_parse_subheader+0x28>
    bbe0:	ldr	r3, [r8, #168]	; 0xa8
    bbe4:	sub	r9, r3, r9
    bbe8:	cmp	r3, r9
    bbec:	ble	b8cc <sas7bdat_parse_subheader+0x98>
    bbf0:	mov	r5, #40	; 0x28
    bbf4:	add	r2, r4, #8
    bbf8:	mul	r5, r5, r9
    bbfc:	ldr	r1, [r8, #192]	; 0xc0
    bc00:	add	r4, r7, r2
    bc04:	b	bc98 <sas7bdat_parse_subheader+0x464>
    bc08:	bl	43c4 <sas_read8@plt>
    bc0c:	strd	r0, [fp, #24]
    bc10:	ldr	r2, [r8, #44]	; 0x2c
    bc14:	ldr	r3, [r8, #192]	; 0xc0
    bc18:	cmp	r2, #0
    bc1c:	movne	sl, #8
    bc20:	moveq	sl, #4
    bc24:	ldr	r1, [r8, #60]	; 0x3c
    bc28:	add	r0, r4, sl
    bc2c:	movne	fp, #14
    bc30:	moveq	fp, #10
    bc34:	add	r7, r3, r5
    bc38:	bl	43f4 <sas_read4@plt>
    bc3c:	ldr	r1, [r8, #192]	; 0xc0
    bc40:	ldr	lr, [r8, #176]	; 0xb0
    bc44:	add	ip, r1, r5
    bc48:	str	r0, [r7, #32]
    bc4c:	ldr	r2, [ip, #32]
    bc50:	cmp	r2, lr
    bc54:	strhi	r2, [r8, #176]	; 0xb0
    bc58:	ldrb	r2, [r4, fp]
    bc5c:	cmp	r2, #1
    bc60:	moveq	r3, #5
    bc64:	streq	r3, [ip, #36]	; 0x24
    bc68:	beq	bc78 <sas7bdat_parse_subheader+0x444>
    bc6c:	cmp	r2, #2
    bc70:	bne	b858 <sas7bdat_parse_subheader+0x24>
    bc74:	str	r6, [ip, #36]	; 0x24
    bc78:	ldr	r2, [r8, #168]	; 0xa8
    bc7c:	str	r9, [ip, #20]
    bc80:	add	r9, r9, #1
    bc84:	add	r3, sl, #8
    bc88:	cmp	r9, r2
    bc8c:	add	r4, r4, r3
    bc90:	add	r5, r5, #40	; 0x28
    bc94:	bge	b8cc <sas7bdat_parse_subheader+0x98>
    bc98:	ldr	sl, [r8, #44]	; 0x2c
    bc9c:	add	fp, r1, r5
    bca0:	cmp	sl, #0
    bca4:	mov	r0, r4
    bca8:	ldr	r1, [r8, #60]	; 0x3c
    bcac:	bne	bc08 <sas7bdat_parse_subheader+0x3d4>
    bcb0:	bl	43f4 <sas_read4@plt>
    bcb4:	str	sl, [fp, #28]
    bcb8:	str	r0, [fp, #24]
    bcbc:	b	bc10 <sas7bdat_parse_subheader+0x3dc>
    bcc0:	cmp	r2, #63	; 0x3f
    bcc4:	bls	b858 <sas7bdat_parse_subheader+0x24>
    bcc8:	ldr	r1, [r8, #60]	; 0x3c
    bccc:	add	r0, r7, #20
    bcd0:	bl	43f4 <sas_read4@plt>
    bcd4:	ldr	r1, [r8, #60]	; 0x3c
    bcd8:	mov	r5, #0
    bcdc:	mov	r6, r0
    bce0:	add	r0, r7, #24
    bce4:	bl	43f4 <sas_read4@plt>
    bce8:	ldr	r1, [r8, #60]	; 0x3c
    bcec:	mov	r4, r0
    bcf0:	add	r0, r7, #60	; 0x3c
    bcf4:	bl	43f4 <sas_read4@plt>
    bcf8:	mov	r7, r0
    bcfc:	b	ba04 <sas7bdat_parse_subheader+0x1d0>
    bd00:	ldr	r3, [r8, #44]	; 0x2c
    bd04:	cmp	r3, #0
    bd08:	moveq	r3, #46	; 0x2e
    bd0c:	movne	r3, #58	; 0x3a
    bd10:	cmp	r2, r3
    bd14:	bcc	b858 <sas7bdat_parse_subheader+0x24>
    bd18:	ldr	r2, [r8, #172]	; 0xac
    bd1c:	add	r1, r8, #192	; 0xc0
    bd20:	add	r2, r2, #1
    bd24:	str	r2, [r8, #172]	; 0xac
    bd28:	add	r0, r8, #188	; 0xbc
    bd2c:	bl	b7c8 <sas7bdat_realloc_col_info.isra.4>
    bd30:	subs	r6, r0, #0
    bd34:	bne	b85c <sas7bdat_parse_subheader+0x28>
    bd38:	ldr	r3, [r8, #172]	; 0xac
    bd3c:	ldr	r2, [r8, #44]	; 0x2c
    bd40:	ldr	r4, [r8, #192]	; 0xc0
    bd44:	add	r3, r3, r3, lsl #2
    bd48:	cmp	r2, #0
    bd4c:	add	r5, r8, #60	; 0x3c
    bd50:	lsl	r3, r3, #3
    bd54:	sub	r3, r3, #40	; 0x28
    bd58:	addne	r1, r7, #46	; 0x2e
    bd5c:	addeq	r1, r7, #34	; 0x22
    bd60:	mov	r2, r5
    bd64:	mov	r0, sp
    bd68:	add	r4, r4, r3
    bd6c:	bl	b6cc <sas7bdat_parse_text_ref.isra.1>
    bd70:	ldr	r3, [r8, #172]	; 0xac
    bd74:	ldr	r2, [sp]
    bd78:	ldr	r1, [r8, #44]	; 0x2c
    bd7c:	add	r3, r3, r3, lsl #2
    bd80:	str	r2, [r4, #6]
    bd84:	ldrh	r2, [sp, #4]
    bd88:	ldr	r8, [r8, #192]	; 0xc0
    bd8c:	cmp	r1, #0
    bd90:	lsl	r3, r3, #3
    bd94:	sub	r3, r3, #40	; 0x28
    bd98:	strh	r2, [r4, #10]
    bd9c:	mov	r0, sp
    bda0:	addne	r1, r7, #52	; 0x34
    bda4:	addeq	r1, r7, #40	; 0x28
    bda8:	mov	r2, r5
    bdac:	add	r8, r8, r3
    bdb0:	bl	b6cc <sas7bdat_parse_text_ref.isra.1>
    bdb4:	ldr	r0, [sp]
    bdb8:	str	r0, [r8, #12]
    bdbc:	ldrh	r3, [sp, #4]
    bdc0:	strh	r3, [r8, #16]
    bdc4:	b	b85c <sas7bdat_parse_subheader+0x28>
    bdc8:	str	r4, [r8, #88]	; 0x58
    bdcc:	mov	r2, #0
    bdd0:	b	ba5c <sas7bdat_parse_subheader+0x228>
    bdd4:	mov	r6, #3
    bdd8:	b	b85c <sas7bdat_parse_subheader+0x28>
    bddc:	cmp	r2, #7
    bde0:	bls	b858 <sas7bdat_parse_subheader+0x24>
    bde4:	add	r0, r7, #4
    bde8:	ldr	r1, [r8, #60]	; 0x3c
    bdec:	bl	43f4 <sas_read4@plt>
    bdf0:	b	ba9c <sas7bdat_parse_subheader+0x268>
    bdf4:	.word	0xf7f7f7f7
    bdf8:	.word	0xf6f6f6f6
    bdfc:	.word	0xfffffbfe
    be00:	.word	0x00018b70
    be04:	.word	0xaaaaaaab

0000be08 <sas7bdat_parse_page_pass1>:
    be08:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    be0c:	sub	sp, sp, #60	; 0x3c
    be10:	mov	r3, r0
    be14:	str	r0, [sp, #28]
    be18:	ldr	r0, [r2, #128]	; 0x80
    be1c:	mov	r4, r1
    be20:	sub	r0, r0, #4
    be24:	str	r1, [sp, #24]
    be28:	add	r0, r3, r0
    be2c:	ldr	r1, [r2, #60]	; 0x3c
    be30:	mov	r7, r2
    be34:	bl	43d0 <sas_read2@plt>
    be38:	ldr	fp, [r7, #144]	; 0x90
    be3c:	ldrd	r2, [r7, #128]	; 0x80
    be40:	mov	r1, #0
    be44:	mov	r9, r0
    be48:	mov	r0, r4
    be4c:	mul	ip, fp, r9
    be50:	adds	r4, r2, ip
    be54:	adc	r5, r3, ip, asr #31
    be58:	cmp	r5, r1
    be5c:	cmpeq	r4, r0
    be60:	movhi	r0, #5
    be64:	bls	be70 <sas7bdat_parse_page_pass1+0x68>
    be68:	add	sp, sp, #60	; 0x3c
    be6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    be70:	cmp	r9, #0
    be74:	beq	bf9c <sas7bdat_parse_page_pass1+0x194>
    be78:	ldr	r1, [sp, #28]
    be7c:	ldr	r3, [sp, #24]
    be80:	mov	r8, #0
    be84:	add	r3, r1, r3
    be88:	str	r3, [sp, #16]
    be8c:	add	r3, r7, #60	; 0x3c
    be90:	add	r6, r1, r2
    be94:	mov	r5, r8
    be98:	str	r3, [sp, #12]
    be9c:	add	r4, sp, #32
    bea0:	str	fp, [sp, #20]
    bea4:	b	bec4 <sas7bdat_parse_page_pass1+0xbc>
    bea8:	cmp	sl, #4
    beac:	bne	bfc4 <sas7bdat_parse_page_pass1+0x1bc>
    beb0:	add	r8, r8, #1
    beb4:	ldr	r3, [sp, #20]
    beb8:	cmp	r9, r8
    bebc:	add	r6, r6, r3
    bec0:	ble	bf9c <sas7bdat_parse_page_pass1+0x194>
    bec4:	ldr	r2, [sp, #12]
    bec8:	ldr	r1, [sp, #16]
    becc:	ldr	r3, [r7, #44]	; 0x2c
    bed0:	sub	r1, r1, r6
    bed4:	str	r2, [sp]
    bed8:	mov	r0, r6
    bedc:	mov	r2, r4
    bee0:	str	r5, [r4]
    bee4:	str	r5, [r4, #4]
    bee8:	str	r5, [r4, #8]
    beec:	str	r5, [r4, #12]
    bef0:	str	r5, [r4, #16]
    bef4:	str	r5, [r4, #20]
    bef8:	ldr	fp, [r7, #136]	; 0x88
    befc:	bl	b71c <sas7bdat_parse_subheader_pointer.isra.2>
    bf00:	cmp	r0, #0
    bf04:	bne	be68 <sas7bdat_parse_page_pass1+0x60>
    bf08:	ldrd	r2, [sp, #40]	; 0x28
    bf0c:	orrs	r3, r2, r3
    bf10:	beq	beb0 <sas7bdat_parse_page_pass1+0xa8>
    bf14:	ldrb	sl, [sp, #48]	; 0x30
    bf18:	cmp	sl, #1
    bf1c:	beq	beb0 <sas7bdat_parse_page_pass1+0xa8>
    bf20:	mov	r3, r7
    bf24:	mov	r2, r9
    bf28:	ldr	r1, [sp, #24]
    bf2c:	mov	r0, r4
    bf30:	bl	b604 <sas7bdat_validate_subheader_pointer>
    bf34:	cmp	r0, #0
    bf38:	bne	be68 <sas7bdat_parse_page_pass1+0x60>
    bf3c:	cmp	sl, #0
    bf40:	bne	bea8 <sas7bdat_parse_page_pass1+0xa0>
    bf44:	ldr	r3, [sp, #28]
    bf48:	ldr	r0, [sp, #32]
    bf4c:	ldr	r1, [r7, #60]	; 0x3c
    bf50:	add	r0, r3, r0
    bf54:	bl	43f4 <sas_read4@plt>
    bf58:	ldr	r3, [r7, #40]	; 0x28
    bf5c:	cmp	r3, #0
    bf60:	bne	bf70 <sas7bdat_parse_page_pass1+0x168>
    bf64:	cmp	fp, #8
    bf68:	cmneq	r0, #1
    bf6c:	beq	bfa8 <sas7bdat_parse_page_pass1+0x1a0>
    bf70:	cmn	r0, #3
    bf74:	bne	beb0 <sas7bdat_parse_page_pass1+0xa8>
    bf78:	ldr	r2, [sp, #28]
    bf7c:	ldr	r1, [sp, #32]
    bf80:	mov	r3, r7
    bf84:	add	r1, r2, r1
    bf88:	ldr	r2, [sp, #40]	; 0x28
    bf8c:	bl	b834 <sas7bdat_parse_subheader>
    bf90:	cmp	r0, #0
    bf94:	beq	beb0 <sas7bdat_parse_page_pass1+0xa8>
    bf98:	b	be68 <sas7bdat_parse_page_pass1+0x60>
    bf9c:	mov	r0, #0
    bfa0:	add	sp, sp, #60	; 0x3c
    bfa4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    bfa8:	ldr	r0, [sp, #32]
    bfac:	ldr	r3, [sp, #28]
    bfb0:	add	r0, r0, #4
    bfb4:	ldr	r1, [r7, #60]	; 0x3c
    bfb8:	add	r0, r3, r0
    bfbc:	bl	43f4 <sas_read4@plt>
    bfc0:	b	bf70 <sas7bdat_parse_page_pass1+0x168>
    bfc4:	mov	r0, #6
    bfc8:	b	be68 <sas7bdat_parse_page_pass1+0x60>

0000bfcc <readstat_parse_sas7bdat>:
    bfcc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    bfd0:	mov	r5, r0
    bfd4:	sub	sp, sp, #140	; 0x8c
    bfd8:	mov	r6, r1
    bfdc:	mov	r0, #1
    bfe0:	ldr	r1, [pc, #3824]	; ced8 <readstat_parse_sas7bdat+0xf0c>
    bfe4:	ldr	fp, [r5, #32]
    bfe8:	mov	r9, r2
    bfec:	str	r2, [sp, #72]	; 0x48
    bff0:	bl	3d58 <calloc@plt>
    bff4:	mov	r1, #152	; 0x98
    bff8:	mov	r4, r0
    bffc:	mov	r0, #1
    c000:	bl	3d58 <calloc@plt>
    c004:	mov	lr, r5
    c008:	mov	ip, r4
    c00c:	ldr	r7, [r5, #48]	; 0x30
    c010:	ldr	r8, [r5, #36]	; 0x24
    c014:	cmp	r7, #0
    c018:	mov	sl, r0
    c01c:	ldm	lr!, {r0, r1, r2, r3}
    c020:	stmia	ip!, {r0, r1, r2, r3}
    c024:	ldm	lr, {r0, r1, r2, r3}
    c028:	ldr	lr, [r5, #40]	; 0x28
    c02c:	ldr	r5, [r5, #44]	; 0x2c
    c030:	stm	ip, {r0, r1, r2, r3}
    c034:	mov	r0, r6
    c038:	strgt	r7, [r4, #88]	; 0x58
    c03c:	str	fp, [r4, #56]	; 0x38
    c040:	str	r9, [r4, #52]	; 0x34
    c044:	str	r8, [r4, #200]	; 0xc8
    c048:	str	lr, [r4, #204]	; 0xcc
    c04c:	str	r5, [r4, #84]	; 0x54
    c050:	ldr	r3, [fp]
    c054:	ldr	r1, [fp, #20]
    c058:	blx	r3
    c05c:	cmn	r0, #1
    c060:	beq	c170 <readstat_parse_sas7bdat+0x1a4>
    c064:	ldr	r3, [fp, #8]
    c068:	ldr	r2, [fp, #20]
    c06c:	mov	r1, #2
    c070:	mov	r0, #0
    c074:	blx	r3
    c078:	mvn	r3, #0
    c07c:	mvn	r2, #0
    c080:	asr	r1, r0, #31
    c084:	cmp	r1, r3
    c088:	cmpeq	r0, r2
    c08c:	strd	r0, [r4, #32]
    c090:	beq	c0f8 <readstat_parse_sas7bdat+0x12c>
    c094:	mov	r1, #0
    c098:	mov	r0, r1
    c09c:	ldr	r3, [fp, #8]
    c0a0:	ldr	r2, [fp, #20]
    c0a4:	blx	r3
    c0a8:	cmn	r0, #1
    c0ac:	beq	c2e8 <readstat_parse_sas7bdat+0x31c>
    c0b0:	ldr	r3, [sp, #72]	; 0x48
    c0b4:	ldr	r2, [r4, #24]
    c0b8:	mov	r1, sl
    c0bc:	mov	r0, fp
    c0c0:	bl	43a0 <sas_read_header@plt>
    c0c4:	subs	r5, r0, #0
    c0c8:	beq	c4c8 <readstat_parse_sas7bdat+0x4fc>
    c0cc:	sub	r6, r5, #1
    c0d0:	cmp	r5, #15
    c0d4:	cmpne	r6, #1
    c0d8:	movls	r6, #1
    c0dc:	movhi	r6, #0
    c0e0:	ldr	r3, [fp, #4]
    c0e4:	ldr	r0, [fp, #20]
    c0e8:	blx	r3
    c0ec:	cmp	r6, #0
    c0f0:	beq	c1e8 <readstat_parse_sas7bdat+0x21c>
    c0f4:	b	c180 <readstat_parse_sas7bdat+0x1b4>
    c0f8:	ldr	r6, [r4, #24]
    c0fc:	cmp	r6, #0
    c100:	beq	c4c0 <readstat_parse_sas7bdat+0x4f4>
    c104:	ldr	r5, [pc, #3536]	; cedc <readstat_parse_sas7bdat+0xf10>
    c108:	add	r7, r4, #480	; 0x1e0
    c10c:	add	r5, pc, r5
    c110:	add	r7, r7, #1
    c114:	ldr	r9, [sp, #72]	; 0x48
    c118:	mov	lr, r7
    c11c:	add	r8, r5, #32
    c120:	mov	ip, r5
    c124:	add	lr, lr, #16
    c128:	ldm	ip!, {r0, r1, r2, r3}
    c12c:	add	r5, r5, #16
    c130:	cmp	ip, r8
    c134:	str	r0, [lr, #-16]
    c138:	str	r1, [lr, #-12]
    c13c:	str	r2, [lr, #-8]
    c140:	str	r3, [lr, #-4]
    c144:	bne	c120 <readstat_parse_sas7bdat+0x154>
    c148:	mov	r3, r5
    c14c:	str	r9, [sp, #72]	; 0x48
    c150:	ldm	r3!, {r0, r1}
    c154:	mov	r5, #15
    c158:	str	r0, [lr]
    c15c:	str	r1, [lr, #4]
    c160:	mov	r0, r7
    c164:	ldr	r1, [r4, #52]	; 0x34
    c168:	blx	r6
    c16c:	b	c174 <readstat_parse_sas7bdat+0x1a8>
    c170:	mov	r5, #1
    c174:	ldr	r3, [fp, #4]
    c178:	ldr	r0, [fp, #20]
    c17c:	blx	r3
    c180:	ldr	r3, [r4, #24]
    c184:	cmp	r3, #0
    c188:	beq	c1e8 <readstat_parse_sas7bdat+0x21c>
    c18c:	mov	r0, r5
    c190:	bl	3e48 <readstat_error_message@plt>
    c194:	add	r6, r4, #480	; 0x1e0
    c198:	add	r6, r6, #1
    c19c:	mov	r8, r0
    c1a0:	bl	4268 <__errno_location@plt>
    c1a4:	mov	r7, r0
    c1a8:	ldr	r0, [r0]
    c1ac:	bl	413c <strerror@plt>
    c1b0:	ldr	r2, [r7]
    c1b4:	mov	r3, r8
    c1b8:	str	r2, [sp, #8]
    c1bc:	ldr	r2, [pc, #3356]	; cee0 <readstat_parse_sas7bdat+0xf14>
    c1c0:	mov	r1, #2048	; 0x800
    c1c4:	str	r5, [sp]
    c1c8:	add	r2, pc, r2
    c1cc:	str	r0, [sp, #4]
    c1d0:	mov	r0, r6
    c1d4:	bl	4280 <snprintf@plt>
    c1d8:	mov	r0, r6
    c1dc:	ldr	r1, [sp, #72]	; 0x48
    c1e0:	ldr	r3, [r4, #24]
    c1e4:	blx	r3
    c1e8:	ldr	r0, [r4, #160]	; 0xa0
    c1ec:	cmp	r0, #0
    c1f0:	beq	c22c <readstat_parse_sas7bdat+0x260>
    c1f4:	ldr	r3, [r4, #152]	; 0x98
    c1f8:	cmp	r3, #0
    c1fc:	ble	c220 <readstat_parse_sas7bdat+0x254>
    c200:	mov	r6, #0
    c204:	ldr	r0, [r0, r6, lsl #2]
    c208:	bl	3ec0 <free@plt>
    c20c:	ldr	r3, [r4, #152]	; 0x98
    c210:	add	r6, r6, #1
    c214:	cmp	r6, r3
    c218:	ldr	r0, [r4, #160]	; 0xa0
    c21c:	blt	c204 <readstat_parse_sas7bdat+0x238>
    c220:	bl	3ec0 <free@plt>
    c224:	ldr	r0, [r4, #156]	; 0x9c
    c228:	bl	3ec0 <free@plt>
    c22c:	ldr	r2, [r4, #196]	; 0xc4
    c230:	cmp	r2, #0
    c234:	beq	c274 <readstat_parse_sas7bdat+0x2a8>
    c238:	ldr	r1, [r4, #80]	; 0x50
    c23c:	cmp	r1, #0
    c240:	beq	c26c <readstat_parse_sas7bdat+0x2a0>
    c244:	mov	r6, #0
    c248:	ldr	r3, [r2, r6, lsl #2]
    c24c:	add	r6, r6, #1
    c250:	subs	r0, r3, #0
    c254:	beq	c264 <readstat_parse_sas7bdat+0x298>
    c258:	bl	3ec0 <free@plt>
    c25c:	ldr	r2, [r4, #196]	; 0xc4
    c260:	ldr	r1, [r4, #80]	; 0x50
    c264:	cmp	r6, r1
    c268:	bcc	c248 <readstat_parse_sas7bdat+0x27c>
    c26c:	mov	r0, r2
    c270:	bl	3ec0 <free@plt>
    c274:	ldr	r0, [r4, #192]	; 0xc0
    c278:	cmp	r0, #0
    c27c:	beq	c284 <readstat_parse_sas7bdat+0x2b8>
    c280:	bl	3ec0 <free@plt>
    c284:	ldr	r0, [r4, #180]	; 0xb4
    c288:	cmp	r0, #0
    c28c:	beq	c294 <readstat_parse_sas7bdat+0x2c8>
    c290:	bl	3ec0 <free@plt>
    c294:	ldr	r0, [r4, #120]	; 0x78
    c298:	cmp	r0, #0
    c29c:	beq	c2a4 <readstat_parse_sas7bdat+0x2d8>
    c2a0:	bl	3ec0 <free@plt>
    c2a4:	ldr	r0, [r4, #124]	; 0x7c
    c2a8:	cmp	r0, #0
    c2ac:	beq	c2b4 <readstat_parse_sas7bdat+0x2e8>
    c2b0:	bl	3ec0 <free@plt>
    c2b4:	ldr	r0, [r4, #208]	; 0xd0
    c2b8:	cmp	r0, #0
    c2bc:	beq	c2c4 <readstat_parse_sas7bdat+0x2f8>
    c2c0:	bl	3dd0 <iconv_close@plt>
    c2c4:	mov	r0, r4
    c2c8:	bl	3ec0 <free@plt>
    c2cc:	cmp	sl, #0
    c2d0:	beq	c2dc <readstat_parse_sas7bdat+0x310>
    c2d4:	mov	r0, sl
    c2d8:	bl	3ec0 <free@plt>
    c2dc:	mov	r0, r5
    c2e0:	add	sp, sp, #140	; 0x8c
    c2e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c2e8:	ldr	r6, [r4, #24]
    c2ec:	cmp	r6, #0
    c2f0:	beq	c4c0 <readstat_parse_sas7bdat+0x4f4>
    c2f4:	ldr	r5, [pc, #3048]	; cee4 <readstat_parse_sas7bdat+0xf18>
    c2f8:	add	r7, r4, #480	; 0x1e0
    c2fc:	add	r5, pc, r5
    c300:	add	r7, r7, #1
    c304:	ldr	r9, [sp, #72]	; 0x48
    c308:	mov	lr, r7
    c30c:	add	r8, r5, #32
    c310:	mov	ip, r5
    c314:	add	lr, lr, #16
    c318:	ldm	ip!, {r0, r1, r2, r3}
    c31c:	add	r5, r5, #16
    c320:	cmp	ip, r8
    c324:	str	r0, [lr, #-16]
    c328:	str	r1, [lr, #-12]
    c32c:	str	r2, [lr, #-8]
    c330:	str	r3, [lr, #-4]
    c334:	bne	c310 <readstat_parse_sas7bdat+0x344>
    c338:	mov	r3, r5
    c33c:	str	r9, [sp, #72]	; 0x48
    c340:	ldm	r3!, {r0, r1, r2}
    c344:	mov	r5, #15
    c348:	ldrh	r3, [r3]
    c34c:	str	r0, [lr]
    c350:	str	r1, [lr, #4]
    c354:	strh	r3, [lr, #12]
    c358:	str	r2, [lr, #8]
    c35c:	mov	r0, r7
    c360:	ldr	r1, [r4, #52]	; 0x34
    c364:	blx	r6
    c368:	b	c174 <readstat_parse_sas7bdat+0x1a8>
    c36c:	strd	sl, [sp, #64]	; 0x40
    c370:	ldrd	r2, [r4, #104]	; 0x68
    c374:	ldr	sl, [sp, #56]	; 0x38
    c378:	ldr	fp, [sp, #48]	; 0x30
    c37c:	subs	r0, r2, #1
    c380:	sbc	r1, r3, #0
    c384:	cmp	r1, r7
    c388:	cmpeq	r0, r6
    c38c:	strd	r0, [sp, #32]
    c390:	ldr	r8, [r4, #56]	; 0x38
    c394:	bls	c464 <readstat_parse_sas7bdat+0x498>
    c398:	mov	r2, #0
    c39c:	mov	r3, #0
    c3a0:	ldr	r9, [sp, #72]	; 0x48
    c3a4:	strd	r2, [sp, #40]	; 0x28
    c3a8:	b	c3d4 <readstat_parse_sas7bdat+0x408>
    c3ac:	ands	r7, r0, #36864	; 0x9000
    c3b0:	beq	c854 <readstat_parse_sas7bdat+0x888>
    c3b4:	ldrd	r2, [sp, #32]
    c3b8:	ldrd	r0, [sp, #64]	; 0x40
    c3bc:	subs	r2, r2, #1
    c3c0:	sbc	r3, r3, #0
    c3c4:	cmp	r3, r1
    c3c8:	cmpeq	r2, r0
    c3cc:	strd	r2, [sp, #32]
    c3d0:	bls	c460 <readstat_parse_sas7bdat+0x494>
    c3d4:	ldr	r1, [sp, #32]
    c3d8:	ldr	r0, [r4, #112]	; 0x70
    c3dc:	ldr	r2, [r4, #96]	; 0x60
    c3e0:	ldr	r3, [r8, #8]
    c3e4:	mla	r0, r0, r1, r2
    c3e8:	ldr	r2, [r8, #20]
    c3ec:	mov	r1, #0
    c3f0:	blx	r3
    c3f4:	cmn	r0, #1
    c3f8:	beq	d2cc <readstat_parse_sas7bdat+0x1300>
    c3fc:	ldr	r2, [r4, #44]	; 0x2c
    c400:	ldr	r3, [r8, #12]
    c404:	cmp	r2, #0
    c408:	movne	r6, #34	; 0x22
    c40c:	moveq	r6, #18
    c410:	mov	r1, r6
    c414:	ldr	r2, [r8, #20]
    c418:	ldr	r0, [r4, #120]	; 0x78
    c41c:	movne	r7, #16
    c420:	moveq	r7, #0
    c424:	ldr	r5, [r4, #112]	; 0x70
    c428:	blx	r3
    c42c:	add	r7, r7, #16
    c430:	cmp	r0, r6
    c434:	bcc	d170 <readstat_parse_sas7bdat+0x11a4>
    c438:	ldr	r0, [r4, #120]	; 0x78
    c43c:	ldr	r1, [r4, #60]	; 0x3c
    c440:	add	r0, r0, r7
    c444:	bl	43d0 <sas_read2@plt>
    c448:	and	r3, r0, #3840	; 0xf00
    c44c:	cmp	r3, #256	; 0x100
    c450:	bne	c3ac <readstat_parse_sas7bdat+0x3e0>
    c454:	ldrd	r2, [sp, #40]	; 0x28
    c458:	orrs	r3, r2, r3
    c45c:	beq	c3b4 <readstat_parse_sas7bdat+0x3e8>
    c460:	str	r9, [sp, #72]	; 0x48
    c464:	ldr	r3, [fp, #8]
    c468:	ldr	r2, [fp, #20]
    c46c:	mov	r1, #0
    c470:	ldr	r0, [r4, #96]	; 0x60
    c474:	blx	r3
    c478:	cmn	r0, #1
    c47c:	bne	c8b4 <readstat_parse_sas7bdat+0x8e8>
    c480:	ldr	r3, [r4, #24]
    c484:	cmp	r3, #0
    c488:	beq	c4c0 <readstat_parse_sas7bdat+0x4f4>
    c48c:	ldrd	r2, [r4, #96]	; 0x60
    c490:	add	r5, r4, #480	; 0x1e0
    c494:	add	r5, r5, #1
    c498:	strd	r2, [sp]
    c49c:	ldr	r2, [pc, #2628]	; cee8 <readstat_parse_sas7bdat+0xf1c>
    c4a0:	mov	r1, #2048	; 0x800
    c4a4:	mov	r0, r5
    c4a8:	add	r2, pc, r2
    c4ac:	bl	4280 <snprintf@plt>
    c4b0:	mov	r0, r5
    c4b4:	ldr	r3, [r4, #24]
    c4b8:	ldr	r1, [r4, #52]	; 0x34
    c4bc:	blx	r3
    c4c0:	mov	r5, #15
    c4c4:	b	c174 <readstat_parse_sas7bdat+0x1a8>
    c4c8:	ldr	r1, [sl, #4]
    c4cc:	ldr	r2, [sl]
    c4d0:	ldr	r3, [sl, #8]
    c4d4:	str	r1, [r4, #44]	; 0x2c
    c4d8:	str	r2, [r4, #40]	; 0x28
    c4dc:	str	r3, [r4, #48]	; 0x30
    c4e0:	bl	3eb4 <machine_is_little_endian@plt>
    c4e4:	ldrd	r2, [sl, #64]	; 0x40
    c4e8:	ldr	r1, [sl]
    c4ec:	ldr	ip, [r4, #44]	; 0x2c
    c4f0:	strd	r2, [r4, #96]	; 0x60
    c4f4:	ldrd	r2, [sl, #40]	; 0x28
    c4f8:	cmp	ip, #0
    c4fc:	ldrd	r6, [sl, #56]	; 0x38
    c500:	strd	r2, [r4, #128]	; 0x80
    c504:	ldr	r2, [sl, #36]	; 0x24
    c508:	ldr	r3, [sl, #32]
    c50c:	str	r2, [r4, #116]	; 0x74
    c510:	ldr	r2, [r4, #200]	; 0xc8
    c514:	strd	r6, [r4, #104]	; 0x68
    c518:	ldrd	r6, [sl, #48]	; 0x30
    c51c:	str	r3, [r4, #112]	; 0x70
    c520:	strd	r6, [r4, #144]	; 0x90
    c524:	eor	r0, r0, r1
    c528:	str	r0, [r4, #60]	; 0x3c
    c52c:	mov	r1, #0
    c530:	movne	r0, #8
    c534:	moveq	r0, #4
    c538:	cmp	r2, #0
    c53c:	ldr	r2, [sl, #12]
    c540:	strd	r0, [r4, #136]	; 0x88
    c544:	ldr	r0, [sl, #72]	; 0x48
    c548:	ldr	r1, [sl, #76]	; 0x4c
    c54c:	str	r2, [r4, #220]	; 0xdc
    c550:	ldreq	r2, [sl, #144]	; 0x90
    c554:	str	r0, [r4, #212]	; 0xd4
    c558:	mov	r0, r3
    c55c:	streq	r2, [r4, #200]	; 0xc8
    c560:	str	r1, [r4, #216]	; 0xd8
    c564:	bl	422c <readstat_malloc@plt>
    c568:	cmp	r0, #0
    c56c:	str	r0, [r4, #120]	; 0x78
    c570:	beq	c78c <readstat_parse_sas7bdat+0x7c0>
    c574:	ldr	r6, [r4, #200]	; 0xc8
    c578:	cmp	r6, #0
    c57c:	beq	c5a0 <readstat_parse_sas7bdat+0x5d4>
    c580:	ldr	r5, [r4, #204]	; 0xcc
    c584:	cmp	r5, #0
    c588:	beq	c5a0 <readstat_parse_sas7bdat+0x5d4>
    c58c:	mov	r1, r5
    c590:	mov	r0, r6
    c594:	bl	3e00 <strcmp@plt>
    c598:	cmp	r0, #0
    c59c:	bne	c7a0 <readstat_parse_sas7bdat+0x7d4>
    c5a0:	ldr	r0, [r4, #208]	; 0xd0
    c5a4:	str	r0, [sp]
    c5a8:	mov	r3, #64	; 0x40
    c5ac:	add	r2, sl, #80	; 0x50
    c5b0:	ldr	r1, [pc, #2356]	; ceec <readstat_parse_sas7bdat+0xf20>
    c5b4:	add	r0, r4, #224	; 0xe0
    c5b8:	bl	4238 <readstat_convert@plt>
    c5bc:	subs	r5, r0, #0
    c5c0:	bne	c0cc <readstat_parse_sas7bdat+0x100>
    c5c4:	ldrd	r2, [r4, #104]	; 0x68
    c5c8:	ldr	r8, [r4, #56]	; 0x38
    c5cc:	strd	r2, [sp, #64]	; 0x40
    c5d0:	orrs	r3, r2, r3
    c5d4:	beq	d26c <readstat_parse_sas7bdat+0x12a0>
    c5d8:	str	r5, [sp, #40]	; 0x28
    c5dc:	mov	r6, #0
    c5e0:	mov	r7, #0
    c5e4:	str	fp, [sp, #48]	; 0x30
    c5e8:	str	sl, [sp, #56]	; 0x38
    c5ec:	b	c610 <readstat_parse_sas7bdat+0x644>
    c5f0:	ldrd	r2, [r4, #104]	; 0x68
    c5f4:	adds	r6, r6, #1
    c5f8:	adc	r7, r7, #0
    c5fc:	cmp	r7, r3
    c600:	cmpeq	r6, r2
    c604:	mov	sl, r6
    c608:	mov	fp, r7
    c60c:	bcs	c8a4 <readstat_parse_sas7bdat+0x8d8>
    c610:	ldr	r0, [r4, #112]	; 0x70
    c614:	ldr	r2, [r4, #96]	; 0x60
    c618:	ldr	r3, [r8, #8]
    c61c:	mla	r0, r0, r6, r2
    c620:	ldr	r1, [sp, #40]	; 0x28
    c624:	ldr	r2, [r8, #20]
    c628:	blx	r3
    c62c:	mov	sl, r6
    c630:	mov	fp, r7
    c634:	cmn	r0, #1
    c638:	beq	c7cc <readstat_parse_sas7bdat+0x800>
    c63c:	ldr	r3, [r4, #44]	; 0x2c
    c640:	ldr	r2, [r8, #20]
    c644:	cmp	r3, #0
    c648:	ldr	r3, [r4, #112]	; 0x70
    c64c:	movne	r5, #34	; 0x22
    c650:	moveq	r5, #18
    c654:	str	r3, [sp, #32]
    c658:	mov	r1, r5
    c65c:	ldr	r3, [r8, #12]
    c660:	ldr	r0, [r4, #120]	; 0x78
    c664:	movne	r9, #16
    c668:	moveq	r9, #0
    c66c:	blx	r3
    c670:	add	r3, r9, #16
    c674:	cmp	r0, r5
    c678:	bcc	c7bc <readstat_parse_sas7bdat+0x7f0>
    c67c:	ldr	r0, [r4, #120]	; 0x78
    c680:	ldr	r1, [r4, #60]	; 0x3c
    c684:	add	r0, r0, r3
    c688:	bl	43d0 <sas_read2@plt>
    c68c:	and	r3, r0, #3840	; 0xf00
    c690:	cmp	r3, #256	; 0x100
    c694:	beq	c36c <readstat_parse_sas7bdat+0x3a0>
    c698:	ands	sl, r0, #36864	; 0x9000
    c69c:	bne	c5f0 <readstat_parse_sas7bdat+0x624>
    c6a0:	ldr	r3, [sp, #32]
    c6a4:	ldr	r0, [r4, #120]	; 0x78
    c6a8:	sub	r9, r3, r5
    c6ac:	ldr	r2, [r8, #20]
    c6b0:	mov	r1, r9
    c6b4:	add	r0, r0, r5
    c6b8:	ldr	r3, [r8, #12]
    c6bc:	blx	r3
    c6c0:	mov	r2, r4
    c6c4:	cmp	r9, r0
    c6c8:	bhi	c7bc <readstat_parse_sas7bdat+0x7f0>
    c6cc:	ldr	r1, [r4, #112]	; 0x70
    c6d0:	ldr	r0, [r4, #120]	; 0x78
    c6d4:	bl	be08 <sas7bdat_parse_page_pass1>
    c6d8:	cmp	r0, #0
    c6dc:	beq	c5f0 <readstat_parse_sas7bdat+0x624>
    c6e0:	ldr	r3, [r4, #24]
    c6e4:	mov	r2, sl
    c6e8:	cmp	r3, #0
    c6ec:	ldr	fp, [sp, #48]	; 0x30
    c6f0:	mov	r5, r0
    c6f4:	ldr	sl, [sp, #56]	; 0x38
    c6f8:	beq	c0cc <readstat_parse_sas7bdat+0x100>
    c6fc:	cmp	r0, #4
    c700:	beq	d1f0 <readstat_parse_sas7bdat+0x1224>
    c704:	ldr	r3, [r8, #8]
    c708:	mov	r0, r2
    c70c:	mov	r1, #1
    c710:	ldr	r2, [r8, #20]
    c714:	blx	r3
    c718:	add	r8, r4, #480	; 0x1e0
    c71c:	add	r3, r8, #1
    c720:	strd	r6, [sp]
    c724:	ldr	r2, [pc, #1988]	; cef0 <readstat_parse_sas7bdat+0xf24>
    c728:	mov	r1, #2048	; 0x800
    c72c:	add	r2, pc, r2
    c730:	subs	r8, r0, #1
    c734:	asr	r7, r0, #31
    c738:	sbc	r9, r7, #0
    c73c:	strd	r8, [sp, #16]
    c740:	ldrd	r8, [r4, #112]	; 0x70
    c744:	subs	r8, r0, r8
    c748:	sbc	r9, r7, r9
    c74c:	mov	r6, r8
    c750:	mov	r7, r9
    c754:	strd	r6, [sp, #8]
    c758:	mov	r6, r3
    c75c:	mov	r0, r6
    c760:	bl	4280 <snprintf@plt>
    c764:	mov	r0, r6
    c768:	ldr	r3, [r4, #24]
    c76c:	sub	r6, r5, #1
    c770:	ldr	r1, [r4, #52]	; 0x34
    c774:	blx	r3
    c778:	cmp	r5, #15
    c77c:	cmpne	r6, #1
    c780:	movls	r6, #1
    c784:	movhi	r6, #0
    c788:	b	c0e0 <readstat_parse_sas7bdat+0x114>
    c78c:	mov	r5, #3
    c790:	ldr	r3, [fp, #4]
    c794:	ldr	r0, [fp, #20]
    c798:	blx	r3
    c79c:	b	c1e8 <readstat_parse_sas7bdat+0x21c>
    c7a0:	mov	r1, r6
    c7a4:	mov	r0, r5
    c7a8:	bl	4130 <iconv_open@plt>
    c7ac:	cmn	r0, #1
    c7b0:	beq	c84c <readstat_parse_sas7bdat+0x880>
    c7b4:	str	r0, [r4, #208]	; 0xd0
    c7b8:	b	c5a4 <readstat_parse_sas7bdat+0x5d8>
    c7bc:	ldr	fp, [sp, #48]	; 0x30
    c7c0:	ldr	sl, [sp, #56]	; 0x38
    c7c4:	mov	r5, #2
    c7c8:	b	c174 <readstat_parse_sas7bdat+0x1a8>
    c7cc:	ldr	r3, [r4, #24]
    c7d0:	ldr	fp, [sp, #48]	; 0x30
    c7d4:	cmp	r3, #0
    c7d8:	ldr	sl, [sp, #56]	; 0x38
    c7dc:	beq	c4c0 <readstat_parse_sas7bdat+0x4f4>
    c7e0:	ldr	lr, [r4, #112]	; 0x70
    c7e4:	ldr	ip, [r4, #116]	; 0x74
    c7e8:	strd	r6, [sp, #16]
    c7ec:	mul	r1, lr, r7
    c7f0:	umull	r8, r9, lr, r6
    c7f4:	mla	r6, ip, r6, r1
    c7f8:	ldrd	r0, [r4, #96]	; 0x60
    c7fc:	add	r9, r6, r9
    c800:	add	r5, r4, #480	; 0x1e0
    c804:	adds	r2, r8, r0
    c808:	adc	r3, r9, r1
    c80c:	add	r5, r5, #1
    c810:	strd	r2, [sp]
    c814:	ldr	r2, [pc, #1752]	; cef4 <readstat_parse_sas7bdat+0xf28>
    c818:	strd	r0, [sp, #8]
    c81c:	add	r2, pc, r2
    c820:	mov	r0, r5
    c824:	str	lr, [sp, #24]
    c828:	str	ip, [sp, #28]
    c82c:	mov	r1, #2048	; 0x800
    c830:	bl	4280 <snprintf@plt>
    c834:	mov	r0, r5
    c838:	ldr	r3, [r4, #24]
    c83c:	ldr	r1, [r4, #52]	; 0x34
    c840:	blx	r3
    c844:	mov	r5, #15
    c848:	b	c174 <readstat_parse_sas7bdat+0x1a8>
    c84c:	mov	r5, #7
    c850:	b	c790 <readstat_parse_sas7bdat+0x7c4>
    c854:	ldr	r0, [r4, #120]	; 0x78
    c858:	sub	r5, r5, r6
    c85c:	ldr	r2, [r8, #20]
    c860:	mov	r1, r5
    c864:	add	r0, r0, r6
    c868:	ldr	r3, [r8, #12]
    c86c:	blx	r3
    c870:	mov	r2, r4
    c874:	cmp	r5, r0
    c878:	bhi	d170 <readstat_parse_sas7bdat+0x11a4>
    c87c:	ldr	r1, [r4, #112]	; 0x70
    c880:	ldr	r0, [r4, #120]	; 0x78
    c884:	bl	be08 <sas7bdat_parse_page_pass1>
    c888:	cmp	r0, #0
    c88c:	bne	d27c <readstat_parse_sas7bdat+0x12b0>
    c890:	ldrd	r2, [sp, #40]	; 0x28
    c894:	adds	r2, r2, #1
    c898:	adc	r3, r3, #0
    c89c:	strd	r2, [sp, #40]	; 0x28
    c8a0:	b	c3b4 <readstat_parse_sas7bdat+0x3e8>
    c8a4:	strd	sl, [sp, #64]	; 0x40
    c8a8:	ldr	sl, [sp, #56]	; 0x38
    c8ac:	ldr	fp, [sp, #48]	; 0x30
    c8b0:	b	c37c <readstat_parse_sas7bdat+0x3b0>
    c8b4:	ldrd	r2, [r4, #104]	; 0x68
    c8b8:	ldr	r1, [r4, #56]	; 0x38
    c8bc:	orrs	r3, r2, r3
    c8c0:	str	r1, [sp, #76]	; 0x4c
    c8c4:	beq	d180 <readstat_parse_sas7bdat+0x11b4>
    c8c8:	mov	r3, r1
    c8cc:	mov	r0, #0
    c8d0:	mov	r1, #0
    c8d4:	add	r2, sp, #112	; 0x70
    c8d8:	strd	r0, [sp, #56]	; 0x38
    c8dc:	str	r2, [sp, #84]	; 0x54
    c8e0:	str	fp, [sp, #32]
    c8e4:	str	sl, [sp, #40]	; 0x28
    c8e8:	b	c928 <readstat_parse_sas7bdat+0x95c>
    c8ec:	ands	r5, r0, #36864	; 0x9000
    c8f0:	beq	cb24 <readstat_parse_sas7bdat+0xb58>
    c8f4:	ldr	r2, [r4, #76]	; 0x4c
    c8f8:	ldr	r3, [r4, #84]	; 0x54
    c8fc:	cmp	r2, r3
    c900:	beq	d178 <readstat_parse_sas7bdat+0x11ac>
    c904:	ldrd	r0, [sp, #56]	; 0x38
    c908:	ldrd	r2, [r4, #104]	; 0x68
    c90c:	adds	r0, r0, #1
    c910:	adc	r1, r1, #0
    c914:	cmp	r3, r1
    c918:	cmpeq	r2, r0
    c91c:	strd	r0, [sp, #56]	; 0x38
    c920:	bls	d178 <readstat_parse_sas7bdat+0x11ac>
    c924:	ldr	r3, [r4, #56]	; 0x38
    c928:	ldr	r5, [r3, #16]
    c92c:	ldr	r2, [r4, #52]	; 0x34
    c930:	ldr	r3, [r3, #20]
    c934:	ldr	r1, [r4, #28]
    c938:	ldr	r0, [r4, #32]
    c93c:	blx	r5
    c940:	subs	r5, r0, #0
    c944:	bne	cbb8 <readstat_parse_sas7bdat+0xbec>
    c948:	ldr	r2, [sp, #76]	; 0x4c
    c94c:	ldr	r1, [r4, #112]	; 0x70
    c950:	ldr	r0, [r4, #120]	; 0x78
    c954:	ldr	r3, [r2, #12]
    c958:	ldr	r2, [r2, #20]
    c95c:	blx	r3
    c960:	ldrd	r2, [r4, #112]	; 0x70
    c964:	mov	r8, r2
    c968:	mov	r9, r3
    c96c:	strd	r8, [sp, #48]	; 0x30
    c970:	asr	r1, r0, #31
    c974:	cmp	r1, r3
    c978:	cmpeq	r0, r2
    c97c:	bcc	cb88 <readstat_parse_sas7bdat+0xbbc>
    c980:	ldr	r0, [r4, #128]	; 0x80
    c984:	ldr	r7, [r4, #120]	; 0x78
    c988:	sub	r0, r0, #8
    c98c:	add	r0, r7, r0
    c990:	ldr	r1, [r4, #60]	; 0x3c
    c994:	bl	43d0 <sas_read2@plt>
    c998:	str	r8, [sp, #88]	; 0x58
    c99c:	and	r3, r0, #3840	; 0xf00
    c9a0:	cmp	r3, #256	; 0x100
    c9a4:	str	r3, [sp, #92]	; 0x5c
    c9a8:	bne	c8ec <readstat_parse_sas7bdat+0x920>
    c9ac:	ldr	r0, [r4, #128]	; 0x80
    c9b0:	ldr	r1, [r4, #60]	; 0x3c
    c9b4:	sub	r0, r0, #6
    c9b8:	add	r0, r7, r0
    c9bc:	bl	43d0 <sas_read2@plt>
    c9c0:	ldr	r3, [r4, #128]	; 0x80
    c9c4:	add	r9, r7, r3
    c9c8:	str	r0, [r4, #72]	; 0x48
    c9cc:	cmp	r9, #0
    c9d0:	beq	c8f4 <readstat_parse_sas7bdat+0x928>
    c9d4:	ldr	r1, [r4, #64]	; 0x40
    c9d8:	cmp	r1, #0
    c9dc:	beq	ca8c <readstat_parse_sas7bdat+0xac0>
    c9e0:	ldr	r3, [r4, #16]
    c9e4:	cmp	r3, #0
    c9e8:	beq	c8f4 <readstat_parse_sas7bdat+0x928>
    c9ec:	ldr	r0, [r4, #72]	; 0x48
    c9f0:	ldr	r3, [sp, #48]	; 0x30
    c9f4:	cmp	r0, #0
    c9f8:	add	r6, r7, r3
    c9fc:	sub	r6, r6, r9
    ca00:	beq	c8f4 <readstat_parse_sas7bdat+0x928>
    ca04:	ldr	r3, [r4, #84]	; 0x54
    ca08:	ldr	r2, [r4, #76]	; 0x4c
    ca0c:	cmp	r3, r2
    ca10:	bls	c8fc <readstat_parse_sas7bdat+0x930>
    ca14:	ldr	r1, [r4, #68]	; 0x44
    ca18:	cmp	r1, r6
    ca1c:	bhi	d148 <readstat_parse_sas7bdat+0x117c>
    ca20:	mov	r8, #0
    ca24:	mov	r7, r8
    ca28:	b	ca50 <readstat_parse_sas7bdat+0xa84>
    ca2c:	add	r8, r8, #1
    ca30:	add	r7, r7, r1
    ca34:	cmp	r0, r8
    ca38:	add	ip, r1, r7
    ca3c:	bls	c8fc <readstat_parse_sas7bdat+0x930>
    ca40:	cmp	r2, r3
    ca44:	bcs	c8fc <readstat_parse_sas7bdat+0x930>
    ca48:	cmp	r6, ip
    ca4c:	bcc	cb94 <readstat_parse_sas7bdat+0xbc8>
    ca50:	ldr	ip, [r4, #88]	; 0x58
    ca54:	cmp	ip, #0
    ca58:	sub	ip, ip, #1
    ca5c:	strne	ip, [r4, #88]	; 0x58
    ca60:	bne	ca2c <readstat_parse_sas7bdat+0xa60>
    ca64:	mov	r1, r4
    ca68:	add	r0, r9, r7
    ca6c:	bl	45e8 <sas7bdat_parse_single_row.part.6>
    ca70:	cmp	r0, #0
    ca74:	bne	cba4 <readstat_parse_sas7bdat+0xbd8>
    ca78:	ldr	r2, [r4, #76]	; 0x4c
    ca7c:	ldr	r3, [r4, #84]	; 0x54
    ca80:	ldr	r1, [r4, #68]	; 0x44
    ca84:	ldr	r0, [r4, #72]	; 0x48
    ca88:	b	ca2c <readstat_parse_sas7bdat+0xa60>
    ca8c:	mov	r0, r4
    ca90:	bl	489c <sas7bdat_submit_columns_if_needed.part.7>
    ca94:	subs	r5, r0, #0
    ca98:	beq	c9e0 <readstat_parse_sas7bdat+0xa14>
    ca9c:	ldr	fp, [sp, #32]
    caa0:	ldr	sl, [sp, #40]	; 0x28
    caa4:	ldr	r3, [r4, #24]
    caa8:	cmp	r3, #0
    caac:	beq	c0cc <readstat_parse_sas7bdat+0x100>
    cab0:	cmp	r5, #4
    cab4:	beq	d1f0 <readstat_parse_sas7bdat+0x1224>
    cab8:	ldr	r2, [sp, #76]	; 0x4c
    cabc:	mov	r1, #1
    cac0:	mov	r0, #0
    cac4:	ldr	r3, [r2, #8]
    cac8:	add	r6, r4, #480	; 0x1e0
    cacc:	ldr	r2, [r2, #20]
    cad0:	blx	r3
    cad4:	add	r3, r6, #1
    cad8:	mov	ip, r3
    cadc:	ldrd	r2, [sp, #56]	; 0x38
    cae0:	strd	r2, [sp]
    cae4:	ldr	r2, [pc, #1036]	; cef8 <readstat_parse_sas7bdat+0xf2c>
    cae8:	add	r2, pc, r2
    caec:	mov	r6, r0
    caf0:	asr	r7, r0, #31
    caf4:	ldrd	r8, [r4, #112]	; 0x70
    caf8:	strd	r6, [sp, #32]
    cafc:	subs	r6, r0, #1
    cb00:	sbc	r7, r7, #0
    cb04:	mov	r1, #2048	; 0x800
    cb08:	strd	r6, [sp, #16]
    cb0c:	ldrd	r6, [sp, #32]
    cb10:	subs	r8, r6, r8
    cb14:	sbc	r9, r7, r9
    cb18:	mov	r6, ip
    cb1c:	strd	r8, [sp, #8]
    cb20:	b	c75c <readstat_parse_sas7bdat+0x790>
    cb24:	ldr	r0, [r4, #128]	; 0x80
    cb28:	ldr	r1, [r4, #60]	; 0x3c
    cb2c:	sub	r0, r0, #4
    cb30:	add	r0, r7, r0
    cb34:	bl	43d0 <sas_read2@plt>
    cb38:	ldr	ip, [r4, #144]	; 0x90
    cb3c:	ldrd	r2, [sp, #48]	; 0x30
    cb40:	str	ip, [sp, #104]	; 0x68
    cb44:	mov	r3, #0
    cb48:	mov	lr, r0
    cb4c:	str	r0, [sp, #64]	; 0x40
    cb50:	mul	ip, ip, lr
    cb54:	ldrd	r0, [r4, #128]	; 0x80
    cb58:	adds	r8, r0, ip
    cb5c:	adc	r9, r1, ip, asr #31
    cb60:	cmp	r9, r3
    cb64:	cmpeq	r8, r2
    cb68:	bls	cbd8 <readstat_parse_sas7bdat+0xc0c>
    cb6c:	ldr	fp, [sp, #32]
    cb70:	ldr	sl, [sp, #40]	; 0x28
    cb74:	mov	r5, #5
    cb78:	ldr	r3, [r4, #24]
    cb7c:	cmp	r3, #0
    cb80:	beq	c790 <readstat_parse_sas7bdat+0x7c4>
    cb84:	b	cab8 <readstat_parse_sas7bdat+0xaec>
    cb88:	ldr	fp, [sp, #32]
    cb8c:	ldr	sl, [sp, #40]	; 0x28
    cb90:	b	c7c4 <readstat_parse_sas7bdat+0x7f8>
    cb94:	ldr	fp, [sp, #32]
    cb98:	ldr	sl, [sp, #40]	; 0x28
    cb9c:	mov	r5, #10
    cba0:	b	cb78 <readstat_parse_sas7bdat+0xbac>
    cba4:	ldr	fp, [sp, #32]
    cba8:	ldr	sl, [sp, #40]	; 0x28
    cbac:	mov	r5, r0
    cbb0:	ldr	r3, [r4, #24]
    cbb4:	b	caa8 <readstat_parse_sas7bdat+0xadc>
    cbb8:	sub	r6, r5, #1
    cbbc:	cmp	r5, #15
    cbc0:	cmpne	r6, #1
    cbc4:	ldr	fp, [sp, #32]
    cbc8:	ldr	sl, [sp, #40]	; 0x28
    cbcc:	movls	r6, #1
    cbd0:	movhi	r6, #0
    cbd4:	b	c0e0 <readstat_parse_sas7bdat+0x114>
    cbd8:	cmp	lr, #0
    cbdc:	add	r9, r7, r0
    cbe0:	beq	cdf8 <readstat_parse_sas7bdat+0xe2c>
    cbe4:	ldr	r3, [sp, #48]	; 0x30
    cbe8:	str	r5, [sp, #80]	; 0x50
    cbec:	add	r3, r7, r3
    cbf0:	str	r3, [sp, #96]	; 0x60
    cbf4:	add	r3, r4, #60	; 0x3c
    cbf8:	str	r3, [sp, #100]	; 0x64
    cbfc:	ldr	ip, [sp, #84]	; 0x54
    cc00:	ldr	r2, [sp, #100]	; 0x64
    cc04:	ldr	r1, [sp, #96]	; 0x60
    cc08:	mov	lr, #0
    cc0c:	str	r2, [sp]
    cc10:	ldr	r3, [r4, #44]	; 0x2c
    cc14:	mov	r2, ip
    cc18:	sub	r1, r1, r9
    cc1c:	mov	r0, r9
    cc20:	str	lr, [ip]
    cc24:	str	lr, [ip, #4]
    cc28:	str	lr, [ip, #8]
    cc2c:	str	lr, [ip, #12]
    cc30:	str	lr, [ip, #16]
    cc34:	str	lr, [ip, #20]
    cc38:	bl	b71c <sas7bdat_parse_subheader_pointer.isra.2>
    cc3c:	subs	r5, r0, #0
    cc40:	bne	ca9c <readstat_parse_sas7bdat+0xad0>
    cc44:	ldrd	sl, [sp, #120]	; 0x78
    cc48:	orrs	r3, sl, fp
    cc4c:	beq	cdd8 <readstat_parse_sas7bdat+0xe0c>
    cc50:	ldrb	r6, [sp, #128]	; 0x80
    cc54:	cmp	r6, #1
    cc58:	beq	cdd8 <readstat_parse_sas7bdat+0xe0c>
    cc5c:	mov	r3, r4
    cc60:	ldr	r2, [sp, #64]	; 0x40
    cc64:	ldr	r1, [sp, #88]	; 0x58
    cc68:	ldr	r0, [sp, #84]	; 0x54
    cc6c:	bl	b604 <sas7bdat_validate_subheader_pointer>
    cc70:	subs	r5, r0, #0
    cc74:	bne	ca9c <readstat_parse_sas7bdat+0xad0>
    cc78:	cmp	r6, #0
    cc7c:	beq	cd2c <readstat_parse_sas7bdat+0xd60>
    cc80:	cmp	r6, #4
    cc84:	bne	cfb8 <readstat_parse_sas7bdat+0xfec>
    cc88:	ldr	r3, [r4, #64]	; 0x40
    cc8c:	cmp	r3, #0
    cc90:	beq	cebc <readstat_parse_sas7bdat+0xef0>
    cc94:	ldrb	r3, [r4, #2529]	; 0x9e1
    cc98:	ldr	r5, [sp, #112]	; 0x70
    cc9c:	tst	r3, #1
    cca0:	add	r5, r7, r5
    cca4:	bne	ce48 <readstat_parse_sas7bdat+0xe7c>
    cca8:	ldr	r3, [r4, #84]	; 0x54
    ccac:	ldr	r2, [r4, #76]	; 0x4c
    ccb0:	cmp	r3, r2
    ccb4:	beq	cdd8 <readstat_parse_sas7bdat+0xe0c>
    ccb8:	mov	r2, r5
    ccbc:	mov	r3, sl
    ccc0:	ldr	r1, [r4, #68]	; 0x44
    ccc4:	ldr	r0, [r4, #124]	; 0x7c
    ccc8:	bl	407c <sas_rle_decompress@plt>
    cccc:	ldr	r2, [r4, #68]	; 0x44
    ccd0:	cmp	r2, r0
    ccd4:	beq	d00c <readstat_parse_sas7bdat+0x1040>
    ccd8:	ldr	r3, [r4, #24]
    ccdc:	ldr	fp, [sp, #32]
    cce0:	cmp	r3, #0
    cce4:	ldr	sl, [sp, #40]	; 0x28
    cce8:	beq	d004 <readstat_parse_sas7bdat+0x1038>
    ccec:	stm	sp, {r0, r2}
    ccf0:	add	r5, r4, #480	; 0x1e0
    ccf4:	ldr	r2, [pc, #512]	; cefc <readstat_parse_sas7bdat+0xf30>
    ccf8:	add	r5, r5, #1
    ccfc:	mov	r0, r5
    cd00:	ldr	r3, [r4, #76]	; 0x4c
    cd04:	add	r2, pc, r2
    cd08:	mov	r1, #2048	; 0x800
    cd0c:	bl	4280 <snprintf@plt>
    cd10:	mov	r0, r5
    cd14:	ldr	r3, [r4, #24]
    cd18:	ldr	r1, [r4, #52]	; 0x34
    cd1c:	blx	r3
    cd20:	mov	r5, #10
    cd24:	ldr	r3, [r4, #24]
    cd28:	b	caa8 <readstat_parse_sas7bdat+0xadc>
    cd2c:	ldr	r0, [sp, #112]	; 0x70
    cd30:	ldr	r1, [r4, #60]	; 0x3c
    cd34:	add	r0, r7, r0
    cd38:	bl	43f4 <sas_read4@plt>
    cd3c:	ldr	r3, [r4, #40]	; 0x28
    cd40:	cmp	r3, #0
    cd44:	cmneq	r0, #1
    cd48:	beq	d064 <readstat_parse_sas7bdat+0x1098>
    cd4c:	ldrb	r3, [sp, #129]	; 0x81
    cd50:	cmp	r3, #0
    cd54:	beq	d03c <readstat_parse_sas7bdat+0x1070>
    cd58:	ldr	r3, [pc, #416]	; cf00 <readstat_parse_sas7bdat+0xf34>
    cd5c:	ldr	r2, [pc, #416]	; cf04 <readstat_parse_sas7bdat+0xf38>
    cd60:	cmp	r0, r2
    cd64:	cmpne	r0, r3
    cd68:	beq	d03c <readstat_parse_sas7bdat+0x1070>
    cd6c:	add	r3, r0, #1024	; 0x400
    cd70:	add	r3, r3, #2
    cd74:	bics	r3, r3, #2
    cd78:	beq	d03c <readstat_parse_sas7bdat+0x1070>
    cd7c:	bic	r3, r0, #7
    cd80:	cmn	r3, #8
    cd84:	beq	d03c <readstat_parse_sas7bdat+0x1070>
    cd88:	ldrd	r2, [sp, #120]	; 0x78
    cd8c:	ldr	r0, [r4, #68]	; 0x44
    cd90:	mov	r1, #0
    cd94:	cmp	r3, r1
    cd98:	cmpeq	r2, r0
    cd9c:	bne	cff8 <readstat_parse_sas7bdat+0x102c>
    cda0:	ldr	r3, [r4, #64]	; 0x40
    cda4:	cmp	r3, #0
    cda8:	beq	cfe0 <readstat_parse_sas7bdat+0x1014>
    cdac:	ldr	r2, [r4, #76]	; 0x4c
    cdb0:	ldr	r3, [r4, #84]	; 0x54
    cdb4:	ldr	r0, [sp, #112]	; 0x70
    cdb8:	cmp	r2, r3
    cdbc:	add	r0, r7, r0
    cdc0:	beq	cdd8 <readstat_parse_sas7bdat+0xe0c>
    cdc4:	ldr	r3, [r4, #88]	; 0x58
    cdc8:	cmp	r3, #0
    cdcc:	beq	cfcc <readstat_parse_sas7bdat+0x1000>
    cdd0:	sub	r3, r3, #1
    cdd4:	str	r3, [r4, #88]	; 0x58
    cdd8:	ldr	r3, [sp, #80]	; 0x50
    cddc:	ldr	r2, [sp, #64]	; 0x40
    cde0:	add	r3, r3, #1
    cde4:	str	r3, [sp, #80]	; 0x50
    cde8:	cmp	r2, r3
    cdec:	ldr	r3, [sp, #104]	; 0x68
    cdf0:	add	r9, r9, r3
    cdf4:	bgt	cbfc <readstat_parse_sas7bdat+0xc30>
    cdf8:	ldr	r3, [sp, #92]	; 0x5c
    cdfc:	cmp	r3, #512	; 0x200
    ce00:	bne	c8f4 <readstat_parse_sas7bdat+0x928>
    ce04:	sub	r3, r9, r7
    ce08:	rsbs	r2, r3, #0
    ce0c:	and	r2, r2, #7
    ce10:	and	r3, r3, #7
    ce14:	rsbpl	r3, r2, #0
    ce18:	cmp	r3, #4
    ce1c:	bne	c9cc <readstat_parse_sas7bdat+0xa00>
    ce20:	ldr	r3, [r9]
    ce24:	ldr	r2, [pc, #220]	; cf08 <readstat_parse_sas7bdat+0xf3c>
    ce28:	cmp	r3, r2
    ce2c:	cmpne	r3, #0
    ce30:	beq	ce40 <readstat_parse_sas7bdat+0xe74>
    ce34:	ldr	r3, [r4, #48]	; 0x30
    ce38:	cmp	r3, #0
    ce3c:	beq	c9d4 <readstat_parse_sas7bdat+0xa08>
    ce40:	add	r9, r9, #4
    ce44:	b	c9cc <readstat_parse_sas7bdat+0xa00>
    ce48:	ldr	r0, [r4, #68]	; 0x44
    ce4c:	bl	410c <malloc@plt>
    ce50:	add	r8, r5, sl
    ce54:	mov	r6, r0
    ce58:	add	ip, r5, #2
    ce5c:	cmp	r8, ip
    ce60:	bcc	d11c <readstat_parse_sas7bdat+0x1150>
    ce64:	ldrb	r3, [r5]
    ce68:	ldrb	sl, [r5, #1]
    ce6c:	mov	fp, #15
    ce70:	add	sl, sl, r3, lsl #8
    ce74:	uxth	sl, sl
    ce78:	asr	r3, sl, fp
    ce7c:	tst	r3, #1
    ce80:	bne	cf18 <readstat_parse_sas7bdat+0xf4c>
    ce84:	add	r1, ip, #1
    ce88:	cmp	r1, r8
    ce8c:	bhi	cfb0 <readstat_parse_sas7bdat+0xfe4>
    ce90:	ldr	r3, [r4, #68]	; 0x44
    ce94:	add	r2, r0, #1
    ce98:	add	r3, r6, r3
    ce9c:	cmp	r2, r3
    cea0:	bls	d108 <readstat_parse_sas7bdat+0x113c>
    cea4:	mov	r5, #10
    cea8:	mov	r0, r6
    ceac:	bl	3ec0 <free@plt>
    ceb0:	cmp	r5, #0
    ceb4:	beq	cdd8 <readstat_parse_sas7bdat+0xe0c>
    ceb8:	b	ca9c <readstat_parse_sas7bdat+0xad0>
    cebc:	mov	r1, #1
    cec0:	mov	r0, r4
    cec4:	bl	489c <sas7bdat_submit_columns_if_needed.part.7>
    cec8:	subs	r5, r0, #0
    cecc:	bne	ca9c <readstat_parse_sas7bdat+0xad0>
    ced0:	ldrd	sl, [sp, #120]	; 0x78
    ced4:	b	cc94 <readstat_parse_sas7bdat+0xcc8>
    ced8:	.word	0x000009e8
    cedc:	.word	0x000184a8
    cee0:	.word	0x00018528
    cee4:	.word	0x000182e0
    cee8:	.word	0x00017fd4
    ceec:	.word	0x00000101
    cef0:	.word	0x00017f20
    cef4:	.word	0x00017df0
    cef8:	.word	0x00017b64
    cefc:	.word	0x0001797c
    cf00:	.word	0xf7f7f7f7
    cf04:	.word	0xf6f6f6f6
    cf08:	.word	0x20202020
    cf0c:	.word	0x000174f4
    cf10:	.word	0x00017388
    cf14:	.word	0x000172e4
    cf18:	add	r5, ip, #2
    cf1c:	cmp	r8, r5
    cf20:	bcc	d100 <readstat_parse_sas7bdat+0x1134>
    cf24:	ldrb	r3, [ip]
    cf28:	ldrb	r1, [ip, #1]
    cf2c:	cmp	r3, #15
    cf30:	addls	r2, r3, #3
    cf34:	bls	d0d4 <readstat_parse_sas7bdat+0x1108>
    cf38:	lsr	r2, r3, #4
    cf3c:	cmp	r2, #1
    cf40:	beq	d0b4 <readstat_parse_sas7bdat+0x10e8>
    cf44:	cmp	r2, #2
    cf48:	beq	d08c <readstat_parse_sas7bdat+0x10c0>
    cf4c:	and	r3, r3, #15
    cf50:	mov	ip, #16
    cf54:	add	r3, r3, #3
    cf58:	smlabb	r1, ip, r1, r3
    cf5c:	cmp	r2, r1
    cf60:	movls	r3, #0
    cf64:	movhi	r3, #1
    cf68:	sub	ip, r0, r6
    cf6c:	cmp	ip, r1
    cf70:	orrcc	r3, r3, #1
    cf74:	cmp	r3, #0
    cf78:	bne	d100 <readstat_parse_sas7bdat+0x1134>
    cf7c:	ldr	ip, [r4, #68]	; 0x44
    cf80:	add	r3, r0, r2
    cf84:	add	ip, r6, ip
    cf88:	cmp	r3, ip
    cf8c:	str	r3, [sp, #108]	; 0x6c
    cf90:	bhi	cea4 <readstat_parse_sas7bdat+0xed8>
    cf94:	sub	r1, r0, r1
    cf98:	bl	3f20 <memcpy@plt>
    cf9c:	ldr	r3, [sp, #108]	; 0x6c
    cfa0:	mov	ip, r5
    cfa4:	mov	r0, r3
    cfa8:	subs	fp, fp, #1
    cfac:	bcs	ce78 <readstat_parse_sas7bdat+0xeac>
    cfb0:	mov	r5, ip
    cfb4:	b	ce58 <readstat_parse_sas7bdat+0xe8c>
    cfb8:	ldr	fp, [sp, #32]
    cfbc:	ldr	sl, [sp, #40]	; 0x28
    cfc0:	mov	r5, #6
    cfc4:	ldr	r3, [r4, #24]
    cfc8:	b	caa8 <readstat_parse_sas7bdat+0xadc>
    cfcc:	mov	r1, r4
    cfd0:	bl	45e8 <sas7bdat_parse_single_row.part.6>
    cfd4:	subs	r5, r0, #0
    cfd8:	beq	cdd8 <readstat_parse_sas7bdat+0xe0c>
    cfdc:	b	ca9c <readstat_parse_sas7bdat+0xad0>
    cfe0:	mov	r1, #1
    cfe4:	mov	r0, r4
    cfe8:	bl	489c <sas7bdat_submit_columns_if_needed.part.7>
    cfec:	subs	r5, r0, #0
    cff0:	beq	cdac <readstat_parse_sas7bdat+0xde0>
    cff4:	b	ca9c <readstat_parse_sas7bdat+0xad0>
    cff8:	ldr	fp, [sp, #32]
    cffc:	ldr	sl, [sp, #40]	; 0x28
    d000:	ldr	r3, [r4, #24]
    d004:	mov	r5, #10
    d008:	b	caa8 <readstat_parse_sas7bdat+0xadc>
    d00c:	ldr	r2, [r4, #76]	; 0x4c
    d010:	ldr	r3, [r4, #84]	; 0x54
    d014:	ldr	r0, [r4, #124]	; 0x7c
    d018:	cmp	r2, r3
    d01c:	beq	cdd8 <readstat_parse_sas7bdat+0xe0c>
    d020:	ldr	r3, [r4, #88]	; 0x58
    d024:	cmp	r3, #0
    d028:	bne	cdd0 <readstat_parse_sas7bdat+0xe04>
    d02c:	mov	r1, r4
    d030:	bl	45e8 <sas7bdat_parse_single_row.part.6>
    d034:	mov	r5, r0
    d038:	b	ceb0 <readstat_parse_sas7bdat+0xee4>
    d03c:	cmn	r0, #3
    d040:	beq	cdd8 <readstat_parse_sas7bdat+0xe0c>
    d044:	ldr	r1, [sp, #112]	; 0x70
    d048:	mov	r3, r4
    d04c:	add	r1, r7, r1
    d050:	ldr	r2, [sp, #120]	; 0x78
    d054:	bl	b834 <sas7bdat_parse_subheader>
    d058:	subs	r5, r0, #0
    d05c:	beq	cdd8 <readstat_parse_sas7bdat+0xe0c>
    d060:	b	ca9c <readstat_parse_sas7bdat+0xad0>
    d064:	ldr	r3, [r4, #44]	; 0x2c
    d068:	cmp	r3, #0
    d06c:	mvneq	r0, #0
    d070:	beq	d044 <readstat_parse_sas7bdat+0x1078>
    d074:	ldr	r0, [sp, #112]	; 0x70
    d078:	ldr	r1, [r4, #60]	; 0x3c
    d07c:	add	r0, r0, #4
    d080:	add	r0, r7, r0
    d084:	bl	43f4 <sas_read4@plt>
    d088:	b	cd4c <readstat_parse_sas7bdat+0xd80>
    d08c:	add	r5, ip, #3
    d090:	cmp	r8, r5
    d094:	bcc	d100 <readstat_parse_sas7bdat+0x1134>
    d098:	ldrb	r2, [ip, #2]
    d09c:	and	r3, r3, #15
    d0a0:	mov	ip, #16
    d0a4:	add	r3, r3, #3
    d0a8:	smlabb	r1, ip, r1, r3
    d0ac:	add	r2, r2, #16
    d0b0:	b	cf5c <readstat_parse_sas7bdat+0xf90>
    d0b4:	add	r5, ip, #3
    d0b8:	cmp	r8, r5
    d0bc:	bcc	d100 <readstat_parse_sas7bdat+0x1134>
    d0c0:	and	r3, r3, #15
    d0c4:	mov	r2, #16
    d0c8:	add	r3, r3, #19
    d0cc:	smlabb	r2, r2, r1, r3
    d0d0:	ldrb	r1, [ip, #2]
    d0d4:	ldr	ip, [r4, #68]	; 0x44
    d0d8:	add	r3, r0, r2
    d0dc:	add	ip, r6, ip
    d0e0:	cmp	r3, ip
    d0e4:	bhi	cea4 <readstat_parse_sas7bdat+0xed8>
    d0e8:	str	r3, [sp, #108]	; 0x6c
    d0ec:	bl	42a4 <memset@plt>
    d0f0:	ldr	r3, [sp, #108]	; 0x6c
    d0f4:	mov	ip, r5
    d0f8:	mov	r0, r3
    d0fc:	b	cfa8 <readstat_parse_sas7bdat+0xfdc>
    d100:	mov	r5, #5
    d104:	b	cea8 <readstat_parse_sas7bdat+0xedc>
    d108:	ldrb	r3, [ip]
    d10c:	mov	ip, r1
    d110:	strb	r3, [r0]
    d114:	mov	r0, r2
    d118:	b	cfa8 <readstat_parse_sas7bdat+0xfdc>
    d11c:	ldr	r3, [r4, #68]	; 0x44
    d120:	sub	r0, r0, r6
    d124:	cmp	r0, r3
    d128:	beq	d23c <readstat_parse_sas7bdat+0x1270>
    d12c:	mov	r0, r6
    d130:	ldr	fp, [sp, #32]
    d134:	ldr	sl, [sp, #40]	; 0x28
    d138:	mov	r5, #10
    d13c:	bl	3ec0 <free@plt>
    d140:	ldr	r3, [r4, #24]
    d144:	b	caa8 <readstat_parse_sas7bdat+0xadc>
    d148:	ldr	r3, [r4, #24]
    d14c:	ldr	fp, [sp, #32]
    d150:	cmp	r3, #0
    d154:	ldr	sl, [sp, #40]	; 0x28
    d158:	bne	d330 <readstat_parse_sas7bdat+0x1364>
    d15c:	ldr	r3, [fp, #4]
    d160:	ldr	r0, [fp, #20]
    d164:	blx	r3
    d168:	mov	r5, #10
    d16c:	b	c1e8 <readstat_parse_sas7bdat+0x21c>
    d170:	str	r9, [sp, #72]	; 0x48
    d174:	b	c7c4 <readstat_parse_sas7bdat+0x7f8>
    d178:	ldr	fp, [sp, #32]
    d17c:	ldr	sl, [sp, #40]	; 0x28
    d180:	ldr	r1, [r4, #64]	; 0x40
    d184:	cmp	r1, #0
    d188:	beq	d228 <readstat_parse_sas7bdat+0x125c>
    d18c:	ldr	r3, [r4, #16]
    d190:	cmp	r3, #0
    d194:	beq	d204 <readstat_parse_sas7bdat+0x1238>
    d198:	ldr	r2, [r4, #76]	; 0x4c
    d19c:	ldr	r3, [r4, #84]	; 0x54
    d1a0:	cmp	r2, r3
    d1a4:	beq	d204 <readstat_parse_sas7bdat+0x1238>
    d1a8:	ldr	r1, [r4, #24]
    d1ac:	cmp	r1, #0
    d1b0:	moveq	r5, #9
    d1b4:	beq	c790 <readstat_parse_sas7bdat+0x7c4>
    d1b8:	str	r2, [sp]
    d1bc:	add	r5, r4, #480	; 0x1e0
    d1c0:	ldr	r2, [pc, #-700]	; cf0c <readstat_parse_sas7bdat+0xf40>
    d1c4:	add	r5, r5, #1
    d1c8:	mov	r0, r5
    d1cc:	add	r2, pc, r2
    d1d0:	mov	r1, #2048	; 0x800
    d1d4:	bl	4280 <snprintf@plt>
    d1d8:	mov	r0, r5
    d1dc:	ldr	r3, [r4, #24]
    d1e0:	ldr	r1, [r4, #52]	; 0x34
    d1e4:	blx	r3
    d1e8:	mov	r5, #9
    d1ec:	b	c790 <readstat_parse_sas7bdat+0x7c4>
    d1f0:	ldr	r3, [fp, #4]
    d1f4:	ldr	r0, [fp, #20]
    d1f8:	blx	r3
    d1fc:	mov	r5, #4
    d200:	b	c1e8 <readstat_parse_sas7bdat+0x21c>
    d204:	ldr	r3, [r4, #56]	; 0x38
    d208:	ldr	r2, [r4, #52]	; 0x34
    d20c:	ldr	r1, [r4, #28]
    d210:	ldr	r5, [r3, #16]
    d214:	ldr	r0, [r4, #32]
    d218:	ldr	r3, [r3, #20]
    d21c:	blx	r5
    d220:	mov	r5, r0
    d224:	b	c0cc <readstat_parse_sas7bdat+0x100>
    d228:	mov	r0, r4
    d22c:	bl	489c <sas7bdat_submit_columns_if_needed.part.7>
    d230:	subs	r5, r0, #0
    d234:	bne	c0cc <readstat_parse_sas7bdat+0x100>
    d238:	b	d18c <readstat_parse_sas7bdat+0x11c0>
    d23c:	ldr	r2, [r4, #76]	; 0x4c
    d240:	ldr	r3, [r4, #84]	; 0x54
    d244:	cmp	r2, r3
    d248:	beq	d34c <readstat_parse_sas7bdat+0x1380>
    d24c:	ldr	r3, [r4, #88]	; 0x58
    d250:	cmp	r3, #0
    d254:	beq	d338 <readstat_parse_sas7bdat+0x136c>
    d258:	sub	r3, r3, #1
    d25c:	mov	r0, r6
    d260:	str	r3, [r4, #88]	; 0x58
    d264:	bl	3ec0 <free@plt>
    d268:	b	cdd8 <readstat_parse_sas7bdat+0xe0c>
    d26c:	mvn	r2, #0
    d270:	mvn	r3, #0
    d274:	strd	r2, [sp, #32]
    d278:	b	c398 <readstat_parse_sas7bdat+0x3cc>
    d27c:	ldr	r3, [r4, #24]
    d280:	mov	r5, r0
    d284:	cmp	r3, #0
    d288:	str	r9, [sp, #72]	; 0x48
    d28c:	beq	c0cc <readstat_parse_sas7bdat+0x100>
    d290:	cmp	r0, #4
    d294:	beq	d1f0 <readstat_parse_sas7bdat+0x1224>
    d298:	ldr	r3, [r8, #8]
    d29c:	ldr	r2, [r8, #20]
    d2a0:	mov	r0, r7
    d2a4:	mov	r1, #1
    d2a8:	add	r6, r4, #480	; 0x1e0
    d2ac:	blx	r3
    d2b0:	add	r3, r6, #1
    d2b4:	mov	ip, r3
    d2b8:	ldrd	r2, [sp, #32]
    d2bc:	strd	r2, [sp]
    d2c0:	ldr	r2, [pc, #-952]	; cf10 <readstat_parse_sas7bdat+0xf44>
    d2c4:	add	r2, pc, r2
    d2c8:	b	caec <readstat_parse_sas7bdat+0xb20>
    d2cc:	ldr	r3, [r4, #24]
    d2d0:	str	r9, [sp, #72]	; 0x48
    d2d4:	cmp	r3, #0
    d2d8:	beq	c4c0 <readstat_parse_sas7bdat+0x4f4>
    d2dc:	ldrd	r2, [sp, #32]
    d2e0:	ldr	lr, [r4, #112]	; 0x70
    d2e4:	ldr	ip, [r4, #116]	; 0x74
    d2e8:	strd	r2, [sp, #16]
    d2ec:	mul	r1, lr, r3
    d2f0:	umull	r6, r7, lr, r2
    d2f4:	mla	r5, ip, r2, r1
    d2f8:	ldrd	r0, [r4, #96]	; 0x60
    d2fc:	add	r7, r5, r7
    d300:	add	r5, r4, #480	; 0x1e0
    d304:	adds	r2, r6, r0
    d308:	adc	r3, r7, r1
    d30c:	add	r5, r5, #1
    d310:	strd	r2, [sp]
    d314:	ldr	r2, [pc, #-1032]	; cf14 <readstat_parse_sas7bdat+0xf48>
    d318:	strd	r0, [sp, #8]
    d31c:	str	lr, [sp, #24]
    d320:	str	ip, [sp, #28]
    d324:	mov	r0, r5
    d328:	add	r2, pc, r2
    d32c:	b	c82c <readstat_parse_sas7bdat+0x860>
    d330:	mov	r5, #10
    d334:	b	cab8 <readstat_parse_sas7bdat+0xaec>
    d338:	mov	r1, r4
    d33c:	mov	r0, r6
    d340:	bl	45e8 <sas7bdat_parse_single_row.part.6>
    d344:	mov	r5, r0
    d348:	b	cea8 <readstat_parse_sas7bdat+0xedc>
    d34c:	mov	r0, r6
    d350:	bl	3ec0 <free@plt>
    d354:	b	cdd8 <readstat_parse_sas7bdat+0xe0c>

0000d358 <sas7bdat_variable_width>:
    d358:	cmp	r0, #0
    d35c:	moveq	r0, r1
    d360:	movne	r0, #8
    d364:	bx	lr

0000d368 <sas7bdat_metadata_ok>:
    d368:	ldr	r0, [r0, #16]
    d36c:	cmp	r0, #1
    d370:	movhi	r0, #6
    d374:	movls	r0, #0
    d378:	bx	lr

0000d37c <sas7bdat_row_length>:
    d37c:	ldr	r3, [r0, #28]
    d380:	push	{r4, r5, r6, r7, r8, lr}
    d384:	cmp	r3, #0
    d388:	ble	d3dc <sas7bdat_row_length+0x60>
    d38c:	mov	r7, #0
    d390:	mov	r6, r0
    d394:	mov	r4, r7
    d398:	mov	r1, r4
    d39c:	mov	r0, r6
    d3a0:	bl	437c <readstat_get_variable@plt>
    d3a4:	add	r4, r4, #1
    d3a8:	mov	r8, r0
    d3ac:	bl	41d8 <readstat_variable_get_type@plt>
    d3b0:	mov	r5, r0
    d3b4:	mov	r0, r8
    d3b8:	bl	42c8 <readstat_variable_get_storage_width@plt>
    d3bc:	ldr	r3, [r6, #28]
    d3c0:	cmp	r5, #0
    d3c4:	movne	r0, #8
    d3c8:	cmp	r3, r4
    d3cc:	add	r7, r7, r0
    d3d0:	bgt	d398 <sas7bdat_row_length+0x1c>
    d3d4:	mov	r0, r7
    d3d8:	pop	{r4, r5, r6, r7, r8, pc}
    d3dc:	mov	r7, #0
    d3e0:	b	d3d4 <sas7bdat_row_length+0x58>

0000d3e4 <sas7bdat_write_missing_string>:
    d3e4:	push	{r4, lr}
    d3e8:	mov	r4, r0
    d3ec:	mov	r0, r1
    d3f0:	bl	42c8 <readstat_variable_get_storage_width@plt>
    d3f4:	mov	r1, #0
    d3f8:	mov	r2, r0
    d3fc:	mov	r0, r4
    d400:	bl	42a4 <memset@plt>
    d404:	mov	r0, #0
    d408:	pop	{r4, pc}

0000d40c <sas7bdat_write_double>:
    d40c:	sub	sp, sp, #8
    d410:	add	r3, sp, #8
    d414:	mov	r2, r0
    d418:	vstmdb	r3!, {d0}
    d41c:	ldm	r3!, {r0, r1}
    d420:	str	r0, [r2]
    d424:	str	r1, [r2, #4]
    d428:	mov	r0, #0
    d42c:	add	sp, sp, #8
    d430:	bx	lr

0000d434 <sas7bdat_write_missing_numeric>:
    d434:	push	{r4, r5}
    d438:	sub	sp, sp, #8
    d43c:	ldr	r5, [pc, #48]	; d474 <sas7bdat_write_missing_numeric+0x40>
    d440:	mov	r4, #0
    d444:	bic	r3, r5, #11776	; 0x2e00
    d448:	orr	r5, r3, #53504	; 0xd100
    d44c:	add	r3, sp, #8
    d450:	mov	r2, r0
    d454:	strd	r4, [r3, #-8]!
    d458:	ldm	r3!, {r0, r1}
    d45c:	str	r0, [r2]
    d460:	str	r1, [r2, #4]
    d464:	mov	r0, #0
    d468:	add	sp, sp, #8
    d46c:	pop	{r4, r5}
    d470:	bx	lr
    d474:	.word	0x7ff80000

0000d478 <sas7bdat_write_float>:
    d478:	vcvt.f64.f32	d0, s0
    d47c:	sub	sp, sp, #8
    d480:	add	r3, sp, #8
    d484:	mov	r2, r0
    d488:	vstmdb	r3!, {d0}
    d48c:	ldm	r3!, {r0, r1}
    d490:	str	r0, [r2]
    d494:	str	r1, [r2, #4]
    d498:	mov	r0, #0
    d49c:	add	sp, sp, #8
    d4a0:	bx	lr

0000d4a4 <sas7bdat_write_int32>:
    d4a4:	vmov	s15, r2
    d4a8:	sub	sp, sp, #8
    d4ac:	add	r3, sp, #8
    d4b0:	mov	r2, r0
    d4b4:	vcvt.f64.s32	d7, s15
    d4b8:	vstmdb	r3!, {d7}
    d4bc:	ldm	r3!, {r0, r1}
    d4c0:	str	r0, [r2]
    d4c4:	str	r1, [r2, #4]
    d4c8:	mov	r0, #0
    d4cc:	add	sp, sp, #8
    d4d0:	bx	lr

0000d4d4 <sas7bdat_write_int16>:
    d4d4:	vmov	s15, r2
    d4d8:	sub	sp, sp, #8
    d4dc:	add	r3, sp, #8
    d4e0:	mov	r2, r0
    d4e4:	vcvt.f64.s32	d7, s15
    d4e8:	vstmdb	r3!, {d7}
    d4ec:	ldm	r3!, {r0, r1}
    d4f0:	str	r0, [r2]
    d4f4:	str	r1, [r2, #4]
    d4f8:	mov	r0, #0
    d4fc:	add	sp, sp, #8
    d500:	bx	lr

0000d504 <sas7bdat_write_int8>:
    d504:	vmov	s15, r2
    d508:	sub	sp, sp, #8
    d50c:	add	r3, sp, #8
    d510:	mov	r2, r0
    d514:	vcvt.f64.s32	d7, s15
    d518:	vstmdb	r3!, {d7}
    d51c:	ldm	r3!, {r0, r1}
    d520:	str	r0, [r2]
    d524:	str	r1, [r2, #4]
    d528:	mov	r0, #0
    d52c:	add	sp, sp, #8
    d530:	bx	lr

0000d534 <sas7bdat_subheader_init>:
    d534:	push	{r4, r5, r6, lr}
    d538:	mov	r5, r1
    d53c:	mov	r6, r0
    d540:	mov	r1, #20
    d544:	mov	r0, #1
    d548:	bl	3d58 <calloc@plt>
    d54c:	mov	r1, r5
    d550:	mov	r4, r0
    d554:	mov	r0, #1
    d558:	str	r6, [r4]
    d55c:	str	r5, [r4, #8]
    d560:	bl	3d58 <calloc@plt>
    d564:	str	r0, [r4, #4]
    d568:	mov	r0, r4
    d56c:	pop	{r4, r5, r6, pc}

0000d570 <sas7bdat_subheader_free>:
    d570:	push	{r4, lr}
    d574:	subs	r4, r0, #0
    d578:	popeq	{r4, pc}
    d57c:	ldr	r0, [r4, #4]
    d580:	cmp	r0, #0
    d584:	beq	d58c <sas7bdat_subheader_free+0x1c>
    d588:	bl	3ec0 <free@plt>
    d58c:	mov	r0, r4
    d590:	pop	{r4, lr}
    d594:	b	3ec0 <free@plt>

0000d598 <sas7bdat_subheader_array_free>:
    d598:	ldrd	r2, [r0]
    d59c:	push	{r4, r5, r6, r7, r8, lr}
    d5a0:	mov	r5, r0
    d5a4:	cmp	r2, #1
    d5a8:	sbcs	r3, r3, #0
    d5ac:	movge	r6, #1
    d5b0:	movge	r7, #0
    d5b4:	movge	r4, #0
    d5b8:	blt	d5ec <sas7bdat_subheader_array_free+0x54>
    d5bc:	ldr	r3, [r5, #16]
    d5c0:	ldr	r0, [r3, r4]
    d5c4:	bl	d570 <sas7bdat_subheader_free>
    d5c8:	ldrd	r2, [r5]
    d5cc:	mov	r0, r6
    d5d0:	adds	r6, r6, #1
    d5d4:	mov	r1, r7
    d5d8:	adc	r7, r7, #0
    d5dc:	cmp	r0, r2
    d5e0:	sbcs	r3, r1, r3
    d5e4:	add	r4, r4, #4
    d5e8:	blt	d5bc <sas7bdat_subheader_array_free+0x24>
    d5ec:	ldr	r0, [r5, #16]
    d5f0:	bl	3ec0 <free@plt>
    d5f4:	mov	r0, r5
    d5f8:	pop	{r4, r5, r6, r7, r8, lr}
    d5fc:	b	3ec0 <free@plt>

0000d600 <sas7bdat_write_string>:
    d600:	push	{r4, r5, r6, lr}
    d604:	mov	r6, r0
    d608:	mov	r0, r1
    d60c:	mov	r4, r2
    d610:	bl	42c8 <readstat_variable_get_storage_width@plt>
    d614:	cmp	r4, #0
    d618:	mov	r5, r0
    d61c:	beq	d644 <sas7bdat_write_string+0x44>
    d620:	ldrb	r3, [r4]
    d624:	cmp	r3, #0
    d628:	beq	d644 <sas7bdat_write_string+0x44>
    d62c:	mov	r0, r4
    d630:	bl	41fc <strlen@plt>
    d634:	cmp	r5, r0
    d638:	bcs	d65c <sas7bdat_write_string+0x5c>
    d63c:	mov	r0, #22
    d640:	pop	{r4, r5, r6, pc}
    d644:	mov	r2, r5
    d648:	mov	r0, r6
    d64c:	mov	r1, #0
    d650:	bl	42a4 <memset@plt>
    d654:	mov	r0, #0
    d658:	pop	{r4, r5, r6, pc}
    d65c:	mov	r2, r5
    d660:	mov	r1, r4
    d664:	mov	r0, r6
    d668:	bl	42bc <strncpy@plt>
    d66c:	mov	r0, #0
    d670:	pop	{r4, r5, r6, pc}

0000d674 <sas7bdat_write_missing_tagged>:
    d674:	push	{r4, r5, lr}
    d678:	mov	r5, r0
    d67c:	sub	sp, sp, #12
    d680:	mov	r0, r2
    d684:	mov	r4, r2
    d688:	bl	4148 <sas_validate_tag@plt>
    d68c:	subs	r2, r0, #0
    d690:	bne	d6bc <sas7bdat_write_missing_tagged+0x48>
    d694:	lsl	r4, r4, #8
    d698:	eor	r4, r4, #65280	; 0xff00
    d69c:	orr	r1, r4, #2130706432	; 0x7f000000
    d6a0:	mov	r0, #0
    d6a4:	orr	r1, r1, #16252928	; 0xf80000
    d6a8:	add	r3, sp, #8
    d6ac:	strd	r0, [r3, #-8]!
    d6b0:	ldm	r3!, {r0, r1}
    d6b4:	str	r0, [r5]
    d6b8:	str	r1, [r5, #4]
    d6bc:	mov	r0, r2
    d6c0:	add	sp, sp, #12
    d6c4:	pop	{r4, r5, pc}

0000d6c8 <sas7bdat_write_row>:
    d6c8:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d6cc:	mov	sl, r1
    d6d0:	ldr	r4, [r0, #16]
    d6d4:	add	fp, sp, #36	; 0x24
    d6d8:	cmp	r4, #0
    d6dc:	mov	r9, r2
    d6e0:	ldr	r7, [r0, #300]	; 0x12c
    d6e4:	beq	d6fc <sas7bdat_write_row+0x34>
    d6e8:	cmp	r4, #1
    d6ec:	movne	r0, #0
    d6f0:	beq	d7dc <sas7bdat_write_row+0x114>
    d6f4:	sub	sp, fp, #36	; 0x24
    d6f8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d6fc:	ldr	r6, [r7]
    d700:	mov	r8, r0
    d704:	bl	d37c <sas7bdat_row_length>
    d708:	mov	r3, r4
    d70c:	ldrd	r4, [r6, #40]	; 0x28
    d710:	mov	r2, r0
    d714:	ldrd	r0, [r6, #32]
    d718:	subs	r0, r0, r4
    d71c:	sbc	r1, r1, r5
    d720:	bl	238ec <__aeabi_ldivmod>
    d724:	mov	r1, r0
    d728:	mov	r4, r0
    d72c:	ldr	r0, [r8, #84]	; 0x54
    d730:	bl	234f8 <__aeabi_idivmod>
    d734:	cmp	r1, #0
    d738:	bne	d7c4 <sas7bdat_write_row+0xfc>
    d73c:	ldr	r1, [r7]
    d740:	mov	r0, r8
    d744:	bl	4478 <sas_fill_page@plt>
    d748:	mov	r5, sp
    d74c:	cmp	r0, #0
    d750:	bne	d7b8 <sas7bdat_write_row+0xf0>
    d754:	ldr	r2, [r6, #40]	; 0x28
    d758:	ldr	ip, [r8, #84]	; 0x54
    d75c:	add	r1, r2, #7
    d760:	ldr	r3, [r8, #80]	; 0x50
    d764:	bic	r1, r1, #7
    d768:	sub	sp, sp, r1
    d76c:	sub	r3, r3, ip
    d770:	cmp	r3, r4
    d774:	mov	r1, r0
    d778:	mov	r0, sp
    d77c:	movlt	r4, r3
    d780:	bl	42a4 <memset@plt>
    d784:	ldr	r3, [r6, #40]	; 0x28
    d788:	mov	r2, #256	; 0x100
    d78c:	add	r3, sp, r3
    d790:	mov	r1, sp
    d794:	strh	r4, [r3, #-6]
    d798:	ldr	r3, [r6, #40]	; 0x28
    d79c:	mov	r0, r8
    d7a0:	add	r3, sp, r3
    d7a4:	strh	r2, [r3, #-8]
    d7a8:	ldr	r2, [r6, #40]	; 0x28
    d7ac:	bl	4454 <readstat_write_bytes@plt>
    d7b0:	cmp	r0, #0
    d7b4:	beq	d7c0 <sas7bdat_write_row+0xf8>
    d7b8:	mov	sp, r5
    d7bc:	b	d6f4 <sas7bdat_write_row+0x2c>
    d7c0:	mov	sp, r5
    d7c4:	mov	r2, r9
    d7c8:	mov	r1, sl
    d7cc:	mov	r0, r8
    d7d0:	bl	4454 <readstat_write_bytes@plt>
    d7d4:	sub	sp, fp, #36	; 0x24
    d7d8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d7dc:	mov	r1, r2
    d7e0:	mov	r0, sl
    d7e4:	bl	4484 <sas_rle_compressed_len@plt>
    d7e8:	cmp	r9, r0
    d7ec:	mov	r6, r0
    d7f0:	bls	d834 <sas7bdat_write_row+0x16c>
    d7f4:	mov	r1, r0
    d7f8:	mov	r0, #0
    d7fc:	bl	d534 <sas7bdat_subheader_init>
    d800:	mov	r3, r9
    d804:	mov	r2, sl
    d808:	str	r4, [r0, #12]
    d80c:	str	r4, [r0, #16]
    d810:	mov	r5, r0
    d814:	ldmib	r0, {r0, r1}
    d818:	bl	44d8 <sas_rle_compress@plt>
    d81c:	cmp	r6, r0
    d820:	beq	d858 <sas7bdat_write_row+0x190>
    d824:	mov	r0, r5
    d828:	bl	d570 <sas7bdat_subheader_free>
    d82c:	mov	r0, #10
    d830:	b	d6f4 <sas7bdat_write_row+0x2c>
    d834:	mov	r1, r9
    d838:	mov	r0, #0
    d83c:	bl	d534 <sas7bdat_subheader_init>
    d840:	mov	r2, r9
    d844:	mov	r1, sl
    d848:	mov	r5, r0
    d84c:	str	r4, [r0, #12]
    d850:	ldr	r0, [r0, #4]
    d854:	bl	3f20 <memcpy@plt>
    d858:	ldr	r1, [r7, #4]
    d85c:	mov	r0, #0
    d860:	ldrd	r2, [r1]
    d864:	ldr	ip, [r1, #16]
    d868:	adds	r6, r2, #1
    d86c:	adc	r7, r3, #0
    d870:	strd	r6, [r1]
    d874:	str	r5, [ip, r2, lsl #2]
    d878:	b	d6f4 <sas7bdat_write_row+0x2c>

0000d87c <sas7bdat_make_text_ref.isra.12>:
    d87c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d880:	mov	r7, r0
    d884:	sub	sp, sp, #12
    d888:	mov	r0, r3
    d88c:	mov	r9, r1
    d890:	mov	r8, r2
    d894:	mov	fp, r3
    d898:	bl	41fc <strlen@plt>
    d89c:	ldrd	r2, [r9]
    d8a0:	sub	r1, r2, #-1073741823	; 0xc0000001
    d8a4:	mov	sl, r0
    d8a8:	ldr	r0, [r8]
    d8ac:	add	r6, sl, #3
    d8b0:	bic	r6, r6, #3
    d8b4:	ldr	r4, [r0, r1, lsl #2]
    d8b8:	ldmib	r4, {r1, r5}
    d8bc:	add	ip, r6, r5
    d8c0:	cmp	ip, r1
    d8c4:	bhi	d908 <sas7bdat_make_text_ref.isra.12+0x8c>
    d8c8:	ldrd	r8, [r4, #16]
    d8cc:	ldr	r2, [r4]
    d8d0:	add	r0, r2, r5
    d8d4:	mov	r1, fp
    d8d8:	mov	r2, r6
    d8dc:	bl	42bc <strncpy@plt>
    d8e0:	ldr	r3, [r4, #8]
    d8e4:	add	r5, r5, #28
    d8e8:	add	r6, r3, r6
    d8ec:	mov	r0, r7
    d8f0:	strh	r5, [r7, #2]
    d8f4:	strh	r8, [r7]
    d8f8:	strh	sl, [r7, #4]
    d8fc:	str	r6, [r4, #8]
    d900:	add	sp, sp, #12
    d904:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d908:	adds	r2, r2, #1
    d90c:	adc	r3, r3, #0
    d910:	lsl	r1, r2, #2
    d914:	strd	r2, [r9]
    d918:	bl	3ff8 <realloc@plt>
    d91c:	ldr	r3, [r4, #4]
    d920:	mov	r1, #24
    d924:	mov	r5, r3
    d928:	str	r0, [r8]
    d92c:	str	r0, [sp, #4]
    d930:	mov	r0, #1
    d934:	ldrd	r8, [r9]
    d938:	bl	3d58 <calloc@plt>
    d93c:	str	r5, [sp]
    d940:	mov	r4, r0
    d944:	mov	r0, r5
    d948:	bl	410c <malloc@plt>
    d94c:	ldr	r3, [sp]
    d950:	sub	r1, r8, #-1073741823	; 0xc0000001
    d954:	str	r3, [r4, #4]
    d958:	subs	r8, r8, #1
    d95c:	ldr	r3, [sp, #4]
    d960:	sbc	r9, r9, #0
    d964:	ldr	r5, [r4, #8]
    d968:	strd	r8, [r4, #16]
    d96c:	str	r0, [r4]
    d970:	mov	r2, r0
    d974:	str	r4, [r3, r1, lsl #2]
    d978:	b	d8d0 <sas7bdat_make_text_ref.isra.12+0x54>

0000d97c <sas7bdat_emit_header_and_meta_pages>:
    d97c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d980:	sub	sp, sp, #380	; 0x17c
    d984:	ldr	sl, [r0, #300]	; 0x12c
    d988:	str	r0, [sp, #172]	; 0xac
    d98c:	bl	d37c <sas7bdat_row_length>
    d990:	ldr	r9, [pc, #1208]	; de50 <sas7bdat_emit_header_and_meta_pages+0x4d4>
    d994:	add	r9, pc, r9
    d998:	cmp	r0, #0
    d99c:	moveq	r3, #36	; 0x24
    d9a0:	streq	r3, [sp, #184]	; 0xb8
    d9a4:	bne	d9b4 <sas7bdat_emit_header_and_meta_pages+0x38>
    d9a8:	ldr	r0, [sp, #184]	; 0xb8
    d9ac:	add	sp, sp, #380	; 0x17c
    d9b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d9b4:	ldr	r3, [sp, #172]	; 0xac
    d9b8:	ldr	r4, [r3, #16]
    d9bc:	cmp	r4, #0
    d9c0:	bne	da04 <sas7bdat_emit_header_and_meta_pages+0x88>
    d9c4:	mov	r0, r3
    d9c8:	ldr	r5, [sl]
    d9cc:	bl	d37c <sas7bdat_row_length>
    d9d0:	mov	r3, r4
    d9d4:	ldrd	r6, [r5, #32]
    d9d8:	ldrd	r4, [r5, #40]	; 0x28
    d9dc:	mov	r2, r0
    d9e0:	subs	r0, r6, r4
    d9e4:	sbc	r1, r7, r5
    d9e8:	bl	238ec <__aeabi_ldivmod>
    d9ec:	cmp	r0, #0
    d9f0:	moveq	r3, #35	; 0x23
    d9f4:	streq	r3, [sp, #184]	; 0xb8
    d9f8:	beq	d9a8 <sas7bdat_emit_header_and_meta_pages+0x2c>
    d9fc:	ldr	r3, [sp, #172]	; 0xac
    da00:	ldr	r4, [r3, #16]
    da04:	ldr	r3, [sp, #172]	; 0xac
    da08:	ldr	fp, [sl]
    da0c:	ldr	r3, [r3, #300]	; 0x12c
    da10:	ldr	r1, [r3, #4]
    da14:	ldr	r3, [r3]
    da18:	ldr	r2, [r1]
    da1c:	ldr	lr, [r3, #32]
    da20:	ldr	ip, [r3, #40]	; 0x28
    da24:	subs	r0, r2, #1
    da28:	sub	lr, lr, ip
    da2c:	ldr	r3, [r3, #48]	; 0x30
    da30:	bmi	de28 <sas7bdat_emit_header_and_meta_pages+0x4ac>
    da34:	ldr	ip, [r1, #16]
    da38:	mov	r8, #1
    da3c:	mov	r1, lr
    da40:	add	ip, ip, r2, lsl #2
    da44:	ldr	r2, [ip, #-4]!
    da48:	sub	r0, r0, #1
    da4c:	ldr	r2, [r2, #8]
    da50:	add	r2, r3, r2
    da54:	cmp	r2, r1
    da58:	movhi	r1, lr
    da5c:	addhi	r8, r8, #1
    da60:	cmn	r0, #1
    da64:	sub	r1, r1, r2
    da68:	bne	da44 <sas7bdat_emit_header_and_meta_pages+0xc8>
    da6c:	cmp	r4, #1
    da70:	moveq	r4, fp
    da74:	moveq	r0, #0
    da78:	beq	dabc <sas7bdat_emit_header_and_meta_pages+0x140>
    da7c:	ldr	r0, [sp, #172]	; 0xac
    da80:	bl	d37c <sas7bdat_row_length>
    da84:	ldrd	r4, [fp, #40]	; 0x28
    da88:	ldrd	r6, [fp, #32]
    da8c:	mov	r3, #0
    da90:	mov	r2, r0
    da94:	subs	r0, r6, r4
    da98:	sbc	r1, r7, r5
    da9c:	bl	238ec <__aeabi_ldivmod>
    daa0:	ldr	r3, [sp, #172]	; 0xac
    daa4:	ldr	r3, [r3, #80]	; 0x50
    daa8:	mov	r1, r0
    daac:	sub	r0, r0, #1
    dab0:	add	r0, r0, r3
    dab4:	bl	232d8 <__divsi3>
    dab8:	ldr	r4, [sl]
    dabc:	add	r8, r0, r8
    dac0:	mov	r2, r8
    dac4:	asr	r3, r8, #31
    dac8:	add	r1, sp, #208	; 0xd0
    dacc:	mov	r6, r1
    dad0:	strd	r2, [fp, #56]	; 0x38
    dad4:	str	r1, [sp, #188]	; 0xbc
    dad8:	mov	r0, r1
    dadc:	mov	r2, #164	; 0xa4
    dae0:	mov	r1, #0
    dae4:	bl	42a4 <memset@plt>
    dae8:	ldr	r3, [r4, #4]
    daec:	mov	r2, #34	; 0x22
    daf0:	cmp	r3, #0
    daf4:	moveq	r3, r2
    daf8:	movne	r3, #51	; 0x33
    dafc:	strb	r3, [sp, #240]	; 0xf0
    db00:	strb	r2, [sp, #243]	; 0xf3
    db04:	bl	3eb4 <machine_is_little_endian@plt>
    db08:	ldr	r3, [pc, #836]	; de54 <sas7bdat_emit_header_and_meta_pages+0x4d8>
    db0c:	mov	r1, #49	; 0x31
    db10:	add	r3, pc, r3
    db14:	strb	r1, [sp, #247]	; 0xf7
    db18:	mov	r1, #20
    db1c:	strb	r1, [sp, #278]	; 0x116
    db20:	add	lr, r3, #12
    db24:	ldr	r2, [pc, #812]	; de58 <sas7bdat_emit_header_and_meta_pages+0x4dc>
    db28:	mov	ip, r6
    db2c:	adds	r5, r0, #0
    db30:	ldm	r3, {r0, r1}
    db34:	add	r3, sp, #292	; 0x124
    db38:	movne	r5, #1
    db3c:	stm	r3, {r0, r1}
    db40:	ldm	lr, {r0, r1}
    db44:	add	r3, sp, #364	; 0x16c
    db48:	strb	r5, [sp, #245]	; 0xf5
    db4c:	stm	r3, {r0, r1}
    db50:	ldr	lr, [r9, r2]
    db54:	ldr	r0, [lr]
    db58:	ldr	r1, [lr, #4]
    db5c:	ldr	r2, [lr, #8]
    db60:	ldr	r3, [lr, #12]
    db64:	stmia	ip!, {r0, r1, r2, r3}
    db68:	ldr	r0, [lr, #16]
    db6c:	ldr	r1, [lr, #20]
    db70:	ldr	r2, [lr, #24]
    db74:	ldr	r3, [lr, #28]
    db78:	stmia	ip!, {r0, r1, r2, r3}
    db7c:	mov	r2, #156	; 0x9c
    db80:	add	r1, sp, #216	; 0xd8
    db84:	mov	r0, sp
    db88:	bl	3f20 <memcpy@plt>
    db8c:	ldm	r6, {r2, r3}
    db90:	mov	r1, r4
    db94:	ldr	r0, [sp, #172]	; 0xac
    db98:	bl	40b8 <sas_write_header@plt>
    db9c:	subs	r3, r0, #0
    dba0:	str	r3, [sp, #184]	; 0xb8
    dba4:	bne	d9a8 <sas7bdat_emit_header_and_meta_pages+0x2c>
    dba8:	ldr	r3, [sp, #172]	; 0xac
    dbac:	mov	r0, #0
    dbb0:	mov	r1, #0
    dbb4:	ldr	r3, [r3, #300]	; 0x12c
    dbb8:	strd	r0, [sp, #160]	; 0xa0
    dbbc:	ldr	r9, [r3]
    dbc0:	ldr	r5, [r3, #4]
    dbc4:	ldr	r0, [r9, #32]
    dbc8:	bl	410c <malloc@plt>
    dbcc:	add	r3, sp, #192	; 0xc0
    dbd0:	str	r3, [sp, #176]	; 0xb0
    dbd4:	add	r3, sp, #200	; 0xc8
    dbd8:	str	r3, [sp, #180]	; 0xb4
    dbdc:	str	r0, [sp, #168]	; 0xa8
    dbe0:	ldrd	r2, [r5]
    dbe4:	ldrd	r0, [sp, #160]	; 0xa0
    dbe8:	cmp	r0, r2
    dbec:	sbcs	r3, r1, r3
    dbf0:	bge	de38 <sas7bdat_emit_header_and_meta_pages+0x4bc>
    dbf4:	ldr	r4, [sp, #168]	; 0xa8
    dbf8:	ldr	r2, [r9, #32]
    dbfc:	mov	r1, #0
    dc00:	mov	r0, r4
    dc04:	bl	42a4 <memset@plt>
    dc08:	ldr	r1, [r9, #40]	; 0x28
    dc0c:	mov	ip, r4
    dc10:	add	r4, r4, r1
    dc14:	mov	r3, #0
    dc18:	ldr	r6, [r9, #32]
    dc1c:	ldr	r7, [r9, #48]	; 0x30
    dc20:	ldrd	sl, [sp, #160]	; 0xa0
    dc24:	strh	r3, [r4, #-8]
    dc28:	ldr	r2, [r5, #16]
    dc2c:	sub	r1, r6, r1
    dc30:	ldr	r3, [r2, sl, lsl #2]
    dc34:	ldr	r2, [r3, #8]
    dc38:	add	r0, r7, r2
    dc3c:	cmp	r0, r1
    dc40:	bhi	de40 <sas7bdat_emit_header_and_meta_pages+0x4c4>
    dc44:	ldrd	r0, [r5]
    dc48:	cmp	sl, r0
    dc4c:	sbcs	r1, fp, r1
    dc50:	bge	de30 <sas7bdat_emit_header_and_meta_pages+0x4b4>
    dc54:	sub	r8, r7, ip
    dc58:	mov	r1, r8
    dc5c:	mov	r8, r9
    dc60:	mov	r9, r1
    dc64:	b	dcdc <sas7bdat_emit_header_and_meta_pages+0x360>
    dc68:	ldr	r2, [r3, #16]
    dc6c:	mov	r1, #1
    dc70:	cmp	r2, #0
    dc74:	movne	r2, #4
    dc78:	strb	r1, [r4, #9]
    dc7c:	strb	r2, [r4, #8]
    dc80:	ldmib	r3, {r1, r2}
    dc84:	ldr	r3, [sp, #168]	; 0xa8
    dc88:	sub	r6, r6, r2
    dc8c:	add	r0, r3, r6
    dc90:	bl	3f20 <memcpy@plt>
    dc94:	ldrd	r2, [r5]
    dc98:	ldr	r1, [sp, #160]	; 0xa0
    dc9c:	adds	sl, sl, #1
    dca0:	adc	fp, fp, #0
    dca4:	sub	r0, sl, r1
    dca8:	cmp	sl, r2
    dcac:	sbcs	r3, fp, r3
    dcb0:	uxth	r0, r0
    dcb4:	add	r1, r9, r4
    dcb8:	bge	ddd8 <sas7bdat_emit_header_and_meta_pages+0x45c>
    dcbc:	ldr	r2, [r5, #16]
    dcc0:	sub	r1, r6, r1
    dcc4:	add	r4, r4, r7
    dcc8:	ldr	r3, [r2, sl, lsl #2]
    dccc:	ldr	r2, [r3, #8]
    dcd0:	add	ip, r7, r2
    dcd4:	cmp	ip, r1
    dcd8:	bhi	ddd8 <sas7bdat_emit_header_and_meta_pages+0x45c>
    dcdc:	ldr	r1, [r8, #4]
    dce0:	ldr	ip, [r3]
    dce4:	cmp	r1, #0
    dce8:	bne	dd2c <sas7bdat_emit_header_and_meta_pages+0x3b0>
    dcec:	sub	r1, r6, r2
    dcf0:	str	r2, [r4, #4]
    dcf4:	str	r1, [r4]
    dcf8:	ldr	r2, [r3, #12]
    dcfc:	cmp	r2, #0
    dd00:	bne	dc68 <sas7bdat_emit_header_and_meta_pages+0x2ec>
    dd04:	ldr	r2, [r3]
    dd08:	bic	r2, r2, #2
    dd0c:	add	r2, r2, #4
    dd10:	cmp	r2, #1
    dd14:	movhi	r2, #0
    dd18:	movls	r2, #1
    dd1c:	strb	r2, [r4, #9]
    dd20:	ldr	r2, [r3, #4]
    dd24:	str	ip, [r2]
    dd28:	b	dc80 <sas7bdat_emit_header_and_meta_pages+0x304>
    dd2c:	ldr	lr, [sp, #176]	; 0xb0
    dd30:	sub	r1, r6, r2
    dd34:	mov	r0, #0
    dd38:	str	r2, [sp, #200]	; 0xc8
    dd3c:	str	r0, [sp, #196]	; 0xc4
    dd40:	str	r1, [sp, #192]	; 0xc0
    dd44:	ldr	r2, [sp, #180]	; 0xb4
    dd48:	ldm	lr!, {r0, r1}
    dd4c:	mov	lr, #0
    dd50:	str	lr, [sp, #204]	; 0xcc
    dd54:	str	r0, [r4]
    dd58:	str	r1, [r4, #4]
    dd5c:	ldm	r2!, {r0, r1}
    dd60:	str	r0, [r4, #8]
    dd64:	str	r1, [r4, #12]
    dd68:	ldr	r2, [r3, #12]
    dd6c:	cmp	r2, lr
    dd70:	beq	dd90 <sas7bdat_emit_header_and_meta_pages+0x414>
    dd74:	ldr	r2, [r3, #16]
    dd78:	mov	r1, #1
    dd7c:	cmp	r2, lr
    dd80:	movne	r2, #4
    dd84:	strb	r1, [r4, #17]
    dd88:	strb	r2, [r4, #16]
    dd8c:	b	dc80 <sas7bdat_emit_header_and_meta_pages+0x304>
    dd90:	ldr	r2, [r3]
    dd94:	bic	r2, r2, #2
    dd98:	add	r2, r2, #4
    dd9c:	cmp	r2, #1
    dda0:	movhi	r2, #0
    dda4:	movls	r2, #1
    dda8:	cmp	ip, #-16777216	; 0xff000000
    ddac:	strb	r2, [r4, #17]
    ddb0:	bcc	dd20 <sas7bdat_emit_header_and_meta_pages+0x3a4>
    ddb4:	ldr	r2, [sp, #188]	; 0xbc
    ddb8:	mov	r0, ip
    ddbc:	asr	r1, ip, #31
    ddc0:	ldr	ip, [r3, #4]
    ddc4:	strd	r0, [sp, #208]	; 0xd0
    ddc8:	ldm	r2!, {r0, r1}
    ddcc:	str	r0, [ip]
    ddd0:	str	r1, [ip, #4]
    ddd4:	b	dc80 <sas7bdat_emit_header_and_meta_pages+0x304>
    ddd8:	mov	r9, r8
    dddc:	strd	sl, [sp, #160]	; 0xa0
    dde0:	ldr	r3, [r9, #4]
    dde4:	ldr	r1, [sp, #168]	; 0xa8
    dde8:	cmp	r3, #0
    ddec:	ldr	r3, [sp, #168]	; 0xa8
    ddf0:	strhne	r0, [r3, #34]	; 0x22
    ddf4:	strhne	r0, [r3, #36]	; 0x24
    ddf8:	strheq	r0, [r3, #18]
    ddfc:	strheq	r0, [r3, #20]
    de00:	ldr	r0, [sp, #172]	; 0xac
    de04:	ldr	r2, [r9, #32]
    de08:	bl	4454 <readstat_write_bytes@plt>
    de0c:	cmp	r0, #0
    de10:	beq	dbe0 <sas7bdat_emit_header_and_meta_pages+0x264>
    de14:	ldr	sl, [sp, #168]	; 0xa8
    de18:	str	r0, [sp, #184]	; 0xb8
    de1c:	mov	r0, sl
    de20:	bl	3ec0 <free@plt>
    de24:	b	d9a8 <sas7bdat_emit_header_and_meta_pages+0x2c>
    de28:	mov	r8, #1
    de2c:	b	da6c <sas7bdat_emit_header_and_meta_pages+0xf0>
    de30:	mov	r0, #0
    de34:	b	dde0 <sas7bdat_emit_header_and_meta_pages+0x464>
    de38:	ldr	sl, [sp, #168]	; 0xa8
    de3c:	b	de1c <sas7bdat_emit_header_and_meta_pages+0x4a0>
    de40:	mov	r3, #35	; 0x23
    de44:	ldr	sl, [sp, #168]	; 0xa8
    de48:	str	r3, [sp, #184]	; 0xb8
    de4c:	b	de1c <sas7bdat_emit_header_and_meta_pages+0x4a0>
    de50:	.word	0x00036664
    de54:	.word	0x00016c0c
    de58:	.word	0x000002f0

0000de5c <sas7bdat_end_data>:
    de5c:	ldr	r2, [r0, #16]
    de60:	cmp	r2, #1
    de64:	beq	de74 <sas7bdat_end_data+0x18>
    de68:	ldr	r3, [r0, #300]	; 0x12c
    de6c:	ldr	r1, [r3]
    de70:	b	4478 <sas_fill_page@plt>
    de74:	b	d97c <sas7bdat_emit_header_and_meta_pages>

0000de78 <sas7bdat_module_ctx_free>:
    de78:	push	{r4, lr}
    de7c:	mov	r4, r0
    de80:	ldr	r0, [r0]
    de84:	bl	3ec0 <free@plt>
    de88:	ldr	r0, [r4, #4]
    de8c:	bl	d598 <sas7bdat_subheader_array_free>
    de90:	mov	r0, r4
    de94:	pop	{r4, lr}
    de98:	b	3ec0 <free@plt>

0000de9c <sas7bdat_begin_data>:
    de9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    dea0:	mov	r1, #8
    dea4:	sub	sp, sp, #100	; 0x64
    dea8:	mov	fp, r0
    deac:	mov	r0, #1
    deb0:	bl	3d58 <calloc@plt>
    deb4:	ldr	r1, [fp, #12]
    deb8:	str	r0, [sp, #44]	; 0x2c
    debc:	mov	r0, fp
    dec0:	bl	434c <sas_header_info_init@plt>
    dec4:	mov	r7, r0
    dec8:	mov	r0, fp
    decc:	bl	d37c <sas7bdat_row_length>
    ded0:	ldr	r5, [fp, #28]
    ded4:	ldrd	r2, [r7, #48]	; 0x30
    ded8:	ldr	lr, [r7, #4]
    dedc:	lsl	r6, r5, #4
    dee0:	mov	r9, r3
    dee4:	add	r3, r5, r5, lsl #1
    dee8:	mov	r8, r2
    deec:	cmp	lr, #0
    def0:	lsl	r3, r3, #2
    def4:	addeq	r6, r3, #20
    def8:	addne	r6, r6, #28
    defc:	strd	r8, [sp]
    df00:	adds	r8, r8, r6
    df04:	adc	r9, r9, #0
    df08:	lsl	r4, r5, #3
    df0c:	strd	r8, [sp, #8]
    df10:	ldrd	r8, [sp]
    df14:	add	sl, r4, #20
    df18:	add	r4, r4, #28
    df1c:	adds	r8, r8, sl
    df20:	adc	r9, r9, #0
    df24:	ldrd	r2, [r7, #32]
    df28:	strd	r8, [sp, #16]
    df2c:	ldrd	r8, [sp]
    df30:	ldr	ip, [r7, #40]	; 0x28
    df34:	ldr	r1, [fp, #16]
    df38:	adds	r8, r8, r4
    df3c:	adc	r9, r9, #0
    df40:	mov	sl, r5
    df44:	strd	r8, [sp, #24]
    df48:	ldrd	r8, [sp]
    df4c:	mov	r5, r7
    df50:	adds	r8, r8, r0
    df54:	adc	r9, r9, #0
    df58:	strd	r8, [sp, #32]
    df5c:	cmp	r1, #0
    df60:	sub	r4, r2, ip
    df64:	bne	e270 <sas7bdat_begin_data+0x3d4>
    df68:	cmp	r0, r4
    df6c:	movls	r6, r4
    df70:	movls	r7, #0
    df74:	bhi	e290 <sas7bdat_begin_data+0x3f4>
    df78:	cmp	lr, #0
    df7c:	beq	e2a0 <sas7bdat_begin_data+0x404>
    df80:	ldrd	r8, [sp, #24]
    df84:	cmp	r6, r8
    df88:	sbcs	r8, r7, r9
    df8c:	blt	e290 <sas7bdat_begin_data+0x3f4>
    df90:	ldrd	r8, [sp, #8]
    df94:	cmp	r6, r8
    df98:	sbcs	r6, r7, r9
    df9c:	blt	e290 <sas7bdat_begin_data+0x3f4>
    dfa0:	ldr	r3, [sp, #44]	; 0x2c
    dfa4:	mov	r7, r5
    dfa8:	mov	r1, #16
    dfac:	str	r7, [r3]
    dfb0:	mov	r0, #1
    dfb4:	bl	3d58 <calloc@plt>
    dfb8:	mov	r2, #1
    dfbc:	mov	r3, #0
    dfc0:	mov	r5, sl
    dfc4:	mov	r6, r0
    dfc8:	mov	r0, #4
    dfcc:	strd	r2, [r6]
    dfd0:	bl	410c <malloc@plt>
    dfd4:	ldr	r3, [sp]
    dfd8:	mov	r1, #24
    dfdc:	rsb	sl, r3, #-16777216	; 0xff000000
    dfe0:	add	sl, sl, #16711680	; 0xff0000
    dfe4:	ldr	r3, [r7, #4]
    dfe8:	add	sl, sl, #65280	; 0xff00
    dfec:	cmp	r3, #0
    dff0:	add	sl, sl, #228	; 0xe4
    dff4:	add	sl, sl, r4
    dff8:	moveq	r4, #4
    dffc:	movne	r4, #8
    e000:	sub	r4, sl, r4
    e004:	mov	r8, r0
    e008:	str	r8, [r6, #8]
    e00c:	mov	r0, #1
    e010:	bl	3d58 <calloc@plt>
    e014:	mov	r9, r0
    e018:	mov	r0, r4
    e01c:	bl	410c <malloc@plt>
    e020:	mov	r2, #0
    e024:	mov	r3, #0
    e028:	mov	r1, #24
    e02c:	strd	r2, [r9, #16]
    e030:	str	r4, [r9, #4]
    e034:	str	r9, [r8]
    e038:	str	r0, [r9]
    e03c:	mov	r0, #1
    e040:	bl	3d58 <calloc@plt>
    e044:	mov	r1, #4
    e048:	mov	r4, r0
    e04c:	str	r0, [sp, #32]
    e050:	add	r0, r5, #4
    e054:	mov	r2, r0
    e058:	asr	r3, r0, #31
    e05c:	strd	r2, [r4]
    e060:	bl	3d58 <calloc@plt>
    e064:	ldr	r2, [r7, #4]
    e068:	ldr	r3, [fp, #28]
    e06c:	cmp	r2, #0
    e070:	str	r0, [r4, #16]
    e074:	beq	e700 <sas7bdat_begin_data+0x864>
    e078:	lsl	r3, r3, #3
    e07c:	add	r5, r3, #28
    e080:	mov	r4, #16
    e084:	mov	r8, #8
    e088:	mov	r1, r8
    e08c:	mov	r0, r5
    e090:	bl	43b8 <sas_subheader_remainder@plt>
    e094:	mov	r1, r5
    e098:	mov	r9, r0
    e09c:	mvn	r0, #0
    e0a0:	bl	d534 <sas7bdat_subheader_init>
    e0a4:	ldr	r3, [r0, #4]
    e0a8:	str	r0, [sp, #56]	; 0x38
    e0ac:	strh	r9, [r3, r8]
    e0b0:	ldr	r3, [fp, #28]
    e0b4:	ldr	r2, [r0, #4]
    e0b8:	cmp	r3, #0
    e0bc:	add	r4, r2, r4
    e0c0:	ble	e120 <sas7bdat_begin_data+0x284>
    e0c4:	add	r9, r6, #8
    e0c8:	mov	r5, #0
    e0cc:	add	r8, sp, #88	; 0x58
    e0d0:	mov	r1, r5
    e0d4:	mov	r0, fp
    e0d8:	bl	437c <readstat_get_variable@plt>
    e0dc:	bl	4364 <readstat_variable_get_name@plt>
    e0e0:	mov	r2, r9
    e0e4:	mov	r1, r6
    e0e8:	add	r5, r5, #1
    e0ec:	add	r4, r4, #8
    e0f0:	mov	r3, r0
    e0f4:	mov	r0, r8
    e0f8:	bl	d87c <sas7bdat_make_text_ref.isra.12>
    e0fc:	ldrh	r3, [sp, #88]	; 0x58
    e100:	strh	r3, [r4, #-8]
    e104:	ldrh	r3, [sp, #90]	; 0x5a
    e108:	strh	r3, [r4, #-6]
    e10c:	ldrh	r3, [sp, #92]	; 0x5c
    e110:	strh	r3, [r4, #-4]
    e114:	ldr	r3, [fp, #28]
    e118:	cmp	r5, r3
    e11c:	blt	e0d0 <sas7bdat_begin_data+0x234>
    e120:	ldr	r2, [r7, #4]
    e124:	cmp	r2, #0
    e128:	addeq	r3, r3, r3, lsl #1
    e12c:	lslne	r3, r3, #4
    e130:	lsleq	r9, r3, #2
    e134:	addne	r9, r3, #28
    e138:	addeq	r9, r9, #20
    e13c:	movne	r4, #8
    e140:	moveq	r4, #4
    e144:	mov	r1, r4
    e148:	mov	r0, r9
    e14c:	movne	r5, #16
    e150:	moveq	r5, #12
    e154:	bl	43b8 <sas_subheader_remainder@plt>
    e158:	mov	r1, r9
    e15c:	mov	r8, r0
    e160:	mvn	r0, #3
    e164:	bl	d534 <sas7bdat_subheader_init>
    e168:	mov	r2, #0
    e16c:	mov	r3, #0
    e170:	ldr	r1, [r0, #4]
    e174:	str	r0, [sp, #52]	; 0x34
    e178:	strh	r8, [r1, r4]
    e17c:	ldr	r1, [fp, #28]
    e180:	ldr	r9, [r0, #4]
    e184:	cmp	r1, #0
    e188:	add	r9, r9, r5
    e18c:	strd	r2, [sp, #88]	; 0x58
    e190:	ble	e2c4 <sas7bdat_begin_data+0x428>
    e194:	add	r3, sp, #88	; 0x58
    e198:	str	r6, [sp, #8]
    e19c:	mov	r5, #0
    e1a0:	str	r3, [sp]
    e1a4:	mov	r6, r9
    e1a8:	b	e1d8 <sas7bdat_begin_data+0x33c>
    e1ac:	str	r0, [r4]
    e1b0:	strh	sl, [r4, #4]
    e1b4:	ldrd	r0, [sp, #88]	; 0x58
    e1b8:	ldr	ip, [fp, #28]
    e1bc:	add	r5, r5, #1
    e1c0:	adds	r8, r0, r2
    e1c4:	adc	r9, r1, r3
    e1c8:	cmp	r5, ip
    e1cc:	add	r6, r4, #8
    e1d0:	strd	r8, [sp, #88]	; 0x58
    e1d4:	bge	e2c0 <sas7bdat_begin_data+0x424>
    e1d8:	mov	r1, r5
    e1dc:	mov	r0, fp
    e1e0:	bl	437c <readstat_get_variable@plt>
    e1e4:	mov	r8, r0
    e1e8:	bl	4364 <readstat_variable_get_name@plt>
    e1ec:	mov	r4, r0
    e1f0:	mov	r0, r8
    e1f4:	bl	41d8 <readstat_variable_get_type@plt>
    e1f8:	mov	r9, r0
    e1fc:	mov	r0, r4
    e200:	bl	41fc <strlen@plt>
    e204:	ldr	r2, [r7, #4]
    e208:	mov	r4, r6
    e20c:	cmp	r0, #8
    e210:	movhi	sl, #2048	; 0x800
    e214:	movls	sl, #4
    e218:	cmp	r2, #0
    e21c:	addne	r4, r6, #8
    e220:	ldrne	r2, [sp]
    e224:	ldreq	r3, [sp, #88]	; 0x58
    e228:	ldmne	r2!, {r0, r1}
    e22c:	mov	r2, #8
    e230:	streq	r3, [r4], #4
    e234:	mov	r3, #0
    e238:	strne	r0, [r6]
    e23c:	strne	r1, [r6, #4]
    e240:	cmp	r9, r3
    e244:	movne	r1, #1
    e248:	mov	r0, r2
    e24c:	strbne	r1, [r4, #6]
    e250:	bne	e1ac <sas7bdat_begin_data+0x310>
    e254:	mov	r3, #2
    e258:	strb	r3, [r4, #6]
    e25c:	mov	r0, r8
    e260:	bl	42c8 <readstat_variable_get_storage_width@plt>
    e264:	mov	r3, #0
    e268:	mov	r2, r0
    e26c:	b	e1ac <sas7bdat_begin_data+0x310>
    e270:	cmp	r1, #1
    e274:	mov	r6, r4
    e278:	mov	r7, #0
    e27c:	bne	df78 <sas7bdat_begin_data+0xdc>
    e280:	ldrd	r8, [sp, #32]
    e284:	cmp	r4, r8
    e288:	sbcs	r8, r7, r9
    e28c:	bge	df78 <sas7bdat_begin_data+0xdc>
    e290:	adds	r2, r2, r2
    e294:	adc	r3, r3, r3
    e298:	strd	r2, [r5, #32]
    e29c:	b	df5c <sas7bdat_begin_data+0xc0>
    e2a0:	ldrd	r8, [sp, #16]
    e2a4:	cmp	r6, r8
    e2a8:	sbcs	r8, r7, r9
    e2ac:	bge	df90 <sas7bdat_begin_data+0xf4>
    e2b0:	adds	r2, r2, r2
    e2b4:	adc	r3, r3, r3
    e2b8:	strd	r2, [r5, #32]
    e2bc:	b	df5c <sas7bdat_begin_data+0xc0>
    e2c0:	ldr	r6, [sp, #8]
    e2c4:	ldr	r1, [r7, #4]
    e2c8:	ldr	r3, [sp, #32]
    e2cc:	cmp	r1, #0
    e2d0:	movne	r1, #808	; 0x328
    e2d4:	moveq	r1, #480	; 0x1e0
    e2d8:	ldr	r0, [pc, #1404]	; e85c <sas7bdat_begin_data+0x9c0>
    e2dc:	ldr	r5, [r3, #16]
    e2e0:	bl	d534 <sas7bdat_subheader_init>
    e2e4:	ldr	r3, [r7, #4]
    e2e8:	cmp	r3, #0
    e2ec:	mov	r4, r0
    e2f0:	bne	e714 <sas7bdat_begin_data+0x878>
    e2f4:	mov	r0, fp
    e2f8:	bl	d37c <sas7bdat_row_length>
    e2fc:	ldr	lr, [r4, #4]
    e300:	ldr	r1, [fp, #28]
    e304:	ldr	r2, [r7, #32]
    e308:	ldr	ip, [fp, #80]	; 0x50
    e30c:	mvn	r3, #0
    e310:	str	r0, [lr, #20]
    e314:	ldr	r0, [r4, #4]
    e318:	str	ip, [r0, #24]
    e31c:	ldr	r0, [r4, #4]
    e320:	str	r1, [r0, #36]	; 0x24
    e324:	ldr	r1, [r4, #4]
    e328:	str	r2, [r1, #52]	; 0x34
    e32c:	ldr	r2, [r4, #4]
    e330:	str	r3, [r2, #64]	; 0x40
    e334:	str	r3, [r2, #68]	; 0x44
    e338:	ldr	r1, [r7, #4]
    e33c:	ldr	r3, [sp, #32]
    e340:	cmp	r1, #0
    e344:	str	r4, [r5]
    e348:	moveq	r1, #12
    e34c:	movne	r1, #24
    e350:	ldr	r0, [pc, #1288]	; e860 <sas7bdat_begin_data+0x9c4>
    e354:	ldr	r5, [r3, #16]
    e358:	bl	d534 <sas7bdat_subheader_init>
    e35c:	ldr	r3, [r7, #4]
    e360:	cmp	r3, #0
    e364:	mov	ip, r0
    e368:	bne	e7f8 <sas7bdat_begin_data+0x95c>
    e36c:	ldr	r3, [r0, #4]
    e370:	ldr	r2, [fp, #28]
    e374:	str	r2, [r3, #4]
    e378:	ldr	r4, [fp, #28]
    e37c:	mov	r1, #4
    e380:	str	ip, [r5, #4]
    e384:	mov	r0, r4
    e388:	bl	3d58 <calloc@plt>
    e38c:	cmp	r4, #0
    e390:	str	r0, [sp, #48]	; 0x30
    e394:	ble	e4c8 <sas7bdat_begin_data+0x62c>
    e398:	ldr	r3, [sp, #48]	; 0x30
    e39c:	mov	r9, #0
    e3a0:	sub	r3, r3, #4
    e3a4:	str	r3, [sp, #8]
    e3a8:	add	r3, sp, #88	; 0x58
    e3ac:	str	r3, [sp, #16]
    e3b0:	add	r3, r6, #8
    e3b4:	str	r3, [sp, #24]
    e3b8:	str	r6, [sp]
    e3bc:	mov	r1, r9
    e3c0:	mov	r0, fp
    e3c4:	bl	437c <readstat_get_variable@plt>
    e3c8:	ldr	r1, [r7, #4]
    e3cc:	add	r9, r9, #1
    e3d0:	cmp	r1, #0
    e3d4:	moveq	r1, #52	; 0x34
    e3d8:	movne	r1, #64	; 0x40
    e3dc:	mov	r5, r0
    e3e0:	ldr	r0, [pc, #1148]	; e864 <sas7bdat_begin_data+0x9c8>
    e3e4:	bl	d534 <sas7bdat_subheader_init>
    e3e8:	mov	r4, r0
    e3ec:	mov	r0, r5
    e3f0:	bl	3ee4 <readstat_variable_get_format@plt>
    e3f4:	mov	sl, r0
    e3f8:	mov	r0, r5
    e3fc:	bl	4400 <readstat_variable_get_label@plt>
    e400:	ldr	ip, [r7, #4]
    e404:	mov	r3, sl
    e408:	cmp	ip, #0
    e40c:	movne	r6, #46	; 0x2e
    e410:	moveq	r6, #34	; 0x22
    e414:	movne	r5, #52	; 0x34
    e418:	moveq	r5, #40	; 0x28
    e41c:	cmp	sl, #0
    e420:	ldr	r2, [sp, #24]
    e424:	ldr	r1, [sp]
    e428:	mov	r8, r0
    e42c:	ldr	r0, [sp, #16]
    e430:	beq	e464 <sas7bdat_begin_data+0x5c8>
    e434:	bl	d87c <sas7bdat_make_text_ref.isra.12>
    e438:	ldr	r3, [r4, #4]
    e43c:	ldrh	r2, [sp, #88]	; 0x58
    e440:	strh	r2, [r3, r6]
    e444:	ldr	r3, [r4, #4]
    e448:	ldrh	r2, [sp, #90]	; 0x5a
    e44c:	add	r3, r3, r6
    e450:	strh	r2, [r3, #2]
    e454:	ldr	r3, [r4, #4]
    e458:	ldrh	r2, [sp, #92]	; 0x5c
    e45c:	add	r6, r3, r6
    e460:	strh	r2, [r6, #4]
    e464:	cmp	r8, #0
    e468:	mov	r3, r8
    e46c:	ldr	r2, [sp, #24]
    e470:	ldr	r1, [sp]
    e474:	ldr	r0, [sp, #16]
    e478:	beq	e4ac <sas7bdat_begin_data+0x610>
    e47c:	bl	d87c <sas7bdat_make_text_ref.isra.12>
    e480:	ldr	r3, [r4, #4]
    e484:	ldrh	r2, [sp, #88]	; 0x58
    e488:	strh	r2, [r3, r5]
    e48c:	ldr	r3, [r4, #4]
    e490:	ldrh	r2, [sp, #90]	; 0x5a
    e494:	add	r3, r3, r5
    e498:	strh	r2, [r3, #2]
    e49c:	ldr	r3, [r4, #4]
    e4a0:	ldrh	r2, [sp, #92]	; 0x5c
    e4a4:	add	r5, r3, r5
    e4a8:	strh	r2, [r5, #4]
    e4ac:	ldr	r3, [fp, #28]
    e4b0:	ldr	r2, [sp, #8]
    e4b4:	cmp	r9, r3
    e4b8:	str	r4, [r2, #4]!
    e4bc:	str	r2, [sp, #8]
    e4c0:	blt	e3bc <sas7bdat_begin_data+0x520>
    e4c4:	ldr	r6, [sp]
    e4c8:	ldr	ip, [sp, #32]
    e4cc:	ldrd	r4, [r6]
    e4d0:	ldrd	r2, [ip]
    e4d4:	ldr	r0, [ip, #16]
    e4d8:	adds	r8, r2, r4
    e4dc:	adc	r9, r3, r5
    e4e0:	lsl	r1, r8, #2
    e4e4:	strd	r8, [ip]
    e4e8:	mov	r4, ip
    e4ec:	bl	3ff8 <realloc@plt>
    e4f0:	ldrd	r2, [r6]
    e4f4:	cmp	r2, #1
    e4f8:	sbcs	r3, r3, #0
    e4fc:	str	r0, [r4, #16]
    e500:	blt	e84c <sas7bdat_begin_data+0x9b0>
    e504:	mov	r2, #1
    e508:	mov	r3, #0
    e50c:	mov	r5, r0
    e510:	strd	r2, [sp]
    e514:	mov	r8, #8
    e518:	str	r7, [sp, #24]
    e51c:	str	fp, [sp, #60]	; 0x3c
    e520:	b	e52c <sas7bdat_begin_data+0x690>
    e524:	ldr	r3, [sp, #32]
    e528:	ldr	r5, [r3, #16]
    e52c:	ldr	r3, [r6, #8]
    e530:	ldr	r2, [sp, #24]
    e534:	add	r3, r3, r8
    e538:	mvn	r0, #2
    e53c:	ldr	r2, [r2, #4]
    e540:	ldr	sl, [r3, #-8]
    e544:	cmp	r2, #0
    e548:	moveq	r3, #16
    e54c:	movne	r3, #20
    e550:	moveq	fp, #32
    e554:	movne	fp, #36	; 0x24
    e558:	moveq	r7, #4
    e55c:	movne	r7, #8
    e560:	cmp	sl, #0
    e564:	moveq	r9, #0
    e568:	ldrne	r9, [sl, #8]
    e56c:	ldr	r2, [sp]
    e570:	add	r9, r9, fp
    e574:	add	r2, r2, #2
    e578:	mov	r1, r9
    e57c:	str	r2, [sp, #16]
    e580:	str	r3, [sp, #8]
    e584:	bl	d534 <sas7bdat_subheader_init>
    e588:	mov	r1, r7
    e58c:	add	r5, r5, r8
    e590:	add	r8, r8, #4
    e594:	mov	r4, r0
    e598:	mov	r0, r9
    e59c:	bl	43b8 <sas_subheader_remainder@plt>
    e5a0:	ldr	r2, [r4, #4]
    e5a4:	ldr	r3, [sp, #8]
    e5a8:	strh	r0, [r2, r7]
    e5ac:	ldr	r2, [r4, #4]
    e5b0:	ldr	r0, [pc, #688]	; e868 <sas7bdat_begin_data+0x9cc>
    e5b4:	add	r1, r2, r3
    e5b8:	str	r0, [r2, r3]
    e5bc:	str	r0, [r1, #4]
    e5c0:	ldr	r0, [r4, #4]
    e5c4:	ldr	r2, [sl, #8]
    e5c8:	ldr	r1, [sl]
    e5cc:	add	r0, r0, fp
    e5d0:	bl	3f20 <memcpy@plt>
    e5d4:	ldrd	sl, [sp]
    e5d8:	ldrd	r2, [r6]
    e5dc:	str	r4, [r5]
    e5e0:	mov	r0, sl
    e5e4:	adds	sl, sl, #1
    e5e8:	mov	r1, fp
    e5ec:	adc	fp, fp, #0
    e5f0:	cmp	r0, r2
    e5f4:	sbcs	r1, r1, r3
    e5f8:	strd	sl, [sp]
    e5fc:	blt	e524 <sas7bdat_begin_data+0x688>
    e600:	cmp	r2, #1
    e604:	sbcs	r3, r3, #0
    e608:	ldr	fp, [sp, #60]	; 0x3c
    e60c:	blt	e658 <sas7bdat_begin_data+0x7bc>
    e610:	mov	r4, #1
    e614:	mov	r5, #0
    e618:	mov	r7, #0
    e61c:	ldr	r3, [r6, #8]
    e620:	ldr	r8, [r3, r7]
    e624:	add	r7, r7, #4
    e628:	ldr	r0, [r8]
    e62c:	bl	3ec0 <free@plt>
    e630:	mov	r0, r8
    e634:	bl	3ec0 <free@plt>
    e638:	ldrd	r2, [r6]
    e63c:	mov	r0, r4
    e640:	adds	r4, r4, #1
    e644:	mov	r1, r5
    e648:	adc	r5, r5, #0
    e64c:	cmp	r0, r2
    e650:	sbcs	r3, r1, r3
    e654:	blt	e61c <sas7bdat_begin_data+0x780>
    e658:	ldr	r3, [sp, #16]
    e65c:	add	r4, r3, #2
    e660:	lsl	r7, r3, #2
    e664:	add	r8, r7, #4
    e668:	ldr	r0, [r6, #8]
    e66c:	bl	3ec0 <free@plt>
    e670:	mov	r0, r6
    e674:	bl	3ec0 <free@plt>
    e678:	ldr	r3, [sp, #32]
    e67c:	ldr	r0, [fp, #28]
    e680:	ldr	r5, [r3, #16]
    e684:	ldr	r3, [sp, #56]	; 0x38
    e688:	cmp	r0, #0
    e68c:	str	r3, [r5, r7]
    e690:	ldr	r3, [sp, #52]	; 0x34
    e694:	str	r3, [r5, r8]
    e698:	ble	e6b8 <sas7bdat_begin_data+0x81c>
    e69c:	ldr	r3, [sp, #48]	; 0x30
    e6a0:	add	r2, r5, r4, lsl #2
    e6a4:	add	r0, r3, r0, lsl #2
    e6a8:	ldr	r1, [r3], #4
    e6ac:	cmp	r3, r0
    e6b0:	str	r1, [r2], #4
    e6b4:	bne	e6a8 <sas7bdat_begin_data+0x80c>
    e6b8:	ldr	r0, [sp, #48]	; 0x30
    e6bc:	bl	3ec0 <free@plt>
    e6c0:	ldr	r3, [sp, #32]
    e6c4:	ldr	r4, [fp, #16]
    e6c8:	ldrd	r6, [r3]
    e6cc:	cmp	r4, #1
    e6d0:	strd	r6, [r3, #8]
    e6d4:	beq	e820 <sas7bdat_begin_data+0x984>
    e6d8:	ldr	r3, [sp, #44]	; 0x2c
    e6dc:	ldr	r2, [sp, #32]
    e6e0:	cmp	r4, #0
    e6e4:	str	r2, [r3, #4]
    e6e8:	str	r3, [fp, #300]	; 0x12c
    e6ec:	beq	e7b4 <sas7bdat_begin_data+0x918>
    e6f0:	mov	r6, #0
    e6f4:	mov	r0, r6
    e6f8:	add	sp, sp, #100	; 0x64
    e6fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e700:	lsl	r3, r3, #3
    e704:	add	r5, r3, #20
    e708:	mov	r4, #12
    e70c:	mov	r8, #4
    e710:	b	e088 <sas7bdat_begin_data+0x1ec>
    e714:	mov	r0, fp
    e718:	bl	d37c <sas7bdat_row_length>
    e71c:	ldr	r8, [fp, #80]	; 0x50
    e720:	ldr	r2, [fp, #28]
    e724:	add	ip, sp, #64	; 0x40
    e728:	asr	r9, r8, #31
    e72c:	mov	r3, #0
    e730:	strd	r8, [sp, #72]	; 0x48
    e734:	ldrd	r8, [r7, #32]
    e738:	str	r3, [sp, #68]	; 0x44
    e73c:	ldr	lr, [r4, #4]
    e740:	strd	r8, [sp, #88]	; 0x58
    e744:	asr	r3, r2, #31
    e748:	add	r9, sp, #72	; 0x48
    e74c:	strd	r2, [sp, #80]	; 0x50
    e750:	add	r8, sp, #80	; 0x50
    e754:	add	r2, sp, #88	; 0x58
    e758:	mvn	r3, #0
    e75c:	str	r0, [sp, #64]	; 0x40
    e760:	ldm	ip!, {r0, r1}
    e764:	str	r0, [lr, #40]	; 0x28
    e768:	str	r1, [lr, #44]	; 0x2c
    e76c:	ldr	ip, [r4, #4]
    e770:	ldm	r9!, {r0, r1}
    e774:	str	r0, [ip, #48]	; 0x30
    e778:	str	r1, [ip, #52]	; 0x34
    e77c:	ldr	ip, [r4, #4]
    e780:	ldm	r8!, {r0, r1}
    e784:	str	r0, [ip, #72]	; 0x48
    e788:	str	r1, [ip, #76]	; 0x4c
    e78c:	ldm	r2!, {r0, r1}
    e790:	ldr	ip, [r4, #4]
    e794:	str	r0, [ip, #104]	; 0x68
    e798:	str	r1, [ip, #108]	; 0x6c
    e79c:	ldr	r1, [r4, #4]
    e7a0:	str	r3, [r1, #128]	; 0x80
    e7a4:	str	r3, [r1, #132]	; 0x84
    e7a8:	str	r3, [r1, #136]	; 0x88
    e7ac:	str	r3, [r1, #140]	; 0x8c
    e7b0:	b	e338 <sas7bdat_begin_data+0x49c>
    e7b4:	mov	r0, fp
    e7b8:	bl	d97c <sas7bdat_emit_header_and_meta_pages>
    e7bc:	subs	r6, r0, #0
    e7c0:	beq	e6f0 <sas7bdat_begin_data+0x854>
    e7c4:	ldr	r5, [fp, #300]	; 0x12c
    e7c8:	cmp	r5, #0
    e7cc:	beq	e6f4 <sas7bdat_begin_data+0x858>
    e7d0:	ldr	r0, [r5]
    e7d4:	bl	3ec0 <free@plt>
    e7d8:	ldr	r0, [r5, #4]
    e7dc:	bl	d598 <sas7bdat_subheader_array_free>
    e7e0:	mov	r0, r5
    e7e4:	bl	3ec0 <free@plt>
    e7e8:	mov	r0, r6
    e7ec:	str	r4, [fp, #300]	; 0x12c
    e7f0:	add	sp, sp, #100	; 0x64
    e7f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e7f8:	ldr	r2, [fp, #28]
    e7fc:	add	r1, sp, #96	; 0x60
    e800:	ldr	lr, [r0, #4]
    e804:	asr	r3, r2, #31
    e808:	strd	r2, [r1, #-8]!
    e80c:	mov	r3, r1
    e810:	ldm	r3!, {r0, r1}
    e814:	str	r0, [lr, #8]
    e818:	str	r1, [lr, #12]
    e81c:	b	e378 <sas7bdat_begin_data+0x4dc>
    e820:	ldr	r1, [fp, #80]	; 0x50
    e824:	mov	r0, r5
    e828:	adds	r2, r6, r1
    e82c:	ldr	r5, [sp, #32]
    e830:	adc	r3, r7, r1, asr #31
    e834:	lsl	r1, r2, #2
    e838:	strd	r2, [r5, #8]
    e83c:	bl	3ff8 <realloc@plt>
    e840:	ldr	r4, [fp, #16]
    e844:	str	r0, [r5, #16]
    e848:	b	e6d8 <sas7bdat_begin_data+0x83c>
    e84c:	mov	r8, #12
    e850:	mov	r4, #4
    e854:	mov	r7, #8
    e858:	b	e668 <sas7bdat_begin_data+0x7cc>
    e85c:	.word	0xf7f7f7f7
    e860:	.word	0xf6f6f6f6
    e864:	.word	0xfffffbfe
    e868:	.word	0x20202020

0000e86c <readstat_begin_writing_sas7bdat>:
    e86c:	push	{r4, r5, lr}
    e870:	ldr	ip, [pc, #216]	; e950 <readstat_begin_writing_sas7bdat+0xe4>
    e874:	ldr	lr, [pc, #216]	; e954 <readstat_begin_writing_sas7bdat+0xe8>
    e878:	add	ip, pc, ip
    e87c:	add	lr, pc, lr
    e880:	str	lr, [r0, #292]	; 0x124
    e884:	str	ip, [r0, #236]	; 0xec
    e888:	ldr	r4, [pc, #200]	; e958 <readstat_begin_writing_sas7bdat+0xec>
    e88c:	ldr	lr, [pc, #200]	; e95c <readstat_begin_writing_sas7bdat+0xf0>
    e890:	ldr	ip, [pc, #200]	; e960 <readstat_begin_writing_sas7bdat+0xf4>
    e894:	ldr	r3, [r0, #8]
    e898:	add	r4, pc, r4
    e89c:	add	lr, pc, lr
    e8a0:	add	ip, pc, ip
    e8a4:	str	r4, [r0, #240]	; 0xf0
    e8a8:	str	lr, [r0, #244]	; 0xf4
    e8ac:	str	ip, [r0, #248]	; 0xf8
    e8b0:	ldr	r4, [pc, #172]	; e964 <readstat_begin_writing_sas7bdat+0xf8>
    e8b4:	ldr	lr, [pc, #172]	; e968 <readstat_begin_writing_sas7bdat+0xfc>
    e8b8:	ldr	ip, [pc, #172]	; e96c <readstat_begin_writing_sas7bdat+0x100>
    e8bc:	cmp	r3, #0
    e8c0:	moveq	r3, #9
    e8c4:	add	r4, pc, r4
    e8c8:	add	lr, pc, lr
    e8cc:	add	ip, pc, ip
    e8d0:	ldr	r5, [pc, #152]	; e970 <readstat_begin_writing_sas7bdat+0x104>
    e8d4:	streq	r3, [r0, #8]
    e8d8:	str	r4, [r0, #252]	; 0xfc
    e8dc:	ldr	r3, [pc, #144]	; e974 <readstat_begin_writing_sas7bdat+0x108>
    e8e0:	str	lr, [r0, #256]	; 0x100
    e8e4:	str	ip, [r0, #264]	; 0x108
    e8e8:	ldr	r4, [pc, #136]	; e978 <readstat_begin_writing_sas7bdat+0x10c>
    e8ec:	ldr	lr, [pc, #136]	; e97c <readstat_begin_writing_sas7bdat+0x110>
    e8f0:	ldr	ip, [pc, #136]	; e980 <readstat_begin_writing_sas7bdat+0x114>
    e8f4:	add	r5, pc, r5
    e8f8:	add	r4, pc, r4
    e8fc:	add	lr, pc, lr
    e900:	add	ip, pc, ip
    e904:	str	r4, [r0, #268]	; 0x10c
    e908:	str	lr, [r0, #272]	; 0x110
    e90c:	str	ip, [r0, #228]	; 0xe4
    e910:	ldr	r4, [pc, #108]	; e984 <readstat_begin_writing_sas7bdat+0x118>
    e914:	ldr	r5, [r5, r3]
    e918:	ldr	lr, [pc, #104]	; e988 <readstat_begin_writing_sas7bdat+0x11c>
    e91c:	ldr	ip, [pc, #104]	; e98c <readstat_begin_writing_sas7bdat+0x120>
    e920:	ldr	r3, [pc, #104]	; e990 <readstat_begin_writing_sas7bdat+0x124>
    e924:	add	r4, pc, r4
    e928:	add	lr, pc, lr
    e92c:	add	ip, pc, ip
    e930:	add	r3, pc, r3
    e934:	str	r5, [r0, #232]	; 0xe8
    e938:	str	r4, [r0, #276]	; 0x114
    e93c:	str	lr, [r0, #284]	; 0x11c
    e940:	str	ip, [r0, #288]	; 0x120
    e944:	str	r3, [r0, #280]	; 0x118
    e948:	pop	{r4, r5, lr}
    e94c:	b	3f68 <readstat_begin_writing_file@plt>
    e950:	.word	0xffffec84
    e954:	.word	0xffffeae4
    e958:	.word	0xffffec34
    e95c:	.word	0xffffec00
    e960:	.word	0xffffebd0
    e964:	.word	0xffffeb40
    e968:	.word	0xffffed30
    e96c:	.word	0xffffeb10
    e970:	.word	0x00035704
    e974:	.word	0x000002ec
    e978:	.word	0xffffeb34
    e97c:	.word	0xffffed70
    e980:	.word	0xffffea50
    e984:	.word	0xfffff570
    e988:	.word	0xfffff52c
    e98c:	.word	0xfffff544
    e990:	.word	0xffffed90

0000e994 <sas_rle_insert_run>:
    e994:	cmp	r0, #0
    e998:	push	{r4, lr}
    e99c:	add	lr, r0, r1
    e9a0:	beq	eab0 <sas_rle_insert_run+0x11c>
    e9a4:	sub	ip, r2, #32
    e9a8:	ands	r4, ip, #223	; 0xdf
    e9ac:	moveq	ip, #1
    e9b0:	movne	ip, #0
    e9b4:	cmp	r2, #0
    e9b8:	orreq	ip, ip, #1
    e9bc:	cmp	ip, #0
    e9c0:	bne	e9f4 <sas_rle_insert_run+0x60>
    e9c4:	cmp	r3, #18
    e9c8:	bls	ea84 <sas_rle_insert_run+0xf0>
    e9cc:	sub	ip, r3, #18
    e9d0:	mov	r3, #3
    e9d4:	lsr	r4, ip, #8
    e9d8:	and	r4, r4, #15
    e9dc:	add	r4, r4, #64	; 0x40
    e9e0:	strb	r4, [r0, r1]
    e9e4:	strb	ip, [lr, #1]
    e9e8:	strb	r2, [lr, #2]
    e9ec:	mov	r0, r3
    e9f0:	pop	{r4, pc}
    e9f4:	cmp	r3, #17
    e9f8:	bls	ea4c <sas_rle_insert_run+0xb8>
    e9fc:	sub	r3, r3, #17
    ea00:	cmp	r2, #64	; 0x40
    ea04:	lsr	ip, r3, #8
    ea08:	and	ip, ip, #15
    ea0c:	addeq	ip, ip, #80	; 0x50
    ea10:	uxtb	r2, r3
    ea14:	strbeq	ip, [r0, r1]
    ea18:	addeq	r3, lr, #1
    ea1c:	beq	ea3c <sas_rle_insert_run+0xa8>
    ea20:	cmp	r4, #0
    ea24:	addeq	r3, lr, #1
    ea28:	addne	r3, lr, #1
    ea2c:	addeq	ip, ip, #96	; 0x60
    ea30:	addne	ip, ip, #112	; 0x70
    ea34:	strbeq	ip, [r0, r1]
    ea38:	strbne	ip, [r0, r1]
    ea3c:	strb	r2, [r3], #1
    ea40:	sub	r3, r3, lr
    ea44:	mov	r0, r3
    ea48:	pop	{r4, pc}
    ea4c:	cmp	r3, #1
    ea50:	bls	eaa4 <sas_rle_insert_run+0x110>
    ea54:	cmp	r2, #64	; 0x40
    ea58:	subeq	r3, r3, #50	; 0x32
    ea5c:	strbeq	r3, [r0, r1]
    ea60:	moveq	r3, #1
    ea64:	beq	e9ec <sas_rle_insert_run+0x58>
    ea68:	cmp	r4, #0
    ea6c:	subeq	r3, r3, #34	; 0x22
    ea70:	subne	r3, r3, #18
    ea74:	strb	r3, [r0, r1]
    ea78:	mov	r3, #1
    ea7c:	mov	r0, r3
    ea80:	pop	{r4, pc}
    ea84:	cmp	r3, #2
    ea88:	bls	eaa4 <sas_rle_insert_run+0x110>
    ea8c:	sub	r3, r3, #67	; 0x43
    ea90:	strb	r3, [r0, r1]
    ea94:	mov	r3, #2
    ea98:	strb	r2, [lr, #1]
    ea9c:	mov	r0, r3
    eaa0:	pop	{r4, pc}
    eaa4:	mov	r3, #0
    eaa8:	mov	r0, r3
    eaac:	pop	{r4, pc}
    eab0:	and	r1, r2, #223	; 0xdf
    eab4:	cmp	r1, #0
    eab8:	cmpne	r2, #64	; 0x40
    eabc:	beq	ead0 <sas_rle_insert_run+0x13c>
    eac0:	cmp	r3, #18
    eac4:	movls	r3, #2
    eac8:	movhi	r3, #3
    eacc:	b	e9ec <sas_rle_insert_run+0x58>
    ead0:	cmp	r3, #17
    ead4:	movls	r3, #1
    ead8:	movhi	r3, #2
    eadc:	mov	r0, r3
    eae0:	pop	{r4, pc}

0000eae4 <sas_rle_copy_run>:
    eae4:	cmp	r0, #0
    eae8:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    eaec:	add	sl, r0, r1
    eaf0:	mov	fp, r3
    eaf4:	beq	ebc8 <sas_rle_copy_run+0xe4>
    eaf8:	ldr	r6, [pc, #260]	; ec04 <sas_rle_copy_run+0x120>
    eafc:	mov	r5, r2
    eb00:	cmp	r3, r6
    eb04:	movls	r3, sl
    eb08:	bls	eb5c <sas_rle_copy_run+0x78>
    eb0c:	ldr	r9, [pc, #244]	; ec08 <sas_rle_copy_run+0x124>
    eb10:	add	r4, sl, #2
    eb14:	mov	r8, #15
    eb18:	mvn	r7, #0
    eb1c:	sub	fp, fp, #4096	; 0x1000
    eb20:	strb	r8, [r4, #-2]
    eb24:	strb	r7, [r4, #-1]
    eb28:	mov	r1, r5
    eb2c:	mov	r0, r4
    eb30:	mov	r2, r9
    eb34:	sub	fp, fp, #63	; 0x3f
    eb38:	bl	3f20 <memcpy@plt>
    eb3c:	add	r5, r5, #4096	; 0x1000
    eb40:	add	r3, r4, #4096	; 0x1000
    eb44:	cmp	fp, r6
    eb48:	add	r4, r4, #4160	; 0x1040
    eb4c:	add	r5, r5, #63	; 0x3f
    eb50:	add	r3, r3, #63	; 0x3f
    eb54:	add	r4, r4, #1
    eb58:	bhi	eb1c <sas_rle_copy_run+0x38>
    eb5c:	cmp	fp, #64	; 0x40
    eb60:	bls	eb94 <sas_rle_copy_run+0xb0>
    eb64:	sub	r2, fp, #64	; 0x40
    eb68:	mov	r4, r3
    eb6c:	lsr	r1, r2, #8
    eb70:	strb	r1, [r4], #2
    eb74:	strb	r2, [r3, #1]
    eb78:	mov	r2, fp
    eb7c:	mov	r1, r5
    eb80:	mov	r0, r4
    eb84:	add	fp, r4, fp
    eb88:	bl	3f20 <memcpy@plt>
    eb8c:	sub	r0, fp, sl
    eb90:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    eb94:	cmp	fp, #48	; 0x30
    eb98:	bhi	ebb8 <sas_rle_copy_run+0xd4>
    eb9c:	cmp	fp, #32
    eba0:	bhi	ebb8 <sas_rle_copy_run+0xd4>
    eba4:	cmp	fp, #16
    eba8:	bhi	ebb8 <sas_rle_copy_run+0xd4>
    ebac:	cmp	fp, #0
    ebb0:	moveq	r4, r3
    ebb4:	beq	eb78 <sas_rle_copy_run+0x94>
    ebb8:	add	r2, fp, #127	; 0x7f
    ebbc:	strb	r2, [r3]
    ebc0:	add	r4, r3, #1
    ebc4:	b	eb78 <sas_rle_copy_run+0x94>
    ebc8:	ldr	r3, [pc, #52]	; ec04 <sas_rle_copy_run+0x120>
    ebcc:	cmp	fp, r3
    ebd0:	bls	ebec <sas_rle_copy_run+0x108>
    ebd4:	sub	fp, fp, #4096	; 0x1000
    ebd8:	sub	fp, fp, #63	; 0x3f
    ebdc:	add	r0, r0, #4160	; 0x1040
    ebe0:	cmp	fp, r3
    ebe4:	add	r0, r0, #1
    ebe8:	bhi	ebd4 <sas_rle_copy_run+0xf0>
    ebec:	add	r0, r0, fp
    ebf0:	cmp	fp, #64	; 0x40
    ebf4:	addhi	r0, r0, #1
    ebf8:	cmp	fp, #0
    ebfc:	addne	r0, r0, #1
    ec00:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ec04:	.word	0x0000103e
    ec08:	.word	0x0000103f

0000ec0c <sas_rle_decompress>:
    ec0c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ec10:	mov	lr, #0
    ec14:	ldr	fp, [pc, #472]	; edf4 <sas_rle_decompress+0x1e8>
    ec18:	add	r5, r2, r3
    ec1c:	mov	r4, r2
    ec20:	mov	r6, r0
    ec24:	mov	r7, r1
    ec28:	mov	sl, lr
    ec2c:	add	fp, pc, fp
    ec30:	mov	r9, #32
    ec34:	cmp	r4, r5
    ec38:	bcs	ecdc <sas_rle_decompress+0xd0>
    ec3c:	ldrb	ip, [r4]
    ec40:	add	r1, r4, #1
    ec44:	and	r2, ip, #15
    ec48:	lsr	ip, ip, #4
    ec4c:	ldr	r3, [fp, ip, lsl #2]
    ec50:	add	r3, r1, r3
    ec54:	cmp	r5, r3
    ec58:	bcc	ecfc <sas_rle_decompress+0xf0>
    ec5c:	cmp	ip, #15
    ec60:	addls	pc, pc, ip, lsl #2
    ec64:	b	ede4 <sas_rle_decompress+0x1d8>
    ec68:	b	edd0 <sas_rle_decompress+0x1c4>
    ec6c:	b	ede4 <sas_rle_decompress+0x1d8>
    ec70:	b	ede4 <sas_rle_decompress+0x1d8>
    ec74:	b	ede4 <sas_rle_decompress+0x1d8>
    ec78:	b	edb8 <sas_rle_decompress+0x1ac>
    ec7c:	b	eda0 <sas_rle_decompress+0x194>
    ec80:	b	ed88 <sas_rle_decompress+0x17c>
    ec84:	b	ed70 <sas_rle_decompress+0x164>
    ec88:	b	ed68 <sas_rle_decompress+0x15c>
    ec8c:	b	ed60 <sas_rle_decompress+0x154>
    ec90:	b	ed58 <sas_rle_decompress+0x14c>
    ec94:	b	ed24 <sas_rle_decompress+0x118>
    ec98:	b	ed14 <sas_rle_decompress+0x108>
    ec9c:	b	ed04 <sas_rle_decompress+0xf8>
    eca0:	b	ece4 <sas_rle_decompress+0xd8>
    eca4:	b	eca8 <sas_rle_decompress+0x9c>
    eca8:	mov	r4, r1
    ecac:	add	r2, r2, #2
    ecb0:	mov	r1, sl
    ecb4:	add	r8, lr, r2
    ecb8:	cmp	r7, r8
    ecbc:	bcc	ecfc <sas_rle_decompress+0xf0>
    ecc0:	cmp	r6, #0
    ecc4:	beq	edec <sas_rle_decompress+0x1e0>
    ecc8:	add	r0, r6, lr
    eccc:	bl	42a4 <memset@plt>
    ecd0:	cmp	r4, r5
    ecd4:	mov	lr, r8
    ecd8:	bcc	ec3c <sas_rle_decompress+0x30>
    ecdc:	mov	r0, lr
    ece0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ece4:	add	r2, r2, #2
    ece8:	add	r8, lr, r2
    ecec:	cmp	r7, r8
    ecf0:	mov	r4, r1
    ecf4:	mov	r1, r9
    ecf8:	bcs	ecc0 <sas_rle_decompress+0xb4>
    ecfc:	mvn	r0, #0
    ed00:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ed04:	mov	r4, r1
    ed08:	add	r2, r2, #2
    ed0c:	mov	r1, #64	; 0x40
    ed10:	b	ecb4 <sas_rle_decompress+0xa8>
    ed14:	ldrb	r1, [r4, #1]
    ed18:	add	r2, r2, #3
    ed1c:	add	r4, r4, #2
    ed20:	b	ecb4 <sas_rle_decompress+0xa8>
    ed24:	add	r2, r2, #49	; 0x31
    ed28:	add	r8, lr, r2
    ed2c:	cmp	r8, r7
    ed30:	bhi	ecfc <sas_rle_decompress+0xf0>
    ed34:	add	r4, r1, r2
    ed38:	cmp	r4, r5
    ed3c:	bhi	ecfc <sas_rle_decompress+0xf0>
    ed40:	cmp	r6, #0
    ed44:	beq	edec <sas_rle_decompress+0x1e0>
    ed48:	add	r0, r6, lr
    ed4c:	bl	3f20 <memcpy@plt>
    ed50:	mov	lr, r8
    ed54:	b	ec34 <sas_rle_decompress+0x28>
    ed58:	add	r2, r2, #33	; 0x21
    ed5c:	b	ed28 <sas_rle_decompress+0x11c>
    ed60:	add	r2, r2, #17
    ed64:	b	ed28 <sas_rle_decompress+0x11c>
    ed68:	add	r2, r2, #1
    ed6c:	b	ed28 <sas_rle_decompress+0x11c>
    ed70:	ldrb	r3, [r4, #1]
    ed74:	mov	r1, sl
    ed78:	add	r4, r4, #2
    ed7c:	add	r3, r3, #17
    ed80:	add	r2, r3, r2, lsl #8
    ed84:	b	ecb4 <sas_rle_decompress+0xa8>
    ed88:	ldrb	r3, [r4, #1]
    ed8c:	mov	r1, r9
    ed90:	add	r4, r4, #2
    ed94:	add	r3, r3, #17
    ed98:	add	r2, r3, r2, lsl #8
    ed9c:	b	ecb4 <sas_rle_decompress+0xa8>
    eda0:	ldrb	r3, [r4, #1]
    eda4:	mov	r1, #64	; 0x40
    eda8:	add	r4, r4, #2
    edac:	add	r3, r3, #17
    edb0:	add	r2, r3, r2, lsl #8
    edb4:	b	ecb4 <sas_rle_decompress+0xa8>
    edb8:	ldrb	r3, [r4, #1]
    edbc:	ldrb	r1, [r4, #2]
    edc0:	add	r4, r4, #3
    edc4:	add	r3, r3, #18
    edc8:	add	r2, r3, r2, lsl #8
    edcc:	b	ecb4 <sas_rle_decompress+0xa8>
    edd0:	ldrb	r3, [r4, #1]
    edd4:	add	r1, r4, #2
    edd8:	add	r3, r3, #64	; 0x40
    eddc:	add	r2, r3, r2, lsl #8
    ede0:	b	ed28 <sas_rle_decompress+0x11c>
    ede4:	mov	r4, r1
    ede8:	b	ec34 <sas_rle_decompress+0x28>
    edec:	mov	lr, r8
    edf0:	b	ec34 <sas_rle_decompress+0x28>
    edf4:	.word	0x00015b08

0000edf8 <sas_rle_decompressed_len>:
    edf8:	mov	r3, r1
    edfc:	mov	r1, #0
    ee00:	mov	r2, r0
    ee04:	mov	r0, r1
    ee08:	b	407c <sas_rle_decompress@plt>

0000ee0c <sas_rle_compress>:
    ee0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ee10:	add	r8, r2, r3
    ee14:	cmp	r2, r8
    ee18:	sub	sp, sp, #12
    ee1c:	movcs	r9, #0
    ee20:	str	r0, [sp, #4]
    ee24:	movcs	r3, r9
    ee28:	movcs	r7, r9
    ee2c:	bcs	ef14 <sas_rle_compress+0x108>
    ee30:	mov	r4, r2
    ee34:	mov	r9, #0
    ee38:	ldrb	r6, [r4], #1
    ee3c:	mov	r3, r9
    ee40:	mov	r7, #1
    ee44:	ldr	fp, [pc, #296]	; ef74 <sas_rle_compress+0x168>
    ee48:	b	ee6c <sas_rle_compress+0x60>
    ee4c:	cmp	r7, #2
    ee50:	movls	r1, #0
    ee54:	movhi	r1, #1
    ee58:	cmp	r1, #0
    ee5c:	addeq	r3, r3, r7
    ee60:	moveq	r7, #1
    ee64:	bne	eeb8 <sas_rle_compress+0xac>
    ee68:	mov	r6, r5
    ee6c:	cmp	r4, r8
    ee70:	mov	sl, r4
    ee74:	beq	eef0 <sas_rle_compress+0xe4>
    ee78:	ldrb	r5, [r4], #1
    ee7c:	cmp	r7, fp
    ee80:	cmpls	r5, r6
    ee84:	addeq	r7, r7, #1
    ee88:	beq	ee68 <sas_rle_compress+0x5c>
    ee8c:	and	r1, r6, #223	; 0xdf
    ee90:	cmp	r1, #0
    ee94:	cmpne	r6, #64	; 0x40
    ee98:	bne	ee4c <sas_rle_compress+0x40>
    ee9c:	cmp	r7, #1
    eea0:	movls	r1, #0
    eea4:	movhi	r1, #1
    eea8:	cmp	r1, #0
    eeac:	addeq	r3, r3, r7
    eeb0:	moveq	r7, #1
    eeb4:	beq	ee68 <sas_rle_compress+0x5c>
    eeb8:	mov	r1, r9
    eebc:	ldr	r0, [sp, #4]
    eec0:	bl	eae4 <sas_rle_copy_run>
    eec4:	mov	r3, r7
    eec8:	mov	r2, r6
    eecc:	mov	r7, #1
    eed0:	add	r9, r9, r0
    eed4:	mov	r1, r9
    eed8:	ldr	r0, [sp, #4]
    eedc:	bl	e994 <sas_rle_insert_run>
    eee0:	mov	r2, sl
    eee4:	mov	r3, #0
    eee8:	add	r9, r9, r0
    eeec:	b	ee68 <sas_rle_compress+0x5c>
    eef0:	and	r1, r6, #223	; 0xdf
    eef4:	cmp	r1, #0
    eef8:	cmpne	r6, #64	; 0x40
    eefc:	beq	ef30 <sas_rle_compress+0x124>
    ef00:	cmp	r7, #2
    ef04:	movls	r1, #0
    ef08:	movhi	r1, #1
    ef0c:	cmp	r1, #0
    ef10:	bne	ef44 <sas_rle_compress+0x138>
    ef14:	add	r3, r3, r7
    ef18:	ldr	r0, [sp, #4]
    ef1c:	mov	r1, r9
    ef20:	bl	eae4 <sas_rle_copy_run>
    ef24:	add	r0, r9, r0
    ef28:	add	sp, sp, #12
    ef2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ef30:	cmp	r7, #1
    ef34:	movls	r1, #0
    ef38:	movhi	r1, #1
    ef3c:	cmp	r1, #0
    ef40:	beq	ef14 <sas_rle_compress+0x108>
    ef44:	mov	r1, r9
    ef48:	ldr	r0, [sp, #4]
    ef4c:	bl	eae4 <sas_rle_copy_run>
    ef50:	mov	r3, r7
    ef54:	mov	r2, r6
    ef58:	add	r9, r9, r0
    ef5c:	mov	r1, r9
    ef60:	ldr	r0, [sp, #4]
    ef64:	bl	e994 <sas_rle_insert_run>
    ef68:	add	r0, r9, r0
    ef6c:	add	sp, sp, #12
    ef70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ef74:	.word	0x0000100f

0000ef78 <sas_rle_compressed_len>:
    ef78:	mov	r3, r1
    ef7c:	mov	r1, #0
    ef80:	mov	r2, r0
    ef84:	mov	r0, r1
    ef88:	b	44d8 <sas_rle_compress@plt>

0000ef8c <xport_namestr_bswap>:
    ef8c:	push	{r4, lr}
    ef90:	mov	r4, r0
    ef94:	bl	3eb4 <machine_is_little_endian@plt>
    ef98:	cmp	r0, #0
    ef9c:	popeq	{r4, pc}
    efa0:	ldrb	r0, [r4, #1]
    efa4:	ldrb	r3, [r4]
    efa8:	orr	r0, r3, r0, lsl #8
    efac:	bl	3ea8 <byteswap2@plt>
    efb0:	ldrb	r2, [r4, #3]
    efb4:	ldrb	r3, [r4, #2]
    efb8:	lsr	r1, r0, #8
    efbc:	strb	r0, [r4]
    efc0:	strb	r1, [r4, #1]
    efc4:	orr	r0, r3, r2, lsl #8
    efc8:	bl	3ea8 <byteswap2@plt>
    efcc:	ldrb	r2, [r4, #5]
    efd0:	ldrb	r3, [r4, #4]
    efd4:	lsr	r1, r0, #8
    efd8:	strb	r0, [r4, #2]
    efdc:	strb	r1, [r4, #3]
    efe0:	orr	r0, r3, r2, lsl #8
    efe4:	bl	3ea8 <byteswap2@plt>
    efe8:	ldrb	r2, [r4, #7]
    efec:	ldrb	r3, [r4, #6]
    eff0:	lsr	r1, r0, #8
    eff4:	strb	r0, [r4, #4]
    eff8:	strb	r1, [r4, #5]
    effc:	orr	r0, r3, r2, lsl #8
    f000:	bl	3ea8 <byteswap2@plt>
    f004:	ldrb	r2, [r4, #65]	; 0x41
    f008:	ldrb	r3, [r4, #64]	; 0x40
    f00c:	lsr	r1, r0, #8
    f010:	strb	r0, [r4, #6]
    f014:	strb	r1, [r4, #7]
    f018:	orr	r0, r3, r2, lsl #8
    f01c:	bl	3ea8 <byteswap2@plt>
    f020:	ldrb	r2, [r4, #67]	; 0x43
    f024:	ldrb	r3, [r4, #66]	; 0x42
    f028:	lsr	r1, r0, #8
    f02c:	strb	r0, [r4, #64]	; 0x40
    f030:	strb	r1, [r4, #65]	; 0x41
    f034:	orr	r0, r3, r2, lsl #8
    f038:	bl	3ea8 <byteswap2@plt>
    f03c:	ldrb	r2, [r4, #69]	; 0x45
    f040:	ldrb	r3, [r4, #68]	; 0x44
    f044:	lsr	r1, r0, #8
    f048:	strb	r0, [r4, #66]	; 0x42
    f04c:	strb	r1, [r4, #67]	; 0x43
    f050:	orr	r0, r3, r2, lsl #8
    f054:	bl	3ea8 <byteswap2@plt>
    f058:	ldrb	r2, [r4, #81]	; 0x51
    f05c:	ldrb	r3, [r4, #80]	; 0x50
    f060:	lsr	r1, r0, #8
    f064:	strb	r0, [r4, #68]	; 0x44
    f068:	strb	r1, [r4, #69]	; 0x45
    f06c:	orr	r0, r3, r2, lsl #8
    f070:	bl	3ea8 <byteswap2@plt>
    f074:	ldrb	r2, [r4, #83]	; 0x53
    f078:	ldrb	r3, [r4, #82]	; 0x52
    f07c:	lsr	r1, r0, #8
    f080:	strb	r0, [r4, #80]	; 0x50
    f084:	strb	r1, [r4, #81]	; 0x51
    f088:	orr	r0, r3, r2, lsl #8
    f08c:	bl	3ea8 <byteswap2@plt>
    f090:	ldrb	r1, [r4, #85]	; 0x55
    f094:	ldrb	ip, [r4, #86]	; 0x56
    f098:	ldrb	r3, [r4, #84]	; 0x54
    f09c:	ldrb	r2, [r4, #87]	; 0x57
    f0a0:	orr	r3, r3, r1, lsl #8
    f0a4:	orr	r3, r3, ip, lsl #16
    f0a8:	lsr	r1, r0, #8
    f0ac:	strb	r0, [r4, #82]	; 0x52
    f0b0:	strb	r1, [r4, #83]	; 0x53
    f0b4:	orr	r0, r3, r2, lsl #24
    f0b8:	bl	3d94 <byteswap4@plt>
    f0bc:	ldrb	r2, [r4, #121]	; 0x79
    f0c0:	ldrb	r3, [r4, #120]	; 0x78
    f0c4:	lsr	lr, r0, #8
    f0c8:	lsr	ip, r0, #16
    f0cc:	lsr	r1, r0, #24
    f0d0:	strb	r0, [r4, #84]	; 0x54
    f0d4:	strb	lr, [r4, #85]	; 0x55
    f0d8:	strb	ip, [r4, #86]	; 0x56
    f0dc:	strb	r1, [r4, #87]	; 0x57
    f0e0:	orr	r0, r3, r2, lsl #8
    f0e4:	bl	3ea8 <byteswap2@plt>
    f0e8:	strb	r0, [r4, #120]	; 0x78
    f0ec:	lsr	r0, r0, #8
    f0f0:	strb	r0, [r4, #121]	; 0x79
    f0f4:	pop	{r4, pc}

0000f0f8 <xport_read_header_record>:
    f0f8:	ldr	r3, [r0, #52]	; 0x34
    f0fc:	push	{r4, r5, r6, lr}
    f100:	sub	sp, sp, #112	; 0x70
    f104:	add	r5, sp, #28
    f108:	mov	r4, r1
    f10c:	ldr	r6, [r3, #12]
    f110:	ldr	r2, [r3, #20]
    f114:	mov	r0, r5
    f118:	mov	r1, #80	; 0x50
    f11c:	blx	r6
    f120:	cmp	r0, #79	; 0x4f
    f124:	movle	r0, #2
    f128:	ble	f190 <xport_read_header_record+0x98>
    f12c:	mov	r3, #0
    f130:	mov	r1, r3
    f134:	mov	r2, #36	; 0x24
    f138:	mov	r0, r4
    f13c:	strb	r3, [sp, #108]	; 0x6c
    f140:	bl	42a4 <memset@plt>
    f144:	add	r1, r4, #24
    f148:	str	r1, [sp, #8]
    f14c:	ldr	r1, [pc, #68]	; f198 <xport_read_header_record+0xa0>
    f150:	add	lr, r4, #32
    f154:	add	ip, r4, #28
    f158:	add	r2, r4, #20
    f15c:	add	r3, r4, #16
    f160:	str	r2, [sp, #4]
    f164:	str	r3, [sp]
    f168:	mov	r0, r5
    f16c:	str	lr, [sp, #16]
    f170:	str	ip, [sp, #12]
    f174:	add	r3, r4, #12
    f178:	mov	r2, r4
    f17c:	add	r1, pc, r1
    f180:	bl	428c <__isoc99_sscanf@plt>
    f184:	cmp	r0, #1
    f188:	movle	r0, #5
    f18c:	movgt	r0, #0
    f190:	add	sp, sp, #112	; 0x70
    f194:	pop	{r4, r5, r6, pc}
    f198:	.word	0x000155f8

0000f19c <xport_expect_header_record>:
    f19c:	push	{r4, r5, r6, r7, r8, lr}
    f1a0:	sub	sp, sp, #40	; 0x28
    f1a4:	add	r5, sp, #4
    f1a8:	mov	r8, r1
    f1ac:	mov	r1, r5
    f1b0:	mov	r7, r2
    f1b4:	mov	r6, r0
    f1b8:	bl	f0f8 <xport_read_header_record>
    f1bc:	subs	r4, r0, #0
    f1c0:	bne	f1d8 <xport_expect_header_record+0x3c>
    f1c4:	ldr	r3, [r6, #380]	; 0x17c
    f1c8:	cmp	r3, #5
    f1cc:	beq	f204 <xport_expect_header_record+0x68>
    f1d0:	cmp	r3, #8
    f1d4:	beq	f1e4 <xport_expect_header_record+0x48>
    f1d8:	mov	r0, r4
    f1dc:	add	sp, sp, #40	; 0x28
    f1e0:	pop	{r4, r5, r6, r7, r8, pc}
    f1e4:	mov	r1, r7
    f1e8:	mov	r0, r5
    f1ec:	bl	3e00 <strcmp@plt>
    f1f0:	cmp	r0, #0
    f1f4:	movne	r4, #5
    f1f8:	mov	r0, r4
    f1fc:	add	sp, sp, #40	; 0x28
    f200:	pop	{r4, r5, r6, r7, r8, pc}
    f204:	mov	r1, r8
    f208:	mov	r0, r5
    f20c:	bl	3e00 <strcmp@plt>
    f210:	cmp	r0, #0
    f214:	movne	r4, #5
    f218:	mov	r0, r4
    f21c:	add	sp, sp, #40	; 0x28
    f220:	pop	{r4, r5, r6, r7, r8, pc}

0000f224 <readstat_parse_xport>:
    f224:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f228:	mov	r5, r0
    f22c:	add	fp, sp, #32
    f230:	mov	r6, r1
    f234:	sub	sp, sp, #252	; 0xfc
    f238:	mov	r1, #384	; 0x180
    f23c:	mov	r0, #1
    f240:	ldr	sl, [r5, #32]
    f244:	mov	r7, r2
    f248:	bl	3d58 <calloc@plt>
    f24c:	mov	r8, r5
    f250:	ldr	lr, [r5, #48]	; 0x30
    f254:	ldr	r9, [r5, #36]	; 0x24
    f258:	cmp	lr, #0
    f25c:	mov	r4, r0
    f260:	mov	ip, r0
    f264:	ldm	r8!, {r0, r1, r2, r3}
    f268:	stmia	ip!, {r0, r1, r2, r3}
    f26c:	ldm	r8, {r0, r1, r2, r3}
    f270:	ldr	r8, [r5, #40]	; 0x28
    f274:	ldr	r5, [r5, #44]	; 0x2c
    f278:	stm	ip, {r0, r1, r2, r3}
    f27c:	mov	r0, r6
    f280:	ldr	r3, [pc, #3196]	; ff04 <readstat_parse_xport+0xce0>
    f284:	str	r9, [r4, #40]	; 0x28
    f288:	add	r3, pc, r3
    f28c:	str	r3, [fp, #-232]	; 0xffffff18
    f290:	strgt	lr, [r4, #72]	; 0x48
    f294:	str	r7, [r4, #36]	; 0x24
    f298:	str	sl, [r4, #52]	; 0x34
    f29c:	str	r8, [r4, #44]	; 0x2c
    f2a0:	str	r5, [r4, #68]	; 0x44
    f2a4:	ldr	r1, [sl, #20]
    f2a8:	ldr	r3, [sl]
    f2ac:	blx	r3
    f2b0:	cmn	r0, #1
    f2b4:	moveq	r9, #1
    f2b8:	beq	f2e0 <readstat_parse_xport+0xbc>
    f2bc:	ldr	r3, [sl, #8]
    f2c0:	ldr	r2, [sl, #20]
    f2c4:	mov	r1, #2
    f2c8:	mov	r0, #0
    f2cc:	blx	r3
    f2d0:	cmn	r0, #1
    f2d4:	str	r0, [r4, #32]
    f2d8:	bne	f358 <readstat_parse_xport+0x134>
    f2dc:	mov	r9, #15
    f2e0:	ldr	r3, [sl, #4]
    f2e4:	ldr	r0, [sl, #20]
    f2e8:	blx	r3
    f2ec:	ldr	r2, [r4, #376]	; 0x178
    f2f0:	cmp	r2, #0
    f2f4:	beq	f334 <readstat_parse_xport+0x110>
    f2f8:	ldr	ip, [r4, #64]	; 0x40
    f2fc:	cmp	ip, #0
    f300:	ble	f32c <readstat_parse_xport+0x108>
    f304:	mov	r5, #0
    f308:	ldr	r3, [r2, r5, lsl #2]
    f30c:	add	r5, r5, #1
    f310:	subs	r0, r3, #0
    f314:	beq	f324 <readstat_parse_xport+0x100>
    f318:	bl	3ec0 <free@plt>
    f31c:	ldr	r2, [r4, #376]	; 0x178
    f320:	ldr	ip, [r4, #64]	; 0x40
    f324:	cmp	r5, ip
    f328:	blt	f308 <readstat_parse_xport+0xe4>
    f32c:	mov	r0, r2
    f330:	bl	3ec0 <free@plt>
    f334:	ldr	r0, [r4, #48]	; 0x30
    f338:	cmp	r0, #0
    f33c:	beq	f344 <readstat_parse_xport+0x120>
    f340:	bl	3dd0 <iconv_close@plt>
    f344:	mov	r0, r4
    f348:	bl	3ec0 <free@plt>
    f34c:	mov	r0, r9
    f350:	sub	sp, fp, #32
    f354:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f358:	mov	r1, #0
    f35c:	mov	r0, r1
    f360:	ldr	r3, [sl, #8]
    f364:	ldr	r2, [sl, #20]
    f368:	blx	r3
    f36c:	cmn	r0, #1
    f370:	beq	f2dc <readstat_parse_xport+0xb8>
    f374:	ldr	r6, [r4, #40]	; 0x28
    f378:	cmp	r6, #0
    f37c:	beq	f3a0 <readstat_parse_xport+0x17c>
    f380:	ldr	r7, [r4, #44]	; 0x2c
    f384:	cmp	r7, #0
    f388:	beq	f3a0 <readstat_parse_xport+0x17c>
    f38c:	mov	r1, r7
    f390:	mov	r0, r6
    f394:	bl	3e00 <strcmp@plt>
    f398:	cmp	r0, #0
    f39c:	bne	f464 <readstat_parse_xport+0x240>
    f3a0:	sub	r8, fp, #180	; 0xb4
    f3a4:	mov	r1, r8
    f3a8:	mov	r0, r4
    f3ac:	bl	f0f8 <xport_read_header_record>
    f3b0:	subs	r9, r0, #0
    f3b4:	bne	f2e0 <readstat_parse_xport+0xbc>
    f3b8:	ldr	r1, [pc, #2888]	; ff08 <readstat_parse_xport+0xce4>
    f3bc:	mov	r0, r8
    f3c0:	add	r1, pc, r1
    f3c4:	bl	3e00 <strcmp@plt>
    f3c8:	cmp	r0, #0
    f3cc:	moveq	r3, #5
    f3d0:	streq	r3, [r4, #380]	; 0x17c
    f3d4:	beq	f3fc <readstat_parse_xport+0x1d8>
    f3d8:	ldr	r1, [pc, #2860]	; ff0c <readstat_parse_xport+0xce8>
    f3dc:	mov	r0, r8
    f3e0:	add	r1, pc, r1
    f3e4:	bl	3e00 <strcmp@plt>
    f3e8:	cmp	r0, #0
    f3ec:	moveq	r3, #8
    f3f0:	streq	r3, [r4, #380]	; 0x17c
    f3f4:	movne	r9, #24
    f3f8:	bne	f2e0 <readstat_parse_xport+0xbc>
    f3fc:	ldr	r3, [r4, #52]	; 0x34
    f400:	mov	r1, #1
    f404:	mov	r0, #80	; 0x50
    f408:	ldr	r6, [r3, #8]
    f40c:	ldr	r2, [r3, #20]
    f410:	blx	r6
    f414:	cmn	r0, #1
    f418:	beq	f2dc <readstat_parse_xport+0xb8>
    f41c:	sub	r3, fp, #224	; 0xe0
    f420:	mov	r0, r3
    f424:	mov	r2, #44	; 0x2c
    f428:	mov	r1, #0
    f42c:	str	r3, [fp, #-236]	; 0xffffff14
    f430:	bl	42a4 <memset@plt>
    f434:	ldr	r3, [r4, #52]	; 0x34
    f438:	mvn	r2, #0
    f43c:	str	r2, [fp, #-192]	; 0xffffff40
    f440:	ldr	r6, [r3, #12]
    f444:	ldr	r2, [r3, #20]
    f448:	mov	r1, #80	; 0x50
    f44c:	mov	r0, r8
    f450:	blx	r6
    f454:	cmp	r0, #79	; 0x4f
    f458:	bgt	f484 <readstat_parse_xport+0x260>
    f45c:	mov	r9, #2
    f460:	b	f2e0 <readstat_parse_xport+0xbc>
    f464:	mov	r1, r6
    f468:	mov	r0, r7
    f46c:	bl	4130 <iconv_open@plt>
    f470:	cmn	r0, #1
    f474:	moveq	r9, #7
    f478:	beq	f2e0 <readstat_parse_xport+0xbc>
    f47c:	str	r0, [r4, #48]	; 0x30
    f480:	b	f3a0 <readstat_parse_xport+0x17c>
    f484:	ldr	r2, [fp, #-236]	; 0xffffff14
    f488:	mov	r6, #0
    f48c:	strb	r6, [fp, #-100]	; 0xffffff9c
    f490:	str	r2, [sp, #12]
    f494:	sub	r2, fp, #220	; 0xdc
    f498:	str	r2, [sp, #8]
    f49c:	ldr	r1, [pc, #2668]	; ff10 <readstat_parse_xport+0xcec>
    f4a0:	sub	r2, fp, #216	; 0xd8
    f4a4:	str	r2, [sp, #4]
    f4a8:	sub	r7, fp, #228	; 0xe4
    f4ac:	sub	r2, fp, #204	; 0xcc
    f4b0:	mov	r3, r7
    f4b4:	str	r2, [sp]
    f4b8:	add	r1, pc, r1
    f4bc:	sub	r2, fp, #212	; 0xd4
    f4c0:	mov	r0, r8
    f4c4:	bl	428c <__isoc99_sscanf@plt>
    f4c8:	ldr	r3, [pc, #2628]	; ff14 <readstat_parse_xport+0xcf0>
    f4cc:	ldr	r2, [fp, #-232]	; 0xffffff18
    f4d0:	ldr	r5, [r2, r3]
    f4d4:	mov	r1, r5
    f4d8:	mov	r0, r7
    f4dc:	bl	3e00 <strcmp@plt>
    f4e0:	add	r5, r5, #4
    f4e4:	cmp	r0, #0
    f4e8:	beq	f6d0 <readstat_parse_xport+0x4ac>
    f4ec:	add	r6, r6, #1
    f4f0:	cmp	r6, #12
    f4f4:	bne	f4d4 <readstat_parse_xport+0x2b0>
    f4f8:	ldr	r3, [fp, #-204]	; 0xffffff34
    f4fc:	ldr	r0, [fp, #-236]	; 0xffffff14
    f500:	cmp	r3, #59	; 0x3b
    f504:	addle	r3, r3, #100	; 0x64
    f508:	strle	r3, [fp, #-204]	; 0xffffff34
    f50c:	bl	3e54 <mktime@plt>
    f510:	ldr	r2, [pc, #2560]	; ff18 <readstat_parse_xport+0xcf4>
    f514:	ldr	r1, [pc, #2560]	; ff1c <readstat_parse_xport+0xcf8>
    f518:	add	r2, pc, r2
    f51c:	add	r1, pc, r1
    f520:	str	r0, [r4, #56]	; 0x38
    f524:	mov	r0, r4
    f528:	bl	f19c <xport_expect_header_record>
    f52c:	subs	r9, r0, #0
    f530:	bne	f2e0 <readstat_parse_xport+0xbc>
    f534:	ldr	r2, [pc, #2532]	; ff20 <readstat_parse_xport+0xcfc>
    f538:	ldr	r1, [pc, #2532]	; ff24 <readstat_parse_xport+0xd00>
    f53c:	add	r2, pc, r2
    f540:	add	r1, pc, r1
    f544:	mov	r0, r4
    f548:	bl	f19c <xport_expect_header_record>
    f54c:	subs	r9, r0, #0
    f550:	bne	f2e0 <readstat_parse_xport+0xbc>
    f554:	ldr	r3, [r4, #52]	; 0x34
    f558:	mov	r1, #80	; 0x50
    f55c:	mov	r0, r8
    f560:	ldr	r5, [r3, #12]
    f564:	ldr	r2, [r3, #20]
    f568:	blx	r5
    f56c:	cmp	r0, #79	; 0x4f
    f570:	ble	f45c <readstat_parse_xport+0x238>
    f574:	ldr	r3, [r4, #380]	; 0x17c
    f578:	ldr	r2, [r4, #48]	; 0x30
    f57c:	cmp	r3, #5
    f580:	add	r7, r4, #245	; 0xf5
    f584:	strb	r9, [fp, #-100]	; 0xffffff9c
    f588:	movne	r3, #32
    f58c:	moveq	r3, #8
    f590:	str	r2, [sp]
    f594:	mov	r0, r7
    f598:	sub	r2, fp, #172	; 0xac
    f59c:	mov	r1, #129	; 0x81
    f5a0:	bl	4238 <readstat_convert@plt>
    f5a4:	subs	r9, r0, #0
    f5a8:	bne	f2e0 <readstat_parse_xport+0xbc>
    f5ac:	ldr	r3, [r4, #52]	; 0x34
    f5b0:	mov	r1, #80	; 0x50
    f5b4:	mov	r0, r8
    f5b8:	ldr	r5, [r3, #12]
    f5bc:	ldr	r2, [r3, #20]
    f5c0:	blx	r5
    f5c4:	cmp	r0, #79	; 0x4f
    f5c8:	ble	f45c <readstat_parse_xport+0x238>
    f5cc:	ldr	r3, [r4, #48]	; 0x30
    f5d0:	add	r6, r4, #84	; 0x54
    f5d4:	strb	r9, [fp, #-100]	; 0xffffff9c
    f5d8:	mov	r0, r6
    f5dc:	str	r3, [sp]
    f5e0:	add	r2, r8, #32
    f5e4:	mov	r3, #40	; 0x28
    f5e8:	mov	r1, #161	; 0xa1
    f5ec:	bl	4238 <readstat_convert@plt>
    f5f0:	subs	r9, r0, #0
    f5f4:	bne	f2e0 <readstat_parse_xport+0xbc>
    f5f8:	ldr	r1, [fp, #-236]	; 0xffffff14
    f5fc:	mov	r0, r4
    f600:	bl	f0f8 <xport_read_header_record>
    f604:	subs	r9, r0, #0
    f608:	bne	f2e0 <readstat_parse_xport+0xbc>
    f60c:	ldr	r9, [r4, #380]	; 0x17c
    f610:	cmp	r9, #5
    f614:	beq	f6d8 <readstat_parse_xport+0x4b4>
    f618:	cmp	r9, #8
    f61c:	bne	f63c <readstat_parse_xport+0x418>
    f620:	ldr	r1, [pc, #2304]	; ff28 <readstat_parse_xport+0xd04>
    f624:	ldr	r0, [fp, #-236]	; 0xffffff14
    f628:	add	r1, pc, r1
    f62c:	bl	3e00 <strcmp@plt>
    f630:	cmp	r0, #0
    f634:	movne	r9, #5
    f638:	bne	f2e0 <readstat_parse_xport+0xbc>
    f63c:	ldr	r3, [fp, #-208]	; 0xffffff30
    f640:	mov	r1, #4
    f644:	mov	r0, r3
    f648:	str	r3, [r4, #64]	; 0x40
    f64c:	bl	3fc8 <readstat_calloc@plt>
    f650:	cmp	r0, #0
    f654:	str	r0, [r4, #376]	; 0x178
    f658:	moveq	r9, #3
    f65c:	beq	f2e0 <readstat_parse_xport+0xbc>
    f660:	ldr	r5, [r4]
    f664:	cmp	r5, #0
    f668:	beq	f6f4 <readstat_parse_xport+0x4d0>
    f66c:	mov	r2, #56	; 0x38
    f670:	mov	r1, #0
    f674:	mov	r0, r8
    f678:	bl	42a4 <memset@plt>
    f67c:	ldr	r0, [r4, #380]	; 0x17c
    f680:	ldr	r2, [r4, #64]	; 0x40
    f684:	str	r7, [fp, #-140]	; 0xffffff74
    f688:	asr	r1, r0, #31
    f68c:	asr	r3, r2, #31
    f690:	strd	r0, [fp, #-156]	; 0xffffff64
    f694:	strd	r2, [fp, #-172]	; 0xffffff54
    f698:	mvn	r0, #0
    f69c:	ldr	r3, [r4, #56]	; 0x38
    f6a0:	mvn	r1, #0
    f6a4:	str	r6, [fp, #-136]	; 0xffffff78
    f6a8:	strd	r0, [fp, #-180]	; 0xffffff4c
    f6ac:	str	r3, [fp, #-164]	; 0xffffff5c
    f6b0:	str	r3, [fp, #-160]	; 0xffffff60
    f6b4:	ldr	r1, [r4, #36]	; 0x24
    f6b8:	mov	r0, r8
    f6bc:	blx	r5
    f6c0:	cmp	r0, #0
    f6c4:	beq	f6f4 <readstat_parse_xport+0x4d0>
    f6c8:	mov	r9, #4
    f6cc:	b	f2e0 <readstat_parse_xport+0xbc>
    f6d0:	str	r6, [fp, #-208]	; 0xffffff30
    f6d4:	b	f4f8 <readstat_parse_xport+0x2d4>
    f6d8:	ldr	r1, [pc, #2124]	; ff2c <readstat_parse_xport+0xd08>
    f6dc:	ldr	r0, [fp, #-236]	; 0xffffff14
    f6e0:	add	r1, pc, r1
    f6e4:	bl	3e00 <strcmp@plt>
    f6e8:	cmp	r0, #0
    f6ec:	bne	f2e0 <readstat_parse_xport+0xbc>
    f6f0:	b	f63c <readstat_parse_xport+0x418>
    f6f4:	ldr	r3, [r4, #64]	; 0x40
    f6f8:	cmp	r3, #0
    f6fc:	ble	f830 <readstat_parse_xport+0x60c>
    f700:	add	r3, r8, #88	; 0x58
    f704:	mov	r6, #0
    f708:	str	r3, [fp, #-232]	; 0xffffff18
    f70c:	add	r3, r8, #8
    f710:	str	r3, [fp, #-240]	; 0xffffff10
    f714:	ldr	r3, [r4, #52]	; 0x34
    f718:	mov	r1, #140	; 0x8c
    f71c:	mov	r0, r8
    f720:	ldr	r5, [r3, #12]
    f724:	ldr	r2, [r3, #20]
    f728:	blx	r5
    f72c:	cmp	r0, #139	; 0x8b
    f730:	mov	r0, r8
    f734:	bls	f45c <readstat_parse_xport+0x238>
    f738:	bl	4094 <xport_namestr_bswap@plt>
    f73c:	ldr	r1, [pc, #2028]	; ff30 <readstat_parse_xport+0xd0c>
    f740:	mov	r0, #1
    f744:	bl	3d58 <calloc@plt>
    f748:	ldrh	lr, [fp, #-180]	; 0xffffff4c
    f74c:	ldrh	r7, [fp, #-176]	; 0xffffff50
    f750:	ldrh	ip, [fp, #-112]	; 0xffffff90
    f754:	cmp	lr, #2
    f758:	movne	lr, #5
    f75c:	moveq	lr, #0
    f760:	cmp	ip, #0
    f764:	moveq	ip, #1
    f768:	movne	ip, #3
    f76c:	ldr	r2, [fp, #-232]	; 0xffffff18
    f770:	mov	r3, #32
    f774:	mov	r1, #300	; 0x12c
    f778:	mov	r5, r0
    f77c:	add	r0, r0, #8
    f780:	str	r6, [r5, #4]
    f784:	str	lr, [r5]
    f788:	str	r7, [r5, #1596]	; 0x63c
    f78c:	ldrh	lr, [fp, #-116]	; 0xffffff8c
    f790:	str	ip, [r5, #2132]	; 0x854
    f794:	str	lr, [r5, #2136]	; 0x858
    f798:	ldr	lr, [r4, #380]	; 0x17c
    f79c:	ldrh	ip, [fp, #-114]	; 0xffffff8e
    f7a0:	cmp	lr, #5
    f7a4:	moveq	r3, #8
    f7a8:	ldreq	r2, [r4, #48]	; 0x30
    f7ac:	str	ip, [r5, #2140]	; 0x85c
    f7b0:	ldrne	ip, [r4, #48]	; 0x30
    f7b4:	streq	r2, [sp]
    f7b8:	strne	ip, [sp]
    f7bc:	ldreq	r2, [fp, #-240]	; 0xffffff10
    f7c0:	bl	4238 <readstat_convert@plt>
    f7c4:	mov	r3, #40	; 0x28
    f7c8:	sub	r2, fp, #164	; 0xa4
    f7cc:	mov	r1, #1024	; 0x400
    f7d0:	mov	r9, r0
    f7d4:	cmp	r9, #0
    f7d8:	add	r0, r5, #564	; 0x234
    f7dc:	bne	f2e0 <readstat_parse_xport+0xbc>
    f7e0:	ldr	ip, [r4, #48]	; 0x30
    f7e4:	str	ip, [sp]
    f7e8:	bl	4238 <readstat_convert@plt>
    f7ec:	mov	r2, #8
    f7f0:	sub	r1, fp, #124	; 0x7c
    f7f4:	subs	r9, r0, #0
    f7f8:	add	r0, r5, #308	; 0x134
    f7fc:	bne	f2e0 <readstat_parse_xport+0xbc>
    f800:	ldr	ip, [r5, #2140]	; 0x85c
    f804:	ldr	r3, [r5, #2136]	; 0x858
    f808:	str	ip, [sp]
    f80c:	bl	4e68 <xport_construct_format.constprop.4>
    f810:	subs	r9, r0, #0
    f814:	bne	f2e0 <readstat_parse_xport+0xbc>
    f818:	ldr	r2, [r4, #376]	; 0x178
    f81c:	ldr	r3, [r4, #64]	; 0x40
    f820:	str	r5, [r2, r6, lsl #2]
    f824:	add	r6, r6, #1
    f828:	cmp	r6, r3
    f82c:	blt	f714 <readstat_parse_xport+0x4f0>
    f830:	ldr	r0, [r4, #52]	; 0x34
    f834:	bl	4bb0 <xport_skip_rest_of_record.isra.2>
    f838:	subs	r9, r0, #0
    f83c:	bne	f2e0 <readstat_parse_xport+0xbc>
    f840:	ldr	r3, [r4, #380]	; 0x17c
    f844:	cmp	r3, #5
    f848:	beq	f9c8 <readstat_parse_xport+0x7a4>
    f84c:	mov	r1, r8
    f850:	mov	r0, r4
    f854:	bl	f0f8 <xport_read_header_record>
    f858:	cmp	r0, #0
    f85c:	bne	f9c0 <readstat_parse_xport+0x79c>
    f860:	ldr	r1, [pc, #1740]	; ff34 <readstat_parse_xport+0xd10>
    f864:	mov	r0, r8
    f868:	add	r1, pc, r1
    f86c:	bl	3e00 <strcmp@plt>
    f870:	cmp	r0, #0
    f874:	beq	f8bc <readstat_parse_xport+0x698>
    f878:	ldr	r1, [pc, #1720]	; ff38 <readstat_parse_xport+0xd14>
    f87c:	mov	r0, r8
    f880:	add	r1, pc, r1
    f884:	bl	3e00 <strcmp@plt>
    f888:	subs	r3, r0, #0
    f88c:	str	r3, [fp, #-240]	; 0xffffff10
    f890:	ldreq	r3, [fp, #-168]	; 0xffffff58
    f894:	streq	r9, [fp, #-232]	; 0xffffff18
    f898:	streq	r3, [fp, #-248]	; 0xffffff08
    f89c:	beq	fbc4 <readstat_parse_xport+0x9a0>
    f8a0:	ldr	r1, [pc, #1684]	; ff3c <readstat_parse_xport+0xd18>
    f8a4:	mov	r0, r8
    f8a8:	add	r1, pc, r1
    f8ac:	bl	3e00 <strcmp@plt>
    f8b0:	subs	r3, r0, #0
    f8b4:	str	r3, [fp, #-244]	; 0xffffff0c
    f8b8:	beq	f9ec <readstat_parse_xport+0x7c8>
    f8bc:	mov	r3, #0
    f8c0:	ldr	ip, [r4, #64]	; 0x40
    f8c4:	mov	r7, r3
    f8c8:	mov	r5, r3
    f8cc:	str	r3, [r4, #76]	; 0x4c
    f8d0:	cmp	r5, ip
    f8d4:	mov	r0, r5
    f8d8:	bge	f940 <readstat_parse_xport+0x71c>
    f8dc:	ldr	r3, [r4, #376]	; 0x178
    f8e0:	ldr	r8, [r4, #8]
    f8e4:	ldr	r6, [r3, r5, lsl #2]
    f8e8:	cmp	r8, #0
    f8ec:	add	r2, r6, #308	; 0x134
    f8f0:	mov	r1, r6
    f8f4:	str	r7, [r6, #2148]	; 0x864
    f8f8:	beq	f924 <readstat_parse_xport+0x700>
    f8fc:	ldr	r3, [r4, #36]	; 0x24
    f900:	blx	r8
    f904:	cmp	r0, #1
    f908:	beq	f6c8 <readstat_parse_xport+0x4a4>
    f90c:	cmp	r0, #2
    f910:	moveq	r3, #1
    f914:	ldrne	ip, [r4, #64]	; 0x40
    f918:	streq	r3, [r6, #2144]	; 0x860
    f91c:	ldreq	ip, [r4, #64]	; 0x40
    f920:	beq	f928 <readstat_parse_xport+0x704>
    f924:	add	r7, r7, #1
    f928:	ldr	r2, [r6, #1596]	; 0x63c
    f92c:	ldr	r3, [r4, #76]	; 0x4c
    f930:	add	r5, r5, #1
    f934:	add	r3, r3, r2
    f938:	str	r3, [r4, #76]	; 0x4c
    f93c:	b	f8d0 <readstat_parse_xport+0x6ac>
    f940:	ldr	r0, [r4, #76]	; 0x4c
    f944:	cmp	r0, #0
    f948:	beq	f2e0 <readstat_parse_xport+0xbc>
    f94c:	ldr	r3, [r4, #16]
    f950:	cmp	r3, #0
    f954:	beq	f2e0 <readstat_parse_xport+0xbc>
    f958:	bl	422c <readstat_malloc@plt>
    f95c:	mov	r5, r0
    f960:	ldr	r0, [r4, #76]	; 0x4c
    f964:	bl	422c <readstat_malloc@plt>
    f968:	cmp	r0, #0
    f96c:	cmpne	r5, #0
    f970:	mov	r8, r0
    f974:	moveq	r6, #1
    f978:	movne	r6, #0
    f97c:	bne	fe08 <readstat_parse_xport+0xbe4>
    f980:	cmp	r5, #0
    f984:	movne	r7, #3
    f988:	beq	fe00 <readstat_parse_xport+0xbdc>
    f98c:	mov	r0, r5
    f990:	bl	3ec0 <free@plt>
    f994:	mov	r9, r7
    f998:	cmp	r8, #0
    f99c:	beq	f2e0 <readstat_parse_xport+0xbc>
    f9a0:	mov	r0, r8
    f9a4:	bl	3ec0 <free@plt>
    f9a8:	b	f2e0 <readstat_parse_xport+0xbc>
    f9ac:	ldr	r9, [fp, #-232]	; 0xffffff18
    f9b0:	mov	r0, #2
    f9b4:	ldr	sp, [fp, #-244]	; 0xffffff0c
    f9b8:	cmp	r0, #0
    f9bc:	beq	f8bc <readstat_parse_xport+0x698>
    f9c0:	mov	r9, r0
    f9c4:	b	f2e0 <readstat_parse_xport+0xbc>
    f9c8:	ldr	r2, [pc, #1392]	; ff40 <readstat_parse_xport+0xd1c>
    f9cc:	ldr	r1, [pc, #1392]	; ff44 <readstat_parse_xport+0xd20>
    f9d0:	add	r2, pc, r2
    f9d4:	add	r1, pc, r1
    f9d8:	mov	r0, r4
    f9dc:	bl	f19c <xport_expect_header_record>
    f9e0:	cmp	r0, #0
    f9e4:	beq	f8bc <readstat_parse_xport+0x698>
    f9e8:	b	f9c0 <readstat_parse_xport+0x79c>
    f9ec:	ldr	r3, [fp, #-168]	; 0xffffff58
    f9f0:	str	sl, [fp, #-232]	; 0xffffff18
    f9f4:	str	r3, [fp, #-252]	; 0xffffff04
    f9f8:	str	r9, [fp, #-240]	; 0xffffff10
    f9fc:	ldr	r3, [fp, #-252]	; 0xffffff04
    fa00:	ldr	r2, [fp, #-244]	; 0xffffff0c
    fa04:	cmp	r3, r2
    fa08:	ble	fdcc <readstat_parse_xport+0xba8>
    fa0c:	ldr	r3, [r4, #52]	; 0x34
    fa10:	mov	r1, #10
    fa14:	ldr	r0, [fp, #-236]	; 0xffffff14
    fa18:	ldr	r5, [r3, #12]
    fa1c:	ldr	r2, [r3, #20]
    fa20:	blx	r5
    fa24:	str	sp, [fp, #-248]	; 0xffffff08
    fa28:	cmp	r0, #10
    fa2c:	bne	fdbc <readstat_parse_xport+0xb98>
    fa30:	bl	3eb4 <machine_is_little_endian@plt>
    fa34:	cmp	r0, #0
    fa38:	bne	fd7c <readstat_parse_xport+0xb58>
    fa3c:	ldrh	r5, [fp, #-224]	; 0xffffff20
    fa40:	ldrh	r8, [fp, #-222]	; 0xffffff22
    fa44:	ldrh	r6, [fp, #-220]	; 0xffffff24
    fa48:	ldrh	sl, [fp, #-218]	; 0xffffff26
    fa4c:	ldrh	r7, [fp, #-216]	; 0xffffff28
    fa50:	ldr	r2, [r4, #64]	; 0x40
    fa54:	clz	r3, r5
    fa58:	lsr	r3, r3, #5
    fa5c:	cmp	r2, r5
    fa60:	orrlt	r3, r3, #1
    fa64:	cmp	r3, #0
    fa68:	bne	fd6c <readstat_parse_xport+0xb48>
    fa6c:	add	r2, r8, #8
    fa70:	bic	r2, r2, #7
    fa74:	add	r3, r6, #8
    fa78:	sub	sp, sp, r2
    fa7c:	bic	r3, r3, #7
    fa80:	add	r1, sl, #8
    fa84:	ldr	r2, [r4, #52]	; 0x34
    fa88:	add	r0, sp, #16
    fa8c:	bic	r1, r1, #7
    fa90:	sub	sp, sp, r3
    fa94:	ldr	lr, [r4, #376]	; 0x178
    fa98:	add	r3, r7, #8
    fa9c:	add	r9, sp, #16
    faa0:	sub	sp, sp, r1
    faa4:	add	r1, sp, #16
    faa8:	sub	ip, r5, #-1073741823	; 0xc0000001
    faac:	bic	r3, r3, #7
    fab0:	sub	sp, sp, r3
    fab4:	str	r1, [fp, #-260]	; 0xfffffefc
    fab8:	ldr	r3, [r2, #12]
    fabc:	mov	r1, r8
    fac0:	ldr	r2, [r2, #20]
    fac4:	str	r0, [fp, #-256]	; 0xffffff00
    fac8:	ldr	r5, [lr, ip, lsl #2]
    facc:	blx	r3
    fad0:	add	r3, sp, #16
    fad4:	str	r3, [fp, #-264]	; 0xfffffef8
    fad8:	cmp	r8, r0
    fadc:	bne	fdbc <readstat_parse_xport+0xb98>
    fae0:	ldr	r2, [r4, #52]	; 0x34
    fae4:	mov	r1, r6
    fae8:	mov	r0, r9
    faec:	ldr	r3, [r2, #12]
    faf0:	ldr	r2, [r2, #20]
    faf4:	blx	r3
    faf8:	cmp	r6, r0
    fafc:	bne	fdbc <readstat_parse_xport+0xb98>
    fb00:	ldr	r2, [r4, #52]	; 0x34
    fb04:	ldr	r0, [fp, #-260]	; 0xfffffefc
    fb08:	mov	r1, sl
    fb0c:	ldr	r3, [r2, #12]
    fb10:	ldr	r2, [r2, #20]
    fb14:	blx	r3
    fb18:	cmp	sl, r0
    fb1c:	bne	fdbc <readstat_parse_xport+0xb98>
    fb20:	ldr	r2, [r4, #52]	; 0x34
    fb24:	ldr	sl, [fp, #-264]	; 0xfffffef8
    fb28:	mov	r1, r7
    fb2c:	ldr	r3, [r2, #12]
    fb30:	mov	r0, sl
    fb34:	ldr	r2, [r2, #20]
    fb38:	blx	r3
    fb3c:	cmp	r7, r0
    fb40:	bne	fdbc <readstat_parse_xport+0xb98>
    fb44:	ldr	r1, [r4, #48]	; 0x30
    fb48:	ldr	r2, [fp, #-256]	; 0xffffff00
    fb4c:	mov	r3, r8
    fb50:	str	r1, [sp]
    fb54:	add	r0, r5, #8
    fb58:	mov	r1, #300	; 0x12c
    fb5c:	bl	4238 <readstat_convert@plt>
    fb60:	cmp	r0, #0
    fb64:	bne	fd5c <readstat_parse_xport+0xb38>
    fb68:	ldr	r1, [r4, #48]	; 0x30
    fb6c:	mov	r3, r7
    fb70:	str	r1, [sp]
    fb74:	mov	r2, sl
    fb78:	mov	r1, #1024	; 0x400
    fb7c:	add	r0, r5, #564	; 0x234
    fb80:	bl	4238 <readstat_convert@plt>
    fb84:	cmp	r0, #0
    fb88:	bne	fd5c <readstat_parse_xport+0xb38>
    fb8c:	ldr	r3, [r5, #2140]	; 0x85c
    fb90:	mov	r2, r6
    fb94:	str	r3, [sp]
    fb98:	mov	r1, r9
    fb9c:	add	r0, r5, #308	; 0x134
    fba0:	ldr	r3, [r5, #2136]	; 0x858
    fba4:	bl	4e68 <xport_construct_format.constprop.4>
    fba8:	cmp	r0, #0
    fbac:	bne	fd5c <readstat_parse_xport+0xb38>
    fbb0:	ldr	r3, [fp, #-244]	; 0xffffff0c
    fbb4:	add	r3, r3, #1
    fbb8:	str	r3, [fp, #-244]	; 0xffffff0c
    fbbc:	ldr	sp, [fp, #-248]	; 0xffffff08
    fbc0:	b	f9fc <readstat_parse_xport+0x7d8>
    fbc4:	ldr	r3, [fp, #-248]	; 0xffffff08
    fbc8:	ldr	r2, [fp, #-240]	; 0xffffff10
    fbcc:	cmp	r3, r2
    fbd0:	ble	fd2c <readstat_parse_xport+0xb08>
    fbd4:	ldr	r3, [r4, #52]	; 0x34
    fbd8:	mov	r1, #6
    fbdc:	ldr	r0, [fp, #-236]	; 0xffffff14
    fbe0:	ldr	r5, [r3, #12]
    fbe4:	ldr	r2, [r3, #20]
    fbe8:	blx	r5
    fbec:	str	sp, [fp, #-244]	; 0xffffff0c
    fbf0:	cmp	r0, #6
    fbf4:	bne	f9ac <readstat_parse_xport+0x788>
    fbf8:	bl	3eb4 <machine_is_little_endian@plt>
    fbfc:	cmp	r0, #0
    fc00:	ldrheq	r7, [fp, #-224]	; 0xffffff20
    fc04:	ldrheq	r6, [fp, #-222]	; 0xffffff22
    fc08:	ldrheq	r5, [fp, #-220]	; 0xffffff24
    fc0c:	beq	fc34 <readstat_parse_xport+0xa10>
    fc10:	ldrh	r0, [fp, #-224]	; 0xffffff20
    fc14:	bl	3ea8 <byteswap2@plt>
    fc18:	mov	r7, r0
    fc1c:	ldrh	r0, [fp, #-222]	; 0xffffff22
    fc20:	bl	3ea8 <byteswap2@plt>
    fc24:	mov	r6, r0
    fc28:	ldrh	r0, [fp, #-220]	; 0xffffff24
    fc2c:	bl	3ea8 <byteswap2@plt>
    fc30:	mov	r5, r0
    fc34:	ldr	r2, [r4, #64]	; 0x40
    fc38:	clz	r3, r7
    fc3c:	lsr	r3, r3, #5
    fc40:	cmp	r2, r7
    fc44:	orrlt	r3, r3, #1
    fc48:	cmp	r3, #0
    fc4c:	bne	fd20 <readstat_parse_xport+0xafc>
    fc50:	add	r3, r6, #8
    fc54:	ldr	r2, [r4, #52]	; 0x34
    fc58:	bic	r3, r3, #7
    fc5c:	sub	sp, sp, r3
    fc60:	ldr	lr, [r4, #376]	; 0x178
    fc64:	add	r3, r5, #8
    fc68:	sub	ip, r7, #-1073741823	; 0xc0000001
    fc6c:	add	r8, sp, #16
    fc70:	bic	r3, r3, #7
    fc74:	sub	sp, sp, r3
    fc78:	mov	r0, r8
    fc7c:	ldr	r3, [r2, #12]
    fc80:	mov	r1, r6
    fc84:	ldr	r2, [r2, #20]
    fc88:	ldr	r9, [lr, ip, lsl #2]
    fc8c:	blx	r3
    fc90:	add	r7, sp, #16
    fc94:	cmp	r6, r0
    fc98:	bne	f9ac <readstat_parse_xport+0x788>
    fc9c:	ldr	r2, [r4, #52]	; 0x34
    fca0:	mov	r1, r5
    fca4:	mov	r0, r7
    fca8:	ldr	r3, [r2, #12]
    fcac:	ldr	r2, [r2, #20]
    fcb0:	blx	r3
    fcb4:	cmp	r5, r0
    fcb8:	bne	f9ac <readstat_parse_xport+0x788>
    fcbc:	ldr	r1, [r4, #48]	; 0x30
    fcc0:	mov	r3, r6
    fcc4:	str	r1, [sp]
    fcc8:	mov	r2, r8
    fccc:	mov	r1, #300	; 0x12c
    fcd0:	add	r0, r9, #8
    fcd4:	bl	4238 <readstat_convert@plt>
    fcd8:	cmp	r0, #0
    fcdc:	bne	fd18 <readstat_parse_xport+0xaf4>
    fce0:	ldr	r1, [r4, #48]	; 0x30
    fce4:	mov	r3, r5
    fce8:	str	r1, [sp]
    fcec:	mov	r2, r7
    fcf0:	add	r0, r9, #564	; 0x234
    fcf4:	mov	r1, #1024	; 0x400
    fcf8:	bl	4238 <readstat_convert@plt>
    fcfc:	cmp	r0, #0
    fd00:	bne	fd18 <readstat_parse_xport+0xaf4>
    fd04:	ldr	r3, [fp, #-240]	; 0xffffff10
    fd08:	add	r3, r3, #1
    fd0c:	str	r3, [fp, #-240]	; 0xffffff10
    fd10:	ldr	sp, [fp, #-244]	; 0xffffff0c
    fd14:	b	fbc4 <readstat_parse_xport+0x9a0>
    fd18:	ldr	r9, [fp, #-232]	; 0xffffff18
    fd1c:	b	f9b4 <readstat_parse_xport+0x790>
    fd20:	ldr	r9, [fp, #-232]	; 0xffffff18
    fd24:	mov	r0, #5
    fd28:	b	f9b4 <readstat_parse_xport+0x790>
    fd2c:	ldr	r0, [r4, #52]	; 0x34
    fd30:	ldr	r9, [fp, #-232]	; 0xffffff18
    fd34:	bl	4bb0 <xport_skip_rest_of_record.isra.2>
    fd38:	cmp	r0, #0
    fd3c:	bne	f9c0 <readstat_parse_xport+0x79c>
    fd40:	ldr	r2, [pc, #512]	; ff48 <readstat_parse_xport+0xd24>
    fd44:	ldr	r1, [pc, #512]	; ff4c <readstat_parse_xport+0xd28>
    fd48:	add	r2, pc, r2
    fd4c:	add	r1, pc, r1
    fd50:	mov	r0, r4
    fd54:	bl	f19c <xport_expect_header_record>
    fd58:	b	f9b8 <readstat_parse_xport+0x794>
    fd5c:	ldr	sl, [fp, #-232]	; 0xffffff18
    fd60:	ldr	r9, [fp, #-240]	; 0xffffff10
    fd64:	ldr	sp, [fp, #-248]	; 0xffffff08
    fd68:	b	f9b8 <readstat_parse_xport+0x794>
    fd6c:	ldr	sl, [fp, #-232]	; 0xffffff18
    fd70:	ldr	r9, [fp, #-240]	; 0xffffff10
    fd74:	mov	r0, #5
    fd78:	b	fd64 <readstat_parse_xport+0xb40>
    fd7c:	ldrh	r0, [fp, #-224]	; 0xffffff20
    fd80:	bl	3ea8 <byteswap2@plt>
    fd84:	mov	r5, r0
    fd88:	ldrh	r0, [fp, #-222]	; 0xffffff22
    fd8c:	bl	3ea8 <byteswap2@plt>
    fd90:	mov	r8, r0
    fd94:	ldrh	r0, [fp, #-220]	; 0xffffff24
    fd98:	bl	3ea8 <byteswap2@plt>
    fd9c:	mov	r6, r0
    fda0:	ldrh	r0, [fp, #-218]	; 0xffffff26
    fda4:	bl	3ea8 <byteswap2@plt>
    fda8:	mov	sl, r0
    fdac:	ldrh	r0, [fp, #-216]	; 0xffffff28
    fdb0:	bl	3ea8 <byteswap2@plt>
    fdb4:	mov	r7, r0
    fdb8:	b	fa50 <readstat_parse_xport+0x82c>
    fdbc:	ldr	sl, [fp, #-232]	; 0xffffff18
    fdc0:	ldr	r9, [fp, #-240]	; 0xffffff10
    fdc4:	mov	r0, #2
    fdc8:	b	fd64 <readstat_parse_xport+0xb40>
    fdcc:	ldr	r0, [r4, #52]	; 0x34
    fdd0:	ldr	sl, [fp, #-232]	; 0xffffff18
    fdd4:	ldr	r9, [fp, #-240]	; 0xffffff10
    fdd8:	bl	4bb0 <xport_skip_rest_of_record.isra.2>
    fddc:	cmp	r0, #0
    fde0:	bne	f9c0 <readstat_parse_xport+0x79c>
    fde4:	ldr	r2, [pc, #356]	; ff50 <readstat_parse_xport+0xd2c>
    fde8:	ldr	r1, [pc, #356]	; ff54 <readstat_parse_xport+0xd30>
    fdec:	add	r2, pc, r2
    fdf0:	add	r1, pc, r1
    fdf4:	mov	r0, r4
    fdf8:	bl	f19c <xport_expect_header_record>
    fdfc:	b	f9b8 <readstat_parse_xport+0x794>
    fe00:	mov	r9, #3
    fe04:	b	f998 <readstat_parse_xport+0x774>
    fe08:	ldr	r2, [r4, #76]	; 0x4c
    fe0c:	mov	r1, #32
    fe10:	bl	42a4 <memset@plt>
    fe14:	ldr	r3, [r4, #52]	; 0x34
    fe18:	ldr	r1, [r4, #76]	; 0x4c
    fe1c:	mov	r0, r5
    fe20:	ldr	r7, [r3, #12]
    fe24:	ldr	r2, [r3, #20]
    fe28:	blx	r7
    fe2c:	cmn	r0, #1
    fe30:	beq	fe9c <readstat_parse_xport+0xc78>
    fe34:	ldr	r3, [r4, #76]	; 0x4c
    fe38:	cmp	r3, r0
    fe3c:	bhi	fe94 <readstat_parse_xport+0xc70>
    fe40:	add	r3, r5, r3
    fe44:	mov	r2, r5
    fe48:	cmp	r3, r2
    fe4c:	beq	fea4 <readstat_parse_xport+0xc80>
    fe50:	ldrb	r1, [r2], #1
    fe54:	cmp	r1, #32
    fe58:	beq	fe48 <readstat_parse_xport+0xc24>
    fe5c:	cmp	r6, #0
    fe60:	mov	r1, r8
    fe64:	mov	r0, r4
    fe68:	beq	feb4 <readstat_parse_xport+0xc90>
    fe6c:	bl	4c10 <xport_process_row.isra.3>
    fe70:	sub	r6, r6, #1
    fe74:	cmp	r0, #0
    fe78:	bne	feac <readstat_parse_xport+0xc88>
    fe7c:	ldr	r3, [r4, #68]	; 0x44
    fe80:	cmp	r3, #0
    fe84:	ble	fe5c <readstat_parse_xport+0xc38>
    fe88:	ldr	r2, [r4, #80]	; 0x50
    fe8c:	cmp	r3, r2
    fe90:	bne	fe5c <readstat_parse_xport+0xc38>
    fe94:	mov	r7, r9
    fe98:	b	f98c <readstat_parse_xport+0x768>
    fe9c:	mov	r7, #2
    fea0:	b	f98c <readstat_parse_xport+0x768>
    fea4:	add	r6, r6, #1
    fea8:	b	fe14 <readstat_parse_xport+0xbf0>
    feac:	mov	r7, r0
    feb0:	b	f98c <readstat_parse_xport+0x768>
    feb4:	mov	r1, r5
    feb8:	bl	4c10 <xport_process_row.isra.3>
    febc:	cmp	r0, #0
    fec0:	bne	feac <readstat_parse_xport+0xc88>
    fec4:	ldr	r3, [r4, #52]	; 0x34
    fec8:	ldr	r2, [r4, #36]	; 0x24
    fecc:	ldr	r1, [r4, #28]
    fed0:	ldr	r7, [r3, #16]
    fed4:	ldr	r0, [r4, #32]
    fed8:	ldr	r3, [r3, #20]
    fedc:	blx	r7
    fee0:	cmp	r0, #0
    fee4:	bne	feac <readstat_parse_xport+0xc88>
    fee8:	ldr	r3, [r4, #68]	; 0x44
    feec:	cmp	r3, #0
    fef0:	ble	fe14 <readstat_parse_xport+0xbf0>
    fef4:	ldr	r2, [r4, #80]	; 0x50
    fef8:	cmp	r3, r2
    fefc:	bne	fe14 <readstat_parse_xport+0xbf0>
    ff00:	b	fe94 <readstat_parse_xport+0xc70>
    ff04:	.word	0x00034d70
    ff08:	.word	0x0001540c
    ff0c:	.word	0x000153f4
    ff10:	.word	0x00015324
    ff14:	.word	0x000002d8
    ff18:	.word	0x000152e0
    ff1c:	.word	0x000152e4
    ff20:	.word	0x000152cc
    ff24:	.word	0x000152d0
    ff28:	.word	0x000151f8
    ff2c:	.word	0x00015138
    ff30:	.word	0x00000868
    ff34:	.word	0x00014fc0
    ff38:	.word	0x00014fb4
    ff3c:	.word	0x00014f94
    ff40:	.word	0x00014e58
    ff44:	.word	0x00014e5c
    ff48:	.word	0x00014ae0
    ff4c:	.word	0x00014ae4
    ff50:	.word	0x00014a3c
    ff54:	.word	0x00014a40

0000ff58 <xport_write_missing_numeric>:
    ff58:	mov	r3, #46	; 0x2e
    ff5c:	strb	r3, [r0]
    ff60:	mov	r0, #0
    ff64:	bx	lr

0000ff68 <xport_write_row>:
    ff68:	ldr	ip, [pc, #28]	; ff8c <xport_write_row+0x24>
    ff6c:	push	{lr}		; (str lr, [sp, #-4]!)
    ff70:	sub	sp, sp, #12
    ff74:	add	ip, pc, ip
    ff78:	mov	r3, #80	; 0x50
    ff7c:	str	ip, [sp]
    ff80:	bl	4520 <readstat_write_bytes_as_lines@plt>
    ff84:	add	sp, sp, #12
    ff88:	pop	{pc}		; (ldr pc, [sp], #4)
    ff8c:	.word	0x00014d44

0000ff90 <xport_end_data>:
    ff90:	ldr	r3, [pc, #12]	; ffa4 <xport_end_data+0x14>
    ff94:	mov	r2, #80	; 0x50
    ff98:	add	r3, pc, r3
    ff9c:	mov	r1, #32
    ffa0:	b	44e4 <readstat_write_line_padding@plt>
    ffa4:	.word	0x00014d20

0000ffa8 <xport_write_missing_string>:
    ffa8:	ldr	r2, [r1, #1596]	; 0x63c
    ffac:	push	{r4, lr}
    ffb0:	mov	r1, #32
    ffb4:	bl	42a4 <memset@plt>
    ffb8:	mov	r0, #0
    ffbc:	pop	{r4, pc}

0000ffc0 <xport_write_missing_tagged>:
    ffc0:	push	{r4, r5, r6, lr}
    ffc4:	mov	r5, r0
    ffc8:	mov	r0, r2
    ffcc:	mov	r4, r2
    ffd0:	bl	4148 <sas_validate_tag@plt>
    ffd4:	cmp	r0, #0
    ffd8:	strbeq	r4, [r5]
    ffdc:	pop	{r4, r5, r6, pc}

0000ffe0 <xport_write_double>:
    ffe0:	push	{r4, r5, r6, r7, lr}
    ffe4:	sub	sp, sp, #20
    ffe8:	add	r5, sp, #8
    ffec:	mov	r6, r0
    fff0:	mov	r7, r1
    fff4:	mov	r2, r5
    fff8:	mov	r3, #1
    fffc:	mov	r1, #0
   10000:	mov	r0, sp
   10004:	vstr	d0, [sp]
   10008:	bl	4004 <cnxptiee@plt>
   1000c:	subs	r4, r0, #0
   10010:	movne	r0, #16
   10014:	beq	10020 <xport_write_double+0x40>
   10018:	add	sp, sp, #20
   1001c:	pop	{r4, r5, r6, r7, pc}
   10020:	ldr	r2, [r7, #1596]	; 0x63c
   10024:	mov	r1, r5
   10028:	mov	r0, r6
   1002c:	bl	3f20 <memcpy@plt>
   10030:	mov	r0, r4
   10034:	add	sp, sp, #20
   10038:	pop	{r4, r5, r6, r7, pc}

0001003c <xport_write_float>:
   1003c:	vcvt.f64.f32	d0, s0
   10040:	b	ffe0 <xport_write_double>

00010044 <xport_write_int32>:
   10044:	vmov	s15, r2
   10048:	vcvt.f64.s32	d0, s15
   1004c:	b	ffe0 <xport_write_double>

00010050 <xport_write_int16>:
   10050:	vmov	s15, r2
   10054:	vcvt.f64.s32	d0, s15
   10058:	b	ffe0 <xport_write_double>

0001005c <xport_write_int8>:
   1005c:	vmov	s15, r2
   10060:	vcvt.f64.s32	d0, s15
   10064:	b	ffe0 <xport_write_double>

00010068 <xport_write_record>:
   10068:	push	{r4, r5, r6, lr}
   1006c:	mov	r5, r0
   10070:	sub	sp, sp, #8
   10074:	mov	r0, r1
   10078:	mov	r4, r1
   1007c:	bl	41fc <strlen@plt>
   10080:	ldr	r6, [pc, #68]	; 100cc <xport_write_record+0x64>
   10084:	mov	r1, r4
   10088:	add	r6, pc, r6
   1008c:	str	r6, [sp]
   10090:	mov	r3, #80	; 0x50
   10094:	mov	r2, r0
   10098:	mov	r0, r5
   1009c:	bl	4520 <readstat_write_bytes_as_lines@plt>
   100a0:	cmp	r0, #0
   100a4:	beq	100b0 <xport_write_record+0x48>
   100a8:	add	sp, sp, #8
   100ac:	pop	{r4, r5, r6, pc}
   100b0:	mov	r3, r6
   100b4:	mov	r0, r5
   100b8:	mov	r2, #80	; 0x50
   100bc:	mov	r1, #32
   100c0:	add	sp, sp, #8
   100c4:	pop	{r4, r5, r6, lr}
   100c8:	b	44e4 <readstat_write_line_padding@plt>
   100cc:	.word	0x00014c30

000100d0 <xport_write_header_record>:
   100d0:	push	{r4, r5, lr}
   100d4:	mov	r3, r1
   100d8:	sub	sp, sp, #116	; 0x74
   100dc:	ldr	r2, [r1, #32]
   100e0:	ldr	r4, [r1, #28]
   100e4:	add	r1, r1, #16
   100e8:	mov	r5, r0
   100ec:	ldm	r1, {r1, ip, lr}
   100f0:	str	r2, [sp, #20]
   100f4:	ldr	r2, [r3, #12]
   100f8:	str	r4, [sp, #16]
   100fc:	str	r2, [sp]
   10100:	ldr	r2, [pc, #40]	; 10130 <xport_write_header_record+0x60>
   10104:	add	r4, sp, #28
   10108:	stmib	sp, {r1, ip, lr}
   1010c:	add	r2, pc, r2
   10110:	mov	r0, r4
   10114:	mov	r1, #81	; 0x51
   10118:	bl	4280 <snprintf@plt>
   1011c:	mov	r1, r4
   10120:	mov	r0, r5
   10124:	bl	10068 <xport_write_record>
   10128:	add	sp, sp, #116	; 0x74
   1012c:	pop	{r4, r5, pc}
   10130:	.word	0x00014780

00010134 <xport_write_string>:
   10134:	push	{r4, r5, r6, lr}
   10138:	mov	r5, r1
   1013c:	mov	r4, r2
   10140:	mov	r1, #32
   10144:	ldr	r2, [r5, #1596]	; 0x63c
   10148:	mov	r6, r0
   1014c:	bl	42a4 <memset@plt>
   10150:	cmp	r4, #0
   10154:	beq	10190 <xport_write_string+0x5c>
   10158:	ldrb	r0, [r4]
   1015c:	cmp	r0, #0
   10160:	popeq	{r4, r5, r6, pc}
   10164:	mov	r0, r4
   10168:	bl	41fc <strlen@plt>
   1016c:	ldr	r3, [r5, #1596]	; 0x63c
   10170:	cmp	r0, r3
   10174:	bls	10180 <xport_write_string+0x4c>
   10178:	mov	r0, #22
   1017c:	pop	{r4, r5, r6, pc}
   10180:	mov	r2, r0
   10184:	mov	r1, r4
   10188:	mov	r0, r6
   1018c:	bl	3f20 <memcpy@plt>
   10190:	mov	r0, #0
   10194:	pop	{r4, r5, r6, pc}

00010198 <xport_metadata_ok>:
   10198:	ldr	r3, [r0, #8]
   1019c:	cmp	r3, #5
   101a0:	cmpne	r3, #8
   101a4:	movne	r2, #1
   101a8:	moveq	r2, #0
   101ac:	beq	101b8 <xport_metadata_ok+0x20>
   101b0:	mov	r0, #24
   101b4:	bx	lr
   101b8:	ldrb	r1, [r0, #188]	; 0xbc
   101bc:	cmp	r1, #0
   101c0:	beq	101dc <xport_metadata_ok+0x44>
   101c4:	cmp	r3, #8
   101c8:	beq	101e4 <xport_metadata_ok+0x4c>
   101cc:	cmp	r3, #5
   101d0:	beq	101f0 <xport_metadata_ok+0x58>
   101d4:	mov	r0, r2
   101d8:	bx	lr
   101dc:	mov	r0, r1
   101e0:	bx	lr
   101e4:	add	r0, r0, #188	; 0xbc
   101e8:	mov	r1, #32
   101ec:	b	3d4c <sas_validate_name@plt>
   101f0:	add	r0, r0, #188	; 0xbc
   101f4:	mov	r1, #8
   101f8:	b	3d4c <sas_validate_name@plt>

000101fc <xport_begin_data>:
   101fc:	push	{r4, r5, r6, r7, r8, lr}
   10200:	mov	r4, r0
   10204:	sub	sp, sp, #136	; 0x88
   10208:	add	r0, sp, #136	; 0x88
   1020c:	ldr	r3, [r4, #20]
   10210:	ldr	r6, [pc, #1172]	; 106ac <xport_begin_data+0x4b0>
   10214:	str	r3, [r0, #-108]!	; 0xffffff94
   10218:	bl	4160 <localtime@plt>
   1021c:	add	r6, pc, r6
   10220:	cmp	r0, #0
   10224:	moveq	r7, #39	; 0x27
   10228:	beq	10324 <xport_begin_data+0x128>
   1022c:	ldr	lr, [r0]
   10230:	ldr	r1, [pc, #1144]	; 106b0 <xport_begin_data+0x4b4>
   10234:	mov	ip, #100	; 0x64
   10238:	ldr	r7, [r0, #12]
   1023c:	umull	r3, r2, r1, lr
   10240:	umull	r5, r3, r1, r7
   10244:	lsr	r2, r2, #5
   10248:	lsr	r3, r3, #5
   1024c:	mul	r2, ip, r2
   10250:	mul	r3, ip, r3
   10254:	sub	r2, lr, r2
   10258:	str	r2, [sp, #16]
   1025c:	ldr	r5, [r0, #4]
   10260:	sub	r3, r7, r3
   10264:	ldr	r7, [pc, #1096]	; 106b4 <xport_begin_data+0x4b8>
   10268:	umull	r2, lr, r1, r5
   1026c:	ldr	r2, [pc, #1092]	; 106b8 <xport_begin_data+0x4bc>
   10270:	lsr	lr, lr, #5
   10274:	add	r2, pc, r2
   10278:	mul	lr, ip, lr
   1027c:	sub	lr, r5, lr
   10280:	str	lr, [sp, #12]
   10284:	ldr	r5, [r0, #8]
   10288:	umull	r8, lr, r1, r5
   1028c:	lsr	lr, lr, #5
   10290:	mul	lr, ip, lr
   10294:	sub	lr, r5, lr
   10298:	str	lr, [sp, #8]
   1029c:	ldr	lr, [r0, #20]
   102a0:	add	r5, sp, #32
   102a4:	umull	r8, r1, r1, lr
   102a8:	lsr	r1, r1, #5
   102ac:	mul	r1, ip, r1
   102b0:	sub	r1, lr, r1
   102b4:	str	r1, [sp, #4]
   102b8:	ldr	ip, [r0, #16]
   102bc:	ldr	r1, [r6, r7]
   102c0:	mov	r0, r5
   102c4:	add	r1, r1, ip, lsl #2
   102c8:	str	r1, [sp]
   102cc:	add	r6, sp, #52	; 0x34
   102d0:	mov	r1, #17
   102d4:	bl	4280 <snprintf@plt>
   102d8:	mov	r2, #36	; 0x24
   102dc:	mov	r1, #0
   102e0:	mov	r0, r6
   102e4:	bl	42a4 <memset@plt>
   102e8:	ldr	r3, [pc, #972]	; 106bc <xport_begin_data+0x4c0>
   102ec:	ldr	r2, [r4, #8]
   102f0:	add	r3, pc, r3
   102f4:	add	r3, r3, #24
   102f8:	cmp	r2, #8
   102fc:	ldm	r3, {r0, r1}
   10300:	mov	r3, #0
   10304:	strb	r3, [sp, #60]	; 0x3c
   10308:	stm	r6, {r0, r1}
   1030c:	beq	105c8 <xport_begin_data+0x3cc>
   10310:	mov	r1, r6
   10314:	mov	r0, r4
   10318:	bl	100d0 <xport_write_header_record>
   1031c:	subs	r7, r0, #0
   10320:	beq	10330 <xport_begin_data+0x134>
   10324:	mov	r0, r7
   10328:	add	sp, sp, #136	; 0x88
   1032c:	pop	{r4, r5, r6, r7, r8, pc}
   10330:	ldr	r2, [pc, #904]	; 106c0 <xport_begin_data+0x4c4>
   10334:	ldr	r3, [pc, #904]	; 106c4 <xport_begin_data+0x4c8>
   10338:	add	r2, pc, r2
   1033c:	ldr	ip, [pc, #900]	; 106c8 <xport_begin_data+0x4cc>
   10340:	ldr	r0, [pc, #900]	; 106cc <xport_begin_data+0x4d0>
   10344:	ldr	r1, [pc, #900]	; 106d0 <xport_begin_data+0x4d4>
   10348:	str	r2, [sp, #4]
   1034c:	ldr	r2, [pc, #896]	; 106d4 <xport_begin_data+0x4d8>
   10350:	add	r3, pc, r3
   10354:	add	ip, pc, ip
   10358:	add	r0, pc, r0
   1035c:	add	r1, pc, r1
   10360:	str	r3, [sp]
   10364:	str	ip, [sp, #16]
   10368:	str	r0, [sp, #12]
   1036c:	str	r1, [sp, #8]
   10370:	add	r2, pc, r2
   10374:	mov	r1, #81	; 0x51
   10378:	str	r5, [sp, #20]
   1037c:	mov	r0, r6
   10380:	bl	4280 <snprintf@plt>
   10384:	mov	r1, r6
   10388:	mov	r0, r4
   1038c:	bl	10068 <xport_write_record>
   10390:	subs	r7, r0, #0
   10394:	bne	10324 <xport_begin_data+0x128>
   10398:	mov	r1, r5
   1039c:	mov	r0, r4
   103a0:	bl	10068 <xport_write_record>
   103a4:	subs	r7, r0, #0
   103a8:	bne	10324 <xport_begin_data+0x128>
   103ac:	mov	r2, #36	; 0x24
   103b0:	mov	r1, r7
   103b4:	mov	r0, r6
   103b8:	bl	42a4 <memset@plt>
   103bc:	ldr	r3, [pc, #788]	; 106d8 <xport_begin_data+0x4dc>
   103c0:	ldr	r2, [r4, #8]
   103c4:	add	r3, pc, r3
   103c8:	add	r3, r3, #36	; 0x24
   103cc:	cmp	r2, #8
   103d0:	ldm	r3, {r0, r1}
   103d4:	mov	r2, #160	; 0xa0
   103d8:	mov	r3, #140	; 0x8c
   103dc:	lsr	ip, r1, #16
   103e0:	strh	r7, [sp, #59]	; 0x3b
   103e4:	str	r0, [r6]
   103e8:	strh	r1, [sp, #56]	; 0x38
   103ec:	strb	ip, [sp, #58]	; 0x3a
   103f0:	str	r2, [sp, #76]	; 0x4c
   103f4:	str	r3, [sp, #84]	; 0x54
   103f8:	beq	105e0 <xport_begin_data+0x3e4>
   103fc:	mov	r1, r6
   10400:	mov	r0, r4
   10404:	bl	100d0 <xport_write_header_record>
   10408:	subs	r7, r0, #0
   1040c:	bne	10324 <xport_begin_data+0x128>
   10410:	mov	r2, #36	; 0x24
   10414:	mov	r1, r7
   10418:	mov	r0, r6
   1041c:	bl	42a4 <memset@plt>
   10420:	ldr	r3, [pc, #692]	; 106dc <xport_begin_data+0x4e0>
   10424:	ldr	r2, [r4, #8]
   10428:	add	r3, pc, r3
   1042c:	add	r3, r3, #48	; 0x30
   10430:	cmp	r2, #8
   10434:	ldm	r3, {r0, r1}
   10438:	strb	r7, [sp, #60]	; 0x3c
   1043c:	stm	r6, {r0, r1}
   10440:	beq	10600 <xport_begin_data+0x404>
   10444:	mov	r1, r6
   10448:	mov	r0, r4
   1044c:	bl	100d0 <xport_write_header_record>
   10450:	subs	r7, r0, #0
   10454:	bne	10324 <xport_begin_data+0x128>
   10458:	ldr	r3, [r4, #8]
   1045c:	cmp	r3, #8
   10460:	ldrb	r3, [r4, #188]	; 0xbc
   10464:	beq	10614 <xport_begin_data+0x418>
   10468:	cmp	r3, #0
   1046c:	addne	ip, r4, #188	; 0xbc
   10470:	ldreq	ip, [pc, #616]	; 106e0 <xport_begin_data+0x4e4>
   10474:	addeq	ip, pc, ip
   10478:	ldr	r2, [pc, #612]	; 106e4 <xport_begin_data+0x4e8>
   1047c:	ldr	r3, [pc, #612]	; 106e8 <xport_begin_data+0x4ec>
   10480:	add	r2, pc, r2
   10484:	add	r3, pc, r3
   10488:	ldr	r0, [pc, #604]	; 106ec <xport_begin_data+0x4f0>
   1048c:	ldr	r1, [pc, #604]	; 106f0 <xport_begin_data+0x4f4>
   10490:	str	r2, [sp, #8]
   10494:	str	r3, [sp, #4]
   10498:	ldr	r2, [pc, #596]	; 106f4 <xport_begin_data+0x4f8>
   1049c:	ldr	r3, [pc, #596]	; 106f8 <xport_begin_data+0x4fc>
   104a0:	add	r0, pc, r0
   104a4:	add	r1, pc, r1
   104a8:	str	ip, [sp]
   104ac:	str	r0, [sp, #16]
   104b0:	str	r1, [sp, #12]
   104b4:	add	r3, pc, r3
   104b8:	add	r2, pc, r2
   104bc:	mov	r1, #81	; 0x51
   104c0:	str	r5, [sp, #20]
   104c4:	mov	r0, r6
   104c8:	bl	4280 <snprintf@plt>
   104cc:	mov	r1, r6
   104d0:	mov	r0, r4
   104d4:	bl	10068 <xport_write_record>
   104d8:	mov	r7, r0
   104dc:	cmp	r7, #0
   104e0:	bne	10324 <xport_begin_data+0x128>
   104e4:	ldr	r2, [pc, #528]	; 106fc <xport_begin_data+0x500>
   104e8:	add	r1, r4, #88	; 0x58
   104ec:	add	r2, pc, r2
   104f0:	str	r2, [sp, #8]
   104f4:	str	r2, [sp]
   104f8:	ldr	r2, [pc, #512]	; 10700 <xport_begin_data+0x504>
   104fc:	mov	r3, r5
   10500:	str	r1, [sp, #4]
   10504:	add	r2, pc, r2
   10508:	mov	r1, #81	; 0x51
   1050c:	mov	r0, r6
   10510:	bl	4280 <snprintf@plt>
   10514:	mov	r1, r6
   10518:	mov	r0, r4
   1051c:	bl	10068 <xport_write_record>
   10520:	subs	r7, r0, #0
   10524:	bne	10324 <xport_begin_data+0x128>
   10528:	mov	r2, #36	; 0x24
   1052c:	mov	r1, r7
   10530:	mov	r0, r6
   10534:	bl	42a4 <memset@plt>
   10538:	ldr	r3, [pc, #452]	; 10704 <xport_begin_data+0x508>
   1053c:	ldr	ip, [r4, #8]
   10540:	add	r3, pc, r3
   10544:	add	r3, r3, #60	; 0x3c
   10548:	ldr	r2, [r4, #28]
   1054c:	ldm	r3, {r0, r1}
   10550:	cmp	ip, #8
   10554:	strb	r7, [sp, #60]	; 0x3c
   10558:	stm	r6, {r0, r1}
   1055c:	str	r2, [sp, #68]	; 0x44
   10560:	beq	10680 <xport_begin_data+0x484>
   10564:	mov	r1, r6
   10568:	mov	r0, r4
   1056c:	bl	100d0 <xport_write_header_record>
   10570:	subs	r7, r0, #0
   10574:	bne	10324 <xport_begin_data+0x128>
   10578:	mov	r0, r4
   1057c:	bl	4f4c <xport_write_variables>
   10580:	subs	r7, r0, #0
   10584:	bne	10324 <xport_begin_data+0x128>
   10588:	mov	r2, #36	; 0x24
   1058c:	mov	r1, r7
   10590:	mov	r0, r6
   10594:	bl	42a4 <memset@plt>
   10598:	ldr	r2, [r4, #8]
   1059c:	ldr	r3, [pc, #356]	; 10708 <xport_begin_data+0x50c>
   105a0:	cmp	r2, #8
   105a4:	str	r7, [sp, #56]	; 0x38
   105a8:	strb	r7, [sp, #60]	; 0x3c
   105ac:	str	r3, [sp, #52]	; 0x34
   105b0:	beq	10694 <xport_begin_data+0x498>
   105b4:	mov	r1, r6
   105b8:	mov	r0, r4
   105bc:	bl	100d0 <xport_write_header_record>
   105c0:	mov	r7, r0
   105c4:	b	10324 <xport_begin_data+0x128>
   105c8:	ldr	r3, [pc, #316]	; 1070c <xport_begin_data+0x510>
   105cc:	add	r3, pc, r3
   105d0:	ldm	r3, {r0, r1}
   105d4:	str	r0, [sp, #52]	; 0x34
   105d8:	strh	r1, [sp, #56]	; 0x38
   105dc:	b	10310 <xport_begin_data+0x114>
   105e0:	ldr	r3, [pc, #296]	; 10710 <xport_begin_data+0x514>
   105e4:	add	r3, pc, r3
   105e8:	ldm	r3, {r0, r1}
   105ec:	lsr	r3, r1, #16
   105f0:	str	r0, [r6]
   105f4:	strh	r1, [sp, #56]	; 0x38
   105f8:	strb	r3, [sp, #58]	; 0x3a
   105fc:	b	103fc <xport_begin_data+0x200>
   10600:	ldr	r3, [pc, #268]	; 10714 <xport_begin_data+0x518>
   10604:	add	r3, pc, r3
   10608:	ldm	r3, {r0, r1}
   1060c:	stm	r6, {r0, r1}
   10610:	b	10444 <xport_begin_data+0x248>
   10614:	cmp	r3, #0
   10618:	addne	r0, r4, #188	; 0xbc
   1061c:	ldreq	r0, [pc, #244]	; 10718 <xport_begin_data+0x51c>
   10620:	addeq	r0, pc, r0
   10624:	ldr	r2, [pc, #240]	; 1071c <xport_begin_data+0x520>
   10628:	ldr	r3, [pc, #240]	; 10720 <xport_begin_data+0x524>
   1062c:	add	r2, pc, r2
   10630:	add	r3, pc, r3
   10634:	ldr	r1, [pc, #232]	; 10724 <xport_begin_data+0x528>
   10638:	str	r2, [sp, #8]
   1063c:	str	r3, [sp, #4]
   10640:	ldr	r2, [pc, #224]	; 10728 <xport_begin_data+0x52c>
   10644:	ldr	r3, [pc, #224]	; 1072c <xport_begin_data+0x530>
   10648:	add	r1, pc, r1
   1064c:	str	r0, [sp]
   10650:	str	r1, [sp, #12]
   10654:	add	r3, pc, r3
   10658:	add	r2, pc, r2
   1065c:	mov	r1, #81	; 0x51
   10660:	str	r5, [sp, #16]
   10664:	mov	r0, r6
   10668:	bl	4280 <snprintf@plt>
   1066c:	mov	r1, r6
   10670:	mov	r0, r4
   10674:	bl	10068 <xport_write_record>
   10678:	mov	r7, r0
   1067c:	b	104dc <xport_begin_data+0x2e0>
   10680:	ldr	r3, [pc, #168]	; 10730 <xport_begin_data+0x534>
   10684:	add	r3, pc, r3
   10688:	ldm	r3, {r0, r1}
   1068c:	stm	r6, {r0, r1}
   10690:	b	10564 <xport_begin_data+0x368>
   10694:	ldr	r3, [pc, #152]	; 10734 <xport_begin_data+0x538>
   10698:	add	r3, pc, r3
   1069c:	ldm	r3, {r0, r1}
   106a0:	str	r0, [r6]
   106a4:	strh	r1, [r6, #4]
   106a8:	b	105b4 <xport_begin_data+0x3b8>
   106ac:	.word	0x00033ddc
   106b0:	.word	0x51eb851f
   106b4:	.word	0x000002d8
   106b8:	.word	0x00014694
   106bc:	.word	0x00014554
   106c0:	.word	0x00014634
   106c4:	.word	0x000145d8
   106c8:	.word	0x00014964
   106cc:	.word	0x00014604
   106d0:	.word	0x00014608
   106d4:	.word	0x000145bc
   106d8:	.word	0x00014480
   106dc:	.word	0x0001441c
   106e0:	.word	0x00014034
   106e4:	.word	0x000144e4
   106e8:	.word	0x00014518
   106ec:	.word	0x00014818
   106f0:	.word	0x000144b8
   106f4:	.word	0x00014474
   106f8:	.word	0x00014474
   106fc:	.word	0x000147cc
   10700:	.word	0x000144a0
   10704:	.word	0x00014304
   10708:	.word	0x0053424f
   1070c:	.word	0x00014208
   10710:	.word	0x00014214
   10714:	.word	0x00014204
   10718:	.word	0x00013e88
   1071c:	.word	0x00014338
   10720:	.word	0x0001436c
   10724:	.word	0x00014314
   10728:	.word	0x0001431c
   1072c:	.word	0x000142d4
   10730:	.word	0x0001419c
   10734:	.word	0x00014190

00010738 <xport_variable_width>:
   10738:	cmp	r0, #0
   1073c:	beq	10764 <xport_variable_width+0x2c>
   10740:	sub	r3, r1, #1
   10744:	cmp	r3, #6
   10748:	bls	10754 <xport_variable_width+0x1c>
   1074c:	mov	r0, #8
   10750:	bx	lr
   10754:	cmp	r1, #3
   10758:	movcs	r0, r1
   1075c:	movcc	r0, #3
   10760:	bx	lr
   10764:	mov	r0, r1
   10768:	bx	lr

0001076c <readstat_begin_writing_xport>:
   1076c:	push	{r4, r5, lr}
   10770:	ldr	ip, [pc, #204]	; 10844 <readstat_begin_writing_xport+0xd8>
   10774:	ldr	lr, [pc, #204]	; 10848 <readstat_begin_writing_xport+0xdc>
   10778:	add	ip, pc, ip
   1077c:	add	lr, pc, lr
   10780:	str	lr, [r0, #292]	; 0x124
   10784:	str	ip, [r0, #236]	; 0xec
   10788:	ldr	r4, [pc, #188]	; 1084c <readstat_begin_writing_xport+0xe0>
   1078c:	ldr	lr, [pc, #188]	; 10850 <readstat_begin_writing_xport+0xe4>
   10790:	ldr	ip, [pc, #188]	; 10854 <readstat_begin_writing_xport+0xe8>
   10794:	ldr	r3, [r0, #8]
   10798:	add	r4, pc, r4
   1079c:	add	lr, pc, lr
   107a0:	add	ip, pc, ip
   107a4:	str	r4, [r0, #240]	; 0xf0
   107a8:	str	lr, [r0, #244]	; 0xf4
   107ac:	str	ip, [r0, #248]	; 0xf8
   107b0:	ldr	r4, [pc, #160]	; 10858 <readstat_begin_writing_xport+0xec>
   107b4:	ldr	lr, [pc, #160]	; 1085c <readstat_begin_writing_xport+0xf0>
   107b8:	ldr	ip, [pc, #160]	; 10860 <readstat_begin_writing_xport+0xf4>
   107bc:	cmp	r3, #0
   107c0:	moveq	r3, #8
   107c4:	add	r4, pc, r4
   107c8:	add	lr, pc, lr
   107cc:	add	ip, pc, ip
   107d0:	ldr	r5, [pc, #140]	; 10864 <readstat_begin_writing_xport+0xf8>
   107d4:	streq	r3, [r0, #8]
   107d8:	str	r4, [r0, #252]	; 0xfc
   107dc:	ldr	r3, [pc, #132]	; 10868 <readstat_begin_writing_xport+0xfc>
   107e0:	str	lr, [r0, #256]	; 0x100
   107e4:	str	ip, [r0, #264]	; 0x108
   107e8:	ldr	r4, [pc, #124]	; 1086c <readstat_begin_writing_xport+0x100>
   107ec:	ldr	lr, [pc, #124]	; 10870 <readstat_begin_writing_xport+0x104>
   107f0:	ldr	ip, [pc, #124]	; 10874 <readstat_begin_writing_xport+0x108>
   107f4:	add	r5, pc, r5
   107f8:	add	r4, pc, r4
   107fc:	add	lr, pc, lr
   10800:	add	ip, pc, ip
   10804:	str	lr, [r0, #272]	; 0x110
   10808:	str	ip, [r0, #228]	; 0xe4
   1080c:	str	r4, [r0, #268]	; 0x10c
   10810:	ldr	lr, [pc, #96]	; 10878 <readstat_begin_writing_xport+0x10c>
   10814:	ldr	r4, [r5, r3]
   10818:	ldr	ip, [pc, #92]	; 1087c <readstat_begin_writing_xport+0x110>
   1081c:	ldr	r3, [pc, #92]	; 10880 <readstat_begin_writing_xport+0x114>
   10820:	add	lr, pc, lr
   10824:	add	ip, pc, ip
   10828:	add	r3, pc, r3
   1082c:	str	r4, [r0, #232]	; 0xe8
   10830:	str	lr, [r0, #276]	; 0x114
   10834:	str	ip, [r0, #284]	; 0x11c
   10838:	str	r3, [r0, #280]	; 0x118
   1083c:	pop	{r4, r5, lr}
   10840:	b	3f68 <readstat_begin_writing_file@plt>
   10844:	.word	0xfffff8dc
   10848:	.word	0xfffffa14
   1084c:	.word	0xfffff8b0
   10850:	.word	0xfffff8a0
   10854:	.word	0xfffff894
   10858:	.word	0xfffff814
   1085c:	.word	0xfffff964
   10860:	.word	0xfffff7d4
   10864:	.word	0x00033804
   10868:	.word	0x000002ec
   1086c:	.word	0xfffff758
   10870:	.word	0xfffff7bc
   10874:	.word	0xffffff30
   10878:	.word	0xfffff9d4
   1087c:	.word	0xfffff764
   10880:	.word	0xfffff738

00010884 <por_ctx_init>:
   10884:	push	{r4, lr}
   10888:	mov	r1, #660	; 0x294
   1088c:	mov	r0, #1
   10890:	bl	3d58 <calloc@plt>
   10894:	mov	r2, #32
   10898:	mov	r3, #20
   1089c:	mov	r4, r0
   108a0:	mov	r0, #1024	; 0x400
   108a4:	strb	r2, [r4, #48]	; 0x30
   108a8:	str	r3, [r4, #608]	; 0x260
   108ac:	bl	4190 <ck_hash_table_init@plt>
   108b0:	str	r0, [r4, #656]	; 0x290
   108b4:	mov	r0, r4
   108b8:	pop	{r4, pc}

000108bc <por_ctx_free>:
   108bc:	push	{r4, r5, r6, lr}
   108c0:	mov	r5, r0
   108c4:	ldr	r0, [r0, #616]	; 0x268
   108c8:	cmp	r0, #0
   108cc:	beq	108d4 <por_ctx_free+0x18>
   108d0:	bl	3ec0 <free@plt>
   108d4:	ldr	r1, [r5, #652]	; 0x28c
   108d8:	cmp	r1, #0
   108dc:	beq	10928 <por_ctx_free+0x6c>
   108e0:	ldr	r3, [r5, #632]	; 0x278
   108e4:	cmp	r3, #0
   108e8:	ble	10920 <por_ctx_free+0x64>
   108ec:	mov	r4, #0
   108f0:	mov	r6, r4
   108f4:	add	r2, r1, r4
   108f8:	add	r6, r6, #1
   108fc:	ldr	r2, [r2, #264]	; 0x108
   10900:	add	r4, r4, #280	; 0x118
   10904:	subs	r0, r2, #0
   10908:	beq	10918 <por_ctx_free+0x5c>
   1090c:	bl	3ec0 <free@plt>
   10910:	ldr	r1, [r5, #652]	; 0x28c
   10914:	ldr	r3, [r5, #632]	; 0x278
   10918:	cmp	r3, r6
   1091c:	bgt	108f4 <por_ctx_free+0x38>
   10920:	mov	r0, r1
   10924:	bl	3ec0 <free@plt>
   10928:	ldr	r1, [r5, #648]	; 0x288
   1092c:	cmp	r1, #0
   10930:	beq	10970 <por_ctx_free+0xb4>
   10934:	ldr	r3, [r5, #632]	; 0x278
   10938:	cmp	r3, #0
   1093c:	ble	10968 <por_ctx_free+0xac>
   10940:	mov	r4, #0
   10944:	ldr	r2, [r1, r4, lsl #2]
   10948:	add	r4, r4, #1
   1094c:	subs	r0, r2, #0
   10950:	beq	10960 <por_ctx_free+0xa4>
   10954:	bl	3ec0 <free@plt>
   10958:	ldr	r1, [r5, #648]	; 0x288
   1095c:	ldr	r3, [r5, #632]	; 0x278
   10960:	cmp	r3, r4
   10964:	bgt	10944 <por_ctx_free+0x88>
   10968:	mov	r0, r1
   1096c:	bl	3ec0 <free@plt>
   10970:	ldr	r0, [r5, #656]	; 0x290
   10974:	cmp	r0, #0
   10978:	beq	10980 <por_ctx_free+0xc4>
   1097c:	bl	4244 <ck_hash_table_free@plt>
   10980:	ldr	r0, [r5, #612]	; 0x264
   10984:	cmp	r0, #0
   10988:	beq	10990 <por_ctx_free+0xd4>
   1098c:	bl	3dd0 <iconv_close@plt>
   10990:	mov	r0, r5
   10994:	pop	{r4, r5, r6, lr}
   10998:	b	3ec0 <free@plt>

0001099c <por_utf8_encode>:
   1099c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   109a0:	sub	sp, sp, #12
   109a4:	cmp	r1, #0
   109a8:	ldr	r9, [sp, #48]	; 0x30
   109ac:	beq	10a8c <por_utf8_encode+0xf0>
   109b0:	mov	r6, r3
   109b4:	ldr	sl, [pc, #216]	; 10a94 <por_utf8_encode+0xf8>
   109b8:	ldr	r3, [pc, #216]	; 10a98 <por_utf8_encode+0xfc>
   109bc:	mov	r7, r2
   109c0:	mov	r5, r0
   109c4:	add	fp, r0, r1
   109c8:	mov	r4, #0
   109cc:	add	r3, pc, r3
   109d0:	str	r3, [sp, #4]
   109d4:	ldrb	r2, [r5], #1
   109d8:	lsl	r2, r2, #1
   109dc:	ldrh	r2, [r9, r2]
   109e0:	cmp	r2, #0
   109e4:	beq	10a1c <por_utf8_encode+0x80>
   109e8:	cmp	r2, #31
   109ec:	bls	10a7c <por_utf8_encode+0xe0>
   109f0:	cmp	r2, #127	; 0x7f
   109f4:	bls	10a64 <por_utf8_encode+0xc8>
   109f8:	ldr	r3, [pc, #156]	; 10a9c <por_utf8_encode+0x100>
   109fc:	cmp	r2, r3
   10a00:	bhi	10a20 <por_utf8_encode+0x84>
   10a04:	add	r1, r4, #2
   10a08:	cmp	r6, r1
   10a0c:	bcs	10a2c <por_utf8_encode+0x90>
   10a10:	mov	r0, r4
   10a14:	add	sp, sp, #12
   10a18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10a1c:	mov	r2, sl
   10a20:	add	r1, r4, #3
   10a24:	cmp	r6, r1
   10a28:	bcc	10a10 <por_utf8_encode+0x74>
   10a2c:	add	r8, r7, r4
   10a30:	mov	r0, r8
   10a34:	ldr	r1, [sp, #4]
   10a38:	bl	43e8 <sprintf@plt>
   10a3c:	cmp	r0, #0
   10a40:	addgt	r4, r4, r0
   10a44:	addle	r4, r4, #1
   10a48:	movle	r3, #32
   10a4c:	strble	r3, [r8]
   10a50:	cmp	fp, r5
   10a54:	bne	109d4 <por_utf8_encode+0x38>
   10a58:	mov	r0, r4
   10a5c:	add	sp, sp, #12
   10a60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10a64:	add	r1, r4, #1
   10a68:	cmp	r1, r6
   10a6c:	bhi	10a10 <por_utf8_encode+0x74>
   10a70:	strb	r2, [r7, r4]
   10a74:	mov	r4, r1
   10a78:	b	10a50 <por_utf8_encode+0xb4>
   10a7c:	mvn	r4, #0
   10a80:	mov	r0, r4
   10a84:	add	sp, sp, #12
   10a88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10a8c:	mov	r4, r1
   10a90:	b	10a10 <por_utf8_encode+0x74>
   10a94:	.word	0x0000fffd
   10a98:	.word	0x00013ff8
   10a9c:	.word	0x000007ff

00010aa0 <por_utf8_decode>:
   10aa0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10aa4:	sub	sp, sp, #20
   10aa8:	mov	r7, #0
   10aac:	subs	sl, r3, #0
   10ab0:	str	r7, [sp, #8]
   10ab4:	str	r7, [sp, #12]
   10ab8:	ldr	r9, [sp, #56]	; 0x38
   10abc:	beq	10b6c <por_utf8_decode+0xcc>
   10ac0:	ldr	r3, [pc, #196]	; 10b8c <por_utf8_decode+0xec>
   10ac4:	mov	r5, r0
   10ac8:	add	r3, pc, r3
   10acc:	str	r3, [sp, #4]
   10ad0:	add	r3, sp, #8
   10ad4:	mov	r6, r2
   10ad8:	mov	r4, #1
   10adc:	add	fp, sp, #12
   10ae0:	str	r3, [sp]
   10ae4:	b	10b10 <por_utf8_decode+0x70>
   10ae8:	ldrb	r3, [r9, r3]
   10aec:	add	r5, r5, #1
   10af0:	cmp	r3, #0
   10af4:	beq	10b7c <por_utf8_decode+0xdc>
   10af8:	strb	r3, [r6]
   10afc:	add	r4, r4, #1
   10b00:	cmp	r4, sl
   10b04:	str	r7, [sp, #12]
   10b08:	add	r6, r6, #1
   10b0c:	bhi	10b70 <por_utf8_decode+0xd0>
   10b10:	ldrb	r3, [r5]
   10b14:	mov	r8, r4
   10b18:	sub	r2, r3, #32
   10b1c:	cmp	r2, #94	; 0x5e
   10b20:	bls	10ae8 <por_utf8_decode+0x48>
   10b24:	mov	r3, fp
   10b28:	ldr	r2, [sp]
   10b2c:	ldr	r1, [sp, #4]
   10b30:	mov	r0, r5
   10b34:	bl	428c <__isoc99_sscanf@plt>
   10b38:	cmp	r0, #0
   10b3c:	beq	10b7c <por_utf8_decode+0xdc>
   10b40:	ldr	r3, [sp, #8]
   10b44:	ldr	r2, [sp, #60]	; 0x3c
   10b48:	cmp	r3, r2
   10b4c:	bcs	10b7c <por_utf8_decode+0xdc>
   10b50:	ldrb	r3, [r9, r3]
   10b54:	cmp	r3, #0
   10b58:	beq	10b7c <por_utf8_decode+0xdc>
   10b5c:	ldr	r2, [sp, #12]
   10b60:	strb	r3, [r6]
   10b64:	add	r5, r5, r2
   10b68:	b	10afc <por_utf8_decode+0x5c>
   10b6c:	mov	r8, sl
   10b70:	mov	r0, r8
   10b74:	add	sp, sp, #20
   10b78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10b7c:	mvn	r8, #0
   10b80:	mov	r0, r8
   10b84:	add	sp, sp, #20
   10b88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10b8c:	.word	0x00013f00

00010b90 <readstat_por_parse_double>:
   10b90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10b94:	vpush	{d8-d9}
   10b98:	add	r8, r0, r1
   10b9c:	cmp	r0, r8
   10ba0:	mov	r7, r0
   10ba4:	sub	sp, sp, #1072	; 0x430
   10ba8:	sub	sp, sp, #4
   10bac:	str	r1, [sp, #44]	; 0x2c
   10bb0:	str	r2, [sp, #32]
   10bb4:	str	r3, [sp, #40]	; 0x28
   10bb8:	beq	10e88 <readstat_por_parse_double+0x2f8>
   10bbc:	vldr	d7, [pc, #932]	; 10f68 <readstat_por_parse_double+0x3d8>
   10bc0:	vldr	d6, [pc, #936]	; 10f70 <readstat_por_parse_double+0x3e0>
   10bc4:	ldr	r3, [pc, #948]	; 10f80 <readstat_por_parse_double+0x3f0>
   10bc8:	ldr	fp, [pc, #948]	; 10f84 <readstat_por_parse_double+0x3f4>
   10bcc:	add	r3, pc, r3
   10bd0:	str	r3, [sp, #20]
   10bd4:	vmov.f64	d1, d7
   10bd8:	ldr	r3, [pc, #936]	; 10f88 <readstat_por_parse_double+0x3f8>
   10bdc:	vmov.f64	d3, d7
   10be0:	vmov.f64	d5, d7
   10be4:	vmov.f64	d8, d7
   10be8:	vmov.f64	d0, d7
   10bec:	vmov.f64	d2, d6
   10bf0:	mov	r0, #0
   10bf4:	add	fp, pc, fp
   10bf8:	add	r3, pc, r3
   10bfc:	mov	r5, #1
   10c00:	mov	r2, r0
   10c04:	mov	r9, r0
   10c08:	mov	r6, r7
   10c0c:	mov	sl, #4
   10c10:	str	r3, [sp, #24]
   10c14:	add	r3, fp, #168	; 0xa8
   10c18:	str	fp, [sp, #16]
   10c1c:	str	r3, [sp, #36]	; 0x24
   10c20:	str	r0, [sp, #28]
   10c24:	cmp	sl, #0
   10c28:	add	r2, fp, r2
   10c2c:	mov	r3, r0
   10c30:	beq	10c78 <readstat_por_parse_double+0xe8>
   10c34:	sub	ip, sl, #1
   10c38:	adds	ip, r2, ip
   10c3c:	bcs	10c70 <readstat_por_parse_double+0xe0>
   10c40:	ldrb	r4, [r6]
   10c44:	mov	r1, r2
   10c48:	sub	r3, ip, r1
   10c4c:	ldrb	lr, [r1, r3, asr #1]
   10c50:	add	r3, r1, r3, asr #1
   10c54:	cmp	lr, r4
   10c58:	subhi	ip, r3, #1
   10c5c:	bhi	10c68 <readstat_por_parse_double+0xd8>
   10c60:	bcs	10e7c <readstat_por_parse_double+0x2ec>
   10c64:	add	r1, r3, #1
   10c68:	cmp	ip, r1
   10c6c:	bcs	10c48 <readstat_por_parse_double+0xb8>
   10c70:	add	r2, r2, sl
   10c74:	add	r3, r0, sl
   10c78:	ldr	r1, [sp, #20]
   10c7c:	add	r5, r1, r5
   10c80:	ldrb	r5, [r5, #56]	; 0x38
   10c84:	cmp	r5, #0
   10c88:	beq	10ce0 <readstat_por_parse_double+0x150>
   10c8c:	add	ip, r2, r5, lsl #1
   10c90:	sub	ip, ip, #2
   10c94:	cmp	r2, ip
   10c98:	bhi	10cdc <readstat_por_parse_double+0x14c>
   10c9c:	ldrb	r4, [r6]
   10ca0:	mov	r0, r2
   10ca4:	sub	r1, ip, r0
   10ca8:	asr	r1, r1, #1
   10cac:	bic	r1, r1, #1
   10cb0:	add	lr, r0, r1
   10cb4:	ldrb	r1, [r0, r1]
   10cb8:	cmp	r1, r4
   10cbc:	subhi	ip, lr, #2
   10cc0:	bhi	10cd4 <readstat_por_parse_double+0x144>
   10cc4:	ldrb	r1, [lr, #1]
   10cc8:	add	r0, lr, #2
   10ccc:	cmp	r1, r4
   10cd0:	bcs	10f40 <readstat_por_parse_double+0x3b0>
   10cd4:	cmp	ip, r0
   10cd8:	bcs	10ca4 <readstat_por_parse_double+0x114>
   10cdc:	add	r3, r3, r5
   10ce0:	ldr	r2, [sp, #16]
   10ce4:	add	r3, r2, r3
   10ce8:	ldrb	r1, [r3, #120]	; 0x78
   10cec:	ldrb	r5, [r3, #72]	; 0x48
   10cf0:	cmp	r1, #0
   10cf4:	beq	10d58 <readstat_por_parse_double+0x1c8>
   10cf8:	ldr	r3, [sp, #36]	; 0x24
   10cfc:	ldrb	r2, [r3, r1]
   10d00:	add	r3, r3, r1
   10d04:	add	r2, r3, r2
   10d08:	cmp	r3, r2
   10d0c:	beq	10d58 <readstat_por_parse_double+0x1c8>
   10d10:	ldrb	r1, [r3, #1]!
   10d14:	cmp	r1, #10
   10d18:	addls	pc, pc, r1, lsl #2
   10d1c:	b	10d08 <readstat_por_parse_double+0x178>
   10d20:	b	10e4c <readstat_por_parse_double+0x2bc>
   10d24:	b	10da8 <readstat_por_parse_double+0x218>
   10d28:	b	10d84 <readstat_por_parse_double+0x1f4>
   10d2c:	b	10e44 <readstat_por_parse_double+0x2b4>
   10d30:	b	10d4c <readstat_por_parse_double+0x1bc>
   10d34:	b	10d98 <readstat_por_parse_double+0x208>
   10d38:	b	10d8c <readstat_por_parse_double+0x1fc>
   10d3c:	b	10da0 <readstat_por_parse_double+0x210>
   10d40:	b	10d4c <readstat_por_parse_double+0x1bc>
   10d44:	b	10e74 <readstat_por_parse_double+0x2e4>
   10d48:	b	10de0 <readstat_por_parse_double+0x250>
   10d4c:	cmp	r3, r2
   10d50:	mov	r9, #1
   10d54:	bne	10d10 <readstat_por_parse_double+0x180>
   10d58:	cmp	r5, #0
   10d5c:	beq	10f4c <readstat_por_parse_double+0x3bc>
   10d60:	add	r6, r6, #1
   10d64:	cmp	r8, r6
   10d68:	beq	10f50 <readstat_por_parse_double+0x3c0>
   10d6c:	ldr	r3, [sp, #24]
   10d70:	add	r3, r3, r5
   10d74:	ldrb	r2, [r3, #204]	; 0xcc
   10d78:	ldrb	r0, [r3, #220]	; 0xdc
   10d7c:	ldrb	sl, [r3, #236]	; 0xec
   10d80:	b	10c24 <readstat_por_parse_double+0x94>
   10d84:	vmov.f64	d7, d0
   10d88:	b	10d08 <readstat_por_parse_double+0x178>
   10d8c:	mov	r1, #1
   10d90:	str	r1, [sp, #28]
   10d94:	b	10d08 <readstat_por_parse_double+0x178>
   10d98:	vmov.f64	d3, d7
   10d9c:	b	10d08 <readstat_por_parse_double+0x178>
   10da0:	vmov.f64	d1, d7
   10da4:	b	10d08 <readstat_por_parse_double+0x178>
   10da8:	ldrb	r1, [r6]
   10dac:	sub	r0, r1, #48	; 0x30
   10db0:	uxtb	ip, r0
   10db4:	cmp	ip, #9
   10db8:	bls	10f0c <readstat_por_parse_double+0x37c>
   10dbc:	sub	r0, r1, #65	; 0x41
   10dc0:	cmp	r0, #19
   10dc4:	subls	r1, r1, #55	; 0x37
   10dc8:	vmovls	s9, r1
   10dcc:	vcvtls.f64.s32	d4, s9
   10dd0:	vdivls.f64	d9, d4, d6
   10dd4:	vaddls.f64	d5, d5, d9
   10dd8:	vmul.f64	d6, d6, d2
   10ddc:	b	10d08 <readstat_por_parse_double+0x178>
   10de0:	vcmp.f64	d8, d8
   10de4:	add	r8, r6, #1
   10de8:	vmrs	APSR_nzcv, fpscr
   10dec:	bvs	10e20 <readstat_por_parse_double+0x290>
   10df0:	vadd.f64	d8, d5, d3
   10df4:	mov	r4, #1
   10df8:	ldr	r3, [sp, #28]
   10dfc:	cmp	r3, #0
   10e00:	vnegne.f64	d1, d1
   10e04:	vcmp.f64	d1, #0.0
   10e08:	vmrs	APSR_nzcv, fpscr
   10e0c:	bne	10f20 <readstat_por_parse_double+0x390>
   10e10:	cmp	r9, #0
   10e14:	vnegne.f64	d8, d8
   10e18:	cmp	r4, #0
   10e1c:	beq	10e8c <readstat_por_parse_double+0x2fc>
   10e20:	ldr	r3, [sp, #32]
   10e24:	cmp	r3, #0
   10e28:	ldrne	r3, [sp, #32]
   10e2c:	vstrne	d8, [r3]
   10e30:	sub	r0, r8, r7
   10e34:	add	sp, sp, #1072	; 0x430
   10e38:	add	sp, sp, #4
   10e3c:	vpop	{d8-d9}
   10e40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10e44:	vldr	d5, [pc, #284]	; 10f68 <readstat_por_parse_double+0x3d8>
   10e48:	b	10d08 <readstat_por_parse_double+0x178>
   10e4c:	ldrb	r1, [r6]
   10e50:	sub	r0, r1, #48	; 0x30
   10e54:	uxtb	ip, r0
   10e58:	cmp	ip, #9
   10e5c:	bhi	10ee8 <readstat_por_parse_double+0x358>
   10e60:	vmov	s9, r0
   10e64:	vcvt.f64.s32	d4, s9
   10e68:	vmla.f64	d4, d7, d2
   10e6c:	vmov.f64	d7, d4
   10e70:	b	10d08 <readstat_por_parse_double+0x178>
   10e74:	vldr	d8, [pc, #252]	; 10f78 <readstat_por_parse_double+0x3e8>
   10e78:	b	10d08 <readstat_por_parse_double+0x178>
   10e7c:	sub	r3, r3, r2
   10e80:	add	r3, r0, r3
   10e84:	b	10ce0 <readstat_por_parse_double+0x150>
   10e88:	mov	r5, #1
   10e8c:	ldr	r6, [sp, #40]	; 0x28
   10e90:	cmp	r6, #0
   10e94:	mvneq	r0, #0
   10e98:	beq	10e34 <readstat_por_parse_double+0x2a4>
   10e9c:	ldr	r3, [sp, #44]	; 0x2c
   10ea0:	ldr	r2, [pc, #228]	; 10f8c <readstat_por_parse_double+0x3fc>
   10ea4:	add	r4, sp, #48	; 0x30
   10ea8:	str	r3, [sp]
   10eac:	add	r2, pc, r2
   10eb0:	sub	r3, r8, r7
   10eb4:	str	r5, [sp, #8]
   10eb8:	str	r7, [sp, #4]
   10ebc:	mov	r0, r4
   10ec0:	mov	r1, #1024	; 0x400
   10ec4:	bl	4280 <snprintf@plt>
   10ec8:	mov	r0, r4
   10ecc:	ldr	r1, [sp, #1128]	; 0x468
   10ed0:	blx	r6
   10ed4:	mvn	r0, #0
   10ed8:	add	sp, sp, #1072	; 0x430
   10edc:	add	sp, sp, #4
   10ee0:	vpop	{d8-d9}
   10ee4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10ee8:	sub	r0, r1, #65	; 0x41
   10eec:	cmp	r0, #19
   10ef0:	bhi	10d08 <readstat_por_parse_double+0x178>
   10ef4:	sub	r1, r1, #55	; 0x37
   10ef8:	vmov	s9, r1
   10efc:	vcvt.f64.s32	d4, s9
   10f00:	vmla.f64	d4, d7, d2
   10f04:	vmov.f64	d7, d4
   10f08:	b	10d08 <readstat_por_parse_double+0x178>
   10f0c:	vmov	s9, r0
   10f10:	vcvt.f64.s32	d4, s9
   10f14:	vdiv.f64	d9, d4, d6
   10f18:	vadd.f64	d5, d5, d9
   10f1c:	b	10dd8 <readstat_por_parse_double+0x248>
   10f20:	vldr	d0, [pc, #72]	; 10f70 <readstat_por_parse_double+0x3e0>
   10f24:	bl	3f8c <pow@plt>
   10f28:	cmp	r9, #0
   10f2c:	vmul.f64	d8, d8, d0
   10f30:	vnegne.f64	d8, d8
   10f34:	cmp	r4, #0
   10f38:	bne	10e20 <readstat_por_parse_double+0x290>
   10f3c:	b	10e8c <readstat_por_parse_double+0x2fc>
   10f40:	sub	r2, lr, r2
   10f44:	add	r3, r3, r2, asr #1
   10f48:	b	10ce0 <readstat_por_parse_double+0x150>
   10f4c:	mov	r8, r6
   10f50:	vcmp.f64	d8, d8
   10f54:	vmrs	APSR_nzcv, fpscr
   10f58:	vaddvc.f64	d8, d5, d3
   10f5c:	movvc	r4, #0
   10f60:	bvs	10e8c <readstat_por_parse_double+0x2fc>
   10f64:	b	10df8 <readstat_por_parse_double+0x268>
	...
   10f74:	.word	0x403e0000
   10f78:	.word	0x00000000
   10f7c:	.word	0x7ff80000
   10f80:	.word	0x00013e04
   10f84:	.word	0x00013ddc
   10f88:	.word	0x00013dd8
   10f8c:	.word	0x00013c20

00010f90 <read_bytes>:
   10f90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10f94:	sub	sp, sp, #12
   10f98:	ldr	fp, [r0, #44]	; 0x2c
   10f9c:	mov	r4, r0
   10fa0:	mov	sl, r1
   10fa4:	add	r6, r1, r2
   10fa8:	mov	r5, r1
   10fac:	add	r8, sp, #7
   10fb0:	mov	r7, #1
   10fb4:	mov	r9, #0
   10fb8:	cmp	r5, r6
   10fbc:	bcs	10fec <read_bytes+0x5c>
   10fc0:	ldr	r3, [r4, #52]	; 0x34
   10fc4:	cmp	r3, #0
   10fc8:	beq	10ff8 <read_bytes+0x68>
   10fcc:	ldrb	r3, [r4, #48]	; 0x30
   10fd0:	add	r5, r5, #1
   10fd4:	strb	r3, [r5, #-1]
   10fd8:	ldr	r3, [r4, #52]	; 0x34
   10fdc:	cmp	r5, r6
   10fe0:	sub	r3, r3, #1
   10fe4:	str	r3, [r4, #52]	; 0x34
   10fe8:	bcc	10fc0 <read_bytes+0x30>
   10fec:	sub	r0, r5, sl
   10ff0:	add	sp, sp, #12
   10ff4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10ff8:	ldr	r3, [fp, #12]
   10ffc:	ldr	r2, [fp, #20]
   11000:	mov	r1, r7
   11004:	mov	r0, r8
   11008:	blx	r3
   1100c:	cmp	r0, #0
   11010:	beq	10fec <read_bytes+0x5c>
   11014:	cmn	r0, #1
   11018:	beq	11098 <read_bytes+0x108>
   1101c:	ldrb	r3, [sp, #7]
   11020:	cmp	r3, #10
   11024:	cmpne	r3, #13
   11028:	bne	11048 <read_bytes+0xb8>
   1102c:	cmp	r3, #13
   11030:	beq	1106c <read_bytes+0xdc>
   11034:	ldr	r3, [r4, #40]	; 0x28
   11038:	str	r9, [r4, #40]	; 0x28
   1103c:	rsb	r3, r3, #80	; 0x50
   11040:	str	r3, [r4, #52]	; 0x34
   11044:	b	10fb8 <read_bytes+0x28>
   11048:	ldr	r2, [r4, #40]	; 0x28
   1104c:	cmp	r2, #80	; 0x50
   11050:	beq	11098 <read_bytes+0x108>
   11054:	strb	r3, [r5]
   11058:	ldr	r3, [r4, #40]	; 0x28
   1105c:	add	r5, r5, #1
   11060:	add	r3, r3, #1
   11064:	str	r3, [r4, #40]	; 0x28
   11068:	b	10fb8 <read_bytes+0x28>
   1106c:	ldr	r3, [fp, #12]
   11070:	ldr	r2, [fp, #20]
   11074:	mov	r1, r7
   11078:	mov	r0, r8
   1107c:	blx	r3
   11080:	add	r0, r0, #1
   11084:	cmp	r0, #1
   11088:	bls	11098 <read_bytes+0x108>
   1108c:	ldrb	r3, [sp, #7]
   11090:	cmp	r3, #10
   11094:	beq	11034 <read_bytes+0xa4>
   11098:	mvn	r0, #0
   1109c:	add	sp, sp, #12
   110a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000110a4 <read_double_with_peek>:
   110a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   110a8:	sub	sp, sp, #1456	; 0x5b0
   110ac:	sub	sp, sp, #12
   110b0:	ldr	r7, [pc, #476]	; 11294 <read_double_with_peek+0x1f0>
   110b4:	add	r5, sp, #40	; 0x28
   110b8:	mov	r6, #0
   110bc:	strb	r2, [sp, #40]	; 0x28
   110c0:	mov	r8, r1
   110c4:	mov	r2, #1
   110c8:	add	r1, r5, #1
   110cc:	strd	r6, [r5, #-8]
   110d0:	mov	r4, r0
   110d4:	bl	10f90 <read_bytes>
   110d8:	cmp	r0, #1
   110dc:	beq	110f0 <read_double_with_peek+0x4c>
   110e0:	mov	r0, #5
   110e4:	add	sp, sp, #1456	; 0x5b0
   110e8:	add	sp, sp, #12
   110ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   110f0:	ldrb	r3, [sp, #40]	; 0x28
   110f4:	add	r3, r4, r3, lsl #1
   110f8:	ldrh	r3, [r3, #94]	; 0x5e
   110fc:	cmp	r3, #42	; 0x2a
   11100:	ldrb	r3, [sp, #41]	; 0x29
   11104:	add	r3, r4, r3, lsl #1
   11108:	ldrh	r3, [r3, #94]	; 0x5e
   1110c:	beq	11228 <read_double_with_peek+0x184>
   11110:	add	r9, r5, #2
   11114:	add	fp, r5, #99	; 0x63
   11118:	mov	r6, #2
   1111c:	mov	r7, #0
   11120:	mov	sl, #1
   11124:	b	11158 <read_double_with_peek+0xb4>
   11128:	bl	10f90 <read_bytes>
   1112c:	mov	r3, r9
   11130:	cmp	r0, #1
   11134:	bne	110e0 <read_double_with_peek+0x3c>
   11138:	adds	r6, r6, #1
   1113c:	adc	r7, r7, #0
   11140:	cmp	r9, fp
   11144:	add	r9, r9, #1
   11148:	beq	110e0 <read_double_with_peek+0x3c>
   1114c:	ldrb	r3, [r3]
   11150:	add	r3, r4, r3, lsl #1
   11154:	ldrh	r3, [r3, #94]	; 0x5e
   11158:	cmp	r3, #47	; 0x2f
   1115c:	mov	r1, r9
   11160:	mov	r2, sl
   11164:	mov	r0, r4
   11168:	bne	11128 <read_double_with_peek+0x84>
   1116c:	add	r3, r4, #94	; 0x5e
   11170:	add	r9, sp, #140	; 0x8c
   11174:	mov	r2, r9
   11178:	str	r3, [sp]
   1117c:	mov	r1, r6
   11180:	mov	r3, #300	; 0x12c
   11184:	mov	r0, r5
   11188:	bl	425c <por_utf8_encode@plt>
   1118c:	mov	r2, r0
   11190:	asr	r3, r0, #31
   11194:	cmn	r0, #1
   11198:	mov	sl, r0
   1119c:	strd	r2, [sp, #24]
   111a0:	beq	111dc <read_double_with_peek+0x138>
   111a4:	ldr	r2, [r4, #36]	; 0x24
   111a8:	ldr	r3, [r4, #24]
   111ac:	mov	r1, sl
   111b0:	str	r2, [sp]
   111b4:	mov	r0, r9
   111b8:	sub	r2, r5, #8
   111bc:	bl	4250 <readstat_por_parse_double@plt>
   111c0:	cmn	r0, #1
   111c4:	movne	r0, #0
   111c8:	beq	11240 <read_double_with_peek+0x19c>
   111cc:	cmp	r8, #0
   111d0:	ldrdne	r2, [r5, #-8]
   111d4:	strdne	r2, [r8]
   111d8:	b	110e4 <read_double_with_peek+0x40>
   111dc:	ldr	r3, [r4, #24]
   111e0:	cmp	r3, #0
   111e4:	moveq	r0, #16
   111e8:	beq	111cc <read_double_with_peek+0x128>
   111ec:	ldr	r2, [pc, #164]	; 11298 <read_double_with_peek+0x1f4>
   111f0:	str	r6, [sp, #8]
   111f4:	strd	r6, [sp]
   111f8:	add	r6, sp, #440	; 0x1b8
   111fc:	add	r2, pc, r2
   11200:	mov	r1, #1024	; 0x400
   11204:	str	r5, [sp, #12]
   11208:	mov	r0, r6
   1120c:	bl	4280 <snprintf@plt>
   11210:	mov	r0, r6
   11214:	ldr	r3, [r4, #24]
   11218:	ldr	r1, [r4, #36]	; 0x24
   1121c:	blx	r3
   11220:	mov	r0, #16
   11224:	b	111cc <read_double_with_peek+0x128>
   11228:	cmp	r3, #46	; 0x2e
   1122c:	bne	11110 <read_double_with_peek+0x6c>
   11230:	cmp	r8, #0
   11234:	mov	r0, #0
   11238:	strdne	r6, [r8]
   1123c:	b	110e4 <read_double_with_peek+0x40>
   11240:	ldr	r3, [r4, #24]
   11244:	cmp	r3, #0
   11248:	moveq	r0, #5
   1124c:	beq	111cc <read_double_with_peek+0x128>
   11250:	ldrd	r2, [sp, #24]
   11254:	add	r6, sp, #440	; 0x1b8
   11258:	mov	r1, #1024	; 0x400
   1125c:	strd	r2, [sp]
   11260:	ldr	r2, [pc, #52]	; 1129c <read_double_with_peek+0x1f8>
   11264:	str	r5, [sp, #16]
   11268:	add	r2, pc, r2
   1126c:	str	r9, [sp, #12]
   11270:	str	sl, [sp, #8]
   11274:	mov	r0, r6
   11278:	bl	4280 <snprintf@plt>
   1127c:	mov	r0, r6
   11280:	ldr	r3, [r4, #24]
   11284:	ldr	r1, [r4, #36]	; 0x24
   11288:	blx	r3
   1128c:	mov	r0, #5
   11290:	b	111cc <read_double_with_peek+0x128>
   11294:	.word	0x7ff80000
   11298:	.word	0x00013904
   1129c:	.word	0x000138cc

000112a0 <maybe_read_string>:
   112a0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   112a4:	sub	sp, sp, #1040	; 0x410
   112a8:	add	r6, sp, #16
   112ac:	mov	r8, r1
   112b0:	mov	r9, r2
   112b4:	mov	r1, r6
   112b8:	mov	r2, #1
   112bc:	mov	r5, r3
   112c0:	mov	r7, r0
   112c4:	bl	10f90 <read_bytes>
   112c8:	cmp	r0, #1
   112cc:	movne	r0, #0
   112d0:	movne	r4, #5
   112d4:	beq	112ec <maybe_read_string+0x4c>
   112d8:	cmp	r5, #0
   112dc:	strne	r0, [r5]
   112e0:	mov	r0, r4
   112e4:	add	sp, sp, #1040	; 0x410
   112e8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   112ec:	ldrb	r2, [sp, #16]
   112f0:	add	r3, r7, r2, lsl #1
   112f4:	ldrh	r3, [r3, #94]	; 0x5e
   112f8:	cmp	r3, #90	; 0x5a
   112fc:	moveq	r4, #0
   11300:	beq	112d8 <maybe_read_string+0x38>
   11304:	sub	r1, r6, #8
   11308:	mov	r0, r7
   1130c:	bl	110a4 <read_double_with_peek>
   11310:	subs	r4, r0, #0
   11314:	bne	11428 <maybe_read_string+0x188>
   11318:	vldr	d7, [r6, #-8]
   1131c:	vcmpe.f64	d7, #0.0
   11320:	vmrs	APSR_nzcv, fpscr
   11324:	bmi	11338 <maybe_read_string+0x98>
   11328:	vldr	d6, [pc, #256]	; 11430 <maybe_read_string+0x190>
   1132c:	vcmpe.f64	d7, d6
   11330:	vmrs	APSR_nzcv, fpscr
   11334:	ble	11348 <maybe_read_string+0xa8>
   11338:	mov	r4, #5
   1133c:	mov	r0, r4
   11340:	add	sp, sp, #1040	; 0x410
   11344:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11348:	vcmp.f64	d7, d7
   1134c:	vmrs	APSR_nzcv, fpscr
   11350:	bvs	11338 <maybe_read_string+0x98>
   11354:	vcvt.u32.f64	s15, d7
   11358:	ldr	r3, [r7, #620]	; 0x26c
   1135c:	vmov	sl, s15
   11360:	cmp	sl, r3
   11364:	bhi	113bc <maybe_read_string+0x11c>
   11368:	mov	r2, sl
   1136c:	ldr	r1, [r7, #616]	; 0x268
   11370:	mov	r0, r7
   11374:	bl	10f90 <read_bytes>
   11378:	cmn	r0, #1
   1137c:	moveq	r4, #2
   11380:	beq	112e0 <maybe_read_string+0x40>
   11384:	add	r2, r7, #94	; 0x5e
   11388:	ldr	r0, [r7, #616]	; 0x268
   1138c:	sub	r3, r9, #1
   11390:	str	r2, [sp]
   11394:	mov	r1, sl
   11398:	mov	r2, r8
   1139c:	bl	425c <por_utf8_encode@plt>
   113a0:	cmn	r0, #1
   113a4:	beq	113e0 <maybe_read_string+0x140>
   113a8:	mov	r3, #0
   113ac:	cmp	r5, #0
   113b0:	strb	r3, [r8, r0]
   113b4:	strne	r3, [r5]
   113b8:	b	112e0 <maybe_read_string+0x40>
   113bc:	vmov	r1, s15
   113c0:	vstr	s15, [r7, #620]	; 0x26c
   113c4:	ldr	r0, [r7, #616]	; 0x268
   113c8:	bl	3ff8 <realloc@plt>
   113cc:	ldr	r2, [r7, #620]	; 0x26c
   113d0:	mov	r1, r4
   113d4:	str	r0, [r7, #616]	; 0x268
   113d8:	bl	42a4 <memset@plt>
   113dc:	b	11368 <maybe_read_string+0xc8>
   113e0:	ldr	r3, [r7, #24]
   113e4:	cmp	r3, #0
   113e8:	moveq	r4, #16
   113ec:	beq	112e0 <maybe_read_string+0x40>
   113f0:	ldr	r2, [r7, #616]	; 0x268
   113f4:	mov	r3, sl
   113f8:	str	r2, [sp]
   113fc:	ldr	r2, [pc, #52]	; 11438 <maybe_read_string+0x198>
   11400:	mov	r1, #1024	; 0x400
   11404:	add	r2, pc, r2
   11408:	mov	r0, r6
   1140c:	bl	4280 <snprintf@plt>
   11410:	mov	r0, r6
   11414:	ldr	r3, [r7, #24]
   11418:	ldr	r1, [r7, #36]	; 0x24
   1141c:	blx	r3
   11420:	mov	r4, #16
   11424:	b	112e0 <maybe_read_string+0x40>
   11428:	mov	r0, #0
   1142c:	b	112d8 <maybe_read_string+0x38>
   11430:	.word	0x00000000
   11434:	.word	0x40d38800
   11438:	.word	0x00013768

0001143c <read_version_and_timestamp>:
   1143c:	push	{r4, r5, r6, r7, r8, lr}
   11440:	sub	sp, sp, #320	; 0x140
   11444:	add	r7, sp, #20
   11448:	mov	r4, r0
   1144c:	mov	r2, #44	; 0x2c
   11450:	mov	r1, #0
   11454:	mov	r0, r7
   11458:	add	r5, sp, #16
   1145c:	bl	42a4 <memset@plt>
   11460:	mvn	r3, #0
   11464:	mov	r0, r4
   11468:	sub	r1, r5, #1
   1146c:	mov	r2, #1
   11470:	str	r3, [sp, #52]	; 0x34
   11474:	bl	10f90 <read_bytes>
   11478:	cmp	r0, #1
   1147c:	movne	r6, #2
   11480:	beq	11490 <read_version_and_timestamp+0x54>
   11484:	mov	r0, r6
   11488:	add	sp, sp, #320	; 0x140
   1148c:	pop	{r4, r5, r6, r7, r8, pc}
   11490:	add	r8, sp, #64	; 0x40
   11494:	mov	ip, #0
   11498:	mov	r1, r8
   1149c:	mov	r3, r5
   114a0:	mov	r2, #256	; 0x100
   114a4:	mov	r0, r4
   114a8:	str	ip, [sp, #16]
   114ac:	bl	112a0 <maybe_read_string>
   114b0:	subs	r6, r0, #0
   114b4:	bne	11484 <read_version_and_timestamp+0x48>
   114b8:	ldr	r3, [sp, #16]
   114bc:	cmp	r3, #0
   114c0:	beq	114cc <read_version_and_timestamp+0x90>
   114c4:	mov	r6, #5
   114c8:	b	11484 <read_version_and_timestamp+0x48>
   114cc:	ldr	r1, [pc, #184]	; 1158c <read_version_and_timestamp+0x150>
   114d0:	add	r3, sp, #32
   114d4:	str	r3, [sp]
   114d8:	add	r2, sp, #40	; 0x28
   114dc:	add	r3, sp, #36	; 0x24
   114e0:	add	r1, pc, r1
   114e4:	mov	r0, r8
   114e8:	bl	428c <__isoc99_sscanf@plt>
   114ec:	cmp	r0, #3
   114f0:	beq	114fc <read_version_and_timestamp+0xc0>
   114f4:	mov	r6, #29
   114f8:	b	11484 <read_version_and_timestamp+0x48>
   114fc:	mov	r3, r5
   11500:	mov	r2, #256	; 0x100
   11504:	mov	r1, r8
   11508:	mov	r0, r4
   1150c:	str	r6, [sp, #16]
   11510:	bl	112a0 <maybe_read_string>
   11514:	subs	r6, r0, #0
   11518:	bne	11484 <read_version_and_timestamp+0x48>
   1151c:	ldr	r3, [sp, #16]
   11520:	cmp	r3, #0
   11524:	bne	114c4 <read_version_and_timestamp+0x88>
   11528:	ldr	r1, [pc, #96]	; 11590 <read_version_and_timestamp+0x154>
   1152c:	str	r7, [sp]
   11530:	mov	r0, r8
   11534:	add	r3, sp, #24
   11538:	add	r2, sp, #28
   1153c:	add	r1, pc, r1
   11540:	bl	428c <__isoc99_sscanf@plt>
   11544:	cmp	r0, #3
   11548:	bne	114f4 <read_version_and_timestamp+0xb8>
   1154c:	ldr	r3, [sp, #40]	; 0x28
   11550:	ldr	r2, [sp, #36]	; 0x24
   11554:	sub	r3, r3, #1888	; 0x760
   11558:	sub	r3, r3, #12
   1155c:	sub	r2, r2, #1
   11560:	mov	r0, r7
   11564:	str	r3, [sp, #40]	; 0x28
   11568:	str	r2, [sp, #36]	; 0x24
   1156c:	bl	3e54 <mktime@plt>
   11570:	ldrb	r3, [sp, #15]
   11574:	add	r3, r4, r3, lsl #1
   11578:	ldrh	r3, [r3, #94]	; 0x5e
   1157c:	sub	r3, r3, #65	; 0x41
   11580:	str	r3, [r4, #60]	; 0x3c
   11584:	str	r0, [r4, #56]	; 0x38
   11588:	b	11484 <read_version_and_timestamp+0x48>
   1158c:	.word	0x000136ac
   11590:	.word	0x00013660

00011594 <handle_variables>:
   11594:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11598:	mov	r5, r0
   1159c:	ldr	r6, [r0, #632]	; 0x278
   115a0:	sub	sp, sp, #268	; 0x10c
   115a4:	cmp	r6, #0
   115a8:	ble	11674 <handle_variables+0xe0>
   115ac:	ldr	r3, [pc, #328]	; 116fc <handle_variables+0x168>
   115b0:	mov	r7, #0
   115b4:	add	r3, pc, r3
   115b8:	str	r3, [sp, #4]
   115bc:	mov	r9, r7
   115c0:	mov	r4, r7
   115c4:	add	sl, sp, #8
   115c8:	b	115e4 <handle_variables+0x50>
   115cc:	add	r9, r9, #1
   115d0:	ldr	r6, [r5, #632]	; 0x278
   115d4:	add	r4, r4, #1
   115d8:	cmp	r6, r4
   115dc:	add	r7, r7, #280	; 0x118
   115e0:	ble	11674 <handle_variables+0xe0>
   115e4:	ldr	r6, [r5, #652]	; 0x28c
   115e8:	ldr	r2, [r5, #612]	; 0x264
   115ec:	add	r6, r6, r7
   115f0:	mov	r1, r9
   115f4:	mov	r0, r6
   115f8:	str	r4, [r6, #8]
   115fc:	ldr	r8, [r5, #648]	; 0x288
   11600:	bl	4274 <spss_init_variable_for_info@plt>
   11604:	ldr	r3, [r6, #4]
   11608:	ldr	r2, [sp, #4]
   1160c:	mov	r1, #256	; 0x100
   11610:	lsl	fp, r4, #2
   11614:	str	r0, [r8, r4, lsl #2]
   11618:	mov	r0, sl
   1161c:	bl	4280 <snprintf@plt>
   11620:	ldr	r8, [r5, #8]
   11624:	mov	r0, r4
   11628:	cmp	r8, #0
   1162c:	beq	115cc <handle_variables+0x38>
   11630:	ldr	r2, [r6, #4]
   11634:	ldr	r1, [r5, #648]	; 0x288
   11638:	cmn	r2, #1
   1163c:	movne	r2, sl
   11640:	moveq	r2, #0
   11644:	ldr	r3, [r5, #36]	; 0x24
   11648:	ldr	r1, [r1, r4, lsl #2]
   1164c:	blx	r8
   11650:	cmp	r0, #1
   11654:	beq	116e4 <handle_variables+0x150>
   11658:	cmp	r0, #2
   1165c:	bne	115cc <handle_variables+0x38>
   11660:	ldr	r3, [r5, #648]	; 0x288
   11664:	mov	r2, #1
   11668:	ldr	r3, [r3, fp]
   1166c:	str	r2, [r3, #2144]	; 0x860
   11670:	b	115d0 <handle_variables+0x3c>
   11674:	ldr	r9, [r5, #12]
   11678:	cmp	r9, #0
   1167c:	beq	116f0 <handle_variables+0x15c>
   11680:	ldrb	r3, [r5, #64]	; 0x40
   11684:	cmp	r3, #0
   11688:	beq	116f0 <handle_variables+0x15c>
   1168c:	cmp	r6, #0
   11690:	ble	116f0 <handle_variables+0x15c>
   11694:	ldr	r4, [r5, #652]	; 0x28c
   11698:	add	r8, r5, #64	; 0x40
   1169c:	add	r4, r4, #187	; 0xbb
   116a0:	mov	r7, #0
   116a4:	b	116b4 <handle_variables+0x120>
   116a8:	add	r7, r7, #1
   116ac:	cmp	r7, r6
   116b0:	beq	116f0 <handle_variables+0x15c>
   116b4:	mov	r0, r4
   116b8:	mov	r1, r8
   116bc:	bl	3e00 <strcmp@plt>
   116c0:	add	r4, r4, #280	; 0x118
   116c4:	cmp	r0, #0
   116c8:	bne	116a8 <handle_variables+0x114>
   116cc:	ldr	r3, [r5, #648]	; 0x288
   116d0:	ldr	r1, [r5, #36]	; 0x24
   116d4:	ldr	r0, [r3, r7, lsl #2]
   116d8:	blx	r9
   116dc:	cmp	r0, #0
   116e0:	beq	116f0 <handle_variables+0x15c>
   116e4:	mov	r0, #4
   116e8:	add	sp, sp, #268	; 0x10c
   116ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   116f0:	mov	r0, #0
   116f4:	add	sp, sp, #268	; 0x10c
   116f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   116fc:	.word	0x000135f8

00011700 <readstat_parse_por>:
   11700:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11704:	vpush	{d8-d9}
   11708:	mov	r6, r0
   1170c:	mov	r9, r2
   11710:	mov	r8, r1
   11714:	sub	sp, sp, #3136	; 0xc40
   11718:	sub	sp, sp, #12
   1171c:	ldr	r5, [r0, #32]
   11720:	bl	4490 <por_ctx_init@plt>
   11724:	mov	lr, r6
   11728:	ldr	sl, [r6, #48]	; 0x30
   1172c:	ldr	r7, [pc, #1660]	; 11db0 <readstat_parse_por+0x6b0>
   11730:	cmp	sl, #0
   11734:	add	r7, pc, r7
   11738:	mov	r4, r0
   1173c:	mov	ip, r0
   11740:	ldm	lr!, {r0, r1, r2, r3}
   11744:	stmia	ip!, {r0, r1, r2, r3}
   11748:	ldm	lr, {r0, r1, r2, r3}
   1174c:	ldr	lr, [r6, #44]	; 0x2c
   11750:	ldr	r6, [r6, #40]	; 0x28
   11754:	stm	ip, {r0, r1, r2, r3}
   11758:	strgt	sl, [r4, #644]	; 0x284
   1175c:	cmp	r6, #0
   11760:	str	r9, [r4, #36]	; 0x24
   11764:	str	r5, [r4, #44]	; 0x2c
   11768:	str	lr, [r4, #640]	; 0x280
   1176c:	beq	117a4 <readstat_parse_por+0xa4>
   11770:	ldr	r9, [pc, #1596]	; 11db4 <readstat_parse_por+0x6b4>
   11774:	mov	r0, r6
   11778:	add	r9, pc, r9
   1177c:	mov	r1, r9
   11780:	bl	3e00 <strcmp@plt>
   11784:	cmp	r0, #0
   11788:	bne	1180c <readstat_parse_por+0x10c>
   1178c:	ldr	r0, [r4, #612]	; 0x264
   11790:	cmn	r0, #1
   11794:	moveq	r3, #0
   11798:	streq	r3, [r4, #612]	; 0x264
   1179c:	moveq	r6, #7
   117a0:	beq	117e4 <readstat_parse_por+0xe4>
   117a4:	mov	r0, r8
   117a8:	ldr	r3, [r5]
   117ac:	ldr	r1, [r5, #20]
   117b0:	blx	r3
   117b4:	cmn	r0, #1
   117b8:	moveq	r6, #1
   117bc:	beq	117e4 <readstat_parse_por+0xe4>
   117c0:	ldr	r3, [r5, #8]
   117c4:	ldr	r2, [r5, #20]
   117c8:	mov	r1, #2
   117cc:	mov	r0, #0
   117d0:	blx	r3
   117d4:	cmn	r0, #1
   117d8:	str	r0, [r4, #32]
   117dc:	bne	11820 <readstat_parse_por+0x120>
   117e0:	mov	r6, #15
   117e4:	ldr	r3, [r5, #4]
   117e8:	ldr	r0, [r5, #20]
   117ec:	blx	r3
   117f0:	mov	r0, r4
   117f4:	bl	3db8 <por_ctx_free@plt>
   117f8:	mov	r0, r6
   117fc:	add	sp, sp, #3136	; 0xc40
   11800:	add	sp, sp, #12
   11804:	vpop	{d8-d9}
   11808:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1180c:	mov	r1, r9
   11810:	mov	r0, r6
   11814:	bl	4130 <iconv_open@plt>
   11818:	str	r0, [r4, #612]	; 0x264
   1181c:	b	11790 <readstat_parse_por+0x90>
   11820:	mov	r1, #0
   11824:	mov	r0, r1
   11828:	ldr	r3, [r5, #8]
   1182c:	ldr	r2, [r5, #20]
   11830:	blx	r3
   11834:	cmn	r0, #1
   11838:	beq	117e0 <readstat_parse_por+0xe0>
   1183c:	add	fp, sp, #120	; 0x78
   11840:	mov	r1, fp
   11844:	mov	r2, #200	; 0xc8
   11848:	mov	r0, r4
   1184c:	bl	10f90 <read_bytes>
   11850:	cmp	r0, #200	; 0xc8
   11854:	beq	11860 <readstat_parse_por+0x160>
   11858:	mov	r6, #2
   1185c:	b	117e4 <readstat_parse_por+0xe4>
   11860:	add	r3, r4, #73	; 0x49
   11864:	mov	r0, r3
   11868:	str	r3, [sp, #28]
   1186c:	mov	r3, #0
   11870:	str	r3, [sp]
   11874:	add	r2, fp, #60	; 0x3c
   11878:	mov	r3, #20
   1187c:	mov	r1, #21
   11880:	bl	4238 <readstat_convert@plt>
   11884:	subs	r6, r0, #0
   11888:	bne	117e4 <readstat_parse_por+0xe4>
   1188c:	add	r8, sp, #320	; 0x140
   11890:	mov	r1, r8
   11894:	mov	r2, #256	; 0x100
   11898:	mov	r0, r4
   1189c:	bl	10f90 <read_bytes>
   118a0:	cmp	r0, #256	; 0x100
   118a4:	bne	11858 <readstat_parse_por+0x158>
   118a8:	ldrb	r1, [sp, #446]	; 0x1be
   118ac:	ldr	r2, [pc, #1284]	; 11db8 <readstat_parse_por+0x6b8>
   118b0:	ldr	r3, [pc, #1284]	; 11dbc <readstat_parse_por+0x6bc>
   118b4:	strb	r1, [r4, #48]	; 0x30
   118b8:	ldr	lr, [r7, r2]
   118bc:	ldr	r6, [r7, r3]
   118c0:	mov	r2, r8
   118c4:	sub	r3, lr, #1
   118c8:	mov	r1, r6
   118cc:	add	lr, lr, #255	; 0xff
   118d0:	ldrsb	r0, [r3, #1]!
   118d4:	cmp	r0, #0
   118d8:	bne	118e8 <readstat_parse_por+0x1e8>
   118dc:	ldrh	r0, [r1]
   118e0:	cmp	r0, #0
   118e4:	beq	118f4 <readstat_parse_por+0x1f4>
   118e8:	ldrb	ip, [r2]
   118ec:	add	ip, r4, ip, lsl #1
   118f0:	strh	r0, [ip, #94]	; 0x5e
   118f4:	cmp	lr, r3
   118f8:	add	r2, r2, #1
   118fc:	add	r1, r1, #2
   11900:	bne	118d0 <readstat_parse_por+0x1d0>
   11904:	ldrb	r3, [sp, #384]	; 0x180
   11908:	ldrh	r0, [r6, #128]	; 0x80
   1190c:	add	r2, sp, #88	; 0x58
   11910:	str	r2, [sp, #24]
   11914:	add	r3, r4, r3, lsl #1
   11918:	mov	r1, r2
   1191c:	strh	r0, [r3, #94]	; 0x5e
   11920:	mov	r2, #8
   11924:	mov	r0, r4
   11928:	bl	10f90 <read_bytes>
   1192c:	cmp	r0, #8
   11930:	mov	r6, r0
   11934:	bne	11858 <readstat_parse_por+0x158>
   11938:	add	r3, sp, #104	; 0x68
   1193c:	str	r3, [sp, #36]	; 0x24
   11940:	add	r7, sp, #96	; 0x60
   11944:	add	r3, r4, #94	; 0x5e
   11948:	mov	r2, r7
   1194c:	str	r3, [sp]
   11950:	mov	r1, r0
   11954:	mov	r3, r0
   11958:	ldr	r0, [sp, #24]
   1195c:	bl	425c <por_utf8_encode@plt>
   11960:	cmn	r0, #1
   11964:	mov	r2, r0
   11968:	beq	11990 <readstat_parse_por+0x290>
   1196c:	ldr	r0, [pc, #1100]	; 11dc0 <readstat_parse_por+0x6c0>
   11970:	mov	r1, r7
   11974:	add	r0, pc, r0
   11978:	bl	44fc <strncmp@plt>
   1197c:	subs	r3, r0, #0
   11980:	str	r3, [sp, #32]
   11984:	beq	119dc <readstat_parse_por+0x2dc>
   11988:	mov	r6, #5
   1198c:	b	117e4 <readstat_parse_por+0xe4>
   11990:	ldr	r3, [r4, #24]
   11994:	cmp	r3, #0
   11998:	moveq	r6, #16
   1199c:	beq	117e4 <readstat_parse_por+0xe4>
   119a0:	ldr	r3, [sp, #24]
   119a4:	ldr	r2, [pc, #1048]	; 11dc4 <readstat_parse_por+0x6c4>
   119a8:	str	r3, [sp]
   119ac:	mov	r3, r6
   119b0:	add	r6, sp, #2112	; 0x840
   119b4:	mov	r0, r6
   119b8:	add	r2, pc, r2
   119bc:	mov	r1, #1024	; 0x400
   119c0:	bl	4280 <snprintf@plt>
   119c4:	mov	r0, r6
   119c8:	ldr	r3, [r4, #24]
   119cc:	ldr	r1, [r4, #36]	; 0x24
   119d0:	blx	r3
   119d4:	mov	r6, #16
   119d8:	b	117e4 <readstat_parse_por+0xe4>
   119dc:	mvn	r3, #0
   119e0:	str	r3, [r4, #636]	; 0x27c
   119e4:	mov	r0, r4
   119e8:	bl	4010 <read_version_and_timestamp@plt>
   119ec:	subs	r6, r0, #0
   119f0:	bne	117e4 <readstat_parse_por+0xe4>
   119f4:	ldr	r3, [pc, #972]	; 11dc8 <readstat_parse_por+0x6c8>
   119f8:	vldr	d9, [pc, #928]	; 11da0 <readstat_parse_por+0x6a0>
   119fc:	add	r3, pc, r3
   11a00:	str	r3, [sp, #60]	; 0x3c
   11a04:	add	r3, sp, #2112	; 0x840
   11a08:	add	r3, r3, #8
   11a0c:	vldr	d8, [pc, #916]	; 11da8 <readstat_parse_por+0x6a8>
   11a10:	str	r3, [sp, #48]	; 0x30
   11a14:	add	r3, sp, #1088	; 0x440
   11a18:	str	fp, [sp, #44]	; 0x2c
   11a1c:	add	r8, sp, #2112	; 0x840
   11a20:	mov	fp, r3
   11a24:	str	r5, [sp, #20]
   11a28:	mov	r2, #1
   11a2c:	mov	r1, r8
   11a30:	mov	r0, r4
   11a34:	bl	10f90 <read_bytes>
   11a38:	cmp	r0, #1
   11a3c:	beq	11a48 <readstat_parse_por+0x348>
   11a40:	ldr	r5, [sp, #20]
   11a44:	b	11988 <readstat_parse_por+0x288>
   11a48:	ldrb	r3, [sp, #2112]	; 0x840
   11a4c:	add	r3, r4, r3, lsl #1
   11a50:	ldrh	r3, [r3, #94]	; 0x5e
   11a54:	sub	r3, r3, #49	; 0x31
   11a58:	cmp	r3, #21
   11a5c:	addls	pc, pc, r3, lsl #2
   11a60:	b	11a40 <readstat_parse_por+0x340>
   11a64:	b	11abc <readstat_parse_por+0x3bc>
   11a68:	b	11abc <readstat_parse_por+0x3bc>
   11a6c:	b	11abc <readstat_parse_por+0x3bc>
   11a70:	b	121d4 <readstat_parse_por+0xad4>
   11a74:	b	12660 <readstat_parse_por+0xf60>
   11a78:	b	1264c <readstat_parse_por+0xf4c>
   11a7c:	b	1251c <readstat_parse_por+0xe1c>
   11a80:	b	1245c <readstat_parse_por+0xd5c>
   11a84:	b	12400 <readstat_parse_por+0xd00>
   11a88:	b	11a40 <readstat_parse_por+0x340>
   11a8c:	b	11a40 <readstat_parse_por+0x340>
   11a90:	b	11a40 <readstat_parse_por+0x340>
   11a94:	b	11a40 <readstat_parse_por+0x340>
   11a98:	b	11a40 <readstat_parse_por+0x340>
   11a9c:	b	11a40 <readstat_parse_por+0x340>
   11aa0:	b	11a40 <readstat_parse_por+0x340>
   11aa4:	b	12340 <readstat_parse_por+0xc40>
   11aa8:	b	122a8 <readstat_parse_por+0xba8>
   11aac:	b	11f24 <readstat_parse_por+0x824>
   11ab0:	b	11e7c <readstat_parse_por+0x77c>
   11ab4:	b	11fd4 <readstat_parse_por+0x8d4>
   11ab8:	b	11af0 <readstat_parse_por+0x3f0>
   11abc:	mov	ip, #0
   11ac0:	mov	r3, r8
   11ac4:	mov	r2, #256	; 0x100
   11ac8:	add	r1, sp, #576	; 0x240
   11acc:	mov	r0, r4
   11ad0:	str	ip, [sp, #2112]	; 0x840
   11ad4:	bl	112a0 <maybe_read_string>
   11ad8:	subs	r6, r0, #0
   11adc:	bne	11fcc <readstat_parse_por+0x8cc>
   11ae0:	ldr	r3, [sp, #2112]	; 0x840
   11ae4:	cmp	r3, #0
   11ae8:	bne	11a40 <readstat_parse_por+0x340>
   11aec:	b	11a28 <readstat_parse_por+0x328>
   11af0:	ldr	r3, [r4, #632]	; 0x278
   11af4:	ldr	r2, [r4, #636]	; 0x27c
   11af8:	sub	r3, r3, #1
   11afc:	cmp	r2, r3
   11b00:	ldr	r5, [sp, #20]
   11b04:	ldr	fp, [sp, #44]	; 0x2c
   11b08:	movne	r6, #8
   11b0c:	bne	117e4 <readstat_parse_por+0xe4>
   11b10:	mov	r0, r4
   11b14:	bl	4538 <handle_variables@plt>
   11b18:	subs	r6, r0, #0
   11b1c:	bne	117e4 <readstat_parse_por+0xe4>
   11b20:	ldr	r3, [r4, #16]
   11b24:	cmp	r3, #0
   11b28:	beq	117e4 <readstat_parse_por+0xe4>
   11b2c:	ldr	r3, [r4, #632]	; 0x278
   11b30:	cmp	r3, #0
   11b34:	beq	117e4 <readstat_parse_por+0xe4>
   11b38:	ldr	sl, [sp, #36]	; 0x24
   11b3c:	add	r9, sp, #832	; 0x340
   11b40:	mov	r7, r6
   11b44:	add	r3, sp, #1088	; 0x440
   11b48:	str	r3, [sp, #40]	; 0x28
   11b4c:	str	r5, [sp, #20]
   11b50:	mov	r3, #0
   11b54:	str	r3, [sp, #80]	; 0x50
   11b58:	ldr	r3, [sp, #24]
   11b5c:	ldr	r6, [sp, #32]
   11b60:	sub	r3, r3, #8
   11b64:	str	r3, [sp, #36]	; 0x24
   11b68:	sub	r3, fp, #8
   11b6c:	str	r3, [sp, #44]	; 0x2c
   11b70:	ldr	r3, [r4, #632]	; 0x278
   11b74:	cmp	r6, r3
   11b78:	bge	11de0 <readstat_parse_por+0x6e0>
   11b7c:	mov	r2, #280	; 0x118
   11b80:	ldr	r1, [r4, #652]	; 0x28c
   11b84:	mul	r2, r2, r6
   11b88:	mov	r5, #0
   11b8c:	str	r5, [sl]
   11b90:	ldr	r3, [r1, r2]
   11b94:	add	r2, r1, r2
   11b98:	cmp	r3, r5
   11b9c:	str	r2, [sp, #28]
   11ba0:	str	r3, [sp, #112]	; 0x70
   11ba4:	str	r5, [sl, #4]
   11ba8:	str	r5, [sl, #12]
   11bac:	beq	11cbc <readstat_parse_por+0x5bc>
   11bb0:	cmp	r3, #5
   11bb4:	beq	11bec <readstat_parse_por+0x4ec>
   11bb8:	ldr	r5, [r4, #16]
   11bbc:	cmp	r5, #0
   11bc0:	beq	11be4 <readstat_parse_por+0x4e4>
   11bc4:	ldr	r3, [r4, #648]	; 0x288
   11bc8:	ldr	ip, [r3, r6, lsl #2]
   11bcc:	ldr	r3, [ip, #2144]	; 0x860
   11bd0:	cmp	r3, #0
   11bd4:	bne	11be4 <readstat_parse_por+0x4e4>
   11bd8:	ldr	r3, [r4, #644]	; 0x284
   11bdc:	cmp	r3, #0
   11be0:	beq	11e44 <readstat_parse_por+0x744>
   11be4:	add	r6, r6, #1
   11be8:	b	11b70 <readstat_parse_por+0x470>
   11bec:	mov	r2, #1
   11bf0:	ldr	r1, [sp, #40]	; 0x28
   11bf4:	mov	r0, r4
   11bf8:	str	r3, [sp, #48]	; 0x30
   11bfc:	bl	10f90 <read_bytes>
   11c00:	cmp	r0, #1
   11c04:	beq	11c64 <readstat_parse_por+0x564>
   11c08:	ldr	r3, [sp, #48]	; 0x30
   11c0c:	ldr	r5, [sp, #20]
   11c10:	mov	r7, r3
   11c14:	ldr	r3, [r4, #24]
   11c18:	cmp	r3, #0
   11c1c:	beq	11c5c <readstat_parse_por+0x55c>
   11c20:	ldr	r2, [r4, #628]	; 0x274
   11c24:	ldr	r3, [sp, #28]
   11c28:	add	r2, r2, #1
   11c2c:	str	r2, [sp]
   11c30:	ldr	r6, [sp, #40]	; 0x28
   11c34:	ldr	r2, [pc, #400]	; 11dcc <readstat_parse_por+0x6cc>
   11c38:	add	r3, r3, #187	; 0xbb
   11c3c:	add	r2, pc, r2
   11c40:	mov	r1, #1024	; 0x400
   11c44:	mov	r0, r6
   11c48:	bl	4280 <snprintf@plt>
   11c4c:	mov	r0, r6
   11c50:	ldr	r3, [r4, #24]
   11c54:	ldr	r1, [r4, #36]	; 0x24
   11c58:	blx	r3
   11c5c:	mov	r6, r7
   11c60:	b	117e4 <readstat_parse_por+0xe4>
   11c64:	ldrb	r2, [sp, #1088]	; 0x440
   11c68:	add	r3, r4, r2, lsl #1
   11c6c:	ldrh	r3, [r3, #94]	; 0x5e
   11c70:	cmp	r3, #90	; 0x5a
   11c74:	beq	11d8c <readstat_parse_por+0x68c>
   11c78:	mov	r1, sl
   11c7c:	mov	r0, r4
   11c80:	str	r5, [sp, #80]	; 0x50
   11c84:	bl	110a4 <read_double_with_peek>
   11c88:	cmp	r0, #0
   11c8c:	bne	11d80 <readstat_parse_por+0x680>
   11c90:	ldr	r3, [sp, #80]	; 0x50
   11c94:	cmp	r3, #0
   11c98:	bne	11d18 <readstat_parse_por+0x618>
   11c9c:	vldr	d7, [sl]
   11ca0:	ldrb	r3, [sp, #117]	; 0x75
   11ca4:	vcmp.f64	d7, d7
   11ca8:	bic	r3, r3, #1
   11cac:	vmrs	APSR_nzcv, fpscr
   11cb0:	orrvs	r3, r3, #1
   11cb4:	strb	r3, [sp, #117]	; 0x75
   11cb8:	b	11bb8 <readstat_parse_por+0x4b8>
   11cbc:	ldr	r3, [sp, #36]	; 0x24
   11cc0:	mov	r2, #256	; 0x100
   11cc4:	mov	r1, r9
   11cc8:	mov	r0, r4
   11ccc:	bl	112a0 <maybe_read_string>
   11cd0:	cmp	r0, #0
   11cd4:	bne	11d40 <readstat_parse_por+0x640>
   11cd8:	ldr	r3, [sp, #80]	; 0x50
   11cdc:	cmp	r3, #0
   11ce0:	bne	11d18 <readstat_parse_por+0x618>
   11ce4:	mov	r0, r9
   11ce8:	bl	41fc <strlen@plt>
   11cec:	ldr	r3, [r4, #612]	; 0x264
   11cf0:	mov	r2, r9
   11cf4:	str	r3, [sp]
   11cf8:	ldr	r1, [pc, #208]	; 11dd0 <readstat_parse_por+0x6d0>
   11cfc:	mov	r3, r0
   11d00:	mov	r0, r8
   11d04:	bl	4238 <readstat_convert@plt>
   11d08:	cmp	r0, #0
   11d0c:	bne	11d34 <readstat_parse_por+0x634>
   11d10:	str	r8, [sp, #104]	; 0x68
   11d14:	b	11bb8 <readstat_parse_por+0x4b8>
   11d18:	ldr	r5, [sp, #20]
   11d1c:	mov	r3, r6
   11d20:	mov	r6, r7
   11d24:	cmp	r3, #0
   11d28:	moveq	r7, r6
   11d2c:	movne	r7, #5
   11d30:	b	11c5c <readstat_parse_por+0x55c>
   11d34:	ldr	r5, [sp, #20]
   11d38:	mov	r7, r0
   11d3c:	b	11c5c <readstat_parse_por+0x55c>
   11d40:	ldr	r3, [r4, #24]
   11d44:	ldr	r5, [sp, #20]
   11d48:	cmp	r3, #0
   11d4c:	mov	r7, r0
   11d50:	beq	11c5c <readstat_parse_por+0x55c>
   11d54:	ldr	r2, [r4, #628]	; 0x274
   11d58:	ldr	r3, [sp, #28]
   11d5c:	add	r2, r2, #1
   11d60:	str	r2, [sp]
   11d64:	ldr	r2, [pc, #104]	; 11dd4 <readstat_parse_por+0x6d4>
   11d68:	add	r6, sp, #1088	; 0x440
   11d6c:	add	r3, r3, #187	; 0xbb
   11d70:	mov	r0, r6
   11d74:	add	r2, pc, r2
   11d78:	mov	r1, #1024	; 0x400
   11d7c:	b	11c48 <readstat_parse_por+0x548>
   11d80:	ldr	r5, [sp, #20]
   11d84:	mov	r7, r0
   11d88:	b	11c14 <readstat_parse_por+0x514>
   11d8c:	mov	r3, r6
   11d90:	ldr	r5, [sp, #20]
   11d94:	mov	r6, r7
   11d98:	str	r0, [sp, #80]	; 0x50
   11d9c:	b	11d24 <readstat_parse_por+0x624>
   11da0:	.word	0x00000000
   11da4:	.word	0x7ff00000
   11da8:	.word	0x00000000
   11dac:	.word	0xfff00000
   11db0:	.word	0x000328c4
   11db4:	.word	0x00012c8c
   11db8:	.word	0x00000300
   11dbc:	.word	0x000002f4
   11dc0:	.word	0x00013268
   11dc4:	.word	0x00013200
   11dc8:	.word	0x000131b0
   11dcc:	.word	0x00012fac
   11dd0:	.word	0x00000401
   11dd4:	.word	0x00012e74
   11dd8:	.word	0x000f4240
   11ddc:	.word	0x00004e20
   11de0:	ldr	r3, [r4, #644]	; 0x284
   11de4:	ldr	r2, [r4, #36]	; 0x24
   11de8:	cmp	r3, #0
   11dec:	subne	r3, r3, #1
   11df0:	ldreq	r3, [r4, #628]	; 0x274
   11df4:	strne	r3, [r4, #644]	; 0x284
   11df8:	addeq	r3, r3, #1
   11dfc:	streq	r3, [r4, #628]	; 0x274
   11e00:	ldr	r3, [r4, #44]	; 0x2c
   11e04:	ldr	r1, [r4, #28]
   11e08:	ldr	r0, [r4, #32]
   11e0c:	ldr	r5, [r3, #16]
   11e10:	ldr	r3, [r3, #20]
   11e14:	blx	r5
   11e18:	cmp	r0, #0
   11e1c:	bne	11e38 <readstat_parse_por+0x738>
   11e20:	ldr	r3, [r4, #640]	; 0x280
   11e24:	cmp	r3, #0
   11e28:	ble	11b50 <readstat_parse_por+0x450>
   11e2c:	ldr	r2, [r4, #628]	; 0x274
   11e30:	cmp	r3, r2
   11e34:	bne	11b50 <readstat_parse_por+0x450>
   11e38:	ldr	r5, [sp, #20]
   11e3c:	mov	r6, r0
   11e40:	b	117e4 <readstat_parse_por+0xe4>
   11e44:	ldr	r3, [sp, #44]	; 0x2c
   11e48:	ldr	lr, [r4, #36]	; 0x24
   11e4c:	ldm	r3, {r0, r1}
   11e50:	ldm	sl, {r2, r3}
   11e54:	str	lr, [sp, #8]
   11e58:	stm	sp, {r0, r1}
   11e5c:	mov	r1, ip
   11e60:	ldr	r0, [r4, #628]	; 0x274
   11e64:	blx	r5
   11e68:	cmp	r0, #0
   11e6c:	beq	11be4 <readstat_parse_por+0x4e4>
   11e70:	ldr	r5, [sp, #20]
   11e74:	mov	r7, #4
   11e78:	b	11c5c <readstat_parse_por+0x55c>
   11e7c:	add	r7, sp, #3136	; 0xc40
   11e80:	add	r7, r7, #8
   11e84:	mov	ip, #0
   11e88:	ldr	r3, [r4, #624]	; 0x270
   11e8c:	ldr	r2, [sp, #60]	; 0x3c
   11e90:	mov	r1, #256	; 0x100
   11e94:	mov	r0, fp
   11e98:	str	ip, [r7, #-3072]!	; 0xfffff400
   11e9c:	str	ip, [sp, #68]	; 0x44
   11ea0:	bl	4280 <snprintf@plt>
   11ea4:	sub	r2, r7, #4
   11ea8:	ldr	r1, [pc, #-216]	; 11dd8 <readstat_parse_por+0x6d8>
   11eac:	mov	r0, r4
   11eb0:	bl	55e8 <read_integer_in_range.constprop.1>
   11eb4:	subs	r6, r0, #0
   11eb8:	bne	11fcc <readstat_parse_por+0x8cc>
   11ebc:	ldr	r9, [sp, #32]
   11ec0:	mov	r5, #5
   11ec4:	add	sl, sp, #832	; 0x340
   11ec8:	ldr	ip, [sp, #68]	; 0x44
   11ecc:	mov	r3, r8
   11ed0:	cmp	r9, ip
   11ed4:	mov	r2, #256	; 0x100
   11ed8:	mov	r1, sl
   11edc:	mov	r0, r4
   11ee0:	bge	12064 <readstat_parse_por+0x964>
   11ee4:	str	r6, [sp, #2112]	; 0x840
   11ee8:	bl	112a0 <maybe_read_string>
   11eec:	cmp	r0, #0
   11ef0:	bne	11e38 <readstat_parse_por+0x738>
   11ef4:	ldr	r3, [sp, #2112]	; 0x840
   11ef8:	mov	r0, sl
   11efc:	cmp	r3, #0
   11f00:	bne	11a40 <readstat_parse_por+0x340>
   11f04:	ldr	r1, [r4, #656]	; 0x290
   11f08:	bl	3fd4 <ck_str_hash_lookup@plt>
   11f0c:	add	r9, r9, #1
   11f10:	cmp	r0, #0
   11f14:	ldrne	r3, [r4, #624]	; 0x270
   11f18:	ldrne	r5, [r0]
   11f1c:	strne	r3, [r0, #4]
   11f20:	b	11ec8 <readstat_parse_por+0x7c8>
   11f24:	ldr	r5, [r4, #636]	; 0x27c
   11f28:	cmp	r5, #0
   11f2c:	blt	11a40 <readstat_parse_por+0x340>
   11f30:	ldr	r3, [r4, #632]	; 0x278
   11f34:	cmp	r5, r3
   11f38:	beq	11a40 <readstat_parse_por+0x340>
   11f3c:	ldr	r1, [r4, #652]	; 0x28c
   11f40:	mov	r0, #280	; 0x118
   11f44:	mov	ip, #0
   11f48:	mla	r5, r0, r5, r1
   11f4c:	mov	r3, fp
   11f50:	mov	r2, #256	; 0x100
   11f54:	mov	r1, r8
   11f58:	mov	r0, r4
   11f5c:	str	ip, [sp, #1088]	; 0x440
   11f60:	bl	112a0 <maybe_read_string>
   11f64:	subs	r6, r0, #0
   11f68:	bne	11fcc <readstat_parse_por+0x8cc>
   11f6c:	ldr	r3, [sp, #1088]	; 0x440
   11f70:	cmp	r3, #0
   11f74:	bne	11a40 <readstat_parse_por+0x340>
   11f78:	mov	r0, r8
   11f7c:	bl	41fc <strlen@plt>
   11f80:	lsl	r1, r0, #2
   11f84:	add	r1, r1, #1
   11f88:	ldr	r0, [r5, #264]	; 0x108
   11f8c:	bl	3ff8 <realloc@plt>
   11f90:	mov	r6, r0
   11f94:	str	r0, [r5, #264]	; 0x108
   11f98:	mov	r0, r8
   11f9c:	bl	41fc <strlen@plt>
   11fa0:	ldr	r2, [r4, #612]	; 0x264
   11fa4:	str	r2, [sp]
   11fa8:	mov	r2, r8
   11fac:	lsl	r1, r0, #2
   11fb0:	mov	r3, r0
   11fb4:	add	r1, r1, #1
   11fb8:	mov	r0, r6
   11fbc:	bl	4238 <readstat_convert@plt>
   11fc0:	mov	r6, r0
   11fc4:	cmp	r6, #0
   11fc8:	beq	11a28 <readstat_parse_por+0x328>
   11fcc:	ldr	r5, [sp, #20]
   11fd0:	b	117e4 <readstat_parse_por+0xe4>
   11fd4:	mov	r3, #0
   11fd8:	add	r2, sp, #832	; 0x340
   11fdc:	ldr	r1, [pc, #-524]	; 11dd8 <readstat_parse_por+0x6d8>
   11fe0:	mov	r0, r4
   11fe4:	str	r3, [sp, #832]	; 0x340
   11fe8:	bl	55e8 <read_integer_in_range.constprop.1>
   11fec:	subs	r6, r0, #0
   11ff0:	bne	11fcc <readstat_parse_por+0x8cc>
   11ff4:	ldr	r5, [sp, #32]
   11ff8:	ldr	ip, [sp, #832]	; 0x340
   11ffc:	mov	r3, fp
   12000:	cmp	r5, ip
   12004:	mov	r2, #256	; 0x100
   12008:	mov	r1, r8
   1200c:	mov	r0, r4
   12010:	bge	11a28 <readstat_parse_por+0x328>
   12014:	str	r6, [sp, #1088]	; 0x440
   12018:	bl	112a0 <maybe_read_string>
   1201c:	cmp	r0, #0
   12020:	bne	1205c <readstat_parse_por+0x95c>
   12024:	ldr	r3, [sp, #1088]	; 0x440
   12028:	cmp	r3, #0
   1202c:	bne	11a40 <readstat_parse_por+0x340>
   12030:	ldr	r3, [r4, #4]
   12034:	mov	r0, r5
   12038:	cmp	r3, #0
   1203c:	mov	r1, r8
   12040:	beq	12054 <readstat_parse_por+0x954>
   12044:	ldr	r2, [r4, #36]	; 0x24
   12048:	blx	r3
   1204c:	cmp	r0, #0
   12050:	bne	1229c <readstat_parse_por+0xb9c>
   12054:	add	r5, r5, #1
   12058:	b	11ff8 <readstat_parse_por+0x8f8>
   1205c:	mov	r6, r0
   12060:	b	11fc4 <readstat_parse_por+0x8c4>
   12064:	mov	r2, r7
   12068:	ldr	r1, [pc, #-664]	; 11dd8 <readstat_parse_por+0x6d8>
   1206c:	bl	55e8 <read_integer_in_range.constprop.1>
   12070:	subs	r6, r0, #0
   12074:	bne	11fcc <readstat_parse_por+0x8cc>
   12078:	ldr	r3, [sp, #24]
   1207c:	ldr	r9, [sp, #32]
   12080:	sub	r2, r3, #8
   12084:	sub	r7, r3, #12
   12088:	add	r3, sp, #832	; 0x340
   1208c:	str	r3, [sp, #40]	; 0x28
   12090:	ldr	r3, [sp, #44]	; 0x2c
   12094:	mov	sl, r6
   12098:	sub	r3, r3, #8
   1209c:	str	r2, [sp, #52]	; 0x34
   120a0:	str	r3, [sp, #56]	; 0x38
   120a4:	ldr	r3, [sp, #72]	; 0x48
   120a8:	cmp	r9, r3
   120ac:	bge	121c4 <readstat_parse_por+0xac4>
   120b0:	ldr	r3, [sp, #36]	; 0x24
   120b4:	cmp	r5, #0
   120b8:	str	r5, [sp, #112]	; 0x70
   120bc:	str	sl, [r3]
   120c0:	str	sl, [r3, #4]
   120c4:	str	sl, [r3, #12]
   120c8:	bne	12170 <readstat_parse_por+0xa70>
   120cc:	mov	r3, r7
   120d0:	mov	r2, #256	; 0x100
   120d4:	ldr	r1, [sp, #40]	; 0x28
   120d8:	mov	r0, r4
   120dc:	str	r5, [sp, #76]	; 0x4c
   120e0:	bl	112a0 <maybe_read_string>
   120e4:	subs	r6, r0, #0
   120e8:	bne	11fcc <readstat_parse_por+0x8cc>
   120ec:	ldr	r3, [sp, #76]	; 0x4c
   120f0:	cmp	r3, #0
   120f4:	bne	11a40 <readstat_parse_por+0x340>
   120f8:	mov	r3, r7
   120fc:	mov	r2, #256	; 0x100
   12100:	mov	r1, r8
   12104:	mov	r0, r4
   12108:	str	r5, [sp, #76]	; 0x4c
   1210c:	bl	112a0 <maybe_read_string>
   12110:	subs	r6, r0, #0
   12114:	bne	11fcc <readstat_parse_por+0x8cc>
   12118:	ldr	r3, [sp, #76]	; 0x4c
   1211c:	cmp	r3, #0
   12120:	bne	11a40 <readstat_parse_por+0x340>
   12124:	ldr	r3, [sp, #40]	; 0x28
   12128:	str	r3, [sp, #104]	; 0x68
   1212c:	ldr	r6, [r4, #20]
   12130:	cmp	r6, #0
   12134:	beq	12168 <readstat_parse_por+0xa68>
   12138:	ldr	r3, [sp, #56]	; 0x38
   1213c:	ldm	r3, {r0, r1}
   12140:	ldr	r3, [r4, #36]	; 0x24
   12144:	str	r8, [sp, #8]
   12148:	str	r3, [sp, #12]
   1214c:	ldr	r3, [sp, #36]	; 0x24
   12150:	stm	sp, {r0, r1}
   12154:	mov	r0, fp
   12158:	ldm	r3, {r2, r3}
   1215c:	blx	r6
   12160:	cmp	r0, #0
   12164:	bne	1229c <readstat_parse_por+0xb9c>
   12168:	add	r9, r9, #1
   1216c:	b	120a4 <readstat_parse_por+0x9a4>
   12170:	ldr	r1, [sp, #52]	; 0x34
   12174:	mov	r0, r4
   12178:	bl	55a8 <read_double>
   1217c:	subs	r6, r0, #0
   12180:	bne	11fcc <readstat_parse_por+0x8cc>
   12184:	mov	r3, r7
   12188:	mov	r2, #256	; 0x100
   1218c:	mov	r1, r8
   12190:	mov	r0, r4
   12194:	str	r6, [sp, #76]	; 0x4c
   12198:	bl	112a0 <maybe_read_string>
   1219c:	subs	r6, r0, #0
   121a0:	bne	11fcc <readstat_parse_por+0x8cc>
   121a4:	ldr	r3, [sp, #76]	; 0x4c
   121a8:	cmp	r3, #0
   121ac:	bne	11a40 <readstat_parse_por+0x340>
   121b0:	ldr	r3, [sp, #24]
   121b4:	ldr	r1, [sp, #36]	; 0x24
   121b8:	ldrd	r2, [r3, #-8]
   121bc:	strd	r2, [r1]
   121c0:	b	1212c <readstat_parse_por+0xa2c>
   121c4:	ldr	r3, [r4, #624]	; 0x270
   121c8:	add	r3, r3, #1
   121cc:	str	r3, [r4, #624]	; 0x270
   121d0:	b	11a28 <readstat_parse_por+0x328>
   121d4:	ldr	r3, [r4, #632]	; 0x278
   121d8:	cmp	r3, #0
   121dc:	bne	11a40 <readstat_parse_por+0x340>
   121e0:	mov	r2, fp
   121e4:	ldr	r1, [pc, #-1044]	; 11dd8 <readstat_parse_por+0x6d8>
   121e8:	mov	r0, r4
   121ec:	bl	55e8 <read_integer_in_range.constprop.1>
   121f0:	subs	r6, r0, #0
   121f4:	bne	11fcc <readstat_parse_por+0x8cc>
   121f8:	ldr	r0, [sp, #1088]	; 0x440
   121fc:	mov	r1, #4
   12200:	str	r0, [r4, #632]	; 0x278
   12204:	bl	3fc8 <readstat_calloc@plt>
   12208:	mov	r1, #280	; 0x118
   1220c:	str	r0, [r4, #648]	; 0x288
   12210:	ldr	r0, [r4, #632]	; 0x278
   12214:	bl	3fc8 <readstat_calloc@plt>
   12218:	ldr	r3, [r4, #648]	; 0x288
   1221c:	cmp	r3, #0
   12220:	str	r0, [r4, #652]	; 0x28c
   12224:	beq	1268c <readstat_parse_por+0xf8c>
   12228:	cmp	r0, #0
   1222c:	beq	1268c <readstat_parse_por+0xf8c>
   12230:	ldr	r5, [r4]
   12234:	cmp	r5, #0
   12238:	beq	11a28 <readstat_parse_por+0x328>
   1223c:	mov	r1, r6
   12240:	mov	r2, #56	; 0x38
   12244:	mov	r0, r8
   12248:	bl	42a4 <memset@plt>
   1224c:	ldr	r2, [r4, #632]	; 0x278
   12250:	ldr	r0, [r4, #60]	; 0x3c
   12254:	ldr	lr, [sp, #48]	; 0x30
   12258:	asr	r3, r2, #31
   1225c:	asr	r1, r0, #31
   12260:	ldr	ip, [r4, #56]	; 0x38
   12264:	strd	r2, [lr]
   12268:	strd	r0, [lr, #16]
   1226c:	mvn	r2, #0
   12270:	ldr	r1, [sp, #28]
   12274:	mvn	r3, #0
   12278:	str	r1, [sp, #2156]	; 0x86c
   1227c:	str	ip, [sp, #2128]	; 0x850
   12280:	str	ip, [sp, #2132]	; 0x854
   12284:	strd	r2, [lr, #-8]
   12288:	ldr	r1, [r4, #36]	; 0x24
   1228c:	mov	r0, r8
   12290:	blx	r5
   12294:	cmp	r0, #0
   12298:	beq	11a28 <readstat_parse_por+0x328>
   1229c:	ldr	r5, [sp, #20]
   122a0:	mov	r6, #4
   122a4:	b	117e4 <readstat_parse_por+0xe4>
   122a8:	ldr	r2, [r4, #636]	; 0x27c
   122ac:	cmp	r2, #0
   122b0:	blt	11a40 <readstat_parse_por+0x340>
   122b4:	ldr	r3, [r4, #632]	; 0x278
   122b8:	cmp	r2, r3
   122bc:	beq	11a40 <readstat_parse_por+0x340>
   122c0:	mov	r3, #280	; 0x118
   122c4:	ldr	r5, [r4, #652]	; 0x28c
   122c8:	mul	r3, r3, r2
   122cc:	mov	r2, #1
   122d0:	ldr	r1, [r5, r3]
   122d4:	add	r5, r5, r3
   122d8:	cmp	r1, #5
   122dc:	mov	r3, #2
   122e0:	str	r2, [r5, #56]	; 0x38
   122e4:	str	r3, [r5, #52]	; 0x34
   122e8:	beq	123bc <readstat_parse_por+0xcbc>
   122ec:	mov	ip, #0
   122f0:	mov	r3, r8
   122f4:	mov	r2, #33	; 0x21
   122f8:	add	r1, r5, #88	; 0x58
   122fc:	mov	r0, r4
   12300:	str	ip, [sp, #2112]	; 0x840
   12304:	bl	112a0 <maybe_read_string>
   12308:	subs	r6, r0, #0
   1230c:	bne	11fcc <readstat_parse_por+0x8cc>
   12310:	ldr	r3, [sp, #2112]	; 0x840
   12314:	cmp	r3, #0
   12318:	bne	11a40 <readstat_parse_por+0x340>
   1231c:	add	r1, r5, #121	; 0x79
   12320:	mov	r3, r8
   12324:	mov	r2, #33	; 0x21
   12328:	mov	r0, r4
   1232c:	str	r6, [sp, #2112]	; 0x840
   12330:	bl	112a0 <maybe_read_string>
   12334:	subs	r6, r0, #0
   12338:	beq	11ae0 <readstat_parse_por+0x3e0>
   1233c:	b	11fcc <readstat_parse_por+0x8cc>
   12340:	ldr	r2, [r4, #636]	; 0x27c
   12344:	cmp	r2, #0
   12348:	blt	11a40 <readstat_parse_por+0x340>
   1234c:	ldr	r3, [r4, #632]	; 0x278
   12350:	cmp	r2, r3
   12354:	beq	11a40 <readstat_parse_por+0x340>
   12358:	mov	r3, #280	; 0x118
   1235c:	ldr	r5, [r4, #652]	; 0x28c
   12360:	mul	r3, r3, r2
   12364:	mov	r2, #1
   12368:	ldr	r1, [r5, r3]
   1236c:	add	r5, r5, r3
   12370:	cmp	r1, #5
   12374:	mov	r3, #2
   12378:	str	r2, [r5, #56]	; 0x38
   1237c:	str	r3, [r5, #52]	; 0x34
   12380:	beq	123e4 <readstat_parse_por+0xce4>
   12384:	mov	ip, #0
   12388:	mov	r3, r8
   1238c:	mov	r2, #33	; 0x21
   12390:	add	r1, r5, #88	; 0x58
   12394:	mov	r0, r4
   12398:	str	ip, [sp, #2112]	; 0x840
   1239c:	bl	112a0 <maybe_read_string>
   123a0:	subs	r6, r0, #0
   123a4:	bne	11fcc <readstat_parse_por+0x8cc>
   123a8:	ldr	r3, [sp, #2112]	; 0x840
   123ac:	cmp	r3, #0
   123b0:	bne	11a40 <readstat_parse_por+0x340>
   123b4:	strb	r3, [r5, #121]	; 0x79
   123b8:	b	11a28 <readstat_parse_por+0x328>
   123bc:	add	r1, r5, #64	; 0x40
   123c0:	mov	r0, r4
   123c4:	bl	55a8 <read_double>
   123c8:	subs	r6, r0, #0
   123cc:	bne	11fcc <readstat_parse_por+0x8cc>
   123d0:	add	r1, r5, #72	; 0x48
   123d4:	mov	r0, r4
   123d8:	bl	55a8 <read_double>
   123dc:	mov	r6, r0
   123e0:	b	11fc4 <readstat_parse_por+0x8c4>
   123e4:	add	r1, r5, #64	; 0x40
   123e8:	mov	r0, r4
   123ec:	bl	55a8 <read_double>
   123f0:	subs	r6, r0, #0
   123f4:	bne	11fcc <readstat_parse_por+0x8cc>
   123f8:	vstr	d9, [r5, #72]	; 0x48
   123fc:	b	11a28 <readstat_parse_por+0x328>
   12400:	ldr	r2, [r4, #636]	; 0x27c
   12404:	cmp	r2, #0
   12408:	blt	11a40 <readstat_parse_por+0x340>
   1240c:	ldr	r3, [r4, #632]	; 0x278
   12410:	cmp	r2, r3
   12414:	beq	11a40 <readstat_parse_por+0x340>
   12418:	mov	r3, #280	; 0x118
   1241c:	ldr	r1, [r4, #652]	; 0x28c
   12420:	mul	r3, r3, r2
   12424:	mov	r2, #1
   12428:	ldr	r0, [r1, r3]
   1242c:	add	r1, r1, r3
   12430:	cmp	r0, #5
   12434:	mov	r3, #2
   12438:	str	r2, [r1, #56]	; 0x38
   1243c:	str	r3, [r1, #52]	; 0x34
   12440:	beq	124e4 <readstat_parse_por+0xde4>
   12444:	mov	ip, #0
   12448:	strb	ip, [r1, #88]	; 0x58
   1244c:	mov	r3, r8
   12450:	add	r1, r1, #121	; 0x79
   12454:	mov	r2, #33	; 0x21
   12458:	b	11acc <readstat_parse_por+0x3cc>
   1245c:	ldr	r2, [r4, #636]	; 0x27c
   12460:	cmp	r2, #0
   12464:	blt	11a40 <readstat_parse_por+0x340>
   12468:	ldr	r3, [r4, #632]	; 0x278
   1246c:	cmp	r2, r3
   12470:	bge	11a40 <readstat_parse_por+0x340>
   12474:	mov	r3, #280	; 0x118
   12478:	ldr	r1, [r4, #652]	; 0x28c
   1247c:	mul	r3, r3, r2
   12480:	add	r5, r1, r3
   12484:	ldr	r3, [r1, r3]
   12488:	cmp	r3, #5
   1248c:	beq	124fc <readstat_parse_por+0xdfc>
   12490:	ldr	r2, [r5, #52]	; 0x34
   12494:	mov	ip, #0
   12498:	mov	r3, r8
   1249c:	add	r2, r2, r2, lsl #5
   124a0:	add	r1, r2, #88	; 0x58
   124a4:	add	r1, r5, r1
   124a8:	mov	r2, #33	; 0x21
   124ac:	mov	r0, r4
   124b0:	str	ip, [sp, #2112]	; 0x840
   124b4:	bl	112a0 <maybe_read_string>
   124b8:	subs	r6, r0, #0
   124bc:	bne	11fcc <readstat_parse_por+0x8cc>
   124c0:	ldr	r3, [sp, #2112]	; 0x840
   124c4:	cmp	r3, #0
   124c8:	bne	11a40 <readstat_parse_por+0x340>
   124cc:	ldr	r3, [r5, #52]	; 0x34
   124d0:	cmp	r3, #2
   124d4:	bgt	11a40 <readstat_parse_por+0x340>
   124d8:	add	r3, r3, #1
   124dc:	str	r3, [r5, #52]	; 0x34
   124e0:	b	11a28 <readstat_parse_por+0x328>
   124e4:	vstr	d8, [r1, #64]	; 0x40
   124e8:	mov	r0, r4
   124ec:	add	r1, r1, #72	; 0x48
   124f0:	bl	55a8 <read_double>
   124f4:	mov	r6, r0
   124f8:	b	11fc4 <readstat_parse_por+0x8c4>
   124fc:	ldr	r1, [r5, #52]	; 0x34
   12500:	mov	r0, r4
   12504:	add	r1, r1, #8
   12508:	add	r1, r5, r1, lsl #3
   1250c:	bl	55a8 <read_double>
   12510:	subs	r6, r0, #0
   12514:	beq	124cc <readstat_parse_por+0xdcc>
   12518:	b	11fcc <readstat_parse_por+0x8cc>
   1251c:	ldr	r3, [r4, #636]	; 0x27c
   12520:	ldr	r2, [r4, #632]	; 0x278
   12524:	add	r3, r3, #1
   12528:	cmp	r3, r2
   1252c:	str	r3, [r4, #636]	; 0x27c
   12530:	beq	11a40 <readstat_parse_por+0x340>
   12534:	mov	r7, #280	; 0x118
   12538:	ldr	sl, [r4, #652]	; 0x28c
   1253c:	mul	r7, r7, r3
   12540:	add	r9, sp, #832	; 0x340
   12544:	add	r5, sl, r7
   12548:	mvn	r3, #0
   1254c:	add	r1, r5, #24
   12550:	add	r2, r5, #36	; 0x24
   12554:	str	r1, [sp, #2112]	; 0x840
   12558:	str	r2, [sp, #2116]	; 0x844
   1255c:	ldr	r1, [pc, #-1932]	; 11dd8 <readstat_parse_por+0x6d8>
   12560:	mov	r2, r9
   12564:	str	r3, [r5, #4]
   12568:	mov	r0, r4
   1256c:	bl	55e8 <read_integer_in_range.constprop.1>
   12570:	subs	r6, r0, #0
   12574:	bne	11fcc <readstat_parse_por+0x8cc>
   12578:	ldr	r3, [sp, #832]	; 0x340
   1257c:	mov	ip, #0
   12580:	cmp	r3, #0
   12584:	str	r3, [r5, #16]
   12588:	moveq	r3, #5
   1258c:	streq	r3, [sl, r7]
   12590:	strne	r6, [sl, r7]
   12594:	add	sl, r5, #187	; 0xbb
   12598:	mov	r1, sl
   1259c:	mov	r3, fp
   125a0:	mov	r2, #9
   125a4:	mov	r0, r4
   125a8:	str	ip, [sp, #1088]	; 0x440
   125ac:	bl	112a0 <maybe_read_string>
   125b0:	subs	r6, r0, #0
   125b4:	bne	11fcc <readstat_parse_por+0x8cc>
   125b8:	ldr	r7, [sp, #1088]	; 0x440
   125bc:	cmp	r7, #0
   125c0:	bne	11a40 <readstat_parse_por+0x340>
   125c4:	mov	r0, sl
   125c8:	mov	r1, r5
   125cc:	ldr	r2, [r4, #656]	; 0x290
   125d0:	bl	44f0 <ck_str_hash_insert@plt>
   125d4:	mov	sl, #120	; 0x78
   125d8:	mov	r2, r9
   125dc:	mov	r1, sl
   125e0:	mov	r0, r4
   125e4:	ldr	r5, [r8, r7, lsl #2]
   125e8:	bl	55e8 <read_integer_in_range.constprop.1>
   125ec:	add	r7, r7, #1
   125f0:	mov	r2, r9
   125f4:	ldr	r1, [pc, #-2080]	; 11ddc <readstat_parse_por+0x6dc>
   125f8:	subs	r6, r0, #0
   125fc:	mov	r0, r4
   12600:	bne	11fcc <readstat_parse_por+0x8cc>
   12604:	ldr	r3, [sp, #832]	; 0x340
   12608:	str	r3, [r5]
   1260c:	bl	55e8 <read_integer_in_range.constprop.1>
   12610:	mov	r2, r9
   12614:	mov	r1, #100	; 0x64
   12618:	subs	r6, r0, #0
   1261c:	mov	r0, r4
   12620:	bne	11fcc <readstat_parse_por+0x8cc>
   12624:	ldr	r3, [sp, #832]	; 0x340
   12628:	str	r3, [r5, #4]
   1262c:	bl	55e8 <read_integer_in_range.constprop.1>
   12630:	subs	r6, r0, #0
   12634:	bne	11fcc <readstat_parse_por+0x8cc>
   12638:	ldr	r3, [sp, #832]	; 0x340
   1263c:	cmp	r7, #2
   12640:	str	r3, [r5, #8]
   12644:	bne	125d8 <readstat_parse_por+0xed8>
   12648:	b	11a28 <readstat_parse_por+0x328>
   1264c:	mov	ip, #0
   12650:	mov	r3, r8
   12654:	mov	r2, #9
   12658:	add	r1, r4, #64	; 0x40
   1265c:	b	11acc <readstat_parse_por+0x3cc>
   12660:	mov	r3, #0
   12664:	mov	r2, r8
   12668:	mov	r1, #100	; 0x64
   1266c:	mov	r0, r4
   12670:	str	r3, [sp, #2112]	; 0x840
   12674:	bl	55e8 <read_integer_in_range.constprop.1>
   12678:	subs	r6, r0, #0
   1267c:	bne	11fcc <readstat_parse_por+0x8cc>
   12680:	ldr	r3, [sp, #2112]	; 0x840
   12684:	str	r3, [r4, #608]	; 0x260
   12688:	b	11a28 <readstat_parse_por+0x328>
   1268c:	ldr	r5, [sp, #20]
   12690:	mov	r6, #3
   12694:	b	117e4 <readstat_parse_por+0xe4>

00012698 <por_variable_width>:
   12698:	cmp	r0, #0
   1269c:	addeq	r0, r1, #54	; 0x36
   126a0:	movne	r0, #54	; 0x36
   126a4:	bx	lr

000126a8 <por_metadata_ok>:
   126a8:	ldr	r0, [r0, #16]
   126ac:	cmp	r0, #0
   126b0:	movne	r0, #6
   126b4:	moveq	r0, #0
   126b8:	bx	lr

000126bc <por_write_string_n>:
   126bc:	push	{r4, r5, r6, r7, r8, lr}
   126c0:	mov	r7, r0
   126c4:	sub	sp, sp, #1040	; 0x410
   126c8:	mov	r0, r3
   126cc:	mov	r4, r3
   126d0:	mov	r6, r1
   126d4:	mov	r8, r2
   126d8:	bl	410c <malloc@plt>
   126dc:	ldr	r2, [r6, #4]
   126e0:	ldr	r3, [r6]
   126e4:	mov	r1, r4
   126e8:	str	r2, [sp, #4]
   126ec:	str	r3, [sp]
   126f0:	mov	r3, r4
   126f4:	mov	r2, r0
   126f8:	mov	r5, r0
   126fc:	mov	r0, r8
   12700:	bl	4394 <por_utf8_decode@plt>
   12704:	cmn	r0, #1
   12708:	beq	1274c <por_write_string_n+0x90>
   1270c:	ldr	r3, [pc, #140]	; 127a0 <por_write_string_n+0xe4>
   12710:	mov	r2, r0
   12714:	add	r3, pc, r3
   12718:	str	r3, [sp]
   1271c:	mov	r0, r7
   12720:	mov	r3, #80	; 0x50
   12724:	mov	r1, r5
   12728:	bl	4520 <readstat_write_bytes_as_lines@plt>
   1272c:	mov	r4, r0
   12730:	cmp	r5, #0
   12734:	beq	12740 <por_write_string_n+0x84>
   12738:	mov	r0, r5
   1273c:	bl	3ec0 <free@plt>
   12740:	mov	r0, r4
   12744:	add	sp, sp, #1040	; 0x410
   12748:	pop	{r4, r5, r6, r7, r8, pc}
   1274c:	ldr	r3, [r7, #296]	; 0x128
   12750:	cmp	r3, #0
   12754:	moveq	r4, #16
   12758:	beq	12730 <por_write_string_n+0x74>
   1275c:	ldr	r2, [pc, #64]	; 127a4 <por_write_string_n+0xe8>
   12760:	mov	r3, #0
   12764:	str	r4, [sp, #8]
   12768:	str	r4, [sp]
   1276c:	add	r4, sp, #16
   12770:	mov	r0, r4
   12774:	str	r3, [sp, #4]
   12778:	add	r2, pc, r2
   1277c:	mov	r1, #1024	; 0x400
   12780:	str	r8, [sp, #12]
   12784:	bl	4280 <snprintf@plt>
   12788:	mov	r0, r4
   1278c:	ldr	r3, [r7, #296]	; 0x128
   12790:	ldr	r1, [r7, #304]	; 0x130
   12794:	blx	r3
   12798:	mov	r4, #16
   1279c:	b	12730 <por_write_string_n+0x74>
   127a0:	.word	0x00012518
   127a4:	.word	0x00012488

000127a8 <por_write_row>:
   127a8:	subs	r3, r2, #0
   127ac:	mov	r2, r1
   127b0:	beq	127f8 <por_write_row+0x50>
   127b4:	push	{r4, r5, lr}
   127b8:	mov	r4, #0
   127bc:	mov	ip, r4
   127c0:	sub	r5, r1, #1
   127c4:	ldrb	lr, [r5, #1]!
   127c8:	cmp	lr, #0
   127cc:	beq	127dc <por_write_row+0x34>
   127d0:	cmp	r4, ip
   127d4:	strbne	lr, [r2, r4]
   127d8:	add	r4, r4, #1
   127dc:	add	ip, ip, #1
   127e0:	cmp	ip, r3
   127e4:	bne	127c4 <por_write_row+0x1c>
   127e8:	mov	r3, r4
   127ec:	ldr	r1, [r0, #300]	; 0x12c
   127f0:	pop	{r4, r5, lr}
   127f4:	b	126bc <por_write_string_n>
   127f8:	ldr	r1, [r0, #300]	; 0x12c
   127fc:	b	126bc <por_write_string_n>

00012800 <por_emit_header>:
   12800:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12804:	add	r8, r0, #88	; 0x58
   12808:	sub	sp, sp, #464	; 0x1d0
   1280c:	mov	r4, r0
   12810:	mov	r0, r8
   12814:	mov	r5, r1
   12818:	bl	41fc <strlen@plt>
   1281c:	add	r6, sp, #8
   12820:	mov	r2, #200	; 0xc8
   12824:	mov	r1, #48	; 0x30
   12828:	add	sl, sp, #48	; 0x30
   1282c:	ldr	r7, [pc, #256]	; 12934 <por_emit_header+0x134>
   12830:	add	r7, pc, r7
   12834:	mov	r9, r0
   12838:	mov	r0, r6
   1283c:	bl	42a4 <memset@plt>
   12840:	ldr	lr, [pc, #240]	; 12938 <por_emit_header+0x138>
   12844:	mov	ip, sl
   12848:	add	lr, pc, lr
   1284c:	ldm	lr!, {r0, r1, r2, r3}
   12850:	ldr	lr, [lr]
   12854:	stmia	ip!, {r0, r1, r2, r3}
   12858:	mov	r1, r8
   1285c:	mov	r2, #20
   12860:	add	r0, sp, #68	; 0x44
   12864:	str	lr, [ip]
   12868:	bl	42bc <strncpy@plt>
   1286c:	cmp	r9, #19
   12870:	bls	1291c <por_emit_header+0x11c>
   12874:	ldr	r3, [pc, #192]	; 1293c <por_emit_header+0x13c>
   12878:	mov	r1, r6
   1287c:	add	r3, pc, r3
   12880:	str	r3, [sp]
   12884:	mov	r2, #200	; 0xc8
   12888:	mov	r3, #80	; 0x50
   1288c:	add	r6, sp, #208	; 0xd0
   12890:	mov	r0, r4
   12894:	bl	4520 <readstat_write_bytes_as_lines@plt>
   12898:	mov	r2, #256	; 0x100
   1289c:	mov	r0, r6
   128a0:	mov	r1, #48	; 0x30
   128a4:	bl	42a4 <memset@plt>
   128a8:	ldr	r3, [pc, #144]	; 12940 <por_emit_header+0x140>
   128ac:	mov	r2, r6
   128b0:	ldr	r0, [r7, r3]
   128b4:	sub	r3, r0, #1
   128b8:	add	r0, r0, #255	; 0xff
   128bc:	ldrsb	r1, [r3, #1]!
   128c0:	add	r2, r2, #1
   128c4:	cmp	r1, #0
   128c8:	strbne	r1, [r2, #-1]
   128cc:	cmp	r3, r0
   128d0:	bne	128bc <por_emit_header+0xbc>
   128d4:	ldr	r3, [pc, #104]	; 12944 <por_emit_header+0x144>
   128d8:	mov	r1, r6
   128dc:	add	r3, pc, r3
   128e0:	str	r3, [sp]
   128e4:	mov	r2, #256	; 0x100
   128e8:	mov	r3, #80	; 0x50
   128ec:	mov	r0, r4
   128f0:	bl	4520 <readstat_write_bytes_as_lines@plt>
   128f4:	cmp	r0, #0
   128f8:	bne	12914 <por_emit_header+0x114>
   128fc:	ldr	r2, [pc, #68]	; 12948 <por_emit_header+0x148>
   12900:	mov	r1, r5
   12904:	mov	r0, r4
   12908:	mov	r3, #8
   1290c:	add	r2, pc, r2
   12910:	bl	126bc <por_write_string_n>
   12914:	add	sp, sp, #464	; 0x1d0
   12918:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1291c:	add	r0, r9, #20
   12920:	add	r0, sl, r0
   12924:	rsb	r2, r9, #20
   12928:	mov	r1, #32
   1292c:	bl	42a4 <memset@plt>
   12930:	b	12874 <por_emit_header+0x74>
   12934:	.word	0x000317c8
   12938:	.word	0x000123e8
   1293c:	.word	0x000123b0
   12940:	.word	0x00000300
   12944:	.word	0x00012350
   12948:	.word	0x000122d0

0001294c <por_variable_ok>:
   1294c:	push	{r4, r5, r6, lr}
   12950:	bl	4364 <readstat_variable_get_name@plt>
   12954:	mov	r4, r0
   12958:	bl	41fc <strlen@plt>
   1295c:	sub	r0, r0, #1
   12960:	cmp	r0, #7
   12964:	bls	12970 <por_variable_ok+0x24>
   12968:	mov	r0, #28
   1296c:	pop	{r4, r5, r6, pc}
   12970:	ldrb	r5, [r4]
   12974:	cmp	r5, #0
   12978:	beq	129f0 <por_variable_ok+0xa4>
   1297c:	ldr	lr, [pc, #116]	; 129f8 <por_variable_ok+0xac>
   12980:	mov	r0, r4
   12984:	mov	r2, r5
   12988:	mov	ip, #0
   1298c:	sub	r3, r2, #35	; 0x23
   12990:	mov	r1, ip
   12994:	uxtb	r3, r3
   12998:	cmp	r3, #22
   1299c:	mvn	r3, lr, lsr r3
   129a0:	andls	r3, r3, #1
   129a4:	eorls	r1, r3, #1
   129a8:	sub	r3, r2, #64	; 0x40
   129ac:	cmp	r3, #26
   129b0:	movhi	r3, r1
   129b4:	orrls	r3, r1, #1
   129b8:	cmp	r3, #0
   129bc:	bne	129d0 <por_variable_ok+0x84>
   129c0:	cmp	r2, #95	; 0x5f
   129c4:	beq	129d0 <por_variable_ok+0x84>
   129c8:	mov	r0, #26
   129cc:	pop	{r4, r5, r6, pc}
   129d0:	ldrb	r2, [r0, #1]!
   129d4:	cmp	r2, #0
   129d8:	bne	1298c <por_variable_ok+0x40>
   129dc:	sub	r0, r5, #64	; 0x40
   129e0:	cmp	r0, #26
   129e4:	movhi	r0, #25
   129e8:	movls	r0, #0
   129ec:	pop	{r4, r5, r6, pc}
   129f0:	mov	r0, #25
   129f4:	pop	{r4, r5, r6, pc}
   129f8:	.word	0x007fe803

000129fc <por_write_base30_integer.isra.0>:
   129fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12a00:	mov	r6, r2
   12a04:	sub	sp, sp, #12
   12a08:	mov	r7, r3
   12a0c:	orrs	r3, r6, r7
   12a10:	str	r0, [sp, #4]
   12a14:	beq	12ad8 <por_write_base30_integer.isra.0+0xdc>
   12a18:	sub	sl, r0, #1
   12a1c:	mov	fp, sl
   12a20:	mov	r5, #0
   12a24:	mov	r8, #30
   12a28:	mov	r9, #0
   12a2c:	b	12a34 <por_write_base30_integer.isra.0+0x38>
   12a30:	ldr	r5, [sp]
   12a34:	mov	r0, r6
   12a38:	mov	r1, r7
   12a3c:	mov	r2, r8
   12a40:	mov	r3, r9
   12a44:	bl	239c0 <__aeabi_uldivmod>
   12a48:	mov	r0, r6
   12a4c:	cmp	r3, #0
   12a50:	add	r1, r2, #48	; 0x30
   12a54:	add	r4, r2, #55	; 0x37
   12a58:	cmpeq	r2, #9
   12a5c:	uxtb	r4, r4
   12a60:	add	r3, r5, #1
   12a64:	uxtbls	r4, r1
   12a68:	str	r3, [sp]
   12a6c:	mov	r1, r7
   12a70:	mov	r3, r9
   12a74:	strb	r4, [fp, #1]!
   12a78:	mov	r2, r8
   12a7c:	bl	239c0 <__aeabi_uldivmod>
   12a80:	mov	r6, r0
   12a84:	mov	r7, r1
   12a88:	orrs	r3, r6, r7
   12a8c:	bne	12a30 <por_write_base30_integer.isra.0+0x34>
   12a90:	cmp	r5, #0
   12a94:	beq	12acc <por_write_base30_integer.isra.0+0xd0>
   12a98:	ldr	r3, [sp, #4]
   12a9c:	add	r5, r3, r5
   12aa0:	mov	r3, #0
   12aa4:	b	12aac <por_write_base30_integer.isra.0+0xb0>
   12aa8:	ldrb	r4, [r5]
   12aac:	ldrb	r2, [sl, #1]
   12ab0:	strb	r4, [sl, #1]!
   12ab4:	add	r3, r3, #1
   12ab8:	strb	r2, [r5], #-1
   12abc:	ldr	r2, [sp, #4]
   12ac0:	sub	r2, r5, r2
   12ac4:	cmp	r3, r2
   12ac8:	blt	12aa8 <por_write_base30_integer.isra.0+0xac>
   12acc:	ldr	r0, [sp]
   12ad0:	add	sp, sp, #12
   12ad4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ad8:	mov	r3, #0
   12adc:	str	r3, [sp]
   12ae0:	b	12acc <por_write_base30_integer.isra.0+0xd0>

00012ae4 <por_write_double_to_buffer.isra.1.constprop.4>:
   12ae4:	vcmp.f64	d0, d0
   12ae8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12aec:	vpush	{d8-d9}
   12af0:	mov	sl, r0
   12af4:	vmrs	APSR_nzcv, fpscr
   12af8:	sub	sp, sp, #20
   12afc:	bvs	12da8 <por_write_double_to_buffer.isra.1.constprop.4+0x2c4>
   12b00:	vmov.f64	d9, d0
   12b04:	vldr	d7, [pc, #716]	; 12dd8 <por_write_double_to_buffer.isra.1.constprop.4+0x2f4>
   12b08:	vabs.f64	d0, d0
   12b0c:	vcmp.f64	d0, d7
   12b10:	vmrs	APSR_nzcv, fpscr
   12b14:	ble	12b78 <por_write_double_to_buffer.isra.1.constprop.4+0x94>
   12b18:	vcmpe.f64	d9, #0.0
   12b1c:	vmrs	APSR_nzcv, fpscr
   12b20:	bmi	12c8c <por_write_double_to_buffer.isra.1.constprop.4+0x1a8>
   12b24:	mov	r2, #5
   12b28:	mov	r0, r2
   12b2c:	mov	r3, #0
   12b30:	mov	r1, #4
   12b34:	mov	lr, #3
   12b38:	mov	r4, #2
   12b3c:	mov	r5, #1
   12b40:	mov	ip, #49	; 0x31
   12b44:	strb	ip, [sl, r3]
   12b48:	mov	r6, #43	; 0x2b
   12b4c:	mov	r3, #84	; 0x54
   12b50:	mov	ip, #47	; 0x2f
   12b54:	strb	r6, [sl, r5]
   12b58:	strb	r3, [sl, r4]
   12b5c:	strb	r3, [sl, lr]
   12b60:	strb	ip, [sl, r1]
   12b64:	mov	r3, #0
   12b68:	strb	r3, [sl, r2]
   12b6c:	add	sp, sp, #20
   12b70:	vpop	{d8-d9}
   12b74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12b78:	add	fp, sp, #8
   12b7c:	mov	r0, fp
   12b80:	bl	4178 <modf@plt>
   12b84:	ldrd	r0, [sp, #8]
   12b88:	vmov.f64	d8, d0
   12b8c:	bl	23a0c <__aeabi_d2lz>
   12b90:	vcmpe.f64	d9, #0.0
   12b94:	vmrs	APSR_nzcv, fpscr
   12b98:	vcmp.f64	d8, #0.0
   12b9c:	movmi	r2, #1
   12ba0:	movpl	r3, #0
   12ba4:	movmi	r3, #45	; 0x2d
   12ba8:	mov	r4, r0
   12bac:	mov	r5, r1
   12bb0:	strmi	r2, [sp, #4]
   12bb4:	strbmi	r3, [sl]
   12bb8:	strmi	r2, [sp]
   12bbc:	strpl	r3, [sp, #4]
   12bc0:	strpl	r3, [sp]
   12bc4:	orrs	r3, r4, r5
   12bc8:	bne	12cb4 <por_write_double_to_buffer.isra.1.constprop.4+0x1d0>
   12bcc:	ldr	r2, [sp, #4]
   12bd0:	vmrs	APSR_nzcv, fpscr
   12bd4:	mov	r3, #48	; 0x30
   12bd8:	strb	r3, [sl, r2]
   12bdc:	ldr	r3, [sp]
   12be0:	add	r3, r3, #1
   12be4:	beq	12d94 <por_write_double_to_buffer.isra.1.constprop.4+0x2b0>
   12be8:	ldr	r1, [sp]
   12bec:	mov	r8, r4
   12bf0:	mov	r9, r5
   12bf4:	add	r6, r1, #2
   12bf8:	add	r4, sl, r3
   12bfc:	mov	r5, #0
   12c00:	mov	r2, #46	; 0x2e
   12c04:	strb	r2, [sl, r3]
   12c08:	vldr	d9, [pc, #464]	; 12de0 <por_write_double_to_buffer.isra.1.constprop.4+0x2fc>
   12c0c:	b	12c4c <por_write_double_to_buffer.isra.1.constprop.4+0x168>
   12c10:	vcmp.f64	d8, #0.0
   12c14:	cmp	r0, #10
   12c18:	sbcs	r1, r1, #0
   12c1c:	uxtblt	r3, r2
   12c20:	vmrs	APSR_nzcv, fpscr
   12c24:	strb	r3, [r4, #1]!
   12c28:	add	r5, r5, #1
   12c2c:	add	r6, r6, #1
   12c30:	movne	r3, #1
   12c34:	moveq	r3, #0
   12c38:	cmp	r5, #49	; 0x31
   12c3c:	movgt	r3, #0
   12c40:	andle	r3, r3, #1
   12c44:	cmp	r3, #0
   12c48:	beq	12d68 <por_write_double_to_buffer.isra.1.constprop.4+0x284>
   12c4c:	vmul.f64	d0, d8, d9
   12c50:	mov	r0, fp
   12c54:	bl	4178 <modf@plt>
   12c58:	ldrd	r0, [sp, #8]
   12c5c:	vmov.f64	d8, d0
   12c60:	bl	23a0c <__aeabi_d2lz>
   12c64:	add	r3, r0, #55	; 0x37
   12c68:	cmp	r0, #0
   12c6c:	sbcs	ip, r1, #0
   12c70:	add	r2, r0, #48	; 0x30
   12c74:	uxtb	r3, r3
   12c78:	bge	12c10 <por_write_double_to_buffer.isra.1.constprop.4+0x12c>
   12c7c:	mvn	r0, #0
   12c80:	add	sp, sp, #20
   12c84:	vpop	{d8-d9}
   12c88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12c8c:	mov	r3, #45	; 0x2d
   12c90:	mov	r2, #6
   12c94:	strb	r3, [r0]
   12c98:	mov	r1, #5
   12c9c:	mov	r0, r2
   12ca0:	mov	r3, #1
   12ca4:	mov	lr, #4
   12ca8:	mov	r4, #3
   12cac:	mov	r5, #2
   12cb0:	b	12b40 <por_write_double_to_buffer.isra.1.constprop.4+0x5c>
   12cb4:	vmrs	APSR_nzcv, fpscr
   12cb8:	bne	12dcc <por_write_double_to_buffer.isra.1.constprop.4+0x2e8>
   12cbc:	mov	r2, #30
   12cc0:	mov	r3, #0
   12cc4:	bl	238ec <__aeabi_ldivmod>
   12cc8:	mov	r8, r2
   12ccc:	mov	r9, r3
   12cd0:	orrs	r3, r8, r9
   12cd4:	moveq	r6, #30
   12cd8:	moveq	r7, #0
   12cdc:	beq	12cf0 <por_write_double_to_buffer.isra.1.constprop.4+0x20c>
   12ce0:	b	12dcc <por_write_double_to_buffer.isra.1.constprop.4+0x2e8>
   12ce4:	bl	238ec <__aeabi_ldivmod>
   12ce8:	orrs	r3, r2, r3
   12cec:	bne	12d24 <por_write_double_to_buffer.isra.1.constprop.4+0x240>
   12cf0:	mov	r0, r4
   12cf4:	mov	r1, r5
   12cf8:	mov	r2, r6
   12cfc:	mov	r3, r7
   12d00:	bl	238ec <__aeabi_ldivmod>
   12d04:	adds	r8, r8, #1
   12d08:	adc	r9, r9, #0
   12d0c:	mov	r2, r6
   12d10:	mov	r3, r7
   12d14:	mov	r4, r0
   12d18:	mov	r5, r1
   12d1c:	orrs	ip, r4, r5
   12d20:	bne	12ce4 <por_write_double_to_buffer.isra.1.constprop.4+0x200>
   12d24:	ldr	r1, [sp, #4]
   12d28:	mov	r3, r5
   12d2c:	mov	r2, r4
   12d30:	add	r0, sl, r1
   12d34:	bl	129fc <por_write_base30_integer.isra.0>
   12d38:	vcmp.f64	d8, #0.0
   12d3c:	ldr	r3, [sp]
   12d40:	vmrs	APSR_nzcv, fpscr
   12d44:	mov	r5, r0
   12d48:	add	r3, r3, r0
   12d4c:	beq	12dc4 <por_write_double_to_buffer.isra.1.constprop.4+0x2e0>
   12d50:	mov	r2, #46	; 0x2e
   12d54:	cmp	r0, #49	; 0x31
   12d58:	strb	r2, [sl, r3]
   12d5c:	add	r6, r3, #1
   12d60:	add	r4, sl, r3
   12d64:	ble	12c08 <por_write_double_to_buffer.isra.1.constprop.4+0x124>
   12d68:	orrs	r3, r8, r9
   12d6c:	moveq	r3, r6
   12d70:	beq	12d94 <por_write_double_to_buffer.isra.1.constprop.4+0x2b0>
   12d74:	add	r4, r6, #1
   12d78:	mov	r1, #43	; 0x2b
   12d7c:	mov	r3, r9
   12d80:	mov	r2, r8
   12d84:	add	r0, sl, r4
   12d88:	strb	r1, [sl, r6]
   12d8c:	bl	129fc <por_write_base30_integer.isra.0>
   12d90:	add	r3, r4, r0
   12d94:	add	r0, r3, #1
   12d98:	mov	r1, #47	; 0x2f
   12d9c:	mov	r2, r0
   12da0:	strb	r1, [sl, r3]
   12da4:	b	12b64 <por_write_double_to_buffer.isra.1.constprop.4+0x80>
   12da8:	mov	r1, #42	; 0x2a
   12dac:	mov	r3, #46	; 0x2e
   12db0:	mov	r2, #2
   12db4:	strb	r1, [r0]
   12db8:	strb	r3, [r0, #1]
   12dbc:	mov	r0, r2
   12dc0:	b	12b64 <por_write_double_to_buffer.isra.1.constprop.4+0x80>
   12dc4:	mov	r6, r3
   12dc8:	b	12d68 <por_write_double_to_buffer.isra.1.constprop.4+0x284>
   12dcc:	mov	r8, #0
   12dd0:	mov	r9, #0
   12dd4:	b	12d24 <por_write_double_to_buffer.isra.1.constprop.4+0x240>
   12dd8:	.word	0xffffffff
   12ddc:	.word	0x7fefffff
   12de0:	.word	0x00000000
   12de4:	.word	0x403e0000

00012de8 <por_write_string_value>:
   12de8:	push	{r4, r5, r6, r7, r8, lr}
   12dec:	mov	r6, r0
   12df0:	mov	r0, r2
   12df4:	mov	r5, r2
   12df8:	mov	r7, r1
   12dfc:	bl	41fc <strlen@plt>
   12e00:	subs	r4, r0, #0
   12e04:	ldreq	r5, [pc, #76]	; 12e58 <por_write_string_value+0x70>
   12e08:	moveq	r4, #1
   12e0c:	addeq	r5, pc, r5
   12e10:	mov	r0, r7
   12e14:	bl	42c8 <readstat_variable_get_storage_width@plt>
   12e18:	cmp	r4, r0
   12e1c:	movcs	r4, r0
   12e20:	mov	r0, r6
   12e24:	vmov	s15, r4
   12e28:	vcvt.f64.u32	d0, s15
   12e2c:	bl	12ae4 <por_write_double_to_buffer.isra.1.constprop.4>
   12e30:	cmn	r0, #1
   12e34:	bne	12e40 <por_write_string_value+0x58>
   12e38:	mov	r0, #13
   12e3c:	pop	{r4, r5, r6, r7, r8, pc}
   12e40:	mov	r2, r4
   12e44:	mov	r1, r5
   12e48:	add	r0, r6, r0
   12e4c:	bl	42bc <strncpy@plt>
   12e50:	mov	r0, #0
   12e54:	pop	{r4, r5, r6, r7, r8, pc}
   12e58:	.word	0x00011e3c

00012e5c <por_write_int8_value>:
   12e5c:	vmov	s15, r2
   12e60:	push	{r4, lr}
   12e64:	vcvt.f64.s32	d0, s15
   12e68:	bl	12ae4 <por_write_double_to_buffer.isra.1.constprop.4>
   12e6c:	cmn	r0, #1
   12e70:	moveq	r0, #13
   12e74:	movne	r0, #0
   12e78:	pop	{r4, pc}

00012e7c <por_write_int16_value>:
   12e7c:	vmov	s15, r2
   12e80:	push	{r4, lr}
   12e84:	vcvt.f64.s32	d0, s15
   12e88:	bl	12ae4 <por_write_double_to_buffer.isra.1.constprop.4>
   12e8c:	cmn	r0, #1
   12e90:	moveq	r0, #13
   12e94:	movne	r0, #0
   12e98:	pop	{r4, pc}

00012e9c <por_write_int32_value>:
   12e9c:	vmov	s15, r2
   12ea0:	push	{r4, lr}
   12ea4:	vcvt.f64.s32	d0, s15
   12ea8:	bl	12ae4 <por_write_double_to_buffer.isra.1.constprop.4>
   12eac:	cmn	r0, #1
   12eb0:	moveq	r0, #13
   12eb4:	movne	r0, #0
   12eb8:	pop	{r4, pc}

00012ebc <por_write_float_value>:
   12ebc:	push	{r4, lr}
   12ec0:	vcvt.f64.f32	d0, s0
   12ec4:	bl	12ae4 <por_write_double_to_buffer.isra.1.constprop.4>
   12ec8:	cmn	r0, #1
   12ecc:	moveq	r0, #13
   12ed0:	movne	r0, #0
   12ed4:	pop	{r4, pc}

00012ed8 <por_write_missing_string>:
   12ed8:	push	{r4, lr}
   12edc:	vldr	d0, [pc, #20]	; 12ef8 <por_write_missing_string+0x20>
   12ee0:	bl	12ae4 <por_write_double_to_buffer.isra.1.constprop.4>
   12ee4:	cmn	r0, #1
   12ee8:	moveq	r0, #13
   12eec:	movne	r0, #0
   12ef0:	pop	{r4, pc}
   12ef4:	nop			; (mov r0, r0)
	...

00012f00 <por_write_missing_number>:
   12f00:	push	{r4, lr}
   12f04:	vldr	d0, [pc, #20]	; 12f20 <por_write_missing_number+0x20>
   12f08:	bl	12ae4 <por_write_double_to_buffer.isra.1.constprop.4>
   12f0c:	cmn	r0, #1
   12f10:	moveq	r0, #13
   12f14:	movne	r0, #0
   12f18:	pop	{r4, pc}
   12f1c:	nop			; (mov r0, r0)
   12f20:	.word	0x00000000
   12f24:	.word	0x7ff80000

00012f28 <por_write_double_value>:
   12f28:	push	{r4, lr}
   12f2c:	bl	12ae4 <por_write_double_to_buffer.isra.1.constprop.4>
   12f30:	cmn	r0, #1
   12f34:	moveq	r0, #13
   12f38:	movne	r0, #0
   12f3c:	pop	{r4, pc}

00012f40 <por_write_double>:
   12f40:	push	{r4, r5, r6, lr}
   12f44:	vpush	{d8}
   12f48:	mov	r4, r0
   12f4c:	mov	r6, r1
   12f50:	vmov.f64	d8, d0
   12f54:	sub	sp, sp, #1280	; 0x500
   12f58:	sub	sp, sp, #8
   12f5c:	add	r5, sp, #8
   12f60:	mov	r0, r5
   12f64:	bl	12ae4 <por_write_double_to_buffer.isra.1.constprop.4>
   12f68:	cmn	r0, #1
   12f6c:	beq	12f94 <por_write_double+0x54>
   12f70:	mov	r3, r0
   12f74:	mov	r2, r5
   12f78:	mov	r1, r6
   12f7c:	mov	r0, r4
   12f80:	bl	126bc <por_write_string_n>
   12f84:	add	sp, sp, #1280	; 0x500
   12f88:	add	sp, sp, #8
   12f8c:	vpop	{d8}
   12f90:	pop	{r4, r5, r6, pc}
   12f94:	ldr	r3, [r4, #296]	; 0x128
   12f98:	cmp	r3, #0
   12f9c:	moveq	r0, #13
   12fa0:	beq	12f84 <por_write_double+0x44>
   12fa4:	ldr	r2, [pc, #56]	; 12fe4 <por_write_double+0xa4>
   12fa8:	add	r5, sp, #264	; 0x108
   12fac:	add	r2, pc, r2
   12fb0:	vstr	d8, [sp]
   12fb4:	mov	r0, r5
   12fb8:	mov	r1, #1024	; 0x400
   12fbc:	bl	4280 <snprintf@plt>
   12fc0:	mov	r0, r5
   12fc4:	ldr	r3, [r4, #296]	; 0x128
   12fc8:	ldr	r1, [r4, #304]	; 0x130
   12fcc:	blx	r3
   12fd0:	mov	r0, #13
   12fd4:	add	sp, sp, #1280	; 0x500
   12fd8:	add	sp, sp, #8
   12fdc:	vpop	{d8}
   12fe0:	pop	{r4, r5, r6, pc}
   12fe4:	.word	0x00011ca0

00012fe8 <por_write_string_field_n>:
   12fe8:	vmov	s15, r3
   12fec:	push	{r4, r5, r6, lr}
   12ff0:	sub	sp, sp, #8
   12ff4:	mov	r6, r2
   12ff8:	vcvt.f64.u32	d0, s15
   12ffc:	str	r3, [sp, #4]
   13000:	mov	r4, r0
   13004:	mov	r5, r1
   13008:	bl	12f40 <por_write_double>
   1300c:	cmp	r0, #0
   13010:	beq	1301c <por_write_string_field_n+0x34>
   13014:	add	sp, sp, #8
   13018:	pop	{r4, r5, r6, pc}
   1301c:	mov	r2, r6
   13020:	mov	r1, r5
   13024:	mov	r0, r4
   13028:	ldr	r3, [sp, #4]
   1302c:	add	sp, sp, #8
   13030:	pop	{r4, r5, r6, lr}
   13034:	b	126bc <por_write_string_n>

00013038 <por_begin_data>:
   13038:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1303c:	vpush	{d8-d11}
   13040:	mov	r1, #8
   13044:	mov	sl, r0
   13048:	mov	r0, #1
   1304c:	sub	sp, sp, #84	; 0x54
   13050:	bl	3d58 <calloc@plt>
   13054:	ldr	r8, [pc, #1492]	; 13630 <por_begin_data+0x5f8>
   13058:	ldr	r2, [pc, #1492]	; 13634 <por_begin_data+0x5fc>
   1305c:	add	r8, pc, r8
   13060:	mov	r3, #0
   13064:	ldr	r1, [r8, r2]
   13068:	sub	r7, r1, #2
   1306c:	add	r1, r1, #508	; 0x1fc
   13070:	add	r1, r1, #2
   13074:	mov	r5, r7
   13078:	mov	r4, r0
   1307c:	ldrh	r2, [r5, #2]!
   13080:	cmp	r2, r3
   13084:	movcs	r3, r2
   13088:	cmp	r5, r1
   1308c:	bne	1307c <por_begin_data+0x44>
   13090:	add	r6, r3, #1
   13094:	mov	r0, r6
   13098:	bl	410c <malloc@plt>
   1309c:	ldr	r3, [pc, #1428]	; 13638 <por_begin_data+0x600>
   130a0:	stm	r4, {r0, r6}
   130a4:	ldr	r3, [r8, r3]
   130a8:	ldrh	r2, [r7, #2]!
   130ac:	add	r3, r3, #1
   130b0:	cmp	r2, #0
   130b4:	ldrne	r1, [r4]
   130b8:	ldrbne	r0, [r3, #-1]
   130bc:	strbne	r0, [r1, r2]
   130c0:	ldrsb	r2, [r3, #-1]
   130c4:	cmp	r2, #0
   130c8:	ldrne	r1, [r4]
   130cc:	strbne	r2, [r1, r2]
   130d0:	cmp	r7, r5
   130d4:	bne	130a8 <por_begin_data+0x70>
   130d8:	mov	r1, r4
   130dc:	mov	r0, sl
   130e0:	bl	12800 <por_emit_header>
   130e4:	subs	fp, r0, #0
   130e8:	beq	13114 <por_begin_data+0xdc>
   130ec:	ldr	r0, [r4]
   130f0:	cmp	r0, #0
   130f4:	beq	130fc <por_begin_data+0xc4>
   130f8:	bl	3ec0 <free@plt>
   130fc:	mov	r0, r4
   13100:	bl	3ec0 <free@plt>
   13104:	mov	r0, fp
   13108:	add	sp, sp, #84	; 0x54
   1310c:	vpop	{d8-d11}
   13110:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13114:	add	r0, sl, #20
   13118:	bl	4160 <localtime@plt>
   1311c:	subs	r7, r0, #0
   13120:	beq	13610 <por_begin_data+0x5d8>
   13124:	add	r9, sp, #64	; 0x40
   13128:	mov	ip, #65	; 0x41
   1312c:	mov	r2, r9
   13130:	mov	r3, #1
   13134:	mov	r1, r4
   13138:	mov	r0, sl
   1313c:	strb	fp, [sp, #65]	; 0x41
   13140:	strb	ip, [sp, #64]	; 0x40
   13144:	bl	126bc <por_write_string_n>
   13148:	subs	fp, r0, #0
   1314c:	bne	130ec <por_begin_data+0xb4>
   13150:	ldr	r0, [r7, #12]
   13154:	ldr	r5, [pc, #1248]	; 1363c <por_begin_data+0x604>
   13158:	ldr	r3, [r7, #20]
   1315c:	mov	r6, #100	; 0x64
   13160:	umull	r2, r1, r5, r0
   13164:	ldr	r2, [pc, #1236]	; 13640 <por_begin_data+0x608>
   13168:	add	r3, r3, #1888	; 0x760
   1316c:	lsr	r1, r1, #5
   13170:	add	r3, r3, #12
   13174:	mul	r1, r6, r1
   13178:	umull	ip, r2, r2, r3
   1317c:	ldr	ip, [pc, #1216]	; 13644 <por_begin_data+0x60c>
   13180:	sub	r1, r0, r1
   13184:	str	r1, [sp, #4]
   13188:	ldr	r0, [r7, #16]
   1318c:	lsr	r2, r2, #13
   13190:	add	r0, r0, #1
   13194:	mul	r1, ip, r2
   13198:	umull	r2, ip, r5, r0
   1319c:	ldr	r2, [pc, #1188]	; 13648 <por_begin_data+0x610>
   131a0:	sub	r3, r3, r1
   131a4:	lsr	ip, ip, #5
   131a8:	add	r2, pc, r2
   131ac:	mul	ip, r6, ip
   131b0:	mov	r1, #9
   131b4:	sub	r0, r0, ip
   131b8:	str	r0, [sp]
   131bc:	mov	r0, r9
   131c0:	bl	4280 <snprintf@plt>
   131c4:	mov	r0, r9
   131c8:	bl	41fc <strlen@plt>
   131cc:	mov	r2, r9
   131d0:	mov	r1, r4
   131d4:	mov	r3, r0
   131d8:	mov	r0, sl
   131dc:	bl	12fe8 <por_write_string_field_n>
   131e0:	subs	fp, r0, #0
   131e4:	bne	130ec <por_begin_data+0xb4>
   131e8:	ldr	r0, [r7]
   131ec:	ldr	r1, [r7, #8]
   131f0:	umull	r3, r2, r5, r0
   131f4:	umull	ip, r3, r5, r1
   131f8:	lsr	r2, r2, #5
   131fc:	lsr	r3, r3, #5
   13200:	mul	r2, r6, r2
   13204:	mul	r3, r6, r3
   13208:	sub	r2, r0, r2
   1320c:	str	r2, [sp, #4]
   13210:	ldr	ip, [r7, #4]
   13214:	add	r2, sp, #48	; 0x30
   13218:	sub	r3, r1, r3
   1321c:	mov	r0, r2
   13220:	str	r2, [sp, #12]
   13224:	umull	r2, r1, r5, ip
   13228:	ldr	r2, [pc, #1052]	; 1364c <por_begin_data+0x614>
   1322c:	mov	r5, r0
   13230:	lsr	r1, r1, #5
   13234:	add	r2, pc, r2
   13238:	mul	r1, r6, r1
   1323c:	sub	r1, ip, r1
   13240:	str	r1, [sp]
   13244:	mov	r1, #7
   13248:	bl	4280 <snprintf@plt>
   1324c:	mov	r0, r5
   13250:	bl	41fc <strlen@plt>
   13254:	mov	r2, r5
   13258:	mov	r1, r4
   1325c:	mov	r3, r0
   13260:	mov	r0, sl
   13264:	bl	12fe8 <por_write_string_field_n>
   13268:	subs	fp, r0, #0
   1326c:	bne	130ec <por_begin_data+0xb4>
   13270:	mov	ip, #49	; 0x31
   13274:	mov	r3, #1
   13278:	mov	r2, r9
   1327c:	mov	r1, r4
   13280:	mov	r0, sl
   13284:	strb	fp, [sp, #65]	; 0x41
   13288:	strb	ip, [sp, #64]	; 0x40
   1328c:	bl	126bc <por_write_string_n>
   13290:	subs	fp, r0, #0
   13294:	bne	130ec <por_begin_data+0xb4>
   13298:	ldr	r2, [pc, #944]	; 13650 <por_begin_data+0x618>
   1329c:	mov	r3, #8
   132a0:	add	r2, pc, r2
   132a4:	mov	r1, r4
   132a8:	mov	r0, sl
   132ac:	bl	12fe8 <por_write_string_field_n>
   132b0:	subs	fp, r0, #0
   132b4:	bne	130ec <por_begin_data+0xb4>
   132b8:	mov	ip, #51	; 0x33
   132bc:	mov	r3, #1
   132c0:	mov	r2, r9
   132c4:	mov	r1, r4
   132c8:	mov	r0, sl
   132cc:	strb	fp, [sp, #65]	; 0x41
   132d0:	strb	ip, [sp, #64]	; 0x40
   132d4:	bl	126bc <por_write_string_n>
   132d8:	subs	fp, r0, #0
   132dc:	bne	130ec <por_begin_data+0xb4>
   132e0:	ldr	r2, [pc, #876]	; 13654 <por_begin_data+0x61c>
   132e4:	mov	r3, #37	; 0x25
   132e8:	add	r2, pc, r2
   132ec:	mov	r1, r4
   132f0:	mov	r0, sl
   132f4:	bl	12fe8 <por_write_string_field_n>
   132f8:	subs	fp, r0, #0
   132fc:	bne	130ec <por_begin_data+0xb4>
   13300:	mov	r0, #52	; 0x34
   13304:	mov	ip, #0
   13308:	strb	r0, [sp, #64]	; 0x40
   1330c:	mov	r3, #1
   13310:	mov	r2, r9
   13314:	mov	r1, r4
   13318:	mov	r0, sl
   1331c:	strb	ip, [sp, #65]	; 0x41
   13320:	bl	126bc <por_write_string_n>
   13324:	subs	fp, r0, #0
   13328:	bne	130ec <por_begin_data+0xb4>
   1332c:	vldr	s15, [sl, #28]
   13330:	mov	r1, r4
   13334:	mov	r0, sl
   13338:	vcvt.f64.s32	d0, s15
   1333c:	bl	12f40 <por_write_double>
   13340:	subs	fp, r0, #0
   13344:	bne	130ec <por_begin_data+0xb4>
   13348:	mov	ip, #53	; 0x35
   1334c:	mov	r3, #1
   13350:	mov	r2, r9
   13354:	mov	r1, r4
   13358:	mov	r0, sl
   1335c:	strb	fp, [sp, #65]	; 0x41
   13360:	strb	ip, [sp, #64]	; 0x40
   13364:	bl	126bc <por_write_string_n>
   13368:	subs	fp, r0, #0
   1336c:	bne	130ec <por_begin_data+0xb4>
   13370:	vldr	d0, [pc, #672]	; 13618 <por_begin_data+0x5e0>
   13374:	mov	r1, r4
   13378:	mov	r0, sl
   1337c:	bl	12f40 <por_write_double>
   13380:	subs	fp, r0, #0
   13384:	bne	130ec <por_begin_data+0xb4>
   13388:	ldr	r3, [sl, #224]	; 0xe0
   1338c:	cmp	r3, #0
   13390:	beq	133e8 <por_begin_data+0x3b0>
   13394:	mov	ip, #54	; 0x36
   13398:	mov	r3, #1
   1339c:	mov	r2, r9
   133a0:	mov	r1, r4
   133a4:	mov	r0, sl
   133a8:	strb	fp, [sp, #65]	; 0x41
   133ac:	strb	ip, [sp, #64]	; 0x40
   133b0:	bl	126bc <por_write_string_n>
   133b4:	subs	fp, r0, #0
   133b8:	bne	130ec <por_begin_data+0xb4>
   133bc:	ldr	r0, [sl, #224]	; 0xe0
   133c0:	bl	4364 <readstat_variable_get_name@plt>
   133c4:	mov	r5, r0
   133c8:	bl	41fc <strlen@plt>
   133cc:	mov	r2, r5
   133d0:	mov	r1, r4
   133d4:	mov	r3, r0
   133d8:	mov	r0, sl
   133dc:	bl	12fe8 <por_write_string_field_n>
   133e0:	subs	fp, r0, #0
   133e4:	bne	130ec <por_begin_data+0xb4>
   133e8:	ldr	r3, [sl, #28]
   133ec:	cmp	r3, #0
   133f0:	ble	136d0 <por_begin_data+0x698>
   133f4:	vldr	d9, [pc, #548]	; 13620 <por_begin_data+0x5e8>
   133f8:	vldr	d8, [pc, #552]	; 13628 <por_begin_data+0x5f0>
   133fc:	mov	r3, #0
   13400:	str	r3, [sp, #16]
   13404:	add	r3, sp, #36	; 0x24
   13408:	str	r3, [sp, #28]
   1340c:	ldr	r1, [sp, #16]
   13410:	mov	r0, sl
   13414:	bl	437c <readstat_get_variable@plt>
   13418:	mov	r5, r0
   1341c:	bl	4364 <readstat_variable_get_name@plt>
   13420:	mov	ip, #55	; 0x37
   13424:	mov	r3, #1
   13428:	strb	ip, [sp, #64]	; 0x40
   1342c:	mov	r2, r9
   13430:	mov	ip, #0
   13434:	mov	r1, r4
   13438:	strb	ip, [sp, #65]	; 0x41
   1343c:	mov	r6, r0
   13440:	mov	r0, sl
   13444:	bl	126bc <por_write_string_n>
   13448:	subs	r3, r0, #0
   1344c:	bne	13608 <por_begin_data+0x5d0>
   13450:	ldr	r3, [r5]
   13454:	mov	r1, r4
   13458:	cmp	r3, #0
   1345c:	mov	r0, sl
   13460:	ldreq	r3, [r5, #1600]	; 0x640
   13464:	vmovne.f64	d0, d9
   13468:	vmoveq	s15, r3
   1346c:	vcvteq.f64.u32	d0, s15
   13470:	bl	12f40 <por_write_double>
   13474:	subs	r3, r0, #0
   13478:	bne	13608 <por_begin_data+0x5d0>
   1347c:	mov	r0, r6
   13480:	bl	41fc <strlen@plt>
   13484:	mov	r2, r6
   13488:	mov	r1, r4
   1348c:	mov	r3, r0
   13490:	mov	r0, sl
   13494:	bl	12fe8 <por_write_string_field_n>
   13498:	subs	r3, r0, #0
   1349c:	bne	13608 <por_begin_data+0x5d0>
   134a0:	ldr	r6, [sp, #28]
   134a4:	mov	r0, r5
   134a8:	mov	r1, r6
   134ac:	bl	40f4 <spss_format_for_variable@plt>
   134b0:	subs	r3, r0, #0
   134b4:	bne	13608 <por_begin_data+0x5d0>
   134b8:	mov	r2, r6
   134bc:	mov	r1, r4
   134c0:	mov	r0, sl
   134c4:	bl	566c <por_emit_format>
   134c8:	subs	r3, r0, #0
   134cc:	bne	13608 <por_begin_data+0x5d0>
   134d0:	mov	r2, r6
   134d4:	mov	r1, r4
   134d8:	mov	r0, sl
   134dc:	bl	566c <por_emit_format>
   134e0:	subs	r3, r0, #0
   134e4:	bne	13608 <por_begin_data+0x5d0>
   134e8:	ldr	r2, [r5]
   134ec:	cmp	r2, #5
   134f0:	beq	137ec <por_begin_data+0x7b4>
   134f4:	mov	r0, r5
   134f8:	str	r3, [sp, #24]
   134fc:	bl	4304 <readstat_variable_get_missing_ranges_count@plt>
   13500:	subs	r3, r0, #0
   13504:	str	r3, [sp, #20]
   13508:	ble	13658 <por_begin_data+0x620>
   1350c:	ldr	r3, [sp, #24]
   13510:	mov	r6, r3
   13514:	mov	r7, r3
   13518:	add	r3, sp, #32
   1351c:	str	r3, [sp, #24]
   13520:	b	13530 <por_begin_data+0x4f8>
   13524:	ldr	r3, [sp, #20]
   13528:	cmp	r3, r7
   1352c:	beq	138bc <por_begin_data+0x884>
   13530:	ldr	r8, [sp, #12]
   13534:	mov	r2, r7
   13538:	mov	r0, r8
   1353c:	mov	r1, r5
   13540:	bl	3f44 <readstat_variable_get_missing_range_lo@plt>
   13544:	mov	r2, r7
   13548:	mov	r1, r5
   1354c:	mov	r0, r9
   13550:	bl	4328 <readstat_variable_get_missing_range_hi@plt>
   13554:	ldm	r8, {r0, r1, r2, r3}
   13558:	bl	3fb0 <readstat_string_value@plt>
   1355c:	add	r7, r7, #1
   13560:	mov	fp, r0
   13564:	ldm	r9, {r0, r1, r2, r3}
   13568:	bl	3fb0 <readstat_string_value@plt>
   1356c:	cmp	fp, #0
   13570:	cmpne	r0, #0
   13574:	mov	r8, r0
   13578:	mov	r1, r0
   1357c:	mov	r0, fp
   13580:	beq	13524 <por_begin_data+0x4ec>
   13584:	bl	3e00 <strcmp@plt>
   13588:	cmp	r0, #0
   1358c:	beq	13524 <por_begin_data+0x4ec>
   13590:	mov	ip, #66	; 0x42
   13594:	mov	r3, #1
   13598:	strb	ip, [sp, #32]
   1359c:	ldr	r2, [sp, #24]
   135a0:	mov	ip, #0
   135a4:	mov	r1, r4
   135a8:	mov	r0, sl
   135ac:	strb	ip, [sp, #33]	; 0x21
   135b0:	bl	126bc <por_write_string_n>
   135b4:	add	r6, r6, #2
   135b8:	subs	r3, r0, #0
   135bc:	mov	r0, fp
   135c0:	bne	13608 <por_begin_data+0x5d0>
   135c4:	bl	41fc <strlen@plt>
   135c8:	mov	r2, fp
   135cc:	mov	r1, r4
   135d0:	mov	r3, r0
   135d4:	mov	r0, sl
   135d8:	bl	12fe8 <por_write_string_field_n>
   135dc:	subs	r3, r0, #0
   135e0:	mov	r0, r8
   135e4:	bne	13608 <por_begin_data+0x5d0>
   135e8:	bl	41fc <strlen@plt>
   135ec:	mov	r2, r8
   135f0:	mov	r1, r4
   135f4:	mov	r3, r0
   135f8:	mov	r0, sl
   135fc:	bl	12fe8 <por_write_string_field_n>
   13600:	subs	r3, r0, #0
   13604:	beq	13524 <por_begin_data+0x4ec>
   13608:	mov	fp, r3
   1360c:	b	130ec <por_begin_data+0xb4>
   13610:	mov	fp, #39	; 0x27
   13614:	b	130ec <por_begin_data+0xb4>
   13618:	.word	0x00000000
   1361c:	.word	0x40490000
	...
   13628:	.word	0xffffffff
   1362c:	.word	0x7fefffff
   13630:	.word	0x00030f9c
   13634:	.word	0x000002f4
   13638:	.word	0x00000300
   1363c:	.word	0x51eb851f
   13640:	.word	0xd1b71759
   13644:	.word	0x00002710
   13648:	.word	0x000119e4
   1364c:	.word	0x00011968
   13650:	.word	0x000119cc
   13654:	.word	0x00011990
   13658:	mov	r0, r5
   1365c:	bl	4400 <readstat_variable_get_label@plt>
   13660:	subs	r5, r0, #0
   13664:	beq	136b8 <por_begin_data+0x680>
   13668:	mov	ip, #67	; 0x43
   1366c:	mov	r3, #1
   13670:	mov	lr, #0
   13674:	mov	r2, r9
   13678:	mov	r1, r4
   1367c:	mov	r0, sl
   13680:	strb	lr, [sp, #65]	; 0x41
   13684:	strb	ip, [sp, #64]	; 0x40
   13688:	bl	126bc <por_write_string_n>
   1368c:	subs	r3, r0, #0
   13690:	bne	13608 <por_begin_data+0x5d0>
   13694:	mov	r0, r5
   13698:	bl	41fc <strlen@plt>
   1369c:	mov	r2, r5
   136a0:	mov	r1, r4
   136a4:	mov	r3, r0
   136a8:	mov	r0, sl
   136ac:	bl	12fe8 <por_write_string_field_n>
   136b0:	subs	r3, r0, #0
   136b4:	bne	13608 <por_begin_data+0x5d0>
   136b8:	ldr	r2, [sp, #16]
   136bc:	ldr	r3, [sl, #28]
   136c0:	add	r2, r2, #1
   136c4:	cmp	r2, r3
   136c8:	str	r2, [sp, #16]
   136cc:	blt	1340c <por_begin_data+0x3d4>
   136d0:	ldr	r3, [sl, #40]	; 0x28
   136d4:	cmp	r3, #0
   136d8:	ble	13718 <por_begin_data+0x6e0>
   136dc:	mov	r7, #0
   136e0:	mov	fp, r9
   136e4:	mov	r1, r7
   136e8:	mov	r0, sl
   136ec:	bl	4424 <readstat_get_label_set@plt>
   136f0:	ldr	r3, [r0, #264]	; 0x108
   136f4:	mov	r5, r0
   136f8:	cmp	r3, #0
   136fc:	ldr	r9, [r0]
   13700:	bne	13a4c <por_begin_data+0xa14>
   13704:	ldr	r3, [sl, #40]	; 0x28
   13708:	add	r7, r7, #1
   1370c:	cmp	r7, r3
   13710:	blt	136e4 <por_begin_data+0x6ac>
   13714:	mov	r9, fp
   13718:	mov	r0, #69	; 0x45
   1371c:	mov	ip, #0
   13720:	strb	r0, [sp, #64]	; 0x40
   13724:	mov	r3, #1
   13728:	mov	r2, r9
   1372c:	mov	r1, r4
   13730:	mov	r0, sl
   13734:	strb	ip, [sp, #65]	; 0x41
   13738:	bl	126bc <por_write_string_n>
   1373c:	subs	fp, r0, #0
   13740:	bne	130ec <por_begin_data+0xb4>
   13744:	vldr	s15, [sl, #52]	; 0x34
   13748:	mov	r1, r4
   1374c:	mov	r0, sl
   13750:	vcvt.f64.s32	d0, s15
   13754:	bl	12f40 <por_write_double>
   13758:	subs	fp, r0, #0
   1375c:	bne	130ec <por_begin_data+0xb4>
   13760:	ldr	r3, [sl, #52]	; 0x34
   13764:	cmp	r3, #0
   13768:	ble	137b8 <por_begin_data+0x780>
   1376c:	mov	r5, fp
   13770:	ldr	r3, [sl, #48]	; 0x30
   13774:	ldr	r6, [r3, r5, lsl #2]
   13778:	add	r5, r5, #1
   1377c:	mov	r0, r6
   13780:	bl	41fc <strlen@plt>
   13784:	mov	r2, r6
   13788:	mov	r1, r4
   1378c:	mov	ip, r0
   13790:	cmp	ip, #80	; 0x50
   13794:	mov	r3, r0
   13798:	mov	r0, sl
   1379c:	bhi	13c6c <por_begin_data+0xc34>
   137a0:	bl	12fe8 <por_write_string_field_n>
   137a4:	cmp	r0, #0
   137a8:	bne	13b94 <por_begin_data+0xb5c>
   137ac:	ldr	r3, [sl, #52]	; 0x34
   137b0:	cmp	r5, r3
   137b4:	blt	13770 <por_begin_data+0x738>
   137b8:	mov	lr, #70	; 0x46
   137bc:	mov	ip, #0
   137c0:	mov	r2, r9
   137c4:	mov	r3, #1
   137c8:	mov	r1, r4
   137cc:	mov	r0, sl
   137d0:	strb	lr, [sp, #64]	; 0x40
   137d4:	strb	ip, [sp, #65]	; 0x41
   137d8:	bl	126bc <por_write_string_n>
   137dc:	subs	fp, r0, #0
   137e0:	streq	r4, [sl, #300]	; 0x12c
   137e4:	beq	13104 <por_begin_data+0xcc>
   137e8:	b	130ec <por_begin_data+0xb4>
   137ec:	mov	r0, r5
   137f0:	str	r3, [sp, #20]
   137f4:	bl	4304 <readstat_variable_get_missing_ranges_count@plt>
   137f8:	subs	fp, r0, #0
   137fc:	ble	13658 <por_begin_data+0x620>
   13800:	ldr	r3, [sp, #20]
   13804:	add	r8, sp, #32
   13808:	mov	r6, r3
   1380c:	mov	r7, r3
   13810:	b	1383c <por_begin_data+0x804>
   13814:	vabs.f64	d7, d0
   13818:	vcmp.f64	d7, d8
   1381c:	vmrs	APSR_nzcv, fpscr
   13820:	bgt	13bc8 <por_begin_data+0xb90>
   13824:	vcmp.f64	d11, d0
   13828:	vmrs	APSR_nzcv, fpscr
   1382c:	bne	13c14 <por_begin_data+0xbdc>
   13830:	add	r7, r7, #1
   13834:	cmp	fp, r7
   13838:	beq	13984 <por_begin_data+0x94c>
   1383c:	mov	r2, r7
   13840:	mov	r1, r5
   13844:	ldr	r0, [sp, #12]
   13848:	bl	3f44 <readstat_variable_get_missing_range_lo@plt>
   1384c:	mov	r2, r7
   13850:	mov	r1, r5
   13854:	mov	r0, r9
   13858:	bl	4328 <readstat_variable_get_missing_range_hi@plt>
   1385c:	ldr	r3, [sp, #12]
   13860:	ldm	r3, {r0, r1, r2, r3}
   13864:	bl	41b4 <readstat_double_value@plt>
   13868:	ldm	r9, {r0, r1, r2, r3}
   1386c:	vmov.f64	d11, d0
   13870:	bl	41b4 <readstat_double_value@plt>
   13874:	vabs.f64	d7, d11
   13878:	vcmp.f64	d7, d8
   1387c:	vmrs	APSR_nzcv, fpscr
   13880:	vmov.f64	d10, d0
   13884:	ble	13814 <por_begin_data+0x7dc>
   13888:	mov	ip, #57	; 0x39
   1388c:	mov	lr, #0
   13890:	mov	r3, #1
   13894:	mov	r2, r8
   13898:	mov	r1, r4
   1389c:	mov	r0, sl
   138a0:	strb	lr, [sp, #33]	; 0x21
   138a4:	strb	ip, [sp, #32]
   138a8:	bl	126bc <por_write_string_n>
   138ac:	cmp	r0, #0
   138b0:	bne	13b94 <por_begin_data+0xb5c>
   138b4:	vmov.f64	d0, d10
   138b8:	b	13bf8 <por_begin_data+0xbc0>
   138bc:	add	r3, sp, #32
   138c0:	mov	r8, #0
   138c4:	str	r3, [sp, #20]
   138c8:	b	138d4 <por_begin_data+0x89c>
   138cc:	cmp	r7, r8
   138d0:	beq	13c5c <por_begin_data+0xc24>
   138d4:	ldr	fp, [sp, #12]
   138d8:	mov	r2, r8
   138dc:	mov	r0, fp
   138e0:	mov	r1, r5
   138e4:	bl	3f44 <readstat_variable_get_missing_range_lo@plt>
   138e8:	mov	r2, r8
   138ec:	mov	r1, r5
   138f0:	mov	r0, r9
   138f4:	bl	4328 <readstat_variable_get_missing_range_hi@plt>
   138f8:	ldm	fp, {r0, r1, r2, r3}
   138fc:	bl	3fb0 <readstat_string_value@plt>
   13900:	add	r8, r8, #1
   13904:	mov	fp, r0
   13908:	ldm	r9, {r0, r1, r2, r3}
   1390c:	bl	3fb0 <readstat_string_value@plt>
   13910:	cmp	fp, #0
   13914:	cmpne	r0, #0
   13918:	mov	r1, r0
   1391c:	mov	r0, fp
   13920:	beq	138cc <por_begin_data+0x894>
   13924:	bl	3e00 <strcmp@plt>
   13928:	subs	ip, r0, #0
   1392c:	bne	138cc <por_begin_data+0x894>
   13930:	mov	r3, #1
   13934:	mov	lr, #56	; 0x38
   13938:	ldr	r2, [sp, #20]
   1393c:	mov	r1, r4
   13940:	mov	r0, sl
   13944:	strb	lr, [sp, #32]
   13948:	strb	ip, [sp, #33]	; 0x21
   1394c:	bl	126bc <por_write_string_n>
   13950:	add	r6, r6, #1
   13954:	subs	r3, r0, #0
   13958:	mov	r0, fp
   1395c:	bne	13608 <por_begin_data+0x5d0>
   13960:	bl	41fc <strlen@plt>
   13964:	mov	r2, fp
   13968:	mov	r1, r4
   1396c:	mov	r3, r0
   13970:	mov	r0, sl
   13974:	bl	12fe8 <por_write_string_field_n>
   13978:	subs	r3, r0, #0
   1397c:	beq	138cc <por_begin_data+0x894>
   13980:	b	13608 <por_begin_data+0x5d0>
   13984:	mov	r8, #0
   13988:	add	fp, sp, #32
   1398c:	b	13998 <por_begin_data+0x960>
   13990:	cmp	r7, r8
   13994:	beq	13c5c <por_begin_data+0xc24>
   13998:	mov	r2, r8
   1399c:	mov	r1, r5
   139a0:	ldr	r0, [sp, #12]
   139a4:	bl	3f44 <readstat_variable_get_missing_range_lo@plt>
   139a8:	mov	r2, r8
   139ac:	mov	r1, r5
   139b0:	mov	r0, r9
   139b4:	bl	4328 <readstat_variable_get_missing_range_hi@plt>
   139b8:	ldr	r3, [sp, #12]
   139bc:	add	r8, r8, #1
   139c0:	ldm	r3, {r0, r1, r2, r3}
   139c4:	bl	41b4 <readstat_double_value@plt>
   139c8:	ldm	r9, {r0, r1, r2, r3}
   139cc:	vmov.f64	d10, d0
   139d0:	bl	41b4 <readstat_double_value@plt>
   139d4:	vabs.f64	d7, d10
   139d8:	vcmp.f64	d10, d0
   139dc:	vmrs	APSR_nzcv, fpscr
   139e0:	bne	13990 <por_begin_data+0x958>
   139e4:	vcmp.f64	d7, d8
   139e8:	vabs.f64	d0, d0
   139ec:	vmrs	APSR_nzcv, fpscr
   139f0:	bgt	13990 <por_begin_data+0x958>
   139f4:	vcmp.f64	d0, d8
   139f8:	vmrs	APSR_nzcv, fpscr
   139fc:	bgt	13990 <por_begin_data+0x958>
   13a00:	mov	ip, #56	; 0x38
   13a04:	mov	r3, #1
   13a08:	mov	r1, r4
   13a0c:	strb	ip, [sp, #32]
   13a10:	mov	r2, fp
   13a14:	mov	ip, #0
   13a18:	mov	r0, sl
   13a1c:	strb	ip, [sp, #33]	; 0x21
   13a20:	bl	126bc <por_write_string_n>
   13a24:	add	r6, r6, #1
   13a28:	vmov.f64	d0, d10
   13a2c:	mov	r1, r4
   13a30:	subs	r3, r0, #0
   13a34:	mov	r0, sl
   13a38:	bne	13608 <por_begin_data+0x5d0>
   13a3c:	bl	12f40 <por_write_double>
   13a40:	subs	r3, r0, #0
   13a44:	beq	13990 <por_begin_data+0x958>
   13a48:	b	13608 <por_begin_data+0x5d0>
   13a4c:	ldr	r3, [r0, #276]	; 0x114
   13a50:	cmp	r3, #0
   13a54:	beq	13704 <por_begin_data+0x6cc>
   13a58:	mov	ip, #68	; 0x44
   13a5c:	strb	ip, [sp, #64]	; 0x40
   13a60:	mov	r3, #1
   13a64:	mov	ip, #0
   13a68:	mov	r2, fp
   13a6c:	mov	r1, r4
   13a70:	mov	r0, sl
   13a74:	strb	ip, [sp, #65]	; 0x41
   13a78:	bl	126bc <por_write_string_n>
   13a7c:	cmp	r0, #0
   13a80:	bne	13b94 <por_begin_data+0xb5c>
   13a84:	vldr	s15, [r5, #276]	; 0x114
   13a88:	mov	r1, r4
   13a8c:	mov	r0, sl
   13a90:	vcvt.f64.s32	d0, s15
   13a94:	bl	12f40 <por_write_double>
   13a98:	cmp	r0, #0
   13a9c:	bne	13b94 <por_begin_data+0xb5c>
   13aa0:	ldr	r3, [r5, #276]	; 0x114
   13aa4:	cmp	r3, #0
   13aa8:	movgt	r6, r0
   13aac:	ble	13af4 <por_begin_data+0xabc>
   13ab0:	mov	r1, r6
   13ab4:	mov	r0, r5
   13ab8:	bl	4448 <readstat_get_label_set_variable@plt>
   13abc:	bl	4364 <readstat_variable_get_name@plt>
   13ac0:	add	r6, r6, #1
   13ac4:	mov	r8, r0
   13ac8:	bl	41fc <strlen@plt>
   13acc:	mov	r2, r8
   13ad0:	mov	r1, r4
   13ad4:	mov	r3, r0
   13ad8:	mov	r0, sl
   13adc:	bl	12fe8 <por_write_string_field_n>
   13ae0:	cmp	r0, #0
   13ae4:	bne	13b94 <por_begin_data+0xb5c>
   13ae8:	ldr	r3, [r5, #276]	; 0x114
   13aec:	cmp	r6, r3
   13af0:	blt	13ab0 <por_begin_data+0xa78>
   13af4:	vldr	s15, [r5, #264]	; 0x108
   13af8:	mov	r1, r4
   13afc:	mov	r0, sl
   13b00:	vcvt.f64.s32	d0, s15
   13b04:	bl	12f40 <por_write_double>
   13b08:	cmp	r0, #0
   13b0c:	bne	13b94 <por_begin_data+0xb5c>
   13b10:	ldr	r3, [r5, #264]	; 0x108
   13b14:	cmp	r3, #0
   13b18:	ble	13704 <por_begin_data+0x6cc>
   13b1c:	mov	r8, r0
   13b20:	mov	r1, r8
   13b24:	mov	r0, r5
   13b28:	bl	44cc <readstat_get_value_label@plt>
   13b2c:	cmp	r9, #0
   13b30:	mov	r6, r0
   13b34:	beq	13bb0 <por_begin_data+0xb78>
   13b38:	cmp	r9, #5
   13b3c:	beq	13b9c <por_begin_data+0xb64>
   13b40:	cmp	r9, #3
   13b44:	beq	13b78 <por_begin_data+0xb40>
   13b48:	ldr	r3, [r6, #28]
   13b4c:	ldr	r2, [r6, #24]
   13b50:	mov	r1, r4
   13b54:	mov	r0, sl
   13b58:	bl	12fe8 <por_write_string_field_n>
   13b5c:	add	r8, r8, #1
   13b60:	cmp	r0, #0
   13b64:	bne	13b94 <por_begin_data+0xb5c>
   13b68:	ldr	r3, [r5, #264]	; 0x108
   13b6c:	cmp	r8, r3
   13b70:	blt	13b20 <por_begin_data+0xae8>
   13b74:	b	13704 <por_begin_data+0x6cc>
   13b78:	vldr	s15, [r6, #8]
   13b7c:	mov	r1, r4
   13b80:	mov	r0, sl
   13b84:	vcvt.f64.s32	d0, s15
   13b88:	bl	12f40 <por_write_double>
   13b8c:	cmp	r0, #0
   13b90:	beq	13b48 <por_begin_data+0xb10>
   13b94:	mov	fp, r0
   13b98:	b	130ec <por_begin_data+0xb4>
   13b9c:	vldr	d0, [r0]
   13ba0:	mov	r1, r4
   13ba4:	mov	r0, sl
   13ba8:	bl	12f40 <por_write_double>
   13bac:	b	13b8c <por_begin_data+0xb54>
   13bb0:	ldr	r3, [r0, #20]
   13bb4:	ldr	r2, [r0, #16]
   13bb8:	mov	r1, r4
   13bbc:	mov	r0, sl
   13bc0:	bl	12fe8 <por_write_string_field_n>
   13bc4:	b	13b8c <por_begin_data+0xb54>
   13bc8:	mov	ip, #65	; 0x41
   13bcc:	strb	ip, [sp, #32]
   13bd0:	mov	r3, #1
   13bd4:	mov	ip, #0
   13bd8:	mov	r2, r8
   13bdc:	mov	r1, r4
   13be0:	mov	r0, sl
   13be4:	strb	ip, [sp, #33]	; 0x21
   13be8:	bl	126bc <por_write_string_n>
   13bec:	cmp	r0, #0
   13bf0:	bne	13b94 <por_begin_data+0xb5c>
   13bf4:	vmov.f64	d0, d11
   13bf8:	mov	r1, r4
   13bfc:	mov	r0, sl
   13c00:	bl	12f40 <por_write_double>
   13c04:	cmp	r0, #0
   13c08:	bne	13b94 <por_begin_data+0xb5c>
   13c0c:	add	r6, r6, #2
   13c10:	b	13830 <por_begin_data+0x7f8>
   13c14:	mov	ip, #66	; 0x42
   13c18:	strb	ip, [sp, #32]
   13c1c:	mov	r3, #1
   13c20:	mov	ip, #0
   13c24:	mov	r2, r8
   13c28:	mov	r1, r4
   13c2c:	mov	r0, sl
   13c30:	strb	ip, [sp, #33]	; 0x21
   13c34:	bl	126bc <por_write_string_n>
   13c38:	cmp	r0, #0
   13c3c:	bne	13b94 <por_begin_data+0xb5c>
   13c40:	vmov.f64	d0, d11
   13c44:	mov	r1, r4
   13c48:	mov	r0, sl
   13c4c:	bl	12f40 <por_write_double>
   13c50:	cmp	r0, #0
   13c54:	beq	138b4 <por_begin_data+0x87c>
   13c58:	b	13b94 <por_begin_data+0xb5c>
   13c5c:	cmp	r6, #3
   13c60:	ble	13658 <por_begin_data+0x620>
   13c64:	mov	fp, #31
   13c68:	b	130ec <por_begin_data+0xb4>
   13c6c:	mov	fp, #32
   13c70:	b	130ec <por_begin_data+0xb4>

00013c74 <por_end_data>:
   13c74:	push	{r4, r5, r6, lr}
   13c78:	sub	sp, sp, #8
   13c7c:	mov	ip, #0
   13c80:	mov	r6, #90	; 0x5a
   13c84:	ldr	r1, [r0, #300]	; 0x12c
   13c88:	mov	r3, #1
   13c8c:	add	r2, sp, #4
   13c90:	mov	r4, r0
   13c94:	strb	r6, [sp, #4]
   13c98:	strb	ip, [sp, #5]
   13c9c:	bl	126bc <por_write_string_n>
   13ca0:	subs	r5, r0, #0
   13ca4:	bne	13cc4 <por_end_data+0x50>
   13ca8:	ldr	r3, [pc, #60]	; 13cec <por_end_data+0x78>
   13cac:	mov	r1, r6
   13cb0:	add	r3, pc, r3
   13cb4:	mov	r2, #80	; 0x50
   13cb8:	mov	r0, r4
   13cbc:	bl	44e4 <readstat_write_line_padding@plt>
   13cc0:	mov	r5, r0
   13cc4:	ldr	r4, [r4, #300]	; 0x12c
   13cc8:	ldr	r0, [r4]
   13ccc:	cmp	r0, #0
   13cd0:	beq	13cd8 <por_end_data+0x64>
   13cd4:	bl	3ec0 <free@plt>
   13cd8:	mov	r0, r4
   13cdc:	bl	3ec0 <free@plt>
   13ce0:	mov	r0, r5
   13ce4:	add	sp, sp, #8
   13ce8:	pop	{r4, r5, r6, pc}
   13cec:	.word	0x00010f7c

00013cf0 <readstat_begin_writing_por>:
   13cf0:	push	{r4, r5, lr}
   13cf4:	ldr	ip, [pc, #168]	; 13da4 <readstat_begin_writing_por+0xb4>
   13cf8:	ldr	lr, [pc, #168]	; 13da8 <readstat_begin_writing_por+0xb8>
   13cfc:	add	ip, pc, ip
   13d00:	add	lr, pc, lr
   13d04:	ldr	r5, [pc, #160]	; 13dac <readstat_begin_writing_por+0xbc>
   13d08:	ldr	r4, [pc, #160]	; 13db0 <readstat_begin_writing_por+0xc0>
   13d0c:	str	lr, [r0, #292]	; 0x124
   13d10:	str	ip, [r0, #228]	; 0xe4
   13d14:	ldr	lr, [pc, #152]	; 13db4 <readstat_begin_writing_por+0xc4>
   13d18:	ldr	ip, [pc, #152]	; 13db8 <readstat_begin_writing_por+0xc8>
   13d1c:	add	r5, pc, r5
   13d20:	add	r4, pc, r4
   13d24:	add	lr, pc, lr
   13d28:	add	ip, pc, ip
   13d2c:	str	r5, [r0, #232]	; 0xe8
   13d30:	str	r4, [r0, #236]	; 0xec
   13d34:	ldr	r5, [pc, #128]	; 13dbc <readstat_begin_writing_por+0xcc>
   13d38:	ldr	r4, [pc, #128]	; 13dc0 <readstat_begin_writing_por+0xd0>
   13d3c:	str	lr, [r0, #240]	; 0xf0
   13d40:	str	ip, [r0, #244]	; 0xf4
   13d44:	ldr	lr, [pc, #120]	; 13dc4 <readstat_begin_writing_por+0xd4>
   13d48:	ldr	ip, [pc, #120]	; 13dc8 <readstat_begin_writing_por+0xd8>
   13d4c:	add	r5, pc, r5
   13d50:	add	r4, pc, r4
   13d54:	add	lr, pc, lr
   13d58:	add	ip, pc, ip
   13d5c:	str	r5, [r0, #248]	; 0xf8
   13d60:	str	r4, [r0, #252]	; 0xfc
   13d64:	ldr	r5, [pc, #96]	; 13dcc <readstat_begin_writing_por+0xdc>
   13d68:	ldr	r4, [pc, #96]	; 13dd0 <readstat_begin_writing_por+0xe0>
   13d6c:	str	lr, [r0, #256]	; 0x100
   13d70:	str	ip, [r0, #264]	; 0x108
   13d74:	ldr	lr, [pc, #88]	; 13dd4 <readstat_begin_writing_por+0xe4>
   13d78:	ldr	ip, [pc, #88]	; 13dd8 <readstat_begin_writing_por+0xe8>
   13d7c:	add	r5, pc, r5
   13d80:	add	r4, pc, r4
   13d84:	add	lr, pc, lr
   13d88:	add	ip, pc, ip
   13d8c:	str	r5, [r0, #268]	; 0x10c
   13d90:	str	r4, [r0, #276]	; 0x114
   13d94:	str	lr, [r0, #280]	; 0x118
   13d98:	str	ip, [r0, #284]	; 0x11c
   13d9c:	pop	{r4, r5, lr}
   13da0:	b	3f68 <readstat_begin_writing_file@plt>
   13da4:	.word	0xffffe994
   13da8:	.word	0xffffe9a0
   13dac:	.word	0xffffec28
   13db0:	.word	0xfffff134
   13db4:	.word	0xfffff150
   13db8:	.word	0xfffff16c
   13dbc:	.word	0xfffff168
   13dc0:	.word	0xfffff1d0
   13dc4:	.word	0xfffff08c
   13dc8:	.word	0xfffff178
   13dcc:	.word	0xfffff17c
   13dd0:	.word	0xfffff2b0
   13dd4:	.word	0xffffea1c
   13dd8:	.word	0xfffffee4

00013ddc <sav_ctx_free>:
   13ddc:	push	{r4, r5, r6, lr}
   13de0:	mov	r4, r0
   13de4:	ldr	r0, [r0, #44]	; 0x2c
   13de8:	cmp	r0, #0
   13dec:	beq	13e20 <sav_ctx_free+0x44>
   13df0:	ldr	r3, [r4, #340]	; 0x154
   13df4:	cmp	r3, #0
   13df8:	ble	13e1c <sav_ctx_free+0x40>
   13dfc:	mov	r5, #0
   13e00:	ldr	r0, [r0, r5, lsl #2]
   13e04:	bl	4418 <spss_varinfo_free@plt>
   13e08:	ldr	r3, [r4, #340]	; 0x154
   13e0c:	add	r5, r5, #1
   13e10:	cmp	r3, r5
   13e14:	ldr	r0, [r4, #44]	; 0x2c
   13e18:	bgt	13e00 <sav_ctx_free+0x24>
   13e1c:	bl	3ec0 <free@plt>
   13e20:	ldr	r2, [r4, #52]	; 0x34
   13e24:	cmp	r2, #0
   13e28:	beq	13e68 <sav_ctx_free+0x8c>
   13e2c:	ldr	r1, [r4, #348]	; 0x15c
   13e30:	cmp	r1, #0
   13e34:	ble	13e60 <sav_ctx_free+0x84>
   13e38:	mov	r5, #0
   13e3c:	ldr	r3, [r2, r5, lsl #2]
   13e40:	add	r5, r5, #1
   13e44:	subs	r0, r3, #0
   13e48:	beq	13e58 <sav_ctx_free+0x7c>
   13e4c:	bl	3ec0 <free@plt>
   13e50:	ldr	r2, [r4, #52]	; 0x34
   13e54:	ldr	r1, [r4, #348]	; 0x15c
   13e58:	cmp	r1, r5
   13e5c:	bgt	13e3c <sav_ctx_free+0x60>
   13e60:	mov	r0, r2
   13e64:	bl	3ec0 <free@plt>
   13e68:	ldr	r0, [r4, #376]	; 0x178
   13e6c:	cmp	r0, #0
   13e70:	beq	13e78 <sav_ctx_free+0x9c>
   13e74:	bl	3ec0 <free@plt>
   13e78:	ldr	r0, [r4, #384]	; 0x180
   13e7c:	cmp	r0, #0
   13e80:	beq	13e88 <sav_ctx_free+0xac>
   13e84:	bl	3ec0 <free@plt>
   13e88:	ldr	r0, [r4, #336]	; 0x150
   13e8c:	cmp	r0, #0
   13e90:	beq	13e98 <sav_ctx_free+0xbc>
   13e94:	bl	3dd0 <iconv_close@plt>
   13e98:	ldr	r0, [r4, #328]	; 0x148
   13e9c:	cmp	r0, #0
   13ea0:	beq	13ea8 <sav_ctx_free+0xcc>
   13ea4:	bl	3ec0 <free@plt>
   13ea8:	mov	r0, r4
   13eac:	pop	{r4, r5, r6, lr}
   13eb0:	b	3ec0 <free@plt>

00013eb4 <sav_ctx_init>:
   13eb4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13eb8:	mov	r4, r0
   13ebc:	mov	r5, r1
   13ec0:	mov	r0, #1
   13ec4:	mov	r1, #440	; 0x1b8
   13ec8:	bl	3fc8 <readstat_calloc@plt>
   13ecc:	subs	sl, r0, #0
   13ed0:	beq	141a0 <sav_ctx_init+0x2ec>
   13ed4:	ldr	r1, [pc, #748]	; 141c8 <sav_ctx_init+0x314>
   13ed8:	mov	r2, #4
   13edc:	add	r1, pc, r1
   13ee0:	mov	r0, r4
   13ee4:	bl	3fa4 <memcmp@plt>
   13ee8:	cmp	r0, #0
   13eec:	moveq	r3, #2
   13ef0:	streq	r3, [sl, #424]	; 0x1a8
   13ef4:	beq	13f1c <sav_ctx_init+0x68>
   13ef8:	ldr	r1, [pc, #716]	; 141cc <sav_ctx_init+0x318>
   13efc:	mov	r2, #4
   13f00:	add	r1, pc, r1
   13f04:	mov	r0, r4
   13f08:	bl	3fa4 <memcmp@plt>
   13f0c:	cmp	r0, #0
   13f10:	bne	141b8 <sav_ctx_init+0x304>
   13f14:	mov	r3, #3
   13f18:	str	r3, [sl, #424]	; 0x1a8
   13f1c:	ldrb	r2, [r4, #65]	; 0x41
   13f20:	ldrb	r3, [r4, #64]	; 0x40
   13f24:	ldrb	r0, [r4, #66]	; 0x42
   13f28:	ldrb	r1, [r4, #67]	; 0x43
   13f2c:	orr	r3, r3, r2, lsl #8
   13f30:	ldrb	r2, [sl, #436]	; 0x1b4
   13f34:	orr	r3, r3, r0, lsl #16
   13f38:	orr	r3, r3, r1, lsl #24
   13f3c:	bic	r2, r2, #1
   13f40:	sub	r3, r3, #2
   13f44:	cmp	r3, #1
   13f48:	movls	r3, r2
   13f4c:	orrhi	r3, r2, #1
   13f50:	strb	r3, [sl, #436]	; 0x1b4
   13f54:	bl	3eb4 <machine_is_little_endian@plt>
   13f58:	ldrb	r2, [sl, #436]	; 0x1b4
   13f5c:	and	r3, r2, #1
   13f60:	cmp	r0, r3
   13f64:	moveq	r0, #2
   13f68:	movne	r0, #1
   13f6c:	str	r0, [sl, #432]	; 0x1b0
   13f70:	ldrb	ip, [r4, #73]	; 0x49
   13f74:	ldrb	r0, [r4, #72]	; 0x48
   13f78:	ldrb	r1, [r4, #74]	; 0x4a
   13f7c:	ldrb	r3, [r4, #75]	; 0x4b
   13f80:	orr	r0, r0, ip, lsl #8
   13f84:	orr	r0, r0, r1, lsl #16
   13f88:	orr	r0, r0, r3, lsl #24
   13f8c:	cmp	r0, #1
   13f90:	beq	140b8 <sav_ctx_init+0x204>
   13f94:	bl	3d94 <byteswap4@plt>
   13f98:	cmp	r0, #1
   13f9c:	ldrbeq	r2, [sl, #436]	; 0x1b4
   13fa0:	beq	140b8 <sav_ctx_init+0x204>
   13fa4:	ldrb	r1, [r4, #73]	; 0x49
   13fa8:	ldrb	r0, [r4, #72]	; 0x48
   13fac:	ldrb	r2, [r4, #74]	; 0x4a
   13fb0:	ldrb	r3, [r4, #75]	; 0x4b
   13fb4:	orr	r0, r0, r1, lsl #8
   13fb8:	orr	r0, r0, r2, lsl #16
   13fbc:	orr	r0, r0, r3, lsl #24
   13fc0:	cmp	r0, #2
   13fc4:	beq	141a8 <sav_ctx_init+0x2f4>
   13fc8:	bl	3d94 <byteswap4@plt>
   13fcc:	cmp	r0, #2
   13fd0:	beq	141a8 <sav_ctx_init+0x2f4>
   13fd4:	ldrb	r2, [sl, #436]	; 0x1b4
   13fd8:	tst	r2, #1
   13fdc:	beq	140c8 <sav_ctx_init+0x214>
   13fe0:	ldrb	r1, [r4, #81]	; 0x51
   13fe4:	ldrb	r3, [r4, #80]	; 0x50
   13fe8:	ldrb	r2, [r4, #82]	; 0x52
   13fec:	ldrb	r0, [r4, #83]	; 0x53
   13ff0:	orr	r3, r3, r1, lsl #8
   13ff4:	orr	r3, r3, r2, lsl #16
   13ff8:	orr	r0, r3, r0, lsl #24
   13ffc:	bl	3d94 <byteswap4@plt>
   14000:	ldrb	r3, [sl, #436]	; 0x1b4
   14004:	tst	r3, #1
   14008:	str	r0, [sl, #352]	; 0x160
   1400c:	beq	140e8 <sav_ctx_init+0x234>
   14010:	ldrb	r1, [r4, #77]	; 0x4d
   14014:	ldrb	r2, [r4, #78]	; 0x4e
   14018:	ldrb	r3, [r4, #76]	; 0x4c
   1401c:	ldrb	r0, [r4, #79]	; 0x4f
   14020:	mvn	r8, #0
   14024:	orr	r3, r3, r1, lsl #8
   14028:	orr	r3, r3, r2, lsl #16
   1402c:	orr	r0, r3, r0, lsl #24
   14030:	bl	3d94 <byteswap4@plt>
   14034:	ldrb	r3, [sl, #436]	; 0x1b4
   14038:	add	r1, sl, #400	; 0x190
   1403c:	add	ip, sl, #416	; 0x1a0
   14040:	tst	r3, #1
   14044:	ldr	r3, [pc, #388]	; 141d0 <sav_ctx_init+0x31c>
   14048:	mvn	r9, #1048576	; 0x100000
   1404c:	mvn	r6, #1
   14050:	mvn	r7, #1048576	; 0x100000
   14054:	mvn	r2, #0
   14058:	str	r0, [sl, #372]	; 0x174
   1405c:	strd	r8, [r1, #-8]
   14060:	strd	r6, [r1]
   14064:	strd	r2, [ip, #-8]
   14068:	beq	14134 <sav_ctx_init+0x280>
   1406c:	ldrb	lr, [r4, #85]	; 0x55
   14070:	ldrb	ip, [r4, #89]	; 0x59
   14074:	ldrb	r2, [r4, #84]	; 0x54
   14078:	ldrb	r3, [r4, #88]	; 0x58
   1407c:	ldrb	r0, [r4, #86]	; 0x56
   14080:	ldrb	r1, [r4, #90]	; 0x5a
   14084:	orr	r2, r2, lr, lsl #8
   14088:	orr	r3, r3, ip, lsl #8
   1408c:	ldrb	lr, [r4, #87]	; 0x57
   14090:	ldrb	ip, [r4, #91]	; 0x5b
   14094:	orr	r2, r2, r0, lsl #16
   14098:	orr	r3, r3, r1, lsl #16
   1409c:	orr	r0, r2, lr, lsl #24
   140a0:	orr	r1, r3, ip, lsl #24
   140a4:	vmov	d0, r0, r1
   140a8:	bl	4508 <byteswap_double@plt>
   140ac:	vmov	r2, s0
   140b0:	vmov	r3, s1
   140b4:	b	1416c <sav_ctx_init+0x2b8>
   140b8:	mov	r3, #1
   140bc:	str	r3, [sl, #428]	; 0x1ac
   140c0:	tst	r2, #1
   140c4:	bne	13fe0 <sav_ctx_init+0x12c>
   140c8:	ldrb	r0, [r4, #81]	; 0x51
   140cc:	ldrb	r3, [r4, #80]	; 0x50
   140d0:	ldrb	r1, [r4, #82]	; 0x52
   140d4:	ldrb	r2, [r4, #83]	; 0x53
   140d8:	orr	r3, r3, r0, lsl #8
   140dc:	orr	r3, r3, r1, lsl #16
   140e0:	orr	r3, r3, r2, lsl #24
   140e4:	str	r3, [sl, #352]	; 0x160
   140e8:	ldrb	r2, [r4, #77]	; 0x4d
   140ec:	ldrb	r0, [r4, #78]	; 0x4e
   140f0:	ldrb	r3, [r4, #76]	; 0x4c
   140f4:	ldrb	r1, [r4, #79]	; 0x4f
   140f8:	add	ip, sl, #416	; 0x1a0
   140fc:	orr	r3, r3, r2, lsl #8
   14100:	orr	r3, r3, r0, lsl #16
   14104:	add	r2, sl, #400	; 0x190
   14108:	orr	r3, r3, r1, lsl #24
   1410c:	mvn	r0, #0
   14110:	mvn	r1, #1048576	; 0x100000
   14114:	str	r3, [sl, #372]	; 0x174
   14118:	strd	r0, [r2, #-8]
   1411c:	ldr	r1, [pc, #172]	; 141d0 <sav_ctx_init+0x31c>
   14120:	mvn	r6, #1
   14124:	mvn	r7, #1048576	; 0x100000
   14128:	mvn	r0, #0
   1412c:	strd	r6, [r2]
   14130:	strd	r0, [ip, #-8]
   14134:	ldrb	r0, [r4, #85]	; 0x55
   14138:	ldrb	r1, [r4, #89]	; 0x59
   1413c:	ldrb	r2, [r4, #84]	; 0x54
   14140:	ldrb	r3, [r4, #88]	; 0x58
   14144:	ldrb	lr, [r4, #86]	; 0x56
   14148:	ldrb	ip, [r4, #90]	; 0x5a
   1414c:	orr	r2, r2, r0, lsl #8
   14150:	orr	r3, r3, r1, lsl #8
   14154:	ldrb	r0, [r4, #87]	; 0x57
   14158:	ldrb	r1, [r4, #91]	; 0x5b
   1415c:	orr	r2, r2, lr, lsl #16
   14160:	orr	r3, r3, ip, lsl #16
   14164:	orr	r2, r2, r0, lsl #24
   14168:	orr	r3, r3, r1, lsl #24
   1416c:	mov	r6, r2
   14170:	mov	r7, r3
   14174:	mov	r0, #512	; 0x200
   14178:	str	r0, [sl, #48]	; 0x30
   1417c:	mov	r1, #4
   14180:	str	r6, [sl, #416]	; 0x1a0
   14184:	str	r7, [sl, #420]	; 0x1a4
   14188:	bl	3fc8 <readstat_calloc@plt>
   1418c:	cmp	r0, #0
   14190:	mov	r4, r0
   14194:	str	r0, [sl, #44]	; 0x2c
   14198:	beq	141b8 <sav_ctx_init+0x304>
   1419c:	str	r5, [sl, #36]	; 0x24
   141a0:	mov	r0, sl
   141a4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   141a8:	mov	r3, #2
   141ac:	str	r3, [sl, #428]	; 0x1ac
   141b0:	ldrb	r2, [sl, #436]	; 0x1b4
   141b4:	b	140c0 <sav_ctx_init+0x20c>
   141b8:	mov	r0, sl
   141bc:	bl	3f14 <sav_ctx_free@plt>
   141c0:	mov	sl, #0
   141c4:	b	141a0 <sav_ctx_init+0x2ec>
   141c8:	.word	0x00010dc4
   141cc:	.word	0x00010da8
   141d0:	.word	0x7fefffff
   141d4:	.word	0x00000000

000141d8 <sav_compressed_row_bound>:
   141d8:	lsr	r3, r0, #3
   141dc:	add	r3, r3, #8
   141e0:	bic	r3, r3, #7
   141e4:	add	r0, r3, r0
   141e8:	bx	lr

000141ec <sav_compress_row>:
   141ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   141f0:	vpush	{d8-d9}
   141f4:	mov	r4, #0
   141f8:	str	r4, [r0]
   141fc:	str	r4, [r0, #4]
   14200:	sub	sp, sp, #44	; 0x2c
   14204:	mov	r8, r0
   14208:	str	r3, [sp, #8]
   1420c:	ldr	r3, [r3, #28]
   14210:	cmp	r3, r4
   14214:	ble	1440c <sav_compress_row+0x220>
   14218:	ldr	r3, [pc, #520]	; 14428 <sav_compress_row+0x23c>
   1421c:	vldr	d8, [pc, #500]	; 14418 <sav_compress_row+0x22c>
   14220:	vldr	d9, [pc, #504]	; 14420 <sav_compress_row+0x234>
   14224:	add	r3, pc, r3
   14228:	str	r3, [sp]
   1422c:	mov	r6, r4
   14230:	add	r3, sp, #24
   14234:	mov	r7, #8
   14238:	str	r3, [sp, #16]
   1423c:	add	r3, sp, #32
   14240:	str	r4, [sp, #4]
   14244:	str	r3, [sp, #20]
   14248:	str	r1, [sp, #12]
   1424c:	ldr	r1, [sp, #4]
   14250:	ldr	r0, [sp, #8]
   14254:	bl	437c <readstat_get_variable@plt>
   14258:	ldr	r3, [r0]
   1425c:	cmp	r3, #0
   14260:	bne	142f0 <sav_compress_row+0x104>
   14264:	ldr	r5, [r0, #1596]	; 0x63c
   14268:	cmp	r5, #0
   1426c:	beq	14348 <sav_compress_row+0x15c>
   14270:	mov	r9, #8
   14274:	ldr	sl, [sp, #12]
   14278:	b	142ac <sav_compress_row+0xc0>
   1427c:	mvn	r3, #1
   14280:	strb	r3, [r8, r4]
   14284:	add	r4, r4, #1
   14288:	ands	r2, r4, #7
   1428c:	addeq	r1, r8, r7
   14290:	streq	r2, [r8, r7]
   14294:	moveq	r4, r7
   14298:	streq	r2, [r1, #4]
   1429c:	addeq	r7, r7, #8
   142a0:	subs	r5, r5, #8
   142a4:	add	r6, r6, #8
   142a8:	beq	14390 <sav_compress_row+0x1a4>
   142ac:	add	fp, sl, r6
   142b0:	mov	r0, fp
   142b4:	mov	r2, r9
   142b8:	ldr	r1, [sp]
   142bc:	bl	3fa4 <memcmp@plt>
   142c0:	cmp	r0, #0
   142c4:	beq	1427c <sav_compress_row+0x90>
   142c8:	mvn	r3, #2
   142cc:	strb	r3, [r8, r4]
   142d0:	ldr	r2, [fp]
   142d4:	ldr	r1, [fp, #4]
   142d8:	str	r2, [r8, r7]
   142dc:	add	r2, r8, r7
   142e0:	add	r4, r4, #1
   142e4:	str	r1, [r2, #4]
   142e8:	add	r7, r7, #8
   142ec:	b	14288 <sav_compress_row+0x9c>
   142f0:	ldr	r3, [sp, #12]
   142f4:	mvn	fp, #1048576	; 0x100000
   142f8:	add	ip, r3, r6
   142fc:	ldr	r3, [sp, #16]
   14300:	ldr	r0, [ip]
   14304:	ldr	r1, [ip, #4]
   14308:	mvn	sl, #0
   1430c:	stmia	r3!, {r0, r1}
   14310:	ldrd	r2, [sp, #24]
   14314:	cmp	r3, fp
   14318:	cmpeq	r2, sl
   1431c:	bne	14398 <sav_compress_row+0x1ac>
   14320:	mvn	r3, #0
   14324:	strb	r3, [r8, r4]
   14328:	add	r4, r4, #1
   1432c:	ands	r3, r4, #7
   14330:	streq	r3, [r8, r7]
   14334:	addeq	r2, r8, r7
   14338:	moveq	r4, r7
   1433c:	add	r6, r6, #8
   14340:	addeq	r7, r7, #8
   14344:	streq	r3, [r2, #4]
   14348:	ldr	r3, [sp, #8]
   1434c:	ldr	r2, [sp, #4]
   14350:	ldr	r3, [r3, #28]
   14354:	add	r2, r2, #1
   14358:	cmp	r3, r2
   1435c:	str	r2, [sp, #4]
   14360:	bgt	1424c <sav_compress_row+0x60>
   14364:	mov	r0, r7
   14368:	ldr	r2, [sp, #8]
   1436c:	ldr	r3, [r2, #84]	; 0x54
   14370:	ldr	r2, [r2, #80]	; 0x50
   14374:	add	r3, r3, #1
   14378:	cmp	r3, r2
   1437c:	mvneq	r3, #3
   14380:	strbeq	r3, [r8, r4]
   14384:	add	sp, sp, #44	; 0x2c
   14388:	vpop	{d8-d9}
   1438c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14390:	str	sl, [sp, #12]
   14394:	b	14348 <sav_compress_row+0x15c>
   14398:	ldr	r3, [sp, #20]
   1439c:	stmia	r3!, {r0, r1}
   143a0:	vldr	d7, [sp, #32]
   143a4:	vcmpe.f64	d7, d8
   143a8:	vmrs	APSR_nzcv, fpscr
   143ac:	ble	143e4 <sav_compress_row+0x1f8>
   143b0:	vcmpe.f64	d7, d9
   143b4:	vmrs	APSR_nzcv, fpscr
   143b8:	bpl	143e4 <sav_compress_row+0x1f8>
   143bc:	vcvt.s32.f64	s13, d7
   143c0:	vcvt.f64.s32	d5, s13
   143c4:	vcmp.f64	d7, d5
   143c8:	vmrs	APSR_nzcv, fpscr
   143cc:	bne	143e4 <sav_compress_row+0x1f8>
   143d0:	vmov	r3, s13
   143d4:	add	r3, r3, #100	; 0x64
   143d8:	strb	r3, [r8, r4]
   143dc:	add	r4, r4, #1
   143e0:	b	1432c <sav_compress_row+0x140>
   143e4:	mvn	r3, #2
   143e8:	strb	r3, [r8, r4]
   143ec:	ldr	r3, [ip]
   143f0:	ldr	r2, [ip, #4]
   143f4:	str	r3, [r8, r7]
   143f8:	add	r3, r8, r7
   143fc:	add	r4, r4, #1
   14400:	str	r2, [r3, #4]
   14404:	add	r7, r7, #8
   14408:	b	1432c <sav_compress_row+0x140>
   1440c:	mov	r0, #8
   14410:	b	14368 <sav_compress_row+0x17c>
   14414:	nop			; (mov r0, r0)
   14418:	.word	0x00000000
   1441c:	.word	0xc0590000
   14420:	.word	0x00000000
   14424:	.word	0x40630000
   14428:	.word	0x00010a8c

0001442c <sav_decompress_row>:
   1442c:	ldr	r3, [r0, #44]	; 0x2c
   14430:	push	{r4, r5, r6, r7, r8, r9, lr}
   14434:	cmp	r3, #0
   14438:	mov	r4, r0
   1443c:	sub	sp, sp, #20
   14440:	ldrd	r0, [r0, #16]
   14444:	bne	145d4 <sav_decompress_row+0x1a8>
   14448:	ldr	r5, [r4, #40]	; 0x28
   1444c:	strd	r0, [sp, #8]
   14450:	rsb	r5, r5, #8
   14454:	cmp	r5, #8
   14458:	beq	14500 <sav_decompress_row+0xd4>
   1445c:	cmp	r5, #7
   14460:	bgt	14454 <sav_decompress_row+0x28>
   14464:	add	r6, r5, #31
   14468:	ldr	r7, [pc, #404]	; 14604 <sav_decompress_row+0x1d8>
   1446c:	add	r6, r4, r6
   14470:	mov	r9, sp
   14474:	add	r8, sp, #8
   14478:	ldrb	r3, [r6, #1]!
   1447c:	cmp	r3, #253	; 0xfd
   14480:	beq	14540 <sav_decompress_row+0x114>
   14484:	bhi	144b0 <sav_decompress_row+0x84>
   14488:	cmp	r3, #0
   1448c:	beq	145cc <sav_decompress_row+0x1a0>
   14490:	cmp	r3, #252	; 0xfc
   14494:	bne	145a0 <sav_decompress_row+0x174>
   14498:	rsb	r5, r5, #8
   1449c:	mov	r3, #3
   144a0:	str	r3, [r4, #48]	; 0x30
   144a4:	str	r5, [r4, #40]	; 0x28
   144a8:	add	sp, sp, #20
   144ac:	pop	{r4, r5, r6, r7, r8, r9, pc}
   144b0:	cmp	r3, #254	; 0xfe
   144b4:	beq	14590 <sav_decompress_row+0x164>
   144b8:	cmp	r3, #255	; 0xff
   144bc:	moveq	r3, r8
   144c0:	bne	145a0 <sav_decompress_row+0x174>
   144c4:	ldr	r2, [r4, #8]
   144c8:	ldm	r3!, {r0, r1}
   144cc:	str	r0, [r2]
   144d0:	str	r1, [r2, #4]
   144d4:	ldr	r2, [r4, #8]
   144d8:	ldr	r3, [r4, #12]
   144dc:	add	r2, r2, #8
   144e0:	sub	r3, r3, #8
   144e4:	str	r2, [r4, #8]
   144e8:	str	r3, [r4, #12]
   144ec:	cmp	r3, #7
   144f0:	add	r5, r5, #1
   144f4:	bls	145e4 <sav_decompress_row+0x1b8>
   144f8:	cmp	r5, #8
   144fc:	bne	14478 <sav_decompress_row+0x4c>
   14500:	ldr	r3, [r4, #4]
   14504:	cmp	r3, #7
   14508:	movls	r5, #0
   1450c:	strls	r5, [r4, #48]	; 0x30
   14510:	bls	144a4 <sav_decompress_row+0x78>
   14514:	mov	r2, r4
   14518:	sub	r3, r3, #8
   1451c:	ldr	r1, [r2], #32
   14520:	mov	r5, #0
   14524:	add	r0, r1, #8
   14528:	ldr	ip, [r1]
   1452c:	ldr	r1, [r1, #4]
   14530:	str	ip, [r4, #32]
   14534:	str	r1, [r2, #4]
   14538:	stm	r4, {r0, r3}
   1453c:	b	14464 <sav_decompress_row+0x38>
   14540:	ldr	r3, [r4, #4]
   14544:	cmp	r3, #7
   14548:	bls	145f4 <sav_decompress_row+0x1c8>
   1454c:	ldr	r2, [r4]
   14550:	ldr	r3, [r4, #8]
   14554:	ldr	r1, [r2]
   14558:	ldr	r2, [r2, #4]
   1455c:	str	r1, [r3]
   14560:	str	r2, [r3, #4]
   14564:	ldm	r4, {r1, r2}
   14568:	ldr	r0, [r4, #8]
   1456c:	ldr	r3, [r4, #12]
   14570:	add	r1, r1, #8
   14574:	sub	r2, r2, #8
   14578:	add	r0, r0, #8
   1457c:	sub	r3, r3, #8
   14580:	str	r0, [r4, #8]
   14584:	str	r3, [r4, #12]
   14588:	stm	r4, {r1, r2}
   1458c:	b	144ec <sav_decompress_row+0xc0>
   14590:	ldr	r3, [r4, #8]
   14594:	str	r7, [r3]
   14598:	str	r7, [r3, #4]
   1459c:	b	144d4 <sav_decompress_row+0xa8>
   145a0:	vmov	s15, r3
   145a4:	ldr	r3, [r4, #44]	; 0x2c
   145a8:	cmp	r3, #0
   145ac:	vcvt.f64.s32	d0, s15
   145b0:	vldr	d7, [r4, #24]
   145b4:	vsub.f64	d0, d0, d7
   145b8:	vstr	d0, [sp]
   145bc:	bne	145dc <sav_decompress_row+0x1b0>
   145c0:	mov	r3, r9
   145c4:	vstr	d0, [sp]
   145c8:	b	144c4 <sav_decompress_row+0x98>
   145cc:	ldr	r3, [r4, #12]
   145d0:	b	144ec <sav_decompress_row+0xc0>
   145d4:	bl	3d7c <byteswap8@plt>
   145d8:	b	14448 <sav_decompress_row+0x1c>
   145dc:	bl	4508 <byteswap_double@plt>
   145e0:	b	145c0 <sav_decompress_row+0x194>
   145e4:	mov	r3, #2
   145e8:	rsb	r5, r5, #8
   145ec:	str	r3, [r4, #48]	; 0x30
   145f0:	b	144a4 <sav_decompress_row+0x78>
   145f4:	mov	r3, #0
   145f8:	rsb	r5, r5, #8
   145fc:	str	r3, [r4, #48]	; 0x30
   14600:	b	144a4 <sav_decompress_row+0x78>
   14604:	.word	0x20202020

00014608 <compare_varlookups>:
   14608:	b	3e00 <strcmp@plt>

0001460c <count_vars.isra.0>:
   1460c:	push	{r4, r5, r6, r7, r8, lr}
   14610:	subs	r6, r1, #0
   14614:	ble	14660 <count_vars.isra.0+0x54>
   14618:	mov	r7, #0
   1461c:	mov	r5, r0
   14620:	add	r6, r0, r6, lsl #2
   14624:	mov	r3, r7
   14628:	cmp	r3, #0
   1462c:	add	r1, r3, #187	; 0xbb
   14630:	ldr	r4, [r5], #4
   14634:	beq	14648 <count_vars.isra.0+0x3c>
   14638:	add	r0, r4, #187	; 0xbb
   1463c:	bl	3e00 <strcmp@plt>
   14640:	cmp	r0, #0
   14644:	beq	1464c <count_vars.isra.0+0x40>
   14648:	add	r7, r7, #1
   1464c:	cmp	r5, r6
   14650:	mov	r3, r4
   14654:	bne	14628 <count_vars.isra.0+0x1c>
   14658:	mov	r0, r7
   1465c:	pop	{r4, r5, r6, r7, r8, pc}
   14660:	mov	r7, #0
   14664:	b	14658 <count_vars.isra.0+0x4c>

00014668 <build_lookup_table.isra.1>:
   14668:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1466c:	sub	sp, sp, #12
   14670:	mov	r9, r2
   14674:	str	r0, [sp, #4]
   14678:	add	r0, r0, r0, lsl #2
   1467c:	mov	sl, r1
   14680:	lsl	r0, r0, #3
   14684:	bl	422c <readstat_malloc@plt>
   14688:	ldr	r7, [r9]
   1468c:	cmp	r7, #0
   14690:	mov	r8, r0
   14694:	ble	14708 <build_lookup_table.isra.1+0xa0>
   14698:	mov	fp, #0
   1469c:	mov	r4, fp
   146a0:	mov	r5, fp
   146a4:	ldr	r2, [sl]
   146a8:	add	r1, r4, #187	; 0xbb
   146ac:	cmp	r4, #0
   146b0:	ldr	r4, [r2, r5, lsl #2]
   146b4:	add	r6, r4, #187	; 0xbb
   146b8:	beq	146cc <build_lookup_table.isra.1+0x64>
   146bc:	mov	r0, r6
   146c0:	bl	3e00 <strcmp@plt>
   146c4:	cmp	r0, #0
   146c8:	beq	146fc <build_lookup_table.isra.1+0x94>
   146cc:	add	r1, fp, fp, lsl #2
   146d0:	ldr	ip, [r6]
   146d4:	ldr	r0, [r6, #4]
   146d8:	add	r2, r8, r1, lsl #3
   146dc:	str	ip, [r8, r1, lsl #3]
   146e0:	str	r0, [r2, #4]
   146e4:	ldrb	r1, [r6, #8]
   146e8:	add	fp, fp, #1
   146ec:	strb	r1, [r2, #8]
   146f0:	ldr	r1, [r4, #8]
   146f4:	str	r1, [r2, #36]	; 0x24
   146f8:	ldr	r7, [r9]
   146fc:	add	r5, r5, #1
   14700:	cmp	r5, r7
   14704:	blt	146a4 <build_lookup_table.isra.1+0x3c>
   14708:	ldr	r3, [pc, #28]	; 1472c <build_lookup_table.isra.1+0xc4>
   1470c:	mov	r0, r8
   14710:	ldr	r1, [sp, #4]
   14714:	add	r3, pc, r3
   14718:	mov	r2, #40	; 0x28
   1471c:	bl	443c <qsort@plt>
   14720:	mov	r0, r8
   14724:	add	sp, sp, #12
   14728:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1472c:	.word	0xfffffeec

00014730 <sav_parse_long_variable_names_record>:
   14730:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14734:	sub	sp, sp, #8320	; 0x2080
   14738:	sub	sp, sp, #52	; 0x34
   1473c:	mov	sl, r0
   14740:	str	r0, [sp, #88]	; 0x58
   14744:	mov	r5, r1
   14748:	ldr	r0, [r2, #44]	; 0x2c
   1474c:	str	r1, [sp, #92]	; 0x5c
   14750:	ldr	r1, [r2, #340]	; 0x154
   14754:	mov	r4, r2
   14758:	str	r2, [sp, #76]	; 0x4c
   1475c:	bl	1460c <count_vars.isra.0>
   14760:	add	r3, sl, r5
   14764:	add	r2, r4, #340	; 0x154
   14768:	add	r1, r4, #44	; 0x2c
   1476c:	str	r3, [sp, #52]	; 0x34
   14770:	mov	r4, r3
   14774:	str	r0, [sp, #80]	; 0x50
   14778:	bl	14668 <build_lookup_table.isra.1>
   1477c:	cmp	sl, r4
   14780:	mov	fp, r0
   14784:	beq	14ccc <sav_parse_long_variable_names_record+0x59c>
   14788:	ldr	r3, [pc, #1440]	; 14d30 <sav_parse_long_variable_names_record+0x600>
   1478c:	mov	r4, #0
   14790:	add	r3, pc, r3
   14794:	mov	r2, r3
   14798:	str	r3, [sp, #64]	; 0x40
   1479c:	ldr	r3, [pc, #1424]	; 14d34 <sav_parse_long_variable_names_record+0x604>
   147a0:	add	r2, r2, #1200	; 0x4b0
   147a4:	ldr	r1, [pc, #1420]	; 14d38 <sav_parse_long_variable_names_record+0x608>
   147a8:	add	r3, pc, r3
   147ac:	add	r2, r2, #8
   147b0:	mov	r5, r4
   147b4:	mov	lr, r4
   147b8:	add	r1, pc, r1
   147bc:	str	r2, [sp, #68]	; 0x44
   147c0:	str	r3, [sp, #60]	; 0x3c
   147c4:	add	r2, r3, #12
   147c8:	mov	r3, #1
   147cc:	str	r1, [sp, #72]	; 0x48
   147d0:	str	r2, [sp, #56]	; 0x38
   147d4:	str	r4, [sp, #36]	; 0x24
   147d8:	str	r4, [sp, #24]
   147dc:	str	r3, [sp, #28]
   147e0:	ldr	r3, [sp, #56]	; 0x38
   147e4:	cmp	r4, #0
   147e8:	add	lr, r3, lr
   147ec:	mov	r3, r5
   147f0:	beq	14838 <sav_parse_long_variable_names_record+0x108>
   147f4:	sub	r1, r4, #1
   147f8:	adds	r1, lr, r1
   147fc:	bcs	14830 <sav_parse_long_variable_names_record+0x100>
   14800:	ldrb	ip, [sl]
   14804:	mov	r2, lr
   14808:	sub	r3, r1, r2
   1480c:	ldrb	r0, [r2, r3, asr #1]
   14810:	add	r3, r2, r3, asr #1
   14814:	cmp	r0, ip
   14818:	subhi	r1, r3, #1
   1481c:	bhi	14828 <sav_parse_long_variable_names_record+0xf8>
   14820:	bcs	14a94 <sav_parse_long_variable_names_record+0x364>
   14824:	add	r2, r3, #1
   14828:	cmp	r2, r1
   1482c:	bls	14808 <sav_parse_long_variable_names_record+0xd8>
   14830:	add	lr, lr, r4
   14834:	add	r3, r5, r4
   14838:	ldr	r2, [sp, #72]	; 0x48
   1483c:	ldr	r1, [sp, #28]
   14840:	add	r2, r2, r1
   14844:	ldrb	r5, [r2, #508]	; 0x1fc
   14848:	cmp	r5, #0
   1484c:	beq	148a4 <sav_parse_long_variable_names_record+0x174>
   14850:	add	r0, lr, r5, lsl #1
   14854:	sub	r0, r0, #2
   14858:	cmp	lr, r0
   1485c:	bhi	148a0 <sav_parse_long_variable_names_record+0x170>
   14860:	ldrb	r4, [sl]
   14864:	mov	r1, lr
   14868:	sub	r2, r0, r1
   1486c:	asr	r2, r2, #1
   14870:	bic	r2, r2, #1
   14874:	add	ip, r1, r2
   14878:	ldrb	r2, [r1, r2]
   1487c:	cmp	r2, r4
   14880:	subhi	r0, ip, #2
   14884:	bhi	14898 <sav_parse_long_variable_names_record+0x168>
   14888:	ldrb	r2, [ip, #1]
   1488c:	add	r1, ip, #2
   14890:	cmp	r2, r4
   14894:	bcs	14aa0 <sav_parse_long_variable_names_record+0x370>
   14898:	cmp	r1, r0
   1489c:	bls	14868 <sav_parse_long_variable_names_record+0x138>
   148a0:	add	r3, r3, r5
   148a4:	ldr	r2, [sp, #60]	; 0x3c
   148a8:	add	r3, r2, r3
   148ac:	ldrb	r3, [r3, #584]	; 0x248
   148b0:	add	r3, r2, r3
   148b4:	ldrb	r7, [r3, #1056]	; 0x420
   148b8:	ldrb	r3, [r3, #980]	; 0x3d4
   148bc:	cmp	r7, #0
   148c0:	str	r3, [sp, #28]
   148c4:	beq	14954 <sav_parse_long_variable_names_record+0x224>
   148c8:	add	r3, sp, #112	; 0x70
   148cc:	str	r3, [sp, #44]	; 0x2c
   148d0:	add	r3, sp, #108	; 0x6c
   148d4:	ldrb	r9, [r2, r7]
   148d8:	str	r3, [sp, #48]	; 0x30
   148dc:	add	r3, sp, #176	; 0xb0
   148e0:	str	r3, [sp, #40]	; 0x28
   148e4:	ldr	r3, [pc, #1104]	; 14d3c <sav_parse_long_variable_names_record+0x60c>
   148e8:	add	r7, r2, r7
   148ec:	add	r8, sp, #96	; 0x60
   148f0:	add	r2, r7, r9
   148f4:	add	r3, pc, r3
   148f8:	str	r2, [sp, #20]
   148fc:	str	r3, [sp, #84]	; 0x54
   14900:	str	sl, [sp, #32]
   14904:	ldr	r3, [sp, #20]
   14908:	cmp	r3, r7
   1490c:	beq	14950 <sav_parse_long_variable_names_record+0x220>
   14910:	ldrb	r3, [r7, #1]!
   14914:	cmp	r3, #6
   14918:	addls	pc, pc, r3, lsl #2
   1491c:	b	14904 <sav_parse_long_variable_names_record+0x1d4>
   14920:	b	14a00 <sav_parse_long_variable_names_record+0x2d0>
   14924:	b	149d4 <sav_parse_long_variable_names_record+0x2a4>
   14928:	b	149ac <sav_parse_long_variable_names_record+0x27c>
   1492c:	b	1493c <sav_parse_long_variable_names_record+0x20c>
   14930:	b	14998 <sav_parse_long_variable_names_record+0x268>
   14934:	b	1493c <sav_parse_long_variable_names_record+0x20c>
   14938:	b	14998 <sav_parse_long_variable_names_record+0x268>
   1493c:	ldr	r3, [sp, #32]
   14940:	str	r3, [sp, #24]
   14944:	ldr	r3, [sp, #20]
   14948:	cmp	r3, r7
   1494c:	bne	14910 <sav_parse_long_variable_names_record+0x1e0>
   14950:	ldr	sl, [sp, #32]
   14954:	ldr	r3, [sp, #28]
   14958:	cmp	r3, #0
   1495c:	beq	14ac0 <sav_parse_long_variable_names_record+0x390>
   14960:	ldr	r3, [sp, #52]	; 0x34
   14964:	add	sl, sl, #1
   14968:	cmp	r3, sl
   1496c:	beq	14b40 <sav_parse_long_variable_names_record+0x410>
   14970:	ldr	r1, [sp, #28]
   14974:	ldr	r0, [sp, #64]	; 0x40
   14978:	lsl	r3, r1, #1
   1497c:	add	r2, r0, #1360	; 0x550
   14980:	add	r1, r0, r1
   14984:	ldr	r0, [sp, #68]	; 0x44
   14988:	ldrsh	r5, [r2, r3]
   1498c:	ldrb	r4, [r1, #1512]	; 0x5e8
   14990:	ldrsh	lr, [r0, r3]
   14994:	b	147e0 <sav_parse_long_variable_names_record+0xb0>
   14998:	ldr	r3, [sp, #32]
   1499c:	ldr	r2, [sp, #24]
   149a0:	sub	r3, r3, r2
   149a4:	str	r3, [sp, #36]	; 0x24
   149a8:	b	14904 <sav_parse_long_variable_names_record+0x1d4>
   149ac:	ldr	r4, [sp, #36]	; 0x24
   149b0:	ldr	r1, [sp, #24]
   149b4:	mov	r2, r4
   149b8:	ldr	r0, [sp, #48]	; 0x30
   149bc:	bl	3f20 <memcpy@plt>
   149c0:	ldr	r2, [sp, #40]	; 0x28
   149c4:	add	r3, r2, r4
   149c8:	mov	r2, #0
   149cc:	strb	r2, [r3, #-68]	; 0xffffffbc
   149d0:	b	14904 <sav_parse_long_variable_names_record+0x1d4>
   149d4:	ldr	r4, [sp, #36]	; 0x24
   149d8:	ldr	r3, [sp, #44]	; 0x2c
   149dc:	mov	r2, r4
   149e0:	sub	r0, r3, #16
   149e4:	ldr	r1, [sp, #24]
   149e8:	bl	3f20 <memcpy@plt>
   149ec:	ldr	r2, [sp, #40]	; 0x28
   149f0:	add	r3, r2, r4
   149f4:	mov	r2, #0
   149f8:	strb	r2, [r3, #-80]	; 0xffffffb0
   149fc:	b	14904 <sav_parse_long_variable_names_record+0x1d4>
   14a00:	ldr	r6, [sp, #80]	; 0x50
   14a04:	mov	sl, #0
   14a08:	cmp	r6, sl
   14a0c:	bhi	14a20 <sav_parse_long_variable_names_record+0x2f0>
   14a10:	b	14a54 <sav_parse_long_variable_names_record+0x324>
   14a14:	cmp	sl, r4
   14a18:	mov	r6, r4
   14a1c:	bcs	14a54 <sav_parse_long_variable_names_record+0x324>
   14a20:	add	r4, sl, r6
   14a24:	mov	r0, r8
   14a28:	lsr	r4, r4, #1
   14a2c:	add	r5, r4, r4, lsl #2
   14a30:	add	r5, fp, r5, lsl #3
   14a34:	mov	r1, r5
   14a38:	bl	3e00 <strcmp@plt>
   14a3c:	cmp	r0, #0
   14a40:	blt	14a14 <sav_parse_long_variable_names_record+0x2e4>
   14a44:	beq	14c4c <sav_parse_long_variable_names_record+0x51c>
   14a48:	add	sl, r4, #1
   14a4c:	cmp	r6, sl
   14a50:	bhi	14a20 <sav_parse_long_variable_names_record+0x2f0>
   14a54:	ldr	r4, [sp, #76]	; 0x4c
   14a58:	ldr	r3, [r4, #24]
   14a5c:	cmp	r3, #0
   14a60:	beq	14904 <sav_parse_long_variable_names_record+0x1d4>
   14a64:	ldr	r5, [sp, #40]	; 0x28
   14a68:	ldr	r3, [sp, #44]	; 0x2c
   14a6c:	ldr	r2, [sp, #84]	; 0x54
   14a70:	sub	r3, r3, #16
   14a74:	mov	r1, #8192	; 0x2000
   14a78:	mov	r0, r5
   14a7c:	bl	4280 <snprintf@plt>
   14a80:	ldr	r3, [r4, #24]
   14a84:	ldr	r1, [r4, #40]	; 0x28
   14a88:	mov	r0, r5
   14a8c:	blx	r3
   14a90:	b	14904 <sav_parse_long_variable_names_record+0x1d4>
   14a94:	sub	r3, r3, lr
   14a98:	add	r3, r5, r3
   14a9c:	b	148a4 <sav_parse_long_variable_names_record+0x174>
   14aa0:	sub	ip, ip, lr
   14aa4:	add	r3, r3, ip, asr #1
   14aa8:	b	148a4 <sav_parse_long_variable_names_record+0x174>
   14aac:	ldr	r3, [sp, #20]
   14ab0:	cmp	r3, #0
   14ab4:	ldreq	r4, [sp, #20]
   14ab8:	beq	14b20 <sav_parse_long_variable_names_record+0x3f0>
   14abc:	ldr	sl, [sp, #52]	; 0x34
   14ac0:	ldr	r5, [sp, #76]	; 0x4c
   14ac4:	ldr	r3, [r5, #24]
   14ac8:	cmp	r3, #0
   14acc:	moveq	r4, #5
   14ad0:	beq	14b20 <sav_parse_long_variable_names_record+0x3f0>
   14ad4:	ldrb	r2, [sl]
   14ad8:	ldr	r1, [sp, #88]	; 0x58
   14adc:	ldr	r0, [sp, #92]	; 0x5c
   14ae0:	sub	r3, sl, r1
   14ae4:	str	r2, [sp, #12]
   14ae8:	ldr	r2, [pc, #592]	; 14d40 <sav_parse_long_variable_names_record+0x610>
   14aec:	add	r4, sp, #176	; 0xb0
   14af0:	stm	sp, {r1, r3}
   14af4:	str	r0, [sp, #8]
   14af8:	mov	r3, r0
   14afc:	add	r2, pc, r2
   14b00:	mov	r0, r4
   14b04:	mov	r1, #8192	; 0x2000
   14b08:	bl	4280 <snprintf@plt>
   14b0c:	mov	r0, r4
   14b10:	ldr	r3, [r5, #24]
   14b14:	ldr	r1, [r5, #40]	; 0x28
   14b18:	blx	r3
   14b1c:	mov	r4, #5
   14b20:	cmp	fp, #0
   14b24:	beq	14b30 <sav_parse_long_variable_names_record+0x400>
   14b28:	mov	r0, fp
   14b2c:	bl	3ec0 <free@plt>
   14b30:	mov	r0, r4
   14b34:	add	sp, sp, #8320	; 0x2080
   14b38:	add	sp, sp, #52	; 0x34
   14b3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14b40:	ldr	r2, [pc, #508]	; 14d44 <sav_parse_long_variable_names_record+0x614>
   14b44:	ldr	r3, [sp, #28]
   14b48:	add	r2, pc, r2
   14b4c:	cmp	r3, #10
   14b50:	add	r3, r2, r3
   14b54:	movgt	r1, #0
   14b58:	ldrb	r3, [r3, #1132]	; 0x46c
   14b5c:	movle	r1, #1
   14b60:	str	r1, [sp, #20]
   14b64:	add	r1, r2, r3
   14b68:	ldrb	r3, [r2, r3]
   14b6c:	add	sl, r1, r3
   14b70:	add	r3, sp, #108	; 0x6c
   14b74:	add	r2, sp, #112	; 0x70
   14b78:	str	r3, [sp, #40]	; 0x28
   14b7c:	add	r3, sp, #176	; 0xb0
   14b80:	str	r2, [sp, #28]
   14b84:	str	r3, [sp, #32]
   14b88:	ldr	r2, [sp, #24]
   14b8c:	ldr	r3, [sp, #52]	; 0x34
   14b90:	add	r7, sp, #96	; 0x60
   14b94:	sub	r3, r3, r2
   14b98:	str	r3, [sp, #44]	; 0x2c
   14b9c:	ldr	r3, [pc, #420]	; 14d48 <sav_parse_long_variable_names_record+0x618>
   14ba0:	mov	r6, r1
   14ba4:	add	r3, pc, r3
   14ba8:	str	r3, [sp, #48]	; 0x30
   14bac:	cmp	r6, sl
   14bb0:	beq	14aac <sav_parse_long_variable_names_record+0x37c>
   14bb4:	ldrb	r9, [r6, #1]!
   14bb8:	cmp	r9, #2
   14bbc:	beq	14c98 <sav_parse_long_variable_names_record+0x568>
   14bc0:	cmp	r9, #6
   14bc4:	beq	14c8c <sav_parse_long_variable_names_record+0x55c>
   14bc8:	cmp	r9, #0
   14bcc:	ldreq	r8, [sp, #80]	; 0x50
   14bd0:	bne	14bac <sav_parse_long_variable_names_record+0x47c>
   14bd4:	cmp	r9, r8
   14bd8:	bcs	14c0c <sav_parse_long_variable_names_record+0x4dc>
   14bdc:	add	r4, r8, r9
   14be0:	mov	r0, r7
   14be4:	lsr	r4, r4, #1
   14be8:	add	r5, r4, r4, lsl #2
   14bec:	add	r5, fp, r5, lsl #3
   14bf0:	mov	r1, r5
   14bf4:	bl	3e00 <strcmp@plt>
   14bf8:	cmp	r0, #0
   14bfc:	movlt	r8, r4
   14c00:	bge	14cc0 <sav_parse_long_variable_names_record+0x590>
   14c04:	cmp	r9, r8
   14c08:	bcc	14bdc <sav_parse_long_variable_names_record+0x4ac>
   14c0c:	ldr	r4, [sp, #76]	; 0x4c
   14c10:	ldr	r3, [r4, #24]
   14c14:	cmp	r3, #0
   14c18:	beq	14bac <sav_parse_long_variable_names_record+0x47c>
   14c1c:	ldr	r5, [sp, #32]
   14c20:	ldr	r3, [sp, #28]
   14c24:	ldr	r2, [sp, #48]	; 0x30
   14c28:	sub	r3, r3, #16
   14c2c:	mov	r1, #8192	; 0x2000
   14c30:	mov	r0, r5
   14c34:	bl	4280 <snprintf@plt>
   14c38:	ldr	r3, [r4, #24]
   14c3c:	ldr	r1, [r4, #40]	; 0x28
   14c40:	mov	r0, r5
   14c44:	blx	r3
   14c48:	b	14bac <sav_parse_long_variable_names_record+0x47c>
   14c4c:	cmp	r5, #0
   14c50:	mov	r9, r0
   14c54:	beq	14a54 <sav_parse_long_variable_names_record+0x324>
   14c58:	ldr	r3, [sp, #76]	; 0x4c
   14c5c:	ldr	ip, [r5, #36]	; 0x24
   14c60:	ldr	r5, [sp, #36]	; 0x24
   14c64:	ldr	r0, [r3, #44]	; 0x2c
   14c68:	ldr	r3, [sp, #44]	; 0x2c
   14c6c:	mov	r2, r5
   14c70:	ldr	r4, [r0, ip, lsl #2]
   14c74:	sub	r1, r3, #4
   14c78:	add	r0, r4, #196	; 0xc4
   14c7c:	add	r4, r4, r5
   14c80:	bl	3f20 <memcpy@plt>
   14c84:	strb	r9, [r4, #196]	; 0xc4
   14c88:	b	14904 <sav_parse_long_variable_names_record+0x1d4>
   14c8c:	ldr	r3, [sp, #44]	; 0x2c
   14c90:	str	r3, [sp, #36]	; 0x24
   14c94:	b	14bac <sav_parse_long_variable_names_record+0x47c>
   14c98:	ldr	r4, [sp, #36]	; 0x24
   14c9c:	ldr	r1, [sp, #24]
   14ca0:	mov	r2, r4
   14ca4:	ldr	r0, [sp, #40]	; 0x28
   14ca8:	bl	3f20 <memcpy@plt>
   14cac:	ldr	r2, [sp, #32]
   14cb0:	add	r3, r2, r4
   14cb4:	mov	r2, #0
   14cb8:	strb	r2, [r3, #-68]	; 0xffffffbc
   14cbc:	b	14bac <sav_parse_long_variable_names_record+0x47c>
   14cc0:	beq	14cec <sav_parse_long_variable_names_record+0x5bc>
   14cc4:	add	r9, r4, #1
   14cc8:	b	14c04 <sav_parse_long_variable_names_record+0x4d4>
   14ccc:	ldr	r1, [pc, #120]	; 14d4c <sav_parse_long_variable_names_record+0x61c>
   14cd0:	mov	r3, #0
   14cd4:	mov	r2, #1
   14cd8:	add	r1, pc, r1
   14cdc:	str	r3, [sp, #36]	; 0x24
   14ce0:	str	r3, [sp, #24]
   14ce4:	str	r2, [sp, #20]
   14ce8:	b	14b6c <sav_parse_long_variable_names_record+0x43c>
   14cec:	cmp	r5, #0
   14cf0:	str	r0, [sp, #56]	; 0x38
   14cf4:	beq	14c0c <sav_parse_long_variable_names_record+0x4dc>
   14cf8:	ldr	r3, [sp, #76]	; 0x4c
   14cfc:	ldr	ip, [r5, #36]	; 0x24
   14d00:	ldr	r5, [sp, #36]	; 0x24
   14d04:	ldr	r0, [r3, #44]	; 0x2c
   14d08:	ldr	r3, [sp, #28]
   14d0c:	mov	r2, r5
   14d10:	ldr	r4, [r0, ip, lsl #2]
   14d14:	sub	r1, r3, #4
   14d18:	add	r0, r4, #196	; 0xc4
   14d1c:	bl	3f20 <memcpy@plt>
   14d20:	add	r4, r4, r5
   14d24:	ldr	r3, [sp, #56]	; 0x38
   14d28:	strb	r3, [r4, #196]	; 0xc4
   14d2c:	b	14bac <sav_parse_long_variable_names_record+0x47c>
   14d30:	.word	0x0001052c
   14d34:	.word	0x00010514
   14d38:	.word	0x00010504
   14d3c:	.word	0x00010b38
   14d40:	.word	0x00010944
   14d44:	.word	0x00010174
   14d48:	.word	0x00010888
   14d4c:	.word	0x0000ffe4

00014d50 <sav_parse_very_long_string_record>:
   14d50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14d54:	sub	sp, sp, #132	; 0x84
   14d58:	mov	r6, r1
   14d5c:	add	r3, r6, #1024	; 0x400
   14d60:	mov	r5, r0
   14d64:	str	r1, [sp, #84]	; 0x54
   14d68:	str	r0, [sp, #76]	; 0x4c
   14d6c:	ldr	r1, [r2, #340]	; 0x154
   14d70:	ldr	r0, [r2, #44]	; 0x2c
   14d74:	mov	r4, r2
   14d78:	mov	r7, r3
   14d7c:	str	r2, [sp, #44]	; 0x2c
   14d80:	str	r3, [sp, #80]	; 0x50
   14d84:	bl	1460c <count_vars.isra.0>
   14d88:	mov	r8, r0
   14d8c:	str	r0, [sp, #40]	; 0x28
   14d90:	mov	r0, r7
   14d94:	bl	422c <readstat_malloc@plt>
   14d98:	add	r3, r5, r6
   14d9c:	add	r2, r4, #340	; 0x154
   14da0:	add	r1, r4, #44	; 0x2c
   14da4:	str	r3, [sp, #48]	; 0x30
   14da8:	mov	r4, r5
   14dac:	mov	r5, r3
   14db0:	str	r0, [sp, #72]	; 0x48
   14db4:	mov	r0, r8
   14db8:	bl	14668 <build_lookup_table.isra.1>
   14dbc:	cmp	r4, r5
   14dc0:	mov	r8, r0
   14dc4:	beq	150b0 <sav_parse_very_long_string_record+0x360>
   14dc8:	ldr	r0, [pc, #960]	; 15190 <sav_parse_very_long_string_record+0x440>
   14dcc:	ldr	r3, [pc, #960]	; 15194 <sav_parse_very_long_string_record+0x444>
   14dd0:	add	r0, pc, r0
   14dd4:	add	r3, pc, r3
   14dd8:	mov	r1, r4
   14ddc:	str	r0, [sp, #64]	; 0x40
   14de0:	mov	r4, #0
   14de4:	ldr	r0, [pc, #940]	; 15198 <sav_parse_very_long_string_record+0x448>
   14de8:	add	r2, r3, #1584	; 0x630
   14dec:	str	r3, [sp, #56]	; 0x38
   14df0:	mov	r5, r4
   14df4:	add	r3, r3, #1840	; 0x730
   14df8:	mov	lr, r4
   14dfc:	add	r0, pc, r0
   14e00:	add	r2, r2, #4
   14e04:	str	r3, [sp, #68]	; 0x44
   14e08:	mov	r3, #1
   14e0c:	str	r0, [sp, #60]	; 0x3c
   14e10:	str	r2, [sp, #52]	; 0x34
   14e14:	str	r4, [sp, #32]
   14e18:	str	r4, [sp, #24]
   14e1c:	str	r4, [sp, #28]
   14e20:	str	r1, [sp, #20]
   14e24:	str	r3, [sp, #36]	; 0x24
   14e28:	ldr	r3, [sp, #52]	; 0x34
   14e2c:	cmp	r4, #0
   14e30:	add	lr, r3, lr
   14e34:	mov	r1, r5
   14e38:	beq	14e84 <sav_parse_very_long_string_record+0x134>
   14e3c:	sub	r1, r4, #1
   14e40:	adds	r1, lr, r1
   14e44:	bcs	14e7c <sav_parse_very_long_string_record+0x12c>
   14e48:	ldr	r3, [sp, #20]
   14e4c:	mov	r2, lr
   14e50:	ldrb	ip, [r3]
   14e54:	sub	r3, r1, r2
   14e58:	ldrb	r0, [r2, r3, asr #1]
   14e5c:	add	r3, r2, r3, asr #1
   14e60:	cmp	r0, ip
   14e64:	subhi	r1, r3, #1
   14e68:	bhi	14e74 <sav_parse_very_long_string_record+0x124>
   14e6c:	bcs	15074 <sav_parse_very_long_string_record+0x324>
   14e70:	add	r2, r3, #1
   14e74:	cmp	r1, r2
   14e78:	bcs	14e54 <sav_parse_very_long_string_record+0x104>
   14e7c:	add	lr, lr, r4
   14e80:	add	r1, r5, r4
   14e84:	ldr	r3, [sp, #64]	; 0x40
   14e88:	ldr	r2, [sp, #36]	; 0x24
   14e8c:	add	r3, r3, r2
   14e90:	ldrb	r5, [r3, #1708]	; 0x6ac
   14e94:	cmp	r5, #0
   14e98:	beq	14ef4 <sav_parse_very_long_string_record+0x1a4>
   14e9c:	add	r0, lr, r5, lsl #1
   14ea0:	sub	r0, r0, #2
   14ea4:	cmp	lr, r0
   14ea8:	bhi	14ef0 <sav_parse_very_long_string_record+0x1a0>
   14eac:	ldr	r3, [sp, #20]
   14eb0:	mov	r2, lr
   14eb4:	ldrb	r4, [r3]
   14eb8:	sub	r3, r0, r2
   14ebc:	asr	r3, r3, #1
   14ec0:	bic	r3, r3, #1
   14ec4:	add	ip, r2, r3
   14ec8:	ldrb	r3, [r2, r3]
   14ecc:	cmp	r3, r4
   14ed0:	subhi	r0, ip, #2
   14ed4:	bhi	14ee8 <sav_parse_very_long_string_record+0x198>
   14ed8:	ldrb	r3, [ip, #1]
   14edc:	add	r2, ip, #2
   14ee0:	cmp	r3, r4
   14ee4:	bcs	15080 <sav_parse_very_long_string_record+0x330>
   14ee8:	cmp	r0, r2
   14eec:	bcs	14eb8 <sav_parse_very_long_string_record+0x168>
   14ef0:	add	r1, r1, r5
   14ef4:	ldr	r2, [sp, #56]	; 0x38
   14ef8:	add	r1, r2, r1
   14efc:	ldrb	r3, [r1, #1724]	; 0x6bc
   14f00:	add	r3, r2, r3
   14f04:	ldrb	r6, [r3, #1824]	; 0x720
   14f08:	ldrb	r3, [r3, #1808]	; 0x710
   14f0c:	cmp	r6, #0
   14f10:	str	r3, [sp, #36]	; 0x24
   14f14:	beq	14f6c <sav_parse_very_long_string_record+0x21c>
   14f18:	ldr	r3, [sp, #68]	; 0x44
   14f1c:	add	r7, sp, #92	; 0x5c
   14f20:	ldrb	r9, [r3, r6]
   14f24:	add	r6, r3, r6
   14f28:	add	r9, r6, r9
   14f2c:	cmp	r6, r9
   14f30:	beq	14f6c <sav_parse_very_long_string_record+0x21c>
   14f34:	ldrb	r3, [r6, #1]!
   14f38:	cmp	r3, #5
   14f3c:	addls	pc, pc, r3, lsl #2
   14f40:	b	14f2c <sav_parse_very_long_string_record+0x1dc>
   14f44:	b	15010 <sav_parse_very_long_string_record+0x2c0>
   14f48:	b	14fe8 <sav_parse_very_long_string_record+0x298>
   14f4c:	b	14fa8 <sav_parse_very_long_string_record+0x258>
   14f50:	b	14f5c <sav_parse_very_long_string_record+0x20c>
   14f54:	b	15060 <sav_parse_very_long_string_record+0x310>
   14f58:	b	15054 <sav_parse_very_long_string_record+0x304>
   14f5c:	ldr	r3, [sp, #20]
   14f60:	cmp	r6, r9
   14f64:	str	r3, [sp, #24]
   14f68:	bne	14f34 <sav_parse_very_long_string_record+0x1e4>
   14f6c:	ldr	r2, [sp, #36]	; 0x24
   14f70:	cmp	r2, #0
   14f74:	beq	150b8 <sav_parse_very_long_string_record+0x368>
   14f78:	ldr	r3, [sp, #20]
   14f7c:	ldr	r1, [sp, #48]	; 0x30
   14f80:	add	r3, r3, #1
   14f84:	cmp	r1, r3
   14f88:	str	r3, [sp, #20]
   14f8c:	beq	15184 <sav_parse_very_long_string_record+0x434>
   14f90:	ldr	r1, [sp, #60]	; 0x3c
   14f94:	add	r3, r1, r2
   14f98:	ldrb	lr, [r3, #1856]	; 0x740
   14f9c:	ldrb	r5, [r3, #1872]	; 0x750
   14fa0:	ldrb	r4, [r3, #1888]	; 0x760
   14fa4:	b	14e28 <sav_parse_very_long_string_record+0xd8>
   14fa8:	ldr	r3, [sp, #20]
   14fac:	ldrb	r3, [r3]
   14fb0:	cmp	r3, #0
   14fb4:	beq	14f2c <sav_parse_very_long_string_record+0x1dc>
   14fb8:	sub	r3, r3, #48	; 0x30
   14fbc:	ldr	r1, [pc, #472]	; 1519c <sav_parse_very_long_string_record+0x44c>
   14fc0:	uxtb	r3, r3
   14fc4:	mvn	r2, r3
   14fc8:	umull	r1, r2, r1, r2
   14fcc:	ldr	r1, [sp, #28]
   14fd0:	cmp	r1, r2, lsr #3
   14fd4:	bhi	15150 <sav_parse_very_long_string_record+0x400>
   14fd8:	add	r2, r1, r1, lsl #2
   14fdc:	add	r3, r3, r2, lsl #1
   14fe0:	str	r3, [sp, #28]
   14fe4:	b	14f2c <sav_parse_very_long_string_record+0x1dc>
   14fe8:	ldr	r4, [sp, #32]
   14fec:	ldr	r1, [sp, #24]
   14ff0:	mov	r2, r4
   14ff4:	mov	r0, r7
   14ff8:	bl	3f20 <memcpy@plt>
   14ffc:	add	r2, sp, #128	; 0x80
   15000:	add	r3, r2, r4
   15004:	mov	r2, #0
   15008:	strb	r2, [r3, #-36]	; 0xffffffdc
   1500c:	b	14f2c <sav_parse_very_long_string_record+0x1dc>
   15010:	ldr	sl, [sp, #40]	; 0x28
   15014:	mov	fp, #0
   15018:	cmp	fp, sl
   1501c:	bcs	14f2c <sav_parse_very_long_string_record+0x1dc>
   15020:	add	r4, fp, sl
   15024:	mov	r0, r7
   15028:	lsr	r4, r4, #1
   1502c:	add	r5, r4, r4, lsl #2
   15030:	add	r5, r8, r5, lsl #3
   15034:	mov	r1, r5
   15038:	bl	3e00 <strcmp@plt>
   1503c:	cmp	r0, #0
   15040:	movlt	sl, r4
   15044:	blt	15018 <sav_parse_very_long_string_record+0x2c8>
   15048:	beq	1508c <sav_parse_very_long_string_record+0x33c>
   1504c:	add	fp, r4, #1
   15050:	b	15018 <sav_parse_very_long_string_record+0x2c8>
   15054:	mov	r3, #0
   15058:	str	r3, [sp, #28]
   1505c:	b	14f2c <sav_parse_very_long_string_record+0x1dc>
   15060:	ldr	r3, [sp, #20]
   15064:	ldr	r2, [sp, #24]
   15068:	sub	r3, r3, r2
   1506c:	str	r3, [sp, #32]
   15070:	b	14f2c <sav_parse_very_long_string_record+0x1dc>
   15074:	sub	r3, r3, lr
   15078:	add	r1, r5, r3
   1507c:	b	14ef4 <sav_parse_very_long_string_record+0x1a4>
   15080:	sub	ip, ip, lr
   15084:	add	r1, r1, ip, asr #1
   15088:	b	14ef4 <sav_parse_very_long_string_record+0x1a4>
   1508c:	cmp	r5, #0
   15090:	beq	14f2c <sav_parse_very_long_string_record+0x1dc>
   15094:	ldr	r3, [sp, #44]	; 0x2c
   15098:	ldr	r2, [r5, #36]	; 0x24
   1509c:	ldr	r3, [r3, #44]	; 0x2c
   150a0:	ldr	r3, [r3, r2, lsl #2]
   150a4:	ldr	r2, [sp, #28]
   150a8:	str	r2, [r3, #20]
   150ac:	b	14f2c <sav_parse_very_long_string_record+0x1dc>
   150b0:	ldr	r3, [sp, #76]	; 0x4c
   150b4:	str	r3, [sp, #20]
   150b8:	ldr	r4, [sp, #44]	; 0x2c
   150bc:	ldr	r3, [r4, #24]
   150c0:	cmp	r3, #0
   150c4:	moveq	r4, #5
   150c8:	beq	15120 <sav_parse_very_long_string_record+0x3d0>
   150cc:	ldr	r2, [sp, #20]
   150d0:	ldr	r1, [sp, #48]	; 0x30
   150d4:	str	r2, [sp, #8]
   150d8:	sub	r3, r1, r2
   150dc:	str	r3, [sp, #4]
   150e0:	mov	r3, r2
   150e4:	ldr	r2, [sp, #84]	; 0x54
   150e8:	ldr	r5, [sp, #72]	; 0x48
   150ec:	str	r2, [sp]
   150f0:	ldr	r2, [sp, #76]	; 0x4c
   150f4:	ldr	r1, [sp, #80]	; 0x50
   150f8:	sub	r3, r3, r2
   150fc:	ldr	r2, [pc, #156]	; 151a0 <sav_parse_very_long_string_record+0x450>
   15100:	mov	r0, r5
   15104:	add	r2, pc, r2
   15108:	bl	4280 <snprintf@plt>
   1510c:	ldr	r3, [r4, #24]
   15110:	ldr	r1, [r4, #40]	; 0x28
   15114:	mov	r0, r5
   15118:	blx	r3
   1511c:	mov	r4, #5
   15120:	cmp	r8, #0
   15124:	beq	15130 <sav_parse_very_long_string_record+0x3e0>
   15128:	mov	r0, r8
   1512c:	bl	3ec0 <free@plt>
   15130:	ldr	r3, [sp, #72]	; 0x48
   15134:	cmp	r3, #0
   15138:	beq	15144 <sav_parse_very_long_string_record+0x3f4>
   1513c:	mov	r0, r3
   15140:	bl	3ec0 <free@plt>
   15144:	mov	r0, r4
   15148:	add	sp, sp, #132	; 0x84
   1514c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15150:	ldr	r3, [sp, #20]
   15154:	add	r3, r3, #1
   15158:	str	r3, [sp, #20]
   1515c:	ldr	r3, [sp, #20]
   15160:	ldr	r2, [sp, #48]	; 0x30
   15164:	subs	r4, r3, r2
   15168:	ldr	r3, [sp, #36]	; 0x24
   1516c:	movne	r4, #1
   15170:	cmp	r3, #11
   15174:	orrle	r4, r4, #1
   15178:	cmp	r4, #0
   1517c:	beq	15120 <sav_parse_very_long_string_record+0x3d0>
   15180:	b	150b8 <sav_parse_very_long_string_record+0x368>
   15184:	ldr	r3, [sp, #48]	; 0x30
   15188:	str	r3, [sp, #20]
   1518c:	b	1515c <sav_parse_very_long_string_record+0x40c>
   15190:	.word	0x0000feec
   15194:	.word	0x0000fee8
   15198:	.word	0x0000fec0
   1519c:	.word	0xcccccccd
   151a0:	.word	0x0001037c

000151a4 <sav_parse_time>:
   151a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   151a8:	sub	sp, sp, #8192	; 0x2000
   151ac:	sub	sp, sp, #36	; 0x24
   151b0:	add	sl, r0, r1
   151b4:	cmp	r0, sl
   151b8:	str	r0, [sp, #24]
   151bc:	str	r1, [sp, #28]
   151c0:	str	r3, [sp, #20]
   151c4:	beq	15438 <sav_parse_time+0x294>
   151c8:	ldr	r3, [pc, #640]	; 15450 <sav_parse_time+0x2ac>
   151cc:	ldr	fp, [pc, #640]	; 15454 <sav_parse_time+0x2b0>
   151d0:	add	r3, pc, r3
   151d4:	str	r3, [sp, #16]
   151d8:	ldr	r3, [pc, #632]	; 15458 <sav_parse_time+0x2b4>
   151dc:	mov	r9, #0
   151e0:	mov	r8, #1
   151e4:	add	r3, pc, r3
   151e8:	add	fp, pc, fp
   151ec:	mov	r7, r8
   151f0:	mov	r4, r9
   151f4:	mov	r6, r0
   151f8:	mov	r5, r9
   151fc:	str	r3, [sp, #12]
   15200:	add	r3, fp, #16
   15204:	str	r3, [sp, #8]
   15208:	ldr	r3, [sp, #8]
   1520c:	cmp	r8, #0
   15210:	add	r5, r3, r5
   15214:	mov	r3, r9
   15218:	beq	15260 <sav_parse_time+0xbc>
   1521c:	sub	r0, r8, #1
   15220:	adds	r0, r5, r0
   15224:	bcs	15258 <sav_parse_time+0xb4>
   15228:	ldrb	lr, [r6]
   1522c:	mov	r1, r5
   15230:	sub	r3, r0, r1
   15234:	ldrb	ip, [r1, r3, asr #1]
   15238:	add	r3, r1, r3, asr #1
   1523c:	cmp	ip, lr
   15240:	subhi	r0, r3, #1
   15244:	bhi	15250 <sav_parse_time+0xac>
   15248:	bcs	1537c <sav_parse_time+0x1d8>
   1524c:	add	r1, r3, #1
   15250:	cmp	r0, r1
   15254:	bcs	15230 <sav_parse_time+0x8c>
   15258:	add	r5, r5, r8
   1525c:	add	r3, r9, r8
   15260:	ldr	r1, [sp, #16]
   15264:	add	r7, r1, r7
   15268:	ldrb	r8, [r7, #40]	; 0x28
   1526c:	cmp	r8, #0
   15270:	beq	152c8 <sav_parse_time+0x124>
   15274:	add	ip, r5, r8, lsl #1
   15278:	sub	ip, ip, #2
   1527c:	cmp	r5, ip
   15280:	bhi	152c4 <sav_parse_time+0x120>
   15284:	ldrb	r7, [r6]
   15288:	mov	r0, r5
   1528c:	sub	r1, ip, r0
   15290:	asr	r1, r1, #1
   15294:	bic	r1, r1, #1
   15298:	add	lr, r0, r1
   1529c:	ldrb	r1, [r0, r1]
   152a0:	cmp	r1, r7
   152a4:	subhi	ip, lr, #2
   152a8:	bhi	152bc <sav_parse_time+0x118>
   152ac:	ldrb	r1, [lr, #1]
   152b0:	add	r0, lr, #2
   152b4:	cmp	r1, r7
   152b8:	bcs	15388 <sav_parse_time+0x1e4>
   152bc:	cmp	r0, ip
   152c0:	bls	1528c <sav_parse_time+0xe8>
   152c4:	add	r3, r3, r8
   152c8:	add	r3, fp, r3
   152cc:	ldrb	r1, [r3, #84]	; 0x54
   152d0:	ldrb	r7, [r3, #56]	; 0x38
   152d4:	cmp	r1, #0
   152d8:	beq	15320 <sav_parse_time+0x17c>
   152dc:	ldrb	r0, [fp, r1]
   152e0:	add	r3, fp, r1
   152e4:	add	r0, r3, r0
   152e8:	cmp	r0, r3
   152ec:	beq	15320 <sav_parse_time+0x17c>
   152f0:	ldrb	r1, [r3, #1]!
   152f4:	cmp	r1, #4
   152f8:	addls	pc, pc, r1, lsl #2
   152fc:	b	152e8 <sav_parse_time+0x144>
   15300:	b	1534c <sav_parse_time+0x1a8>
   15304:	b	15314 <sav_parse_time+0x170>
   15308:	b	15370 <sav_parse_time+0x1cc>
   1530c:	b	15368 <sav_parse_time+0x1c4>
   15310:	b	15360 <sav_parse_time+0x1bc>
   15314:	cmp	r0, r3
   15318:	mov	r4, #0
   1531c:	bne	152f0 <sav_parse_time+0x14c>
   15320:	cmp	r7, #0
   15324:	beq	153dc <sav_parse_time+0x238>
   15328:	add	r6, r6, #1
   1532c:	cmp	sl, r6
   15330:	beq	15394 <sav_parse_time+0x1f0>
   15334:	ldr	r3, [sp, #12]
   15338:	add	r3, r3, r7
   1533c:	ldrb	r5, [r3, #128]	; 0x80
   15340:	ldrb	r9, [r3, #144]	; 0x90
   15344:	ldrb	r8, [r3, #160]	; 0xa0
   15348:	b	15208 <sav_parse_time+0x64>
   1534c:	ldrb	r1, [r6]
   15350:	add	r4, r4, r4, lsl #2
   15354:	sub	r1, r1, #48	; 0x30
   15358:	add	r4, r1, r4, lsl #1
   1535c:	b	152e8 <sav_parse_time+0x144>
   15360:	str	r4, [r2, #4]
   15364:	b	152e8 <sav_parse_time+0x144>
   15368:	str	r4, [r2, #8]
   1536c:	b	152e8 <sav_parse_time+0x144>
   15370:	ldrb	r4, [r6]
   15374:	sub	r4, r4, #48	; 0x30
   15378:	b	152e8 <sav_parse_time+0x144>
   1537c:	sub	r3, r3, r5
   15380:	add	r3, r9, r3
   15384:	b	152c8 <sav_parse_time+0x124>
   15388:	sub	r5, lr, r5
   1538c:	add	r3, r3, r5, asr #1
   15390:	b	152c8 <sav_parse_time+0x124>
   15394:	ldr	r1, [pc, #192]	; 1545c <sav_parse_time+0x2b8>
   15398:	cmp	r7, #11
   1539c:	add	r1, pc, r1
   153a0:	add	r7, r1, r7
   153a4:	movgt	r0, #0
   153a8:	ldrb	ip, [r7, #112]	; 0x70
   153ac:	movle	r0, #1
   153b0:	add	r3, r1, ip
   153b4:	ldrb	r1, [r1, ip]
   153b8:	add	r1, r3, r1
   153bc:	b	153cc <sav_parse_time+0x228>
   153c0:	ldrb	ip, [r3, #1]!
   153c4:	cmp	ip, #5
   153c8:	streq	r4, [r2]
   153cc:	cmp	r3, r1
   153d0:	bne	153c0 <sav_parse_time+0x21c>
   153d4:	cmp	r0, #0
   153d8:	beq	1542c <sav_parse_time+0x288>
   153dc:	ldr	r3, [sp, #20]
   153e0:	cmp	r3, #0
   153e4:	beq	15428 <sav_parse_time+0x284>
   153e8:	ldr	r3, [sp, #28]
   153ec:	ldr	r0, [sp, #24]
   153f0:	ldr	r2, [pc, #104]	; 15460 <sav_parse_time+0x2bc>
   153f4:	add	r4, sp, #32
   153f8:	str	r0, [sp, #4]
   153fc:	str	r3, [sp]
   15400:	mov	r1, #8192	; 0x2000
   15404:	mov	r0, r4
   15408:	add	r2, pc, r2
   1540c:	ldr	r5, [sp, #20]
   15410:	bl	4280 <snprintf@plt>
   15414:	add	r3, sp, #8256	; 0x2040
   15418:	add	r3, r3, #8
   1541c:	mov	r0, r4
   15420:	ldr	r1, [r3]
   15424:	blx	r5
   15428:	mov	r0, #29
   1542c:	add	sp, sp, #8192	; 0x2000
   15430:	add	sp, sp, #36	; 0x24
   15434:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15438:	ldr	r3, [pc, #36]	; 15464 <sav_parse_time+0x2c0>
   1543c:	mov	r1, #0
   15440:	add	r3, pc, r3
   15444:	mov	r4, r1
   15448:	mov	r0, #1
   1544c:	b	153b8 <sav_parse_time+0x214>
   15450:	.word	0x000102e0
   15454:	.word	0x000102c8
   15458:	.word	0x000102cc
   1545c:	.word	0x00010114
   15460:	.word	0x000103c8
   15464:	.word	0x00010070

00015468 <sav_parse_date>:
   15468:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1546c:	sub	sp, sp, #8192	; 0x2000
   15470:	sub	sp, sp, #44	; 0x2c
   15474:	add	r9, r0, r1
   15478:	cmp	r0, r9
   1547c:	str	r0, [sp, #32]
   15480:	str	r1, [sp, #36]	; 0x24
   15484:	str	r3, [sp, #28]
   15488:	beq	157e0 <sav_parse_date+0x378>
   1548c:	ldr	r1, [pc, #872]	; 157fc <sav_parse_date+0x394>
   15490:	ldr	r3, [pc, #872]	; 15800 <sav_parse_date+0x398>
   15494:	add	r1, pc, r1
   15498:	add	r3, pc, r3
   1549c:	mov	r8, #0
   154a0:	mov	r7, #1
   154a4:	str	r1, [sp, #20]
   154a8:	ldr	r1, [pc, #852]	; 15804 <sav_parse_date+0x39c>
   154ac:	mov	sl, r3
   154b0:	mov	r5, r7
   154b4:	add	r3, r3, #212	; 0xd4
   154b8:	mov	fp, r8
   154bc:	mov	r6, r0
   154c0:	mov	r4, r8
   154c4:	add	r1, pc, r1
   154c8:	str	r3, [sp, #12]
   154cc:	add	r3, sl, #176	; 0xb0
   154d0:	str	r1, [sp, #16]
   154d4:	str	r3, [sp, #24]
   154d8:	ldr	r3, [sp, #12]
   154dc:	cmp	r7, #0
   154e0:	add	r4, r3, r4
   154e4:	mov	r3, r8
   154e8:	beq	15530 <sav_parse_date+0xc8>
   154ec:	sub	r0, r7, #1
   154f0:	adds	r0, r4, r0
   154f4:	bcs	15528 <sav_parse_date+0xc0>
   154f8:	ldrb	lr, [r6]
   154fc:	mov	r1, r4
   15500:	sub	r3, r0, r1
   15504:	ldrb	ip, [r1, r3, asr #1]
   15508:	add	r3, r1, r3, asr #1
   1550c:	cmp	ip, lr
   15510:	subhi	r0, r3, #1
   15514:	bhi	15520 <sav_parse_date+0xb8>
   15518:	bcs	15708 <sav_parse_date+0x2a0>
   1551c:	add	r1, r3, #1
   15520:	cmp	r0, r1
   15524:	bcs	15500 <sav_parse_date+0x98>
   15528:	add	r4, r4, r7
   1552c:	add	r3, r8, r7
   15530:	ldr	r1, [sp, #20]
   15534:	add	r5, r1, r5
   15538:	ldrb	r7, [r5, #304]	; 0x130
   1553c:	cmp	r7, #0
   15540:	beq	15598 <sav_parse_date+0x130>
   15544:	add	ip, r4, r7, lsl #1
   15548:	sub	ip, ip, #2
   1554c:	cmp	r4, ip
   15550:	bhi	15594 <sav_parse_date+0x12c>
   15554:	ldrb	r5, [r6]
   15558:	mov	r0, r4
   1555c:	sub	r1, ip, r0
   15560:	asr	r1, r1, #1
   15564:	bic	r1, r1, #1
   15568:	add	lr, r0, r1
   1556c:	ldrb	r1, [r0, r1]
   15570:	cmp	r1, r5
   15574:	subhi	ip, lr, #2
   15578:	bhi	1558c <sav_parse_date+0x124>
   1557c:	ldrb	r1, [lr, #1]
   15580:	add	r0, lr, #2
   15584:	cmp	r1, r5
   15588:	bcs	15714 <sav_parse_date+0x2ac>
   1558c:	cmp	r0, ip
   15590:	bls	1555c <sav_parse_date+0xf4>
   15594:	add	r3, r3, r7
   15598:	add	r3, sl, r3
   1559c:	ldrb	r1, [r3, #352]	; 0x160
   155a0:	add	r1, sl, r1
   155a4:	ldrb	r3, [r1, #548]	; 0x224
   155a8:	ldrb	r5, [r1, #488]	; 0x1e8
   155ac:	cmp	r3, #0
   155b0:	beq	1563c <sav_parse_date+0x1d4>
   155b4:	ldr	r1, [sp, #24]
   155b8:	mov	r8, #5
   155bc:	mov	r7, #4
   155c0:	ldrb	r0, [r1, r3]
   155c4:	add	r3, r1, r3
   155c8:	mov	r4, #3
   155cc:	add	r0, r3, r0
   155d0:	mov	lr, #2
   155d4:	mov	ip, #1
   155d8:	cmp	r0, r3
   155dc:	beq	1563c <sav_parse_date+0x1d4>
   155e0:	ldrb	r1, [r3, #1]!
   155e4:	cmp	r1, #15
   155e8:	addls	pc, pc, r1, lsl #2
   155ec:	b	155d8 <sav_parse_date+0x170>
   155f0:	b	15668 <sav_parse_date+0x200>
   155f4:	b	155d8 <sav_parse_date+0x170>
   155f8:	b	15630 <sav_parse_date+0x1c8>
   155fc:	b	15700 <sav_parse_date+0x298>
   15600:	b	156f4 <sav_parse_date+0x28c>
   15604:	b	156ec <sav_parse_date+0x284>
   15608:	b	156e4 <sav_parse_date+0x27c>
   1560c:	b	156dc <sav_parse_date+0x274>
   15610:	b	156d4 <sav_parse_date+0x26c>
   15614:	b	156cc <sav_parse_date+0x264>
   15618:	b	156c0 <sav_parse_date+0x258>
   1561c:	b	156b4 <sav_parse_date+0x24c>
   15620:	b	156a8 <sav_parse_date+0x240>
   15624:	b	1569c <sav_parse_date+0x234>
   15628:	b	15690 <sav_parse_date+0x228>
   1562c:	b	15684 <sav_parse_date+0x21c>
   15630:	cmp	r0, r3
   15634:	mov	fp, #0
   15638:	bne	155e0 <sav_parse_date+0x178>
   1563c:	cmp	r5, #0
   15640:	beq	15784 <sav_parse_date+0x31c>
   15644:	add	r6, r6, #1
   15648:	cmp	r9, r6
   1564c:	beq	15720 <sav_parse_date+0x2b8>
   15650:	ldr	r3, [sp, #16]
   15654:	add	r3, r3, r5
   15658:	ldrb	r4, [r3, #656]	; 0x290
   1565c:	ldrb	r8, [r3, #704]	; 0x2c0
   15660:	ldrb	r7, [r3, #752]	; 0x2f0
   15664:	b	154d8 <sav_parse_date+0x70>
   15668:	ldrb	r1, [r6]
   1566c:	sub	r1, r1, #48	; 0x30
   15670:	uxtb	r1, r1
   15674:	cmp	r1, #9
   15678:	addls	fp, fp, fp, lsl #2
   1567c:	addls	fp, r1, fp, lsl #1
   15680:	b	155d8 <sav_parse_date+0x170>
   15684:	mov	r1, #11
   15688:	str	r1, [r2, #16]
   1568c:	b	155d8 <sav_parse_date+0x170>
   15690:	mov	r1, #10
   15694:	str	r1, [r2, #16]
   15698:	b	155d8 <sav_parse_date+0x170>
   1569c:	mov	r1, #9
   156a0:	str	r1, [r2, #16]
   156a4:	b	155d8 <sav_parse_date+0x170>
   156a8:	mov	r1, #8
   156ac:	str	r1, [r2, #16]
   156b0:	b	155d8 <sav_parse_date+0x170>
   156b4:	mov	r1, #7
   156b8:	str	r1, [r2, #16]
   156bc:	b	155d8 <sav_parse_date+0x170>
   156c0:	mov	r1, #6
   156c4:	str	r1, [r2, #16]
   156c8:	b	155d8 <sav_parse_date+0x170>
   156cc:	str	r8, [r2, #16]
   156d0:	b	155d8 <sav_parse_date+0x170>
   156d4:	str	r7, [r2, #16]
   156d8:	b	155d8 <sav_parse_date+0x170>
   156dc:	str	r4, [r2, #16]
   156e0:	b	155d8 <sav_parse_date+0x170>
   156e4:	str	lr, [r2, #16]
   156e8:	b	155d8 <sav_parse_date+0x170>
   156ec:	str	ip, [r2, #16]
   156f0:	b	155d8 <sav_parse_date+0x170>
   156f4:	mov	r1, #0
   156f8:	str	r1, [r2, #16]
   156fc:	b	155d8 <sav_parse_date+0x170>
   15700:	str	fp, [r2, #12]
   15704:	b	155d8 <sav_parse_date+0x170>
   15708:	sub	r3, r3, r4
   1570c:	add	r3, r8, r3
   15710:	b	15598 <sav_parse_date+0x130>
   15714:	sub	r4, lr, r4
   15718:	add	r3, r3, r4, asr #1
   1571c:	b	15598 <sav_parse_date+0x130>
   15720:	ldr	r1, [pc, #224]	; 15808 <sav_parse_date+0x3a0>
   15724:	cmp	r5, #46	; 0x2e
   15728:	add	r1, pc, r1
   1572c:	add	r5, r1, r5
   15730:	add	r1, r1, #176	; 0xb0
   15734:	ldrb	ip, [r5, #608]	; 0x260
   15738:	movgt	r0, #0
   1573c:	movle	r0, #1
   15740:	add	r3, r1, ip
   15744:	ldrb	r1, [r1, ip]
   15748:	add	r1, r3, r1
   1574c:	add	lr, fp, #100	; 0x64
   15750:	cmp	r3, r1
   15754:	beq	1577c <sav_parse_date+0x314>
   15758:	ldrb	ip, [r3, #1]!
   1575c:	cmp	ip, #1
   15760:	bne	15750 <sav_parse_date+0x2e8>
   15764:	cmp	fp, #69	; 0x45
   15768:	movgt	ip, fp
   1576c:	movle	ip, lr
   15770:	cmp	r3, r1
   15774:	str	ip, [r2, #20]
   15778:	bne	15758 <sav_parse_date+0x2f0>
   1577c:	cmp	r0, #0
   15780:	beq	157d4 <sav_parse_date+0x36c>
   15784:	ldr	r3, [sp, #28]
   15788:	cmp	r3, #0
   1578c:	beq	157d0 <sav_parse_date+0x368>
   15790:	ldr	r3, [sp, #36]	; 0x24
   15794:	ldr	r0, [sp, #32]
   15798:	ldr	r2, [pc, #108]	; 1580c <sav_parse_date+0x3a4>
   1579c:	add	r4, sp, #40	; 0x28
   157a0:	str	r0, [sp, #4]
   157a4:	str	r3, [sp]
   157a8:	mov	r1, #8192	; 0x2000
   157ac:	mov	r0, r4
   157b0:	add	r2, pc, r2
   157b4:	ldr	r5, [sp, #28]
   157b8:	bl	4280 <snprintf@plt>
   157bc:	add	r3, sp, #8256	; 0x2040
   157c0:	add	r3, r3, #16
   157c4:	mov	r0, r4
   157c8:	ldr	r1, [r3]
   157cc:	blx	r5
   157d0:	mov	r0, #29
   157d4:	add	sp, sp, #8192	; 0x2000
   157d8:	add	sp, sp, #44	; 0x2c
   157dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   157e0:	ldr	r3, [pc, #40]	; 15810 <sav_parse_date+0x3a8>
   157e4:	mov	r1, #0
   157e8:	add	r3, pc, r3
   157ec:	add	r3, r3, #176	; 0xb0
   157f0:	mov	fp, r1
   157f4:	mov	r0, #1
   157f8:	b	15748 <sav_parse_date+0x2e0>
   157fc:	.word	0x0001001c
   15800:	.word	0x00010018
   15804:	.word	0x0000ffec
   15808:	.word	0x0000fd88
   1580c:	.word	0x00010048
   15810:	.word	0x0000fcc8
   15814:	.word	0x00000000

00015818 <sav_skip_document_record>:
   15818:	push	{r4, r5, lr}
   1581c:	mov	r1, #4
   15820:	ldr	r4, [r0, #36]	; 0x24
   15824:	sub	sp, sp, #12
   15828:	mov	r5, r0
   1582c:	ldr	r3, [r4, #12]
   15830:	add	r0, sp, r1
   15834:	ldr	r2, [r4, #20]
   15838:	blx	r3
   1583c:	cmp	r0, #3
   15840:	movls	r0, #2
   15844:	bhi	15850 <sav_skip_document_record+0x38>
   15848:	add	sp, sp, #12
   1584c:	pop	{r4, r5, pc}
   15850:	ldrb	r3, [r5, #436]	; 0x1b4
   15854:	ldr	r0, [sp, #4]
   15858:	tst	r3, #1
   1585c:	bne	1588c <sav_skip_document_record+0x74>
   15860:	add	r0, r0, r0, lsl #2
   15864:	ldr	r3, [r4, #8]
   15868:	ldr	r2, [r4, #20]
   1586c:	mov	r1, #1
   15870:	lsl	r0, r0, #4
   15874:	blx	r3
   15878:	cmn	r0, #1
   1587c:	moveq	r0, #15
   15880:	movne	r0, #0
   15884:	add	sp, sp, #12
   15888:	pop	{r4, r5, pc}
   1588c:	bl	3d94 <byteswap4@plt>
   15890:	str	r0, [sp, #4]
   15894:	b	15860 <sav_skip_document_record+0x48>

00015898 <sav_parse_records_pass1>:
   15898:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1589c:	sub	sp, sp, #5120	; 0x1400
   158a0:	ldr	r3, [pc, #1212]	; 15d64 <sav_parse_records_pass1+0x4cc>
   158a4:	sub	sp, sp, #44	; 0x2c
   158a8:	add	r3, pc, r3
   158ac:	str	r3, [sp, #8]
   158b0:	ldr	r3, [pc, #1200]	; 15d68 <sav_parse_records_pass1+0x4d0>
   158b4:	add	sl, sp, #40	; 0x28
   158b8:	add	r3, pc, r3
   158bc:	add	r5, sp, #1056	; 0x420
   158c0:	ldr	r6, [r0, #36]	; 0x24
   158c4:	str	r3, [sp, #12]
   158c8:	mov	r7, r0
   158cc:	sub	r3, sl, #12
   158d0:	mov	fp, #4
   158d4:	add	r5, r5, #8
   158d8:	str	r3, [sp, #4]
   158dc:	add	r3, sp, #20
   158e0:	str	r3, [sp]
   158e4:	ldr	r3, [r6, #12]
   158e8:	ldr	r2, [r6, #20]
   158ec:	mov	r1, fp
   158f0:	ldr	r0, [sp]
   158f4:	blx	r3
   158f8:	cmp	r0, #3
   158fc:	bls	1594c <sav_parse_records_pass1+0xb4>
   15900:	ldrb	r3, [r7, #436]	; 0x1b4
   15904:	tst	r3, #1
   15908:	bne	15984 <sav_parse_records_pass1+0xec>
   1590c:	ldr	r4, [r5, #-1044]	; 0xfffffbec
   15910:	cmp	r4, #6
   15914:	beq	1599c <sav_parse_records_pass1+0x104>
   15918:	bhi	1595c <sav_parse_records_pass1+0xc4>
   1591c:	cmp	r4, #2
   15920:	beq	15a28 <sav_parse_records_pass1+0x190>
   15924:	cmp	r4, #3
   15928:	bne	15974 <sav_parse_records_pass1+0xdc>
   1592c:	ldr	r4, [r7, #36]	; 0x24
   15930:	mov	r1, fp
   15934:	sub	r0, sl, #16
   15938:	ldr	r3, [r4, #12]
   1593c:	ldr	r2, [r4, #20]
   15940:	blx	r3
   15944:	cmp	r0, #3
   15948:	bhi	15b18 <sav_parse_records_pass1+0x280>
   1594c:	mov	r0, #2
   15950:	add	sp, sp, #5120	; 0x1400
   15954:	add	sp, sp, #44	; 0x2c
   15958:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1595c:	cmp	r4, #7
   15960:	beq	159b0 <sav_parse_records_pass1+0x118>
   15964:	ldr	r3, [pc, #1024]	; 15d6c <sav_parse_records_pass1+0x4d4>
   15968:	cmp	r4, r3
   1596c:	moveq	r0, #0
   15970:	beq	15950 <sav_parse_records_pass1+0xb8>
   15974:	mov	r0, #5
   15978:	add	sp, sp, #5120	; 0x1400
   1597c:	add	sp, sp, #44	; 0x2c
   15980:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15984:	ldr	r0, [r5, #-1044]	; 0xfffffbec
   15988:	bl	3d94 <byteswap4@plt>
   1598c:	mov	r4, r0
   15990:	cmp	r4, #6
   15994:	str	r0, [r5, #-1044]	; 0xfffffbec
   15998:	bne	15918 <sav_parse_records_pass1+0x80>
   1599c:	mov	r0, r7
   159a0:	bl	15818 <sav_skip_document_record>
   159a4:	cmp	r0, #0
   159a8:	beq	158e4 <sav_parse_records_pass1+0x4c>
   159ac:	b	15950 <sav_parse_records_pass1+0xb8>
   159b0:	ldr	r3, [r6, #12]
   159b4:	ldr	r2, [r6, #20]
   159b8:	mov	r1, #12
   159bc:	ldr	r0, [sp, #4]
   159c0:	blx	r3
   159c4:	cmp	r0, #11
   159c8:	bls	1594c <sav_parse_records_pass1+0xb4>
   159cc:	ldrb	r3, [r7, #436]	; 0x1b4
   159d0:	tst	r3, #1
   159d4:	beq	159f0 <sav_parse_records_pass1+0x158>
   159d8:	ldr	r4, [sp, #4]
   159dc:	ldr	r0, [r4]
   159e0:	bl	3d94 <byteswap4@plt>
   159e4:	str	r0, [r4], #4
   159e8:	cmp	sl, r4
   159ec:	bne	159dc <sav_parse_records_pass1+0x144>
   159f0:	ldr	r3, [r5, #-1032]	; 0xfffffbf8
   159f4:	ldr	r4, [r5, #-1028]	; 0xfffffbfc
   159f8:	ldr	r2, [r5, #-1036]	; 0xfffffbf4
   159fc:	cmp	r2, #3
   15a00:	mul	r4, r4, r3
   15a04:	beq	15a98 <sav_parse_records_pass1+0x200>
   15a08:	mov	r0, r4
   15a0c:	ldr	r3, [r6, #8]
   15a10:	ldr	r2, [r6, #20]
   15a14:	mov	r1, #1
   15a18:	blx	r3
   15a1c:	cmn	r0, #1
   15a20:	bne	158e4 <sav_parse_records_pass1+0x4c>
   15a24:	b	15a90 <sav_parse_records_pass1+0x1f8>
   15a28:	ldr	r8, [r7, #36]	; 0x24
   15a2c:	mov	r1, #28
   15a30:	mov	r0, sl
   15a34:	ldr	r3, [r8, #12]
   15a38:	ldr	r2, [r8, #20]
   15a3c:	blx	r3
   15a40:	cmp	r0, #27
   15a44:	bls	1594c <sav_parse_records_pass1+0xb4>
   15a48:	ldr	r3, [r5, #-1020]	; 0xfffffc04
   15a4c:	cmp	r3, #0
   15a50:	bne	15bc4 <sav_parse_records_pass1+0x32c>
   15a54:	ldr	r0, [r5, #-1016]	; 0xfffffc08
   15a58:	cmp	r0, #0
   15a5c:	beq	158e4 <sav_parse_records_pass1+0x4c>
   15a60:	ldrb	r3, [r7, #436]	; 0x1b4
   15a64:	tst	r3, #1
   15a68:	bne	15c98 <sav_parse_records_pass1+0x400>
   15a6c:	cmp	r0, #0
   15a70:	rsblt	r0, r0, #0
   15a74:	ldr	r3, [r8, #8]
   15a78:	lsl	r0, r0, #3
   15a7c:	ldr	r2, [r8, #20]
   15a80:	mov	r1, #1
   15a84:	blx	r3
   15a88:	cmn	r0, #1
   15a8c:	bne	158e4 <sav_parse_records_pass1+0x4c>
   15a90:	mov	r0, #15
   15a94:	b	15950 <sav_parse_records_pass1+0xb8>
   15a98:	cmp	r4, #4096	; 0x1000
   15a9c:	bhi	15974 <sav_parse_records_pass1+0xdc>
   15aa0:	ldr	r3, [r6, #12]
   15aa4:	ldr	r2, [r6, #20]
   15aa8:	mov	r1, r4
   15aac:	mov	r0, r5
   15ab0:	blx	r3
   15ab4:	cmp	r4, r0
   15ab8:	bhi	15974 <sav_parse_records_pass1+0xdc>
   15abc:	cmp	r4, #32
   15ac0:	bne	15974 <sav_parse_records_pass1+0xdc>
   15ac4:	ldrb	r3, [r7, #436]	; 0x1b4
   15ac8:	ldr	r4, [r7, #60]	; 0x3c
   15acc:	ldr	r0, [r5, #28]
   15ad0:	tst	r3, #1
   15ad4:	bne	15ca8 <sav_parse_records_pass1+0x410>
   15ad8:	ldr	r1, [r7, #56]	; 0x38
   15adc:	cmp	r1, #0
   15ae0:	beq	15cbc <sav_parse_records_pass1+0x424>
   15ae4:	cmp	r4, #0
   15ae8:	beq	158e4 <sav_parse_records_pass1+0x4c>
   15aec:	mov	r0, r4
   15af0:	bl	4130 <iconv_open@plt>
   15af4:	cmn	r0, #1
   15af8:	mov	r4, r0
   15afc:	beq	15d08 <sav_parse_records_pass1+0x470>
   15b00:	ldr	r0, [r7, #336]	; 0x150
   15b04:	cmp	r0, #0
   15b08:	beq	15b10 <sav_parse_records_pass1+0x278>
   15b0c:	bl	3dd0 <iconv_close@plt>
   15b10:	str	r4, [r7, #336]	; 0x150
   15b14:	b	158e4 <sav_parse_records_pass1+0x4c>
   15b18:	ldrb	r3, [r7, #436]	; 0x1b4
   15b1c:	ldr	r0, [r5, #-1040]	; 0xfffffbf0
   15b20:	tst	r3, #1
   15b24:	bne	15bb8 <sav_parse_records_pass1+0x320>
   15b28:	cmp	r0, #0
   15b2c:	beq	15c18 <sav_parse_records_pass1+0x380>
   15b30:	mov	r8, #0
   15b34:	mov	r9, #1
   15b38:	b	15b84 <sav_parse_records_pass1+0x2ec>
   15b3c:	ldr	r3, [r4, #12]
   15b40:	ldr	r2, [r4, #20]
   15b44:	blx	r3
   15b48:	mov	r1, r9
   15b4c:	cmp	r0, #0
   15b50:	ble	1594c <sav_parse_records_pass1+0xb4>
   15b54:	ldrb	r0, [r5, #-1024]	; 0xfffffc00
   15b58:	ldr	r3, [r4, #8]
   15b5c:	ldr	r2, [r4, #20]
   15b60:	add	r0, r0, #8
   15b64:	bic	r0, r0, #7
   15b68:	sub	r0, r0, #1
   15b6c:	blx	r3
   15b70:	cmn	r0, #1
   15b74:	beq	15a90 <sav_parse_records_pass1+0x1f8>
   15b78:	ldr	r3, [r5, #-1040]	; 0xfffffbf0
   15b7c:	cmp	r8, r3
   15b80:	bcs	15c18 <sav_parse_records_pass1+0x380>
   15b84:	mov	r3, #0
   15b88:	strb	r3, [r5, #-1024]	; 0xfffffc00
   15b8c:	mov	r1, r9
   15b90:	ldr	r3, [r4, #8]
   15b94:	ldr	r2, [r4, #20]
   15b98:	mov	r0, #8
   15b9c:	blx	r3
   15ba0:	add	r8, r8, #1
   15ba4:	mov	r1, r9
   15ba8:	cmn	r0, #1
   15bac:	mov	r0, sl
   15bb0:	bne	15b3c <sav_parse_records_pass1+0x2a4>
   15bb4:	b	15a90 <sav_parse_records_pass1+0x1f8>
   15bb8:	bl	3d94 <byteswap4@plt>
   15bbc:	str	r0, [r5, #-1040]	; 0xfffffbf0
   15bc0:	b	15b28 <sav_parse_records_pass1+0x290>
   15bc4:	ldr	r3, [r8, #12]
   15bc8:	ldr	r2, [r8, #20]
   15bcc:	mov	r1, fp
   15bd0:	ldr	r0, [sp, #4]
   15bd4:	blx	r3
   15bd8:	cmp	r0, #3
   15bdc:	bls	1594c <sav_parse_records_pass1+0xb4>
   15be0:	ldrb	r3, [r7, #436]	; 0x1b4
   15be4:	ldr	r0, [r5, #-1036]	; 0xfffffbf4
   15be8:	tst	r3, #1
   15bec:	bne	15ca0 <sav_parse_records_pass1+0x408>
   15bf0:	add	r3, r0, #3
   15bf4:	str	r0, [r5, #-1036]	; 0xfffffbf4
   15bf8:	ldr	r2, [r8, #20]
   15bfc:	bic	r0, r3, #3
   15c00:	mov	r1, #1
   15c04:	ldr	r3, [r8, #8]
   15c08:	blx	r3
   15c0c:	cmn	r0, #1
   15c10:	bne	15a54 <sav_parse_records_pass1+0x1bc>
   15c14:	b	15a90 <sav_parse_records_pass1+0x1f8>
   15c18:	ldr	r3, [r4, #12]
   15c1c:	ldr	r2, [r4, #20]
   15c20:	mov	r1, fp
   15c24:	ldr	r0, [sp, #4]
   15c28:	blx	r3
   15c2c:	cmp	r0, #3
   15c30:	bls	1594c <sav_parse_records_pass1+0xb4>
   15c34:	ldrb	r3, [r7, #436]	; 0x1b4
   15c38:	ldr	r0, [r5, #-1036]	; 0xfffffbf4
   15c3c:	tst	r3, #1
   15c40:	bne	15cb0 <sav_parse_records_pass1+0x418>
   15c44:	cmp	r0, #4
   15c48:	bne	15974 <sav_parse_records_pass1+0xdc>
   15c4c:	ldr	r3, [r4, #12]
   15c50:	ldr	r2, [r4, #20]
   15c54:	mov	r1, fp
   15c58:	mov	r0, sl
   15c5c:	blx	r3
   15c60:	cmp	r0, #3
   15c64:	bls	1594c <sav_parse_records_pass1+0xb4>
   15c68:	ldrb	r3, [r7, #436]	; 0x1b4
   15c6c:	tst	r3, #1
   15c70:	bne	15d4c <sav_parse_records_pass1+0x4b4>
   15c74:	ldr	r0, [r5, #-1024]	; 0xfffffc00
   15c78:	ldr	r3, [r4, #8]
   15c7c:	ldr	r2, [r4, #20]
   15c80:	lsl	r0, r0, #2
   15c84:	mov	r1, #1
   15c88:	blx	r3
   15c8c:	cmn	r0, #1
   15c90:	bne	158e4 <sav_parse_records_pass1+0x4c>
   15c94:	b	15a90 <sav_parse_records_pass1+0x1f8>
   15c98:	bl	3d94 <byteswap4@plt>
   15c9c:	b	15a6c <sav_parse_records_pass1+0x1d4>
   15ca0:	bl	3d94 <byteswap4@plt>
   15ca4:	b	15bf0 <sav_parse_records_pass1+0x358>
   15ca8:	bl	3d94 <byteswap4@plt>
   15cac:	b	15ad8 <sav_parse_records_pass1+0x240>
   15cb0:	bl	3d94 <byteswap4@plt>
   15cb4:	str	r0, [r5, #-1036]	; 0xfffffbf4
   15cb8:	b	15c44 <sav_parse_records_pass1+0x3ac>
   15cbc:	ldr	r2, [sp, #8]
   15cc0:	ldr	r3, [r2]
   15cc4:	cmp	r0, r3
   15cc8:	beq	15d5c <sav_parse_records_pass1+0x4c4>
   15ccc:	mov	r3, #1
   15cd0:	b	15ce0 <sav_parse_records_pass1+0x448>
   15cd4:	add	r3, r3, #1
   15cd8:	cmp	r3, #79	; 0x4f
   15cdc:	beq	15d10 <sav_parse_records_pass1+0x478>
   15ce0:	ldr	r1, [r2, #36]	; 0x24
   15ce4:	add	r2, r2, #36	; 0x24
   15ce8:	cmp	r1, r0
   15cec:	bne	15cd4 <sav_parse_records_pass1+0x43c>
   15cf0:	add	r3, r3, r3, lsl #3
   15cf4:	ldr	r2, [sp, #12]
   15cf8:	add	r3, r2, r3, lsl #2
   15cfc:	add	r1, r3, #4
   15d00:	str	r1, [r7, #56]	; 0x38
   15d04:	b	15ae4 <sav_parse_records_pass1+0x24c>
   15d08:	mov	r0, #7
   15d0c:	b	15950 <sav_parse_records_pass1+0xb8>
   15d10:	ldr	r3, [r7, #24]
   15d14:	cmp	r3, #0
   15d18:	beq	15d08 <sav_parse_records_pass1+0x470>
   15d1c:	ldr	r2, [pc, #76]	; 15d70 <sav_parse_records_pass1+0x4d8>
   15d20:	mov	r3, r0
   15d24:	add	r2, pc, r2
   15d28:	mov	r1, #1024	; 0x400
   15d2c:	mov	r0, sl
   15d30:	bl	4280 <snprintf@plt>
   15d34:	mov	r0, sl
   15d38:	ldr	r3, [r7, #24]
   15d3c:	ldr	r1, [r7, #40]	; 0x28
   15d40:	blx	r3
   15d44:	mov	r0, #7
   15d48:	b	15950 <sav_parse_records_pass1+0xb8>
   15d4c:	ldr	r0, [r5, #-1024]	; 0xfffffc00
   15d50:	bl	3d94 <byteswap4@plt>
   15d54:	str	r0, [r5, #-1024]	; 0xfffffc00
   15d58:	b	15c74 <sav_parse_records_pass1+0x3dc>
   15d5c:	mov	r3, r1
   15d60:	b	15cf0 <sav_parse_records_pass1+0x458>
   15d64:	.word	0x0002f6b8
   15d68:	.word	0x0002f6a8
   15d6c:	.word	0x000003e7
   15d70:	.word	0x0000fafc

00015d74 <sav_process_row>:
   15d74:	ldr	r3, [r2, #360]	; 0x168
   15d78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15d7c:	sub	sp, sp, #92	; 0x5c
   15d80:	cmp	r3, #0
   15d84:	str	r3, [sp, #36]	; 0x24
   15d88:	bne	15f64 <sav_process_row+0x1f0>
   15d8c:	cmp	r1, #0
   15d90:	str	r1, [sp, #32]
   15d94:	mov	r5, r2
   15d98:	beq	15ec8 <sav_process_row+0x154>
   15d9c:	ldr	r3, [r2, #340]	; 0x154
   15da0:	cmp	r3, #0
   15da4:	ble	15ec8 <sav_process_row+0x154>
   15da8:	ldr	r3, [sp, #36]	; 0x24
   15dac:	str	r0, [sp, #20]
   15db0:	str	r3, [sp, #28]
   15db4:	mov	r7, r3
   15db8:	mov	r8, r3
   15dbc:	mov	r9, r3
   15dc0:	mov	r6, r3
   15dc4:	str	r3, [sp, #24]
   15dc8:	mov	fp, r3
   15dcc:	add	r3, sp, #64	; 0x40
   15dd0:	str	r3, [sp, #56]	; 0x38
   15dd4:	add	r3, r5, #400	; 0x190
   15dd8:	str	r3, [sp, #40]	; 0x28
   15ddc:	add	r3, r5, #416	; 0x1a0
   15de0:	str	r3, [sp, #60]	; 0x3c
   15de4:	add	r3, sp, #80	; 0x50
   15de8:	add	sl, sp, #72	; 0x48
   15dec:	str	r3, [sp, #44]	; 0x2c
   15df0:	b	15e5c <sav_process_row+0xe8>
   15df4:	ldr	r3, [sp, #24]
   15df8:	ldr	r1, [r5, #380]	; 0x17c
   15dfc:	add	r3, r3, #8
   15e00:	cmp	r3, r1
   15e04:	bls	15ee0 <sav_process_row+0x16c>
   15e08:	ldr	r3, [r2, #16]
   15e0c:	add	r7, r7, #1
   15e10:	cmp	r7, r3
   15e14:	ldr	r3, [r4, #48]	; 0x30
   15e18:	beq	15f3c <sav_process_row+0x1c8>
   15e1c:	ldr	r2, [sp, #28]
   15e20:	cmp	r2, r3
   15e24:	beq	15f08 <sav_process_row+0x194>
   15e28:	ldr	r3, [sp, #32]
   15e2c:	add	r6, r6, #8
   15e30:	cmp	r3, r6
   15e34:	bls	15ec8 <sav_process_row+0x154>
   15e38:	cmp	r8, r9
   15e3c:	ldr	r2, [r5, #340]	; 0x154
   15e40:	movge	r3, r8
   15e44:	movlt	r3, r9
   15e48:	cmp	r2, r3
   15e4c:	ldr	r3, [sp, #20]
   15e50:	add	r3, r3, #8
   15e54:	str	r3, [sp, #20]
   15e58:	ble	15ec8 <sav_process_row+0x154>
   15e5c:	ldr	r2, [r5, #44]	; 0x2c
   15e60:	cmp	r7, #31
   15e64:	str	fp, [sl]
   15e68:	ldr	r4, [r2, r8, lsl #2]
   15e6c:	str	fp, [sl, #4]
   15e70:	str	fp, [sl, #12]
   15e74:	ldr	r3, [r4]
   15e78:	ldr	r2, [r2, r9, lsl #2]
   15e7c:	str	r3, [sp, #80]	; 0x50
   15e80:	bgt	160d0 <sav_process_row+0x35c>
   15e84:	cmp	r3, #0
   15e88:	beq	15df4 <sav_process_row+0x80>
   15e8c:	cmp	r3, #5
   15e90:	bne	15e28 <sav_process_row+0xb4>
   15e94:	ldr	r3, [r5, #52]	; 0x34
   15e98:	ldr	r2, [r4, #8]
   15e9c:	ldr	ip, [r3, r2, lsl #2]
   15ea0:	ldr	r3, [ip, #2144]	; 0x860
   15ea4:	cmp	r3, #0
   15ea8:	beq	15ff4 <sav_process_row+0x280>
   15eac:	ldr	r3, [r4, #48]	; 0x30
   15eb0:	add	r6, r6, #8
   15eb4:	add	r8, r8, r3
   15eb8:	ldr	r3, [sp, #32]
   15ebc:	add	r9, r9, #1
   15ec0:	cmp	r3, r6
   15ec4:	bhi	15e38 <sav_process_row+0xc4>
   15ec8:	ldr	r3, [r5, #364]	; 0x16c
   15ecc:	mov	r0, #0
   15ed0:	add	r3, r3, #1
   15ed4:	str	r3, [r5, #364]	; 0x16c
   15ed8:	add	sp, sp, #92	; 0x5c
   15edc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15ee0:	ldr	r0, [sp, #20]
   15ee4:	ldr	r1, [r5, #376]	; 0x178
   15ee8:	ldr	lr, [sp, #24]
   15eec:	ldr	ip, [r0]
   15ef0:	ldr	r0, [r0, #4]
   15ef4:	str	ip, [r1, lr]
   15ef8:	add	r1, r1, lr
   15efc:	str	r3, [sp, #24]
   15f00:	str	r0, [r1, #4]
   15f04:	b	15e08 <sav_process_row+0x94>
   15f08:	ldr	r2, [r4, #8]
   15f0c:	ldr	r3, [r5, #52]	; 0x34
   15f10:	ldr	r3, [r3, r2, lsl #2]
   15f14:	ldr	r3, [r3, #2144]	; 0x860
   15f18:	cmp	r3, #0
   15f1c:	beq	15f7c <sav_process_row+0x208>
   15f20:	ldr	r3, [sp, #28]
   15f24:	add	r8, r8, r3
   15f28:	mov	r3, #0
   15f2c:	str	r3, [sp, #24]
   15f30:	ldr	r3, [sp, #36]	; 0x24
   15f34:	str	r3, [sp, #28]
   15f38:	b	15e28 <sav_process_row+0xb4>
   15f3c:	ldr	r2, [sp, #28]
   15f40:	add	r9, r9, #1
   15f44:	add	r2, r2, #1
   15f48:	cmp	r2, r3
   15f4c:	str	r2, [sp, #28]
   15f50:	ldrlt	r2, [sp, #24]
   15f54:	ldr	r7, [sp, #36]	; 0x24
   15f58:	sublt	r2, r2, #1
   15f5c:	strlt	r2, [sp, #24]
   15f60:	b	15e1c <sav_process_row+0xa8>
   15f64:	ldr	r3, [sp, #36]	; 0x24
   15f68:	mov	r0, #0
   15f6c:	sub	r3, r3, #1
   15f70:	str	r3, [r2, #360]	; 0x168
   15f74:	add	sp, sp, #92	; 0x5c
   15f78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15f7c:	ldr	ip, [r5, #336]	; 0x150
   15f80:	ldr	r2, [r5, #376]	; 0x178
   15f84:	ldr	r1, [r5, #388]	; 0x184
   15f88:	ldr	r0, [r5, #384]	; 0x180
   15f8c:	ldr	r3, [sp, #24]
   15f90:	str	ip, [sp]
   15f94:	bl	4238 <readstat_convert@plt>
   15f98:	cmp	r0, #0
   15f9c:	bne	15ed8 <sav_process_row+0x164>
   15fa0:	ldr	r2, [sp, #44]	; 0x2c
   15fa4:	ldr	ip, [r4, #8]
   15fa8:	ldr	r3, [r5, #52]	; 0x34
   15fac:	ldm	r2, {r0, r1}
   15fb0:	ldr	lr, [r5, #364]	; 0x16c
   15fb4:	ldr	r3, [r3, ip, lsl #2]
   15fb8:	ldr	r2, [r5, #384]	; 0x180
   15fbc:	ldr	ip, [r5, #40]	; 0x28
   15fc0:	str	r2, [sp, #72]	; 0x48
   15fc4:	stm	sp, {r0, r1}
   15fc8:	mov	r1, r3
   15fcc:	mov	r0, lr
   15fd0:	ldm	sl, {r2, r3}
   15fd4:	str	ip, [sp, #8]
   15fd8:	ldr	ip, [r5, #16]
   15fdc:	blx	ip
   15fe0:	cmp	r0, #0
   15fe4:	bne	160c8 <sav_process_row+0x354>
   15fe8:	ldr	r3, [r4, #48]	; 0x30
   15fec:	str	r3, [sp, #28]
   15ff0:	b	15f20 <sav_process_row+0x1ac>
   15ff4:	ldr	r3, [sp, #20]
   15ff8:	ldrb	r2, [r5, #436]	; 0x1b4
   15ffc:	ldr	r0, [r3]
   16000:	ldr	r1, [r3, #4]
   16004:	ldr	r3, [sp, #56]	; 0x38
   16008:	tst	r2, #1
   1600c:	stmia	r3!, {r0, r1}
   16010:	bne	160dc <sav_process_row+0x368>
   16014:	vldr	d7, [sp, #64]	; 0x40
   16018:	vstr	d7, [sp, #48]	; 0x30
   1601c:	ldr	r3, [sp, #40]	; 0x28
   16020:	ldrd	r0, [sp, #48]	; 0x30
   16024:	vldr	d7, [sp, #48]	; 0x30
   16028:	ldrd	r2, [r3, #-8]
   1602c:	cmp	r1, r3
   16030:	cmpeq	r0, r2
   16034:	vstr	d7, [sp, #72]	; 0x48
   16038:	ldrbeq	r3, [sp, #85]	; 0x55
   1603c:	vldr	d7, [sp, #48]	; 0x30
   16040:	orreq	r3, r3, #1
   16044:	strbeq	r3, [sp, #85]	; 0x55
   16048:	ldr	r3, [sp, #40]	; 0x28
   1604c:	vcmp.f64	d7, d7
   16050:	ldrd	r2, [r3]
   16054:	cmp	r1, r3
   16058:	cmpeq	r0, r2
   1605c:	ldrbeq	r3, [sp, #85]	; 0x55
   16060:	orreq	r3, r3, #1
   16064:	strbeq	r3, [sp, #85]	; 0x55
   16068:	ldr	r3, [sp, #60]	; 0x3c
   1606c:	ldrd	r2, [r3, #-8]
   16070:	cmp	r1, r3
   16074:	cmpeq	r0, r2
   16078:	ldr	r2, [r5, #40]	; 0x28
   1607c:	ldrbeq	r3, [sp, #85]	; 0x55
   16080:	orreq	r3, r3, #1
   16084:	strbeq	r3, [sp, #85]	; 0x55
   16088:	vmrs	APSR_nzcv, fpscr
   1608c:	ldrbvs	r3, [sp, #85]	; 0x55
   16090:	orrvs	r3, r3, #1
   16094:	strbvs	r3, [sp, #85]	; 0x55
   16098:	ldr	r3, [sp, #44]	; 0x2c
   1609c:	ldm	r3, {r0, r1}
   160a0:	ldr	r3, [r5, #364]	; 0x16c
   160a4:	str	r2, [sp, #8]
   160a8:	stm	sp, {r0, r1}
   160ac:	mov	r1, ip
   160b0:	mov	r0, r3
   160b4:	ldr	ip, [r5, #16]
   160b8:	ldm	sl, {r2, r3}
   160bc:	blx	ip
   160c0:	cmp	r0, #0
   160c4:	beq	15eac <sav_process_row+0x138>
   160c8:	mov	r0, #4
   160cc:	b	15ed8 <sav_process_row+0x164>
   160d0:	mov	r0, #5
   160d4:	add	sp, sp, #92	; 0x5c
   160d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   160dc:	vldr	d0, [sp, #64]	; 0x40
   160e0:	bl	4508 <byteswap_double@plt>
   160e4:	ldr	r2, [r4, #8]
   160e8:	ldr	r3, [r5, #52]	; 0x34
   160ec:	ldr	ip, [r3, r2, lsl #2]
   160f0:	vstr	d0, [sp, #48]	; 0x30
   160f4:	vstr	d0, [sp, #64]	; 0x40
   160f8:	b	1601c <sav_process_row+0x2a8>

000160fc <sav_parse_timestamp>:
   160fc:	push	{r4, r5, r6, r7, lr}
   16100:	sub	sp, sp, #60	; 0x3c
   16104:	mov	r4, r0
   16108:	add	r5, sp, #12
   1610c:	mov	r7, r1
   16110:	mov	r2, #44	; 0x2c
   16114:	mov	r1, #0
   16118:	mov	r0, r5
   1611c:	bl	42a4 <memset@plt>
   16120:	ldr	r2, [r4, #40]	; 0x28
   16124:	ldr	r3, [r4, #24]
   16128:	mvn	ip, #0
   1612c:	str	r2, [sp]
   16130:	add	r0, r7, #101	; 0x65
   16134:	mov	r2, r5
   16138:	mov	r1, #8
   1613c:	str	ip, [sp, #44]	; 0x2c
   16140:	bl	3ed8 <sav_parse_time@plt>
   16144:	subs	r6, r0, #0
   16148:	beq	16158 <sav_parse_timestamp+0x5c>
   1614c:	mov	r0, r6
   16150:	add	sp, sp, #60	; 0x3c
   16154:	pop	{r4, r5, r6, r7, pc}
   16158:	ldr	r2, [r4, #40]	; 0x28
   1615c:	ldr	r3, [r4, #24]
   16160:	add	r0, r7, #92	; 0x5c
   16164:	str	r2, [sp]
   16168:	mov	r1, #9
   1616c:	mov	r2, r5
   16170:	bl	4088 <sav_parse_date@plt>
   16174:	subs	r6, r0, #0
   16178:	bne	1614c <sav_parse_timestamp+0x50>
   1617c:	mov	r0, r5
   16180:	bl	3e54 <mktime@plt>
   16184:	str	r0, [r4, #324]	; 0x144
   16188:	mov	r0, r6
   1618c:	add	sp, sp, #60	; 0x3c
   16190:	pop	{r4, r5, r6, r7, pc}

00016194 <readstat_parse_sav>:
   16194:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16198:	vpush	{d8-d11}
   1619c:	ldr	fp, [r0, #32]
   161a0:	mov	r4, r0
   161a4:	mov	r0, r1
   161a8:	sub	sp, sp, #868	; 0x364
   161ac:	ldr	r3, [fp]
   161b0:	ldr	r1, [fp, #20]
   161b4:	mov	r6, r2
   161b8:	blx	r3
   161bc:	cmn	r0, #1
   161c0:	moveq	r9, #1
   161c4:	beq	162d0 <readstat_parse_sav+0x13c>
   161c8:	ldr	r3, [fp, #8]
   161cc:	ldr	r2, [fp, #20]
   161d0:	mov	r1, #2
   161d4:	mov	r0, #0
   161d8:	blx	r3
   161dc:	cmn	r0, #1
   161e0:	mov	r5, r0
   161e4:	beq	162e0 <readstat_parse_sav+0x14c>
   161e8:	mov	r1, #0
   161ec:	mov	r0, r1
   161f0:	ldr	r3, [fp, #8]
   161f4:	ldr	r2, [fp, #20]
   161f8:	blx	r3
   161fc:	cmn	r0, #1
   16200:	beq	162e0 <readstat_parse_sav+0x14c>
   16204:	add	r8, sp, #104	; 0x68
   16208:	mov	r0, r8
   1620c:	ldr	r3, [fp, #12]
   16210:	ldr	r2, [fp, #20]
   16214:	mov	r1, #176	; 0xb0
   16218:	blx	r3
   1621c:	cmp	r0, #175	; 0xaf
   16220:	movls	r9, #2
   16224:	bls	162e4 <readstat_parse_sav+0x150>
   16228:	mov	r1, fp
   1622c:	mov	r0, r8
   16230:	bl	4058 <sav_ctx_init@plt>
   16234:	subs	sl, r0, #0
   16238:	beq	16430 <readstat_parse_sav+0x29c>
   1623c:	mov	lr, r4
   16240:	mov	ip, sl
   16244:	ldm	lr!, {r0, r1, r2, r3}
   16248:	ldr	r7, [r4, #48]	; 0x30
   1624c:	ldr	r9, [r4, #36]	; 0x24
   16250:	stmia	ip!, {r0, r1, r2, r3}
   16254:	cmp	r7, #0
   16258:	ldm	lr, {r0, r1, r2, r3}
   1625c:	ldr	lr, [r4, #40]	; 0x28
   16260:	stm	ip, {r0, r1, r2, r3}
   16264:	ldr	r2, [sl, #352]	; 0x160
   16268:	strgt	r7, [sl, #360]	; 0x168
   1626c:	cmn	r2, #1
   16270:	str	r9, [sl, #56]	; 0x38
   16274:	str	lr, [sl, #60]	; 0x3c
   16278:	str	r6, [sl, #40]	; 0x28
   1627c:	str	r5, [sl, #32]
   16280:	beq	16420 <readstat_parse_sav+0x28c>
   16284:	ldr	r3, [sl, #360]	; 0x168
   16288:	subs	r3, r2, r3
   1628c:	strmi	r2, [sl, #360]	; 0x168
   16290:	ldr	r2, [r4, #44]	; 0x2c
   16294:	movmi	r3, #0
   16298:	cmp	r2, #0
   1629c:	cmpgt	r3, r2
   162a0:	str	r3, [sl, #356]	; 0x164
   162a4:	strgt	r2, [sl, #356]	; 0x164
   162a8:	mov	r1, r8
   162ac:	mov	r0, sl
   162b0:	bl	3df4 <sav_parse_timestamp@plt>
   162b4:	subs	r9, r0, #0
   162b8:	beq	16300 <readstat_parse_sav+0x16c>
   162bc:	ldr	r3, [fp, #4]
   162c0:	ldr	r0, [fp, #20]
   162c4:	blx	r3
   162c8:	mov	r0, sl
   162cc:	bl	3f14 <sav_ctx_free@plt>
   162d0:	mov	r0, r9
   162d4:	add	sp, sp, #868	; 0x364
   162d8:	vpop	{d8-d11}
   162dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   162e0:	mov	r9, #15
   162e4:	ldr	r3, [fp, #4]
   162e8:	ldr	r0, [fp, #20]
   162ec:	blx	r3
   162f0:	mov	r0, r9
   162f4:	add	sp, sp, #868	; 0x364
   162f8:	vpop	{d8-d11}
   162fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16300:	mov	r0, sl
   16304:	bl	15898 <sav_parse_records_pass1>
   16308:	subs	r9, r0, #0
   1630c:	bne	162bc <readstat_parse_sav+0x128>
   16310:	mov	r1, r9
   16314:	ldr	r3, [fp, #8]
   16318:	ldr	r2, [fp, #20]
   1631c:	mov	r0, #176	; 0xb0
   16320:	blx	r3
   16324:	cmn	r0, #1
   16328:	moveq	r9, #15
   1632c:	beq	162bc <readstat_parse_sav+0x128>
   16330:	ldr	r3, [sl, #36]	; 0x24
   16334:	ldr	r2, [sl, #40]	; 0x28
   16338:	ldr	r1, [sl, #28]
   1633c:	ldr	r4, [r3, #16]
   16340:	ldr	r0, [sl, #32]
   16344:	ldr	r3, [r3, #20]
   16348:	blx	r4
   1634c:	subs	r9, r0, #0
   16350:	bne	162bc <readstat_parse_sav+0x128>
   16354:	ldr	r3, [sl, #36]	; 0x24
   16358:	mov	r0, #4096	; 0x1000
   1635c:	str	r3, [sp, #24]
   16360:	bl	422c <readstat_malloc@plt>
   16364:	subs	r3, r0, #0
   16368:	beq	168e8 <readstat_parse_sav+0x754>
   1636c:	vldr	d10, [pc, #940]	; 16720 <readstat_parse_sav+0x58c>
   16370:	vldr	d9, [pc, #944]	; 16728 <readstat_parse_sav+0x594>
   16374:	vldr	d8, [pc, #948]	; 16730 <readstat_parse_sav+0x59c>
   16378:	mov	r2, #4096	; 0x1000
   1637c:	mov	r5, r3
   16380:	str	r2, [sp, #36]	; 0x24
   16384:	add	r2, sp, #68	; 0x44
   16388:	str	r2, [sp, #44]	; 0x2c
   1638c:	str	fp, [sp, #16]
   16390:	str	r9, [sp, #32]
   16394:	str	r8, [sp, #56]	; 0x38
   16398:	ldr	r2, [sp, #24]
   1639c:	mov	r1, #4
   163a0:	ldr	r0, [sp, #44]	; 0x2c
   163a4:	ldr	r3, [r2, #12]
   163a8:	ldr	r2, [r2, #20]
   163ac:	blx	r3
   163b0:	cmp	r0, #3
   163b4:	bls	16404 <readstat_parse_sav+0x270>
   163b8:	ldrb	r3, [sl, #436]	; 0x1b4
   163bc:	tst	r3, #1
   163c0:	bne	165d0 <readstat_parse_sav+0x43c>
   163c4:	ldr	r3, [sp, #68]	; 0x44
   163c8:	cmp	r3, #6
   163cc:	beq	165e0 <readstat_parse_sav+0x44c>
   163d0:	bhi	16438 <readstat_parse_sav+0x2a4>
   163d4:	cmp	r3, #2
   163d8:	beq	1669c <readstat_parse_sav+0x508>
   163dc:	cmp	r3, #3
   163e0:	bne	16714 <readstat_parse_sav+0x580>
   163e4:	ldr	r4, [sl, #36]	; 0x24
   163e8:	mov	r1, #4
   163ec:	add	r0, sp, #72	; 0x48
   163f0:	ldr	r3, [r4, #12]
   163f4:	ldr	r2, [r4, #20]
   163f8:	blx	r3
   163fc:	cmp	r0, #3
   16400:	bhi	16a18 <readstat_parse_sav+0x884>
   16404:	ldr	fp, [sp, #16]
   16408:	mov	r3, #2
   1640c:	mov	r4, r3
   16410:	mov	r0, r5
   16414:	bl	3ec0 <free@plt>
   16418:	mov	r9, r4
   1641c:	b	162bc <readstat_parse_sav+0x128>
   16420:	ldr	r3, [r4, #44]	; 0x2c
   16424:	cmp	r3, #0
   16428:	strgt	r3, [sl, #356]	; 0x164
   1642c:	b	162a8 <readstat_parse_sav+0x114>
   16430:	mov	r9, #5
   16434:	b	162e4 <readstat_parse_sav+0x150>
   16438:	cmp	r3, #7
   1643c:	beq	16744 <readstat_parse_sav+0x5b0>
   16440:	ldr	r2, [pc, #752]	; 16738 <readstat_parse_sav+0x5a4>
   16444:	ldr	fp, [sp, #16]
   16448:	cmp	r3, r2
   1644c:	ldr	r9, [sp, #32]
   16450:	ldr	r8, [sp, #56]	; 0x38
   16454:	bne	165c4 <readstat_parse_sav+0x430>
   16458:	ldr	r3, [sl, #36]	; 0x24
   1645c:	add	r2, sp, #536	; 0x218
   16460:	str	r2, [sp, #16]
   16464:	mov	r0, r2
   16468:	ldr	r4, [r3, #12]
   1646c:	ldr	r2, [r3, #20]
   16470:	mov	r1, #4
   16474:	blx	r4
   16478:	cmp	r0, #3
   1647c:	bls	16408 <readstat_parse_sav+0x274>
   16480:	mov	r0, r5
   16484:	bl	3ec0 <free@plt>
   16488:	ldr	r7, [sl, #340]	; 0x154
   1648c:	mov	r4, #0
   16490:	cmp	r7, r4
   16494:	str	r4, [sl, #348]	; 0x15c
   16498:	ldrgt	r3, [sl, #44]	; 0x2c
   1649c:	movgt	r5, r4
   164a0:	movgt	r2, #252	; 0xfc
   164a4:	strgt	r3, [sp, #20]
   164a8:	ble	164f8 <readstat_parse_sav+0x364>
   164ac:	ldr	r3, [sp, #20]
   164b0:	mov	r1, r2
   164b4:	ldr	r6, [r3, r5, lsl #2]
   164b8:	ldr	r3, [r6, #20]
   164bc:	cmp	r3, #0
   164c0:	add	r0, r3, #251	; 0xfb
   164c4:	beq	164d8 <readstat_parse_sav+0x344>
   164c8:	str	r2, [sp, #24]
   164cc:	bl	230cc <__udivsi3>
   164d0:	ldr	r2, [sp, #24]
   164d4:	str	r0, [r6, #48]	; 0x30
   164d8:	ldr	r3, [r6, #48]	; 0x30
   164dc:	str	r4, [r6, #8]
   164e0:	add	r5, r5, r3
   164e4:	cmp	r5, r7
   164e8:	add	r3, r4, #1
   164ec:	mov	r4, r3
   164f0:	blt	164ac <readstat_parse_sav+0x318>
   164f4:	str	r3, [sl, #348]	; 0x15c
   164f8:	mov	r1, #4
   164fc:	ldr	r0, [sl, #348]	; 0x15c
   16500:	bl	3fc8 <readstat_calloc@plt>
   16504:	ldr	r4, [sl, #348]	; 0x15c
   16508:	cmp	r4, #0
   1650c:	str	r0, [sl, #52]	; 0x34
   16510:	bne	16830 <readstat_parse_sav+0x69c>
   16514:	mov	r9, #5
   16518:	b	162bc <readstat_parse_sav+0x128>
   1651c:	add	r3, r7, #5
   16520:	cmp	fp, r3
   16524:	str	r6, [r4, #52]	; 0x34
   16528:	bcc	165b8 <readstat_parse_sav+0x424>
   1652c:	ldrb	r3, [sl, #436]	; 0x1b4
   16530:	ldr	r7, [r7, #1]
   16534:	tst	r3, #1
   16538:	beq	16548 <readstat_parse_sav+0x3b4>
   1653c:	mov	r0, r7
   16540:	bl	3d94 <byteswap4@plt>
   16544:	mov	r7, r0
   16548:	ldr	ip, [sp, #280]	; 0x118
   1654c:	add	r4, r4, #88	; 0x58
   16550:	add	ip, ip, #4
   16554:	str	ip, [sp, #280]	; 0x118
   16558:	mov	r8, #0
   1655c:	b	1658c <readstat_parse_sav+0x3f8>
   16560:	cmp	fp, ip
   16564:	bcc	165b8 <readstat_parse_sav+0x424>
   16568:	ldr	ip, [sl, #336]	; 0x150
   1656c:	add	r4, r4, #33	; 0x21
   16570:	str	ip, [sp]
   16574:	bl	4238 <readstat_convert@plt>
   16578:	cmp	r0, #0
   1657c:	bne	17780 <readstat_parse_sav+0x15ec>
   16580:	ldr	ip, [sp, #280]	; 0x118
   16584:	add	ip, ip, r7
   16588:	str	ip, [sp, #280]	; 0x118
   1658c:	cmp	r8, r6
   16590:	mov	r2, ip
   16594:	mov	r0, r4
   16598:	mov	r3, r7
   1659c:	mov	r1, #33	; 0x21
   165a0:	add	ip, ip, r7
   165a4:	add	r8, r8, #1
   165a8:	bcc	16560 <readstat_parse_sav+0x3cc>
   165ac:	ldr	r8, [sl, #340]	; 0x154
   165b0:	cmp	r5, r8
   165b4:	bne	1745c <readstat_parse_sav+0x12c8>
   165b8:	ldr	r3, [sp, #20]
   165bc:	ldr	fp, [sp, #16]
   165c0:	mov	r5, r3
   165c4:	mov	r3, #5
   165c8:	mov	r4, r3
   165cc:	b	16410 <readstat_parse_sav+0x27c>
   165d0:	ldr	r0, [sp, #68]	; 0x44
   165d4:	bl	3d94 <byteswap4@plt>
   165d8:	str	r0, [sp, #68]	; 0x44
   165dc:	b	163c4 <readstat_parse_sav+0x230>
   165e0:	ldr	r3, [sl, #4]
   165e4:	cmp	r3, #0
   165e8:	beq	168f0 <readstat_parse_sav+0x75c>
   165ec:	ldr	r7, [sl, #36]	; 0x24
   165f0:	mov	r1, #4
   165f4:	add	r0, sp, #88	; 0x58
   165f8:	ldr	r3, [r7, #12]
   165fc:	ldr	r2, [r7, #20]
   16600:	blx	r3
   16604:	cmp	r0, #3
   16608:	bls	16404 <readstat_parse_sav+0x270>
   1660c:	ldrb	r3, [sl, #436]	; 0x1b4
   16610:	tst	r3, #1
   16614:	bne	16f68 <readstat_parse_sav+0xdd4>
   16618:	mov	r4, #0
   1661c:	add	r8, sp, #280	; 0x118
   16620:	add	r9, sp, #536	; 0x218
   16624:	ldr	fp, [pc, #272]	; 1673c <readstat_parse_sav+0x5a8>
   16628:	b	16640 <readstat_parse_sav+0x4ac>
   1662c:	ldr	r3, [sl, #4]
   16630:	ldr	r2, [sl, #40]	; 0x28
   16634:	blx	r3
   16638:	cmp	r0, #0
   1663c:	bne	16f58 <readstat_parse_sav+0xdc4>
   16640:	ldr	r3, [sp, #88]	; 0x58
   16644:	mov	r1, #80	; 0x50
   16648:	cmp	r4, r3
   1664c:	mov	r0, r8
   16650:	bcs	16398 <readstat_parse_sav+0x204>
   16654:	ldr	r3, [r7, #12]
   16658:	ldr	r2, [r7, #20]
   1665c:	blx	r3
   16660:	mov	r3, #80	; 0x50
   16664:	mov	r2, r8
   16668:	mov	r1, fp
   1666c:	cmp	r0, #79	; 0x4f
   16670:	mov	r0, r9
   16674:	ble	16404 <readstat_parse_sav+0x270>
   16678:	ldr	ip, [sl, #336]	; 0x150
   1667c:	str	ip, [sp]
   16680:	bl	4238 <readstat_convert@plt>
   16684:	mov	r1, r9
   16688:	subs	r6, r0, #0
   1668c:	mov	r0, r4
   16690:	add	r4, r4, #1
   16694:	beq	1662c <readstat_parse_sav+0x498>
   16698:	b	16900 <readstat_parse_sav+0x76c>
   1669c:	ldr	r3, [sl, #48]	; 0x30
   166a0:	ldr	r1, [sl, #340]	; 0x154
   166a4:	add	r4, sp, #536	; 0x218
   166a8:	cmp	r1, r3
   166ac:	mov	r3, #0
   166b0:	ldr	r6, [sl, #36]	; 0x24
   166b4:	str	r3, [r4, #4]
   166b8:	str	r3, [sp, #536]	; 0x218
   166bc:	str	r3, [r4, #8]
   166c0:	str	r3, [r4, #12]
   166c4:	str	r3, [r4, #16]
   166c8:	str	r3, [r4, #20]
   166cc:	str	r3, [r4, #24]
   166d0:	beq	169b0 <readstat_parse_sav+0x81c>
   166d4:	mov	r0, r4
   166d8:	ldr	r3, [r6, #12]
   166dc:	ldr	r2, [r6, #20]
   166e0:	mov	r1, #28
   166e4:	blx	r3
   166e8:	cmp	r0, #27
   166ec:	bhi	1690c <readstat_parse_sav+0x778>
   166f0:	mov	r3, #2
   166f4:	ldr	fp, [sp, #16]
   166f8:	mov	r4, r3
   166fc:	mov	r7, #0
   16700:	mov	r0, r7
   16704:	bl	4418 <spss_varinfo_free@plt>
   16708:	b	16410 <readstat_parse_sav+0x27c>
   1670c:	ldr	r5, [sp, #20]
   16710:	beq	16398 <readstat_parse_sav+0x204>
   16714:	ldr	fp, [sp, #16]
   16718:	b	165c4 <readstat_parse_sav+0x430>
   1671c:	nop			; (mov r0, r0)
   16720:	.word	0x00000000
   16724:	.word	0x7ff80000
   16728:	.word	0x00000000
   1672c:	.word	0xfff00000
   16730:	.word	0x00000000
   16734:	.word	0x7ff00000
   16738:	.word	0x000003e7
   1673c:	.word	0x00000141
   16740:	.word	0x00000101
   16744:	ldr	r2, [sp, #24]
   16748:	add	r6, sp, #76	; 0x4c
   1674c:	mov	r0, r6
   16750:	ldr	r3, [r2, #12]
   16754:	mov	r1, #12
   16758:	ldr	r2, [r2, #20]
   1675c:	blx	r3
   16760:	cmp	r0, #11
   16764:	bls	16404 <readstat_parse_sav+0x270>
   16768:	ldrb	r3, [sl, #436]	; 0x1b4
   1676c:	tst	r3, #1
   16770:	beq	16790 <readstat_parse_sav+0x5fc>
   16774:	mov	r4, #0
   16778:	ldr	r0, [r6, r4, lsl #2]
   1677c:	bl	3d94 <byteswap4@plt>
   16780:	str	r0, [r6, r4, lsl #2]
   16784:	add	r4, r4, #1
   16788:	cmp	r4, #3
   1678c:	bne	16778 <readstat_parse_sav+0x5e4>
   16790:	ldr	r7, [sp, #80]	; 0x50
   16794:	ldr	r6, [sp, #84]	; 0x54
   16798:	ldr	r3, [sp, #36]	; 0x24
   1679c:	ldr	r8, [sp, #76]	; 0x4c
   167a0:	mul	r4, r6, r7
   167a4:	cmp	r4, r3
   167a8:	bhi	168cc <readstat_parse_sav+0x738>
   167ac:	cmp	r4, #0
   167b0:	beq	16714 <readstat_parse_sav+0x580>
   167b4:	ldr	r2, [sp, #24]
   167b8:	mov	r1, r4
   167bc:	mov	r0, r5
   167c0:	ldr	r3, [r2, #12]
   167c4:	ldr	r2, [r2, #20]
   167c8:	blx	r3
   167cc:	cmp	r4, r0
   167d0:	bhi	16714 <readstat_parse_sav+0x580>
   167d4:	sub	r8, r8, #4
   167d8:	cmp	r8, #18
   167dc:	addls	pc, pc, r8, lsl #2
   167e0:	b	16398 <readstat_parse_sav+0x204>
   167e4:	b	177f8 <readstat_parse_sav+0x1664>
   167e8:	b	16398 <readstat_parse_sav+0x204>
   167ec:	b	16398 <readstat_parse_sav+0x204>
   167f0:	b	16398 <readstat_parse_sav+0x204>
   167f4:	b	16398 <readstat_parse_sav+0x204>
   167f8:	b	16398 <readstat_parse_sav+0x204>
   167fc:	b	16398 <readstat_parse_sav+0x204>
   16800:	b	17794 <readstat_parse_sav+0x1600>
   16804:	b	16398 <readstat_parse_sav+0x204>
   16808:	b	17360 <readstat_parse_sav+0x11cc>
   1680c:	b	17344 <readstat_parse_sav+0x11b0>
   16810:	b	16398 <readstat_parse_sav+0x204>
   16814:	b	16398 <readstat_parse_sav+0x204>
   16818:	b	16398 <readstat_parse_sav+0x204>
   1681c:	b	16398 <readstat_parse_sav+0x204>
   16820:	b	16398 <readstat_parse_sav+0x204>
   16824:	b	16398 <readstat_parse_sav+0x204>
   16828:	b	1737c <readstat_parse_sav+0x11e8>
   1682c:	b	1743c <readstat_parse_sav+0x12a8>
   16830:	ldr	r3, [sl]
   16834:	cmp	r3, #0
   16838:	beq	17944 <readstat_parse_sav+0x17b0>
   1683c:	mov	r2, #56	; 0x38
   16840:	mov	r1, #0
   16844:	ldr	r0, [sp, #16]
   16848:	bl	42a4 <memset@plt>
   1684c:	ldr	r0, [sl, #352]	; 0x160
   16850:	ldr	r6, [sl, #424]	; 0x1a8
   16854:	cmn	r0, #1
   16858:	ldr	ip, [sl, #324]	; 0x144
   1685c:	ldrne	r0, [sl, #356]	; 0x164
   16860:	add	r3, sp, #544	; 0x220
   16864:	asr	r7, r6, #31
   16868:	ldr	lr, [sl, #336]	; 0x150
   1686c:	asr	r1, r0, #31
   16870:	asr	r5, r4, #31
   16874:	strd	r6, [r3, #16]
   16878:	add	r2, r8, #109	; 0x6d
   1687c:	ldr	r7, [sl, #432]	; 0x1b0
   16880:	ldr	r8, [sl, #56]	; 0x38
   16884:	str	ip, [sp, #552]	; 0x228
   16888:	str	ip, [sp, #556]	; 0x22c
   1688c:	add	r6, sl, #64	; 0x40
   16890:	ldr	ip, [sl, #428]	; 0x1ac
   16894:	strd	r0, [r3, #-8]
   16898:	str	lr, [sp]
   1689c:	mov	r0, r6
   168a0:	strd	r4, [r3]
   168a4:	ldr	r1, [pc, #-364]	; 16740 <readstat_parse_sav+0x5ac>
   168a8:	mov	r3, #64	; 0x40
   168ac:	str	ip, [sp, #568]	; 0x238
   168b0:	str	r7, [sp, #572]	; 0x23c
   168b4:	str	r8, [sp, #584]	; 0x248
   168b8:	bl	4238 <readstat_convert@plt>
   168bc:	cmp	r0, #0
   168c0:	beq	17924 <readstat_parse_sav+0x1790>
   168c4:	mov	r9, r0
   168c8:	b	162bc <readstat_parse_sav+0x128>
   168cc:	mov	r0, r5
   168d0:	mov	r1, r4
   168d4:	bl	42e0 <readstat_realloc@plt>
   168d8:	subs	r5, r0, #0
   168dc:	strne	r4, [sp, #36]	; 0x24
   168e0:	bne	167b4 <readstat_parse_sav+0x620>
   168e4:	ldr	fp, [sp, #16]
   168e8:	mov	r9, #3
   168ec:	b	162bc <readstat_parse_sav+0x128>
   168f0:	mov	r0, sl
   168f4:	bl	15818 <sav_skip_document_record>
   168f8:	subs	r6, r0, #0
   168fc:	beq	16398 <readstat_parse_sav+0x204>
   16900:	ldr	fp, [sp, #16]
   16904:	mov	r4, r6
   16908:	b	16410 <readstat_parse_sav+0x27c>
   1690c:	ldrb	r3, [sl, #436]	; 0x1b4
   16910:	ldr	r0, [sp, #548]	; 0x224
   16914:	tst	r3, #1
   16918:	bne	17338 <readstat_parse_sav+0x11a4>
   1691c:	tst	r3, #1
   16920:	str	r0, [sp, #548]	; 0x224
   16924:	ldr	r0, [sp, #552]	; 0x228
   16928:	bne	1732c <readstat_parse_sav+0x1198>
   1692c:	tst	r3, #1
   16930:	str	r0, [sp, #552]	; 0x228
   16934:	ldreq	r4, [sp, #536]	; 0x218
   16938:	bne	17048 <readstat_parse_sav+0xeb4>
   1693c:	cmp	r4, #0
   16940:	blt	169e4 <readstat_parse_sav+0x850>
   16944:	mov	r1, #280	; 0x118
   16948:	mov	r0, #1
   1694c:	bl	3fc8 <readstat_calloc@plt>
   16950:	subs	r7, r0, #0
   16954:	beq	169d0 <readstat_parse_sav+0x83c>
   16958:	ldr	r0, [sl, #344]	; 0x158
   1695c:	ldr	ip, [sl, #340]	; 0x154
   16960:	mov	r3, #1
   16964:	mvn	r2, #0
   16968:	mov	r1, #0
   1696c:	add	r8, sp, #556	; 0x22c
   16970:	str	r0, [r7, #12]
   16974:	str	r3, [r7, #16]
   16978:	str	r3, [r7, #48]	; 0x30
   1697c:	str	r2, [r7, #4]
   16980:	str	ip, [r7, #8]
   16984:	mov	r2, r8
   16988:	str	r1, [sp]
   1698c:	mov	r3, #8
   16990:	mov	r1, #9
   16994:	add	r0, r7, #187	; 0xbb
   16998:	bl	4238 <readstat_convert@plt>
   1699c:	subs	r6, r0, #0
   169a0:	beq	16f78 <readstat_parse_sav+0xde4>
   169a4:	ldr	fp, [sp, #16]
   169a8:	mov	r4, r6
   169ac:	b	16700 <readstat_parse_sav+0x56c>
   169b0:	lsl	r3, r1, #1
   169b4:	ldr	r0, [sl, #44]	; 0x2c
   169b8:	str	r3, [sl, #48]	; 0x30
   169bc:	lsl	r1, r1, #3
   169c0:	bl	42e0 <readstat_realloc@plt>
   169c4:	cmp	r0, #0
   169c8:	str	r0, [sl, #44]	; 0x2c
   169cc:	bne	166d4 <readstat_parse_sav+0x540>
   169d0:	mov	r3, #3
   169d4:	ldr	fp, [sp, #16]
   169d8:	mov	r4, r3
   169dc:	mov	r7, #0
   169e0:	b	16700 <readstat_parse_sav+0x56c>
   169e4:	ldr	r3, [sl, #340]	; 0x154
   169e8:	cmp	r3, #0
   169ec:	beq	16714 <readstat_parse_sav+0x580>
   169f0:	ldr	r1, [sl, #44]	; 0x2c
   169f4:	sub	r3, r3, #-1073741823	; 0xc0000001
   169f8:	ldr	r2, [sl, #344]	; 0x158
   169fc:	ldr	r1, [r1, r3, lsl #2]
   16a00:	add	r3, r2, #1
   16a04:	str	r3, [sl, #344]	; 0x158
   16a08:	ldr	r3, [r1, #16]
   16a0c:	add	r3, r3, #1
   16a10:	str	r3, [r1, #16]
   16a14:	b	16398 <readstat_parse_sav+0x204>
   16a18:	ldrb	r3, [sl, #436]	; 0x1b4
   16a1c:	tst	r3, #1
   16a20:	bne	16f48 <readstat_parse_sav+0xdb4>
   16a24:	ldr	r0, [sp, #72]	; 0x48
   16a28:	cmp	r0, #0
   16a2c:	moveq	r8, r0
   16a30:	bne	16b54 <readstat_parse_sav+0x9c0>
   16a34:	ldr	r3, [r4, #12]
   16a38:	ldr	r2, [r4, #20]
   16a3c:	mov	r1, #4
   16a40:	add	r0, sp, #88	; 0x58
   16a44:	blx	r3
   16a48:	cmp	r0, #3
   16a4c:	bhi	16aa8 <readstat_parse_sav+0x914>
   16a50:	mov	r6, #2
   16a54:	cmp	r8, #0
   16a58:	beq	16900 <readstat_parse_sav+0x76c>
   16a5c:	ldr	r2, [sp, #72]	; 0x48
   16a60:	cmp	r2, #0
   16a64:	movne	r7, r8
   16a68:	movne	r4, #0
   16a6c:	beq	16a94 <readstat_parse_sav+0x900>
   16a70:	ldr	r3, [r7, #64]	; 0x40
   16a74:	add	r4, r4, #1
   16a78:	subs	r0, r3, #0
   16a7c:	beq	16a88 <readstat_parse_sav+0x8f4>
   16a80:	bl	3ec0 <free@plt>
   16a84:	ldr	r2, [sp, #72]	; 0x48
   16a88:	cmp	r4, r2
   16a8c:	add	r7, r7, #72	; 0x48
   16a90:	bcc	16a70 <readstat_parse_sav+0x8dc>
   16a94:	mov	r0, r8
   16a98:	bl	3ec0 <free@plt>
   16a9c:	cmp	r6, #0
   16aa0:	beq	16398 <readstat_parse_sav+0x204>
   16aa4:	b	16900 <readstat_parse_sav+0x76c>
   16aa8:	ldrb	r3, [sl, #436]	; 0x1b4
   16aac:	tst	r3, #1
   16ab0:	beq	16ac0 <readstat_parse_sav+0x92c>
   16ab4:	ldr	r0, [sp, #88]	; 0x58
   16ab8:	bl	3d94 <byteswap4@plt>
   16abc:	str	r0, [sp, #88]	; 0x58
   16ac0:	ldr	r1, [sp, #88]	; 0x58
   16ac4:	cmp	r1, #4
   16ac8:	movne	r6, #5
   16acc:	bne	16a54 <readstat_parse_sav+0x8c0>
   16ad0:	ldr	r3, [r4, #12]
   16ad4:	ldr	r2, [r4, #20]
   16ad8:	add	r0, sp, #76	; 0x4c
   16adc:	blx	r3
   16ae0:	cmp	r0, #3
   16ae4:	bls	16a50 <readstat_parse_sav+0x8bc>
   16ae8:	ldrb	r3, [sl, #436]	; 0x1b4
   16aec:	tst	r3, #1
   16af0:	beq	16b00 <readstat_parse_sav+0x96c>
   16af4:	ldr	r0, [sp, #76]	; 0x4c
   16af8:	bl	3d94 <byteswap4@plt>
   16afc:	str	r0, [sp, #76]	; 0x4c
   16b00:	ldr	fp, [sp, #76]	; 0x4c
   16b04:	cmp	fp, #0
   16b08:	beq	16c44 <readstat_parse_sav+0xab0>
   16b0c:	lsl	r0, fp, #2
   16b10:	bl	422c <readstat_malloc@plt>
   16b14:	subs	fp, r0, #0
   16b18:	beq	16f40 <readstat_parse_sav+0xdac>
   16b1c:	ldr	r1, [sp, #76]	; 0x4c
   16b20:	ldr	r3, [r4, #12]
   16b24:	ldr	r2, [r4, #20]
   16b28:	lsl	r1, r1, #2
   16b2c:	blx	r3
   16b30:	ldr	r3, [sp, #76]	; 0x4c
   16b34:	cmp	r0, r3, lsl #2
   16b38:	bcs	16c64 <readstat_parse_sav+0xad0>
   16b3c:	mov	r0, fp
   16b40:	bl	3ec0 <free@plt>
   16b44:	cmp	r8, #0
   16b48:	beq	16404 <readstat_parse_sav+0x270>
   16b4c:	mov	r6, #2
   16b50:	b	16a5c <readstat_parse_sav+0x8c8>
   16b54:	mov	r1, #72	; 0x48
   16b58:	bl	3fc8 <readstat_calloc@plt>
   16b5c:	subs	r8, r0, #0
   16b60:	beq	16f30 <readstat_parse_sav+0xd9c>
   16b64:	add	r3, sp, #536	; 0x218
   16b68:	mov	r9, #0
   16b6c:	mov	r7, r8
   16b70:	str	r3, [sp, #20]
   16b74:	add	fp, sp, #280	; 0x118
   16b78:	b	16b94 <readstat_parse_sav+0xa00>
   16b7c:	ldr	ip, [sl, #336]	; 0x150
   16b80:	add	r7, r7, #72	; 0x48
   16b84:	str	ip, [sp]
   16b88:	bl	4238 <readstat_convert@plt>
   16b8c:	cmp	r0, #0
   16b90:	bne	16dcc <readstat_parse_sav+0xc38>
   16b94:	ldr	r3, [sp, #72]	; 0x48
   16b98:	mov	r1, #8
   16b9c:	cmp	r9, r3
   16ba0:	mov	r0, r7
   16ba4:	bcs	16a34 <readstat_parse_sav+0x8a0>
   16ba8:	mov	r3, #0
   16bac:	strb	r3, [sp, #536]	; 0x218
   16bb0:	ldr	r3, [r4, #12]
   16bb4:	ldr	r2, [r4, #20]
   16bb8:	blx	r3
   16bbc:	mov	r1, #1
   16bc0:	add	r9, r9, r1
   16bc4:	cmp	r0, #7
   16bc8:	ldr	r0, [sp, #20]
   16bcc:	ble	16b4c <readstat_parse_sav+0x9b8>
   16bd0:	ldr	r3, [r4, #12]
   16bd4:	ldr	r2, [r4, #20]
   16bd8:	blx	r3
   16bdc:	cmp	r0, #0
   16be0:	mov	r0, fp
   16be4:	ble	16b4c <readstat_parse_sav+0x9b8>
   16be8:	ldrb	r6, [sp, #536]	; 0x218
   16bec:	ldr	r3, [r4, #12]
   16bf0:	ldr	r2, [r4, #20]
   16bf4:	add	r6, r6, #8
   16bf8:	bic	r6, r6, #7
   16bfc:	sub	r6, r6, #1
   16c00:	mov	r1, r6
   16c04:	blx	r3
   16c08:	lsl	r1, r6, #2
   16c0c:	add	r1, r1, #1
   16c10:	str	r1, [sp, #28]
   16c14:	cmp	r6, r0
   16c18:	mov	r0, r1
   16c1c:	bhi	16b4c <readstat_parse_sav+0x9b8>
   16c20:	bl	422c <readstat_malloc@plt>
   16c24:	mov	r3, r6
   16c28:	mov	r2, fp
   16c2c:	ldr	r1, [sp, #28]
   16c30:	cmp	r0, #0
   16c34:	str	r0, [r7, #64]	; 0x40
   16c38:	bne	16b7c <readstat_parse_sav+0x9e8>
   16c3c:	mov	r6, #3
   16c40:	b	16a5c <readstat_parse_sav+0x8c8>
   16c44:	ldr	r3, [r4, #12]
   16c48:	ldr	r2, [r4, #20]
   16c4c:	mov	r1, fp
   16c50:	mov	r0, fp
   16c54:	blx	r3
   16c58:	ldr	r3, [sp, #76]	; 0x4c
   16c5c:	cmp	r0, r3, lsl #2
   16c60:	bcc	16a50 <readstat_parse_sav+0x8bc>
   16c64:	mov	r6, #0
   16c68:	add	r2, sp, #536	; 0x218
   16c6c:	str	r6, [sp, #28]
   16c70:	str	r2, [sp, #40]	; 0x28
   16c74:	cmp	r6, r3
   16c78:	bcs	16d44 <readstat_parse_sav+0xbb0>
   16c7c:	ldr	r0, [fp, r6, lsl #2]
   16c80:	str	r0, [sp, #536]	; 0x218
   16c84:	ldrb	r3, [sl, #436]	; 0x1b4
   16c88:	tst	r3, #1
   16c8c:	beq	16c98 <readstat_parse_sav+0xb04>
   16c90:	bl	3d94 <byteswap4@plt>
   16c94:	str	r0, [sp, #536]	; 0x218
   16c98:	ldr	r2, [sp, #536]	; 0x218
   16c9c:	ldr	r3, [sl, #44]	; 0x2c
   16ca0:	sub	r2, r2, #1
   16ca4:	str	r2, [sp, #536]	; 0x218
   16ca8:	ldr	r7, [sl, #340]	; 0x154
   16cac:	str	r8, [sp, #20]
   16cb0:	mov	r9, #0
   16cb4:	mov	r8, r6
   16cb8:	mov	r6, r5
   16cbc:	mov	r5, r3
   16cc0:	add	r4, r9, r7
   16cc4:	cmp	r9, r7
   16cc8:	lsr	r4, r4, #1
   16ccc:	ldr	r0, [sp, #40]	; 0x28
   16cd0:	add	r2, r5, r4, lsl #2
   16cd4:	mov	r1, r2
   16cd8:	bcs	16d04 <readstat_parse_sav+0xb70>
   16cdc:	str	r2, [sp, #48]	; 0x30
   16ce0:	bl	4208 <spss_varinfo_compare@plt>
   16ce4:	cmp	r0, #0
   16ce8:	blt	16cfc <readstat_parse_sav+0xb68>
   16cec:	add	r9, r4, #1
   16cf0:	ldr	r2, [sp, #48]	; 0x30
   16cf4:	mov	r4, r7
   16cf8:	beq	16d1c <readstat_parse_sav+0xb88>
   16cfc:	mov	r7, r4
   16d00:	b	16cc0 <readstat_parse_sav+0xb2c>
   16d04:	mov	r5, r6
   16d08:	mov	r6, r8
   16d0c:	ldr	r8, [sp, #20]
   16d10:	ldr	r3, [sp, #76]	; 0x4c
   16d14:	add	r6, r6, #1
   16d18:	b	16c74 <readstat_parse_sav+0xae0>
   16d1c:	cmp	r2, #0
   16d20:	mov	r5, r6
   16d24:	ldrne	r3, [r2]
   16d28:	ldrne	r2, [sl, #368]	; 0x170
   16d2c:	mov	r6, r8
   16d30:	ldrne	r1, [r3]
   16d34:	ldr	r8, [sp, #20]
   16d38:	strne	r1, [sp, #28]
   16d3c:	strne	r2, [r3, #4]
   16d40:	b	16d10 <readstat_parse_sav+0xb7c>
   16d44:	vldr	d11, [pc, #900]	; 170d0 <readstat_parse_sav+0xf3c>
   16d48:	mov	r3, #0
   16d4c:	str	r3, [sp, #20]
   16d50:	mov	r9, r8
   16d54:	add	r3, sp, #536	; 0x218
   16d58:	mov	r4, r8
   16d5c:	str	r3, [sp, #48]	; 0x30
   16d60:	add	r3, sl, #400	; 0x190
   16d64:	str	r3, [sp, #40]	; 0x28
   16d68:	ldr	r3, [sp, #72]	; 0x48
   16d6c:	ldr	r2, [sp, #20]
   16d70:	cmp	r2, r3
   16d74:	bcs	16f28 <readstat_parse_sav+0xd94>
   16d78:	ldr	r3, [sp, #28]
   16d7c:	vstr	d11, [sp, #536]	; 0x218
   16d80:	cmp	r3, #5
   16d84:	str	r3, [r4, #56]	; 0x38
   16d88:	beq	16e80 <readstat_parse_sav+0xcec>
   16d8c:	ldr	r3, [sl, #336]	; 0x150
   16d90:	add	r7, r4, #8
   16d94:	str	r3, [sp]
   16d98:	mov	r0, r7
   16d9c:	mov	r3, #8
   16da0:	mov	r2, r4
   16da4:	mov	r1, #33	; 0x21
   16da8:	bl	4238 <readstat_convert@plt>
   16dac:	cmp	r0, #0
   16db0:	bne	16dd4 <readstat_parse_sav+0xc40>
   16db4:	str	r7, [r4, #48]	; 0x30
   16db8:	ldr	r3, [sp, #20]
   16dbc:	add	r4, r4, #72	; 0x48
   16dc0:	add	r3, r3, #1
   16dc4:	str	r3, [sp, #20]
   16dc8:	b	16d68 <readstat_parse_sav+0xbd4>
   16dcc:	mov	r6, r0
   16dd0:	b	16a5c <readstat_parse_sav+0x8c8>
   16dd4:	mov	r6, r0
   16dd8:	ldr	r3, [sl, #20]
   16ddc:	cmp	r3, #0
   16de0:	beq	16e58 <readstat_parse_sav+0xcc4>
   16de4:	ldr	r2, [pc, #748]	; 170d8 <readstat_parse_sav+0xf44>
   16de8:	ldr	ip, [sp, #72]	; 0x48
   16dec:	add	r4, sp, #536	; 0x218
   16df0:	mov	r0, r4
   16df4:	ldr	r3, [sl, #368]	; 0x170
   16df8:	add	r2, pc, r2
   16dfc:	mov	r1, #256	; 0x100
   16e00:	str	ip, [sp, #20]
   16e04:	bl	4280 <snprintf@plt>
   16e08:	mov	r7, #0
   16e0c:	ldr	r1, [sp, #20]
   16e10:	add	r2, r9, #56	; 0x38
   16e14:	cmp	r1, r7
   16e18:	add	r3, r9, #48	; 0x30
   16e1c:	add	r7, r7, #1
   16e20:	ble	16e58 <readstat_parse_sav+0xcc4>
   16e24:	ldr	r1, [sl, #40]	; 0x28
   16e28:	add	r9, r9, #72	; 0x48
   16e2c:	str	r1, [sp, #12]
   16e30:	ldr	r1, [r9, #-8]
   16e34:	str	r1, [sp, #8]
   16e38:	ldm	r2, {r0, r1}
   16e3c:	stm	sp, {r0, r1}
   16e40:	mov	r0, r4
   16e44:	ldm	r3, {r2, r3}
   16e48:	ldr	r1, [sl, #20]
   16e4c:	blx	r1
   16e50:	cmp	r0, #0
   16e54:	beq	16e0c <readstat_parse_sav+0xc78>
   16e58:	ldr	r3, [sl, #368]	; 0x170
   16e5c:	cmp	fp, #0
   16e60:	add	r3, r3, #1
   16e64:	str	r3, [sl, #368]	; 0x170
   16e68:	beq	16e74 <readstat_parse_sav+0xce0>
   16e6c:	mov	r0, fp
   16e70:	bl	3ec0 <free@plt>
   16e74:	cmp	r8, #0
   16e78:	bne	16a5c <readstat_parse_sav+0x8c8>
   16e7c:	b	16a9c <readstat_parse_sav+0x908>
   16e80:	ldr	r0, [r4]
   16e84:	ldr	r1, [r4, #4]
   16e88:	ldr	r3, [sp, #48]	; 0x30
   16e8c:	stmia	r3!, {r0, r1}
   16e90:	ldrb	r3, [sl, #436]	; 0x1b4
   16e94:	tst	r3, #1
   16e98:	beq	16ea8 <readstat_parse_sav+0xd14>
   16e9c:	vldr	d0, [sp, #536]	; 0x218
   16ea0:	bl	4508 <byteswap_double@plt>
   16ea4:	vstr	d0, [sp, #536]	; 0x218
   16ea8:	add	r7, sp, #536	; 0x218
   16eac:	ldrd	r6, [r7]
   16eb0:	ldr	r1, [sp, #40]	; 0x28
   16eb4:	strd	r6, [r4, #48]	; 0x30
   16eb8:	ldrd	r0, [r1, #-8]
   16ebc:	vmov	d7, r6, r7
   16ec0:	mov	r3, r7
   16ec4:	cmp	r7, r1
   16ec8:	cmpeq	r6, r0
   16ecc:	vcmp.f64	d7, d7
   16ed0:	ldrbeq	r1, [r4, #61]	; 0x3d
   16ed4:	orreq	r1, r1, #1
   16ed8:	strbeq	r1, [r4, #61]	; 0x3d
   16edc:	ldr	r1, [sp, #40]	; 0x28
   16ee0:	ldrd	r0, [r1]
   16ee4:	cmp	r7, r1
   16ee8:	cmpeq	r6, r0
   16eec:	ldrbeq	r1, [r4, #61]	; 0x3d
   16ef0:	orreq	r1, r1, #1
   16ef4:	strbeq	r1, [r4, #61]	; 0x3d
   16ef8:	add	r1, sl, #416	; 0x1a0
   16efc:	ldrd	r0, [r1, #-8]
   16f00:	cmp	r7, r1
   16f04:	cmpeq	r6, r0
   16f08:	ldrbeq	r3, [r4, #61]	; 0x3d
   16f0c:	orreq	r3, r3, #1
   16f10:	strbeq	r3, [r4, #61]	; 0x3d
   16f14:	vmrs	APSR_nzcv, fpscr
   16f18:	ldrbvs	r3, [r4, #61]	; 0x3d
   16f1c:	orrvs	r3, r3, #1
   16f20:	strbvs	r3, [r4, #61]	; 0x3d
   16f24:	b	16db8 <readstat_parse_sav+0xc24>
   16f28:	ldr	r6, [sp, #32]
   16f2c:	b	16dd8 <readstat_parse_sav+0xc44>
   16f30:	ldr	fp, [sp, #16]
   16f34:	mov	r3, #3
   16f38:	mov	r4, r3
   16f3c:	b	16410 <readstat_parse_sav+0x27c>
   16f40:	mov	r6, #3
   16f44:	b	16a54 <readstat_parse_sav+0x8c0>
   16f48:	ldr	r0, [sp, #72]	; 0x48
   16f4c:	bl	3d94 <byteswap4@plt>
   16f50:	str	r0, [sp, #72]	; 0x48
   16f54:	b	16a24 <readstat_parse_sav+0x890>
   16f58:	mov	r3, #4
   16f5c:	ldr	fp, [sp, #16]
   16f60:	mov	r4, r3
   16f64:	b	16410 <readstat_parse_sav+0x27c>
   16f68:	ldr	r0, [sp, #88]	; 0x58
   16f6c:	bl	3d94 <byteswap4@plt>
   16f70:	str	r0, [sp, #88]	; 0x58
   16f74:	b	16618 <readstat_parse_sav+0x484>
   16f78:	str	r6, [sp]
   16f7c:	mov	r2, r8
   16f80:	mov	r3, #8
   16f84:	mov	r1, #65	; 0x41
   16f88:	add	r0, r7, #196	; 0xc4
   16f8c:	bl	4238 <readstat_convert@plt>
   16f90:	subs	r6, r0, #0
   16f94:	bne	169a4 <readstat_parse_sav+0x810>
   16f98:	ldr	r2, [sp, #548]	; 0x224
   16f9c:	asr	r1, r2, #8
   16fa0:	asr	r3, r2, #16
   16fa4:	uxtb	r1, r1
   16fa8:	uxtb	r3, r3
   16fac:	uxtb	r2, r2
   16fb0:	str	r3, [r7, #24]
   16fb4:	str	r1, [r7, #28]
   16fb8:	str	r2, [r7, #32]
   16fbc:	ldr	r2, [sp, #552]	; 0x228
   16fc0:	asr	r1, r2, #16
   16fc4:	asr	r0, r2, #8
   16fc8:	uxtb	r1, r1
   16fcc:	cmp	r1, #1
   16fd0:	cmpne	r3, #1
   16fd4:	moveq	r3, #1
   16fd8:	movne	r3, #0
   16fdc:	cmp	r4, #0
   16fe0:	moveq	r4, r3
   16fe4:	orrne	r4, r3, #1
   16fe8:	cmp	r4, #0
   16fec:	uxtb	r3, r0
   16ff0:	uxtb	r2, r2
   16ff4:	str	r3, [r7, #40]	; 0x28
   16ff8:	str	r1, [r7, #36]	; 0x24
   16ffc:	moveq	r3, #5
   17000:	str	r2, [r7, #44]	; 0x2c
   17004:	strne	r6, [r7]
   17008:	streq	r3, [r7]
   1700c:	ldr	r3, [sp, #540]	; 0x21c
   17010:	cmp	r3, #0
   17014:	bne	17088 <readstat_parse_sav+0xef4>
   17018:	ldr	r0, [sp, #544]	; 0x220
   1701c:	cmp	r0, #0
   17020:	bne	17058 <readstat_parse_sav+0xec4>
   17024:	ldr	r2, [sl, #340]	; 0x154
   17028:	ldr	r3, [sl, #344]	; 0x158
   1702c:	ldr	r0, [sl, #44]	; 0x2c
   17030:	add	r1, r2, #1
   17034:	add	r3, r3, #1
   17038:	str	r7, [r0, r2, lsl #2]
   1703c:	str	r1, [sl, #340]	; 0x154
   17040:	str	r3, [sl, #344]	; 0x158
   17044:	b	16398 <readstat_parse_sav+0x204>
   17048:	ldr	r0, [sp, #536]	; 0x218
   1704c:	bl	3d94 <byteswap4@plt>
   17050:	mov	r4, r0
   17054:	b	1693c <readstat_parse_sav+0x7a8>
   17058:	ldrb	r3, [sl, #436]	; 0x1b4
   1705c:	tst	r3, #1
   17060:	beq	17068 <readstat_parse_sav+0xed4>
   17064:	bl	3d94 <byteswap4@plt>
   17068:	add	r3, r0, #3
   1706c:	cmp	r3, #6
   17070:	str	r0, [r7, #52]	; 0x34
   17074:	bls	170e8 <readstat_parse_sav+0xf54>
   17078:	mov	r3, #5
   1707c:	ldr	fp, [sp, #16]
   17080:	mov	r4, r3
   17084:	b	16700 <readstat_parse_sav+0x56c>
   17088:	ldr	r6, [sl, #36]	; 0x24
   1708c:	mov	r1, #4
   17090:	add	r0, sp, #280	; 0x118
   17094:	ldr	r3, [r6, #12]
   17098:	ldr	r2, [r6, #20]
   1709c:	blx	r3
   170a0:	cmp	r0, #3
   170a4:	bhi	1717c <readstat_parse_sav+0xfe8>
   170a8:	mov	r3, #2
   170ac:	ldr	fp, [sp, #16]
   170b0:	mov	r4, r3
   170b4:	ldr	r0, [r7, #264]	; 0x108
   170b8:	cmp	r0, #0
   170bc:	beq	16700 <readstat_parse_sav+0x56c>
   170c0:	bl	3ec0 <free@plt>
   170c4:	mov	r3, #0
   170c8:	str	r3, [r7, #264]	; 0x108
   170cc:	b	16700 <readstat_parse_sav+0x56c>
	...
   170d8:	.word	0x0000ddb4
   170dc:	.word	0x0000d80c
   170e0:	.word	0x0000d1a0
   170e4:	.word	0xffffe09c
   170e8:	cmp	r0, #0
   170ec:	movlt	r3, #1
   170f0:	movge	r3, #0
   170f4:	str	r3, [r7, #56]	; 0x38
   170f8:	ldr	r3, [r7]
   170fc:	rsblt	r0, r0, #0
   17100:	strlt	r0, [r7, #52]	; 0x34
   17104:	cmp	r3, #5
   17108:	beq	1727c <readstat_parse_sav+0x10e8>
   1710c:	ldr	r8, [sl, #36]	; 0x24
   17110:	add	r4, r7, #88	; 0x58
   17114:	mov	r9, #0
   17118:	add	fp, sp, #280	; 0x118
   1711c:	ldr	r3, [r7, #52]	; 0x34
   17120:	mov	r1, #8
   17124:	cmp	r9, r3
   17128:	mov	r0, fp
   1712c:	bge	17024 <readstat_parse_sav+0xe90>
   17130:	ldr	r3, [r8, #12]
   17134:	ldr	r2, [r8, #20]
   17138:	blx	r3
   1713c:	add	r9, r9, #1
   17140:	mov	r3, #8
   17144:	mov	r2, fp
   17148:	mov	r1, #33	; 0x21
   1714c:	cmp	r0, #7
   17150:	mov	r0, r4
   17154:	bls	1726c <readstat_parse_sav+0x10d8>
   17158:	ldr	ip, [sl, #336]	; 0x150
   1715c:	add	r4, r4, r1
   17160:	str	ip, [sp]
   17164:	bl	4238 <readstat_convert@plt>
   17168:	cmp	r0, #0
   1716c:	beq	1711c <readstat_parse_sav+0xf88>
   17170:	ldr	fp, [sp, #16]
   17174:	mov	r4, r0
   17178:	b	16700 <readstat_parse_sav+0x56c>
   1717c:	ldrb	r3, [sl, #436]	; 0x1b4
   17180:	ldr	r0, [sp, #280]	; 0x118
   17184:	tst	r3, #1
   17188:	beq	17190 <readstat_parse_sav+0xffc>
   1718c:	bl	3d94 <byteswap4@plt>
   17190:	cmp	r0, #0
   17194:	str	r0, [sp, #280]	; 0x118
   17198:	beq	17018 <readstat_parse_sav+0xe84>
   1719c:	add	r0, r0, #3
   171a0:	bic	r9, r0, #3
   171a4:	mov	r0, r9
   171a8:	bl	422c <readstat_malloc@plt>
   171ac:	subs	r8, r0, #0
   171b0:	beq	1725c <readstat_parse_sav+0x10c8>
   171b4:	ldr	r4, [sp, #280]	; 0x118
   171b8:	lsl	r4, r4, #2
   171bc:	add	r4, r4, #1
   171c0:	mov	r0, r4
   171c4:	bl	422c <readstat_malloc@plt>
   171c8:	cmp	r0, #0
   171cc:	str	r0, [r7, #264]	; 0x108
   171d0:	beq	17244 <readstat_parse_sav+0x10b0>
   171d4:	ldr	r3, [r6, #12]
   171d8:	ldr	r2, [r6, #20]
   171dc:	mov	r1, r9
   171e0:	mov	r0, r8
   171e4:	blx	r3
   171e8:	cmp	r9, r0
   171ec:	bls	17208 <readstat_parse_sav+0x1074>
   171f0:	mov	r0, r8
   171f4:	ldr	fp, [sp, #16]
   171f8:	bl	3ec0 <free@plt>
   171fc:	mov	r3, #2
   17200:	mov	r4, r3
   17204:	b	170b4 <readstat_parse_sav+0xf20>
   17208:	ldr	r3, [sl, #336]	; 0x150
   1720c:	mov	r1, r4
   17210:	str	r3, [sp]
   17214:	mov	r2, r8
   17218:	ldr	r3, [sp, #280]	; 0x118
   1721c:	ldr	r0, [r7, #264]	; 0x108
   17220:	bl	4238 <readstat_convert@plt>
   17224:	mov	r6, r0
   17228:	mov	r0, r8
   1722c:	bl	3ec0 <free@plt>
   17230:	cmp	r6, #0
   17234:	beq	17018 <readstat_parse_sav+0xe84>
   17238:	ldr	fp, [sp, #16]
   1723c:	mov	r4, r6
   17240:	b	170b4 <readstat_parse_sav+0xf20>
   17244:	mov	r0, r8
   17248:	ldr	fp, [sp, #16]
   1724c:	bl	3ec0 <free@plt>
   17250:	mov	r3, #3
   17254:	mov	r4, r3
   17258:	b	170b4 <readstat_parse_sav+0xf20>
   1725c:	mov	r3, #3
   17260:	ldr	fp, [sp, #16]
   17264:	mov	r4, r3
   17268:	b	170b4 <readstat_parse_sav+0xf20>
   1726c:	mov	r3, #2
   17270:	ldr	fp, [sp, #16]
   17274:	mov	r4, r3
   17278:	b	16700 <readstat_parse_sav+0x56c>
   1727c:	ldr	r2, [sl, #36]	; 0x24
   17280:	ldr	r1, [r7, #52]	; 0x34
   17284:	add	r4, r7, #64	; 0x40
   17288:	ldr	r3, [r2, #12]
   1728c:	lsl	r1, r1, #3
   17290:	ldr	r2, [r2, #20]
   17294:	mov	r0, r4
   17298:	blx	r3
   1729c:	ldr	r3, [r7, #52]	; 0x34
   172a0:	cmp	r0, r3, lsl #3
   172a4:	bcc	1726c <readstat_parse_sav+0x10d8>
   172a8:	mov	r8, #0
   172ac:	cmp	r8, r3
   172b0:	add	r6, sl, #400	; 0x190
   172b4:	add	r8, r8, #1
   172b8:	bge	17024 <readstat_parse_sav+0xe90>
   172bc:	ldrb	r3, [sl, #436]	; 0x1b4
   172c0:	tst	r3, #1
   172c4:	beq	172d4 <readstat_parse_sav+0x1140>
   172c8:	vldr	d0, [r4]
   172cc:	bl	4508 <byteswap_double@plt>
   172d0:	vstr	d0, [r4]
   172d4:	ldr	r0, [r4]
   172d8:	ldr	r1, [r4, #4]
   172dc:	add	r3, sp, #280	; 0x118
   172e0:	add	ip, sl, #416	; 0x1a0
   172e4:	stmia	r3!, {r0, r1}
   172e8:	add	r3, sp, #288	; 0x120
   172ec:	ldrd	r0, [r6, #-8]
   172f0:	ldrd	r2, [r3, #-8]
   172f4:	add	r4, r4, #8
   172f8:	cmp	r1, r3
   172fc:	cmpeq	r0, r2
   17300:	ldrd	r0, [r6]
   17304:	vstreq	d10, [r4, #-8]
   17308:	cmp	r3, r1
   1730c:	cmpeq	r2, r0
   17310:	ldrd	r0, [ip, #-8]
   17314:	vstreq	d9, [r4, #-8]
   17318:	cmp	r3, r1
   1731c:	cmpeq	r2, r0
   17320:	ldr	r3, [r7, #52]	; 0x34
   17324:	vstreq	d8, [r4, #-8]
   17328:	b	172ac <readstat_parse_sav+0x1118>
   1732c:	bl	3d94 <byteswap4@plt>
   17330:	ldrb	r3, [sl, #436]	; 0x1b4
   17334:	b	1692c <readstat_parse_sav+0x798>
   17338:	bl	3d94 <byteswap4@plt>
   1733c:	ldrb	r3, [sl, #436]	; 0x1b4
   17340:	b	1691c <readstat_parse_sav+0x788>
   17344:	mov	r1, r6
   17348:	mov	r2, sl
   1734c:	mov	r0, r5
   17350:	bl	42d4 <sav_parse_very_long_string_record@plt>
   17354:	subs	r6, r0, #0
   17358:	beq	16398 <readstat_parse_sav+0x204>
   1735c:	b	16900 <readstat_parse_sav+0x76c>
   17360:	mov	r1, r6
   17364:	mov	r2, sl
   17368:	mov	r0, r5
   1736c:	bl	41f0 <sav_parse_long_variable_names_record@plt>
   17370:	subs	r6, r0, #0
   17374:	beq	16398 <readstat_parse_sav+0x204>
   17378:	b	16900 <readstat_parse_sav+0x76c>
   1737c:	ldr	r3, [sl, #20]
   17380:	cmp	r3, #0
   17384:	beq	16398 <readstat_parse_sav+0x204>
   17388:	cmp	r7, #1
   1738c:	bne	16714 <readstat_parse_sav+0x580>
   17390:	add	r3, sp, #280	; 0x118
   17394:	str	r3, [sp, #28]
   17398:	ldr	r3, [pc, #-708]	; 170dc <readstat_parse_sav+0xf48>
   1739c:	add	r4, r5, r4
   173a0:	add	r3, pc, r3
   173a4:	str	r3, [sp, #40]	; 0x28
   173a8:	mov	r6, r5
   173ac:	add	r3, sp, #88	; 0x58
   173b0:	mov	r7, #0
   173b4:	str	r3, [sp, #48]	; 0x30
   173b8:	add	r3, sp, #96	; 0x60
   173bc:	str	r5, [sp, #72]	; 0x48
   173c0:	str	r7, [sp, #20]
   173c4:	str	r3, [sp, #52]	; 0x34
   173c8:	cmp	r4, r6
   173cc:	bls	17734 <readstat_parse_sav+0x15a0>
   173d0:	mov	r2, #256	; 0x100
   173d4:	mov	r1, #0
   173d8:	ldr	r0, [sp, #28]
   173dc:	add	r8, sp, #536	; 0x218
   173e0:	bl	42a4 <memset@plt>
   173e4:	sub	r2, r4, r6
   173e8:	mov	r0, r8
   173ec:	mov	r3, sl
   173f0:	add	r1, sp, #72	; 0x48
   173f4:	bl	56c4 <sav_read_pascal_string.constprop.5>
   173f8:	subs	r6, r0, #0
   173fc:	bne	176f0 <readstat_parse_sav+0x155c>
   17400:	mov	r9, r6
   17404:	ldr	fp, [sl, #340]	; 0x154
   17408:	b	1742c <readstat_parse_sav+0x1298>
   1740c:	ldr	r3, [sl, #44]	; 0x2c
   17410:	ldr	r6, [r3, r9, lsl #2]
   17414:	add	r1, r6, #196	; 0xc4
   17418:	bl	3e00 <strcmp@plt>
   1741c:	cmp	r0, #0
   17420:	beq	174e4 <readstat_parse_sav+0x1350>
   17424:	ldr	r3, [r6, #48]	; 0x30
   17428:	add	r9, r9, r3
   1742c:	cmp	r9, fp
   17430:	mov	r0, r8
   17434:	bcc	1740c <readstat_parse_sav+0x1278>
   17438:	b	17508 <readstat_parse_sav+0x1374>
   1743c:	cmp	r7, #1
   17440:	bne	16714 <readstat_parse_sav+0x580>
   17444:	add	r9, sp, #864	; 0x360
   17448:	add	fp, r5, r4
   1744c:	add	r3, sp, #536	; 0x218
   17450:	str	r5, [r9, #-584]!	; 0xfffffdb8
   17454:	str	r3, [sp, #28]
   17458:	str	r5, [sp, #20]
   1745c:	ldr	r2, [sp, #280]	; 0x118
   17460:	cmp	fp, r2
   17464:	bls	1670c <readstat_parse_sav+0x578>
   17468:	sub	r2, fp, r2
   1746c:	mov	r3, sl
   17470:	mov	r1, r9
   17474:	ldr	r0, [sp, #28]
   17478:	bl	56c4 <sav_read_pascal_string.constprop.5>
   1747c:	cmp	r0, #0
   17480:	bne	17780 <readstat_parse_sav+0x15ec>
   17484:	ldr	r7, [sp, #280]	; 0x118
   17488:	cmp	fp, r7
   1748c:	beq	165b8 <readstat_parse_sav+0x424>
   17490:	add	r3, r7, #1
   17494:	str	r3, [sp, #280]	; 0x118
   17498:	ldrb	r6, [r7]
   1749c:	sub	r3, r6, #1
   174a0:	cmp	r3, #2
   174a4:	bhi	165b8 <readstat_parse_sav+0x424>
   174a8:	mov	r5, r0
   174ac:	ldr	r8, [sl, #340]	; 0x154
   174b0:	b	174d4 <readstat_parse_sav+0x1340>
   174b4:	ldr	r3, [sl, #44]	; 0x2c
   174b8:	ldr	r4, [r3, r5, lsl #2]
   174bc:	add	r1, r4, #196	; 0xc4
   174c0:	bl	3e00 <strcmp@plt>
   174c4:	cmp	r0, #0
   174c8:	beq	1651c <readstat_parse_sav+0x388>
   174cc:	ldr	r3, [r4, #48]	; 0x30
   174d0:	add	r5, r5, r3
   174d4:	cmp	r5, r8
   174d8:	ldr	r0, [sp, #28]
   174dc:	bcc	174b4 <readstat_parse_sav+0x1320>
   174e0:	b	165b0 <readstat_parse_sav+0x41c>
   174e4:	ldr	r1, [sl, #368]	; 0x170
   174e8:	ldr	r2, [sp, #40]	; 0x28
   174ec:	add	r3, r1, #1
   174f0:	str	r3, [sl, #368]	; 0x170
   174f4:	ldr	r0, [sp, #28]
   174f8:	mov	r3, r1
   174fc:	str	r1, [r6, #4]
   17500:	mov	r1, #256	; 0x100
   17504:	bl	4280 <snprintf@plt>
   17508:	ldrb	r3, [sp, #280]	; 0x118
   1750c:	cmp	r3, #0
   17510:	beq	1773c <readstat_parse_sav+0x15a8>
   17514:	ldr	r6, [sp, #72]	; 0x48
   17518:	add	r2, r6, #8
   1751c:	mov	r3, r6
   17520:	cmp	r4, r2
   17524:	add	r6, r6, #4
   17528:	str	r6, [sp, #72]	; 0x48
   1752c:	bcc	1773c <readstat_parse_sav+0x15a8>
   17530:	ldrb	r2, [sl, #436]	; 0x1b4
   17534:	ldr	fp, [r3, #4]
   17538:	tst	r2, #1
   1753c:	beq	17550 <readstat_parse_sav+0x13bc>
   17540:	mov	r0, fp
   17544:	bl	3d94 <byteswap4@plt>
   17548:	ldr	r6, [sp, #72]	; 0x48
   1754c:	mov	fp, r0
   17550:	add	r6, r6, #4
   17554:	str	r6, [sp, #72]	; 0x48
   17558:	mov	r2, r6
   1755c:	mov	r6, r5
   17560:	mov	r5, r4
   17564:	ldr	r4, [sp, #48]	; 0x30
   17568:	mov	r9, #0
   1756c:	cmp	r9, fp
   17570:	beq	17724 <readstat_parse_sav+0x1590>
   17574:	add	r3, r2, #4
   17578:	cmp	r5, r3
   1757c:	bcc	17718 <readstat_parse_sav+0x1584>
   17580:	ldrb	r3, [sl, #436]	; 0x1b4
   17584:	ldr	r8, [r2]
   17588:	tst	r3, #1
   1758c:	beq	175a0 <readstat_parse_sav+0x140c>
   17590:	mov	r0, r8
   17594:	bl	3d94 <byteswap4@plt>
   17598:	ldr	r2, [sp, #72]	; 0x48
   1759c:	mov	r8, r0
   175a0:	lsl	r3, r8, #2
   175a4:	add	r3, r3, #1
   175a8:	add	r2, r2, #4
   175ac:	mov	r1, r3
   175b0:	ldr	r0, [sp, #20]
   175b4:	str	r3, [sp, #60]	; 0x3c
   175b8:	str	r2, [sp, #72]	; 0x48
   175bc:	bl	42e0 <readstat_realloc@plt>
   175c0:	subs	r3, r0, #0
   175c4:	str	r3, [sp, #20]
   175c8:	beq	17750 <readstat_parse_sav+0x15bc>
   175cc:	ldr	r2, [sp, #72]	; 0x48
   175d0:	add	r1, r2, r8
   175d4:	cmp	r5, r1
   175d8:	bcc	17718 <readstat_parse_sav+0x1584>
   175dc:	ldr	r3, [sp, #60]	; 0x3c
   175e0:	ldr	ip, [sl, #336]	; 0x150
   175e4:	mov	r1, r3
   175e8:	str	ip, [sp]
   175ec:	mov	r3, r8
   175f0:	bl	4238 <readstat_convert@plt>
   175f4:	subs	r3, r0, #0
   175f8:	bne	176e8 <readstat_parse_sav+0x1554>
   175fc:	ldr	r2, [sp, #72]	; 0x48
   17600:	add	r2, r2, r8
   17604:	add	r3, r2, #4
   17608:	cmp	r5, r3
   1760c:	str	r2, [sp, #72]	; 0x48
   17610:	bcc	17718 <readstat_parse_sav+0x1584>
   17614:	ldrb	r3, [sl, #436]	; 0x1b4
   17618:	ldr	r8, [r2]
   1761c:	tst	r3, #1
   17620:	beq	17634 <readstat_parse_sav+0x14a0>
   17624:	mov	r0, r8
   17628:	bl	3d94 <byteswap4@plt>
   1762c:	ldr	r2, [sp, #72]	; 0x48
   17630:	mov	r8, r0
   17634:	lsl	r3, r8, #2
   17638:	add	r3, r3, #1
   1763c:	add	r2, r2, #4
   17640:	mov	r0, r7
   17644:	mov	r1, r3
   17648:	str	r3, [sp, #60]	; 0x3c
   1764c:	str	r2, [sp, #72]	; 0x48
   17650:	bl	42e0 <readstat_realloc@plt>
   17654:	subs	r7, r0, #0
   17658:	beq	17774 <readstat_parse_sav+0x15e0>
   1765c:	ldr	r2, [sp, #72]	; 0x48
   17660:	add	r1, r2, r8
   17664:	cmp	r5, r1
   17668:	bcc	17718 <readstat_parse_sav+0x1584>
   1766c:	ldr	r3, [sp, #60]	; 0x3c
   17670:	ldr	ip, [sl, #336]	; 0x150
   17674:	mov	r1, r3
   17678:	str	ip, [sp]
   1767c:	mov	r3, r8
   17680:	bl	4238 <readstat_convert@plt>
   17684:	subs	r3, r0, #0
   17688:	bne	176e8 <readstat_parse_sav+0x1554>
   1768c:	ldr	r2, [sp, #72]	; 0x48
   17690:	str	r3, [r4, #8]
   17694:	add	r8, r2, r8
   17698:	ldr	r2, [sp, #52]	; 0x34
   1769c:	str	r3, [r4, #12]
   176a0:	str	r8, [sp, #72]	; 0x48
   176a4:	ldm	r2, {r0, r1}
   176a8:	ldr	r2, [sp, #20]
   176ac:	str	r2, [sp, #88]	; 0x58
   176b0:	ldr	r2, [sl, #40]	; 0x28
   176b4:	str	r3, [r4, #4]
   176b8:	stm	sp, {r0, r1}
   176bc:	str	r2, [sp, #12]
   176c0:	str	r7, [sp, #8]
   176c4:	ldr	r0, [sp, #28]
   176c8:	ldm	r4, {r2, r3}
   176cc:	ldr	r1, [sl, #20]
   176d0:	blx	r1
   176d4:	cmp	r0, #0
   176d8:	bne	17744 <readstat_parse_sav+0x15b0>
   176dc:	add	r9, r9, #1
   176e0:	ldr	r2, [sp, #72]	; 0x48
   176e4:	b	1756c <readstat_parse_sav+0x13d8>
   176e8:	mov	r5, r6
   176ec:	mov	r6, r3
   176f0:	ldr	r3, [sp, #20]
   176f4:	cmp	r3, #0
   176f8:	beq	17704 <readstat_parse_sav+0x1570>
   176fc:	mov	r0, r3
   17700:	bl	3ec0 <free@plt>
   17704:	cmp	r7, #0
   17708:	beq	16a9c <readstat_parse_sav+0x908>
   1770c:	mov	r0, r7
   17710:	bl	3ec0 <free@plt>
   17714:	b	16a9c <readstat_parse_sav+0x908>
   17718:	mov	r5, r6
   1771c:	mov	r6, #5
   17720:	b	176f0 <readstat_parse_sav+0x155c>
   17724:	mov	r4, r5
   17728:	mov	r5, r6
   1772c:	mov	r6, r2
   17730:	b	173c8 <readstat_parse_sav+0x1234>
   17734:	ldreq	r6, [sp, #32]
   17738:	beq	176f0 <readstat_parse_sav+0x155c>
   1773c:	mov	r6, #5
   17740:	b	176f0 <readstat_parse_sav+0x155c>
   17744:	mov	r5, r6
   17748:	mov	r6, #4
   1774c:	b	176f0 <readstat_parse_sav+0x155c>
   17750:	cmp	r7, #0
   17754:	ldr	fp, [sp, #16]
   17758:	mov	r5, r6
   1775c:	beq	16f34 <readstat_parse_sav+0xda0>
   17760:	mov	r0, r7
   17764:	bl	3ec0 <free@plt>
   17768:	mov	r3, #3
   1776c:	mov	r4, r3
   17770:	b	16410 <readstat_parse_sav+0x27c>
   17774:	mov	r5, r6
   17778:	mov	r6, #3
   1777c:	b	176f0 <readstat_parse_sav+0x155c>
   17780:	ldr	r3, [sp, #20]
   17784:	ldr	fp, [sp, #16]
   17788:	mov	r5, r3
   1778c:	mov	r4, r0
   17790:	b	16410 <readstat_parse_sav+0x27c>
   17794:	cmp	r7, #4
   17798:	bne	16714 <readstat_parse_sav+0x580>
   1779c:	lsl	r1, r6, #2
   177a0:	ldr	r0, [sl, #328]	; 0x148
   177a4:	bl	42e0 <readstat_realloc@plt>
   177a8:	cmp	r6, #0
   177ac:	clz	r4, r0
   177b0:	lsr	r4, r4, #5
   177b4:	moveq	r4, #0
   177b8:	cmp	r4, #0
   177bc:	str	r0, [sl, #328]	; 0x148
   177c0:	bne	16f30 <readstat_parse_sav+0xd9c>
   177c4:	str	r6, [sl, #332]	; 0x14c
   177c8:	cmp	r4, r6
   177cc:	beq	16398 <readstat_parse_sav+0x204>
   177d0:	ldrb	r3, [sl, #436]	; 0x1b4
   177d4:	lsl	r7, r4, #2
   177d8:	ldr	r8, [sl, #328]	; 0x148
   177dc:	tst	r3, #1
   177e0:	ldr	r0, [r5, r4, lsl #2]
   177e4:	beq	177ec <readstat_parse_sav+0x1658>
   177e8:	bl	3d94 <byteswap4@plt>
   177ec:	add	r4, r4, #1
   177f0:	str	r0, [r8, r7]
   177f4:	b	177c8 <readstat_parse_sav+0x1634>
   177f8:	cmp	r6, #3
   177fc:	cmpeq	r7, #8
   17800:	bne	16714 <readstat_parse_sav+0x580>
   17804:	ldrb	r0, [r5, #1]
   17808:	ldrb	r3, [r5, #5]
   1780c:	ldrb	r6, [r5, #2]
   17810:	ldrb	r1, [r5]
   17814:	ldrb	r2, [r5, #4]
   17818:	ldrb	lr, [r5, #6]
   1781c:	orr	r1, r1, r0, lsl #8
   17820:	orr	r2, r2, r3, lsl #8
   17824:	ldrb	ip, [r5, #13]
   17828:	orr	r9, r1, r6, lsl #16
   1782c:	orr	lr, r2, lr, lsl #16
   17830:	ldrb	r4, [r5, #9]
   17834:	ldrb	r1, [r5, #12]
   17838:	ldrb	r2, [r5, #14]
   1783c:	ldrb	r0, [r5, #10]
   17840:	ldrb	r3, [r5, #8]
   17844:	orr	r1, r1, ip, lsl #8
   17848:	orr	r2, r1, r2, lsl #16
   1784c:	orr	r3, r3, r4, lsl #8
   17850:	ldrb	r7, [r5, #17]
   17854:	ldrb	r8, [r5, #21]
   17858:	orr	fp, r3, r0, lsl #16
   1785c:	ldrb	r6, [r5, #3]
   17860:	ldrb	r3, [r5, #18]
   17864:	str	r2, [sp, #20]
   17868:	ldrb	ip, [r5, #16]
   1786c:	ldrb	r0, [r5, #20]
   17870:	ldrb	r2, [r5, #22]
   17874:	ldrb	r1, [r5, #7]
   17878:	orr	r0, r0, r8, lsl #8
   1787c:	orr	ip, ip, r7, lsl #8
   17880:	orr	ip, ip, r3, lsl #16
   17884:	orr	r2, r0, r2, lsl #16
   17888:	ldrb	r8, [r5, #11]
   1788c:	ldrb	r7, [r5, #15]
   17890:	orr	r0, r9, r6, lsl #24
   17894:	ldrb	r4, [r5, #23]
   17898:	ldrb	r6, [r5, #19]
   1789c:	ldrb	r3, [sl, #436]	; 0x1b4
   178a0:	orr	r1, lr, r1, lsl #24
   178a4:	ldr	lr, [sp, #20]
   178a8:	tst	r3, #1
   178ac:	orr	r8, fp, r8, lsl #24
   178b0:	orr	r7, lr, r7, lsl #24
   178b4:	orr	r6, ip, r6, lsl #24
   178b8:	orr	r4, r2, r4, lsl #24
   178bc:	beq	178c8 <readstat_parse_sav+0x1734>
   178c0:	bl	3d7c <byteswap8@plt>
   178c4:	ldrb	r3, [sl, #436]	; 0x1b4
   178c8:	add	r9, sl, #400	; 0x190
   178cc:	tst	r3, #1
   178d0:	stmdb	r9, {r0, r1}
   178d4:	beq	178f0 <readstat_parse_sav+0x175c>
   178d8:	mov	r0, r8
   178dc:	mov	r1, r7
   178e0:	bl	3d7c <byteswap8@plt>
   178e4:	ldrb	r3, [sl, #436]	; 0x1b4
   178e8:	mov	r8, r0
   178ec:	mov	r7, r1
   178f0:	add	r2, sl, #416	; 0x1a0
   178f4:	tst	r3, #1
   178f8:	str	r8, [r2, #-8]
   178fc:	str	r7, [r2, #-4]
   17900:	beq	17918 <readstat_parse_sav+0x1784>
   17904:	mov	r0, r6
   17908:	mov	r1, r4
   1790c:	bl	3d7c <byteswap8@plt>
   17910:	mov	r6, r0
   17914:	mov	r4, r1
   17918:	str	r6, [sl, #400]	; 0x190
   1791c:	str	r4, [r9, #4]
   17920:	b	16398 <readstat_parse_sav+0x204>
   17924:	str	r6, [sp, #580]	; 0x244
   17928:	ldr	r3, [sl]
   1792c:	ldr	r1, [sl, #40]	; 0x28
   17930:	ldr	r0, [sp, #16]
   17934:	blx	r3
   17938:	cmp	r0, #0
   1793c:	movne	r0, #4
   17940:	bne	168c4 <readstat_parse_sav+0x730>
   17944:	ldr	r3, [sl, #328]	; 0x148
   17948:	cmp	r3, #0
   1794c:	beq	179f4 <readstat_parse_sav+0x1860>
   17950:	ldr	r4, [sl, #340]	; 0x154
   17954:	ldr	r0, [sl, #332]	; 0x14c
   17958:	lsl	r3, r4, #1
   1795c:	cmp	r0, r3
   17960:	beq	17970 <readstat_parse_sav+0x17dc>
   17964:	add	r3, r3, r4
   17968:	cmp	r0, r3
   1796c:	bne	16514 <readstat_parse_sav+0x380>
   17970:	cmp	r4, #0
   17974:	ble	179f4 <readstat_parse_sav+0x1860>
   17978:	mov	r1, r4
   1797c:	bl	232d8 <__divsi3>
   17980:	mov	r5, #0
   17984:	sub	r6, r0, #3
   17988:	clz	r6, r6
   1798c:	lsr	r6, r6, #5
   17990:	add	r3, r6, #2
   17994:	str	r3, [sp, #20]
   17998:	b	179e4 <readstat_parse_sav+0x1850>
   1799c:	ldr	r2, [sl, #328]	; 0x148
   179a0:	ldr	r3, [sl, #44]	; 0x2c
   179a4:	add	r4, r8, #1
   179a8:	ldr	r0, [r2, r8, lsl #2]
   179ac:	ldr	r7, [r3, r5, lsl #2]
   179b0:	bl	43ac <spss_measure_to_readstat_measure@plt>
   179b4:	ldr	r3, [sl, #328]	; 0x148
   179b8:	cmp	r6, #0
   179bc:	ldrne	r2, [r3, r4, lsl #2]
   179c0:	addne	r4, r8, #2
   179c4:	str	r0, [r7, #268]	; 0x10c
   179c8:	strne	r2, [r7, #276]	; 0x114
   179cc:	ldr	r0, [r3, r4, lsl #2]
   179d0:	bl	4388 <spss_alignment_to_readstat_alignment@plt>
   179d4:	ldr	r3, [r7, #48]	; 0x30
   179d8:	ldr	r4, [sl, #340]	; 0x154
   179dc:	add	r5, r5, r3
   179e0:	str	r0, [r7, #272]	; 0x110
   179e4:	ldr	r3, [sp, #20]
   179e8:	cmp	r5, r4
   179ec:	mul	r8, r5, r3
   179f0:	blt	1799c <readstat_parse_sav+0x1808>
   179f4:	ldr	r3, [sl, #8]
   179f8:	cmp	r3, #0
   179fc:	beq	17abc <readstat_parse_sav+0x1928>
   17a00:	mov	r5, #0
   17a04:	ldr	r3, [pc, #-2348]	; 170e0 <readstat_parse_sav+0xf4c>
   17a08:	mov	r6, r5
   17a0c:	add	r3, pc, r3
   17a10:	str	r3, [sp, #20]
   17a14:	ldr	r3, [sl, #340]	; 0x154
   17a18:	mov	r1, r5
   17a1c:	cmp	r6, r3
   17a20:	bge	17abc <readstat_parse_sav+0x1928>
   17a24:	ldr	r3, [sl, #44]	; 0x2c
   17a28:	ldr	r2, [sl, #336]	; 0x150
   17a2c:	ldr	r7, [sl, #52]	; 0x34
   17a30:	ldr	r4, [r3, r6, lsl #2]
   17a34:	mov	r0, r4
   17a38:	ldr	r8, [r4, #8]
   17a3c:	bl	4274 <spss_init_variable_for_info@plt>
   17a40:	ldr	r3, [r4, #4]
   17a44:	ldr	r2, [sp, #20]
   17a48:	mov	r1, #256	; 0x100
   17a4c:	str	r0, [r7, r8, lsl #2]
   17a50:	ldr	r7, [sp, #16]
   17a54:	mov	r0, r7
   17a58:	bl	4280 <snprintf@plt>
   17a5c:	ldr	r3, [r4, #8]
   17a60:	ldr	r2, [r4, #4]
   17a64:	ldr	r1, [sl, #52]	; 0x34
   17a68:	cmn	r2, #1
   17a6c:	mov	r0, r3
   17a70:	ldr	r1, [r1, r3, lsl #2]
   17a74:	mov	r3, r7
   17a78:	moveq	r3, #0
   17a7c:	mov	r2, r3
   17a80:	ldr	r7, [sl, #8]
   17a84:	ldr	r3, [sl, #40]	; 0x28
   17a88:	blx	r7
   17a8c:	cmp	r0, #1
   17a90:	beq	17b08 <readstat_parse_sav+0x1974>
   17a94:	cmp	r0, #2
   17a98:	addne	r5, r5, #1
   17a9c:	ldreq	r2, [r4, #8]
   17aa0:	ldreq	r3, [sl, #52]	; 0x34
   17aa4:	ldreq	r3, [r3, r2, lsl #2]
   17aa8:	moveq	r2, #1
   17aac:	streq	r2, [r3, #2144]	; 0x860
   17ab0:	ldr	r3, [r4, #48]	; 0x30
   17ab4:	add	r6, r6, r3
   17ab8:	b	17a14 <readstat_parse_sav+0x1880>
   17abc:	ldr	r4, [sl, #12]
   17ac0:	cmp	r4, #0
   17ac4:	beq	17b2c <readstat_parse_sav+0x1998>
   17ac8:	ldr	r3, [sl, #372]	; 0x174
   17acc:	cmp	r3, #0
   17ad0:	blt	17b2c <readstat_parse_sav+0x1998>
   17ad4:	ldr	r0, [sl, #340]	; 0x154
   17ad8:	sub	r2, r3, #1
   17adc:	mov	r3, #0
   17ae0:	cmp	r3, r0
   17ae4:	bge	17b2c <readstat_parse_sav+0x1998>
   17ae8:	ldr	r1, [sl, #44]	; 0x2c
   17aec:	ldr	r1, [r1, r3, lsl #2]
   17af0:	ldr	ip, [r1, #12]
   17af4:	cmp	ip, r2
   17af8:	beq	17b10 <readstat_parse_sav+0x197c>
   17afc:	ldr	r1, [r1, #48]	; 0x30
   17b00:	add	r3, r3, r1
   17b04:	b	17ae0 <readstat_parse_sav+0x194c>
   17b08:	mov	r9, #4
   17b0c:	b	162bc <readstat_parse_sav+0x128>
   17b10:	ldr	r2, [r1, #8]
   17b14:	ldr	r3, [sl, #52]	; 0x34
   17b18:	ldr	r1, [sl, #40]	; 0x28
   17b1c:	ldr	r0, [r3, r2, lsl #2]
   17b20:	blx	r4
   17b24:	cmp	r0, #0
   17b28:	bne	17b08 <readstat_parse_sav+0x1974>
   17b2c:	ldr	r3, [sl, #16]
   17b30:	cmp	r3, #0
   17b34:	beq	162bc <readstat_parse_sav+0x128>
   17b38:	ldr	r0, [sl, #340]	; 0x154
   17b3c:	mov	r3, #0
   17b40:	mov	r4, #256	; 0x100
   17b44:	cmp	r3, r0
   17b48:	bge	17b6c <readstat_parse_sav+0x19d8>
   17b4c:	ldr	r2, [sl, #44]	; 0x2c
   17b50:	ldr	r1, [r2, r3, lsl #2]
   17b54:	ldr	r2, [r1, #20]
   17b58:	ldr	r1, [r1, #48]	; 0x30
   17b5c:	cmp	r4, r2
   17b60:	movcc	r4, r2
   17b64:	add	r3, r3, r1
   17b68:	b	17b44 <readstat_parse_sav+0x19b0>
   17b6c:	add	r0, r4, #7
   17b70:	str	r0, [sl, #380]	; 0x17c
   17b74:	bl	422c <readstat_malloc@plt>
   17b78:	add	r3, r4, #2
   17b7c:	lsl	r3, r3, #2
   17b80:	str	r3, [sl, #388]	; 0x184
   17b84:	str	r0, [sl, #376]	; 0x178
   17b88:	mov	r0, r3
   17b8c:	bl	422c <readstat_malloc@plt>
   17b90:	ldr	r4, [sl, #376]	; 0x178
   17b94:	cmp	r0, #0
   17b98:	cmpne	r4, #0
   17b9c:	str	r0, [sl, #384]	; 0x180
   17ba0:	moveq	r4, #1
   17ba4:	movne	r4, #0
   17ba8:	beq	168e8 <readstat_parse_sav+0x754>
   17bac:	ldr	r3, [sl, #428]	; 0x1ac
   17bb0:	cmp	r3, #1
   17bb4:	beq	17cb8 <readstat_parse_sav+0x1b24>
   17bb8:	cmp	r3, #2
   17bbc:	beq	17cc8 <readstat_parse_sav+0x1b34>
   17bc0:	ldr	r5, [sl, #344]	; 0x158
   17bc4:	ldr	r7, [sl, #36]	; 0x24
   17bc8:	lsl	r5, r5, #3
   17bcc:	mov	r0, r5
   17bd0:	bl	422c <readstat_malloc@plt>
   17bd4:	mov	r6, r0
   17bd8:	ldr	r0, [sl, #360]	; 0x168
   17bdc:	cmp	r0, #0
   17be0:	bne	17c58 <readstat_parse_sav+0x1ac4>
   17be4:	ldr	r3, [sl, #356]	; 0x164
   17be8:	cmn	r3, #1
   17bec:	beq	17bfc <readstat_parse_sav+0x1a68>
   17bf0:	ldr	r2, [sl, #364]	; 0x16c
   17bf4:	cmp	r3, r2
   17bf8:	ble	17ce0 <readstat_parse_sav+0x1b4c>
   17bfc:	ldr	r3, [sl, #36]	; 0x24
   17c00:	ldr	r1, [sl, #28]
   17c04:	ldr	r2, [sl, #40]	; 0x28
   17c08:	ldr	r4, [r3, #16]
   17c0c:	ldr	r0, [sl, #32]
   17c10:	ldr	r3, [r3, #20]
   17c14:	blx	r4
   17c18:	mov	r1, r5
   17c1c:	subs	r4, r0, #0
   17c20:	mov	r0, r6
   17c24:	bne	17c7c <readstat_parse_sav+0x1ae8>
   17c28:	ldr	r2, [r7, #20]
   17c2c:	ldr	r3, [r7, #12]
   17c30:	blx	r3
   17c34:	mov	r2, sl
   17c38:	mov	r1, r5
   17c3c:	cmp	r5, r0
   17c40:	mov	r0, r6
   17c44:	bne	17ce0 <readstat_parse_sav+0x1b4c>
   17c48:	bl	15d74 <sav_process_row>
   17c4c:	subs	r4, r0, #0
   17c50:	beq	17be4 <readstat_parse_sav+0x1a50>
   17c54:	b	17c7c <readstat_parse_sav+0x1ae8>
   17c58:	mul	r0, r5, r0
   17c5c:	ldr	r3, [r7, #8]
   17c60:	ldr	r2, [r7, #20]
   17c64:	mov	r1, #1
   17c68:	blx	r3
   17c6c:	cmn	r0, #1
   17c70:	strne	r4, [sl, #360]	; 0x168
   17c74:	bne	17be4 <readstat_parse_sav+0x1a50>
   17c78:	mov	r4, #15
   17c7c:	cmp	r6, #0
   17c80:	beq	17cf0 <readstat_parse_sav+0x1b5c>
   17c84:	mov	r0, r6
   17c88:	bl	3ec0 <free@plt>
   17c8c:	cmp	r4, #0
   17c90:	bne	17cf0 <readstat_parse_sav+0x1b5c>
   17c94:	ldr	r3, [sl, #352]	; 0x160
   17c98:	cmn	r3, #1
   17c9c:	beq	162bc <readstat_parse_sav+0x128>
   17ca0:	ldr	r2, [sl, #364]	; 0x16c
   17ca4:	ldr	r3, [sl, #356]	; 0x164
   17ca8:	cmp	r2, r3
   17cac:	movne	r9, #9
   17cb0:	moveq	r9, #0
   17cb4:	b	162bc <readstat_parse_sav+0x128>
   17cb8:	mov	r0, sl
   17cbc:	bl	5748 <sav_read_compressed_data.constprop.6>
   17cc0:	mov	r4, r0
   17cc4:	b	17c8c <readstat_parse_sav+0x1af8>
   17cc8:	ldr	r1, [pc, #-3052]	; 170e4 <readstat_parse_sav+0xf50>
   17ccc:	mov	r0, sl
   17cd0:	add	r1, pc, r1
   17cd4:	bl	44c0 <zsav_read_compressed_data@plt>
   17cd8:	mov	r4, r0
   17cdc:	b	17c8c <readstat_parse_sav+0x1af8>
   17ce0:	cmp	r6, #0
   17ce4:	movne	r4, r9
   17ce8:	bne	17c84 <readstat_parse_sav+0x1af0>
   17cec:	b	17c94 <readstat_parse_sav+0x1b00>
   17cf0:	mov	r9, r4
   17cf4:	b	162bc <readstat_parse_sav+0x128>

00017cf8 <sav_metadata_ok>:
   17cf8:	ldr	r3, [r0, #8]
   17cfc:	cmp	r3, #2
   17d00:	beq	17d14 <sav_metadata_ok+0x1c>
   17d04:	cmp	r3, #3
   17d08:	movne	r0, #24
   17d0c:	moveq	r0, #0
   17d10:	bx	lr
   17d14:	ldr	r0, [r0, #16]
   17d18:	cmp	r0, #2
   17d1c:	moveq	r0, #6
   17d20:	movne	r0, #0
   17d24:	bx	lr

00017d28 <sav_write_compressed_row>:
   17d28:	push	{r4, r5, r6, lr}
   17d2c:	mov	r3, r0
   17d30:	ldr	r5, [r0, #300]	; 0x12c
   17d34:	mov	r4, r0
   17d38:	mov	r0, r5
   17d3c:	bl	4460 <sav_compress_row@plt>
   17d40:	mov	r1, r5
   17d44:	mov	r2, r0
   17d48:	mov	r0, r4
   17d4c:	pop	{r4, r5, r6, lr}
   17d50:	b	4454 <readstat_write_bytes@plt>

00017d54 <sav_emit_blank_variable_records>:
   17d54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17d58:	sub	sp, sp, #36	; 0x24
   17d5c:	add	r9, sp, #32
   17d60:	mov	r3, #2
   17d64:	mov	sl, #4
   17d68:	mov	r6, r0
   17d6c:	mov	r4, r1
   17d70:	str	r3, [r9, #-32]!	; 0xffffffe0
   17d74:	add	r5, sp, sl
   17d78:	ldr	r8, [pc, #112]	; 17df0 <sav_emit_blank_variable_records+0x9c>
   17d7c:	mvn	fp, #0
   17d80:	ldr	r7, [pc, #108]	; 17df4 <sav_emit_blank_variable_records+0xa0>
   17d84:	b	17dcc <sav_emit_blank_variable_records+0x78>
   17d88:	bl	4454 <readstat_write_bytes@plt>
   17d8c:	sub	r4, r4, #1
   17d90:	mov	r2, #28
   17d94:	mov	r1, r5
   17d98:	subs	r3, r0, #0
   17d9c:	mov	r0, r6
   17da0:	bne	17de4 <sav_emit_blank_variable_records+0x90>
   17da4:	str	r3, [r5, #4]
   17da8:	str	r3, [r5, #8]
   17dac:	str	fp, [sp, #4]
   17db0:	str	r8, [sp, #24]
   17db4:	str	r8, [sp, #28]
   17db8:	str	r7, [sp, #20]
   17dbc:	str	r7, [sp, #16]
   17dc0:	bl	4454 <readstat_write_bytes@plt>
   17dc4:	subs	r3, r0, #0
   17dc8:	bne	17de4 <sav_emit_blank_variable_records+0x90>
   17dcc:	cmp	r4, #0
   17dd0:	mov	r2, sl
   17dd4:	mov	r1, r9
   17dd8:	mov	r0, r6
   17ddc:	bne	17d88 <sav_emit_blank_variable_records+0x34>
   17de0:	mov	r3, r4
   17de4:	mov	r0, r3
   17de8:	add	sp, sp, #36	; 0x24
   17dec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17df0:	.word	0x20202020
   17df4:	.word	0x00011d01

00017df8 <sav_write_missing_string>:
   17df8:	ldr	r2, [r1, #1596]	; 0x63c
   17dfc:	push	{r4, lr}
   17e00:	mov	r1, #32
   17e04:	bl	42a4 <memset@plt>
   17e08:	mov	r0, #0
   17e0c:	pop	{r4, pc}

00017e10 <sav_write_missing_number>:
   17e10:	push	{r4, r5}
   17e14:	sub	sp, sp, #8
   17e18:	add	r3, sp, #8
   17e1c:	mvn	r4, #0
   17e20:	mvn	r5, #1048576	; 0x100000
   17e24:	mov	r2, r0
   17e28:	strd	r4, [r3, #-8]!
   17e2c:	ldm	r3!, {r0, r1}
   17e30:	str	r0, [r2]
   17e34:	str	r1, [r2, #4]
   17e38:	mov	r0, #0
   17e3c:	add	sp, sp, #8
   17e40:	pop	{r4, r5}
   17e44:	bx	lr

00017e48 <sav_write_double>:
   17e48:	sub	sp, sp, #8
   17e4c:	add	r3, sp, #8
   17e50:	mov	r2, r0
   17e54:	vstmdb	r3!, {d0}
   17e58:	ldm	r3!, {r0, r1}
   17e5c:	str	r0, [r2]
   17e60:	str	r1, [r2, #4]
   17e64:	mov	r0, #0
   17e68:	add	sp, sp, #8
   17e6c:	bx	lr

00017e70 <sav_write_float>:
   17e70:	vcvt.f64.f32	d0, s0
   17e74:	sub	sp, sp, #8
   17e78:	add	r3, sp, #8
   17e7c:	mov	r2, r0
   17e80:	vstmdb	r3!, {d0}
   17e84:	ldm	r3!, {r0, r1}
   17e88:	str	r0, [r2]
   17e8c:	str	r1, [r2, #4]
   17e90:	mov	r0, #0
   17e94:	add	sp, sp, #8
   17e98:	bx	lr

00017e9c <sav_write_int32>:
   17e9c:	vmov	s15, r2
   17ea0:	sub	sp, sp, #8
   17ea4:	add	r3, sp, #8
   17ea8:	mov	r2, r0
   17eac:	vcvt.f64.s32	d7, s15
   17eb0:	vstmdb	r3!, {d7}
   17eb4:	ldm	r3!, {r0, r1}
   17eb8:	str	r0, [r2]
   17ebc:	str	r1, [r2, #4]
   17ec0:	mov	r0, #0
   17ec4:	add	sp, sp, #8
   17ec8:	bx	lr

00017ecc <sav_write_int16>:
   17ecc:	vmov	s15, r2
   17ed0:	sub	sp, sp, #8
   17ed4:	add	r3, sp, #8
   17ed8:	mov	r2, r0
   17edc:	vcvt.f64.s32	d7, s15
   17ee0:	vstmdb	r3!, {d7}
   17ee4:	ldm	r3!, {r0, r1}
   17ee8:	str	r0, [r2]
   17eec:	str	r1, [r2, #4]
   17ef0:	mov	r0, #0
   17ef4:	add	sp, sp, #8
   17ef8:	bx	lr

00017efc <sav_write_int8>:
   17efc:	vmov	s15, r2
   17f00:	sub	sp, sp, #8
   17f04:	add	r3, sp, #8
   17f08:	mov	r2, r0
   17f0c:	vcvt.f64.s32	d7, s15
   17f10:	vstmdb	r3!, {d7}
   17f14:	ldm	r3!, {r0, r1}
   17f18:	str	r0, [r2]
   17f1c:	str	r1, [r2, #4]
   17f20:	mov	r0, #0
   17f24:	add	sp, sp, #8
   17f28:	bx	lr

00017f2c <readstat_label_set_number_short_variables>:
   17f2c:	ldr	r3, [r0, #276]	; 0x114
   17f30:	push	{r4, r5, r6, lr}
   17f34:	cmp	r3, #0
   17f38:	ble	17f78 <readstat_label_set_number_short_variables+0x4c>
   17f3c:	mov	r4, #0
   17f40:	mov	r5, r0
   17f44:	mov	r6, r4
   17f48:	mov	r1, r4
   17f4c:	mov	r0, r5
   17f50:	bl	4448 <readstat_get_label_set_variable@plt>
   17f54:	add	r4, r4, #1
   17f58:	ldr	r3, [r0, #1596]	; 0x63c
   17f5c:	cmp	r3, #8
   17f60:	ldr	r3, [r5, #276]	; 0x114
   17f64:	addls	r6, r6, #1
   17f68:	cmp	r3, r4
   17f6c:	bgt	17f48 <readstat_label_set_number_short_variables+0x1c>
   17f70:	mov	r0, r6
   17f74:	pop	{r4, r5, r6, pc}
   17f78:	mov	r6, #0
   17f7c:	b	17f70 <readstat_label_set_number_short_variables+0x44>

00017f80 <sav_variable_width>:
   17f80:	cmp	r0, #0
   17f84:	beq	17f90 <sav_variable_width+0x10>
   17f88:	mov	r0, #8
   17f8c:	bx	lr
   17f90:	cmp	r1, #255	; 0xff
   17f94:	bhi	17fac <sav_variable_width+0x2c>
   17f98:	cmp	r1, #0
   17f9c:	beq	17f88 <sav_variable_width+0x8>
   17fa0:	add	r0, r1, #7
   17fa4:	bic	r0, r0, #7
   17fa8:	bx	lr
   17fac:	add	r3, r1, #251	; 0xfb
   17fb0:	ldr	r2, [pc, #44]	; 17fe4 <sav_variable_width+0x64>
   17fb4:	lsr	r3, r3, #2
   17fb8:	add	r0, r1, #256	; 0x100
   17fbc:	umull	r2, r3, r2, r3
   17fc0:	add	r0, r0, #3
   17fc4:	lsr	r3, r3, #3
   17fc8:	add	r1, r3, #16777216	; 0x1000000
   17fcc:	sub	r3, r3, r3, lsl #6
   17fd0:	sub	r1, r1, #1
   17fd4:	add	r0, r0, r3, lsl #2
   17fd8:	bic	r0, r0, #7
   17fdc:	add	r0, r0, r1, lsl #8
   17fe0:	bx	lr
   17fe4:	.word	0x20820821

00017fe8 <sav_write_string>:
   17fe8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17fec:	mov	r4, r1
   17ff0:	mov	r6, r2
   17ff4:	mov	r1, #32
   17ff8:	ldr	r2, [r4, #1596]	; 0x63c
   17ffc:	mov	r7, r0
   18000:	bl	42a4 <memset@plt>
   18004:	cmp	r6, #0
   18008:	beq	18050 <sav_write_string+0x68>
   1800c:	ldrb	r0, [r6]
   18010:	cmp	r0, #0
   18014:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   18018:	mov	r0, r6
   1801c:	bl	41fc <strlen@plt>
   18020:	ldr	r3, [r4, #1596]	; 0x63c
   18024:	cmp	r0, r3
   18028:	mov	r8, r0
   1802c:	bls	18058 <sav_write_string+0x70>
   18030:	mov	r0, #22
   18034:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18038:	mov	r4, #0
   1803c:	mov	r1, r4
   18040:	mov	r2, r0
   18044:	add	r1, r6, r1
   18048:	add	r0, r7, r4
   1804c:	bl	3f20 <memcpy@plt>
   18050:	mov	r0, #0
   18054:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18058:	cmp	r0, #255	; 0xff
   1805c:	bls	18038 <sav_write_string+0x50>
   18060:	mov	r5, #0
   18064:	mov	r4, r5
   18068:	mov	r9, #255	; 0xff
   1806c:	add	r1, r6, r5
   18070:	mov	r2, r9
   18074:	add	r0, r7, r4
   18078:	bl	3f20 <memcpy@plt>
   1807c:	add	r1, r5, #255	; 0xff
   18080:	sub	r2, r8, r1
   18084:	cmp	r2, #255	; 0xff
   18088:	add	r4, r4, #256	; 0x100
   1808c:	mov	r5, r1
   18090:	bhi	1806c <sav_write_string+0x84>
   18094:	add	r1, r6, r1
   18098:	add	r0, r7, r4
   1809c:	bl	3f20 <memcpy@plt>
   180a0:	b	18050 <sav_write_string+0x68>

000180a4 <sav_variable_ok>:
   180a4:	push	{r4, r5, r6, lr}
   180a8:	add	r4, r0, #8
   180ac:	mov	r5, r0
   180b0:	mov	r0, r4
   180b4:	bl	41fc <strlen@plt>
   180b8:	cmp	r0, #64	; 0x40
   180bc:	bhi	180f0 <sav_variable_ok+0x4c>
   180c0:	cmp	r0, #0
   180c4:	bne	180d0 <sav_variable_ok+0x2c>
   180c8:	mov	r0, #38	; 0x26
   180cc:	pop	{r4, r5, r6, pc}
   180d0:	ldr	r1, [pc, #492]	; 182c4 <sav_variable_ok+0x220>
   180d4:	mov	r0, r4
   180d8:	add	r1, pc, r1
   180dc:	bl	3e00 <strcmp@plt>
   180e0:	cmp	r0, #0
   180e4:	bne	180f8 <sav_variable_ok+0x54>
   180e8:	mov	r0, #27
   180ec:	pop	{r4, r5, r6, pc}
   180f0:	mov	r0, #28
   180f4:	pop	{r4, r5, r6, pc}
   180f8:	ldr	r1, [pc, #456]	; 182c8 <sav_variable_ok+0x224>
   180fc:	mov	r0, r4
   18100:	add	r1, pc, r1
   18104:	bl	3e00 <strcmp@plt>
   18108:	cmp	r0, #0
   1810c:	beq	180e8 <sav_variable_ok+0x44>
   18110:	ldr	r1, [pc, #436]	; 182cc <sav_variable_ok+0x228>
   18114:	mov	r0, r4
   18118:	add	r1, pc, r1
   1811c:	bl	3e00 <strcmp@plt>
   18120:	cmp	r0, #0
   18124:	beq	180e8 <sav_variable_ok+0x44>
   18128:	ldr	r1, [pc, #416]	; 182d0 <sav_variable_ok+0x22c>
   1812c:	mov	r0, r4
   18130:	add	r1, pc, r1
   18134:	bl	3e00 <strcmp@plt>
   18138:	cmp	r0, #0
   1813c:	beq	180e8 <sav_variable_ok+0x44>
   18140:	ldr	r1, [pc, #396]	; 182d4 <sav_variable_ok+0x230>
   18144:	mov	r0, r4
   18148:	add	r1, pc, r1
   1814c:	bl	3e00 <strcmp@plt>
   18150:	cmp	r0, #0
   18154:	beq	180e8 <sav_variable_ok+0x44>
   18158:	ldr	r1, [pc, #376]	; 182d8 <sav_variable_ok+0x234>
   1815c:	mov	r0, r4
   18160:	add	r1, pc, r1
   18164:	bl	3e00 <strcmp@plt>
   18168:	cmp	r0, #0
   1816c:	beq	180e8 <sav_variable_ok+0x44>
   18170:	ldr	r1, [pc, #356]	; 182dc <sav_variable_ok+0x238>
   18174:	mov	r0, r4
   18178:	add	r1, pc, r1
   1817c:	bl	3e00 <strcmp@plt>
   18180:	cmp	r0, #0
   18184:	beq	180e8 <sav_variable_ok+0x44>
   18188:	ldr	r1, [pc, #336]	; 182e0 <sav_variable_ok+0x23c>
   1818c:	mov	r0, r4
   18190:	add	r1, pc, r1
   18194:	bl	3e00 <strcmp@plt>
   18198:	cmp	r0, #0
   1819c:	beq	180e8 <sav_variable_ok+0x44>
   181a0:	ldr	r1, [pc, #316]	; 182e4 <sav_variable_ok+0x240>
   181a4:	mov	r0, r4
   181a8:	add	r1, pc, r1
   181ac:	bl	3e00 <strcmp@plt>
   181b0:	cmp	r0, #0
   181b4:	beq	180e8 <sav_variable_ok+0x44>
   181b8:	ldr	r1, [pc, #296]	; 182e8 <sav_variable_ok+0x244>
   181bc:	mov	r0, r4
   181c0:	add	r1, pc, r1
   181c4:	bl	3e00 <strcmp@plt>
   181c8:	cmp	r0, #0
   181cc:	beq	180e8 <sav_variable_ok+0x44>
   181d0:	ldr	r1, [pc, #276]	; 182ec <sav_variable_ok+0x248>
   181d4:	mov	r0, r4
   181d8:	add	r1, pc, r1
   181dc:	bl	3e00 <strcmp@plt>
   181e0:	cmp	r0, #0
   181e4:	beq	180e8 <sav_variable_ok+0x44>
   181e8:	ldr	r1, [pc, #256]	; 182f0 <sav_variable_ok+0x24c>
   181ec:	mov	r0, r4
   181f0:	add	r1, pc, r1
   181f4:	bl	3e00 <strcmp@plt>
   181f8:	cmp	r0, #0
   181fc:	beq	180e8 <sav_variable_ok+0x44>
   18200:	ldr	r1, [pc, #236]	; 182f4 <sav_variable_ok+0x250>
   18204:	mov	r0, r4
   18208:	add	r1, pc, r1
   1820c:	bl	3e00 <strcmp@plt>
   18210:	cmp	r0, #0
   18214:	beq	180e8 <sav_variable_ok+0x44>
   18218:	ldrb	r6, [r5, #8]
   1821c:	cmp	r6, #0
   18220:	beq	182bc <sav_variable_ok+0x218>
   18224:	cmp	r6, #32
   18228:	beq	18278 <sav_variable_ok+0x1d4>
   1822c:	ldr	r5, [pc, #196]	; 182f8 <sav_variable_ok+0x254>
   18230:	mov	r1, r4
   18234:	mov	r0, r6
   18238:	mov	lr, #1
   1823c:	sub	r3, r0, #35	; 0x23
   18240:	sub	r2, r0, #64	; 0x40
   18244:	cmp	r0, #95	; 0x5f
   18248:	cmpne	r2, #26
   1824c:	uxtb	r3, r3
   18250:	movhi	r2, #1
   18254:	movls	r2, #0
   18258:	cmp	r3, #22
   1825c:	mov	ip, lr
   18260:	mvnls	ip, r5, lsr r3
   18264:	tst	ip, r2
   18268:	sub	r0, r0, #97	; 0x61
   1826c:	beq	18280 <sav_variable_ok+0x1dc>
   18270:	cmp	r0, #25
   18274:	bls	18280 <sav_variable_ok+0x1dc>
   18278:	mov	r0, #26
   1827c:	pop	{r4, r5, r6, pc}
   18280:	ldrb	r0, [r1, #1]!
   18284:	cmp	r0, #0
   18288:	beq	1829c <sav_variable_ok+0x1f8>
   1828c:	cmp	r0, #32
   18290:	bne	1823c <sav_variable_ok+0x198>
   18294:	mov	r0, #26
   18298:	pop	{r4, r5, r6, pc}
   1829c:	sub	r3, r6, #64	; 0x40
   182a0:	cmp	r3, #26
   182a4:	popls	{r4, r5, r6, pc}
   182a8:	sub	r0, r6, #97	; 0x61
   182ac:	cmp	r0, #25
   182b0:	movhi	r0, #25
   182b4:	movls	r0, #0
   182b8:	pop	{r4, r5, r6, pc}
   182bc:	mov	r0, r6
   182c0:	pop	{r4, r5, r6, pc}
   182c4:	.word	0x0000d83c
   182c8:	.word	0x0000d7e0
   182cc:	.word	0x0000d7cc
   182d0:	.word	0x0000d7b8
   182d4:	.word	0x0000d7a4
   182d8:	.word	0x0000d790
   182dc:	.word	0x0000d77c
   182e0:	.word	0x0000d768
   182e4:	.word	0x0000d754
   182e8:	.word	0x0000d740
   182ec:	.word	0x0000d72c
   182f0:	.word	0x0000d718
   182f4:	.word	0x0000d704
   182f8:	.word	0x007fe803

000182fc <sav_emit_variable_records>:
   182fc:	ldr	r3, [r0, #28]
   18300:	cmp	r3, #0
   18304:	ble	18b74 <sav_emit_variable_records+0x878>
   18308:	ldr	r3, [pc, #2224]	; 18bc0 <sav_emit_variable_records+0x8c4>
   1830c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18310:	sub	sp, sp, #396	; 0x18c
   18314:	add	r3, pc, r3
   18318:	str	r3, [sp, #40]	; 0x28
   1831c:	ldr	r3, [pc, #2208]	; 18bc4 <sav_emit_variable_records+0x8c8>
   18320:	mov	sl, r0
   18324:	add	r3, pc, r3
   18328:	str	r3, [sp, #16]
   1832c:	mov	r3, #0
   18330:	str	r3, [sp, #32]
   18334:	add	r3, sp, #76	; 0x4c
   18338:	str	r3, [sp, #4]
   1833c:	add	r3, sp, #52	; 0x34
   18340:	str	r1, [sp, #24]
   18344:	str	r3, [sp, #44]	; 0x2c
   18348:	ldr	r1, [sp, #32]
   1834c:	mov	r0, sl
   18350:	bl	437c <readstat_get_variable@plt>
   18354:	ldr	r4, [sp, #4]
   18358:	mov	ip, #2
   1835c:	ldr	r3, [sp, #24]
   18360:	ldr	r2, [sp, #40]	; 0x28
   18364:	mov	r1, #9
   18368:	str	ip, [sp, #52]	; 0x34
   1836c:	mov	r9, r0
   18370:	mov	r0, r4
   18374:	bl	4280 <snprintf@plt>
   18378:	mov	r0, r4
   1837c:	bl	41fc <strlen@plt>
   18380:	mov	r2, #4
   18384:	ldr	r1, [sp, #44]	; 0x2c
   18388:	str	r0, [sp, #12]
   1838c:	mov	r0, sl
   18390:	bl	4454 <readstat_write_bytes@plt>
   18394:	subs	r2, r0, #0
   18398:	bne	18484 <sav_emit_variable_records+0x188>
   1839c:	ldr	r3, [r9]
   183a0:	add	r1, sp, #108	; 0x6c
   183a4:	cmp	r3, #0
   183a8:	str	r1, [sp, #28]
   183ac:	str	r2, [sp, #108]	; 0x6c
   183b0:	str	r2, [sp, #112]	; 0x70
   183b4:	str	r2, [sp, #116]	; 0x74
   183b8:	str	r2, [sp, #120]	; 0x78
   183bc:	str	r2, [sp, #124]	; 0x7c
   183c0:	str	r2, [sp, #128]	; 0x80
   183c4:	str	r2, [sp, #132]	; 0x84
   183c8:	bne	18490 <sav_emit_variable_records+0x194>
   183cc:	ldr	r3, [r9, #1600]	; 0x640
   183d0:	cmp	r3, #255	; 0xff
   183d4:	movcs	r3, #255	; 0xff
   183d8:	str	r3, [sp, #108]	; 0x6c
   183dc:	ldrb	r3, [r9, #564]	; 0x234
   183e0:	adds	r3, r3, #0
   183e4:	movne	r3, #1
   183e8:	str	r3, [sp, #112]	; 0x70
   183ec:	mov	r0, r9
   183f0:	bl	42c8 <readstat_variable_get_storage_width@plt>
   183f4:	cmp	r0, #8
   183f8:	movhi	r3, #0
   183fc:	movhi	ip, r3
   18400:	bls	18570 <sav_emit_variable_records+0x274>
   18404:	add	r4, sp, #136	; 0x88
   18408:	mov	r1, r4
   1840c:	mov	r0, r9
   18410:	str	ip, [sp, #116]	; 0x74
   18414:	bl	40f4 <spss_format_for_variable@plt>
   18418:	subs	r2, r0, #0
   1841c:	bne	18484 <sav_emit_variable_records+0x188>
   18420:	ldr	r2, [sp, #136]	; 0x88
   18424:	ldr	r3, [sp, #140]	; 0x8c
   18428:	ldr	r1, [sp, #144]	; 0x90
   1842c:	cmp	r3, #255	; 0xff
   18430:	orr	r1, r1, r2, lsl #16
   18434:	ldr	r2, [sp, #12]
   18438:	ldr	r0, [pc, #1928]	; 18bc8 <sav_emit_variable_records+0x8cc>
   1843c:	movge	r3, #255	; 0xff
   18440:	sub	r2, r2, #1
   18444:	and	r3, r0, r3, lsl #8
   18448:	cmp	r2, #7
   1844c:	add	r0, sp, #128	; 0x80
   18450:	ldr	r2, [pc, #1908]	; 18bcc <sav_emit_variable_records+0x8d0>
   18454:	orr	r3, r3, r1
   18458:	str	r2, [sp, #128]	; 0x80
   1845c:	str	r3, [sp, #120]	; 0x78
   18460:	str	r3, [sp, #124]	; 0x7c
   18464:	str	r2, [r0, #4]
   18468:	bls	187e8 <sav_emit_variable_records+0x4ec>
   1846c:	mov	r2, #28
   18470:	ldr	r1, [sp, #28]
   18474:	mov	r0, sl
   18478:	bl	4454 <readstat_write_bytes@plt>
   1847c:	subs	r2, r0, #0
   18480:	beq	18614 <sav_emit_variable_records+0x318>
   18484:	mov	r0, r2
   18488:	add	sp, sp, #396	; 0x18c
   1848c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18490:	ldrb	r1, [r9, #564]	; 0x234
   18494:	str	r2, [sp, #8]
   18498:	adds	r1, r1, #0
   1849c:	movne	r1, #1
   184a0:	cmp	r3, #5
   184a4:	str	r1, [sp, #112]	; 0x70
   184a8:	bne	183ec <sav_emit_variable_records+0xf0>
   184ac:	mov	r0, r9
   184b0:	bl	4304 <readstat_variable_get_missing_ranges_count@plt>
   184b4:	subs	r5, r0, #0
   184b8:	ble	188e4 <sav_emit_variable_records+0x5e8>
   184bc:	ldr	r2, [sp, #8]
   184c0:	str	sl, [sp, #20]
   184c4:	mov	r8, r2
   184c8:	add	fp, sp, #88	; 0x58
   184cc:	add	r4, sp, #136	; 0x88
   184d0:	mov	sl, r5
   184d4:	mov	r2, r8
   184d8:	mov	r1, r9
   184dc:	mov	r0, fp
   184e0:	bl	3f44 <readstat_variable_get_missing_range_lo@plt>
   184e4:	mov	r2, r8
   184e8:	mov	r1, r9
   184ec:	mov	r0, r4
   184f0:	bl	4328 <readstat_variable_get_missing_range_hi@plt>
   184f4:	ldm	fp, {r0, r1, r2, r3}
   184f8:	bl	42b0 <spss_64bit_value@plt>
   184fc:	add	r8, r8, #1
   18500:	mov	r6, r0
   18504:	mov	r7, r1
   18508:	ldm	r4, {r0, r1, r2, r3}
   1850c:	bl	42b0 <spss_64bit_value@plt>
   18510:	cmp	r7, r1
   18514:	cmpeq	r6, r0
   18518:	movne	r3, #1
   1851c:	addne	sl, sl, #1
   18520:	strne	r3, [sp, #8]
   18524:	cmp	r5, r8
   18528:	bne	184d4 <sav_emit_variable_records+0x1d8>
   1852c:	ldr	r2, [sp, #8]
   18530:	mov	r3, sl
   18534:	cmp	r2, #0
   18538:	mov	ip, sl
   1853c:	ldr	sl, [sp, #20]
   18540:	beq	1854c <sav_emit_variable_records+0x250>
   18544:	rsb	r3, r3, #0
   18548:	mov	ip, r3
   1854c:	cmp	ip, #0
   18550:	mov	r3, ip
   18554:	rsblt	r3, ip, #0
   18558:	cmp	r3, #3
   1855c:	ble	18404 <sav_emit_variable_records+0x108>
   18560:	mov	r2, #31
   18564:	mov	r0, r2
   18568:	add	sp, sp, #396	; 0x18c
   1856c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18570:	mov	r0, r9
   18574:	bl	4304 <readstat_variable_get_missing_ranges_count@plt>
   18578:	subs	r7, r0, #0
   1857c:	ble	188ec <sav_emit_variable_records+0x5f0>
   18580:	mov	r8, #0
   18584:	str	sl, [sp, #8]
   18588:	mov	r5, r8
   1858c:	add	fp, sp, #88	; 0x58
   18590:	add	r4, sp, #136	; 0x88
   18594:	mov	sl, r7
   18598:	mov	r2, r5
   1859c:	mov	r1, r9
   185a0:	mov	r0, fp
   185a4:	bl	3f44 <readstat_variable_get_missing_range_lo@plt>
   185a8:	mov	r2, r5
   185ac:	mov	r1, r9
   185b0:	mov	r0, r4
   185b4:	bl	4328 <readstat_variable_get_missing_range_hi@plt>
   185b8:	ldm	fp, {r0, r1, r2, r3}
   185bc:	bl	3fb0 <readstat_string_value@plt>
   185c0:	add	r5, r5, #1
   185c4:	mov	r6, r0
   185c8:	ldm	r4, {r0, r1, r2, r3}
   185cc:	bl	3fb0 <readstat_string_value@plt>
   185d0:	cmp	r6, #0
   185d4:	cmpne	r0, #0
   185d8:	mov	r1, r0
   185dc:	mov	r0, r6
   185e0:	beq	185f4 <sav_emit_variable_records+0x2f8>
   185e4:	bl	3e00 <strcmp@plt>
   185e8:	cmp	r0, #0
   185ec:	addne	sl, sl, #1
   185f0:	movne	r8, #1
   185f4:	cmp	r7, r5
   185f8:	bne	18598 <sav_emit_variable_records+0x29c>
   185fc:	cmp	r8, #0
   18600:	mov	r3, sl
   18604:	mov	ip, sl
   18608:	ldr	sl, [sp, #8]
   1860c:	bne	18544 <sav_emit_variable_records+0x248>
   18610:	b	1854c <sav_emit_variable_records+0x250>
   18614:	add	r6, r9, #564	; 0x234
   18618:	mov	r0, r6
   1861c:	bl	41fc <strlen@plt>
   18620:	cmp	r0, #0
   18624:	beq	18684 <sav_emit_variable_records+0x388>
   18628:	cmp	r0, #256	; 0x100
   1862c:	strls	r0, [sp, #88]	; 0x58
   18630:	movhi	r3, #256	; 0x100
   18634:	mov	r2, #4
   18638:	add	r1, sp, #88	; 0x58
   1863c:	mov	r0, sl
   18640:	strhi	r3, [sp, #88]	; 0x58
   18644:	bl	4454 <readstat_write_bytes@plt>
   18648:	subs	r2, r0, #0
   1864c:	bne	18484 <sav_emit_variable_records+0x188>
   18650:	ldr	r5, [sp, #88]	; 0x58
   18654:	mov	r1, r6
   18658:	add	r5, r5, #3
   1865c:	bic	r5, r5, #3
   18660:	mov	r2, r5
   18664:	mov	r0, r4
   18668:	bl	42bc <strncpy@plt>
   1866c:	mov	r2, r5
   18670:	mov	r1, r4
   18674:	mov	r0, sl
   18678:	bl	4454 <readstat_write_bytes@plt>
   1867c:	subs	r2, r0, #0
   18680:	bne	18484 <sav_emit_variable_records+0x188>
   18684:	ldr	r3, [r9]
   18688:	cmp	r3, #5
   1868c:	beq	18a04 <sav_emit_variable_records+0x708>
   18690:	mov	r0, r9
   18694:	bl	42c8 <readstat_variable_get_storage_width@plt>
   18698:	cmp	r0, #8
   1869c:	bls	188f4 <sav_emit_variable_records+0x5f8>
   186a0:	ldr	r1, [r9, #1596]	; 0x63c
   186a4:	mov	r0, sl
   186a8:	lsr	r1, r1, #3
   186ac:	sub	r1, r1, #1
   186b0:	cmp	r1, #31
   186b4:	movge	r1, #31
   186b8:	bl	17d54 <sav_emit_blank_variable_records>
   186bc:	subs	r2, r0, #0
   186c0:	bne	18484 <sav_emit_variable_records+0x188>
   186c4:	ldr	r3, [r9, #1600]	; 0x640
   186c8:	ldr	r2, [r9]
   186cc:	cmp	r3, #255	; 0xff
   186d0:	clz	r2, r2
   186d4:	lsr	r2, r2, #5
   186d8:	movls	r2, #0
   186dc:	cmp	r2, #0
   186e0:	beq	188a8 <sav_emit_variable_records+0x5ac>
   186e4:	add	r8, r3, #251	; 0xfb
   186e8:	ldr	r3, [pc, #1248]	; 18bd0 <sav_emit_variable_records+0x8d4>
   186ec:	lsr	r8, r8, #2
   186f0:	umull	r3, r8, r3, r8
   186f4:	lsr	r3, r8, #3
   186f8:	cmp	r3, #1
   186fc:	str	r3, [sp, #20]
   18700:	bls	188a8 <sav_emit_variable_records+0x5ac>
   18704:	sub	r3, r3, #1
   18708:	str	r3, [sp, #12]
   1870c:	ldr	r3, [sp, #24]
   18710:	mov	r7, #252	; 0xfc
   18714:	mov	r5, #1
   18718:	add	fp, sp, #88	; 0x58
   1871c:	add	r3, r3, #9
   18720:	str	r3, [sp, #8]
   18724:	str	r9, [sp, #36]	; 0x24
   18728:	ldr	r3, [sp, #12]
   1872c:	mov	ip, #0
   18730:	cmp	r3, r5
   18734:	mov	r1, #9
   18738:	ldreq	r3, [sp, #36]	; 0x24
   1873c:	mov	lr, #2
   18740:	ldr	r2, [sp, #16]
   18744:	ldreq	r6, [r3, #1600]	; 0x640
   18748:	mov	r0, fp
   1874c:	ldr	r3, [sp, #8]
   18750:	subeq	r6, r6, r7
   18754:	movne	r6, #255	; 0xff
   18758:	str	lr, [sp, #76]	; 0x4c
   1875c:	str	ip, [r4]
   18760:	str	ip, [r4, #4]
   18764:	str	ip, [r4, #8]
   18768:	str	ip, [r4, #12]
   1876c:	str	ip, [r4, #16]
   18770:	str	ip, [r4, #20]
   18774:	str	ip, [r4, #24]
   18778:	bl	4280 <snprintf@plt>
   1877c:	mov	r0, fp
   18780:	bl	41fc <strlen@plt>
   18784:	ldr	r3, [pc, #1096]	; 18bd4 <sav_emit_variable_records+0x8d8>
   18788:	umull	r3, r2, r3, r5
   1878c:	lsr	r2, r2, #3
   18790:	add	r2, r2, r2, lsl #3
   18794:	sub	r2, r5, r2, lsl #2
   18798:	cmp	r2, #9
   1879c:	addls	r3, sp, #392	; 0x188
   187a0:	addhi	r3, sp, #392	; 0x188
   187a4:	addls	r2, r2, #48	; 0x30
   187a8:	addhi	r2, r2, #55	; 0x37
   187ac:	addls	r1, r3, r0
   187b0:	addhi	r1, r3, r0
   187b4:	strbls	r2, [r1, #-304]	; 0xfffffed0
   187b8:	strbhi	r2, [r1, #-304]	; 0xfffffed0
   187bc:	addls	r8, r0, #1
   187c0:	addhi	r8, r0, #1
   187c4:	mov	r9, r0
   187c8:	mov	r2, #4
   187cc:	ldr	r1, [sp, #4]
   187d0:	mov	r0, sl
   187d4:	bl	4454 <readstat_write_bytes@plt>
   187d8:	cmp	r0, #0
   187dc:	beq	187f8 <sav_emit_variable_records+0x4fc>
   187e0:	mov	r2, r0
   187e4:	b	18484 <sav_emit_variable_records+0x188>
   187e8:	ldr	r2, [sp, #12]
   187ec:	ldr	r1, [sp, #4]
   187f0:	bl	3f20 <memcpy@plt>
   187f4:	b	1846c <sav_emit_variable_records+0x170>
   187f8:	ldr	r1, [sp, #28]
   187fc:	ldr	r0, [sp, #36]	; 0x24
   18800:	str	r6, [sp, #136]	; 0x88
   18804:	bl	40f4 <spss_format_for_variable@plt>
   18808:	str	r6, [sp, #112]	; 0x70
   1880c:	cmp	r0, #0
   18810:	bne	187e0 <sav_emit_variable_records+0x4e4>
   18814:	cmp	r6, #255	; 0xff
   18818:	ldr	r0, [sp, #108]	; 0x6c
   1881c:	movlt	r1, r6
   18820:	movge	r1, #255	; 0xff
   18824:	ldr	r3, [pc, #924]	; 18bc8 <sav_emit_variable_records+0x8cc>
   18828:	ldr	r2, [sp, #116]	; 0x74
   1882c:	and	r1, r3, r1, lsl #8
   18830:	orr	r2, r2, r0, lsl #16
   18834:	orr	r3, r2, r1
   18838:	add	r0, sp, #156	; 0x9c
   1883c:	ldr	r2, [pc, #904]	; 18bcc <sav_emit_variable_records+0x8d0>
   18840:	cmp	r9, #7
   18844:	str	r2, [sp, #156]	; 0x9c
   18848:	str	r3, [sp, #148]	; 0x94
   1884c:	str	r3, [sp, #152]	; 0x98
   18850:	str	r2, [r0, #4]
   18854:	bls	188d4 <sav_emit_variable_records+0x5d8>
   18858:	mov	r2, #28
   1885c:	mov	r1, r4
   18860:	mov	r0, sl
   18864:	bl	4454 <readstat_write_bytes@plt>
   18868:	cmp	r0, #0
   1886c:	bne	187e0 <sav_emit_variable_records+0x4e4>
   18870:	add	r1, r6, #7
   18874:	mov	r0, sl
   18878:	lsr	r1, r1, #3
   1887c:	sub	r1, r1, #1
   18880:	cmp	r1, #31
   18884:	movge	r1, #31
   18888:	bl	17d54 <sav_emit_blank_variable_records>
   1888c:	cmp	r0, #0
   18890:	bne	187e0 <sav_emit_variable_records+0x4e4>
   18894:	ldr	r3, [sp, #20]
   18898:	add	r5, r5, #1
   1889c:	cmp	r3, r5
   188a0:	add	r7, r7, #252	; 0xfc
   188a4:	bne	18728 <sav_emit_variable_records+0x42c>
   188a8:	ldr	r2, [sp, #32]
   188ac:	ldr	r3, [sl, #28]
   188b0:	add	r2, r2, #1
   188b4:	cmp	r3, r2
   188b8:	ldr	r3, [sp, #24]
   188bc:	str	r2, [sp, #32]
   188c0:	add	r3, r3, #15
   188c4:	str	r3, [sp, #24]
   188c8:	bgt	18348 <sav_emit_variable_records+0x4c>
   188cc:	mov	r2, #0
   188d0:	b	18484 <sav_emit_variable_records+0x188>
   188d4:	mov	r2, r8
   188d8:	mov	r1, fp
   188dc:	bl	3f20 <memcpy@plt>
   188e0:	b	18858 <sav_emit_variable_records+0x55c>
   188e4:	mov	ip, r5
   188e8:	b	1854c <sav_emit_variable_records+0x250>
   188ec:	mov	ip, r7
   188f0:	b	1854c <sav_emit_variable_records+0x250>
   188f4:	mov	r0, r9
   188f8:	bl	4304 <readstat_variable_get_missing_ranges_count@plt>
   188fc:	subs	r7, r0, #0
   18900:	ble	186a0 <sav_emit_variable_records+0x3a4>
   18904:	mov	r6, #0
   18908:	add	fp, sp, #88	; 0x58
   1890c:	mov	r2, r6
   18910:	mov	r1, r9
   18914:	mov	r0, fp
   18918:	bl	3f44 <readstat_variable_get_missing_range_lo@plt>
   1891c:	mov	r2, r6
   18920:	mov	r1, r9
   18924:	mov	r0, r4
   18928:	bl	4328 <readstat_variable_get_missing_range_hi@plt>
   1892c:	ldm	fp, {r0, r1, r2, r3}
   18930:	bl	3fb0 <readstat_string_value@plt>
   18934:	add	r6, r6, #1
   18938:	mov	r5, r0
   1893c:	ldm	r4, {r0, r1, r2, r3}
   18940:	bl	3fb0 <readstat_string_value@plt>
   18944:	cmp	r5, #0
   18948:	cmpne	r0, #0
   1894c:	mov	r8, r0
   18950:	mov	r1, r0
   18954:	mov	r0, r5
   18958:	beq	18968 <sav_emit_variable_records+0x66c>
   1895c:	bl	3e00 <strcmp@plt>
   18960:	cmp	r0, #0
   18964:	bne	18b88 <sav_emit_variable_records+0x88c>
   18968:	cmp	r7, r6
   1896c:	bne	1890c <sav_emit_variable_records+0x610>
   18970:	mov	r8, #0
   18974:	mov	r6, #0
   18978:	b	18984 <sav_emit_variable_records+0x688>
   1897c:	cmp	r7, r6
   18980:	beq	186a0 <sav_emit_variable_records+0x3a4>
   18984:	mov	r2, r6
   18988:	mov	r1, r9
   1898c:	mov	r0, fp
   18990:	bl	3f44 <readstat_variable_get_missing_range_lo@plt>
   18994:	mov	r2, r6
   18998:	mov	r1, r9
   1899c:	mov	r0, r4
   189a0:	bl	4328 <readstat_variable_get_missing_range_hi@plt>
   189a4:	ldm	fp, {r0, r1, r2, r3}
   189a8:	bl	3fb0 <readstat_string_value@plt>
   189ac:	add	r6, r6, #1
   189b0:	mov	r5, r0
   189b4:	ldm	r4, {r0, r1, r2, r3}
   189b8:	bl	3fb0 <readstat_string_value@plt>
   189bc:	cmp	r5, #0
   189c0:	cmpne	r0, #0
   189c4:	mov	r1, r0
   189c8:	mov	r0, r5
   189cc:	beq	1897c <sav_emit_variable_records+0x680>
   189d0:	bl	3e00 <strcmp@plt>
   189d4:	cmp	r0, #0
   189d8:	bne	1897c <sav_emit_variable_records+0x680>
   189dc:	mov	r1, r5
   189e0:	mov	r2, #8
   189e4:	mov	r0, sl
   189e8:	bl	4550 <readstat_write_space_padded_string@plt>
   189ec:	add	r8, r8, #1
   189f0:	cmp	r0, #0
   189f4:	bne	187e0 <sav_emit_variable_records+0x4e4>
   189f8:	cmp	r8, #3
   189fc:	bne	1897c <sav_emit_variable_records+0x680>
   18a00:	b	186a0 <sav_emit_variable_records+0x3a4>
   18a04:	mov	r0, r9
   18a08:	bl	4304 <readstat_variable_get_missing_ranges_count@plt>
   18a0c:	subs	r3, r0, #0
   18a10:	str	r3, [sp, #12]
   18a14:	ble	186a0 <sav_emit_variable_records+0x3a4>
   18a18:	mov	r5, #0
   18a1c:	add	fp, sp, #88	; 0x58
   18a20:	mov	r8, r3
   18a24:	b	18a30 <sav_emit_variable_records+0x734>
   18a28:	cmp	r8, r5
   18a2c:	beq	18b80 <sav_emit_variable_records+0x884>
   18a30:	mov	r2, r5
   18a34:	mov	r1, r9
   18a38:	mov	r0, fp
   18a3c:	bl	3f44 <readstat_variable_get_missing_range_lo@plt>
   18a40:	mov	r2, r5
   18a44:	mov	r1, r9
   18a48:	mov	r0, r4
   18a4c:	bl	4328 <readstat_variable_get_missing_range_hi@plt>
   18a50:	ldm	fp, {r0, r1, r2, r3}
   18a54:	bl	42b0 <spss_64bit_value@plt>
   18a58:	add	r5, r5, #1
   18a5c:	mov	r6, r0
   18a60:	mov	r7, r1
   18a64:	ldm	r4, {r0, r1, r2, r3}
   18a68:	bl	42b0 <spss_64bit_value@plt>
   18a6c:	cmp	r7, r1
   18a70:	cmpeq	r6, r0
   18a74:	beq	18a28 <sav_emit_variable_records+0x72c>
   18a78:	ldm	fp, {r0, r1, r2, r3}
   18a7c:	bl	42b0 <spss_64bit_value@plt>
   18a80:	add	r3, sp, #56	; 0x38
   18a84:	mov	r2, #8
   18a88:	strd	r0, [sp, #56]	; 0x38
   18a8c:	mov	r1, r3
   18a90:	mov	r0, sl
   18a94:	bl	4454 <readstat_write_bytes@plt>
   18a98:	subs	r2, r0, #0
   18a9c:	bne	18484 <sav_emit_variable_records+0x188>
   18aa0:	ldm	r4, {r0, r1, r2, r3}
   18aa4:	bl	42b0 <spss_64bit_value@plt>
   18aa8:	mov	r2, #8
   18aac:	strd	r0, [sp, #64]	; 0x40
   18ab0:	add	r1, sp, #64	; 0x40
   18ab4:	mov	r0, sl
   18ab8:	bl	4454 <readstat_write_bytes@plt>
   18abc:	subs	r2, r0, #0
   18ac0:	bne	18484 <sav_emit_variable_records+0x188>
   18ac4:	mov	r5, #2
   18ac8:	add	r3, sp, #72	; 0x48
   18acc:	str	r3, [sp, #20]
   18ad0:	add	r3, sp, #64	; 0x40
   18ad4:	str	sl, [sp, #8]
   18ad8:	mov	r8, #0
   18adc:	str	r3, [sp, #36]	; 0x24
   18ae0:	ldr	sl, [sp, #12]
   18ae4:	b	18af0 <sav_emit_variable_records+0x7f4>
   18ae8:	cmp	sl, r8
   18aec:	beq	18b6c <sav_emit_variable_records+0x870>
   18af0:	mov	r2, r8
   18af4:	mov	r1, r9
   18af8:	mov	r0, fp
   18afc:	bl	3f44 <readstat_variable_get_missing_range_lo@plt>
   18b00:	mov	r2, r8
   18b04:	mov	r1, r9
   18b08:	mov	r0, r4
   18b0c:	bl	4328 <readstat_variable_get_missing_range_hi@plt>
   18b10:	ldm	fp, {r0, r1, r2, r3}
   18b14:	bl	42b0 <spss_64bit_value@plt>
   18b18:	add	r8, r8, #1
   18b1c:	mov	r6, r0
   18b20:	mov	r7, r1
   18b24:	ldm	r4, {r0, r1, r2, r3}
   18b28:	bl	42b0 <spss_64bit_value@plt>
   18b2c:	cmp	r7, r1
   18b30:	cmpeq	r6, r0
   18b34:	bne	18ae8 <sav_emit_variable_records+0x7ec>
   18b38:	ldm	fp, {r0, r1, r2, r3}
   18b3c:	bl	42b0 <spss_64bit_value@plt>
   18b40:	ldr	r3, [sp, #20]
   18b44:	mov	r2, #8
   18b48:	add	r5, r5, #1
   18b4c:	strd	r0, [r3, #-8]
   18b50:	ldr	r1, [sp, #36]	; 0x24
   18b54:	ldr	r0, [sp, #8]
   18b58:	bl	4454 <readstat_write_bytes@plt>
   18b5c:	cmp	r0, #0
   18b60:	bne	187e0 <sav_emit_variable_records+0x4e4>
   18b64:	cmp	r5, #3
   18b68:	bne	18ae8 <sav_emit_variable_records+0x7ec>
   18b6c:	ldr	sl, [sp, #8]
   18b70:	b	186a0 <sav_emit_variable_records+0x3a4>
   18b74:	mov	r2, #0
   18b78:	mov	r0, r2
   18b7c:	bx	lr
   18b80:	mov	r5, #0
   18b84:	b	18ac8 <sav_emit_variable_records+0x7cc>
   18b88:	mov	r2, #8
   18b8c:	mov	r1, r5
   18b90:	mov	r0, sl
   18b94:	bl	4550 <readstat_write_space_padded_string@plt>
   18b98:	subs	r2, r0, #0
   18b9c:	bne	18484 <sav_emit_variable_records+0x188>
   18ba0:	mov	r2, #8
   18ba4:	mov	r1, r8
   18ba8:	mov	r0, sl
   18bac:	bl	4550 <readstat_write_space_padded_string@plt>
   18bb0:	subs	r2, r0, #0
   18bb4:	bne	18484 <sav_emit_variable_records+0x188>
   18bb8:	mov	r8, #2
   18bbc:	b	18974 <sav_emit_variable_records+0x678>
   18bc0:	.word	0x0000c0f8
   18bc4:	.word	0x0000c0e8
   18bc8:	.word	0x0000ffff
   18bcc:	.word	0x20202020
   18bd0:	.word	0x20820821
   18bd4:	.word	0x38e38e39

00018bd8 <sav_begin_data>:
   18bd8:	ldr	r3, [r0, #308]	; 0x134
   18bdc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18be0:	cmp	r3, #0
   18be4:	sub	sp, sp, #316	; 0x13c
   18be8:	moveq	r4, #14
   18bec:	bne	18bfc <sav_begin_data+0x24>
   18bf0:	mov	r0, r4
   18bf4:	add	sp, sp, #316	; 0x13c
   18bf8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18bfc:	ldr	r4, [r0, #28]
   18c00:	mov	fp, r0
   18c04:	mov	r1, #15
   18c08:	mov	r0, r4
   18c0c:	bl	3d58 <calloc@plt>
   18c10:	str	r0, [sp, #24]
   18c14:	mov	r0, r4
   18c18:	bl	4190 <ck_hash_table_init@plt>
   18c1c:	ldr	r3, [fp, #28]
   18c20:	cmp	r3, #0
   18c24:	mov	r8, r0
   18c28:	ble	18d10 <sav_begin_data+0x138>
   18c2c:	ldr	r3, [pc, #4068]	; 19c18 <sav_begin_data+0x1040>
   18c30:	mov	r5, #1
   18c34:	add	r3, pc, r3
   18c38:	str	r3, [sp, #12]
   18c3c:	ldr	r3, [pc, #4056]	; 19c1c <sav_begin_data+0x1044>
   18c40:	mov	sl, #9
   18c44:	add	r3, pc, r3
   18c48:	str	r3, [sp, #16]
   18c4c:	ldr	r3, [pc, #4044]	; 19c20 <sav_begin_data+0x1048>
   18c50:	add	r3, pc, r3
   18c54:	str	r3, [sp, #20]
   18c58:	ldr	r3, [sp, #24]
   18c5c:	add	r6, r3, #9
   18c60:	sub	r1, r5, #1
   18c64:	mov	r0, fp
   18c68:	bl	437c <readstat_get_variable@plt>
   18c6c:	sub	r4, r6, #9
   18c70:	ldr	r2, [sp, #12]
   18c74:	mov	r1, sl
   18c78:	add	r3, r0, #8
   18c7c:	mov	r7, r0
   18c80:	mov	r0, r4
   18c84:	bl	4280 <snprintf@plt>
   18c88:	ldrb	r9, [r6, #-9]
   18c8c:	cmp	r9, #0
   18c90:	beq	18cb4 <sav_begin_data+0xdc>
   18c94:	bl	4184 <__ctype_toupper_loc@plt>
   18c98:	mov	r3, r4
   18c9c:	ldr	r2, [r0]
   18ca0:	ldr	r2, [r2, r9, lsl #2]
   18ca4:	strb	r2, [r3]
   18ca8:	ldrb	r9, [r3, #1]!
   18cac:	cmp	r9, #0
   18cb0:	bne	18c9c <sav_begin_data+0xc4>
   18cb4:	mov	r1, r8
   18cb8:	mov	r0, r4
   18cbc:	bl	3fd4 <ck_str_hash_lookup@plt>
   18cc0:	cmp	r0, #0
   18cc4:	beq	18f9c <sav_begin_data+0x3c4>
   18cc8:	mov	r3, r5
   18ccc:	ldr	r2, [sp, #16]
   18cd0:	mov	r1, sl
   18cd4:	mov	r0, r4
   18cd8:	mov	r9, r5
   18cdc:	bl	4280 <snprintf@plt>
   18ce0:	mov	r2, r8
   18ce4:	mov	r1, r7
   18ce8:	mov	r0, r4
   18cec:	bl	44f0 <ck_str_hash_insert@plt>
   18cf0:	ldr	r3, [r7, #1600]	; 0x640
   18cf4:	cmp	r3, #255	; 0xff
   18cf8:	bhi	18fa4 <sav_begin_data+0x3cc>
   18cfc:	ldr	r3, [fp, #28]
   18d00:	add	r5, r5, #1
   18d04:	cmp	r3, r9
   18d08:	add	r6, r6, #15
   18d0c:	bgt	18c60 <sav_begin_data+0x88>
   18d10:	mov	r0, r8
   18d14:	add	sl, sp, #136	; 0x88
   18d18:	bl	4244 <ck_hash_table_free@plt>
   18d1c:	mov	r2, #176	; 0xb0
   18d20:	mov	r1, #0
   18d24:	mov	r0, sl
   18d28:	bl	42a4 <memset@plt>
   18d2c:	add	r3, sp, #312	; 0x138
   18d30:	mov	r2, r3
   18d34:	ldr	r3, [fp, #20]
   18d38:	add	r1, sp, #88	; 0x58
   18d3c:	str	r3, [r2, #-256]!	; 0xffffff00
   18d40:	mov	r0, r2
   18d44:	mov	r4, r1
   18d48:	str	r1, [sp, #12]
   18d4c:	str	r2, [sp, #16]
   18d50:	bl	4160 <localtime@plt>
   18d54:	ldr	lr, [pc, #3784]	; 19c24 <sav_begin_data+0x104c>
   18d58:	mov	ip, r4
   18d5c:	add	lr, pc, lr
   18d60:	add	r4, sp, #60	; 0x3c
   18d64:	mov	r6, r4
   18d68:	add	r9, sp, #72	; 0x48
   18d6c:	str	r4, [sp, #20]
   18d70:	mov	r4, #0
   18d74:	str	r4, [r9, #4]
   18d78:	str	r4, [sp, #72]	; 0x48
   18d7c:	strh	r4, [r9, #8]
   18d80:	str	r4, [sp, #60]	; 0x3c
   18d84:	str	r4, [r6, #4]
   18d88:	strb	r4, [r6, #8]
   18d8c:	mov	r5, r0
   18d90:	cmp	r0, #0
   18d94:	ldm	lr!, {r0, r1, r2, r3}
   18d98:	stmia	ip!, {r0, r1, r2, r3}
   18d9c:	ldm	lr!, {r0, r1, r2, r3}
   18da0:	stmia	ip!, {r0, r1, r2, r3}
   18da4:	ldm	lr, {r0, r1, r2, r3}
   18da8:	stm	ip, {r0, r1, r2, r3}
   18dac:	beq	19184 <sav_begin_data+0x5ac>
   18db0:	ldr	r3, [pc, #3696]	; 19c28 <sav_begin_data+0x1050>
   18db4:	ldr	r4, [fp, #16]
   18db8:	str	r3, [sp, #136]	; 0x88
   18dbc:	cmp	r4, #2
   18dc0:	add	r3, sp, #140	; 0x8c
   18dc4:	mov	r0, r3
   18dc8:	beq	191a8 <sav_begin_data+0x5d0>
   18dcc:	mov	r2, #60	; 0x3c
   18dd0:	mov	r1, #32
   18dd4:	bl	42a4 <memset@plt>
   18dd8:	ldr	lr, [pc, #3660]	; 19c2c <sav_begin_data+0x1054>
   18ddc:	mov	r6, #2
   18de0:	add	lr, pc, lr
   18de4:	cmp	r4, #1
   18de8:	mov	ip, r0
   18dec:	ldm	lr!, {r0, r1, r2, r3}
   18df0:	stmia	ip!, {r0, r1, r2, r3}
   18df4:	ldm	lr!, {r0, r1, r2, r3}
   18df8:	stmia	ip!, {r0, r1, r2, r3}
   18dfc:	ldm	lr!, {r0, r1, r2, r3}
   18e00:	stmia	ip!, {r0, r1, r2, r3}
   18e04:	ldm	lr, {r0, r1, r2}
   18e08:	lsr	r3, r2, #16
   18e0c:	stmia	ip!, {r0, r1}
   18e10:	strh	r2, [ip], #2
   18e14:	strb	r3, [ip]
   18e18:	str	r6, [sp, #200]	; 0xc8
   18e1c:	ldr	r3, [fp, #76]	; 0x4c
   18e20:	streq	r4, [sp, #208]	; 0xd0
   18e24:	lsr	r3, r3, #3
   18e28:	str	r3, [sp, #204]	; 0xcc
   18e2c:	ldr	r3, [fp, #224]	; 0xe0
   18e30:	cmp	r3, #0
   18e34:	streq	r3, [sp, #212]	; 0xd4
   18e38:	beq	18e58 <sav_begin_data+0x280>
   18e3c:	ldr	r3, [r3, #1592]	; 0x638
   18e40:	add	r2, r3, #7
   18e44:	cmp	r3, #0
   18e48:	movlt	r3, r2
   18e4c:	asr	r3, r3, #3
   18e50:	add	r3, r3, #1
   18e54:	str	r3, [sp, #212]	; 0xd4
   18e58:	ldr	r0, [r5, #20]
   18e5c:	ldr	r4, [pc, #3532]	; 19c30 <sav_begin_data+0x1058>
   18e60:	ldr	ip, [r5, #12]
   18e64:	mov	r6, #100	; 0x64
   18e68:	umull	r3, r2, r4, r0
   18e6c:	umull	r1, r3, r4, ip
   18e70:	ldr	r1, [fp, #80]	; 0x50
   18e74:	lsr	r2, r2, #5
   18e78:	lsr	r3, r3, #5
   18e7c:	mul	r2, r6, r2
   18e80:	mul	r3, r6, r3
   18e84:	sub	r2, r0, r2
   18e88:	str	r2, [sp, #4]
   18e8c:	ldr	r2, [r5, #16]
   18e90:	sub	r3, ip, r3
   18e94:	ldr	ip, [sp, #12]
   18e98:	ldr	r0, [pc, #3476]	; 19c34 <sav_begin_data+0x105c>
   18e9c:	add	r2, ip, r2, lsl #2
   18ea0:	str	r2, [sp]
   18ea4:	ldr	r2, [pc, #3468]	; 19c38 <sav_begin_data+0x1060>
   18ea8:	mov	ip, #0
   18eac:	add	r2, pc, r2
   18eb0:	str	r1, [sp, #216]	; 0xd8
   18eb4:	str	r0, [sp, #224]	; 0xe0
   18eb8:	mov	r1, #10
   18ebc:	mov	r0, r9
   18ec0:	str	ip, [sp, #220]	; 0xdc
   18ec4:	bl	4280 <snprintf@plt>
   18ec8:	ldm	r9, {r0, r1, r2}
   18ecc:	add	r3, sp, #228	; 0xe4
   18ed0:	add	r7, sp, #245	; 0xf5
   18ed4:	stmia	r3!, {r0, r1}
   18ed8:	strb	r2, [r3]
   18edc:	ldr	ip, [r5]
   18ee0:	ldr	r0, [r5, #8]
   18ee4:	ldr	r2, [pc, #3408]	; 19c3c <sav_begin_data+0x1064>
   18ee8:	umull	r3, r1, r4, ip
   18eec:	umull	lr, r3, r4, r0
   18ef0:	lsr	r1, r1, #5
   18ef4:	lsr	r3, r3, #5
   18ef8:	mul	r1, r6, r1
   18efc:	mul	r3, r6, r3
   18f00:	sub	r1, ip, r1
   18f04:	str	r1, [sp, #4]
   18f08:	ldr	lr, [r5, #4]
   18f0c:	sub	r3, r0, r3
   18f10:	ldr	r5, [sp, #20]
   18f14:	umull	r0, ip, r4, lr
   18f18:	add	r2, pc, r2
   18f1c:	lsr	ip, ip, #5
   18f20:	mov	r1, #9
   18f24:	mul	ip, r6, ip
   18f28:	mov	r0, r5
   18f2c:	sub	ip, lr, ip
   18f30:	str	ip, [sp]
   18f34:	bl	4280 <snprintf@plt>
   18f38:	mov	r3, r5
   18f3c:	mov	r2, #64	; 0x40
   18f40:	ldm	r3!, {r0, r1}
   18f44:	add	r4, fp, #88	; 0x58
   18f48:	str	r0, [sp, #237]	; 0xed
   18f4c:	str	r1, [sp, #241]	; 0xf1
   18f50:	mov	r0, r7
   18f54:	mov	r1, #32
   18f58:	bl	42a4 <memset@plt>
   18f5c:	mov	r0, r4
   18f60:	bl	41fc <strlen@plt>
   18f64:	ldrb	r3, [fp, #88]	; 0x58
   18f68:	cmp	r3, #0
   18f6c:	bne	1918c <sav_begin_data+0x5b4>
   18f70:	mov	r2, #176	; 0xb0
   18f74:	mov	r1, sl
   18f78:	mov	r0, fp
   18f7c:	bl	4454 <readstat_write_bytes@plt>
   18f80:	subs	r4, r0, #0
   18f84:	beq	18fbc <sav_begin_data+0x3e4>
   18f88:	ldr	r0, [sp, #24]
   18f8c:	bl	3ec0 <free@plt>
   18f90:	mov	r0, r4
   18f94:	add	sp, sp, #316	; 0x13c
   18f98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18f9c:	mov	r9, r5
   18fa0:	b	18ce0 <sav_begin_data+0x108>
   18fa4:	mov	r3, r4
   18fa8:	ldr	r2, [sp, #20]
   18fac:	mov	r1, #6
   18fb0:	mov	r0, r6
   18fb4:	bl	4280 <snprintf@plt>
   18fb8:	b	18cfc <sav_begin_data+0x124>
   18fbc:	ldr	r1, [sp, #24]
   18fc0:	mov	r0, fp
   18fc4:	bl	182fc <sav_emit_variable_records>
   18fc8:	subs	r4, r0, #0
   18fcc:	bne	18f88 <sav_begin_data+0x3b0>
   18fd0:	ldr	r3, [fp, #40]	; 0x28
   18fd4:	cmp	r3, #0
   18fd8:	ble	193cc <sav_begin_data+0x7f4>
   18fdc:	add	r3, sp, #40	; 0x28
   18fe0:	str	r4, [sp, #28]
   18fe4:	str	r3, [sp, #36]	; 0x24
   18fe8:	str	r9, [sp, #32]
   18fec:	ldr	r7, [sp, #12]
   18ff0:	b	1900c <sav_begin_data+0x434>
   18ff4:	ldr	r2, [sp, #28]
   18ff8:	ldr	r3, [fp, #40]	; 0x28
   18ffc:	add	r2, r2, #1
   19000:	cmp	r2, r3
   19004:	str	r2, [sp, #28]
   19008:	bge	193c8 <sav_begin_data+0x7f0>
   1900c:	ldr	r1, [sp, #28]
   19010:	mov	r0, fp
   19014:	bl	4424 <readstat_get_label_set@plt>
   19018:	mov	r6, r0
   1901c:	bl	17f2c <readstat_label_set_number_short_variables>
   19020:	cmp	r0, #0
   19024:	ble	18ff4 <sav_begin_data+0x41c>
   19028:	ldr	r3, [r6, #264]	; 0x108
   1902c:	ldr	r8, [r6]
   19030:	cmp	r3, #0
   19034:	str	r3, [sp, #60]	; 0x3c
   19038:	beq	18ff4 <sav_begin_data+0x41c>
   1903c:	mov	r3, #3
   19040:	mov	r2, #4
   19044:	ldr	r1, [sp, #32]
   19048:	mov	r0, fp
   1904c:	str	r3, [sp, #72]	; 0x48
   19050:	bl	4454 <readstat_write_bytes@plt>
   19054:	cmp	r0, #0
   19058:	bne	19308 <sav_begin_data+0x730>
   1905c:	mov	r2, #4
   19060:	ldr	r1, [sp, #20]
   19064:	mov	r0, fp
   19068:	bl	4454 <readstat_write_bytes@plt>
   1906c:	cmp	r0, #0
   19070:	bne	19308 <sav_begin_data+0x730>
   19074:	ldr	r3, [sp, #60]	; 0x3c
   19078:	cmp	r3, #0
   1907c:	ble	19310 <sav_begin_data+0x738>
   19080:	mov	r5, r0
   19084:	b	19140 <sav_begin_data+0x568>
   19088:	ldr	r2, [r0, #20]
   1908c:	ldr	r3, [pc, #2988]	; 19c40 <sav_begin_data+0x1068>
   19090:	cmp	r2, #8
   19094:	str	r3, [r7]
   19098:	str	r3, [r7, #4]
   1909c:	mov	r0, r7
   190a0:	movcs	r2, #8
   190a4:	ldr	r1, [r9, #16]
   190a8:	bl	3f20 <memcpy@plt>
   190ac:	mov	r2, #8
   190b0:	mov	r1, r7
   190b4:	mov	r0, fp
   190b8:	bl	4454 <readstat_write_bytes@plt>
   190bc:	mov	r3, #120	; 0x78
   190c0:	ldr	r4, [r9, #24]
   190c4:	strb	r3, [sp, #56]	; 0x38
   190c8:	ldr	r3, [r9, #28]
   190cc:	mov	r2, #1
   190d0:	cmp	r3, #119	; 0x77
   190d4:	ldr	r1, [sp, #16]
   190d8:	mov	r0, fp
   190dc:	strbls	r3, [sp, #56]	; 0x38
   190e0:	bl	4454 <readstat_write_bytes@plt>
   190e4:	cmp	r0, #0
   190e8:	bne	19308 <sav_begin_data+0x730>
   190ec:	mov	r2, #128	; 0x80
   190f0:	mov	r1, #32
   190f4:	mov	r0, sl
   190f8:	bl	42a4 <memset@plt>
   190fc:	ldrb	r9, [sp, #56]	; 0x38
   19100:	mov	r1, r4
   19104:	mov	r0, sl
   19108:	mov	r2, r9
   1910c:	bl	3f20 <memcpy@plt>
   19110:	add	r3, r9, #8
   19114:	bic	r2, r3, #7
   19118:	sub	r2, r2, #1
   1911c:	mov	r1, sl
   19120:	mov	r0, fp
   19124:	bl	4454 <readstat_write_bytes@plt>
   19128:	cmp	r0, #0
   1912c:	bne	19308 <sav_begin_data+0x730>
   19130:	ldr	r3, [sp, #60]	; 0x3c
   19134:	add	r5, r5, #1
   19138:	cmp	r5, r3
   1913c:	bge	19310 <sav_begin_data+0x738>
   19140:	mov	r1, r5
   19144:	mov	r0, r6
   19148:	bl	44cc <readstat_get_value_label@plt>
   1914c:	cmp	r8, #0
   19150:	mov	r9, r0
   19154:	beq	19088 <sav_begin_data+0x4b0>
   19158:	cmp	r8, #5
   1915c:	beq	1920c <sav_begin_data+0x634>
   19160:	cmp	r8, #3
   19164:	bne	190ac <sav_begin_data+0x4d4>
   19168:	vldr	s15, [r0, #8]
   1916c:	ldr	r3, [sp, #36]	; 0x24
   19170:	vcvt.f64.s32	d7, s15
   19174:	vstr	d7, [sp, #40]	; 0x28
   19178:	ldm	r3, {r0, r1}
   1917c:	stm	r7, {r0, r1}
   19180:	b	190ac <sav_begin_data+0x4d4>
   19184:	mov	r4, #39	; 0x27
   19188:	b	18f88 <sav_begin_data+0x3b0>
   1918c:	cmp	r0, #64	; 0x40
   19190:	movcc	r2, r0
   19194:	movcs	r2, #64	; 0x40
   19198:	mov	r1, r4
   1919c:	mov	r0, r7
   191a0:	bl	3f20 <memcpy@plt>
   191a4:	b	18f70 <sav_begin_data+0x398>
   191a8:	mov	ip, #51	; 0x33
   191ac:	mov	r2, #60	; 0x3c
   191b0:	mov	r1, #32
   191b4:	strb	ip, [sp, #139]	; 0x8b
   191b8:	bl	42a4 <memset@plt>
   191bc:	ldr	lr, [pc, #2688]	; 19c44 <sav_begin_data+0x106c>
   191c0:	add	lr, pc, lr
   191c4:	mov	ip, r0
   191c8:	ldm	lr!, {r0, r1, r2, r3}
   191cc:	stmia	ip!, {r0, r1, r2, r3}
   191d0:	ldm	lr!, {r0, r1, r2, r3}
   191d4:	stmia	ip!, {r0, r1, r2, r3}
   191d8:	ldm	lr!, {r0, r1, r2, r3}
   191dc:	stmia	ip!, {r0, r1, r2, r3}
   191e0:	ldm	lr, {r0, r1, r2}
   191e4:	lsr	r3, r2, #16
   191e8:	stmia	ip!, {r0, r1}
   191ec:	strh	r2, [ip], #2
   191f0:	strb	r3, [ip]
   191f4:	str	r4, [sp, #200]	; 0xc8
   191f8:	ldr	r3, [fp, #76]	; 0x4c
   191fc:	str	r4, [sp, #208]	; 0xd0
   19200:	lsr	r3, r3, #3
   19204:	str	r3, [sp, #204]	; 0xcc
   19208:	b	18e2c <sav_begin_data+0x254>
   1920c:	ldm	r0, {r0, r1}
   19210:	stm	r7, {r0, r1}
   19214:	b	190ac <sav_begin_data+0x4d4>
   19218:	mov	r2, #4
   1921c:	ldr	r1, [sp, #16]
   19220:	mov	r0, fp
   19224:	bl	4454 <readstat_write_bytes@plt>
   19228:	cmp	r0, #0
   1922c:	bne	19308 <sav_begin_data+0x730>
   19230:	mov	r1, r6
   19234:	ldr	r2, [sp, #56]	; 0x38
   19238:	mov	r0, fp
   1923c:	bl	4454 <readstat_write_bytes@plt>
   19240:	cmp	r0, #0
   19244:	bne	19308 <sav_begin_data+0x730>
   19248:	mov	r2, #1
   1924c:	ldr	r1, [sp, #32]
   19250:	mov	r0, fp
   19254:	bl	4454 <readstat_write_bytes@plt>
   19258:	cmp	r0, #0
   1925c:	bne	19308 <sav_begin_data+0x730>
   19260:	mov	r3, #8
   19264:	mov	r2, #4
   19268:	ldr	r1, [sp, #20]
   1926c:	mov	r0, fp
   19270:	str	r3, [sp, #60]	; 0x3c
   19274:	bl	4454 <readstat_write_bytes@plt>
   19278:	cmp	r0, #0
   1927c:	bne	19308 <sav_begin_data+0x730>
   19280:	ldr	r4, [sp, #12]
   19284:	mov	r6, r0
   19288:	mov	r0, r5
   1928c:	bl	4304 <readstat_variable_get_missing_ranges_count@plt>
   19290:	mov	r2, r6
   19294:	mov	r1, r5
   19298:	cmp	r6, r0
   1929c:	mov	r0, r9
   192a0:	bge	19f90 <sav_begin_data+0x13b8>
   192a4:	bl	3f44 <readstat_variable_get_missing_range_lo@plt>
   192a8:	mov	r2, r6
   192ac:	mov	r1, r5
   192b0:	mov	r0, r4
   192b4:	bl	4328 <readstat_variable_get_missing_range_hi@plt>
   192b8:	ldm	r9, {r0, r1, r2, r3}
   192bc:	bl	3fb0 <readstat_string_value@plt>
   192c0:	add	r6, r6, #1
   192c4:	mov	r7, r0
   192c8:	ldm	r4, {r0, r1, r2, r3}
   192cc:	bl	3fb0 <readstat_string_value@plt>
   192d0:	cmp	r7, #0
   192d4:	cmpne	r0, #0
   192d8:	mov	r1, r0
   192dc:	mov	r0, r7
   192e0:	beq	19288 <sav_begin_data+0x6b0>
   192e4:	bl	3e00 <strcmp@plt>
   192e8:	cmp	r0, #0
   192ec:	bne	19288 <sav_begin_data+0x6b0>
   192f0:	mov	r1, r7
   192f4:	ldr	r2, [sp, #60]	; 0x3c
   192f8:	mov	r0, fp
   192fc:	bl	4550 <readstat_write_space_padded_string@plt>
   19300:	cmp	r0, #0
   19304:	beq	19288 <sav_begin_data+0x6b0>
   19308:	mov	r4, r0
   1930c:	b	18f88 <sav_begin_data+0x3b0>
   19310:	mov	r3, #4
   19314:	mov	r0, r6
   19318:	str	r3, [sp, #72]	; 0x48
   1931c:	bl	17f2c <readstat_label_set_number_short_variables>
   19320:	mov	r2, #4
   19324:	ldr	r1, [sp, #32]
   19328:	str	r0, [sp, #88]	; 0x58
   1932c:	mov	r0, fp
   19330:	bl	4454 <readstat_write_bytes@plt>
   19334:	cmp	r0, #0
   19338:	bne	19308 <sav_begin_data+0x730>
   1933c:	mov	r2, #4
   19340:	mov	r1, r7
   19344:	mov	r0, fp
   19348:	bl	4454 <readstat_write_bytes@plt>
   1934c:	cmp	r0, #0
   19350:	bne	19308 <sav_begin_data+0x730>
   19354:	ldr	r3, [r6, #276]	; 0x114
   19358:	cmp	r3, #0
   1935c:	ble	18ff4 <sav_begin_data+0x41c>
   19360:	mov	r4, r0
   19364:	b	19374 <sav_begin_data+0x79c>
   19368:	ldr	r3, [r6, #276]	; 0x114
   1936c:	cmp	r4, r3
   19370:	bge	18ff4 <sav_begin_data+0x41c>
   19374:	mov	r1, r4
   19378:	mov	r0, r6
   1937c:	bl	4448 <readstat_get_label_set_variable@plt>
   19380:	add	r4, r4, #1
   19384:	ldr	r3, [r0, #1596]	; 0x63c
   19388:	cmp	r3, #8
   1938c:	bhi	19368 <sav_begin_data+0x790>
   19390:	ldr	r3, [r0, #1592]	; 0x638
   19394:	mov	r2, #4
   19398:	cmp	r3, #0
   1939c:	add	r1, r3, #7
   193a0:	movlt	r3, r1
   193a4:	mov	r0, fp
   193a8:	asr	r3, r3, #3
   193ac:	add	r3, r3, #1
   193b0:	mov	r1, sl
   193b4:	str	r3, [sp, #136]	; 0x88
   193b8:	bl	4454 <readstat_write_bytes@plt>
   193bc:	cmp	r0, #0
   193c0:	beq	19368 <sav_begin_data+0x790>
   193c4:	b	19308 <sav_begin_data+0x730>
   193c8:	ldr	r9, [sp, #32]
   193cc:	ldr	r3, [fp, #52]	; 0x34
   193d0:	mov	r2, #6
   193d4:	cmp	r3, #0
   193d8:	str	r3, [sp, #136]	; 0x88
   193dc:	str	r2, [sp, #88]	; 0x58
   193e0:	bne	19654 <sav_begin_data+0xa7c>
   193e4:	ldr	r5, [pc, #2140]	; 19c48 <sav_begin_data+0x1070>
   193e8:	mov	r2, #20
   193ec:	add	r5, pc, r5
   193f0:	add	r3, r5, #48	; 0x30
   193f4:	str	r2, [sp, #136]	; 0x88
   193f8:	ldm	r3, {r0, r1, r2, r3}
   193fc:	mov	ip, #0
   19400:	ldr	r4, [sp, #12]
   19404:	mov	r6, #1
   19408:	str	ip, [sp, #140]	; 0x8c
   1940c:	str	ip, [sp, #144]	; 0x90
   19410:	mvn	ip, #0
   19414:	stm	r4, {r0, r1, r2, r3}
   19418:	str	ip, [sp, #148]	; 0x94
   1941c:	str	r6, [sp, #152]	; 0x98
   19420:	str	r6, [sp, #156]	; 0x9c
   19424:	bl	3eb4 <machine_is_little_endian@plt>
   19428:	ldr	r3, [pc, #2076]	; 19c4c <sav_begin_data+0x1074>
   1942c:	mov	r1, r4
   19430:	str	r3, [sp, #164]	; 0xa4
   19434:	mov	r2, #16
   19438:	cmp	r0, #0
   1943c:	moveq	r3, r6
   19440:	movne	r3, #2
   19444:	mov	r0, fp
   19448:	str	r3, [sp, #160]	; 0xa0
   1944c:	bl	4454 <readstat_write_bytes@plt>
   19450:	subs	r4, r0, #0
   19454:	bne	18f88 <sav_begin_data+0x3b0>
   19458:	mov	r2, #32
   1945c:	mov	r1, sl
   19460:	mov	r0, fp
   19464:	bl	4454 <readstat_write_bytes@plt>
   19468:	subs	r4, r0, #0
   1946c:	bne	18f88 <sav_begin_data+0x3b0>
   19470:	add	r5, r5, #64	; 0x40
   19474:	ldr	ip, [sp, #12]
   19478:	ldm	r5, {r0, r1, r2, r3}
   1947c:	stm	ip, {r0, r1, r2, r3}
   19480:	mov	r2, #16
   19484:	mov	r1, ip
   19488:	mov	r0, fp
   1948c:	bl	4454 <readstat_write_bytes@plt>
   19490:	subs	r4, r0, #0
   19494:	bne	18f88 <sav_begin_data+0x3b0>
   19498:	ldr	r3, [pc, #1968]	; 19c50 <sav_begin_data+0x1078>
   1949c:	mvn	r0, #0
   194a0:	mvn	r1, #1048576	; 0x100000
   194a4:	mvn	r2, #0
   194a8:	mvn	r4, #1
   194ac:	mvn	r5, #1048576	; 0x100000
   194b0:	strd	r0, [sp, #136]	; 0x88
   194b4:	strd	r2, [sp, #144]	; 0x90
   194b8:	mov	r1, sl
   194bc:	mov	r2, #24
   194c0:	mov	r0, fp
   194c4:	strd	r4, [sp, #152]	; 0x98
   194c8:	bl	4454 <readstat_write_bytes@plt>
   194cc:	subs	r4, r0, #0
   194d0:	bne	18f88 <sav_begin_data+0x3b0>
   194d4:	ldr	r2, [fp, #28]
   194d8:	mov	r3, #7
   194dc:	cmp	r2, #0
   194e0:	str	r3, [sp, #136]	; 0x88
   194e4:	mov	r2, #11
   194e8:	mov	r3, #4
   194ec:	str	r4, [sl, #12]
   194f0:	str	r2, [sp, #140]	; 0x8c
   194f4:	str	r3, [sp, #144]	; 0x90
   194f8:	ble	19558 <sav_begin_data+0x980>
   194fc:	ldr	r7, [pc, #1872]	; 19c54 <sav_begin_data+0x107c>
   19500:	mov	r5, r4
   19504:	mov	r1, r5
   19508:	mov	r0, fp
   1950c:	bl	437c <readstat_get_variable@plt>
   19510:	mov	r1, r6
   19514:	add	r5, r5, #1
   19518:	ldr	ip, [r0, #1600]	; 0x640
   1951c:	ldr	r0, [r0]
   19520:	add	r3, ip, #251	; 0xfb
   19524:	cmp	ip, #255	; 0xff
   19528:	lsr	r3, r3, #2
   1952c:	clz	r2, r0
   19530:	lsr	r2, r2, #5
   19534:	movls	r2, #0
   19538:	cmp	r2, #0
   1953c:	umull	r2, r3, r7, r3
   19540:	lsrne	r1, r3, #3
   19544:	ldr	r3, [fp, #28]
   19548:	add	r4, r4, r1
   1954c:	cmp	r5, r3
   19550:	blt	19504 <sav_begin_data+0x92c>
   19554:	add	r4, r4, r4, lsl #1
   19558:	mov	r2, #16
   1955c:	mov	r1, sl
   19560:	mov	r0, fp
   19564:	str	r4, [sp, #148]	; 0x94
   19568:	bl	4454 <readstat_write_bytes@plt>
   1956c:	subs	r4, r0, #0
   19570:	bne	18f88 <sav_begin_data+0x3b0>
   19574:	ldr	ip, [fp, #28]
   19578:	cmp	ip, #0
   1957c:	ble	196f8 <sav_begin_data+0xb20>
   19580:	ldr	r8, [pc, #1740]	; 19c54 <sav_begin_data+0x107c>
   19584:	mov	r6, r4
   19588:	mov	r7, #4
   1958c:	mov	r1, r6
   19590:	mov	r0, fp
   19594:	bl	437c <readstat_get_variable@plt>
   19598:	mov	r4, r0
   1959c:	bl	431c <readstat_variable_get_measure@plt>
   195a0:	bl	4070 <spss_measure_from_readstat_measure@plt>
   195a4:	str	r0, [sp, #60]	; 0x3c
   195a8:	mov	r0, r4
   195ac:	bl	4220 <readstat_variable_get_display_width@plt>
   195b0:	cmp	r0, #0
   195b4:	movgt	r3, r0
   195b8:	movle	r3, #8
   195bc:	mov	r0, r4
   195c0:	str	r3, [sp, #72]	; 0x48
   195c4:	bl	4430 <readstat_variable_get_alignment@plt>
   195c8:	bl	3e60 <spss_alignment_from_readstat_alignment@plt>
   195cc:	ldr	r1, [r4]
   195d0:	clz	r2, r1
   195d4:	lsr	r2, r2, #5
   195d8:	str	r0, [sp, #88]	; 0x58
   195dc:	ldr	r3, [r4, #1600]	; 0x640
   195e0:	cmp	r3, #255	; 0xff
   195e4:	movls	r2, #0
   195e8:	cmp	r2, #0
   195ec:	moveq	r5, #1
   195f0:	addne	r5, r3, #251	; 0xfb
   195f4:	lsrne	r5, r5, #2
   195f8:	umullne	r3, r5, r8, r5
   195fc:	lsrne	r5, r5, #3
   19600:	subs	r5, r5, #1
   19604:	mov	r2, r7
   19608:	ldr	r1, [sp, #20]
   1960c:	mov	r0, fp
   19610:	bcc	1a0fc <sav_begin_data+0x1524>
   19614:	bl	4454 <readstat_write_bytes@plt>
   19618:	mov	r2, r7
   1961c:	mov	r1, r9
   19620:	subs	r4, r0, #0
   19624:	mov	r0, fp
   19628:	bne	18f88 <sav_begin_data+0x3b0>
   1962c:	bl	4454 <readstat_write_bytes@plt>
   19630:	mov	r2, r7
   19634:	ldr	r1, [sp, #12]
   19638:	subs	r4, r0, #0
   1963c:	mov	r0, fp
   19640:	bne	18f88 <sav_begin_data+0x3b0>
   19644:	bl	4454 <readstat_write_bytes@plt>
   19648:	subs	r4, r0, #0
   1964c:	beq	19600 <sav_begin_data+0xa28>
   19650:	b	18f88 <sav_begin_data+0x3b0>
   19654:	mov	r2, #4
   19658:	ldr	r1, [sp, #12]
   1965c:	mov	r0, fp
   19660:	bl	4454 <readstat_write_bytes@plt>
   19664:	subs	r4, r0, #0
   19668:	bne	18f88 <sav_begin_data+0x3b0>
   1966c:	mov	r2, #4
   19670:	mov	r1, sl
   19674:	mov	r0, fp
   19678:	bl	4454 <readstat_write_bytes@plt>
   1967c:	subs	r4, r0, #0
   19680:	bne	18f88 <sav_begin_data+0x3b0>
   19684:	ldr	r3, [fp, #52]	; 0x34
   19688:	cmp	r3, #0
   1968c:	movgt	r5, r4
   19690:	bgt	196c4 <sav_begin_data+0xaec>
   19694:	b	193e4 <sav_begin_data+0x80c>
   19698:	bl	4454 <readstat_write_bytes@plt>
   1969c:	rsb	r1, r4, #80	; 0x50
   196a0:	subs	r4, r0, #0
   196a4:	mov	r0, fp
   196a8:	bne	18f88 <sav_begin_data+0x3b0>
   196ac:	bl	3ddc <readstat_write_spaces@plt>
   196b0:	subs	r4, r0, #0
   196b4:	bne	18f88 <sav_begin_data+0x3b0>
   196b8:	ldr	r3, [fp, #52]	; 0x34
   196bc:	cmp	r5, r3
   196c0:	bge	193e4 <sav_begin_data+0x80c>
   196c4:	ldr	r3, [fp, #48]	; 0x30
   196c8:	ldr	r6, [r3, r5, lsl #2]
   196cc:	add	r5, r5, #1
   196d0:	mov	r0, r6
   196d4:	bl	41fc <strlen@plt>
   196d8:	mov	r1, r6
   196dc:	mov	r4, r0
   196e0:	cmp	r4, #80	; 0x50
   196e4:	mov	r2, r0
   196e8:	mov	r0, fp
   196ec:	bls	19698 <sav_begin_data+0xac0>
   196f0:	mov	r4, #32
   196f4:	b	18f88 <sav_begin_data+0x3b0>
   196f8:	ldr	r3, [pc, #1368]	; 19c58 <sav_begin_data+0x1080>
   196fc:	add	r3, pc, r3
   19700:	add	r3, r3, #80	; 0x50
   19704:	ldm	r3, {r0, r1, r2, r3}
   19708:	stm	sl, {r0, r1, r2, r3}
   1970c:	ldr	r3, [sp, #148]	; 0x94
   19710:	cmp	r3, #0
   19714:	ble	19820 <sav_begin_data+0xc48>
   19718:	sub	r3, r3, #1
   1971c:	mov	r2, #16
   19720:	mov	r1, sl
   19724:	mov	r0, fp
   19728:	str	r3, [sp, #148]	; 0x94
   1972c:	bl	4454 <readstat_write_bytes@plt>
   19730:	subs	r4, r0, #0
   19734:	bne	18f88 <sav_begin_data+0x3b0>
   19738:	ldr	r3, [fp, #28]
   1973c:	cmp	r3, #0
   19740:	ble	19904 <sav_begin_data+0xd2c>
   19744:	ldr	r3, [pc, #1296]	; 19c5c <sav_begin_data+0x1084>
   19748:	mov	r7, r4
   1974c:	add	r3, pc, r3
   19750:	str	r3, [sp, #28]
   19754:	ldr	r3, [sp, #24]
   19758:	mov	r8, #1
   1975c:	mov	r4, r3
   19760:	mov	r1, r7
   19764:	mov	r0, fp
   19768:	bl	437c <readstat_get_variable@plt>
   1976c:	mov	r3, r4
   19770:	ldr	r2, [sp, #28]
   19774:	mov	r1, #9
   19778:	add	r7, r7, #1
   1977c:	add	r4, r4, #15
   19780:	mov	r5, r0
   19784:	add	r5, r5, #8
   19788:	ldr	r0, [sp, #12]
   1978c:	bl	4280 <snprintf@plt>
   19790:	mov	r0, r5
   19794:	bl	41fc <strlen@plt>
   19798:	mov	r3, #61	; 0x3d
   1979c:	strb	r3, [sp, #60]	; 0x3c
   197a0:	mov	r3, #9
   197a4:	strb	r3, [sp, #72]	; 0x48
   197a8:	subs	r6, r0, #0
   197ac:	beq	19814 <sav_begin_data+0xc3c>
   197b0:	cmp	r6, #64	; 0x40
   197b4:	movcs	r6, #64	; 0x40
   197b8:	cmp	r8, #0
   197bc:	mov	r2, #1
   197c0:	mov	r1, r9
   197c4:	mov	r0, fp
   197c8:	mov	r8, #0
   197cc:	beq	1a1b8 <sav_begin_data+0x15e0>
   197d0:	ldr	r1, [sp, #12]
   197d4:	mov	r0, fp
   197d8:	bl	4154 <readstat_write_string@plt>
   197dc:	mov	r2, #1
   197e0:	ldr	r1, [sp, #20]
   197e4:	subs	r3, r0, #0
   197e8:	mov	r0, fp
   197ec:	bne	1a1c4 <sav_begin_data+0x15ec>
   197f0:	bl	4454 <readstat_write_bytes@plt>
   197f4:	mov	r2, r6
   197f8:	mov	r1, r5
   197fc:	subs	r3, r0, #0
   19800:	mov	r0, fp
   19804:	bne	1a1c4 <sav_begin_data+0x15ec>
   19808:	bl	4454 <readstat_write_bytes@plt>
   1980c:	subs	r3, r0, #0
   19810:	bne	1a1c4 <sav_begin_data+0x15ec>
   19814:	ldr	ip, [fp, #28]
   19818:	cmp	r7, ip
   1981c:	blt	19760 <sav_begin_data+0xb88>
   19820:	ldr	r3, [pc, #1080]	; 19c60 <sav_begin_data+0x1088>
   19824:	cmp	ip, #0
   19828:	add	r3, pc, r3
   1982c:	add	r3, r3, #112	; 0x70
   19830:	mov	r5, #0
   19834:	ldm	r3, {r0, r1, r2, r3}
   19838:	mov	ip, #9
   1983c:	strb	r5, [sp, #60]	; 0x3c
   19840:	strb	ip, [sp, #61]	; 0x3d
   19844:	stm	sl, {r0, r1, r2, r3}
   19848:	ble	19924 <sav_begin_data+0xd4c>
   1984c:	ldr	r8, [pc, #1040]	; 19c64 <sav_begin_data+0x108c>
   19850:	ldr	r7, [pc, #1040]	; 19c68 <sav_begin_data+0x1090>
   19854:	ldr	r6, [sp, #24]
   19858:	add	r8, pc, r8
   1985c:	add	r7, pc, r7
   19860:	str	ip, [sp, #28]
   19864:	str	r7, [sp, #32]
   19868:	mov	r1, r5
   1986c:	mov	r0, fp
   19870:	bl	437c <readstat_get_variable@plt>
   19874:	add	r5, r5, #1
   19878:	ldr	r3, [r0, #1600]	; 0x640
   1987c:	mov	r4, r0
   19880:	cmp	r3, #255	; 0xff
   19884:	bls	198f0 <sav_begin_data+0xd18>
   19888:	mov	r3, r6
   1988c:	ldr	r2, [sp, #32]
   19890:	ldr	r1, [sp, #28]
   19894:	mov	r0, r9
   19898:	bl	4280 <snprintf@plt>
   1989c:	ldr	lr, [r4, #1600]	; 0x640
   198a0:	ldr	r0, [pc, #964]	; 19c6c <sav_begin_data+0x1094>
   198a4:	ldr	r7, [pc, #964]	; 19c70 <sav_begin_data+0x1098>
   198a8:	lsr	ip, lr, #5
   198ac:	ldr	r4, [sp, #12]
   198b0:	umull	r0, ip, r0, ip
   198b4:	mov	r3, r9
   198b8:	lsr	ip, ip, #7
   198bc:	mov	r2, r8
   198c0:	mul	ip, r7, ip
   198c4:	mov	r1, #15
   198c8:	sub	ip, lr, ip
   198cc:	str	ip, [sp]
   198d0:	mov	r0, r4
   198d4:	bl	4280 <snprintf@plt>
   198d8:	mov	r0, r4
   198dc:	bl	41fc <strlen@plt>
   198e0:	ldr	r3, [sp, #148]	; 0x94
   198e4:	add	r3, r3, #2
   198e8:	add	r3, r3, r0
   198ec:	str	r3, [sp, #148]	; 0x94
   198f0:	ldr	r3, [fp, #28]
   198f4:	add	r6, r6, #15
   198f8:	cmp	r5, r3
   198fc:	blt	19868 <sav_begin_data+0xc90>
   19900:	b	19924 <sav_begin_data+0xd4c>
   19904:	ldr	r3, [pc, #872]	; 19c74 <sav_begin_data+0x109c>
   19908:	mov	ip, #9
   1990c:	add	r3, pc, r3
   19910:	add	r3, r3, #112	; 0x70
   19914:	strb	r4, [sp, #60]	; 0x3c
   19918:	ldm	r3, {r0, r1, r2, r3}
   1991c:	strb	ip, [sp, #61]	; 0x3d
   19920:	stm	sl, {r0, r1, r2, r3}
   19924:	ldr	r3, [sp, #148]	; 0x94
   19928:	cmp	r3, #0
   1992c:	bne	19acc <sav_begin_data+0xef4>
   19930:	ldr	r3, [pc, #832]	; 19c78 <sav_begin_data+0x10a0>
   19934:	ldr	r2, [fp, #40]	; 0x28
   19938:	add	r3, pc, r3
   1993c:	add	r3, r3, #128	; 0x80
   19940:	cmp	r2, #0
   19944:	ldm	r3, {r0, r1, r2, r3}
   19948:	movgt	r4, #0
   1994c:	strgt	r9, [sp, #28]
   19950:	stm	sl, {r0, r1, r2, r3}
   19954:	ble	1998c <sav_begin_data+0xdb4>
   19958:	mov	r1, r4
   1995c:	mov	r0, fp
   19960:	bl	4424 <readstat_get_label_set@plt>
   19964:	mov	r6, r0
   19968:	bl	17f2c <readstat_label_set_number_short_variables>
   1996c:	ldr	r9, [r6, #276]	; 0x114
   19970:	cmp	r0, r9
   19974:	blt	19a68 <sav_begin_data+0xe90>
   19978:	ldr	r3, [fp, #40]	; 0x28
   1997c:	add	r4, r4, #1
   19980:	cmp	r4, r3
   19984:	blt	19958 <sav_begin_data+0xd80>
   19988:	ldr	r9, [sp, #28]
   1998c:	ldr	r3, [sp, #148]	; 0x94
   19990:	cmp	r3, #0
   19994:	bne	19ea0 <sav_begin_data+0x12c8>
   19998:	ldr	r3, [pc, #732]	; 19c7c <sav_begin_data+0x10a4>
   1999c:	ldr	r2, [fp, #28]
   199a0:	add	r3, pc, r3
   199a4:	add	r3, r3, #96	; 0x60
   199a8:	cmp	r2, #0
   199ac:	str	r2, [sp, #28]
   199b0:	ldm	r3, {r0, r1, r2, r3}
   199b4:	movgt	r8, #0
   199b8:	stm	sl, {r0, r1, r2, r3}
   199bc:	ble	19ccc <sav_begin_data+0x10f4>
   199c0:	mov	r1, r8
   199c4:	mov	r0, fp
   199c8:	bl	437c <readstat_get_variable@plt>
   199cc:	mov	r6, r0
   199d0:	add	r0, r0, #8
   199d4:	bl	41fc <strlen@plt>
   199d8:	str	r0, [sp, #32]
   199dc:	mov	r0, r6
   199e0:	bl	42c8 <readstat_variable_get_storage_width@plt>
   199e4:	cmp	r0, #8
   199e8:	ble	19cbc <sav_begin_data+0x10e4>
   199ec:	mov	r4, #0
   199f0:	mov	r5, r4
   199f4:	mov	r7, r8
   199f8:	mov	r0, r6
   199fc:	bl	4304 <readstat_variable_get_missing_ranges_count@plt>
   19a00:	mov	r2, r5
   19a04:	mov	r1, r6
   19a08:	cmp	r5, r0
   19a0c:	mov	r0, r9
   19a10:	bge	19c98 <sav_begin_data+0x10c0>
   19a14:	bl	3f44 <readstat_variable_get_missing_range_lo@plt>
   19a18:	mov	r2, r5
   19a1c:	mov	r1, r6
   19a20:	ldr	r0, [sp, #12]
   19a24:	bl	4328 <readstat_variable_get_missing_range_hi@plt>
   19a28:	ldm	r9, {r0, r1, r2, r3}
   19a2c:	bl	3fb0 <readstat_string_value@plt>
   19a30:	ldr	r3, [sp, #12]
   19a34:	add	r5, r5, #1
   19a38:	mov	r8, r0
   19a3c:	ldm	r3, {r0, r1, r2, r3}
   19a40:	bl	3fb0 <readstat_string_value@plt>
   19a44:	cmp	r8, #0
   19a48:	cmpne	r0, #0
   19a4c:	mov	r1, r0
   19a50:	mov	r0, r8
   19a54:	beq	199f8 <sav_begin_data+0xe20>
   19a58:	bl	3e00 <strcmp@plt>
   19a5c:	cmp	r0, #0
   19a60:	addeq	r4, r4, #1
   19a64:	b	199f8 <sav_begin_data+0xe20>
   19a68:	cmp	r9, #0
   19a6c:	ldr	r8, [r6, #264]	; 0x108
   19a70:	ble	19978 <sav_begin_data+0xda0>
   19a74:	mov	r3, r8
   19a78:	mov	r5, #0
   19a7c:	mov	r8, r6
   19a80:	mov	r6, r3
   19a84:	str	r4, [sp, #32]
   19a88:	mov	r1, r5
   19a8c:	mov	r0, r8
   19a90:	bl	4448 <readstat_get_label_set_variable@plt>
   19a94:	mov	r4, r0
   19a98:	add	r0, r0, #8
   19a9c:	bl	41fc <strlen@plt>
   19aa0:	mov	r7, r0
   19aa4:	mov	r0, r4
   19aa8:	bl	42c8 <readstat_variable_get_storage_width@plt>
   19aac:	cmp	r0, #8
   19ab0:	mov	r4, r0
   19ab4:	bgt	19b40 <sav_begin_data+0xf68>
   19ab8:	add	r5, r5, #1
   19abc:	cmp	r9, r5
   19ac0:	bne	19a88 <sav_begin_data+0xeb0>
   19ac4:	ldr	r4, [sp, #32]
   19ac8:	b	19978 <sav_begin_data+0xda0>
   19acc:	mov	r2, #16
   19ad0:	mov	r1, sl
   19ad4:	mov	r0, fp
   19ad8:	bl	4454 <readstat_write_bytes@plt>
   19adc:	subs	r4, r0, #0
   19ae0:	bne	18f88 <sav_begin_data+0x3b0>
   19ae4:	ldr	r3, [fp, #28]
   19ae8:	cmp	r3, #0
   19aec:	ble	19930 <sav_begin_data+0xd58>
   19af0:	ldr	r8, [pc, #392]	; 19c80 <sav_begin_data+0x10a8>
   19af4:	ldr	r7, [pc, #392]	; 19c84 <sav_begin_data+0x10ac>
   19af8:	ldr	r6, [sp, #24]
   19afc:	add	r8, pc, r8
   19b00:	mov	r5, r4
   19b04:	add	r7, pc, r7
   19b08:	str	r7, [sp, #28]
   19b0c:	mov	r1, r5
   19b10:	mov	r0, fp
   19b14:	bl	437c <readstat_get_variable@plt>
   19b18:	add	r5, r5, #1
   19b1c:	ldr	r3, [r0, #1600]	; 0x640
   19b20:	mov	r4, r0
   19b24:	cmp	r3, #255	; 0xff
   19b28:	bhi	19b98 <sav_begin_data+0xfc0>
   19b2c:	ldr	r3, [fp, #28]
   19b30:	add	r6, r6, #15
   19b34:	cmp	r5, r3
   19b38:	blt	19b0c <sav_begin_data+0xf34>
   19b3c:	b	19930 <sav_begin_data+0xd58>
   19b40:	ldr	r3, [sp, #148]	; 0x94
   19b44:	cmp	r6, #0
   19b48:	add	r3, r7, r3
   19b4c:	add	r3, r3, #12
   19b50:	str	r3, [sp, #148]	; 0x94
   19b54:	ble	19ab8 <sav_begin_data+0xee0>
   19b58:	mov	r7, #0
   19b5c:	mov	r1, r7
   19b60:	mov	r0, r8
   19b64:	bl	44cc <readstat_get_value_label@plt>
   19b68:	ldr	r3, [sp, #148]	; 0x94
   19b6c:	add	r7, r7, #1
   19b70:	add	r3, r4, r3
   19b74:	add	r3, r3, #8
   19b78:	ldr	r2, [r0, #28]
   19b7c:	cmp	r2, #120	; 0x78
   19b80:	addle	r3, r3, r2
   19b84:	addgt	r3, r3, #120	; 0x78
   19b88:	cmp	r6, r7
   19b8c:	str	r3, [sp, #148]	; 0x94
   19b90:	bne	19b5c <sav_begin_data+0xf84>
   19b94:	b	19ab8 <sav_begin_data+0xee0>
   19b98:	mov	r3, r6
   19b9c:	ldr	r2, [sp, #28]
   19ba0:	mov	r1, #9
   19ba4:	mov	r0, r9
   19ba8:	bl	4280 <snprintf@plt>
   19bac:	ldr	lr, [r4, #1600]	; 0x640
   19bb0:	ldr	r0, [pc, #180]	; 19c6c <sav_begin_data+0x1094>
   19bb4:	ldr	r7, [pc, #180]	; 19c70 <sav_begin_data+0x1098>
   19bb8:	lsr	ip, lr, #5
   19bbc:	ldr	r4, [sp, #12]
   19bc0:	umull	r0, ip, r0, ip
   19bc4:	mov	r2, r8
   19bc8:	lsr	ip, ip, #7
   19bcc:	mov	r3, r9
   19bd0:	mul	ip, r7, ip
   19bd4:	mov	r1, #15
   19bd8:	sub	ip, lr, ip
   19bdc:	mov	r0, r4
   19be0:	str	ip, [sp]
   19be4:	bl	4280 <snprintf@plt>
   19be8:	mov	r1, r4
   19bec:	mov	r0, fp
   19bf0:	bl	4154 <readstat_write_string@plt>
   19bf4:	mov	r2, #2
   19bf8:	ldr	r1, [sp, #20]
   19bfc:	subs	r4, r0, #0
   19c00:	mov	r0, fp
   19c04:	bne	18f88 <sav_begin_data+0x3b0>
   19c08:	bl	4454 <readstat_write_bytes@plt>
   19c0c:	subs	r4, r0, #0
   19c10:	beq	19b2c <sav_begin_data+0xf54>
   19c14:	b	18f88 <sav_begin_data+0x3b0>
   19c18:	.word	0x0000cce4
   19c1c:	.word	0x0000ccdc
   19c20:	.word	0x0000ccd8
   19c24:	.word	0x0000cae4
   19c28:	.word	0x324c4624
   19c2c:	.word	0x0000cb50
   19c30:	.word	0x51eb851f
   19c34:	.word	0x40590000
   19c38:	.word	0x0000cac0
   19c3c:	.word	0x0000b8d0
   19c40:	.word	0x20202020
   19c44:	.word	0x0000c770
   19c48:	.word	0x0000c454
   19c4c:	.word	0x0000fde9
   19c50:	.word	0x7fefffff
   19c54:	.word	0x20820821
   19c58:	.word	0x0000c144
   19c5c:	.word	0x0000acc0
   19c60:	.word	0x0000c018
   19c64:	.word	0x0000c124
   19c68:	.word	0x0000abb0
   19c6c:	.word	0x0a7c5ac5
   19c70:	.word	0x000186a0
   19c74:	.word	0x0000bf34
   19c78:	.word	0x0000bf08
   19c7c:	.word	0x0000bea0
   19c80:	.word	0x0000be80
   19c84:	.word	0x0000a908
   19c88:	.word	0x0000bb60
   19c8c:	.word	0x000003e7
   19c90:	.word	0x0000b72c
   19c94:	.word	0x0000a2dc
   19c98:	cmp	r4, #0
   19c9c:	mov	r8, r7
   19ca0:	beq	19cbc <sav_begin_data+0x10e4>
   19ca4:	ldr	r3, [sp, #148]	; 0x94
   19ca8:	ldr	r2, [sp, #32]
   19cac:	add	r3, r2, r3
   19cb0:	add	r3, r3, #9
   19cb4:	add	r4, r3, r4, lsl #3
   19cb8:	str	r4, [sp, #148]	; 0x94
   19cbc:	ldr	r3, [sp, #28]
   19cc0:	add	r8, r8, #1
   19cc4:	cmp	r3, r8
   19cc8:	bne	199c0 <sav_begin_data+0xde8>
   19ccc:	ldr	r3, [sp, #148]	; 0x94
   19cd0:	cmp	r3, #0
   19cd4:	bne	19db8 <sav_begin_data+0x11e0>
   19cd8:	ldr	r3, [pc, #-88]	; 19c88 <sav_begin_data+0x10b0>
   19cdc:	ldr	r4, [fp, #80]	; 0x50
   19ce0:	add	r3, pc, r3
   19ce4:	add	r3, r3, #144	; 0x90
   19ce8:	asr	r5, r4, #31
   19cec:	ldm	r3, {r0, r1, r2, r3}
   19cf0:	strd	r4, [sp, #88]	; 0x58
   19cf4:	mov	r4, #1
   19cf8:	mov	r5, #0
   19cfc:	stm	sl, {r0, r1, r2, r3}
   19d00:	mov	r2, #16
   19d04:	mov	r1, sl
   19d08:	mov	r0, fp
   19d0c:	strd	r4, [sp, #72]	; 0x48
   19d10:	bl	4454 <readstat_write_bytes@plt>
   19d14:	subs	r4, r0, #0
   19d18:	bne	18f88 <sav_begin_data+0x3b0>
   19d1c:	mov	r1, r9
   19d20:	mov	r2, #8
   19d24:	mov	r0, fp
   19d28:	bl	4454 <readstat_write_bytes@plt>
   19d2c:	subs	r4, r0, #0
   19d30:	bne	18f88 <sav_begin_data+0x3b0>
   19d34:	ldr	r1, [sp, #12]
   19d38:	mov	r2, #8
   19d3c:	mov	r0, fp
   19d40:	bl	4454 <readstat_write_bytes@plt>
   19d44:	subs	r4, r0, #0
   19d48:	bne	18f88 <sav_begin_data+0x3b0>
   19d4c:	ldr	r3, [pc, #-200]	; 19c8c <sav_begin_data+0x10b4>
   19d50:	mov	r1, sl
   19d54:	mov	r2, #8
   19d58:	mov	r0, fp
   19d5c:	str	r4, [sl, #4]
   19d60:	str	r3, [sp, #136]	; 0x88
   19d64:	bl	4454 <readstat_write_bytes@plt>
   19d68:	mov	r4, r0
   19d6c:	ldr	r0, [sp, #24]
   19d70:	bl	3ec0 <free@plt>
   19d74:	cmp	r4, #0
   19d78:	bne	18bf0 <sav_begin_data+0x18>
   19d7c:	ldr	r0, [fp, #76]	; 0x4c
   19d80:	bl	3fe0 <sav_compressed_row_bound@plt>
   19d84:	ldr	r3, [fp, #16]
   19d88:	cmp	r3, #1
   19d8c:	beq	19dac <sav_begin_data+0x11d4>
   19d90:	cmp	r3, #2
   19d94:	bne	18bf0 <sav_begin_data+0x18>
   19d98:	ldr	r2, [fp, #4]
   19d9c:	mov	r3, r4
   19da0:	bl	40ac <zsav_ctx_init@plt>
   19da4:	str	r0, [fp, #300]	; 0x12c
   19da8:	b	18bf0 <sav_begin_data+0x18>
   19dac:	bl	422c <readstat_malloc@plt>
   19db0:	str	r0, [fp, #300]	; 0x12c
   19db4:	b	18bf0 <sav_begin_data+0x18>
   19db8:	mov	r2, #16
   19dbc:	mov	r1, sl
   19dc0:	mov	r0, fp
   19dc4:	bl	4454 <readstat_write_bytes@plt>
   19dc8:	subs	r4, r0, #0
   19dcc:	bne	18f88 <sav_begin_data+0x3b0>
   19dd0:	ldr	r3, [sp, #28]
   19dd4:	cmp	r3, #0
   19dd8:	ble	19cd8 <sav_begin_data+0x1100>
   19ddc:	ldr	r3, [sp, #16]
   19de0:	mov	r8, r4
   19de4:	sub	r3, r3, #1
   19de8:	str	r3, [sp, #32]
   19dec:	mov	r1, r8
   19df0:	mov	r0, fp
   19df4:	bl	437c <readstat_get_variable@plt>
   19df8:	add	r6, r0, #8
   19dfc:	mov	r5, r0
   19e00:	mov	r0, r6
   19e04:	bl	41fc <strlen@plt>
   19e08:	mov	r3, #0
   19e0c:	strb	r3, [sp, #55]	; 0x37
   19e10:	str	r0, [sp, #56]	; 0x38
   19e14:	mov	r0, r5
   19e18:	bl	42c8 <readstat_variable_get_storage_width@plt>
   19e1c:	cmp	r0, #8
   19e20:	movgt	r4, #0
   19e24:	ble	19f90 <sav_begin_data+0x13b8>
   19e28:	mov	r0, r5
   19e2c:	bl	4304 <readstat_variable_get_missing_ranges_count@plt>
   19e30:	mov	r2, r4
   19e34:	mov	r1, r5
   19e38:	cmp	r4, r0
   19e3c:	mov	r0, r9
   19e40:	bge	19f80 <sav_begin_data+0x13a8>
   19e44:	bl	3f44 <readstat_variable_get_missing_range_lo@plt>
   19e48:	mov	r2, r4
   19e4c:	mov	r1, r5
   19e50:	ldr	r0, [sp, #12]
   19e54:	bl	4328 <readstat_variable_get_missing_range_hi@plt>
   19e58:	ldm	r9, {r0, r1, r2, r3}
   19e5c:	bl	3fb0 <readstat_string_value@plt>
   19e60:	ldr	r3, [sp, #12]
   19e64:	add	r4, r4, #1
   19e68:	mov	r7, r0
   19e6c:	ldm	r3, {r0, r1, r2, r3}
   19e70:	bl	3fb0 <readstat_string_value@plt>
   19e74:	cmp	r7, #0
   19e78:	cmpne	r0, #0
   19e7c:	mov	r1, r0
   19e80:	mov	r0, r7
   19e84:	beq	19e28 <sav_begin_data+0x1250>
   19e88:	bl	3e00 <strcmp@plt>
   19e8c:	cmp	r0, #0
   19e90:	ldrbeq	r3, [sp, #55]	; 0x37
   19e94:	addeq	r3, r3, #1
   19e98:	strbeq	r3, [sp, #55]	; 0x37
   19e9c:	b	19e28 <sav_begin_data+0x1250>
   19ea0:	mov	r2, #16
   19ea4:	mov	r1, sl
   19ea8:	mov	r0, fp
   19eac:	bl	4454 <readstat_write_bytes@plt>
   19eb0:	subs	r4, r0, #0
   19eb4:	bne	18f88 <sav_begin_data+0x3b0>
   19eb8:	ldr	r3, [fp, #40]	; 0x28
   19ebc:	cmp	r3, #0
   19ec0:	ble	19998 <sav_begin_data+0xdc0>
   19ec4:	mov	r5, r4
   19ec8:	str	r4, [sp, #28]
   19ecc:	str	sl, [sp, #32]
   19ed0:	ldr	r1, [sp, #28]
   19ed4:	mov	r0, fp
   19ed8:	bl	4424 <readstat_get_label_set@plt>
   19edc:	mov	r7, r0
   19ee0:	bl	17f2c <readstat_label_set_number_short_variables>
   19ee4:	ldr	r4, [r7, #276]	; 0x114
   19ee8:	cmp	r0, r4
   19eec:	bge	19f50 <sav_begin_data+0x1378>
   19ef0:	ldr	r3, [r7, #264]	; 0x108
   19ef4:	cmp	r4, #0
   19ef8:	str	r3, [sp, #56]	; 0x38
   19efc:	ble	19f50 <sav_begin_data+0x1378>
   19f00:	mov	r6, #0
   19f04:	str	r4, [sp, #36]	; 0x24
   19f08:	mov	r1, r6
   19f0c:	mov	r0, r7
   19f10:	bl	4448 <readstat_get_label_set_variable@plt>
   19f14:	add	r8, r0, #8
   19f18:	mov	sl, r0
   19f1c:	mov	r0, r8
   19f20:	bl	41fc <strlen@plt>
   19f24:	str	r0, [sp, #60]	; 0x3c
   19f28:	mov	r0, sl
   19f2c:	bl	42c8 <readstat_variable_get_storage_width@plt>
   19f30:	cmp	r0, #8
   19f34:	mov	r1, r0
   19f38:	str	r0, [sp, #72]	; 0x48
   19f3c:	bgt	19fa4 <sav_begin_data+0x13cc>
   19f40:	ldr	r3, [sp, #36]	; 0x24
   19f44:	add	r6, r6, #1
   19f48:	cmp	r3, r6
   19f4c:	bne	19f08 <sav_begin_data+0x1330>
   19f50:	ldr	r2, [sp, #28]
   19f54:	ldr	r3, [fp, #40]	; 0x28
   19f58:	add	r2, r2, #1
   19f5c:	cmp	r2, r3
   19f60:	str	r2, [sp, #28]
   19f64:	blt	19ed0 <sav_begin_data+0x12f8>
   19f68:	cmp	r5, #0
   19f6c:	ldr	sl, [sp, #32]
   19f70:	beq	19998 <sav_begin_data+0xdc0>
   19f74:	mov	r0, r5
   19f78:	bl	3ec0 <free@plt>
   19f7c:	b	19998 <sav_begin_data+0xdc0>
   19f80:	ldr	r3, [sp, #32]
   19f84:	ldrsb	r3, [r3]
   19f88:	cmp	r3, #0
   19f8c:	bne	19218 <sav_begin_data+0x640>
   19f90:	ldr	r3, [sp, #28]
   19f94:	add	r8, r8, #1
   19f98:	cmp	r3, r8
   19f9c:	bne	19dec <sav_begin_data+0x1214>
   19fa0:	b	19cd8 <sav_begin_data+0x1100>
   19fa4:	mov	r0, r5
   19fa8:	bl	3ff8 <realloc@plt>
   19fac:	ldr	r2, [sp, #72]	; 0x48
   19fb0:	mov	r1, #32
   19fb4:	mov	r5, r0
   19fb8:	bl	42a4 <memset@plt>
   19fbc:	mov	r2, #4
   19fc0:	ldr	r1, [sp, #20]
   19fc4:	mov	r0, fp
   19fc8:	bl	4454 <readstat_write_bytes@plt>
   19fcc:	subs	ip, r0, #0
   19fd0:	bne	1a0ec <sav_begin_data+0x1514>
   19fd4:	mov	r1, r8
   19fd8:	ldr	r2, [sp, #60]	; 0x3c
   19fdc:	mov	r0, fp
   19fe0:	bl	4454 <readstat_write_bytes@plt>
   19fe4:	subs	ip, r0, #0
   19fe8:	bne	1a0ec <sav_begin_data+0x1514>
   19fec:	mov	r2, #4
   19ff0:	mov	r1, r9
   19ff4:	mov	r0, fp
   19ff8:	bl	4454 <readstat_write_bytes@plt>
   19ffc:	subs	ip, r0, #0
   1a000:	bne	1a0ec <sav_begin_data+0x1514>
   1a004:	mov	r2, #4
   1a008:	ldr	r1, [sp, #16]
   1a00c:	mov	r0, fp
   1a010:	bl	4454 <readstat_write_bytes@plt>
   1a014:	subs	ip, r0, #0
   1a018:	bne	1a0ec <sav_begin_data+0x1514>
   1a01c:	ldr	r3, [sp, #56]	; 0x38
   1a020:	cmp	r3, #0
   1a024:	ble	19f40 <sav_begin_data+0x1368>
   1a028:	mov	r8, ip
   1a02c:	mov	r1, r8
   1a030:	mov	r0, r7
   1a034:	bl	44cc <readstat_get_value_label@plt>
   1a038:	mov	r2, #4
   1a03c:	mov	r1, r9
   1a040:	add	r8, r8, #1
   1a044:	ldr	r3, [r0, #28]
   1a048:	ldr	sl, [r0, #20]
   1a04c:	cmp	r3, #121	; 0x79
   1a050:	movlt	ip, r3
   1a054:	movge	ip, #120	; 0x78
   1a058:	mov	r4, r0
   1a05c:	mov	r0, fp
   1a060:	str	ip, [sp, #88]	; 0x58
   1a064:	bl	4454 <readstat_write_bytes@plt>
   1a068:	mov	r2, sl
   1a06c:	subs	ip, r0, #0
   1a070:	mov	r0, fp
   1a074:	bne	1a0ec <sav_begin_data+0x1514>
   1a078:	ldr	r1, [r4, #16]
   1a07c:	bl	4454 <readstat_write_bytes@plt>
   1a080:	mov	r1, r5
   1a084:	subs	ip, r0, #0
   1a088:	mov	r0, fp
   1a08c:	bne	1a0ec <sav_begin_data+0x1514>
   1a090:	ldr	r3, [sp, #72]	; 0x48
   1a094:	cmp	sl, r3
   1a098:	sub	r2, r3, sl
   1a09c:	blt	1a0e0 <sav_begin_data+0x1508>
   1a0a0:	mov	r2, #4
   1a0a4:	ldr	r1, [sp, #12]
   1a0a8:	mov	r0, fp
   1a0ac:	bl	4454 <readstat_write_bytes@plt>
   1a0b0:	subs	ip, r0, #0
   1a0b4:	mov	r0, fp
   1a0b8:	bne	1a0ec <sav_begin_data+0x1514>
   1a0bc:	ldr	r1, [r4, #24]
   1a0c0:	ldr	r2, [sp, #88]	; 0x58
   1a0c4:	bl	4454 <readstat_write_bytes@plt>
   1a0c8:	subs	ip, r0, #0
   1a0cc:	bne	1a0ec <sav_begin_data+0x1514>
   1a0d0:	ldr	r3, [sp, #56]	; 0x38
   1a0d4:	cmp	r8, r3
   1a0d8:	blt	1a02c <sav_begin_data+0x1454>
   1a0dc:	b	19f40 <sav_begin_data+0x1368>
   1a0e0:	bl	4454 <readstat_write_bytes@plt>
   1a0e4:	subs	ip, r0, #0
   1a0e8:	beq	1a0a0 <sav_begin_data+0x14c8>
   1a0ec:	mov	r0, r5
   1a0f0:	mov	r4, ip
   1a0f4:	bl	3ec0 <free@plt>
   1a0f8:	b	18f88 <sav_begin_data+0x3b0>
   1a0fc:	ldr	ip, [fp, #28]
   1a100:	add	r6, r6, #1
   1a104:	cmp	r6, ip
   1a108:	blt	1958c <sav_begin_data+0x9b4>
   1a10c:	ldr	r3, [pc, #-1156]	; 19c90 <sav_begin_data+0x10b8>
   1a110:	cmp	ip, #0
   1a114:	add	r3, pc, r3
   1a118:	add	r3, r3, #80	; 0x50
   1a11c:	ldm	r3, {r0, r1, r2, r3}
   1a120:	stm	sl, {r0, r1, r2, r3}
   1a124:	ble	1970c <sav_begin_data+0xb34>
   1a128:	ldr	r7, [pc, #-1180]	; 19c94 <sav_begin_data+0x10bc>
   1a12c:	ldr	r5, [sp, #24]
   1a130:	add	r7, pc, r7
   1a134:	mov	r4, #0
   1a138:	mov	r6, #9
   1a13c:	mov	r1, r4
   1a140:	mov	r0, fp
   1a144:	bl	437c <readstat_get_variable@plt>
   1a148:	mov	r3, r5
   1a14c:	mov	r2, r7
   1a150:	mov	r1, r6
   1a154:	add	r4, r4, #1
   1a158:	add	r5, r5, #15
   1a15c:	mov	r8, r0
   1a160:	ldr	r0, [sp, #12]
   1a164:	bl	4280 <snprintf@plt>
   1a168:	ldr	r0, [sp, #12]
   1a16c:	bl	41fc <strlen@plt>
   1a170:	str	r0, [sp, #28]
   1a174:	add	r0, r8, #8
   1a178:	bl	41fc <strlen@plt>
   1a17c:	ldr	r2, [sp, #28]
   1a180:	cmp	r0, #0
   1a184:	cmpne	r2, #0
   1a188:	beq	1a1a8 <sav_begin_data+0x15d0>
   1a18c:	ldr	r3, [sp, #148]	; 0x94
   1a190:	add	r3, r3, #2
   1a194:	add	r3, r3, r2
   1a198:	cmp	r0, #64	; 0x40
   1a19c:	addls	r3, r3, r0
   1a1a0:	addhi	r3, r3, #64	; 0x40
   1a1a4:	str	r3, [sp, #148]	; 0x94
   1a1a8:	ldr	ip, [fp, #28]
   1a1ac:	cmp	r4, ip
   1a1b0:	blt	1a13c <sav_begin_data+0x1564>
   1a1b4:	b	1970c <sav_begin_data+0xb34>
   1a1b8:	bl	4454 <readstat_write_bytes@plt>
   1a1bc:	subs	r3, r0, #0
   1a1c0:	beq	197d0 <sav_begin_data+0xbf8>
   1a1c4:	mov	r4, r3
   1a1c8:	b	18f88 <sav_begin_data+0x3b0>

0001a1cc <readstat_begin_writing_sav>:
   1a1cc:	ldr	r3, [pc, #304]	; 1a304 <readstat_begin_writing_sav+0x138>
   1a1d0:	ldr	ip, [pc, #304]	; 1a308 <readstat_begin_writing_sav+0x13c>
   1a1d4:	push	{r4, r5, lr}
   1a1d8:	add	r3, pc, r3
   1a1dc:	ldr	r4, [pc, #296]	; 1a30c <readstat_begin_writing_sav+0x140>
   1a1e0:	ldr	lr, [pc, #296]	; 1a310 <readstat_begin_writing_sav+0x144>
   1a1e4:	add	ip, pc, ip
   1a1e8:	str	r3, [r0, #236]	; 0xec
   1a1ec:	ldr	r3, [pc, #288]	; 1a314 <readstat_begin_writing_sav+0x148>
   1a1f0:	add	r4, pc, r4
   1a1f4:	add	lr, pc, lr
   1a1f8:	str	ip, [r0, #232]	; 0xe8
   1a1fc:	ldr	ip, [pc, #276]	; 1a318 <readstat_begin_writing_sav+0x14c>
   1a200:	add	r3, pc, r3
   1a204:	str	r4, [r0, #292]	; 0x124
   1a208:	str	lr, [r0, #228]	; 0xe4
   1a20c:	ldr	r4, [pc, #264]	; 1a31c <readstat_begin_writing_sav+0x150>
   1a210:	ldr	lr, [pc, #264]	; 1a320 <readstat_begin_writing_sav+0x154>
   1a214:	add	ip, pc, ip
   1a218:	str	r3, [r0, #252]	; 0xfc
   1a21c:	ldr	r3, [pc, #256]	; 1a324 <readstat_begin_writing_sav+0x158>
   1a220:	add	r4, pc, r4
   1a224:	add	lr, pc, lr
   1a228:	ldr	r5, [r0, #8]
   1a22c:	str	ip, [r0, #248]	; 0xf8
   1a230:	ldr	ip, [pc, #240]	; 1a328 <readstat_begin_writing_sav+0x15c>
   1a234:	add	r3, pc, r3
   1a238:	str	r4, [r0, #240]	; 0xf0
   1a23c:	str	lr, [r0, #244]	; 0xf4
   1a240:	ldr	r4, [pc, #228]	; 1a32c <readstat_begin_writing_sav+0x160>
   1a244:	ldr	lr, [pc, #228]	; 1a330 <readstat_begin_writing_sav+0x164>
   1a248:	add	ip, pc, ip
   1a24c:	cmp	r5, #3
   1a250:	str	r3, [r0, #276]	; 0x114
   1a254:	ldr	r3, [pc, #216]	; 1a334 <readstat_begin_writing_sav+0x168>
   1a258:	add	r4, pc, r4
   1a25c:	add	lr, pc, lr
   1a260:	str	ip, [r0, #268]	; 0x10c
   1a264:	moveq	ip, #2
   1a268:	add	r3, pc, r3
   1a26c:	str	r4, [r0, #256]	; 0x100
   1a270:	str	lr, [r0, #264]	; 0x108
   1a274:	streq	ip, [r0, #16]
   1a278:	beq	1a2d8 <readstat_begin_writing_sav+0x10c>
   1a27c:	cmp	r5, #0
   1a280:	ldr	ip, [r0, #16]
   1a284:	bne	1a298 <readstat_begin_writing_sav+0xcc>
   1a288:	cmp	ip, #2
   1a28c:	moveq	lr, #3
   1a290:	movne	lr, #2
   1a294:	str	lr, [r0, #8]
   1a298:	cmp	ip, #1
   1a29c:	beq	1a2b8 <readstat_begin_writing_sav+0xec>
   1a2a0:	cmp	ip, #2
   1a2a4:	beq	1a2d8 <readstat_begin_writing_sav+0x10c>
   1a2a8:	cmp	ip, #0
   1a2ac:	beq	1a2d0 <readstat_begin_writing_sav+0x104>
   1a2b0:	mov	r0, #6
   1a2b4:	pop	{r4, r5, pc}
   1a2b8:	ldr	ip, [pc, #120]	; 1a338 <readstat_begin_writing_sav+0x16c>
   1a2bc:	ldr	lr, [pc, #120]	; 1a33c <readstat_begin_writing_sav+0x170>
   1a2c0:	add	lr, pc, lr
   1a2c4:	str	lr, [r0, #280]	; 0x118
   1a2c8:	ldr	r3, [r3, ip]
   1a2cc:	str	r3, [r0, #288]	; 0x120
   1a2d0:	pop	{r4, r5, lr}
   1a2d4:	b	3f68 <readstat_begin_writing_file@plt>
   1a2d8:	ldr	r4, [pc, #96]	; 1a340 <readstat_begin_writing_sav+0x174>
   1a2dc:	ldr	lr, [pc, #96]	; 1a344 <readstat_begin_writing_sav+0x178>
   1a2e0:	ldr	ip, [pc, #96]	; 1a348 <readstat_begin_writing_sav+0x17c>
   1a2e4:	ldr	r4, [r3, r4]
   1a2e8:	str	r4, [r0, #280]	; 0x118
   1a2ec:	ldr	lr, [r3, lr]
   1a2f0:	str	lr, [r0, #284]	; 0x11c
   1a2f4:	ldr	r3, [r3, ip]
   1a2f8:	pop	{r4, r5, lr}
   1a2fc:	str	r3, [r0, #288]	; 0x120
   1a300:	b	3f68 <readstat_begin_writing_file@plt>
   1a304:	.word	0xffffdd1c
   1a308:	.word	0xffffdeb8
   1a30c:	.word	0xffffdb00
   1a310:	.word	0xffffdd84
   1a314:	.word	0xffffdc40
   1a318:	.word	0xffffdc54
   1a31c:	.word	0xffffdca4
   1a320:	.word	0xffffdc70
   1a324:	.word	0xffffe99c
   1a328:	.word	0xffffdbc0
   1a32c:	.word	0xffffdd88
   1a330:	.word	0xffffdb94
   1a334:	.word	0x00029d90
   1a338:	.word	0x000002d4
   1a33c:	.word	0xffffda60
   1a340:	.word	0x000002e0
   1a344:	.word	0x000002e8
   1a348:	.word	0x000002d0
   1a34c:	.word	0x00000000

0001a350 <spss_boxed_missing_value>:
   1a350:	ldr	r3, [r1]
   1a354:	sub	sp, sp, #16
   1a358:	cmp	r3, #5
   1a35c:	mov	ip, r0
   1a360:	beq	1a398 <spss_boxed_missing_value+0x48>
   1a364:	add	r2, r2, r2, lsl #5
   1a368:	add	r2, r2, #88	; 0x58
   1a36c:	add	r2, r1, r2
   1a370:	mov	r1, #0
   1a374:	str	r2, [sp]
   1a378:	str	r1, [sp, #4]
   1a37c:	str	r1, [sp, #8]
   1a380:	str	r1, [sp, #12]
   1a384:	ldm	sp, {r0, r1, r2, r3}
   1a388:	stm	ip, {r0, r1, r2, r3}
   1a38c:	mov	r0, ip
   1a390:	add	sp, sp, #16
   1a394:	bx	lr
   1a398:	add	r2, r1, r2, lsl #3
   1a39c:	str	r3, [sp, #8]
   1a3a0:	vldr	d7, [r2, #64]	; 0x40
   1a3a4:	mov	r2, #0
   1a3a8:	str	r2, [sp, #12]
   1a3ac:	vcmp.f64	d7, d7
   1a3b0:	vstr	d7, [sp]
   1a3b4:	vmrs	APSR_nzcv, fpscr
   1a3b8:	movvs	r2, #1
   1a3bc:	strb	r2, [sp, #13]
   1a3c0:	ldm	sp, {r0, r1, r2, r3}
   1a3c4:	stm	ip, {r0, r1, r2, r3}
   1a3c8:	mov	r0, ip
   1a3cc:	add	sp, sp, #16
   1a3d0:	bx	lr

0001a3d4 <spss_format>:
   1a3d4:	ldr	r3, [r2]
   1a3d8:	cmp	r3, #41	; 0x29
   1a3dc:	bhi	1a448 <spss_format+0x74>
   1a3e0:	push	{r4, lr}
   1a3e4:	sub	sp, sp, #8
   1a3e8:	ldr	lr, [pc, #148]	; 1a484 <spss_format+0xb0>
   1a3ec:	add	lr, pc, lr
   1a3f0:	ldrb	ip, [lr, r3, lsl #4]
   1a3f4:	cmp	ip, #0
   1a3f8:	moveq	r0, ip
   1a3fc:	beq	1a440 <spss_format+0x6c>
   1a400:	ldr	r4, [r2, #8]
   1a404:	sub	ip, r3, #5
   1a408:	clz	ip, ip
   1a40c:	lsr	ip, ip, #5
   1a410:	cmp	r4, #0
   1a414:	orrne	ip, ip, #1
   1a418:	cmp	ip, #0
   1a41c:	ldr	r2, [r2, #4]
   1a420:	add	r3, lr, r3, lsl #4
   1a424:	bne	1a468 <spss_format+0x94>
   1a428:	cmp	r2, #0
   1a42c:	bne	1a450 <spss_format+0x7c>
   1a430:	ldr	r2, [pc, #80]	; 1a488 <spss_format+0xb4>
   1a434:	add	r2, pc, r2
   1a438:	bl	4280 <snprintf@plt>
   1a43c:	mov	r0, #1
   1a440:	add	sp, sp, #8
   1a444:	pop	{r4, pc}
   1a448:	mov	r0, #0
   1a44c:	bx	lr
   1a450:	str	r2, [sp]
   1a454:	ldr	r2, [pc, #48]	; 1a48c <spss_format+0xb8>
   1a458:	add	r2, pc, r2
   1a45c:	bl	4280 <snprintf@plt>
   1a460:	mov	r0, #1
   1a464:	b	1a440 <spss_format+0x6c>
   1a468:	stm	sp, {r2, r4}
   1a46c:	ldr	r2, [pc, #28]	; 1a490 <spss_format+0xbc>
   1a470:	add	r2, pc, r2
   1a474:	bl	4280 <snprintf@plt>
   1a478:	mov	r0, #1
   1a47c:	add	sp, sp, #8
   1a480:	pop	{r4, pc}
   1a484:	.word	0x0002b690
   1a488:	.word	0x00009fd8
   1a48c:	.word	0x0000a36c
   1a490:	.word	0x0000a34c

0001a494 <spss_varinfo_compare>:
   1a494:	ldr	r3, [r1]
   1a498:	ldr	r2, [r0]
   1a49c:	ldr	r3, [r3, #12]
   1a4a0:	cmp	r2, r3
   1a4a4:	blt	1a4b4 <spss_varinfo_compare+0x20>
   1a4a8:	movgt	r0, #1
   1a4ac:	movle	r0, #0
   1a4b0:	bx	lr
   1a4b4:	mvn	r0, #0
   1a4b8:	bx	lr

0001a4bc <spss_varinfo_free>:
   1a4bc:	push	{r4, lr}
   1a4c0:	subs	r4, r0, #0
   1a4c4:	popeq	{r4, pc}
   1a4c8:	ldr	r0, [r4, #264]	; 0x108
   1a4cc:	cmp	r0, #0
   1a4d0:	beq	1a4d8 <spss_varinfo_free+0x1c>
   1a4d4:	bl	3ec0 <free@plt>
   1a4d8:	mov	r0, r4
   1a4dc:	pop	{r4, lr}
   1a4e0:	b	3ec0 <free@plt>

0001a4e4 <spss_64bit_value>:
   1a4e4:	push	{lr}		; (str lr, [sp, #-4]!)
   1a4e8:	sub	sp, sp, #28
   1a4ec:	add	ip, sp, #8
   1a4f0:	stm	ip, {r0, r1, r2, r3}
   1a4f4:	ldm	ip, {r0, r1, r2, r3}
   1a4f8:	bl	41b4 <readstat_double_value@plt>
   1a4fc:	vldr	d7, [pc, #108]	; 1a570 <spss_64bit_value+0x8c>
   1a500:	vabs.f64	d6, d0
   1a504:	vstr	d0, [sp]
   1a508:	vcmp.f64	d6, d7
   1a50c:	vmrs	APSR_nzcv, fpscr
   1a510:	ble	1a534 <spss_64bit_value+0x50>
   1a514:	vldr	d7, [sp]
   1a518:	vcmpe.f64	d7, #0.0
   1a51c:	vmrs	APSR_nzcv, fpscr
   1a520:	bmi	1a550 <spss_64bit_value+0x6c>
   1a524:	mvn	r0, #0
   1a528:	ldr	r1, [pc, #72]	; 1a578 <spss_64bit_value+0x94>
   1a52c:	add	sp, sp, #28
   1a530:	pop	{pc}		; (ldr pc, [sp], #4)
   1a534:	vldr	d7, [sp]
   1a538:	vcmp.f64	d7, d7
   1a53c:	vmrs	APSR_nzcv, fpscr
   1a540:	bvs	1a560 <spss_64bit_value+0x7c>
   1a544:	ldrd	r0, [sp]
   1a548:	add	sp, sp, #28
   1a54c:	pop	{pc}		; (ldr pc, [sp], #4)
   1a550:	mvn	r0, #1
   1a554:	mvn	r1, #1048576	; 0x100000
   1a558:	add	sp, sp, #28
   1a55c:	pop	{pc}		; (ldr pc, [sp], #4)
   1a560:	mvn	r0, #0
   1a564:	mvn	r1, #1048576	; 0x100000
   1a568:	b	1a548 <spss_64bit_value+0x64>
   1a56c:	nop			; (mov r0, r0)
   1a570:	.word	0xffffffff
   1a574:	.word	0x7fefffff
   1a578:	.word	0x7fefffff

0001a57c <spss_missingness_for_info>:
   1a57c:	push	{r4, r5, r6, r7, r8, r9, lr}
   1a580:	mov	r7, r1
   1a584:	sub	sp, sp, #524	; 0x20c
   1a588:	mov	r9, r0
   1a58c:	mov	r2, #520	; 0x208
   1a590:	mov	r0, sp
   1a594:	mov	r1, #0
   1a598:	bl	42a4 <memset@plt>
   1a59c:	ldr	r5, [r7, #56]	; 0x38
   1a5a0:	mov	r8, sp
   1a5a4:	cmp	r5, #0
   1a5a8:	bne	1a61c <spss_missingness_for_info+0xa0>
   1a5ac:	ldr	r3, [r7, #52]	; 0x34
   1a5b0:	cmp	r3, #0
   1a5b4:	ble	1a600 <spss_missingness_for_info+0x84>
   1a5b8:	mov	r6, #1
   1a5bc:	str	r3, [sp, #512]	; 0x200
   1a5c0:	lsl	r4, r6, #4
   1a5c4:	add	r3, sp, #520	; 0x208
   1a5c8:	add	r0, r3, r4
   1a5cc:	mov	r2, r5
   1a5d0:	sub	r0, r0, #520	; 0x208
   1a5d4:	mov	r1, r7
   1a5d8:	bl	1a350 <spss_boxed_missing_value>
   1a5dc:	add	r3, r8, r4
   1a5e0:	ldr	lr, [r7, #52]	; 0x34
   1a5e4:	ldm	r3, {r0, r1, r2, r3}
   1a5e8:	add	ip, r8, r5, lsl #5
   1a5ec:	add	r5, r5, #1
   1a5f0:	cmp	lr, r5
   1a5f4:	add	r6, r6, #2
   1a5f8:	stm	ip, {r0, r1, r2, r3}
   1a5fc:	bgt	1a5c0 <spss_missingness_for_info+0x44>
   1a600:	mov	r1, r8
   1a604:	mov	r2, #520	; 0x208
   1a608:	mov	r0, r9
   1a60c:	bl	3f20 <memcpy@plt>
   1a610:	mov	r0, r9
   1a614:	add	sp, sp, #524	; 0x20c
   1a618:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1a61c:	mov	r4, #1
   1a620:	mov	r2, #0
   1a624:	mov	r1, r7
   1a628:	mov	r0, sp
   1a62c:	str	r4, [sp, #512]	; 0x200
   1a630:	bl	1a350 <spss_boxed_missing_value>
   1a634:	mov	r2, r4
   1a638:	mov	r1, r7
   1a63c:	add	r0, sp, #16
   1a640:	bl	1a350 <spss_boxed_missing_value>
   1a644:	ldr	r3, [r7, #52]	; 0x34
   1a648:	cmp	r3, #3
   1a64c:	bne	1a600 <spss_missingness_for_info+0x84>
   1a650:	mov	r3, #2
   1a654:	add	r4, sp, #48	; 0x30
   1a658:	mov	r1, r7
   1a65c:	mov	r2, r3
   1a660:	mov	r0, r4
   1a664:	str	r3, [sp, #512]	; 0x200
   1a668:	bl	1a350 <spss_boxed_missing_value>
   1a66c:	ldm	r4, {r0, r1, r2, r3}
   1a670:	add	ip, sp, #32
   1a674:	stm	ip, {r0, r1, r2, r3}
   1a678:	b	1a600 <spss_missingness_for_info+0x84>

0001a67c <spss_init_variable_for_info>:
   1a67c:	push	{r4, r5, r6, r7, lr}
   1a680:	mov	r4, r0
   1a684:	sub	sp, sp, #532	; 0x214
   1a688:	mov	r7, r1
   1a68c:	mov	r0, #1
   1a690:	ldr	r1, [pc, #208]	; 1a768 <spss_init_variable_for_info+0xec>
   1a694:	mov	r6, r2
   1a698:	bl	3d58 <calloc@plt>
   1a69c:	ldr	r3, [r4, #20]
   1a6a0:	ldr	r2, [r4]
   1a6a4:	cmp	r3, #0
   1a6a8:	ldr	r1, [r4, #8]
   1a6ac:	ldreq	r3, [r4, #16]
   1a6b0:	lsleq	r3, r3, #3
   1a6b4:	str	r3, [r0, #1596]	; 0x63c
   1a6b8:	ldrb	r3, [r4, #196]	; 0xc4
   1a6bc:	str	r2, [r0]
   1a6c0:	str	r1, [r0, #4]
   1a6c4:	cmp	r3, #0
   1a6c8:	str	r7, [r0, #2148]	; 0x864
   1a6cc:	movne	r3, #65	; 0x41
   1a6d0:	moveq	r3, #9
   1a6d4:	addne	r2, r4, #196	; 0xc4
   1a6d8:	addeq	r2, r4, #187	; 0xbb
   1a6dc:	mov	r5, r0
   1a6e0:	str	r6, [sp]
   1a6e4:	mov	r1, #300	; 0x12c
   1a6e8:	add	r0, r0, #8
   1a6ec:	bl	4238 <readstat_convert@plt>
   1a6f0:	ldr	r3, [r4, #264]	; 0x108
   1a6f4:	cmp	r3, #0
   1a6f8:	beq	1a710 <spss_init_variable_for_info+0x94>
   1a6fc:	ldr	r2, [pc, #104]	; 1a76c <spss_init_variable_for_info+0xf0>
   1a700:	mov	r1, #1024	; 0x400
   1a704:	add	r2, pc, r2
   1a708:	add	r0, r5, #564	; 0x234
   1a70c:	bl	4280 <snprintf@plt>
   1a710:	add	r2, r4, #24
   1a714:	add	r6, sp, #8
   1a718:	mov	r1, #256	; 0x100
   1a71c:	add	r0, r5, #308	; 0x134
   1a720:	bl	440c <spss_format@plt>
   1a724:	mov	r0, r6
   1a728:	mov	r1, r4
   1a72c:	bl	452c <spss_missingness_for_info@plt>
   1a730:	add	r0, r5, #1600	; 0x640
   1a734:	mov	r1, r6
   1a738:	mov	r2, #520	; 0x208
   1a73c:	add	r0, r0, #8
   1a740:	bl	3f20 <memcpy@plt>
   1a744:	ldr	r3, [r4, #276]	; 0x114
   1a748:	ldr	r2, [r4, #268]	; 0x10c
   1a74c:	cmp	r3, #0
   1a750:	mov	r0, r5
   1a754:	ldreq	r3, [r4, #28]
   1a758:	str	r2, [r5, #2128]	; 0x850
   1a75c:	str	r3, [r5, #2136]	; 0x858
   1a760:	add	sp, sp, #532	; 0x214
   1a764:	pop	{r4, r5, r6, r7, pc}
   1a768:	.word	0x00000868
   1a76c:	.word	0x00009d08

0001a770 <spss_measure_from_readstat_measure>:
   1a770:	cmp	r0, #1
   1a774:	bxeq	lr
   1a778:	cmp	r0, #2
   1a77c:	bxeq	lr
   1a780:	cmp	r0, #3
   1a784:	moveq	r0, #3
   1a788:	movne	r0, #0
   1a78c:	bx	lr

0001a790 <spss_measure_to_readstat_measure>:
   1a790:	cmp	r0, #1
   1a794:	bxeq	lr
   1a798:	cmp	r0, #2
   1a79c:	bxeq	lr
   1a7a0:	cmp	r0, #3
   1a7a4:	moveq	r0, #3
   1a7a8:	movne	r0, #0
   1a7ac:	bx	lr

0001a7b0 <spss_alignment_from_readstat_alignment>:
   1a7b0:	cmp	r0, #1
   1a7b4:	beq	1a7cc <spss_alignment_from_readstat_alignment+0x1c>
   1a7b8:	cmp	r0, #2
   1a7bc:	subne	r0, r0, #3
   1a7c0:	clzne	r0, r0
   1a7c4:	lsrne	r0, r0, #5
   1a7c8:	bx	lr
   1a7cc:	mov	r0, #0
   1a7d0:	bx	lr

0001a7d4 <spss_alignment_to_readstat_alignment>:
   1a7d4:	cmp	r0, #0
   1a7d8:	beq	1a7f4 <spss_alignment_to_readstat_alignment+0x20>
   1a7dc:	cmp	r0, #2
   1a7e0:	bxeq	lr
   1a7e4:	cmp	r0, #1
   1a7e8:	moveq	r0, #3
   1a7ec:	movne	r0, #0
   1a7f0:	bx	lr
   1a7f4:	mov	r0, #1
   1a7f8:	bx	lr

0001a7fc <spss_format_for_variable>:
   1a7fc:	mov	r3, #0
   1a800:	str	r3, [r1]
   1a804:	str	r3, [r1, #4]
   1a808:	str	r3, [r1, #8]
   1a80c:	ldr	r3, [r0]
   1a810:	cmp	r3, #0
   1a814:	bne	1a844 <spss_format_for_variable+0x48>
   1a818:	ldr	r3, [r0, #2136]	; 0x858
   1a81c:	mov	r2, #1
   1a820:	cmp	r3, #0
   1a824:	str	r2, [r1]
   1a828:	beq	1a8b4 <spss_format_for_variable+0xb8>
   1a82c:	str	r3, [r1, #4]
   1a830:	ldrb	r3, [r0, #308]	; 0x134
   1a834:	cmp	r3, #0
   1a838:	bne	1a878 <spss_format_for_variable+0x7c>
   1a83c:	mov	r0, #0
   1a840:	bx	lr
   1a844:	ldr	r2, [r0, #2136]	; 0x858
   1a848:	sub	r3, r3, #4
   1a84c:	cmp	r2, #0
   1a850:	moveq	r2, #8
   1a854:	cmp	r3, #1
   1a858:	movls	r3, #2
   1a85c:	mov	ip, #5
   1a860:	strls	r3, [r1, #8]
   1a864:	str	ip, [r1]
   1a868:	str	r2, [r1, #4]
   1a86c:	ldrb	r3, [r0, #308]	; 0x134
   1a870:	cmp	r3, #0
   1a874:	beq	1a83c <spss_format_for_variable+0x40>
   1a878:	push	{r4, r5, r6, lr}
   1a87c:	mov	r3, #0
   1a880:	add	r5, r0, #308	; 0x134
   1a884:	str	r3, [r1, #8]
   1a888:	mov	r0, r5
   1a88c:	mov	r4, r1
   1a890:	bl	41fc <strlen@plt>
   1a894:	mov	r2, r4
   1a898:	mov	r1, r0
   1a89c:	mov	r0, r5
   1a8a0:	bl	3f2c <spss_parse_format@plt>
   1a8a4:	cmp	r0, #0
   1a8a8:	beq	1a8c4 <spss_format_for_variable+0xc8>
   1a8ac:	mov	r0, #11
   1a8b0:	pop	{r4, r5, r6, pc}
   1a8b4:	ldr	r3, [r0, #1600]	; 0x640
   1a8b8:	cmp	r3, #0
   1a8bc:	ldreq	r3, [r0, #1596]	; 0x63c
   1a8c0:	b	1a82c <spss_format_for_variable+0x30>
   1a8c4:	mov	r0, #0
   1a8c8:	pop	{r4, r5, r6, pc}

0001a8cc <spss_parse_format>:
   1a8cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a8d0:	add	r3, r0, r1
   1a8d4:	sub	sp, sp, #20
   1a8d8:	cmp	r0, r3
   1a8dc:	str	r3, [sp]
   1a8e0:	beq	1ae40 <spss_parse_format+0x574>
   1a8e4:	ldr	fp, [pc, #1840]	; 1b01c <spss_parse_format+0x750>
   1a8e8:	ldr	lr, [pc, #1840]	; 1b020 <spss_parse_format+0x754>
   1a8ec:	add	fp, pc, fp
   1a8f0:	add	r3, fp, #1584	; 0x630
   1a8f4:	add	r3, r3, #8
   1a8f8:	add	lr, pc, lr
   1a8fc:	mov	r9, #0
   1a900:	ldr	r1, [pc, #1820]	; 1b024 <spss_parse_format+0x758>
   1a904:	str	r3, [sp, #4]
   1a908:	add	r3, lr, #232	; 0xe8
   1a90c:	mov	r8, #34	; 0x22
   1a910:	mov	ip, #1
   1a914:	mov	r7, r9
   1a918:	mov	sl, r3
   1a91c:	add	r1, pc, r1
   1a920:	str	r1, [sp, #8]
   1a924:	str	r9, [sp, #12]
   1a928:	cmp	r8, #0
   1a92c:	add	r7, sl, r7
   1a930:	mov	r3, r9
   1a934:	beq	1a97c <spss_parse_format+0xb0>
   1a938:	sub	r4, r8, #1
   1a93c:	adds	r4, r7, r4
   1a940:	bcs	1a974 <spss_parse_format+0xa8>
   1a944:	ldrb	r6, [r0]
   1a948:	mov	r1, r7
   1a94c:	sub	r3, r4, r1
   1a950:	ldrb	r5, [r1, r3, asr #1]
   1a954:	add	r3, r1, r3, asr #1
   1a958:	cmp	r5, r6
   1a95c:	subhi	r4, r3, #1
   1a960:	bhi	1a96c <spss_parse_format+0xa0>
   1a964:	bcs	1ad14 <spss_parse_format+0x448>
   1a968:	add	r1, r3, #1
   1a96c:	cmp	r4, r1
   1a970:	bcs	1a94c <spss_parse_format+0x80>
   1a974:	add	r7, r7, r8
   1a978:	add	r3, r9, r8
   1a97c:	ldr	r1, [sp, #8]
   1a980:	add	ip, r1, ip
   1a984:	ldrb	r8, [ip, #520]	; 0x208
   1a988:	cmp	r8, #0
   1a98c:	beq	1a9e4 <spss_parse_format+0x118>
   1a990:	add	r4, r7, r8, lsl #1
   1a994:	sub	r4, r4, #2
   1a998:	cmp	r7, r4
   1a99c:	bhi	1a9e0 <spss_parse_format+0x114>
   1a9a0:	ldrb	r6, [r0]
   1a9a4:	mov	ip, r7
   1a9a8:	sub	r1, r4, ip
   1a9ac:	asr	r1, r1, #1
   1a9b0:	bic	r1, r1, #1
   1a9b4:	add	r5, ip, r1
   1a9b8:	ldrb	r1, [ip, r1]
   1a9bc:	cmp	r1, r6
   1a9c0:	subhi	r4, r5, #2
   1a9c4:	bhi	1a9d8 <spss_parse_format+0x10c>
   1a9c8:	ldrb	r1, [r5, #1]
   1a9cc:	add	ip, r5, #2
   1a9d0:	cmp	r1, r6
   1a9d4:	bcs	1ad20 <spss_parse_format+0x454>
   1a9d8:	cmp	ip, r4
   1a9dc:	bls	1a9a8 <spss_parse_format+0xdc>
   1a9e0:	add	r3, r3, r8
   1a9e4:	add	r3, lr, r3
   1a9e8:	ldrb	r1, [r3, #628]	; 0x274
   1a9ec:	add	r1, lr, r1
   1a9f0:	ldrb	r3, [r1, #1124]	; 0x464
   1a9f4:	ldrb	ip, [r1, #980]	; 0x3d4
   1a9f8:	cmp	r3, #0
   1a9fc:	beq	1aae8 <spss_parse_format+0x21c>
   1aa00:	ldrb	r1, [lr, r3]
   1aa04:	add	r3, lr, r3
   1aa08:	mov	r5, #35	; 0x23
   1aa0c:	add	r1, r3, r1
   1aa10:	mov	r4, #34	; 0x22
   1aa14:	mov	r8, #33	; 0x21
   1aa18:	mov	r9, #32
   1aa1c:	cmp	r1, r3
   1aa20:	beq	1aae8 <spss_parse_format+0x21c>
   1aa24:	ldrb	r6, [r3, #1]!
   1aa28:	cmp	r6, #40	; 0x28
   1aa2c:	addls	pc, pc, r6, lsl #2
   1aa30:	b	1aa1c <spss_parse_format+0x150>
   1aa34:	b	1aad8 <spss_parse_format+0x20c>
   1aa38:	b	1acf8 <spss_parse_format+0x42c>
   1aa3c:	b	1acec <spss_parse_format+0x420>
   1aa40:	b	1aa1c <spss_parse_format+0x150>
   1aa44:	b	1ace0 <spss_parse_format+0x414>
   1aa48:	b	1acd4 <spss_parse_format+0x408>
   1aa4c:	b	1acc8 <spss_parse_format+0x3fc>
   1aa50:	b	1acbc <spss_parse_format+0x3f0>
   1aa54:	b	1acb0 <spss_parse_format+0x3e4>
   1aa58:	b	1aca4 <spss_parse_format+0x3d8>
   1aa5c:	b	1ac98 <spss_parse_format+0x3cc>
   1aa60:	b	1ac8c <spss_parse_format+0x3c0>
   1aa64:	b	1ac80 <spss_parse_format+0x3b4>
   1aa68:	b	1ac74 <spss_parse_format+0x3a8>
   1aa6c:	b	1ac68 <spss_parse_format+0x39c>
   1aa70:	b	1ac5c <spss_parse_format+0x390>
   1aa74:	b	1ac50 <spss_parse_format+0x384>
   1aa78:	b	1ac44 <spss_parse_format+0x378>
   1aa7c:	b	1ac38 <spss_parse_format+0x36c>
   1aa80:	b	1ac28 <spss_parse_format+0x35c>
   1aa84:	b	1ac1c <spss_parse_format+0x350>
   1aa88:	b	1ac0c <spss_parse_format+0x340>
   1aa8c:	b	1abfc <spss_parse_format+0x330>
   1aa90:	b	1abec <spss_parse_format+0x320>
   1aa94:	b	1abe0 <spss_parse_format+0x314>
   1aa98:	b	1abd0 <spss_parse_format+0x304>
   1aa9c:	b	1abc4 <spss_parse_format+0x2f8>
   1aaa0:	b	1abb8 <spss_parse_format+0x2ec>
   1aaa4:	b	1abac <spss_parse_format+0x2e0>
   1aaa8:	b	1aba0 <spss_parse_format+0x2d4>
   1aaac:	b	1ab94 <spss_parse_format+0x2c8>
   1aab0:	b	1ab84 <spss_parse_format+0x2b8>
   1aab4:	b	1ab78 <spss_parse_format+0x2ac>
   1aab8:	b	1ab70 <spss_parse_format+0x2a4>
   1aabc:	b	1ab68 <spss_parse_format+0x29c>
   1aac0:	b	1ab60 <spss_parse_format+0x294>
   1aac4:	b	1ab58 <spss_parse_format+0x28c>
   1aac8:	b	1ab4c <spss_parse_format+0x280>
   1aacc:	b	1ab40 <spss_parse_format+0x274>
   1aad0:	b	1ab30 <spss_parse_format+0x264>
   1aad4:	b	1ab20 <spss_parse_format+0x254>
   1aad8:	mov	r6, #0
   1aadc:	cmp	r1, r3
   1aae0:	str	r6, [sp, #12]
   1aae4:	bne	1aa24 <spss_parse_format+0x158>
   1aae8:	cmp	ip, #0
   1aaec:	beq	1ad34 <spss_parse_format+0x468>
   1aaf0:	ldr	r3, [sp]
   1aaf4:	add	r0, r0, #1
   1aaf8:	cmp	r3, r0
   1aafc:	beq	1ad40 <spss_parse_format+0x474>
   1ab00:	add	r4, fp, #1376	; 0x560
   1ab04:	lsl	r3, ip, #1
   1ab08:	add	r1, fp, ip
   1ab0c:	ldrsh	r7, [r4, r3]
   1ab10:	ldr	r4, [sp, #4]
   1ab14:	ldrb	r8, [r1, #1808]	; 0x710
   1ab18:	ldrsh	r9, [r4, r3]
   1ab1c:	b	1a928 <spss_parse_format+0x5c>
   1ab20:	mov	r6, #39	; 0x27
   1ab24:	mov	r7, #10
   1ab28:	stm	r2, {r6, r7}
   1ab2c:	b	1aa1c <spss_parse_format+0x150>
   1ab30:	mov	r6, #38	; 0x26
   1ab34:	mov	r7, #10
   1ab38:	stm	r2, {r6, r7}
   1ab3c:	b	1aa1c <spss_parse_format+0x150>
   1ab40:	mov	r6, #37	; 0x25
   1ab44:	str	r6, [r2]
   1ab48:	b	1aa1c <spss_parse_format+0x150>
   1ab4c:	mov	r6, #36	; 0x24
   1ab50:	str	r6, [r2]
   1ab54:	b	1aa1c <spss_parse_format+0x150>
   1ab58:	str	r5, [r2]
   1ab5c:	b	1aa1c <spss_parse_format+0x150>
   1ab60:	str	r4, [r2]
   1ab64:	b	1aa1c <spss_parse_format+0x150>
   1ab68:	str	r8, [r2]
   1ab6c:	b	1aa1c <spss_parse_format+0x150>
   1ab70:	str	r9, [r2]
   1ab74:	b	1aa1c <spss_parse_format+0x150>
   1ab78:	mov	r6, #31
   1ab7c:	str	r6, [r2]
   1ab80:	b	1aa1c <spss_parse_format+0x150>
   1ab84:	mov	r6, #30
   1ab88:	mov	r7, #10
   1ab8c:	stm	r2, {r6, r7}
   1ab90:	b	1aa1c <spss_parse_format+0x150>
   1ab94:	mov	r6, #29
   1ab98:	str	r6, [r2]
   1ab9c:	b	1aa1c <spss_parse_format+0x150>
   1aba0:	mov	r6, #28
   1aba4:	str	r6, [r2]
   1aba8:	b	1aa1c <spss_parse_format+0x150>
   1abac:	mov	r6, #27
   1abb0:	str	r6, [r2]
   1abb4:	b	1aa1c <spss_parse_format+0x150>
   1abb8:	mov	r6, #26
   1abbc:	str	r6, [r2]
   1abc0:	b	1aa1c <spss_parse_format+0x150>
   1abc4:	mov	r6, #40	; 0x28
   1abc8:	str	r6, [r2]
   1abcc:	b	1aa1c <spss_parse_format+0x150>
   1abd0:	mov	r6, #25
   1abd4:	mov	r7, #23
   1abd8:	stm	r2, {r6, r7}
   1abdc:	b	1aa1c <spss_parse_format+0x150>
   1abe0:	mov	r6, #24
   1abe4:	str	r6, [r2]
   1abe8:	b	1aa1c <spss_parse_format+0x150>
   1abec:	mov	r6, #23
   1abf0:	mov	r7, #10
   1abf4:	stm	r2, {r6, r7}
   1abf8:	b	1aa1c <spss_parse_format+0x150>
   1abfc:	mov	r6, #41	; 0x29
   1ac00:	mov	r7, #19
   1ac04:	stm	r2, {r6, r7}
   1ac08:	b	1aa1c <spss_parse_format+0x150>
   1ac0c:	mov	r6, #22
   1ac10:	mov	r7, #20
   1ac14:	stm	r2, {r6, r7}
   1ac18:	b	1aa1c <spss_parse_format+0x150>
   1ac1c:	mov	r6, #21
   1ac20:	str	r6, [r2]
   1ac24:	b	1aa1c <spss_parse_format+0x150>
   1ac28:	mov	r6, #20
   1ac2c:	mov	r7, #11
   1ac30:	stm	r2, {r6, r7}
   1ac34:	b	1aa1c <spss_parse_format+0x150>
   1ac38:	mov	r6, #17
   1ac3c:	str	r6, [r2]
   1ac40:	b	1aa1c <spss_parse_format+0x150>
   1ac44:	mov	r6, #16
   1ac48:	str	r6, [r2]
   1ac4c:	b	1aa1c <spss_parse_format+0x150>
   1ac50:	mov	r6, #15
   1ac54:	str	r6, [r2]
   1ac58:	b	1aa1c <spss_parse_format+0x150>
   1ac5c:	mov	r6, #12
   1ac60:	str	r6, [r2]
   1ac64:	b	1aa1c <spss_parse_format+0x150>
   1ac68:	mov	r6, #11
   1ac6c:	str	r6, [r2]
   1ac70:	b	1aa1c <spss_parse_format+0x150>
   1ac74:	mov	r6, #10
   1ac78:	str	r6, [r2]
   1ac7c:	b	1aa1c <spss_parse_format+0x150>
   1ac80:	mov	r6, #9
   1ac84:	str	r6, [r2]
   1ac88:	b	1aa1c <spss_parse_format+0x150>
   1ac8c:	mov	r6, #8
   1ac90:	str	r6, [r2]
   1ac94:	b	1aa1c <spss_parse_format+0x150>
   1ac98:	mov	r6, #7
   1ac9c:	str	r6, [r2]
   1aca0:	b	1aa1c <spss_parse_format+0x150>
   1aca4:	mov	r6, #6
   1aca8:	str	r6, [r2]
   1acac:	b	1aa1c <spss_parse_format+0x150>
   1acb0:	mov	r6, #5
   1acb4:	str	r6, [r2]
   1acb8:	b	1aa1c <spss_parse_format+0x150>
   1acbc:	mov	r6, #4
   1acc0:	str	r6, [r2]
   1acc4:	b	1aa1c <spss_parse_format+0x150>
   1acc8:	mov	r6, #3
   1accc:	str	r6, [r2]
   1acd0:	b	1aa1c <spss_parse_format+0x150>
   1acd4:	mov	r6, #2
   1acd8:	str	r6, [r2]
   1acdc:	b	1aa1c <spss_parse_format+0x150>
   1ace0:	mov	r6, #1
   1ace4:	str	r6, [r2]
   1ace8:	b	1aa1c <spss_parse_format+0x150>
   1acec:	ldr	r6, [sp, #12]
   1acf0:	str	r6, [r2, #4]
   1acf4:	b	1aa1c <spss_parse_format+0x150>
   1acf8:	ldr	r6, [sp, #12]
   1acfc:	ldrb	r7, [r0]
   1ad00:	add	r6, r6, r6, lsl #2
   1ad04:	sub	r7, r7, #48	; 0x30
   1ad08:	add	r6, r7, r6, lsl #1
   1ad0c:	str	r6, [sp, #12]
   1ad10:	b	1aa1c <spss_parse_format+0x150>
   1ad14:	sub	r3, r3, r7
   1ad18:	add	r3, r9, r3
   1ad1c:	b	1a9e4 <spss_parse_format+0x118>
   1ad20:	sub	r7, r5, r7
   1ad24:	add	r3, r3, r7, asr #1
   1ad28:	b	1a9e4 <spss_parse_format+0x118>
   1ad2c:	cmp	r0, #0
   1ad30:	beq	1ad38 <spss_parse_format+0x46c>
   1ad34:	mov	r0, #5
   1ad38:	add	sp, sp, #20
   1ad3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ad40:	ldr	r1, [pc, #736]	; 1b028 <spss_parse_format+0x75c>
   1ad44:	cmp	ip, #67	; 0x43
   1ad48:	add	r1, pc, r1
   1ad4c:	add	ip, r1, ip
   1ad50:	movgt	r0, #0
   1ad54:	ldrb	ip, [ip, #1268]	; 0x4f4
   1ad58:	movle	r0, #1
   1ad5c:	add	r3, r1, ip
   1ad60:	ldrb	r1, [r1, ip]
   1ad64:	add	r1, r3, r1
   1ad68:	mov	r8, #39	; 0x27
   1ad6c:	mov	ip, #10
   1ad70:	mov	r7, #38	; 0x26
   1ad74:	mov	r6, #37	; 0x25
   1ad78:	mov	r5, #36	; 0x24
   1ad7c:	mov	r4, #35	; 0x23
   1ad80:	mov	lr, #34	; 0x22
   1ad84:	mov	fp, #33	; 0x21
   1ad88:	cmp	r3, r1
   1ad8c:	beq	1ad2c <spss_parse_format+0x460>
   1ad90:	ldrb	r9, [r3, #1]!
   1ad94:	sub	r9, r9, #2
   1ad98:	cmp	r9, #38	; 0x26
   1ad9c:	addls	pc, pc, r9, lsl #2
   1ada0:	b	1ad88 <spss_parse_format+0x4bc>
   1ada4:	b	1ae60 <spss_parse_format+0x594>
   1ada8:	b	1ae6c <spss_parse_format+0x5a0>
   1adac:	b	1ae78 <spss_parse_format+0x5ac>
   1adb0:	b	1ae84 <spss_parse_format+0x5b8>
   1adb4:	b	1ae90 <spss_parse_format+0x5c4>
   1adb8:	b	1ae9c <spss_parse_format+0x5d0>
   1adbc:	b	1aea8 <spss_parse_format+0x5dc>
   1adc0:	b	1aeb4 <spss_parse_format+0x5e8>
   1adc4:	b	1aec0 <spss_parse_format+0x5f4>
   1adc8:	b	1aecc <spss_parse_format+0x600>
   1adcc:	b	1aed8 <spss_parse_format+0x60c>
   1add0:	b	1aee4 <spss_parse_format+0x618>
   1add4:	b	1aeec <spss_parse_format+0x620>
   1add8:	b	1aef8 <spss_parse_format+0x62c>
   1addc:	b	1af04 <spss_parse_format+0x638>
   1ade0:	b	1af10 <spss_parse_format+0x644>
   1ade4:	b	1af1c <spss_parse_format+0x650>
   1ade8:	b	1af28 <spss_parse_format+0x65c>
   1adec:	b	1af38 <spss_parse_format+0x66c>
   1adf0:	b	1af44 <spss_parse_format+0x678>
   1adf4:	b	1af54 <spss_parse_format+0x688>
   1adf8:	b	1af64 <spss_parse_format+0x698>
   1adfc:	b	1af70 <spss_parse_format+0x6a4>
   1ae00:	b	1af7c <spss_parse_format+0x6b0>
   1ae04:	b	1af8c <spss_parse_format+0x6c0>
   1ae08:	b	1af98 <spss_parse_format+0x6cc>
   1ae0c:	b	1afa4 <spss_parse_format+0x6d8>
   1ae10:	b	1afb0 <spss_parse_format+0x6e4>
   1ae14:	b	1afbc <spss_parse_format+0x6f0>
   1ae18:	b	1afc8 <spss_parse_format+0x6fc>
   1ae1c:	b	1afd4 <spss_parse_format+0x708>
   1ae20:	b	1afe0 <spss_parse_format+0x714>
   1ae24:	b	1afec <spss_parse_format+0x720>
   1ae28:	b	1aff4 <spss_parse_format+0x728>
   1ae2c:	b	1affc <spss_parse_format+0x730>
   1ae30:	b	1b004 <spss_parse_format+0x738>
   1ae34:	b	1b00c <spss_parse_format+0x740>
   1ae38:	b	1b014 <spss_parse_format+0x748>
   1ae3c:	b	1ae58 <spss_parse_format+0x58c>
   1ae40:	ldr	r3, [pc, #484]	; 1b02c <spss_parse_format+0x760>
   1ae44:	mov	r1, #0
   1ae48:	add	r3, pc, r3
   1ae4c:	str	r1, [sp, #12]
   1ae50:	mov	r0, #1
   1ae54:	b	1ad64 <spss_parse_format+0x498>
   1ae58:	stm	r2, {r8, ip}
   1ae5c:	b	1ad88 <spss_parse_format+0x4bc>
   1ae60:	ldr	r9, [sp, #12]
   1ae64:	str	r9, [r2, #4]
   1ae68:	b	1ad88 <spss_parse_format+0x4bc>
   1ae6c:	ldr	r9, [sp, #12]
   1ae70:	str	r9, [r2, #8]
   1ae74:	b	1ad88 <spss_parse_format+0x4bc>
   1ae78:	mov	r9, #1
   1ae7c:	str	r9, [r2]
   1ae80:	b	1ad88 <spss_parse_format+0x4bc>
   1ae84:	mov	r9, #2
   1ae88:	str	r9, [r2]
   1ae8c:	b	1ad88 <spss_parse_format+0x4bc>
   1ae90:	mov	r9, #3
   1ae94:	str	r9, [r2]
   1ae98:	b	1ad88 <spss_parse_format+0x4bc>
   1ae9c:	mov	r9, #4
   1aea0:	str	r9, [r2]
   1aea4:	b	1ad88 <spss_parse_format+0x4bc>
   1aea8:	mov	r9, #5
   1aeac:	str	r9, [r2]
   1aeb0:	b	1ad88 <spss_parse_format+0x4bc>
   1aeb4:	mov	r9, #6
   1aeb8:	str	r9, [r2]
   1aebc:	b	1ad88 <spss_parse_format+0x4bc>
   1aec0:	mov	r9, #7
   1aec4:	str	r9, [r2]
   1aec8:	b	1ad88 <spss_parse_format+0x4bc>
   1aecc:	mov	r9, #8
   1aed0:	str	r9, [r2]
   1aed4:	b	1ad88 <spss_parse_format+0x4bc>
   1aed8:	mov	r9, #9
   1aedc:	str	r9, [r2]
   1aee0:	b	1ad88 <spss_parse_format+0x4bc>
   1aee4:	str	ip, [r2]
   1aee8:	b	1ad88 <spss_parse_format+0x4bc>
   1aeec:	mov	r9, #11
   1aef0:	str	r9, [r2]
   1aef4:	b	1ad88 <spss_parse_format+0x4bc>
   1aef8:	mov	r9, #12
   1aefc:	str	r9, [r2]
   1af00:	b	1ad88 <spss_parse_format+0x4bc>
   1af04:	mov	r9, #15
   1af08:	str	r9, [r2]
   1af0c:	b	1ad88 <spss_parse_format+0x4bc>
   1af10:	mov	r9, #16
   1af14:	str	r9, [r2]
   1af18:	b	1ad88 <spss_parse_format+0x4bc>
   1af1c:	mov	r9, #17
   1af20:	str	r9, [r2]
   1af24:	b	1ad88 <spss_parse_format+0x4bc>
   1af28:	mov	r9, #20
   1af2c:	mov	sl, #11
   1af30:	stm	r2, {r9, sl}
   1af34:	b	1ad88 <spss_parse_format+0x4bc>
   1af38:	mov	r9, #21
   1af3c:	str	r9, [r2]
   1af40:	b	1ad88 <spss_parse_format+0x4bc>
   1af44:	mov	r9, #22
   1af48:	mov	sl, #20
   1af4c:	stm	r2, {r9, sl}
   1af50:	b	1ad88 <spss_parse_format+0x4bc>
   1af54:	mov	r9, #41	; 0x29
   1af58:	mov	sl, #19
   1af5c:	stm	r2, {r9, sl}
   1af60:	b	1ad88 <spss_parse_format+0x4bc>
   1af64:	mov	r9, #23
   1af68:	stm	r2, {r9, ip}
   1af6c:	b	1ad88 <spss_parse_format+0x4bc>
   1af70:	mov	r9, #24
   1af74:	str	r9, [r2]
   1af78:	b	1ad88 <spss_parse_format+0x4bc>
   1af7c:	mov	r9, #25
   1af80:	mov	sl, #23
   1af84:	stm	r2, {r9, sl}
   1af88:	b	1ad88 <spss_parse_format+0x4bc>
   1af8c:	mov	r9, #40	; 0x28
   1af90:	str	r9, [r2]
   1af94:	b	1ad88 <spss_parse_format+0x4bc>
   1af98:	mov	r9, #26
   1af9c:	str	r9, [r2]
   1afa0:	b	1ad88 <spss_parse_format+0x4bc>
   1afa4:	mov	r9, #27
   1afa8:	str	r9, [r2]
   1afac:	b	1ad88 <spss_parse_format+0x4bc>
   1afb0:	mov	r9, #28
   1afb4:	str	r9, [r2]
   1afb8:	b	1ad88 <spss_parse_format+0x4bc>
   1afbc:	mov	r9, #29
   1afc0:	str	r9, [r2]
   1afc4:	b	1ad88 <spss_parse_format+0x4bc>
   1afc8:	mov	r9, #30
   1afcc:	stm	r2, {r9, ip}
   1afd0:	b	1ad88 <spss_parse_format+0x4bc>
   1afd4:	mov	r9, #31
   1afd8:	str	r9, [r2]
   1afdc:	b	1ad88 <spss_parse_format+0x4bc>
   1afe0:	mov	r9, #32
   1afe4:	str	r9, [r2]
   1afe8:	b	1ad88 <spss_parse_format+0x4bc>
   1afec:	str	fp, [r2]
   1aff0:	b	1ad88 <spss_parse_format+0x4bc>
   1aff4:	str	lr, [r2]
   1aff8:	b	1ad88 <spss_parse_format+0x4bc>
   1affc:	str	r4, [r2]
   1b000:	b	1ad88 <spss_parse_format+0x4bc>
   1b004:	str	r5, [r2]
   1b008:	b	1ad88 <spss_parse_format+0x4bc>
   1b00c:	str	r6, [r2]
   1b010:	b	1ad88 <spss_parse_format+0x4bc>
   1b014:	stm	r2, {r7, ip}
   1b018:	b	1ad88 <spss_parse_format+0x4bc>
   1b01c:	.word	0x0000b098
   1b020:	.word	0x0000b08c
   1b024:	.word	0x0000b068
   1b028:	.word	0x0000ac3c
   1b02c:	.word	0x0000ab3c

0001b030 <dta_ctx_alloc>:
   1b030:	push	{r4, lr}
   1b034:	mov	r1, #544	; 0x220
   1b038:	mov	r4, r0
   1b03c:	mov	r0, #1
   1b040:	bl	3d58 <calloc@plt>
   1b044:	cmp	r0, #0
   1b048:	movne	r3, #0
   1b04c:	strne	r4, [r0, #280]	; 0x118
   1b050:	strne	r3, [r0, #284]	; 0x11c
   1b054:	pop	{r4, pc}

0001b058 <dta_ctx_init>:
   1b058:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1b05c:	ldrb	r5, [sp, #36]	; 0x24
   1b060:	ldrb	r9, [sp, #32]
   1b064:	sub	ip, r5, #104	; 0x68
   1b068:	cmp	ip, #15
   1b06c:	bls	1b078 <dta_ctx_init+0x20>
   1b070:	mov	r0, #24
   1b074:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b078:	mov	r4, r0
   1b07c:	mov	r6, r2
   1b080:	mov	r7, r3
   1b084:	mov	r8, r1
   1b088:	bl	3eb4 <machine_is_little_endian@plt>
   1b08c:	ldrb	r3, [r4, #192]	; 0xc0
   1b090:	cmp	r9, #2
   1b094:	movne	r2, #2
   1b098:	moveq	r2, #1
   1b09c:	bic	r3, r3, #1
   1b0a0:	str	r5, [r4, #144]	; 0x90
   1b0a4:	str	r8, [r4, #148]	; 0x94
   1b0a8:	strd	r6, [r4, #152]	; 0x98
   1b0ac:	cmp	r0, #0
   1b0b0:	movne	r0, #2
   1b0b4:	moveq	r0, #1
   1b0b8:	cmp	r9, r0
   1b0bc:	moveq	r9, r3
   1b0c0:	orrne	r9, r3, #1
   1b0c4:	cmp	r8, #0
   1b0c8:	str	r2, [r4, #232]	; 0xe8
   1b0cc:	strb	r9, [r4, #192]	; 0xc0
   1b0d0:	bne	1b3f8 <dta_ctx_init+0x3a0>
   1b0d4:	ldrb	r3, [r4, #192]	; 0xc0
   1b0d8:	cmp	r5, #104	; 0x68
   1b0dc:	bic	r3, r3, #2
   1b0e0:	strb	r3, [r4, #192]	; 0xc0
   1b0e4:	bne	1b12c <dta_ctx_init+0xd4>
   1b0e8:	mov	r3, #7
   1b0ec:	str	r3, [r4, #80]	; 0x50
   1b0f0:	mov	r1, #0
   1b0f4:	cmp	r5, #117	; 0x75
   1b0f8:	strb	r1, [r4, #20]
   1b0fc:	beq	1b154 <dta_ctx_init+0xfc>
   1b100:	cmp	r5, #104	; 0x68
   1b104:	bne	1b168 <dta_ctx_init+0x110>
   1b108:	mov	r3, #9
   1b10c:	mov	r2, #32
   1b110:	str	r1, [r4, #92]	; 0x5c
   1b114:	str	r3, [r4, #84]	; 0x54
   1b118:	str	r3, [r4, #76]	; 0x4c
   1b11c:	str	r3, [r4, #96]	; 0x60
   1b120:	str	r2, [r4, #88]	; 0x58
   1b124:	str	r2, [r4, #4]
   1b128:	b	1b1a4 <dta_ctx_init+0x14c>
   1b12c:	cmp	r5, #113	; 0x71
   1b130:	bhi	1b274 <dta_ctx_init+0x21c>
   1b134:	mov	r3, #12
   1b138:	cmp	r5, #110	; 0x6e
   1b13c:	str	r3, [r4, #80]	; 0x50
   1b140:	bls	1b0f0 <dta_ctx_init+0x98>
   1b144:	mov	r3, #111	; 0x6f
   1b148:	cmp	r5, #117	; 0x75
   1b14c:	strb	r3, [r4, #20]
   1b150:	bne	1b168 <dta_ctx_init+0x110>
   1b154:	mov	r3, #4
   1b158:	mov	r2, #1
   1b15c:	str	r2, [r4, #8]
   1b160:	str	r3, [r4, #112]	; 0x70
   1b164:	str	r3, [r4, #116]	; 0x74
   1b168:	cmp	r5, #109	; 0x6d
   1b16c:	bhi	1b32c <dta_ctx_init+0x2d4>
   1b170:	mov	r3, #9
   1b174:	mov	r2, #2
   1b178:	cmp	r5, #107	; 0x6b
   1b17c:	str	r2, [r4, #92]	; 0x5c
   1b180:	str	r3, [r4, #84]	; 0x54
   1b184:	str	r3, [r4, #76]	; 0x4c
   1b188:	str	r3, [r4, #96]	; 0x60
   1b18c:	bhi	1b34c <dta_ctx_init+0x2f4>
   1b190:	mov	r3, #32
   1b194:	cmp	r5, #104	; 0x68
   1b198:	str	r3, [r4, #88]	; 0x58
   1b19c:	str	r3, [r4, #4]
   1b1a0:	bne	1b4c8 <dta_ctx_init+0x470>
   1b1a4:	ldrb	r3, [r4, #192]	; 0xc0
   1b1a8:	mov	r2, #2
   1b1ac:	mov	ip, #0
   1b1b0:	bic	r3, r3, #4
   1b1b4:	mov	r0, #12
   1b1b8:	mov	r1, #1
   1b1bc:	strb	r3, [r4, #192]	; 0xc0
   1b1c0:	str	ip, [r4, #16]
   1b1c4:	str	r2, [r4, #100]	; 0x64
   1b1c8:	str	r2, [r4, #108]	; 0x6c
   1b1cc:	str	r0, [r4, #104]	; 0x68
   1b1d0:	str	r1, [r4, #24]
   1b1d4:	ldr	r7, [pc, #768]	; 1b4dc <dta_ctx_init+0x484>
   1b1d8:	ldr	r0, [pc, #768]	; 1b4e0 <dta_ctx_init+0x488>
   1b1dc:	mvn	r6, #0
   1b1e0:	mov	r1, #126	; 0x7e
   1b1e4:	mvn	r2, #-2147483647	; 0x80000001
   1b1e8:	mvn	r3, #-2130706432	; 0x81000000
   1b1ec:	strh	r0, [r4, #194]	; 0xc2
   1b1f0:	strd	r6, [r4, #208]	; 0xd0
   1b1f4:	strb	r1, [r4, #193]	; 0xc1
   1b1f8:	str	r2, [r4, #196]	; 0xc4
   1b1fc:	str	r3, [r4, #200]	; 0xc8
   1b200:	ldr	r3, [sp, #44]	; 0x2c
   1b204:	cmp	r3, #0
   1b208:	beq	1b230 <dta_ctx_init+0x1d8>
   1b20c:	ldr	r3, [sp, #40]	; 0x28
   1b210:	cmp	r3, #0
   1b214:	beq	1b414 <dta_ctx_init+0x3bc>
   1b218:	mov	r1, r3
   1b21c:	ldr	r0, [sp, #44]	; 0x2c
   1b220:	bl	4130 <iconv_open@plt>
   1b224:	str	r0, [r4, #236]	; 0xec
   1b228:	cmn	r0, #1
   1b22c:	beq	1b470 <dta_ctx_init+0x418>
   1b230:	ldr	r0, [r4, #148]	; 0x94
   1b234:	cmp	r5, #119	; 0x77
   1b238:	add	r0, r0, #1
   1b23c:	lslne	r0, r0, #1
   1b240:	lsleq	r0, r0, #2
   1b244:	str	r0, [r4, #48]	; 0x30
   1b248:	bl	422c <readstat_malloc@plt>
   1b24c:	cmp	r0, #0
   1b250:	str	r0, [r4, #44]	; 0x2c
   1b254:	beq	1b324 <dta_ctx_init+0x2cc>
   1b258:	ldr	r0, [r4, #148]	; 0x94
   1b25c:	cmp	r0, #0
   1b260:	bgt	1b290 <dta_ctx_init+0x238>
   1b264:	mov	r3, #1
   1b268:	str	r3, [r4, #284]	; 0x11c
   1b26c:	mov	r0, #0
   1b270:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b274:	cmp	r5, #117	; 0x75
   1b278:	bhi	1b3d0 <dta_ctx_init+0x378>
   1b27c:	mov	r3, #49	; 0x31
   1b280:	str	r3, [r4, #80]	; 0x50
   1b284:	bne	1b144 <dta_ctx_init+0xec>
   1b288:	strb	r5, [r4, #20]
   1b28c:	b	1b154 <dta_ctx_init+0xfc>
   1b290:	add	r1, r4, #80	; 0x50
   1b294:	ldr	ip, [r4, #76]	; 0x4c
   1b298:	ldm	r1, {r1, r2, r3}
   1b29c:	mul	ip, r0, ip
   1b2a0:	mul	r1, r0, r1
   1b2a4:	mul	r2, r0, r2
   1b2a8:	mul	r3, r0, r3
   1b2ac:	lsl	r0, r0, #1
   1b2b0:	str	ip, [r4, #40]	; 0x28
   1b2b4:	str	r1, [r4, #56]	; 0x38
   1b2b8:	str	r2, [r4, #64]	; 0x40
   1b2bc:	str	r3, [r4, #72]	; 0x48
   1b2c0:	str	r0, [r4, #32]
   1b2c4:	bl	422c <readstat_malloc@plt>
   1b2c8:	cmp	r0, #0
   1b2cc:	str	r0, [r4, #28]
   1b2d0:	beq	1b324 <dta_ctx_init+0x2cc>
   1b2d4:	ldr	r0, [r4, #40]	; 0x28
   1b2d8:	bl	422c <readstat_malloc@plt>
   1b2dc:	cmp	r0, #0
   1b2e0:	str	r0, [r4, #36]	; 0x24
   1b2e4:	beq	1b324 <dta_ctx_init+0x2cc>
   1b2e8:	ldr	r0, [r4, #56]	; 0x38
   1b2ec:	bl	422c <readstat_malloc@plt>
   1b2f0:	cmp	r0, #0
   1b2f4:	str	r0, [r4, #52]	; 0x34
   1b2f8:	beq	1b324 <dta_ctx_init+0x2cc>
   1b2fc:	ldr	r0, [r4, #64]	; 0x40
   1b300:	bl	422c <readstat_malloc@plt>
   1b304:	cmp	r0, #0
   1b308:	str	r0, [r4, #60]	; 0x3c
   1b30c:	beq	1b324 <dta_ctx_init+0x2cc>
   1b310:	ldr	r0, [r4, #72]	; 0x48
   1b314:	bl	422c <readstat_malloc@plt>
   1b318:	cmp	r0, #0
   1b31c:	str	r0, [r4, #68]	; 0x44
   1b320:	bne	1b264 <dta_ctx_init+0x20c>
   1b324:	mov	r0, #3
   1b328:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b32c:	mov	r3, #4
   1b330:	cmp	r5, #117	; 0x75
   1b334:	str	r3, [r4, #92]	; 0x5c
   1b338:	bhi	1b440 <dta_ctx_init+0x3e8>
   1b33c:	mov	r3, #33	; 0x21
   1b340:	str	r3, [r4, #84]	; 0x54
   1b344:	str	r3, [r4, #76]	; 0x4c
   1b348:	str	r3, [r4, #96]	; 0x60
   1b34c:	mov	r3, #81	; 0x51
   1b350:	mov	r1, #18
   1b354:	mov	r2, #4
   1b358:	str	r3, [r4, #88]	; 0x58
   1b35c:	str	r3, [r4, #4]
   1b360:	str	r1, [r4, #16]
   1b364:	str	r2, [r4, #100]	; 0x64
   1b368:	mov	r3, #33	; 0x21
   1b36c:	str	r3, [r4, #104]	; 0x68
   1b370:	mov	r3, #3
   1b374:	str	r3, [r4, #108]	; 0x6c
   1b378:	ldrb	r3, [r4, #192]	; 0xc0
   1b37c:	cmp	r5, #116	; 0x74
   1b380:	movhi	r2, #2
   1b384:	orrhi	r3, r3, #4
   1b388:	strhi	r2, [r4, #24]
   1b38c:	strbhi	r3, [r4, #192]	; 0xc0
   1b390:	bls	1b4ac <dta_ctx_init+0x454>
   1b394:	ldrb	r3, [r4, #192]	; 0xc0
   1b398:	ldr	r1, [pc, #316]	; 1b4dc <dta_ctx_init+0x484>
   1b39c:	ldr	lr, [pc, #320]	; 1b4e4 <dta_ctx_init+0x48c>
   1b3a0:	orr	r3, r3, #8
   1b3a4:	mvn	r0, #0
   1b3a8:	mov	ip, #100	; 0x64
   1b3ac:	mvn	r2, #-2147483621	; 0x8000001b
   1b3b0:	strb	r3, [r4, #192]	; 0xc0
   1b3b4:	mvn	r3, #-2130706432	; 0x81000000
   1b3b8:	strh	lr, [r4, #194]	; 0xc2
   1b3bc:	strd	r0, [r4, #208]	; 0xd0
   1b3c0:	strb	ip, [r4, #193]	; 0xc1
   1b3c4:	str	r2, [r4, #196]	; 0xc4
   1b3c8:	str	r3, [r4, #200]	; 0xc8
   1b3cc:	b	1b200 <dta_ctx_init+0x1a8>
   1b3d0:	mov	r3, #2
   1b3d4:	mov	r0, #57	; 0x39
   1b3d8:	mov	r1, #117	; 0x75
   1b3dc:	mov	r2, #6
   1b3e0:	str	r0, [r4, #80]	; 0x50
   1b3e4:	strb	r1, [r4, #20]
   1b3e8:	str	r3, [r4, #8]
   1b3ec:	str	r3, [r4, #112]	; 0x70
   1b3f0:	str	r2, [r4, #116]	; 0x74
   1b3f4:	b	1b168 <dta_ctx_init+0x110>
   1b3f8:	mov	r0, r8
   1b3fc:	mov	r1, #4
   1b400:	bl	3fc8 <readstat_calloc@plt>
   1b404:	cmp	r0, #0
   1b408:	str	r0, [r4, #228]	; 0xe4
   1b40c:	bne	1b0d4 <dta_ctx_init+0x7c>
   1b410:	b	1b324 <dta_ctx_init+0x2cc>
   1b414:	cmp	r5, #117	; 0x75
   1b418:	bls	1b480 <dta_ctx_init+0x428>
   1b41c:	ldr	r6, [pc, #196]	; 1b4e8 <dta_ctx_init+0x490>
   1b420:	ldr	r0, [sp, #44]	; 0x2c
   1b424:	add	r6, pc, r6
   1b428:	mov	r1, r6
   1b42c:	bl	3e00 <strcmp@plt>
   1b430:	cmp	r0, #0
   1b434:	bne	1b498 <dta_ctx_init+0x440>
   1b438:	ldr	r0, [r4, #236]	; 0xec
   1b43c:	b	1b228 <dta_ctx_init+0x1d0>
   1b440:	ldr	r1, [pc, #164]	; 1b4ec <dta_ctx_init+0x494>
   1b444:	mov	r2, #129	; 0x81
   1b448:	mov	r0, #18
   1b44c:	str	r3, [r4, #100]	; 0x64
   1b450:	str	r1, [r4, #88]	; 0x58
   1b454:	str	r1, [r4, #4]
   1b458:	str	r2, [r4, #84]	; 0x54
   1b45c:	str	r2, [r4, #76]	; 0x4c
   1b460:	str	r2, [r4, #96]	; 0x60
   1b464:	str	r2, [r4, #104]	; 0x68
   1b468:	str	r0, [r4, #16]
   1b46c:	b	1b370 <dta_ctx_init+0x318>
   1b470:	mov	r3, #0
   1b474:	str	r3, [r4, #236]	; 0xec
   1b478:	mov	r0, #7
   1b47c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b480:	ldr	r1, [pc, #104]	; 1b4f0 <dta_ctx_init+0x498>
   1b484:	ldr	r0, [sp, #44]	; 0x2c
   1b488:	add	r1, pc, r1
   1b48c:	bl	4130 <iconv_open@plt>
   1b490:	str	r0, [r4, #236]	; 0xec
   1b494:	b	1b228 <dta_ctx_init+0x1d0>
   1b498:	mov	r1, r6
   1b49c:	ldr	r0, [sp, #44]	; 0x2c
   1b4a0:	bl	4130 <iconv_open@plt>
   1b4a4:	str	r0, [r4, #236]	; 0xec
   1b4a8:	b	1b228 <dta_ctx_init+0x1d0>
   1b4ac:	mov	r2, #1
   1b4b0:	bic	r3, r3, #4
   1b4b4:	cmp	r5, #112	; 0x70
   1b4b8:	strb	r3, [r4, #192]	; 0xc0
   1b4bc:	str	r2, [r4, #24]
   1b4c0:	bls	1b1d4 <dta_ctx_init+0x17c>
   1b4c4:	b	1b394 <dta_ctx_init+0x33c>
   1b4c8:	mov	r2, #18
   1b4cc:	mov	r3, #4
   1b4d0:	str	r2, [r4, #16]
   1b4d4:	str	r3, [r4, #100]	; 0x64
   1b4d8:	b	1b368 <dta_ctx_init+0x310>
   1b4dc:	.word	0x7fdfffff
   1b4e0:	.word	0x00007ffe
   1b4e4:	.word	0x00007fe4
   1b4e8:	.word	0x00008fe0
   1b4ec:	.word	0x00000141
   1b4f0:	.word	0x0000acfc

0001b4f4 <dta_ctx_free>:
   1b4f4:	push	{r4, r5, r6, lr}
   1b4f8:	mov	r4, r0
   1b4fc:	ldr	r0, [r0, #28]
   1b500:	cmp	r0, #0
   1b504:	beq	1b50c <dta_ctx_free+0x18>
   1b508:	bl	3ec0 <free@plt>
   1b50c:	ldr	r0, [r4, #36]	; 0x24
   1b510:	cmp	r0, #0
   1b514:	beq	1b51c <dta_ctx_free+0x28>
   1b518:	bl	3ec0 <free@plt>
   1b51c:	ldr	r0, [r4, #44]	; 0x2c
   1b520:	cmp	r0, #0
   1b524:	beq	1b52c <dta_ctx_free+0x38>
   1b528:	bl	3ec0 <free@plt>
   1b52c:	ldr	r0, [r4, #52]	; 0x34
   1b530:	cmp	r0, #0
   1b534:	beq	1b53c <dta_ctx_free+0x48>
   1b538:	bl	3ec0 <free@plt>
   1b53c:	ldr	r0, [r4, #60]	; 0x3c
   1b540:	cmp	r0, #0
   1b544:	beq	1b54c <dta_ctx_free+0x58>
   1b548:	bl	3ec0 <free@plt>
   1b54c:	ldr	r0, [r4, #68]	; 0x44
   1b550:	cmp	r0, #0
   1b554:	beq	1b55c <dta_ctx_free+0x68>
   1b558:	bl	3ec0 <free@plt>
   1b55c:	ldr	r0, [r4, #236]	; 0xec
   1b560:	cmp	r0, #0
   1b564:	beq	1b56c <dta_ctx_free+0x78>
   1b568:	bl	3dd0 <iconv_close@plt>
   1b56c:	ldr	r0, [r4]
   1b570:	cmp	r0, #0
   1b574:	beq	1b57c <dta_ctx_free+0x88>
   1b578:	bl	3ec0 <free@plt>
   1b57c:	ldr	r2, [r4, #228]	; 0xe4
   1b580:	cmp	r2, #0
   1b584:	beq	1b5c4 <dta_ctx_free+0xd0>
   1b588:	ldr	r1, [r4, #148]	; 0x94
   1b58c:	cmp	r1, #0
   1b590:	ble	1b5bc <dta_ctx_free+0xc8>
   1b594:	mov	r5, #0
   1b598:	ldr	r3, [r2, r5, lsl #2]
   1b59c:	add	r5, r5, #1
   1b5a0:	subs	r0, r3, #0
   1b5a4:	beq	1b5b4 <dta_ctx_free+0xc0>
   1b5a8:	bl	3ec0 <free@plt>
   1b5ac:	ldr	r2, [r4, #228]	; 0xe4
   1b5b0:	ldr	r1, [r4, #148]	; 0x94
   1b5b4:	cmp	r1, r5
   1b5b8:	bgt	1b598 <dta_ctx_free+0xa4>
   1b5bc:	mov	r0, r2
   1b5c0:	bl	3ec0 <free@plt>
   1b5c4:	ldr	r0, [r4, #216]	; 0xd8
   1b5c8:	cmp	r0, #0
   1b5cc:	beq	1b600 <dta_ctx_free+0x10c>
   1b5d0:	ldr	r3, [r4, #220]	; 0xdc
   1b5d4:	cmp	r3, #0
   1b5d8:	beq	1b5fc <dta_ctx_free+0x108>
   1b5dc:	mov	r5, #0
   1b5e0:	ldr	r0, [r0, r5, lsl #2]
   1b5e4:	bl	3ec0 <free@plt>
   1b5e8:	ldr	r3, [r4, #220]	; 0xdc
   1b5ec:	add	r5, r5, #1
   1b5f0:	cmp	r3, r5
   1b5f4:	ldr	r0, [r4, #216]	; 0xd8
   1b5f8:	bhi	1b5e0 <dta_ctx_free+0xec>
   1b5fc:	bl	3ec0 <free@plt>
   1b600:	mov	r0, r4
   1b604:	pop	{r4, r5, r6, lr}
   1b608:	b	3ec0 <free@plt>

0001b60c <dta_type_info>:
   1b60c:	ldrb	r1, [r1, #20]
   1b610:	cmp	r1, #111	; 0x6f
   1b614:	beq	1b668 <dta_type_info+0x5c>
   1b618:	cmp	r1, #117	; 0x75
   1b61c:	beq	1b68c <dta_type_info+0x80>
   1b620:	cmp	r0, #126	; 0x7e
   1b624:	bls	1b648 <dta_type_info+0x3c>
   1b628:	mov	ip, #0
   1b62c:	sub	r1, r0, #127	; 0x7f
   1b630:	mov	r0, ip
   1b634:	cmp	r2, #0
   1b638:	strne	r1, [r2]
   1b63c:	cmp	r3, #0
   1b640:	strne	ip, [r3]
   1b644:	bx	lr
   1b648:	sub	r0, r0, #98	; 0x62
   1b64c:	uxth	r0, r0
   1b650:	cmp	r0, #10
   1b654:	bls	1b6c8 <dta_type_info+0xbc>
   1b658:	mov	ip, #0
   1b65c:	mov	r1, ip
   1b660:	mov	r0, #5
   1b664:	b	1b634 <dta_type_info+0x28>
   1b668:	sub	r1, r0, #251	; 0xfb
   1b66c:	cmp	r1, #4
   1b670:	addls	pc, pc, r1, lsl #2
   1b674:	b	1b738 <dta_type_info+0x12c>
   1b678:	b	1b6b8 <dta_type_info+0xac>
   1b67c:	b	1b728 <dta_type_info+0x11c>
   1b680:	b	1b718 <dta_type_info+0x10c>
   1b684:	b	1b708 <dta_type_info+0xfc>
   1b688:	b	1b6f8 <dta_type_info+0xec>
   1b68c:	ldr	r1, [pc, #196]	; 1b758 <dta_type_info+0x14c>
   1b690:	cmp	r0, r1
   1b694:	beq	1b708 <dta_type_info+0xfc>
   1b698:	bls	1b6e4 <dta_type_info+0xd8>
   1b69c:	ldr	r1, [pc, #184]	; 1b75c <dta_type_info+0x150>
   1b6a0:	cmp	r0, r1
   1b6a4:	beq	1b728 <dta_type_info+0x11c>
   1b6a8:	bcc	1b718 <dta_type_info+0x10c>
   1b6ac:	add	r1, r1, #1
   1b6b0:	cmp	r0, r1
   1b6b4:	bne	1b738 <dta_type_info+0x12c>
   1b6b8:	mov	ip, #1
   1b6bc:	mov	r1, ip
   1b6c0:	mov	r0, #0
   1b6c4:	b	1b634 <dta_type_info+0x28>
   1b6c8:	ldr	r1, [pc, #144]	; 1b760 <dta_type_info+0x154>
   1b6cc:	add	r1, pc, r1
   1b6d0:	add	ip, r1, r0, lsl #2
   1b6d4:	ldr	r0, [r1, r0, lsl #2]
   1b6d8:	ldr	r1, [ip, #44]	; 0x2c
   1b6dc:	ldr	ip, [ip, #88]	; 0x58
   1b6e0:	b	1b634 <dta_type_info+0x28>
   1b6e4:	cmp	r0, #32768	; 0x8000
   1b6e8:	beq	1b748 <dta_type_info+0x13c>
   1b6ec:	sub	r1, r1, #1
   1b6f0:	cmp	r0, r1
   1b6f4:	bne	1b738 <dta_type_info+0x12c>
   1b6f8:	mov	ip, #5
   1b6fc:	mov	r1, #8
   1b700:	mov	r0, #0
   1b704:	b	1b634 <dta_type_info+0x28>
   1b708:	mov	ip, #4
   1b70c:	mov	r1, ip
   1b710:	mov	r0, #0
   1b714:	b	1b634 <dta_type_info+0x28>
   1b718:	mov	ip, #3
   1b71c:	mov	r1, #4
   1b720:	mov	r0, #0
   1b724:	b	1b634 <dta_type_info+0x28>
   1b728:	mov	ip, #2
   1b72c:	mov	r1, ip
   1b730:	mov	r0, #0
   1b734:	b	1b634 <dta_type_info+0x28>
   1b738:	mov	ip, #0
   1b73c:	mov	r1, r0
   1b740:	mov	r0, ip
   1b744:	b	1b634 <dta_type_info+0x28>
   1b748:	mov	ip, #6
   1b74c:	mov	r1, #8
   1b750:	mov	r0, #0
   1b754:	b	1b634 <dta_type_info+0x28>
   1b758:	.word	0x0000fff7
   1b75c:	.word	0x0000fff9
   1b760:	.word	0x0000aa34

0001b764 <dta_parse_timestamp>:
   1b764:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b768:	sub	sp, sp, #1056	; 0x420
   1b76c:	sub	sp, sp, #4
   1b770:	add	r9, r0, r1
   1b774:	cmp	r0, r9
   1b778:	str	r0, [sp, #24]
   1b77c:	str	r1, [sp, #28]
   1b780:	str	r3, [sp, #20]
   1b784:	beq	1babc <dta_parse_timestamp+0x358>
   1b788:	ldr	r3, [pc, #836]	; 1bad4 <dta_parse_timestamp+0x370>
   1b78c:	ldr	sl, [pc, #836]	; 1bad8 <dta_parse_timestamp+0x374>
   1b790:	add	r3, pc, r3
   1b794:	str	r3, [sp, #16]
   1b798:	ldr	r3, [pc, #828]	; 1badc <dta_parse_timestamp+0x378>
   1b79c:	mov	fp, #0
   1b7a0:	mov	r7, #1
   1b7a4:	add	r3, pc, r3
   1b7a8:	add	sl, pc, sl
   1b7ac:	mov	r5, r7
   1b7b0:	mov	r8, fp
   1b7b4:	mov	r6, r0
   1b7b8:	mov	r4, fp
   1b7bc:	str	r3, [sp, #12]
   1b7c0:	add	r3, sl, #40	; 0x28
   1b7c4:	str	r3, [sp, #8]
   1b7c8:	ldr	r3, [sp, #8]
   1b7cc:	cmp	r7, #0
   1b7d0:	add	r4, r3, r4
   1b7d4:	mov	r3, fp
   1b7d8:	beq	1b820 <dta_parse_timestamp+0xbc>
   1b7dc:	sub	r0, r7, #1
   1b7e0:	adds	r0, r4, r0
   1b7e4:	bcs	1b818 <dta_parse_timestamp+0xb4>
   1b7e8:	ldrb	lr, [r6]
   1b7ec:	mov	r1, r4
   1b7f0:	sub	r3, r0, r1
   1b7f4:	ldrb	ip, [r1, r3, asr #1]
   1b7f8:	add	r3, r1, r3, asr #1
   1b7fc:	cmp	ip, lr
   1b800:	subhi	r0, r3, #1
   1b804:	bhi	1b810 <dta_parse_timestamp+0xac>
   1b808:	bcs	1ba08 <dta_parse_timestamp+0x2a4>
   1b80c:	add	r1, r3, #1
   1b810:	cmp	r0, r1
   1b814:	bcs	1b7f0 <dta_parse_timestamp+0x8c>
   1b818:	add	r4, r4, r7
   1b81c:	add	r3, fp, r7
   1b820:	ldr	r1, [sp, #16]
   1b824:	add	r5, r1, r5
   1b828:	ldrb	r7, [r5, #160]	; 0xa0
   1b82c:	cmp	r7, #0
   1b830:	beq	1b888 <dta_parse_timestamp+0x124>
   1b834:	add	ip, r4, r7, lsl #1
   1b838:	sub	ip, ip, #2
   1b83c:	cmp	r4, ip
   1b840:	bhi	1b884 <dta_parse_timestamp+0x120>
   1b844:	ldrb	r5, [r6]
   1b848:	mov	r0, r4
   1b84c:	sub	r1, ip, r0
   1b850:	asr	r1, r1, #1
   1b854:	bic	r1, r1, #1
   1b858:	add	lr, r0, r1
   1b85c:	ldrb	r1, [r0, r1]
   1b860:	cmp	r1, r5
   1b864:	subhi	ip, lr, #2
   1b868:	bhi	1b87c <dta_parse_timestamp+0x118>
   1b86c:	ldrb	r1, [lr, #1]
   1b870:	add	r0, lr, #2
   1b874:	cmp	r1, r5
   1b878:	bcs	1ba14 <dta_parse_timestamp+0x2b0>
   1b87c:	cmp	r0, ip
   1b880:	bls	1b84c <dta_parse_timestamp+0xe8>
   1b884:	add	r3, r3, r7
   1b888:	add	r3, sl, r3
   1b88c:	ldrb	r1, [r3, #208]	; 0xd0
   1b890:	add	r1, sl, r1
   1b894:	ldrb	r3, [r1, #424]	; 0x1a8
   1b898:	ldrb	r5, [r1, #364]	; 0x16c
   1b89c:	cmp	r3, #0
   1b8a0:	beq	1b928 <dta_parse_timestamp+0x1c4>
   1b8a4:	ldrb	r0, [sl, r3]
   1b8a8:	add	r3, sl, r3
   1b8ac:	mov	r7, #4
   1b8b0:	add	r0, r3, r0
   1b8b4:	mov	r4, #3
   1b8b8:	mov	lr, #2
   1b8bc:	mov	ip, #1
   1b8c0:	cmp	r0, r3
   1b8c4:	beq	1b928 <dta_parse_timestamp+0x1c4>
   1b8c8:	ldrb	r1, [r3, #1]!
   1b8cc:	cmp	r1, #16
   1b8d0:	addls	pc, pc, r1, lsl #2
   1b8d4:	b	1b8c0 <dta_parse_timestamp+0x15c>
   1b8d8:	b	1b954 <dta_parse_timestamp+0x1f0>
   1b8dc:	b	1b91c <dta_parse_timestamp+0x1b8>
   1b8e0:	b	1ba00 <dta_parse_timestamp+0x29c>
   1b8e4:	b	1b9f4 <dta_parse_timestamp+0x290>
   1b8e8:	b	1b9ec <dta_parse_timestamp+0x288>
   1b8ec:	b	1b9e4 <dta_parse_timestamp+0x280>
   1b8f0:	b	1b9dc <dta_parse_timestamp+0x278>
   1b8f4:	b	1b9d4 <dta_parse_timestamp+0x270>
   1b8f8:	b	1b9c8 <dta_parse_timestamp+0x264>
   1b8fc:	b	1b9bc <dta_parse_timestamp+0x258>
   1b900:	b	1b9b0 <dta_parse_timestamp+0x24c>
   1b904:	b	1b9a4 <dta_parse_timestamp+0x240>
   1b908:	b	1b998 <dta_parse_timestamp+0x234>
   1b90c:	b	1b98c <dta_parse_timestamp+0x228>
   1b910:	b	1b980 <dta_parse_timestamp+0x21c>
   1b914:	b	1b970 <dta_parse_timestamp+0x20c>
   1b918:	b	1b968 <dta_parse_timestamp+0x204>
   1b91c:	cmp	r0, r3
   1b920:	mov	r8, #0
   1b924:	bne	1b8c8 <dta_parse_timestamp+0x164>
   1b928:	cmp	r5, #0
   1b92c:	beq	1ba68 <dta_parse_timestamp+0x304>
   1b930:	add	r6, r6, #1
   1b934:	cmp	r9, r6
   1b938:	beq	1ba20 <dta_parse_timestamp+0x2bc>
   1b93c:	ldr	r3, [sp, #12]
   1b940:	add	r3, r3, r5
   1b944:	ldrb	r4, [r3, #532]	; 0x214
   1b948:	ldrb	fp, [r3, #580]	; 0x244
   1b94c:	ldrb	r7, [r3, #628]	; 0x274
   1b950:	b	1b7c8 <dta_parse_timestamp+0x64>
   1b954:	ldrb	r1, [r6]
   1b958:	add	r8, r8, r8, lsl #2
   1b95c:	sub	r1, r1, #48	; 0x30
   1b960:	add	r8, r1, r8, lsl #1
   1b964:	b	1b8c0 <dta_parse_timestamp+0x15c>
   1b968:	str	r8, [r2, #8]
   1b96c:	b	1b8c0 <dta_parse_timestamp+0x15c>
   1b970:	sub	r1, r8, #1888	; 0x760
   1b974:	sub	r1, r1, #12
   1b978:	str	r1, [r2, #20]
   1b97c:	b	1b8c0 <dta_parse_timestamp+0x15c>
   1b980:	mov	r1, #11
   1b984:	str	r1, [r2, #16]
   1b988:	b	1b8c0 <dta_parse_timestamp+0x15c>
   1b98c:	mov	r1, #10
   1b990:	str	r1, [r2, #16]
   1b994:	b	1b8c0 <dta_parse_timestamp+0x15c>
   1b998:	mov	r1, #9
   1b99c:	str	r1, [r2, #16]
   1b9a0:	b	1b8c0 <dta_parse_timestamp+0x15c>
   1b9a4:	mov	r1, #8
   1b9a8:	str	r1, [r2, #16]
   1b9ac:	b	1b8c0 <dta_parse_timestamp+0x15c>
   1b9b0:	mov	r1, #7
   1b9b4:	str	r1, [r2, #16]
   1b9b8:	b	1b8c0 <dta_parse_timestamp+0x15c>
   1b9bc:	mov	r1, #6
   1b9c0:	str	r1, [r2, #16]
   1b9c4:	b	1b8c0 <dta_parse_timestamp+0x15c>
   1b9c8:	mov	r1, #5
   1b9cc:	str	r1, [r2, #16]
   1b9d0:	b	1b8c0 <dta_parse_timestamp+0x15c>
   1b9d4:	str	r7, [r2, #16]
   1b9d8:	b	1b8c0 <dta_parse_timestamp+0x15c>
   1b9dc:	str	r4, [r2, #16]
   1b9e0:	b	1b8c0 <dta_parse_timestamp+0x15c>
   1b9e4:	str	lr, [r2, #16]
   1b9e8:	b	1b8c0 <dta_parse_timestamp+0x15c>
   1b9ec:	str	ip, [r2, #16]
   1b9f0:	b	1b8c0 <dta_parse_timestamp+0x15c>
   1b9f4:	mov	r1, #0
   1b9f8:	str	r1, [r2, #16]
   1b9fc:	b	1b8c0 <dta_parse_timestamp+0x15c>
   1ba00:	str	r8, [r2, #12]
   1ba04:	b	1b8c0 <dta_parse_timestamp+0x15c>
   1ba08:	sub	r3, r3, r4
   1ba0c:	add	r3, fp, r3
   1ba10:	b	1b888 <dta_parse_timestamp+0x124>
   1ba14:	sub	r4, lr, r4
   1ba18:	add	r3, r3, r4, asr #1
   1ba1c:	b	1b888 <dta_parse_timestamp+0x124>
   1ba20:	ldr	r1, [pc, #184]	; 1bae0 <dta_parse_timestamp+0x37c>
   1ba24:	cmp	r5, #43	; 0x2b
   1ba28:	add	r1, pc, r1
   1ba2c:	add	r5, r1, r5
   1ba30:	movgt	r0, #0
   1ba34:	ldrb	ip, [r5, #484]	; 0x1e4
   1ba38:	movle	r0, #1
   1ba3c:	add	r3, r1, ip
   1ba40:	ldrb	r1, [r1, ip]
   1ba44:	add	r1, r3, r1
   1ba48:	b	1ba58 <dta_parse_timestamp+0x2f4>
   1ba4c:	ldrb	ip, [r3, #1]!
   1ba50:	cmp	ip, #17
   1ba54:	streq	r8, [r2, #4]
   1ba58:	cmp	r3, r1
   1ba5c:	bne	1ba4c <dta_parse_timestamp+0x2e8>
   1ba60:	cmp	r0, #0
   1ba64:	beq	1bab0 <dta_parse_timestamp+0x34c>
   1ba68:	ldr	r3, [sp, #20]
   1ba6c:	cmp	r3, #0
   1ba70:	beq	1baac <dta_parse_timestamp+0x348>
   1ba74:	ldr	r0, [sp, #24]
   1ba78:	ldr	r3, [sp, #28]
   1ba7c:	ldr	r2, [pc, #96]	; 1bae4 <dta_parse_timestamp+0x380>
   1ba80:	add	r4, sp, #32
   1ba84:	str	r0, [sp, #4]
   1ba88:	mov	r1, #1024	; 0x400
   1ba8c:	str	r3, [sp]
   1ba90:	mov	r0, r4
   1ba94:	add	r2, pc, r2
   1ba98:	ldr	r5, [sp, #20]
   1ba9c:	bl	4280 <snprintf@plt>
   1baa0:	ldr	r1, [sp, #1096]	; 0x448
   1baa4:	mov	r0, r4
   1baa8:	blx	r5
   1baac:	mov	r0, #29
   1bab0:	add	sp, sp, #1056	; 0x420
   1bab4:	add	sp, sp, #4
   1bab8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1babc:	ldr	r3, [pc, #36]	; 1bae8 <dta_parse_timestamp+0x384>
   1bac0:	mov	r1, #0
   1bac4:	add	r3, pc, r3
   1bac8:	mov	r8, r1
   1bacc:	mov	r0, #1
   1bad0:	b	1ba44 <dta_parse_timestamp+0x2e0>
   1bad4:	.word	0x0000aa04
   1bad8:	.word	0x0000a9ec
   1badc:	.word	0x0000a9f0
   1bae0:	.word	0x0000a76c
   1bae4:	.word	0x0000a9a4
   1bae8:	.word	0x0000a6d0
   1baec:	.word	0x00000000

0001baf0 <dta_update_progress>:
   1baf0:	push	{r4, r6, r7, lr}
   1baf4:	mov	r4, r0
   1baf8:	ldrd	r6, [r0, #168]	; 0xa8
   1bafc:	vpush	{d8}
   1bb00:	cmp	r6, #1
   1bb04:	sbcs	r3, r7, #0
   1bb08:	blt	1bb60 <dta_update_progress+0x70>
   1bb0c:	ldrd	r0, [r0, #184]	; 0xb8
   1bb10:	bl	2388c <__aeabi_l2d>
   1bb14:	vmov	d8, r0, r1
   1bb18:	mov	r0, r6
   1bb1c:	mov	r1, r7
   1bb20:	bl	2388c <__aeabi_l2d>
   1bb24:	vmov	d7, r0, r1
   1bb28:	vdiv.f64	d0, d8, d7
   1bb2c:	ldr	r3, [r4, #268]	; 0x10c
   1bb30:	cmp	r3, #0
   1bb34:	beq	1bb54 <dta_update_progress+0x64>
   1bb38:	ldr	r0, [r4, #276]	; 0x114
   1bb3c:	blx	r3
   1bb40:	cmp	r0, #0
   1bb44:	movne	r0, #4
   1bb48:	beq	1bb54 <dta_update_progress+0x64>
   1bb4c:	vpop	{d8}
   1bb50:	pop	{r4, r6, r7, pc}
   1bb54:	vpop	{d8}
   1bb58:	mov	r0, #0
   1bb5c:	pop	{r4, r6, r7, pc}
   1bb60:	vldr	d0, [pc]	; 1bb68 <dta_update_progress+0x78>
   1bb64:	b	1bb2c <dta_update_progress+0x3c>
	...

0001bb70 <dta_read_tag>:
   1bb70:	ldr	r3, [r0, #284]	; 0x11c
   1bb74:	cmp	r3, #0
   1bb78:	beq	1bb88 <dta_read_tag+0x18>
   1bb7c:	ldrb	r3, [r0, #192]	; 0xc0
   1bb80:	tst	r3, #4
   1bb84:	beq	1bbd0 <dta_read_tag+0x60>
   1bb88:	push	{r4, r5, r6, r7, lr}
   1bb8c:	mov	r4, r0
   1bb90:	sub	sp, sp, #260	; 0x104
   1bb94:	mov	r0, r1
   1bb98:	mov	r5, r1
   1bb9c:	bl	41fc <strlen@plt>
   1bba0:	ldr	r3, [r4, #280]	; 0x118
   1bba4:	ldr	r7, [r3, #12]
   1bba8:	ldr	r2, [r3, #20]
   1bbac:	mov	r6, r0
   1bbb0:	mov	r1, r0
   1bbb4:	mov	r0, sp
   1bbb8:	blx	r7
   1bbbc:	cmp	r6, r0
   1bbc0:	movne	r0, #2
   1bbc4:	beq	1bbd8 <dta_read_tag+0x68>
   1bbc8:	add	sp, sp, #260	; 0x104
   1bbcc:	pop	{r4, r5, r6, r7, pc}
   1bbd0:	mov	r0, #0
   1bbd4:	bx	lr
   1bbd8:	mov	r2, r6
   1bbdc:	mov	r1, r5
   1bbe0:	mov	r0, sp
   1bbe4:	bl	44fc <strncmp@plt>
   1bbe8:	cmp	r0, #0
   1bbec:	movne	r0, #5
   1bbf0:	bne	1bbc8 <dta_read_tag+0x58>
   1bbf4:	mov	r0, #0
   1bbf8:	add	sp, sp, #260	; 0x104
   1bbfc:	pop	{r4, r5, r6, r7, pc}

0001bc00 <dta_read_chunk>:
   1bc00:	push	{r4, r5, r6, r7, r8, lr}
   1bc04:	mov	r4, r0
   1bc08:	mov	r7, r2
   1bc0c:	mov	r5, r3
   1bc10:	ldr	r6, [r0, #280]	; 0x118
   1bc14:	ldr	r8, [sp, #24]
   1bc18:	bl	1bb70 <dta_read_tag>
   1bc1c:	cmp	r0, #0
   1bc20:	popne	{r4, r5, r6, r7, r8, pc}
   1bc24:	mov	r0, r7
   1bc28:	ldr	r3, [r6, #12]
   1bc2c:	ldr	r2, [r6, #20]
   1bc30:	mov	r1, r5
   1bc34:	blx	r3
   1bc38:	cmp	r5, r0
   1bc3c:	beq	1bc48 <dta_read_chunk+0x48>
   1bc40:	mov	r0, #2
   1bc44:	pop	{r4, r5, r6, r7, r8, pc}
   1bc48:	mov	r1, r8
   1bc4c:	mov	r0, r4
   1bc50:	pop	{r4, r5, r6, r7, r8, lr}
   1bc54:	b	1bb70 <dta_read_tag>

0001bc58 <readstat_parse_dta>:
   1bc58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bc5c:	mov	r6, r0
   1bc60:	ldr	r4, [r0, #32]
   1bc64:	sub	sp, sp, #260	; 0x104
   1bc68:	mov	r0, r4
   1bc6c:	mov	r8, r1
   1bc70:	mov	r7, r2
   1bc74:	bl	455c <dta_ctx_alloc@plt>
   1bc78:	ldr	r3, [r4]
   1bc7c:	ldr	r1, [r4, #20]
   1bc80:	mov	r5, r0
   1bc84:	mov	r0, r8
   1bc88:	blx	r3
   1bc8c:	cmn	r0, #1
   1bc90:	beq	1bce4 <readstat_parse_dta+0x8c>
   1bc94:	add	r9, sp, #60	; 0x3c
   1bc98:	mov	r0, r9
   1bc9c:	ldr	r3, [r4, #12]
   1bca0:	ldr	r2, [r4, #20]
   1bca4:	mov	r1, #4
   1bca8:	blx	r3
   1bcac:	cmp	r0, #4
   1bcb0:	mov	sl, r0
   1bcb4:	movne	sl, #2
   1bcb8:	beq	1bcec <readstat_parse_dta+0x94>
   1bcbc:	ldr	r3, [r4, #4]
   1bcc0:	ldr	r0, [r4, #20]
   1bcc4:	blx	r3
   1bcc8:	cmp	r5, #0
   1bccc:	beq	1bcd8 <readstat_parse_dta+0x80>
   1bcd0:	mov	r0, r5
   1bcd4:	bl	3e78 <dta_ctx_free@plt>
   1bcd8:	mov	r0, sl
   1bcdc:	add	sp, sp, #260	; 0x104
   1bce0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bce4:	mov	sl, #1
   1bce8:	b	1bcbc <readstat_parse_dta+0x64>
   1bcec:	ldr	r3, [r4, #8]
   1bcf0:	ldr	r2, [r4, #20]
   1bcf4:	mov	r1, #2
   1bcf8:	mov	r0, #0
   1bcfc:	blx	r3
   1bd00:	cmn	r0, #1
   1bd04:	mov	r8, r0
   1bd08:	bne	1bd70 <readstat_parse_dta+0x118>
   1bd0c:	ldr	r6, [r5, #264]	; 0x108
   1bd10:	cmp	r6, #0
   1bd14:	beq	1bf80 <readstat_parse_dta+0x328>
   1bd18:	ldr	ip, [pc, #3692]	; 1cb8c <readstat_parse_dta+0xf34>
   1bd1c:	add	lr, r5, #288	; 0x120
   1bd20:	add	ip, pc, ip
   1bd24:	mov	sl, #15
   1bd28:	ldm	ip!, {r0, r1, r2, r3}
   1bd2c:	str	r0, [r5, #288]	; 0x120
   1bd30:	str	r1, [r5, #292]	; 0x124
   1bd34:	str	r2, [r5, #296]	; 0x128
   1bd38:	ldm	ip!, {r0, r1, r2}
   1bd3c:	str	r3, [r5, #300]	; 0x12c
   1bd40:	ldrh	r3, [ip]
   1bd44:	str	r0, [r5, #304]	; 0x130
   1bd48:	str	r1, [r5, #308]	; 0x134
   1bd4c:	mov	r0, lr
   1bd50:	strh	r3, [lr, #28]
   1bd54:	str	r2, [r5, #312]	; 0x138
   1bd58:	ldr	r1, [r5, #276]	; 0x114
   1bd5c:	blx	r6
   1bd60:	ldr	r3, [r4, #4]
   1bd64:	ldr	r0, [r4, #20]
   1bd68:	blx	r3
   1bd6c:	b	1bcd0 <readstat_parse_dta+0x78>
   1bd70:	mov	r1, #0
   1bd74:	mov	r0, r1
   1bd78:	ldr	r3, [r4, #8]
   1bd7c:	ldr	r2, [r4, #20]
   1bd80:	blx	r3
   1bd84:	cmn	r0, #1
   1bd88:	beq	1bfb4 <readstat_parse_dta+0x35c>
   1bd8c:	ldr	r1, [pc, #3580]	; 1cb90 <readstat_parse_dta+0xf38>
   1bd90:	mov	r2, sl
   1bd94:	mov	r0, r9
   1bd98:	add	r1, pc, r1
   1bd9c:	bl	44fc <strncmp@plt>
   1bda0:	cmp	r0, #0
   1bda4:	bne	1bf88 <readstat_parse_dta+0x330>
   1bda8:	ldr	r1, [pc, #3556]	; 1cb94 <readstat_parse_dta+0xf3c>
   1bdac:	mov	r0, r5
   1bdb0:	add	r1, pc, r1
   1bdb4:	bl	1bb70 <dta_read_tag>
   1bdb8:	subs	sl, r0, #0
   1bdbc:	bne	1bcbc <readstat_parse_dta+0x64>
   1bdc0:	ldr	r1, [pc, #3536]	; 1cb98 <readstat_parse_dta+0xf40>
   1bdc4:	mov	r0, r5
   1bdc8:	add	r1, pc, r1
   1bdcc:	bl	1bb70 <dta_read_tag>
   1bdd0:	subs	sl, r0, #0
   1bdd4:	bne	1bcbc <readstat_parse_dta+0x64>
   1bdd8:	ldr	r2, [pc, #3516]	; 1cb9c <readstat_parse_dta+0xf44>
   1bddc:	ldr	r1, [pc, #3516]	; 1cba0 <readstat_parse_dta+0xf48>
   1bde0:	add	r2, pc, r2
   1bde4:	str	r2, [sp]
   1bde8:	mov	r3, #3
   1bdec:	add	r2, sp, #64	; 0x40
   1bdf0:	add	r1, pc, r1
   1bdf4:	mov	r0, r5
   1bdf8:	bl	1bc00 <dta_read_chunk>
   1bdfc:	subs	sl, r0, #0
   1be00:	bne	1bcbc <readstat_parse_dta+0x64>
   1be04:	ldrb	ip, [sp, #65]	; 0x41
   1be08:	ldr	r3, [pc, #3476]	; 1cba4 <readstat_parse_dta+0xf4c>
   1be0c:	ldr	r1, [pc, #3476]	; 1cba8 <readstat_parse_dta+0xf50>
   1be10:	str	ip, [sp, #16]
   1be14:	ldrb	ip, [sp, #66]	; 0x42
   1be18:	add	r3, pc, r3
   1be1c:	add	fp, sp, #80	; 0x50
   1be20:	str	r3, [sp]
   1be24:	mov	r2, fp
   1be28:	mov	r3, #3
   1be2c:	add	r1, pc, r1
   1be30:	mov	r0, r5
   1be34:	ldrb	r9, [sp, #64]	; 0x40
   1be38:	str	ip, [sp, #24]
   1be3c:	bl	1bc00 <dta_read_chunk>
   1be40:	subs	sl, r0, #0
   1be44:	bne	1bcbc <readstat_parse_dta+0x64>
   1be48:	ldr	r1, [pc, #3420]	; 1cbac <readstat_parse_dta+0xf54>
   1be4c:	mov	r2, #3
   1be50:	add	r1, pc, r1
   1be54:	mov	r0, fp
   1be58:	bl	44fc <strncmp@plt>
   1be5c:	cmp	r0, #0
   1be60:	beq	1c218 <readstat_parse_dta+0x5c0>
   1be64:	ldr	r1, [pc, #3396]	; 1cbb0 <readstat_parse_dta+0xf58>
   1be68:	mov	r0, fp
   1be6c:	mov	r2, #3
   1be70:	add	r1, pc, r1
   1be74:	bl	44fc <strncmp@plt>
   1be78:	cmp	r0, #0
   1be7c:	moveq	r3, #2
   1be80:	streq	r3, [sp, #20]
   1be84:	beq	1c220 <readstat_parse_dta+0x5c8>
   1be88:	mov	sl, #5
   1be8c:	b	1bcbc <readstat_parse_dta+0x64>
   1be90:	ldr	r1, [pc, #3356]	; 1cbb4 <readstat_parse_dta+0xf5c>
   1be94:	mov	r0, r5
   1be98:	add	r1, pc, r1
   1be9c:	bl	1bb70 <dta_read_tag>
   1bea0:	subs	sl, r0, #0
   1bea4:	bne	1cdd4 <readstat_parse_dta+0x117c>
   1bea8:	cmp	r8, #0
   1beac:	beq	1beb8 <readstat_parse_dta+0x260>
   1beb0:	mov	r0, r8
   1beb4:	bl	3ec0 <free@plt>
   1beb8:	ldrb	r3, [r5, #192]	; 0xc0
   1bebc:	ands	r0, r3, #4
   1bec0:	bne	1d1cc <readstat_parse_dta+0x1574>
   1bec4:	ldr	r3, [r4, #8]
   1bec8:	ldr	r2, [r4, #20]
   1becc:	mov	r1, #1
   1bed0:	blx	r3
   1bed4:	mvn	r3, #0
   1bed8:	mvn	r2, #0
   1bedc:	asr	r1, r0, #31
   1bee0:	cmp	r1, r3
   1bee4:	cmpeq	r0, r2
   1bee8:	strd	r0, [r5, #120]	; 0x78
   1beec:	beq	1bf80 <readstat_parse_dta+0x328>
   1bef0:	add	r2, r5, #152	; 0x98
   1bef4:	ldrb	lr, [r5, #192]	; 0xc0
   1bef8:	ldm	r2, {r2, r6, ip}
   1befc:	umull	r8, r9, r2, ip
   1bf00:	mla	r9, ip, r6, r9
   1bf04:	adds	r2, r8, r0
   1bf08:	adc	r3, r9, r1
   1bf0c:	tst	lr, #4
   1bf10:	strd	r2, [r5, #136]	; 0x88
   1bf14:	bne	1d1cc <readstat_parse_dta+0x1574>
   1bf18:	ldr	r3, [r5, #256]	; 0x100
   1bf1c:	ldr	r8, [r5, #280]	; 0x118
   1bf20:	cmp	r3, #0
   1bf24:	beq	1d158 <readstat_parse_dta+0x1500>
   1bf28:	ldr	r3, [r8, #8]
   1bf2c:	ldr	r2, [r8, #20]
   1bf30:	mov	r1, #0
   1bf34:	ldr	r0, [r5, #120]	; 0x78
   1bf38:	blx	r3
   1bf3c:	cmn	r0, #1
   1bf40:	bne	1cf0c <readstat_parse_dta+0x12b4>
   1bf44:	ldr	r3, [r5, #264]	; 0x108
   1bf48:	cmp	r3, #0
   1bf4c:	beq	1bf80 <readstat_parse_dta+0x328>
   1bf50:	ldrd	r2, [r5, #120]	; 0x78
   1bf54:	add	r6, r5, #288	; 0x120
   1bf58:	mov	r0, r6
   1bf5c:	strd	r2, [sp]
   1bf60:	ldr	r2, [pc, #3152]	; 1cbb8 <readstat_parse_dta+0xf60>
   1bf64:	add	r2, pc, r2
   1bf68:	mov	r1, #256	; 0x100
   1bf6c:	bl	4280 <snprintf@plt>
   1bf70:	mov	r0, r6
   1bf74:	ldr	r3, [r5, #264]	; 0x108
   1bf78:	ldr	r1, [r5, #276]	; 0x114
   1bf7c:	blx	r3
   1bf80:	mov	sl, #15
   1bf84:	b	1bd60 <readstat_parse_dta+0x108>
   1bf88:	ldr	r3, [r5, #280]	; 0x118
   1bf8c:	add	fp, sp, #120	; 0x78
   1bf90:	mov	r0, fp
   1bf94:	ldr	r9, [r3, #12]
   1bf98:	ldr	r2, [r3, #20]
   1bf9c:	mov	r1, #10
   1bfa0:	blx	r9
   1bfa4:	cmp	r0, #10
   1bfa8:	beq	1c008 <readstat_parse_dta+0x3b0>
   1bfac:	mov	sl, #2
   1bfb0:	b	1bd60 <readstat_parse_dta+0x108>
   1bfb4:	ldr	r6, [r5, #264]	; 0x108
   1bfb8:	cmp	r6, #0
   1bfbc:	beq	1bf80 <readstat_parse_dta+0x328>
   1bfc0:	ldr	ip, [pc, #3060]	; 1cbbc <readstat_parse_dta+0xf64>
   1bfc4:	add	lr, r5, #288	; 0x120
   1bfc8:	add	ip, pc, ip
   1bfcc:	mov	sl, #15
   1bfd0:	ldm	ip!, {r0, r1, r2, r3}
   1bfd4:	str	r0, [r5, #288]	; 0x120
   1bfd8:	str	r1, [r5, #292]	; 0x124
   1bfdc:	str	r2, [r5, #296]	; 0x128
   1bfe0:	str	r3, [r5, #300]	; 0x12c
   1bfe4:	ldm	ip!, {r0, r1, r2, r3}
   1bfe8:	str	r0, [r5, #304]	; 0x130
   1bfec:	str	r1, [r5, #308]	; 0x134
   1bff0:	str	r2, [r5, #312]	; 0x138
   1bff4:	str	r3, [r5, #316]	; 0x13c
   1bff8:	mov	r0, lr
   1bffc:	ldr	r1, [r5, #276]	; 0x114
   1c000:	blx	r6
   1c004:	b	1bd60 <readstat_parse_dta+0x108>
   1c008:	ldrb	r9, [sp, #121]	; 0x79
   1c00c:	bl	3eb4 <machine_is_little_endian@plt>
   1c010:	sub	r9, r9, #2
   1c014:	clz	r9, r9
   1c018:	lsr	r9, r9, #5
   1c01c:	cmp	r9, r0
   1c020:	bne	1c190 <readstat_parse_dta+0x538>
   1c024:	ldrh	r3, [sp, #128]	; 0x80
   1c028:	ldrh	r0, [sp, #126]	; 0x7e
   1c02c:	orr	r0, r0, r3, lsl #16
   1c030:	ldrb	r3, [sp, #120]	; 0x78
   1c034:	ldrb	ip, [sp, #121]	; 0x79
   1c038:	ldr	r2, [r6, #40]	; 0x28
   1c03c:	str	r3, [sp, #4]
   1c040:	ldr	r3, [r6, #36]	; 0x24
   1c044:	strh	r0, [sp, #126]	; 0x7e
   1c048:	str	ip, [sp]
   1c04c:	str	r2, [sp, #12]
   1c050:	lsr	ip, r0, #16
   1c054:	str	r3, [sp, #8]
   1c058:	mov	r2, r0
   1c05c:	ldrh	r1, [sp, #124]	; 0x7c
   1c060:	mov	r3, #0
   1c064:	mov	r0, r5
   1c068:	strh	ip, [sp, #128]	; 0x80
   1c06c:	bl	41cc <dta_ctx_init@plt>
   1c070:	mov	sl, r0
   1c074:	cmp	sl, #0
   1c078:	bne	1bcbc <readstat_parse_dta+0x64>
   1c07c:	mov	lr, r6
   1c080:	add	ip, r5, #240	; 0xf0
   1c084:	ldm	lr!, {r0, r1, r2, r3}
   1c088:	str	r7, [r5, #276]	; 0x114
   1c08c:	str	r8, [r5, #272]	; 0x110
   1c090:	stmia	ip!, {r0, r1, r2, r3}
   1c094:	ldm	lr, {r0, r1, r2, r3}
   1c098:	ldr	lr, [r6, #48]	; 0x30
   1c09c:	cmp	lr, #0
   1c0a0:	stm	ip, {r0, r1, r2, r3}
   1c0a4:	ble	1c188 <readstat_parse_dta+0x530>
   1c0a8:	mov	r2, lr
   1c0ac:	asr	r3, lr, #31
   1c0b0:	strd	r2, [r5, #176]	; 0xb0
   1c0b4:	ldrd	r0, [r5, #152]	; 0x98
   1c0b8:	subs	r8, r0, r2
   1c0bc:	sbc	r9, r1, r3
   1c0c0:	cmp	r8, #0
   1c0c4:	sbcs	r3, r9, #0
   1c0c8:	blt	1c174 <readstat_parse_dta+0x51c>
   1c0cc:	ldr	r0, [r6, #44]	; 0x2c
   1c0d0:	strd	r8, [r5, #168]	; 0xa8
   1c0d4:	cmp	r0, #0
   1c0d8:	ble	1c0ec <readstat_parse_dta+0x494>
   1c0dc:	asr	r1, r0, #31
   1c0e0:	cmp	r0, r8
   1c0e4:	sbcs	r3, r1, r9
   1c0e8:	strdlt	r0, [r5, #168]	; 0xa8
   1c0ec:	mov	r0, r5
   1c0f0:	bl	1baf0 <dta_update_progress>
   1c0f4:	subs	sl, r0, #0
   1c0f8:	bne	1bd60 <readstat_parse_dta+0x108>
   1c0fc:	mov	r2, #44	; 0x2c
   1c100:	mov	r1, sl
   1c104:	mov	r0, fp
   1c108:	ldr	r8, [r5, #280]	; 0x118
   1c10c:	strb	sl, [sp, #59]	; 0x3b
   1c110:	strh	sl, [sp, #80]	; 0x50
   1c114:	bl	42a4 <memset@plt>
   1c118:	ldrb	r3, [r5, #192]	; 0xc0
   1c11c:	mvn	r2, #0
   1c120:	str	r2, [sp, #152]	; 0x98
   1c124:	tst	r3, #4
   1c128:	ldreq	r3, [r5, #4]
   1c12c:	strheq	r3, [sp, #80]	; 0x50
   1c130:	bne	1c1c4 <readstat_parse_dta+0x56c>
   1c134:	ldrh	r0, [sp, #80]	; 0x50
   1c138:	add	r0, r0, #1
   1c13c:	bl	422c <readstat_malloc@plt>
   1c140:	subs	r9, r0, #0
   1c144:	beq	1c1bc <readstat_parse_dta+0x564>
   1c148:	ldr	r3, [r8, #12]
   1c14c:	ldr	r2, [r8, #20]
   1c150:	ldrh	r1, [sp, #80]	; 0x50
   1c154:	blx	r3
   1c158:	ldrh	r3, [sp, #80]	; 0x50
   1c15c:	cmp	r0, r3
   1c160:	beq	1c3f8 <readstat_parse_dta+0x7a0>
   1c164:	mov	sl, #2
   1c168:	mov	r0, r9
   1c16c:	bl	3ec0 <free@plt>
   1c170:	b	1bd60 <readstat_parse_dta+0x108>
   1c174:	mov	r2, #0
   1c178:	mov	r3, #0
   1c17c:	strd	r0, [r5, #176]	; 0xb0
   1c180:	strd	r2, [r5, #168]	; 0xa8
   1c184:	b	1c0ec <readstat_parse_dta+0x494>
   1c188:	ldrd	r2, [r5, #176]	; 0xb0
   1c18c:	b	1c0b4 <readstat_parse_dta+0x45c>
   1c190:	ldrh	r0, [sp, #124]	; 0x7c
   1c194:	bl	3ea8 <byteswap2@plt>
   1c198:	ldrh	r2, [sp, #128]	; 0x80
   1c19c:	ldrh	r3, [sp, #126]	; 0x7e
   1c1a0:	strh	r0, [sp, #124]	; 0x7c
   1c1a4:	orr	r0, r3, r2, lsl #16
   1c1a8:	bl	3d94 <byteswap4@plt>
   1c1ac:	b	1c030 <readstat_parse_dta+0x3d8>
   1c1b0:	bl	422c <readstat_malloc@plt>
   1c1b4:	subs	r6, r0, #0
   1c1b8:	bne	1cf48 <readstat_parse_dta+0x12f0>
   1c1bc:	mov	sl, #3
   1c1c0:	b	1bd60 <readstat_parse_dta+0x108>
   1c1c4:	ldr	r1, [pc, #2548]	; 1cbc0 <readstat_parse_dta+0xf68>
   1c1c8:	mov	r0, r5
   1c1cc:	add	r1, pc, r1
   1c1d0:	bl	1bb70 <dta_read_tag>
   1c1d4:	subs	sl, r0, #0
   1c1d8:	bne	1bd60 <readstat_parse_dta+0x108>
   1c1dc:	ldr	sl, [r5, #8]
   1c1e0:	cmp	sl, #2
   1c1e4:	beq	1c574 <readstat_parse_dta+0x91c>
   1c1e8:	cmp	sl, #1
   1c1ec:	bne	1c134 <readstat_parse_dta+0x4dc>
   1c1f0:	ldr	r3, [r8, #12]
   1c1f4:	mov	r1, sl
   1c1f8:	ldr	r2, [r8, #20]
   1c1fc:	add	r0, sp, #64	; 0x40
   1c200:	blx	r3
   1c204:	cmp	r0, #1
   1c208:	ldrbeq	r3, [sp, #64]	; 0x40
   1c20c:	strheq	r3, [sp, #80]	; 0x50
   1c210:	bne	1bfac <readstat_parse_dta+0x354>
   1c214:	b	1c134 <readstat_parse_dta+0x4dc>
   1c218:	mov	r3, #1
   1c21c:	str	r3, [sp, #20]
   1c220:	ldr	r2, [sp, #24]
   1c224:	sub	r9, r9, #48	; 0x30
   1c228:	mov	r3, #100	; 0x64
   1c22c:	sub	r2, r2, #48	; 0x30
   1c230:	mla	r2, r9, r3, r2
   1c234:	ldr	r3, [sp, #16]
   1c238:	ldr	r0, [sp, #20]
   1c23c:	sub	r1, r3, #48	; 0x30
   1c240:	mov	r3, #10
   1c244:	sub	r0, r0, #2
   1c248:	mla	r3, r1, r3, r2
   1c24c:	clz	r0, r0
   1c250:	lsr	r0, r0, #5
   1c254:	mov	r9, r0
   1c258:	uxtb	r3, r3
   1c25c:	mov	sl, r3
   1c260:	str	r0, [sp, #28]
   1c264:	str	r3, [sp, #24]
   1c268:	bl	3eb4 <machine_is_little_endian@plt>
   1c26c:	cmp	sl, #118	; 0x76
   1c270:	str	r0, [sp, #16]
   1c274:	bls	1c34c <readstat_parse_dta+0x6f4>
   1c278:	ldr	r3, [pc, #2372]	; 1cbc4 <readstat_parse_dta+0xf6c>
   1c27c:	ldr	r1, [pc, #2372]	; 1cbc8 <readstat_parse_dta+0xf70>
   1c280:	add	r3, pc, r3
   1c284:	add	fp, sp, #120	; 0x78
   1c288:	str	r3, [sp]
   1c28c:	mov	r2, fp
   1c290:	mov	r3, #4
   1c294:	add	r1, pc, r1
   1c298:	mov	r0, r5
   1c29c:	bl	1bc00 <dta_read_chunk>
   1c2a0:	subs	sl, r0, #0
   1c2a4:	bne	1bcbc <readstat_parse_dta+0x64>
   1c2a8:	ldr	r2, [sp, #16]
   1c2ac:	cmp	r9, r2
   1c2b0:	ldreq	r9, [sp, #120]	; 0x78
   1c2b4:	beq	1c2c4 <readstat_parse_dta+0x66c>
   1c2b8:	ldr	r0, [sp, #120]	; 0x78
   1c2bc:	bl	3d94 <byteswap4@plt>
   1c2c0:	mov	r9, r0
   1c2c4:	ldr	r2, [pc, #2304]	; 1cbcc <readstat_parse_dta+0xf74>
   1c2c8:	ldr	r1, [pc, #2304]	; 1cbd0 <readstat_parse_dta+0xf78>
   1c2cc:	add	r2, pc, r2
   1c2d0:	str	r2, [sp]
   1c2d4:	mov	r3, #8
   1c2d8:	mov	r2, fp
   1c2dc:	add	r1, pc, r1
   1c2e0:	mov	r0, r5
   1c2e4:	bl	1bc00 <dta_read_chunk>
   1c2e8:	subs	sl, r0, #0
   1c2ec:	bne	1bcbc <readstat_parse_dta+0x64>
   1c2f0:	ldr	r3, [sp, #28]
   1c2f4:	ldr	r2, [sp, #16]
   1c2f8:	cmp	r3, r2
   1c2fc:	ldreq	r2, [sp, #120]	; 0x78
   1c300:	ldreq	r3, [sp, #124]	; 0x7c
   1c304:	beq	1c318 <readstat_parse_dta+0x6c0>
   1c308:	ldrd	r0, [sp, #120]	; 0x78
   1c30c:	bl	3d7c <byteswap8@plt>
   1c310:	mov	r2, r0
   1c314:	mov	r3, r1
   1c318:	ldr	r1, [sp, #24]
   1c31c:	ldr	ip, [r6, #40]	; 0x28
   1c320:	str	r1, [sp, #4]
   1c324:	ldr	r1, [sp, #20]
   1c328:	ldr	r0, [r6, #36]	; 0x24
   1c32c:	str	r1, [sp]
   1c330:	str	r0, [sp, #8]
   1c334:	mov	r1, r9
   1c338:	str	ip, [sp, #12]
   1c33c:	mov	r0, r5
   1c340:	bl	41cc <dta_ctx_init@plt>
   1c344:	mov	sl, r0
   1c348:	b	1c074 <readstat_parse_dta+0x41c>
   1c34c:	ldr	r3, [pc, #2176]	; 1cbd4 <readstat_parse_dta+0xf7c>
   1c350:	ldr	r1, [pc, #2176]	; 1cbd8 <readstat_parse_dta+0xf80>
   1c354:	add	r3, pc, r3
   1c358:	add	fp, sp, #120	; 0x78
   1c35c:	str	r3, [sp]
   1c360:	mov	r2, fp
   1c364:	mov	r3, #2
   1c368:	add	r1, pc, r1
   1c36c:	mov	r0, r5
   1c370:	bl	1bc00 <dta_read_chunk>
   1c374:	subs	sl, r0, #0
   1c378:	bne	1bcbc <readstat_parse_dta+0x64>
   1c37c:	ldr	r3, [sp, #28]
   1c380:	ldr	r2, [sp, #16]
   1c384:	cmp	r3, r2
   1c388:	ldrheq	r9, [sp, #120]	; 0x78
   1c38c:	beq	1c39c <readstat_parse_dta+0x744>
   1c390:	ldrh	r0, [sp, #120]	; 0x78
   1c394:	bl	3ea8 <byteswap2@plt>
   1c398:	mov	r9, r0
   1c39c:	ldr	r3, [sp, #24]
   1c3a0:	cmp	r3, #117	; 0x75
   1c3a4:	bhi	1c2c4 <readstat_parse_dta+0x66c>
   1c3a8:	ldr	r2, [pc, #2092]	; 1cbdc <readstat_parse_dta+0xf84>
   1c3ac:	ldr	r1, [pc, #2092]	; 1cbe0 <readstat_parse_dta+0xf88>
   1c3b0:	add	r2, pc, r2
   1c3b4:	str	r2, [sp]
   1c3b8:	mov	r3, #4
   1c3bc:	mov	r2, fp
   1c3c0:	add	r1, pc, r1
   1c3c4:	mov	r0, r5
   1c3c8:	bl	1bc00 <dta_read_chunk>
   1c3cc:	subs	sl, r0, #0
   1c3d0:	bne	1bcbc <readstat_parse_dta+0x64>
   1c3d4:	ldr	r3, [sp, #28]
   1c3d8:	ldr	r2, [sp, #16]
   1c3dc:	ldr	r0, [sp, #120]	; 0x78
   1c3e0:	cmp	r3, r2
   1c3e4:	beq	1c3ec <readstat_parse_dta+0x794>
   1c3e8:	bl	3d94 <byteswap4@plt>
   1c3ec:	mov	r2, r0
   1c3f0:	mov	r3, #0
   1c3f4:	b	1c318 <readstat_parse_dta+0x6c0>
   1c3f8:	ldrb	r2, [r5, #192]	; 0xc0
   1c3fc:	ands	r2, r2, #4
   1c400:	movne	r2, #0
   1c404:	strne	r2, [sp, #16]
   1c408:	bne	1c42c <readstat_parse_dta+0x7d4>
   1c40c:	add	r1, r9, r3
   1c410:	mov	r0, r9
   1c414:	ldrb	r1, [r1, #-1]
   1c418:	strb	r2, [r9, r3]
   1c41c:	str	r1, [sp, #16]
   1c420:	bl	41fc <strlen@plt>
   1c424:	uxth	r3, r0
   1c428:	strh	r0, [sp, #80]	; 0x50
   1c42c:	lsl	r3, r3, #2
   1c430:	add	r0, r3, #1
   1c434:	bl	422c <readstat_malloc@plt>
   1c438:	cmp	r0, #0
   1c43c:	str	r0, [r5]
   1c440:	beq	1c780 <readstat_parse_dta+0xb28>
   1c444:	ldrh	r3, [sp, #80]	; 0x50
   1c448:	ldr	r1, [r5, #236]	; 0xec
   1c44c:	mov	r2, r9
   1c450:	str	r1, [sp]
   1c454:	lsl	r1, r3, #2
   1c458:	add	r1, r1, #1
   1c45c:	bl	4238 <readstat_convert@plt>
   1c460:	subs	sl, r0, #0
   1c464:	bne	1c168 <readstat_parse_dta+0x510>
   1c468:	ldrb	r3, [r5, #192]	; 0xc0
   1c46c:	tst	r3, #4
   1c470:	ldreq	r3, [r5, #16]
   1c474:	strbeq	r3, [sp, #59]	; 0x3b
   1c478:	bne	1c730 <readstat_parse_dta+0xad8>
   1c47c:	ldrb	r0, [sp, #59]	; 0x3b
   1c480:	cmp	r0, #0
   1c484:	beq	1c6f4 <readstat_parse_dta+0xa9c>
   1c488:	bl	422c <readstat_malloc@plt>
   1c48c:	ldr	r3, [r8, #12]
   1c490:	ldr	r2, [r8, #20]
   1c494:	ldrb	r1, [sp, #59]	; 0x3b
   1c498:	mov	r6, r0
   1c49c:	blx	r3
   1c4a0:	ldrb	r3, [sp, #59]	; 0x3b
   1c4a4:	cmp	r0, r3
   1c4a8:	beq	1c668 <readstat_parse_dta+0xa10>
   1c4ac:	mov	r0, r9
   1c4b0:	bl	3ec0 <free@plt>
   1c4b4:	cmp	r6, #0
   1c4b8:	movne	sl, #2
   1c4bc:	beq	1bfac <readstat_parse_dta+0x354>
   1c4c0:	mov	r0, r6
   1c4c4:	bl	3ec0 <free@plt>
   1c4c8:	cmp	sl, #0
   1c4cc:	bne	1bd60 <readstat_parse_dta+0x108>
   1c4d0:	ldr	r1, [pc, #1804]	; 1cbe4 <readstat_parse_dta+0xf8c>
   1c4d4:	mov	r0, r5
   1c4d8:	add	r1, pc, r1
   1c4dc:	bl	1bb70 <dta_read_tag>
   1c4e0:	subs	sl, r0, #0
   1c4e4:	bne	1bd60 <readstat_parse_dta+0x108>
   1c4e8:	ldr	r8, [r5, #240]	; 0xf0
   1c4ec:	cmp	r8, #0
   1c4f0:	beq	1c5ac <readstat_parse_dta+0x954>
   1c4f4:	mov	r1, sl
   1c4f8:	mov	r2, #56	; 0x38
   1c4fc:	mov	r0, fp
   1c500:	bl	42a4 <memset@plt>
   1c504:	ldr	r2, [r5, #144]	; 0x90
   1c508:	ldr	r9, [r5, #148]	; 0x94
   1c50c:	ldrb	r0, [sp, #172]	; 0xac
   1c510:	mov	r1, r7
   1c514:	ldrd	r6, [r5, #168]	; 0xa8
   1c518:	ldr	r3, [r5, #12]
   1c51c:	ldr	lr, [r5, #232]	; 0xe8
   1c520:	ldr	ip, [r5]
   1c524:	strd	r6, [sp, #120]	; 0x78
   1c528:	str	r3, [sp, #136]	; 0x88
   1c52c:	str	r3, [sp, #140]	; 0x8c
   1c530:	bic	r0, r0, #1
   1c534:	asr	r3, r2, #31
   1c538:	mov	r6, r9
   1c53c:	asr	r7, r9, #31
   1c540:	cmp	r2, #117	; 0x75
   1c544:	orrgt	r0, r0, #1
   1c548:	strb	r0, [sp, #172]	; 0xac
   1c54c:	str	lr, [sp, #156]	; 0x9c
   1c550:	str	ip, [sp, #164]	; 0xa4
   1c554:	strd	r6, [sp, #128]	; 0x80
   1c558:	strd	r2, [sp, #144]	; 0x90
   1c55c:	mov	r0, fp
   1c560:	blx	r8
   1c564:	cmp	r0, #0
   1c568:	beq	1c5ac <readstat_parse_dta+0x954>
   1c56c:	mov	sl, #4
   1c570:	b	1bd60 <readstat_parse_dta+0x108>
   1c574:	ldr	r3, [r8, #12]
   1c578:	ldr	r2, [r8, #20]
   1c57c:	mov	r1, sl
   1c580:	add	r0, sp, #80	; 0x50
   1c584:	blx	r3
   1c588:	cmp	r0, #2
   1c58c:	bne	1bd60 <readstat_parse_dta+0x108>
   1c590:	ldrb	r3, [r5, #192]	; 0xc0
   1c594:	ldrh	r0, [sp, #80]	; 0x50
   1c598:	tst	r3, #1
   1c59c:	beq	1c5a4 <readstat_parse_dta+0x94c>
   1c5a0:	bl	3ea8 <byteswap2@plt>
   1c5a4:	strh	r0, [sp, #80]	; 0x50
   1c5a8:	b	1c134 <readstat_parse_dta+0x4dc>
   1c5ac:	ldrb	r3, [r5, #192]	; 0xc0
   1c5b0:	tst	r3, #4
   1c5b4:	bne	1cb00 <readstat_parse_dta+0xea8>
   1c5b8:	ldr	r2, [r5, #148]	; 0x94
   1c5bc:	ldr	r7, [r5, #24]
   1c5c0:	cmp	r2, #0
   1c5c4:	mul	r7, r7, r2
   1c5c8:	beq	1c7ac <readstat_parse_dta+0xb54>
   1c5cc:	mov	r0, r7
   1c5d0:	bl	422c <readstat_malloc@plt>
   1c5d4:	subs	r6, r0, #0
   1c5d8:	beq	1c1bc <readstat_parse_dta+0x564>
   1c5dc:	ldr	r2, [pc, #1540]	; 1cbe8 <readstat_parse_dta+0xf90>
   1c5e0:	ldr	r1, [pc, #1540]	; 1cbec <readstat_parse_dta+0xf94>
   1c5e4:	add	r2, pc, r2
   1c5e8:	str	r2, [sp]
   1c5ec:	mov	r3, r7
   1c5f0:	mov	r2, r6
   1c5f4:	add	r1, pc, r1
   1c5f8:	mov	r0, r5
   1c5fc:	bl	1bc00 <dta_read_chunk>
   1c600:	subs	sl, r0, #0
   1c604:	beq	1c7d8 <readstat_parse_dta+0xb80>
   1c608:	mov	r0, r6
   1c60c:	bl	3ec0 <free@plt>
   1c610:	cmp	sl, #0
   1c614:	moveq	r6, sl
   1c618:	moveq	r7, r6
   1c61c:	bne	1bd60 <readstat_parse_dta+0x108>
   1c620:	ldr	r0, [r5, #148]	; 0x94
   1c624:	lsl	ip, r6, #1
   1c628:	cmp	r6, r0
   1c62c:	mov	r3, r7
   1c630:	mov	r2, fp
   1c634:	mov	r1, r5
   1c638:	add	r6, r6, #1
   1c63c:	bge	1c790 <readstat_parse_dta+0xb38>
   1c640:	ldr	r0, [r5, #28]
   1c644:	ldrh	r0, [r0, ip]
   1c648:	bl	41e4 <dta_type_info@plt>
   1c64c:	cmp	r0, #0
   1c650:	bne	1c788 <readstat_parse_dta+0xb30>
   1c654:	ldr	r3, [r5, #160]	; 0xa0
   1c658:	ldr	r2, [sp, #120]	; 0x78
   1c65c:	add	r3, r3, r2
   1c660:	str	r3, [r5, #160]	; 0xa0
   1c664:	b	1c620 <readstat_parse_dta+0x9c8>
   1c668:	ldrb	r3, [r5, #192]	; 0xc0
   1c66c:	tst	r3, #4
   1c670:	subeq	r0, r0, #1
   1c674:	strbeq	r0, [sp, #59]	; 0x3b
   1c678:	ldrb	r3, [r6]
   1c67c:	cmp	r3, #0
   1c680:	beq	1c6f8 <readstat_parse_dta+0xaa0>
   1c684:	ldrb	r1, [sp, #59]	; 0x3b
   1c688:	ldr	r2, [sp, #16]
   1c68c:	add	r3, r6, r1
   1c690:	cmp	r2, #0
   1c694:	ldrb	r0, [r3, #-1]
   1c698:	clz	r3, r0
   1c69c:	lsr	r3, r3, #5
   1c6a0:	moveq	r3, #0
   1c6a4:	cmp	r3, #0
   1c6a8:	beq	1c6c8 <readstat_parse_dta+0xa70>
   1c6ac:	sub	r2, r1, #1
   1c6b0:	add	r0, r6, #1
   1c6b4:	mov	r1, r6
   1c6b8:	bl	3e9c <memmove@plt>
   1c6bc:	ldrb	r3, [sp, #16]
   1c6c0:	strb	r3, [r6]
   1c6c4:	ldrb	r1, [sp, #59]	; 0x3b
   1c6c8:	ldr	r3, [r5, #276]	; 0x114
   1c6cc:	mov	r2, fp
   1c6d0:	str	r3, [sp]
   1c6d4:	mov	r0, r6
   1c6d8:	ldr	r3, [r5, #264]	; 0x108
   1c6dc:	bl	42ec <dta_parse_timestamp@plt>
   1c6e0:	subs	sl, r0, #0
   1c6e4:	beq	1c720 <readstat_parse_dta+0xac8>
   1c6e8:	mov	r0, r9
   1c6ec:	bl	3ec0 <free@plt>
   1c6f0:	b	1c4c0 <readstat_parse_dta+0x868>
   1c6f4:	mov	r6, r0
   1c6f8:	ldr	r1, [pc, #1264]	; 1cbf0 <readstat_parse_dta+0xf98>
   1c6fc:	mov	r0, r5
   1c700:	add	r1, pc, r1
   1c704:	bl	1bb70 <dta_read_tag>
   1c708:	mov	sl, r0
   1c70c:	mov	r0, r9
   1c710:	bl	3ec0 <free@plt>
   1c714:	cmp	r6, #0
   1c718:	bne	1c4c0 <readstat_parse_dta+0x868>
   1c71c:	b	1c4c8 <readstat_parse_dta+0x870>
   1c720:	mov	r0, fp
   1c724:	bl	3e54 <mktime@plt>
   1c728:	str	r0, [r5, #12]
   1c72c:	b	1c6f8 <readstat_parse_dta+0xaa0>
   1c730:	ldr	r1, [pc, #1212]	; 1cbf4 <readstat_parse_dta+0xf9c>
   1c734:	mov	r0, r5
   1c738:	add	r1, pc, r1
   1c73c:	bl	1bb70 <dta_read_tag>
   1c740:	subs	sl, r0, #0
   1c744:	bne	1c168 <readstat_parse_dta+0x510>
   1c748:	ldr	r1, [pc, #1192]	; 1cbf8 <readstat_parse_dta+0xfa0>
   1c74c:	mov	r0, r5
   1c750:	add	r1, pc, r1
   1c754:	bl	1bb70 <dta_read_tag>
   1c758:	subs	sl, r0, #0
   1c75c:	bne	1c168 <readstat_parse_dta+0x510>
   1c760:	ldr	r3, [r8, #12]
   1c764:	ldr	r2, [r8, #20]
   1c768:	mov	r1, #1
   1c76c:	add	r0, sp, #59	; 0x3b
   1c770:	blx	r3
   1c774:	cmp	r0, #1
   1c778:	bne	1c164 <readstat_parse_dta+0x50c>
   1c77c:	b	1c47c <readstat_parse_dta+0x824>
   1c780:	mov	sl, #3
   1c784:	b	1c168 <readstat_parse_dta+0x510>
   1c788:	mov	sl, r0
   1c78c:	b	1bd60 <readstat_parse_dta+0x108>
   1c790:	cmp	r0, #0
   1c794:	ble	1c82c <readstat_parse_dta+0xbd4>
   1c798:	ldr	r3, [r5, #160]	; 0xa0
   1c79c:	cmp	r3, #0
   1c7a0:	bne	1c83c <readstat_parse_dta+0xbe4>
   1c7a4:	mov	sl, #5
   1c7a8:	b	1bd60 <readstat_parse_dta+0x108>
   1c7ac:	ldr	r3, [pc, #1096]	; 1cbfc <readstat_parse_dta+0xfa4>
   1c7b0:	ldr	r1, [pc, #1096]	; 1cc00 <readstat_parse_dta+0xfa8>
   1c7b4:	add	r3, pc, r3
   1c7b8:	str	r3, [sp]
   1c7bc:	add	r1, pc, r1
   1c7c0:	mov	r3, r7
   1c7c4:	mov	r0, r5
   1c7c8:	bl	1bc00 <dta_read_chunk>
   1c7cc:	subs	sl, r0, #0
   1c7d0:	moveq	r6, sl
   1c7d4:	bne	1bd60 <readstat_parse_dta+0x108>
   1c7d8:	ldr	r3, [r5, #24]
   1c7dc:	cmp	r3, #1
   1c7e0:	moveq	r3, #0
   1c7e4:	ldreq	r2, [r5, #148]	; 0x94
   1c7e8:	beq	1cae0 <readstat_parse_dta+0xe88>
   1c7ec:	cmp	r3, #2
   1c7f0:	beq	1ca98 <readstat_parse_dta+0xe40>
   1c7f4:	ldr	r3, [pc, #1032]	; 1cc04 <readstat_parse_dta+0xfac>
   1c7f8:	ldr	r1, [pc, #1032]	; 1cc08 <readstat_parse_dta+0xfb0>
   1c7fc:	add	r3, pc, r3
   1c800:	str	r3, [sp]
   1c804:	add	r1, pc, r1
   1c808:	mov	r0, r5
   1c80c:	ldr	r3, [r5, #40]	; 0x28
   1c810:	ldr	r2, [r5, #36]	; 0x24
   1c814:	bl	1bc00 <dta_read_chunk>
   1c818:	subs	sl, r0, #0
   1c81c:	beq	1c9e0 <readstat_parse_dta+0xd88>
   1c820:	cmp	r6, #0
   1c824:	bne	1c608 <readstat_parse_dta+0x9b0>
   1c828:	b	1bd60 <readstat_parse_dta+0x108>
   1c82c:	ldrd	r2, [r5, #152]	; 0x98
   1c830:	cmp	r2, #1
   1c834:	sbcs	r3, r3, #0
   1c838:	bge	1c798 <readstat_parse_dta+0xb40>
   1c83c:	ldr	r3, [r5, #248]	; 0xf8
   1c840:	cmp	r3, #0
   1c844:	beq	1cc90 <readstat_parse_dta+0x1038>
   1c848:	mov	r3, #0
   1c84c:	str	r3, [sp, #16]
   1c850:	mov	r7, r3
   1c854:	add	r3, sp, #80	; 0x50
   1c858:	str	r3, [sp, #20]
   1c85c:	add	r3, sp, #64	; 0x40
   1c860:	str	r3, [sp, #24]
   1c864:	ldr	r3, [pc, #928]	; 1cc0c <readstat_parse_dta+0xfb4>
   1c868:	add	r3, pc, r3
   1c86c:	str	r3, [sp, #28]
   1c870:	ldr	r3, [pc, #920]	; 1cc10 <readstat_parse_dta+0xfb8>
   1c874:	add	r3, pc, r3
   1c878:	str	r3, [sp, #32]
   1c87c:	cmp	r7, r0
   1c880:	bge	1cc90 <readstat_parse_dta+0x1038>
   1c884:	ldr	r1, [r5, #28]
   1c888:	lsl	r2, r7, #1
   1c88c:	ldr	r3, [sp, #20]
   1c890:	ldrh	r0, [r1, r2]
   1c894:	ldr	r2, [sp, #24]
   1c898:	mov	r1, r5
   1c89c:	bl	41e4 <dta_type_info@plt>
   1c8a0:	cmp	r0, #0
   1c8a4:	bne	1c788 <readstat_parse_dta+0xb30>
   1c8a8:	ldr	r9, [sp, #80]	; 0x50
   1c8ac:	cmp	r9, #0
   1c8b0:	bne	1c9c4 <readstat_parse_dta+0xd6c>
   1c8b4:	ldr	r8, [sp, #64]	; 0x40
   1c8b8:	add	r8, r8, #1
   1c8bc:	str	r8, [sp, #64]	; 0x40
   1c8c0:	ldr	r1, [pc, #844]	; 1cc14 <readstat_parse_dta+0xfbc>
   1c8c4:	mov	r0, #1
   1c8c8:	ldr	sl, [r5, #228]	; 0xe4
   1c8cc:	bl	3d58 <calloc@plt>
   1c8d0:	ldr	r3, [r5, #76]	; 0x4c
   1c8d4:	ldr	r2, [r5, #36]	; 0x24
   1c8d8:	ldr	r1, [r5, #236]	; 0xec
   1c8dc:	ldr	ip, [sp, #16]
   1c8e0:	str	r1, [sp]
   1c8e4:	mla	r2, r3, r7, r2
   1c8e8:	mov	r1, #300	; 0x12c
   1c8ec:	mov	r6, r0
   1c8f0:	add	r0, r0, #8
   1c8f4:	str	r8, [r6, #1596]	; 0x63c
   1c8f8:	str	r9, [r6]
   1c8fc:	str	r7, [r6, #4]
   1c900:	str	ip, [r6, #2148]	; 0x864
   1c904:	bl	4238 <readstat_convert@plt>
   1c908:	ldr	r3, [r5, #88]	; 0x58
   1c90c:	ldr	r2, [r5, #68]	; 0x44
   1c910:	lsl	r8, r7, #2
   1c914:	mul	r1, r3, r7
   1c918:	ldrb	r0, [r2, r1]
   1c91c:	add	r2, r2, r1
   1c920:	cmp	r0, #0
   1c924:	beq	1c93c <readstat_parse_dta+0xce4>
   1c928:	ldr	r1, [r5, #236]	; 0xec
   1c92c:	add	r0, r6, #564	; 0x234
   1c930:	str	r1, [sp]
   1c934:	mov	r1, #1024	; 0x400
   1c938:	bl	4238 <readstat_convert@plt>
   1c93c:	ldr	r3, [r5, #80]	; 0x50
   1c940:	ldr	r0, [r5, #52]	; 0x34
   1c944:	mul	r1, r3, r7
   1c948:	add	r2, r0, r1
   1c94c:	ldrb	r1, [r0, r1]
   1c950:	cmp	r1, #0
   1c954:	bne	1ce40 <readstat_parse_dta+0x11e8>
   1c958:	ldr	r0, [r5, #84]	; 0x54
   1c95c:	ldr	r2, [r5, #60]	; 0x3c
   1c960:	str	r6, [sl, r8]
   1c964:	mul	r0, r0, r7
   1c968:	ldr	r1, [r5, #228]	; 0xe4
   1c96c:	ldr	r3, [r5, #276]	; 0x114
   1c970:	ldrb	ip, [r2, r0]
   1c974:	ldr	r1, [r1, r8]
   1c978:	ldr	r6, [r5, #248]	; 0xf8
   1c97c:	cmp	ip, #0
   1c980:	addne	r2, r2, r0
   1c984:	moveq	r2, #0
   1c988:	mov	r0, r7
   1c98c:	blx	r6
   1c990:	cmp	r0, #1
   1c994:	beq	1c56c <readstat_parse_dta+0x914>
   1c998:	cmp	r0, #2
   1c99c:	moveq	r2, #1
   1c9a0:	ldreq	r3, [r5, #228]	; 0xe4
   1c9a4:	ldrne	r3, [sp, #16]
   1c9a8:	add	r7, r7, #1
   1c9ac:	ldreq	r3, [r3, r8]
   1c9b0:	addne	r3, r3, #1
   1c9b4:	strne	r3, [sp, #16]
   1c9b8:	streq	r2, [r3, #2144]	; 0x860
   1c9bc:	ldr	r0, [r5, #148]	; 0x94
   1c9c0:	b	1c87c <readstat_parse_dta+0xc24>
   1c9c4:	cmp	r9, #6
   1c9c8:	moveq	r9, r0
   1c9cc:	ldrne	r8, [sp, #64]	; 0x40
   1c9d0:	moveq	r8, r9
   1c9d4:	streq	r0, [sp, #80]	; 0x50
   1c9d8:	streq	r0, [sp, #64]	; 0x40
   1c9dc:	b	1c8c0 <readstat_parse_dta+0xc68>
   1c9e0:	ldr	r3, [pc, #560]	; 1cc18 <readstat_parse_dta+0xfc0>
   1c9e4:	ldr	r1, [pc, #560]	; 1cc1c <readstat_parse_dta+0xfc4>
   1c9e8:	add	r3, pc, r3
   1c9ec:	str	r3, [sp]
   1c9f0:	add	r1, pc, r1
   1c9f4:	mov	r0, r5
   1c9f8:	ldr	r3, [r5, #48]	; 0x30
   1c9fc:	ldr	r2, [r5, #44]	; 0x2c
   1ca00:	bl	1bc00 <dta_read_chunk>
   1ca04:	subs	sl, r0, #0
   1ca08:	bne	1c820 <readstat_parse_dta+0xbc8>
   1ca0c:	ldr	r3, [pc, #524]	; 1cc20 <readstat_parse_dta+0xfc8>
   1ca10:	ldr	r1, [pc, #524]	; 1cc24 <readstat_parse_dta+0xfcc>
   1ca14:	add	r3, pc, r3
   1ca18:	str	r3, [sp]
   1ca1c:	add	r1, pc, r1
   1ca20:	mov	r0, r5
   1ca24:	ldr	r3, [r5, #56]	; 0x38
   1ca28:	ldr	r2, [r5, #52]	; 0x34
   1ca2c:	bl	1bc00 <dta_read_chunk>
   1ca30:	subs	sl, r0, #0
   1ca34:	bne	1c820 <readstat_parse_dta+0xbc8>
   1ca38:	ldr	r3, [pc, #488]	; 1cc28 <readstat_parse_dta+0xfd0>
   1ca3c:	ldr	r1, [pc, #488]	; 1cc2c <readstat_parse_dta+0xfd4>
   1ca40:	add	r3, pc, r3
   1ca44:	str	r3, [sp]
   1ca48:	add	r1, pc, r1
   1ca4c:	mov	r0, r5
   1ca50:	ldr	r3, [r5, #64]	; 0x40
   1ca54:	ldr	r2, [r5, #60]	; 0x3c
   1ca58:	bl	1bc00 <dta_read_chunk>
   1ca5c:	subs	sl, r0, #0
   1ca60:	bne	1c820 <readstat_parse_dta+0xbc8>
   1ca64:	ldr	r3, [pc, #452]	; 1cc30 <readstat_parse_dta+0xfd8>
   1ca68:	ldr	r1, [pc, #452]	; 1cc34 <readstat_parse_dta+0xfdc>
   1ca6c:	add	r3, pc, r3
   1ca70:	str	r3, [sp]
   1ca74:	add	r1, pc, r1
   1ca78:	mov	r0, r5
   1ca7c:	ldr	r3, [r5, #72]	; 0x48
   1ca80:	ldr	r2, [r5, #68]	; 0x44
   1ca84:	bl	1bc00 <dta_read_chunk>
   1ca88:	cmp	r6, #0
   1ca8c:	mov	sl, r0
   1ca90:	bne	1c608 <readstat_parse_dta+0x9b0>
   1ca94:	b	1c610 <readstat_parse_dta+0x9b8>
   1ca98:	mov	r2, r7
   1ca9c:	mov	r1, r6
   1caa0:	ldr	r0, [r5, #28]
   1caa4:	bl	3f20 <memcpy@plt>
   1caa8:	ldrb	r3, [r5, #192]	; 0xc0
   1caac:	tst	r3, #1
   1cab0:	movne	r7, #0
   1cab4:	beq	1c7f4 <readstat_parse_dta+0xb9c>
   1cab8:	ldr	r3, [r5, #148]	; 0x94
   1cabc:	lsl	r8, r7, #1
   1cac0:	cmp	r7, r3
   1cac4:	add	r7, r7, #1
   1cac8:	bge	1c7f4 <readstat_parse_dta+0xb9c>
   1cacc:	ldr	r9, [r5, #28]
   1cad0:	ldrh	r0, [r9, r8]
   1cad4:	bl	3ea8 <byteswap2@plt>
   1cad8:	strh	r0, [r9, r8]
   1cadc:	b	1cab8 <readstat_parse_dta+0xe60>
   1cae0:	cmp	r3, r2
   1cae4:	lsl	r1, r3, #1
   1cae8:	bge	1c7f4 <readstat_parse_dta+0xb9c>
   1caec:	ldrb	ip, [r6, r3]
   1caf0:	ldr	r0, [r5, #28]
   1caf4:	add	r3, r3, #1
   1caf8:	strh	ip, [r0, r1]
   1cafc:	b	1cae0 <readstat_parse_dta+0xe88>
   1cb00:	ldr	r2, [pc, #304]	; 1cc38 <readstat_parse_dta+0xfe0>
   1cb04:	ldr	r1, [pc, #304]	; 1cc3c <readstat_parse_dta+0xfe4>
   1cb08:	add	r2, pc, r2
   1cb0c:	str	r2, [sp]
   1cb10:	mov	r3, #112	; 0x70
   1cb14:	mov	r2, fp
   1cb18:	add	r1, pc, r1
   1cb1c:	mov	r0, r5
   1cb20:	bl	1bc00 <dta_read_chunk>
   1cb24:	cmp	r0, #0
   1cb28:	bne	1cb78 <readstat_parse_dta+0xf20>
   1cb2c:	ldrb	r3, [r5, #192]	; 0xc0
   1cb30:	ldrd	r0, [sp, #192]	; 0xc0
   1cb34:	tst	r3, #1
   1cb38:	beq	1cb44 <readstat_parse_dta+0xeec>
   1cb3c:	bl	3d7c <byteswap8@plt>
   1cb40:	ldrb	r3, [r5, #192]	; 0xc0
   1cb44:	strd	r0, [r5, #120]	; 0x78
   1cb48:	tst	r3, #1
   1cb4c:	ldrd	r0, [sp, #200]	; 0xc8
   1cb50:	beq	1cb5c <readstat_parse_dta+0xf04>
   1cb54:	bl	3d7c <byteswap8@plt>
   1cb58:	ldrb	r3, [r5, #192]	; 0xc0
   1cb5c:	strd	r0, [r5, #128]	; 0x80
   1cb60:	tst	r3, #1
   1cb64:	ldrd	r0, [sp, #208]	; 0xd0
   1cb68:	beq	1cb70 <readstat_parse_dta+0xf18>
   1cb6c:	bl	3d7c <byteswap8@plt>
   1cb70:	strd	r0, [r5, #136]	; 0x88
   1cb74:	b	1c5b8 <readstat_parse_dta+0x960>
   1cb78:	ldr	r3, [r4, #4]
   1cb7c:	ldr	r0, [r4, #20]
   1cb80:	blx	r3
   1cb84:	mov	sl, #2
   1cb88:	b	1bcd0 <readstat_parse_dta+0x78>
   1cb8c:	.word	0x0000a744
   1cb90:	.word	0x0000a70c
   1cb94:	.word	0x0000a6fc
   1cb98:	.word	0x0000a6f0
   1cb9c:	.word	0x0000aa74
   1cba0:	.word	0x0000a6d4
   1cba4:	.word	0x0000a6c4
   1cba8:	.word	0x0000a6a4
   1cbac:	.word	0x0000a69c
   1cbb0:	.word	0x0000a680
   1cbb4:	.word	0x0000a9e0
   1cbb8:	.word	0x0000a6a0
   1cbbc:	.word	0x0000a4bc
   1cbc0:	.word	0x0000a340
   1cbc4:	.word	0x0000a278
   1cbc8:	.word	0x0000a260
   1cbcc:	.word	0x0000a238
   1cbd0:	.word	0x0000a224
   1cbd4:	.word	0x0000a1a4
   1cbd8:	.word	0x0000a18c
   1cbdc:	.word	0x0000a154
   1cbe0:	.word	0x0000a140
   1cbe4:	.word	0x0000a064
   1cbe8:	.word	0x0000a150
   1cbec:	.word	0x0000a12c
   1cbf0:	.word	0x00009e2c
   1cbf4:	.word	0x00009ddc
   1cbf8:	.word	0x00009dd0
   1cbfc:	.word	0x00009f80
   1cc00:	.word	0x00009f64
   1cc04:	.word	0x00009d68
   1cc08:	.word	0x00009d54
   1cc0c:	.word	0x00009d8c
   1cc10:	.word	0x00009d88
   1cc14:	.word	0x00000868
   1cc18:	.word	0x00009b94
   1cc1c:	.word	0x00009b80
   1cc20:	.word	0x00009b80
   1cc24:	.word	0x00009b6c
   1cc28:	.word	0x00009b74
   1cc2c:	.word	0x00009b58
   1cc30:	.word	0x00009b74
   1cc34:	.word	0x00009b58
   1cc38:	.word	0x00009a48
   1cc3c:	.word	0x00009a30
   1cc40:	.word	0x00009974
   1cc44:	.word	0x00009970
   1cc48:	.word	0x00009968
   1cc4c:	.word	0x00009964
   1cc50:	.word	0x00009960
   1cc54:	.word	0x0000995c
   1cc58:	.word	0x00009744
   1cc5c:	.word	0x000097a4
   1cc60:	.word	0x0000957c
   1cc64:	.word	0x00009534
   1cc68:	.word	0x00009464
   1cc6c:	.word	0x000094e4
   1cc70:	.word	0x000094d0
   1cc74:	.word	0x000094c8
   1cc78:	.word	0x00007d01
   1cc7c:	.word	0x0001f401
   1cc80:	.word	0x0000907c
   1cc84:	.word	0x00009058
   1cc88:	.word	0x00008e4c
   1cc8c:	.word	0x00008e38
   1cc90:	ldr	r3, [r5, #92]	; 0x5c
   1cc94:	ldr	r6, [r5, #280]	; 0x118
   1cc98:	cmp	r3, #0
   1cc9c:	beq	1beb8 <readstat_parse_dta+0x260>
   1cca0:	ldrb	r3, [r5, #192]	; 0xc0
   1cca4:	tst	r3, #4
   1cca8:	beq	1ccb8 <readstat_parse_dta+0x1060>
   1ccac:	ldr	r1, [r5, #244]	; 0xf4
   1ccb0:	cmp	r1, #0
   1ccb4:	beq	1ce88 <readstat_parse_dta+0x1230>
   1ccb8:	ldr	r1, [pc, #-128]	; 1cc40 <readstat_parse_dta+0xfe8>
   1ccbc:	mov	r0, r5
   1ccc0:	add	r1, pc, r1
   1ccc4:	bl	1bb70 <dta_read_tag>
   1ccc8:	subs	sl, r0, #0
   1cccc:	bne	1bd60 <readstat_parse_dta+0x108>
   1ccd0:	ldr	r3, [pc, #-148]	; 1cc44 <readstat_parse_dta+0xfec>
   1ccd4:	mov	r8, sl
   1ccd8:	add	r3, pc, r3
   1ccdc:	str	r3, [sp, #16]
   1cce0:	ldr	r3, [pc, #-160]	; 1cc48 <readstat_parse_dta+0xff0>
   1cce4:	add	r9, sp, #80	; 0x50
   1cce8:	add	r3, pc, r3
   1ccec:	str	r3, [sp, #20]
   1ccf0:	ldr	r3, [pc, #-172]	; 1cc4c <readstat_parse_dta+0xff4>
   1ccf4:	add	r3, pc, r3
   1ccf8:	str	r3, [sp, #24]
   1ccfc:	ldr	r3, [pc, #-180]	; 1cc50 <readstat_parse_dta+0xff8>
   1cd00:	add	r3, pc, r3
   1cd04:	str	r3, [sp, #28]
   1cd08:	ldr	r3, [pc, #-188]	; 1cc54 <readstat_parse_dta+0xffc>
   1cd0c:	add	r3, pc, r3
   1cd10:	str	r3, [sp, #32]
   1cd14:	ldrb	r3, [r5, #192]	; 0xc0
   1cd18:	ldr	r2, [r6, #20]
   1cd1c:	tst	r3, #4
   1cd20:	ldr	r3, [r6, #12]
   1cd24:	beq	1ce24 <readstat_parse_dta+0x11cc>
   1cd28:	mov	r1, #4
   1cd2c:	mov	r0, fp
   1cd30:	blx	r3
   1cd34:	cmp	r0, #4
   1cd38:	mov	r7, r0
   1cd3c:	bne	1ce38 <readstat_parse_dta+0x11e0>
   1cd40:	mov	r2, r0
   1cd44:	ldr	r1, [sp, #16]
   1cd48:	mov	r0, fp
   1cd4c:	bl	3fa4 <memcmp@plt>
   1cd50:	cmp	r0, #0
   1cd54:	beq	1be90 <readstat_parse_dta+0x238>
   1cd58:	mov	r2, r7
   1cd5c:	ldr	r1, [sp, #20]
   1cd60:	mov	r0, fp
   1cd64:	bl	3fa4 <memcmp@plt>
   1cd68:	cmp	r0, #0
   1cd6c:	bne	1ce1c <readstat_parse_dta+0x11c4>
   1cd70:	mov	r3, #1
   1cd74:	strb	r3, [sp, #80]	; 0x50
   1cd78:	ldr	sl, [r5, #92]	; 0x5c
   1cd7c:	ldr	r3, [r6, #12]
   1cd80:	cmp	sl, #2
   1cd84:	ldr	r2, [r6, #20]
   1cd88:	beq	1cde8 <readstat_parse_dta+0x1190>
   1cd8c:	mov	r1, #4
   1cd90:	mov	r0, fp
   1cd94:	blx	r3
   1cd98:	cmp	r0, #4
   1cd9c:	bne	1ce38 <readstat_parse_dta+0x11e0>
   1cda0:	ldrb	r3, [r5, #192]	; 0xc0
   1cda4:	tst	r3, #1
   1cda8:	ldreq	r7, [sp, #120]	; 0x78
   1cdac:	beq	1cdbc <readstat_parse_dta+0x1164>
   1cdb0:	ldr	r0, [sp, #120]	; 0x78
   1cdb4:	bl	3d94 <byteswap4@plt>
   1cdb8:	mov	r7, r0
   1cdbc:	ldrb	r3, [sp, #80]	; 0x50
   1cdc0:	cmp	r3, #0
   1cdc4:	bne	1cfd8 <readstat_parse_dta+0x1380>
   1cdc8:	cmp	r7, #0
   1cdcc:	beq	1bea8 <readstat_parse_dta+0x250>
   1cdd0:	mov	sl, #32
   1cdd4:	cmp	r8, #0
   1cdd8:	beq	1bd60 <readstat_parse_dta+0x108>
   1cddc:	mov	r0, r8
   1cde0:	bl	3ec0 <free@plt>
   1cde4:	b	1bd60 <readstat_parse_dta+0x108>
   1cde8:	mov	r1, sl
   1cdec:	mov	r0, fp
   1cdf0:	blx	r3
   1cdf4:	cmp	r0, #2
   1cdf8:	bne	1cdd4 <readstat_parse_dta+0x117c>
   1cdfc:	ldrb	r3, [r5, #192]	; 0xc0
   1ce00:	tst	r3, #1
   1ce04:	ldrheq	r7, [sp, #120]	; 0x78
   1ce08:	beq	1cdbc <readstat_parse_dta+0x1164>
   1ce0c:	ldrh	r0, [sp, #120]	; 0x78
   1ce10:	bl	3ea8 <byteswap2@plt>
   1ce14:	mov	r7, r0
   1ce18:	b	1cdbc <readstat_parse_dta+0x1164>
   1ce1c:	mov	sl, #5
   1ce20:	b	1cdd4 <readstat_parse_dta+0x117c>
   1ce24:	mov	r1, #1
   1ce28:	mov	r0, r9
   1ce2c:	blx	r3
   1ce30:	cmp	r0, #1
   1ce34:	beq	1cd78 <readstat_parse_dta+0x1120>
   1ce38:	mov	sl, #2
   1ce3c:	b	1cdd4 <readstat_parse_dta+0x117c>
   1ce40:	ldr	r1, [r5, #236]	; 0xec
   1ce44:	add	r9, r6, #308	; 0x134
   1ce48:	str	r1, [sp]
   1ce4c:	mov	r0, r9
   1ce50:	mov	r1, #256	; 0x100
   1ce54:	bl	4238 <readstat_convert@plt>
   1ce58:	ldrb	r3, [r6, #308]	; 0x134
   1ce5c:	cmp	r3, #37	; 0x25
   1ce60:	beq	1cee4 <readstat_parse_dta+0x128c>
   1ce64:	mov	r2, fp
   1ce68:	ldr	r1, [sp, #28]
   1ce6c:	mov	r0, r9
   1ce70:	bl	428c <__isoc99_sscanf@plt>
   1ce74:	cmp	r0, #1
   1ce78:	bne	1cec8 <readstat_parse_dta+0x1270>
   1ce7c:	ldr	r3, [sp, #120]	; 0x78
   1ce80:	str	r3, [r6, #2136]	; 0x858
   1ce84:	b	1c958 <readstat_parse_dta+0xd00>
   1ce88:	ldr	r3, [r6, #8]
   1ce8c:	ldr	r2, [r6, #20]
   1ce90:	ldr	r0, [r5, #120]	; 0x78
   1ce94:	blx	r3
   1ce98:	cmn	r0, #1
   1ce9c:	bne	1beb8 <readstat_parse_dta+0x260>
   1cea0:	ldr	r3, [r5, #264]	; 0x108
   1cea4:	cmp	r3, #0
   1cea8:	beq	1bf80 <readstat_parse_dta+0x328>
   1ceac:	ldrd	r2, [r5, #120]	; 0x78
   1ceb0:	add	r6, r5, #288	; 0x120
   1ceb4:	mov	r0, r6
   1ceb8:	strd	r2, [sp]
   1cebc:	ldr	r2, [pc, #-620]	; 1cc58 <readstat_parse_dta+0x1000>
   1cec0:	add	r2, pc, r2
   1cec4:	b	1bf68 <readstat_parse_dta+0x310>
   1cec8:	mov	r0, r9
   1cecc:	mov	r2, fp
   1ced0:	ldr	r1, [sp, #32]
   1ced4:	bl	428c <__isoc99_sscanf@plt>
   1ced8:	cmp	r0, #1
   1cedc:	bne	1c958 <readstat_parse_dta+0xd00>
   1cee0:	b	1ce7c <readstat_parse_dta+0x1224>
   1cee4:	ldrb	r3, [r6, #309]	; 0x135
   1cee8:	cmp	r3, #45	; 0x2d
   1ceec:	moveq	r3, #1
   1cef0:	streq	r3, [r6, #2132]	; 0x854
   1cef4:	beq	1ce64 <readstat_parse_dta+0x120c>
   1cef8:	cmp	r3, #126	; 0x7e
   1cefc:	moveq	r3, #2
   1cf00:	movne	r3, #3
   1cf04:	str	r3, [r6, #2132]	; 0x854
   1cf08:	b	1ce64 <readstat_parse_dta+0x120c>
   1cf0c:	ldr	r1, [pc, #-696]	; 1cc5c <readstat_parse_dta+0x1004>
   1cf10:	mov	r0, r5
   1cf14:	add	r1, pc, r1
   1cf18:	bl	1bb70 <dta_read_tag>
   1cf1c:	subs	sl, r0, #0
   1cf20:	bne	1bd60 <readstat_parse_dta+0x108>
   1cf24:	mov	r0, r5
   1cf28:	bl	1baf0 <dta_update_progress>
   1cf2c:	subs	sl, r0, #0
   1cf30:	bne	1bd60 <readstat_parse_dta+0x108>
   1cf34:	ldr	r0, [r5, #160]	; 0xa0
   1cf38:	ldr	r7, [r5, #280]	; 0x118
   1cf3c:	cmp	r0, #0
   1cf40:	moveq	r6, r0
   1cf44:	bne	1c1b0 <readstat_parse_dta+0x558>
   1cf48:	ldrd	r8, [r5, #176]	; 0xb0
   1cf4c:	orrs	r3, r8, r9
   1cf50:	bne	1d03c <readstat_parse_dta+0x13e4>
   1cf54:	mov	r8, #0
   1cf58:	mov	r9, #0
   1cf5c:	str	fp, [sp, #16]
   1cf60:	ldrd	r2, [r5, #168]	; 0xa8
   1cf64:	mov	r0, r6
   1cf68:	cmp	r8, r2
   1cf6c:	sbcs	r1, r9, r3
   1cf70:	bge	1d10c <readstat_parse_dta+0x14b4>
   1cf74:	ldr	r3, [r7, #12]
   1cf78:	ldr	r1, [r5, #160]	; 0xa0
   1cf7c:	ldr	r2, [r7, #20]
   1cf80:	blx	r3
   1cf84:	ldr	r3, [r5, #160]	; 0xa0
   1cf88:	mov	r1, r5
   1cf8c:	cmp	r0, r3
   1cf90:	mov	r0, r6
   1cf94:	bne	1d104 <readstat_parse_dta+0x14ac>
   1cf98:	bl	59a0 <dta_handle_row>
   1cf9c:	subs	sl, r0, #0
   1cfa0:	mov	r0, r5
   1cfa4:	bne	1d060 <readstat_parse_dta+0x1408>
   1cfa8:	ldrd	r2, [r5, #184]	; 0xb8
   1cfac:	adds	r8, r8, #1
   1cfb0:	adc	r9, r9, #0
   1cfb4:	adds	sl, r2, #1
   1cfb8:	adc	fp, r3, #0
   1cfbc:	mov	r2, sl
   1cfc0:	mov	r3, fp
   1cfc4:	strd	r2, [r5, #184]	; 0xb8
   1cfc8:	bl	1baf0 <dta_update_progress>
   1cfcc:	subs	sl, r0, #0
   1cfd0:	beq	1cf60 <readstat_parse_dta+0x1308>
   1cfd4:	b	1d060 <readstat_parse_dta+0x1408>
   1cfd8:	cmp	r7, #1048576	; 0x100000
   1cfdc:	cmpls	r3, #1
   1cfe0:	movne	sl, #1
   1cfe4:	moveq	sl, #0
   1cfe8:	bne	1cdd0 <readstat_parse_dta+0x1178>
   1cfec:	ldr	r3, [r5, #244]	; 0xf4
   1cff0:	cmp	r3, #0
   1cff4:	beq	1d004 <readstat_parse_dta+0x13ac>
   1cff8:	ldr	r3, [r5, #96]	; 0x60
   1cffc:	cmp	r7, r3, lsl #1
   1d000:	bcs	1d074 <readstat_parse_dta+0x141c>
   1d004:	mov	r0, r7
   1d008:	ldr	r3, [r6, #8]
   1d00c:	ldr	r2, [r6, #20]
   1d010:	mov	r1, #1
   1d014:	blx	r3
   1d018:	cmn	r0, #1
   1d01c:	beq	1d1c4 <readstat_parse_dta+0x156c>
   1d020:	ldr	r1, [sp, #32]
   1d024:	mov	r0, r5
   1d028:	bl	1bb70 <dta_read_tag>
   1d02c:	cmp	r0, #0
   1d030:	beq	1cd14 <readstat_parse_dta+0x10bc>
   1d034:	mov	sl, r0
   1d038:	b	1cdd4 <readstat_parse_dta+0x117c>
   1d03c:	ldr	r1, [r5, #160]	; 0xa0
   1d040:	ldr	r3, [r7, #8]
   1d044:	ldr	r2, [r7, #20]
   1d048:	mul	r0, r1, r8
   1d04c:	mov	r1, #1
   1d050:	blx	r3
   1d054:	cmn	r0, #1
   1d058:	bne	1cf54 <readstat_parse_dta+0x12fc>
   1d05c:	mov	sl, #15
   1d060:	cmp	r6, #0
   1d064:	beq	1bd60 <readstat_parse_dta+0x108>
   1d068:	mov	r0, r6
   1d06c:	bl	3ec0 <free@plt>
   1d070:	b	1bd60 <readstat_parse_dta+0x108>
   1d074:	mov	r0, r8
   1d078:	add	r1, r7, #1
   1d07c:	bl	42e0 <readstat_realloc@plt>
   1d080:	subs	r8, r0, #0
   1d084:	beq	1c1bc <readstat_parse_dta+0x564>
   1d088:	strb	sl, [r8, r7]
   1d08c:	mov	r1, r7
   1d090:	ldr	r3, [r6, #12]
   1d094:	ldr	r2, [r6, #20]
   1d098:	blx	r3
   1d09c:	cmp	r7, r0
   1d0a0:	bne	1ce38 <readstat_parse_dta+0x11e0>
   1d0a4:	mov	r2, #4
   1d0a8:	ldr	r1, [sp, #24]
   1d0ac:	mov	r0, r8
   1d0b0:	str	sl, [sp, #120]	; 0x78
   1d0b4:	bl	44fc <strncmp@plt>
   1d0b8:	cmp	r0, #0
   1d0bc:	bne	1d020 <readstat_parse_dta+0x13c8>
   1d0c0:	ldr	r0, [r5, #96]	; 0x60
   1d0c4:	mov	r2, fp
   1d0c8:	add	r0, r8, r0
   1d0cc:	ldr	r1, [sp, #28]
   1d0d0:	bl	428c <__isoc99_sscanf@plt>
   1d0d4:	cmp	r0, #1
   1d0d8:	bne	1d020 <readstat_parse_dta+0x13c8>
   1d0dc:	ldr	r1, [r5, #96]	; 0x60
   1d0e0:	ldr	r3, [r5, #244]	; 0xf4
   1d0e4:	ldr	r2, [r5, #276]	; 0x114
   1d0e8:	add	r1, r8, r1, lsl #1
   1d0ec:	ldr	r0, [sp, #120]	; 0x78
   1d0f0:	blx	r3
   1d0f4:	cmp	r0, #0
   1d0f8:	beq	1d020 <readstat_parse_dta+0x13c8>
   1d0fc:	mov	sl, #4
   1d100:	b	1cdd4 <readstat_parse_dta+0x117c>
   1d104:	mov	sl, #2
   1d108:	b	1d060 <readstat_parse_dta+0x1408>
   1d10c:	ldrd	r0, [r5, #152]	; 0x98
   1d110:	ldrd	r8, [r5, #176]	; 0xb0
   1d114:	ldr	fp, [sp, #16]
   1d118:	subs	r0, r0, r8
   1d11c:	sbc	r1, r1, r9
   1d120:	cmp	r2, r0
   1d124:	sbcs	r1, r3, r1
   1d128:	blt	1d19c <readstat_parse_dta+0x1544>
   1d12c:	cmp	r6, #0
   1d130:	beq	1d13c <readstat_parse_dta+0x14e4>
   1d134:	mov	r0, r6
   1d138:	bl	3ec0 <free@plt>
   1d13c:	ldr	r1, [pc, #-1252]	; 1cc60 <readstat_parse_dta+0x1008>
   1d140:	mov	r0, r5
   1d144:	add	r1, pc, r1
   1d148:	bl	1bb70 <dta_read_tag>
   1d14c:	subs	sl, r0, #0
   1d150:	bne	1bd60 <readstat_parse_dta+0x108>
   1d154:	ldr	r8, [r5, #280]	; 0x118
   1d158:	ldr	r3, [r8, #8]
   1d15c:	ldr	r2, [r8, #20]
   1d160:	mov	r1, #0
   1d164:	ldr	r0, [r5, #136]	; 0x88
   1d168:	blx	r3
   1d16c:	cmn	r0, #1
   1d170:	bne	1d214 <readstat_parse_dta+0x15bc>
   1d174:	ldr	r3, [r5, #264]	; 0x108
   1d178:	cmp	r3, #0
   1d17c:	beq	1bf80 <readstat_parse_dta+0x328>
   1d180:	ldrd	r2, [r5, #136]	; 0x88
   1d184:	add	r6, r5, #288	; 0x120
   1d188:	mov	r0, r6
   1d18c:	strd	r2, [sp]
   1d190:	ldr	r2, [pc, #-1332]	; 1cc64 <readstat_parse_dta+0x100c>
   1d194:	add	r2, pc, r2
   1d198:	b	1bf68 <readstat_parse_dta+0x310>
   1d19c:	ldr	ip, [r5, #160]	; 0xa0
   1d1a0:	subs	r0, r0, r2
   1d1a4:	ldr	r3, [r7, #8]
   1d1a8:	mul	r0, ip, r0
   1d1ac:	ldr	r2, [r7, #20]
   1d1b0:	mov	r1, #1
   1d1b4:	blx	r3
   1d1b8:	cmn	r0, #1
   1d1bc:	bne	1d12c <readstat_parse_dta+0x14d4>
   1d1c0:	b	1d05c <readstat_parse_dta+0x1404>
   1d1c4:	mov	sl, #15
   1d1c8:	b	1cdd4 <readstat_parse_dta+0x117c>
   1d1cc:	ldr	r7, [r5, #280]	; 0x118
   1d1d0:	mov	r1, #0
   1d1d4:	ldr	r0, [r5, #128]	; 0x80
   1d1d8:	ldr	r3, [r7, #8]
   1d1dc:	ldr	r2, [r7, #20]
   1d1e0:	blx	r3
   1d1e4:	cmn	r0, #1
   1d1e8:	bne	1d61c <readstat_parse_dta+0x19c4>
   1d1ec:	ldr	r3, [r5, #264]	; 0x108
   1d1f0:	cmp	r3, #0
   1d1f4:	beq	1bf80 <readstat_parse_dta+0x328>
   1d1f8:	ldrd	r2, [r5, #128]	; 0x80
   1d1fc:	add	r6, r5, #288	; 0x120
   1d200:	mov	r0, r6
   1d204:	strd	r2, [sp]
   1d208:	ldr	r2, [pc, #-1448]	; 1cc68 <readstat_parse_dta+0x1010>
   1d20c:	add	r2, pc, r2
   1d210:	b	1bf68 <readstat_parse_dta+0x310>
   1d214:	ldr	r1, [pc, #-1456]	; 1cc6c <readstat_parse_dta+0x1014>
   1d218:	mov	r0, r5
   1d21c:	add	r1, pc, r1
   1d220:	bl	1bb70 <dta_read_tag>
   1d224:	subs	sl, r0, #0
   1d228:	bne	1bd60 <readstat_parse_dta+0x108>
   1d22c:	ldr	r3, [r5, #260]	; 0x104
   1d230:	cmp	r3, #0
   1d234:	beq	1bd60 <readstat_parse_dta+0x108>
   1d238:	ldr	r3, [pc, #-1488]	; 1cc70 <readstat_parse_dta+0x1018>
   1d23c:	ldr	r1, [r5, #100]	; 0x64
   1d240:	add	r3, pc, r3
   1d244:	str	r3, [sp, #44]	; 0x2c
   1d248:	ldr	r3, [pc, #-1500]	; 1cc74 <readstat_parse_dta+0x101c>
   1d24c:	str	r4, [sp, #16]
   1d250:	add	r3, pc, r3
   1d254:	mov	r4, sl
   1d258:	str	r3, [sp, #48]	; 0x30
   1d25c:	add	r3, sp, #80	; 0x50
   1d260:	str	sl, [sp, #24]
   1d264:	str	r3, [sp, #28]
   1d268:	str	sl, [sp, #20]
   1d26c:	cmp	r1, #2
   1d270:	beq	1d5e0 <readstat_parse_dta+0x1988>
   1d274:	ldr	r1, [sp, #44]	; 0x2c
   1d278:	mov	r0, r5
   1d27c:	bl	1bb70 <dta_read_tag>
   1d280:	cmp	r0, #0
   1d284:	bne	1d440 <readstat_parse_dta+0x17e8>
   1d288:	ldr	r3, [r8, #12]
   1d28c:	ldr	r2, [r8, #20]
   1d290:	mov	r1, #4
   1d294:	mov	r0, fp
   1d298:	blx	r3
   1d29c:	cmp	r0, #3
   1d2a0:	bls	1d440 <readstat_parse_dta+0x17e8>
   1d2a4:	ldrb	r3, [r5, #192]	; 0xc0
   1d2a8:	ldr	r6, [sp, #120]	; 0x78
   1d2ac:	tst	r3, #1
   1d2b0:	beq	1d2c0 <readstat_parse_dta+0x1668>
   1d2b4:	mov	r0, r6
   1d2b8:	bl	3d94 <byteswap4@plt>
   1d2bc:	mov	r6, r0
   1d2c0:	mov	r9, #0
   1d2c4:	ldr	r3, [r8, #12]
   1d2c8:	ldr	r2, [r8, #20]
   1d2cc:	ldr	r1, [r5, #104]	; 0x68
   1d2d0:	mov	r0, fp
   1d2d4:	blx	r3
   1d2d8:	ldr	r3, [r5, #104]	; 0x68
   1d2dc:	cmp	r0, r3
   1d2e0:	bcc	1d440 <readstat_parse_dta+0x17e8>
   1d2e4:	ldr	r3, [r8, #8]
   1d2e8:	ldr	r2, [r8, #20]
   1d2ec:	mov	r1, #1
   1d2f0:	ldr	r0, [r5, #108]	; 0x6c
   1d2f4:	blx	r3
   1d2f8:	cmn	r0, #1
   1d2fc:	beq	1d440 <readstat_parse_dta+0x17e8>
   1d300:	mov	r0, r4
   1d304:	mov	r1, r6
   1d308:	bl	42e0 <readstat_realloc@plt>
   1d30c:	subs	r4, r0, #0
   1d310:	beq	1d844 <readstat_parse_dta+0x1bec>
   1d314:	ldr	r3, [r8, #12]
   1d318:	ldr	r2, [r8, #20]
   1d31c:	mov	r1, r6
   1d320:	blx	r3
   1d324:	cmp	r6, r0
   1d328:	bhi	1d440 <readstat_parse_dta+0x17e8>
   1d32c:	ldr	r1, [r5, #100]	; 0x64
   1d330:	cmp	r1, #2
   1d334:	moveq	r6, #0
   1d338:	addeq	r7, sp, #64	; 0x40
   1d33c:	addeq	sl, sp, #72	; 0x48
   1d340:	beq	1d54c <readstat_parse_dta+0x18f4>
   1d344:	cmp	r6, #8
   1d348:	bls	1d26c <readstat_parse_dta+0x1614>
   1d34c:	ldr	r1, [sp, #48]	; 0x30
   1d350:	mov	r0, r5
   1d354:	bl	1bb70 <dta_read_tag>
   1d358:	cmp	r0, #0
   1d35c:	bne	1d474 <readstat_parse_dta+0x181c>
   1d360:	ldrb	r3, [r5, #192]	; 0xc0
   1d364:	ldr	r9, [r4]
   1d368:	ldr	r7, [r4, #4]
   1d36c:	tst	r3, #1
   1d370:	beq	1d38c <readstat_parse_dta+0x1734>
   1d374:	mov	r0, r9
   1d378:	bl	3d94 <byteswap4@plt>
   1d37c:	mov	r9, r0
   1d380:	mov	r0, r7
   1d384:	bl	3d94 <byteswap4@plt>
   1d388:	mov	r7, r0
   1d38c:	sub	r6, r6, #8
   1d390:	cmp	r6, r7
   1d394:	bcc	1d440 <readstat_parse_dta+0x17e8>
   1d398:	sub	r6, r6, r7
   1d39c:	cmp	r9, r6, lsr #3
   1d3a0:	bhi	1d440 <readstat_parse_dta+0x17e8>
   1d3a4:	ldr	r2, [pc, #-1844]	; 1cc78 <readstat_parse_dta+0x1020>
   1d3a8:	lsl	r3, r7, #2
   1d3ac:	cmp	r7, r2
   1d3b0:	ldr	sl, [pc, #-1852]	; 1cc7c <readstat_parse_dta+0x1024>
   1d3b4:	addls	sl, r3, #1
   1d3b8:	add	r3, r9, #1
   1d3bc:	add	r2, r9, #2
   1d3c0:	lsl	r3, r3, #3
   1d3c4:	ldr	r0, [sp, #24]
   1d3c8:	mov	r1, sl
   1d3cc:	str	r3, [sp, #32]
   1d3d0:	lsl	r9, r2, #2
   1d3d4:	bl	3ff8 <realloc@plt>
   1d3d8:	subs	r3, r0, #0
   1d3dc:	str	r3, [sp, #24]
   1d3e0:	beq	1d844 <readstat_parse_dta+0x1bec>
   1d3e4:	ldrb	r3, [r5, #192]	; 0xc0
   1d3e8:	add	r6, r4, #4
   1d3ec:	sub	r2, r9, #4
   1d3f0:	tst	r3, #1
   1d3f4:	beq	1d49c <readstat_parse_dta+0x1844>
   1d3f8:	mov	r3, r6
   1d3fc:	add	r1, r4, r2
   1d400:	str	r6, [sp, #36]	; 0x24
   1d404:	str	fp, [sp, #40]	; 0x28
   1d408:	mov	r6, r5
   1d40c:	mov	fp, r8
   1d410:	mov	r5, r1
   1d414:	mov	r8, r7
   1d418:	mov	r7, r4
   1d41c:	mov	r4, r3
   1d420:	cmp	r5, r4
   1d424:	beq	1d484 <readstat_parse_dta+0x182c>
   1d428:	ldr	r0, [r4, #4]
   1d42c:	str	r2, [sp, #52]	; 0x34
   1d430:	bl	3d94 <byteswap4@plt>
   1d434:	ldr	r2, [sp, #52]	; 0x34
   1d438:	str	r0, [r4, #4]!
   1d43c:	b	1d420 <readstat_parse_dta+0x17c8>
   1d440:	mov	r3, r4
   1d444:	ldr	sl, [sp, #20]
   1d448:	ldr	r4, [sp, #16]
   1d44c:	cmp	r3, #0
   1d450:	beq	1d45c <readstat_parse_dta+0x1804>
   1d454:	mov	r0, r3
   1d458:	bl	3ec0 <free@plt>
   1d45c:	ldr	r3, [sp, #24]
   1d460:	cmp	r3, #0
   1d464:	beq	1bd60 <readstat_parse_dta+0x108>
   1d468:	mov	r0, r3
   1d46c:	bl	3ec0 <free@plt>
   1d470:	b	1bd60 <readstat_parse_dta+0x108>
   1d474:	mov	r3, r4
   1d478:	ldr	r4, [sp, #16]
   1d47c:	mov	sl, r0
   1d480:	b	1d44c <readstat_parse_dta+0x17f4>
   1d484:	mov	r5, r6
   1d488:	mov	r4, r7
   1d48c:	ldr	r6, [sp, #36]	; 0x24
   1d490:	mov	r7, r8
   1d494:	mov	r8, fp
   1d498:	ldr	fp, [sp, #40]	; 0x28
   1d49c:	add	r3, r4, r2
   1d4a0:	sub	r9, r9, #8
   1d4a4:	str	r3, [sp, #36]	; 0x24
   1d4a8:	add	r3, sp, #88	; 0x58
   1d4ac:	str	r3, [sp, #40]	; 0x28
   1d4b0:	ldr	r3, [sp, #36]	; 0x24
   1d4b4:	mov	r1, r5
   1d4b8:	cmp	r6, r3
   1d4bc:	ldr	r0, [sp, #28]
   1d4c0:	beq	1d8c0 <readstat_parse_dta+0x1c68>
   1d4c4:	ldr	r3, [r6, #4]!
   1d4c8:	cmp	r7, r3
   1d4cc:	add	r2, r9, r6
   1d4d0:	bls	1d8b0 <readstat_parse_dta+0x1c58>
   1d4d4:	bl	58f0 <dta_interpret_int32_bytes>
   1d4d8:	ldr	r2, [r6]
   1d4dc:	ldr	r0, [sp, #32]
   1d4e0:	sub	r3, r7, r2
   1d4e4:	ldr	r1, [r5, #236]	; 0xec
   1d4e8:	cmp	r3, #32000	; 0x7d00
   1d4ec:	add	r2, r0, r2
   1d4f0:	movcs	r3, #32000	; 0x7d00
   1d4f4:	str	r1, [sp]
   1d4f8:	add	r2, r4, r2
   1d4fc:	mov	r1, sl
   1d500:	ldr	r0, [sp, #24]
   1d504:	bl	4238 <readstat_convert@plt>
   1d508:	cmp	r0, #0
   1d50c:	bne	1d474 <readstat_parse_dta+0x181c>
   1d510:	ldr	r3, [sp, #40]	; 0x28
   1d514:	ldr	r2, [sp, #24]
   1d518:	ldm	r3, {r0, r1}
   1d51c:	ldr	r3, [r5, #276]	; 0x114
   1d520:	str	r2, [sp, #8]
   1d524:	str	r3, [sp, #12]
   1d528:	ldr	r3, [sp, #28]
   1d52c:	stm	sp, {r0, r1}
   1d530:	mov	r0, fp
   1d534:	ldm	r3, {r2, r3}
   1d538:	ldr	r1, [r5, #260]	; 0x104
   1d53c:	blx	r1
   1d540:	cmp	r0, #0
   1d544:	beq	1d4b0 <readstat_parse_dta+0x1858>
   1d548:	b	1d5d0 <readstat_parse_dta+0x1978>
   1d54c:	cmp	r6, r9
   1d550:	add	r2, r4, r6, lsl #3
   1d554:	mov	ip, #0
   1d558:	mov	r3, #8
   1d55c:	mov	r1, #33	; 0x21
   1d560:	ldr	r0, [sp, #28]
   1d564:	beq	1d8c0 <readstat_parse_dta+0x1c68>
   1d568:	str	r6, [sp, #64]	; 0x40
   1d56c:	ldr	lr, [r5, #236]	; 0xec
   1d570:	add	r6, r6, #1
   1d574:	str	lr, [sp]
   1d578:	str	ip, [r7, #4]
   1d57c:	str	ip, [r7, #12]
   1d580:	mov	ip, #3
   1d584:	str	ip, [sp, #72]	; 0x48
   1d588:	bl	4238 <readstat_convert@plt>
   1d58c:	cmp	r0, #0
   1d590:	bne	1d474 <readstat_parse_dta+0x181c>
   1d594:	ldrb	r3, [sp, #80]	; 0x50
   1d598:	cmp	r3, #0
   1d59c:	beq	1d54c <readstat_parse_dta+0x18f4>
   1d5a0:	ldm	sl, {r0, r1}
   1d5a4:	ldr	r3, [r5, #276]	; 0x114
   1d5a8:	ldr	r2, [sp, #28]
   1d5ac:	stm	sp, {r0, r1}
   1d5b0:	str	r2, [sp, #8]
   1d5b4:	str	r3, [sp, #12]
   1d5b8:	mov	r0, fp
   1d5bc:	ldm	r7, {r2, r3}
   1d5c0:	ldr	r1, [r5, #260]	; 0x104
   1d5c4:	blx	r1
   1d5c8:	cmp	r0, #0
   1d5cc:	beq	1d54c <readstat_parse_dta+0x18f4>
   1d5d0:	mov	r3, r4
   1d5d4:	mov	r0, #4
   1d5d8:	ldr	r4, [sp, #16]
   1d5dc:	b	1d47c <readstat_parse_dta+0x1824>
   1d5e0:	ldr	r3, [r8, #12]
   1d5e4:	ldr	r2, [r8, #20]
   1d5e8:	mov	r0, fp
   1d5ec:	blx	r3
   1d5f0:	cmp	r0, #1
   1d5f4:	bls	1d440 <readstat_parse_dta+0x17e8>
   1d5f8:	ldrb	r3, [r5, #192]	; 0xc0
   1d5fc:	ldrsh	r6, [sp, #120]	; 0x78
   1d600:	tst	r3, #1
   1d604:	beq	1d614 <readstat_parse_dta+0x19bc>
   1d608:	uxth	r0, r6
   1d60c:	bl	3ea8 <byteswap2@plt>
   1d610:	mov	r6, r0
   1d614:	lsr	r9, r6, #3
   1d618:	b	1d2c4 <readstat_parse_dta+0x166c>
   1d61c:	ldr	r1, [pc, #-2468]	; 1cc80 <readstat_parse_dta+0x1028>
   1d620:	mov	r0, r5
   1d624:	add	r1, pc, r1
   1d628:	bl	1bb70 <dta_read_tag>
   1d62c:	subs	sl, r0, #0
   1d630:	bne	1bd60 <readstat_parse_dta+0x108>
   1d634:	mov	r3, #100	; 0x64
   1d638:	str	r3, [r5, #224]	; 0xe0
   1d63c:	mov	r0, #400	; 0x190
   1d640:	bl	422c <readstat_malloc@plt>
   1d644:	ldr	r3, [pc, #-2504]	; 1cc84 <readstat_parse_dta+0x102c>
   1d648:	add	r8, sp, #64	; 0x40
   1d64c:	add	r9, sp, #80	; 0x50
   1d650:	add	r3, pc, r3
   1d654:	str	r3, [sp, #16]
   1d658:	str	sl, [sp, #20]
   1d65c:	str	r0, [r5, #216]	; 0xd8
   1d660:	ldr	r3, [r7, #12]
   1d664:	ldr	r2, [r7, #20]
   1d668:	mov	r1, #3
   1d66c:	mov	r0, r8
   1d670:	blx	r3
   1d674:	cmp	r0, #3
   1d678:	mov	r6, r0
   1d67c:	bne	1bfac <readstat_parse_dta+0x354>
   1d680:	mov	r2, r0
   1d684:	ldr	r1, [sp, #16]
   1d688:	mov	r0, r8
   1d68c:	bl	3fa4 <memcmp@plt>
   1d690:	cmp	r0, #0
   1d694:	bne	1d854 <readstat_parse_dta+0x1bfc>
   1d698:	ldr	r3, [r5, #116]	; 0x74
   1d69c:	cmp	r3, #4
   1d6a0:	ldr	r3, [r5, #280]	; 0x118
   1d6a4:	bhi	1d7c0 <readstat_parse_dta+0x1b68>
   1d6a8:	mov	r1, #13
   1d6ac:	mov	r0, r9
   1d6b0:	ldr	r6, [r3, #12]
   1d6b4:	ldr	r2, [r3, #20]
   1d6b8:	blx	r6
   1d6bc:	cmp	r0, #13
   1d6c0:	bne	1bfac <readstat_parse_dta+0x354>
   1d6c4:	ldrb	r3, [r5, #192]	; 0xc0
   1d6c8:	tst	r3, #1
   1d6cc:	ldrheq	r0, [sp, #80]	; 0x50
   1d6d0:	beq	1d6e4 <readstat_parse_dta+0x1a8c>
   1d6d4:	ldr	r0, [sp, #80]	; 0x50
   1d6d8:	bl	3d94 <byteswap4@plt>
   1d6dc:	ldrb	r3, [r5, #192]	; 0xc0
   1d6e0:	uxth	r0, r0
   1d6e4:	tst	r3, #1
   1d6e8:	strh	r0, [sp, #120]	; 0x78
   1d6ec:	ldr	r0, [sp, #84]	; 0x54
   1d6f0:	beq	1d6f8 <readstat_parse_dta+0x1aa0>
   1d6f4:	bl	3d94 <byteswap4@plt>
   1d6f8:	ldrb	r3, [sp, #88]	; 0x58
   1d6fc:	ldr	r2, [sp, #20]
   1d700:	str	r0, [sp, #128]	; 0x80
   1d704:	strb	r3, [sp, #136]	; 0x88
   1d708:	ldrb	r3, [r5, #192]	; 0xc0
   1d70c:	str	r2, [sp, #132]	; 0x84
   1d710:	tst	r3, #1
   1d714:	bne	1d8c8 <readstat_parse_dta+0x1c70>
   1d718:	ldrb	r0, [sp, #92]	; 0x5c
   1d71c:	ldr	r3, [sp, #88]	; 0x58
   1d720:	lsl	r0, r0, #24
   1d724:	orr	r0, r0, r3, lsr #8
   1d728:	ldrb	r3, [sp, #136]	; 0x88
   1d72c:	str	r0, [sp, #140]	; 0x8c
   1d730:	cmp	r3, #130	; 0x82
   1d734:	bne	1d660 <readstat_parse_dta+0x1a08>
   1d738:	ldr	r1, [r5, #220]	; 0xdc
   1d73c:	ldr	r3, [r5, #224]	; 0xe0
   1d740:	cmp	r1, r3
   1d744:	beq	1d88c <readstat_parse_dta+0x1c34>
   1d748:	ldr	sl, [sp, #140]	; 0x8c
   1d74c:	add	r0, sl, #32
   1d750:	bl	422c <readstat_malloc@plt>
   1d754:	subs	r6, r0, #0
   1d758:	beq	1c1bc <readstat_parse_dta+0x564>
   1d75c:	mov	ip, fp
   1d760:	ldm	ip!, {r0, r1, r2, r3}
   1d764:	str	r0, [r6]
   1d768:	str	r1, [r6, #4]
   1d76c:	str	r2, [r6, #8]
   1d770:	str	r3, [r6, #12]
   1d774:	ldm	ip!, {r0, r1, r2, r3}
   1d778:	str	r0, [r6, #16]
   1d77c:	str	r1, [r6, #20]
   1d780:	str	r2, [r6, #24]
   1d784:	str	r3, [r6, #28]
   1d788:	ldr	r3, [r5, #220]	; 0xdc
   1d78c:	ldr	r2, [r5, #216]	; 0xd8
   1d790:	add	r0, r3, #1
   1d794:	str	r0, [r5, #220]	; 0xdc
   1d798:	mov	r1, sl
   1d79c:	add	r0, r6, #24
   1d7a0:	ldr	sl, [r7, #12]
   1d7a4:	str	r6, [r2, r3, lsl #2]
   1d7a8:	ldr	r2, [r7, #20]
   1d7ac:	blx	sl
   1d7b0:	ldr	r3, [r6, #20]
   1d7b4:	cmp	r0, r3
   1d7b8:	beq	1d660 <readstat_parse_dta+0x1a08>
   1d7bc:	b	1bfac <readstat_parse_dta+0x354>
   1d7c0:	mov	r1, #17
   1d7c4:	mov	r0, r9
   1d7c8:	ldr	r6, [r3, #12]
   1d7cc:	ldr	r2, [r3, #20]
   1d7d0:	blx	r6
   1d7d4:	cmp	r0, #17
   1d7d8:	bne	1bfac <readstat_parse_dta+0x354>
   1d7dc:	ldrb	r3, [r5, #192]	; 0xc0
   1d7e0:	tst	r3, #1
   1d7e4:	ldrheq	r0, [sp, #80]	; 0x50
   1d7e8:	beq	1d7fc <readstat_parse_dta+0x1ba4>
   1d7ec:	ldr	r0, [sp, #80]	; 0x50
   1d7f0:	bl	3d94 <byteswap4@plt>
   1d7f4:	ldrb	r3, [r5, #192]	; 0xc0
   1d7f8:	uxth	r0, r0
   1d7fc:	tst	r3, #1
   1d800:	strh	r0, [sp, #120]	; 0x78
   1d804:	ldr	r1, [sp, #88]	; 0x58
   1d808:	ldr	r0, [sp, #84]	; 0x54
   1d80c:	beq	1d814 <readstat_parse_dta+0x1bbc>
   1d810:	bl	3d7c <byteswap8@plt>
   1d814:	ldrb	r3, [sp, #92]	; 0x5c
   1d818:	str	r0, [sp, #128]	; 0x80
   1d81c:	str	r1, [sp, #132]	; 0x84
   1d820:	strb	r3, [sp, #136]	; 0x88
   1d824:	ldrb	r3, [r5, #192]	; 0xc0
   1d828:	tst	r3, #1
   1d82c:	bne	1d8e0 <readstat_parse_dta+0x1c88>
   1d830:	ldrb	r0, [sp, #96]	; 0x60
   1d834:	ldr	r3, [sp, #92]	; 0x5c
   1d838:	lsl	r0, r0, #24
   1d83c:	orr	r0, r0, r3, lsr #8
   1d840:	b	1d728 <readstat_parse_dta+0x1ad0>
   1d844:	mov	r3, r4
   1d848:	mov	r0, #3
   1d84c:	ldr	r4, [sp, #16]
   1d850:	b	1d47c <readstat_parse_dta+0x1824>
   1d854:	ldr	r1, [pc, #-3028]	; 1cc88 <readstat_parse_dta+0x1030>
   1d858:	mov	r2, r6
   1d85c:	mov	r0, r8
   1d860:	add	r1, pc, r1
   1d864:	bl	3fa4 <memcmp@plt>
   1d868:	cmp	r0, #0
   1d86c:	bne	1c7a4 <readstat_parse_dta+0xb4c>
   1d870:	ldr	r1, [pc, #-3052]	; 1cc8c <readstat_parse_dta+0x1034>
   1d874:	mov	r0, r5
   1d878:	add	r1, pc, r1
   1d87c:	bl	1bb70 <dta_read_tag>
   1d880:	subs	sl, r0, #0
   1d884:	beq	1bf18 <readstat_parse_dta+0x2c0>
   1d888:	b	1bd60 <readstat_parse_dta+0x108>
   1d88c:	lsl	r3, r1, #1
   1d890:	str	r3, [r5, #224]	; 0xe0
   1d894:	lsl	r1, r1, #3
   1d898:	ldr	r0, [r5, #216]	; 0xd8
   1d89c:	bl	42e0 <readstat_realloc@plt>
   1d8a0:	cmp	r0, #0
   1d8a4:	str	r0, [r5, #216]	; 0xd8
   1d8a8:	bne	1d748 <readstat_parse_dta+0x1af0>
   1d8ac:	b	1c1bc <readstat_parse_dta+0x564>
   1d8b0:	mov	r3, r4
   1d8b4:	mov	r0, #5
   1d8b8:	ldr	r4, [sp, #16]
   1d8bc:	b	1d47c <readstat_parse_dta+0x1824>
   1d8c0:	ldr	r1, [r5, #100]	; 0x64
   1d8c4:	b	1d26c <readstat_parse_dta+0x1614>
   1d8c8:	ldrb	r3, [sp, #92]	; 0x5c
   1d8cc:	ldr	r0, [sp, #88]	; 0x58
   1d8d0:	lsl	r3, r3, #24
   1d8d4:	orr	r0, r3, r0, lsr #8
   1d8d8:	bl	3d94 <byteswap4@plt>
   1d8dc:	b	1d728 <readstat_parse_dta+0x1ad0>
   1d8e0:	ldrb	r3, [sp, #96]	; 0x60
   1d8e4:	ldr	r0, [sp, #92]	; 0x5c
   1d8e8:	lsl	r3, r3, #24
   1d8ec:	orr	r0, r3, r0, lsr #8
   1d8f0:	bl	3d94 <byteswap4@plt>
   1d8f4:	b	1d728 <readstat_parse_dta+0x1ad0>

0001d8f8 <dta_113_write_int8>:
   1d8f8:	cmp	r2, #100	; 0x64
   1d8fc:	strble	r2, [r0]
   1d900:	movle	r0, #0
   1d904:	movgt	r0, #20
   1d908:	bx	lr

0001d90c <dta_old_write_int8>:
   1d90c:	cmp	r2, #127	; 0x7f
   1d910:	strbne	r2, [r0]
   1d914:	movne	r0, #0
   1d918:	moveq	r0, #20
   1d91c:	bx	lr

0001d920 <dta_113_write_int16>:
   1d920:	ldr	r3, [pc, #16]	; 1d938 <dta_113_write_int16+0x18>
   1d924:	cmp	r2, r3
   1d928:	strhle	r2, [r0]
   1d92c:	movle	r0, #0
   1d930:	movgt	r0, #20
   1d934:	bx	lr
   1d938:	.word	0x00007fe4

0001d93c <dta_old_write_int16>:
   1d93c:	ldr	r3, [pc, #16]	; 1d954 <dta_old_write_int16+0x18>
   1d940:	cmp	r2, r3
   1d944:	strhne	r2, [r0]
   1d948:	movne	r0, #0
   1d94c:	moveq	r0, #20
   1d950:	bx	lr
   1d954:	.word	0x00007fff

0001d958 <dta_113_write_int32>:
   1d958:	cmn	r2, #-2147483620	; 0x8000001c
   1d95c:	strle	r2, [r0]
   1d960:	movle	r0, #0
   1d964:	movgt	r0, #20
   1d968:	bx	lr

0001d96c <dta_old_write_int32>:
   1d96c:	cmn	r2, #-2147483647	; 0x80000001
   1d970:	strne	r2, [r0]
   1d974:	movne	r0, #0
   1d978:	moveq	r0, #20
   1d97c:	bx	lr

0001d980 <dta_117_write_string_ref>:
   1d980:	cmp	r2, #0
   1d984:	mov	r3, r0
   1d988:	ldrne	r1, [r2, #8]
   1d98c:	ldrne	r2, [r2]
   1d990:	movne	r0, #0
   1d994:	strne	r2, [r3]
   1d998:	strne	r1, [r3, #4]
   1d99c:	moveq	r0, #34	; 0x22
   1d9a0:	bx	lr

0001d9a4 <dta_module_ctx_free>:
   1d9a4:	b	3e78 <dta_ctx_free@plt>

0001d9a8 <dta_write_missing_string>:
   1d9a8:	ldr	r2, [r1, #1596]	; 0x63c
   1d9ac:	push	{r4, lr}
   1d9b0:	mov	r1, #0
   1d9b4:	bl	42a4 <memset@plt>
   1d9b8:	mov	r0, #0
   1d9bc:	pop	{r4, pc}

0001d9c0 <dta_emit_header_data_label>:
   1d9c0:	ldrb	r3, [r1, #192]	; 0xc0
   1d9c4:	push	{r4, r5, r6, r7, lr}
   1d9c8:	mov	r4, r1
   1d9cc:	tst	r3, #4
   1d9d0:	sub	sp, sp, #12
   1d9d4:	mov	r6, r0
   1d9d8:	bne	1da1c <dta_emit_header_data_label+0x5c>
   1d9dc:	ldr	r5, [r4, #8]
   1d9e0:	cmp	r5, #0
   1d9e4:	beq	1da60 <dta_emit_header_data_label+0xa0>
   1d9e8:	cmp	r5, #1
   1d9ec:	add	r7, r6, #88	; 0x58
   1d9f0:	beq	1dacc <dta_emit_header_data_label+0x10c>
   1d9f4:	cmp	r5, #2
   1d9f8:	beq	1daf4 <dta_emit_header_data_label+0x134>
   1d9fc:	mov	r1, r7
   1da00:	mov	r0, r6
   1da04:	bl	4154 <readstat_write_string@plt>
   1da08:	subs	r5, r0, #0
   1da0c:	beq	1da3c <dta_emit_header_data_label+0x7c>
   1da10:	mov	r0, r5
   1da14:	add	sp, sp, #12
   1da18:	pop	{r4, r5, r6, r7, pc}
   1da1c:	ldr	r1, [pc, #248]	; 1db1c <dta_emit_header_data_label+0x15c>
   1da20:	add	r1, pc, r1
   1da24:	bl	4154 <readstat_write_string@plt>
   1da28:	subs	r5, r0, #0
   1da2c:	beq	1d9dc <dta_emit_header_data_label+0x1c>
   1da30:	mov	r0, r5
   1da34:	add	sp, sp, #12
   1da38:	pop	{r4, r5, r6, r7, pc}
   1da3c:	ldrb	r3, [r4, #192]	; 0xc0
   1da40:	tst	r3, #4
   1da44:	beq	1da10 <dta_emit_header_data_label+0x50>
   1da48:	ldr	r1, [pc, #208]	; 1db20 <dta_emit_header_data_label+0x160>
   1da4c:	mov	r0, r6
   1da50:	add	r1, pc, r1
   1da54:	bl	4154 <readstat_write_string@plt>
   1da58:	mov	r5, r0
   1da5c:	b	1da10 <dta_emit_header_data_label+0x50>
   1da60:	ldr	r5, [r4, #4]
   1da64:	mov	r0, #1
   1da68:	mov	r1, r5
   1da6c:	bl	3d58 <calloc@plt>
   1da70:	mov	r2, r5
   1da74:	add	r1, r6, #88	; 0x58
   1da78:	mov	r7, r0
   1da7c:	bl	42bc <strncpy@plt>
   1da80:	mov	r2, r5
   1da84:	mov	r1, r7
   1da88:	mov	r0, r6
   1da8c:	bl	4454 <readstat_write_bytes@plt>
   1da90:	subs	r5, r0, #0
   1da94:	bne	1dab8 <dta_emit_header_data_label+0xf8>
   1da98:	ldrb	r3, [r4, #192]	; 0xc0
   1da9c:	tst	r3, #4
   1daa0:	beq	1dab8 <dta_emit_header_data_label+0xf8>
   1daa4:	ldr	r1, [pc, #120]	; 1db24 <dta_emit_header_data_label+0x164>
   1daa8:	mov	r0, r6
   1daac:	add	r1, pc, r1
   1dab0:	bl	4154 <readstat_write_string@plt>
   1dab4:	mov	r5, r0
   1dab8:	mov	r0, r7
   1dabc:	bl	3ec0 <free@plt>
   1dac0:	mov	r0, r5
   1dac4:	add	sp, sp, #12
   1dac8:	pop	{r4, r5, r6, r7, pc}
   1dacc:	mov	r0, r7
   1dad0:	bl	41fc <strlen@plt>
   1dad4:	add	r1, sp, #8
   1dad8:	mov	r2, r5
   1dadc:	strb	r0, [r1, #-2]!
   1dae0:	mov	r0, r6
   1dae4:	bl	4454 <readstat_write_bytes@plt>
   1dae8:	subs	r5, r0, #0
   1daec:	bne	1da10 <dta_emit_header_data_label+0x50>
   1daf0:	b	1d9fc <dta_emit_header_data_label+0x3c>
   1daf4:	mov	r0, r7
   1daf8:	bl	41fc <strlen@plt>
   1dafc:	add	r1, sp, #8
   1db00:	mov	r2, r5
   1db04:	strh	r0, [r1, #-2]!
   1db08:	mov	r0, r6
   1db0c:	bl	4454 <readstat_write_bytes@plt>
   1db10:	subs	r5, r0, #0
   1db14:	bne	1da10 <dta_emit_header_data_label+0x50>
   1db18:	b	1d9fc <dta_emit_header_data_label+0x3c>
   1db1c:	.word	0x00008aec
   1db20:	.word	0x00008ac4
   1db24:	.word	0x00008a68

0001db28 <dta_write_string>:
   1db28:	push	{r4, r5, r6, lr}
   1db2c:	subs	r4, r2, #0
   1db30:	mov	r6, r0
   1db34:	ldr	r5, [r1, #1596]	; 0x63c
   1db38:	beq	1db60 <dta_write_string+0x38>
   1db3c:	ldrb	r3, [r4]
   1db40:	cmp	r3, #0
   1db44:	beq	1db60 <dta_write_string+0x38>
   1db48:	mov	r0, r4
   1db4c:	bl	41fc <strlen@plt>
   1db50:	cmp	r5, r0
   1db54:	bcs	1db78 <dta_write_string+0x50>
   1db58:	mov	r0, #22
   1db5c:	pop	{r4, r5, r6, pc}
   1db60:	mov	r2, r5
   1db64:	mov	r0, r6
   1db68:	mov	r1, #0
   1db6c:	bl	42a4 <memset@plt>
   1db70:	mov	r0, #0
   1db74:	pop	{r4, r5, r6, pc}
   1db78:	mov	r2, r5
   1db7c:	mov	r1, r4
   1db80:	mov	r0, r6
   1db84:	bl	42bc <strncpy@plt>
   1db88:	mov	r0, #0
   1db8c:	pop	{r4, r5, r6, pc}

0001db90 <dta_compare_value_labels>:
   1db90:	ldrb	r3, [r0, #12]
   1db94:	cmp	r3, #0
   1db98:	beq	1dbb0 <dta_compare_value_labels+0x20>
   1db9c:	ldrb	r0, [r1, #12]
   1dba0:	cmp	r0, #0
   1dba4:	beq	1dbcc <dta_compare_value_labels+0x3c>
   1dba8:	sub	r0, r3, r0
   1dbac:	bx	lr
   1dbb0:	ldrb	r3, [r1, #12]
   1dbb4:	cmp	r3, #0
   1dbb8:	bne	1dbd4 <dta_compare_value_labels+0x44>
   1dbbc:	ldr	r0, [r0, #8]
   1dbc0:	ldr	r3, [r1, #8]
   1dbc4:	sub	r0, r0, r3
   1dbc8:	bx	lr
   1dbcc:	mov	r0, #1
   1dbd0:	bx	lr
   1dbd4:	mvn	r0, #0
   1dbd8:	bx	lr

0001dbdc <dta_117_variable_width>:
   1dbdc:	cmp	r0, #0
   1dbe0:	beq	1dc10 <dta_117_variable_width+0x34>
   1dbe4:	sub	r3, r0, #5
   1dbe8:	cmp	r3, #1
   1dbec:	bls	1dc28 <dta_117_variable_width+0x4c>
   1dbf0:	sub	r3, r0, #3
   1dbf4:	cmp	r3, #1
   1dbf8:	bls	1dc30 <dta_117_variable_width+0x54>
   1dbfc:	cmp	r0, #2
   1dc00:	subne	r0, r0, #1
   1dc04:	clzne	r0, r0
   1dc08:	lsrne	r0, r0, #5
   1dc0c:	bx	lr
   1dc10:	ldr	r3, [pc, #32]	; 1dc38 <dta_117_variable_width+0x5c>
   1dc14:	sub	r2, r1, #1
   1dc18:	cmp	r2, r3
   1dc1c:	ldr	r0, [pc, #24]	; 1dc3c <dta_117_variable_width+0x60>
   1dc20:	movls	r0, r1
   1dc24:	bx	lr
   1dc28:	mov	r0, #8
   1dc2c:	bx	lr
   1dc30:	mov	r0, #4
   1dc34:	bx	lr
   1dc38:	.word	0x000007fc
   1dc3c:	.word	0x000007fd

0001dc40 <dta_metadata_ok>:
   1dc40:	ldr	r3, [r0, #16]
   1dc44:	cmp	r3, #0
   1dc48:	beq	1dc54 <dta_metadata_ok+0x14>
   1dc4c:	mov	r0, #6
   1dc50:	bx	lr
   1dc54:	ldr	r0, [r0, #8]
   1dc58:	sub	r0, r0, #104	; 0x68
   1dc5c:	cmp	r0, #15
   1dc60:	movhi	r0, #24
   1dc64:	movls	r0, #0
   1dc68:	bx	lr

0001dc6c <dta_write_chunk>:
   1dc6c:	ldrb	ip, [r1, #192]	; 0xc0
   1dc70:	push	{r4, r5, r6, r7, r8, lr}
   1dc74:	mov	r4, r1
   1dc78:	tst	ip, #4
   1dc7c:	mov	r6, r3
   1dc80:	mov	r5, r0
   1dc84:	ldr	r7, [sp, #24]
   1dc88:	ldr	r8, [sp, #28]
   1dc8c:	bne	1dcc8 <dta_write_chunk+0x5c>
   1dc90:	mov	r2, r7
   1dc94:	mov	r1, r6
   1dc98:	mov	r0, r5
   1dc9c:	bl	4454 <readstat_write_bytes@plt>
   1dca0:	cmp	r0, #0
   1dca4:	bne	1dcc4 <dta_write_chunk+0x58>
   1dca8:	ldrb	r3, [r4, #192]	; 0xc0
   1dcac:	tst	r3, #4
   1dcb0:	popeq	{r4, r5, r6, r7, r8, pc}
   1dcb4:	mov	r1, r8
   1dcb8:	mov	r0, r5
   1dcbc:	pop	{r4, r5, r6, r7, r8, lr}
   1dcc0:	b	4154 <readstat_write_string@plt>
   1dcc4:	pop	{r4, r5, r6, r7, r8, pc}
   1dcc8:	mov	r1, r2
   1dccc:	bl	4154 <readstat_write_string@plt>
   1dcd0:	cmp	r0, #0
   1dcd4:	popne	{r4, r5, r6, r7, r8, pc}
   1dcd8:	b	1dc90 <dta_write_chunk+0x24>

0001dcdc <dta_113_write_missing_tagged>:
   1dcdc:	sub	r3, r2, #97	; 0x61
   1dce0:	mov	ip, r0
   1dce4:	uxtb	r0, r3
   1dce8:	cmp	r0, #25
   1dcec:	movhi	r3, #21
   1dcf0:	bls	1dcfc <dta_113_write_missing_tagged+0x20>
   1dcf4:	mov	r0, r3
   1dcf8:	bx	lr
   1dcfc:	ldr	r1, [r1]
   1dd00:	cmp	r1, #1
   1dd04:	addeq	r2, r2, #5
   1dd08:	strbeq	r2, [ip]
   1dd0c:	moveq	r3, #0
   1dd10:	beq	1dcf4 <dta_113_write_missing_tagged+0x18>
   1dd14:	cmp	r1, #2
   1dd18:	beq	1dd80 <dta_113_write_missing_tagged+0xa4>
   1dd1c:	cmp	r1, #3
   1dd20:	beq	1dd94 <dta_113_write_missing_tagged+0xb8>
   1dd24:	cmp	r1, #4
   1dd28:	beq	1dda8 <dta_113_write_missing_tagged+0xcc>
   1dd2c:	cmp	r1, #5
   1dd30:	movne	r3, #23
   1dd34:	bne	1dcf4 <dta_113_write_missing_tagged+0x18>
   1dd38:	push	{r4, r5}
   1dd3c:	mov	r0, #0
   1dd40:	add	r5, pc, #120	; 0x78
   1dd44:	ldrd	r4, [r5]
   1dd48:	lsl	r1, r3, #8
   1dd4c:	sub	sp, sp, #8
   1dd50:	adds	r4, r4, r0
   1dd54:	adc	r5, r5, r1
   1dd58:	add	r2, sp, #8
   1dd5c:	mov	r3, r0
   1dd60:	strd	r4, [r2, #-8]!
   1dd64:	ldm	r2!, {r0, r1}
   1dd68:	str	r0, [ip]
   1dd6c:	str	r1, [ip, #4]
   1dd70:	mov	r0, r3
   1dd74:	add	sp, sp, #8
   1dd78:	pop	{r4, r5}
   1dd7c:	bx	lr
   1dd80:	add	r2, r2, #32512	; 0x7f00
   1dd84:	add	r2, r2, #133	; 0x85
   1dd88:	strh	r2, [ip]
   1dd8c:	mov	r3, #0
   1dd90:	b	1dcf4 <dta_113_write_missing_tagged+0x18>
   1dd94:	add	r2, r2, #-2147483648	; 0x80000000
   1dd98:	sub	r2, r2, #123	; 0x7b
   1dd9c:	str	r2, [ip]
   1dda0:	mov	r3, #0
   1dda4:	b	1dcf4 <dta_113_write_missing_tagged+0x18>
   1dda8:	lsl	r3, r3, #11
   1ddac:	add	r3, r3, #2130706432	; 0x7f000000
   1ddb0:	add	r3, r3, #2048	; 0x800
   1ddb4:	str	r3, [ip]
   1ddb8:	mov	r3, #0
   1ddbc:	b	1dcf4 <dta_113_write_missing_tagged+0x18>
   1ddc0:	.word	0x00000000
   1ddc4:	.word	0x7fe00100

0001ddc8 <dta_old_write_missing_numeric>:
   1ddc8:	ldr	r3, [r1]
   1ddcc:	mov	r2, r0
   1ddd0:	cmp	r3, #1
   1ddd4:	moveq	r3, #127	; 0x7f
   1ddd8:	strbeq	r3, [r0]
   1dddc:	beq	1de18 <dta_old_write_missing_numeric+0x50>
   1dde0:	cmp	r3, #2
   1dde4:	ldrheq	r3, [pc, #96]	; 1de4c <dta_old_write_missing_numeric+0x84>
   1dde8:	strheq	r3, [r0]
   1ddec:	beq	1de18 <dta_old_write_missing_numeric+0x50>
   1ddf0:	cmp	r3, #3
   1ddf4:	mvneq	r3, #-2147483648	; 0x80000000
   1ddf8:	streq	r3, [r0]
   1ddfc:	beq	1de18 <dta_old_write_missing_numeric+0x50>
   1de00:	cmp	r3, #4
   1de04:	moveq	r3, #2130706432	; 0x7f000000
   1de08:	streq	r3, [r0]
   1de0c:	beq	1de18 <dta_old_write_missing_numeric+0x50>
   1de10:	cmp	r3, #5
   1de14:	beq	1de20 <dta_old_write_missing_numeric+0x58>
   1de18:	mov	r0, #0
   1de1c:	bx	lr
   1de20:	sub	sp, sp, #8
   1de24:	ldr	r1, [pc, #36]	; 1de50 <dta_old_write_missing_numeric+0x88>
   1de28:	add	r3, sp, #8
   1de2c:	mov	r0, #0
   1de30:	strd	r0, [r3, #-8]!
   1de34:	ldm	r3!, {r0, r1}
   1de38:	str	r0, [r2]
   1de3c:	str	r1, [r2, #4]
   1de40:	mov	r0, #0
   1de44:	add	sp, sp, #8
   1de48:	bx	lr
   1de4c:	.word	0x00007fff
   1de50:	.word	0x7fe00000

0001de54 <dta_end_data>:
   1de54:	ldr	r3, [r0, #308]	; 0x134
   1de58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1de5c:	cmp	r3, #0
   1de60:	sub	sp, sp, #76	; 0x4c
   1de64:	moveq	r5, #14
   1de68:	bne	1de78 <dta_end_data+0x24>
   1de6c:	mov	r0, r5
   1de70:	add	sp, sp, #76	; 0x4c
   1de74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1de78:	ldr	r9, [r0, #300]	; 0x12c
   1de7c:	mov	r4, r0
   1de80:	ldrb	r3, [r9, #192]	; 0xc0
   1de84:	tst	r3, #4
   1de88:	bne	1e0d4 <dta_end_data+0x280>
   1de8c:	ldr	r6, [r9, #100]	; 0x64
   1de90:	cmp	r6, #2
   1de94:	beq	1e22c <dta_end_data+0x3d8>
   1de98:	ldr	r3, [r9, #108]	; 0x6c
   1de9c:	ldr	r1, [r9, #104]	; 0x68
   1dea0:	mov	r0, #1
   1dea4:	add	r1, r1, r3
   1dea8:	bl	3d58 <calloc@plt>
   1deac:	ldrb	r3, [r9, #192]	; 0xc0
   1deb0:	tst	r3, #4
   1deb4:	str	r0, [sp]
   1deb8:	bne	1e454 <dta_end_data+0x600>
   1debc:	ldr	r3, [r4, #40]	; 0x28
   1dec0:	cmp	r3, #0
   1dec4:	ble	1e5cc <dta_end_data+0x778>
   1dec8:	ldr	r3, [pc, #1876]	; 1e624 <dta_end_data+0x7d0>
   1decc:	mov	r8, #0
   1ded0:	add	r3, pc, r3
   1ded4:	str	r3, [sp, #28]
   1ded8:	ldr	r3, [pc, #1864]	; 1e628 <dta_end_data+0x7d4>
   1dedc:	mov	fp, r8
   1dee0:	add	r3, pc, r3
   1dee4:	str	r3, [sp, #24]
   1dee8:	ldr	r3, [pc, #1852]	; 1e62c <dta_end_data+0x7d8>
   1deec:	str	r8, [sp, #8]
   1def0:	add	r3, pc, r3
   1def4:	str	r3, [sp, #36]	; 0x24
   1def8:	ldr	r3, [pc, #1840]	; 1e630 <dta_end_data+0x7dc>
   1defc:	str	r8, [sp, #12]
   1df00:	add	r3, pc, r3
   1df04:	str	r3, [sp, #32]
   1df08:	add	r3, sp, #52	; 0x34
   1df0c:	str	r3, [sp, #16]
   1df10:	str	r9, [sp, #4]
   1df14:	ldr	r1, [sp, #12]
   1df18:	mov	r0, r4
   1df1c:	bl	4424 <readstat_get_label_set@plt>
   1df20:	mov	r2, #0
   1df24:	ldr	r3, [r0, #264]	; 0x108
   1df28:	mov	r7, r0
   1df2c:	cmp	r3, r2
   1df30:	str	r2, [sp, #48]	; 0x30
   1df34:	str	r3, [sp, #44]	; 0x2c
   1df38:	movgt	r5, #0
   1df3c:	ble	1df70 <dta_end_data+0x11c>
   1df40:	mov	r1, r5
   1df44:	mov	r0, r7
   1df48:	bl	44cc <readstat_get_value_label@plt>
   1df4c:	ldr	r2, [sp, #44]	; 0x2c
   1df50:	ldr	r3, [sp, #48]	; 0x30
   1df54:	add	r5, r5, #1
   1df58:	cmp	r5, r2
   1df5c:	add	r3, r3, #1
   1df60:	ldr	r2, [r0, #28]
   1df64:	add	r3, r3, r2
   1df68:	str	r3, [sp, #48]	; 0x30
   1df6c:	blt	1df40 <dta_end_data+0xec>
   1df70:	ldr	r3, [sp, #4]
   1df74:	ldrb	r3, [r3, #192]	; 0xc0
   1df78:	tst	r3, #4
   1df7c:	bne	1e47c <dta_end_data+0x628>
   1df80:	ldr	r1, [sp, #44]	; 0x2c
   1df84:	ldr	r3, [sp, #48]	; 0x30
   1df88:	add	r1, r1, #1
   1df8c:	mov	r2, #4
   1df90:	add	r3, r3, r1, lsl #3
   1df94:	mov	r0, r4
   1df98:	ldr	r1, [sp, #16]
   1df9c:	str	r3, [sp, #52]	; 0x34
   1dfa0:	bl	4454 <readstat_write_bytes@plt>
   1dfa4:	ldr	r9, [sp, #4]
   1dfa8:	cmp	r0, #0
   1dfac:	bne	1e448 <dta_end_data+0x5f4>
   1dfb0:	ldr	r5, [r9, #104]	; 0x68
   1dfb4:	ldr	r6, [sp]
   1dfb8:	add	r1, r7, #4
   1dfbc:	mov	r2, r5
   1dfc0:	mov	r0, r6
   1dfc4:	bl	42bc <strncpy@plt>
   1dfc8:	ldr	r2, [r9, #108]	; 0x6c
   1dfcc:	mov	r1, r6
   1dfd0:	add	r2, r5, r2
   1dfd4:	mov	r0, r4
   1dfd8:	bl	4454 <readstat_write_bytes@plt>
   1dfdc:	subs	r3, r0, #0
   1dfe0:	str	r3, [sp, #20]
   1dfe4:	bne	1e5bc <dta_end_data+0x768>
   1dfe8:	ldr	r3, [sp, #48]	; 0x30
   1dfec:	cmp	r3, #0
   1dff0:	bne	1e2cc <dta_end_data+0x478>
   1dff4:	add	r6, sp, #48	; 0x30
   1dff8:	mov	r1, r6
   1dffc:	mov	r2, #4
   1e000:	mov	r0, r4
   1e004:	bl	4454 <readstat_write_bytes@plt>
   1e008:	cmp	r0, #0
   1e00c:	bne	1e444 <dta_end_data+0x5f0>
   1e010:	mov	r1, r6
   1e014:	mov	r2, #4
   1e018:	mov	r0, r4
   1e01c:	bl	4454 <readstat_write_bytes@plt>
   1e020:	cmp	r0, #0
   1e024:	bne	1e444 <dta_end_data+0x5f0>
   1e028:	ldrb	r3, [r9, #192]	; 0xc0
   1e02c:	tst	r3, #4
   1e030:	bne	1e4a4 <dta_end_data+0x650>
   1e034:	ldr	r2, [sp, #12]
   1e038:	ldr	r3, [r4, #40]	; 0x28
   1e03c:	add	r2, r2, #1
   1e040:	cmp	r2, r3
   1e044:	str	r2, [sp, #12]
   1e048:	blt	1df14 <dta_end_data+0xc0>
   1e04c:	ldr	r9, [sp, #4]
   1e050:	mov	r6, fp
   1e054:	ldrb	r3, [r9, #192]	; 0xc0
   1e058:	tst	r3, #4
   1e05c:	ldreq	r5, [sp, #20]
   1e060:	bne	1e5e8 <dta_end_data+0x794>
   1e064:	ldr	r0, [sp, #8]
   1e068:	cmp	r0, #0
   1e06c:	beq	1e074 <dta_end_data+0x220>
   1e070:	bl	3ec0 <free@plt>
   1e074:	cmp	r6, #0
   1e078:	beq	1e084 <dta_end_data+0x230>
   1e07c:	mov	r0, r6
   1e080:	bl	3ec0 <free@plt>
   1e084:	cmp	r8, #0
   1e088:	beq	1e094 <dta_end_data+0x240>
   1e08c:	mov	r0, r8
   1e090:	bl	3ec0 <free@plt>
   1e094:	ldr	r3, [sp]
   1e098:	cmp	r3, #0
   1e09c:	beq	1e0a8 <dta_end_data+0x254>
   1e0a0:	ldr	r0, [sp]
   1e0a4:	bl	3ec0 <free@plt>
   1e0a8:	cmp	r5, #0
   1e0ac:	bne	1de6c <dta_end_data+0x18>
   1e0b0:	ldrb	r3, [r9, #192]	; 0xc0
   1e0b4:	tst	r3, #4
   1e0b8:	beq	1de6c <dta_end_data+0x18>
   1e0bc:	ldr	r1, [pc, #1392]	; 1e634 <dta_end_data+0x7e0>
   1e0c0:	mov	r0, r4
   1e0c4:	add	r1, pc, r1
   1e0c8:	bl	4154 <readstat_write_string@plt>
   1e0cc:	mov	r5, r0
   1e0d0:	b	1de6c <dta_end_data+0x18>
   1e0d4:	ldr	r1, [pc, #1372]	; 1e638 <dta_end_data+0x7e4>
   1e0d8:	add	r1, pc, r1
   1e0dc:	bl	4154 <readstat_write_string@plt>
   1e0e0:	subs	r5, r0, #0
   1e0e4:	bne	1de6c <dta_end_data+0x18>
   1e0e8:	ldrb	r3, [r9, #192]	; 0xc0
   1e0ec:	tst	r3, #4
   1e0f0:	beq	1de8c <dta_end_data+0x38>
   1e0f4:	ldr	r1, [pc, #1344]	; 1e63c <dta_end_data+0x7e8>
   1e0f8:	mov	r0, r4
   1e0fc:	add	r1, pc, r1
   1e100:	bl	4154 <readstat_write_string@plt>
   1e104:	subs	r5, r0, #0
   1e108:	bne	1de6c <dta_end_data+0x18>
   1e10c:	ldr	r3, [r4, #64]	; 0x40
   1e110:	cmp	r3, #0
   1e114:	ble	1e608 <dta_end_data+0x7b4>
   1e118:	ldr	fp, [pc, #1312]	; 1e640 <dta_end_data+0x7ec>
   1e11c:	mov	r6, r5
   1e120:	add	fp, pc, fp
   1e124:	add	r7, sp, #52	; 0x34
   1e128:	mov	r8, #13
   1e12c:	b	1e1b4 <dta_end_data+0x360>
   1e130:	ldr	r0, [sl]
   1e134:	ldr	r3, [sl, #8]
   1e138:	mvn	r2, #125	; 0x7d
   1e13c:	ldr	ip, [sl, #12]
   1e140:	strb	r2, [sp, #64]	; 0x40
   1e144:	ldrb	r2, [sl, #16]
   1e148:	ldrb	r1, [sl, #17]
   1e14c:	str	r0, [sp, #52]	; 0x34
   1e150:	ldrb	r0, [sl, #18]
   1e154:	str	r3, [sp, #56]	; 0x38
   1e158:	ldrb	r3, [sl, #19]
   1e15c:	strb	r2, [sp, #65]	; 0x41
   1e160:	strb	r1, [sp, #66]	; 0x42
   1e164:	strb	r0, [sp, #67]	; 0x43
   1e168:	mov	r2, #17
   1e16c:	mov	r1, r7
   1e170:	mov	r0, r4
   1e174:	str	ip, [sp, #60]	; 0x3c
   1e178:	strb	r3, [sp, #68]	; 0x44
   1e17c:	bl	4454 <readstat_write_bytes@plt>
   1e180:	mov	r5, r0
   1e184:	cmp	r5, #0
   1e188:	add	r1, sl, #20
   1e18c:	mov	r0, r4
   1e190:	add	r6, r6, #1
   1e194:	bne	1de6c <dta_end_data+0x18>
   1e198:	ldr	r2, [sl, #16]
   1e19c:	bl	4454 <readstat_write_bytes@plt>
   1e1a0:	subs	r5, r0, #0
   1e1a4:	bne	1de6c <dta_end_data+0x18>
   1e1a8:	ldr	r3, [r4, #64]	; 0x40
   1e1ac:	cmp	r6, r3
   1e1b0:	bge	1e608 <dta_end_data+0x7b4>
   1e1b4:	ldr	r3, [r4, #60]	; 0x3c
   1e1b8:	mov	r1, fp
   1e1bc:	mov	r0, r4
   1e1c0:	ldr	sl, [r3, r6, lsl #2]
   1e1c4:	bl	4154 <readstat_write_string@plt>
   1e1c8:	mov	r2, r8
   1e1cc:	mov	r1, r7
   1e1d0:	subs	r5, r0, #0
   1e1d4:	mov	r0, r4
   1e1d8:	bne	1de6c <dta_end_data+0x18>
   1e1dc:	ldr	r3, [r9, #116]	; 0x74
   1e1e0:	cmp	r3, #4
   1e1e4:	bhi	1e130 <dta_end_data+0x2dc>
   1e1e8:	mvn	r3, #125	; 0x7d
   1e1ec:	ldr	lr, [sl]
   1e1f0:	ldr	ip, [sl, #8]
   1e1f4:	strb	r3, [sp, #60]	; 0x3c
   1e1f8:	ldrb	r3, [sl, #16]
   1e1fc:	str	lr, [sp, #52]	; 0x34
   1e200:	ldrb	lr, [sl, #17]
   1e204:	str	ip, [sp, #56]	; 0x38
   1e208:	ldrb	ip, [sl, #18]
   1e20c:	strb	r3, [sp, #61]	; 0x3d
   1e210:	ldrb	r3, [sl, #19]
   1e214:	strb	lr, [sp, #62]	; 0x3e
   1e218:	strb	ip, [sp, #63]	; 0x3f
   1e21c:	strb	r3, [sp, #64]	; 0x40
   1e220:	bl	4454 <readstat_write_bytes@plt>
   1e224:	mov	r5, r0
   1e228:	b	1e184 <dta_end_data+0x330>
   1e22c:	ldr	r3, [r4, #40]	; 0x28
   1e230:	cmp	r3, #0
   1e234:	ble	1e600 <dta_end_data+0x7ac>
   1e238:	mov	r7, #0
   1e23c:	str	r6, [sp, #4]
   1e240:	mov	r8, r7
   1e244:	add	r6, sp, #52	; 0x34
   1e248:	add	r3, sp, #48	; 0x30
   1e24c:	str	r3, [sp]
   1e250:	mov	r1, r8
   1e254:	mov	r0, r4
   1e258:	bl	4424 <readstat_get_label_set@plt>
   1e25c:	mov	sl, #0
   1e260:	ldr	r3, [r0, #264]	; 0x108
   1e264:	mov	fp, r0
   1e268:	cmp	r3, #0
   1e26c:	ble	1e4bc <dta_end_data+0x668>
   1e270:	mov	r5, sl
   1e274:	b	1e298 <dta_end_data+0x444>
   1e278:	ldr	r3, [r0, #8]
   1e27c:	cmp	r3, #1024	; 0x400
   1e280:	bhi	1e5b4 <dta_end_data+0x760>
   1e284:	ldr	r2, [fp, #264]	; 0x108
   1e288:	cmp	sl, r3
   1e28c:	movlt	sl, r3
   1e290:	cmp	r5, r2
   1e294:	bge	1e4bc <dta_end_data+0x668>
   1e298:	mov	r1, r5
   1e29c:	mov	r0, fp
   1e2a0:	bl	44cc <readstat_get_value_label@plt>
   1e2a4:	add	r5, r5, #1
   1e2a8:	ldrb	r3, [r0, #12]
   1e2ac:	cmp	r3, #0
   1e2b0:	beq	1e278 <dta_end_data+0x424>
   1e2b4:	mov	r5, #23
   1e2b8:	cmp	r7, #0
   1e2bc:	beq	1e0a8 <dta_end_data+0x254>
   1e2c0:	mov	r0, r7
   1e2c4:	bl	3ec0 <free@plt>
   1e2c8:	b	1e0a8 <dta_end_data+0x254>
   1e2cc:	ldr	r1, [sp, #44]	; 0x2c
   1e2d0:	ldr	r0, [sp, #8]
   1e2d4:	lsl	r1, r1, #2
   1e2d8:	bl	3ff8 <realloc@plt>
   1e2dc:	ldr	r1, [sp, #44]	; 0x2c
   1e2e0:	lsl	r1, r1, #2
   1e2e4:	str	r0, [sp, #8]
   1e2e8:	mov	r0, fp
   1e2ec:	bl	3ff8 <realloc@plt>
   1e2f0:	ldr	r1, [sp, #48]	; 0x30
   1e2f4:	mov	fp, r0
   1e2f8:	mov	r0, r8
   1e2fc:	bl	3ff8 <realloc@plt>
   1e300:	ldr	r1, [sp, #24]
   1e304:	mov	r8, r0
   1e308:	mov	r0, r7
   1e30c:	bl	3dac <readstat_sort_label_set@plt>
   1e310:	ldr	r3, [sp, #44]	; 0x2c
   1e314:	cmp	r3, #0
   1e318:	ble	1e3a0 <dta_end_data+0x54c>
   1e31c:	ldr	r3, [sp, #8]
   1e320:	mov	r5, #0
   1e324:	sub	sl, r3, #4
   1e328:	ldr	r9, [sp, #20]
   1e32c:	b	1e36c <dta_end_data+0x518>
   1e330:	ldr	r2, [r4, #8]
   1e334:	cmp	r2, #112	; 0x70
   1e338:	ble	1e494 <dta_end_data+0x640>
   1e33c:	str	r3, [fp, r9, lsl #2]
   1e340:	mov	r2, r6
   1e344:	add	r0, r8, r5
   1e348:	bl	3f20 <memcpy@plt>
   1e34c:	ldr	r3, [sp, #44]	; 0x2c
   1e350:	add	r6, r6, r5
   1e354:	add	r9, r9, #1
   1e358:	cmp	r9, r3
   1e35c:	mov	r3, #0
   1e360:	strb	r3, [r8, r6]
   1e364:	add	r5, r6, #1
   1e368:	bge	1e3a0 <dta_end_data+0x54c>
   1e36c:	mov	r1, r9
   1e370:	mov	r0, r7
   1e374:	bl	44cc <readstat_get_value_label@plt>
   1e378:	ldr	r1, [r0, #24]
   1e37c:	ldr	r6, [r0, #28]
   1e380:	str	r5, [sl, #4]!
   1e384:	ldrb	r2, [r0, #12]
   1e388:	add	r3, r2, #-2147483648	; 0x80000000
   1e38c:	cmp	r2, #0
   1e390:	sub	r3, r3, #123	; 0x7b
   1e394:	bne	1e330 <dta_end_data+0x4dc>
   1e398:	ldr	r3, [r0, #8]
   1e39c:	b	1e33c <dta_end_data+0x4e8>
   1e3a0:	mov	r2, #4
   1e3a4:	add	r1, sp, #44	; 0x2c
   1e3a8:	mov	r0, r4
   1e3ac:	bl	4454 <readstat_write_bytes@plt>
   1e3b0:	cmp	r0, #0
   1e3b4:	bne	1e444 <dta_end_data+0x5f0>
   1e3b8:	mov	r2, #4
   1e3bc:	add	r1, sp, #48	; 0x30
   1e3c0:	mov	r0, r4
   1e3c4:	bl	4454 <readstat_write_bytes@plt>
   1e3c8:	cmp	r0, #0
   1e3cc:	bne	1e444 <dta_end_data+0x5f0>
   1e3d0:	ldr	r2, [sp, #44]	; 0x2c
   1e3d4:	ldr	r1, [sp, #8]
   1e3d8:	mov	r0, r4
   1e3dc:	lsl	r2, r2, #2
   1e3e0:	bl	4454 <readstat_write_bytes@plt>
   1e3e4:	cmp	r0, #0
   1e3e8:	bne	1e444 <dta_end_data+0x5f0>
   1e3ec:	ldr	r2, [sp, #44]	; 0x2c
   1e3f0:	mov	r1, fp
   1e3f4:	mov	r0, r4
   1e3f8:	lsl	r2, r2, #2
   1e3fc:	bl	4454 <readstat_write_bytes@plt>
   1e400:	cmp	r0, #0
   1e404:	bne	1e444 <dta_end_data+0x5f0>
   1e408:	ldr	r2, [sp, #48]	; 0x30
   1e40c:	mov	r1, r8
   1e410:	mov	r0, r4
   1e414:	bl	4454 <readstat_write_bytes@plt>
   1e418:	cmp	r0, #0
   1e41c:	bne	1e444 <dta_end_data+0x5f0>
   1e420:	ldr	r3, [sp, #4]
   1e424:	ldrb	r3, [r3, #192]	; 0xc0
   1e428:	tst	r3, #4
   1e42c:	beq	1e034 <dta_end_data+0x1e0>
   1e430:	ldr	r1, [sp, #36]	; 0x24
   1e434:	mov	r0, r4
   1e438:	bl	4154 <readstat_write_string@plt>
   1e43c:	cmp	r0, #0
   1e440:	beq	1e034 <dta_end_data+0x1e0>
   1e444:	ldr	r9, [sp, #4]
   1e448:	mov	r6, fp
   1e44c:	mov	r5, r0
   1e450:	b	1e064 <dta_end_data+0x210>
   1e454:	ldr	r1, [pc, #488]	; 1e644 <dta_end_data+0x7f0>
   1e458:	mov	r0, r4
   1e45c:	add	r1, pc, r1
   1e460:	bl	4154 <readstat_write_string@plt>
   1e464:	subs	r5, r0, #0
   1e468:	beq	1debc <dta_end_data+0x68>
   1e46c:	ldr	r3, [sp]
   1e470:	cmp	r3, #0
   1e474:	bne	1e0a0 <dta_end_data+0x24c>
   1e478:	b	1de6c <dta_end_data+0x18>
   1e47c:	ldr	r1, [sp, #28]
   1e480:	mov	r0, r4
   1e484:	bl	4154 <readstat_write_string@plt>
   1e488:	cmp	r0, #0
   1e48c:	beq	1df80 <dta_end_data+0x12c>
   1e490:	b	1e444 <dta_end_data+0x5f0>
   1e494:	ldr	r9, [sp, #4]
   1e498:	mov	r6, fp
   1e49c:	mov	r5, #23
   1e4a0:	b	1e064 <dta_end_data+0x210>
   1e4a4:	ldr	r1, [sp, #32]
   1e4a8:	mov	r0, r4
   1e4ac:	bl	4154 <readstat_write_string@plt>
   1e4b0:	cmp	r0, #0
   1e4b4:	bne	1e444 <dta_end_data+0x5f0>
   1e4b8:	b	1e034 <dta_end_data+0x1e0>
   1e4bc:	add	r3, sl, #1
   1e4c0:	ldr	r2, [sp, #4]
   1e4c4:	lsl	r3, r3, #3
   1e4c8:	ldr	r1, [sp]
   1e4cc:	mov	r0, r4
   1e4d0:	strh	r3, [sp, #48]	; 0x30
   1e4d4:	bl	4454 <readstat_write_bytes@plt>
   1e4d8:	subs	r5, r0, #0
   1e4dc:	bne	1e2b8 <dta_end_data+0x464>
   1e4e0:	str	r5, [r6]
   1e4e4:	str	r5, [r6, #4]
   1e4e8:	str	r5, [r6, #8]
   1e4ec:	strh	r5, [r6, #12]
   1e4f0:	ldr	r5, [r9, #104]	; 0x68
   1e4f4:	add	r1, fp, #4
   1e4f8:	mov	r2, r5
   1e4fc:	mov	r0, r6
   1e500:	bl	42bc <strncpy@plt>
   1e504:	ldr	r2, [r9, #108]	; 0x6c
   1e508:	mov	r1, r6
   1e50c:	add	r2, r5, r2
   1e510:	mov	r0, r4
   1e514:	bl	4454 <readstat_write_bytes@plt>
   1e518:	subs	r5, r0, #0
   1e51c:	bne	1e2b8 <dta_end_data+0x464>
   1e520:	ldrsh	sl, [sp, #48]	; 0x30
   1e524:	mov	r0, r7
   1e528:	mov	r1, sl
   1e52c:	bl	3ff8 <realloc@plt>
   1e530:	mov	r2, sl
   1e534:	mov	r1, #0
   1e538:	mov	r7, r0
   1e53c:	bl	42a4 <memset@plt>
   1e540:	ldr	r3, [fp, #264]	; 0x108
   1e544:	cmp	r3, #0
   1e548:	ble	1e588 <dta_end_data+0x734>
   1e54c:	mov	r1, r5
   1e550:	mov	r0, fp
   1e554:	bl	44cc <readstat_get_value_label@plt>
   1e558:	add	r5, r5, #1
   1e55c:	mov	r3, r0
   1e560:	ldr	r2, [r0, #28]
   1e564:	ldr	r0, [r0, #8]
   1e568:	cmp	r2, #8
   1e56c:	movcs	r2, #8
   1e570:	ldr	r1, [r3, #24]
   1e574:	add	r0, r7, r0, lsl #3
   1e578:	bl	3f20 <memcpy@plt>
   1e57c:	ldr	r3, [fp, #264]	; 0x108
   1e580:	cmp	r5, r3
   1e584:	blt	1e54c <dta_end_data+0x6f8>
   1e588:	ldrsh	r2, [sp, #48]	; 0x30
   1e58c:	mov	r1, r7
   1e590:	mov	r0, r4
   1e594:	bl	4454 <readstat_write_bytes@plt>
   1e598:	subs	r5, r0, #0
   1e59c:	bne	1e2b8 <dta_end_data+0x464>
   1e5a0:	ldr	r3, [r4, #40]	; 0x28
   1e5a4:	add	r8, r8, #1
   1e5a8:	cmp	r8, r3
   1e5ac:	blt	1e250 <dta_end_data+0x3fc>
   1e5b0:	b	1e2c0 <dta_end_data+0x46c>
   1e5b4:	mov	r5, #20
   1e5b8:	b	1e2b8 <dta_end_data+0x464>
   1e5bc:	ldr	r9, [sp, #4]
   1e5c0:	mov	r6, fp
   1e5c4:	ldr	r5, [sp, #20]
   1e5c8:	b	1e064 <dta_end_data+0x210>
   1e5cc:	ldrb	r3, [r9, #192]	; 0xc0
   1e5d0:	ands	r3, r3, #4
   1e5d4:	moveq	r5, r3
   1e5d8:	beq	1e094 <dta_end_data+0x240>
   1e5dc:	mov	r8, #0
   1e5e0:	mov	r6, r8
   1e5e4:	str	r8, [sp, #8]
   1e5e8:	ldr	r1, [pc, #88]	; 1e648 <dta_end_data+0x7f4>
   1e5ec:	mov	r0, r4
   1e5f0:	add	r1, pc, r1
   1e5f4:	bl	4154 <readstat_write_string@plt>
   1e5f8:	mov	r5, r0
   1e5fc:	b	1e064 <dta_end_data+0x210>
   1e600:	mov	r5, #0
   1e604:	b	1e0b0 <dta_end_data+0x25c>
   1e608:	ldr	r1, [pc, #60]	; 1e64c <dta_end_data+0x7f8>
   1e60c:	mov	r0, r4
   1e610:	add	r1, pc, r1
   1e614:	bl	4154 <readstat_write_string@plt>
   1e618:	subs	r5, r0, #0
   1e61c:	bne	1de6c <dta_end_data+0x18>
   1e620:	b	1de8c <dta_end_data+0x38>
   1e624:	.word	0x00008840
   1e628:	.word	0xfffffca8
   1e62c:	.word	0x00008828
   1e630:	.word	0x00008818
   1e634:	.word	0x000086d0
   1e638:	.word	0x000085e8
   1e63c:	.word	0x000085a4
   1e640:	.word	0x00008588
   1e644:	.word	0x000082a4
   1e648:	.word	0x00008194
   1e64c:	.word	0x00008168

0001e650 <dta_118_write_string_ref>:
   1e650:	cmp	r2, #0
   1e654:	beq	1e6b8 <dta_118_write_string_ref+0x68>
   1e658:	ldr	r3, [r2]
   1e65c:	push	{r4, r5, r6, lr}
   1e660:	sub	sp, sp, #8
   1e664:	ldr	r6, [r2, #8]
   1e668:	ldr	r5, [r2, #12]
   1e66c:	strh	r3, [r0]
   1e670:	mov	r4, r0
   1e674:	str	r5, [sp, #4]
   1e678:	str	r6, [sp]
   1e67c:	bl	3eb4 <machine_is_little_endian@plt>
   1e680:	mov	r3, #0
   1e684:	cmp	r0, #0
   1e688:	lsleq	r5, r5, #16
   1e68c:	orreq	r5, r5, r6, lsr #16
   1e690:	streq	r5, [sp, #4]
   1e694:	lsleq	r6, r6, #16
   1e698:	ldrh	r2, [sp, #4]
   1e69c:	streq	r6, [sp]
   1e6a0:	ldr	r0, [sp]
   1e6a4:	strh	r2, [r4, #6]
   1e6a8:	str	r0, [r4, #2]
   1e6ac:	mov	r0, r3
   1e6b0:	add	sp, sp, #8
   1e6b4:	pop	{r4, r5, r6, pc}
   1e6b8:	mov	r3, #34	; 0x22
   1e6bc:	mov	r0, r3
   1e6c0:	bx	lr

0001e6c4 <dta_emit_header_time_stamp.part.22>:
   1e6c4:	push	{r4, r5, r6, r7, r8, r9, lr}
   1e6c8:	mov	r7, r0
   1e6cc:	sub	sp, sp, #76	; 0x4c
   1e6d0:	ldr	r3, [r7, #20]
   1e6d4:	add	r0, sp, #72	; 0x48
   1e6d8:	mov	r6, r1
   1e6dc:	str	r3, [r0, #-52]!	; 0xffffffcc
   1e6e0:	bl	4160 <localtime@plt>
   1e6e4:	ldr	r9, [r6, #16]
   1e6e8:	add	r5, sp, #24
   1e6ec:	mov	r1, r9
   1e6f0:	mov	r4, r0
   1e6f4:	mov	r0, #1
   1e6f8:	bl	3d58 <calloc@plt>
   1e6fc:	ldr	lr, [pc, #308]	; 1e838 <dta_emit_header_time_stamp.part.22+0x174>
   1e700:	mov	ip, r5
   1e704:	add	lr, pc, lr
   1e708:	cmp	r4, #0
   1e70c:	moveq	r4, #39	; 0x27
   1e710:	mov	r8, r0
   1e714:	ldm	lr!, {r0, r1, r2, r3}
   1e718:	stmia	ip!, {r0, r1, r2, r3}
   1e71c:	ldm	lr!, {r0, r1, r2, r3}
   1e720:	stmia	ip!, {r0, r1, r2, r3}
   1e724:	ldm	lr, {r0, r1, r2, r3}
   1e728:	stm	ip, {r0, r1, r2, r3}
   1e72c:	beq	1e794 <dta_emit_header_time_stamp.part.22+0xd0>
   1e730:	cmp	r8, #0
   1e734:	moveq	r4, #3
   1e738:	beq	1e794 <dta_emit_header_time_stamp.part.22+0xd0>
   1e73c:	ldr	r2, [r4, #4]
   1e740:	ldr	r3, [r4, #12]
   1e744:	str	r2, [sp, #12]
   1e748:	ldr	r2, [r4, #8]
   1e74c:	mov	r1, r9
   1e750:	str	r2, [sp, #8]
   1e754:	ldr	r2, [r4, #20]
   1e758:	mov	r0, r8
   1e75c:	add	r2, r2, #1888	; 0x760
   1e760:	add	r2, r2, #12
   1e764:	str	r2, [sp, #4]
   1e768:	ldr	ip, [r4, #16]
   1e76c:	ldr	r2, [pc, #200]	; 1e83c <dta_emit_header_time_stamp.part.22+0x178>
   1e770:	add	r5, r5, ip, lsl #2
   1e774:	add	r2, pc, r2
   1e778:	str	r5, [sp]
   1e77c:	bl	4280 <snprintf@plt>
   1e780:	uxtb	r0, r0
   1e784:	cmp	r0, #0
   1e788:	strb	r0, [sp, #19]
   1e78c:	moveq	r4, #13
   1e790:	bne	1e7a8 <dta_emit_header_time_stamp.part.22+0xe4>
   1e794:	mov	r0, r8
   1e798:	bl	3ec0 <free@plt>
   1e79c:	mov	r0, r4
   1e7a0:	add	sp, sp, #76	; 0x4c
   1e7a4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1e7a8:	ldrb	r3, [r6, #192]	; 0xc0
   1e7ac:	tst	r3, #4
   1e7b0:	beq	1e820 <dta_emit_header_time_stamp.part.22+0x15c>
   1e7b4:	ldr	r1, [pc, #132]	; 1e840 <dta_emit_header_time_stamp.part.22+0x17c>
   1e7b8:	mov	r0, r7
   1e7bc:	add	r1, pc, r1
   1e7c0:	bl	4154 <readstat_write_string@plt>
   1e7c4:	subs	r4, r0, #0
   1e7c8:	bne	1e794 <dta_emit_header_time_stamp.part.22+0xd0>
   1e7cc:	mov	r2, #1
   1e7d0:	add	r1, sp, #19
   1e7d4:	mov	r0, r7
   1e7d8:	bl	4454 <readstat_write_bytes@plt>
   1e7dc:	subs	r4, r0, #0
   1e7e0:	bne	1e794 <dta_emit_header_time_stamp.part.22+0xd0>
   1e7e4:	ldrb	r2, [sp, #19]
   1e7e8:	mov	r1, r8
   1e7ec:	mov	r0, r7
   1e7f0:	bl	4454 <readstat_write_bytes@plt>
   1e7f4:	subs	r4, r0, #0
   1e7f8:	bne	1e794 <dta_emit_header_time_stamp.part.22+0xd0>
   1e7fc:	ldrb	r3, [r6, #192]	; 0xc0
   1e800:	tst	r3, #4
   1e804:	beq	1e794 <dta_emit_header_time_stamp.part.22+0xd0>
   1e808:	ldr	r1, [pc, #52]	; 1e844 <dta_emit_header_time_stamp.part.22+0x180>
   1e80c:	mov	r0, r7
   1e810:	add	r1, pc, r1
   1e814:	bl	4154 <readstat_write_string@plt>
   1e818:	mov	r4, r0
   1e81c:	b	1e794 <dta_emit_header_time_stamp.part.22+0xd0>
   1e820:	ldr	r2, [r6, #16]
   1e824:	mov	r0, r7
   1e828:	mov	r1, r8
   1e82c:	bl	4454 <readstat_write_bytes@plt>
   1e830:	mov	r4, r0
   1e834:	b	1e794 <dta_emit_header_time_stamp.part.22+0xd0>
   1e838:	.word	0x00008044
   1e83c:	.word	0x00008030
   1e840:	.word	0x00007d64
   1e844:	.word	0x00007d1c

0001e848 <dta_validate_name>:
   1e848:	push	{r4, r5, lr}
   1e84c:	sub	sp, sp, #12
   1e850:	mov	r4, r2
   1e854:	mov	r5, r0
   1e858:	bl	41fc <strlen@plt>
   1e85c:	cmp	r0, r4
   1e860:	movhi	r0, #28
   1e864:	bls	1e870 <dta_validate_name+0x28>
   1e868:	add	sp, sp, #12
   1e86c:	pop	{r4, r5, pc}
   1e870:	ldrb	r0, [r5]
   1e874:	cmp	r0, #0
   1e878:	moveq	r0, #38	; 0x26
   1e87c:	beq	1e868 <dta_validate_name+0x20>
   1e880:	mov	r1, r5
   1e884:	mov	r3, r0
   1e888:	bic	r2, r3, #32
   1e88c:	cmp	r3, #95	; 0x5f
   1e890:	sub	r2, r2, #65	; 0x41
   1e894:	beq	1e8ac <dta_validate_name+0x64>
   1e898:	cmp	r2, #25
   1e89c:	sub	r3, r3, #48	; 0x30
   1e8a0:	bls	1e8ac <dta_validate_name+0x64>
   1e8a4:	cmp	r3, #9
   1e8a8:	bhi	1e8f4 <dta_validate_name+0xac>
   1e8ac:	ldrb	r3, [r1, #1]!
   1e8b0:	cmp	r3, #0
   1e8b4:	bne	1e888 <dta_validate_name+0x40>
   1e8b8:	cmp	r0, #95	; 0x5f
   1e8bc:	beq	1e8d4 <dta_validate_name+0x8c>
   1e8c0:	bic	r0, r0, #32
   1e8c4:	sub	r0, r0, #65	; 0x41
   1e8c8:	cmp	r0, #25
   1e8cc:	movhi	r0, #25
   1e8d0:	bhi	1e868 <dta_validate_name+0x20>
   1e8d4:	ldr	r1, [pc, #524]	; 1eae8 <dta_validate_name+0x2a0>
   1e8d8:	mov	r0, r5
   1e8dc:	add	r1, pc, r1
   1e8e0:	bl	3e00 <strcmp@plt>
   1e8e4:	cmp	r0, #0
   1e8e8:	bne	1e8fc <dta_validate_name+0xb4>
   1e8ec:	mov	r0, #27
   1e8f0:	b	1e868 <dta_validate_name+0x20>
   1e8f4:	mov	r0, #26
   1e8f8:	b	1e868 <dta_validate_name+0x20>
   1e8fc:	ldr	r1, [pc, #488]	; 1eaec <dta_validate_name+0x2a4>
   1e900:	mov	r0, r5
   1e904:	add	r1, pc, r1
   1e908:	bl	3e00 <strcmp@plt>
   1e90c:	cmp	r0, #0
   1e910:	beq	1e8ec <dta_validate_name+0xa4>
   1e914:	ldr	r1, [pc, #468]	; 1eaf0 <dta_validate_name+0x2a8>
   1e918:	mov	r0, r5
   1e91c:	add	r1, pc, r1
   1e920:	bl	3e00 <strcmp@plt>
   1e924:	cmp	r0, #0
   1e928:	beq	1e8ec <dta_validate_name+0xa4>
   1e92c:	ldr	r1, [pc, #448]	; 1eaf4 <dta_validate_name+0x2ac>
   1e930:	mov	r0, r5
   1e934:	add	r1, pc, r1
   1e938:	bl	3e00 <strcmp@plt>
   1e93c:	cmp	r0, #0
   1e940:	beq	1e8ec <dta_validate_name+0xa4>
   1e944:	ldr	r1, [pc, #428]	; 1eaf8 <dta_validate_name+0x2b0>
   1e948:	mov	r0, r5
   1e94c:	add	r1, pc, r1
   1e950:	bl	3e00 <strcmp@plt>
   1e954:	cmp	r0, #0
   1e958:	beq	1e8ec <dta_validate_name+0xa4>
   1e95c:	ldr	r1, [pc, #408]	; 1eafc <dta_validate_name+0x2b4>
   1e960:	mov	r0, r5
   1e964:	add	r1, pc, r1
   1e968:	bl	3e00 <strcmp@plt>
   1e96c:	cmp	r0, #0
   1e970:	beq	1e8ec <dta_validate_name+0xa4>
   1e974:	ldr	r1, [pc, #388]	; 1eb00 <dta_validate_name+0x2b8>
   1e978:	mov	r0, r5
   1e97c:	add	r1, pc, r1
   1e980:	bl	3e00 <strcmp@plt>
   1e984:	cmp	r0, #0
   1e988:	beq	1e8ec <dta_validate_name+0xa4>
   1e98c:	ldr	r1, [pc, #368]	; 1eb04 <dta_validate_name+0x2bc>
   1e990:	mov	r0, r5
   1e994:	add	r1, pc, r1
   1e998:	bl	3e00 <strcmp@plt>
   1e99c:	cmp	r0, #0
   1e9a0:	beq	1e8ec <dta_validate_name+0xa4>
   1e9a4:	ldr	r1, [pc, #348]	; 1eb08 <dta_validate_name+0x2c0>
   1e9a8:	mov	r0, r5
   1e9ac:	add	r1, pc, r1
   1e9b0:	bl	3e00 <strcmp@plt>
   1e9b4:	cmp	r0, #0
   1e9b8:	beq	1e8ec <dta_validate_name+0xa4>
   1e9bc:	ldr	r1, [pc, #328]	; 1eb0c <dta_validate_name+0x2c4>
   1e9c0:	mov	r0, r5
   1e9c4:	add	r1, pc, r1
   1e9c8:	bl	3e00 <strcmp@plt>
   1e9cc:	cmp	r0, #0
   1e9d0:	beq	1e8ec <dta_validate_name+0xa4>
   1e9d4:	ldr	r1, [pc, #308]	; 1eb10 <dta_validate_name+0x2c8>
   1e9d8:	mov	r0, r5
   1e9dc:	add	r1, pc, r1
   1e9e0:	bl	3e00 <strcmp@plt>
   1e9e4:	cmp	r0, #0
   1e9e8:	beq	1e8ec <dta_validate_name+0xa4>
   1e9ec:	ldr	r1, [pc, #288]	; 1eb14 <dta_validate_name+0x2cc>
   1e9f0:	mov	r0, r5
   1e9f4:	add	r1, pc, r1
   1e9f8:	bl	3e00 <strcmp@plt>
   1e9fc:	cmp	r0, #0
   1ea00:	beq	1e8ec <dta_validate_name+0xa4>
   1ea04:	ldr	r1, [pc, #268]	; 1eb18 <dta_validate_name+0x2d0>
   1ea08:	mov	r0, r5
   1ea0c:	add	r1, pc, r1
   1ea10:	bl	3e00 <strcmp@plt>
   1ea14:	cmp	r0, #0
   1ea18:	beq	1e8ec <dta_validate_name+0xa4>
   1ea1c:	ldr	r1, [pc, #248]	; 1eb1c <dta_validate_name+0x2d4>
   1ea20:	mov	r0, r5
   1ea24:	add	r1, pc, r1
   1ea28:	bl	3e00 <strcmp@plt>
   1ea2c:	cmp	r0, #0
   1ea30:	beq	1e8ec <dta_validate_name+0xa4>
   1ea34:	ldr	r1, [pc, #228]	; 1eb20 <dta_validate_name+0x2d8>
   1ea38:	mov	r0, r5
   1ea3c:	add	r1, pc, r1
   1ea40:	bl	3e00 <strcmp@plt>
   1ea44:	cmp	r0, #0
   1ea48:	beq	1e8ec <dta_validate_name+0xa4>
   1ea4c:	ldr	r1, [pc, #208]	; 1eb24 <dta_validate_name+0x2dc>
   1ea50:	mov	r0, r5
   1ea54:	add	r1, pc, r1
   1ea58:	bl	3e00 <strcmp@plt>
   1ea5c:	cmp	r0, #0
   1ea60:	beq	1e8ec <dta_validate_name+0xa4>
   1ea64:	ldr	r1, [pc, #188]	; 1eb28 <dta_validate_name+0x2e0>
   1ea68:	mov	r0, r5
   1ea6c:	add	r1, pc, r1
   1ea70:	bl	3e00 <strcmp@plt>
   1ea74:	cmp	r0, #0
   1ea78:	beq	1e8ec <dta_validate_name+0xa4>
   1ea7c:	ldr	r1, [pc, #168]	; 1eb2c <dta_validate_name+0x2e4>
   1ea80:	mov	r0, r5
   1ea84:	add	r1, pc, r1
   1ea88:	bl	3e00 <strcmp@plt>
   1ea8c:	cmp	r0, #0
   1ea90:	beq	1e8ec <dta_validate_name+0xa4>
   1ea94:	ldr	r1, [pc, #148]	; 1eb30 <dta_validate_name+0x2e8>
   1ea98:	mov	r0, r5
   1ea9c:	add	r1, pc, r1
   1eaa0:	bl	3e00 <strcmp@plt>
   1eaa4:	cmp	r0, #0
   1eaa8:	beq	1e8ec <dta_validate_name+0xa4>
   1eaac:	ldr	r1, [pc, #128]	; 1eb34 <dta_validate_name+0x2ec>
   1eab0:	mov	r0, r5
   1eab4:	add	r1, pc, r1
   1eab8:	bl	3e00 <strcmp@plt>
   1eabc:	cmp	r0, #0
   1eac0:	beq	1e8ec <dta_validate_name+0xa4>
   1eac4:	ldr	r1, [pc, #108]	; 1eb38 <dta_validate_name+0x2f0>
   1eac8:	mov	r0, r5
   1eacc:	add	r2, sp, #4
   1ead0:	add	r1, pc, r1
   1ead4:	bl	428c <__isoc99_sscanf@plt>
   1ead8:	cmp	r0, #1
   1eadc:	movne	r0, #0
   1eae0:	bne	1e868 <dta_validate_name+0x20>
   1eae4:	b	1e8ec <dta_validate_name+0xa4>
   1eae8:	.word	0x00007f60
   1eaec:	.word	0x00007eb8
   1eaf0:	.word	0x00007ea4
   1eaf4:	.word	0x00007e94
   1eaf8:	.word	0x00007e84
   1eafc:	.word	0x00007e74
   1eb00:	.word	0x00007e64
   1eb04:	.word	0x00007e54
   1eb08:	.word	0x00007e40
   1eb0c:	.word	0x00007e2c
   1eb10:	.word	0x00007e18
   1eb14:	.word	0x00007e08
   1eb18:	.word	0x00007df4
   1eb1c:	.word	0x00007de0
   1eb20:	.word	0x00007dcc
   1eb24:	.word	0x00007dbc
   1eb28:	.word	0x00007da8
   1eb2c:	.word	0x00007d98
   1eb30:	.word	0x00007d88
   1eb34:	.word	0x00007d78
   1eb38:	.word	0x00007d64

0001eb3c <dta_old_variable_ok>:
   1eb3c:	push	{r4, lr}
   1eb40:	bl	4364 <readstat_variable_get_name@plt>
   1eb44:	mov	r2, #9
   1eb48:	mov	r1, #0
   1eb4c:	pop	{r4, lr}
   1eb50:	b	1e848 <dta_validate_name>

0001eb54 <dta_110_variable_ok>:
   1eb54:	push	{r4, lr}
   1eb58:	bl	4364 <readstat_variable_get_name@plt>
   1eb5c:	mov	r2, #33	; 0x21
   1eb60:	mov	r1, #0
   1eb64:	pop	{r4, lr}
   1eb68:	b	1e848 <dta_validate_name>

0001eb6c <dta_118_variable_ok>:
   1eb6c:	push	{r4, lr}
   1eb70:	bl	4364 <readstat_variable_get_name@plt>
   1eb74:	mov	r2, #129	; 0x81
   1eb78:	mov	r1, #1
   1eb7c:	pop	{r4, lr}
   1eb80:	b	1e848 <dta_validate_name>

0001eb84 <dta_typecode_for_variable.constprop.25>:
   1eb84:	cmp	r1, #111	; 0x6f
   1eb88:	ldr	r3, [r0]
   1eb8c:	beq	1ec6c <dta_typecode_for_variable.constprop.25+0xe8>
   1eb90:	cmp	r1, #117	; 0x75
   1eb94:	ldr	r1, [r0, #1596]	; 0x63c
   1eb98:	beq	1ebc4 <dta_typecode_for_variable.constprop.25+0x40>
   1eb9c:	cmp	r3, #6
   1eba0:	addls	pc, pc, r3, lsl #2
   1eba4:	b	1ecc0 <dta_typecode_for_variable.constprop.25+0x13c>
   1eba8:	b	1ec28 <dta_typecode_for_variable.constprop.25+0xa4>
   1ebac:	b	1ec20 <dta_typecode_for_variable.constprop.25+0x9c>
   1ebb0:	b	1ec18 <dta_typecode_for_variable.constprop.25+0x94>
   1ebb4:	b	1ec10 <dta_typecode_for_variable.constprop.25+0x8c>
   1ebb8:	b	1ec08 <dta_typecode_for_variable.constprop.25+0x84>
   1ebbc:	b	1ebf4 <dta_typecode_for_variable.constprop.25+0x70>
   1ebc0:	b	1ebec <dta_typecode_for_variable.constprop.25+0x68>
   1ebc4:	cmp	r3, #6
   1ebc8:	addls	pc, pc, r3, lsl #2
   1ebcc:	b	1ecc0 <dta_typecode_for_variable.constprop.25+0x13c>
   1ebd0:	b	1ec34 <dta_typecode_for_variable.constprop.25+0xb0>
   1ebd4:	b	1ec3c <dta_typecode_for_variable.constprop.25+0xb8>
   1ebd8:	b	1ec4c <dta_typecode_for_variable.constprop.25+0xc8>
   1ebdc:	b	1ec44 <dta_typecode_for_variable.constprop.25+0xc0>
   1ebe0:	b	1ec64 <dta_typecode_for_variable.constprop.25+0xe0>
   1ebe4:	b	1ec5c <dta_typecode_for_variable.constprop.25+0xd8>
   1ebe8:	b	1ec54 <dta_typecode_for_variable.constprop.25+0xd0>
   1ebec:	mov	r0, #33	; 0x21
   1ebf0:	bx	lr
   1ebf4:	mov	r3, #100	; 0x64
   1ebf8:	cmp	r2, #0
   1ebfc:	strhne	r3, [r2]
   1ec00:	mov	r0, #0
   1ec04:	bx	lr
   1ec08:	mov	r3, #102	; 0x66
   1ec0c:	b	1ebf8 <dta_typecode_for_variable.constprop.25+0x74>
   1ec10:	mov	r3, #108	; 0x6c
   1ec14:	b	1ebf8 <dta_typecode_for_variable.constprop.25+0x74>
   1ec18:	mov	r3, #105	; 0x69
   1ec1c:	b	1ebf8 <dta_typecode_for_variable.constprop.25+0x74>
   1ec20:	mov	r3, #98	; 0x62
   1ec24:	b	1ebf8 <dta_typecode_for_variable.constprop.25+0x74>
   1ec28:	add	r3, r1, #127	; 0x7f
   1ec2c:	uxth	r3, r3
   1ec30:	b	1ebf8 <dta_typecode_for_variable.constprop.25+0x74>
   1ec34:	uxth	r3, r1
   1ec38:	b	1ebf8 <dta_typecode_for_variable.constprop.25+0x74>
   1ec3c:	ldr	r3, [pc, #132]	; 1ecc8 <dta_typecode_for_variable.constprop.25+0x144>
   1ec40:	b	1ebf8 <dta_typecode_for_variable.constprop.25+0x74>
   1ec44:	ldr	r3, [pc, #128]	; 1eccc <dta_typecode_for_variable.constprop.25+0x148>
   1ec48:	b	1ebf8 <dta_typecode_for_variable.constprop.25+0x74>
   1ec4c:	ldr	r3, [pc, #124]	; 1ecd0 <dta_typecode_for_variable.constprop.25+0x14c>
   1ec50:	b	1ebf8 <dta_typecode_for_variable.constprop.25+0x74>
   1ec54:	mov	r3, #32768	; 0x8000
   1ec58:	b	1ebf8 <dta_typecode_for_variable.constprop.25+0x74>
   1ec5c:	ldr	r3, [pc, #112]	; 1ecd4 <dta_typecode_for_variable.constprop.25+0x150>
   1ec60:	b	1ebf8 <dta_typecode_for_variable.constprop.25+0x74>
   1ec64:	ldr	r3, [pc, #108]	; 1ecd8 <dta_typecode_for_variable.constprop.25+0x154>
   1ec68:	b	1ebf8 <dta_typecode_for_variable.constprop.25+0x74>
   1ec6c:	ldr	r1, [r0, #1596]	; 0x63c
   1ec70:	cmp	r3, #6
   1ec74:	addls	pc, pc, r3, lsl #2
   1ec78:	b	1ecc0 <dta_typecode_for_variable.constprop.25+0x13c>
   1ec7c:	b	1ec34 <dta_typecode_for_variable.constprop.25+0xb0>
   1ec80:	b	1ecb8 <dta_typecode_for_variable.constprop.25+0x134>
   1ec84:	b	1ecb0 <dta_typecode_for_variable.constprop.25+0x12c>
   1ec88:	b	1eca8 <dta_typecode_for_variable.constprop.25+0x124>
   1ec8c:	b	1eca0 <dta_typecode_for_variable.constprop.25+0x11c>
   1ec90:	b	1ec98 <dta_typecode_for_variable.constprop.25+0x114>
   1ec94:	b	1ebec <dta_typecode_for_variable.constprop.25+0x68>
   1ec98:	mov	r3, #255	; 0xff
   1ec9c:	b	1ebf8 <dta_typecode_for_variable.constprop.25+0x74>
   1eca0:	mov	r3, #254	; 0xfe
   1eca4:	b	1ebf8 <dta_typecode_for_variable.constprop.25+0x74>
   1eca8:	mov	r3, #253	; 0xfd
   1ecac:	b	1ebf8 <dta_typecode_for_variable.constprop.25+0x74>
   1ecb0:	mov	r3, #252	; 0xfc
   1ecb4:	b	1ebf8 <dta_typecode_for_variable.constprop.25+0x74>
   1ecb8:	mov	r3, #251	; 0xfb
   1ecbc:	b	1ebf8 <dta_typecode_for_variable.constprop.25+0x74>
   1ecc0:	mov	r3, #0
   1ecc4:	b	1ebf8 <dta_typecode_for_variable.constprop.25+0x74>
   1ecc8:	.word	0x0000fffa
   1eccc:	.word	0x0000fff8
   1ecd0:	.word	0x0000fff9
   1ecd4:	.word	0x0000fff6
   1ecd8:	.word	0x0000fff7

0001ecdc <dta_begin_data>:
   1ecdc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ece0:	add	fp, sp, #32
   1ece4:	sub	sp, sp, #196	; 0xc4
   1ece8:	ldr	r3, [r0, #308]	; 0x134
   1ecec:	cmp	r3, #0
   1ecf0:	moveq	r4, #14
   1ecf4:	bne	1ed04 <dta_begin_data+0x28>
   1ecf8:	mov	r0, r4
   1ecfc:	sub	sp, fp, #32
   1ed00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ed04:	mov	sl, r0
   1ed08:	mov	r0, #0
   1ed0c:	bl	455c <dta_ctx_alloc@plt>
   1ed10:	ldr	r4, [sl, #80]	; 0x50
   1ed14:	ldr	r6, [sl, #28]
   1ed18:	asr	r5, r4, #31
   1ed1c:	mov	r8, r0
   1ed20:	bl	3eb4 <machine_is_little_endian@plt>
   1ed24:	mov	r3, #0
   1ed28:	str	r3, [sp, #12]
   1ed2c:	str	r3, [sp, #8]
   1ed30:	ldrb	ip, [sl, #8]
   1ed34:	mov	r2, r4
   1ed38:	mov	r3, r5
   1ed3c:	mov	r1, r6
   1ed40:	str	ip, [sp, #4]
   1ed44:	cmp	r0, #0
   1ed48:	moveq	r0, #1
   1ed4c:	movne	r0, #2
   1ed50:	str	r0, [sp]
   1ed54:	mov	r0, r8
   1ed58:	bl	41cc <dta_ctx_init@plt>
   1ed5c:	subs	r4, r0, #0
   1ed60:	beq	1ed70 <dta_begin_data+0x94>
   1ed64:	mov	r0, r8
   1ed68:	bl	3e78 <dta_ctx_free@plt>
   1ed6c:	b	1ecf8 <dta_begin_data+0x1c>
   1ed70:	ldrb	r4, [r8, #192]	; 0xc0
   1ed74:	ands	r4, r4, #4
   1ed78:	bne	1ee4c <dta_begin_data+0x170>
   1ed7c:	ldr	r3, [sl, #8]
   1ed80:	sub	r2, fp, #164	; 0xa4
   1ed84:	str	r2, [fp, #-188]	; 0xffffff44
   1ed88:	str	r4, [fp, #-164]	; 0xffffff5c
   1ed8c:	str	r4, [fp, #-160]	; 0xffffff60
   1ed90:	strb	r3, [fp, #-164]	; 0xffffff5c
   1ed94:	strh	r4, [fp, #-156]	; 0xffffff64
   1ed98:	bl	3eb4 <machine_is_little_endian@plt>
   1ed9c:	ldr	r3, [sl, #28]
   1eda0:	ldrh	ip, [sl, #80]	; 0x50
   1eda4:	ldrh	r1, [sl, #82]	; 0x52
   1eda8:	mov	r2, #1
   1edac:	strb	r4, [fp, #-161]	; 0xffffff5f
   1edb0:	strh	r3, [fp, #-160]	; 0xffffff60
   1edb4:	strh	ip, [fp, #-158]	; 0xffffff62
   1edb8:	strh	r1, [fp, #-156]	; 0xffffff64
   1edbc:	strb	r2, [fp, #-162]	; 0xffffff5e
   1edc0:	cmp	r0, #0
   1edc4:	moveq	r0, r2
   1edc8:	movne	r0, #2
   1edcc:	cmp	r3, #32768	; 0x8000
   1edd0:	strb	r0, [fp, #-163]	; 0xffffff5d
   1edd4:	blt	1efbc <dta_begin_data+0x2e0>
   1edd8:	ldrb	r4, [r8, #192]	; 0xc0
   1eddc:	ands	r4, r4, #4
   1ede0:	bne	1f004 <dta_begin_data+0x328>
   1ede4:	ldr	r3, [r8, #148]	; 0x94
   1ede8:	cmp	r3, #0
   1edec:	ble	1f6d0 <dta_begin_data+0x9f4>
   1edf0:	mov	r5, #0
   1edf4:	mov	r6, r5
   1edf8:	ldr	r7, [fp, #-188]	; 0xffffff44
   1edfc:	b	1ee18 <dta_begin_data+0x13c>
   1ee00:	ldr	r3, [r8, #148]	; 0x94
   1ee04:	ldrh	ip, [fp, #-164]	; 0xffffff5c
   1ee08:	ldr	r1, [r8, #28]
   1ee0c:	cmp	r5, r3
   1ee10:	strh	ip, [r1, r2]
   1ee14:	bge	1f428 <dta_begin_data+0x74c>
   1ee18:	mov	r1, r5
   1ee1c:	mov	r0, sl
   1ee20:	bl	437c <readstat_get_variable@plt>
   1ee24:	strh	r6, [fp, #-164]	; 0xffffff5c
   1ee28:	mov	r2, r7
   1ee2c:	ldrb	r1, [r8, #20]
   1ee30:	bl	1eb84 <dta_typecode_for_variable.constprop.25>
   1ee34:	lsl	r2, r5, #1
   1ee38:	add	r5, r5, #1
   1ee3c:	cmp	r0, #0
   1ee40:	beq	1ee00 <dta_begin_data+0x124>
   1ee44:	mov	r4, r0
   1ee48:	b	1ed64 <dta_begin_data+0x88>
   1ee4c:	ldr	r1, [pc, #3536]	; 1fc24 <dta_begin_data+0xf48>
   1ee50:	mov	r0, sl
   1ee54:	add	r1, pc, r1
   1ee58:	bl	4154 <readstat_write_string@plt>
   1ee5c:	subs	r4, r0, #0
   1ee60:	bne	1ed64 <dta_begin_data+0x88>
   1ee64:	ldrb	r3, [r8, #192]	; 0xc0
   1ee68:	tst	r3, #4
   1ee6c:	bne	1f38c <dta_begin_data+0x6b0>
   1ee70:	ldr	r2, [pc, #3504]	; 1fc28 <dta_begin_data+0xf4c>
   1ee74:	sub	r4, fp, #164	; 0xa4
   1ee78:	mov	r0, r4
   1ee7c:	ldr	r3, [sl, #8]
   1ee80:	add	r2, pc, r2
   1ee84:	mov	r1, #128	; 0x80
   1ee88:	str	r4, [fp, #-188]	; 0xffffff44
   1ee8c:	bl	4280 <snprintf@plt>
   1ee90:	mov	r1, r4
   1ee94:	mov	r0, sl
   1ee98:	bl	4154 <readstat_write_string@plt>
   1ee9c:	subs	r4, r0, #0
   1eea0:	bne	1ed64 <dta_begin_data+0x88>
   1eea4:	bl	3eb4 <machine_is_little_endian@plt>
   1eea8:	cmp	r0, #0
   1eeac:	beq	1f4b8 <dta_begin_data+0x7dc>
   1eeb0:	ldr	r3, [pc, #3444]	; 1fc2c <dta_begin_data+0xf50>
   1eeb4:	add	r3, pc, r3
   1eeb8:	ldr	r2, [pc, #3440]	; 1fc30 <dta_begin_data+0xf54>
   1eebc:	mov	r1, #3
   1eec0:	add	r2, pc, r2
   1eec4:	mov	r0, sl
   1eec8:	stm	sp, {r1, r2}
   1eecc:	ldr	r2, [pc, #3424]	; 1fc34 <dta_begin_data+0xf58>
   1eed0:	mov	r1, r8
   1eed4:	add	r2, pc, r2
   1eed8:	bl	1dc6c <dta_write_chunk>
   1eedc:	subs	r4, r0, #0
   1eee0:	bne	1ed64 <dta_begin_data+0x88>
   1eee4:	ldr	r3, [sl, #8]
   1eee8:	sub	r6, fp, #36	; 0x24
   1eeec:	cmp	r3, #118	; 0x76
   1eef0:	ldr	r3, [sl, #28]
   1eef4:	ble	1f680 <dta_begin_data+0x9a4>
   1eef8:	ldr	r1, [pc, #3384]	; 1fc38 <dta_begin_data+0xf5c>
   1eefc:	ldr	r2, [pc, #3384]	; 1fc3c <dta_begin_data+0xf60>
   1ef00:	add	r1, pc, r1
   1ef04:	mov	r0, #4
   1ef08:	add	r2, pc, r2
   1ef0c:	str	r3, [r6, #-136]!	; 0xffffff78
   1ef10:	stm	sp, {r0, r1}
   1ef14:	mov	r3, r6
   1ef18:	mov	r1, r8
   1ef1c:	mov	r0, sl
   1ef20:	bl	1dc6c <dta_write_chunk>
   1ef24:	subs	r4, r0, #0
   1ef28:	bne	1ed64 <dta_begin_data+0x88>
   1ef2c:	ldr	r3, [sl, #8]
   1ef30:	cmp	r3, #117	; 0x75
   1ef34:	ble	1f724 <dta_begin_data+0xa48>
   1ef38:	ldr	r4, [sl, #80]	; 0x50
   1ef3c:	ldr	r1, [pc, #3324]	; 1fc40 <dta_begin_data+0xf64>
   1ef40:	ldr	r2, [pc, #3324]	; 1fc44 <dta_begin_data+0xf68>
   1ef44:	asr	r5, r4, #31
   1ef48:	add	r1, pc, r1
   1ef4c:	mov	r0, #8
   1ef50:	mov	r3, r6
   1ef54:	add	r2, pc, r2
   1ef58:	strd	r4, [fp, #-172]	; 0xffffff54
   1ef5c:	stm	sp, {r0, r1}
   1ef60:	mov	r1, r8
   1ef64:	mov	r0, sl
   1ef68:	bl	1dc6c <dta_write_chunk>
   1ef6c:	subs	r4, r0, #0
   1ef70:	bne	1ed64 <dta_begin_data+0x88>
   1ef74:	mov	r1, r8
   1ef78:	mov	r0, sl
   1ef7c:	bl	1d9c0 <dta_emit_header_data_label>
   1ef80:	subs	r4, r0, #0
   1ef84:	bne	1ed64 <dta_begin_data+0x88>
   1ef88:	ldr	r3, [r8, #16]
   1ef8c:	cmp	r3, #0
   1ef90:	bne	1fb08 <dta_begin_data+0xe2c>
   1ef94:	ldrb	r3, [r8, #192]	; 0xc0
   1ef98:	tst	r3, #4
   1ef9c:	beq	1ede4 <dta_begin_data+0x108>
   1efa0:	ldr	r1, [pc, #3232]	; 1fc48 <dta_begin_data+0xf6c>
   1efa4:	mov	r0, sl
   1efa8:	add	r1, pc, r1
   1efac:	bl	4154 <readstat_write_string@plt>
   1efb0:	subs	r4, r0, #0
   1efb4:	bne	1ed64 <dta_begin_data+0x88>
   1efb8:	b	1edd8 <dta_begin_data+0xfc>
   1efbc:	mov	r2, #10
   1efc0:	ldr	r1, [fp, #-188]	; 0xffffff44
   1efc4:	mov	r0, sl
   1efc8:	bl	4454 <readstat_write_bytes@plt>
   1efcc:	cmp	r0, #0
   1efd0:	bne	1edd8 <dta_begin_data+0xfc>
   1efd4:	mov	r1, r8
   1efd8:	mov	r0, sl
   1efdc:	bl	1d9c0 <dta_emit_header_data_label>
   1efe0:	cmp	r0, #0
   1efe4:	bne	1edd8 <dta_begin_data+0xfc>
   1efe8:	ldr	r3, [r8, #16]
   1efec:	cmp	r3, #0
   1eff0:	beq	1edd8 <dta_begin_data+0xfc>
   1eff4:	mov	r1, r8
   1eff8:	mov	r0, sl
   1effc:	bl	1e6c4 <dta_emit_header_time_stamp.part.22>
   1f000:	b	1edd8 <dta_begin_data+0xfc>
   1f004:	ldr	r3, [r8, #148]	; 0x94
   1f008:	ldr	r9, [r8, #24]
   1f00c:	ldr	r2, [sl, #4]
   1f010:	ldr	ip, [r8, #40]	; 0x28
   1f014:	mul	r9, r9, r3
   1f018:	ldr	lr, [r8, #48]	; 0x30
   1f01c:	adds	r6, r2, #123	; 0x7b
   1f020:	add	r9, r9, #33	; 0x21
   1f024:	str	r3, [fp, #-184]	; 0xffffff48
   1f028:	mov	r3, #0
   1f02c:	adc	r7, r3, #0
   1f030:	add	ip, ip, #21
   1f034:	adds	r0, r6, r9
   1f038:	ldr	r9, [r8, #56]	; 0x38
   1f03c:	adc	r1, r7, #0
   1f040:	add	lr, lr, #21
   1f044:	strd	r2, [fp, #-156]	; 0xffffff64
   1f048:	adds	r2, r0, ip
   1f04c:	adc	r3, r1, #0
   1f050:	ldr	ip, [r8, #64]	; 0x40
   1f054:	add	r9, r9, #19
   1f058:	strd	r6, [fp, #-148]	; 0xffffff6c
   1f05c:	adds	r6, r2, lr
   1f060:	adc	r7, r3, #0
   1f064:	ldr	lr, [r8, #72]	; 0x48
   1f068:	strd	r0, [fp, #-140]	; 0xffffff74
   1f06c:	adds	r0, r6, r9
   1f070:	adc	r1, r7, #0
   1f074:	add	ip, ip, #39	; 0x27
   1f078:	strd	r2, [fp, #-132]	; 0xffffff7c
   1f07c:	add	lr, lr, #35	; 0x23
   1f080:	adds	r2, r0, ip
   1f084:	adc	r3, r1, #0
   1f088:	strd	r0, [fp, #-116]	; 0xffffff8c
   1f08c:	adds	r0, r2, lr
   1f090:	adc	r1, r3, #0
   1f094:	strd	r6, [fp, #-124]	; 0xffffff84
   1f098:	ldr	ip, [sl, #52]	; 0x34
   1f09c:	mov	r6, r0
   1f0a0:	mov	r7, r1
   1f0a4:	strd	r2, [fp, #-108]	; 0xffffff94
   1f0a8:	mov	r0, #0
   1f0ac:	mov	r3, r7
   1f0b0:	mov	r1, #0
   1f0b4:	mov	r2, r6
   1f0b8:	cmp	ip, #0
   1f0bc:	strd	r2, [fp, #-100]	; 0xffffff9c
   1f0c0:	strd	r6, [fp, #-196]	; 0xffffff3c
   1f0c4:	strd	r0, [fp, #-164]	; 0xffffff5c
   1f0c8:	ldr	r3, [sl, #48]	; 0x30
   1f0cc:	ble	1f69c <dta_begin_data+0x9c0>
   1f0d0:	ldr	r9, [r8, #92]	; 0x5c
   1f0d4:	ldr	r2, [r8, #96]	; 0x60
   1f0d8:	add	r9, r9, #10
   1f0dc:	mov	r7, r3
   1f0e0:	add	r6, r3, ip, lsl #2
   1f0e4:	add	r9, r9, r2, lsl #1
   1f0e8:	mov	r5, #0
   1f0ec:	ldr	r0, [r7], #4
   1f0f0:	bl	41fc <strlen@plt>
   1f0f4:	cmp	r7, r6
   1f0f8:	add	r0, r0, r9
   1f0fc:	add	r5, r5, r0
   1f100:	bne	1f0ec <dta_begin_data+0x410>
   1f104:	ldrd	r0, [fp, #-196]	; 0xffffff3c
   1f108:	add	r2, r5, #35	; 0x23
   1f10c:	ldr	r3, [fp, #-184]	; 0xffffff48
   1f110:	adds	r0, r0, r2
   1f114:	adc	r1, r1, #0
   1f118:	cmp	r3, #0
   1f11c:	strd	r0, [fp, #-196]	; 0xffffff3c
   1f120:	strd	r0, [fp, #-92]	; 0xffffffa4
   1f124:	ble	1f3a8 <dta_begin_data+0x6cc>
   1f128:	mov	r4, #0
   1f12c:	mov	r5, r4
   1f130:	sub	r6, fp, #172	; 0xac
   1f134:	sub	r7, fp, #174	; 0xae
   1f138:	mov	r1, r4
   1f13c:	mov	r0, sl
   1f140:	str	r5, [fp, #-172]	; 0xffffff54
   1f144:	bl	437c <readstat_get_variable@plt>
   1f148:	mov	r2, r7
   1f14c:	ldrb	r1, [r8, #20]
   1f150:	strh	r5, [fp, #-174]	; 0xffffff52
   1f154:	bl	1eb84 <dta_typecode_for_variable.constprop.25>
   1f158:	mov	r3, #0
   1f15c:	mov	r2, r6
   1f160:	mov	r1, r8
   1f164:	ldrh	r0, [fp, #-174]	; 0xffffff52
   1f168:	bl	41e4 <dta_type_info@plt>
   1f16c:	add	r4, r4, #1
   1f170:	cmp	r0, #0
   1f174:	ldreq	r3, [r8, #160]	; 0xa0
   1f178:	ldreq	r2, [fp, #-172]	; 0xffffff54
   1f17c:	addeq	r3, r3, r2
   1f180:	streq	r3, [r8, #160]	; 0xa0
   1f184:	ldr	r3, [r8, #148]	; 0x94
   1f188:	cmp	r4, r3
   1f18c:	blt	1f138 <dta_begin_data+0x45c>
   1f190:	ldrb	r4, [r8, #192]	; 0xc0
   1f194:	ands	r4, r4, #4
   1f198:	bne	1f3a8 <dta_begin_data+0x6cc>
   1f19c:	ldr	r2, [r8, #152]	; 0x98
   1f1a0:	ldr	r3, [r8, #160]	; 0xa0
   1f1a4:	ldrd	r6, [fp, #-196]	; 0xffffff3c
   1f1a8:	ldr	ip, [sl, #64]	; 0x40
   1f1ac:	mul	r3, r3, r2
   1f1b0:	ldr	r2, [sl, #60]	; 0x3c
   1f1b4:	adds	r6, r6, r3
   1f1b8:	adc	r7, r7, #0
   1f1bc:	cmp	ip, #0
   1f1c0:	strd	r6, [fp, #-84]	; 0xffffffac
   1f1c4:	movle	r1, r4
   1f1c8:	ble	1f3e4 <dta_begin_data+0x708>
   1f1cc:	mov	r5, r4
   1f1d0:	mov	r1, #0
   1f1d4:	ldr	lr, [r8, #116]	; 0x74
   1f1d8:	sub	r2, r2, #4
   1f1dc:	mov	r3, r1
   1f1e0:	ldr	r0, [r2, #4]!
   1f1e4:	cmp	lr, #4
   1f1e8:	add	r3, r3, #1
   1f1ec:	ldr	r0, [r0, #16]
   1f1f0:	addhi	r0, r0, #20
   1f1f4:	addls	r0, r0, #16
   1f1f8:	cmp	r3, ip
   1f1fc:	add	r1, r1, r0
   1f200:	blt	1f1e0 <dta_begin_data+0x504>
   1f204:	cmp	r4, #0
   1f208:	add	r1, r1, r5
   1f20c:	beq	1f3e4 <dta_begin_data+0x708>
   1f210:	add	r1, r1, #8
   1f214:	adds	r4, r6, r1
   1f218:	ldr	r3, [sl, #40]	; 0x28
   1f21c:	adc	r5, r7, #0
   1f220:	cmp	r3, #0
   1f224:	mov	r3, #14
   1f228:	strd	r4, [fp, #-196]	; 0xffffff3c
   1f22c:	strd	r4, [fp, #-76]	; 0xffffffb4
   1f230:	str	r3, [fp, #-184]	; 0xffffff48
   1f234:	ble	1f2d8 <dta_begin_data+0x5fc>
   1f238:	mov	r7, #0
   1f23c:	mov	r1, r7
   1f240:	mov	r0, sl
   1f244:	bl	4424 <readstat_get_label_set@plt>
   1f248:	mov	r4, #0
   1f24c:	ldr	r5, [r0, #264]	; 0x108
   1f250:	mov	r9, r0
   1f254:	cmp	r5, #0
   1f258:	ble	1f284 <dta_begin_data+0x5a8>
   1f25c:	mov	r6, r4
   1f260:	mov	r1, r6
   1f264:	mov	r0, r9
   1f268:	bl	44cc <readstat_get_value_label@plt>
   1f26c:	add	r6, r6, #1
   1f270:	add	r4, r4, #1
   1f274:	cmp	r5, r6
   1f278:	ldr	r3, [r0, #28]
   1f27c:	add	r4, r4, r3
   1f280:	bne	1f260 <dta_begin_data+0x584>
   1f284:	ldrb	r1, [r8, #192]	; 0xc0
   1f288:	ands	r1, r1, #4
   1f28c:	bne	1f360 <dta_begin_data+0x684>
   1f290:	ldr	r2, [r8, #108]	; 0x6c
   1f294:	ldr	r3, [r8, #104]	; 0x68
   1f298:	add	r5, r5, #1
   1f29c:	add	r3, r3, r2
   1f2a0:	ldr	r2, [fp, #-184]	; 0xffffff48
   1f2a4:	add	r3, r3, #4
   1f2a8:	add	r5, r4, r5, lsl #3
   1f2ac:	add	r4, r3, r2
   1f2b0:	add	r4, r5, r4
   1f2b4:	mov	r6, #0
   1f2b8:	ldr	r3, [sl, #40]	; 0x28
   1f2bc:	add	r7, r7, #1
   1f2c0:	cmp	r7, r3
   1f2c4:	add	r3, r6, r4
   1f2c8:	str	r3, [fp, #-184]	; 0xffffff48
   1f2cc:	blt	1f23c <dta_begin_data+0x560>
   1f2d0:	cmp	r1, #0
   1f2d4:	beq	1f408 <dta_begin_data+0x72c>
   1f2d8:	ldr	r3, [fp, #-184]	; 0xffffff48
   1f2dc:	mov	r0, #12
   1f2e0:	add	r5, r3, #15
   1f2e4:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   1f2e8:	mov	r1, #0
   1f2ec:	adds	r2, r2, r5
   1f2f0:	adc	r3, r3, #0
   1f2f4:	strd	r2, [fp, #-68]	; 0xffffffbc
   1f2f8:	adds	r2, r2, r0
   1f2fc:	adc	r3, r3, r1
   1f300:	ldr	r1, [pc, #2372]	; 1fc4c <dta_begin_data+0xf70>
   1f304:	strd	r2, [fp, #-60]	; 0xffffffc4
   1f308:	add	r1, pc, r1
   1f30c:	mov	r2, r1
   1f310:	mov	r0, #112	; 0x70
   1f314:	ldr	r3, [fp, #-188]	; 0xffffff44
   1f318:	stm	sp, {r0, r2}
   1f31c:	ldr	r2, [pc, #2348]	; 1fc50 <dta_begin_data+0xf74>
   1f320:	mov	r1, r8
   1f324:	add	r2, pc, r2
   1f328:	mov	r0, sl
   1f32c:	bl	1dc6c <dta_write_chunk>
   1f330:	subs	r4, r0, #0
   1f334:	bne	1ed64 <dta_begin_data+0x88>
   1f338:	ldrb	r3, [r8, #192]	; 0xc0
   1f33c:	tst	r3, #4
   1f340:	beq	1ede4 <dta_begin_data+0x108>
   1f344:	ldr	r1, [pc, #2312]	; 1fc54 <dta_begin_data+0xf78>
   1f348:	mov	r0, sl
   1f34c:	add	r1, pc, r1
   1f350:	bl	4154 <readstat_write_string@plt>
   1f354:	subs	r4, r0, #0
   1f358:	bne	1ed64 <dta_begin_data+0x88>
   1f35c:	b	1ede4 <dta_begin_data+0x108>
   1f360:	ldr	r2, [r8, #108]	; 0x6c
   1f364:	ldr	r3, [r8, #104]	; 0x68
   1f368:	add	r5, r5, #1
   1f36c:	add	r3, r3, r2
   1f370:	ldr	r2, [fp, #-184]	; 0xffffff48
   1f374:	add	r3, r3, #9
   1f378:	add	r6, r3, r2
   1f37c:	add	r4, r4, r5, lsl #3
   1f380:	add	r4, r4, r6
   1f384:	mov	r6, #6
   1f388:	b	1f2b8 <dta_begin_data+0x5dc>
   1f38c:	ldr	r1, [pc, #2244]	; 1fc58 <dta_begin_data+0xf7c>
   1f390:	mov	r0, sl
   1f394:	add	r1, pc, r1
   1f398:	bl	4154 <readstat_write_string@plt>
   1f39c:	subs	r4, r0, #0
   1f3a0:	bne	1ed64 <dta_begin_data+0x88>
   1f3a4:	b	1ee70 <dta_begin_data+0x194>
   1f3a8:	ldr	r2, [r8, #152]	; 0x98
   1f3ac:	ldr	r3, [r8, #160]	; 0xa0
   1f3b0:	ldrd	r6, [fp, #-196]	; 0xffffff3c
   1f3b4:	ldr	ip, [sl, #64]	; 0x40
   1f3b8:	mul	r3, r3, r2
   1f3bc:	ldr	r2, [sl, #60]	; 0x3c
   1f3c0:	add	r3, r3, #13
   1f3c4:	adds	r6, r6, r3
   1f3c8:	adc	r7, r7, #0
   1f3cc:	cmp	ip, #0
   1f3d0:	strd	r6, [fp, #-84]	; 0xffffffac
   1f3d4:	movle	r1, #7
   1f3d8:	ble	1f210 <dta_begin_data+0x534>
   1f3dc:	mov	r5, #7
   1f3e0:	b	1f1d0 <dta_begin_data+0x4f4>
   1f3e4:	adds	r4, r6, r1
   1f3e8:	ldr	r3, [sl, #40]	; 0x28
   1f3ec:	adc	r5, r7, #0
   1f3f0:	cmp	r3, #0
   1f3f4:	mov	r3, #0
   1f3f8:	strd	r4, [fp, #-196]	; 0xffffff3c
   1f3fc:	strd	r4, [fp, #-76]	; 0xffffffb4
   1f400:	str	r3, [fp, #-184]	; 0xffffff48
   1f404:	bgt	1f238 <dta_begin_data+0x55c>
   1f408:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   1f40c:	ldr	r1, [fp, #-184]	; 0xffffff48
   1f410:	mov	r0, #0
   1f414:	adds	r2, r2, r1
   1f418:	adc	r3, r3, #0
   1f41c:	mov	r1, #0
   1f420:	strd	r2, [fp, #-68]	; 0xffffffbc
   1f424:	b	1f2f8 <dta_begin_data+0x61c>
   1f428:	cmp	r3, #0
   1f42c:	mov	r4, r0
   1f430:	ble	1f6d0 <dta_begin_data+0x9f4>
   1f434:	mov	r9, r0
   1f438:	mov	r5, r0
   1f43c:	mov	r7, #2
   1f440:	mov	r6, #1
   1f444:	b	1f460 <dta_begin_data+0x784>
   1f448:	cmp	r2, #2
   1f44c:	beq	1f498 <dta_begin_data+0x7bc>
   1f450:	add	r5, r5, #1
   1f454:	cmp	r5, r3
   1f458:	add	r9, r9, #2
   1f45c:	bge	1f4c4 <dta_begin_data+0x7e8>
   1f460:	ldr	r2, [r8, #24]
   1f464:	cmp	r2, #1
   1f468:	bne	1f448 <dta_begin_data+0x76c>
   1f46c:	ldr	r3, [r8, #28]
   1f470:	mov	r2, r6
   1f474:	ldr	r1, [fp, #-188]	; 0xffffff44
   1f478:	ldrh	r3, [r3, r9]
   1f47c:	mov	r0, sl
   1f480:	strb	r3, [fp, #-164]	; 0xffffff5c
   1f484:	bl	4454 <readstat_write_bytes@plt>
   1f488:	cmp	r0, #0
   1f48c:	bne	1ee44 <dta_begin_data+0x168>
   1f490:	ldr	r3, [r8, #148]	; 0x94
   1f494:	b	1f450 <dta_begin_data+0x774>
   1f498:	ldr	r3, [r8, #28]
   1f49c:	mov	r2, r7
   1f4a0:	ldr	r1, [fp, #-188]	; 0xffffff44
   1f4a4:	ldrh	r3, [r3, r9]
   1f4a8:	mov	r0, sl
   1f4ac:	strh	r3, [fp, #-164]	; 0xffffff5c
   1f4b0:	bl	4454 <readstat_write_bytes@plt>
   1f4b4:	b	1f488 <dta_begin_data+0x7ac>
   1f4b8:	ldr	r3, [pc, #1948]	; 1fc5c <dta_begin_data+0xf80>
   1f4bc:	add	r3, pc, r3
   1f4c0:	b	1eeb8 <dta_begin_data+0x1dc>
   1f4c4:	ldrb	r2, [r8, #192]	; 0xc0
   1f4c8:	tst	r2, #4
   1f4cc:	bne	1f6dc <dta_begin_data+0xa00>
   1f4d0:	cmp	r3, #0
   1f4d4:	movgt	r4, #0
   1f4d8:	ble	1f50c <dta_begin_data+0x830>
   1f4dc:	mov	r1, r4
   1f4e0:	mov	r0, sl
   1f4e4:	bl	437c <readstat_get_variable@plt>
   1f4e8:	ldr	r2, [r8, #76]	; 0x4c
   1f4ec:	ldr	r3, [r8, #36]	; 0x24
   1f4f0:	add	r1, r0, #8
   1f4f4:	mla	r0, r2, r4, r3
   1f4f8:	bl	42bc <strncpy@plt>
   1f4fc:	ldr	r3, [r8, #148]	; 0x94
   1f500:	add	r4, r4, #1
   1f504:	cmp	r4, r3
   1f508:	blt	1f4dc <dta_begin_data+0x800>
   1f50c:	ldr	r2, [r8, #40]	; 0x28
   1f510:	ldr	r1, [r8, #36]	; 0x24
   1f514:	mov	r0, sl
   1f518:	bl	4454 <readstat_write_bytes@plt>
   1f51c:	subs	r4, r0, #0
   1f520:	bne	1ed64 <dta_begin_data+0x88>
   1f524:	ldrb	r3, [r8, #192]	; 0xc0
   1f528:	tst	r3, #4
   1f52c:	bne	1f768 <dta_begin_data+0xa8c>
   1f530:	ldr	r2, [r8, #48]	; 0x30
   1f534:	mov	r1, #0
   1f538:	ldr	r0, [r8, #44]	; 0x2c
   1f53c:	bl	42a4 <memset@plt>
   1f540:	ldr	r2, [r8, #48]	; 0x30
   1f544:	ldr	r1, [r8, #44]	; 0x2c
   1f548:	mov	r0, sl
   1f54c:	bl	4454 <readstat_write_bytes@plt>
   1f550:	subs	r4, r0, #0
   1f554:	bne	1ed64 <dta_begin_data+0x88>
   1f558:	ldrb	r3, [r8, #192]	; 0xc0
   1f55c:	tst	r3, #4
   1f560:	bne	1fb28 <dta_begin_data+0xe4c>
   1f564:	ldr	r3, [r8, #148]	; 0x94
   1f568:	cmp	r3, #0
   1f56c:	ble	1f7a8 <dta_begin_data+0xacc>
   1f570:	ldr	r3, [pc, #1768]	; 1fc60 <dta_begin_data+0xf84>
   1f574:	ldr	r7, [pc, #1768]	; 1fc64 <dta_begin_data+0xf88>
   1f578:	add	r3, pc, r3
   1f57c:	str	r3, [fp, #-184]	; 0xffffff48
   1f580:	ldr	r3, [pc, #1760]	; 1fc68 <dta_begin_data+0xf8c>
   1f584:	ldr	r6, [pc, #1760]	; 1fc6c <dta_begin_data+0xf90>
   1f588:	ldr	r5, [pc, #1760]	; 1fc70 <dta_begin_data+0xf94>
   1f58c:	ldr	r9, [pc, #1760]	; 1fc74 <dta_begin_data+0xf98>
   1f590:	add	r3, pc, r3
   1f594:	add	r7, pc, r7
   1f598:	add	r6, pc, r6
   1f59c:	add	r5, pc, r5
   1f5a0:	add	r9, pc, r9
   1f5a4:	str	r3, [fp, #-196]	; 0xffffff3c
   1f5a8:	mov	r4, #0
   1f5ac:	b	1f5d4 <dta_begin_data+0x8f8>
   1f5b0:	ldr	r2, [r8, #80]	; 0x50
   1f5b4:	ldr	r0, [r8, #52]	; 0x34
   1f5b8:	add	r1, r1, #308	; 0x134
   1f5bc:	mla	r0, r2, r4, r0
   1f5c0:	bl	42bc <strncpy@plt>
   1f5c4:	ldr	r3, [r8, #148]	; 0x94
   1f5c8:	add	r4, r4, #1
   1f5cc:	cmp	r4, r3
   1f5d0:	bge	1f7a8 <dta_begin_data+0xacc>
   1f5d4:	mov	r1, r4
   1f5d8:	mov	r0, sl
   1f5dc:	bl	437c <readstat_get_variable@plt>
   1f5e0:	ldrb	r3, [r0, #308]	; 0x134
   1f5e4:	mov	r1, r0
   1f5e8:	cmp	r3, #0
   1f5ec:	bne	1f5b0 <dta_begin_data+0x8d4>
   1f5f0:	ldr	r3, [r1, #2136]	; 0x858
   1f5f4:	ldr	r0, [r0]
   1f5f8:	str	r1, [fp, #-204]	; 0xffffff34
   1f5fc:	str	r3, [fp, #-200]	; 0xffffff38
   1f600:	bl	3e24 <readstat_type_class@plt>
   1f604:	ldr	r3, [fp, #-200]	; 0xffffff38
   1f608:	ldr	r1, [fp, #-204]	; 0xffffff34
   1f60c:	cmp	r0, #0
   1f610:	bne	1f6a4 <dta_begin_data+0x9c8>
   1f614:	cmp	r3, #0
   1f618:	bne	1f64c <dta_begin_data+0x970>
   1f61c:	ldr	r3, [r1]
   1f620:	sub	r2, r3, #1
   1f624:	cmp	r2, #1
   1f628:	bls	1fb20 <dta_begin_data+0xe44>
   1f62c:	cmp	r3, #3
   1f630:	movne	r2, #115	; 0x73
   1f634:	beq	1fbac <dta_begin_data+0xed0>
   1f638:	cmp	r3, #5
   1f63c:	movne	r3, #9
   1f640:	moveq	r3, #10
   1f644:	cmp	r2, #103	; 0x67
   1f648:	beq	1f6ac <dta_begin_data+0x9d0>
   1f64c:	ldr	r2, [r1, #2132]	; 0x854
   1f650:	ldr	r0, [fp, #-188]	; 0xffffff44
   1f654:	cmp	r2, #1
   1f658:	movne	r2, r6
   1f65c:	moveq	r2, r5
   1f660:	mov	r1, r7
   1f664:	bl	43e8 <sprintf@plt>
   1f668:	ldr	r2, [r8, #80]	; 0x50
   1f66c:	ldr	r0, [r8, #52]	; 0x34
   1f670:	ldr	r1, [fp, #-188]	; 0xffffff44
   1f674:	mla	r0, r2, r4, r0
   1f678:	bl	42bc <strncpy@plt>
   1f67c:	b	1f5c4 <dta_begin_data+0x8e8>
   1f680:	ldr	r1, [pc, #1520]	; 1fc78 <dta_begin_data+0xf9c>
   1f684:	ldr	r2, [pc, #1520]	; 1fc7c <dta_begin_data+0xfa0>
   1f688:	add	r1, pc, r1
   1f68c:	mov	r0, #2
   1f690:	strh	r3, [r6, #-136]!	; 0xffffff78
   1f694:	add	r2, pc, r2
   1f698:	b	1ef10 <dta_begin_data+0x234>
   1f69c:	mov	r5, #0
   1f6a0:	b	1f104 <dta_begin_data+0x428>
   1f6a4:	cmp	r3, #0
   1f6a8:	beq	1f748 <dta_begin_data+0xa6c>
   1f6ac:	ldr	r2, [r1, #2132]	; 0x854
   1f6b0:	ldr	r1, [fp, #-196]	; 0xffffff3c
   1f6b4:	cmp	r2, #1
   1f6b8:	ldr	r0, [fp, #-188]	; 0xffffff44
   1f6bc:	ldr	r2, [fp, #-184]	; 0xffffff48
   1f6c0:	moveq	r2, r1
   1f6c4:	mov	r1, r9
   1f6c8:	bl	43e8 <sprintf@plt>
   1f6cc:	b	1f668 <dta_begin_data+0x98c>
   1f6d0:	ldrb	r3, [r8, #192]	; 0xc0
   1f6d4:	tst	r3, #4
   1f6d8:	beq	1f50c <dta_begin_data+0x830>
   1f6dc:	ldr	r1, [pc, #1436]	; 1fc80 <dta_begin_data+0xfa4>
   1f6e0:	mov	r0, sl
   1f6e4:	add	r1, pc, r1
   1f6e8:	bl	4154 <readstat_write_string@plt>
   1f6ec:	subs	r4, r0, #0
   1f6f0:	bne	1ed64 <dta_begin_data+0x88>
   1f6f4:	ldrb	r3, [r8, #192]	; 0xc0
   1f6f8:	tst	r3, #4
   1f6fc:	bne	1f708 <dta_begin_data+0xa2c>
   1f700:	ldr	r3, [r8, #148]	; 0x94
   1f704:	b	1f4d0 <dta_begin_data+0x7f4>
   1f708:	ldr	r1, [pc, #1396]	; 1fc84 <dta_begin_data+0xfa8>
   1f70c:	mov	r0, sl
   1f710:	add	r1, pc, r1
   1f714:	bl	4154 <readstat_write_string@plt>
   1f718:	subs	r4, r0, #0
   1f71c:	bne	1ed64 <dta_begin_data+0x88>
   1f720:	b	1f700 <dta_begin_data+0xa24>
   1f724:	ldr	r2, [sl, #80]	; 0x50
   1f728:	ldr	r1, [pc, #1368]	; 1fc88 <dta_begin_data+0xfac>
   1f72c:	str	r2, [fp, #-172]	; 0xffffff54
   1f730:	ldr	r2, [pc, #1364]	; 1fc8c <dta_begin_data+0xfb0>
   1f734:	add	r1, pc, r1
   1f738:	mov	r0, #4
   1f73c:	mov	r3, r6
   1f740:	add	r2, pc, r2
   1f744:	b	1ef5c <dta_begin_data+0x280>
   1f748:	ldr	r3, [r1]
   1f74c:	sub	r2, r3, #1
   1f750:	cmp	r2, #1
   1f754:	bls	1fb7c <dta_begin_data+0xea0>
   1f758:	cmp	r3, #3
   1f75c:	beq	1fb74 <dta_begin_data+0xe98>
   1f760:	mov	r2, #103	; 0x67
   1f764:	b	1f638 <dta_begin_data+0x95c>
   1f768:	ldr	r1, [pc, #1312]	; 1fc90 <dta_begin_data+0xfb4>
   1f76c:	mov	r0, sl
   1f770:	add	r1, pc, r1
   1f774:	bl	4154 <readstat_write_string@plt>
   1f778:	subs	r4, r0, #0
   1f77c:	bne	1ed64 <dta_begin_data+0x88>
   1f780:	ldrb	r3, [r8, #192]	; 0xc0
   1f784:	tst	r3, #4
   1f788:	beq	1f530 <dta_begin_data+0x854>
   1f78c:	ldr	r1, [pc, #1280]	; 1fc94 <dta_begin_data+0xfb8>
   1f790:	mov	r0, sl
   1f794:	add	r1, pc, r1
   1f798:	bl	4154 <readstat_write_string@plt>
   1f79c:	subs	r4, r0, #0
   1f7a0:	bne	1ed64 <dta_begin_data+0x88>
   1f7a4:	b	1f530 <dta_begin_data+0x854>
   1f7a8:	ldr	r2, [r8, #56]	; 0x38
   1f7ac:	ldr	r1, [r8, #52]	; 0x34
   1f7b0:	mov	r0, sl
   1f7b4:	bl	4454 <readstat_write_bytes@plt>
   1f7b8:	subs	r4, r0, #0
   1f7bc:	bne	1ed64 <dta_begin_data+0x88>
   1f7c0:	ldrb	r3, [r8, #192]	; 0xc0
   1f7c4:	tst	r3, #4
   1f7c8:	bne	1fbc8 <dta_begin_data+0xeec>
   1f7cc:	mov	r4, #0
   1f7d0:	mov	r5, r4
   1f7d4:	b	1f800 <dta_begin_data+0xb24>
   1f7d8:	bl	437c <readstat_get_variable@plt>
   1f7dc:	ldr	r2, [r8, #84]	; 0x54
   1f7e0:	ldr	r1, [r0, #1588]	; 0x634
   1f7e4:	ldr	r0, [r8, #60]	; 0x3c
   1f7e8:	cmp	r1, #0
   1f7ec:	mla	r0, r2, r4, r0
   1f7f0:	add	r1, r1, #4
   1f7f4:	beq	1fb68 <dta_begin_data+0xe8c>
   1f7f8:	bl	42bc <strncpy@plt>
   1f7fc:	add	r4, r4, #1
   1f800:	ldr	r3, [r8, #148]	; 0x94
   1f804:	mov	r1, r4
   1f808:	cmp	r4, r3
   1f80c:	mov	r0, sl
   1f810:	blt	1f7d8 <dta_begin_data+0xafc>
   1f814:	ldr	r2, [r8, #64]	; 0x40
   1f818:	ldr	r1, [r8, #60]	; 0x3c
   1f81c:	bl	4454 <readstat_write_bytes@plt>
   1f820:	subs	r4, r0, #0
   1f824:	bne	1ed64 <dta_begin_data+0x88>
   1f828:	ldrb	r3, [r8, #192]	; 0xc0
   1f82c:	tst	r3, #4
   1f830:	bne	1fa7c <dta_begin_data+0xda0>
   1f834:	ldr	r3, [r8, #148]	; 0x94
   1f838:	cmp	r3, #0
   1f83c:	movgt	r4, #0
   1f840:	ble	1f874 <dta_begin_data+0xb98>
   1f844:	mov	r1, r4
   1f848:	mov	r0, sl
   1f84c:	bl	437c <readstat_get_variable@plt>
   1f850:	ldr	r2, [r8, #88]	; 0x58
   1f854:	ldr	r3, [r8, #68]	; 0x44
   1f858:	add	r1, r0, #564	; 0x234
   1f85c:	mla	r0, r2, r4, r3
   1f860:	bl	42bc <strncpy@plt>
   1f864:	ldr	r3, [r8, #148]	; 0x94
   1f868:	add	r4, r4, #1
   1f86c:	cmp	r4, r3
   1f870:	blt	1f844 <dta_begin_data+0xb68>
   1f874:	ldr	r2, [r8, #72]	; 0x48
   1f878:	ldr	r1, [r8, #68]	; 0x44
   1f87c:	mov	r0, sl
   1f880:	bl	4454 <readstat_write_bytes@plt>
   1f884:	subs	r4, r0, #0
   1f888:	bne	1ed64 <dta_begin_data+0x88>
   1f88c:	ldrb	r3, [r8, #192]	; 0xc0
   1f890:	tst	r3, #4
   1f894:	bne	1fa18 <dta_begin_data+0xd3c>
   1f898:	ldr	r3, [r8, #96]	; 0x60
   1f89c:	ldr	r2, [r8, #92]	; 0x5c
   1f8a0:	add	r3, r3, #7
   1f8a4:	bic	r3, r3, #7
   1f8a8:	mov	r7, sp
   1f8ac:	cmp	r2, #0
   1f8b0:	sub	sp, sp, r3
   1f8b4:	add	r9, sp, #16
   1f8b8:	beq	1fa5c <dta_begin_data+0xd80>
   1f8bc:	ldrb	r3, [r8, #192]	; 0xc0
   1f8c0:	tst	r3, #4
   1f8c4:	bne	1fa34 <dta_begin_data+0xd58>
   1f8c8:	ldr	r2, [pc, #968]	; 1fc98 <dta_begin_data+0xfbc>
   1f8cc:	mov	r5, #0
   1f8d0:	add	r2, pc, r2
   1f8d4:	str	r2, [fp, #-196]	; 0xffffff3c
   1f8d8:	ldr	r2, [pc, #956]	; 1fc9c <dta_begin_data+0xfc0>
   1f8dc:	add	r2, pc, r2
   1f8e0:	str	r2, [fp, #-200]	; 0xffffff38
   1f8e4:	ldr	r2, [pc, #948]	; 1fca0 <dta_begin_data+0xfc4>
   1f8e8:	add	r2, pc, r2
   1f8ec:	str	r2, [fp, #-204]	; 0xffffff34
   1f8f0:	ldr	r2, [pc, #940]	; 1fca4 <dta_begin_data+0xfc8>
   1f8f4:	add	r2, pc, r2
   1f8f8:	str	r2, [fp, #-208]	; 0xffffff30
   1f8fc:	ldr	r2, [sl, #52]	; 0x34
   1f900:	cmp	r5, r2
   1f904:	bge	1fb84 <dta_begin_data+0xea8>
   1f908:	tst	r3, #4
   1f90c:	beq	1f9fc <dta_begin_data+0xd20>
   1f910:	ldr	r1, [fp, #-196]	; 0xffffff3c
   1f914:	mov	r0, sl
   1f918:	bl	4154 <readstat_write_string@plt>
   1f91c:	cmp	r0, #0
   1f920:	bne	1fa50 <dta_begin_data+0xd74>
   1f924:	ldr	r3, [sl, #48]	; 0x30
   1f928:	lsl	r2, r5, #2
   1f92c:	str	r2, [fp, #-184]	; 0xffffff48
   1f930:	ldr	r0, [r3, r5, lsl #2]
   1f934:	bl	41fc <strlen@plt>
   1f938:	ldr	r2, [r8, #92]	; 0x5c
   1f93c:	cmp	r2, #2
   1f940:	mov	r6, r0
   1f944:	beq	1fae8 <dta_begin_data+0xe0c>
   1f948:	cmp	r2, #4
   1f94c:	beq	1fabc <dta_begin_data+0xde0>
   1f950:	ldr	r3, [r8, #96]	; 0x60
   1f954:	ldr	r1, [fp, #-200]	; 0xffffff38
   1f958:	mov	r2, r3
   1f95c:	mov	r0, r9
   1f960:	str	r3, [fp, #-212]	; 0xffffff2c
   1f964:	bl	42bc <strncpy@plt>
   1f968:	ldr	r3, [fp, #-212]	; 0xffffff2c
   1f96c:	mov	r1, r9
   1f970:	mov	r2, r3
   1f974:	mov	r0, sl
   1f978:	bl	4454 <readstat_write_bytes@plt>
   1f97c:	cmp	r0, #0
   1f980:	bne	1fa50 <dta_begin_data+0xd74>
   1f984:	add	r5, r5, #1
   1f988:	mov	r3, r5
   1f98c:	ldr	r2, [fp, #-204]	; 0xffffff34
   1f990:	ldr	r1, [r8, #96]	; 0x60
   1f994:	mov	r0, r9
   1f998:	bl	4280 <snprintf@plt>
   1f99c:	ldr	r2, [r8, #96]	; 0x60
   1f9a0:	mov	r1, r9
   1f9a4:	mov	r0, sl
   1f9a8:	bl	4454 <readstat_write_bytes@plt>
   1f9ac:	cmp	r0, #0
   1f9b0:	bne	1fa50 <dta_begin_data+0xd74>
   1f9b4:	ldr	r3, [sl, #48]	; 0x30
   1f9b8:	ldr	r1, [fp, #-184]	; 0xffffff48
   1f9bc:	add	r2, r6, #1
   1f9c0:	mov	r0, sl
   1f9c4:	ldr	r1, [r3, r1]
   1f9c8:	bl	4454 <readstat_write_bytes@plt>
   1f9cc:	cmp	r0, #0
   1f9d0:	bne	1fa50 <dta_begin_data+0xd74>
   1f9d4:	ldrb	r3, [r8, #192]	; 0xc0
   1f9d8:	tst	r3, #4
   1f9dc:	beq	1f8fc <dta_begin_data+0xc20>
   1f9e0:	ldr	r1, [fp, #-208]	; 0xffffff30
   1f9e4:	mov	r0, sl
   1f9e8:	bl	4154 <readstat_write_string@plt>
   1f9ec:	cmp	r0, #0
   1f9f0:	bne	1fa50 <dta_begin_data+0xd74>
   1f9f4:	ldrb	r3, [r8, #192]	; 0xc0
   1f9f8:	b	1f8fc <dta_begin_data+0xc20>
   1f9fc:	mov	r3, #1
   1fa00:	mov	r2, #1
   1fa04:	ldr	r1, [fp, #-188]	; 0xffffff44
   1fa08:	mov	r0, sl
   1fa0c:	strb	r3, [fp, #-164]	; 0xffffff5c
   1fa10:	bl	4454 <readstat_write_bytes@plt>
   1fa14:	b	1f91c <dta_begin_data+0xc40>
   1fa18:	ldr	r1, [pc, #648]	; 1fca8 <dta_begin_data+0xfcc>
   1fa1c:	mov	r0, sl
   1fa20:	add	r1, pc, r1
   1fa24:	bl	4154 <readstat_write_string@plt>
   1fa28:	cmp	r0, #0
   1fa2c:	beq	1f898 <dta_begin_data+0xbbc>
   1fa30:	b	1ee44 <dta_begin_data+0x168>
   1fa34:	ldr	r1, [pc, #624]	; 1fcac <dta_begin_data+0xfd0>
   1fa38:	mov	r0, sl
   1fa3c:	add	r1, pc, r1
   1fa40:	bl	4154 <readstat_write_string@plt>
   1fa44:	cmp	r0, #0
   1fa48:	ldrbeq	r3, [r8, #192]	; 0xc0
   1fa4c:	beq	1f8c8 <dta_begin_data+0xbec>
   1fa50:	mov	r4, r0
   1fa54:	mov	sp, r7
   1fa58:	b	1ed64 <dta_begin_data+0x88>
   1fa5c:	mov	sp, r7
   1fa60:	ldrb	r3, [r8, #192]	; 0xc0
   1fa64:	tst	r3, #4
   1fa68:	bne	1fc08 <dta_begin_data+0xf2c>
   1fa6c:	mov	r0, r4
   1fa70:	str	r8, [sl, #300]	; 0x12c
   1fa74:	sub	sp, fp, #32
   1fa78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fa7c:	ldr	r1, [pc, #556]	; 1fcb0 <dta_begin_data+0xfd4>
   1fa80:	mov	r0, sl
   1fa84:	add	r1, pc, r1
   1fa88:	bl	4154 <readstat_write_string@plt>
   1fa8c:	subs	r4, r0, #0
   1fa90:	bne	1ed64 <dta_begin_data+0x88>
   1fa94:	ldrb	r3, [r8, #192]	; 0xc0
   1fa98:	tst	r3, #4
   1fa9c:	beq	1f834 <dta_begin_data+0xb58>
   1faa0:	ldr	r1, [pc, #524]	; 1fcb4 <dta_begin_data+0xfd8>
   1faa4:	mov	r0, sl
   1faa8:	add	r1, pc, r1
   1faac:	bl	4154 <readstat_write_string@plt>
   1fab0:	subs	r4, r0, #0
   1fab4:	bne	1ed64 <dta_begin_data+0x88>
   1fab8:	b	1f834 <dta_begin_data+0xb58>
   1fabc:	ldr	r3, [r8, #96]	; 0x60
   1fac0:	mov	r2, #4
   1fac4:	ldr	r1, [fp, #-188]	; 0xffffff44
   1fac8:	add	r3, r0, r3, lsl #1
   1facc:	add	r3, r3, #1
   1fad0:	mov	r0, sl
   1fad4:	str	r3, [fp, #-164]	; 0xffffff5c
   1fad8:	bl	4454 <readstat_write_bytes@plt>
   1fadc:	cmp	r0, #0
   1fae0:	beq	1f950 <dta_begin_data+0xc74>
   1fae4:	b	1fa50 <dta_begin_data+0xd74>
   1fae8:	ldr	r3, [r8, #96]	; 0x60
   1faec:	ldr	r1, [fp, #-188]	; 0xffffff44
   1faf0:	add	r3, r0, r3, lsl #1
   1faf4:	add	r3, r3, #1
   1faf8:	mov	r0, sl
   1fafc:	strh	r3, [fp, #-164]	; 0xffffff5c
   1fb00:	bl	4454 <readstat_write_bytes@plt>
   1fb04:	b	1fadc <dta_begin_data+0xe00>
   1fb08:	mov	r1, r8
   1fb0c:	mov	r0, sl
   1fb10:	bl	1e6c4 <dta_emit_header_time_stamp.part.22>
   1fb14:	subs	r4, r0, #0
   1fb18:	bne	1ed64 <dta_begin_data+0x88>
   1fb1c:	b	1ef94 <dta_begin_data+0x2b8>
   1fb20:	mov	r3, #8
   1fb24:	b	1f64c <dta_begin_data+0x970>
   1fb28:	ldr	r1, [pc, #392]	; 1fcb8 <dta_begin_data+0xfdc>
   1fb2c:	mov	r0, sl
   1fb30:	add	r1, pc, r1
   1fb34:	bl	4154 <readstat_write_string@plt>
   1fb38:	subs	r4, r0, #0
   1fb3c:	bne	1ed64 <dta_begin_data+0x88>
   1fb40:	ldrb	r3, [r8, #192]	; 0xc0
   1fb44:	tst	r3, #4
   1fb48:	beq	1f564 <dta_begin_data+0x888>
   1fb4c:	ldr	r1, [pc, #360]	; 1fcbc <dta_begin_data+0xfe0>
   1fb50:	mov	r0, sl
   1fb54:	add	r1, pc, r1
   1fb58:	bl	4154 <readstat_write_string@plt>
   1fb5c:	subs	r4, r0, #0
   1fb60:	bne	1ed64 <dta_begin_data+0x88>
   1fb64:	b	1f564 <dta_begin_data+0x888>
   1fb68:	mov	r1, r5
   1fb6c:	bl	42a4 <memset@plt>
   1fb70:	b	1f7fc <dta_begin_data+0xb20>
   1fb74:	mov	r3, #12
   1fb78:	b	1f6ac <dta_begin_data+0x9d0>
   1fb7c:	mov	r3, #8
   1fb80:	b	1f6ac <dta_begin_data+0x9d0>
   1fb84:	tst	r3, #4
   1fb88:	bne	1fbb4 <dta_begin_data+0xed8>
   1fb8c:	ldr	r1, [r8, #92]	; 0x5c
   1fb90:	mov	r0, sl
   1fb94:	add	r1, r1, #1
   1fb98:	bl	401c <readstat_write_zeros@plt>
   1fb9c:	cmp	r0, #0
   1fba0:	mov	sp, r7
   1fba4:	bne	1ee44 <dta_begin_data+0x168>
   1fba8:	b	1fa60 <dta_begin_data+0xd84>
   1fbac:	mov	r3, #12
   1fbb0:	b	1f64c <dta_begin_data+0x970>
   1fbb4:	ldr	r1, [pc, #260]	; 1fcc0 <dta_begin_data+0xfe4>
   1fbb8:	mov	r0, sl
   1fbbc:	add	r1, pc, r1
   1fbc0:	bl	4154 <readstat_write_string@plt>
   1fbc4:	b	1fb9c <dta_begin_data+0xec0>
   1fbc8:	ldr	r1, [pc, #244]	; 1fcc4 <dta_begin_data+0xfe8>
   1fbcc:	mov	r0, sl
   1fbd0:	add	r1, pc, r1
   1fbd4:	bl	4154 <readstat_write_string@plt>
   1fbd8:	subs	r4, r0, #0
   1fbdc:	bne	1ed64 <dta_begin_data+0x88>
   1fbe0:	ldrb	r3, [r8, #192]	; 0xc0
   1fbe4:	tst	r3, #4
   1fbe8:	beq	1f7cc <dta_begin_data+0xaf0>
   1fbec:	ldr	r1, [pc, #212]	; 1fcc8 <dta_begin_data+0xfec>
   1fbf0:	mov	r0, sl
   1fbf4:	add	r1, pc, r1
   1fbf8:	bl	4154 <readstat_write_string@plt>
   1fbfc:	subs	r4, r0, #0
   1fc00:	bne	1ed64 <dta_begin_data+0x88>
   1fc04:	b	1f7cc <dta_begin_data+0xaf0>
   1fc08:	ldr	r1, [pc, #188]	; 1fccc <dta_begin_data+0xff0>
   1fc0c:	mov	r0, sl
   1fc10:	add	r1, pc, r1
   1fc14:	bl	4154 <readstat_write_string@plt>
   1fc18:	cmp	r0, #0
   1fc1c:	beq	1fa6c <dta_begin_data+0xd90>
   1fc20:	b	1ee44 <dta_begin_data+0x168>
   1fc24:	.word	0x00007658
   1fc28:	.word	0x000079c8
   1fc2c:	.word	0x0000763c
   1fc30:	.word	0x0000761c
   1fc34:	.word	0x000075fc
   1fc38:	.word	0x000075f8
   1fc3c:	.word	0x000075ec
   1fc40:	.word	0x000075bc
   1fc44:	.word	0x000075ac
   1fc48:	.word	0x00007594
   1fc4c:	.word	0x00007248
   1fc50:	.word	0x00007224
   1fc54:	.word	0x000073d4
   1fc58:	.word	0x00007124
   1fc5c:	.word	0x00007030
   1fc60:	.word	0x00005740
   1fc64:	.word	0x000072d8
   1fc68:	.word	0x000072b4
   1fc6c:	.word	0x00005720
   1fc70:	.word	0x000072a8
   1fc74:	.word	0x000072c0
   1fc78:	.word	0x00006e70
   1fc7c:	.word	0x00006e60
   1fc80:	.word	0x00007050
   1fc84:	.word	0x00006e48
   1fc88:	.word	0x00006dd0
   1fc8c:	.word	0x00006dc0
   1fc90:	.word	0x00006df4
   1fc94:	.word	0x00006ddc
   1fc98:	.word	0x00006d80
   1fc9c:	.word	0x00006d7c
   1fca0:	.word	0x00006d78
   1fca4:	.word	0x00006d74
   1fca8:	.word	0x00006bc0
   1fcac:	.word	0x00006bf8
   1fcb0:	.word	0x00006b30
   1fcb4:	.word	0x00006b24
   1fcb8:	.word	0x00006a4c
   1fcbc:	.word	0x00006a34
   1fcc0:	.word	0x00006cb8
   1fcc4:	.word	0x000069c4
   1fcc8:	.word	0x000069ac
   1fccc:	.word	0x00006aa8

0001fcd0 <dta_111_variable_width>:
   1fcd0:	cmp	r0, #0
   1fcd4:	bne	1fcec <dta_111_variable_width+0x1c>
   1fcd8:	sub	r0, r1, #1
   1fcdc:	cmp	r0, #243	; 0xf3
   1fce0:	movls	r0, r1
   1fce4:	movhi	r0, #244	; 0xf4
   1fce8:	bx	lr
   1fcec:	cmp	r0, #5
   1fcf0:	beq	1fd14 <dta_111_variable_width+0x44>
   1fcf4:	sub	r3, r0, #3
   1fcf8:	cmp	r3, #1
   1fcfc:	bls	1fd1c <dta_111_variable_width+0x4c>
   1fd00:	cmp	r0, #2
   1fd04:	subne	r0, r0, #1
   1fd08:	clzne	r0, r0
   1fd0c:	lsrne	r0, r0, #5
   1fd10:	bx	lr
   1fd14:	mov	r0, #8
   1fd18:	bx	lr
   1fd1c:	mov	r0, #4
   1fd20:	bx	lr

0001fd24 <dta_old_variable_width>:
   1fd24:	cmp	r0, #0
   1fd28:	bne	1fd40 <dta_old_variable_width+0x1c>
   1fd2c:	sub	r0, r1, #1
   1fd30:	cmp	r0, #127	; 0x7f
   1fd34:	movls	r0, r1
   1fd38:	movhi	r0, #128	; 0x80
   1fd3c:	bx	lr
   1fd40:	cmp	r0, #5
   1fd44:	beq	1fd68 <dta_old_variable_width+0x44>
   1fd48:	sub	r3, r0, #3
   1fd4c:	cmp	r3, #1
   1fd50:	bls	1fd70 <dta_old_variable_width+0x4c>
   1fd54:	cmp	r0, #2
   1fd58:	subne	r0, r0, #1
   1fd5c:	clzne	r0, r0
   1fd60:	lsrne	r0, r0, #5
   1fd64:	bx	lr
   1fd68:	mov	r0, #8
   1fd6c:	bx	lr
   1fd70:	mov	r0, #4
   1fd74:	bx	lr

0001fd78 <dta_113_write_missing_numeric>:
   1fd78:	ldr	r3, [r1]
   1fd7c:	mov	r2, r0
   1fd80:	cmp	r3, #1
   1fd84:	moveq	r3, #101	; 0x65
   1fd88:	strbeq	r3, [r0]
   1fd8c:	beq	1fdc8 <dta_113_write_missing_numeric+0x50>
   1fd90:	cmp	r3, #2
   1fd94:	ldrheq	r3, [pc, #96]	; 1fdfc <dta_113_write_missing_numeric+0x84>
   1fd98:	strheq	r3, [r0]
   1fd9c:	beq	1fdc8 <dta_113_write_missing_numeric+0x50>
   1fda0:	cmp	r3, #3
   1fda4:	mvneq	r3, #-2147483622	; 0x8000001a
   1fda8:	streq	r3, [r0]
   1fdac:	beq	1fdc8 <dta_113_write_missing_numeric+0x50>
   1fdb0:	cmp	r3, #4
   1fdb4:	moveq	r3, #2130706432	; 0x7f000000
   1fdb8:	streq	r3, [r0]
   1fdbc:	beq	1fdc8 <dta_113_write_missing_numeric+0x50>
   1fdc0:	cmp	r3, #5
   1fdc4:	beq	1fdd0 <dta_113_write_missing_numeric+0x58>
   1fdc8:	mov	r0, #0
   1fdcc:	bx	lr
   1fdd0:	sub	sp, sp, #8
   1fdd4:	ldr	r1, [pc, #36]	; 1fe00 <dta_113_write_missing_numeric+0x88>
   1fdd8:	add	r3, sp, #8
   1fddc:	mov	r0, #0
   1fde0:	strd	r0, [r3, #-8]!
   1fde4:	ldm	r3!, {r0, r1}
   1fde8:	str	r0, [r2]
   1fdec:	str	r1, [r2, #4]
   1fdf0:	mov	r0, #0
   1fdf4:	add	sp, sp, #8
   1fdf8:	bx	lr
   1fdfc:	.word	0x00007fe5
   1fe00:	.word	0x7fe00000

0001fe04 <dta_write_double>:
   1fe04:	vldr	d7, [pc, #100]	; 1fe70 <dta_write_double+0x6c>
   1fe08:	ldr	r3, [pc, #104]	; 1fe78 <dta_write_double+0x74>
   1fe0c:	mvn	r2, #0
   1fe10:	sub	sp, sp, #16
   1fe14:	vcmpe.f64	d0, d7
   1fe18:	strd	r2, [sp]
   1fe1c:	vmrs	APSR_nzcv, fpscr
   1fe20:	movgt	r2, #20
   1fe24:	ble	1fe34 <dta_write_double+0x30>
   1fe28:	mov	r0, r2
   1fe2c:	add	sp, sp, #16
   1fe30:	bx	lr
   1fe34:	vcmp.f64	d0, d0
   1fe38:	vmrs	APSR_nzcv, fpscr
   1fe3c:	bvs	1fe68 <dta_write_double+0x64>
   1fe40:	add	r3, sp, #16
   1fe44:	mov	ip, r0
   1fe48:	vstmdb	r3!, {d0}
   1fe4c:	mov	r2, #0
   1fe50:	ldm	r3!, {r0, r1}
   1fe54:	str	r0, [ip]
   1fe58:	str	r1, [ip, #4]
   1fe5c:	mov	r0, r2
   1fe60:	add	sp, sp, #16
   1fe64:	bx	lr
   1fe68:	add	sp, sp, #16
   1fe6c:	b	1fd78 <dta_113_write_missing_numeric>
   1fe70:	.word	0xffffffff
   1fe74:	.word	0x7fdfffff
   1fe78:	.word	0x7fdfffff

0001fe7c <dta_write_float>:
   1fe7c:	vldr	s15, [pc, #68]	; 1fec8 <dta_write_float+0x4c>
   1fe80:	sub	sp, sp, #8
   1fe84:	mvn	r3, #-2130706432	; 0x81000000
   1fe88:	str	r3, [sp, #4]
   1fe8c:	vcmpe.f32	s0, s15
   1fe90:	vmrs	APSR_nzcv, fpscr
   1fe94:	movgt	r0, #20
   1fe98:	ble	1fea4 <dta_write_float+0x28>
   1fe9c:	add	sp, sp, #8
   1fea0:	bx	lr
   1fea4:	vcmp.f32	s0, s0
   1fea8:	vmrs	APSR_nzcv, fpscr
   1feac:	vmovvc	r2, s0
   1feb0:	movvc	r3, r0
   1feb4:	movvc	r0, #0
   1feb8:	strvc	r2, [r3]
   1febc:	bvc	1fe9c <dta_write_float+0x20>
   1fec0:	add	sp, sp, #8
   1fec4:	b	1fd78 <dta_113_write_missing_numeric>
   1fec8:	.word	0x7effffff

0001fecc <readstat_begin_writing_dta>:
   1fecc:	ldr	r3, [r0, #8]
   1fed0:	ldr	ip, [pc, #408]	; 20070 <readstat_begin_writing_dta+0x1a4>
   1fed4:	cmp	r3, #0
   1fed8:	push	{r4, r5, lr}
   1fedc:	add	ip, pc, ip
   1fee0:	ldr	lr, [pc, #396]	; 20074 <readstat_begin_writing_dta+0x1a8>
   1fee4:	bne	1ffb4 <readstat_begin_writing_dta+0xe8>
   1fee8:	mov	r3, #118	; 0x76
   1feec:	str	r3, [r0, #8]
   1fef0:	ldr	r3, [pc, #384]	; 20078 <readstat_begin_writing_dta+0x1ac>
   1fef4:	ldr	ip, [ip, lr]
   1fef8:	add	r3, pc, r3
   1fefc:	str	r3, [r0, #228]	; 0xe4
   1ff00:	str	ip, [r0, #292]	; 0x124
   1ff04:	ldr	ip, [pc, #368]	; 2007c <readstat_begin_writing_dta+0x1b0>
   1ff08:	ldr	r3, [pc, #368]	; 20080 <readstat_begin_writing_dta+0x1b4>
   1ff0c:	add	ip, pc, ip
   1ff10:	add	r3, pc, r3
   1ff14:	str	ip, [r0, #232]	; 0xe8
   1ff18:	str	r3, [r0, #260]	; 0x104
   1ff1c:	ldr	r5, [pc, #352]	; 20084 <readstat_begin_writing_dta+0x1b8>
   1ff20:	ldr	r4, [pc, #352]	; 20088 <readstat_begin_writing_dta+0x1bc>
   1ff24:	ldr	lr, [pc, #352]	; 2008c <readstat_begin_writing_dta+0x1c0>
   1ff28:	ldr	ip, [pc, #352]	; 20090 <readstat_begin_writing_dta+0x1c4>
   1ff2c:	ldr	r3, [pc, #352]	; 20094 <readstat_begin_writing_dta+0x1c8>
   1ff30:	add	r5, pc, r5
   1ff34:	add	r4, pc, r4
   1ff38:	add	lr, pc, lr
   1ff3c:	add	ip, pc, ip
   1ff40:	add	r3, pc, r3
   1ff44:	str	r5, [r0, #236]	; 0xec
   1ff48:	str	r4, [r0, #240]	; 0xf0
   1ff4c:	str	lr, [r0, #244]	; 0xf4
   1ff50:	str	ip, [r0, #268]	; 0x10c
   1ff54:	str	r3, [r0, #272]	; 0x110
   1ff58:	ldr	ip, [pc, #312]	; 20098 <readstat_begin_writing_dta+0x1cc>
   1ff5c:	ldr	r3, [pc, #312]	; 2009c <readstat_begin_writing_dta+0x1d0>
   1ff60:	add	ip, pc, ip
   1ff64:	add	r3, pc, r3
   1ff68:	ldr	r5, [pc, #304]	; 200a0 <readstat_begin_writing_dta+0x1d4>
   1ff6c:	ldr	r4, [pc, #304]	; 200a4 <readstat_begin_writing_dta+0x1d8>
   1ff70:	ldr	lr, [pc, #304]	; 200a8 <readstat_begin_writing_dta+0x1dc>
   1ff74:	str	ip, [r0, #248]	; 0xf8
   1ff78:	str	r3, [r0, #252]	; 0xfc
   1ff7c:	ldr	ip, [pc, #296]	; 200ac <readstat_begin_writing_dta+0x1e0>
   1ff80:	ldr	r3, [pc, #296]	; 200b0 <readstat_begin_writing_dta+0x1e4>
   1ff84:	add	r5, pc, r5
   1ff88:	add	r4, pc, r4
   1ff8c:	add	lr, pc, lr
   1ff90:	add	ip, pc, ip
   1ff94:	add	r3, pc, r3
   1ff98:	str	r5, [r0, #256]	; 0x100
   1ff9c:	str	r4, [r0, #264]	; 0x108
   1ffa0:	str	lr, [r0, #276]	; 0x114
   1ffa4:	str	ip, [r0, #284]	; 0x11c
   1ffa8:	str	r3, [r0, #288]	; 0x120
   1ffac:	pop	{r4, r5, lr}
   1ffb0:	b	3f68 <readstat_begin_writing_file@plt>
   1ffb4:	ldr	ip, [ip, lr]
   1ffb8:	cmp	r3, #116	; 0x74
   1ffbc:	str	ip, [r0, #292]	; 0x124
   1ffc0:	bgt	20058 <readstat_begin_writing_dta+0x18c>
   1ffc4:	cmp	r3, #110	; 0x6e
   1ffc8:	bgt	20028 <readstat_begin_writing_dta+0x15c>
   1ffcc:	ldr	ip, [pc, #224]	; 200b4 <readstat_begin_writing_dta+0x1e8>
   1ffd0:	cmp	r3, #109	; 0x6d
   1ffd4:	add	ip, pc, ip
   1ffd8:	str	ip, [r0, #228]	; 0xe4
   1ffdc:	bgt	20034 <readstat_begin_writing_dta+0x168>
   1ffe0:	ldr	ip, [pc, #208]	; 200b8 <readstat_begin_writing_dta+0x1ec>
   1ffe4:	add	ip, pc, ip
   1ffe8:	str	ip, [r0, #232]	; 0xe8
   1ffec:	cmp	r3, #112	; 0x70
   1fff0:	bgt	1ff1c <readstat_begin_writing_dta+0x50>
   1fff4:	ldr	r4, [pc, #192]	; 200bc <readstat_begin_writing_dta+0x1f0>
   1fff8:	ldr	lr, [pc, #192]	; 200c0 <readstat_begin_writing_dta+0x1f4>
   1fffc:	ldr	ip, [pc, #192]	; 200c4 <readstat_begin_writing_dta+0x1f8>
   20000:	ldr	r3, [pc, #192]	; 200c8 <readstat_begin_writing_dta+0x1fc>
   20004:	add	r4, pc, r4
   20008:	add	lr, pc, lr
   2000c:	add	ip, pc, ip
   20010:	add	r3, pc, r3
   20014:	str	r4, [r0, #236]	; 0xec
   20018:	str	lr, [r0, #240]	; 0xf0
   2001c:	str	ip, [r0, #244]	; 0xf4
   20020:	str	r3, [r0, #268]	; 0x10c
   20024:	b	1ff58 <readstat_begin_writing_dta+0x8c>
   20028:	ldr	ip, [pc, #156]	; 200cc <readstat_begin_writing_dta+0x200>
   2002c:	add	ip, pc, ip
   20030:	str	ip, [r0, #228]	; 0xe4
   20034:	ldr	ip, [pc, #148]	; 200d0 <readstat_begin_writing_dta+0x204>
   20038:	cmp	r3, #117	; 0x75
   2003c:	add	ip, pc, ip
   20040:	str	ip, [r0, #232]	; 0xe8
   20044:	bne	1ffec <readstat_begin_writing_dta+0x120>
   20048:	ldr	r3, [pc, #132]	; 200d4 <readstat_begin_writing_dta+0x208>
   2004c:	add	r3, pc, r3
   20050:	str	r3, [r0, #260]	; 0x104
   20054:	b	1ff1c <readstat_begin_writing_dta+0x50>
   20058:	ldr	ip, [pc, #120]	; 200d8 <readstat_begin_writing_dta+0x20c>
   2005c:	cmp	r3, #117	; 0x75
   20060:	add	ip, pc, ip
   20064:	str	ip, [r0, #228]	; 0xe4
   20068:	bne	1ff04 <readstat_begin_writing_dta+0x38>
   2006c:	b	20034 <readstat_begin_writing_dta+0x168>
   20070:	.word	0x0002411c
   20074:	.word	0x000002fc
   20078:	.word	0xffffdcdc
   2007c:	.word	0xffffec58
   20080:	.word	0xffffe738
   20084:	.word	0xffffd9c0
   20088:	.word	0xffffd9e4
   2008c:	.word	0xffffda18
   20090:	.word	0xfffffe34
   20094:	.word	0xffffdd94
   20098:	.word	0xffffff14
   2009c:	.word	0xfffffe98
   200a0:	.word	0xffffdb9c
   200a4:	.word	0xffffda18
   200a8:	.word	0xffffed48
   200ac:	.word	0xffffdebc
   200b0:	.word	0xffffda08
   200b4:	.word	0xfffffd48
   200b8:	.word	0xffffeb50
   200bc:	.word	0xffffd900
   200c0:	.word	0xffffd92c
   200c4:	.word	0xffffd958
   200c8:	.word	0xffffddb0
   200cc:	.word	0xfffffc9c
   200d0:	.word	0xffffeb10
   200d4:	.word	0xffffd92c
   200d8:	.word	0xffffdb74

000200dc <submit_value_label>:
   200dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   200e0:	sub	sp, sp, #36	; 0x24
   200e4:	ldr	r6, [r0, #20]
   200e8:	ldrd	sl, [sp, #72]	; 0x48
   200ec:	cmp	r6, #0
   200f0:	beq	2021c <submit_value_label+0x140>
   200f4:	cmp	r2, #2
   200f8:	mov	r7, r0
   200fc:	mov	r8, r1
   20100:	vmov	r0, r1, d0
   20104:	beq	20178 <submit_value_label+0x9c>
   20108:	cmp	r2, #3
   2010c:	beq	2021c <submit_value_label+0x140>
   20110:	add	r4, sp, #16
   20114:	mov	r3, #0
   20118:	cmp	r2, #0
   2011c:	str	r3, [r4, #4]
   20120:	str	r3, [sp, #16]
   20124:	str	r3, [r4, #8]
   20128:	str	r3, [r4, #12]
   2012c:	bne	20228 <submit_value_label+0x14c>
   20130:	vstr	d0, [sp, #16]
   20134:	mov	r3, #5
   20138:	str	r3, [sp, #24]
   2013c:	add	r3, sp, #32
   20140:	ldmdb	r3, {r0, r1}
   20144:	ldr	r3, [sp, #96]	; 0x60
   20148:	str	r3, [sp, #12]
   2014c:	ldr	r3, [sp, #92]	; 0x5c
   20150:	stm	sp, {r0, r1}
   20154:	str	r3, [sp, #8]
   20158:	mov	r0, r8
   2015c:	ldm	r4, {r2, r3}
   20160:	blx	r6
   20164:	cmp	r0, #0
   20168:	beq	2021c <submit_value_label+0x140>
   2016c:	mov	r0, #4
   20170:	add	sp, sp, #36	; 0x24
   20174:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20178:	ldrd	r2, [sp, #80]	; 0x50
   2017c:	cmp	r2, sl
   20180:	sbcs	r3, r3, fp
   20184:	blt	2021c <submit_value_label+0x140>
   20188:	add	r9, sp, #24
   2018c:	mov	r3, r8
   20190:	add	r4, sp, #16
   20194:	mov	r8, r7
   20198:	mov	r5, #0
   2019c:	mov	r7, r6
   201a0:	mov	r6, r9
   201a4:	mov	r9, r3
   201a8:	b	201b0 <submit_value_label+0xd4>
   201ac:	ldr	r7, [r8, #20]
   201b0:	mov	r0, sl
   201b4:	mov	r1, fp
   201b8:	str	r5, [r4]
   201bc:	str	r5, [r4, #4]
   201c0:	str	r5, [r4, #8]
   201c4:	str	r5, [r4, #12]
   201c8:	bl	2388c <__aeabi_l2d>
   201cc:	mov	r3, #5
   201d0:	str	r3, [sp, #24]
   201d4:	ldr	r3, [sp, #96]	; 0x60
   201d8:	str	r3, [sp, #12]
   201dc:	ldr	r3, [sp, #92]	; 0x5c
   201e0:	str	r3, [sp, #8]
   201e4:	strd	r0, [sp, #16]
   201e8:	ldm	r6, {r0, r1}
   201ec:	ldm	r4, {r2, r3}
   201f0:	stm	sp, {r0, r1}
   201f4:	mov	r0, r9
   201f8:	blx	r7
   201fc:	cmp	r0, #0
   20200:	bne	2016c <submit_value_label+0x90>
   20204:	ldrd	r2, [sp, #80]	; 0x50
   20208:	adds	sl, sl, #1
   2020c:	adc	fp, fp, #0
   20210:	cmp	r2, sl
   20214:	sbcs	r3, r3, fp
   20218:	bge	201ac <submit_value_label+0xd0>
   2021c:	mov	r0, #0
   20220:	add	sp, sp, #36	; 0x24
   20224:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20228:	cmp	r2, #1
   2022c:	beq	2024c <submit_value_label+0x170>
   20230:	cmn	r2, #1
   20234:	moveq	r2, #0
   20238:	ldreq	r3, [pc, #24]	; 20258 <submit_value_label+0x17c>
   2023c:	moveq	r1, #5
   20240:	streq	r1, [sp, #24]
   20244:	strdeq	r2, [sp, #16]
   20248:	b	2013c <submit_value_label+0x60>
   2024c:	ldr	r3, [sp, #88]	; 0x58
   20250:	str	r3, [sp, #16]
   20254:	b	2013c <submit_value_label+0x60>
   20258:	.word	0x7ff80000

0002025c <submit_columns>:
   2025c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20260:	ldr	r3, [r1, #268]	; 0x10c
   20264:	cmp	r3, #0
   20268:	ble	20338 <submit_columns+0xdc>
   2026c:	mov	r5, #2208	; 0x8a0
   20270:	ldr	r4, [r1, #276]	; 0x114
   20274:	mul	r5, r5, r3
   20278:	mov	ip, #0
   2027c:	ldr	r3, [r4, ip]
   20280:	ldr	lr, [r1, #256]	; 0x100
   20284:	add	ip, ip, #2208	; 0x8a0
   20288:	cmp	r3, lr
   2028c:	add	r3, r3, #1
   20290:	strge	r3, [r1, #256]	; 0x100
   20294:	cmp	r5, ip
   20298:	bne	2027c <submit_columns+0x20>
   2029c:	ldr	r8, [r0, #8]
   202a0:	cmp	r8, #0
   202a4:	beq	20338 <submit_columns+0xdc>
   202a8:	mov	r7, #0
   202ac:	mov	sl, r2
   202b0:	mov	r9, r0
   202b4:	mov	r6, r1
   202b8:	mov	r5, r7
   202bc:	mov	fp, #2208	; 0x8a0
   202c0:	b	202cc <submit_columns+0x70>
   202c4:	ldr	r4, [r6, #276]	; 0x114
   202c8:	ldr	r8, [r9, #8]
   202cc:	mla	r4, fp, r5, r4
   202d0:	mov	r0, r5
   202d4:	add	r1, r4, #16
   202d8:	ldr	r3, [r4, #16]
   202dc:	str	r5, [r4, #20]
   202e0:	cmp	r3, #0
   202e4:	str	r7, [r4, #2164]	; 0x874
   202e8:	ldreq	r3, [r4, #8]
   202ec:	streq	r3, [r4, #1612]	; 0x64c
   202f0:	ldrb	r3, [r4, #2168]	; 0x878
   202f4:	cmp	r3, #0
   202f8:	addne	r2, r4, #2160	; 0x870
   202fc:	mov	r3, sl
   20300:	addne	r2, r2, #8
   20304:	moveq	r2, #0
   20308:	blx	r8
   2030c:	cmp	r0, #2
   20310:	moveq	r3, #1
   20314:	streq	r3, [r4, #12]
   20318:	beq	20328 <submit_columns+0xcc>
   2031c:	cmp	r0, #1
   20320:	beq	20340 <submit_columns+0xe4>
   20324:	add	r7, r7, #1
   20328:	ldr	r3, [r6, #268]	; 0x10c
   2032c:	add	r5, r5, #1
   20330:	cmp	r3, r5
   20334:	bgt	202c4 <submit_columns+0x68>
   20338:	mov	r0, #0
   2033c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20340:	mov	r0, #4
   20344:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

00020348 <readstat_copy>:
   20348:	cmp	r3, r1
   2034c:	push	{r4, lr}
   20350:	mov	r4, r3
   20354:	subcs	r4, r1, #1
   20358:	mov	r1, r2
   2035c:	mov	r2, r4
   20360:	bl	3f20 <memcpy@plt>
   20364:	mov	r2, #0
   20368:	strb	r2, [r0, r4]
   2036c:	pop	{r4, pc}

00020370 <readstat_copy_lower>:
   20370:	push	{r4, r5, r6, lr}
   20374:	mov	r6, r1
   20378:	mov	r4, r0
   2037c:	bl	3e6c <readstat_copy@plt>
   20380:	cmp	r6, #0
   20384:	popeq	{r4, r5, r6, pc}
   20388:	ldrb	r5, [r4]
   2038c:	cmp	r5, #0
   20390:	popeq	{r4, r5, r6, pc}
   20394:	bl	416c <__ctype_tolower_loc@plt>
   20398:	mov	r3, r4
   2039c:	add	r1, r4, r6
   203a0:	ldr	r2, [r0]
   203a4:	ldr	r2, [r2, r5, lsl #2]
   203a8:	strb	r2, [r3], #1
   203ac:	cmp	r1, r3
   203b0:	popeq	{r4, r5, r6, pc}
   203b4:	ldrb	r5, [r3]
   203b8:	cmp	r5, #0
   203bc:	bne	203a0 <readstat_copy_lower+0x30>
   203c0:	pop	{r4, r5, r6, pc}

000203c4 <readstat_copy_quoted>:
   203c4:	cmp	r3, r1
   203c8:	subcs	r3, r1, #1
   203cc:	cmp	r3, #0
   203d0:	push	{r4, r5, r6, lr}
   203d4:	beq	20460 <readstat_copy_quoted+0x9c>
   203d8:	mov	ip, r0
   203dc:	mov	lr, #1
   203e0:	mov	r1, #0
   203e4:	mov	r6, #9
   203e8:	b	20404 <readstat_copy_quoted+0x40>
   203ec:	add	r1, r1, #1
   203f0:	cmp	r3, r1
   203f4:	strb	r4, [ip]
   203f8:	bls	2043c <readstat_copy_quoted+0x78>
   203fc:	add	lr, lr, #1
   20400:	add	ip, ip, #1
   20404:	ldrb	r4, [r2, r1]
   20408:	sub	r5, lr, #1
   2040c:	cmp	r4, #92	; 0x5c
   20410:	bne	203ec <readstat_copy_quoted+0x28>
   20414:	add	r4, r1, #1
   20418:	cmp	r3, r4
   2041c:	bls	20458 <readstat_copy_quoted+0x94>
   20420:	ldrb	r4, [r2, r4]
   20424:	add	r1, r1, #2
   20428:	cmp	r4, #116	; 0x74
   2042c:	beq	20448 <readstat_copy_quoted+0x84>
   20430:	cmp	r3, r1
   20434:	strb	r4, [ip]
   20438:	bhi	203fc <readstat_copy_quoted+0x38>
   2043c:	mov	r3, #0
   20440:	strb	r3, [r0, lr]
   20444:	pop	{r4, r5, r6, pc}
   20448:	cmp	r3, r1
   2044c:	strb	r6, [ip]
   20450:	bhi	203fc <readstat_copy_quoted+0x38>
   20454:	b	2043c <readstat_copy_quoted+0x78>
   20458:	mov	lr, r5
   2045c:	b	2043c <readstat_copy_quoted+0x78>
   20460:	mov	lr, r3
   20464:	b	2043c <readstat_copy_quoted+0x78>

00020468 <readstat_parse_sas_commands>:
   20468:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2046c:	sub	sp, sp, #2304	; 0x900
   20470:	ldr	ip, [r0, #32]
   20474:	sub	sp, sp, #12
   20478:	mov	r4, r3
   2047c:	str	r0, [sp, #60]	; 0x3c
   20480:	str	r2, [sp, #104]	; 0x68
   20484:	mov	r0, r1
   20488:	ldr	r2, [ip]
   2048c:	ldr	r1, [ip, #20]
   20490:	str	r3, [sp, #128]	; 0x80
   20494:	blx	r2
   20498:	cmn	r0, #1
   2049c:	beq	207ec <readstat_parse_sas_commands+0x384>
   204a0:	ldr	r6, [sp, #60]	; 0x3c
   204a4:	mov	r1, #2
   204a8:	mov	r0, #0
   204ac:	ldr	r3, [r6, #32]
   204b0:	ldr	r4, [r3, #8]
   204b4:	ldr	r2, [r3, #20]
   204b8:	blx	r4
   204bc:	cmn	r0, #1
   204c0:	mov	r4, r0
   204c4:	beq	2078c <readstat_parse_sas_commands+0x324>
   204c8:	ldr	r3, [r6, #32]
   204cc:	mov	r1, #0
   204d0:	mov	r0, r1
   204d4:	ldr	r5, [r3, #8]
   204d8:	ldr	r2, [r3, #20]
   204dc:	blx	r5
   204e0:	mov	r0, r4
   204e4:	bl	410c <malloc@plt>
   204e8:	ldr	r3, [r6, #32]
   204ec:	mov	r1, r4
   204f0:	add	r2, r0, r4
   204f4:	str	r2, [sp, #52]	; 0x34
   204f8:	ldr	r4, [r3, #12]
   204fc:	mov	r6, r2
   20500:	ldr	r2, [r3, #20]
   20504:	mov	r5, r0
   20508:	str	r0, [sp, #132]	; 0x84
   2050c:	blx	r4
   20510:	mov	r1, #280	; 0x118
   20514:	mov	r0, #1
   20518:	bl	3d58 <calloc@plt>
   2051c:	subs	r3, r0, #0
   20520:	mov	r1, r3
   20524:	str	r3, [sp, #32]
   20528:	beq	20c9c <readstat_parse_sas_commands+0x834>
   2052c:	mov	r3, #1
   20530:	cmp	r5, r6
   20534:	str	r3, [r1, #256]	; 0x100
   20538:	beq	20bac <readstat_parse_sas_commands+0x744>
   2053c:	ldr	r3, [pc, #1012]	; 20938 <readstat_parse_sas_commands+0x4d0>
   20540:	ldr	r2, [pc, #1012]	; 2093c <readstat_parse_sas_commands+0x4d4>
   20544:	vldr	d7, [pc, #996]	; 20930 <readstat_parse_sas_commands+0x4c8>
   20548:	add	r2, pc, r2
   2054c:	add	r3, pc, r3
   20550:	mov	r1, r2
   20554:	str	r2, [sp, #64]	; 0x40
   20558:	sub	r3, r3, #1584	; 0x630
   2055c:	ldr	r2, [pc, #988]	; 20940 <readstat_parse_sas_commands+0x4d8>
   20560:	add	r0, r1, #1680	; 0x690
   20564:	sub	r3, r3, #4
   20568:	mov	r1, #0
   2056c:	vstr	d7, [sp, #72]	; 0x48
   20570:	mov	fp, r1
   20574:	add	r2, pc, r2
   20578:	str	r1, [sp, #48]	; 0x30
   2057c:	str	r3, [sp, #56]	; 0x38
   20580:	ldr	r1, [pc, #956]	; 20944 <readstat_parse_sas_commands+0x4dc>
   20584:	add	r3, r0, #4
   20588:	ldr	r8, [pc, #952]	; 20948 <readstat_parse_sas_commands+0x4e0>
   2058c:	str	r3, [sp, #68]	; 0x44
   20590:	str	r5, [sp, #124]	; 0x7c
   20594:	sub	r3, r2, #712	; 0x2c8
   20598:	mov	r9, r5
   2059c:	mov	sl, fp
   205a0:	mov	r4, #27
   205a4:	mov	r5, #5632	; 0x1600
   205a8:	mov	r6, #0
   205ac:	mov	r7, #0
   205b0:	str	r3, [sp, #120]	; 0x78
   205b4:	mov	r3, #5
   205b8:	str	fp, [sp, #88]	; 0x58
   205bc:	str	fp, [sp, #84]	; 0x54
   205c0:	str	fp, [sp, #36]	; 0x24
   205c4:	str	fp, [sp, #100]	; 0x64
   205c8:	str	r6, [sp, #108]	; 0x6c
   205cc:	str	r7, [sp, #112]	; 0x70
   205d0:	str	r3, [sp, #80]	; 0x50
   205d4:	ldr	lr, [pc, #880]	; 2094c <readstat_parse_sas_commands+0x4e4>
   205d8:	cmp	r4, #0
   205dc:	add	lr, pc, lr
   205e0:	add	lr, lr, r1
   205e4:	mov	r3, r5
   205e8:	beq	20630 <readstat_parse_sas_commands+0x1c8>
   205ec:	sub	r1, r4, #1
   205f0:	adds	r1, lr, r1
   205f4:	bcs	20628 <readstat_parse_sas_commands+0x1c0>
   205f8:	ldrb	ip, [r9]
   205fc:	mov	r2, lr
   20600:	sub	r3, r1, r2
   20604:	ldrb	r0, [r2, r3, asr #1]
   20608:	add	r3, r2, r3, asr #1
   2060c:	cmp	r0, ip
   20610:	subhi	r1, r3, #1
   20614:	bhi	20620 <readstat_parse_sas_commands+0x1b8>
   20618:	bcs	20bec <readstat_parse_sas_commands+0x784>
   2061c:	add	r2, r3, #1
   20620:	cmp	r2, r1
   20624:	bls	20600 <readstat_parse_sas_commands+0x198>
   20628:	add	lr, lr, r4
   2062c:	add	r3, r5, r4
   20630:	ldr	r2, [pc, #792]	; 20950 <readstat_parse_sas_commands+0x4e8>
   20634:	add	r2, pc, r2
   20638:	add	r8, r2, r8
   2063c:	ldrb	r5, [r8, #-2688]	; 0xfffff580
   20640:	cmp	r5, #0
   20644:	beq	2069c <readstat_parse_sas_commands+0x234>
   20648:	add	r0, lr, r5, lsl #1
   2064c:	sub	r0, r0, #2
   20650:	cmp	lr, r0
   20654:	bhi	20698 <readstat_parse_sas_commands+0x230>
   20658:	ldrb	r4, [r9]
   2065c:	mov	r1, lr
   20660:	sub	r2, r0, r1
   20664:	asr	r2, r2, #1
   20668:	bic	r2, r2, #1
   2066c:	add	ip, r1, r2
   20670:	ldrb	r2, [r1, r2]
   20674:	cmp	r2, r4
   20678:	subhi	r0, ip, #2
   2067c:	bhi	20690 <readstat_parse_sas_commands+0x228>
   20680:	ldrb	r2, [ip, #1]
   20684:	add	r1, ip, #2
   20688:	cmp	r2, r4
   2068c:	bcs	20bf8 <readstat_parse_sas_commands+0x790>
   20690:	cmp	r1, r0
   20694:	bls	20660 <readstat_parse_sas_commands+0x1f8>
   20698:	add	r3, r3, r5
   2069c:	ldr	lr, [pc, #688]	; 20954 <readstat_parse_sas_commands+0x4ec>
   206a0:	lsl	r2, r3, #1
   206a4:	add	lr, pc, lr
   206a8:	add	r3, lr, r3
   206ac:	ldr	r1, [sp, #56]	; 0x38
   206b0:	ldrb	r4, [r3, #1724]	; 0x6bc
   206b4:	ldrsh	r8, [r1, r2]
   206b8:	cmp	r4, #0
   206bc:	beq	20820 <readstat_parse_sas_commands+0x3b8>
   206c0:	ldr	r3, [sp, #120]	; 0x78
   206c4:	ldrb	r5, [r3, r4]
   206c8:	add	r4, r3, r4
   206cc:	ldr	r3, [pc, #644]	; 20958 <readstat_parse_sas_commands+0x4f0>
   206d0:	add	r5, r4, r5
   206d4:	add	r3, pc, r3
   206d8:	str	r3, [sp, #92]	; 0x5c
   206dc:	ldr	r3, [pc, #632]	; 2095c <readstat_parse_sas_commands+0x4f4>
   206e0:	add	r3, pc, r3
   206e4:	str	r3, [sp, #96]	; 0x60
   206e8:	cmp	r4, r5
   206ec:	beq	20820 <readstat_parse_sas_commands+0x3b8>
   206f0:	ldrb	r3, [r4, #1]!
   206f4:	cmp	r3, #34	; 0x22
   206f8:	addls	pc, pc, r3, lsl #2
   206fc:	b	206e8 <readstat_parse_sas_commands+0x280>
   20700:	b	20870 <readstat_parse_sas_commands+0x408>
   20704:	b	20910 <readstat_parse_sas_commands+0x4a8>
   20708:	b	208c0 <readstat_parse_sas_commands+0x458>
   2070c:	b	208ac <readstat_parse_sas_commands+0x444>
   20710:	b	2089c <readstat_parse_sas_commands+0x434>
   20714:	b	20b94 <readstat_parse_sas_commands+0x72c>
   20718:	b	20b88 <readstat_parse_sas_commands+0x720>
   2071c:	b	20b70 <readstat_parse_sas_commands+0x708>
   20720:	b	20b58 <readstat_parse_sas_commands+0x6f0>
   20724:	b	20b40 <readstat_parse_sas_commands+0x6d8>
   20728:	b	20b28 <readstat_parse_sas_commands+0x6c0>
   2072c:	b	20b10 <readstat_parse_sas_commands+0x6a8>
   20730:	b	20ac0 <readstat_parse_sas_commands+0x658>
   20734:	b	20a90 <readstat_parse_sas_commands+0x628>
   20738:	b	20a78 <readstat_parse_sas_commands+0x610>
   2073c:	b	20a54 <readstat_parse_sas_commands+0x5ec>
   20740:	b	20a2c <readstat_parse_sas_commands+0x5c4>
   20744:	b	209dc <readstat_parse_sas_commands+0x574>
   20748:	b	2085c <readstat_parse_sas_commands+0x3f4>
   2074c:	b	20814 <readstat_parse_sas_commands+0x3ac>
   20750:	b	2085c <readstat_parse_sas_commands+0x3f4>
   20754:	b	20814 <readstat_parse_sas_commands+0x3ac>
   20758:	b	2087c <readstat_parse_sas_commands+0x414>
   2075c:	b	2085c <readstat_parse_sas_commands+0x3f4>
   20760:	b	20814 <readstat_parse_sas_commands+0x3ac>
   20764:	b	209a0 <readstat_parse_sas_commands+0x538>
   20768:	b	20984 <readstat_parse_sas_commands+0x51c>
   2076c:	b	20978 <readstat_parse_sas_commands+0x510>
   20770:	b	2096c <readstat_parse_sas_commands+0x504>
   20774:	b	20864 <readstat_parse_sas_commands+0x3fc>
   20778:	b	20864 <readstat_parse_sas_commands+0x3fc>
   2077c:	b	20890 <readstat_parse_sas_commands+0x428>
   20780:	b	209bc <readstat_parse_sas_commands+0x554>
   20784:	b	209c4 <readstat_parse_sas_commands+0x55c>
   20788:	b	209d0 <readstat_parse_sas_commands+0x568>
   2078c:	mov	r2, #15
   20790:	mov	r3, #0
   20794:	str	r3, [sp, #132]	; 0x84
   20798:	str	r3, [sp, #32]
   2079c:	ldr	r3, [sp, #60]	; 0x3c
   207a0:	str	r2, [sp, #36]	; 0x24
   207a4:	ldr	r3, [r3, #32]
   207a8:	ldr	r1, [r3, #4]
   207ac:	ldr	r0, [r3, #20]
   207b0:	blx	r1
   207b4:	ldr	r0, [sp, #132]	; 0x84
   207b8:	bl	3ec0 <free@plt>
   207bc:	ldr	r2, [sp, #36]	; 0x24
   207c0:	ldr	r3, [sp, #128]	; 0x80
   207c4:	ldr	r0, [sp, #32]
   207c8:	cmp	r3, #0
   207cc:	strne	r2, [r3]
   207d0:	bl	3fbc <readstat_schema_free@plt>
   207d4:	mov	r3, #0
   207d8:	str	r3, [sp, #32]
   207dc:	ldr	r0, [sp, #32]
   207e0:	add	sp, sp, #2304	; 0x900
   207e4:	add	sp, sp, #12
   207e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   207ec:	cmp	r4, #0
   207f0:	beq	20c90 <readstat_parse_sas_commands+0x828>
   207f4:	mov	r3, #1
   207f8:	str	r3, [r4]
   207fc:	mov	r3, #0
   20800:	str	r3, [sp, #32]
   20804:	ldr	r0, [sp, #32]
   20808:	add	sp, sp, #2304	; 0x900
   2080c:	add	sp, sp, #12
   20810:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20814:	cmp	r4, r5
   20818:	sub	sl, r9, fp
   2081c:	bne	206f0 <readstat_parse_sas_commands+0x288>
   20820:	cmp	r8, #0
   20824:	beq	20c24 <readstat_parse_sas_commands+0x7bc>
   20828:	ldr	r3, [sp, #52]	; 0x34
   2082c:	add	r9, r9, #1
   20830:	cmp	r3, r9
   20834:	beq	20ba0 <readstat_parse_sas_commands+0x738>
   20838:	ldr	r2, [sp, #64]	; 0x40
   2083c:	ldr	r0, [sp, #68]	; 0x44
   20840:	sub	r1, r2, #512	; 0x200
   20844:	lsl	r3, r8, #1
   20848:	add	r2, r2, r8
   2084c:	ldrsh	r1, [r1, r3]
   20850:	ldrsh	r5, [r0, r3]
   20854:	ldrb	r4, [r2, #3880]	; 0xf28
   20858:	b	205d4 <readstat_parse_sas_commands+0x16c>
   2085c:	mov	fp, r9
   20860:	b	206e8 <readstat_parse_sas_commands+0x280>
   20864:	mov	r3, #1
   20868:	str	r3, [sp, #36]	; 0x24
   2086c:	b	206e8 <readstat_parse_sas_commands+0x280>
   20870:	mov	r6, #0
   20874:	mov	r7, r6
   20878:	b	206e8 <readstat_parse_sas_commands+0x280>
   2087c:	ldr	r3, [sp, #100]	; 0x64
   20880:	str	r9, [sp, #124]	; 0x7c
   20884:	add	r3, r3, #1
   20888:	str	r3, [sp, #100]	; 0x64
   2088c:	b	206e8 <readstat_parse_sas_commands+0x280>
   20890:	mov	r3, #3
   20894:	str	r3, [sp, #36]	; 0x24
   20898:	b	206e8 <readstat_parse_sas_commands+0x280>
   2089c:	ldr	r3, [sp, #88]	; 0x58
   208a0:	sub	r3, r6, r3
   208a4:	str	r3, [sp, #48]	; 0x30
   208a8:	b	206e8 <readstat_parse_sas_commands+0x280>
   208ac:	sub	r3, r6, #1
   208b0:	str	r3, [sp, #88]	; 0x58
   208b4:	mov	r3, #1
   208b8:	str	r3, [sp, #48]	; 0x30
   208bc:	b	206e8 <readstat_parse_sas_commands+0x280>
   208c0:	ldrb	r3, [r9]
   208c4:	sub	r2, r3, #48	; 0x30
   208c8:	uxtb	r1, r2
   208cc:	cmp	r1, #9
   208d0:	bls	208e8 <readstat_parse_sas_commands+0x480>
   208d4:	sub	r2, r3, #65	; 0x41
   208d8:	cmp	r2, #5
   208dc:	bhi	20c04 <readstat_parse_sas_commands+0x79c>
   208e0:	sub	r3, r3, #55	; 0x37
   208e4:	mov	r2, r3
   208e8:	asr	r3, r2, #31
   208ec:	lsl	r1, r7, #4
   208f0:	orr	r1, r1, r6, lsr #28
   208f4:	str	r1, [sp, #44]	; 0x2c
   208f8:	lsl	r1, r6, #4
   208fc:	str	r1, [sp, #40]	; 0x28
   20900:	ldrd	r6, [sp, #40]	; 0x28
   20904:	adds	r6, r6, r2
   20908:	adc	r7, r7, r3
   2090c:	b	206e8 <readstat_parse_sas_commands+0x280>
   20910:	mov	r0, #10
   20914:	ldrb	r1, [r9]
   20918:	umull	r2, r3, r6, r0
   2091c:	mla	r3, r0, r7, r3
   20920:	sub	r1, r1, #48	; 0x30
   20924:	adds	r6, r2, r1
   20928:	adc	r7, r3, r1, asr #31
   2092c:	b	206e8 <readstat_parse_sas_commands+0x280>
   20930:	.word	0x00000000
   20934:	.word	0x7ff80000
   20938:	.word	0x00008334
   2093c:	.word	0x0000c328
   20940:	.word	0x0000c2fc
   20944:	.word	0x00001507
   20948:	.word	0x00000446
   2094c:	.word	0x000062ac
   20950:	.word	0x0000824c
   20954:	.word	0x0000a1d4
   20958:	.word	0x0000d510
   2095c:	.word	0x0000d510
   20960:	.word	0x00000445
   20964:	.word	0x0000cfd8
   20968:	.word	0x0000cf3c
   2096c:	mov	r3, #2
   20970:	str	r3, [sp, #36]	; 0x24
   20974:	b	206e8 <readstat_parse_sas_commands+0x280>
   20978:	str	r6, [sp, #108]	; 0x6c
   2097c:	str	r7, [sp, #112]	; 0x70
   20980:	b	206e8 <readstat_parse_sas_commands+0x280>
   20984:	mov	r0, r6
   20988:	mov	r1, r7
   2098c:	bl	23878 <__aeabi_ul2d>
   20990:	mov	r3, #0
   20994:	str	r3, [sp, #36]	; 0x24
   20998:	strd	r0, [sp, #72]	; 0x48
   2099c:	b	206e8 <readstat_parse_sas_commands+0x280>
   209a0:	rsbs	r0, r6, #0
   209a4:	rsc	r1, r7, #0
   209a8:	bl	23878 <__aeabi_ul2d>
   209ac:	mov	r3, #0
   209b0:	str	r3, [sp, #36]	; 0x24
   209b4:	strd	r0, [sp, #72]	; 0x48
   209b8:	b	206e8 <readstat_parse_sas_commands+0x280>
   209bc:	str	r6, [sp, #48]	; 0x30
   209c0:	b	206e8 <readstat_parse_sas_commands+0x280>
   209c4:	sub	r3, r6, #1
   209c8:	str	r3, [sp, #84]	; 0x54
   209cc:	b	206e8 <readstat_parse_sas_commands+0x280>
   209d0:	mov	r3, #0
   209d4:	str	r3, [sp, #84]	; 0x54
   209d8:	b	206e8 <readstat_parse_sas_commands+0x280>
   209dc:	ldr	r3, [sp, #104]	; 0x68
   209e0:	strd	r6, [sp, #8]
   209e4:	str	r3, [sp, #24]
   209e8:	ldr	r3, [sp, #108]	; 0x6c
   209ec:	vldr	d0, [sp, #72]	; 0x48
   209f0:	str	r3, [sp]
   209f4:	ldr	r3, [sp, #112]	; 0x70
   209f8:	ldr	r2, [sp, #36]	; 0x24
   209fc:	str	r3, [sp, #4]
   20a00:	add	r3, sp, #264	; 0x108
   20a04:	str	r3, [sp, #20]
   20a08:	add	r3, sp, #232	; 0xe8
   20a0c:	str	r3, [sp, #16]
   20a10:	add	r1, sp, #200	; 0xc8
   20a14:	ldr	r0, [sp, #60]	; 0x3c
   20a18:	bl	404c <submit_value_label@plt>
   20a1c:	cmp	r0, #0
   20a20:	beq	206e8 <readstat_parse_sas_commands+0x280>
   20a24:	mov	r2, r0
   20a28:	b	2079c <readstat_parse_sas_commands+0x334>
   20a2c:	add	r1, sp, #136	; 0x88
   20a30:	ldr	r0, [sp, #32]
   20a34:	bl	40d0 <readstat_schema_find_or_create_entry@plt>
   20a38:	mov	r3, #32
   20a3c:	mov	r1, r3
   20a40:	add	r2, sp, #200	; 0xc8
   20a44:	add	r0, r0, #2160	; 0x870
   20a48:	add	r0, r0, #8
   20a4c:	bl	3e6c <readstat_copy@plt>
   20a50:	b	206e8 <readstat_parse_sas_commands+0x280>
   20a54:	add	r1, sp, #136	; 0x88
   20a58:	ldr	r0, [sp, #32]
   20a5c:	bl	40d0 <readstat_schema_find_or_create_entry@plt>
   20a60:	mov	r3, #1024	; 0x400
   20a64:	mov	r1, r3
   20a68:	add	r2, sp, #264	; 0x108
   20a6c:	add	r0, r0, #580	; 0x244
   20a70:	bl	3e6c <readstat_copy@plt>
   20a74:	b	206e8 <readstat_parse_sas_commands+0x280>
   20a78:	add	r1, sp, #136	; 0x88
   20a7c:	ldr	r0, [sp, #32]
   20a80:	bl	40d0 <readstat_schema_find_or_create_entry@plt>
   20a84:	ldr	r3, [sp, #48]	; 0x30
   20a88:	str	r3, [r0, #8]
   20a8c:	b	206e8 <readstat_parse_sas_commands+0x280>
   20a90:	add	r1, sp, #136	; 0x88
   20a94:	ldr	r0, [sp, #32]
   20a98:	bl	40d0 <readstat_schema_find_or_create_entry@plt>
   20a9c:	ldr	r3, [sp, #80]	; 0x50
   20aa0:	str	r3, [r0, #16]
   20aa4:	ldr	r3, [sp, #84]	; 0x54
   20aa8:	str	r3, [r0]
   20aac:	ldr	r3, [sp, #88]	; 0x58
   20ab0:	str	r3, [r0, #4]
   20ab4:	ldr	r3, [sp, #48]	; 0x30
   20ab8:	str	r3, [r0, #8]
   20abc:	b	206e8 <readstat_parse_sas_commands+0x280>
   20ac0:	add	r3, sp, #168	; 0xa8
   20ac4:	mov	r0, r3
   20ac8:	ldr	r1, [sp, #92]	; 0x5c
   20acc:	str	r3, [sp, #116]	; 0x74
   20ad0:	bl	4028 <strcasecmp@plt>
   20ad4:	ldr	r3, [sp, #116]	; 0x74
   20ad8:	ldr	r1, [sp, #96]	; 0x60
   20adc:	cmp	r0, #0
   20ae0:	mov	r0, r3
   20ae4:	ldreq	r2, [sp, #32]
   20ae8:	streq	r6, [r2, #264]	; 0x108
   20aec:	bl	4028 <strcasecmp@plt>
   20af0:	cmp	r0, #0
   20af4:	bne	206e8 <readstat_parse_sas_commands+0x280>
   20af8:	orrs	r3, r6, r7
   20afc:	ldr	r2, [sp, #32]
   20b00:	ldrbeq	r3, [sp, #264]	; 0x108
   20b04:	uxtbne	r3, r6
   20b08:	strb	r3, [r2, #272]	; 0x110
   20b0c:	b	206e8 <readstat_parse_sas_commands+0x280>
   20b10:	mov	r3, sl
   20b14:	mov	r2, fp
   20b18:	mov	r1, #32
   20b1c:	add	r0, sp, #136	; 0x88
   20b20:	bl	43dc <readstat_copy_lower@plt>
   20b24:	b	206e8 <readstat_parse_sas_commands+0x280>
   20b28:	mov	r3, sl
   20b2c:	mov	r2, fp
   20b30:	mov	r1, #32
   20b34:	add	r0, sp, #168	; 0xa8
   20b38:	bl	3e6c <readstat_copy@plt>
   20b3c:	b	206e8 <readstat_parse_sas_commands+0x280>
   20b40:	mov	r3, sl
   20b44:	mov	r2, fp
   20b48:	mov	r1, #32
   20b4c:	add	r0, sp, #232	; 0xe8
   20b50:	bl	3e6c <readstat_copy@plt>
   20b54:	b	206e8 <readstat_parse_sas_commands+0x280>
   20b58:	mov	r3, sl
   20b5c:	mov	r2, fp
   20b60:	mov	r1, #32
   20b64:	add	r0, sp, #200	; 0xc8
   20b68:	bl	3e6c <readstat_copy@plt>
   20b6c:	b	206e8 <readstat_parse_sas_commands+0x280>
   20b70:	mov	r3, sl
   20b74:	mov	r2, fp
   20b78:	mov	r1, #1024	; 0x400
   20b7c:	add	r0, sp, #264	; 0x108
   20b80:	bl	3e6c <readstat_copy@plt>
   20b84:	b	206e8 <readstat_parse_sas_commands+0x280>
   20b88:	mov	r3, #5
   20b8c:	str	r3, [sp, #80]	; 0x50
   20b90:	b	206e8 <readstat_parse_sas_commands+0x280>
   20b94:	mov	r3, #0
   20b98:	str	r3, [sp, #80]	; 0x50
   20b9c:	b	206e8 <readstat_parse_sas_commands+0x280>
   20ba0:	ldr	r3, [pc, #-584]	; 20960 <readstat_parse_sas_commands+0x4f8>
   20ba4:	cmp	r8, r3
   20ba8:	ble	20ca4 <readstat_parse_sas_commands+0x83c>
   20bac:	ldr	r4, [sp, #60]	; 0x3c
   20bb0:	ldr	r2, [sp, #104]	; 0x68
   20bb4:	ldr	r1, [sp, #32]
   20bb8:	mov	r0, r4
   20bbc:	bl	3f38 <submit_columns@plt>
   20bc0:	ldr	r3, [r4, #32]
   20bc4:	ldr	r1, [r3, #4]
   20bc8:	str	r0, [sp, #36]	; 0x24
   20bcc:	ldr	r0, [r3, #20]
   20bd0:	blx	r1
   20bd4:	ldr	r0, [sp, #132]	; 0x84
   20bd8:	bl	3ec0 <free@plt>
   20bdc:	ldr	r2, [sp, #36]	; 0x24
   20be0:	cmp	r2, #0
   20be4:	beq	207dc <readstat_parse_sas_commands+0x374>
   20be8:	b	207c0 <readstat_parse_sas_commands+0x358>
   20bec:	sub	r3, r3, lr
   20bf0:	add	r3, r5, r3
   20bf4:	b	2069c <readstat_parse_sas_commands+0x234>
   20bf8:	sub	lr, ip, lr
   20bfc:	add	r3, r3, lr, asr #1
   20c00:	b	2069c <readstat_parse_sas_commands+0x234>
   20c04:	sub	r2, r3, #97	; 0x61
   20c08:	cmp	r2, #5
   20c0c:	subls	r3, r3, #87	; 0x57
   20c10:	movls	r2, r3
   20c14:	movhi	r2, #0
   20c18:	asrls	r3, r2, #31
   20c1c:	movhi	r3, r2
   20c20:	b	208ec <readstat_parse_sas_commands+0x484>
   20c24:	ldr	r3, [sp, #52]	; 0x34
   20c28:	cmp	r9, r3
   20c2c:	beq	20ca4 <readstat_parse_sas_commands+0x83c>
   20c30:	ldr	r3, [sp, #124]	; 0x7c
   20c34:	ldrb	r2, [r9]
   20c38:	sub	r3, r9, r3
   20c3c:	add	r3, r3, #1
   20c40:	add	r4, sp, #1280	; 0x500
   20c44:	str	r3, [sp]
   20c48:	str	r2, [sp, #4]
   20c4c:	ldr	r3, [sp, #100]	; 0x64
   20c50:	ldr	r2, [pc, #-756]	; 20964 <readstat_parse_sas_commands+0x4fc>
   20c54:	add	r4, r4, #8
   20c58:	add	r3, r3, #1
   20c5c:	mov	r0, r4
   20c60:	add	r2, pc, r2
   20c64:	mov	r1, #1024	; 0x400
   20c68:	bl	4280 <snprintf@plt>
   20c6c:	ldr	r3, [sp, #60]	; 0x3c
   20c70:	ldr	r3, [r3, #24]
   20c74:	cmp	r3, #0
   20c78:	beq	20c88 <readstat_parse_sas_commands+0x820>
   20c7c:	ldr	r1, [sp, #104]	; 0x68
   20c80:	mov	r0, r4
   20c84:	blx	r3
   20c88:	mov	r2, #5
   20c8c:	b	2079c <readstat_parse_sas_commands+0x334>
   20c90:	ldr	r3, [sp, #128]	; 0x80
   20c94:	str	r3, [sp, #32]
   20c98:	b	207dc <readstat_parse_sas_commands+0x374>
   20c9c:	mov	r2, #3
   20ca0:	b	2079c <readstat_parse_sas_commands+0x334>
   20ca4:	add	r4, sp, #1280	; 0x500
   20ca8:	ldr	r1, [pc, #-840]	; 20968 <readstat_parse_sas_commands+0x500>
   20cac:	add	r4, r4, #8
   20cb0:	mov	r0, r4
   20cb4:	mov	r2, #66	; 0x42
   20cb8:	add	r1, pc, r1
   20cbc:	bl	3f20 <memcpy@plt>
   20cc0:	b	20c6c <readstat_parse_sas_commands+0x804>
   20cc4:	andeq	r0, r0, r0

00020cc8 <readstat_parse_spss_commands>:
   20cc8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20ccc:	sub	sp, sp, #2304	; 0x900
   20cd0:	ldr	ip, [r0, #32]
   20cd4:	sub	sp, sp, #12
   20cd8:	mov	r4, r3
   20cdc:	str	r0, [sp, #64]	; 0x40
   20ce0:	str	r2, [sp, #120]	; 0x78
   20ce4:	mov	r0, r1
   20ce8:	ldr	r2, [ip]
   20cec:	ldr	r1, [ip, #20]
   20cf0:	str	r3, [sp, #156]	; 0x9c
   20cf4:	blx	r2
   20cf8:	cmn	r0, #1
   20cfc:	beq	21084 <readstat_parse_spss_commands+0x3bc>
   20d00:	ldr	r6, [sp, #64]	; 0x40
   20d04:	mov	r1, #2
   20d08:	mov	r0, #0
   20d0c:	ldr	r3, [r6, #32]
   20d10:	ldr	r4, [r3, #8]
   20d14:	ldr	r2, [r3, #20]
   20d18:	blx	r4
   20d1c:	cmn	r0, #1
   20d20:	mov	r4, r0
   20d24:	beq	21030 <readstat_parse_spss_commands+0x368>
   20d28:	ldr	r3, [r6, #32]
   20d2c:	mov	r1, #0
   20d30:	mov	r0, r1
   20d34:	ldr	r5, [r3, #8]
   20d38:	ldr	r2, [r3, #20]
   20d3c:	blx	r5
   20d40:	mov	r0, r4
   20d44:	bl	410c <malloc@plt>
   20d48:	ldr	r3, [r6, #32]
   20d4c:	mov	r1, r4
   20d50:	add	r2, r0, r4
   20d54:	str	r2, [sp, #68]	; 0x44
   20d58:	ldr	r4, [r3, #12]
   20d5c:	mov	r6, r2
   20d60:	ldr	r2, [r3, #20]
   20d64:	mov	r5, r0
   20d68:	str	r0, [sp, #160]	; 0xa0
   20d6c:	blx	r4
   20d70:	mov	r1, #280	; 0x118
   20d74:	mov	r0, #1
   20d78:	bl	3d58 <calloc@plt>
   20d7c:	subs	fp, r0, #0
   20d80:	beq	21590 <readstat_parse_spss_commands+0x8c8>
   20d84:	mov	r3, #1
   20d88:	cmp	r5, r6
   20d8c:	mov	ip, r5
   20d90:	str	r3, [fp, #256]	; 0x100
   20d94:	beq	21568 <readstat_parse_spss_commands+0x8a0>
   20d98:	ldr	r3, [pc, #1000]	; 21188 <readstat_parse_spss_commands+0x4c0>
   20d9c:	ldr	r2, [pc, #1000]	; 2118c <readstat_parse_spss_commands+0x4c4>
   20da0:	add	r3, pc, r3
   20da4:	vldr	d7, [pc, #980]	; 21180 <readstat_parse_spss_commands+0x4b8>
   20da8:	add	r2, pc, r2
   20dac:	add	r0, r3, #3824	; 0xef0
   20db0:	str	r3, [sp, #140]	; 0x8c
   20db4:	add	r3, r3, #164	; 0xa4
   20db8:	sub	r1, r2, #2032	; 0x7f0
   20dbc:	str	r3, [sp, #72]	; 0x48
   20dc0:	add	r3, r0, #8
   20dc4:	mov	r4, #0
   20dc8:	mov	r5, #0
   20dcc:	str	r3, [sp, #76]	; 0x4c
   20dd0:	sub	r3, r1, #12
   20dd4:	mov	r8, #0
   20dd8:	str	r2, [sp, #80]	; 0x50
   20ddc:	str	r3, [sp, #84]	; 0x54
   20de0:	ldr	r2, [pc, #936]	; 21190 <readstat_parse_spss_commands+0x4c8>
   20de4:	mov	r3, #5
   20de8:	vstr	d7, [sp, #96]	; 0x60
   20dec:	mov	r7, r8
   20df0:	strd	r4, [sp, #32]
   20df4:	mov	r9, #628	; 0x274
   20df8:	str	r3, [sp, #52]	; 0x34
   20dfc:	ldr	r5, [pc, #912]	; 21194 <readstat_parse_spss_commands+0x4cc>
   20e00:	mov	r3, fp
   20e04:	str	r8, [sp, #60]	; 0x3c
   20e08:	str	r8, [sp, #92]	; 0x5c
   20e0c:	str	r8, [sp, #128]	; 0x80
   20e10:	str	r8, [sp, #88]	; 0x58
   20e14:	str	r8, [sp, #124]	; 0x7c
   20e18:	str	r8, [sp, #56]	; 0x38
   20e1c:	str	r8, [sp, #44]	; 0x2c
   20e20:	mov	sl, r8
   20e24:	mov	r4, #27
   20e28:	mov	r8, r9
   20e2c:	mov	lr, r2
   20e30:	mov	r9, r7
   20e34:	mov	fp, ip
   20e38:	mov	r7, r3
   20e3c:	mov	r0, #0
   20e40:	mov	r1, #0
   20e44:	str	r0, [sp, #132]	; 0x84
   20e48:	str	r1, [sp, #136]	; 0x88
   20e4c:	str	ip, [sp, #164]	; 0xa4
   20e50:	ldr	r3, [sp, #72]	; 0x48
   20e54:	cmp	r4, #0
   20e58:	add	lr, r3, lr
   20e5c:	mov	r3, r5
   20e60:	beq	20ea8 <readstat_parse_spss_commands+0x1e0>
   20e64:	sub	r1, r4, #1
   20e68:	adds	r1, lr, r1
   20e6c:	bcs	20ea0 <readstat_parse_spss_commands+0x1d8>
   20e70:	ldrb	ip, [fp]
   20e74:	mov	r2, lr
   20e78:	sub	r3, r1, r2
   20e7c:	ldrb	r0, [r2, r3, asr #1]
   20e80:	add	r3, r2, r3, asr #1
   20e84:	cmp	r0, ip
   20e88:	subhi	r1, r3, #1
   20e8c:	bhi	20e98 <readstat_parse_spss_commands+0x1d0>
   20e90:	bcs	21468 <readstat_parse_spss_commands+0x7a0>
   20e94:	add	r2, r3, #1
   20e98:	cmp	r2, r1
   20e9c:	bls	20e78 <readstat_parse_spss_commands+0x1b0>
   20ea0:	add	lr, lr, r4
   20ea4:	add	r3, r5, r4
   20ea8:	ldr	r2, [pc, #744]	; 21198 <readstat_parse_spss_commands+0x4d0>
   20eac:	add	r2, pc, r2
   20eb0:	add	r2, r2, r8
   20eb4:	ldrb	r5, [r2, #3200]	; 0xc80
   20eb8:	cmp	r5, #0
   20ebc:	beq	20f14 <readstat_parse_spss_commands+0x24c>
   20ec0:	add	r0, lr, r5, lsl #1
   20ec4:	sub	r0, r0, #2
   20ec8:	cmp	lr, r0
   20ecc:	bhi	20f10 <readstat_parse_spss_commands+0x248>
   20ed0:	ldrb	r4, [fp]
   20ed4:	mov	r1, lr
   20ed8:	sub	r2, r0, r1
   20edc:	asr	r2, r2, #1
   20ee0:	bic	r2, r2, #1
   20ee4:	add	ip, r1, r2
   20ee8:	ldrb	r2, [r1, r2]
   20eec:	cmp	r2, r4
   20ef0:	subhi	r0, ip, #2
   20ef4:	bhi	20f08 <readstat_parse_spss_commands+0x240>
   20ef8:	ldrb	r2, [ip, #1]
   20efc:	add	r1, ip, #2
   20f00:	cmp	r2, r4
   20f04:	bcs	21474 <readstat_parse_spss_commands+0x7ac>
   20f08:	cmp	r1, r0
   20f0c:	bls	20ed8 <readstat_parse_spss_commands+0x210>
   20f10:	add	r3, r3, r5
   20f14:	ldr	lr, [pc, #640]	; 2119c <readstat_parse_spss_commands+0x4d4>
   20f18:	lsl	r2, r3, #1
   20f1c:	add	lr, pc, lr
   20f20:	add	r3, lr, r3
   20f24:	ldr	r1, [sp, #76]	; 0x4c
   20f28:	ldrb	r4, [r3, #2220]	; 0x8ac
   20f2c:	ldrsh	r8, [r1, r2]
   20f30:	cmp	r4, #0
   20f34:	beq	210c8 <readstat_parse_spss_commands+0x400>
   20f38:	ldr	r3, [sp, #140]	; 0x8c
   20f3c:	str	r7, [sp, #48]	; 0x30
   20f40:	ldrb	r5, [r3, r4]
   20f44:	add	r4, r3, r4
   20f48:	ldr	r3, [pc, #592]	; 211a0 <readstat_parse_spss_commands+0x4d8>
   20f4c:	add	r5, r4, r5
   20f50:	add	r3, pc, r3
   20f54:	str	r3, [sp, #104]	; 0x68
   20f58:	ldr	r3, [pc, #580]	; 211a4 <readstat_parse_spss_commands+0x4dc>
   20f5c:	add	r3, pc, r3
   20f60:	str	r3, [sp, #108]	; 0x6c
   20f64:	ldr	r3, [pc, #572]	; 211a8 <readstat_parse_spss_commands+0x4e0>
   20f68:	add	r3, pc, r3
   20f6c:	str	r3, [sp, #112]	; 0x70
   20f70:	ldr	r3, [pc, #564]	; 211ac <readstat_parse_spss_commands+0x4e4>
   20f74:	add	r3, pc, r3
   20f78:	str	r3, [sp, #116]	; 0x74
   20f7c:	mov	r3, r8
   20f80:	mov	r8, fp
   20f84:	mov	fp, r3
   20f88:	cmp	r5, r4
   20f8c:	beq	210b8 <readstat_parse_spss_commands+0x3f0>
   20f90:	ldrb	r3, [r4, #1]!
   20f94:	cmp	r3, #35	; 0x23
   20f98:	addls	pc, pc, r3, lsl #2
   20f9c:	b	20f88 <readstat_parse_spss_commands+0x2c0>
   20fa0:	b	21128 <readstat_parse_spss_commands+0x460>
   20fa4:	b	21388 <readstat_parse_spss_commands+0x6c0>
   20fa8:	b	213c4 <readstat_parse_spss_commands+0x6fc>
   20fac:	b	213b0 <readstat_parse_spss_commands+0x6e8>
   20fb0:	b	21424 <readstat_parse_spss_commands+0x75c>
   20fb4:	b	2140c <readstat_parse_spss_commands+0x744>
   20fb8:	b	213f4 <readstat_parse_spss_commands+0x72c>
   20fbc:	b	213dc <readstat_parse_spss_commands+0x714>
   20fc0:	b	21348 <readstat_parse_spss_commands+0x680>
   20fc4:	b	21324 <readstat_parse_spss_commands+0x65c>
   20fc8:	b	2131c <readstat_parse_spss_commands+0x654>
   20fcc:	b	2130c <readstat_parse_spss_commands+0x644>
   20fd0:	b	212cc <readstat_parse_spss_commands+0x604>
   20fd4:	b	21248 <readstat_parse_spss_commands+0x580>
   20fd8:	b	211d4 <readstat_parse_spss_commands+0x50c>
   20fdc:	b	21114 <readstat_parse_spss_commands+0x44c>
   20fe0:	b	21104 <readstat_parse_spss_commands+0x43c>
   20fe4:	b	21114 <readstat_parse_spss_commands+0x44c>
   20fe8:	b	21104 <readstat_parse_spss_commands+0x43c>
   20fec:	b	21138 <readstat_parse_spss_commands+0x470>
   20ff0:	b	21114 <readstat_parse_spss_commands+0x44c>
   20ff4:	b	21104 <readstat_parse_spss_commands+0x43c>
   20ff8:	b	2111c <readstat_parse_spss_commands+0x454>
   20ffc:	b	2111c <readstat_parse_spss_commands+0x454>
   21000:	b	210a8 <readstat_parse_spss_commands+0x3e0>
   21004:	b	210a8 <readstat_parse_spss_commands+0x3e0>
   21008:	b	2111c <readstat_parse_spss_commands+0x454>
   2100c:	b	21378 <readstat_parse_spss_commands+0x6b0>
   21010:	b	210a8 <readstat_parse_spss_commands+0x3e0>
   21014:	b	210a8 <readstat_parse_spss_commands+0x3e0>
   21018:	b	2143c <readstat_parse_spss_commands+0x774>
   2101c:	b	21448 <readstat_parse_spss_commands+0x780>
   21020:	b	2114c <readstat_parse_spss_commands+0x484>
   21024:	b	21164 <readstat_parse_spss_commands+0x49c>
   21028:	b	21174 <readstat_parse_spss_commands+0x4ac>
   2102c:	b	211c8 <readstat_parse_spss_commands+0x500>
   21030:	mov	r3, #0
   21034:	mov	fp, r3
   21038:	mov	r6, #15
   2103c:	str	r3, [sp, #160]	; 0xa0
   21040:	ldr	r3, [sp, #64]	; 0x40
   21044:	ldr	r3, [r3, #32]
   21048:	ldr	r2, [r3, #4]
   2104c:	ldr	r0, [r3, #20]
   21050:	blx	r2
   21054:	ldr	r0, [sp, #160]	; 0xa0
   21058:	bl	3ec0 <free@plt>
   2105c:	ldr	r3, [sp, #156]	; 0x9c
   21060:	mov	r0, fp
   21064:	cmp	r3, #0
   21068:	strne	r6, [r3]
   2106c:	bl	3fbc <readstat_schema_free@plt>
   21070:	mov	fp, #0
   21074:	mov	r0, fp
   21078:	add	sp, sp, #2304	; 0x900
   2107c:	add	sp, sp, #12
   21080:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21084:	cmp	r4, #0
   21088:	beq	21070 <readstat_parse_spss_commands+0x3a8>
   2108c:	mov	r3, #1
   21090:	mov	fp, #0
   21094:	mov	r0, fp
   21098:	str	r3, [r4]
   2109c:	add	sp, sp, #2304	; 0x900
   210a0:	add	sp, sp, #12
   210a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   210a8:	mov	r3, #5
   210ac:	cmp	r5, r4
   210b0:	str	r3, [sp, #52]	; 0x34
   210b4:	bne	20f90 <readstat_parse_spss_commands+0x2c8>
   210b8:	mov	r3, fp
   210bc:	ldr	r7, [sp, #48]	; 0x30
   210c0:	mov	fp, r8
   210c4:	mov	r8, r3
   210c8:	cmp	r8, #0
   210cc:	beq	21480 <readstat_parse_spss_commands+0x7b8>
   210d0:	ldr	r3, [sp, #68]	; 0x44
   210d4:	add	fp, fp, #1
   210d8:	cmp	r3, fp
   210dc:	beq	214f4 <readstat_parse_spss_commands+0x82c>
   210e0:	ldr	r1, [sp, #80]	; 0x50
   210e4:	ldr	r0, [sp, #84]	; 0x54
   210e8:	lsl	r3, r8, #1
   210ec:	sub	r2, r1, #780	; 0x30c
   210f0:	add	r1, r1, r8
   210f4:	ldrsh	lr, [r0, r3]
   210f8:	ldrsh	r5, [r2, r3]
   210fc:	ldrb	r4, [r1, #484]	; 0x1e4
   21100:	b	20e50 <readstat_parse_spss_commands+0x188>
   21104:	ldr	r3, [sp, #44]	; 0x2c
   21108:	sub	r3, r8, r3
   2110c:	str	r3, [sp, #56]	; 0x38
   21110:	b	20f88 <readstat_parse_spss_commands+0x2c0>
   21114:	str	r8, [sp, #44]	; 0x2c
   21118:	b	20f88 <readstat_parse_spss_commands+0x2c0>
   2111c:	mov	r3, #0
   21120:	str	r3, [sp, #52]	; 0x34
   21124:	b	20f88 <readstat_parse_spss_commands+0x2c0>
   21128:	mov	r3, #0
   2112c:	str	r3, [sp, #32]
   21130:	str	r3, [sp, #36]	; 0x24
   21134:	b	20f88 <readstat_parse_spss_commands+0x2c0>
   21138:	ldr	r3, [sp, #124]	; 0x7c
   2113c:	str	r8, [sp, #164]	; 0xa4
   21140:	add	r3, r3, #1
   21144:	str	r3, [sp, #124]	; 0x7c
   21148:	b	20f88 <readstat_parse_spss_commands+0x2c0>
   2114c:	ldrd	r0, [sp, #32]
   21150:	bl	23878 <__aeabi_ul2d>
   21154:	mov	r3, #0
   21158:	str	r3, [sp, #60]	; 0x3c
   2115c:	strd	r0, [sp, #96]	; 0x60
   21160:	b	20f88 <readstat_parse_spss_commands+0x2c0>
   21164:	ldrd	r2, [sp, #32]
   21168:	str	r2, [sp, #132]	; 0x84
   2116c:	str	r3, [sp, #136]	; 0x88
   21170:	b	20f88 <readstat_parse_spss_commands+0x2c0>
   21174:	mov	r3, #2
   21178:	str	r3, [sp, #60]	; 0x3c
   2117c:	b	20f88 <readstat_parse_spss_commands+0x2c0>
   21180:	.word	0x00000000
   21184:	.word	0x7ff80000
   21188:	.word	0x0000ced8
   2118c:	.word	0x00010ec0
   21190:	.word	0x00000b6c
   21194:	.word	0x00000c64
   21198:	.word	0x0000cdcc
   2119c:	.word	0x0000ed54
   211a0:	.word	0x00003c5c
   211a4:	.word	0x00003c50
   211a8:	.word	0x0001115c
   211ac:	.word	0x0001115c
   211b0:	.word	0x000003ff
   211b4:	.word	0x00010c5c
   211b8:	.word	0x0001076c
   211bc:	.word	0x0000c774
   211c0:	.word	0x0000c704
   211c4:	.word	0x00010b30
   211c8:	mov	r3, #1
   211cc:	str	r3, [sp, #60]	; 0x3c
   211d0:	b	20f88 <readstat_parse_spss_commands+0x2c0>
   211d4:	add	r6, sp, #1280	; 0x500
   211d8:	add	r6, r6, #8
   211dc:	mov	r3, sl
   211e0:	ldr	r2, [sp, #104]	; 0x68
   211e4:	mov	r1, #256	; 0x100
   211e8:	mov	r0, r6
   211ec:	bl	4280 <snprintf@plt>
   211f0:	ldr	r3, [sp, #120]	; 0x78
   211f4:	mov	r1, r6
   211f8:	str	r3, [sp, #24]
   211fc:	ldrd	r2, [sp, #32]
   21200:	vldr	d0, [sp, #96]	; 0x60
   21204:	ldr	r0, [sp, #64]	; 0x40
   21208:	strd	r2, [sp, #8]
   2120c:	ldr	r3, [sp, #132]	; 0x84
   21210:	ldr	r2, [sp, #60]	; 0x3c
   21214:	str	r3, [sp]
   21218:	ldr	r3, [sp, #136]	; 0x88
   2121c:	str	r3, [sp, #4]
   21220:	add	r3, sp, #264	; 0x108
   21224:	str	r3, [sp, #20]
   21228:	add	r3, sp, #232	; 0xe8
   2122c:	str	r3, [sp, #16]
   21230:	bl	404c <submit_value_label@plt>
   21234:	cmp	r0, #0
   21238:	beq	20f88 <readstat_parse_spss_commands+0x2c0>
   2123c:	mov	r6, r0
   21240:	ldr	fp, [sp, #48]	; 0x30
   21244:	b	21040 <readstat_parse_spss_commands+0x378>
   21248:	add	r3, sp, #1280	; 0x500
   2124c:	add	r3, r3, #8
   21250:	str	r3, [sp, #148]	; 0x94
   21254:	mov	r0, r3
   21258:	ldr	r2, [sp, #108]	; 0x6c
   2125c:	mov	r3, sl
   21260:	mov	r1, #256	; 0x100
   21264:	bl	4280 <snprintf@plt>
   21268:	add	r3, sl, #1
   2126c:	cmp	r9, #0
   21270:	str	r3, [sp, #144]	; 0x90
   21274:	beq	212c4 <readstat_parse_spss_commands+0x5fc>
   21278:	str	r8, [sp, #152]	; 0x98
   2127c:	ldr	r7, [sp, #48]	; 0x30
   21280:	ldr	r8, [sp, #148]	; 0x94
   21284:	mov	r6, #0
   21288:	add	sl, sp, #168	; 0xa8
   2128c:	mov	r1, sl
   21290:	mov	r0, r7
   21294:	bl	40d0 <readstat_schema_find_or_create_entry@plt>
   21298:	add	r6, r6, #1
   2129c:	mov	r3, #256	; 0x100
   212a0:	mov	r2, r8
   212a4:	mov	r1, #32
   212a8:	add	r0, r0, #2160	; 0x870
   212ac:	add	r0, r0, #8
   212b0:	bl	3e6c <readstat_copy@plt>
   212b4:	cmp	r9, r6
   212b8:	bne	2128c <readstat_parse_spss_commands+0x5c4>
   212bc:	ldr	r8, [sp, #152]	; 0x98
   212c0:	str	r7, [sp, #48]	; 0x30
   212c4:	ldr	sl, [sp, #144]	; 0x90
   212c8:	b	20f88 <readstat_parse_spss_commands+0x2c0>
   212cc:	add	r6, sp, #200	; 0xc8
   212d0:	ldr	r1, [sp, #112]	; 0x70
   212d4:	mov	r0, r6
   212d8:	bl	4028 <strcasecmp@plt>
   212dc:	ldr	r1, [sp, #116]	; 0x74
   212e0:	cmp	r0, #0
   212e4:	mov	r0, r6
   212e8:	ldreq	r2, [sp, #48]	; 0x30
   212ec:	ldreq	r3, [sp, #32]
   212f0:	streq	r3, [r2, #264]	; 0x108
   212f4:	bl	4028 <strcasecmp@plt>
   212f8:	cmp	r0, #0
   212fc:	ldrbeq	r3, [sp, #264]	; 0x108
   21300:	ldreq	r2, [sp, #48]	; 0x30
   21304:	strbeq	r3, [r2, #272]	; 0x110
   21308:	b	20f88 <readstat_parse_spss_commands+0x2c0>
   2130c:	ldr	r3, [pc, #-356]	; 211b0 <readstat_parse_spss_commands+0x4e8>
   21310:	cmp	r9, r3
   21314:	addle	r9, r9, #1
   21318:	b	20f88 <readstat_parse_spss_commands+0x2c0>
   2131c:	mov	r9, #0
   21320:	b	20f88 <readstat_parse_spss_commands+0x2c0>
   21324:	add	r1, sp, #168	; 0xa8
   21328:	ldr	r0, [sp, #48]	; 0x30
   2132c:	bl	40d0 <readstat_schema_find_or_create_entry@plt>
   21330:	mov	r3, #1024	; 0x400
   21334:	mov	r1, r3
   21338:	add	r2, sp, #264	; 0x108
   2133c:	add	r0, r0, #580	; 0x244
   21340:	bl	3e6c <readstat_copy@plt>
   21344:	b	20f88 <readstat_parse_spss_commands+0x2c0>
   21348:	add	r1, sp, #168	; 0xa8
   2134c:	ldr	r0, [sp, #48]	; 0x30
   21350:	bl	40d0 <readstat_schema_find_or_create_entry@plt>
   21354:	ldr	r3, [sp, #52]	; 0x34
   21358:	str	r3, [r0, #16]
   2135c:	ldr	r3, [sp, #128]	; 0x80
   21360:	str	r3, [r0]
   21364:	ldr	r3, [sp, #88]	; 0x58
   21368:	str	r3, [r0, #4]
   2136c:	ldr	r3, [sp, #92]	; 0x5c
   21370:	str	r3, [r0, #8]
   21374:	b	20f88 <readstat_parse_spss_commands+0x2c0>
   21378:	ldr	r3, [sp, #32]
   2137c:	sub	r3, r3, #1
   21380:	str	r3, [sp, #128]	; 0x80
   21384:	b	20f88 <readstat_parse_spss_commands+0x2c0>
   21388:	ldrd	r6, [sp, #32]
   2138c:	mov	r0, #10
   21390:	ldrb	r1, [r8]
   21394:	umull	r2, r3, r6, r0
   21398:	mla	r3, r0, r7, r3
   2139c:	sub	r1, r1, #48	; 0x30
   213a0:	adds	r6, r2, r1
   213a4:	adc	r7, r3, r1, asr #31
   213a8:	strd	r6, [sp, #32]
   213ac:	b	20f88 <readstat_parse_spss_commands+0x2c0>
   213b0:	ldr	r3, [sp, #32]
   213b4:	ldr	r2, [sp, #88]	; 0x58
   213b8:	sub	r3, r3, r2
   213bc:	str	r3, [sp, #92]	; 0x5c
   213c0:	b	20f88 <readstat_parse_spss_commands+0x2c0>
   213c4:	ldr	r3, [sp, #32]
   213c8:	sub	r3, r3, #1
   213cc:	str	r3, [sp, #88]	; 0x58
   213d0:	mov	r3, #1
   213d4:	str	r3, [sp, #92]	; 0x5c
   213d8:	b	20f88 <readstat_parse_spss_commands+0x2c0>
   213dc:	ldr	r3, [sp, #56]	; 0x38
   213e0:	ldr	r2, [sp, #44]	; 0x2c
   213e4:	mov	r1, #32
   213e8:	add	r0, sp, #200	; 0xc8
   213ec:	bl	3e6c <readstat_copy@plt>
   213f0:	b	20f88 <readstat_parse_spss_commands+0x2c0>
   213f4:	ldr	r3, [sp, #56]	; 0x38
   213f8:	ldr	r2, [sp, #44]	; 0x2c
   213fc:	mov	r1, #32
   21400:	add	r0, sp, #168	; 0xa8
   21404:	bl	3e6c <readstat_copy@plt>
   21408:	b	20f88 <readstat_parse_spss_commands+0x2c0>
   2140c:	ldr	r3, [sp, #56]	; 0x38
   21410:	ldr	r2, [sp, #44]	; 0x2c
   21414:	mov	r1, #32
   21418:	add	r0, sp, #232	; 0xe8
   2141c:	bl	4034 <readstat_copy_quoted@plt>
   21420:	b	20f88 <readstat_parse_spss_commands+0x2c0>
   21424:	ldr	r3, [sp, #56]	; 0x38
   21428:	ldr	r2, [sp, #44]	; 0x2c
   2142c:	mov	r1, #1024	; 0x400
   21430:	add	r0, sp, #264	; 0x108
   21434:	bl	4034 <readstat_copy_quoted@plt>
   21438:	b	20f88 <readstat_parse_spss_commands+0x2c0>
   2143c:	mvn	r3, #0
   21440:	str	r3, [sp, #60]	; 0x3c
   21444:	b	20f88 <readstat_parse_spss_commands+0x2c0>
   21448:	ldrd	r0, [sp, #32]
   2144c:	rsbs	r0, r0, #0
   21450:	rsc	r1, r1, #0
   21454:	bl	23878 <__aeabi_ul2d>
   21458:	mov	r3, #0
   2145c:	str	r3, [sp, #60]	; 0x3c
   21460:	strd	r0, [sp, #96]	; 0x60
   21464:	b	20f88 <readstat_parse_spss_commands+0x2c0>
   21468:	sub	r3, r3, lr
   2146c:	add	r3, r5, r3
   21470:	b	20f14 <readstat_parse_spss_commands+0x24c>
   21474:	sub	lr, ip, lr
   21478:	add	r3, r3, lr, asr #1
   2147c:	b	20f14 <readstat_parse_spss_commands+0x24c>
   21480:	ldr	r3, [sp, #68]	; 0x44
   21484:	mov	sl, fp
   21488:	cmp	sl, r3
   2148c:	mov	fp, r7
   21490:	beq	21598 <readstat_parse_spss_commands+0x8d0>
   21494:	ldr	r3, [sp, #164]	; 0xa4
   21498:	ldrb	r2, [sl]
   2149c:	sub	r3, sl, r3
   214a0:	add	r3, r3, #1
   214a4:	add	r4, sp, #1280	; 0x500
   214a8:	str	r3, [sp]
   214ac:	str	r2, [sp, #4]
   214b0:	ldr	r3, [sp, #124]	; 0x7c
   214b4:	ldr	r2, [pc, #-776]	; 211b4 <readstat_parse_spss_commands+0x4ec>
   214b8:	add	r4, r4, #8
   214bc:	add	r3, r3, #1
   214c0:	mov	r0, r4
   214c4:	add	r2, pc, r2
   214c8:	mov	r1, #1024	; 0x400
   214cc:	bl	4280 <snprintf@plt>
   214d0:	ldr	r3, [sp, #64]	; 0x40
   214d4:	ldr	r3, [r3, #24]
   214d8:	cmp	r3, #0
   214dc:	beq	214ec <readstat_parse_spss_commands+0x824>
   214e0:	ldr	r1, [sp, #120]	; 0x78
   214e4:	mov	r0, r4
   214e8:	blx	r3
   214ec:	mov	r6, #5
   214f0:	b	21040 <readstat_parse_spss_commands+0x378>
   214f4:	ldr	r3, [pc, #-836]	; 211b8 <readstat_parse_spss_commands+0x4f0>
   214f8:	ldr	r2, [pc, #-836]	; 211bc <readstat_parse_spss_commands+0x4f4>
   214fc:	add	r3, pc, r3
   21500:	add	r3, r3, r8
   21504:	add	r2, pc, r2
   21508:	ldrb	r1, [r3, #-2676]	; 0xfffff58c
   2150c:	mov	r9, r8
   21510:	mov	fp, r7
   21514:	add	r4, r2, r1
   21518:	ldrb	r5, [r2, r1]
   2151c:	add	r5, r4, r5
   21520:	add	r6, sp, #168	; 0xa8
   21524:	cmp	r5, r4
   21528:	beq	215b8 <readstat_parse_spss_commands+0x8f0>
   2152c:	ldrb	r3, [r4, #1]!
   21530:	cmp	r3, #8
   21534:	bne	21524 <readstat_parse_spss_commands+0x85c>
   21538:	mov	r1, r6
   2153c:	mov	r0, fp
   21540:	bl	40d0 <readstat_schema_find_or_create_entry@plt>
   21544:	ldr	r3, [sp, #52]	; 0x34
   21548:	str	r3, [r0, #16]
   2154c:	ldr	r3, [sp, #128]	; 0x80
   21550:	str	r3, [r0]
   21554:	ldr	r3, [sp, #88]	; 0x58
   21558:	str	r3, [r0, #4]
   2155c:	ldr	r3, [sp, #92]	; 0x5c
   21560:	str	r3, [r0, #8]
   21564:	b	21524 <readstat_parse_spss_commands+0x85c>
   21568:	ldr	r4, [pc, #-944]	; 211c0 <readstat_parse_spss_commands+0x4f8>
   2156c:	mov	r5, #0
   21570:	mov	r3, #5
   21574:	add	r4, pc, r4
   21578:	str	r5, [sp, #92]	; 0x5c
   2157c:	str	r5, [sp, #128]	; 0x80
   21580:	str	r5, [sp, #88]	; 0x58
   21584:	str	r3, [sp, #52]	; 0x34
   21588:	mov	r9, #628	; 0x274
   2158c:	b	2151c <readstat_parse_spss_commands+0x854>
   21590:	mov	r6, #3
   21594:	b	21040 <readstat_parse_spss_commands+0x378>
   21598:	add	r4, sp, #1280	; 0x500
   2159c:	ldr	r1, [pc, #-992]	; 211c4 <readstat_parse_spss_commands+0x4fc>
   215a0:	add	r4, r4, #8
   215a4:	mov	r0, r4
   215a8:	mov	r2, #67	; 0x43
   215ac:	add	r1, pc, r1
   215b0:	bl	3f20 <memcpy@plt>
   215b4:	b	214d0 <readstat_parse_spss_commands+0x808>
   215b8:	cmp	r9, #628	; 0x274
   215bc:	blt	21598 <readstat_parse_spss_commands+0x8d0>
   215c0:	ldr	r4, [sp, #64]	; 0x40
   215c4:	mov	r1, fp
   215c8:	ldr	r2, [sp, #120]	; 0x78
   215cc:	mov	r0, r4
   215d0:	bl	3f38 <submit_columns@plt>
   215d4:	ldr	r3, [r4, #32]
   215d8:	ldr	r2, [r3, #4]
   215dc:	mov	r6, r0
   215e0:	ldr	r0, [r3, #20]
   215e4:	blx	r2
   215e8:	ldr	r0, [sp, #160]	; 0xa0
   215ec:	bl	3ec0 <free@plt>
   215f0:	cmp	r6, #0
   215f4:	beq	21074 <readstat_parse_spss_commands+0x3ac>
   215f8:	b	2105c <readstat_parse_spss_commands+0x394>

000215fc <readstat_schema_free>:
   215fc:	push	{r4, lr}
   21600:	subs	r4, r0, #0
   21604:	popeq	{r4, pc}
   21608:	ldr	r0, [r4, #276]	; 0x114
   2160c:	bl	3ec0 <free@plt>
   21610:	mov	r0, r4
   21614:	pop	{r4, lr}
   21618:	b	3ec0 <free@plt>

0002161c <readstat_schema_find_or_create_entry>:
   2161c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   21620:	mov	r9, r0
   21624:	ldr	r7, [r0, #268]	; 0x10c
   21628:	mov	r8, r1
   2162c:	cmp	r7, #0
   21630:	ldr	sl, [r0, #276]	; 0x114
   21634:	ble	2167c <readstat_schema_find_or_create_entry+0x60>
   21638:	mov	r5, #0
   2163c:	mov	r4, sl
   21640:	b	2164c <readstat_schema_find_or_create_entry+0x30>
   21644:	cmp	r5, r7
   21648:	beq	2167c <readstat_schema_find_or_create_entry+0x60>
   2164c:	add	r0, r4, #24
   21650:	mov	r1, r8
   21654:	bl	3e00 <strcmp@plt>
   21658:	mov	r6, r4
   2165c:	add	r5, r5, #1
   21660:	add	r4, r4, #2208	; 0x8a0
   21664:	cmp	r0, #0
   21668:	bne	21644 <readstat_schema_find_or_create_entry+0x28>
   2166c:	cmp	r6, #0
   21670:	beq	2167c <readstat_schema_find_or_create_entry+0x60>
   21674:	mov	r0, r6
   21678:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2167c:	mov	r4, #2208	; 0x8a0
   21680:	mov	r0, sl
   21684:	mla	r1, r7, r4, r4
   21688:	bl	3ff8 <realloc@plt>
   2168c:	ldr	r6, [r9, #268]	; 0x10c
   21690:	mov	r2, r4
   21694:	mov	r1, #0
   21698:	mla	r6, r4, r6, r0
   2169c:	str	r0, [r9, #276]	; 0x114
   216a0:	mov	r0, r6
   216a4:	bl	42a4 <memset@plt>
   216a8:	mov	r0, r8
   216ac:	bl	41fc <strlen@plt>
   216b0:	mov	r2, r8
   216b4:	mov	r1, #300	; 0x12c
   216b8:	mov	r3, r0
   216bc:	add	r0, r6, #24
   216c0:	bl	3e6c <readstat_copy@plt>
   216c4:	mov	r3, #46	; 0x2e
   216c8:	strb	r3, [r6, #2200]	; 0x898
   216cc:	ldr	r3, [r9, #268]	; 0x10c
   216d0:	mov	r0, r6
   216d4:	add	r2, r3, #1
   216d8:	str	r2, [r9, #268]	; 0x10c
   216dc:	str	r3, [r6, #20]
   216e0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

000216e4 <readstat_parse_stata_dictionary>:
   216e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   216e8:	sub	sp, sp, #3312	; 0xcf0
   216ec:	ldr	ip, [r0, #32]
   216f0:	sub	sp, sp, #4
   216f4:	mov	fp, r0
   216f8:	str	r2, [sp, #56]	; 0x38
   216fc:	mov	r0, r1
   21700:	ldr	r2, [ip]
   21704:	ldr	r1, [ip, #20]
   21708:	mov	r4, r3
   2170c:	str	r3, [sp, #60]	; 0x3c
   21710:	blx	r2
   21714:	cmn	r0, #1
   21718:	beq	21a00 <readstat_parse_stata_dictionary+0x31c>
   2171c:	ldr	r3, [fp, #32]
   21720:	mov	r1, #2
   21724:	mov	r0, #0
   21728:	ldr	r4, [r3, #8]
   2172c:	ldr	r2, [r3, #20]
   21730:	blx	r4
   21734:	cmn	r0, #1
   21738:	mov	r4, r0
   2173c:	beq	219ac <readstat_parse_stata_dictionary+0x2c8>
   21740:	ldr	r3, [fp, #32]
   21744:	mov	r1, #0
   21748:	mov	r0, r1
   2174c:	ldr	r5, [r3, #8]
   21750:	ldr	r2, [r3, #20]
   21754:	blx	r5
   21758:	mov	r0, r4
   2175c:	bl	410c <malloc@plt>
   21760:	ldr	r3, [fp, #32]
   21764:	mov	r1, r4
   21768:	add	r2, r0, r4
   2176c:	str	r2, [sp, #32]
   21770:	ldr	r4, [r3, #12]
   21774:	mov	r6, r2
   21778:	ldr	r2, [r3, #20]
   2177c:	mov	r5, r0
   21780:	str	r0, [sp, #76]	; 0x4c
   21784:	blx	r4
   21788:	mov	r1, #280	; 0x118
   2178c:	mov	r0, #1
   21790:	bl	3d58 <calloc@plt>
   21794:	subs	sl, r0, #0
   21798:	beq	21d74 <readstat_parse_stata_dictionary+0x690>
   2179c:	mov	r3, #1
   217a0:	cmp	r5, r6
   217a4:	mov	r0, r5
   217a8:	str	r3, [sl, #256]	; 0x100
   217ac:	beq	21d34 <readstat_parse_stata_dictionary+0x650>
   217b0:	ldr	r2, [pc, #1488]	; 21d88 <readstat_parse_stata_dictionary+0x6a4>
   217b4:	ldr	r1, [pc, #1488]	; 21d8c <readstat_parse_stata_dictionary+0x6a8>
   217b8:	add	r2, pc, r2
   217bc:	add	r1, pc, r1
   217c0:	mov	r5, #0
   217c4:	mov	ip, r1
   217c8:	str	r1, [sp, #36]	; 0x24
   217cc:	add	r1, r2, #2688	; 0xa80
   217d0:	str	r2, [sp, #24]
   217d4:	mov	r8, r3
   217d8:	add	r2, ip, #2800	; 0xaf0
   217dc:	add	r3, r1, #4
   217e0:	mov	r9, r5
   217e4:	mov	r1, r5
   217e8:	mov	r6, r5
   217ec:	mov	r7, r0
   217f0:	mov	r4, #4
   217f4:	str	r3, [sp, #64]	; 0x40
   217f8:	add	r3, r2, #12
   217fc:	str	r3, [sp, #40]	; 0x28
   21800:	str	r5, [sp, #52]	; 0x34
   21804:	str	r5, [sp, #28]
   21808:	str	r5, [sp, #12]
   2180c:	str	r5, [sp, #8]
   21810:	str	r5, [sp, #44]	; 0x2c
   21814:	str	r5, [sp, #20]
   21818:	str	r0, [sp, #72]	; 0x48
   2181c:	str	fp, [sp, #68]	; 0x44
   21820:	ldr	lr, [pc, #1384]	; 21d90 <readstat_parse_stata_dictionary+0x6ac>
   21824:	cmp	r4, #0
   21828:	add	lr, pc, lr
   2182c:	add	lr, lr, r1
   21830:	mov	r3, r5
   21834:	beq	2187c <readstat_parse_stata_dictionary+0x198>
   21838:	sub	r1, r4, #1
   2183c:	adds	r1, lr, r1
   21840:	bcs	21874 <readstat_parse_stata_dictionary+0x190>
   21844:	ldrb	ip, [r7]
   21848:	mov	r2, lr
   2184c:	sub	r3, r1, r2
   21850:	ldrb	r0, [r2, r3, asr #1]
   21854:	add	r3, r2, r3, asr #1
   21858:	cmp	r0, ip
   2185c:	subhi	r1, r3, #1
   21860:	bhi	2186c <readstat_parse_stata_dictionary+0x188>
   21864:	bcs	21c8c <readstat_parse_stata_dictionary+0x5a8>
   21868:	add	r2, r3, #1
   2186c:	cmp	r1, r2
   21870:	bcs	2184c <readstat_parse_stata_dictionary+0x168>
   21874:	add	lr, lr, r4
   21878:	add	r3, r5, r4
   2187c:	ldr	r2, [pc, #1296]	; 21d94 <readstat_parse_stata_dictionary+0x6b0>
   21880:	add	r2, pc, r2
   21884:	add	r8, r2, r8
   21888:	ldrb	r5, [r8, #828]	; 0x33c
   2188c:	cmp	r5, #0
   21890:	beq	218e8 <readstat_parse_stata_dictionary+0x204>
   21894:	add	r0, lr, r5, lsl #1
   21898:	sub	r0, r0, #2
   2189c:	cmp	lr, r0
   218a0:	bhi	218e4 <readstat_parse_stata_dictionary+0x200>
   218a4:	ldrb	r4, [r7]
   218a8:	mov	r1, lr
   218ac:	sub	r2, r0, r1
   218b0:	asr	r2, r2, #1
   218b4:	bic	r2, r2, #1
   218b8:	add	ip, r1, r2
   218bc:	ldrb	r2, [r1, r2]
   218c0:	cmp	r2, r4
   218c4:	subhi	r0, ip, #2
   218c8:	bhi	218dc <readstat_parse_stata_dictionary+0x1f8>
   218cc:	ldrb	r2, [ip, #1]
   218d0:	add	r1, ip, #2
   218d4:	cmp	r2, r4
   218d8:	bcs	21c98 <readstat_parse_stata_dictionary+0x5b4>
   218dc:	cmp	r1, r0
   218e0:	bls	218ac <readstat_parse_stata_dictionary+0x1c8>
   218e4:	add	r3, r3, r5
   218e8:	ldr	r2, [sp, #24]
   218ec:	add	r3, r2, r3
   218f0:	ldrb	r4, [r3, #1840]	; 0x730
   218f4:	ldrb	r8, [r3, #988]	; 0x3dc
   218f8:	cmp	r4, #0
   218fc:	beq	21a34 <readstat_parse_stata_dictionary+0x350>
   21900:	ldr	r3, [sp, #64]	; 0x40
   21904:	ldrb	r5, [r3, r4]
   21908:	add	r4, r3, r4
   2190c:	add	r3, sp, #1104	; 0x450
   21910:	add	r5, r4, r5
   21914:	str	r3, [sp, #16]
   21918:	add	r3, r3, #580	; 0x244
   2191c:	str	r3, [sp, #48]	; 0x30
   21920:	cmp	r4, r5
   21924:	beq	21a34 <readstat_parse_stata_dictionary+0x350>
   21928:	ldrb	r3, [r4, #1]!
   2192c:	cmp	r3, #28
   21930:	addls	pc, pc, r3, lsl #2
   21934:	b	21920 <readstat_parse_stata_dictionary+0x23c>
   21938:	b	21a7c <readstat_parse_stata_dictionary+0x398>
   2193c:	b	21bdc <readstat_parse_stata_dictionary+0x4f8>
   21940:	b	21bb0 <readstat_parse_stata_dictionary+0x4cc>
   21944:	b	21b00 <readstat_parse_stata_dictionary+0x41c>
   21948:	b	21ae8 <readstat_parse_stata_dictionary+0x404>
   2194c:	b	21ab0 <readstat_parse_stata_dictionary+0x3cc>
   21950:	b	21a98 <readstat_parse_stata_dictionary+0x3b4>
   21954:	b	21a74 <readstat_parse_stata_dictionary+0x390>
   21958:	b	21a24 <readstat_parse_stata_dictionary+0x340>
   2195c:	b	21a74 <readstat_parse_stata_dictionary+0x390>
   21960:	b	21a24 <readstat_parse_stata_dictionary+0x340>
   21964:	b	21a74 <readstat_parse_stata_dictionary+0x390>
   21968:	b	21a24 <readstat_parse_stata_dictionary+0x340>
   2196c:	b	21c78 <readstat_parse_stata_dictionary+0x594>
   21970:	b	21c70 <readstat_parse_stata_dictionary+0x58c>
   21974:	b	21c64 <readstat_parse_stata_dictionary+0x580>
   21978:	b	21c58 <readstat_parse_stata_dictionary+0x574>
   2197c:	b	21c48 <readstat_parse_stata_dictionary+0x564>
   21980:	b	21c34 <readstat_parse_stata_dictionary+0x550>
   21984:	b	21c2c <readstat_parse_stata_dictionary+0x548>
   21988:	b	21c20 <readstat_parse_stata_dictionary+0x53c>
   2198c:	b	21c14 <readstat_parse_stata_dictionary+0x530>
   21990:	b	21c08 <readstat_parse_stata_dictionary+0x524>
   21994:	b	21bfc <readstat_parse_stata_dictionary+0x518>
   21998:	b	21bf0 <readstat_parse_stata_dictionary+0x50c>
   2199c:	b	21acc <readstat_parse_stata_dictionary+0x3e8>
   219a0:	b	21ad8 <readstat_parse_stata_dictionary+0x3f4>
   219a4:	b	21a84 <readstat_parse_stata_dictionary+0x3a0>
   219a8:	b	21a8c <readstat_parse_stata_dictionary+0x3a8>
   219ac:	mov	r3, #0
   219b0:	mov	sl, r3
   219b4:	mov	r4, #15
   219b8:	str	r3, [sp, #76]	; 0x4c
   219bc:	ldr	r3, [fp, #32]
   219c0:	ldr	r2, [r3, #4]
   219c4:	ldr	r0, [r3, #20]
   219c8:	blx	r2
   219cc:	ldr	r0, [sp, #76]	; 0x4c
   219d0:	bl	3ec0 <free@plt>
   219d4:	ldr	r3, [sp, #60]	; 0x3c
   219d8:	cmp	r3, #0
   219dc:	ldrne	r3, [sp, #60]	; 0x3c
   219e0:	strne	r4, [r3]
   219e4:	mov	r0, sl
   219e8:	bl	3fbc <readstat_schema_free@plt>
   219ec:	mov	sl, #0
   219f0:	mov	r0, sl
   219f4:	add	sp, sp, #3312	; 0xcf0
   219f8:	add	sp, sp, #4
   219fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21a00:	cmp	r4, #0
   21a04:	beq	219ec <readstat_parse_stata_dictionary+0x308>
   21a08:	mov	sl, #0
   21a0c:	mov	r3, #1
   21a10:	str	r3, [r4]
   21a14:	mov	r0, sl
   21a18:	add	sp, sp, #3312	; 0xcf0
   21a1c:	add	sp, sp, #4
   21a20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21a24:	sub	r3, r7, r6
   21a28:	cmp	r4, r5
   21a2c:	str	r3, [sp, #8]
   21a30:	bne	21928 <readstat_parse_stata_dictionary+0x244>
   21a34:	cmp	r8, #0
   21a38:	beq	21ca4 <readstat_parse_stata_dictionary+0x5c0>
   21a3c:	ldr	r3, [sp, #32]
   21a40:	add	r7, r7, #1
   21a44:	cmp	r3, r7
   21a48:	beq	21d0c <readstat_parse_stata_dictionary+0x628>
   21a4c:	ldr	r2, [sp, #36]	; 0x24
   21a50:	lsl	r3, r8, #1
   21a54:	add	r1, r2, #3120	; 0xc30
   21a58:	add	r1, r1, #8
   21a5c:	add	r2, r2, r8
   21a60:	ldrsh	r5, [r1, r3]
   21a64:	ldr	r1, [sp, #40]	; 0x28
   21a68:	ldrb	r4, [r2, #3444]	; 0xd74
   21a6c:	ldrsh	r1, [r1, r3]
   21a70:	b	21820 <readstat_parse_stata_dictionary+0x13c>
   21a74:	mov	r6, r7
   21a78:	b	21920 <readstat_parse_stata_dictionary+0x23c>
   21a7c:	mov	r9, #0
   21a80:	b	21920 <readstat_parse_stata_dictionary+0x23c>
   21a84:	str	r9, [sp, #1112]	; 0x458
   21a88:	b	21920 <readstat_parse_stata_dictionary+0x23c>
   21a8c:	mov	r3, #44	; 0x2c
   21a90:	strb	r3, [sp, #3304]	; 0xce8
   21a94:	b	21920 <readstat_parse_stata_dictionary+0x23c>
   21a98:	ldr	r3, [sp, #8]
   21a9c:	mov	r2, r6
   21aa0:	mov	r1, #1024	; 0x400
   21aa4:	ldr	r0, [sp, #48]	; 0x30
   21aa8:	bl	3e6c <readstat_copy@plt>
   21aac:	b	21920 <readstat_parse_stata_dictionary+0x23c>
   21ab0:	ldr	r0, [sp, #16]
   21ab4:	ldr	r3, [sp, #8]
   21ab8:	mov	r2, r6
   21abc:	mov	r1, #300	; 0x12c
   21ac0:	add	r0, r0, #24
   21ac4:	bl	3e6c <readstat_copy@plt>
   21ac8:	b	21920 <readstat_parse_stata_dictionary+0x23c>
   21acc:	mov	r3, #5
   21ad0:	str	r3, [sp, #1120]	; 0x460
   21ad4:	b	21920 <readstat_parse_stata_dictionary+0x23c>
   21ad8:	mov	r3, #0
   21adc:	str	r3, [sp, #1120]	; 0x460
   21ae0:	str	r9, [sp, #2716]	; 0xa9c
   21ae4:	b	21920 <readstat_parse_stata_dictionary+0x23c>
   21ae8:	ldr	r3, [sp, #8]
   21aec:	mov	r2, r6
   21af0:	mov	r1, #255	; 0xff
   21af4:	mov	r0, sl
   21af8:	bl	3e6c <readstat_copy@plt>
   21afc:	b	21920 <readstat_parse_stata_dictionary+0x23c>
   21b00:	ldr	r3, [sp, #68]	; 0x44
   21b04:	ldr	r2, [sp, #28]
   21b08:	ldr	r1, [sp, #12]
   21b0c:	ldr	fp, [r3, #8]
   21b10:	ldr	r3, [sp, #1112]	; 0x458
   21b14:	cmp	fp, #0
   21b18:	add	r3, r2, r3
   21b1c:	str	r2, [sp, #1108]	; 0x454
   21b20:	str	r1, [sp, #1104]	; 0x450
   21b24:	str	r3, [sp, #28]
   21b28:	beq	21b60 <readstat_parse_stata_dictionary+0x47c>
   21b2c:	ldr	r3, [sp, #44]	; 0x2c
   21b30:	mov	r2, #0
   21b34:	str	r3, [sp, #3268]	; 0xcc4
   21b38:	add	r1, sp, #1120	; 0x460
   21b3c:	ldr	r3, [sp, #56]	; 0x38
   21b40:	ldr	r0, [sp, #20]
   21b44:	blx	fp
   21b48:	cmp	r0, #1
   21b4c:	beq	21d7c <readstat_parse_stata_dictionary+0x698>
   21b50:	cmp	r0, #2
   21b54:	moveq	r3, #1
   21b58:	streq	r3, [sp, #1116]	; 0x45c
   21b5c:	beq	21b6c <readstat_parse_stata_dictionary+0x488>
   21b60:	ldr	r3, [sp, #44]	; 0x2c
   21b64:	add	r3, r3, #1
   21b68:	str	r3, [sp, #44]	; 0x2c
   21b6c:	ldr	r1, [sl, #268]	; 0x10c
   21b70:	mov	fp, #2208	; 0x8a0
   21b74:	ldr	r0, [sl, #276]	; 0x114
   21b78:	mla	r1, r1, fp, fp
   21b7c:	bl	3ff8 <realloc@plt>
   21b80:	ldr	r3, [sl, #268]	; 0x10c
   21b84:	ldr	r1, [sp, #16]
   21b88:	add	r2, r3, #1
   21b8c:	str	r2, [sl, #268]	; 0x10c
   21b90:	mov	r2, fp
   21b94:	str	r0, [sl, #276]	; 0x114
   21b98:	mla	r0, fp, r3, r0
   21b9c:	ldr	r3, [sp, #20]
   21ba0:	add	r3, r3, #1
   21ba4:	str	r3, [sp, #20]
   21ba8:	bl	3f20 <memcpy@plt>
   21bac:	b	21920 <readstat_parse_stata_dictionary+0x23c>
   21bb0:	mov	r2, #2208	; 0x8a0
   21bb4:	mov	r1, #0
   21bb8:	ldr	r0, [sp, #16]
   21bbc:	bl	42a4 <memset@plt>
   21bc0:	mov	r2, #5
   21bc4:	str	r2, [sp, #1120]	; 0x460
   21bc8:	ldr	r2, [sp, #20]
   21bcc:	mov	r3, #46	; 0x2e
   21bd0:	str	r2, [sp, #1124]	; 0x464
   21bd4:	strb	r3, [sp, #3304]	; 0xce8
   21bd8:	b	21920 <readstat_parse_stata_dictionary+0x23c>
   21bdc:	ldrb	r3, [r7]
   21be0:	add	r9, r9, r9, lsl #2
   21be4:	sub	r3, r3, #48	; 0x30
   21be8:	add	r9, r3, r9, lsl #1
   21bec:	b	21920 <readstat_parse_stata_dictionary+0x23c>
   21bf0:	mov	r3, #4
   21bf4:	str	r3, [sp, #1120]	; 0x460
   21bf8:	b	21920 <readstat_parse_stata_dictionary+0x23c>
   21bfc:	mov	r3, #3
   21c00:	str	r3, [sp, #1120]	; 0x460
   21c04:	b	21920 <readstat_parse_stata_dictionary+0x23c>
   21c08:	mov	r3, #2
   21c0c:	str	r3, [sp, #1120]	; 0x460
   21c10:	b	21920 <readstat_parse_stata_dictionary+0x23c>
   21c14:	mov	r3, #1
   21c18:	str	r3, [sp, #1120]	; 0x460
   21c1c:	b	21920 <readstat_parse_stata_dictionary+0x23c>
   21c20:	sub	r3, r9, #1
   21c24:	str	r3, [sl, #264]	; 0x108
   21c28:	b	21920 <readstat_parse_stata_dictionary+0x23c>
   21c2c:	str	r9, [sl, #260]	; 0x104
   21c30:	b	21920 <readstat_parse_stata_dictionary+0x23c>
   21c34:	ldr	r2, [sp, #12]
   21c38:	sub	r3, r9, #1
   21c3c:	add	r3, r2, r3
   21c40:	str	r3, [sp, #12]
   21c44:	b	21920 <readstat_parse_stata_dictionary+0x23c>
   21c48:	ldr	r3, [sp, #12]
   21c4c:	add	r3, r3, #1
   21c50:	str	r3, [sp, #12]
   21c54:	b	21920 <readstat_parse_stata_dictionary+0x23c>
   21c58:	sub	r3, r9, #1
   21c5c:	str	r3, [sp, #28]
   21c60:	b	21920 <readstat_parse_stata_dictionary+0x23c>
   21c64:	sub	r3, r9, #1
   21c68:	str	r3, [sp, #12]
   21c6c:	b	21920 <readstat_parse_stata_dictionary+0x23c>
   21c70:	str	r9, [sl, #256]	; 0x100
   21c74:	b	21920 <readstat_parse_stata_dictionary+0x23c>
   21c78:	ldr	r3, [sp, #52]	; 0x34
   21c7c:	str	r7, [sp, #72]	; 0x48
   21c80:	add	r3, r3, #1
   21c84:	str	r3, [sp, #52]	; 0x34
   21c88:	b	21920 <readstat_parse_stata_dictionary+0x23c>
   21c8c:	sub	r3, r3, lr
   21c90:	add	r3, r5, r3
   21c94:	b	218e8 <readstat_parse_stata_dictionary+0x204>
   21c98:	sub	lr, ip, lr
   21c9c:	add	r3, r3, lr, asr #1
   21ca0:	b	218e8 <readstat_parse_stata_dictionary+0x204>
   21ca4:	ldr	r3, [sp, #32]
   21ca8:	ldr	fp, [sp, #68]	; 0x44
   21cac:	cmp	r7, r3
   21cb0:	beq	21d34 <readstat_parse_stata_dictionary+0x650>
   21cb4:	ldr	r3, [sp, #72]	; 0x48
   21cb8:	ldrb	r2, [r7]
   21cbc:	sub	r3, r7, r3
   21cc0:	add	r3, r3, #1
   21cc4:	str	r3, [sp]
   21cc8:	str	r2, [sp, #4]
   21ccc:	ldr	r3, [sp, #52]	; 0x34
   21cd0:	ldr	r2, [pc, #192]	; 21d98 <readstat_parse_stata_dictionary+0x6b4>
   21cd4:	add	r4, sp, #80	; 0x50
   21cd8:	add	r3, r3, #1
   21cdc:	mov	r0, r4
   21ce0:	add	r2, pc, r2
   21ce4:	mov	r1, #1024	; 0x400
   21ce8:	bl	4280 <snprintf@plt>
   21cec:	ldr	r3, [fp, #24]
   21cf0:	cmp	r3, #0
   21cf4:	beq	21d04 <readstat_parse_stata_dictionary+0x620>
   21cf8:	ldr	r1, [sp, #56]	; 0x38
   21cfc:	mov	r0, r4
   21d00:	blx	r3
   21d04:	mov	r4, #5
   21d08:	b	219bc <readstat_parse_stata_dictionary+0x2d8>
   21d0c:	cmp	r8, #155	; 0x9b
   21d10:	ldr	fp, [sp, #68]	; 0x44
   21d14:	ble	21d34 <readstat_parse_stata_dictionary+0x650>
   21d18:	ldr	r3, [fp, #32]
   21d1c:	ldr	r2, [r3, #4]
   21d20:	ldr	r0, [r3, #20]
   21d24:	blx	r2
   21d28:	ldr	r0, [sp, #76]	; 0x4c
   21d2c:	bl	3ec0 <free@plt>
   21d30:	b	21a14 <readstat_parse_stata_dictionary+0x330>
   21d34:	ldr	lr, [pc, #96]	; 21d9c <readstat_parse_stata_dictionary+0x6b8>
   21d38:	add	r4, sp, #80	; 0x50
   21d3c:	add	lr, pc, lr
   21d40:	mov	ip, r4
   21d44:	ldm	lr!, {r0, r1, r2, r3}
   21d48:	stmia	ip!, {r0, r1, r2, r3}
   21d4c:	ldm	lr!, {r0, r1, r2, r3}
   21d50:	stmia	ip!, {r0, r1, r2, r3}
   21d54:	ldm	lr!, {r0, r1, r2, r3}
   21d58:	stmia	ip!, {r0, r1, r2, r3}
   21d5c:	ldm	lr, {r0, r1, r2}
   21d60:	lsr	r3, r2, #16
   21d64:	stmia	ip!, {r0, r1}
   21d68:	strh	r2, [ip], #2
   21d6c:	strb	r3, [ip]
   21d70:	b	21cec <readstat_parse_stata_dictionary+0x608>
   21d74:	mov	r4, #3
   21d78:	b	219bc <readstat_parse_stata_dictionary+0x2d8>
   21d7c:	ldr	fp, [sp, #68]	; 0x44
   21d80:	mov	r4, #4
   21d84:	b	219bc <readstat_parse_stata_dictionary+0x2d8>
   21d88:	.word	0x000109a8
   21d8c:	.word	0x000109a4
   21d90:	.word	0x00010938
   21d94:	.word	0x000108e0
   21d98:	.word	0x000112d0
   21d9c:	.word	0x00011238

00021da0 <handle_value.isra.1>:
   21da0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21da4:	add	fp, sp, #32
   21da8:	sub	sp, sp, #52	; 0x34
   21dac:	mov	sl, r3
   21db0:	ldr	r3, [fp, #8]
   21db4:	ldr	lr, [sl, #16]
   21db8:	sub	r4, fp, #52	; 0x34
   21dbc:	lsl	r7, r3, #2
   21dc0:	add	ip, r7, #8
   21dc4:	bic	ip, ip, #7
   21dc8:	mov	r5, #0
   21dcc:	add	r3, r7, #1
   21dd0:	mov	r8, r0
   21dd4:	sub	sp, sp, ip
   21dd8:	mov	r0, lr
   21ddc:	str	r1, [fp, #-68]	; 0xffffffbc
   21de0:	mov	r6, r2
   21de4:	str	r3, [fp, #-64]	; 0xffffffc0
   21de8:	str	lr, [fp, #-44]	; 0xffffffd4
   21dec:	str	r5, [r4, #4]
   21df0:	str	r5, [r4, #12]
   21df4:	bl	3e24 <readstat_type_class@plt>
   21df8:	add	r7, sl, #16
   21dfc:	cmp	r0, r5
   21e00:	beq	21e90 <handle_value.isra.1+0xf0>
   21e04:	ldr	r3, [sl, #16]
   21e08:	str	r5, [fp, #-56]	; 0xffffffc8
   21e0c:	cmp	r3, #5
   21e10:	beq	21ed8 <handle_value.isra.1+0x138>
   21e14:	cmp	r3, #4
   21e18:	beq	21ec4 <handle_value.isra.1+0x124>
   21e1c:	mov	r2, #10
   21e20:	sub	r1, fp, #56	; 0x38
   21e24:	ldr	r0, [fp, #4]
   21e28:	bl	3e30 <strtol@plt>
   21e2c:	mov	r3, #3
   21e30:	str	r3, [fp, #-44]	; 0xffffffd4
   21e34:	str	r0, [fp, #-52]	; 0xffffffcc
   21e38:	ldrb	r3, [fp, #-39]	; 0xffffffd9
   21e3c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   21e40:	ldr	r1, [fp, #4]
   21e44:	bic	r3, r3, #1
   21e48:	cmp	r2, r1
   21e4c:	orreq	r3, r3, #1
   21e50:	strb	r3, [fp, #-39]	; 0xffffffd9
   21e54:	sub	r3, fp, #36	; 0x24
   21e58:	ldmdb	r3, {r0, r1}
   21e5c:	ldr	r3, [fp, #12]
   21e60:	str	r3, [sp, #8]
   21e64:	ldr	r5, [r8]
   21e68:	stm	sp, {r0, r1}
   21e6c:	mov	r1, r7
   21e70:	ldm	r4, {r2, r3}
   21e74:	mov	r0, r6
   21e78:	blx	r5
   21e7c:	cmp	r0, #1
   21e80:	moveq	r0, #4
   21e84:	movne	r0, #0
   21e88:	sub	sp, fp, #32
   21e8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21e90:	ldr	r3, [fp, #-68]	; 0xffffffbc
   21e94:	add	r9, sp, #16
   21e98:	str	r3, [sp]
   21e9c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   21ea0:	ldr	r3, [fp, #8]
   21ea4:	ldr	r2, [fp, #4]
   21ea8:	mov	r0, r9
   21eac:	bl	4238 <readstat_convert@plt>
   21eb0:	cmp	r0, #0
   21eb4:	streq	r9, [fp, #-52]	; 0xffffffcc
   21eb8:	beq	21e54 <handle_value.isra.1+0xb4>
   21ebc:	sub	sp, fp, #32
   21ec0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21ec4:	sub	r1, fp, #56	; 0x38
   21ec8:	ldr	r0, [fp, #4]
   21ecc:	bl	40c4 <strtof@plt>
   21ed0:	vstr	s0, [fp, #-52]	; 0xffffffcc
   21ed4:	b	21e38 <handle_value.isra.1+0x98>
   21ed8:	sub	r1, fp, #56	; 0x38
   21edc:	ldr	r0, [fp, #4]
   21ee0:	bl	42f8 <strtod@plt>
   21ee4:	vstr	d0, [fp, #-52]	; 0xffffffcc
   21ee8:	b	21e38 <handle_value.isra.1+0x98>

00021eec <txt_parse_fixed_width>:
   21eec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21ef0:	sub	sp, sp, #4160	; 0x1040
   21ef4:	sub	sp, sp, #4
   21ef8:	ldr	r7, [r1, #8]
   21efc:	str	r3, [sp, #52]	; 0x34
   21f00:	add	r3, r0, #16
   21f04:	str	r1, [sp, #32]
   21f08:	str	r3, [sp, #40]	; 0x28
   21f0c:	ldr	sl, [r0, #32]
   21f10:	mov	r3, #0
   21f14:	ldr	r1, [r7, #256]	; 0x100
   21f18:	ldr	r9, [pc, #496]	; 22110 <txt_parse_fixed_width+0x224>
   21f1c:	str	r3, [sp, #28]
   21f20:	mov	fp, r0
   21f24:	add	r3, sp, #64	; 0x40
   21f28:	str	r3, [sp, #16]
   21f2c:	add	r3, sp, #63	; 0x3f
   21f30:	str	r2, [sp, #36]	; 0x24
   21f34:	str	r3, [sp, #48]	; 0x30
   21f38:	cmp	r1, #0
   21f3c:	ble	220d4 <txt_parse_fixed_width+0x1e8>
   21f40:	mov	r8, #0
   21f44:	ldr	r3, [sp, #52]	; 0x34
   21f48:	mov	r5, r8
   21f4c:	sub	r3, r3, #4
   21f50:	str	r3, [sp, #24]
   21f54:	ldr	r4, [sp, #24]
   21f58:	add	r0, sp, #4160	; 0x1040
   21f5c:	add	r0, r0, #40	; 0x28
   21f60:	ldr	r3, [sl, #12]
   21f64:	ldr	r2, [sl, #20]
   21f68:	ldr	r1, [r4, #4]
   21f6c:	ldr	r0, [r0]
   21f70:	blx	r3
   21f74:	cmp	r0, #0
   21f78:	beq	220f0 <txt_parse_fixed_width+0x204>
   21f7c:	mov	r1, r4
   21f80:	ldr	r3, [r1, #4]!
   21f84:	cmp	r3, r0
   21f88:	str	r1, [sp, #24]
   21f8c:	bhi	22108 <txt_parse_fixed_width+0x21c>
   21f90:	ldr	r1, [r7, #268]	; 0x10c
   21f94:	cmp	r1, r5
   21f98:	ble	2207c <txt_parse_fixed_width+0x190>
   21f9c:	mov	r3, #2208	; 0x8a0
   21fa0:	ldr	r2, [r7, #276]	; 0x114
   21fa4:	mul	r4, r3, r5
   21fa8:	add	r3, r2, r4
   21fac:	ldr	r2, [r2, r4]
   21fb0:	cmp	r8, r2
   21fb4:	bne	2207c <txt_parse_fixed_width+0x190>
   21fb8:	add	r4, r4, #2208	; 0x8a0
   21fbc:	str	sl, [sp, #44]	; 0x2c
   21fc0:	b	21fe8 <txt_parse_fixed_width+0xfc>
   21fc4:	add	r5, r5, #1
   21fc8:	cmp	r1, r5
   21fcc:	ble	22078 <txt_parse_fixed_width+0x18c>
   21fd0:	ldr	r3, [r7, #276]	; 0x114
   21fd4:	add	r3, r3, r4
   21fd8:	add	r4, r4, #2208	; 0x8a0
   21fdc:	ldr	r2, [r3]
   21fe0:	cmp	r2, r8
   21fe4:	bne	22078 <txt_parse_fixed_width+0x18c>
   21fe8:	ldr	r6, [r3, #8]
   21fec:	cmp	r6, r9
   21ff0:	bhi	21fc4 <txt_parse_fixed_width+0xd8>
   21ff4:	ldr	r2, [fp, #16]
   21ff8:	cmp	r2, #0
   21ffc:	beq	21fc4 <txt_parse_fixed_width+0xd8>
   22000:	ldr	sl, [r3, #12]
   22004:	cmp	sl, #0
   22008:	bne	21fc4 <txt_parse_fixed_width+0xd8>
   2200c:	ldr	r1, [r3, #4]
   22010:	str	r3, [sp, #20]
   22014:	add	r3, sp, #4160	; 0x1040
   22018:	add	r3, r3, #40	; 0x28
   2201c:	mov	r2, r6
   22020:	ldr	r3, [r3]
   22024:	ldr	r0, [sp, #16]
   22028:	add	r1, r3, r1
   2202c:	bl	3f20 <memcpy@plt>
   22030:	ldr	r2, [sp, #32]
   22034:	ldr	ip, [sp, #16]
   22038:	ldr	r3, [sp, #20]
   2203c:	ldr	r1, [r2, #4]
   22040:	ldr	r2, [sp, #36]	; 0x24
   22044:	str	r6, [sp, #4]
   22048:	str	r2, [sp, #8]
   2204c:	str	ip, [sp]
   22050:	ldr	r2, [sp, #28]
   22054:	ldr	r0, [sp, #40]	; 0x28
   22058:	strb	sl, [ip, r6]
   2205c:	bl	21da0 <handle_value.isra.1>
   22060:	cmp	r0, #0
   22064:	bne	220f0 <txt_parse_fixed_width+0x204>
   22068:	ldr	r1, [r7, #268]	; 0x10c
   2206c:	add	r5, r5, #1
   22070:	cmp	r1, r5
   22074:	bgt	21fd0 <txt_parse_fixed_width+0xe4>
   22078:	ldr	sl, [sp, #44]	; 0x2c
   2207c:	ldr	r3, [r7, #260]	; 0x104
   22080:	cmp	r3, #0
   22084:	bne	220c4 <txt_parse_fixed_width+0x1d8>
   22088:	ldr	r2, [sp, #16]
   2208c:	ldr	r4, [sp, #48]	; 0x30
   22090:	mov	r6, r2
   22094:	strb	r3, [r2, #-1]
   22098:	b	220a8 <txt_parse_fixed_width+0x1bc>
   2209c:	ldrb	r3, [r6, #-1]
   220a0:	cmp	r3, #10
   220a4:	beq	220c4 <txt_parse_fixed_width+0x1d8>
   220a8:	ldr	r3, [sl, #12]
   220ac:	ldr	r2, [sl, #20]
   220b0:	mov	r1, #1
   220b4:	mov	r0, r4
   220b8:	blx	r3
   220bc:	cmp	r0, #1
   220c0:	beq	2209c <txt_parse_fixed_width+0x1b0>
   220c4:	ldr	r1, [r7, #256]	; 0x100
   220c8:	add	r8, r8, #1
   220cc:	cmp	r1, r8
   220d0:	bgt	21f54 <txt_parse_fixed_width+0x68>
   220d4:	ldr	r2, [sp, #28]
   220d8:	ldr	r3, [fp, #44]	; 0x2c
   220dc:	add	r2, r2, #1
   220e0:	cmp	r2, r3
   220e4:	str	r2, [sp, #28]
   220e8:	bne	21f38 <txt_parse_fixed_width+0x4c>
   220ec:	mov	r0, #0
   220f0:	ldr	r3, [sp, #32]
   220f4:	ldr	r2, [sp, #28]
   220f8:	str	r2, [r3]
   220fc:	add	sp, sp, #4160	; 0x1040
   22100:	add	sp, sp, #4
   22104:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22108:	mov	r0, #2
   2210c:	b	220f0 <txt_parse_fixed_width+0x204>
   22110:	.word	0x00000fff

00022114 <readstat_parse_txt>:
   22114:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22118:	sub	sp, sp, #132	; 0x84
   2211c:	mov	ip, r0
   22120:	str	r0, [sp, #24]
   22124:	ldr	r0, [r0, #40]	; 0x28
   22128:	add	r8, sp, #60	; 0x3c
   2212c:	mov	r4, #0
   22130:	cmp	r0, #0
   22134:	str	r2, [sp, #28]
   22138:	str	r2, [sp, #68]	; 0x44
   2213c:	mov	r5, r1
   22140:	str	r3, [sp, #32]
   22144:	ldr	r7, [ip, #32]
   22148:	str	r4, [r8, #4]
   2214c:	str	r4, [sp, #60]	; 0x3c
   22150:	beq	22178 <readstat_parse_txt+0x64>
   22154:	ldr	r1, [ip, #36]	; 0x24
   22158:	cmp	r1, r4
   2215c:	beq	22178 <readstat_parse_txt+0x64>
   22160:	bl	4130 <iconv_open@plt>
   22164:	cmn	r0, #1
   22168:	streq	r4, [sp, #64]	; 0x40
   2216c:	strne	r0, [sp, #64]	; 0x40
   22170:	moveq	r4, #7
   22174:	beq	22388 <readstat_parse_txt+0x274>
   22178:	mov	r0, r5
   2217c:	ldr	r3, [r7]
   22180:	ldr	r1, [r7, #20]
   22184:	blx	r3
   22188:	cmn	r0, #1
   2218c:	beq	223b0 <readstat_parse_txt+0x29c>
   22190:	ldr	r6, [sp, #28]
   22194:	ldr	r4, [r6, #256]	; 0x100
   22198:	lsl	r5, r4, #2
   2219c:	mov	r0, r5
   221a0:	bl	410c <malloc@plt>
   221a4:	subs	r3, r0, #0
   221a8:	str	r3, [sp, #36]	; 0x24
   221ac:	beq	22384 <readstat_parse_txt+0x270>
   221b0:	cmp	r4, #0
   221b4:	ble	22574 <readstat_parse_txt+0x460>
   221b8:	ldr	r1, [r6, #260]	; 0x104
   221bc:	add	r2, r3, r5
   221c0:	str	r1, [r3], #4
   221c4:	cmp	r2, r3
   221c8:	bne	221c0 <readstat_parse_txt+0xac>
   221cc:	ldr	r3, [sp, #28]
   221d0:	ldr	lr, [r3, #268]	; 0x10c
   221d4:	cmp	lr, #0
   221d8:	ble	22218 <readstat_parse_txt+0x104>
   221dc:	ldr	r3, [sp, #28]
   221e0:	ldr	r6, [sp, #36]	; 0x24
   221e4:	mov	r1, #0
   221e8:	ldr	r2, [r3, #276]	; 0x114
   221ec:	ldm	r2, {r0, r3, r5}
   221f0:	add	r1, r1, #1
   221f4:	add	r2, r2, #2208	; 0x8a0
   221f8:	ldr	ip, [r6, r0, lsl #2]
   221fc:	add	r3, r3, r5
   22200:	cmp	ip, r3
   22204:	strcc	r3, [r6, r0, lsl #2]
   22208:	cmp	r1, lr
   2220c:	blt	221ec <readstat_parse_txt+0xd8>
   22210:	cmp	r4, #0
   22214:	ble	22584 <readstat_parse_txt+0x470>
   22218:	ldr	r1, [sp, #36]	; 0x24
   2221c:	mov	r3, #0
   22220:	mov	r2, r3
   22224:	sub	r0, r1, #4
   22228:	ldr	r1, [r0, #4]!
   2222c:	add	r2, r2, #1
   22230:	cmp	r3, r1
   22234:	movcc	r3, r1
   22238:	cmp	r4, r2
   2223c:	bgt	22228 <readstat_parse_txt+0x114>
   22240:	add	r0, r3, #2
   22244:	bl	410c <malloc@plt>
   22248:	subs	r3, r0, #0
   2224c:	str	r3, [sp, #44]	; 0x2c
   22250:	beq	22524 <readstat_parse_txt+0x410>
   22254:	ldr	r3, [sp, #28]
   22258:	ldr	r6, [r3, #264]	; 0x108
   2225c:	cmp	r6, #1
   22260:	ble	222b0 <readstat_parse_txt+0x19c>
   22264:	add	r4, sp, #128	; 0x80
   22268:	sub	r6, r6, #1
   2226c:	mov	r5, #1
   22270:	mov	r3, #0
   22274:	strb	r3, [r4, #-56]!	; 0xffffffc8
   22278:	subs	r6, r6, #1
   2227c:	bcc	222b0 <readstat_parse_txt+0x19c>
   22280:	ldr	r3, [r7, #12]
   22284:	ldr	r2, [r7, #20]
   22288:	mov	r1, r5
   2228c:	mov	r0, r4
   22290:	blx	r3
   22294:	cmp	r0, #1
   22298:	bne	22278 <readstat_parse_txt+0x164>
   2229c:	ldrb	r3, [sp, #72]	; 0x48
   222a0:	cmp	r3, #10
   222a4:	bne	22280 <readstat_parse_txt+0x16c>
   222a8:	subs	r6, r6, #1
   222ac:	bcs	22280 <readstat_parse_txt+0x16c>
   222b0:	ldr	r3, [sp, #28]
   222b4:	ldrb	r3, [r3, #272]	; 0x110
   222b8:	cmp	r3, #0
   222bc:	beq	223b8 <readstat_parse_txt+0x2a4>
   222c0:	mov	r0, #4096	; 0x1000
   222c4:	bl	410c <malloc@plt>
   222c8:	ldr	r3, [sp, #68]	; 0x44
   222cc:	mov	r2, #0
   222d0:	str	r2, [sp, #40]	; 0x28
   222d4:	ldr	r2, [sp, #24]
   222d8:	str	r3, [sp, #20]
   222dc:	ldr	r3, [r3, #268]	; 0x10c
   222e0:	mov	sl, #4096	; 0x1000
   222e4:	mov	fp, #1
   222e8:	ldr	r6, [r2, #32]
   222ec:	add	r2, r2, #16
   222f0:	str	r2, [sp, #48]	; 0x30
   222f4:	str	r7, [sp, #52]	; 0x34
   222f8:	mov	r8, r0
   222fc:	cmp	r3, #0
   22300:	ble	224ec <readstat_parse_txt+0x3d8>
   22304:	mov	r9, #0
   22308:	ldr	r1, [sp, #20]
   2230c:	sub	r3, r3, #1
   22310:	cmp	r3, r9
   22314:	ldr	r2, [r1, #276]	; 0x114
   22318:	mov	r3, #2208	; 0x8a0
   2231c:	moveq	r7, #10
   22320:	mla	r3, r3, r9, r2
   22324:	movne	r2, r1
   22328:	mov	r4, #0
   2232c:	ldrbne	r7, [r2, #272]	; 0x110
   22330:	str	r3, [sp, #16]
   22334:	add	r5, r8, r4
   22338:	mov	r0, r5
   2233c:	ldr	r3, [r6, #12]
   22340:	ldr	r2, [r6, #20]
   22344:	mov	r1, fp
   22348:	blx	r3
   2234c:	cmp	r0, #1
   22350:	bne	22458 <readstat_parse_txt+0x344>
   22354:	ldrb	r3, [r5]
   22358:	add	r4, r4, #1
   2235c:	cmp	r3, r7
   22360:	beq	22468 <readstat_parse_txt+0x354>
   22364:	cmp	r4, sl
   22368:	bne	22334 <readstat_parse_txt+0x220>
   2236c:	lsl	sl, r4, #1
   22370:	mov	r0, r8
   22374:	mov	r1, sl
   22378:	bl	3ff8 <realloc@plt>
   2237c:	mov	r8, r0
   22380:	b	22334 <readstat_parse_txt+0x220>
   22384:	mov	r4, #3
   22388:	ldr	r3, [r7, #4]
   2238c:	ldr	r0, [r7, #20]
   22390:	blx	r3
   22394:	ldr	r0, [sp, #64]	; 0x40
   22398:	cmp	r0, #0
   2239c:	beq	223a4 <readstat_parse_txt+0x290>
   223a0:	bl	3dd0 <iconv_close@plt>
   223a4:	mov	r0, r4
   223a8:	add	sp, sp, #132	; 0x84
   223ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   223b0:	mov	r4, #1
   223b4:	b	22388 <readstat_parse_txt+0x274>
   223b8:	ldr	r3, [sp, #44]	; 0x2c
   223bc:	mov	r1, r8
   223c0:	str	r3, [sp]
   223c4:	ldr	r2, [sp, #32]
   223c8:	ldr	r3, [sp, #36]	; 0x24
   223cc:	ldr	r0, [sp, #24]
   223d0:	bl	21eec <txt_parse_fixed_width>
   223d4:	mov	r4, r0
   223d8:	cmp	r4, #0
   223dc:	bne	22438 <readstat_parse_txt+0x324>
   223e0:	ldr	r3, [sp, #24]
   223e4:	ldr	r4, [r3]
   223e8:	cmp	r4, #0
   223ec:	beq	22438 <readstat_parse_txt+0x324>
   223f0:	add	r5, sp, #72	; 0x48
   223f4:	mov	r2, #56	; 0x38
   223f8:	mov	r1, #0
   223fc:	mov	r0, r5
   22400:	bl	42a4 <memset@plt>
   22404:	ldr	r3, [sp, #28]
   22408:	ldr	r2, [sp, #60]	; 0x3c
   2240c:	mov	r0, r5
   22410:	ldr	r8, [r3, #268]	; 0x10c
   22414:	asr	r3, r2, #31
   22418:	ldr	r1, [sp, #32]
   2241c:	asr	r9, r8, #31
   22420:	strd	r2, [sp, #72]	; 0x48
   22424:	strd	r8, [sp, #80]	; 0x50
   22428:	blx	r4
   2242c:	cmp	r0, #1
   22430:	moveq	r4, #4
   22434:	movne	r4, #0
   22438:	ldr	r3, [r7, #4]
   2243c:	ldr	r0, [r7, #20]
   22440:	blx	r3
   22444:	ldr	r0, [sp, #44]	; 0x2c
   22448:	bl	3ec0 <free@plt>
   2244c:	ldr	r0, [sp, #36]	; 0x24
   22450:	bl	3ec0 <free@plt>
   22454:	b	22394 <readstat_parse_txt+0x280>
   22458:	cmn	r0, #1
   2245c:	beq	22558 <readstat_parse_txt+0x444>
   22460:	cmp	r4, #0
   22464:	beq	22538 <readstat_parse_txt+0x424>
   22468:	ldr	r3, [sp, #24]
   2246c:	ldr	r3, [r3, #16]
   22470:	cmp	r3, #0
   22474:	beq	224d8 <readstat_parse_txt+0x3c4>
   22478:	ldr	r3, [sp, #16]
   2247c:	ldr	r3, [r3, #12]
   22480:	cmp	r3, #0
   22484:	bne	224d8 <readstat_parse_txt+0x3c4>
   22488:	subs	r2, r4, #1
   2248c:	moveq	r2, #0
   22490:	beq	224a4 <readstat_parse_txt+0x390>
   22494:	add	r3, r8, r2
   22498:	ldrb	r3, [r3, #-1]
   2249c:	cmp	r3, #13
   224a0:	subeq	r2, r4, #2
   224a4:	ldr	r0, [sp, #32]
   224a8:	mov	r3, #0
   224ac:	strb	r3, [r8, r2]
   224b0:	ldr	r1, [sp, #64]	; 0x40
   224b4:	str	r0, [sp, #8]
   224b8:	str	r2, [sp, #4]
   224bc:	ldr	r3, [sp, #16]
   224c0:	str	r8, [sp]
   224c4:	ldr	r2, [sp, #40]	; 0x28
   224c8:	ldr	r0, [sp, #48]	; 0x30
   224cc:	bl	21da0 <handle_value.isra.1>
   224d0:	cmp	r0, #0
   224d4:	bne	2258c <readstat_parse_txt+0x478>
   224d8:	ldr	r3, [sp, #20]
   224dc:	add	r9, r9, #1
   224e0:	ldr	r3, [r3, #268]	; 0x10c
   224e4:	cmp	r3, r9
   224e8:	bgt	22308 <readstat_parse_txt+0x1f4>
   224ec:	ldr	r2, [sp, #24]
   224f0:	ldr	r1, [sp, #40]	; 0x28
   224f4:	ldr	r2, [r2, #44]	; 0x2c
   224f8:	add	r1, r1, #1
   224fc:	cmp	r1, r2
   22500:	str	r1, [sp, #40]	; 0x28
   22504:	bne	222fc <readstat_parse_txt+0x1e8>
   22508:	ldr	r3, [sp, #40]	; 0x28
   2250c:	cmp	r8, #0
   22510:	ldr	r7, [sp, #52]	; 0x34
   22514:	str	r3, [sp, #60]	; 0x3c
   22518:	movne	r4, #0
   2251c:	bne	2254c <readstat_parse_txt+0x438>
   22520:	b	223e0 <readstat_parse_txt+0x2cc>
   22524:	ldr	r3, [r7, #4]
   22528:	ldr	r0, [r7, #20]
   2252c:	blx	r3
   22530:	mov	r4, #3
   22534:	b	2244c <readstat_parse_txt+0x338>
   22538:	ldr	r3, [sp, #40]	; 0x28
   2253c:	cmp	r8, #0
   22540:	ldr	r7, [sp, #52]	; 0x34
   22544:	str	r3, [sp, #60]	; 0x3c
   22548:	beq	223e0 <readstat_parse_txt+0x2cc>
   2254c:	mov	r0, r8
   22550:	bl	3ec0 <free@plt>
   22554:	b	223d8 <readstat_parse_txt+0x2c4>
   22558:	ldr	r7, [sp, #52]	; 0x34
   2255c:	mov	r4, #2
   22560:	ldr	r3, [sp, #40]	; 0x28
   22564:	cmp	r8, #0
   22568:	str	r3, [sp, #60]	; 0x3c
   2256c:	bne	2254c <readstat_parse_txt+0x438>
   22570:	b	22438 <readstat_parse_txt+0x324>
   22574:	ldr	r3, [sp, #28]
   22578:	ldr	lr, [r3, #268]	; 0x10c
   2257c:	cmp	lr, #0
   22580:	bgt	221dc <readstat_parse_txt+0xc8>
   22584:	mov	r0, #2
   22588:	b	22244 <readstat_parse_txt+0x130>
   2258c:	ldr	r7, [sp, #52]	; 0x34
   22590:	mov	r4, r0
   22594:	b	22560 <readstat_parse_txt+0x44c>

00022598 <zsav_ctx_init>:
   22598:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2259c:	mov	r1, #40	; 0x28
   225a0:	mov	r5, r0
   225a4:	mov	r0, #1
   225a8:	mov	r6, r2
   225ac:	mov	r7, r3
   225b0:	bl	3d58 <calloc@plt>
   225b4:	ldr	r8, [pc, #64]	; 225fc <zsav_ctx_init+0x64>
   225b8:	mov	r9, #0
   225bc:	mov	r4, r0
   225c0:	mov	r0, r5
   225c4:	bl	410c <malloc@plt>
   225c8:	mov	r3, #10
   225cc:	mov	r1, #4
   225d0:	str	r3, [r4, #12]
   225d4:	str	r0, [r4]
   225d8:	mov	r0, r3
   225dc:	bl	3d58 <calloc@plt>
   225e0:	mvn	r3, #0
   225e4:	strd	r6, [r4, #24]
   225e8:	strd	r8, [r4, #16]
   225ec:	str	r3, [r4, #32]
   225f0:	str	r0, [r4, #4]
   225f4:	mov	r0, r4
   225f8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   225fc:	.word	0x003ff000

00022600 <zsav_ctx_free>:
   22600:	ldr	r3, [r0, #8]
   22604:	push	{r4, r5, r6, lr}
   22608:	cmp	r3, #0
   2260c:	mov	r6, r0
   22610:	movgt	r4, #0
   22614:	ble	22648 <zsav_ctx_free+0x48>
   22618:	ldr	r3, [r6, #4]
   2261c:	ldr	r5, [r3, r4, lsl #2]
   22620:	add	r4, r4, #1
   22624:	add	r0, r5, #8
   22628:	bl	4310 <deflateEnd@plt>
   2262c:	ldr	r0, [r5, #64]	; 0x40
   22630:	bl	3ec0 <free@plt>
   22634:	mov	r0, r5
   22638:	bl	3ec0 <free@plt>
   2263c:	ldr	r3, [r6, #8]
   22640:	cmp	r3, r4
   22644:	bgt	22618 <zsav_ctx_free+0x18>
   22648:	ldr	r0, [r6, #4]
   2264c:	bl	3ec0 <free@plt>
   22650:	ldr	r0, [r6]
   22654:	bl	3ec0 <free@plt>
   22658:	mov	r0, r6
   2265c:	pop	{r4, r5, r6, lr}
   22660:	b	3ec0 <free@plt>

00022664 <zsav_add_block>:
   22664:	push	{r4, r5, r6, r7, r8, lr}
   22668:	mov	r4, r0
   2266c:	ldr	r6, [r0, #8]
   22670:	ldr	r3, [r0, #12]
   22674:	cmp	r6, r3
   22678:	beq	226d8 <zsav_add_block+0x74>
   2267c:	ldr	r8, [r0, #4]
   22680:	mov	r1, #72	; 0x48
   22684:	mov	r0, #1
   22688:	bl	3d58 <calloc@plt>
   2268c:	ldr	r2, [pc, #104]	; 226fc <zsav_add_block+0x98>
   22690:	add	r3, r6, #1
   22694:	str	r3, [r4, #8]
   22698:	add	r2, pc, r2
   2269c:	mov	r3, #56	; 0x38
   226a0:	ldr	r1, [r4, #32]
   226a4:	mov	r5, r0
   226a8:	add	r7, r0, #8
   226ac:	mov	r0, r7
   226b0:	str	r5, [r8, r6, lsl #2]
   226b4:	bl	4124 <deflateInit_@plt>
   226b8:	ldr	r1, [r4, #16]
   226bc:	mov	r0, r7
   226c0:	bl	3e84 <deflateBound@plt>
   226c4:	str	r0, [r5, #68]	; 0x44
   226c8:	bl	410c <malloc@plt>
   226cc:	str	r0, [r5, #64]	; 0x40
   226d0:	mov	r0, r5
   226d4:	pop	{r4, r5, r6, r7, r8, pc}
   226d8:	lsl	r3, r6, #1
   226dc:	ldr	r0, [r0, #4]
   226e0:	lsl	r1, r6, #3
   226e4:	str	r3, [r4, #12]
   226e8:	bl	3ff8 <realloc@plt>
   226ec:	ldr	r6, [r4, #8]
   226f0:	mov	r8, r0
   226f4:	str	r0, [r4, #4]
   226f8:	b	22680 <zsav_add_block+0x1c>
   226fc:	.word	0x00010950

00022700 <zsav_current_block>:
   22700:	ldr	r3, [r0, #8]
   22704:	cmp	r3, #0
   22708:	subne	r3, r3, #-1073741823	; 0xc0000001
   2270c:	ldrne	r2, [r0, #4]
   22710:	ldrne	r0, [r2, r3, lsl #2]
   22714:	moveq	r0, r3
   22718:	bx	lr

0002271c <zsav_compress_row>:
   2271c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22720:	sub	sp, sp, #12
   22724:	mov	r7, r0
   22728:	mov	r0, r3
   2272c:	mov	r8, r3
   22730:	mov	r6, r1
   22734:	str	r2, [sp, #4]
   22738:	bl	40a0 <zsav_current_block@plt>
   2273c:	subs	r4, r0, #0
   22740:	beq	2287c <zsav_compress_row+0x160>
   22744:	ldrd	sl, [r8, #16]
   22748:	ldm	r4, {ip, lr}
   2274c:	mov	r3, #0
   22750:	ldr	r2, [r4, #64]	; 0x40
   22754:	subs	r0, sl, ip
   22758:	sbc	r1, fp, ip, asr #31
   2275c:	cmp	r0, r6
   22760:	sbcs	r3, r1, r3
   22764:	ldr	r3, [r4, #68]	; 0x44
   22768:	add	r2, r2, lr
   2276c:	sub	r3, r3, lr
   22770:	str	r7, [r4, #8]
   22774:	str	r6, [r4, #12]
   22778:	str	r2, [r4, #20]
   2277c:	str	r3, [r4, #24]
   22780:	bge	2282c <zsav_compress_row+0x110>
   22784:	mov	lr, #0
   22788:	b	227f4 <zsav_compress_row+0xd8>
   2278c:	ldr	ip, [r4, #24]
   22790:	ldr	r3, [r8, #16]
   22794:	ldr	r1, [r4, #12]
   22798:	ldr	r2, [r4, #68]	; 0x44
   2279c:	sub	r3, r3, r1
   227a0:	sub	r2, r2, ip
   227a4:	str	r3, [r4]
   227a8:	str	r2, [r4, #4]
   227ac:	bl	4118 <zsav_add_block@plt>
   227b0:	ldrd	sl, [r8, #16]
   227b4:	mov	r3, #0
   227b8:	mov	lr, r9
   227bc:	add	r9, r7, r9
   227c0:	ldr	ip, [r0]
   227c4:	mov	r4, r0
   227c8:	subs	r0, sl, ip
   227cc:	sbc	r1, fp, ip, asr #31
   227d0:	cmp	r0, r5
   227d4:	sbcs	r3, r1, r3
   227d8:	ldr	r3, [r4, #64]	; 0x40
   227dc:	str	r5, [r4, #12]
   227e0:	str	r3, [r4, #20]
   227e4:	ldr	r3, [r4, #68]	; 0x44
   227e8:	str	r9, [r4, #8]
   227ec:	str	r3, [r4, #24]
   227f0:	bge	22830 <zsav_compress_row+0x114>
   227f4:	sub	r9, sl, ip
   227f8:	str	r9, [r4, #12]
   227fc:	mov	r1, #4
   22800:	add	r0, r4, #8
   22804:	add	r9, r9, lr
   22808:	bl	4040 <deflate@plt>
   2280c:	sub	r5, r6, r9
   22810:	mov	r3, r0
   22814:	cmp	r3, #1
   22818:	mov	r0, r8
   2281c:	beq	2278c <zsav_compress_row+0x70>
   22820:	mov	r0, r3
   22824:	add	sp, sp, #12
   22828:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2282c:	mov	r5, r6
   22830:	ldr	r3, [sp, #4]
   22834:	add	r0, r4, #8
   22838:	cmp	r3, #0
   2283c:	moveq	r1, r3
   22840:	movne	r1, #4
   22844:	bl	4040 <deflate@plt>
   22848:	ldr	r2, [r4]
   2284c:	ldr	ip, [r4, #12]
   22850:	ldr	r1, [r4, #68]	; 0x44
   22854:	sub	r2, r2, ip
   22858:	add	r5, r2, r5
   2285c:	str	r5, [r4]
   22860:	mov	r3, r0
   22864:	ldr	r0, [r4, #24]
   22868:	sub	r2, r1, r0
   2286c:	str	r2, [r4, #4]
   22870:	mov	r0, r3
   22874:	add	sp, sp, #12
   22878:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2287c:	mov	r0, r8
   22880:	bl	4118 <zsav_add_block@plt>
   22884:	mov	r4, r0
   22888:	b	22744 <zsav_compress_row+0x28>

0002288c <zsav_read_compressed_data>:
   2288c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22890:	sub	sp, sp, #148	; 0x94
   22894:	mov	r4, r0
   22898:	mov	r3, #0
   2289c:	add	r6, sp, #88	; 0x58
   228a0:	mov	r2, #56	; 0x38
   228a4:	mov	sl, r1
   228a8:	mov	r0, r6
   228ac:	mov	r1, r3
   228b0:	ldr	r5, [r4, #36]	; 0x24
   228b4:	str	r3, [sp, #36]	; 0x24
   228b8:	ldr	r7, [r4, #344]	; 0x158
   228bc:	bl	42a4 <memset@plt>
   228c0:	add	r3, r4, #400	; 0x190
   228c4:	ldrb	r1, [r4, #436]	; 0x1b4
   228c8:	ldrd	r2, [r3, #-8]
   228cc:	add	r9, r4, #416	; 0x1a0
   228d0:	ldrd	r8, [r9]
   228d4:	and	r1, r1, #1
   228d8:	strd	r2, [sp, #104]	; 0x68
   228dc:	str	r1, [sp, #132]	; 0x84
   228e0:	ldr	r3, [r5, #12]
   228e4:	ldr	r2, [r5, #20]
   228e8:	mov	r1, #24
   228ec:	strd	r8, [sp, #112]	; 0x70
   228f0:	add	r0, sp, #40	; 0x28
   228f4:	blx	r3
   228f8:	cmp	r0, #23
   228fc:	bhi	22910 <zsav_read_compressed_data+0x84>
   22900:	mov	r7, #2
   22904:	mov	r0, r7
   22908:	add	sp, sp, #148	; 0x94
   2290c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22910:	ldrb	r3, [r4, #436]	; 0x1b4
   22914:	tst	r3, #1
   22918:	bne	22960 <zsav_read_compressed_data+0xd4>
   2291c:	ldrd	r8, [sp, #40]	; 0x28
   22920:	ldrd	r0, [sp, #56]	; 0x38
   22924:	strd	r0, [sp, #56]	; 0x38
   22928:	ldr	r3, [r5, #8]
   2292c:	mov	r1, #1
   22930:	ldr	r2, [r5, #20]
   22934:	mov	r0, #0
   22938:	blx	r3
   2293c:	mov	r1, #0
   22940:	cmp	r9, r1
   22944:	sub	r0, r0, #24
   22948:	cmpeq	r8, r0
   2294c:	beq	229ac <zsav_read_compressed_data+0x120>
   22950:	mov	r7, #5
   22954:	mov	r0, r7
   22958:	add	sp, sp, #148	; 0x94
   2295c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22960:	ldrd	r0, [sp, #40]	; 0x28
   22964:	bl	3d7c <byteswap8@plt>
   22968:	ldrb	r3, [r4, #436]	; 0x1b4
   2296c:	tst	r3, #1
   22970:	str	r0, [sp, #40]	; 0x28
   22974:	str	r1, [sp, #44]	; 0x2c
   22978:	moveq	r8, r0
   2297c:	moveq	r9, r1
   22980:	beq	22920 <zsav_read_compressed_data+0x94>
   22984:	ldrd	r0, [sp, #48]	; 0x30
   22988:	bl	3d7c <byteswap8@plt>
   2298c:	ldrb	r3, [r4, #436]	; 0x1b4
   22990:	tst	r3, #1
   22994:	strd	r0, [sp, #48]	; 0x30
   22998:	beq	2291c <zsav_read_compressed_data+0x90>
   2299c:	ldrd	r0, [sp, #56]	; 0x38
   229a0:	bl	3d7c <byteswap8@plt>
   229a4:	ldrd	r8, [sp, #40]	; 0x28
   229a8:	b	22924 <zsav_read_compressed_data+0x98>
   229ac:	ldr	r3, [r5, #8]
   229b0:	ldr	r2, [r5, #20]
   229b4:	mov	r1, #0
   229b8:	ldr	r0, [sp, #48]	; 0x30
   229bc:	ldrd	r8, [sp, #56]	; 0x38
   229c0:	blx	r3
   229c4:	cmn	r0, #1
   229c8:	moveq	r7, #15
   229cc:	beq	22904 <zsav_read_compressed_data+0x78>
   229d0:	ldr	r3, [r5, #12]
   229d4:	ldr	r2, [r5, #20]
   229d8:	mov	r1, #24
   229dc:	add	r0, sp, #64	; 0x40
   229e0:	blx	r3
   229e4:	cmp	r0, #23
   229e8:	bls	22900 <zsav_read_compressed_data+0x74>
   229ec:	ldrb	r3, [r4, #436]	; 0x1b4
   229f0:	tst	r3, #1
   229f4:	bne	22a9c <zsav_read_compressed_data+0x210>
   229f8:	ldr	r3, [sp, #84]	; 0x54
   229fc:	str	r3, [sp, #4]
   22a00:	subs	r0, r8, #24
   22a04:	sbc	r1, r9, #0
   22a08:	mov	r3, #0
   22a0c:	mov	r2, #24
   22a10:	bl	239c0 <__aeabi_uldivmod>
   22a14:	ldr	r3, [sp, #4]
   22a18:	str	r3, [sp, #84]	; 0x54
   22a1c:	cmp	r3, r0
   22a20:	bne	22950 <zsav_read_compressed_data+0xc4>
   22a24:	cmp	r3, #0
   22a28:	beq	22af4 <zsav_read_compressed_data+0x268>
   22a2c:	mov	r8, #24
   22a30:	mul	r8, r8, r3
   22a34:	mov	r0, r8
   22a38:	bl	422c <readstat_malloc@plt>
   22a3c:	subs	r9, r0, #0
   22a40:	beq	22d6c <zsav_read_compressed_data+0x4e0>
   22a44:	mov	r1, r8
   22a48:	ldr	r3, [r5, #12]
   22a4c:	ldr	r2, [r5, #20]
   22a50:	blx	r3
   22a54:	cmp	r8, r0
   22a58:	movhi	r8, #0
   22a5c:	movhi	fp, r8
   22a60:	movhi	r7, #2
   22a64:	bls	22cc0 <zsav_read_compressed_data+0x434>
   22a68:	mov	r0, r9
   22a6c:	bl	3ec0 <free@plt>
   22a70:	cmp	fp, #0
   22a74:	beq	22a80 <zsav_read_compressed_data+0x1f4>
   22a78:	mov	r0, fp
   22a7c:	bl	3ec0 <free@plt>
   22a80:	cmp	r8, #0
   22a84:	beq	22904 <zsav_read_compressed_data+0x78>
   22a88:	mov	r0, r8
   22a8c:	bl	3ec0 <free@plt>
   22a90:	mov	r0, r7
   22a94:	add	sp, sp, #148	; 0x94
   22a98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22a9c:	ldrd	r0, [sp, #64]	; 0x40
   22aa0:	bl	3d7c <byteswap8@plt>
   22aa4:	ldrb	r3, [r4, #436]	; 0x1b4
   22aa8:	tst	r3, #1
   22aac:	strd	r0, [sp, #64]	; 0x40
   22ab0:	beq	229f8 <zsav_read_compressed_data+0x16c>
   22ab4:	ldrd	r0, [sp, #72]	; 0x48
   22ab8:	bl	3d7c <byteswap8@plt>
   22abc:	ldrb	r3, [r4, #436]	; 0x1b4
   22ac0:	tst	r3, #1
   22ac4:	strd	r0, [sp, #72]	; 0x48
   22ac8:	beq	229f8 <zsav_read_compressed_data+0x16c>
   22acc:	ldr	r0, [sp, #80]	; 0x50
   22ad0:	bl	3d94 <byteswap4@plt>
   22ad4:	ldrb	r3, [r4, #436]	; 0x1b4
   22ad8:	tst	r3, #1
   22adc:	str	r0, [sp, #80]	; 0x50
   22ae0:	beq	229f8 <zsav_read_compressed_data+0x16c>
   22ae4:	ldr	r0, [sp, #84]	; 0x54
   22ae8:	bl	3d94 <byteswap4@plt>
   22aec:	str	r0, [sp, #4]
   22af0:	b	22a00 <zsav_read_compressed_data+0x174>
   22af4:	ldr	r9, [sp, #4]
   22af8:	ldr	r3, [r5, #12]
   22afc:	ldr	r2, [r5, #20]
   22b00:	mov	r1, r9
   22b04:	mov	r0, r9
   22b08:	blx	r3
   22b0c:	lsls	r3, r7, #3
   22b10:	str	r3, [sp, #20]
   22b14:	streq	r3, [sp, #8]
   22b18:	bne	22da4 <zsav_read_compressed_data+0x518>
   22b1c:	mov	r3, #0
   22b20:	mov	r7, r6
   22b24:	mov	r6, r4
   22b28:	mov	r4, r9
   22b2c:	str	r3, [sp, #16]
   22b30:	mov	r8, r3
   22b34:	mov	fp, r3
   22b38:	str	r3, [sp, #12]
   22b3c:	add	r3, sp, #36	; 0x24
   22b40:	str	r3, [sp, #24]
   22b44:	str	r9, [sp]
   22b48:	ldr	r9, [sp, #16]
   22b4c:	ldr	r2, [sp, #4]
   22b50:	cmp	r9, r2
   22b54:	beq	22d98 <zsav_read_compressed_data+0x50c>
   22b58:	ldr	r3, [r5, #8]
   22b5c:	ldr	r2, [r5, #20]
   22b60:	mov	r1, #0
   22b64:	ldr	r0, [r4, #8]
   22b68:	blx	r3
   22b6c:	cmn	r0, #1
   22b70:	beq	22de0 <zsav_read_compressed_data+0x554>
   22b74:	mov	r0, fp
   22b78:	ldr	r1, [r4, #20]
   22b7c:	bl	42e0 <readstat_realloc@plt>
   22b80:	subs	fp, r0, #0
   22b84:	beq	22dd4 <zsav_read_compressed_data+0x548>
   22b88:	ldr	r3, [r5, #12]
   22b8c:	ldr	r2, [r5, #20]
   22b90:	ldr	r1, [r4, #20]
   22b94:	blx	r3
   22b98:	ldr	r3, [r4, #20]
   22b9c:	cmp	r0, r3
   22ba0:	bne	22dc8 <zsav_read_compressed_data+0x53c>
   22ba4:	ldr	r3, [r4, #16]
   22ba8:	mov	r0, r8
   22bac:	mov	r1, r3
   22bb0:	str	r3, [sp, #36]	; 0x24
   22bb4:	bl	42e0 <readstat_realloc@plt>
   22bb8:	subs	r8, r0, #0
   22bbc:	beq	22dd4 <zsav_read_compressed_data+0x548>
   22bc0:	ldr	r3, [r4, #20]
   22bc4:	mov	r2, fp
   22bc8:	ldr	r1, [sp, #24]
   22bcc:	bl	3f98 <uncompress@plt>
   22bd0:	cmp	r0, #0
   22bd4:	bne	22dbc <zsav_read_compressed_data+0x530>
   22bd8:	ldr	r3, [r4, #16]
   22bdc:	ldr	r2, [sp, #36]	; 0x24
   22be0:	cmp	r3, r2
   22be4:	bne	22dbc <zsav_read_compressed_data+0x530>
   22be8:	add	r3, r9, #1
   22bec:	mov	r1, #1
   22bf0:	str	r3, [sp, #16]
   22bf4:	mov	r3, #0
   22bf8:	str	r1, [sp, #136]	; 0x88
   22bfc:	str	r5, [sp, #28]
   22c00:	mov	r9, r4
   22c04:	ldr	r1, [sp, #12]
   22c08:	ldr	r5, [sp, #20]
   22c0c:	mov	r4, r3
   22c10:	b	22c40 <zsav_read_compressed_data+0x3b4>
   22c14:	cmp	r0, #3
   22c18:	beq	22d98 <zsav_read_compressed_data+0x50c>
   22c1c:	ldr	r2, [r6, #356]	; 0x164
   22c20:	cmp	r2, #0
   22c24:	ble	22c34 <zsav_read_compressed_data+0x3a8>
   22c28:	ldr	ip, [r6, #364]	; 0x16c
   22c2c:	cmp	r2, ip
   22c30:	beq	22d98 <zsav_read_compressed_data+0x50c>
   22c34:	cmp	r0, #0
   22c38:	beq	22cb0 <zsav_read_compressed_data+0x424>
   22c3c:	ldr	r2, [sp, #36]	; 0x24
   22c40:	ldr	r3, [sp, #8]
   22c44:	sub	r2, r2, r4
   22c48:	add	ip, r3, r1
   22c4c:	add	r4, r8, r4
   22c50:	sub	r1, r5, r1
   22c54:	mov	r0, r7
   22c58:	str	r2, [sp, #92]	; 0x5c
   22c5c:	str	r4, [sp, #88]	; 0x58
   22c60:	str	r1, [sp, #100]	; 0x64
   22c64:	str	ip, [sp, #96]	; 0x60
   22c68:	bl	4214 <sav_decompress_row@plt>
   22c6c:	ldr	r0, [sp, #136]	; 0x88
   22c70:	ldr	r1, [sp, #100]	; 0x64
   22c74:	ldr	r2, [sp, #36]	; 0x24
   22c78:	ldr	r4, [sp, #92]	; 0x5c
   22c7c:	cmp	r0, #2
   22c80:	sub	r1, r5, r1
   22c84:	sub	r4, r2, r4
   22c88:	bne	22c14 <zsav_read_compressed_data+0x388>
   22c8c:	mov	r1, r5
   22c90:	mov	r2, r6
   22c94:	ldr	r0, [sp, #8]
   22c98:	blx	sl
   22c9c:	mov	r1, #0
   22ca0:	cmp	r0, #0
   22ca4:	bne	22d74 <zsav_read_compressed_data+0x4e8>
   22ca8:	ldr	r0, [sp, #136]	; 0x88
   22cac:	b	22c14 <zsav_read_compressed_data+0x388>
   22cb0:	str	r1, [sp, #12]
   22cb4:	ldr	r5, [sp, #28]
   22cb8:	add	r4, r9, #24
   22cbc:	b	22b48 <zsav_read_compressed_data+0x2bc>
   22cc0:	ldr	r3, [sp, #4]
   22cc4:	cmp	r3, #0
   22cc8:	movgt	fp, r9
   22ccc:	movgt	r8, #0
   22cd0:	bgt	22d2c <zsav_read_compressed_data+0x4a0>
   22cd4:	b	22b0c <zsav_read_compressed_data+0x280>
   22cd8:	strd	r0, [fp]
   22cdc:	ldrb	r3, [r4, #436]	; 0x1b4
   22ce0:	ldrd	r0, [fp, #8]
   22ce4:	tst	r3, #1
   22ce8:	bne	22d54 <zsav_read_compressed_data+0x4c8>
   22cec:	strd	r0, [fp, #8]
   22cf0:	ldrb	r3, [r4, #436]	; 0x1b4
   22cf4:	ldr	r0, [fp, #16]
   22cf8:	tst	r3, #1
   22cfc:	bne	22d4c <zsav_read_compressed_data+0x4c0>
   22d00:	str	r0, [fp, #16]
   22d04:	ldrb	r3, [r4, #436]	; 0x1b4
   22d08:	ldr	r0, [fp, #20]
   22d0c:	tst	r3, #1
   22d10:	bne	22d44 <zsav_read_compressed_data+0x4b8>
   22d14:	ldr	r3, [sp, #4]
   22d18:	add	r8, r8, #1
   22d1c:	cmp	r3, r8
   22d20:	str	r0, [fp, #20]
   22d24:	add	fp, fp, #24
   22d28:	beq	22b0c <zsav_read_compressed_data+0x280>
   22d2c:	ldrb	r3, [r4, #436]	; 0x1b4
   22d30:	ldrd	r0, [fp]
   22d34:	tst	r3, #1
   22d38:	beq	22cd8 <zsav_read_compressed_data+0x44c>
   22d3c:	bl	3d7c <byteswap8@plt>
   22d40:	b	22cd8 <zsav_read_compressed_data+0x44c>
   22d44:	bl	3d94 <byteswap4@plt>
   22d48:	b	22d14 <zsav_read_compressed_data+0x488>
   22d4c:	bl	3d94 <byteswap4@plt>
   22d50:	b	22d00 <zsav_read_compressed_data+0x474>
   22d54:	bl	3d7c <byteswap8@plt>
   22d58:	b	22cec <zsav_read_compressed_data+0x460>
   22d5c:	cmp	r9, #0
   22d60:	movne	r8, fp
   22d64:	movne	r7, #3
   22d68:	bne	22a68 <zsav_read_compressed_data+0x1dc>
   22d6c:	mov	r7, #3
   22d70:	b	22904 <zsav_read_compressed_data+0x78>
   22d74:	ldr	r9, [sp]
   22d78:	mov	r7, r0
   22d7c:	ldr	r0, [sp, #8]
   22d80:	cmp	r0, #0
   22d84:	beq	22d8c <zsav_read_compressed_data+0x500>
   22d88:	bl	3ec0 <free@plt>
   22d8c:	cmp	r9, #0
   22d90:	bne	22a68 <zsav_read_compressed_data+0x1dc>
   22d94:	b	22a70 <zsav_read_compressed_data+0x1e4>
   22d98:	ldr	r9, [sp]
   22d9c:	mov	r7, #0
   22da0:	b	22d7c <zsav_read_compressed_data+0x4f0>
   22da4:	ldr	r0, [sp, #20]
   22da8:	bl	422c <readstat_malloc@plt>
   22dac:	subs	fp, r0, #0
   22db0:	beq	22d5c <zsav_read_compressed_data+0x4d0>
   22db4:	str	fp, [sp, #8]
   22db8:	b	22b1c <zsav_read_compressed_data+0x290>
   22dbc:	ldr	r9, [sp]
   22dc0:	mov	r7, #5
   22dc4:	b	22d7c <zsav_read_compressed_data+0x4f0>
   22dc8:	ldr	r9, [sp]
   22dcc:	mov	r7, #2
   22dd0:	b	22d7c <zsav_read_compressed_data+0x4f0>
   22dd4:	ldr	r9, [sp]
   22dd8:	mov	r7, #3
   22ddc:	b	22d7c <zsav_read_compressed_data+0x4f0>
   22de0:	ldr	r9, [sp]
   22de4:	mov	r7, #15
   22de8:	b	22d7c <zsav_read_compressed_data+0x4f0>

00022dec <zsav_write_compressed_row>:
   22dec:	push	{r4, r5, r6, lr}
   22df0:	mov	r3, r0
   22df4:	ldr	r5, [r0, #300]	; 0x12c
   22df8:	mov	r4, r0
   22dfc:	ldr	r0, [r5]
   22e00:	bl	4460 <sav_compress_row@plt>
   22e04:	ldr	r3, [r4, #84]	; 0x54
   22e08:	ldr	r2, [r4, #80]	; 0x50
   22e0c:	add	r3, r3, #1
   22e10:	sub	r2, r3, r2
   22e14:	mov	r3, r5
   22e18:	clz	r2, r2
   22e1c:	lsr	r2, r2, #5
   22e20:	mov	r1, r0
   22e24:	ldr	r0, [r5]
   22e28:	bl	44b4 <zsav_compress_row@plt>
   22e2c:	cmp	r0, #1
   22e30:	movhi	r0, #13
   22e34:	movls	r0, #0
   22e38:	pop	{r4, r5, r6, pc}

00022e3c <zsav_end_data>:
   22e3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22e40:	mov	r5, r0
   22e44:	ldr	r4, [r0, #300]	; 0x12c
   22e48:	sub	sp, sp, #60	; 0x3c
   22e4c:	ldr	ip, [r4, #8]
   22e50:	ldrd	r0, [r4, #24]
   22e54:	add	r2, ip, #1
   22e58:	add	r2, r2, r2, lsl #1
   22e5c:	strd	r0, [sp, #32]
   22e60:	lsl	r2, r2, #3
   22e64:	adds	r0, r0, #24
   22e68:	asr	r3, r2, #31
   22e6c:	adc	r1, r1, #0
   22e70:	cmp	ip, #0
   22e74:	strd	r2, [sp, #48]	; 0x30
   22e78:	ldrgt	r3, [r4, #4]
   22e7c:	strd	r0, [sp, #40]	; 0x28
   22e80:	addgt	ip, r3, ip, lsl #2
   22e84:	ble	22ea4 <zsav_end_data+0x68>
   22e88:	ldr	r2, [r3], #4
   22e8c:	ldr	r2, [r2, #4]
   22e90:	adds	r0, r0, r2
   22e94:	adc	r1, r1, r2, asr #31
   22e98:	cmp	ip, r3
   22e9c:	bne	22e88 <zsav_end_data+0x4c>
   22ea0:	strd	r0, [sp, #40]	; 0x28
   22ea4:	add	r9, sp, #32
   22ea8:	mov	r1, r9
   22eac:	mov	r2, #8
   22eb0:	mov	r0, r5
   22eb4:	bl	4454 <readstat_write_bytes@plt>
   22eb8:	subs	fp, r0, #0
   22ebc:	beq	22ecc <zsav_end_data+0x90>
   22ec0:	mov	r0, fp
   22ec4:	add	sp, sp, #60	; 0x3c
   22ec8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22ecc:	add	r6, sp, #40	; 0x28
   22ed0:	mov	r1, r6
   22ed4:	mov	r2, #8
   22ed8:	mov	r0, r5
   22edc:	bl	4454 <readstat_write_bytes@plt>
   22ee0:	subs	fp, r0, #0
   22ee4:	bne	22ec0 <zsav_end_data+0x84>
   22ee8:	add	r7, sp, #48	; 0x30
   22eec:	mov	r1, r7
   22ef0:	mov	r2, #8
   22ef4:	mov	r0, r5
   22ef8:	bl	4454 <readstat_write_bytes@plt>
   22efc:	subs	fp, r0, #0
   22f00:	bne	22ec0 <zsav_end_data+0x84>
   22f04:	ldr	r2, [r4, #8]
   22f08:	cmp	r2, #0
   22f0c:	ble	22f44 <zsav_end_data+0x108>
   22f10:	mov	r8, fp
   22f14:	ldr	r3, [r4, #4]
   22f18:	mov	r0, r5
   22f1c:	ldr	r3, [r3, r8, lsl #2]
   22f20:	add	r8, r8, #1
   22f24:	ldr	r2, [r3, #4]
   22f28:	ldr	r1, [r3, #64]	; 0x40
   22f2c:	bl	4454 <readstat_write_bytes@plt>
   22f30:	cmp	r0, #0
   22f34:	bne	230bc <zsav_end_data+0x280>
   22f38:	ldr	r2, [r4, #8]
   22f3c:	cmp	r8, r2
   22f40:	blt	22f14 <zsav_end_data+0xd8>
   22f44:	mov	r0, #0
   22f48:	mov	r1, #0
   22f4c:	mvn	fp, #0
   22f50:	strd	r0, [sp, #32]
   22f54:	mvn	sl, #99	; 0x63
   22f58:	ldr	r3, [r4, #16]
   22f5c:	str	r2, [sp, #12]
   22f60:	add	r1, sp, #24
   22f64:	mov	r2, #8
   22f68:	mov	r0, r5
   22f6c:	strd	sl, [sp, #24]
   22f70:	str	r3, [sp, #8]
   22f74:	bl	4454 <readstat_write_bytes@plt>
   22f78:	subs	fp, r0, #0
   22f7c:	bne	22ec0 <zsav_end_data+0x84>
   22f80:	mov	r1, r9
   22f84:	mov	r2, #8
   22f88:	mov	r0, r5
   22f8c:	bl	4454 <readstat_write_bytes@plt>
   22f90:	subs	fp, r0, #0
   22f94:	bne	22ec0 <zsav_end_data+0x84>
   22f98:	mov	r2, #4
   22f9c:	add	r1, sp, #8
   22fa0:	mov	r0, r5
   22fa4:	bl	4454 <readstat_write_bytes@plt>
   22fa8:	subs	fp, r0, #0
   22fac:	bne	22ec0 <zsav_end_data+0x84>
   22fb0:	mov	r2, #4
   22fb4:	add	r1, sp, #12
   22fb8:	mov	r0, r5
   22fbc:	bl	4454 <readstat_write_bytes@plt>
   22fc0:	subs	fp, r0, #0
   22fc4:	bne	22ec0 <zsav_end_data+0x84>
   22fc8:	ldrd	r0, [r4, #24]
   22fcc:	ldr	r2, [r4, #8]
   22fd0:	strd	r0, [sp, #40]	; 0x28
   22fd4:	adds	r0, r0, #24
   22fd8:	adc	r1, r1, #0
   22fdc:	cmp	r2, #0
   22fe0:	strd	r0, [sp, #48]	; 0x30
   22fe4:	ble	22ec0 <zsav_end_data+0x84>
   22fe8:	add	r3, sp, #16
   22fec:	str	r3, [sp]
   22ff0:	add	r3, sp, #20
   22ff4:	mov	r8, fp
   22ff8:	mov	r9, #8
   22ffc:	mov	sl, #4
   23000:	str	r3, [sp, #4]
   23004:	b	23078 <zsav_end_data+0x23c>
   23008:	bl	4454 <readstat_write_bytes@plt>
   2300c:	mov	r2, sl
   23010:	ldr	r1, [sp]
   23014:	subs	ip, r0, #0
   23018:	mov	r0, r5
   2301c:	bne	230b4 <zsav_end_data+0x278>
   23020:	bl	4454 <readstat_write_bytes@plt>
   23024:	mov	r2, sl
   23028:	ldr	r1, [sp, #4]
   2302c:	subs	ip, r0, #0
   23030:	mov	r0, r5
   23034:	bne	230b4 <zsav_end_data+0x278>
   23038:	bl	4454 <readstat_write_bytes@plt>
   2303c:	cmp	r0, #0
   23040:	bne	230bc <zsav_end_data+0x280>
   23044:	ldrd	r2, [sp, #40]	; 0x28
   23048:	ldr	r1, [sp, #16]
   2304c:	ldr	r0, [r4, #8]
   23050:	adds	r2, r2, r1
   23054:	adc	r3, r3, r1, asr #31
   23058:	ldr	r1, [sp, #20]
   2305c:	strd	r2, [sp, #40]	; 0x28
   23060:	ldrd	r2, [sp, #48]	; 0x30
   23064:	adds	r2, r2, r1
   23068:	adc	r3, r3, r1, asr #31
   2306c:	cmp	r8, r0
   23070:	strd	r2, [sp, #48]	; 0x30
   23074:	bge	22ec0 <zsav_end_data+0x84>
   23078:	ldr	r3, [r4, #4]
   2307c:	mov	r2, r9
   23080:	mov	r1, r6
   23084:	ldr	r3, [r3, r8, lsl #2]
   23088:	add	r8, r8, #1
   2308c:	ldm	r3, {r0, r3}
   23090:	str	r0, [sp, #16]
   23094:	mov	r0, r5
   23098:	str	r3, [sp, #20]
   2309c:	bl	4454 <readstat_write_bytes@plt>
   230a0:	mov	r2, r9
   230a4:	mov	r1, r7
   230a8:	subs	ip, r0, #0
   230ac:	mov	r0, r5
   230b0:	beq	23008 <zsav_end_data+0x1cc>
   230b4:	mov	fp, ip
   230b8:	b	22ec0 <zsav_end_data+0x84>
   230bc:	mov	fp, r0
   230c0:	mov	r0, fp
   230c4:	add	sp, sp, #60	; 0x3c
   230c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000230cc <__udivsi3>:
   230cc:	subs	r2, r1, #1
   230d0:	bxeq	lr
   230d4:	bcc	232ac <__udivsi3+0x1e0>
   230d8:	cmp	r0, r1
   230dc:	bls	23290 <__udivsi3+0x1c4>
   230e0:	tst	r1, r2
   230e4:	beq	2329c <__udivsi3+0x1d0>
   230e8:	clz	r3, r0
   230ec:	clz	r2, r1
   230f0:	sub	r3, r2, r3
   230f4:	rsbs	r3, r3, #31
   230f8:	addne	r3, r3, r3, lsl #1
   230fc:	mov	r2, #0
   23100:	addne	pc, pc, r3, lsl #2
   23104:	nop			; (mov r0, r0)
   23108:	cmp	r0, r1, lsl #31
   2310c:	adc	r2, r2, r2
   23110:	subcs	r0, r0, r1, lsl #31
   23114:	cmp	r0, r1, lsl #30
   23118:	adc	r2, r2, r2
   2311c:	subcs	r0, r0, r1, lsl #30
   23120:	cmp	r0, r1, lsl #29
   23124:	adc	r2, r2, r2
   23128:	subcs	r0, r0, r1, lsl #29
   2312c:	cmp	r0, r1, lsl #28
   23130:	adc	r2, r2, r2
   23134:	subcs	r0, r0, r1, lsl #28
   23138:	cmp	r0, r1, lsl #27
   2313c:	adc	r2, r2, r2
   23140:	subcs	r0, r0, r1, lsl #27
   23144:	cmp	r0, r1, lsl #26
   23148:	adc	r2, r2, r2
   2314c:	subcs	r0, r0, r1, lsl #26
   23150:	cmp	r0, r1, lsl #25
   23154:	adc	r2, r2, r2
   23158:	subcs	r0, r0, r1, lsl #25
   2315c:	cmp	r0, r1, lsl #24
   23160:	adc	r2, r2, r2
   23164:	subcs	r0, r0, r1, lsl #24
   23168:	cmp	r0, r1, lsl #23
   2316c:	adc	r2, r2, r2
   23170:	subcs	r0, r0, r1, lsl #23
   23174:	cmp	r0, r1, lsl #22
   23178:	adc	r2, r2, r2
   2317c:	subcs	r0, r0, r1, lsl #22
   23180:	cmp	r0, r1, lsl #21
   23184:	adc	r2, r2, r2
   23188:	subcs	r0, r0, r1, lsl #21
   2318c:	cmp	r0, r1, lsl #20
   23190:	adc	r2, r2, r2
   23194:	subcs	r0, r0, r1, lsl #20
   23198:	cmp	r0, r1, lsl #19
   2319c:	adc	r2, r2, r2
   231a0:	subcs	r0, r0, r1, lsl #19
   231a4:	cmp	r0, r1, lsl #18
   231a8:	adc	r2, r2, r2
   231ac:	subcs	r0, r0, r1, lsl #18
   231b0:	cmp	r0, r1, lsl #17
   231b4:	adc	r2, r2, r2
   231b8:	subcs	r0, r0, r1, lsl #17
   231bc:	cmp	r0, r1, lsl #16
   231c0:	adc	r2, r2, r2
   231c4:	subcs	r0, r0, r1, lsl #16
   231c8:	cmp	r0, r1, lsl #15
   231cc:	adc	r2, r2, r2
   231d0:	subcs	r0, r0, r1, lsl #15
   231d4:	cmp	r0, r1, lsl #14
   231d8:	adc	r2, r2, r2
   231dc:	subcs	r0, r0, r1, lsl #14
   231e0:	cmp	r0, r1, lsl #13
   231e4:	adc	r2, r2, r2
   231e8:	subcs	r0, r0, r1, lsl #13
   231ec:	cmp	r0, r1, lsl #12
   231f0:	adc	r2, r2, r2
   231f4:	subcs	r0, r0, r1, lsl #12
   231f8:	cmp	r0, r1, lsl #11
   231fc:	adc	r2, r2, r2
   23200:	subcs	r0, r0, r1, lsl #11
   23204:	cmp	r0, r1, lsl #10
   23208:	adc	r2, r2, r2
   2320c:	subcs	r0, r0, r1, lsl #10
   23210:	cmp	r0, r1, lsl #9
   23214:	adc	r2, r2, r2
   23218:	subcs	r0, r0, r1, lsl #9
   2321c:	cmp	r0, r1, lsl #8
   23220:	adc	r2, r2, r2
   23224:	subcs	r0, r0, r1, lsl #8
   23228:	cmp	r0, r1, lsl #7
   2322c:	adc	r2, r2, r2
   23230:	subcs	r0, r0, r1, lsl #7
   23234:	cmp	r0, r1, lsl #6
   23238:	adc	r2, r2, r2
   2323c:	subcs	r0, r0, r1, lsl #6
   23240:	cmp	r0, r1, lsl #5
   23244:	adc	r2, r2, r2
   23248:	subcs	r0, r0, r1, lsl #5
   2324c:	cmp	r0, r1, lsl #4
   23250:	adc	r2, r2, r2
   23254:	subcs	r0, r0, r1, lsl #4
   23258:	cmp	r0, r1, lsl #3
   2325c:	adc	r2, r2, r2
   23260:	subcs	r0, r0, r1, lsl #3
   23264:	cmp	r0, r1, lsl #2
   23268:	adc	r2, r2, r2
   2326c:	subcs	r0, r0, r1, lsl #2
   23270:	cmp	r0, r1, lsl #1
   23274:	adc	r2, r2, r2
   23278:	subcs	r0, r0, r1, lsl #1
   2327c:	cmp	r0, r1
   23280:	adc	r2, r2, r2
   23284:	subcs	r0, r0, r1
   23288:	mov	r0, r2
   2328c:	bx	lr
   23290:	moveq	r0, #1
   23294:	movne	r0, #0
   23298:	bx	lr
   2329c:	clz	r2, r1
   232a0:	rsb	r2, r2, #31
   232a4:	lsr	r0, r0, r2
   232a8:	bx	lr
   232ac:	cmp	r0, #0
   232b0:	mvnne	r0, #0
   232b4:	b	239fc <__aeabi_idiv0>

000232b8 <__aeabi_uidivmod>:
   232b8:	cmp	r1, #0
   232bc:	beq	232ac <__udivsi3+0x1e0>
   232c0:	push	{r0, r1, lr}
   232c4:	bl	230cc <__udivsi3>
   232c8:	pop	{r1, r2, lr}
   232cc:	mul	r3, r2, r0
   232d0:	sub	r1, r1, r3
   232d4:	bx	lr

000232d8 <__divsi3>:
   232d8:	cmp	r1, #0
   232dc:	beq	234e8 <.divsi3_skip_div0_test+0x208>

000232e0 <.divsi3_skip_div0_test>:
   232e0:	eor	ip, r0, r1
   232e4:	rsbmi	r1, r1, #0
   232e8:	subs	r2, r1, #1
   232ec:	beq	234b4 <.divsi3_skip_div0_test+0x1d4>
   232f0:	movs	r3, r0
   232f4:	rsbmi	r3, r0, #0
   232f8:	cmp	r3, r1
   232fc:	bls	234c0 <.divsi3_skip_div0_test+0x1e0>
   23300:	tst	r1, r2
   23304:	beq	234d0 <.divsi3_skip_div0_test+0x1f0>
   23308:	clz	r2, r3
   2330c:	clz	r0, r1
   23310:	sub	r2, r0, r2
   23314:	rsbs	r2, r2, #31
   23318:	addne	r2, r2, r2, lsl #1
   2331c:	mov	r0, #0
   23320:	addne	pc, pc, r2, lsl #2
   23324:	nop			; (mov r0, r0)
   23328:	cmp	r3, r1, lsl #31
   2332c:	adc	r0, r0, r0
   23330:	subcs	r3, r3, r1, lsl #31
   23334:	cmp	r3, r1, lsl #30
   23338:	adc	r0, r0, r0
   2333c:	subcs	r3, r3, r1, lsl #30
   23340:	cmp	r3, r1, lsl #29
   23344:	adc	r0, r0, r0
   23348:	subcs	r3, r3, r1, lsl #29
   2334c:	cmp	r3, r1, lsl #28
   23350:	adc	r0, r0, r0
   23354:	subcs	r3, r3, r1, lsl #28
   23358:	cmp	r3, r1, lsl #27
   2335c:	adc	r0, r0, r0
   23360:	subcs	r3, r3, r1, lsl #27
   23364:	cmp	r3, r1, lsl #26
   23368:	adc	r0, r0, r0
   2336c:	subcs	r3, r3, r1, lsl #26
   23370:	cmp	r3, r1, lsl #25
   23374:	adc	r0, r0, r0
   23378:	subcs	r3, r3, r1, lsl #25
   2337c:	cmp	r3, r1, lsl #24
   23380:	adc	r0, r0, r0
   23384:	subcs	r3, r3, r1, lsl #24
   23388:	cmp	r3, r1, lsl #23
   2338c:	adc	r0, r0, r0
   23390:	subcs	r3, r3, r1, lsl #23
   23394:	cmp	r3, r1, lsl #22
   23398:	adc	r0, r0, r0
   2339c:	subcs	r3, r3, r1, lsl #22
   233a0:	cmp	r3, r1, lsl #21
   233a4:	adc	r0, r0, r0
   233a8:	subcs	r3, r3, r1, lsl #21
   233ac:	cmp	r3, r1, lsl #20
   233b0:	adc	r0, r0, r0
   233b4:	subcs	r3, r3, r1, lsl #20
   233b8:	cmp	r3, r1, lsl #19
   233bc:	adc	r0, r0, r0
   233c0:	subcs	r3, r3, r1, lsl #19
   233c4:	cmp	r3, r1, lsl #18
   233c8:	adc	r0, r0, r0
   233cc:	subcs	r3, r3, r1, lsl #18
   233d0:	cmp	r3, r1, lsl #17
   233d4:	adc	r0, r0, r0
   233d8:	subcs	r3, r3, r1, lsl #17
   233dc:	cmp	r3, r1, lsl #16
   233e0:	adc	r0, r0, r0
   233e4:	subcs	r3, r3, r1, lsl #16
   233e8:	cmp	r3, r1, lsl #15
   233ec:	adc	r0, r0, r0
   233f0:	subcs	r3, r3, r1, lsl #15
   233f4:	cmp	r3, r1, lsl #14
   233f8:	adc	r0, r0, r0
   233fc:	subcs	r3, r3, r1, lsl #14
   23400:	cmp	r3, r1, lsl #13
   23404:	adc	r0, r0, r0
   23408:	subcs	r3, r3, r1, lsl #13
   2340c:	cmp	r3, r1, lsl #12
   23410:	adc	r0, r0, r0
   23414:	subcs	r3, r3, r1, lsl #12
   23418:	cmp	r3, r1, lsl #11
   2341c:	adc	r0, r0, r0
   23420:	subcs	r3, r3, r1, lsl #11
   23424:	cmp	r3, r1, lsl #10
   23428:	adc	r0, r0, r0
   2342c:	subcs	r3, r3, r1, lsl #10
   23430:	cmp	r3, r1, lsl #9
   23434:	adc	r0, r0, r0
   23438:	subcs	r3, r3, r1, lsl #9
   2343c:	cmp	r3, r1, lsl #8
   23440:	adc	r0, r0, r0
   23444:	subcs	r3, r3, r1, lsl #8
   23448:	cmp	r3, r1, lsl #7
   2344c:	adc	r0, r0, r0
   23450:	subcs	r3, r3, r1, lsl #7
   23454:	cmp	r3, r1, lsl #6
   23458:	adc	r0, r0, r0
   2345c:	subcs	r3, r3, r1, lsl #6
   23460:	cmp	r3, r1, lsl #5
   23464:	adc	r0, r0, r0
   23468:	subcs	r3, r3, r1, lsl #5
   2346c:	cmp	r3, r1, lsl #4
   23470:	adc	r0, r0, r0
   23474:	subcs	r3, r3, r1, lsl #4
   23478:	cmp	r3, r1, lsl #3
   2347c:	adc	r0, r0, r0
   23480:	subcs	r3, r3, r1, lsl #3
   23484:	cmp	r3, r1, lsl #2
   23488:	adc	r0, r0, r0
   2348c:	subcs	r3, r3, r1, lsl #2
   23490:	cmp	r3, r1, lsl #1
   23494:	adc	r0, r0, r0
   23498:	subcs	r3, r3, r1, lsl #1
   2349c:	cmp	r3, r1
   234a0:	adc	r0, r0, r0
   234a4:	subcs	r3, r3, r1
   234a8:	cmp	ip, #0
   234ac:	rsbmi	r0, r0, #0
   234b0:	bx	lr
   234b4:	teq	ip, r0
   234b8:	rsbmi	r0, r0, #0
   234bc:	bx	lr
   234c0:	movcc	r0, #0
   234c4:	asreq	r0, ip, #31
   234c8:	orreq	r0, r0, #1
   234cc:	bx	lr
   234d0:	clz	r2, r1
   234d4:	rsb	r2, r2, #31
   234d8:	cmp	ip, #0
   234dc:	lsr	r0, r3, r2
   234e0:	rsbmi	r0, r0, #0
   234e4:	bx	lr
   234e8:	cmp	r0, #0
   234ec:	mvngt	r0, #-2147483648	; 0x80000000
   234f0:	movlt	r0, #-2147483648	; 0x80000000
   234f4:	b	239fc <__aeabi_idiv0>

000234f8 <__aeabi_idivmod>:
   234f8:	cmp	r1, #0
   234fc:	beq	234e8 <.divsi3_skip_div0_test+0x208>
   23500:	push	{r0, r1, lr}
   23504:	bl	232e0 <.divsi3_skip_div0_test>
   23508:	pop	{r1, r2, lr}
   2350c:	mul	r3, r2, r0
   23510:	sub	r1, r1, r3
   23514:	bx	lr

00023518 <__aeabi_llsl>:
   23518:	subs	r3, r2, #32
   2351c:	rsb	ip, r2, #32
   23520:	lslmi	r1, r1, r2
   23524:	lslpl	r1, r0, r3
   23528:	orrmi	r1, r1, r0, lsr ip
   2352c:	lsl	r0, r0, r2
   23530:	bx	lr

00023534 <__aeabi_drsub>:
   23534:	eor	r1, r1, #-2147483648	; 0x80000000
   23538:	b	23540 <__adddf3>

0002353c <__aeabi_dsub>:
   2353c:	eor	r3, r3, #-2147483648	; 0x80000000

00023540 <__adddf3>:
   23540:	push	{r4, r5, lr}
   23544:	lsl	r4, r1, #1
   23548:	lsl	r5, r3, #1
   2354c:	teq	r4, r5
   23550:	teqeq	r0, r2
   23554:	orrsne	ip, r4, r0
   23558:	orrsne	ip, r5, r2
   2355c:	mvnsne	ip, r4, asr #21
   23560:	mvnsne	ip, r5, asr #21
   23564:	beq	23750 <__adddf3+0x210>
   23568:	lsr	r4, r4, #21
   2356c:	rsbs	r5, r4, r5, lsr #21
   23570:	rsblt	r5, r5, #0
   23574:	ble	23594 <__adddf3+0x54>
   23578:	add	r4, r4, r5
   2357c:	eor	r2, r0, r2
   23580:	eor	r3, r1, r3
   23584:	eor	r0, r2, r0
   23588:	eor	r1, r3, r1
   2358c:	eor	r2, r0, r2
   23590:	eor	r3, r1, r3
   23594:	cmp	r5, #54	; 0x36
   23598:	pophi	{r4, r5, pc}
   2359c:	tst	r1, #-2147483648	; 0x80000000
   235a0:	lsl	r1, r1, #12
   235a4:	mov	ip, #1048576	; 0x100000
   235a8:	orr	r1, ip, r1, lsr #12
   235ac:	beq	235b8 <__adddf3+0x78>
   235b0:	rsbs	r0, r0, #0
   235b4:	rsc	r1, r1, #0
   235b8:	tst	r3, #-2147483648	; 0x80000000
   235bc:	lsl	r3, r3, #12
   235c0:	orr	r3, ip, r3, lsr #12
   235c4:	beq	235d0 <__adddf3+0x90>
   235c8:	rsbs	r2, r2, #0
   235cc:	rsc	r3, r3, #0
   235d0:	teq	r4, r5
   235d4:	beq	23738 <__adddf3+0x1f8>
   235d8:	sub	r4, r4, #1
   235dc:	rsbs	lr, r5, #32
   235e0:	blt	235fc <__adddf3+0xbc>
   235e4:	lsl	ip, r2, lr
   235e8:	adds	r0, r0, r2, lsr r5
   235ec:	adc	r1, r1, #0
   235f0:	adds	r0, r0, r3, lsl lr
   235f4:	adcs	r1, r1, r3, asr r5
   235f8:	b	23618 <__adddf3+0xd8>
   235fc:	sub	r5, r5, #32
   23600:	add	lr, lr, #32
   23604:	cmp	r2, #1
   23608:	lsl	ip, r3, lr
   2360c:	orrcs	ip, ip, #2
   23610:	adds	r0, r0, r3, asr r5
   23614:	adcs	r1, r1, r3, asr #31
   23618:	and	r5, r1, #-2147483648	; 0x80000000
   2361c:	bpl	2362c <__adddf3+0xec>
   23620:	rsbs	ip, ip, #0
   23624:	rscs	r0, r0, #0
   23628:	rsc	r1, r1, #0
   2362c:	cmp	r1, #1048576	; 0x100000
   23630:	bcc	23670 <__adddf3+0x130>
   23634:	cmp	r1, #2097152	; 0x200000
   23638:	bcc	23658 <__adddf3+0x118>
   2363c:	lsrs	r1, r1, #1
   23640:	rrxs	r0, r0
   23644:	rrx	ip, ip
   23648:	add	r4, r4, #1
   2364c:	lsl	r2, r4, #21
   23650:	cmn	r2, #4194304	; 0x400000
   23654:	bcs	237b0 <__adddf3+0x270>
   23658:	cmp	ip, #-2147483648	; 0x80000000
   2365c:	lsrseq	ip, r0, #1
   23660:	adcs	r0, r0, #0
   23664:	adc	r1, r1, r4, lsl #20
   23668:	orr	r1, r1, r5
   2366c:	pop	{r4, r5, pc}
   23670:	lsls	ip, ip, #1
   23674:	adcs	r0, r0, r0
   23678:	adc	r1, r1, r1
   2367c:	tst	r1, #1048576	; 0x100000
   23680:	sub	r4, r4, #1
   23684:	bne	23658 <__adddf3+0x118>
   23688:	teq	r1, #0
   2368c:	moveq	r1, r0
   23690:	moveq	r0, #0
   23694:	clz	r3, r1
   23698:	addeq	r3, r3, #32
   2369c:	sub	r3, r3, #11
   236a0:	subs	r2, r3, #32
   236a4:	bge	236c8 <__adddf3+0x188>
   236a8:	adds	r2, r2, #12
   236ac:	ble	236c4 <__adddf3+0x184>
   236b0:	add	ip, r2, #20
   236b4:	rsb	r2, r2, #12
   236b8:	lsl	r0, r1, ip
   236bc:	lsr	r1, r1, r2
   236c0:	b	236d8 <__adddf3+0x198>
   236c4:	add	r2, r2, #20
   236c8:	rsble	ip, r2, #32
   236cc:	lsl	r1, r1, r2
   236d0:	orrle	r1, r1, r0, lsr ip
   236d4:	lslle	r0, r0, r2
   236d8:	subs	r4, r4, r3
   236dc:	addge	r1, r1, r4, lsl #20
   236e0:	orrge	r1, r1, r5
   236e4:	popge	{r4, r5, pc}
   236e8:	mvn	r4, r4
   236ec:	subs	r4, r4, #31
   236f0:	bge	2372c <__adddf3+0x1ec>
   236f4:	adds	r4, r4, #12
   236f8:	bgt	23714 <__adddf3+0x1d4>
   236fc:	add	r4, r4, #20
   23700:	rsb	r2, r4, #32
   23704:	lsr	r0, r0, r4
   23708:	orr	r0, r0, r1, lsl r2
   2370c:	orr	r1, r5, r1, lsr r4
   23710:	pop	{r4, r5, pc}
   23714:	rsb	r4, r4, #12
   23718:	rsb	r2, r4, #32
   2371c:	lsr	r0, r0, r2
   23720:	orr	r0, r0, r1, lsl r4
   23724:	mov	r1, r5
   23728:	pop	{r4, r5, pc}
   2372c:	lsr	r0, r1, r4
   23730:	mov	r1, r5
   23734:	pop	{r4, r5, pc}
   23738:	teq	r4, #0
   2373c:	eor	r3, r3, #1048576	; 0x100000
   23740:	eoreq	r1, r1, #1048576	; 0x100000
   23744:	addeq	r4, r4, #1
   23748:	subne	r5, r5, #1
   2374c:	b	235d8 <__adddf3+0x98>
   23750:	mvns	ip, r4, asr #21
   23754:	mvnsne	ip, r5, asr #21
   23758:	beq	237c0 <__adddf3+0x280>
   2375c:	teq	r4, r5
   23760:	teqeq	r0, r2
   23764:	beq	23778 <__adddf3+0x238>
   23768:	orrs	ip, r4, r0
   2376c:	moveq	r1, r3
   23770:	moveq	r0, r2
   23774:	pop	{r4, r5, pc}
   23778:	teq	r1, r3
   2377c:	movne	r1, #0
   23780:	movne	r0, #0
   23784:	popne	{r4, r5, pc}
   23788:	lsrs	ip, r4, #21
   2378c:	bne	237a0 <__adddf3+0x260>
   23790:	lsls	r0, r0, #1
   23794:	adcs	r1, r1, r1
   23798:	orrcs	r1, r1, #-2147483648	; 0x80000000
   2379c:	pop	{r4, r5, pc}
   237a0:	adds	r4, r4, #4194304	; 0x400000
   237a4:	addcc	r1, r1, #1048576	; 0x100000
   237a8:	popcc	{r4, r5, pc}
   237ac:	and	r5, r1, #-2147483648	; 0x80000000
   237b0:	orr	r1, r5, #2130706432	; 0x7f000000
   237b4:	orr	r1, r1, #15728640	; 0xf00000
   237b8:	mov	r0, #0
   237bc:	pop	{r4, r5, pc}
   237c0:	mvns	ip, r4, asr #21
   237c4:	movne	r1, r3
   237c8:	movne	r0, r2
   237cc:	mvnseq	ip, r5, asr #21
   237d0:	movne	r3, r1
   237d4:	movne	r2, r0
   237d8:	orrs	r4, r0, r1, lsl #12
   237dc:	orrseq	r5, r2, r3, lsl #12
   237e0:	teqeq	r1, r3
   237e4:	orrne	r1, r1, #524288	; 0x80000
   237e8:	pop	{r4, r5, pc}

000237ec <__aeabi_ui2d>:
   237ec:	teq	r0, #0
   237f0:	moveq	r1, #0
   237f4:	bxeq	lr
   237f8:	push	{r4, r5, lr}
   237fc:	mov	r4, #1024	; 0x400
   23800:	add	r4, r4, #50	; 0x32
   23804:	mov	r5, #0
   23808:	mov	r1, #0
   2380c:	b	23688 <__adddf3+0x148>

00023810 <__aeabi_i2d>:
   23810:	teq	r0, #0
   23814:	moveq	r1, #0
   23818:	bxeq	lr
   2381c:	push	{r4, r5, lr}
   23820:	mov	r4, #1024	; 0x400
   23824:	add	r4, r4, #50	; 0x32
   23828:	ands	r5, r0, #-2147483648	; 0x80000000
   2382c:	rsbmi	r0, r0, #0
   23830:	mov	r1, #0
   23834:	b	23688 <__adddf3+0x148>

00023838 <__aeabi_f2d>:
   23838:	lsls	r2, r0, #1
   2383c:	asr	r1, r2, #3
   23840:	rrx	r1, r1
   23844:	lsl	r0, r2, #28
   23848:	andsne	r3, r2, #-16777216	; 0xff000000
   2384c:	teqne	r3, #-16777216	; 0xff000000
   23850:	eorne	r1, r1, #939524096	; 0x38000000
   23854:	bxne	lr
   23858:	teq	r2, #0
   2385c:	teqne	r3, #-16777216	; 0xff000000
   23860:	bxeq	lr
   23864:	push	{r4, r5, lr}
   23868:	mov	r4, #896	; 0x380
   2386c:	and	r5, r1, #-2147483648	; 0x80000000
   23870:	bic	r1, r1, #-2147483648	; 0x80000000
   23874:	b	23688 <__adddf3+0x148>

00023878 <__aeabi_ul2d>:
   23878:	orrs	r2, r0, r1
   2387c:	bxeq	lr
   23880:	push	{r4, r5, lr}
   23884:	mov	r5, #0
   23888:	b	238a8 <__aeabi_l2d+0x1c>

0002388c <__aeabi_l2d>:
   2388c:	orrs	r2, r0, r1
   23890:	bxeq	lr
   23894:	push	{r4, r5, lr}
   23898:	ands	r5, r1, #-2147483648	; 0x80000000
   2389c:	bpl	238a8 <__aeabi_l2d+0x1c>
   238a0:	rsbs	r0, r0, #0
   238a4:	rsc	r1, r1, #0
   238a8:	mov	r4, #1024	; 0x400
   238ac:	add	r4, r4, #50	; 0x32
   238b0:	lsrs	ip, r1, #22
   238b4:	beq	2362c <__adddf3+0xec>
   238b8:	mov	r2, #3
   238bc:	lsrs	ip, ip, #3
   238c0:	addne	r2, r2, #3
   238c4:	lsrs	ip, ip, #3
   238c8:	addne	r2, r2, #3
   238cc:	add	r2, r2, ip, lsr #3
   238d0:	rsb	r3, r2, #32
   238d4:	lsl	ip, r0, r3
   238d8:	lsr	r0, r0, r2
   238dc:	orr	r0, r0, r1, lsl r3
   238e0:	lsr	r1, r1, r2
   238e4:	add	r4, r4, r2
   238e8:	b	2362c <__adddf3+0xec>

000238ec <__aeabi_ldivmod>:
   238ec:	cmp	r3, #0
   238f0:	cmpeq	r2, #0
   238f4:	bne	23918 <__aeabi_ldivmod+0x2c>
   238f8:	cmp	r1, #0
   238fc:	movlt	r1, #-2147483648	; 0x80000000
   23900:	movlt	r0, #0
   23904:	blt	23914 <__aeabi_ldivmod+0x28>
   23908:	cmpeq	r0, #0
   2390c:	mvnne	r1, #-2147483648	; 0x80000000
   23910:	mvnne	r0, #0
   23914:	b	239fc <__aeabi_idiv0>
   23918:	sub	sp, sp, #8
   2391c:	push	{sp, lr}
   23920:	cmp	r1, #0
   23924:	blt	23944 <__aeabi_ldivmod+0x58>
   23928:	cmp	r3, #0
   2392c:	blt	23978 <__aeabi_ldivmod+0x8c>
   23930:	bl	23a80 <__udivmoddi4>
   23934:	ldr	lr, [sp, #4]
   23938:	add	sp, sp, #8
   2393c:	pop	{r2, r3}
   23940:	bx	lr
   23944:	rsbs	r0, r0, #0
   23948:	sbc	r1, r1, r1, lsl #1
   2394c:	cmp	r3, #0
   23950:	blt	2399c <__aeabi_ldivmod+0xb0>
   23954:	bl	23a80 <__udivmoddi4>
   23958:	ldr	lr, [sp, #4]
   2395c:	add	sp, sp, #8
   23960:	pop	{r2, r3}
   23964:	rsbs	r0, r0, #0
   23968:	sbc	r1, r1, r1, lsl #1
   2396c:	rsbs	r2, r2, #0
   23970:	sbc	r3, r3, r3, lsl #1
   23974:	bx	lr
   23978:	rsbs	r2, r2, #0
   2397c:	sbc	r3, r3, r3, lsl #1
   23980:	bl	23a80 <__udivmoddi4>
   23984:	ldr	lr, [sp, #4]
   23988:	add	sp, sp, #8
   2398c:	pop	{r2, r3}
   23990:	rsbs	r0, r0, #0
   23994:	sbc	r1, r1, r1, lsl #1
   23998:	bx	lr
   2399c:	rsbs	r2, r2, #0
   239a0:	sbc	r3, r3, r3, lsl #1
   239a4:	bl	23a80 <__udivmoddi4>
   239a8:	ldr	lr, [sp, #4]
   239ac:	add	sp, sp, #8
   239b0:	pop	{r2, r3}
   239b4:	rsbs	r2, r2, #0
   239b8:	sbc	r3, r3, r3, lsl #1
   239bc:	bx	lr

000239c0 <__aeabi_uldivmod>:
   239c0:	cmp	r3, #0
   239c4:	cmpeq	r2, #0
   239c8:	bne	239e0 <__aeabi_uldivmod+0x20>
   239cc:	cmp	r1, #0
   239d0:	cmpeq	r0, #0
   239d4:	mvnne	r1, #0
   239d8:	mvnne	r0, #0
   239dc:	b	239fc <__aeabi_idiv0>
   239e0:	sub	sp, sp, #8
   239e4:	push	{sp, lr}
   239e8:	bl	23a80 <__udivmoddi4>
   239ec:	ldr	lr, [sp, #4]
   239f0:	add	sp, sp, #8
   239f4:	pop	{r2, r3}
   239f8:	bx	lr

000239fc <__aeabi_idiv0>:
   239fc:	push	{r1, lr}
   23a00:	mov	r0, #8
   23a04:	bl	3d88 <raise@plt>
   23a08:	pop	{r1, pc}

00023a0c <__aeabi_d2lz>:
   23a0c:	vmov	d7, r0, r1
   23a10:	vcmpe.f64	d7, #0.0
   23a14:	vmrs	APSR_nzcv, fpscr
   23a18:	bmi	23a20 <__aeabi_d2lz+0x14>
   23a1c:	b	23a38 <__aeabi_d2ulz>
   23a20:	push	{r4, lr}
   23a24:	eor	r1, r1, #-2147483648	; 0x80000000
   23a28:	bl	23a38 <__aeabi_d2ulz>
   23a2c:	rsbs	r0, r0, #0
   23a30:	rsc	r1, r1, #0
   23a34:	pop	{r4, pc}

00023a38 <__aeabi_d2ulz>:
   23a38:	vmov	d7, r0, r1
   23a3c:	vldr	d6, [pc, #44]	; 23a70 <__aeabi_d2ulz+0x38>
   23a40:	vldr	d5, [pc, #48]	; 23a78 <__aeabi_d2ulz+0x40>
   23a44:	mov	r0, #0
   23a48:	vmul.f64	d6, d7, d6
   23a4c:	vcvt.u32.f64	s12, d6
   23a50:	vcvt.f64.u32	d4, s12
   23a54:	vmov	r1, s12
   23a58:	vmls.f64	d7, d4, d5
   23a5c:	vcvt.u32.f64	s14, d7
   23a60:	vmov	r3, s14
   23a64:	orr	r0, r0, r3
   23a68:	bx	lr
   23a6c:	nop			; (mov r0, r0)
   23a70:	.word	0x00000000
   23a74:	.word	0x3df00000
   23a78:	.word	0x00000000
   23a7c:	.word	0x41f00000

00023a80 <__udivmoddi4>:
   23a80:	cmp	r1, r3
   23a84:	push	{r4, r5, r6, r7, r8, r9, lr}
   23a88:	cmpeq	r0, r2
   23a8c:	mov	r4, r0
   23a90:	mov	r5, r1
   23a94:	ldr	r9, [sp, #28]
   23a98:	movcc	r0, #0
   23a9c:	movcc	r1, #0
   23aa0:	bcc	23b98 <__udivmoddi4+0x118>
   23aa4:	cmp	r3, #0
   23aa8:	clzeq	ip, r2
   23aac:	clzne	ip, r3
   23ab0:	addeq	ip, ip, #32
   23ab4:	cmp	r5, #0
   23ab8:	clzeq	r1, r4
   23abc:	addeq	r1, r1, #32
   23ac0:	clzne	r1, r5
   23ac4:	sub	ip, ip, r1
   23ac8:	sub	lr, ip, #32
   23acc:	lsl	r7, r3, ip
   23ad0:	rsb	r8, ip, #32
   23ad4:	orr	r7, r7, r2, lsl lr
   23ad8:	orr	r7, r7, r2, lsr r8
   23adc:	lsl	r6, r2, ip
   23ae0:	cmp	r5, r7
   23ae4:	cmpeq	r4, r6
   23ae8:	movcc	r0, #0
   23aec:	movcc	r1, #0
   23af0:	bcc	23b0c <__udivmoddi4+0x8c>
   23af4:	mov	r3, #1
   23af8:	subs	r4, r4, r6
   23afc:	lsl	r1, r3, lr
   23b00:	lsl	r0, r3, ip
   23b04:	orr	r1, r1, r3, lsr r8
   23b08:	sbc	r5, r5, r7
   23b0c:	cmp	ip, #0
   23b10:	beq	23b98 <__udivmoddi4+0x118>
   23b14:	lsrs	r3, r7, #1
   23b18:	rrx	r2, r6
   23b1c:	mov	r6, ip
   23b20:	b	23b44 <__udivmoddi4+0xc4>
   23b24:	subs	r4, r4, r2
   23b28:	sbc	r5, r5, r3
   23b2c:	adds	r4, r4, r4
   23b30:	adc	r5, r5, r5
   23b34:	adds	r4, r4, #1
   23b38:	adc	r5, r5, #0
   23b3c:	subs	r6, r6, #1
   23b40:	beq	23b60 <__udivmoddi4+0xe0>
   23b44:	cmp	r5, r3
   23b48:	cmpeq	r4, r2
   23b4c:	bcs	23b24 <__udivmoddi4+0xa4>
   23b50:	adds	r4, r4, r4
   23b54:	adc	r5, r5, r5
   23b58:	subs	r6, r6, #1
   23b5c:	bne	23b44 <__udivmoddi4+0xc4>
   23b60:	lsr	r6, r4, ip
   23b64:	lsr	r7, r5, ip
   23b68:	orr	r6, r6, r5, lsl r8
   23b6c:	adds	r2, r0, r4
   23b70:	orr	r6, r6, r5, lsr lr
   23b74:	adc	r3, r1, r5
   23b78:	lsl	r1, r7, ip
   23b7c:	orr	r1, r1, r6, lsl lr
   23b80:	lsl	r0, r6, ip
   23b84:	orr	r1, r1, r6, lsr r8
   23b88:	subs	r0, r2, r0
   23b8c:	mov	r4, r6
   23b90:	mov	r5, r7
   23b94:	sbc	r1, r3, r1
   23b98:	cmp	r9, #0
   23b9c:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   23ba0:	strd	r4, [r9]
   23ba4:	pop	{r4, r5, r6, r7, r8, r9, pc}

Disassembly of section .fini:

00023ba8 <_fini>:
   23ba8:	push	{r3, lr}
   23bac:	pop	{r3, pc}
