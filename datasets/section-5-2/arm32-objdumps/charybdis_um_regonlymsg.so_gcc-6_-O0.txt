
../repos/charybdis/modules/.libs/um_regonlymsg.so:     file format elf32-littlearm


Disassembly of section .init:

00000490 <_init>:
 490:	push	{r3, lr}
 494:	bl	510 <call_weak_fn>
 498:	pop	{r3, pc}

Disassembly of section .plt:

0000049c <.plt>:
 49c:	push	{lr}		; (str lr, [sp, #-4]!)
 4a0:	ldr	lr, [pc, #4]	; 4ac <.plt+0x10>
 4a4:	add	lr, pc, lr
 4a8:	ldr	pc, [lr, #8]!
 4ac:	.word	0x00010b54

000004b0 <__cxa_finalize@plt>:
 4b0:	add	ip, pc, #0, 12
 4b4:	add	ip, ip, #16, 20	; 0x10000
 4b8:	ldr	pc, [ip, #2900]!	; 0xb54

000004bc <ierror@plt>:
 4bc:	add	ip, pc, #0, 12
 4c0:	add	ip, ip, #16, 20	; 0x10000
 4c4:	ldr	pc, [ip, #2892]!	; 0xb4c

000004c8 <find_umode_slot@plt>:
 4c8:	add	ip, pc, #0, 12
 4cc:	add	ip, ip, #16, 20	; 0x10000
 4d0:	ldr	pc, [ip, #2884]!	; 0xb44

000004d4 <__gmon_start__@plt>:
 4d4:	add	ip, pc, #0, 12
 4d8:	add	ip, ip, #16, 20	; 0x10000
 4dc:	ldr	pc, [ip, #2876]!	; 0xb3c

000004e0 <sendto_one_numeric@plt>:
 4e0:	add	ip, pc, #0, 12
 4e4:	add	ip, ip, #16, 20	; 0x10000
 4e8:	ldr	pc, [ip, #2868]!	; 0xb34

000004ec <snprintf@plt>:
 4ec:	add	ip, pc, #0, 12
 4f0:	add	ip, ip, #16, 20	; 0x10000
 4f4:	ldr	pc, [ip, #2860]!	; 0xb2c

000004f8 <__assert_fail@plt>:
 4f8:	add	ip, pc, #0, 12
 4fc:	add	ip, ip, #16, 20	; 0x10000
 500:	ldr	pc, [ip, #2852]!	; 0xb24

00000504 <construct_umodebuf@plt>:
 504:	add	ip, pc, #0, 12
 508:	add	ip, ip, #16, 20	; 0x10000
 50c:	ldr	pc, [ip, #2844]!	; 0xb1c

Disassembly of section .text:

00000510 <call_weak_fn>:
 510:	ldr	r3, [pc, #20]	; 52c <call_weak_fn+0x1c>
 514:	ldr	r2, [pc, #20]	; 530 <call_weak_fn+0x20>
 518:	add	r3, pc, r3
 51c:	ldr	r2, [r3, r2]
 520:	cmp	r2, #0
 524:	bxeq	lr
 528:	b	4d4 <__gmon_start__@plt>
 52c:	.word	0x00010ae0
 530:	.word	0x00000038

00000534 <deregister_tm_clones>:
 534:	ldr	r3, [pc, #52]	; 570 <deregister_tm_clones+0x3c>
 538:	ldr	r0, [pc, #52]	; 574 <deregister_tm_clones+0x40>
 53c:	add	r3, pc, r3
 540:	add	r0, pc, r0
 544:	add	r3, r3, #3
 548:	sub	r3, r3, r0
 54c:	cmp	r3, #6
 550:	ldr	r3, [pc, #32]	; 578 <deregister_tm_clones+0x44>
 554:	add	r3, pc, r3
 558:	bxls	lr
 55c:	ldr	r2, [pc, #24]	; 57c <deregister_tm_clones+0x48>
 560:	ldr	r3, [r3, r2]
 564:	cmp	r3, #0
 568:	bxeq	lr
 56c:	bx	r3
 570:	.word	0x00010b50
 574:	.word	0x00010b4c
 578:	.word	0x00010aa4
 57c:	.word	0x00000030

00000580 <register_tm_clones>:
 580:	ldr	r1, [pc, #56]	; 5c0 <register_tm_clones+0x40>
 584:	ldr	r0, [pc, #56]	; 5c4 <register_tm_clones+0x44>
 588:	add	r1, pc, r1
 58c:	add	r0, pc, r0
 590:	sub	r1, r1, r0
 594:	ldr	r3, [pc, #44]	; 5c8 <register_tm_clones+0x48>
 598:	asr	r1, r1, #2
 59c:	add	r3, pc, r3
 5a0:	add	r1, r1, r1, lsr #31
 5a4:	asrs	r1, r1, #1
 5a8:	bxeq	lr
 5ac:	ldr	r2, [pc, #24]	; 5cc <register_tm_clones+0x4c>
 5b0:	ldr	r3, [r3, r2]
 5b4:	cmp	r3, #0
 5b8:	bxeq	lr
 5bc:	bx	r3
 5c0:	.word	0x00010b04
 5c4:	.word	0x00010b00
 5c8:	.word	0x00010a5c
 5cc:	.word	0x00000040

000005d0 <__do_global_dtors_aux>:
 5d0:	ldr	r3, [pc, #76]	; 624 <__do_global_dtors_aux+0x54>
 5d4:	ldr	r2, [pc, #76]	; 628 <__do_global_dtors_aux+0x58>
 5d8:	add	r3, pc, r3
 5dc:	add	r2, pc, r2
 5e0:	ldrb	r3, [r3]
 5e4:	cmp	r3, #0
 5e8:	bxne	lr
 5ec:	ldr	r3, [pc, #56]	; 62c <__do_global_dtors_aux+0x5c>
 5f0:	push	{r4, lr}
 5f4:	ldr	r3, [r2, r3]
 5f8:	cmp	r3, #0
 5fc:	beq	60c <__do_global_dtors_aux+0x3c>
 600:	ldr	r3, [pc, #40]	; 630 <__do_global_dtors_aux+0x60>
 604:	ldr	r0, [pc, r3]
 608:	bl	4b0 <__cxa_finalize@plt>
 60c:	bl	534 <deregister_tm_clones>
 610:	ldr	r3, [pc, #28]	; 634 <__do_global_dtors_aux+0x64>
 614:	mov	r2, #1
 618:	add	r3, pc, r3
 61c:	strb	r2, [r3]
 620:	pop	{r4, pc}
 624:	.word	0x00010ab4
 628:	.word	0x00010a1c
 62c:	.word	0x0000002c
 630:	.word	0x00010a38
 634:	.word	0x00010a74

00000638 <frame_dummy>:
 638:	ldr	r0, [pc, #56]	; 678 <frame_dummy+0x40>
 63c:	ldr	r3, [pc, #56]	; 67c <frame_dummy+0x44>
 640:	add	r0, pc, r0
 644:	ldr	r2, [r0]
 648:	add	r3, pc, r3
 64c:	cmp	r2, #0
 650:	bne	658 <frame_dummy+0x20>
 654:	b	580 <register_tm_clones>
 658:	ldr	r2, [pc, #32]	; 680 <frame_dummy+0x48>
 65c:	ldr	r3, [r3, r2]
 660:	cmp	r3, #0
 664:	beq	654 <frame_dummy+0x1c>
 668:	push	{r4, lr}
 66c:	blx	r3
 670:	pop	{r4, lr}
 674:	b	580 <register_tm_clones>
 678:	.word	0x000108b4
 67c:	.word	0x000109b0
 680:	.word	0x0000003c

00000684 <rb_dlinkFind>:
 684:	push	{fp, lr}
 688:	add	fp, sp, #4
 68c:	sub	sp, sp, #16
 690:	str	r0, [fp, #-16]
 694:	str	r1, [fp, #-20]	; 0xffffffec
 698:	ldr	r3, [fp, #-20]	; 0xffffffec
 69c:	cmp	r3, #0
 6a0:	bne	6c4 <rb_dlinkFind+0x40>
 6a4:	ldr	r3, [pc, #152]	; 744 <rb_dlinkFind+0xc0>
 6a8:	add	r3, pc, r3
 6ac:	ldr	r2, [pc, #148]	; 748 <rb_dlinkFind+0xc4>
 6b0:	ldr	r1, [pc, #148]	; 74c <rb_dlinkFind+0xc8>
 6b4:	add	r1, pc, r1
 6b8:	ldr	r0, [pc, #144]	; 750 <rb_dlinkFind+0xcc>
 6bc:	add	r0, pc, r0
 6c0:	bl	4f8 <__assert_fail@plt>
 6c4:	ldr	r3, [fp, #-16]
 6c8:	cmp	r3, #0
 6cc:	bne	6f0 <rb_dlinkFind+0x6c>
 6d0:	ldr	r3, [pc, #124]	; 754 <rb_dlinkFind+0xd0>
 6d4:	add	r3, pc, r3
 6d8:	ldr	r2, [pc, #120]	; 758 <rb_dlinkFind+0xd4>
 6dc:	ldr	r1, [pc, #120]	; 75c <rb_dlinkFind+0xd8>
 6e0:	add	r1, pc, r1
 6e4:	ldr	r0, [pc, #116]	; 760 <rb_dlinkFind+0xdc>
 6e8:	add	r0, pc, r0
 6ec:	bl	4f8 <__assert_fail@plt>
 6f0:	ldr	r3, [fp, #-20]	; 0xffffffec
 6f4:	ldr	r3, [r3]
 6f8:	str	r3, [fp, #-8]
 6fc:	b	728 <rb_dlinkFind+0xa4>
 700:	ldr	r3, [fp, #-8]
 704:	ldr	r2, [r3]
 708:	ldr	r3, [fp, #-16]
 70c:	cmp	r2, r3
 710:	bne	71c <rb_dlinkFind+0x98>
 714:	ldr	r3, [fp, #-8]
 718:	b	738 <rb_dlinkFind+0xb4>
 71c:	ldr	r3, [fp, #-8]
 720:	ldr	r3, [r3, #8]
 724:	str	r3, [fp, #-8]
 728:	ldr	r3, [fp, #-8]
 72c:	cmp	r3, #0
 730:	bne	700 <rb_dlinkFind+0x7c>
 734:	mov	r3, #0
 738:	mov	r0, r3
 73c:	sub	sp, fp, #4
 740:	pop	{fp, pc}
 744:	.word	0x00000520
 748:	.word	0x00000136
 74c:	.word	0x000003f4
 750:	.word	0x00000408
 754:	.word	0x000004f4
 758:	.word	0x00000137
 75c:	.word	0x000003c8
 760:	.word	0x000003ec

00000764 <um_regonlymsg_modinit>:
 764:	push	{r4, r5, fp, lr}
 768:	add	fp, sp, #12
 76c:	ldr	r4, [pc, #84]	; 7c8 <um_regonlymsg_modinit+0x64>
 770:	add	r4, pc, r4
 774:	bl	4c8 <find_umode_slot@plt>
 778:	mov	r3, r0
 77c:	mov	r2, r3
 780:	ldr	r3, [pc, #68]	; 7cc <um_regonlymsg_modinit+0x68>
 784:	ldr	r3, [r4, r3]
 788:	str	r2, [r3, #328]	; 0x148
 78c:	bl	504 <construct_umodebuf@plt>
 790:	ldr	r3, [pc, #52]	; 7cc <um_regonlymsg_modinit+0x68>
 794:	ldr	r3, [r4, r3]
 798:	ldr	r3, [r3, #328]	; 0x148
 79c:	cmp	r3, #0
 7a0:	bne	7bc <um_regonlymsg_modinit+0x58>
 7a4:	ldr	r3, [pc, #36]	; 7d0 <um_regonlymsg_modinit+0x6c>
 7a8:	add	r3, pc, r3
 7ac:	mov	r0, r3
 7b0:	bl	4bc <ierror@plt>
 7b4:	mvn	r3, #0
 7b8:	b	7c0 <um_regonlymsg_modinit+0x5c>
 7bc:	mov	r3, #0
 7c0:	mov	r0, r3
 7c4:	pop	{r4, r5, fp, pc}
 7c8:	.word	0x00010888
 7cc:	.word	0x00000034
 7d0:	.word	0x0000033c

000007d4 <um_regonlymsg_moddeinit>:
 7d4:	push	{fp, lr}
 7d8:	add	fp, sp, #4
 7dc:	ldr	r2, [pc, #28]	; 800 <um_regonlymsg_moddeinit+0x2c>
 7e0:	add	r2, pc, r2
 7e4:	ldr	r3, [pc, #24]	; 804 <um_regonlymsg_moddeinit+0x30>
 7e8:	ldr	r3, [r2, r3]
 7ec:	mov	r2, #0
 7f0:	str	r2, [r3, #328]	; 0x148
 7f4:	bl	504 <construct_umodebuf@plt>
 7f8:	nop			; (mov r0, r0)
 7fc:	pop	{fp, pc}
 800:	.word	0x00010818
 804:	.word	0x00000034

00000808 <allow_message>:
 808:	push	{r4, r5, fp, lr}
 80c:	add	fp, sp, #12
 810:	sub	sp, sp, #8
 814:	str	r0, [fp, #-16]
 818:	str	r1, [fp, #-20]	; 0xffffffec
 81c:	ldr	r3, [pc, #264]	; 92c <allow_message+0x124>
 820:	add	r3, pc, r3
 824:	ldr	r2, [fp, #-20]	; 0xffffffec
 828:	ldrd	r0, [r2, #64]	; 0x40
 82c:	mov	r4, #8192	; 0x2000
 830:	mov	r5, #0
 834:	and	r0, r0, r4
 838:	and	r1, r1, r5
 83c:	orrs	r2, r0, r1
 840:	beq	854 <allow_message+0x4c>
 844:	ldr	r2, [fp, #-20]	; 0xffffffec
 848:	ldrh	r2, [r2, #80]	; 0x50
 84c:	cmp	r2, #64	; 0x40
 850:	beq	85c <allow_message+0x54>
 854:	mov	r3, #1
 858:	b	920 <allow_message+0x118>
 85c:	ldr	r2, [fp, #-20]	; 0xffffffec
 860:	ldr	r2, [r2, #56]	; 0x38
 864:	ldr	r1, [pc, #196]	; 930 <allow_message+0x128>
 868:	ldr	r1, [r3, r1]
 86c:	ldr	r1, [r1, #328]	; 0x148
 870:	and	r2, r2, r1
 874:	ldr	r1, [pc, #180]	; 930 <allow_message+0x128>
 878:	ldr	r3, [r3, r1]
 87c:	ldr	r3, [r3, #328]	; 0x148
 880:	cmp	r2, r3
 884:	beq	890 <allow_message+0x88>
 888:	mov	r3, #1
 88c:	b	920 <allow_message+0x118>
 890:	ldr	r3, [fp, #-16]
 894:	ldrh	r3, [r3, #80]	; 0x50
 898:	cmp	r3, #32
 89c:	bne	8a8 <allow_message+0xa0>
 8a0:	mov	r3, #1
 8a4:	b	920 <allow_message+0x118>
 8a8:	ldr	r3, [fp, #-16]
 8ac:	ldr	r3, [r3, #56]	; 0x38
 8b0:	and	r3, r3, #4096	; 0x1000
 8b4:	cmp	r3, #0
 8b8:	beq	8c4 <allow_message+0xbc>
 8bc:	mov	r3, #1
 8c0:	b	920 <allow_message+0x118>
 8c4:	ldr	r2, [fp, #-16]
 8c8:	ldr	r3, [fp, #-20]	; 0xffffffec
 8cc:	cmp	r2, r3
 8d0:	beq	8f8 <allow_message+0xf0>
 8d4:	ldr	r3, [fp, #-20]	; 0xffffffec
 8d8:	ldr	r3, [r3, #432]	; 0x1b0
 8dc:	add	r3, r3, #316	; 0x13c
 8e0:	mov	r1, r3
 8e4:	ldr	r0, [fp, #-16]
 8e8:	bl	684 <rb_dlinkFind>
 8ec:	mov	r3, r0
 8f0:	cmp	r3, #0
 8f4:	beq	900 <allow_message+0xf8>
 8f8:	mov	r3, #1
 8fc:	b	920 <allow_message+0x118>
 900:	ldr	r3, [fp, #-16]
 904:	ldr	r3, [r3, #24]
 908:	ldrb	r3, [r3, #40]	; 0x28
 90c:	cmp	r3, #0
 910:	beq	91c <allow_message+0x114>
 914:	mov	r3, #1
 918:	b	920 <allow_message+0x118>
 91c:	mov	r3, #0
 920:	mov	r0, r3
 924:	sub	sp, fp, #12
 928:	pop	{r4, r5, fp, pc}
 92c:	.word	0x000107d8
 930:	.word	0x00000034

00000934 <h_hdl_invite>:
 934:	push	{fp, lr}
 938:	add	fp, sp, #4
 93c:	sub	sp, sp, #24
 940:	str	r0, [fp, #-24]	; 0xffffffe8
 944:	ldr	r3, [fp, #-24]	; 0xffffffe8
 948:	str	r3, [fp, #-8]
 94c:	ldr	r3, [fp, #-8]
 950:	ldr	r3, [r3]
 954:	str	r3, [fp, #-12]
 958:	ldr	r3, [fp, #-8]
 95c:	ldr	r3, [r3, #12]
 960:	str	r3, [fp, #-16]
 964:	ldr	r3, [fp, #-8]
 968:	ldr	r3, [r3, #16]
 96c:	cmp	r3, #0
 970:	bne	9cc <h_hdl_invite+0x98>
 974:	ldr	r1, [fp, #-16]
 978:	ldr	r0, [fp, #-12]
 97c:	bl	808 <allow_message>
 980:	mov	r3, r0
 984:	cmp	r3, #0
 988:	bne	9d4 <h_hdl_invite+0xa0>
 98c:	ldr	r3, [fp, #-16]
 990:	add	r3, r3, #88	; 0x58
 994:	ldr	r2, [pc, #68]	; 9e0 <h_hdl_invite+0xac>
 998:	add	r2, pc, r2
 99c:	mov	r1, #512	; 0x200
 9a0:	ldr	r0, [pc, #60]	; 9e4 <h_hdl_invite+0xb0>
 9a4:	add	r0, pc, r0
 9a8:	bl	4ec <snprintf@plt>
 9ac:	ldr	r3, [fp, #-8]
 9b0:	ldr	r2, [pc, #48]	; 9e8 <h_hdl_invite+0xb4>
 9b4:	str	r2, [r3, #16]
 9b8:	ldr	r3, [fp, #-8]
 9bc:	ldr	r2, [pc, #40]	; 9ec <h_hdl_invite+0xb8>
 9c0:	add	r2, pc, r2
 9c4:	str	r2, [r3, #28]
 9c8:	b	9d8 <h_hdl_invite+0xa4>
 9cc:	nop			; (mov r0, r0)
 9d0:	b	9d8 <h_hdl_invite+0xa4>
 9d4:	nop			; (mov r0, r0)
 9d8:	sub	sp, fp, #4
 9dc:	pop	{fp, pc}
 9e0:	.word	0x000001e0
 9e4:	.word	0x000106ec
 9e8:	.word	0x000001e6
 9ec:	.word	0x000106d0

000009f0 <h_hdl_privmsg_user>:
 9f0:	push	{fp, lr}
 9f4:	add	fp, sp, #4
 9f8:	sub	sp, sp, #24
 9fc:	str	r0, [fp, #-24]	; 0xffffffe8
 a00:	ldr	r3, [fp, #-24]	; 0xffffffe8
 a04:	str	r3, [fp, #-8]
 a08:	ldr	r3, [fp, #-8]
 a0c:	ldr	r3, [r3, #4]
 a10:	str	r3, [fp, #-12]
 a14:	ldr	r3, [fp, #-8]
 a18:	ldr	r3, [r3, #8]
 a1c:	str	r3, [fp, #-16]
 a20:	ldr	r3, [fp, #-8]
 a24:	ldr	r3, [r3, #16]
 a28:	cmp	r3, #0
 a2c:	bne	a84 <h_hdl_privmsg_user+0x94>
 a30:	ldr	r1, [fp, #-16]
 a34:	ldr	r0, [fp, #-12]
 a38:	bl	808 <allow_message>
 a3c:	mov	r3, r0
 a40:	cmp	r3, #0
 a44:	bne	a8c <h_hdl_privmsg_user+0x9c>
 a48:	ldr	r3, [fp, #-8]
 a4c:	ldr	r3, [r3]
 a50:	cmp	r3, #0
 a54:	beq	a94 <h_hdl_privmsg_user+0xa4>
 a58:	ldr	r3, [fp, #-16]
 a5c:	add	r3, r3, #88	; 0x58
 a60:	ldr	r2, [pc, #56]	; aa0 <h_hdl_privmsg_user+0xb0>
 a64:	add	r2, pc, r2
 a68:	ldr	r1, [pc, #52]	; aa4 <h_hdl_privmsg_user+0xb4>
 a6c:	ldr	r0, [fp, #-12]
 a70:	bl	4e0 <sendto_one_numeric@plt>
 a74:	ldr	r3, [fp, #-8]
 a78:	ldr	r2, [pc, #36]	; aa4 <h_hdl_privmsg_user+0xb4>
 a7c:	str	r2, [r3, #16]
 a80:	b	a98 <h_hdl_privmsg_user+0xa8>
 a84:	nop			; (mov r0, r0)
 a88:	b	a98 <h_hdl_privmsg_user+0xa8>
 a8c:	nop			; (mov r0, r0)
 a90:	b	a98 <h_hdl_privmsg_user+0xa8>
 a94:	nop			; (mov r0, r0)
 a98:	sub	sp, fp, #4
 a9c:	pop	{fp, pc}
 aa0:	.word	0x00000114
 aa4:	.word	0x000001e6

Disassembly of section .fini:

00000aa8 <_fini>:
 aa8:	push	{r3, lr}
 aac:	pop	{r3, pc}
