
../repos/sgerbino-table-2fdd8d0/bin/table_sort_test:     file format elf32-littlearm


Disassembly of section .init:

00011b48 <.init>:
   11b48:	push	{r3, lr}
   11b4c:	bl	11fe0 <_start@@Base+0x3c>
   11b50:	pop	{r3, pc}

Disassembly of section .plt:

00011b54 <calloc@plt-0x14>:
   11b54:	push	{lr}		; (str lr, [sp, #-4]!)
   11b58:	ldr	lr, [pc, #4]	; 11b64 <calloc@plt-0x4>
   11b5c:	add	lr, pc, lr
   11b60:	ldr	pc, [lr, #8]!
   11b64:	muleq	r1, ip, r4

00011b68 <calloc@plt>:
   11b68:	add	ip, pc, #0, 12
   11b6c:	add	ip, ip, #77824	; 0x13000
   11b70:	ldr	pc, [ip, #1180]!	; 0x49c

00011b74 <raise@plt>:
   11b74:	add	ip, pc, #0, 12
   11b78:	add	ip, ip, #77824	; 0x13000
   11b7c:	ldr	pc, [ip, #1172]!	; 0x494

00011b80 <strcmp@plt>:
   11b80:	add	ip, pc, #0, 12
   11b84:	add	ip, ip, #77824	; 0x13000
   11b88:	ldr	pc, [ip, #1164]!	; 0x48c

00011b8c <printf@plt>:
   11b8c:	add	ip, pc, #0, 12
   11b90:	add	ip, ip, #77824	; 0x13000
   11b94:	ldr	pc, [ip, #1156]!	; 0x484

00011b98 <free@plt>:
   11b98:	add	ip, pc, #0, 12
   11b9c:	add	ip, ip, #77824	; 0x13000
   11ba0:	ldr	pc, [ip, #1148]!	; 0x47c

00011ba4 <time@plt>:
   11ba4:	add	ip, pc, #0, 12
   11ba8:	add	ip, ip, #77824	; 0x13000
   11bac:	ldr	pc, [ip, #1140]!	; 0x474

00011bb0 <realloc@plt>:
   11bb0:	add	ip, pc, #0, 12
   11bb4:	add	ip, ip, #77824	; 0x13000
   11bb8:	ldr	pc, [ip, #1132]!	; 0x46c

00011bbc <strcpy@plt>:
   11bbc:	add	ip, pc, #0, 12
   11bc0:	add	ip, ip, #77824	; 0x13000
   11bc4:	ldr	pc, [ip, #1124]!	; 0x464

00011bc8 <puts@plt>:
   11bc8:	add	ip, pc, #0, 12
   11bcc:	add	ip, ip, #77824	; 0x13000
   11bd0:	ldr	pc, [ip, #1116]!	; 0x45c

00011bd4 <malloc@plt>:
   11bd4:	add	ip, pc, #0, 12
   11bd8:	add	ip, ip, #77824	; 0x13000
   11bdc:	ldr	pc, [ip, #1108]!	; 0x454

00011be0 <__libc_start_main@plt>:
   11be0:	add	ip, pc, #0, 12
   11be4:	add	ip, ip, #77824	; 0x13000
   11be8:	ldr	pc, [ip, #1100]!	; 0x44c

00011bec <__gmon_start__@plt>:
   11bec:	add	ip, pc, #0, 12
   11bf0:	add	ip, ip, #77824	; 0x13000
   11bf4:	ldr	pc, [ip, #1092]!	; 0x444

00011bf8 <strlen@plt>:
   11bf8:	add	ip, pc, #0, 12
   11bfc:	add	ip, ip, #77824	; 0x13000
   11c00:	ldr	pc, [ip, #1084]!	; 0x43c

00011c04 <srand@plt>:
   11c04:	add	ip, pc, #0, 12
   11c08:	add	ip, ip, #77824	; 0x13000
   11c0c:	ldr	pc, [ip, #1076]!	; 0x434

00011c10 <snprintf@plt>:
   11c10:	add	ip, pc, #0, 12
   11c14:	add	ip, ip, #77824	; 0x13000
   11c18:	ldr	pc, [ip, #1068]!	; 0x42c

00011c1c <__isoc99_sscanf@plt>:
   11c1c:	add	ip, pc, #0, 12
   11c20:	add	ip, ip, #77824	; 0x13000
   11c24:	ldr	pc, [ip, #1060]!	; 0x424

00011c28 <rand@plt>:
   11c28:	add	ip, pc, #0, 12
   11c2c:	add	ip, ip, #77824	; 0x13000
   11c30:	ldr	pc, [ip, #1052]!	; 0x41c

00011c34 <abort@plt>:
   11c34:	add	ip, pc, #0, 12
   11c38:	add	ip, ip, #77824	; 0x13000
   11c3c:	ldr	pc, [ip, #1044]!	; 0x414

Disassembly of section .text:

00011c40 <main@@Base>:
   11c40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11c44:	sub	sp, sp, #356	; 0x164
   11c48:	add	r0, sp, #36	; 0x24
   11c4c:	bl	11ba4 <time@plt>
   11c50:	bl	11c04 <srand@plt>
   11c54:	bl	11c28 <rand@plt>
   11c58:	mov	r1, #100	; 0x64
   11c5c:	bl	14920 <table_column_sort@@Base+0x3e0>
   11c60:	add	r6, sp, #40	; 0x28
   11c64:	mov	r0, r6
   11c68:	mov	r4, #0
   11c6c:	add	r5, r1, #100	; 0x64
   11c70:	bl	120cc <table_init@@Base>
   11c74:	mov	r0, r6
   11c78:	add	r4, r4, #1
   11c7c:	bl	13bdc <table_add_row@@Base>
   11c80:	cmp	r5, r4
   11c84:	bgt	11c74 <main@@Base+0x34>
   11c88:	mov	r0, r6
   11c8c:	bl	13bd4 <table_get_row_length@@Base>
   11c90:	ldr	r8, [pc, #752]	; 11f88 <main@@Base+0x348>
   11c94:	mov	r4, #0
   11c98:	mov	r7, #255	; 0xff
   11c9c:	str	r0, [sp, #24]
   11ca0:	bl	11c28 <rand@plt>
   11ca4:	mov	r1, #5
   11ca8:	bl	14920 <table_column_sort@@Base+0x3e0>
   11cac:	add	r5, r1, #2
   11cb0:	mov	r3, r4
   11cb4:	mov	r2, r8
   11cb8:	mov	r1, r7
   11cbc:	add	r0, sp, #96	; 0x60
   11cc0:	bl	11c10 <snprintf@plt>
   11cc4:	add	r4, r4, #1
   11cc8:	mov	r2, #0
   11ccc:	add	r1, sp, #96	; 0x60
   11cd0:	mov	r0, r6
   11cd4:	bl	13368 <table_add_column@@Base>
   11cd8:	cmp	r5, r4
   11cdc:	bgt	11cb0 <main@@Base+0x70>
   11ce0:	mov	r0, r6
   11ce4:	bl	132fc <table_get_column_length@@Base>
   11ce8:	mov	r5, #0
   11cec:	mov	r8, #20
   11cf0:	mov	r7, r0
   11cf4:	cmp	r5, r7
   11cf8:	bge	11d3c <main@@Base+0xfc>
   11cfc:	mov	r4, #0
   11d00:	b	11d28 <main@@Base+0xe8>
   11d04:	bl	11c28 <rand@plt>
   11d08:	mov	r1, r8
   11d0c:	bl	14b60 <table_column_sort@@Base+0x620>
   11d10:	mov	r2, r5
   11d14:	mov	r0, r6
   11d18:	mov	r3, r1
   11d1c:	mov	r1, r4
   11d20:	bl	14098 <table_set_int@@Base>
   11d24:	add	r4, r4, #1
   11d28:	ldr	r3, [sp, #24]
   11d2c:	cmp	r4, r3
   11d30:	blt	11d04 <main@@Base+0xc4>
   11d34:	add	r5, r5, #1
   11d38:	b	11cf4 <main@@Base+0xb4>
   11d3c:	mov	r1, #4
   11d40:	mov	r0, r7
   11d44:	bl	11b68 <calloc@plt>
   11d48:	mov	r1, #4
   11d4c:	mov	r4, #0
   11d50:	str	r0, [sp, #16]
   11d54:	mov	r0, r7
   11d58:	bl	11b68 <calloc@plt>
   11d5c:	mov	sl, r0
   11d60:	cmp	r4, r7
   11d64:	blt	11ddc <main@@Base+0x19c>
   11d68:	mov	r3, r7
   11d6c:	mov	r2, sl
   11d70:	ldr	r1, [sp, #16]
   11d74:	mov	r0, r6
   11d78:	bl	14540 <table_column_sort@@Base>
   11d7c:	mov	r9, #0
   11d80:	mvn	r3, #0
   11d84:	mov	r8, r3
   11d88:	mov	r5, r9
   11d8c:	str	r3, [sp, #12]
   11d90:	ldr	r3, [sp, #24]
   11d94:	cmp	r5, r3
   11d98:	blt	11e00 <main@@Base+0x1c0>
   11d9c:	cmn	r8, #1
   11da0:	beq	11f64 <main@@Base+0x324>
   11da4:	add	r0, sp, #40	; 0x28
   11da8:	bl	13bd4 <table_get_row_length@@Base>
   11dac:	add	r0, sp, #40	; 0x28
   11db0:	bl	13bd4 <table_get_row_length@@Base>
   11db4:	ldr	fp, [pc, #464]	; 11f8c <main@@Base+0x34c>
   11db8:	mov	r4, #0
   11dbc:	mov	r7, r0
   11dc0:	ldr	r0, [pc, #456]	; 11f90 <main@@Base+0x350>
   11dc4:	bl	11bc8 <puts@plt>
   11dc8:	cmp	r4, r7
   11dcc:	bge	11f64 <main@@Base+0x324>
   11dd0:	mov	r5, #0
   11dd4:	mov	r6, #255	; 0xff
   11dd8:	b	11f3c <main@@Base+0x2fc>
   11ddc:	ldr	r3, [sp, #16]
   11de0:	str	r4, [r3, r4, lsl #2]
   11de4:	bl	11c28 <rand@plt>
   11de8:	cmp	r0, #0
   11dec:	and	r0, r0, #1
   11df0:	rsblt	r0, r0, #0
   11df4:	str	r0, [sl, r4, lsl #2]
   11df8:	add	r4, r4, #1
   11dfc:	b	11d60 <main@@Base+0x120>
   11e00:	cmp	r5, #0
   11e04:	ble	11e1c <main@@Base+0x1dc>
   11e08:	mov	r4, #0
   11e0c:	sub	r3, r5, #1
   11e10:	str	r3, [sp, #20]
   11e14:	cmp	r4, r7
   11e18:	blt	11e24 <main@@Base+0x1e4>
   11e1c:	add	r5, r5, #1
   11e20:	b	11d90 <main@@Base+0x150>
   11e24:	cmp	r4, #0
   11e28:	subne	fp, r4, #1
   11e2c:	bne	11e78 <main@@Base+0x238>
   11e30:	ldr	r3, [sl, r4, lsl #2]
   11e34:	cmp	r3, #0
   11e38:	beq	11eb4 <main@@Base+0x274>
   11e3c:	mov	r2, r4
   11e40:	ldr	r1, [sp, #20]
   11e44:	mov	r0, r6
   11e48:	bl	13a8c <table_get_int@@Base>
   11e4c:	mov	r2, r4
   11e50:	mov	r1, r5
   11e54:	mov	fp, r0
   11e58:	mov	r0, r6
   11e5c:	bl	13a8c <table_get_int@@Base>
   11e60:	cmp	fp, r0
   11e64:	bge	11efc <main@@Base+0x2bc>
   11e68:	mov	r2, r4
   11e6c:	mov	r1, r5
   11e70:	ldr	r0, [pc, #284]	; 11f94 <main@@Base+0x354>
   11e74:	b	11eec <main@@Base+0x2ac>
   11e78:	mov	r2, fp
   11e7c:	mov	r1, r5
   11e80:	add	r0, sp, #40	; 0x28
   11e84:	bl	13a8c <table_get_int@@Base>
   11e88:	mov	r2, fp
   11e8c:	ldr	r1, [sp, #20]
   11e90:	str	r0, [sp, #28]
   11e94:	add	r0, sp, #40	; 0x28
   11e98:	bl	13a8c <table_get_int@@Base>
   11e9c:	ldr	r3, [sp, #28]
   11ea0:	cmp	r3, r0
   11ea4:	bne	11e1c <main@@Base+0x1dc>
   11ea8:	subs	fp, fp, #1
   11eac:	bcs	11e78 <main@@Base+0x238>
   11eb0:	b	11e30 <main@@Base+0x1f0>
   11eb4:	mov	r2, r4
   11eb8:	ldr	r1, [sp, #20]
   11ebc:	mov	r0, r6
   11ec0:	bl	13a8c <table_get_int@@Base>
   11ec4:	mov	r2, r4
   11ec8:	mov	r1, r5
   11ecc:	mov	fp, r0
   11ed0:	mov	r0, r6
   11ed4:	bl	13a8c <table_get_int@@Base>
   11ed8:	cmp	fp, r0
   11edc:	ble	11efc <main@@Base+0x2bc>
   11ee0:	ldr	r0, [pc, #176]	; 11f98 <main@@Base+0x358>
   11ee4:	mov	r2, r4
   11ee8:	mov	r1, r5
   11eec:	mov	r8, r5
   11ef0:	mvn	r9, #0
   11ef4:	bl	11b8c <printf@plt>
   11ef8:	str	r4, [sp, #12]
   11efc:	add	r4, r4, #1
   11f00:	b	11e14 <main@@Base+0x1d4>
   11f04:	mov	r2, r5
   11f08:	add	r3, sp, #96	; 0x60
   11f0c:	mov	r1, r4
   11f10:	str	r6, [sp]
   11f14:	add	r0, sp, #40	; 0x28
   11f18:	bl	12974 <table_cell_to_buffer@@Base>
   11f1c:	ldr	r3, [sp, #12]
   11f20:	add	r1, sp, #96	; 0x60
   11f24:	cmp	r8, r4
   11f28:	cmpeq	r3, r5
   11f2c:	movne	r0, fp
   11f30:	ldreq	r0, [pc, #100]	; 11f9c <main@@Base+0x35c>
   11f34:	bl	11b8c <printf@plt>
   11f38:	add	r5, r5, #1
   11f3c:	add	r0, sp, #40	; 0x28
   11f40:	bl	132fc <table_get_column_length@@Base>
   11f44:	cmp	r5, r0
   11f48:	blt	11f04 <main@@Base+0x2c4>
   11f4c:	cmp	r8, r4
   11f50:	add	r4, r4, #1
   11f54:	ldreq	r0, [pc, #68]	; 11fa0 <main@@Base+0x360>
   11f58:	ldrne	r0, [pc, #48]	; 11f90 <main@@Base+0x350>
   11f5c:	bl	11bc8 <puts@plt>
   11f60:	b	11dc8 <main@@Base+0x188>
   11f64:	add	r0, sp, #40	; 0x28
   11f68:	bl	1212c <table_destroy@@Base>
   11f6c:	ldr	r0, [sp, #16]
   11f70:	bl	11b98 <free@plt>
   11f74:	mov	r0, sl
   11f78:	bl	11b98 <free@plt>
   11f7c:	mov	r0, r9
   11f80:	add	sp, sp, #356	; 0x164
   11f84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f88:	andeq	r4, r1, r0, lsl #24
   11f8c:	muleq	r1, sp, ip
   11f90:	andeq	r4, r1, r2, lsr #25
   11f94:	andeq	r4, r1, pc, asr #24
   11f98:	andeq	r4, r1, r7, lsl #24
   11f9c:	muleq	r1, r8, ip
   11fa0:	andeq	r4, r1, r1, lsr #25

00011fa4 <_start@@Base>:
   11fa4:	mov	fp, #0
   11fa8:	mov	lr, #0
   11fac:	pop	{r1}		; (ldr r1, [sp], #4)
   11fb0:	mov	r2, sp
   11fb4:	push	{r2}		; (str r2, [sp, #-4]!)
   11fb8:	push	{r0}		; (str r0, [sp, #-4]!)
   11fbc:	ldr	ip, [pc, #16]	; 11fd4 <_start@@Base+0x30>
   11fc0:	push	{ip}		; (str ip, [sp, #-4]!)
   11fc4:	ldr	r0, [pc, #12]	; 11fd8 <_start@@Base+0x34>
   11fc8:	ldr	r3, [pc, #12]	; 11fdc <_start@@Base+0x38>
   11fcc:	bl	11be0 <__libc_start_main@plt>
   11fd0:	bl	11c34 <abort@plt>
   11fd4:	strdeq	r4, [r1], -r0
   11fd8:	andeq	r1, r1, r0, asr #24
   11fdc:	muleq	r1, r0, fp
   11fe0:	ldr	r3, [pc, #20]	; 11ffc <_start@@Base+0x58>
   11fe4:	ldr	r2, [pc, #20]	; 12000 <_start@@Base+0x5c>
   11fe8:	add	r3, pc, r3
   11fec:	ldr	r2, [r3, r2]
   11ff0:	cmp	r2, #0
   11ff4:	bxeq	lr
   11ff8:	b	11bec <__gmon_start__@plt>
   11ffc:	andeq	r3, r1, r0, lsl r0
   12000:	andeq	r0, r0, r4, asr r0
   12004:	ldr	r3, [pc, #28]	; 12028 <_start@@Base+0x84>
   12008:	ldr	r0, [pc, #28]	; 1202c <_start@@Base+0x88>
   1200c:	sub	r3, r3, r0
   12010:	cmp	r3, #6
   12014:	bxls	lr
   12018:	ldr	r3, [pc, #16]	; 12030 <_start@@Base+0x8c>
   1201c:	cmp	r3, #0
   12020:	bxeq	lr
   12024:	bx	r3
   12028:	andeq	r5, r2, r3, rrx
   1202c:	andeq	r5, r2, r0, rrx
   12030:	andeq	r0, r0, r0
   12034:	ldr	r1, [pc, #36]	; 12060 <_start@@Base+0xbc>
   12038:	ldr	r0, [pc, #36]	; 12064 <_start@@Base+0xc0>
   1203c:	sub	r1, r1, r0
   12040:	asr	r1, r1, #2
   12044:	add	r1, r1, r1, lsr #31
   12048:	asrs	r1, r1, #1
   1204c:	bxeq	lr
   12050:	ldr	r3, [pc, #16]	; 12068 <_start@@Base+0xc4>
   12054:	cmp	r3, #0
   12058:	bxeq	lr
   1205c:	bx	r3
   12060:	andeq	r5, r2, r0, rrx
   12064:	andeq	r5, r2, r0, rrx
   12068:	andeq	r0, r0, r0
   1206c:	push	{r4, lr}
   12070:	ldr	r4, [pc, #24]	; 12090 <_start@@Base+0xec>
   12074:	ldrb	r3, [r4]
   12078:	cmp	r3, #0
   1207c:	popne	{r4, pc}
   12080:	bl	12004 <_start@@Base+0x60>
   12084:	mov	r3, #1
   12088:	strb	r3, [r4]
   1208c:	pop	{r4, pc}
   12090:	andeq	r5, r2, r0, rrx
   12094:	ldr	r0, [pc, #40]	; 120c4 <_start@@Base+0x120>
   12098:	ldr	r3, [r0]
   1209c:	cmp	r3, #0
   120a0:	bne	120a8 <_start@@Base+0x104>
   120a4:	b	12034 <_start@@Base+0x90>
   120a8:	ldr	r3, [pc, #24]	; 120c8 <_start@@Base+0x124>
   120ac:	cmp	r3, #0
   120b0:	beq	120a4 <_start@@Base+0x100>
   120b4:	push	{r4, lr}
   120b8:	blx	r3
   120bc:	pop	{r4, lr}
   120c0:	b	12034 <_start@@Base+0x90>
   120c4:	andeq	r4, r2, r4, lsl pc
   120c8:	andeq	r0, r0, r0

000120cc <table_init@@Base>:
   120cc:	mov	r3, #0
   120d0:	mov	r2, #10
   120d4:	mov	r1, #20
   120d8:	str	r3, [r0]
   120dc:	str	r3, [r0, #4]
   120e0:	str	r3, [r0, #12]
   120e4:	str	r2, [r0, #8]
   120e8:	str	r3, [r0, #16]
   120ec:	str	r3, [r0, #20]
   120f0:	str	r3, [r0, #28]
   120f4:	str	r1, [r0, #24]
   120f8:	str	r3, [r0, #36]	; 0x24
   120fc:	str	r3, [r0, #40]	; 0x28
   12100:	str	r3, [r0, #44]	; 0x2c
   12104:	str	r3, [r0, #32]
   12108:	str	r3, [r0, #52]	; 0x34
   1210c:	str	r2, [r0, #48]	; 0x30
   12110:	bx	lr

00012114 <table_new@@Base>:
   12114:	push	{r4, lr}
   12118:	mov	r0, #56	; 0x38
   1211c:	bl	11bd4 <malloc@plt>
   12120:	mov	r4, r0
   12124:	bl	120cc <table_init@@Base>
   12128:	pop	{r4, pc}

0001212c <table_destroy@@Base>:
   1212c:	push	{r4, r5, r6, lr}
   12130:	subs	r4, r0, #0
   12134:	popeq	{r4, r5, r6, pc}
   12138:	mvn	r2, #0
   1213c:	mov	r3, #64	; 0x40
   12140:	mov	r1, r2
   12144:	bl	12908 <table_notify@@Base>
   12148:	mov	r0, r4
   1214c:	bl	13bd4 <table_get_row_length@@Base>
   12150:	mov	r5, #0
   12154:	mov	r6, r0
   12158:	cmp	r6, r5
   1215c:	bgt	121cc <table_destroy@@Base+0xa0>
   12160:	ldr	r0, [r4, #16]
   12164:	cmp	r0, #0
   12168:	beq	12170 <table_destroy@@Base+0x44>
   1216c:	bl	11b98 <free@plt>
   12170:	mov	r0, r4
   12174:	bl	132fc <table_get_column_length@@Base>
   12178:	mov	r5, #0
   1217c:	mov	r6, r0
   12180:	cmp	r6, r5
   12184:	bgt	121e0 <table_destroy@@Base+0xb4>
   12188:	ldr	r0, [r4]
   1218c:	cmp	r0, #0
   12190:	beq	12198 <table_destroy@@Base+0x6c>
   12194:	bl	11b98 <free@plt>
   12198:	ldr	r0, [r4, #36]	; 0x24
   1219c:	cmp	r0, #0
   121a0:	beq	121a8 <table_destroy@@Base+0x7c>
   121a4:	bl	11b98 <free@plt>
   121a8:	ldr	r0, [r4, #40]	; 0x28
   121ac:	cmp	r0, #0
   121b0:	beq	121b8 <table_destroy@@Base+0x8c>
   121b4:	bl	11b98 <free@plt>
   121b8:	ldr	r0, [r4, #44]	; 0x2c
   121bc:	cmp	r0, #0
   121c0:	popeq	{r4, r5, r6, pc}
   121c4:	pop	{r4, r5, r6, lr}
   121c8:	b	11b98 <free@plt>
   121cc:	mov	r1, r5
   121d0:	mov	r0, r4
   121d4:	bl	13b84 <table_row_destroy@@Base>
   121d8:	add	r5, r5, #1
   121dc:	b	12158 <table_destroy@@Base+0x2c>
   121e0:	mov	r1, r5
   121e4:	mov	r0, r4
   121e8:	bl	132e0 <table_column_destroy@@Base>
   121ec:	add	r5, r5, #1
   121f0:	b	12180 <table_destroy@@Base+0x54>

000121f4 <table_delete@@Base>:
   121f4:	push	{r4, lr}
   121f8:	mov	r4, r0
   121fc:	bl	1212c <table_destroy@@Base>
   12200:	mov	r0, r4
   12204:	pop	{r4, lr}
   12208:	b	11b98 <free@plt>

0001220c <table_dupe@@Base>:
   1220c:	push	{r4, r5, r6, r7, r8, r9, lr}
   12210:	sub	sp, sp, #20
   12214:	mov	r6, r0
   12218:	bl	13bd4 <table_get_row_length@@Base>
   1221c:	mov	r4, #0
   12220:	mov	r9, r0
   12224:	mov	r0, r6
   12228:	bl	132fc <table_get_column_length@@Base>
   1222c:	mov	r8, r0
   12230:	bl	12114 <table_new@@Base>
   12234:	mov	r7, r0
   12238:	cmp	r4, r8
   1223c:	blt	12258 <table_dupe@@Base+0x4c>
   12240:	mov	r5, #0
   12244:	cmp	r5, r9
   12248:	mov	r0, r7
   1224c:	blt	1228c <table_dupe@@Base+0x80>
   12250:	add	sp, sp, #20
   12254:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12258:	mov	r1, r4
   1225c:	mov	r0, r6
   12260:	bl	135d0 <table_get_column_name@@Base>
   12264:	mov	r1, r4
   12268:	add	r4, r4, #1
   1226c:	mov	r5, r0
   12270:	mov	r0, r6
   12274:	bl	13354 <table_get_column_data_type@@Base>
   12278:	mov	r1, r5
   1227c:	mov	r2, r0
   12280:	mov	r0, r7
   12284:	bl	13368 <table_add_column@@Base>
   12288:	b	12238 <table_dupe@@Base+0x2c>
   1228c:	bl	13bdc <table_add_row@@Base>
   12290:	mov	r4, #0
   12294:	cmp	r4, r8
   12298:	addge	r5, r5, #1
   1229c:	bge	12244 <table_dupe@@Base+0x38>
   122a0:	mov	r1, r4
   122a4:	mov	r0, r6
   122a8:	bl	13354 <table_get_column_data_type@@Base>
   122ac:	cmp	r0, #23
   122b0:	ldrls	pc, [pc, r0, lsl #2]
   122b4:	b	1233c <table_dupe@@Base+0x130>
   122b8:	andeq	r2, r1, r8, lsl r3
   122bc:	andeq	r2, r1, r4, asr #6
   122c0:	andeq	r2, r1, ip, ror #6
   122c4:	muleq	r1, r4, r3
   122c8:			; <UNDEFINED> instruction: 0x000123bc
   122cc:	andeq	r2, r1, r4, ror #7
   122d0:	andeq	r2, r1, ip, lsl #8
   122d4:	andeq	r2, r1, r4, lsr r4
   122d8:	andeq	r2, r1, ip, asr r4
   122dc:	andeq	r2, r1, r4, lsl #9
   122e0:	andeq	r2, r1, ip, lsr #9
   122e4:	ldrdeq	r2, [r1], -r4
   122e8:	strdeq	r2, [r1], -ip
   122ec:	andeq	r2, r1, r4, lsr #10
   122f0:	andeq	r2, r1, ip, asr #10
   122f4:	andeq	r2, r1, r4, ror r5
   122f8:	andeq	r2, r1, r4, asr #11
   122fc:	andeq	r2, r1, r8, ror #11
   12300:	andeq	r2, r1, ip, lsl #12
   12304:	andeq	r2, r1, r8, asr r6
   12308:	andeq	r2, r1, r0, lsl #13
   1230c:	muleq	r1, ip, r5
   12310:	andeq	r2, r1, r0, lsr r6
   12314:	andeq	r2, r1, r8, lsr #13
   12318:	mov	r2, r4
   1231c:	mov	r1, r5
   12320:	mov	r0, r6
   12324:	bl	13a8c <table_get_int@@Base>
   12328:	mov	r2, r4
   1232c:	mov	r1, r5
   12330:	mov	r3, r0
   12334:	mov	r0, r7
   12338:	bl	14098 <table_set_int@@Base>
   1233c:	add	r4, r4, #1
   12340:	b	12294 <table_dupe@@Base+0x88>
   12344:	mov	r2, r4
   12348:	mov	r1, r5
   1234c:	mov	r0, r6
   12350:	bl	13aa0 <table_get_uint@@Base>
   12354:	mov	r2, r4
   12358:	mov	r1, r5
   1235c:	mov	r3, r0
   12360:	mov	r0, r7
   12364:	bl	140bc <table_set_uint@@Base>
   12368:	b	1233c <table_dupe@@Base+0x130>
   1236c:	mov	r2, r4
   12370:	mov	r1, r5
   12374:	mov	r0, r6
   12378:	bl	13a6c <table_get_int8@@Base>
   1237c:	mov	r2, r4
   12380:	mov	r1, r5
   12384:	mov	r3, r0
   12388:	mov	r0, r7
   1238c:	bl	140e0 <table_set_int8@@Base>
   12390:	b	1233c <table_dupe@@Base+0x130>
   12394:	mov	r2, r4
   12398:	mov	r1, r5
   1239c:	mov	r0, r6
   123a0:	bl	13b58 <table_get_uint8@@Base>
   123a4:	mov	r2, r4
   123a8:	mov	r1, r5
   123ac:	mov	r3, r0
   123b0:	mov	r0, r7
   123b4:	bl	14104 <table_set_uint8@@Base>
   123b8:	b	1233c <table_dupe@@Base+0x130>
   123bc:	mov	r2, r4
   123c0:	mov	r1, r5
   123c4:	mov	r0, r6
   123c8:	bl	13ab4 <table_get_int16@@Base>
   123cc:	mov	r2, r4
   123d0:	mov	r1, r5
   123d4:	mov	r3, r0
   123d8:	mov	r0, r7
   123dc:	bl	14128 <table_set_int16@@Base>
   123e0:	b	1233c <table_dupe@@Base+0x130>
   123e4:	mov	r2, r4
   123e8:	mov	r1, r5
   123ec:	mov	r0, r6
   123f0:	bl	13ac8 <table_get_uint16@@Base>
   123f4:	mov	r2, r4
   123f8:	mov	r1, r5
   123fc:	mov	r3, r0
   12400:	mov	r0, r7
   12404:	bl	1414c <table_set_uint16@@Base>
   12408:	b	1233c <table_dupe@@Base+0x130>
   1240c:	mov	r2, r4
   12410:	mov	r1, r5
   12414:	mov	r0, r6
   12418:	bl	13a7c <table_get_int32@@Base>
   1241c:	mov	r2, r4
   12420:	mov	r1, r5
   12424:	mov	r3, r0
   12428:	mov	r0, r7
   1242c:	bl	14170 <table_set_int32@@Base>
   12430:	b	1233c <table_dupe@@Base+0x130>
   12434:	mov	r2, r4
   12438:	mov	r1, r5
   1243c:	mov	r0, r6
   12440:	bl	13a90 <table_get_uint32@@Base>
   12444:	mov	r2, r4
   12448:	mov	r1, r5
   1244c:	mov	r3, r0
   12450:	mov	r0, r7
   12454:	bl	14194 <table_set_uint32@@Base>
   12458:	b	1233c <table_dupe@@Base+0x130>
   1245c:	mov	r2, r4
   12460:	mov	r1, r5
   12464:	mov	r0, r6
   12468:	bl	13afc <table_get_int64@@Base>
   1246c:	mov	r2, r4
   12470:	strd	r0, [sp]
   12474:	mov	r1, r5
   12478:	mov	r0, r7
   1247c:	bl	141b8 <table_set_int64@@Base>
   12480:	b	1233c <table_dupe@@Base+0x130>
   12484:	mov	r2, r4
   12488:	mov	r1, r5
   1248c:	mov	r0, r6
   12490:	bl	13b10 <table_get_uint64@@Base>
   12494:	mov	r2, r4
   12498:	strd	r0, [sp]
   1249c:	mov	r1, r5
   124a0:	mov	r0, r7
   124a4:	bl	141d4 <table_set_uint64@@Base>
   124a8:	b	1233c <table_dupe@@Base+0x130>
   124ac:	mov	r2, r4
   124b0:	mov	r1, r5
   124b4:	mov	r0, r6
   124b8:	bl	13aa4 <table_get_short@@Base>
   124bc:	mov	r2, r4
   124c0:	mov	r1, r5
   124c4:	mov	r3, r0
   124c8:	mov	r0, r7
   124cc:	bl	141f0 <table_set_short@@Base>
   124d0:	b	1233c <table_dupe@@Base+0x130>
   124d4:	mov	r2, r4
   124d8:	mov	r1, r5
   124dc:	mov	r0, r6
   124e0:	bl	13ab8 <table_get_ushort@@Base>
   124e4:	mov	r2, r4
   124e8:	mov	r1, r5
   124ec:	mov	r3, r0
   124f0:	mov	r0, r7
   124f4:	bl	14214 <table_set_ushort@@Base>
   124f8:	b	1233c <table_dupe@@Base+0x130>
   124fc:	mov	r2, r4
   12500:	mov	r1, r5
   12504:	mov	r0, r6
   12508:	bl	13acc <table_get_long@@Base>
   1250c:	mov	r2, r4
   12510:	mov	r1, r5
   12514:	mov	r3, r0
   12518:	mov	r0, r7
   1251c:	bl	14238 <table_set_long@@Base>
   12520:	b	1233c <table_dupe@@Base+0x130>
   12524:	mov	r2, r4
   12528:	mov	r1, r5
   1252c:	mov	r0, r6
   12530:	bl	13adc <table_get_ulong@@Base>
   12534:	mov	r2, r4
   12538:	mov	r1, r5
   1253c:	mov	r3, r0
   12540:	mov	r0, r7
   12544:	bl	1425c <table_set_ulong@@Base>
   12548:	b	1233c <table_dupe@@Base+0x130>
   1254c:	mov	r2, r4
   12550:	mov	r1, r5
   12554:	mov	r0, r6
   12558:	bl	13aec <table_get_llong@@Base>
   1255c:	mov	r2, r4
   12560:	strd	r0, [sp]
   12564:	mov	r1, r5
   12568:	mov	r0, r7
   1256c:	bl	14280 <table_set_llong@@Base>
   12570:	b	1233c <table_dupe@@Base+0x130>
   12574:	mov	r2, r4
   12578:	mov	r1, r5
   1257c:	mov	r0, r6
   12580:	bl	13b00 <table_get_ullong@@Base>
   12584:	mov	r2, r4
   12588:	strd	r0, [sp]
   1258c:	mov	r1, r5
   12590:	mov	r0, r7
   12594:	bl	1429c <table_set_ullong@@Base>
   12598:	b	1233c <table_dupe@@Base+0x130>
   1259c:	mov	r2, r4
   125a0:	mov	r1, r5
   125a4:	mov	r0, r6
   125a8:	bl	13b5c <table_get_string@@Base>
   125ac:	mov	r2, r4
   125b0:	mov	r1, r5
   125b4:	mov	r3, r0
   125b8:	mov	r0, r7
   125bc:	bl	14318 <table_set_string@@Base>
   125c0:	b	1233c <table_dupe@@Base+0x130>
   125c4:	mov	r2, r4
   125c8:	mov	r1, r5
   125cc:	mov	r0, r6
   125d0:	bl	13b14 <table_get_float@@Base>
   125d4:	mov	r2, r4
   125d8:	mov	r1, r5
   125dc:	mov	r0, r7
   125e0:	bl	142b8 <table_set_float@@Base>
   125e4:	b	1233c <table_dupe@@Base+0x130>
   125e8:	mov	r2, r4
   125ec:	mov	r1, r5
   125f0:	mov	r0, r6
   125f4:	bl	13b24 <table_get_double@@Base>
   125f8:	mov	r2, r4
   125fc:	mov	r1, r5
   12600:	mov	r0, r7
   12604:	bl	142d8 <table_set_double@@Base>
   12608:	b	1233c <table_dupe@@Base+0x130>
   1260c:	mov	r2, r4
   12610:	mov	r1, r5
   12614:	mov	r0, r6
   12618:	bl	13b34 <table_get_ldouble@@Base>
   1261c:	mov	r2, r4
   12620:	mov	r1, r5
   12624:	mov	r0, r7
   12628:	bl	142f8 <table_set_ldouble@@Base>
   1262c:	b	1233c <table_dupe@@Base+0x130>
   12630:	mov	r2, r4
   12634:	mov	r1, r5
   12638:	mov	r0, r6
   1263c:	bl	13a5c <table_get_bool@@Base>
   12640:	mov	r2, r4
   12644:	mov	r1, r5
   12648:	mov	r3, r0
   1264c:	mov	r0, r7
   12650:	bl	14074 <table_set_bool@@Base>
   12654:	b	1233c <table_dupe@@Base+0x130>
   12658:	mov	r2, r4
   1265c:	mov	r1, r5
   12660:	mov	r0, r6
   12664:	bl	13b54 <table_get_char@@Base>
   12668:	mov	r2, r4
   1266c:	mov	r1, r5
   12670:	mov	r3, r0
   12674:	mov	r0, r7
   12678:	bl	14330 <table_set_char@@Base>
   1267c:	b	1233c <table_dupe@@Base+0x130>
   12680:	mov	r2, r4
   12684:	mov	r1, r5
   12688:	mov	r0, r6
   1268c:	bl	13b44 <table_get_uchar@@Base>
   12690:	mov	r2, r4
   12694:	mov	r1, r5
   12698:	mov	r3, r0
   1269c:	mov	r0, r7
   126a0:	bl	14354 <table_set_uchar@@Base>
   126a4:	b	1233c <table_dupe@@Base+0x130>
   126a8:	mov	r2, r4
   126ac:	mov	r1, r5
   126b0:	mov	r0, r6
   126b4:	bl	13b60 <table_get_ptr@@Base>
   126b8:	add	r3, sp, #12
   126bc:	mov	r2, r4
   126c0:	mov	r1, r5
   126c4:	str	r0, [sp, #12]
   126c8:	mov	r0, r7
   126cc:	bl	14378 <table_set_ptr@@Base>
   126d0:	b	1233c <table_dupe@@Base+0x130>

000126d4 <table_get_major_version@@Base>:
   126d4:	mov	r0, #0
   126d8:	bx	lr

000126dc <table_get_minor_version@@Base>:
   126dc:	mov	r0, #0
   126e0:	bx	lr

000126e4 <table_get_patch_version@@Base>:
   126e4:	mov	r0, #0
   126e8:	bx	lr

000126ec <table_get_version@@Base>:
   126ec:	ldr	r0, [pc]	; 126f4 <table_get_version@@Base+0x8>
   126f0:	bx	lr
   126f4:	muleq	r1, ip, ip

000126f8 <table_get_callback_length@@Base>:
   126f8:	ldr	r0, [r0, #32]
   126fc:	bx	lr

00012700 <table_register_callback@@Base>:
   12700:	push	{r4, r5, r6, r7, r8, lr}
   12704:	mov	r4, r0
   12708:	ldr	r0, [r0, #32]
   1270c:	mov	ip, #0
   12710:	cmp	ip, r0
   12714:	blt	127a8 <table_register_callback@@Base+0xa8>
   12718:	ldr	r5, [r4, #48]	; 0x30
   1271c:	mov	r8, r1
   12720:	mov	r1, r5
   12724:	mov	r6, r3
   12728:	mov	r7, r2
   1272c:	bl	14920 <table_column_sort@@Base+0x3e0>
   12730:	cmp	r1, #0
   12734:	bne	1277c <table_register_callback@@Base+0x7c>
   12738:	ldr	r1, [r4, #52]	; 0x34
   1273c:	ldr	r0, [r4, #36]	; 0x24
   12740:	add	r1, r5, r1
   12744:	str	r1, [r4, #52]	; 0x34
   12748:	lsl	r1, r1, #2
   1274c:	bl	11bb0 <realloc@plt>
   12750:	ldr	r1, [r4, #52]	; 0x34
   12754:	lsl	r1, r1, #2
   12758:	str	r0, [r4, #36]	; 0x24
   1275c:	ldr	r0, [r4, #40]	; 0x28
   12760:	bl	11bb0 <realloc@plt>
   12764:	ldr	r1, [r4, #52]	; 0x34
   12768:	lsl	r1, r1, #2
   1276c:	str	r0, [r4, #40]	; 0x28
   12770:	ldr	r0, [r4, #44]	; 0x2c
   12774:	bl	11bb0 <realloc@plt>
   12778:	str	r0, [r4, #44]	; 0x2c
   1277c:	ldr	r3, [r4, #32]
   12780:	ldr	r2, [r4, #36]	; 0x24
   12784:	str	r8, [r2, r3, lsl #2]
   12788:	ldr	r2, [r4, #40]	; 0x28
   1278c:	str	r7, [r2, r3, lsl #2]
   12790:	ldr	r2, [r4, #44]	; 0x2c
   12794:	str	r6, [r2, r3, lsl #2]
   12798:	ldr	r3, [r4, #32]
   1279c:	add	r3, r3, #1
   127a0:	str	r3, [r4, #32]
   127a4:	pop	{r4, r5, r6, r7, r8, pc}
   127a8:	ldr	r5, [r4, #36]	; 0x24
   127ac:	lsl	lr, ip, #2
   127b0:	ldr	r5, [r5, ip, lsl #2]
   127b4:	cmp	r1, r5
   127b8:	bne	127cc <table_register_callback@@Base+0xcc>
   127bc:	ldr	r5, [r4, #40]	; 0x28
   127c0:	ldr	r5, [r5, ip, lsl #2]
   127c4:	cmp	r2, r5
   127c8:	beq	127d4 <table_register_callback@@Base+0xd4>
   127cc:	add	ip, ip, #1
   127d0:	b	12710 <table_register_callback@@Base+0x10>
   127d4:	cmp	ip, #0
   127d8:	ble	12718 <table_register_callback@@Base+0x18>
   127dc:	ldr	r1, [r4, #44]	; 0x2c
   127e0:	ldr	r2, [r1, lr]
   127e4:	orr	r3, r2, r3
   127e8:	str	r3, [r1, lr]
   127ec:	pop	{r4, r5, r6, r7, r8, pc}

000127f0 <table_unregister_callback@@Base>:
   127f0:	push	{r4, r5, r6, lr}
   127f4:	mov	r4, r0
   127f8:	ldr	r0, [r0, #32]
   127fc:	mov	r3, #0
   12800:	cmp	r3, r0
   12804:	blt	1280c <table_unregister_callback@@Base+0x1c>
   12808:	pop	{r4, r5, r6, pc}
   1280c:	ldr	lr, [r4, #36]	; 0x24
   12810:	lsl	ip, r3, #2
   12814:	ldr	lr, [lr, r3, lsl #2]
   12818:	cmp	r1, lr
   1281c:	bne	12830 <table_unregister_callback@@Base+0x40>
   12820:	ldr	lr, [r4, #40]	; 0x28
   12824:	ldr	lr, [lr, r3, lsl #2]
   12828:	cmp	r2, lr
   1282c:	beq	12864 <table_unregister_callback@@Base+0x74>
   12830:	add	r3, r3, #1
   12834:	b	12800 <table_unregister_callback@@Base+0x10>
   12838:	ldr	r1, [r4, #36]	; 0x24
   1283c:	add	r3, r3, #1
   12840:	ldr	r0, [r1, r2]
   12844:	str	r0, [r1, ip]
   12848:	ldr	r1, [r4, #40]	; 0x28
   1284c:	ldr	r0, [r1, r2]
   12850:	str	r0, [r1, ip]
   12854:	ldr	r1, [r4, #44]	; 0x2c
   12858:	ldr	r0, [r1, r2]
   1285c:	str	r0, [r1, ip]
   12860:	mov	ip, r2
   12864:	ldr	r0, [r4, #32]
   12868:	add	r2, ip, #4
   1286c:	sub	r0, r0, #1
   12870:	cmp	r3, r0
   12874:	blt	12838 <table_unregister_callback@@Base+0x48>
   12878:	ldr	r6, [r4, #48]	; 0x30
   1287c:	str	r0, [r4, #32]
   12880:	mov	r1, r6
   12884:	bl	14920 <table_column_sort@@Base+0x3e0>
   12888:	cmp	r1, #0
   1288c:	popne	{r4, r5, r6, pc}
   12890:	ldr	r5, [r4, #52]	; 0x34
   12894:	sub	r5, r5, r6
   12898:	cmp	r5, #0
   1289c:	str	r5, [r4, #52]	; 0x34
   128a0:	beq	128e0 <table_unregister_callback@@Base+0xf0>
   128a4:	lsl	r1, r5, #2
   128a8:	ldr	r0, [r4, #36]	; 0x24
   128ac:	bl	11bb0 <realloc@plt>
   128b0:	ldr	r1, [r4, #52]	; 0x34
   128b4:	lsl	r1, r1, #2
   128b8:	str	r0, [r4, #36]	; 0x24
   128bc:	ldr	r0, [r4, #40]	; 0x28
   128c0:	bl	11bb0 <realloc@plt>
   128c4:	ldr	r1, [r4, #52]	; 0x34
   128c8:	lsl	r1, r1, #2
   128cc:	str	r0, [r4, #40]	; 0x28
   128d0:	ldr	r0, [r4, #44]	; 0x2c
   128d4:	bl	11bb0 <realloc@plt>
   128d8:	str	r0, [r4, #44]	; 0x2c
   128dc:	pop	{r4, r5, r6, pc}
   128e0:	ldr	r0, [r4, #36]	; 0x24
   128e4:	bl	11b98 <free@plt>
   128e8:	ldr	r0, [r4, #40]	; 0x28
   128ec:	bl	11b98 <free@plt>
   128f0:	ldr	r0, [r4, #44]	; 0x2c
   128f4:	bl	11b98 <free@plt>
   128f8:	str	r5, [r4, #36]	; 0x24
   128fc:	str	r5, [r4, #40]	; 0x28
   12900:	str	r5, [r4, #44]	; 0x2c
   12904:	pop	{r4, r5, r6, pc}

00012908 <table_notify@@Base>:
   12908:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   1290c:	mov	r5, r0
   12910:	mov	r7, r1
   12914:	mov	r8, r2
   12918:	mov	r6, r3
   1291c:	mov	r4, #0
   12920:	ldr	r3, [r5, #32]
   12924:	cmp	r4, r3
   12928:	blt	12934 <table_notify@@Base+0x2c>
   1292c:	add	sp, sp, #12
   12930:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12934:	ldr	r3, [r5, #44]	; 0x2c
   12938:	ldr	r3, [r3, r4, lsl #2]
   1293c:	tst	r6, r3
   12940:	beq	1296c <table_notify@@Base+0x64>
   12944:	ldr	r2, [r5, #40]	; 0x28
   12948:	ldr	r3, [r5, #36]	; 0x24
   1294c:	mov	r1, r7
   12950:	ldr	r2, [r2, r4, lsl #2]
   12954:	mov	r0, r5
   12958:	str	r2, [sp]
   1295c:	mov	r2, r8
   12960:	ldr	r9, [r3, r4, lsl #2]
   12964:	mov	r3, r6
   12968:	blx	r9
   1296c:	add	r4, r4, #1
   12970:	b	12920 <table_notify@@Base+0x18>

00012974 <table_cell_to_buffer@@Base>:
   12974:	push	{r4, r5, r6, r7, lr}
   12978:	sub	sp, sp, #20
   1297c:	mov	r7, r1
   12980:	mov	r1, r2
   12984:	str	r2, [sp, #12]
   12988:	mov	r6, r0
   1298c:	mov	r4, r3
   12990:	ldr	r5, [sp, #40]	; 0x28
   12994:	bl	13354 <table_get_column_data_type@@Base>
   12998:	ldr	r2, [sp, #12]
   1299c:	cmp	r0, #23
   129a0:	ldrls	pc, [pc, r0, lsl #2]
   129a4:	b	12ac4 <table_cell_to_buffer@@Base+0x150>
   129a8:	andeq	r2, r1, r8, lsl #20
   129ac:	andeq	r2, r1, r0, lsr #20
   129b0:	andeq	r2, r1, r4, asr #20
   129b4:	andeq	r2, r1, r4, asr sl
   129b8:	andeq	r2, r1, r4, ror #20
   129bc:	andeq	r2, r1, r4, ror sl
   129c0:	andeq	r2, r1, r4, lsl #21
   129c4:	muleq	r1, r4, sl
   129c8:	andeq	r2, r1, r4, lsr #21
   129cc:	ldrdeq	r2, [r1], -r0
   129d0:	andeq	r2, r1, r8, ror #21
   129d4:	andeq	r2, r1, r0, lsl #22
   129d8:	andeq	r2, r1, r8, lsl fp
   129dc:	andeq	r2, r1, r0, lsr fp
   129e0:	andeq	r2, r1, r8, asr #22
   129e4:	andeq	r2, r1, r8, asr fp
   129e8:	andeq	r2, r1, r0, lsl #23
   129ec:	andeq	r2, r1, r8, lsr #23
   129f0:	andeq	r2, r1, r0, asr #23
   129f4:	andeq	r2, r1, r8, ror #23
   129f8:	andeq	r2, r1, r0, lsl #24
   129fc:	andeq	r2, r1, r8, ror #22
   12a00:	ldrdeq	r2, [r1], -r8
   12a04:	andeq	r2, r1, r0, lsl ip
   12a08:	mov	r1, r7
   12a0c:	mov	r0, r6
   12a10:	bl	13a8c <table_get_int@@Base>
   12a14:	mov	r3, r0
   12a18:	ldr	r2, [pc, #520]	; 12c28 <table_cell_to_buffer@@Base+0x2b4>
   12a1c:	b	12a34 <table_cell_to_buffer@@Base+0xc0>
   12a20:	mov	r1, r7
   12a24:	mov	r0, r6
   12a28:	bl	13aa0 <table_get_uint@@Base>
   12a2c:	ldr	r2, [pc, #504]	; 12c2c <table_cell_to_buffer@@Base+0x2b8>
   12a30:	mov	r3, r0
   12a34:	mov	r1, r5
   12a38:	mov	r0, r4
   12a3c:	bl	11c10 <snprintf@plt>
   12a40:	b	12ac4 <table_cell_to_buffer@@Base+0x150>
   12a44:	mov	r1, r7
   12a48:	mov	r0, r6
   12a4c:	bl	13a6c <table_get_int8@@Base>
   12a50:	b	12a14 <table_cell_to_buffer@@Base+0xa0>
   12a54:	mov	r1, r7
   12a58:	mov	r0, r6
   12a5c:	bl	13b58 <table_get_uint8@@Base>
   12a60:	b	12a2c <table_cell_to_buffer@@Base+0xb8>
   12a64:	mov	r1, r7
   12a68:	mov	r0, r6
   12a6c:	bl	13ab4 <table_get_int16@@Base>
   12a70:	b	12a14 <table_cell_to_buffer@@Base+0xa0>
   12a74:	mov	r1, r7
   12a78:	mov	r0, r6
   12a7c:	bl	13ac8 <table_get_uint16@@Base>
   12a80:	b	12a2c <table_cell_to_buffer@@Base+0xb8>
   12a84:	mov	r1, r7
   12a88:	mov	r0, r6
   12a8c:	bl	13a7c <table_get_int32@@Base>
   12a90:	b	12a14 <table_cell_to_buffer@@Base+0xa0>
   12a94:	mov	r1, r7
   12a98:	mov	r0, r6
   12a9c:	bl	13a90 <table_get_uint32@@Base>
   12aa0:	b	12a2c <table_cell_to_buffer@@Base+0xb8>
   12aa4:	mov	r1, r7
   12aa8:	mov	r0, r6
   12aac:	bl	13afc <table_get_int64@@Base>
   12ab0:	ldr	r2, [pc, #376]	; 12c30 <table_cell_to_buffer@@Base+0x2bc>
   12ab4:	strd	r0, [sp]
   12ab8:	mov	r1, r5
   12abc:	mov	r0, r4
   12ac0:	bl	11c10 <snprintf@plt>
   12ac4:	mov	r0, #0
   12ac8:	add	sp, sp, #20
   12acc:	pop	{r4, r5, r6, r7, pc}
   12ad0:	mov	r1, r7
   12ad4:	mov	r0, r6
   12ad8:	bl	13b10 <table_get_uint64@@Base>
   12adc:	strd	r0, [sp]
   12ae0:	ldr	r2, [pc, #332]	; 12c34 <table_cell_to_buffer@@Base+0x2c0>
   12ae4:	b	12ab8 <table_cell_to_buffer@@Base+0x144>
   12ae8:	mov	r1, r7
   12aec:	mov	r0, r6
   12af0:	bl	13aa4 <table_get_short@@Base>
   12af4:	ldr	r2, [pc, #316]	; 12c38 <table_cell_to_buffer@@Base+0x2c4>
   12af8:	mov	r3, r0
   12afc:	b	12a34 <table_cell_to_buffer@@Base+0xc0>
   12b00:	mov	r1, r7
   12b04:	mov	r0, r6
   12b08:	bl	13ab8 <table_get_ushort@@Base>
   12b0c:	ldr	r2, [pc, #296]	; 12c3c <table_cell_to_buffer@@Base+0x2c8>
   12b10:	mov	r3, r0
   12b14:	b	12a34 <table_cell_to_buffer@@Base+0xc0>
   12b18:	mov	r1, r7
   12b1c:	mov	r0, r6
   12b20:	bl	13acc <table_get_long@@Base>
   12b24:	ldr	r2, [pc, #276]	; 12c40 <table_cell_to_buffer@@Base+0x2cc>
   12b28:	mov	r3, r0
   12b2c:	b	12a34 <table_cell_to_buffer@@Base+0xc0>
   12b30:	mov	r1, r7
   12b34:	mov	r0, r6
   12b38:	bl	13adc <table_get_ulong@@Base>
   12b3c:	ldr	r2, [pc, #256]	; 12c44 <table_cell_to_buffer@@Base+0x2d0>
   12b40:	mov	r3, r0
   12b44:	b	12a34 <table_cell_to_buffer@@Base+0xc0>
   12b48:	mov	r1, r7
   12b4c:	mov	r0, r6
   12b50:	bl	13aec <table_get_llong@@Base>
   12b54:	b	12ab0 <table_cell_to_buffer@@Base+0x13c>
   12b58:	mov	r1, r7
   12b5c:	mov	r0, r6
   12b60:	bl	13b00 <table_get_ullong@@Base>
   12b64:	b	12adc <table_cell_to_buffer@@Base+0x168>
   12b68:	mov	r1, r7
   12b6c:	mov	r0, r6
   12b70:	bl	13b5c <table_get_string@@Base>
   12b74:	ldr	r2, [pc, #204]	; 12c48 <table_cell_to_buffer@@Base+0x2d4>
   12b78:	mov	r3, r0
   12b7c:	b	12a34 <table_cell_to_buffer@@Base+0xc0>
   12b80:	mov	r1, r7
   12b84:	mov	r0, r6
   12b88:	bl	13b14 <table_get_float@@Base>
   12b8c:	ldr	r2, [pc, #184]	; 12c4c <table_cell_to_buffer@@Base+0x2d8>
   12b90:	vcvt.f64.f32	d0, s0
   12b94:	vstr	d0, [sp]
   12b98:	mov	r1, r5
   12b9c:	mov	r0, r4
   12ba0:	bl	11c10 <snprintf@plt>
   12ba4:	b	12ac4 <table_cell_to_buffer@@Base+0x150>
   12ba8:	mov	r1, r7
   12bac:	mov	r0, r6
   12bb0:	bl	13b24 <table_get_double@@Base>
   12bb4:	ldr	r2, [pc, #148]	; 12c50 <table_cell_to_buffer@@Base+0x2dc>
   12bb8:	vstr	d0, [sp]
   12bbc:	b	12b98 <table_cell_to_buffer@@Base+0x224>
   12bc0:	mov	r1, r7
   12bc4:	mov	r0, r6
   12bc8:	bl	13b34 <table_get_ldouble@@Base>
   12bcc:	ldr	r2, [pc, #128]	; 12c54 <table_cell_to_buffer@@Base+0x2e0>
   12bd0:	vstr	d0, [sp]
   12bd4:	b	12b98 <table_cell_to_buffer@@Base+0x224>
   12bd8:	mov	r1, r7
   12bdc:	mov	r0, r6
   12be0:	bl	13a5c <table_get_bool@@Base>
   12be4:	b	12a14 <table_cell_to_buffer@@Base+0xa0>
   12be8:	mov	r1, r7
   12bec:	mov	r0, r6
   12bf0:	bl	13b54 <table_get_char@@Base>
   12bf4:	mov	r3, r0
   12bf8:	ldr	r2, [pc, #88]	; 12c58 <table_cell_to_buffer@@Base+0x2e4>
   12bfc:	b	12a34 <table_cell_to_buffer@@Base+0xc0>
   12c00:	mov	r1, r7
   12c04:	mov	r0, r6
   12c08:	bl	13b44 <table_get_uchar@@Base>
   12c0c:	b	12bf4 <table_cell_to_buffer@@Base+0x280>
   12c10:	mov	r1, r7
   12c14:	mov	r0, r6
   12c18:	bl	13b60 <table_get_ptr@@Base>
   12c1c:	ldr	r2, [pc, #56]	; 12c5c <table_cell_to_buffer@@Base+0x2e8>
   12c20:	mov	r3, r0
   12c24:	b	12a34 <table_cell_to_buffer@@Base+0xc0>
   12c28:	andeq	r4, r1, r4, lsl #24
   12c2c:	andeq	r4, r1, r4, lsr #25
   12c30:	andeq	r4, r1, r7, lsr #25
   12c34:	andeq	r4, r1, ip, lsr #25
   12c38:			; <UNDEFINED> instruction: 0x00014cb1
   12c3c:			; <UNDEFINED> instruction: 0x00014cb5
   12c40:			; <UNDEFINED> instruction: 0x00014cb9
   12c44:			; <UNDEFINED> instruction: 0x00014cbd
   12c48:	andeq	r4, r1, r1, asr #25
   12c4c:	andeq	r4, r1, r4, asr #25
   12c50:	andeq	r4, r1, r7, asr #25
   12c54:	andeq	r4, r1, fp, asr #25
   12c58:	andeq	r4, r1, pc, asr #25
   12c5c:	ldrdeq	r4, [r1], -r2

00012c60 <table_cell_from_buffer@@Base>:
   12c60:	push	{r4, r5, r6, r7, lr}
   12c64:	mov	r7, r1
   12c68:	sub	sp, sp, #268	; 0x10c
   12c6c:	mov	r1, r2
   12c70:	mov	r6, r0
   12c74:	mov	r5, r2
   12c78:	mov	r4, r3
   12c7c:	bl	13354 <table_get_column_data_type@@Base>
   12c80:	cmp	r0, #23
   12c84:	ldrls	pc, [pc, r0, lsl #2]
   12c88:	b	12d18 <table_cell_from_buffer@@Base+0xb8>
   12c8c:	andeq	r2, r1, ip, ror #25
   12c90:	andeq	r2, r1, r0, lsr #26
   12c94:	andeq	r2, r1, r0, asr sp
   12c98:	andeq	r2, r1, r0, lsl #27
   12c9c:			; <UNDEFINED> instruction: 0x00012db0
   12ca0:	andeq	r2, r1, r0, ror #27
   12ca4:	andeq	r2, r1, r0, lsl lr
   12ca8:	andeq	r2, r1, r0, asr #28
   12cac:	andeq	r2, r1, r0, ror lr
   12cb0:	andeq	r2, r1, r4, lsr #29
   12cb4:	ldrdeq	r2, [r1], -r8
   12cb8:	andeq	r2, r1, r8, lsl #30
   12cbc:	andeq	r2, r1, r8, lsr pc
   12cc0:	andeq	r2, r1, r8, ror #30
   12cc4:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   12cc8:	andeq	r2, r1, ip, asr #31
   12ccc:	andeq	r3, r1, r0, lsr r0
   12cd0:	andeq	r3, r1, r0, rrx
   12cd4:	muleq	r1, r0, r0
   12cd8:	andeq	r3, r1, ip, lsl r1
   12cdc:	andeq	r3, r1, ip, asr #2
   12ce0:	andeq	r3, r1, r0
   12ce4:	andeq	r3, r1, r0, asr #1
   12ce8:	andeq	r3, r1, ip, ror r1
   12cec:	add	r2, sp, #8
   12cf0:	ldr	r1, [pc, #1212]	; 131b4 <table_cell_from_buffer@@Base+0x554>
   12cf4:	mov	r0, r4
   12cf8:	bl	11c1c <__isoc99_sscanf@plt>
   12cfc:	cmp	r0, #1
   12d00:	bne	131ac <table_cell_from_buffer@@Base+0x54c>
   12d04:	ldr	r3, [sp, #8]
   12d08:	mov	r2, r5
   12d0c:	mov	r1, r7
   12d10:	mov	r0, r6
   12d14:	bl	14098 <table_set_int@@Base>
   12d18:	mov	r4, #0
   12d1c:	b	13110 <table_cell_from_buffer@@Base+0x4b0>
   12d20:	add	r2, sp, #8
   12d24:	ldr	r1, [pc, #1164]	; 131b8 <table_cell_from_buffer@@Base+0x558>
   12d28:	mov	r0, r4
   12d2c:	bl	11c1c <__isoc99_sscanf@plt>
   12d30:	cmp	r0, #1
   12d34:	bne	131ac <table_cell_from_buffer@@Base+0x54c>
   12d38:	ldr	r3, [sp, #8]
   12d3c:	mov	r2, r5
   12d40:	mov	r1, r7
   12d44:	mov	r0, r6
   12d48:	bl	140bc <table_set_uint@@Base>
   12d4c:	b	12d18 <table_cell_from_buffer@@Base+0xb8>
   12d50:	add	r2, sp, #8
   12d54:	ldr	r1, [pc, #1120]	; 131bc <table_cell_from_buffer@@Base+0x55c>
   12d58:	mov	r0, r4
   12d5c:	bl	11c1c <__isoc99_sscanf@plt>
   12d60:	cmp	r0, #1
   12d64:	bne	131ac <table_cell_from_buffer@@Base+0x54c>
   12d68:	ldrsb	r3, [sp, #8]
   12d6c:	mov	r2, r5
   12d70:	mov	r1, r7
   12d74:	mov	r0, r6
   12d78:	bl	140e0 <table_set_int8@@Base>
   12d7c:	b	12d18 <table_cell_from_buffer@@Base+0xb8>
   12d80:	add	r2, sp, #8
   12d84:	ldr	r1, [pc, #1076]	; 131c0 <table_cell_from_buffer@@Base+0x560>
   12d88:	mov	r0, r4
   12d8c:	bl	11c1c <__isoc99_sscanf@plt>
   12d90:	cmp	r0, #1
   12d94:	bne	131ac <table_cell_from_buffer@@Base+0x54c>
   12d98:	ldrb	r3, [sp, #8]
   12d9c:	mov	r2, r5
   12da0:	mov	r1, r7
   12da4:	mov	r0, r6
   12da8:	bl	14104 <table_set_uint8@@Base>
   12dac:	b	12d18 <table_cell_from_buffer@@Base+0xb8>
   12db0:	add	r2, sp, #8
   12db4:	ldr	r1, [pc, #1032]	; 131c4 <table_cell_from_buffer@@Base+0x564>
   12db8:	mov	r0, r4
   12dbc:	bl	11c1c <__isoc99_sscanf@plt>
   12dc0:	cmp	r0, #1
   12dc4:	bne	131ac <table_cell_from_buffer@@Base+0x54c>
   12dc8:	ldrsh	r3, [sp, #8]
   12dcc:	mov	r2, r5
   12dd0:	mov	r1, r7
   12dd4:	mov	r0, r6
   12dd8:	bl	14128 <table_set_int16@@Base>
   12ddc:	b	12d18 <table_cell_from_buffer@@Base+0xb8>
   12de0:	add	r2, sp, #8
   12de4:	ldr	r1, [pc, #988]	; 131c8 <table_cell_from_buffer@@Base+0x568>
   12de8:	mov	r0, r4
   12dec:	bl	11c1c <__isoc99_sscanf@plt>
   12df0:	cmp	r0, #1
   12df4:	bne	131ac <table_cell_from_buffer@@Base+0x54c>
   12df8:	ldrh	r3, [sp, #8]
   12dfc:	mov	r2, r5
   12e00:	mov	r1, r7
   12e04:	mov	r0, r6
   12e08:	bl	1414c <table_set_uint16@@Base>
   12e0c:	b	12d18 <table_cell_from_buffer@@Base+0xb8>
   12e10:	add	r2, sp, #8
   12e14:	ldr	r1, [pc, #920]	; 131b4 <table_cell_from_buffer@@Base+0x554>
   12e18:	mov	r0, r4
   12e1c:	bl	11c1c <__isoc99_sscanf@plt>
   12e20:	cmp	r0, #1
   12e24:	bne	131ac <table_cell_from_buffer@@Base+0x54c>
   12e28:	ldr	r3, [sp, #8]
   12e2c:	mov	r2, r5
   12e30:	mov	r1, r7
   12e34:	mov	r0, r6
   12e38:	bl	14170 <table_set_int32@@Base>
   12e3c:	b	12d18 <table_cell_from_buffer@@Base+0xb8>
   12e40:	add	r2, sp, #8
   12e44:	ldr	r1, [pc, #876]	; 131b8 <table_cell_from_buffer@@Base+0x558>
   12e48:	mov	r0, r4
   12e4c:	bl	11c1c <__isoc99_sscanf@plt>
   12e50:	cmp	r0, #1
   12e54:	bne	131ac <table_cell_from_buffer@@Base+0x54c>
   12e58:	ldr	r3, [sp, #8]
   12e5c:	mov	r2, r5
   12e60:	mov	r1, r7
   12e64:	mov	r0, r6
   12e68:	bl	14194 <table_set_uint32@@Base>
   12e6c:	b	12d18 <table_cell_from_buffer@@Base+0xb8>
   12e70:	add	r2, sp, #8
   12e74:	ldr	r1, [pc, #848]	; 131cc <table_cell_from_buffer@@Base+0x56c>
   12e78:	mov	r0, r4
   12e7c:	bl	11c1c <__isoc99_sscanf@plt>
   12e80:	cmp	r0, #1
   12e84:	bne	131ac <table_cell_from_buffer@@Base+0x54c>
   12e88:	ldrd	r2, [sp, #8]
   12e8c:	mov	r1, r7
   12e90:	mov	r0, r6
   12e94:	strd	r2, [sp]
   12e98:	mov	r2, r5
   12e9c:	bl	141b8 <table_set_int64@@Base>
   12ea0:	b	12d18 <table_cell_from_buffer@@Base+0xb8>
   12ea4:	add	r2, sp, #8
   12ea8:	ldr	r1, [pc, #800]	; 131d0 <table_cell_from_buffer@@Base+0x570>
   12eac:	mov	r0, r4
   12eb0:	bl	11c1c <__isoc99_sscanf@plt>
   12eb4:	cmp	r0, #1
   12eb8:	bne	131ac <table_cell_from_buffer@@Base+0x54c>
   12ebc:	ldrd	r2, [sp, #8]
   12ec0:	mov	r1, r7
   12ec4:	mov	r0, r6
   12ec8:	strd	r2, [sp]
   12ecc:	mov	r2, r5
   12ed0:	bl	141d4 <table_set_uint64@@Base>
   12ed4:	b	12d18 <table_cell_from_buffer@@Base+0xb8>
   12ed8:	add	r2, sp, #8
   12edc:	ldr	r1, [pc, #736]	; 131c4 <table_cell_from_buffer@@Base+0x564>
   12ee0:	mov	r0, r4
   12ee4:	bl	11c1c <__isoc99_sscanf@plt>
   12ee8:	cmp	r0, #1
   12eec:	bne	131ac <table_cell_from_buffer@@Base+0x54c>
   12ef0:	ldrsh	r3, [sp, #8]
   12ef4:	mov	r2, r5
   12ef8:	mov	r1, r7
   12efc:	mov	r0, r6
   12f00:	bl	141f0 <table_set_short@@Base>
   12f04:	b	12d18 <table_cell_from_buffer@@Base+0xb8>
   12f08:	add	r2, sp, #8
   12f0c:	ldr	r1, [pc, #692]	; 131c8 <table_cell_from_buffer@@Base+0x568>
   12f10:	mov	r0, r4
   12f14:	bl	11c1c <__isoc99_sscanf@plt>
   12f18:	cmp	r0, #1
   12f1c:	bne	131ac <table_cell_from_buffer@@Base+0x54c>
   12f20:	ldrh	r3, [sp, #8]
   12f24:	mov	r2, r5
   12f28:	mov	r1, r7
   12f2c:	mov	r0, r6
   12f30:	bl	14214 <table_set_ushort@@Base>
   12f34:	b	12d18 <table_cell_from_buffer@@Base+0xb8>
   12f38:	add	r2, sp, #8
   12f3c:	ldr	r1, [pc, #656]	; 131d4 <table_cell_from_buffer@@Base+0x574>
   12f40:	mov	r0, r4
   12f44:	bl	11c1c <__isoc99_sscanf@plt>
   12f48:	cmp	r0, #1
   12f4c:	bne	131ac <table_cell_from_buffer@@Base+0x54c>
   12f50:	ldr	r3, [sp, #8]
   12f54:	mov	r2, r5
   12f58:	mov	r1, r7
   12f5c:	mov	r0, r6
   12f60:	bl	14238 <table_set_long@@Base>
   12f64:	b	12d18 <table_cell_from_buffer@@Base+0xb8>
   12f68:	add	r2, sp, #8
   12f6c:	ldr	r1, [pc, #612]	; 131d8 <table_cell_from_buffer@@Base+0x578>
   12f70:	mov	r0, r4
   12f74:	bl	11c1c <__isoc99_sscanf@plt>
   12f78:	cmp	r0, #1
   12f7c:	bne	131ac <table_cell_from_buffer@@Base+0x54c>
   12f80:	ldr	r3, [sp, #8]
   12f84:	mov	r2, r5
   12f88:	mov	r1, r7
   12f8c:	mov	r0, r6
   12f90:	bl	1425c <table_set_ulong@@Base>
   12f94:	b	12d18 <table_cell_from_buffer@@Base+0xb8>
   12f98:	add	r2, sp, #8
   12f9c:	ldr	r1, [pc, #552]	; 131cc <table_cell_from_buffer@@Base+0x56c>
   12fa0:	mov	r0, r4
   12fa4:	bl	11c1c <__isoc99_sscanf@plt>
   12fa8:	cmp	r0, #1
   12fac:	bne	131ac <table_cell_from_buffer@@Base+0x54c>
   12fb0:	ldrd	r2, [sp, #8]
   12fb4:	mov	r1, r7
   12fb8:	mov	r0, r6
   12fbc:	strd	r2, [sp]
   12fc0:	mov	r2, r5
   12fc4:	bl	14280 <table_set_llong@@Base>
   12fc8:	b	12d18 <table_cell_from_buffer@@Base+0xb8>
   12fcc:	add	r2, sp, #8
   12fd0:	ldr	r1, [pc, #504]	; 131d0 <table_cell_from_buffer@@Base+0x570>
   12fd4:	mov	r0, r4
   12fd8:	bl	11c1c <__isoc99_sscanf@plt>
   12fdc:	cmp	r0, #1
   12fe0:	bne	131ac <table_cell_from_buffer@@Base+0x54c>
   12fe4:	ldrd	r2, [sp, #8]
   12fe8:	mov	r1, r7
   12fec:	mov	r0, r6
   12ff0:	strd	r2, [sp]
   12ff4:	mov	r2, r5
   12ff8:	bl	1429c <table_set_ullong@@Base>
   12ffc:	b	12d18 <table_cell_from_buffer@@Base+0xb8>
   13000:	add	r2, sp, #8
   13004:	ldr	r1, [pc, #464]	; 131dc <table_cell_from_buffer@@Base+0x57c>
   13008:	mov	r0, r4
   1300c:	bl	11c1c <__isoc99_sscanf@plt>
   13010:	cmp	r0, #1
   13014:	bne	131ac <table_cell_from_buffer@@Base+0x54c>
   13018:	add	r3, sp, #8
   1301c:	mov	r2, r5
   13020:	mov	r1, r7
   13024:	mov	r0, r6
   13028:	bl	14318 <table_set_string@@Base>
   1302c:	b	12d18 <table_cell_from_buffer@@Base+0xb8>
   13030:	add	r2, sp, #8
   13034:	ldr	r1, [pc, #420]	; 131e0 <table_cell_from_buffer@@Base+0x580>
   13038:	mov	r0, r4
   1303c:	bl	11c1c <__isoc99_sscanf@plt>
   13040:	cmp	r0, #1
   13044:	bne	131ac <table_cell_from_buffer@@Base+0x54c>
   13048:	vldr	s0, [sp, #8]
   1304c:	mov	r2, r5
   13050:	mov	r1, r7
   13054:	mov	r0, r6
   13058:	bl	142b8 <table_set_float@@Base>
   1305c:	b	12d18 <table_cell_from_buffer@@Base+0xb8>
   13060:	add	r2, sp, #8
   13064:	ldr	r1, [pc, #376]	; 131e4 <table_cell_from_buffer@@Base+0x584>
   13068:	mov	r0, r4
   1306c:	bl	11c1c <__isoc99_sscanf@plt>
   13070:	cmp	r0, #1
   13074:	bne	131ac <table_cell_from_buffer@@Base+0x54c>
   13078:	vldr	d0, [sp, #8]
   1307c:	mov	r2, r5
   13080:	mov	r1, r7
   13084:	mov	r0, r6
   13088:	bl	142d8 <table_set_double@@Base>
   1308c:	b	12d18 <table_cell_from_buffer@@Base+0xb8>
   13090:	add	r2, sp, #8
   13094:	ldr	r1, [pc, #332]	; 131e8 <table_cell_from_buffer@@Base+0x588>
   13098:	mov	r0, r4
   1309c:	bl	11c1c <__isoc99_sscanf@plt>
   130a0:	cmp	r0, #1
   130a4:	bne	131ac <table_cell_from_buffer@@Base+0x54c>
   130a8:	vldr	d0, [sp, #8]
   130ac:	mov	r2, r5
   130b0:	mov	r1, r7
   130b4:	mov	r0, r6
   130b8:	bl	142f8 <table_set_ldouble@@Base>
   130bc:	b	12d18 <table_cell_from_buffer@@Base+0xb8>
   130c0:	add	r2, sp, #8
   130c4:	ldr	r1, [pc, #232]	; 131b4 <table_cell_from_buffer@@Base+0x554>
   130c8:	mov	r0, r4
   130cc:	bl	11c1c <__isoc99_sscanf@plt>
   130d0:	cmp	r0, #1
   130d4:	mov	r3, r0
   130d8:	bne	131ac <table_cell_from_buffer@@Base+0x54c>
   130dc:	ldr	r4, [sp, #8]
   130e0:	cmp	r4, #0
   130e4:	beq	130fc <table_cell_from_buffer@@Base+0x49c>
   130e8:	mov	r2, r5
   130ec:	mov	r1, r7
   130f0:	mov	r0, r6
   130f4:	bl	14074 <table_set_bool@@Base>
   130f8:	b	12d18 <table_cell_from_buffer@@Base+0xb8>
   130fc:	mov	r3, r4
   13100:	mov	r2, r5
   13104:	mov	r1, r7
   13108:	mov	r0, r6
   1310c:	bl	14074 <table_set_bool@@Base>
   13110:	mov	r0, r4
   13114:	add	sp, sp, #268	; 0x10c
   13118:	pop	{r4, r5, r6, r7, pc}
   1311c:	add	r2, sp, #8
   13120:	ldr	r1, [pc, #196]	; 131ec <table_cell_from_buffer@@Base+0x58c>
   13124:	mov	r0, r4
   13128:	bl	11c1c <__isoc99_sscanf@plt>
   1312c:	cmp	r0, #1
   13130:	bne	131ac <table_cell_from_buffer@@Base+0x54c>
   13134:	ldrb	r3, [sp, #8]
   13138:	mov	r2, r5
   1313c:	mov	r1, r7
   13140:	mov	r0, r6
   13144:	bl	14330 <table_set_char@@Base>
   13148:	b	12d18 <table_cell_from_buffer@@Base+0xb8>
   1314c:	add	r2, sp, #8
   13150:	ldr	r1, [pc, #148]	; 131ec <table_cell_from_buffer@@Base+0x58c>
   13154:	mov	r0, r4
   13158:	bl	11c1c <__isoc99_sscanf@plt>
   1315c:	cmp	r0, #1
   13160:	bne	131ac <table_cell_from_buffer@@Base+0x54c>
   13164:	ldrb	r3, [sp, #8]
   13168:	mov	r2, r5
   1316c:	mov	r1, r7
   13170:	mov	r0, r6
   13174:	bl	14354 <table_set_uchar@@Base>
   13178:	b	12d18 <table_cell_from_buffer@@Base+0xb8>
   1317c:	add	r2, sp, #8
   13180:	ldr	r1, [pc, #104]	; 131f0 <table_cell_from_buffer@@Base+0x590>
   13184:	mov	r0, r4
   13188:	bl	11c1c <__isoc99_sscanf@plt>
   1318c:	cmp	r0, #1
   13190:	bne	131ac <table_cell_from_buffer@@Base+0x54c>
   13194:	ldr	r3, [sp, #8]
   13198:	mov	r2, r5
   1319c:	mov	r1, r7
   131a0:	mov	r0, r6
   131a4:	bl	14378 <table_set_ptr@@Base>
   131a8:	b	12d18 <table_cell_from_buffer@@Base+0xb8>
   131ac:	mvn	r4, #0
   131b0:	b	13110 <table_cell_from_buffer@@Base+0x4b0>
   131b4:	andeq	r4, r1, r4, lsl #24
   131b8:	andeq	r4, r1, r4, lsr #25
   131bc:	ldrdeq	r4, [r1], -r5
   131c0:	ldrdeq	r4, [r1], -sl
   131c4:			; <UNDEFINED> instruction: 0x00014cb1
   131c8:			; <UNDEFINED> instruction: 0x00014cb5
   131cc:	andeq	r4, r1, r7, lsr #25
   131d0:	andeq	r4, r1, ip, lsr #25
   131d4:			; <UNDEFINED> instruction: 0x00014cb9
   131d8:			; <UNDEFINED> instruction: 0x00014cbd
   131dc:	andeq	r4, r1, r1, asr #25
   131e0:	andeq	r4, r1, r4, asr #25
   131e4:	andeq	r4, r1, r7, asr #25
   131e8:	andeq	r4, r1, fp, asr #25
   131ec:	andeq	r4, r1, pc, asr #25
   131f0:	ldrdeq	r4, [r1], -r2

000131f4 <table_get_cell_ptr@@Base>:
   131f4:	push	{r4, lr}
   131f8:	mov	r4, r2
   131fc:	bl	13d78 <table_get_row_ptr@@Base>
   13200:	ldr	r0, [r0]
   13204:	add	r0, r0, r4, lsl #2
   13208:	pop	{r4, pc}

0001320c <table_cell_init@@Base>:
   1320c:	push	{r4, lr}
   13210:	bl	131f4 <table_get_cell_ptr@@Base>
   13214:	mov	r3, #0
   13218:	str	r3, [r0]
   1321c:	pop	{r4, pc}

00013220 <table_cell_destroy@@Base>:
   13220:	push	{r4, r5, r6, lr}
   13224:	mov	r6, r1
   13228:	mov	r1, r2
   1322c:	mov	r5, r0
   13230:	mov	r4, r2
   13234:	bl	13354 <table_get_column_data_type@@Base>
   13238:	cmp	r0, #23
   1323c:	popeq	{r4, r5, r6, pc}
   13240:	mov	r2, r4
   13244:	mov	r1, r6
   13248:	mov	r0, r5
   1324c:	bl	131f4 <table_get_cell_ptr@@Base>
   13250:	ldr	r0, [r0]
   13254:	cmp	r0, #0
   13258:	popeq	{r4, r5, r6, pc}
   1325c:	pop	{r4, r5, r6, lr}
   13260:	b	11b98 <free@plt>

00013264 <table_cell_nullify@@Base>:
   13264:	push	{r4, lr}
   13268:	bl	131f4 <table_get_cell_ptr@@Base>
   1326c:	mov	r4, r0
   13270:	ldr	r0, [r0]
   13274:	cmp	r0, #0
   13278:	beq	13288 <table_cell_nullify@@Base+0x24>
   1327c:	bl	11b98 <free@plt>
   13280:	mov	r3, #0
   13284:	str	r3, [r4]
   13288:	mov	r0, #0
   1328c:	pop	{r4, pc}

00013290 <table_column_init@@Base>:
   13290:	push	{r4, r5, r6, r7, r8, lr}
   13294:	mov	r4, #12
   13298:	ldr	r7, [r0]
   1329c:	mov	r0, r2
   132a0:	mul	r4, r4, r1
   132a4:	mov	r6, r2
   132a8:	mov	r8, r3
   132ac:	bl	11bf8 <strlen@plt>
   132b0:	add	r5, r7, r4
   132b4:	add	r0, r0, #1
   132b8:	bl	11bd4 <malloc@plt>
   132bc:	cmp	r0, #0
   132c0:	str	r0, [r7, r4]
   132c4:	beq	132d0 <table_column_init@@Base+0x40>
   132c8:	mov	r1, r6
   132cc:	bl	11bbc <strcpy@plt>
   132d0:	ldr	r3, [sp, #24]
   132d4:	str	r8, [r5, #4]
   132d8:	str	r3, [r5, #8]
   132dc:	pop	{r4, r5, r6, r7, r8, pc}

000132e0 <table_column_destroy@@Base>:
   132e0:	mov	r3, #12
   132e4:	ldr	r2, [r0]
   132e8:	mul	r1, r3, r1
   132ec:	ldr	r0, [r2, r1]
   132f0:	cmp	r0, #0
   132f4:	bxeq	lr
   132f8:	b	11b98 <free@plt>

000132fc <table_get_column_length@@Base>:
   132fc:	ldr	r0, [r0, #4]
   13300:	bx	lr

00013304 <table_get_column@@Base>:
   13304:	push	{r4, r5, r6, r7, r8, lr}
   13308:	mov	r5, r0
   1330c:	ldr	r6, [r0, #4]
   13310:	mov	r7, r1
   13314:	mov	r4, #0
   13318:	mov	r8, #12
   1331c:	cmp	r4, r6
   13320:	blt	13330 <table_get_column@@Base+0x2c>
   13324:	mvneq	r4, #0
   13328:	mov	r0, r4
   1332c:	pop	{r4, r5, r6, r7, r8, pc}
   13330:	mul	r3, r8, r4
   13334:	ldr	r2, [r5]
   13338:	mov	r1, r7
   1333c:	ldr	r0, [r2, r3]
   13340:	bl	11b80 <strcmp@plt>
   13344:	cmp	r0, #0
   13348:	beq	13328 <table_get_column@@Base+0x24>
   1334c:	add	r4, r4, #1
   13350:	b	1331c <table_get_column@@Base+0x18>

00013354 <table_get_column_data_type@@Base>:
   13354:	ldr	r2, [r0]
   13358:	mov	r3, #12
   1335c:	mla	r1, r3, r1, r2
   13360:	ldr	r0, [r1, #4]
   13364:	bx	lr

00013368 <table_add_column@@Base>:
   13368:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   1336c:	mov	r4, r0
   13370:	ldr	r6, [r0, #8]
   13374:	mov	r8, r1
   13378:	ldr	r0, [r0, #4]
   1337c:	mov	r1, r6
   13380:	mov	r7, r2
   13384:	bl	14920 <table_column_sort@@Base+0x3e0>
   13388:	subs	r5, r1, #0
   1338c:	beq	133f4 <table_add_column@@Base+0x8c>
   13390:	mov	r0, r4
   13394:	bl	13bd4 <table_get_row_length@@Base>
   13398:	ldr	r6, [r4, #4]
   1339c:	mov	r5, #0
   133a0:	mov	r9, r0
   133a4:	mov	r0, r7
   133a8:	bl	13a34 <table_get_default_compare_function_for_data_type@@Base>
   133ac:	mov	r3, r7
   133b0:	mov	r2, r8
   133b4:	mov	r1, r6
   133b8:	str	r0, [sp]
   133bc:	mov	r0, r4
   133c0:	bl	13290 <table_column_init@@Base>
   133c4:	cmp	r9, r5
   133c8:	bgt	13454 <table_add_column@@Base+0xec>
   133cc:	mov	r0, r4
   133d0:	mov	r3, #8
   133d4:	ldr	r2, [r4, #4]
   133d8:	mvn	r1, #0
   133dc:	bl	12908 <table_notify@@Base>
   133e0:	ldr	r0, [r4, #4]
   133e4:	add	r3, r0, #1
   133e8:	str	r3, [r4, #4]
   133ec:	add	sp, sp, #12
   133f0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   133f4:	ldr	r1, [r4, #12]
   133f8:	ldr	r0, [r4]
   133fc:	add	r6, r6, r1
   13400:	mov	r1, #12
   13404:	str	r6, [r4, #12]
   13408:	mul	r1, r1, r6
   1340c:	bl	11bb0 <realloc@plt>
   13410:	str	r0, [r4]
   13414:	mov	r0, r4
   13418:	bl	13bd4 <table_get_row_length@@Base>
   1341c:	mov	r9, r0
   13420:	cmp	r9, r5
   13424:	ble	13390 <table_add_column@@Base+0x28>
   13428:	mov	r1, r5
   1342c:	mov	r0, r4
   13430:	bl	13d78 <table_get_row_ptr@@Base>
   13434:	ldr	r1, [r4, #12]
   13438:	add	r5, r5, #1
   1343c:	lsl	r1, r1, #2
   13440:	mov	r6, r0
   13444:	ldr	r0, [r0]
   13448:	bl	11bb0 <realloc@plt>
   1344c:	str	r0, [r6]
   13450:	b	13420 <table_add_column@@Base+0xb8>
   13454:	mov	r1, r5
   13458:	mov	r2, r6
   1345c:	mov	r0, r4
   13460:	bl	1320c <table_cell_init@@Base>
   13464:	add	r5, r5, #1
   13468:	b	133c4 <table_add_column@@Base+0x5c>

0001346c <table_remove_column@@Base>:
   1346c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13470:	mov	r5, r1
   13474:	mov	r4, r0
   13478:	bl	132e0 <table_column_destroy@@Base>
   1347c:	mov	r3, #12
   13480:	ldr	r7, [r4, #4]
   13484:	mul	r3, r3, r5
   13488:	mov	r1, r5
   1348c:	sub	r7, r7, #1
   13490:	cmp	r1, r7
   13494:	add	lr, r3, #12
   13498:	blt	13528 <table_remove_column@@Base+0xbc>
   1349c:	mov	r0, r4
   134a0:	bl	13bd4 <table_get_row_length@@Base>
   134a4:	lsl	r9, r5, #2
   134a8:	mov	r6, #0
   134ac:	mov	r8, r0
   134b0:	cmp	r8, r6
   134b4:	bgt	13558 <table_remove_column@@Base+0xec>
   134b8:	ldr	r0, [r4, #4]
   134bc:	ldr	r7, [r4, #8]
   134c0:	sub	r0, r0, #1
   134c4:	str	r0, [r4, #4]
   134c8:	mov	r1, r7
   134cc:	bl	14920 <table_column_sort@@Base+0x3e0>
   134d0:	subs	r6, r1, #0
   134d4:	bne	1350c <table_remove_column@@Base+0xa0>
   134d8:	ldr	r1, [r4, #12]
   134dc:	mov	r3, #12
   134e0:	sub	r1, r1, r7
   134e4:	str	r1, [r4, #12]
   134e8:	ldr	r0, [r4]
   134ec:	mul	r1, r3, r1
   134f0:	bl	11bb0 <realloc@plt>
   134f4:	str	r0, [r4]
   134f8:	mov	r0, r4
   134fc:	bl	13bd4 <table_get_row_length@@Base>
   13500:	mov	r8, r0
   13504:	cmp	r8, r6
   13508:	bgt	135a4 <table_remove_column@@Base+0x138>
   1350c:	mov	r0, r4
   13510:	mov	r3, #16
   13514:	mov	r2, r5
   13518:	mvn	r1, #0
   1351c:	bl	12908 <table_notify@@Base>
   13520:	mov	r0, #0
   13524:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13528:	ldr	ip, [r4]
   1352c:	add	r1, r1, #1
   13530:	add	r0, ip, lr
   13534:	add	r6, ip, r3
   13538:	ldr	r2, [r0]
   1353c:	str	r2, [ip, r3]
   13540:	ldr	r2, [r0, #4]
   13544:	mov	r3, lr
   13548:	str	r2, [r6, #4]
   1354c:	ldr	r2, [r0, #8]
   13550:	str	r2, [r6, #8]
   13554:	b	13490 <table_remove_column@@Base+0x24>
   13558:	mov	r2, r5
   1355c:	mov	r1, r6
   13560:	mov	r0, r4
   13564:	bl	13220 <table_cell_destroy@@Base>
   13568:	mov	r1, r6
   1356c:	mov	r0, r4
   13570:	bl	13d78 <table_get_row_ptr@@Base>
   13574:	mov	r2, r9
   13578:	mov	r3, r5
   1357c:	cmp	r7, r3
   13580:	add	r1, r2, #4
   13584:	addle	r6, r6, #1
   13588:	ble	134b0 <table_remove_column@@Base+0x44>
   1358c:	ldr	ip, [r0]
   13590:	add	r3, r3, #1
   13594:	ldr	lr, [ip, r1]
   13598:	str	lr, [ip, r2]
   1359c:	mov	r2, r1
   135a0:	b	1357c <table_remove_column@@Base+0x110>
   135a4:	mov	r1, r6
   135a8:	mov	r0, r4
   135ac:	bl	13d78 <table_get_row_ptr@@Base>
   135b0:	ldr	r1, [r4, #12]
   135b4:	add	r6, r6, #1
   135b8:	lsl	r1, r1, #2
   135bc:	mov	r7, r0
   135c0:	ldr	r0, [r0]
   135c4:	bl	11bb0 <realloc@plt>
   135c8:	str	r0, [r7]
   135cc:	b	13504 <table_remove_column@@Base+0x98>

000135d0 <table_get_column_name@@Base>:
   135d0:	mov	r3, #12
   135d4:	ldr	r2, [r0]
   135d8:	mul	r1, r3, r1
   135dc:	ldr	r0, [r2, r1]
   135e0:	bx	lr

000135e4 <table_get_col_ptr@@Base>:
   135e4:	ldr	r3, [r0]
   135e8:	mov	r0, #12
   135ec:	mla	r0, r0, r1, r3
   135f0:	bx	lr

000135f4 <table_get_column_compare_function@@Base>:
   135f4:	ldr	r2, [r0]
   135f8:	mov	r3, #12
   135fc:	mla	r1, r3, r1, r2
   13600:	ldr	r0, [r1, #8]
   13604:	bx	lr

00013608 <table_set_column_compare_function@@Base>:
   13608:	ldr	r0, [r0]
   1360c:	mov	r3, #12
   13610:	mla	r1, r3, r1, r0
   13614:	str	r2, [r1, #8]
   13618:	bx	lr

0001361c <table_compare_bool@@Base>:
   1361c:	cmp	r0, #0
   13620:	bne	13630 <table_compare_bool@@Base+0x14>
   13624:	adds	r0, r1, #0
   13628:	mvnne	r0, #0
   1362c:	bx	lr
   13630:	cmp	r1, #0
   13634:	beq	13654 <table_compare_bool@@Base+0x38>
   13638:	ldrb	r2, [r0]
   1363c:	ldrb	r3, [r1]
   13640:	cmp	r2, r3
   13644:	bgt	13654 <table_compare_bool@@Base+0x38>
   13648:	mvnlt	r0, #0
   1364c:	movge	r0, #0
   13650:	bx	lr
   13654:	mov	r0, #1
   13658:	bx	lr

0001365c <table_compare_int8@@Base>:
   1365c:	cmp	r0, #0
   13660:	bne	13670 <table_compare_int8@@Base+0x14>
   13664:	adds	r0, r1, #0
   13668:	mvnne	r0, #0
   1366c:	bx	lr
   13670:	cmp	r1, #0
   13674:	beq	13694 <table_compare_int8@@Base+0x38>
   13678:	ldrsb	r2, [r0]
   1367c:	ldrsb	r3, [r1]
   13680:	cmp	r2, r3
   13684:	bgt	13694 <table_compare_int8@@Base+0x38>
   13688:	mvnlt	r0, #0
   1368c:	movge	r0, #0
   13690:	bx	lr
   13694:	mov	r0, #1
   13698:	bx	lr

0001369c <table_compare_int32@@Base>:
   1369c:	cmp	r0, #0
   136a0:	bne	136b0 <table_compare_int32@@Base+0x14>
   136a4:	adds	r0, r1, #0
   136a8:	mvnne	r0, #0
   136ac:	bx	lr
   136b0:	cmp	r1, #0
   136b4:	beq	136d4 <table_compare_int32@@Base+0x38>
   136b8:	ldr	r2, [r0]
   136bc:	ldr	r3, [r1]
   136c0:	cmp	r2, r3
   136c4:	bgt	136d4 <table_compare_int32@@Base+0x38>
   136c8:	mvnlt	r0, #0
   136cc:	movge	r0, #0
   136d0:	bx	lr
   136d4:	mov	r0, #1
   136d8:	bx	lr

000136dc <table_compare_int@@Base>:
   136dc:	b	1369c <table_compare_int32@@Base>

000136e0 <table_compare_uint32@@Base>:
   136e0:	cmp	r0, #0
   136e4:	bne	136f4 <table_compare_uint32@@Base+0x14>
   136e8:	adds	r0, r1, #0
   136ec:	mvnne	r0, #0
   136f0:	bx	lr
   136f4:	cmp	r1, #0
   136f8:	beq	13718 <table_compare_uint32@@Base+0x38>
   136fc:	ldr	r2, [r0]
   13700:	ldr	r3, [r1]
   13704:	cmp	r2, r3
   13708:	bhi	13718 <table_compare_uint32@@Base+0x38>
   1370c:	mvncc	r0, #0
   13710:	movcs	r0, #0
   13714:	bx	lr
   13718:	mov	r0, #1
   1371c:	bx	lr

00013720 <table_compare_uint@@Base>:
   13720:	b	136e0 <table_compare_uint32@@Base>

00013724 <table_compare_uint64@@Base>:
   13724:	cmp	r0, #0
   13728:	bne	13738 <table_compare_uint64@@Base+0x14>
   1372c:	adds	r0, r1, #0
   13730:	mvnne	r0, #0
   13734:	bx	lr
   13738:	cmp	r1, #0
   1373c:	beq	13764 <table_compare_uint64@@Base+0x40>
   13740:	ldrd	r2, [r1]
   13744:	push	{r4, r5, lr}
   13748:	ldrd	r4, [r0]
   1374c:	cmp	r5, r3
   13750:	cmpeq	r4, r2
   13754:	bhi	1376c <table_compare_uint64@@Base+0x48>
   13758:	mvncc	r0, #0
   1375c:	movcs	r0, #0
   13760:	pop	{r4, r5, pc}
   13764:	mov	r0, #1
   13768:	bx	lr
   1376c:	mov	r0, #1
   13770:	pop	{r4, r5, pc}

00013774 <table_compare_short@@Base>:
   13774:	cmp	r0, #0
   13778:	bne	13788 <table_compare_short@@Base+0x14>
   1377c:	adds	r0, r1, #0
   13780:	mvnne	r0, #0
   13784:	bx	lr
   13788:	cmp	r1, #0
   1378c:	beq	137ac <table_compare_short@@Base+0x38>
   13790:	ldrsh	r2, [r0]
   13794:	ldrsh	r3, [r1]
   13798:	cmp	r2, r3
   1379c:	bgt	137ac <table_compare_short@@Base+0x38>
   137a0:	mvnlt	r0, #0
   137a4:	movge	r0, #0
   137a8:	bx	lr
   137ac:	mov	r0, #1
   137b0:	bx	lr

000137b4 <table_compare_int16@@Base>:
   137b4:	b	13774 <table_compare_short@@Base>

000137b8 <table_compare_ushort@@Base>:
   137b8:	cmp	r0, #0
   137bc:	bne	137cc <table_compare_ushort@@Base+0x14>
   137c0:	adds	r0, r1, #0
   137c4:	mvnne	r0, #0
   137c8:	bx	lr
   137cc:	cmp	r1, #0
   137d0:	beq	137f0 <table_compare_ushort@@Base+0x38>
   137d4:	ldrh	r2, [r0]
   137d8:	ldrh	r3, [r1]
   137dc:	cmp	r2, r3
   137e0:	bhi	137f0 <table_compare_ushort@@Base+0x38>
   137e4:	mvncc	r0, #0
   137e8:	movcs	r0, #0
   137ec:	bx	lr
   137f0:	mov	r0, #1
   137f4:	bx	lr

000137f8 <table_compare_uint16@@Base>:
   137f8:	b	137b8 <table_compare_ushort@@Base>

000137fc <table_compare_long@@Base>:
   137fc:	cmp	r0, #0
   13800:	bne	13810 <table_compare_long@@Base+0x14>
   13804:	adds	r0, r1, #0
   13808:	mvnne	r0, #0
   1380c:	bx	lr
   13810:	cmp	r1, #0
   13814:	beq	13834 <table_compare_long@@Base+0x38>
   13818:	ldr	r2, [r0]
   1381c:	ldr	r3, [r1]
   13820:	cmp	r2, r3
   13824:	bgt	13834 <table_compare_long@@Base+0x38>
   13828:	mvnlt	r0, #0
   1382c:	movge	r0, #0
   13830:	bx	lr
   13834:	mov	r0, #1
   13838:	bx	lr

0001383c <table_compare_llong@@Base>:
   1383c:	cmp	r0, #0
   13840:	bne	13850 <table_compare_llong@@Base+0x14>
   13844:	adds	r0, r1, #0
   13848:	mvnne	r0, #0
   1384c:	bx	lr
   13850:	cmp	r1, #0
   13854:	beq	13884 <table_compare_llong@@Base+0x48>
   13858:	ldrd	r2, [r1]
   1385c:	push	{r4, r5, lr}
   13860:	ldrd	r4, [r0]
   13864:	cmp	r2, r4
   13868:	sbcs	r1, r3, r5
   1386c:	blt	1388c <table_compare_llong@@Base+0x50>
   13870:	cmp	r4, r2
   13874:	sbcs	r3, r5, r3
   13878:	mvnlt	r0, #0
   1387c:	movge	r0, #0
   13880:	pop	{r4, r5, pc}
   13884:	mov	r0, #1
   13888:	bx	lr
   1388c:	mov	r0, #1
   13890:	pop	{r4, r5, pc}

00013894 <table_compare_int64@@Base>:
   13894:	b	1383c <table_compare_llong@@Base>

00013898 <table_compare_ullong@@Base>:
   13898:	cmp	r0, #0
   1389c:	bne	138ac <table_compare_ullong@@Base+0x14>
   138a0:	adds	r0, r1, #0
   138a4:	mvnne	r0, #0
   138a8:	bx	lr
   138ac:	cmp	r1, #0
   138b0:	beq	138d0 <table_compare_ullong@@Base+0x38>
   138b4:	ldr	r2, [r0]
   138b8:	ldr	r3, [r1]
   138bc:	cmp	r2, r3
   138c0:	bhi	138d0 <table_compare_ullong@@Base+0x38>
   138c4:	mvncc	r0, #0
   138c8:	movcs	r0, #0
   138cc:	bx	lr
   138d0:	mov	r0, #1
   138d4:	bx	lr

000138d8 <table_compare_ulong@@Base>:
   138d8:	b	13898 <table_compare_ullong@@Base>

000138dc <table_compare_float@@Base>:
   138dc:	cmp	r0, #0
   138e0:	bne	138f0 <table_compare_float@@Base+0x14>
   138e4:	adds	r0, r1, #0
   138e8:	mvnne	r0, #0
   138ec:	bx	lr
   138f0:	cmp	r1, #0
   138f4:	beq	13918 <table_compare_float@@Base+0x3c>
   138f8:	vldr	s14, [r0]
   138fc:	vldr	s15, [r1]
   13900:	vcmpe.f32	s14, s15
   13904:	vmrs	APSR_nzcv, fpscr
   13908:	bgt	13918 <table_compare_float@@Base+0x3c>
   1390c:	mvnmi	r0, #0
   13910:	movpl	r0, #0
   13914:	bx	lr
   13918:	mov	r0, #1
   1391c:	bx	lr

00013920 <table_compare_double@@Base>:
   13920:	cmp	r0, #0
   13924:	bne	13934 <table_compare_double@@Base+0x14>
   13928:	adds	r0, r1, #0
   1392c:	mvnne	r0, #0
   13930:	bx	lr
   13934:	cmp	r1, #0
   13938:	beq	1395c <table_compare_double@@Base+0x3c>
   1393c:	vldr	d6, [r0]
   13940:	vldr	d7, [r1]
   13944:	vcmpe.f64	d6, d7
   13948:	vmrs	APSR_nzcv, fpscr
   1394c:	bgt	1395c <table_compare_double@@Base+0x3c>
   13950:	mvnmi	r0, #0
   13954:	movpl	r0, #0
   13958:	bx	lr
   1395c:	mov	r0, #1
   13960:	bx	lr

00013964 <table_compare_ldouble@@Base>:
   13964:	cmp	r0, #0
   13968:	bne	13978 <table_compare_ldouble@@Base+0x14>
   1396c:	adds	r0, r1, #0
   13970:	mvnne	r0, #0
   13974:	bx	lr
   13978:	cmp	r1, #0
   1397c:	beq	139a0 <table_compare_ldouble@@Base+0x3c>
   13980:	vldr	d6, [r0]
   13984:	vldr	d7, [r1]
   13988:	vcmpe.f64	d6, d7
   1398c:	vmrs	APSR_nzcv, fpscr
   13990:	bgt	139a0 <table_compare_ldouble@@Base+0x3c>
   13994:	mvnmi	r0, #0
   13998:	movpl	r0, #0
   1399c:	bx	lr
   139a0:	mov	r0, #1
   139a4:	bx	lr

000139a8 <table_compare_uchar@@Base>:
   139a8:	cmp	r0, #0
   139ac:	bne	139bc <table_compare_uchar@@Base+0x14>
   139b0:	adds	r0, r1, #0
   139b4:	mvnne	r0, #0
   139b8:	bx	lr
   139bc:	cmp	r1, #0
   139c0:	beq	139e0 <table_compare_uchar@@Base+0x38>
   139c4:	ldrb	r2, [r0]
   139c8:	ldrb	r3, [r1]
   139cc:	cmp	r2, r3
   139d0:	bhi	139e0 <table_compare_uchar@@Base+0x38>
   139d4:	mvncc	r0, #0
   139d8:	movcs	r0, #0
   139dc:	bx	lr
   139e0:	mov	r0, #1
   139e4:	bx	lr

000139e8 <table_compare_char@@Base>:
   139e8:	b	139a8 <table_compare_uchar@@Base>

000139ec <table_compare_uint8@@Base>:
   139ec:	b	139a8 <table_compare_uchar@@Base>

000139f0 <table_compare_ptr@@Base>:
   139f0:	cmp	r0, r1
   139f4:	bhi	13a04 <table_compare_ptr@@Base+0x14>
   139f8:	mvncc	r0, #0
   139fc:	movcs	r0, #0
   13a00:	bx	lr
   13a04:	mov	r0, #1
   13a08:	bx	lr

00013a0c <table_compare_string@@Base>:
   13a0c:	cmp	r0, #0
   13a10:	bne	13a20 <table_compare_string@@Base+0x14>
   13a14:	adds	r0, r1, #0
   13a18:	mvnne	r0, #0
   13a1c:	bx	lr
   13a20:	cmp	r1, #0
   13a24:	beq	13a2c <table_compare_string@@Base+0x20>
   13a28:	b	11b80 <strcmp@plt>
   13a2c:	mov	r0, #1
   13a30:	bx	lr

00013a34 <table_get_default_compare_function_for_data_type@@Base>:
   13a34:	cmp	r0, #23
   13a38:	ldrls	r3, [pc, #8]	; 13a48 <table_get_default_compare_function_for_data_type@@Base+0x14>
   13a3c:	ldrls	r0, [r3, r0, lsl #2]
   13a40:	movhi	r0, #0
   13a44:	bx	lr
   13a48:	andeq	r4, r1, r0, ror #25

00013a4c <table_get@@Base>:
   13a4c:	push	{r4, lr}
   13a50:	bl	131f4 <table_get_cell_ptr@@Base>
   13a54:	ldr	r0, [r0]
   13a58:	pop	{r4, pc}

00013a5c <table_get_bool@@Base>:
   13a5c:	push	{r4, lr}
   13a60:	bl	13a4c <table_get@@Base>
   13a64:	ldrb	r0, [r0]
   13a68:	pop	{r4, pc}

00013a6c <table_get_int8@@Base>:
   13a6c:	push	{r4, lr}
   13a70:	bl	13a4c <table_get@@Base>
   13a74:	ldrsb	r0, [r0]
   13a78:	pop	{r4, pc}

00013a7c <table_get_int32@@Base>:
   13a7c:	push	{r4, lr}
   13a80:	bl	13a4c <table_get@@Base>
   13a84:	ldr	r0, [r0]
   13a88:	pop	{r4, pc}

00013a8c <table_get_int@@Base>:
   13a8c:	b	13a7c <table_get_int32@@Base>

00013a90 <table_get_uint32@@Base>:
   13a90:	push	{r4, lr}
   13a94:	bl	13a4c <table_get@@Base>
   13a98:	ldr	r0, [r0]
   13a9c:	pop	{r4, pc}

00013aa0 <table_get_uint@@Base>:
   13aa0:	b	13a90 <table_get_uint32@@Base>

00013aa4 <table_get_short@@Base>:
   13aa4:	push	{r4, lr}
   13aa8:	bl	13a4c <table_get@@Base>
   13aac:	ldrsh	r0, [r0]
   13ab0:	pop	{r4, pc}

00013ab4 <table_get_int16@@Base>:
   13ab4:	b	13aa4 <table_get_short@@Base>

00013ab8 <table_get_ushort@@Base>:
   13ab8:	push	{r4, lr}
   13abc:	bl	13a4c <table_get@@Base>
   13ac0:	ldrh	r0, [r0]
   13ac4:	pop	{r4, pc}

00013ac8 <table_get_uint16@@Base>:
   13ac8:	b	13ab8 <table_get_ushort@@Base>

00013acc <table_get_long@@Base>:
   13acc:	push	{r4, lr}
   13ad0:	bl	13a4c <table_get@@Base>
   13ad4:	ldr	r0, [r0]
   13ad8:	pop	{r4, pc}

00013adc <table_get_ulong@@Base>:
   13adc:	push	{r4, lr}
   13ae0:	bl	13a4c <table_get@@Base>
   13ae4:	ldr	r0, [r0]
   13ae8:	pop	{r4, pc}

00013aec <table_get_llong@@Base>:
   13aec:	push	{r4, lr}
   13af0:	bl	13a4c <table_get@@Base>
   13af4:	ldrd	r0, [r0]
   13af8:	pop	{r4, pc}

00013afc <table_get_int64@@Base>:
   13afc:	b	13aec <table_get_llong@@Base>

00013b00 <table_get_ullong@@Base>:
   13b00:	push	{r4, lr}
   13b04:	bl	13a4c <table_get@@Base>
   13b08:	ldrd	r0, [r0]
   13b0c:	pop	{r4, pc}

00013b10 <table_get_uint64@@Base>:
   13b10:	b	13b00 <table_get_ullong@@Base>

00013b14 <table_get_float@@Base>:
   13b14:	push	{r4, lr}
   13b18:	bl	13a4c <table_get@@Base>
   13b1c:	vldr	s0, [r0]
   13b20:	pop	{r4, pc}

00013b24 <table_get_double@@Base>:
   13b24:	push	{r4, lr}
   13b28:	bl	13a4c <table_get@@Base>
   13b2c:	vldr	d0, [r0]
   13b30:	pop	{r4, pc}

00013b34 <table_get_ldouble@@Base>:
   13b34:	push	{r4, lr}
   13b38:	bl	13a4c <table_get@@Base>
   13b3c:	vldr	d0, [r0]
   13b40:	pop	{r4, pc}

00013b44 <table_get_uchar@@Base>:
   13b44:	push	{r4, lr}
   13b48:	bl	13a4c <table_get@@Base>
   13b4c:	ldrb	r0, [r0]
   13b50:	pop	{r4, pc}

00013b54 <table_get_char@@Base>:
   13b54:	b	13b44 <table_get_uchar@@Base>

00013b58 <table_get_uint8@@Base>:
   13b58:	b	13b44 <table_get_uchar@@Base>

00013b5c <table_get_string@@Base>:
   13b5c:	b	13a4c <table_get@@Base>

00013b60 <table_get_ptr@@Base>:
   13b60:	b	13a4c <table_get@@Base>

00013b64 <table_row_init@@Base>:
   13b64:	push	{r4, r5, r6, lr}
   13b68:	mov	r5, r1
   13b6c:	ldr	r4, [r0, #16]
   13b70:	ldr	r0, [r0, #12]
   13b74:	lsl	r0, r0, #2
   13b78:	bl	11bd4 <malloc@plt>
   13b7c:	str	r0, [r4, r5, lsl #2]
   13b80:	pop	{r4, r5, r6, pc}

00013b84 <table_row_destroy@@Base>:
   13b84:	push	{r4, r5, r6, r7, r8, lr}
   13b88:	mov	r6, r0
   13b8c:	mov	r5, r1
   13b90:	bl	132fc <table_get_column_length@@Base>
   13b94:	ldr	r7, [r6, #16]
   13b98:	mov	r4, #0
   13b9c:	mov	r8, r0
   13ba0:	cmp	r4, r8
   13ba4:	blt	13bbc <table_row_destroy@@Base+0x38>
   13ba8:	ldr	r0, [r7, r5, lsl #2]
   13bac:	cmp	r0, #0
   13bb0:	popeq	{r4, r5, r6, r7, r8, pc}
   13bb4:	pop	{r4, r5, r6, r7, r8, lr}
   13bb8:	b	11b98 <free@plt>
   13bbc:	mov	r2, r4
   13bc0:	mov	r1, r5
   13bc4:	mov	r0, r6
   13bc8:	bl	13220 <table_cell_destroy@@Base>
   13bcc:	add	r4, r4, #1
   13bd0:	b	13ba0 <table_row_destroy@@Base+0x1c>

00013bd4 <table_get_row_length@@Base>:
   13bd4:	ldr	r0, [r0, #20]
   13bd8:	bx	lr

00013bdc <table_add_row@@Base>:
   13bdc:	push	{r4, r5, r6, r7, r8, lr}
   13be0:	mov	r4, r0
   13be4:	ldr	r5, [r0, #24]
   13be8:	ldr	r0, [r0, #20]
   13bec:	mov	r1, r5
   13bf0:	bl	14920 <table_column_sort@@Base+0x3e0>
   13bf4:	cmp	r1, #0
   13bf8:	bne	13c18 <table_add_row@@Base+0x3c>
   13bfc:	ldr	r1, [r4, #28]
   13c00:	ldr	r0, [r4, #16]
   13c04:	add	r1, r5, r1
   13c08:	str	r1, [r4, #28]
   13c0c:	lsl	r1, r1, #2
   13c10:	bl	11bb0 <realloc@plt>
   13c14:	str	r0, [r4, #16]
   13c18:	mov	r0, r4
   13c1c:	ldr	r6, [r4, #20]
   13c20:	bl	132fc <table_get_column_length@@Base>
   13c24:	mov	r1, r6
   13c28:	mov	r5, #0
   13c2c:	mov	r7, r0
   13c30:	mov	r0, r4
   13c34:	bl	13b64 <table_row_init@@Base>
   13c38:	cmp	r7, r5
   13c3c:	bgt	13c64 <table_add_row@@Base+0x88>
   13c40:	mov	r0, r4
   13c44:	mov	r3, #2
   13c48:	mvn	r2, #0
   13c4c:	ldr	r1, [r4, #20]
   13c50:	bl	12908 <table_notify@@Base>
   13c54:	ldr	r0, [r4, #20]
   13c58:	add	r3, r0, #1
   13c5c:	str	r3, [r4, #20]
   13c60:	pop	{r4, r5, r6, r7, r8, pc}
   13c64:	mov	r2, r5
   13c68:	mov	r1, r6
   13c6c:	mov	r0, r4
   13c70:	bl	1320c <table_cell_init@@Base>
   13c74:	add	r5, r5, #1
   13c78:	b	13c38 <table_add_row@@Base+0x5c>

00013c7c <table_remove_row@@Base>:
   13c7c:	push	{r4, r5, r6, r7, r8, lr}
   13c80:	mov	r4, r0
   13c84:	mov	r5, r1
   13c88:	ldr	r7, [r0, #20]
   13c8c:	bl	132fc <table_get_column_length@@Base>
   13c90:	mov	r6, #0
   13c94:	mov	r8, r0
   13c98:	cmp	r8, r6
   13c9c:	bgt	13d24 <table_remove_row@@Base+0xa8>
   13ca0:	ldr	r3, [r4, #16]
   13ca4:	lsl	r6, r5, #2
   13ca8:	ldr	r0, [r3, r5, lsl #2]
   13cac:	cmp	r0, #0
   13cb0:	beq	13cb8 <table_remove_row@@Base+0x3c>
   13cb4:	bl	11b98 <free@plt>
   13cb8:	mov	r3, r5
   13cbc:	sub	r7, r7, #1
   13cc0:	cmp	r3, r7
   13cc4:	add	r2, r6, #4
   13cc8:	blt	13d60 <table_remove_row@@Base+0xe4>
   13ccc:	ldr	r0, [r4, #20]
   13cd0:	ldr	r6, [r4, #24]
   13cd4:	sub	r0, r0, #1
   13cd8:	str	r0, [r4, #20]
   13cdc:	mov	r1, r6
   13ce0:	bl	14920 <table_column_sort@@Base+0x3e0>
   13ce4:	cmp	r1, #0
   13ce8:	bne	13d08 <table_remove_row@@Base+0x8c>
   13cec:	ldr	r1, [r4, #28]
   13cf0:	ldr	r0, [r4, #16]
   13cf4:	sub	r1, r1, r6
   13cf8:	str	r1, [r4, #28]
   13cfc:	lsl	r1, r1, #2
   13d00:	bl	11bb0 <realloc@plt>
   13d04:	str	r0, [r4, #16]
   13d08:	mov	r0, r4
   13d0c:	mov	r3, #4
   13d10:	mvn	r2, #0
   13d14:	mov	r1, r5
   13d18:	bl	12908 <table_notify@@Base>
   13d1c:	mov	r0, #0
   13d20:	pop	{r4, r5, r6, r7, r8, pc}
   13d24:	mov	r1, r6
   13d28:	mov	r0, r4
   13d2c:	bl	13354 <table_get_column_data_type@@Base>
   13d30:	cmp	r0, #23
   13d34:	beq	13d58 <table_remove_row@@Base+0xdc>
   13d38:	mov	r2, r6
   13d3c:	mov	r1, r5
   13d40:	mov	r0, r4
   13d44:	bl	131f4 <table_get_cell_ptr@@Base>
   13d48:	ldr	r0, [r0]
   13d4c:	cmp	r0, #0
   13d50:	beq	13d58 <table_remove_row@@Base+0xdc>
   13d54:	bl	11b98 <free@plt>
   13d58:	add	r6, r6, #1
   13d5c:	b	13c98 <table_remove_row@@Base+0x1c>
   13d60:	ldr	r1, [r4, #16]
   13d64:	add	r3, r3, #1
   13d68:	ldr	r0, [r1, r2]
   13d6c:	str	r0, [r1, r6]
   13d70:	mov	r6, r2
   13d74:	b	13cc0 <table_remove_row@@Base+0x44>

00013d78 <table_get_row_ptr@@Base>:
   13d78:	ldr	r0, [r0, #16]
   13d7c:	add	r0, r0, r1, lsl #2
   13d80:	bx	lr

00013d84 <table_set_row_ptr@@Base>:
   13d84:	ldr	r3, [r0, #16]
   13d88:	ldr	r2, [r2]
   13d8c:	str	r2, [r3, r1, lsl #2]
   13d90:	bx	lr

00013d94 <table_set@@Base>:
   13d94:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13d98:	mov	r6, r0
   13d9c:	mov	r8, r1
   13da0:	mov	r7, r2
   13da4:	ldr	r9, [sp, #32]
   13da8:	mov	r5, r3
   13dac:	bl	131f4 <table_get_cell_ptr@@Base>
   13db0:	mov	r1, r7
   13db4:	mov	r4, r0
   13db8:	mov	r0, r6
   13dbc:	bl	135e4 <table_get_col_ptr@@Base>
   13dc0:	cmp	r9, #23
   13dc4:	ldrls	pc, [pc, r9, lsl #2]
   13dc8:	b	13ea0 <table_set@@Base+0x10c>
   13dcc:	andeq	r3, r1, r8, ror #28
   13dd0:	andeq	r3, r1, r8, lsr #29
   13dd4:			; <UNDEFINED> instruction: 0x00013eb4
   13dd8:	andeq	r3, r1, r0, asr #29
   13ddc:	andeq	r3, r1, ip, asr #29
   13de0:	andeq	r3, r1, r0, lsr #30
   13de4:	andeq	r3, r1, ip, lsr #30
   13de8:	andeq	r3, r1, r8, lsr pc
   13dec:	andeq	r3, r1, r4, asr #30
   13df0:	andeq	r3, r1, r4, lsl #31
   13df4:	andeq	r3, r1, r4, lsr #31
   13df8:			; <UNDEFINED> instruction: 0x00013fb0
   13dfc:			; <UNDEFINED> instruction: 0x00013fbc
   13e00:	andeq	r3, r1, r8, asr #31
   13e04:	ldrdeq	r3, [r1], -r4
   13e08:	andeq	r3, r1, r0, ror #31
   13e0c:	andeq	r3, r1, ip, ror #31
   13e10:	strdeq	r3, [r1], -r8
   13e14:	andeq	r4, r1, r4
   13e18:	andeq	r4, r1, r8, asr #32
   13e1c:	andeq	r4, r1, r4, asr r0
   13e20:	andeq	r4, r1, r0, lsl r0
   13e24:	andeq	r3, r1, ip, lsr #28
   13e28:	andeq	r4, r1, r0, rrx
   13e2c:	ldr	r3, [r0, #4]
   13e30:	cmp	r3, #22
   13e34:	bne	13ea0 <table_set@@Base+0x10c>
   13e38:	ldr	r3, [r4]
   13e3c:	cmp	r3, #0
   13e40:	bne	13e50 <table_set@@Base+0xbc>
   13e44:	mov	r0, #1
   13e48:	bl	11bd4 <malloc@plt>
   13e4c:	str	r0, [r4]
   13e50:	ldr	r3, [r4]
   13e54:	cmp	r3, #0
   13e58:	ldrbne	r2, [r5]
   13e5c:	strbne	r2, [r3]
   13e60:	bne	13f04 <table_set@@Base+0x170>
   13e64:	b	13ea0 <table_set@@Base+0x10c>
   13e68:	ldr	r3, [r0, #4]
   13e6c:	cmp	r3, #0
   13e70:	bne	13ea0 <table_set@@Base+0x10c>
   13e74:	ldr	r3, [r4]
   13e78:	cmp	r3, #0
   13e7c:	bne	13e8c <table_set@@Base+0xf8>
   13e80:	mov	r0, #4
   13e84:	bl	11bd4 <malloc@plt>
   13e88:	str	r0, [r4]
   13e8c:	ldr	r3, [r4]
   13e90:	cmp	r3, #0
   13e94:	ldrne	r2, [r5]
   13e98:	strne	r2, [r3]
   13e9c:	bne	13f04 <table_set@@Base+0x170>
   13ea0:	mvn	r0, #0
   13ea4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13ea8:	ldr	r3, [r0, #4]
   13eac:	cmp	r3, #1
   13eb0:	b	13e70 <table_set@@Base+0xdc>
   13eb4:	ldr	r3, [r0, #4]
   13eb8:	cmp	r3, #2
   13ebc:	b	13e34 <table_set@@Base+0xa0>
   13ec0:	ldr	r3, [r0, #4]
   13ec4:	cmp	r3, #3
   13ec8:	b	13e34 <table_set@@Base+0xa0>
   13ecc:	ldr	r3, [r0, #4]
   13ed0:	cmp	r3, #4
   13ed4:	bne	13ea0 <table_set@@Base+0x10c>
   13ed8:	ldr	r3, [r4]
   13edc:	cmp	r3, #0
   13ee0:	bne	13ef0 <table_set@@Base+0x15c>
   13ee4:	mov	r0, #2
   13ee8:	bl	11bd4 <malloc@plt>
   13eec:	str	r0, [r4]
   13ef0:	ldr	r3, [r4]
   13ef4:	cmp	r3, #0
   13ef8:	beq	13ea0 <table_set@@Base+0x10c>
   13efc:	ldrh	r2, [r5]
   13f00:	strh	r2, [r3]
   13f04:	mov	r0, r6
   13f08:	mov	r3, #1
   13f0c:	mov	r2, r7
   13f10:	mov	r1, r8
   13f14:	bl	12908 <table_notify@@Base>
   13f18:	mov	r0, #0
   13f1c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13f20:	ldr	r3, [r0, #4]
   13f24:	cmp	r3, #5
   13f28:	b	13ed4 <table_set@@Base+0x140>
   13f2c:	ldr	r3, [r0, #4]
   13f30:	cmp	r3, #6
   13f34:	b	13e70 <table_set@@Base+0xdc>
   13f38:	ldr	r3, [r0, #4]
   13f3c:	cmp	r3, #7
   13f40:	b	13e70 <table_set@@Base+0xdc>
   13f44:	ldr	r0, [r0, #4]
   13f48:	cmp	r0, #8
   13f4c:	bne	13ea0 <table_set@@Base+0x10c>
   13f50:	ldr	r3, [r4]
   13f54:	cmp	r3, #0
   13f58:	bne	13f64 <table_set@@Base+0x1d0>
   13f5c:	bl	11bd4 <malloc@plt>
   13f60:	str	r0, [r4]
   13f64:	ldr	r3, [r4]
   13f68:	cmp	r3, #0
   13f6c:	beq	13ea0 <table_set@@Base+0x10c>
   13f70:	ldr	r2, [r5]
   13f74:	str	r2, [r3]
   13f78:	ldr	r2, [r5, #4]
   13f7c:	str	r2, [r3, #4]
   13f80:	b	13f04 <table_set@@Base+0x170>
   13f84:	ldr	r3, [r0, #4]
   13f88:	cmp	r3, #9
   13f8c:	bne	13ea0 <table_set@@Base+0x10c>
   13f90:	ldr	r3, [r4]
   13f94:	cmp	r3, #0
   13f98:	bne	13f64 <table_set@@Base+0x1d0>
   13f9c:	mov	r0, #8
   13fa0:	b	13f5c <table_set@@Base+0x1c8>
   13fa4:	ldr	r3, [r0, #4]
   13fa8:	cmp	r3, #10
   13fac:	b	13ed4 <table_set@@Base+0x140>
   13fb0:	ldr	r3, [r0, #4]
   13fb4:	cmp	r3, #11
   13fb8:	b	13ed4 <table_set@@Base+0x140>
   13fbc:	ldr	r3, [r0, #4]
   13fc0:	cmp	r3, #12
   13fc4:	b	13e70 <table_set@@Base+0xdc>
   13fc8:	ldr	r3, [r0, #4]
   13fcc:	cmp	r3, #13
   13fd0:	b	13e70 <table_set@@Base+0xdc>
   13fd4:	ldr	r3, [r0, #4]
   13fd8:	cmp	r3, #14
   13fdc:	b	13f8c <table_set@@Base+0x1f8>
   13fe0:	ldr	r3, [r0, #4]
   13fe4:	cmp	r3, #15
   13fe8:	b	13f8c <table_set@@Base+0x1f8>
   13fec:	ldr	r3, [r0, #4]
   13ff0:	cmp	r3, #16
   13ff4:	b	13e70 <table_set@@Base+0xdc>
   13ff8:	ldr	r3, [r0, #4]
   13ffc:	cmp	r3, #17
   14000:	b	13f8c <table_set@@Base+0x1f8>
   14004:	ldr	r3, [r0, #4]
   14008:	cmp	r3, #18
   1400c:	b	13f8c <table_set@@Base+0x1f8>
   14010:	ldr	r3, [r0, #4]
   14014:	cmp	r3, #21
   14018:	bne	13ea0 <table_set@@Base+0x10c>
   1401c:	mov	r0, r5
   14020:	bl	11bf8 <strlen@plt>
   14024:	add	r1, r0, #1
   14028:	ldr	r0, [r4]
   1402c:	bl	11bb0 <realloc@plt>
   14030:	cmp	r0, #0
   14034:	str	r0, [r4]
   14038:	beq	13ea0 <table_set@@Base+0x10c>
   1403c:	mov	r1, r5
   14040:	bl	11bbc <strcpy@plt>
   14044:	b	13f04 <table_set@@Base+0x170>
   14048:	ldr	r3, [r0, #4]
   1404c:	cmp	r3, #19
   14050:	b	13e34 <table_set@@Base+0xa0>
   14054:	ldr	r3, [r0, #4]
   14058:	cmp	r3, #20
   1405c:	b	13e34 <table_set@@Base+0xa0>
   14060:	ldr	r3, [r0, #4]
   14064:	cmp	r3, #23
   14068:	streq	r5, [r4]
   1406c:	beq	13f04 <table_set@@Base+0x170>
   14070:	b	13ea0 <table_set@@Base+0x10c>

00014074 <table_set_bool@@Base>:
   14074:	push	{r0, r1, r2, r3, r4, lr}
   14078:	add	ip, sp, #16
   1407c:	strb	r3, [ip, #-1]!
   14080:	mov	r3, #22
   14084:	str	r3, [sp]
   14088:	mov	r3, ip
   1408c:	bl	13d94 <table_set@@Base>
   14090:	add	sp, sp, #20
   14094:	pop	{pc}		; (ldr pc, [sp], #4)

00014098 <table_set_int@@Base>:
   14098:	push	{r0, r1, r2, r3, r4, lr}
   1409c:	add	ip, sp, #16
   140a0:	str	r3, [ip, #-4]!
   140a4:	mov	r3, #0
   140a8:	str	r3, [sp]
   140ac:	mov	r3, ip
   140b0:	bl	13d94 <table_set@@Base>
   140b4:	add	sp, sp, #20
   140b8:	pop	{pc}		; (ldr pc, [sp], #4)

000140bc <table_set_uint@@Base>:
   140bc:	push	{r0, r1, r2, r3, r4, lr}
   140c0:	add	ip, sp, #16
   140c4:	str	r3, [ip, #-4]!
   140c8:	mov	r3, #1
   140cc:	str	r3, [sp]
   140d0:	mov	r3, ip
   140d4:	bl	13d94 <table_set@@Base>
   140d8:	add	sp, sp, #20
   140dc:	pop	{pc}		; (ldr pc, [sp], #4)

000140e0 <table_set_int8@@Base>:
   140e0:	push	{r0, r1, r2, r3, r4, lr}
   140e4:	add	ip, sp, #16
   140e8:	strb	r3, [ip, #-1]!
   140ec:	mov	r3, #2
   140f0:	str	r3, [sp]
   140f4:	mov	r3, ip
   140f8:	bl	13d94 <table_set@@Base>
   140fc:	add	sp, sp, #20
   14100:	pop	{pc}		; (ldr pc, [sp], #4)

00014104 <table_set_uint8@@Base>:
   14104:	push	{r0, r1, r2, r3, r4, lr}
   14108:	add	ip, sp, #16
   1410c:	strb	r3, [ip, #-1]!
   14110:	mov	r3, #3
   14114:	str	r3, [sp]
   14118:	mov	r3, ip
   1411c:	bl	13d94 <table_set@@Base>
   14120:	add	sp, sp, #20
   14124:	pop	{pc}		; (ldr pc, [sp], #4)

00014128 <table_set_int16@@Base>:
   14128:	push	{r0, r1, r2, r3, r4, lr}
   1412c:	add	ip, sp, #16
   14130:	strh	r3, [ip, #-2]!
   14134:	mov	r3, #4
   14138:	str	r3, [sp]
   1413c:	mov	r3, ip
   14140:	bl	13d94 <table_set@@Base>
   14144:	add	sp, sp, #20
   14148:	pop	{pc}		; (ldr pc, [sp], #4)

0001414c <table_set_uint16@@Base>:
   1414c:	push	{r0, r1, r2, r3, r4, lr}
   14150:	add	ip, sp, #16
   14154:	strh	r3, [ip, #-2]!
   14158:	mov	r3, #5
   1415c:	str	r3, [sp]
   14160:	mov	r3, ip
   14164:	bl	13d94 <table_set@@Base>
   14168:	add	sp, sp, #20
   1416c:	pop	{pc}		; (ldr pc, [sp], #4)

00014170 <table_set_int32@@Base>:
   14170:	push	{r0, r1, r2, r3, r4, lr}
   14174:	add	ip, sp, #16
   14178:	str	r3, [ip, #-4]!
   1417c:	mov	r3, #6
   14180:	str	r3, [sp]
   14184:	mov	r3, ip
   14188:	bl	13d94 <table_set@@Base>
   1418c:	add	sp, sp, #20
   14190:	pop	{pc}		; (ldr pc, [sp], #4)

00014194 <table_set_uint32@@Base>:
   14194:	push	{r0, r1, r2, r3, r4, lr}
   14198:	add	ip, sp, #16
   1419c:	str	r3, [ip, #-4]!
   141a0:	mov	r3, #7
   141a4:	str	r3, [sp]
   141a8:	mov	r3, ip
   141ac:	bl	13d94 <table_set@@Base>
   141b0:	add	sp, sp, #20
   141b4:	pop	{pc}		; (ldr pc, [sp], #4)

000141b8 <table_set_int64@@Base>:
   141b8:	mov	r3, #8
   141bc:	push	{r0, r1, r2, lr}
   141c0:	str	r3, [sp]
   141c4:	add	r3, sp, #16
   141c8:	bl	13d94 <table_set@@Base>
   141cc:	add	sp, sp, #12
   141d0:	pop	{pc}		; (ldr pc, [sp], #4)

000141d4 <table_set_uint64@@Base>:
   141d4:	mov	r3, #9
   141d8:	push	{r0, r1, r2, lr}
   141dc:	str	r3, [sp]
   141e0:	add	r3, sp, #16
   141e4:	bl	13d94 <table_set@@Base>
   141e8:	add	sp, sp, #12
   141ec:	pop	{pc}		; (ldr pc, [sp], #4)

000141f0 <table_set_short@@Base>:
   141f0:	push	{r0, r1, r2, r3, r4, lr}
   141f4:	add	ip, sp, #16
   141f8:	strh	r3, [ip, #-2]!
   141fc:	mov	r3, #10
   14200:	str	r3, [sp]
   14204:	mov	r3, ip
   14208:	bl	13d94 <table_set@@Base>
   1420c:	add	sp, sp, #20
   14210:	pop	{pc}		; (ldr pc, [sp], #4)

00014214 <table_set_ushort@@Base>:
   14214:	push	{r0, r1, r2, r3, r4, lr}
   14218:	add	ip, sp, #16
   1421c:	strh	r3, [ip, #-2]!
   14220:	mov	r3, #11
   14224:	str	r3, [sp]
   14228:	mov	r3, ip
   1422c:	bl	13d94 <table_set@@Base>
   14230:	add	sp, sp, #20
   14234:	pop	{pc}		; (ldr pc, [sp], #4)

00014238 <table_set_long@@Base>:
   14238:	push	{r0, r1, r2, r3, r4, lr}
   1423c:	add	ip, sp, #16
   14240:	str	r3, [ip, #-4]!
   14244:	mov	r3, #12
   14248:	str	r3, [sp]
   1424c:	mov	r3, ip
   14250:	bl	13d94 <table_set@@Base>
   14254:	add	sp, sp, #20
   14258:	pop	{pc}		; (ldr pc, [sp], #4)

0001425c <table_set_ulong@@Base>:
   1425c:	push	{r0, r1, r2, r3, r4, lr}
   14260:	add	ip, sp, #16
   14264:	str	r3, [ip, #-4]!
   14268:	mov	r3, #13
   1426c:	str	r3, [sp]
   14270:	mov	r3, ip
   14274:	bl	13d94 <table_set@@Base>
   14278:	add	sp, sp, #20
   1427c:	pop	{pc}		; (ldr pc, [sp], #4)

00014280 <table_set_llong@@Base>:
   14280:	mov	r3, #14
   14284:	push	{r0, r1, r2, lr}
   14288:	str	r3, [sp]
   1428c:	add	r3, sp, #16
   14290:	bl	13d94 <table_set@@Base>
   14294:	add	sp, sp, #12
   14298:	pop	{pc}		; (ldr pc, [sp], #4)

0001429c <table_set_ullong@@Base>:
   1429c:	mov	r3, #15
   142a0:	push	{r0, r1, r2, lr}
   142a4:	str	r3, [sp]
   142a8:	add	r3, sp, #16
   142ac:	bl	13d94 <table_set@@Base>
   142b0:	add	sp, sp, #12
   142b4:	pop	{pc}		; (ldr pc, [sp], #4)

000142b8 <table_set_float@@Base>:
   142b8:	push	{r0, r1, r2, r3, r4, lr}
   142bc:	add	r3, sp, #16
   142c0:	mov	ip, #16
   142c4:	vstmdb	r3!, {s0}
   142c8:	str	ip, [sp]
   142cc:	bl	13d94 <table_set@@Base>
   142d0:	add	sp, sp, #20
   142d4:	pop	{pc}		; (ldr pc, [sp], #4)

000142d8 <table_set_double@@Base>:
   142d8:	push	{r0, r1, r2, r3, r4, lr}
   142dc:	add	r3, sp, #16
   142e0:	mov	ip, #17
   142e4:	vstmdb	r3!, {d0}
   142e8:	str	ip, [sp]
   142ec:	bl	13d94 <table_set@@Base>
   142f0:	add	sp, sp, #20
   142f4:	pop	{pc}		; (ldr pc, [sp], #4)

000142f8 <table_set_ldouble@@Base>:
   142f8:	push	{r0, r1, r2, r3, r4, lr}
   142fc:	add	r3, sp, #16
   14300:	mov	ip, #18
   14304:	vstmdb	r3!, {d0}
   14308:	str	ip, [sp]
   1430c:	bl	13d94 <table_set@@Base>
   14310:	add	sp, sp, #20
   14314:	pop	{pc}		; (ldr pc, [sp], #4)

00014318 <table_set_string@@Base>:
   14318:	mov	ip, #21
   1431c:	push	{r0, r1, r2, lr}
   14320:	str	ip, [sp]
   14324:	bl	13d94 <table_set@@Base>
   14328:	add	sp, sp, #12
   1432c:	pop	{pc}		; (ldr pc, [sp], #4)

00014330 <table_set_char@@Base>:
   14330:	push	{r0, r1, r2, r3, r4, lr}
   14334:	add	ip, sp, #16
   14338:	strb	r3, [ip, #-1]!
   1433c:	mov	r3, #19
   14340:	str	r3, [sp]
   14344:	mov	r3, ip
   14348:	bl	13d94 <table_set@@Base>
   1434c:	add	sp, sp, #20
   14350:	pop	{pc}		; (ldr pc, [sp], #4)

00014354 <table_set_uchar@@Base>:
   14354:	push	{r0, r1, r2, r3, r4, lr}
   14358:	add	ip, sp, #16
   1435c:	strb	r3, [ip, #-1]!
   14360:	mov	r3, #20
   14364:	str	r3, [sp]
   14368:	mov	r3, ip
   1436c:	bl	13d94 <table_set@@Base>
   14370:	add	sp, sp, #20
   14374:	pop	{pc}		; (ldr pc, [sp], #4)

00014378 <table_set_ptr@@Base>:
   14378:	mov	ip, #23
   1437c:	push	{r0, r1, r2, lr}
   14380:	str	ip, [sp]
   14384:	bl	13d94 <table_set@@Base>
   14388:	add	sp, sp, #12
   1438c:	pop	{pc}		; (ldr pc, [sp], #4)
   14390:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14394:	sub	sp, sp, #36	; 0x24
   14398:	ldr	sl, [sp, #72]	; 0x48
   1439c:	sub	r5, sl, r3
   143a0:	cmp	r5, #0
   143a4:	str	r5, [sp, #20]
   143a8:	ble	14488 <table_set_ptr@@Base+0x110>
   143ac:	add	r7, sl, r3
   143b0:	ldr	ip, [sp, #76]	; 0x4c
   143b4:	add	r7, r7, r7, lsr #31
   143b8:	mov	r4, r0
   143bc:	asr	r7, r7, #1
   143c0:	mov	r8, r2
   143c4:	stm	sp, {r7, ip}
   143c8:	str	r3, [sp, #16]
   143cc:	str	r1, [sp, #12]
   143d0:	bl	14390 <table_set_ptr@@Base+0x18>
   143d4:	ldr	r3, [sp, #76]	; 0x4c
   143d8:	add	r5, r7, #1
   143dc:	str	r3, [sp, #4]
   143e0:	mov	r2, r8
   143e4:	mov	r3, r5
   143e8:	ldr	r1, [sp, #12]
   143ec:	mov	r0, r4
   143f0:	str	sl, [sp]
   143f4:	bl	14390 <table_set_ptr@@Base+0x18>
   143f8:	mov	r1, r8
   143fc:	mov	r0, r4
   14400:	bl	135f4 <table_get_column_compare_function@@Base>
   14404:	ldr	r9, [sp, #12]
   14408:	ldr	r6, [sp, #16]
   1440c:	mov	fp, #0
   14410:	str	r0, [sp, #24]
   14414:	ldr	r3, [sp, #76]	; 0x4c
   14418:	cmp	r3, #0
   1441c:	bne	144ec <table_set_ptr@@Base+0x174>
   14420:	cmp	r7, r6
   14424:	blt	144d0 <table_set_ptr@@Base+0x158>
   14428:	cmp	sl, r5
   1442c:	bge	14490 <table_set_ptr@@Base+0x118>
   14430:	mov	r1, r6
   14434:	mov	r0, r4
   14438:	bl	13d78 <table_get_row_ptr@@Base>
   1443c:	add	r6, r6, #1
   14440:	ldr	r3, [r0]
   14444:	str	r3, [r9]
   14448:	ldr	r3, [sp, #20]
   1444c:	add	fp, fp, #1
   14450:	cmp	r3, fp
   14454:	add	r9, r9, #4
   14458:	bge	14414 <table_set_ptr@@Base+0x9c>
   1445c:	mov	r5, #0
   14460:	ldr	r3, [sp, #12]
   14464:	mov	r0, r4
   14468:	add	r2, r3, r5, lsl #2
   1446c:	ldr	r3, [sp, #16]
   14470:	add	r1, r3, r5
   14474:	bl	13d84 <table_set_row_ptr@@Base>
   14478:	ldr	r3, [sp, #20]
   1447c:	add	r5, r5, #1
   14480:	cmp	r3, r5
   14484:	bge	14460 <table_set_ptr@@Base+0xe8>
   14488:	add	sp, sp, #36	; 0x24
   1448c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14490:	mov	r2, r8
   14494:	mov	r1, r6
   14498:	mov	r0, r4
   1449c:	bl	13a4c <table_get@@Base>
   144a0:	mov	r2, r8
   144a4:	mov	r1, r5
   144a8:	str	r0, [sp, #28]
   144ac:	mov	r0, r4
   144b0:	bl	13a4c <table_get@@Base>
   144b4:	ldr	r3, [sp, #28]
   144b8:	mov	r1, r0
   144bc:	mov	r0, r3
   144c0:	ldr	r3, [sp, #24]
   144c4:	blx	r3
   144c8:	cmp	r0, #0
   144cc:	blt	14430 <table_set_ptr@@Base+0xb8>
   144d0:	mov	r1, r5
   144d4:	mov	r0, r4
   144d8:	bl	13d78 <table_get_row_ptr@@Base>
   144dc:	add	r5, r5, #1
   144e0:	ldr	r3, [r0]
   144e4:	str	r3, [r9]
   144e8:	b	14448 <table_set_ptr@@Base+0xd0>
   144ec:	cmp	r7, r6
   144f0:	blt	144d0 <table_set_ptr@@Base+0x158>
   144f4:	cmp	sl, r5
   144f8:	blt	14430 <table_set_ptr@@Base+0xb8>
   144fc:	mov	r2, r8
   14500:	mov	r1, r6
   14504:	mov	r0, r4
   14508:	bl	13a4c <table_get@@Base>
   1450c:	mov	r2, r8
   14510:	mov	r1, r5
   14514:	str	r0, [sp, #28]
   14518:	mov	r0, r4
   1451c:	bl	13a4c <table_get@@Base>
   14520:	ldr	r3, [sp, #28]
   14524:	mov	r1, r0
   14528:	mov	r0, r3
   1452c:	ldr	r3, [sp, #24]
   14530:	blx	r3
   14534:	cmp	r0, #0
   14538:	bgt	14430 <table_set_ptr@@Base+0xb8>
   1453c:	b	144d0 <table_set_ptr@@Base+0x158>

00014540 <table_column_sort@@Base>:
   14540:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14544:	mov	r5, r0
   14548:	sub	sp, sp, #52	; 0x34
   1454c:	mov	r9, r1
   14550:	mov	r6, #0
   14554:	mvn	sl, #0
   14558:	str	r1, [sp, #20]
   1455c:	str	r2, [sp, #24]
   14560:	str	r3, [sp, #32]
   14564:	ldr	r3, [sp, #32]
   14568:	cmp	r6, r3
   1456c:	blt	1458c <table_column_sort@@Base+0x4c>
   14570:	mvn	r2, #0
   14574:	mov	r3, #32
   14578:	mov	r1, r2
   1457c:	mov	r0, r5
   14580:	add	sp, sp, #52	; 0x34
   14584:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14588:	b	12908 <table_notify@@Base>
   1458c:	mov	r0, r5
   14590:	bl	13bd4 <table_get_row_length@@Base>
   14594:	cmp	r6, #0
   14598:	str	r0, [sp, #12]
   1459c:	bne	145f4 <table_column_sort@@Base+0xb4>
   145a0:	ldr	r3, [sp, #20]
   145a4:	mov	r1, #4
   145a8:	ldr	r7, [r3]
   145ac:	ldr	r3, [sp, #24]
   145b0:	ldr	r8, [r3]
   145b4:	bl	11b68 <calloc@plt>
   145b8:	ldr	r3, [sp, #12]
   145bc:	str	r8, [sp, #4]
   145c0:	sub	r3, r3, #1
   145c4:	str	r3, [sp]
   145c8:	mov	r2, r7
   145cc:	mov	r3, r6
   145d0:	mov	r4, r0
   145d4:	mov	r1, r0
   145d8:	mov	r0, r5
   145dc:	bl	14390 <table_set_ptr@@Base+0x18>
   145e0:	mov	r0, r4
   145e4:	bl	11b98 <free@plt>
   145e8:	add	r6, r6, #1
   145ec:	add	r9, r9, #4
   145f0:	b	14564 <table_column_sort@@Base+0x24>
   145f4:	ldr	r1, [r9, #-4]
   145f8:	mov	r0, r5
   145fc:	bl	135f4 <table_get_column_compare_function@@Base>
   14600:	ldr	r3, [sp, #12]
   14604:	mov	r7, sl
   14608:	mov	r8, sl
   1460c:	mov	r4, #0
   14610:	sub	r3, r3, #1
   14614:	str	r3, [sp, #40]	; 0x28
   14618:	str	r0, [sp, #28]
   1461c:	ldr	r3, [sp, #12]
   14620:	cmp	r4, r3
   14624:	bge	145e8 <table_column_sort@@Base+0xa8>
   14628:	cmp	r4, #0
   1462c:	beq	146c8 <table_column_sort@@Base+0x188>
   14630:	sub	fp, r6, #1
   14634:	mov	r3, #0
   14638:	sub	r2, r4, #1
   1463c:	str	r9, [sp, #16]
   14640:	str	r2, [sp, #36]	; 0x24
   14644:	cmn	fp, #1
   14648:	bne	14674 <table_column_sort@@Base+0x134>
   1464c:	cmp	r3, #0
   14650:	beq	146c8 <table_column_sort@@Base+0x188>
   14654:	cmn	r8, #1
   14658:	subeq	r8, r4, #1
   1465c:	mov	r7, r4
   14660:	ldr	r3, [sp, #40]	; 0x28
   14664:	cmp	r3, r7
   14668:	beq	146d8 <table_column_sort@@Base+0x198>
   1466c:	add	r4, r4, #1
   14670:	b	1461c <table_column_sort@@Base+0xdc>
   14674:	ldr	r3, [sp, #16]
   14678:	mov	r1, r4
   1467c:	mov	r0, r5
   14680:	ldr	r2, [r3, #-4]
   14684:	bl	13a4c <table_get@@Base>
   14688:	ldr	r3, [sp, #16]
   1468c:	ldr	r1, [sp, #36]	; 0x24
   14690:	ldr	r2, [r3, #-4]!
   14694:	str	r3, [sp, #16]
   14698:	str	r0, [sp, #44]	; 0x2c
   1469c:	mov	r0, r5
   146a0:	bl	13a4c <table_get@@Base>
   146a4:	ldr	r3, [sp, #44]	; 0x2c
   146a8:	mov	r1, r0
   146ac:	mov	r0, r3
   146b0:	ldr	r3, [sp, #28]
   146b4:	blx	r3
   146b8:	cmp	r0, #0
   146bc:	subeq	fp, fp, #1
   146c0:	moveq	r3, #1
   146c4:	beq	14644 <table_column_sort@@Base+0x104>
   146c8:	cmn	r8, #1
   146cc:	beq	1466c <table_column_sort@@Base+0x12c>
   146d0:	cmp	r4, r7
   146d4:	beq	14660 <table_column_sort@@Base+0x120>
   146d8:	ldr	r3, [sp, #24]
   146dc:	ldr	r2, [r9]
   146e0:	sub	r0, r7, r8
   146e4:	ldr	r3, [r3, r6, lsl #2]
   146e8:	mov	r1, #4
   146ec:	add	r0, r0, #1
   146f0:	str	r2, [sp, #36]	; 0x24
   146f4:	str	r3, [sp, #16]
   146f8:	bl	11b68 <calloc@plt>
   146fc:	ldr	r3, [sp, #16]
   14700:	str	r7, [sp]
   14704:	str	r3, [sp, #4]
   14708:	ldr	r2, [sp, #36]	; 0x24
   1470c:	mov	r3, r8
   14710:	mov	r7, sl
   14714:	mov	r8, sl
   14718:	mov	r1, r0
   1471c:	mov	fp, r0
   14720:	mov	r0, r5
   14724:	bl	14390 <table_set_ptr@@Base+0x18>
   14728:	mov	r0, fp
   1472c:	bl	11b98 <free@plt>
   14730:	b	1466c <table_column_sort@@Base+0x12c>
   14734:	subs	r2, r1, #1
   14738:	bxeq	lr
   1473c:	bcc	14914 <table_column_sort@@Base+0x3d4>
   14740:	cmp	r0, r1
   14744:	bls	148f8 <table_column_sort@@Base+0x3b8>
   14748:	tst	r1, r2
   1474c:	beq	14904 <table_column_sort@@Base+0x3c4>
   14750:	clz	r3, r0
   14754:	clz	r2, r1
   14758:	sub	r3, r2, r3
   1475c:	rsbs	r3, r3, #31
   14760:	addne	r3, r3, r3, lsl #1
   14764:	mov	r2, #0
   14768:	addne	pc, pc, r3, lsl #2
   1476c:	nop			; (mov r0, r0)
   14770:	cmp	r0, r1, lsl #31
   14774:	adc	r2, r2, r2
   14778:	subcs	r0, r0, r1, lsl #31
   1477c:	cmp	r0, r1, lsl #30
   14780:	adc	r2, r2, r2
   14784:	subcs	r0, r0, r1, lsl #30
   14788:	cmp	r0, r1, lsl #29
   1478c:	adc	r2, r2, r2
   14790:	subcs	r0, r0, r1, lsl #29
   14794:	cmp	r0, r1, lsl #28
   14798:	adc	r2, r2, r2
   1479c:	subcs	r0, r0, r1, lsl #28
   147a0:	cmp	r0, r1, lsl #27
   147a4:	adc	r2, r2, r2
   147a8:	subcs	r0, r0, r1, lsl #27
   147ac:	cmp	r0, r1, lsl #26
   147b0:	adc	r2, r2, r2
   147b4:	subcs	r0, r0, r1, lsl #26
   147b8:	cmp	r0, r1, lsl #25
   147bc:	adc	r2, r2, r2
   147c0:	subcs	r0, r0, r1, lsl #25
   147c4:	cmp	r0, r1, lsl #24
   147c8:	adc	r2, r2, r2
   147cc:	subcs	r0, r0, r1, lsl #24
   147d0:	cmp	r0, r1, lsl #23
   147d4:	adc	r2, r2, r2
   147d8:	subcs	r0, r0, r1, lsl #23
   147dc:	cmp	r0, r1, lsl #22
   147e0:	adc	r2, r2, r2
   147e4:	subcs	r0, r0, r1, lsl #22
   147e8:	cmp	r0, r1, lsl #21
   147ec:	adc	r2, r2, r2
   147f0:	subcs	r0, r0, r1, lsl #21
   147f4:	cmp	r0, r1, lsl #20
   147f8:	adc	r2, r2, r2
   147fc:	subcs	r0, r0, r1, lsl #20
   14800:	cmp	r0, r1, lsl #19
   14804:	adc	r2, r2, r2
   14808:	subcs	r0, r0, r1, lsl #19
   1480c:	cmp	r0, r1, lsl #18
   14810:	adc	r2, r2, r2
   14814:	subcs	r0, r0, r1, lsl #18
   14818:	cmp	r0, r1, lsl #17
   1481c:	adc	r2, r2, r2
   14820:	subcs	r0, r0, r1, lsl #17
   14824:	cmp	r0, r1, lsl #16
   14828:	adc	r2, r2, r2
   1482c:	subcs	r0, r0, r1, lsl #16
   14830:	cmp	r0, r1, lsl #15
   14834:	adc	r2, r2, r2
   14838:	subcs	r0, r0, r1, lsl #15
   1483c:	cmp	r0, r1, lsl #14
   14840:	adc	r2, r2, r2
   14844:	subcs	r0, r0, r1, lsl #14
   14848:	cmp	r0, r1, lsl #13
   1484c:	adc	r2, r2, r2
   14850:	subcs	r0, r0, r1, lsl #13
   14854:	cmp	r0, r1, lsl #12
   14858:	adc	r2, r2, r2
   1485c:	subcs	r0, r0, r1, lsl #12
   14860:	cmp	r0, r1, lsl #11
   14864:	adc	r2, r2, r2
   14868:	subcs	r0, r0, r1, lsl #11
   1486c:	cmp	r0, r1, lsl #10
   14870:	adc	r2, r2, r2
   14874:	subcs	r0, r0, r1, lsl #10
   14878:	cmp	r0, r1, lsl #9
   1487c:	adc	r2, r2, r2
   14880:	subcs	r0, r0, r1, lsl #9
   14884:	cmp	r0, r1, lsl #8
   14888:	adc	r2, r2, r2
   1488c:	subcs	r0, r0, r1, lsl #8
   14890:	cmp	r0, r1, lsl #7
   14894:	adc	r2, r2, r2
   14898:	subcs	r0, r0, r1, lsl #7
   1489c:	cmp	r0, r1, lsl #6
   148a0:	adc	r2, r2, r2
   148a4:	subcs	r0, r0, r1, lsl #6
   148a8:	cmp	r0, r1, lsl #5
   148ac:	adc	r2, r2, r2
   148b0:	subcs	r0, r0, r1, lsl #5
   148b4:	cmp	r0, r1, lsl #4
   148b8:	adc	r2, r2, r2
   148bc:	subcs	r0, r0, r1, lsl #4
   148c0:	cmp	r0, r1, lsl #3
   148c4:	adc	r2, r2, r2
   148c8:	subcs	r0, r0, r1, lsl #3
   148cc:	cmp	r0, r1, lsl #2
   148d0:	adc	r2, r2, r2
   148d4:	subcs	r0, r0, r1, lsl #2
   148d8:	cmp	r0, r1, lsl #1
   148dc:	adc	r2, r2, r2
   148e0:	subcs	r0, r0, r1, lsl #1
   148e4:	cmp	r0, r1
   148e8:	adc	r2, r2, r2
   148ec:	subcs	r0, r0, r1
   148f0:	mov	r0, r2
   148f4:	bx	lr
   148f8:	moveq	r0, #1
   148fc:	movne	r0, #0
   14900:	bx	lr
   14904:	clz	r2, r1
   14908:	rsb	r2, r2, #31
   1490c:	lsr	r0, r0, r2
   14910:	bx	lr
   14914:	cmp	r0, #0
   14918:	mvnne	r0, #0
   1491c:	b	14b80 <table_column_sort@@Base+0x640>
   14920:	cmp	r1, #0
   14924:	beq	14914 <table_column_sort@@Base+0x3d4>
   14928:	push	{r0, r1, lr}
   1492c:	bl	14734 <table_column_sort@@Base+0x1f4>
   14930:	pop	{r1, r2, lr}
   14934:	mul	r3, r2, r0
   14938:	sub	r1, r1, r3
   1493c:	bx	lr
   14940:	cmp	r1, #0
   14944:	beq	14b50 <table_column_sort@@Base+0x610>
   14948:	eor	ip, r0, r1
   1494c:	rsbmi	r1, r1, #0
   14950:	subs	r2, r1, #1
   14954:	beq	14b1c <table_column_sort@@Base+0x5dc>
   14958:	movs	r3, r0
   1495c:	rsbmi	r3, r0, #0
   14960:	cmp	r3, r1
   14964:	bls	14b28 <table_column_sort@@Base+0x5e8>
   14968:	tst	r1, r2
   1496c:	beq	14b38 <table_column_sort@@Base+0x5f8>
   14970:	clz	r2, r3
   14974:	clz	r0, r1
   14978:	sub	r2, r0, r2
   1497c:	rsbs	r2, r2, #31
   14980:	addne	r2, r2, r2, lsl #1
   14984:	mov	r0, #0
   14988:	addne	pc, pc, r2, lsl #2
   1498c:	nop			; (mov r0, r0)
   14990:	cmp	r3, r1, lsl #31
   14994:	adc	r0, r0, r0
   14998:	subcs	r3, r3, r1, lsl #31
   1499c:	cmp	r3, r1, lsl #30
   149a0:	adc	r0, r0, r0
   149a4:	subcs	r3, r3, r1, lsl #30
   149a8:	cmp	r3, r1, lsl #29
   149ac:	adc	r0, r0, r0
   149b0:	subcs	r3, r3, r1, lsl #29
   149b4:	cmp	r3, r1, lsl #28
   149b8:	adc	r0, r0, r0
   149bc:	subcs	r3, r3, r1, lsl #28
   149c0:	cmp	r3, r1, lsl #27
   149c4:	adc	r0, r0, r0
   149c8:	subcs	r3, r3, r1, lsl #27
   149cc:	cmp	r3, r1, lsl #26
   149d0:	adc	r0, r0, r0
   149d4:	subcs	r3, r3, r1, lsl #26
   149d8:	cmp	r3, r1, lsl #25
   149dc:	adc	r0, r0, r0
   149e0:	subcs	r3, r3, r1, lsl #25
   149e4:	cmp	r3, r1, lsl #24
   149e8:	adc	r0, r0, r0
   149ec:	subcs	r3, r3, r1, lsl #24
   149f0:	cmp	r3, r1, lsl #23
   149f4:	adc	r0, r0, r0
   149f8:	subcs	r3, r3, r1, lsl #23
   149fc:	cmp	r3, r1, lsl #22
   14a00:	adc	r0, r0, r0
   14a04:	subcs	r3, r3, r1, lsl #22
   14a08:	cmp	r3, r1, lsl #21
   14a0c:	adc	r0, r0, r0
   14a10:	subcs	r3, r3, r1, lsl #21
   14a14:	cmp	r3, r1, lsl #20
   14a18:	adc	r0, r0, r0
   14a1c:	subcs	r3, r3, r1, lsl #20
   14a20:	cmp	r3, r1, lsl #19
   14a24:	adc	r0, r0, r0
   14a28:	subcs	r3, r3, r1, lsl #19
   14a2c:	cmp	r3, r1, lsl #18
   14a30:	adc	r0, r0, r0
   14a34:	subcs	r3, r3, r1, lsl #18
   14a38:	cmp	r3, r1, lsl #17
   14a3c:	adc	r0, r0, r0
   14a40:	subcs	r3, r3, r1, lsl #17
   14a44:	cmp	r3, r1, lsl #16
   14a48:	adc	r0, r0, r0
   14a4c:	subcs	r3, r3, r1, lsl #16
   14a50:	cmp	r3, r1, lsl #15
   14a54:	adc	r0, r0, r0
   14a58:	subcs	r3, r3, r1, lsl #15
   14a5c:	cmp	r3, r1, lsl #14
   14a60:	adc	r0, r0, r0
   14a64:	subcs	r3, r3, r1, lsl #14
   14a68:	cmp	r3, r1, lsl #13
   14a6c:	adc	r0, r0, r0
   14a70:	subcs	r3, r3, r1, lsl #13
   14a74:	cmp	r3, r1, lsl #12
   14a78:	adc	r0, r0, r0
   14a7c:	subcs	r3, r3, r1, lsl #12
   14a80:	cmp	r3, r1, lsl #11
   14a84:	adc	r0, r0, r0
   14a88:	subcs	r3, r3, r1, lsl #11
   14a8c:	cmp	r3, r1, lsl #10
   14a90:	adc	r0, r0, r0
   14a94:	subcs	r3, r3, r1, lsl #10
   14a98:	cmp	r3, r1, lsl #9
   14a9c:	adc	r0, r0, r0
   14aa0:	subcs	r3, r3, r1, lsl #9
   14aa4:	cmp	r3, r1, lsl #8
   14aa8:	adc	r0, r0, r0
   14aac:	subcs	r3, r3, r1, lsl #8
   14ab0:	cmp	r3, r1, lsl #7
   14ab4:	adc	r0, r0, r0
   14ab8:	subcs	r3, r3, r1, lsl #7
   14abc:	cmp	r3, r1, lsl #6
   14ac0:	adc	r0, r0, r0
   14ac4:	subcs	r3, r3, r1, lsl #6
   14ac8:	cmp	r3, r1, lsl #5
   14acc:	adc	r0, r0, r0
   14ad0:	subcs	r3, r3, r1, lsl #5
   14ad4:	cmp	r3, r1, lsl #4
   14ad8:	adc	r0, r0, r0
   14adc:	subcs	r3, r3, r1, lsl #4
   14ae0:	cmp	r3, r1, lsl #3
   14ae4:	adc	r0, r0, r0
   14ae8:	subcs	r3, r3, r1, lsl #3
   14aec:	cmp	r3, r1, lsl #2
   14af0:	adc	r0, r0, r0
   14af4:	subcs	r3, r3, r1, lsl #2
   14af8:	cmp	r3, r1, lsl #1
   14afc:	adc	r0, r0, r0
   14b00:	subcs	r3, r3, r1, lsl #1
   14b04:	cmp	r3, r1
   14b08:	adc	r0, r0, r0
   14b0c:	subcs	r3, r3, r1
   14b10:	cmp	ip, #0
   14b14:	rsbmi	r0, r0, #0
   14b18:	bx	lr
   14b1c:	teq	ip, r0
   14b20:	rsbmi	r0, r0, #0
   14b24:	bx	lr
   14b28:	movcc	r0, #0
   14b2c:	asreq	r0, ip, #31
   14b30:	orreq	r0, r0, #1
   14b34:	bx	lr
   14b38:	clz	r2, r1
   14b3c:	rsb	r2, r2, #31
   14b40:	cmp	ip, #0
   14b44:	lsr	r0, r3, r2
   14b48:	rsbmi	r0, r0, #0
   14b4c:	bx	lr
   14b50:	cmp	r0, #0
   14b54:	mvngt	r0, #-2147483648	; 0x80000000
   14b58:	movlt	r0, #-2147483648	; 0x80000000
   14b5c:	b	14b80 <table_column_sort@@Base+0x640>
   14b60:	cmp	r1, #0
   14b64:	beq	14b50 <table_column_sort@@Base+0x610>
   14b68:	push	{r0, r1, lr}
   14b6c:	bl	14948 <table_column_sort@@Base+0x408>
   14b70:	pop	{r1, r2, lr}
   14b74:	mul	r3, r2, r0
   14b78:	sub	r1, r1, r3
   14b7c:	bx	lr
   14b80:	push	{r1, lr}
   14b84:	mov	r0, #8
   14b88:	bl	11b74 <raise@plt>
   14b8c:	pop	{r1, pc}

00014b90 <__libc_csu_init@@Base>:
   14b90:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14b94:	mov	r7, r0
   14b98:	ldr	r6, [pc, #72]	; 14be8 <__libc_csu_init@@Base+0x58>
   14b9c:	ldr	r5, [pc, #72]	; 14bec <__libc_csu_init@@Base+0x5c>
   14ba0:	add	r6, pc, r6
   14ba4:	add	r5, pc, r5
   14ba8:	sub	r6, r6, r5
   14bac:	mov	r8, r1
   14bb0:	mov	r9, r2
   14bb4:	bl	11b48 <calloc@plt-0x20>
   14bb8:	asrs	r6, r6, #2
   14bbc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14bc0:	mov	r4, #0
   14bc4:	add	r4, r4, #1
   14bc8:	ldr	r3, [r5], #4
   14bcc:	mov	r2, r9
   14bd0:	mov	r1, r8
   14bd4:	mov	r0, r7
   14bd8:	blx	r3
   14bdc:	cmp	r6, r4
   14be0:	bne	14bc4 <__libc_csu_init@@Base+0x34>
   14be4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14be8:	andeq	r0, r1, r8, ror #6
   14bec:	andeq	r0, r1, r0, ror #6

00014bf0 <__libc_csu_fini@@Base>:
   14bf0:	bx	lr

Disassembly of section .fini:

00014bf4 <.fini>:
   14bf4:	push	{r3, lr}
   14bf8:	pop	{r3, pc}
