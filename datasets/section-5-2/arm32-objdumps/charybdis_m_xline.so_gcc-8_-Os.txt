
../repos/charybdis/modules/.libs/m_xline.so:     file format elf32-littlearm


Disassembly of section .init:

00000abc <_init>:
 abc:	push	{r3, lr}
 ac0:	bl	ca4 <call_weak_fn>
 ac4:	pop	{r3, pc}

Disassembly of section .plt:

00000ac8 <.plt>:
 ac8:	push	{lr}		; (str lr, [sp, #-4]!)
 acc:	ldr	lr, [pc, #4]	; ad8 <.plt+0x10>
 ad0:	add	lr, pc, lr
 ad4:	ldr	pc, [lr, #8]!
 ad8:	.word	0x00012528

00000adc <propagate_generic@plt>:
 adc:	add	ip, pc, #0, 12
 ae0:	add	ip, ip, #73728	; 0x12000
 ae4:	ldr	pc, [ip, #1320]!	; 0x528

00000ae8 <make_conf@plt>:
 ae8:	add	ip, pc, #0, 12
 aec:	add	ip, ip, #73728	; 0x12000
 af0:	ldr	pc, [ip, #1312]!	; 0x520

00000af4 <rb_current_time@plt>:
 af4:	add	ip, pc, #0, 12
 af8:	add	ip, ip, #73728	; 0x12000
 afc:	ldr	pc, [ip, #1304]!	; 0x518

00000b00 <sendto_match_servs@plt>:
 b00:	add	ip, pc, #0, 12
 b04:	add	ip, ip, #73728	; 0x12000
 b08:	ldr	pc, [ip, #1296]!	; 0x510

00000b0c <__cxa_finalize@plt>:
 b0c:	add	ip, pc, #0, 12
 b10:	add	ip, ip, #73728	; 0x12000
 b14:	ldr	pc, [ip, #1288]!	; 0x508

00000b18 <sendto_one@plt>:
 b18:	add	ip, pc, #0, 12
 b1c:	add	ip, ip, #73728	; 0x12000
 b20:	ldr	pc, [ip, #1280]!	; 0x500

00000b24 <replace_old_ban@plt>:
 b24:	add	ip, pc, #0, 12
 b28:	add	ip, ip, #73728	; 0x12000
 b2c:	ldr	pc, [ip, #1272]!	; 0x4f8

00000b30 <rb_outofmemory@plt>:
 b30:	add	ip, pc, #0, 12
 b34:	add	ip, ip, #73728	; 0x12000
 b38:	ldr	pc, [ip, #1264]!	; 0x4f0

00000b3c <operhash_delete@plt>:
 b3c:	add	ip, pc, #0, 12
 b40:	add	ip, ip, #73728	; 0x12000
 b44:	ldr	pc, [ip, #1256]!	; 0x4e8

00000b48 <sendto_realops_snomask@plt>:
 b48:	add	ip, pc, #0, 12
 b4c:	add	ip, ip, #73728	; 0x12000
 b50:	ldr	pc, [ip, #1248]!	; 0x4e0

00000b54 <bandb_add@plt>:
 b54:	add	ip, pc, #0, 12
 b58:	add	ip, ip, #73728	; 0x12000
 b5c:	ldr	pc, [ip, #1240]!	; 0x4d8

00000b60 <deactivate_conf@plt>:
 b60:	add	ip, pc, #0, 12
 b64:	add	ip, ip, #73728	; 0x12000
 b68:	ldr	pc, [ip, #1232]!	; 0x4d0

00000b6c <check_xlines@plt>:
 b6c:	add	ip, pc, #0, 12
 b70:	add	ip, ip, #73728	; 0x12000
 b74:	ldr	pc, [ip, #1224]!	; 0x4c8

00000b78 <get_oper_name@plt>:
 b78:	add	ip, pc, #0, 12
 b7c:	add	ip, ip, #73728	; 0x12000
 b80:	ldr	pc, [ip, #1216]!	; 0x4c0

00000b84 <rb_free_rb_dlink_node@plt>:
 b84:	add	ip, pc, #0, 12
 b88:	add	ip, ip, #73728	; 0x12000
 b8c:	ldr	pc, [ip, #1208]!	; 0x4b8

00000b90 <cluster_generic@plt>:
 b90:	add	ip, pc, #0, 12
 b94:	add	ip, ip, #73728	; 0x12000
 b98:	ldr	pc, [ip, #1200]!	; 0x4b0

00000b9c <operhash_add@plt>:
 b9c:	add	ip, pc, #0, 12
 ba0:	add	ip, ip, #73728	; 0x12000
 ba4:	ldr	pc, [ip, #1192]!	; 0x4a8

00000ba8 <strcpy@plt>:
 ba8:	add	ip, pc, #0, 12
 bac:	add	ip, ip, #73728	; 0x12000
 bb0:	ldr	pc, [ip, #1184]!	; 0x4a0

00000bb4 <sendto_server@plt>:
 bb4:	add	ip, pc, #0, 12
 bb8:	add	ip, ip, #73728	; 0x12000
 bbc:	ldr	pc, [ip, #1176]!	; 0x498

00000bc0 <malloc@plt>:
 bc0:	add	ip, pc, #0, 12
 bc4:	add	ip, ip, #73728	; 0x12000
 bc8:	ldr	pc, [ip, #1168]!	; 0x490

00000bcc <__gmon_start__@plt>:
 bcc:	add	ip, pc, #0, 12
 bd0:	add	ip, ip, #73728	; 0x12000
 bd4:	ldr	pc, [ip, #1160]!	; 0x488

00000bd8 <free_conf@plt>:
 bd8:	add	ip, pc, #0, 12
 bdc:	add	ip, ip, #73728	; 0x12000
 be0:	ldr	pc, [ip, #1152]!	; 0x480

00000be4 <rb_make_rb_dlink_node@plt>:
 be4:	add	ip, pc, #0, 12
 be8:	add	ip, ip, #73728	; 0x12000
 bec:	ldr	pc, [ip, #1144]!	; 0x478

00000bf0 <strlen@plt>:
 bf0:	add	ip, pc, #0, 12
 bf4:	add	ip, ip, #73728	; 0x12000
 bf8:	ldr	pc, [ip, #1136]!	; 0x470

00000bfc <find_xline_mask@plt>:
 bfc:	add	ip, pc, #0, 12
 c00:	add	ip, ip, #73728	; 0x12000
 c04:	ldr	pc, [ip, #1128]!	; 0x468

00000c08 <ilog@plt>:
 c08:	add	ip, pc, #0, 12
 c0c:	add	ip, ip, #73728	; 0x12000
 c10:	ldr	pc, [ip, #1120]!	; 0x460

00000c14 <collapse@plt>:
 c14:	add	ip, pc, #0, 12
 c18:	add	ip, ip, #73728	; 0x12000
 c1c:	ldr	pc, [ip, #1112]!	; 0x458

00000c20 <match@plt>:
 c20:	add	ip, pc, #0, 12
 c24:	add	ip, ip, #73728	; 0x12000
 c28:	ldr	pc, [ip, #1104]!	; 0x450

00000c2c <valid_temp_time@plt>:
 c2c:	add	ip, pc, #0, 12
 c30:	add	ip, ip, #73728	; 0x12000
 c34:	ldr	pc, [ip, #1096]!	; 0x448

00000c38 <remove_reject_mask@plt>:
 c38:	add	ip, pc, #0, 12
 c3c:	add	ip, ip, #73728	; 0x12000
 c40:	ldr	pc, [ip, #1088]!	; 0x440

00000c44 <sendto_one_notice@plt>:
 c44:	add	ip, pc, #0, 12
 c48:	add	ip, ip, #73728	; 0x12000
 c4c:	ldr	pc, [ip, #1080]!	; 0x438

00000c50 <bandb_del@plt>:
 c50:	add	ip, pc, #0, 12
 c54:	add	ip, ip, #73728	; 0x12000
 c58:	ldr	pc, [ip, #1072]!	; 0x430

00000c5c <atoi@plt>:
 c5c:	add	ip, pc, #0, 12
 c60:	add	ip, ip, #73728	; 0x12000
 c64:	ldr	pc, [ip, #1064]!	; 0x428

00000c68 <valid_wild_card_simple@plt>:
 c68:	add	ip, pc, #0, 12
 c6c:	add	ip, ip, #73728	; 0x12000
 c70:	ldr	pc, [ip, #1056]!	; 0x420

00000c74 <find_shared_conf@plt>:
 c74:	add	ip, pc, #0, 12
 c78:	add	ip, ip, #73728	; 0x12000
 c7c:	ldr	pc, [ip, #1048]!	; 0x418

00000c80 <privilegeset_in_set@plt>:
 c80:	add	ip, pc, #0, 12
 c84:	add	ip, ip, #73728	; 0x12000
 c88:	ldr	pc, [ip, #1040]!	; 0x410

00000c8c <irccmp@plt>:
 c8c:	add	ip, pc, #0, 12
 c90:	add	ip, ip, #73728	; 0x12000
 c94:	ldr	pc, [ip, #1032]!	; 0x408

00000c98 <__assert_fail@plt>:
 c98:	add	ip, pc, #0, 12
 c9c:	add	ip, ip, #73728	; 0x12000
 ca0:	ldr	pc, [ip, #1024]!	; 0x400

Disassembly of section .text:

00000ca4 <call_weak_fn>:
     ca4:	ldr	r3, [pc, #20]	; cc0 <call_weak_fn+0x1c>
     ca8:	ldr	r2, [pc, #20]	; cc4 <call_weak_fn+0x20>
     cac:	add	r3, pc, r3
     cb0:	ldr	r2, [r3, r2]
     cb4:	cmp	r2, #0
     cb8:	bxeq	lr
     cbc:	b	bcc <__gmon_start__@plt>
     cc0:	.word	0x0001234c
     cc4:	.word	0x000000c0

00000cc8 <deregister_tm_clones>:
     cc8:	ldr	r0, [pc, #44]	; cfc <deregister_tm_clones+0x34>
     ccc:	ldr	r3, [pc, #44]	; d00 <deregister_tm_clones+0x38>
     cd0:	add	r0, pc, r0
     cd4:	add	r3, pc, r3
     cd8:	cmp	r3, r0
     cdc:	ldr	r3, [pc, #32]	; d04 <deregister_tm_clones+0x3c>
     ce0:	add	r3, pc, r3
     ce4:	bxeq	lr
     ce8:	ldr	r2, [pc, #24]	; d08 <deregister_tm_clones+0x40>
     cec:	ldr	r3, [r3, r2]
     cf0:	cmp	r3, #0
     cf4:	bxeq	lr
     cf8:	bx	r3
     cfc:	.word	0x000124c0
     d00:	.word	0x000124bc
     d04:	.word	0x00012318
     d08:	.word	0x000000a8

00000d0c <register_tm_clones>:
     d0c:	ldr	r0, [pc, #56]	; d4c <register_tm_clones+0x40>
     d10:	ldr	r3, [pc, #56]	; d50 <register_tm_clones+0x44>
     d14:	add	r0, pc, r0
     d18:	add	r3, pc, r3
     d1c:	sub	r1, r3, r0
     d20:	ldr	r3, [pc, #44]	; d54 <register_tm_clones+0x48>
     d24:	asr	r1, r1, #2
     d28:	add	r3, pc, r3
     d2c:	add	r1, r1, r1, lsr #31
     d30:	asrs	r1, r1, #1
     d34:	bxeq	lr
     d38:	ldr	r2, [pc, #24]	; d58 <register_tm_clones+0x4c>
     d3c:	ldr	r3, [r3, r2]
     d40:	cmp	r3, #0
     d44:	bxeq	lr
     d48:	bx	r3
     d4c:	.word	0x0001247c
     d50:	.word	0x00012478
     d54:	.word	0x000122d0
     d58:	.word	0x000000c8

00000d5c <__do_global_dtors_aux>:
     d5c:	ldr	r3, [pc, #76]	; db0 <__do_global_dtors_aux+0x54>
     d60:	ldr	r2, [pc, #76]	; db4 <__do_global_dtors_aux+0x58>
     d64:	add	r3, pc, r3
     d68:	add	r2, pc, r2
     d6c:	ldrb	r3, [r3]
     d70:	cmp	r3, #0
     d74:	bxne	lr
     d78:	ldr	r3, [pc, #56]	; db8 <__do_global_dtors_aux+0x5c>
     d7c:	push	{r4, lr}
     d80:	ldr	r3, [r2, r3]
     d84:	cmp	r3, #0
     d88:	beq	d98 <__do_global_dtors_aux+0x3c>
     d8c:	ldr	r3, [pc, #40]	; dbc <__do_global_dtors_aux+0x60>
     d90:	ldr	r0, [pc, r3]
     d94:	bl	b0c <__cxa_finalize@plt>
     d98:	bl	cc8 <deregister_tm_clones>
     d9c:	ldr	r3, [pc, #28]	; dc0 <__do_global_dtors_aux+0x64>
     da0:	mov	r2, #1
     da4:	add	r3, pc, r3
     da8:	strb	r2, [r3]
     dac:	pop	{r4, pc}
     db0:	.word	0x0001242c
     db4:	.word	0x00012290
     db8:	.word	0x000000a4
     dbc:	.word	0x00012340
     dc0:	.word	0x000123ec

00000dc4 <frame_dummy>:
     dc4:	b	d0c <register_tm_clones>

00000dc8 <rb_strdup>:
     dc8:	push	{r4, r5, r6, lr}
     dcc:	mov	r5, r0
     dd0:	bl	bf0 <strlen@plt>
     dd4:	add	r0, r0, #1
     dd8:	bl	bc0 <malloc@plt>
     ddc:	subs	r4, r0, #0
     de0:	bne	de8 <rb_strdup+0x20>
     de4:	bl	b30 <rb_outofmemory@plt>
     de8:	mov	r1, r5
     dec:	bl	ba8 <strcpy@plt>
     df0:	mov	r0, r4
     df4:	pop	{r4, r5, r6, pc}

00000df8 <propagate_xline.part.0>:
     df8:	push	{r4, r5, r6, r7, r8, r9, lr}
     dfc:	mov	r7, r2
     e00:	sub	sp, sp, #28
     e04:	mov	r4, r1
     e08:	mov	r9, r0
     e0c:	ldr	r5, [pc, #116]	; e88 <propagate_xline.part.0+0x90>
     e10:	ldr	r2, [pc, #116]	; e8c <propagate_xline.part.0+0x94>
     e14:	ldr	r8, [sp, #56]	; 0x38
     e18:	add	r5, pc, r5
     e1c:	ldr	r6, [r5, r2]
     e20:	stmib	sp, {r4, r7}
     e24:	str	r3, [sp, #12]
     e28:	ldr	r3, [pc, #96]	; e90 <propagate_xline.part.0+0x98>
     e2c:	str	r8, [sp, #16]
     e30:	add	r3, pc, r3
     e34:	str	r3, [sp]
     e38:	mov	r3, #0
     e3c:	ldr	r2, [r6]
     e40:	bl	b00 <sendto_match_servs@plt>
     e44:	ldr	r3, [pc, #72]	; e94 <propagate_xline.part.0+0x9c>
     e48:	mov	r1, r4
     e4c:	mov	r0, r9
     e50:	ldr	r2, [r5, r3]
     e54:	mov	r3, #0
     e58:	str	r4, [sp, #4]
     e5c:	str	r3, [sp, #8]
     e60:	ldr	r3, [pc, #48]	; e98 <propagate_xline.part.0+0xa0>
     e64:	str	r7, [sp, #12]
     e68:	str	r8, [sp, #16]
     e6c:	add	r3, pc, r3
     e70:	str	r3, [sp]
     e74:	ldr	r2, [r2]
     e78:	ldr	r3, [r6]
     e7c:	bl	b00 <sendto_match_servs@plt>
     e80:	add	sp, sp, #28
     e84:	pop	{r4, r5, r6, r7, r8, r9, pc}
     e88:	.word	0x000121e0
     e8c:	.word	0x000000b4
     e90:	.word	0x0000119c
     e94:	.word	0x000000d0
     e98:	.word	0x00001173

00000e9c <valid_xline>:
     e9c:	push	{r0, r1, r4, r5, r6, lr}
     ea0:	cmp	r2, #0
     ea4:	mov	r4, r0
     ea8:	ldr	r6, [pc, #188]	; f6c <valid_xline+0xd0>
     eac:	add	r6, pc, r6
     eb0:	beq	ec0 <valid_xline+0x24>
     eb4:	ldrb	r3, [r2]
     eb8:	cmp	r3, #0
     ebc:	bne	f38 <valid_xline+0x9c>
     ec0:	ldr	r3, [r4, #36]	; 0x24
     ec4:	ldrh	r2, [r3, #80]	; 0x50
     ec8:	cmp	r2, #32
     ecc:	ldr	r2, [pc, #156]	; f70 <valid_xline+0xd4>
     ed0:	ldr	r2, [r6, r2]
     ed4:	bne	f2c <valid_xline+0x90>
     ed8:	ldrb	r3, [r3, #396]	; 0x18c
     edc:	cmp	r3, #0
     ee0:	beq	f2c <valid_xline+0x90>
     ee4:	ldrb	r3, [r2, #396]	; 0x18c
     ee8:	cmp	r3, #0
     eec:	addeq	r2, r2, #88	; 0x58
     ef0:	addne	r2, r2, #396	; 0x18c
     ef4:	ldrb	r3, [r4, #396]	; 0x18c
     ef8:	cmp	r3, #0
     efc:	addne	r3, r4, #396	; 0x18c
     f00:	addeq	r3, r4, #88	; 0x58
     f04:	ldr	r1, [pc, #104]	; f74 <valid_xline+0xd8>
     f08:	mov	r0, r4
     f0c:	add	r1, pc, r1
     f10:	str	r1, [sp]
     f14:	ldr	r1, [pc, #92]	; f78 <valid_xline+0xdc>
     f18:	add	r1, pc, r1
     f1c:	bl	b18 <sendto_one@plt>
     f20:	mov	r0, #0
     f24:	add	sp, sp, #8
     f28:	pop	{r4, r5, r6, pc}
     f2c:	add	r3, r4, #88	; 0x58
     f30:	add	r2, r2, #88	; 0x58
     f34:	b	f04 <valid_xline+0x68>
     f38:	mov	r0, r1
     f3c:	bl	c68 <valid_wild_card_simple@plt>
     f40:	subs	r5, r0, #0
     f44:	movne	r0, #1
     f48:	bne	f24 <valid_xline+0x88>
     f4c:	ldr	r3, [pc, #40]	; f7c <valid_xline+0xe0>
     f50:	mov	r0, r4
     f54:	ldr	r1, [pc, #36]	; f80 <valid_xline+0xe4>
     f58:	ldr	r3, [r6, r3]
     f5c:	add	r1, pc, r1
     f60:	ldr	r2, [r3, #240]	; 0xf0
     f64:	bl	c44 <sendto_one_notice@plt>
     f68:	b	f20 <valid_xline+0x84>
     f6c:	.word	0x0001214c
     f70:	.word	0x000000cc
     f74:	.word	0x000013d7
     f78:	.word	0x000010e2
     f7c:	.word	0x000000d4
     f80:	.word	0x000010c3

00000f84 <rb_dlinkAdd>:
     f84:	cmp	r0, #0
     f88:	push	{r4, lr}
     f8c:	bne	fb0 <rb_dlinkAdd+0x2c>
     f90:	ldr	r3, [pc, #124]	; 1014 <rb_dlinkAdd+0x90>
     f94:	mov	r2, #143	; 0x8f
     f98:	ldr	r1, [pc, #120]	; 1018 <rb_dlinkAdd+0x94>
     f9c:	ldr	r0, [pc, #120]	; 101c <rb_dlinkAdd+0x98>
     fa0:	add	r3, pc, r3
     fa4:	add	r1, pc, r1
     fa8:	add	r0, pc, r0
     fac:	bl	c98 <__assert_fail@plt>
     fb0:	cmp	r1, #0
     fb4:	bne	fd8 <rb_dlinkAdd+0x54>
     fb8:	ldr	r3, [pc, #96]	; 1020 <rb_dlinkAdd+0x9c>
     fbc:	mov	r2, #144	; 0x90
     fc0:	ldr	r1, [pc, #92]	; 1024 <rb_dlinkAdd+0xa0>
     fc4:	ldr	r0, [pc, #92]	; 1028 <rb_dlinkAdd+0xa4>
     fc8:	add	r3, pc, r3
     fcc:	add	r1, pc, r1
     fd0:	add	r0, pc, r0
     fd4:	b	fac <rb_dlinkAdd+0x28>
     fd8:	mov	r3, #0
     fdc:	stm	r1, {r0, r3}
     fe0:	ldr	r3, [r2]
     fe4:	cmp	r3, #0
     fe8:	str	r3, [r1, #8]
     fec:	strne	r1, [r3, #4]
     ff0:	bne	1000 <rb_dlinkAdd+0x7c>
     ff4:	ldr	r3, [r2, #4]
     ff8:	cmp	r3, #0
     ffc:	streq	r1, [r2, #4]
    1000:	ldr	r3, [r2, #8]
    1004:	str	r1, [r2]
    1008:	add	r3, r3, #1
    100c:	str	r3, [r2, #8]
    1010:	pop	{r4, pc}
    1014:	.word	0x00000fe8
    1018:	.word	0x000010be
    101c:	.word	0x000010d6
    1020:	.word	0x00000fc0
    1024:	.word	0x00001096
    1028:	.word	0x000010bb

0000102c <apply_xline>:
    102c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    1030:	sub	sp, sp, #40	; 0x28
    1034:	mov	sl, r1
    1038:	mov	r8, r2
    103c:	mov	r5, r0
    1040:	mov	r6, r3
    1044:	ldrb	r7, [sp, #72]	; 0x48
    1048:	bl	ae8 <make_conf@plt>
    104c:	mov	r3, #128	; 0x80
    1050:	mov	r4, r0
    1054:	ldr	r9, [pc, #700]	; 1318 <apply_xline+0x2ec>
    1058:	str	r3, [r0]
    105c:	bl	af4 <rb_current_time@plt>
    1060:	str	r0, [r4, #40]	; 0x28
    1064:	mov	r0, sl
    1068:	bl	dc8 <rb_strdup>
    106c:	str	r0, [r4, #16]
    1070:	mov	r0, r8
    1074:	add	r9, pc, r9
    1078:	bl	dc8 <rb_strdup>
    107c:	str	r0, [r4, #20]
    1080:	ldr	r0, [r4, #16]
    1084:	bl	c14 <collapse@plt>
    1088:	mov	r0, r5
    108c:	bl	b78 <get_oper_name@plt>
    1090:	bl	b9c <operhash_add@plt>
    1094:	cmp	r7, #0
    1098:	str	r0, [r4, #12]
    109c:	beq	11f4 <apply_xline+0x1c8>
    10a0:	ldr	r3, [r4, #4]
    10a4:	orr	r3, r3, #8912896	; 0x880000
    10a8:	str	r3, [r4, #4]
    10ac:	bl	af4 <rb_current_time@plt>
    10b0:	add	r0, r0, r6
    10b4:	str	r0, [r4, #36]	; 0x24
    10b8:	str	r0, [r4, #44]	; 0x2c
    10bc:	mov	r0, r4
    10c0:	bl	b24 <replace_old_ban@plt>
    10c4:	bl	be4 <rb_make_rb_dlink_node@plt>
    10c8:	ldr	r3, [pc, #588]	; 131c <apply_xline+0x2f0>
    10cc:	mov	r1, r0
    10d0:	mov	r0, r4
    10d4:	ldr	r3, [r9, r3]
    10d8:	mov	r2, r3
    10dc:	str	r3, [sp, #36]	; 0x24
    10e0:	bl	f84 <rb_dlinkAdd>
    10e4:	mov	r0, r5
    10e8:	bl	b78 <get_oper_name@plt>
    10ec:	mov	r3, #60	; 0x3c
    10f0:	ldr	r2, [pc, #552]	; 1320 <apply_xline+0x2f4>
    10f4:	mov	r1, #0
    10f8:	str	r8, [sp, #8]
    10fc:	sdiv	r6, r6, r3
    1100:	ldr	r3, [r4, #16]
    1104:	add	r2, pc, r2
    1108:	str	r6, [sp]
    110c:	str	r3, [sp, #4]
    1110:	mov	r3, r0
    1114:	mov	r0, #256	; 0x100
    1118:	bl	b48 <sendto_realops_snomask@plt>
    111c:	mov	r0, r5
    1120:	bl	b78 <get_oper_name@plt>
    1124:	ldr	r1, [pc, #504]	; 1324 <apply_xline+0x2f8>
    1128:	mov	r2, r0
    112c:	mov	r3, r6
    1130:	mov	r0, #7
    1134:	str	sl, [sp]
    1138:	str	r8, [sp, #4]
    113c:	add	r1, pc, r1
    1140:	bl	c08 <ilog@plt>
    1144:	ldr	r1, [pc, #476]	; 1328 <apply_xline+0x2fc>
    1148:	mov	r0, r5
    114c:	mov	r2, r6
    1150:	add	r5, r5, #396	; 0x18c
    1154:	ldr	r3, [r4, #16]
    1158:	add	r1, pc, r1
    115c:	bl	c44 <sendto_one_notice@plt>
    1160:	ldr	r2, [pc, #452]	; 132c <apply_xline+0x300>
    1164:	ldr	r3, [r4, #40]	; 0x28
    1168:	ldr	r1, [r9, r2]
    116c:	ldr	r2, [pc, #444]	; 1330 <apply_xline+0x304>
    1170:	ldr	r0, [r1]
    1174:	ldr	r2, [r9, r2]
    1178:	ldr	r2, [r2]
    117c:	str	r8, [sp, #24]
    1180:	ldr	r1, [r4, #44]	; 0x2c
    1184:	orr	r2, r0, r2
    1188:	sub	r1, r1, r3
    118c:	str	r1, [sp, #20]
    1190:	ldr	r1, [r4, #36]	; 0x24
    1194:	str	r3, [sp, #12]
    1198:	sub	r1, r1, r3
    119c:	str	r1, [sp, #16]
    11a0:	ldr	r3, [r4, #16]
    11a4:	str	r5, [sp, #4]
    11a8:	str	r3, [sp, #8]
    11ac:	ldr	r3, [pc, #384]	; 1334 <apply_xline+0x308>
    11b0:	add	r3, pc, r3
    11b4:	str	r3, [sp]
    11b8:	mov	r3, #0
    11bc:	mov	r1, r3
    11c0:	mov	r0, r3
    11c4:	bl	bb4 <sendto_server@plt>
    11c8:	bl	be4 <rb_make_rb_dlink_node@plt>
    11cc:	ldr	r3, [pc, #356]	; 1338 <apply_xline+0x30c>
    11d0:	mov	r1, r0
    11d4:	mov	r0, r4
    11d8:	ldr	r3, [r9, r3]
    11dc:	mov	r2, r3
    11e0:	str	r3, [sp, #36]	; 0x24
    11e4:	bl	f84 <rb_dlinkAdd>
    11e8:	add	sp, sp, #40	; 0x28
    11ec:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    11f0:	b	b6c <check_xlines@plt>
    11f4:	cmp	r6, #0
    11f8:	ble	1284 <apply_xline+0x258>
    11fc:	bl	af4 <rb_current_time@plt>
    1200:	add	r0, r0, r6
    1204:	str	r0, [r4, #36]	; 0x24
    1208:	mov	r0, r5
    120c:	bl	b78 <get_oper_name@plt>
    1210:	mov	r3, #60	; 0x3c
    1214:	ldr	r2, [pc, #288]	; 133c <apply_xline+0x310>
    1218:	mov	r1, r7
    121c:	str	r8, [sp, #8]
    1220:	sdiv	r6, r6, r3
    1224:	ldr	r3, [r4, #16]
    1228:	add	r2, pc, r2
    122c:	str	r6, [sp]
    1230:	str	r3, [sp, #4]
    1234:	mov	r3, r0
    1238:	mov	r0, #256	; 0x100
    123c:	bl	b48 <sendto_realops_snomask@plt>
    1240:	mov	r0, r5
    1244:	bl	b78 <get_oper_name@plt>
    1248:	ldr	r1, [pc, #240]	; 1340 <apply_xline+0x314>
    124c:	mov	r3, r6
    1250:	mov	r2, r0
    1254:	mov	r0, #7
    1258:	str	sl, [sp]
    125c:	str	r8, [sp, #4]
    1260:	add	r1, pc, r1
    1264:	bl	c08 <ilog@plt>
    1268:	ldr	r1, [pc, #212]	; 1344 <apply_xline+0x318>
    126c:	mov	r2, r6
    1270:	mov	r0, r5
    1274:	ldr	r3, [r4, #16]
    1278:	add	r1, pc, r1
    127c:	bl	c44 <sendto_one_notice@plt>
    1280:	b	11c8 <apply_xline+0x19c>
    1284:	mov	r0, r5
    1288:	bl	b78 <get_oper_name@plt>
    128c:	ldr	r3, [r4, #20]
    1290:	mov	r1, r7
    1294:	ldr	r2, [pc, #172]	; 1348 <apply_xline+0x31c>
    1298:	str	r3, [sp, #4]
    129c:	ldr	r3, [r4, #16]
    12a0:	add	r2, pc, r2
    12a4:	str	r3, [sp]
    12a8:	mov	r3, r0
    12ac:	mov	r0, #256	; 0x100
    12b0:	bl	b48 <sendto_realops_snomask@plt>
    12b4:	ldr	r1, [pc, #144]	; 134c <apply_xline+0x320>
    12b8:	mov	r0, r5
    12bc:	ldrd	r2, [r4, #16]
    12c0:	add	r1, pc, r1
    12c4:	bl	c44 <sendto_one_notice@plt>
    12c8:	str	r7, [sp, #4]
    12cc:	mov	r1, r5
    12d0:	mov	r0, #2
    12d4:	str	r7, [sp, #8]
    12d8:	ldr	r3, [r4, #20]
    12dc:	str	r3, [sp]
    12e0:	mov	r3, r7
    12e4:	ldr	r2, [r4, #16]
    12e8:	bl	b54 <bandb_add@plt>
    12ec:	mov	r0, r5
    12f0:	bl	b78 <get_oper_name@plt>
    12f4:	ldr	r1, [pc, #84]	; 1350 <apply_xline+0x324>
    12f8:	mov	r2, r0
    12fc:	mov	r0, #7
    1300:	ldr	r3, [r4, #20]
    1304:	add	r1, pc, r1
    1308:	str	r3, [sp]
    130c:	mov	r3, sl
    1310:	bl	c08 <ilog@plt>
    1314:	b	11c8 <apply_xline+0x19c>
    1318:	.word	0x00011f84
    131c:	.word	0x000000ac
    1320:	.word	0x00000f91
    1324:	.word	0x00000f86
    1328:	.word	0x00000f78
    132c:	.word	0x000000b8
    1330:	.word	0x000000bc
    1334:	.word	0x00000f42
    1338:	.word	0x000000b0
    133c:	.word	0x00000ee9
    1340:	.word	0x00000e62
    1344:	.word	0x00000ec9
    1348:	.word	0x00000ec6
    134c:	.word	0x00000ec4
    1350:	.word	0x00000e9c

00001354 <handle_remote_xline>:
    1354:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    1358:	mov	r5, r2
    135c:	subs	r7, r1, #0
    1360:	mov	r6, r3
    1364:	add	r1, r0, #163	; 0xa3
    1368:	movgt	r3, #16
    136c:	movle	r3, #32
    1370:	ldr	r2, [r0, #32]
    1374:	mov	r4, r0
    1378:	add	r0, r0, #152	; 0x98
    137c:	add	r2, r2, #88	; 0x58
    1380:	bl	c74 <find_shared_conf@plt>
    1384:	cmp	r0, #0
    1388:	beq	13d4 <handle_remote_xline+0x80>
    138c:	mov	r2, r6
    1390:	mov	r1, r5
    1394:	mov	r0, r4
    1398:	bl	e9c <valid_xline>
    139c:	cmp	r0, #0
    13a0:	beq	13d4 <handle_remote_xline+0x80>
    13a4:	mov	r0, r5
    13a8:	bl	bfc <find_xline_mask@plt>
    13ac:	cmp	r0, #0
    13b0:	beq	13dc <handle_remote_xline+0x88>
    13b4:	ldr	r1, [pc, #60]	; 13f8 <handle_remote_xline+0xa4>
    13b8:	mov	r2, r5
    13bc:	ldr	r3, [r0, #20]
    13c0:	add	r1, pc, r1
    13c4:	str	r3, [sp]
    13c8:	ldr	r3, [r0, #16]
    13cc:	mov	r0, r4
    13d0:	bl	c44 <sendto_one_notice@plt>
    13d4:	add	sp, sp, #12
    13d8:	pop	{r4, r5, r6, r7, pc}
    13dc:	mov	r3, r7
    13e0:	mov	r2, r6
    13e4:	str	r0, [sp]
    13e8:	mov	r1, r5
    13ec:	mov	r0, r4
    13f0:	bl	102c <apply_xline>
    13f4:	b	13d4 <handle_remote_xline+0x80>
    13f8:	.word	0x00000e89

000013fc <me_xline>:
    13fc:	ldrh	r3, [r2, #80]	; 0x50
    1400:	push	{r4, r5, r6, lr}
    1404:	ldr	r5, [sp, #16]
    1408:	cmp	r3, #64	; 0x40
    140c:	popne	{r4, r5, r6, pc}
    1410:	ldr	r3, [r2, #24]
    1414:	cmp	r3, #0
    1418:	popeq	{r4, r5, r6, pc}
    141c:	mov	r4, r2
    1420:	ldr	r0, [r5, #4]
    1424:	bl	c5c <atoi@plt>
    1428:	mov	r1, r0
    142c:	mov	r0, r4
    1430:	ldr	r2, [r5, #8]
    1434:	ldr	r3, [r5, #16]
    1438:	pop	{r4, r5, r6, lr}
    143c:	b	1354 <handle_remote_xline>

00001440 <ms_xline>:
    1440:	push	{r0, r1, r4, r5, r6, lr}
    1444:	mov	r5, r2
    1448:	mov	r0, r2
    144c:	ldr	r4, [sp, #24]
    1450:	ldr	r6, [pc, #104]	; 14c0 <ms_xline+0x80>
    1454:	ldr	r3, [r4, #16]
    1458:	add	r6, pc, r6
    145c:	str	r3, [sp]
    1460:	ldmib	r4, {r1, r2, r3}
    1464:	bl	df8 <propagate_xline.part.0>
    1468:	ldrh	r3, [r5, #80]	; 0x50
    146c:	cmp	r3, #64	; 0x40
    1470:	bne	14b8 <ms_xline+0x78>
    1474:	ldr	r3, [r5, #24]
    1478:	cmp	r3, #0
    147c:	beq	14b8 <ms_xline+0x78>
    1480:	ldr	r3, [pc, #60]	; 14c4 <ms_xline+0x84>
    1484:	ldr	r0, [r4, #4]
    1488:	ldr	r1, [r6, r3]
    148c:	add	r1, r1, #88	; 0x58
    1490:	bl	c20 <match@plt>
    1494:	cmp	r0, #0
    1498:	beq	14b8 <ms_xline+0x78>
    149c:	ldr	r2, [r4, #8]
    14a0:	mov	r1, #0
    14a4:	mov	r0, r5
    14a8:	ldr	r3, [r4, #16]
    14ac:	add	sp, sp, #8
    14b0:	pop	{r4, r5, r6, lr}
    14b4:	b	1354 <handle_remote_xline>
    14b8:	add	sp, sp, #8
    14bc:	pop	{r4, r5, r6, pc}
    14c0:	.word	0x00011ba0
    14c4:	.word	0x000000cc

000014c8 <mo_xline>:
    14c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    14cc:	mov	fp, r3
    14d0:	sub	sp, sp, #44	; 0x2c
    14d4:	mov	r4, r2
    14d8:	ldr	r3, [r2, #24]
    14dc:	ldr	r5, [pc, #948]	; 1898 <mo_xline+0x3d0>
    14e0:	ldr	r7, [sp, #80]	; 0x50
    14e4:	cmp	r3, #0
    14e8:	add	r5, pc, r5
    14ec:	bne	1524 <mo_xline+0x5c>
    14f0:	ldr	r3, [pc, #932]	; 189c <mo_xline+0x3d4>
    14f4:	ldr	r1, [pc, #932]	; 18a0 <mo_xline+0x3d8>
    14f8:	ldr	r2, [r5, r3]
    14fc:	ldr	r3, [pc, #928]	; 18a4 <mo_xline+0x3dc>
    1500:	add	r1, pc, r1
    1504:	add	r2, r2, #88	; 0x58
    1508:	add	r3, pc, r3
    150c:	str	r3, [sp, #80]	; 0x50
    1510:	add	r3, r4, #88	; 0x58
    1514:	mov	r0, r4
    1518:	add	sp, sp, #44	; 0x2c
    151c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1520:	b	b18 <sendto_one@plt>
    1524:	ldr	r0, [r3, #36]	; 0x24
    1528:	cmp	r0, #0
    152c:	beq	14f0 <mo_xline+0x28>
    1530:	ldr	r3, [pc, #880]	; 18a8 <mo_xline+0x3e0>
    1534:	ldr	r1, [pc, #880]	; 18ac <mo_xline+0x3e4>
    1538:	ldr	r3, [r5, r3]
    153c:	add	r1, pc, r1
    1540:	ldr	r3, [r3, #324]	; 0x144
    1544:	str	r3, [sp, #28]
    1548:	bl	c80 <privilegeset_in_set@plt>
    154c:	cmp	r0, #0
    1550:	beq	14f0 <mo_xline+0x28>
    1554:	ldr	r0, [r7, #4]
    1558:	bl	c2c <valid_temp_time@plt>
    155c:	subs	r8, r0, #0
    1560:	movge	sl, #2
    1564:	movlt	sl, #1
    1568:	add	r1, sl, #2
    156c:	movlt	r8, #0
    1570:	lsl	r9, sl, #2
    1574:	cmp	r1, fp
    1578:	add	r2, sl, #1
    157c:	ldr	r6, [r7, sl, lsl #2]
    1580:	movge	r9, #0
    1584:	bge	1608 <mo_xline+0x140>
    1588:	ldr	r1, [pc, #800]	; 18b0 <mo_xline+0x3e8>
    158c:	add	r9, r7, r9
    1590:	str	r2, [sp, #32]
    1594:	ldr	r0, [r9, #4]
    1598:	add	r1, pc, r1
    159c:	bl	c8c <irccmp@plt>
    15a0:	cmp	r0, #0
    15a4:	ldr	r2, [sp, #32]
    15a8:	bne	1638 <mo_xline+0x170>
    15ac:	ldr	r2, [r4, #24]
    15b0:	cmp	r2, #0
    15b4:	bne	15e0 <mo_xline+0x118>
    15b8:	ldr	r3, [pc, #732]	; 189c <mo_xline+0x3d4>
    15bc:	ldr	r1, [pc, #752]	; 18b4 <mo_xline+0x3ec>
    15c0:	ldr	r2, [r5, r3]
    15c4:	ldr	r3, [pc, #748]	; 18b8 <mo_xline+0x3f0>
    15c8:	add	r1, pc, r1
    15cc:	add	r2, r2, #88	; 0x58
    15d0:	add	r3, pc, r3
    15d4:	str	r3, [sp, #80]	; 0x50
    15d8:	add	r3, r4, #88	; 0x58
    15dc:	b	1514 <mo_xline+0x4c>
    15e0:	ldr	r0, [r2, #36]	; 0x24
    15e4:	cmp	r0, #0
    15e8:	beq	15b8 <mo_xline+0xf0>
    15ec:	ldr	r1, [pc, #712]	; 18bc <mo_xline+0x3f4>
    15f0:	add	r1, pc, r1
    15f4:	bl	c80 <privilegeset_in_set@plt>
    15f8:	cmp	r0, #0
    15fc:	addne	r2, sl, #3
    1600:	ldrne	r9, [r9, #8]
    1604:	beq	15b8 <mo_xline+0xf0>
    1608:	cmp	r2, fp
    160c:	blt	163c <mo_xline+0x174>
    1610:	ldr	r3, [pc, #644]	; 189c <mo_xline+0x3d4>
    1614:	ldr	r1, [pc, #676]	; 18c0 <mo_xline+0x3f8>
    1618:	ldr	r2, [r5, r3]
    161c:	ldr	r3, [pc, #672]	; 18c4 <mo_xline+0x3fc>
    1620:	add	r1, pc, r1
    1624:	add	r2, r2, #88	; 0x58
    1628:	add	r3, pc, r3
    162c:	str	r3, [sp, #80]	; 0x50
    1630:	add	r3, r4, #88	; 0x58
    1634:	b	1514 <mo_xline+0x4c>
    1638:	mov	r9, #0
    163c:	ldr	r7, [r7, r2, lsl #2]
    1640:	cmp	r7, #0
    1644:	beq	1610 <mo_xline+0x148>
    1648:	ldrb	r3, [r7]
    164c:	cmp	r3, #0
    1650:	beq	1610 <mo_xline+0x148>
    1654:	cmp	r9, #0
    1658:	beq	1734 <mo_xline+0x26c>
    165c:	cmp	r8, #0
    1660:	bne	16ec <mo_xline+0x224>
    1664:	ldr	r3, [pc, #604]	; 18c8 <mo_xline+0x400>
    1668:	mov	r2, r6
    166c:	mov	r1, r9
    1670:	mov	r0, r4
    1674:	str	r7, [sp]
    1678:	add	r3, pc, r3
    167c:	bl	df8 <propagate_xline.part.0>
    1680:	ldr	r3, [pc, #532]	; 189c <mo_xline+0x3d4>
    1684:	mov	r0, r9
    1688:	ldr	r1, [r5, r3]
    168c:	add	r1, r1, #88	; 0x58
    1690:	bl	c20 <match@plt>
    1694:	cmp	r0, #0
    1698:	beq	16e4 <mo_xline+0x21c>
    169c:	mov	r9, #0
    16a0:	mov	r0, r6
    16a4:	bl	bfc <find_xline_mask@plt>
    16a8:	cmp	r0, #0
    16ac:	beq	1834 <mo_xline+0x36c>
    16b0:	ldr	r3, [pc, #484]	; 189c <mo_xline+0x3d4>
    16b4:	ldr	r1, [pc, #528]	; 18cc <mo_xline+0x404>
    16b8:	ldr	r2, [r5, r3]
    16bc:	ldr	r3, [r0, #20]
    16c0:	add	r1, pc, r1
    16c4:	add	r2, r2, #88	; 0x58
    16c8:	str	r3, [sp, #8]
    16cc:	ldr	r3, [r0, #16]
    16d0:	mov	r0, r4
    16d4:	str	r6, [sp]
    16d8:	str	r3, [sp, #4]
    16dc:	add	r3, r4, #88	; 0x58
    16e0:	bl	b18 <sendto_one@plt>
    16e4:	add	sp, sp, #44	; 0x2c
    16e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    16ec:	ldr	r3, [pc, #476]	; 18d0 <mo_xline+0x408>
    16f0:	mov	r1, r9
    16f4:	mov	r0, r4
    16f8:	ldr	r2, [r5, r3]
    16fc:	str	r9, [sp, #4]
    1700:	ldr	r3, [pc, #460]	; 18d4 <mo_xline+0x40c>
    1704:	str	r8, [sp, #8]
    1708:	str	r6, [sp, #12]
    170c:	str	r7, [sp, #20]
    1710:	add	r3, pc, r3
    1714:	str	r3, [sp, #16]
    1718:	ldr	r3, [pc, #440]	; 18d8 <mo_xline+0x410>
    171c:	add	r3, pc, r3
    1720:	str	r3, [sp]
    1724:	mov	r3, #0
    1728:	ldr	r2, [r2]
    172c:	bl	b00 <sendto_match_servs@plt>
    1730:	b	1680 <mo_xline+0x1b8>
    1734:	ldr	r3, [sp, #28]
    1738:	cmp	r3, #0
    173c:	movne	r9, #1
    1740:	bne	16a0 <mo_xline+0x1d8>
    1744:	ldr	r3, [pc, #400]	; 18dc <mo_xline+0x414>
    1748:	ldr	r3, [r5, r3]
    174c:	ldr	r2, [r3, #8]
    1750:	cmp	r2, #0
    1754:	beq	169c <mo_xline+0x1d4>
    1758:	ldr	r9, [r3]
    175c:	ldr	r3, [pc, #380]	; 18e0 <mo_xline+0x418>
    1760:	ldr	fp, [pc, #380]	; 18e4 <mo_xline+0x41c>
    1764:	add	r3, pc, r3
    1768:	str	r3, [sp, #32]
    176c:	add	fp, pc, fp
    1770:	ldr	r3, [pc, #368]	; 18e8 <mo_xline+0x420>
    1774:	add	r3, pc, r3
    1778:	str	r3, [sp, #36]	; 0x24
    177c:	cmp	r9, #0
    1780:	beq	169c <mo_xline+0x1d4>
    1784:	ldr	sl, [r9]
    1788:	cmp	r8, #0
    178c:	ldr	r3, [sl, #12]
    1790:	bne	17fc <mo_xline+0x334>
    1794:	tst	r3, #32
    1798:	beq	17f4 <mo_xline+0x32c>
    179c:	ldr	r3, [pc, #328]	; 18ec <mo_xline+0x424>
    17a0:	mov	r0, r4
    17a4:	ldr	r1, [sl, #8]
    17a8:	ldr	r3, [r5, r3]
    17ac:	stmib	sp, {r1, r6, r7}
    17b0:	str	r3, [sp, #28]
    17b4:	ldr	r2, [sp, #28]
    17b8:	ldr	r3, [sp, #36]	; 0x24
    17bc:	str	r3, [sp]
    17c0:	mov	r3, r8
    17c4:	ldr	r2, [r2]
    17c8:	bl	b00 <sendto_match_servs@plt>
    17cc:	ldr	r3, [pc, #252]	; 18d0 <mo_xline+0x408>
    17d0:	mov	r0, r4
    17d4:	ldr	r1, [sl, #8]
    17d8:	ldr	r2, [r5, r3]
    17dc:	str	fp, [sp]
    17e0:	ldr	r3, [sp, #28]
    17e4:	stmib	sp, {r1, r6, r7}
    17e8:	ldr	r2, [r2]
    17ec:	ldr	r3, [r3]
    17f0:	bl	b00 <sendto_match_servs@plt>
    17f4:	ldr	r9, [r9, #8]
    17f8:	b	177c <mo_xline+0x2b4>
    17fc:	tst	r3, #16
    1800:	beq	17f4 <mo_xline+0x32c>
    1804:	ldr	r3, [pc, #196]	; 18d0 <mo_xline+0x408>
    1808:	mov	r0, r4
    180c:	ldr	r1, [sl, #8]
    1810:	ldr	r2, [r5, r3]
    1814:	ldr	r3, [sp, #32]
    1818:	strd	r6, [sp, #12]
    181c:	str	r3, [sp]
    1820:	mov	r3, #0
    1824:	stmib	sp, {r1, r8}
    1828:	ldr	r2, [r2]
    182c:	bl	b00 <sendto_match_servs@plt>
    1830:	b	17f4 <mo_xline+0x32c>
    1834:	mov	r2, r7
    1838:	mov	r1, r6
    183c:	mov	r0, r4
    1840:	bl	e9c <valid_xline>
    1844:	cmp	r0, #0
    1848:	beq	16e4 <mo_xline+0x21c>
    184c:	cmp	r8, #0
    1850:	moveq	r3, r9
    1854:	movne	r3, #0
    1858:	cmp	r3, #0
    185c:	beq	1878 <mo_xline+0x3b0>
    1860:	ldr	r1, [pc, #136]	; 18f0 <mo_xline+0x428>
    1864:	mov	r0, r4
    1868:	add	r1, pc, r1
    186c:	add	sp, sp, #44	; 0x2c
    1870:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1874:	b	c44 <sendto_one_notice@plt>
    1878:	mov	r3, r8
    187c:	mov	r2, r7
    1880:	str	r9, [sp, #80]	; 0x50
    1884:	mov	r1, r6
    1888:	mov	r0, r4
    188c:	add	sp, sp, #44	; 0x2c
    1890:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1894:	b	102c <apply_xline>
    1898:	.word	0x00011b10
    189c:	.word	0x000000cc
    18a0:	.word	0x00000cad
    18a4:	.word	0x00000b54
    18a8:	.word	0x000000d4
    18ac:	.word	0x00000c98
    18b0:	.word	0x00000c47
    18b4:	.word	0x00000be5
    18b8:	.word	0x00000c17
    18bc:	.word	0x00000bf2
    18c0:	.word	0x000009da
    18c4:	.word	0x00000cbb
    18c8:	.word	0x00000b79
    18cc:	.word	0x00000b7b
    18d0:	.word	0x000000d0
    18d4:	.word	0x00000ae1
    18d8:	.word	0x00000ad7
    18dc:	.word	0x000000c4
    18e0:	.word	0x0000087b
    18e4:	.word	0x00000ab5
    18e8:	.word	0x00000a9b
    18ec:	.word	0x000000b4
    18f0:	.word	0x00000a04

000018f4 <remove_xline>:
    18f4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    18f8:	mov	r5, r0
    18fc:	sub	sp, sp, #24
    1900:	mov	r6, r1
    1904:	mov	sl, r2
    1908:	ldr	r8, [pc, #896]	; 1c90 <remove_xline+0x39c>
    190c:	ldr	r3, [pc, #896]	; 1c94 <remove_xline+0x3a0>
    1910:	add	r8, pc, r8
    1914:	ldr	r9, [r8, r3]
    1918:	ldr	r7, [r9]
    191c:	cmp	r7, #0
    1920:	bne	197c <remove_xline+0x88>
    1924:	cmp	sl, #0
    1928:	beq	196c <remove_xline+0x78>
    192c:	ldr	r3, [pc, #868]	; 1c98 <remove_xline+0x3a4>
    1930:	ldr	r3, [r8, r3]
    1934:	ldr	r3, [r3, #8]
    1938:	cmp	r3, #0
    193c:	beq	196c <remove_xline+0x78>
    1940:	ldr	r3, [pc, #852]	; 1c9c <remove_xline+0x3a8>
    1944:	mov	r0, r5
    1948:	ldr	r2, [pc, #848]	; 1ca0 <remove_xline+0x3ac>
    194c:	ldr	r1, [pc, #848]	; 1ca4 <remove_xline+0x3b0>
    1950:	ldr	r3, [r8, r3]
    1954:	add	r2, pc, r2
    1958:	add	r1, pc, r1
    195c:	stm	sp, {r2, r6}
    1960:	mov	r2, #64	; 0x40
    1964:	ldr	r3, [r3]
    1968:	bl	b90 <cluster_generic@plt>
    196c:	ldr	r1, [pc, #820]	; 1ca8 <remove_xline+0x3b4>
    1970:	mov	r2, r6
    1974:	add	r1, pc, r1
    1978:	b	19b4 <remove_xline+0xc0>
    197c:	ldr	r4, [r7]
    1980:	mov	r1, r6
    1984:	ldr	r0, [r4, #16]
    1988:	bl	c8c <irccmp@plt>
    198c:	cmp	r0, #0
    1990:	bne	1b64 <remove_xline+0x270>
    1994:	ldr	r3, [r4, #44]	; 0x2c
    1998:	cmp	r3, #0
    199c:	beq	19f4 <remove_xline+0x100>
    19a0:	cmp	sl, #0
    19a4:	bne	19c4 <remove_xline+0xd0>
    19a8:	ldr	r1, [pc, #764]	; 1cac <remove_xline+0x3b8>
    19ac:	mov	r2, r6
    19b0:	add	r1, pc, r1
    19b4:	mov	r0, r5
    19b8:	add	sp, sp, #24
    19bc:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    19c0:	b	c44 <sendto_one_notice@plt>
    19c4:	ldr	r3, [pc, #740]	; 1cb0 <remove_xline+0x3bc>
    19c8:	ldr	r3, [r8, r3]
    19cc:	ldr	r7, [r3]
    19d0:	cmp	r7, #0
    19d4:	bne	19e0 <remove_xline+0xec>
    19d8:	add	sp, sp, #24
    19dc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    19e0:	ldr	r3, [r7]
    19e4:	cmp	r4, r3
    19e8:	beq	1b6c <remove_xline+0x278>
    19ec:	ldr	r7, [r7, #8]
    19f0:	b	19d0 <remove_xline+0xdc>
    19f4:	cmp	sl, #0
    19f8:	beq	1a3c <remove_xline+0x148>
    19fc:	ldr	r3, [pc, #660]	; 1c98 <remove_xline+0x3a4>
    1a00:	ldr	r3, [r8, r3]
    1a04:	ldr	r3, [r3, #8]
    1a08:	cmp	r3, #0
    1a0c:	beq	1a3c <remove_xline+0x148>
    1a10:	ldr	r3, [pc, #644]	; 1c9c <remove_xline+0x3a8>
    1a14:	mov	r0, r5
    1a18:	ldr	r2, [pc, #660]	; 1cb4 <remove_xline+0x3c0>
    1a1c:	ldr	r1, [pc, #660]	; 1cb8 <remove_xline+0x3c4>
    1a20:	ldr	r3, [r8, r3]
    1a24:	add	r2, pc, r2
    1a28:	add	r1, pc, r1
    1a2c:	stm	sp, {r2, r6}
    1a30:	mov	r2, #64	; 0x40
    1a34:	ldr	r3, [r3]
    1a38:	bl	b90 <cluster_generic@plt>
    1a3c:	ldr	r8, [r4, #36]	; 0x24
    1a40:	cmp	r8, #0
    1a44:	bne	1b10 <remove_xline+0x21c>
    1a48:	mov	r2, r8
    1a4c:	mov	r0, #2
    1a50:	ldr	r1, [r4, #16]
    1a54:	bl	c50 <bandb_del@plt>
    1a58:	ldr	r1, [pc, #604]	; 1cbc <remove_xline+0x3c8>
    1a5c:	mov	r0, r5
    1a60:	ldr	r2, [r4, #16]
    1a64:	add	r1, pc, r1
    1a68:	bl	c44 <sendto_one_notice@plt>
    1a6c:	mov	r0, r5
    1a70:	bl	b78 <get_oper_name@plt>
    1a74:	ldr	r2, [pc, #580]	; 1cc0 <remove_xline+0x3cc>
    1a78:	mov	r1, r8
    1a7c:	ldr	r3, [r4, #16]
    1a80:	add	r2, pc, r2
    1a84:	str	r3, [sp]
    1a88:	mov	r3, r0
    1a8c:	mov	r0, #256	; 0x100
    1a90:	bl	b48 <sendto_realops_snomask@plt>
    1a94:	mov	r0, r5
    1a98:	bl	b78 <get_oper_name@plt>
    1a9c:	ldr	r1, [pc, #544]	; 1cc4 <remove_xline+0x3d0>
    1aa0:	mov	r2, r0
    1aa4:	ldr	r3, [r4, #16]
    1aa8:	add	r1, pc, r1
    1aac:	mov	r0, #7
    1ab0:	bl	c08 <ilog@plt>
    1ab4:	mov	r1, #0
    1ab8:	ldr	r0, [r4, #16]
    1abc:	bl	c38 <remove_reject_mask@plt>
    1ac0:	mov	r0, r4
    1ac4:	bl	bd8 <free_conf@plt>
    1ac8:	ldrd	r2, [r7, #4]
    1acc:	mov	r0, r7
    1ad0:	cmp	r3, #0
    1ad4:	strne	r2, [r3, #4]
    1ad8:	streq	r2, [r9, #4]
    1adc:	ldr	r2, [r7, #4]
    1ae0:	cmp	r2, #0
    1ae4:	strne	r3, [r2, #8]
    1ae8:	streq	r3, [r9]
    1aec:	mov	r3, #0
    1af0:	str	r3, [r7, #4]
    1af4:	str	r3, [r7, #8]
    1af8:	ldr	r3, [r9, #8]
    1afc:	sub	r3, r3, #1
    1b00:	str	r3, [r9, #8]
    1b04:	add	sp, sp, #24
    1b08:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    1b0c:	b	b84 <rb_free_rb_dlink_node@plt>
    1b10:	ldr	r1, [pc, #432]	; 1cc8 <remove_xline+0x3d4>
    1b14:	mov	r2, r6
    1b18:	mov	r0, r5
    1b1c:	add	r1, pc, r1
    1b20:	bl	c44 <sendto_one_notice@plt>
    1b24:	mov	r0, r5
    1b28:	bl	b78 <get_oper_name@plt>
    1b2c:	ldr	r2, [pc, #408]	; 1ccc <remove_xline+0x3d8>
    1b30:	mov	r3, r0
    1b34:	mov	r1, #0
    1b38:	mov	r0, #256	; 0x100
    1b3c:	str	r6, [sp]
    1b40:	add	r2, pc, r2
    1b44:	bl	b48 <sendto_realops_snomask@plt>
    1b48:	mov	r0, r5
    1b4c:	bl	b78 <get_oper_name@plt>
    1b50:	ldr	r1, [pc, #376]	; 1cd0 <remove_xline+0x3dc>
    1b54:	mov	r3, r6
    1b58:	mov	r2, r0
    1b5c:	add	r1, pc, r1
    1b60:	b	1aac <remove_xline+0x1b8>
    1b64:	ldr	r7, [r7, #8]
    1b68:	b	191c <remove_xline+0x28>
    1b6c:	ldr	r1, [pc, #352]	; 1cd4 <remove_xline+0x3e0>
    1b70:	mov	r2, r6
    1b74:	mov	r0, r5
    1b78:	add	r1, pc, r1
    1b7c:	bl	c44 <sendto_one_notice@plt>
    1b80:	mov	r0, r5
    1b84:	bl	b78 <get_oper_name@plt>
    1b88:	ldr	r2, [pc, #328]	; 1cd8 <remove_xline+0x3e4>
    1b8c:	mov	r3, r0
    1b90:	mov	r1, #0
    1b94:	mov	r0, #256	; 0x100
    1b98:	str	r6, [sp]
    1b9c:	add	r2, pc, r2
    1ba0:	bl	b48 <sendto_realops_snomask@plt>
    1ba4:	mov	r0, r5
    1ba8:	bl	b78 <get_oper_name@plt>
    1bac:	ldr	r1, [pc, #296]	; 1cdc <remove_xline+0x3e8>
    1bb0:	mov	r3, r6
    1bb4:	mov	r2, r0
    1bb8:	mov	r0, #7
    1bbc:	add	r1, pc, r1
    1bc0:	bl	c08 <ilog@plt>
    1bc4:	bl	af4 <rb_current_time@plt>
    1bc8:	ldr	r3, [r4, #40]	; 0x28
    1bcc:	mov	r9, r0
    1bd0:	cmp	r3, r0
    1bd4:	movlt	r3, r0
    1bd8:	addge	r3, r3, #1
    1bdc:	str	r3, [r4, #36]	; 0x24
    1be0:	mov	r6, #0
    1be4:	str	r3, [r4, #40]	; 0x28
    1be8:	ldr	r0, [r4, #12]
    1bec:	bl	b3c <operhash_delete@plt>
    1bf0:	mov	r0, r5
    1bf4:	add	r5, r5, #396	; 0x18c
    1bf8:	bl	b78 <get_oper_name@plt>
    1bfc:	bl	b9c <operhash_add@plt>
    1c00:	ldr	r3, [r4, #4]
    1c04:	str	r0, [r4, #12]
    1c08:	ldr	r1, [r4, #40]	; 0x28
    1c0c:	orr	r3, r3, #8912896	; 0x880000
    1c10:	str	r3, [r4, #4]
    1c14:	ldr	r3, [pc, #196]	; 1ce0 <remove_xline+0x3ec>
    1c18:	ldr	r2, [r8, r3]
    1c1c:	ldr	r3, [pc, #192]	; 1ce4 <remove_xline+0x3f0>
    1c20:	ldr	r0, [r2]
    1c24:	ldr	r3, [r8, r3]
    1c28:	ldr	r2, [r3]
    1c2c:	ldr	r3, [r4, #44]	; 0x2c
    1c30:	str	r1, [sp, #12]
    1c34:	str	r6, [sp, #16]
    1c38:	orr	r2, r0, r2
    1c3c:	mov	r0, r6
    1c40:	sub	r3, r3, r1
    1c44:	mov	r1, r6
    1c48:	str	r3, [sp, #20]
    1c4c:	ldr	r3, [r4, #16]
    1c50:	str	r5, [sp, #4]
    1c54:	str	r3, [sp, #8]
    1c58:	ldr	r3, [pc, #136]	; 1ce8 <remove_xline+0x3f4>
    1c5c:	add	r3, pc, r3
    1c60:	str	r3, [sp]
    1c64:	mov	r3, r6
    1c68:	bl	bb4 <sendto_server@plt>
    1c6c:	mov	r1, r6
    1c70:	ldr	r0, [r4, #16]
    1c74:	bl	c38 <remove_reject_mask@plt>
    1c78:	mov	r2, r9
    1c7c:	mov	r1, r7
    1c80:	mov	r0, r4
    1c84:	add	sp, sp, #24
    1c88:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    1c8c:	b	b60 <deactivate_conf@plt>
    1c90:	.word	0x000116e8
    1c94:	.word	0x000000b0
    1c98:	.word	0x000000c4
    1c9c:	.word	0x000000b4
    1ca0:	.word	0x00000915
    1ca4:	.word	0x00000989
    1ca8:	.word	0x000009ec
    1cac:	.word	0x000008df
    1cb0:	.word	0x000000ac
    1cb4:	.word	0x00000845
    1cb8:	.word	0x000008b9
    1cbc:	.word	0x00000885
    1cc0:	.word	0x00000885
    1cc4:	.word	0x00000881
    1cc8:	.word	0x000007cd
    1ccc:	.word	0x000007f2
    1cd0:	.word	0x000007cd
    1cd4:	.word	0x00000771
    1cd8:	.word	0x000007d6
    1cdc:	.word	0x0000076d
    1ce0:	.word	0x000000b8
    1ce4:	.word	0x000000bc
    1ce8:	.word	0x00000667

00001cec <mo_unxline>:
    1cec:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
    1cf0:	mov	r4, r2
    1cf4:	ldr	r2, [r2, #24]
    1cf8:	ldr	r7, [pc, #324]	; 1e44 <mo_unxline+0x158>
    1cfc:	ldr	r5, [sp, #32]
    1d00:	cmp	r2, #0
    1d04:	add	r7, pc, r7
    1d08:	bne	1d40 <mo_unxline+0x54>
    1d0c:	ldr	r3, [pc, #308]	; 1e48 <mo_unxline+0x15c>
    1d10:	ldr	r1, [pc, #308]	; 1e4c <mo_unxline+0x160>
    1d14:	ldr	r2, [r7, r3]
    1d18:	ldr	r3, [pc, #304]	; 1e50 <mo_unxline+0x164>
    1d1c:	add	r1, pc, r1
    1d20:	add	r2, r2, #88	; 0x58
    1d24:	add	r3, pc, r3
    1d28:	str	r3, [sp, #32]
    1d2c:	add	r3, r4, #88	; 0x58
    1d30:	mov	r0, r4
    1d34:	add	sp, sp, #8
    1d38:	pop	{r4, r5, r6, r7, r8, lr}
    1d3c:	b	b18 <sendto_one@plt>
    1d40:	ldr	r0, [r2, #36]	; 0x24
    1d44:	cmp	r0, #0
    1d48:	beq	1d0c <mo_unxline+0x20>
    1d4c:	ldr	r1, [pc, #256]	; 1e54 <mo_unxline+0x168>
    1d50:	mov	r6, r3
    1d54:	add	r1, pc, r1
    1d58:	bl	c80 <privilegeset_in_set@plt>
    1d5c:	cmp	r0, #0
    1d60:	beq	1d0c <mo_unxline+0x20>
    1d64:	cmp	r6, #4
    1d68:	beq	1d84 <mo_unxline+0x98>
    1d6c:	mov	r2, #1
    1d70:	ldr	r1, [r5, #4]
    1d74:	mov	r0, r4
    1d78:	add	sp, sp, #8
    1d7c:	pop	{r4, r5, r6, r7, r8, lr}
    1d80:	b	18f4 <remove_xline>
    1d84:	ldr	r1, [pc, #204]	; 1e58 <mo_unxline+0x16c>
    1d88:	ldr	r0, [r5, #8]
    1d8c:	add	r1, pc, r1
    1d90:	bl	c8c <irccmp@plt>
    1d94:	subs	r6, r0, #0
    1d98:	bne	1d6c <mo_unxline+0x80>
    1d9c:	ldr	r3, [r4, #24]
    1da0:	ldr	r2, [pc, #160]	; 1e48 <mo_unxline+0x15c>
    1da4:	cmp	r3, #0
    1da8:	ldr	r8, [r7, r2]
    1dac:	bne	1dd0 <mo_unxline+0xe4>
    1db0:	ldr	r3, [pc, #164]	; 1e5c <mo_unxline+0x170>
    1db4:	add	r2, r8, #88	; 0x58
    1db8:	ldr	r1, [pc, #160]	; 1e60 <mo_unxline+0x174>
    1dbc:	add	r3, pc, r3
    1dc0:	add	r1, pc, r1
    1dc4:	str	r3, [sp, #32]
    1dc8:	add	r3, r4, #88	; 0x58
    1dcc:	b	1d30 <mo_unxline+0x44>
    1dd0:	ldr	r0, [r3, #36]	; 0x24
    1dd4:	cmp	r0, #0
    1dd8:	beq	1db0 <mo_unxline+0xc4>
    1ddc:	ldr	r1, [pc, #128]	; 1e64 <mo_unxline+0x178>
    1de0:	add	r1, pc, r1
    1de4:	bl	c80 <privilegeset_in_set@plt>
    1de8:	cmp	r0, #0
    1dec:	beq	1db0 <mo_unxline+0xc4>
    1df0:	ldr	r3, [pc, #112]	; 1e68 <mo_unxline+0x17c>
    1df4:	mov	r0, r4
    1df8:	ldr	r2, [r5, #4]
    1dfc:	ldr	r1, [pc, #104]	; 1e6c <mo_unxline+0x180>
    1e00:	ldr	r3, [r7, r3]
    1e04:	str	r2, [sp, #4]
    1e08:	ldr	r2, [pc, #96]	; 1e70 <mo_unxline+0x184>
    1e0c:	add	r1, pc, r1
    1e10:	add	r2, pc, r2
    1e14:	str	r2, [sp]
    1e18:	ldr	r3, [r3]
    1e1c:	ldr	r2, [r5, #12]
    1e20:	bl	adc <propagate_generic@plt>
    1e24:	add	r1, r8, #88	; 0x58
    1e28:	ldr	r0, [r5, #12]
    1e2c:	bl	c20 <match@plt>
    1e30:	cmp	r0, #0
    1e34:	movne	r2, r6
    1e38:	bne	1d70 <mo_unxline+0x84>
    1e3c:	add	sp, sp, #8
    1e40:	pop	{r4, r5, r6, r7, r8, pc}
    1e44:	.word	0x000112f4
    1e48:	.word	0x000000cc
    1e4c:	.word	0x00000491
    1e50:	.word	0x00000338
    1e54:	.word	0x00000480
    1e58:	.word	0x00000453
    1e5c:	.word	0x0000042b
    1e60:	.word	0x000003ed
    1e64:	.word	0x00000402
    1e68:	.word	0x000000b4
    1e6c:	.word	0x000004d5
    1e70:	.word	0x00000459

00001e74 <handle_remote_unxline>:
    1e74:	ldr	r2, [r0, #32]
    1e78:	mov	r3, #64	; 0x40
    1e7c:	push	{r4, r5, r6, lr}
    1e80:	mov	r4, r0
    1e84:	mov	r5, r1
    1e88:	add	r1, r0, #163	; 0xa3
    1e8c:	add	r0, r0, #152	; 0x98
    1e90:	add	r2, r2, #88	; 0x58
    1e94:	bl	c74 <find_shared_conf@plt>
    1e98:	cmp	r0, #0
    1e9c:	popeq	{r4, r5, r6, pc}
    1ea0:	mov	r1, r5
    1ea4:	mov	r0, r4
    1ea8:	pop	{r4, r5, r6, lr}
    1eac:	mov	r2, #0
    1eb0:	b	18f4 <remove_xline>

00001eb4 <me_unxline>:
    1eb4:	ldrh	r1, [r2, #80]	; 0x50
    1eb8:	ldr	r3, [sp]
    1ebc:	cmp	r1, #64	; 0x40
    1ec0:	bxne	lr
    1ec4:	ldr	r1, [r2, #24]
    1ec8:	cmp	r1, #0
    1ecc:	bxeq	lr
    1ed0:	mov	r0, r2
    1ed4:	ldr	r1, [r3, #4]
    1ed8:	b	1e74 <handle_remote_unxline>

00001edc <ms_unxline>:
    1edc:	push	{r0, r1, r4, r5, r6, lr}
    1ee0:	mov	r0, r2
    1ee4:	mov	r4, r2
    1ee8:	ldr	r5, [sp, #24]
    1eec:	ldr	r6, [pc, #128]	; 1f74 <ms_unxline+0x98>
    1ef0:	ldr	r3, [pc, #128]	; 1f78 <ms_unxline+0x9c>
    1ef4:	ldr	r2, [r5, #8]
    1ef8:	add	r6, pc, r6
    1efc:	ldr	r1, [pc, #120]	; 1f7c <ms_unxline+0xa0>
    1f00:	ldr	r3, [r6, r3]
    1f04:	str	r2, [sp, #4]
    1f08:	ldr	r2, [pc, #112]	; 1f80 <ms_unxline+0xa4>
    1f0c:	add	r1, pc, r1
    1f10:	add	r2, pc, r2
    1f14:	str	r2, [sp]
    1f18:	ldr	r3, [r3]
    1f1c:	ldr	r2, [r5, #4]
    1f20:	bl	adc <propagate_generic@plt>
    1f24:	ldr	r3, [pc, #88]	; 1f84 <ms_unxline+0xa8>
    1f28:	ldr	r0, [r5, #4]
    1f2c:	ldr	r1, [r6, r3]
    1f30:	add	r1, r1, #88	; 0x58
    1f34:	bl	c20 <match@plt>
    1f38:	cmp	r0, #0
    1f3c:	beq	1f6c <ms_unxline+0x90>
    1f40:	ldrh	r3, [r4, #80]	; 0x50
    1f44:	cmp	r3, #64	; 0x40
    1f48:	bne	1f6c <ms_unxline+0x90>
    1f4c:	ldr	r3, [r4, #24]
    1f50:	cmp	r3, #0
    1f54:	beq	1f6c <ms_unxline+0x90>
    1f58:	ldr	r1, [r5, #8]
    1f5c:	mov	r0, r4
    1f60:	add	sp, sp, #8
    1f64:	pop	{r4, r5, r6, lr}
    1f68:	b	1e74 <handle_remote_unxline>
    1f6c:	add	sp, sp, #8
    1f70:	pop	{r4, r5, r6, pc}
    1f74:	.word	0x00011100
    1f78:	.word	0x000000b4
    1f7c:	.word	0x000003d5
    1f80:	.word	0x00000359
    1f84:	.word	0x000000cc

Disassembly of section .fini:

00001f88 <_fini>:
    1f88:	push	{r3, lr}
    1f8c:	pop	{r3, pc}
