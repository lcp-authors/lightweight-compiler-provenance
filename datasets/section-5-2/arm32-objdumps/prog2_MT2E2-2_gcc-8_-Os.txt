
../repos/prog2/MT2E2-2:     file format elf32-littlearm


Disassembly of section .init:

00010be0 <.init>:
   10be0:	push	{r3, lr}
   10be4:	bl	10f34 <_start@@Base+0x3c>
   10be8:	pop	{r3, pc}

Disassembly of section .plt:

00010bec <calloc@plt-0x14>:
   10bec:	push	{lr}		; (str lr, [sp, #-4]!)
   10bf0:	ldr	lr, [pc, #4]	; 10bfc <calloc@plt-0x4>
   10bf4:	add	lr, pc, lr
   10bf8:	ldr	pc, [lr, #8]!
   10bfc:	andeq	r2, r1, r4, lsl #8

00010c00 <calloc@plt>:
   10c00:	add	ip, pc, #0, 12
   10c04:	add	ip, ip, #73728	; 0x12000
   10c08:	ldr	pc, [ip, #1028]!	; 0x404

00010c0c <strcmp@plt>:
   10c0c:	add	ip, pc, #0, 12
   10c10:	add	ip, ip, #73728	; 0x12000
   10c14:	ldr	pc, [ip, #1020]!	; 0x3fc

00010c18 <printf@plt>:
   10c18:	add	ip, pc, #0, 12
   10c1c:	add	ip, ip, #73728	; 0x12000
   10c20:	ldr	pc, [ip, #1012]!	; 0x3f4

00010c24 <__isoc99_fscanf@plt>:
   10c24:	add	ip, pc, #0, 12
   10c28:	add	ip, ip, #73728	; 0x12000
   10c2c:	ldr	pc, [ip, #1004]!	; 0x3ec

00010c30 <fopen@plt>:
   10c30:	add	ip, pc, #0, 12
   10c34:	add	ip, ip, #73728	; 0x12000
   10c38:	ldr	pc, [ip, #996]!	; 0x3e4

00010c3c <free@plt>:
   10c3c:	add	ip, pc, #0, 12
   10c40:	add	ip, ip, #73728	; 0x12000
   10c44:	ldr	pc, [ip, #988]!	; 0x3dc

00010c48 <realloc@plt>:
   10c48:	add	ip, pc, #0, 12
   10c4c:	add	ip, ip, #73728	; 0x12000
   10c50:	ldr	pc, [ip, #980]!	; 0x3d4

00010c54 <strcpy@plt>:
   10c54:	add	ip, pc, #0, 12
   10c58:	add	ip, ip, #73728	; 0x12000
   10c5c:	ldr	pc, [ip, #972]!	; 0x3cc

00010c60 <puts@plt>:
   10c60:	add	ip, pc, #0, 12
   10c64:	add	ip, ip, #73728	; 0x12000
   10c68:	ldr	pc, [ip, #964]!	; 0x3c4

00010c6c <malloc@plt>:
   10c6c:	add	ip, pc, #0, 12
   10c70:	add	ip, ip, #73728	; 0x12000
   10c74:	ldr	pc, [ip, #956]!	; 0x3bc

00010c78 <__libc_start_main@plt>:
   10c78:	add	ip, pc, #0, 12
   10c7c:	add	ip, ip, #73728	; 0x12000
   10c80:	ldr	pc, [ip, #948]!	; 0x3b4

00010c84 <__gmon_start__@plt>:
   10c84:	add	ip, pc, #0, 12
   10c88:	add	ip, ip, #73728	; 0x12000
   10c8c:	ldr	pc, [ip, #940]!	; 0x3ac

00010c90 <strlen@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #73728	; 0x12000
   10c98:	ldr	pc, [ip, #932]!	; 0x3a4

00010c9c <putchar@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #73728	; 0x12000
   10ca4:	ldr	pc, [ip, #924]!	; 0x39c

00010ca8 <fclose@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #73728	; 0x12000
   10cb0:	ldr	pc, [ip, #916]!	; 0x394

00010cb4 <sprintf@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #73728	; 0x12000
   10cbc:	ldr	pc, [ip, #908]!	; 0x38c

00010cc0 <atoi@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #73728	; 0x12000
   10cc8:	ldr	pc, [ip, #900]!	; 0x384

00010ccc <abort@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #73728	; 0x12000
   10cd4:	ldr	pc, [ip, #892]!	; 0x37c

Disassembly of section .text:

00010cd8 <main@@Base>:
   10cd8:	push	{r4, r5, r6, r7, lr}
   10cdc:	sub	sp, sp, #36	; 0x24
   10ce0:	mov	r5, #0
   10ce4:	ldr	r0, [pc, #488]	; 10ed4 <main@@Base+0x1fc>
   10ce8:	bl	10c60 <puts@plt>
   10cec:	mov	r1, #1
   10cf0:	mov	r0, #8
   10cf4:	ldr	r7, [pc, #476]	; 10ed8 <main@@Base+0x200>
   10cf8:	bl	111bc <grafo_novo@@Base>
   10cfc:	mov	r4, r0
   10d00:	mov	r2, #3
   10d04:	mov	r1, #1
   10d08:	bl	11368 <grafo_adiciona@@Base>
   10d0c:	mov	r2, #3
   10d10:	mov	r1, #2
   10d14:	mov	r0, r4
   10d18:	bl	11368 <grafo_adiciona@@Base>
   10d1c:	mov	r2, #4
   10d20:	mov	r1, #2
   10d24:	mov	r0, r4
   10d28:	bl	11368 <grafo_adiciona@@Base>
   10d2c:	mov	r2, #5
   10d30:	mov	r1, #2
   10d34:	mov	r0, r4
   10d38:	bl	11368 <grafo_adiciona@@Base>
   10d3c:	mov	r2, #2
   10d40:	mov	r1, #3
   10d44:	mov	r0, r4
   10d48:	bl	11368 <grafo_adiciona@@Base>
   10d4c:	mov	r2, #4
   10d50:	mov	r1, #3
   10d54:	mov	r0, r4
   10d58:	bl	11368 <grafo_adiciona@@Base>
   10d5c:	mov	r2, #6
   10d60:	mov	r1, #4
   10d64:	mov	r0, r4
   10d68:	bl	11368 <grafo_adiciona@@Base>
   10d6c:	mov	r2, #7
   10d70:	mov	r1, #4
   10d74:	mov	r0, r4
   10d78:	bl	11368 <grafo_adiciona@@Base>
   10d7c:	mov	r2, #4
   10d80:	mov	r1, #5
   10d84:	mov	r0, r4
   10d88:	bl	11368 <grafo_adiciona@@Base>
   10d8c:	mov	r2, #6
   10d90:	mov	r1, #5
   10d94:	mov	r0, r4
   10d98:	bl	11368 <grafo_adiciona@@Base>
   10d9c:	mov	r2, #7
   10da0:	mov	r1, #5
   10da4:	mov	r0, r4
   10da8:	bl	11368 <grafo_adiciona@@Base>
   10dac:	mov	r2, #7
   10db0:	mov	r1, #6
   10db4:	mov	r0, r4
   10db8:	bl	11368 <grafo_adiciona@@Base>
   10dbc:	mov	r3, #5
   10dc0:	mov	r2, #7
   10dc4:	mov	r1, #1
   10dc8:	mov	r0, r4
   10dcc:	bl	110a0 <descobre_caminho@@Base>
   10dd0:	mov	r6, r0
   10dd4:	ldr	r0, [pc, #256]	; 10edc <main@@Base+0x204>
   10dd8:	bl	10c18 <printf@plt>
   10ddc:	mov	r0, r6
   10de0:	bl	11b08 <lista_tamanho@@Base>
   10de4:	cmp	r0, r5
   10de8:	bgt	10e90 <main@@Base+0x1b8>
   10dec:	ldr	r0, [pc, #236]	; 10ee0 <main@@Base+0x208>
   10df0:	bl	10c60 <puts@plt>
   10df4:	mov	r0, r4
   10df8:	ldr	r7, [pc, #228]	; 10ee4 <main@@Base+0x20c>
   10dfc:	bl	11210 <grafo_apaga@@Base>
   10e00:	mov	r0, r6
   10e04:	bl	11acc <lista_apaga@@Base>
   10e08:	ldr	r0, [pc, #216]	; 10ee8 <main@@Base+0x210>
   10e0c:	bl	10c60 <puts@plt>
   10e10:	ldr	r1, [pc, #212]	; 10eec <main@@Base+0x214>
   10e14:	ldr	r0, [pc, #212]	; 10ef0 <main@@Base+0x218>
   10e18:	bl	10c30 <fopen@plt>
   10e1c:	mov	r6, r0
   10e20:	bl	11aac <lista_nova@@Base>
   10e24:	mov	r5, r0
   10e28:	bl	11aac <lista_nova@@Base>
   10e2c:	mov	r4, r0
   10e30:	mov	r3, sp
   10e34:	add	r2, sp, #8
   10e38:	mov	r1, r7
   10e3c:	mov	r0, r6
   10e40:	bl	10c24 <__isoc99_fscanf@plt>
   10e44:	cmp	r0, #2
   10e48:	beq	10eb0 <main@@Base+0x1d8>
   10e4c:	mov	r2, #4
   10e50:	mov	r1, r4
   10e54:	mov	r0, r5
   10e58:	bl	10fe8 <_start@@Base+0xf0>
   10e5c:	cmp	r0, #0
   10e60:	bne	10e6c <main@@Base+0x194>
   10e64:	ldr	r0, [pc, #136]	; 10ef4 <main@@Base+0x21c>
   10e68:	bl	10c60 <puts@plt>
   10e6c:	mov	r0, r5
   10e70:	bl	11acc <lista_apaga@@Base>
   10e74:	mov	r0, r4
   10e78:	bl	11acc <lista_apaga@@Base>
   10e7c:	mov	r0, r6
   10e80:	bl	10ca8 <fclose@plt>
   10e84:	mov	r0, #0
   10e88:	add	sp, sp, #36	; 0x24
   10e8c:	pop	{r4, r5, r6, r7, pc}
   10e90:	mov	r1, r5
   10e94:	mov	r0, r6
   10e98:	bl	11b18 <lista_elemento@@Base>
   10e9c:	mov	r1, r0
   10ea0:	mov	r0, r7
   10ea4:	bl	10c18 <printf@plt>
   10ea8:	add	r5, r5, #1
   10eac:	b	10ddc <main@@Base+0x104>
   10eb0:	add	r1, sp, #8
   10eb4:	mvn	r2, #0
   10eb8:	mov	r0, r5
   10ebc:	bl	11bc8 <lista_insere@@Base>
   10ec0:	mvn	r2, #0
   10ec4:	mov	r1, sp
   10ec8:	mov	r0, r4
   10ecc:	bl	11bc8 <lista_insere@@Base>
   10ed0:	b	10e30 <main@@Base+0x158>
   10ed4:	andeq	r1, r1, r0, lsr #31
   10ed8:	andeq	r2, r1, lr
   10edc:			; <UNDEFINED> instruction: 0x00011fb1
   10ee0:	andeq	r2, r1, r2, asr #32
   10ee4:	andeq	r2, r1, fp
   10ee8:	andeq	r1, r1, lr, ror #31
   10eec:	strdeq	r1, [r1], -pc	; <UNPREDICTABLE>
   10ef0:	andeq	r2, r1, r1
   10ef4:	andeq	r2, r1, r1, lsl r0

00010ef8 <_start@@Base>:
   10ef8:	mov	fp, #0
   10efc:	mov	lr, #0
   10f00:	pop	{r1}		; (ldr r1, [sp], #4)
   10f04:	mov	r2, sp
   10f08:	push	{r2}		; (str r2, [sp, #-4]!)
   10f0c:	push	{r0}		; (str r0, [sp, #-4]!)
   10f10:	ldr	ip, [pc, #16]	; 10f28 <_start@@Base+0x30>
   10f14:	push	{ip}		; (str ip, [sp, #-4]!)
   10f18:	ldr	r0, [pc, #12]	; 10f2c <_start@@Base+0x34>
   10f1c:	ldr	r3, [pc, #12]	; 10f30 <_start@@Base+0x38>
   10f20:	bl	10c78 <__libc_start_main@plt>
   10f24:	bl	10ccc <abort@plt>
   10f28:	andeq	r1, r1, r8, lsl #31
   10f2c:	ldrdeq	r0, [r1], -r8
   10f30:	andeq	r1, r1, r8, lsr #30
   10f34:	ldr	r3, [pc, #20]	; 10f50 <_start@@Base+0x58>
   10f38:	ldr	r2, [pc, #20]	; 10f54 <_start@@Base+0x5c>
   10f3c:	add	r3, pc, r3
   10f40:	ldr	r2, [r3, r2]
   10f44:	cmp	r2, #0
   10f48:	bxeq	lr
   10f4c:	b	10c84 <__gmon_start__@plt>
   10f50:	strheq	r2, [r1], -ip
   10f54:	andeq	r0, r0, r4, asr r0
   10f58:	ldr	r0, [pc, #24]	; 10f78 <_start@@Base+0x80>
   10f5c:	ldr	r3, [pc, #24]	; 10f7c <_start@@Base+0x84>
   10f60:	cmp	r3, r0
   10f64:	bxeq	lr
   10f68:	ldr	r3, [pc, #16]	; 10f80 <_start@@Base+0x88>
   10f6c:	cmp	r3, #0
   10f70:	bxeq	lr
   10f74:	bx	r3
   10f78:	andeq	r3, r2, r0, rrx
   10f7c:	andeq	r3, r2, r0, rrx
   10f80:	andeq	r0, r0, r0
   10f84:	ldr	r0, [pc, #36]	; 10fb0 <_start@@Base+0xb8>
   10f88:	ldr	r1, [pc, #36]	; 10fb4 <_start@@Base+0xbc>
   10f8c:	sub	r1, r1, r0
   10f90:	asr	r1, r1, #2
   10f94:	add	r1, r1, r1, lsr #31
   10f98:	asrs	r1, r1, #1
   10f9c:	bxeq	lr
   10fa0:	ldr	r3, [pc, #16]	; 10fb8 <_start@@Base+0xc0>
   10fa4:	cmp	r3, #0
   10fa8:	bxeq	lr
   10fac:	bx	r3
   10fb0:	andeq	r3, r2, r0, rrx
   10fb4:	andeq	r3, r2, r0, rrx
   10fb8:	andeq	r0, r0, r0
   10fbc:	push	{r4, lr}
   10fc0:	ldr	r4, [pc, #24]	; 10fe0 <_start@@Base+0xe8>
   10fc4:	ldrb	r3, [r4]
   10fc8:	cmp	r3, #0
   10fcc:	popne	{r4, pc}
   10fd0:	bl	10f58 <_start@@Base+0x60>
   10fd4:	mov	r3, #1
   10fd8:	strb	r3, [r4]
   10fdc:	pop	{r4, pc}
   10fe0:	andeq	r3, r2, r0, rrx
   10fe4:	b	10f84 <_start@@Base+0x8c>
   10fe8:	push	{r4, r5, r6, r7, r8, lr}
   10fec:	mov	r7, r0
   10ff0:	sub	sp, sp, #24
   10ff4:	mov	r0, r2
   10ff8:	mov	r8, r1
   10ffc:	mov	r6, r2
   11000:	mov	r4, #0
   11004:	bl	11718 <heap_nova@@Base>
   11008:	mov	r5, r0
   1100c:	cmp	r6, r4
   11010:	bgt	11038 <_start@@Base+0x140>
   11014:	ldr	r7, [pc, #128]	; 1109c <_start@@Base+0x1a4>
   11018:	mov	r4, #0
   1101c:	cmp	r6, r4
   11020:	bgt	11078 <_start@@Base+0x180>
   11024:	mov	r0, r5
   11028:	bl	11768 <heap_apaga@@Base>
   1102c:	mov	r0, #1
   11030:	add	sp, sp, #24
   11034:	pop	{r4, r5, r6, r7, r8, pc}
   11038:	mov	r1, r4
   1103c:	mov	r0, r7
   11040:	bl	11b18 <lista_elemento@@Base>
   11044:	mov	r1, r0
   11048:	add	r0, sp, #4
   1104c:	bl	10c54 <strcpy@plt>
   11050:	mov	r1, r4
   11054:	mov	r0, r8
   11058:	bl	11b18 <lista_elemento@@Base>
   1105c:	bl	10cc0 <atoi@plt>
   11060:	mov	r2, r0
   11064:	add	r1, sp, #4
   11068:	mov	r0, r5
   1106c:	add	r4, r4, #1
   11070:	bl	11904 <heap_insere@@Base>
   11074:	b	1100c <_start@@Base+0x114>
   11078:	ldr	r3, [r5, #8]
   1107c:	add	r4, r4, #1
   11080:	mov	r0, r7
   11084:	mov	r1, r4
   11088:	add	r3, r3, r4, lsl #2
   1108c:	ldr	r3, [r3, #-4]
   11090:	ldr	r2, [r3, #4]
   11094:	bl	10c18 <printf@plt>
   11098:	b	1101c <_start@@Base+0x124>
   1109c:	muleq	r1, r8, pc	; <UNPREDICTABLE>

000110a0 <descobre_caminho@@Base>:
   110a0:	push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   110a4:	mov	r4, r1
   110a8:	mov	r8, r3
   110ac:	mov	r7, r0
   110b0:	mov	r9, r2
   110b4:	ldr	sl, [pc, #196]	; 11180 <descobre_caminho@@Base+0xe0>
   110b8:	bl	11aac <lista_nova@@Base>
   110bc:	mov	r5, r0
   110c0:	mov	r1, r4
   110c4:	add	r3, sp, #4
   110c8:	mov	r2, r8
   110cc:	mov	r0, r7
   110d0:	mov	r4, #0
   110d4:	bl	115c8 <grafo_bfs@@Base>
   110d8:	mov	r6, r0
   110dc:	ldr	r3, [sp, #4]
   110e0:	cmp	r3, r4
   110e4:	bgt	11130 <descobre_caminho@@Base+0x90>
   110e8:	mov	r1, r8
   110ec:	ldr	r8, [pc, #140]	; 11180 <descobre_caminho@@Base+0xe0>
   110f0:	mov	r0, r7
   110f4:	add	r3, sp, #4
   110f8:	mov	r2, r9
   110fc:	bl	115c8 <grafo_bfs@@Base>
   11100:	mov	r7, r0
   11104:	mov	r4, #1
   11108:	ldr	r3, [sp, #4]
   1110c:	cmp	r3, r4
   11110:	bgt	11158 <descobre_caminho@@Base+0xb8>
   11114:	mov	r0, r7
   11118:	bl	10c3c <free@plt>
   1111c:	mov	r0, r6
   11120:	bl	10c3c <free@plt>
   11124:	mov	r0, r5
   11128:	add	sp, sp, #8
   1112c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11130:	mov	r1, sl
   11134:	mov	r0, sp
   11138:	ldr	r2, [r6, r4, lsl #2]
   1113c:	bl	10cb4 <sprintf@plt>
   11140:	mvn	r2, #0
   11144:	mov	r1, sp
   11148:	mov	r0, r5
   1114c:	add	r4, r4, #1
   11150:	bl	11bc8 <lista_insere@@Base>
   11154:	b	110dc <descobre_caminho@@Base+0x3c>
   11158:	mov	r1, r8
   1115c:	mov	r0, sp
   11160:	ldr	r2, [r7, r4, lsl #2]
   11164:	bl	10cb4 <sprintf@plt>
   11168:	mvn	r2, #0
   1116c:	mov	r1, sp
   11170:	mov	r0, r5
   11174:	add	r4, r4, #1
   11178:	bl	11bc8 <lista_insere@@Base>
   1117c:	b	11108 <descobre_caminho@@Base+0x68>
   11180:	andeq	r2, r1, r2, lsr r0

00011184 <simula_acontecimentos@@Base>:
   11184:	cmp	r2, #20
   11188:	bgt	11190 <simula_acontecimentos@@Base+0xc>
   1118c:	b	10fe8 <_start@@Base+0xf0>
   11190:	mov	r0, #0
   11194:	bx	lr

00011198 <cria_no@@Base>:
   11198:	push	{r4, lr}
   1119c:	mov	r4, r0
   111a0:	mov	r0, #8
   111a4:	bl	10c6c <malloc@plt>
   111a8:	cmp	r0, #0
   111ac:	movne	r3, #0
   111b0:	strne	r4, [r0]
   111b4:	strne	r3, [r0, #4]
   111b8:	pop	{r4, pc}

000111bc <grafo_novo@@Base>:
   111bc:	push	{r4, r5, r6, lr}
   111c0:	mov	r5, r0
   111c4:	mov	r0, #12
   111c8:	mov	r6, r1
   111cc:	bl	10c6c <malloc@plt>
   111d0:	subs	r4, r0, #0
   111d4:	beq	11208 <grafo_novo@@Base+0x4c>
   111d8:	mov	r0, r5
   111dc:	mov	r1, #8
   111e0:	str	r6, [r4]
   111e4:	str	r5, [r4, #4]
   111e8:	bl	10c00 <calloc@plt>
   111ec:	cmp	r0, #0
   111f0:	mov	r5, r0
   111f4:	str	r0, [r4, #8]
   111f8:	bne	11208 <grafo_novo@@Base+0x4c>
   111fc:	mov	r0, r4
   11200:	mov	r4, r5
   11204:	bl	10c3c <free@plt>
   11208:	mov	r0, r4
   1120c:	pop	{r4, r5, r6, pc}

00011210 <grafo_apaga@@Base>:
   11210:	push	{r4, r5, r6, lr}
   11214:	subs	r4, r0, #0
   11218:	popeq	{r4, r5, r6, pc}
   1121c:	ldr	r3, [r4, #8]
   11220:	cmp	r3, #0
   11224:	movne	r5, #0
   11228:	bne	1125c <grafo_apaga@@Base+0x4c>
   1122c:	mov	r0, r4
   11230:	pop	{r4, r5, r6, lr}
   11234:	b	10c3c <free@plt>
   11238:	ldr	r2, [r0, #4]
   1123c:	str	r2, [r3, #4]
   11240:	bl	10c3c <free@plt>
   11244:	ldr	r3, [r4, #8]
   11248:	add	r3, r3, r6
   1124c:	ldr	r0, [r3, #4]
   11250:	cmp	r0, #0
   11254:	bne	11238 <grafo_apaga@@Base+0x28>
   11258:	add	r5, r5, #1
   1125c:	ldr	r3, [r4, #4]
   11260:	cmp	r3, r5
   11264:	lslgt	r6, r5, #3
   11268:	bgt	11244 <grafo_apaga@@Base+0x34>
   1126c:	ldr	r0, [r4, #8]
   11270:	bl	10c3c <free@plt>
   11274:	b	1122c <grafo_apaga@@Base+0x1c>

00011278 <grafo_remove@@Base>:
   11278:	push	{r4, r5, r6, lr}
   1127c:	subs	r6, r0, #0
   11280:	popeq	{r4, r5, r6, pc}
   11284:	ldr	ip, [r6, #8]
   11288:	add	ip, ip, r1, lsl #3
   1128c:	ldr	r0, [ip, #4]
   11290:	cmp	r0, #0
   11294:	popeq	{r4, r5, r6, pc}
   11298:	mov	r5, r2
   1129c:	mov	r4, r1
   112a0:	ldrd	r2, [r0]
   112a4:	cmp	r2, r5
   112a8:	streq	r3, [ip, #4]
   112ac:	beq	112cc <grafo_remove@@Base+0x54>
   112b0:	cmp	r3, #0
   112b4:	beq	112d0 <grafo_remove@@Base+0x58>
   112b8:	ldm	r3, {r1, r2}
   112bc:	cmp	r1, r5
   112c0:	bne	1131c <grafo_remove@@Base+0xa4>
   112c4:	str	r2, [r0, #4]
   112c8:	mov	r0, r3
   112cc:	bl	10c3c <free@plt>
   112d0:	ldr	r3, [r6]
   112d4:	cmp	r3, #0
   112d8:	popne	{r4, r5, r6, pc}
   112dc:	ldr	r2, [r6, #8]
   112e0:	add	r5, r2, r5, lsl #3
   112e4:	ldr	r0, [r5, #4]
   112e8:	ldrd	r2, [r0]
   112ec:	cmp	r2, r4
   112f0:	streq	r3, [r5, #4]
   112f4:	beq	11314 <grafo_remove@@Base+0x9c>
   112f8:	cmp	r3, #0
   112fc:	popeq	{r4, r5, r6, pc}
   11300:	ldm	r3, {r1, r2}
   11304:	cmp	r1, r4
   11308:	bne	11328 <grafo_remove@@Base+0xb0>
   1130c:	str	r2, [r0, #4]
   11310:	mov	r0, r3
   11314:	pop	{r4, r5, r6, lr}
   11318:	b	10c3c <free@plt>
   1131c:	mov	r0, r3
   11320:	mov	r3, r2
   11324:	b	112b0 <grafo_remove@@Base+0x38>
   11328:	mov	r0, r3
   1132c:	mov	r3, r2
   11330:	b	112f8 <grafo_remove@@Base+0x80>

00011334 <grafo_existe@@Base>:
   11334:	cmp	r0, #0
   11338:	ldrne	r3, [r0, #8]
   1133c:	addne	r3, r3, r1, lsl #3
   11340:	ldrne	r0, [r3, #4]
   11344:	bxeq	lr
   11348:	cmp	r0, #0
   1134c:	bxeq	lr
   11350:	ldr	r3, [r0]
   11354:	cmp	r3, r2
   11358:	ldrne	r0, [r0, #4]
   1135c:	bne	11348 <grafo_existe@@Base+0x14>
   11360:	mov	r0, #1
   11364:	bx	lr

00011368 <grafo_adiciona@@Base>:
   11368:	push	{r4, r5, r6, lr}
   1136c:	subs	r6, r0, #0
   11370:	popeq	{r4, r5, r6, pc}
   11374:	bl	11334 <grafo_existe@@Base>
   11378:	cmp	r0, #0
   1137c:	popne	{r4, r5, r6, pc}
   11380:	mov	r0, r2
   11384:	mov	r5, r1
   11388:	mov	r4, r2
   1138c:	bl	11198 <cria_no@@Base>
   11390:	ldr	r3, [r6, #8]
   11394:	add	r2, r3, r5, lsl #3
   11398:	ldr	r1, [r2, #4]
   1139c:	str	r1, [r0, #4]
   113a0:	str	r0, [r2, #4]
   113a4:	ldr	r2, [r3, r5, lsl #3]
   113a8:	add	r2, r2, #1
   113ac:	str	r2, [r3, r5, lsl #3]
   113b0:	ldr	r3, [r6]
   113b4:	cmp	r3, #0
   113b8:	popne	{r4, r5, r6, pc}
   113bc:	mov	r0, r5
   113c0:	bl	11198 <cria_no@@Base>
   113c4:	ldr	r3, [r6, #8]
   113c8:	add	r2, r3, r4, lsl #3
   113cc:	ldr	r1, [r2, #4]
   113d0:	str	r1, [r0, #4]
   113d4:	str	r0, [r2, #4]
   113d8:	ldr	r2, [r3, r4, lsl #3]
   113dc:	add	r2, r2, #1
   113e0:	str	r2, [r3, r4, lsl #3]
   113e4:	pop	{r4, r5, r6, pc}

000113e8 <grafo_imprime@@Base>:
   113e8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   113ec:	mov	r6, r0
   113f0:	mov	r4, #0
   113f4:	ldr	r7, [pc, #100]	; 11460 <grafo_imprime@@Base+0x78>
   113f8:	ldr	r8, [pc, #100]	; 11464 <grafo_imprime@@Base+0x7c>
   113fc:	ldr	r9, [pc, #100]	; 11468 <grafo_imprime@@Base+0x80>
   11400:	ldr	r3, [r6, #4]
   11404:	cmp	r3, r4
   11408:	pople	{r4, r5, r6, r7, r8, r9, sl, pc}
   1140c:	mov	r1, r4
   11410:	mov	r0, r7
   11414:	ldr	r3, [r6, #8]
   11418:	add	r3, r3, r4, lsl #3
   1141c:	ldr	r5, [r3, #4]
   11420:	bl	10c18 <printf@plt>
   11424:	cmp	r5, #0
   11428:	bne	1143c <grafo_imprime@@Base+0x54>
   1142c:	mov	r0, #10
   11430:	add	r4, r4, #1
   11434:	bl	10c9c <putchar@plt>
   11438:	b	11400 <grafo_imprime@@Base+0x18>
   1143c:	ldr	r1, [r5]
   11440:	mov	r0, r8
   11444:	bl	10c18 <printf@plt>
   11448:	ldr	r5, [r5, #4]
   1144c:	cmp	r5, #0
   11450:	beq	1142c <grafo_imprime@@Base+0x44>
   11454:	mov	r0, r9
   11458:	ldr	r1, [r5]
   1145c:	b	11444 <grafo_imprime@@Base+0x5c>
   11460:	andeq	r2, r1, fp, lsr #32
   11464:	andeq	r2, r1, r2, lsr r0
   11468:	andeq	r2, r1, r0, lsr r0

0001146c <dfs_helper@@Base>:
   1146c:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   11470:	ldr	r5, [sp, #40]	; 0x28
   11474:	ldr	r4, [r5, r1, lsl #2]
   11478:	cmp	r4, #0
   1147c:	movne	r0, #0
   11480:	bne	114f8 <dfs_helper@@Base+0x8c>
   11484:	cmp	r1, r2
   11488:	str	r3, [r5, r1, lsl #2]
   1148c:	moveq	r0, r3
   11490:	beq	114f8 <dfs_helper@@Base+0x8c>
   11494:	mov	r7, r2
   11498:	mov	r6, r1
   1149c:	mov	r8, r0
   114a0:	add	r9, r3, #1
   114a4:	ldr	r3, [r8, #4]
   114a8:	cmp	r3, r4
   114ac:	movle	r0, #0
   114b0:	strle	r0, [r5, r6, lsl #2]
   114b4:	ble	114f8 <dfs_helper@@Base+0x8c>
   114b8:	mov	r2, r4
   114bc:	mov	r1, r6
   114c0:	mov	r0, r8
   114c4:	bl	11334 <grafo_existe@@Base>
   114c8:	cmp	r0, #0
   114cc:	bne	114d8 <dfs_helper@@Base+0x6c>
   114d0:	add	r4, r4, #1
   114d4:	b	114a4 <dfs_helper@@Base+0x38>
   114d8:	mov	r3, r9
   114dc:	mov	r2, r7
   114e0:	str	r5, [sp]
   114e4:	mov	r1, r4
   114e8:	mov	r0, r8
   114ec:	bl	1146c <dfs_helper@@Base>
   114f0:	cmp	r0, #0
   114f4:	beq	114d0 <dfs_helper@@Base+0x64>
   114f8:	add	sp, sp, #12
   114fc:	pop	{r4, r5, r6, r7, r8, r9, pc}

00011500 <grafo_dfs@@Base>:
   11500:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   11504:	subs	r4, r0, #0
   11508:	beq	11558 <grafo_dfs@@Base+0x58>
   1150c:	mov	r6, r1
   11510:	mov	r1, #4
   11514:	ldr	r0, [r4, #4]
   11518:	mov	r7, r2
   1151c:	mov	r8, r3
   11520:	bl	10c00 <calloc@plt>
   11524:	mov	r5, r0
   11528:	mov	r1, r6
   1152c:	mov	r3, #1
   11530:	mov	r2, r7
   11534:	mov	r0, r4
   11538:	str	r5, [sp]
   1153c:	bl	1146c <dfs_helper@@Base>
   11540:	subs	r6, r0, #0
   11544:	bne	11564 <grafo_dfs@@Base+0x64>
   11548:	mov	r4, r6
   1154c:	mov	r0, r5
   11550:	bl	10c3c <free@plt>
   11554:	str	r6, [r8]
   11558:	mov	r0, r4
   1155c:	add	sp, sp, #8
   11560:	pop	{r4, r5, r6, r7, r8, pc}
   11564:	mov	r1, #4
   11568:	bl	10c00 <calloc@plt>
   1156c:	mov	r7, r0
   11570:	mov	r2, #1
   11574:	sub	r0, r0, #4
   11578:	sub	r3, r2, #1
   1157c:	cmp	r6, r3
   11580:	ble	115b4 <grafo_dfs@@Base+0xb4>
   11584:	mov	r3, #0
   11588:	ldr	r1, [r4, #4]
   1158c:	b	11594 <grafo_dfs@@Base+0x94>
   11590:	add	r3, r3, #1
   11594:	cmp	r1, r3
   11598:	ble	115ac <grafo_dfs@@Base+0xac>
   1159c:	ldr	ip, [r5, r3, lsl #2]
   115a0:	cmp	ip, r2
   115a4:	bne	11590 <grafo_dfs@@Base+0x90>
   115a8:	str	r3, [r0, r2, lsl #2]
   115ac:	add	r2, r2, #1
   115b0:	b	11578 <grafo_dfs@@Base+0x78>
   115b4:	mov	r0, r5
   115b8:	str	r6, [r8]
   115bc:	mov	r4, r7
   115c0:	bl	10c3c <free@plt>
   115c4:	b	11558 <grafo_dfs@@Base+0x58>

000115c8 <grafo_bfs@@Base>:
   115c8:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   115cc:	subs	r9, r0, #0
   115d0:	str	r3, [sp]
   115d4:	beq	11700 <grafo_bfs@@Base+0x138>
   115d8:	ldr	r5, [r9, #4]
   115dc:	mov	r6, r1
   115e0:	mov	r1, #4
   115e4:	mov	sl, r2
   115e8:	mov	r0, r5
   115ec:	bl	10c00 <calloc@plt>
   115f0:	mov	r4, r0
   115f4:	mov	r1, #4
   115f8:	mov	r0, r5
   115fc:	bl	10c00 <calloc@plt>
   11600:	mov	fp, r0
   11604:	mov	r3, #0
   11608:	mvn	r2, #0
   1160c:	cmp	r5, r3
   11610:	bgt	11664 <grafo_bfs@@Base+0x9c>
   11614:	mov	r7, #1
   11618:	str	r6, [r4, r6, lsl #2]
   1161c:	str	r6, [fp]
   11620:	mov	r6, #0
   11624:	ldr	r3, [fp, r6, lsl #2]
   11628:	add	r6, r6, #1
   1162c:	mov	r8, #0
   11630:	sdiv	r2, r6, r5
   11634:	mls	r6, r5, r2, r6
   11638:	cmp	r5, r8
   1163c:	bgt	11670 <grafo_bfs@@Base+0xa8>
   11640:	cmp	r7, r6
   11644:	bne	11624 <grafo_bfs@@Base+0x5c>
   11648:	ldr	r3, [r4, sl, lsl #2]
   1164c:	cmp	r3, #0
   11650:	movlt	r6, #0
   11654:	blt	116e8 <grafo_bfs@@Base+0x120>
   11658:	mov	r3, sl
   1165c:	mov	r6, #1
   11660:	b	116c0 <grafo_bfs@@Base+0xf8>
   11664:	str	r2, [r4, r3, lsl #2]
   11668:	add	r3, r3, #1
   1166c:	b	1160c <grafo_bfs@@Base+0x44>
   11670:	mov	r1, r3
   11674:	mov	r2, r8
   11678:	str	r3, [sp, #4]
   1167c:	mov	r0, r9
   11680:	bl	11334 <grafo_existe@@Base>
   11684:	cmp	r0, #0
   11688:	ldr	r3, [sp, #4]
   1168c:	beq	116b0 <grafo_bfs@@Base+0xe8>
   11690:	ldr	r2, [r4, r8, lsl #2]
   11694:	cmn	r2, #1
   11698:	bne	116b0 <grafo_bfs@@Base+0xe8>
   1169c:	str	r8, [fp, r7, lsl #2]
   116a0:	add	r7, r7, #1
   116a4:	str	r3, [r4, r8, lsl #2]
   116a8:	sdiv	r2, r7, r5
   116ac:	mls	r7, r5, r2, r7
   116b0:	add	r8, r8, #1
   116b4:	b	11638 <grafo_bfs@@Base+0x70>
   116b8:	add	r6, r6, #1
   116bc:	mov	r3, r2
   116c0:	ldr	r2, [r4, r3, lsl #2]
   116c4:	cmp	r2, r3
   116c8:	bne	116b8 <grafo_bfs@@Base+0xf0>
   116cc:	lsl	r5, r6, #2
   116d0:	mov	r0, r5
   116d4:	bl	10c6c <malloc@plt>
   116d8:	mov	r9, r0
   116dc:	add	r0, r0, r5
   116e0:	cmp	r9, r0
   116e4:	bne	1170c <grafo_bfs@@Base+0x144>
   116e8:	mov	r0, fp
   116ec:	bl	10c3c <free@plt>
   116f0:	mov	r0, r4
   116f4:	bl	10c3c <free@plt>
   116f8:	ldr	r3, [sp]
   116fc:	str	r6, [r3]
   11700:	mov	r0, r9
   11704:	add	sp, sp, #12
   11708:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1170c:	str	sl, [r0, #-4]!
   11710:	ldr	sl, [r4, sl, lsl #2]
   11714:	b	116e0 <grafo_bfs@@Base+0x118>

00011718 <heap_nova@@Base>:
   11718:	push	{r4, r5, r6, lr}
   1171c:	mov	r5, r0
   11720:	mov	r0, #12
   11724:	bl	10c6c <malloc@plt>
   11728:	subs	r4, r0, #0
   1172c:	beq	11760 <heap_nova@@Base+0x48>
   11730:	mov	r3, #0
   11734:	mov	r0, r5
   11738:	mov	r1, #4
   1173c:	stm	r4, {r3, r5}
   11740:	bl	10c00 <calloc@plt>
   11744:	cmp	r0, #0
   11748:	mov	r5, r0
   1174c:	str	r0, [r4, #8]
   11750:	bne	11760 <heap_nova@@Base+0x48>
   11754:	mov	r0, r4
   11758:	mov	r4, r5
   1175c:	bl	10c3c <free@plt>
   11760:	mov	r0, r4
   11764:	pop	{r4, r5, r6, pc}

00011768 <heap_apaga@@Base>:
   11768:	push	{r4, r5, r6, lr}
   1176c:	subs	r4, r0, #0
   11770:	movne	r5, #0
   11774:	movne	r6, r5
   11778:	popeq	{r4, r5, r6, pc}
   1177c:	ldr	r3, [r4]
   11780:	ldr	r0, [r4, #8]
   11784:	cmp	r3, r5
   11788:	bgt	1179c <heap_apaga@@Base+0x34>
   1178c:	bl	10c3c <free@plt>
   11790:	mov	r0, r4
   11794:	pop	{r4, r5, r6, lr}
   11798:	b	10c3c <free@plt>
   1179c:	ldr	r3, [r0, r5, lsl #2]
   117a0:	ldr	r0, [r3, #4]
   117a4:	bl	10c3c <free@plt>
   117a8:	ldr	r3, [r4, #8]
   117ac:	ldr	r0, [r3, r5, lsl #2]
   117b0:	bl	10c3c <free@plt>
   117b4:	ldr	r3, [r4, #8]
   117b8:	str	r6, [r3, r5, lsl #2]
   117bc:	add	r5, r5, #1
   117c0:	b	1177c <heap_apaga@@Base+0x14>

000117c4 <elemento_cria@@Base>:
   117c4:	push	{r4, r5, r6, r7, r8, lr}
   117c8:	mov	r7, r0
   117cc:	mov	r0, #8
   117d0:	mov	r6, r1
   117d4:	bl	10c6c <malloc@plt>
   117d8:	subs	r4, r0, #0
   117dc:	beq	11810 <elemento_cria@@Base+0x4c>
   117e0:	mov	r0, r6
   117e4:	bl	10c90 <strlen@plt>
   117e8:	mov	r1, #1
   117ec:	add	r0, r0, r1
   117f0:	bl	10c00 <calloc@plt>
   117f4:	cmp	r0, #0
   117f8:	mov	r5, r0
   117fc:	str	r0, [r4, #4]
   11800:	bne	11818 <elemento_cria@@Base+0x54>
   11804:	mov	r0, r4
   11808:	mov	r4, r5
   1180c:	bl	10c3c <free@plt>
   11810:	mov	r0, r4
   11814:	pop	{r4, r5, r6, r7, r8, pc}
   11818:	mov	r1, r6
   1181c:	bl	10c54 <strcpy@plt>
   11820:	str	r7, [r4]
   11824:	b	11810 <elemento_cria@@Base+0x4c>

00011828 <mostraHeap@@Base>:
   11828:	ldr	r3, [r0]
   1182c:	cmp	r3, r1
   11830:	bgt	118b0 <mostraHeap@@Base+0x88>
   11834:	mov	r0, #10
   11838:	b	118ac <mostraHeap@@Base+0x84>
   1183c:	sub	r3, r3, #1
   11840:	add	r7, r7, #1
   11844:	asr	r3, r3, #1
   11848:	cmp	r3, #0
   1184c:	bgt	1183c <mostraHeap@@Base+0x14>
   11850:	ldr	sl, [pc, #120]	; 118d0 <mostraHeap@@Base+0xa8>
   11854:	lsl	r8, r1, #1
   11858:	mov	r6, r1
   1185c:	add	r9, r7, r7, lsl #1
   11860:	mov	r5, #0
   11864:	mov	r4, r0
   11868:	add	r1, r8, #1
   1186c:	bl	11828 <mostraHeap@@Base>
   11870:	cmp	r9, r5
   11874:	bne	118c0 <mostraHeap@@Base+0x98>
   11878:	ldr	r3, [r4, #8]
   1187c:	ldr	r0, [pc, #80]	; 118d4 <mostraHeap@@Base+0xac>
   11880:	ldr	r3, [r3, r6, lsl #2]
   11884:	ldr	r2, [r3]
   11888:	ldr	r1, [r3, #4]
   1188c:	bl	10c18 <printf@plt>
   11890:	add	r1, r8, #2
   11894:	mov	r0, r4
   11898:	bl	11828 <mostraHeap@@Base>
   1189c:	cmp	r7, #0
   118a0:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
   118a4:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   118a8:	mov	r0, #10
   118ac:	b	10c9c <putchar@plt>
   118b0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   118b4:	mov	r3, r1
   118b8:	mov	r7, #0
   118bc:	b	11848 <mostraHeap@@Base+0x20>
   118c0:	mov	r0, sl
   118c4:	add	r5, r5, #1
   118c8:	bl	10c18 <printf@plt>
   118cc:	b	11870 <mostraHeap@@Base+0x48>
   118d0:	andeq	r2, r1, r5, lsr r0
   118d4:	andeq	r2, r1, fp, lsr r0

000118d8 <menor_que@@Base>:
   118d8:	cmp	r1, #0
   118dc:	cmpne	r0, #0
   118e0:	beq	118fc <menor_que@@Base+0x24>
   118e4:	ldr	r0, [r0]
   118e8:	ldr	r3, [r1]
   118ec:	cmp	r0, r3
   118f0:	movge	r0, #0
   118f4:	movlt	r0, #1
   118f8:	bx	lr
   118fc:	mov	r0, #0
   11900:	bx	lr

00011904 <heap_insere@@Base>:
   11904:	push	{r4, r5, r6, r7, r8, lr}
   11908:	mov	r4, r0
   1190c:	ldr	r0, [r0]
   11910:	ldr	r3, [r4, #4]
   11914:	cmp	r0, r3
   11918:	blt	11924 <heap_insere@@Base+0x20>
   1191c:	mov	r0, #0
   11920:	pop	{r4, r5, r6, r7, r8, pc}
   11924:	mov	r0, r2
   11928:	bl	117c4 <elemento_cria@@Base>
   1192c:	cmp	r0, #0
   11930:	beq	1191c <heap_insere@@Base+0x18>
   11934:	ldr	r2, [r4]
   11938:	ldr	r5, [r4, #8]
   1193c:	add	r3, r2, #1
   11940:	str	r0, [r5, r2, lsl #2]
   11944:	str	r3, [r4]
   11948:	cmp	r2, #0
   1194c:	beq	1197c <heap_insere@@Base+0x78>
   11950:	lsl	r7, r2, #2
   11954:	ldr	r4, [r5, r2, lsl #2]
   11958:	sub	r2, r2, #1
   1195c:	add	r2, r2, r2, lsr #31
   11960:	asr	r2, r2, #1
   11964:	ldr	r6, [r5, r2, lsl #2]
   11968:	mov	r0, r4
   1196c:	mov	r1, r6
   11970:	bl	118d8 <menor_que@@Base>
   11974:	cmp	r0, #0
   11978:	bne	11984 <heap_insere@@Base+0x80>
   1197c:	mov	r0, #1
   11980:	pop	{r4, r5, r6, r7, r8, pc}
   11984:	str	r4, [r5, r2, lsl #2]
   11988:	str	r6, [r5, r7]
   1198c:	b	11948 <heap_insere@@Base+0x44>

00011990 <heap_remove@@Base>:
   11990:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11994:	subs	r4, r0, #0
   11998:	beq	11a44 <heap_remove@@Base+0xb4>
   1199c:	ldr	r3, [r4]
   119a0:	cmp	r3, #0
   119a4:	ble	11a44 <heap_remove@@Base+0xb4>
   119a8:	ldr	r3, [r4, #8]
   119ac:	mov	r5, #0
   119b0:	ldr	r0, [r3]
   119b4:	ldr	r9, [r0, #4]
   119b8:	bl	10c3c <free@plt>
   119bc:	ldr	r6, [r4]
   119c0:	ldr	r2, [r4, #8]
   119c4:	sub	r6, r6, #1
   119c8:	ldr	r3, [r2, r6, lsl #2]
   119cc:	str	r6, [r4]
   119d0:	str	r3, [r2]
   119d4:	str	r5, [r2, r6, lsl #2]
   119d8:	lsl	r8, r5, #1
   119dc:	add	r7, r8, #1
   119e0:	cmp	r6, r7
   119e4:	bgt	119f0 <heap_remove@@Base+0x60>
   119e8:	mov	r0, r9
   119ec:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   119f0:	add	r8, r8, #2
   119f4:	cmp	r6, r8
   119f8:	ble	11a18 <heap_remove@@Base+0x88>
   119fc:	add	r3, r5, #1
   11a00:	add	r1, r2, r3, lsl #3
   11a04:	ldr	r0, [r2, r3, lsl #3]
   11a08:	ldr	r1, [r1, #-4]
   11a0c:	bl	118d8 <menor_que@@Base>
   11a10:	cmp	r0, #0
   11a14:	movne	r7, r8
   11a18:	ldr	r4, [r2, r7, lsl #2]
   11a1c:	ldr	r8, [r2, r5, lsl #2]
   11a20:	mov	r0, r4
   11a24:	mov	r1, r8
   11a28:	bl	118d8 <menor_que@@Base>
   11a2c:	cmp	r0, #0
   11a30:	beq	119e8 <heap_remove@@Base+0x58>
   11a34:	str	r8, [r2, r7, lsl #2]
   11a38:	str	r4, [r2, r5, lsl #2]
   11a3c:	mov	r5, r7
   11a40:	b	119d8 <heap_remove@@Base+0x48>
   11a44:	mov	r9, #0
   11a48:	b	119e8 <heap_remove@@Base+0x58>

00011a4c <novo_str@@Base>:
   11a4c:	push	{r4, r5, r6, lr}
   11a50:	mov	r6, r0
   11a54:	mov	r0, #8
   11a58:	bl	10c6c <malloc@plt>
   11a5c:	subs	r4, r0, #0
   11a60:	beq	11a90 <novo_str@@Base+0x44>
   11a64:	mov	r0, r6
   11a68:	bl	10c90 <strlen@plt>
   11a6c:	add	r0, r0, #1
   11a70:	bl	10c6c <malloc@plt>
   11a74:	cmp	r0, #0
   11a78:	mov	r5, r0
   11a7c:	str	r0, [r4]
   11a80:	bne	11a98 <novo_str@@Base+0x4c>
   11a84:	mov	r0, r4
   11a88:	mov	r4, r5
   11a8c:	bl	10c3c <free@plt>
   11a90:	mov	r0, r4
   11a94:	pop	{r4, r5, r6, pc}
   11a98:	mov	r1, r6
   11a9c:	bl	10c54 <strcpy@plt>
   11aa0:	mov	r3, #0
   11aa4:	str	r3, [r4, #4]
   11aa8:	b	11a90 <novo_str@@Base+0x44>

00011aac <lista_nova@@Base>:
   11aac:	push	{r4, lr}
   11ab0:	mov	r0, #8
   11ab4:	bl	10c6c <malloc@plt>
   11ab8:	cmp	r0, #0
   11abc:	movne	r3, #0
   11ac0:	strne	r3, [r0]
   11ac4:	strne	r3, [r0, #4]
   11ac8:	pop	{r4, pc}

00011acc <lista_apaga@@Base>:
   11acc:	push	{r4, r5, r6, lr}
   11ad0:	subs	r5, r0, #0
   11ad4:	popeq	{r4, r5, r6, pc}
   11ad8:	ldr	r4, [r5]
   11adc:	cmp	r4, #0
   11ae0:	bne	11af0 <lista_apaga@@Base+0x24>
   11ae4:	mov	r0, r5
   11ae8:	pop	{r4, r5, r6, lr}
   11aec:	b	10c3c <free@plt>
   11af0:	ldm	r4, {r0, r3}
   11af4:	str	r3, [r5]
   11af8:	bl	10c3c <free@plt>
   11afc:	mov	r0, r4
   11b00:	bl	10c3c <free@plt>
   11b04:	b	11ad8 <lista_apaga@@Base+0xc>

00011b08 <lista_tamanho@@Base>:
   11b08:	cmp	r0, #0
   11b0c:	ldrne	r0, [r0, #4]
   11b10:	mvneq	r0, #0
   11b14:	bx	lr

00011b18 <lista_elemento@@Base>:
   11b18:	cmp	r0, #0
   11b1c:	lsrne	r3, r1, #31
   11b20:	moveq	r3, #1
   11b24:	cmp	r3, #0
   11b28:	ldreq	r0, [r0]
   11b2c:	beq	11b40 <lista_elemento@@Base+0x28>
   11b30:	mov	r0, #0
   11b34:	bx	lr
   11b38:	ldr	r0, [r0, #4]
   11b3c:	add	r3, r3, #1
   11b40:	cmp	r0, #0
   11b44:	cmpne	r3, r1
   11b48:	blt	11b38 <lista_elemento@@Base+0x20>
   11b4c:	cmp	r0, #0
   11b50:	ldrne	r0, [r0]
   11b54:	bx	lr

00011b58 <lista_atribui@@Base>:
   11b58:	cmp	r0, #0
   11b5c:	push	{r4, r5, r6, lr}
   11b60:	lsrne	r3, r1, #31
   11b64:	moveq	r3, #1
   11b68:	cmp	r3, #0
   11b6c:	moveq	r5, r1
   11b70:	moveq	r6, r2
   11b74:	ldreq	r4, [r0]
   11b78:	beq	11b8c <lista_atribui@@Base+0x34>
   11b7c:	mvn	r5, #0
   11b80:	b	11bc0 <lista_atribui@@Base+0x68>
   11b84:	ldr	r4, [r4, #4]
   11b88:	add	r3, r3, #1
   11b8c:	cmp	r4, #0
   11b90:	cmpne	r3, r5
   11b94:	blt	11b84 <lista_atribui@@Base+0x2c>
   11b98:	cmp	r4, #0
   11b9c:	beq	11b7c <lista_atribui@@Base+0x24>
   11ba0:	mov	r0, r6
   11ba4:	bl	10c90 <strlen@plt>
   11ba8:	add	r1, r0, #1
   11bac:	ldr	r0, [r4]
   11bb0:	bl	10c48 <realloc@plt>
   11bb4:	mov	r1, r6
   11bb8:	str	r0, [r4]
   11bbc:	bl	10c54 <strcpy@plt>
   11bc0:	mov	r0, r5
   11bc4:	pop	{r4, r5, r6, pc}

00011bc8 <lista_insere@@Base>:
   11bc8:	cmn	r2, #1
   11bcc:	movge	r3, #0
   11bd0:	movlt	r3, #1
   11bd4:	cmp	r0, #0
   11bd8:	moveq	r3, #1
   11bdc:	cmp	r3, #0
   11be0:	beq	11bf4 <lista_insere@@Base+0x2c>
   11be4:	mvn	r0, #0
   11be8:	bx	lr
   11bec:	mvn	r0, #0
   11bf0:	pop	{r4, r5, r6, pc}
   11bf4:	cmp	r2, #0
   11bf8:	beq	11c08 <lista_insere@@Base+0x40>
   11bfc:	ldr	r3, [r0, #4]
   11c00:	cmp	r3, r2
   11c04:	ble	11be4 <lista_insere@@Base+0x1c>
   11c08:	push	{r4, r5, r6, lr}
   11c0c:	mov	r6, r0
   11c10:	mov	r0, r1
   11c14:	mov	r5, r2
   11c18:	ldr	r4, [r6]
   11c1c:	bl	11a4c <novo_str@@Base>
   11c20:	subs	r3, r0, #0
   11c24:	beq	11bec <lista_insere@@Base+0x24>
   11c28:	ldr	r0, [r6, #4]
   11c2c:	cmn	r5, #1
   11c30:	add	r2, r0, #1
   11c34:	str	r2, [r6, #4]
   11c38:	bne	11c64 <lista_insere@@Base+0x9c>
   11c3c:	cmp	r4, #0
   11c40:	bne	11c50 <lista_insere@@Base+0x88>
   11c44:	str	r3, [r6]
   11c48:	pop	{r4, r5, r6, pc}
   11c4c:	mov	r4, r2
   11c50:	ldr	r2, [r4, #4]
   11c54:	cmp	r2, #0
   11c58:	bne	11c4c <lista_insere@@Base+0x84>
   11c5c:	str	r3, [r4, #4]
   11c60:	pop	{r4, r5, r6, pc}
   11c64:	cmp	r5, #0
   11c68:	streq	r4, [r3, #4]
   11c6c:	streq	r3, [r6]
   11c70:	beq	11cac <lista_insere@@Base+0xe4>
   11c74:	mov	r2, #0
   11c78:	sub	r0, r5, #1
   11c7c:	b	11c88 <lista_insere@@Base+0xc0>
   11c80:	mov	r4, r1
   11c84:	add	r2, r2, #1
   11c88:	cmp	r0, r2
   11c8c:	ldr	r1, [r4, #4]
   11c90:	ble	11ca4 <lista_insere@@Base+0xdc>
   11c94:	cmp	r4, #0
   11c98:	bne	11c80 <lista_insere@@Base+0xb8>
   11c9c:	ldr	r3, [r4, #4]
   11ca0:	udf	#0
   11ca4:	str	r1, [r3, #4]
   11ca8:	str	r3, [r4, #4]
   11cac:	mov	r0, r5
   11cb0:	pop	{r4, r5, r6, pc}

00011cb4 <lista_remove@@Base>:
   11cb4:	cmp	r0, #0
   11cb8:	push	{r4, r5, r6, lr}
   11cbc:	lsrne	r3, r1, #31
   11cc0:	moveq	r3, #1
   11cc4:	cmp	r3, #0
   11cc8:	bne	11d4c <lista_remove@@Base+0x98>
   11ccc:	ldr	r2, [r0, #4]
   11cd0:	mov	r4, r1
   11cd4:	cmp	r2, r1
   11cd8:	ble	11d4c <lista_remove@@Base+0x98>
   11cdc:	sub	r2, r2, #1
   11ce0:	cmp	r1, #0
   11ce4:	ldr	r5, [r0]
   11ce8:	str	r2, [r0, #4]
   11cec:	bne	11d1c <lista_remove@@Base+0x68>
   11cf0:	ldr	r3, [r5, #4]
   11cf4:	str	r3, [r0]
   11cf8:	ldr	r0, [r5]
   11cfc:	bl	10c3c <free@plt>
   11d00:	mov	r0, r5
   11d04:	bl	10c3c <free@plt>
   11d08:	mov	r0, r4
   11d0c:	pop	{r4, r5, r6, pc}
   11d10:	mov	ip, r5
   11d14:	add	r3, r3, #1
   11d18:	mov	r5, r2
   11d1c:	cmp	r3, r4
   11d20:	ldr	r2, [r5, #4]
   11d24:	bge	11d30 <lista_remove@@Base+0x7c>
   11d28:	cmp	r2, #0
   11d2c:	bne	11d10 <lista_remove@@Base+0x5c>
   11d30:	ldr	r0, [r5]
   11d34:	mov	r4, #0
   11d38:	str	r2, [ip, #4]
   11d3c:	bl	10c3c <free@plt>
   11d40:	mov	r0, r5
   11d44:	bl	10c3c <free@plt>
   11d48:	b	11d08 <lista_remove@@Base+0x54>
   11d4c:	mvn	r4, #0
   11d50:	b	11d08 <lista_remove@@Base+0x54>

00011d54 <lista_pesquisa@@Base>:
   11d54:	cmp	r0, #0
   11d58:	push	{r4, r5, r6, r7, r8, lr}
   11d5c:	mvneq	r4, #0
   11d60:	beq	11d80 <lista_pesquisa@@Base+0x2c>
   11d64:	mov	r7, r2
   11d68:	mov	r8, r1
   11d6c:	ldr	r6, [r0]
   11d70:	mvn	r4, #0
   11d74:	mov	r5, #0
   11d78:	cmp	r6, #0
   11d7c:	bne	11d88 <lista_pesquisa@@Base+0x34>
   11d80:	mov	r0, r4
   11d84:	pop	{r4, r5, r6, r7, r8, pc}
   11d88:	mov	r1, r8
   11d8c:	ldr	r0, [r6]
   11d90:	bl	10c0c <strcmp@plt>
   11d94:	cmp	r0, #0
   11d98:	bne	11dac <lista_pesquisa@@Base+0x58>
   11d9c:	cmp	r7, #0
   11da0:	beq	11db8 <lista_pesquisa@@Base+0x64>
   11da4:	cmn	r7, #1
   11da8:	moveq	r4, r5
   11dac:	add	r5, r5, #1
   11db0:	ldr	r6, [r6, #4]
   11db4:	b	11d78 <lista_pesquisa@@Base+0x24>
   11db8:	mov	r4, r5
   11dbc:	b	11d80 <lista_pesquisa@@Base+0x2c>

00011dc0 <lista_ordena@@Base>:
   11dc0:	push	{r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11dc4:	subs	r7, r0, #0
   11dc8:	ldrne	r5, [r7]
   11dcc:	bne	11e34 <lista_ordena@@Base+0x74>
   11dd0:	mvn	r0, #0
   11dd4:	b	11e44 <lista_ordena@@Base+0x84>
   11dd8:	ldr	sl, [r4]
   11ddc:	ldr	r0, [r5]
   11de0:	mov	r1, sl
   11de4:	bl	10c0c <strcmp@plt>
   11de8:	cmp	r0, #0
   11dec:	ldrle	r5, [r5, #4]
   11df0:	ble	11e34 <lista_ordena@@Base+0x74>
   11df4:	ldr	r8, [r7]
   11df8:	ldr	r9, [r4, #4]
   11dfc:	mov	fp, r8
   11e00:	mov	r6, r8
   11e04:	str	r9, [r5, #4]
   11e08:	cmp	r9, r5
   11e0c:	beq	11e34 <lista_ordena@@Base+0x74>
   11e10:	mov	r1, sl
   11e14:	ldr	r0, [r6]
   11e18:	bl	10c0c <strcmp@plt>
   11e1c:	cmp	r0, #0
   11e20:	ble	11e4c <lista_ordena@@Base+0x8c>
   11e24:	cmp	r6, r8
   11e28:	str	r6, [r4, #4]
   11e2c:	streq	r4, [r7]
   11e30:	strne	r4, [fp, #4]
   11e34:	ldr	r4, [r5, #4]
   11e38:	cmp	r4, #0
   11e3c:	bne	11dd8 <lista_ordena@@Base+0x18>
   11e40:	mov	r0, r4
   11e44:	add	sp, sp, #4
   11e48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11e4c:	mov	fp, r6
   11e50:	ldr	r6, [r6, #4]
   11e54:	b	11e08 <lista_ordena@@Base+0x48>

00011e58 <lista_compara@@Base>:
   11e58:	mov	r3, r1
   11e5c:	clz	r1, r1
   11e60:	lsr	r1, r1, #5
   11e64:	cmp	r0, #0
   11e68:	moveq	r1, #1
   11e6c:	cmp	r1, #0
   11e70:	bne	11ec8 <lista_compara@@Base+0x70>
   11e74:	ldr	ip, [r0, #4]
   11e78:	ldr	r2, [r3, #4]
   11e7c:	cmp	ip, r2
   11e80:	bne	11ed0 <lista_compara@@Base+0x78>
   11e84:	push	{r4, r5, r6, lr}
   11e88:	ldr	r5, [r0]
   11e8c:	ldr	r4, [r3]
   11e90:	cmp	r5, #0
   11e94:	bne	11ea8 <lista_compara@@Base+0x50>
   11e98:	cmp	r4, #0
   11e9c:	mvnne	r0, #0
   11ea0:	moveq	r0, #1
   11ea4:	pop	{r4, r5, r6, pc}
   11ea8:	ldr	r1, [r4]
   11eac:	ldr	r0, [r5]
   11eb0:	bl	10c0c <strcmp@plt>
   11eb4:	cmp	r0, #0
   11eb8:	bne	11ed8 <lista_compara@@Base+0x80>
   11ebc:	ldr	r4, [r4, #4]
   11ec0:	ldr	r5, [r5, #4]
   11ec4:	b	11e90 <lista_compara@@Base+0x38>
   11ec8:	mvn	r0, #0
   11ecc:	bx	lr
   11ed0:	mov	r0, r1
   11ed4:	bx	lr
   11ed8:	mov	r0, #0
   11edc:	pop	{r4, r5, r6, pc}

00011ee0 <lista_inverte@@Base>:
   11ee0:	push	{r4, r5, r6, lr}
   11ee4:	subs	r4, r0, #0
   11ee8:	bne	11ef8 <lista_inverte@@Base+0x18>
   11eec:	mov	r5, #0
   11ef0:	mov	r0, r5
   11ef4:	pop	{r4, r5, r6, pc}
   11ef8:	bl	11aac <lista_nova@@Base>
   11efc:	subs	r5, r0, #0
   11f00:	ldrne	r4, [r4]
   11f04:	beq	11eec <lista_inverte@@Base+0xc>
   11f08:	cmp	r4, #0
   11f0c:	beq	11ef0 <lista_inverte@@Base+0x10>
   11f10:	mov	r2, #0
   11f14:	mov	r0, r5
   11f18:	ldr	r1, [r4]
   11f1c:	bl	11bc8 <lista_insere@@Base>
   11f20:	ldr	r4, [r4, #4]
   11f24:	b	11f08 <lista_inverte@@Base+0x28>

00011f28 <__libc_csu_init@@Base>:
   11f28:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11f2c:	mov	r7, r0
   11f30:	ldr	r6, [pc, #72]	; 11f80 <__libc_csu_init@@Base+0x58>
   11f34:	ldr	r5, [pc, #72]	; 11f84 <__libc_csu_init@@Base+0x5c>
   11f38:	add	r6, pc, r6
   11f3c:	add	r5, pc, r5
   11f40:	sub	r6, r6, r5
   11f44:	mov	r8, r1
   11f48:	mov	r9, r2
   11f4c:	bl	10be0 <calloc@plt-0x20>
   11f50:	asrs	r6, r6, #2
   11f54:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11f58:	mov	r4, #0
   11f5c:	add	r4, r4, #1
   11f60:	ldr	r3, [r5], #4
   11f64:	mov	r2, r9
   11f68:	mov	r1, r8
   11f6c:	mov	r0, r7
   11f70:	blx	r3
   11f74:	cmp	r6, r4
   11f78:	bne	11f5c <__libc_csu_init@@Base+0x34>
   11f7c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11f80:	ldrdeq	r0, [r1], -r4
   11f84:	andeq	r0, r1, ip, asr #31

00011f88 <__libc_csu_fini@@Base>:
   11f88:	bx	lr

Disassembly of section .fini:

00011f8c <.fini>:
   11f8c:	push	{r3, lr}
   11f90:	pop	{r3, pc}
